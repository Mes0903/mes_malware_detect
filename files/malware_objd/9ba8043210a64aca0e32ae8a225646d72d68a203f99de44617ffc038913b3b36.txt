
9ba8043210a64aca0e32ae8a225646d72d68a203f99de44617ffc038913b3b36.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	jmp    0xd42f:0x96dacbd
  411007:	push   ebx
  411008:	sbb    DWORD PTR [ebx+0x6ac5d1fe],ecx
  41100e:	vrsqrtss xmm6,xmm1,DWORD PTR [eax+ebp*2-0x26d4f683]
  411017:	scas   eax,DWORD PTR es:[edi]
  411018:	push   0xbc851df6
  41101d:	fwait
  41101e:	popa   
  41101f:	ficomp DWORD PTR [ebx+0x1d75fa45]
  411025:	pop    eax
  411026:	jge    0x41107c
  411028:	inc    edi
  411029:	in     al,dx
  41102a:	push   ss
  41102b:	sar    BYTE PTR [esp+edi*8+0x102c3d74],1
  411032:	das    
  411033:	xor    edi,esp
  411035:	mov    esp,0xce39c884
  41103a:	dec    ebp
  41103b:	clc    
  41103c:	pusha  
  41103d:	fnstsw WORD PTR [edi-0x2f2bf7fe]
  411043:	cwde   
  411044:	bswap  eax
  411046:	push   edx
  411047:	gs stos BYTE PTR es:[edi],al
  411049:	fcom   DWORD PTR [ebp+0x65]
  41104c:	not    BYTE PTR [eax+0x33]
  41104f:	dec    esp
  411050:	jno    0x411013
  411052:	shl    DWORD PTR [edi-0x60b24efa],0x34
  411059:	in     eax,dx
  41105a:	aas    
  41105b:	sbb    DWORD PTR [edi-0x7a0ea485],edi
  411061:	outs   dx,DWORD PTR ds:[esi]
  411062:	fsubr  DWORD PTR [edi]
  411064:	mov    ebx,0x90d26cba
  411069:	mov    dh,0xf6
  41106b:	push   edx
  41106c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41106d:	fcom   DWORD PTR [eax+0x5f19b861]
  411073:	outs   dx,DWORD PTR ds:[esi]
  411074:	xor    eax,0x1625e309
  411079:	jp     0x411072
  41107b:	add    BYTE PTR [edx],bl
  41107d:	lock push ebp
  41107f:	gs int 0xc1
  411082:	(bad)  
  411083:	adc    cl,BYTE PTR [ecx+0x78]
  411086:	leave  
  411087:	icebp  
  411088:	daa    
  411089:	pop    es
  41108a:	push   eax
  41108b:	cmc    
  41108c:	ins    DWORD PTR es:[edi],dx
  41108d:	and    dl,BYTE PTR [edi+ebx*8-0x59f67735]
  411094:	test   al,0xc4
  411096:	sbb    eax,ebx
  411098:	or     DWORD PTR [ecx],esp
  41109a:	and    ch,BYTE PTR [ebx-0x44]
  41109d:	aaa    
  41109e:	and    eax,0xc82f6aca
  4110a3:	enter  0x15ce,0x54
  4110a7:	xor    esp,DWORD PTR [esi+0x4b927a96]
  4110ad:	shr    BYTE PTR [esp+eiz*4-0x6b],1
  4110b1:	mov    ch,0x4f
  4110b3:	fdivr  DWORD PTR [eax-0xa]
  4110b6:	ss popf 
  4110b8:	or     BYTE PTR [esi],dl
  4110ba:	shl    eax,cl
  4110bc:	lods   eax,DWORD PTR ds:[esi]
  4110bd:	std    
  4110be:	test   eax,0xb874de9
  4110c3:	js     0x411139
  4110c5:	inc    edx
  4110c6:	mov    ch,0x8d
  4110c8:	inc    ebp
  4110c9:	(bad)  
  4110ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110cb:	in     eax,dx
  4110cc:	das    
  4110cd:	ret    
  4110ce:	and    eax,0x8087d360
  4110d3:	outs   dx,DWORD PTR ds:[esi]
  4110d4:	dec    esi
  4110d5:	lahf   
  4110d6:	inc    edx
  4110d7:	adc    cl,BYTE PTR [ecx+0x55d1f3e6]
  4110dd:	test   DWORD PTR [edi],eax
  4110df:	cmp    al,0x61
  4110e1:	mov    ss,esi
  4110e3:	in     eax,dx
  4110e4:	test   ah,ah
  4110e6:	pop    es
  4110e7:	push   edi
  4110e8:	pop    edi
  4110e9:	xor    bh,BYTE PTR [edx]
  4110eb:	es mov edx,0xa83e2c01
  4110f1:	pop    edx
  4110f2:	adc    eax,0x33154230
  4110f7:	sbb    ch,BYTE PTR [edx+0x3]
  4110fa:	ja     0x411176
  4110fc:	test   BYTE PTR [ebx-0x5b4d2fdc],dh
  411102:	mov    cl,0x2b
  411104:	aam    0xc8
  411106:	sbb    al,BYTE PTR [esi-0x622f96a0]
  41110c:	lds    ebx,FWORD PTR [edi]
  41110e:	sub    al,0xd4
  411110:	pushf  
  411111:	out    dx,al
  411112:	and    eax,0x498325ca
  411117:	pop    ebx
  411118:	inc    esi
  411119:	xor    BYTE PTR [eax+0x59],0xab
  41111d:	push   ebx
  41111e:	mov    ebx,0x61d33aba
  411123:	retf   0x8451
  411126:	inc    ebp
  411127:	retf   
  411128:	fbld   TBYTE PTR [ecx]
  41112a:	dec    ebp
  41112b:	fcmove st,st(6)
  41112d:	daa    
  41112e:	fdiv   st,st(2)
  411130:	mov    dh,BYTE PTR [esp+edi*4]
  411133:	fisubr DWORD PTR [esi+ebx*1+0x3c6bfb0b]
  41113a:	dec    eax
  41113b:	add    ebx,eax
  41113d:	adc    esi,edx
  41113f:	test   eax,eax
  411141:	sbb    bh,BYTE PTR ds:0xa1d1e8b9
  411147:	xchg   esp,eax
  411148:	pop    ebx
  411149:	enter  0x9d2d,0x27
  41114d:	hlt    
  41114e:	jae    0x4110da
  411150:	xchg   edi,eax
  411151:	aaa    
  411152:	xor    al,0x7
  411154:	add    edi,eax
  411156:	nop
  411157:	or     ecx,DWORD PTR [eax-0x35]
  41115a:	sub    al,0x8d
  41115c:	aaa    
  41115d:	daa    
  41115e:	or     DWORD PTR [edi+0x54b574ca],ecx
  411164:	pop    ds
  411165:	lahf   
  411166:	iret   
  411167:	out    dx,al
  411168:	or     cl,BYTE PTR [esi]
  41116a:	jp     0x41115e
  41116c:	pop    ds
  41116d:	ret    
  41116e:	cmp    ebx,esi
  411170:	xchg   edi,eax
  411171:	enter  0x70da,0x7a
  411175:	test   BYTE PTR [eax+0x6ab6cfd9],al
  41117b:	stos   BYTE PTR es:[edi],al
  41117c:	inc    esp
  41117d:	push   ds
  41117e:	add    dl,BYTE PTR [ebp-0x3f]
  411181:	in     eax,dx
  411182:	int    0xb4
  411184:	sbb    eax,DWORD PTR [eax-0x18]
  411187:	into   
  411188:	fmul   DWORD PTR [ebx-0x25]
  41118b:	leave  
  41118c:	shl    ah,cl
  41118e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41118f:	adc    edx,DWORD PTR gs:[edi+0x70dac844]
  411196:	repnz ror DWORD PTR [edi-0x25],0x3c
  41119b:	pop    eax
  41119c:	cmp    eax,edx
  41119e:	gs xor al,0x84
  4111a1:	jge    0x41113c
  4111a3:	ds inc ecx
  4111a5:	loop   0x411180
  4111a7:	mov    dh,0xa6
  4111a9:	dec    ebx
  4111aa:	xor    bl,dh
  4111ac:	adc    ecx,ebp
  4111ae:	sub    eax,0x1b70fe86
  4111b3:	mov    esi,0x4ae207fe
  4111b8:	xor    ah,BYTE PTR [edx-0x7e51aef8]
  4111be:	xor    ecx,esi
  4111c0:	ficomp DWORD PTR [ecx+0x70a9773a]
  4111c6:	xchg   BYTE PTR [esi+0x4ce6e145],dh
  4111cc:	int3   
  4111cd:	pop    ebp
  4111ce:	or     DWORD PTR [esi],ebp
  4111d0:	idiv   DWORD PTR [esi]
  4111d2:	loope  0x41119d
  4111d4:	in     eax,dx
  4111d5:	sub    DWORD PTR [edi+0x39c511c5],0x21995ae
  4111df:	enter  0x1a02,0x8b
  4111e3:	and    al,0x89
  4111e5:	std    
  4111e6:	xor    DWORD PTR [eax-0x1a],0xffffffb1
  4111ea:	clc    
  4111eb:	int3   
  4111ec:	stos   BYTE PTR es:[edi],al
  4111ed:	and    ah,BYTE PTR [edx]
  4111ef:	push   edi
  4111f0:	arpl   WORD PTR [edx-0x36],bp
  4111f3:	dec    ebx
  4111f4:	or     bl,BYTE PTR [edi+0x450551ea]
  4111fa:	mov    ebx,0x7073b15d
  4111ff:	shr    DWORD PTR [edi-0x4fc16b4f],0xb2
  411206:	call   0xa713440e
  41120b:	xor    eax,0xee83929
  411210:	mov    ch,0x6a
  411212:	fld    DWORD PTR [esi+0x16efef6]
  411218:	xchg   esp,eax
  411219:	test   BYTE PTR [eax],ch
  41121b:	clc    
  41121c:	stc    
  41121d:	fnsave [edx+edx*2+0x12f9d5c9]
  411224:	pop    ecx
  411225:	ins    DWORD PTR es:[edi],dx
  411226:	pop    ecx
  411227:	outs   dx,BYTE PTR ds:[esi]
  411228:	dec    eax
  411229:	cmc    
  41122a:	call   0x5342:0xde0a4417
  411231:	lds    ecx,FWORD PTR [ebx]
  411233:	adc    bh,BYTE PTR [ebx+0x50]
  411236:	mov    dl,0xa4
  411238:	mov    ds:0x8145bd3e,eax
  41123d:	or     cl,al
  41123f:	adc    DWORD PTR [eax+0x40],esp
  411242:	adc    ch,BYTE PTR [ebx-0x23]
  411245:	(bad)  
  411246:	dec    ebx
  411247:	fistp  WORD PTR [ecx]
  411249:	xor    eax,0x1aa46215
  41124e:	out    0x20,eax
  411250:	clc    
  411251:	push   esi
  411252:	xchg   ecx,eax
  411253:	cli    
  411254:	cmp    eax,0x88253dfd
  411259:	add    eax,0x51b75078
  41125e:	pop    esp
  41125f:	xor    eax,0xa5674f48
  411264:	call   0xa73e:0xba5194a6
  41126b:	sbb    esp,esi
  41126d:	test   DWORD PTR [ebp+eax*4-0x69],eax
  411271:	pop    ss
  411272:	push   0x38
  411274:	push   esp
  411275:	dec    esi
  411276:	jg     0x411241
  411278:	jge    0x41126e
  41127a:	jbe    0x41126b
  41127c:	fs push ecx
  41127e:	mov    al,0x97
  411280:	mov    dl,0x2c
  411282:	add    ebx,esi
  411284:	inc    esi
  411285:	mov    dh,0xdc
  411287:	or     eax,0x9d81ce72
  41128c:	outs   dx,DWORD PTR ds:[esi]
  41128d:	sub    DWORD PTR [eax],edx
  41128f:	mov    al,ds:0x8c5f37c
  411294:	push   ecx
  411295:	rcr    BYTE PTR [ecx-0x30],1
  411298:	pop    es
  411299:	cli    
  41129a:	pusha  
  41129b:	jg     0x411243
  41129d:	leave  
  41129e:	or     eax,0x327b62
  4112a3:	les    ebp,FWORD PTR [eax]
  4112a5:	jmp    0x4112b9
  4112a7:	dec    ebx
  4112a8:	out    dx,al
  4112a9:	fnstcw WORD PTR [ebp+0x12]
  4112ac:	mov    DWORD PTR [ebx+0x46],0xd7c8849f
  4112b3:	leave  
  4112b4:	mov    bl,0xa9
  4112b6:	add    BYTE PTR [eax-0x3654379c],al
  4112bc:	outs   dx,DWORD PTR es:[esi]
  4112be:	jmp    0x4112d0
  4112c0:	xchg   BYTE PTR [esi],ch
  4112c2:	mov    ah,bl
  4112c4:	add    ah,BYTE PTR [edx+0x4]
  4112c7:	jecxz  0x411338
  4112c9:	mov    eax,0x35cfdc2c
  4112ce:	loop   0x41134b
  4112d0:	push   esp
  4112d1:	jmp    DWORD PTR [ecx+0x443ddee5]
  4112d7:	cmp    al,0x39
  4112d9:	(bad)  
  4112da:	mov    eax,0xf35040be
  4112df:	in     eax,0x2d
  4112e1:	sub    al,0xae
  4112e3:	push   cs
  4112e4:	stos   BYTE PTR es:[edi],al
  4112e5:	out    dx,al
  4112e6:	scas   eax,DWORD PTR es:[edi]
  4112e7:	lods   eax,DWORD PTR ds:[esi]
  4112e8:	cmp    BYTE PTR [ecx],0xd6
  4112eb:	or     DWORD PTR [ecx],eax
  4112ed:	outs   dx,DWORD PTR ds:[esi]
  4112ee:	es dec edi
  4112f0:	out    0x56,eax
  4112f2:	cld    
  4112f3:	adc    al,0xe9
  4112f5:	std    
  4112f6:	shl    BYTE PTR [di-0x2dde],0x26
  4112fc:	hlt    
  4112fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112fe:	pop    esp
  4112ff:	test   BYTE PTR [esi+0x76],dh
  411302:	nop
  411303:	xor    DWORD PTR [ebp-0x30],esp
  411306:	xchg   BYTE PTR [edx+edi*4+0x38],bl
  41130a:	pextrw esi,mm1,0xa4
  41130e:	mov    ds:0x1485651f,al
  411313:	xchg   ebx,eax
  411314:	push   ebx
  411315:	int    0x6f
  411317:	inc    ebp
  411318:	stc    
  411319:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41131a:	into   
  41131b:	movntps XMMWORD PTR [edi+eax*1],xmm3
  41131f:	mov    ebp,0xd2a7c632
  411324:	leave  
  411325:	imul   al
  411327:	or     eax,0xbc11b8c0
  41132c:	retf   0x31c9
  41132f:	xchg   ebx,eax
  411330:	stos   BYTE PTR es:[edi],al
  411331:	in     eax,dx
  411332:	or     BYTE PTR [ecx+0x3a],cl
  411335:	xlat   BYTE PTR ds:[bx]
  411337:	jmp    0x104d:0x9bdf580
  41133e:	add    eax,0x6aa6722e
  411343:	sbb    eax,DWORD PTR [ecx-0x783b8feb]
  411349:	mov    al,0xc8
  41134b:	cmp    eax,ebp
  41134d:	add    al,0x65
  41134f:	xor    ecx,ebp
  411351:	xchg   esi,eax
  411352:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411353:	adc    al,0xc6
  411355:	jae    0x41138f
  411357:	mov    dh,0x9
  411359:	xlat   BYTE PTR ds:[ebx]
  41135a:	cmp    al,0xff
  41135c:	sub    DWORD PTR [eax+eiz*2-0x29ac5f37],ebp
  411363:	sbb    eax,0x192f61a
  411368:	mul    DWORD PTR [edx+0x56]
  41136b:	cld    
  41136c:	sbb    bl,BYTE PTR [esi]
  41136e:	ds call 0xbbd9:0xb74e2626
  411376:	test   al,0x9
  411378:	push   ss
  411379:	jmp    0xddb13212
  41137e:	or     al,cl
  411380:	outs   dx,DWORD PTR ds:[esi]
  411381:	fnstcw WORD PTR [edx+0x32]
  411384:	in     al,0x1a
  411386:	add    al,0x83
  411388:	scas   al,BYTE PTR es:[edi]
  411389:	fsubr  DWORD PTR [edx+0x31]
  41138c:	jl     0x4113de
  41138e:	pusha  
  41138f:	out    dx,eax
  411390:	test   BYTE PTR [edi],dh
  411392:	call   0x22c717a1
  411397:	lods   al,BYTE PTR ds:[esi]
  411398:	cli    
  411399:	pusha  
  41139a:	imul   edi,DWORD PTR [edi+0x376d8868],0xffffffe1
  4113a1:	mov    edi,0x4e628299
  4113a6:	jl     0x411345
  4113a8:	lods   al,BYTE PTR ds:[esi]
  4113a9:	bound  esi,QWORD PTR [ebx-0x12]
  4113ac:	das    
  4113ad:	fistp  WORD PTR [ebp+0x51]
  4113b0:	pop    ebp
  4113b1:	xchg   esp,eax
  4113b2:	and    eax,0x77604d48
  4113b7:	cmp    ecx,DWORD PTR [edi-0x41]
  4113ba:	mov    ah,0x25
  4113bc:	or     dh,ah
  4113be:	je     0x4113e2
  4113c0:	icebp  
  4113c1:	shl    DWORD PTR [ecx-0x7d],cl
  4113c4:	cdq    
  4113c5:	jmp    0x83d4c962
  4113ca:	sub    edx,ecx
  4113cc:	and    DWORD PTR [ebx-0x586cb1cd],edi
  4113d2:	imul   ecx,DWORD PTR ds:0x839094d1,0x18
  4113d9:	shl    DWORD PTR [esi],0xcc
  4113dc:	mov    bh,bl
  4113de:	sahf   
  4113df:	cmp    eax,0x22520f0c
  4113e4:	das    
  4113e5:	mov    esi,0xa22c053a
  4113ea:	xchg   edi,eax
  4113eb:	ins    DWORD PTR es:[edi],dx
  4113ec:	and    ebp,DWORD PTR [ebx+0x35390536]
  4113f2:	cwde   
  4113f3:	in     al,0x28
  4113f5:	icebp  
  4113f6:	jae    0x41144a
  4113f8:	pop    ds
  4113f9:	test   al,0xa9
  4113fb:	sub    al,0xeb
  4113fd:	pop    esi
  4113fe:	cmpxchg DWORD PTR [eax+0x6e],edi
  411402:	xor    edi,DWORD PTR [edx+0x4d]
  411405:	add    BYTE PTR [eax-0x55],ch
  411408:	fs jbe 0x4113c4
  41140b:	mul    BYTE PTR [ebp+0x24]
  41140e:	xchg   edi,eax
  41140f:	mov    esi,0xac41b8c7
  411414:	ss in  al,0xb8
  411417:	lds    ebp,FWORD PTR [edx]
  411419:	fs adc eax,0x958284a6
  41141f:	cmp    eax,DWORD PTR [edi]
  411421:	jl     0x411467
  411423:	xor    al,0x0
  411425:	add    al,0x5a
  411427:	je     0x4113e4
  411429:	push   0xfffffffa
  41142b:	pop    ebp
  41142c:	adc    ebx,DWORD PTR [eax-0x59d1f743]
  411432:	sbb    cl,al
  411434:	or     BYTE PTR [edi+0x3f],ch
  411437:	ret    
  411438:	ins    BYTE PTR es:[edi],dx
  411439:	sbb    BYTE PTR [ebp-0x1b],ch
  41143c:	dec    ecx
  41143d:	adc    eax,0xb0fcff90
  411442:	scas   al,BYTE PTR es:[edi]
  411443:	jg     0x4113e5
  411445:	xchg   edi,eax
  411446:	inc    esi
  411447:	mov    eax,ds:0x904c51f5
  41144c:	test   BYTE PTR [ebx+0x6773ab87],0x49
  411453:	push   0x94f00774
  411458:	ins    DWORD PTR es:[edi],dx
  411459:	jecxz  0x4113e4
  41145b:	fisttp WORD PTR [edi-0x43]
  41145e:	dec    ebx
  41145f:	xchg   ebp,eax
  411460:	mov    ecx,ds
  411462:	mov    eax,0x3e752a40
  411467:	popa   
  411468:	xchg   edi,eax
  411469:	out    dx,eax
  41146a:	push   esi
  41146b:	pusha  
  41146c:	cmp    ebx,DWORD PTR ds:0xebcb0cb3
  411472:	xor    DWORD PTR [ebx+esi*1+0x11],edi
  411476:	leave  
  411477:	add    DWORD PTR [edi],ebp
  411479:	lds    esi,FWORD PTR [eax]
  41147b:	lock pop esp
  41147d:	imul   ecx,DWORD PTR [ecx],0x4379ffb9
  411483:	rol    ecx,0x68
  411486:	addr16 daa 
  411488:	test   eax,0x89f62cce
  41148d:	xlat   BYTE PTR ds:[ebx]
  41148e:	mov    al,0xa1
  411490:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411491:	or     edi,DWORD PTR [edx-0x570848f2]
  411497:	pop    ss
  411498:	mov    al,0x9b
  41149a:	daa    
  41149b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41149c:	add    al,0x8a
  41149f:	nop
  4114a0:	pop    ecx
  4114a1:	addr16 aam 0xe5
  4114a4:	lea    eax,[ecx+ebp*2-0x20]
  4114a8:	adc    BYTE PTR [ecx+0x54389321],ah
  4114ae:	mov    BYTE PTR [ecx-0x71],dh
  4114b1:	arpl   sp,cx
  4114b3:	push   edx
  4114b4:	std    
  4114b5:	mov    ebx,esp
  4114b7:	and    eax,0xa64561fd
  4114bc:	add    al,0xa5
  4114be:	sbb    ah,BYTE PTR [esi+0xa]
  4114c1:	or     edi,esi
  4114c3:	outs   dx,DWORD PTR ds:[esi]
  4114c4:	sar    DWORD PTR [ecx-0xe7abf19],cl
  4114ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114cb:	leave  
  4114cc:	mov    eax,0x101c9899
  4114d1:	les    eax,FWORD PTR [edi]
  4114d3:	mov    esi,0x9e4aa940
  4114d8:	call   0xbf33:0x515210fb
  4114df:	adc    ah,bl
  4114e1:	test   DWORD PTR [eax+0x6e],ecx
  4114e4:	mov    dl,0x6
  4114e6:	in     al,0xf6
  4114e8:	inc    edi
  4114e9:	rcl    ch,1
  4114eb:	pop    es
  4114ec:	fcomp  QWORD PTR [edx]
  4114ee:	int    0x66
  4114f0:	shl    BYTE PTR [edx+0x1],1
  4114f3:	and    al,0x54
  4114f5:	fwait
  4114f6:	nop
  4114f7:	mov    eax,DWORD PTR [ecx+ecx*2-0x56e8ab74]
  4114fe:	popf   
  4114ff:	xor    eax,0x57fb7be5
  411504:	jmp    0x2598:0x6fe1fb7c
  41150b:	lds    edx,FWORD PTR [ecx-0xf]
  41150e:	retf   
  41150f:	aaa    
  411510:	xor    ecx,esp
  411512:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411513:	(bad)  
  411514:	retf   
  411515:	test   al,0xb
  411517:	fsub   QWORD PTR [eax]
  411519:	pop    eax
  41151a:	inc    edx
  41151b:	inc    ecx
  41151c:	lea    ebx,[edx+0x4eab3cbd]
  411522:	ins    DWORD PTR es:[edi],dx
  411523:	fstp   QWORD PTR [eax+0x58]
  411526:	push   esi
  411527:	test   BYTE PTR fs:[esi+0x52],0x42
  41152c:	cdq    
  41152d:	push   es
  41152e:	push   eax
  41152f:	jp     0x4115a8
  411531:	xchg   ecx,eax
  411532:	outs   dx,BYTE PTR ds:[esi]
  411533:	cli    
  411534:	dec    ebp
  411535:	jle    0x41154a
  411537:	cmp    ebp,ebx
  411539:	mov    bl,BYTE PTR [ebx+0x5c]
  41153c:	jae    0x4114f7
  41153e:	sbb    al,0x7e
  411540:	mov    eax,ds:0xf763a5c2
  411545:	inc    esp
  411546:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411547:	ins    DWORD PTR es:[edi],dx
  411548:	stos   BYTE PTR es:[edi],al
  411549:	pop    ss
  41154a:	jnp    0x4114ee
  41154c:	sub    esi,DWORD PTR ds:0x90cdbdd
  411552:	jnp    0x411597
  411554:	adc    eax,0x186c518f
  411559:	push   ecx
  41155a:	stos   DWORD PTR es:[edi],eax
  41155b:	lods   eax,DWORD PTR ds:[esi]
  41155c:	test   eax,0x8d905698
  411561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411562:	inc    eax
  411563:	loop   0x41157c
  411565:	sub    al,0xf9
  411567:	js     0x41154e
  411569:	imul   ebp,DWORD PTR ds:[ebx+0x1d],0x4158a3d1
  411571:	mov    edx,0x2dbc5234
  411576:	and    edi,DWORD PTR [eax+0x23c7ed57]
  41157c:	sbb    esp,edx
  41157e:	sub    esi,DWORD PTR [edx-0x5eeb33da]
  411584:	push   0x10
  411586:	std    
  411587:	fwait
  411588:	add    BYTE PTR [ecx+0x1e],ch
  41158b:	stc    
  41158c:	sub    eax,0x29eb614f
  411591:	inc    esi
  411592:	xchg   edx,eax
  411593:	sub    al,BYTE PTR [edx]
  411595:	cmp    al,0xf9
  411597:	clc    
  411598:	xlat   BYTE PTR ds:[ebx]
  411599:	cdq    
  41159a:	dec    esi
  41159b:	icebp  
  41159c:	jle    0x411581
  41159e:	push   0x7df0868e
  4115a3:	nop
  4115a4:	inc    edx
  4115a5:	ins    DWORD PTR es:[edi],dx
  4115a6:	retf   0x3250
  4115a9:	pop    ebp
  4115aa:	add    bl,BYTE PTR [esi]
  4115ac:	out    0x29,eax
  4115ae:	ror    DWORD PTR [ebp+0x47],cl
  4115b1:	push   edx
  4115b2:	mov    bl,0x49
  4115b4:	cmp    al,0xbd
  4115b6:	mov    edi,0x73d05373
  4115bb:	dec    edi
  4115bc:	pop    ecx
  4115bd:	or     edi,edi
  4115bf:	xchg   edi,eax
  4115c0:	out    dx,eax
  4115c1:	jle    0x4115d5
  4115c3:	imul   eax,DWORD PTR [esi+edx*2],0x50ffc8e7
  4115ca:	call   FWORD PTR [esi-0x45]
  4115cd:	pop    es
  4115ce:	lods   al,BYTE PTR ds:[esi]
  4115cf:	cdq    
  4115d0:	xchg   edx,eax
  4115d1:	jl     0x411581
  4115d3:	call   0x72fe4fcf
  4115d8:	arpl   WORD PTR [ecx],bp
  4115da:	ins    DWORD PTR es:[edi],dx
  4115db:	adc    eax,DWORD PTR [esi-0x1f2786eb]
  4115e1:	push   es
  4115e2:	cmc    
  4115e3:	je     0x41164f
  4115e5:	dec    eax
  4115e6:	test   eax,0x3294dd89
  4115eb:	mov    dl,0x22
  4115ed:	loope  0x4115e1
  4115ef:	mov    ebp,DWORD PTR [esi+0x6525ad5]
  4115f5:	pop    edx
  4115f6:	enter  0x18d7,0x44
  4115fa:	es push eax
  4115fc:	push   es
  4115fd:	inc    eax
  4115fe:	mov    ecx,0x4c4abe1f
  411603:	jmp    0xe42d5be
  411608:	push   esi
  411609:	(bad)  
  41160a:	(bad)  
  41160b:	mul    DWORD PTR [edi-0x44]
  41160e:	scas   eax,DWORD PTR es:[edi]
  41160f:	out    0x2c,eax
  411611:	jne    0x41160c
  411613:	retf   
  411614:	mov    cl,0xa5
  411616:	out    0xef,eax
  411618:	in     eax,0xc5
  41161a:	jo     0x4115c6
  41161c:	fist   DWORD PTR [edi-0x8dc7db4]
  411622:	mov    ds:0x1696158b,eax
  411627:	out    0xbe,al
  411629:	mov    al,0x9d
  41162b:	mov    cl,0x2d
  41162d:	outs   dx,DWORD PTR ds:[esi]
  41162e:	and    eax,0xde7e350f
  411633:	push   ecx
  411634:	sbb    ecx,ebp
  411636:	pop    eax
  411637:	pop    eax
  411638:	lods   al,BYTE PTR ds:[esi]
  411639:	or     edx,ebp
  41163b:	mov    dh,0x1
  41163d:	jp     0x41165e
  41163f:	scas   eax,DWORD PTR es:[edi]
  411640:	jne    0x4115ef
  411642:	add    bl,BYTE PTR [eax+0x18]
  411645:	cmp    BYTE PTR [edx-0x16],bh
  411648:	pop    ss
  411649:	lahf   
  41164a:	mov    ebp,0xd26be3e3
  41164f:	stos   BYTE PTR es:[edi],al
  411650:	xor    bl,BYTE PTR [eax]
  411652:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411653:	push   edi
  411654:	stc    
  411655:	hlt    
  411656:	jmp    FWORD PTR [eax+0x11]
  411659:	loopne 0x4116b0
  41165b:	jp     0x411689
  41165d:	cld    
  41165e:	dec    eax
  41165f:	sbb    al,BYTE PTR [ebp+0x657a4c6b]
  411665:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411666:	idiv   BYTE PTR [ecx+0x4d208458]
  41166c:	lahf   
  41166d:	mov    ah,0x6b
  41166f:	(bad)  
  411670:	mov    esp,DWORD PTR [edx-0x29dc3f5]
  411676:	icebp  
  411677:	push   eax
  411678:	push   esi
  411679:	enter  0xc82c,0xa4
  41167d:	mov    edx,0x204dd20f
  411682:	mov    ch,0x34
  411684:	sti    
  411685:	das    
  411686:	sahf   
  411687:	push   edi
  411688:	outs   dx,BYTE PTR ds:[esi]
  411689:	inc    esp
  41168a:	pop    esi
  41168b:	push   ebp
  41168c:	sbb    edx,DWORD PTR [ebx]
  41168e:	mov    ecx,0xf84f6227
  411693:	sub    bh,BYTE PTR [edx+ebx*8]
  411696:	cmp    bh,BYTE PTR [ebp+0x6f]
  411699:	jo     0x4116f0
  41169b:	inc    edi
  41169c:	pushf  
  41169d:	rcr    BYTE PTR [ecx],cl
  41169f:	test   eax,0xe0cd2dfa
  4116a4:	pushf  
  4116a5:	ins    BYTE PTR es:[edi],dx
  4116a6:	(bad)  
  4116a7:	dec    esi
  4116a8:	cmp    eax,0x444da533
  4116ad:	pop    ds
  4116ae:	call   0x1ec5f102
  4116b3:	call   ebx
  4116b5:	or     ch,dh
  4116b7:	aam    0x63
  4116b9:	push   0xcc231b67
  4116be:	adc    BYTE PTR [esi],bl
  4116c0:	jg     0x4116c9
  4116c2:	push   ebx
  4116c3:	pop    ss
  4116c4:	xchg   ecx,eax
  4116c5:	mov    ds:0x9efeab98,al
  4116ca:	ret    0x55dc
  4116cd:	ins    DWORD PTR es:[edi],dx
  4116ce:	mov    cl,0x20
  4116d0:	mov    WORD PTR [eax+0x6d],ss
  4116d3:	xlat   BYTE PTR ds:[ebx]
  4116d4:	mov    BYTE PTR [ecx+0x77],cl
  4116d7:	jecxz  0x4116a8
  4116d9:	and    ah,cl
  4116db:	ret    
  4116dc:	adc    ecx,ebp
  4116de:	add    ecx,esi
  4116e0:	scas   al,BYTE PTR es:[edi]
  4116e1:	js     0x411762
  4116e3:	mov    dh,0x2
  4116e5:	jnp    0x411726
  4116e7:	fcom   QWORD PTR [ebx]
  4116e9:	push   edi
  4116ea:	stc    
  4116eb:	in     al,0x12
  4116ed:	idiv   BYTE PTR [ecx+0x5b1372ad]
  4116f3:	dec    ecx
  4116f4:	scas   al,BYTE PTR es:[edi]
  4116f5:	pop    edi
  4116f6:	jne    0x4116e9
  4116f8:	xchg   ebp,eax
  4116f9:	(bad)  
  4116fa:	mov    ebx,0xce1f77d
  4116ff:	stc    
  411700:	pop    esp
  411701:	fcomp  st(3)
  411703:	loope  0x411752
  411705:	adc    al,0x68
  411707:	jmp    0x6b889156
  41170c:	push   ebp
  41170d:	and    bh,BYTE PTR [ecx-0x6ec625a0]
  411713:	jle    0x411785
  411715:	leave  
  411716:	mov    bl,0x9c
  411718:	adc    eax,0x922ce860
  41171d:	xor    BYTE PTR [ecx],cl
  41171f:	jle    0x41177b
  411721:	or     edx,DWORD PTR [ecx]
  411723:	(bad)  
  411724:	in     eax,dx
  411725:	mov    esp,0xaf419329
  41172a:	jae    0x4116e2
  41172c:	mov    BYTE PTR [edi],dh
  41172e:	out    dx,al
  41172f:	pop    es
  411730:	mov    ds:0x4a7e725,al
  411735:	js     0x4116cf
  411737:	fs loop 0x411714
  41173a:	nop
  41173b:	xchg   bl,dh
  41173d:	cmp    bh,BYTE PTR [eax+0x64196ca8]
  411743:	retf   
  411744:	(bad)  
  411745:	and    esp,DWORD PTR [edx+0x63126cc6]
  41174b:	aam    0x4b
  41174d:	into   
  41174e:	mov    al,0x94
  411750:	sbb    al,0x69
  411752:	lahf   
  411753:	sub    BYTE PTR [edi-0xe1f3230],0xc5
  41175a:	mov    cs,esp
  41175c:	shl    edx,cl
  41175e:	das    
  41175f:	stos   DWORD PTR es:[edi],eax
  411760:	mov    ebx,0x540eea0
  411765:	add    al,0x15
  411767:	pop    ecx
  411768:	cmp    eax,0x82bb7046
  41176d:	aas    
  41176e:	sbb    DWORD PTR [ecx+0x27a2251f],edi
  411774:	ja     0x4117c5
  411776:	and    cl,BYTE PTR [edx]
  411778:	sbb    DWORD PTR [ecx-0x15],ebp
  41177b:	call   0xfdd4:0xecde8c01
  411782:	call   0xfc88:0x153fa3a2
  411789:	repnz and DWORD PTR [edi+0x54],esi
  41178d:	push   0xffffff9e
  41178f:	mov    BYTE PTR [ebp+0x1fb712cb],dh
  411795:	enter  0xefac,0x5
  411799:	ins    DWORD PTR es:[edi],dx
  41179a:	ror    bl,1
  41179c:	and    DWORD PTR [ecx+0x27],edi
  41179f:	loopne 0x41178c
  4117a1:	(bad)  
  4117a2:	shl    al,1
  4117a4:	xor    ah,BYTE PTR [edx]
  4117a6:	gs mov ebx,ebp
  4117a9:	dec    ebp
  4117aa:	pop    eax
  4117ab:	xor    al,0x61
  4117ad:	mov    gs,WORD PTR [edx]
  4117af:	sub    esp,ecx
  4117b1:	neg    DWORD PTR [edi]
  4117b3:	add    BYTE PTR [esp+esi*4+0xb53dc13],0xec
  4117bb:	xchg   esp,eax
  4117bc:	pop    es
  4117bd:	ret    0x9b38
  4117c0:	mov    ah,0x85
  4117c2:	sub    al,0x8f
  4117c4:	mov    ah,0x67
  4117c6:	cld    
  4117c7:	mov    al,0xae
  4117c9:	cmc    
  4117ca:	inc    edx
  4117cb:	rcr    edi,1
  4117cd:	sbb    ecx,DWORD PTR [edx+0x55b1197b]
  4117d3:	stos   BYTE PTR es:[edi],al
  4117d4:	mov    edx,DWORD PTR [ecx-0x53]
  4117d7:	inc    edx
  4117d8:	fild   QWORD PTR [edi+0x253b08b9]
  4117de:	popa   
  4117df:	adc    al,0x18
  4117e1:	cs lock scas eax,DWORD PTR es:[edi]
  4117e4:	mov    ebx,0x8bec93c8
  4117e9:	mov    ch,0xb2
  4117eb:	mov    ch,0xd
  4117ed:	adc    cl,BYTE PTR [ecx+eax*8-0x7e]
  4117f1:	call   0x65090f1
  4117f6:	and    bl,BYTE PTR [edx]
  4117f8:	pusha  
  4117f9:	jl     0x411784
  4117fb:	xchg   ecx,eax
  4117fc:	pop    ecx
  4117fd:	call   FWORD PTR [esi+0xc]
  411800:	push   edx
  411801:	ins    DWORD PTR es:[edi],dx
  411802:	dec    edx
  411803:	inc    edx
  411804:	pop    edx
  411805:	repz icebp 
  411807:	mov    BYTE PTR [eax],ah
  411809:	test   eax,0x98bbef5a
  41180e:	push   es
  41180f:	imul   eax,DWORD PTR [ebx+eiz*8+0x2d],0x4
  411814:	dec    ebx
  411815:	dec    BYTE PTR [ecx-0x54]
  411818:	cmp    DWORD PTR [ecx+0x17],edi
  41181b:	daa    
  41181c:	out    dx,al
  41181d:	sub    bh,BYTE PTR [ecx-0x5b]
  411820:	jnp    0x41180d
  411822:	push   ds
  411823:	(bad)
  411826:	xlat   BYTE PTR ds:[ebx]
  411827:	lods   eax,DWORD PTR ds:[esi]
  411828:	push   cs
  411829:	xchg   ecx,eax
  41182a:	fstp   DWORD PTR [eax-0x7]
  41182d:	mov    ecx,0xce5458e6
  411832:	jmp    0x5abde137
  411837:	pop    esi
  411838:	cmp    eax,0xe9bf8f48
  41183d:	test   DWORD PTR [ebp+0x5a],eax
  411840:	bound  ebp,QWORD PTR [esp+edi*8+0x3c6d86d0]
  411847:	or     ch,BYTE PTR [ecx]
  411849:	pop    ebp
  41184a:	inc    edx
  41184b:	xlat   BYTE PTR ds:[ebx]
  41184c:	stos   BYTE PTR es:[edi],al
  41184d:	adc    dl,dh
  41184f:	shr    BYTE PTR [esi],1
  411851:	fisub  DWORD PTR [eax-0x44cd717e]
  411857:	fld    QWORD PTR [eax]
  411859:	jmp    0x184883cc
  41185e:	lahf   
  41185f:	dec    ebp
  411860:	(bad)  
  411861:	mov    al,0xff
  411863:	adc    al,0xbf
  411865:	test   ebx,edx
  411867:	jnp    0x4118df
  411869:	push   eax
  41186a:	fisttp WORD PTR ds:0xc186ec92
  411870:	cmp    al,0xce
  411872:	mov    ds:0x97dfef6c,eax
  411877:	popf   
  411878:	js     0x411872
  41187a:	sub    BYTE PTR [ebx-0x7b],al
  41187d:	not    BYTE PTR [ebp-0x123fe7]
  411883:	fcmovne st,st(4)
  411885:	repz clc 
  411887:	in     al,dx
  411888:	mov    esi,0x214e82a9
  41188d:	sub    DWORD PTR [edi+0x0],edx
  411890:	int3   
  411891:	mov    al,0xaf
  411893:	sbb    al,0xad
  411895:	shl    ah,0xd2
  411898:	sub    BYTE PTR [ebx],ch
  41189a:	nop
  41189b:	lods   eax,DWORD PTR ds:[esi]
  41189c:	leave  
  41189d:	mov    dh,0x80
  41189f:	and    al,0xe
  4118a1:	mov    ch,BYTE PTR [eax+edx*4-0x72]
  4118a5:	fucomi st,st(1)
  4118a7:	cmc    
  4118a8:	(bad)  
  4118a9:	clc    
  4118aa:	jnp    0x4118e1
  4118ac:	mov    ch,0x51
  4118ae:	pushf  
  4118af:	loop   0x41189f
  4118b1:	pop    eax
  4118b2:	and    DWORD PTR ds:0x98390a9e,0x66
  4118b9:	dec    edx
  4118ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118bb:	adc    cl,dl
  4118bd:	inc    esp
  4118be:	or     edx,eax
  4118c0:	sbb    al,0x37
  4118c2:	jne    0x4118ba
  4118c4:	add    BYTE PTR [esi],ch
  4118c6:	jnp    0x4118db
  4118c8:	sub    al,0xc0
  4118ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118cb:	jno    0x4118e7
  4118cd:	and    BYTE PTR [edi],ah
  4118cf:	xchg   BYTE PTR [eax],dh
  4118d1:	jge    0x4118e4
  4118d3:	sbb    DWORD PTR [ebx],ecx
  4118d5:	pop    esi
  4118d6:	sahf   
  4118d7:	xlat   BYTE PTR ds:[ebx]
  4118d8:	ds cs pop ds
  4118db:	ficom  WORD PTR [ebx+0x67]
  4118de:	repnz sar DWORD PTR [esi+ebx*2+0x7b],0xae
  4118e4:	cli    
  4118e5:	retf   
  4118e6:	or     edi,DWORD PTR [eax]
  4118e8:	fst    QWORD PTR [esi-0x401309bf]
  4118ee:	cmp    DWORD PTR [edx+0x710576c7],ebp
  4118f4:	xchg   ecx,ebp
  4118f6:	inc    edi
  4118f7:	mov    DWORD PTR [esi-0x66382557],edx
  4118fd:	push   eax
  4118fe:	scas   al,BYTE PTR es:[edi]
  4118ff:	sub    eax,0x587ef850
  411904:	cmp    cl,BYTE PTR ds:0x5b4f44fe
  41190a:	mov    al,0x83
  41190c:	and    al,BYTE PTR [ebx-0x59]
  41190f:	or     BYTE PTR [eax],dh
  411911:	inc    edi
  411912:	mov    edi,0x774451ec
  411917:	jbe    0x4118b8
  411919:	mov    ah,0xb1
  41191b:	call   0xe139:0xf6b3df46
  411922:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411923:	in     eax,dx
  411924:	push   esi
  411925:	or     al,0x7c
  411927:	outs   dx,BYTE PTR ds:[esi]
  411928:	mov    al,ds:0xb4aa09bc
  41192d:	xlat   BYTE PTR ds:[ebx]
  41192e:	hlt    
  41192f:	iret   
  411930:	cmp    ah,BYTE PTR [edi+0x61]
  411933:	add    BYTE PTR [ecx-0x669afd53],al
  411939:	stos   DWORD PTR es:[edi],eax
  41193a:	data16 stos BYTE PTR es:[edi],al
  41193c:	test   al,0xe6
  41193e:	fiadd  DWORD PTR [eax+0x72e2ed4f]
  411944:	retf   
  411945:	mov    ch,0x6c
  411947:	loopne 0x411948
  411949:	je     0x4119c8
  41194b:	out    0xb3,eax
  41194d:	icebp  
  41194e:	lea    esp,[eax-0x7edcc398]
  411954:	mov    ch,0xae
  411956:	ins    DWORD PTR es:[edi],dx
  411957:	nop
  411958:	cs pop ebp
  41195a:	pop    ss
  41195b:	mov    al,0x1a
  41195d:	lds    edi,FWORD PTR [ebp-0x40286d70]
  411963:	mov    bl,0xfa
  411965:	fisttp QWORD PTR [ebx-0x78a6f8a]
  41196b:	pop    esi
  41196c:	mov    esi,ecx
  41196e:	pop    ecx
  41196f:	xor    al,0xb4
  411971:	(bad)  
  411972:	pop    esp
  411973:	jo     0x411965
  411975:	push   edx
  411976:	daa    
  411977:	jmp    0x4119ab
  411979:	pop    eax
  41197a:	fwait
  41197b:	jne    0x41191a
  41197d:	and    al,0x1b
  41197f:	vorps  ymm4,ymm7,YMMWORD PTR [ecx]
  411983:	cli    
  411984:	mov    eax,ds:0xf61a9671
  411989:	ja     0x4119bb
  41198b:	psllq  mm7,QWORD PTR [esi+0xa]
  41198f:	adc    DWORD PTR [esi+0x2664d80],ecx
  411995:	and    ch,BYTE PTR [edx]
  411997:	push   cs
  411998:	mov    ds:0x584af745,eax
  41199d:	(bad)  
  41199e:	mov    cl,0x51
  4119a0:	mov    edi,0x435c59c0
  4119a5:	add    dl,dh
  4119a7:	rcr    BYTE PTR [edx],0x90
  4119aa:	push   0xfffffff4
  4119ac:	arpl   WORD PTR [ebx+ecx*8],bx
  4119af:	fild   WORD PTR ds:0x53c14fac
  4119b5:	push   ds
  4119b6:	icebp  
  4119b7:	hlt    
  4119b8:	(bad)  
  4119b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119ba:	or     DWORD PTR [ebx],eax
  4119bc:	lea    esi,[edi-0x6d60c768]
  4119c2:	mov    esp,0x8514a395
  4119c7:	push   esp
  4119c8:	sub    edi,DWORD PTR [ecx]
  4119ca:	into   
  4119cb:	fnsave [ebp+0x74]
  4119ce:	pop    ds
  4119cf:	cli    
  4119d0:	mov    ?,WORD PTR [edx]
  4119d2:	adc    eax,0x694ba121
  4119d7:	loope  0x411a16
  4119d9:	add    eax,0xe76d6109
  4119de:	dec    ebp
  4119df:	ss retf 0xb380
  4119e3:	inc    esi
  4119e4:	aaa    
  4119e5:	call   0xc6fdd7c
  4119ea:	adc    dl,cl
  4119ec:	mov    esi,0x2f039d39
  4119f1:	mov    ch,0x68
  4119f3:	or     BYTE PTR [ecx-0x1a],cl
  4119f6:	leave  
  4119f7:	adc    DWORD PTR [ecx+ecx*1],edi
  4119fa:	stos   DWORD PTR es:[edi],eax
  4119fb:	push   es
  4119fc:	cmp    BYTE PTR [edx+ebx*4],dl
  4119ff:	push   esp
  411a00:	xor    BYTE PTR [edx-0x3db5f0cc],ch
  411a06:	data16 jp 0x4119c4
  411a09:	and    dh,al
  411a0b:	sbb    ch,BYTE PTR [edx-0x3b]
  411a0e:	shl    DWORD PTR [esi],1
  411a10:	sti    
  411a11:	cdq    
  411a12:	xor    eax,0xbcfe92dd
  411a17:	mov    bh,0xb4
  411a19:	mov    eax,ds:0x59e2d692
  411a1e:	xchg   esp,eax
  411a1f:	ds repnz pushf 
  411a22:	xor    BYTE PTR [ebx+0x66083a20],ch
  411a28:	push   ds
  411a29:	arpl   sp,sp
  411a2b:	imul   ecx,DWORD PTR [edi+esi*2-0xefb9d61],0x61
  411a33:	cdq    
  411a34:	scas   al,BYTE PTR es:[edi]
  411a35:	ret    
  411a36:	pop    eax
  411a37:	lods   eax,DWORD PTR ds:[esi]
  411a38:	cmc    
  411a39:	jb     0x411a5d
  411a3b:	jnp    0x4119d9
  411a3d:	dec    BYTE PTR [ecx]
  411a3f:	jmp    0xa31a:0xe3d0358
  411a46:	sbb    ah,al
  411a48:	fcmovnb st,st(1)
  411a4a:	xchg   ebx,eax
  411a4b:	jmp    0x411aac
  411a4d:	mov    DWORD PTR [eax],ebp
  411a4f:	stos   BYTE PTR es:[edi],al
  411a50:	test   al,0x28
  411a53:	pop    es
  411a54:	mov    esi,0xb68e6088
  411a59:	out    0xfd,eax
  411a5b:	imul   esp,DWORD PTR [edx+esi*1+0x1b],0x45
  411a60:	jbe    0x411a90
  411a62:	hlt    
  411a63:	mov    ah,BYTE PTR [ebp+0x3b]
  411a66:	aaa    
  411a67:	and    al,0x37
  411a69:	cmp    DWORD PTR [edx-0x45069ffb],eax
  411a6f:	xchg   ebp,eax
  411a70:	push   esi
  411a71:	repnz cwde 
  411a73:	stos   BYTE PTR es:[edi],al
  411a74:	inc    esi
  411a75:	mov    esp,edi
  411a77:	adc    BYTE PTR [edi+0x7c4cabf3],bh
  411a7d:	sbb    esi,ebx
  411a7f:	dec    esi
  411a80:	adc    bl,cl
  411a82:	fmul   QWORD PTR [edx+0x41be7608]
  411a88:	pop    ecx
  411a89:	ins    DWORD PTR es:[edi],dx
  411a8a:	fldenv [ebp+0xf]
  411a8d:	xchg   edx,eax
  411a8e:	inc    esi
  411a8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a90:	mov    ch,0x18
  411a92:	mov    ah,0xa4
  411a94:	xor    bh,BYTE PTR gs:[ebx+0x4a]
  411a98:	jo     0x411ab0
  411a9a:	push   0xa475f76
  411a9f:	adc    eax,0xae3577b9
  411aa4:	out    dx,al
  411aa5:	test   cl,bh
  411aa7:	ror    BYTE PTR [ebx],cl
  411aa9:	cld    
  411aaa:	dec    edx
  411aab:	enter  0x37cc,0x74
  411aaf:	popf   
  411ab0:	xchg   esi,eax
  411ab1:	es leave 
  411ab3:	sub    eax,0xb61dc3d3
  411ab8:	stos   BYTE PTR es:[edi],al
  411ab9:	and    ebp,edx
  411abb:	or     edx,DWORD PTR [eax-0x2111c3c6]
  411ac1:	aas    
  411ac2:	ret    0x4628
  411ac5:	xchg   BYTE PTR [edx-0x790c03b6],dh
  411acb:	xchg   esi,eax
  411acc:	jp     0x411b05
  411ace:	jns    0x411a9c
  411ad0:	aam    0x40
  411ad2:	jge    0x411afb
  411ad4:	mov    esp,0x6148abb9
  411ad9:	mov    eax,ds:0x9fc0ce54
  411ade:	ins    DWORD PTR es:[edi],dx
  411adf:	ret    0xff3
  411ae2:	inc    ebx
  411ae3:	xor    eax,DWORD PTR [edx+ecx*4+0x60c20c87]
  411aea:	mov    ds:0xf97ecb50,eax
  411aef:	int    0xfa
  411af1:	das    
  411af2:	popa   
  411af3:	clc    
  411af4:	inc    esp
  411af5:	mov    bh,0xf3
  411af7:	sbb    DWORD PTR [edx-0x42],esi
  411afa:	sbb    BYTE PTR [edi+0x50],al
  411afd:	mov    edx,0x604fda7e
  411b02:	jge    0x411b2b
  411b04:	popf   
  411b05:	xchg   esp,eax
  411b06:	sbb    bl,BYTE PTR [ebx+0x3b]
  411b09:	push   es
  411b0a:	inc    esp
  411b0b:	push   0x4
  411b0d:	add    esi,DWORD PTR [eax+0x4b]
  411b10:	inc    ebx
  411b11:	mov    cl,0x92
  411b13:	or     DWORD PTR [esi+ecx*8+0x426a1587],ebx
  411b1a:	push   es
  411b1b:	in     eax,0x51
  411b1d:	frstor cs:[edi]
  411b20:	dec    edi
  411b21:	push   cs
  411b22:	fwait
  411b23:	inc    edx
  411b24:	jecxz  0x411afe
  411b26:	push   0x640b64e2
  411b2b:	loope  0x411b92
  411b2d:	loop   0x411b57
  411b2f:	add    esp,DWORD PTR [ebx]
  411b31:	mov    bh,0x78
  411b33:	xlat   BYTE PTR ds:[ebx]
  411b34:	and    al,0x42
  411b36:	(bad)  
  411b38:	es popf 
  411b3a:	or     eax,0x87f44794
  411b3f:	daa    
  411b40:	sub    eax,0x61bfb0d7
  411b45:	out    0x7e,al
  411b47:	cmp    BYTE PTR [eax],bh
  411b49:	in     al,dx
  411b4a:	xlat   BYTE PTR ds:[ebx]
  411b4b:	imul   esi,DWORD PTR es:[bx],0xee48c93
  411b53:	xchg   esi,eax
  411b54:	or     DWORD PTR [edx],0x2d285c57
  411b5a:	or     DWORD PTR [edx+0xe530c9f],0xb9b17a45
  411b64:	lods   eax,DWORD PTR ds:[esi]
  411b65:	jnp    0x411b49
  411b67:	inc    edx
  411b68:	icebp  
  411b69:	adc    DWORD PTR [edi-0x77fa2e2a],eax
  411b6f:	rcr    DWORD PTR [edx+edi*1],0xa9
  411b73:	call   0x1c48:0x140fdc33
  411b7a:	cmc    
  411b7b:	aaa    
  411b7c:	push   edx
  411b7d:	push   eax
  411b7e:	xchg   BYTE PTR [ebx+ecx*4-0x21],bl
  411b82:	xchg   ebp,eax
  411b83:	out    0x53,al
  411b85:	cmp    cl,BYTE PTR ds:0xdcfece62
  411b8b:	inc    edx
  411b8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b8d:	ja     0x411bb1
  411b8f:	(bad)  
  411b90:	xor    bl,BYTE PTR [edx-0x5a]
  411b93:	les    esi,FWORD PTR [esi-0xb]
  411b96:	addr16 pop edx
  411b98:	cmp    BYTE PTR [eax+esi*8],0xa5
  411b9c:	sbb    BYTE PTR [edx-0x2decdff8],0xf0
  411ba3:	sub    DWORD PTR [edi+0x5777e912],ebx
  411ba9:	pop    edi
  411baa:	jno    0x411bc7
  411bac:	ror    DWORD PTR [edi+0x4f672853],0x9a
  411bb3:	adc    eax,0xaffa94a3
  411bb8:	add    ebp,DWORD PTR [edx]
  411bba:	ds dec ecx
  411bbc:	push   eax
  411bbd:	jmp    0x411bf2
  411bbf:	fimul  DWORD PTR [ebx]
  411bc1:	pusha  
  411bc2:	cmp    ebx,DWORD PTR [esi+0x40928a47]
  411bc8:	gs xchg ecx,eax
  411bca:	test   eax,0xdf497767
  411bcf:	sbb    ebx,eax
  411bd1:	jmp    0x411bd4
  411bd3:	xor    ah,BYTE PTR [edx+0x1ab832f4]
  411bd9:	repz cdq 
  411bdb:	fisttp QWORD PTR [esi-0xe]
  411bde:	lea    ebx,[ebx-0x5a]
  411be1:	xor    eax,0x8c97e3d2
  411be6:	sbb    eax,0x55094302
  411beb:	mov    edx,0x1c561abf
  411bf0:	(bad)  
  411bf1:	push   esp
  411bf2:	sub    BYTE PTR [esp+ecx*8+0xe0f0bbe],bl
  411bf9:	pusha  
  411bfa:	loope  0x411bb9
  411bfc:	out    dx,eax
  411bfd:	loopne 0x411c13
  411bff:	inc    ebx
  411c00:	aad    0x1b
  411c02:	xor    ebx,DWORD PTR [ecx+ebx*2+0x58]
  411c06:	or     eax,0x910dfdf4
  411c0b:	es inc esi
  411c0d:	mov    ch,0x36
  411c0f:	inc    edi
  411c10:	pusha  
  411c11:	sbb    esi,DWORD PTR [edx+0x78]
  411c14:	mov    cs,WORD PTR [ebx-0x3bc6d72f]
  411c1a:	cdq    
  411c1b:	push   ds
  411c1c:	mov    DWORD PTR [esi-0x29340996],edx
  411c22:	arpl   WORD PTR [ebx],si
  411c24:	sbb    BYTE PTR [ecx+0x527393a9],dl
  411c2a:	add    BYTE PTR fs:[ebx+0x4f],0x92
  411c2f:	or     DWORD PTR [edi+0x5be47ea6],ebp
  411c35:	pushf  
  411c36:	mov    edi,0x5e2dcbc2
  411c3b:	sahf   
  411c3c:	sub    DWORD PTR [eax-0x362aad04],ebp
  411c42:	or     cl,0x42
  411c45:	xchg   edx,eax
  411c46:	sbb    BYTE PTR [esi+0x6198aaa],bh
  411c4c:	inc    edi
  411c4d:	push   0x17
  411c4f:	frstor [edi]
  411c51:	xchg   DWORD PTR [ecx+0x11],ebx
  411c54:	ja     0x411bde
  411c56:	repz int 0xa7
  411c59:	sbb    eax,0xdfc4baba
  411c5e:	jae    0x411c80
  411c60:	js     0x411c24
  411c62:	or     DWORD PTR [ebx],0xffffff8d
  411c65:	test   esi,edx
  411c67:	aas    
  411c68:	rol    DWORD PTR [ebx],0xa7
  411c6b:	test   al,0xd2
  411c6d:	clc    
  411c6e:	adc    bl,BYTE PTR [eax]
  411c70:	xchg   ebp,eax
  411c71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c72:	clc    
  411c73:	(bad)  
  411c74:	and    dh,BYTE PTR [ecx]
  411c76:	test   DWORD PTR [esp+ebp*4-0x4b],0xecfb311b
  411c7e:	jb     0x411c3b
  411c80:	mov    bl,dl
  411c82:	sbb    esi,DWORD PTR [ebp+0x29]
  411c85:	cmc    
  411c86:	push   edi
  411c87:	popa   
  411c88:	(bad)  
  411c89:	add    al,BYTE PTR [edx+0x50]
  411c8c:	leave  
  411c8d:	xchg   DWORD PTR [eax+0x2ac77c27],eax
  411c93:	sub    al,0xe1
  411c95:	adc    al,0x6f
  411c97:	lds    esi,FWORD PTR [eax]
  411c99:	in     eax,0x91
  411c9b:	push   edi
  411c9c:	out    dx,al
  411c9d:	(bad)  
  411c9e:	xor    al,0x5a
  411ca0:	pop    es
  411ca1:	iret   
  411ca2:	cmp    DWORD PTR [edx],ebx
  411ca4:	outs   dx,DWORD PTR ds:[esi]
  411ca5:	test   eax,0x14be12e6
  411caa:	push   ecx
  411cab:	aam    0xa1
  411cad:	inc    esi
  411cae:	or     esi,DWORD PTR [ebx+ebp*4+0x16965053]
  411cb5:	cmp    BYTE PTR [esi],ch
  411cb7:	fs mov dh,0xd5
  411cba:	shl    DWORD PTR [ecx-0x68],cl
  411cbd:	and    ecx,DWORD PTR [eax]
  411cbf:	shl    DWORD PTR [ebx-0x5b97310e],1
  411cc5:	mov    ds:0x5540808e,al
  411cca:	jo     0x411ccc
  411ccc:	ret    
  411ccd:	popf   
  411cce:	in     al,0x1a
  411cd0:	and    eax,0xe7d7bbd8
  411cd5:	repz mov esp,0x7d7328c1
  411cdb:	sbb    eax,0xe49f0b53
  411ce0:	mov    ecx,0x487812a7
  411ce5:	pop    edx
  411ce6:	dec    ebp
  411ce7:	jecxz  0x411cee
  411ce9:	add    al,0x46
  411ceb:	mov    BYTE PTR [ebx+ecx*2],al
  411cee:	add    al,0x14
  411cf0:	or     BYTE PTR [eax-0x168cd29d],bh
  411cf6:	xchg   esi,eax
  411cf7:	(bad)  
  411cf8:	mov    al,0xb0
  411cfa:	cld    
  411cfb:	leave  
  411cfc:	fwait
  411cfd:	xchg   ebp,eax
  411cfe:	xchg   ecx,eax
  411cff:	inc    ebp
  411d00:	mov    dl,0x66
  411d02:	and    al,BYTE PTR ds:0x57dcdb84
  411d08:	cmp    BYTE PTR [esi],bl
  411d0a:	pop    ss
  411d0b:	sbb    al,0xdb
  411d0d:	retf   0xf34d
  411d10:	push   ecx
  411d11:	adc    edx,ebp
  411d13:	scas   al,BYTE PTR es:[edi]
  411d14:	loopne 0x411d53
  411d16:	rcr    edx,cl
  411d18:	push   ebp
  411d19:	add    DWORD PTR ds:0x58632c8f,ebx
  411d1f:	pop    esi
  411d20:	ret    0xa168
  411d23:	mov    cs,WORD PTR [edi-0x18]
  411d26:	jns    0x411d5a
  411d28:	fwait
  411d29:	xor    ah,BYTE PTR [ebx]
  411d2b:	mov    ah,0xa5
  411d2d:	ret    
  411d2e:	push   es
  411d2f:	or     ebx,0xf5385c54
  411d35:	ins    DWORD PTR es:[edi],dx
  411d36:	cmp    eax,edi
  411d38:	jae    0x411db4
  411d3a:	jae    0x411d79
  411d3c:	pop    esi
  411d3d:	fidivr DWORD PTR [esi+0x71]
  411d40:	sub    al,0x17
  411d42:	and    edi,DWORD PTR [ecx+0x1c]
  411d45:	mov    edi,0x1dd31945
  411d4a:	sbb    esp,DWORD PTR [ecx-0x72]
  411d4d:	push   eax
  411d4e:	ss or  al,0xd6
  411d51:	sbb    eax,0xf921d19d
  411d56:	mov    cl,0xcf
  411d58:	ins    DWORD PTR es:[edi],dx
  411d59:	pop    ecx
  411d5a:	mov    ds:0x47ec3856,eax
  411d5f:	(bad)  
  411d60:	fwait
  411d61:	std    
  411d62:	pop    ebp
  411d63:	rcl    bh,0xad
  411d66:	dec    ecx
  411d67:	xor    ch,BYTE PTR [eax]
  411d69:	mov    cl,0x84
  411d6b:	xlat   BYTE PTR ds:[ebx]
  411d6c:	push   ebx
  411d6d:	(bad)  
  411d6e:	dec    edi
  411d6f:	mov    ah,0x86
  411d71:	push   cs
  411d72:	sub    DWORD PTR [edx+ecx*8+0x6f71c6fb],ecx
  411d79:	bound  edx,QWORD PTR [edx]
  411d7b:	jecxz  0x411d81
  411d7d:	lods   al,BYTE PTR ds:[esi]
  411d7e:	mov    ch,0xbe
  411d80:	data16 mov ah,cl
  411d83:	lock dec esp
  411d85:	icebp  
  411d86:	nop
  411d87:	or     eax,0x824ceb93
  411d8c:	inc    esi
  411d8d:	js     0x411da3
  411d8f:	add    ah,BYTE PTR [ebx+0x6f]
  411d92:	xor    DWORD PTR [edi-0xdd93278],eax
  411d98:	push   es
  411d99:	mov    esp,0x29b7d77b
  411d9e:	test   eax,0x86892524
  411da3:	lods   al,BYTE PTR ds:[esi]
  411da4:	lahf   
  411da5:	jnp    0x411dc6
  411da7:	frstor [eax+ebp*2-0x27]
  411dab:	ins    DWORD PTR es:[edi],dx
  411dac:	mov    DWORD PTR [esi+ecx*4],ebx
  411daf:	pop    ds
  411db0:	pop    ds
  411db1:	sbb    al,0x26
  411db3:	jle    0x411d9b
  411db5:	mov    esi,0x35cecf87
  411dba:	cmc    
  411dbb:	cli    
  411dbc:	loopne 0x411df3
  411dbe:	loop   0x411e1d
  411dc0:	xchg   ebp,eax
  411dc1:	inc    ebp
  411dc2:	bound  ebx,QWORD PTR ds:0xd46c44f8
  411dc8:	fiadd  DWORD PTR [ecx-0xb35656c]
  411dce:	mov    cl,0xc6
  411dd0:	test   ebx,ebx
  411dd2:	jbe    0x411e35
  411dd4:	andps  xmm5,XMMWORD PTR [ecx+0x32]
  411dd8:	int3   
  411dd9:	shl    BYTE PTR [edx-0x203787c8],cl
  411ddf:	iret   
  411de0:	aaa    
  411de1:	sar    DWORD PTR [ebx-0x38],0x3c
  411de5:	pop    esi
  411de6:	data16 icebp 
  411de8:	adc    BYTE PTR [ebx-0x2c],ah
  411deb:	jb     0x411e12
  411ded:	mov    esp,0x17fd6be8
  411df2:	int    0x6c
  411df4:	in     eax,0x3a
  411df6:	je     0x411dcd
  411df8:	retf   0x1274
  411dfb:	mov    esp,0x4b64d5ab
  411e00:	mov    esp,0x1d69dd53
  411e05:	pop    ds
  411e06:	imul   edx,DWORD PTR [ebx+0x40029534],0xffffffc2
  411e0d:	add    al,BYTE PTR [ecx+0x3532fca0]
  411e13:	cmp    al,BYTE PTR [edi-0x768f7663]
  411e19:	jbe    0x411df3
  411e1b:	lods   eax,DWORD PTR ds:[esi]
  411e1c:	and    DWORD PTR [ecx-0x6a0723f9],0x1c
  411e23:	ins    DWORD PTR es:[edi],dx
  411e24:	or     ecx,DWORD PTR [ebx-0x3b]
  411e27:	cmp    al,0xd6
  411e29:	test   edx,0xc1a55166
  411e2f:	jno    0x411e19
  411e31:	adc    dh,BYTE PTR [ecx+0x5d]
  411e34:	out    0x2a,al
  411e36:	rcr    DWORD PTR [ebp+0x597aa55d],cl
  411e3c:	sbb    BYTE PTR [edi+0x1e],bl
  411e3f:	inc    esp
  411e40:	sub    al,0x94
  411e42:	jecxz  0x411eae
  411e44:	les    esp,FWORD PTR [edi-0x53]
  411e47:	push   ebx
  411e48:	adc    al,0xd2
  411e4a:	xor    bl,BYTE PTR [ebx-0x1d]
  411e4d:	add    al,0x1d
  411e4f:	cmp    al,0x2
  411e51:	addr16 icebp 
  411e53:	fist   DWORD PTR [ebx-0x1f]
  411e56:	cdq    
  411e57:	push   ds
  411e58:	jmp    0x43440bdc
  411e5d:	mov    esp,0xd3f9318
  411e62:	dec    eax
  411e63:	cmp    al,0xb0
  411e65:	ins    BYTE PTR es:[edi],dx
  411e66:	shl    dh,cl
  411e68:	fwait
  411e69:	dec    ebp
  411e6a:	je     0x411e2f
  411e6c:	out    dx,al
  411e6d:	inc    esp
  411e6e:	inc    ebp
  411e6f:	stos   DWORD PTR es:[edi],eax
  411e70:	mov    edi,0x9f8c9d51
  411e75:	mov    al,ds:0xb0d0e8e8
  411e7a:	in     eax,0x21
  411e7c:	mov    ?,WORD PTR ds:0xa8a37714
  411e82:	mov    eax,0xbf3ad0a3
  411e87:	mov    esp,0xff830b09
  411e8c:	jecxz  0x411e22
  411e8e:	imul   ebp,DWORD PTR [ecx+0x32eae8a3],0xffffff90
  411e95:	inc    ebx
  411e96:	(bad)  
  411e97:	call   0x9d4b2959
  411e9c:	push   esi
  411e9d:	push   eax
  411e9e:	aaa    
  411e9f:	push   0xbeed317f
  411ea4:	jbe    0x411e4e
  411ea6:	or     al,0x1e
  411ea8:	es imul ecx,eax,0xdf720a0e
  411eaf:	pop    esi
  411eb0:	ret    
  411eb1:	xchg   edx,eax
  411eb2:	int3   
  411eb3:	push   esp
  411eb4:	xchg   BYTE PTR [ebx+0xbe25209],dl
  411eba:	pop    edx
  411ebb:	pop    ebp
  411ebc:	push   edi
  411ebd:	aas    
  411ebe:	aaa    
  411ebf:	dec    eax
  411ec0:	shl    DWORD PTR [ebx],1
  411ec2:	out    0x1b,eax
  411ec4:	push   es
  411ec5:	adc    DWORD PTR [edx],esi
  411ec7:	mov    ds:0x89f3ee43,al
  411ecc:	cmp    eax,0xef3a9b9c
  411ed1:	imul   ebx,DWORD PTR [esp+ebx*1-0x1b],0xffffffee
  411ed6:	xor    al,0x7c
  411ed8:	add    eax,0xf2eb7bc1
  411edd:	xor    ecx,edx
  411edf:	(bad)  
  411ee0:	xor    eax,0x773002d5
  411ee5:	mov    ds:0x7203ab37,al
  411eea:	sbb    bh,dl
  411eec:	stos   DWORD PTR es:[edi],eax
  411eed:	inc    esp
  411eee:	jae    0x411e8d
  411ef0:	push   ecx
  411ef1:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  411ef3:	pop    edx
  411ef4:	cs mov al,0x31
  411ef7:	add    ecx,DWORD PTR [esi-0xaddc819]
  411efd:	cmp    al,0xd3
  411eff:	xchg   edi,eax
  411f00:	aad    0xf1
  411f02:	fs or  eax,0x44ff1718
  411f08:	pop    ss
  411f09:	(bad)  
  411f0a:	repz jae 0x411e99
  411f0d:	ins    BYTE PTR es:[edi],dx
  411f0e:	scas   eax,DWORD PTR es:[edi]
  411f0f:	sbb    eax,0xdec88e98
  411f14:	sbb    eax,0x80053dab
  411f19:	or     ah,BYTE PTR [eax+eax*4-0x70b1a511]
  411f20:	ins    DWORD PTR es:[edi],dx
  411f21:	pop    ss
  411f22:	pop    edx
  411f23:	pop    ds
  411f24:	inc    edx
  411f25:	inc    edi
  411f26:	push   eax
  411f27:	call   0xde1fbb69
  411f2c:	xor    DWORD PTR [ecx-0x3c],0xa11327b2
  411f33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f34:	addr16 push es
  411f36:	fist   DWORD PTR [eax-0x5a7ef008]
  411f3c:	lock inc esp
  411f3e:	sbb    al,0xa3
  411f40:	mov    fs,WORD PTR [ebx-0x71]
  411f43:	in     eax,dx
  411f44:	add    BYTE PTR [ebp+edi*1-0x2c],0x60
  411f49:	and    bh,0xaa
  411f4c:	mov    eax,0x4da6c1ae
  411f51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f52:	jne    0x411fc0
  411f54:	fiadd  DWORD PTR [ebx+edi*8-0x4e]
  411f58:	stos   DWORD PTR es:[edi],eax
  411f59:	dec    eax
  411f5a:	jno    0x411fcd
  411f5c:	adc    eax,DWORD PTR ds:0x6206900c
  411f62:	jle    0x411efe
  411f64:	ins    DWORD PTR es:[edi],dx
  411f65:	imul   edi,eax,0xa5bae4ab
  411f6b:	mov    esi,esp
  411f6d:	rcr    DWORD PTR [ecx],1
  411f6f:	adc    edx,DWORD PTR [esp+esi*1-0x3a]
  411f73:	dec    edx
  411f74:	lock xchg DWORD PTR [esp+eiz*4],esi
  411f78:	mov    ebx,0xed45eb4d
  411f7d:	xor    DWORD PTR ds:0x2d7a2345,ebx
  411f83:	cmp    edx,ebp
  411f85:	daa    
  411f86:	and    dh,bh
  411f88:	inc    ebx
  411f89:	xchg   BYTE PTR [esi],ch
  411f8b:	jmp    0x411ff0
  411f8d:	shl    BYTE PTR [ebx],0x35
  411f90:	sti    
  411f91:	jo     0x411f28
  411f93:	cld    
  411f94:	sbb    esi,DWORD PTR [edi]
  411f96:	mov    al,0xce
  411f98:	(bad)  
  411f99:	jp     0x411f69
  411f9b:	and    edi,ecx
  411f9d:	inc    edx
  411f9e:	cmp    ebx,DWORD PTR [ebp+edx*8+0xd]
  411fa2:	stos   BYTE PTR es:[edi],al
  411fa3:	lahf   
  411fa4:	les    ebp,FWORD PTR [edi+0x7347d25a]
  411faa:	sbb    eax,0x7b3e8a9e
  411faf:	repnz lea ebx,[eax]
  411fb2:	call   0xaccd:0xc1e5471e
  411fb9:	push   edx
  411fba:	xor    DWORD PTR [edx+0x13],eax
  411fbd:	test   al,0x42
  411fbf:	iret   
  411fc0:	jne    0x412030
  411fc2:	xchg   ch,al
  411fc4:	cli    
  411fc5:	xor    BYTE PTR ds:0x130b4408,bh
  411fcb:	inc    edx
  411fcc:	add    al,0xe8
  411fce:	xchg   esi,eax
  411fcf:	repz cmp edx,0xfffffffa
  411fd3:	shr    BYTE PTR [ebp+0x2f],0x26
  411fd7:	cld    
  411fd8:	sbb    bl,BYTE PTR [ebp-0x67ecae2f]
  411fde:	dec    eax
  411fdf:	mov    ss,WORD PTR [edx+0x57]
  411fe2:	daa    
  411fe3:	push   0x6
  411fe5:	mov    bh,BYTE PTR [ecx+0x2a883e97]
  411feb:	inc    ecx
  411fec:	xchg   edx,eax
  411fed:	inc    edx
  411fee:	push   esi
  411fef:	in     eax,0x90
  411ff1:	sub    al,0x5
  411ff3:	sahf   
  411ff4:	stos   BYTE PTR es:[edi],al
  411ff5:	mov    esp,DWORD PTR [esi+0x79]
  411ff8:	push   ebp
  411ff9:	push   cs
  411ffa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ffb:	lock mov DWORD PTR [eax],ebx
  411ffe:	icebp  
  411fff:	push   ecx
  412000:	mov    ah,0xb8
  412002:	js     0x41203f
  412004:	or     edx,edi
  412006:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412007:	sub    esi,DWORD PTR [ebp+esi*8-0x25]
  41200b:	xor    cl,BYTE PTR [ebp-0x5b2869be]
  412011:	mov    ebp,edi
  412013:	sub    al,0xf8
  412015:	lods   al,BYTE PTR ds:[esi]
  412016:	push   eax
  412017:	scas   al,BYTE PTR es:[edi]
  412018:	sub    eax,0x2ed78ae9
  41201d:	pop    ds
  41201e:	pop    ebp
  41201f:	fwait
  412020:	and    ebx,DWORD PTR [esi]
  412022:	test   al,0xd5
  412024:	adc    edx,edi
  412026:	sub    ebx,ecx
  412028:	dec    esi
  412029:	stos   DWORD PTR es:[edi],eax
  41202a:	lods   eax,DWORD PTR ds:[esi]
  41202b:	mov    eax,0xd3f162f2
  412030:	push   0x2c9bd9c2
  412035:	adc    BYTE PTR [edi+0x2e341ab0],bl
  41203b:	dec    ecx
  41203c:	fadd   st,st(3)
  41203e:	daa    
  41203f:	ud0    esi,DWORD PTR [eax-0x9983451]
  412046:	shl    BYTE PTR [ebx],1
  412048:	aad    0x15
  41204a:	(bad)  
  41204b:	std    
  41204c:	popa   
  41204d:	sbb    al,0x8f
  41204f:	add    ch,BYTE PTR [ecx-0x6ad1f8c3]
  412055:	mov    eax,ds:0xbb9e7eda
  41205a:	dec    ebp
  41205b:	(bad)  
  41205c:	test   ebx,0x48f012aa
  412062:	scas   al,BYTE PTR es:[edi]
  412063:	and    ch,BYTE PTR [ebx]
  412065:	jl     0x4120e1
  412067:	(bad)  
  412068:	shl    BYTE PTR [esp+edx*2+0x5b3492c0],1
  41206f:	inc    edx
  412070:	bswap  ebp
  412072:	mov    edi,0xb7ba912c
  412077:	xchg   edi,eax
  412078:	mov    ch,0xb1
  41207a:	jo     0x4120c0
  41207c:	mov    fs,edi
  41207e:	mov    esi,0x2f4bb64b
  412083:	add    edx,DWORD PTR [edi-0x2c94ff2a]
  412089:	sbb    ebx,edx
  41208b:	xchg   esp,eax
  41208c:	mov    ds:0x7e0afe0f,eax
  412091:	adc    BYTE PTR [eax-0x79e8a948],0x74
  412098:	xchg   BYTE PTR [eax+ebx*4-0x6b82a1aa],dh
  41209f:	mov    dl,0xc6
  4120a1:	mov    fs,edi
  4120a3:	scas   al,BYTE PTR es:[edi]
  4120a4:	mov    BYTE PTR [edi+0x23],dl
  4120a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120a8:	push   esi
  4120a9:	ror    BYTE PTR [ecx-0x4ccaa69f],1
  4120af:	pop    edx
  4120b0:	mov    al,ds:0xdd8e623f
  4120b5:	add    al,0xd2
  4120b7:	test   BYTE PTR [ecx+0x52925e13],al
  4120bd:	out    dx,al
  4120be:	(bad)  
  4120bf:	enter  0x32af,0x8
  4120c3:	repz inc esi
  4120c5:	sahf   
  4120c6:	retf   
  4120c7:	(bad)  
  4120c8:	push   esi
  4120c9:	fwait
  4120ca:	or     BYTE PTR [eax-0x3a],dh
  4120cd:	frndint 
  4120cf:	add    bl,0x3f
  4120d2:	sub    eax,0x9be2d72f
  4120d7:	and    DWORD PTR [edx],eax
  4120d9:	ret    
  4120da:	stos   DWORD PTR es:[edi],eax
  4120db:	mov    eax,ds:0x27d2328b
  4120e0:	(bad)  
  4120e1:	cld    
  4120e2:	fs popf 
  4120e4:	sbb    DWORD PTR [eax-0x2b],eax
  4120e7:	cmp    DWORD PTR [eax-0x629f082e],edi
  4120ed:	pusha  
  4120ee:	jl     0x412118
  4120f0:	outs   dx,DWORD PTR ds:[esi]
  4120f1:	mov    esi,ds
  4120f3:	xchg   esi,eax
  4120f4:	cmp    bh,BYTE PTR [ecx+ecx*8+0x68e3b306]
  4120fb:	push   esi
  4120fc:	mov    edx,edx
  4120fe:	(bad)  
  412100:	inc    esp
  412101:	into   
  412102:	mov    DWORD PTR ds:0xeb8e17d,eax
  412108:	pop    ebx
  412109:	aas    
  41210a:	pop    es
  41210b:	and    al,0xee
  41210d:	idiv   DWORD PTR [edx+0x51]
  412110:	xlat   BYTE PTR ds:[ebx]
  412111:	adc    dl,BYTE PTR [eax-0x7ceaa12b]
  412117:	push   ebp
  412118:	and    ecx,esp
  41211a:	fwait
  41211b:	mov    al,ds:0x71175772
  412120:	jle    0x412132
  412122:	mov    edi,0xed71b03d
  412127:	jb     0x412199
  412129:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41212a:	(bad)  
  41212b:	ret    
  41212c:	pop    ebp
  41212d:	call   0x3bf6:0x9254b3c
  412134:	(bad)  [esi+0x23a8a44]
  41213a:	dec    esp
  41213b:	pop    ds
  41213c:	push   ss
  41213d:	fidivr DWORD PTR [edi]
  41213f:	adc    BYTE PTR [eax-0x1b27e48a],0x73
  412146:	or     DWORD PTR [ecx],esp
  412148:	inc    esi
  412149:	out    dx,eax
  41214a:	hlt    
  41214b:	mov    ch,0xb3
  41214d:	cli    
  41214e:	pop    ecx
  41214f:	fimul  WORD PTR [ecx+edx*1]
  412152:	mov    ecx,0x35ac2fc1
  412157:	add    ebx,DWORD PTR [edx+0x540250df]
  41215d:	sahf   
  41215e:	out    dx,al
  41215f:	in     al,dx
  412160:	sub    BYTE PTR [ebx+eiz*8-0x71],cl
  412164:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412165:	mov    eax,DWORD PTR [eax+0x5821b5ac]
  41216b:	sub    ecx,edx
  41216d:	ror    BYTE PTR [edx+eiz*8-0x68],1
  412171:	push   es
  412172:	es xchg edi,eax
  412174:	add    BYTE PTR ds:0xe16c488e,bh
  41217a:	push   0xffffffc2
  41217c:	fnstsw WORD PTR [ecx+0x77f8f994]
  412182:	test   esi,esp
  412184:	add    BYTE PTR [ebx+0x55],bl
  412187:	dec    edi
  412188:	or     BYTE PTR [ebp-0x20],bl
  41218b:	int    0xc8
  41218d:	cs stc 
  41218f:	mov    edi,0x8307913d
  412194:	dec    ecx
  412195:	ss ja  0x41212e
  412198:	icebp  
  412199:	xchg   ebp,eax
  41219a:	pushf  
  41219b:	cld    
  41219c:	pop    esp
  41219d:	jl     0x41220a
  41219f:	mov    esp,0x5fccfea0
  4121a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121a5:	(bad)  
  4121a6:	sub    cl,BYTE PTR [edx+ebp*4+0x77]
  4121aa:	ret    
  4121ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121ac:	sbb    ebp,DWORD PTR [edx]
  4121ae:	sub    ecx,DWORD PTR [edi]
  4121b0:	add    esp,DWORD PTR [ebx+0xe]
  4121b3:	and    bl,bl
  4121b5:	xchg   ebp,eax
  4121b6:	mov    DWORD PTR [ebx-0x11723ce1],ebx
  4121bc:	and    eax,0x8f0301f5
  4121c1:	or     al,0x86
  4121c3:	pop    esi
  4121c4:	adc    dh,BYTE PTR [ebx]
  4121c6:	xor    DWORD PTR [edx+0x21],edx
  4121c9:	pop    esp
  4121ca:	aaa    
  4121cb:	adc    al,BYTE PTR [ebp+0x44]
  4121ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121cf:	push   0x49
  4121d1:	and    DWORD PTR [ecx-0x50aa8fba],esp
  4121d7:	or     eax,0x2b6ea922
  4121dc:	sbb    ecx,DWORD PTR [eax-0x35]
  4121df:	push   es
  4121e0:	(bad)  
  4121e1:	mov    ch,0x17
  4121e3:	xor    esp,DWORD PTR [esi+eiz*8]
  4121e6:	pop    ecx
  4121e7:	not    BYTE PTR [esi-0x2275669d]
  4121ed:	fbld   TBYTE PTR ds:0x89a9f23d
  4121f3:	xchg   esp,eax
  4121f4:	mov    al,0x6d
  4121f6:	adc    ch,BYTE PTR [edi-0x4e]
  4121f9:	loop   0x412231
  4121fb:	inc    ecx
  4121fc:	loop   0x4121b1
  4121fe:	push   edx
  4121ff:	pop    edi
  412200:	or     al,0xa3
  412202:	xor    esi,ecx
  412204:	mov    gs,WORD PTR [edi-0x3885442d]
  41220a:	xchg   ecx,eax
  41220b:	pop    ecx
  41220c:	sub    al,0x71
  41220e:	mov    DWORD PTR ds:0xdee3b1aa,ebx
  412214:	mov    DWORD PTR [eax-0x3c],edx
  412217:	cmp    esp,DWORD PTR [ebx+edx*8+0x79c9985b]
  41221e:	sti    
  41221f:	push   cs
  412220:	gs inc eax
  412222:	or     BYTE PTR cs:[ebx+0x38837b0b],0xf4
  41222a:	or     cl,ah
  41222c:	cmp    ch,BYTE PTR [edx]
  41222e:	mov    edx,0x222e86d2
  412233:	pop    ds
  412234:	iret   
  412235:	fiadd  WORD PTR [eax+0x5a]
  412238:	inc    eax
  412239:	mov    bl,0x9
  41223b:	cmp    al,0x2a
  41223d:	xor    eax,0xd4a2955c
  412242:	shr    ebx,cl
  412244:	mov    dl,0x5d
  412246:	cwde   
  412247:	cmp    DWORD PTR [ebx],ebx
  412249:	mov    bl,0xac
  41224b:	xchg   esp,eax
  41224c:	mov    ds:0x5d72f3d5,eax
  412251:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412252:	pop    edi
  412253:	ret    
  412254:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  412256:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412257:	pushf  
  412258:	dec    ebp
  412259:	mov    edx,0x86a9b7e2
  41225e:	and    ah,bl
  412260:	fisttp WORD PTR [eax]
  412262:	dec    edi
  412263:	xchg   ebp,eax
  412264:	jmp    0x412276
  412266:	pop    edx
  412267:	scas   eax,DWORD PTR es:[edi]
  412268:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412269:	aas    
  41226a:	dec    edx
  41226b:	cld    
  41226c:	sbb    eax,0xc799e64b
  412271:	stos   DWORD PTR es:[edi],eax
  412272:	jle    0x41228c
  412274:	retf   0xa7a2
  412277:	sbb    eax,DWORD PTR [edi]
  412279:	sti    
  41227a:	add    eax,0xab4529ca
  41227f:	jle    0x4122d9
  412281:	inc    ecx
  412282:	icebp  
  412283:	cmp    BYTE PTR [ecx+edi*1-0x6f],0x3f
  412288:	pop    ds
  412289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41228a:	pop    ecx
  41228b:	mov    bh,0xdf
  41228d:	jno    0x412309
  41228f:	cmp    eax,0xaefa3559
  412294:	fwait
  412295:	(bad)  
  412296:	jno    0x41221e
  412298:	jno    0x4122cc
  41229a:	add    bh,BYTE PTR ds:[esi+edi*2+0x15]
  41229f:	xor    dh,cl
  4122a1:	or     cl,BYTE PTR [ecx+0x5f]
  4122a4:	or     DWORD PTR [edi+0x50],esp
  4122a7:	cmp    DWORD PTR [ebx+ecx*8-0x52],edi
  4122ab:	inc    esp
  4122ac:	dec    ecx
  4122ad:	pop    ebx
  4122ae:	mov    ch,0xe
  4122b0:	xor    al,0xb9
  4122b2:	or     al,0xe9
  4122b4:	iret   
  4122b5:	add    esp,esi
  4122b7:	xchg   esi,eax
  4122b8:	jl     0x412244
  4122ba:	fisubr DWORD PTR [edx+0x14]
  4122bd:	(bad)  
  4122be:	aas    
  4122bf:	sbb    DWORD PTR [ebx],0xfffffff1
  4122c2:	ins    BYTE PTR es:[edi],dx
  4122c3:	rcl    DWORD PTR [esi+0x42de468a],cl
  4122c9:	xor    DWORD PTR [ecx-0x10],edx
  4122cc:	sub    DWORD PTR [ebp-0x1f],edi
  4122cf:	pop    ss
  4122d0:	sub    al,0x87
  4122d2:	imul   esi,DWORD PTR [ebp-0x5631ba3a],0x85a5271c
  4122dc:	fsubr  DWORD PTR [ebx+esi*1]
  4122df:	das    
  4122e0:	xchg   BYTE PTR [edx-0x37],ch
  4122e3:	div    ecx
  4122e5:	and    dl,BYTE PTR [edx+0x5b79a447]
  4122eb:	push   esp
  4122ec:	shl    esi,1
  4122ee:	and    edi,edi
  4122f0:	mov    al,0x59
  4122f2:	jnp    0x4122ef
  4122f4:	sub    eax,0xff9eac9
  4122f9:	sbb    al,0x54
  4122fb:	mov    ds:0xb5cd265,al
  412300:	rol    bh,cl
  412302:	jmp    0xc25:0x5508e17e
  412309:	mov    eax,ds:0x8d52b10b
  41230e:	stc    
  41230f:	jmp    DWORD PTR [eax-0x14]
  412312:	jg     0x4122e4
  412314:	jae    0x412299
  412316:	cli    
  412317:	cli    
  412318:	jge    0x412348
  41231a:	shr    BYTE PTR [eax],cl
  41231c:	ret    
  41231d:	jns    0x4122d3
  41231f:	adc    edi,ebx
  412321:	lods   al,BYTE PTR ds:[esi]
  412322:	jmp    0x412329
  412324:	fwait
  412325:	adc    eax,0xe71dcea5
  41232a:	fwait
  41232b:	cld    
  41232c:	mov    ebx,0x42f78bfd
  412331:	cwde   
  412332:	adc    bl,ah
  412334:	popw   es
  412336:	test   al,0x96
  412338:	in     al,0x62
  41233a:	jmp    0x28f8:0xa9da326d
  412341:	in     eax,dx
  412342:	test   DWORD PTR [ecx+0x154309f0],ebx
  412348:	enter  0xf7c1,0xdd
  41234c:	mov    edi,0x7355dbed
  412351:	and    BYTE PTR [eax-0x2ae5ed2f],bl
  412357:	adc    eax,0x268b5878
  41235c:	push   cs
  41235d:	mov    al,BYTE PTR [esi-0x7a]
  412360:	mov    DWORD PTR [edi],ebx
  412362:	or     BYTE PTR [eax-0x535d4d03],cl
  412368:	mov    ebx,eax
  41236a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41236b:	jmp    0x4123da
  41236d:	sbb    edx,esi
  41236f:	cmp    esi,DWORD PTR [edi+edx*4+0x5e]
  412373:	push   ebx
  412374:	(bad)  
  412376:	xlat   BYTE PTR ds:[ebx]
  412377:	inc    ecx
  412378:	pop    ebx
  412379:	push   ss
  41237a:	adc    eax,0x31bf6c26
  41237f:	outs   dx,BYTE PTR ds:[esi]
  412380:	cmp    ebx,DWORD PTR [edx+ebx*4+0x4782b95b]
  412387:	(bad)  
  412388:	jp     0x412344
  41238a:	or     BYTE PTR [edx],ch
  41238c:	cmp    DWORD PTR [edx],eax
  41238e:	xlat   BYTE PTR ds:[ebx]
  41238f:	jne    0x412339
  412391:	int3   
  412392:	das    
  412393:	push   0xde6a8a4e
  412398:	inc    ebx
  412399:	clc    
  41239a:	fisubr DWORD PTR [ebp-0x8e81299]
  4123a0:	push   cs
  4123a1:	sbb    bh,al
  4123a3:	js     0x412412
  4123a5:	cmc    
  4123a6:	(bad)  
  4123a7:	stc    
  4123a8:	inc    edx
  4123a9:	mov    ah,0x95
  4123ab:	inc    ebp
  4123ac:	sub    eax,0x8cd2c2a2
  4123b1:	cdq    
  4123b2:	stos   DWORD PTR es:[edi],eax
  4123b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123b4:	sti    
  4123b5:	fadd   st(7),st
  4123b7:	push   ss
  4123b8:	sbb    al,0x6c
  4123ba:	aas    
  4123bb:	sbb    al,BYTE PTR [ecx+0x4ae3d179]
  4123c1:	push   ss
  4123c2:	xchg   edi,eax
  4123c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123c4:	and    eax,0xd22588fb
  4123c9:	push   edx
  4123ca:	sbb    edx,DWORD PTR [ecx]
  4123cc:	popf   
  4123cd:	(bad)  
  4123ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123cf:	mov    ah,BYTE PTR [ecx+0x5b]
  4123d2:	xchg   ecx,eax
  4123d3:	mov    al,0x2c
  4123d5:	test   al,0x34
  4123d7:	loopne 0x412452
  4123d9:	add    eax,0x9146786e
  4123de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123df:	sub    dl,BYTE PTR [edi+0x1d92fefa]
  4123e5:	push   ss
  4123e6:	cmc    
  4123e7:	fucomi st,st(4)
  4123e9:	nop
  4123ea:	dec    ebp
  4123eb:	cdq    
  4123ec:	inc    ebx
  4123ed:	jbe    0x4123fa
  4123ef:	bound  edi,QWORD PTR [edx]
  4123f1:	xchg   esi,eax
  4123f2:	mov    edi,0x309155d9
  4123f7:	mov    edi,0xdb50ba50
  4123fc:	stos   BYTE PTR es:[edi],al
  4123fd:	int    0x25
  4123ff:	hlt    
  412400:	lock and BYTE PTR [edx],ch
  412403:	call   0x180f:0xdaf39c3d
  41240a:	sub    eax,0x1dd9593a
  41240f:	fild   DWORD PTR ds:0xdb319652
  412415:	sub    ah,ch
  412417:	fs in  eax,dx
  412419:	sbb    eax,0x4dcfb75f
  41241e:	jbe    0x41242a
  412420:	mov    ebp,0xbbd8ab1b
  412425:	mov    ebx,esi
  412427:	daa    
  412428:	jno    0x4123c1
  41242a:	lods   eax,DWORD PTR ds:[esi]
  41242b:	push   cs
  41242c:	dec    edx
  41242d:	xor    ebp,ebp
  41242f:	push   ss
  412430:	cwde   
  412431:	jl     0x41240e
  412433:	or     edi,DWORD PTR ds:[ebx]
  412436:	in     al,dx
  412437:	jae    0x41247c
  412439:	js     0x4123eb
  41243b:	mov    dh,0xe7
  41243d:	aad    0xb4
  41243f:	cs add esp,eax
  412442:	lds    esp,FWORD PTR [esi+esi*8]
  412445:	cmc    
  412446:	stc    
  412447:	jne    0x41243b
  412449:	cmp    dh,BYTE PTR [ecx]
  41244b:	sbb    BYTE PTR [edi-0x61],ah
  41244e:	jnp    0x4124c3
  412450:	into   
  412451:	lock pusha 
  412453:	or     edx,DWORD PTR [eax+0x3684a1d7]
  412459:	pop    edi
  41245a:	dec    ecx
  41245b:	addr16 pop es
  41245d:	lahf   
  41245e:	fidivr WORD PTR [edx+eiz*4-0xb]
  412462:	cmp    al,0x74
  412464:	retf   
  412465:	jbe    0x412467
  412467:	jge    0x412465
  412469:	(bad)  
  41246a:	jns    0x4124a3
  41246c:	jnp    0x4124ea
  41246e:	xchg   edi,eax
  41246f:	jge    0x41249e
  412471:	arpl   bx,bp
  412473:	jecxz  0x412471
  412475:	xchg   esi,eax
  412476:	push   ebp
  412477:	test   al,0x80
  412479:	adc    eax,0xc7907ce3
  41247e:	imul   ecx,esi,0xffffff92
  412481:	sub    eax,0xeeeb496b
  412486:	test   DWORD PTR [edx],edi
  412488:	or     ch,BYTE PTR [ebx-0x54]
  41248b:	cmc    
  41248c:	inc    esp
  41248d:	dec    ebp
  41248e:	add    BYTE PTR [esp+ebx*1-0x7630329],0x7a
  412496:	dec    ebx
  412497:	add    BYTE PTR [esi],dl
  412499:	jecxz  0x4124ab
  41249b:	in     al,dx
  41249c:	cmp    BYTE PTR ds:0x274dc649,bh
  4124a2:	call   0x7c85:0x90b0c789
  4124a9:	test   BYTE PTR fs:[eax],dl
  4124ac:	pop    eax
  4124ad:	xchg   ecx,eax
  4124ae:	lods   al,BYTE PTR ds:[esi]
  4124af:	test   al,0x93
  4124b1:	sbb    BYTE PTR [edx],0xe4
  4124b4:	add    DWORD PTR [ecx],esi
  4124b6:	fstp   TBYTE PTR [ecx+0x5dfa7fef]
  4124bc:	pop    esi
  4124bd:	xchg   DWORD PTR [ebx],ebp
  4124bf:	bound  esp,QWORD PTR [ebx+edi*4]
  4124c2:	into   
  4124c3:	fsub   DWORD PTR [ecx-0x64]
  4124c6:	stos   BYTE PTR es:[edi],al
  4124c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124c8:	mov    cl,0x96
  4124ca:	fbld   TBYTE PTR [eax-0x38]
  4124cd:	sub    DWORD PTR [edi-0x69],ecx
  4124d0:	jecxz  0x41246a
  4124d2:	fistp  WORD PTR ds:0x50e4df25
  4124d8:	int3   
  4124d9:	and    ecx,DWORD PTR [ebx+0x31]
  4124dc:	push   ss
  4124dd:	adc    dh,BYTE PTR [edi+0x6a]
  4124e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124e1:	sbb    ebx,DWORD PTR [ecx-0x14]
  4124e4:	daa    
  4124e5:	int3   
  4124e6:	inc    edx
  4124e7:	jmp    0x4124dd
  4124e9:	mov    ebp,0xb64c5d45
  4124ee:	iret   
  4124ef:	mov    al,0x6
  4124f1:	mul    BYTE PTR [ecx]
  4124f3:	imul   edx,DWORD PTR [esi+ebx*2-0x30d41619],0xffffff96
  4124fb:	stc    
  4124fc:	loope  0x412497
  4124fe:	(bad)  
  412500:	leave  
  412501:	push   cs
  412502:	inc    ebp
  412503:	or     BYTE PTR fs:[ebx],al
  412506:	push   ebx
  412507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412508:	add    DWORD PTR [eax],ecx
  41250a:	mov    cl,BYTE PTR [eax-0x47]
  41250d:	sbb    dl,ch
  41250f:	in     eax,dx
  412510:	push   ss
  412511:	sub    dl,BYTE PTR [eax+0x7b]
  412514:	push   eax
  412515:	or     BYTE PTR [ebx-0x7bb7ffaa],ch
  41251b:	inc    edx
  41251c:	mov    edx,DWORD PTR [eax-0x42b3f7d2]
  412522:	inc    esp
  412523:	cwde   
  412524:	push   ds
  412525:	iret   
  412526:	aas    
  412527:	inc    esi
  412528:	adc    dh,BYTE PTR [edx+0x62daf8a7]
  41252e:	mov    eax,ds:0x3c3a2c14
  412533:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412534:	cmp    BYTE PTR [esi-0x62],bl
  412537:	out    dx,eax
  412538:	inc    esp
  412539:	fnstsw WORD PTR [edi+edi*8-0x6d]
  41253d:	inc    edx
  41253e:	mov    ch,ch
  412540:	push   ecx
  412541:	ror    DWORD PTR [ecx],1
  412543:	push   eax
  412544:	mov    cl,cl
  412546:	mov    ds:0xdddce0da,eax
  41254b:	mov    BYTE PTR [esi+esi*8-0x2f],ah
  41254f:	popa   
  412550:	jp     0x41251a
  412552:	cdq    
  412553:	ss or  ecx,esi
  412556:	mov    ds:0xd01131c6,al
  41255b:	adc    BYTE PTR ds:0x42e32488,0x7d
  412562:	in     eax,dx
  412563:	mov    dl,0xc1
  412565:	push   cs
  412566:	mov    eax,ds:0x2e2b95ab
  41256b:	dec    esp
  41256c:	leave  
  41256d:	cli    
  41256e:	jp     0x41250d
  412570:	pop    ebx
  412571:	popa   
  412572:	mov    DWORD PTR [edx+ecx*2-0x4bebb9cd],edx
  412579:	repnz mov ds:0x87dbc488,al
  41257f:	adc    al,0x18
  412581:	dec    edx
  412582:	loopne 0x41256b
  412584:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412585:	icebp  
  412586:	test   BYTE PTR [eax+edi*8+0x1a],dh
  41258a:	inc    esi
  41258b:	xchg   cl,dh
  41258d:	icebp  
  41258e:	pop    ecx
  41258f:	mov    esp,0xde8cbca6
  412594:	inc    esi
  412595:	xor    ecx,esi
  412597:	pop    ecx
  412598:	out    dx,al
  412599:	pop    ecx
  41259a:	push   edi
  41259b:	mov    ds:0x4ccf9723,eax
  4125a0:	and    al,0x46
  4125a2:	rcr    DWORD PTR [ebp-0x59],cl
  4125a5:	jne    0x4125ac
  4125a7:	jmp    0xa0d9a3e6
  4125ac:	inc    eax
  4125ad:	mov    dl,0x64
  4125af:	inc    edx
  4125b0:	call   0xe8d9:0xdbcc3230
  4125b7:	nop
  4125b8:	ja     0x4125e2
  4125ba:	mov    ebx,0xee8195cd
  4125bf:	add    eax,DWORD PTR [ebp-0xe86ce3a]
  4125c5:	cli    
  4125c6:	push   edx
  4125c7:	ret    0xeba7
  4125ca:	ins    DWORD PTR es:[edi],dx
  4125cb:	enter  0x72f4,0xb8
  4125cf:	sbb    eax,edi
  4125d1:	ret    
  4125d2:	push   DWORD PTR [edi+0x2a]
  4125d5:	and    eax,0x96707715
  4125da:	test   DWORD PTR [eax-0x6be89358],ecx
  4125e0:	pusha  
  4125e1:	data16 rdtsc 
  4125e4:	mov    ax,ds:0x451c1438
  4125ea:	fiadd  DWORD PTR [ebx+0x5b]
  4125ed:	push   eax
  4125ee:	push   ss
  4125ef:	xor    BYTE PTR [edx+0x4f6a0fd3],0x43
  4125f6:	push   eax
  4125f7:	in     al,0xeb
  4125f9:	sub    esp,DWORD PTR [esi*8-0x2d7d9bb]
  412600:	add    al,BYTE PTR [ecx+0x59]
  412603:	xor    ah,BYTE PTR [edx+0x35789ad5]
  412609:	and    ebp,DWORD PTR [ebx-0x5a]
  41260c:	gs mov ch,0x57
  41260f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412610:	data16 ins BYTE PTR es:[edi],dx
  412612:	mov    al,0x9
  412614:	(bad)  
  412615:	push   edi
  412616:	fistp  DWORD PTR [ebp-0x5be6db45]
  41261c:	test   BYTE PTR [edi+0x3d21e93c],ah
  412622:	rcr    DWORD PTR [ecx+0x20],0x79
  412626:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412627:	(bad)  
  412628:	enter  0x35ed,0x7f
  41262c:	jg     0x412631
  41262e:	es cmp al,0x1b
  412631:	cmp    ebp,DWORD PTR [esi+0x50af606e]
  412637:	sbb    al,BYTE PTR [edx]
  412639:	inc    esp
  41263a:	in     eax,dx
  41263b:	std    
  41263c:	push   edx
  41263d:	cmp    DWORD PTR [edi+0x773a535f],0xffffff8c
  412644:	jns    0x412603
  412646:	cmc    
  412647:	(bad)  
  412649:	(bad)  
  41264a:	(bad)  
  41264b:	cld    
  41264c:	xor    ebx,DWORD PTR [edx]
  41264e:	mov    ebp,0xc49ebdcc
  412653:	xchg   esi,eax
  412654:	sbb    cl,BYTE PTR [esp+eax*8]
  412657:	test   ecx,edi
  412659:	pop    edx
  41265a:	mov    ds:0x15f2cda9,al
  41265f:	xchg   esi,ebp
  412661:	jno    0x41268c
  412663:	mov    ebp,0xf85cc585
  412668:	inc    ebx
  412669:	mov    ?,ebx
  41266b:	push   cs
  41266c:	retf   0xfe
  41266f:	push   ebp
  412670:	mov    esp,0x57a4adf9
  412675:	and    DWORD PTR ds:0x7e11bc37,0xa837e2ab
  41267f:	sar    ch,0xe7
  412682:	lods   eax,DWORD PTR ds:[esi]
  412683:	loopne 0x412647
  412685:	es xor ebx,edi
  412688:	mov    ds:0x920b5328,al
  41268d:	mov    cl,0xae
  41268f:	rcr    BYTE PTR [ebp+0x7a],cl
  412692:	ret    0x304d
  412695:	scas   al,BYTE PTR es:[edi]
  412696:	mov    dl,0x2c
  412698:	mov    ds:0xdb0cfdf8,al
  41269d:	jns    0x412685
  41269f:	int    0xbb
  4126a1:	mov    ds:0x299fb06b,al
  4126a6:	ret    
  4126a7:	jecxz  0x4126ae
  4126a9:	shl    DWORD PTR [edi-0x2c1495d6],0xc6
  4126b0:	mov    ecx,0xc6473e93
  4126b5:	mov    ah,0xf1
  4126b7:	stos   BYTE PTR es:[edi],al
  4126b8:	push   ss
  4126b9:	push   ebx
  4126ba:	les    eax,FWORD PTR [esi]
  4126bc:	and    BYTE PTR ds:0xda435aec,bh
  4126c2:	mov    dl,0xae
  4126c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126c5:	add    DWORD PTR [ebx],0x54b37236
  4126cb:	adc    eax,0x5349a1a7
  4126d0:	lahf   
  4126d1:	and    eax,0x3a85ad09
  4126d6:	fwait
  4126d7:	xchg   ebp,eax
  4126d8:	aad    0x9d
  4126da:	sub    bh,BYTE PTR ds:0x7662ec27
  4126e0:	xor    BYTE PTR [ecx-0x1fd0cd1e],ch
  4126e6:	mov    dh,0x90
  4126e8:	pop    es
  4126e9:	sub    BYTE PTR [edi],0xd4
  4126ec:	xlat   BYTE PTR ds:[ebx]
  4126ed:	adc    ecx,DWORD PTR [ecx+0x57]
  4126f0:	enter  0x79bc,0xfa
  4126f4:	push   ecx
  4126f5:	int3   
  4126f6:	pop    ss
  4126f7:	xor    eax,0x2cec5733
  4126fc:	iret   
  4126fd:	cmp    eax,0x4e6b26a6
  412702:	jl     0x4126a6
  412704:	dec    ecx
  412705:	pop    edx
  412706:	xchg   BYTE PTR [esi+0x63530119],bl
  41270c:	xchg   ecx,eax
  41270d:	(bad)  
  41270e:	push   eax
  41270f:	std    
  412710:	cmp    edx,ebx
  412712:	fdiv   st(2),st
  412714:	scas   al,BYTE PTR es:[edi]
  412715:	xchg   edx,eax
  412716:	mov    bh,0x36
  412718:	les    esp,FWORD PTR [ebp-0x5324d753]
  41271e:	jle    0x412755
  412720:	push   0x6e815ec4
  412725:	stc    
  412726:	es pop esp
  412728:	int    0x10
  41272a:	(bad)  [edx+0x61251bf2]
  412730:	iret   
  412731:	cmp    ecx,DWORD PTR [ecx+0x1f]
  412734:	std    
  412735:	fucomi st,st(5)
  412737:	inc    eax
  412738:	dec    edx
  412739:	xor    eax,0x4d7533f0
  41273e:	xchg   edi,eax
  41273f:	push   edx
  412740:	cmp    eax,0x409cebf8
  412745:	(bad)  
  412746:	lods   al,BYTE PTR ds:[esi]
  412747:	arpl   bx,ax
  412749:	das    
  41274a:	repnz cmp edx,edx
  41274d:	dec    ebp
  41274e:	xchg   edx,eax
  41274f:	imul   ecx,edx,0xffffffb5
  412752:	outs   dx,BYTE PTR ds:[esi]
  412753:	mov    eax,ds:0x2fea2f02
  412758:	pop    eax
  412759:	imul   DWORD PTR [edx-0x51]
  41275c:	and    dh,BYTE PTR [edi+0x3fd4cc12]
  412762:	xor    eax,0xb3e55376
  412767:	cvttps2pi mm6,QWORD PTR [eax]
  41276a:	xor    al,0xc
  41276c:	mov    cl,0x31
  41276e:	nop
  41276f:	dec    ebx
  412770:	mov    dh,0x1c
  412772:	xchg   edx,eax
  412773:	loop   0x41278a
  412775:	gs mov bl,0xc3
  412778:	nop
  412779:	or     BYTE PTR [esi+ebx*4],dh
  41277c:	outs   dx,DWORD PTR ds:[esi]
  41277d:	mov    fs,edi
  41277f:	mov    DWORD PTR [edi+edx*8-0x49fd0159],0xd413d04a
  41278a:	and    cl,bl
  41278c:	adc    BYTE PTR [eax+ebp*1-0x5e233975],bl
  412793:	adc    esp,DWORD PTR [edi-0x117b043c]
  412799:	ds push es
  41279b:	mov    eax,0xcece40d8
  4127a0:	and    DWORD PTR [esi+0x7e],0xc
  4127a4:	dec    ebx
  4127a5:	ds push 0xdf3b75fb
  4127ab:	sub    DWORD PTR [eax+0x45],ebp
  4127ae:	fld    TBYTE PTR [ecx-0x536b9f57]
  4127b4:	aam    0xf6
  4127b6:	push   0xe77dfaa7
  4127bb:	popa   
  4127bc:	pop    ds
  4127bd:	and    esi,DWORD PTR [edx]
  4127bf:	(bad)  
  4127c0:	pushf  
  4127c1:	and    dl,BYTE PTR [edx+0x72]
  4127c4:	or     ebp,DWORD PTR [ebx+0x75]
  4127c7:	stos   BYTE PTR es:[edi],al
  4127c8:	repz out dx,eax
  4127ca:	(bad)  
  4127cb:	or     DWORD PTR [edi+0x6e],ecx
  4127ce:	or     al,0xf8
  4127d0:	sbb    al,0xd7
  4127d2:	xchg   al,dh
  4127d4:	mov    edi,0x7d88e2b6
  4127d9:	lods   eax,DWORD PTR ds:[esi]
  4127da:	popf   
  4127db:	sub    BYTE PTR [edi-0x3],0xe1
  4127df:	push   ebp
  4127e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127e1:	mov    dl,0x6d
  4127e3:	inc    ecx
  4127e4:	push   esp
  4127e5:	hlt    
  4127e6:	jno    0x41283a
  4127e8:	(bad)  
  4127e9:	retf   0x552b
  4127ec:	jne    0x4127b8
  4127ee:	lds    esp,FWORD PTR [eax+0x3d]
  4127f1:	jae    0x4127a2
  4127f3:	loopne 0x412866
  4127f5:	jl     0x41286e
  4127f7:	shl    ch,cl
  4127f9:	sub    BYTE PTR [edi-0x6b400868],al
  4127ff:	lds    ecx,FWORD PTR [ebp+0x6492b1f]
  412805:	(bad)  
  412806:	jle    0x4127f0
  412808:	out    dx,eax
  412809:	(bad)  
  41280b:	mov    dl,0x2e
  41280d:	and    DWORD PTR [esi+0x2a9d33b2],esi
  412813:	push   0xe744b0b1
  412818:	stos   DWORD PTR es:[edi],eax
  412819:	push   ds
  41281a:	mov    dl,0xe6
  41281c:	in     eax,0x76
  41281e:	push   ss
  41281f:	push   0xffffff8d
  412821:	jge    0x412818
  412823:	push   es
  412824:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412825:	sub    ebp,DWORD PTR [ebp+0x670f00fc]
  41282b:	fwait
  41282c:	jo     0x4127dc
  41282e:	mov    ecx,0xb1d66352
  412833:	sub    BYTE PTR [edx+eiz*8],bh
  412836:	push   ebx
  412837:	mov    bl,BYTE PTR [esi+0x3e]
  41283a:	dec    ebx
  41283b:	and    eax,DWORD PTR [eax-0x7]
  41283e:	sub    bl,BYTE PTR [eax+0x1c6ba35]
  412844:	pop    ebx
  412845:	out    0x11,al
  412847:	pop    esi
  412848:	push   0x55
  41284a:	sahf   
  41284b:	jle    0x41287e
  41284d:	iret   
  41284e:	sub    dh,0x41
  412851:	push   0x23323275
  412856:	sahf   
  412857:	add    DWORD PTR [eax],eax
  412859:	loop   0x4127fa
  41285b:	shl    BYTE PTR [ebp+0x2d9feaea],cl
  412861:	inc    esi
  412862:	jae    0x412839
  412864:	push   ebp
  412865:	shl    BYTE PTR [esp+esi*4],0xff
  412869:	je     0x412842
  41286b:	aaa    
  41286c:	imul   edi,DWORD PTR [ebx-0x18],0x7d68b353
  412873:	adc    DWORD PTR [edx-0x7b],edi
  412876:	inc    edi
  412877:	out    dx,al
  412878:	cmp    DWORD PTR [esi],ebp
  41287a:	dec    ebp
  41287b:	mov    ds:0x82acbcbd,al
  412880:	ins    BYTE PTR es:[edi],dx
  412881:	push   cs
  412882:	movq   mm7,mm6
  412885:	fadd   QWORD PTR [ebp+0x342f5029]
  41288b:	xor    al,0x2d
  41288d:	jl     0x412857
  41288f:	cmp    ebx,eax
  412891:	shl    ebp,0xce
  412894:	dec    edi
  412895:	hlt    
  412896:	jb     0x4128d9
  412898:	or     ebx,DWORD PTR ds:0x78a29ae1
  41289e:	iret   
  41289f:	xchg   edx,esi
  4128a1:	mov    ds:0xa95d694f,al
  4128a6:	aaa    
  4128a7:	int3   
  4128a8:	mov    edi,0xcb2b600e
  4128ad:	bound  ebp,QWORD PTR [eax+0x43]
  4128b0:	sub    BYTE PTR [eax],al
  4128b2:	fdivr  QWORD PTR [eax]
  4128b4:	dec    edx
  4128b5:	(bad)  
  4128b6:	test   al,0x8e
  4128b8:	mov    ah,0x91
  4128ba:	push   eax
  4128bb:	xor    al,0x41
  4128bd:	or     esp,DWORD PTR [ebp-0x6f6bc868]
  4128c3:	mov    esp,0x9bb23c05
  4128c8:	test   eax,0xb9c2959d
  4128cd:	lods   al,BYTE PTR ds:[esi]
  4128ce:	leave  
  4128cf:	xchg   edx,eax
  4128d0:	cli    
  4128d1:	mov    eax,ds:0x460c842e
  4128d6:	ror    BYTE PTR [edi-0x7a],cl
  4128d9:	retf   0x3ad3
  4128dc:	dec    esp
  4128dd:	or     eax,0x7dfb17d7
  4128e2:	mov    esi,0xee2aa02d
  4128e7:	out    dx,eax
  4128e8:	sub    al,0xe6
  4128ea:	xor    BYTE PTR [ebx],dl
  4128ec:	js     0x412948
  4128ee:	inc    edi
  4128ef:	outs   dx,BYTE PTR ds:[esi]
  4128f0:	xchg   DWORD PTR [ecx-0x46eddd5c],esp
  4128f6:	mov    edi,0x5750daf0
  4128fb:	xor    DWORD PTR [ebx-0x2b],eax
  4128fe:	ins    DWORD PTR es:[edi],dx
  4128ff:	and    eax,0xca8427db
  412904:	dec    ecx
  412905:	cmp    ecx,DWORD PTR [eax]
  412907:	xchg   DWORD PTR ds:0xcf729996,eax
  41290d:	dec    edi
  41290e:	lock sub eax,0x168ec8be
  412914:	dec    ebx
  412915:	lahf   
  412916:	ss push esi
  412918:	sub    BYTE PTR [esi+0x75],0x16
  41291c:	add    ecx,ecx
  41291e:	pop    eax
  41291f:	or     al,0xf1
  412921:	mov    ebx,0x476ce517
  412926:	mov    bl,0x55
  412928:	fild   WORD PTR [edi-0xc]
  41292b:	xor    al,0xa1
  41292d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41292e:	enter  0x6c5c,0x7e
  412932:	mov    esp,0x34984bac
  412937:	jb     0x412978
  412939:	je     0x41294a
  41293b:	pop    edi
  41293c:	push   0xf547af40
  412941:	xor    bl,BYTE PTR [ebx+0x1886cd05]
  412947:	pop    esp
  412948:	dec    ebp
  412949:	mov    al,0xb5
  41294b:	and    DWORD PTR [ebp+0x17],0x68c1f1f6
  412952:	cmp    dh,ah
  412954:	mov    dh,0xd4
  412956:	sub    ah,bl
  412958:	ins    DWORD PTR es:[edi],dx
  412959:	enter  0x41dc,0xac
  41295d:	or     DWORD PTR cs:[edx+0xd],0xffffffb2
  412962:	and    dh,BYTE PTR [eax+edx*1]
  412965:	retf   0x4974
  412968:	js     0x41291a
  41296a:	ds jle 0x41294d
  41296d:	(bad)  
  41296e:	xlat   BYTE PTR ds:[ebx]
  41296f:	std    
  412970:	cs inc ecx
  412972:	les    ecx,FWORD PTR [edi]
  412974:	jno    0x412992
  412976:	dec    edx
  412977:	ins    DWORD PTR es:[edi],dx
  412978:	xchg   edx,eax
  412979:	and    eax,0xa253ad3e
  41297e:	daa    
  41297f:	push   cs
  412980:	lds    edi,FWORD PTR [ecx-0x401bfb96]
  412986:	jg     0x412932
  412988:	mov    ah,0x71
  41298a:	add    al,0x46
  41298c:	(bad)  
  41298d:	cmp    ebp,eax
  41298f:	test   bl,al
  412991:	inc    esi
  412992:	sbb    ecx,DWORD PTR [esp+eiz*4-0x75]
  412996:	push   cs
  412997:	aam    0xbe
  412999:	pop    esi
  41299a:	xchg   esp,eax
  41299b:	jns    0x412928
  41299d:	lods   al,BYTE PTR ds:[esi]
  41299e:	pop    edi
  41299f:	bound  ebx,QWORD PTR [ecx]
  4129a1:	cmp    bl,BYTE PTR [edx-0x22f5ebf0]
  4129a7:	jno    0x412a16
  4129a9:	pushf  
  4129aa:	adc    BYTE PTR [esi],0xbf
  4129ad:	add    esi,ebx
  4129af:	push   ss
  4129b0:	(bad)  
  4129b1:	cli    
  4129b2:	das    
  4129b3:	ror    BYTE PTR [edx],cl
  4129b5:	test   BYTE PTR [ecx+0x6e],bh
  4129b8:	test   eax,0x6b7aaa55
  4129bd:	daa    
  4129be:	mov    ebx,0x468cfdb9
  4129c3:	pushf  
  4129c4:	sub    DWORD PTR [ecx],eax
  4129c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129c7:	popf   
  4129c8:	fldcw  WORD PTR [edx]
  4129ca:	xchg   edi,eax
  4129cb:	xchg   edi,eax
  4129cc:	fdivr  QWORD PTR [ecx-0x4e70ea56]
  4129d2:	adc    cl,BYTE PTR [edx]
  4129d4:	mov    DWORD PTR [eax-0x1b],ecx
  4129d7:	aad    0x15
  4129d9:	push   ecx
  4129da:	jns    0x412987
  4129dc:	in     eax,0xc3
  4129de:	in     al,dx
  4129df:	mov    ecx,0x89d6daad
  4129e4:	and    ah,bh
  4129e6:	adc    eax,0x1417edd6
  4129eb:	mov    eax,ds:0xcf406a94
  4129f0:	mul    ebp
  4129f2:	jo     0x4129e3
  4129f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129f6:	stc    
  4129f7:	dec    ecx
  4129f8:	and    al,0x7e
  4129fa:	sahf   
  4129fb:	jge    0x412a71
  4129fd:	scas   al,BYTE PTR es:[edi]
  4129fe:	sbb    eax,0x51531a56
  412a03:	dec    esi
  412a04:	xlat   BYTE PTR ds:[ebx]
  412a05:	(bad)  
  412a06:	xchg   esp,eax
  412a07:	lahf   
  412a08:	mov    dl,0x8a
  412a0a:	add    dl,dh
  412a0c:	mov    al,0xdd
  412a0e:	mov    eax,0xee3800aa
  412a13:	int    0xb9
  412a15:	add    eax,0x5d2add6a
  412a1a:	pop    ecx
  412a1b:	pop    eax
  412a1c:	jge    0x4129d4
  412a1e:	(bad)  
  412a1f:	(bad)
  412a22:	arpl   WORD PTR [ebx+ecx*8+0x7e05dfa2],ax
  412a29:	or     ah,al
  412a2b:	push   DWORD PTR ds:0xc830ac2f
  412a31:	jnp    0x412a31
  412a33:	adc    DWORD PTR [eax+0x70],0x12
  412a37:	push   esp
  412a38:	int3   
  412a39:	adc    BYTE PTR [eax],bl
  412a3b:	js     0x412a87
  412a3d:	inc    edx
  412a3e:	test   eax,0x89d30a5
  412a43:	jo     0x412a3a
  412a45:	push   edx
  412a46:	xlat   BYTE PTR ds:[ebx]
  412a47:	mov    DWORD PTR [ecx-0x68],edi
  412a4a:	xlat   BYTE PTR ds:[ebx]
  412a4b:	not    BYTE PTR [eax+0x64a70004]
  412a51:	sbb    ecx,DWORD PTR [eax-0x22]
  412a54:	(bad)  
  412a55:	jmp    0x4129de
  412a57:	fidivr WORD PTR [edi-0x174cf132]
  412a5d:	aad    0xb5
  412a5f:	bnd jbe 0x412a4f
  412a62:	mov    ecx,0xdf3b1ea0
  412a67:	mov    eax,0xb1b8b98c
  412a6c:	out    0x28,al
  412a6e:	push   0xffffffb9
  412a70:	cmovae ecx,edx
  412a73:	jno    0x412a08
  412a75:	cmp    bh,BYTE PTR [edi+0xb]
  412a78:	lods   eax,DWORD PTR ds:[esi]
  412a79:	leave  
  412a7a:	pushf  
  412a7b:	pop    edx
  412a7c:	mov    cl,0xdf
  412a7e:	jae    0x412a34
  412a80:	mov    eax,0x1f80ac7b
  412a85:	lods   eax,DWORD PTR ds:[esi]
  412a86:	push   0x78868b81
  412a8b:	enter  0x48a7,0x8e
  412a8f:	es clc 
  412a91:	sbb    al,BYTE PTR [edi-0x529dfb30]
  412a97:	pop    esi
  412a98:	call   0x4642:0x24ce56fe
  412a9f:	adc    esp,ecx
  412aa1:	test   DWORD PTR [ebx+0x68aafa0],eax
  412aa7:	stos   DWORD PTR es:[edi],eax
  412aa8:	or     DWORD PTR [ecx-0xe],esp
  412aab:	aaa    
  412aac:	xchg   esp,eax
  412aad:	jbe    0x412a8b
  412aaf:	adc    al,BYTE PTR [esi]
  412ab1:	sub    edi,DWORD PTR [esi]
  412ab3:	dec    eax
  412ab4:	pop    ebp
  412ab5:	ror    edx,1
  412ab7:	or     BYTE PTR [ebp-0x3165b710],dh
  412abd:	lods   eax,DWORD PTR ds:[esi]
  412abe:	xchg   DWORD PTR [edx+esi*1-0x5d],ebx
  412ac2:	cmp    eax,0x94a01588
  412ac7:	add    cl,0x97
  412aca:	push   ebx
  412acb:	in     al,0x65
  412acd:	cmp    al,0xdb
  412acf:	xchg   esi,eax
  412ad0:	pushf  
  412ad1:	loope  0x412b03
  412ad3:	sub    eax,0x113eeffb
  412ad8:	lods   eax,DWORD PTR ds:[esi]
  412ad9:	fiadd  WORD PTR [edi+0x556033f9]
  412adf:	mov    bl,0x5e
  412ae1:	jmp    0xb086:0xea8db51d
  412ae8:	in     eax,0x4e
  412aea:	je     0x412ad7
  412aec:	inc    ebx
  412aed:	popa   
  412aee:	sti    
  412aef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412af0:	pop    ebx
  412af1:	cs xor edi,edx
  412af4:	mov    al,BYTE PTR [eax+esi*1-0x4fdcb270]
  412afb:	pusha  
  412afc:	push   esp
  412afd:	inc    ecx
  412afe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412aff:	push   cs
  412b00:	pop    eax
  412b01:	dec    edi
  412b02:	pop    ds
  412b03:	and    DWORD PTR [edx-0x56],edx
  412b06:	sub    bh,BYTE PTR ds:0xbbcf2d35
  412b0c:	mov    bh,0x44
  412b0e:	inc    edx
  412b0f:	call   0x2251:0xe0d096b2
  412b16:	(bad)  
  412b17:	into   
  412b18:	pop    ebx
  412b19:	or     ah,dh
  412b1b:	retf   0x8dc4
  412b1e:	js     0x412b74
  412b20:	or     eax,0x8951cbc6
  412b25:	ins    BYTE PTR es:[edi],dx
  412b26:	xchg   DWORD PTR [edi+ebp*2-0x229129d7],edi
  412b2d:	jne    0x412aea
  412b2f:	into   
  412b30:	and    ebp,eax
  412b32:	sbb    ah,BYTE PTR [esi+0x11]
  412b35:	xchg   BYTE PTR ds:0xbc8f8f5d,ch
  412b3b:	shl    DWORD PTR [ecx+0x30be9ad6],0xfe
  412b42:	clc    
  412b43:	je     0x412b2d
  412b45:	in     al,dx
  412b46:	xlat   BYTE PTR ds:[ebx]
  412b47:	int    0x59
  412b49:	lock xchg edi,eax
  412b4b:	jo     0x412b16
  412b4d:	jmp    0xfe12b062
  412b52:	jmp    0xdfe800da
  412b57:	lods   eax,DWORD PTR ds:[esi]
  412b58:	sahf   
  412b59:	mov    al,0x24
  412b5b:	adc    DWORD PTR [eax+0x4],eax
  412b5e:	sub    eax,0x6d00d50b
  412b63:	sahf   
  412b64:	into   
  412b65:	pop    ds
  412b66:	sbb    BYTE PTR ds:0xdee6add4,ch
  412b6c:	pop    eax
  412b6d:	mov    dl,0x64
  412b6f:	jno    0x412b41
  412b71:	mov    cl,0x3e
  412b73:	scas   eax,DWORD PTR es:[edi]
  412b74:	mov    ds:0xce6cd5a4,al
  412b79:	adc    al,0x58
  412b7b:	push   esp
  412b7c:	push   edx
  412b7d:	jmp    0x36ac9081
  412b82:	adc    DWORD PTR [edi-0x3d],esp
  412b85:	xchg   ecx,eax
  412b86:	add    eax,0x77804645
  412b8b:	cmp    BYTE PTR [esi+0x15aa9440],bl
  412b91:	dec    esi
  412b92:	in     eax,dx
  412b93:	gs sahf 
  412b95:	out    dx,al
  412b96:	jge    0x412bb7
  412b98:	sub    ebp,ecx
  412b9a:	imul   eax,DWORD PTR [edi+0x4e],0xdc56f8fa
  412ba1:	repz fadd DWORD PTR [esi+0x5bf92b12]
  412ba8:	call   0x9825:0x1723869f
  412baf:	sti    
  412bb0:	fwait
  412bb1:	mov    bl,BYTE PTR [eax]
  412bb3:	dec    ebp
  412bb4:	(bad)  
  412bb5:	or     al,0xaa
  412bb7:	mov    edx,0xf1a9fb22
  412bbc:	outs   dx,DWORD PTR ds:[esi]
  412bbd:	repz or dl,cl
  412bc0:	cmp    al,0xcb
  412bc2:	arpl   WORD PTR [ebx-0x7d],bp
  412bc5:	cmp    BYTE PTR [eax+0x77],al
  412bc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bc9:	mov    DWORD PTR [edi],edx
  412bcb:	sbb    edx,DWORD PTR ds:0x74325402
  412bd1:	jno    0x412bae
  412bd3:	inc    ebx
  412bd4:	jmp    0x54e6:0xb8e1532b
  412bdb:	loope  0x412c41
  412bdd:	dec    ebp
  412bde:	add    al,0x5e
  412be0:	clc    
  412be1:	loope  0x412bcf
  412be3:	imul   ebx,ebx,0xffffffd6
  412be6:	fadd   st(7),st
  412be8:	aad    0xec
  412bea:	dec    edx
  412beb:	ins    DWORD PTR es:[edi],dx
  412bec:	mov    al,0x68
  412bee:	fisub  WORD PTR cs:[esi+0x4e7eef06]
  412bf5:	ror    BYTE PTR [ecx-0x51],cl
  412bf8:	adc    cl,BYTE PTR [ebx+edi*2+0x26b03d04]
  412bff:	fimul  DWORD PTR [ebx]
  412c01:	push   esi
  412c02:	out    dx,eax
  412c03:	outs   dx,BYTE PTR ds:[esi]
  412c04:	mov    dh,0xf6
  412c06:	aad    0x64
  412c08:	mov    eax,0x534ce81e
  412c0d:	out    0x30,al
  412c0f:	test   BYTE PTR [ebx],ch
  412c11:	pop    ebp
  412c12:	test   DWORD PTR [edi+edx*4+0x21],esi
  412c16:	push   ds
  412c17:	adc    ch,dl
  412c19:	mov    DWORD PTR [ecx],edi
  412c1b:	enter  0xe8d3,0x18
  412c1f:	leave  
  412c20:	cdq    
  412c21:	call   0x9c490f4c
  412c26:	or     al,0x36
  412c28:	cld    
  412c29:	mov    dh,0xe4
  412c2b:	sub    bl,BYTE PTR ds:0x25f2257a
  412c31:	pop    ss
  412c32:	leave  
  412c33:	xor    al,dh
  412c35:	or     ecx,DWORD PTR ds:0x9edf5dba
  412c3b:	jmp    0x412bd3
  412c3d:	pusha  
  412c3e:	pop    ecx
  412c3f:	arpl   WORD PTR [ebp-0x63300060],bx
  412c45:	test   ebp,edi
  412c47:	inc    ebp
  412c48:	popf   
  412c49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c4a:	mov    esi,0x62bee80b
  412c4f:	or     al,0x93
  412c51:	sbb    DWORD PTR [edi-0x4566b8b5],edx
  412c57:	mov    ds:0x23a7c703,eax
  412c5c:	loop   0x412c4d
  412c5e:	and    al,0x20
  412c60:	xchg   ebx,eax
  412c61:	cmc    
  412c62:	push   esp
  412c63:	cmp    eax,0xb84ab71d
  412c68:	inc    ebx
  412c69:	sub    BYTE PTR [ecx-0x1a],0xe7
  412c6d:	mov    al,0xbe
  412c6f:	ins    DWORD PTR es:[edi],dx
  412c70:	in     eax,0xf0
  412c72:	jbe    0x412c3e
  412c74:	xor    DWORD PTR [edx-0x5c75d2ed],0x5cb50bc5
  412c7e:	adc    DWORD PTR [edi+0x16],ebp
  412c81:	and    al,0xd8
  412c83:	mov    DWORD PTR [ebx],ebx
  412c85:	mov    dh,0x42
  412c87:	repnz (bad) 
  412c89:	sbb    DWORD PTR [eax+0x73e81253],ecx
  412c8f:	call   0xd973:0x59dacb5d
  412c96:	stc    
  412c97:	rol    BYTE PTR [esi+0x72b1fa2b],cl
  412c9d:	dec    edx
  412c9e:	call   0x5dba19c0
  412ca3:	jno    0x412cac
  412ca5:	pop    ecx
  412ca6:	sbb    esi,DWORD PTR [edx-0x2725e8df]
  412cac:	jb     0x412c75
  412cae:	ror    BYTE PTR [eax-0x19],0xfc
  412cb2:	sub    ah,0x60
  412cb5:	sub    eax,0x7b24aed2
  412cba:	pop    es
  412cbb:	adc    eax,0xa01a17b6
  412cc0:	lods   eax,DWORD PTR ds:[esi]
  412cc1:	dec    esp
  412cc2:	xor    edi,DWORD PTR [edx]
  412cc4:	mov    al,0xbc
  412cc6:	push   eax
  412cc7:	xlat   BYTE PTR ds:[ebx]
  412cc8:	or     ch,BYTE PTR [eax]
  412cca:	cdq    
  412ccb:	int3   
  412ccc:	and    al,0xff
  412cce:	(bad)  
  412ccf:	popa   
  412cd0:	jno    0x412c61
  412cd2:	and    edx,DWORD PTR [eax+0x4f]
  412cd5:	add    DWORD PTR [esi+edx*8-0x5796d58a],esi
  412cdc:	and    eax,eax
  412cde:	jae    0x412d42
  412ce0:	imul   edx,DWORD PTR [edi-0x28],0xdfdf0002
  412ce7:	sbb    DWORD PTR [edi],ebx
  412ce9:	xchg   ebp,eax
  412cea:	arpl   WORD PTR [eax+0x1cc74877],cx
  412cf0:	jbe    0x412cf2
  412cf2:	add    edx,eax
  412cf4:	push   ecx
  412cf5:	jg     0x412d2b
  412cf7:	rol    BYTE PTR [edx-0x270178f2],1
  412cfd:	adc    DWORD PTR [edx-0x16],eax
  412d00:	push   ds
  412d01:	shr    BYTE PTR ds:0xb549e832,cl
  412d07:	sbb    DWORD PTR [esi+ecx*2+0x1c82e0bc],edi
  412d0e:	out    0x27,al
  412d10:	jmp    0x410a:0x67c2e133
  412d17:	inc    ecx
  412d18:	sti    
  412d19:	inc    ebx
  412d1a:	iret   
  412d1b:	mov    edi,0xff98fb2f
  412d20:	adc    al,0x2b
  412d22:	idiv   DWORD PTR [ebp+0x5c]
  412d25:	aad    0x52
  412d27:	mov    bl,0xb5
  412d29:	ins    DWORD PTR es:[edi],dx
  412d2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d2b:	xor    DWORD PTR [eax+0x4709d27b],0x8c6d5c49
  412d35:	mov    al,0x53
  412d37:	cs ja  0x412cc2
  412d3a:	scas   al,BYTE PTR es:[edi]
  412d3b:	data16 shl BYTE PTR [edi-0x42],cl
  412d3f:	or     BYTE PTR [ebx-0x1490b129],cl
  412d45:	mov    esp,ds
  412d47:	push   ecx
  412d48:	mov    al,ds:0x4a66ed45
  412d4d:	push   edx
  412d4e:	test   DWORD PTR [edx+0x6d],esi
  412d51:	or     ch,BYTE PTR [edx]
  412d53:	sbb    DWORD PTR [ebp-0x2c0e3cf0],edx
  412d59:	lods   eax,DWORD PTR ds:[esi]
  412d5a:	lds    edi,FWORD PTR [ebp-0x24]
  412d5d:	jnp    0x412dc5
  412d5f:	ss mov cl,0x3c
  412d62:	lods   eax,DWORD PTR ds:[esi]
  412d63:	xchg   edx,eax
  412d64:	mov    BYTE PTR [edi+0x687f5e20],0xaa
  412d6b:	(bad)  
  412d6c:	and    eax,0xc9fdf16c
  412d71:	sti    
  412d72:	mov    eax,0x1b508500
  412d77:	(bad)  
  412d78:	jecxz  0x412dd0
  412d7a:	loope  0x412dc8
  412d7c:	ret    0x189e
  412d7f:	or     BYTE PTR [ebx-0x30efae2e],bh
  412d85:	cs adc al,0xef
  412d88:	dec    esi
  412d89:	scas   eax,DWORD PTR es:[edi]
  412d8a:	cld    
  412d8b:	imul   edi,DWORD PTR [esi-0x79],0x779a5e1b
  412d92:	cdq    
  412d93:	ret    
  412d94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d95:	sub    eax,0xa0d3e592
  412d9a:	fwait
  412d9b:	inc    esi
  412d9c:	(bad)  
  412d9d:	iret   
  412d9e:	fcom   st(7)
  412da0:	mov    ebp,0xb4b4d423
  412da5:	sbb    DWORD PTR [edx],esp
  412da7:	shl    ebx,0xb5
  412daa:	push   0x2b
  412dac:	jbe    0x412d96
  412dae:	add    BYTE PTR [ecx+0x78c0538a],dl
  412db4:	leave  
  412db5:	and    DWORD PTR [esi+0x2d],eax
  412db8:	or     dh,0xee
  412dbb:	adc    BYTE PTR [esp+edx*1-0x6b226e63],bh
  412dc2:	push   cs
  412dc3:	out    dx,al
  412dc4:	(bad)  
  412dc5:	int3   
  412dc6:	cld    
  412dc7:	out    0xc6,al
  412dc9:	jmp    0x9f7693ba
  412dce:	jo     0x412dee
  412dd0:	sahf   
  412dd1:	stc    
  412dd2:	push   ecx
  412dd3:	test   al,0x36
  412dd5:	xchg   ebx,eax
  412dd6:	nop
  412dd7:	arpl   WORD PTR [edx+0x7a],dx
  412dda:	fistp  DWORD PTR [esi-0x285cb063]
  412de0:	lock add eax,0x7364019c
  412de6:	inc    edi
  412de7:	imul   esi,DWORD PTR [eax+0x7e],0xa8ec5199
  412dee:	xor    esp,DWORD PTR ss:[ecx]
  412df1:	mov    eax,ds:0xf1b58997
  412df6:	mov    edi,0x23f521ee
  412dfb:	jg     0x412e12
  412dfd:	add    BYTE PTR [ebx+eiz*1-0x1c],0x18
  412e02:	pop    ebx
  412e03:	sar    BYTE PTR [ebp+0x2013969d],0xf6
  412e0a:	sar    DWORD PTR [esi-0x78ffcac4],0x18
  412e11:	cmp    DWORD PTR [ecx],0x15
  412e14:	push   ebp
  412e15:	cmp    al,BYTE PTR [esi]
  412e17:	sbb    cl,BYTE PTR [ebp-0x66c0b683]
  412e1d:	or     ch,ah
  412e1f:	lods   al,BYTE PTR ds:[esi]
  412e20:	and    al,0xcb
  412e22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e23:	and    eax,0x4519d24f
  412e28:	xchg   ebp,eax
  412e29:	adc    al,0xf5
  412e2b:	cli    
  412e2c:	(bad)  
  412e2d:	or     al,0xea
  412e2f:	gs jmp 0x6473:0xbe5db54a
  412e37:	mov    dl,0x9e
  412e39:	test   DWORD PTR [edx],edx
  412e3b:	arpl   WORD PTR [ecx],bx
  412e3d:	push   ecx
  412e3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e3f:	xor    BYTE PTR [ecx],ah
  412e41:	mov    al,0x17
  412e43:	mov    bl,0x6a
  412e45:	fwait
  412e46:	mov    eax,ds:0xb66e6e4b
  412e4b:	fs pusha 
  412e4d:	(bad)
  412e50:	ds pop ss
  412e52:	adc    al,BYTE PTR [ebx-0x56]
  412e55:	push   esp
  412e56:	jle    0x412ed0
  412e58:	or     bh,dh
  412e5a:	loopne 0x412e55
  412e5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e5d:	add    DWORD PTR [edi-0x2de0ad96],esp
  412e63:	popa   
  412e64:	in     eax,dx
  412e65:	sbb    dh,BYTE PTR [ebp-0x1f]
  412e68:	pop    esi
  412e69:	xchg   DWORD PTR [edi],esp
  412e6b:	dec    DWORD PTR [esi-0x58576197]
  412e71:	retf   
  412e72:	or     DWORD PTR [ebx],eax
  412e74:	sahf   
  412e75:	nop
  412e76:	push   esi
  412e77:	xor    DWORD PTR [eax+ebp*2+0x211b2cec],esi
  412e7e:	loopne 0x412ec1
  412e80:	xchg   ecx,eax
  412e81:	aad    0xbc
  412e83:	pop    edx
  412e84:	mov    dl,0xa6
  412e86:	push   0x9626cae6
  412e8b:	(bad)  
  412e8c:	jno    0x412e71
  412e8e:	ficomp WORD PTR [ecx+ebp*4+0x51]
  412e92:	jmp    0x399ad801
  412e97:	inc    edi
  412e98:	test   BYTE PTR [ebp-0x35],dh
  412e9b:	push   ecx
  412e9c:	sub    ebp,ebp
  412e9e:	mov    ecx,?
  412ea0:	push   eax
  412ea1:	in     eax,dx
  412ea2:	and    eax,0xe2616bb4
  412ea7:	xor    BYTE PTR [ebp-0x2f32ca80],ah
  412ead:	scas   al,BYTE PTR es:[edi]
  412eae:	ret    0x2991
  412eb1:	push   esi
  412eb2:	cmp    ah,BYTE PTR [edx+0x6b7ce926]
  412eb8:	imul   esp,DWORD PTR [ebx-0x2b19c2b4],0xffffffe8
  412ebf:	ins    BYTE PTR es:[edi],dx
  412ec0:	jbe    0x412eb2
  412ec2:	retf   0xd8a2
  412ec5:	test   al,0x83
  412ec7:	cmp    BYTE PTR [eax+0x1fbb7485],bl
  412ecd:	sbb    BYTE PTR [esi+edi*2+0x71083495],ch
  412ed4:	jmp    0xe1910d7d
  412ed9:	adc    al,0xf
  412edb:	data16 scas al,BYTE PTR es:[edi]
  412edd:	in     al,dx
  412ede:	and    bl,BYTE PTR [esi-0x20]
  412ee1:	or     BYTE PTR [eax+0x2e],dh
  412ee4:	std    
  412ee5:	pop    ds
  412ee6:	cmp    al,0x4f
  412ee8:	jae    0x412f28
  412eea:	ins    BYTE PTR es:[edi],dx
  412eeb:	ds push 0x4d
  412eee:	cdq    
  412eef:	fdivr  QWORD PTR [edi]
  412ef1:	adc    eax,0x68e2630f
  412ef6:	lahf   
  412ef7:	jle    0x412ec6
  412ef9:	jmp    0x48fe9561
  412efe:	jbe    0x412f25
  412f00:	gs fwait
  412f02:	fwait
  412f03:	ret    0x1f31
  412f06:	das    
  412f07:	dec    eax
  412f08:	or     dh,BYTE PTR [ebx+0x6c9a8b35]
  412f0e:	call   0xf147:0xbcbec250
  412f15:	in     eax,0x60
  412f17:	and    DWORD PTR [edx],0x69657e38
  412f1d:	cmp    ah,al
  412f1f:	hlt    
  412f20:	mov    DWORD PTR [edx],esp
  412f22:	jne    0x412f88
  412f24:	pop    esp
  412f25:	jp     0x412f1d
  412f27:	or     BYTE PTR [ebx+edi*1-0x36d838a],cl
  412f2e:	pop    edx
  412f2f:	and    BYTE PTR [ebp-0x4687a0df],0xb4
  412f36:	aas    
  412f37:	push   es
  412f38:	in     al,dx
  412f39:	leave  
  412f3a:	adc    ebp,esi
  412f3c:	sar    BYTE PTR [edx],0x2c
  412f3f:	inc    ecx
  412f40:	xchg   BYTE PTR [esi+0x11e1b88b],dh
  412f46:	test   eax,0x4a67222a
  412f4b:	or     al,0x56
  412f4d:	pop    es
  412f4e:	push   ebp
  412f4f:	scas   eax,DWORD PTR es:[edi]
  412f50:	ds das 
  412f52:	sub    dl,al
  412f54:	adc    dl,BYTE PTR [esi-0x27]
  412f57:	(bad)  
  412f59:	push   es
  412f5a:	xchg   esi,eax
  412f5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f5c:	(bad)  
  412f5d:	gs test eax,0xc888fbcc
  412f63:	push   eax
  412f64:	or     eax,0x9e48efcf
  412f69:	mov    edi,0x9846c761
  412f6e:	fbstp  TBYTE PTR [esi-0xe]
  412f71:	xchg   esp,eax
  412f72:	dec    edx
  412f73:	add    DWORD PTR [eax+0x501fcd96],ebp
  412f79:	dec    esi
  412f7a:	shl    ebx,cl
  412f7c:	xchg   ebx,eax
  412f7d:	sbb    edx,DWORD PTR [edi+0x16204fbc]
  412f83:	push   edi
  412f84:	iret   
  412f85:	es inc esi
  412f87:	mov    esi,0xfc0f94c8
  412f8c:	adc    DWORD PTR [edx-0xb6f2c7],0x286ca751
  412f96:	cmp    DWORD PTR [eax+0x37df4f22],esi
  412f9c:	outs   dx,BYTE PTR ds:[esi]
  412f9d:	pushf  
  412f9e:	jecxz  0x412fdd
  412fa0:	xchg   DWORD PTR [esi+0x62],esp
  412fa3:	xor    eax,0xfb612946
  412fa8:	inc    eax
  412fa9:	mov    cl,0xfc
  412fab:	bound  eax,QWORD PTR [edi+eiz*1]
  412fae:	mov    DWORD PTR [esi-0x65],ecx
  412fb1:	push   eax
  412fb2:	push   ds
  412fb3:	(bad)  
  412fb4:	jmp    0x412f59
  412fb6:	mov    al,ds:0x6832ecb8
  412fbb:	push   esp
  412fbc:	sub    al,0xb0
  412fbe:	outs   dx,DWORD PTR ds:[esi]
  412fbf:	cdq    
  412fc0:	sbb    al,0x37
  412fc2:	stos   BYTE PTR es:[edi],al
  412fc3:	fldenv [ebp-0x15e77b92]
  412fc9:	mov    ebx,0xc28ef02d
  412fce:	shl    esi,cl
  412fd0:	dec    ebx
  412fd1:	pop    eax
  412fd2:	in     eax,0x98
  412fd4:	or     esp,eax
  412fd6:	jp     0x412f9f
  412fd8:	dec    ecx
  412fd9:	aas    
  412fda:	outs   dx,DWORD PTR ds:[esi]
  412fdb:	or     DWORD PTR [esi+0x175cc0ad],ebx
  412fe1:	jo     0x412fa8
  412fe3:	adc    ah,BYTE PTR [ecx+0x8]
  412fe6:	fild   DWORD PTR [edi+0x5de807f6]
  412fec:	shl    BYTE PTR [ebx],1
  412fee:	retf   0x88de
  412ff1:	cmp    DWORD PTR [ebp+0x7d65ee8a],esi
  412ff7:	xor    DWORD PTR [ebp+0x5fc052c6],esi
  412ffd:	pop    ss
  412ffe:	sbb    al,0x54
  413000:	jg     0x412fa4
  413002:	push   0xffffffe3
  413004:	mov    ch,0xf8
  413006:	popf   
  413007:	in     eax,0x16
  413009:	jge    0x413060
  41300b:	repnz mov dl,0x5
  41300e:	jecxz  0x412fe1
  413010:	outs   dx,DWORD PTR ds:[esi]
  413011:	pusha  
  413012:	das    
  413013:	mov    cl,0x29
  413015:	mov    bh,0xef
  413017:	enter  0x46b8,0xc4
  41301b:	(bad)  
  41301d:	fwait
  41301e:	sub    BYTE PTR [edx+esi*8+0x259a8e12],dh
  413025:	xchg   esp,eax
  413026:	push   es
  413027:	pushf  
  413028:	dec    esi
  413029:	push   edi
  41302a:	or     al,0x4d
  41302c:	xchg   BYTE PTR [edi+edi*4],dh
  41302f:	add    DWORD PTR [edx],eax
  413031:	xchg   ebx,eax
  413032:	mov    DWORD PTR [edi],ebx
  413034:	xor    ecx,DWORD PTR [esi-0xe18eefa]
  41303a:	shl    DWORD PTR [edi+0x20d11e8d],1
  413040:	jns    0x4130bb
  413042:	cmp    ebp,DWORD PTR [eax+edx*4]
  413045:	lods   eax,DWORD PTR ds:[esi]
  413046:	pop    esi
  413047:	test   eax,0x99e78441
  41304c:	dec    esp
  41304d:	popf   
  41304e:	add    dh,dl
  413050:	mov    cl,0x62
  413052:	xchg   DWORD PTR [ebx+eiz*4+0x52],esp
  413056:	loopne 0x412fee
  413058:	loop   0x4130a4
  41305a:	and    al,0x9
  41305c:	fstp   DWORD PTR cs:[ecx+0x69]
  413060:	int3   
  413061:	xchg   ebp,eax
  413062:	push   ebx
  413063:	xor    ecx,esp
  413065:	mov    al,0x10
  413067:	push   esi
  413068:	test   al,0x95
  41306a:	fwait
  41306b:	loopne 0x413012
  41306d:	imul   ecx,DWORD PTR [edx-0x1e93caa8],0xa970fa74
  413077:	inc    esp
  413079:	pop    ecx
  41307a:	add    BYTE PTR [ecx],cl
  41307c:	loope  0x413067
  41307e:	mov    ch,0xf7
  413080:	in     al,0x64
  413082:	fidiv  WORD PTR [ebx+0x3f]
  413085:	fwait
  413086:	ret    0x59fa
  413089:	ss ins BYTE PTR es:[edi],dx
  41308b:	cmp    eax,0xf04c2a3a
  413090:	fsubr  st(5),st
  413092:	inc    ebx
  413093:	cmp    edi,DWORD PTR [esi-0x57]
  413096:	mov    ebx,0x13cef2e0
  41309b:	mov    BYTE PTR [esi+eiz*1-0x36],dl
  41309f:	stos   DWORD PTR es:[edi],eax
  4130a0:	sbb    DWORD PTR [ebp-0x3052ee8d],0xa8971a22
  4130aa:	stos   BYTE PTR es:[edi],al
  4130ab:	lods   al,BYTE PTR ds:[esi]
  4130ac:	sbb    edi,DWORD PTR [ebp-0x74f9f259]
  4130b2:	ror    DWORD PTR [ebx],1
  4130b4:	xor    edx,esp
  4130b6:	push   es
  4130b7:	jp     0x4130da
  4130b9:	retf   
  4130ba:	pop    ecx
  4130bb:	sub    BYTE PTR [edi+0x7fa47909],ah
  4130c1:	pushf  
  4130c2:	inc    ecx
  4130c3:	ins    BYTE PTR es:[edi],dx
  4130c4:	out    dx,al
  4130c5:	adc    dl,BYTE PTR [ebp-0x751a5cab]
  4130cb:	xchg   ecx,eax
  4130cc:	xlat   BYTE PTR ds:[ebx]
  4130cd:	push   es
  4130ce:	push   0xffffff89
  4130d0:	mov    es,WORD PTR [ecx+0x5f]
  4130d3:	mov    al,0x2e
  4130d5:	int3   
  4130d6:	loopne 0x41306a
  4130d8:	cmc    
  4130d9:	jle    0x4130fc
  4130db:	add    dl,BYTE PTR [esi+0x1f24f0ea]
  4130e1:	mov    bl,0x33
  4130e3:	pop    edi
  4130e4:	mov    ss,WORD PTR [eax]
  4130e6:	clc    
  4130e7:	clc    
  4130e8:	sub    DWORD PTR [edi*2-0x43c38338],ebx
  4130ef:	push   0xde533e0b
  4130f4:	(bad)
  4130f7:	adc    cl,BYTE PTR [edi]
  4130f9:	push   ebp
  4130fa:	adc    ecx,DWORD PTR [edi]
  4130fc:	mov    ss:0x6efcf948,al
  413102:	xchg   BYTE PTR ds:0x6010cb03,dl
  413108:	mov    al,0x94
  41310a:	jecxz  0x41315a
  41310c:	sahf   
  41310d:	sbb    edi,ecx
  41310f:	call   0xf1a0:0xd10eb673
  413116:	jg     0x4130e8
  413118:	push   eax
  413119:	pop    ebx
  41311a:	mov    ds:0x1bdc090b,eax
  41311f:	mov    esp,esi
  413121:	xchg   esi,eax
  413122:	or     esp,ecx
  413124:	mov    BYTE PTR ds:0x879c5f41,dl
  41312a:	mov    ds:0xb1d90634,eax
  41312f:	jmp    0xd1ca0198
  413134:	xchg   BYTE PTR [edi+0x3b],al
  413137:	push   esi
  413138:	ins    BYTE PTR es:[edi],dx
  413139:	dec    edx
  41313a:	mov    ah,0xf8
  41313c:	jle    0x41313d
  41313e:	call   0x2988:0xb7b42ce6
  413145:	lods   al,BYTE PTR ds:[esi]
  413146:	repnz pop eax
  413148:	rol    BYTE PTR [ebx-0x6209fd67],1
  41314e:	fcomp  QWORD PTR [ebp-0x29]
  413151:	repz jne 0x4130ed
  413154:	push   0xdabd51bf
  413159:	test   BYTE PTR [ebp-0x60d6fbd6],bl
  41315f:	call   0x5aedbb7b
  413164:	cdq    
  413165:	sahf   
  413166:	popf   
  413167:	enter  0xa83c,0x58
  41316b:	clc    
  41316c:	test   BYTE PTR [edx-0x13],ah
  41316f:	mov    al,0xc0
  413171:	add    al,0x64
  413173:	mov    eax,ds:0x613dc25e
  413178:	sub    bl,0xad
  41317b:	xor    DWORD PTR [edx+0x59],0x4d6788b7
  413182:	jge    0x4131f9
  413184:	xor    bh,ch
  413186:	jl     0x413130
  413188:	jne    0x413151
  41318a:	xor    al,0xc3
  41318c:	mov    eax,ds:0xa7e6c25c
  413191:	jmp    0x37e5:0x6487f02e
  413198:	ret    0x1784
  41319b:	mul    DWORD PTR [eax+0x4b]
  41319e:	(bad)  
  41319f:	mov    bl,0x1b
  4131a1:	out    0xb7,al
  4131a3:	pop    ebp
  4131a4:	mov    ebp,0xce7e5497
  4131a9:	js     0x41315f
  4131ab:	xchg   ecx,eax
  4131ac:	in     al,dx
  4131ad:	add    BYTE PTR [ebx],0xf7
  4131b0:	sub    eax,0x95a125a3
  4131b5:	push   ebx
  4131b6:	mov    al,0x9a
  4131b8:	repz les edi,FWORD PTR [eax+0x31]
  4131bc:	mov    dl,0xe2
  4131be:	or     al,0xa8
  4131c0:	in     al,0xd7
  4131c2:	push   eax
  4131c3:	jne    0x413145
  4131c5:	jmp    0x8238:0x79224c60
  4131cc:	adc    DWORD PTR [eax+0x3099f6f5],edx
  4131d2:	into   
  4131d3:	or     BYTE PTR [edi-0x40143d8c],al
  4131d9:	sub    edx,DWORD PTR [esi-0x280c0857]
  4131df:	sbb    al,cl
  4131e1:	ins    BYTE PTR es:[edi],dx
  4131e2:	ss ins BYTE PTR es:[edi],dx
  4131e4:	addr16 cmp al,0xee
  4131e7:	stc    
  4131e8:	and    DWORD PTR [esi+0x25],esi
  4131eb:	add    ebp,DWORD PTR [edx+0x6130a4e4]
  4131f1:	push   ebx
  4131f2:	sbb    cl,BYTE PTR ds:0xe4693423
  4131f8:	fbstp  TBYTE PTR [ebp-0x78db5fc2]
  4131fe:	(bad)  [edi]
  413200:	fcomp  QWORD PTR [edx-0x6c2ffc85]
  413206:	mov    ebx,0x793a45eb
  41320b:	and    DWORD PTR [edx],esi
  41320d:	ret    
  41320e:	popf   
  41320f:	sbb    ebp,eax
  413211:	pop    eax
  413212:	cmp    DWORD PTR [edx-0x19],esi
  413215:	stos   BYTE PTR es:[edi],al
  413216:	lahf   
  413217:	arpl   WORD PTR [ecx+0x37a1f105],si
  41321d:	cmp    eax,0xea65a34f
  413222:	stos   BYTE PTR es:[edi],al
  413223:	xchg   ebp,eax
  413224:	jp     0x413217
  413226:	inc    ebx
  413227:	xor    ah,ch
  413229:	jno    0x413246
  41322b:	push   esi
  41322c:	mov    bl,0x7d
  41322e:	jge    0x41324d
  413230:	mov    ds:0x422e9a1a,al
  413235:	xchg   edx,eax
  413236:	mov    WORD PTR [esi+0x13],ss
  413239:	or     BYTE PTR es:[edi+ecx*1-0x675d3490],0xc9
  413242:	and    BYTE PTR [eax],0x85
  413245:	push   ecx
  413246:	jno    0x41329a
  413248:	enter  0xa44e,0xae
  41324c:	lods   eax,DWORD PTR ds:[esi]
  41324d:	inc    ecx
  41324e:	pop    ebx
  41324f:	fxam   
  413251:	popf   
  413252:	cdq    
  413253:	cmp    DWORD PTR [edi-0x5b6aeca],ecx
  413259:	xor    BYTE PTR [ebp+eiz*4+0x6b2bea7],al
  413260:	enter  0xcd09,0x47
  413264:	sbb    eax,0x5b7732f7
  413269:	arpl   WORD PTR [ebp-0x10],bp
  41326c:	mov    ecx,0xef75f6d9
  413271:	(bad)  [ebp-0x70]
  413274:	mov    eax,DWORD PTR [ebx]
  413276:	(bad)  
  413277:	jl     0x413253
  413279:	xlat   BYTE PTR ds:[ebx]
  41327a:	sub    ebx,eax
  41327c:	or     dl,ch
  41327e:	lods   eax,DWORD PTR ds:[esi]
  41327f:	ja     0x413261
  413281:	(bad)  
  413283:	mov    BYTE PTR [eax+0x5b],ah
  413286:	test   eax,0x9d8c9ac0
  41328b:	jns    0x413258
  41328d:	or     edx,DWORD PTR [esp+ebx*4-0x10]
  413291:	(bad)  
  413292:	xor    eax,0xd77b1e4e
  413297:	call   0xe16f:0x5a532e5e
  41329e:	push   cs
  41329f:	jbe    0x41328d
  4132a1:	data16 cmp al,bl
  4132a4:	xor    esp,DWORD PTR gs:[eax+0x1531638f]
  4132ab:	test   al,0x24
  4132ad:	adc    ebp,ebx
  4132af:	ret    0x7a37
  4132b2:	add    ebp,DWORD PTR [bp+si]
  4132b5:	or     DWORD PTR [edi+ebp*2],0xe
  4132b9:	xchg   ebp,eax
  4132ba:	inc    DWORD PTR [edi-0x8]
  4132bd:	or     dh,BYTE PTR [eax-0x888cd1d]
  4132c3:	(bad)  
  4132c4:	jle    0x4132b2
  4132c6:	sub    ebx,esp
  4132c8:	(bad)  
  4132cb:	sbb    al,0x2a
  4132cd:	sbb    al,0x70
  4132cf:	mov    ?,WORD PTR [ebx-0x2f]
  4132d2:	mov    ds:0xa74f40d0,eax
  4132d7:	jl     0x4132f2
  4132d9:	xor    dl,BYTE PTR [esp+ebx*2-0x7d6fc184]
  4132e0:	adc    BYTE PTR [eax+0x320602fa],bl
  4132e6:	sahf   
  4132e7:	aaa    
  4132e8:	adc    al,0xb5
  4132ea:	mov    eax,ds:0x72c48255
  4132ef:	sbb    DWORD PTR [ecx+0x7e8a59a1],edi
  4132f5:	sub    DWORD PTR [ecx],ecx
  4132f7:	sub    BYTE PTR [eax+0x49],al
  4132fa:	and    DWORD PTR [ebp+0x65],ebx
  4132fd:	retf   
  4132fe:	inc    esi
  4132ff:	fsubr  QWORD PTR ds:0x6528c0db
  413305:	enter  0xc857,0x73
  413309:	mov    al,ds:0xa9971c52
  41330e:	and    ch,ch
  413310:	retf   0xab
  413313:	ds cmp al,0xc6
  413316:	out    0x83,al
  413318:	dec    eax
  413319:	inc    edx
  41331a:	sub    ebp,DWORD PTR [edx+edi*1-0x68838a42]
  413321:	popf   
  413322:	fs pop edx
  413324:	mov    ?,WORD PTR [ebp-0x30]
  413327:	stc    
  413328:	fsubr  st(5),st
  41332a:	mov    ah,0x31
  41332c:	pop    es
  41332d:	xor    DWORD PTR [eax-0x7e],esi
  413330:	cmp    DWORD PTR [edx],edx
  413332:	dec    edi
  413333:	lds    esp,FWORD PTR [edi]
  413335:	add    al,0xf8
  413337:	cdq    
  413338:	or     cl,BYTE PTR [esi-0x75]
  41333b:	jmp    0xce075f95
  413340:	aas    
  413341:	fnsave [eax-0x11bded5e]
  413347:	sub    BYTE PTR [edx],dl
  413349:	cdq    
  41334a:	mov    dh,0x12
  41334c:	pop    ebx
  41334d:	shl    BYTE PTR [edx+esi*1+0x22],0x7f
  413352:	call   0x5998a92f
  413357:	adc    eax,0xeb2f8731
  41335c:	adc    cl,BYTE PTR [edx+0x75]
  41335f:	sub    eax,DWORD PTR [edi]
  413361:	push   ebp
  413362:	or     al,0xc0
  413364:	leave  
  413365:	mov    edi,0x2008499d
  41336a:	mov    DWORD PTR [ecx+ecx*1-0x5a],0xb3d2ace3
  413372:	aam    0x46
  413374:	xor    al,0x1d
  413376:	ja     0x413340
  413378:	or     eax,0x97314b78
  41337d:	fstp   DWORD PTR [ecx]
  41337f:	cmp    al,0x3f
  413381:	ins    DWORD PTR es:[edi],dx
  413382:	test   al,0xa9
  413384:	push   ecx
  413385:	mov    cl,0x46
  413387:	cmp    DWORD PTR [edx-0x15],0xff1fc6be
  41338e:	add    esp,DWORD PTR [eax-0x76]
  413391:	les    ebp,FWORD PTR es:[ecx+0x63b12e1f]
  413398:	push   eax
  413399:	sahf   
  41339a:	ds xor al,0x4b
  41339d:	mov    esi,0x66b42b06
  4133a2:	push   esi
  4133a3:	sbb    BYTE PTR [ebx+0x7da62eaf],ch
  4133a9:	xor    bh,dl
  4133ab:	iret   
  4133ac:	mov    esi,DWORD PTR [ebx-0x2567466d]
  4133b2:	push   es
  4133b3:	sbb    al,0x54
  4133b5:	sbb    cl,bl
  4133b7:	jns    0x413351
  4133b9:	mov    cl,0xd9
  4133bb:	xor    BYTE PTR [ecx],ah
  4133bd:	xor    al,0x71
  4133bf:	ins    DWORD PTR es:[edi],dx
  4133c0:	and    eax,0x64db1140
  4133c5:	cwde   
  4133c6:	jmp    0x413361
  4133c8:	dec    ecx
  4133c9:	(bad)  
  4133ca:	dec    esp
  4133cb:	dec    esp
  4133cc:	mov    ch,0x65
  4133ce:	imul   ebp,DWORD PTR [esi+0xbf21291],0x53
  4133d5:	and    bh,ch
  4133d7:	(bad)  
  4133d8:	fwait
  4133d9:	cdq    
  4133da:	fisub  WORD PTR [edi]
  4133dc:	vmread DWORD PTR [ebp-0x15],esp
  4133e0:	pop    ss
  4133e1:	pop    ebp
  4133e2:	dec    ebp
  4133e3:	jle    0x41342b
  4133e5:	jle    0x413450
  4133e7:	call   0x915b1eea
  4133ec:	jp     0x4133fb
  4133ee:	fsub   DWORD PTR [ebx-0x22]
  4133f1:	cmp    BYTE PTR [edi+0x1bf99ee],0xf9
  4133f8:	jg     0x413404
  4133fa:	jge    0x413449
  4133fc:	arpl   WORD PTR [edx-0x77755263],bp
  413402:	rol    BYTE PTR ds:0x472d,cl
  413407:	aam    0xca
  413409:	cdq    
  41340a:	cmp    esi,DWORD PTR [edx-0xfe3adf4]
  413410:	sub    BYTE PTR [ecx],ch
  413412:	loope  0x413399
  413414:	pushf  
  413415:	rcl    DWORD PTR [ebx+0x4b8135a1],cl
  41341b:	dec    edi
  41341c:	div    cl
  41341e:	xor    eax,0x219119a8
  413423:	cmp    al,0x8e
  413425:	adc    ecx,esp
  413427:	mov    edx,0x3d162d73
  41342c:	pop    ecx
  41342d:	test   ecx,ebx
  41342f:	cmp    bl,BYTE PTR [si+0x1d]
  413433:	fisttp WORD PTR [ebp-0x12]
  413436:	or     BYTE PTR [ebp+0x71],bh
  413439:	add    DWORD PTR [edx+0x78],ebx
  41343c:	je     0x413463
  41343e:	cmp    eax,0xe433f87d
  413443:	xchg   esp,eax
  413444:	adc    esp,DWORD PTR [edx]
  413446:	inc    ebp
  413447:	arpl   WORD PTR [edx],ax
  413449:	lahf   
  41344a:	jbe    0x41345b
  41344c:	cs (bad) 
  41344e:	nop
  41344f:	push   cs
  413450:	add    cl,ch
  413452:	ret    0x3758
  413455:	in     eax,0x85
  413457:	mov    bh,0x28
  413459:	sbb    DWORD PTR [ebp+0x5971f18],esp
  41345f:	cmp    eax,0xc0aef38d
  413464:	inc    esp
  413465:	fmulp  st(2),st
  413467:	sbb    edi,eax
  413469:	pop    ds
  41346a:	pop    ecx
  41346b:	pop    edi
  41346c:	mov    DWORD PTR [eax-0x549f422d],ebx
  413472:	nop
  413473:	cwde   
  413474:	repz mov eax,edi
  413477:	icebp  
  413478:	mov    DWORD PTR [ebp-0x415f8d9c],ebp
  41347e:	xor    al,0x30
  413480:	imul   esp,DWORD PTR [ebx+0x5366e59e],0xffffffca
  413487:	add    ecx,DWORD PTR [eax]
  413489:	xor    eax,0x7279ee00
  41348e:	mov    dl,cl
  413490:	(bad)  
  413491:	mov    BYTE PTR [ebp-0x1c],dl
  413494:	lods   al,BYTE PTR ds:[esi]
  413495:	das    
  413496:	add    edx,0x7ec01716
  41349c:	and    BYTE PTR [edi+0x4b],al
  41349f:	mov    cl,dh
  4134a1:	push   0xef6fb305
  4134a6:	int    0x40
  4134a8:	push   ds
  4134a9:	xchg   edi,eax
  4134aa:	cmc    
  4134ab:	mov    es,WORD PTR [ebx-0x723781bd]
  4134b1:	ins    BYTE PTR es:[edi],dx
  4134b2:	test   BYTE PTR [ebp-0x1c],0xab
  4134b6:	(bad)  
  4134b7:	mov    edi,DWORD PTR [edx]
  4134b9:	inc    ebp
  4134ba:	xor    bh,bh
  4134bc:	cli    
  4134bd:	mov    esp,0xcc37c962
  4134c2:	and    dl,dh
  4134c4:	or     DWORD PTR [ebx-0x8f5aef4],ebx
  4134ca:	jl     0x41349b
  4134cc:	idiv   DWORD PTR [ebp+0x67112314]
  4134d2:	ret    0x1a38
  4134d5:	sbb    DWORD PTR [eax],edx
  4134d7:	jbe    0x413521
  4134d9:	sbb    DWORD PTR [ebx+0x1f4b615c],0x385061a1
  4134e3:	in     al,dx
  4134e4:	pop    eax
  4134e5:	lods   al,BYTE PTR ds:[esi]
  4134e6:	ficom  WORD PTR [ebp-0x7c]
  4134e9:	aas    
  4134ea:	mov    esi,0xee722c57
  4134ef:	push   ebx
  4134f0:	ja     0x4134d6
  4134f2:	rol    BYTE PTR [ecx+0x59],1
  4134f5:	push   ebx
  4134f6:	mov    bh,0x5d
  4134f8:	cmp    dh,BYTE PTR [edi-0x245bddc3]
  4134fe:	out    0x4e,eax
  413500:	push   edx
  413501:	retw   
  413503:	add    BYTE PTR [eax-0x59],0x7d
  413507:	adc    esp,ecx
  413509:	test   BYTE PTR [ebx+eax*4-0x14],bh
  41350d:	mov    ds,esp
  41350f:	push   cs
  413510:	pop    ds
  413511:	ins    BYTE PTR es:[edi],dx
  413512:	ror    BYTE PTR [edx+0x37],cl
  413515:	xchg   edx,eax
  413516:	push   es
  413517:	inc    edi
  413518:	sub    BYTE PTR [esi+eax*4-0x7f],cl
  41351c:	dec    ebp
  41351d:	js     0x41356c
  41351f:	mov    eax,esp
  413521:	push   ebp
  413522:	imul   ebx,ecx,0xffffffbc
  413525:	pop    ss
  413526:	mov    ah,BYTE PTR [eax+0x20]
  413529:	cdq    
  41352a:	xchg   BYTE PTR es:[edx],dh
  41352d:	gs mov al,0x36
  413530:	jae    0x41357e
  413532:	pop    es
  413533:	adc    BYTE PTR [edx-0x78],dh
  413536:	jle    0x413549
  413538:	neg    DWORD PTR [edi+eiz*1]
  41353b:	pop    ds
  41353c:	mov    al,0x6e
  41353e:	xor    al,0xb
  413540:	and    DWORD PTR [edi],ecx
  413542:	push   ebx
  413543:	(bad)  
  413544:	ffree  st(2)
  413546:	inc    ecx
  413547:	gs pop ebx
  413549:	fsubp  st(2),st
  41354b:	std    
  41354c:	dec    ecx
  41354d:	inc    ebp
  41354e:	leave  
  41354f:	sub    DWORD PTR [esi-0x664eb375],0xa89bb88c
  413559:	enter  0xf152,0x70
  41355d:	cmp    bh,0x46
  413560:	mov    ebx,0xbe45a0d
  413565:	sub    BYTE PTR [edx],0x32
  413568:	sub    ebp,DWORD PTR [eax]
  41356a:	pop    esp
  41356b:	loope  0x4134f1
  41356d:	sub    bl,BYTE PTR [edx]
  41356f:	call   0x3435:0x65e1a607
  413576:	and    cl,dh
  413578:	pop    ebx
  413579:	sub    DWORD PTR [ebx-0x5e],esp
  41357c:	mov    ds:0x4bf05ff9,eax
  413581:	adc    al,0x80
  413583:	push   cs
  413584:	fiadd  WORD PTR [ecx-0x4a]
  413587:	xchg   BYTE PTR [edx-0x5d],dh
  41358a:	or     BYTE PTR [ebx+0x2c82b628],dh
  413590:	push   0x58
  413592:	xor    eax,0xe280f55b
  413597:	push   cs
  413598:	fsubp  st(6),st
  41359a:	jp     0x41356b
  41359c:	or     bl,BYTE PTR [ecx-0x71fd3047]
  4135a2:	mov    ecx,0x795634f5
  4135a7:	les    edi,FWORD PTR ds:0xd1383e2d
  4135ad:	fsub   DWORD PTR [esi-0x1cb31f7c]
  4135b3:	jns    0x413591
  4135b5:	mov    ?,WORD PTR [ebx]
  4135b7:	ins    DWORD PTR es:[edi],dx
  4135b8:	pop    eax
  4135b9:	adc    al,0xc9
  4135bb:	push   ecx
  4135bc:	sub    eax,0x49bf34bc
  4135c1:	jb     0x41357f
  4135c3:	outs   dx,BYTE PTR ds:[esi]
  4135c4:	pop    esp
  4135c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135c6:	xlat   BYTE PTR ds:[ebx]
  4135c7:	pop    eax
  4135c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135c9:	dec    ebx
  4135ca:	out    0x12,eax
  4135cc:	jl     0x41355f
  4135ce:	test   DWORD PTR [eax+0x19],ebp
  4135d1:	pop    ds
  4135d2:	shl    BYTE PTR [eax+0x0],0x64
  4135d6:	mov    esp,DWORD PTR [edi+edi*8+0x64f341e9]
  4135dd:	xor    DWORD PTR [edx],esp
  4135df:	jp     0x413628
  4135e1:	pop    ds
  4135e2:	(bad)  
  4135e3:	mov    ah,BYTE PTR [ebx]
  4135e5:	mov    al,ds:0x33b54794
  4135ea:	sbb    al,0x3f
  4135ec:	dec    eax
  4135ed:	cmc    
  4135ee:	xchg   si,ax
  4135f0:	push   ds
  4135f1:	or     eax,0xd4683a92
  4135f6:	mov    dl,0xe5
  4135f8:	rol    BYTE PTR [ecx+0x24],0x9
  4135fc:	mov    esp,0x29083e76
  413601:	lea    eax,ds:0x7ba33b9c
  413607:	(bad)  
  413608:	ss out 0xeb,al
  41360b:	lahf   
  41360c:	sub    eax,0xd9d14186
  413611:	mov    edx,0x65cb62b3
  413616:	xor    BYTE PTR [edx-0xc],bh
  413619:	sahf   
  41361a:	mov    ch,0xea
  41361c:	fild   QWORD PTR [ebp+0x3a]
  41361f:	add    eax,DWORD PTR [esi]
  413621:	mov    ch,0x3b
  413623:	pusha  
  413624:	fistp  DWORD PTR [ebp+0x28]
  413627:	cmp    eax,0xe83bd631
  41362c:	mov    edx,0x49ba97be
  413631:	(bad)
  413636:	cld    
  413637:	dec    edx
  413638:	pusha  
  413639:	stos   BYTE PTR es:[edi],al
  41363a:	dec    edx
  41363b:	sbb    bh,al
  41363d:	mov    eax,ds:0xbef66869
  413642:	imul   edi,DWORD PTR [edi],0x2c
  413645:	or     DWORD PTR [edi],edx
  413647:	sbb    DWORD PTR [ebx],ecx
  413649:	and    al,bh
  41364b:	sbb    al,0x88
  41364d:	std    
  41364e:	out    dx,al
  41364f:	(bad)  
  413651:	cld    
  413652:	xchg   ecx,eax
  413653:	adc    al,BYTE PTR [ebx]
  413655:	pop    ebp
  413656:	clc    
  413657:	adc    DWORD PTR [edi-0x548f0ad2],esp
  41365d:	test   al,0x6f
  41365f:	sbb    DWORD PTR [edi+0x5d9cbf07],ecx
  413665:	mov    DWORD PTR [edx],eax
  413667:	or     ebx,ecx
  413669:	pop    edi
  41366a:	mov    WORD PTR [edx],ds
  41366c:	sahf   
  41366d:	mov    dh,ch
  41366f:	daa    
  413670:	icebp  
  413671:	cmp    BYTE PTR [ecx-0x52],0x8e
  413675:	lods   al,BYTE PTR ds:[esi]
  413676:	pop    edx
  413678:	jge    0x413695
  41367a:	jecxz  0x41365d
  41367c:	sub    eax,0x60aad643
  413681:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413682:	mov    bl,0xc0
  413684:	(bad)  [edi]
  413686:	rcl    BYTE PTR [ebx+0x22925de6],cl
  41368c:	hlt    
  41368d:	sub    esi,esp
  41368f:	enter  0xdd83,0xc4
  413693:	or     dl,BYTE PTR ds:0x2f349a70
  413699:	fstp   DWORD PTR [eax+0x1a]
  41369c:	pop    eax
  41369d:	sbb    DWORD PTR [edi+0x1f],ebp
  4136a0:	rol    cl,1
  4136a2:	(bad)  
  4136a3:	daa    
  4136a4:	xchg   edi,eax
  4136a5:	mov    esp,0x380a0e5
  4136aa:	fidivr WORD PTR [edi-0x281d6c3d]
  4136b0:	or     esi,DWORD PTR [edi-0x5e]
  4136b3:	ret    
  4136b4:	mov    edx,0x847020ab
  4136b9:	sub    al,bh
  4136bb:	push   ebp
  4136bc:	test   BYTE PTR [edx+0x469da7c5],dh
  4136c2:	outs   dx,DWORD PTR ds:[esi]
  4136c3:	mov    edi,0x6fbf50b8
  4136c8:	mov    ecx,0x8e4245e7
  4136cd:	clc    
  4136ce:	sub    al,dl
  4136d0:	in     eax,0x9c
  4136d2:	add    DWORD PTR [edi+0x30],0xfffffffe
  4136d6:	xchg   esi,eax
  4136d7:	cmp    esp,DWORD PTR [ebx+ecx*8-0x66]
  4136db:	les    esi,FWORD PTR [edi]
  4136dd:	xor    al,0x83
  4136df:	pop    ecx
  4136e0:	test   cl,ch
  4136e2:	sub    DWORD PTR [ebp-0x171f75e],eax
  4136e8:	icebp  
  4136e9:	clc    
  4136ea:	push   esi
  4136eb:	mov    esi,0x1bcafb83
  4136f0:	jg     0x413770
  4136f2:	(bad)  
  4136f4:	inc    esi
  4136f5:	jg     0x413722
  4136f7:	rol    BYTE PTR [ebx+0x7b0cc3fd],0xc3
  4136fe:	mov    edx,0xad302f10
  413703:	sbb    BYTE PTR [esi+eax*2+0x278764ea],ah
  41370a:	pop    esp
  41370b:	jnp    0x41371f
  41370d:	or     DWORD PTR [edx],edx
  41370f:	into   
  413710:	sbb    edi,DWORD PTR [edi]
  413712:	jmp    0xb707:0xbdc26ba2
  413719:	stos   BYTE PTR es:[edi],al
  41371a:	enter  0xd3f8,0xc5
  41371e:	test   al,0xd6
  413720:	xchg   esp,eax
  413721:	hlt    
  413722:	xchg   edi,eax
  413723:	xor    eax,0x6e42a088
  413728:	xor    eax,0x2731db96
  41372d:	and    eax,0xbbf821ea
  413732:	cs test eax,0xcf5d05f8
  413738:	adc    DWORD PTR [esi],ebx
  41373a:	mov    ah,0xe4
  41373c:	call   0x1b2e:0x9a60b5ed
  413743:	stos   BYTE PTR es:[edi],al
  413744:	imul   ebp,DWORD PTR [ebx-0x5c],0xffffffdb
  413748:	ins    BYTE PTR es:[edi],dx
  413749:	pop    esi
  41374a:	xchg   BYTE PTR [edi+0x447058eb],cl
  413750:	inc    esp
  413751:	xor    bh,dh
  413753:	add    eax,0x8fae1a6e
  413758:	stos   BYTE PTR es:[edi],al
  413759:	lock fwait
  41375b:	pop    es
  41375c:	lea    esi,[eax+0x2d]
  41375f:	lds    ecx,FWORD PTR [edi+0x69fa1418]
  413765:	ret    0x88b2
  413768:	mov    esi,0x57dd6e8f
  41376d:	mov    ecx,0x7f7cc6b0
  413772:	or     DWORD PTR [edi-0x14c783e1],ebx
  413778:	inc    ecx
  413779:	cwde   
  41377a:	lock xchg eax,edi
  41377d:	xchg   ebx,eax
  41377e:	sub    dl,BYTE PTR [eax-0x28]
  413781:	sbb    eax,DWORD PTR [edi+ebx*1+0x1119b7e8]
  413788:	jne    0x413784
  41378a:	cmp    al,0x33
  41378c:	cmp    eax,0xf640072e
  413791:	lods   al,BYTE PTR ds:[esi]
  413792:	loope  0x413740
  413794:	icebp  
  413795:	enter  0xcc13,0x5e
  413799:	aas    
  41379a:	data16 mov al,0xbb
  41379d:	jmp    0x4137ba
  41379f:	xchg   ebx,eax
  4137a0:	or     DWORD PTR [ecx+0x59],ecx
  4137a3:	add    bl,cl
  4137a5:	mov    ds:0xc9095791,eax
  4137aa:	cwde   
  4137ab:	jg     0x4137f0
  4137ad:	mov    ah,0xdd
  4137af:	icebp  
  4137b0:	jle    0x413791
  4137b2:	sbb    ch,BYTE PTR [ebx]
  4137b4:	(bad)  
  4137b5:	dec    esp
  4137b6:	jnp    0x413814
  4137b8:	lea    ebx,[ecx]
  4137ba:	xor    DWORD PTR [ecx],esi
  4137bc:	sahf   
  4137bd:	rcr    DWORD PTR [edi],cl
  4137bf:	pop    ds
  4137c0:	pop    esi
  4137c1:	fwait
  4137c2:	xchg   DWORD PTR [ecx-0x34],ecx
  4137c5:	adc    cl,bh
  4137c7:	add    eax,0x585d3e5a
  4137cc:	jne    0x4137f1
  4137ce:	jbe    0x41383c
  4137d0:	sbb    bl,BYTE PTR [ecx-0x22083201]
  4137d6:	lea    eax,[edx-0x687a62c6]
  4137dc:	jecxz  0x413821
  4137de:	js     0x413853
  4137e0:	sub    BYTE PTR [eax],bl
  4137e2:	push   eax
  4137e3:	rol    DWORD PTR [edi],cl
  4137e5:	xor    ebp,DWORD PTR [edx-0x72]
  4137e8:	and    al,0x15
  4137ea:	popa   
  4137eb:	neg    DWORD PTR ds:0x56ebff0f
  4137f1:	push   es
  4137f2:	and    ebp,eax
  4137f4:	cmp    al,0x2d
  4137f6:	ins    BYTE PTR es:[edi],dx
  4137f7:	test   eax,0x8e6309cb
  4137fc:	pop    ebx
  4137fd:	mov    ds:0x1675fab3,al
  413802:	mov    eax,ds:0x6e220d1d
  413807:	clc    
  413808:	sahf   
  413809:	stos   DWORD PTR es:[edi],eax
  41380a:	sub    al,0xbb
  41380c:	mov    WORD PTR [edx+0x782128fe],ss
  413812:	dec    ecx
  413813:	loope  0x413888
  413815:	add    BYTE PTR [edx+0x53],0xa2
  413819:	jb     0x413801
  41381b:	fidivr DWORD PTR [ebp+0x26]
  41381e:	mov    ds:0x717a328f,al
  413823:	jmp    0x4137ee
  413825:	mov    edi,0xa19e3cf6
  41382a:	psraw  mm1,QWORD PTR [edx+0x8]
  41382e:	daa    
  41382f:	adc    al,al
  413831:	push   cs
  413832:	adc    al,0x1c
  413834:	push   cs
  413835:	inc    ebx
  413836:	dec    edi
  413837:	add    eax,0xdcf9590f
  41383c:	mov    BYTE PTR [ecx+0x16],ah
  41383f:	mov    ds:0xfbcdb414,al
  413844:	push   edi
  413845:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413846:	cwde   
  413847:	aas    
  413848:	(bad)  
  413849:	sbb    DWORD PTR [edi+0x2512f69],edi
  41384f:	pop    edi
  413850:	out    0x36,eax
  413852:	jl     0x4137d4
  413854:	fidiv  DWORD PTR [edi-0x4af122ce]
  41385a:	cli    
  41385b:	in     eax,0xbf
  41385d:	dec    DWORD PTR [esi+0x400c31f1]
  413863:	cmp    BYTE PTR [edx+0x2f],bl
  413866:	jne    0x413811
  413868:	dec    ebx
  413869:	dec    ebx
  41386a:	jnp    0x4138e3
  41386c:	cwde   
  41386d:	adc    DWORD PTR [ebp+0x2cbbd23c],ebx
  413873:	push   ebx
  413874:	bound  ecx,QWORD PTR [eax+0x12177492]
  41387a:	in     al,0x56
  41387c:	jmp    0x41388b
  41387e:	push   ecx
  41387f:	sbb    edi,DWORD PTR [esi+0x520c2459]
  413885:	sub    bh,BYTE PTR [edi]
  413887:	mov    ebx,DWORD PTR [esi-0x5f6e6381]
  41388d:	add    eax,0xea6422d
  413892:	outs   dx,DWORD PTR ds:[esi]
  413893:	jae    0x4138d5
  413895:	clc    
  413896:	lea    esi,[eax-0x4a5885d0]
  41389c:	pop    es
  41389d:	jge    0x4138ef
  41389f:	mov    edi,0x6b0295fc
  4138a4:	cmc    
  4138a5:	fwait
  4138a6:	inc    ebp
  4138a7:	add    al,0x7f
  4138a9:	mul    DWORD PTR [esi+0x41]
  4138ac:	pcmpgtw mm0,mm3
  4138af:	push   eax
  4138b0:	sbb    eax,0x8ebb1af6
  4138b5:	pop    edi
  4138b6:	lods   al,BYTE PTR ds:[esi]
  4138b7:	(bad)  
  4138b8:	cmp    al,0x2e
  4138ba:	outs   dx,BYTE PTR ds:[esi]
  4138bb:	lock jp 0x413897
  4138be:	mov    dl,0x74
  4138c0:	cwde   
  4138c1:	sahf   
  4138c2:	add    al,0x1
  4138c4:	push   esp
  4138c5:	and    BYTE PTR [ebx],ch
  4138c7:	sub    bl,BYTE PTR [esi-0x2fadb0e2]
  4138cd:	inc    esp
  4138ce:	inc    edx
  4138cf:	adc    edx,0xabb9912f
  4138d5:	pop    es
  4138d6:	ins    BYTE PTR es:[edi],dx
  4138d7:	leave  
  4138d8:	jg     0x41388a
  4138da:	inc    ebx
  4138db:	fcmovnu st,st(5)
  4138dd:	mov    ecx,cs
  4138df:	addr16 fdiv st(6),st
  4138e2:	data16 add BYTE PTR [eax+ebx*8+0x644a7754],al
  4138ea:	daa    
  4138eb:	mov    ds:0xd6bcc733,eax
  4138f0:	loop   0x41396a
  4138f2:	call   FWORD PTR [edi]
  4138f4:	fistp  WORD PTR [bx+si-0x6ac9]
  4138f9:	dec    DWORD PTR [edi+0x6a3080ef]
  4138ff:	mov    dl,ch
  413901:	mov    ss,ebx
  413903:	xchg   ebp,eax
  413904:	dec    ecx
  413905:	mov    bh,0x84
  413907:	int    0xce
  413909:	adc    DWORD PTR [edx],0x29
  41390c:	xchg   esi,eax
  41390d:	sub    DWORD PTR [edi+0x59],ebx
  413910:	sahf   
  413911:	add    DWORD PTR [esi+0x6b],ecx
  413914:	xor    al,0xe0
  413916:	imul   eax,DWORD PTR [ebx-0x32afe27f],0x78
  41391d:	xor    al,bh
  41391f:	push   es
  413920:	neg    esp
  413922:	aas    
  413923:	rcl    dh,cl
  413925:	fiadd  DWORD PTR [ebp-0x273f418c]
  41392b:	fwait
  41392c:	call   0x4f60:0x5f90ec86
  413933:	cmc    
  413934:	mov    dl,0xd0
  413936:	cmp    al,0x66
  413938:	shl    BYTE PTR [eax+ecx*2-0x4e92c2c4],1
  41393f:	lock jg 0x413923
  413942:	(bad)  
  413944:	jp     0x413924
  413946:	push   edi
  413947:	xchg   ebx,eax
  413948:	aam    0xd
  41394a:	xlat   BYTE PTR ds:[ebx]
  41394b:	div    DWORD PTR [ebp+0x58d1b345]
  413951:	ss aas 
  413953:	jae    0x41394f
  413955:	ret    0x4624
  413958:	dec    edx
  413959:	das    
  41395a:	and    eax,0xb8e3ad80
  41395f:	les    esp,FWORD PTR [esi+0x34634238]
  413965:	dec    esi
  413966:	fnsave [esp+ecx*8-0x464823fc]
  41396d:	jb     0x413907
  41396f:	(bad)  
  413970:	mov    bh,0xa5
  413972:	dec    esp
  413973:	adc    al,0xd8
  413975:	pop    ebp
  413976:	cld    
  413977:	cli    
  413978:	idiv   dl
  41397a:	enter  0x234f,0x90
  41397e:	in     al,0xa3
  413980:	not    BYTE PTR [esi+0x37]
  413983:	pop    ds
  413984:	inc    ebx
  413985:	loop   0x413981
  413987:	or     BYTE PTR fs:[edx+0xc517376],al
  41398e:	outs   dx,DWORD PTR ds:[esi]
  41398f:	aad    0xcd
  413991:	xchg   esi,eax
  413992:	push   esp
  413993:	pop    esp
  413994:	xchg   ebp,eax
  413995:	push   ecx
  413996:	enter  0xad9,0xf7
  41399a:	mov    al,ds:0x93c45eba
  41399f:	mov    dh,0xb4
  4139a1:	dec    edi
  4139a2:	sbb    BYTE PTR [ebx-0x20],dl
  4139a5:	inc    esp
  4139a6:	rol    BYTE PTR [ebx+0x1fe45b09],1
  4139ac:	ret    
  4139ad:	icebp  
  4139ae:	cwde   
  4139af:	fild   QWORD PTR [esi+ebp*8]
  4139b2:	push   ebx
  4139b3:	(bad)  
  4139b4:	cmp    ecx,ebx
  4139b6:	inc    esi
  4139b7:	aas    
  4139b8:	push   ebp
  4139b9:	or     ah,ah
  4139bb:	ins    BYTE PTR es:[edi],dx
  4139bc:	jp     0x413a1d
  4139be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139bf:	sub    edi,DWORD PTR [ebx+eax*4]
  4139c2:	rol    DWORD PTR ds:0xb381ef8e,1
  4139c9:	inc    edx
  4139ca:	sub    BYTE PTR [ebx+0x5a],cl
  4139cd:	fdivp  st(2),st
  4139cf:	cmp    BYTE PTR [ebp+0x511702d7],0x94
  4139d6:	iret   
  4139d7:	adc    ecx,DWORD PTR [edx-0x3c]
  4139da:	retf   0xd451
  4139dd:	sub    DWORD PTR [eax],eax
  4139df:	stc    
  4139e0:	mov    DWORD PTR [ecx],eax
  4139e2:	jo     0x413a35
  4139e4:	xchg   esi,eax
  4139e5:	inc    esp
  4139e6:	mov    esp,DWORD PTR [ecx]
  4139e8:	test   DWORD PTR [edi],eax
  4139ea:	cmp    DWORD PTR [edx-0x58df35d1],edx
  4139f0:	dec    esi
  4139f1:	sahf   
  4139f2:	mov    dl,0x17
  4139f4:	mov    ecx,0x39f26627
  4139f9:	iret   
  4139fa:	pop    ss
  4139fb:	cmc    
  4139fc:	jg     0x41399f
  4139fe:	or     al,0xb0
  413a00:	inc    eax
  413a01:	ja     0x4139db
  413a03:	pop    DWORD PTR [edi-0x5e]
  413a06:	mov    esi,DWORD PTR [eax]
  413a08:	inc    esp
  413a09:	data16 hlt 
  413a0b:	cmc    
  413a0c:	mov    ?,ebx
  413a0e:	stos   DWORD PTR es:[edi],eax
  413a0f:	push   ebp
  413a10:	add    DWORD PTR [ecx-0x76],esi
  413a13:	mov    BYTE PTR [edi+ebx*1-0xbc69219],bl
  413a1a:	fwait
  413a1b:	or     cl,BYTE PTR [esi]
  413a1d:	jle    0x4139fd
  413a1f:	aaa    
  413a20:	mov    bh,0x28
  413a22:	fld    DWORD PTR [ebx+ecx*4]
  413a25:	pop    ecx
  413a26:	fwait
  413a27:	mov    eax,0x76607c37
  413a2c:	adc    edx,DWORD PTR [edx-0x1e]
  413a2f:	call   0x4a904a4
  413a34:	xchg   edx,eax
  413a35:	pop    esp
  413a36:	adc    ebx,DWORD PTR [ecx+0x29fb60e3]
  413a3c:	jae    0x413a53
  413a3e:	xor    al,dh
  413a40:	(bad)  
  413a42:	(bad)  
  413a44:	enter  0x5ea9,0xf9
  413a48:	lahf   
  413a49:	retf   0xf186
  413a4c:	push   es
  413a4d:	xchg   esi,eax
  413a4e:	mov    ds:0x88c4207a,eax
  413a53:	mov    bl,0xd6
  413a55:	jg     0x413a3f
  413a57:	sub    esp,DWORD PTR [edx-0x28c89d97]
  413a5d:	inc    edx
  413a5e:	in     eax,0x4f
  413a60:	xchg   ecx,eax
  413a61:	mov    eax,DWORD PTR [edi-0x11acbf5e]
  413a67:	repnz daa 
  413a69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a6a:	gs push ebx
  413a6c:	push   0x52
  413a6e:	dec    ebx
  413a6f:	mov    esi,DWORD PTR ds:0x4d6cd972
  413a75:	loop   0x413a29
  413a77:	mov    cl,0x2e
  413a79:	xor    ebp,DWORD PTR [ebx-0x475102f0]
  413a7f:	jns    0x413a59
  413a81:	or     DWORD PTR [ecx],0x56
  413a84:	dec    eax
  413a85:	mov    WORD PTR [edx+esi*4-0x6acbcd8f],es
  413a8c:	push   0xcfef45c9
  413a91:	pop    esi
  413a92:	(bad)  
  413a93:	pop    esi
  413a94:	stos   DWORD PTR es:[edi],eax
  413a95:	mov    cl,0x7d
  413a97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a98:	sbb    dh,ch
  413a9a:	mov    BYTE PTR [esp+eiz*8-0x50],bh
  413a9e:	jae    0x413af4
  413aa0:	jp     0x413b0f
  413aa2:	jge    0x413aa4
  413aa4:	test   DWORD PTR [ecx],0x21e6ac71
  413aaa:	inc    esp
  413aab:	inc    edx
  413aac:	fld    QWORD PTR [edx-0x516ba95f]
  413ab2:	mov    fs,WORD PTR [esi-0x2f]
  413ab5:	mov    cl,0x4a
  413ab7:	mov    eax,0xa61babde
  413abc:	scas   eax,DWORD PTR es:[edi]
  413abd:	push   ecx
  413abe:	mov    al,0xbf
  413ac0:	retf   
  413ac1:	arpl   ax,sp
  413ac3:	(bad)  
  413ac4:	jge    0x413a70
  413ac6:	je     0x413b34
  413ac8:	xchg   edi,edi
  413aca:	push   edx
  413acb:	cli    
  413acc:	popf   
  413acd:	inc    esi
  413ace:	outs   dx,BYTE PTR ds:[esi]
  413acf:	mov    WORD PTR [edi*1-0x1ce11be5],cs
  413ad6:	nop
  413ad7:	add    BYTE PTR [edx+0x6e0673eb],al
  413add:	dec    edi
  413ade:	xor    BYTE PTR [ecx+0x5feafcbd],bh
  413ae4:	lea    eax,[ecx+0x1340037b]
  413aea:	popa   
  413aeb:	pop    edx
  413aec:	cmc    
  413aed:	xor    edx,ecx
  413aef:	mov    eax,ds:0x8d2a3bb4
  413af4:	xchg   ecx,eax
  413af5:	sub    bh,BYTE PTR [ebp-0x16c1f3f2]
  413afb:	jns    0x413ac2
  413afd:	add    DWORD PTR [edi+0x3f],esi
  413b00:	sub    al,0x7a
  413b02:	idiv   DWORD PTR [edx+0x4b]
  413b05:	out    dx,eax
  413b06:	out    0xc2,eax
  413b08:	jo     0x413aa3
  413b0a:	popf   
  413b0b:	fistp  WORD PTR [ecx]
  413b0d:	loope  0x413ab5
  413b0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b10:	xor    bh,bl
  413b12:	pop    eax
  413b13:	cld    
  413b14:	mov    ebx,0x55108bd3
  413b19:	test   BYTE PTR [edx],ch
  413b1b:	les    edx,FWORD PTR [ebp+eax*8-0xf24d6b1]
  413b22:	retf   0xd88d
  413b25:	dec    edx
  413b26:	sbb    ebx,DWORD PTR [ecx-0x4b]
  413b29:	nop
  413b2a:	xor    ah,BYTE PTR [edi+0x35]
  413b2d:	sbb    BYTE PTR [ebx+0x3229c6c2],ah
  413b33:	sub    eax,0x6fa1dc1e
  413b38:	call   0x2398:0xfab9280
  413b3f:	retf   
  413b40:	out    0x47,eax
  413b42:	xchg   ebp,eax
  413b43:	ja     0x413b13
  413b45:	stos   BYTE PTR es:[edi],al
  413b46:	arpl   dx,ax
  413b48:	ds cdq 
  413b4a:	int    0x5d
  413b4c:	mov    edx,0x2749f920
  413b51:	das    
  413b52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b53:	call   0xcbf6:0x5a4c27c7
  413b5a:	add    edx,DWORD PTR [ebx-0x1d]
  413b5d:	pop    ss
  413b5e:	xchg   ah,dh
  413b60:	outs   dx,DWORD PTR ds:[esi]
  413b61:	pop    es
  413b62:	push   edx
  413b63:	stc    
  413b64:	xchg   esp,eax
  413b65:	pusha  
  413b66:	out    0x9a,al
  413b68:	xchg   ebx,eax
  413b69:	test   DWORD PTR [esp+eax*4],0x2ae42dcc
  413b70:	push   ds
  413b71:	xor    DWORD PTR [ecx+0x2],edx
  413b74:	mov    esi,0x37c9596a
  413b79:	pop    ebx
  413b7a:	fidiv  DWORD PTR [ecx+edx*4-0x2b]
  413b7e:	xchg   edi,eax
  413b7f:	out    0x6a,al
  413b81:	cmp    BYTE PTR [esi+0x28fb6993],al
  413b87:	push   edx
  413b88:	pushf  
  413b89:	inc    edi
  413b8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b8b:	cmp    BYTE PTR [edx+0x24],al
  413b8e:	ror    BYTE PTR ds:0x41727cd3,1
  413b94:	jmp    0xa78bfc02
  413b99:	sahf   
  413b9a:	stos   DWORD PTR es:[edi],eax
  413b9b:	sti    
  413b9c:	lds    ebx,FWORD PTR [edi]
  413b9e:	xchg   edi,eax
  413b9f:	outs   dx,BYTE PTR ds:[esi]
  413ba0:	daa    
  413ba1:	mov    ah,al
  413ba3:	popa   
  413ba4:	cli    
  413ba5:	and    al,0xa5
  413ba7:	out    dx,eax
  413ba8:	jnp    0x413b2b
  413baa:	(bad)  
  413bab:	xor    edx,eax
  413bad:	xor    al,0xd8
  413baf:	dec    edx
  413bb0:	pop    es
  413bb1:	std    
  413bb2:	adc    BYTE PTR [ebx+esi*4],bh
  413bb5:	repnz fadd DWORD PTR [edx+edx*8-0x2ac78bc9]
  413bbd:	inc    esp
  413bbe:	sti    
  413bbf:	(bad)  
  413bc0:	shr    BYTE PTR ds:0x60ba4d9d,cl
  413bc6:	push   ds
  413bc7:	sbb    dh,bh
  413bc9:	in     al,0xfa
  413bcb:	cmp    BYTE PTR [eax-0x2c9052a9],cl
  413bd1:	lock jecxz 0x413c4c
  413bd4:	adc    esp,DWORD PTR [ebp-0x4c]
  413bd7:	das    
  413bd8:	pop    eax
  413bd9:	cdq    
  413bda:	ins    BYTE PTR es:[edi],dx
  413bdb:	daa    
  413bdc:	jmp    0x1a95:0x91ede626
  413be3:	xlat   BYTE PTR ds:[ebx]
  413be4:	push   ebx
  413be5:	push   0x83938d2
  413bea:	(bad)  
  413beb:	sti    
  413bec:	pop    edi
  413bed:	push   es
  413bee:	add    ch,ah
  413bf0:	addr16 hlt 
  413bf2:	mov    DWORD PTR [ebp+0x38],edi
  413bf5:	push   ebp
  413bf6:	les    esp,FWORD PTR [edx+0x40baabb4]
  413bfc:	clc    
  413bfd:	cmp    eax,DWORD PTR [eax]
  413bff:	mov    ds:0xc2593acb,eax
  413c04:	push   0x2b0a62b3
  413c09:	cmp    edx,DWORD PTR [ebx]
  413c0b:	mov    ch,0x64
  413c0d:	mov    ebp,0xad4bce4a
  413c12:	mov    ds:0x7271d641,al
  413c17:	or     DWORD PTR [ecx],edx
  413c19:	ror    DWORD PTR ds:0xd201d450,1
  413c1f:	jp     0x413c5d
  413c21:	mov    bl,BYTE PTR [edx]
  413c23:	mul    DWORD PTR [eax]
  413c25:	xchg   DWORD PTR [eax],ecx
  413c27:	popa   
  413c28:	xor    BYTE PTR [ebp+0x26],0xc7
  413c2c:	pusha  
  413c2d:	sbb    BYTE PTR [ebx],dl
  413c2f:	sbb    al,ah
  413c31:	add    ebp,DWORD PTR [edx+0x176752f6]
  413c37:	xchg   edi,eax
  413c38:	pop    esp
  413c39:	xor    ebp,ebp
  413c3b:	dec    ebx
  413c3c:	push   0x9c1c87a0
  413c41:	fst    DWORD PTR [edi+0xa]
  413c44:	retf   
  413c45:	imul   edx,DWORD PTR [ecx+0x6adb9086],0x376fda2a
  413c4f:	daa    
  413c50:	stos   BYTE PTR es:[edi],al
  413c51:	in     al,dx
  413c52:	jecxz  0x413c1f
  413c54:	ret    
  413c55:	push   esp
  413c56:	mov    edi,edi
  413c58:	addr16 aaa 
  413c5a:	dec    esi
  413c5b:	outs   dx,DWORD PTR ds:[esi]
  413c5c:	imul   ebx,esp,0x8e11f93a
  413c62:	in     eax,0xaf
  413c64:	sar    edi,1
  413c66:	stos   DWORD PTR es:[edi],eax
  413c67:	in     al,0xe1
  413c69:	mov    ?,ecx
  413c6b:	push   ds
  413c6c:	repnz and al,0x23
  413c6f:	int    0x5b
  413c71:	inc    edi
  413c72:	jle    0x413c51
  413c74:	test   al,0x16
  413c76:	push   edi
  413c77:	pop    ebp
  413c78:	cld    
  413c79:	mov    al,ds:0x7b3c245c
  413c7e:	test   eax,0xff5e9e11
  413c83:	sbb    eax,0x8c7f7d2a
  413c88:	iret   
  413c89:	jmp    0x413d05
  413c8b:	mov    esi,0xf0390e64
  413c90:	pop    ebp
  413c91:	pop    edx
  413c92:	clc    
  413c93:	push   eax
  413c94:	push   esi
  413c95:	mov    es,WORD PTR [eax]
  413c97:	pop    esi
  413c98:	leave  
  413c99:	in     al,dx
  413c9a:	push   ebp
  413c9b:	sub    esi,DWORD PTR [edi]
  413c9d:	shl    DWORD PTR [edi-0x5acfc8fd],cl
  413ca3:	outs   dx,BYTE PTR ds:[esi]
  413ca4:	pop    edi
  413ca5:	mov    bl,dh
  413ca7:	mov    esi,0xec53e48a
  413cac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cad:	and    BYTE PTR [ebp+0x0],cl
  413cb0:	xchg   DWORD PTR [esi],ecx
  413cb2:	push   ebp
  413cb3:	jns    0x413c42
  413cb5:	dec    ebx
  413cb6:	inc    esi
  413cb7:	stos   BYTE PTR es:[edi],al
  413cb8:	dec    DWORD PTR [esi-0x12]
  413cbb:	mov    ch,0xbf
  413cbd:	dec    ebp
  413cbe:	repnz bound esp,QWORD PTR [eax+eiz*4]
  413cc2:	adc    DWORD PTR [ebx-0xe75615b],edx
  413cc8:	mov    ds:0xa3aba8b7,al
  413ccd:	mov    dh,BYTE PTR [esi-0x35]
  413cd0:	aaa    
  413cd1:	clc    
  413cd2:	lock fstp TBYTE PTR [edi+0x3d94fa5e]
  413cd9:	cli    
  413cda:	(bad)  
  413cdb:	call   0xf3f2:0x69700bc1
  413ce2:	push   eax
  413ce3:	inc    esp
  413ce4:	cmc    
  413ce5:	mov    eax,0xde68764
  413cea:	loopne 0x413d20
  413cec:	and    DWORD PTR [eax],ebp
  413cee:	and    al,0x5d
  413cf0:	sbb    DWORD PTR [edi-0x5f],esp
  413cf3:	cmc    
  413cf4:	pusha  
  413cf5:	cmp    DWORD PTR [ebx+0x3b9dc9b9],0x1a
  413cfc:	dec    edi
  413cfd:	fsubr  DWORD PTR [ebx+esi*2-0x4f7ee0a6]
  413d04:	xor    ebx,esi
  413d06:	mov    dl,0xa4
  413d08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d09:	aas    
  413d0a:	pop    es
  413d0b:	push   0x79
  413d0d:	mov    ebp,0x689c98c7
  413d12:	std    
  413d13:	sbb    al,0x73
  413d15:	inc    ebx
  413d16:	dec    ecx
  413d17:	cmc    
  413d18:	mov    edi,0x92865a46
  413d1d:	xchg   edi,eax
  413d1e:	lock pop edx
  413d20:	mov    al,ds:0x4d46114a
  413d25:	adc    eax,DWORD PTR [ecx+ebp*1-0x31]
  413d29:	jmp    DWORD PTR [esi+0x4f]
  413d2c:	addr16 mov ebx,0x8d0f23d7
  413d32:	pop    DWORD PTR [esi]
  413d34:	jb     0x413d03
  413d36:	lahf   
  413d37:	pop    ss
  413d38:	and    al,0xab
  413d3a:	sub    ah,BYTE PTR [ebx]
  413d3c:	inc    bp
  413d3e:	dec    edi
  413d3f:	sub    eax,0x1a330b2d
  413d44:	pusha  
  413d45:	dec    eax
  413d46:	jb     0x413d7d
  413d48:	not    ebx
  413d4a:	and    DWORD PTR [edx-0x17],ecx
  413d4d:	jae    0x413cd1
  413d4f:	ins    BYTE PTR es:[edi],dx
  413d50:	or     al,BYTE PTR [ecx-0x7fa1f535]
  413d56:	push   cs
  413d57:	leave  
  413d58:	mov    ds,WORD PTR [eax]
  413d5a:	mov    ecx,ebx
  413d5c:	popf   
  413d5d:	jmp    0x7916:0xa899f368
  413d64:	scas   eax,DWORD PTR es:[edi]
  413d65:	imul   edi,DWORD PTR [eax+0x35],0x7b46c60a
  413d6c:	sub    BYTE PTR [eax],dl
  413d6e:	shl    DWORD PTR [eax],1
  413d70:	add    eax,0x5a21eb9b
  413d76:	cmp    BYTE PTR [edi+edi*2],ch
  413d79:	int    0x13
  413d7b:	enter  0xf6d1,0xa0
  413d7f:	dec    ecx
  413d80:	in     eax,dx
  413d81:	or     eax,esi
  413d83:	adc    al,0xda
  413d85:	dec    ecx
  413d86:	sti    
  413d87:	mov    al,ds:0x863e3a99
  413d8c:	out    dx,eax
  413d8d:	dec    esi
  413d8e:	lock jp 0x413d19
  413d91:	mov    dh,BYTE PTR [eax+0xf]
  413d94:	xor    ch,BYTE PTR [bx-0x597e]
  413d99:	adc    DWORD PTR [ebp+0xb],ebx
  413d9c:	lahf   
  413d9d:	mov    eax,ds:0x2ef9ab08
  413da2:	jo     0x413dee
  413da4:	in     eax,dx
  413da5:	lods   al,BYTE PTR ds:[esi]
  413da6:	lahf   
  413da7:	lods   eax,DWORD PTR ds:[esi]
  413da8:	out    dx,al
  413da9:	mov    ah,0x5b
  413dab:	jb     0x413d83
  413dad:	arpl   di,ax
  413daf:	out    dx,al
  413db0:	add    al,0x49
  413db2:	push   es
  413db3:	add    al,BYTE PTR [edi]
  413db5:	mov    ds:0x14b391f9,al
  413dba:	mov    BYTE PTR [eax+edi*4+0x19f3f8f4],bl
  413dc1:	pop    ebp
  413dc2:	or     BYTE PTR [edi],ah
  413dc4:	jmp    DWORD PTR [ecx]
  413dc6:	lods   eax,DWORD PTR ds:[esi]
  413dc7:	mov    dl,0x58
  413dc9:	lock idiv cl
  413dcc:	retf   
  413dcd:	jmp    0x3eb22413
  413dd2:	int    0xdf
  413dd4:	aaa    
  413dd5:	rol    DWORD PTR [esi+0x38],0x65
  413dd9:	ret    
  413dda:	push   ebx
  413ddb:	jne    0x413e31
  413ddd:	xchg   ecx,eax
  413dde:	sbb    eax,0xa606f08
  413de3:	repz pop ss
  413de5:	fidivr DWORD PTR [eax+0x230924bf]
  413deb:	out    dx,al
  413dec:	lock mov ecx,0x548eab9d
  413df2:	xchg   ebx,eax
  413df3:	push   eax
  413df4:	adc    BYTE PTR [esi+0x70],bh
  413df7:	sbb    DWORD PTR [esi],ebp
  413df9:	inc    esi
  413dfa:	or     eax,0xb32e114f
  413dff:	sar    BYTE PTR [ecx+eax*2+0x69],0x4a
  413e04:	js     0x413db0
  413e06:	cmp    cl,BYTE PTR [edx+0x217b57b3]
  413e0c:	js     0x413e5d
  413e0e:	ror    ebp,1
  413e10:	jge    0x413de5
  413e12:	mov    esi,0xa99d1698
  413e17:	or     eax,0x58ebb187
  413e1c:	mov    BYTE PTR [eax+0x5b98ade1],cl
  413e22:	push   ebx
  413e23:	cwde   
  413e24:	push   ss
  413e25:	mov    BYTE PTR [ecx],al
  413e27:	das    
  413e28:	ds pop edi
  413e2a:	xchg   esp,eax
  413e2b:	pop    ds
  413e2c:	lds    eax,FWORD PTR [esi+ebp*4-0xf]
  413e30:	inc    edx
  413e31:	xchg   edi,eax
  413e32:	aam    0xd1
  413e34:	and    BYTE PTR [eax],ch
  413e36:	mov    ds:0x54fd707f,al
  413e3b:	pop    ebx
  413e3c:	dec    ecx
  413e3d:	adc    DWORD PTR [esi+0x7d],esp
  413e40:	sar    ecx,0x4b
  413e43:	jmp    0x413e84
  413e45:	dec    ebx
  413e46:	push   ss
  413e47:	dec    edi
  413e48:	or     DWORD PTR [ebx],0x68d296d7
  413e4e:	xchg   edx,eax
  413e4f:	pop    ebx
  413e50:	xchg   ebp,eax
  413e51:	ins    DWORD PTR es:[edi],dx
  413e52:	or     DWORD PTR [ebx+0x45],edi
  413e55:	(bad)  
  413e56:	hlt    
  413e57:	mov    ecx,0xbc5b6844
  413e5c:	push   0xffffffab
  413e5e:	pop    ecx
  413e5f:	xchg   DWORD PTR [ebp+0x38],ecx
  413e62:	idiv   BYTE PTR [esi+eiz*2]
  413e65:	fmulp  st(5),st
  413e67:	idiv   esi
  413e69:	inc    eax
  413e6a:	cld    
  413e6b:	mov    ebx,0x5cae224c
  413e70:	adc    eax,0x69519b45
  413e75:	push   ebp
  413e76:	test   edi,eax
  413e78:	clc    
  413e79:	inc    edi
  413e7a:	sbb    BYTE PTR [ebx+0x11f1643d],cl
  413e80:	pop    edx
  413e81:	fisubr DWORD PTR [ecx+0x5c]
  413e84:	cdq    
  413e85:	ins    DWORD PTR es:[edi],dx
  413e86:	(bad)  
  413e87:	lock sub DWORD PTR [esi-0x25a34300],eax
  413e8e:	push   esi
  413e8f:	into   
  413e90:	and    ah,dh
  413e92:	sub    eax,0x4ee46073
  413e97:	jae    0x413ee6
  413e99:	call   0x702f:0x567a16f8
  413ea0:	lds    edx,FWORD PTR [eax-0x2a2adaba]
  413ea6:	rol    BYTE PTR ds:0x778ba1a,1
  413eac:	pop    ds
  413ead:	or     DWORD PTR [ebx-0x3901a35c],0x73
  413eb4:	hlt    
  413eb5:	rol    BYTE PTR [edx],0x26
  413eb8:	jmp    0x3eada7d5
  413ebd:	aad    0xf7
  413ebf:	inc    eax
  413ec0:	loopne 0x413e69
  413ec2:	fsub   DWORD PTR [eax-0x509635ad]
  413ec8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ec9:	jo     0x413ef9
  413ecb:	fldenv [eax+edi*8-0x539eec8e]
  413ed2:	push   esp
  413ed3:	push   ds
  413ed4:	repz pushf 
  413ed6:	or     esp,DWORD PTR [ebp+0x27e99749]
  413edc:	mov    fs,WORD PTR [edx-0x1]
  413edf:	add    eax,0x525bfedb
  413ee4:	mov    ebp,0xb67be656
  413ee9:	retf   
  413eea:	fsubr  DWORD PTR [ecx-0x2c]
  413eed:	rol    DWORD PTR [ebx],cl
  413eef:	and    BYTE PTR [ebx+edi*2],ah
  413ef2:	dec    edi
  413ef3:	mov    al,0x7d
  413ef5:	cmp    eax,0x53b14e7d
  413efa:	loop   0x413f09
  413efc:	jae    0x413f20
  413efe:	js     0x413e96
  413f00:	ret    0x49a3
  413f03:	ins    DWORD PTR es:[edi],dx
  413f04:	sbb    DWORD PTR [ebx-0x5],esi
  413f07:	retf   0x9d09
  413f0a:	sub    eax,0x806df2ac
  413f0f:	hlt    
  413f10:	call   0xbb69c939
  413f15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f16:	inc    ebx
  413f17:	mov    ah,0x35
  413f19:	js     0x413e9f
  413f1b:	jmp    0x33222df5
  413f20:	mov    ah,0xb8
  413f22:	mov    ah,0x9c
  413f24:	jae    0x413f7b
  413f26:	mov    ch,0xe2
  413f28:	cmc    
  413f29:	adc    eax,0xc7465c24
  413f2e:	cmp    BYTE PTR [ecx],ch
  413f30:	stos   DWORD PTR es:[edi],eax
  413f31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f32:	jo     0x413f69
  413f34:	cwde   
  413f35:	cmp    DWORD PTR [ebx+0x26],ecx
  413f38:	inc    edi
  413f39:	in     al,dx
  413f3a:	mov    ds:0xfdc2728b,eax
  413f3f:	pop    esp
  413f40:	and    al,0x6b
  413f42:	xor    BYTE PTR [esi+0x62],ch
  413f45:	fld    TBYTE PTR [eax]
  413f47:	or     esi,DWORD PTR [ebp+0x6d402b42]
  413f4d:	jmp    0x413f21
  413f4f:	(bad)  
  413f50:	in     eax,0xa5
  413f52:	lods   al,BYTE PTR ds:[esi]
  413f53:	ret    0xccbf
  413f56:	(bad)  [eax]
  413f58:	jb     0x413f46
  413f5a:	pop    eax
  413f5b:	rcr    DWORD PTR [edi-0x488cddab],0xff
  413f62:	or     DWORD PTR [ebx*1-0x5f4242ca],edx
  413f69:	stos   BYTE PTR es:[edi],al
  413f6a:	fmul   st,st(4)
  413f6c:	icebp  
  413f6d:	bound  eax,QWORD PTR [ecx]
  413f6f:	cmp    DWORD PTR [ecx],esp
  413f71:	dec    ebp
  413f72:	cdq    
  413f73:	shr    DWORD PTR [eax+0x55298f34],1
  413f79:	add    eax,DWORD PTR [edx+0x256bb842]
  413f7f:	(bad)  
  413f80:	aam    0x9a
  413f82:	aas    
  413f83:	mov    DWORD PTR [eax],edx
  413f85:	ret    
  413f86:	rcl    DWORD PTR [eax+0x36],0x3f
  413f8a:	ja     0x413f40
  413f8c:	shr    DWORD PTR [eax+eiz*1],1
  413f8f:	sbb    ecx,ebx
  413f91:	sub    ah,0x97
  413f94:	dec    ebp
  413f95:	lds    eax,FWORD PTR [ecx-0x64]
  413f98:	leave  
  413f99:	aas    
  413f9a:	fdivr  DWORD PTR ds:0xeee6d6bc
  413fa0:	stc    
  413fa1:	mov    edi,0x97c7b0c5
  413fa6:	popa   
  413fa7:	cmc    
  413fa8:	lods   eax,DWORD PTR ds:[esi]
  413fa9:	mov    ebx,0x4a042d67
  413fae:	outs   dx,DWORD PTR ds:[esi]
  413faf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fb0:	div    BYTE PTR [edx]
  413fb2:	stc    
  413fb3:	push   esi
  413fb4:	jmp    0x41402c
  413fb6:	repnz inc esp
  413fb8:	adc    ah,BYTE PTR [esi]
  413fba:	adc    DWORD PTR [ecx+0x4aa858a5],ebp
  413fc0:	mov    ah,0x61
  413fc2:	js     0x413fb3
  413fc4:	jge    0x413f60
  413fc6:	pop    edx
  413fc7:	dec    eax
  413fc8:	mov    ebp,0xfaee97ab
  413fcd:	into   
  413fce:	clc    
  413fcf:	loop   0x413fce
  413fd1:	mov    ebp,0x1685dc32
  413fd6:	cmp    eax,0x3642dec8
  413fdb:	xor    BYTE PTR [eax+esi*1],al
  413fde:	hlt    
  413fdf:	aad    0x2b
  413fe1:	mov    bh,0x70
  413fe3:	jmp    0x414033
  413fe5:	lods   al,BYTE PTR ds:[esi]
  413fe6:	or     eax,0xe946e222
  413feb:	out    dx,eax
  413fec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fed:	pop    ecx
  413fee:	int    0x29
  413ff0:	hlt    
  413ff1:	jl     0x41405c
  413ff3:	cmp    edx,ebx
  413ff5:	aaa    
  413ff6:	(bad)  
  413ff7:	not    DWORD PTR [edx]
  413ff9:	mov    ch,0x18
  413ffb:	push   0xf57e08b7
  414000:	add    edi,DWORD PTR [edx-0x35]
  414003:	outs   dx,BYTE PTR ds:[esi]
  414004:	loope  0x41405a
  414006:	fldenv [ebp-0x316b0619]
  41400c:	cmp    eax,0xcddc33dd
  414011:	jg     0x41406c
  414013:	rcl    DWORD PTR [ebp-0x4e],cl
  414016:	iret   
  414017:	or     eax,0x936535e7
  41401c:	xor    bl,BYTE PTR [edx+esi*2-0x5b]
  414020:	or     DWORD PTR [ebp-0x2d],esi
  414023:	adc    ebx,DWORD PTR cs:[ebp+0x2b05dc9a]
  41402a:	aad    0xe3
  41402c:	cmp    eax,DWORD PTR [esi-0xd]
  41402f:	xchg   edx,eax
  414030:	and    eax,DWORD PTR [eax+eax*4+0x71fdb852]
  414037:	pop    edi
  414038:	inc    eax
  414039:	aam    0xd2
  41403b:	cmp    DWORD PTR [ecx],edx
  41403d:	and    al,0x61
  41403f:	fs leave 
  414041:	jmp    0x5a2c02aa
  414046:	pushf  
  414047:	loopne 0x413fd4
  414049:	xor    ebx,ecx
  41404b:	cmp    DWORD PTR [edi+0x729c84c8],edi
  414051:	inc    edi
  414052:	loop   0x41408b
  414054:	mov    bl,0x62
  414056:	in     al,dx
  414057:	adc    edx,DWORD PTR [ebp+edx*2-0xe]
  41405b:	xor    esi,ebx
  41405d:	push   es
  41405e:	mov    eax,ds:0xa6bd05c7
  414063:	scas   al,BYTE PTR es:[edi]
  414064:	std    
  414065:	icebp  
  414066:	pop    esi
  414067:	add    esi,esi
  414069:	(bad)  
  41406a:	pop    ebp
  41406b:	xor    eax,0x6e98f512
  414070:	je     0x41407b
  414072:	sub    DWORD PTR [edi+0x3d],esp
  414075:	and    DWORD PTR [esp+eiz*2],ecx
  414078:	hlt    
  414079:	xchg   ebx,eax
  41407a:	imul   DWORD PTR [edi-0x63]
  41407d:	mov    ?,WORD PTR [edi]
  41407f:	pusha  
  414080:	xlat   BYTE PTR ds:[ebx]
  414081:	mov    ecx,0x368dcc25
  414086:	mov    cl,bl
  414088:	or     al,0x4d
  41408a:	mov    ch,0xad
  41408c:	add    cl,BYTE PTR [edx]
  41408e:	mov    ds,WORD PTR [eax+0x320c865b]
  414094:	in     eax,0xaf
  414096:	add    DWORD PTR [edi-0x71],ecx
  414099:	xchg   ecx,eax
  41409a:	sbb    esp,DWORD PTR [eax+0x43]
  41409d:	add    ch,BYTE PTR [ecx]
  41409f:	pop    ebx
  4140a0:	adc    BYTE PTR [ebx-0x31e8d5c7],ch
  4140a6:	pop    ecx
  4140a7:	mov    esi,0x375ef981
  4140ac:	cmp    al,0x56
  4140ae:	pop    ds
  4140af:	fdivr  st(6),st
  4140b1:	es fwait
  4140b3:	ss loopne 0x4140b7
  4140b6:	pop    esp
  4140b7:	mov    ?,eax
  4140b9:	dec    esi
  4140ba:	adc    DWORD PTR [ebp-0x7e],ecx
  4140bd:	(bad)  
  4140be:	sbb    esp,DWORD PTR [edx-0x6f]
  4140c1:	out    dx,eax
  4140c2:	(bad)  
  4140c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140c4:	out    0x7a,eax
  4140c6:	dec    edi
  4140c7:	add    dh,BYTE PTR [ebp+esi*2-0x66]
  4140cb:	aad    0x87
  4140cd:	dec    ebx
  4140ce:	pop    esi
  4140cf:	jle    0x4140ce
  4140d1:	scas   eax,DWORD PTR es:[edi]
  4140d2:	sti    
  4140d3:	scas   eax,DWORD PTR es:[edi]
  4140d4:	es pushf 
  4140d6:	push   es
  4140d7:	push   0x4e6c5d30
  4140dc:	out    dx,eax
  4140dd:	xchg   ebx,eax
  4140de:	and    al,al
  4140e0:	adc    al,0x19
  4140e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140e3:	outs   dx,DWORD PTR ds:[esi]
  4140e4:	je     0x41415f
  4140e6:	out    0xf4,al
  4140e8:	in     eax,dx
  4140e9:	rcr    DWORD PTR [ecx-0x7c],1
  4140ec:	ror    dl,1
  4140ee:	add    eax,0x6bd514f7
  4140f3:	jecxz  0x41414e
  4140f5:	mov    DWORD PTR [edx-0x45ced030],edi
  4140fb:	xlat   BYTE PTR ds:[ebx]
  4140fc:	mov    ch,0x25
  4140fe:	std    
  4140ff:	adc    eax,0x446afe78
  414104:	mov    ch,bh
  414106:	sub    ecx,DWORD PTR [eax+0x76]
  414109:	lock cmp BYTE PTR fs:[ecx],bh
  41410d:	jecxz  0x414167
  41410f:	pusha  
  414110:	and    bl,bl
  414112:	retf   
  414113:	mov    bh,dl
  414115:	jns    0x4140f0
  414117:	xchg   esi,eax
  414118:	mov    bl,0xa4
  41411a:	mov    edi,ecx
  41411c:	cmp    DWORD PTR [edx],0x452b23d5
  414122:	mov    ebp,0x1d517daa
  414127:	mov    al,0xf4
  414129:	push   ecx
  41412a:	fcom   st(7)
  41412c:	out    dx,al
  41412d:	sbb    eax,0x46fd7204
  414132:	dec    eax
  414133:	test   DWORD PTR [ebx],esp
  414135:	je     0x41413c
  414137:	adc    bl,0x88
  41413a:	add    ch,bl
  41413c:	sbb    ebx,DWORD PTR [ebp+0x4a]
  41413f:	push   ebp
  414140:	cdq    
  414141:	ficomp WORD PTR [edi-0x33]
  414144:	dec    ebp
  414145:	fild   QWORD PTR [esi-0x78]
  414148:	mov    ecx,0x5b7eb919
  41414d:	and    eax,0x6afbe624
  414152:	dec    ecx
  414153:	test   al,0x70
  414155:	inc    edx
  414156:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414157:	and    al,0x5e
  414159:	imul   esi,DWORD PTR [edi-0x2da254d5],0x6e
  414160:	add    DWORD PTR [ebp-0x39],edi
  414163:	imul   ebp,DWORD PTR ds:0x663e80d9,0xf49b7568
  41416d:	call   0xe11160c4
  414172:	jo     0x4141c5
  414174:	cmp    ecx,DWORD PTR [ecx-0x57]
  414177:	scas   eax,DWORD PTR es:[edi]
  414178:	int3   
  414179:	jl     0x414103
  41417b:	xor    bl,BYTE PTR [ebp+0x1974076b]
  414181:	(bad)  
  414182:	xor    dh,BYTE PTR [edi-0x4a]
  414185:	jge    0x41416c
  414187:	cld    
  414188:	mov    edi,0xfec9080
  41418d:	mov    esp,0x13547f01
  414192:	pusha  
  414193:	bound  eax,QWORD PTR [ebx+0x5a063adc]
  414199:	inc    eax
  41419a:	cli    
  41419b:	and    eax,0x14a90e89
  4141a0:	mov    al,ds:0x4246b2e4
  4141a5:	pop    ds
  4141a6:	repz adc eax,0x51a4e0f1
  4141ac:	repnz fild DWORD PTR [edx+0x2c]
  4141b0:	adc    bh,dh
  4141b2:	and    al,0xa3
  4141b4:	shl    BYTE PTR ds:[ecx+0x484aceeb],cl
  4141bb:	aaa    
  4141bc:	mov    al,0xf6
  4141be:	iret   
  4141bf:	int    0xb
  4141c1:	mov    BYTE PTR [edi],ah
  4141c3:	push   cs
  4141c4:	xchg   ebx,eax
  4141c5:	mov    esi,0xa9feb0b6
  4141ca:	int    0x14
  4141cc:	repz fdivp st(4),st
  4141cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141d0:	jae    0x4141e3
  4141d2:	inc    esp
  4141d3:	xchg   BYTE PTR [ebx+0x6e],cl
  4141d6:	call   0x9c3019fa
  4141db:	cmp    eax,0x69990b9d
  4141e0:	out    dx,al
  4141e1:	add    DWORD PTR [ecx],0x637b4caf
  4141e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141e8:	xor    al,0x6e
  4141ea:	loopne 0x414197
  4141ec:	and    dl,bl
  4141ee:	js     0x4141de
  4141f0:	mov    ecx,DWORD PTR [esi+0x3e]
  4141f3:	test   al,0xe2
  4141f5:	cmc    
  4141f6:	(bad)  
  4141f7:	mov    al,ds:0x4abf8dc1
  4141fc:	lds    eax,FWORD PTR [ecx+edx*1-0x79d22bcd]
  414203:	mov    esi,0x9f98c989
  414208:	and    al,0x41
  41420a:	sar    BYTE PTR [ecx+0x79],cl
  41420d:	mov    bl,BYTE PTR [ebp+0x784a816a]
  414213:	shr    BYTE PTR [edi],1
  414215:	into   
  414216:	mov    edi,0xc7431cdb
  41421b:	test   eax,0x8597c505
  414220:	cld    
  414221:	in     al,0x6b
  414223:	call   0x5090:0xcd3855af
  41422a:	and    DWORD PTR [eax+ebx*8+0x74],0x928ac625
  414232:	das    
  414233:	xchg   DWORD PTR [ecx+0x1],ecx
  414236:	and    al,0x41
  414238:	cld    
  414239:	test   DWORD PTR [ebp-0x6],ecx
  41423c:	lea    esp,[ebx+eax*8+0x76]
  414240:	mov    dh,0x2d
  414242:	out    dx,al
  414243:	sub    eax,0x17506a6b
  414248:	es and eax,0xe70f7d9b
  41424e:	pop    edx
  41424f:	push   esi
  414250:	xchg   ecx,ebx
  414252:	push   esi
  414253:	cs jns 0x4142d0
  414256:	mov    ecx,0x55ce5184
  41425b:	outs   dx,DWORD PTR ds:[esi]
  41425c:	test   eax,0xd3d5c37a
  414261:	imul   esp,DWORD PTR [ebx-0x26],0x68f0f988
  414268:	ds fwait
  41426a:	push   ebx
  41426b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41426c:	add    al,0x0
  41426e:	rcl    BYTE PTR [ecx-0x6f],cl
  414271:	push   0x66
  414273:	cmp    al,0x1a
  414275:	in     al,dx
  414276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414277:	xchg   esp,eax
  414278:	add    dh,BYTE PTR [esi]
  41427a:	(bad)  
  41427b:	in     al,0x41
  41427d:	and    DWORD PTR [edx-0x4ac40bcb],esi
  414283:	retf   
  414284:	xchg   BYTE PTR [ebx],dh
  414286:	dec    esi
  414287:	mov    cl,0xb8
  414289:	nop
  41428a:	sbb    ah,BYTE PTR [ebp+0x79cebd58]
  414290:	sub    cl,BYTE PTR [bp+0x64a3]
  414295:	dec    edi
  414296:	scas   al,BYTE PTR es:[edi]
  414297:	or     ebp,ecx
  414299:	stos   DWORD PTR es:[edi],eax
  41429a:	hlt    
  41429b:	cmp    bl,bh
  41429d:	aaa    
  41429e:	sub    cl,BYTE PTR [edx-0x36]
  4142a1:	xchg   ebp,eax
  4142a2:	out    0x11,al
  4142a4:	aam    0xda
  4142a6:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4142a8:	aaa    
  4142a9:	aaa    
  4142aa:	fs (bad) 
  4142ac:	in     eax,dx
  4142ad:	fist   WORD PTR [edx]
  4142af:	push   ebp
  4142b0:	add    dh,BYTE PTR [esi+0x3074aa45]
  4142b6:	adc    al,0x27
  4142b8:	cmp    bl,al
  4142ba:	mov    esp,0x62ae7b4d
  4142bf:	fldcw  WORD PTR [ebx-0x34aaac1e]
  4142c5:	ss hlt 
  4142c7:	xchg   edx,eax
  4142c8:	mov    ss,WORD PTR [edx-0x69]
  4142cb:	cmp    BYTE PTR [ebx],0xcc
  4142ce:	jge    0x4142bc
  4142d0:	mov    esp,0xcd6c280
  4142d5:	(bad)  
  4142d6:	mov    esi,ds
  4142d8:	lsl    esi,WORD PTR [esi+0x40b107c6]
  4142df:	scas   eax,DWORD PTR es:[edi]
  4142e0:	setns  BYTE PTR [ebp-0x64]
  4142e4:	inc    edi
  4142e5:	jne    0x414302
  4142e7:	outs   dx,DWORD PTR ds:[esi]
  4142e8:	hlt    
  4142e9:	dec    edi
  4142ea:	push   esp
  4142eb:	xor    DWORD PTR [edx-0x1726cf4d],0x78b101c
  4142f5:	push   ebp
  4142f6:	jle    0x4142e7
  4142f8:	adc    ebx,edx
  4142fa:	and    eax,0x19c498c7
  4142ff:	xor    DWORD PTR [eax-0x56000fbb],0x38
  414306:	mov    ebx,0xdee164ab
  41430c:	xchg   ebp,eax
  41430d:	loop   0x414355
  41430f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414310:	jae    0x41433a
  414312:	jge    0x41434d
  414314:	xor    al,0x32
  414316:	adc    eax,0xfe5270d5
  41431b:	inc    edi
  41431c:	sbb    DWORD PTR [eax],edi
  41431e:	pop    ebp
  41431f:	repz in al,dx
  414321:	nop
  414322:	aas    
  414323:	mov    edx,0x8e64b90f
  414328:	je     0x414360
  41432a:	inc    ecx
  41432b:	(bad)  
  41432c:	fsubp  st(3),st
  41432e:	aas    
  41432f:	outs   dx,DWORD PTR ds:[esi]
  414330:	call   0xd719e1d8
  414335:	retf   
  414336:	enter  0x5171,0x46
  41433a:	nop
  41433b:	pop    edx
  41433c:	dec    edi
  41433d:	push   edi
  41433e:	sub    al,0x3d
  414340:	enter  0x50ac,0xc2
  414344:	inc    eax
  414345:	cmp    BYTE PTR [eax],al
  414347:	call   0xe1609689
  41434c:	jns    0x4142d3
  41434e:	inc    ebp
  41434f:	adc    ebx,ebp
  414351:	mov    al,0x7a
  414353:	stos   BYTE PTR es:[edi],al
  414354:	or     bh,BYTE PTR [edx]
  414356:	add    eax,DWORD PTR [ebx+0xd7a0208]
  41435c:	mov    al,ds:0x2e10f395
  414361:	inc    esp
  414362:	pop    esi
  414363:	fmul   QWORD PTR [edx+0x5f]
  414366:	dec    esp
  414367:	cmp    DWORD PTR [ecx-0x1],eax
  41436a:	push   ecx
  41436b:	add    al,BYTE PTR [ecx+esi*4]
  41436e:	or     ch,BYTE PTR ds:0x8b519552
  414374:	scas   eax,DWORD PTR es:[edi]
  414375:	add    BYTE PTR [ebp-0x2e],ah
  414378:	aad    0xac
  41437a:	jp     0x414303
  41437c:	lock jno 0x41431c
  41437f:	aaa    
  414380:	(bad)  
  414382:	cld    
  414383:	lea    ebx,[ebx-0x1c]
  414386:	hlt    
  414387:	cmp    DWORD PTR [ebp-0x14c86a71],ecx
  41438d:	jbe    0x41437e
  41438f:	cmp    cl,BYTE PTR [eax]
  414391:	jg     0x41437d
  414393:	sub    BYTE PTR ds:0x1dfe1f82,cl
  414399:	inc    ebp
  41439a:	js     0x41435d
  41439c:	adc    BYTE PTR [edx+0x11],0x93
  4143a0:	dec    ecx
  4143a1:	pop    es
  4143a2:	in     al,dx
  4143a3:	dec    ebp
  4143a4:	dec    edx
  4143a5:	je     0x4143c5
  4143a7:	mov    ah,0xd9
  4143a9:	(bad)  
  4143aa:	push   ecx
  4143ab:	mov    al,ds:0xe83c6dcb
  4143b0:	mov    ebp,0x729d5503
  4143b5:	jmp    0x41433c
  4143b7:	(bad)  
  4143b8:	stos   DWORD PTR es:[edi],eax
  4143b9:	xor    edx,DWORD PTR [edi-0x7f]
  4143bc:	mov    ebp,0xd330f8a2
  4143c1:	scas   eax,DWORD PTR es:[edi]
  4143c2:	les    eax,FWORD PTR [ebp+0x37]
  4143c5:	pop    es
  4143c6:	fs int3 
  4143c8:	xchg   DWORD PTR [ebx+0x3c47ffc3],eax
  4143ce:	xor    DWORD PTR [ebx-0x3b6ee7c],esi
  4143d4:	stos   DWORD PTR es:[edi],eax
  4143d5:	retf   
  4143d6:	mov    dh,0xb0
  4143d8:	xchg   ecx,eax
  4143d9:	mov    edi,0x3c5ab1d9
  4143de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143df:	out    dx,eax
  4143e0:	fs je  0x414457
  4143e3:	mov    es,WORD PTR [edi-0xf642708]
  4143e9:	push   es
  4143ea:	cmp    al,0xcf
  4143ec:	es xor ebx,ebx
  4143ef:	push   ebp
  4143f0:	sub    al,0xc3
  4143f2:	xor    ebx,edx
  4143f4:	xor    bh,BYTE PTR [esp+edx*8+0x477a069e]
  4143fb:	lock sti 
  4143fd:	mov    edi,0x5cbe8af8
  414402:	jge    0x414402
  414404:	inc    ebx
  414405:	ins    DWORD PTR es:[edi],dx
  414406:	dec    ebx
  414407:	jne    0x414439
  414409:	pop    ss
  41440a:	into   
  41440b:	jmp    0x414459
  41440d:	pop    edx
  41440e:	fs lahf 
  414410:	sbb    DWORD PTR gs:[ecx],esi
  414413:	inc    esi
  414414:	sbb    bh,BYTE PTR [edi+0x6b]
  414417:	jle    0x414407
  414419:	xor    esi,edi
  41441b:	mov    ah,0xbf
  41441d:	dec    edx
  41441e:	mov    eax,0x66d72171
  414423:	ja     0x41447f
  414425:	jle    0x414499
  414427:	sti    
  414428:	jmp    0xc73d:0xe126a194
  41442f:	xor    ebp,DWORD PTR [ecx+edx*4+0x4]
  414433:	dec    ebp
  414434:	and    DWORD PTR ds:0xbc614c30,esi
  41443a:	push   ebx
  41443b:	jne    0x41444b
  41443d:	push   esp
  41443e:	ret    0x9ab3
  414441:	ror    bl,0x2
  414444:	into   
  414445:	sub    al,0x52
  414447:	pop    es
  414448:	fadd   DWORD PTR ds:0xf31469bc
  41444e:	dec    esi
  41444f:	mov    ah,0xd4
  414451:	add    BYTE PTR [ecx+0x33],al
  414454:	xchg   esi,eax
  414455:	loopne 0x414454
  414457:	lods   al,BYTE PTR ds:[esi]
  414458:	popa   
  414459:	scas   eax,DWORD PTR es:[edi]
  41445a:	mov    ?,WORD PTR [esp+edx*8]
  41445d:	xchg   ecx,eax
  41445e:	inc    eax
  41445f:	mov    ebx,DWORD PTR [esp+ebp*1+0x58]
  414463:	xchg   ebp,eax
  414464:	xor    eax,0x97591f8c
  414469:	sub    BYTE PTR [ecx+0x6d],bl
  41446c:	push   edx
  41446d:	loope  0x41447e
  41446f:	pop    es
  414470:	fld    TBYTE PTR [ebx]
  414472:	test   al,0xf
  414474:	retf   
  414475:	cdq    
  414476:	add    dl,BYTE PTR [eax-0x6847f968]
  41447c:	dec    ebx
  41447d:	test   BYTE PTR [ebx+ecx*8+0x42443f4c],ch
  414484:	aas    
  414485:	bound  esi,QWORD PTR [eax+0x6]
  414488:	enter  0x964,0xc3
  41448c:	or     ecx,DWORD PTR [edi+0x7b]
  41448f:	int    0x7
  414491:	arpl   WORD PTR [eax],si
  414493:	lahf   
  414494:	cdq    
  414495:	(bad)  
  414496:	mov    al,0x9c
  414498:	in     al,dx
  414499:	and    al,0x80
  41449b:	pusha  
  41449c:	add    edx,edx
  41449e:	out    dx,eax
  41449f:	lock loop 0x4144f8
  4144a2:	stc    
  4144a3:	pop    ebx
  4144a4:	mov    eax,0x39e0ffe3
  4144a9:	bound  esi,QWORD PTR [ecx-0x28]
  4144ac:	(bad)  [edi+0x3630e560]
  4144b2:	iret   
  4144b3:	push   esi
  4144b4:	shl    edi,1
  4144b6:	jecxz  0x4144c9
  4144b8:	push   edi
  4144b9:	push   DWORD PTR [ecx]
  4144bb:	cmp    eax,0xcb48c6ac
  4144c0:	je     0x4144fc
  4144c2:	jmp    0x414522
  4144c4:	jmp    0x1a511814
  4144c9:	pop    es
  4144ca:	jle    0x4144bf
  4144cc:	sub    eax,0x64236573
  4144d1:	call   DWORD PTR [edi+edi*8+0x46]
  4144d5:	adc    DWORD PTR [ecx+0x70],ecx
  4144d8:	lock mov dh,0xc3
  4144db:	cmp    eax,0xd852e9fa
  4144e0:	ss pop ecx
  4144e2:	stos   BYTE PTR es:[edi],al
  4144e3:	jo     0x414490
  4144e5:	sub    edx,0x3941ea10
  4144eb:	xor    eax,0x11959fa1
  4144f0:	mov    edx,0x21a73610
  4144f5:	cli    
  4144f6:	mov    eax,0x739f1044
  4144fb:	stos   BYTE PTR es:[edi],al
  4144fc:	mov    eax,ds:0xe05505ee
  414501:	adc    ebp,DWORD PTR [eax]
  414503:	push   es
  414504:	add    al,0x49
  414506:	mov    eax,ds:0xaeebd19d
  41450b:	cmc    
  41450c:	in     eax,0x0
  41450e:	or     BYTE PTR [edi-0x66],bl
  414511:	or     ebx,DWORD PTR [ecx]
  414513:	cmp    dh,dh
  414515:	aam    0x22
  414517:	shr    DWORD PTR [ecx-0x35443021],cl
  41451d:	sbb    ebp,ebx
  41451f:	in     eax,dx
  414520:	mov    WORD PTR [edi],cs
  414522:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414523:	repz out 0xc5,eax
  414526:	inc    ecx
  414527:	sbb    DWORD PTR [esi+0x6b],esi
  41452a:	xchg   esp,eax
  41452b:	sub    BYTE PTR ds:0x94e0a33b,ch
  414531:	jmp    0x414533
  414533:	sub    ebp,ebx
  414535:	pop    esp
  414536:	ror    cl,cl
  414538:	dec    esi
  414539:	loopne 0x4145a5
  41453b:	ja     0x4145a9
  41453d:	aam    0x7f
  41453f:	repz mov ds:0x1f63596e,eax
  414545:	(bad)  
  414546:	push   esi
  414547:	mov    ebp,0x4f108231
  41454c:	sub    edx,DWORD PTR [ebp+0x5f]
  41454f:	jmp    0xba6a3fb5
  414554:	mov    dl,0xca
  414556:	dec    edx
  414557:	push   esi
  414558:	outs   dx,BYTE PTR ds:[esi]
  414559:	xchg   BYTE PTR [ecx+0x41],dh
  41455c:	sbb    bh,BYTE PTR [ecx-0x1b8b4ad7]
  414562:	push   edi
  414563:	retf   
  414564:	pushf  
  414565:	push   ebx
  414566:	mov    eax,0x644289c6
  41456b:	data16 arpl di,bp
  41456e:	clc    
  41456f:	xchg   esp,eax
  414570:	inc    ebx
  414571:	shl    DWORD PTR [ecx],0xf3
  414574:	jns    0x414579
  414576:	dec    eax
  414577:	pop    ecx
  414578:	mov    al,ds:0xd92dc367
  41457d:	mov    ch,0x9e
  41457f:	fidiv  WORD PTR [ecx-0x55]
  414582:	jbe    0x4145c9
  414584:	jmp    0x4145a6
  414586:	jl     0x414525
  414588:	ret    
  414589:	lods   eax,DWORD PTR ds:[esi]
  41458a:	dec    edx
  41458b:	mov    WORD PTR ds:0xc57c8f61,?
  414591:	or     BYTE PTR [ebx],0x79
  414594:	rol    DWORD PTR [eax],cl
  414596:	xor    DWORD PTR [edx-0x17],ebx
  414599:	sbb    dh,ch
  41459b:	jne    0x41452b
  41459d:	and    al,0xf4
  41459f:	fnstcw WORD PTR [edi+0x38]
  4145a2:	test   dh,cl
  4145a4:	mov    dl,0x7f
  4145a6:	(bad)
  4145a9:	and    cl,BYTE PTR [esp+esi*1+0x16]
  4145ad:	and    ecx,eax
  4145af:	and    cl,ch
  4145b1:	cmc    
  4145b2:	jnp    0x4145d3
  4145b4:	cdq    
  4145b5:	test   al,0xba
  4145b7:	adc    eax,0xcfde9ce6
  4145bc:	mov    edx,0x75641eeb
  4145c1:	sahf   
  4145c2:	lahf   
  4145c3:	cdq    
  4145c4:	push   edi
  4145c5:	les    ebp,FWORD PTR [eax]
  4145c7:	rcl    dh,cl
  4145c9:	outs   dx,DWORD PTR ds:[esi]
  4145ca:	add    ebp,DWORD PTR [edx-0x3e]
  4145cd:	cwde   
  4145ce:	sbb    eax,0x78c9c19a
  4145d3:	lea    ebp,[edi+0x72]
  4145d6:	out    dx,eax
  4145d7:	sbb    al,0xf
  4145d9:	ja     0x41456c
  4145db:	jne    0x414611
  4145dd:	mov    edx,0x2ca5c434
  4145e2:	leave  
  4145e3:	sbb    esp,edi
  4145e5:	rcr    BYTE PTR [edi-0x67],cl
  4145e8:	imul   edx,DWORD PTR [ebx+0x4b95973e],0xffffff9e
  4145ef:	sbb    al,0x97
  4145f1:	lahf   
  4145f2:	scas   eax,DWORD PTR es:[edi]
  4145f3:	cmc    
  4145f4:	adc    ebp,DWORD PTR [ecx]
  4145f6:	das    
  4145f7:	pop    esi
  4145f8:	mov    dl,0x81
  4145fa:	fcom   DWORD PTR [ecx-0x51cd49fa]
  414600:	xor    ah,BYTE PTR [edx+esi*1]
  414603:	fwait
  414604:	sbb    bh,BYTE PTR [edx]
  414606:	sub    DWORD PTR [ebp+0x2b09054f],edx
  41460c:	repnz sahf 
  41460e:	xor    ebx,edi
  414610:	cmp    ebp,DWORD PTR [eax]
  414612:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414613:	and    al,0x5b
  414615:	pop    edx
  414616:	lods   al,BYTE PTR ds:[esi]
  414617:	sbb    cl,BYTE PTR [edx]
  414619:	pop    eax
  41461a:	fisub  WORD PTR [edi-0x7c]
  41461d:	rol    DWORD PTR [eax+0x57d92ffa],cl
  414623:	jg     0x414629
  414625:	inc    eax
  414626:	test   eax,0xe5b3d81c
  41462b:	mov    ebp,0x131171f5
  414630:	mov    esp,0xc5d1f196
  414635:	jecxz  0x414653
  414637:	sub    esi,eax
  414639:	mov    dl,0xc0
  41463b:	push   edi
  41463c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41463d:	aad    0x73
  41463f:	aam    0x3a
  414641:	mov    edi,0x3e2350f4
  414646:	(bad)  
  414647:	fld    TBYTE PTR [eax]
  414649:	mov    ch,0x40
  41464b:	test   eax,0x187468ff
  414650:	out    0x6c,al
  414652:	jae    0x4146ba
  414654:	pop    esp
  414655:	xor    eax,0xe4678c6d
  41465a:	clc    
  41465b:	loopne 0x4145fb
  41465d:	enter  0x6e98,0xe2
  414661:	mov    bl,0x5f
  414663:	xchg   ecx,eax
  414664:	mov    ds:0xdec48f13,al
  414669:	imul   esi,DWORD PTR gs:[edi-0x1],0xd18eae6
  414671:	adc    ebx,DWORD PTR ds:0x8eb3e166
  414677:	jmp    FWORD PTR [eax+0x14c2bf6]
  41467d:	pop    ebp
  41467e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41467f:	or     DWORD PTR [edx-0x47],ebx
  414682:	sbb    al,0x85
  414684:	lea    edi,[ebx]
  414686:	sbb    ch,BYTE PTR [ebx-0x32926ece]
  41468c:	out    0x7c,al
  41468e:	bound  ebp,QWORD PTR [edx-0x3aa47f7a]
  414694:	lea    ebx,[edi]
  414696:	sbb    al,0xeb
  414698:	pop    ebp
  414699:	iret   
  41469a:	and    esp,esp
  41469c:	push   ds
  41469d:	jmp    0x4146b6
  41469f:	pop    es
  4146a0:	leave  
  4146a1:	out    dx,eax
  4146a2:	sbb    eax,0x70c6e612
  4146a7:	pushf  
  4146a8:	mov    bl,0xeb
  4146aa:	push   es
  4146ab:	ror    edi,1
  4146ad:	aaa    
  4146ae:	into   
  4146af:	fidiv  DWORD PTR [esi]
  4146b2:	lock mov eax,0x5fee4691
  4146b8:	test   DWORD PTR [ebx+0x62],edx
  4146bb:	int3   
  4146bc:	in     eax,0x44
  4146be:	mov    bl,0xef
  4146c0:	xchg   edx,eax
  4146c1:	xlat   BYTE PTR ds:[ebx]
  4146c2:	sbb    al,0xda
  4146c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146c5:	in     eax,dx
  4146c6:	mov    DWORD PTR ds:0xd7138027,esp
  4146cc:	in     al,0xab
  4146ce:	scas   al,BYTE PTR es:[edi]
  4146cf:	mov    ebx,0xf46760da
  4146d4:	cmp    dh,BYTE PTR [edi-0x3d]
  4146d7:	dec    ebp
  4146d8:	sar    BYTE PTR [ecx],cl
  4146da:	retf   0xacea
  4146dd:	call   0xce84:0xe508ea79
  4146e4:	xchg   edx,eax
  4146e5:	adc    eax,0x4f09d661
  4146ea:	js     0x41470a
  4146ec:	or     al,0x5b
  4146ee:	sbb    eax,0x7467121f
  4146f3:	lds    esi,FWORD PTR [esi-0x676d1e70]
  4146f9:	repz cwde 
  4146fb:	paddw  mm7,QWORD PTR [ebp-0x67]
  4146ff:	and    DWORD PTR [edx],esi
  414701:	lock and DWORD PTR [esi],eax
  414704:	xchg   edi,eax
  414705:	out    0xea,eax
  414707:	sub    DWORD PTR [ebp+edi*1+0x32],esi
  41470b:	fistp  DWORD PTR [edx]
  41470d:	jle    0x414730
  41470f:	jg     0x414738
  414711:	aad    0x81
  414713:	int    0x6
  414715:	rcr    DWORD PTR [esi],cl
  414717:	sbb    al,0x53
  414719:	and    eax,0x3cad96e0
  41471e:	mov    ebx,0xf73a1b62
  414723:	outs   dx,DWORD PTR ds:[esi]
  414724:	pop    edx
  414725:	cld    
  414726:	out    dx,al
  414727:	xor    ecx,edx
  414729:	mov    ecx,DWORD PTR [ecx]
  41472b:	add    BYTE PTR ds:0x7ade7eca,dl
  414731:	jno    0x4146ba
  414733:	dec    ecx
  414734:	or     BYTE PTR [eax+eiz*8+0x7d169036],ah
  41473b:	data16 (bad) 
  41473e:	pop    esi
  41473f:	jb     0x414798
  414741:	cld    
  414742:	push   0xc
  414744:	in     al,0x7c
  414746:	add    al,0x21
  414748:	call   0xffeb:0x3691778c
  41474f:	xor    DWORD PTR [ebx-0xe2c1f45],ecx
  414755:	inc    ebp
  414756:	inc    esp
  414757:	xor    DWORD PTR [edi-0x1b31b636],edi
  41475d:	out    0xe2,al
  41475f:	mov    ds:0x13581da4,al
  414764:	ja     0x41472a
  414766:	adc    esi,eax
  414768:	in     eax,0x6c
  41476a:	xor    ecx,ebx
  41476c:	pop    es
  41476d:	jnp    0x4147eb
  41476f:	out    dx,al
  414770:	ins    DWORD PTR es:[edi],dx
  414771:	sbb    DWORD PTR [eax],ebp
  414773:	xchg   esi,eax
  414774:	lds    esp,FWORD PTR [eax-0xd53796d]
  41477a:	push   0xa7bd0f0a
  41477f:	test   al,0x52
  414781:	pop    ds
  414782:	(bad)  
  414784:	lds    ebx,FWORD PTR [eax+esi*1]
  414787:	iret   
  414788:	out    0xca,eax
  41478a:	jno    0x414774
  41478c:	(bad)  
  41478d:	pop    eax
  41478e:	jg     0x4147dd
  414790:	out    0x44,eax
  414792:	sbb    ah,bh
  414794:	pusha  
  414795:	push   ss
  414796:	pop    esp
  414797:	rol    BYTE PTR ds:0xe18073e4,1
  41479d:	jle    0x4147f4
  41479f:	loop   0x4147da
  4147a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147a2:	jmp    0x3b93:0x6dd8503f
  4147a9:	xor    BYTE PTR [ebx-0x9608ee3],cl
  4147af:	daa    
  4147b0:	stos   BYTE PTR es:[edi],al
  4147b1:	pop    ds
  4147b2:	xchg   esi,eax
  4147b3:	loopne 0x414748
  4147b5:	nop
  4147b6:	inc    esp
  4147b7:	and    eax,0x411eda32
  4147bc:	call   0xc84464d8
  4147c1:	push   es
  4147c2:	mov    cl,bl
  4147c4:	in     al,dx
  4147c5:	push   0x1d4423c1
  4147ca:	mov    DWORD PTR [edi+edx*1],ebp
  4147cd:	pop    ebp
  4147ce:	rdpmc  
  4147d0:	fwait
  4147d1:	sub    edi,edi
  4147d3:	in     al,dx
  4147d4:	test   BYTE PTR [eax+0x59],al
  4147d7:	inc    edx
  4147d8:	ror    DWORD PTR [edx+0x69717687],1
  4147de:	xchg   ebx,eax
  4147df:	xor    eax,0xc0bed172
  4147e4:	lock jno 0x4147d2
  4147e7:	bound  ebp,QWORD PTR [ecx-0x49]
  4147ea:	mov    cs,WORD PTR [eax-0x79753759]
  4147f0:	dec    esp
  4147f1:	adc    eax,0x8a397060
  4147f6:	jns    0x414839
  4147f8:	jl     0x4147ad
  4147fa:	xor    edx,edi
  4147fc:	aad    0xbd
  4147fe:	cmp    esi,ebp
  414800:	cmp    DWORD PTR [eax],esi
  414802:	mov    ecx,0x57a374c5
  414807:	inc    esp
  414808:	bound  eax,QWORD PTR [ebx]
  41480a:	pop    ebp
  41480b:	je     0x414800
  41480d:	mov    ecx,DWORD PTR [edx+0x476141de]
  414813:	jp     0x414831
  414815:	push   ecx
  414816:	inc    ebx
  414817:	(bad)  
  414818:	arpl   bp,ax
  41481a:	push   edx
  41481b:	push   0xffffff92
  41481d:	cdq    
  41481e:	jl     0x414839
  414820:	pop    ebp
  414821:	jnp    0x414898
  414823:	xchg   BYTE PTR [eax],bl
  414825:	push   cs
  414826:	or     al,0x5c
  414828:	(bad)  [eax+eiz*4-0xe]
  41482c:	xlat   BYTE PTR ds:[ebx]
  41482d:	sub    eax,0x9369b61e
  414832:	cmp    eax,0x631dfd31
  414837:	jns    0x414860
  414839:	sti    
  41483a:	sub    al,0xc0
  41483c:	xlat   BYTE PTR ds:[ebx]
  41483d:	push   esi
  41483e:	sub    BYTE PTR [edi+0x2eaaae21],bl
  414844:	mov    dl,BYTE PTR [esi+0x10e2bd77]
  41484a:	xchg   DWORD PTR es:[ecx+0x1200a410],esp
  414851:	mov    esi,0xae176f3f
  414856:	fldenv [ebx-0x7623f36a]
  41485c:	mov    ds:0xbb7328fc,eax
  414861:	in     eax,dx
  414862:	jge    0x414817
  414864:	pop    esi
  414865:	jbe    0x414860
  414867:	in     eax,0xa3
  414869:	mov    bl,0x17
  41486b:	or     BYTE PTR [ecx+ebp*8-0x1cb8a750],0x1b
  414873:	sahf   
  414874:	fstp   QWORD PTR [ecx-0xeb44046]
  41487a:	pop    edi
  41487b:	xchg   BYTE PTR [ecx+0x17],bl
  41487e:	sub    DWORD PTR [ebx],ecx
  414880:	sub    cl,BYTE PTR [eax]
  414882:	add    al,0x20
  414884:	sub    BYTE PTR [ecx],dh
  414886:	inc    ebx
  414887:	and    al,0xf8
  414889:	adc    BYTE PTR [esi+0x5c],dh
  41488c:	mov    bh,0xec
  41488e:	xlat   BYTE PTR ds:[ebx]
  41488f:	mov    ds:0x1a3a8b3c,al
  414894:	or     eax,DWORD PTR [edi-0x20]
  414897:	call   0x8463:0xc553db3b
  41489e:	(bad)  
  41489f:	cmp    eax,0x91147cba
  4148a4:	pop    eax
  4148a5:	pop    edx
  4148a6:	jl     0x4148cc
  4148a8:	call   0x558d:0x1f0de635
  4148af:	sub    ebp,DWORD PTR [ebp-0x6e78e939]
  4148b5:	adc    DWORD PTR [eax-0x79c922f6],ecx
  4148bb:	fsubr  st,st(3)
  4148bd:	nop
  4148be:	sbb    eax,0xff2cb015
  4148c3:	lock sbb esi,DWORD PTR ds:0x6f86ab47
  4148ca:	xchg   edx,eax
  4148cb:	pop    esi
  4148cc:	call   0x7adf:0x2ba1c0a1
  4148d3:	fs pop edx
  4148d5:	(bad)  
  4148d6:	sub    ebp,DWORD PTR [edx+0x72bd39b5]
  4148dc:	dec    ebp
  4148dd:	xchg   eax,ebx
  4148df:	sbb    ecx,ecx
  4148e1:	xchg   esp,eax
  4148e2:	stc    
  4148e3:	push   ecx
  4148e4:	mov    DWORD PTR [eax+ecx*4+0x5],edi
  4148e8:	les    eax,FWORD PTR [edx+0x23]
  4148eb:	shr    DWORD PTR [eax+0x5f],cl
  4148ee:	rcr    ecx,0x8f
  4148f1:	jge    0x414937
  4148f3:	inc    ebp
  4148f4:	lahf   
  4148f5:	xchg   ebp,eax
  4148f6:	fstp   QWORD PTR [edx]
  4148f8:	fwait
  4148f9:	push   ebx
  4148fa:	cs jl  0x4148c0
  4148fd:	fldenv ds:0x9c63d7f
  414903:	sbb    eax,0x493239fe
  414908:	and    esi,DWORD PTR [edx]
  41490a:	neg    DWORD PTR [ebx-0xc7939a5]
  414910:	fst    DWORD PTR [edx-0x47129196]
  414916:	xchg   edx,eax
  414917:	addr16 xchg esi,eax
  414919:	js     0x414916
  41491b:	stos   DWORD PTR es:[edi],eax
  41491c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41491d:	fnstcw WORD PTR [ebx]
  41491f:	(bad)  
  414920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414921:	jmp    0x4148ea
  414923:	in     al,dx
  414924:	bound  ebp,QWORD PTR [edi+0x44b32d6e]
  41492a:	push   0x55
  41492c:	sbb    eax,0x4373f512
  414931:	jle    0x41494c
  414933:	rol    DWORD PTR [esi],1
  414935:	pop    ds
  414936:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414937:	xchg   edx,eax
  414938:	daa    
  414939:	fsubr  QWORD PTR [eax-0x779d9b9]
  41493f:	push   esi
  414940:	and    al,ah
  414942:	xchg   edx,eax
  414943:	sbb    al,0x39
  414945:	dec    esp
  414946:	aad    0x85
  414948:	jmp    FWORD PTR [eax]
  41494a:	jmp    0x497e:0x87301b43
  414951:	adc    DWORD PTR [eax+0x4a23e946],ebp
  414957:	fst    QWORD PTR [ecx+0x643c96fc]
  41495d:	cmp    al,BYTE PTR [ebx+edi*1+0x2a]
  414961:	mov    dl,0xc6
  414963:	mov    edi,edi
  414965:	pop    edx
  414966:	es mov ch,0x60
  414969:	test   esp,0x6cd10995
  41496f:	mov    eax,ds:0xf3f9ae9b
  414974:	mov    esi,DWORD PTR [ecx+0xc60f6c1]
  41497a:	fcmovnu st,st(2)
  41497c:	push   ss
  41497d:	adc    BYTE PTR [edx+0x63],bl
  414980:	aaa    
  414981:	es dec ebp
  414983:	jnp    0x414995
  414985:	(bad)  
  414986:	in     eax,dx
  414987:	out    0x3,al
  414989:	push   edi
  41498a:	mov    esp,DWORD PTR [edx-0x76]
  41498d:	jge    0x414977
  41498f:	loopne 0x4149d0
  414991:	out    dx,al
  414992:	dec    esp
  414993:	and    dl,BYTE PTR [edi+0x3786c87e]
  414999:	push   esi
  41499a:	mov    ecx,0xe8196b9b
  41499f:	and    bh,ch
  4149a1:	xor    al,0xe2
  4149a3:	into   
  4149a4:	xchg   esi,eax
  4149a5:	les    ebp,FWORD PTR [edx-0xac7a5a5]
  4149ab:	xchg   ebp,eax
  4149ac:	(bad)  
  4149ad:	cdq    
  4149ae:	xchg   DWORD PTR [esi],ebp
  4149b0:	mov    dl,0x9d
  4149b2:	push   cs
  4149b3:	mov    edi,DWORD PTR [ebx+ebp*1+0x2f79a35e]
  4149ba:	dec    ebx
  4149bb:	icebp  
  4149bc:	aas    
  4149bd:	test   eax,0x6227c1a7
  4149c2:	or     al,0x65
  4149c4:	sbb    al,0x97
  4149c6:	lods   al,BYTE PTR ds:[esi]
  4149c7:	xchg   ebp,eax
  4149c8:	clc    
  4149c9:	pop    esp
  4149ca:	jne    0x414a09
  4149cc:	mov    dh,0x41
  4149ce:	sbb    cl,al
  4149d0:	repz jg 0x414970
  4149d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149d4:	scas   al,BYTE PTR es:[edi]
  4149d5:	mov    ecx,0xfa0d95f3
  4149da:	cmp    ch,BYTE PTR [eax+0x5ee69b83]
  4149e0:	inc    ecx
  4149e1:	es call 0x7ad4:0xdbd9bd8c
  4149e9:	pop    ebp
  4149ea:	sbb    esi,ecx
  4149ec:	fstp   TBYTE PTR ds:0x6139ab4a
  4149f2:	in     eax,0xc0
  4149f4:	mov    ecx,edi
  4149f6:	xchg   ebp,eax
  4149f7:	(bad)  es:[edx-0x56655670]
  4149fe:	repz pop eax
  414a00:	ss pop eax
  414a02:	adc    dl,0x10
  414a05:	cmp    al,0x9d
  414a07:	mov    ebp,0x4d63aefa
  414a0c:	mov    esp,0x3a0d7dc
  414a11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a12:	lods   al,BYTE PTR ds:[esi]
  414a13:	add    DWORD PTR [edx-0x7412675d],esi
  414a19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a1a:	sub    cl,bh
  414a1c:	push   ecx
  414a1d:	scas   eax,DWORD PTR es:[edi]
  414a1e:	adc    eax,edx
  414a20:	stc    
  414a21:	jnp    0x4149ef
  414a23:	push   ecx
  414a24:	scas   eax,DWORD PTR es:[edi]
  414a25:	dec    ebx
  414a26:	push   0x27
  414a28:	loope  0x414a09
  414a2a:	ret    
  414a2b:	mov    cl,BYTE PTR [edi+0x2a]
  414a2e:	ret    
  414a2f:	bound  edi,QWORD PTR [edi-0x4d64c8bc]
  414a35:	sub    BYTE PTR [eax],ah
  414a37:	mov    dl,BYTE PTR [edi+edi*4+0x5ba8f942]
  414a3e:	cmp    al,dh
  414a40:	stc    
  414a41:	(bad)  
  414a43:	xchg   esp,eax
  414a44:	outs   dx,DWORD PTR ds:[esi]
  414a45:	push   0xff1399af
  414a4a:	add    ecx,DWORD PTR [ecx+edx*2]
  414a4d:	or     BYTE PTR [ebp-0x5fa19364],0xa6
  414a54:	mov    al,ds:0xc5db6d38
  414a59:	or     esp,DWORD PTR [ebp+ebp*2+0x46f9f71c]
  414a60:	push   ecx
  414a61:	ss mov esi,0x303e558e
  414a67:	dec    edi
  414a68:	xlat   BYTE PTR ds:[ebx]
  414a69:	scas   eax,DWORD PTR es:[edi]
  414a6a:	leave  
  414a6b:	lods   al,BYTE PTR ds:[esi]
  414a6c:	adc    eax,0xd8b3bfb0
  414a71:	mov    ebp,0xadef824b
  414a76:	cmp    al,ch
  414a78:	pop    ds
  414a79:	jmp    0xd548:0xb37488a1
  414a80:	cmc    
  414a81:	dec    esp
  414a82:	pop    esi
  414a83:	lock or al,0x79
  414a86:	fmulp  st(7),st
  414a88:	mov    BYTE PTR [ebx-0x5414c51f],ch
  414a8e:	xchg   ecx,eax
  414a8f:	and    al,0xdf
  414a91:	and    al,0xca
  414a93:	int3   
  414a94:	pusha  
  414a95:	pop    esp
  414a96:	shl    BYTE PTR [edx+edi*1],cl
  414a99:	lock ds jnp 0x414a6d
  414a9d:	pop    ss
  414a9e:	(bad)  
  414a9f:	sti    
  414aa0:	fldl2t 
  414aa2:	lods   al,BYTE PTR ds:[esi]
  414aa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414aa4:	cmp    DWORD PTR [ecx-0x3d],esp
  414aa7:	pop    esp
  414aa8:	cdq    
  414aa9:	aaa    
  414aaa:	out    0x33,eax
  414aac:	ins    DWORD PTR es:[edi],dx
  414aad:	in     al,dx
  414aae:	les    edx,FWORD PTR [edi+0x76e81ea]
  414ab4:	shl    DWORD PTR [ecx],1
  414ab6:	jmp    0x414a3e
  414ab8:	imul   eax,DWORD PTR [edi-0x5334d202],0x3d685c77
  414ac2:	xchg   esp,eax
  414ac3:	stos   DWORD PTR es:[edi],eax
  414ac4:	mov    al,0x3a
  414ac6:	cwde   
  414ac7:	(bad)  
  414ac8:	jbe    0x414b17
  414aca:	inc    ebx
  414acb:	and    BYTE PTR [ecx-0x42],ah
  414ace:	sbb    eax,0xa4d12332
  414ad3:	or     DWORD PTR [ebx],edi
  414ad5:	enter  0x6dc4,0xa4
  414ad9:	adc    BYTE PTR [ebx+0x7d4fc592],0xa
  414ae0:	xchg   ecx,eax
  414ae1:	addr16 jbe 0x414ac9
  414ae4:	inc    eax
  414ae5:	add    eax,esi
  414ae7:	fisubr DWORD PTR [esi+0x3d]
  414aea:	gs jbe 0x414b60
  414aed:	xlat   BYTE PTR ds:[ebx]
  414aee:	lea    ebx,[edx]
  414af0:	cmp    DWORD PTR [ebp+esi*1+0x5e],esi
  414af4:	and    BYTE PTR [esi-0x64bc03d5],0x8e
  414afb:	aaa    
  414afc:	imul   esp,DWORD PTR [ebx-0x61],0x1c6b97bc
  414b03:	or     al,0x5a
  414b05:	(bad)  
  414b07:	inc    eax
  414b08:	sub    dh,0x91
  414b0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b0c:	inc    ebp
  414b0d:	jle    0x414b3c
  414b0f:	imul   edi,DWORD PTR [edx],0x4dd8979a
  414b15:	fnstcw WORD PTR [edi+0xabcdf1d]
  414b1b:	mov    ebx,0x92272419
  414b20:	lahf   
  414b21:	aam    0x3e
  414b23:	test   edi,eax
  414b25:	xlat   BYTE PTR ds:[ebx]
  414b26:	mov    edi,0xfe5c4427
  414b2b:	sub    ebx,DWORD PTR [edx+0x6e]
  414b2e:	adc    al,0xca
  414b30:	je     0x414b98
  414b32:	cmp    eax,0xd0b72fd3
  414b37:	aam    0x3c
  414b39:	test   BYTE PTR [eax+0x3a],bl
  414b3c:	add    edx,DWORD PTR [esi+0xe28bd2a]
  414b42:	ficom  DWORD PTR [ebp+0x59]
  414b45:	mov    eax,ds:0x96292589
  414b4a:	pop    ss
  414b4b:	mov    esp,edi
  414b4d:	mov    dh,BYTE PTR [ecx-0x7c]
  414b50:	aaa    
  414b51:	popa   
  414b52:	xor    BYTE PTR [edi+0x3c270140],ah
  414b58:	sub    esp,esp
  414b5a:	mov    al,0x7f
  414b5c:	inc    edi
  414b5d:	icebp  
  414b5e:	push   edx
  414b5f:	sub    al,0x55
  414b61:	add    bh,ch
  414b63:	push   eax
  414b64:	add    al,BYTE PTR [ebx]
  414b66:	leave  
  414b67:	xchg   ecx,eax
  414b68:	stos   BYTE PTR es:[edi],al
  414b69:	push   edi
  414b6a:	pop    esi
  414b6b:	or     eax,0xdf936c6f
  414b70:	sub    eax,0x92c6c48b
  414b75:	and    esp,DWORD PTR [edx]
  414b77:	fisubr WORD PTR [ebx-0x45]
  414b7a:	cld    
  414b7b:	test   DWORD PTR [ebx-0x69b3ebb6],ebx
  414b81:	sti    
  414b82:	rol    BYTE PTR [ebp+0x4777cf38],cl
  414b88:	shl    BYTE PTR [ebx-0x55],cl
  414b8b:	fsubp  st(3),st
  414b8d:	lahf   
  414b8e:	pop    edx
  414b8f:	and    ebx,edi
  414b91:	into   
  414b92:	or     BYTE PTR [edx],dl
  414b94:	jbe    0x414b18
  414b96:	xchg   esp,eax
  414b97:	dec    esp
  414b98:	mov    eax,0x8296b5c7
  414b9d:	aas    
  414b9e:	js     0x414b24
  414ba0:	push   cs
  414ba1:	sub    esp,DWORD PTR [esp+ebx*2+0xe8113d1]
  414ba8:	adc    edx,esi
  414baa:	test   BYTE PTR [ecx+0x473bb081],bh
  414bb0:	inc    esi
  414bb1:	mov    edi,?
  414bb3:	add    BYTE PTR [ebx+0x2db92445],0x1d
  414bba:	pop    ds
  414bbb:	imul   ecx,DWORD PTR [ecx+0x19060e45],0xfa28a610
  414bc5:	gs pop esi
  414bc7:	adc    eax,0x1da6bc56
  414bcc:	xchg   ebx,eax
  414bcd:	iret   
  414bce:	xor    al,cl
  414bd0:	jmp    0x4322106f
  414bd5:	cs or  ebx,eax
  414bd8:	rol    BYTE PTR ds:0x522826a4,0x95
  414bdf:	mov    edi,0x62f2ede2
  414be4:	popa   
  414be5:	push   ebx
  414be6:	or     al,0xec
  414be8:	adc    dl,dl
  414bea:	pop    esi
  414beb:	pop    ecx
  414bec:	sbb    bh,BYTE PTR [edi]
  414bee:	jnp    0x414b93
  414bf0:	daa    
  414bf1:	sub    BYTE PTR [edx],ah
  414bf3:	cwde   
  414bf4:	lods   eax,DWORD PTR ds:[esi]
  414bf5:	add    ah,BYTE PTR [ebx+0x5f99ce80]
  414bfb:	sub    al,0x1e
  414bfd:	sub    BYTE PTR [edi+0x19],bh
  414c00:	mov    ch,BYTE PTR [eax-0x61bc30a8]
  414c06:	push   esi
  414c07:	fdiv   DWORD PTR [bx+si+0x60]
  414c0b:	pushf  
  414c0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c0d:	jns    0x414c8a
  414c0f:	retf   
  414c10:	pusha  
  414c11:	ins    BYTE PTR es:[edi],dx
  414c12:	call   0xad6b:0xdbcca25d
  414c19:	adc    ch,BYTE PTR ds:0x5fbcd0e5
  414c1f:	dec    esi
  414c20:	mov    edi,0xdc82ca4b
  414c25:	fs in  al,dx
  414c27:	test   DWORD PTR [ecx-0x2f],esp
  414c2a:	or     ah,BYTE PTR [eax-0x37ec4b09]
  414c30:	inc    ecx
  414c31:	mov    ecx,0xff3c8bdf
  414c36:	mov    ah,0x75
  414c38:	xor    al,0x6c
  414c3a:	jle    0x414bd6
  414c3c:	jb     0x414cae
  414c3e:	arpl   WORD PTR [ebp-0x11],cx
  414c41:	inc    ebx
  414c42:	out    dx,eax
  414c43:	test   al,0xa5
  414c45:	scas   al,BYTE PTR es:[edi]
  414c46:	call   DWORD PTR ds:0x9b79847d
  414c4c:	dec    esi
  414c4d:	and    al,0xaf
  414c4f:	mov    ah,0xe9
  414c51:	cdq    
  414c52:	xor    bl,BYTE PTR [ecx-0x5f353dda]
  414c58:	sub    BYTE PTR [ebp+0x7c],bl
  414c5b:	jg     0x414c57
  414c5d:	pop    eax
  414c5e:	inc    ebp
  414c5f:	or     DWORD PTR [edi],edi
  414c61:	xlat   BYTE PTR ds:[ebx]
  414c62:	loopne 0x414c55
  414c64:	loopne 0x414c68
  414c66:	add    DWORD PTR [eax],esp
  414c68:	jns    0x414c75
  414c6a:	imul   ebx,DWORD PTR [ecx+edx*1+0x748d7210],0x19a3dcc4
  414c75:	(bad)
  414c78:	mov    BYTE PTR [edi-0x70],bh
  414c7b:	dec    ebx
  414c7c:	jno    0x414cfc
  414c7e:	pop    esp
  414c7f:	loop   0x414cd1
  414c81:	test   edi,0xfafae493
  414c87:	and    ebx,eax
  414c89:	sub    esp,DWORD PTR [eax+0x4]
  414c8c:	clc    
  414c8d:	ja     0x414c38
  414c8f:	lea    ecx,[edx+0x5126a019]
  414c95:	fisub  DWORD PTR ds:0xdd1b4e81
  414c9b:	push   esp
  414c9c:	push   edx
  414c9d:	sub    BYTE PTR es:[ecx-0x3862e693],0xcc
  414ca5:	jne    0x414d0d
  414ca7:	mov    DWORD PTR [ebx],esp
  414ca9:	jle    0x414c6e
  414cab:	scas   eax,DWORD PTR es:[edi]
  414cac:	dec    ebx
  414cad:	sti    
  414cae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414caf:	out    dx,eax
  414cb0:	jnp    0x414d0d
  414cb2:	(bad)
  414cb6:	push   esp
  414cb7:	mov    bl,0xd9
  414cb9:	pop    ds
  414cba:	push   esp
  414cbb:	test   BYTE PTR [ecx+0x8815c2d],ch
  414cc1:	jo     0x414d3c
  414cc3:	fst    QWORD PTR gs:[esi+eax*2+0x770ac852]
  414ccb:	fs mov bl,0xc6
  414cce:	imul   esp,DWORD PTR [esi-0x9],0xa02ceaa5
  414cd5:	cs scas al,BYTE PTR es:[edi]
  414cd7:	sub    DWORD PTR [edx+0x52],eax
  414cda:	push   0x71978bb4
  414cdf:	pop    edi
  414ce0:	fnstcw WORD PTR [ecx+0x3eb64106]
  414ce6:	mov    edi,0x7e40325b
  414ceb:	xchg   edx,eax
  414cec:	push   0xe6508807
  414cf1:	aaa    
  414cf2:	xor    BYTE PTR [edx+0x7],0xc
  414cf6:	push   edi
  414cf7:	push   esi
  414cf8:	lds    ecx,FWORD PTR [esi+edi*2+0x6b354c5e]
  414cff:	and    al,BYTE PTR gs:[ecx-0x7d4f50d5]
  414d06:	addr16 loop 0x414d56
  414d09:	dec    edi
  414d0a:	pop    esp
  414d0b:	and    edi,DWORD PTR ds:[ecx+eax*2+0x28]
  414d10:	scas   al,BYTE PTR es:[edi]
  414d11:	out    dx,eax
  414d12:	sub    BYTE PTR [edi],al
  414d14:	cli    
  414d15:	icebp  
  414d16:	mov    es,WORD PTR [esp+eax*4+0x4929c557]
  414d1d:	mov    al,0x4f
  414d1f:	mov    esp,DWORD PTR [eax-0x51]
  414d22:	mov    ds:0x381b5438,eax
  414d27:	mov    dh,0x8d
  414d29:	and    cl,BYTE PTR [ebp+eax*2+0x6e]
  414d2d:	(bad)  
  414d2e:	pop    eax
  414d2f:	fmul   DWORD PTR [eax-0x57]
  414d32:	in     al,0x99
  414d34:	sar    DWORD PTR [eax-0x18b76da1],cl
  414d3a:	fs pop edx
  414d3c:	and    esi,DWORD PTR [edi+0x44b3e724]
  414d42:	push   ss
  414d43:	iret   
  414d44:	addr16 test eax,0xcccc0b61
  414d4a:	ds dec esp
  414d4c:	arpl   WORD PTR [ecx-0x796279b9],si
  414d52:	clc    
  414d53:	mov    ds:0x39d1d4d3,al
  414d58:	jl     0x414d9e
  414d5a:	hlt    
  414d5b:	sbb    ebp,DWORD PTR [edx+0x52]
  414d5e:	ins    DWORD PTR es:[edi],dx
  414d5f:	test   al,0xaa
  414d61:	sbb    BYTE PTR [esi],cl
  414d63:	dec    esp
  414d64:	shr    ah,0xd8
  414d67:	jmp    0x414cf1
  414d69:	fisubr WORD PTR [edi-0x9]
  414d6c:	ja     0x414d35
  414d6e:	sub    DWORD PTR [ebx],edx
  414d70:	push   0xae81edd6
  414d75:	pop    ebp
  414d76:	(bad)  
  414d77:	pop    esi
  414d78:	pop    esp
  414d79:	stos   DWORD PTR es:[edi],eax
  414d7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d7b:	xchg   ebx,eax
  414d7c:	rcr    BYTE PTR [edi+0x3c],1
  414d7f:	push   0xffffffec
  414d81:	adc    ebx,DWORD PTR [eax+edx*1+0x2b1fcc7c]
  414d88:	mov    esi,0xbf1549bb
  414d8d:	mov    eax,0x8843c7a9
  414d92:	cmp    BYTE PTR [ebx+edx*8+0x238f97ad],dl
  414d99:	mov    ds:0x11a249d6,al
  414d9e:	add    DWORD PTR [ebx+edi*4+0x54ccb2a3],esp
  414da5:	mov    cl,0xac
  414da7:	repnz pusha 
  414da9:	xor    eax,0x2bb5d6cc
  414dae:	inc    BYTE PTR [ecx]
  414db0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414db1:	pop    ss
  414db2:	call   0x290f:0x2dc69ba0
  414db9:	leave  
  414dba:	in     eax,dx
  414dbb:	push   0xffffffdb
  414dbd:	mov    al,0xb
  414dbf:	comiss xmm4,DWORD PTR [ebp+edx*8-0x4f]
  414dc4:	inc    DWORD PTR [ebp+0x1b0929f]
  414dca:	mov    BYTE PTR [esi+edx*8-0x31],ch
  414dce:	and    ah,BYTE PTR [ebx-0x1709bda8]
  414dd4:	clc    
  414dd5:	int    0x4d
  414dd7:	gs xchg ebx,eax
  414dd9:	push   es
  414dda:	sub    DWORD PTR [edi-0x50],edi
  414ddd:	scas   eax,DWORD PTR es:[edi]
  414dde:	pop    ebx
  414ddf:	test   DWORD PTR [esi+esi*4+0x7d],ecx
  414de3:	nop
  414de4:	jl     0x414dc9
  414de6:	enter  0x6529,0x90
  414dea:	adc    eax,eax
  414dec:	fmul   DWORD PTR [edi+0x7ffe0db]
  414df2:	loopne 0x414deb
  414df4:	aaa    
  414df5:	xor    DWORD PTR [eax+ebp*2+0x2b0cc520],ecx
  414dfc:	pop    ss
  414dfd:	std    
  414dfe:	xor    DWORD PTR [ebp-0x5e3e9238],ebp
  414e04:	adc    al,0xdd
  414e06:	add    BYTE PTR ds:0xa301d377,cl
  414e0c:	jb     0x414d92
  414e0e:	rcr    DWORD PTR [edx-0x21fa60c0],cl
  414e14:	popf   
  414e15:	adc    edi,ebp
  414e17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e18:	push   ebx
  414e19:	fidiv  DWORD PTR [ebx-0x3f145502]
  414e1f:	nop
  414e20:	cmp    al,0x87
  414e22:	imul   ebx,DWORD PTR cs:[edi],0x69
  414e26:	add    eax,0x1df3ee5d
  414e2b:	sar    ebp,1
  414e2d:	pushf  
  414e2e:	std    
  414e2f:	ins    DWORD PTR es:[edi],dx
  414e30:	pop    edi
  414e31:	test   BYTE PTR [ebx-0x1f],ah
  414e34:	push   0xebe8cd20
  414e39:	xor    BYTE PTR [ecx],ah
  414e3b:	ret    0x3f9f
  414e3e:	ja     0x414e86
  414e40:	pusha  
  414e41:	es pop ss
  414e43:	push   esp
  414e44:	adc    ah,dh
  414e46:	std    
  414e47:	jo     0x414e45
  414e49:	mov    edi,DWORD PTR [edx+0x45]
  414e4c:	sub    DWORD PTR [eax],esi
  414e4e:	(bad)  
  414e4f:	xchg   ecx,eax
  414e50:	test   eax,0x94c94d8d
  414e55:	mov    esp,0x414d816b
  414e5a:	xchg   BYTE PTR [esi+0x58386fb1],cl
  414e60:	and    ebp,DWORD PTR [ebx+0x22]
  414e63:	xor    BYTE PTR [eax-0x6e],bl
  414e66:	cld    
  414e67:	in     al,0xe1
  414e69:	scas   eax,DWORD PTR es:[edi]
  414e6a:	repnz (bad) 
  414e6c:	fadd   QWORD PTR [edi+0x57]
  414e6f:	sub    dl,BYTE PTR ds:0x55dd4de0
  414e75:	cli    
  414e76:	lods   eax,DWORD PTR ds:[esi]
  414e77:	push   esi
  414e78:	inc    ebp
  414e79:	sbb    dl,BYTE PTR [ebx-0x5dad6656]
  414e7f:	or     bl,BYTE PTR ds:0x66910869
  414e85:	sbb    ebx,DWORD PTR ds:0x4ab67386
  414e8b:	shr    DWORD PTR [edx+ebx*1-0x41a98df8],1
  414e92:	push   eax
  414e93:	fimul  WORD PTR [ebx+esi*1-0x9]
  414e97:	pop    esp
  414e98:	cdq    
  414e99:	fcmovnu st,st(2)
  414e9b:	out    dx,eax
  414e9c:	(bad)  
  414e9e:	outs   dx,BYTE PTR ds:[esi]
  414e9f:	dec    esp
  414ea0:	inc    ebp
  414ea1:	imul   BYTE PTR ds:0x1a94464f
  414ea7:	jecxz  0x414edc
  414ea9:	stc    
  414eaa:	dec    ecx
  414eab:	mov    bl,0xc4
  414ead:	and    bl,0x56
  414eb0:	or     esi,ecx
  414eb2:	mov    eax,ds:0xb02c4fd
  414eb7:	or     edi,DWORD PTR [edx-0x5a]
  414eba:	push   esi
  414ebb:	jmp    0x414e9a
  414ebd:	mov    cl,0xbb
  414ebf:	inc    esp
  414ec0:	scas   eax,DWORD PTR es:[edi]
  414ec1:	add    BYTE PTR [ecx+eax*4],cl
  414ec4:	test   BYTE PTR [ecx+ebp*8-0x4041a2d0],ch
  414ecb:	sub    al,0x81
  414ecd:	aaa    
  414ece:	iret   
  414ecf:	cmp    al,0xda
  414ed1:	hlt    
  414ed2:	out    0x1b,al
  414ed4:	add    BYTE PTR [edx+0x492645c4],0x2f
  414edb:	or     dh,bh
  414edd:	fdivr  DWORD PTR ds:0xbbb12faa
  414ee3:	xchg   esp,eax
  414ee4:	pop    ss
  414ee5:	and    DWORD PTR [ebx],esi
  414ee7:	jns    0x414efa
  414ee9:	or     BYTE PTR [edx+0x3b],0xff
  414eed:	add    BYTE PTR [ebp+0x6ff21ebb],ah
  414ef3:	xor    BYTE PTR [ebp-0x3030a565],bh
  414ef9:	call   0xcd44:0x80f597b8
  414f00:	fld    QWORD PTR [esi+0x45]
  414f03:	jge    0x414f5c
  414f05:	push   esp
  414f06:	add    dl,BYTE PTR [ebx+0x32a09b49]
  414f0c:	and    eax,0x9ad4c972
  414f11:	mov    DWORD PTR [eax+0x52],ebp
  414f14:	mov    al,0x30
  414f16:	cwde   
  414f17:	add    edi,esp
  414f19:	ins    BYTE PTR es:[edi],dx
  414f1a:	sbb    eax,0x206942b7
  414f1f:	mov    edx,0x3f93220a
  414f24:	jg     0x414f5f
  414f26:	xchg   ebx,eax
  414f27:	jae    0x414f3f
  414f29:	div    ebp
  414f2b:	mov    edx,0x859f58ea
  414f30:	mov    ecx,0x3b6c53bd
  414f35:	mov    edi,0x8057d41b
  414f3a:	loopne 0x414f23
  414f3c:	mov    DWORD PTR [esi],0xf19b91fb
  414f42:	test   BYTE PTR [esi+ebp*2+0x6],ch
  414f46:	xchg   esi,eax
  414f47:	shr    DWORD PTR [ebx],1
  414f49:	jmp    0xbc836d46
  414f4e:	sub    al,0x4a
  414f50:	dec    ecx
  414f51:	dec    esp
  414f52:	mov    edx,0x9d464d11
  414f57:	pop    ds
  414f58:	test   bl,ch
  414f5a:	jg     0x414fce
  414f5c:	mov    bh,0x3e
  414f5e:	rcr    ebp,1
  414f60:	xor    al,0xb0
  414f62:	jbe    0x414f9d
  414f64:	inc    eax
  414f65:	and    eax,0xb554cfb
  414f6a:	lock xchg ebx,eax
  414f6c:	xlat   BYTE PTR ds:[ebx]
  414f6d:	aad    0x74
  414f6f:	jmp    0x40d7:0x748850d
  414f76:	fistp  WORD PTR [edx]
  414f78:	sbb    al,0x2f
  414f7a:	bound  ecx,QWORD PTR [ebp+0x37dd1d7]
  414f80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f81:	repz test DWORD PTR [bp+0x56],ebp
  414f86:	(bad)  
  414f87:	sub    esi,esp
  414f89:	repnz stos BYTE PTR es:[edi],al
  414f8b:	test   DWORD PTR [ecx-0x78],edi
  414f8e:	mov    BYTE PTR [edi],ch
  414f90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f91:	dec    esi
  414f92:	mov    BYTE PTR [edi+0x1d74bb4b],al
  414f98:	std    
  414f99:	mov    ds,WORD PTR [ecx]
  414f9b:	je     0x414f8c
  414f9d:	sbb    DWORD PTR [edi-0x24],0x4745a8b4
  414fa4:	ds mov dl,0x43
  414fa7:	push   edx
  414fa8:	(bad)  
  414fa9:	in     eax,0x7c
  414fab:	aas    
  414fac:	mov    bh,dl
  414fae:	in     eax,0x3e
  414fb0:	lock mov dl,0x1b
  414fb3:	push   es
  414fb4:	mov    edi,0x8fca6d26
  414fb9:	dec    ebx
  414fba:	pusha  
  414fbb:	into   
  414fbc:	sub    al,0xa7
  414fbe:	rcr    BYTE PTR [ebx-0x67],1
  414fc1:	pushf  
  414fc2:	rol    BYTE PTR [edx+0x7b],cl
  414fc5:	cmc    
  414fc6:	pop    DWORD PTR [esi-0x7d]
  414fc9:	les    esi,FWORD PTR [edx+eax*8]
  414fcc:	xchg   edi,eax
  414fcd:	jnp    0x41501b
  414fcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fd0:	mov    al,0x51
  414fd2:	jmp    0x415027
  414fd4:	inc    ecx
  414fd5:	xchg   edx,eax
  414fd6:	sub    eax,0xfc8cfc19
  414fdb:	xchg   esi,eax
  414fdc:	or     BYTE PTR [ebx+eiz*2-0x735a0a92],dl
  414fe3:	ror    BYTE PTR [eax-0xe7676a2],0x7f
  414fea:	les    ebx,FWORD PTR [ebp+0x7586c9f1]
  414ff0:	xor    ah,ch
  414ff2:	push   ebp
  414ff3:	xchg   ecx,eax
  414ff4:	inc    ecx
  414ff5:	cli    
  414ff6:	cdq    
  414ff7:	adc    ebx,ebx
  414ff9:	sub    DWORD PTR [edx+edi*1],esp
  414ffc:	fld    QWORD PTR ds:0xc4c27b28
  415002:	dec    edi
  415003:	loop   0x415014
  415005:	ins    DWORD PTR es:[edi],dx
  415006:	sti    
  415007:	scas   al,BYTE PTR es:[edi]
  415008:	jns    0x415076
  41500a:	(bad)  
  41500b:	push   ecx
  41500c:	sub    DWORD PTR [ecx+0x7a91c6b6],0x4ce1631c
  415016:	add    eax,0x32fcdf39
  41501b:	rol    ecx,0xf0
  41501e:	xchg   ebx,eax
  41501f:	add    al,0x1
  415021:	inc    edx
  415022:	adc    DWORD PTR [esi+ecx*1-0x5b],esi
  415026:	ins    BYTE PTR es:[edi],dx
  415027:	jno    0x415053
  415029:	or     DWORD PTR [eax+0x140638d],0x2d
  415030:	sar    BYTE PTR [bp+di],1
  415033:	pop    es
  415034:	dec    ebx
  415035:	sahf   
  415036:	adc    eax,0x1efe8d39
  41503b:	ja     0x414fec
  41503d:	cmp    esi,DWORD PTR [edi+0x1dc2cd17]
  415043:	not    DWORD PTR cs:[edx+ebx*1]
  415047:	mov    eax,0xf801e08f
  41504c:	in     eax,dx
  41504d:	(bad)  
  41504e:	daa    
  41504f:	jae    0x415017
  415051:	adc    al,0x67
  415053:	push   ebx
  415054:	push   ecx
  415055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415056:	or     ah,bl
  415058:	ret    0x62cb
  41505b:	xchg   ecx,eax
  41505c:	pop    es
  41505d:	pop    ds
  41505e:	jns    0x41509f
  415060:	sbb    DWORD PTR [esi],esi
  415062:	rcl    DWORD PTR [ebp-0x18a1980f],cl
  415068:	loope  0x4150c7
  41506a:	repz repz call 0x59be:0x44d743ba
  415073:	pushf  
  415074:	xchg   edi,eax
  415075:	and    dl,BYTE PTR [ecx]
  415077:	pop    ss
  415078:	mov    dh,0xe2
  41507a:	push   ebp
  41507b:	cs push ds
  41507d:	and    DWORD PTR [ebp-0x71],ebx
  415080:	psubb  mm3,mm7
  415083:	hlt    
  415084:	xor    esi,DWORD PTR [esi+0x58]
  415087:	fstp   DWORD PTR [ebp-0x30]
  41508a:	push   ebx
  41508b:	adc    eax,0x94f299fe
  415090:	and    al,0xa3
  415092:	xlat   BYTE PTR ds:[ebx]
  415093:	loope  0x4150d8
  415095:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415096:	stc    
  415097:	std    
  415098:	jecxz  0x41510c
  41509a:	mov    esi,0xb224b554
  41509f:	cmp    esi,edi
  4150a1:	div    cl
  4150a3:	js     0x41507c
  4150a5:	sbb    BYTE PTR [ecx+0x63520108],0x9c
  4150ac:	icebp  
  4150ad:	popa   
  4150ae:	mov    edi,esp
  4150b0:	xor    al,0x69
  4150b2:	jb     0x415099
  4150b4:	jae    0x4150ca
  4150b6:	(bad)  
  4150b7:	jp     0x415108
  4150b9:	fsub   QWORD PTR [esi-0x23]
  4150bc:	and    DWORD PTR [edx+0x5e2072db],ecx
  4150c2:	iret   
  4150c3:	ror    edi,cl
  4150c5:	xor    dh,BYTE PTR [esi]
  4150c7:	dec    ebx
  4150c8:	sbb    DWORD PTR [eax+0x54],edi
  4150cb:	leave  
  4150cc:	sti    
  4150cd:	sub    al,BYTE PTR [esi+esi*4]
  4150d0:	call   0xb14c:0xbd8a8591
  4150d7:	lds    ebp,FWORD PTR [esi-0x79]
  4150da:	scas   al,BYTE PTR es:[edi]
  4150db:	sub    ch,BYTE PTR [esi-0x1e620437]
  4150e1:	or     BYTE PTR [ebx-0x5e9c5b88],al
  4150e7:	imul   esi,DWORD PTR [ebp+0xb],0xffffff8c
  4150eb:	mov    ss,WORD PTR [esi+0x7f7304a7]
  4150f1:	push   eax
  4150f2:	in     al,0x84
  4150f4:	mov    eax,0xf7c1b730
  4150f9:	cmp    al,0x32
  4150fb:	pop    DWORD PTR [esi-0x8]
  4150fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150ff:	xchg   DWORD PTR [eax+0x61],ebp
  415102:	add    eax,0xde13c0a4
  415107:	or     esi,DWORD PTR [ebx]
  415109:	in     eax,dx
  41510a:	les    ebx,FWORD PTR [edx+0x5a4e098e]
  415110:	addr16 js 0x415174
  415113:	icebp  
  415114:	in     al,dx
  415115:	pop    ss
  415116:	fwait
  415117:	ins    DWORD PTR es:[edi],dx
  415118:	ret    
  415119:	test   cl,dh
  41511b:	aam    0x0
  41511d:	sub    BYTE PTR [esi],cl
  41511f:	arpl   WORD PTR [ecx-0x592f271b],di
  415125:	push   ds
  415126:	cmp    al,0xde
  415128:	fcmovnbe st,st(7)
  41512a:	fadd   DWORD PTR [esi]
  41512c:	fld    DWORD PTR [edx]
  41512e:	sar    BYTE PTR [ebp+0x1d0669de],0x29
  415135:	in     eax,dx
  415136:	in     eax,dx
  415137:	pop    ebp
  415138:	xor    cl,dl
  41513a:	sbb    BYTE PTR [eax],ah
  41513c:	push   esi
  41513d:	bnd jmp 0x60f3f840
  415143:	inc    esi
  415144:	mov    ?,WORD PTR [ebx]
  415146:	pop    eax
  415147:	mov    ah,0xea
  415149:	pushf  
  41514a:	loope  0x4150f5
  41514c:	les    ebx,FWORD PTR [esi+edi*2]
  41514f:	div    DWORD PTR [esi+0x3a34ae44]
  415155:	inc    esi
  415156:	fcomp  QWORD PTR [eax]
  415158:	fld    TBYTE PTR [ecx]
  41515a:	sti    
  41515b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41515c:	mov    WORD PTR gs:[ebp+0x4daf482e],cs
  415163:	and    BYTE PTR [edi-0x47],0xd2
  415167:	xchg   esi,eax
  415168:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415169:	jle    0x415149
  41516b:	xchg   BYTE PTR [esi],ah
  41516d:	jae    0xc5495f8b
  415173:	or     al,0xc8
  415175:	adc    al,bl
  415177:	ret    
  415178:	jmp    0x3b80:0x6adb6b25
  41517f:	sahf   
  415180:	scas   eax,DWORD PTR es:[edi]
  415181:	pop    ebx
  415182:	adc    BYTE PTR [eax],ah
  415184:	pop    edi
  415185:	pop    ss
  415186:	xchg   edi,eax
  415187:	rcr    BYTE PTR [edx+0x65],cl
  41518a:	add    DWORD PTR [edx+0x2f],edx
  41518d:	jl     0x415171
  41518f:	dec    eax
  415190:	xlat   BYTE PTR ds:[ebx]
  415191:	gs sysexit 
  415194:	inc    ebp
  415195:	or     al,BYTE PTR [esp+ebp*4+0x37]
  415199:	dec    ecx
  41519a:	push   edi
  41519b:	lahf   
  41519c:	fmul   QWORD PTR [esi+0x2e]
  41519f:	retf   
  4151a0:	sar    BYTE PTR [edx+0x861e69d],cl
  4151a6:	xchg   BYTE PTR [edx+0x496a65f9],dh
  4151ac:	shl    BYTE PTR [eax-0x2af93f12],0x3
  4151b3:	test   eax,0x63311578
  4151b8:	inc    edx
  4151b9:	jnp    0x415176
  4151bb:	dec    edi
  4151bc:	cdq    
  4151bd:	in     eax,0xd3
  4151bf:	js     0x41520e
  4151c1:	imul   ebx,DWORD PTR [eax+0x10],0xffffffe4
  4151c5:	mov    eax,0x55d68481
  4151ca:	mov    ebp,?
  4151cc:	in     al,dx
  4151cd:	outs   dx,DWORD PTR ds:[esi]
  4151ce:	in     al,dx
  4151cf:	les    edi,FWORD PTR [edx]
  4151d1:	mov    esp,0xa6087e4d
  4151d6:	js     0x41524a
  4151d8:	imul   eax,eax,0xffffffbe
  4151db:	scas   al,BYTE PTR es:[edi]
  4151dc:	push   esi
  4151dd:	and    ebx,esp
  4151df:	aas    
  4151e0:	dec    esp
  4151e1:	sub    dl,ch
  4151e3:	sti    
  4151e4:	mov    esi,0xd77e6c09
  4151e9:	outs   dx,BYTE PTR ds:[esi]
  4151ea:	and    BYTE PTR ds:0xef812669,0x8
  4151f1:	fisttp DWORD PTR [eax]
  4151f3:	xor    DWORD PTR [edi+0x2bed365e],esi
  4151f9:	(bad)  
  4151fa:	mov    cl,dh
  4151fc:	adc    ebx,ecx
  4151fe:	cmp    al,0x1e
  415200:	gs in  al,0xc0
  415203:	inc    edx
  415204:	jne    0x415191
  415206:	(bad)  
  415208:	xchg   ecx,eax
  415209:	repz inc ebx
  41520b:	cmc    
  41520c:	jmp    0x7e31:0xa2676851
  415213:	fmul   QWORD PTR [edi]
  415215:	into   
  415216:	push   esp
  415217:	pop    esi
  415218:	xchg   edi,eax
  415219:	jp     0x4151dd
  41521b:	or     bl,cl
  41521d:	sbb    eax,0x9cd79a23
  415222:	cmp    DWORD PTR [ebx+0x136069ca],ebp
  415228:	mov    ebx,esi
  41522a:	std    
  41522b:	(bad)  
  41522c:	dec    edi
  41522d:	out    0x9f,eax
  41522f:	or     esp,esp
  415231:	jg     0x4151b5
  415233:	cmp    eax,0xdf90b6c7
  415238:	inc    ebp
  415239:	pop    ss
  41523a:	int3   
  41523b:	sbb    al,BYTE PTR [esi]
  41523d:	sub    edx,esi
  41523f:	repz dec ebp
  415241:	outs   dx,BYTE PTR ds:[esi]
  415242:	dec    ebx
  415243:	cwde   
  415244:	out    dx,al
  415245:	out    0x7f,al
  415247:	sub    eax,esp
  415249:	jl     0x415234
  41524b:	xchg   al,bh
  41524d:	pop    ecx
  41524e:	adc    eax,DWORD PTR [esi-0x42]
  415251:	xchg   esi,eax
  415252:	cmp    edx,DWORD PTR [ebx+0x19]
  415255:	inc    eax
  415256:	fstp   DWORD PTR [esi+eiz*4]
  415259:	shl    DWORD PTR [esi],1
  41525b:	or     DWORD PTR [ecx],esi
  41525d:	test   BYTE PTR [ebp-0x2d661247],dl
  415263:	cmp    edx,DWORD PTR [ecx+0x14]
  415266:	loopne 0x4152ae
  415268:	aad    0x48
  41526a:	jmp    0x5dad:0xea2e9fc1
  415271:	aad    0xc0
  415273:	(bad)  
  415274:	fdivr  DWORD PTR [ecx+0x67]
  415277:	sbb    al,0xbb
  415279:	fstp   st(0)
  41527b:	mov    ah,cl
  41527d:	sbb    dl,al
  41527f:	adc    eax,edi
  415281:	jmp    DWORD PTR [edi]
  415283:	aad    0xf6
  415285:	mov    bh,0x1a
  415287:	sub    DWORD PTR [edi-0x1f],edi
  41528a:	in     eax,dx
  41528b:	add    al,0xeb
  41528d:	inc    edx
  41528e:	xchg   esi,eax
  41528f:	icebp  
  415290:	push   es
  415291:	mov    bh,0xdb
  415293:	mov    esp,DWORD PTR [eax-0x3e128ca1]
  415299:	hlt    
  41529a:	xchg   ebp,eax
  41529b:	mov    eax,ds:0x9ab1b6bf
  4152a0:	push   ebp
  4152a1:	mov    WORD PTR [ebx],gs
  4152a3:	test   DWORD PTR [eax-0x31],ebx
  4152a6:	inc    eax
  4152a7:	gs nop
  4152a9:	lods   eax,DWORD PTR ds:[esi]
  4152aa:	sbb    eax,0x34f30a4a
  4152af:	inc    ecx
  4152b0:	dec    edx
  4152b1:	or     BYTE PTR [ebp+edi*2+0x70],bl
  4152b5:	les    ebx,FWORD PTR [ecx*8-0x68639e23]
  4152bc:	push   edx
  4152bd:	lds    ebx,FWORD PTR [ebp-0x12]
  4152c0:	mov    ds:0xa1784b7b,eax
  4152c5:	icebp  
  4152c6:	in     al,dx
  4152c7:	add    edx,DWORD PTR ds:0xf54bf46
  4152cd:	lock js 0x41532d
  4152d0:	add    eax,0x945968a3
  4152d5:	out    0x5e,al
  4152d7:	enter  0x194f,0xde
  4152db:	call   0xc922:0xfb72912d
  4152e2:	ja     0x4152be
  4152e4:	push   ebx
  4152e5:	or     eax,0x29166473
  4152ea:	xchg   ecx,eax
  4152eb:	pop    esi
  4152ec:	push   edx
  4152ed:	repnz and DWORD PTR [esi-0x5a0aa156],ebx
  4152f4:	fadd   DWORD PTR [ebp-0x53]
  4152f7:	ds cdq 
  4152f9:	test   BYTE PTR [esi+0x40],bh
  4152fc:	outs   dx,DWORD PTR ds:[esi]
  4152fd:	into   
  4152fe:	(bad)  
  4152ff:	push   edx
  415300:	mov    esp,0x3dbafe54
  415305:	push   0xffffffe6
  415307:	in     eax,0x4e
  415309:	jmp    0xf885:0x5e58d871
  415310:	inc    esi
  415311:	lods   eax,DWORD PTR ds:[esi]
  415312:	push   ebp
  415313:	(bad)  
  415314:	fwait
  415315:	std    
  415316:	jno    0x4152e0
  415318:	jle    0x4152f8
  41531a:	loope  0x415366
  41531c:	cmc    
  41531d:	mov    ebx,0xbdb56c31
  415322:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415323:	fcomp  st(0)
  415325:	iret   
  415326:	lahf   
  415327:	das    
  415328:	mov    esi,DWORD PTR [edi-0x63]
  41532b:	out    0x88,al
  41532d:	iret   
  41532e:	imul   ebx,DWORD PTR [edx-0x11978f1f],0x157f3944
  415338:	hlt    
  415339:	mov    DWORD PTR [ecx+0x34],esp
  41533c:	xchg   esi,eax
  41533d:	dec    edx
  41533e:	stc    
  41533f:	lds    eax,FWORD PTR [esi-0x65ec3e08]
  415345:	enter  0x66e2,0x97
  415349:	jnp    0x415329
  41534b:	sub    BYTE PTR [ecx-0x41],dh
  41534e:	aas    
  41534f:	push   esi
  415350:	ficom  WORD PTR gs:[ecx]
  415353:	mov    ebx,DWORD PTR [esp+ebp*4]
  415356:	retf   0xb333
  415359:	xchg   esi,eax
  41535a:	aad    0x8f
  41535c:	mov    bl,dl
  41535e:	push   edx
  41535f:	add    al,0x83
  415361:	inc    ebp
  415362:	xor    eax,0xbdb49cbc
  415367:	xor    DWORD PTR gs:[ecx-0x2cb65ae],ebx
  41536e:	repz push ecx
  415370:	mov    ecx,esp
  415372:	fcomp  QWORD PTR [esp+edi*8+0x7]
  415376:	sub    al,0x77
  415378:	or     DWORD PTR [ecx],ebp
  41537a:	pop    ecx
  41537b:	sbb    BYTE PTR [edx-0x10],cl
  41537e:	int3   
  41537f:	out    dx,al
  415380:	xor    eax,DWORD PTR ds:[ebx]
  415383:	push   ecx
  415384:	test   eax,0xaffc1094
  415389:	mov    al,ds:0x49920ee4
  41538e:	or     ch,ah
  415390:	lods   al,BYTE PTR ds:[esi]
  415391:	in     eax,dx
  415392:	adc    esi,DWORD PTR [ecx-0x1ab3e9ba]
  415398:	dec    eax
  415399:	mov    bl,0x87
  41539b:	mov    edx,0xd28cb681
  4153a0:	xchg   eax,ebx
  4153a2:	das    
  4153a3:	cs ret 0xa038
  4153a7:	out    dx,al
  4153a8:	mov    ds:0x4700ef55,eax
  4153ad:	jo     0x4153aa
  4153af:	push   cs
  4153b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153b1:	adc    ah,BYTE PTR [eax+0x35]
  4153b4:	sbb    edi,DWORD PTR [eax-0x1f84db40]
  4153ba:	aas    
  4153bb:	xchg   ebx,eax
  4153bc:	test   BYTE PTR [ebx],bh
  4153be:	out    0x41,al
  4153c0:	stos   DWORD PTR es:[edi],eax
  4153c1:	outs   dx,BYTE PTR ds:[esi]
  4153c2:	inc    esp
  4153c3:	pop    ecx
  4153c4:	imul   edx,esp,0xffffffdd
  4153c7:	(bad)  ds:0x3082568
  4153cd:	push   ebp
  4153ce:	or     ebx,DWORD PTR [eax-0x8]
  4153d1:	shl    DWORD PTR [edi+0x5579f2b7],0x5f
  4153d8:	jecxz  0x41541b
  4153da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153db:	stc    
  4153dc:	call   FWORD PTR [ecx+ecx*4+0x7a7ebc8]
  4153e3:	push   ebx
  4153e4:	in     al,dx
  4153e5:	fsubp  st(6),st
  4153e7:	push   ebp
  4153e8:	mov    ch,0xdd
  4153ea:	fs mov eax,0xe3650b3d
  4153f0:	and    BYTE PTR ds:[ebx-0x2e6d0c07],ch
  4153f7:	and    eax,0x693de7b0
  4153fc:	pop    ebp
  4153fd:	push   ebx
  4153fe:	enter  0xf397,0x9
  415402:	test   BYTE PTR [ecx-0x71bb7f4b],cl
  415408:	dec    edi
  415409:	es jge 0x4153cb
  41540c:	mov    DWORD PTR [ebx-0x6],esp
  41540f:	push   edi
  415410:	or     dl,BYTE PTR [edx]
  415412:	sti    
  415413:	dec    eax
  415414:	push   esi
  415415:	xchg   ecx,eax
  415416:	mov    ds:0x4b976a2e,al
  41541b:	stc    
  41541c:	mov    ds:0xa2eb2461,eax
  415421:	sub    cl,BYTE PTR [ecx]
  415423:	cmc    
  415424:	ficomp DWORD PTR [edi-0xa]
  415427:	(bad)  
  415428:	test   al,0xf9
  41542a:	xchg   ebx,eax
  41542b:	and    eax,0x2a22bfef
  415430:	mov    ds:0xca11c006,al
  415435:	inc    ebx
  415436:	(bad)  
  415437:	sbb    bl,dl
  415439:	clc    
  41543a:	push   ss
  41543b:	ret    0xef5a
  41543e:	out    dx,eax
  41543f:	out    dx,al
  415440:	out    0x3d,eax
  415442:	enter  0x4514,0x9d
  415446:	inc    ecx
  415447:	loope  0x415460
  415449:	icebp  
  41544a:	cmc    
  41544b:	push   edi
  41544c:	test   al,0x86
  41544e:	stc    
  41544f:	shr    DWORD PTR [edi+0x2c],1
  415452:	das    
  415453:	jp     0x4154a6
  415455:	stos   BYTE PTR es:[edi],al
  415456:	dec    edi
  415457:	inc    eax
  415458:	inc    esi
  415459:	adc    eax,0x78547108
  41545e:	add    edx,DWORD PTR [eax-0x34f5a6ae]
  415464:	lahf   
  415465:	xchg   DWORD PTR [ecx-0x2d],esi
  415468:	shl    DWORD PTR [ebx+0x5ac5fa11],0x0
  41546f:	sub    al,0xc4
  415471:	arpl   WORD PTR [ebx-0x209ebaa9],sp
  415477:	add    al,0x1a
  415479:	push   edi
  41547a:	mov    WORD PTR [ebp+ebx*4-0x63],es
  41547e:	and    al,0xa5
  415480:	into   
  415481:	mov    ds:0x626ccd4f,al
  415486:	xlat   BYTE PTR ds:[ebx]
  415487:	jns    0x415497
  415489:	pop    ecx
  41548a:	mov    al,0x4d
  41548c:	add    ch,BYTE PTR ds:0x9707f392
  415492:	into   
  415493:	les    ecx,FWORD PTR [ebp-0x5f6005e8]
  415499:	xchg   esp,eax
  41549a:	mov    ah,0x51
  41549c:	push   ds
  41549d:	sub    ebp,esi
  41549f:	or     cl,dh
  4154a1:	and    DWORD PTR [ebx+ebp*2],esi
  4154a4:	and    ax,dx
  4154a7:	in     eax,dx
  4154a8:	int3   
  4154a9:	das    
  4154aa:	cmovns edi,DWORD PTR [eax-0x652bf8c2]
  4154b1:	js     0x4154cb
  4154b3:	and    BYTE PTR [esi+0x34],0x15
  4154b7:	xchg   ebx,eax
  4154b8:	or     bl,BYTE PTR [edx-0x3b3c336]
  4154be:	xor    ah,BYTE PTR [ebx+0x6bc6de20]
  4154c4:	jno    0x415481
  4154c6:	and    edi,DWORD PTR [ebx]
  4154c8:	dec    ebx
  4154c9:	retf   
  4154ca:	mov    cs,WORD PTR [edi+ebp*8]
  4154cd:	jg     0x4154db
  4154cf:	stos   DWORD PTR es:[edi],eax
  4154d0:	sbb    DWORD PTR [edx+0x79ddfb29],0xba1314de
  4154da:	jmp    0xe7c241d7
  4154df:	sbb    ebp,DWORD PTR [eax+0x4eaba3ad]
  4154e5:	cmp    esp,DWORD PTR [edi+0x24]
  4154e8:	fild   DWORD PTR [eax+0x7a086879]
  4154ee:	es aad 0x14
  4154f1:	pop    edx
  4154f2:	fwait
  4154f3:	xchg   edx,eax
  4154f4:	jne    0x4154d6
  4154f6:	inc    eax
  4154f7:	pusha  
  4154f8:	dec    edx
  4154f9:	lods   al,BYTE PTR ds:[esi]
  4154fa:	xor    BYTE PTR [ecx+0x2],bh
  4154fd:	mov    BYTE PTR [esi-0x1ef3637c],ch
  415503:	repz jae 0x4154e5
  415506:	sub    esp,ecx
  415508:	inc    esi
  415509:	leave  
  41550a:	aam    0xb6
  41550c:	pop    edx
  41550d:	push   esp
  41550f:	(bad)
  415513:	retf   0x264e
  415516:	sbb    DWORD PTR [ecx-0x10c01ea6],edi
  41551c:	pop    ecx
  41551d:	retf   
  41551e:	aaa    
  41551f:	scas   eax,DWORD PTR es:[edi]
  415520:	push   eax
  415521:	push   esp
  415522:	inc    ebx
  415523:	add    DWORD PTR [esp+ebp*1+0x5960c39e],ecx
  41552a:	jp     0x4154dc
  41552c:	xchg   bl,ch
  41552e:	mov    ecx,0xbea852c6
  415533:	xchg   ebx,eax
  415534:	das    
  415535:	inc    ebx
  415536:	into   
  415537:	inc    esp
  415538:	(bad)  
  415539:	enter  0x30c6,0x7e
  41553d:	dec    esp
  41553e:	repnz shl DWORD PTR ds:0x44f33dc2,0xbb
  415546:	mov    esi,cs
  415548:	xchg   esp,eax
  415549:	sub    al,0xa4
  41554b:	mov    edi,0x2d06c5df
  415550:	lock push ecx
  415552:	test   dl,0x10
  415555:	sbb    ecx,esp
  415557:	mov    dl,0xd0
  415559:	ins    DWORD PTR es:[edi],dx
  41555a:	pop    ebp
  41555b:	call   FWORD PTR [edi+0xc32e7b8]
  415561:	dec    esi
  415562:	add    BYTE PTR [ebp-0x16],dh
  415565:	rcl    DWORD PTR [bx+si+0x2adb],cl
  41556a:	int3   
  41556b:	out    dx,eax
  41556c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41556d:	dec    edx
  41556e:	aaa    
  41556f:	mov    bh,0x1c
  415571:	into   
  415572:	mov    ebp,0xbdccd796
  415577:	in     eax,0x96
  415579:	mov    edi,0xb365be1c
  41557e:	retf   0xc73
  415581:	pop    esi
  415582:	push   esi
  415583:	out    dx,eax
  415584:	retf   
  415585:	dec    ebp
  415586:	jge    0x4155d3
  415588:	(bad)  
  41558a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41558b:	outs   dx,BYTE PTR ds:[esi]
  41558c:	mov    ebx,DWORD PTR [edi]
  41558e:	aas    
  41558f:	test   DWORD PTR [ebx],0x6e302fc7
  415595:	mov    dl,0x91
  415597:	xchg   edi,eax
  415598:	mov    ebp,0xaa9c847b
  41559d:	sub    DWORD PTR [esi-0x31],esi
  4155a0:	pop    edx
  4155a1:	push   ecx
  4155a2:	iret   
  4155a3:	outs   dx,BYTE PTR ds:[esi]
  4155a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155a5:	and    dh,bh
  4155a7:	mov    al,ds:0x888cd5ae
  4155ac:	shr    BYTE PTR [eax],0x7a
  4155af:	(bad)  
  4155b0:	iret   
  4155b1:	cmp    eax,0xdcf4585b
  4155b6:	mov    ch,0xb1
  4155b8:	sti    
  4155b9:	sub    eax,0x5cd46425
  4155be:	pop    ebx
  4155bf:	fwait
  4155c0:	xchg   ecx,eax
  4155c1:	and    al,0x62
  4155c3:	and    DWORD PTR [ecx+0x37],edx
  4155c6:	ret    0x1c45
  4155c9:	push   es
  4155ca:	cmp    bl,BYTE PTR [edi+0x67]
  4155cd:	sub    al,0x6a
  4155cf:	cli    
  4155d0:	fild   QWORD PTR [edx]
  4155d2:	mov    ch,0xa5
  4155d4:	aas    
  4155d5:	mov    ebx,0x73f115a
  4155da:	mov    eax,0x6b6b5343
  4155df:	loop   0x4155ad
  4155e1:	sbb    DWORD PTR [eax],0x99a2ffd2
  4155e7:	in     eax,dx
  4155e8:	pushf  
  4155e9:	cmp    al,0x9c
  4155eb:	test   al,0x15
  4155ed:	inc    ebx
  4155ee:	or     BYTE PTR [esp+ecx*4],dl
  4155f1:	pop    esp
  4155f2:	xor    DWORD PTR [edx+edi*8],0x3552eb3f
  4155f9:	sub    eax,0x62a59150
  4155fe:	jl     0x41566f
  415600:	outs   dx,BYTE PTR ds:[esi]
  415601:	lods   al,BYTE PTR ds:[esi]
  415602:	mov    bh,0xf7
  415604:	or     eax,0xaf29545a
  415609:	jo     0x4155d2
  41560b:	enter  0x9b99,0xa5
  41560f:	push   0x28
  415611:	inc    ecx
  415612:	dec    ebp
  415613:	push   0x2dae1cb1
  415618:	cmc    
  415619:	pop    esi
  41561a:	stc    
  41561b:	cmp    edi,esp
  41561d:	loop   0x41561f
  41561f:	cmp    bh,BYTE PTR [edx]
  415621:	mov    ebp,0x25d01a97
  415626:	push   0xc8905afa
  41562b:	inc    edx
  41562c:	daa    
  41562d:	sbb    esi,DWORD PTR [ebx+0x5]
  415630:	aam    0xc9
  415632:	push   edx
  415633:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415634:	das    
  415635:	sbb    eax,0x1a2ef7b2
  41563a:	lea    eax,[ebp-0x58]
  41563d:	pushf  
  41563e:	lea    ecx,[eax+0x76706962]
  415644:	mov    dl,0x14
  415646:	push   edi
  415647:	sbb    edi,DWORD PTR [edi+0x67af70d7]
  41564d:	xchg   esi,eax
  41564e:	cmp    edi,ebp
  415650:	jp     0x415600
  415652:	test   DWORD PTR [esp+edi*8+0x164e29ff],eax
  415659:	lods   al,BYTE PTR ds:[esi]
  41565a:	sub    eax,0x40132fb
  41565f:	outs   dx,BYTE PTR ds:[esi]
  415660:	test   al,0x3c
  415662:	in     eax,0x27
  415664:	(bad)  
  415665:	out    dx,eax
  415666:	int3   
  415667:	ins    BYTE PTR es:[edi],dx
  415668:	or     ecx,DWORD PTR [edi+0x6f30dddf]
  41566e:	push   ecx
  41566f:	pop    ds
  415670:	jle    0x4155f9
  415672:	scas   eax,DWORD PTR es:[edi]
  415673:	jns    0x415622
  415675:	mov    al,0xd1
  415677:	in     al,0xe9
  415679:	repz sbb al,BYTE PTR [esi]
  41567c:	jne    0x4156e4
  41567e:	(bad)  
  41567f:	shl    DWORD PTR ds:0x33de26,1
  415685:	or     bl,al
  415687:	idiv   BYTE PTR [ebx]
  415689:	inc    esi
  41568a:	mov    ch,0xf7
  41568c:	sbb    dl,ch
  41568e:	adc    BYTE PTR [esi-0x7],bh
  415691:	cld    
  415692:	popf   
  415693:	sbb    al,0x8e
  415695:	retf   
  415696:	add    ecx,DWORD PTR [edx-0x48c36bcc]
  41569c:	sbb    esi,DWORD PTR [esi-0x72]
  41569f:	push   ds
  4156a0:	push   0xd1a34ac
  4156a5:	sub    cl,cl
  4156a7:	iret   
  4156a8:	ror    BYTE PTR [ecx+0x26844153],0xbd
  4156af:	cmp    ebp,edi
  4156b1:	dec    eax
  4156b2:	loopne 0x415705
  4156b4:	sbb    bl,BYTE PTR ss:[ecx]
  4156b7:	shl    BYTE PTR [ebx],0x43
  4156ba:	add    ecx,ecx
  4156bc:	mov    ebp,0x3ecebee2
  4156c1:	loop   0x415714
  4156c3:	jns    0x415692
  4156c5:	sub    al,0x8f
  4156c7:	and    edx,esi
  4156c9:	cmp    BYTE PTR [esi+0x33],dl
  4156cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156cd:	xor    cl,dl
  4156cf:	mov    cl,0x5e
  4156d1:	sbb    DWORD PTR [ecx-0x80],0xd2cc8bff
  4156d8:	outs   dx,BYTE PTR ds:[esi]
  4156d9:	cmp    edi,DWORD PTR [edi+0x381a82c0]
  4156df:	add    cl,ah
  4156e1:	inc    esp
  4156e2:	repnz xor al,0xd6
  4156e5:	jb     0x4156fb
  4156e7:	ss fs mov esp,0x266b1dd2
  4156ee:	dec    ebx
  4156ef:	pushf  
  4156f0:	jmp    0xdf3c:0x112119e3
  4156f7:	and    BYTE PTR [ebx+0x155d9137],0x28
  4156fe:	cmp    eax,0xcbb0c693
  415703:	xlat   BYTE PTR ds:[ebx]
  415704:	scas   eax,DWORD PTR es:[edi]
  415705:	mov    ecx,0xb84a4e6c
  41570a:	dec    edi
  41570b:	das    
  41570c:	and    al,0x26
  41570e:	cmc    
  41570f:	xchg   BYTE PTR [edx+0x35],bh
  415712:	shr    DWORD PTR [ecx+0x2f79ad2e],0xfb
  415719:	jmp    0xe41a4c8e
  41571e:	jmp    0xbd44:0xc39f8e7c
  415725:	add    al,0xb7
  415727:	cld    
  415728:	jb     0x4156d3
  41572a:	lods   eax,DWORD PTR ds:[esi]
  41572b:	xchg   DWORD PTR [edi],esp
  41572d:	cmc    
  41572e:	jns    0x4157af
  415730:	and    al,0xf4
  415732:	jne    0x41575d
  415734:	pop    esp
  415735:	ins    BYTE PTR es:[di],dx
  415737:	and    edi,0x607c6685
  41573d:	mov    edi,0xa6ab58df
  415742:	loop   0x4157a6
  415744:	inc    esp
  415745:	popa   
  415746:	adc    al,bh
  415748:	mov    ebp,0xa3557740
  41574d:	inc    esi
  41574e:	mov    esi,0x11335d53
  415753:	sbb    bh,BYTE PTR [ecx+0x1350693b]
  415759:	ds pushf 
  41575b:	jo     0x4156e9
  41575d:	ffree  st(6)
  41575f:	call   0x59ba:0xf1adb85e
  415766:	out    0x62,eax
  415768:	or     DWORD PTR [esi-0x14a3cec1],ecx
  41576e:	jno    0x4156f2
  415770:	mov    ebx,0xbd6923f6
  415775:	sbb    BYTE PTR [esi-0x7505e036],al
  41577b:	into   
  41577c:	iret   
  41577d:	aad    0x1d
  41577f:	jne    0x4157a2
  415781:	rcr    BYTE PTR [edx],cl
  415783:	rcl    DWORD PTR [edx],cl
  415785:	pop    edx
  415786:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415787:	jmp    0x1f78:0xcdf8a47b
  41578e:	pop    ebx
  41578f:	repnz sbb BYTE PTR [ecx],0xe2
  415793:	int    0xdf
  415795:	outs   dx,BYTE PTR ds:[esi]
  415796:	rol    BYTE PTR [esi+0x63],1
  415799:	mov    esi,0x480852d9
  41579e:	dec    ebx
  41579f:	dec    ebp
  4157a0:	out    dx,eax
  4157a1:	fstp   QWORD PTR [edi+eiz*8]
  4157a4:	leave  
  4157a5:	cmc    
  4157a6:	es fdivr st,st(7)
  4157a9:	mov    ecx,0x6b792035
  4157ae:	mov    al,ds:0x10683429
  4157b3:	sbb    DWORD PTR [edi+ecx*2-0x53],ebx
  4157b7:	imul   ecx,DWORD PTR [eax-0x4d36a1d7],0xffffffb3
  4157be:	sub    edi,edx
  4157c0:	pcmpeqw mm5,QWORD PTR [ecx]
  4157c3:	jns    0x41576b
  4157c5:	lods   eax,DWORD PTR ds:[esi]
  4157c6:	push   ds
  4157c7:	jmp    FWORD PTR [ebp-0x3b]
  4157ca:	jo     0x415820
  4157cc:	jnp    0x415764
  4157ce:	mov    WORD PTR [ebx+eiz*4-0x4f37941d],?
  4157d5:	imul   edi,edi,0xcbdc6935
  4157db:	cmp    al,0x60
  4157dd:	and    al,0xe8
  4157df:	outs   dx,DWORD PTR ds:[esi]
  4157e0:	mov    bl,0x60
  4157e2:	int    0xa0
  4157e4:	jno    0x415824
  4157e6:	ja     0x415857
  4157e8:	add    ah,BYTE PTR [edx]
  4157ea:	cs out 0x24,al
  4157ed:	pop    edi
  4157ee:	jmp    0x4157c9
  4157f0:	and    dh,BYTE PTR [ecx+0x2a4d0f88]
  4157f6:	lods   al,BYTE PTR ds:[esi]
  4157f7:	xlat   BYTE PTR ds:[ebx]
  4157f8:	or     al,0xc4
  4157fa:	cwde   
  4157fb:	cwde   
  4157fc:	add    cl,BYTE PTR [ebp-0x556fe48]
  415802:	sbb    ebp,DWORD PTR [eax-0x73d6a840]
  415808:	lock daa 
  41580a:	fprem  
  41580c:	dec    esp
  41580d:	and    BYTE PTR [edi-0x57],dl
  415810:	pop    ds
  415811:	cmp    BYTE PTR [ebp-0x146b77cb],ah
  415817:	imul   edi,DWORD PTR [ebp-0x3c],0xffffffb6
  41581b:	xor    bl,BYTE PTR [ebp+0x3b]
  41581e:	pop    ebx
  41581f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415820:	test   BYTE PTR [edi-0x2c],0xed
  415824:	add    cl,dl
  415826:	aas    
  415827:	pop    es
  415828:	mov    ds:0x239cbd45,al
  41582d:	inc    ebx
  41582e:	push   ecx
  41582f:	mov    cr10,edi
  415833:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415834:	into   
  415835:	fdiv   st(0),st
  415837:	cmp    BYTE PTR [ebx],bh
  415839:	inc    esi
  41583a:	cwde   
  41583b:	inc    esp
  41583c:	or     al,BYTE PTR [edi+0x5d]
  41583f:	aam    0x42
  415841:	mov    ds:0x43be4f5f,eax
  415846:	push   ecx
  415847:	or     BYTE PTR [eax-0x6e],ah
  41584a:	sbb    BYTE PTR [ebp-0x8],bh
  41584d:	jge    0x415859
  41584f:	adc    BYTE PTR [eax],dh
  415851:	outs   dx,BYTE PTR ds:[esi]
  415852:	aad    0x9c
  415854:	cs addr16 inc ebp
  415857:	fld    DWORD PTR [esi-0x7cad8a05]
  41585d:	push   eax
  41585e:	into   
  41585f:	(bad)  
  415860:	outs   dx,DWORD PTR ds:[esi]
  415861:	fwait
  415862:	adc    BYTE PTR [eax+0x4c],bl
  415865:	(bad)  
  415866:	sbb    esi,ebx
  415868:	sub    ecx,DWORD PTR ds:0x59251eb6
  41586e:	mov    ecx,0x63725cf1
  415873:	pop    ebx
  415874:	add    ebp,ecx
  415876:	iret   
  415877:	mov    BYTE PTR [ebp+0x68],0x26
  41587b:	fstp   DWORD PTR [edx-0x48]
  41587e:	(bad)  
  41587f:	or     al,0xef
  415881:	(bad)  
  415882:	or     eax,ebx
  415884:	ins    BYTE PTR es:[edi],dx
  415885:	mov    ax,ds:0x789310cc
  41588b:	dec    ecx
  41588c:	or     DWORD PTR [ebx+0xa],0x3d
  415890:	in     al,0x24
  415892:	xor    esi,DWORD PTR [ebx]
  415894:	retf   
  415895:	loop   0x415906
  415897:	ins    BYTE PTR es:[edi],dx
  415898:	dec    ebp
  415899:	pop    edx
  41589a:	(bad)  [eax]
  41589c:	je     0x41588c
  41589e:	pushf  
  41589f:	ret    0x8bf8
  4158a2:	xlat   BYTE PTR ds:[ebx]
  4158a3:	xchg   esp,eax
  4158a4:	loopne 0x41587f
  4158a6:	in     eax,0x9c
  4158a8:	jp     0x415876
  4158aa:	push   edx
  4158ab:	push   ebp
  4158ac:	jecxz  0x4158be
  4158ae:	bswap  ecx
  4158b0:	test   edx,edx
  4158b2:	aad    0x26
  4158b4:	push   ecx
  4158b5:	es xor al,ah
  4158b8:	mov    dl,BYTE PTR [eax]
  4158ba:	adc    eax,0xd0c8180e
  4158bf:	inc    esp
  4158c0:	push   edx
  4158c1:	mov    ecx,0xdb3585dc
  4158c6:	std    
  4158c7:	rcl    BYTE PTR [eax+0x63],1
  4158ca:	jbe    0x41586c
  4158cc:	call   0x9b5777da
  4158d1:	pop    es
  4158d2:	loop   0x41590b
  4158d4:	and    DWORD PTR [ebp+0x7af4ceff],eax
  4158da:	sbb    al,0x2f
  4158dc:	cmp    DWORD PTR [esi+0x10cde8e9],edi
  4158e2:	cmp    eax,0xdad48775
  4158e7:	push   cs
  4158e8:	xor    ah,ch
  4158ea:	retf   
  4158eb:	test   al,0xc1
  4158ed:	inc    esp
  4158ee:	scas   al,BYTE PTR es:[edi]
  4158ef:	adc    dl,0xc
  4158f2:	enter  0xb180,0x89
  4158f6:	jbe    0x41591e
  4158f8:	dec    esi
  4158f9:	xor    al,0xa9
  4158fb:	adc    dl,BYTE PTR [ecx]
  4158fd:	sub    eax,0x86903f49
  415903:	dec    esp
  415904:	div    BYTE PTR [ecx-0x6f]
  415907:	push   esp
  415908:	cmp    BYTE PTR [esi-0x5758f512],cl
  41590e:	lock test ebx,ebx
  415911:	inc    edi
  415912:	lock sub ebx,DWORD PTR [ecx]
  415915:	shl    BYTE PTR [ecx],cl
  415917:	mov    ebx,DWORD PTR [edi+0x27]
  41591a:	clc    
  41591b:	sub    al,dh
  41591d:	rcr    DWORD PTR [edx],1
  41591f:	push   ebp
  415920:	popf   
  415921:	stos   BYTE PTR es:[edi],al
  415922:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415923:	icebp  
  415924:	out    0x9b,al
  415926:	hlt    
  415927:	mov    ecx,DWORD PTR [ebp+0x34]
  41592a:	jmp    0x1bf9:0xbc82cb16
  415931:	push   esp
  415932:	xchg   ebp,eax
  415933:	stos   DWORD PTR es:[edi],eax
  415934:	test   DWORD PTR [eax-0x4f],0x847c46e
  41593b:	jne    0x4158c0
  41593d:	mov    bh,0xaa
  41593f:	stos   BYTE PTR es:[edi],al
  415940:	pop    ebp
  415941:	in     al,dx
  415942:	sub    ah,dl
  415944:	fmul   st,st(4)
  415946:	mov    al,ds:0xd6d66768
  41594b:	push   ebx
  41594c:	popf   
  41594d:	shl    DWORD PTR [ecx+0x313aa737],1
  415953:	push   ebp
  415954:	mov    bh,0xc2
  415956:	mov    WORD PTR [ecx+0x1f470c68],gs
  41595c:	repnz rol ecx,1
  41595f:	jl     0x41597c
  415961:	xchg   esp,eax
  415962:	pop    edx
  415963:	mov    ds:0xe7bc2620,al
  415968:	pop    es
  415969:	xchg   esi,eax
  41596a:	jo     0x415923
  41596c:	loope  0x4159cd
  41596e:	sbb    ebp,DWORD PTR [edi-0x60cdd80c]
  415974:	out    dx,eax
  415975:	addr16 pushf 
  415977:	shr    DWORD PTR [ebx],cl
  415979:	mov    al,ds:0xbb9a8804
  41597e:	xor    BYTE PTR [ecx+ebx*1],ch
  415981:	ja     0x415931
  415983:	cmc    
  415984:	addr16 xchg ecx,eax
  415986:	scas   al,BYTE PTR es:[edi]
  415987:	mov    esp,0x105095f5
  41598c:	gs cmp al,0x32
  41598f:	and    BYTE PTR [esi-0x26],bh
  415992:	and    eax,DWORD PTR [edi+0x39211a1]
  415998:	repz and eax,0x8e6ea8d8
  41599e:	aam    0x7c
  4159a0:	cmp    eax,0x46fc6999
  4159a5:	es fcomip st,st(2)
  4159a8:	cmp    eax,0x9d622fdf
  4159ad:	push   ebx
  4159ae:	pop    eax
  4159af:	or     BYTE PTR ds:0x1b1f31a3,0x99
  4159b6:	xchg   ebx,eax
  4159b7:	(bad)  
  4159b8:	in     al,dx
  4159b9:	lods   al,BYTE PTR ds:[esi]
  4159ba:	pop    ebp
  4159bb:	(bad)  
  4159bc:	ret    
  4159bd:	aad    0xca
  4159bf:	jns    0x415942
  4159c1:	xlat   BYTE PTR ds:[ebx]
  4159c2:	mov    dl,0x40
  4159c4:	lahf   
  4159c5:	xlat   BYTE PTR ds:[ebx]
  4159c6:	mov    ebp,0x1ced2c6a
  4159cb:	adc    ecx,ebx
  4159cd:	or     BYTE PTR [ebx+ecx*8+0x7a],cl
  4159d1:	pusha  
  4159d2:	daa    
  4159d3:	or     eax,0xa97b0723
  4159d8:	inc    BYTE PTR [ebp+esi*2+0x60b21e53]
  4159df:	or     eax,0x98edf143
  4159e4:	push   esi
  4159e5:	inc    eax
  4159e6:	test   dh,0xac
  4159e9:	in     al,dx
  4159ea:	enter  0xc67e,0x6b
  4159ee:	retf   0x32cf
  4159f1:	aam    0x8e
  4159f3:	dec    edx
  4159f4:	and    eax,0x57945d1f
  4159f9:	dec    eax
  4159fa:	jo     0x4159d5
  4159fc:	cmp    DWORD PTR [edx+eax*4+0x2b427758],eax
  415a03:	arpl   ax,dx
  415a05:	fsubr  DWORD PTR [edx+0x49]
  415a08:	pushf  
  415a09:	test   DWORD PTR [ecx+0x11],edx
  415a0c:	and    ebx,ebx
  415a0e:	jecxz  0x4159e7
  415a10:	xchg   ebp,eax
  415a11:	inc    esi
  415a12:	ror    esp,cl
  415a14:	push   ss
  415a15:	retf   0xe4b0
  415a18:	jl     0x415a04
  415a1a:	xchg   ebp,eax
  415a1b:	jno    0x415a31
  415a1d:	push   0x3d5cbee4
  415a22:	push   ebp
  415a23:	jg     0x415a8c
  415a25:	push   esi
  415a26:	cli    
  415a27:	mov    ds:0x7d68bb6f,eax
  415a2c:	pusha  
  415a2d:	nop
  415a2e:	punpckhwd mm5,QWORD PTR [ebp-0x79]
  415a32:	cs sbb ah,dl
  415a35:	iret   
  415a36:	sub    ebx,ebp
  415a38:	mov    edx,0x9ef45270
  415a3d:	je     0x415a4a
  415a3f:	inc    ecx
  415a40:	sbb    eax,0x26f87f62
  415a45:	mov    ebx,0x6aac5a3d
  415a4a:	ins    DWORD PTR es:[edi],dx
  415a4b:	(bad)
  415a50:	push   ds
  415a51:	mov    dh,dh
  415a53:	jg     0x415ab3
  415a55:	ror    BYTE PTR [esi+0x29958445],cl
  415a5b:	aaa    
  415a5c:	xor    cl,dl
  415a5e:	fwait
  415a5f:	aad    0x6e
  415a61:	test   al,0x4f
  415a63:	lock (bad) 
  415a65:	fcomp  st(1)
  415a67:	xor    ch,cl
  415a69:	sub    al,0x14
  415a6b:	lock xchg DWORD PTR [edx-0x176700fa],ebx
  415a72:	xchg   ebp,eax
  415a73:	add    eax,0xc6e65ac0
  415a78:	lahf   
  415a79:	sub    al,0x58
  415a7b:	mov    ds:0xe5449c48,al
  415a80:	call   0xe00d882a
  415a85:	(bad)  
  415a86:	jecxz  0x415a73
  415a88:	mov    ds:0x13ebeda8,al
  415a8d:	mov    ch,0x1a
  415a8f:	ficomp DWORD PTR [edx+0x46]
  415a92:	xor    al,0x34
  415a95:	int    0xb5
  415a97:	dec    edi
  415a98:	rcr    BYTE PTR [eax+0x44780569],cl
  415a9e:	cmc    
  415a9f:	inc    ebx
  415aa0:	pop    ebp
  415aa1:	push   ecx
  415aa2:	lds    edx,FWORD PTR [edx-0x52]
  415aa5:	mov    dh,0xa2
  415aa7:	sub    al,0x2a
  415aa9:	ficom  DWORD PTR [edi+ebx*4-0x5d]
  415aad:	sbb    eax,0x94f2428b
  415ab2:	inc    edx
  415ab3:	cwde   
  415ab4:	outs   dx,DWORD PTR ds:[esi]
  415ab5:	sbb    BYTE PTR [ecx],cl
  415ab7:	jo     0x415adf
  415ab9:	push   edx
  415aba:	ja     0x415a5c
  415abc:	ret    
  415abd:	mov    ebp,0xe7912fe9
  415ac2:	fistp  DWORD PTR [ebp-0x1b155292]
  415ac8:	fidiv  WORD PTR [eax-0x435e09af]
  415ace:	fidiv  DWORD PTR [edx+0x3c]
  415ad1:	mov    esp,0xb463660c
  415ad6:	fs add eax,0x984b425a
  415adc:	jecxz  0x415a62
  415ade:	lock popf 
  415ae0:	sbb    dl,dh
  415ae2:	jbe    0x415a77
  415ae4:	add    ebx,edi
  415ae6:	ret    0xc320
  415ae9:	add    eax,0x583e38b6
  415aee:	pop    esi
  415aef:	add    DWORD PTR [eax],ecx
  415af1:	mov    eax,ds:0xbe6c2dd3
  415af6:	(bad)  
  415af7:	mov    ebx,0xb679d6e6
  415afc:	mov    eax,0x2bc34127
  415b01:	jmp    0xe94e:0x9c486446
  415b08:	imul   eax,DWORD PTR [ebp+0x65dfd4dc],0xffffffc6
  415b0f:	fild   WORD PTR [eax+0x5f7a94ca]
  415b15:	push   ecx
  415b16:	(bad)  
  415b17:	sub    BYTE PTR fs:[edi+0x104877cc],al
  415b1e:	adc    al,0x8d
  415b20:	aas    
  415b21:	ins    BYTE PTR es:[edi],dx
  415b22:	add    DWORD PTR [esi-0x28a7d3a5],esi
  415b28:	(bad)  
  415b2b:	cmp    BYTE PTR [ecx+0x7c1566ad],al
  415b31:	and    BYTE PTR [edx-0x22],0x6e
  415b35:	jnp    0x415ae6
  415b37:	(bad)  
  415b38:	adc    bl,bh
  415b3a:	pop    esi
  415b3b:	mov    ch,0x65
  415b3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b3e:	mov    DWORD PTR [ebx+0x46],esi
  415b41:	jmp    0x415ae6
  415b43:	aad    0x69
  415b45:	jecxz  0x415b3d
  415b47:	pop    esi
  415b48:	loopne 0x415b67
  415b4a:	jl     0x415b5f
  415b4c:	les    ecx,FWORD PTR [edi]
  415b4e:	jo     0x415b2e
  415b50:	lods   al,BYTE PTR ds:[esi]
  415b51:	mov    ?,WORD PTR [ebp-0x35813fa0]
  415b57:	xor    al,0xf
  415b59:	fadd   st(0),st
  415b5b:	inc    ebp
  415b5c:	test   BYTE PTR [eax+0x4f11c559],dh
  415b62:	mov    BYTE PTR [esi-0x28a36b2c],ch
  415b68:	data16 sahf 
  415b6a:	mov    ch,0xeb
  415b6c:	daa    
  415b6d:	sbb    DWORD PTR [esi+esi*8],esp
  415b70:	jo     0x415b44
  415b72:	repz push ecx
  415b74:	pop    ebx
  415b75:	push   es
  415b76:	xor    al,0xba
  415b78:	jmp    0x2d866ac8
  415b7d:	rcr    BYTE PTR [ecx-0x76],cl
  415b80:	fcom   QWORD PTR [ebx-0x37296289]
  415b86:	mov    al,ds:0x9fe86870
  415b8b:	add    esi,esi
  415b8d:	adc    DWORD PTR [ebp-0x1912d90c],ebx
  415b93:	pop    ebp
  415b94:	xor    DWORD PTR [ebx],eax
  415b96:	jl     0x415b93
  415b98:	jge    0x415b30
  415b9a:	lea    ecx,[ebx+0x7]
  415b9d:	mov    ah,0x3b
  415b9f:	aam    0xde
  415ba1:	das    
  415ba2:	add    al,0x5c
  415ba4:	mov    ch,dh
  415ba6:	and    ebp,DWORD PTR [eax]
  415ba8:	cmp    al,0xf2
  415baa:	cmp    DWORD PTR [esi+0x34cb80c1],0xfffffff2
  415bb1:	popw   ss
  415bb3:	loop   0x415c30
  415bb5:	push   ebx
  415bb6:	add    ecx,DWORD PTR [edi-0x63]
  415bb9:	jno    0x415c2c
  415bbb:	mov    edi,0xeed3d5ab
  415bc0:	cmc    
  415bc1:	push   ebx
  415bc2:	sbb    BYTE PTR [esi+0x1],bh
  415bc5:	dec    ecx
  415bc6:	out    dx,al
  415bc7:	fst    DWORD PTR ds:0x3984cb99
  415bcd:	dec    ebx
  415bce:	adc    eax,0xe562230b
  415bd3:	shrd   DWORD PTR [eax+0x37],edx,0x41
  415bd8:	inc    ebx
  415bd9:	and    dh,BYTE PTR [ebx]
  415bdb:	xchg   DWORD PTR ds:0x90e1aea8,edi
  415be1:	push   ebp
  415be2:	push   esp
  415be3:	add    BYTE PTR [esi+0x2b],ah
  415be6:	pop    ds
  415be7:	sub    eax,0x10ceb223
  415bec:	pop    esi
  415bed:	retf   0x5e8b
  415bf0:	pop    ebx
  415bf1:	(bad)  
  415bf3:	pop    esp
  415bf4:	add    edx,DWORD PTR [ecx+ebp*1+0x148e7d2e]
  415bfb:	shl    BYTE PTR [edx],cl
  415bfd:	pop    esi
  415bfe:	xchg   edi,eax
  415bff:	inc    ebx
  415c00:	sub    ch,BYTE PTR [esi+0x4c0a28bd]
  415c06:	jno    0x415c2e
  415c08:	loope  0x415c2b
  415c0a:	scas   al,BYTE PTR es:[edi]
  415c0b:	adc    DWORD PTR [esi+0x6f],edx
  415c0e:	scas   eax,DWORD PTR es:[edi]
  415c0f:	fs mov esp,0xfefde9be
  415c15:	or     al,BYTE PTR [esi+0x2207d766]
  415c1b:	scas   al,BYTE PTR es:[edi]
  415c1c:	xor    eax,0x2205b7e4
  415c21:	push   esp
  415c22:	adc    ecx,DWORD PTR [edi+0x226f365]
  415c28:	in     eax,0x93
  415c2a:	cmp    al,BYTE PTR [ebx+0x223671fc]
  415c30:	jmp    0xdfe978be
  415c35:	sub    al,0xf4
  415c37:	push   es
  415c38:	mov    ah,0xee
  415c3a:	or     esi,DWORD PTR [ebp-0x55]
  415c3d:	xchg   edx,eax
  415c3e:	stos   DWORD PTR es:[edi],eax
  415c3f:	xchg   edi,eax
  415c40:	jno    0x415c9d
  415c42:	cmp    BYTE PTR [eax+0x3cc22c24],bh
  415c48:	pop    ecx
  415c49:	imul   edx,DWORD PTR [ecx],0x3a21a1c5
  415c4f:	jl     0x415bd8
  415c51:	retf   0xee8c
  415c54:	ins    DWORD PTR es:[edi],dx
  415c55:	cmp    DWORD PTR [edi+0x369c4a07],0xffffffec
  415c5c:	ret    
  415c5d:	cli    
  415c5e:	xchg   ebx,eax
  415c5f:	ror    DWORD PTR [esi+edi*4],1
  415c62:	pop    ecx
  415c63:	cwde   
  415c64:	adc    al,0xa3
  415c66:	sti    
  415c67:	retf   
  415c68:	in     al,dx
  415c69:	mov    eax,ds:0xe575e785
  415c6e:	push   ebp
  415c6f:	fcomi  st,st(4)
  415c71:	rcl    DWORD PTR [esi+0x7225462f],cl
  415c77:	inc    edx
  415c78:	adc    al,0x61
  415c7a:	xor    eax,0x52bfba52
  415c7f:	sbb    bh,BYTE PTR ds:0xee0c6f5
  415c85:	loop   0x415c5e
  415c87:	test   BYTE PTR [eax+esi*4+0x41],dl
  415c8b:	popa   
  415c8c:	sbb    al,0x31
  415c8e:	mov    ecx,0x879fe405
  415c93:	cmp    bh,BYTE PTR [esi+0x6f]
  415c96:	dec    edx
  415c97:	push   0xb
  415c99:	cmp    BYTE PTR [ecx-0x13],ah
  415c9c:	imul   esp,ebp,0x238fdcfa
  415ca2:	mov    ds:0x8c4e8412,al
  415ca7:	push   0x66297db3
  415cac:	pop    ss
  415cad:	retf   0x9a17
  415cb0:	cmp    DWORD PTR [ecx+0x2dc7cd8f],edi
  415cb6:	cmc    
  415cb7:	mov    DWORD PTR [edi-0x38],edi
  415cba:	xor    bh,ah
  415cbc:	into   
  415cbd:	into   
  415cbe:	push   esi
  415cbf:	sbb    BYTE PTR [edx+0x49646e52],ah
  415cc5:	call   0x4afbbac9
  415cca:	ins    DWORD PTR es:[edi],dx
  415ccb:	xor    DWORD PTR [edx],ecx
  415ccd:	arpl   WORD PTR [ecx],ax
  415ccf:	test   al,0x8a
  415cd1:	rol    BYTE PTR ds:0x2ec2f6c6,cl
  415cd7:	ret    0x935e
  415cda:	fadd   QWORD PTR [ebx-0x63]
  415cdd:	fdivp  st(2),st
  415cdf:	sub    ebx,ebp
  415ce1:	call   0xbb82:0xbfbcfefc
  415ce8:	mov    ebx,eax
  415cea:	pop    edx
  415ceb:	inc    esi
  415cec:	pusha  
  415ced:	cmp    al,0x5c
  415cef:	lea    esp,[esi-0x3b]
  415cf2:	xchg   BYTE PTR [esi],bl
  415cf4:	or     esi,DWORD PTR [ecx]
  415cf6:	adc    edi,ebp
  415cf8:	iret   
  415cf9:	sar    DWORD PTR [esi],0xa6
  415cfc:	mov    edx,0xe6ac24ec
  415d01:	pop    esp
  415d02:	push   ebx
  415d03:	mov    ch,0x54
  415d05:	dec    esp
  415d06:	dec    esi
  415d07:	jp     0x415d1a
  415d09:	sar    DWORD PTR [eax-0xf21a25d],0x9a
  415d10:	outs   dx,BYTE PTR ds:[esi]
  415d11:	dec    ebx
  415d12:	js     0x415cfb
  415d14:	xchg   esi,eax
  415d15:	hlt    
  415d16:	mov    esp,0x44b267be
  415d1b:	outs   dx,DWORD PTR fs:[esi]
  415d1d:	add    ch,BYTE PTR [esi-0x564ec716]
  415d23:	mov    DWORD PTR [edx+ebx*2-0x78],0xe49c890b
  415d2b:	call   0x652d50b2
  415d30:	sahf   
  415d31:	jmp    ecx
  415d33:	mov    esp,0x1dff51c4
  415d38:	call   0x6f3a:0xd3ac2a9b
  415d3f:	dec    esp
  415d40:	mov    edx,0x4f61bc9
  415d45:	or     al,0xff
  415d47:	or     eax,0x3f60182a
  415d4c:	xor    edi,DWORD PTR [eax]
  415d4e:	rcr    DWORD PTR ds:0x8bb8d690,0x30
  415d55:	pop    es
  415d56:	mov    ebx,0xe83b10c2
  415d5b:	mov    DWORD PTR [ebp-0xc25c32d],ebp
  415d61:	pop    edi
  415d62:	div    DWORD PTR [ecx+0x17]
  415d65:	clc    
  415d66:	mov    edi,DWORD PTR ds:0x3546500
  415d6c:	xchg   esp,eax
  415d6d:	sbb    ch,cl
  415d6f:	add    esp,ebp
  415d71:	fwait
  415d72:	dec    eax
  415d73:	(bad)  
  415d75:	or     al,BYTE PTR [eax+0x2cd681a8]
  415d7b:	clc    
  415d7c:	mov    gs,WORD PTR [eax]
  415d7e:	push   eax
  415d7f:	cs and bl,cl
  415d82:	in     eax,dx
  415d83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d84:	dec    ecx
  415d85:	push   ebp
  415d86:	xchg   edi,eax
  415d87:	sub    ah,BYTE PTR [edx+0x39]
  415d8a:	dec    eax
  415d8b:	outs   dx,BYTE PTR ds:[esi]
  415d8c:	sub    cl,bh
  415d8e:	mov    al,ds:0x51105829
  415d93:	(bad)  
  415d94:	cli    
  415d95:	loop   0x415da5
  415d97:	repnz out dx,al
  415d99:	and    DWORD PTR [esi-0x7ca2b28c],esp
  415d9f:	jbe    0x415d54
  415da1:	sbb    eax,0x26e14761
  415da6:	(bad)  
  415da7:	(bad)  
  415da8:	les    ecx,FWORD PTR cs:[esi]
  415dab:	aas    
  415dac:	iret   
  415dad:	inc    ebp
  415dae:	xchg   ebx,eax
  415daf:	sub    eax,0x5832ccd5
  415db4:	int3   
  415db5:	rol    edx,0x79
  415db8:	add    ebx,DWORD PTR [ebp-0x77]
  415dbb:	inc    esp
  415dbc:	jp     0x415ded
  415dbe:	pop    ebx
  415dbf:	push   ss
  415dc0:	bound  ecx,QWORD PTR [esi+0x5129a36d]
  415dc6:	pop    esp
  415dc7:	mov    gs,esi
  415dc9:	jmp    0x415df7
  415dcb:	les    esp,FWORD PTR [eax]
  415dcd:	ds jle 0x415e43
  415dd0:	in     al,dx
  415dd1:	and    DWORD PTR [eax+0x200901fd],0xe86aba4e
  415ddb:	pop    ds
  415ddc:	ins    BYTE PTR es:[edi],dx
  415ddd:	jmp    0x415e4b
  415ddf:	mov    esi,0x82a3ce9e
  415de4:	popa   
  415de5:	cs mov ch,0xef
  415de8:	fimul  WORD PTR [esi+0x21a45a0e]
  415dee:	sahf   
  415def:	cld    
  415df0:	nop
  415df1:	dec    esp
  415df2:	fbld   TBYTE PTR [esp]
  415df5:	dec    esp
  415df6:	shl    bh,cl
  415df8:	out    dx,eax
  415df9:	mov    ebx,0x74fc0224
  415dfe:	out    0xe9,al
  415e00:	dec    ebx
  415e01:	xor    DWORD PTR [edi],esi
  415e03:	rcl    DWORD PTR [ecx+0x1112da19],0xec
  415e0a:	ror    DWORD PTR [esi+0x55],1
  415e0d:	call   0xda42:0xd509f882
  415e14:	imul   esp,DWORD PTR [ebp+0x193db773],0x5
  415e1b:	cwde   
  415e1c:	div    BYTE PTR [esi-0x62]
  415e1f:	add    DWORD PTR [esp+esi*4+0x23],eax
  415e23:	adc    esi,DWORD PTR [edx-0x258b25d5]
  415e29:	push   ecx
  415e2a:	out    dx,eax
  415e2b:	std    
  415e2c:	jmp    0x415e50
  415e2e:	cs xchg esp,eax
  415e30:	xor    DWORD PTR [ebx],ecx
  415e32:	je     0x415e35
  415e34:	pop    edx
  415e35:	cmp    edi,eax
  415e37:	xchg   ecx,eax
  415e38:	xor    eax,0x10bf1882
  415e3d:	(bad)  
  415e3e:	test   DWORD PTR [edx],edx
  415e40:	gs (bad) 
  415e43:	js     0x415dc5
  415e45:	mov    ah,0xc3
  415e47:	loope  0x415ddb
  415e49:	dec    edi
  415e4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e4b:	fisubr WORD PTR [edx-0x5235074e]
  415e51:	jbe    0x415e05
  415e53:	ror    ebp,cl
  415e55:	inc    ecx
  415e56:	adc    DWORD PTR ds:0x18f1029f,edi
  415e5c:	mov    bh,0xff
  415e5e:	daa    
  415e5f:	shl    BYTE PTR [ecx],cl
  415e61:	sub    al,0x6b
  415e63:	mov    bh,0x4f
  415e65:	add    ch,BYTE PTR [edx+0x5bba9321]
  415e6b:	arpl   WORD PTR [esi+ecx*1+0x53b705fd],di
  415e72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e73:	or     DWORD PTR [ecx],eax
  415e75:	mov    ah,0x5b
  415e77:	test   BYTE PTR [ebp+eiz*4+0x6a],cl
  415e7b:	int    0xdb
  415e7d:	ja     0x415e00
  415e7f:	jle    0x415ec4
  415e81:	ja     0x415e85
  415e83:	inc    edi
  415e84:	rep outs dx,DWORD PTR ds:[esi]
  415e86:	repnz imul eax,DWORD PTR [edi],0xffffffe6
  415e8a:	daa    
  415e8b:	inc    edx
  415e8c:	mov    esp,0xa1682f31
  415e91:	xor    BYTE PTR [edi],ch
  415e93:	xchg   BYTE PTR [eax],al
  415e95:	or     eax,0xeca62960
  415e9a:	jmp    0x415f09
  415e9c:	push   0x2b1d6252
  415ea1:	push   ds
  415ea2:	cmp    eax,0xabcfdd3
  415ea8:	add    BYTE PTR [ecx+0x5c],cl
  415eab:	cli    
  415eac:	fwait
  415ead:	jb     0x415f0e
  415eaf:	sbb    BYTE PTR [edx+0xaef100e],al
  415eb5:	add    edi,DWORD PTR [ebx]
  415eb7:	inc    ebx
  415eb8:	or     BYTE PTR [ebx-0xa],dl
  415ebb:	call   0x105bd00c
  415ec0:	sbb    al,0x5c
  415ec2:	cmp    DWORD PTR [edx+0x42],esp
  415ec5:	xchg   edi,eax
  415ec6:	ss clc 
  415ec8:	(bad)  
  415ec9:	cmc    
  415eca:	mov    DWORD PTR [esi-0x4e],eax
  415ecd:	add    al,0x99
  415ecf:	(bad)  
  415ed0:	cmp    BYTE PTR [ebp+0xdc2256f],bh
  415ed6:	stos   BYTE PTR es:[edi],al
  415ed7:	add    al,BYTE PTR [ecx-0x683c2c8c]
  415edd:	(bad)  
  415ede:	mov    al,ds:0x8125cc40
  415ee3:	fcomp  QWORD PTR [ebp+0x573d6b37]
  415ee9:	add    DWORD PTR ds:0x317cb9c3,ebp
  415eef:	popa   
  415ef0:	xchg   esi,eax
  415ef1:	dec    esi
  415ef2:	jg     0x415f1b
  415ef4:	dec    ecx
  415ef5:	sub    dh,ch
  415ef7:	neg    edx
  415ef9:	loope  0x415ea8
  415efb:	adc    BYTE PTR [ebp+0x5],ch
  415efe:	clc    
  415eff:	jnp    0x415ef9
  415f01:	xchg   esp,eax
  415f02:	xchg   edx,eax
  415f03:	pop    ebp
  415f04:	mov    bh,0xa5
  415f06:	into   
  415f07:	push   ds
  415f08:	in     al,0xb1
  415f0a:	loopne 0x415f0d
  415f0c:	mov    WORD PTR [edx],fs
  415f0e:	jg     0x415f38
  415f10:	shl    DWORD PTR [edi+esi*4+0x50],cl
  415f14:	dec    ecx
  415f15:	push   edx
  415f16:	push   ebx
  415f17:	cli    
  415f18:	stc    
  415f19:	add    al,0xbd
  415f1b:	in     al,dx
  415f1c:	shl    edi,cl
  415f1e:	cmp    ah,bl
  415f20:	or     BYTE PTR [edx+eax*1-0x788d9d09],ah
  415f27:	out    0x81,eax
  415f29:	or     DWORD PTR [ebx+ebx*2],0xfffffffb
  415f2d:	nop
  415f2e:	jle    0x415f2c
  415f30:	test   eax,0x68cf100c
  415f35:	sub    ah,BYTE PTR [ebp+0x0]
  415f38:	sbb    BYTE PTR [edi+0x7d3a7380],bh
  415f3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f3f:	inc    edx
  415f40:	jmp    FWORD PTR [edx-0x265059b6]
  415f46:	jmp    0x415f16
  415f48:	mov    BYTE PTR ds:0x1c786d03,bh
  415f4e:	cmp    DWORD PTR [edi+0x3b],esi
  415f51:	repnz ds icebp 
  415f54:	cli    
  415f55:	adc    DWORD PTR [ecx+0x4cad4f4e],ecx
  415f5b:	add    bh,ah
  415f5d:	mov    ebx,0xbf62d058
  415f62:	call   0xea68bd61
  415f67:	aad    0x4e
  415f69:	mul    BYTE PTR [eax+0x2]
  415f6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f6d:	xor    edi,DWORD PTR [esi]
  415f6f:	mov    ch,0xe2
  415f71:	add    DWORD PTR [ebp-0x4880363a],eax
  415f77:	call   0x1a59:0xa0dc2064
  415f7e:	jo     0x415f18
  415f80:	xchg   ecx,eax
  415f81:	mov    esi,0x3155b46b
  415f86:	push   ecx
  415f87:	ja     0x415f8f
  415f89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f8a:	push   0xffffffbd
  415f8c:	test   al,0x9f
  415f8e:	adc    BYTE PTR [esi-0x1c],ch
  415f91:	and    al,0xcf
  415f93:	lods   eax,DWORD PTR ds:[esi]
  415f94:	fisub  DWORD PTR [edi+0x60bb9f3a]
  415f9a:	push   ebp
  415f9b:	mov    DWORD PTR ds:0x237aaf29,esp
  415fa1:	imul   esp,DWORD PTR [edx+0x4f],0x7a
  415fa5:	stos   BYTE PTR es:[edi],al
  415fa6:	pop    es
  415fa7:	inc    edi
  415fa8:	mov    ecx,0xa3e0d93f
  415fad:	into   
  415fae:	or     ecx,DWORD PTR [esi-0x6a739fd1]
  415fb4:	xchg   esi,eax
  415fb5:	push   esp
  415fb6:	mov    eax,ds:0xf5be0bd1
  415fbb:	xchg   edi,eax
  415fbc:	fist   DWORD PTR [ebx+0x5a]
  415fbf:	mov    ebx,DWORD PTR [ecx+0x63cce7ee]
  415fc5:	addr16 int 0x70
  415fc8:	mov    edx,0x6d1b69eb
  415fcd:	gs aam 0x5c
  415fd0:	(bad)  [eax+0x1470bb98]
  415fd6:	cli    
  415fd7:	adc    BYTE PTR [edx-0x3a],0x1a
  415fdb:	arpl   bp,sp
  415fdd:	jne    0x41600a
  415fdf:	in     eax,0xcb
  415fe1:	gs das 
  415fe3:	xor    ebp,ebp
  415fe5:	jno    0x415f6e
  415fe7:	sub    eax,0x2844fb1b
  415fec:	or     BYTE PTR [edx],0x0
  415fef:	push   cs
  415ff0:	lea    edi,[edx+0x59812b7f]
  415ff6:	imul   esp,DWORD PTR [eax-0x4],0x17c13c9e
  415ffd:	fisub  WORD PTR [ebp+0x68cedd5d]
  416003:	push   edi
  416004:	cmp    BYTE PTR [eax-0x589d33fe],bl
  41600a:	add    DWORD PTR [esi-0x2c],0xc970b7e3
  416011:	jl     0x416086
  416013:	xor    ah,BYTE PTR [ebx]
  416015:	shl    DWORD PTR [ecx-0x6d],1
  416018:	add    BYTE PTR [edi-0x5],bh
  41601b:	imul   esp,DWORD PTR ss:[edi],0xfffffff9
  41601f:	pushf  
  416020:	push   esp
  416021:	mov    dh,ch
  416023:	push   edx
  416024:	and    al,BYTE PTR [ebx-0x14]
  416027:	or     ebx,ebx
  416029:	cmp    esi,0x1e62c971
  41602f:	sti    
  416030:	stc    
  416031:	sub    al,0xdc
  416033:	inc    ebx
  416034:	hlt    
  416035:	lds    edi,FWORD PTR [edi+0x4e]
  416038:	(bad)  
  416039:	std    
  41603a:	loop   0x416074
  41603c:	adc    DWORD PTR [ecx],edx
  41603e:	cmp    DWORD PTR [ebx+0x55abd576],eax
  416044:	sub    bl,BYTE PTR [eax]
  416046:	jge    0x415fdc
  416048:	add    al,0xa6
  41604a:	mov    cl,0x5d
  41604c:	push   ds
  41604d:	sahf   
  41604e:	aad    0x27
  416050:	js     0x416018
  416052:	sahf   
  416053:	rcr    ch,0xad
  416056:	jp     0x41605e
  416058:	cmp    DWORD PTR [esi+0xf3071f3],ebp
  41605e:	fs in  eax,0xc1
  416061:	or     DWORD PTR [eax+esi*1+0x349758dd],esi
  416068:	dec    edx
  416069:	sbb    ch,0xfc
  41606c:	add    BYTE PTR [ecx+0x5b],ch
  41606f:	sub    DWORD PTR [ebx],ecx
  416071:	inc    esp
  416072:	jmp    0x4160e6
  416074:	les    ebp,FWORD PTR [esi+0x12]
  416077:	xor    DWORD PTR [edx],edi
  416079:	cdq    
  41607a:	dec    esp
  41607b:	jbe    0x416024
  41607d:	and    edi,esi
  41607f:	inc    ebp
  416080:	les    edx,FWORD PTR [edx-0x6d5cda0d]
  416086:	push   0xffffffc5
  416088:	mov    BYTE PTR [esi-0x5f],dh
  41608b:	cs (bad) 
  41608d:	lods   al,BYTE PTR ds:[esi]
  41608e:	inc    cl
  416090:	adc    esi,DWORD PTR [edx+0x67]
  416093:	adc    al,0xc5
  416095:	dec    edi
  416096:	add    al,0xde
  416098:	sbb    eax,0xc690e261
  41609d:	pop    ss
  41609e:	and    eax,0x4ccb420b
  4160a3:	jns    0x416029
  4160a5:	sub    dh,dh
  4160a7:	repz (bad) 
  4160a9:	pop    ebp
  4160aa:	ss inc esi
  4160ac:	push   cs
  4160ad:	sbb    BYTE PTR [ebx],bh
  4160af:	dec    eax
  4160b0:	cmp    al,0x42
  4160b2:	pop    esi
  4160b3:	pop    ss
  4160b4:	mov    al,ds:0xc37c5e06
  4160b9:	shr    BYTE PTR [edi],0xd7
  4160bc:	jp     0x4160cb
  4160be:	push   cs
  4160bf:	in     al,0x3d
  4160c1:	xchg   DWORD PTR [eax+eiz*1+0x3e],ecx
  4160c5:	push   edi
  4160c6:	cmc    
  4160c7:	fs jmp 0x41613a
  4160ca:	sub    DWORD PTR [ebx],esi
  4160cc:	xchg   BYTE PTR [edx],al
  4160ce:	or     DWORD PTR [eax],0x5f
  4160d1:	leave  
  4160d2:	jle    0x4160d5
  4160d4:	xchg   BYTE PTR [edx+0x2b3641e5],cl
  4160da:	loopne 0x41608b
  4160dc:	jmp    FWORD PTR [ebx-0x29ae8f6e]
  4160e2:	cmp    al,0xd7
  4160e4:	fdivr  DWORD PTR [edi]
  4160e6:	ds or  ebp,esi
  4160e9:	push   DWORD PTR [eax+ebx*2-0xa]
  4160ed:	std    
  4160ee:	lods   eax,DWORD PTR ds:[esi]
  4160ef:	pushf  
  4160f0:	scas   eax,DWORD PTR es:[edi]
  4160f1:	loope  0x41607e
  4160f3:	jl     0x416168
  4160f5:	test   ecx,eax
  4160f7:	pop    eax
  4160f8:	sub    ax,0x5a42
  4160fc:	(bad)  
  4160fd:	xor    dh,BYTE PTR [ebx-0x29]
  416100:	add    DWORD PTR [ebx],edi
  416102:	retf   0xb694
  416105:	test   eax,0xf0548c6
  41610a:	dec    eax
  41610b:	imul   esp,DWORD PTR [edx],0x3c
  41610e:	imul   esi,DWORD PTR [ebp+0x7a2ac54e],0xc063aa49
  416118:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416119:	xchg   DWORD PTR [edi+0x53],edx
  41611c:	xchg   esp,eax
  41611d:	jmp    FWORD PTR ds:0xaf8efa30
  416124:	into   
  416125:	test   cl,0x5d
  416128:	xor    esi,DWORD PTR [eax]
  41612a:	bound  eax,QWORD PTR [ebx+0x53]
  41612d:	mov    ds:0xfbfac46e,eax
  416132:	fwait
  416133:	(bad)  
  416134:	push   edi
  416135:	mov    al,BYTE PTR [eax-0x8095cb9]
  41613b:	not    BYTE PTR [ebx+0x6376099e]
  416141:	jno    0x41614d
  416143:	addr16 ror ebx,cl
  416146:	ret    0xe61
  416149:	pop    es
  41614a:	ja     0x4160e9
  41614c:	call   DWORD PTR [edi]
  41614e:	mov    eax,ds:0x78e3cc63
  416153:	popf   
  416154:	clc    
  416155:	pop    eax
  416156:	fwait
  416157:	(bad)  
  416158:	sbb    ah,BYTE PTR [edi]
  41615a:	loop   0x416119
  41615c:	rcr    esi,cl
  41615e:	mov    gs,WORD PTR [ecx+0x27]
  416161:	dec    ebx
  416162:	or     ch,dl
  416164:	not    BYTE PTR [ecx]
  416166:	push   0x72
  416168:	shl    DWORD PTR [eax+ecx*1],1
  41616b:	mov    dh,0xda
  41616d:	ss ds stos DWORD PTR es:[edi],eax
  416170:	fld    QWORD PTR [edx]
  416172:	aaa    
  416173:	pop    edi
  416174:	sbb    BYTE PTR [esi-0x13df4694],bl
  41617a:	sbb    BYTE PTR [eax-0x7efa1f00],bl
  416180:	pop    esi
  416181:	imul   edx,DWORD PTR [edi+0x2f4b0ff7],0xa28e8a83
  41618b:	or     DWORD PTR [ebp-0x6c54fdd9],0xffffff9c
  416192:	mov    ch,0x75
  416194:	loope  0x416146
  416196:	adc    BYTE PTR [edx],ch
  416198:	nop
  416199:	push   ecx
  41619a:	outs   dx,BYTE PTR ds:[esi]
  41619b:	mov    dh,0x69
  41619d:	xchg   ebp,eax
  41619e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41619f:	pop    esi
  4161a0:	aam    0xa
  4161a2:	clc    
  4161a3:	shr    DWORD PTR [esi+ecx*8-0x13],0xbe
  4161a8:	or     esi,DWORD PTR [edi-0x24ecd8c8]
  4161ae:	int3   
  4161af:	in     eax,0xab
  4161b1:	inc    esp
  4161b2:	jge    0x416189
  4161b4:	loop   0x4161d9
  4161b6:	scas   eax,DWORD PTR es:[edi]
  4161b7:	cld    
  4161b8:	mov    eax,0x787a2c2a
  4161bd:	push   eax
  4161be:	inc    edi
  4161bf:	out    0xf4,eax
  4161c1:	imul   ebx,DWORD PTR [esi-0x52c88d8d],0xffffffb4
  4161c8:	mov    ebx,0x3d756566
  4161cd:	fwait
  4161ce:	popa   
  4161cf:	sub    eax,0xafa1e2bf
  4161d4:	out    dx,al
  4161d5:	dec    ebp
  4161d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161d7:	push   ebx
  4161d8:	jno    0x416216
  4161da:	xchg   ecx,eax
  4161db:	mov    ch,0x98
  4161dd:	lods   eax,DWORD PTR ds:[si]
  4161df:	fadd   DWORD PTR [ebp-0x29e3033]
  4161e5:	ror    BYTE PTR [ebx],0xa2
  4161e8:	sar    DWORD PTR ds:0xd05b4739,1
  4161ee:	jl     0x41622c
  4161f0:	(bad)  
  4161f1:	out    0x67,al
  4161f3:	into   
  4161f4:	rcr    bl,0xd2
  4161f7:	jg     0x416196
  4161f9:	cmp    BYTE PTR [eax],al
  4161fb:	mov    WORD PTR [edx],?
  4161fd:	imul   edx,DWORD PTR [edx-0x2c3ca6cd],0xc6c42240
  416207:	pop    ecx
  416208:	in     al,0x51
  41620a:	push   es
  41620b:	adc    ch,BYTE PTR [edi+0x16]
  41620e:	adc    ecx,DWORD PTR [eax+0x5d]
  416211:	in     eax,0x39
  416213:	pushf  
  416214:	xlat   BYTE PTR ds:[ebx]
  416215:	xchg   BYTE PTR [eax-0x56348a41],dh
  41621b:	jp     0x4161da
  41621d:	or     eax,0xdfa4c8dc
  416222:	sbb    eax,0xef610091
  416227:	and    BYTE PTR [edi],dl
  416229:	mov    eax,ds:0x22235b35
  41622e:	popa   
  41622f:	repz ror BYTE PTR [edi-0x2b],1
  416233:	ret    0x835
  416236:	dec    BYTE PTR [edx+eax*4-0x71974d14]
  41623d:	or     eax,0x19c4d9de
  416242:	dec    ebp
  416243:	gs retf 0x3dd9
  416247:	mov    ch,0xe5
  416249:	add    edi,esp
  41624b:	and    al,0x18
  41624d:	push   ds
  41624e:	jmp    0x8a5c:0x7ed44440
  416255:	ins    DWORD PTR es:[edi],dx
  416256:	push   ds
  416257:	aam    0x40
  416259:	dec    esi
  41625a:	xlat   BYTE PTR ds:[ebx]
  41625b:	sbb    eax,0x47d07951
  416260:	or     al,BYTE PTR [ecx-0x25]
  416263:	icebp  
  416264:	pop    ss
  416265:	mov    ch,0x3d
  416267:	cdq    
  416268:	pop    ds
  416269:	lods   al,BYTE PTR ds:[esi]
  41626a:	or     BYTE PTR [ebx],al
  41626c:	pop    edx
  41626d:	hlt    
  41626e:	or     eax,0x64
  416271:	adc    al,0xe9
  416273:	inc    ebx
  416274:	es stc 
  416276:	push   ss
  416277:	cmc    
  416278:	(bad)  
  416279:	imul   ebp,DWORD PTR [ecx+0x12],0x2e
  41627d:	mov    dl,0xa5
  41627f:	xchg   ebp,eax
  416280:	cwde   
  416281:	inc    esi
  416282:	sub    BYTE PTR [eax],0x61
  416285:	pop    ebx
  416286:	inc    edx
  416287:	out    0x67,eax
  416289:	mov    al,ds:0x9ed9f2a0
  41628e:	shr    DWORD PTR [ebx+0x1e],1
  416291:	fstp   QWORD PTR [ebp+0x2c]
  416294:	xor    al,0xc6
  416296:	fadd   QWORD PTR [esi]
  416298:	stos   DWORD PTR es:[edi],eax
  416299:	pop    ecx
  41629a:	dec    esp
  41629b:	sub    esi,DWORD PTR [edx]
  41629d:	cld    
  41629e:	pop    ss
  41629f:	cdq    
  4162a0:	iret   
  4162a1:	mov    eax,ds:0x5d76f70a
  4162a6:	sbb    DWORD PTR [ebp+eax*2+0x61],edi
  4162aa:	test   BYTE PTR [edi],ah
  4162ac:	add    edx,edx
  4162ae:	sti    
  4162af:	shl    bh,cl
  4162b1:	loop   0x416301
  4162b3:	adc    BYTE PTR [edi+eax*4+0x1e6100cf],dl
  4162ba:	jmp    0xa9175b81
  4162bf:	in     al,dx
  4162c0:	mov    esp,0xa2755a13
  4162c5:	repnz sub DWORD PTR [edx],esp
  4162c8:	jae    0x416334
  4162ca:	mov    ah,0xca
  4162cc:	fdiv   QWORD PTR [edx-0x60]
  4162cf:	adc    BYTE PTR [edi],dl
  4162d1:	jae    0x4162c5
  4162d3:	mov    BYTE PTR [ebx+0x3061f1a8],0xa
  4162da:	lds    ebp,FWORD PTR [eax-0x5d8cec03]
  4162e0:	jle    0x416322
  4162e2:	stc    
  4162e3:	pop    ss
  4162e4:	pushw  ds
  4162e6:	sub    eax,0xf706aeb6
  4162eb:	dec    edx
  4162ec:	push   ds
  4162ed:	scas   al,BYTE PTR es:[edi]
  4162ee:	into   
  4162ef:	(bad)  
  4162f0:	retf   0x22aa
  4162f3:	(bad)  
  4162f4:	das    
  4162f5:	fstp   DWORD PTR [ebx-0x4d]
  4162f8:	dec    edi
  4162f9:	inc    edx
  4162fa:	push   0x5088755c
  4162ff:	pop    ebp
  416300:	nop
  416301:	icebp  
  416302:	cwde   
  416303:	jl     0x4162f0
  416305:	push   0x5aefb042
  41630a:	dec    eax
  41630b:	push   cs
  41630c:	enter  0xe357,0xc5
  416310:	aad    0xa6
  416312:	mov    BYTE PTR [esp+edi*8+0x2af0cdbc],cl
  416319:	fs sbb al,0x71
  41631c:	enter  0x4593,0xd8
  416320:	jmp    0xa129:0xb756c40b
  416327:	aad    0xbe
  416329:	daa    
  41632a:	xchg   esp,eax
  41632b:	in     eax,dx
  41632c:	inc    ebx
  41632d:	add    ch,BYTE PTR [edi]
  41632f:	gs jmp 0x416384
  416332:	sbb    ch,BYTE PTR [edx-0x5fb0e675]
  416338:	mov    esp,DWORD PTR [ecx+0x553c973f]
  41633e:	jecxz  0x4162ea
  416340:	mov    ecx,0x574da609
  416345:	and    DWORD PTR [esp+ecx*8+0x4c38716d],esp
  41634c:	imul   ecx,DWORD PTR [eax],0x274700b4
  416352:	sbb    eax,0xd58b9112
  416357:	adc    dh,BYTE PTR [eax]
  416359:	dec    esp
  41635a:	in     al,0x69
  41635c:	enter  0xdf92,0xd
  416360:	xchg   esp,eax
  416361:	lea    ebx,es:[ecx-0x15030c83]
  416368:	cmc    
  416369:	push   ss
  41636a:	mov    eax,0x6927a7fb
  41636f:	sub    al,0x98
  416371:	push   ebp
  416372:	jne    0x41631e
  416374:	push   ecx
  416375:	fst    QWORD PTR [edi]
  416377:	ja     0x4163cc
  416379:	fist   WORD PTR [ebx+0x61b81c4e]
  41637f:	(bad)  
  416380:	stc    
  416381:	(bad)  
  416382:	fsub   DWORD PTR [ecx+edx*2+0x7]
  416386:	mov    bl,0x61
  416388:	push   eax
  416389:	jno    0x41634f
  41638b:	lahf   
  41638c:	int3   
  41638d:	xchg   ecx,eax
  41638e:	inc    edi
  41638f:	or     eax,0xe03a9c16
  416394:	cmp    al,0x7f
  416396:	lods   eax,DWORD PTR ds:[esi]
  416397:	(bad)  
  416399:	fidivr WORD PTR [edx]
  41639b:	jmp    0x4971:0x5d2063ba
  4163a2:	call   0x64d37307
  4163a7:	cmp    eax,0xc1e51ec5
  4163ac:	push   0x94ed45ee
  4163b1:	mov    ecx,0xc1f3d88d
  4163b6:	sbb    al,0xa1
  4163b8:	and    al,0xf8
  4163ba:	out    dx,al
  4163bb:	xor    BYTE PTR [ebp-0x32],dh
  4163be:	test   DWORD PTR [ebp+0x4a],edi
  4163c1:	in     eax,0x90
  4163c3:	retf   0x3dd6
  4163c6:	clc    
  4163c7:	add    al,0x4
  4163c9:	push   0xe232d7dc
  4163ce:	adc    ah,cl
  4163d0:	jae    0x4163f9
  4163d2:	and    edi,DWORD PTR [esi]
  4163d4:	mov    edi,DWORD PTR [si+0x260d]
  4163d9:	push   cs
  4163da:	fiadd  WORD PTR [esi-0x51]
  4163dd:	mov    ebp,0xc4a4c51
  4163e2:	sub    ecx,DWORD PTR [ebp+0x74]
  4163e5:	inc    esi
  4163e6:	mov    ch,0xf8
  4163e8:	loopne 0x416426
  4163ea:	push   ds
  4163eb:	pop    es
  4163ec:	jmp    0x41638d
  4163ee:	pushf  
  4163ef:	repnz mov bh,0x2c
  4163f2:	stc    
  4163f3:	sbb    al,BYTE PTR [eax-0x78c7639d]
  4163f9:	jmp    0x4163b1
  4163fb:	cs stos BYTE PTR es:[edi],al
  4163fd:	adc    al,0xa2
  4163ff:	jmp    0x158b82be
  416404:	adc    al,0xf2
  416406:	lea    esi,[edi-0x6c]
  416409:	mov    esi,0x4f919251
  41640e:	sbb    BYTE PTR [ebx-0x29],bl
  416411:	sbb    eax,0x7e9fac9
  416416:	jmp    0xd799:0x629fe58c
  41641d:	xchg   DWORD PTR [esi+0x50d9ff36],ecx
  416423:	ret    
  416424:	fwait
  416425:	or     edi,DWORD PTR [edi+0x61c35904]
  41642b:	inc    ebp
  41642c:	cmp    bh,BYTE PTR [esi]
  41642e:	test   al,0x7c
  416430:	jge    0x416449
  416432:	xor    DWORD PTR [eax+0x8],eax
  416435:	retf   0x5fd6
  416438:	or     eax,0x2595a2e1
  41643d:	mov    esi,0x6976a35d
  416442:	das    
  416443:	push   cs
  416444:	test   DWORD PTR [edx],edi
  416446:	into   
  416447:	cld    
  416448:	or     BYTE PTR [edi],bh
  41644a:	jg     0x416411
  41644c:	sub    esi,edi
  41644e:	test   edi,eax
  416450:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416451:	data16 or bh,BYTE PTR [edx+0x70]
  416455:	(bad)  
  416456:	jnp    0x41641e
  416458:	dec    eax
  416459:	sub    ah,dl
  41645b:	mov    bl,0xfb
  41645d:	loope  0x41647d
  41645f:	mov    edi,0x89d89fc3
  416464:	sub    edi,DWORD PTR [ebx+0x46]
  416467:	lahf   
  416468:	adc    dl,BYTE PTR ds:0x98412b5e
  41646e:	out    0xc8,eax
  416470:	adc    DWORD PTR [edx+edi*2-0x54],eax
  416474:	mov    ch,0x92
  416476:	cld    
  416477:	mov    DWORD PTR [ebx+0x2ac39448],esp
  41647d:	jp     0x416473
  41647f:	call   0xb076cf29
  416484:	fidiv  WORD PTR [edi]
  416486:	outs   dx,DWORD PTR ds:[esi]
  416487:	icebp  
  416488:	and    al,BYTE PTR [eax]
  41648a:	jmp    0x7b816f50
  41648f:	(bad)  [ebx]
  416491:	xchg   esi,eax
  416492:	adc    DWORD PTR [ecx-0x11],ecx
  416495:	sub    edx,esp
  416497:	or     BYTE PTR [ebx+0x66019b83],ch
  41649d:	sub    BYTE PTR [esi+0x5a],cl
  4164a0:	dec    ebp
  4164a1:	jae    0x416519
  4164a3:	popf   
  4164a4:	xor    DWORD PTR [ecx-0x291ed8e4],ebx
  4164aa:	push   ds
  4164ab:	inc    eax
  4164ac:	pop    ds
  4164ad:	repz push dx
  4164b0:	sbb    BYTE PTR [edx-0x7c906687],ah
  4164b6:	ds jle 0x4164d7
  4164b9:	xlat   BYTE PTR ds:[ebx]
  4164ba:	mov    ds:0xe5bee74c,eax
  4164bf:	push   ss
  4164c0:	mov    esi,0xd3168792
  4164c5:	jecxz  0x4164bb
  4164c7:	sub    eax,0x881e7b84
  4164cc:	scas   al,BYTE PTR es:[edi]
  4164cd:	leave  
  4164ce:	rcr    esp,cl
  4164d0:	pop    ds
  4164d1:	shl    DWORD PTR [ebp+0x13],1
  4164d4:	repz repz jg 0x4164de
  4164d8:	aas    
  4164d9:	xlat   BYTE PTR ds:[ebx]
  4164da:	or     al,0xe1
  4164dc:	cmp    eax,0xf8eac295
  4164e1:	xchg   ecx,eax
  4164e2:	bound  eax,QWORD PTR [esi]
  4164e4:	sub    ah,BYTE PTR [ebx]
  4164e6:	pop    ds
  4164e7:	and    DWORD PTR [edx],edx
  4164e9:	jle    0x4164bb
  4164eb:	pop    ebp
  4164ec:	aam    0xaa
  4164ee:	dec    ebp
  4164ef:	retw   
  4164f1:	dec    eax
  4164f2:	scas   eax,DWORD PTR es:[edi]
  4164f3:	push   ebp
  4164f4:	xchg   DWORD PTR es:[esi+eiz*4],ebx
  4164f8:	push   ebx
  4164f9:	sub    DWORD PTR [ebx+0x1],0xbb2d37a
  416500:	lds    ebx,FWORD PTR [esi]
  416502:	jnp    0x41657b
  416504:	push   esp
  416505:	xor    bl,ch
  416507:	or     BYTE PTR [eax-0x5779e8],cl
  41650d:	xor    cl,BYTE PTR [ecx]
  41650f:	push   edi
  416510:	sub    eax,0x8d2d2e0b
  416515:	cmp    edi,ecx
  416517:	sar    DWORD PTR cs:[ebx],1
  41651a:	ss in  eax,0x6d
  41651d:	ds dec esi
  41651f:	(bad)  [ecx+edi*8+0x75e64eb1]
  416526:	inc    ebp
  416527:	mov    bl,0x81
  416529:	ins    BYTE PTR es:[edi],dx
  41652a:	out    dx,eax
  41652b:	sbb    BYTE PTR [edx-0x42],ch
  41652e:	xor    ah,cl
  416530:	mov    ecx,0x338f36ce
  416535:	inc    edx
  416536:	retf   0xed08
  416539:	fld    TBYTE PTR [esi+0x6f]
  41653c:	call   0x8ea4:0xa7af3bf3
  416543:	adc    bh,ah
  416545:	pop    edi
  416546:	and    DWORD PTR [edi+0x67bc43c9],ecx
  41654c:	ins    DWORD PTR es:[edi],dx
  41654d:	push   ebp
  41654e:	mov    cl,0xda
  416550:	pop    eax
  416551:	(bad)  
  416552:	ficomp WORD PTR es:[edx+0xfe38d16]
  416559:	mov    ?,WORD PTR [eax]
  41655b:	inc    eax
  41655c:	fbld   TBYTE PTR [ebx+0x1]
  41655f:	push   cs
  416560:	mov    eax,0xe6048483
  416565:	scas   al,BYTE PTR es:[edi]
  416566:	push   esp
  416567:	(bad)  [eax-0x29]
  41656a:	lock inc eax
  41656c:	pop    esp
  41656d:	adc    eax,0xf95647bc
  416572:	mov    dl,0xfb
  416574:	repz aas 
  416576:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416577:	ret    0x20ba
  41657a:	stos   DWORD PTR es:[edi],eax
  41657b:	out    dx,eax
  41657c:	(bad)  
  41657d:	(bad)  
  41657e:	mov    al,ds:0x4736eb59
  416583:	repz mov ch,0x77
  416586:	bound  eax,QWORD PTR [edx-0x7f]
  416589:	and    DWORD PTR [ecx-0x9],0xe1ac93c
  416590:	retf   0xaba2
  416593:	adc    ecx,DWORD PTR [esp+0x62]
  416597:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416598:	sbb    BYTE PTR [esi],0xdb
  41659b:	(bad)
  41659e:	jg     0x4165c1
  4165a0:	cmc    
  4165a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165a2:	retf   
  4165a3:	push   cs
  4165a4:	cmp    al,0xd6
  4165a6:	inc    edi
  4165a7:	int    0x6
  4165a9:	pmulhuw mm4,QWORD PTR ds:0xa7acad43
  4165b0:	gs scas eax,DWORD PTR es:[edi]
  4165b2:	dec    ebx
  4165b3:	push   ebp
  4165b4:	push   ecx
  4165b5:	mov    esi,0xfa8a09be
  4165ba:	js     0x416565
  4165bc:	inc    ebx
  4165bd:	mov    bl,0x1f
  4165bf:	mul    BYTE PTR [esi-0x65a24def]
  4165c5:	xchg   DWORD PTR [di],ecx
  4165c8:	out    dx,eax
  4165c9:	dec    edx
  4165ca:	adc    eax,edi
  4165cc:	push   esp
  4165cd:	in     al,0xb2
  4165cf:	gs inc ecx
  4165d1:	dec    ecx
  4165d2:	arpl   bp,bx
  4165d4:	add    eax,0xc1fb9da5
  4165d9:	nop    DWORD PTR [edx-0xffba5d6]
  4165e0:	leave  
  4165e1:	fcmovnb st,st(3)
  4165e3:	sbb    al,0x51
  4165e5:	xchg   edx,eax
  4165e6:	xor    dl,BYTE PTR [eax-0x58d65475]
  4165ec:	pop    esp
  4165ed:	or     al,0xaa
  4165ef:	jo     0x4165cc
  4165f1:	pusha  
  4165f2:	add    DWORD PTR [edx-0x533e1518],0x3c
  4165f9:	stos   BYTE PTR es:[edi],al
  4165fa:	mov    esi,ecx
  4165fc:	pusha  
  4165fd:	dec    esp
  4165fe:	add    DWORD PTR [ecx+ebp*8+0x4f],edx
  416602:	and    dl,BYTE PTR [esi+0x55435225]
  416608:	mov    BYTE PTR [esi],dh
  41660a:	push   es
  41660b:	add    DWORD PTR ds:0x97ee154c,esi
  416611:	xor    dh,BYTE PTR ds:0xba894f2f
  416617:	or     DWORD PTR [ecx],ebx
  416619:	loope  0x4165f0
  41661b:	add    eax,0xe1c1454e
  416620:	test   eax,0x4f8b6adc
  416625:	mov    DWORD PTR [edx-0x5d],0x83d3d4a6
  41662c:	mov    DWORD PTR [eax],ecx
  41662e:	lea    ebp,[edi]
  416630:	mov    cl,0x9b
  416632:	stos   DWORD PTR es:[edi],eax
  416633:	mov    ecx,0x5c307a6b
  416638:	fwait
  416639:	xor    al,0xd9
  41663b:	sub    al,0x4e
  41663d:	icebp  
  41663e:	fnstsw WORD PTR [edx+edx*4+0x386ebe2a]
  416645:	scas   eax,DWORD PTR es:[edi]
  416646:	out    0xf3,al
  416648:	(bad)  
  416649:	jmp    0x901955f
  41664e:	jno    0x4166ce
  416650:	pop    eax
  416651:	sub    al,0xf6
  416653:	jge    0x416621
  416655:	lock imul BYTE PTR [edi+0x2a]
  416659:	or     al,0xdc
  41665b:	pop    eax
  41665c:	shr    BYTE PTR [edi],cl
  41665e:	sbb    eax,0x2fa4adb9
  416663:	jb     0x416668
  416665:	xchg   BYTE PTR [edi],dl
  416667:	mov    esi,0x6dc4016d
  41666c:	lods   al,BYTE PTR ds:[esi]
  41666d:	mov    al,0x13
  41666f:	sub    BYTE PTR es:[edx+0x17f9b58b],cl
  416676:	mov    esp,0xb29435f6
  41667b:	pop    eax
  41667c:	ficomp DWORD PTR [ecx+0x580912a8]
  416682:	std    
  416683:	and    ecx,edi
  416685:	ins    BYTE PTR es:[edi],dx
  416686:	pop    ss
  416687:	dec    edx
  416688:	or     BYTE PTR [ecx+ecx*4],bl
  41668b:	out    0x34,eax
  41668d:	or     ebx,esp
  41668f:	adc    BYTE PTR [edx],0x8
  416692:	xchg   BYTE PTR [edi],bh
  416694:	inc    BYTE PTR [ebp+0x506a2349]
  41669a:	int3   
  41669b:	stc    
  41669c:	(bad)  
  41669d:	mul    DWORD PTR [ebx]
  41669f:	ret    
  4166a0:	mov    dl,0x73
  4166a2:	repnz leave 
  4166a4:	mov    esp,0x8c38e625
  4166a9:	sub    DWORD PTR [ebp+ebx*4+0x76dd45bc],ebx
  4166b0:	jle    0x4166df
  4166b2:	pop    edx
  4166b3:	xchg   ebx,eax
  4166b4:	ins    BYTE PTR es:[edi],dx
  4166b5:	rcl    BYTE PTR [ebp+0x1f],cl
  4166b8:	lds    eax,FWORD PTR [eax+ebp*1+0xc490dad]
  4166bf:	call   0x4992:0xaeab68f8
  4166c6:	cmp    ebx,esp
  4166c8:	imul   ecx,DWORD PTR ds:0xc884cf99,0x44
  4166cf:	pop    edi
  4166d0:	and    al,0xa4
  4166d2:	mov    al,0x1f
  4166d4:	scas   eax,DWORD PTR es:[edi]
  4166d5:	test   eax,0x735c1c99
  4166da:	(bad)  
  4166db:	sahf   
  4166dc:	enter  0x742b,0x41
  4166e0:	sub    DWORD PTR [ebp+0x1e],ebp
  4166e3:	or     al,0xe2
  4166e5:	lock and DWORD PTR [edi],esp
  4166e8:	call   0xce0a:0x6eabc819
  4166ef:	adc    al,0x81
  4166f1:	stos   BYTE PTR es:[edi],al
  4166f2:	dec    eax
  4166f3:	and    DWORD PTR [edx+0x51be2f2a],ecx
  4166f9:	push   esi
  4166fa:	and    BYTE PTR [edi+0xa76421d],0x2d
  416701:	pop    esi
  416702:	sub    BYTE PTR [ebx],dl
  416704:	ja     0x4166bc
  416706:	pop    esp
  416707:	cmp    dl,BYTE PTR [esp+eax*8-0x60]
  41670b:	ss sbb al,0xd6
  41670e:	or     al,0x4b
  416710:	test   DWORD PTR [eax-0x28],ecx
  416713:	mov    al,ds:0xcc6d78d2
  416718:	inc    eax
  416719:	mov    edi,DWORD PTR [ebx+0x4ca7aa32]
  41671f:	jnp    0x41675a
  416721:	dec    esp
  416722:	mov    es,WORD PTR [eax]
  416724:	nop
  416725:	std    
  416726:	mov    eax,ds:0xebe55366
  41672b:	nop
  41672c:	call   0x836533b6
  416731:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416732:	and    al,0x40
  416734:	rol    dl,0x1a
  416737:	pop    ebp
  416738:	jl     0x4166fc
  41673a:	xchg   ebp,eax
  41673b:	in     al,dx
  41673c:	xor    al,0x1a
  41673e:	jmp    0x4c2ec38c
  416743:	inc    esp
  416744:	mov    ebx,0xe1b1caac
  416749:	test   BYTE PTR [eax+0x2e8ae76f],cl
  41674f:	std    
  416750:	mov    BYTE PTR [ebp-0x6dd04724],al
  416756:	(bad)  
  416757:	loopne 0x416785
  416759:	out    0x72,eax
  41675b:	test   DWORD PTR [esi-0x34c277b1],ebx
  416761:	js     0x4167d2
  416763:	fdiv   QWORD PTR [ecx-0x6e]
  416766:	aas    
  416767:	mov    ecx,0x4f681a9f
  41676c:	inc    esp
  41676d:	pop    edi
  41676e:	cmp    bh,BYTE PTR [edi+0x34d61c05]
  416774:	cmp    BYTE PTR [eax],cl
  416776:	outs   dx,BYTE PTR ds:[esi]
  416777:	jne    0x4167b2
  416779:	shl    esi,cl
  41677b:	addr16 cs mov edi,0x4807c57c
  416782:	xchg   BYTE PTR fs:[eax-0x3e332dac],bh
  416789:	fstp   DWORD PTR [esi+0x66]
  41678c:	sub    BYTE PTR [edx-0xc],dh
  41678f:	mov    dl,0xe4
  416791:	mov    ds:0x71bc3d82,eax
  416796:	xchg   ebx,eax
  416797:	sbb    BYTE PTR [ecx],al
  416799:	push   ecx
  41679a:	loopne 0x416809
  41679c:	out    dx,eax
  41679d:	addr16 push 0xffffffe6
  4167a0:	lahf   
  4167a1:	jmp    0x4167cc
  4167a3:	jge    0x416781
  4167a5:	pop    esi
  4167a6:	xchg   edx,eax
  4167a7:	lods   eax,DWORD PTR ds:[esi]
  4167a8:	fptan  
  4167aa:	xchg   ebx,eax
  4167ab:	neg    BYTE PTR [esi+0x33ba3b21]
  4167b1:	daa    
  4167b2:	ss mov edx,0xb1c67c3c
  4167b8:	jno    0x4167cc
  4167ba:	repnz inc eax
  4167bc:	mov    WORD PTR [eax+0x45],?
  4167bf:	stos   DWORD PTR es:[edi],eax
  4167c0:	mov    edi,0x188bfc36
  4167c5:	ficom  DWORD PTR [ecx+0x23]
  4167c8:	hlt    
  4167c9:	int3   
  4167ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167cb:	or     al,BYTE PTR [eax-0x58465c3e]
  4167d1:	mov    eax,ds:0x163c0d36
  4167d6:	xor    ebx,DWORD PTR [edx]
  4167d8:	in     al,0xe9
  4167da:	pop    edx
  4167db:	jp     0x41678b
  4167dd:	mov    DWORD PTR [esi+0x47],eax
  4167e0:	sahf   
  4167e1:	adc    DWORD PTR [edi-0x72],eax
  4167e4:	and    BYTE PTR ds:0x97b84a3e,dh
  4167ea:	imul   eax,DWORD PTR [ebp-0x46],0x2a68d220
  4167f1:	mov    esp,0xdf96d72a
  4167f6:	aaa    
  4167f7:	push   es
  4167f8:	pop    ds
  4167f9:	pop    ss
  4167fa:	pop    ebp
  4167fb:	into   
  4167fc:	xchg   ebx,eax
  4167fd:	fstp   TBYTE PTR [edx]
  4167ff:	pop    ecx
  416800:	out    dx,eax
  416801:	and    eax,0xccb2b215
  416806:	or     BYTE PTR [ecx+ebp*8+0x48],dl
  41680a:	mov    dh,dh
  41680c:	ds aas 
  41680e:	loope  0x416883
  416810:	mov    ch,0x19
  416812:	or     al,0x73
  416814:	mov    cl,0x3c
  416816:	mov    ebp,0x5dae8644
  41681b:	lea    esp,[edx+0x72]
  41681e:	xor    DWORD PTR [ebx-0x22],esp
  416821:	cmp    DWORD PTR [ebx-0x23cdf4f5],0x987c601c
  41682b:	or     al,BYTE PTR [edi+eax*1+0x71]
  41682f:	sbb    DWORD PTR [esi+edi*8-0x7],ebx
  416833:	(bad)  
  416834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416835:	and    al,bh
  416837:	clc    
  416838:	loopne 0x4168a7
  41683a:	or     cl,BYTE PTR [edi+0x53]
  41683d:	mov    DWORD PTR [ecx+ecx*4],0xa22d57d9
  416844:	dec    ebx
  416846:	jp     0x4167f3
  416848:	push   eax
  416849:	ret    
  41684a:	jl     0x41680c
  41684c:	fwait
  41684d:	retf   
  41684e:	xor    ch,cl
  416850:	dec    ebp
  416851:	inc    eax
  416852:	call   0x145d:0x3bd3454
  416859:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41685a:	fdiv   DWORD PTR [ecx+edx*2]
  41685d:	add    al,BYTE PTR [ebp+eax*8+0x34fb0e38]
  416864:	fwait
  416865:	stc    
  416866:	lahf   
  416867:	cli    
  416868:	ret    
  416869:	cmp    DWORD PTR [ebx],edx
  41686b:	jmp    0x416886
  41686d:	(bad)  
  41686e:	sbb    eax,0x69a0a71a
  416873:	inc    esp
  416874:	sub    eax,0x9101a42f
  416879:	push   esi
  41687a:	push   0x5ccbf857
  41687f:	xchg   edx,eax
  416880:	ja     0x41685f
  416882:	int3   
  416883:	jge    0x4168e0
  416885:	int3   
  416886:	mov    eax,DWORD PTR [eax-0x2a]
  416889:	xor    eax,0x8d7b528
  41688e:	sti    
  41688f:	xchg   ebx,eax
  416890:	ss adc eax,0xa6e041e0
  416896:	mov    esi,0xd0f16c19
  41689b:	and    BYTE PTR [ebp+0x56],0xa6
  41689f:	or     al,0x9a
  4168a1:	cmp    DWORD PTR [edx+ecx*2+0x51],edx
  4168a5:	sbb    al,0xc6
  4168a7:	add    eax,0x644cca39
  4168ac:	aaa    
  4168ad:	jb     0x41692a
  4168af:	fcmovnb st,st(1)
  4168b1:	int3   
  4168b2:	sub    BYTE PTR ds:[ecx],bh
  4168b5:	arpl   WORD PTR [edi],cx
  4168b7:	dec    eax
  4168b8:	cwde   
  4168b9:	cwde   
  4168ba:	mov    dh,0xe4
  4168bc:	sbb    DWORD PTR [ebx+0x1b5034ca],edx
  4168c2:	sbb    al,0x74
  4168c4:	adc    BYTE PTR [esp+edi*4+0x7a],ch
  4168c8:	enter  0xc21b,0xe1
  4168cc:	pop    esp
  4168cd:	add    edi,ebx
  4168cf:	xchg   esi,eax
  4168d0:	add    al,0xa
  4168d2:	mov    edx,0xd5dfb3dc
  4168d7:	scas   eax,DWORD PTR es:[edi]
  4168d8:	sti    
  4168d9:	jns    0x416953
  4168db:	add    edi,edx
  4168dd:	sub    eax,0x3a566bf1
  4168e2:	pop    eax
  4168e3:	or     eax,0xda031708
  4168e8:	jno    0x4168cd
  4168ea:	mov    cl,ah
  4168ec:	push   es
  4168ed:	xchg   esp,eax
  4168ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168ef:	jmp    0x41695d
  4168f1:	push   ecx
  4168f2:	je     0x416925
  4168f4:	dec    ebx
  4168f5:	mov    bl,0x61
  4168f7:	aaa    
  4168f8:	cmp    edx,DWORD PTR ds:0x93134691
  4168fe:	add    edx,DWORD PTR [edi+0x7c85d249]
  416904:	int    0x36
  416906:	cli    
  416907:	lods   eax,DWORD PTR ds:[esi]
  416908:	mov    ebx,0x77d73151
  41690d:	inc    ebx
  41690e:	cdq    
  41690f:	ret    0x1c1a
  416912:	into   
  416913:	repnz pushf 
  416915:	mov    ss,esi
  416917:	fdivr  st(0),st
  416919:	dec    ecx
  41691a:	mov    esp,0x45743944
  41691f:	dec    eax
  416920:	adc    BYTE PTR [ebp+0x25e440a5],dl
  416926:	adc    BYTE PTR [ecx+0x2e],0x36
  41692a:	adc    BYTE PTR [ebx],dl
  41692c:	inc    esi
  41692d:	neg    BYTE PTR [ebx]
  41692f:	loope  0x416921
  416931:	retf   
  416932:	xor    bl,BYTE PTR [ebp+0x40]
  416935:	mov    ebp,0xacac5891
  41693a:	push   edi
  41693b:	adc    DWORD PTR [ebp+0x69],edx
  41693e:	mov    WORD PTR ds:0xd3e36474,?
  416944:	fcmovnb st,st(5)
  416946:	inc    edi
  416947:	and    ebx,ebx
  416949:	ret    
  41694a:	dec    esi
  41694b:	inc    ebx
  41694c:	loop   0x416967
  41694e:	push   esi
  41694f:	rol    BYTE PTR [ecx-0x34],cl
  416952:	in     al,0xc2
  416954:	and    esi,ebx
  416956:	push   ecx
  416957:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416958:	pop    ecx
  416959:	xchg   esp,eax
  41695a:	adc    eax,0x222f68a5
  41695f:	fldenv [eax]
  416961:	mov    ebp,0x1f94e110
  416966:	add    BYTE PTR [edi+edx*8],ch
  416969:	xor    ebx,DWORD PTR [edx+0x57]
  41696c:	(bad)  
  41696d:	lock loop 0x4169dc
  416970:	mov    BYTE PTR [esi],al
  416972:	cld    
  416973:	inc    eax
  416974:	shl    al,0xf3
  416977:	mov    esi,0x7eca09a7
  41697c:	sub    al,BYTE PTR [ebp-0x6083d15c]
  416982:	call   0xec25e33d
  416987:	add    ebx,edi
  416989:	sub    dl,BYTE PTR [ebp-0x6e]
  41698c:	jl     0x416957
  41698e:	push   ebp
  41698f:	idiv   DWORD PTR [ecx+0x56]
  416992:	push   edi
  416993:	scas   al,BYTE PTR es:[edi]
  416994:	(bad)  
  416995:	(bad)  
  416996:	mov    ah,0x6e
  416998:	aad    0xbd
  41699a:	(bad)  
  41699b:	je     0x41691f
  41699d:	and    esi,DWORD PTR [eax-0x23d465e1]
  4169a3:	in     eax,0xe5
  4169a5:	or     ebp,DWORD PTR [edi+0x4d]
  4169a8:	jmp    0xbc3d072b
  4169ad:	fs stc 
  4169af:	xchg   esp,eax
  4169b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169b1:	fdiv   DWORD PTR [edi+ebx*4-0xb9ef5a6]
  4169b8:	inc    eax
  4169b9:	cs icebp 
  4169bb:	js     0x4169c0
  4169bd:	push   eax
  4169be:	add    cl,BYTE PTR [edx+edi*4-0x4c4df4f0]
  4169c5:	sub    esp,ecx
  4169c7:	inc    ebx
  4169c8:	inc    ebx
  4169c9:	lahf   
  4169ca:	mov    al,ds:0x12b5d51a
  4169cf:	sbb    DWORD PTR [edi-0x153ee294],edx
  4169d5:	ins    DWORD PTR es:[edi],dx
  4169d6:	cmp    eax,0x762aa476
  4169db:	sti    
  4169dc:	dec    ecx
  4169dd:	jb     0x416a52
  4169df:	push   ebx
  4169e0:	mov    DWORD PTR [edi+esi*2],ebx
  4169e3:	xor    BYTE PTR [ecx-0x72],ch
  4169e6:	xor    eax,0xc93921ee
  4169eb:	sub    esi,eax
  4169ed:	loopne 0x4169af
  4169ef:	or     BYTE PTR [ebx],cl
  4169f1:	clc    
  4169f2:	sub    ah,dh
  4169f4:	push   eax
  4169f5:	ss scas al,BYTE PTR es:[edi]
  4169f7:	adc    DWORD PTR ds:0xad45291f,eax
  4169fd:	nop
  4169fe:	and    ebx,DWORD PTR [ebx]
  416a00:	or     BYTE PTR [edx],dl
  416a02:	cmp    eax,ebx
  416a04:	test   al,0x69
  416a06:	adc    ch,BYTE PTR [ebx-0xba46217]
  416a0c:	mov    WORD PTR [ebp-0x19],ss
  416a0f:	(bad)  
  416a10:	push   0xc
  416a12:	push   es
  416a13:	ins    DWORD PTR es:[edi],dx
  416a14:	int    0x38
  416a16:	daa    
  416a17:	pop    ebx
  416a18:	punpckhdq mm3,mm1
  416a1b:	das    
  416a1c:	adc    BYTE PTR [esi+edx*2+0x3eada225],0x97
  416a24:	mov    ebx,0xa15b226f
  416a29:	mov    al,0x10
  416a2b:	dec    eax
  416a2c:	sahf   
  416a2d:	sti    
  416a2e:	mov    bh,0xbf
  416a30:	mov    ecx,0x94f177dd
  416a35:	dec    edx
  416a36:	mov    esp,fs
  416a38:	sub    ch,BYTE PTR [esi]
  416a3a:	in     al,0xd4
  416a3c:	pop    edx
  416a3d:	test   eax,0xb38c2af0
  416a42:	or     BYTE PTR [esi+0x1b8969e6],ch
  416a48:	adc    DWORD PTR [edi-0x34],ebp
  416a4b:	retf   0xd26b
  416a4e:	jp     0x416ab5
  416a50:	or     DWORD PTR [edi],edx
  416a52:	xchg   ebx,eax
  416a53:	pusha  
  416a54:	push   esp
  416a55:	sbb    al,0x5d
  416a57:	xor    BYTE PTR ds:0x4c8bdad2,bl
  416a5d:	lahf   
  416a5e:	and    esp,DWORD PTR [ebp+ecx*8+0x79d244da]
  416a65:	adc    BYTE PTR [ecx-0x20],dh
  416a68:	gs (bad) 
  416a6a:	call   0x73524f86
  416a6f:	sbb    cl,BYTE PTR [ecx]
  416a71:	cli    
  416a72:	sbb    edx,ecx
  416a74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a75:	mov    bl,0xcd
  416a77:	sub    BYTE PTR [esi+eax*2],al
  416a7a:	ja     0x416aed
  416a7c:	jae    0x416a23
  416a7e:	sbb    al,0x38
  416a80:	ins    DWORD PTR es:[edi],dx
  416a81:	ror    DWORD PTR [edx],cl
  416a83:	dec    edi
  416a84:	pop    es
  416a85:	xchg   edx,eax
  416a86:	sbb    esp,DWORD PTR [ecx]
  416a88:	mov    dl,0x66
  416a8a:	arpl   WORD PTR [ebx+eiz*1-0x66],ax
  416a8e:	fsub   QWORD PTR ds:0xd2850de
  416a94:	imul   eax,DWORD PTR [ecx+0x6],0xffffff93
  416a98:	loop   0x416a2b
  416a9a:	dec    esi
  416a9b:	mov    esp,DWORD PTR [ecx]
  416a9d:	stos   DWORD PTR es:[edi],eax
  416a9e:	es test eax,0x2cc6b25
  416aa4:	loope  0x416ad0
  416aa6:	test   al,0x32
  416aa8:	mov    ch,0xae
  416aaa:	adc    eax,DWORD PTR [ebx-0x2a]
  416aad:	mov    ds:0x2488dbbd,al
  416ab2:	push   edi
  416ab3:	push   ebx
  416ab4:	xor    ah,bh
  416ab6:	adc    ecx,DWORD PTR [esp+edi*8+0x1a]
  416aba:	xor    al,0x38
  416abd:	cmp    DWORD PTR [edx-0x1afb6166],esi
  416ac3:	mov    al,0xbb
  416ac5:	adc    ecx,DWORD PTR fs:[edx+eiz*4-0x49185607]
  416acd:	inc    esi
  416ace:	add    bh,BYTE PTR [eax+0x1531665a]
  416ad4:	inc    eax
  416ad5:	cli    
  416ad6:	pop    esi
  416ad7:	jp     0x416b04
  416ad9:	int    0x29
  416adb:	cwde   
  416adc:	push   cs
  416add:	pop    esp
  416ade:	xchg   BYTE PTR [ebx],dl
  416ae0:	cmc    
  416ae1:	adc    al,BYTE PTR [edx+0x58]
  416ae4:	or     DWORD PTR [edx-0x60],0xffffff97
  416ae8:	test   DWORD PTR [edi],esp
  416aea:	pop    eax
  416aeb:	cli    
  416aec:	push   ss
  416aed:	sub    eax,0xd667b73
  416af2:	mov    BYTE PTR ds:0x35959611,dh
  416af8:	cdq    
  416af9:	in     al,dx
  416afa:	imul   edi,edi,0x6d
  416afd:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  416aff:	pop    ecx
  416b00:	dec    ecx
  416b01:	int    0x8b
  416b03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b04:	imul   edi,ebp,0x43bbdb68
  416b0a:	call   0x1e9f:0x4f9edff0
  416b11:	rcl    BYTE PTR [edx],0x3f
  416b14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b15:	fimul  WORD PTR [ebx+0x7bf28093]
  416b1b:	push   ss
  416b1c:	outs   dx,DWORD PTR ds:[esi]
  416b1d:	fdivr  st,st(1)
  416b1f:	xchg   ebx,eax
  416b20:	fisub  WORD PTR [ecx]
  416b22:	cwde   
  416b23:	shr    BYTE PTR [edi-0x35e3e7b9],1
  416b29:	rol    bl,1
  416b2b:	xchg   edx,eax
  416b2c:	mov    al,0x9b
  416b2e:	adc    bh,BYTE PTR [ecx-0x28bce915]
  416b34:	sbb    DWORD PTR [ebx+eax*4+0x4bf4b437],edx
  416b3b:	add    al,0xc5
  416b3d:	inc    edi
  416b3e:	(bad)  
  416b3f:	lods   al,BYTE PTR ss:[esi]
  416b41:	pusha  
  416b42:	rcl    BYTE PTR [esi+0x61],0xab
  416b46:	into   
  416b47:	xchg   esp,eax
  416b48:	call   0x44e8:0xd2df7d59
  416b4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b50:	sbb    DWORD PTR [ecx],ecx
  416b52:	cmp    BYTE PTR es:[edi+edi*1],bh
  416b56:	loopne 0x416bd7
  416b58:	ror    esp,1
  416b5a:	int3   
  416b5b:	or     al,0x6f
  416b5d:	xchg   esi,eax
  416b5e:	scas   eax,DWORD PTR es:[edi]
  416b5f:	ins    DWORD PTR es:[edi],dx
  416b60:	mov    ecx,DWORD PTR [ebp-0x3a]
  416b63:	mov    BYTE PTR [edx-0x67],0xd4
  416b67:	data16 mov es,WORD PTR [esi]
  416b6a:	jne    0x416b41
  416b6c:	cld    
  416b6d:	xchg   ebx,eax
  416b6e:	or     DWORD PTR [ebx],esi
  416b70:	push   edx
  416b71:	shl    DWORD PTR [edx-0x3fd6cfa],cl
  416b77:	das    
  416b78:	(bad)  
  416b79:	jbe    0x416bbd
  416b7b:	cs aam 0x6e
  416b7e:	loope  0x416b18
  416b80:	popa   
  416b81:	dec    BYTE PTR [esi-0x1e]
  416b84:	push   es
  416b85:	test   al,0x5d
  416b87:	loope  0x416b9f
  416b89:	xchg   ebp,ecx
  416b8b:	xchg   edx,eax
  416b8c:	out    0xb9,al
  416b8e:	in     al,dx
  416b8f:	xchg   edx,eax
  416b90:	mov    edx,0xce8b5483
  416b95:	jmp    0x711a4c93
  416b9a:	icebp  
  416b9b:	jl     0x416bc2
  416b9d:	push   cs
  416b9e:	add    dl,dh
  416ba0:	xor    eax,0x79726f8
  416ba5:	pop    edx
  416ba6:	(bad)  
  416ba8:	rol    BYTE PTR [ecx],0xf5
  416bab:	std    
  416bac:	bound  ebx,QWORD PTR [ebx+0x45]
  416baf:	jnp    0x416b8b
  416bb1:	ins    DWORD PTR es:[edi],dx
  416bb2:	and    BYTE PTR ds:0xa194bc57,al
  416bb8:	(bad)  
  416bb9:	call   DWORD PTR [edx-0x43]
  416bbc:	int    0x62
  416bbe:	(bad)  
  416bbf:	xchg   edx,eax
  416bc0:	inc    ebx
  416bc1:	ret    0xf959
  416bc4:	xor    BYTE PTR [ecx+eiz*2+0x7],bl
  416bc8:	mov    eax,ds:0x8ce1476e
  416bcd:	pushfw 
  416bcf:	dec    ebp
  416bd0:	lea    ecx,ds:0x8f6aa06f
  416bd6:	aas    
  416bd7:	icebp  
  416bd8:	sub    eax,DWORD PTR [esi]
  416bda:	fwait
  416bdb:	pop    eax
  416bdc:	xchg   esi,eax
  416bdd:	ficomp DWORD PTR [esi-0x71ab81e7]
  416be3:	cld    
  416be4:	aaa    
  416be5:	add    DWORD PTR [ecx],edx
  416be7:	shl    DWORD PTR [esi],0x18
  416bea:	push   esi
  416beb:	push   ebp
  416bec:	cmp    DWORD PTR [ecx],edi
  416bee:	outs   dx,DWORD PTR ds:[esi]
  416bef:	je     0x416b7c
  416bf1:	mov    eax,ds:0xd7ab429d
  416bf6:	push   0xffffffa4
  416bf8:	xchg   edx,eax
  416bf9:	in     eax,dx
  416bfa:	xchg   edi,eax
  416bfb:	mov    BYTE PTR [ebx],al
  416bfd:	dec    ebp
  416bfe:	and    DWORD PTR [edi+0x7f],0xfffffff3
  416c02:	sti    
  416c03:	jmp    0xb956:0xd072d21
  416c0a:	jno    0x416bcc
  416c0c:	hlt    
  416c0d:	sub    dh,BYTE PTR [ecx-0xdd216fc]
  416c13:	lahf   
  416c14:	(bad)  
  416c15:	(bad)  
  416c16:	fst    QWORD PTR [ecx-0x132f7327]
  416c1c:	inc    ebp
  416c1d:	adc    edx,esi
  416c1f:	std    
  416c20:	push   ds
  416c21:	in     eax,0x39
  416c23:	shr    BYTE PTR [edi+0xe8e32c0],1
  416c29:	lds    esi,FWORD PTR [edx-0x5a93d5ac]
  416c2f:	clc    
  416c30:	inc    ebp
  416c31:	icebp  
  416c32:	stc    
  416c33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c34:	jle    0x416cb5
  416c36:	mov    al,ds:0x4c4e573d
  416c3b:	pushw  0x79
  416c3e:	rcl    DWORD PTR ds:0x79dbac91,0x23
  416c45:	(bad)  
  416c46:	adc    al,0xa1
  416c48:	ins    BYTE PTR es:[edi],dx
  416c49:	and    bh,bl
  416c4b:	push   ecx
  416c4c:	clc    
  416c4d:	aas    
  416c4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c4f:	pop    edi
  416c50:	enter  0xda43,0xf8
  416c54:	and    al,0xfc
  416c56:	cwde   
  416c57:	call   0x2b77:0xd1877b20
  416c5e:	xchg   esp,edi
  416c60:	sub    BYTE PTR [esi],0xde
  416c63:	or     esi,DWORD PTR [esp+ebp*2]
  416c66:	xchg   edi,eax
  416c67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c68:	xchg   ebx,eax
  416c69:	(bad)  
  416c6a:	aaa    
  416c6b:	sub    esi,DWORD PTR [edi]
  416c6d:	xor    ebp,edi
  416c6f:	push   ecx
  416c70:	in     al,dx
  416c71:	cmp    al,dl
  416c73:	pop    ebx
  416c74:	push   eax
  416c75:	out    0x9e,al
  416c77:	sub    ebp,DWORD PTR [ebp-0x5e]
  416c7a:	ret    
  416c7b:	daa    
  416c7c:	mov    edi,0x4ab8ef25
  416c81:	(bad)  
  416c82:	xor    eax,0x639776ee
  416c87:	push   ebx
  416c88:	push   ebx
  416c89:	in     al,dx
  416c8a:	mov    cl,0xf7
  416c8c:	pop    edx
  416c8d:	and    DWORD PTR [esi],eax
  416c8f:	rcr    DWORD PTR [ecx-0x78b38659],cl
  416c95:	mov    eax,0x4b36facc
  416c9a:	cdq    
  416c9b:	pushf  
  416c9c:	pop    ecx
  416c9d:	cmp    ebx,DWORD PTR [esi-0x4f]
  416ca0:	push   ss
  416ca1:	push   eax
  416ca2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ca3:	inc    ecx
  416ca4:	push   ds
  416ca5:	push   ds
  416ca6:	loop   0x416ce9
  416ca8:	or     ebp,esi
  416caa:	icebp  
  416cab:	inc    edx
  416cac:	add    ch,dl
  416cae:	jno    0x416c5f
  416cb0:	pop    ds
  416cb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cb2:	aam    0x46
  416cb4:	mov    al,0x50
  416cb6:	pop    ecx
  416cb7:	retf   0xddf4
  416cba:	mov    ebx,0x13e5d57c
  416cbf:	fidiv  DWORD PTR [esi+0x42]
  416cc2:	inc    edx
  416cc3:	(bad)
  416cc7:	repz jbe 0x416cd1
  416cca:	fld    DWORD PTR [ebx-0x19b6be3d]
  416cd0:	sub    eax,0xb250b40c
  416cd5:	repnz push esi
  416cd7:	xchg   esi,eax
  416cd8:	icebp  
  416cd9:	jne    0x416c75
  416cdb:	inc    ebp
  416cdc:	sbb    al,0x52
  416cde:	mov    esi,0xd35d37ea
  416ce3:	add    al,0x39
  416ce5:	dec    edx
  416ce6:	xchg   edi,eax
  416ce7:	(bad)  
  416ce8:	aas    
  416ce9:	(bad)  
  416cea:	bound  edi,QWORD PTR [ebp-0x248a225a]
  416cf0:	into   
  416cf1:	arpl   WORD PTR ds:0xa63a4766,si
  416cf7:	(bad)  
  416cf8:	jno    0x416ce7
  416cfa:	sbb    ch,al
  416cfc:	xchg   ebx,eax
  416cfd:	int    0xd7
  416cff:	cmp    ebx,DWORD PTR [edi]
  416d01:	cmp    al,0xf3
  416d03:	inc    edx
  416d04:	lds    edi,FWORD PTR [edi+0x5d]
  416d07:	jno    0x416d3e
  416d09:	adc    ecx,DWORD PTR [edi]
  416d0b:	fwait
  416d0c:	mov    bl,bl
  416d0e:	imul   ebx,DWORD PTR [ebx+0x1b],0x6b
  416d12:	cmp    bh,BYTE PTR [eax-0x16836855]
  416d18:	sub    BYTE PTR [esi+0x31],cl
  416d1b:	dec    edi
  416d1c:	pop    esi
  416d1d:	imul   ebp,DWORD PTR [ebx-0x9],0xffffff8e
  416d21:	fild   WORD PTR ds:0xe45da87a
  416d27:	call   0xd85c21eb
  416d2c:	popa   
  416d2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d2e:	mov    BYTE PTR [ecx],ch
  416d30:	test   BYTE PTR [eax],bh
  416d32:	hlt    
  416d33:	push   ds
  416d34:	lahf   
  416d35:	ins    BYTE PTR es:[edi],dx
  416d36:	xchg   esi,eax
  416d37:	dec    ebp
  416d38:	pop    ecx
  416d39:	faddp  st(1),st
  416d3b:	aaa    
  416d3c:	fcmovnb st,st(2)
  416d3e:	test   BYTE PTR [edx+0x7b827bf2],cl
  416d44:	(bad)  
  416d45:	in     eax,dx
  416d46:	leave  
  416d47:	and    esp,0x2c
  416d4a:	outs   dx,BYTE PTR ds:[esi]
  416d4b:	dec    edi
  416d4c:	inc    edi
  416d4d:	inc    edi
  416d4e:	push   ds
  416d4f:	icebp  
  416d50:	repnz (bad) 
  416d52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d53:	(bad)  
  416d55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d56:	push   0x1af5c346
  416d5b:	shl    edi,1
  416d5d:	jmp    0x416d8b
  416d5f:	test   DWORD PTR [edi-0x2a],0xf647056d
  416d66:	mov    ds:0xd0c133d9,al
  416d6b:	xor    BYTE PTR [edx+0x391e1c75],0x1c
  416d72:	test   ah,ah
  416d74:	leave  
  416d75:	sub    cl,BYTE PTR ds:0x5865ae12
  416d7b:	rep repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d7e:	sbb    bl,BYTE PTR [eax]
  416d80:	cdq    
  416d81:	and    dh,ah
  416d83:	cli    
  416d84:	add    eax,DWORD PTR [esi+ebp*4+0xd]
  416d88:	mov    ch,bl
  416d8a:	and    DWORD PTR [eax],0xffffffc6
  416d8d:	je     0x416d2d
  416d8f:	dec    edi
  416d90:	adc    al,0xc0
  416d92:	jo     0x416d9b
  416d94:	into   
  416d95:	sbb    dh,BYTE PTR [ebx+0x6641b78f]
  416d9b:	mov    edx,0x3745281f
  416da0:	push   DWORD PTR [ebx-0x33ac3e16]
  416da6:	scas   al,BYTE PTR es:[edi]
  416da7:	jb     0x416d87
  416da9:	dec    esp
  416daa:	and    DWORD PTR [edx+0x45],0x57
  416dae:	and    al,0x10
  416db0:	aad    0x1f
  416db2:	dec    edx
  416db3:	imul   edi,ebx,0xffffffd0
  416db6:	dec    esi
  416db7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416db8:	ficom  DWORD PTR [edi]
  416dba:	mov    al,ds:0xbbcb1a7d
  416dbf:	dec    ebx
  416dc0:	and    BYTE PTR [ebx+0x4],0xc2
  416dc4:	(bad)  
  416dc5:	xor    BYTE PTR [eax-0x42],ch
  416dc8:	or     al,0x4d
  416dca:	or     dl,bl
  416dcc:	jns    0x7e682ba9
  416dd2:	imul   ebp,DWORD PTR [ecx-0x699ebfad],0xfffffff6
  416dd9:	jl     0x416e34
  416ddb:	popf   
  416ddc:	enter  0x3273,0x86
  416de0:	mov    ch,0x87
  416de2:	or     DWORD PTR [esi-0x4c7de24e],0x26
  416de9:	repz push cs
  416deb:	or     BYTE PTR [ecx+0x35],0x30
  416def:	test   al,0xb7
  416df1:	xor    al,0x25
  416df3:	pop    ss
  416df4:	pop    es
  416df5:	je     0x416e70
  416df7:	dec    edi
  416df8:	add    dh,BYTE PTR [eax]
  416dfa:	jbe    0x416e16
  416dfc:	rcl    DWORD PTR [ecx+edx*2],1
  416dff:	dec    eax
  416e00:	scas   eax,DWORD PTR es:[edi]
  416e01:	dec    eax
  416e02:	lds    ecx,FWORD PTR [ebx]
  416e04:	and    bh,bh
  416e06:	ins    BYTE PTR es:[edi],dx
  416e07:	xchg   esi,eax
  416e08:	push   eax
  416e09:	adc    bh,BYTE PTR [ebx]
  416e0b:	in     eax,0xb4
  416e0d:	pushf  
  416e0e:	test   DWORD PTR [esi+0x47b51444],esp
  416e14:	std    
  416e15:	or     eax,0x91a5d409
  416e1a:	sub    DWORD PTR [esp+eiz*2+0x2dc64285],edi
  416e21:	adc    edi,DWORD PTR [edx-0x5c]
  416e24:	adc    bl,dl
  416e26:	into   
  416e27:	sub    ebx,eax
  416e29:	ss (bad) 
  416e2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e2d:	mov    ebp,ecx
  416e2f:	push   ebp
  416e30:	dec    ecx
  416e31:	sub    dh,0xf3
  416e34:	push   0x3a
  416e36:	pop    edx
  416e37:	ins    DWORD PTR es:[edi],dx
  416e38:	push   ss
  416e39:	pop    edi
  416e3a:	cli    
  416e3b:	in     al,0x2a
  416e3d:	jno    0x416e72
  416e3f:	sub    dh,BYTE PTR [ebx]
  416e41:	lods   eax,DWORD PTR ds:[esi]
  416e42:	xor    DWORD PTR [ecx-0x3de9f6eb],ecx
  416e48:	sub    eax,0x24003a71
  416e4d:	lods   al,BYTE PTR ds:[esi]
  416e4e:	push   esp
  416e4f:	ds (bad) 
  416e51:	clc    
  416e52:	pop    edi
  416e53:	cmc    
  416e54:	cmp    bh,BYTE PTR [ebp+ebx*1+0x9]
  416e58:	les    edi,FWORD PTR [edi]
  416e5a:	xchg   ecx,eax
  416e5b:	aas    
  416e5c:	xchg   edx,eax
  416e5d:	(bad)  
  416e5e:	loope  0x416e59
  416e60:	jo     0x416e87
  416e62:	ins    DWORD PTR es:[edi],dx
  416e63:	hlt    
  416e64:	xchg   edx,eax
  416e65:	mov    ebp,0x83621ae3
  416e6a:	loopne 0x416e4d
  416e6c:	and    al,0x9
  416e6e:	mov    dl,0xd0
  416e70:	cmp    eax,0xcf0f4c93
  416e75:	add    BYTE PTR [esi*8+0x162e4c4b],ch
  416e7c:	inc    esp
  416e7d:	gs addr16 push ds
  416e80:	ja     0x416ebf
  416e82:	lods   eax,DWORD PTR ds:[esi]
  416e83:	mov    ah,0x42
  416e85:	xcrypt-cbc (bad)
  416e86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e87:	adc    ebx,ebp
  416e89:	fsub   QWORD PTR [esi+ecx*1-0x4c]
  416e8d:	inc    esp
  416e8e:	(bad)  
  416e8f:	sar    DWORD PTR [edi+ecx*1],cl
  416e92:	popa   
  416e93:	std    
  416e94:	out    dx,eax
  416e95:	test   DWORD PTR [ecx+ecx*8-0x4e902b61],edx
  416e9c:	loope  0x416ebf
  416e9e:	pop    edx
  416e9f:	call   FWORD PTR [ecx+0x61be7f1b]
  416ea5:	push   0x1b
  416ea7:	into   
  416ea8:	iret   
  416ea9:	mov    ds,WORD PTR [ebx]
  416eab:	ins    DWORD PTR es:[edi],dx
  416eac:	test   ecx,edx
  416eae:	xor    DWORD PTR [edi-0x1c],ebp
  416eb1:	xor    edx,esp
  416eb3:	xor    eax,0x830981c8
  416eb8:	imul   ebx,DWORD PTR ds:0xcfafc944,0xffffff9f
  416ebf:	jae    0x416e78
  416ec1:	sbb    esi,DWORD PTR [edi-0x5d6b5013]
  416ec7:	es push 0x2fc936d
  416ecd:	mov    BYTE PTR [eax+0x2d],ah
  416ed0:	xor    BYTE PTR [edi],bl
  416ed2:	sahf   
  416ed3:	dec    ecx
  416ed4:	pop    ds
  416ed5:	(bad)  
  416ed6:	inc    ah
  416ed8:	push   es
  416ed9:	sbb    al,0xab
  416edb:	or     eax,0x4a2c33ea
  416ee0:	inc    ebp
  416ee1:	xor    BYTE PTR [edi+ecx*2-0x5216be81],al
  416ee8:	call   0x8787f10f
  416eed:	jbe    0x416f62
  416eef:	pop    edx
  416ef0:	jne    0x416e7b
  416ef2:	stc    
  416ef3:	push   ecx
  416ef4:	js     0x416ede
  416ef6:	push   edx
  416ef7:	mov    BYTE PTR [ebx-0x28dd563b],bh
  416efd:	dec    edi
  416efe:	mov    cl,ah
  416f00:	sub    ch,al
  416f02:	inc    ebp
  416f03:	pop    ebp
  416f04:	ror    DWORD PTR [esi-0x59],1
  416f07:	fwait
  416f08:	out    0xf1,al
  416f0a:	ss icebp 
  416f0c:	fisubr WORD PTR [edi]
  416f0e:	dec    edx
  416f0f:	dec    ebp
  416f10:	mov    al,0x11
  416f12:	and    al,0x3f
  416f14:	jbe    0x416eaf
  416f16:	lock push es
  416f18:	out    dx,eax
  416f19:	mov    dl,0x15
  416f1b:	xchg   esp,eax
  416f1c:	retf   0xe2b6
  416f1f:	aam    0xb0
  416f21:	jg     0x416ea3
  416f23:	pop    ecx
  416f24:	xor    DWORD PTR [ebp-0x78],0x37
  416f28:	scas   eax,DWORD PTR es:[edi]
  416f29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f2a:	(bad)  
  416f2b:	shr    DWORD PTR [ebx],1
  416f2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f2e:	xlat   BYTE PTR ds:[ebx]
  416f2f:	mov    ecx,0x10ecba15
  416f34:	or     DWORD PTR [edx+0x2d],0x4f
  416f38:	xor    esi,esi
  416f3a:	xor    esp,DWORD PTR [ebp-0x4dff5958]
  416f40:	adc    eax,0x75bc40bb
  416f45:	mov    ebx,0x40e30279
  416f4a:	push   ds
  416f4b:	dec    ebx
  416f4c:	rol    BYTE PTR [ebx-0x80],0x15
  416f50:	jl     0x416f34
  416f52:	xlat   BYTE PTR ds:[ebx]
  416f53:	sbb    cl,BYTE PTR [ebx-0x71a65963]
  416f59:	push   edi
  416f5a:	mov    ah,BYTE PTR [ecx]
  416f5c:	shr    DWORD PTR [ecx-0x5e0ea5ac],1
  416f62:	push   0x43
  416f64:	jge    0x416f55
  416f66:	fidivr WORD PTR [edi]
  416f68:	fiadd  WORD PTR [ebp-0x1c0c99f0]
  416f6e:	fistp  QWORD PTR [eax-0x22]
  416f71:	pop    ebp
  416f72:	in     al,0x72
  416f74:	cmp    al,0x6c
  416f76:	xchg   BYTE PTR [esi-0xee28911],ch
  416f7c:	xor    DWORD PTR [edi+0x606c00fd],0x5f
  416f83:	pop    ecx
  416f84:	pcmpeqb mm7,QWORD PTR [eax+ebp*2-0x66eb4f46]
  416f8c:	test   DWORD PTR [edi+0x702f51d2],ebx
  416f92:	and    eax,0x6115ed3b
  416f97:	sub    al,0x2a
  416f99:	jno    0x416f38
  416f9b:	aas    
  416f9c:	div    WORD PTR [esi-0x5f]
  416fa0:	xchg   DWORD PTR [esi+0xa7b1727],ebx
  416fa6:	cli    
  416fa7:	xlat   BYTE PTR ds:[ebx]
  416fa8:	jbe    0x417015
  416faa:	ret    0x5254
  416fad:	cmp    al,0x9a
  416faf:	stos   DWORD PTR es:[edi],eax
  416fb0:	push   edx
  416fb1:	jecxz  0x416fa8
  416fb3:	push   eax
  416fb4:	inc    eax
  416fb5:	ins    DWORD PTR es:[edi],dx
  416fb6:	invd   
  416fb8:	lock lock sub edi,ebx
  416fbc:	aam    0x67
  416fbe:	inc    esp
  416fbf:	les    ebp,FWORD PTR [ebx+0x787c3793]
  416fc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fc6:	fst    DWORD PTR [edi]
  416fc8:	xchg   ecx,eax
  416fc9:	pop    ebx
  416fca:	push   0x5d
  416fcc:	adc    BYTE PTR [ecx-0x56],bl
  416fcf:	and    al,0xa5
  416fd1:	(bad)
  416fd4:	repnz pop ss
  416fd6:	inc    eax
  416fd7:	mov    al,ds:0x2e55c121
  416fdc:	xchg   esi,eax
  416fdd:	ss sbb ebx,eax
  416fe0:	cmp    eax,0x6c89a6e7
  416fe5:	cld    
  416fe6:	sbb    al,0xc7
  416fe8:	call   0x4b010c76
  416fed:	push   ecx
  416fee:	cdq    
  416fef:	iret   
  416ff0:	bound  ebx,QWORD PTR [ebx+eax*2+0xa]
  416ff4:	dec    ebp
  416ff5:	pop    ebx
  416ff6:	sbb    bh,BYTE PTR [eax]
  416ff8:	push   edx
  416ff9:	inc    esp
  416ffa:	dec    esi
  416ffb:	xchg   DWORD PTR [eax-0x74],edi
  416ffe:	not    DWORD PTR [ebx+ebx*8+0x30]
  417002:	cdq    
  417003:	add    al,0xb4
  417005:	push   ebp
  417006:	xchg   esi,eax
  417007:	and    al,0x7c
  417009:	adc    eax,edx
  41700b:	call   0x121a:0x34be935b
  417012:	dec    eax
  417013:	outs   dx,BYTE PTR ds:[esi]
  417014:	mov    BYTE PTR [edx+0x37],0x10
  417018:	cmp    eax,ecx
  41701a:	adc    bh,BYTE PTR [eax-0x2d7cdd0a]
  417020:	push   eax
  417021:	or     al,0xaa
  417023:	and    eax,0x5e3a50d
  417028:	ja     0x41702b
  41702a:	popf   
  41702b:	stc    
  41702c:	scas   eax,DWORD PTR es:[edi]
  41702d:	pop    edi
  41702e:	mov    eax,ds:0xf73b3d47
  417033:	pop    ecx
  417034:	fdivr  DWORD PTR ds:0x67f67057
  41703a:	mov    ds:0x1b6e108f,eax
  41703f:	mov    ecx,0x4c16dd53
  417044:	fidiv  DWORD PTR [edx+0x56a0dcd9]
  41704a:	shr    DWORD PTR [ebp-0x24],1
  41704d:	or     ebp,DWORD PTR [eax-0x2405ad89]
  417053:	pusha  
  417054:	dec    edi
  417055:	pop    es
  417056:	jo     0x417040
  417058:	call   0x8c2e:0x8f37771a
  41705f:	and    dh,cl
  417061:	repnz div cl
  417064:	neg    ebp
  417066:	pop    ebx
  417067:	out    dx,al
  417068:	dec    esi
  417069:	jne    0x417027
  41706b:	pop    ebx
  41706c:	aad    0x9c
  41706e:	iret   
  41706f:	push   es
  417070:	inc    ebp
  417071:	retf   0xa33b
  417074:	idiv   BYTE PTR [esi-0xbcf7e63]
  41707a:	xor    BYTE PTR [ebx+0x62],bh
  41707d:	(bad)  
  41707e:	imul   BYTE PTR [ebx+0x41adedf4]
  417084:	in     eax,0xd0
  417086:	mov    cl,0xd8
  417088:	pop    esi
  417089:	je     0x4170d8
  41708b:	push   esi
  41708c:	adc    esp,ecx
  41708e:	loope  0x4170df
  417090:	inc    esp
  417091:	xchg   edi,eax
  417092:	shl    dh,0x2f
  417095:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417096:	pop    eax
  417097:	arpl   dx,si
  417099:	xor    al,BYTE PTR [eax]
  41709b:	sar    BYTE PTR [eax-0x441ecaca],1
  4170a1:	cwde   
  4170a2:	fwait
  4170a3:	stc    
  4170a4:	std    
  4170a5:	dec    ecx
  4170a6:	outs   dx,BYTE PTR ds:[esi]
  4170a7:	push   esp
  4170a8:	dec    edi
  4170a9:	in     al,0xf9
  4170ab:	push   0x5fae838b
  4170b0:	fbld   TBYTE PTR [eax+0x2c]
  4170b3:	jmp    DWORD PTR [edx]
  4170b5:	ret    0xb370
  4170b8:	mov    ecx,0x946f3d5e
  4170bd:	lods   al,BYTE PTR ds:[esi]
  4170be:	add    cl,al
  4170c0:	je     0x417104
  4170c2:	push   es
  4170c3:	bound  ebp,QWORD PTR [ebx+0xc]
  4170c6:	sub    edi,DWORD PTR [ebx]
  4170c8:	add    BYTE PTR [esi],bh
  4170ca:	inc    esi
  4170cb:	jns    0x41707e
  4170cd:	adc    eax,0x651cacb7
  4170d2:	hlt    
  4170d3:	jae    0x41710c
  4170d5:	hlt    
  4170d6:	imul   BYTE PTR [eax+ecx*8]
  4170d9:	ror    al,1
  4170db:	mov    edi,0xe482440f
  4170e0:	out    dx,al
  4170e1:	xchg   edx,eax
  4170e2:	iret   
  4170e3:	adc    al,0xc
  4170e5:	aad    0x50
  4170e7:	push   edx
  4170e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170e9:	sub    eax,DWORD PTR [ebx+0x68]
  4170ec:	xchg   edx,eax
  4170ed:	pop    edx
  4170ee:	xchg   ebx,eax
  4170ef:	mov    bh,0x4f
  4170f1:	popa   
  4170f2:	xlat   BYTE PTR ds:[ebx]
  4170f3:	pop    ds
  4170f4:	jns    0x417146
  4170f6:	clc    
  4170f7:	pop    ebx
  4170f8:	mov    ebp,0xfb244f45
  4170fd:	dec    ebx
  4170fe:	add    DWORD PTR [ebx-0x6f299a76],esp
  417104:	adc    al,0xd4
  417106:	ficom  DWORD PTR [edi-0x26]
  417109:	retf   0x1f0e
  41710c:	fcomp  QWORD PTR [edx+ebx*8]
  41710f:	sub    BYTE PTR [ebx*1-0x3188c9b1],0x18
  417117:	jecxz  0x41717d
  417119:	lods   eax,DWORD PTR ds:[esi]
  41711a:	in     eax,dx
  41711b:	popa   
  41711c:	push   ss
  41711d:	stos   BYTE PTR es:[edi],al
  41711e:	aas    
  41711f:	ret    
  417120:	dec    ecx
  417121:	call   0x97ea44f2
  417126:	arpl   WORD PTR [edx],cx
  417128:	sahf   
  417129:	lahf   
  41712a:	aad    0x1a
  41712c:	xor    al,BYTE PTR [esi]
  41712e:	int3   
  41712f:	(bad)  [edi+0x34a1b154]
  417135:	xchg   edx,eax
  417136:	aaa    
  417137:	cs xchg ebx,eax
  417139:	out    dx,eax
  41713a:	or     eax,0x553f0bc6
  41713f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417140:	sub    edx,esp
  417142:	fmul   st,st(1)
  417144:	mov    DWORD PTR [edi],esi
  417146:	test   BYTE PTR [edx+edi*1+0x79],dl
  41714a:	jmp    0x41718e
  41714c:	pusha  
  41714d:	add    DWORD PTR [ebx+ebp*4-0x36d985d2],ebp
  417154:	neg    BYTE PTR [ebp-0x6b3f22aa]
  41715a:	cmp    eax,0xd25cbb01
  41715f:	or     al,0x7
  417161:	dec    ebp
  417162:	call   0x1c95c024
  417167:	test   BYTE PTR [eax+0x78],ah
  41716a:	cmp    al,0x2d
  41716c:	sbb    al,0x51
  41716e:	push   es
  41716f:	jne    0x4171cb
  417171:	mov    bl,0x2c
  417173:	push   ss
  417174:	xchg   esi,eax
  417175:	push   ebp
  417176:	xlat   BYTE PTR ds:[ebx]
  417177:	cdq    
  417178:	stos   BYTE PTR es:[edi],al
  417179:	sahf   
  41717a:	test   ebp,edi
  41717c:	je     0x417172
  41717e:	dec    edx
  41717f:	fldcw  WORD PTR [ebp+esi*8-0x18318389]
  417186:	cmp    al,0xd6
  417188:	retf   0xde4b
  41718b:	or     BYTE PTR [eax+0x31],cl
  41718e:	retf   0xbaaa
  417191:	sub    al,0x93
  417193:	fldenv [ebx]
  417195:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417196:	adc    ah,0xb8
  417199:	std    
  41719a:	imul   eax,DWORD PTR [ebp+0x1e5cc560],0xffffffe0
  4171a1:	std    
  4171a2:	inc    ebp
  4171a3:	ja     0x4171b4
  4171a5:	(bad)  
  4171a6:	stos   DWORD PTR es:[edi],eax
  4171a7:	push   ebx
  4171a8:	test   DWORD PTR [edi+0x1efe3c4d],edi
  4171ae:	dec    esi
  4171af:	push   esi
  4171b0:	scas   eax,DWORD PTR es:[edi]
  4171b1:	iret   
  4171b2:	sbb    ebp,edx
  4171b4:	enter  0x8373,0xd5
  4171b8:	ja     0x41721a
  4171ba:	jno    0x417167
  4171bc:	dec    edx
  4171bd:	aaa    
  4171be:	loop   0x4171d5
  4171c0:	mov    cl,0x16
  4171c2:	fcomip st,st(7)
  4171c4:	push   0x9fc98507
  4171c9:	pop    esp
  4171ca:	in     al,0x2a
  4171cc:	mov    eax,0xd334a8f0
  4171d1:	enter  0xe623,0x90
  4171d5:	dec    ebp
  4171d6:	add    edx,edx
  4171d8:	mov    dl,0x6a
  4171da:	icebp  
  4171db:	add    eax,0x2cc3f7d9
  4171e0:	(bad)  
  4171e1:	lods   al,BYTE PTR ds:[esi]
  4171e2:	fst    QWORD PTR [ecx]
  4171e4:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171e6:	rcr    BYTE PTR [edx-0x211eea26],0xa5
  4171ed:	ja     0x4171e7
  4171ef:	pop    ss
  4171f0:	fiadd  WORD PTR [eax]
  4171f2:	call   0xc90834f6
  4171f7:	out    dx,al
  4171f8:	(bad)  
  4171fa:	xchg   ebx,eax
  4171fb:	shr    DWORD PTR [ecx+0x12],cl
  4171fe:	stos   BYTE PTR es:[edi],al
  4171ff:	push   esi
  417200:	(bad)  
  417201:	std    
  417202:	ror    DWORD PTR [edx-0x7e0cc48d],0xb1
  417209:	loop   0x417211
  41720b:	push   esi
  41720c:	mov    dh,0x87
  41720e:	cmp    BYTE PTR [edx],cl
  417210:	cmp    eax,0xb8bf5c42
  417215:	mov    edx,0xfb611ad4
  41721a:	mov    edx,edi
  41721c:	sbb    BYTE PTR [ecx-0x4c],bh
  41721f:	push   0x53f358c6
  417224:	jns    0x4171bb
  417226:	frstor [ecx-0x50a900e0]
  41722c:	cmp    al,0xad
  41722e:	add    ecx,edx
  417230:	pop    eax
  417231:	retf   0xf1fb
  417234:	jg     0x4172b4
  417236:	retf   0x2125
  417239:	mov    WORD PTR [edi],es
  41723b:	pop    ecx
  41723c:	mov    eax,0xc2d507ee
  417241:	mov    WORD PTR [edx+0x5d],fs
  417244:	dec    ebx
  417245:	sbb    BYTE PTR [ebx+0x64],0xee
  417249:	retf   
  41724a:	shl    DWORD PTR [edx],cl
  41724c:	mov    esi,0x6021d309
  417251:	xor    al,0xdb
  417253:	fmul   QWORD PTR [esi-0x47805641]
  417259:	xor    eax,0xf9a5d920
  41725e:	mov    edx,0x7f3f786e
  417263:	std    
  417264:	and    al,0x87
  417266:	push   ebp
  417267:	mov    ch,0x37
  417269:	xor    al,0x24
  41726b:	pop    ds
  41726c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41726d:	test   DWORD PTR [edi],eax
  41726f:	push   ebp
  417270:	fucomip st,st(5)
  417272:	push   0xffffff9c
  417274:	add    BYTE PTR [edx],dl
  417276:	fist   WORD PTR [edi]
  417278:	inc    esi
  417279:	xor    BYTE PTR [ebx-0x27],ah
  41727c:	frstor [esi+0x7f7768c]
  417282:	xchg   edx,eax
  417283:	cmp    dh,cl
  417285:	jno    0x41725e
  417287:	pop    ss
  417288:	xor    eax,DWORD PTR [ecx+ebp*2-0x14d0824]
  41728f:	cmp    al,0x13
  417291:	dec    ebp
  417292:	add    DWORD PTR [ecx],esi
  417294:	scas   eax,DWORD PTR es:[edi]
  417295:	enter  0xdeaf,0xf5
  417299:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41729a:	and    eax,0x61ed868a
  41729f:	aad    0x67
  4172a1:	or     ebx,DWORD PTR [esi-0x1d]
  4172a4:	sbb    BYTE PTR [ebx+0x14],ch
  4172a7:	out    dx,eax
  4172a8:	scas   al,BYTE PTR es:[edi]
  4172a9:	xchg   ebx,eax
  4172aa:	dec    eax
  4172ab:	xor    ah,al
  4172ad:	sbb    ah,dh
  4172af:	xchg   ecx,eax
  4172b0:	mov    ecx,0xf70f9b9a
  4172b5:	pop    ds
  4172b6:	mov    ecx,0x347a5ec4
  4172bb:	inc    eax
  4172bc:	and    eax,0x894dca2
  4172c1:	hlt    
  4172c2:	outs   dx,BYTE PTR ds:[esi]
  4172c3:	fs adc al,0x2c
  4172c6:	pop    ebx
  4172c7:	repnz fisub WORD PTR [ecx]
  4172ca:	mov    ah,0x4a
  4172cc:	adc    ah,bl
  4172ce:	not    DWORD PTR [esi+0x686b0c67]
  4172d4:	in     al,0x72
  4172d6:	pop    esi
  4172d7:	stos   DWORD PTR es:[edi],eax
  4172d8:	arpl   WORD PTR [esi],bx
  4172da:	fiadd  WORD PTR [edx]
  4172dc:	and    eax,0x142fe012
  4172e1:	neg    ebx
  4172e3:	mov    esp,0x1adf621d
  4172e8:	jne    0x4172e0
  4172ea:	mov    edi,edx
  4172ec:	or     eax,0xe66ae046
  4172f1:	adc    DWORD PTR [edx],0x9194e7b1
  4172f7:	mov    edi,0x4ea0f01f
  4172fc:	push   ebp
  4172fd:	mov    ?,edx
  4172ff:	adc    dh,0x37
  417302:	les    edi,FWORD PTR [ebx]
  417304:	popf   
  417305:	shl    DWORD PTR [ebp+0x62],1
  417308:	cdq    
  417309:	call   0x521cc6f7
  41730e:	fnstsw WORD PTR [ebx]
  417310:	mov    ecx,0xa223a0fc
  417315:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417316:	pop    esp
  417317:	dec    edi
  417318:	mov    DWORD PTR [eax+0x7],0x1d414260
  41731f:	mov    gs,WORD PTR [ebp-0x52]
  417322:	mov    eax,0x8c5a3664
  417327:	add    BYTE PTR [ecx+ecx*8],dh
  41732a:	mov    esp,0x16fd92de
  41732f:	mov    ds:0x95f96c4c,al
  417334:	xor    ebp,DWORD PTR ds:0x17fcb21c
  41733a:	sbb    cl,BYTE PTR [ebx-0x31]
  41733d:	pop    ebp
  41733e:	mov    BYTE PTR [ebx+ebp*8],cl
  417341:	mov    esi,0x3f5c6526
  417346:	cwde   
  417347:	jae    0x4172fd
  417349:	push   ss
  41734a:	int3   
  41734b:	fs cli 
  41734d:	(bad)  
  41734e:	aad    0x92
  417350:	cs xchg esi,eax
  417352:	sbb    eax,0xe21b79ed
  417357:	das    
  417358:	cmp    eax,0xe48bc41
  41735d:	icebp  
  41735e:	lock mov bl,0x94
  417361:	mov    ds:0x95d198a8,eax
  417366:	fcom   st(0)
  417368:	sub    al,0xe3
  41736a:	sub    DWORD PTR [edx-0x7bf0f3f8],ebx
  417370:	pop    DWORD PTR ds:0x4d824b83
  417376:	call   0x2ea1e186
  41737b:	cwde   
  41737c:	retf   
  41737d:	stos   BYTE PTR es:[edi],al
  41737e:	icebp  
  41737f:	xchg   edi,eax
  417380:	ret    0xfd99
  417383:	sub    al,0xa5
  417385:	sub    esi,DWORD PTR [ebx+0x34]
  417388:	loopne 0x41738d
  41738a:	or     DWORD PTR gs:[eax],esi
  41738d:	push   esp
  41738e:	cmp    ah,BYTE PTR [ecx-0x46]
  417391:	cmp    bh,BYTE PTR [edi]
  417393:	imul   edx,DWORD PTR [eax+0x422f11e0],0xffffffb2
  41739a:	mov    ecx,0x453480d7
  41739f:	mov    ds:0xd8425fc8,eax
  4173a4:	out    0x7b,al
  4173a6:	das    
  4173a7:	add    ch,cl
  4173a9:	test   bl,dh
  4173ab:	ins    BYTE PTR es:[edi],dx
  4173ac:	and    DWORD PTR [ebx],edx
  4173ae:	mov    ah,0x48
  4173b0:	shl    DWORD PTR [edx],0x61
  4173b3:	aaa    
  4173b4:	popf   
  4173b5:	loop   0x41741c
  4173b7:	pop    es
  4173b8:	fldenv [eax+0x61]
  4173bb:	std    
  4173bc:	(bad)  [eax+0x35]
  4173bf:	lods   eax,DWORD PTR ds:[esi]
  4173c0:	dec    esi
  4173c1:	cli    
  4173c2:	mov    al,ds:0x716a5acd
  4173c7:	sub    eax,0x974f23c6
  4173cc:	push   ss
  4173cd:	adc    al,0xca
  4173cf:	jne    0x417365
  4173d1:	mov    ah,0x40
  4173d3:	xor    eax,0xcea4f371
  4173d8:	add    eax,0xc9bcd3e5
  4173dd:	cs jnp 0x4173fb
  4173e0:	arpl   bx,cx
  4173e2:	(bad)  
  4173e3:	int    0xeb
  4173e5:	iret   
  4173e6:	push   cs
  4173e7:	jnp    0x41739b
  4173e9:	xor    DWORD PTR [ebp+0x4a],ebx
  4173ec:	mov    cl,dh
  4173ee:	inc    DWORD PTR [edx]
  4173f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173f1:	mov    dl,0xa3
  4173f3:	mov    WORD PTR [ecx+0x27ba80d7],?
  4173f9:	mov    ebp,0x1a002863
  4173fe:	inc    esp
  4173ff:	(bad)  
  417400:	imul   ebx,DWORD PTR [ebx+0x9],0xffffff9d
  417404:	or     BYTE PTR [ebx-0x4b],dh
  417407:	(bad)  
  417408:	rep lods eax,DWORD PTR ds:[esi]
  41740a:	mov    edx,0x45682b10
  41740f:	mov    ?,WORD PTR [esi-0x71]
  417412:	inc    edx
  417413:	push   0x1af3e49e
  417418:	inc    eax
  417419:	jae    0x4173b1
  41741b:	std    
  41741c:	pop    ecx
  41741d:	cmp    al,0xb9
  41741f:	push   es
  417420:	jge    0x4173de
  417422:	add    eax,0xe03c533e
  417427:	jmp    0x8985395d
  41742c:	retf   0x7d59
  41742f:	mov    ch,0xe5
  417431:	fwait
  417432:	mov    bl,0xf6
  417434:	sbb    BYTE PTR [eax],bl
  417436:	ret    
  417437:	popf   
  417438:	jmp    DWORD PTR [edi-0x2ca60c61]
  41743e:	mov    esi,esp
  417440:	outs   dx,BYTE PTR ds:[esi]
  417441:	sub    eax,0x6d0819ca
  417446:	xchg   edx,eax
  417447:	pop    eax
  417448:	and    BYTE PTR [edx-0x7c],bl
  41744b:	mov    ebp,0x3157c5ac
  417450:	adc    al,0x18
  417452:	push   ss
  417453:	ja     0x4174a9
  417455:	in     al,dx
  417456:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417457:	pop    edi
  417458:	(bad)  
  417459:	lods   eax,DWORD PTR ds:[esi]
  41745a:	dec    esp
  41745b:	unpckhps xmm4,XMMWORD PTR [edx]
  41745e:	cmp    al,0x8b
  417460:	dec    esi
  417461:	jp     0x417461
  417463:	imul   ebp,esi,0xd277e4d
  417469:	sub    dl,BYTE PTR [edi]
  41746b:	popf   
  41746c:	mov    eax,DWORD PTR [ebp+0x13034240]
  417472:	mov    dh,0x1
  417474:	test   BYTE PTR [ebp+0x726de6d1],dl
  41747a:	jno    0x4174d3
  41747c:	jmp    0xbbe5fdbc
  417481:	aam    0x22
  417483:	imul   edx,DWORD PTR [ecx-0x9],0xffffff9f
  417487:	in     al,dx
  417488:	daa    
  417489:	dec    edi
  41748a:	xor    ebp,DWORD PTR [esi]
  41748c:	dec    ebp
  41748d:	div    DWORD PTR [esi]
  41748f:	push   cs
  417490:	sar    DWORD PTR [esi+0x52],cl
  417493:	in     al,0x5a
  417495:	(bad)  [edx+0x2f4f8006]
  41749b:	int    0x12
  41749d:	in     al,dx
  41749e:	mov    ch,0x99
  4174a0:	xchg   esp,eax
  4174a1:	sti    
  4174a2:	mov    dl,ah
  4174a4:	adc    DWORD PTR [ebx-0x38769f35],0x47
  4174ab:	fimul  DWORD PTR [eax-0x6f3a0459]
  4174b1:	add    cl,dh
  4174b3:	push   eax
  4174b4:	test   eax,ecx
  4174b6:	add    al,0xc2
  4174b8:	loope  0x417505
  4174ba:	into   
  4174bb:	jp     0x417479
  4174bd:	imul   ebp,DWORD PTR [ebp+0x1ccaf90f],0x7b
  4174c4:	ret    0x23cf
  4174c7:	mov    al,0xa3
  4174c9:	es xchg ebx,eax
  4174cb:	sub    bh,cl
  4174cd:	jl     0x417521
  4174cf:	into   
  4174d0:	popf   
  4174d1:	push   0xfffffff5
  4174d3:	and    eax,0xd1564c27
  4174d8:	mov    ds:0x926674f8,al
  4174dd:	or     DWORD PTR [ecx-0x76e9d994],esp
  4174e3:	outs   dx,DWORD PTR ds:[esi]
  4174e4:	jbe    0x4174bf
  4174e6:	inc    ebp
  4174e7:	outs   dx,DWORD PTR ds:[esi]
  4174e8:	cmp    ebp,DWORD PTR [ebx+0xf5f4012]
  4174ee:	jg     0x4174c2
  4174f0:	push   edx
  4174f1:	jle    0x417497
  4174f3:	stc    
  4174f4:	in     al,dx
  4174f5:	jg     0x417570
  4174f7:	mov    bh,0xa6
  4174f9:	mov    ah,0xcc
  4174fb:	sub    DWORD PTR [ebp+ecx*8+0x21c6c216],edx
  417502:	inc    ebp
  417503:	push   esi
  417504:	sbb    bl,bl
  417506:	inc    edi
  417507:	hlt    
  417508:	mov    edi,0x1598ba60
  41750d:	push   edx
  41750e:	xchg   ebx,eax
  41750f:	inc    esp
  417510:	out    dx,eax
  417511:	popa   
  417512:	in     al,dx
  417513:	mov    ebx,0x81b37c5a
  417518:	test   al,0x3d
  41751a:	repz cmp dl,BYTE PTR ds:0x8b0cd472
  417521:	data16 fwait
  417523:	or     al,0x94
  417525:	data16 jl 0x417548
  417528:	dec    eax
  417529:	mov    ds:0xa1f40121,eax
  41752e:	arpl   si,dx
  417530:	addr16 into 
  417532:	test   al,0xf4
  417534:	pop    esp
  417535:	hlt    
  417536:	repnz aam 0x98
  417539:	in     eax,0x8b
  41753b:	aam    0x64
  41753d:	xor    edi,ebp
  41753f:	std    
  417540:	mov    esi,0x33476e30
  417545:	(bad)  [ecx+edx*2]
  417548:	cld    
  417549:	lods   eax,DWORD PTR ds:[esi]
  41754a:	fdivrp st(4),st
  41754c:	push   ss
  41754d:	rcr    DWORD PTR [ebx+0x2fef0115],cl
  417553:	sbb    DWORD PTR [edi-0x36],ecx
  417556:	xlat   BYTE PTR ds:[ebx]
  417557:	or     al,0xa3
  417559:	neg    BYTE PTR [eax+ebx*2]
  41755c:	lds    ebp,FWORD PTR ds:0xec82cb6e
  417562:	fist   WORD PTR [ebx-0x10b7fee]
  417568:	xchg   ebx,eax
  417569:	pop    edx
  41756a:	xchg   esi,eax
  41756b:	mov    esi,0xa71af07
  417570:	mov    esp,0xb1159735
  417575:	mov    bl,0xf2
  417577:	xchg   esp,eax
  417578:	dec    ebx
  417579:	add    ah,ch
  41757b:	mov    ds:0x76d5f4f6,al
  417580:	mov    ds:0x3f588ff7,eax
  417585:	adc    cl,al
  417587:	lods   al,BYTE PTR ds:[esi]
  417588:	stos   BYTE PTR es:[edi],al
  417589:	repz add esp,DWORD PTR [ecx-0x34]
  41758d:	daa    
  41758e:	cld    
  41758f:	and    al,0x1
  417591:	out    0x23,al
  417593:	(bad)  
  417594:	pop    edi
  417595:	lds    esi,FWORD PTR [ebp-0x7f5e6ac4]
  41759b:	and    al,0x4f
  41759d:	pop    edi
  41759e:	ins    BYTE PTR es:[edi],dx
  41759f:	jle    0x41761a
  4175a1:	ret    
  4175a2:	lock mov ecx,0xaa23247b
  4175a8:	mov    ecx,0xd2b52061
  4175ad:	add    BYTE PTR [esi],0x8f
  4175b0:	dec    esi
  4175b1:	das    
  4175b2:	jle    0x4175bf
  4175b4:	cdq    
  4175b5:	dec    ebp
  4175b6:	ret    0xbe60
  4175b9:	fist   DWORD PTR [ecx-0x4e]
  4175bc:	stc    
  4175bd:	je     0x41762d
  4175bf:	js     0x417547
  4175c1:	push   eax
  4175c2:	dec    eax
  4175c3:	out    dx,eax
  4175c4:	mov    ebp,0x27432d8
  4175c9:	jbe    0x417597
  4175cb:	not    BYTE PTR es:[ebx-0x6c1f0ef3]
  4175d2:	loop   0x41755a
  4175d4:	popa   
  4175d5:	ja     0x4175e9
  4175d7:	clc    
  4175d8:	push   cs
  4175d9:	push   ecx
  4175da:	cmp    ch,bl
  4175dc:	(bad)  
  4175dd:	mov    esp,0xdb545f69
  4175e2:	xor    ebp,DWORD PTR [ebx-0x44db5bfb]
  4175e8:	adc    eax,0x77b44ee6
  4175ed:	call   0x5b2d:0x53b99317
  4175f4:	in     eax,0x81
  4175f6:	mov    ah,0x4a
  4175f8:	inc    ebp
  4175f9:	test   al,0xb5
  4175fb:	mov    ebx,0x7425b31b
  417600:	call   FWORD PTR [ebx]
  417602:	imul   ecx,DWORD PTR [eax+0x5c],0x7cfd160d
  417609:	xchg   ecx,eax
  41760a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41760b:	push   edx
  41760c:	rcpps  xmm0,xmm2
  41760f:	and    BYTE PTR ds:0x82ef9b37,ch
  417615:	sahf   
  417616:	data16 sbb dl,cl
  417619:	lahf   
  41761a:	les    edi,FWORD PTR [ebp-0x59]
  41761d:	dec    esi
  41761e:	leave  
  41761f:	pusha  
  417620:	mov    ebx,DWORD PTR [edx]
  417622:	scas   al,BYTE PTR es:[edi]
  417623:	mov    dl,0x37
  417625:	add    BYTE PTR [ebx+0x72],bh
  417628:	add    eax,0xe1620a2f
  41762d:	scas   al,BYTE PTR es:[edi]
  41762e:	fwait
  41762f:	push   0xba659a74
  417634:	int    0xfb
  417636:	xlat   BYTE PTR ds:[ebx]
  417637:	repz xor ecx,edx
  41763a:	sub    eax,DWORD PTR [edi+0x7c44074a]
  417640:	xchg   esp,eax
  417641:	hlt    
  417642:	cli    
  417643:	push   edx
  417644:	push   ecx
  417645:	pop    edi
  417646:	sub    dl,dl
  417648:	test   al,0x59
  41764a:	mov    dl,0x47
  41764c:	js     0x4176c9
  41764e:	xor    BYTE PTR [esi],ch
  417650:	push   eax
  417651:	rol    BYTE PTR [ebx],1
  417653:	addr16 dec esi
  417655:	pushf  
  417656:	mov    eax,0xc130ce71
  41765b:	scas   eax,DWORD PTR es:[edi]
  41765c:	sbb    edx,edi
  41765e:	add    BYTE PTR [esi+edi*4],bl
  417661:	lods   eax,DWORD PTR ds:[esi]
  417662:	xor    DWORD PTR [ebx+0x6ba94f24],0x6b9cb0a4
  41766c:	fistp  QWORD PTR [esi]
  41766e:	aaa    
  41766f:	mov    dl,0xa5
  417671:	pop    es
  417672:	mov    ecx,0x59cb5b4c
  417677:	jle    0x417665
  417679:	or     al,0x78
  41767b:	inc    esi
  41767c:	and    eax,0x1ffcf8b3
  417681:	pop    ds
  417682:	mov    esp,0x1d4b61b4
  417687:	push   edi
  417688:	sbb    BYTE PTR [edx],dl
  41768a:	ret    
  41768b:	leave  
  41768c:	mov    ebx,0xb22c5938
  417691:	sbb    DWORD PTR [ecx],ebp
  417693:	clc    
  417694:	xchg   BYTE PTR [ebp+0x19c457a6],dh
  41769a:	jnp    0x417708
  41769c:	xchg   DWORD PTR [eax+0x18e88b2c],edx
  4176a2:	ficomp WORD PTR [edi+0x65]
  4176a5:	cmc    
  4176a6:	dec    ebp
  4176a7:	fdiv   st(4),st
  4176a9:	and    DWORD PTR [edi],eax
  4176ab:	popa   
  4176ac:	cmc    
  4176ad:	xchg   esp,eax
  4176ae:	push   cs
  4176af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176b0:	arpl   di,bp
  4176b2:	data16 jo 0x417637
  4176b5:	sahf   
  4176b6:	dec    eax
  4176b7:	jae    0x4176f7
  4176b9:	repz in al,dx
  4176bb:	xor    DWORD PTR [eax],0xe09d3270
  4176c1:	or     eax,0x134dff88
  4176c6:	arpl   WORD PTR [esi+0x2c],bp
  4176c9:	das    
  4176ca:	cdq    
  4176cb:	popa   
  4176cc:	jmp    0xd7df7fe3
  4176d1:	jle    0x417673
  4176d3:	out    dx,al
  4176d4:	jb     0x417668
  4176d6:	add    eax,0x7233c9ed
  4176db:	jmp    0x41766d
  4176dd:	jo     0x4176f4
  4176df:	sub    al,0x50
  4176e1:	daa    
  4176e2:	(bad)  
  4176e3:	imul   ebx,DWORD PTR [ebp-0x9],0xffffffea
  4176e7:	pusha  
  4176e8:	xchg   BYTE PTR [ebp+0x5c1d5855],dl
  4176ee:	and    DWORD PTR [edi],esi
  4176f0:	xor    BYTE PTR ds:0x10875c5b,dh
  4176f6:	push   edx
  4176f7:	cmp    cl,ch
  4176f9:	enter  0xe83c,0x50
  4176fd:	pop    esp
  4176fe:	inc    ebp
  4176ff:	dec    ebx
  417700:	adc    DWORD PTR ds:0xba006db,esp
  417706:	jne    0x41776e
  417708:	bound  eax,QWORD PTR [ebx-0x23]
  41770b:	vsqrtsd xmm1,xmm3,xmm6
  41770f:	outs   dx,BYTE PTR ds:[esi]
  417710:	dec    esi
  417711:	loope  0x417702
  417713:	adc    eax,0x92e5cf76
  417718:	repnz in eax,dx
  41771a:	cli    
  41771b:	stos   DWORD PTR es:[edi],eax
  41771c:	or     esi,DWORD PTR [ecx]
  41771e:	cs push ecx
  417720:	ret    
  417721:	sub    BYTE PTR [edx+0x3dec9fcb],bh
  417727:	ss xor eax,0xc84d5472
  41772d:	mov    ecx,0x48c3086e
  417732:	inc    ecx
  417733:	int3   
  417734:	or     dh,0xbf
  417737:	push   esp
  417738:	push   edi
  417739:	js     0x41774f
  41773b:	cmp    esi,esi
  41773d:	stos   BYTE PTR es:[edi],al
  41773e:	mov    bh,0x1d
  417740:	scas   al,BYTE PTR es:[edi]
  417741:	das    
  417742:	fcom   DWORD PTR [ebx]
  417744:	push   0x4a20188c
  417749:	imul   edx,DWORD PTR [ecx+ecx*4],0x42869b30
  417750:	adc    al,0xb8
  417752:	repnz call 0x2dc2:0x310503de
  41775a:	pop    edi
  41775b:	nop
  41775c:	pop    esi
  41775d:	sbb    esp,DWORD PTR [ebp+0x58]
  417760:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417761:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417762:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417763:	inc    ebp
  417764:	ins    BYTE PTR es:[edi],dx
  417765:	fstp   QWORD PTR [ecx-0x5a]
  417768:	mov    DWORD PTR [edx+0x41bdc626],ebx
  41776e:	sahf   
  41776f:	adc    ebx,ebp
  417771:	or     eax,0x4064efd
  417776:	lea    ebx,[ebp+edx*4-0x13e00f2a]
  41777d:	sub    edi,DWORD PTR [ebx-0x63]
  417780:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417781:	mov    ch,0x9d
  417783:	outs   dx,BYTE PTR ds:[esi]
  417784:	jne    0x4177a2
  417786:	adc    DWORD PTR [eax+0x7],esp
  417789:	es out 0xfa,eax
  41778c:	ins    DWORD PTR es:[edi],dx
  41778d:	loope  0x4177a8
  41778f:	push   eax
  417790:	aad    0xfa
  417792:	sub    DWORD PTR [edi-0x759aaa2f],ebx
  417798:	mov    bh,0x5e
  41779a:	ss in  al,dx
  41779c:	adc    ebp,ebp
  41779e:	fwait
  41779f:	cmc    
  4177a0:	mov    edx,0x3197d588
  4177a5:	dec    esp
  4177a6:	in     eax,dx
  4177a7:	frstor [esi]
  4177a9:	retf   
  4177aa:	xor    DWORD PTR [esi],esi
  4177ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177ad:	push   cs
  4177ae:	mov    DWORD PTR [eax],eax
  4177b0:	data16 jb 0x4177de
  4177b3:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177b5:	push   0xec4d1b42
  4177ba:	stc    
  4177bb:	or     eax,0x2c7c0f09
  4177c0:	cmp    DWORD PTR cs:[edi],ebp
  4177c3:	mov    cl,0x92
  4177c5:	adc    eax,0x9be92a0f
  4177ca:	ss call 0x856c2e5c
  4177d0:	mov    edi,0x42b23748
  4177d5:	dec    ebx
  4177d6:	and    eax,0xd6ad7430
  4177db:	imul   edx,DWORD PTR [ebp+0x46],0xfffffff9
  4177df:	lahf   
  4177e0:	dec    edx
  4177e1:	adc    eax,0xca0c46d7
  4177e6:	or     cl,BYTE PTR [edi]
  4177e8:	or     al,0xe4
  4177ea:	pop    ecx
  4177eb:	shl    BYTE PTR [ecx-0x550067a7],1
  4177f1:	sub    al,0xfd
  4177f3:	ins    BYTE PTR es:[edi],dx
  4177f4:	xchg   ebx,eax
  4177f5:	mov    esi,0xd0c10592
  4177fa:	ret    0xfcee
  4177fd:	stos   DWORD PTR es:[edi],eax
  4177fe:	jns    0x4177a6
  417800:	mov    cl,0xa4
  417802:	xchg   esi,eax
  417803:	(bad)  
  417804:	fldenv [esi]
  417806:	shl    BYTE PTR [edi-0x4f],0x2a
  41780a:	jl     0x41786b
  41780c:	inc    ecx
  41780d:	push   esp
  41780e:	jae    0x41781e
  417810:	out    0x7,al
  417812:	(bad)  
  417813:	lods   eax,DWORD PTR ds:[esi]
  417814:	daa    
  417815:	xchg   DWORD PTR [ebx+0x7],ecx
  417818:	xor    BYTE PTR [ebx+edi*4],0x9
  41781c:	cmp    ah,BYTE PTR [ebx-0x3]
  41781f:	push   edx
  417820:	pop    ecx
  417821:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417822:	inc    edx
  417823:	push   ebp
  417824:	push   edi
  417825:	mov    dh,BYTE PTR [ebp+0x6f7ff723]
  41782b:	jbe    0x417873
  41782d:	(bad)  
  41782e:	mov    ?,WORD PTR ds:0x41cff9c5
  417834:	test   DWORD PTR [eax],ecx
  417836:	loop   0x41783c
  417838:	(bad)  
  417839:	mov    ebp,0xe1794819
  41783e:	aad    0x40
  417840:	neg    DWORD PTR [ebx]
  417842:	out    dx,al
  417843:	test   al,0x45
  417845:	mov    cl,0xee
  417847:	aad    0x2e
  417849:	push   ss
  41784a:	fwait
  41784b:	out    0xd9,al
  41784d:	es test eax,0xe886d3e6
  417853:	test   eax,0xd1131495
  417858:	dec    esp
  417859:	cmp    al,0x41
  41785b:	sub    dh,BYTE PTR [ebx+0x1cd7809c]
  417861:	or     BYTE PTR [esi],ah
  417863:	push   0xcdacc23e
  417868:	aas    
  417869:	shl    DWORD PTR [edx],1
  41786b:	push   eax
  41786c:	cmp    DWORD PTR [ebx+ebx*2],0x654bf664
  417873:	aaa    
  417874:	dec    edx
  417875:	sbb    edi,DWORD PTR [bp+si+0x571c]
  41787a:	icebp  
  41787b:	mov    esp,0x4e685e90
  417880:	push   edi
  417881:	add    BYTE PTR [edx-0x6a28f25b],bh
  417887:	mov    al,dh
  417889:	sahf   
  41788a:	mov    ds:0xca60840f,eax
  41788f:	adc    ebx,DWORD PTR [edi]
  417891:	jne    0x41788d
  417893:	inc    ebx
  417894:	mov    al,ds:0xac932f72
  417899:	(bad)  
  41789a:	sbb    eax,0x4d8c69cb
  41789f:	mov    ah,0xb8
  4178a1:	dec    ebx
  4178a2:	cmp    al,0xea
  4178a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178a5:	fdiv   st(3),st
  4178a7:	and    DWORD PTR [ebx],ecx
  4178a9:	cdq    
  4178aa:	lea    esp,[edi+ebx*4+0x7498139a]
  4178b1:	(bad)  
  4178b3:	test   eax,0x8b762b7e
  4178b8:	cdq    
  4178b9:	data16 cmp al,0x86
  4178bc:	pop    ds
  4178bd:	mov    WORD PTR [ebx],?
  4178bf:	and    esi,DWORD PTR [esi+0x5bae4c01]
  4178c5:	inc    eax
  4178c6:	push   esp
  4178c8:	mov    ecx,edx
  4178ca:	call   0x8c2d:0xa2f2676b
  4178d1:	sub    DWORD PTR [ebx],esp
  4178d3:	mov    ebp,0xde1c8402
  4178d8:	ins    BYTE PTR es:[edi],dx
  4178d9:	ret    
  4178da:	jmp    0x417865
  4178dc:	in     al,dx
  4178dd:	sub    bl,al
  4178df:	mov    edx,0x95fed099
  4178e4:	push   esi
  4178e5:	push   eax
  4178e6:	repnz shl DWORD PTR [eax],cl
  4178e9:	loop   0x417894
  4178eb:	push   eax
  4178ec:	test   DWORD PTR [ebx],edi
  4178ee:	sub    al,BYTE PTR [esi+0x49]
  4178f1:	retf   0x3ea7
  4178f4:	sti    
  4178f5:	in     eax,0xe5
  4178f7:	lahf   
  4178f8:	jnp    0x417910
  4178fa:	inc    esp
  4178fb:	and    BYTE PTR [esp+ecx*4-0x3b],al
  4178ff:	loop   0x41791f
  417901:	cmp    al,BYTE PTR [eax-0x3a0d2bb8]
  417907:	arpl   WORD PTR [esi+0x60e64fc7],ax
  41790d:	sti    
  41790e:	mov    esp,0xc5fe52d3
  417913:	sahf   
  417914:	sub    al,0x4a
  417916:	sbb    eax,0xdaf9d6cd
  41791b:	sahf   
  41791c:	loopne 0x417971
  41791e:	sbb    al,0xd0
  417920:	adc    al,0xdf
  417922:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417923:	add    DWORD PTR [edx],edi
  417925:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417926:	xor    eax,0x6e593a1f
  41792b:	ja     0x41795b
  41792d:	inc    ecx
  41792e:	or     al,0xf5
  417930:	push   edx
  417931:	cmc    
  417932:	aam    0x16
  417934:	call   0x7172:0x27b1bf0d
  41793b:	popa   
  41793c:	gs loope 0x417998
  41793f:	mov    esi,0x836099f
  417944:	push   ss
  417945:	jns    0x41797b
  417947:	or     cl,BYTE PTR [edx+0x29bd05dc]
  41794d:	xchg   ebx,eax
  41794e:	fptan  
  417950:	cvttps2pi mm2,QWORD PTR [eax+0x71]
  417954:	(bad)  
  417955:	jle    0x41790c
  417957:	cmp    eax,0x1644d6a9
  41795c:	imul   edx,DWORD PTR [edi+0x13509045],0x6e
  417963:	cmc    
  417964:	sbb    dh,ah
  417966:	pop    ebp
  417967:	popa   
  417968:	arpl   dx,sp
  41796a:	or     BYTE PTR [ecx-0x526e87a1],dl
  417970:	mov    ch,BYTE PTR [ecx-0x5eec305d]
  417976:	aaa    
  417977:	jmp    0x3b12802f
  41797c:	lds    ebx,FWORD PTR [ecx]
  41797e:	push   es
  41797f:	adc    DWORD PTR [edx-0x52],edx
  417982:	xchg   ebx,eax
  417983:	fs sti 
  417985:	dec    esp
  417986:	rcr    DWORD PTR [ebx],cl
  417988:	dec    eax
  417989:	push   ebx
  41798a:	jge    0x4179e4
  41798c:	fsub   st,st(2)
  41798e:	shl    BYTE PTR [ecx+0x69],1
  417991:	push   cs
  417992:	mov    ebx,0x8b482910
  417997:	mov    bh,0xe3
  417999:	hlt    
  41799a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41799b:	cmp    edi,DWORD PTR [edi+0x6700fa7e]
  4179a1:	iret   
  4179a2:	add    al,0x10
  4179a4:	and    ah,BYTE PTR [ecx-0x41b1e1a]
  4179aa:	cmp    cl,bl
  4179ac:	ja     0x417936
  4179ae:	cmp    DWORD PTR [ecx+0x1895a4f],0x13
  4179b5:	popa   
  4179b6:	in     al,0xbb
  4179b8:	clc    
  4179b9:	icebp  
  4179ba:	pop    eax
  4179bb:	pusha  
  4179bc:	sbb    ebp,DWORD PTR [ebp+0x1c3c97a6]
  4179c2:	loop   0x417965
  4179c4:	outs   dx,DWORD PTR ds:[esi]
  4179c5:	and    DWORD PTR [ebx-0x2f0f1949],0xffffffcd
  4179cc:	ja     0x4179e3
  4179ce:	repz iret 
  4179d0:	mov    edx,0xd48c6499
  4179d5:	xor    esi,DWORD PTR [eax]
  4179d7:	sub    al,0xf1
  4179d9:	mov    BYTE PTR [eax+0x6e06244a],bh
  4179df:	xchg   edx,eax
  4179e0:	(bad)  
  4179e1:	or     al,0x63
  4179e3:	rcr    BYTE PTR [ebx-0x18],1
  4179e6:	cmp    BYTE PTR [ebp-0x7a],cl
  4179e9:	mov    eax,ds:0xcd297f0
  4179ee:	gs js  0x417a51
  4179f1:	in     al,dx
  4179f2:	push   ecx
  4179f3:	push   ecx
  4179f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179f5:	push   0xf38cc5a0
  4179fa:	adc    al,ah
  4179fc:	pop    ecx
  4179fd:	rol    BYTE PTR [ebp+0x24],1
  417a00:	stc    
  417a01:	adc    DWORD PTR [esi+eax*4+0x6d],ebx
  417a05:	lock test eax,0xd1a692f8
  417a0b:	push   edx
  417a0c:	dec    edx
  417a0d:	xor    DWORD PTR [edi-0x3c],ebp
  417a10:	imul   DWORD PTR [eax]
  417a12:	or     edx,edi
  417a14:	(bad)
  417a18:	adc    al,0xd0
  417a1a:	or     al,BYTE PTR [edi-0x1f]
  417a1d:	lods   eax,DWORD PTR ds:[esi]
  417a1e:	push   esi
  417a1f:	sbb    al,0xe4
  417a21:	fcmovnu st,st(2)
  417a23:	mov    edi,0xed8b5c75
  417a28:	cld    
  417a29:	lods   al,BYTE PTR ds:[esi]
  417a2a:	dec    edx
  417a2b:	sbb    BYTE PTR [edi-0x61c52106],0xc4
  417a32:	jns    0x4179de
  417a34:	fbld   TBYTE PTR ds:0xb2776d6e
  417a3a:	lahf   
  417a3b:	jl     0x4179ec
  417a3d:	mov    al,0x8e
  417a3f:	dec    eax
  417a40:	arpl   WORD PTR fs:[ebx*2+0x4652419a],dx
  417a48:	mov    ah,0xde
  417a4a:	inc    edi
  417a4b:	mov    dh,0xf3
  417a4d:	dec    edx
  417a4e:	xchg   ebx,eax
  417a4f:	jb     0x417a1a
  417a51:	or     bh,dh
  417a53:	sbb    al,0x4f
  417a55:	in     al,dx
  417a56:	push   eax
  417a57:	or     eax,0xe683317e
  417a5c:	enter  0xf91d,0x3a
  417a60:	inc    ebp
  417a61:	icebp  
  417a62:	lock test DWORD PTR [ecx-0x1a],edx
  417a66:	xchg   esi,eax
  417a67:	cdq    
  417a68:	xchg   esp,eax
  417a69:	pushf  
  417a6a:	push   ecx
  417a6c:	out    dx,al
  417a6d:	xor    DWORD PTR [ebx+0x2619c86e],eax
  417a73:	pop    ebx
  417a74:	xchg   DWORD PTR [ecx-0xa],ebp
  417a77:	mov    ecx,0x3bfb319f
  417a7c:	and    BYTE PTR [edi],dh
  417a7e:	fcmovne st,st(1)
  417a80:	fwait
  417a81:	loope  0x417af1
  417a83:	shl    ebp,0xbc
  417a86:	clc    
  417a87:	pusha  
  417a88:	loop   0x417a71
  417a8a:	sbb    DWORD PTR [esi-0x14],esi
  417a8d:	rol    bl,cl
  417a8f:	fcom   QWORD PTR [ecx-0x23f0f934]
  417a95:	cmc    
  417a96:	jbe    0x417a96
  417a98:	dec    esp
  417a99:	outs   dx,DWORD PTR ds:[esi]
  417a9a:	mov    edx,0xde843dfc
  417a9f:	push   edx
  417aa0:	mov    cl,0xdc
  417aa2:	or     eax,0xeaa2a74d
  417aa7:	fidiv  DWORD PTR [ebx]
  417aa9:	push   esp
  417aaa:	or     DWORD PTR [ebx+ebp*4],esp
  417aad:	inc    edx
  417aae:	(bad)  
  417ab0:	fnstcw WORD PTR [eax-0x53]
  417ab3:	(bad)  
  417ab4:	ins    BYTE PTR es:[edi],dx
  417ab5:	adc    BYTE PTR [edx-0x5c],cl
  417ab8:	ficom  WORD PTR [edi+0x11]
  417abb:	mov    al,0x1
  417abd:	ja     0x417ab5
  417abf:	cmp    dl,BYTE PTR [ebx+0x66]
  417ac2:	sti    
  417ac3:	es out 0xde,eax
  417ac6:	jg     0x417a99
  417ac8:	pop    ebp
  417ac9:	add    esi,DWORD PTR [edx+0x2f]
  417acc:	cmp    al,BYTE PTR [edx]
  417ace:	jg     0x417a53
  417ad0:	xlat   BYTE PTR ds:[ebx]
  417ad1:	inc    edi
  417ad2:	cmp    al,0xf8
  417ad4:	test   al,0xed
  417ad6:	add    BYTE PTR [eax],bh
  417ad8:	xlat   BYTE PTR ds:[ebx]
  417ad9:	test   eax,0x1a3ee3ec
  417ade:	xor    al,0x51
  417ae0:	dec    ebp
  417ae1:	mov    esi,0xeef7efff
  417ae6:	fnstcw WORD PTR [ebp-0x65]
  417ae9:	add    esi,DWORD PTR [edi+edx*4+0x5cd22c1a]
  417af0:	rol    DWORD PTR [edi-0x48db3002],cl
  417af6:	mov    bh,0x13
  417af8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417af9:	lds    esp,FWORD PTR [eax]
  417afb:	xchg   DWORD PTR [edx+0x2493e720],edi
  417b01:	xchg   esi,eax
  417b02:	outs   dx,DWORD PTR ds:[esi]
  417b03:	ss jmp 0x5c29d346
  417b09:	int    0x2a
  417b0b:	aad    0x6d
  417b0d:	and    BYTE PTR [ebp+0x6e],bl
  417b10:	mov    dh,0x4c
  417b12:	pop    ecx
  417b13:	popf   
  417b14:	les    edx,FWORD PTR [ebx+0x4af4d478]
  417b1a:	jno    0x417aae
  417b1c:	imul   edi,DWORD PTR [edi+edi*8+0x5a],0xb0f0dbf7
  417b24:	adc    DWORD PTR [esi],edx
  417b26:	loopne 0x417b41
  417b28:	xchg   esi,eax
  417b29:	shl    DWORD PTR [edx+0x74eec18a],1
  417b2f:	outs   dx,BYTE PTR ds:[esi]
  417b30:	pop    esp
  417b31:	fucomip st,st(7)
  417b33:	ins    BYTE PTR es:[edi],dx
  417b34:	push   esp
  417b35:	jo     0x417ae2
  417b37:	das    
  417b38:	gs pop edi
  417b3a:	gs leave 
  417b3c:	js     0x417af0
  417b3e:	jae    0x417b18
  417b40:	inc    ebp
  417b41:	mov    edx,0x5b2b0f4f
  417b46:	xor    DWORD PTR [eax+0x7e],esp
  417b49:	rcl    edi,cl
  417b4b:	fs das 
  417b4d:	sbb    al,0x72
  417b4f:	leave  
  417b50:	in     eax,0x84
  417b52:	nop
  417b53:	mov    ebx,0xdc8e24df
  417b58:	fst    st(4)
  417b5a:	bnd jg 0x417bb4
  417b5d:	aas    
  417b5e:	stc    
  417b5f:	in     eax,dx
  417b60:	pop    esp
  417b61:	inc    esi
  417b62:	jae    0x417b07
  417b64:	sub    DWORD PTR [ecx-0x64],0xf5ff3e47
  417b6b:	pop    es
  417b6c:	ins    BYTE PTR es:[edi],dx
  417b6d:	dec    edi
  417b6e:	pop    ecx
  417b6f:	retf   0xf745
  417b72:	push   ecx
  417b73:	call   0x1bba:0xcd5e3dda
  417b7a:	jbe    0x417b91
  417b7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b7d:	mov    edx,0xcb6ae984
  417b82:	push   ecx
  417b83:	jbe    0x417b4b
  417b85:	ins    DWORD PTR es:[edi],dx
  417b86:	adc    BYTE PTR [ebp+0x482b1c44],dh
  417b8c:	push   esp
  417b8d:	or     bh,ch
  417b8f:	addr16 test al,0xf8
  417b92:	data16 rol BYTE PTR [edx],cl
  417b95:	sub    dl,ch
  417b97:	pop    ebp
  417b98:	test   al,0x5f
  417b9a:	cmp    DWORD PTR [ebp+0x5cd9be63],ebx
  417ba0:	push   0xffffffea
  417ba2:	push   eax
  417ba3:	ds (bad) 
  417ba5:	and    al,bh
  417ba7:	push   es
  417ba8:	jbe    0x417b6d
  417baa:	hlt    
  417bab:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bad:	je     0x417b68
  417baf:	popa   
  417bb0:	jbe    0x417c2a
  417bb2:	jle    0x417c02
  417bb4:	sbb    al,0xf
  417bb6:	cmp    DWORD PTR [esi],edi
  417bb8:	pop    es
  417bb9:	jbe    0x417b64
  417bbb:	lea    edx,[esi]
  417bbd:	mov    ah,0xcf
  417bbf:	adc    bl,bh
  417bc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bc2:	aad    0xfa
  417bc4:	or     BYTE PTR [eax-0x2b],dh
  417bc7:	rol    DWORD PTR [esi-0x7ef344e9],0x8a
  417bce:	addr16 mov edx,0xb23c6ea8
  417bd4:	or     eax,0xdc5945e1
  417bd9:	sub    edx,DWORD PTR [eax-0x2]
  417bdc:	pop    ss
  417bdd:	jb     0x417c50
  417bdf:	je     0x417bd6
  417be1:	mov    ds:0x48ee2850,al
  417be6:	aas    
  417be7:	inc    ebx
  417be8:	sbb    ebx,DWORD PTR [ebp+0x8]
  417beb:	or     ah,dh
  417bed:	shr    dh,0x86
  417bf0:	pop    es
  417bf1:	pop    DWORD PTR [edx+eiz*4-0x4f9578a2]
  417bf8:	mov    ebp,0x692daece
  417bfd:	jl     0x417c7c
  417bff:	bound  edi,QWORD PTR [edx+0x75570d91]
  417c05:	pusha  
  417c06:	dec    esi
  417c07:	adc    al,0xb1
  417c09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c0a:	mov    ch,0x9e
  417c0c:	sti    
  417c0d:	jp     0x417bf9
  417c0f:	cld    
  417c10:	out    0x86,eax
  417c12:	pop    ss
  417c13:	int3   
  417c14:	xchg   edi,eax
  417c15:	stos   BYTE PTR es:[edi],al
  417c16:	mov    cl,0xd
  417c18:	jle    0x417c84
  417c1a:	xchg   esi,eax
  417c1b:	retf   0xcff5
  417c1e:	daa    
  417c1f:	mov    eax,0x31448169
  417c24:	stc    
  417c25:	push   esp
  417c26:	adc    BYTE PTR ds:0xc988c352,ch
  417c2c:	cmp    ecx,edi
  417c2e:	sahf   
  417c2f:	in     eax,dx
  417c30:	mov    dl,0x65
  417c32:	adc    BYTE PTR [edi],al
  417c34:	sbb    BYTE PTR [ebx+edi*2-0x2776f2f4],dl
  417c3b:	(bad)  
  417c3c:	jle    0x417c6f
  417c3e:	(bad)  
  417c40:	(bad)  
  417c41:	aas    
  417c42:	lea    eax,[esi]
  417c44:	sbb    edx,DWORD PTR [eax+0x72]
  417c47:	mov    ds:0xaf8886ef,eax
  417c4c:	xor    ebx,DWORD PTR [eax+0x3136e350]
  417c52:	std    
  417c53:	push   ebx
  417c54:	jl     0x417c97
  417c56:	pop    ecx
  417c57:	std    
  417c58:	xlat   BYTE PTR ds:[ebx]
  417c59:	ror    esp,0x2a
  417c5c:	or     ebx,eax
  417c5e:	int    0x41
  417c60:	cwde   
  417c61:	dec    ecx
  417c62:	cmp    BYTE PTR [edx+0x44],bl
  417c65:	mul    DWORD PTR [edx-0x10]
  417c68:	cmp    edi,esi
  417c6a:	in     eax,dx
  417c6b:	outs   dx,BYTE PTR ds:[esi]
  417c6c:	mov    cl,0xd9
  417c6e:	lods   al,BYTE PTR ds:[esi]
  417c6f:	sub    eax,0x5859b46c
  417c74:	mov    ah,0x86
  417c76:	push   ebx
  417c77:	fdiv   DWORD PTR [ebx+ebx*2-0x33]
  417c7b:	sbb    esp,ebp
  417c7d:	fadd   QWORD PTR [ecx+eax*4-0x4877284e]
  417c84:	push   0x26
  417c86:	pusha  
  417c87:	push   0x578a5ce1
  417c8c:	dec    ebp
  417c8d:	sbb    dh,BYTE PTR [edx+0x11]
  417c90:	mov    dl,0x44
  417c92:	call   0xbcbc:0x28df468a
  417c99:	pop    ebp
  417c9a:	lahf   
  417c9b:	jg     0x417d00
  417c9d:	mov    esp,0x43eea795
  417ca2:	fisubr WORD PTR [ecx+0x207c5c52]
  417ca8:	test   al,0x61
  417caa:	pop    edx
  417cab:	cmp    BYTE PTR [edx+0x451ff593],ch
  417cb1:	xor    ah,ah
  417cb3:	mov    dh,0x21
  417cb5:	shld   DWORD PTR [ecx-0x4a211d14],ebx,0xda
  417cbd:	xchg   ecx,eax
  417cbe:	mov    esi,0x824192c1
  417cc3:	pop    eax
  417cc4:	cmp    al,0xbe
  417cc6:	les    esi,FWORD PTR [ebp-0x758307ff]
  417ccc:	into   
  417ccd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cce:	(bad)  
  417ccf:	jmp    0x92de2d03
  417cd4:	scas   eax,DWORD PTR es:[edi]
  417cd5:	repnz xchg ebx,eax
  417cd7:	or     BYTE PTR [ecx-0x45333f05],0xae
  417cde:	test   BYTE PTR ds:0x8432397f,0x9c
  417ce5:	mov    DWORD PTR [esi-0x39],esi
  417ce8:	mov    eax,ds:0xcab313c5
  417ced:	jg     0x417c7b
  417cef:	dec    eax
  417cf0:	aas    
  417cf1:	push   edx
  417cf2:	out    dx,eax
  417cf3:	in     al,dx
  417cf4:	out    dx,al
  417cf5:	iret   
  417cf6:	aad    0xa9
  417cf8:	push   esi
  417cf9:	pop    ebp
  417cfa:	inc    eax
  417cfb:	push   ds
  417cfc:	inc    eax
  417cfd:	mov    ch,0xd5
  417cff:	add    al,0xdc
  417d01:	pop    esi
  417d02:	shr    esp,1
  417d04:	iret   
  417d05:	push   es
  417d06:	sahf   
  417d07:	and    edx,DWORD PTR [edx+eax*8+0x679cf07]
  417d0e:	mov    DWORD PTR [edi+0x23],edx
  417d11:	std    
  417d12:	mov    edi,0xca8b2f
  417d17:	mov    ebp,0x5874dc12
  417d1c:	ins    DWORD PTR es:[edi],dx
  417d1d:	sbb    DWORD PTR [ecx+0x105c4f85],esi
  417d23:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  417d25:	lds    esp,FWORD PTR [ebx]
  417d27:	into   
  417d28:	aad    0x64
  417d2a:	imul   DWORD PTR [ebp+ebp*2+0x5d7d4fd7]
  417d31:	jmp    0x417da5
  417d33:	mov    DWORD PTR [ebx-0x1afd758c],edi
  417d39:	jbe    0x417d45
  417d3b:	jbe    0x417dae
  417d3d:	addr16 fcmovbe st,st(0)
  417d40:	ficom  WORD PTR [ecx+ebp*8+0x34e7da6e]
  417d47:	shr    BYTE PTR [ecx],cl
  417d49:	loopne 0x417d08
  417d4b:	cmp    BYTE PTR [eax+0x49],0x7a
  417d4f:	and    al,bl
  417d51:	jge    0x417d85
  417d53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d54:	lds    ebp,FWORD PTR [ebx-0x3]
  417d57:	test   cl,bh
  417d59:	push   esi
  417d5a:	pusha  
  417d5b:	xchg   edx,eax
  417d5c:	inc    edi
  417d5d:	adc    eax,0x6ee753c6
  417d62:	sub    edx,0xffffffc2
  417d65:	retf   
  417d66:	cmp    ebx,DWORD PTR [ecx+0x2f]
  417d69:	inc    ebp
  417d6a:	pop    esp
  417d6b:	inc    edi
  417d6c:	add    dh,BYTE PTR [edi]
  417d6e:	mov    ecx,eax
  417d70:	in     eax,dx
  417d71:	xchg   edi,eax
  417d72:	test   BYTE PTR [ebp+0x6de9822],ah
  417d78:	xchg   BYTE PTR [edx],dh
  417d7a:	sahf   
  417d7b:	addr16 xchg esp,eax
  417d7d:	dec    edi
  417d7e:	setg   BYTE PTR [eax-0x7a]
  417d82:	push   es
  417d83:	das    
  417d84:	div    DWORD PTR [ebx+0x449d92ec]
  417d8a:	xchg   edx,eax
  417d8b:	sub    DWORD PTR [eax+0x24],eax
  417d8e:	adc    esi,DWORD PTR [esi]
  417d90:	cmp    ecx,edx
  417d92:	xor    BYTE PTR [edi+0x2fd9c5bd],dh
  417d98:	push   eax
  417d99:	(bad)  
  417d9a:	fnsave [ecx+0x52876d57]
  417da0:	out    0xe7,eax
  417da2:	leave  
  417da3:	inc    eax
  417da4:	hlt    
  417da5:	dec    esp
  417da6:	cmp    esi,DWORD PTR [esi]
  417da8:	dec    eax
  417da9:	test   BYTE PTR [edi-0x66c25a86],cl
  417daf:	jae    0x417d6e
  417db1:	pop    edi
  417db2:	cmp    bh,BYTE PTR [edx-0x12197aa1]
  417db8:	or     DWORD PTR [edx],edx
  417dba:	stc    
  417dbb:	sbb    BYTE PTR [esi],bh
  417dbd:	mov    edx,0x73aa9501
  417dc2:	or     al,0xe9
  417dc4:	push   0xad85fc47
  417dc9:	sbb    bl,dl
  417dcb:	jne    0x417d88
  417dcd:	ds push cs
  417dcf:	adc    DWORD PTR [esi-0x41],eax
  417dd2:	scas   al,BYTE PTR es:[edi]
  417dd3:	aam    0x7b
  417dd5:	jno    0x417e2a
  417dd7:	dec    eax
  417dd8:	jecxz  0x417d78
  417dda:	mov    ds:0xb15116c9,al
  417ddf:	cmp    BYTE PTR [eax+0x4c56c178],dl
  417de5:	stc    
  417de6:	xor    al,0x65
  417de8:	repz jo 0x417dd5
  417deb:	mov    ah,0xbe
  417ded:	jge    0x417dfd
  417def:	inc    esp
  417df0:	mov    al,0x45
  417df2:	dec    ebx
  417df3:	push   cs
  417df4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417df5:	sbb    ebx,DWORD PTR [ebx]
  417df7:	xor    ecx,DWORD PTR es:[ecx+0x66975061]
  417dfe:	cli    
  417dff:	mov    bl,0x43
  417e01:	lods   al,BYTE PTR ds:[esi]
  417e02:	xchg   esi,eax
  417e03:	loop   0x417e37
  417e05:	sbb    al,0xf7
  417e07:	xor    BYTE PTR [esi-0x2a6a0df],al
  417e0d:	sahf   
  417e0e:	int    0xce
  417e10:	xchg   esi,eax
  417e11:	sub    cl,0x5c
  417e14:	nop
  417e15:	lods   eax,DWORD PTR ds:[esi]
  417e16:	dec    ebp
  417e17:	repnz inc eax
  417e19:	jp     0x417e3b
  417e1b:	or     al,0x81
  417e1d:	imul   edi,DWORD PTR [ebx+0x14250d2b],0xffffff94
  417e24:	mov    BYTE PTR [ecx-0x6a],dh
  417e27:	(bad)  
  417e28:	push   edx
  417e29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e2a:	out    0x1e,al
  417e2c:	mov    edx,ecx
  417e2e:	mov    eax,ds:0xcbffc10f
  417e33:	or     eax,0xfb6c0129
  417e38:	clc    
  417e39:	dec    ebp
  417e3a:	jmp    0x2536:0xd1354ce6
  417e41:	lahf   
  417e42:	cwde   
  417e43:	jge    0x417e29
  417e45:	jo     0x417e05
  417e47:	shl    BYTE PTR ds:[ecx+0x41b8f6e],0x85
  417e4f:	mov    bl,0x9c
  417e51:	or     ecx,ecx
  417e53:	jmp    0x631f753a
  417e58:	in     al,dx
  417e59:	mov    ebx,0xd375df71
  417e5e:	or     DWORD PTR [eax-0x22],0xffffffd0
  417e62:	and    ecx,ebp
  417e64:	sub    bh,BYTE PTR [ebx]
  417e66:	adc    BYTE PTR [edi-0x1a63e80],dl
  417e6c:	je     0x417eea
  417e6e:	xchg   ebp,eax
  417e6f:	or     eax,0x22cd2b62
  417e74:	sub    ecx,DWORD PTR [ecx+0x7c6cfae2]
  417e7a:	fsubr  DWORD PTR [ebp+0x23652488]
  417e80:	enter  0x8565,0x45
  417e84:	jnp    0x417e68
  417e86:	icebp  
  417e87:	retf   0x8a1d
  417e8a:	pop    edx
  417e8b:	push   ss
  417e8c:	jge    0x417ed6
  417e8e:	jbe    0x417e9b
  417e90:	lea    edx,[edi]
  417e92:	mov    esp,0x3fd4eee9
  417e97:	xor    ecx,0xc41a1db4
  417e9d:	and    esi,esp
  417e9f:	dec    esi
  417ea0:	jmp    FWORD PTR [ecx+0x3c9c2bc9]
  417ea6:	jo     0x417e9a
  417ea8:	ret    0x6a1f
  417eab:	retf   
  417eac:	mov    fs,edx
  417eae:	fstp   QWORD PTR [esi]
  417eb0:	xchg   esp,eax
  417eb1:	sub    BYTE PTR [edi+esi*8],bl
  417eb4:	stc    
  417eb5:	mov    eax,ds:0x39c007a4
  417eba:	rcr    DWORD PTR [ebp+0x35],cl
  417ebd:	fcom   DWORD PTR [edi]
  417ebf:	aam    0xcf
  417ec1:	dec    esi
  417ec2:	jne    0x417eec
  417ec4:	loope  0x417f29
  417ec6:	push   esi
  417ec7:	loopne 0x417e92
  417ec9:	call   0xed14:0x4d784b22
  417ed0:	mov    dh,0x36
  417ed2:	lea    ebp,[esi-0x165abff5]
  417ed8:	push   ebp
  417ed9:	push   es
  417eda:	jmp    0x30eeff2d
  417edf:	gs es mov al,0x2f
  417ee3:	gs xor al,0xb7
  417ee6:	push   esi
  417ee7:	add    BYTE PTR [ebx+0x6f],dh
  417eea:	retf   
  417eeb:	xchg   BYTE PTR ds:0xabf42873,ah
  417ef1:	outs   dx,BYTE PTR ds:[esi]
  417ef2:	jae    0x417f08
  417ef4:	mov    esi,0x2408c654
  417ef9:	adc    edx,DWORD PTR [eax+esi*4+0x62]
  417efd:	inc    ebx
  417efe:	push   cs
  417eff:	pop    ds
  417f00:	adc    BYTE PTR [edi-0x19403ee0],ah
  417f06:	add    eax,0x8c0dbb10
  417f0b:	mov    al,ds:0x1fc56216
  417f10:	imul   ebx,DWORD PTR cs:[edx+ebx*1-0x443e5c83],0x204fd07d
  417f1c:	adc    ah,BYTE PTR [eax]
  417f1e:	neg    BYTE PTR [ecx]
  417f20:	add    BYTE PTR [edi+esi*4],bh
  417f23:	jmp    0x74701124
  417f28:	mov    dh,0x91
  417f2a:	inc    eax
  417f2b:	inc    esi
  417f2c:	arpl   WORD PTR [edi-0x3c],bp
  417f2f:	in     eax,dx
  417f30:	mov    dl,0x57
  417f32:	xchg   ebx,eax
  417f33:	popf   
  417f34:	mov    dh,0x4e
  417f36:	pop    edx
  417f37:	inc    esi
  417f38:	and    ch,bl
  417f3a:	ja     0x417f09
  417f3c:	out    dx,eax
  417f3d:	and    bh,BYTE PTR [ecx]
  417f3f:	gs (bad) 
  417f41:	fst    QWORD PTR [esi+eiz*4+0x54]
  417f45:	dec    ebx
  417f46:	repnz adc al,0x24
  417f49:	adc    DWORD PTR [ecx-0x5b],0xffffffe7
  417f4d:	fistp  WORD PTR [edx+0x14]
  417f50:	or     BYTE PTR [ecx-0x6],dh
  417f53:	jae    0x417ef8
  417f55:	cdq    
  417f56:	arpl   WORD PTR fs:[edi+0x62],bp
  417f5a:	mov    esp,0x48a0874d
  417f5f:	ret    
  417f60:	bound  ebp,QWORD PTR ds:0xdbb27920
  417f66:	sub    ebx,DWORD PTR [ecx]
  417f68:	ja     0x417ef7
  417f6a:	outs   dx,DWORD PTR ds:[esi]
  417f6b:	sbb    cl,dh
  417f6d:	inc    eax
  417f6e:	push   ss
  417f6f:	mov    eax,0x58d6f705
  417f74:	xor    al,0x44
  417f76:	hlt    
  417f77:	jg     0x417f01
  417f79:	fdivr  st,st(5)
  417f7b:	repnz pop ebp
  417f7d:	ins    DWORD PTR es:[edi],dx
  417f7e:	in     al,0x6c
  417f80:	out    dx,al
  417f81:	out    0x12,eax
  417f83:	sbb    al,0xca
  417f85:	mov    bl,BYTE PTR [eax-0x2f]
  417f88:	add    al,0x77
  417f8a:	gs mov dh,0x68
  417f8d:	jmp    0x417f9a
  417f8f:	mov    bh,0x90
  417f91:	fdivrp st(3),st
  417f93:	xchg   esp,eax
  417f94:	pop    ebp
  417f95:	add    al,0xaf
  417f97:	xor    BYTE PTR [edi-0x75415f7],bh
  417f9d:	daa    
  417f9e:	or     edx,edx
  417fa0:	and    eax,0x6db20485
  417fa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fa6:	xchg   edx,eax
  417fa7:	xor    bh,BYTE PTR [eax-0x4a80b257]
  417fad:	je     0x417f39
  417faf:	mov    al,0xc
  417fb1:	inc    esp
  417fb2:	cwde   
  417fb3:	adc    DWORD PTR [ebp+edx*4+0x13a93610],esp
  417fba:	mov    ebx,0x7ab74b9e
  417fbf:	xor    eax,0xd5e5e0a
  417fc4:	daa    
  417fc5:	lea    ecx,[ecx]
  417fc7:	in     eax,dx
  417fc8:	mov    ch,ch
  417fca:	dec    esp
  417fcb:	dec    esp
  417fcc:	iret   
  417fcd:	sub    eax,0x91d12c51
  417fd2:	shr    DWORD PTR [ecx-0x28],cl
  417fd5:	dec    esp
  417fd6:	out    dx,al
  417fd7:	push   ebp
  417fd8:	dec    edx
  417fd9:	mov    dh,BYTE PTR [eax+0x67711272]
  417fdf:	sbb    edi,DWORD PTR [edx-0x3f]
  417fe2:	jecxz  0x418026
  417fe4:	(bad)  
  417fe5:	and    eax,0xe4abc468
  417fea:	add    dl,BYTE PTR [edi-0x28]
  417fed:	aas    
  417fee:	mov    ebp,0x5d80e9a4
  417ff3:	dec    ebx
  417ff4:	leave  
  417ff5:	xor    eax,0x27f23bee
  417ffa:	ins    BYTE PTR es:[edi],dx
  417ffb:	jo     0x418062
  417ffd:	pop    ebx
  417ffe:	add    bl,cl
  418000:	mov    ebx,0x74f31d64
  418005:	fimul  WORD PTR [ecx]
  418007:	mov    ch,0xa4
  418009:	cmp    DWORD PTR [eax+0x3f],0x31
  41800d:	fdivr  QWORD PTR [edx]
  41800f:	popf   
  418010:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418011:	int    0x17
  418013:	sbb    edx,eax
  418015:	test   eax,0xbd28b040
  41801a:	xchg   edi,eax
  41801b:	mov    ecx,0xd7132106
  418020:	(bad)  
  418022:	inc    esp
  418023:	jge    0x417fe0
  418025:	pusha  
  418026:	jb     0x417ffd
  418028:	and    eax,0xa39c26f6
  41802d:	jp     0x417fdc
  41802f:	xchg   edx,eax
  418030:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418031:	jl     0x417fd1
  418033:	ins    DWORD PTR es:[edi],dx
  418034:	adc    DWORD PTR [ecx],eax
  418036:	js     0x418000
  418038:	daa    
  418039:	test   DWORD PTR [ecx+0x46],esp
  41803c:	add    DWORD PTR [eax+edx*1],edi
  41803f:	and    eax,0x1d6afd3c
  418044:	inc    edi
  418045:	enter  0xd286,0x48
  418049:	mov    BYTE PTR [ecx-0x36d39972],cl
  41804f:	sub    eax,DWORD PTR [ecx]
  418051:	shl    DWORD PTR [ebx+0x3954be74],1
  418057:	push   ss
  418058:	push   ebx
  418059:	sub    dh,al
  41805b:	xor    al,0xc
  41805d:	fs jl  0x418003
  418060:	push   0x469fa392
  418065:	push   cs
  418066:	jb     0x418092
  418068:	and    dh,BYTE PTR [ecx+eax*1+0x39]
  41806c:	sub    DWORD PTR [eax+0x37],ebp
  41806f:	inc    esp
  418070:	jnp    0x418035
  418072:	adc    eax,0xe57345df
  418077:	outs   dx,DWORD PTR ds:[esi]
  418078:	mov    bh,0x2f
  41807a:	cmp    al,0x33
  41807c:	jnp    0x4180c8
  41807e:	mov    ds,WORD PTR [ecx+0x19]
  418081:	mov    eax,ds:0x2ad96c08
  418086:	nop
  418087:	out    0x6,al
  418089:	and    al,dh
  41808b:	mov    ebx,0x7c2fcce4
  418090:	xchg   esi,eax
  418091:	(bad)  [ecx]
  418093:	mov    bl,0x67
  418095:	sub    edx,ecx
  418097:	sbb    bl,BYTE PTR [esi+ecx*8-0x195bf7cf]
  41809e:	popa   
  41809f:	xchg   DWORD PTR [ecx],ebx
  4180a1:	pop    esi
  4180a2:	xchg   edi,eax
  4180a3:	ret    
  4180a4:	adc    al,0x1e
  4180a6:	(bad)  
  4180a7:	loop   0x41811e
  4180a9:	scas   al,BYTE PTR es:[edi]
  4180aa:	call   0xd052:0xd3024d0c
  4180b1:	push   edx
  4180b2:	pusha  
  4180b3:	pop    esp
  4180b4:	into   
  4180b5:	inc    eax
  4180b6:	out    dx,eax
  4180b7:	xchg   BYTE PTR [edi+0x434a0b7b],dl
  4180bd:	and    cl,ch
  4180bf:	xlat   BYTE PTR ds:[ebx]
  4180c0:	stc    
  4180c1:	and    dh,BYTE PTR [ebx]
  4180c3:	pop    ds
  4180c4:	aad    0x27
  4180c6:	add    BYTE PTR [esi+0x7d],bh
  4180c9:	xor    eax,0x36ef8189
  4180ce:	(bad)  
  4180cf:	in     eax,0xc6
  4180d1:	inc    esi
  4180d2:	pop    ecx
  4180d3:	ja     0x418086
  4180d5:	adc    bl,BYTE PTR [edx-0x642cc11d]
  4180db:	sub    eax,DWORD PTR [eax+0x74]
  4180de:	fmul   QWORD PTR [edi-0x58]
  4180e1:	jns    0x4180ac
  4180e3:	test   al,0x6f
  4180e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180e6:	mov    DWORD PTR [edx],ebx
  4180e8:	adc    cl,0xef
  4180eb:	pop    eax
  4180ec:	gs push 0xffffffba
  4180ef:	push   cs
  4180f0:	mov    eax,0xc51b7ce
  4180f5:	inc    ebp
  4180f6:	add    DWORD PTR [ebx-0x2e0a0b25],esi
  4180fc:	stc    
  4180fd:	mov    ds:0x3837b88a,al
  418102:	pushf  
  418103:	sub    BYTE PTR [edx+0x60],bh
  418106:	repz xor eax,0x353ba117
  41810c:	jmp    0xc6e3:0x227869
  418113:	adc    DWORD PTR [edi-0x3987e144],0x5fcf9eca
  41811d:	jl     0x418199
  41811f:	(bad)  
  418120:	into   
  418121:	xor    ebp,DWORD PTR [eax-0x56]
  418124:	ins    DWORD PTR es:[edi],dx
  418125:	jmp    0x418156
  418127:	fs imul ebx,esp,0x7b0b648c
  41812e:	outs   dx,BYTE PTR ds:[esi]
  41812f:	inc    edx
  418130:	mov    eax,ds:0x9bee7b53
  418135:	in     al,dx
  418136:	idiv   DWORD PTR ds:0xd087d29f
  41813c:	in     al,dx
  41813d:	lods   al,BYTE PTR ds:[esi]
  41813e:	jp     0x418178
  418140:	push   esi
  418141:	push   esp
  418142:	xor    eax,ebx
  418144:	(bad)  
  418145:	mov    ebx,0xb4801c5f
  41814a:	fisubr WORD PTR [edi+0x44]
  41814d:	jmp    0x3cd3cfc4
  418152:	cmc    
  418153:	out    dx,eax
  418154:	(bad)  
  418155:	mov    cl,0xa7
  418157:	dec    ebp
  418158:	pusha  
  418159:	or     al,0x5c
  41815b:	xor    eax,0x5d3884f9
  418160:	add    ch,BYTE PTR [eax+0x5c5b2859]
  418166:	dec    ecx
  418167:	push   ds
  418168:	das    
  418169:	repnz repz adc esp,ebx
  41816d:	cmp    eax,0x4608bfa9
  418172:	call   0xa0899d89
  418177:	cmp    eax,0xe38553df
  41817c:	mov    esi,0xb8aa93d5
  418181:	dec    ebp
  418182:	sbb    al,0x18
  418184:	mov    ebp,DWORD PTR [ecx+0x4b]
  418187:	(bad)  
  418188:	fldenv [ecx-0x5c64b59a]
  41818e:	rcr    DWORD PTR [edi+edx*2+0x10de528d],0xe0
  418196:	imul   ebp,DWORD PTR [eax-0x3e9f61aa],0x64
  41819d:	push   eax
  41819e:	retf   
  41819f:	pop    edi
  4181a0:	repnz mov dl,0xbf
  4181a3:	push   ebx
  4181a4:	xor    BYTE PTR [edx+0x9adc252],0x5f
  4181ab:	xor    ah,BYTE PTR [edx]
  4181ad:	(bad)  
  4181ae:	bt     DWORD PTR [edi],ebx
  4181b1:	nop
  4181b2:	clc    
  4181b3:	xchg   edi,eax
  4181b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181b5:	ins    BYTE PTR es:[edi],dx
  4181b6:	imul   ebx,DWORD PTR [ecx+0x28ee031a],0x18
  4181bd:	fmul   DWORD PTR [esi]
  4181bf:	xor    DWORD PTR [ebp+0x67],eax
  4181c2:	and    BYTE PTR [ebx],cl
  4181c4:	or     BYTE PTR [eax],cl
  4181c6:	mov    DWORD PTR [edx-0x73af6e3b],ebx
  4181cc:	sbb    BYTE PTR [edx+0x714c45f7],bh
  4181d2:	stos   BYTE PTR es:[edi],al
  4181d3:	addr16 sub eax,0xd991bb5c
  4181d9:	lods   al,BYTE PTR fs:[esi]
  4181db:	cmp    ch,BYTE PTR [esi-0x40e57ac4]
  4181e1:	dec    ecx
  4181e2:	inc    ecx
  4181e3:	dec    ebx
  4181e4:	push   cs
  4181e5:	outs   dx,DWORD PTR ds:[esi]
  4181e6:	mov    cl,0x7d
  4181e8:	sbb    eax,esi
  4181ea:	das    
  4181eb:	scas   eax,DWORD PTR es:[edi]
  4181ec:	imul   esi
  4181ee:	xlat   BYTE PTR ds:[ebx]
  4181ef:	fcomp  QWORD PTR [esi+0x4d]
  4181f2:	sbb    al,0x73
  4181f4:	add    DWORD PTR [eax+0x4d],ebx
  4181f7:	adc    bh,BYTE PTR [ecx+0x60]
  4181fa:	push   ebp
  4181fb:	or     al,0x82
  4181fd:	cmp    ah,0x8b
  418200:	push   ebx
  418201:	pop    ebp
  418202:	or     eax,0xd50b865d
  418207:	pop    ss
  418208:	and    al,0x29
  41820a:	push   eax
  41820b:	mov    ebx,0xe8f063d0
  418210:	(bad)  [edx]
  418212:	cmp    eax,0x5cccb93e
  418217:	ins    BYTE PTR es:[edi],dx
  418218:	clc    
  418219:	xor    al,0x58
  41821b:	dec    esp
  41821c:	xor    al,BYTE PTR [esi+0x415f3f5]
  418222:	gs pop ebx
  418224:	pop    es
  418225:	sbb    ch,BYTE PTR [esi]
  418227:	mov    bh,0xa9
  418229:	mov    ecx,0xe74b67d2
  41822e:	aas    
  41822f:	out    0xef,eax
  418231:	adc    ch,BYTE PTR [ecx]
  418233:	mov    ds:0xd5f2a026,eax
  418238:	lds    ebp,FWORD PTR [edx-0x7060ace5]
  41823e:	sub    esp,ebx
  418240:	cmp    eax,0x9cbf9225
  418245:	and    esp,DWORD PTR [ebx+ebx*1-0x39978ebf]
  41824c:	pop    ebp
  41824d:	push   edi
  41824e:	(bad)  
  41824f:	dec    edi
  418250:	cmp    eax,0x2f6dec63
  418255:	aam    0xcf
  418257:	stos   DWORD PTR es:[edi],eax
  418258:	adc    edx,DWORD PTR [eax+0x53c3ccd2]
  41825e:	stc    
  41825f:	mov    edi,0xda3f16dc
  418264:	dec    esp
  418265:	mov    WORD PTR [ebx],fs
  418267:	jmp    ecx
  418269:	push   cs
  41826a:	(bad)  
  41826b:	fistp  QWORD PTR [edx-0x65]
  41826e:	sar    BYTE PTR [esi+0x38],cl
  418271:	out    dx,al
  418272:	inc    ebx
  418273:	ficom  WORD PTR [edi-0x4b]
  418276:	push   ecx
  418277:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418278:	cmp    DWORD PTR [eax+0x2c],0xaa2ef2f7
  41827f:	js     0x418220
  418281:	pop    es
  418282:	scas   al,BYTE PTR es:[edi]
  418283:	scas   eax,DWORD PTR es:[edi]
  418284:	nop
  418285:	push   ebp
  418286:	adc    BYTE PTR [edi-0x4024ccd7],ch
  41828c:	pop    esi
  41828d:	sbb    BYTE PTR [ebp-0x49e14f51],dl
  418293:	jp     0x41829d
  418295:	pushf  
  418296:	mov    dh,0xb2
  418298:	add    eax,edi
  41829a:	or     al,0xc4
  41829c:	adc    ecx,DWORD PTR [ecx+ebx*8]
  41829f:	and    cl,BYTE PTR [edx+ebx*1]
  4182a2:	jge    0x418259
  4182a4:	xor    ch,bh
  4182a6:	inc    ebx
  4182a7:	xor    eax,0x3b2cb7e3
  4182ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182ad:	shl    BYTE PTR [ebp+ebx*1+0x67],0xe1
  4182b2:	outs   dx,BYTE PTR ds:[esi]
  4182b3:	shl    DWORD PTR [eax-0x3d],1
  4182b6:	mov    cl,0xea
  4182b8:	inc    DWORD PTR [edx+0x14]
  4182bb:	icebp  
  4182bc:	outs   dx,DWORD PTR ds:[esi]
  4182bd:	in     al,dx
  4182be:	inc    edi
  4182bf:	out    dx,al
  4182c0:	xchg   ebp,eax
  4182c1:	sub    eax,0xd142928
  4182c6:	or     ebx,DWORD PTR [eax]
  4182c8:	test   DWORD PTR [ebx-0x5808a106],ebp
  4182ce:	outs   dx,DWORD PTR ds:[esi]
  4182cf:	and    cl,BYTE PTR [edi]
  4182d1:	loop   0x41830e
  4182d3:	outs   dx,DWORD PTR ds:[esi]
  4182d4:	sbb    al,0x1a
  4182d6:	loopne 0x41827a
  4182d8:	xor    eax,0x53608afb
  4182dd:	adc    esi,eax
  4182df:	jns    0x418338
  4182e1:	jbe    0x4182a4
  4182e3:	push   ebp
  4182e4:	pop    esp
  4182e5:	inc    ecx
  4182e6:	loopne 0x418345
  4182e8:	pop    edx
  4182e9:	inc    ebx
  4182ea:	mov    WORD PTR [eax+0x39ea1dfe],es
  4182f0:	inc    esp
  4182f1:	xor    DWORD PTR [esi-0x25356a91],0x39
  4182f8:	inc    ebx
  4182f9:	sahf   
  4182fa:	shl    BYTE PTR [ecx-0x53],1
  4182fd:	mov    cl,0x19
  4182ff:	mov    ecx,0x6fd71981
  418304:	std    
  418305:	mov    eax,ds:0xfdacc80d
  41830a:	fwait
  41830b:	sub    bh,BYTE PTR [ecx]
  41830d:	inc    edx
  41830e:	fdivr  st,st(1)
  418310:	iret   
  418311:	adc    ebp,DWORD PTR [ebx+0x5d422617]
  418317:	push   es
  418318:	mov    ah,0x7a
  41831a:	sbb    edx,DWORD PTR [edx+0x2f7e28ab]
  418320:	(bad)  
  418322:	pushf  
  418323:	in     al,0x3f
  418325:	sbb    DWORD PTR [ebp-0x80],esp
  418328:	dec    edi
  418329:	sub    BYTE PTR [edi+eiz*8],0x82
  41832d:	hlt    
  41832e:	aad    0xe8
  418330:	inc    ebp
  418331:	fdivr  QWORD PTR [eax]
  418333:	ds bswap ecx
  418336:	stos   BYTE PTR es:[edi],al
  418337:	xchg   ecx,eax
  418338:	mov    edi,0x7b3accd9
  41833d:	push   eax
  41833e:	jp     0x41830c
  418340:	rcl    BYTE PTR [esi+0x656bfb39],0x98
  418347:	cmp    DWORD PTR [eax],ecx
  418349:	aam    0x73
  41834b:	mov    esp,0x5bb8bab4
  418350:	shl    DWORD PTR [edi+ebp*4-0x6250970d],0x8f
  418358:	bound  eax,QWORD PTR [eax]
  41835a:	xor    dh,BYTE PTR [edi-0x5]
  41835d:	int    0x48
  41835f:	shl    BYTE PTR [si+0x6f],cl
  418363:	loope  0x4183ae
  418365:	pop    ebx
  418366:	sub    DWORD PTR [esi+0x71],0xbd4cab11
  41836d:	ja     0x418373
  41836f:	pop    edi
  418370:	rcl    BYTE PTR [edi+0x7f8270ac],0x2c
  418377:	push   esi
  418378:	push   ds
  418379:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41837a:	jb     0x4183fa
  41837c:	stos   DWORD PTR es:[edi],eax
  41837d:	xchg   ecx,eax
  41837e:	dec    ebp
  418380:	jp     0x4183bd
  418382:	stc    
  418383:	in     eax,dx
  418384:	pusha  
  418385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418386:	leave  
  418387:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418388:	sar    BYTE PTR [eax+0x1decb9f],cl
  41838e:	repnz pop di
  418391:	jnp    0x418362
  418393:	das    
  418394:	jae    0x4183af
  418396:	lahf   
  418397:	jne    0x41839c
  418399:	pop    edx
  41839a:	jbe    0x41837f
  41839c:	and    DWORD PTR [edi+esi*8],0x2ecff627
  4183a3:	test   eax,0x83eacc58
  4183a8:	(bad)  
  4183aa:	es or  dl,dh
  4183ad:	popa   
  4183ae:	add    eax,0x5dae990f
  4183b3:	int    0x28
  4183b5:	mov    edi,0x54de01ff
  4183ba:	or     al,0x33
  4183bc:	(bad)  
  4183bd:	mov    ecx,0xddcb2bb5
  4183c2:	cdq    
  4183c3:	dec    esi
  4183c4:	or     ebp,edi
  4183c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183c7:	add    al,ah
  4183c9:	bound  eax,QWORD PTR [ebp-0x63]
  4183cc:	bound  ecx,QWORD PTR [ecx+0x2e61ac78]
  4183d2:	or     al,BYTE PTR [edx-0x14]
  4183d5:	test   eax,0x946bb264
  4183da:	pop    ecx
  4183db:	sub    BYTE PTR [eax],0xff
  4183de:	xor    al,0xe
  4183e0:	xor    ah,al
  4183e2:	push   ss
  4183e3:	mov    esp,0x2a9a53df
  4183e8:	scas   al,BYTE PTR es:[edi]
  4183e9:	neg    BYTE PTR [edi+0x4c3075ae]
  4183ef:	sub    BYTE PTR [edx-0x5b16f724],0x25
  4183f6:	and    cl,al
  4183f8:	or     eax,0x2e21ef8d
  4183fd:	shr    ch,cl
  4183ff:	addr16 stc 
  418401:	pusha  
  418402:	(bad)  
  418403:	cmp    DWORD PTR [ebx+0x44],ecx
  418406:	push   eax
  418407:	ret    0x54d6
  41840a:	dec    esi
  41840b:	sub    ecx,DWORD PTR [edi+0xd]
  41840e:	push   ebx
  41840f:	aam    0xf3
  418411:	fxch   st(2)
  418413:	ds push ss
  418415:	xlat   BYTE PTR ds:[ebx]
  418416:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418417:	popf   
  418418:	xor    eax,0x1e8025e9
  41841d:	jns    0x4183e8
  41841f:	sbb    BYTE PTR [ebx-0x5a],0x58
  418423:	mov    BYTE PTR [esi-0x2447ae4b],bh
  418429:	inc    edx
  41842a:	mov    ebx,0x8ef82858
  41842f:	loop   0x41849f
  418431:	icebp  
  418432:	xor    BYTE PTR [esi],dh
  418434:	cmp    eax,0x9b24af3c
  418439:	jp     0x418437
  41843b:	sub    DWORD PTR [ebp+0x45],edx
  41843e:	sti    
  41843f:	mov    edi,0xfa53380
  418444:	cli    
  418445:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418446:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418447:	pop    ss
  418448:	jnp    0x4183ef
  41844a:	xor    al,0xd1
  41844c:	test   eax,0x490d981b
  418451:	inc    ebp
  418452:	std    
  418453:	cwde   
  418454:	pop    edi
  418455:	adc    al,0x1f
  418457:	int    0x13
  418459:	ds xor eax,0xbc9a5cc7
  41845f:	into   
  418460:	fdivr  st(2),st
  418462:	test   eax,0x71b0cc15
  418467:	sbb    eax,eax
  418469:	or     DWORD PTR [ebx-0xab7b21e],edx
  41846f:	test   al,0xb8
  418471:	lea    esp,[edx+esi*8+0x71]
  418475:	mov    dh,0x28
  418477:	pop    esi
  418478:	pop    ss
  418479:	push   esi
  41847a:	cmp    eax,0xdfafc85a
  41847f:	fwait
  418480:	pop    esp
  418481:	arpl   WORD PTR ds:0x9261f34c,dx
  418487:	jmp    0x418413
  418489:	fild   WORD PTR [ebx]
  41848b:	or     al,0x3d
  41848d:	bswap  ebx
  41848f:	xor    DWORD PTR [ecx],0x90ebc123
  418495:	jne    0x41850f
  418497:	sub    eax,0xb448f737
  41849c:	cmp    esi,esi
  41849e:	ror    DWORD PTR [ecx-0xd08ab71],0x8d
  4184a5:	push   edx
  4184a6:	retf   0xd1e7
  4184a9:	adc    dl,bh
  4184ab:	fwait
  4184ac:	ss aas 
  4184ae:	fst    QWORD PTR [edx]
  4184b0:	jnp    0x418517
  4184b2:	ds jo  0x418461
  4184b5:	das    
  4184b6:	shr    edi,0xe2
  4184b9:	mov    ds:0x6407546e,eax
  4184be:	mov    ds:0x8a4c1af4,al
  4184c3:	xlat   BYTE PTR ds:[ebx]
  4184c4:	ja     0x41852c
  4184c6:	aaa    
  4184c7:	std    
  4184c8:	push   edx
  4184c9:	addr16 ss mov eax,0xce0954aa
  4184d0:	outs   dx,BYTE PTR ds:[esi]
  4184d1:	fs aaa 
  4184d3:	test   dh,bh
  4184d5:	sub    eax,eax
  4184d7:	mov    ebx,0xd266fd4b
  4184dc:	jge    0x41853a
  4184de:	sbb    eax,DWORD PTR [ecx]
  4184e0:	ficom  WORD PTR [ecx+0x7f]
  4184e3:	(bad)  
  4184e4:	adc    eax,0xe8b5b969
  4184e9:	sub    DWORD PTR [ecx-0x2a],esp
  4184ec:	xor    BYTE PTR [ebp-0x45],ah
  4184ef:	je     0x418480
  4184f1:	sbb    BYTE PTR ds:0x29e03f4a,0x78
  4184f8:	adc    al,0xf4
  4184fa:	jo     0x418507
  4184fc:	es mov eax,0x6884ee24
  418502:	daa    
  418503:	push   0xa
  418505:	inc    ecx
  418506:	nop
  418507:	neg    DWORD PTR [ebx-0x3cced82]
  41850d:	sub    eax,0x2cb4ee90
  418512:	mov    edi,?
  418514:	lea    ebp,[edi]
  418516:	jnp    0x4184dc
  418518:	mov    eax,ds:0xf45c90d6
  41851d:	jns    0x41853b
  41851f:	adc    ebx,DWORD PTR [ebp-0x54f8a0d8]
  418525:	inc    ecx
  418526:	push   cs
  418527:	in     eax,dx
  418528:	sbb    BYTE PTR [ebx+ebx*1-0x6c98aa34],cl
  41852f:	xchg   ecx,eax
  418530:	mov    ds:0x67c88ec9,eax
  418535:	sbb    dl,bl
  418537:	addr16 or al,0xca
  41853a:	leave  
  41853b:	jmp    0x8529:0x8c98a187
  418542:	aad    0xab
  418544:	adc    dh,BYTE PTR [edi-0x79]
  418547:	sbb    esp,edx
  418549:	sub    eax,0x73f9b90b
  41854e:	ja     0x418574
  418550:	mov    ebx,0x171748aa
  418555:	cmp    eax,0x2ccc27e3
  41855a:	pop    ds
  41855b:	mov    dl,BYTE PTR [esi+0x4b]
  41855e:	push   ds
  41855f:	cli    
  418560:	aam    0x52
  418562:	adc    eax,0xefcdf9e2
  418567:	(bad)
  41856a:	pop    ss
  41856b:	and    BYTE PTR [eax-0xc],0x5a
  41856f:	inc    eax
  418570:	mov    ch,BYTE PTR [ebp-0x68398db1]
  418576:	jne    0x41855b
  418578:	pop    ecx
  418579:	mov    bh,0xe
  41857b:	xchg   ebx,eax
  41857c:	push   ebp
  41857d:	adc    al,0xa5
  41857f:	fs dec esp
  418581:	popf   
  418582:	test   ebp,ebx
  418584:	sub    eax,0xc9694a9b
  418589:	mov    BYTE PTR [ecx],dl
  41858b:	rcr    BYTE PTR [ecx-0x1678c934],0x23
  418592:	jmp    0x418518
  418594:	mov    eax,ds:0x89d53617
  418599:	push   0xffffffe2
  41859b:	cmp    edi,DWORD PTR [esi]
  41859d:	icebp  
  41859e:	cmp    DWORD PTR [edx+edi*1],ecx
  4185a1:	add    BYTE PTR [edx+0x6b],bl
  4185a4:	lahf   
  4185a5:	and    ebp,DWORD PTR [ecx]
  4185a7:	mov    bh,0x34
  4185a9:	cmp    al,BYTE PTR [ebx-0x64]
  4185ac:	xchg   edx,eax
  4185ad:	push   0x6c
  4185af:	iret   
  4185b0:	push   esp
  4185b1:	out    dx,al
  4185b2:	mov    cs,WORD PTR [esi-0xe]
  4185b5:	fcom   DWORD PTR [eax-0x11fd4e24]
  4185bb:	popa   
  4185bc:	pop    ss
  4185bd:	push   cs
  4185be:	fisubr WORD PTR [ebp-0x7cd039bb]
  4185c4:	mov    dh,0x47
  4185c6:	push   ebx
  4185c7:	rol    BYTE PTR [esi+0x75e288fd],cl
  4185cd:	lods   al,BYTE PTR ds:[esi]
  4185ce:	pop    edi
  4185cf:	push   edx
  4185d0:	sbb    DWORD PTR [eax],ebp
  4185d2:	data16 in al,0x77
  4185d5:	ja     0x41858e
  4185d7:	je     0x418605
  4185d9:	and    ch,dh
  4185db:	int    0xd2
  4185dd:	adc    eax,0x1de0769d
  4185e2:	and    al,0x4
  4185e4:	mov    edi,0x50553cec
  4185e9:	or     esp,DWORD PTR [ecx]
  4185eb:	inc    edi
  4185ec:	pop    esi
  4185ed:	inc    esp
  4185ee:	fs es callw 0xb7f2
  4185f4:	fdiv   QWORD PTR [ebx+0x6dc89279]
  4185fa:	bswap  eax
  4185fc:	mov    ebp,0x84d11be2
  418601:	cmp    edi,DWORD PTR [edi+0xd3c9e29]
  418607:	mov    eax,0x6007432d
  41860c:	sub    DWORD PTR [edx-0x71c23522],ecx
  418612:	dec    esp
  418613:	dec    esp
  418614:	ret    0x30c2
  418617:	stos   BYTE PTR es:[edi],al
  418618:	(bad)  
  418619:	or     al,al
  41861b:	(bad)  
  41861c:	fnclex 
  41861e:	xor    eax,0x1757b8e6
  418623:	and    DWORD PTR [ecx+0x14],ecx
  418626:	jp     0x418614
  418628:	ror    DWORD PTR [eax],0xc6
  41862b:	cmp    ch,BYTE PTR [eax]
  41862d:	int    0xbd
  41862f:	pop    ss
  418630:	lock push es
  418632:	push   ebx
  418633:	and    BYTE PTR [esi-0x1bc68bd1],dl
  418639:	dec    BYTE PTR [ebp+0x28]
  41863c:	jg     0x418603
  41863e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41863f:	retf   0x5482
  418642:	dec    ecx
  418643:	push   ss
  418644:	xor    BYTE PTR [ebp+edx*8-0x2092a30d],dh
  41864b:	lock repz fstp QWORD PTR [eax-0x76]
  418650:	mov    edx,0x1544c186
  418655:	mov    al,ds:0xaf9eccd8
  41865a:	in     eax,0xa9
  41865c:	(bad)  
  41865e:	sbb    esp,DWORD PTR [ebx]
  418660:	jo     0x4186aa
  418662:	cmp    eax,DWORD PTR [edi+0xcb38fd9]
  418668:	dec    esp
  418669:	push   ss
  41866a:	xchg   ebx,eax
  41866b:	retf   
  41866c:	and    al,0x4
  41866e:	xchg   edx,eax
  41866f:	and    edi,DWORD PTR [ebp+0x740e889b]
  418675:	and    edx,ebp
  418677:	mov    bl,0xcc
  418679:	inc    edx
  41867a:	jns    0x418674
  41867c:	hlt    
  41867d:	or     eax,0xa710e39e
  418682:	mov    ecx,0xb70591f7
  418687:	(bad)  
  418688:	push   esi
  418689:	push   es
  41868a:	adc    DWORD PTR [ebp+0x4d],eax
  41868d:	mov    ch,0xda
  41868f:	mov    bl,al
  418691:	cmp    al,0x3b
  418693:	push   0x584207f5
  418698:	imul   eax,DWORD PTR [ebx],0x8a91716b
  41869e:	bnd jle 0x4186cf
  4186a1:	cmp    BYTE PTR [esi-0x23808928],dl
  4186a7:	jg     0x418664
  4186a9:	pop    esp
  4186aa:	mov    DWORD PTR [ecx+0x7d47319f],ebx
  4186b0:	mov    ecx,0x8df9150b
  4186b5:	adc    al,0xa9
  4186b7:	jmp    0x2649aa11
  4186bc:	pop    ds
  4186bd:	xchg   esi,eax
  4186be:	jb     0x41873a
  4186c0:	pop    ds
  4186c1:	or     BYTE PTR [ecx+0x60efb6a9],dl
  4186c7:	cli    
  4186c8:	pop    ds
  4186c9:	lods   al,BYTE PTR ds:[esi]
  4186ca:	xchg   edi,eax
  4186cb:	mov    bh,0xf
  4186cd:	inc    edx
  4186ce:	loopne 0x4186ce
  4186d0:	xor    dl,bl
  4186d2:	xchg   DWORD PTR [ebp-0x44ef6c56],esp
  4186d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186d9:	mov    dh,0xc5
  4186db:	retf   
  4186dc:	dec    esp
  4186dd:	enter  0x77bc,0xf5
  4186e1:	ds or  eax,0xe592f883
  4186e7:	and    ecx,DWORD PTR [ebx+edx*2+0x32]
  4186eb:	mov    esi,0x6453b8d4
  4186f0:	in     eax,dx
  4186f1:	scas   eax,DWORD PTR es:[edi]
  4186f2:	mov    eax,ds:0xc9111eba
  4186f7:	std    
  4186f8:	call   0xb659ba94
  4186fd:	scas   eax,DWORD PTR es:[edi]
  4186fe:	mov    al,ds:0x4d34d2e0
  418703:	xchg   ebp,eax
  418704:	lea    ebp,[ecx+0x5d]
  418707:	int    0x9a
  418709:	jge    0x4186fb
  41870b:	lahf   
  41870c:	inc    ebp
  41870d:	mov    dl,0xf5
  41870f:	je     0x4186ac
  418711:	or     al,0x71
  418713:	imul   eax,edi,0xa30760b6
  418719:	dec    edi
  41871a:	jp     0x41876b
  41871c:	les    ecx,FWORD PTR [ebx+0x1d]
  41871f:	outs   dx,DWORD PTR ds:[esi]
  418720:	push   ebp
  418721:	push   0xafab97e5
  418726:	xlat   BYTE PTR ds:[ebx]
  418727:	je     0x41877f
  418729:	pop    esp
  41872a:	cli    
  41872b:	into   
  41872c:	ret    0x8f70
  41872f:	and    al,0x64
  418731:	pop    esp
  418732:	or     eax,0xec9e9393
  418737:	mov    ds:0x3a1eab5b,eax
  41873c:	popf   
  41873d:	adc    BYTE PTR [eax-0x38],al
  418740:	enter  0xa633,0x91
  418744:	fsub   st(2),st
  418746:	jecxz  0x4186f0
  418748:	sub    al,0x3a
  41874a:	in     al,dx
  41874b:	sbb    BYTE PTR [ebx+0x703ed00a],al
  418751:	out    dx,al
  418752:	(bad)  
  418753:	clc    
  418754:	icebp  
  418755:	add    BYTE PTR [edi+0x7b],ch
  418758:	es das 
  41875a:	inc    ebx
  41875b:	mov    ebx,DWORD PTR [ecx+0x66a54231]
  418761:	add    DWORD PTR [ecx+0x13],edx
  418764:	lds    ebp,FWORD PTR [ecx-0x58]
  418767:	loop   0x418782
  418769:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41876a:	stos   DWORD PTR es:[edi],eax
  41876b:	loopne 0x4187d0
  41876d:	(bad)  
  41876e:	push   cs
  41876f:	pop    ss
  418770:	xor    DWORD PTR [ebp-0x15648228],esp
  418776:	or     edx,DWORD PTR [eax]
  418778:	pop    ebp
  418779:	(bad)  
  41877a:	stos   DWORD PTR es:[edi],eax
  41877b:	jo     0x4187b8
  41877d:	sbb    ebp,DWORD PTR [eax+0x29507c1a]
  418783:	mov    eax,0xe53bd0ca
  418788:	out    0x9d,eax
  41878a:	jl     0x4187a0
  41878c:	or     cl,BYTE PTR [eax+edx*2+0x59]
  418790:	sbb    ebp,DWORD PTR [edi]
  418792:	xor    al,0x13
  418794:	test   eax,0xe3132c19
  418799:	mov    dh,0x6e
  41879b:	(bad)  
  41879c:	scas   eax,DWORD PTR es:[edi]
  41879d:	dec    ecx
  41879e:	lods   eax,DWORD PTR ds:[esi]
  41879f:	inc    edx
  4187a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187a1:	adc    BYTE PTR [esi+0x7174093a],bh
  4187a7:	pop    es
  4187a8:	push   esp
  4187a9:	leave  
  4187aa:	jbe    0x418734
  4187ac:	iret   
  4187ad:	xchg   ebp,eax
  4187ae:	jl     0x41879f
  4187b0:	test   eax,0x78c8240d
  4187b5:	adc    DWORD PTR [edx],eax
  4187b7:	stos   DWORD PTR es:[edi],eax
  4187b8:	aad    0xdb
  4187ba:	mov    ecx,ds
  4187bc:	sub    ebx,DWORD PTR [eax+esi*8-0x40]
  4187c0:	and    DWORD PTR [eax],edx
  4187c2:	add    al,0x40
  4187c4:	pushf  
  4187c5:	sub    BYTE PTR [esi],bl
  4187c7:	jnp    0x41878a
  4187c9:	xor    al,0xb8
  4187cb:	mov    ah,0x29
  4187cd:	mov    esp,0x5ea657e5
  4187d2:	jle    0x4187a5
  4187d4:	pop    es
  4187d5:	data16 mov ch,0x6a
  4187d8:	mov    cs,WORD PTR [ecx+0x73780cc4]
  4187de:	sub    DWORD PTR [ecx+0x67016925],ecx
  4187e4:	jmp    0x418795
  4187e6:	popa   
  4187e7:	jnp    0x4187dc
  4187e9:	cs cli 
  4187eb:	cli    
  4187ec:	dec    ecx
  4187ed:	neg    DWORD PTR [ebp+0x4df83280]
  4187f3:	push   ss
  4187f4:	mov    ch,0x87
  4187f6:	xchg   ebp,ebp
  4187f8:	xchg   ecx,eax
  4187f9:	gs pushf 
  4187fb:	cmp    eax,0x4169b5f8
  418800:	inc    eax
  418801:	cs int 0x5b
  418804:	xor    eax,0x4715e03a
  418809:	daa    
  41880a:	(bad)  
  41880c:	add    al,0x33
  41880e:	aas    
  41880f:	pop    ecx
  418810:	or     eax,0xe20e3f4a
  418815:	aas    
  418816:	data16 sti 
  418818:	push   ebp
  418819:	test   BYTE PTR [ebx],bh
  41881b:	or     ecx,DWORD PTR [edx-0x1a]
  41881e:	sbb    eax,0x207a40a4
  418823:	inc    esi
  418824:	or     BYTE PTR [edx-0x1f5d7f10],bl
  41882a:	mov    DWORD PTR [ecx+0x46a574b7],ecx
  418830:	clc    
  418831:	push   edx
  418832:	stos   BYTE PTR es:[edi],al
  418833:	pop    esi
  418834:	lods   al,BYTE PTR ds:[esi]
  418835:	dec    edi
  418836:	fstp   QWORD PTR [ebx-0x2df47b26]
  41883c:	test   DWORD PTR [edx],eax
  41883e:	ret    0xd6a0
  418841:	mov    esp,0x3a43ac96
  418846:	inc    edx
  418847:	inc    edx
  418848:	mov    ebx,0x4f65b35d
  41884d:	dec    esi
  41884e:	stos   DWORD PTR es:[edi],eax
  41884f:	push   0x87b231e7
  418854:	push   edi
  418855:	cwde   
  418856:	lods   eax,DWORD PTR ds:[esi]
  418857:	loopne 0x41881f
  418859:	jns    0x41883d
  41885b:	jmp    0x31e3f749
  418860:	jge    0x41884a
  418862:	mov    bh,BYTE PTR [edx-0x68]
  418865:	out    0xea,al
  418867:	repz jbe 0x4188cf
  41886a:	xor    ch,BYTE PTR [esi+0x4ab68d46]
  418870:	xor    al,0x62
  418872:	out    0x72,al
  418874:	mov    bl,dh
  418876:	ins    BYTE PTR es:[edi],dx
  418877:	addr16 mov cl,0x39
  41887a:	jae    0x4188ca
  41887c:	push   ebp
  41887d:	mov    ecx,0xec4147b9
  418882:	mov    ebp,?
  418884:	push   ss
  418885:	ins    DWORD PTR es:[edi],dx
  418886:	cmp    DWORD PTR [esi-0x52],edi
  418889:	adc    ah,BYTE PTR [esi-0x2ae2e68c]
  41888f:	mov    cl,0xa8
  418891:	mov    bh,0xb7
  418893:	(bad)  
  418896:	mov    dl,0xce
  418898:	cmp    DWORD PTR [esp+ecx*2-0x3b],0xffffff87
  41889d:	sti    
  41889e:	inc    esp
  41889f:	lods   eax,DWORD PTR ds:[esi]
  4188a0:	pop    esi
  4188a1:	or     ah,bh
  4188a3:	add    al,0xa0
  4188a5:	call   0x2302:0xd43378c7
  4188ac:	sbb    edx,DWORD PTR [esi]
  4188ae:	inc    ecx
  4188af:	ret    
  4188b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188b1:	out    dx,al
  4188b2:	jle    0x418871
  4188b4:	xor    dh,BYTE PTR [ebp+0x1c]
  4188b7:	icebp  
  4188b8:	inc    edx
  4188b9:	fidivr WORD PTR [edx+0x21fa5cab]
  4188bf:	imul   edx,DWORD PTR [ebx],0x5b
  4188c2:	xor    bh,cl
  4188c4:	(bad)  
  4188c5:	out    dx,eax
  4188c6:	test   BYTE PTR [eax+eax*2+0x12],dl
  4188ca:	shl    DWORD PTR [ecx+0x2c6f6937],0x9d
  4188d1:	call   0xbaf7:0xd1aa8052
  4188d8:	or     esp,DWORD PTR [esi+0x8]
  4188db:	sbb    ch,BYTE PTR [edi+0x54]
  4188de:	mov    ch,0xec
  4188e0:	or     eax,0x98c00ca8
  4188e5:	xor    eax,0x51c130e
  4188ea:	cmp    eax,0xb1b69498
  4188ef:	loope  0x418941
  4188f1:	lea    edi,[edx]
  4188f3:	push   0xffffffcf
  4188f5:	out    0x2f,eax
  4188f7:	sbb    eax,0x28c75540
  4188fc:	inc    ecx
  4188fd:	fdiv   QWORD PTR [edx]
  4188ff:	imul   ecx,DWORD PTR [esi+0x194b0aee],0x58
  418906:	push   0x0
  418908:	repnz push 0x2b7df0c
  41890e:	or     DWORD PTR [edi],0x1
  418911:	loop   0x4188ae
  418913:	push   0x1f5f4ff9
  418918:	scas   eax,DWORD PTR es:[edi]
  418919:	xchg   ebx,eax
  41891a:	mov    cl,0xd3
  41891c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41891d:	ret    
  41891e:	outs   dx,DWORD PTR ds:[esi]
  41891f:	mul    BYTE PTR [edx+0x77258c2a]
  418925:	leave  
  418926:	jge    0x418926
  418928:	into   
  418929:	add    DWORD PTR [ecx-0x63],edx
  41892c:	add    BYTE PTR [esi-0x9],0x2c
  418930:	mov    WORD PTR [eax-0x7f8853eb],?
  418936:	pop    edi
  418937:	arpl   si,sp
  418939:	jne    0x4188fb
  41893b:	cmp    esi,DWORD PTR [edi+edx*1+0x79225005]
  418942:	inc    esp
  418943:	dec    esp
  418944:	add    dl,ah
  418946:	iret   
  418947:	dec    esi
  418948:	xor    al,0x42
  41894a:	jns    0x4188e5
  41894c:	adc    al,al
  41894e:	setb   BYTE PTR [eax+esi*8-0x14]
  418953:	mov    al,BYTE PTR [edx-0x4f4b2aba]
  418959:	add    dh,BYTE PTR [ebp-0x42]
  41895c:	mov    dh,0xef
  41895e:	jb     0x4189bc
  418960:	push   esp
  418961:	xchg   bh,dh
  418963:	cmp    DWORD PTR [ebx+edi*8-0x4a],ecx
  418967:	pop    ecx
  418968:	lahf   
  418969:	neg    BYTE PTR [ebx-0x37]
  41896c:	adc    edx,edi
  41896e:	mov    ebx,0x82802b91
  418973:	mov    eax,?
  418975:	mov    ebx,0xeab454cc
  41897a:	sub    eax,0xf2934396
  41897f:	fnstsw WORD PTR [ecx+0x7a]
  418982:	jp     0x4189a6
  418984:	mov    BYTE PTR [ebx-0x3c],ah
  418987:	push   cs
  418988:	pop    es
  418989:	retf   
  41898a:	cdq    
  41898b:	scas   al,BYTE PTR es:[edi]
  41898c:	or     DWORD PTR [ecx],0x38887b0
  418992:	and    ch,BYTE PTR [ebx]
  418994:	or     BYTE PTR [ecx+0x3550c257],ch
  41899a:	dec    ecx
  41899b:	dec    esp
  41899c:	add    BYTE PTR [ecx],cl
  41899e:	jg     0x4189d7
  4189a0:	stos   DWORD PTR es:[edi],eax
  4189a1:	pop    ecx
  4189a2:	repz jge 0x418a0e
  4189a5:	mov    ds:0x4a997686,eax
  4189aa:	retf   
  4189ab:	xchg   ecx,eax
  4189ac:	mov    dl,0x45
  4189ae:	fiadd  DWORD PTR cs:[ebx+0x62e4b687]
  4189b5:	retf   0x1c4f
  4189b8:	gs pop esi
  4189ba:	icebp  
  4189bb:	(bad)  
  4189bc:	les    ebx,FWORD PTR [edi-0x4e]
  4189bf:	pop    esp
  4189c0:	out    dx,al
  4189c1:	aaa    
  4189c2:	cmp    al,cl
  4189c4:	rcl    BYTE PTR [esi-0x31],0x20
  4189c8:	aad    0x4a
  4189ca:	mov    ebp,0x2534a331
  4189cf:	(bad)  
  4189d1:	inc    esp
  4189d2:	inc    ebp
  4189d3:	into   
  4189d4:	and    DWORD PTR [eax-0x7c],eax
  4189d7:	loop   0x418971
  4189d9:	pop    es
  4189da:	jl     0x418a05
  4189dc:	scas   al,BYTE PTR es:[edi]
  4189dd:	push   ss
  4189de:	pop    eax
  4189df:	jl     0x418a0b
  4189e1:	mov    ds:0x5a189022,eax
  4189e6:	xchg   esp,eax
  4189e7:	inc    edi
  4189e8:	jns    0x41899d
  4189ea:	jmp    0x9326156b
  4189ef:	in     al,dx
  4189f0:	test   al,0xa
  4189f2:	or     eax,0x84b911ed
  4189f7:	clc    
  4189f8:	ret    
  4189f9:	mov    al,ds:0xffbe9f6a
  4189fe:	fadd   DWORD PTR [ebp+0x7c]
  418a01:	pop    eax
  418a02:	adc    al,0x6c
  418a04:	xor    esi,esp
  418a06:	fcmovne st,st(7)
  418a08:	pop    eax
  418a09:	push   0xffffffe3
  418a0b:	dec    ecx
  418a0c:	nop
  418a0d:	imul   DWORD PTR [ebx]
  418a0f:	push   0xffffffcd
  418a11:	out    0x9c,al
  418a13:	pop    ds
  418a14:	arpl   WORD PTR [edx-0x30901fc1],bp
  418a1a:	rcl    BYTE PTR [edi+ebx*4+0x4d],cl
  418a1e:	popa   
  418a1f:	pop    ss
  418a20:	enter  0x70fd,0x1c
  418a24:	or     DWORD PTR [eax-0x6a878427],0x72fae980
  418a2e:	jmp    0x4f7d59cd
  418a33:	mov    dl,0x1b
  418a35:	stc    
  418a36:	add    BYTE PTR [ebp-0x52b3be8f],al
  418a3c:	test   BYTE PTR [edx-0x58],ah
  418a3f:	mov    esp,0x6c469cd
  418a44:	fild   QWORD PTR [ebp*1+0x4b7af906]
  418a4b:	daa    
  418a4c:	jmp    0xf0b4:0x529584cf
  418a53:	mov    ebp,0x763cbc4e
  418a58:	push   cs
  418a59:	call   edx
  418a5b:	or     bl,BYTE PTR [edi-0x44b01503]
  418a61:	arpl   WORD PTR [edx-0x4],si
  418a64:	mov    WORD PTR [ebx-0xa6206e1],cs
  418a6a:	fidivr WORD PTR [ebx+ebx*8-0xc74afe0]
  418a71:	dec    edx
  418a72:	shl    BYTE PTR [esi+edi*1-0x53e6a8d5],0xf9
  418a7a:	jmp    0xb31a:0xc1925a82
  418a81:	jmp    0x418a99
  418a83:	pusha  
  418a84:	test   BYTE PTR [ecx],0x40
  418a87:	out    dx,al
  418a88:	les    ecx,FWORD PTR [ecx+0x7e]
  418a8b:	pop    ds
  418a8c:	(bad)  
  418a8d:	mov    al,0x8f
  418a8f:	test   eax,0x80ac2a8d
  418a94:	inc    edx
  418a95:	in     eax,0x54
  418a97:	fdiv   QWORD PTR gs:[edi+0x2e492cc8]
  418a9e:	ror    DWORD PTR ds:0x18243576,cl
  418aa4:	sub    eax,0xf84d95b3
  418aa9:	adc    DWORD PTR [edx],edx
  418aab:	sbb    DWORD PTR ds:0xf6035e93,ebp
  418ab1:	iret   
  418ab2:	mov    ds:0xbd89733a,eax
  418ab7:	push   edi
  418ab8:	addr16 sbb ch,cl
  418abb:	int    0xe9
  418abd:	mov    DWORD PTR [esi-0x10353c98],eax
  418ac3:	fbld   TBYTE PTR [edx-0x71]
  418ac6:	sar    DWORD PTR [ebp+ebx*4+0x57],0x69
  418acb:	fnstcw WORD PTR [esi]
  418acd:	mov    edx,0xf464010f
  418ad2:	pushf  
  418ad3:	adc    DWORD PTR [si],edx
  418ad6:	fs push es
  418ad8:	xchg   edx,eax
  418ad9:	inc    esi
  418ada:	jnp    0x418b2e
  418adc:	sbb    al,0xee
  418ade:	cld    
  418adf:	mov    eax,0xe64e5414
  418ae4:	sub    esp,DWORD PTR [ecx]
  418ae6:	mov    eax,0x737b8bcb
  418aeb:	test   BYTE PTR [ecx+edx*2-0xc71b3bb],dh
  418af2:	sbb    bh,ch
  418af4:	(bad)  
  418af5:	sbb    eax,0x97f7ed1a
  418afa:	bound  esp,QWORD PTR [edi+0x4d12f738]
  418b00:	mov    ecx,0x41ea99d6
  418b05:	cwde   
  418b06:	in     eax,dx
  418b07:	out    dx,al
  418b08:	test   DWORD PTR [edx-0x6a],0xe0fa3a31
  418b0f:	and    BYTE PTR [ebp+ebp*8+0x576f088a],bl
  418b16:	push   esp
  418b17:	inc    esp
  418b18:	data16 ss out dx,al
  418b1b:	xor    BYTE PTR [edx],dl
  418b1d:	enter  0x6894,0x53
  418b21:	shl    BYTE PTR [ebp+0x3e763268],1
  418b27:	add    DWORD PTR [eax],0xffffffd2
  418b2a:	cmp    bh,dh
  418b2c:	xchg   edx,eax
  418b2d:	enter  0x6723,0xb3
  418b31:	leave  
  418b32:	int3   
  418b33:	xchg   ebp,eax
  418b34:	cmp    esp,DWORD PTR [eax-0x2]
  418b37:	sub    BYTE PTR [edi],cl
  418b39:	sbb    ch,BYTE PTR [esi+0x7398f13e]
  418b3f:	rcl    BYTE PTR [edx+0x63],0xd0
  418b43:	fwait
  418b44:	sbb    esp,ebp
  418b46:	inc    ebp
  418b47:	jmp    0x905c:0x516ea0de
  418b4e:	faddp  st(6),st
  418b50:	out    dx,al
  418b51:	nop
  418b52:	(bad)  
  418b53:	retf   
  418b54:	imul   edi,DWORD PTR [edi+0x22],0x28f59aaa
  418b5b:	add    ecx,DWORD PTR [edx+0x25]
  418b5e:	cmp    esp,DWORD PTR [ebx-0xd]
  418b61:	or     BYTE PTR [ebx],0xe5
  418b64:	enter  0xe5c1,0x9a
  418b68:	cmp    eax,0x954c5746
  418b6d:	sbb    dl,al
  418b6f:	mov    ch,0xab
  418b71:	fwait
  418b72:	js     0x418be0
  418b74:	ins    BYTE PTR es:[edi],dx
  418b75:	ja     0x418b34
  418b77:	xor    al,0x4e
  418b79:	pop    ecx
  418b7a:	jmp    0x9350:0x15382729
  418b81:	je     0x418bed
  418b83:	jb     0x418ba7
  418b85:	mov    al,0x13
  418b87:	fcmovbe st,st(7)
  418b89:	inc    ebx
  418b8a:	xor    eax,0x435ff692
  418b8f:	mov    ds:0xafbbc92b,al
  418b94:	jecxz  0x418b2c
  418b96:	fcmovu st,st(6)
  418b98:	(bad)  
  418b99:	pop    ds
  418b9a:	jae    0x418b98
  418b9c:	mov    ds:0x1419135b,eax
  418ba1:	stc    
  418ba2:	mov    edx,0xc217116f
  418ba7:	sub    DWORD PTR [ebx],edx
  418ba9:	cmp    edx,DWORD PTR [eax-0x1305835c]
  418baf:	es xor ch,dl
  418bb2:	or     BYTE PTR [edi-0x69550395],ch
  418bb8:	or     BYTE PTR [ecx-0x83c8ebf],0x9f
  418bbf:	mov    al,al
  418bc1:	imul   edx
  418bc3:	inc    ebp
  418bc4:	add    al,0x36
  418bc6:	inc    ebx
  418bc7:	xchg   ebp,eax
  418bc8:	dec    edx
  418bc9:	mov    eax,0x9c63fe30
  418bce:	in     al,dx
  418bcf:	push   cs
  418bd0:	scas   eax,DWORD PTR es:[edi]
  418bd1:	ins    DWORD PTR es:[edi],dx
  418bd2:	jns    0x418c53
  418bd4:	mul    ah
  418bd6:	js     0x418bcd
  418bd8:	mov    bl,0xa6
  418bda:	mov    cl,BYTE PTR [ebp-0x13]
  418bdd:	xchg   edx,eax
  418bde:	sub    bh,al
  418be0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418be1:	or     ebp,DWORD PTR [ebx+0x4c323f47]
  418be7:	add    eax,0xa8324dc
  418bec:	stc    
  418bed:	cmp    bh,al
  418bef:	mov    esi,0x9961ea04
  418bf4:	ror    edi,0x3b
  418bf7:	inc    esi
  418bf8:	int    0x5f
  418bfa:	les    ecx,FWORD PTR [edi+0x79]
  418bfd:	iret   
  418bfe:	mov    bh,0xae
  418c00:	sar    DWORD PTR [edx+eax*1-0x7b9dfb47],1
  418c07:	mov    al,ds:0x944c01e5
  418c0c:	out    dx,eax
  418c0d:	xchg   ecx,eax
  418c0e:	out    0xd7,al
  418c10:	in     eax,dx
  418c11:	lods   eax,DWORD PTR ds:[esi]
  418c12:	xchg   ebp,eax
  418c13:	xchg   ebp,eax
  418c14:	cmp    DWORD PTR [ecx],0x2f
  418c17:	inc    esi
  418c18:	retf   
  418c19:	dec    ecx
  418c1a:	sti    
  418c1b:	sbb    BYTE PTR [ebx],dh
  418c1d:	cmp    al,0x96
  418c1f:	loopne 0x418bef
  418c21:	mov    cl,0xb5
  418c23:	mov    ds:0xbd0b56ac,eax
  418c28:	leave  
  418c29:	clc    
  418c2a:	popa   
  418c2b:	xor    bl,BYTE PTR [eax]
  418c2d:	sbb    eax,ebx
  418c2f:	jbe    0x418bd2
  418c31:	pop    es
  418c32:	and    al,0xbd
  418c34:	dec    ecx
  418c35:	popf   
  418c36:	mov    bh,0x6c
  418c38:	dec    edx
  418c39:	cld    
  418c3a:	push   ebp
  418c3b:	icebp  
  418c3c:	(bad)  
  418c3e:	mov    esi,0xed1ab1db
  418c43:	aaa    
  418c44:	addr16 (bad) 
  418c46:	or     al,0x8e
  418c48:	std    
  418c49:	es push esi
  418c4b:	adc    DWORD PTR [ebx-0x170b4e2e],0x2
  418c52:	fstp   DWORD PTR [esi+0x6249592c]
  418c58:	cld    
  418c59:	push   ebx
  418c5a:	outs   dx,DWORD PTR ds:[esi]
  418c5b:	fist   WORD PTR [ecx]
  418c5d:	jno    0x418cbf
  418c5f:	push   0xff927396
  418c64:	cld    
  418c65:	adc    BYTE PTR [edi],al
  418c67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c68:	test   DWORD PTR [esi],eax
  418c6a:	sub    ebx,edi
  418c6c:	or     al,0xec
  418c6e:	xchg   BYTE PTR [edi-0x37d7367c],ah
  418c74:	push   ss
  418c75:	scas   eax,DWORD PTR es:[edi]
  418c76:	push   esi
  418c77:	inc    eax
  418c78:	inc    DWORD PTR [edx+0x57]
  418c7b:	dec    edx
  418c7c:	(bad)  
  418c7e:	pop    ebx
  418c7f:	fsqrt  
  418c81:	jge    0x418c2c
  418c83:	in     al,0xca
  418c85:	fwait
  418c86:	push   edx
  418c87:	jne    0x418c2c
  418c89:	loopne 0x418c5e
  418c8b:	pushf  
  418c8c:	add    eax,0x2b764235
  418c91:	ficomp WORD PTR [ebx]
  418c93:	bound  ecx,QWORD PTR [ebx]
  418c95:	pop    ss
  418c96:	sub    edx,DWORD PTR [ecx+0x4d]
  418c99:	fidiv  WORD PTR [edx+0x40]
  418c9c:	xor    edi,esp
  418c9e:	mov    edi,0x559a9148
  418ca3:	jmp    0x418c94
  418ca5:	into   
  418ca6:	ins    BYTE PTR es:[edi],dx
  418ca7:	xchg   esi,eax
  418ca8:	stos   BYTE PTR es:[edi],al
  418ca9:	push   esi
  418caa:	push   ss
  418cab:	int    0x20
  418cad:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  418caf:	push   ecx
  418cb0:	inc    esp
  418cb1:	jbe    0x418c35
  418cb3:	mov    esp,0x6d9ddf00
  418cb8:	loop   0x418c96
  418cba:	sub    esi,DWORD PTR [ebx+0x1]
  418cbd:	retf   0x83e9
  418cc0:	pop    esp
  418cc1:	in     eax,0x2c
  418cc3:	js     0x418ccc
  418cc5:	lds    ebp,FWORD PTR [ecx+eiz*8+0x6b534ce1]
  418ccc:	out    0x16,eax
  418cce:	add    al,dh
  418cd0:	mov    esi,0x1132e505
  418cd5:	add    al,0x95
  418cd7:	(bad)  
  418cd8:	in     eax,0xa5
  418cda:	cmova  ecx,DWORD PTR [edi]
  418cdd:	enter  0xace0,0x3f
  418ce1:	repnz or DWORD PTR [edi+0x2c],0xc3012bb1
  418ce9:	pop    es
  418cea:	call   0x5f0e502c
  418cef:	ins    BYTE PTR es:[edi],dx
  418cf0:	out    dx,eax
  418cf1:	mov    ebp,DWORD PTR [eax-0x3]
  418cf4:	xor    bl,BYTE PTR es:[edi-0x639d35e5]
  418cfb:	(bad)  
  418cfc:	shr    BYTE PTR [edx],cl
  418cfe:	addr16 mov ds:0x632c,eax
  418d02:	out    0x2e,al
  418d04:	das    
  418d05:	mov    ds:0xd4efd662,al
  418d0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d0b:	lea    ebp,[eax-0x46fc61f9]
  418d11:	jmp    0xa501:0x723f0928
  418d18:	out    dx,al
  418d19:	retf   0x2b80
  418d1c:	xor    dh,0xd6
  418d1f:	jle    0x418cb4
  418d21:	daa    
  418d22:	xor    DWORD PTR [edx-0x6a567396],eax
  418d28:	cmp    bl,dl
  418d2a:	mov    bl,0x3e
  418d2c:	jge    0x418cef
  418d2e:	ss std 
  418d30:	fadd   DWORD PTR [ecx+0x4a]
  418d33:	or     eax,0xec2effb0
  418d38:	cld    
  418d39:	xor    ebp,DWORD PTR [edx]
  418d3b:	sub    DWORD PTR [esi-0x3e],ebp
  418d3e:	or     dh,al
  418d40:	loope  0x418d61
  418d42:	push   esi
  418d43:	inc    esp
  418d44:	shr    DWORD PTR [eax],0x22
  418d47:	or     ebx,DWORD PTR [edi+0x21]
  418d4a:	mov    esi,0x662ee4d7
  418d4f:	out    dx,al
  418d50:	test   BYTE PTR [eax],dh
  418d52:	fdivr  QWORD PTR [eax]
  418d54:	jmp    0xa043ebe5
  418d59:	jb     0x418db1
  418d5b:	mov    ah,0xfc
  418d5d:	mov    dh,0x6f
  418d5f:	test   al,0x93
  418d61:	mov    ds:0x3ee88a66,al
  418d66:	cwde   
  418d67:	jmp    0x37e0:0x6744ace1
  418d6e:	cmc    
  418d6f:	bound  esi,QWORD PTR [eax+0x571391bc]
  418d75:	js     0x418d62
  418d77:	retf   0x3b49
  418d7a:	mov    cl,BYTE PTR [esi]
  418d7c:	in     eax,0xbb
  418d7e:	pop    esi
  418d7f:	cdq    
  418d80:	imul   esi,DWORD PTR [ecx+ebx*8+0x15]
  418d85:	retf   0xc357
  418d88:	jp     0x418d27
  418d8a:	sbb    dl,BYTE PTR [ebx]
  418d8c:	popf   
  418d8d:	add    dh,bh
  418d8f:	ds jecxz 0x418d9d
  418d92:	push   ss
  418d93:	and    al,0xd3
  418d95:	fmul   DWORD PTR [ebp-0x45c39ecc]
  418d9b:	daa    
  418d9c:	sub    DWORD PTR [edx],esi
  418d9e:	jnp    0x418dd1
  418da0:	out    0x31,al
  418da2:	inc    edx
  418da3:	aad    0x6b
  418da5:	repnz xchg ebx,eax
  418da7:	mov    ds:0x357342bf,eax
  418dac:	cld    
  418dad:	mov    ecx,0xb4b301d3
  418db2:	add    BYTE PTR [ebp+0x1be31feb],bl
  418db8:	adc    eax,DWORD PTR [eax-0x2aaf5c70]
  418dbe:	(bad)  
  418dbf:	jmp    0x906959b9
  418dc4:	pop    edx
  418dc5:	jle    0x418dc4
  418dc7:	shl    DWORD PTR [ebp+0x2a],0xcd
  418dcb:	enter  0xa361,0x88
  418dcf:	neg    BYTE PTR [ecx]
  418dd1:	jnp    0x418d5b
  418dd3:	sub    al,dh
  418dd5:	(bad)  
  418dd6:	std    
  418dd7:	nop
  418dd8:	ds and eax,0x5a10818a
  418dde:	loop   0x418de1
  418de0:	jae    0x418e18
  418de2:	sub    ecx,DWORD PTR [edx]
  418de4:	loope  0x418e07
  418de6:	call   0xa5315f7d
  418deb:	test   al,0x2b
  418ded:	aaa    
  418dee:	xor    eax,0x490a7335
  418df3:	or     edx,DWORD PTR [esi-0x201cd46f]
  418df9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dfa:	mov    WORD PTR [ecx],ss
  418dfc:	out    0x8f,eax
  418dfe:	push   0xffffff88
  418e00:	pop    ecx
  418e01:	xchg   ecx,eax
  418e02:	iret   
  418e03:	out    0xf8,al
  418e05:	daa    
  418e06:	sar    edi,1
  418e08:	into   
  418e09:	enter  0x10f5,0xe1
  418e0d:	push   es
  418e0e:	test   bh,dh
  418e10:	mov    ebp,0x8303c5b6
  418e15:	xchg   ebp,eax
  418e16:	inc    esi
  418e17:	mov    eax,ds:0xe1dc32d0
  418e1c:	add    esi,DWORD PTR [esi+0x469c73a2]
  418e22:	push   eax
  418e23:	dec    ebx
  418e24:	sbb    al,0x65
  418e26:	pop    ebx
  418e27:	(bad)  
  418e28:	call   0xe97570be
  418e2d:	popa   
  418e2e:	sahf   
  418e2f:	outs   dx,DWORD PTR ds:[esi]
  418e30:	jne    0x418e34
  418e32:	push   ebx
  418e33:	pop    ds
  418e34:	jmp    0x418e8e
  418e36:	cmp    ebx,DWORD PTR [ecx]
  418e38:	cmp    ch,0xe8
  418e3b:	sar    bl,0xf0
  418e3e:	cmp    al,0x31
  418e40:	or     BYTE PTR [ebp+0x41],bl
  418e43:	xor    dl,BYTE PTR [ebp+0x58]
  418e46:	fistp  WORD PTR [eax+0x70]
  418e49:	jno    0x418e50
  418e4b:	and    bl,cl
  418e4d:	fwait
  418e4e:	and    al,0x7d
  418e50:	adc    bl,BYTE PTR [edx-0xb]
  418e53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e54:	out    0x16,eax
  418e56:	fidiv  WORD PTR [esi-0x749d7e67]
  418e5c:	mov    bl,0x5c
  418e5e:	mov    dh,0x5c
  418e60:	and    DWORD PTR [edx+0x61],ebp
  418e63:	rol    ah,cl
  418e65:	xchg   esp,eax
  418e66:	je     0x418ec2
  418e68:	jo     0x418dfb
  418e6a:	pop    eax
  418e6b:	add    ch,BYTE PTR [esi-0x57]
  418e6e:	icebp  
  418e6f:	mov    bh,BYTE PTR [esi+0x40b75f28]
  418e75:	xchg   ecx,eax
  418e76:	or     al,0xb
  418e78:	xor    al,0x8
  418e7a:	jae    0x418eb1
  418e7c:	push   esp
  418e7d:	push   ss
  418e7e:	push   edx
  418e7f:	sbb    BYTE PTR [edi+0x24],al
  418e82:	add    eax,0xd6556e71
  418e87:	push   es
  418e88:	sbb    eax,0x52fe072d
  418e8d:	dec    edx
  418e8e:	ds sub bl,bh
  418e91:	cli    
  418e92:	arpl   WORD PTR [ecx+0x2a9176b5],si
  418e98:	mov    edx,0x3ff2f6ac
  418e9d:	xchg   BYTE PTR [ebp+0x201b9547],dl
  418ea3:	sub    dl,al
  418ea5:	dec    esi
  418ea6:	mov    edx,0x80c1e21e
  418eab:	push   es
  418eac:	nop
  418ead:	jl     0x418eb1
  418eaf:	(bad)  
  418eb0:	lock mov bl,0x1
  418eb3:	dec    edx
  418eb4:	adc    eax,0x214c3d82
  418eb9:	lahf   
  418eba:	loope  0x418f1f
  418ebc:	jmp    0xfdac902a
  418ec1:	sbb    BYTE PTR [ecx],al
  418ec3:	ret    0x45a3
  418ec6:	jae    0x418f2d
  418ec8:	push   edi
  418ec9:	jne    0x418ebc
  418ecb:	mov    dl,0xd2
  418ecd:	mov    al,ds:0x76c89473
  418ed2:	int    0xb1
  418ed4:	(bad)  
  418ed5:	or     eax,0xc4464804
  418eda:	xchg   esp,eax
  418edb:	test   ch,bh
  418edd:	sub    eax,0xdf9e865a
  418ee2:	add    BYTE PTR [ecx+edi*2],0x6b
  418ee6:	and    DWORD PTR [ecx],0xffffff95
  418ee9:	in     eax,0x4f
  418eeb:	or     al,0xa7
  418eed:	iret   
  418eee:	adc    ebp,ecx
  418ef0:	pop    es
  418ef1:	xchg   BYTE PTR [esi-0x1d],dl
  418ef4:	in     al,0x9
  418ef6:	popa   
  418ef7:	inc    ecx
  418ef8:	jecxz  0x418f63
  418efa:	mov    dh,0xe5
  418efc:	clc    
  418efd:	popa   
  418efe:	sar    ebx,1
  418f00:	xor    al,0x21
  418f02:	sub    DWORD PTR [ebp-0x7d],0xfffffff7
  418f06:	jns    0x418f74
  418f08:	mov    ds:0x8e51e926,al
  418f0d:	repnz in eax,dx
  418f0f:	push   edx
  418f10:	mov    edi,0x27b1967d
  418f15:	outs   dx,DWORD PTR ds:[esi]
  418f16:	ret    0xaac3
  418f19:	inc    ecx
  418f1a:	fs cmp ah,al
  418f1d:	mov    ebp,0xf1400298
  418f22:	xchg   ebp,eax
  418f23:	mov    bl,0x7c
  418f25:	adc    eax,0x92103280
  418f2a:	and    bl,0x8b
  418f2d:	outs   dx,BYTE PTR ds:[esi]
  418f2e:	out    dx,al
  418f2f:	xor    ebp,ecx
  418f31:	and    eax,0x3693e1e4
  418f36:	popf   
  418f37:	mov    ecx,0x46d9e6c0
  418f3c:	dec    edx
  418f3d:	jmp    0x698e:0x9f9fbd8a
  418f44:	out    dx,al
  418f45:	jno    0x418f64
  418f47:	imul   edi,DWORD PTR [edx-0x38acdfea],0xffffffe6
  418f4e:	in     eax,0x2c
  418f50:	xchg   BYTE PTR [ebp-0x23df9486],ch
  418f56:	dec    edi
  418f57:	loopne 0x418eec
  418f59:	ffree  st(1)
  418f5b:	lods   eax,DWORD PTR ds:[esi]
  418f5c:	pop    esi
  418f5d:	sbb    al,0xc
  418f5f:	adc    BYTE PTR [ebp-0x2c],al
  418f62:	(bad)  
  418f64:	mov    esi,0x3cd7918d
  418f69:	cmp    edi,DWORD PTR [ebp+0x6d]
  418f6c:	and    BYTE PTR [edx-0x62e277d],dh
  418f72:	cmp    DWORD PTR [eax],0xffffffbd
  418f75:	mov    edx,0x71d8b3d1
  418f7a:	pop    es
  418f7b:	add    ah,BYTE PTR [edi]
  418f7d:	jge    0x418f8d
  418f7f:	pushf  
  418f80:	cmp    ch,bl
  418f82:	xchg   eax,ebx
  418f84:	rol    DWORD PTR [ecx+0x55],0x7e
  418f88:	in     al,dx
  418f89:	add    DWORD PTR [ebx-0x5dc28788],ecx
  418f8f:	shl    DWORD PTR [esi-0x1d],cl
  418f92:	test   DWORD PTR [ecx*1+0x771a8317],esi
  418f99:	cmc    
  418f9a:	out    0x42,al
  418f9c:	call   0x3200a899
  418fa1:	xlat   BYTE PTR ds:[ebx]
  418fa2:	push   ecx
  418fa3:	inc    ecx
  418fa4:	outs   dx,DWORD PTR ds:[esi]
  418fa5:	xchg   ebx,eax
  418fa6:	pop    esp
  418fa7:	cmp    BYTE PTR [ebp-0x52],ch
  418faa:	(bad)  
  418fab:	sti    
  418fac:	enter  0x3cd,0xd6
  418fb0:	and    al,0x6
  418fb2:	sub    BYTE PTR [ebp-0x42],dh
  418fb5:	inc    ecx
  418fb6:	mov    esp,0x80edabbf
  418fbb:	cmp    edi,esi
  418fbd:	(bad)  
  418fbe:	fild   WORD PTR [edi+0x75]
  418fc1:	cmp    DWORD PTR [eax],0xffffffae
  418fc4:	pop    ds
  418fc5:	popf   
  418fc6:	mov    dl,dl
  418fc8:	jb     0x419044
  418fca:	jnp    0x419006
  418fcc:	adc    DWORD PTR [edx+0x4d43e576],esi
  418fd2:	repz fdivrp st(1),st
  418fd5:	retf   0x7f22
  418fd8:	sub    al,0x55
  418fda:	cdq    
  418fdb:	push   DWORD PTR [ecx-0x63]
  418fde:	mov    ecx,0x4f7f933c
  418fe3:	dec    edx
  418fe4:	shl    DWORD PTR [ecx-0x51],1
  418fe7:	inc    eax
  418fe8:	test   eax,0x49f36874
  418fed:	cld    
  418fee:	fisttp QWORD PTR [esi+0x58647a5]
  418ff4:	dec    edi
  418ff5:	aaa    
  418ff6:	or     cl,BYTE PTR [eax]
  418ff8:	sub    eax,0x8a326c23
  418ffd:	pop    es
  418ffe:	fistp  DWORD PTR [eax-0x4f281af8]
  419004:	jmp    0x418ffa
  419006:	mov    ebx,DWORD PTR [eax+0x50]
  419009:	sbb    eax,0x5df851c6
  41900e:	pop    DWORD PTR [edx+0x1b]
  419011:	popf   
  419012:	xchg   ecx,eax
  419013:	clc    
  419014:	dec    eax
  419015:	lahf   
  419016:	arpl   WORD PTR [esp+edi*2+0x2d947865],ax
  41901d:	cmp    eax,0x6c3c0d9a
  419022:	outs   dx,BYTE PTR ds:[esi]
  419023:	jbe    0x41908f
  419025:	jp     0x419084
  419027:	sub    dh,dh
  419029:	leave  
  41902a:	fdivr  QWORD PTR [ebx]
  41902c:	mov    cl,0x12
  41902e:	mov    ch,0x47
  419030:	pop    ss
  419031:	lds    esi,FWORD PTR [eax]
  419033:	xchg   ebx,eax
  419034:	xor    eax,0xa644e3c9
  419039:	or     DWORD PTR [edi],esp
  41903b:	pop    ebp
  41903c:	scas   eax,DWORD PTR es:[edi]
  41903d:	push   0x3f86371b
  419042:	(bad)  
  419043:	in     al,0x3a
  419045:	push   ecx
  419046:	fimul  DWORD PTR [eax-0x136023fa]
  41904c:	mov    eax,0xe5a0f158
  419051:	cmc    
  419052:	or     BYTE PTR [edi+0x2e],ah
  419055:	into   
  419056:	pusha  
  419057:	pusha  
  419058:	call   0xb0aa:0xf4cd8751
  41905f:	cmp    ebx,edi
  419061:	jne    0x41902a
  419063:	xor    ebx,DWORD PTR ds:0x99652acb
  419069:	add    DWORD PTR [eax+0x13b45702],esi
  41906f:	jl     0x41906a
  419071:	mov    edx,0xd5f23242
  419076:	add    DWORD PTR [eiz*1-0x2943eca9],ecx
  41907d:	cld    
  41907e:	fst    DWORD PTR [ecx-0x41]
  419081:	add    eax,0xea00b163
  419086:	or     DWORD PTR [ebp+0xfb18f38],ecx
  41908c:	pop    ecx
  41908d:	push   0xf937231
  419092:	popf   
  419093:	ins    DWORD PTR es:[edi],dx
  419094:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419095:	dec    ecx
  419096:	xlat   BYTE PTR ds:[ebx]
  419097:	(bad)  
  419098:	mov    eax,ds:0x6be7415e
  41909d:	fs stos BYTE PTR es:[edi],al
  41909f:	sub    DWORD PTR [edi-0x68],ebx
  4190a2:	push   eax
  4190a3:	jne    0x419049
  4190a5:	test   al,0xc2
  4190a7:	retw   0x3038
  4190ab:	sti    
  4190ac:	retf   
  4190ad:	jecxz  0x41903f
  4190af:	dec    eax
  4190b0:	pop    ds
  4190b1:	scas   eax,DWORD PTR es:[edi]
  4190b2:	xor    BYTE PTR [ebp+0x313e95a7],al
  4190b8:	inc    ebp
  4190b9:	lahf   
  4190ba:	adc    eax,0xc8270af5
  4190bf:	imul   eax,DWORD PTR [ecx+esi*1-0x308129e7],0x23
  4190c7:	fbstp  TBYTE PTR [edi]
  4190c9:	(bad)  
  4190cb:	and    edi,DWORD PTR [esi+0x54dd1d01]
  4190d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190d2:	dec    eax
  4190d3:	push   0xb34cd6d1
  4190d8:	jnp    0x419158
  4190da:	pushf  
  4190db:	jp     0x419072
  4190dd:	fdiv   DWORD PTR [eax+0x334610e8]
  4190e3:	retf   0x4662
  4190e6:	dec    esi
  4190e7:	ins    BYTE PTR es:[edi],dx
  4190e8:	push   ecx
  4190e9:	(bad)  [ebx-0x66]
  4190ec:	cs and eax,0x2d044dc9
  4190f2:	push   ss
  4190f3:	lea    ecx,ds:0xf585cc70
  4190f9:	mov    ah,0xbd
  4190fb:	fsub   st(3),st
  4190fd:	out    dx,al
  4190fe:	jne    0x41909a
  419100:	dec    edx
  419101:	call   0x2e22b677
  419106:	sti    
  419107:	gs scas al,BYTE PTR es:[edi]
  419109:	repnz clc 
  41910b:	retf   
  41910c:	in     eax,dx
  41910d:	xor    BYTE PTR [ecx+0x3ffcb17f],ch
  419113:	shr    DWORD PTR [ebx],cl
  419115:	add    BYTE PTR [ebx-0x6f716dbc],0x31
  41911c:	jno    0x4190c9
  41911e:	pushf  
  41911f:	shl    BYTE PTR [edx-0x78580c80],cl
  419125:	lds    eax,FWORD PTR [ebx]
  419127:	imul   ebp,esp,0x7a
  41912a:	loopne 0x4190e4
  41912c:	es xchg ecx,eax
  41912e:	jb     0x419133
  419130:	fiadd  DWORD PTR [bp-0x1c]
  419134:	inc    ebx
  419135:	cmp    eax,0x8ffb65ea
  41913a:	popa   
  41913b:	or     al,BYTE PTR [eax]
  41913d:	jge    0x4190fc
  41913f:	pop    edx
  419140:	inc    ebp
  419141:	mov    cl,0x27
  419143:	stos   DWORD PTR es:[edi],eax
  419144:	mov    dl,0x1a
  419146:	stc    
  419147:	push   ss
  419148:	dec    BYTE PTR [eax]
  41914a:	bound  edi,QWORD PTR [ecx]
  41914c:	or     edi,DWORD PTR [ecx-0x41]
  41914f:	or     ah,dh
  419151:	add    BYTE PTR [edx+0x4c],dl
  419154:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419155:	enter  0x4710,0xb
  419159:	sbb    eax,0xc8fd1988
  41915e:	stos   DWORD PTR es:[edi],eax
  41915f:	leave  
  419160:	das    
  419161:	inc    esi
  419162:	xchg   BYTE PTR [edx-0x52dcb18a],al
  419168:	add    DWORD PTR [esi+0x7d457f1],edx
  41916e:	mov    ah,0x3e
  419170:	into   
  419171:	aad    0x67
  419173:	ret    
  419174:	push   esp
  419175:	pushf  
  419176:	mov    ah,0xd2
  419178:	jmp    0xc3c4:0x8b8d4de4
  41917f:	hlt    
  419180:	jg     0x419121
  419182:	adc    BYTE PTR [edx],dh
  419184:	pop    ebp
  419185:	stc    
  419186:	call   0x9ffac867
  41918b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41918c:	int    0x9a
  41918e:	adc    DWORD PTR [eax],ebx
  419190:	dec    edx
  419191:	sahf   
  419192:	scas   al,BYTE PTR es:[edi]
  419193:	and    eax,0xbdb15ec5
  419198:	repnz lds edi,FWORD PTR ds:[ebp-0x32]
  41919d:	test   DWORD PTR [eax+eiz*1-0x6592df0e],ebp
  4191a4:	imul   edx,DWORD PTR [ecx],0xffffffe9
  4191a7:	dec    edx
  4191a8:	iret   
  4191a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191aa:	and    BYTE PTR [ebp+0x5e1b2ba3],al
  4191b0:	push   0x64
  4191b2:	sub    eax,0x57562810
  4191b7:	or     ecx,DWORD PTR [eax-0x20]
  4191ba:	ins    DWORD PTR es:[edi],dx
  4191bb:	dec    BYTE PTR [edi+eiz*4+0x37006130]
  4191c2:	loop   0x4191a9
  4191c4:	mov    eax,DWORD PTR [edi+0x54fbc2de]
  4191ca:	dec    edi
  4191cb:	imul   ecx,DWORD PTR [ecx],0x4e
  4191ce:	mov    gs,WORD PTR [edi]
  4191d0:	pop    ss
  4191d1:	sbb    bh,BYTE PTR [ecx+0x61f355a7]
  4191d7:	je     0x4191c3
  4191d9:	xchg   edi,eax
  4191da:	mov    ?,esi
  4191dc:	ret    0xd9fa
  4191df:	cmp    dh,bh
  4191e1:	add    BYTE PTR [ebp-0x45],cl
  4191e4:	shr    DWORD PTR ds:0xf3932ad0,0x59
  4191eb:	mov    bh,0x7f
  4191ed:	pop    ss
  4191ee:	sbb    ah,ch
  4191f0:	inc    edi
  4191f1:	fst    st(7)
  4191f3:	and    DWORD PTR [ecx-0x3635f872],0x7a4f0f99
  4191fd:	mov    al,ds:0x81774f75
  419202:	sbb    dl,BYTE PTR [ebp+0x50]
  419205:	mov    edi,0x5de11074
  41920a:	js     0x41921f
  41920c:	xchg   BYTE PTR [ebp+0x2],ah
  41920f:	stos   DWORD PTR es:[edi],eax
  419210:	aaa    
  419211:	lds    ebp,FWORD PTR [edx+0x17]
  419214:	xlat   BYTE PTR ds:[ebx]
  419215:	mov    ebp,0x7bc4411b
  41921a:	dec    eax
  41921b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41921c:	inc    eax
  41921d:	jns    0x4191d1
  41921f:	ins    DWORD PTR es:[edi],dx
  419220:	out    dx,al
  419221:	sahf   
  419222:	sbb    al,0xf6
  419224:	inc    ebp
  419225:	adc    dh,cl
  419227:	int    0xdd
  419229:	test   ah,dl
  41922b:	or     DWORD PTR [edx-0x18],0xffffff8a
  41922f:	fldcw  WORD PTR [ebp-0x5e5fd033]
  419235:	jns    0x419281
  419237:	mov    ebx,DWORD PTR [ebx-0x31]
  41923a:	adc    esp,DWORD PTR [ebx]
  41923c:	sbb    eax,0xfac36098
  419241:	fldcw  WORD PTR [edx+ecx*2]
  419244:	gs lock dec edi
  419247:	call   0xeaf2:0xdb8b2c4b
  41924e:	mov    dl,0xc9
  419250:	sub    ebp,DWORD PTR [edi-0x2]
  419253:	aaa    
  419254:	loop   0x41925b
  419256:	dec    esp
  419257:	pop    esp
  419258:	psraw  mm6,mm6
  41925b:	pop    edx
  41925c:	or     al,0x28
  41925e:	leave  
  41925f:	outs   dx,BYTE PTR cs:[esi]
  419261:	jmp    0x4192e2
  419263:	out    0xc1,al
  419265:	mov    al,ds:0x9ed05171
  41926a:	adc    BYTE PTR [ebx],bl
  41926c:	jns    0x419206
  41926e:	in     eax,dx
  41926f:	test   al,0xfe
  419271:	xchg   esp,eax
  419272:	scas   eax,DWORD PTR es:[edi]
  419273:	mov    bl,0x91
  419275:	sti    
  419276:	jle    0x4192d6
  419278:	(bad)  
  419279:	test   al,0x56
  41927b:	mov    edx,0x2a0136f8
  419280:	mov    al,0xf1
  419282:	mov    ecx,0x39ca8c95
  419287:	xor    ebx,edx
  419289:	cmp    BYTE PTR [ebx],ch
  41928b:	pushf  
  41928c:	sub    BYTE PTR cs:[esi+0x18],0xf0
  419291:	mov    edx,0x28ab3b13
  419296:	jmp    0x9395f757
  41929b:	mov    dh,0x5c
  41929d:	pop    ds
  41929e:	cmp    eax,0x9b8d8da5
  4192a3:	fdiv   DWORD PTR [edi-0x78d0d0ca]
  4192a9:	mov    esi,0x45b4826a
  4192ae:	test   al,0x8b
  4192b0:	jmp    0x419274
  4192b2:	adc    DWORD PTR [edi+0x412b834b],ecx
  4192b8:	ret    0x86ff
  4192bb:	das    
  4192bc:	sub    eax,0xe4c25331
  4192c1:	dec    ecx
  4192c2:	es jp  0x419249
  4192c5:	jo     0x41925d
  4192c7:	into   
  4192c8:	dec    eax
  4192c9:	xchg   BYTE PTR [esi-0x57dd588c],bl
  4192cf:	jecxz  0x4192d4
  4192d1:	(bad)  
  4192d2:	loopne 0x419304
  4192d4:	out    dx,eax
  4192d5:	push   0x599f9100
  4192da:	cdq    
  4192db:	(bad)  
  4192dc:	xchg   ebx,eax
  4192dd:	fcomp  QWORD PTR [esi]
  4192df:	inc    ebp
  4192e0:	xchg   ecx,eax
  4192e1:	mov    edi,0xe881bf5d
  4192e6:	hlt    
  4192e7:	js     0x4192ea
  4192e9:	add    al,0x8a
  4192eb:	nop
  4192ec:	dec    ecx
  4192ed:	mov    edx,0xbbad73ea
  4192f2:	mov    ds:0x4366f012,eax
  4192f7:	mov    ebp,0xcbf03dd3
  4192fc:	jnp    0x4192ce
  4192fe:	xlat   BYTE PTR ds:[ebx]
  4192ff:	push   bx
  419301:	push   0x59
  419303:	mov    cl,BYTE PTR [ebx+0x20c63fd8]
  419309:	dec    esi
  41930a:	xchg   esi,eax
  41930b:	rol    DWORD PTR [esi-0x7b979f1e],cl
  419311:	dec    ebp
  419312:	mov    al,ds:0x9ad2b79b
  419317:	sub    bh,BYTE PTR [edx]
  419319:	scas   eax,DWORD PTR es:[edi]
  41931a:	sahf   
  41931b:	add    esi,edi
  41931d:	pop    eax
  41931e:	out    0x97,eax
  419320:	clc    
  419321:	and    al,0xfa
  419323:	out    dx,al
  419324:	adc    cl,BYTE PTR [esi+0x2d]
  419327:	adc    eax,0xddae0931
  41932c:	in     al,0x5
  41932e:	mov    edx,0x4cf8c945
  419333:	and    BYTE PTR [esi+0x61],dh
  419336:	lock add BYTE PTR [ecx],ch
  419339:	mov    ebp,ecx
  41933b:	sub    cl,BYTE PTR [edi]
  41933d:	sbb    bh,BYTE PTR [ebx]
  41933f:	inc    edx
  419340:	shl    BYTE PTR [edi+ecx*1],cl
  419343:	adc    al,0xb4
  419345:	dec    ebx
  419346:	popf   
  419347:	int    0x55
  419349:	jae    0x419349
  41934b:	jnp    0x41935f
  41934d:	sub    DWORD PTR [ebp+0x2e4e9c46],0xd53f9baf
  419357:	push   esp
  419358:	jecxz  0x419354
  41935a:	cmp    ebp,DWORD PTR [edx-0x2d]
  41935d:	fs pop ecx
  41935f:	pop    ecx
  419360:	dec    esi
  419361:	cs iret 
  419363:	jno    0x4193a9
  419365:	add    dh,BYTE PTR [edi-0x782d7634]
  41936b:	or     dl,BYTE PTR [esi]
  41936d:	pushf  
  41936e:	fidiv  WORD PTR [edx+0xd]
  419371:	fistp  WORD PTR [edi]
  419373:	retf   
  419374:	add    eax,DWORD PTR [ebx+0x1b26de08]
  41937a:	addr16 fwait
  41937c:	out    0x12,eax
  41937e:	inc    esi
  41937f:	(bad)  
  419380:	icebp  
  419381:	adc    DWORD PTR [esi],0x212d2dfe
  419387:	or     eax,0x10388c61
  41938c:	daa    
  41938d:	pop    esi
  41938e:	adc    dl,bl
  419390:	shl    BYTE PTR [esi+esi*4-0x7],1
  419394:	fdiv   QWORD PTR [ecx+0x5eaa8a46]
  41939a:	(bad)  [edx]
  41939c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41939d:	cwde   
  41939e:	fcmovnbe st,st(0)
  4193a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193a1:	ss out 0xce,eax
  4193a4:	pop    ss
  4193a5:	xchg   BYTE PTR [ebx],cl
  4193a7:	imul   edi,ebx,0xffffffcf
  4193aa:	pop    edi
  4193ab:	out    dx,al
  4193ac:	pop    edi
  4193ad:	inc    ebx
  4193ae:	cmc    
  4193af:	mov    cl,0xaa
  4193b1:	cmp    ebx,DWORD PTR [ebp+ecx*8-0x17b02b0c]
  4193b8:	and    bh,cl
  4193ba:	mov    al,0x9
  4193bc:	fisub  DWORD PTR [edx-0x59]
  4193bf:	je     0x4193fe
  4193c1:	shr    bl,0xbc
  4193c4:	adc    BYTE PTR [ecx],0x82
  4193c7:	fstp   QWORD PTR [eax+0x504ba9b3]
  4193cd:	xchg   BYTE PTR ds:0x7320e074,al
  4193d3:	std    
  4193d4:	add    ebp,DWORD PTR [ebx-0x4752ec2c]
  4193da:	nop
  4193db:	call   0xdeb2:0x3dd68818
  4193e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193e3:	mov    cl,0xe7
  4193e5:	fs xor ah,al
  4193e8:	call   DWORD PTR [esp+esi*2]
  4193eb:	or     edx,eax
  4193ed:	sub    al,0x1a
  4193ef:	sub    edx,DWORD PTR [esi+eiz*1+0x43b00a9b]
  4193f6:	call   0x1adfc067
  4193fb:	mov    esp,gs
  4193fd:	pop    edi
  4193fe:	pop    edx
  4193ff:	outs   dx,BYTE PTR ds:[esi]
  419400:	mov    ecx,0xaf6421c2
  419405:	pop    es
  419406:	aas    
  419407:	fld    st(4)
  419409:	loope  0x41941c
  41940b:	pop    ss
  41940c:	mov    ah,0x1c
  41940e:	call   0xb2d2:0x11bb940f
  419415:	sbb    DWORD PTR [ebp+0x66cd0918],0xf6d492b
  41941f:	repz mov ecx,0x258c9de3
  419425:	ds ins BYTE PTR es:[edi],dx
  419427:	inc    ebp
  419428:	ds (bad) 
  41942a:	sub    eax,0x964bc89
  41942f:	inc    edx
  419430:	mov    ah,0x76
  419432:	xchg   esi,eax
  419433:	loopne 0x41940f
  419435:	xor    cl,0x42
  419438:	pusha  
  419439:	mov    ch,0x76
  41943b:	adc    DWORD PTR [ebp+0x24],esp
  41943e:	stos   DWORD PTR es:[edi],eax
  41943f:	xlat   BYTE PTR ds:[ebx]
  419440:	mov    ds:0xa2130749,eax
  419445:	jle    0x419493
  419447:	dec    DWORD PTR [eax+0x52]
  41944a:	pusha  
  41944b:	mov    dh,0x7a
  41944d:	leave  
  41944e:	add    eax,0xea8f2b3e
  419453:	inc    DWORD PTR [ecx+esi*1]
  419456:	jmp    0xd2bf:0x9f8f2875
  41945d:	(bad)  
  41945e:	mov    dh,0x7e
  419460:	aaa    
  419461:	inc    edx
  419462:	inc    ecx
  419463:	mov    ebx,0xb6e28295
  419468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419469:	jne    0x419492
  41946b:	jp     0x4194d0
  41946d:	cld    
  41946e:	pop    esp
  41946f:	aaa    
  419470:	add    DWORD PTR [eax+ebp*4],esp
  419473:	xlat   BYTE PTR ds:[ebx]
  419474:	dec    DWORD PTR [esi+0x29]
  419477:	ins    DWORD PTR es:[edi],dx
  419478:	jg     0x41946e
  41947a:	sbb    dl,ah
  41947c:	out    dx,al
  41947d:	push   ebx
  41947e:	sub    DWORD PTR fs:[ebx-0x77e1d0e],edx
  419485:	adc    al,0xc9
  419487:	push   0x79
  419489:	ins    BYTE PTR es:[edi],dx
  41948a:	(bad)  
  41948b:	ror    DWORD PTR [ecx+0x5b905d3c],cl
  419491:	pop    ebp
  419492:	cmp    ebp,DWORD PTR [esi]
  419494:	pop    esi
  419495:	(bad)  
  419496:	aaa    
  419497:	mov    ss,WORD PTR [ecx-0x6260bf88]
  41949d:	daa    
  41949e:	mov    cl,0xd4
  4194a0:	clc    
  4194a1:	push   edx
  4194a2:	sbb    dl,BYTE PTR ds:0x187a61ad
  4194a8:	rcr    DWORD PTR [edi+esi*4],1
  4194ab:	sar    edx,cl
  4194ad:	add    al,bh
  4194af:	imul   edi,eax,0x73
  4194b2:	hlt    
  4194b3:	mov    esp,0x8b3ceab6
  4194b8:	call   0x5ebc:0xa473113f
  4194bf:	push   esi
  4194c0:	lahf   
  4194c1:	cmc    
  4194c2:	push   ss
  4194c3:	jno    0x419528
  4194c5:	push   eax
  4194c6:	mov    eax,0x9f3f8de
  4194cb:	cld    
  4194cc:	add    ch,al
  4194ce:	lock int 0x6e
  4194d1:	inc    ebp
  4194d2:	xchg   DWORD PTR [ebp+0x2ba3c3b2],edi
  4194d8:	loop   0x419478
  4194da:	ins    BYTE PTR es:[edi],dx
  4194db:	rol    BYTE PTR [edx+edx*2-0x7f9d61a9],cl
  4194e2:	retf   0xfb66
  4194e5:	je     0x419485
  4194e7:	lahf   
  4194e8:	add    cl,BYTE PTR [ebx+0x1d]
  4194eb:	cld    
  4194ec:	rcl    BYTE PTR [ebx+ebx*4],1
  4194ef:	int    0x9e
  4194f1:	mov    bh,0xb
  4194f3:	cdq    
  4194f4:	jmp    0x12e0:0x4e964b29
  4194fb:	mov    eax,0x5e1e9d8e
  419500:	and    DWORD PTR [edx],0xed5cc7d3
  419506:	dec    esi
  419507:	xor    al,0xe
  419509:	cmp    al,BYTE PTR [edx+0x68]
  41950c:	sbb    eax,0x31352f79
  419511:	push   edi
  419512:	add    DWORD PTR [edx-0x57],ecx
  419515:	cwde   
  419516:	pop    ds
  419517:	sti    
  419518:	pop    ebx
  419519:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41951a:	add    bh,ah
  41951c:	cdq    
  41951d:	mov    ecx,0x6261bd93
  419522:	sub    edi,esi
  419524:	ins    DWORD PTR es:[edi],dx
  419525:	test   eax,0x149b9229
  41952a:	mov    ds:0x92a4694,eax
  41952f:	jl     0x419518
  419531:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419532:	test   DWORD PTR [esi],edi
  419534:	int    0xc8
  419536:	and    ah,bh
  419538:	push   ebp
  419539:	pop    ebp
  41953a:	pop    ss
  41953b:	icebp  
  41953c:	dec    edx
  41953d:	mov    bl,0x6
  41953f:	mov    esi,DWORD PTR [eax+ebp*1-0x5ac1f812]
  419546:	xchg   ebp,eax
  419547:	sub    eax,0x1cd551c4
  41954c:	cmp    DWORD PTR [ebx+0x66],edx
  41954f:	sub    ch,0x3b
  419552:	sbb    al,0x67
  419554:	test   al,0xaa
  419556:	outs   dx,DWORD PTR ds:[esi]
  419557:	xchg   ebx,eax
  419559:	mov    ?,eax
  41955b:	add    eax,0xe15664f8
  419560:	adc    DWORD PTR [edi-0x26396379],0xbec187e6
  41956a:	jmp    FWORD PTR [ebx+ebx*4+0x73221b60]
  419571:	push   0x7b
  419573:	in     eax,dx
  419574:	and    edi,DWORD PTR [ecx+0x12fc3ef4]
  41957a:	fmul   DWORD PTR [edx+0x1316201b]
  419580:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419581:	mov    edx,0xdba4dd78
  419586:	retf   0x7d85
  419589:	cs and edi,0xffffffcb
  41958d:	adc    cl,dl
  41958f:	js     0x4195f1
  419591:	scas   al,BYTE PTR es:[edi]
  419592:	pop    ecx
  419593:	ja     0x41953d
  419595:	scas   eax,DWORD PTR es:[edi]
  419596:	add    al,0x2e
  419598:	mov    ebp,0xa8d3c402
  41959d:	stos   DWORD PTR es:[edi],eax
  41959e:	mov    eax,0x475342b7
  4195a3:	das    
  4195a4:	mov    DWORD PTR [edx+0x293bf2ed],esi
  4195aa:	push   ds
  4195ab:	out    dx,al
  4195ac:	dec    edi
  4195ad:	les    ebp,FWORD PTR [eax-0x5a]
  4195b0:	fld    QWORD PTR [ebp+ebp*2-0x36dbc1a0]
  4195b7:	loope  0x41955c
  4195b9:	(bad)  
  4195bb:	popa   
  4195bc:	test   bh,ah
  4195be:	or     eax,0xb8bef864
  4195c3:	retf   
  4195c4:	adc    eax,0xdea6629e
  4195c9:	popf   
  4195ca:	jle    0x4195fb
  4195cc:	(bad)  
  4195cd:	or     DWORD PTR ds:[ebp-0x3c],0xffffffe0
  4195d2:	outs   dx,BYTE PTR ds:[esi]
  4195d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195d4:	mov    ebx,0x26d36ff5
  4195d9:	inc    edx
  4195da:	ja     0x419646
  4195dc:	clc    
  4195dd:	mov    esi,0xc43fc46c
  4195e2:	mov    esi,0x44e3b7f0
  4195e7:	xor    BYTE PTR [esi-0xd2fc7fd],bh
  4195ed:	sti    
  4195ee:	sbb    ebp,edx
  4195f0:	mov    edx,0x266e9823
  4195f5:	push   edi
  4195f6:	adc    al,0x77
  4195f8:	jns    0x41958c
  4195fa:	(bad)  
  4195fb:	in     al,0xd7
  4195fd:	and    esp,ecx
  4195ff:	and    eax,0xfa469ebb
  419604:	mov    dh,0xe2
  419606:	jecxz  0x41964e
  419608:	icebp  
  419609:	fldenv [ebx]
  41960b:	in     al,dx
  41960c:	lahf   
  41960d:	loopne 0x419627
  41960f:	pop    ecx
  419610:	in     al,dx
  419611:	ins    BYTE PTR es:[edi],dx
  419612:	mov    dh,0xba
  419614:	ins    BYTE PTR es:[di],dx
  419616:	and    eax,0xf68f2937
  41961b:	jb     0x4195bb
  41961d:	dec    ebx
  41961e:	das    
  41961f:	(bad)  
  419620:	mov    edi,0xcbffe52f
  419625:	neg    edi
  419627:	scas   al,BYTE PTR es:[edi]
  419628:	imul   edi,ebp,0x76
  41962b:	dec    edx
  41962c:	push   es
  41962d:	or     BYTE PTR [edi],0xd1
  419630:	js     0x419675
  419632:	rcl    BYTE PTR [ebx+ebp*8-0x45f56d38],0x9e
  41963a:	and    eax,DWORD PTR [ecx+0x28]
  41963d:	lds    esp,FWORD PTR [ebx]
  41963f:	mov    eax,0x614ac7da
  419644:	dec    edi
  419645:	add    bh,BYTE PTR [eax-0x4b]
  419648:	cli    
  419649:	xchg   ch,ah
  41964b:	je     0x4195d5
  41964d:	sbb    BYTE PTR [ebx+0x67],ch
  419650:	adc    edi,DWORD PTR [ecx-0x61a9aff5]
  419656:	mov    edi,0xf91deefb
  41965b:	lds    edx,FWORD PTR [ebp-0x19]
  41965e:	inc    edi
  41965f:	mov    eax,ds:0x40e9241d
  419664:	cmp    BYTE PTR [ebp+0x17],dh
  419667:	fwait
  419668:	ins    DWORD PTR es:[edi],dx
  419669:	adc    edx,ebx
  41966b:	inc    esi
  41966c:	std    
  41966d:	or     eax,0x1a3c8db0
  419672:	push   ds
  419673:	mov    DWORD PTR [esi+0x2f],edi
  419676:	mov    DWORD PTR [eax],edi
  419678:	sub    DWORD PTR [edx+0x28632895],edx
  41967e:	retf   0x72f8
  419681:	test   DWORD PTR [ecx],edx
  419683:	push   0xffffff97
  419685:	in     eax,dx
  419686:	push   esi
  419687:	xor    ebp,edi
  419689:	je     0x419695
  41968b:	mov    ebx,0xebaacf6c
  419690:	mov    cl,0xd8
  419692:	ins    DWORD PTR es:[edi],dx
  419693:	(bad)  
  419694:	adc    eax,0x1fad290
  419699:	pusha  
  41969a:	sub    edi,DWORD PTR [esi+0x7e54312d]
  4196a0:	cmp    al,0xc
  4196a2:	inc    eax
  4196a3:	cmp    ch,ch
  4196a5:	or     dl,bh
  4196a7:	xchg   BYTE PTR [ebx-0x32],cl
  4196aa:	imul   ecx,DWORD PTR [esi-0x47],0xae941ca2
  4196b1:	push   esp
  4196b2:	inc    ebp
  4196b3:	lahf   
  4196b4:	cmp    al,0x8e
  4196b6:	fdivr  QWORD PTR [edi+edi*2-0x16]
  4196ba:	or     BYTE PTR [esi+edi*8-0x2],cl
  4196be:	mov    ds:0xf9bdd585,al
  4196c3:	int    0x17
  4196c5:	sbb    cl,cl
  4196c7:	mov    ss:0xea8941cc,eax
  4196cd:	xchg   edi,eax
  4196ce:	push   ebp
  4196cf:	and    eax,DWORD PTR [ebx]
  4196d1:	ficomp DWORD PTR [ebx]
  4196d3:	and    esp,edi
  4196d5:	cli    
  4196d6:	das    
  4196d7:	(bad)  
  4196d8:	sub    cl,BYTE PTR [edx]
  4196da:	jne    0x41972f
  4196dc:	fimul  DWORD PTR [edx-0x4ba1e83b]
  4196e2:	call   0x427ab417
  4196e7:	ds and eax,0xe0b9df84
  4196ed:	mov    ah,dh
  4196ef:	js     0x4196d6
  4196f1:	sub    ebx,DWORD PTR [eax+esi*8]
  4196f4:	sbb    BYTE PTR [edx+0xa],dh
  4196f7:	out    dx,eax
  4196f8:	xchg   DWORD PTR [ebx],ebx
  4196fa:	repnz sbb eax,0x868379db
  419700:	dec    eax
  419701:	pop    ebp
  419702:	xor    ah,al
  419704:	test   DWORD PTR [edi-0x346e33a0],ebp
  41970a:	push   ebx
  41970b:	xchg   esi,eax
  41970c:	std    
  41970d:	mov    esp,0x2b152f72
  419712:	dec    eax
  419713:	les    ecx,FWORD PTR [edx-0x6b]
  419716:	xor    bl,dl
  419718:	jb     0x41975c
  41971a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41971b:	xchg   esi,eax
  41971c:	or     al,0x21
  41971e:	push   eax
  41971f:	aam    0x72
  419721:	xchg   BYTE PTR [edi],bh
  419723:	fadd   QWORD PTR [ebp-0x69]
  419726:	pusha  
  419727:	mov    ah,0x69
  419729:	xchg   ecx,ecx
  41972b:	xchg   edi,eax
  41972c:	stc    
  41972d:	cmc    
  41972e:	iret   
  41972f:	jge    0x419715
  419731:	inc    ecx
  419732:	add    edi,DWORD PTR [ecx]
  419734:	stos   DWORD PTR es:[edi],eax
  419735:	xchg   edi,eax
  419736:	aam    0x73
  419738:	(bad)  
  419739:	bnd jo 0x41978e
  41973c:	pop    ecx
  41973d:	sub    DWORD PTR [ecx],edx
  41973f:	and    BYTE PTR [edx+0x61],bh
  419742:	daa    
  419743:	imul   edx,DWORD PTR [edx+0x7fae9265],0x844381e5
  41974d:	sahf   
  41974e:	sbb    eax,esi
  419750:	inc    esi
  419751:	sbb    dl,BYTE PTR [edi-0x5]
  419754:	and    esp,esi
  419756:	ror    DWORD PTR [ecx-0x58122c1],cl
  41975c:	mov    esp,DWORD PTR [edi+eax*8+0x363e115a]
  419763:	and    bl,BYTE PTR [edi+eax*8+0x382637ce]
  41976a:	fistp  QWORD PTR [eax]
  41976c:	and    bl,BYTE PTR [ecx]
  41976e:	fwait
  41976f:	retf   0xecd7
  419772:	pusha  
  419773:	popf   
  419774:	(bad)  [ebx]
  419776:	sbb    dh,BYTE PTR [ebp+edi*8-0x188ecd3]
  41977d:	std    
  41977e:	test   al,0x6e
  419780:	vphsubdq xmm10,XMMWORD PTR [ecx-0x735b3906]
  419789:	lds    eax,FWORD PTR [ecx+ebx*8+0x22]
  41978d:	push   ebx
  41978e:	shl    ebx,cl
  419790:	push   esp
  419791:	jl     0x419746
  419793:	nop
  419794:	push   ebx
  419795:	imul   ebx,DWORD PTR [eax],0x5e9abf4d
  41979b:	repnz push es
  41979d:	jle    0x41978f
  41979f:	scas   eax,DWORD PTR es:[edi]
  4197a0:	sbb    bh,0x83
  4197a3:	cdq    
  4197a4:	mov    edx,0x8fd175b6
  4197a9:	sbb    al,0x73
  4197ab:	out    dx,al
  4197ac:	test   al,0xf
  4197ae:	icebp  
  4197af:	pushf  
  4197b0:	sbb    eax,0x23d37942
  4197b5:	int3   
  4197b6:	pop    ebx
  4197b7:	jmp    0x48d4:0xd002e87a
  4197be:	xchg   esi,eax
  4197bf:	sub    DWORD PTR [edx+0x66a3ca3e],edx
  4197c5:	mov    ds,ebx
  4197c7:	cmp    BYTE PTR [eax-0x4ae88710],al
  4197cd:	sbb    al,al
  4197cf:	fwait
  4197d0:	mov    dh,0xca
  4197d2:	int3   
  4197d3:	int3   
  4197d4:	cld    
  4197d5:	std    
  4197d6:	push   edi
  4197d7:	sub    eax,edx
  4197d9:	repz aad 0x1d
  4197dc:	cmp    BYTE PTR [ebx],dl
  4197de:	dec    eax
  4197df:	push   ebx
  4197e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197e1:	cli    
  4197e2:	paddq  mm2,QWORD PTR [edx+0x14]
  4197e6:	out    dx,eax
  4197e7:	cs dec edi
  4197e9:	(bad)  
  4197ea:	cmc    
  4197eb:	aaa    
  4197ec:	outs   dx,BYTE PTR ds:[esi]
  4197ed:	shr    BYTE PTR ds:0x7e3c7882,0x4
  4197f4:	jno    0x4197eb
  4197f6:	dec    eax
  4197f7:	mov    ah,0xcd
  4197f9:	mov    ah,0xa5
  4197fb:	jae    0x419847
  4197fd:	jl     0x419811
  4197ff:	in     al,0x4d
  419801:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419802:	pop    edx
  419803:	sar    BYTE PTR [ebp+0x5fbf3490],1
  419809:	add    BYTE PTR [eax+0x6],ah
  41980c:	xchg   edx,eax
  41980d:	or     al,0x44
  41980f:	sub    DWORD PTR [eax],esp
  419811:	in     al,dx
  419812:	cdq    
  419813:	ja     0x4197ea
  419815:	fst    DWORD PTR [eax+ecx*4-0x10b340e4]
  41981c:	add    BYTE PTR [esi-0x4af78721],ah
  419822:	inc    ebx
  419823:	clc    
  419824:	retf   
  419825:	jecxz  0x419893
  419827:	mov    ss,ebx
  419829:	sub    al,0xfc
  41982b:	mov    dh,0x93
  41982d:	rcl    BYTE PTR [ebx],1
  41982f:	sti    
  419830:	shr    DWORD PTR [edi-0x73],0x9b
  419834:	lock pop ebp
  419836:	lods   eax,DWORD PTR ds:[esi]
  419837:	(bad)  
  419838:	and    DWORD PTR [ebx+edi*8+0xa3b088f],edi
  41983f:	sbb    esp,DWORD PTR [esi]
  419841:	fisttp DWORD PTR [ecx-0xa]
  419844:	neg    BYTE PTR [eax+0x1a]
  419847:	xor    eax,0x2e410012
  41984c:	sbb    eax,0xd6a87f24
  419851:	aaa    
  419852:	int3   
  419853:	push   esi
  419854:	jno    0x419837
  419856:	adc    BYTE PTR [esi],bl
  419858:	sbb    DWORD PTR [ebp+0x7d],esp
  41985b:	jbe    0x4197dd
  41985d:	or     DWORD PTR [edi-0x220b8a35],esi
  419863:	sti    
  419864:	xchg   edx,eax
  419865:	stc    
  419866:	jno    0x41989d
  419868:	pushf  
  419869:	ins    BYTE PTR es:[edi],dx
  41986a:	dec    edx
  41986b:	cmp    al,0xc
  41986d:	std    
  41986e:	xor    edx,DWORD PTR [edx]
  419870:	pop    ebp
  419871:	loopne 0x419891
  419873:	sbb    esp,edi
  419875:	xchg   esp,eax
  419876:	adc    DWORD PTR [esp+eax*8-0x5d48a935],eax
  41987d:	push   0x71461c0d
  419882:	jg     0x41985e
  419884:	aam    0xed
  419886:	ror    BYTE PTR [eax+0x1e],cl
  419889:	in     eax,0xf5
  41988b:	rol    DWORD PTR [ecx+0x61af8336],0x5a
  419892:	rol    BYTE PTR [edi-0x12],cl
  419895:	sar    DWORD PTR [ecx],0xc
  419898:	adc    eax,0x980eaf01
  41989d:	xchg   esi,eax
  41989e:	cmp    DWORD PTR [edi+0x117e0fd6],ecx
  4198a4:	popf   
  4198a5:	cmp    DWORD PTR [eax-0x70950ce3],edi
  4198ab:	push   edi
  4198ac:	int3   
  4198ad:	mov    edi,0x3e01316d
  4198b3:	or     eax,0x92a4275b
  4198b8:	icebp  
  4198b9:	out    dx,al
  4198ba:	xchg   DWORD PTR [esi+0x5a],esp
  4198bd:	dec    ebp
  4198be:	call   0xe2effe56
  4198c3:	addr16 cld 
  4198c5:	mov    bh,0xac
  4198c7:	push   edi
  4198c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198ca:	lock adc edi,DWORD PTR [edi-0x29feb7d7]
  4198d1:	pop    edx
  4198d2:	imul   ebp,DWORD PTR [esi-0x79],0xf4cfecf7
  4198d9:	sbb    al,0x34
  4198db:	stos   DWORD PTR es:[edi],eax
  4198dc:	dec    ebx
  4198dd:	sbb    esi,DWORD PTR [esi+0x56]
  4198e0:	ficomp DWORD PTR [esi+0x509d456f]
  4198e6:	mov    bl,0x8
  4198e8:	mov    ss,ebp
  4198ea:	out    dx,eax
  4198eb:	inc    ebx
  4198ec:	xchg   edx,eax
  4198ed:	push   edx
  4198ee:	inc    esi
  4198ef:	sbb    al,0x48
  4198f1:	retf   0x6e99
  4198f4:	sub    bh,bh
  4198f6:	popa   
  4198f7:	ret    0xf15a
  4198fa:	fldcw  WORD PTR ss:[ebp-0x74]
  4198fe:	xor    DWORD PTR [ebx],esi
  419900:	and    eax,0x72b62af6
  419905:	xor    ebx,DWORD PTR [esi+0x52ffbb13]
  41990b:	or     ecx,DWORD PTR [ebp-0x15]
  41990e:	repz push es
  419910:	dec    ebp
  419911:	mov    dl,0x73
  419913:	arpl   WORD PTR [eax],si
  419915:	push   esi
  419916:	or     al,0x9f
  419918:	ins    DWORD PTR es:[edi],dx
  419919:	sub    BYTE PTR [edi-0x1c095d45],bh
  41991f:	and    al,0x54
  419921:	mov    cl,0x1a
  419923:	jmp    0xe747:0xbf623281
  41992a:	arpl   WORD PTR es:[eax],di
  41992d:	mov    esi,0x885fe46
  419932:	adc    BYTE PTR [ecx-0x4b357580],ch
  419938:	leave  
  419939:	inc    eax
  41993a:	(bad)  
  41993b:	mov    dl,0xb9
  41993d:	pop    ss
  41993e:	test   DWORD PTR [ecx-0x4e],edx
  419941:	mov    eax,ds:0x3a97f7e8
  419946:	mov    dh,0xda
  419948:	and    ebp,DWORD PTR [esi]
  41994a:	mov    edx,0x3e74f30c
  41994f:	sbb    BYTE PTR [edx-0x2a],cl
  419952:	cmp    BYTE PTR [edx-0x63],al
  419955:	(bad)  
  419956:	jne    0x41990d
  419958:	mov    ebx,0xa56ea30b
  41995d:	xchg   ecx,eax
  41995e:	int3   
  41995f:	fld    QWORD PTR ss:[esi-0x16]
  419963:	dec    eax
  419964:	xor    dh,BYTE PTR [edi]
  419966:	sub    ecx,DWORD PTR [ebx-0xc]
  419969:	sbb    al,0xae
  41996b:	call   DWORD PTR [esi+0x25]
  41996e:	xor    DWORD PTR [ebx+0x452afe0],0x4cae94b7
  419978:	es jl  0x4199ec
  41997b:	add    al,0xde
  41997d:	dec    eax
  41997e:	jb     0x4199e7
  419980:	aaa    
  419981:	add    bl,BYTE PTR [esi-0x3447c2d1]
  419987:	sub    al,0xb8
  419989:	jnp    0x419914
  41998b:	call   DWORD PTR [ecx+0x76f32cc7]
  419991:	cmp    ah,BYTE PTR [eax]
  419993:	push   eax
  419994:	add    ebx,DWORD PTR [edx+esi*8]
  419997:	nop
  419998:	neg    BYTE PTR [edx-0x20cf89c0]
  41999e:	cmp    DWORD PTR [ebp+0x64cb3830],esi
  4199a4:	imul   edx,DWORD PTR [edx+ecx*2+0xf3d538c],0xffffffcf
  4199ac:	test   eax,0xd8333868
  4199b1:	mov    ebp,0x7dce1522
  4199b6:	pop    edi
  4199b7:	sti    
  4199b8:	pop    es
  4199b9:	xchg   ebx,eax
  4199ba:	es and al,0xdd
  4199bd:	not    BYTE PTR [edx]
  4199bf:	dec    edx
  4199c0:	mov    bl,0x63
  4199c2:	shl    BYTE PTR [esp+ebp*4],0x50
  4199c6:	enter  0x204e,0x38
  4199ca:	stos   BYTE PTR es:[edi],al
  4199cb:	adc    al,0x96
  4199cd:	push   cs
  4199ce:	xor    ecx,DWORD PTR [ecx-0x5d25cac]
  4199d4:	jb     0x419a10
  4199d6:	jge    0x41997c
  4199d8:	cmp    cl,BYTE PTR [edx-0xf]
  4199db:	jne    0x4199e1
  4199dd:	ins    BYTE PTR es:[edi],dx
  4199de:	dec    esi
  4199df:	imul   edx,DWORD PTR [ebp+0x3d],0x2c
  4199e3:	mov    cl,0x2c
  4199e5:	fs pop ecx
  4199e7:	or     bh,BYTE PTR [edi+0x18]
  4199ea:	clc    
  4199eb:	daa    
  4199ec:	inc    esi
  4199ed:	xchg   ebp,eax
  4199ee:	jp     0x419a1b
  4199f0:	pop    ecx
  4199f1:	out    dx,eax
  4199f2:	repz loopne 0x4199f5
  4199f5:	dec    ecx
  4199f6:	xchg   edx,eax
  4199f7:	add    dl,dl
  4199f9:	cmp    ah,bh
  4199fb:	neg    ah
  4199fd:	rcl    DWORD PTR [esi+ecx*2-0x19],cl
  419a01:	daa    
  419a02:	mov    ecx,0x1e5f3e25
  419a07:	jl     0x419a4a
  419a09:	sbb    edx,ecx
  419a0b:	push   ecx
  419a0c:	mov    BYTE PTR [ebp-0x5c8738c2],al
  419a12:	lds    eax,FWORD PTR [edx+0x38]
  419a15:	xor    DWORD PTR [ebp+0x3c],edx
  419a18:	adc    BYTE PTR [edi],cl
  419a1a:	inc    esi
  419a1b:	jne    0x419a55
  419a1d:	jne    0x419a7e
  419a1f:	in     eax,dx
  419a20:	push   0x27
  419a22:	xchg   edi,eax
  419a24:	not    BYTE PTR [eax+edi*1+0x1c]
  419a28:	das    
  419a29:	adc    BYTE PTR [ecx+0x4676af57],0xf4
  419a30:	pushf  
  419a31:	out    dx,al
  419a32:	mov    DWORD PTR [ecx+eiz*2-0x6d],ebx
  419a36:	adc    al,0x9c
  419a38:	adc    al,0xcd
  419a3a:	dec    edx
  419a3b:	and    DWORD PTR [esp+edi*8],esp
  419a3e:	div    DWORD PTR [edi+eiz*2+0x69]
  419a42:	out    0xb7,al
  419a44:	cmp    ebp,DWORD PTR [si]
  419a47:	cs test eax,0x362edfbe
  419a4d:	lods   al,BYTE PTR ds:[esi]
  419a4e:	clc    
  419a4f:	mov    al,0xec
  419a51:	pop    ss
  419a52:	sbb    BYTE PTR [ebx],al
  419a54:	lods   al,BYTE PTR ds:[esi]
  419a55:	xlat   BYTE PTR ds:[ebx]
  419a56:	std    
  419a57:	dec    edi
  419a58:	shr    BYTE PTR [ebp+0x8],1
  419a5b:	jecxz  0x4199f4
  419a5d:	int3   
  419a5e:	ror    BYTE PTR [eax-0x5e00895c],0x45
  419a65:	jl     0x419a67
  419a67:	sti    
  419a68:	or     edx,DWORD PTR [ebp-0x2e]
  419a6b:	cmc    
  419a6c:	fwait
  419a6d:	cmp    BYTE PTR [ebx],ah
  419a6f:	cli    
  419a70:	jmp    0x419a77
  419a72:	pop    ebx
  419a73:	or     eax,0xa59f0501
  419a78:	scas   al,BYTE PTR es:[edi]
  419a79:	pop    ss
  419a7a:	ins    BYTE PTR es:[edi],dx
  419a7b:	in     al,0xee
  419a7d:	xchg   esi,eax
  419a7e:	jmp    0x419ad7
  419a80:	ret    0xd302
  419a83:	adc    DWORD PTR [esi+0x2bf29a49],edx
  419a89:	mov    ebp,0xd69cb88a
  419a8e:	jo     0x419ac6
  419a90:	push   es
  419a91:	aas    
  419a92:	sub    DWORD PTR [ebp+0x57266977],ebx
  419a98:	xor    DWORD PTR [eax-0x23],eax
  419a9b:	push   ss
  419a9c:	sub    eax,DWORD PTR [ebx]
  419a9e:	sbb    eax,0xc3e8e441
  419aa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419aa4:	dec    eax
  419aa5:	mov    edi,0x958e87e1
  419aaa:	(bad)  
  419aab:	push   edx
  419aac:	pop    es
  419aad:	lahf   
  419aae:	push   es
  419aaf:	inc    eax
  419ab0:	push   es
  419ab1:	or     al,BYTE PTR [ebp+eax*2+0x1f]
  419ab5:	(bad)  
  419ab6:	ror    BYTE PTR [edi+ebx*2-0x47f78c6b],1
  419abd:	mov    ecx,0x9c8ff94f
  419ac2:	xor    ah,ch
  419ac4:	mov    esi,0xd6955e3c
  419ac9:	jp     0x419a61
  419acb:	test   al,0x68
  419acd:	sbb    bh,BYTE PTR [ebx+esi*4-0x3738f8]
  419ad4:	mov    eax,0x7efbc881
  419ad9:	loope  0x419af6
  419adb:	xchg   edx,eax
  419adc:	cwde   
  419add:	neg    BYTE PTR [ecx-0x1]
  419ae0:	stos   BYTE PTR es:[edi],al
  419ae1:	das    
  419ae2:	ficomp DWORD PTR [ebp-0x74b4e78c]
  419ae8:	sbb    al,0x72
  419aea:	stos   DWORD PTR es:[edi],eax
  419aeb:	out    dx,al
  419aec:	cmp    ax,0x3f3c
  419af0:	aaa    
  419af1:	aam    0x6b
  419af3:	cmp    ebp,esi
  419af5:	fidiv  DWORD PTR [edx]
  419af7:	scas   al,BYTE PTR es:[edi]
  419af8:	ror    BYTE PTR [ecx+0x8c24f96],cl
  419afe:	sbb    BYTE PTR [esi-0x50],ah
  419b01:	mov    WORD PTR [eax],cs
  419b03:	push   ds
  419b04:	xchg   DWORD PTR [ebp+0x55],esi
  419b07:	(bad)  
  419b08:	in     eax,dx
  419b09:	mov    DWORD PTR [esi+eiz*1+0xbb706c2],edi
  419b10:	repz cmp ah,BYTE PTR [ecx]
  419b13:	aad    0x0
  419b15:	(bad)  
  419b16:	cmp    bh,bh
  419b18:	pop    ds
  419b19:	jmp    0xd2f0:0xbe9d7e3b
  419b20:	or     BYTE PTR [edx+0x6f],cl
  419b23:	xchg   ecx,eax
  419b24:	cmp    BYTE PTR ds:0x8805814f,ch
  419b2a:	dec    ebx
  419b2b:	lods   eax,DWORD PTR ds:[esi]
  419b2c:	inc    edi
  419b2d:	dec    ebp
  419b2e:	shr    DWORD PTR [edi+0x6f],cl
  419b31:	test   eax,0x13c478e3
  419b36:	push   ebx
  419b37:	cmp    DWORD PTR [edx+0x74],0x32
  419b3b:	sar    DWORD PTR [esi+0x74],0xb2
  419b3f:	xchg   esp,eax
  419b40:	add    eax,0xa38388df
  419b45:	xchg   edx,eax
  419b46:	sbb    eax,0xa4a5fd5c
  419b4b:	xchg   esp,eax
  419b4c:	mov    ebx,DWORD PTR [esi+eax*8+0x1f]
  419b50:	out    0xf7,al
  419b52:	sub    eax,0x4e982c0d
  419b57:	jmp    0xce8c:0xdb5b554d
  419b5e:	push   es
  419b5f:	aaa    
  419b60:	hlt    
  419b61:	popf   
  419b62:	push   edi
  419b63:	inc    ecx
  419b64:	icebp  
  419b65:	data16 jl 0x419bcc
  419b68:	push   ss
  419b69:	add    eax,0xb2632745
  419b6e:	(bad)  
  419b6f:	lods   al,BYTE PTR ds:[esi]
  419b70:	jg     0x419bb1
  419b72:	outs   dx,DWORD PTR ds:[esi]
  419b73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b74:	leave  
  419b75:	jns    0x419bdb
  419b77:	cli    
  419b78:	popa   
  419b79:	out    dx,eax
  419b7a:	cdq    
  419b7b:	outs   dx,DWORD PTR ds:[esi]
  419b7d:	lods   al,BYTE PTR ds:[esi]
  419b7e:	loop   0x419b0b
  419b80:	stos   BYTE PTR es:[edi],al
  419b81:	inc    ecx
  419b82:	mov    dh,0x30
  419b84:	imul   ecx,ebp,0x36
  419b87:	and    BYTE PTR [eax-0x5f],dl
  419b8a:	dec    edx
  419b8b:	pop    ebp
  419b8c:	sbb    eax,esi
  419b8e:	mov    ch,0x12
  419b90:	out    0xc8,eax
  419b92:	into   
  419b93:	xchg   ecx,ecx
  419b95:	ds cld 
  419b97:	and    BYTE PTR [eax-0x6a],ch
  419b9a:	xor    dh,BYTE PTR [esi-0x53d3e19f]
  419ba0:	out    0xb8,eax
  419ba2:	mov    al,0x5d
  419ba4:	in     eax,0xc6
  419ba6:	fldenv [eax+edi*2]
  419ba9:	clc    
  419baa:	bnd ja 0x419b6a
  419bad:	xor    eax,0xad854c04
  419bb2:	push   ss
  419bb3:	sub    BYTE PTR [edi+0x4a],0xa7
  419bb7:	jns    0x419b99
  419bb9:	mov    WORD PTR [ebp-0x44e7da18],gs
  419bbf:	sub    DWORD PTR [ecx-0x1b0aa2ea],edx
  419bc5:	jmp    0x419b83
  419bc7:	cmp    esi,DWORD PTR [eax]
  419bc9:	jae    0x419b95
  419bcb:	jno    0x419bbf
  419bcd:	nop
  419bce:	dec    esp
  419bcf:	mov    dl,BYTE PTR [esi-0x75ffc842]
  419bd5:	cmp    ecx,DWORD PTR [edx+0x5e69d680]
  419bdb:	pop    fs
  419bdd:	sub    ah,BYTE PTR [ebp-0x2b9ffc92]
  419be3:	push   0x81852ba8
  419be8:	mov    al,BYTE PTR [edx]
  419bea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419beb:	pop    ebp
  419bec:	(bad)  
  419bee:	stos   BYTE PTR es:[edi],al
  419bef:	es dec esp
  419bf1:	adc    BYTE PTR [ecx],0x5e
  419bf4:	dec    esi
  419bf5:	jb     0x419c25
  419bf7:	lock sar BYTE PTR [ecx+edx*2+0x6e],1
  419bfc:	and    al,0xd
  419bfe:	push   esp
  419c00:	lods   al,BYTE PTR ds:[esi]
  419c01:	inc    esi
  419c02:	or     al,0xcf
  419c04:	cmp    eax,0x9025c00
  419c09:	(bad)  
  419c0b:	push   ecx
  419c0c:	aam    0xc7
  419c0e:	sbb    ebx,eax
  419c10:	(bad)  
  419c11:	sbb    eax,0x4466eb1e
  419c16:	fs jb  0x419c13
  419c19:	in     eax,0x89
  419c1b:	pslld  mm0,mm4
  419c1e:	cmp    eax,0xb3e72c58
  419c23:	imul   ecx,esp,0xffffffa2
  419c26:	pusha  
  419c27:	in     al,0x8e
  419c29:	and    ebp,esp
  419c2b:	sahf   
  419c2c:	loop   0x419ca4
  419c2e:	mov    ebp,0x9106fd56
  419c33:	out    dx,al
  419c34:	aad    0x6e
  419c36:	lea    edx,ds:0x4f63e150
  419c3c:	es mov al,0xfe
  419c3f:	sub    esp,DWORD PTR [eax+0x724c08d9]
  419c45:	fs xor ebp,0x5ffdf40c
  419c4c:	pop    edi
  419c4d:	or     eax,DWORD PTR [ebx+edi*1-0x2fe670e4]
  419c54:	mov    esp,0x4da76dd3
  419c59:	push   edx
  419c5a:	dec    edx
  419c5b:	cmp    al,0x1
  419c5d:	daa    
  419c5e:	rcl    DWORD PTR [eax+0x71],1
  419c61:	enter  0x6a84,0xcc
  419c65:	sbb    al,0x5f
  419c67:	icebp  
  419c68:	dec    ebp
  419c69:	sub    eax,0xd5ac3176
  419c6e:	cmp    eax,0x4a72895e
  419c73:	shl    BYTE PTR [ebx-0x30],0xb2
  419c77:	and    dl,BYTE PTR [ebx-0x34]
  419c7a:	gs xchg esi,eax
  419c7c:	out    0x19,eax
  419c7e:	or     eax,0xecd4f919
  419c83:	mov    ecx,0x3c4a0f74
  419c88:	les    ebx,FWORD PTR [edx]
  419c8a:	sub    ebp,ebx
  419c8c:	pop    ebx
  419c8d:	retf   
  419c8e:	dec    eax
  419c8f:	fdivr  st(6),st
  419c91:	mov    ds:0xb4f97270,al
  419c96:	sbb    DWORD PTR [ebx-0x3fabe9e2],ebx
  419c9c:	mov    eax,0x8de3bdbd
  419ca1:	(bad)  
  419ca2:	jne    0x419ccd
  419ca4:	shl    DWORD PTR [esi+0x18],cl
  419ca7:	add    DWORD PTR [edi-0x3028b051],0x65
  419cae:	jl     0x419c73
  419cb0:	retf   
  419cb1:	mov    cl,0xf1
  419cb3:	sbb    ebp,DWORD PTR gs:[edx+0x6da9bb82]
  419cba:	outs   dx,DWORD PTR ds:[esi]
  419cbb:	dec    edx
  419cbc:	add    al,0xe4
  419cbe:	xchg   DWORD PTR [eax-0x65dbfda4],edx
  419cc4:	(bad)  
  419cc5:	nop
  419cc6:	cmp    eax,0x48342b33
  419ccb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ccc:	mov    ebp,0x18e760e3
  419cd1:	pop    ss
  419cd2:	jae    0x419cd6
  419cd4:	arpl   sp,ax
  419cd6:	mov    esi,0x599a713e
  419cdb:	push   ecx
  419cdc:	pop    ds
  419cdd:	mov    dh,0xbc
  419cdf:	fidiv  WORD PTR [ebp+0x11]
  419ce2:	and    eax,0x44e0cc75
  419ce7:	loopne 0x419d64
  419ce9:	push   0x23
  419ceb:	cmp    al,0x69
  419ced:	pop    eax
  419cee:	js     0x419ce6
  419cf0:	sbb    esp,edi
  419cf2:	aas    
  419cf3:	out    0x38,eax
  419cf5:	loopne 0x419d20
  419cf7:	shl    BYTE PTR [eax+0x55],cl
  419cfa:	push   ss
  419cfb:	mov    bl,0x2d
  419cfd:	not    BYTE PTR [edi+0x6baf9a59]
  419d03:	mov    al,0x42
  419d05:	add    ch,dl
  419d07:	or     bl,BYTE PTR [ebx]
  419d09:	sub    ebx,ecx
  419d0b:	inc    esp
  419d0c:	(bad)  
  419d0d:	stos   DWORD PTR es:[edi],eax
  419d0e:	or     eax,0x7499384f
  419d13:	or     ah,BYTE PTR [ebx-0x7623d877]
  419d19:	jo     0x419cae
  419d1b:	sub    ch,bh
  419d1d:	sbb    cl,ah
  419d1f:	mov    ebp,0x1aa6997c
  419d24:	push   ds
  419d25:	in     eax,0x71
  419d27:	add    bh,BYTE PTR [ecx-0x80]
  419d2a:	jae    0x419d5f
  419d2c:	mov    ah,0x52
  419d2e:	es sbb eax,0xbcb51b68
  419d34:	add    edx,DWORD PTR [edx]
  419d36:	out    0xfc,al
  419d38:	pop    ss
  419d39:	cli    
  419d3a:	(bad)  
  419d3b:	pushf  
  419d3c:	retf   
  419d3d:	cmp    al,0x84
  419d3f:	xchg   ebp,eax
  419d40:	or     BYTE PTR [ebx+edi*4-0x1f],bl
  419d44:	adc    DWORD PTR [ecx],eax
  419d46:	mov    eax,ds:0xd8d46f2e
  419d4b:	inc    eax
  419d4c:	lahf   
  419d4d:	loop   0x419d5a
  419d4f:	xor    DWORD PTR [eax],ebp
  419d51:	mov    bp,WORD PTR [ebx-0x992046]
  419d58:	xchg   ebx,eax
  419d59:	sbb    esp,DWORD PTR [edi-0x5368d395]
  419d5f:	fs dec ebx
  419d61:	add    edi,esp
  419d63:	jne    0x419d0b
  419d65:	bound  ecx,QWORD PTR [ebx-0x3a]
  419d68:	jne    0x419d10
  419d6a:	ins    BYTE PTR es:[edi],dx
  419d6b:	cmp    al,0x39
  419d6d:	pop    edx
  419d6e:	inc    ecx
  419d6f:	jecxz  0x419d7f
  419d71:	pusha  
  419d72:	es scas al,BYTE PTR es:[edi]
  419d74:	push   0xffffff9c
  419d76:	or     DWORD PTR [esi-0x10],eax
  419d79:	push   ss
  419d7a:	stos   DWORD PTR es:[edi],eax
  419d7b:	dec    esp
  419d7c:	jmp    0xf6aa:0xd842dddc
  419d83:	imul   ebp,DWORD PTR [edi+0x8],0xfaf00751
  419d8a:	psubd  mm4,QWORD PTR [esi-0x58]
  419d8e:	adc    BYTE PTR [eax+0x709d3b49],0x47
  419d95:	sub    ch,BYTE PTR [ecx]
  419d97:	sbb    DWORD PTR [esp+eiz*8-0x66],ebx
  419d9b:	ds push edx
  419d9d:	xor    al,0xaa
  419d9f:	cmp    eax,0xaba5d8ce
  419da4:	test   eax,0xd714eb75
  419da9:	adc    esp,DWORD PTR [ecx+0x6f]
  419dac:	sbb    esi,ebx
  419dae:	inc    ecx
  419daf:	inc    ebp
  419db0:	mov    al,0xce
  419db2:	add    ah,BYTE PTR [ebx+0x8]
  419db5:	into   
  419db6:	in     eax,0xb9
  419db8:	mov    ds:0xb3e6a9ee,eax
  419dbd:	jmp    0x419d84
  419dbf:	mov    dh,BYTE PTR [edi+0x54865b02]
  419dc5:	mov    al,0x92
  419dc7:	xor    ch,BYTE PTR [esi+0x3169eefa]
  419dcd:	and    BYTE PTR [edi-0x6f],al
  419dd0:	mov    eax,DWORD PTR [eax]
  419dd2:	into   
  419dd3:	or     esi,esp
  419dd5:	into   
  419dd6:	mov    ch,0xef
  419dd8:	and    eax,0x61c9adf8
  419ddd:	push   edi
  419dde:	fldenv [esi+0x880af3b]
  419de4:	and    al,0xc
  419de6:	adc    BYTE PTR [esi+0x7dc61514],0x2a
  419ded:	push   ebp
  419dee:	mul    al
  419df0:	mov    ds:0x399ad5f0,eax
  419df5:	push   eax
  419df6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419df7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419df8:	nop
  419df9:	dec    esp
  419dfa:	test   bh,dh
  419dfc:	or     BYTE PTR [eax+0x430751d9],dh
  419e02:	mov    al,0x7e
  419e04:	xor    DWORD PTR [esi+0x72bded09],eax
  419e0a:	mov    esi,0xb4265467
  419e0f:	cmp    BYTE PTR [eax+0x5c],ch
  419e12:	push   ecx
  419e13:	adc    edx,edx
  419e15:	xchg   edx,eax
  419e16:	jnp    0x419e76
  419e18:	test   dl,0x35
  419e1b:	bound  esp,QWORD PTR ds:0x90728cf9
  419e21:	cmp    al,0x24
  419e23:	jle    0x419dea
  419e25:	adc    ah,BYTE PTR [esi-0x5d]
  419e28:	sub    BYTE PTR [eax],cl
  419e2a:	sub    DWORD PTR [edi],ecx
  419e2c:	pop    ecx
  419e2d:	daa    
  419e2e:	sti    
  419e2f:	clc    
  419e30:	sub    cl,BYTE PTR [eax+0x6ae26749]
  419e36:	not    DWORD PTR [eax]
  419e38:	fxch   st(2)
  419e3a:	bound  ebp,QWORD PTR [edi-0x3a]
  419e3d:	out    dx,al
  419e3e:	sahf   
  419e3f:	mov    ds:0x762d150d,eax
  419e44:	fnsave [ebx]
  419e46:	xlat   BYTE PTR ds:[ebx]
  419e47:	(bad)  
  419e49:	pushf  
  419e4a:	out    0x77,eax
  419e4c:	mov    bl,BYTE PTR [ebp-0x2a2af90d]
  419e52:	jmp    0x419e91
  419e54:	sub    eax,0x94ab63a5
  419e59:	sbb    al,0x74
  419e5b:	or     eax,0xb04b55f8
  419e60:	mov    WORD PTR [ecx-0x5a],ss
  419e63:	cwde   
  419e64:	aas    
  419e65:	pop    ecx
  419e66:	div    BYTE PTR [edi+0x72]
  419e69:	sbb    cl,BYTE PTR [edi-0x28]
  419e6c:	je     0x419e28
  419e6e:	jmp    0x79dc574b
  419e73:	scas   eax,DWORD PTR es:[edi]
  419e74:	add    BYTE PTR [ebx-0x5e],bh
  419e77:	lods   eax,DWORD PTR ds:[esi]
  419e78:	inc    eax
  419e79:	add    bl,dl
  419e7b:	imul   eax,DWORD PTR [ebx+0x62],0xffffffca
  419e7f:	clc    
  419e80:	inc    esi
  419e81:	mov    ch,0x26
  419e83:	dec    ecx
  419e84:	add    bh,bh
  419e86:	test   ch,bl
  419e88:	jmp    FWORD PTR [edi*1-0x7199ae4c]
  419e8f:	sub    DWORD PTR [eax],edi
  419e91:	cmp    edi,DWORD PTR [esi]
  419e93:	repz (bad) 
  419e95:	sbb    al,0xee
  419e97:	mov    edx,eax
  419e99:	add    al,0xbd
  419e9b:	xor    ebp,0x61181301
  419ea1:	push   ebp
  419ea2:	cmp    BYTE PTR [esi],0x63
  419ea5:	add    BYTE PTR [esi-0x294b7037],ch
  419eab:	dec    edi
  419eac:	cmc    
  419ead:	jp     0x419e56
  419eaf:	jbe    0x419ee4
  419eb1:	xor    ah,BYTE PTR [ebp+0x182d07e0]
  419eb7:	das    
  419eb8:	add    eax,0xab3dc8e4
  419ebd:	inc    ebx
  419ebe:	pushw  0xb59a
  419ec2:	aas    
  419ec3:	sub    edx,DWORD PTR [ebx-0x4fc11316]
  419ec9:	adc    eax,0xe1d7346f
  419ece:	xlat   BYTE PTR ds:[ebx]
  419ecf:	or     eax,0x34
  419ed2:	dec    ebp
  419ed3:	fnstcw WORD PTR [ebp-0x65]
  419ed6:	xor    cl,BYTE PTR ds:0x8a60302c
  419edc:	mov    dl,0x42
  419ede:	aaa    
  419edf:	pushf  
  419ee0:	inc    ecx
  419ee1:	jp     0x419f22
  419ee3:	lock in al,dx
  419ee5:	fist   WORD PTR [edx-0x39077ba8]
  419eeb:	mov    esi,0x1f06582a
  419ef0:	ds in  eax,dx
  419ef2:	les    edi,FWORD PTR [ebp+0x4e]
  419ef5:	inc    esi
  419ef6:	sbb    eax,0xde40f9fb
  419efb:	popf   
  419efc:	sbb    eax,0x5f37720f
  419f01:	stc    
  419f02:	test   al,0x9
  419f04:	imul   edi,DWORD PTR [eax+eax*8],0x12b150e0
  419f0b:	or     al,0xdf
  419f0d:	jbe    0x419e96
  419f0f:	clc    
  419f10:	dec    edi
  419f11:	ret    
  419f12:	jle    0x419f1f
  419f14:	test   esp,esp
  419f16:	xor    eax,0xed7a267a
  419f1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f1c:	call   0x3fb91067
  419f21:	push   0x11c47373
  419f26:	push   ecx
  419f27:	mov    ah,BYTE PTR [edi]
  419f29:	repz in al,0xe5
  419f2c:	imul   eax,DWORD PTR [eax],0xa
  419f2f:	std    
  419f30:	test   al,0xf
  419f32:	addr16 aad 0x6c
  419f35:	rcl    BYTE PTR [edi-0x4e],0xf9
  419f39:	inc    ebp
  419f3a:	loope  0x419ec4
  419f3c:	add    al,0x4e
  419f3e:	xchg   ebx,eax
  419f3f:	inc    edi
  419f40:	pop    esp
  419f41:	adc    DWORD PTR [eax+0x10],ebx
  419f44:	push   edi
  419f45:	inc    edx
  419f46:	nop
  419f47:	out    0xc2,al
  419f49:	(bad)  
  419f4a:	js     0x419f25
  419f4c:	sub    DWORD PTR ss:[eax],esp
  419f4f:	inc    eax
  419f50:	daa    
  419f51:	cmp    esi,ecx
  419f53:	cmc    
  419f54:	inc    esi
  419f55:	xchg   DWORD PTR [esi-0x13],edx
  419f58:	sbb    al,0xe6
  419f5a:	jl     0x419f68
  419f5c:	dec    ebp
  419f5d:	fdiv   st,st(7)
  419f5f:	pop    ss
  419f60:	push   ss
  419f61:	dec    esi
  419f62:	inc    ebp
  419f63:	or     ah,BYTE PTR [esi+ebp*2-0x6ade9e64]
  419f6a:	mov    ah,0xea
  419f6c:	pop    edx
  419f6d:	mov    cl,0xd0
  419f6f:	dec    edx
  419f70:	ror    BYTE PTR ss:[esi-0x6c40d3c5],0x62
  419f78:	push   ebp
  419f79:	jle    0x419fdd
  419f7b:	mov    al,0x9b
  419f7d:	gs mov esi,esi
  419f80:	stos   BYTE PTR es:[edi],al
  419f81:	pop    ds
  419f82:	out    dx,eax
  419f83:	and    ebp,0xd443dfa7
  419f89:	xor    DWORD PTR [esi+0x39483806],edi
  419f8f:	in     al,dx
  419f90:	fstp   DWORD PTR [ecx-0x52]
  419f93:	mov    ebx,0x467975f3
  419f98:	dec    ebp
  419f99:	fs adc eax,0xb91d9d18
  419f9f:	jmp    0x1c7d469f
  419fa4:	add    BYTE PTR [esi+0x215ced99],al
  419faa:	mov    eax,ds:0x1292007f
  419faf:	stc    
  419fb0:	xor    DWORD PTR [ecx-0x70406500],edx
  419fb6:	jl     0x419fc9
  419fb8:	mov    edx,0x6a0c36ae
  419fbd:	sbb    BYTE PTR [ecx-0x6a58130f],bh
  419fc3:	dec    ebx
  419fc4:	fistp  DWORD PTR [edi+0x67974be8]
  419fca:	popa   
  419fcb:	hlt    
  419fcc:	mov    ebp,0x37e93bb1
  419fd1:	fcomp  DWORD PTR [edx+ecx*8]
  419fd4:	jo     0x41a049
  419fd6:	pop    ecx
  419fd7:	cmp    ebp,ebp
  419fd9:	cmp    esi,0x30ccb381
  419fdf:	fcomi  st,st(1)
  419fe1:	dec    edi
  419fe2:	imul   BYTE PTR [ebx]
  419fe4:	fmulp  st(5),st
  419fe6:	pop    edi
  419fe7:	xor    eax,0x8a010e7
  419fec:	repnz (bad) 
  419fee:	cmp    al,0xe
  419ff0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ff1:	push   ds
  419ff2:	fcom   DWORD PTR [esi]
  419ff4:	enter  0x29cf,0x4c
  419ff8:	sbb    bl,BYTE PTR [ebp+0xe]
  419ffb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ffc:	neg    BYTE PTR [edi+edx*2+0x7b]
  41a000:	mov    WORD PTR [ebx+0x3c4a8a3e],?
  41a006:	push   ds
  41a007:	mov    ds:0x4ffaf65,al
  41a00c:	sub    esp,DWORD PTR [ebx]
  41a00e:	dec    ebx
  41a00f:	xchg   ebp,eax
  41a010:	jne    0x41a075
  41a012:	stc    
  41a013:	lock mov eax,ds:0x1121089d
  41a019:	jns    0x41a006
  41a01b:	xchg   edi,eax
  41a01d:	xor    eax,0x4a419067
  41a022:	xchg   ecx,eax
  41a023:	push   0x1f76f8ca
  41a028:	call   0x13cc91a6
  41a02d:	sbb    ebp,0x9f7dbb1e
  41a033:	xchg   esi,eax
  41a034:	mov    ah,0x30
  41a036:	scas   eax,DWORD PTR es:[edi]
  41a037:	push   edx
  41a038:	cwde   
  41a039:	pop    ebx
  41a03a:	call   DWORD PTR [ebp+0x3b]
  41a03d:	push   esi
  41a03e:	pop    ebp
  41a03f:	mov    ds:0x52a3134b,eax
  41a044:	jecxz  0x41a03c
  41a046:	xor    al,0xae
  41a048:	(bad)  
  41a049:	gs pop esi
  41a04b:	rcl    DWORD PTR [edi],0xd4
  41a04e:	sbb    esp,DWORD PTR [edi+edx*4+0x764cfe24]
  41a055:	xor    eax,0xfabcffe7
  41a05a:	adc    ecx,edi
  41a05c:	(bad)  
  41a05e:	lods   eax,DWORD PTR ds:[esi]
  41a05f:	fmul   DWORD PTR [ebx-0x60]
  41a062:	mov    ds:0xc62db59a,eax
  41a067:	mov    cl,0xc0
  41a069:	mov    ?,edx
  41a06b:	loope  0x41a0b2
  41a06d:	loope  0x41a003
  41a06f:	test   al,0x6c
  41a071:	ret    0x2112
  41a074:	ds pop es
  41a076:	or     edi,eax
  41a078:	fs dec ebp
  41a07a:	inc    ebx
  41a07b:	popf   
  41a07c:	ror    DWORD PTR [edx],0xc4
  41a07f:	jmp    0xf237:0xe622690a
  41a086:	pop    ecx
  41a087:	lods   al,BYTE PTR ds:[esi]
  41a088:	(bad)  
  41a089:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a08b:	push   ebp
  41a08c:	jl     0x41a10b
  41a08e:	loope  0x41a0d6
  41a090:	call   0x1cd5:0xdca6973d
  41a097:	add    cl,ch
  41a099:	xchg   DWORD PTR [edi+0x51570f23],ecx
  41a09f:	push   cs
  41a0a0:	and    DWORD PTR [edx+0x79],ecx
  41a0a3:	mov    ebp,0xe4916517
  41a0a8:	les    ecx,FWORD PTR [esi-0x2e3c276f]
  41a0ae:	jecxz  0x41a10e
  41a0b0:	sbb    al,0x63
  41a0b2:	jmp    0x960a31d4
  41a0b7:	not    BYTE PTR [ebp-0x53]
  41a0ba:	aam    0xba
  41a0bc:	loope  0x41a042
  41a0be:	mov    eax,0x93c47b9c
  41a0c3:	pop    ebp
  41a0c4:	pop    esi
  41a0c5:	pop    ds
  41a0c6:	les    edi,FWORD PTR [eax-0x40e517e4]
  41a0cc:	fs jns 0x41a09b
  41a0cf:	(bad)  
  41a0d0:	sahf   
  41a0d1:	stos   BYTE PTR es:[edi],al
  41a0d2:	xchg   ebp,eax
  41a0d3:	cmc    
  41a0d4:	adc    BYTE PTR [ecx-0x6c],bh
  41a0d7:	icebp  
  41a0d8:	inc    ebp
  41a0d9:	jg     0x41a05b
  41a0db:	mov    BYTE PTR [eax],ah
  41a0dd:	sti    
  41a0de:	pop    eax
  41a0df:	sub    ch,BYTE PTR [ecx+0x38]
  41a0e2:	mov    WORD PTR [ebx-0x5acc646c],es
  41a0e8:	pushf  
  41a0e9:	mov    edx,0x2e96f17f
  41a0ee:	xchg   ebx,eax
  41a0ef:	push   ebp
  41a0f0:	or     esp,edi
  41a0f2:	mov    al,0x2c
  41a0f4:	ins    BYTE PTR es:[edi],dx
  41a0f5:	clc    
  41a0f6:	jg     0x41a0a1
  41a0f8:	or     DWORD PTR [ebp+0x6b418070],edx
  41a0fe:	ins    DWORD PTR es:[edi],dx
  41a0ff:	mov    edx,0x234c7739
  41a105:	jno    0x41a0de
  41a107:	arpl   WORD PTR [ebp*2-0x13e5c94c],di
  41a10e:	mov    eax,ds:0xbca49c71
  41a113:	and    eax,0x885928b6
  41a118:	ja     0x41a0f7
  41a11a:	loop   0x41a181
  41a11c:	mov    esi,0x9d9e6c66
  41a121:	xlat   BYTE PTR ds:[ebx]
  41a122:	lahf   
  41a123:	xchg   ecx,eax
  41a124:	pextrw ebx,(bad),0xc5
  41a126:	pop    eax
  41a127:	leave  
  41a128:	cld    
  41a129:	xor    DWORD PTR [edx-0x75],esp
  41a12c:	mov    ds:0x31db545f,al
  41a131:	add    esp,0x4b9a1f98
  41a137:	cmc    
  41a138:	jmp    0xc2aada63
  41a13d:	sbb    eax,0xf5da54dd
  41a142:	push   es
  41a143:	jle    0x41a15a
  41a145:	adc    BYTE PTR [ecx-0x413bd8ff],dl
  41a14b:	pusha  
  41a14c:	inc    ecx
  41a14d:	mov    dl,BYTE PTR [edx]
  41a14f:	mov    ds:0x7c5e188c,al
  41a154:	inc    edx
  41a155:	imul   eax,ecx,0xffffffc0
  41a158:	mov    eax,0x93f18c8d
  41a15d:	mov    al,ds:0x5f57fe0e
  41a162:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a163:	push   esi
  41a164:	ds js  0x41a1d9
  41a167:	mov    ds:0x32b6407a,al
  41a16c:	xor    BYTE PTR [edx-0x57],ch
  41a16f:	test   BYTE PTR [ebp-0x12],ah
  41a172:	sbb    edx,esp
  41a174:	push   eax
  41a175:	push   eax
  41a176:	jmp    0xb6f5:0x6993729
  41a17d:	cmp    BYTE PTR [edx+0x69],ch
  41a180:	out    0xaf,eax
  41a182:	(bad)  
  41a183:	and    dh,dl
  41a185:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a186:	sbb    eax,0x49e5de5f
  41a18b:	and    eax,0x176044b4
  41a190:	gs mov ecx,0x130f0b7d
  41a196:	inc    esi
  41a197:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a198:	xchg   edi,eax
  41a199:	mov    ss,eax
  41a19b:	xor    edi,DWORD PTR [eax]
  41a19d:	push   es
  41a19e:	jns    0x41a20f
  41a1a0:	scas   al,BYTE PTR es:[edi]
  41a1a1:	cli    
  41a1a2:	cmp    edi,DWORD PTR [ebx+0xe]
  41a1a5:	sub    al,0x95
  41a1a7:	add    dl,BYTE PTR [eax-0x47]
  41a1aa:	fcmovu st,st(3)
  41a1ac:	ret    0x924e
  41a1af:	cmp    al,BYTE PTR [esi]
  41a1b1:	sub    edx,esi
  41a1b3:	jecxz  0x41a1e1
  41a1b5:	add    eax,0x6981c84e
  41a1ba:	jg     0x41a213
  41a1bc:	push   0xb213aa85
  41a1c1:	push   0xffffff88
  41a1c3:	and    DWORD PTR [edi+0x13098deb],ebx
  41a1c9:	or     eax,0x629b24f6
  41a1ce:	stos   BYTE PTR es:[edi],al
  41a1cf:	pop    ebx
  41a1d0:	and    bh,bh
  41a1d2:	ror    BYTE PTR [esi-0x5c],0x9f
  41a1d6:	add    eax,0xff504e00
  41a1db:	inc    edi
  41a1dc:	add    ebp,DWORD PTR [ecx-0x79]
  41a1df:	mov    ebx,eax
  41a1e1:	sub    eax,0x14e14c2a
  41a1e6:	sub    ch,BYTE PTR [ebx]
  41a1e8:	cmp    BYTE PTR [eax+0x23],0xb3
  41a1ec:	cmp    al,0xf7
  41a1ee:	cmp    eax,0x2a1b5d12
  41a1f3:	out    0xd7,al
  41a1f5:	and    DWORD PTR [edi+0x2f92a0ae],esp
  41a1fb:	cmpxchg BYTE PTR [edx],bh
  41a1fe:	cmp    esi,eax
  41a200:	mov    al,ds:0x925ba4c1
  41a205:	cmp    ebp,edi
  41a207:	das    
  41a208:	packuswb mm6,QWORD PTR [ecx+0x6e]
  41a20c:	fldenv [ebp-0x53]
  41a20f:	jae    0x41a216
  41a211:	mov    cl,0x53
  41a213:	mov    esi,DWORD PTR [eax+ebx*8]
  41a216:	js     0x41a279
  41a218:	xchg   ebp,eax
  41a219:	ret    
  41a21a:	ror    DWORD PTR [ecx+0x51],0x92
  41a21e:	mov    ds:0x2c7ea43c,eax
  41a224:	inc    esp
  41a225:	call   0x4053:0x413a48e2
  41a22c:	cdq    
  41a22d:	fsub   QWORD PTR [ecx]
  41a22f:	inc    edx
  41a230:	mov    esp,0xdf3d9cf
  41a235:	sbb    eax,0xffffff95
  41a238:	retf   
  41a239:	outs   dx,BYTE PTR ds:[esi]
  41a23a:	pop    esi
  41a23b:	inc    esi
  41a23c:	xchg   ebx,eax
  41a23d:	inc    edx
  41a23e:	ins    BYTE PTR es:[edi],dx
  41a23f:	sbb    eax,0xf4bb3fa8
  41a244:	mov    dh,BYTE PTR [ecx-0x28]
  41a247:	jo     0x41a2be
  41a249:	mov    ebx,ss
  41a24b:	sti    
  41a24c:	repz call 0xd81608e8
  41a252:	std    
  41a253:	ins    BYTE PTR es:[edi],dx
  41a254:	and    al,0xdf
  41a256:	cwde   
  41a257:	hlt    
  41a258:	fwait
  41a259:	les    eax,FWORD PTR [ebx]
  41a25b:	and    esi,DWORD PTR [edi]
  41a25d:	or     esi,eax
  41a25f:	jne    0x41a286
  41a261:	outs   dx,DWORD PTR ds:[esi]
  41a262:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a263:	and    al,0xa8
  41a265:	inc    eax
  41a266:	loop   0x41a206
  41a268:	out    0xad,eax
  41a26a:	inc    edx
  41a26b:	test   eax,0xbb30923f
  41a270:	sar    DWORD PTR [esi+0x8],cl
  41a273:	add    ebp,DWORD PTR [edi-0x4f]
  41a276:	fs addr16 int 0x64
  41a27a:	fist   DWORD PTR [eax]
  41a27c:	ja     0x41a2eb
  41a27e:	mov    eax,0x90169193
  41a283:	adc    dl,BYTE PTR [ecx-0x56]
  41a286:	pop    ebp
  41a287:	pop    esi
  41a288:	mov    dh,0x47
  41a28a:	or     edi,DWORD PTR [edi+0x7f]
  41a28d:	inc    ebx
  41a28e:	mov    dl,0x7f
  41a290:	inc    esp
  41a291:	adc    esi,DWORD PTR [ecx-0x4d0ba64b]
  41a297:	mov    esi,DWORD PTR [ebx-0x29]
  41a29a:	push   0x726cb283
  41a29f:	or     DWORD PTR es:[eax+0x3d],edi
  41a2a3:	jmp    0x41a2bb
  41a2a5:	call   0x3daf:0xecd6e97f
  41a2ac:	sub    ch,al
  41a2ae:	sub    BYTE PTR [edx+edi*4+0x47cf0ed3],al
  41a2b5:	mul    BYTE PTR [ecx+eax*1]
  41a2b8:	fisub  DWORD PTR [esi]
  41a2ba:	(bad)  
  41a2bb:	bound  ebp,QWORD PTR [edi+0x42]
  41a2be:	bound  ecx,QWORD PTR [esi+ecx*4-0x6df71f40]
  41a2c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2c6:	push   eax
  41a2c7:	mov    ch,0xf5
  41a2c9:	jbe    0x41a2ea
  41a2cb:	data16 mov ch,BYTE PTR [esi-0x6a]
  41a2cf:	pop    eax
  41a2d0:	sbb    eax,0x2f1d9f99
  41a2d5:	and    DWORD PTR [edi-0x38e50854],esi
  41a2db:	loope  0x41a339
  41a2dd:	xor    DWORD PTR [eax],0x8e19bc03
  41a2e3:	mov    al,0x43
  41a2e5:	fldenv [edx+0x54d50ea2]
  41a2eb:	retf   
  41a2ec:	mov    dh,cl
  41a2ee:	jno    0x41a2bc
  41a2f0:	jnp    0x41a273
  41a2f2:	ins    DWORD PTR es:[edi],dx
  41a2f3:	mov    cl,BYTE PTR [eax+0xf22e80a]
  41a2f9:	jecxz  0x41a311
  41a2fb:	pop    ds
  41a2fc:	mov    ecx,0xfb45c720
  41a301:	arpl   WORD PTR [eax+0x6d],bp
  41a304:	inc    esp
  41a305:	pop    ss
  41a306:	shl    BYTE PTR [ecx+edi*1-0x55],cl
  41a30a:	dec    ebp
  41a30b:	jmp    FWORD PTR [esi-0x43]
  41a30e:	mov    dl,0xd5
  41a310:	add    BYTE PTR [edx-0x4984ad81],ch
  41a316:	jnp    0x41a31f
  41a318:	mov    bh,0x94
  41a31a:	xchg   esp,eax
  41a31b:	cld    
  41a31c:	adc    al,0xe6
  41a31e:	xchg   ecx,eax
  41a31f:	adc    DWORD PTR [edx+edx*8-0x259b87c5],ebx
  41a326:	punpckhdq mm4,QWORD PTR [edi]
  41a329:	cmc    
  41a32a:	lahf   
  41a32b:	cmp    al,0x8b
  41a32d:	dec    edx
  41a32e:	add    al,0xb4
  41a330:	jbe    0x41a2c3
  41a332:	and    edx,esp
  41a334:	shl    DWORD PTR [esi-0x21],1
  41a337:	mov    bh,0x5f
  41a339:	mov    ds:0xbffb243e,eax
  41a33e:	pop    edx
  41a33f:	xchg   edx,eax
  41a340:	ins    BYTE PTR es:[edi],dx
  41a341:	xor    BYTE PTR [esi],al
  41a343:	(bad)  
  41a344:	popa   
  41a345:	popf   
  41a346:	sbb    al,0x47
  41a348:	inc    eax
  41a349:	test   DWORD PTR [ebp-0x7f],esi
  41a34c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a34d:	add    ebx,edx
  41a34f:	jae    0x41a31a
  41a351:	stos   DWORD PTR es:[edi],eax
  41a352:	rcr    edi,cl
  41a354:	sbb    eax,DWORD PTR [ebx-0x2886d148]
  41a35a:	sbb    BYTE PTR [esi+ecx*2],dl
  41a35d:	cmp    BYTE PTR [esi-0x73],dl
  41a360:	fwait
  41a361:	pop    edi
  41a362:	lods   al,BYTE PTR ds:[esi]
  41a363:	daa    
  41a364:	mov    cl,0x17
  41a366:	call   0x5d001c2e
  41a36b:	or     DWORD PTR [ebx+0x24],0xd146bfa3
  41a372:	adc    BYTE PTR [eax],0x17
  41a375:	mov    esi,0x9a275069
  41a37a:	int    0x12
  41a37c:	jbe    0x41a346
  41a37e:	sub    al,dh
  41a380:	into   
  41a381:	pop    ebx
  41a382:	das    
  41a383:	test   eax,0x49ad1840
  41a388:	popf   
  41a389:	loop   0x41a3ce
  41a38b:	std    
  41a38c:	sub    eax,0x77cd8234
  41a391:	arpl   WORD PTR [edi+0x39d90db9],di
  41a397:	adc    ecx,DWORD PTR [esi-0x3c23fe10]
  41a39d:	and    al,0x63
  41a39f:	pusha  
  41a3a0:	xchg   esp,eax
  41a3a1:	add    BYTE PTR [eax-0x5e7b28d8],0x9e
  41a3a8:	dec    esi
  41a3a9:	mov    cl,BYTE PTR [edx-0x1b]
  41a3ac:	mov    ah,0xc
  41a3ae:	inc    ebp
  41a3af:	call   0x8b5fb27
  41a3b4:	jg     0x41a3ea
  41a3b6:	fnstenv [ecx+edi*4]
  41a3b9:	inc    ebx
  41a3ba:	std    
  41a3bb:	push   0xebbff5c4
  41a3c0:	test   DWORD PTR [esi+edx*1-0x14],0x89e30337
  41a3c8:	lods   al,BYTE PTR ds:[esi]
  41a3c9:	jo     0x41a368
  41a3cb:	jecxz  0x41a3ac
  41a3cd:	adc    bl,cl
  41a3cf:	pushf  
  41a3d0:	mov    fs,WORD PTR [ebx+ebx*2+0x540c17da]
  41a3d7:	add    al,cl
  41a3d9:	pop    ds
  41a3da:	adc    al,0x14
  41a3dc:	or     DWORD PTR [esi+0x10],ebx
  41a3df:	inc    edi
  41a3e0:	sbb    cl,BYTE PTR [ecx-0x4ef14031]
  41a3e6:	sbb    ch,BYTE PTR [eax]
  41a3e8:	sbb    cl,BYTE PTR [ebp+esi*4+0x3]
  41a3ec:	xor    bh,BYTE PTR [edi]
  41a3ee:	cwde   
  41a3ef:	and    eax,0xacb33569
  41a3f4:	aas    
  41a3f5:	fisttp WORD PTR [esi]
  41a3f7:	ins    BYTE PTR es:[edi],dx
  41a3f8:	fisttp DWORD PTR [edx-0x26]
  41a3fb:	(bad)  
  41a3fc:	cdq    
  41a3fd:	adc    al,0x4b
  41a3ff:	dec    edx
  41a400:	scas   eax,DWORD PTR es:[edi]
  41a401:	and    DWORD PTR [eax+eax*4+0x692bfe7],0x75a4b56c
  41a40c:	mov    dh,0x99
  41a40e:	shl    DWORD PTR [eax-0x16],1
  41a411:	sbb    al,0xd5
  41a413:	xchg   BYTE PTR [eax],ah
  41a415:	pushf  
  41a416:	lahf   
  41a417:	test   BYTE PTR [ecx],cl
  41a419:	add    esi,DWORD PTR [eax-0x1d]
  41a41c:	mov    eax,ds:0x57a2eb08
  41a421:	mov    ds:0xe31d3229,eax
  41a426:	bound  esp,QWORD PTR [ecx]
  41a428:	cmp    al,BYTE PTR [esi-0x58]
  41a42b:	add    al,0x2
  41a42d:	inc    BYTE PTR [esi-0x1d8b34f3]
  41a433:	test   esi,edx
  41a435:	sub    DWORD PTR [edx],esp
  41a437:	mov    ebp,cs
  41a439:	test   BYTE PTR [ebx+eiz*2+0x4a],al
  41a43d:	add    DWORD PTR [edx-0xb],0x2508037e
  41a444:	js     0x41a472
  41a446:	call   0x2d39:0x5dbe2d86
  41a44d:	mul    DWORD PTR [eax]
  41a44f:	aad    0x4d
  41a451:	mov    al,ds:0x190bc31a
  41a456:	xchg   edi,eax
  41a457:	dec    ebx
  41a458:	or     bl,bl
  41a45a:	mov    dl,0xd2
  41a45c:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41a45e:	ins    BYTE PTR es:[edi],dx
  41a45f:	add    edx,ecx
  41a461:	cmp    DWORD PTR [edi],edi
  41a463:	fstp   TBYTE PTR [edi+ebx*2]
  41a466:	ret    
  41a467:	jl     0x41a41f
  41a469:	(bad)  
  41a46a:	daa    
  41a46b:	leave  
  41a46c:	jmp    0xf8ac:0x29fc87c2
  41a473:	mov    al,0xb2
  41a475:	mov    dh,0xa5
  41a477:	mov    bh,0xe2
  41a479:	lahf   
  41a47a:	push   ecx
  41a47b:	in     eax,0x7e
  41a47d:	jmp    0xae93:0x6a495b94
  41a484:	test   BYTE PTR [edi+edi*2-0xf],ah
  41a488:	iret   
  41a489:	dec    esp
  41a48a:	ret    
  41a48b:	js     0x41a477
  41a48d:	(bad)  
  41a48e:	add    DWORD PTR [ebp+0x25],edi
  41a491:	mov    ah,0x5d
  41a493:	mov    BYTE PTR [ebx-0x34],bl
  41a496:	aas    
  41a497:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41a499:	inc    eax
  41a49a:	and    WORD PTR [edi-0x639f4868],cx
  41a4a1:	loop   0x41a4e2
  41a4a3:	mov    ah,0x6
  41a4a5:	and    edi,ebp
  41a4a7:	push   ds
  41a4a8:	xchg   esi,eax
  41a4a9:	mov    cl,0xcf
  41a4ab:	pop    esi
  41a4ac:	jbe    0x41a473
  41a4ae:	sub    BYTE PTR [ebx+eiz*1],al
  41a4b1:	mul    ebx
  41a4b3:	jmp    0x10c5f34d
  41a4b8:	pop    esp
  41a4b9:	loopne 0x41a49f
  41a4bb:	sub    BYTE PTR [ecx],ah
  41a4bd:	mov    ecx,0xd644875c
  41a4c2:	jmp    0xa78c:0xefeae896
  41a4c9:	mov    WORD PTR [edi-0x410959e5],?
  41a4cf:	clc    
  41a4d0:	mov    ecx,0x3ab25c70
  41a4d5:	out    dx,eax
  41a4d6:	jg     0x41a4c1
  41a4d8:	sbb    esi,DWORD PTR [ecx+0x2a4166fd]
  41a4de:	test   edx,esi
  41a4e0:	aam    0xd8
  41a4e2:	dec    ebx
  41a4e3:	pusha  
  41a4e4:	jmp    DWORD PTR [ebx-0x5b]
  41a4e7:	mov    ss,WORD PTR [ebp-0x6d]
  41a4ea:	arpl   WORD PTR [edi-0x65],sp
  41a4ed:	sbb    eax,0xa6597a77
  41a4f2:	es mov bh,0x28
  41a4f5:	inc    esi
  41a4f6:	sbb    DWORD PTR [ebp-0x5e],eax
  41a4f9:	jge    0x41a4c7
  41a4fb:	data16 aaa 
  41a4fd:	inc    eax
  41a4fe:	dec    esp
  41a4ff:	xchg   DWORD PTR [edi+0x2c21cb2a],eax
  41a505:	shl    ecx,1
  41a507:	push   ebx
  41a508:	and    cl,bl
  41a50a:	cli    
  41a50b:	ret    0x88bf
  41a50e:	clc    
  41a50f:	xchg   ebp,eax
  41a510:	adc    eax,0x9a79e3a0
  41a515:	dec    ebx
  41a516:	das    
  41a517:	mov    ds:0xb09bb5f9,al
  41a51c:	ins    DWORD PTR es:[edi],dx
  41a51d:	loopne 0x41a547
  41a51f:	push   ebx
  41a520:	data16 xor BYTE PTR [esi-0x50],dl
  41a524:	jl     0x41a5a0
  41a526:	or     al,0x2d
  41a528:	cld    
  41a529:	mov    edx,0xd22ab5f3
  41a52e:	sub    dl,cl
  41a530:	scas   al,BYTE PTR es:[edi]
  41a531:	xor    esp,DWORD PTR [ebx+0x29]
  41a534:	enter  0x4c4,0x23
  41a538:	in     al,dx
  41a539:	dec    esp
  41a53a:	cmp    eax,0x3b448f99
  41a53f:	retf   
  41a540:	cmp    ebx,edx
  41a542:	(bad)  
  41a543:	jle    0x41a516
  41a545:	stos   DWORD PTR es:[edi],eax
  41a546:	aam    0x6e
  41a548:	and    dh,dh
  41a54a:	cmp    al,0x95
  41a54c:	dec    edx
  41a54d:	pop    ebx
  41a54e:	out    0x7b,al
  41a550:	cmc    
  41a551:	sub    al,0xe8
  41a553:	inc    esi
  41a554:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a555:	pop    esi
  41a556:	arpl   WORD PTR [ebx-0x6f],di
  41a559:	in     eax,dx
  41a55a:	jl     0x41a5ba
  41a55c:	mov    ebx,edi
  41a55e:	in     al,dx
  41a55f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a560:	xchg   edx,eax
  41a561:	popa   
  41a562:	mov    esi,0xf7224a1c
  41a567:	dec    ebx
  41a568:	or     al,0xab
  41a56a:	jae    0x41a4fd
  41a56c:	loopne 0x41a4f1
  41a56e:	shr    BYTE PTR [edx+0x1b],cl
  41a571:	add    DWORD PTR [ecx+0x2222b644],esp
  41a577:	lods   al,BYTE PTR ds:[esi]
  41a578:	fmul   st,st(1)
  41a57a:	xchg   DWORD PTR [ebp-0x3d],ebp
  41a57d:	adc    dh,ch
  41a57f:	in     al,dx
  41a580:	inc    ebp
  41a581:	jne    0x41a55c
  41a583:	dec    ecx
  41a584:	mov    al,ds:0xa66ca980
  41a589:	int    0xa7
  41a58b:	ss ja  0x41a58f
  41a58e:	mov    esi,0x5bf3eb38
  41a593:	loop   0x41a574
  41a595:	add    esp,DWORD PTR [esi-0x32]
  41a598:	jbe    0x41a5a5
  41a59a:	mov    WORD PTR [ebp-0x52],es
  41a59d:	xor    BYTE PTR [esi-0x34589f3c],0x60
  41a5a4:	xchg   ebp,eax
  41a5a5:	popa   
  41a5a6:	add    ebp,ebp
  41a5a8:	or     eax,0x47d7a530
  41a5ad:	(bad)  
  41a5af:	dec    BYTE PTR [ebp-0x25]
  41a5b2:	adc    ah,BYTE PTR ds:0x41d9f41c
  41a5b8:	fwait
  41a5b9:	in     eax,0x7a
  41a5bb:	mov    ebp,0xde506cbf
  41a5c0:	ja     0x41a62d
  41a5c2:	cld    
  41a5c3:	bnd jmp 0xd24ad5bb
  41a5c9:	push   cs
  41a5ca:	icebp  
  41a5cb:	cmp    edi,ecx
  41a5cd:	add    al,0xc4
  41a5cf:	or     ax,0x8a7e
  41a5d3:	ret    
  41a5d4:	loop   0x41a621
  41a5d6:	push   ecx
  41a5d7:	sbb    ch,BYTE PTR [ecx-0x7358b612]
  41a5dd:	aad    0xc2
  41a5df:	sti    
  41a5e0:	xchg   ebx,eax
  41a5e1:	cmp    al,0xd4
  41a5e3:	shr    DWORD PTR [ebp+0x745e1123],1
  41a5e9:	and    dl,BYTE PTR [ebx-0x6165904]
  41a5ef:	jns    0x41a5cc
  41a5f1:	add    BYTE PTR [edx+ebx*1-0x2b],ch
  41a5f5:	fsubp  st(6),st
  41a5f7:	sbb    al,bh
  41a5f9:	(bad)  
  41a5fa:	mov    ds:0x2fbf59ec,al
  41a5ff:	sahf   
  41a600:	(bad)  
  41a601:	jecxz  0x41a607
  41a603:	out    dx,al
  41a604:	outs   dx,BYTE PTR ds:[esi]
  41a605:	xlat   BYTE PTR ds:[ebx]
  41a606:	out    dx,al
  41a607:	test   ebp,ebp
  41a609:	sub    BYTE PTR [ecx],bh
  41a60b:	call   0xeba31c37
  41a610:	or     edx,ecx
  41a612:	(bad)  
  41a613:	xchg   esi,eax
  41a614:	fwait
  41a615:	loop   0x41a5d0
  41a617:	shl    DWORD PTR [esi],0xd5
  41a61a:	push   ss
  41a61b:	inc    ebp
  41a61c:	fadd   st(7),st
  41a61e:	mov    edx,0xf2c716ba
  41a623:	sub    ecx,DWORD PTR [edi-0x41]
  41a626:	pop    ecx
  41a627:	repnz adc BYTE PTR [ecx],dl
  41a62a:	scas   eax,DWORD PTR es:[edi]
  41a62b:	mov    al,ds:0xc9446413
  41a630:	mov    dh,0x1d
  41a632:	sub    DWORD PTR [eax+0x58],edx
  41a635:	cdq    
  41a636:	dec    edx
  41a637:	into   
  41a638:	dec    esi
  41a639:	inc    ebp
  41a63a:	outs   dx,BYTE PTR ds:[esi]
  41a63b:	test   eax,0x3181f649
  41a640:	mov    eax,ds:0xd3d71940
  41a645:	dec    DWORD PTR [eax-0x707b8398]
  41a64b:	dec    edi
  41a64c:	hlt    
  41a64d:	and    BYTE PTR [ebx],bh
  41a64f:	push   0xd585ebe8
  41a654:	jp     0x41a675
  41a656:	stos   BYTE PTR es:[edi],al
  41a657:	push   sp
  41a659:	jl     0x41a62e
  41a65b:	adc    ebp,DWORD PTR [esi+ebx*2]
  41a65e:	and    DWORD PTR [ecx-0x43da8d83],esi
  41a664:	jb     0x41a653
  41a666:	(bad)  
  41a667:	cdq    
  41a668:	mov    ds:0xcf38c65a,al
  41a66d:	fyl2x  
  41a66f:	add    cl,bh
  41a671:	dec    ebx
  41a672:	(bad)  
  41a673:	(bad)  
  41a674:	je     0x41a6d5
  41a676:	push   es
  41a677:	loop   0x41a638
  41a679:	fimul  WORD PTR [ebx+0x37]
  41a67c:	dec    ebp
  41a67d:	fmulp  st(4),st
  41a67f:	cmp    ecx,DWORD PTR [edx]
  41a681:	and    al,0x18
  41a683:	push   esi
  41a684:	mov    eax,ds:0x1186d78f
  41a689:	or     dh,BYTE PTR [ecx+0x49937e6a]
  41a68f:	xchg   ebx,eax
  41a690:	inc    ebp
  41a691:	mov    dh,0xb4
  41a693:	inc    esp
  41a694:	cmc    
  41a695:	loop   0x41a6d3
  41a697:	dec    ecx
  41a698:	fnclex 
  41a69a:	add    al,0x2b
  41a69c:	out    0x6f,al
  41a69e:	mov    dl,0xbf
  41a6a0:	push   esp
  41a6a1:	push   es
  41a6a2:	in     al,0xb9
  41a6a4:	push   esi
  41a6a5:	mov    ecx,0x4af1057f
  41a6aa:	cdq    
  41a6ab:	aad    0x83
  41a6ad:	push   0x85f9e1f6
  41a6b2:	repz retf 
  41a6b4:	inc    ebp
  41a6b5:	xchg   esi,eax
  41a6b6:	fild   QWORD PTR [edx]
  41a6b8:	sbb    DWORD PTR ds:0x3a2bb77c,ebp
  41a6be:	or     ch,BYTE PTR [ebp+ecx*4-0x6b72e8fe]
  41a6c5:	or     DWORD PTR [ecx-0x795b44a5],edx
  41a6cb:	push   0x62
  41a6cd:	jnp    0x41a677
  41a6cf:	icebp  
  41a6d0:	xchg   DWORD PTR [eax-0x1ba206e8],ecx
  41a6d6:	fisubr DWORD PTR [ebx-0x6942babd]
  41a6dc:	and    DWORD PTR ds:0xdd86adae,ecx
  41a6e2:	lods   eax,DWORD PTR ds:[esi]
  41a6e3:	xchg   edx,eax
  41a6e4:	inc    edx
  41a6e5:	loopne 0x41a67a
  41a6e7:	mov    ecx,0xe638a076
  41a6ec:	adc    al,0x51
  41a6ee:	outs   dx,BYTE PTR ds:[esi]
  41a6ef:	xchg   ebx,eax
  41a6f0:	dec    ecx
  41a6f1:	jno    0x41a73c
  41a6f3:	sub    eax,0x1707710d
  41a6f8:	add    ebp,ecx
  41a6fa:	mov    eax,0x1bc50faf
  41a6ff:	(bad)  
  41a701:	push   ebx
  41a702:	inc    eax
  41a703:	xchg   ebp,eax
  41a704:	push   edi
  41a705:	push   ss
  41a706:	cmp    edi,DWORD PTR [edx-0x1f]
  41a709:	mov    ecx,0x8c9ee9b5
  41a70e:	das    
  41a70f:	add    BYTE PTR ds:0xcc199348,bl
  41a715:	fistp  WORD PTR [eax+0x5852a73a]
  41a71b:	cmp    dh,ah
  41a71d:	rcl    ah,cl
  41a71f:	and    ebp,DWORD PTR [edi-0x48af67ad]
  41a725:	and    ah,BYTE PTR [esi-0x49bd6efb]
  41a72b:	or     ah,al
  41a72d:	mov    cl,0xca
  41a72f:	jns    0x41a6eb
  41a731:	retf   
  41a732:	mov    eax,ds:0x9b0c4411
  41a737:	sub    DWORD PTR [edi],ecx
  41a739:	mov    ecx,0x7f67caf5
  41a73e:	jmp    0xbe4f6743
  41a743:	xchg   esp,eax
  41a744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a745:	push   edx
  41a746:	mov    al,ds:0x8e6f64a9
  41a74b:	test   DWORD PTR [ebp-0x1f7bd457],edx
  41a751:	cmp    al,0x75
  41a753:	test   eax,0x1cc1b527
  41a758:	jmp    0x41a7b2
  41a75a:	outs   dx,BYTE PTR ds:[esi]
  41a75b:	out    dx,eax
  41a75c:	lahf   
  41a75d:	xor    dh,ch
  41a75f:	add    esi,DWORD PTR [ecx]
  41a761:	sahf   
  41a762:	adc    edx,DWORD PTR [ebx+0x21]
  41a765:	test   dl,0x8e
  41a768:	pop    ecx
  41a769:	pop    ds
  41a76a:	data16 (bad) 
  41a76c:	jo     0x41a7b4
  41a76e:	xchg   edx,eax
  41a76f:	xchg   esp,eax
  41a770:	xlat   BYTE PTR ds:[ebx]
  41a771:	gs scas eax,DWORD PTR es:[edi]
  41a773:	ins    DWORD PTR es:[edi],dx
  41a774:	outs   dx,BYTE PTR ds:[esi]
  41a775:	pop    edi
  41a776:	mov    eax,ds:0xe8a9a45a
  41a77b:	xor    DWORD PTR [eax],ebx
  41a77d:	jmp    0x41a7bd
  41a77f:	fwait
  41a780:	dec    edi
  41a781:	jo     0x41a74e
  41a783:	jne    0x41a75e
  41a785:	fmul   QWORD PTR [esp+ebp*4-0x37]
  41a789:	hlt    
  41a78a:	scas   al,BYTE PTR es:[edi]
  41a78b:	(bad)  [edi+0x4447aa84]
  41a791:	xchg   esp,eax
  41a792:	out    0x6a,al
  41a794:	clc    
  41a795:	fisttp QWORD PTR [eax]
  41a797:	jmp    0xa253b3a5
  41a79c:	push   esp
  41a79d:	push   eax
  41a79e:	pop    ebx
  41a79f:	scas   al,BYTE PTR es:[edi]
  41a7a0:	add    BYTE PTR [eax-0x67],ah
  41a7a3:	iret   
  41a7a4:	jnp    0x41a80a
  41a7a6:	and    eax,0x229ba890
  41a7ab:	xor    al,0x9b
  41a7ad:	jo     0x41a763
  41a7af:	daa    
  41a7b0:	inc    ecx
  41a7b1:	jae    0x41a76c
  41a7b3:	out    0x5,eax
  41a7b5:	sti    
  41a7b6:	adc    ah,dl
  41a7b8:	in     al,dx
  41a7b9:	mov    WORD PTR es:0xebe58443,cs
  41a7c0:	cmc    
  41a7c1:	pop    ebx
  41a7c2:	in     al,0xaa
  41a7c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7c5:	test   DWORD PTR [eax+0x26],0x2cbadf57
  41a7cc:	jecxz  0x41a76b
  41a7ce:	dec    ebp
  41a7cf:	xchg   ebp,eax
  41a7d0:	inc    esi
  41a7d1:	jecxz  0x41a7e3
  41a7d3:	popf   
  41a7d4:	loope  0x41a7ff
  41a7d6:	sub    al,0xc1
  41a7d8:	jmp    0xdef4e8d9
  41a7dd:	add    BYTE PTR [edi-0x2caa246b],bl
  41a7e3:	jle    0x41a78c
  41a7e5:	push   es
  41a7e6:	pushf  
  41a7e7:	aad    0x64
  41a7e9:	push   ss
  41a7ea:	mov    cs,WORD PTR [ebx-0x5]
  41a7ed:	fwait
  41a7ee:	jo     0x41a7d4
  41a7f0:	adc    dl,dl
  41a7f2:	add    ebp,edi
  41a7f4:	or     DWORD PTR [ebx+0x40716552],ecx
  41a7fa:	adc    edi,DWORD PTR [edx-0x45]
  41a7fd:	out    0x80,eax
  41a7ff:	cld    
  41a800:	mov    ebp,0x59d8b000
  41a805:	push   ebp
  41a806:	push   esp
  41a807:	cmp    eax,DWORD PTR [esi+ebp*1]
  41a80a:	idiv   ebx
  41a80c:	adc    edi,eax
  41a80e:	adc    BYTE PTR [ecx],bl
  41a810:	aaa    
  41a811:	dec    ecx
  41a812:	ret    
  41a813:	or     eax,0xf5a654e7
  41a818:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a819:	sar    DWORD PTR [eax],1
  41a81b:	dec    ebx
  41a81c:	ja     0x41a7cd
  41a81e:	aaa    
  41a81f:	xor    eax,0x8a0d4d1f
  41a824:	fwait
  41a825:	mov    cl,BYTE PTR [esp+edi*8-0x38702bd8]
  41a82c:	mov    ebp,0xc17f23c1
  41a832:	or     eax,0x59927069
  41a837:	inc    edx
  41a838:	pushf  
  41a839:	dec    eax
  41a83a:	jecxz  0x41a87b
  41a83c:	aam    0xcf
  41a83e:	(bad)  
  41a83f:	ficom  WORD PTR [ebp-0x73]
  41a842:	dec    ebp
  41a843:	cmp    DWORD PTR [esi+0x5e],esi
  41a846:	aaa    
  41a847:	push   es
  41a848:	loope  0x41a7d1
  41a84a:	(bad)  
  41a84b:	push   esi
  41a84c:	jmp    0x8d64:0x60153394
  41a853:	mov    edi,0x67cffcd
  41a858:	sub    DWORD PTR [ebp+0x2d],edx
  41a85b:	ss stc 
  41a85d:	adc    eax,0xb19cfb1e
  41a862:	(bad)  
  41a863:	jae    0x41a89c
  41a865:	jl     0x41a87f
  41a867:	leave  
  41a868:	xchg   edx,eax
  41a869:	mov    bh,0x62
  41a86b:	sub    BYTE PTR [ebx],ah
  41a86d:	out    0x89,eax
  41a86f:	pusha  
  41a870:	pop    ss
  41a871:	cmp    eax,0xd4fbca5a
  41a876:	xchg   edi,eax
  41a877:	mov    al,ds:0xf2a3da75
  41a87c:	gs push ecx
  41a87e:	scas   al,BYTE PTR es:[edi]
  41a87f:	pop    ebp
  41a880:	push   0x76544fd5
  41a885:	or     ebp,DWORD PTR [edi]
  41a887:	push   ss
  41a888:	ins    DWORD PTR es:[edi],dx
  41a889:	stos   BYTE PTR es:[edi],al
  41a88a:	out    0x31,al
  41a88c:	pusha  
  41a88d:	(bad)  
  41a88e:	js     0x41a8f2
  41a890:	stc    
  41a891:	aas    
  41a892:	out    dx,eax
  41a893:	pop    ebx
  41a894:	daa    
  41a895:	(bad)
  41a899:	(bad)  
  41a89a:	fmul   st(6),st
  41a89c:	push   eax
  41a89d:	xor    al,0xdc
  41a89f:	pminsw mm5,QWORD PTR [esi]
  41a8a2:	pop    es
  41a8a3:	and    BYTE PTR [ebx-0x15],0xb1
  41a8a7:	std    
  41a8a8:	mov    ebp,0x87312e3c
  41a8ad:	rol    DWORD PTR [ebx+0xdb6496a],0x76
  41a8b4:	push   0x1a0e0865
  41a8b9:	xchg   BYTE PTR [edi],al
  41a8bb:	ss out 0x5c,al
  41a8be:	int    0x51
  41a8c0:	xor    al,0x58
  41a8c2:	inc    esi
  41a8c3:	loop   0x41a944
  41a8c5:	cmp    DWORD PTR [ecx-0x6e],0x3307323e
  41a8cc:	xor    BYTE PTR [edx],cl
  41a8ce:	sbb    ecx,edx
  41a8d0:	pop    ss
  41a8d1:	mov    eax,ds:0xcbd045ea
  41a8d6:	mov    cl,0x32
  41a8d8:	sub    eax,0x9b06afdb
  41a8dd:	dec    ecx
  41a8de:	ja     0x41a8c7
  41a8e0:	shr    DWORD PTR [esi],0x5b
  41a8e3:	data16 gs stc 
  41a8e6:	xsaves [edx]
  41a8e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8ea:	(bad)  
  41a8eb:	loop   0x41a8b7
  41a8ed:	inc    edi
  41a8ee:	rcl    BYTE PTR [ebx+0x5f],0x87
  41a8f2:	ds sub eax,0xde301e7e
  41a8f8:	iret   
  41a8f9:	fisttp WORD PTR [ecx+0xac37e45]
  41a8ff:	xor    eax,0x84d9fe45
  41a904:	dec    eax
  41a905:	mov    al,0xf7
  41a907:	jmp    0x5931f48e
  41a90c:	mov    cl,0x2e
  41a90e:	jae    0x41a8bc
  41a910:	in     al,0x22
  41a912:	loopne 0x41a89c
  41a914:	imul   ebx,DWORD PTR [ecx-0x74ef505b],0x47ce173d
  41a91e:	mov    esp,0xf537e11b
  41a923:	cmp    dh,BYTE PTR [ebp-0x6f]
  41a926:	mov    edi,0x8a2639a9
  41a92b:	div    BYTE PTR [esi-0x1ad02326]
  41a931:	adc    al,0x74
  41a933:	dec    eax
  41a934:	(bad)  
  41a935:	cmp    ch,ch
  41a937:	sub    BYTE PTR [ecx-0x76],ah
  41a93a:	ja     0x41a99a
  41a93c:	dec    eax
  41a93d:	imul   edi,DWORD PTR [esi],0x32
  41a940:	jb     0x41a997
  41a942:	cmp    al,0x88
  41a944:	ficomp DWORD PTR [edx]
  41a946:	outs   dx,BYTE PTR ds:[esi]
  41a947:	add    eax,0xc3adaa4c
  41a94c:	in     eax,dx
  41a94d:	push   ecx
  41a94e:	repz pop ss
  41a950:	mov    edi,0x7b9a93c8
  41a955:	cmp    DWORD PTR [esi+edx*8-0x4e02f629],esi
  41a95c:	adc    DWORD PTR [ebx+0x189ef844],ecx
  41a962:	popf   
  41a963:	sar    BYTE PTR [edi+edi*8+0x2520db68],1
  41a96a:	aaa    
  41a96b:	and    edi,eax
  41a96d:	inc    esp
  41a96e:	sub    BYTE PTR [esi+0x7c],dl
  41a971:	stos   BYTE PTR es:[edi],al
  41a972:	pop    eax
  41a973:	sbb    BYTE PTR ds:0x343b8801,ch
  41a979:	les    ebp,FWORD PTR [ebx]
  41a97b:	test   al,0xeb
  41a97d:	jl     0x41a9eb
  41a97f:	or     al,0x72
  41a981:	test   al,0xae
  41a983:	fstp   TBYTE PTR [ebp+0xb33e548]
  41a989:	inc    ecx
  41a98a:	cdq    
  41a98b:	icebp  
  41a98c:	out    0xcd,eax
  41a98e:	aaa    
  41a98f:	jb     0x41a983
  41a991:	stc    
  41a992:	xor    DWORD PTR [ebx+0x75],ebx
  41a995:	and    eax,0x487a3120
  41a99a:	addr16 add bh,bl
  41a99d:	xor    bl,cl
  41a99f:	stc    
  41a9a0:	adc    DWORD PTR [ebp+0xac3ba01],0x52
  41a9a7:	popa   
  41a9a8:	(bad)  
  41a9a9:	mov    ebx,0xdd5eaebe
  41a9ae:	mov    ah,0x16
  41a9b0:	aam    0xba
  41a9b2:	mov    ecx,0x522ad272
  41a9b7:	clc    
  41a9b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9b9:	enterw 0x7fa6,0xaa
  41a9be:	outs   dx,BYTE PTR ds:[esi]
  41a9bf:	fwait
  41a9c0:	xchg   edx,eax
  41a9c1:	sub    eax,0x1106603
  41a9c6:	cdq    
  41a9c7:	xor    ecx,ecx
  41a9c9:	adc    al,0x97
  41a9cb:	lea    edi,[esi]
  41a9cd:	and    BYTE PTR ds:0x3fdccd7c,cl
  41a9d3:	add    dh,bh
  41a9d5:	bnd call 0xb93242dd
  41a9db:	ror    BYTE PTR [ebp+eax*4-0x4694bbfb],cl
  41a9e2:	(bad)  [edi+0xe6f5cb0]
  41a9e8:	int    0x91
  41a9ea:	or     al,0x8d
  41a9ec:	lock arpl WORD PTR [edx+ecx*2],bp
  41a9f0:	push   esp
  41a9f1:	add    ah,BYTE PTR [esi+ebp*1]
  41a9f4:	pop    esp
  41a9f5:	out    dx,al
  41a9f6:	push   ecx
  41a9f7:	das    
  41a9f8:	ret    0xbd6
  41a9fb:	icebp  
  41a9fc:	xlat   BYTE PTR ds:[ebx]
  41a9fd:	inc    ebx
  41a9fe:	mov    dl,0x3c
  41aa00:	ds clc 
  41aa02:	xlat   BYTE PTR ds:[ebx]
  41aa03:	in     eax,0xa2
  41aa05:	mov    dh,0xdd
  41aa07:	leave  
  41aa08:	add    eax,0x5e4fbcc7
  41aa0d:	push   0xc1ccb2c2
  41aa12:	mov    esi,gs
  41aa14:	sbb    BYTE PTR [esi+0x14],dl
  41aa17:	xchg   edi,eax
  41aa18:	fistp  QWORD PTR [ecx+eiz*8]
  41aa1b:	jmp    0x4e850af4
  41aa20:	lods   eax,DWORD PTR ds:[esi]
  41aa21:	adc    BYTE PTR [ecx],0xea
  41aa24:	jbe    0x41aa1c
  41aa26:	fld    DWORD PTR [esi-0x27]
  41aa29:	or     eax,0xb4d11c99
  41aa2e:	jg     0x41aa41
  41aa30:	daa    
  41aa31:	das    
  41aa32:	ja     0x41aa2f
  41aa34:	or     BYTE PTR [ebx-0xb],cl
  41aa37:	pop    esi
  41aa38:	shr    BYTE PTR [edx],cl
  41aa3a:	dec    esi
  41aa3b:	mul    BYTE PTR [eax]
  41aa3d:	repnz imul ecx,DWORD PTR [esi],0x74c9997c
  41aa44:	or     DWORD PTR [ecx+0x32],edx
  41aa47:	outs   dx,DWORD PTR ds:[esi]
  41aa48:	daa    
  41aa49:	add    BYTE PTR [ebp-0x35f7e75],dh
  41aa4f:	sub    bh,BYTE PTR [ebx+ebp*1+0x31]
  41aa53:	rcr    BYTE PTR [ebp-0x4a9a38c],cl
  41aa59:	clc    
  41aa5a:	adc    DWORD PTR [esi],ecx
  41aa5c:	les    ebp,FWORD PTR [eax+0x5cc43364]
  41aa62:	xchg   DWORD PTR [esi],esi
  41aa64:	das    
  41aa65:	in     eax,0x7d
  41aa67:	and    al,0xc1
  41aa69:	ss push 0x2a
  41aa6c:	mov    dh,0x94
  41aa6e:	inc    ebx
  41aa6f:	cmp    al,0x49
  41aa71:	hlt    
  41aa72:	rcr    DWORD PTR [esi+0x24],1
  41aa75:	and    eax,0x93f83022
  41aa7a:	mov    eax,0xfc729ff2
  41aa7f:	(bad)  
  41aa80:	aad    0xc8
  41aa82:	imul   ebx,DWORD PTR [ebx],0xffffff8c
  41aa85:	enter  0x169,0x5e
  41aa89:	in     eax,0xfa
  41aa8b:	sub    DWORD PTR [eax-0x59523265],ebp
  41aa91:	data16 arpl WORD PTR [ebx+0x51],bp
  41aa95:	dec    ebp
  41aa96:	add    DWORD PTR [ebx+0x6595af1f],ecx
  41aa9c:	xor    DWORD PTR [eax+0x71bf1c1a],esp
  41aaa2:	mov    bh,0x79
  41aaa4:	and    ch,cl
  41aaa6:	xchg   edx,eax
  41aaa7:	xor    eax,DWORD PTR [ebx]
  41aaa9:	adc    BYTE PTR [ebx+0x14333ebb],0xc9
  41aab0:	push   0x481cc80f
  41aab5:	dec    edi
  41aab6:	mov    eax,0xda43df9d
  41aabb:	pop    edi
  41aabc:	out    dx,al
  41aabd:	push   ecx
  41aabe:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aac0:	or     al,0x1c
  41aac2:	pop    edx
  41aac3:	and    edi,edx
  41aac5:	in     eax,dx
  41aac6:	mov    al,0xac
  41aac8:	daa    
  41aac9:	push   ss
  41aaca:	(bad)  
  41aacc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aacd:	inc    ebp
  41aace:	imul   eax,edi,0xc9693b3e
  41aad4:	rol    DWORD PTR [edx+edx*1+0x6c],0xbc
  41aad9:	aam    0x17
  41aadb:	jp     0x41aa64
  41aadd:	fld    TBYTE PTR [edi]
  41aadf:	push   edx
  41aae0:	inc    ebx
  41aae1:	in     al,dx
  41aae2:	call   0xe0ab427
  41aae7:	inc    edi
  41aae8:	repnz or al,0xb7
  41aaeb:	and    edx,ebp
  41aaed:	pop    esi
  41aaee:	jl     0x41ab3e
  41aaf0:	cmp    DWORD PTR [edx+0x55d71744],ebx
  41aaf6:	arpl   WORD PTR [esp+ebp*2+0x3442c611],ax
  41aafd:	push   ds
  41aafe:	mov    dl,0x2a
  41ab00:	scas   eax,DWORD PTR es:[edi]
  41ab01:	je     0x41ab12
  41ab03:	lock push ecx
  41ab05:	mov    esi,DWORD PTR [edx+0x45044d6f]
  41ab0b:	jmp    0x3523:0xd8fe4c43
  41ab12:	test   DWORD PTR [eax-0x3cd5cd93],esp
  41ab18:	pop    ds
  41ab19:	adc    eax,0x1286975a
  41ab1e:	push   0x732034d
  41ab23:	jns    0x41aaec
  41ab25:	pop    es
  41ab26:	pop    edx
  41ab27:	and    eax,0xaf514e8c
  41ab2c:	(bad)  
  41ab2d:	clc    
  41ab2e:	xchg   ebp,eax
  41ab2f:	push   ebx
  41ab30:	sti    
  41ab31:	jbe    0x41ab2d
  41ab33:	xor    BYTE PTR [eax+eax*4-0x4d916353],cl
  41ab3a:	mov    BYTE PTR [esi],0x94
  41ab3d:	ret    
  41ab3e:	daa    
  41ab3f:	test   eax,0xf5c7bb03
  41ab44:	mov    ds:0x98ff9b18,eax
  41ab49:	add    eax,0x18cc2358
  41ab4e:	jns    0x41ab73
  41ab50:	mov    cl,0x88
  41ab52:	pop    esi
  41ab53:	pop    ecx
  41ab54:	mov    esi,esi
  41ab56:	push   cs
  41ab57:	push   0x12
  41ab59:	mov    al,0x24
  41ab5b:	cs pop ds
  41ab5d:	call   0x2b43:0x675b6ce8
  41ab64:	popf   
  41ab65:	cwde   
  41ab66:	jmpw   0xf7d0
  41ab6a:	mov    edx,0x33d702c5
  41ab6f:	pop    ebx
  41ab70:	imul   edi,DWORD PTR [ecx-0x1e],0x825e9854
  41ab77:	mov    ecx,0x7419984c
  41ab7c:	pop    esp
  41ab7d:	dec    eax
  41ab7e:	push   ebx
  41ab7f:	sub    eax,0xf5d6ba54
  41ab84:	mov    bl,0xc8
  41ab86:	inc    eax
  41ab87:	addr16 fwait
  41ab89:	lds    edi,FWORD PTR [eax-0x488a0270]
  41ab8f:	dec    ecx
  41ab90:	jae    0x41ab9b
  41ab92:	repnz bound edx,QWORD PTR [ebx+0x6f]
  41ab96:	push   cs
  41ab97:	mov    DWORD PTR [ebx-0x2],ecx
  41ab9a:	mov    ebp,0x88652281
  41ab9f:	add    al,0x98
  41aba1:	enter  0x2feb,0x57
  41aba5:	repz jns 0x41ab60
  41aba8:	fdiv   QWORD PTR [eax-0x32b2e824]
  41abae:	sub    al,0xfe
  41abb0:	in     eax,dx
  41abb1:	in     al,0x95
  41abb3:	out    dx,al
  41abb4:	fcmovnu st,st(0)
  41abb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abb7:	xor    eax,0x455e5a89
  41abbc:	add    ah,BYTE PTR [edx+ecx*1]
  41abbf:	retf   0x9023
  41abc2:	jb     0x41ac0b
  41abc4:	jle    0x41aba4
  41abc6:	mov    DWORD PTR [ecx],0x7eb0b5d6
  41abcc:	pop    esp
  41abcd:	lahf   
  41abce:	push   es
  41abcf:	add    al,0x41
  41abd1:	in     eax,0x81
  41abd3:	outs   dx,BYTE PTR ds:[esi]
  41abd4:	or     eax,0xe22a58f9
  41abd9:	jbe    0x41abc9
  41abdb:	mov    eax,ds:0x9727d218
  41abe0:	gs add eax,0xb7577c21
  41abe6:	mov    ch,0x50
  41abe8:	push   0xffffffb4
  41abea:	(bad)  
  41abeb:	jmp    0xd2459dc
  41abf0:	jl     0x41ac60
  41abf2:	sub    DWORD PTR [ebx],edx
  41abf4:	jo     0x41ac41
  41abf6:	inc    edx
  41abf7:	mov    dh,0x76
  41abf9:	mov    ebx,0xa41ba423
  41abfe:	addr16 jp 0x41ac5b
  41ac01:	int    0x8
  41ac03:	mov    al,0xb0
  41ac05:	out    dx,al
  41ac06:	push   esi
  41ac07:	stos   DWORD PTR es:[edi],eax
  41ac08:	scas   eax,DWORD PTR es:[edi]
  41ac09:	jno    0x41ac10
  41ac0b:	ret    0x9ee0
  41ac0e:	or     cl,ah
  41ac10:	cmp    BYTE PTR [eax+0x14ad62a8],0xe5
  41ac17:	loopne 0x41ac5f
  41ac19:	lods   eax,DWORD PTR ds:[esi]
  41ac1a:	fcom   DWORD PTR [edx+ecx*1+0x21]
  41ac1e:	loop   0x41abb7
  41ac20:	test   bl,dh
  41ac22:	mov    ah,0xf9
  41ac24:	xchg   esp,eax
  41ac25:	(bad)  
  41ac26:	sbb    cl,ah
  41ac28:	cmp    al,0xd5
  41ac2a:	add    ecx,ecx
  41ac2c:	test   al,0xec
  41ac2e:	and    dh,BYTE PTR [esi]
  41ac30:	das    
  41ac31:	or     eax,0x8d72bf99
  41ac36:	shl    edi,1
  41ac38:	or     BYTE PTR [edi*8-0x7ebbffed],0xdc
  41ac40:	repnz sub al,0x73
  41ac43:	add    eax,0x890f9d03
  41ac48:	std    
  41ac49:	pop    edx
  41ac4a:	dec    esp
  41ac4b:	(bad)  
  41ac4c:	lods   eax,DWORD PTR ds:[esi]
  41ac4d:	mov    dh,0x72
  41ac4f:	stos   DWORD PTR es:[edi],eax
  41ac50:	dec    ecx
  41ac51:	sbb    DWORD PTR [edx-0x7],ecx
  41ac54:	mov    edx,0xe7c5252e
  41ac59:	cld    
  41ac5a:	mov    ebp,0xdf722909
  41ac5f:	iret   
  41ac60:	xor    eax,0xe1bdc0d
  41ac65:	add    eax,DWORD PTR [edi+eax*1-0x4e]
  41ac69:	imul   ebx,DWORD PTR [ecx+0x71],0x630568b7
  41ac70:	sbb    dh,ch
  41ac72:	ds cmc 
  41ac74:	or     eax,0xb33797f3
  41ac79:	sbb    al,al
  41ac7b:	push   esi
  41ac7c:	scas   al,BYTE PTR es:[edi]
  41ac7d:	not    bh
  41ac7f:	jmp    0x41ac2a
  41ac81:	aaa    
  41ac82:	pop    eax
  41ac83:	mov    cl,0xa
  41ac85:	(bad)  
  41ac86:	rol    bl,cl
  41ac88:	scas   al,BYTE PTR es:[edi]
  41ac89:	pusha  
  41ac8a:	pop    edx
  41ac8b:	js     0x41ac8a
  41ac8d:	jecxz  0x41acca
  41ac8f:	push   es
  41ac90:	inc    ebp
  41ac91:	and    edx,DWORD PTR ds:0x623e4082
  41ac97:	cs jp  0x41acbe
  41ac9a:	in     al,0x70
  41ac9c:	cmp    BYTE PTR [esi-0x41b32bda],al
  41aca2:	push   esp
  41aca3:	push   ebp
  41aca4:	inc    esi
  41aca5:	aas    
  41aca6:	jae    0x41acb5
  41aca8:	mov    ecx,DWORD PTR [eax-0x39]
  41acab:	popf   
  41acac:	shl    BYTE PTR [ecx+0x2f013c62],1
  41acb2:	mov    eax,ds:0xbecf304b
  41acb7:	lods   al,BYTE PTR ds:[esi]
  41acb8:	pop    esi
  41acb9:	jge    0x41acfa
  41acbb:	fdivr  DWORD PTR [ebp+0x1a]
  41acbe:	cmp    eax,0x340f6eae
  41acc3:	outs   dx,DWORD PTR ds:[esi]
  41acc4:	clc    
  41acc5:	push   ss
  41acc6:	push   eax
  41acc7:	mov    dl,BYTE PTR [ecx+0x13]
  41acca:	mov    bl,0x7f
  41accc:	int    0x32
  41acce:	mov    ebp,DWORD PTR ds:0x52d29566
  41acd4:	push   0xa3eeb17d
  41acd9:	and    DWORD PTR [edi],0xffffffcf
  41acdc:	sub    eax,0xf5182ec3
  41ace1:	popf   
  41ace2:	jle    0x41ad25
  41ace4:	push   esi
  41ace5:	aad    0x78
  41ace7:	test   BYTE PTR [ebp+0x1],ah
  41acea:	xor    dh,BYTE PTR [eax+0x2a]
  41aced:	js     0x41acfe
  41acef:	icebp  
  41acf0:	rcl    DWORD PTR [edi-0x722309ec],0x35
  41acf7:	and    DWORD PTR [ecx+0x1c],eax
  41acfa:	cwde   
  41acfb:	stc    
  41acfc:	xor    edi,DWORD PTR [ebp-0x76]
  41acff:	mov    al,ds:0x4f45b245
  41ad04:	xlat   BYTE PTR ds:[ebx]
  41ad05:	cmp    eax,0xe807bde2
  41ad0a:	dec    edi
  41ad0b:	xchg   edx,eax
  41ad0c:	or     al,BYTE PTR [edi]
  41ad0e:	push   ds
  41ad0f:	mov    WORD PTR [eax],es
  41ad11:	jbe    0x41ad0e
  41ad13:	xchg   ebp,eax
  41ad14:	cmp    DWORD PTR [eax],eax
  41ad16:	stos   BYTE PTR es:[edi],al
  41ad17:	lods   al,BYTE PTR ds:[esi]
  41ad18:	(bad)  
  41ad19:	xlat   BYTE PTR ds:[ebx]
  41ad1a:	sub    DWORD PTR [ebx+0x6c93fa85],0x9
  41ad21:	xor    ecx,DWORD PTR [ecx+0x6bc90771]
  41ad27:	sub    dl,BYTE PTR [esi]
  41ad29:	push   ebp
  41ad2a:	cmp    eax,0x7adb54de
  41ad2f:	int    0x3e
  41ad31:	outs   dx,BYTE PTR ds:[esi]
  41ad32:	push   cs
  41ad33:	mov    al,ah
  41ad35:	sub    eax,DWORD PTR [ebx]
  41ad37:	daa    
  41ad38:	jbe    0x41ad40
  41ad3a:	jo     0x41adb7
  41ad3c:	rcl    DWORD PTR [esp+edi*2],cl
  41ad3f:	adc    BYTE PTR [edx],dh
  41ad41:	in     eax,dx
  41ad42:	pushf  
  41ad43:	ror    ecx,cl
  41ad45:	popf   
  41ad46:	imul   ebp,DWORD PTR [ebp-0x42],0xffffffd9
  41ad4a:	xchg   esp,eax
  41ad4b:	adc    edi,ebx
  41ad4d:	sub    ebp,DWORD PTR [esi-0x59b1ab6b]
  41ad53:	pusha  
  41ad54:	dec    esp
  41ad55:	jb     0x41ad15
  41ad57:	dec    esp
  41ad58:	arpl   WORD PTR [edx+ebx*4-0x7a526dea],dx
  41ad5f:	pop    ebp
  41ad60:	int3   
  41ad61:	mov    edx,0x685b8910
  41ad66:	mov    eax,ds:0x98ee048e
  41ad6b:	or     al,0x8f
  41ad6d:	scas   eax,DWORD PTR es:[edi]
  41ad6e:	in     al,dx
  41ad6f:	mov    al,ds:0x148773d
  41ad74:	sub    eax,0x5acaa04f
  41ad79:	xor    DWORD PTR [ecx+0x34ca6793],0x58
  41ad80:	popf   
  41ad81:	xchg   ebx,eax
  41ad82:	(bad)  
  41ad83:	jg     0x41ad82
  41ad85:	push   edi
  41ad86:	and    al,0x2f
  41ad88:	(bad)  
  41ad89:	adc    dh,dl
  41ad8b:	inc    edi
  41ad8c:	push   es
  41ad8d:	sbb    al,0xd1
  41ad8f:	push   esi
  41ad90:	(bad)  
  41ad91:	pop    esi
  41ad92:	fld    TBYTE PTR [ebx+0x32]
  41ad95:	aam    0x41
  41ad97:	std    
  41ad98:	shl    DWORD PTR ds:0xdc9fbdef,0xde
  41ad9f:	test   eax,0x8888405f
  41ada4:	inc    ebp
  41ada5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ada6:	and    ebx,DWORD PTR [eax+0x4c]
  41ada9:	push   0xc67695d6
  41adae:	xchg   ecx,eax
  41adaf:	in     al,dx
  41adb0:	or     esp,DWORD PTR [eax+ecx*1]
  41adb3:	jbe    0x41adcb
  41adb5:	jecxz  0x41ad47
  41adb7:	jbe    0x41ad53
  41adb9:	mov    al,0x71
  41adbb:	add    DWORD PTR [ebp+0xb84ab15],ebp
  41adc1:	pop    esp
  41adc2:	je     0x41ad50
  41adc4:	xor    cl,dh
  41adc6:	into   
  41adc7:	xchg   edi,eax
  41adc8:	in     al,0x80
  41adca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adcb:	cld    
  41adcc:	ja     0x41ad8b
  41adce:	bound  ebx,QWORD PTR [ebp-0x1e]
  41add1:	ja     0x41ae3d
  41add3:	sbb    al,0x4e
  41add5:	xlat   BYTE PTR ds:[bx]
  41add7:	popf   
  41add8:	int3   
  41add9:	scas   eax,DWORD PTR es:[edi]
  41adda:	push   0x2d
  41addc:	mov    edi,0x6001d4c8
  41ade1:	mov    ebp,0x5471e202
  41ade6:	add    cl,BYTE PTR [ebx-0x3184713c]
  41adec:	cld    
  41aded:	push   ds
  41adee:	cli    
  41adef:	push   ecx
  41adf0:	inc    ebp
  41adf1:	dec    eax
  41adf2:	scas   al,BYTE PTR es:[edi]
  41adf3:	sbb    DWORD PTR [ecx],0x256efecc
  41adf9:	test   BYTE PTR [edi-0x6836e198],cl
  41adff:	not    DWORD PTR ds:0x58086fbb
  41ae05:	cli    
  41ae06:	lock cmc 
  41ae08:	int3   
  41ae09:	pop    ss
  41ae0a:	sub    eax,0xf405aee3
  41ae0f:	mov    edx,0xc937250c
  41ae14:	psubusw mm2,QWORD PTR [esi+0x41c3136a]
  41ae1b:	in     eax,0x87
  41ae1d:	mov    dl,BYTE PTR [esi-0xc]
  41ae20:	gs iret 
  41ae22:	mov    ch,ah
  41ae24:	xchg   ecx,eax
  41ae25:	pop    es
  41ae26:	push   edx
  41ae27:	sbb    DWORD PTR [ecx-0x4b],edx
  41ae2a:	jmp    0x33bf:0x8d2897ea
  41ae31:	jecxz  0x41ae3b
  41ae33:	stc    
  41ae34:	retf   
  41ae35:	mov    eax,esp
  41ae37:	mov    dh,0xb8
  41ae39:	rcl    cl,1
  41ae3b:	aas    
  41ae3c:	xchg   ebp,eax
  41ae3d:	push   ebx
  41ae3e:	call   0xca2c:0xa1bdcc46
  41ae45:	cmp    BYTE PTR [ebx],ah
  41ae47:	mov    ebp,0x3012a4b0
  41ae4c:	into   
  41ae4d:	lods   eax,DWORD PTR ds:[esi]
  41ae4e:	mov    eax,0x6d06f35d
  41ae53:	ja     0x41ae36
  41ae55:	mov    cl,0x52
  41ae57:	addr16 cdq 
  41ae59:	repz push ebp
  41ae5b:	pop    esi
  41ae5c:	ret    0xef83
  41ae5f:	mov    ds:0xea1484ca,eax
  41ae64:	or     eax,0xc5bcdd20
  41ae69:	imul   ecx,DWORD PTR [edi-0x4edb72a9],0xffffffce
  41ae70:	gs pop edx
  41ae72:	loopne 0x41ae92
  41ae74:	mov    bl,0x47
  41ae76:	xchg   esp,eax
  41ae77:	inc    eax
  41ae78:	add    al,0x36
  41ae7a:	lods   eax,DWORD PTR ds:[esi]
  41ae7b:	arpl   WORD PTR [ecx+0xf],sp
  41ae7e:	xchg   edi,eax
  41ae7f:	xor    eax,0x7494edd8
  41ae84:	(bad)  
  41ae85:	hlt    
  41ae86:	and    BYTE PTR [edi],bh
  41ae88:	or     eax,0xf82b4f1f
  41ae8d:	shr    DWORD PTR [ebx+0x15c740cd],0x55
  41ae94:	inc    ebp
  41ae95:	addr16 push edx
  41ae97:	ins    BYTE PTR es:[edi],dx
  41ae98:	push   ecx
  41ae99:	cld    
  41ae9a:	mov    ?,WORD PTR [edx+0x6]
  41ae9d:	push   ds
  41ae9e:	je     0x41ae96
  41aea0:	mov    cl,0x4f
  41aea2:	pop    es
  41aea3:	nop
  41aea4:	out    dx,eax
  41aea5:	push   ebx
  41aea6:	or     edx,DWORD PTR [esi-0x2f]
  41aea9:	jns    0x41aebb
  41aeab:	test   DWORD PTR [eax-0x50],esi
  41aeae:	add    DWORD PTR [edi],esi
  41aeb0:	cmp    eax,0x54093afa
  41aeb5:	lods   al,BYTE PTR ds:[esi]
  41aeb6:	shl    DWORD PTR [edi],0xa9
  41aeb9:	ret    0xdbc1
  41aebc:	sbb    eax,0xcbda29
  41aec1:	out    dx,al
  41aec2:	pop    es
  41aec3:	mov    esi,0x4c26410a
  41aec8:	dec    edx
  41aec9:	cmp    esi,esp
  41aecb:	push   esp
  41aecc:	xchg   ebp,eax
  41aecd:	clc    
  41aece:	fiadd  DWORD PTR [ecx]
  41aed0:	mov    ds:0x72daaec9,eax
  41aed5:	test   al,0xc8
  41aed7:	retf   
  41aed8:	jge    0x41aeec
  41aeda:	nop
  41aedb:	repnz or eax,0xb001fdad
  41aee1:	xor    ch,BYTE PTR [esi+ecx*8+0x2d6b4726]
  41aee8:	pop    esp
  41aee9:	pop    ebx
  41aeea:	jbe    0x41af5c
  41aeec:	outs   dx,BYTE PTR cs:[esi]
  41aeee:	xlat   BYTE PTR ds:[ebx]
  41aeef:	dec    esp
  41aef0:	jbe    0x41ae8e
  41aef2:	in     al,dx
  41aef3:	mov    ah,0xf
  41aef5:	ret    0x3d60
  41aef8:	loopne 0x41aedc
  41aefa:	dec    ebx
  41aefb:	mov    al,ds:0x2ca5f74d
  41af00:	and    eax,0xba12b657
  41af05:	mov    ds:0x638d3fb9,eax
  41af0a:	ret    0x4f46
  41af0d:	out    0xff,eax
  41af0f:	jns    0x41af58
  41af11:	push   ebx
  41af12:	ins    DWORD PTR es:[edi],dx
  41af13:	cmp    DWORD PTR [esi+0x1],esi
  41af16:	inc    ebp
  41af17:	xchg   bl,ah
  41af19:	jo     0x41af5a
  41af1b:	repnz dec esi
  41af1d:	test   al,0x5a
  41af1f:	inc    esi
  41af20:	sub    al,0x23
  41af22:	mov    bh,0x27
  41af24:	mov    ds:0x3d903271,eax
  41af29:	retf   
  41af2a:	xchg   ebx,eax
  41af2b:	test   eax,0xd28f6f07
  41af30:	dec    eax
  41af31:	nop
  41af32:	dec    esi
  41af33:	adc    BYTE PTR [esi+edx*8+0x67],al
  41af37:	inc    edx
  41af38:	add    bl,BYTE PTR [ebx+0x40]
  41af3b:	es jmp 0x3d84:0x790389e3
  41af43:	sbb    DWORD PTR [ecx-0x2924846d],esi
  41af49:	adc    eax,0x8809ba88
  41af4e:	mov    esi,0x67aff433
  41af53:	cmp    eax,0xecdabb6c
  41af58:	repnz and BYTE PTR [edi],ah
  41af5b:	jns    0x41af03
  41af5d:	fwait
  41af5e:	pop    ds
  41af5f:	mov    BYTE PTR [edi],ch
  41af61:	push   edi
  41af62:	in     al,0x39
  41af64:	or     dh,cl
  41af66:	push   esp
  41af67:	jmp    0x41af30
  41af69:	fild   DWORD PTR [ebx-0x7ea0720e]
  41af6f:	push   esp
  41af70:	or     DWORD PTR [ebp-0x62],edi
  41af73:	sbb    BYTE PTR [esp+eax*4],bl
  41af76:	popf   
  41af77:	dec    edi
  41af78:	sbb    esi,esp
  41af7a:	dec    eax
  41af7b:	or     eax,0x643f177d
  41af80:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af82:	sbb    esp,0x2ca2c929
  41af88:	imul   esi,DWORD PTR [eax+0x135cc4dc],0xe4b2bce2
  41af92:	out    0x3c,al
  41af94:	(bad)  
  41af95:	mov    ?,WORD PTR [ebp-0x6319ffc1]
  41af9b:	scas   eax,DWORD PTR es:[edi]
  41af9c:	pop    es
  41af9d:	jmp    0x72e3a08f
  41afa2:	shr    DWORD PTR [edx+0x50],1
  41afa5:	pop    edx
  41afa6:	and    eax,0xfcbf0d4b
  41afab:	push   ebp
  41afac:	xchg   ebp,eax
  41afad:	(bad)  
  41afae:	fld    DWORD PTR [ecx]
  41afb0:	mov    bl,0x42
  41afb2:	(bad)  
  41afb3:	(bad)  
  41afb5:	jmp    0x41af37
  41afb7:	(bad)  
  41afb8:	jns    0x41b026
  41afba:	sbb    BYTE PTR [ebp-0x36c5dc96],dh
  41afc0:	or     eax,0xc233a682
  41afc5:	jns    0x41af4c
  41afc7:	adc    cl,bl
  41afc9:	sbb    al,0xa8
  41afcb:	stc    
  41afcc:	int    0x3c
  41afce:	fucomi st,st(2)
  41afd0:	add    BYTE PTR [edx+0x4c],dl
  41afd3:	pushf  
  41afd4:	test   eax,0xb319f54b
  41afd9:	mov    al,ds:0xaa8b1b95
  41afde:	push   esp
  41afdf:	sub    eax,DWORD PTR [edi-0x56f871d8]
  41afe5:	ja     0x41b043
  41afe7:	(bad)  [edx-0x400a48bb]
  41afed:	outs   dx,DWORD PTR ds:[esi]
  41afee:	inc    edi
  41afef:	xchg   DWORD PTR [eax],ecx
  41aff1:	mov    ebp,0xefb7e9ab
  41aff6:	inc    ebp
  41aff7:	out    0x91,eax
  41aff9:	jae    0x41af95
  41affb:	into   
  41affc:	(bad)  
  41affd:	pop    eax
  41affe:	clc    
  41afff:	mov    WORD PTR [edi],cs
  41b001:	call   FWORD PTR [edi+0x72e58424]
  41b007:	pop    edx
  41b008:	mov    ds:0x7fe3c5ab,eax
  41b00d:	push   edi
  41b00e:	ds inc edx
  41b010:	jg     0x41b01f
  41b012:	and    eax,0x47ed5451
  41b017:	pop    ss
  41b018:	stc    
  41b019:	inc    ebp
  41b01a:	xor    al,0x99
  41b01c:	aas    
  41b01d:	inc    DWORD PTR [edx+0x7ee6cce0]
  41b023:	or     al,0x8b
  41b025:	lds    ebx,FWORD PTR [eax-0x6c]
  41b028:	cwde   
  41b029:	dec    esp
  41b02a:	ror    BYTE PTR [ebx-0x6eef7baf],0xf2
  41b031:	mov    ecx,0x9d59ed19
  41b036:	push   ss
  41b037:	mov    dl,0x77
  41b039:	sub    dl,BYTE PTR [edx]
  41b03b:	rcl    DWORD PTR [edi+eax*4-0x31],0x90
  41b040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b041:	inc    edi
  41b042:	sbb    eax,0xbac7ba75
  41b047:	sub    ah,BYTE PTR [ebx]
  41b049:	test   BYTE PTR [ebx-0x20],al
  41b04c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b04d:	xor    esi,DWORD PTR [edx-0x43c514cb]
  41b053:	sbb    eax,0xaecad000
  41b058:	adc    DWORD PTR [ecx-0x733bc2bd],eax
  41b05e:	push   ss
  41b05f:	push   cs
  41b060:	jecxz  0x41b086
  41b062:	sbb    eax,0x574293dd
  41b067:	adc    esp,ebx
  41b069:	cmp    al,0xa1
  41b06b:	fcomi  st,st(2)
  41b06d:	xchg   ecx,eax
  41b06e:	nop
  41b06f:	xlat   BYTE PTR ds:[ebx]
  41b070:	push   ecx
  41b071:	arpl   WORD PTR [ebp-0x49],sp
  41b074:	adc    eax,0x409b8da4
  41b079:	inc    esp
  41b07a:	sub    dl,0x6c
  41b07d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b07e:	clc    
  41b07f:	xchg   edx,eax
  41b080:	std    
  41b081:	sub    ah,BYTE PTR [ecx-0x17]
  41b084:	out    dx,al
  41b085:	ja     0x41b0f7
  41b087:	gs dec ecx
  41b089:	lahf   
  41b08a:	adc    al,0x35
  41b08c:	imul   ebx,DWORD PTR ds:0x2a4c0f0d,0x2acf2ba7
  41b096:	xchg   esp,esi
  41b098:	addr16 out dx,eax
  41b09a:	mov    ch,bh
  41b09c:	xor    DWORD PTR ds:[eax+eax*8-0x5e65915d],esp
  41b0a4:	aam    0xcc
  41b0a6:	adc    edx,esp
  41b0a8:	and    eax,DWORD PTR [edx-0x6f]
  41b0ab:	(bad)  
  41b0ac:	xor    al,0x76
  41b0ae:	push   edx
  41b0af:	push   ebp
  41b0b0:	cmp    ah,BYTE PTR [ecx+0x1562437e]
  41b0b6:	inc    ebp
  41b0b7:	xor    eax,0x6af8d5cb
  41b0bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0bd:	fld    TBYTE PTR [esi+0x39]
  41b0c0:	jns    0x41b139
  41b0c2:	sbb    BYTE PTR [edi],dh
  41b0c4:	mov    edx,0x4567dec
  41b0c9:	push   ss
  41b0ca:	mov    edx,0xfb0188e4
  41b0cf:	call   0x27aa36d9
  41b0d4:	jl     0x41b084
  41b0d6:	jnp    0x41b0e6
  41b0d8:	outs   dx,DWORD PTR ds:[esi]
  41b0d9:	loop   0x41b0eb
  41b0db:	inc    ebp
  41b0dc:	jg     0x41b154
  41b0de:	jle    0x41b079
  41b0e0:	imul   esp,DWORD PTR [edi-0x7e],0xbe5d04b9
  41b0e7:	pushf  
  41b0e8:	pop    edx
  41b0e9:	add    BYTE PTR [ebp-0x34],ch
  41b0ec:	mov    ecx,0xaddec19a
  41b0f1:	xor    cl,bh
  41b0f3:	adc    ah,BYTE PTR [ecx+0x73]
  41b0f6:	and    edi,esp
  41b0f8:	lahf   
  41b0f9:	lock out dx,eax
  41b0fb:	inc    ecx
  41b0fc:	or     eax,0xb610aded
  41b101:	cs scas al,BYTE PTR es:[edi]
  41b103:	mov    ebp,0xb2474462
  41b108:	xchg   edi,eax
  41b109:	jnp    0x41b160
  41b10b:	fisttp WORD PTR ds:0xca0d3bbf
  41b111:	sbb    al,0x91
  41b113:	outs   dx,BYTE PTR ds:[esi]
  41b114:	dec    edx
  41b115:	dec    eax
  41b116:	punpcklwd mm0,DWORD PTR [edi]
  41b119:	inc    esp
  41b11a:	push   edi
  41b11b:	jge    0x41b0fb
  41b11d:	xchg   esi,eax
  41b11e:	xchg   ch,dh
  41b120:	fistp  DWORD PTR [eax+edx*8-0x2c]
  41b124:	jbe    0x41b162
  41b126:	mov    al,0x42
  41b128:	mov    ecx,0x5eb64d44
  41b12d:	cld    
  41b12e:	cli    
  41b12f:	pop    ecx
  41b130:	add    BYTE PTR [esi+0x2],bl
  41b133:	dec    ebx
  41b134:	cld    
  41b135:	loope  0x41b10d
  41b137:	or     DWORD PTR [esi+0x41af3f99],edi
  41b13d:	loop   0x41b11c
  41b13f:	test   eax,0xa327cf19
  41b144:	aas    
  41b145:	je     0x41b160
  41b147:	jp     0x41b18c
  41b149:	jmp    FWORD PTR [eax+0x6d3d0892]
  41b14f:	mov    ch,0x37
  41b151:	or     BYTE PTR [ecx],ch
  41b153:	mov    esi,0x9ebf9ff0
  41b158:	inc    edx
  41b159:	ret    
  41b15a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b15b:	dec    ebp
  41b15c:	ja     0x41b114
  41b15e:	pop    edi
  41b15f:	jl     0x41b185
  41b161:	sbb    DWORD PTR [edx+0x0],ecx
  41b164:	mov    ah,0xc1
  41b166:	and    BYTE PTR [ecx],al
  41b168:	(bad)  
  41b16a:	push   ecx
  41b16b:	retf   
  41b16c:	test   al,0x30
  41b16e:	sub    ah,BYTE PTR ds:0x8d210b39
  41b174:	sub    esp,0xffffff92
  41b177:	jmp    0x15b9:0x3c666013
  41b17e:	sub    DWORD PTR [edx+0x16981d1],ebx
  41b184:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b185:	push   esp
  41b186:	sub    cl,ch
  41b188:	xchg   esp,eax
  41b189:	nop
  41b18a:	call   0x4d89eedf
  41b18f:	pop    edi
  41b190:	mov    esi,0xa60edea6
  41b195:	add    eax,0x38b7167e
  41b19a:	je     0x41b1a7
  41b19c:	jne    0x41b121
  41b19e:	retf   0x9e3b
  41b1a1:	jmp    0xdf0d51dd
  41b1a6:	hlt    
  41b1a7:	push   esi
  41b1a8:	sub    ebp,eax
  41b1aa:	into   
  41b1ab:	out    0x3e,eax
  41b1ad:	cld    
  41b1ae:	xor    bl,BYTE PTR [eax-0x5484b04c]
  41b1b4:	lods   eax,DWORD PTR ds:[esi]
  41b1b5:	mov    ebx,0x8d28473c
  41b1ba:	pop    es
  41b1bb:	ror    ecx,1
  41b1bd:	leave  
  41b1be:	adc    eax,0x2f37fe9
  41b1c3:	mov    eax,ds:0x9d237461
  41b1c8:	sub    edi,DWORD PTR [edx+0x6b]
  41b1cb:	inc    edx
  41b1cc:	out    dx,al
  41b1cd:	cmc    
  41b1ce:	push   es
  41b1cf:	call   0x55ecd199
  41b1d4:	sbb    DWORD PTR [edi+0x55],esi
  41b1d7:	cli    
  41b1d8:	sub    dh,BYTE PTR [edx-0x440ecef9]
  41b1de:	leave  
  41b1df:	mov    dl,0xa2
  41b1e1:	or     BYTE PTR [ebx],dh
  41b1e3:	arpl   WORD PTR ds:0x8cd2b7b1,sp
  41b1e9:	rcr    DWORD PTR [eax+0x463025cb],1
  41b1ef:	daa    
  41b1f0:	clflush BYTE PTR [eax+0x3e3807c1]
  41b1f7:	bswap  edx
  41b1f9:	jl     0x41b22f
  41b1fb:	mov    dh,0x62
  41b1fd:	cwde   
  41b1fe:	mov    ds:0xd9a26a60,eax
  41b203:	jl     0x41b277
  41b205:	in     eax,dx
  41b206:	mov    DWORD PTR [edx+esi*1+0x62758d0e],ebx
  41b20d:	enter  0x1f98,0x4a
  41b211:	popf   
  41b212:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b213:	retf   
  41b214:	ret    0x6a65
  41b217:	jp     0x41b1a9
  41b219:	sbb    al,0xfe
  41b21b:	(bad)  
  41b21c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b21d:	cmp    esi,ecx
  41b21f:	loop   0x41b24b
  41b221:	add    esi,edx
  41b223:	pop    es
  41b224:	aam    0x8e
  41b226:	dec    ebp
  41b227:	int    0x17
  41b229:	xor    BYTE PTR [edx+ecx*2-0x18],dl
  41b22d:	mov    ch,0xb8
  41b22f:	stos   BYTE PTR es:[edi],al
  41b230:	pop    ds
  41b231:	add    esi,esi
  41b233:	push   edx
  41b234:	in     al,0xe4
  41b236:	pushf  
  41b237:	aam    0xa2
  41b239:	and    bl,cl
  41b23b:	mov    bl,BYTE PTR [edi]
  41b23d:	sbb    eax,0x3bc075b1
  41b242:	iret   
  41b243:	pop    esp
  41b244:	jns    0x41b226
  41b246:	adc    esi,DWORD PTR [edi+esi*1+0x6e8161c7]
  41b24d:	ds pop esp
  41b24f:	mov    ch,0xb8
  41b251:	xchg   DWORD PTR [ecx+ebx*4],ecx
  41b254:	pop    ebp
  41b255:	ins    BYTE PTR es:[edi],dx
  41b256:	adc    eax,0x49ebedaf
  41b25b:	mov    dl,BYTE PTR [ecx]
  41b25d:	mov    dl,0x62
  41b25f:	push   edi
  41b260:	mov    bh,BYTE PTR [eax+0x50]
  41b263:	pop    ds
  41b264:	stc    
  41b265:	sub    bh,BYTE PTR [ebx-0x24ffe64e]
  41b26b:	mov    ecx,0x148641fb
  41b270:	mov    ds:0x5a8cbf79,eax
  41b275:	iretw  
  41b277:	push   edi
  41b278:	repnz mov BYTE PTR [ebp+0x361f0351],cl
  41b27f:	sub    BYTE PTR [ebp-0x1c],bh
  41b282:	scas   eax,DWORD PTR es:[edi]
  41b283:	jle    0x41b2c1
  41b285:	jb     0x41b294
  41b287:	div    BYTE PTR [ecx-0x52]
  41b28a:	jle    0x41b29d
  41b28c:	fimul  DWORD PTR [esp+edx*1+0x6c2205b9]
  41b293:	cdq    
  41b294:	or     BYTE PTR [eax+0x24],dl
  41b297:	or     DWORD PTR [ecx+0x56],ebp
  41b29a:	or     bl,ch
  41b29c:	nop
  41b29d:	sti    
  41b29e:	jg     0x41b227
  41b2a0:	scas   al,BYTE PTR es:[edi]
  41b2a1:	sbb    esp,edx
  41b2a3:	ret    0x63f9
  41b2a6:	popf   
  41b2a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2a8:	mov    ds:0xa74402b0,al
  41b2ad:	jbe    0x41b2a4
  41b2af:	out    dx,eax
  41b2b0:	jne    0x41b28a
  41b2b2:	mov    eax,ds:0xaf9ee07c
  41b2b7:	cdq    
  41b2b8:	jae    0x41b249
  41b2ba:	push   ds
  41b2bb:	aas    
  41b2bc:	test   DWORD PTR [esi],ecx
  41b2be:	mov    al,ds:0xe15aeea4
  41b2c4:	es loop 0x41b2d8
  41b2c7:	mov    ebp,0x2741ca66
  41b2cc:	cmp    BYTE PTR [ecx+0x1e],ah
  41b2cf:	mov    bh,0x37
  41b2d1:	test   BYTE PTR [ebx+ebp*1+0x53b07930],ch
  41b2d8:	cmc    
  41b2d9:	sahf   
  41b2da:	lods   eax,DWORD PTR ds:[esi]
  41b2db:	push   esp
  41b2dc:	fld    QWORD PTR ds:0xa147f385
  41b2e2:	cs retf 0x15df
  41b2e6:	pop    ss
  41b2e7:	and    DWORD PTR [esi-0x6b],esi
  41b2ea:	(bad)  
  41b2eb:	dec    ebx
  41b2ec:	add    dh,BYTE PTR [esi-0x26]
  41b2ef:	mov    dh,0xda
  41b2f1:	push   ss
  41b2f2:	js     0x41b297
  41b2f4:	sbb    dh,0xfb
  41b2f7:	mov    ch,0x24
  41b2f9:	jmp    0x8fe9741c
  41b2fe:	mov    ch,0xc0
  41b300:	mov    WORD PTR [eax+0x116744b6],ds
  41b306:	aaa    
  41b307:	jge    0x41b368
  41b309:	mov    ch,0x23
  41b30b:	dec    eax
  41b30c:	mov    al,ds:0x2593377
  41b311:	neg    edi
  41b313:	fisub  DWORD PTR cs:[eax+0x3b]
  41b317:	sub    al,0xec
  41b319:	mov    cl,0x2f
  41b31b:	push   edi
  41b31c:	mov    eax,0xe8da2c4c
  41b321:	sub    eax,0x14583c33
  41b326:	pop    esi
  41b327:	test   al,0xc8
  41b329:	shl    bl,cl
  41b32b:	mov    ds:0x2403729c,eax
  41b330:	dec    ebp
  41b331:	lods   eax,DWORD PTR ds:[esi]
  41b332:	jg     0x41b324
  41b334:	push   es
  41b335:	clc    
  41b336:	cli    
  41b337:	sub    al,bl
  41b339:	mov    bl,0x62
  41b33b:	push   ds
  41b33c:	xor    al,0x9f
  41b33e:	mov    eax,es:0x68f327b
  41b344:	xor    BYTE PTR [eax],dl
  41b346:	call   0x4f6b:0x6848fbd9
  41b34d:	sub    ah,BYTE PTR [ebx]
  41b34f:	sub    BYTE PTR [edi+0x6d],0xc6
  41b353:	in     eax,0x34
  41b355:	pop    ebp
  41b356:	test   BYTE PTR [ebx],bl
  41b358:	ret    
  41b359:	mov    ebp,0xfd476af
  41b35e:	(bad)  
  41b35f:	jmp    0x9f91:0x2bebb5b8
  41b366:	mov    ebx,0xc92cd337
  41b36b:	xchg   ebx,eax
  41b36c:	mov    esi,ebp
  41b36e:	push   cs
  41b36f:	ins    DWORD PTR es:[edi],dx
  41b370:	dec    edx
  41b371:	retf   0xc609
  41b374:	dec    ebp
  41b375:	ins    DWORD PTR es:[edi],dx
  41b376:	ins    WORD PTR es:[edi],dx
  41b378:	jl     0x41b326
  41b37a:	sar    BYTE PTR [esi-0x10],0x7e
  41b37e:	jecxz  0x41b377
  41b380:	sar    DWORD PTR [edx],0x7c
  41b383:	clc    
  41b384:	sub    edi,DWORD PTR [ecx+0x36]
  41b387:	adc    al,0xc
  41b389:	jne    0x41b3bc
  41b38b:	mov    ch,0xb4
  41b38d:	mov    esi,0xde037826
  41b392:	imul   esp,DWORD PTR [edx-0x28926498],0x354aa361
  41b39c:	push   esi
  41b39d:	test   eax,0x32b67f9d
  41b3a2:	xor    dl,BYTE PTR [ebp-0x36]
  41b3a5:	sbb    BYTE PTR [esi-0x13b5d5ae],al
  41b3ab:	sub    ebx,DWORD PTR [eax]
  41b3ad:	rol    edx,1
  41b3af:	sub    ch,cl
  41b3b1:	mov    ebp,0x2d790191
  41b3b6:	ins    BYTE PTR es:[edi],dx
  41b3b7:	pop    ds
  41b3b8:	push   eax
  41b3b9:	adc    esi,esp
  41b3bb:	dec    eax
  41b3bc:	jnp    0x41b3b2
  41b3be:	dec    edx
  41b3bf:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41b3c1:	adc    BYTE PTR [ebx+0x6c610bf2],cl
  41b3c7:	bound  ecx,QWORD PTR [edi+0x4c]
  41b3ca:	add    DWORD PTR [edi],ebp
  41b3cc:	shr    DWORD PTR [edx],0x53
  41b3cf:	xchg   esp,eax
  41b3d0:	add    ebx,DWORD PTR ds:0xada4ba73
  41b3d6:	mov    bl,0x1b
  41b3d8:	or     BYTE PTR [esp+edx*2],dh
  41b3db:	xchg   esp,eax
  41b3dc:	retf   
  41b3dd:	shr    BYTE PTR [ecx],0x2c
  41b3e0:	into   
  41b3e1:	push   eax
  41b3e2:	jne    0x41b3d0
  41b3e4:	dec    eax
  41b3e5:	in     eax,0xc8
  41b3e7:	ja     0x41b452
  41b3e9:	icebp  
  41b3ea:	dec    ebx
  41b3eb:	cmp    edx,0x892495e3
  41b3f1:	inc    esi
  41b3f2:	icebp  
  41b3f3:	mov    ?,WORD PTR [ebx]
  41b3f5:	in     eax,0x8e
  41b3f7:	gs xchg esi,eax
  41b3f9:	add    al,0xe1
  41b3fb:	pop    edx
  41b3fc:	mov    eax,0x18bd4ec9
  41b401:	mov    DWORD PTR [eax-0x71],ebp
  41b404:	pop    esp
  41b405:	pop    esp
  41b406:	popa   
  41b407:	pop    eax
  41b408:	shl    DWORD PTR [edx-0x1ff17e28],0xc5
  41b40f:	or     DWORD PTR [eiz*4+0x53649447],edi
  41b416:	aam    0x3a
  41b418:	add    BYTE PTR ds:0xdc3431ea,ah
  41b41e:	inc    BYTE PTR [edi+0x412b8a8b]
  41b424:	or     esp,DWORD PTR [ecx]
  41b426:	mov    esp,0x4cd8bf14
  41b42b:	push   esi
  41b42c:	pop    es
  41b42d:	push   cs
  41b42e:	adc    ebp,DWORD PTR [edi+0x675e8b57]
  41b434:	xor    bl,cl
  41b436:	inc    bl
  41b438:	fwait
  41b439:	jb     0x41b43e
  41b43b:	cmp    BYTE PTR [ebx+esi*2+0x7ece7bc4],ch
  41b442:	(bad)  
  41b443:	xlat   BYTE PTR ds:[ebx]
  41b444:	xchg   ebx,eax
  41b445:	pop    ecx
  41b446:	mov    ch,0x1e
  41b448:	xchg   esp,eax
  41b449:	shl    BYTE PTR [ebx],cl
  41b44b:	adc    ah,ah
  41b44d:	and    edi,DWORD PTR [esi-0x18]
  41b450:	xor    eax,0x5f47b632
  41b455:	mov    DWORD PTR [edi-0x73178201],0x72524ea
  41b45f:	mov    dh,0x43
  41b461:	mov    WORD PTR [edi+0x3],ss
  41b464:	popf   
  41b465:	push   edx
  41b466:	inc    eax
  41b467:	push   ds
  41b468:	pusha  
  41b469:	fld    TBYTE PTR [esi]
  41b46b:	inc    edx
  41b46c:	xor    al,0x3e
  41b46e:	sbb    dh,BYTE PTR [esi+0x2e]
  41b471:	jbe    0x41b4bb
  41b473:	arpl   WORD PTR [edi+0x24],bp
  41b476:	clc    
  41b477:	jb     0x41b4ce
  41b479:	mov    dl,0x40
  41b47b:	(bad)  
  41b47c:	push   edx
  41b47d:	and    BYTE PTR [edx+0x18daa371],bh
  41b483:	mov    ebp,ecx
  41b485:	gs push 0xffffffc4
  41b488:	and    eax,0x9d0920ed
  41b48d:	aad    0xcf
  41b48f:	xchg   edx,eax
  41b490:	(bad)  
  41b491:	scas   al,BYTE PTR es:[edi]
  41b492:	or     DWORD PTR [eax+0x29],ecx
  41b495:	inc    eax
  41b496:	and    cl,ch
  41b498:	add    edi,DWORD PTR [ebp-0x14]
  41b49b:	enter  0x559d,0x37
  41b49f:	gs sar dl,1
  41b4a2:	stos   BYTE PTR es:[edi],al
  41b4a3:	clc    
  41b4a4:	pop    esi
  41b4a5:	xchg   ecx,eax
  41b4a6:	pop    edi
  41b4a7:	sub    esp,edi
  41b4a9:	jecxz  0x41b4a6
  41b4ab:	push   eax
  41b4ac:	scas   eax,DWORD PTR es:[edi]
  41b4ad:	xlat   BYTE PTR ds:[ebx]
  41b4ae:	sub    dl,bh
  41b4b0:	mov    dh,0xe6
  41b4b2:	xor    BYTE PTR [edx+ebp*8+0x3b],dl
  41b4b6:	inc    edi
  41b4b7:	mov    edi,0xd0b3efd3
  41b4bc:	xor    BYTE PTR [eax-0x34],al
  41b4bf:	sbb    ecx,DWORD PTR [eax+ebx*2-0x23]
  41b4c3:	sub    ebx,esi
  41b4c5:	dec    esp
  41b4c6:	popf   
  41b4c7:	mov    al,0xa8
  41b4c9:	paddd  mm4,QWORD PTR [ecx]
  41b4cc:	cdq    
  41b4cd:	mov    bl,0x83
  41b4cf:	xchg   edi,eax
  41b4d0:	xchg   esp,eax
  41b4d1:	adc    DWORD PTR [esp+ebx*4-0x12],esp
  41b4d5:	cmovns edx,DWORD PTR [edi+0x58]
  41b4d9:	jg     0x41b48a
  41b4db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4dc:	hlt    
  41b4dd:	and    al,0x4
  41b4df:	ret    
  41b4e0:	mov    edi,0x94b77ed6
  41b4e5:	add    DWORD PTR [ebx-0x62],0x19
  41b4e9:	and    eax,0x2bd34869
  41b4ee:	sub    edx,DWORD PTR [edx]
  41b4f0:	inc    esi
  41b4f1:	jnp    0x41b565
  41b4f3:	pop    ss
  41b4f4:	jmp    0x95b2:0xac8d13da
  41b4fb:	cmp    eax,0x8ed8c0d3
  41b500:	fwait
  41b501:	mov    bl,ah
  41b503:	std    
  41b504:	sar    ebp,cl
  41b506:	jle    0x41b57a
  41b508:	loopne 0x41b48c
  41b50a:	push   ss
  41b50b:	mov    bh,0x7c
  41b50d:	pop    ss
  41b50e:	dec    esp
  41b50f:	mov    cl,0x46
  41b511:	jno    0x41b4d2
  41b513:	ss jae 0x41b4cd
  41b516:	jns    0x41b582
  41b518:	std    
  41b519:	popa   
  41b51a:	pop    ecx
  41b51b:	jg     0x41b57b
  41b51d:	fwait
  41b51e:	xor    eax,0xe19b5eaf
  41b523:	xchg   esp,eax
  41b524:	mov    eax,ds:0x54ba409b
  41b529:	aam    0x72
  41b52b:	push   edx
  41b52c:	dec    ecx
  41b52d:	mov    ds:0x848dc02e,al
  41b532:	cli    
  41b533:	cmp    esi,ebx
  41b535:	xor    di,ax
  41b538:	mov    ch,0x64
  41b53a:	xor    eax,0x3be604cb
  41b53f:	jb     0x41b536
  41b541:	push   ebp
  41b542:	rcl    DWORD PTR [edi],cl
  41b544:	cmp    BYTE PTR [ebx],dh
  41b546:	mov    esp,0xcbcdeb46
  41b54b:	fdiv   QWORD PTR ds:0xb5ad55f6
  41b551:	arpl   WORD PTR [edi-0x29],sp
  41b554:	add    eax,DWORD PTR [edx-0x6c8eb705]
  41b55a:	jnp    0x41b567
  41b55c:	xchg   BYTE PTR [esi],ch
  41b55e:	in     al,0xcd
  41b560:	loop   0x41b5c3
  41b562:	cwde   
  41b563:	imul   ebx,DWORD PTR [ecx],0xffffff83
  41b566:	mov    dl,0x7e
  41b568:	lods   al,BYTE PTR ds:[esi]
  41b569:	dec    ebx
  41b56a:	in     eax,dx
  41b56b:	pop    edi
  41b56c:	retf   0x819a
  41b56f:	repz xor ah,BYTE PTR [eax-0x64]
  41b573:	test   BYTE PTR [ebp+0x5bb89017],dh
  41b579:	shl    DWORD PTR [ebp+0x5d1188f9],1
  41b57f:	cmp    BYTE PTR [esi+0x6e],dh
  41b582:	jmp    0x7b97dedd
  41b587:	cmp    DWORD PTR [ebp+0x46d3166d],esp
  41b58d:	fwait
  41b58e:	dec    edx
  41b58f:	ficomp WORD PTR [ecx+0x59]
  41b592:	and    DWORD PTR [edi+0x63378876],esi
  41b598:	loope  0x41b5b7
  41b59a:	aad    0x29
  41b59c:	adc    ch,cl
  41b59e:	mov    edx,DWORD PTR [ebx+0x16]
  41b5a1:	and    al,0xfd
  41b5a3:	fimul  WORD PTR [eax]
  41b5a5:	jne    0x41b56f
  41b5a7:	aam    0xc4
  41b5a9:	popf   
  41b5aa:	pop    es
  41b5ab:	pusha  
  41b5ac:	fstp   QWORD PTR [esi-0x4a]
  41b5af:	(bad)  
  41b5b0:	and    BYTE PTR [edx],dh
  41b5b2:	add    dh,BYTE PTR [ebp+0x4d]
  41b5b5:	lahf   
  41b5b6:	jbe    0x41b558
  41b5b8:	not    BYTE PTR [ecx+0x36]
  41b5bb:	addr16 mov eax,ds:0xad0c
  41b5bf:	xor    BYTE PTR [eax+ecx*2],0x49
  41b5c3:	mov    bh,0x4e
  41b5c5:	dec    ecx
  41b5c6:	jb     0x41b619
  41b5c8:	pushf  
  41b5c9:	loope  0x41b597
  41b5cb:	or     DWORD PTR [esi+0x7629ab45],edx
  41b5d1:	sub    al,0x8f
  41b5d3:	enter  0xfd83,0xac
  41b5d7:	shl    DWORD PTR [ecx],cl
  41b5d9:	scas   eax,DWORD PTR es:[edi]
  41b5da:	jecxz  0x41b5dc
  41b5dc:	call   FWORD PTR [edx+0x19]
  41b5df:	pusha  
  41b5e0:	repz imul ebx,esp,0xf92a680
  41b5e7:	dec    ch
  41b5e9:	std    
  41b5ea:	push   esi
  41b5eb:	(bad)  
  41b5ec:	call   0xe196:0xb8bcc4ff
  41b5f3:	loope  0x41b5bb
  41b5f5:	inc    esi
  41b5f6:	pop    ds
  41b5f7:	xor    eax,edi
  41b5f9:	jge    0x41b63b
  41b5fb:	hlt    
  41b5fc:	and    al,0x91
  41b5fe:	mov    bh,0x8b
  41b600:	test   al,0x83
  41b602:	cmp    eax,0xa50ff79f
  41b607:	(bad)  
  41b608:	mov    ecx,0x8e878c38
  41b60d:	push   ebp
  41b60e:	or     al,0x21
  41b610:	mov    edi,0x19b5487a
  41b615:	hlt    
  41b616:	(bad)  
  41b617:	rol    BYTE PTR [esi],1
  41b619:	xor    BYTE PTR [esp+eax*4],al
  41b61c:	dec    eax
  41b61d:	nop
  41b61e:	fcom   DWORD PTR [ecx]
  41b620:	push   edx
  41b621:	mov    eax,ds:0xfe2f1525
  41b626:	fsub   st,st(5)
  41b628:	mov    dl,BYTE PTR [ebx+0x5416b568]
  41b62e:	sub    BYTE PTR [eax+0x10a3d053],cl
  41b634:	or     al,BYTE PTR [edx-0x3]
  41b637:	iret   
  41b638:	in     al,dx
  41b639:	jecxz  0x41b6a0
  41b63b:	cld    
  41b63c:	cdq    
  41b63d:	pop    es
  41b63e:	fdiv   QWORD PTR [edi-0x16]
  41b641:	dec    esi
  41b642:	aaa    
  41b643:	(bad)
  41b647:	mov    dh,0x2a
  41b649:	mov    esp,0x8014b75d
  41b64e:	in     eax,0xb
  41b650:	push   es
  41b651:	aam    0x1b
  41b653:	adc    eax,0x3ae7992b
  41b658:	fcom   QWORD PTR [ebx-0x687c60b8]
  41b65e:	inc    esp
  41b65f:	xor    ebp,edx
  41b661:	or     dh,ch
  41b663:	pop    ds
  41b664:	dec    edx
  41b665:	out    0xda,al
  41b667:	cld    
  41b668:	mov    edi,0x9d239784
  41b66d:	inc    esp
  41b66e:	jl     0x41b600
  41b670:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b671:	xchg   BYTE PTR [esi+0x5],cl
  41b674:	push   ss
  41b675:	xchg   BYTE PTR [ebx-0x50],bh
  41b678:	jbe    0x41b6c8
  41b67a:	bound  esi,QWORD PTR [esp+esi*2+0x23]
  41b67e:	inc    ebx
  41b67f:	ja     0x41b690
  41b681:	jle    0x41b649
  41b683:	fsubr  QWORD PTR [ebx+0x1e97b09a]
  41b689:	pop    esp
  41b68a:	mov    bh,0x1c
  41b68c:	adc    eax,0xf083816f
  41b691:	cmp    DWORD PTR [eax+0x2a9a6537],ecx
  41b697:	repnz xor al,0x58
  41b69a:	in     eax,dx
  41b69b:	mov    al,0x22
  41b69d:	cwde   
  41b69e:	out    dx,al
  41b69f:	ret    0x1678
  41b6a2:	inc    ebx
  41b6a3:	retf   
  41b6a4:	sbb    DWORD PTR [eax+edi*4-0x7cb1be82],esi
  41b6ab:	pop    esi
  41b6ac:	jp     0x41b71a
  41b6ae:	mov    cl,0x19
  41b6b0:	mov    ebx,DWORD PTR [esi+0x4e165062]
  41b6b6:	lea    edi,[ecx-0x7519a7bd]
  41b6bc:	mov    esp,0xdc64a47e
  41b6c1:	sub    al,0xf4
  41b6c3:	pop    ds
  41b6c4:	xchg   ebp,eax
  41b6c5:	sbb    bl,BYTE PTR [ecx-0x5e]
  41b6c8:	hlt    
  41b6c9:	aad    0x74
  41b6cb:	sbb    al,0xbf
  41b6cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6ce:	or     al,0x7e
  41b6d0:	shr    DWORD PTR [ebx-0x54f4d7d9],0xcc
  41b6d7:	push   ebx
  41b6d8:	nop
  41b6d9:	inc    eax
  41b6da:	(bad)  
  41b6dc:	add    BYTE PTR [ecx-0x779b0f4],0x4a
  41b6e3:	test   DWORD PTR [esi-0x40db6748],ecx
  41b6e9:	int    0x2c
  41b6eb:	fsub   st(4),st
  41b6ed:	das    
  41b6ee:	loop   0x41b6ee
  41b6f0:	pop    eax
  41b6f1:	imul   ebx,DWORD PTR [edi-0x7],0x754286ba
  41b6f8:	pop    eax
  41b6f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6fa:	push   esp
  41b6fb:	inc    edi
  41b6fc:	and    DWORD PTR [edi+ecx*4],esi
  41b6ff:	xchg   ebp,eax
  41b700:	pop    ebp
  41b701:	(bad)  
  41b702:	addr16 pop eax
  41b704:	repz push edi
  41b706:	xor    ebx,esi
  41b708:	push   cs
  41b709:	fstp   DWORD PTR [esi]
  41b70b:	xlat   BYTE PTR ds:[ebx]
  41b70c:	clc    
  41b70d:	sbb    DWORD PTR [eax-0x57346877],edi
  41b713:	adc    DWORD PTR [edi],eax
  41b715:	inc    ebp
  41b716:	sub    DWORD PTR [ebx],esp
  41b718:	loop   0x41b703
  41b71a:	ss hlt 
  41b71c:	jae    0x41b6db
  41b71e:	mov    edx,0xd272b206
  41b723:	sub    eax,0x75484701
  41b728:	xor    edi,DWORD PTR [ecx-0x429c91cc]
  41b72e:	outs   dx,BYTE PTR ds:[esi]
  41b72f:	jmp    0x7d4f8e12
  41b734:	jg     0x41b6fb
  41b736:	sbb    DWORD PTR [esi-0x1409fda3],edi
  41b73c:	mov    BYTE PTR [ebx+0x2d],dh
  41b73f:	xor    al,0x37
  41b741:	xor    edi,DWORD PTR [ecx-0x2da59550]
  41b747:	addr16 push 0xffffffc1
  41b74a:	or     eax,0xab4b2a9c
  41b74f:	ds inc edi
  41b751:	mov    ds:0x6d6cc9de,al
  41b757:	mov    eax,0xd92d80e2
  41b75c:	call   0x17ba:0xf7e9838b
  41b763:	mov    al,ds:0xbc01da04
  41b768:	enter  0x3447,0xab
  41b76c:	adc    bl,BYTE PTR [eax-0x17a84379]
  41b772:	sbb    ah,bl
  41b774:	bound  edi,QWORD PTR [ecx+0x50]
  41b777:	inc    esi
  41b778:	clc    
  41b779:	push   ss
  41b77a:	push   ecx
  41b77b:	xor    eax,0x6328fb82
  41b780:	adc    DWORD PTR [ebp-0x62],esp
  41b783:	jg     0x41b749
  41b785:	mov    ch,0x8f
  41b787:	jmp    DWORD PTR [esi-0x72]
  41b78a:	sbb    esi,DWORD PTR [esi+0x33ba8c81]
  41b790:	inc    esi
  41b791:	jmp    0x33a0:0x2005ac26
  41b798:	pop    eax
  41b799:	ss dec ebp
  41b79b:	xchg   esi,eax
  41b79c:	xchg   edx,eax
  41b79d:	and    eax,0xc1fdb6c5
  41b7a2:	add    bl,dh
  41b7a4:	loopne 0x41b7fb
  41b7a6:	xor    BYTE PTR [ecx],al
  41b7a8:	add    eax,0xf82f8351
  41b7ad:	icebp  
  41b7ae:	retf   0x9b44
  41b7b1:	aas    
  41b7b2:	pop    edx
  41b7b3:	fld    QWORD PTR [ebp+ebx*2-0x418b024e]
  41b7ba:	int    0x74
  41b7bc:	xchg   esp,eax
  41b7bd:	jmp    DWORD PTR [esi-0x11]
  41b7c0:	sub    eax,0xc
  41b7c3:	dec    edx
  41b7c4:	mov    edi,0x6d97f3e7
  41b7c9:	scas   eax,DWORD PTR es:[edi]
  41b7ca:	cmp    DWORD PTR [ebx-0x2fea1e4d],ebp
  41b7d0:	or     dl,cl
  41b7d2:	mov    BYTE PTR [ecx*4-0xe300a39],ch
  41b7d9:	jmp    0xfda7:0x5826eec
  41b7e0:	or     ecx,DWORD PTR [ecx-0x73]
  41b7e3:	int    0x20
  41b7e5:	xor    eax,0xb3b78160
  41b7ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7eb:	inc    edi
  41b7ec:	jmp    0xba1ab416
  41b7f1:	xor    ch,dl
  41b7f3:	(bad)  
  41b7f4:	mov    eax,ds:0x4d9efb1c
  41b7f9:	mov    eax,0x8cffca7b
  41b7fe:	xchg   ebx,eax
  41b7ff:	push   eax
  41b800:	inc    esp
  41b801:	stc    
  41b802:	jmp    0x6191:0x2782d42
  41b809:	cmp    eax,0x8317ff78
  41b80e:	lea    esp,[ebx-0x34]
  41b811:	sub    cl,bl
  41b813:	inc    ebp
  41b814:	jmp    0x41b85c
  41b816:	jb     0x41b7f1
  41b818:	and    DWORD PTR [edi+0x7f],eax
  41b81b:	sbb    al,0x44
  41b81d:	icebp  
  41b81e:	cld    
  41b81f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b820:	jno    0x41b83a
  41b822:	push   edi
  41b823:	sub    ebx,DWORD PTR [ecx+0x1c0a195f]
  41b829:	dec    esi
  41b82a:	inc    edx
  41b82b:	and    esi,ecx
  41b82d:	jg     0x41b85e
  41b82f:	or     ecx,DWORD PTR [ebx]
  41b831:	push   es
  41b832:	call   0x94de7104
  41b837:	sti    
  41b838:	and    BYTE PTR [ebx+0x281afd48],0x7b
  41b83f:	add    ebx,0xffffffa7
  41b842:	dec    edi
  41b843:	jmp    FWORD PTR [edx+ebp*4]
  41b846:	sub    ecx,DWORD PTR [edi+0x45]
  41b849:	mov    al,es:0x865fc64c
  41b84f:	fnstsw WORD PTR [ebp-0x22fe040f]
  41b855:	aaa    
  41b856:	pop    eax
  41b857:	xor    eax,0x6856306f
  41b85c:	int3   
  41b85d:	(bad)  
  41b85e:	mov    ebp,0x31d9568c
  41b863:	or     ch,ch
  41b865:	or     eax,0x37ff33e6
  41b86a:	es xchg sp,ax
  41b86d:	pop    es
  41b86e:	shr    DWORD PTR [esi-0x6a7eeaa],0x9c
  41b875:	inc    ebp
  41b876:	call   0x85bc:0x74a003f7
  41b87d:	(bad)  
  41b87e:	push   esi
  41b87f:	rcl    DWORD PTR [ebx+0x34],cl
  41b882:	add    BYTE PTR [eax+ebx*8],bh
  41b885:	sbb    DWORD PTR [edi+0xaaf498e],eax
  41b88b:	outs   dx,DWORD PTR ds:[esi]
  41b88c:	std    
  41b88d:	jbe    0x41b83c
  41b88f:	push   ebp
  41b890:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b891:	pop    esi
  41b892:	sub    BYTE PTR [edx-0x22],ch
  41b895:	ss cs inc esp
  41b898:	(bad)  
  41b89c:	or     eax,0x62610be2
  41b8a1:	jnp    0x41b87f
  41b8a3:	fnstsw WORD PTR [eax-0x390b619c]
  41b8a9:	inc    esp
  41b8aa:	push   es
  41b8ab:	cmp    DWORD PTR [ebp-0x67405418],ebx
  41b8b1:	out    0x99,al
  41b8b3:	jp     0x41b8ef
  41b8b5:	ins    BYTE PTR es:[edi],dx
  41b8b6:	sub    BYTE PTR [ebp+0x41f1a0d3],bl
  41b8bc:	inc    ebx
  41b8bd:	ret    0xc5c
  41b8c0:	xchg   ebx,eax
  41b8c1:	out    dx,al
  41b8c2:	pop    ss
  41b8c3:	call   0xdf02960c
  41b8c8:	lea    ebx,[edi-0x2c1a0977]
  41b8ce:	cmp    bl,bl
  41b8d0:	sbb    ecx,DWORD PTR [esi-0x2f714c9c]
  41b8d6:	xchg   ebx,eax
  41b8d7:	xlat   BYTE PTR ds:[ebx]
  41b8d8:	icebp  
  41b8d9:	push   ecx
  41b8da:	popf   
  41b8db:	push   0xfffffffc
  41b8dd:	fistp  QWORD PTR [edx]
  41b8df:	add    BYTE PTR [edi],bl
  41b8e1:	popa   
  41b8e2:	dec    edi
  41b8e3:	mov    dl,0x39
  41b8e5:	ret    0xc744
  41b8e8:	lods   al,BYTE PTR ds:[esi]
  41b8e9:	jne    0x41b8d4
  41b8eb:	and    dl,BYTE PTR [edx-0x25]
  41b8ee:	rcl    BYTE PTR [edi],0xde
  41b8f1:	call   0xbaebfe9e
  41b8f6:	fwait
  41b8f7:	push   0x79
  41b8f9:	mov    ebp,0x71c618b1
  41b8fe:	cli    
  41b8ff:	pushfw 
  41b901:	jmp    0x41b909
  41b903:	cmp    DWORD PTR [edx+edx*2-0x62ca9d46],esi
  41b90a:	fisub  DWORD PTR [eax-0x66]
  41b90d:	ret    0xd038
  41b910:	pop    ecx
  41b911:	enter  0xffb6,0x4a
  41b915:	xchg   BYTE PTR [edx+edx*2-0x52],dh
  41b919:	dec    edx
  41b91a:	mov    ds:0xb2d371dd,al
  41b91f:	mov    ds:0xf3f3a558,eax
  41b924:	sub    eax,0x12deee1c
  41b929:	cmp    BYTE PTR [eax],cl
  41b92b:	xor    BYTE PTR [ecx],dl
  41b92d:	fxch   st(6)
  41b92f:	daa    
  41b930:	cmp    esi,ebp
  41b932:	dec    edi
  41b933:	adc    eax,eax
  41b935:	adc    eax,0xbc21d633
  41b93a:	rcl    DWORD PTR ds:0x8885ab8e,1
  41b940:	jp     0x41b994
  41b942:	inc    edx
  41b943:	sub    edx,DWORD PTR ds:0x50890bad
  41b949:	fcom   QWORD PTR [ebx+eax*8]
  41b94c:	or     DWORD PTR [edi+ebx*4+0x53],esi
  41b950:	icebp  
  41b951:	inc    edi
  41b952:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b953:	int3   
  41b954:	or     ebp,DWORD PTR [edx-0x6d]
  41b957:	xchg   DWORD PTR [edx+0xfbfbf76],esp
  41b95d:	xchg   ebp,eax
  41b95e:	aam    0xb3
  41b960:	push   ebp
  41b961:	gs xchg esp,eax
  41b963:	test   BYTE PTR [edi+0x40],dh
  41b966:	sub    eax,ecx
  41b968:	stos   BYTE PTR es:[edi],al
  41b969:	out    0x21,al
  41b96b:	and    DWORD PTR [ecx-0x6e],esi
  41b96e:	stos   BYTE PTR es:[edi],al
  41b96f:	jne    0x41b974
  41b971:	stos   BYTE PTR es:[edi],al
  41b972:	mov    fs,WORD PTR [ecx+esi*2+0x21]
  41b976:	and    al,0xb5
  41b978:	icebp  
  41b979:	mov    cl,0x90
  41b97b:	mov    cl,0x32
  41b97d:	jbe    0x41b9f8
  41b97f:	fldenv [ebp+ebx*2+0x41]
  41b983:	pop    ebx
  41b984:	outs   dx,BYTE PTR ds:[esi]
  41b985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b986:	(bad)  
  41b987:	mov    al,ds:0x4d02b6c5
  41b98c:	popf   
  41b98d:	xlat   BYTE PTR ds:[ebx]
  41b98e:	add    cl,BYTE PTR [ebx+ebx*1-0x2b]
  41b992:	push   ecx
  41b993:	daa    
  41b994:	push   edi
  41b995:	jmp    0x330f:0x7adf735
  41b99c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b99d:	(bad)  
  41b99e:	or     al,0x81
  41b9a0:	cmp    al,0x7e
  41b9a2:	add    ecx,ebx
  41b9a4:	pop    esp
  41b9a5:	je     0x41b9a1
  41b9a7:	cmp    BYTE PTR [edi],bl
  41b9a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9aa:	adc    bl,BYTE PTR [edi]
  41b9ac:	out    0x8f,eax
  41b9ae:	xchg   ebx,eax
  41b9af:	sub    BYTE PTR [edi],ch
  41b9b1:	sbb    edx,DWORD PTR [eax+eax*1+0x36a697e2]
  41b9b8:	jle    0x41b976
  41b9ba:	jno    0x41b995
  41b9bc:	addr16 jmp 0x2520:0xd32c81e3
  41b9c4:	fwait
  41b9c5:	aad    0x6f
  41b9c7:	sbb    DWORD PTR [ebx+0x8],edx
  41b9ca:	cmp    al,0x6f
  41b9cd:	add    al,0x8b
  41b9cf:	aaa    
  41b9d0:	jb     0x41b9d4
  41b9d2:	push   edx
  41b9d3:	xchg   esp,eax
  41b9d4:	(bad)  
  41b9d5:	dec    ebx
  41b9d6:	cdq    
  41b9d7:	push   esi
  41b9d8:	fs aad 0x7
  41b9db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9dc:	stos   DWORD PTR es:[edi],eax
  41b9dd:	or     eax,0xb4cf1be6
  41b9e2:	bound  eax,QWORD PTR [edi+0x6e58fb49]
  41b9e8:	aaa    
  41b9e9:	imul   ebx,DWORD PTR [ecx-0x5c],0xffffffb7
  41b9ed:	mov    ecx,0xe7517d0
  41b9f2:	inc    ebp
  41b9f3:	jbe    0x41ba20
  41b9f5:	sbb    ch,BYTE PTR [esp+edx*4]
  41b9f8:	pop    ds
  41b9f9:	pop    es
  41b9fa:	call   0xc081:0x1372a876
  41ba01:	lods   al,BYTE PTR ds:[esi]
  41ba02:	xlat   BYTE PTR ds:[ebx]
  41ba03:	sub    DWORD PTR [edx+0x4e4d5e54],eax
  41ba09:	sbb    edx,edi
  41ba0b:	sub    BYTE PTR [eax],ah
  41ba0d:	jg     0x41ba18
  41ba0f:	mov    WORD PTR [esi+0x39],?
  41ba12:	mov    eax,0x60abf261
  41ba17:	lods   eax,DWORD PTR ds:[esi]
  41ba18:	hlt    
  41ba19:	sbb    DWORD PTR [edi+0x6c08ce82],eax
  41ba1f:	and    al,0x67
  41ba21:	pop    ss
  41ba22:	std    
  41ba23:	ins    DWORD PTR es:[edi],dx
  41ba24:	fidivr DWORD PTR fs:[esi-0x339763db]
  41ba2b:	cmc    
  41ba2c:	sahf   
  41ba2d:	ret    
  41ba2e:	dec    edi
  41ba2f:	xor    DWORD PTR [ebx+0x14f6bf3f],eax
  41ba35:	dec    ebx
  41ba36:	pop    ebp
  41ba37:	inc    ecx
  41ba38:	lea    ebx,[eax]
  41ba3a:	pushf  
  41ba3b:	imul   edi,DWORD PTR [ecx+ebx*2-0x21],0x8b6efa06
  41ba43:	ret    0xdd8e
  41ba46:	cmp    eax,0x41d60caa
  41ba4b:	jne    0x41b9ee
  41ba4d:	xor    BYTE PTR [edx-0x472649bc],bh
  41ba53:	(bad)  
  41ba54:	push   esp
  41ba55:	sbb    eax,0x6353b96c
  41ba5a:	jge    0x41b9ee
  41ba5c:	mov    eax,0xabec81f
  41ba61:	lock jecxz 0x41bad3
  41ba64:	iret   
  41ba65:	cmp    al,0xb4
  41ba67:	dec    ecx
  41ba68:	call   0xc8b17b9d
  41ba6d:	pop    esp
  41ba6e:	shr    BYTE PTR [ebp+eax*1-0x7b],0x65
  41ba73:	mov    ah,0x56
  41ba75:	inc    edi
  41ba76:	jl     0x41ba55
  41ba78:	out    0xb3,eax
  41ba7a:	test   eax,0x1d4cf7b6
  41ba7f:	out    dx,eax
  41ba80:	mov    dl,0xf1
  41ba82:	mov    ds:0x70083fba,eax
  41ba87:	sbb    BYTE PTR [ebp-0x3b2304d3],bh
  41ba8d:	mov    WORD PTR [ecx-0x3b0200f3],es
  41ba93:	inc    esp
  41ba94:	xchg   ecx,eax
  41ba95:	or     dl,bh
  41ba97:	mul    DWORD PTR [ebx+0x5e7eefba]
  41ba9d:	mov    ebx,DWORD PTR [esi-0x2a]
  41baa0:	or     al,0x1
  41baa2:	sub    cl,ah
  41baa4:	fwait
  41baa5:	add    DWORD PTR [ebp-0x79],0x5b331ba7
  41baac:	mov    ah,0xe2
  41baae:	scas   al,BYTE PTR es:[edi]
  41baaf:	xchg   ecx,eax
  41bab0:	xor    dh,0x7c
  41bab3:	scas   eax,DWORD PTR es:[edi]
  41bab4:	pushf  
  41bab5:	retf   
  41bab6:	sahf   
  41bab7:	mov    BYTE PTR [edi+0x12265aba],cl
  41babd:	iret   
  41babe:	clc    
  41babf:	mov    edi,DWORD PTR [ebx-0x6a]
  41bac2:	adc    eax,0xfed9def3
  41bac7:	out    dx,al
  41bac8:	cmp    dh,BYTE PTR [edx+0x15ae2e95]
  41bace:	add    DWORD PTR [esi],esp
  41bad0:	daa    
  41bad1:	aaa    
  41bad2:	ret    0xaa52
  41bad5:	jmp    0x92d6cbf6
  41bada:	daa    
  41badb:	add    ebp,DWORD PTR [ebx]
  41badd:	xor    esi,0xfffffff2
  41bae0:	and    al,0x50
  41bae2:	jb     0x41bb35
  41bae4:	ss jb  0x41bae5
  41bae7:	ja     0x41ba6e
  41bae9:	adc    BYTE PTR [ebx-0x2d914083],0x5d
  41baf0:	sbb    eax,0xbcd604f3
  41baf5:	sub    eax,0x7ed10233
  41bafa:	fs push cs
  41bafc:	popf   
  41bafd:	inc    ebp
  41bafe:	jns    0x41baaf
  41bb00:	rcl    BYTE PTR [edx],0xd3
  41bb03:	lea    ecx,[edi]
  41bb05:	pop    ebx
  41bb06:	jbe    0x41baf8
  41bb08:	repnz test al,0xa
  41bb0b:	mov    WORD PTR [edx-0x6c],cs
  41bb0e:	ins    BYTE PTR es:[edi],dx
  41bb0f:	mov    dh,BYTE PTR [esi+ecx*1+0x105b49be]
  41bb16:	and    al,0x89
  41bb18:	push   edx
  41bb19:	call   0x676caa43
  41bb1e:	and    ecx,eax
  41bb20:	xchg   esi,eax
  41bb21:	push   0x2988cd72
  41bb26:	jo     0x41bb00
  41bb28:	xor    eax,0x15b5c5c2
  41bb2d:	xchg   esi,eax
  41bb2e:	call   0xbba6a103
  41bb33:	mov    ebp,0x1e38c015
  41bb38:	adc    bh,BYTE PTR [esi*1-0x65475b23]
  41bb3f:	jo     0x41bac6
  41bb41:	sub    DWORD PTR [ecx-0x7c16ef83],ebp
  41bb47:	jge    0x41bb96
  41bb49:	cld    
  41bb4a:	jle    0x41bb5f
  41bb4c:	inc    esp
  41bb4d:	test   BYTE PTR [ecx],bh
  41bb4f:	bound  ebx,QWORD PTR [ebp+0x478eb223]
  41bb55:	jae    0x41bb7a
  41bb57:	(bad)  
  41bb58:	sub    eax,0x14bb812b
  41bb5d:	jecxz  0x41bb7c
  41bb5f:	or     al,0x55
  41bb61:	fsub   DWORD PTR [ebp+0x4b414631]
  41bb67:	ror    BYTE PTR [edi],1
  41bb69:	add    DWORD PTR [esi+0x57fb91ce],esi
  41bb6f:	or     eax,0xc1a97b2e
  41bb74:	daa    
  41bb75:	mov    edi,0xbf4f1698
  41bb7a:	mov    eax,edi
  41bb7c:	repnz push es
  41bb7e:	push   ecx
  41bb7f:	mov    cl,0x68
  41bb81:	pop    esi
  41bb82:	pop    eax
  41bb83:	mov    ds:0xd93d5999,al
  41bb88:	scas   eax,DWORD PTR es:[edi]
  41bb89:	aad    0x7f
  41bb8b:	inc    edi
  41bb8c:	stc    
  41bb8d:	loopne 0x41bbea
  41bb8f:	xchg   esi,eax
  41bb90:	push   0xfffffff3
  41bb92:	and    al,0xeb
  41bb94:	xchg   BYTE PTR [ecx],cl
  41bb96:	inc    ebx
  41bb97:	jo     0x41bbba
  41bb99:	ret    
  41bb9a:	aad    0x16
  41bb9c:	push   ss
  41bb9d:	retf   
  41bb9e:	stos   BYTE PTR es:[edi],al
  41bb9f:	lods   eax,DWORD PTR ds:[esi]
  41bba0:	mov    cl,0x57
  41bba2:	fs mov esi,0x193b5b3d
  41bba8:	aaa    
  41bba9:	jg     0x41bbad
  41bbab:	bound  ecx,QWORD PTR [eax+0x2cd3675b]
  41bbb1:	test   eax,0x8cfb3fb9
  41bbb6:	cwde   
  41bbb7:	push   eax
  41bbb8:	ja     0x41bc03
  41bbba:	dec    ecx
  41bbbb:	(bad)  
  41bbbc:	xchg   ebp,eax
  41bbbd:	popa   
  41bbbe:	cdq    
  41bbbf:	jo     0x41bc17
  41bbc1:	out    0xe4,al
  41bbc3:	xchg   ebp,edi
  41bbc5:	inc    eax
  41bbc6:	lock mov ebx,0xe136666d
  41bbcc:	and    eax,0x6ca8551c
  41bbd1:	push   es
  41bbd2:	pop    edi
  41bbd3:	push   es
  41bbd4:	push   ebx
  41bbd5:	fucom  st(0)
  41bbd7:	pop    esi
  41bbd8:	mov    dh,BYTE PTR [ebx+0x3992db8c]
  41bbde:	sub    DWORD PTR [ebp+edi*4-0x38],ecx
  41bbe2:	or     cl,BYTE PTR [ebx+0xf]
  41bbe5:	ficom  WORD PTR [edx-0x318f47ca]
  41bbeb:	shr    DWORD PTR [edi-0x3b51d0e],0x58
  41bbf2:	jmp    0x5d407631
  41bbf7:	in     eax,dx
  41bbf8:	add    al,0x51
  41bbfa:	add    ecx,DWORD PTR [edx-0x7c]
  41bbfd:	sbb    edi,DWORD PTR [esi]
  41bbff:	fnsetpm(287 only) 
  41bc01:	pop    ebp
  41bc02:	push   ebx
  41bc03:	arpl   WORD PTR [esi],cx
  41bc05:	fild   QWORD PTR [ebx-0x5bcaff53]
  41bc0b:	adc    cl,BYTE PTR [edi-0x55328953]
  41bc11:	add    al,0x24
  41bc13:	adc    ah,dl
  41bc15:	push   esp
  41bc16:	jb     0x41bc80
  41bc18:	jmp    0x41bc1c
  41bc1a:	push   edx
  41bc1b:	call   0x1f7d:0xe9f84dd3
  41bc22:	cmp    eax,0x31a6a4aa
  41bc27:	popf   
  41bc28:	jo     0x41bc27
  41bc2a:	cwde   
  41bc2b:	scas   eax,DWORD PTR es:[edi]
  41bc2c:	mov    al,0x2b
  41bc2e:	jp     0x41bc7c
  41bc30:	push   eax
  41bc31:	dec    ebp
  41bc32:	out    0x52,eax
  41bc34:	inc    ebp
  41bc35:	lea    ebx,[edx-0x1db584ef]
  41bc3b:	push   eax
  41bc3c:	xchg   ebx,eax
  41bc3d:	mov    esi,0xe511c585
  41bc42:	lds    eax,FWORD PTR [edx]
  41bc44:	in     al,0x7d
  41bc46:	lahf   
  41bc47:	inc    edi
  41bc48:	mov    ecx,0xab56a514
  41bc4d:	arpl   bx,si
  41bc4f:	gs push ebp
  41bc51:	(bad)  
  41bc52:	(bad)  
  41bc54:	mov    BYTE PTR [eax+ecx*4-0x299dea04],dl
  41bc5b:	sub    BYTE PTR [eax+0x62],cl
  41bc5e:	mov    ecx,0x35867203
  41bc63:	dec    edi
  41bc64:	jmp    0x41bc55
  41bc66:	cs inc ebp
  41bc68:	test   BYTE PTR [edi-0x1476e0e9],bl
  41bc6e:	pop    ebx
  41bc6f:	test   DWORD PTR [edx+0x31102efd],0x3afcad71
  41bc79:	add    eax,0x774dde4a
  41bc7e:	shl    BYTE PTR ds:0x5cb2ad1,0x2a
  41bc85:	fist   WORD PTR [eax+eiz*2-0xdfa6d3e]
  41bc8c:	jo     0x41bccf
  41bc8e:	push   eax
  41bc8f:	sub    esi,ecx
  41bc91:	out    dx,al
  41bc92:	inc    esi
  41bc93:	icebp  
  41bc94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc95:	add    eax,0xc0df7d2b
  41bc9a:	icebp  
  41bc9b:	lahf   
  41bc9c:	daa    
  41bc9d:	jo     0x41bcf6
  41bc9f:	jbe    0x41bc44
  41bca1:	sub    DWORD PTR [edi-0x3554d9be],0xc103963c
  41bcab:	test   al,0xa5
  41bcad:	cdq    
  41bcae:	pop    eax
  41bcaf:	and    BYTE PTR [edx-0x517b6ac3],al
  41bcb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcb6:	jge    0x41bc92
  41bcb8:	adc    eax,0xa6f7e91b
  41bcbd:	xlat   BYTE PTR ds:[ebx]
  41bcbe:	jle    0x41bd13
  41bcc0:	rcl    BYTE PTR [edi-0x750427fd],0xc3
  41bcc7:	aaa    
  41bcc8:	or     DWORD PTR [eax+0x7b],edx
  41bccb:	mov    dh,0x32
  41bccd:	out    0x63,eax
  41bccf:	and    BYTE PTR gs:[ebx-0x14ebaad3],bh
  41bcd6:	adc    esi,0xffffffec
  41bcd9:	adc    eax,0xdb680975
  41bcde:	and    eax,0x565c5f8b
  41bce3:	pop    ds
  41bce4:	jp     0x41bcac
  41bce6:	out    0x95,eax
  41bce8:	sub    ebp,DWORD PTR [ebx-0x5f]
  41bceb:	iret   
  41bcec:	into   
  41bced:	fist   DWORD PTR [ecx+eiz*1]
  41bcf0:	sub    eax,0x2ef93654
  41bcf5:	push   edx
  41bcf6:	lods   al,BYTE PTR ds:[esi]
  41bcf7:	pop    es
  41bcf8:	sbb    DWORD PTR ds:0xe8ec53b3,eax
  41bcfe:	ja     0x41bcb0
  41bd00:	sub    ch,dl
  41bd02:	sub    BYTE PTR [ebp+ebp*1-0x4b434aa9],bh
  41bd09:	call   0xa6e0:0x10bdddfb
  41bd10:	jmp    0x41bca5
  41bd12:	jnp    0x41bd4a
  41bd14:	cmp    BYTE PTR [eax+0xb3a13b3],ch
  41bd1a:	gs sahf 
  41bd1c:	or     al,BYTE PTR [bx-0x5031]
  41bd21:	dec    ebx
  41bd22:	sub    al,0x55
  41bd24:	stc    
  41bd25:	imul   edi,DWORD PTR [ebp-0x19ba574],0xffffffc1
  41bd2c:	cmp    DWORD PTR [ecx+0x4118de56],ebp
  41bd32:	out    0x12,eax
  41bd34:	call   0x93ce492e
  41bd39:	sub    al,BYTE PTR [esi]
  41bd3b:	xor    DWORD PTR [ebx+0x65b1dedb],esi
  41bd41:	jmp    0xecb2:0x7874526d
  41bd48:	div    BYTE PTR [eax-0x36356aeb]
  41bd4e:	ud0    esi,esi
  41bd51:	and    eax,0x21867526
  41bd56:	es stos DWORD PTR es:[edi],eax
  41bd58:	push   cs
  41bd59:	ret    
  41bd5a:	dec    edx
  41bd5b:	rcl    DWORD PTR ds:0x6da4de17,1
  41bd61:	push   0x2730350
  41bd66:	in     eax,0x4e
  41bd68:	scas   eax,DWORD PTR es:[edi]
  41bd69:	pop    es
  41bd6a:	fadd   QWORD PTR [ebp+0x5ec04167]
  41bd70:	adc    al,ah
  41bd72:	out    dx,eax
  41bd73:	sar    DWORD PTR [ebp+0x72],cl
  41bd76:	jl     0x41bd0d
  41bd78:	daa    
  41bd79:	push   edx
  41bd7a:	rcr    BYTE PTR [edx],1
  41bd7c:	jbe    0x41bd0a
  41bd7e:	sub    BYTE PTR [edi-0x7582a05e],dl
  41bd84:	sbb    BYTE PTR [edx],cl
  41bd86:	mov    ch,0x34
  41bd88:	jg     0x41bdb3
  41bd8a:	mov    ecx,0x2bca2dfd
  41bd8f:	pop    ebx
  41bd90:	(bad)  
  41bd91:	scas   eax,DWORD PTR es:[edi]
  41bd92:	retf   
  41bd93:	jae    0x41bd65
  41bd95:	xor    bh,BYTE PTR [ebx+ebp*8+0x7275b7ef]
  41bd9c:	jnp    0x41bde1
  41bd9e:	pop    esp
  41bd9f:	sbb    DWORD PTR [esi+0xfabdc4b],ebp
  41bda5:	mov    ah,0xa
  41bda7:	std    
  41bda8:	stc    
  41bda9:	xor    ch,BYTE PTR [ebx]
  41bdab:	cmp    DWORD PTR [ebx],ebx
  41bdad:	repz cwde 
  41bdaf:	mov    ebp,0x601b1bb8
  41bdb4:	scas   al,BYTE PTR es:[edi]
  41bdb5:	jge    0x41bdec
  41bdb7:	push   ebx
  41bdb8:	jmp    0x41bdd4
  41bdba:	push   cs
  41bdbb:	call   0x3bddd758
  41bdc0:	nop
  41bdc1:	xor    ebx,DWORD PTR [esi]
  41bdc3:	dec    ecx
  41bdc4:	test   al,0xb5
  41bdc6:	xchg   edi,eax
  41bdc7:	(bad)  
  41bdc8:	outs   dx,DWORD PTR ds:[esi]
  41bdc9:	mov    bl,0x93
  41bdcb:	arpl   ax,si
  41bdcd:	and    al,0x1e
  41bdcf:	push   0xffffff9b
  41bdd1:	jae    0x41be00
  41bdd3:	cmc    
  41bdd4:	cmp    esp,DWORD PTR [ebx-0x2b]
  41bdd7:	icebp  
  41bdd8:	int    0x72
  41bdda:	sub    cl,ch
  41bddc:	and    al,0xd7
  41bdde:	sbb    esp,DWORD PTR [ebx+0x41]
  41bde1:	das    
  41bde2:	sbb    BYTE PTR ds:0x667f8e16,bl
  41bde8:	mov    cl,0x32
  41bdea:	retf   
  41bdeb:	inc    eax
  41bdec:	popf   
  41bded:	mov    edx,0xddeea16e
  41bdf2:	call   0x4d30:0xc60e50c2
  41bdf9:	adc    dh,BYTE PTR [ebx+0x41]
  41bdfc:	repnz imul esi,DWORD PTR [edi-0x6],0x19
  41be01:	cld    
  41be02:	add    DWORD PTR [edi-0x6b],0x57
  41be06:	aaa    
  41be07:	push   ds
  41be08:	das    
  41be09:	mov    ds:0x8f960dad,al
  41be0e:	mov    eax,0x716109d9
  41be13:	fsub   DWORD PTR [ebx]
  41be15:	in     eax,0x91
  41be17:	rcl    eax,1
  41be19:	pusha  
  41be1a:	inc    edx
  41be1b:	xchg   esp,eax
  41be1c:	mov    ebx,0xaf6fdb09
  41be21:	iret   
  41be22:	(bad)
  41be26:	stos   DWORD PTR es:[edi],eax
  41be27:	out    0x1e,eax
  41be29:	push   eax
  41be2a:	dec    ebp
  41be2b:	push   ebp
  41be2c:	cmp    ecx,edx
  41be2e:	mov    eax,0xe148c2d7
  41be33:	push   esi
  41be34:	jbe    0x41bdbc
  41be36:	adc    eax,0x55fcd52d
  41be3b:	inc    edi
  41be3c:	(bad)  
  41be3e:	inc    ebp
  41be3f:	pop    ecx
  41be40:	or     al,0xfc
  41be42:	mov    ds:0x45ca92e3,al
  41be47:	xchg   esp,eax
  41be48:	cmp    ebp,ebp
  41be4a:	out    0xd7,al
  41be4c:	loope  0x41be5c
  41be4e:	xor    edi,esi
  41be50:	push   ss
  41be51:	call   0x42979cea
  41be56:	out    0x6e,al
  41be58:	ret    
  41be59:	mov    cl,0xe0
  41be5b:	mov    WORD PTR [edi],ds
  41be5d:	pop    esp
  41be5e:	add    eax,0x6e504dec
  41be63:	lods   al,BYTE PTR ds:[esi]
  41be64:	add    DWORD PTR [edi-0x29],0x9a32a2cd
  41be6b:	and    dl,BYTE PTR fs:[edx]
  41be6e:	(bad)  
  41be6f:	mov    ebx,DWORD PTR [esi+0xab5ac0]
  41be75:	ret    
  41be76:	stc    
  41be77:	fidivr WORD PTR es:[eax-0x463033d8]
  41be7e:	fs xchg ebp,eax
  41be80:	jne    0x41beaf
  41be82:	xchg   edx,eax
  41be83:	outs   dx,DWORD PTR ds:[esi]
  41be84:	lock (bad) 
  41be87:	sbb    al,0xb7
  41be89:	fdiv   st(3),st
  41be8b:	loope  0x41be5e
  41be8d:	xchg   esi,eax
  41be8e:	push   ebx
  41be8f:	into   
  41be90:	inc    edi
  41be91:	push   ebp
  41be92:	jb     0x41bee0
  41be94:	popa   
  41be95:	jne    0x41bee8
  41be97:	cmp    al,0xe0
  41be99:	xchg   ebx,eax
  41be9a:	js     0x41bead
  41be9c:	mov    bh,0xb1
  41be9e:	pop    edi
  41be9f:	test   BYTE PTR [ecx-0x78],al
  41bea2:	sbb    al,0x55
  41bea4:	mov    al,ds:0x8be7c02f
  41bea9:	cmc    
  41beaa:	sbb    dh,BYTE PTR [edx+0x79b7f749]
  41beb0:	sar    BYTE PTR [edx+0x40],0xe1
  41beb4:	aam    0x69
  41beb6:	inc    esp
  41beb7:	add    eax,0xd55199db
  41bebc:	or     ebx,DWORD PTR [edi+0x4c5bd1bf]
  41bec2:	dec    ebx
  41bec3:	int3   
  41bec4:	mov    edx,0xb60776f7
  41bec9:	sub    eax,0x504452bd
  41bece:	addr16 neg eax
  41bed1:	inc    esi
  41bed2:	ja     0x41bf47
  41bed4:	das    
  41bed5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bed6:	cdq    
  41bed7:	fcomp  DWORD PTR [edi-0x3e]
  41beda:	enter  0xcbb1,0xe1
  41bede:	sub    bl,0x16
  41bee1:	scas   eax,DWORD PTR es:[edi]
  41bee2:	mov    DWORD PTR [ebx+0x60],0x9dfaabe
  41bee9:	iret   
  41beea:	lds    eax,FWORD PTR [ebx-0x6d6228ff]
  41bef0:	pop    ebx
  41bef1:	and    cl,cl
  41bef3:	mov    eax,0x1d8b4cd9
  41bef8:	jg     0x41be8d
  41befa:	xchg   ecx,ecx
  41befc:	mov    ds:0x89f9c39b,al
  41bf01:	nop
  41bf02:	mov    bh,BYTE PTR [ebp+0x61599cff]
  41bf08:	stos   BYTE PTR es:[edi],al
  41bf09:	je     0x41bf18
  41bf0b:	test   DWORD PTR [eax-0x5693e94b],ebx
  41bf11:	loopne 0x41bf37
  41bf13:	cmp    eax,0x12f8b56
  41bf18:	out    0x68,al
  41bf1a:	mov    ebx,0xecc6ada
  41bf1f:	jnp    0x41bf22
  41bf21:	test   DWORD PTR [ebx-0x286abe48],edx
  41bf27:	stos   BYTE PTR es:[edi],al
  41bf28:	inc    ebx
  41bf29:	fwait
  41bf2a:	(bad)  
  41bf2b:	jmp    FWORD PTR ds:[eax-0x17f9d03e]
  41bf32:	or     ebx,DWORD PTR [ecx]
  41bf34:	out    dx,eax
  41bf35:	test   ecx,0x74889f66
  41bf3b:	rcr    BYTE PTR [esi-0x46f63ced],1
  41bf41:	sbb    bh,BYTE PTR [ecx+eax*2]
  41bf44:	jbe    0x41bf87
  41bf46:	adc    BYTE PTR [eax],cl
  41bf48:	retf   0x7450
  41bf4b:	fadd   DWORD PTR [ebp+0x4b]
  41bf4e:	arpl   WORD PTR [esi+0x75],dx
  41bf51:	loope  0x41bfc4
  41bf53:	mov    esi,DWORD PTR [ebp+0x4ed9bb1c]
  41bf59:	cmp    al,ch
  41bf5b:	repz mov al,ah
  41bf5e:	xchg   BYTE PTR [eax-0x28],bl
  41bf61:	fistp  QWORD PTR [edi-0x3e44d111]
  41bf67:	test   BYTE PTR [esi+0x20],dl
  41bf6a:	push   ss
  41bf6b:	mov    al,0x3e
  41bf6d:	sti    
  41bf6e:	jle    0x41bfe9
  41bf70:	fsubr  DWORD PTR [esi+ebp*8+0x43d1fb14]
  41bf77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf78:	and    ch,dl
  41bf7a:	lods   eax,DWORD PTR ds:[esi]
  41bf7b:	cmc    
  41bf7c:	mov    eax,0x61b68d4c
  41bf81:	popa   
  41bf82:	stos   BYTE PTR es:[edi],al
  41bf83:	enter  0xf568,0xe0
  41bf87:	mov    al,BYTE PTR [esi+0x70]
  41bf8a:	mov    BYTE PTR [ecx-0x14],bh
  41bf8d:	pop    edx
  41bf8e:	lods   al,BYTE PTR ds:[esi]
  41bf8f:	out    0x2e,al
  41bf91:	mov    ch,0x21
  41bf93:	outs   dx,BYTE PTR ds:[esi]
  41bf94:	jo     0x41bf80
  41bf96:	adc    esi,ebx
  41bf98:	pop    esi
  41bf99:	xrelease xchg BYTE PTR [edx+0x1d],dl
  41bf9d:	call   0x385f:0xd00aa378
  41bfa4:	in     eax,dx
  41bfa5:	push   ss
  41bfa6:	sbb    dh,BYTE PTR [ecx]
  41bfa8:	dec    ecx
  41bfa9:	pop    eax
  41bfaa:	mov    edx,0x77818e2e
  41bfaf:	nop
  41bfb0:	dec    esi
  41bfb1:	fld    QWORD PTR [ecx-0x6]
  41bfb4:	jnp    0x41bf57
  41bfb6:	ins    BYTE PTR es:[edi],dx
  41bfb7:	sub    DWORD PTR [ebp-0x2d],esi
  41bfba:	mov    ?,WORD PTR [ebp-0x1a5de24]
  41bfc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfc1:	mov    dl,0x97
  41bfc3:	jb     0x41bfb5
  41bfc5:	push   cs
  41bfc6:	jle    0x41bf7c
  41bfc8:	iret   
  41bfc9:	cmp    edx,esp
  41bfcb:	mov    eax,0x4d6b0069
  41bfd0:	loopne 0x41bfe7
  41bfd2:	in     al,dx
  41bfd3:	jmp    0x41bfa2
  41bfd5:	rol    al,cl
  41bfd7:	fnstcw WORD PTR [ebx]
  41bfd9:	not    BYTE PTR [edi+0x54]
  41bfdc:	test   DWORD PTR [esi+0x25],esp
  41bfdf:	ret    0xbbfb
  41bfe2:	rol    DWORD PTR [ecx+ebx*2-0x2c],0xa2
  41bfe7:	out    dx,eax
  41bfe8:	mov    cl,0x45
  41bfea:	rol    BYTE PTR [ecx+0x6d],1
  41bfed:	outs   dx,DWORD PTR ds:[esi]
  41bfee:	push   es
  41bfef:	push   ecx
  41bff0:	ins    DWORD PTR es:[edi],dx
  41bff1:	int3   
  41bff2:	add    BYTE PTR [ebx-0x5],ch
  41bff5:	mov    bh,0x16
  41bff7:	scas   al,BYTE PTR es:[edi]
  41bff8:	mov    bh,0x20
  41bffa:	or     eax,0x9e49dd23
  41bfff:	adc    dh,BYTE PTR ds:0xa3fccb7
  41c005:	pop    es
  41c006:	push   ebp
  41c008:	aas    
  41c009:	daa    
  41c00a:	jbe    0x41bfc7
  41c00c:	nop
  41c00d:	jne    0x41c01a
  41c00f:	mov    BYTE PTR [ebx+0x2f],al
  41c012:	push   esi
  41c013:	int    0x3e
  41c015:	xchg   edx,eax
  41c016:	(bad)  
  41c017:	add    cl,BYTE PTR [ecx-0x6ff9954]
  41c01d:	mov    bh,0xa
  41c01f:	inc    esp
  41c020:	nop
  41c021:	aaa    
  41c022:	enter  0xb719,0xba
  41c026:	push   ebp
  41c027:	sbb    dh,bl
  41c029:	outs   dx,BYTE PTR ds:[esi]
  41c02a:	and    esp,DWORD PTR [edx-0x3b]
  41c02d:	mov    esp,0xc5fc4341
  41c032:	int3   
  41c033:	xor    bl,BYTE PTR [ebx+0x2029fe44]
  41c039:	test   BYTE PTR [esi-0x4136178d],bh
  41c03f:	cld    
  41c040:	imul   ebp,DWORD PTR [edx],0x40ba5311
  41c046:	adc    dh,bl
  41c048:	stos   BYTE PTR es:[edi],al
  41c049:	jnp    0x41c09b
  41c04b:	repnz clc 
  41c04d:	or     BYTE PTR [ebx],ch
  41c04f:	push   cs
  41c050:	jp     0x41c091
  41c052:	dec    ebx
  41c053:	xor    DWORD PTR [eax],ebx
  41c055:	xchg   edx,eax
  41c056:	jmp    0xb9a21ae1
  41c05b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c05c:	(bad)  
  41c05e:	push   esp
  41c05f:	test   al,0x6c
  41c061:	sbb    eax,0xe2b24c
  41c066:	mov    al,ch
  41c068:	sbb    ebp,edi
  41c06a:	and    DWORD PTR [eax],esp
  41c06c:	jg     0x41c075
  41c06e:	daa    
  41c06f:	leave  
  41c070:	call   DWORD PTR [ecx+0x23]
  41c073:	push   edx
  41c074:	sub    BYTE PTR [ebx],bh
  41c076:	xor    eax,0x6a47f44d
  41c07b:	daa    
  41c07c:	xchg   esi,eax
  41c07d:	pop    ss
  41c07e:	jnp    0x41c0ae
  41c080:	nop
  41c081:	jo     0x41c01e
  41c083:	xchg   BYTE PTR [ebp-0x699f4c5f],ah
  41c089:	mov    ebp,0xa9ccf22e
  41c08e:	pusha  
  41c08f:	cwde   
  41c090:	mov    ebp,0xeba4d563
  41c095:	(bad)  
  41c096:	cld    
  41c097:	push   ds
  41c098:	(bad)  
  41c099:	inc    ebp
  41c09a:	shr    bh,0xb4
  41c09d:	push   ecx
  41c09e:	outs   dx,DWORD PTR ds:[esi]
  41c09f:	inc    eax
  41c0a0:	pusha  
  41c0a1:	out    0x23,eax
  41c0a3:	cmp    DWORD PTR [ecx],0xa27931b2
  41c0a9:	push   esi
  41c0aa:	shl    BYTE PTR [eax],cl
  41c0ac:	into   
  41c0ad:	sti    
  41c0ae:	xor    eax,0x5a40cd67
  41c0b3:	popa   
  41c0b4:	outs   dx,BYTE PTR ds:[esi]
  41c0b5:	das    
  41c0b6:	out    dx,al
  41c0b7:	jno    0x41c053
  41c0b9:	imul   esi,DWORD PTR [ecx+ebx*2-0x43],0x1a059492
  41c0c1:	xor    al,0x4
  41c0c3:	cmp    ch,ah
  41c0c5:	or     al,0xc9
  41c0c7:	test   DWORD PTR [esi-0x73],ecx
  41c0ca:	outs   dx,DWORD PTR ds:[esi]
  41c0cb:	sbb    dl,BYTE PTR [edx]
  41c0cd:	bnd ret 
  41c0cf:	mov    DWORD PTR [ebx-0x50],ebp
  41c0d2:	rol    DWORD PTR [esi],0xbf
  41c0d5:	mov    ebx,0x9b62856e
  41c0da:	ret    
  41c0db:	mov    DWORD PTR [ebx],eax
  41c0dd:	ror    esi,0x1c
  41c0e0:	fwait
  41c0e1:	mov    WORD PTR [esi*1-0x70de0fd2],gs
  41c0e8:	(bad)  
  41c0ea:	pop    esi
  41c0eb:	inc    ecx
  41c0ec:	cli    
  41c0ed:	nop
  41c0ee:	mov    WORD PTR [ebp+0x51],fs
  41c0f1:	add    al,0xef
  41c0f3:	jbe    0x41c099
  41c0f5:	clc    
  41c0f6:	in     eax,0xad
  41c0f8:	push   edx
  41c0f9:	sbb    ebp,esp
  41c0fb:	sbb    cl,BYTE PTR [ebx-0x582235c]
  41c101:	push   ebp
  41c102:	push   edx
  41c103:	or     DWORD PTR [esi],ebp
  41c105:	ins    BYTE PTR es:[edi],dx
  41c106:	int    0x86
  41c108:	repnz idiv ch
  41c10b:	jb     0x41c0dc
  41c10d:	mov    ds:0x6825987a,eax
  41c112:	test   al,0xdd
  41c114:	inc    ecx
  41c115:	lahf   
  41c116:	out    dx,al
  41c117:	test   eax,0xda2c44f9
  41c11c:	jne    0x41c0b5
  41c11e:	call   0xc19f:0xad997b7b
  41c125:	dec    esi
  41c126:	(bad)  
  41c127:	mov    esp,0x80faef7d
  41c12c:	not    BYTE PTR [ebp+0x64a5ed18]
  41c132:	sub    al,0xa2
  41c134:	push   eax
  41c135:	dec    edi
  41c136:	ds xchg edx,eax
  41c138:	sub    ecx,edi
  41c13a:	dec    esi
  41c13b:	std    
  41c13c:	loopne 0x41c14c
  41c13e:	cli    
  41c13f:	arpl   bx,cx
  41c141:	imul   ebp,DWORD PTR [eax+0x6c735a44],0xfffffffd
  41c148:	stos   DWORD PTR es:[edi],eax
  41c149:	fcomp  DWORD PTR [ebx-0x7f1e2f8]
  41c14f:	in     eax,0xfa
  41c151:	push   eax
  41c152:	pop    edx
  41c153:	daa    
  41c154:	mov    edx,0x1b47011e
  41c159:	jge    0x41c1d4
  41c15b:	mov    esp,0x85597644
  41c160:	fsin   
  41c162:	fnsave [eax+0x7e]
  41c165:	bound  ecx,QWORD PTR [ebp-0x54]
  41c168:	(bad)  
  41c169:	cmp    edi,DWORD PTR [esi-0x65]
  41c16c:	dec    edx
  41c16d:	mov    ds:0xde3317b9,al
  41c172:	push   ebx
  41c173:	fs jg  0x41c19f
  41c176:	fistp  DWORD PTR [esi-0x7a9c7303]
  41c17c:	jmp    0x41c142
  41c17e:	xor    eax,0xeac19d6
  41c183:	add    eax,0x6bab81b7
  41c188:	sub    BYTE PTR [eax+edi*4+0x2b17a0af],dh
  41c18f:	das    
  41c190:	sub    DWORD PTR [edx+0x380f9a70],esp
  41c196:	add    ecx,DWORD PTR [eax-0x47aae287]
  41c19c:	out    dx,al
  41c19d:	aam    0xd2
  41c19f:	mov    bl,BYTE PTR [ecx+0x1754cd40]
  41c1a5:	mov    esi,0xf8e52616
  41c1aa:	add    DWORD PTR [eax+edx*8],ebp
  41c1ad:	bsr    edi,DWORD PTR [ebx+0x5c]
  41c1b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1b2:	fild   DWORD PTR [edi]
  41c1b4:	mov    DWORD PTR [edx],edi
  41c1b6:	xor    eax,DWORD PTR [ebp-0x15]
  41c1b9:	ds dec ecx
  41c1bb:	xor    dl,bh
  41c1bd:	cmp    dh,BYTE PTR [ecx+0x9]
  41c1c0:	(bad)  
  41c1c1:	sbb    esi,esp
  41c1c3:	jl     0x41c15d
  41c1c5:	(bad)  
  41c1c7:	ss pop ebp
  41c1c9:	mov    DWORD PTR [eax],ebp
  41c1cb:	fistp  QWORD PTR [ecx]
  41c1cd:	and    DWORD PTR gs:[esi],esp
  41c1d0:	adc    al,0x2c
  41c1d2:	lea    ecx,[ebx-0x4d1d4a8e]
  41c1d8:	test   BYTE PTR [edi+0x41],ch
  41c1db:	adc    DWORD PTR [ecx+ebp*2+0x2c],edx
  41c1df:	xor    al,BYTE PTR [esi-0x61f09f0c]
  41c1e5:	push   ebx
  41c1e6:	cmp    bh,BYTE PTR [eax]
  41c1e8:	test   al,0xae
  41c1ea:	in     eax,dx
  41c1eb:	pop    ecx
  41c1ec:	inc    edi
  41c1ed:	jns    0x41c203
  41c1ef:	unpcklps xmm4,XMMWORD PTR [eax]
  41c1f2:	add    ebx,DWORD PTR [ebp+0x53]
  41c1f5:	dec    esi
  41c1f6:	retf   
  41c1f7:	add    DWORD PTR [ecx+ebp*4-0x57],eax
  41c1fb:	test   al,0x21
  41c1fd:	rcl    DWORD PTR [edi],cl
  41c1ff:	not    DWORD PTR [ebp+0x7f]
  41c202:	jbe    0x41c186
  41c204:	mov    ds:0x31cf3cd2,eax
  41c209:	retf   
  41c20a:	push   edx
  41c20b:	test   BYTE PTR [esi-0x66],al
  41c20e:	aaa    
  41c20f:	pop    esi
  41c210:	stos   BYTE PTR es:[edi],al
  41c211:	dec    eax
  41c212:	loop   0x41c261
  41c214:	dec    ebp
  41c215:	fistp  QWORD PTR [ebx-0x50]
  41c218:	push   ecx
  41c219:	(bad)  [ecx+0x31]
  41c21c:	adc    eax,0xe4b4787a
  41c221:	mov    WORD PTR [edi-0x2fcccf7c],ds
  41c227:	pusha  
  41c228:	mov    bl,0x58
  41c22a:	jecxz  0x41c24d
  41c22c:	mov    ebp,0x3d11cb76
  41c231:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c232:	xor    al,0x5
  41c234:	fidivr DWORD PTR [eax]
  41c236:	sub    dl,BYTE PTR [ebx+eiz*4]
  41c239:	xor    DWORD PTR [edx-0x16bb57ed],edi
  41c23f:	(bad)  
  41c240:	mov    ebx,0x48443dc2
  41c245:	sub    DWORD PTR [ebp+ebx*2+0x5f],0xffffff98
  41c24a:	sub    cl,BYTE PTR [ebp-0x74]
  41c24d:	sub    al,0x69
  41c24f:	add    DWORD PTR [eax],ecx
  41c251:	test   eax,0x8b573991
  41c256:	add    eax,0xa8fce654
  41c25b:	sbb    dh,bh
  41c25d:	cmp    BYTE PTR [edx-0x75],dl
  41c260:	and    BYTE PTR [edx+0x19],ch
  41c263:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c264:	(bad)  
  41c265:	mov    edi,0x5a41d45b
  41c26a:	jns    0x41c296
  41c26c:	pop    edi
  41c26d:	in     al,dx
  41c26e:	ret    0xd6bc
  41c271:	shr    BYTE PTR ds:0x8d2a0741,1
  41c277:	outs   dx,DWORD PTR ds:[esi]
  41c278:	(bad)  
  41c279:	pushf  
  41c27a:	xchg   ebx,eax
  41c27b:	popf   
  41c27c:	retf   0x1445
  41c27f:	test   dh,bh
  41c281:	ins    BYTE PTR es:[edi],dx
  41c282:	ret    
  41c283:	push   edi
  41c284:	out    dx,al
  41c285:	imul   esp,DWORD PTR [ecx],0x1c083186
  41c28b:	dec    esi
  41c28c:	in     al,dx
  41c28d:	inc    esp
  41c28e:	jne    0x41c210
  41c290:	ins    BYTE PTR es:[edi],dx
  41c291:	iret   
  41c292:	mov    bl,0x1
  41c294:	lods   eax,DWORD PTR ds:[esi]
  41c295:	ja     0x41c2f6
  41c297:	int    0xb7
  41c299:	jl     0x41c2fb
  41c29b:	push   ecx
  41c29c:	mul    ebx
  41c29e:	shr    DWORD PTR [ebp+0x7e],cl
  41c2a1:	jb     0x41c300
  41c2a3:	neg    dl
  41c2a5:	mov    eax,ecx
  41c2a7:	out    0x95,eax
  41c2a9:	xor    DWORD PTR [edi-0x7b55a974],esp
  41c2af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2b0:	mov    ch,0x43
  41c2b2:	retf   
  41c2b3:	xor    DWORD PTR [ebx+ecx*2+0x5863d6fe],ebp
  41c2ba:	retf   0x6dfd
  41c2bd:	cmp    edi,esi
  41c2bf:	dec    ecx
  41c2c0:	int3   
  41c2c1:	jl     0x41c257
  41c2c3:	pop    edx
  41c2c4:	mov    esi,0xab8e520f
  41c2c9:	mov    eax,0xa97e859a
  41c2ce:	les    eax,FWORD PTR [esi-0x80]
  41c2d1:	fwait
  41c2d2:	sahf   
  41c2d3:	xor    eax,0xe5f2d1fc
  41c2d8:	mov    bl,0x21
  41c2da:	aas    
  41c2db:	popa   
  41c2dc:	jno    0x41c35c
  41c2de:	pusha  
  41c2df:	push   esi
  41c2e0:	popf   
  41c2e1:	xchg   esi,eax
  41c2e2:	sbb    DWORD PTR [eax],ebp
  41c2e4:	(bad)  
  41c2e5:	mov    eax,ds:0x5cbad64b
  41c2ea:	add    dl,BYTE PTR [edi]
  41c2ec:	fs adc eax,0xd447342a
  41c2f2:	sub    DWORD PTR [edx+0x4dff34c1],esi
  41c2f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2f9:	sub    al,0x44
  41c2fb:	mov    edx,0xd6a8938e
  41c300:	aas    
  41c301:	(bad)  
  41c302:	pop    ebx
  41c303:	push   ebp
  41c304:	pop    esi
  41c305:	cld    
  41c306:	adc    BYTE PTR [bp+di],dl
  41c309:	add    ebx,DWORD PTR [ebx-0x76]
  41c30c:	push   0xffffff9c
  41c30e:	jns    0x41c2bc
  41c310:	out    0x5a,eax
  41c312:	sub    eax,DWORD PTR [ebx+0x19b15921]
  41c318:	sub    dh,BYTE PTR [edx+edi*8]
  41c31b:	frstor [edi]
  41c31d:	in     eax,0x92
  41c31f:	fld    TBYTE PTR [edi]
  41c321:	cmp    BYTE PTR [eax+0x1e5ea74b],bl
  41c327:	popf   
  41c328:	jo     0x41c2ff
  41c32a:	stos   BYTE PTR es:[edi],al
  41c32b:	sbb    DWORD PTR [ebp+0x3c3246d3],0x44
  41c332:	pop    ebx
  41c333:	aad    0x59
  41c335:	ins    DWORD PTR es:[edi],dx
  41c336:	aad    0x1
  41c338:	sub    eax,0x9f0833f7
  41c33d:	add    DWORD PTR [ebx-0x29],ebp
  41c340:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c341:	(bad)  
  41c343:	adc    DWORD PTR [esi+0x20],0x13010239
  41c34a:	ds nop
  41c34c:	mov    dh,0x66
  41c34e:	jb     0x41c378
  41c350:	push   ecx
  41c351:	mov    ah,0x7d
  41c353:	aad    0x5d
  41c355:	(bad)  
  41c356:	popf   
  41c357:	shl    edi,1
  41c359:	div    DWORD PTR [edx+edx*1]
  41c35c:	ins    BYTE PTR es:[edi],dx
  41c35d:	dec    edi
  41c35e:	or     al,al
  41c360:	push   0xd8b09cca
  41c365:	test   BYTE PTR [edx+edx*8-0x3c336d99],dh
  41c36c:	loope  0x41c2f2
  41c36e:	in     al,dx
  41c36f:	ds aad 0x49
  41c372:	xor    al,0x67
  41c374:	and    edi,eax
  41c376:	cmp    BYTE PTR es:[edx-0x19],cl
  41c37a:	dec    eax
  41c37b:	push   eax
  41c37c:	add    eax,0xc4f84de0
  41c381:	or     BYTE PTR [edi+0x75824738],bh
  41c387:	data16 test al,0xf7
  41c38a:	adc    al,ch
  41c38c:	sbb    esi,ebp
  41c38e:	lds    edx,FWORD PTR [edx]
  41c390:	neg    BYTE PTR [eax+ecx*1-0x14]
  41c394:	pusha  
  41c395:	inc    ebp
  41c396:	push   edx
  41c397:	adc    BYTE PTR [esi],0x85
  41c39a:	lods   al,BYTE PTR ds:[esi]
  41c39b:	push   eax
  41c39c:	dec    edi
  41c39d:	ss dec ebx
  41c39f:	sub    eax,0xe603623b
  41c3a4:	add    edx,DWORD PTR [edx+0x18]
  41c3a7:	adc    eax,0xe706f8ae
  41c3ac:	loope  0x41c3d1
  41c3ae:	ins    BYTE PTR es:[edi],dx
  41c3af:	cmp    edx,DWORD PTR [esi+0x5aa253f5]
  41c3b5:	inc    edi
  41c3b6:	mov    ?,edi
  41c3b8:	clc    
  41c3b9:	fs pusha 
  41c3bb:	inc    esi
  41c3bc:	jne    0x41c35b
  41c3be:	xchg   edx,eax
  41c3bf:	iret   
  41c3c0:	fstp   DWORD PTR [edi+0x22b257f5]
  41c3c6:	push   cs
  41c3c7:	cmp    eax,0x93f5defc
  41c3cc:	lea    edx,[ebx+0x2ef2a1a9]
  41c3d2:	push   esp
  41c3d3:	and    edi,DWORD PTR [ecx-0x6a]
  41c3d6:	popa   
  41c3d7:	push   ss
  41c3d8:	or     BYTE PTR [ebp+0x50402135],0x4e
  41c3df:	repnz ins BYTE PTR es:[edi],dx
  41c3e1:	dec    esi
  41c3e2:	test   al,0x57
  41c3e4:	jae    0x41c39a
  41c3e6:	(bad)  
  41c3e7:	pop    esp
  41c3e8:	or     ebx,ecx
  41c3ea:	test   al,0xc9
  41c3ec:	pop    es
  41c3ed:	mov    DWORD PTR [ebx+0x60],esp
  41c3f0:	lods   al,BYTE PTR ds:[esi]
  41c3f1:	mul    dh
  41c3f3:	mov    eax,0x6b5020cb
  41c3f8:	lahf   
  41c3f9:	daa    
  41c3fa:	push   cs
  41c3fb:	out    0xdc,eax
  41c3fd:	jmp    0x41c43e
  41c3ff:	sbb    DWORD PTR [ebp-0x38],0x24d10d38
  41c406:	mov    edx,DWORD PTR [esi+ebp*1]
  41c409:	cdq    
  41c40a:	lods   eax,DWORD PTR ds:[esi]
  41c40b:	sbb    DWORD PTR [ebx+edx*1-0x7a],esi
  41c40f:	lock xchg DWORD PTR [ecx],eax
  41c412:	aam    0x50
  41c414:	mov    DWORD PTR ds:0x215d1ba9,edi
  41c41a:	jnp    0x41c3fb
  41c41c:	cmp    BYTE PTR [ebp+0x3923a6fb],ah
  41c422:	pop    ebx
  41c423:	add    bh,dh
  41c425:	xchg   ebp,eax
  41c426:	mov    dh,0xbd
  41c428:	fstp   DWORD PTR [esi]
  41c42a:	jl     0x41c3b7
  41c42c:	dec    ebp
  41c42d:	jno    0x41c448
  41c42f:	mov    cl,0x62
  41c431:	leave  
  41c432:	cli    
  41c433:	jno    0x41c405
  41c435:	inc    ecx
  41c436:	push   esp
  41c437:	jp     0x41c4ab
  41c439:	xchg   DWORD PTR [edi+ecx*8],eax
  41c43c:	bound  ebx,QWORD PTR [edi-0x1c]
  41c43f:	pop    esp
  41c440:	ins    BYTE PTR es:[edi],dx
  41c441:	jae    0x41c45b
  41c443:	ret    
  41c444:	inc    ecx
  41c445:	retf   0x51b0
  41c448:	idiv   BYTE PTR [ebx+0x6a]
  41c44b:	out    dx,al
  41c44c:	xchg   esp,eax
  41c44d:	das    
  41c44e:	bound  ebp,QWORD PTR [esi]
  41c450:	mov    esi,ecx
  41c452:	mov    ebp,0xf2e55bdc
  41c457:	in     eax,dx
  41c458:	nop
  41c459:	push   0x77
  41c45b:	dec    ecx
  41c45c:	gs pop ebx
  41c45e:	cwde   
  41c45f:	shr    BYTE PTR [ecx+eax*4+0x46],1
  41c463:	ret    0x629c
  41c466:	and    ebp,DWORD PTR [ecx-0x7f3ca055]
  41c46c:	aad    0xb7
  41c46e:	ret    
  41c46f:	mov    bh,0x17
  41c471:	push   ebx
  41c472:	stos   DWORD PTR es:[edi],eax
  41c473:	sub    DWORD PTR [ebp-0x7b6b981],0x3dff49b2
  41c47d:	and    al,0x73
  41c47f:	(bad)  
  41c480:	and    DWORD PTR [ecx-0x3f500dea],esi
  41c486:	ss in  eax,0xee
  41c489:	cli    
  41c48a:	lods   al,BYTE PTR ds:[esi]
  41c48b:	vpcomud xmm3,xmm7,XMMWORD PTR ss:[edx-0x3c],0x52
  41c493:	lahf   
  41c494:	cwde   
  41c495:	pop    edi
  41c496:	call   0xc358acee
  41c49b:	and    DWORD PTR [eax+0x6e],eax
  41c49e:	sbb    ebp,DWORD PTR [edi]
  41c4a0:	dec    BYTE PTR [ebx]
  41c4a2:	loop   0x41c4f2
  41c4a4:	push   0x64b156c9
  41c4a9:	out    0xe5,al
  41c4ab:	scas   al,BYTE PTR es:[edi]
  41c4ac:	data16 loop 0x41c472
  41c4af:	jnp    0x41c4c7
  41c4b1:	pop    es
  41c4b2:	adc    dh,BYTE PTR [eax+0x4af66d73]
  41c4b8:	lahf   
  41c4b9:	setle  BYTE PTR [eax+edx*4]
  41c4bd:	inc    ecx
  41c4be:	int3   
  41c4bf:	sub    eax,0x6ff037c4
  41c4c4:	and    BYTE PTR [esi-0x1c76929e],bl
  41c4ca:	adc    eax,0xc3619188
  41c4cf:	xchg   DWORD PTR [ebp-0x21],ecx
  41c4d2:	cmp    dh,dh
  41c4d4:	ja     0x41c49e
  41c4d6:	aam    0xc7
  41c4d8:	popf   
  41c4d9:	lods   al,BYTE PTR ds:[esi]
  41c4da:	iret   
  41c4db:	das    
  41c4dc:	jp     0x41c4dc
  41c4de:	cdq    
  41c4df:	inc    edi
  41c4e0:	push   0x283fe63c
  41c4e5:	add    DWORD PTR [edi-0x7f1c3744],edx
  41c4eb:	sbb    bh,cl
  41c4ed:	xchg   ebp,eax
  41c4ee:	(bad)  
  41c4ef:	(bad)  
  41c4f0:	aad    0xff
  41c4f2:	pop    ecx
  41c4f3:	jno    0x41c530
  41c4f5:	mov    ds:0x31b0d66f,eax
  41c4fa:	xchg   esp,eax
  41c4fb:	outs   dx,BYTE PTR ds:[esi]
  41c4fc:	call   0xf83cf7d7
  41c501:	mov    cl,0x77
  41c503:	lahf   
  41c504:	xor    DWORD PTR [ecx],eax
  41c506:	frstor [edi+0x23]
  41c509:	push   esp
  41c50a:	retf   
  41c50b:	icebp  
  41c50c:	test   al,0x36
  41c50e:	arpl   WORD PTR [ebp+0x1e],sp
  41c511:	push   esp
  41c513:	add    al,0x1f
  41c515:	xchg   edi,eax
  41c516:	mov    bh,0xb6
  41c518:	ins    DWORD PTR es:[edi],dx
  41c519:	es in  eax,dx
  41c51b:	xchg   edi,eax
  41c51c:	mov    ds:0x84ebaaa9,al
  41c521:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c522:	out    0x2c,eax
  41c524:	test   eax,0x1840e4c4
  41c529:	xchg   ebp,eax
  41c52a:	in     eax,0x6b
  41c52c:	push   ecx
  41c52d:	xchg   esi,eax
  41c52e:	sbb    DWORD PTR [edi-0x764583c1],ebp
  41c534:	scas   eax,DWORD PTR es:[edi]
  41c535:	rcl    BYTE PTR [ebp+0x49],cl
  41c538:	gs mov bh,0x8c
  41c53b:	cmp    DWORD PTR [esi],ebp
  41c53d:	or     eax,0xca1de9dd
  41c542:	pop    es
  41c543:	sub    cl,ch
  41c545:	jecxz  0x41c561
  41c547:	call   0xf579da3
  41c54c:	sub    al,BYTE PTR [ebx]
  41c54e:	movzx  ecx,BYTE PTR [eax-0x27]
  41c552:	mov    cl,0x27
  41c554:	(bad)  
  41c555:	xor    eax,0x7d3897ea
  41c55a:	cmp    BYTE PTR [edx-0x3d],dl
  41c55d:	inc    edi
  41c55e:	popa   
  41c55f:	js     0x41c5b2
  41c561:	mul    BYTE PTR [eax+0x5be64e53]
  41c567:	nop
  41c568:	and    ebx,esp
  41c56a:	sub    cl,BYTE PTR [eax+0x1567581]
  41c570:	stos   DWORD PTR es:[edi],eax
  41c571:	jmp    0x4661:0x67543949
  41c578:	sub    BYTE PTR [edx+0x575e4924],cl
  41c57e:	(bad)  
  41c57f:	jns    0x41c5f1
  41c581:	repz in al,dx
  41c583:	sbb    eax,DWORD PTR [edi-0x131d6389]
  41c589:	and    DWORD PTR [ebp-0x1],esi
  41c58c:	popf   
  41c58d:	(bad)  
  41c58e:	call   FWORD PTR [esi]
  41c590:	xchg   ebp,eax
  41c591:	sub    ecx,DWORD PTR [edx-0x39]
  41c594:	cmp    eax,0x480f607
  41c599:	push   es
  41c59a:	in     eax,dx
  41c59b:	cmp    al,0xe
  41c59d:	jno    0x41c54e
  41c59f:	std    
  41c5a0:	mov    ecx,0x18179a91
  41c5a5:	push   cs
  41c5a6:	lods   al,BYTE PTR ds:[esi]
  41c5a7:	mov    ds:0x4667789d,eax
  41c5ac:	(bad)  
  41c5ad:	les    edi,FWORD PTR [edx-0x387780e6]
  41c5b3:	(bad)  
  41c5b4:	sbb    dh,BYTE PTR [esi]
  41c5b6:	test   DWORD PTR [ebx],esp
  41c5b8:	add    edi,ecx
  41c5ba:	ret    
  41c5bb:	(bad)  
  41c5bc:	cli    
  41c5bd:	inc    edx
  41c5be:	xchg   esp,eax
  41c5bf:	lds    ebx,FWORD PTR [eax]
  41c5c1:	sbb    DWORD PTR [ebp-0x4f],ebp
  41c5c4:	stc    
  41c5c5:	adc    BYTE PTR [edi+ebx*2-0x37],0xfc
  41c5ca:	sbb    DWORD PTR [edx+0x53623007],esp
  41c5d0:	or     eax,0x5d318f43
  41c5d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5d6:	push   esi
  41c5d7:	add    al,0x91
  41c5d9:	(bad)  
  41c5da:	pop    ss
  41c5db:	test   eax,0x78932b76
  41c5e0:	push   0xe6c54be7
  41c5e5:	inc    ecx
  41c5e6:	call   0x2254:0xe344a3e0
  41c5ed:	fnstsw WORD PTR [edx-0x12025eef]
  41c5f3:	mov    edi,0xdb965bed
  41c5f8:	mov    ecx,esp
  41c5fa:	or     BYTE PTR [esi-0x34b506e1],ch
  41c600:	out    0x17,al
  41c602:	adc    DWORD PTR [eax],eax
  41c604:	add    eax,0x1363cd8a
  41c609:	sub    DWORD PTR [edi+0x53a64cc2],eax
  41c60f:	xor    BYTE PTR [ebx+ebx*1-0x10],bl
  41c613:	push   ebp
  41c614:	ss xchg ecx,eax
  41c616:	pop    ss
  41c617:	(bad)  
  41c618:	mov    ecx,0x54728fd2
  41c61d:	and    esp,DWORD PTR ds:0xd310f256
  41c623:	popa   
  41c624:	loope  0x41c64c
  41c626:	sub    eax,0x5ad70f8b
  41c62b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c62c:	lds    ebp,FWORD PTR [ecx+0x16f6995c]
  41c632:	fidivr DWORD PTR [ebx+ebx*1+0x3f]
  41c636:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c637:	call   0x4ec0:0xdd25b6f7
  41c63e:	pop    es
  41c63f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c640:	cmp    eax,0x8a8a37b7
  41c645:	xchg   BYTE PTR [eax+0x73],ah
  41c648:	adc    ecx,edx
  41c64a:	fwait
  41c64b:	(bad)
  41c64e:	fiadd  DWORD PTR [edi+0x4e]
  41c651:	push   es
  41c652:	vpmacsdql ymm6,ymm6,YMMWORD PTR [ecx+0x7c4e846d],ymm7
  41c65c:	(bad)  
  41c65d:	lahf   
  41c65e:	xchg   ebp,eax
  41c65f:	or     eax,0x631a346e
  41c664:	das    
  41c665:	sbb    edx,DWORD PTR [esi+ebx*1-0x28]
  41c669:	sti    
  41c66a:	mov    eax,ds:0xf8aafb87
  41c66f:	ficom  DWORD PTR [ecx]
  41c671:	inc    ecx
  41c672:	and    ch,BYTE PTR [edx-0x15beb781]
  41c678:	fisub  WORD PTR [ebp-0x291a2ce3]
  41c67e:	xchg   edi,eax
  41c67f:	push   es
  41c680:	or     DWORD PTR [edi-0x49],ecx
  41c683:	(bad)  
  41c684:	repnz cwde 
  41c686:	not    ah
  41c688:	lahf   
  41c689:	and    al,0x5a
  41c68b:	add    edx,DWORD PTR [eax+0x21e1d5d2]
  41c691:	outs   dx,BYTE PTR ds:[esi]
  41c692:	and    edx,DWORD PTR [edi]
  41c694:	cdq    
  41c695:	mov    ds,WORD PTR ds:0xfb70bfef
  41c69b:	call   0x6aad:0xc33c0714
  41c6a2:	xchg   BYTE PTR [eax],dh
  41c6a4:	enter  0x69c0,0x5e
  41c6a8:	enter  0x56ac,0xc2
  41c6ac:	inc    ecx
  41c6ad:	or     eax,0x46dd6b86
  41c6b2:	arpl   WORD PTR ds:0xf5cd5003,bx
  41c6b8:	xor    cl,BYTE PTR [edx+ecx*8-0x4169454]
  41c6bf:	mov    cl,0xe4
  41c6c1:	mov    bl,0x92
  41c6c3:	into   
  41c6c4:	xor    eax,esp
  41c6c6:	lock arpl WORD PTR fs:[ecx-0x6d58ba6a],sp
  41c6ce:	cld    
  41c6cf:	ss inc esp
  41c6d1:	inc    ebp
  41c6d2:	stos   BYTE PTR es:[edi],al
  41c6d3:	mov    ch,0xa5
  41c6d5:	nop
  41c6d6:	push   cs
  41c6d7:	addr16 dec esp
  41c6d9:	fcomp  QWORD PTR [edx+0x6a7576af]
  41c6df:	mov    ebx,DWORD PTR ds:[ebx]
  41c6e2:	push   ds
  41c6e3:	sbb    BYTE PTR [eax-0x1c],dl
  41c6e6:	call   0x941b:0x5258b5db
  41c6ed:	ja     0x41c71e
  41c6ef:	punpcklwd mm6,mm5
  41c6f2:	(bad)  
  41c6f3:	(bad)  [ebx-0x6c388055]
  41c6f9:	test   eax,ecx
  41c6fb:	cmp    esp,edi
  41c6fd:	jle    0x41c735
  41c6ff:	adc    dh,BYTE PTR [edi+0x3401b689]
  41c705:	dec    eax
  41c706:	test   DWORD PTR [ebx+eiz*2],ecx
  41c709:	push   edi
  41c70a:	ins    DWORD PTR es:[edi],dx
  41c70b:	and    DWORD PTR [ebp+0x7b],esp
  41c70e:	clc    
  41c70f:	rol    ecx,1
  41c711:	(bad)  
  41c712:	fstp   TBYTE PTR [esi-0x7f79794c]
  41c718:	mov    WORD PTR [esi+esi*8+0x291fb963],?
  41c71f:	mov    edx,0x9a2997f1
  41c724:	xor    DWORD PTR [edx-0x5d],ebp
  41c727:	aad    0x78
  41c729:	inc    eax
  41c72a:	xchg   DWORD PTR ds:0xd07e1a41,edx
  41c730:	sti    
  41c731:	imul   edi,esp,0x78
  41c734:	push   cs
  41c735:	cmp    ch,dl
  41c737:	mov    ebx,0xb3cc29e1
  41c73c:	stos   DWORD PTR es:[edi],eax
  41c73d:	stos   BYTE PTR es:[edi],al
  41c73e:	pop    ebx
  41c73f:	dec    edx
  41c740:	xchg   BYTE PTR [ecx-0xe],cl
  41c743:	push   esp
  41c744:	xor    DWORD PTR [esi-0x958375e],0xb15f52ff
  41c74e:	or     esi,esp
  41c750:	and    BYTE PTR [esi+0x180c97f2],cl
  41c756:	xchg   BYTE PTR [eax-0x724c1e44],dh
  41c75c:	fcmovu st,st(0)
  41c75e:	data16 or cl,cl
  41c761:	loope  0x41c7ae
  41c763:	repz inc ebp
  41c765:	sahf   
  41c766:	fs (bad) 
  41c769:	and    BYTE PTR [esi+ecx*2+0x5c],dl
  41c76d:	mov    ah,0x60
  41c76f:	scas   al,BYTE PTR es:[edi]
  41c770:	cmp    eax,0xd7af2e8e
  41c775:	jl     0x41c774
  41c777:	gs mov cl,0x22
  41c77a:	retf   
  41c77b:	fist   WORD PTR [edi+0x30]
  41c77e:	(bad)
  41c781:	inc    ebx
  41c782:	pop    ss
  41c783:	jge    0x41c716
  41c785:	pop    edx
  41c787:	cmp    ah,BYTE PTR [edi]
  41c789:	and    eax,DWORD PTR [edi-0x771b1b84]
  41c78f:	or     al,0x77
  41c791:	pop    eax
  41c792:	sbb    al,0x3d
  41c794:	out    0x5d,al
  41c796:	sub    al,BYTE PTR [eax-0x3b]
  41c799:	mov    eax,0x4883ae9e
  41c79e:	push   ebx
  41c79f:	mov    ecx,0xd1fbcc75
  41c7a4:	call   0x5841:0xdd8bfa2f
  41c7ab:	in     eax,0xa
  41c7ad:	and    DWORD PTR [edi],eax
  41c7af:	fisttp QWORD PTR [esi-0x59f9a73d]
  41c7b5:	test   ch,bh
  41c7b7:	jmp    0x41c759
  41c7b9:	pop    ss
  41c7ba:	or     BYTE PTR [edi],bl
  41c7bc:	cld    
  41c7bd:	bound  esi,QWORD PTR [edx+0x2bf43f7c]
  41c7c3:	pop    ds
  41c7c4:	xor    eax,0x54cdefeb
  41c7c9:	dec    edi
  41c7ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7cb:	push   eax
  41c7cc:	push   edi
  41c7cd:	cmp    dh,BYTE PTR [edx-0x61f7c544]
  41c7d3:	xor    ecx,ecx
  41c7d5:	and    bh,cl
  41c7d7:	mov    WORD PTR es:[ecx-0x34],?
  41c7db:	jne    0x41c80e
  41c7dd:	sbb    dl,BYTE PTR [edx+0x76]
  41c7e0:	ja     0x41c7e8
  41c7e2:	pop    esi
  41c7e3:	jl     0x41c81a
  41c7e5:	fwait
  41c7e6:	lods   al,BYTE PTR ds:[esi]
  41c7e7:	sub    esi,DWORD PTR [edx+0x370f1ac5]
  41c7ed:	jo     0x41c7e5
  41c7ef:	stos   BYTE PTR es:[edi],al
  41c7f0:	pushf  
  41c7f1:	stos   BYTE PTR es:[edi],al
  41c7f2:	inc    esi
  41c7f3:	mov    al,ds:0xf08027d6
  41c7f8:	push   ebp
  41c7f9:	push   esp
  41c7fa:	push   esi
  41c7fb:	add    dl,BYTE PTR [ecx+0x5200b2c9]
  41c801:	jmp    DWORD PTR [edi-0x418280ff]
  41c807:	imul   ebx,DWORD PTR [ebx],0x28
  41c80a:	push   0xb394435d
  41c80f:	dec    edx
  41c810:	mov    gs,ebx
  41c812:	cli    
  41c813:	mov    eax,ds:0x6608b959
  41c818:	sbb    ch,BYTE PTR [eax]
  41c81a:	sub    eax,0xbff48af7
  41c81f:	xchg   edi,eax
  41c820:	out    dx,eax
  41c821:	or     al,0x13
  41c823:	inc    esi
  41c824:	mov    dl,0x49
  41c826:	mov    ah,0x74
  41c828:	add    bh,0xb2
  41c82b:	add    al,BYTE PTR [ebx+ebx*2+0x5f546dbf]
  41c832:	jno    0x41c819
  41c834:	lods   eax,DWORD PTR ds:[esi]
  41c835:	or     al,0xd4
  41c837:	(bad)  
  41c839:	adc    al,dh
  41c83b:	(bad)  
  41c83c:	ja     0x41c7ca
  41c83e:	mov    esi,DWORD PTR [esi]
  41c840:	adc    al,0xf9
  41c842:	popf   
  41c843:	pushf  
  41c844:	out    0x88,al
  41c846:	inc    eax
  41c847:	loopne 0x41c8a6
  41c849:	int    0x26
  41c84b:	mov    ecx,0xfefdfdd
  41c850:	out    dx,al
  41c851:	fld    st(7)
  41c853:	pop    ebp
  41c854:	ret    
  41c855:	ret    0xee29
  41c858:	arpl   WORD PTR [esi+0x9],bx
  41c85b:	inc    edx
  41c85c:	xchg   ebp,eax
  41c85d:	call   0xde979aa7
  41c862:	push   es
  41c863:	jo     0x41c828
  41c865:	cld    
  41c866:	jnp    0x41c887
  41c868:	adc    eax,0xf7f7abe3
  41c86d:	test   eax,0x90a0c5e0
  41c872:	adc    DWORD PTR [edi-0x7b],esp
  41c875:	cli    
  41c876:	cli    
  41c877:	cdq    
  41c878:	dec    eax
  41c879:	mov    eax,cs
  41c87b:	mov    ds:0x88a084c2,al
  41c880:	and    DWORD PTR [esi],eax
  41c882:	popa   
  41c883:	stc    
  41c884:	add    dl,0xfb
  41c887:	jno    0x41c815
  41c889:	push   ss
  41c88a:	loop   0x41c88a
  41c88c:	call   0x17fe:0x9c3d697c
  41c893:	mov    eax,DWORD PTR [esi-0x25]
  41c896:	sbb    BYTE PTR [esi+0x1f],bh
  41c899:	pusha  
  41c89a:	push   ss
  41c89b:	arpl   WORD PTR [ebp+0x70],di
  41c89e:	pop    ss
  41c89f:	cmp    DWORD PTR [ecx],edi
  41c8a1:	mov    eax,ds:0xd4683679
  41c8a6:	fucom  st(1)
  41c8a8:	mov    eax,ds:0x7acc35bd
  41c8ad:	jns    0x41c88f
  41c8af:	push   cs
  41c8b0:	hlt    
  41c8b1:	cmp    eax,0x4bd3d87b
  41c8b6:	dec    edi
  41c8b7:	jo     0x41c886
  41c8b9:	push   esi
  41c8ba:	sub    WORD PTR [edx-0x63ce3397],ax
  41c8c1:	retf   0x6bfd
  41c8c4:	repz std 
  41c8c6:	xor    dh,bh
  41c8c8:	fild   DWORD PTR [edx-0x522e566d]
  41c8ce:	(bad)  
  41c8cf:	lock loop 0x41c8f8
  41c8d2:	sar    BYTE PTR ds:0xd220784d,cl
  41c8d8:	jnp    0x41c8f0
  41c8da:	cwde   
  41c8db:	push   es
  41c8dc:	(bad)  
  41c8dd:	cdq    
  41c8de:	mov    ebp,0x9768f380
  41c8e3:	adc    BYTE PTR [ebx+0x1c],0x52
  41c8e7:	jae    0x41c8f6
  41c8e9:	mov    bl,0x78
  41c8eb:	mov    edx,0xf8c4813c
  41c8f0:	jl     0x41c87d
  41c8f2:	aaa    
  41c8f3:	or     eax,0x3d1b8e8f
  41c8f8:	push   cs
  41c8f9:	xchg   esp,esp
  41c8fb:	ret    
  41c8fc:	dec    edi
  41c8fd:	xchg   ecx,eax
  41c8fe:	cmp    BYTE PTR [ecx+ebx*8],dl
  41c901:	mov    BYTE PTR [esi],dl
  41c903:	cmc    
  41c904:	sub    al,bl
  41c906:	lods   eax,DWORD PTR ds:[esi]
  41c907:	fimul  WORD PTR [eax-0x2ad02ceb]
  41c90d:	dec    eax
  41c90e:	xchg   esi,eax
  41c90f:	scas   eax,DWORD PTR es:[edi]
  41c910:	ja     0x41c8d9
  41c912:	popa   
  41c913:	cs iret 
  41c915:	mov    cl,0x5b
  41c917:	cwde   
  41c918:	mov    esi,0x725b7250
  41c91d:	add    bh,BYTE PTR [edx-0x79]
  41c920:	mov    cx,0xa30c
  41c924:	or     eax,0x33f5599a
  41c929:	lock lea ebx,[edx+0x26aeae41]
  41c930:	and    edi,DWORD PTR [ebx-0xb]
  41c933:	mov    esp,0xa463797a
  41c938:	fist   DWORD PTR [edi+0x10]
  41c93b:	sbb    ebp,DWORD PTR [eax-0x287ecd5b]
  41c941:	test   al,bh
  41c943:	mov    eax,DWORD PTR [edi-0x6837f5f3]
  41c949:	and    al,0xf2
  41c94b:	adc    DWORD PTR [eax+0x3e13102f],ebx
  41c951:	enter  0xd53,0x78
  41c955:	mov    ebx,0xf532b2a3
  41c95a:	sub    DWORD PTR [esi],edx
  41c95c:	loope  0x41c9d9
  41c95e:	scas   al,BYTE PTR es:[edi]
  41c95f:	or     ecx,DWORD PTR [ebx]
  41c961:	pop    es
  41c962:	push   eax
  41c963:	aaa    
  41c964:	push   cs
  41c965:	push   edi
  41c966:	arpl   WORD PTR [edx+0x55e0ab54],dx
  41c96c:	sbb    bh,BYTE PTR [ecx+0x114d87ba]
  41c972:	in     al,0xaf
  41c974:	je     0x41c99f
  41c976:	inc    edi
  41c977:	jmp    0x41c96e
  41c979:	lock add dl,ch
  41c97c:	push   ebx
  41c97d:	out    0x7e,eax
  41c97f:	mov    ebx,0xd971b392
  41c984:	ret    
  41c985:	hlt    
  41c986:	and    ebp,edx
  41c988:	mov    dl,0xd3
  41c98a:	dec    edx
  41c98b:	test   BYTE PTR ds:0xde6c876b,bl
  41c991:	(bad)  
  41c992:	xchg   ecx,eax
  41c993:	add    edi,edi
  41c995:	test   al,0x76
  41c997:	add    al,0xb6
  41c999:	jle    0x41c93e
  41c99b:	leave  
  41c99c:	mov    esi,0x2a824786
  41c9a1:	lea    ebp,[ecx]
  41c9a3:	mov    ah,0x56
  41c9a5:	xchg   ebx,eax
  41c9a6:	shl    ah,cl
  41c9a8:	or     edx,ebp
  41c9aa:	jmp    0x41c992
  41c9ac:	hlt    
  41c9ad:	in     eax,dx
  41c9ae:	das    
  41c9af:	rcl    DWORD PTR [si+0x6a],cl
  41c9b3:	pop    edi
  41c9b4:	pop    ebp
  41c9b5:	push   esi
  41c9b6:	div    DWORD PTR [edi+0x4f]
  41c9b9:	sti    
  41c9ba:	(bad)  
  41c9bc:	adc    DWORD PTR [esp+ebp*8+0x5aaebc51],ecx
  41c9c3:	mov    DWORD PTR [ecx],ebp
  41c9c5:	mov    eax,0x38d04b81
  41c9ca:	pusha  
  41c9cb:	push   ebx
  41c9cc:	clc    
  41c9cd:	push   ds
  41c9ce:	out    dx,eax
  41c9cf:	(bad)  
  41c9d0:	adc    ch,BYTE PTR [ecx]
  41c9d2:	cwde   
  41c9d3:	inc    esi
  41c9d4:	mov    esi,0xf199644c
  41c9d9:	pop    edx
  41c9da:	and    ch,BYTE PTR [ebx]
  41c9dc:	mov    ecx,DWORD PTR [eax+0x74382136]
  41c9e2:	adc    BYTE PTR [edx+edi*2+0x3b3e0b1b],dh
  41c9e9:	je     0x41c977
  41c9eb:	je     0x41ca18
  41c9ed:	jg     0x41ca2f
  41c9ef:	xchg   ebp,eax
  41c9f0:	bound  ebx,QWORD PTR [edx]
  41c9f2:	mov    ds:0x91d88d69,al
  41c9f7:	out    0x69,al
  41c9f9:	leave  
  41c9fa:	cmp    BYTE PTR [ecx-0x20],dh
  41c9fd:	outs   dx,BYTE PTR ds:[esi]
  41c9fe:	test   ah,cl
  41ca00:	daa    
  41ca01:	xchg   esp,eax
  41ca02:	popf   
  41ca03:	js     0x41ca41
  41ca05:	add    eax,0xb6ac8a47
  41ca0a:	xor    eax,DWORD PTR [edi]
  41ca0c:	dec    ecx
  41ca0d:	jmp    0x67160f7f
  41ca12:	push   edx
  41ca13:	fisub  DWORD PTR [ecx-0x35]
  41ca16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca17:	inc    edi
  41ca18:	outs   dx,DWORD PTR ds:[esi]
  41ca19:	inc    edx
  41ca1a:	fiadd  WORD PTR [ebx-0x2]
  41ca1d:	mov    eax,ds:0x93a2a336
  41ca22:	adc    eax,0x3c0f5095
  41ca27:	fsubr  st,st(2)
  41ca29:	pop    ecx
  41ca2a:	mov    eax,ds:0xa50d24fc
  41ca2f:	repnz pop ss
  41ca31:	xor    DWORD PTR [esi+0x693d26b5],ebx
  41ca37:	(bad)  
  41ca38:	cmp    DWORD PTR [edx+0xe750a8f],esp
  41ca3e:	ins    BYTE PTR es:[edi],dx
  41ca3f:	mov    bl,ah
  41ca41:	ja     0x41ca01
  41ca43:	and    eax,0xfd8538e6
  41ca48:	mov    edi,0x30f7e19a
  41ca4d:	xor    eax,0xc8b1e8e4
  41ca52:	add    eax,0x15e1f186
  41ca57:	sub    ah,BYTE PTR [eax+0x6d]
  41ca5a:	jmp    0x41cacb
  41ca5c:	add    eax,0x5f34f732
  41ca61:	jb     0x41cab3
  41ca63:	or     dl,BYTE PTR [edi+0x64358989]
  41ca69:	sub    DWORD PTR [ecx-0x4f37a7c1],eax
  41ca6f:	bound  edi,QWORD PTR [edi-0x73]
  41ca72:	lods   al,BYTE PTR ds:[esi]
  41ca73:	arpl   WORD PTR [esi-0x56402a6d],di
  41ca79:	mov    dh,0xca
  41ca7b:	dec    esp
  41ca7c:	sub    esp,DWORD PTR [ebx]
  41ca7e:	outs   dx,DWORD PTR ds:[esi]
  41ca7f:	repz cmp eax,0x486544e5
  41ca85:	sub    ecx,esi
  41ca87:	cdq    
  41ca88:	in     al,dx
  41ca89:	inc    eax
  41ca8a:	mov    ebp,es
  41ca8c:	and    bl,ch
  41ca8e:	jns    0x41ca51
  41ca90:	je     0x41ca7d
  41ca92:	data16 cmp al,0x4
  41ca95:	sbb    BYTE PTR [eax],0xe2
  41ca98:	lea    ebx,[ebx+0x32]
  41ca9b:	ja     0x41ca64
  41ca9d:	shr    DWORD PTR [edi-0x1f20e249],1
  41caa3:	mov    edx,0xc929286d
  41caa8:	mov    eax,ds:0x2b1bbe6
  41caad:	icebp  
  41caae:	mov    esi,0x35e488e4
  41cab3:	cmp    dh,BYTE PTR [edx-0xd6d2087]
  41cab9:	dec    ebx
  41caba:	rcl    DWORD PTR [eax+0x2291fa0e],cl
  41cac0:	loopne 0x41cb1d
  41cac2:	and    edi,esi
  41cac4:	arpl   WORD PTR [eax+0x9486efb],cx
  41caca:	mov    bl,0x28
  41cacc:	scas   eax,DWORD PTR es:[edi]
  41cacd:	jmp    0xd3f:0xb9bb0cc7
  41cad4:	mov    edi,0xc91ea
  41cad9:	mov    esp,0x69560047
  41cade:	std    
  41cadf:	inc    ebp
  41cae0:	js     0x41ca87
  41cae2:	into   
  41cae3:	add    esp,DWORD PTR [esi]
  41cae5:	std    
  41cae6:	sbb    ebx,DWORD PTR [eax+0x7d]
  41cae9:	mov    bl,BYTE PTR [ebx]
  41caeb:	bound  eax,QWORD PTR ds:0x614b56d3
  41caf1:	mov    ah,0x94
  41caf3:	aad    0xf7
  41caf5:	call   0xfa22:0x82e82012
  41cafc:	cmp    eax,0x62216904
  41cb01:	das    
  41cb02:	scas   eax,DWORD PTR es:[edi]
  41cb03:	stos   DWORD PTR es:[edi],eax
  41cb04:	and    DWORD PTR [ebp+0x3a3f5ccc],esi
  41cb0a:	xor    edx,DWORD PTR [ebx-0x103763e0]
  41cb10:	stc    
  41cb11:	in     al,dx
  41cb12:	test   DWORD PTR [esi-0x26ce4db8],esi
  41cb18:	fcom   DWORD PTR [ebx+0x1e]
  41cb1b:	(bad)  
  41cb1c:	pop    ss
  41cb1d:	imul   esi,ebp,0xfffffff9
  41cb20:	xchg   ebx,eax
  41cb21:	inc    ebp
  41cb22:	div    DWORD PTR [eax-0x48]
  41cb25:	into   
  41cb26:	sbb    bh,al
  41cb28:	mov    BYTE PTR [eax],bl
  41cb2a:	sbb    al,0x12
  41cb2c:	push   es
  41cb2d:	xchg   BYTE PTR [eax+0x3c5ce2b1],cl
  41cb33:	repz and BYTE PTR [ebp-0x1a],al
  41cb37:	inc    edx
  41cb38:	hlt    
  41cb39:	pushf  
  41cb3a:	aas    
  41cb3b:	cmp    al,0xd6
  41cb3d:	sar    DWORD PTR [edx],1
  41cb3f:	dec    esp
  41cb40:	shl    BYTE PTR [ebx+edi*1+0x10],0x86
  41cb45:	aam    0xe3
  41cb47:	mov    cl,0x37
  41cb49:	pop    esi
  41cb4a:	inc    edi
  41cb4b:	pop    es
  41cb4c:	fimul  WORD PTR [edi-0x31]
  41cb4f:	inc    ebp
  41cb50:	xchg   edi,eax
  41cb51:	(bad)  
  41cb52:	push   ecx
  41cb53:	sahf   
  41cb54:	(bad)  
  41cb55:	pop    ecx
  41cb56:	loopne 0x41caf2
  41cb58:	xchg   edi,eax
  41cb59:	cmp    al,0xe4
  41cb5b:	popf   
  41cb5c:	test   eax,0x400938bd
  41cb61:	push   edi
  41cb62:	fs xor eax,0xde95b4e9
  41cb68:	and    dl,BYTE PTR [esi-0x3b]
  41cb6b:	mov    ch,0x49
  41cb6d:	jno    0x41cb0f
  41cb6f:	inc    ecx
  41cb70:	pinsrw mm5,WORD PTR [edx],0x33
  41cb74:	xor    eax,0xfd8f9dde
  41cb79:	fld    st(3)
  41cb7b:	test   eax,0x327c0888
  41cb80:	add    BYTE PTR [edx+edx*1+0x6b5b1d92],ch
  41cb87:	or     al,0xae
  41cb89:	outs   dx,BYTE PTR ds:[esi]
  41cb8a:	pushf  
  41cb8b:	cmp    bh,BYTE PTR [ebx-0x23]
  41cb8e:	push   0xcff159ec
  41cb93:	jns    0x41cb59
  41cb95:	outs   dx,BYTE PTR ds:[esi]
  41cb96:	pop    edi
  41cb97:	sahf   
  41cb98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb99:	out    dx,al
  41cb9a:	pop    edx
  41cb9b:	sub    al,BYTE PTR [eax-0x48b46ad8]
  41cba1:	scas   eax,DWORD PTR es:[edi]
  41cba2:	gs push ss
  41cba4:	sbb    BYTE PTR [ecx+0x56],ah
  41cba7:	xor    al,0x65
  41cba9:	adc    al,0xc8
  41cbab:	adc    DWORD PTR [eax],ebx
  41cbad:	mov    ds:0x5ebbc718,eax
  41cbb2:	jb     0x41cbec
  41cbb4:	inc    esi
  41cbb5:	sbb    al,0xae
  41cbb7:	(bad)  
  41cbb8:	push   eax
  41cbb9:	ds xchg esp,eax
  41cbbb:	xor    al,0x89
  41cbbd:	mov    ebp,0x466083d5
  41cbc2:	dec    ebx
  41cbc3:	inc    eax
  41cbc4:	pop    ss
  41cbc5:	push   ds
  41cbc6:	retf   
  41cbc7:	subps  xmm4,XMMWORD PTR [edi-0x463e4b86]
  41cbce:	test   al,0x3a
  41cbd0:	dec    eax
  41cbd1:	sbb    ebp,DWORD PTR [ebp+0x20b2d2df]
  41cbd7:	jbe    0x41cba0
  41cbd9:	loop   0x41cb5e
  41cbdb:	xor    DWORD PTR ds:0x70d82310,esp
  41cbe1:	mul    BYTE PTR [edx+0x165dac71]
  41cbe7:	ret    0x876
  41cbea:	fld    TBYTE PTR [eax-0x34]
  41cbed:	mov    ah,0x32
  41cbef:	lods   al,BYTE PTR ds:[esi]
  41cbf0:	retf   0x1167
  41cbf3:	pop    ebp
  41cbf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbf5:	into   
  41cbf6:	push   esp
  41cbf7:	mov    BYTE PTR [edi-0x4],ch
  41cbfa:	dec    ecx
  41cbfb:	xor    eax,0x3276602a
  41cc00:	iret   
  41cc01:	dec    edx
  41cc02:	pop    ebx
  41cc03:	fs cmp eax,0xbb113bdd
  41cc09:	aaa    
  41cc0a:	mov    WORD PTR [eax-0x3801d154],cs
  41cc10:	jns    0x41cc0a
  41cc12:	fwait
  41cc13:	xchg   eax,ecx
  41cc15:	inc    eax
  41cc16:	mov    esp,0x4c5c6921
  41cc1b:	(bad)  
  41cc1d:	outs   dx,BYTE PTR ds:[esi]
  41cc1e:	jmp    0x6d7d60a7
  41cc23:	xchg   edx,eax
  41cc24:	cld    
  41cc25:	mov    edx,0x39d5391
  41cc2a:	in     al,0xec
  41cc2c:	ja     0x41cc6d
  41cc2e:	xor    al,0xbe
  41cc30:	sti    
  41cc31:	jnp    0x41cc84
  41cc33:	std    
  41cc34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc35:	and    eax,DWORD PTR [edi+0x1b]
  41cc38:	dec    edi
  41cc39:	ss sbb eax,0xb59e0a7d
  41cc3f:	pop    esi
  41cc40:	sub    BYTE PTR [esi-0x42],al
  41cc43:	pop    ebx
  41cc44:	push   esi
  41cc45:	sbb    al,0xcd
  41cc47:	outs   dx,BYTE PTR ds:[esi]
  41cc48:	mov    edx,gs
  41cc4a:	loope  0x41cc6a
  41cc4c:	popf   
  41cc4d:	push   ebx
  41cc4e:	sbb    al,0x8e
  41cc50:	mov    WORD PTR [eax+0x275fa44e],?
  41cc56:	repnz ds out 0x9b,eax
  41cc5a:	pusha  
  41cc5b:	cmp    DWORD PTR [eax+0x65585e9a],0x18cb2511
  41cc65:	pop    edi
  41cc66:	mov    ds:0xc16acd8b,al
  41cc6b:	fnstsw WORD PTR [esi-0x3]
  41cc6e:	test   bh,al
  41cc70:	mov    ebx,0x2592f5c1
  41cc75:	js     0x41cc38
  41cc77:	std    
  41cc78:	push   ds
  41cc79:	or     DWORD PTR [edi+0x1b4270e2],0x42
  41cc80:	cmp    BYTE PTR [ebx],ch
  41cc82:	adc    al,0x4
  41cc84:	sbb    edx,DWORD PTR [edi+0x1e]
  41cc87:	mov    eax,0x3e295c97
  41cc8c:	aaa    
  41cc8d:	mov    ds:0xd002f293,eax
  41cc92:	jg     0x41cc45
  41cc94:	std    
  41cc95:	sti    
  41cc96:	(bad)  
  41cc97:	aad    0xd6
  41cc99:	cmc    
  41cc9a:	not    BYTE PTR [edx-0x2c]
  41cc9d:	push   esp
  41cc9e:	in     eax,dx
  41cc9f:	mov    ah,0xe5
  41cca1:	xchg   edx,eax
  41cca2:	inc    ecx
  41cca3:	push   cs
  41cca4:	fadd   QWORD PTR [ecx+0x7a52a7b9]
  41ccaa:	mov    edi,0x92f1a4bd
  41ccaf:	mov    ds:0xd0339b97,eax
  41ccb4:	cwde   
  41ccb5:	les    ebx,FWORD PTR [edi-0x893c35f]
  41ccbb:	jno    0x41cccd
  41ccbd:	cmp    BYTE PTR [ebx-0x44],bh
  41ccc0:	fsub   QWORD PTR ds:0x68881585
  41ccc6:	sti    
  41ccc7:	fidiv  WORD PTR [ecx]
  41ccc9:	outs   dx,BYTE PTR ds:[esi]
  41ccca:	jo     0x41cc7b
  41cccc:	push   0xffffff8b
  41ccce:	shr    DWORD PTR [eax-0x73],0xc2
  41ccd2:	out    dx,eax
  41ccd3:	xchg   esi,eax
  41ccd4:	xor    ah,bl
  41ccd6:	in     al,dx
  41ccd7:	lock ficomp WORD PTR [ebp+ecx*4-0x4a9d9905]
  41ccdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cce0:	dec    ebx
  41cce1:	pop    ss
  41cce2:	dec    esi
  41cce3:	int    0xd0
  41cce5:	sub    ebp,DWORD PTR [eax-0x21]
  41cce8:	or     al,0x15
  41ccea:	push   ss
  41cceb:	sub    eax,0xc8afb439
  41ccf0:	and    DWORD PTR [esi],eax
  41ccf2:	push   0x73
  41ccf4:	push   ds
  41ccf5:	push   0x59
  41ccf7:	aaa    
  41ccf8:	fdiv   DWORD PTR [eax]
  41ccfa:	jl     0x41cd62
  41ccfc:	or     eax,0x6626657d
  41cd01:	cmp    eax,0x778bf85
  41cd06:	test   DWORD PTR [esi],ebp
  41cd08:	mov    ds:0x76425af1,al
  41cd0d:	pop    eax
  41cd0e:	sahf   
  41cd0f:	aam    0xf5
  41cd11:	mov    edi,0x824a8a4b
  41cd16:	mov    edx,0xe675f440
  41cd1b:	call   0x6920:0x596e6663
  41cd22:	and    BYTE PTR [esp-0x7a9765b8],cl
  41cd29:	pushf  
  41cd2a:	(bad)  
  41cd2b:	xlat   BYTE PTR ds:[ebx]
  41cd2c:	and    dl,BYTE PTR [edx]
  41cd2e:	(bad)  [ecx+eiz*2-0x5b59ecea]
  41cd35:	data16 adc al,BYTE PTR [edi-0x47f4fd01]
  41cd3c:	xor    dl,BYTE PTR [eax+0x28]
  41cd3f:	fld    DWORD PTR [ebp+0x5e2c5c31]
  41cd45:	loopne 0x41cd61
  41cd47:	hlt    
  41cd48:	inc    ecx
  41cd49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd4a:	xor    BYTE PTR [ebp+0x79a56a2c],0x78
  41cd51:	aas    
  41cd52:	std    
  41cd53:	and    eax,ebp
  41cd55:	push   0x2
  41cd57:	mov    ah,BYTE PTR [edx+edi*1+0x6b]
  41cd5b:	sbb    eax,0xcdb4a1fc
  41cd60:	jb     0x41cd60
  41cd62:	sub    eax,0x6dac06bf
  41cd67:	les    esi,FWORD PTR [edx]
  41cd69:	inc    ecx
  41cd6a:	xchg   ebx,eax
  41cd6b:	fstp   TBYTE PTR [ebx]
  41cd6d:	push   0x846dfdfa
  41cd72:	sti    
  41cd73:	and    DWORD PTR [ebx+0x3a],ebp
  41cd76:	(bad)  
  41cd77:	icebp  
  41cd78:	mov    ah,BYTE PTR [esi-0x4a]
  41cd7b:	or     ebp,DWORD PTR ds:0x902dc1f2
  41cd81:	icebp  
  41cd82:	push   ecx
  41cd83:	fmul   QWORD PTR ds:0x2f44da10
  41cd89:	fcmovnbe st,st(6)
  41cd8b:	ss ins BYTE PTR es:[edi],dx
  41cd8d:	xor    edx,DWORD PTR [ecx+0x41e2bddd]
  41cd93:	sti    
  41cd94:	mov    ds:0x12009a20,al
  41cd99:	or     DWORD PTR [ecx-0x48c93baf],0x44
  41cda0:	push   edi
  41cda1:	sti    
  41cda2:	pop    edx
  41cda3:	(bad)  
  41cda5:	into   
  41cda6:	es fcmovb st,st(7)
  41cda9:	scas   al,BYTE PTR es:[edi]
  41cdaa:	push   eax
  41cdab:	mov    edi,0x4031a49
  41cdb0:	fs icebp 
  41cdb2:	scas   al,BYTE PTR es:[edi]
  41cdb3:	jp     0x41cd9a
  41cdb5:	es push ebx
  41cdb7:	pop    eax
  41cdb8:	jg     0x41ce13
  41cdba:	add    dh,bl
  41cdbc:	jmp    FWORD PTR [ecx]
  41cdbe:	fist   WORD PTR [esi-0x69]
  41cdc1:	popfw  
  41cdc3:	xor    ch,BYTE PTR [edi]
  41cdc5:	stos   BYTE PTR es:[edi],al
  41cdc6:	jmp    0x41cd60
  41cdc8:	add    BYTE PTR [esi+ebp*1+0x5766e2be],cl
  41cdcf:	jg     0x41ce42
  41cdd1:	punpckhdq mm7,QWORD PTR [ebx]
  41cdd4:	mov    esi,0xe89d54c6
  41cdd9:	xor    BYTE PTR [ecx+edi*8+0x62],ah
  41cddd:	and    DWORD PTR [ebp+edi*1-0x32],edx
  41cde1:	repz dec ecx
  41cde3:	or     esp,0xffffffde
  41cde6:	sbb    DWORD PTR [eax+eiz*1-0x1eb61270],ebx
  41cded:	sub    al,0x3e
  41cdef:	dec    DWORD PTR [esi]
  41cdf1:	jb     0x41cdeb
  41cdf3:	xchg   BYTE PTR [eax-0x81cb30b],bl
  41cdf9:	mov    dl,0xce
  41cdfb:	add    eax,0x9b8429c1
  41ce00:	dec    DWORD PTR [edi+0x4]
  41ce03:	(bad)  
  41ce04:	adc    bh,BYTE PTR [edi]
  41ce06:	popf   
  41ce07:	cmc    
  41ce08:	fwait
  41ce09:	xor    ah,ch
  41ce0b:	jle    0x41ce35
  41ce0d:	stos   DWORD PTR es:[edi],eax
  41ce0e:	dec    esi
  41ce0f:	push   0x44e2e98
  41ce14:	loope  0x41cd9b
  41ce16:	ds cmp al,0xc7
  41ce19:	fwait
  41ce1a:	(bad)  
  41ce1b:	js     0x41ce48
  41ce1d:	sub    esp,DWORD PTR [ebx+0xa8b698f]
  41ce23:	aas    
  41ce24:	add    dh,BYTE PTR [edx+ebp*8]
  41ce27:	push   ds
  41ce28:	dec    ebx
  41ce29:	dec    ecx
  41ce2a:	sub    BYTE PTR [edi-0x20d100c2],al
  41ce30:	fiadd  DWORD PTR [ecx]
  41ce32:	retf   
  41ce33:	scas   eax,DWORD PTR es:[edi]
  41ce34:	je     0x41ce89
  41ce36:	mov    bl,0xa8
  41ce38:	pop    ebx
  41ce39:	imul   eax,DWORD PTR [edx],0xc666b07d
  41ce3f:	popf   
  41ce40:	sub    dl,al
  41ce42:	ins    DWORD PTR es:[edi],dx
  41ce43:	add    BYTE PTR [esi+0x36],dl
  41ce46:	or     dl,BYTE PTR [ebp+0x3f0ca277]
  41ce4c:	jmp    0x41ce0e
  41ce4e:	data16 cli 
  41ce50:	adc    DWORD PTR [eax+0xd],0x6ad240bb
  41ce57:	pop    ebp
  41ce58:	or     eax,0x60bb1658
  41ce5d:	sbb    BYTE PTR [edx-0x531378f0],0x45
  41ce64:	sbb    BYTE PTR [eax],bl
  41ce66:	arpl   WORD PTR [edx-0x34f95c83],dx
  41ce6c:	sub    ah,bh
  41ce6e:	jo     0x41ce80
  41ce70:	xchg   BYTE PTR [eax],bl
  41ce72:	xchg   edx,eax
  41ce73:	add    al,0xd6
  41ce75:	daa    
  41ce76:	jmp    0x41ce49
  41ce78:	jno    0x41ce32
  41ce7a:	cmp    eax,0x270d3eb6
  41ce7f:	sti    
  41ce80:	add    eax,0x8dddf8da
  41ce85:	adc    eax,0x26d83504
  41ce8a:	out    0xd9,al
  41ce8c:	mov    bl,0x5b
  41ce8e:	aam    0x15
  41ce90:	cld    
  41ce91:	cmp    esi,esp
  41ce93:	lods   al,BYTE PTR ds:[esi]
  41ce94:	jmp    0x41ce85
  41ce96:	lds    esp,FWORD PTR ds:0xddd2cc4
  41ce9c:	fwait
  41ce9d:	or     eax,0x941ca2bf
  41cea2:	sub    al,BYTE PTR [edi+0x6acc0a2]
  41cea8:	mov    BYTE PTR [ecx+0x79],dh
  41ceab:	xchg   DWORD PTR ds:0x6b7e6dd6,ebp
  41ceb1:	icebp  
  41ceb2:	pop    eax
  41ceb3:	retf   0xb42a
  41ceb6:	mov    ebp,0x563966a5
  41cebb:	jo     0x41cef8
  41cebd:	cmp    bh,BYTE PTR [edx+0x7a]
  41cec0:	and    cl,BYTE PTR [eax]
  41cec2:	lahf   
  41cec3:	fmul   QWORD PTR [ebp-0x5d7d1544]
  41cec9:	jbe    0x41cf15
  41cecb:	or     al,0x5c
  41cecd:	add    BYTE PTR [ecx],bh
  41cecf:	xchg   edx,eax
  41ced0:	lods   al,BYTE PTR ds:[esi]
  41ced1:	sub    DWORD PTR [edi],esp
  41ced3:	and    eax,0x628b06ca
  41ced8:	sub    ecx,0xffffffd2
  41cedb:	daa    
  41cedc:	not    ch
  41cede:	mov    al,0xc8
  41cee0:	jge    0x41cea5
  41cee2:	outs   dx,DWORD PTR ds:[esi]
  41cee3:	outs   dx,DWORD PTR ds:[esi]
  41cee4:	or     DWORD PTR [ebx-0x60],ebx
  41cee7:	retf   0x4e4b
  41ceea:	fwait
  41ceeb:	mov    eax,ds:0x8d5ee046
  41cef0:	xchg   esi,eax
  41cef1:	or     dl,bl
  41cef3:	cs pop eax
  41cef5:	and    edx,0x41
  41cef8:	scas   eax,DWORD PTR es:[edi]
  41cef9:	and    ch,BYTE PTR ds:0x520c05e
  41ceff:	jno    0x41ce9c
  41cf01:	and    BYTE PTR [esi+edi*2-0x1fc4054a],ah
  41cf08:	mov    ecx,eax
  41cf0a:	push   ebx
  41cf0b:	inc    ebp
  41cf0c:	retf   
  41cf0d:	enter  0x3eab,0x63
  41cf11:	mov    ch,0xd0
  41cf13:	(bad)  
  41cf14:	xchg   esi,eax
  41cf15:	iret   
  41cf16:	test   al,0xe7
  41cf18:	mov    ds:0x59e6b52f,eax
  41cf1d:	out    0x1b,eax
  41cf1f:	mov    ?,WORD PTR [edi+0x150befad]
  41cf25:	lds    esp,FWORD PTR [ebx]
  41cf27:	push   ecx
  41cf28:	(bad)  
  41cf29:	sbb    esi,DWORD PTR [edi]
  41cf2b:	stos   DWORD PTR es:[edi],eax
  41cf2c:	lods   al,BYTE PTR ds:[esi]
  41cf2d:	or     dl,al
  41cf2f:	scas   al,BYTE PTR es:[edi]
  41cf30:	mov    fs,WORD PTR [esi]
  41cf32:	es scas al,BYTE PTR es:[edi]
  41cf34:	jae    0x41cf6d
  41cf36:	xor    BYTE PTR [ebp+0x5a],al
  41cf39:	push   ebx
  41cf3a:	dec    edi
  41cf3b:	test   al,0x24
  41cf3d:	dec    edi
  41cf3e:	out    0x5a,eax
  41cf40:	inc    BYTE PTR [ebx+0x1e]
  41cf43:	mov    esp,0xd4f9a988
  41cf48:	pop    ecx
  41cf49:	in     al,0x39
  41cf4b:	fcmovu st,st(1)
  41cf4d:	push   ebx
  41cf4e:	pop    eax
  41cf4f:	mov    DWORD PTR [ebx],ecx
  41cf51:	lahf   
  41cf52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf53:	mov    DWORD PTR [eax-0x4d],ebx
  41cf56:	sub    al,BYTE PTR [ebx]
  41cf58:	mov    al,ds:0xf1a83265
  41cf5d:	stos   BYTE PTR es:[edi],al
  41cf5e:	into   
  41cf5f:	xchg   edx,eax
  41cf60:	lods   eax,DWORD PTR ds:[esi]
  41cf61:	mov    cl,0x98
  41cf63:	pop    esp
  41cf64:	add    edi,ecx
  41cf66:	js     0x41cef1
  41cf68:	jne    0x41cf9a
  41cf6a:	pop    ebp
  41cf6b:	xor    eax,0x53e70970
  41cf70:	ret    
  41cf71:	push   ecx
  41cf72:	stos   BYTE PTR es:[edi],al
  41cf73:	fsubr  QWORD PTR [edx+edi*1]
  41cf76:	inc    ah
  41cf78:	jmp    0x5918:0x1c3e98a2
  41cf7f:	popf   
  41cf80:	add    BYTE PTR [eax],cl
  41cf82:	lock je 0x41cf49
  41cf85:	push   edi
  41cf86:	fwait
  41cf87:	test   eax,0xdc67fc3f
  41cf8c:	int3   
  41cf8d:	jne    0x41cfd1
  41cf8f:	in     eax,0xab
  41cf91:	fwait
  41cf92:	and    edi,DWORD PTR [esi+eiz*2+0x7f]
  41cf96:	sub    eax,0x6d1c4f39
  41cf9b:	mov    ebx,0xe29ada64
  41cfa0:	mov    edi,0x9be10bb8
  41cfa5:	sub    bl,BYTE PTR [ecx-0x1c]
  41cfa8:	jmp    0xc04a4cab
  41cfad:	repz aaa 
  41cfaf:	dec    edx
  41cfb0:	sbb    eax,0x40420516
  41cfb5:	mov    bl,0xd2
  41cfb7:	or     al,0x82
  41cfb9:	sub    BYTE PTR [edx+0x28],bl
  41cfbc:	sub    BYTE PTR [edx+0x533dc97b],cl
  41cfc2:	popa   
  41cfc3:	cmp    eax,0x5d9aa861
  41cfc8:	cmp    DWORD PTR [ecx+0x2a],esp
  41cfcb:	xchg   edi,eax
  41cfcc:	inc    ecx
  41cfcd:	jbe    0x41cf85
  41cfcf:	stc    
  41cfd0:	or     edx,0x49cb9247
  41cfd6:	or     DWORD PTR [esi+0x70],edx
  41cfd9:	mov    eax,eax
  41cfdb:	xlat   BYTE PTR ds:[ebx]
  41cfdc:	lods   al,BYTE PTR ds:[esi]
  41cfdd:	jp     0x41cff9
  41cfdf:	mov    bh,0xe9
  41cfe1:	cmp    DWORD PTR [esi-0x43af2e60],ecx
  41cfe7:	pop    eax
  41cfe8:	mov    esp,0x65d19b25
  41cfed:	add    bl,dh
  41cfef:	adc    al,0x26
  41cff1:	outs   dx,BYTE PTR ds:[esi]
  41cff2:	cmp    eax,0x4591fc46
  41cff7:	jo     0x41cfe8
  41cff9:	add    eax,0xc1645cd1
  41cffe:	sub    eax,0x8b019b33
  41d003:	fistp  DWORD PTR [ebp+0x47]
  41d006:	jo     0x41cfd7
  41d008:	cmp    al,0x4d
  41d00a:	outs   dx,BYTE PTR ds:[esi]
  41d00b:	mov    ch,0x67
  41d00d:	push   edx
  41d00e:	ret    
  41d00f:	jle    0x41cfad
  41d011:	xor    BYTE PTR [eax+0x18],0x65
  41d015:	leave  
  41d016:	pop    ebp
  41d017:	repz (bad) 
  41d019:	imul   edi,DWORD PTR [ecx],0xffffffdf
  41d01c:	mov    dh,bh
  41d01e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d01f:	inc    ecx
  41d020:	neg    edi
  41d022:	pop    es
  41d023:	or     al,BYTE PTR [esi+0x1e]
  41d026:	das    
  41d027:	pop    edx
  41d028:	cmc    
  41d029:	or     edx,DWORD PTR [esi-0x93b93f5]
  41d02f:	or     BYTE PTR [esi-0xd128d76],dl
  41d035:	mov    eax,fs:0x17abdf17
  41d03b:	cmp    eax,0xbe2cf9e4
  41d040:	dec    eax
  41d041:	dec    DWORD PTR [eax+0x44]
  41d044:	mov    al,ds:0x856c9af4
  41d049:	pop    ss
  41d04a:	stos   BYTE PTR es:[edi],al
  41d04b:	cmp    DWORD PTR [ebx+0x3d301a79],edx
  41d051:	cmp    al,0x81
  41d053:	mov    cs,WORD PTR [ebx+0xfeb8fdb]
  41d059:	sub    eax,0x1faec0c7
  41d05e:	sbb    dl,BYTE PTR [ebp+0x4d77367d]
  41d064:	shr    ah,1
  41d066:	push   ds
  41d067:	shl    BYTE PTR [ebx+edi*1-0x9],0x7b
  41d06c:	ds int 0xc0
  41d06f:	cld    
  41d070:	jnp    0x41d001
  41d072:	out    0xda,al
  41d074:	ja     0x41d027
  41d076:	inc    edi
  41d077:	pop    edx
  41d078:	or     dl,cl
  41d07a:	mov    eax,DWORD PTR [esi]
  41d07c:	fdiv   st(3),st
  41d07e:	aaa    
  41d07f:	xlat   BYTE PTR ds:[ebx]
  41d080:	xchg   edi,eax
  41d081:	pop    esp
  41d082:	cs inc esp
  41d084:	jle    0x41d01d
  41d086:	(bad)
  41d08b:	lock lea esp,[ebp+0x74]
  41d08f:	dec    esi
  41d090:	loopne 0x41d0c8
  41d092:	xchg   DWORD PTR [edi-0x52],ebp
  41d095:	jecxz  0x41d02a
  41d097:	xor    bh,BYTE PTR [ecx+0x27]
  41d09a:	ficom  WORD PTR [ebp+0x56]
  41d09d:	fiadd  WORD PTR [esi-0x3447ce8]
  41d0a3:	imul   ah
  41d0a5:	push   ebp
  41d0a6:	inc    edx
  41d0a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0a8:	push   DWORD PTR [edx]
  41d0aa:	sub    ecx,edi
  41d0ac:	push   eax
  41d0ad:	dec    ebx
  41d0ae:	push   es
  41d0af:	mov    ds:0x5ab0d960,eax
  41d0b4:	in     al,dx
  41d0b5:	stc    
  41d0b6:	mov    dh,0x91
  41d0b8:	enter  0x5754,0xe
  41d0bc:	sub    bh,ch
  41d0be:	inc    edx
  41d0bf:	add    eax,0x99c36a88
  41d0c4:	stos   DWORD PTR es:[edi],eax
  41d0c5:	dec    ecx
  41d0c6:	adc    eax,0xff4be72d
  41d0cb:	aam    0xf6
  41d0cd:	ja     0x41d0ae
  41d0cf:	jg     0x41d057
  41d0d1:	or     edi,DWORD PTR [eax+0x71]
  41d0d4:	cmc    
  41d0d5:	cwde   
  41d0d6:	jbe    0x41d12d
  41d0d8:	mov    ebx,0x3743ac6b
  41d0dd:	adc    DWORD PTR [esi],esp
  41d0df:	xchg   esp,eax
  41d0e0:	push   edx
  41d0e1:	hlt    
  41d0e2:	pop    esp
  41d0e3:	icebp  
  41d0e4:	mov    bl,0x6e
  41d0e6:	scas   al,BYTE PTR es:[edi]
  41d0e7:	and    ah,BYTE PTR [ecx+edx*8]
  41d0ea:	add    BYTE PTR [eax+0x51a4a4a4],bh
  41d0f0:	pop    es
  41d0f1:	loop   0x41d099
  41d0f3:	xchg   esp,eax
  41d0f4:	out    dx,al
  41d0f5:	fiadd  WORD PTR [eax+0x36]
  41d0f8:	adc    al,0x22
  41d0fa:	data16 fsub QWORD PTR [esi]
  41d0fd:	jne    0x426dd026
  41d103:	mov    fs,WORD PTR [edx+ecx*8-0x39]
  41d107:	fnstsw WORD PTR [ebx]
  41d109:	jp     0x41d175
  41d10b:	nop
  41d10c:	ror    DWORD PTR [ebp-0x57],0x78
  41d110:	retf   0xad9
  41d113:	retf   
  41d114:	mov    ecx,DWORD PTR [eax+edi*2-0x3b]
  41d118:	pushf  
  41d119:	adc    eax,0x4ca35b46
  41d11e:	cli    
  41d11f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d120:	aam    0xc1
  41d122:	adc    al,BYTE PTR [edx]
  41d124:	add    bl,dh
  41d126:	call   0x17da:0x3d5da2cc
  41d12d:	mov    edi,0xd25010a3
  41d132:	xlat   BYTE PTR ds:[ebx]
  41d133:	xor    ah,BYTE PTR [edx-0x5b]
  41d136:	mov    cl,0xe8
  41d138:	repnz (bad) 
  41d13a:	cmp    DWORD PTR [ebp+0x7b],ebp
  41d13d:	scas   eax,DWORD PTR es:[edi]
  41d13e:	div    esp
  41d140:	cmp    bl,bl
  41d142:	xlat   BYTE PTR ds:[ebx]
  41d143:	jb     0x41d120
  41d145:	ss and eax,0x69c2464d
  41d14b:	fidivr DWORD PTR [ebx]
  41d14d:	sti    
  41d14e:	sbb    al,0xe8
  41d150:	ins    DWORD PTR es:[edi],dx
  41d151:	pop    ss
  41d152:	daa    
  41d153:	dec    edx
  41d154:	sbb    esi,DWORD PTR [ecx]
  41d156:	pop    esi
  41d157:	add    al,0xc6
  41d159:	jbe    0x41d121
  41d15b:	inc    edi
  41d15c:	xchg   edi,eax
  41d15d:	cld    
  41d15e:	fdiv   st,st(0)
  41d160:	out    dx,al
  41d161:	nop
  41d162:	rol    eax,0x81
  41d165:	jno    0x41d193
  41d167:	mov    bl,0xbb
  41d169:	xchg   bh,ch
  41d16b:	xor    ebx,eax
  41d16d:	xchg   BYTE PTR [eax+0x5e],dh
  41d170:	xchg   ebp,eax
  41d171:	pop    ds
  41d172:	push   0xa1549e51
  41d177:	jno    0x41d108
  41d179:	or     al,dl
  41d17b:	daa    
  41d17c:	(bad)
  41d17f:	loop   0x41d131
  41d181:	mov    esp,0xb1ecf596
  41d186:	ror    edx,cl
  41d188:	jo     0x41d197
  41d18a:	dec    ecx
  41d18b:	pop    ss
  41d18c:	test   DWORD PTR [ebx-0x17],eax
  41d18f:	adc    edx,ebp
  41d191:	push   0x41
  41d193:	repnz out dx,eax
  41d195:	cmp    BYTE PTR [ebp-0x6],cl
  41d198:	hlt    
  41d199:	stc    
  41d19a:	mov    ch,0xf6
  41d19c:	and    BYTE PTR [esi+0x42],ah
  41d19f:	jmp    0x41d1f8
  41d1a1:	and    al,0xce
  41d1a3:	out    0xab,eax
  41d1a5:	and    ebx,ecx
  41d1a7:	push   ebx
  41d1a8:	or     ah,dh
  41d1aa:	jecxz  0x41d1f3
  41d1ac:	mov    ah,0xe9
  41d1ae:	and    ecx,DWORD PTR [ecx+0x5b6f438f]
  41d1b4:	mov    WORD PTR [edx+edi*2],ss
  41d1b7:	mov    eax,0x2ec54202
  41d1bc:	lods   al,BYTE PTR ds:[esi]
  41d1bd:	cwde   
  41d1be:	js     0x41d170
  41d1c0:	clc    
  41d1c1:	jl     0x41d145
  41d1c3:	shl    edx,0x94
  41d1c6:	rcr    DWORD PTR [edx+0x4c],1
  41d1c9:	out    dx,eax
  41d1ca:	pop    ebp
  41d1cb:	mov    bl,0x36
  41d1cd:	xchg   eax,eax
  41d1cf:	jl     0x41d208
  41d1d1:	dec    ebx
  41d1d2:	dec    esi
  41d1d3:	xor    ebp,DWORD PTR [ebp-0x4f2df491]
  41d1d9:	sbb    ch,BYTE PTR [ebx+ebx*2]
  41d1dc:	mov    esp,0xf3edadb3
  41d1e1:	pop    ecx
  41d1e2:	mov    BYTE PTR [eax+esi*4],cl
  41d1e5:	inc    edi
  41d1e6:	xchg   ebx,eax
  41d1e7:	rcr    DWORD PTR [eax],1
  41d1e9:	mov    esp,0x9fd63fab
  41d1ee:	aaa    
  41d1ef:	or     eax,0x5bdb2e4d
  41d1f4:	iret   
  41d1f5:	nop
  41d1f6:	inc    esi
  41d1f7:	or     al,0x52
  41d1f9:	push   esi
  41d1fa:	xor    ecx,ebp
  41d1fc:	push   es
  41d1fd:	rcl    BYTE PTR [eax-0x7ce2e379],cl
  41d203:	xchg   edi,ebp
  41d205:	mov    al,ds:0x441a8720
  41d20a:	popa   
  41d20b:	xor    ecx,DWORD PTR ds:0x3117e628
  41d212:	retf   0xb374
  41d215:	in     al,dx
  41d216:	test   bl,bh
  41d218:	(bad)  
  41d219:	cmp    ch,BYTE PTR [ecx+0x2c635d33]
  41d21f:	jmp    0x8e0d:0xfeee67ae
  41d226:	mov    ecx,0xc101c299
  41d22b:	or     ebp,DWORD PTR [esi]
  41d22d:	(bad)
  41d230:	imul   ebx,DWORD PTR [esi],0xffffffe3
  41d233:	inc    ebp
  41d234:	test   DWORD PTR [ebx],eax
  41d236:	lods   al,BYTE PTR ds:[esi]
  41d237:	cwde   
  41d238:	and    al,0x2d
  41d23a:	loop   0x41d24b
  41d23c:	adc    al,0x5e
  41d23e:	mov    ebx,DWORD PTR [eax+eax*2]
  41d241:	sub    BYTE PTR [ebx-0x31],0xce
  41d245:	jns    0x41d25c
  41d247:	repnz mov al,0x7c
  41d24a:	ret    0x7d50
  41d24d:	cmp    BYTE PTR [edi-0x4c],bh
  41d250:	ficom  WORD PTR [esi+0x12]
  41d253:	out    0x93,al
  41d255:	pop    ss
  41d256:	mov    al,ds:0xfc980cb7
  41d25b:	mov    ah,0xf
  41d25d:	jbe    0x41d271
  41d25f:	loop   0x41d25b
  41d261:	std    
  41d262:	push   edi
  41d263:	(bad)  
  41d264:	in     eax,0xd5
  41d266:	xor    esi,edi
  41d268:	add    esi,ebx
  41d26a:	and    ah,0xc3
  41d26d:	ds pop edx
  41d26f:	enter  0x379e,0xa9
  41d273:	dec    eax
  41d274:	sbb    BYTE PTR [esi-0x67d05552],dh
  41d27a:	shl    DWORD PTR [ebx-0xb],cl
  41d27d:	call   0x40a7a6fd
  41d282:	add    cl,BYTE PTR [edx-0x6b]
  41d285:	gs (bad) 
  41d287:	cli    
  41d288:	jp     0x41d2b3
  41d28a:	mov    cl,0xef
  41d28c:	out    0x1,eax
  41d28e:	sub    eax,0x5622ebb4
  41d293:	xchg   ebx,eax
  41d294:	xor    al,0xb1
  41d296:	fs pop esi
  41d298:	or     dh,BYTE PTR [edi+esi*1-0x35d28d12]
  41d29f:	add    al,0x5b
  41d2a1:	outs   dx,DWORD PTR ds:[esi]
  41d2a2:	fldenv [eax+0x669cf4f8]
  41d2a8:	mov    dl,0x50
  41d2aa:	fstp   QWORD PTR [ecx]
  41d2ac:	mov    ds:0xed249200,eax
  41d2b1:	jmp    0x5369:0x5a78053c
  41d2b8:	addr16 pop ecx
  41d2ba:	adc    BYTE PTR [eax-0x1ec3fc0],cl
  41d2c0:	loopne 0x41d251
  41d2c2:	pop    ds
  41d2c3:	ret    
  41d2c4:	mov    ecx,0x7066419a
  41d2c9:	out    dx,eax
  41d2ca:	jne    0x41d347
  41d2cc:	mov    ebp,0xdb06472d
  41d2d1:	mov    ah,0xab
  41d2d3:	fnstenv [esi+0x17]
  41d2d6:	sub    DWORD PTR [eax-0x709e2e93],esi
  41d2dc:	(bad)  
  41d2dd:	sti    
  41d2de:	cmp    edx,esp
  41d2e0:	push   es
  41d2e1:	jo     0x41d32a
  41d2e3:	and    esi,DWORD PTR [ebx+0x1830ff10]
  41d2e9:	int    0x7a
  41d2eb:	cs jecxz 0x41d323
  41d2ee:	mov    edx,0x4a5b8da
  41d2f3:	bound  edi,QWORD PTR [ebp+0x4e]
  41d2f6:	lahf   
  41d2f7:	ss push edi
  41d2f9:	xor    ch,BYTE PTR [esi+ebp*4-0x4b]
  41d2fd:	cwde   
  41d2fe:	add    ebp,DWORD PTR [ebx+0x27]
  41d301:	(bad)  
  41d302:	imul   edi,DWORD PTR [eax-0x799c2b4],0x1c
  41d309:	dec    bp
  41d30b:	pusha  
  41d30c:	lods   eax,DWORD PTR ds:[esi]
  41d30d:	cmp    edx,DWORD PTR [edx-0x3f]
  41d310:	jge    0x41d2a6
  41d312:	cdq    
  41d313:	sti    
  41d314:	les    edi,FWORD PTR [eax-0x1791f6b5]
  41d31a:	sbb    DWORD PTR [esi+eax*4+0x4f],0xffffffe0
  41d31f:	sbb    edx,esi
  41d321:	outs   dx,DWORD PTR ds:[esi]
  41d322:	cwde   
  41d323:	out    dx,al
  41d324:	dec    esp
  41d325:	pop    ds
  41d326:	fadd   DWORD PTR [ebx-0x7ab0ae8]
  41d32c:	(bad)  
  41d32d:	int3   
  41d32e:	retf   0x3e52
  41d331:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d332:	push   edx
  41d333:	aam    0xa9
  41d335:	cmp    BYTE PTR ds:0xe5b456dc,cl
  41d33b:	pop    ebx
  41d33c:	xchg   esp,eax
  41d33d:	test   bl,ch
  41d33f:	xchg   esp,eax
  41d340:	and    dl,BYTE PTR [edi]
  41d342:	inc    DWORD PTR [edi]
  41d344:	aaa    
  41d345:	mov    ebp,DWORD PTR [edi+0x42]
  41d348:	add    BYTE PTR [esi+0x4c],dl
  41d34b:	gs mov ebp,0x17ee4ce8
  41d351:	mov    edx,0x22bbacd3
  41d356:	out    0xc4,al
  41d358:	fst    st(6)
  41d35a:	leave  
  41d35b:	stos   BYTE PTR es:[edi],al
  41d35c:	sbb    eax,0x6c57e9df
  41d361:	cli    
  41d362:	add    DWORD PTR [ebx+0x8],edi
  41d365:	test   ch,bl
  41d367:	and    DWORD PTR [edi+0x14],ebx
  41d36a:	shl    BYTE PTR [edi-0x8],1
  41d36d:	xchg   BYTE PTR [eax],al
  41d36f:	inc    edi
  41d370:	test   DWORD PTR [edi-0x3ee1b044],0xf7d1e4ec
  41d37a:	lock xlat BYTE PTR ds:[ebx]
  41d37c:	push   ebx
  41d37d:	push   DWORD PTR [esi+0x588b4b00]
  41d383:	call   0xfeecfab3
  41d388:	jne    0x41d3f6
  41d38a:	pop    ebp
  41d38b:	jo     0x41d3fb
  41d38d:	mov    ebp,0x990f0782
  41d392:	rol    edx,0x45
  41d395:	dec    ecx
  41d396:	inc    esp
  41d397:	sbb    esi,DWORD PTR [edx-0x5a2cff1c]
  41d39d:	push   ebp
  41d39e:	mov    BYTE PTR [esi-0x49087796],al
  41d3a4:	scas   eax,DWORD PTR es:[edi]
  41d3a5:	dec    eax
  41d3a6:	dec    ebp
  41d3a7:	fdiv   DWORD PTR [edi-0x23]
  41d3aa:	mov    ch,0x5c
  41d3ac:	fistp  WORD PTR [ecx+0x5b]
  41d3af:	pop    ds
  41d3b0:	dec    ebp
  41d3b1:	icebp  
  41d3b2:	sub    DWORD PTR [ebx+0x612893db],ebp
  41d3b8:	or     BYTE PTR [esi],cl
  41d3ba:	repz in eax,dx
  41d3bc:	lea    eax,[ecx]
  41d3be:	call   0x71e3ad8f
  41d3c3:	pop    esi
  41d3c4:	(bad)  
  41d3c5:	fxch   st(4)
  41d3c7:	jmp    FWORD PTR [ecx+0x662658a9]
  41d3cd:	adc    DWORD PTR [ebp+0x1ef1fd5b],edx
  41d3d3:	pop    ebp
  41d3d4:	js     0x41d442
  41d3d6:	sbb    BYTE PTR [eax+ecx*4],al
  41d3d9:	sub    esp,DWORD PTR [edx-0x6a]
  41d3dc:	stos   DWORD PTR es:[edi],eax
  41d3dd:	pop    ss
  41d3de:	call   0x3324:0xd0a39106
  41d3e5:	fiadd  WORD PTR [edx+edi*1+0x21cf3937]
  41d3ec:	xchg   esi,eax
  41d3ed:	enter  0x577e,0xc6
  41d3f1:	dec    edi
  41d3f2:	test   al,0x3f
  41d3f4:	mov    edx,0xf4316b1c
  41d3f9:	jnp    0x41d3eb
  41d3fb:	scas   al,BYTE PTR es:[edi]
  41d3fc:	add    eax,0x6efa3ee3
  41d401:	cmp    al,0xbe
  41d403:	ret    0xf74d
  41d406:	jne    0x41d42b
  41d408:	jne    0x41d457
  41d40a:	pusha  
  41d40b:	inc    esi
  41d40c:	jg     0x41d411
  41d40e:	push   es
  41d40f:	xchg   esi,eax
  41d410:	add    al,BYTE PTR [edi-0x4d3e8ec2]
  41d416:	mov    WORD PTR [edx+0x17],gs
  41d419:	fwait
  41d41a:	mov    bh,0x5a
  41d41c:	xor    DWORD PTR [edi-0x42f9544],edi
  41d422:	jb     0x41d476
  41d424:	add    DWORD PTR [ebx+0x6a],ebp
  41d427:	stos   DWORD PTR es:[edi],eax
  41d428:	and    DWORD PTR [edx-0x1e],0xffffffc0
  41d42c:	jg     0x41d440
  41d42e:	add    BYTE PTR [eax+edx*2+0x2d],bh
  41d432:	test   esi,esi
  41d434:	and    DWORD PTR [ecx+ecx*1-0x40],0xffffffe6
  41d439:	sub    BYTE PTR [edx],bh
  41d43b:	adc    eax,0x2036047f
  41d440:	jp     0x41d462
  41d442:	push   ds
  41d443:	xchg   ecx,eax
  41d444:	cwde   
  41d445:	int    0xfd
  41d447:	sbb    cl,bh
  41d449:	cmp    eax,0x67e55444
  41d44e:	dec    esi
  41d44f:	cmc    
  41d450:	push   esi
  41d451:	cmp    BYTE PTR [edx+0x6d],al
  41d454:	cmc    
  41d455:	lods   al,BYTE PTR ds:[esi]
  41d456:	mov    ebp,0x643308a3
  41d45b:	rcl    BYTE PTR [edi+0x7c],cl
  41d45e:	loopne 0x41d403
  41d460:	cmp    eax,ebp
  41d462:	pop    ebp
  41d463:	sub    esi,DWORD PTR [ebx+0xa6350d8]
  41d469:	jne    0x41d458
  41d46b:	int    0x6e
  41d46d:	mov    edx,0xd458506b
  41d472:	xor    ah,BYTE PTR [edi+0x3adeab56]
  41d478:	in     al,0xe1
  41d47a:	dec    ebx
  41d47b:	push   ebx
  41d47c:	add    DWORD PTR [ecx+0x2045494b],eax
  41d482:	mov    esp,0x47941e3f
  41d487:	stc    
  41d488:	jnp    0x41d4b8
  41d48a:	ins    BYTE PTR es:[edi],dx
  41d48b:	push   0xffffffaf
  41d48d:	repnz mov eax,ds:0x912aaf07
  41d493:	jmp    0x41d41b
  41d495:	jnp    0x41d4ae
  41d497:	outs   dx,DWORD PTR ds:[esi]
  41d498:	adc    ch,BYTE PTR [ecx-0x60]
  41d49b:	dec    edi
  41d49c:	xchg   ebp,eax
  41d49d:	xchg   edi,eax
  41d49e:	in     eax,dx
  41d49f:	sbb    eax,0x55e36ce5
  41d4a4:	cmp    edi,esi
  41d4a6:	stc    
  41d4a7:	sub    DWORD PTR [edx+0x24],edx
  41d4aa:	cmp    DWORD PTR [edx],ecx
  41d4ac:	jne    0x41d510
  41d4ae:	lea    edi,[esi+edx*4-0x28]
  41d4b2:	sahf   
  41d4b3:	xor    ch,BYTE PTR [eax-0x4c]
  41d4b6:	(bad)  
  41d4b7:	sti    
  41d4b8:	aam    0xd0
  41d4ba:	push   ecx
  41d4bb:	push   edx
  41d4bc:	pop    eax
  41d4bd:	popf   
  41d4be:	pop    esp
  41d4c0:	pushf  
  41d4c1:	out    dx,eax
  41d4c2:	add    al,BYTE PTR [ecx]
  41d4c4:	sub    edi,esi
  41d4c6:	mov    ds:0x6fcd56f4,al
  41d4cb:	fbstp  TBYTE PTR [edx+ebx*2+0x34]
  41d4cf:	push   ecx
  41d4d0:	add    al,al
  41d4d2:	pop    eax
  41d4d3:	call   0x9721:0xe592c4d2
  41d4da:	outs   dx,BYTE PTR ds:[esi]
  41d4db:	pop    ss
  41d4dc:	adc    al,0x36
  41d4de:	ja     0x41d461
  41d4e0:	mov    ds:0x9ad8df8d,al
  41d4e5:	rep lods eax,DWORD PTR ds:[esi]
  41d4e7:	sbb    edx,ebx
  41d4e9:	jge    0x41d506
  41d4eb:	lds    edx,FWORD PTR [eax]
  41d4ed:	dec    ebp
  41d4ee:	sub    DWORD PTR [eax],edx
  41d4f0:	xchg   BYTE PTR [eax+0x7649ff81],dh
  41d4f6:	pusha  
  41d4f7:	jl     0x41d484
  41d4f9:	loope  0x41d540
  41d4fb:	inc    ebp
  41d4fc:	fstp   TBYTE PTR gs:[ecx+0x33d1c17e]
  41d503:	push   ss
  41d504:	bound  ebx,QWORD PTR [ebp+0x1d]
  41d507:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d508:	inc    esp
  41d509:	mov    eax,0x8211dba4
  41d50e:	icebp  
  41d50f:	mov    DWORD PTR cs:[esi],0x8262f83b
  41d516:	xchg   ebx,eax
  41d517:	xor    BYTE PTR [edx-0x34],0xe1
  41d51b:	out    dx,al
  41d51c:	out    0x40,eax
  41d51e:	dec    ebx
  41d51f:	hlt    
  41d520:	out    0x45,eax
  41d522:	xor    eax,0xf0269d58
  41d527:	sar    BYTE PTR [ebp+0x7d],0xa6
  41d52b:	int    0xae
  41d52d:	xor    dh,ah
  41d52f:	lds    edx,FWORD PTR [esi]
  41d531:	mov    al,0x23
  41d533:	aas    
  41d534:	push   ebx
  41d535:	sahf   
  41d536:	push   ss
  41d537:	mov    edx,0x227ba819
  41d53c:	xchg   edi,eax
  41d53d:	jp     0x41d571
  41d53f:	pop    es
  41d540:	mov    bh,0xf6
  41d542:	mov    BYTE PTR [edi],bh
  41d544:	xor    DWORD PTR [ecx],eax
  41d546:	mov    dh,0x98
  41d548:	lock add al,0x77
  41d54b:	and    eax,0x6e183d6e
  41d550:	xor    esi,DWORD PTR [esi+ebx*2+0x3]
  41d554:	js     0x41d546
  41d556:	aad    0xa
  41d558:	clc    
  41d559:	icebp  
  41d55a:	je     0x41d5ab
  41d55c:	les    esp,FWORD PTR [esi-0x6630ec47]
  41d562:	jecxz  0x41d582
  41d564:	xor    eax,0x9e846767
  41d569:	(bad)  
  41d56a:	out    0x75,eax
  41d56c:	cs sahf 
  41d56e:	push   ds
  41d56f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d570:	test   eax,edx
  41d572:	pushw  0xffc0
  41d575:	push   esp
  41d576:	cmc    
  41d577:	js     0x41d54e
  41d579:	dec    eax
  41d57a:	jb     0x41d592
  41d57c:	fidiv  DWORD PTR [ecx+0x205eb337]
  41d582:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d583:	and    eax,0xe9344b2b
  41d588:	shl    BYTE PTR [eax+0x2d],cl
  41d58b:	lds    edi,FWORD PTR [edx+0x26e8a4fe]
  41d591:	cmp    esi,DWORD PTR [edi-0x336c5f0c]
  41d597:	push   ss
  41d598:	pop    ds
  41d599:	je     0x41d57e
  41d59b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d59c:	aam    0xcf
  41d59e:	retf   
  41d59f:	shl    DWORD PTR [eax+0x45],0xd1
  41d5a3:	mov    WORD PTR [edi+edx*8+0x77714dae],?
  41d5aa:	mov    bh,dl
  41d5ac:	mov    eax,DWORD PTR [ebx-0xe]
  41d5af:	and    bl,BYTE PTR [ecx+0x1d17abcb]
  41d5b5:	and    edi,0x4f2ae80f
  41d5bb:	push   ss
  41d5bc:	jecxz  0x41d60d
  41d5be:	xchg   ecx,eax
  41d5bf:	sub    al,0x12
  41d5c1:	loope  0x41d5ed
  41d5c3:	cmp    esi,ecx
  41d5c5:	jecxz  0x41d5c9
  41d5c7:	mov    ds:0xad32339b,al
  41d5cc:	sbb    BYTE PTR [ebx+0x5ff86f74],dl
  41d5d2:	and    DWORD PTR [esi],0x25
  41d5d5:	sub    DWORD PTR [esp+edx*1],eax
  41d5d8:	jno    0x41d5d1
  41d5da:	test   ebp,0x3baa16ae
  41d5e0:	cld    
  41d5e1:	gs stc 
  41d5e3:	pop    esp
  41d5e4:	mov    esi,0xc8a31eb4
  41d5e9:	inc    esp
  41d5ea:	fbld   TBYTE PTR [ebx+0x44]
  41d5ed:	push   edi
  41d5ee:	jae    0x41d631
  41d5f0:	jbe    0x41d5cc
  41d5f2:	out    dx,al
  41d5f3:	inc    ebp
  41d5f4:	xchg   esi,eax
  41d5f5:	cdq    
  41d5f6:	mov    cl,0xed
  41d5f8:	addr16 popa 
  41d5fa:	pop    eax
  41d5fb:	cmp    ah,BYTE PTR [esi+0x979645d]
  41d601:	xchg   dl,dh
  41d603:	fisub  DWORD PTR [eax]
  41d605:	arpl   WORD PTR [edi+edi*1],ax
  41d608:	xchg   DWORD PTR [ecx-0xf],ebp
  41d60b:	mov    ebp,0xecb11e01
  41d610:	sbb    DWORD PTR [edx+0x2e],edx
  41d613:	pop    ecx
  41d614:	clc    
  41d615:	dec    ecx
  41d616:	push   es
  41d617:	add    eax,0x3ae413ec
  41d61c:	push   0x5f29b1ad
  41d621:	outs   dx,BYTE PTR ds:[esi]
  41d622:	fcomp  QWORD PTR [ecx]
  41d624:	cmp    al,0xcd
  41d626:	mov    BYTE PTR [ebx+0x1d1d4daf],ah
  41d62c:	jns    0x41d6ac
  41d62e:	aaa    
  41d62f:	and    cl,dl
  41d631:	mov    esp,0xbff01273
  41d636:	xor    al,0xa4
  41d638:	les    edi,FWORD PTR [esi-0xdef99f9]
  41d63e:	push   edi
  41d63f:	outs   dx,DWORD PTR ds:[esi]
  41d640:	jno    0x41d604
  41d642:	inc    di
  41d644:	sub    al,0xdc
  41d646:	sbb    esi,DWORD PTR [esi]
  41d648:	sbb    ebp,edx
  41d64a:	out    0x83,eax
  41d64c:	and    bl,bl
  41d64e:	mov    eax,ds:0xbfd7e7a8
  41d653:	xchg   ebp,eax
  41d654:	pop    edi
  41d655:	imul   ebx,DWORD PTR [esi+0x384805dc],0xc8923e62
  41d65f:	add    al,BYTE PTR [esi+0x278183bc]
  41d665:	fsub   st(7),st
  41d667:	push   eax
  41d668:	and    bl,bh
  41d66a:	stos   BYTE PTR es:[edi],al
  41d66b:	not    eax
  41d66d:	xchg   BYTE PTR [esi-0x3d],dh
  41d670:	rcr    DWORD PTR [edi-0x8],1
  41d673:	add    dh,BYTE PTR [eax-0x12e06da8]
  41d679:	fstp   QWORD PTR [eax+0x18]
  41d67c:	jnp    0x41d623
  41d67e:	cwde   
  41d67f:	adc    ebp,DWORD PTR [ecx]
  41d681:	xor    bl,BYTE PTR [edi-0x31e6ff4f]
  41d687:	xor    eax,0x5dcc3483
  41d68c:	add    esp,ebx
  41d68e:	jns    0x41d683
  41d690:	clc    
  41d691:	fidivr DWORD PTR [eax+0x23bb8b28]
  41d697:	test   BYTE PTR [ebp+0x62],cl
  41d69a:	push   ebp
  41d69b:	shr    DWORD PTR [edx+0x7e],1
  41d69e:	xor    DWORD PTR fs:[edx],eax
  41d6a1:	stos   BYTE PTR es:[edi],al
  41d6a2:	jns    0x41d6cf
  41d6a4:	int    0xb4
  41d6a6:	in     eax,0x10
  41d6a8:	and    dl,BYTE PTR ds:0x6c75c216
  41d6ae:	and    al,0xcf
  41d6b0:	adc    DWORD PTR [ebp-0x7],edi
  41d6b3:	or     ch,BYTE PTR [edi]
  41d6b5:	fdivr  st,st(6)
  41d6b7:	inc    edx
  41d6b8:	jl     0x41d689
  41d6ba:	xchg   ebp,eax
  41d6bb:	push   eax
  41d6bc:	push   ss
  41d6bd:	inc    esi
  41d6be:	sbb    eax,0x6293955f
  41d6c3:	loope  0x41d657
  41d6c5:	xor    dh,BYTE PTR [edi]
  41d6c7:	jmp    0x66fe2ca9
  41d6cc:	xchg   edi,esi
  41d6ce:	(bad)  
  41d6cf:	sbb    DWORD PTR [ebx+0x71],esi
  41d6d2:	jne    0x41d713
  41d6d4:	dec    ebp
  41d6d5:	or     eax,0x7545c86a
  41d6da:	dec    ebx
  41d6db:	or     al,0x88
  41d6dd:	hlt    
  41d6de:	or     BYTE PTR [edi+0x47],cl
  41d6e1:	sub    DWORD PTR [esi],0x71
  41d6e4:	retf   0xba91
  41d6e7:	dec    esp
  41d6e8:	fisttp QWORD PTR [edx-0x52]
  41d6eb:	sub    al,cl
  41d6ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6ee:	and    eax,0x22fe4418
  41d6f3:	jmp    0x7267:0x55f9798f
  41d6fa:	inc    bl
  41d6fc:	ds jb  0x41d6dc
  41d6ff:	data16 cli 
  41d701:	add    dl,BYTE PTR [edx-0x38a2ee9d]
  41d707:	stc    
  41d708:	inc    eax
  41d709:	xchg   ecx,eax
  41d70a:	sub    eax,0x926ff757
  41d70f:	aas    
  41d710:	out    0xf1,al
  41d712:	mov    DWORD PTR [ebx-0x8],esp
  41d715:	sahf   
  41d716:	dec    esp
  41d717:	in     eax,dx
  41d718:	add    al,0x9b
  41d71a:	sub    DWORD PTR [eax],edi
  41d71c:	mov    ch,0x72
  41d71e:	dec    ecx
  41d71f:	das    
  41d720:	xchg   esi,eax
  41d721:	jle    0x41d6cc
  41d723:	in     eax,0xcd
  41d725:	lahf   
  41d726:	shl    BYTE PTR [ebp-0x7afd62d8],1
  41d72c:	push   0xa3064779
  41d731:	int    0x4a
  41d733:	(bad)  
  41d734:	xchg   edi,eax
  41d735:	cmp    al,0x7c
  41d737:	retf   0x576b
  41d73a:	and    esi,DWORD PTR [edx-0x6dfb95be]
  41d740:	push   es
  41d741:	inc    esi
  41d742:	sbb    ah,BYTE PTR [eax]
  41d744:	data16 (bad) 
  41d746:	vpsrlq ymm7,ymm1,XMMWORD PTR [eax-0x78]
  41d74b:	jmp    0xd38b:0xab993521
  41d752:	cmc    
  41d753:	jns    0x41d73e
  41d755:	ins    DWORD PTR es:[edi],dx
  41d756:	lds    ecx,FWORD PTR [ebx-0x66]
  41d759:	lods   al,BYTE PTR ds:[esi]
  41d75a:	mov    al,0x7
  41d75c:	mov    BYTE PTR [edx+0x1f147944],0xd3
  41d763:	lods   ax,WORD PTR ds:[esi]
  41d765:	pshufw mm5,mm1,0x58
  41d769:	dec    edx
  41d76a:	loopne 0x41d744
  41d76c:	fdiv   QWORD PTR [esi+0x5e]
  41d76f:	mov    BYTE PTR [edi+ebp*1],dl
  41d772:	(bad)  [esi-0x36]
  41d775:	cld    
  41d776:	add    eax,0x720b37ef
  41d77b:	mov    ch,0xec
  41d77d:	outs   dx,BYTE PTR ds:[esi]
  41d77e:	mov    edi,ebp
  41d780:	pop    ss
  41d781:	sar    DWORD PTR [ecx+0x186d8ef7],1
  41d787:	fist   WORD PTR [ecx+0x29f363e7]
  41d78d:	arpl   bp,ax
  41d78f:	dec    esi
  41d790:	xchg   BYTE PTR [edi],al
  41d792:	fistp  DWORD PTR [esi]
  41d794:	sbb    eax,0xd3285e0b
  41d799:	ins    DWORD PTR es:[edi],dx
  41d79a:	cmp    eax,DWORD PTR [edx-0x4c2a71f3]
  41d7a0:	xchg   dh,dh
  41d7a2:	scas   eax,DWORD PTR es:[edi]
  41d7a3:	jb     0x41d7da
  41d7a5:	jae    0x41d805
  41d7a7:	and    edi,ebp
  41d7a9:	and    bh,BYTE PTR [esi+edx*4+0x2]
  41d7ad:	xchg   esi,edx
  41d7af:	xchg   esi,eax
  41d7b0:	ins    BYTE PTR es:[edi],dx
  41d7b1:	ins    BYTE PTR es:[edi],dx
  41d7b2:	jns    0x41d77e
  41d7b4:	repnz fld QWORD PTR [eax]
  41d7b7:	inc    esi
  41d7b8:	aad    0x44
  41d7ba:	(bad)  
  41d7bb:	pop    ecx
  41d7bc:	pop    esp
  41d7bd:	rcr    DWORD PTR [edx+0x72],1
  41d7c0:	icebp  
  41d7c1:	push   ecx
  41d7c2:	lds    edi,FWORD PTR [ecx-0x3f9617a6]
  41d7c8:	call   0x9bf09430
  41d7cd:	push   eax
  41d7ce:	inc    ebp
  41d7cf:	gs hlt 
  41d7d1:	mov    eax,ds:0x667484a
  41d7d6:	cmp    DWORD PTR [ebx+0x50b0e97e],0xffffffe9
  41d7dd:	das    
  41d7de:	mov    ah,0x49
  41d7e0:	(bad)  
  41d7e1:	jb     0x41d841
  41d7e3:	cmc    
  41d7e4:	retf   
  41d7e5:	(bad)
  41d7e9:	xor    al,0xe8
  41d7eb:	fdivrp st(0),st
  41d7ed:	jnp    0x41d824
  41d7ef:	xchg   edx,eax
  41d7f0:	dec    ecx
  41d7f2:	(bad)  
  41d7f3:	out    dx,al
  41d7f4:	lods   al,BYTE PTR ds:[esi]
  41d7f5:	out    dx,al
  41d7f6:	ret    
  41d7f7:	xchg   BYTE PTR [eax-0x54],ah
  41d7fa:	xchg   ah,bh
  41d7fc:	cmp    al,0xb9
  41d7fe:	adc    BYTE PTR [eax+0x7d4f45cb],dh
  41d804:	push   ecx
  41d805:	mov    ebp,0x69ba4f02
  41d80a:	clc    
  41d80b:	push   ebx
  41d80c:	mov    dh,0xe8
  41d80e:	push   es
  41d80f:	push   ecx
  41d810:	xchg   ebp,eax
  41d811:	scas   al,BYTE PTR es:[edi]
  41d812:	int3   
  41d813:	test   BYTE PTR ds:0xcc18783c,cl
  41d819:	xlat   BYTE PTR ds:[ebx]
  41d81a:	mov    al,0x29
  41d81c:	mov    esp,0x140c612e
  41d821:	fstp   DWORD PTR [ecx-0x28]
  41d824:	ret    
  41d825:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d826:	push   ss
  41d827:	or     eax,0xf367930
  41d82c:	jb     0x41d817
  41d82e:	cmp    BYTE PTR [ecx+0x1d],dh
  41d831:	mov    cl,0xd3
  41d833:	sbb    DWORD PTR [ebp+0x58],esi
  41d836:	xor    BYTE PTR [edx],cl
  41d838:	out    dx,eax
  41d839:	fwait
  41d83a:	xor    eax,0x754f7a6d
  41d83f:	cmp    DWORD PTR [eax+0x3df7b42c],ecx
  41d845:	mov    bh,0xcf
  41d847:	cmp    DWORD PTR [edx+0x2e],0x62
  41d84b:	xor    al,0xcd
  41d84d:	loope  0x41d856
  41d84f:	ins    BYTE PTR es:[edi],dx
  41d850:	sti    
  41d851:	imul   ecx,DWORD PTR [edi],0xffffffb9
  41d854:	imul   ebx,DWORD PTR [esi-0x49ee44bf],0xffcb283f
  41d85e:	hlt    
  41d85f:	lods   al,BYTE PTR ds:[esi]
  41d860:	jnp    0x41d885
  41d862:	xchg   ebx,eax
  41d863:	shr    bl,0x7b
  41d866:	out    0xa0,al
  41d868:	sahf   
  41d869:	imul   esi,DWORD PTR [ebx-0x735f0270],0xffffff94
  41d870:	test   BYTE PTR [ebp+edx*1-0x48],bl
  41d874:	call   0x19ac9861
  41d879:	and    BYTE PTR [eax+0x4d5e3d1f],dl
  41d87f:	add    BYTE PTR [edx+ebx*8+0x40e61f82],bh
  41d886:	clc    
  41d887:	push   es
  41d888:	outs   dx,DWORD PTR ds:[esi]
  41d889:	xlat   BYTE PTR ds:[ebx]
  41d88a:	and    eax,0xe39a3b97
  41d88f:	popa   
  41d890:	push   edx
  41d891:	adc    BYTE PTR ds:0xdf853eda,dl
  41d897:	test   DWORD PTR [edx+0x4c9d2ee3],ecx
  41d89d:	xor    eax,0x5d429755
  41d8a2:	and    eax,0x4112b15
  41d8a7:	sbb    DWORD PTR [ebp+0x48],ecx
  41d8aa:	mov    bl,0x47
  41d8ac:	mov    ecx,0xb34147f2
  41d8b1:	pop    esp
  41d8b2:	aad    0x47
  41d8b4:	sbb    al,0xba
  41d8b6:	in     eax,dx
  41d8b7:	hlt    
  41d8b8:	fmul   st,st(0)
  41d8ba:	cmc    
  41d8bb:	daa    
  41d8bc:	in     eax,dx
  41d8bd:	rcl    BYTE PTR [eax-0x20],1
  41d8c0:	loop   0x41d87d
  41d8c2:	sub    bh,ch
  41d8c4:	es out 0xcc,eax
  41d8c7:	pop    ebx
  41d8c8:	mov    bh,BYTE PTR [ebx-0x66]
  41d8cb:	pop    edi
  41d8cc:	scas   al,BYTE PTR es:[edi]
  41d8cd:	mov    eax,cs
  41d8cf:	scas   eax,DWORD PTR es:[edi]
  41d8d0:	mov    al,0xa8
  41d8d2:	lods   eax,DWORD PTR ds:[esi]
  41d8d3:	inc    ebx
  41d8d4:	inc    edi
  41d8d5:	scas   eax,DWORD PTR es:[edi]
  41d8d6:	sbb    BYTE PTR [edx-0x55673fc0],ah
  41d8dc:	mov    ds:0x125102cb,eax
  41d8e1:	and    eax,0xbcacc8a4
  41d8e6:	add    DWORD PTR [ecx+0x16e159f8],edi
  41d8ec:	cmp    DWORD PTR [ebx],esp
  41d8ee:	call   0x6f33bfd9
  41d8f3:	and    al,0x3c
  41d8f5:	sti    
  41d8f6:	cmp    eax,0xaa37de30
  41d8fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8fc:	cmp    eax,0xb2729b08
  41d901:	dec    esi
  41d902:	mov    BYTE PTR [esi+0x23],bl
  41d905:	cwde   
  41d906:	dec    ebx
  41d907:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d908:	sbb    esp,DWORD PTR [esi]
  41d90a:	in     al,0xc5
  41d90c:	dec    esp
  41d90d:	popa   
  41d90e:	cmp    BYTE PTR [ebx+ebp*2-0x46e06817],0xf0
  41d916:	mov    edx,0xbe81fd30
  41d91b:	imul   edi,DWORD PTR [esi],0x9a8453c0
  41d921:	mov    edx,0xedfb6c31
  41d926:	mov    esp,0x9e77d8e3
  41d92b:	jecxz  0x41d99d
  41d92d:	lods   al,BYTE PTR ds:[esi]
  41d92e:	or     eax,0x9872839f
  41d933:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d934:	mov    eax,DWORD PTR [eax-0x57e48e8b]
  41d93a:	jmp    0x41d9a2
  41d93c:	add    DWORD PTR [edi],0x65847b20
  41d942:	stos   DWORD PTR es:[edi],eax
  41d943:	add    al,0xb3
  41d945:	push   edx
  41d946:	or     cl,dh
  41d948:	fild   DWORD PTR [edx-0x19]
  41d94b:	sar    BYTE PTR [ebp+0x44f446d],0xc9
  41d952:	mov    ebx,0xdc4dcf23
  41d957:	imul   edi,ecx,0x59
  41d95a:	mov    ch,0xa9
  41d95c:	mov    ebp,0x7cda6e4d
  41d961:	test   BYTE PTR [eax],bl
  41d963:	push   ss
  41d964:	cli    
  41d965:	sub    DWORD PTR [esi+0x1d],edi
  41d968:	jb     0x41d96d
  41d96a:	jge    0x41d9bc
  41d96c:	cmp    dh,BYTE PTR [ecx+0x7d67eb13]
  41d972:	jne    0x41d936
  41d974:	xchg   ebx,eax
  41d975:	fdiv   DWORD PTR [ecx+0x762b865a]
  41d97b:	mov    al,0x59
  41d97d:	inc    edi
  41d97e:	ror    WORD PTR [edx-0xc],cl
  41d982:	mov    ebx,0x92f20bd2
  41d987:	or     al,0x1b
  41d989:	int    0x8e
  41d98b:	mov    esp,0x7f05fd88
  41d990:	pop    esp
  41d991:	lock mov ebp,0xf7642e26
  41d997:	dec    edx
  41d998:	lds    ebp,FWORD PTR [ebx-0x6f5f26e5]
  41d99e:	xchg   ecx,eax
  41d99f:	adc    edx,ebp
  41d9a1:	adc    eax,0x5e875b53
  41d9a6:	and    al,0x30
  41d9a8:	pusha  
  41d9a9:	inc    ebp
  41d9aa:	pop    esp
  41d9ab:	push   eax
  41d9ac:	jae    0x41d9bd
  41d9ae:	and    DWORD PTR [ebp+0x2f],0x33b1472d
  41d9b5:	mov    ch,0x4a
  41d9b7:	add    al,0x12
  41d9b9:	ret    0x36fe
  41d9bc:	sub    eax,0x440bfaa8
  41d9c1:	mov    al,ds:0x6415fbd
  41d9c6:	adc    eax,ebx
  41d9c8:	inc    esp
  41d9c9:	pop    ebp
  41d9ca:	sbb    eax,0x4dde712e
  41d9cf:	jb     0x41d9ca
  41d9d1:	jne    0x41da17
  41d9d3:	sbb    al,0xae
  41d9d5:	gs cs inc esp
  41d9d8:	jns    0x41d9bb
  41d9da:	les    ebx,FWORD PTR [ebp-0x4eca8e89]
  41d9e0:	mov    eax,0x33fd899b
  41d9e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9e6:	mov    ebp,0xd2d0fd8d
  41d9eb:	clc    
  41d9ec:	xchg   ebp,eax
  41d9ed:	(bad)  
  41d9ef:	jle    0x41d9fc
  41d9f1:	dec    edi
  41d9f2:	out    0x4f,al
  41d9f4:	add    BYTE PTR [edi],cl
  41d9f6:	sbb    esp,DWORD PTR [edi+0x432ef18d]
  41d9fc:	test   eax,0xc070c341
  41da01:	pop    es
  41da02:	sub    DWORD PTR [ebp-0x42],ecx
  41da05:	les    edx,FWORD PTR [edx-0x7d]
  41da08:	dec    edx
  41da09:	pop    esi
  41da0a:	es xchg esp,eax
  41da0c:	mov    ah,0xd4
  41da0e:	stc    
  41da0f:	lock jae 0x41da40
  41da12:	dec    esp
  41da13:	loope  0x41d9b5
  41da15:	jae    0x41da27
  41da17:	int3   
  41da18:	ins    DWORD PTR es:[edi],dx
  41da19:	inc    DWORD PTR [edx+0x78]
  41da1c:	adc    al,0x1
  41da1e:	add    edx,DWORD PTR [eax]
  41da20:	inc    eax
  41da21:	pop    eax
  41da22:	adc    eax,0x6e1b5688
  41da27:	fdivr  DWORD PTR [ebx-0x53]
  41da2a:	dec    ecx
  41da2b:	adc    ebx,DWORD PTR [edi+edx*2]
  41da2e:	pop    edi
  41da2f:	ss mov ch,0x74
  41da32:	scas   al,BYTE PTR es:[edi]
  41da33:	cdq    
  41da34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da35:	jg     0x41da5e
  41da37:	je     0x41da56
  41da39:	inc    esi
  41da3a:	scas   eax,DWORD PTR es:[edi]
  41da3b:	mov    edi,0xa98744d6
  41da40:	scas   eax,DWORD PTR es:[edi]
  41da41:	ss pop edi
  41da43:	loop   0x41da7f
  41da45:	fs push ds
  41da47:	std    
  41da48:	xor    BYTE PTR [eax],dl
  41da4a:	sub    al,0x81
  41da4c:	push   ss
  41da4d:	cmp    DWORD PTR [eax],ebx
  41da4f:	push   ebx
  41da50:	or     ebp,ecx
  41da52:	inc    ecx
  41da53:	ror    DWORD PTR [si+0x6156],cl
  41da58:	scas   eax,DWORD PTR es:[edi]
  41da59:	or     DWORD PTR [ebx-0x48804532],esp
  41da5f:	fistp  QWORD PTR [ebx-0x66c60c50]
  41da65:	or     dl,BYTE PTR [edx+0x42]
  41da68:	enter  0x756b,0x69
  41da6c:	out    0x4,eax
  41da6e:	stos   BYTE PTR es:[edi],al
  41da6f:	pop    ss
  41da70:	leave  
  41da71:	icebp  
  41da72:	xlat   BYTE PTR ds:[ebx]
  41da73:	add    dh,0x8d
  41da76:	jge    0x41da63
  41da78:	jno    0x298c1806
  41da7e:	in     eax,0xec
  41da80:	or     al,0xbe
  41da82:	cmc    
  41da83:	ds enter 0xfbbc,0xe8
  41da88:	call   0x2db57eaa
  41da8d:	sub    DWORD PTR [ebx],0x7a
  41da90:	xchg   ecx,eax
  41da91:	pop    ebx
  41da92:	addr16 pop ecx
  41da94:	std    
  41da95:	sbb    al,0x86
  41da97:	cdq    
  41da98:	push   ds
  41da99:	jae    0x41db02
  41da9b:	sbb    ecx,DWORD PTR [ecx-0x7c]
  41da9e:	fs inc ecx
  41daa0:	jns    0x41db21
  41daa2:	mov    WORD PTR ds:0x22a37878,?
  41daa8:	popa   
  41daa9:	mov    cl,0xc1
  41daab:	dec    esi
  41daac:	xchg   BYTE PTR [esi+0x1d],bl
  41daaf:	cmp    al,0x62
  41dab1:	pop    edx
  41dab2:	(bad)  
  41dab3:	fdivr  QWORD PTR [esi+0x43bf5e9f]
  41dab9:	in     al,dx
  41daba:	enter  0x2968,0xb7
  41dabe:	pop    ebp
  41dabf:	xor    dh,0xb4
  41dac2:	mov    ecx,0xd93a567f
  41dac7:	pop    edx
  41dac8:	mov    ecx,0x26102f37
  41dacd:	fidivr DWORD PTR [eax+ecx*8+0x5c753a38]
  41dad4:	mov    bl,0x84
  41dad6:	xchg   DWORD PTR [edi+edx*8-0x6f698048],esp
  41dadd:	fsub   st(5),st
  41dadf:	pop    eax
  41dae0:	iret   
  41dae1:	std    
  41dae2:	inc    esp
  41dae3:	inc    esp
  41dae4:	ss sub eax,0x9aaef113
  41daea:	push   0x9812f7bd
  41daef:	fbld   TBYTE PTR [esi]
  41daf1:	jns    0x41dad1
  41daf3:	jmp    0x41db3e
  41daf5:	push   esi
  41daf6:	outs   dx,BYTE PTR ds:[esi]
  41daf7:	inc    eax
  41daf8:	out    dx,al
  41daf9:	out    0xbe,eax
  41dafb:	retf   0xf62c
  41dafe:	or     al,0x79
  41db00:	leave  
  41db01:	shr    ecx,0xc7
  41db04:	mov    WORD PTR [ebp-0x63223d1a],ss
  41db0a:	push   ecx
  41db0b:	bound  esp,QWORD PTR [ecx-0x17c838a7]
  41db11:	adc    DWORD PTR [edx-0x4],ebx
  41db14:	shl    BYTE PTR [esi-0x442f821e],1
  41db1a:	test   DWORD PTR [edx-0x5dfcd09c],esp
  41db20:	jnp    0x41daa5
  41db22:	push   es
  41db23:	push   edi
  41db24:	(bad)  
  41db25:	aam    0xe4
  41db27:	loope  0x41dba0
  41db29:	xchg   ebp,eax
  41db2a:	cmp    al,BYTE PTR [ebx]
  41db2c:	mov    eax,0xb623989a
  41db31:	in     eax,dx
  41db32:	sbb    BYTE PTR [eax+0x428b0bf5],ch
  41db38:	dec    ebp
  41db39:	shl    BYTE PTR [edx],0x7e
  41db3c:	jb     0x41db31
  41db3e:	lods   al,BYTE PTR ds:[esi]
  41db3f:	sub    bl,cl
  41db41:	and    bl,BYTE PTR [edi+0x4505e7f0]
  41db47:	pushf  
  41db48:	adc    al,0x5e
  41db4a:	xlat   BYTE PTR ds:[ebx]
  41db4b:	ins    BYTE PTR es:[edi],dx
  41db4c:	repnz add al,0x4b
  41db4f:	scas   al,BYTE PTR es:[edi]
  41db50:	(bad)
  41db55:	shr    BYTE PTR [eax-0x2a4be9cc],1
  41db5b:	pop    esi
  41db5c:	fcomp  DWORD PTR [edi]
  41db5e:	cli    
  41db5f:	jp     0x41db1b
  41db61:	pop    ebp
  41db62:	call   DWORD PTR [ecx]
  41db64:	aas    
  41db65:	sar    esi,0x10
  41db68:	cmc    
  41db69:	mov    edx,0xc1eb9663
  41db6e:	push   0xaf7f67eb
  41db73:	jnp    0x41db11
  41db75:	sbb    al,0x92
  41db77:	inc    ebp
  41db78:	frstor [eax+0x11504cd2]
  41db7e:	arpl   WORD PTR [ebp+0x4609f656],sp
  41db84:	inc    cl
  41db86:	dec    esp
  41db87:	sbb    BYTE PTR [ecx],0x2c
  41db8a:	mov    ebp,0xa03e5fd3
  41db8f:	icebp  
  41db90:	retf   0xf47e
  41db93:	adc    al,0xbe
  41db95:	mov    eax,ds:0xc6e27a6a
  41db9a:	dec    edx
  41db9b:	jns    0x41db9a
  41db9d:	(bad)
  41dba0:	scas   eax,DWORD PTR es:[edi]
  41dba1:	xor    al,0xf4
  41dba3:	inc    esi
  41dba4:	sahf   
  41dba5:	inc    eax
  41dba6:	adc    cl,dl
  41dba8:	call   0xa8ab4b36
  41dbad:	dec    ebp
  41dbae:	aaa    
  41dbaf:	sbb    DWORD PTR [eax+0x42b60487],esi
  41dbb5:	fcmovnbe st,st(5)
  41dbb7:	pop    ds
  41dbb8:	ins    BYTE PTR es:[edi],dx
  41dbb9:	mov    eax,0xa2b54f73
  41dbbe:	scas   al,BYTE PTR es:[edi]
  41dbbf:	inc    ebp
  41dbc0:	into   
  41dbc1:	stos   DWORD PTR es:[edi],eax
  41dbc2:	mov    ah,0x71
  41dbc4:	(bad)  
  41dbc5:	stos   DWORD PTR es:[edi],eax
  41dbc6:	mov    ch,0x98
  41dbc8:	in     al,dx
  41dbc9:	outs   dx,BYTE PTR ds:[esi]
  41dbca:	adc    edx,edx
  41dbcc:	sub    edx,DWORD PTR [eax+ecx*1]
  41dbcf:	and    al,0x9
  41dbd1:	jo     0x41db88
  41dbd3:	mov    dl,0xbd
  41dbd5:	lock pop eax
  41dbd7:	push   0x7c
  41dbd9:	sub    edi,DWORD PTR [ebx]
  41dbdb:	repnz add edi,ecx
  41dbde:	push   0xffffff85
  41dbe0:	push   edi
  41dbe1:	pop    esi
  41dbe2:	cmp    eax,0x43af2f67
  41dbe7:	aas    
  41dbe8:	inc    edi
  41dbe9:	rcr    DWORD PTR [edi+ebp*4-0x45d52263],cl
  41dbf0:	mov    esp,0x56559bb2
  41dbf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbf6:	(bad)  
  41dbf7:	(bad)  
  41dbf8:	pop    esi
  41dbf9:	sub    DWORD PTR [esi],esp
  41dbfb:	les    esp,FWORD PTR [eax-0x455ec1b9]
  41dc01:	retf   0x43f4
  41dc04:	adc    DWORD PTR [edi+0x459d1d51],eax
  41dc0a:	cmp    cl,ah
  41dc0c:	dec    edi
  41dc0d:	mov    esp,0x93e4e6c7
  41dc12:	adc    DWORD PTR [ebp-0x54],ebp
  41dc15:	inc    esp
  41dc16:	add    DWORD PTR [ebx],ebx
  41dc18:	daa    
  41dc19:	gs pop eax
  41dc1b:	jg     0x41dc54
  41dc1d:	ins    BYTE PTR es:[edi],dx
  41dc1e:	xchg   DWORD PTR ss:[edx+0x12232678],esp
  41dc25:	dec    ebp
  41dc26:	inc    eax
  41dc27:	je     0x41dc7a
  41dc29:	fwait
  41dc2a:	jns    0x41dc4c
  41dc2c:	jns    0x41dc1b
  41dc2e:	sub    eax,0xc47b7c2c
  41dc33:	or     BYTE PTR [edx-0x4c746604],ah
  41dc39:	sbb    bh,BYTE PTR [ebx+0x4]
  41dc3c:	adc    edx,edx
  41dc3e:	inc    edi
  41dc3f:	clc    
  41dc40:	add    eax,0xd846ef01
  41dc45:	inc    edi
  41dc46:	mov    dh,0xd9
  41dc48:	outs   dx,BYTE PTR ds:[esi]
  41dc49:	fidiv  WORD PTR [eax-0x6c]
  41dc4c:	mov    ecx,0x97d1051
  41dc51:	inc    ecx
  41dc52:	scas   eax,DWORD PTR es:[edi]
  41dc53:	xchg   esp,eax
  41dc54:	mov    cl,0x33
  41dc56:	call   0xf704:0xf8fb03b
  41dc5d:	and    BYTE PTR [edx+0x7253709e],bh
  41dc63:	dec    esi
  41dc64:	add    cl,BYTE PTR [ebp-0x55]
  41dc67:	inc    ebp
  41dc68:	ds jo  0x41dc09
  41dc6b:	sbb    edx,ebp
  41dc6d:	inc    esp
  41dc6e:	add    esi,edi
  41dc70:	(bad)  
  41dc71:	iret   
  41dc72:	dec    ebx
  41dc73:	les    esp,FWORD PTR ds:0x1b6d30fd
  41dc79:	cld    
  41dc7a:	bound  ecx,QWORD PTR [ebx+0x4e]
  41dc7d:	ins    DWORD PTR es:[edi],dx
  41dc7e:	(bad)  
  41dc7f:	pusha  
  41dc80:	daa    
  41dc81:	mov    ds:0xef5510ed,al
  41dc86:	and    al,0xdd
  41dc88:	mov    esi,0x78292dab
  41dc8d:	(bad)  
  41dc8e:	rol    BYTE PTR [eax+edx*2-0x6f],1
  41dc92:	dec    esp
  41dc93:	sar    ecx,cl
  41dc95:	xchg   ecx,eax
  41dc96:	hlt    
  41dc97:	arpl   WORD PTR [eax],bx
  41dc99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc9b:	xchg   edx,eax
  41dc9c:	mov    DWORD PTR [esi+ebp*2],esi
  41dc9f:	push   edi
  41dca0:	retf   
  41dca1:	jo     0x41dd0f
  41dca3:	out    dx,eax
  41dca4:	mov    WORD PTR [ebx-0x3f4a681d],ss
  41dcaa:	xchg   ebx,eax
  41dcab:	aad    0x8b
  41dcad:	mov    dl,0xcc
  41dcaf:	test   DWORD PTR [ebx+ebp*4-0x18],eax
  41dcb3:	fs scas al,BYTE PTR es:[edi]
  41dcb5:	mov    al,ds:0x3c572f70
  41dcba:	add    BYTE PTR ds:0xb15312e6,bh
  41dcc0:	inc    ecx
  41dcc1:	xchg   esp,eax
  41dcc2:	iret   
  41dcc3:	push   edx
  41dcc4:	cwde   
  41dcc5:	sub    esp,edx
  41dcc7:	xchg   ecx,eax
  41dcc8:	or     dh,BYTE PTR [eax]
  41dcca:	push   ds
  41dccb:	mov    edx,esp
  41dccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcce:	jge    0x41dcba
  41dcd0:	sbb    BYTE PTR [esi-0x6afa3e4b],al
  41dcd6:	cmp    BYTE PTR [ecx+ecx*2],0xf
  41dcda:	cld    
  41dcdb:	fs push ecx
  41dcdd:	sub    bl,ah
  41dcdf:	js     0x41dcaa
  41dce1:	test   eax,esp
  41dce3:	gs ret 0x7191
  41dce7:	fdiv   QWORD PTR [eax+0x2ddf7c70]
  41dced:	in     eax,dx
  41dcee:	sub    dl,BYTE PTR [ecx-0x2ed93aca]
  41dcf4:	daa    
  41dcf5:	adc    ecx,DWORD PTR [edi-0x746876c2]
  41dcfb:	scas   al,BYTE PTR es:[edi]
  41dcfc:	nop
  41dcfd:	mov    al,0x32
  41dcff:	mov    edx,0x826a5d02
  41dd04:	test   DWORD PTR [edx-0x3febf9da],edi
  41dd0a:	aam    0xe
  41dd0c:	adc    DWORD PTR ds:[edi],eax
  41dd0f:	les    esp,FWORD PTR [eax+0x51bc71bf]
  41dd15:	cmp    dh,0x88
  41dd18:	scas   eax,DWORD PTR es:[edi]
  41dd19:	test   ah,cl
  41dd1b:	xor    eax,ecx
  41dd1d:	jbe    0x41dd85
  41dd1f:	fld    DWORD PTR [ebp-0x70]
  41dd22:	and    edi,ebx
  41dd24:	mov    dh,0x95
  41dd26:	or     BYTE PTR [ebp-0x52954696],0xe5
  41dd2d:	pop    ebp
  41dd2e:	pusha  
  41dd2f:	in     al,dx
  41dd30:	add    DWORD PTR [esi],edx
  41dd32:	xchg   ecx,eax
  41dd33:	arpl   WORD PTR [eax+0x431a7555],dx
  41dd39:	das    
  41dd3a:	xchg   BYTE PTR [eax-0x9],cl
  41dd3d:	xchg   esi,eax
  41dd3e:	xchg   esp,eax
  41dd3f:	clc    
  41dd40:	xchg   ecx,eax
  41dd41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd42:	fdiv   QWORD PTR [ecx]
  41dd44:	xor    BYTE PTR [edx],al
  41dd46:	je     0x41dd81
  41dd48:	mov    al,ds:0x4d0356b
  41dd4d:	nop
  41dd4e:	loope  0x41dd0a
  41dd50:	add    DWORD PTR [edx+0x58],esi
  41dd53:	cwde   
  41dd54:	cmc    
  41dd55:	hlt    
  41dd56:	pushf  
  41dd57:	ds dec edi
  41dd59:	mov    esi,0xb61dea89
  41dd5e:	cmp    edx,esp
  41dd60:	ds jns 0x41dddb
  41dd63:	lds    eax,FWORD PTR [esi-0x55c7c46]
  41dd69:	pop    edx
  41dd6a:	and    dl,BYTE PTR [edx+0x326926b8]
  41dd70:	scas   eax,DWORD PTR es:[edi]
  41dd71:	add    DWORD PTR [esi+0x25f9032a],edi
  41dd77:	dec    esp
  41dd78:	sbb    ch,BYTE PTR [esi+0x1d]
  41dd7b:	loopne 0x41dd8a
  41dd7d:	cmp    eax,esi
  41dd7f:	push   cs
  41dd80:	sbb    edi,0xffffffe9
  41dd83:	and    ebp,edi
  41dd85:	ds cdq 
  41dd87:	dec    ebx
  41dd88:	jle    0x41dd78
  41dd8a:	stc    
  41dd8b:	stos   BYTE PTR es:[edi],al
  41dd8c:	je     0x41ddc1
  41dd8e:	into   
  41dd8f:	adc    bh,ah
  41dd91:	fstp   TBYTE PTR [esi-0x6d30bb71]
  41dd97:	call   0x697a972b
  41dd9c:	(bad)  
  41dd9d:	jecxz  0x41dded
  41dd9f:	pop    ss
  41dda0:	in     al,0x89
  41dda2:	jl     0x41ddd5
  41dda4:	loope  0x41dddb
  41dda6:	push   eax
  41dda7:	repz ss xchg esi,eax
  41ddaa:	shl    DWORD PTR [ebp+0x6e],cl
  41ddad:	sub    eax,0x7ba7883e
  41ddb2:	jge    0x41dd3e
  41ddb4:	stos   BYTE PTR es:[edi],al
  41ddb5:	push   esp
  41ddb6:	and    DWORD PTR [esi-0x69f1524f],ebp
  41ddbc:	outs   dx,BYTE PTR ds:[esi]
  41ddbd:	popf   
  41ddbe:	jmp    FWORD PTR [edx+edi*4]
  41ddc1:	aaa    
  41ddc2:	cmp    dh,BYTE PTR cs:[edi-0x52610f11]
  41ddc9:	add    DWORD PTR [ecx],esp
  41ddcb:	mov    edi,0x21254ecd
  41ddd0:	fst    DWORD PTR ds:0x4327c95f
  41ddd6:	dec    ecx
  41ddd7:	cld    
  41ddd8:	sub    DWORD PTR [ecx+edi*8-0x2df0d694],edi
  41dddf:	inc    edx
  41dde0:	neg    BYTE PTR [edi+0x28]
  41dde3:	sbb    ch,BYTE PTR [edx+0x4cfe9ec7]
  41dde9:	cmp    BYTE PTR [edx],bl
  41ddeb:	mov    ecx,0xa1a4a628
  41ddf0:	mov    eax,ds:0xbc14768f
  41ddf5:	aam    0x3e
  41ddf7:	mov    al,ds:0x5c19312b
  41ddfc:	and    DWORD PTR [ebx-0x4d],esi
  41ddff:	xor    BYTE PTR [ecx+0xc],dh
  41de02:	adc    al,0x5
  41de04:	out    dx,al
  41de05:	(bad)  
  41de06:	jecxz  0x41de38
  41de08:	sub    DWORD PTR [eax],esi
  41de0a:	pop    esi
  41de0b:	mov    esi,0x4a595a6f
  41de10:	lock pop ds
  41de12:	jns    0x41dde7
  41de14:	push   ecx
  41de15:	(bad)  
  41de17:	hlt    
  41de18:	nop
  41de19:	outs   dx,DWORD PTR ds:[esi]
  41de1a:	push   edi
  41de1b:	inc    esi
  41de1c:	pop    ebp
  41de1d:	mov    ebx,0xd2e77863
  41de22:	pushf  
  41de23:	sub    esp,edi
  41de25:	inc    ecx
  41de26:	jmp    0x41de2a
  41de28:	mov    gs,WORD PTR [ecx+0x71]
  41de2b:	cld    
  41de2c:	pop    ecx
  41de2d:	mov    ebp,0x7c91de78
  41de32:	mov    esi,0x237920b6
  41de37:	fld    st(0)
  41de39:	xor    DWORD PTR [ebp-0x49],ecx
  41de3c:	rcr    DWORD PTR [ecx*8+0x463b8059],1
  41de43:	xchg   ebx,eax
  41de44:	mov    esi,0x859c11f5
  41de49:	addr16 jo 0x41dde2
  41de4c:	jg     0x41ddd5
  41de4e:	fwait
  41de4f:	jnp    0x41de30
  41de51:	sub    eax,0x35d1ca10
  41de56:	push   ds
  41de57:	cld    
  41de58:	mov    cl,0xe3
  41de5a:	sub    dl,cl
  41de5c:	adc    al,0xef
  41de5e:	ja     0x41dec2
  41de60:	ins    BYTE PTR es:[edi],dx
  41de61:	push   ds
  41de62:	pop    eax
  41de63:	sbb    DWORD PTR [ecx+0x66],ebp
  41de66:	out    0xf3,eax
  41de68:	dec    ebx
  41de69:	sbb    eax,0x754a3c4c
  41de6e:	sbb    al,0x4d
  41de71:	push   ds
  41de72:	jg     0x41de55
  41de74:	mov    edx,0x169a04ba
  41de79:	xor    eax,0xa2e19c23
  41de7e:	retf   
  41de7f:	adc    edx,ebx
  41de81:	(bad)  
  41de82:	ds sahf 
  41de84:	ret    
  41de85:	sbb    al,0x2a
  41de87:	and    eax,0x3c2ac19e
  41de8c:	dec    edi
  41de8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de8e:	or     ecx,DWORD PTR [eax+0x60]
  41de91:	add    bh,0x15
  41de94:	push   esi
  41de95:	dec    eax
  41de96:	add    ah,BYTE PTR [ecx-0xc]
  41de99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de9a:	neg    ebx
  41de9c:	popf   
  41de9d:	test   DWORD PTR [ebx+0x70d43e30],edx
  41dea3:	data16 sub BYTE PTR [edx],ch
  41dea6:	add    esp,DWORD PTR ds:0xd3eb8f78
  41deac:	cld    
  41dead:	mov    dh,0xf7
  41deaf:	push   ebp
  41deb0:	and    bh,BYTE PTR [eax-0x2e2e4282]
  41deb6:	sar    BYTE PTR [ebp+esi*2+0x26],cl
  41deba:	mov    edx,0x58c5811
  41debf:	lods   eax,DWORD PTR ds:[esi]
  41dec0:	daa    
  41dec1:	jge    0x41de6d
  41dec3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dec4:	push   0xe
  41dec6:	js     0x41de67
  41dec8:	and    al,0x59
  41deca:	into   
  41decb:	mov    al,ds:0x546b292d
  41ded0:	mov    edx,ebx
  41ded2:	jmp    0x2b767154
  41ded7:	out    0x25,al
  41ded9:	adc    DWORD PTR [ecx+ebp*8+0x3887d7a7],0x3b
  41dee1:	fisub  DWORD PTR [edx-0x39]
  41dee4:	mov    ds:0xa77fe0d4,al
  41dee9:	mov    bl,0x48
  41deeb:	pushf  
  41deec:	and    dh,dl
  41deee:	and    eax,DWORD PTR [ebp-0x3ad543ea]
  41def4:	sbb    al,0x3a
  41def6:	arpl   si,ax
  41def8:	jmp    FWORD PTR [ecx+0x64]
  41defb:	sbb    ecx,DWORD PTR [edi-0x2e]
  41defe:	pop    eax
  41deff:	add    DWORD PTR [edx+0x2cebb979],eax
  41df05:	cmp    BYTE PTR [esi],bl
  41df07:	inc    ecx
  41df08:	cwde   
  41df09:	imul   esp,DWORD PTR [esi],0xc9e855ca
  41df0f:	mul    DWORD PTR [esi-0x5712b84f]
  41df15:	cdq    
  41df16:	and    eax,0x11ae1497
  41df1b:	loope  0x41df26
  41df1d:	sub    edx,DWORD PTR [edx]
  41df1f:	push   ds
  41df20:	sub    eax,DWORD PTR [edx]
  41df22:	loopne 0x41dee0
  41df24:	push   ecx
  41df25:	sub    eax,0x3f086a4e
  41df2a:	push   esp
  41df2b:	ins    BYTE PTR es:[edi],dx
  41df2c:	cmp    al,0x5c
  41df2e:	pusha  
  41df2f:	js     0x41df70
  41df31:	cmp    ebp,ebx
  41df33:	outs   dx,DWORD PTR ds:[esi]
  41df34:	out    0xbf,al
  41df36:	repz pop ebp
  41df38:	retf   
  41df39:	and    dh,BYTE PTR [ecx-0x38]
  41df3c:	int    0x89
  41df3e:	sbb    al,0x94
  41df40:	in     eax,0xb8
  41df42:	jnp    0x41ded6
  41df44:	sahf   
  41df45:	inc    ebx
  41df46:	lea    esp,[esi-0x2c]
  41df49:	bound  esi,QWORD PTR [edi]
  41df4b:	push   ebp
  41df4c:	in     al,0x57
  41df4e:	mov    ah,0xb1
  41df50:	fisttp QWORD PTR [edx-0x5c]
  41df53:	jle    0x41ded5
  41df55:	cdq    
  41df56:	fimul  DWORD PTR [edi+0x44]
  41df59:	mov    WORD PTR [ecx-0x55],ds
  41df5c:	pop    esp
  41df5d:	pop    edi
  41df5e:	cmp    edx,edi
  41df60:	fcomp  QWORD PTR ds:0x93a7f232
  41df66:	mov    bl,0x0
  41df68:	jg     0x41dfd5
  41df6a:	mov    dh,0xce
  41df6c:	xchg   ecx,eax
  41df6d:	ins    BYTE PTR es:[edi],dx
  41df6e:	fiadd  DWORD PTR [eax]
  41df70:	popf   
  41df71:	and    eax,ebx
  41df73:	es pop ecx
  41df75:	xor    DWORD PTR [esi+0x1a],edi
  41df78:	jnp    0x41df81
  41df7a:	cmp    cl,BYTE PTR [ebp+0x693a3eaa]
  41df80:	mov    gs,WORD PTR [ebx-0x70]
  41df83:	inc    eax
  41df84:	xchg   esi,eax
  41df85:	add    bl,BYTE PTR [ecx+0x13767ab]
  41df8b:	aaa    
  41df8c:	loope  0x41df67
  41df8e:	ins    DWORD PTR es:[edi],dx
  41df8f:	push   0x2b6c1e8c
  41df94:	push   ds
  41df95:	icebp  
  41df96:	inc    ebx
  41df97:	aad    0x7c
  41df99:	int3   
  41df9a:	cld    
  41df9b:	inc    eax
  41df9c:	in     al,0x7b
  41df9e:	xlat   BYTE PTR cs:[ebx]
  41dfa0:	inc    bx
  41dfa2:	cmp    al,0xba
  41dfa4:	pushf  
  41dfa5:	pop    ss
  41dfa6:	pop    ecx
  41dfa7:	jae    0x41dfe3
  41dfa9:	mov    ecx,0x3efc6745
  41dfaf:	adc    esp,DWORD PTR [eax]
  41dfb1:	ins    DWORD PTR es:[edi],dx
  41dfb2:	dec    ebx
  41dfb3:	jg     0x41df45
  41dfb5:	aaa    
  41dfb6:	cmp    DWORD PTR [edi-0x71],edi
  41dfb9:	mov    ds:0xb7ed0ce0,eax
  41dfbe:	pop    ebx
  41dfbf:	xchg   ah,al
  41dfc1:	into   
  41dfc2:	call   0x6f6346b7
  41dfc7:	add    DWORD PTR [esi-0x5cb18db4],ebp
  41dfcd:	mov    DWORD PTR [ecx-0x76d5e492],ebx
  41dfd3:	loopne 0x41df6e
  41dfd5:	pop    ebp
  41dfd6:	jmp    0x5c8d:0x3378e9b
  41dfdd:	fst    QWORD PTR [ecx]
  41dfdf:	test   al,0x84
  41dfe1:	ss dec ebx
  41dfe3:	pop    esi
  41dfe4:	xor    bh,BYTE PTR [ebp+0x3d]
  41dfe7:	lea    ecx,[ebp+0x2af11ec1]
  41dfed:	sti    
  41dfee:	in     al,dx
  41dfef:	sbb    al,0x7e
  41dff1:	cli    
  41dff2:	lods   eax,DWORD PTR ds:[esi]
  41dff3:	mov    eax,ds:0x8627a745
  41dff8:	mov    ebp,0x6f59f004
  41dffd:	or     edx,DWORD PTR [edx]
  41dfff:	(bad)  
  41e000:	mov    ah,0xb7
  41e002:	in     al,dx
  41e003:	retf   
  41e004:	in     al,dx
  41e005:	mov    WORD PTR [edx+0x60355edf],?
  41e00b:	cmp    eax,0x5b55b5f7
  41e010:	ret    0xc669
  41e013:	inc    ecx
  41e014:	pop    es
  41e015:	test   al,0x4
  41e017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e018:	les    ebp,FWORD PTR ds:0x93d0f2d0
  41e01e:	jg     0x41dfda
  41e020:	jp     0x41dfb5
  41e022:	(bad)  
  41e023:	mov    ch,0x6d
  41e025:	mov    ah,0x6e
  41e027:	xor    eax,DWORD PTR [edi+0x7eb9d8ce]
  41e02d:	dec    esi
  41e02e:	ins    DWORD PTR es:[edi],dx
  41e02f:	mov    esi,0xd1fd842
  41e034:	enter  0x9919,0xdb
  41e038:	mov    edi,0x9d14235f
  41e03d:	inc    ebp
  41e03e:	loopne 0x41e026
  41e040:	dec    esp
  41e041:	pop    ebx
  41e042:	push   ecx
  41e043:	xchg   esi,eax
  41e044:	loop   0x41dfde
  41e046:	call   0xf1576729
  41e04b:	push   0x34
  41e04d:	ret    0x662c
  41e050:	mov    cl,0x10
  41e052:	or     dh,BYTE PTR [edi]
  41e054:	inc    edi
  41e055:	(bad)  
  41e056:	pushf  
  41e057:	add    BYTE PTR [ecx-0x4db6386f],ah
  41e05d:	sub    bl,0xe4
  41e060:	mov    esp,0x3a1a2016
  41e065:	or     ebx,DWORD PTR [ecx]
  41e067:	push   esp
  41e068:	xor    al,0xc0
  41e06a:	mov    edi,0xf2bf02f8
  41e06f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e070:	add    eax,0xaf5d5e48
  41e075:	pop    es
  41e076:	xchg   esi,esi
  41e078:	int3   
  41e079:	pop    edi
  41e07a:	dec    eax
  41e07b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e07c:	icebp  
  41e07d:	adc    al,0xc4
  41e07f:	push   0xffffffc3
  41e081:	aas    
  41e082:	mov    dl,0x26
  41e084:	mov    al,0x1b
  41e086:	aam    0x1c
  41e088:	jb     0x41e04a
  41e08a:	mov    cl,0x5c
  41e08c:	mov    ebx,0x8e75f31c
  41e091:	push   esp
  41e092:	aaa    
  41e093:	mov    ds,WORD PTR [ebp-0x5b]
  41e096:	inc    esi
  41e097:	ds stos BYTE PTR es:[edi],al
  41e099:	jns    0x41e091
  41e09b:	fistp  WORD PTR [esi+ecx*4-0x3eda9e03]
  41e0a2:	shl    edi,cl
  41e0a4:	inc    ecx
  41e0a5:	xor    dh,BYTE PTR [ebx-0xe62cb9a]
  41e0ab:	inc    ecx
  41e0ac:	sbb    dl,BYTE PTR [esi+0x22]
  41e0af:	repz pop esp
  41e0b1:	sbb    al,0x32
  41e0b3:	fld    QWORD PTR [esi+ebx*2-0x74]
  41e0b7:	cs (bad) 
  41e0b9:	cmc    
  41e0ba:	mov    edx,0xba1ff883
  41e0bf:	je     0x41e11a
  41e0c1:	dec    ebp
  41e0c2:	and    BYTE PTR [ebx+0x0],0xed
  41e0c6:	inc    edi
  41e0c7:	jge    0x41e053
  41e0c9:	in     al,dx
  41e0ca:	jno    0x41e0f1
  41e0cc:	test   DWORD PTR [edx-0x1c1d01fc],edi
  41e0d2:	and    ebp,DWORD PTR [edi+0x1]
  41e0d5:	lahf   
  41e0d6:	ror    ch,1
  41e0d8:	out    0xe,eax
  41e0da:	cdq    
  41e0db:	xor    dh,ch
  41e0dd:	in     eax,0x30
  41e0df:	mov    bl,0x71
  41e0e1:	(bad)  
  41e0e2:	imul   esi,edx,0xb92a0691
  41e0e8:	dec    edi
  41e0e9:	fwait
  41e0ea:	mov    esi,0x5645cd0a
  41e0ef:	arpl   bx,sp
  41e0f1:	sub    al,dl
  41e0f3:	into   
  41e0f4:	pop    ecx
  41e0f5:	mov    bl,0x71
  41e0f7:	aad    0x51
  41e0f9:	add    ebx,DWORD PTR [ecx-0x7f766000]
  41e0ff:	mov    ah,BYTE PTR [ebx+0x59e10664]
  41e105:	sbb    esi,DWORD PTR [edi-0x63]
  41e108:	cmc    
  41e109:	dec    eax
  41e10a:	shr    bl,0x50
  41e10d:	pop    ecx
  41e10e:	scas   al,BYTE PTR es:[edi]
  41e10f:	dec    esi
  41e110:	xchg   DWORD PTR [eax+0x25b0eccf],esp
  41e116:	test   al,0x61
  41e118:	jl     0x41e0f8
  41e11a:	(bad)  
  41e11b:	fwait
  41e11c:	pop    ebp
  41e11d:	int3   
  41e11e:	icebp  
  41e11f:	ror    BYTE PTR [esi],1
  41e121:	pop    ecx
  41e122:	es loope 0x41e0f7
  41e125:	push   cs
  41e126:	mov    esp,0x7fd19dc2
  41e12b:	sub    cl,BYTE PTR [esp+eax*8+0x34]
  41e12f:	dec    ebx
  41e130:	lahf   
  41e131:	fsubr  QWORD PTR [ebx+ebp*1-0x20]
  41e135:	ins    DWORD PTR es:[edi],dx
  41e136:	in     al,0x1
  41e138:	movq   mm6,mm0
  41e13b:	dec    esp
  41e13c:	dec    edx
  41e13d:	neg    BYTE PTR [ecx]
  41e13f:	mov    ebp,0xc868a85e
  41e144:	in     al,0xfa
  41e146:	out    dx,al
  41e147:	jmp    0x41e152
  41e149:	cmc    
  41e14a:	int3   
  41e14b:	xor    eax,0x1eda7cf2
  41e150:	test   esp,ebx
  41e152:	sub    eax,0x735389ce
  41e157:	scas   al,BYTE PTR es:[edi]
  41e158:	mov    eax,DWORD PTR [ebx+0x5491f05]
  41e15e:	imul   ebx,DWORD PTR [ebx+eax*8-0x6e],0x595f8c9
  41e166:	xor    eax,0xeff89de6
  41e16b:	sbb    esi,esi
  41e16d:	dec    ebp
  41e16e:	jno    0x41e1a7
  41e170:	pop    ebp
  41e171:	and    dh,BYTE PTR [edi+0x32]
  41e174:	push   ebx
  41e175:	add    BYTE PTR [edx+esi*8+0x1a],al
  41e179:	fmul   QWORD PTR [ecx]
  41e17b:	xor    DWORD PTR [ebp+0x5c5b2466],edx
  41e181:	shl    BYTE PTR [ebx-0x1927aecf],1
  41e187:	adc    BYTE PTR [esp+eax*1],al
  41e18a:	sub    DWORD PTR [ebp+0x3e07271d],ebx
  41e190:	bound  esi,QWORD PTR [esp+edi*2]
  41e193:	(bad)  
  41e194:	rcl    DWORD PTR [ecx-0x47],1
  41e197:	fmul   QWORD PTR [ebx]
  41e199:	sub    eax,0x22ba7fb
  41e19e:	mov    ch,0x2
  41e1a0:	adc    eax,DWORD PTR [esi-0x3]
  41e1a3:	or     al,BYTE PTR [edi]
  41e1a5:	in     eax,dx
  41e1a6:	and    edx,ebp
  41e1a8:	pushf  
  41e1a9:	and    BYTE PTR [ebx-0x5866dcab],cl
  41e1af:	repz jmp 0x91763838
  41e1b5:	xor    DWORD PTR [ebx-0x7ec00651],0x20663cdc
  41e1bf:	dec    ecx
  41e1c0:	push   edi
  41e1c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1c2:	or     al,0xe0
  41e1c4:	out    dx,eax
  41e1c5:	mov    edi,0x7ae6e90b
  41e1ca:	xchg   ebp,eax
  41e1cb:	cmc    
  41e1cc:	push   cs
  41e1cd:	xor    ah,BYTE PTR ds:0x6ac3bb09
  41e1d3:	mov    ch,0xa9
  41e1d5:	pop    es
  41e1d6:	int3   
  41e1d7:	shl    ch,0x70
  41e1da:	test   BYTE PTR [edi+0x61],al
  41e1dd:	cmp    eax,0x5f84e112
  41e1e2:	data16 int 0xe
  41e1e5:	jle    0x41e1de
  41e1e7:	jmp    ecx
  41e1e9:	push   ebx
  41e1ea:	add    DWORD PTR [edx+eax*1],0xdc9eed5d
  41e1f1:	cld    
  41e1f2:	sbb    al,0x33
  41e1f4:	pop    ebx
  41e1f5:	dec    DWORD PTR [edi]
  41e1f7:	push   edi
  41e1f8:	or     al,0x8c
  41e1fa:	mov    ebx,0xe3320fa
  41e1ff:	pop    esi
  41e200:	or     eax,0x231d1d65
  41e205:	loopne 0x41e24c
  41e207:	stos   BYTE PTR es:[edi],al
  41e208:	setnp  BYTE PTR ds:0xa714dbcd
  41e20f:	mov    edi,0x10d09553
  41e214:	xor    eax,0xb86b8a69
  41e219:	jbe    0x41e283
  41e21b:	sbb    DWORD PTR [esi],esp
  41e21d:	ret    
  41e21e:	repz push es
  41e220:	xchg   DWORD PTR [ebx-0x185db36a],ebp
  41e226:	xlat   BYTE PTR ds:[ebx]
  41e227:	xchg   ecx,eax
  41e228:	fs dec eax
  41e22a:	cmp    DWORD PTR [ecx],ebx
  41e22c:	mov    ds:0xe096ad1a,eax
  41e231:	jns    0x41e24b
  41e233:	fdivr  DWORD PTR [esi+esi*2-0x5b]
  41e237:	vhsubpd ymm2,ymm3,ymm0
  41e23b:	mov    ah,0x3f
  41e23d:	fisub  DWORD PTR [esi+ecx*1-0x7b]
  41e241:	adc    ecx,DWORD PTR [esi]
  41e243:	and    ecx,DWORD PTR [esp-0x6c]
  41e247:	pop    ebx
  41e248:	sub    ch,BYTE PTR [eax-0x1d]
  41e24b:	pop    esi
  41e24c:	js     0x41e244
  41e24e:	mov    eax,ds:0x7cbcc25f
  41e253:	je     0x41e29c
  41e255:	arpl   WORD PTR [edx],dx
  41e257:	jne    0x41e276
  41e259:	dec    ebx
  41e25a:	pop    ds
  41e25b:	lods   al,BYTE PTR ds:[esi]
  41e25c:	push   0xfffffffd
  41e25e:	outs   dx,BYTE PTR ds:[esi]
  41e25f:	cmc    
  41e260:	push   esp
  41e261:	mov    bl,0xa3
  41e263:	dec    edx
  41e264:	mov    al,0xf1
  41e266:	es mov eax,0x4f54365c
  41e26c:	ret    0xa0ee
  41e26f:	xor    DWORD PTR [edi+0x22cd1799],edx
  41e275:	jmp    0x41e2a2
  41e277:	test   eax,0xd7c33752
  41e27c:	pop    esi
  41e27d:	adc    eax,0xeb8955bc
  41e282:	lods   al,BYTE PTR ds:[esi]
  41e283:	and    DWORD PTR [ebx+ebx*4+0x1063a375],edx
  41e28a:	dec    ebx
  41e28b:	cli    
  41e28c:	mov    DWORD PTR [ecx+0x3a],eax
  41e28f:	sbb    BYTE PTR ds:0x8d8d5362,0x7d
  41e296:	dec    ebp
  41e297:	push   ebp
  41e298:	xchg   edi,eax
  41e299:	add    DWORD PTR [ebx+edi*8+0x1a],esi
  41e29d:	mov    dl,0x79
  41e29f:	leave  
  41e2a0:	fimul  DWORD PTR [ebx]
  41e2a2:	dec    eax
  41e2a3:	rol    bh,cl
  41e2a5:	inc    ebp
  41e2a6:	sbb    edx,ebx
  41e2a8:	pop    eax
  41e2a9:	cmc    
  41e2aa:	retf   
  41e2ab:	shl    ebx,0x42
  41e2ae:	pop    ecx
  41e2af:	or     al,0xdb
  41e2b1:	enter  0xb1fd,0xb
  41e2b5:	ret    0x843
  41e2b8:	lea    ecx,[ecx-0x10e00bfb]
  41e2be:	fadd   DWORD PTR [edx]
  41e2c0:	(bad)  [ebx-0x53]
  41e2c3:	mov    ah,0xa1
  41e2c5:	rcr    DWORD PTR [edx-0x45a7a33e],cl
  41e2cb:	mov    edi,0xe1a31102
  41e2d0:	mov    bh,0x69
  41e2d2:	xor    eax,0x339d7f23
  41e2d7:	aad    0x4e
  41e2d9:	rcr    BYTE PTR ds:0x5a2e8dab,0x4c
  41e2e0:	jb     0x41e315
  41e2e2:	in     al,dx
  41e2e3:	adc    DWORD PTR [edi+0x6d],ebx
  41e2e6:	or     al,0xd0
  41e2e8:	adc    dl,BYTE PTR [edi-0x7bfd7e63]
  41e2ee:	and    DWORD PTR [esi-0x39b1ea73],0x4dde21a3
  41e2f8:	adc    ebp,ebp
  41e2fa:	scas   eax,DWORD PTR es:[edi]
  41e2fb:	xchg   ecx,eax
  41e2fc:	scas   eax,DWORD PTR es:[edi]
  41e2fd:	adc    ch,BYTE PTR [edx+esi*1+0x0]
  41e301:	jmp    0x88976fb3
  41e306:	ret    0xea5
  41e309:	mov    dl,0x3a
  41e30b:	iret   
  41e30c:	push   0xbab02a11
  41e311:	sbb    eax,ebp
  41e313:	(bad)  
  41e314:	pusha  
  41e315:	sbb    BYTE PTR [edi+edx*1],cl
  41e318:	ficom  DWORD PTR [esi-0x4f85727d]
  41e31e:	pop    eax
  41e31f:	aad    0xe3
  41e321:	(bad)  
  41e322:	and    eax,0x27e0f714
  41e327:	sub    BYTE PTR [edx+0x16],bh
  41e32a:	pop    ebp
  41e32b:	call   0x21f8:0x62af7bc1
  41e332:	and    ch,BYTE PTR [eax]
  41e334:	and    DWORD PTR [edi],ebx
  41e336:	in     al,dx
  41e337:	js     0x41e2d1
  41e339:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e33a:	dec    ebx
  41e33b:	mov    cl,0x27
  41e33d:	neg    esp
  41e33f:	sub    al,0x6a
  41e341:	rcl    DWORD PTR [edi-0x24],cl
  41e344:	lahf   
  41e345:	mov    edx,0x8a2f7d73
  41e34a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e34b:	call   0xebbd:0x6503782
  41e352:	mov    bh,0x74
  41e354:	jno    0x41e34d
  41e356:	push   ss
  41e357:	mov    ecx,0xd83bc8e
  41e35c:	xchg   ebx,eax
  41e35d:	fwait
  41e35e:	or     ecx,DWORD PTR [esi+0x42021fbb]
  41e364:	sub    edi,eax
  41e366:	dec    DWORD PTR [ecx+0x2cdc924]
  41e36c:	jmp    0x41e3b6
  41e36e:	mov    ds:0x71aa3716,eax
  41e373:	test   DWORD PTR ds:0x5468a7f,esi
  41e379:	iret   
  41e37a:	xlat   BYTE PTR ds:[ebx]
  41e37b:	loop   0x41e32e
  41e37d:	std    
  41e37e:	sbb    esi,esi
  41e380:	push   esi
  41e381:	fbstp  TBYTE PTR [ecx]
  41e383:	xor    ecx,esp
  41e385:	cmp    al,dl
  41e387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e388:	pop    ds
  41e389:	xchg   edx,eax
  41e38a:	nop
  41e38b:	add    ebx,DWORD PTR [ecx]
  41e38d:	fisubr DWORD PTR [esi]
  41e38f:	aam    0xcf
  41e391:	imul   ebx,esi,0x93d3a8f0
  41e397:	sbb    BYTE PTR es:[eax],bh
  41e39a:	and    BYTE PTR [edi+0x771b9a44],bl
  41e3a0:	jle    0x41e35e
  41e3a2:	and    eax,0xb45784b7
  41e3a7:	add    ebx,DWORD PTR [ebx+0x63fe7a93]
  41e3ad:	mov    esi,0x1008ea83
  41e3b2:	jo     0x41e3dd
  41e3b4:	adc    al,0x83
  41e3b6:	les    ebx,FWORD PTR [ecx+0x25df1676]
  41e3bc:	cli    
  41e3bd:	fwait
  41e3be:	rcr    DWORD PTR [eax+0x39],cl
  41e3c1:	dec    eax
  41e3c2:	das    
  41e3c3:	push   esi
  41e3c4:	sub    ebx,esp
  41e3c6:	inc    esi
  41e3c7:	shr    cl,0xb4
  41e3ca:	pop    edi
  41e3cb:	sti    
  41e3cc:	popf   
  41e3cd:	pop    es
  41e3ce:	mov    dh,0xb3
  41e3d0:	xlat   BYTE PTR ds:[ebx]
  41e3d1:	jecxz  0x41e36c
  41e3d3:	pop    eax
  41e3d4:	mov    al,0x30
  41e3d6:	xchg   ebx,eax
  41e3d7:	jmp    0x41e3ce
  41e3d9:	pusha  
  41e3da:	dec    esi
  41e3db:	push   ecx
  41e3dc:	jno    0x41e3ca
  41e3de:	pop    ss
  41e3df:	adc    al,0x3d
  41e3e1:	xchg   esp,eax
  41e3e2:	adc    ebx,DWORD PTR [eax]
  41e3e4:	fld    QWORD PTR [edi-0x2520da89]
  41e3ea:	add    edx,DWORD PTR [esi+0x62]
  41e3ed:	jns    0x41e3ea
  41e3ef:	and    DWORD PTR [esi+0xe28b8c1],ebp
  41e3f5:	call   0xd60f41e4
  41e3fa:	add    esp,DWORD PTR ds:0x3692d3d7
  41e400:	or     al,0x78
  41e402:	fimul  WORD PTR [esi]
  41e404:	dec    edi
  41e405:	mov    cl,0x1a
  41e407:	mov    DWORD PTR [edx],0xaaa3e5c0
  41e40d:	mov    bl,0xed
  41e40f:	sub    BYTE PTR [ecx],0x44
  41e412:	in     eax,0x1c
  41e414:	popf   
  41e415:	fnstenv [ebx]
  41e417:	or     BYTE PTR [ecx-0x5b],0x2
  41e41b:	fdiv   QWORD PTR [eax-0x75f67989]
  41e421:	and    BYTE PTR [esi-0x72cb2ce],bl
  41e427:	lds    ebx,FWORD PTR [eax-0x4b421117]
  41e42d:	sbb    ebp,DWORD PTR [esi]
  41e42f:	inc    edx
  41e430:	or     esp,0x89d457af
  41e436:	(bad)  
  41e437:	cmp    eax,0x999d8899
  41e43c:	sahf   
  41e43d:	dec    esi
  41e43e:	repnz fistp QWORD PTR [esi-0x26]
  41e442:	jbe    0x41e4ab
  41e444:	in     eax,0x81
  41e446:	test   al,0x7f
  41e448:	lods   al,BYTE PTR ds:[esi]
  41e449:	popa   
  41e44a:	or     bh,ah
  41e44c:	nop
  41e44d:	xchg   DWORD PTR [edx],edi
  41e44f:	sbb    ebx,DWORD PTR [eax]
  41e451:	mov    dl,BYTE PTR [eax+esi*1-0x6d]
  41e455:	lahf   
  41e456:	jle    0x41e499
  41e458:	add    BYTE PTR [edx+ebp*4+0x12],al
  41e45c:	das    
  41e45d:	aaa    
  41e45e:	rcr    DWORD PTR [ebx+eax*1],0xf7
  41e462:	lea    edx,[esi]
  41e464:	into   
  41e465:	ret    
  41e466:	hlt    
  41e467:	(bad)  
  41e468:	cmp    esp,DWORD PTR [ecx]
  41e46a:	fcomp  DWORD PTR [esp+esi*2+0x2c]
  41e46e:	cld    
  41e46f:	loop   0x41e422
  41e471:	shr    DWORD PTR [esi+0x97cb620],0x35
  41e478:	sub    al,0xc6
  41e47a:	push   eax
  41e47b:	mov    cl,0xc7
  41e47d:	sub    BYTE PTR [ebp-0x5a],bl
  41e480:	push   esp
  41e481:	lods   eax,DWORD PTR ds:[esi]
  41e482:	push   ecx
  41e483:	cs out 0x80,al
  41e486:	xor    BYTE PTR cs:[edi],bl
  41e489:	fbld   TBYTE PTR [ebp+0x4296d556]
  41e48f:	(bad)  
  41e490:	sub    ecx,DWORD PTR [ecx]
  41e492:	pop    ebp
  41e493:	mov    esi,0xcd4cea47
  41e498:	ret    0x589
  41e49b:	mov    esp,0x639922a7
  41e4a0:	je     0x41e4d1
  41e4a2:	sbb    al,BYTE PTR [ebx+0x41]
  41e4a5:	jno    0x41e4da
  41e4a7:	inc    ecx
  41e4a8:	mov    ebx,0x479598fd
  41e4ad:	ss jo  0x41e43c
  41e4b0:	arpl   WORD PTR [edi],ax
  41e4b2:	dec    eax
  41e4b3:	shr    DWORD PTR ds:0xd225a308,0x0
  41e4ba:	aaa    
  41e4bb:	mov    esp,0xeeb0d552
  41e4c0:	mov    edx,eax
  41e4c2:	and    DWORD PTR [eax+ebx*2+0x916df55],ebp
  41e4c9:	test   al,0x6a
  41e4cb:	fwait
  41e4cc:	mov    cl,bh
  41e4ce:	adc    edi,ebx
  41e4d0:	xor    DWORD PTR [eax],ebp
  41e4d2:	dec    ebp
  41e4d3:	lahf   
  41e4d4:	test   BYTE PTR [esp+ecx*1+0x74ba7c8d],dh
  41e4db:	jl     0x41e478
  41e4dd:	xor    bh,cl
  41e4df:	daa    
  41e4e0:	add    edi,DWORD PTR [edx-0x2c]
  41e4e3:	into   
  41e4e4:	cmp    eax,0x6d77fe7d
  41e4e9:	scas   al,BYTE PTR es:[edi]
  41e4ea:	mov    ds:0x7355e2db,eax
  41e4ef:	mov    cl,0x2b
  41e4f1:	repnz push esp
  41e4f3:	mov    dl,0x6c
  41e4f5:	pushf  
  41e4f6:	cmp    al,0x3d
  41e4f8:	out    0x1,eax
  41e4fa:	(bad)  
  41e4fb:	sbb    al,0x78
  41e4fd:	cs cmp al,0x78
  41e500:	leave  
  41e501:	stc    
  41e502:	mov    ch,0xc8
  41e504:	in     eax,dx
  41e505:	sub    BYTE PTR [ecx-0x643db948],bl
  41e50b:	xchg   ch,ah
  41e50d:	call   0xeb4f4896
  41e512:	(bad)  
  41e513:	lods   eax,DWORD PTR ds:[esi]
  41e514:	xchg   BYTE PTR [edx+ebx*1+0x1b],al
  41e518:	stos   DWORD PTR es:[edi],eax
  41e519:	stc    
  41e51a:	pushf  
  41e51b:	je     0x41e57d
  41e51d:	dec    edx
  41e51e:	adc    ch,BYTE PTR [ebx]
  41e520:	jecxz  0x41e4f4
  41e522:	repz ror BYTE PTR [esi-0x1efce106],0xd4
  41e52a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e52b:	cdq    
  41e52c:	(bad)  
  41e52d:	fisttp WORD PTR [edi+0x60b4bfce]
  41e533:	pop    ss
  41e534:	pop    es
  41e535:	jns    0x41e4f1
  41e537:	bound  eax,QWORD PTR [ebx]
  41e539:	mov    al,0x29
  41e53b:	push   eax
  41e53c:	and    BYTE PTR [esi-0x63],bh
  41e53f:	fsub   DWORD PTR [esi]
  41e541:	pop    edx
  41e542:	add    al,0x10
  41e544:	mov    cl,0x3d
  41e546:	bound  edi,QWORD PTR [esi-0x3]
  41e549:	mov    eax,ds:0x23ccf4af
  41e54e:	add    dh,BYTE PTR [ebp+0x5677adf2]
  41e554:	jnp    0x41e50e
  41e556:	dec    eax
  41e557:	repnz iret 
  41e559:	das    
  41e55a:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41e55c:	test   al,0xdf
  41e55e:	push   es
  41e55f:	pop    esp
  41e560:	pop    esp
  41e561:	call   0xebb44bcd
  41e566:	dec    edi
  41e567:	loope  0x41e5cc
  41e569:	pop    ecx
  41e56a:	or     cl,0x35
  41e56d:	push   ebx
  41e56e:	jmp    0x41e590
  41e570:	call   DWORD PTR [edi+0x67]
  41e573:	out    0x77,eax
  41e575:	loop   0x41e58c
  41e577:	mov    ebp,0x8874d744
  41e57c:	mov    ebp,0x9c3ccd6c
  41e581:	xor    DWORD PTR [ecx+0x63],edx
  41e584:	pop    ds
  41e585:	nop
  41e586:	mov    ch,0xac
  41e588:	push   eax
  41e589:	(bad)  
  41e58b:	xlat   BYTE PTR ds:[ebx]
  41e58c:	and    BYTE PTR [eax-0x1ae005ec],cl
  41e592:	test   al,0xc9
  41e594:	add    eax,0xe42c7871
  41e599:	(bad)  [eax]
  41e59b:	sti    
  41e59c:	mov    WORD PTR [esi+0x5e20a3aa],gs
  41e5a2:	push   edi
  41e5a3:	fcomp  QWORD PTR fs:[eax+0x67]
  41e5a7:	mov    cl,0x4d
  41e5a9:	and    DWORD PTR [eax],edx
  41e5ab:	sbb    bl,0x9
  41e5ae:	or     al,BYTE PTR [edi+0x7fb8a010]
  41e5b4:	xor    cl,dl
  41e5b6:	fcomp  QWORD PTR [ebx+0x4c568316]
  41e5bc:	loope  0x41e5b6
  41e5be:	cmc    
  41e5bf:	dec    esp
  41e5c0:	shl    BYTE PTR [esi],cl
  41e5c2:	add    DWORD PTR [ebx],ecx
  41e5c4:	stc    
  41e5c5:	add    eax,0xea6c6124
  41e5ca:	adc    bl,BYTE PTR [edi+0x7708629d]
  41e5d0:	mov    edx,0x320b7a2f
  41e5d5:	dec    edx
  41e5d6:	adc    al,0x21
  41e5d8:	mov    ch,0x7f
  41e5da:	icebp  
  41e5db:	hlt    
  41e5dc:	mov    BYTE PTR [ebx+edx*8],al
  41e5df:	dec    edx
  41e5e0:	add    eax,0x315e947b
  41e5e5:	or     eax,DWORD PTR [eax+0x18]
  41e5e8:	jbe    0x41e5f0
  41e5ea:	or     DWORD PTR [ecx+0x21],0xffffffd3
  41e5ee:	fcomi  st,st(1)
  41e5f0:	out    dx,eax
  41e5f1:	cmp    DWORD PTR [eax+edx*4-0x1674c994],esi
  41e5f8:	cs pop ss
  41e5fa:	(bad)
  41e5fe:	cmp    DWORD PTR [esi-0x1a136ea4],0xc8edf18a
  41e608:	add    DWORD PTR [esi-0x34dd995c],edi
  41e60e:	cmp    al,0x18
  41e610:	pushf  
  41e611:	pushf  
  41e612:	ret    0xf7dd
  41e615:	mov    WORD PTR [ecx+0x3c3a5181],cs
  41e61b:	lods   eax,DWORD PTR ds:[esi]
  41e61c:	cli    
  41e61d:	jge    0x41e638
  41e61f:	fs imul eax,ebp,0x3d
  41e623:	adc    BYTE PTR [esi+ebp*2+0x3e772b3d],cl
  41e62a:	mov    esp,0xfc93c9f7
  41e62f:	xchg   bh,ah
  41e631:	lds    esi,FWORD PTR [ecx+0x32]
  41e634:	in     eax,dx
  41e635:	fisub  DWORD PTR [ebx]
  41e637:	idiv   BYTE PTR [ecx+0x72]
  41e63a:	pop    es
  41e63b:	sub    al,0x54
  41e63d:	inc    eax
  41e63e:	pop    edx
  41e63f:	lods   eax,DWORD PTR ds:[esi]
  41e640:	mov    ecx,0xa1ee03ab
  41e645:	arpl   WORD PTR [ebx+ecx*8],di
  41e648:	sub    eax,0x2d0f057a
  41e64d:	jle    0x41e62e
  41e64f:	pop    es
  41e650:	xchg   DWORD PTR [ebx+0x64],ebx
  41e653:	out    dx,eax
  41e654:	aas    
  41e655:	and    ecx,DWORD PTR [ebp+0xc]
  41e658:	mov    eax,ds:0x71212674
  41e65d:	sahf   
  41e65e:	jno    0x41e5e2
  41e660:	sbb    al,0x58
  41e662:	mov    edx,0x6b189d65
  41e667:	clc    
  41e668:	fidiv  WORD PTR [esi+ebp*2-0x32eac52a]
  41e66f:	push   esp
  41e670:	cld    
  41e671:	call   0xcdda4d0e
  41e676:	push   ebp
  41e677:	xor    eax,0x7b3f3b96
  41e67c:	and    DWORD PTR [eax+0x4e],esp
  41e67f:	mov    WORD PTR [esi+edx*2],cs
  41e682:	mov    esi,DWORD PTR [eax]
  41e684:	dec    esp
  41e685:	sub    BYTE PTR [ecx],0xe
  41e688:	out    dx,eax
  41e689:	call   0x1876753f
  41e68e:	or     eax,0x75e19bd1
  41e693:	and    esi,DWORD PTR ds:0x85531c7
  41e699:	cmp    bl,BYTE PTR [ebx]
  41e69b:	js     0x41e6b1
  41e69d:	xchg   DWORD PTR [ebx-0x13963a04],ebp
  41e6a3:	jo     0x41e6b5
  41e6a5:	inc    esi
  41e6a6:	mov    ds:0x32cd1e8f,eax
  41e6ab:	not    ebx
  41e6ad:	add    dl,BYTE PTR [ebx-0x1d8c724a]
  41e6b3:	pop    esi
  41e6b4:	scas   eax,DWORD PTR es:[edi]
  41e6b5:	pop    esp
  41e6b6:	mov    bh,0x22
  41e6b8:	(bad)  
  41e6b9:	push   edi
  41e6ba:	add    esp,DWORD PTR [edx-0x56]
  41e6bd:	push   edi
  41e6be:	adc    dl,cl
  41e6c0:	shl    BYTE PTR [edi-0x49219cf1],cl
  41e6c6:	scas   al,BYTE PTR es:[edi]
  41e6c7:	cmp    dl,ah
  41e6c9:	or     al,0xdc
  41e6cb:	out    0x68,al
  41e6cd:	push   ds
  41e6ce:	and    dh,BYTE PTR [ebx]
  41e6d0:	sub    DWORD PTR [ecx-0x2f],edi
  41e6d3:	jo     0x41e6b1
  41e6d5:	idiv   BYTE PTR [edx+0x44f2e0b5]
  41e6db:	lods   al,BYTE PTR ds:[esi]
  41e6dc:	cmp    ebp,ebx
  41e6de:	mov    DWORD PTR [esp+esi*8+0x66efb4a4],ebx
  41e6e5:	xchg   BYTE PTR [eax-0x6eff043c],cl
  41e6eb:	add    bl,bh
  41e6ed:	retf   0xd419
  41e6f0:	pop    eax
  41e6f1:	pop    eax
  41e6f2:	popa   
  41e6f3:	scas   eax,DWORD PTR es:[edi]
  41e6f4:	jmp    0x41e67b
  41e6f6:	test   DWORD PTR [edx+ebx*8-0x51],esi
  41e6fa:	inc    esi
  41e6fb:	adc    DWORD PTR [edx+0x42cfef67],esp
  41e701:	bound  edx,QWORD PTR [esi]
  41e703:	add    DWORD PTR [ecx],0xffffff8b
  41e706:	xchg   ebp,eax
  41e707:	imul   ebp,esi,0xeafebd24
  41e70d:	mov    ?,WORD PTR [ebx]
  41e70f:	mov    bl,BYTE PTR [ebx+eax*4+0x28]
  41e713:	rcr    dh,cl
  41e715:	scas   al,BYTE PTR es:[edi]
  41e716:	sar    BYTE PTR [edi-0x7a],1
  41e719:	pop    ds
  41e71a:	aad    0xa8
  41e71c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e71d:	stos   BYTE PTR es:[edi],al
  41e71e:	mov    ebx,DWORD PTR [ebx]
  41e720:	in     al,dx
  41e721:	ret    
  41e722:	pop    ss
  41e723:	dec    edx
  41e724:	inc    ecx
  41e725:	pop    esp
  41e726:	sbb    ebp,DWORD PTR [edi]
  41e728:	cmp    al,0x9
  41e72a:	(bad)  
  41e72b:	int    0xd9
  41e72d:	pop    esi
  41e72e:	shr    BYTE PTR [eax+0x51ab1a42],1
  41e734:	test   BYTE PTR [ebp+0x2583effd],dl
  41e73a:	jae    0x41e73a
  41e73c:	xchg   ecx,eax
  41e73d:	or     bh,BYTE PTR [edi-0x4a]
  41e740:	lods   eax,DWORD PTR ds:[esi]
  41e741:	jl     0x41e711
  41e743:	lds    edx,FWORD PTR [edx+ebx*8-0x5e6118cc]
  41e74a:	pop    eax
  41e74b:	jle    0x41e7c5
  41e74d:	xchg   ebp,eax
  41e74e:	leave  
  41e74f:	xchg   DWORD PTR [ebx+eiz*1],edx
  41e752:	mov    eax,0xbc9bf126
  41e757:	jo     0x41e781
  41e759:	out    dx,eax
  41e75a:	call   0x7e80f37d
  41e75f:	test   DWORD PTR [eax+esi*4+0x69],0x9ce6f4c9
  41e767:	jmp    0x41e79c
  41e769:	pop    esi
  41e76a:	push   edx
  41e76b:	dec    edi
  41e76c:	mov    DWORD PTR [eax+eiz*8+0x27],eax
  41e770:	sbb    BYTE PTR [eax],ch
  41e772:	mov    esp,DWORD PTR [edi]
  41e774:	bound  esi,QWORD PTR [edx]
  41e776:	loope  0x41e7d9
  41e778:	adc    ah,BYTE PTR [esi]
  41e77a:	fwait
  41e77b:	cs mov ecx,0xa2a3219a
  41e781:	iret   
  41e782:	outs   dx,DWORD PTR ds:[esi]
  41e783:	push   0xfffffffe
  41e785:	stos   BYTE PTR es:[edi],al
  41e786:	push   ecx
  41e787:	in     al,dx
  41e788:	or     ecx,DWORD PTR [ecx+0x367a57da]
  41e78e:	fidivr WORD PTR [edi]
  41e790:	popa   
  41e791:	dec    ebp
  41e792:	xor    eax,0x726e9e88
  41e797:	jg     0x41e77d
  41e799:	inc    esi
  41e79a:	in     eax,0x5c
  41e79c:	jmp    0xe8a4e325
  41e7a1:	test   al,0xce
  41e7a3:	xor    ch,BYTE PTR [ebx-0x7e]
  41e7a6:	pop    ss
  41e7a7:	aas    
  41e7a8:	ja     0x41e81f
  41e7aa:	mov    eax,0xd434e44a
  41e7af:	(bad)  
  41e7b1:	sbb    dh,bh
  41e7b3:	jp     0x41e772
  41e7b5:	rcr    DWORD PTR [ebx+ecx*4-0x6f85e44f],0x4b
  41e7bd:	and    BYTE PTR [eax],0x4d
  41e7c0:	adc    cl,BYTE PTR [edi+0x4]
  41e7c3:	xor    al,0xeb
  41e7c5:	xor    eax,0x3ea2babd
  41e7ca:	sub    al,0x4b
  41e7cc:	sbb    eax,0x31b25f1
  41e7d1:	sub    ch,BYTE PTR [eax+0x5296fdef]
  41e7d7:	jecxz  0x41e7fe
  41e7d9:	ss sar edx,1
  41e7dc:	lods   al,BYTE PTR ds:[esi]
  41e7dd:	fild   QWORD PTR [esi-0x3b8fa5d0]
  41e7e3:	mov    esp,0xdfb795d
  41e7e8:	add    DWORD PTR [ecx],0xffffff8b
  41e7eb:	bswap  esp
  41e7ed:	add    DWORD PTR [eax+0x18],ebx
  41e7f0:	je     0x41e7a1
  41e7f2:	cmp    DWORD PTR [ebp+edx*4-0x70],ecx
  41e7f6:	or     eax,0x903c5148
  41e7fb:	dec    ebp
  41e7fc:	inc    edx
  41e7fd:	xchg   esp,eax
  41e7fe:	adc    BYTE PTR [ebp+ecx*2-0x13],bh
  41e802:	cmp    BYTE PTR [eax],al
  41e804:	jae    0x41e811
  41e806:	sub    esi,DWORD PTR [ebp+edx*8+0x3d]
  41e80a:	(bad)  
  41e80c:	repnz dec ebp
  41e80e:	inc    esi
  41e80f:	clc    
  41e810:	xor    dl,BYTE PTR [ecx+esi*8-0x37]
  41e814:	jmp    0x41e7ca
  41e816:	enter  0x3d56,0x50
  41e81a:	and    DWORD PTR [ebx-0x7347d562],eax
  41e820:	mov    edi,0x9c016976
  41e825:	int3   
  41e826:	and    esp,DWORD PTR ds:0xbff7a3b6
  41e82c:	cmp    BYTE PTR [ecx],bl
  41e82e:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e830:	mov    al,0x5a
  41e832:	dec    esp
  41e833:	sbb    bl,BYTE PTR [ebx+eax*8+0x3f8c7c8f]
  41e83a:	jmp    0x37b44852
  41e83f:	pop    esp
  41e840:	je     0x41e7f4
  41e842:	cdq    
  41e843:	mov    ebx,0x281119cc
  41e848:	jge    0x41e7f1
  41e84a:	pop    eax
  41e84b:	fnsave [ecx-0x7d]
  41e84e:	scas   al,BYTE PTR es:[edi]
  41e84f:	pusha  
  41e850:	ins    DWORD PTR es:[edi],dx
  41e851:	popf   
  41e852:	stos   BYTE PTR es:[edi],al
  41e853:	mov    BYTE PTR [ebx],cl
  41e855:	push   0xf
  41e857:	mov    eax,0x7a2903c6
  41e85c:	jns    0x41e8b2
  41e85e:	jge    0x41e803
  41e860:	mov    esp,0x849715e4
  41e865:	out    dx,eax
  41e866:	xor    al,0x93
  41e868:	and    BYTE PTR cs:[edi],0x4f
  41e86c:	cmc    
  41e86d:	loop   0x41e8dc
  41e86f:	pushf  
  41e870:	stos   DWORD PTR es:[edi],eax
  41e871:	and    BYTE PTR [esi-0x364ae0d4],dl
  41e877:	xchg   DWORD PTR [ecx+0x6c],eax
  41e87a:	aad    0x6b
  41e87c:	mov    ch,al
  41e87e:	push   ss
  41e87f:	jle    0x41e812
  41e881:	xchg   edx,eax
  41e882:	aaa    
  41e883:	test   eax,0x52f2abb5
  41e888:	loopne 0x41e846
  41e88a:	stos   DWORD PTR es:[edi],eax
  41e88b:	jp     0x41e89e
  41e88d:	push   ecx
  41e88e:	stos   DWORD PTR es:[edi],eax
  41e88f:	dec    eax
  41e890:	repnz cmp BYTE PTR [edi],0x6d
  41e894:	lea    edx,[esi-0x59]
  41e897:	std    
  41e898:	lea    esi,[esp+eiz*2]
  41e89b:	cdq    
  41e89c:	add    DWORD PTR [ebp-0x22],edx
  41e89f:	not    DWORD PTR [eax]
  41e8a1:	aas    
  41e8a2:	sub    ch,dl
  41e8a4:	fs sti 
  41e8a6:	mov    cl,0x86
  41e8a8:	ds jle 0x41e916
  41e8ab:	jne    0x41e88f
  41e8ad:	xchg   edi,eax
  41e8ae:	add    BYTE PTR ds:0x15719e85,dl
  41e8b4:	repz dec ecx
  41e8b6:	cmc    
  41e8b7:	imul   BYTE PTR [ecx]
  41e8b9:	sub    eax,0x95f1ec13
  41e8be:	je     0x41e8b2
  41e8c0:	and    dl,BYTE PTR [edi-0x5e1d380a]
  41e8c6:	cmp    ah,BYTE PTR [eax+edx*8-0x16c02e34]
  41e8cd:	(bad)  
  41e8ce:	add    BYTE PTR [eax+0x2b2de8c9],dl
  41e8d4:	sbb    BYTE PTR [edx+0x16],dl
  41e8d7:	shr    DWORD PTR [ebp+0xa1fac8a],0x9a
  41e8de:	or     al,0x4d
  41e8e0:	add    al,0xf9
  41e8e2:	(bad)  
  41e8e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8e4:	fistp  WORD PTR [edx+0x2615fddd]
  41e8ea:	lock or edi,0x34907f78
  41e8f1:	jnp    0x41e90f
  41e8f3:	jecxz  0x41e939
  41e8f5:	push   edx
  41e8f6:	xchg   DWORD PTR [eax+0xe],ecx
  41e8f9:	idiv   BYTE PTR [ecx-0x26]
  41e8fc:	fstp   TBYTE PTR [esi-0x7b0775d4]
  41e902:	pop    ebp
  41e903:	sub    eax,ebx
  41e905:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e906:	push   edx
  41e907:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41e909:	mov    dl,0x68
  41e90b:	cdq    
  41e90c:	jbe    0x41e904
  41e90e:	outs   dx,DWORD PTR ds:[esi]
  41e90f:	mov    ds:0xd9ff435e,al
  41e914:	pop    edi
  41e915:	xor    DWORD PTR [eax-0x60],0xa77c803
  41e91c:	sbb    edx,DWORD PTR [edx-0x23e3835a]
  41e922:	mov    ch,0x6c
  41e924:	sub    BYTE PTR [esi],bh
  41e926:	push   esp
  41e927:	icebp  
  41e928:	daa    
  41e929:	daa    
  41e92a:	cs pop edx
  41e92c:	pop    edi
  41e92d:	outs   dx,BYTE PTR ds:[esi]
  41e92e:	adc    dl,ch
  41e930:	jnp    0x41e968
  41e932:	add    BYTE PTR [ebp+0x49609308],dl
  41e938:	xor    bl,bl
  41e93a:	push   edi
  41e93b:	out    0x26,eax
  41e93d:	es int3 
  41e93f:	sahf   
  41e940:	jno    0x41e8fc
  41e942:	stc    
  41e943:	push   esi
  41e944:	sbb    al,0x5f
  41e946:	cld    
  41e947:	les    edx,FWORD PTR [eax+0x222416ec]
  41e94d:	fidivr WORD PTR [ecx]
  41e94f:	mov    al,0xcc
  41e951:	out    dx,eax
  41e952:	mov    edi,0x65add6c2
  41e957:	add    eax,0xbd5bd4c6
  41e95c:	adc    al,0x4c
  41e95e:	adc    DWORD PTR ss:[ecx+edi*4],eax
  41e962:	int3   
  41e963:	cwde   
  41e964:	hlt    
  41e965:	inc    ecx
  41e966:	loopne 0x41e945
  41e968:	and    ah,BYTE PTR [ebx-0x40]
  41e96b:	lds    edi,FWORD PTR [edx-0xa447d3e]
  41e971:	aad    0x45
  41e973:	pop    edi
  41e974:	mov    edx,0xfcb6b529
  41e979:	mov    bl,BYTE PTR [edi+0x3f]
  41e97c:	mov    ah,0xca
  41e97e:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e980:	mov    esp,0x3bb9638b
  41e985:	jmp    0xdc11403f
  41e98a:	mov    ebx,0x11a0a9d7
  41e98f:	mov    cl,cl
  41e991:	dec    edx
  41e992:	call   0xde887d10
  41e997:	cli    
  41e998:	je     0x41e9e1
  41e99a:	sbb    al,0xc0
  41e99c:	pushf  
  41e99d:	pop    ebp
  41e99e:	dec    esi
  41e99f:	scas   al,BYTE PTR es:[edi]
  41e9a0:	shr    dl,0x54
  41e9a3:	jbe    0x41e943
  41e9a5:	adc    ebx,DWORD PTR [esi]
  41e9a7:	test   DWORD PTR [edi+eax*8+0x2a62390f],eax
  41e9ae:	aas    
  41e9af:	shr    DWORD PTR [edx-0x5e3b530c],1
  41e9b5:	loopne 0x41ea1a
  41e9b7:	and    DWORD PTR [ecx+edi*1],0xffffffc9
  41e9bb:	adc    BYTE PTR [edi-0x56],dh
  41e9be:	jb     0x41e9a9
  41e9c0:	jp     0x41e9bc
  41e9c2:	cmp    BYTE PTR [ebx+eax*8-0x50be2da3],dl
  41e9c9:	cs cs ds out dx,al
  41e9cd:	mov    edx,cs
  41e9cf:	jae    0x41e985
  41e9d1:	fnsave [edi-0x554e7bf]
  41e9d7:	sahf   
  41e9d8:	pop    ss
  41e9d9:	int3   
  41e9da:	inc    ebx
  41e9db:	push   eax
  41e9dc:	dec    edx
  41e9dd:	rcr    esi,1
  41e9df:	(bad)  
  41e9e0:	mov    al,0x4f
  41e9e2:	pop    eax
  41e9e3:	push   0x39c99572
  41e9e8:	sti    
  41e9e9:	out    dx,al
  41e9ea:	adc    esi,DWORD PTR [esi]
  41e9ec:	ror    BYTE PTR [ecx-0x206d586a],0x76
  41e9f3:	mov    ebx,DWORD PTR ds:0xd51522b4
  41e9f9:	inc    esi
  41e9fa:	push   edx
  41e9fb:	xchg   esp,eax
  41e9fc:	inc    BYTE PTR [ebx]
  41e9fe:	and    ebx,ecx
  41ea00:	inc    edx
  41ea01:	pusha  
  41ea02:	jae    0x41ea3c
  41ea04:	push   ebx
  41ea05:	sub    ecx,esp
  41ea07:	(bad)  
  41ea08:	lods   eax,DWORD PTR ds:[esi]
  41ea09:	ftst   
  41ea0b:	dec    edx
  41ea0c:	mov    edx,0x684184e7
  41ea11:	les    ebp,FWORD PTR [esi+0x52a05563]
  41ea17:	mov    esi,0xefe2cbe3
  41ea1c:	add    esi,DWORD PTR [esi-0xd65f974]
  41ea22:	pop    esp
  41ea23:	pop    edx
  41ea24:	push   edi
  41ea25:	dec    esi
  41ea26:	cld    
  41ea27:	(bad)  
  41ea29:	xchg   esp,eax
  41ea2a:	push   0x51689285
  41ea2f:	mov    eax,ds:0x72cd38f1
  41ea34:	or     bl,BYTE PTR [ecx+0x29109cbb]
  41ea3a:	mov    bl,0x3d
  41ea3c:	pusha  
  41ea3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea3e:	and    ecx,eax
  41ea40:	cmc    
  41ea41:	mov    al,BYTE PTR [eax]
  41ea43:	std    
  41ea44:	enter  0xf5f8,0x9
  41ea48:	fcomp  QWORD PTR [edi-0x2c]
  41ea4b:	loopne 0x41e9ef
  41ea4d:	inc    esi
  41ea4e:	jno    0x41ea54
  41ea50:	push   ebp
  41ea51:	addr16 pusha 
  41ea53:	call   0x321f3d13
  41ea58:	pop    edx
  41ea59:	out    dx,al
  41ea5a:	fsub   QWORD PTR [eax-0x1a]
  41ea5d:	aaa    
  41ea5e:	loop   0x41e9e6
  41ea60:	jnp    0x41ea52
  41ea62:	xor    ecx,DWORD PTR [edx+edx*1+0x6a]
  41ea66:	sbb    al,0x8f
  41ea68:	mov    ds:0xa6220f01,al
  41ea6d:	adc    eax,0xf290f4cb
  41ea72:	xor    DWORD PTR [esi+0x19c9cd45],edi
  41ea78:	xchg   ebp,eax
  41ea79:	cmp    eax,0x3c8c15ec
  41ea7e:	jo     0x41eae7
  41ea80:	ds mov dl,0xca
  41ea83:	mov    DWORD PTR [edi+0x2c9d8b6],esp
  41ea89:	nop
  41ea8a:	jmp    0x39f62b6b
  41ea8f:	mov    ?,WORD PTR [edi]
  41ea91:	fs addr16 inc ecx
  41ea94:	jmp    0x41ea63
  41ea96:	ficom  WORD PTR [ecx-0x554f7d51]
  41ea9c:	leave  
  41ea9d:	jmp    0x41eb17
  41ea9f:	xchg   esp,eax
  41eaa0:	inc    ebp
  41eaa1:	icebp  
  41eaa2:	sar    al,1
  41eaa4:	ds inc esi
  41eaa6:	jnp    0x41ea41
  41eaa8:	test   eax,0xab6ed9bf
  41eaad:	std    
  41eaae:	sub    eax,0x403c9be2
  41eab3:	bsf    ebx,eax
  41eab6:	push   0x1cb9ba25
  41eabb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eabc:	out    dx,al
  41eabd:	dec    esp
  41eabe:	sbb    al,0xd
  41eac0:	mov    eax,0xb2e14838
  41eac5:	sbb    ebx,DWORD PTR [edx+0x77b701f5]
  41eacb:	test   al,0xbd
  41eacd:	fidivr DWORD PTR [eax]
  41eacf:	adc    BYTE PTR ds:0xe3298a33,0x6a
  41ead6:	mov    DWORD PTR [edx],0xa8d194a2
  41eadc:	adc    BYTE PTR [edi-0x65],dl
  41eadf:	out    dx,al
  41eae0:	adc    dh,bh
  41eae2:	xor    edx,esp
  41eae4:	ficom  DWORD PTR [ebx+0x70]
  41eae7:	sub    DWORD PTR [ebx],0x4136de42
  41eaed:	test   al,0x8
  41eaef:	leave  
  41eaf0:	jns    0x41eb05
  41eaf2:	(bad)  
  41eaf3:	sti    
  41eaf4:	lods   al,BYTE PTR ds:[esi]
  41eaf5:	push   ebp
  41eaf6:	jnp    0x41eafe
  41eaf8:	mov    BYTE PTR [eax+0x6e8325c],ah
  41eafe:	mov    ch,0x9a
  41eb00:	jg     0x41eac7
  41eb02:	mov    ch,0xbb
  41eb04:	add    ah,BYTE PTR [esi+0x5280351d]
  41eb0a:	int    0xa1
  41eb0c:	mov    ecx,0x9890848a
  41eb11:	sbb    eax,0xfd4c2538
  41eb16:	cmp    BYTE PTR [ecx-0x38],dl
  41eb19:	mov    ebp,DWORD PTR [ebp+0x44bf86d1]
  41eb1f:	mov    ebx,0x59f8ccf0
  41eb24:	push   0x4e
  41eb26:	jl     0x41eace
  41eb28:	mov    bh,0x5e
  41eb2a:	inc    ebp
  41eb2b:	out    0x7a,al
  41eb2d:	xor    DWORD PTR [edi+0x5],ebp
  41eb30:	xor    eax,0x7a879b34
  41eb35:	push   ebx
  41eb36:	pop    eax
  41eb37:	sub    BYTE PTR [ebx],ah
  41eb39:	lahf   
  41eb3a:	mov    bl,al
  41eb3c:	and    al,0xcc
  41eb3e:	inc    ebp
  41eb3f:	scas   eax,DWORD PTR es:[edi]
  41eb40:	pop    esi
  41eb41:	arpl   WORD PTR [eax+0x4cdd05a7],cx
  41eb47:	xchg   esi,eax
  41eb48:	ret    
  41eb49:	push   DWORD PTR [edx-0x142861e8]
  41eb4f:	or     al,0x78
  41eb51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb52:	out    0xff,al
  41eb54:	push   esp
  41eb55:	jo     0x41eaf4
  41eb57:	xlat   BYTE PTR ds:[ebx]
  41eb58:	retf   
  41eb59:	in     eax,dx
  41eb5a:	inc    esp
  41eb5b:	sbb    ebx,edi
  41eb5d:	dec    esp
  41eb5e:	(bad)  
  41eb5f:	xor    dl,BYTE PTR [ecx+0x6f]
  41eb62:	and    al,0x70
  41eb64:	icebp  
  41eb65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb66:	rol    BYTE PTR [edi+0x28c040d1],cl
  41eb6c:	jae    0x41eb5e
  41eb6e:	out    dx,eax
  41eb6f:	(bad)  
  41eb70:	and    DWORD PTR [eax+ecx*8-0x7ad38822],edx
  41eb77:	stc    
  41eb78:	or     al,0x89
  41eb7a:	xor    al,ah
  41eb7c:	ficomp DWORD PTR [eax]
  41eb7e:	sub    BYTE PTR [ecx+0x75a33cd],0x55
  41eb85:	lds    esp,FWORD PTR [esi+eiz*2-0x49e27e62]
  41eb8c:	lds    ebp,FWORD PTR [eax+ecx*4]
  41eb8f:	dec    eax
  41eb90:	mul    edi
  41eb92:	clc    
  41eb93:	xor    BYTE PTR [ebx],dl
  41eb95:	pop    edi
  41eb96:	xor    ch,BYTE PTR [esp+eiz*8-0x6958f374]
  41eb9d:	mov    BYTE PTR [edi+0xa],ch
  41eba0:	scas   al,BYTE PTR es:[edi]
  41eba1:	cmp    BYTE PTR [esi-0x35c4d9ed],ah
  41eba7:	ror    BYTE PTR [eax+0x4cc5e33d],1
  41ebad:	mov    bl,0xf
  41ebaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebb0:	mov    ebp,0xa988cdcc
  41ebb5:	push   0xffffffe8
  41ebb7:	xlat   BYTE PTR ds:[ebx]
  41ebb8:	loop   0x41eb6b
  41ebba:	xchg   edx,eax
  41ebbb:	pushf  
  41ebbc:	xor    ecx,DWORD PTR [ebp+0x70cc0cba]
  41ebc2:	cwde   
  41ebc3:	cmp    eax,0xe
  41ebc6:	adc    esp,ecx
  41ebc8:	leave  
  41ebc9:	pop    edx
  41ebca:	jge    0x41eb81
  41ebcc:	dec    ebx
  41ebcd:	aas    
  41ebce:	leave  
  41ebcf:	pop    es
  41ebd0:	push   ebp
  41ebd1:	add    DWORD PTR [ebx-0x65bb3e46],ecx
  41ebd7:	repz aas 
  41ebd9:	cmc    
  41ebda:	enter  0x4214,0x99
  41ebde:	jl     0x41ec34
  41ebe0:	or     bl,ah
  41ebe2:	enter  0xed7b,0x6c
  41ebe6:	inc    edx
  41ebe7:	xchg   edi,eax
  41ebe8:	(bad)  
  41ebea:	mul    BYTE PTR [ebx-0x75eb7fde]
  41ebf0:	push   ss
  41ebf1:	cs mov es,edi
  41ebf4:	cmp    al,0x4
  41ebf6:	sbb    bl,BYTE PTR [edx]
  41ebf8:	push   ecx
  41ebf9:	lds    edi,FWORD PTR [edi]
  41ebfb:	push   es
  41ebfc:	test   eax,0xf150e4a5
  41ec01:	jns    0x41ec1b
  41ec03:	rol    bh,cl
  41ec05:	inc    esi
  41ec06:	iret   
  41ec07:	mov    ch,0xa6
  41ec0a:	ret    
  41ec0b:	cmp    al,0xba
  41ec0d:	in     al,dx
  41ec0e:	leave  
  41ec0f:	cdq    
  41ec10:	mov    esi,0x1ac88d1a
  41ec15:	ins    DWORD PTR es:[edi],dx
  41ec16:	hlt    
  41ec17:	dec    ecx
  41ec18:	(bad)  
  41ec19:	xchg   ebp,eax
  41ec1a:	(bad)  
  41ec1b:	push   cs
  41ec1c:	lds    esi,FWORD PTR [eax-0x33]
  41ec1f:	lock stos BYTE PTR es:[edi],al
  41ec21:	sub    BYTE PTR [eax],bh
  41ec23:	ror    esp,0x17
  41ec26:	pop    esp
  41ec27:	sbb    BYTE PTR [esi+0x3b9e9b50],0xd3
  41ec2e:	inc    eax
  41ec30:	stos   DWORD PTR es:[edi],eax
  41ec31:	sbb    eax,DWORD PTR [esi+0x5f]
  41ec34:	or     BYTE PTR [eax+edx*8-0x70],ch
  41ec38:	pop    ss
  41ec39:	jecxz  0x41ec55
  41ec3b:	out    dx,al
  41ec3c:	lds    ebx,FWORD PTR ds:0x89595b38
  41ec42:	cmp    eax,0x254120a
  41ec47:	cmp    DWORD PTR [edx],ecx
  41ec49:	out    dx,eax
  41ec4a:	dec    edx
  41ec4b:	fstp   TBYTE PTR [edi-0x6e]
  41ec4e:	sar    ebp,0x85
  41ec51:	jns    0x41ec85
  41ec53:	sub    edi,esp
  41ec55:	xor    dl,BYTE PTR [esi]
  41ec57:	fnstsw WORD PTR [edi]
  41ec59:	jp     0x41ebe9
  41ec5b:	mov    BYTE PTR [ecx+0x71],bh
  41ec5e:	cdq    
  41ec5f:	pop    ecx
  41ec60:	fsub   QWORD PTR [edx]
  41ec62:	pop    ss
  41ec63:	iret   
  41ec64:	xor    BYTE PTR [edi],ah
  41ec66:	sub    eax,0xe9709c7
  41ec6b:	std    
  41ec6c:	jmp    0x41ecdc
  41ec6e:	fwait
  41ec6f:	xchg   al,dh
  41ec71:	sub    edx,DWORD PTR [ebp+edx*2+0x2fea6892]
  41ec78:	jmp    0xc5335fc0
  41ec7d:	dec    esi
  41ec7e:	or     BYTE PTR [edi],bl
  41ec80:	sbb    eax,0x4b0f03fe
  41ec85:	pop    eax
  41ec86:	test   al,0x72
  41ec88:	popa   
  41ec89:	int    0xde
  41ec8b:	loopne 0x41ed05
  41ec8d:	xchg   edx,eax
  41ec8e:	lock std 
  41ec90:	jno    0x41ec24
  41ec92:	mov    ebx,ss
  41ec94:	lds    ecx,FWORD PTR [ebp-0x7c]
  41ec97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec98:	test   eax,0x5794d9ab
  41ec9d:	pop    es
  41ec9e:	outs   dx,DWORD PTR ds:[esi]
  41ec9f:	mov    ds:0x47d221e5,eax
  41eca4:	je     0x41ec57
  41eca6:	arpl   WORD PTR [edi+0x64],bp
  41eca9:	ret    
  41ecaa:	sar    bh,0x13
  41ecad:	retf   0x4017
  41ecb0:	lock sub eax,0x9b4fae49
  41ecb6:	mov    edi,0xf20c2a80
  41ecbb:	pusha  
  41ecbc:	xchg   DWORD PTR [edi],edi
  41ecbe:	cmp    ch,BYTE PTR [edi+0x4d]
  41ecc1:	cmp    DWORD PTR [ebp+0x54],ebx
  41ecc4:	jmp    0x41:0x60c94a51
  41eccb:	imul   eax
  41eccd:	leave  
  41ecce:	sbb    BYTE PTR [eax-0x37569266],0xd0
  41ecd5:	ffree  st(4)
  41ecd7:	stc    
  41ecd8:	mov    ah,0x18
  41ecda:	aam    0xf3
  41ecdc:	(bad)  
  41ecdd:	arpl   cx,dx
  41ecdf:	sbb    cl,BYTE PTR ds:0x80ef4235
  41ece5:	dec    edi
  41ece6:	fiadd  WORD PTR [ecx+0x5b]
  41ece9:	(bad)  
  41ecea:	js     0x41ecfe
  41ecec:	inc    esi
  41eced:	pop    ebp
  41ecee:	lods   eax,DWORD PTR ds:[esi]
  41ecef:	bound  ebx,QWORD PTR [ebp+0x4bcb5dcc]
  41ecf5:	pop    esp
  41ecf6:	out    0xfc,eax
  41ecf8:	mov    dh,bl
  41ecfa:	pop    ecx
  41ecfb:	fst    QWORD PTR [edi-0x5958a8a0]
  41ed01:	sub    cl,al
  41ed03:	adc    eax,0x867f27d8
  41ed08:	jae    0x41ecad
  41ed0a:	xlat   BYTE PTR ds:[ebx]
  41ed0b:	and    BYTE PTR [eax+0x7bea73ef],ch
  41ed11:	shl    al,cl
  41ed13:	push   es
  41ed14:	jbe    0x41ecc6
  41ed16:	daa    
  41ed17:	pop    ecx
  41ed18:	push   ds
  41ed19:	sbb    DWORD PTR ds:0x3669436b,0xfab69f79
  41ed23:	enter  0xc37a,0xdf
  41ed27:	mov    bh,0x2b
  41ed29:	inc    esi
  41ed2a:	mov    DWORD PTR [ebx+edi*2],eax
  41ed2d:	add    esi,DWORD PTR [esi+0x3986d47a]
  41ed33:	jge    0x41ecdb
  41ed35:	adc    al,0xe1
  41ed38:	test   al,0xb4
  41ed3a:	xchg   edi,eax
  41ed3b:	pop    esi
  41ed3c:	paddsw mm0,mm4
  41ed3f:	push   esi
  41ed40:	jg     0x41ed28
  41ed42:	aaa    
  41ed43:	mov    esi,0x9208c4d4
  41ed48:	stos   BYTE PTR es:[edi],al
  41ed49:	shl    ebx,0xa2
  41ed4c:	pop    esi
  41ed4d:	shl    BYTE PTR [ebx],cl
  41ed4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed50:	add    al,0xb7
  41ed52:	aaa    
  41ed53:	inc    ebp
  41ed54:	jmp    0x41edd5
  41ed56:	pop    ecx
  41ed57:	lods   eax,DWORD PTR ds:[esi]
  41ed59:	mov    ch,0xe0
  41ed5b:	mov    edx,0x4dfc4aed
  41ed60:	xor    DWORD PTR [esi+eiz*8],edx
  41ed63:	pop    es
  41ed64:	sar    DWORD PTR ds:0x4af27a03,0x79
  41ed6b:	push   ss
  41ed6c:	jbe    0x41ed3e
  41ed6e:	xchg   dh,al
  41ed70:	call   DWORD PTR [edx+0x64]
  41ed73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed74:	dec    edx
  41ed75:	xor    al,0xc8
  41ed77:	popa   
  41ed78:	mov    dl,0xb7
  41ed7a:	cmp    al,0x2b
  41ed7c:	in     eax,dx
  41ed7d:	mov    esi,0xd98606b3
  41ed82:	pop    DWORD PTR [ebx+0x233b7e2c]
  41ed88:	pushf  
  41ed89:	or     eax,0xa3a4f23a
  41ed8e:	and    al,0x62
  41ed90:	out    0x5e,eax
  41ed92:	addr16 loop 0x41eda9
  41ed95:	scas   al,BYTE PTR es:[edi]
  41ed96:	sub    ah,BYTE PTR [eax+0x35]
  41ed99:	push   cs
  41ed9a:	je     0x41edab
  41ed9c:	sub    esp,DWORD PTR [esp+eiz*2-0x17a5d763]
  41eda3:	sub    BYTE PTR [ebx+0x15af1f00],al
  41eda9:	mov    ebp,0x299b2e96
  41edae:	aam    0x64
  41edb0:	loop   0x41ee1a
  41edb2:	dec    ecx
  41edb3:	lods   al,BYTE PTR ds:[esi]
  41edb4:	mov    al,0xce
  41edb6:	add    DWORD PTR [ebx],edx
  41edb8:	jmp    0x41eda7
  41edba:	xchg   DWORD PTR [edi+0x4bd495e3],edx
  41edc0:	mov    ebp,0xe2ec2ca5
  41edc5:	stos   DWORD PTR es:[edi],eax
  41edc6:	in     eax,0xcf
  41edc8:	scas   eax,DWORD PTR es:[edi]
  41edc9:	cld    
  41edca:	push   ss
  41edcb:	in     al,0x25
  41edcd:	(bad)  
  41edce:	std    
  41edcf:	iret   
  41edd0:	test   al,0x9c
  41edd2:	mov    edx,0x1ef2144e
  41edd7:	pop    esi
  41edd8:	nop
  41edd9:	jl     0x41ee07
  41eddb:	xor    bh,dh
  41eddd:	(bad)  
  41edde:	xor    DWORD PTR [ecx+0x73a25f08],ecx
  41ede4:	xor    DWORD PTR ds:0x62fcc818,ebx
  41edea:	bnd call 0x9b0f0eca
  41edf0:	and    al,0x19
  41edf2:	jnp    0x41eded
  41edf4:	in     eax,dx
  41edf5:	mov    al,ds:0x207103e3
  41edfb:	loop   0x41ee34
  41edfd:	data16 or al,0x32
  41ee00:	mov    eax,0xa8b594e1
  41ee05:	xchg   esp,eax
  41ee06:	sub    al,0xca
  41ee08:	dec    esp
  41ee09:	stc    
  41ee0a:	shr    BYTE PTR [ecx+0x29],cl
  41ee0d:	bound  esi,QWORD PTR [esi]
  41ee0f:	rcpps  xmm1,XMMWORD PTR [edi]
  41ee12:	fmul   QWORD PTR [edx]
  41ee14:	mov    esi,0xda8d76a7
  41ee19:	add    BYTE PTR [edi-0x28],bh
  41ee1c:	adc    BYTE PTR [edx],bh
  41ee1e:	repnz adc edi,DWORD PTR [edx-0x2d]
  41ee22:	enter  0x3dde,0xb4
  41ee26:	pop    eax
  41ee27:	push   eax
  41ee28:	mov    ebp,0x9b19ab51
  41ee2d:	inc    ebp
  41ee2e:	loope  0x41ee12
  41ee30:	mov    eax,ds:0x3f0d073e
  41ee35:	xor    bl,bl
  41ee37:	repnz xchg ebx,eax
  41ee39:	stos   DWORD PTR es:[edi],eax
  41ee3a:	adc    eax,0x8aac0d1c
  41ee3f:	inc    eax
  41ee40:	or     al,0x7a
  41ee42:	push   ebx
  41ee43:	imul   eax,DWORD PTR [esi],0x7e9db7e7
  41ee49:	dec    esp
  41ee4a:	aaa    
  41ee4b:	aam    0x26
  41ee4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee4e:	hlt    
  41ee4f:	fs inc edi
  41ee51:	add    DWORD PTR [ebp-0x7b1f7b92],esp
  41ee57:	cli    
  41ee58:	loope  0x41ee51
  41ee5a:	xor    BYTE PTR [ebp+0x58186474],0xb5
  41ee61:	repnz bound ecx,QWORD PTR [edi+0x76]
  41ee65:	xor    BYTE PTR [edi+0x520e0bf0],ch
  41ee6b:	cmp    eax,0xe31d1b42
  41ee70:	pusha  
  41ee71:	sbb    ebx,DWORD PTR [esi]
  41ee73:	sub    DWORD PTR [ebx],eax
  41ee75:	jge    0x41edfb
  41ee77:	jmp    0xebe5:0x547bd013
  41ee7e:	adc    esi,DWORD PTR [edi+0x5]
  41ee81:	jmp    DWORD PTR [ecx]
  41ee83:	in     al,0x57
  41ee85:	mov    al,0x8e
  41ee87:	cmc    
  41ee88:	sbb    BYTE PTR [edx],0xf6
  41ee8b:	xor    bl,BYTE PTR ds:0xade0e85d
  41ee91:	stos   DWORD PTR es:[edi],eax
  41ee92:	dec    edx
  41ee93:	shl    BYTE PTR [ecx-0x5c],0xad
  41ee97:	cmp    eax,0x828a0f66
  41ee9c:	fild   WORD PTR [edi-0x6b]
  41ee9f:	jmp    0x41ef0c
  41eea1:	or     esp,DWORD PTR [edi+0x3af5f57a]
  41eea7:	jecxz  0x41eef9
  41eea9:	ins    DWORD PTR es:[edi],dx
  41eeaa:	stos   BYTE PTR es:[edi],al
  41eeab:	fldenv [edx]
  41eead:	jp     0x41eeab
  41eeaf:	push   0x1f
  41eeb1:	mov    dh,0x5a
  41eeb3:	in     eax,0xb1
  41eeb5:	nop
  41eeb6:	data16 hlt 
  41eeb8:	jmp    0x2c145c1a
  41eebd:	iret   
  41eebe:	fcomp  DWORD PTR [edx+0x5c]
  41eec1:	sub    dl,BYTE PTR [ebx-0x24c04ae2]
  41eec7:	ret    
  41eec8:	xor    ebp,DWORD PTR [edx+0x32659a33]
  41eece:	mov    ebp,0x532d7615
  41eed3:	dec    esi
  41eed4:	aad    0x94
  41eed6:	loop   0x41ef38
  41eed8:	xor    esi,0x8104efb3
  41eede:	adc    BYTE PTR [esi],0x63
  41eee1:	clc    
  41eee2:	call   0xa6a2:0xea6f500a
  41eee9:	test   DWORD PTR [esi],edi
  41eeeb:	aam    0xb2
  41eeed:	xchg   edx,eax
  41eeee:	rcl    BYTE PTR [edi+ecx*8],1
  41eef1:	push   es
  41eef2:	mov    edx,0x639908c
  41eef7:	rcl    BYTE PTR [edx+ebp*1-0x69f45e68],1
  41eefe:	pop    esi
  41eeff:	xchg   edx,eax
  41ef00:	push   ecx
  41ef01:	dec    edi
  41ef02:	lea    eax,[eax+edi*4]
  41ef05:	pop    esp
  41ef06:	sbb    esp,edx
  41ef08:	pop    ss
  41ef09:	or     DWORD PTR [edi-0x509e3a2d],ecx
  41ef0f:	mov    al,ds:0xa9425977
  41ef14:	xor    al,0xde
  41ef16:	test   DWORD PTR [esp+eiz*4+0x16eb98c1],eax
  41ef1d:	jmp    0x18430401
  41ef22:	leave  
  41ef23:	pop    ds
  41ef24:	mov    eax,ds:0x1e2e958b
  41ef29:	mov    eax,ds:0x8473247
  41ef2e:	pushf  
  41ef2f:	cmp    BYTE PTR [eax+ebx*4+0x1b],cl
  41ef33:	(bad)  
  41ef34:	test   esp,0xa1fa89e
  41ef3a:	and    esi,DWORD PTR [eax]
  41ef3c:	xor    al,0x23
  41ef3e:	xchg   edi,eax
  41ef3f:	ds ss pop edi
  41ef42:	mov    bh,0x44
  41ef44:	and    DWORD PTR [ebp-0x34],edi
  41ef47:	inc    ebx
  41ef48:	mov    eax,0xd3f76104
  41ef4d:	dec    ebx
  41ef4e:	pop    ds
  41ef4f:	lods   eax,DWORD PTR ds:[esi]
  41ef50:	dec    edx
  41ef51:	call   0xba58afc2
  41ef56:	cmp    ecx,DWORD PTR [ebx-0x99ecdef]
  41ef5c:	std    
  41ef5d:	jge    0x41ef35
  41ef5f:	sbb    BYTE PTR [ecx-0x26],cl
  41ef62:	pop    ecx
  41ef63:	jle    0x41eeeb
  41ef65:	mov    al,ds:0x78a5bead
  41ef6a:	gs adc eax,0xfe62528
  41ef70:	xchg   edx,eax
  41ef71:	hlt    
  41ef72:	stos   BYTE PTR es:[edi],al
  41ef73:	out    dx,eax
  41ef74:	mov    ah,0x54
  41ef76:	ret    
  41ef77:	dec    esp
  41ef78:	lods   eax,DWORD PTR ds:[esi]
  41ef79:	fiadd  DWORD PTR [ebp+0x6e]
  41ef7c:	test   BYTE PTR [edi],bl
  41ef7e:	inc    ebx
  41ef7f:	loopne 0x41ef0e
  41ef81:	adc    al,0x6b
  41ef83:	and    DWORD PTR [eax+0x45830968],eax
  41ef89:	(bad)  
  41ef8a:	cmc    
  41ef8b:	repz pop edx
  41ef8d:	xor    al,0xf5
  41ef8f:	ret    
  41ef90:	nop
  41ef91:	pop    eax
  41ef92:	inc    ebp
  41ef93:	pop    esp
  41ef94:	jl     0x41ef5e
  41ef96:	rcl    DWORD PTR [edx-0x904ae84],cl
  41ef9c:	ror    BYTE PTR [ebx-0x12],1
  41ef9f:	pop    esp
  41efa0:	pop    edi
  41efa1:	frstor [edi]
  41efa3:	scas   eax,DWORD PTR es:[edi]
  41efa4:	and    ch,0x56
  41efa7:	mov    DWORD PTR [ebp+0x5b],ebp
  41efaa:	(bad)  
  41efab:	jae    0x41ef37
  41efad:	push   cs
  41efae:	int3   
  41efaf:	mov    bh,0xe5
  41efb1:	and    cl,cl
  41efb3:	and    al,0x5a
  41efb5:	int    0x53
  41efb7:	pop    ecx
  41efb8:	ficomp WORD PTR [ecx-0x3db40c5c]
  41efbe:	ds cli 
  41efc0:	push   ds
  41efc1:	aaa    
  41efc2:	mov    eax,ds:0x8827917e
  41efc7:	call   0x7760:0x112cb078
  41efce:	pushf  
  41efcf:	pop    esi
  41efd0:	retf   
  41efd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efd2:	xor    al,0xa3
  41efd4:	add    esp,DWORD PTR [ebp-0x652c6343]
  41efda:	fbstp  TBYTE PTR [edi]
  41efdc:	mov    ds:0x90ea7508,al
  41efe1:	pusha  
  41efe2:	add    al,0x69
  41efe4:	fs js  0x41efe0
  41efe7:	in     al,dx
  41efe8:	sub    BYTE PTR [ecx],dh
  41efea:	push   ds
  41efeb:	adc    DWORD PTR [ecx+0x552a80f3],0xd8952163
  41eff5:	mov    eax,0xd9576447
  41effa:	dec    esp
  41effb:	adc    edx,DWORD PTR [edi-0x2b]
  41effe:	adc    al,0x89
  41f000:	out    dx,eax
  41f001:	xor    eax,0x754f8848
  41f006:	neg    DWORD PTR [esp+edx*4-0x10049614]
  41f00d:	jecxz  0x41efc7
  41f00f:	add    eax,0xa8916daf
  41f014:	scas   eax,DWORD PTR es:[edi]
  41f015:	xchg   esi,eax
  41f016:	mov    cl,0x4c
  41f018:	icebp  
  41f019:	xchg   edx,eax
  41f01a:	and    ecx,DWORD PTR ds:0x959c6242
  41f020:	jp     0x41f054
  41f022:	sub    eax,DWORD PTR [ecx-0x36b12b65]
  41f028:	je     0x41f034
  41f02a:	cmp    eax,0xae83071
  41f02f:	add    edi,edi
  41f031:	cmp    al,BYTE PTR ds:0x4ad0a8e2
  41f037:	not    BYTE PTR [esp+edi*8+0x1ebe705d]
  41f03e:	mov    ebp,0x60f7c220
  41f043:	ss fs xchg esp,eax
  41f046:	cmc    
  41f047:	xor    DWORD PTR [ecx+0x35fe09],edi
  41f04d:	into   
  41f04e:	sub    BYTE PTR [esi-0x44179da0],bh
  41f054:	dec    ebp
  41f055:	ror    ebp,1
  41f057:	ss aaa 
  41f059:	xchg   esi,eax
  41f05a:	jl     0x41f05d
  41f05c:	mov    cl,0xb2
  41f05e:	or     ch,BYTE PTR [eax+0x4c469d9d]
  41f064:	adc    edi,DWORD PTR [ebx+0x6b0bafca]
  41f06a:	test   DWORD PTR [esi+0x63],eax
  41f06d:	and    bl,BYTE PTR [ebp-0x27042374]
  41f073:	cmp    ch,dl
  41f075:	call   0x3944:0xffdfa28e
  41f07c:	test   cl,0x95
  41f07f:	fcomi  st,st(1)
  41f081:	sbb    bl,BYTE PTR [ebp+edi*1-0x22376e63]
  41f088:	jecxz  0x41f070
  41f08a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f08b:	fadd   st,st(0)
  41f08d:	imul   ebp,DWORD PTR [ebx+0x3b4b74cc],0x30
  41f094:	mov    ah,0x7a
  41f096:	adc    al,dl
  41f098:	loopne 0x41f101
  41f09a:	(bad)  
  41f09b:	lods   eax,DWORD PTR ds:[esi]
  41f09c:	inc    ecx
  41f09d:	push   eax
  41f09e:	pop    esp
  41f09f:	cmp    al,0x27
  41f0a1:	mov    eax,0x6a108fb2
  41f0a6:	or     BYTE PTR [edx+edi*1-0x5a],al
  41f0aa:	mov    ch,0x88
  41f0ac:	pop    es
  41f0ad:	mov    ebx,0x6370ea15
  41f0b2:	jecxz  0x41f060
  41f0b4:	in     eax,dx
  41f0b5:	into   
  41f0b6:	add    ebp,DWORD PTR [ebp-0xf247894]
  41f0bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0bd:	arpl   WORD PTR [ecx],si
  41f0bf:	test   al,0x78
  41f0c1:	cmp    eax,0x15c5d047
  41f0c6:	icebp  
  41f0c7:	add    dh,dh
  41f0c9:	repz and BYTE PTR [eax-0x5],al
  41f0cd:	push   0x72725560
  41f0d2:	call   0x2391e304
  41f0d7:	out    0x28,eax
  41f0d9:	cdq    
  41f0da:	pop    ss
  41f0db:	js     0x41f0df
  41f0dd:	jbe    0x41f129
  41f0df:	ins    BYTE PTR es:[edi],dx
  41f0e0:	sbb    al,0x62
  41f0e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0e3:	stos   DWORD PTR es:[edi],eax
  41f0e4:	cmp    eax,0x412bb805
  41f0e9:	xlat   BYTE PTR ds:[ebx]
  41f0ea:	cmp    BYTE PTR [edx],0x1
  41f0ed:	pusha  
  41f0ee:	sbb    BYTE PTR [ebp-0x5344ae67],0xcd
  41f0f5:	out    dx,al
  41f0f6:	mov    ecx,0x1b50bd3c
  41f0fb:	mov    dh,0x8c
  41f0fd:	nop
  41f0fe:	cdq    
  41f0ff:	mov    ds:0x4f2e13cf,al
  41f104:	mov    edi,0x2cd2ed61
  41f109:	inc    edx
  41f10a:	aaa    
  41f10b:	mov    gs,WORD PTR [edi]
  41f10d:	in     al,0x3f
  41f10f:	aas    
  41f110:	pop    eax
  41f111:	fxch   st(3)
  41f113:	mov    ds:0xaa493d44,al
  41f118:	rcl    esp,1
  41f11a:	aam    0xff
  41f11c:	push   ds
  41f11d:	inc    edi
  41f11e:	pop    eax
  41f11f:	cmp    dh,al
  41f121:	xor    al,0x32
  41f123:	or     al,0xc
  41f125:	pop    edi
  41f126:	inc    ebp
  41f127:	lahf   
  41f128:	mov    esi,DWORD PTR ds:0xfaef7b09
  41f12e:	pop    ebp
  41f12f:	push   edx
  41f130:	jns    0x41f184
  41f132:	clc    
  41f133:	out    0x2b,eax
  41f135:	inc    esp
  41f136:	mov    eax,ds:0x25da9a2
  41f13b:	add    DWORD PTR [ebx+0x600ec46],edi
  41f141:	outs   dx,BYTE PTR ds:[esi]
  41f142:	ja     0x41f1bc
  41f144:	mov    al,0x12
  41f146:	xor    edi,ebx
  41f148:	retf   0x3207
  41f14b:	add    DWORD PTR [ebp+0x5d],0x67
  41f14f:	loopne 0x41f161
  41f151:	sahf   
  41f152:	dec    esp
  41f153:	jae    0x41f12b
  41f155:	mov    DWORD PTR [eax],edi
  41f157:	jb     0x41f1a6
  41f159:	jle    0x41f1c9
  41f15b:	push   edx
  41f15c:	sbb    ebx,DWORD PTR [ecx]
  41f15e:	add    BYTE PTR [ebx],ch
  41f160:	pop    edx
  41f161:	mov    ebx,0x31b03981
  41f166:	in     eax,0x49
  41f168:	popf   
  41f169:	jmp    0x41f15e
  41f16b:	aas    
  41f16c:	mov    ah,0xf7
  41f16e:	repnz xlat BYTE PTR ds:[ebx]
  41f170:	cli    
  41f171:	mov    ah,0xa8
  41f173:	scas   al,BYTE PTR es:[edi]
  41f174:	or     al,0x3d
  41f176:	dec    esi
  41f177:	cdq    
  41f178:	cwde   
  41f179:	sub    edi,DWORD PTR [edi]
  41f17b:	mov    dl,BYTE PTR [eax+0x7b928346]
  41f181:	pop    ecx
  41f182:	mov    ax,0x6a65
  41f186:	pop    ss
  41f187:	aam    0x77
  41f189:	mov    edi,0x157370c7
  41f18e:	test   BYTE PTR [esi+0x1c],bh
  41f191:	rcr    BYTE PTR gs:[eax-0x47984c01],1
  41f198:	pop    edx
  41f199:	retf   
  41f19a:	mov    al,0x32
  41f19c:	fnsave [edx]
  41f19e:	retf   0xfb22
  41f1a1:	rol    DWORD PTR [ecx],1
  41f1a3:	or     DWORD PTR [ebp+0x3bc8e359],0x2f
  41f1aa:	and    eax,0xa10a5c94
  41f1af:	pop    edi
  41f1b0:	mov    cl,0x84
  41f1b2:	push   esp
  41f1b3:	sbb    ebx,DWORD PTR ds:0x931d4276
  41f1b9:	ret    
  41f1ba:	pushf  
  41f1bb:	cmp    dl,BYTE PTR ds:0x373b220a
  41f1c1:	and    BYTE PTR [eax],bh
  41f1c3:	ror    DWORD PTR [edi+0x41],1
  41f1c6:	lods   eax,DWORD PTR ds:[esi]
  41f1c7:	popa   
  41f1c8:	mov    cl,0x34
  41f1ca:	xchg   BYTE PTR [edx+0x14],cl
  41f1cd:	hlt    
  41f1ce:	mov    ebx,0xeaf76f1
  41f1d3:	call   0x55a942bb
  41f1d8:	(bad)  
  41f1d9:	lds    esi,FWORD PTR [edx]
  41f1db:	or     al,0x25
  41f1dd:	out    dx,al
  41f1de:	or     cl,dl
  41f1e0:	mov    cl,BYTE PTR [edi-0x74976cf0]
  41f1e6:	inc    bl
  41f1e8:	sahf   
  41f1e9:	add    DWORD PTR [ecx+0xe],eax
  41f1ec:	ds int3 
  41f1ee:	ret    0x58b6
  41f1f1:	push   0x4f8d05df
  41f1f6:	mov    ecx,0xe7c6eebb
  41f1fb:	in     eax,dx
  41f1fc:	adc    ch,BYTE PTR [ebp+0x67]
  41f1ff:	lods   eax,DWORD PTR ds:[esi]
  41f200:	xchg   esi,ebp
  41f202:	jae    0x41f283
  41f204:	loopne 0x41f231
  41f206:	sub    dh,bl
  41f208:	inc    ebp
  41f209:	jg     0x41f1ab
  41f20b:	xchg   DWORD PTR [esp+esi*2],edx
  41f20e:	cmc    
  41f20f:	cs push edi
  41f211:	popf   
  41f212:	das    
  41f213:	adc    ebx,DWORD PTR [edi-0x3e]
  41f216:	pop    eax
  41f217:	push   ebp
  41f218:	not    DWORD PTR [ecx-0x77]
  41f21b:	jnp    0x41f273
  41f21d:	loop   0x41f1d3
  41f21f:	mov    al,ds:0xbf028a34
  41f224:	mov    edx,0x86189eac
  41f229:	in     al,dx
  41f22a:	pop    ss
  41f22b:	pop    ecx
  41f22c:	sub    eax,0xf7607e40
  41f231:	push   ss
  41f232:	mov    DWORD PTR [esi+0x157aa8dc],esi
  41f238:	jne    0x41f278
  41f23a:	dec    ebx
  41f23b:	dec    edi
  41f23c:	xor    esp,DWORD PTR [eax-0x3ebc1d5b]
  41f242:	retf   
  41f243:	dec    edi
  41f244:	shr    ebp,1
  41f246:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f247:	sub    cl,ah
  41f249:	sti    
  41f24a:	imul   BYTE PTR [edi+0x66ee4c10]
  41f250:	push   eax
  41f251:	mov    bh,0xe
  41f253:	pmaxub mm4,QWORD PTR [edx+0x1616e403]
  41f25a:	lock shl BYTE PTR [ebp-0x39],1
  41f25e:	pop    esi
  41f25f:	int    0xf0
  41f261:	sub    eax,0x755661b7
  41f266:	aaa    
  41f267:	sub    al,0x64
  41f269:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f26a:	dec    esp
  41f26b:	(bad)  
  41f26c:	stos   DWORD PTR es:[edi],eax
  41f26d:	aam    0xd7
  41f26f:	test   al,0xf9
  41f271:	mov    edx,0xbbe6cd8f
  41f276:	jmp    0x41f279
  41f278:	ret    
  41f279:	pop    ss
  41f27a:	sbb    ah,BYTE PTR [edx+0x1a84a73a]
  41f280:	sbb    al,0x16
  41f282:	dec    ebp
  41f283:	jle    0x41f26f
  41f285:	shl    BYTE PTR [esi+ebp*8],0x33
  41f289:	test   eax,0xc5c654eb
  41f28e:	pop    ecx
  41f28f:	aam    0x39
  41f291:	sub    ecx,edx
  41f293:	inc    ebx
  41f294:	jb     0x41f24c
  41f296:	cmp    bh,BYTE PTR [ecx+0x48]
  41f299:	or     ebx,DWORD PTR [ecx-0x6c910e97]
  41f29f:	sbb    eax,0x5f1d72be
  41f2a4:	inc    ebx
  41f2a5:	pop    edx
  41f2a6:	and    al,0x6f
  41f2a8:	int    0x13
  41f2aa:	push   esp
  41f2ab:	and    BYTE PTR [edi+0x14dfaac1],al
  41f2b1:	sti    
  41f2b2:	cwde   
  41f2b3:	test   BYTE PTR [edi],0xe3
  41f2b6:	inc    ebx
  41f2b7:	dec    ecx
  41f2b8:	push   ebp
  41f2b9:	pop    edi
  41f2ba:	(bad)  
  41f2bb:	enter  0x806f,0x55
  41f2bf:	cmp    BYTE PTR [eax],cl
  41f2c1:	out    0x5d,eax
  41f2c3:	imul   esi,DWORD PTR [edx+0x572a3d30],0x8fad489
  41f2cd:	push   ebx
  41f2ce:	arpl   sp,sp
  41f2d0:	jns    0x41f33a
  41f2d2:	push   0x11
  41f2d4:	xlat   BYTE PTR ds:[ebx]
  41f2d5:	mov    ebp,0x77ecda2f
  41f2da:	(bad)  
  41f2db:	mov    ebp,0x343856a5
  41f2e0:	stc    
  41f2e1:	mov    esp,0xbc3d87bb
  41f2e6:	call   0xf945786e
  41f2eb:	mov    edi,0xd1d6c6f6
  41f2f0:	shr    DWORD PTR [edi-0x22],1
  41f2f3:	and    edx,esp
  41f2f5:	je     0x41f31b
  41f2f7:	ins    BYTE PTR es:[edi],dx
  41f2f8:	scas   eax,DWORD PTR es:[edi]
  41f2f9:	sbb    ebx,DWORD PTR [ebx+0x3f]
  41f2fc:	pop    ds
  41f2fd:	xor    esi,DWORD PTR [edx]
  41f2ff:	dec    esi
  41f300:	inc    ebx
  41f301:	add    al,0xbf
  41f303:	mov    fs,WORD PTR [ebx+0x779a5fb3]
  41f309:	fidivr DWORD PTR [ebx+0x65]
  41f30c:	dec    edi
  41f30d:	mov    al,0x37
  41f30f:	sbb    ebx,DWORD PTR [ecx+0x20]
  41f312:	jns    0x41f386
  41f314:	arpl   si,dx
  41f316:	sub    BYTE PTR ds:0xc519702c,cl
  41f31c:	and    al,0x11
  41f31e:	cmp    al,0xb
  41f320:	scas   eax,DWORD PTR es:[edi]
  41f321:	into   
  41f322:	dec    eax
  41f323:	pop    ebx
  41f324:	addr16 mov ebp,0xe6e075fd
  41f32a:	mov    dl,0x4b
  41f32c:	cs inc eax
  41f32e:	jecxz  0x41f37e
  41f330:	push   edx
  41f331:	aas    
  41f332:	sub    ch,cl
  41f334:	push   0x24
  41f336:	push   0x5c255542
  41f33b:	adc    al,0x13
  41f33d:	mov    esp,0xada1d0a8
  41f342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f343:	ds aam 0xde
  41f346:	inc    edx
  41f347:	pop    ecx
  41f348:	cmc    
  41f349:	push   ebx
  41f34a:	xchg   ecx,eax
  41f34b:	xor    BYTE PTR [edx+0x70],0x88
  41f34f:	add    ecx,DWORD PTR [edx-0xa]
  41f352:	and    edi,DWORD PTR [ebp-0x3f]
  41f355:	mov    esi,0x2d26832e
  41f35a:	imul   ebx,DWORD PTR [ecx+0x4b],0x8da966c6
  41f361:	push   esi
  41f362:	mov    eax,fs:0x8e9d5648
  41f368:	sub    DWORD PTR [ebx+0x3f48faca],ebx
  41f36e:	mov    bl,0xb6
  41f370:	push   cs
  41f371:	pop    esi
  41f372:	dec    eax
  41f373:	adc    al,0x80
  41f375:	pop    ds
  41f376:	jle    0x41f388
  41f378:	jecxz  0x41f3e2
  41f37a:	xor    al,0x61
  41f37c:	pop    edx
  41f37d:	mov    esp,DWORD PTR [edi-0x4b]
  41f380:	dec    edx
  41f381:	push   edi
  41f382:	mov    dl,0x78
  41f384:	lock out 0x79,eax
  41f387:	aam    0xb
  41f389:	sub    eax,0xdca0ec06
  41f38e:	xchg   edx,eax
  41f38f:	leave  
  41f390:	dec    edx
  41f391:	and    bl,BYTE PTR [eax]
  41f393:	xor    dl,bl
  41f395:	pushf  
  41f396:	sub    eax,DWORD PTR [ecx-0x64]
  41f399:	mov    ds:0xe885c667,al
  41f39e:	mov    dl,0xa6
  41f3a0:	das    
  41f3a1:	push   ebx
  41f3a2:	ins    DWORD PTR es:[edi],dx
  41f3a3:	inc    edx
  41f3a4:	ds pushf 
  41f3a6:	rcl    ebx,0xea
  41f3a9:	add    edi,ecx
  41f3ab:	scas   eax,DWORD PTR es:[edi]
  41f3ac:	call   0x6e7753dc
  41f3b1:	in     al,0xea
  41f3b3:	lds    edi,FWORD PTR [ecx]
  41f3b5:	bound  edx,QWORD PTR [edx]
  41f3b7:	add    BYTE PTR [ebx+0x67],dh
  41f3ba:	adc    eax,0x452add35
  41f3bf:	out    dx,al
  41f3c0:	xchg   ebx,eax
  41f3c1:	jbe    0x41f3e3
  41f3c3:	xchg   edx,eax
  41f3c4:	jmp    0x41f363
  41f3c6:	(bad)  
  41f3c7:	in     eax,dx
  41f3c8:	or     BYTE PTR [esi+edx*1-0x55e5d2b6],dl
  41f3cf:	rcl    BYTE PTR [edx+0x562a9056],cl
  41f3d5:	jno    0x41f3db
  41f3d7:	push   cs
  41f3d8:	adc    eax,DWORD PTR [esp+esi*2+0x1f]
  41f3dc:	cmc    
  41f3dd:	pusha  
  41f3de:	clc    
  41f3df:	enter  0xab31,0x3c
  41f3e3:	xchg   ecx,ebx
  41f3e5:	(bad)  
  41f3e6:	iret   
  41f3e7:	(bad)  
  41f3e9:	repz pop eax
  41f3eb:	mov    ebx,0x54bcc175
  41f3f0:	arpl   WORD PTR [edi-0x2704e0e8],ax
  41f3f6:	retf   
  41f3f7:	xor    DWORD PTR [ebx-0x64],0xf80811fb
  41f3fe:	cli    
  41f3ff:	sbb    al,bh
  41f401:	shl    BYTE PTR [edx-0x56d1ccbe],0xe1
  41f408:	and    BYTE PTR [ebp-0x3822a061],ah
  41f40e:	ret    
  41f40f:	ins    BYTE PTR es:[edi],dx
  41f410:	shl    BYTE PTR [ecx],0x9e
  41f413:	leave  
  41f414:	jle    0x41f44e
  41f416:	xchg   edi,eax
  41f417:	push   ss
  41f418:	xor    edx,eax
  41f41a:	in     al,0x99
  41f41c:	test   eax,0x725cd5fc
  41f421:	mov    ecx,esi
  41f423:	xlat   BYTE PTR ds:[ebx]
  41f424:	jl     0x41f3dd
  41f426:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f427:	(bad)  
  41f428:	stc    
  41f429:	fld    QWORD PTR [eax-0x486cd0fe]
  41f42f:	and    eax,0x837295f2
  41f434:	std    
  41f435:	aas    
  41f436:	pushf  
  41f437:	jae    0x41f424
  41f439:	jb     0x41f49f
  41f43b:	jb     0x41f49c
  41f43d:	fdiv   QWORD PTR [ecx-0x1b]
  41f440:	xchg   ebp,eax
  41f441:	mov    bl,0xd
  41f443:	arpl   cx,bp
  41f445:	call   FWORD PTR [ebp-0x21]
  41f448:	mov    eax,0x26af79f
  41f44d:	sbb    BYTE PTR es:[ecx-0x8],cl
  41f451:	push   0x14
  41f453:	add    BYTE PTR [ebx-0x4ac3bcec],bl
  41f459:	dec    eax
  41f45a:	es out 0x4b,eax
  41f45d:	es xchg esp,eax
  41f45f:	ja     0x41f469
  41f461:	daa    
  41f462:	js     0x41f4af
  41f464:	pop    eax
  41f465:	stos   DWORD PTR es:[edi],eax
  41f466:	call   0xdb8c975a
  41f46b:	push   ebx
  41f46c:	adc    edx,DWORD PTR [eax+0x4ce2c490]
  41f472:	mov    dl,0xac
  41f474:	add    dl,BYTE PTR [eax+0x22]
  41f477:	pop    ebx
  41f478:	fcom   QWORD PTR [edi]
  41f47a:	mov    sp,WORD PTR [eax]
  41f47d:	sbb    eax,0xf5c1e473
  41f482:	outs   dx,DWORD PTR ds:[esi]
  41f483:	sbb    BYTE PTR [eax+edi*2+0x4697d4e9],ch
  41f48a:	inc    ebx
  41f48b:	xor    eax,0xdb2ddb46
  41f490:	int    0x61
  41f492:	sbb    DWORD PTR [edi],0x590864d5
  41f498:	ss (bad) 
  41f49a:	cmc    
  41f49b:	mov    ebp,0x6ebda141
  41f4a0:	mov    al,0xb8
  41f4a2:	fstp   TBYTE PTR [ecx-0x38]
  41f4a5:	ret    
  41f4a6:	mov    ch,0x29
  41f4a8:	test   BYTE PTR ds:0x7ddb42a9,ah
  41f4ae:	cmc    
  41f4af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4b0:	aam    0x84
  41f4b2:	adc    eax,0x9e31c19f
  41f4b7:	push   es
  41f4b8:	xchg   ebp,eax
  41f4b9:	adc    ah,ah
  41f4bb:	lahf   
  41f4bc:	or     al,0x31
  41f4be:	loopne 0x41f48d
  41f4c0:	ror    DWORD PTR [esi+0x43],0xf0
  41f4c4:	data16 mov BYTE PTR [eax+edi*2+0x23515fdd],al
  41f4cc:	ret    
  41f4cd:	int3   
  41f4ce:	add    esp,DWORD PTR [edi+ebp*1-0x5d]
  41f4d2:	or     DWORD PTR [esp+eax*2-0x9],esi
  41f4d6:	cdq    
  41f4d7:	into   
  41f4d8:	test   eax,0x49eb0d15
  41f4dd:	or     dl,cl
  41f4df:	aad    0x92
  41f4e1:	xchg   ecx,eax
  41f4e2:	pusha  
  41f4e3:	push   edx
  41f4e4:	ja     0x41f528
  41f4e6:	adc    BYTE PTR [ebx-0x604b84de],al
  41f4ec:	je     0x41f548
  41f4ee:	stos   BYTE PTR es:[edi],al
  41f4ef:	adc    BYTE PTR [ebx],ch
  41f4f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4f2:	in     al,0x7
  41f4f4:	es mov edi,es
  41f4f7:	inc    esi
  41f4f8:	cmp    al,0xd4
  41f4fa:	cwde   
  41f4fb:	fld    TBYTE PTR [edx-0x194802cc]
  41f501:	fdiv   DWORD PTR [edx+0x2d]
  41f504:	scas   eax,DWORD PTR es:[edi]
  41f505:	xor    al,0xb0
  41f507:	lock shr DWORD PTR [eax+0x4876ae59],0x6c
  41f50f:	sub    al,0x82
  41f511:	mov    al,0x8b
  41f513:	push   cs
  41f514:	xor    eax,0xc0744b5f
  41f519:	jnp    0x41f4f2
  41f51b:	xchg   ecx,eax
  41f51c:	cmp    bh,0x75
  41f51f:	jno    0x41f53b
  41f521:	mov    dl,0xf2
  41f523:	mov    ecx,0xef32f990
  41f528:	xor    ebx,DWORD PTR [edx+0x318caa43]
  41f52e:	mov    ch,ch
  41f530:	sbb    al,0x92
  41f532:	lock loopne 0x41f4f3
  41f535:	push   es
  41f536:	push   esp
  41f537:	lock les eax,FWORD PTR [eax+ecx*1]
  41f53b:	push   ecx
  41f53c:	cmp    ah,0x7a
  41f53f:	inc    esi
  41f540:	jns    0x41f4f3
  41f542:	sub    bl,BYTE PTR [edi]
  41f544:	daa    
  41f545:	adc    esp,DWORD PTR [ecx+0x6c]
  41f548:	push   edx
  41f549:	and    DWORD PTR [esi],0xffffff9e
  41f54c:	lock arpl WORD PTR [esi+0x23],sp
  41f550:	mov    dl,0x56
  41f552:	cmp    al,0x6e
  41f554:	inc    ecx
  41f555:	clc    
  41f556:	sbb    eax,0xc17b81a5
  41f55b:	mov    ds:0x61129d81,al
  41f560:	leave  
  41f561:	cwde   
  41f562:	pusha  
  41f563:	dec    ecx
  41f564:	(bad)  
  41f565:	pop    ds
  41f566:	cmp    cl,BYTE PTR es:[ecx+0x1d]
  41f56a:	pop    eax
  41f56b:	cs jge 0x41f4fb
  41f56e:	fdiv   st(2),st
  41f570:	push   edx
  41f571:	xchg   ebp,eax
  41f572:	inc    ebx
  41f573:	sub    al,0x4c
  41f575:	add    ebp,edi
  41f577:	xor    BYTE PTR [esi-0x3da9b773],bh
  41f57d:	out    dx,al
  41f57e:	or     eax,0x6deeba5d
  41f583:	mov    edi,0x116fc44a
  41f588:	push   esp
  41f589:	or     dh,BYTE PTR [ebp+ebx*8+0x153d5899]
  41f590:	xchg   ebx,eax
  41f591:	xor    edi,DWORD PTR [edi]
  41f593:	dec    ebp
  41f594:	mov    esi,0xbc09cb83
  41f599:	js     0x41f549
  41f59b:	xor    ebp,DWORD PTR [ebp-0x6e]
  41f59e:	shr    DWORD PTR [edx],1
  41f5a0:	rol    BYTE PTR [esi-0x3c41f8f7],1
  41f5a6:	sbb    al,0xdf
  41f5a8:	fsubr  DWORD PTR [edi]
  41f5aa:	loope  0x41f61c
  41f5ac:	fadd   DWORD PTR ds:0xb6f3f281
  41f5b2:	mov    cl,0x90
  41f5b4:	and    DWORD PTR gs:[edi+edx*2],ebx
  41f5b8:	xchg   ebx,eax
  41f5b9:	dec    ebp
  41f5ba:	test   al,0xaa
  41f5bc:	xchg   DWORD PTR [ecx+0x53c661c],eax
  41f5c2:	inc    esi
  41f5c3:	add    BYTE PTR [eax+0x28],al
  41f5c6:	sar    ebp,1
  41f5c8:	jl     0x41f5b9
  41f5ca:	fmul   st,st(0)
  41f5cc:	pop    es
  41f5cd:	mov    edx,DWORD PTR [edi+0x1c]
  41f5d0:	ja     0x41f5ae
  41f5d2:	adc    edi,edi
  41f5d4:	cmp    eax,0xd1af44b8
  41f5d9:	inc    ecx
  41f5da:	jne    0x41f62f
  41f5dc:	addr16 mov esp,?
  41f5df:	arpl   WORD PTR [edi-0x25],ax
  41f5e2:	jecxz  0x41f605
  41f5e4:	ret    
  41f5e5:	mov    eax,ds:0xa5f01126
  41f5ea:	xchg   esi,eax
  41f5eb:	inc    edx
  41f5ec:	mov    al,ds:0x81c48a41
  41f5f1:	xchg   esp,eax
  41f5f2:	mov    eax,0xb8c77592
  41f5f7:	call   0xec4e:0x90b9b5b9
  41f5fe:	inc    eax
  41f5ff:	and    eax,0x74a23184
  41f604:	dec    ebx
  41f605:	in     eax,dx
  41f606:	push   esp
  41f607:	int3   
  41f608:	dec    esi
  41f609:	inc    esi
  41f60a:	xlat   BYTE PTR ds:[ebx]
  41f60b:	dec    ebp
  41f60c:	dec    ebx
  41f60d:	add    cl,BYTE PTR [ebx]
  41f60f:	jbe    0x41f631
  41f611:	add    al,0xde
  41f613:	icebp  
  41f614:	pop    ebp
  41f615:	es inc edx
  41f617:	imul   ebp,DWORD PTR [esi+0x691bba3],0xde3c6a43
  41f621:	mov    esp,0x3bfbeae3
  41f626:	add    eax,0x529a0e15
  41f62b:	xor    ecx,DWORD PTR [eax+0x10]
  41f62e:	fistp  QWORD PTR [ebx]
  41f630:	and    DWORD PTR [ecx-0x40],0x401d55c0
  41f637:	mov    ecx,0xc7696d73
  41f63c:	shr    DWORD PTR [ebp-0x4b46d52b],cl
  41f642:	outs   dx,DWORD PTR ds:[esi]
  41f643:	mov    eax,ds:0xccae413
  41f648:	add    eax,0xbecd55ba
  41f64d:	(bad)  
  41f64e:	pop    esi
  41f64f:	mov    dh,0xf3
  41f651:	adc    ebp,DWORD PTR [ebp+0x4c8ff0d7]
  41f657:	sahf   
  41f658:	cmp    BYTE PTR [eax-0x6d6e4571],bl
  41f65e:	je     0x41f5fd
  41f660:	ret    0x97a8
  41f663:	test   eax,0x84afee76
  41f668:	cmp    al,0xe7
  41f66a:	jge    0x41f676
  41f66c:	shl    edx,1
  41f66e:	std    
  41f66f:	fwait
  41f670:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f671:	jge    0x41f65a
  41f673:	inc    edi
  41f674:	aam    0xa6
  41f676:	ins    DWORD PTR es:[edi],dx
  41f677:	jno    0x41f6b9
  41f679:	jnp    0x41f6aa
  41f67b:	jmp    0xbe103a1
  41f680:	add    eax,0x23c44943
  41f685:	lock sbb ch,BYTE PTR [edi]
  41f688:	push   edx
  41f689:	xlat   BYTE PTR ds:[ebx]
  41f68a:	popf   
  41f68b:	sbb    eax,0x488b9b20
  41f690:	loope  0x41f697
  41f692:	xor    BYTE PTR [ebx-0x21ee255],cl
  41f698:	shl    DWORD PTR [ecx],cl
  41f69a:	ins    BYTE PTR es:[edi],dx
  41f69b:	pop    ebx
  41f69c:	mov    ebx,0xaa74a1db
  41f6a1:	out    0xc8,al
  41f6a3:	mov    ebp,0xff0547be
  41f6a8:	fwait
  41f6a9:	nop
  41f6aa:	dec    edx
  41f6ab:	cli    
  41f6ac:	int    0x44
  41f6ae:	adc    dh,BYTE PTR ds:0x4c5717e4
  41f6b4:	xor    eax,0xc23068e9
  41f6b9:	(bad)  
  41f6ba:	xlat   BYTE PTR ds:[ebx]
  41f6bb:	mov    BYTE PTR [eax],ch
  41f6bd:	push   ebx
  41f6be:	into   
  41f6bf:	jg     0x41f6a0
  41f6c1:	mov    ds:0x184eae4e,al
  41f6c6:	clc    
  41f6c7:	add    al,0xd8
  41f6c9:	sub    eax,0x2f0e5e2f
  41f6ce:	int    0xed
  41f6d0:	mov    dl,0x8b
  41f6d2:	pusha  
  41f6d3:	and    al,0x42
  41f6d5:	xchg   ecx,eax
  41f6d6:	or     cl,BYTE PTR [ebx-0x40]
  41f6d9:	loop   0x41f720
  41f6db:	jne    0x41f6bc
  41f6dd:	(bad)  
  41f6de:	and    ch,BYTE PTR [ebx+esi*4+0x750e47e]
  41f6e5:	icebp  
  41f6e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6e7:	jne    0x41f722
  41f6e9:	add    al,0xb5
  41f6eb:	mov    ebp,0xd4ae3069
  41f6f0:	pop    esi
  41f6f1:	popa   
  41f6f2:	pop    esi
  41f6f3:	mov    eax,0x1823713c
  41f6f8:	ins    BYTE PTR es:[edi],dx
  41f6f9:	dec    edi
  41f6fa:	std    
  41f6fb:	dec    edi
  41f6fc:	into   
  41f6fd:	pop    es
  41f6fe:	(bad)  
  41f6ff:	jmp    0x41f779
  41f701:	retf   0x1912
  41f704:	lea    esp,[esi+eiz*4-0x3b4e49cd]
  41f70b:	jbe    0x41f763
  41f70d:	adc    esp,DWORD PTR [edi+ecx*2-0x3eeeffa]
  41f714:	shr    DWORD PTR [ecx+ebp*2],cl
  41f717:	add    al,0x8e
  41f719:	push   0xffffffef
  41f71b:	push   ebp
  41f71c:	and    ecx,DWORD PTR gs:[eax-0x72c97ffd]
  41f723:	jmp    0x41f766
  41f725:	mov    eax,ds:0x41c198da
  41f72a:	mov    ah,0xf0
  41f72c:	or     edi,esi
  41f72e:	sub    eax,0xe71fb9d7
  41f733:	pop    ebp
  41f734:	inc    ebp
  41f735:	cdq    
  41f736:	cmp    eax,0x72884d9d
  41f73b:	mov    gs,WORD PTR [edx]
  41f73d:	inc    ebx
  41f73e:	popa   
  41f73f:	mov    esp,0x8d1cbd38
  41f744:	stos   BYTE PTR es:[edi],al
  41f745:	mov    ecx,0xed6fa602
  41f74a:	fucomp st(7)
  41f74c:	sub    al,0xd5
  41f74e:	lds    ecx,FWORD PTR [ebx-0x18]
  41f751:	lds    eax,FWORD PTR [edx]
  41f753:	mov    ebp,0x3f34955e
  41f758:	sub    al,0xbb
  41f75a:	mov    eax,ds:0x5fd0f2df
  41f75f:	mov    bh,0xd
  41f761:	inc    esi
  41f762:	push   ebp
  41f763:	stos   DWORD PTR es:[edi],eax
  41f764:	fnsave [eax]
  41f766:	sub    edi,DWORD PTR [ecx]
  41f768:	xor    bl,BYTE PTR es:[ebx-0x665db7d1]
  41f76f:	push   esi
  41f770:	addr16 dec edi
  41f772:	jmp    0x41f7db
  41f774:	cmc    
  41f775:	jno    0x41f740
  41f777:	and    ebp,eax
  41f779:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f77a:	sbb    al,0x8c
  41f77c:	xor    DWORD PTR [ecx],eax
  41f77e:	jle    0x41f795
  41f780:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f781:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f782:	fmul   DWORD PTR [edi+ecx*2+0x4b109362]
  41f789:	imul   DWORD PTR [ebp-0x41]
  41f78c:	pop    edi
  41f78d:	inc    ecx
  41f78e:	xchg   esp,eax
  41f78f:	jle    0x41f727
  41f791:	cwde   
  41f792:	jg     0x41f766
  41f794:	in     eax,dx
  41f795:	xchg   sp,ax
  41f797:	mov    bl,0x92
  41f799:	mov    ch,ch
  41f79b:	stc    
  41f79c:	lds    edi,FWORD PTR [ecx+0x4]
  41f79f:	fcmovb st,st(2)
  41f7a1:	addr16 jmp 0xcd26d6f0
  41f7a7:	imul   eax,DWORD PTR [eax+edx*1+0x6c],0x99b27e87
  41f7af:	jnp    0x41f77f
  41f7b1:	push   0x60c8d27e
  41f7b6:	xchg   ebx,eax
  41f7b7:	mov    ch,0xd6
  41f7b9:	push   edx
  41f7ba:	repnz mov ch,0xb1
  41f7bd:	cld    
  41f7be:	inc    ebp
  41f7bf:	mov    esi,0x7a3df351
  41f7c4:	push   es
  41f7c5:	xor    dl,BYTE PTR ds:0xdbb40863
  41f7cb:	sti    
  41f7cc:	(bad)  
  41f7cd:	repnz or DWORD PTR [bp+si],ebp
  41f7d1:	stos   DWORD PTR es:[edi],eax
  41f7d2:	ficom  DWORD PTR [ebx]
  41f7d4:	hlt    
  41f7d5:	jmp    0x41f7ef
  41f7d7:	dec    esi
  41f7d8:	stos   BYTE PTR es:[edi],al
  41f7d9:	mov    cl,0x58
  41f7db:	pop    eax
  41f7dc:	xchg   esi,eax
  41f7dd:	fcom   st(3)
  41f7df:	fsubr  QWORD PTR [eax+0x2ce2ad6e]
  41f7e5:	dec    eax
  41f7e6:	cmp    DWORD PTR [esi+0x16],0x93ed5775
  41f7ed:	in     al,dx
  41f7ee:	jne    0x41f816
  41f7f0:	cld    
  41f7f1:	xor    dl,BYTE PTR [eax-0x6f]
  41f7f4:	pop    ebx
  41f7f5:	mov    ch,0x80
  41f7f7:	push   eax
  41f7f8:	and    eax,0x7d6c61aa
  41f7fd:	jge    0x41f85a
  41f7ff:	xor    eax,0xb74afcb2
  41f804:	mov    edx,0x11abc18d
  41f809:	and    BYTE PTR [ebp-0x5119ceee],0x5f
  41f810:	dec    ecx
  41f811:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f812:	xchg   ecx,eax
  41f813:	shl    BYTE PTR [ecx+ebp*1+0x79265113],0x84
  41f81b:	inc    ebx
  41f81c:	in     eax,0x37
  41f81e:	push   ss
  41f81f:	outs   dx,DWORD PTR ds:[esi]
  41f820:	jnp    0x41f86e
  41f822:	sti    
  41f823:	sti    
  41f824:	jmp    0x3cef7920
  41f829:	scas   eax,DWORD PTR es:[edi]
  41f82a:	adc    ebx,0xffffff84
  41f82d:	sub    eax,0xf50becf4
  41f832:	cld    
  41f833:	ja     0x41f7e7
  41f835:	inc    edx
  41f836:	dec    esi
  41f837:	xor    edx,DWORD PTR [ebx+0x59]
  41f83a:	aaa    
  41f83b:	(bad)  
  41f83c:	xlat   BYTE PTR ds:[ebx]
  41f83d:	fnsave [edi+0x6b7ad78c]
  41f843:	mov    ds:0x822a6bc5,al
  41f848:	test   eax,0x34271848
  41f84d:	cmp    BYTE PTR [edx],al
  41f84f:	bound  esi,QWORD PTR [ecx+0x46]
  41f852:	pop    ecx
  41f853:	test   BYTE PTR [esp+ebp*4],0x94
  41f857:	add    eax,0xe32d0c06
  41f85c:	or     eax,esp
  41f85e:	push   ecx
  41f85f:	pushf  
  41f860:	and    ebp,DWORD PTR [eax-0x11]
  41f863:	mov    bh,0x14
  41f865:	arpl   WORD PTR [eax-0x645a1631],di
  41f86b:	dec    esp
  41f86c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f86d:	es scas al,BYTE PTR es:[edi]
  41f86f:	sub    BYTE PTR [eax-0x55387518],dl
  41f875:	les    ebx,FWORD PTR [eax-0x8e72b6b]
  41f87b:	rol    esi,cl
  41f87d:	cmp    al,BYTE PTR [edx+0x45]
  41f880:	mov    al,ds:0xec0309fa
  41f885:	xor    eax,0x7d369fbf
  41f88a:	push   ss
  41f88b:	ins    DWORD PTR es:[edi],dx
  41f88c:	call   0x68c:0xbc76f9bd
  41f893:	xchg   DWORD PTR [ebx+0x301dd5aa],edi
  41f899:	sub    ch,BYTE PTR [esi+0x3012e618]
  41f89f:	jb     0x41f849
  41f8a1:	add    BYTE PTR [ebx],cl
  41f8a3:	jge    0x41f8a2
  41f8a5:	ins    BYTE PTR es:[edi],dx
  41f8a6:	cmp    al,0x69
  41f8a8:	xchg   esi,esp
  41f8aa:	lock fnstsw WORD PTR [eax-0x6a251800]
  41f8b1:	and    eax,0x90193175
  41f8b6:	jb     0x41f87f
  41f8b8:	mov    ebp,0x6a5448e3
  41f8bd:	ret    
  41f8be:	out    dx,eax
  41f8bf:	mov    cl,bh
  41f8c1:	les    edx,FWORD PTR [eax]
  41f8c3:	call   0x5234e019
  41f8c8:	(bad)  
  41f8c9:	sbb    DWORD PTR [eax],ebx
  41f8cb:	outs   dx,DWORD PTR ds:[esi]
  41f8cc:	mov    edx,0x80b94b31
  41f8d1:	out    dx,eax
  41f8d2:	ja     0x41f949
  41f8d4:	in     eax,0x29
  41f8d6:	mov    ds:0x3ec40642,eax
  41f8db:	js     0x41f914
  41f8dd:	xchg   ch,dh
  41f8df:	call   0x62f3fd5c
  41f8e4:	test   DWORD PTR [esi-0x24e8e7e8],ebx
  41f8ea:	add    DWORD PTR [edx-0x608dd597],esp
  41f8f0:	aad    0x53
  41f8f2:	xchg   ecx,eax
  41f8f3:	scas   al,BYTE PTR es:[edi]
  41f8f4:	mov    bl,al
  41f8f6:	lods   eax,DWORD PTR ds:[esi]
  41f8f7:	xor    DWORD PTR [edx+edi*1],ebp
  41f8fa:	pop    ebp
  41f8fb:	fbld   TBYTE PTR [ecx+0x3d67a1a2]
  41f901:	cmc    
  41f902:	dec    esi
  41f903:	dec    ecx
  41f904:	add    al,0xb0
  41f906:	out    0x41,eax
  41f908:	stos   DWORD PTR es:[di],eax
  41f90a:	sub    eax,0x8a81d453
  41f90f:	xchg   edi,edi
  41f911:	lock add BYTE PTR [edi],0xfe
  41f915:	sti    
  41f916:	inc    edx
  41f917:	add    eax,0x7fe130bc
  41f91c:	cli    
  41f91d:	pop    eax
  41f91e:	test   bh,0x97
  41f921:	popf   
  41f922:	sub    esi,0x28
  41f925:	sbb    eax,0xd7c56294
  41f92a:	xchg   esp,eax
  41f92b:	adc    eax,0x56e063c2
  41f930:	mov    cl,0xa8
  41f932:	push   edi
  41f933:	loopne 0x41f9aa
  41f935:	adc    DWORD PTR [ecx+0x40],eax
  41f938:	cmp    al,0x5
  41f93a:	stc    
  41f93b:	loopne 0x41f933
  41f93d:	cmp    DWORD PTR [ebx-0x46],ebp
  41f940:	sub    al,0x93
  41f942:	into   
  41f943:	pop    ds
  41f944:	jb     0x41f8e8
  41f946:	push   ss
  41f947:	sahf   
  41f948:	popa   
  41f949:	in     al,dx
  41f94a:	mov    cl,0x67
  41f94c:	jg     0x41f8d7
  41f94e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f94f:	sbb    eax,0xb2d28cd2
  41f954:	xor    DWORD PTR [edi],ebp
  41f956:	sub    bl,BYTE PTR [edi-0x29fd11f6]
  41f95c:	cld    
  41f95d:	sub    esp,eax
  41f95f:	sbb    eax,0x1c1f3d30
  41f964:	sbb    ch,BYTE PTR [eax]
  41f966:	adc    DWORD PTR [edx-0x50c52af2],esp
  41f96c:	les    esp,FWORD PTR [ecx+ecx*8-0x4f5b8ae8]
  41f973:	int3   
  41f974:	inc    eax
  41f975:	sbb    eax,0x8467cadf
  41f97a:	jno    0x41f9ef
  41f97c:	dec    eax
  41f97d:	lahf   
  41f97e:	fcomp  DWORD PTR [esi-0x16]
  41f981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f982:	jle    0x41f9cc
  41f984:	push   es
  41f985:	stos   DWORD PTR es:[edi],eax
  41f986:	jmp    0x41f9b2
  41f988:	add    ch,BYTE PTR [ecx]
  41f98a:	push   0x26
  41f98c:	jne    0x41f9b4
  41f98e:	jl     0x41f9ec
  41f990:	data16 fdiv st(4),st
  41f993:	dec    ecx
  41f994:	pushf  
  41f995:	or     ebp,DWORD PTR ds:0x6079582a
  41f99b:	imul   ebp
  41f99d:	and    eax,0x20bc03d
  41f9a2:	je     0x41f9ae
  41f9a4:	pop    edx
  41f9a5:	inc    esi
  41f9a6:	and    dh,BYTE PTR [esi+0x5a8a6262]
  41f9ac:	jecxz  0x41f9be
  41f9ae:	outs   dx,BYTE PTR ds:[esi]
  41f9b0:	dec    edi
  41f9b1:	js     0x41f97c
  41f9b3:	fs (bad) 
  41f9b5:	or     al,0xa7
  41f9b7:	xchg   esp,eax
  41f9b8:	in     eax,dx
  41f9b9:	xor    esi,esi
  41f9bb:	push   edx
  41f9bc:	jl     0x41f992
  41f9be:	je     0x41f9aa
  41f9c0:	aad    0xbc
  41f9c2:	push   ebx
  41f9c3:	or     edi,DWORD PTR [esi]
  41f9c5:	(bad)  
  41f9c6:	loopne 0x41fa25
  41f9c8:	leave  
  41f9c9:	inc    esi
  41f9ca:	sub    eax,DWORD PTR [edi+0x1a]
  41f9cd:	leave  
  41f9ce:	retf   0x1949
  41f9d1:	mov    dh,0xf9
  41f9d3:	push   esi
  41f9d4:	nop
  41f9d5:	push   edx
  41f9d6:	or     al,0x90
  41f9d8:	retf   
  41f9d9:	pop    edi
  41f9da:	jp     0x41fa1a
  41f9dc:	nop
  41f9dd:	mov    dh,0x91
  41f9df:	(bad)  
  41f9e0:	in     al,dx
  41f9e1:	outs   dx,DWORD PTR ds:[esi]
  41f9e2:	cmp    DWORD PTR [ebx-0x28],0xffffffce
  41f9e6:	xchg   ebp,eax
  41f9e7:	maxps  xmm4,XMMWORD PTR [esi+0x48]
  41f9eb:	cli    
  41f9ec:	mov    eax,0x422cd8c4
  41f9f1:	pop    ss
  41f9f2:	and    DWORD PTR ds:0xb6d380e7,esi
  41f9f8:	data16 fmul QWORD PTR [edi]
  41f9fb:	or     ah,bl
  41f9fd:	jmp    0x41f9dd
  41f9ff:	js     0x41fa11
  41fa01:	or     BYTE PTR [esi+edi*1+0x48f06bd5],bl
  41fa08:	cld    
  41fa09:	sbb    BYTE PTR [edx-0x80],cl
  41fa0c:	mov    ecx,0xa8b43c1f
  41fa11:	inc    eax
  41fa12:	(bad)  
  41fa13:	cli    
  41fa14:	fld    DWORD PTR [eax]
  41fa16:	(bad)  
  41fa17:	mov    al,0xff
  41fa19:	jb     0x41fa61
  41fa1b:	and    DWORD PTR [edi],edi
  41fa1d:	mov    eax,ds:0xb26fe45f
  41fa22:	xchg   esi,eax
  41fa23:	cmp    DWORD PTR [esi],ebp
  41fa25:	or     BYTE PTR [esi-0x11150037],ah
  41fa2b:	jae    0x41fa08
  41fa2d:	add    DWORD PTR ds:0x802338e7,ebx
  41fa33:	xor    ebx,DWORD PTR [eax-0x22cf586d]
  41fa39:	mov    eax,0xf4d2189a
  41fa3e:	dec    esi
  41fa3f:	push   ds
  41fa40:	hlt    
  41fa41:	jmp    FWORD PTR [ecx]
  41fa43:	in     al,0x6b
  41fa45:	xchg   BYTE PTR [edi+0x40fdbf80],cl
  41fa4b:	imul   edi,DWORD PTR [ebp+edi*2+0x37],0x84c603e7
  41fa53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa54:	jne    0x41f9f4
  41fa56:	push   edx
  41fa57:	cmp    al,0xbf
  41fa59:	ss push edx
  41fa5b:	xchg   BYTE PTR [eax],dl
  41fa5d:	adc    esi,ebx
  41fa5f:	xlat   BYTE PTR ds:[ebx]
  41fa60:	iret   
  41fa61:	adc    al,0x22
  41fa63:	call   0x9ee:0x22b6799b
  41fa6a:	dec    edi
  41fa6b:	idiv   BYTE PTR [ebx]
  41fa6d:	fwait
  41fa6e:	mov    eax,0x96c85636
  41fa73:	dec    ecx
  41fa74:	ja     0x41fa7f
  41fa76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa77:	in     eax,dx
  41fa78:	les    ebp,FWORD PTR [edi+0xe]
  41fa7b:	stos   DWORD PTR es:[edi],eax
  41fa7c:	pop    ebp
  41fa7d:	aaa    
  41fa7e:	rcr    BYTE PTR [ecx],cl
  41fa80:	mov    ebp,0x66bcb4cc
  41fa85:	xchg   BYTE PTR [edi],ch
  41fa87:	or     esp,DWORD PTR [ebp+0x7d59e911]
  41fa8d:	je     0x41fa27
  41fa8f:	in     al,0x8b
  41fa91:	dec    esp
  41fa92:	popa   
  41fa93:	jle    0x41fa83
  41fa95:	sub    BYTE PTR [ebx],bh
  41fa97:	push   ebp
  41fa98:	cld    
  41fa99:	stos   BYTE PTR es:[edi],al
  41fa9a:	cmp    esi,DWORD PTR [edi-0x5f]
  41fa9d:	(bad)  
  41fa9e:	loop   0x41fae6
  41faa0:	test   BYTE PTR [eax-0x7b6cea8f],cl
  41faa6:	stos   DWORD PTR es:[edi],eax
  41faa7:	and    al,0xd6
  41faa9:	ss pop esi
  41faab:	popf   
  41faac:	aas    
  41faad:	aad    0x74
  41faaf:	aad    0xb1
  41fab1:	test   al,0x9b
  41fab3:	les    esp,FWORD PTR [esi+0x4f]
  41fab6:	stos   DWORD PTR es:[edi],eax
  41fab7:	mov    ecx,0x88818ea8
  41fabc:	pop    esp
  41fabd:	push   ecx
  41fabe:	xor    eax,0x9a3aad4e
  41fac3:	or     al,0xe7
  41fac5:	imul   sp,si,0x7f7d
  41faca:	out    0xcb,eax
  41facc:	sahf   
  41facd:	dec    esi
  41face:	mov    eax,0x2747fa57
  41fad3:	mov    ds:0x37538725,eax
  41fad8:	shl    DWORD PTR [ecx+0x36],1
  41fadb:	sbb    ch,dh
  41fadd:	cld    
  41fade:	push   edx
  41fadf:	mov    esp,0x43d35026
  41fae4:	jp     0x41fabe
  41fae6:	pop    esp
  41fae7:	and    DWORD PTR [eax+ecx*1+0x59],edx
  41faeb:	xor    eax,0x881c935
  41faf0:	sub    eax,0x4eef3b8b
  41faf5:	dec    ebx
  41faf6:	pop    ds
  41faf7:	jle    0x41fb62
  41faf9:	ror    DWORD PTR [ecx],1
  41fafb:	ret    0x9758
  41fafe:	xor    cl,BYTE PTR [esi+0x21]
  41fb01:	or     dh,BYTE PTR [eax-0xa8e98d7]
  41fb07:	push   esi
  41fb08:	mov    ebx,0xe61fffad
  41fb0d:	mov    eax,ds:0xa84d793c
  41fb12:	xchg   esi,eax
  41fb13:	and    ebx,DWORD PTR [ecx]
  41fb15:	push   edi
  41fb16:	mov    edi,0xbb4767e9
  41fb1b:	mov    cl,0x64
  41fb1d:	(bad)  
  41fb1e:	jp     0x41fb3f
  41fb20:	or     al,BYTE PTR [edi-0x184e1342]
  41fb26:	and    DWORD PTR [edx-0x31],ebp
  41fb29:	jmp    0x41fb77
  41fb2b:	pop    edx
  41fb2c:	push   ds
  41fb2d:	retf   
  41fb2e:	mov    BYTE PTR [ecx-0x6a209d15],dl
  41fb34:	mov    esp,0x429afe8
  41fb39:	fmul   DWORD PTR gs:[edi-0x8af13d6]
  41fb40:	or     dh,ch
  41fb42:	imul   edi,DWORD PTR [esi],0xcd731c16
  41fb48:	jb     0x41fb94
  41fb4a:	xlat   BYTE PTR ds:[ebx]
  41fb4b:	cwde   
  41fb4c:	retf   
  41fb4d:	ffreep st(6)
  41fb4f:	xor    eax,0x29c23293
  41fb54:	dec    ebx
  41fb55:	fldz   
  41fb57:	enter  0xbb5b,0xec
  41fb5b:	sahf   
  41fb5c:	adc    al,0x52
  41fb5e:	adc    al,0x87
  41fb60:	xchg   ecx,eax
  41fb61:	ret    
  41fb62:	xchg   BYTE PTR [ebp-0x2d],bh
  41fb65:	and    al,0xd4
  41fb67:	and    DWORD PTR [edx+0x5c499db3],eax
  41fb6d:	push   edx
  41fb6e:	pop    ebx
  41fb6f:	inc    esi
  41fb70:	cwde   
  41fb71:	stos   DWORD PTR es:[edi],eax
  41fb72:	push   ss
  41fb73:	outs   dx,BYTE PTR ds:[esi]
  41fb74:	dec    edx
  41fb75:	or     esp,DWORD PTR [edi]
  41fb77:	hlt    
  41fb78:	add    BYTE PTR [eax],al
  41fb7a:	dec    esi
  41fb7b:	ret    
  41fb7c:	inc    ebp
  41fb7d:	mov    cl,0x2b
  41fb7f:	aas    
  41fb80:	repnz cld 
  41fb82:	arpl   WORD PTR [ebx],ax
  41fb84:	lods   al,BYTE PTR ds:[esi]
  41fb85:	out    0x9e,al
  41fb87:	or     DWORD PTR [esi+0x62],esi
  41fb8a:	or     DWORD PTR [eax+0x1a1c4fd0],ebp
  41fb90:	push   ebx
  41fb91:	sbb    ebp,0x8a1f66d6
  41fb97:	pop    ds
  41fb98:	aas    
  41fb99:	mov    eax,ds:0xedd19099
  41fb9e:	push   0x38
  41fba0:	pop    edx
  41fba1:	adc    eax,0x7f4abfda
  41fba6:	out    dx,eax
  41fba7:	adc    eax,0x2e877fb0
  41fbac:	arpl   WORD PTR [edi],bp
  41fbae:	imul   esp,DWORD PTR [edi+ecx*8-0x4e80cde1],0x16df7c6f
  41fbb9:	sahf   
  41fbba:	jp     0x41fb76
  41fbbc:	or     ebx,DWORD PTR [edi+0x7fa439b7]
  41fbc2:	cli    
  41fbc3:	fistp  QWORD PTR [esi+0x5424634f]
  41fbc9:	xchg   ebx,eax
  41fbca:	add    eax,0xdb9820d
  41fbcf:	mov    cl,cl
  41fbd1:	pop    ds
  41fbd2:	ins    BYTE PTR es:[edi],dx
  41fbd3:	aad    0x3d
  41fbd5:	mov    ebp,0xebd7ea83
  41fbda:	lahf   
  41fbdb:	xor    DWORD PTR [esp+eax*1+0x23bd362c],ebx
  41fbe2:	fwait
  41fbe3:	popf   
  41fbe4:	mov    ebx,DWORD PTR ds:0xe9f3ca63
  41fbea:	loopne 0x41fbd4
  41fbec:	jle    0x41fc02
  41fbee:	dec    esi
  41fbef:	mov    ebx,0x1bf31b6
  41fbf4:	jbe    0x41fbeb
  41fbf6:	cdq    
  41fbf7:	or     DWORD PTR [edi+0x25f3d7d3],edi
  41fbfd:	pop    ds
  41fbfe:	mov    ebx,0xeaca25ac
  41fc03:	and    dh,BYTE PTR [ecx+ebp*4]
  41fc06:	lods   eax,DWORD PTR ds:[esi]
  41fc07:	fld    st(0)
  41fc09:	sbb    al,0xf8
  41fc0b:	push   ds
  41fc0c:	lahf   
  41fc0d:	fst    DWORD PTR [esi]
  41fc0f:	retf   0xef7d
  41fc12:	xchg   edx,eax
  41fc13:	xchg   ebp,eax
  41fc14:	mov    edx,0x5f80fcd8
  41fc19:	xchg   esp,eax
  41fc1a:	mov    BYTE PTR [eax],al
  41fc1c:	ret    
  41fc1d:	fwait
  41fc1e:	cmc    
  41fc1f:	xor    dh,BYTE PTR [ecx+0x75]
  41fc22:	sbb    ecx,DWORD PTR [esi+0x30776c74]
  41fc28:	jmp    0x41fbda
  41fc2a:	(bad)  
  41fc2b:	in     al,dx
  41fc2c:	std    
  41fc2d:	cmp    bh,BYTE PTR [esi+eax*4-0x59f61b5d]
  41fc34:	fisubr DWORD PTR [ebx-0x9dc0b42]
  41fc3a:	shl    BYTE PTR [ecx+0x3f9f8d5b],1
  41fc40:	(bad)  
  41fc41:	into   
  41fc42:	inc    ebp
  41fc43:	mov    ebp,cs
  41fc45:	lds    eax,FWORD PTR [ecx+ebp*4+0x27ab4cce]
  41fc4c:	sub    edx,edx
  41fc4e:	loopne 0x41fbe1
  41fc50:	inc    ebp
  41fc51:	cmp    cl,dh
  41fc53:	nop
  41fc54:	xor    al,BYTE PTR [esi+0x2b8c347d]
  41fc5a:	xchg   BYTE PTR [edx],bh
  41fc5c:	xchg   ecx,eax
  41fc5d:	dec    ebp
  41fc5e:	addr16 out dx,al
  41fc60:	test   al,0x34
  41fc62:	mov    ah,BYTE PTR [eax+ecx*1-0x40]
  41fc66:	mov    bl,0x3a
  41fc68:	mov    ebx,ecx
  41fc6a:	cs js  0x41fc60
  41fc6d:	fnstsw WORD PTR [edi-0x52]
  41fc70:	adc    ah,BYTE PTR [ecx]
  41fc72:	jecxz  0x41fcc1
  41fc74:	add    bl,BYTE PTR [ebp+0x71]
  41fc77:	fld    QWORD PTR [esi-0x79b908e6]
  41fc7d:	pop    ebx
  41fc7e:	dec    eax
  41fc7f:	jle    0x41fc42
  41fc81:	cmc    
  41fc82:	mov    bh,0x4c
  41fc84:	push   cs
  41fc85:	cld    
  41fc86:	jge    0x41fc13
  41fc88:	scas   eax,DWORD PTR es:[edi]
  41fc89:	repz xor BYTE PTR [ecx+0x33e2d1f3],0xdc
  41fc91:	clc    
  41fc92:	sbb    BYTE PTR [esi+eiz*4],0xa8
  41fc96:	aaa    
  41fc97:	stc    
  41fc98:	mov    edi,DWORD PTR [edi+edi*4-0x268d68b]
  41fc9f:	aad    0x74
  41fca1:	inc    esi
  41fca2:	out    0x81,eax
  41fca4:	inc    esi
  41fca5:	int3   
  41fca6:	loope  0x41fcde
  41fca8:	jmp    0x9f3b:0xb51192bb
  41fcaf:	and    BYTE PTR [ebx+0x28],bh
  41fcb2:	dec    ebp
  41fcb3:	stos   BYTE PTR es:[edi],al
  41fcb4:	outs   dx,BYTE PTR ds:[esi]
  41fcb5:	shr    DWORD PTR [edi-0x2c],0x40
  41fcb9:	sub    cl,BYTE PTR [ebx-0x748535e2]
  41fcbf:	(bad)  
  41fcc0:	(bad)  
  41fcc1:	mov    ecx,0xb4d93fe3
  41fcc6:	mov    bh,0x2b
  41fcc8:	cmc    
  41fcc9:	imul   ecx,edi,0x7617a471
  41fccf:	and    bh,ch
  41fcd1:	dec    ecx
  41fcd2:	(bad)  
  41fcd3:	(bad)  
  41fcd4:	fiadd  WORD PTR [edx-0x4d]
  41fcd7:	test   DWORD PTR [ebx+0x765c0d9b],ecx
  41fcdd:	and    bl,ah
  41fcdf:	jns    0x41fc7b
  41fce1:	leave  
  41fce2:	push   edi
  41fce3:	sbb    DWORD PTR [esi-0x1140c8c9],0xda2e3484
  41fced:	mov    ds:0x3f1b274,al
  41fcf2:	test   eax,0x130a3083
  41fcf7:	lods   al,BYTE PTR ds:[esi]
  41fcf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcf9:	mov    eax,ds:0x98e248ec
  41fcfe:	ins    BYTE PTR es:[edi],dx
  41fcff:	push   ebx
  41fd00:	sbb    eax,0xe53ae2f0
  41fd05:	xchg   BYTE PTR [edi+0x70],dl
  41fd08:	outs   dx,DWORD PTR ds:[esi]
  41fd09:	cmp    al,0x6e
  41fd0b:	rcl    BYTE PTR [ebx+0x32],1
  41fd0e:	loop   0x41fca5
  41fd10:	and    esi,DWORD PTR [ecx]
  41fd12:	dec    edx
  41fd13:	sbb    edi,DWORD PTR [ebx-0x4868b7b6]
  41fd19:	mov    WORD PTR [esi],?
  41fd1b:	test   BYTE PTR [esi-0x4405d813],al
  41fd21:	mov    eax,0xaeb4412d
  41fd26:	xchg   esi,eax
  41fd27:	stos   DWORD PTR es:[edi],eax
  41fd28:	sti    
  41fd29:	push   ecx
  41fd2a:	mov    al,ds:0x20a7f9b7
  41fd2f:	jns    0x41fd30
  41fd31:	shl    BYTE PTR [esi+edx*1],0xd7
  41fd35:	bound  esi,QWORD PTR [ecx]
  41fd37:	int    0xa7
  41fd39:	scas   eax,DWORD PTR es:[edi]
  41fd3a:	pop    ds
  41fd3b:	jb     0x41fd71
  41fd3d:	lea    esi,[ecx]
  41fd3f:	mov    al,ds:0x791ea31c
  41fd44:	sub    eax,0x2eaa653c
  41fd49:	mov    WORD PTR [edx+0xe86229f],ds
  41fd4f:	cld    
  41fd50:	add    DWORD PTR [esi-0x72c5448a],0xffffff82
  41fd57:	lods   eax,DWORD PTR ds:[esi]
  41fd58:	sbb    DWORD PTR [esi-0x6f4b4dc7],eax
  41fd5e:	cvttps2pi mm7,xmm3
  41fd61:	aam    0xde
  41fd63:	enter  0x6496,0xe9
  41fd67:	aaa    
  41fd68:	jp     0x41fda8
  41fd6a:	pop    edx
  41fd6b:	dec    esp
  41fd6c:	inc    ebp
  41fd6d:	scas   eax,DWORD PTR es:[edi]
  41fd6e:	pushf  
  41fd6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd70:	out    dx,eax
  41fd71:	(bad)  
  41fd72:	sbb    bh,bl
  41fd74:	cmp    ecx,DWORD PTR [esi-0x7a]
  41fd77:	pop    ebp
  41fd78:	test   eax,0xc1ca8795
  41fd7d:	sub    edi,DWORD PTR [esi-0x12406b6]
  41fd83:	fnstsw WORD PTR ds:0x3cee3d5c
  41fd89:	dec    edx
  41fd8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd8b:	or     DWORD PTR [bp+di+0x4bef],0x42be2b86
  41fd94:	push   esi
  41fd95:	push   ss
  41fd96:	int3   
  41fd97:	xchg   BYTE PTR [ecx],dl
  41fd99:	cmp    BYTE PTR [edx-0x1010c42b],bh
  41fd9f:	add    esp,DWORD PTR [eax+0x73]
  41fda2:	stc    
  41fda3:	call   0x6b4d7f53
  41fda8:	xchg   esi,eax
  41fda9:	mov    ch,0x8e
  41fdab:	sahf   
  41fdac:	push   ecx
  41fdad:	jns    0x41fd4f
  41fdaf:	jne    0x41fdf9
  41fdb1:	lea    esi,ds:0xd445908b
  41fdb7:	daa    
  41fdb8:	loopne 0x41fd84
  41fdba:	xor    DWORD PTR [edx-0x52],ecx
  41fdbd:	mov    edx,0xeaa0bc05
  41fdc2:	cmc    
  41fdc3:	sar    DWORD PTR [ecx+0x9],0xbe
  41fdc7:	test   eax,0x5f33b566
  41fdcc:	int    0x60
  41fdce:	and    al,cl
  41fdd0:	movd   DWORD PTR [ecx-0x60],mm1
  41fdd4:	cmp    cl,BYTE PTR ds:0xf85d01db
  41fdda:	out    dx,al
  41fddb:	mov    eax,0xcb7eb114
  41fde0:	and    DWORD PTR [esi+0x1c4aced7],ecx
  41fde6:	mov    bh,0xeb
  41fde8:	ret    0xe19f
  41fdeb:	gs xchg ah,bh
  41fdee:	inc    esi
  41fdef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdf0:	and    DWORD PTR [ecx],esi
  41fdf2:	adc    BYTE PTR [edi+0x3ee331c6],ch
  41fdf8:	in     eax,dx
  41fdf9:	cmp    dh,ch
  41fdfb:	sbb    al,BYTE PTR [eax-0x2dba18ce]
  41fe01:	sub    BYTE PTR [esi],dh
  41fe03:	dec    ebp
  41fe04:	cdq    
  41fe05:	scas   eax,DWORD PTR es:[edi]
  41fe06:	or     edi,DWORD PTR [ebx+0x41]
  41fe09:	in     al,0xfb
  41fe0b:	imul   esi,DWORD PTR [ebp-0x3b],0xffffffef
  41fe0f:	pop    ss
  41fe10:	xor    ebx,DWORD PTR [esi-0x27]
  41fe13:	or     DWORD PTR [edi+0x63],0xa619d905
  41fe1a:	fimul  WORD PTR [edi+0xa9cbd05]
  41fe20:	mov    bh,0xa0
  41fe22:	fdivp  st(4),st
  41fe24:	jo     0x41fdd7
  41fe26:	ret    
  41fe27:	(bad)  
  41fe28:	xchg   ecx,eax
  41fe29:	xor    DWORD PTR [ecx+0x64fbe447],edx
  41fe2f:	cmp    BYTE PTR [ecx-0x49449ba2],dl
  41fe35:	cs mov cl,0x6e
  41fe38:	js     0x41fdeb
  41fe3a:	add    cl,BYTE PTR [edi+edx*2-0x4fba21ce]
  41fe41:	push   eax
  41fe42:	xor    edi,edx
  41fe44:	mov    edx,esi
  41fe46:	pop    ebp
  41fe47:	push   ecx
  41fe48:	cmp    eax,0x9fae0f75
  41fe4d:	xchg   DWORD PTR [edi+0x51],edi
  41fe50:	pop    edi
  41fe51:	gs in  eax,0xbb
  41fe54:	mov    ecx,0x76c7f661
  41fe59:	daa    
  41fe5a:	lods   eax,DWORD PTR ds:[esi]
  41fe5b:	adc    eax,0x3d52911e
  41fe60:	and    esi,DWORD PTR [edi]
  41fe62:	xchg   edx,eax
  41fe63:	push   ebx
  41fe64:	and    ch,BYTE PTR [edx]
  41fe66:	push   0x49
  41fe68:	daa    
  41fe69:	mov    DWORD PTR [ebx-0x6d],esi
  41fe6c:	pop    esi
  41fe6d:	mov    ds:0x561b8563,al
  41fe72:	add    DWORD PTR [ecx],0x2f
  41fe75:	dec    edx
  41fe76:	mov    ecx,0xd63f42
  41fe7b:	mov    edi,0x43436a90
  41fe80:	mov    eax,ds:0xdb40ce99
  41fe85:	pushf  
  41fe86:	mov    es,WORD PTR [edx-0x5d]
  41fe89:	mov    edx,0xe2874585
  41fe8e:	push   0x7ef586ba
  41fe93:	add    eax,0x55f2a699
  41fe98:	and    DWORD PTR [esi],ebx
  41fe9a:	mov    dl,0x64
  41fe9c:	pop    edx
  41fe9d:	xor    esi,DWORD PTR [ebx-0x5a8f83ae]
  41fea3:	retf   
  41fea4:	lahf   
  41fea5:	das    
  41fea6:	mov    ds,ecx
  41fea8:	add    BYTE PTR [edx+eax*2+0x7a],dh
  41feac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fead:	idiv   BYTE PTR [ebp+0x508cca5f]
  41feb3:	lahf   
  41feb4:	xor    esp,0x8840c814
  41feba:	jle    0x41feef
  41febc:	sbb    DWORD PTR ds:0x2b0d5d0d,ebx
  41fec2:	mov    al,cl
  41fec4:	aas    
  41fec5:	(bad)  
  41fec6:	dec    ebp
  41fec7:	jno    0x41fece
  41fec9:	pop    eax
  41feca:	cmp    eax,edx
  41fecc:	inc    edx
  41fecd:	cmp    edi,DWORD PTR [edi]
  41fecf:	jns    0x41febf
  41fed1:	retf   
  41fed2:	ds mov esp,0x367eb931
  41fed8:	jbe    0x41feb3
  41feda:	stos   BYTE PTR es:[edi],al
  41fedb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fedc:	or     ecx,esi
  41fede:	inc    edx
  41fedf:	(bad)  
  41fee0:	int    0x59
  41fee2:	repnz sahf 
  41fee4:	pop    ecx
  41fee5:	mov    ds:0x4fd828cc,eax
  41feea:	outs   dx,BYTE PTR gs:[esi]
  41feec:	mov    ebx,0x77119e11
  41fef1:	cdq    
  41fef2:	pop    esi
  41fef3:	lods   eax,DWORD PTR ds:[esi]
  41fef4:	imul   edx,DWORD PTR [edi+0x3d],0x176f6e15
  41fefb:	popf   
  41fefc:	mov    edi,0x8e5b6222
  41ff01:	mov    edx,0x35e4b228
  41ff06:	popf   
  41ff07:	push   ecx
  41ff08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff09:	add    BYTE PTR [eax],dl
  41ff0b:	mov    ebp,0xd2673856
  41ff10:	mov    edx,0x72061b01
  41ff15:	dec    edx
  41ff16:	jg     0x41fe9b
  41ff18:	jle    0x41ff2e
  41ff1a:	mov    al,0xb2
  41ff1c:	test   esi,ebp
  41ff1e:	xchg   ebp,eax
  41ff1f:	jle    0x41ff1e
  41ff21:	pop    es
  41ff22:	sub    DWORD PTR [ebp-0x41],eax
  41ff25:	cmp    al,0xea
  41ff27:	mov    esp,0x861752b0
  41ff2c:	fistp  WORD PTR [edx+0x58273643]
  41ff32:	adc    eax,0xc4a2f751
  41ff37:	pop    esi
  41ff38:	adc    eax,0xefe7cc01
  41ff3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff3e:	jl     0x41ffb0
  41ff40:	mov    dl,0x29
  41ff42:	popf   
  41ff43:	fstp   QWORD PTR [edi-0x343a1de1]
  41ff49:	sahf   
  41ff4a:	push   0x861b14de
  41ff4f:	dec    ecx
  41ff50:	or     ebp,DWORD PTR [ebx-0x184921b7]
  41ff56:	ret    
  41ff57:	dec    ecx
  41ff58:	ins    DWORD PTR es:[edi],dx
  41ff59:	test   edi,ebp
  41ff5b:	sti    
  41ff5c:	lahf   
  41ff5d:	lds    esi,FWORD PTR [ecx-0x3e065442]
  41ff63:	aas    
  41ff64:	mov    eax,0xcbb99e14
  41ff69:	test   eax,0xa7a01d30
  41ff6e:	sahf   
  41ff6f:	in     al,0x56
  41ff71:	mov    esi,esp
  41ff73:	and    eax,0x344bc91b
  41ff78:	cmp    eax,0xaa3c5e35
  41ff7d:	xchg   ebp,eax
  41ff7e:	fadd   QWORD PTR [edx+0x4dc85511]
  41ff84:	dec    ecx
  41ff85:	inc    ebx
  41ff86:	popf   
  41ff87:	retf   
  41ff88:	stc    
  41ff89:	dec    edi
  41ff8a:	stos   DWORD PTR es:[edi],eax
  41ff8b:	sar    BYTE PTR [ecx],cl
  41ff8d:	mov    WORD PTR [edx],es
  41ff8f:	(bad)  
  41ff90:	pop    ebp
  41ff91:	test   al,0xe9
  41ff93:	add    eax,0x5b679e53
  41ff98:	jge    0x41ff43
  41ff9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff9b:	iret   
  41ff9c:	mov    esp,0x868d8db4
  41ffa1:	sbb    al,0xb9
  41ffa3:	add    ecx,edi
  41ffa5:	xlat   BYTE PTR ds:[ebx]
  41ffa6:	or     al,0x1
  41ffa8:	sbb    eax,0xec8ed9c9
  41ffad:	arpl   WORD PTR ds:0x2f6c9a13,ax
  41ffb3:	jmp    0x1423:0x21fb1303
  41ffba:	mov    edi,0xb623359
  41ffbf:	loop   0x41ff4f
  41ffc1:	fmul   DWORD PTR [eax]
  41ffc3:	mov    ds:0x4b328e36,al
  41ffc8:	xchg   ebp,eax
  41ffc9:	fidiv  WORD PTR [ecx+0x2d3a74a9]
  41ffcf:	leave  
  41ffd0:	lahf   
  41ffd1:	inc    ecx
  41ffd2:	cmp    al,0x59
  41ffd4:	js     0x41ffa6
  41ffd6:	sbb    DWORD PTR [ecx-0x1ad44da6],esp
  41ffdc:	xchg   esi,eax
  41ffdd:	cmc    
  41ffde:	jle    0x41ff9c
  41ffe0:	push   edi
  41ffe1:	aaa    
  41ffe2:	push   edi
  41ffe3:	and    al,0x31
  41ffe5:	sbb    eax,0x5d365cdf
  41ffea:	push   esi
  41ffeb:	out    0x41,eax
  41ffed:	mov    ds:0xdd276cd7,al
  41fff2:	cmp    dh,cl
  41fff4:	mov    cl,0xc6
  41fff6:	xchg   esi,eax
  41fff7:	int3   
  41fff8:	fcmovb st,st(6)
  41fffa:	dec    edi
  41fffb:	inc    esi
  41fffc:	inc    eax
  41fffd:	arpl   WORD PTR [ecx-0x6],dx
  420000:	jecxz  0x41ffeb
  420002:	mov    eax,es
  420004:	or     bl,BYTE PTR [ebx+0x6f42428e]
  42000a:	imul   ebx,ecx,0xffffffcf
  42000d:	add    al,0xd3
  42000f:	push   ss
  420010:	lock cmp al,0x29
  420013:	pusha  
  420014:	sti    
  420015:	ds into 
  420017:	xor    eax,0x43ad0755
  42001c:	mov    BYTE PTR [edx+edi*4-0x48f5606a],bh
  420023:	sbb    al,0x8e
  420025:	loop   0x420067
  420027:	cmp    ebp,esp
  420029:	mov    ebx,esi
  42002b:	dec    ecx
  42002c:	adc    al,0x35
  42002e:	test   BYTE PTR [esi+0x46],0xff
  420032:	dec    esi
  420033:	dec    edx
  420034:	dec    ebp
  420035:	dec    edx
  420036:	mov    ch,0xba
  420038:	and    bl,BYTE PTR [esi+0x19]
  42003b:	leave  
  42003c:	fdiv   QWORD PTR [esi]
  42003e:	xor    esp,DWORD PTR [esi-0x4e98579e]
  420044:	xchg   ecx,eax
  420045:	sahf   
  420046:	pop    ebp
  420047:	xchg   ebx,eax
  420048:	mov    WORD PTR [eax-0x7eb9ffb0],es
  42004e:	sub    al,0xaf
  420050:	xchg   ebx,eax
  420051:	aas    
  420052:	xor    esi,DWORD PTR [eax+edx*2+0x4beab9eb]
  420059:	inc    esp
  42005a:	shl    dl,cl
  42005c:	pop    es
  42005d:	jne    0x420099
  42005f:	fwait
  420060:	add    eax,0xd4193595
  420065:	iret   
  420066:	cmp    DWORD PTR [esi],esi
  420068:	mov    ds:0x3b4c2b64,eax
  42006d:	xchg   ebx,eax
  42006e:	jmp    0x5c33:0x51ff1636
  420075:	push   0x65
  420077:	addr16 stc 
  420079:	scas   eax,DWORD PTR es:[edi]
  42007a:	ficom  WORD PTR [esi]
  42007c:	retf   
  42007d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42007e:	mov    ah,0x2d
  420080:	and    DWORD PTR [esi+0x432d3b05],0xc1f86e99
  42008a:	pop    edi
  42008b:	out    0x13,al
  42008d:	jbe    0x420012
  42008f:	es loopne 0x420099
  420092:	out    dx,al
  420093:	cld    
  420094:	in     al,dx
  420095:	jbe    0x4200bf
  420097:	jns    0x420072
  420099:	adc    ax,0x71b3
  42009d:	and    al,0x6d
  42009f:	test   al,0x47
  4200a1:	adc    bl,BYTE PTR [ecx+edi*8-0x1d]
  4200a5:	cmp    BYTE PTR ds:0x32c1edc0,bh
  4200ab:	or     al,0x89
  4200ad:	xchg   ecx,eax
  4200ae:	push   cs
  4200af:	mov    eax,ds:0x1970018f
  4200b4:	pop    ds
  4200b5:	push   esp
  4200b6:	leave  
  4200b7:	loopne 0x420129
  4200b9:	pop    esi
  4200ba:	jae    0x420084
  4200bc:	mov    ch,0xc5
  4200be:	ficomp WORD PTR [ebx+0x1e]
  4200c1:	test   BYTE PTR [ebx],ch
  4200c3:	inc    bx
  4200c5:	pop    eax
  4200c6:	dec    eax
  4200c7:	arpl   WORD PTR [edx],bp
  4200c9:	jns    0x42005d
  4200cb:	mov    ds:0x28e5420f,eax
  4200d0:	xchg   edi,eax
  4200d1:	and    DWORD PTR [esi-0x2ddfa957],0xaff9ead3
  4200db:	(bad)  
  4200dc:	sbb    BYTE PTR [edi+0x60],ch
  4200df:	xchg   ecx,eax
  4200e0:	iret   
  4200e1:	(bad)  
  4200e2:	imul   esp,DWORD PTR [ebx-0x3d29a963],0x44
  4200e9:	dec    ebp
  4200ea:	int    0xdc
  4200ec:	sub    bh,bl
  4200ee:	or     DWORD PTR [edi],ebp
  4200f0:	mov    cl,0x37
  4200f2:	push   esp
  4200f3:	aaa    
  4200f4:	or     ah,BYTE PTR ds:0xf6216003
  4200fa:	push   es
  4200fb:	jl     0x420140
  4200fd:	sbb    al,BYTE PTR [esi]
  4200ff:	fnsave [edx+edi*8-0x10571d54]
  420106:	ror    DWORD PTR [edx],0x50
  420109:	cmp    cl,BYTE PTR [ecx-0x39]
  42010c:	outs   dx,BYTE PTR ds:[esi]
  42010d:	retf   0x9445
  420110:	(bad)  
  420111:	xor    BYTE PTR [esi-0x437d7839],ch
  420117:	sbb    al,0xc
  420119:	mov    esp,0x31917af
  42011e:	adc    BYTE PTR [edx*2-0x4619f189],0x3c
  420126:	xchg   edx,eax
  420127:	mov    ebp,0x880b868b
  42012d:	call   0x593f9161
  420132:	sbb    eax,0xb355b29d
  420137:	sub    ebp,esp
  420139:	std    
  42013a:	pop    edx
  42013b:	fs in  al,dx
  42013d:	pop    esi
  42013e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42013f:	(bad)  
  420141:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420142:	test   eax,0x31357448
  420147:	cli    
  420148:	push   es
  420149:	pop    ecx
  42014a:	mov    ds:0xcb79a04b,eax
  42014f:	icebp  
  420150:	(bad)  
  420151:	aaa    
  420152:	jb     0x420105
  420154:	loopne 0x420138
  420156:	xchg   ecx,eax
  420157:	inc    eax
  420158:	xchg   esp,eax
  420159:	frstor [edx]
  42015b:	add    eax,0xac6382be
  420160:	retf   0xc356
  420163:	scas   al,BYTE PTR es:[edi]
  420164:	sub    eax,0x2eba3a5b
  420169:	inc    esp
  42016a:	test   eax,0xbce54e6b
  42016f:	loope  0x420118
  420171:	outs   dx,DWORD PTR ds:[esi]
  420172:	push   esp
  420173:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420174:	cmp    dl,BYTE PTR [edx]
  420176:	push   ds
  420177:	ret    
  420178:	jnp    0x42015a
  42017a:	rcl    BYTE PTR [edx],0xe
  42017d:	dec    ebp
  42017e:	or     al,0x6d
  420180:	das    
  420181:	sub    bh,ch
  420183:	in     eax,dx
  420184:	out    0x4b,al
  420186:	sbb    bl,BYTE PTR [edx-0x40]
  420189:	fsubp  st(2),st
  42018b:	mov    ebx,ecx
  42018d:	dec    ebp
  42018e:	xor    ah,dl
  420190:	out    dx,eax
  420191:	(bad)  
  420192:	out    dx,al
  420193:	adc    dl,BYTE PTR [ebx-0x1b]
  420196:	add    ecx,eax
  420198:	mov    edi,0x6c7b6a3c
  42019d:	pop    ecx
  42019e:	xchg   esi,eax
  42019f:	inc    esi
  4201a0:	mov    ds:0x93dc59d2,eax
  4201a5:	xchg   ebx,eax
  4201a6:	mov    bh,0x1d
  4201a8:	inc    esp
  4201a9:	inc    ecx
  4201aa:	inc    ah
  4201ac:	and    bl,BYTE PTR ds:[edi+0x5d]
  4201b0:	je     0x420195
  4201b2:	loopne 0x420169
  4201b4:	add    DWORD PTR [edx+0x3e],ebx
  4201b7:	inc    esi
  4201b8:	(bad)  
  4201ba:	in     al,0x90
  4201bc:	arpl   WORD PTR es:[ecx+0x1f22f2e6],bx
  4201c3:	(bad)  
  4201c4:	sub    eax,0x59dbb5a0
  4201c9:	(bad)  
  4201ca:	dec    edi
  4201cb:	cli    
  4201cc:	mov    esi,0x5c3a045a
  4201d1:	dec    ebp
  4201d2:	lahf   
  4201d3:	mov    ebx,0x53b6b325
  4201d8:	xor    al,0xe0
  4201da:	jb     0x4201ad
  4201dc:	mov    eax,0xabe09bf9
  4201e1:	jbe    0x420177
  4201e3:	sub    ah,BYTE PTR [edi+0x40]
  4201e6:	add    dh,BYTE PTR [ebx+0x7ee799bc]
  4201ec:	push   cs
  4201ed:	scas   eax,DWORD PTR es:[edi]
  4201ee:	jle    0x42017e
  4201f0:	inc    DWORD PTR [eax]
  4201f2:	loopne 0x4201c4
  4201f4:	ret    0x393e
  4201f7:	mov    dl,ah
  4201f9:	mov    bh,0xf4
  4201fb:	test   DWORD PTR [eax+0x4bc74184],edi
  420201:	or     dh,BYTE PTR [edi]
  420203:	(bad)  [ebx-0x72fea37a]
  420209:	std    
  42020a:	es xor eax,0x42f0b7f4
  420210:	data16 cli 
  420212:	int    0xa8
  420214:	loop   0x420259
  420216:	arpl   WORD PTR [esi+ebp*1],sp
  420219:	(bad)
  42021c:	ins    BYTE PTR es:[edi],dx
  42021d:	mov    eax,ds:0x9875162d
  420222:	fistp  WORD PTR [edi+0x1f]
  420225:	push   esi
  420226:	test   BYTE PTR [eax-0x15402c97],0x34
  42022d:	jle    0x42022e
  42022f:	test   eax,0x2a4d91df
  420234:	fstp   DWORD PTR gs:[esi-0x3c8daec3]
  42023b:	mov    ecx,0x3004871a
  420240:	mov    WORD PTR [edx+edi*4-0x5159f7fb],?
  420247:	(bad)  
  420248:	(bad)  
  420249:	or     eax,0xc23a8798
  42024e:	inc    eax
  42024f:	xchg   esp,eax
  420250:	js     0x4202b4
  420252:	inc    ebp
  420253:	cmp    cl,bh
  420255:	aad    0xdd
  420257:	adc    dl,ch
  420259:	and    edi,DWORD PTR ds:0x5517a3a9
  42025f:	sbb    eax,0x605eb91b
  420264:	xchg   ebx,eax
  420265:	inc    ebx
  420266:	push   0xffffff9e
  420268:	mov    bh,BYTE PTR [esi-0x44913b44]
  42026e:	mov    ds:0xb6470ec1,eax
  420273:	mov    BYTE PTR [eax],cl
  420275:	fild   QWORD PTR [ecx]
  420277:	retf   
  420278:	or     DWORD PTR [ecx-0x3a],ebp
  42027b:	or     bl,BYTE PTR [esi+ebx*2]
  42027e:	out    dx,al
  42027f:	dec    edi
  420280:	call   0x7d50:0xf6748927
  420287:	fcom   st(1)
  420289:	mov    dh,0xb4
  42028b:	push   edx
  42028c:	jno    0x4202c4
  42028e:	cwde   
  42028f:	mov    bh,0xe8
  420292:	(bad)  
  420293:	in     eax,dx
  420294:	jecxz  0x4202f4
  420296:	pop    esp
  420297:	ja     0x4202dc
  420299:	cdq    
  42029a:	jb     0x42023b
  42029c:	or     DWORD PTR [ebx-0x6e56ab38],edi
  4202a2:	and    eax,0x9335c7dc
  4202a7:	icebp  
  4202a8:	test   eax,0x96b7bd08
  4202ad:	cli    
  4202ae:	mov    ds:0x924b80c4,eax
  4202b3:	out    0x35,eax
  4202b5:	or     ebx,DWORD PTR [esi-0x1d]
  4202b8:	out    0xb7,eax
  4202ba:	in     al,dx
  4202bb:	and    esp,DWORD PTR [esi-0x6]
  4202be:	pusha  
  4202bf:	fldcw  WORD PTR [ebp+0x309c116c]
  4202c5:	dec    ebx
  4202c6:	call   0xea96c130
  4202cb:	cwde   
  4202cc:	(bad)
  4202d0:	xchg   ecx,eax
  4202d1:	or     al,0x7b
  4202d3:	cmp    cl,bh
  4202d5:	ret    
  4202d6:	xchg   esi,eax
  4202d7:	mov    esi,0x825bbfab
  4202dc:	pop    esi
  4202dd:	ror    BYTE PTR [ebp+0x34],cl
  4202e0:	sub    BYTE PTR [ecx+ebx*4+0x42391d94],ah
  4202e7:	fnstcw WORD PTR [ebp-0x18]
  4202ea:	pusha  
  4202eb:	(bad)  
  4202ec:	loop   0x42028c
  4202ee:	cwde   
  4202ef:	cwde   
  4202f0:	fistp  QWORD PTR [ebx+0x65755d56]
  4202f6:	dec    edx
  4202f7:	pop    ebx
  4202f8:	iret   
  4202f9:	sub    cl,BYTE PTR [edi+edi*8+0x33]
  4202fd:	pushf  
  4202fe:	stos   DWORD PTR es:[edi],eax
  4202ff:	(bad)  
  420300:	loope  0x420365
  420302:	mov    ds:0x8f54024f,al
  420307:	lds    ebp,FWORD PTR [ecx-0x221f57a8]
  42030d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42030e:	cs ret 0x5bf0
  420312:	fwait
  420313:	test   eax,0x6e965967
  420318:	sub    BYTE PTR [ecx-0x17],0xb2
  42031c:	das    
  42031d:	add    al,0x6b
  42031f:	push   0xffffffe5
  420321:	dec    edx
  420322:	mov    esp,0xfd9f3e98
  420327:	push   ebp
  420328:	pop    esp
  420329:	in     eax,dx
  42032a:	dec    ebp
  42032c:	pop    ebp
  42032d:	mov    bh,BYTE PTR [ebx]
  42032f:	sbb    al,0x18
  420331:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420332:	sub    eax,0x28aa9c3b
  420337:	fs aaa 
  420339:	div    ch
  42033b:	(bad)  
  42033c:	dec    edi
  42033d:	nop
  42033e:	cwde   
  42033f:	add    BYTE PTR [edi],bh
  420341:	ss stos DWORD PTR es:[edi],eax
  420343:	push   cs
  420344:	cmp    BYTE PTR [esi-0x2a],dh
  420347:	cli    
  420348:	fmul   DWORD PTR [edi]
  42034a:	or     esp,DWORD PTR [edx+0x450f2c98]
  420350:	mov    bl,0x29
  420352:	test   eax,0xd02287
  420357:	lods   eax,DWORD PTR ds:[esi]
  420358:	cvttps2pi mm1,QWORD PTR [eax]
  42035b:	add    eax,0x22b6410
  420360:	ja     0x42031e
  420362:	add    BYTE PTR [ebp+0x68],bl
  420365:	xor    dh,BYTE PTR [ebp+0x145bd3e5]
  42036b:	repnz rol dh,1
  42036e:	test   al,0x3a
  420370:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420371:	je     0x4203f0
  420373:	loope  0x42035e
  420375:	mov    ebx,0x4a60150a
  42037a:	std    
  42037b:	ret    0x7831
  42037e:	pop    ebp
  42037f:	leave  
  420380:	imul   esi,ebx,0x2af279c4
  420386:	sti    
  420387:	(bad)  
  420388:	ret    
  420389:	jecxz  0x42033d
  42038b:	shl    DWORD PTR [edx+edi*2],cl
  42038e:	push   esp
  42038f:	add    dh,BYTE PTR [esi+0x59]
  420392:	addr16 mov eax,ds:0x82f4
  420396:	stos   DWORD PTR es:[edi],eax
  420397:	mov    edx,0xb0958bc6
  42039c:	cs popf 
  42039e:	jne    0x4203a0
  4203a0:	pop    esp
  4203a1:	out    0x59,eax
  4203a3:	daa    
  4203a4:	cwde   
  4203a5:	or     esp,DWORD PTR [ecx]
  4203a7:	cmp    ah,BYTE PTR ds:0x530af68a
  4203ad:	je     0x42041f
  4203af:	test   edx,edi
  4203b1:	enter  0x1d53,0xf4
  4203b5:	sahf   
  4203b6:	test   BYTE PTR [ebp-0x57],ch
  4203b9:	hlt    
  4203ba:	inc    ecx
  4203bb:	inc    edx
  4203bc:	sbb    eax,ecx
  4203be:	sbb    al,0x6a
  4203c0:	lea    esp,[edx]
  4203c2:	out    dx,eax
  4203c3:	add    BYTE PTR [ebp-0x5b],0xb7
  4203c7:	mov    ds:0x450fff3a,al
  4203cc:	addr16 popa 
  4203ce:	xlat   BYTE PTR ds:[ebx]
  4203cf:	(bad)  
  4203d1:	adc    al,0xcd
  4203d3:	pop    ebx
  4203d4:	jg     0x4203a0
  4203d6:	outs   dx,DWORD PTR ds:[esi]
  4203d7:	aaa    
  4203d8:	dec    esi
  4203d9:	and    DWORD PTR [edx-0x52a0197f],ebp
  4203df:	cs cwde 
  4203e1:	mul    BYTE PTR [esi-0x4c0ac010]
  4203e7:	dec    edi
  4203e8:	sbb    BYTE PTR [ecx],0xe9
  4203eb:	mov    esp,0x2c23eca2
  4203f0:	movhps QWORD PTR [esi],xmm5
  4203f3:	mov    esi,0x5a336181
  4203f8:	pop    es
  4203f9:	inc    esi
  4203fa:	push   ss
  4203fb:	retf   
  4203fc:	cmp    esp,DWORD PTR [ebx]
  4203fe:	int3   
  4203ff:	jb     0x42040b
  420401:	lds    ebx,FWORD PTR [edx+eiz*8-0x1aa8aa52]
  420408:	popa   
  420409:	fucomi st,st(7)
  42040b:	daa    
  42040c:	xchg   edi,eax
  42040d:	les    esi,FWORD PTR [edi+0x15]
  420410:	jle    0x42042c
  420412:	mov    ah,0x9d
  420414:	fmulp  st(0),st
  420416:	fidiv  DWORD PTR [ebp-0x47]
  420419:	lds    ebp,FWORD PTR [ebx+0x67]
  42041c:	adc    eax,0x97ed4902
  420421:	call   0x8ac1:0x5523c0f4
  420428:	daa    
  420429:	add    eax,0x9b48b768
  42042e:	push   ss
  42042f:	mov    edx,0xea9d7008
  420434:	push   esp
  420435:	dec    esi
  420436:	mov    al,0x78
  420438:	push   ebp
  420439:	push   esi
  42043a:	pop    ss
  42043b:	nop
  42043c:	push   ecx
  42043d:	and    dh,BYTE PTR [ecx+0x328e806]
  420443:	test   eax,0x6b15f038
  420448:	ja     0x42047a
  42044a:	jecxz  0x42041f
  42044c:	sub    eax,0xc0ebe516
  420451:	add    eax,0x949fb7a
  420456:	mov    ebx,0x129e28a4
  42045b:	mov    ebx,0xa780f601
  420460:	mov    ds:0xcf56c319,eax
  420465:	js     0x420415
  420467:	out    0x6,eax
  420469:	lods   al,BYTE PTR ds:[esi]
  42046a:	shl    DWORD PTR [edx+eax*1+0x35],0x6a
  42046f:	scas   al,BYTE PTR es:[edi]
  420470:	and    dl,BYTE PTR ss:[eax-0x62945799]
  420477:	pop    esp
  420478:	push   0x3b2ab3bc
  42047d:	mov    dh,BYTE PTR [ebx+0x1f]
  420480:	test   al,0xa9
  420482:	out    dx,al
  420483:	sub    DWORD PTR [eax-0x56],0x3
  420487:	(bad)  
  420488:	mov    bl,0xf9
  42048a:	outs   dx,BYTE PTR ds:[esi]
  42048b:	call   0xa39c:0xbf136239
  420492:	sub    DWORD PTR gs:[eax+ebp*2],0x5bee4961
  42049a:	mov    edi,0x16bab02e
  42049f:	cmp    edi,DWORD PTR [ecx-0x3cf500ca]
  4204a5:	mov    WORD PTR [eax-0x3f],?
  4204a8:	adc    DWORD PTR [edi-0x37],edi
  4204ab:	test   DWORD PTR [edi-0x4280001b],edx
  4204b1:	xchg   esp,eax
  4204b2:	dec    esp
  4204b3:	sbb    BYTE PTR [ebx+0x51],cl
  4204b6:	xor    edi,edx
  4204b8:	add    BYTE PTR [esp+edx*1-0x5d],bl
  4204bc:	mov    ah,0x6e
  4204be:	not    ah
  4204c0:	jae    0x4204a5
  4204c2:	arpl   WORD PTR [esp+edi*2],cx
  4204c5:	cmp    BYTE PTR [ebp+esi*8+0x14],cl
  4204c9:	je     0x4204b9
  4204cb:	das    
  4204cc:	sub    al,0xce
  4204ce:	dec    ebp
  4204cf:	mov    bh,ah
  4204d1:	pop    edi
  4204d2:	sbb    eax,0xc2335b9a
  4204d7:	mov    bl,ah
  4204d9:	shr    eax,0x4d
  4204dc:	xor    eax,0x41c751e6
  4204e1:	mov    DWORD PTR ds:0x2e5f3e8d,ebx
  4204e7:	int    0x4
  4204e9:	add    ebp,DWORD PTR [ebx-0x49]
  4204ec:	ret    
  4204ed:	push   0xfffffff1
  4204ef:	cs pop es
  4204f1:	jns    0x420560
  4204f3:	mov    esp,0x8430d226
  4204f8:	jbe    0x4204f0
  4204fa:	int    0xcd
  4204fc:	jbe    0x42054d
  4204fe:	push   ds
  4204ff:	repz pop esi
  420501:	xor    al,0xeb
  420503:	mov    ds:0xb8eb2fcf,al
  420508:	cmp    bl,BYTE PTR [ebp+0x2a]
  42050b:	clc    
  42050c:	sbb    BYTE PTR [esi-0x3b5404f0],ah
  420512:	lods   eax,DWORD PTR ds:[esi]
  420513:	cmp    cl,BYTE PTR [edi+0x25]
  420516:	fsubr  DWORD PTR [ebx+0x570de307]
  42051c:	test   BYTE PTR [ebp+0xbc7da1d],bh
  420522:	adc    ecx,DWORD PTR [edx]
  420524:	out    dx,al
  420525:	jmp    0x4204d1
  420527:	clc    
  420528:	mov    eax,0xebac63e0
  42052d:	push   0xffffffee
  42052f:	push   ebp
  420530:	aam    0xfc
  420532:	fstp   DWORD PTR [edi+0x42]
  420535:	add    ebx,DWORD PTR [esi-0x2]
  420538:	ss push eax
  42053a:	mov    eax,0x57c17dde
  42053f:	add    BYTE PTR [ecx-0x246442a7],0x5e
  420546:	xor    ebp,ecx
  420548:	lods   eax,DWORD PTR ds:[esi]
  420549:	adc    al,0x28
  42054b:	std    
  42054c:	bound  ebp,QWORD PTR [eax+0x6fa90ca7]
  420552:	fsubr  QWORD PTR [ecx]
  420554:	iret   
  420555:	sub    edi,DWORD PTR [ecx]
  420557:	in     eax,dx
  420558:	or     DWORD PTR [esi+ecx*2-0x13],edi
  42055c:	adc    ebp,DWORD PTR [edx+0x77f4a438]
  420562:	pusha  
  420563:	cmp    dh,BYTE PTR [ebp+0x62d7cbf7]
  420569:	popa   
  42056a:	aaa    
  42056b:	cmp    al,0x73
  42056d:	rol    BYTE PTR [esi+0x46],cl
  420570:	pop    eax
  420571:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420572:	push   cs
  420573:	xchg   edi,eax
  420574:	mov    al,0xfa
  420576:	or     eax,0x6c8134c2
  42057b:	call   0x44d9:0xce2ae861
  420582:	test   BYTE PTR [edi],0x9f
  420585:	test   BYTE PTR [ecx-0x321ae436],cl
  42058b:	cwde   
  42058c:	dec    ebx
  42058d:	bound  edx,QWORD PTR [esi+0x3f97b832]
  420593:	push   esp
  420594:	xchg   esi,eax
  420595:	pop    edx
  420596:	jne    0x42052d
  420598:	mov    dh,0xaa
  42059a:	adc    dl,BYTE PTR [edi+0x59]
  42059d:	xchg   ebx,eax
  42059e:	xchg   ebx,eax
  42059f:	das    
  4205a0:	and    al,BYTE PTR [eax]
  4205a2:	cmp    al,0x94
  4205a4:	dec    edi
  4205a5:	lea    eax,[edi+eax*8-0x5c997bed]
  4205ac:	loopne 0x420590
  4205ae:	test   DWORD PTR [edx],ebp
  4205b0:	lods   eax,DWORD PTR ds:[esi]
  4205b1:	fst    QWORD PTR [edx]
  4205b3:	push   0x12
  4205b5:	rol    DWORD PTR [esi+0x7688b03c],0xac
  4205bc:	popf   
  4205bd:	aam    0xa5
  4205bf:	and    BYTE PTR [ebp+ebp*8+0x74b28e13],bh
  4205c6:	jmp    0x8fcb4de
  4205cb:	xchg   DWORD PTR [ebx-0x25],esp
  4205ce:	lods   eax,DWORD PTR ds:[esi]
  4205cf:	mov    edx,0x3c327f04
  4205d4:	inc    eax
  4205d5:	add    al,0x54
  4205d7:	aas    
  4205d8:	or     eax,0x91ee31b7
  4205dd:	xchg   BYTE PTR [esi],ah
  4205df:	retf   0x2c5e
  4205e2:	shl    DWORD PTR [ebx-0x115e0e95],cl
  4205e8:	and    al,0x4d
  4205ea:	add    cl,0x5d
  4205ed:	ss push 0xffffffd3
  4205f0:	pop    ebp
  4205f1:	mov    al,0x5f
  4205f3:	mov    bl,0x38
  4205f5:	mov    cl,0xdc
  4205f7:	les    esi,FWORD PTR [edi+0x1d]
  4205fa:	or     eax,esp
  4205fc:	jge    0x4205aa
  4205fe:	xchg   ecx,eax
  4205ff:	and    ecx,DWORD PTR [eax-0x2bc39d3d]
  420605:	test   BYTE PTR [esi-0x2bde3a6a],dh
  42060b:	add    al,0x81
  42060d:	aam    0xa6
  42060f:	dec    edx
  420610:	pop    ebx
  420611:	pusha  
  420612:	in     al,0x78
  420614:	dec    esp
  420615:	mov    dh,dh
  420617:	jb     0x420621
  420619:	xor    bl,al
  42061b:	pop    es
  42061c:	push   0xd6bcb97a
  420621:	and    al,BYTE PTR [ebx]
  420623:	popf   
  420624:	cmp    al,0x70
  420626:	xchg   ebx,edi
  420628:	(bad)  
  42062a:	pop    ss
  42062b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42062c:	and    eax,0x8e173d12
  420631:	aam    0x72
  420633:	loopne 0x42069a
  420635:	or     edi,DWORD PTR [eax+edi*4+0x2abc193e]
  42063c:	fstp   st(1)
  42063e:	xchg   ebp,eax
  42063f:	mov    ecx,ebp
  420641:	pop    eax
  420642:	aad    0xca
  420644:	inc    esi
  420645:	jnp    0x42062f
  420647:	cmc    
  420648:	in     al,0xf0
  42064a:	and    edi,DWORD PTR [edx+0x1d]
  42064d:	push   ds
  42064e:	mov    cl,cl
  420650:	in     al,0x1b
  420652:	clc    
  420653:	pop    es
  420654:	iret   
  420655:	les    ecx,FWORD PTR [ebp-0x5b01b7d6]
  42065b:	mov    bh,0x6e
  42065d:	mov    cl,0xcf
  42065f:	add    al,0xac
  420661:	(bad)  
  420662:	push   esp
  420663:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420664:	test   DWORD PTR [ebp-0x61666bb0],esp
  42066a:	adc    BYTE PTR [ebx-0x61],al
  42066d:	cld    
  42066e:	sti    
  42066f:	xchg   ebp,eax
  420670:	repz mov al,0xe6
  420673:	call   0x67c05753
  420678:	out    0xc,al
  42067a:	push   0x22
  42067c:	xchg   esp,eax
  42067d:	inc    esi
  42067e:	in     al,0x3c
  420680:	xchg   esp,eax
  420681:	mov    al,BYTE PTR [eax]
  420683:	out    0xe2,al
  420685:	in     al,dx
  420686:	mov    esp,esp
  420688:	fdiv   QWORD PTR [eax-0x40]
  42068b:	scas   al,BYTE PTR es:[edi]
  42068c:	out    dx,eax
  42068d:	scas   al,BYTE PTR es:[edi]
  42068e:	fucom  st(3)
  420690:	cwde   
  420691:	jle    0x4206c8
  420693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420694:	ins    DWORD PTR es:[edi],dx
  420695:	mov    esi,0xfc3c9268
  42069a:	cmp    esi,DWORD PTR [esi-0x75924d61]
  4206a0:	push   0xffffffaa
  4206a2:	push   0xffffffb5
  4206a4:	or     BYTE PTR [ebx+edi*1-0x29],bl
  4206a8:	(bad)  
  4206a9:	loope  0x420712
  4206ab:	addr16 out 0xf,al
  4206ae:	jge    0x4206dc
  4206b0:	push   es
  4206b1:	stos   DWORD PTR es:[edi],eax
  4206b2:	test   eax,0x57b8bf16
  4206b7:	xlat   BYTE PTR ds:[ebx]
  4206b8:	xchg   edi,eax
  4206b9:	add    eax,0xfa9ffdaa
  4206be:	push   esi
  4206bf:	sub    edx,edi
  4206c1:	nop
  4206c2:	xchg   ecx,eax
  4206c3:	pop    ds
  4206c4:	mov    bh,0x74
  4206c6:	cld    
  4206c7:	loop   0x4206c6
  4206c9:	jmp    0x16e0:0x4d8e57e1
  4206d0:	add    al,0xa5
  4206d2:	sbb    esp,DWORD PTR [ebx+0x8]
  4206d5:	aad    0xee
  4206d7:	stc    
  4206d8:	int3   
  4206d9:	xchg   ebp,eax
  4206da:	sub    bl,BYTE PTR [ebx+0x34]
  4206dd:	add    DWORD PTR [eax-0x44],ecx
  4206e0:	jmp    0x69749342
  4206e5:	sbb    cl,BYTE PTR [edi]
  4206e7:	test   al,0xa0
  4206e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206ea:	rcl    esi,cl
  4206ec:	jge    0x420722
  4206ee:	jecxz  0x4206b8
  4206f0:	sub    BYTE PTR [edx],ah
  4206f2:	je     0x4206fd
  4206f4:	push   ecx
  4206f5:	xchg   ecx,eax
  4206f6:	sub    DWORD PTR [ebx],0xfc4a245b
  4206fc:	iret   
  4206fd:	xor    ebp,esp
  4206ff:	sub    BYTE PTR [esi],bl
  420701:	or     al,0x96
  420703:	clc    
  420704:	jmp    esi
  420706:	cwde   
  420707:	jmp    0x42073f
  420709:	inc    ebx
  42070a:	jae    0x4206fc
  42070c:	iret   
  42070d:	and    DWORD PTR [esi-0x65e3ac2b],esp
  420713:	jbe    0x4206e5
  420715:	fwait
  420716:	sbb    al,0xe8
  420718:	mov    ah,0x4
  42071a:	pop    ss
  42071b:	inc    esi
  42071c:	and    al,0xa6
  42071e:	mov    ebp,0xd7a92fc2
  420723:	inc    esi
  420724:	fidivr WORD PTR [ebx]
  420726:	and    al,BYTE PTR [eax-0x1c]
  420729:	xlat   BYTE PTR ds:[ebx]
  42072a:	sbb    ch,BYTE PTR [ebp+0x62f22bab]
  420730:	xchg   edi,eax
  420731:	jmp    0x4207a2
  420733:	jne    0x420701
  420735:	mov    al,0xb8
  420737:	sub    eax,0x7c0c60a8
  42073c:	ins    DWORD PTR es:[edi],dx
  42073d:	stos   BYTE PTR es:[edi],al
  42073e:	repz out 0xb3,eax
  420741:	mov    esp,DWORD PTR ds:0x46065b8c
  420747:	pop    edx
  420748:	mov    edx,0x35995d71
  42074d:	push   ebx
  42074e:	xor    ecx,DWORD PTR [edx]
  420750:	out    0x87,eax
  420752:	xchg   ecx,eax
  420753:	sbb    al,0x5
  420755:	out    0x62,al
  420757:	xor    esp,ebp
  420759:	jmp    0xabe:0xe287368e
  420760:	dec    edi
  420761:	retf   0x3b58
  420764:	test   BYTE PTR [ebx],al
  420766:	cs or  eax,0x83b76de0
  42076c:	aad    0x85
  42076e:	xor    DWORD PTR [eax+0x4f],0x44876816
  420775:	sbb    BYTE PTR [eax+0x11],dl
  420778:	sbb    al,BYTE PTR [edi+ebx*1+0x39d882df]
  42077f:	sbb    eax,0x82461b1c
  420784:	mov    eax,ds:0x919d09d5
  420789:	sbb    al,0x90
  42078b:	add    eax,0x313d8665
  420790:	fisubr DWORD PTR [edi-0x52224e6b]
  420796:	and    al,bh
  420798:	leave  
  420799:	mov    eax,0x1dcf07fc
  42079e:	popf   
  42079f:	fs dec ebx
  4207a1:	sub    DWORD PTR [ecx-0x7d765273],esp
  4207a7:	mov    ebx,0xbc0961ba
  4207ac:	or     esi,ecx
  4207ae:	rcl    esp,0x11
  4207b1:	inc    esp
  4207b2:	clc    
  4207b3:	in     al,0x20
  4207b5:	std    
  4207b6:	(bad)  
  4207b9:	sbb    al,0x97
  4207bb:	adc    dl,al
  4207bd:	mov    cs,WORD PTR [ecx+0x4a]
  4207c0:	sub    eax,0xc5866130
  4207c5:	adc    DWORD PTR [edx+0xfe0395c],0x479aa2b0
  4207cf:	push   esp
  4207d0:	mov    edx,0x20619085
  4207d5:	and    esp,DWORD PTR [edx-0x3cc61195]
  4207db:	(bad)
  4207de:	push   ebp
  4207df:	add    al,0x48
  4207e1:	cld    
  4207e2:	mov    ds:0xa3684d38,al
  4207e7:	and    eax,0xe0b41ce5
  4207ec:	jne    0x42082d
  4207ee:	(bad)
  4207f2:	inc    esp
  4207f3:	cld    
  4207f4:	or     ch,BYTE PTR [ecx+0x7dee83d8]
  4207fa:	mov    esi,0xc03f2ad7
  4207ff:	sbb    ecx,esp
  420801:	ror    DWORD PTR [eax],0x78
  420804:	sbb    ebp,DWORD PTR [edx-0x45]
  420807:	mov    WORD PTR ds:0x41c352cb,?
  42080d:	retf   
  42080e:	(bad)  [esp+edx*2-0x6a99d513]
  420815:	inc    ebp
  420816:	in     al,0xc6
  420818:	cld    
  420819:	sbb    dl,dh
  42081b:	jb     0x420881
  42081d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42081e:	push   0x3f1ee34d
  420823:	mov    bh,0x21
  420825:	or     eax,0x943df04f
  42082a:	jge    0x4208a1
  42082c:	(bad)  
  42082d:	loop   0x420832
  42082f:	xchg   ebx,eax
  420830:	test   DWORD PTR [eax-0x4aa93437],0xc63dfc33
  42083a:	inc    esi
  42083b:	sub    al,0xa6
  42083d:	dec    esi
  42083e:	add    BYTE PTR ds:[edi+0x54],dl
  420842:	cld    
  420843:	push   ds
  420844:	jno    0x420856
  420846:	sbb    al,0xa4
  420849:	xor    ebx,DWORD PTR [esi]
  42084b:	test   al,0x81
  42084d:	je     0x4208a5
  42084f:	or     ah,ah
  420851:	add    BYTE PTR [edx+eiz*1],bh
  420854:	popa   
  420855:	xchg   BYTE PTR [ebx+0x4b],ah
  420858:	lods   al,BYTE PTR ds:[esi]
  420859:	js     0x42089e
  42085b:	push   es
  42085c:	mov    esi,0xd8d3adb7
  420861:	push   ds
  420862:	idiv   BYTE PTR [ebp+0x57f6d4ef]
  420868:	mov    al,0xa
  42086a:	jns    0x420884
  42086c:	dec    ecx
  42086d:	sbb    BYTE PTR [ebp-0x57220519],bh
  420873:	mov    dl,0x99
  420875:	stos   DWORD PTR es:[edi],eax
  420876:	cmp    BYTE PTR [esi+0x49],ch
  420879:	(bad)  
  42087a:	fist   DWORD PTR [ebx+0x76]
  42087d:	mov    ebp,0x5db145b6
  420882:	xor    eax,0x451750aa
  420887:	(bad)  
  420888:	jmp    0xa5445237
  42088d:	ret    
  42088e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42088f:	cld    
  420890:	loop   0x420891
  420892:	push   edi
  420893:	xchg   esi,eax
  420894:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420895:	test   BYTE PTR [esi-0xa],bl
  420898:	gs je  0x420912
  42089b:	fstp   DWORD PTR [esi+ebx*1-0x47]
  42089f:	fidiv  DWORD PTR [ebx+0x3ebaeb7a]
  4208a5:	fcmovnb st,st(3)
  4208a7:	jecxz  0x4208b2
  4208a9:	ss (bad) 
  4208ab:	push   ds
  4208ac:	cs pop esi
  4208ae:	push   edx
  4208af:	aad    0x41
  4208b1:	pop    es
  4208b2:	mov    edi,0xabbe4c99
  4208b7:	retf   
  4208b8:	sbb    bh,BYTE PTR [ecx+0x29]
  4208bb:	push   edi
  4208bc:	and    ebp,DWORD PTR [ebx+0x55]
  4208bf:	pop    ds
  4208c0:	stc    
  4208c1:	or     eax,0x8ffb8bc1
  4208c6:	sbb    eax,0xdfd9d2ad
  4208cb:	retfw  0x193a
  4208cf:	in     eax,0xb1
  4208d1:	sub    eax,0x5ed522d8
  4208d6:	call   DWORD PTR [edx]
  4208d8:	dec    edi
  4208d9:	cmp    BYTE PTR [edi+edi*2-0x592ece14],cl
  4208e0:	pushf  
  4208e1:	jecxz  0x420903
  4208e3:	push   cs
  4208e4:	sbb    eax,0x830c1222
  4208e9:	dec    ecx
  4208ea:	ss jns 0x420871
  4208ed:	rol    DWORD PTR [ecx-0x22ecde2d],cl
  4208f3:	mov    ah,0x51
  4208f5:	pop    ecx
  4208f6:	aad    0x87
  4208f8:	repnz or DWORD PTR [ecx],edx
  4208fb:	jg     0x4208b6
  4208fd:	retf   0x2f61
  420900:	sbb    edx,DWORD PTR [eax+ecx*2-0x6097e71d]
  420907:	mov    edx,0x72b3eb68
  42090c:	(bad)  
  42090d:	mov    ebp,0xa6ad4957
  420912:	lods   eax,DWORD PTR ds:[esi]
  420913:	fst    DWORD PTR [ebp+0x5ec640f9]
  420919:	loopne 0x420928
  42091b:	sahf   
  42091c:	mov    al,ds:0x1233c066
  420921:	test   eax,0x41ca3610
  420926:	int3   
  420927:	rol    DWORD PTR [esi-0x75],cl
  42092a:	and    BYTE PTR [edx-0x7c43c4f4],cl
  420930:	outs   dx,BYTE PTR ds:[esi]
  420931:	pop    ds
  420932:	stos   BYTE PTR es:[edi],al
  420933:	fld    DWORD PTR [esi]
  420935:	leave  
  420936:	add    ch,dl
  420938:	add    eax,0xadcf22e9
  42093d:	pop    esi
  42093e:	idiv   BYTE PTR [ecx-0x43]
  420941:	cmp    dl,bl
  420943:	adc    DWORD PTR [esi],ecx
  420945:	jp     0x4209a4
  420947:	in     eax,dx
  420948:	mov    al,0xd6
  42094a:	ror    DWORD PTR [ecx+0x6abcc90b],cl
  420950:	ss sahf 
  420952:	xchg   esp,eax
  420953:	fadd   st(0),st
  420955:	mov    bl,0xa9
  420957:	dec    ecx
  420958:	test   al,0x2c
  42095a:	mov    ecx,0xf38f818b
  42095f:	arpl   WORD PTR [edx],cx
  420961:	in     eax,0x84
  420963:	jmp    0xa498:0x681b5003
  42096a:	dec    esi
  42096b:	push   edx
  42096c:	daa    
  42096d:	push   0xfffffff8
  42096f:	addr16 cmp edi,ebx
  420972:	fisub  WORD PTR [esi+esi*2-0x32]
  420976:	xlat   BYTE PTR ds:[ebx]
  420977:	add    BYTE PTR [esi-0x7cec7880],bl
  42097d:	xchg   BYTE PTR [esi+ebx*4-0x19],bh
  420981:	clc    
  420982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420983:	push   ebx
  420984:	aam    0xfa
  420986:	out    dx,al
  420987:	and    eax,0xd1154721
  42098c:	shl    ebp,cl
  42098e:	cmp    BYTE PTR [edx+0x7aa356a3],dl
  420994:	icebp  
  420995:	mul    DWORD PTR [ebp+0x7eaf971f]
  42099b:	and    esi,DWORD PTR [ebp-0x2939fe53]
  4209a1:	mov    esi,0x5f243fa7
  4209a6:	push   edx
  4209a7:	fisubr DWORD PTR [ebx]
  4209a9:	mov    dh,0x8c
  4209ab:	mov    BYTE PTR [edx+0x3e],dh
  4209ae:	and    BYTE PTR [ecx-0x479041d6],cl
  4209b4:	cmp    dh,ah
  4209b6:	lods   eax,DWORD PTR ds:[esi]
  4209b7:	cmp    eax,DWORD PTR [eax]
  4209b9:	addr16 jg 0x4209a4
  4209bc:	jo     0x420a2c
  4209be:	pop    ds
  4209bf:	(bad)  
  4209c0:	dec    eax
  4209c1:	mov    ebp,0xf8e60e54
  4209c6:	fucomp st(6)
  4209c8:	jecxz  0x4209e3
  4209ca:	mov    cl,0x87
  4209cc:	scas   eax,DWORD PTR es:[edi]
  4209cd:	and    BYTE PTR [edi-0x12],ah
  4209d0:	jb     0x4209cf
  4209d2:	push   ebp
  4209d3:	mov    ds:0x8917905a,eax
  4209d8:	xor    edx,DWORD PTR [edi]
  4209da:	or     al,0x7f
  4209dc:	mov    ecx,0x64625596
  4209e1:	mov    ch,0x7
  4209e3:	or     DWORD PTR [esi+eax*1],0xffffffb6
  4209e7:	lahf   
  4209e8:	fwait
  4209e9:	outs   dx,BYTE PTR ds:[esi]
  4209ea:	repnz fstp DWORD PTR ds:[esi-0x5e89d531]
  4209f2:	or     ecx,edx
  4209f4:	(bad)  
  4209f6:	ret    
  4209f7:	mov    bl,0x99
  4209f9:	(bad)  
  4209fa:	bnd jge 0x420a09
  4209fd:	pop    ebp
  4209fe:	pop    ss
  4209ff:	lea    ecx,[eax-0x44]
  420a02:	jg     0x4209d8
  420a04:	les    edi,FWORD PTR [edi]
  420a06:	sti    
  420a07:	sub    BYTE PTR [esi-0xd3afdcb],bl
  420a0d:	mov    edi,0x95de23df
  420a12:	mov    ds:0x3d38a6,eax
  420a17:	adc    eax,DWORD PTR [ebx+ebp*1-0x347d2a02]
  420a1e:	fstp   QWORD PTR [ecx+0x113459e7]
  420a24:	push   ebx
  420a25:	jl     0x420a77
  420a27:	push   ebp
  420a28:	inc    BYTE PTR [eax+0x65677b8b]
  420a2e:	cmp    cl,ah
  420a30:	dec    ebx
  420a31:	sar    ch,1
  420a33:	jmp    0x420a60
  420a35:	popf   
  420a36:	daa    
  420a37:	cmc    
  420a38:	inc    esi
  420a39:	retf   
  420a3a:	cmp    DWORD PTR [eax],0xae5f67ea
  420a40:	ja     0x420a39
  420a42:	sub    eax,0x94b4af44
  420a47:	ss ret 
  420a49:	imul   esi,DWORD PTR [esi+eiz*8],0xffffffae
  420a4d:	and    BYTE PTR [ecx-0x6504eddb],0x54
  420a54:	out    dx,al
  420a55:	in     eax,dx
  420a56:	add    dh,BYTE PTR [ecx-0x57eb90d7]
  420a5c:	fist   DWORD PTR [ebx]
  420a5e:	mov    cl,0x61
  420a60:	cmp    edi,DWORD PTR [edx+0x49420a75]
  420a66:	inc    esp
  420a67:	mov    ds:0xcfdec69c,al
  420a6c:	mov    ds:0x58648fa7,eax
  420a71:	adc    eax,0x6c
  420a74:	add    cl,BYTE PTR [esi]
  420a76:	push   fs
  420a78:	ds ins DWORD PTR es:[edi],dx
  420a7a:	push   ss
  420a7b:	(bad)  
  420a7c:	jmp    0x47a6d27e
  420a81:	cmp    al,0xa0
  420a83:	test   ecx,ebx
  420a85:	clc    
  420a86:	test   BYTE PTR [ecx],al
  420a88:	pushf  
  420a89:	add    eax,0xcd5bb11e
  420a8e:	sbb    eax,0x483d72d3
  420a93:	clc    
  420a94:	cmp    ebp,0x1b
  420a97:	adc    DWORD PTR [eax],edx
  420a99:	pop    ecx
  420a9a:	xchg   edx,eax
  420a9b:	xor    dh,BYTE PTR [esi]
  420a9d:	in     eax,dx
  420a9e:	cmp    dl,BYTE PTR [edi]
  420aa0:	sbb    eax,0xbd6ddbc8
  420aa6:	sbb    edi,edi
  420aa8:	in     al,0xda
  420aaa:	add    dh,cl
  420aac:	cld    
  420aad:	cmp    al,0xb5
  420aaf:	inc    BYTE PTR [eax]
  420ab1:	(bad)  
  420ab2:	scas   eax,DWORD PTR es:[edi]
  420ab3:	js     0x420a6f
  420ab5:	into   
  420ab6:	ja     0x420b0f
  420ab8:	or     DWORD PTR [eax+0x21],0xdd0b3df
  420abf:	outs   dx,DWORD PTR ds:[esi]
  420ac0:	sub    eax,0x5cbc1268
  420ac5:	push   cs
  420ac6:	add    al,BYTE PTR [ebp-0x6]
  420ac9:	popa   
  420aca:	lods   eax,DWORD PTR ds:[esi]
  420acb:	je     0x420af5
  420acd:	add    DWORD PTR [edx-0x6b5ccd52],ecx
  420ad3:	adc    BYTE PTR [ecx],al
  420ad5:	mov    dh,0x6b
  420ad7:	xor    eax,0x86d766f6
  420adc:	or     DWORD PTR [ebp-0x2c],eax
  420adf:	or     ebp,DWORD PTR es:[eax+0x5532622b]
  420ae6:	and    ah,cl
  420ae8:	xor    dh,bh
  420aea:	dec    ebp
  420aeb:	fcom   DWORD PTR [ecx+0x61955a5d]
  420af1:	pop    edx
  420af2:	cmp    DWORD PTR [eax+ebx*1],esi
  420af5:	cmp    bh,cl
  420af7:	fld    QWORD PTR [ebx-0x2407b7e8]
  420afd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420afe:	and    DWORD PTR [ebx+eiz*4+0x18f5c284],ecx
  420b05:	push   cs
  420b06:	sub    al,BYTE PTR [ebx]
  420b08:	imul   edx,ecx,0x7d97cb17
  420b0e:	mov    cl,0x92
  420b10:	add    DWORD PTR [ebx-0x68],esp
  420b13:	aad    0x6c
  420b15:	xchg   ebp,eax
  420b16:	adc    DWORD PTR [edi+0x7f],0xdcf523
  420b1d:	pushf  
  420b1e:	test   BYTE PTR [edx],dl
  420b20:	and    al,ah
  420b22:	lods   eax,DWORD PTR ds:[esi]
  420b23:	ficomp DWORD PTR ds:0xdb4d1d99
  420b29:	or     DWORD PTR [edi],ebp
  420b2b:	pop    eax
  420b2c:	jmp    0xc2ef:0x6c3dadf3
  420b33:	or     BYTE PTR [edx-0x3624511],ah
  420b39:	mov    dh,0x6e
  420b3b:	pop    esp
  420b3c:	mov    bh,0xf1
  420b3e:	scas   al,BYTE PTR es:[edi]
  420b3f:	or     ebx,ecx
  420b41:	(bad)  
  420b42:	scas   eax,DWORD PTR es:[edi]
  420b43:	xchg   BYTE PTR [ebx+edx*8],bl
  420b46:	mov    DWORD PTR [ebp-0x44],esp
  420b49:	sub    BYTE PTR [edx-0x11],cl
  420b4c:	loope  0x420b8f
  420b4e:	jp     0x420b8c
  420b50:	sbb    eax,0x7cb84b2f
  420b55:	sbb    eax,0x5900e6bb
  420b5a:	(bad)  
  420b5b:	ja     0x420b8f
  420b5d:	pop    ecx
  420b5e:	dec    ebp
  420b5f:	push   ss
  420b60:	ss lahf 
  420b62:	or     eax,0x494f187a
  420b67:	push   cs
  420b68:	aas    
  420b69:	jb     0x420b52
  420b6b:	adc    DWORD PTR [eax],edi
  420b6d:	fdivr  st(7),st
  420b6f:	jmp    0xa700894
  420b74:	imul   esp,DWORD PTR [ebx],0xc2774506
  420b7a:	daa    
  420b7b:	lahf   
  420b7c:	xor    DWORD PTR [esi+0x5582b388],0xffffffc3
  420b83:	add    ch,BYTE PTR ds:0xbec00406
  420b89:	nop
  420b8a:	mov    dl,0xdd
  420b8c:	xchg   edx,eax
  420b8d:	pop    esi
  420b8e:	mov    fs,esp
  420b90:	jecxz  0x420c0c
  420b92:	or     ecx,DWORD PTR [ebp-0x63]
  420b95:	xor    bh,al
  420b97:	mov    eax,0xe0333f48
  420b9c:	add    dl,0x7b
  420b9f:	xchg   esi,eax
  420ba0:	sbb    dl,BYTE PTR [ecx-0x72]
  420ba3:	mov    eax,ebx
  420ba5:	cmp    al,0x55
  420ba7:	and    DWORD PTR [ebp-0x7ba351b8],ebp
  420bad:	icebp  
  420bae:	and    edi,DWORD PTR [edx-0x74]
  420bb1:	out    0xf6,al
  420bb3:	sbb    esi,edx
  420bb5:	cdq    
  420bb6:	retf   
  420bb7:	les    edi,FWORD PTR [edx-0x44]
  420bba:	and    BYTE PTR [esi+0xae59de],bl
  420bc0:	out    dx,eax
  420bc1:	aaa    
  420bc2:	jno    0x420bc6
  420bc4:	in     eax,dx
  420bc5:	gs mov dh,0x1d
  420bc8:	fmul   st,st(1)
  420bca:	xchg   edi,eax
  420bcb:	pop    DWORD PTR [esi+edx*8+0x154a8e40]
  420bd2:	test   cl,bh
  420bd4:	push   ebx
  420bd5:	rol    BYTE PTR [esp+ebp*8],0xa3
  420bd9:	das    
  420bda:	mov    ebx,0xae27b22d
  420bdf:	or     ebx,ebp
  420be1:	adc    BYTE PTR [ecx],dl
  420be3:	xor    al,BYTE PTR [esi]
  420be5:	and    BYTE PTR [ebp+edi*1+0x44941c26],0xd4
  420bed:	jmp    0x4ebb:0x59dbb5f
  420bf4:	mov    DWORD PTR [ebx-0x47],edx
  420bf7:	push   edx
  420bf8:	adc    eax,0xe40bfa7d
  420bfd:	popf   
  420bfe:	in     eax,0x23
  420c00:	pop    ds
  420c01:	mov    al,ds:0x4431f979
  420c06:	add    DWORD PTR [ecx-0x1127dad1],0x23
  420c0d:	mov    dh,0x88
  420c0f:	icebp  
  420c10:	ret    0xe84d
  420c13:	push   ss
  420c14:	ret    0x789c
  420c17:	dec    esp
  420c18:	ss fnsave fs:[edx]
  420c1c:	loopne 0x420bfd
  420c1e:	jne    0x420ba3
  420c20:	mov    bl,0x4f
  420c22:	inc    ebp
  420c23:	jle    0x420bc2
  420c25:	stc    
  420c26:	cmp    al,0x96
  420c28:	jecxz  0x420c15
  420c2a:	jns    0x420c3d
  420c2c:	inc    esi
  420c2d:	xor    DWORD PTR [edi+0x16],esp
  420c30:	jae    0x420bc8
  420c32:	inc    ebp
  420c33:	mov    eax,0x1bd5fa8e
  420c38:	bound  edi,QWORD PTR [ebp+0x3fcf1dcc]
  420c3e:	je     0x420cb1
  420c40:	push   esp
  420c41:	xchg   ecx,eax
  420c42:	gs jmp 0xbdc2537b
  420c48:	std    
  420c49:	clc    
  420c4a:	scas   eax,DWORD PTR es:[edi]
  420c4b:	stos   BYTE PTR es:[edi],al
  420c4c:	mov    bl,0xdf
  420c4e:	mov    edi,0xb6dc0aa2
  420c53:	mov    bl,0x6a
  420c55:	repnz xchg esp,eax
  420c57:	(bad)  
  420c58:	std    
  420c59:	mov    esi,esp
  420c5b:	shl    DWORD PTR ds:0x9fefaea7,cl
  420c61:	mov    eax,ds:0x3125cc41
  420c66:	jb     0x420c68
  420c68:	inc    ecx
  420c69:	mov    al,0x9a
  420c6b:	nop
  420c6c:	push   edx
  420c6d:	sub    al,0xaa
  420c6f:	ret    0x9851
  420c72:	cmp    ah,BYTE PTR [ecx-0x7c]
  420c75:	mov    al,ds:0xa4fd62e1
  420c7a:	cmp    DWORD PTR [eax+esi*8-0x16],edi
  420c7e:	fbld   TBYTE PTR [ebx-0x1]
  420c81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c82:	daa    
  420c83:	sub    esp,eax
  420c85:	adc    eax,0x117ce82
  420c8a:	jnp    0x420c5a
  420c8c:	mov    eax,ds:0x14c007fb
  420c91:	pop    ds
  420c92:	mov    ebp,0x511aab53
  420c97:	jecxz  0x420c54
  420c99:	add    WORD PTR [ebx],0x3813
  420c9e:	outs   dx,DWORD PTR ds:[esi]
  420c9f:	test   eax,0x8872c768
  420ca4:	jno    0x420c9c
  420ca6:	je     0x420d22
  420ca8:	xchg   ecx,eax
  420ca9:	push   esi
  420caa:	mov    bl,0xc1
  420cac:	cmp    DWORD PTR [ebx],ecx
  420cae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420caf:	aaa    
  420cb0:	inc    ebx
  420cb1:	(bad)  
  420cb2:	dec    edi
  420cb3:	sahf   
  420cb4:	jmp    0x420d2c
  420cb6:	and    eax,0x6fd35b7
  420cbb:	push   esi
  420cbc:	mov    cl,0xb8
  420cbe:	pop    ss
  420cbf:	add    dh,BYTE PTR [edx-0x46b9b14b]
  420cc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cc6:	out    dx,eax
  420cc7:	mov    ecx,0x92a870ec
  420ccc:	mov    gs:0xafe4eb62,eax
  420cd2:	(bad)  
  420cd3:	xlat   BYTE PTR ds:[ebx]
  420cd4:	pop    ecx
  420cd5:	jnp    0x420c7c
  420cd7:	int3   
  420cd8:	scas   eax,DWORD PTR es:[edi]
  420cd9:	sti    
  420cda:	icebp  
  420cdb:	and    edi,DWORD PTR [ecx+edx*4+0x11]
  420cdf:	cmp    al,0x1d
  420ce1:	das    
  420ce2:	pop    es
  420ce3:	inc    eax
  420ce4:	ss pop edi
  420ce6:	jns    0x420cc9
  420ce8:	ror    DWORD PTR [ebp-0x23126195],0x93
  420cef:	jno    0x420c9a
  420cf1:	scas   al,BYTE PTR es:[edi]
  420cf2:	add    BYTE PTR [edi+0xc44625c],0x91
  420cf9:	dec    edi
  420cfa:	dec    eax
  420cfb:	pop    esi
  420cfc:	imul   ecx,DWORD PTR [ecx-0x31f31835],0x9d03ad0c
  420d06:	xchg   esp,eax
  420d07:	sub    edx,DWORD PTR [ebx-0x5b1f7300]
  420d0d:	retf   
  420d0e:	in     eax,dx
  420d0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d10:	inc    ecx
  420d11:	or     eax,0x19629d0d
  420d16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d18:	inc    eax
  420d19:	scas   al,BYTE PTR es:[edi]
  420d1a:	xchg   esp,eax
  420d1b:	int    0x71
  420d1d:	lods   al,BYTE PTR ds:[esi]
  420d1e:	int3   
  420d1f:	ins    BYTE PTR es:[edi],dx
  420d20:	call   0x93cdad5d
  420d25:	jbe    0x420cc5
  420d27:	mov    ecx,0x3b05172f
  420d2c:	sti    
  420d2d:	xchg   edi,eax
  420d2e:	gs inc ecx
  420d30:	in     al,0x85
  420d32:	stc    
  420d33:	xor    BYTE PTR [ecx+0x71],bl
  420d36:	sbb    ecx,DWORD PTR [ebx]
  420d38:	scas   eax,DWORD PTR es:[edi]
  420d39:	mov    esp,0x2f90f5b
  420d3e:	into   
  420d3f:	imul   ebp,ebp,0x6
  420d42:	lds    esp,FWORD PTR [edx]
  420d44:	or     al,0x5d
  420d46:	and    BYTE PTR [edi+0x31],ch
  420d49:	out    0x1e,al
  420d4b:	or     eax,0x6448b0c8
  420d50:	xchg   ebp,eax
  420d51:	xchg   BYTE PTR [edi+0x60],cl
  420d54:	mov    ds:0xcd9b061e,eax
  420d59:	add    BYTE PTR [eax],bh
  420d5b:	loopne 0x420cf4
  420d5d:	inc    ebp
  420d5e:	jb     0x420dcd
  420d60:	sbb    esi,esp
  420d62:	repnz in eax,dx
  420d64:	cld    
  420d65:	mov    eax,ds:0x36104723
  420d6a:	neg    BYTE PTR [edi+eiz*1+0x59]
  420d6e:	dec    esp
  420d6f:	repz or BYTE PTR [ecx+0x4f380bdb],ch
  420d76:	loop   0x420dd3
  420d78:	std    
  420d79:	call   0xaf6d8c79
  420d7e:	das    
  420d7f:	cld    
  420d80:	(bad)  
  420d81:	jnp    0x420d06
  420d83:	jge    0x420d94
  420d85:	mov    bh,0x2b
  420d87:	push   ebx
  420d88:	fs dec eax
  420d8a:	adc    edi,DWORD PTR [ebp-0x42]
  420d8d:	(bad)  
  420d8e:	mov    ds:0x2ec2fa3e,eax
  420d93:	lds    edx,FWORD PTR [eax-0x51fe2261]
  420d99:	push   ds
  420d9a:	jp     0x420e11
  420d9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d9d:	loopne 0x420dbb
  420d9f:	aas    
  420da0:	xor    dl,BYTE PTR [edx+0x12]
  420da3:	aaa    
  420da4:	jne    0x420d6e
  420da6:	das    
  420da7:	jnp    0x420dca
  420da9:	cmc    
  420daa:	test   DWORD PTR [eiz*4+0x28256662],ecx
  420db1:	loope  0x420d85
  420db3:	scas   al,BYTE PTR es:[edi]
  420db4:	lea    ebx,[edi-0x6a3c3857]
  420dba:	sub    ebp,esi
  420dbc:	mov    dh,0x2
  420dbe:	cmp    DWORD PTR fs:0x6c127481,ecx
  420dc5:	inc    ecx
  420dc6:	xchg   DWORD PTR [edi-0x20f4896d],edi
  420dcc:	ss retf 0x84f9
  420dd0:	in     eax,0x69
  420dd2:	sahf   
  420dd3:	and    eax,0xaf2cd4df
  420dd8:	push   esp
  420dd9:	mov    ds:0xc464cdae,eax
  420dde:	xchg   DWORD PTR [eax+esi*8],ebx
  420de1:	add    bh,BYTE PTR [edi+0x261128ab]
  420de7:	sbb    DWORD PTR [ecx-0x2d],ecx
  420dea:	adc    BYTE PTR [edi-0x21],dh
  420ded:	aas    
  420dee:	and    bl,BYTE PTR [ebx+0x38e46088]
  420df4:	sub    BYTE PTR [ebp-0x6e],dl
  420df7:	aam    0x19
  420df9:	sub    DWORD PTR [eax+0x69],0x3
  420dfd:	dec    edx
  420dfe:	out    dx,al
  420dff:	scas   eax,DWORD PTR es:[edi]
  420e00:	or     BYTE PTR [eax+eiz*2],dl
  420e03:	or     DWORD PTR [ebx+0x7c],esp
  420e06:	sbb    bl,BYTE PTR [edx+eax*8]
  420e09:	js     0x420e23
  420e0b:	sar    BYTE PTR [esi+0x7],1
  420e0e:	sub    eax,0xb4494237
  420e13:	mov    WORD PTR [edx+0x23],ss
  420e16:	test   DWORD PTR [edi-0x33e7b0a8],esi
  420e1c:	fwait
  420e1d:	(bad)  
  420e1e:	xchg   edi,eax
  420e1f:	add    DWORD PTR ds:0x27c534a4,ebp
  420e25:	fidiv  WORD PTR [edi]
  420e27:	mov    cl,0x2d
  420e29:	push   ds
  420e2a:	or     al,0x4b
  420e2c:	std    
  420e2d:	mov    edx,0xc128a8ac
  420e32:	and    eax,0xdb5e3d5d
  420e37:	out    dx,eax
  420e38:	iret   
  420e39:	cmp    al,0x2a
  420e3b:	adc    ah,BYTE PTR [edx-0x3eede783]
  420e41:	iret   
  420e42:	nop
  420e43:	push   ss
  420e44:	mov    edi,0x173eaba1
  420e49:	or     eax,0x4bae069d
  420e4e:	sti    
  420e4f:	inc    ecx
  420e50:	sub    ch,BYTE PTR [ebx]
  420e52:	mov    ecx,0xaa6cf346
  420e57:	fwait
  420e58:	lods   eax,DWORD PTR ds:[esi]
  420e59:	mov    al,ds:0xd6dc06e2
  420e5e:	jle    0x420e05
  420e60:	adc    DWORD PTR [esi-0x42c52b9c],ebp
  420e66:	retf   
  420e67:	cwde   
  420e68:	cmp    edx,ebx
  420e6a:	inc    DWORD PTR [eax+edi*1-0x3f]
  420e6e:	xchg   BYTE PTR ds:0x2e733df5,ah
  420e74:	mov    ah,0xd3
  420e76:	pop    eax
  420e77:	xchg   esp,eax
  420e78:	test   al,0xee
  420e7a:	mov    ds,WORD PTR [ecx+ebp*8+0x2cb13128]
  420e81:	popf   
  420e82:	loopne 0x420e1f
  420e84:	mov    al,ds:0xd6f38a14
  420e89:	rcr    BYTE PTR [edi+0x10],0x24
  420e8d:	mov    esi,0xe832575c
  420e92:	shr    BYTE PTR ds:0x503098b2,0xc6
  420e99:	mov    ch,BYTE PTR ds:0x2f41071
  420e9f:	jbe    0x420f17
  420ea1:	aad    0x71
  420ea3:	add    al,0x59
  420ea5:	sar    DWORD PTR [eax],cl
  420ea7:	loop   0x420f11
  420ea9:	iret   
  420eaa:	xor    DWORD PTR [eax-0x13ae83a5],ebp
  420eb0:	jmp    FWORD PTR [ebx+0x20eece8e]
  420eb6:	int    0xa0
  420eb8:	mov    eax,0xf906a692
  420ebd:	pop    es
  420ebe:	cmp    ebx,edi
  420ec0:	xchg   DWORD PTR [esi],esp
  420ec2:	mov    ecx,0x1cf4ef0f
  420ec7:	andps  xmm3,XMMWORD PTR [eax-0x48]
  420ecb:	aaa    
  420ecc:	push   ds
  420ecd:	add    ebp,DWORD PTR [edi]
  420ecf:	aaa    
  420ed0:	lea    ecx,[esi-0x51]
  420ed3:	loop   0x420eb7
  420ed5:	loop   0x420f29
  420ed7:	rcl    BYTE PTR ds:0xbb3d97f2,1
  420edd:	mov    eax,ecx
  420edf:	outs   dx,DWORD PTR ds:[esi]
  420ee0:	push   ss
  420ee1:	dec    esp
  420ee2:	sbb    al,0x18
  420ee4:	mov    dh,0xe9
  420ee6:	cmp    eax,0x289e1bb6
  420eeb:	pop    ds
  420eec:	pusha  
  420eed:	fnstcw WORD PTR [edx]
  420eef:	cmp    eax,0x8da1cbe5
  420ef4:	xchg   esp,eax
  420ef5:	jbe    0x420eb2
  420ef7:	scas   al,BYTE PTR es:[edi]
  420ef8:	mov    al,ds:0x1f43c8da
  420efd:	mov    eax,ds:0xb6adc1de
  420f02:	and    edi,DWORD PTR [edx+esi*2-0x7c96afd3]
  420f09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f0a:	stos   BYTE PTR es:[edi],al
  420f0b:	xchg   esi,edx
  420f0d:	ds mov bl,0xf2
  420f10:	inc    ebx
  420f11:	jecxz  0x420f7a
  420f13:	sub    ecx,DWORD PTR [ebp+eiz*2+0x71]
  420f17:	data16 outs dx,BYTE PTR ds:[esi]
  420f19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f1a:	ret    0x629e
  420f1d:	dec    edx
  420f1e:	outs   dx,DWORD PTR ds:[esi]
  420f1f:	mov    dh,0x69
  420f21:	fs mov ebp,edi
  420f24:	mov    al,ds:0xafd46fb7
  420f29:	fwait
  420f2a:	or     bl,BYTE PTR [edi+0x17]
  420f2d:	jle    0x420f8d
  420f2f:	out    0x4f,al
  420f31:	icebp  
  420f32:	ins    DWORD PTR es:[edi],dx
  420f33:	jae    0x420f82
  420f35:	sbb    BYTE PTR [ebx+0x67dec340],ch
  420f3b:	push   ds
  420f3c:	pusha  
  420f3d:	adc    al,0x81
  420f3f:	xchg   esi,eax
  420f40:	jns    0x420ecc
  420f42:	retf   
  420f43:	fisubr DWORD PTR [edi+esi*2]
  420f46:	push   edi
  420f47:	fwait
  420f48:	cmc    
  420f49:	ins    BYTE PTR es:[edi],dx
  420f4a:	mov    ds:0xa1972233,al
  420f4f:	ja     0x420f0c
  420f51:	repnz sbb DWORD PTR [ebx+edx*8-0x5243919],0x59
  420f5a:	(bad)  
  420f5b:	test   edi,edi
  420f5d:	xchg   ecx,eax
  420f5e:	cwde   
  420f5f:	sub    al,0x2d
  420f61:	int    0x52
  420f63:	lods   eax,DWORD PTR ds:[esi]
  420f64:	adc    edx,esp
  420f66:	ret    0xf543
  420f69:	sbb    edx,DWORD PTR [edx]
  420f6b:	mov    al,ds:0x62e5943
  420f70:	frstor es:[ebx]
  420f73:	fistp  QWORD PTR [ecx-0x5a]
  420f76:	jns    0x420fb2
  420f78:	jae    0x420ff6
  420f7a:	cs mov al,0x4c
  420f7d:	imul   ebp,DWORD PTR [ebp+edi*8+0x58],0xffffffe2
  420f82:	mov    eax,edi
  420f84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f85:	rcl    BYTE PTR [edi],0xa3
  420f88:	cmp    BYTE PTR [ecx+eiz*2-0x3ae853b5],dh
  420f8f:	inc    edi
  420f90:	in     eax,0xa0
  420f92:	or     DWORD PTR [ecx],edi
  420f94:	into   
  420f95:	aam    0x62
  420f97:	cmp    dl,BYTE PTR [ebx+0x1d]
  420f9a:	mov    BYTE PTR [ecx-0x14],ah
  420f9d:	xchg   ebp,eax
  420f9e:	pop    DWORD PTR [esi]
  420fa0:	into   
  420fa1:	mov    edx,0x76b5a3f2
  420fa6:	in     eax,dx
  420fa7:	addr16 dec edi
  420fa9:	mov    DWORD PTR [ebx-0x43],ebx
  420fac:	repz cld 
  420fae:	test   DWORD PTR [ecx-0x39e710cc],esp
  420fb4:	push   0x908c5198
  420fb9:	push   ebp
  420fba:	push   0xffffffde
  420fbc:	iret   
  420fbd:	add    DWORD PTR ds:0xadbd0f92,0x5b
  420fc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fc5:	test   al,0x51
  420fc7:	ins    BYTE PTR es:[edi],dx
  420fc8:	xchg   DWORD PTR ds:0xc3d57b7c,edx
  420fce:	push   0x35
  420fd0:	mov    ebx,es
  420fd2:	fst    QWORD PTR [ebx+0x4]
  420fd5:	repnz mov ecx,0xe362854d
  420fdb:	xchg   esp,eax
  420fdc:	jo     0x420f69
  420fde:	retf   0x6281
  420fe1:	fild   DWORD PTR [esi+ecx*8]
  420fe4:	pop    ebp
  420fe5:	in     al,dx
  420fe6:	repz cmc 
  420fe8:	std    
  420fe9:	or     al,0x8b
  420feb:	sub    eax,DWORD PTR [ebp+0x21]
  420fee:	cs sbb dh,0xf4
  420ff2:	std    
  420ff3:	push   ebx
  420ff4:	jg     0x420fdd
  420ff6:	es ret 
  420ff8:	mov    dl,0xe7
  420ffa:	adc    ebx,DWORD PTR ds:0x9a513b2a
  421000:	fs cmc 
  421002:	mov    ds:0xcfa6952f,al
  421007:	call   0x2123:0xa0d4edc9
  42100e:	sub    esp,0x7b980f3e
  421014:	(bad)  
  421015:	(bad)  
  421016:	dec    eax
  421017:	inc    esi
  421018:	fwait
  421019:	inc    esp
  42101a:	mov    ebp,DWORD PTR [edx+ebx*8+0x29]
  42101e:	leave  
  42101f:	ret    
  421020:	add    ecx,ebx
  421022:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421023:	fldenv [edi-0x17]
  421026:	cmp    DWORD PTR ds:0x3dccab45,esi
  42102c:	cmp    DWORD PTR [edi-0x5],eax
  42102f:	or     al,0xdb
  421031:	push   eax
  421032:	repnz in eax,0x1d
  421035:	out    dx,eax
  421036:	(bad)  
  421038:	loop   0x421032
  42103a:	loop   0x421006
  42103c:	hlt    
  42103d:	pusha  
  42103e:	fsubr  DWORD PTR [eax+0x699d7207]
  421044:	ret    0x2bea
  421047:	cmp    DWORD PTR [ebp+0xd],esp
  42104a:	mov    ecx,ebp
  42104c:	iret   
  42104d:	lea    esp,[ebx-0x59]
  421050:	cmp    eax,0x5bbcde94
  421055:	stc    
  421056:	cdq    
  421057:	push   0x86f46053
  42105c:	fisubr DWORD PTR [eax-0xa55320d]
  421062:	push   cs
  421063:	sti    
  421064:	ret    
  421065:	dec    esp
  421066:	jbe    0x421074
  421068:	push   esi
  421069:	inc    ebx
  42106a:	addr16 cmp eax,0x39848d87
  421070:	mov    dh,0x99
  421072:	stos   BYTE PTR es:[edi],al
  421073:	lock call DWORD PTR [ebp-0x3fef439d]
  42107a:	mov    ebx,0x2e867a36
  42107f:	dec    ebx
  421080:	cwde   
  421081:	adc    BYTE PTR [ecx+0x5b],dh
  421084:	sar    BYTE PTR [edx],0x83
  421087:	fwait
  421088:	sub    bh,dl
  42108a:	arpl   ax,si
  42108c:	pushf  
  42108d:	push   edi
  42108e:	push   ds
  42108f:	push   es
  421090:	or     al,0xfb
  421092:	mov    ?,WORD PTR [ebx-0x50aef08d]
  421098:	adc    ch,BYTE PTR [ecx-0x7ccbc731]
  42109e:	(bad)  
  42109f:	in     eax,0x53
  4210a1:	rep ins BYTE PTR es:[edi],dx
  4210a3:	jo     0x4210f9
  4210a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210a6:	pop    esi
  4210a7:	push   ecx
  4210a8:	sub    eax,0x5886b8b8
  4210ad:	inc    edi
  4210ae:	enter  0xf60f,0x79
  4210b2:	sbb    DWORD PTR [ebx-0x6a541097],ebp
  4210b8:	jl     0x42104e
  4210ba:	repz pop esp
  4210bc:	das    
  4210bd:	jl     0x4210e6
  4210bf:	loopne 0x421051
  4210c1:	cmp    al,0x8d
  4210c3:	fadd   st,st(0)
  4210c5:	(bad)  [eax]
  4210c7:	mov    BYTE PTR [eax],bl
  4210c9:	pop    edx
  4210ca:	jne    0x4210a8
  4210cc:	xor    DWORD PTR [eax],esp
  4210ce:	sbb    BYTE PTR [eax-0x3228e496],0x7d
  4210d5:	fabs   
  4210d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210d8:	jbe    0x421103
  4210da:	lds    ebp,FWORD PTR ss:[eax-0x79]
  4210de:	fidiv  WORD PTR [edx+0x2f]
  4210e1:	dec    esi
  4210e2:	lahf   
  4210e3:	sub    DWORD PTR [ecx-0x41],ebx
  4210e6:	xchg   edx,eax
  4210e7:	enter  0xa965,0x11
  4210eb:	jge    0x421101
  4210ed:	sbb    eax,0x8da89190
  4210f2:	dec    esp
  4210f3:	iret   
  4210f4:	imul   edi,edi,0xffffffa5
  4210f7:	lds    esp,FWORD PTR [ecx+eiz*1-0x7f3939fb]
  4210fe:	adc    DWORD PTR [eax],0x92f0b06f
  421104:	out    dx,eax
  421105:	js     0x42116f
  421107:	shr    BYTE PTR [eax+0x65865ea9],0x92
  42110e:	pop    ebp
  42110f:	push   ebp
  421110:	mov    dh,dl
  421112:	out    0xc9,eax
  421114:	mov    esi,0x2fdb7407
  421119:	inc    eax
  42111a:	sbb    eax,0xa378fd9a
  42111f:	pop    esp
  421120:	xchg   ebx,eax
  421121:	popf   
  421122:	add    ch,BYTE PTR [esi-0xa]
  421125:	sbb    ebx,DWORD PTR [edi+0x4d250366]
  42112b:	loop   0x4211a8
  42112d:	int    0x70
  42112f:	sahf   
  421130:	xor    cl,BYTE PTR [edi-0x1b]
  421133:	or     bl,BYTE PTR [ecx]
  421135:	cmp    ebx,DWORD PTR [eax-0x31]
  421138:	xor    BYTE PTR [ecx-0x39],al
  42113b:	and    al,0xa6
  42113d:	pop    ebx
  42113e:	xor    DWORD PTR [ebx+0x67d8a522],esi
  421144:	icebp  
  421145:	mov    ds:0x91baf420,eax
  42114a:	jmp    FWORD PTR [ebp+0x35ab134a]
  421150:	inc    edi
  421151:	out    dx,al
  421152:	enter  0xe8cd,0xcf
  421156:	in     eax,0x7f
  421158:	fs loop 0x4210e7
  42115b:	jbe    0x4210de
  42115d:	cmp    dh,BYTE PTR [ecx]
  42115f:	inc    esp
  421160:	xlat   BYTE PTR ds:[ebx]
  421161:	xor    dh,BYTE PTR ss:[esi+ebx*4-0x6803d17e]
  421169:	add    DWORD PTR [edi],edi
  42116b:	mov    eax,0x32237cf3
  421170:	icebp  
  421171:	ret    
  421172:	and    al,0xa2
  421174:	lahf   
  421175:	popf   
  421176:	adc    BYTE PTR [edi],dh
  421178:	in     al,dx
  421179:	dec    ecx
  42117a:	cmc    
  42117b:	xchg   esi,eax
  42117c:	dec    esp
  42117d:	cli    
  42117e:	jns    0x4211a1
  421180:	(bad)  
  421181:	stos   BYTE PTR es:[edi],al
  421182:	or     BYTE PTR [ebx+0x3c],ah
  421185:	rcl    BYTE PTR [esi],1
  421187:	ins    BYTE PTR es:[edi],dx
  421188:	test   DWORD PTR [ecx+0x32e4c3f0],0x2d50838a
  421192:	and    BYTE PTR [ebx],cl
  421194:	fdivr  DWORD PTR [eax-0x172d26ff]
  42119a:	repnz adc edx,ebx
  42119d:	arpl   WORD PTR [eax],sp
  42119f:	enter  0x75e5,0x9c
  4211a3:	and    eax,DWORD PTR [ebp+ebp*1+0x49]
  4211a7:	(bad)  
  4211a8:	stc    
  4211a9:	repz and DWORD PTR [eax-0x2381d4bd],ebp
  4211b0:	ror    BYTE PTR [eax-0x22],cl
  4211b3:	nop
  4211b4:	xor    dl,BYTE PTR [eax]
  4211b6:	mov    ecx,0x6b03d326
  4211bb:	adc    BYTE PTR [ebp-0x444ea034],dh
  4211c1:	imul   ecx,DWORD PTR [ebp+edx*2-0x4d76abc1],0x49561c33
  4211cc:	sub    edi,DWORD PTR [eax+0x66]
  4211cf:	dec    esi
  4211d0:	outs   dx,DWORD PTR ds:[esi]
  4211d1:	fisub  DWORD PTR [esi+0x3cf1a903]
  4211d7:	cdq    
  4211d8:	enter  0x2034,0x5c
  4211dc:	sbb    BYTE PTR [esi+0x35],0xe2
  4211e0:	push   es
  4211e1:	pop    esp
  4211e2:	aaa    
  4211e3:	mov    ds:0xf6269bc3,al
  4211e8:	mov    ebp,0x8c1ae929
  4211ed:	fs mov esi,0x42ea0738
  4211f3:	adc    bh,BYTE PTR [edx-0x1332fdb7]
  4211f9:	leave  
  4211fa:	fisttp QWORD PTR [esi+eax*2-0xdf72126]
  421201:	mov    bh,0x77
  421203:	idiv   cl
  421205:	sbb    DWORD PTR ds:0x5a5a0b6f,ebp
  42120b:	xchg   ebp,eax
  42120c:	pop    ebp
  42120d:	daa    
  42120e:	bound  eax,QWORD PTR [esi]
  421210:	rcl    DWORD PTR [esi-0x5373b0c8],1
  421216:	(bad)  
  421217:	xlat   BYTE PTR ds:[ebx]
  421218:	mov    esi,0x389b9a0c
  42121d:	dec    ecx
  42121e:	xchg   DWORD PTR [ebp+0x34],ebp
  421221:	push   ecx
  421222:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421223:	(bad)  
  421224:	mov    ds:0x8d4c6137,eax
  421229:	mov    eax,0x4e01a566
  42122e:	lea    ecx,[ecx]
  421230:	inc    ecx
  421231:	loopne 0x421202
  421233:	or     ebx,ecx
  421235:	and    DWORD PTR [ebx-0x27e7017b],ebx
  42123b:	xor    BYTE PTR [ebx+0x59b2843c],ah
  421241:	leave  
  421242:	fucomip st,st(7)
  421244:	mov    edx,0x8cba86bd
  421249:	(bad)  [ebp-0x2d]
  42124c:	xchg   ecx,eax
  42124d:	sub    esp,DWORD PTR [eax+eax*8+0x202858a2]
  421254:	xor    dh,BYTE PTR [ebx-0x1c]
  421257:	mov    al,BYTE PTR [esi+0x4d1e39f7]
  42125d:	rcr    DWORD PTR [ebx],cl
  42125f:	adc    bl,bh
  421261:	aam    0xe7
  421263:	scas   eax,DWORD PTR es:[edi]
  421264:	js     0x421242
  421266:	mov    bh,0xce
  421268:	mov    ah,0xcc
  42126a:	fimul  WORD PTR [ecx-0x4e]
  42126d:	xor    bl,BYTE PTR [ebp-0x70]
  421270:	mov    al,BYTE PTR [ecx]
  421272:	fisttp DWORD PTR [ecx-0x42bc8bcf]
  421278:	aas    
  421279:	mov    esp,0x8eeddb86
  42127e:	xchg   BYTE PTR [ebx],bh
  421280:	push   eax
  421281:	popf   
  421282:	jmp    0x7632:0xa38179f3
  421289:	and    ecx,esi
  42128b:	clc    
  42128c:	outs   dx,BYTE PTR ds:[esi]
  42128d:	push   eax
  42128e:	sub    al,0x97
  421290:	loop   0x4212d0
  421292:	iret   
  421293:	shl    BYTE PTR [edx+0x49],1
  421296:	retf   
  421297:	adc    al,BYTE PTR [esi-0x4e]
  42129a:	xchg   bh,bh
  42129c:	js     0x421299
  42129e:	inc    esp
  42129f:	loope  0x421285
  4212a1:	sub    edx,DWORD PTR fs:[eax+0x33d6d07f]
  4212a8:	ret    
  4212a9:	xlat   BYTE PTR ds:[ebx]
  4212aa:	xchg   edi,eax
  4212ab:	cmp    esp,esp
  4212ad:	pop    esp
  4212ae:	ds jle 0x421232
  4212b1:	(bad)  
  4212b3:	pop    ss
  4212b4:	pop    ebx
  4212b5:	cdq    
  4212b6:	mov    BYTE PTR [edi-0x2ffc553a],al
  4212bc:	mov    bh,0x3b
  4212be:	mov    edi,0xbb15204f
  4212c3:	fisttp DWORD PTR [eax+0x3]
  4212c6:	or     ax,0x213e
  4212ca:	pop    esi
  4212cb:	iret   
  4212cc:	jl     0x421285
  4212ce:	mov    esi,0x465a9eb5
  4212d3:	aam    0xd2
  4212d5:	outs   dx,BYTE PTR ds:[esi]
  4212d6:	jns    0x421287
  4212d8:	rcl    DWORD PTR [edi+esi*8-0x1615a9a7],1
  4212df:	enter  0xd5d6,0xa3
  4212e3:	pop    esi
  4212e4:	mov    bl,0x40
  4212e6:	jl     0x4212f2
  4212e8:	mov    esi,0xe54f7b0
  4212ed:	icebp  
  4212ee:	gs jae 0x421329
  4212f1:	inc    edi
  4212f2:	test   DWORD PTR [edx],ebx
  4212f4:	arpl   sp,cx
  4212f6:	xchg   esi,eax
  4212f7:	in     al,0x5a
  4212f9:	push   esi
  4212fa:	or     DWORD PTR [ecx+0x35],esi
  4212fd:	fnsave [eax]
  4212ff:	dec    edi
  421300:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  421302:	inc    esp
  421303:	mov    ?,WORD PTR [ebp-0x2a19b71f]
  421309:	push   ds
  42130a:	or     eax,0x91e45ef8
  42130f:	xchg   edx,eax
  421310:	add    DWORD PTR [edx-0x9543dcc],esi
  421316:	dec    esp
  421317:	jp     0x421322
  421319:	jbe    0x421370
  42131b:	mov    dl,0xb6
  42131d:	popf   
  42131e:	(bad)  
  42131f:	cmp    bl,dl
  421321:	xchg   ebx,eax
  421322:	cmc    
  421323:	and    BYTE PTR [eax],bl
  421325:	xor    ebp,DWORD PTR ds:0xde93ede6
  42132b:	xor    BYTE PTR [eax],ah
  42132d:	dec    esi
  42132e:	loope  0x42135e
  421330:	cwde   
  421331:	test   al,0xbc
  421333:	sti    
  421334:	mov    ?,ebp
  421336:	stos   BYTE PTR es:[edi],al
  421337:	push   0x3f
  421339:	addr16 mov ds:0x973d,al
  42133d:	dec    edx
  42133e:	xor    DWORD PTR [edx],edi
  421340:	loope  0x4212c8
  421342:	mov    ds:0x1209312e,al
  421347:	mov    ds:0x59d95997,eax
  42134c:	mov    ds:0x66d56610,al
  421351:	in     al,dx
  421352:	int    0x33
  421354:	aad    0xbd
  421356:	or     bh,BYTE PTR [esp+eax*4+0x3f7fe5ec]
  42135d:	cmp    eax,0x8e517549
  421362:	inc    ebp
  421363:	repz or DWORD PTR [eax+0x75],edi
  421367:	inc    ecx
  421368:	lods   al,BYTE PTR ds:[esi]
  421369:	clc    
  42136a:	sti    
  42136b:	popa   
  42136c:	mov    dl,dh
  42136e:	jns    0x4213d9
  421370:	test   eax,0x691178e8
  421375:	je     0x4213cd
  421377:	sbb    DWORD PTR [esi+0xde044be],0x6dbc97c
  421381:	mov    bl,0x44
  421383:	(bad)  
  421384:	mov    al,0x56
  421386:	fidiv  WORD PTR [edi+0x550645d5]
  42138c:	test   DWORD PTR [ecx],eax
  42138e:	jo     0x4213f2
  421390:	mov    al,dl
  421392:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421393:	mul    DWORD PTR [ecx-0x218b8e51]
  421399:	(bad)  
  42139a:	fwait
  42139b:	pushf  
  42139c:	mov    edx,edx
  42139e:	xchg   ecx,eax
  42139f:	adc    DWORD PTR [edi-0x5e],edi
  4213a2:	pop    edx
  4213a3:	out    0x4f,al
  4213a5:	sub    ah,BYTE PTR [esi-0x31]
  4213a8:	xchg   edi,eax
  4213a9:	dec    ebx
  4213aa:	popa   
  4213ab:	scas   al,BYTE PTR es:[edi]
  4213ac:	std    
  4213ad:	or     al,0x1d
  4213af:	push   cs
  4213b0:	pushf  
  4213b1:	mov    bh,0x9f
  4213b3:	jp     0x4213a8
  4213b5:	push   esi
  4213b6:	ja     0x421411
  4213b8:	mov    cl,0xf2
  4213ba:	adc    al,0x80
  4213bc:	push   edi
  4213bd:	pop    eax
  4213be:	or     eax,0x383344be
  4213c3:	jge    0x421379
  4213c5:	fcomp  QWORD PTR [eax-0x56eb107e]
  4213cb:	jg     0x421401
  4213cd:	jnp    0x4213c6
  4213cf:	aaa    
  4213d0:	xchg   BYTE PTR [eax+0x534099a],dl
  4213d6:	loopne 0x4213fa
  4213d8:	daa    
  4213d9:	(bad)  
  4213da:	imul   edx,ebx,0xf
  4213dd:	cwde   
  4213de:	xadd   esi,esp
  4213e1:	sub    cl,dh
  4213e3:	outs   dx,BYTE PTR ds:[esi]
  4213e4:	add    DWORD PTR [ebx+0x64],ecx
  4213e7:	xchg   edx,eax
  4213e8:	out    0xe5,eax
  4213ea:	lahf   
  4213eb:	test   al,0x93
  4213ed:	popf   
  4213ee:	push   0xf34b9557
  4213f3:	imul   edi,DWORD PTR [esi-0x73c5af9e],0x2f
  4213fa:	mov    eax,0xc44c5ca
  4213ff:	(bad)  
  421400:	jae    0x4213ba
  421402:	daa    
  421403:	fcomp  DWORD PTR [edi]
  421405:	adc    BYTE PTR [esp+edi*4-0x791f9e3e],0xc7
  42140d:	add    DWORD PTR [edx],esi
  42140f:	add    DWORD PTR [ebp-0x146c920],0x6b5a5097
  421419:	lahf   
  42141a:	shl    DWORD PTR ss:[ebp-0x73],1
  42141e:	test   al,0x59
  421420:	mov    edi,0xa42cd67f
  421425:	pop    ebx
  421426:	dec    ebx
  421427:	sub    DWORD PTR [eax],0x1b
  42142a:	bound  dx,DWORD PTR [eax-0x7b]
  42142e:	sub    ecx,DWORD PTR [esi-0x2e]
  421431:	push   cs
  421432:	das    
  421433:	pop    es
  421434:	mov    ds:0xa2bed2e5,eax
  421439:	(bad)  
  42143a:	mov    ch,BYTE PTR [edx-0x2969046f]
  421440:	hlt    
  421441:	xchg   DWORD PTR [ecx+ebp*8+0x71],edi
  421445:	pop    ecx
  421446:	ret    0x185b
  421449:	push   cs
  42144a:	sub    ah,BYTE PTR [esp+eax*1+0x6a90fa4a]
  421451:	sbb    ecx,DWORD PTR [edx+0x2f925aa7]
  421457:	xor    ecx,DWORD PTR [ebx+0x6]
  42145a:	js     0x4213ec
  42145c:	inc    ebx
  42145d:	scas   al,BYTE PTR es:[edi]
  42145e:	repnz push ebx
  421460:	jo     0x4214c5
  421462:	pop    ds
  421463:	(bad)  
  421464:	dec    esi
  421465:	(bad)  
  421466:	je     0x421449
  421468:	mov    ebx,DWORD PTR [ebx-0x14]
  42146b:	enter  0x416e,0x5d
  42146f:	ja     0x4214dd
  421471:	rol    DWORD PTR [ebx],1
  421473:	inc    ebx
  421474:	imul   esp,edi,0x337dadb8
  42147a:	je     0x4214ed
  42147c:	jbe    0x421441
  42147e:	scas   eax,DWORD PTR es:[edi]
  42147f:	push   esp
  421480:	xchg   ecx,eax
  421481:	call   0x31de:0x1e2b03f8
  421488:	(bad)  
  421489:	and    al,0xac
  42148b:	push   es
  42148c:	lods   eax,DWORD PTR es:[esi]
  42148e:	dec    ecx
  42148f:	popf   
  421490:	or     DWORD PTR [esi-0x4f],ebp
  421493:	mov    ds:0x911b29ca,al
  421498:	sbb    DWORD PTR ds:0x8ea03704,ebp
  42149e:	mov    esp,0xe4830d11
  4214a3:	or     DWORD PTR [edi],0x1a
  4214a6:	adc    DWORD PTR [edx-0x19bc910b],ebx
  4214ac:	dec    ebp
  4214ad:	pop    eax
  4214ae:	out    0x17,eax
  4214b0:	out    0xc1,al
  4214b2:	cld    
  4214b3:	jl     0x421496
  4214b5:	mov    ch,0xe9
  4214b7:	xor    DWORD PTR [edi+0x43414b32],ebp
  4214bd:	pop    esi
  4214be:	or     ah,cl
  4214c0:	ret    
  4214c1:	mov    esi,0xdcbbe4a1
  4214c6:	and    al,0x92
  4214c8:	ret    0xc033
  4214cb:	ret    
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428100
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x428104
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428108
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x42810c
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f0
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280f4
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x4280f8
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x4280fc
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x4280fe
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	cmp    DWORD PTR [ebp+0x8],0x0
  421630:	jne    0x42163b
  421632:	mov    eax,DWORD PTR [ebp-0x10]
  421635:	add    eax,0x1
  421638:	mov    DWORD PTR [ebp-0x10],eax
  42163b:	mov    DWORD PTR [ebp-0x48],0x0
  421642:	mov    DWORD PTR [ebp-0x4c],0x0
  421649:	push   0x1
  42164b:	lea    ecx,[ebp-0x14]
  42164e:	push   ecx
  42164f:	call   DWORD PTR ds:0x428000
  421655:	mov    BYTE PTR [ebp-0x40],0x56
  421659:	call   DWORD PTR ds:0x428010
  42165f:	mov    DWORD PTR [ebp-0x2c],eax
  421662:	mov    BYTE PTR [ebp-0x3e],0x72
  421666:	movzx  edx,WORD PTR [ebp-0x2c]
  42166a:	test   edx,edx
  42166c:	jne    0x4216ae
  42166e:	mov    BYTE PTR [ebp-0x34],0x0
  421672:	mov    DWORD PTR [ebp-0x14],0xe0d
  421679:	lea    eax,[ebp-0x28]
  42167c:	push   eax
  42167d:	call   DWORD PTR ds:0x428014
  421683:	mov    DWORD PTR [ebp-0x68],eax
  421686:	mov    DWORD PTR [ebp-0x5c],0x3a
  42168d:	lea    ecx,[ebp-0x40]
  421690:	push   ecx
  421691:	mov    edx,DWORD PTR [ebp-0x68]
  421694:	push   edx
  421695:	call   DWORD PTR ds:0x428018
  42169b:	mov    DWORD PTR [ebp-0x44],eax
  42169e:	mov    DWORD PTR [ebp-0x8],0x2b6ba442
  4216a5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216ac:	jmp    0x4216c3
  4216ae:	mov    BYTE PTR ds:0x443a58,0x0
  4216b5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216bc:	mov    BYTE PTR ds:0x441b18,0x0
  4216c3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216ca:	push   DWORD PTR ds:0x428014
  4216d0:	pop    edx
  4216d1:	mov    DWORD PTR [ebp-0x74],edx
  4216d4:	push   DWORD PTR [ebp-0x30]
  4216d7:	push   0x1000
  4216dc:	mov    eax,DWORD PTR [ebp-0x14]
  4216df:	add    eax,0x23
  4216e2:	add    eax,0x23
  4216e5:	push   eax
  4216e6:	xor    eax,eax
  4216e8:	push   eax
  4216e9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216ec:	call   ecx
  4216ee:	mov    edx,eax
  4216f0:	mov    DWORD PTR [ebp-0x4],edx
  4216f3:	mov    eax,DWORD PTR [ebp-0x70]
  4216f6:	sub    eax,0xdae0b
  4216fb:	mov    DWORD PTR [ebp-0x70],eax
  4216fe:	cmp    DWORD PTR [ebp-0x4],0x0
  421702:	jne    0x42170b
  421704:	mov    BYTE PTR ds:0x441b18,0x0
  42170b:	mov    ecx,DWORD PTR [ebp-0x4]
  42170e:	add    ecx,DWORD PTR [ebp-0x14]
  421711:	mov    edx,DWORD PTR [ebp-0x8]
  421714:	mov    DWORD PTR [ecx],edx
  421716:	mov    eax,DWORD PTR [ebp-0x4]
  421719:	add    eax,DWORD PTR [ebp-0x5c]
  42171c:	mov    DWORD PTR [ebp-0x64],eax
  42171f:	mov    ecx,DWORD PTR ds:0x428018
  421725:	mov    DWORD PTR [ebp-0x54],ecx
  421728:	mov    edx,DWORD PTR [ebp-0x4]
  42172b:	add    edx,DWORD PTR [ebp-0x14]
  42172e:	mov    eax,DWORD PTR [ebp+0x8]
  421731:	mov    DWORD PTR [edx+0x4],eax
  421734:	mov    ecx,DWORD PTR [ebp-0x4]
  421737:	add    ecx,DWORD PTR [ebp-0x14]
  42173a:	mov    DWORD PTR [ebp-0xc],ecx
  42173d:	cmp    DWORD PTR [ebp-0x70],0x0
  421741:	jbe    0x42175e
  421743:	mov    edx,DWORD PTR [ebp-0xc]
  421746:	push   edx
  421747:	mov    eax,DWORD PTR [ebp-0x14]
  42174a:	push   eax
  42174b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42174e:	add    ecx,DWORD PTR [ebp-0x70]
  421751:	push   ecx
  421752:	mov    edx,DWORD PTR [ebp-0x4]
  421755:	push   edx
  421756:	call   0x4214d0
  42175b:	add    esp,0x10
  42175e:	cmp    DWORD PTR [ebp-0x64],0x0
  421762:	je     0x421776
  421764:	mov    ecx,DWORD PTR [ebp-0x54]
  421767:	push   ecx
  421768:	push   DWORD PTR [ebp-0x74]
  42176b:	mov    esi,DWORD PTR [ebp-0x64]
  42176e:	push   edx
  42176f:	pop    eax
  421770:	push   ecx
  421771:	nop
  421772:	jmp    esi
  421774:	jmp    0x42177c
  421776:	mov    eax,DWORD PTR [ebp+0x8]
  421779:	mov    DWORD PTR [ebp-0x18],eax
  42177c:	mov    eax,0x1
  421781:	pop    esi
  421782:	mov    esp,ebp
  421784:	pop    ebp
  421785:	ret    
  421786:	int3   
  421787:	int3   
  421788:	int3   
  421789:	int3   
  42178a:	int3   
  42178b:	int3   
  42178c:	int3   
  42178d:	int3   
  42178e:	int3   
  42178f:	int3   
  421790:	push   ebp
  421791:	mov    ebp,esp
  421793:	sub    esp,0x18
  421796:	lea    eax,[ebp-0x18]
  421799:	push   eax
  42179a:	call   DWORD PTR ds:0x42800c
  4217a0:	cmp    WORD PTR [ebp-0x18],0x0
  4217a5:	je     0x4217e8
  4217a7:	mov    ecx,DWORD PTR ds:0x428010
  4217ad:	push   0x0
  4217af:	push   0xb2
  4217b4:	push   0x82
  4217b9:	push   0x0
  4217bb:	mov    DWORD PTR [ebp-0x4],ecx
  4217be:	call   DWORD PTR ds:0x428008
  4217c4:	push   DWORD PTR [ebp-0x4]
  4217c7:	pop    edx
  4217c8:	call   edx
  4217ca:	push   eax
  4217cb:	pop    DWORD PTR [ebp-0x8]
  4217ce:	push   0x4881f170
  4217d3:	call   0x421550
  4217d8:	add    esp,0x4
  4217db:	call   0x411000
  4217e0:	xor    eax,eax
  4217e2:	mov    esp,ebp
  4217e4:	pop    ebp
  4217e5:	ret    0x10
  4217e8:	(bad)  
  4217e9:	fbstp  TBYTE PTR [ebp+0x4092e7d5]
  4217ef:	pop    edx
  4217f0:	inc    edi
  4217f1:	or     DWORD PTR [eax],0xffffffbd
  4217f4:	iret   
  4217f5:	lahf   
  4217f6:	ins    DWORD PTR es:[edi],dx
  4217f7:	out    dx,eax
  4217f8:	inc    ebp
  4217f9:	pop    edi
  4217fa:	xchg   ecx,eax
  4217fb:	inc    eax
  4217fc:	pop    edx
  4217fd:	inc    edi
  4217fe:	xchg   DWORD PTR [eax],ecx
  421800:	mov    ebp,0xef92608f
  421805:	inc    ebp
  421806:	out    0x91,eax
  421808:	inc    eax
  421809:	pop    edx
  42180a:	inc    edi
  42180b:	xchg   DWORD PTR [eax],ecx
  42180d:	mov    ebp,0xef9260cf
  421812:	inc    ebp
  421813:	out    0x91,eax
  421815:	inc    eax
  421816:	pop    edx
  421817:	inc    edi
  421818:	xchg   DWORD PTR [eax],ecx
  42181a:	mov    ebp,0xef9260cf
  42181f:	inc    ebp
  421820:	out    0x91,eax
  421822:	inc    eax
  421823:	pop    edx
  421824:	inc    edi
  421825:	jg     0x42182f
  421827:	mov    ebp,0x558d6ecf
  42182c:	dec    ebx
  42182d:	out    0x25,eax
  42182f:	dec    ecx
  421830:	xchg   edi,eax
  421831:	data16 aas 
  421833:	or     ecx,esi
  421835:	add    al,BYTE PTR [ecx-0x3a]
  421838:	xchg   DWORD PTR [esp+edx*4],ebp
  42183b:	mov    cl,0x30
  42183d:	sub    BYTE PTR [eax],ch
  42183f:	loopne 0x4218bb
  421841:	fsub   QWORD PTR [edx+0x2b8ef140]
  421847:	mov    esi,edi
  421849:	xor    al,0x7a
  42184b:	and    eax,0xbacf28e2
  421850:	push   cs
  421851:	mov    dl,0x86
  421853:	sub    eax,edi
  421855:	aad    0xf
  421857:	or     DWORD PTR [edi-0x16],esp
  42185a:	fldcw  WORD PTR [bp+si-0x60b2]
  42185f:	loop   0x4218b0
  421861:	ret    
  421862:	xchg   ecx,eax
  421863:	inc    eax
  421864:	pop    edx
  421865:	inc    edi
  421866:	xchg   DWORD PTR [eax],ecx
  421868:	mov    ebp,0xb66ef9c8
  42186d:	push   es
  42186e:	pop    ds
  42186f:	add    ecx,DWORD PTR [edx+0x19]
  421872:	mov    edi,0x37fe0215
  421877:	repnz cwde 
  421879:	mov    bh,0x20
  42187b:	jmp    0x421818
  42187d:	pop    ds
  42187e:	mov    ds:0xd8508dd5,al
  421883:	imul   DWORD PTR [edx+0x50]
  421886:	pop    ss
  421887:	xlat   BYTE PTR ds:[ebx]
  421888:	in     eax,dx
  421889:	leave  
  42188a:	and    eax,0xf0ef4d63
  42188f:	das    
  421890:	lds    ecx,FWORD PTR [esp+ebx*1-0x2a]
  421894:	dec    edi
  421895:	mov    eax,ds:0xd50d269
  42189a:	pop    es
  42189b:	sbb    DWORD PTR [edi-0x1aff677b],esi
  4218a1:	packuswb mm2,QWORD PTR [eax+0x15bf024a]
  4218a8:	add    bh,dh
  4218aa:	aaa    
  4218ab:	repz cwde 
  4218ad:	(bad)  
  4218ae:	mov    esp,0x82ff9b75
  4218b3:	(bad)  
  4218b4:	lea    eax,[ebp+0x45]
  4218b7:	pop    ebp
  4218b8:	push   0xffffffca
  4218ba:	mov    bh,BYTE PTR [eax-0x13]
  4218bd:	cdq    
  4218be:	mov    eax,0x6ddf4dc8
  4218c3:	mov    ch,0xc5
  4218c5:	and    ch,BYTE PTR [edx+0x7d]
  4218c8:	dec    edi
  4218c9:	mov    edi,0x5504ff4
  4218ce:	jg     0x42186a
  4218d0:	mov    bh,0x9d
  4218d2:	or     ecx,esi
  4218d4:	xchg   DWORD PTR [esi],eax
  4218d6:	pop    ds
  4218d7:	add    ecx,DWORD PTR [edx+0x5a]
  4218da:	inc    edi
  4218db:	xchg   DWORD PTR [eax],ecx
  4218dd:	mov    ebp,0xbf9260cf
  4218e2:	add    bh,ah
  4218e4:	xchg   ecx,eax
  4218e5:	or     al,0x5b
  4218e7:	inc    ebp
  4218e8:	xchg   DWORD PTR [eax-0x6dd05b93],ebp
  4218ee:	out    dx,eax
  4218ef:	inc    ebp
  4218f0:	out    0x91,eax
  4218f2:	inc    eax
  4218f3:	pop    edx
  4218f4:	inc    edi
  4218f5:	or     BYTE PTR [bp+0x6bce],bh
  4218fa:	xchg   ebx,eax
  4218fb:	in     eax,0x45
  4218fd:	out    0x7f,eax
  4218ff:	inc    esp
  421900:	pop    edx
  421901:	inc    edi
  421902:	cmp    ecx,DWORD PTR [esi]
  421904:	mov    ebp,0xef9260cf
  421909:	push   esp
  42190a:	pop    edx
  42190b:	xchg   ecx,eax
  42190c:	inc    eax
  42190d:	pop    edx
  42190e:	push   edi
  42190f:	xchg   DWORD PTR [eax],ecx
  421911:	mov    ebp,0xef9265cf
  421916:	inc    ebp
  421917:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421918:	xchg   ecx,eax
  421919:	inc    eax
  42191a:	dec    edx
  42191b:	inc    edi
  42191c:	xchg   DWORD PTR [eax],ecx
  42191e:	mov    edi,0xef9760cf
  421923:	inc    esp
  421924:	out    0x91,eax
  421926:	inc    eax
  421927:	pop    edx
  421928:	inc    edi
  421929:	or     BYTE PTR [eax],0xbc
  42192c:	iret   
  42192d:	pusha  
  42192e:	xchg   edx,eax
  42192f:	out    dx,eax
  421930:	inc    ebp
  421931:	out    0xc1,eax
  421933:	dec    esp
  421934:	pop    edx
  421935:	inc    edi
  421936:	or     DWORD PTR [eax],0xffffffbd
  421939:	into   
  42193a:	test   BYTE PTR [edi-0x6e18b811],dl
  421940:	rcr    BYTE PTR [edx+0x47],0x97
  421944:	or     BYTE PTR [ebp-0x106d9f21],bh
  42194a:	inc    ebp
  42194b:	not    DWORD PTR [ecx-0x78b8b5c0]
  421951:	or     BYTE PTR [ebp-0x107d9f31],bh
  421957:	inc    ebp
  421958:	out    0x91,eax
  42195a:	inc    eax
  42195b:	pop    edx
  42195c:	inc    edi
  42195d:	xchg   DWORD PTR [eax],ecx
  42195f:	mov    ebp,0xe3ab94cf
  421964:	inc    ebp
  421965:	mov    ss,WORD PTR [edx+0x77475a40]
  42196b:	add    edi,DWORD PTR [ebp-0x106dd680]
  421971:	inc    ebp
  421972:	out    0x91,eax
  421974:	inc    eax
  421975:	pop    edx
  421976:	inc    edi
  421977:	xchg   DWORD PTR [eax],ecx
  421979:	mov    ebp,0xef9260cf
  42197e:	inc    ebp
  42197f:	out    0x91,eax
  421981:	inc    eax
  421982:	pop    edx
  421983:	inc    edi
  421984:	xchg   DWORD PTR [eax],ecx
  421986:	mov    ebp,0xef9260cf
  42198b:	inc    ebp
  42198c:	out    0x91,eax
  42198e:	inc    eax
  42198f:	pop    edx
  421990:	inc    edi
  421991:	xchg   DWORD PTR [eax],ecx
  421993:	mov    ebp,0xef9260cf
  421998:	inc    ebp
  421999:	out    0x91,eax
  42199b:	inc    eax
  42199c:	pop    edx
  42199d:	inc    edi
  42199e:	xchg   DWORD PTR [eax],ecx
  4219a0:	mov    ebp,0xef9260cf
  4219a5:	inc    ebp
  4219a6:	out    0x91,eax
  4219a8:	inc    eax
  4219a9:	pop    edx
  4219aa:	inc    edi
  4219ab:	xchg   DWORD PTR [eax],ecx
  4219ad:	mov    ebp,0xef9260cf
  4219b2:	inc    ebp
  4219b3:	out    0x91,eax
  4219b5:	inc    eax
  4219b6:	pop    edx
  4219b7:	inc    edi
  4219b8:	xchg   DWORD PTR [eax],ecx
  4219ba:	mov    ebp,0xef9260cf
  4219bf:	inc    ebp
  4219c0:	out    0x91,eax
  4219c2:	inc    eax
  4219c3:	pop    edx
  4219c4:	inc    edi
  4219c5:	xchg   DWORD PTR [eax],ecx
  4219c7:	mov    ebp,0xef9260cf
  4219cc:	inc    ebp
  4219cd:	out    0x91,eax
  4219cf:	inc    eax
  4219d0:	pop    edx
  4219d1:	inc    edi
  4219d2:	xchg   DWORD PTR [eax],ecx
  4219d4:	mov    ebp,0xef9260cf
  4219d9:	imul   edx,DWORD PTR [ebx+0x472e38f4],0xffffff87
  4219e0:	or     BYTE PTR [ebp-0x106d94d1],bh
  4219e6:	push   ebp
  4219e7:	out    0x91,eax
  4219e9:	inc    eax
  4219ea:	mov    es,WORD PTR [ebx-0x79]
  4219ed:	or     BYTE PTR [ecx-0x553d9f31],bh
  4219f3:	push   es
  4219f4:	aad    0xc5
  4219f6:	cvtps2pd xmm0,QWORD PTR [edi-0x79]
  4219fa:	or     BYTE PTR [ebp-0x106dbf31],bh
  421a00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a01:	leave  
  421a02:	jecxz  0x421a37
  421a04:	sub    BYTE PTR [edi+eax*4],ah
  421a07:	or     BYTE PTR [ebp-0x106dff31],bh
  421a0d:	inc    ebp
  421a0e:	pop    ss
  421a0f:	call   0xbd08:0x871d5a40
  421a16:	pop    ss
  421a17:	fs xchg edx,eax
  421a19:	out    dx,eax
  421a1a:	inc    ebp
  421a1b:	out    0x91,eax
  421a1d:	inc    eax
  421a1e:	pop    edx
  421a1f:	inc    edi
  421a20:	xchg   DWORD PTR [eax],ecx
  421a22:	mov    ebp,0xefb260cf
  421a27:	inc    ebp
  421a28:	pop    es
  421a29:	xchg   ecx,eax
  421a2a:	inc    eax
  421a2b:	pop    edx
  421a2c:	inc    edi
  421a2d:	xchg   DWORD PTR [eax],ecx
  421a2f:	mov    ebp,0xef9260cf
  421a34:	inc    ebp
  421a35:	out    0x91,eax
  421a37:	inc    eax
  421a38:	pop    edx
  421a39:	inc    edi
  421a3a:	xchg   DWORD PTR [eax],ecx
  421a3c:	mov    ebp,0xef9260cf
  421a41:	inc    ebp
  421a42:	out    0x91,eax
  421a44:	inc    eax
  421a45:	pop    edx
  421a46:	inc    edi
  421a47:	xchg   DWORD PTR [eax],ecx
  421a49:	mov    ebp,0xef9260cf
  421a4e:	inc    ebp
  421a4f:	out    0x91,eax
  421a51:	inc    eax
  421a52:	pop    edx
  421a53:	inc    edi
  421a54:	xchg   DWORD PTR [eax],ecx
  421a56:	mov    ebp,0xef9260cf
  421a5b:	inc    ebp
  421a5c:	out    0x91,eax
  421a5e:	inc    eax
  421a5f:	pop    edx
  421a60:	inc    edi
  421a61:	xchg   DWORD PTR [eax],ecx
  421a63:	mov    ebp,0xef9260cf
  421a68:	inc    ebp
  421a69:	out    0x91,eax
  421a6b:	inc    eax
  421a6c:	pop    edx
  421a6d:	inc    edi
  421a6e:	xchg   DWORD PTR [eax],ecx
  421a70:	mov    ebp,0xef9260cf
  421a75:	inc    ebp
  421a76:	out    0x91,eax
  421a78:	inc    eax
  421a79:	pop    edx
  421a7a:	inc    edi
  421a7b:	xchg   DWORD PTR [eax],ecx
  421a7d:	mov    ebp,0xef9260cf
  421a82:	inc    ebp
  421a83:	out    0x91,eax
  421a85:	inc    eax
  421a86:	pop    edx
  421a87:	inc    edi
  421a88:	xchg   DWORD PTR [eax],ecx
  421a8a:	mov    ebp,0xef9260cf
  421a8f:	inc    ebp
  421a90:	out    0x91,eax
  421a92:	inc    eax
  421a93:	pop    edx
  421a94:	inc    edi
  421a95:	xchg   DWORD PTR [eax],ecx
  421a97:	mov    ebp,0xef9260cf
  421a9c:	inc    ebp
  421a9d:	out    0x91,eax
  421a9f:	inc    eax
  421aa0:	pop    edx
  421aa1:	inc    edi
  421aa2:	xchg   DWORD PTR [eax],ecx
  421aa4:	mov    ebp,0xef9260cf
  421aa9:	inc    ebp
  421aaa:	out    0x91,eax
  421aac:	inc    eax
  421aad:	pop    edx
  421aae:	inc    edi
  421aaf:	xchg   DWORD PTR [eax],ecx
  421ab1:	mov    ebp,0xef9260cf
  421ab6:	inc    ebp
  421ab7:	out    0x91,eax
  421ab9:	inc    eax
  421aba:	pop    edx
  421abb:	inc    edi
  421abc:	xchg   DWORD PTR [eax],ecx
  421abe:	mov    ebp,0xef9260cf
  421ac3:	inc    ebp
  421ac4:	out    0x91,eax
  421ac6:	inc    eax
  421ac7:	pop    edx
  421ac8:	inc    edi
  421ac9:	xchg   DWORD PTR [eax],ecx
  421acb:	mov    ebp,0xef9260cf
  421ad0:	inc    ebp
  421ad1:	out    0x91,eax
  421ad3:	inc    eax
  421ad4:	pop    edx
  421ad5:	inc    edi
  421ad6:	xchg   DWORD PTR [eax],ecx
  421ad8:	mov    ebp,0xef9260cf
  421add:	inc    ebp
  421ade:	out    0x91,eax
  421ae0:	inc    eax
  421ae1:	pop    edx
  421ae2:	inc    edi
  421ae3:	xchg   DWORD PTR [eax],ecx
  421ae5:	mov    ebp,0xef9260cf
  421aea:	inc    ebp
  421aeb:	out    0x91,eax
  421aed:	inc    eax
  421aee:	pop    edx
  421aef:	inc    edi
  421af0:	xchg   DWORD PTR [eax],ecx
  421af2:	mov    ebp,0xef9260cf
  421af7:	inc    ebp
  421af8:	out    0x91,eax
  421afa:	inc    eax
  421afb:	pop    edx
  421afc:	inc    edi
  421afd:	xchg   DWORD PTR [eax],ecx
  421aff:	mov    ebp,0xef9260cf
  421b04:	inc    ebp
  421b05:	out    0x91,eax
  421b07:	inc    eax
  421b08:	pop    edx
  421b09:	inc    edi
  421b0a:	xchg   DWORD PTR [eax],ecx
  421b0c:	mov    ebp,0xef9260cf
  421b11:	inc    ebp
  421b12:	out    0x91,eax
  421b14:	inc    eax
  421b15:	pop    edx
  421b16:	inc    edi
  421b17:	xchg   DWORD PTR [eax],ecx
  421b19:	mov    ebp,0xef9260cf
  421b1e:	inc    ebp
  421b1f:	out    0x91,eax
  421b21:	inc    eax
  421b22:	pop    edx
  421b23:	inc    edi
  421b24:	xchg   DWORD PTR [eax],ecx
  421b26:	mov    ebp,0xef9260cf
  421b2b:	inc    ebp
  421b2c:	out    0x91,eax
  421b2e:	inc    eax
  421b2f:	pop    edx
  421b30:	inc    edi
  421b31:	xchg   DWORD PTR [eax],ecx
  421b33:	mov    ebp,0xef9260cf
  421b38:	inc    ebp
  421b39:	out    0x91,eax
  421b3b:	inc    eax
  421b3c:	pop    edx
  421b3d:	inc    edi
  421b3e:	xchg   DWORD PTR [eax],ecx
  421b40:	mov    ebp,0xef9260cf
  421b45:	inc    ebp
  421b46:	out    0x91,eax
  421b48:	inc    eax
  421b49:	pop    edx
  421b4a:	inc    edi
  421b4b:	xchg   DWORD PTR [eax],ecx
  421b4d:	mov    ebp,0xef9260cf
  421b52:	inc    ebp
  421b53:	out    0x91,eax
  421b55:	inc    eax
  421b56:	pop    edx
  421b57:	inc    edi
  421b58:	xchg   DWORD PTR [eax],ecx
  421b5a:	mov    ebp,0xef9260cf
  421b5f:	inc    ebp
  421b60:	out    0x91,eax
  421b62:	inc    eax
  421b63:	pop    edx
  421b64:	inc    edi
  421b65:	xchg   DWORD PTR [eax],ecx
  421b67:	mov    ebp,0xef9260cf
  421b6c:	inc    ebp
  421b6d:	out    0x91,eax
  421b6f:	inc    eax
  421b70:	pop    edx
  421b71:	inc    edi
  421b72:	xchg   DWORD PTR [eax],ecx
  421b74:	mov    ebp,0xef9260cf
  421b79:	inc    ebp
  421b7a:	out    0x91,eax
  421b7c:	inc    eax
  421b7d:	pop    edx
  421b7e:	inc    edi
  421b7f:	xchg   DWORD PTR [eax],ecx
  421b81:	mov    ebp,0xef9260cf
  421b86:	inc    ebp
  421b87:	out    0x91,eax
  421b89:	inc    eax
  421b8a:	pop    edx
  421b8b:	inc    edi
  421b8c:	xchg   DWORD PTR [eax],ecx
  421b8e:	mov    ebp,0xef9260cf
  421b93:	inc    ebp
  421b94:	out    0x91,eax
  421b96:	inc    eax
  421b97:	pop    edx
  421b98:	inc    edi
  421b99:	xchg   DWORD PTR [eax],ecx
  421b9b:	mov    ebp,0xef9260cf
  421ba0:	inc    ebp
  421ba1:	out    0x91,eax
  421ba3:	inc    eax
  421ba4:	pop    edx
  421ba5:	inc    edi
  421ba6:	xchg   DWORD PTR [eax],ecx
  421ba8:	mov    ebp,0xef9260cf
  421bad:	inc    ebp
  421bae:	out    0x91,eax
  421bb0:	inc    eax
  421bb1:	pop    edx
  421bb2:	inc    edi
  421bb3:	xchg   DWORD PTR [eax],ecx
  421bb5:	mov    ebp,0xef9260cf
  421bba:	inc    ebp
  421bbb:	out    0x91,eax
  421bbd:	inc    eax
  421bbe:	pop    edx
  421bbf:	inc    edi
  421bc0:	xchg   DWORD PTR [eax],ecx
  421bc2:	mov    ebp,0xef9260cf
  421bc7:	inc    ebp
  421bc8:	out    0x91,eax
  421bca:	inc    eax
  421bcb:	pop    edx
  421bcc:	inc    edi
  421bcd:	xchg   DWORD PTR [eax],ecx
  421bcf:	mov    ebp,0xef9260cf
  421bd4:	inc    ebp
  421bd5:	out    0x91,eax
  421bd7:	inc    eax
  421bd8:	pop    edx
  421bd9:	inc    edi
  421bda:	xchg   DWORD PTR [eax],ecx
  421bdc:	mov    ebp,0xef9260cf
  421be1:	inc    ebp
  421be2:	out    0x91,eax
  421be4:	inc    eax
  421be5:	pop    edx
  421be6:	inc    edi
  421be7:	xchg   DWORD PTR [eax],ecx
  421be9:	shl    BYTE PTR [edi+0x6b],cl
  421bec:	xchg   edx,eax
  421bed:	rol    BYTE PTR [ebp-0x19],0x81
  421bf1:	inc    eax
  421bf2:	pop    edx
  421bf3:	ins    DWORD PTR es:[edi],dx
  421bf4:	and    eax,0x9fa9ccd2
  421bf9:	mov    edi,0x7cb7c271
  421bfe:	jbe    0x421bb2
  421c00:	push   esp
  421c01:	xor    ebx,DWORD PTR [ebp-0x371b4125]
  421c07:	cld    
  421c08:	hlt    
  421c09:	push   eax
  421c0a:	xchg   DWORD PTR ds:0xce06cdbe,ebp
  421c10:	xchg   ebx,eax
  421c11:	lods   eax,DWORD PTR ds:[esi]
  421c12:	lock lods eax,DWORD PTR ds:[esi]
  421c14:	(bad)  
  421c15:	jbe    0x421bbf
  421c17:	and    BYTE PTR [edi+0x78],dl
  421c1a:	inc    edi
  421c1b:	mov    al,ds:0x319a35af
  421c20:	inc    DWORD PTR [esi+0x77]
  421c23:	fimul  DWORD PTR [esp+edx*2-0x15]
  421c27:	daa    
  421c28:	mov    dh,dl
  421c2a:	cdq    
  421c2b:	je     0x421c59
  421c2d:	inc    ecx
  421c2e:	sub    ch,BYTE PTR [edx+0x1f]
  421c31:	cmovp  esi,DWORD PTR [ebp-0x4d5458dd]
  421c38:	ds retf 0xaabf
  421c3c:	cmp    eax,0x9403c0a1
  421c41:	test   cl,0x21
  421c44:	rcl    BYTE PTR [edx-0x1f],0xc8
  421c48:	or     eax,0x73135342
  421c4d:	xor    DWORD PTR [ebx+0x44dcf8a6],esp
  421c53:	add    BYTE PTR [ebx+edi*8],dh
  421c56:	imul   eax,DWORD PTR [eax],0xa011683a
  421c5c:	mov    eax,0xd290a6a8
  421c61:	sub    BYTE PTR [ecx+0x2b89cf9],ch
  421c67:	je     0x421c21
  421c69:	mov    dh,0x39
  421c6b:	jno    0x421ce5
  421c6d:	outs   dx,DWORD PTR ds:[esi]
  421c6e:	cld    
  421c6f:	dec    ebp
  421c70:	sbb    ebx,DWORD PTR [edx-0x44]
  421c73:	dec    edx
  421c74:	pop    ds
  421c75:	adc    DWORD PTR [edx],0x41
  421c78:	xor    bh,ah
  421c7a:	add    al,0x81
  421c7c:	fwait
  421c7d:	ret    0xd3cf
  421c80:	sbb    al,0xdc
  421c82:	cli    
  421c83:	stos   BYTE PTR es:[edi],al
  421c84:	cli    
  421c85:	mov    bh,0x43
  421c87:	xor    DWORD PTR [edx-0x24b7bca4],ecx
  421c8d:	mov    al,0x40
  421c8f:	into   
  421c90:	mov    DWORD PTR [edi-0x5b],0x5778d6e3
  421c97:	aas    
  421c98:	retf   
  421c99:	pop    es
  421c9a:	mov    cl,0xd5
  421c9c:	sub    eax,0xc8971db7
  421ca1:	adc    eax,0xd9f51df9
  421ca6:	add    eax,DWORD PTR [ebx+0x168ebb91]
  421cac:	aas    
  421cad:	or     eax,0xaacc26bd
  421cb2:	dec    eax
  421cb3:	dec    esi
  421cb4:	xchg   ecx,eax
  421cb5:	aad    0x6f
  421cb7:	rol    esi,1
  421cb9:	popa   
  421cba:	pop    ebx
  421cbb:	ja     0x421ca5
  421cbd:	shl    BYTE PTR [ebx-0x54b2917],cl
  421cc3:	push   esp
  421cc4:	or     al,0xa5
  421cc6:	add    BYTE PTR [eax-0x18],bl
  421cc9:	xchg   ecx,eax
  421cca:	mov    dl,0xad
  421ccc:	adc    cl,ch
  421cce:	push   edx
  421ccf:	push   ss
  421cd0:	push   ebp
  421cd1:	popa   
  421cd2:	not    BYTE PTR [edx-0x61]
  421cd5:	nop
  421cd6:	sbb    bl,BYTE PTR [esi-0x639a0952]
  421cdc:	mov    ebx,0xa4d4e567
  421ce1:	jmp    0x421d00
  421ce3:	fadd   DWORD PTR [esi]
  421ce5:	jns    0x421d4b
  421ce7:	dec    ecx
  421ce8:	jnp    0x421d53
  421cea:	adc    al,0x1
  421cec:	fs push 0x38
  421cef:	les    esp,FWORD PTR [esi]
  421cf1:	imul   ebp,edi,0xc489daf9
  421cf7:	push   es
  421cf8:	inc    edi
  421cf9:	cs jae 0x421d64
  421cfc:	shl    DWORD PTR [ecx],1
  421cfe:	xchg   ecx,eax
  421cff:	loope  0x421cbe
  421d01:	add    DWORD PTR [ebp+edx*2-0x7ef4cba5],edi
  421d08:	push   esi
  421d09:	sbb    al,0xdf
  421d0b:	fcmovu st,st(4)
  421d0d:	out    0x45,eax
  421d0f:	inc    ecx
  421d10:	xor    ebx,DWORD PTR [eax+edx*2]
  421d13:	stc    
  421d14:	sub    al,al
  421d16:	in     eax,0xe8
  421d18:	sub    eax,DWORD PTR [esi+edx*8-0x3d633596]
  421d1f:	(bad)  
  421d20:	jns    0x421d7c
  421d22:	loope  0x421cde
  421d24:	aad    0x1e
  421d26:	hlt    
  421d27:	push   ds
  421d28:	xor    BYTE PTR [ecx-0x6c],dl
  421d2b:	inc    edx
  421d2c:	cmp    eax,0xac81c8fc
  421d31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d32:	cmp    dl,BYTE PTR [edx]
  421d34:	aaa    
  421d35:	out    dx,eax
  421d36:	mov    ah,0x16
  421d38:	in     eax,dx
  421d39:	mov    dh,0x84
  421d3b:	aam    0x3d
  421d3d:	pop    eax
  421d3e:	mov    ebp,0x9f7ce292
  421d43:	outs   dx,BYTE PTR ds:[esi]
  421d44:	push   0xffffffef
  421d46:	in     al,dx
  421d47:	aad    0xa2
  421d49:	(bad)  [esi+ebx*8-0x6c35f35]
  421d50:	dec    edi
  421d51:	add    eax,0x4511c0d5
  421d56:	call   0xfc21:0x6c2c1e66
  421d5d:	aaa    
  421d5e:	jmp    0x421d84
  421d60:	cmp    BYTE PTR [edi+edx*1-0x5b205bb7],dl
  421d67:	jnp    0x421cfa
  421d69:	xor    BYTE PTR [esp-0x16a05cee],al
  421d70:	loop   0x421de0
  421d72:	sbb    ecx,DWORD PTR [edi-0x28]
  421d75:	mov    ebx,0x4153913b
  421d7a:	test   eax,0x1031027b
  421d7f:	ficom  DWORD PTR [eax+0x14df76f3]
  421d85:	in     eax,dx
  421d86:	dec    edi
  421d87:	idiv   DWORD PTR [edx+0x7a]
  421d8a:	mov    DWORD PTR [eax+esi*4-0x6a],esp
  421d8e:	out    dx,al
  421d8f:	vmulss xmm6,xmm1,DWORD PTR [eax+0x7a]
  421d94:	push   0x976c3ee
  421d99:	adc    ah,ah
  421d9b:	add    BYTE PTR [ecx-0x47373920],al
  421da1:	out    dx,al
  421da2:	test   eax,0xb0b623c7
  421da7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421da8:	cmp    BYTE PTR [ebp-0x10],dh
  421dab:	pop    edi
  421dac:	pop    ds
  421dad:	dec    ecx
  421dae:	jnp    0x421db5
  421db0:	adc    eax,0xaa90ea51
  421db5:	aad    0x9f
  421db7:	xchg   ecx,eax
  421db8:	adc    eax,0xde43c033
  421dbd:	pushf  
  421dbe:	push   ecx
  421dbf:	mov    ebx,0x3dd3e81f
  421dc4:	es push esi
  421dc6:	or     bl,ah
  421dc8:	cmp    dh,bl
  421dca:	and    bl,cl
  421dcc:	push   cs
  421dcd:	cli    
  421dce:	push   ebp
  421dcf:	das    
  421dd0:	bswap  ebx
  421dd2:	cmp    al,0x82
  421dd4:	sbb    eax,0x503cfdc2
  421dd9:	xor    esp,DWORD PTR [ecx-0x22b30bea]
  421ddf:	int3   
  421de0:	(bad)
  421de4:	(bad)  
  421de5:	out    0x82,eax
  421de7:	lahf   
  421de8:	add    bl,al
  421dea:	imul   ebx,DWORD PTR [edi-0x6f],0x21
  421dee:	xor    eax,0x335700f
  421df3:	fwait
  421df4:	stos   DWORD PTR es:[edi],eax
  421df5:	lds    eax,FWORD PTR es:[edx]
  421df8:	xchg   edx,eax
  421df9:	sub    ch,BYTE PTR [esi-0x71e8b5f5]
  421dff:	or     DWORD PTR [ecx-0x75],ebx
  421e02:	inc    ebp
  421e03:	pop    ecx
  421e04:	and    al,0x17
  421e06:	mov    dl,ch
  421e08:	sti    
  421e09:	mov    WORD PTR [edi+ebp*4],fs
  421e0c:	fmulp  st(7),st
  421e0e:	fsubr  QWORD PTR [edx-0x623a3623]
  421e14:	pop    ss
  421e15:	jae    0x421e0b
  421e17:	push   ss
  421e18:	pop    esp
  421e19:	mov    WORD PTR [ecx+ecx*8+0xf],gs
  421e1d:	pop    ecx
  421e1e:	push   ecx
  421e1f:	mov    bl,0x67
  421e21:	bound  ebx,QWORD PTR [ecx+0x8]
  421e24:	dec    ecx
  421e25:	add    ebp,DWORD PTR [esp+edx*1+0x3171668f]
  421e2c:	push   es
  421e2d:	lahf   
  421e2e:	add    eax,0x6b4e9554
  421e33:	shl    BYTE PTR [ecx+0x46acbe56],cl
  421e39:	aam    0x78
  421e3b:	pop    esp
  421e3c:	dec    eax
  421e3d:	cld    
  421e3e:	mov    ds:0x4b14e9fd,eax
  421e43:	mov    bh,0xe6
  421e45:	cld    
  421e46:	rol    DWORD PTR [ecx+0xc],cl
  421e49:	fwait
  421e4a:	mov    edx,DWORD PTR [edi+0x2c]
  421e4d:	dec    edx
  421e4f:	div    edx
  421e51:	js     0x421df7
  421e53:	imul   edi,DWORD PTR [esi+0x6b9c7151],0x31992882
  421e5d:	sbb    edi,DWORD PTR [edx]
  421e5f:	bnd call 0x1f822923
  421e65:	(bad)  
  421e66:	cmc    
  421e67:	pusha  
  421e68:	mov    ebx,0x1b398378
  421e6d:	sub    eax,0xbd93cb00
  421e72:	add    eax,DWORD PTR [edi]
  421e74:	fcmovnb st,st(2)
  421e76:	jmp    0xe595419e
  421e7b:	stos   BYTE PTR es:[edi],al
  421e7c:	retf   0xcc38
  421e7f:	fdiv   st,st(7)
  421e81:	mov    bh,0xd8
  421e83:	push   ss
  421e84:	sbb    al,0xa9
  421e86:	lea    ecx,[esi-0x373ee939]
  421e8c:	pop    ss
  421e8d:	pop    edx
  421e8e:	sahf   
  421e8f:	int    0x9a
  421e91:	jns    0x421ed8
  421e93:	pop    edx
  421e94:	or     dl,ch
  421e96:	sub    eax,0xbf809dcd
  421e9b:	(bad)  
  421e9c:	and    DWORD PTR [edx-0x3b],edi
  421e9f:	lea    edx,[ebx]
  421ea1:	ror    BYTE PTR [ecx],cl
  421ea3:	loope  0x421eb9
  421ea5:	shl    DWORD PTR [ebp+ecx*4+0xae27b64],cl
  421eac:	push   edx
  421ead:	sahf   
  421eae:	hlt    
  421eaf:	mov    ss,edi
  421eb1:	sub    dl,BYTE PTR [ecx-0x74b78cbb]
  421eb7:	inc    ecx
  421eb8:	mov    bh,0x56
  421eba:	mov    al,0xf5
  421ebc:	inc    edx
  421ebd:	dec    ebx
  421ebe:	(bad)  
  421ebf:	cld    
  421ec0:	mov    DWORD PTR [esi],esi
  421ec2:	imul   ebx,DWORD PTR [edx+0x22dfcf85],0xffffffb9
  421ec9:	cwde   
  421eca:	fidivr WORD PTR ds:0x60dd1f70
  421ed0:	arpl   WORD PTR [ecx],ax
  421ed2:	mov    edi,0xa896f420
  421ed7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ed8:	mov    ds:0x6dc30f5d,eax
  421edd:	push   es
  421ede:	sbb    BYTE PTR [edx-0x5b30a7cf],0xd
  421ee5:	lds    ebx,FWORD PTR [edi]
  421ee7:	loop   0x421f4f
  421ee9:	stc    
  421eea:	sar    DWORD PTR [edx+0x7],0x5b
  421eee:	(bad)  
  421eef:	adc    DWORD PTR [ebp+0x45],ebx
  421ef2:	xor    ah,ah
  421ef4:	loopne 0x421eab
  421ef6:	call   0xf47383eb
  421efb:	outs   dx,DWORD PTR ds:[esi]
  421efc:	in     eax,dx
  421efd:	ret    
  421efe:	sbb    DWORD PTR [ebp-0x52],esp
  421f01:	ror    DWORD PTR [ecx],cl
  421f03:	rcl    DWORD PTR [esi-0x78],0x65
  421f07:	push   ebx
  421f08:	repnz add DWORD PTR [esi-0x39bb9021],0x25
  421f10:	and    BYTE PTR [edi+edi*4],al
  421f13:	jmp    0x3fa3a1c1
  421f18:	rcr    BYTE PTR [edx-0x8255c2c],cl
  421f1e:	stos   BYTE PTR es:[edi],al
  421f1f:	cld    
  421f20:	ret    0xc199
  421f23:	lahf   
  421f24:	mov    DWORD PTR [esi-0x70e600],eax
  421f2a:	adc    edi,DWORD PTR [ebp+0x712a9de]
  421f30:	add    DWORD PTR [edx+0x63ab09b],eax
  421f36:	add    eax,0x3060798b
  421f3b:	fstp   DWORD PTR [esi+ebx*2+0x6d]
  421f3f:	std    
  421f40:	xor    eax,0x189594c7
  421f45:	dec    esp
  421f46:	sbb    al,0x8b
  421f48:	mov    ecx,0x9c586e4a
  421f4d:	scas   eax,DWORD PTR es:[edi]
  421f4e:	add    BYTE PTR es:[edx-0x6a636d87],dh
  421f55:	dec    ebp
  421f56:	cmp    al,0x27
  421f58:	leave  
  421f59:	out    0xae,eax
  421f5b:	xor    DWORD PTR [edi],ecx
  421f5d:	or     eax,0x90ca2a9b
  421f62:	scas   eax,DWORD PTR es:[edi]
  421f63:	nop
  421f64:	call   0x76d9:0xb179eb6f
  421f6b:	ret    0xc23c
  421f6e:	ins    DWORD PTR es:[edi],dx
  421f6f:	test   al,0x38
  421f71:	sub    cl,BYTE PTR ds:0xefebe4be
  421f77:	ss pop eax
  421f79:	in     eax,dx
  421f7a:	test   BYTE PTR [esi],bl
  421f7c:	xchg   ebp,eax
  421f7d:	or     BYTE PTR [bp+si],0x0
  421f81:	call   0xcd83:0x92dc5a81
  421f88:	dec    esi
  421f89:	ror    DWORD PTR [ecx],cl
  421f8b:	js     0x421fca
  421f8d:	loope  0x421f99
  421f8f:	icebp  
  421f90:	fwait
  421f91:	aaa    
  421f92:	mov    ds:0xae81a9c0,al
  421f97:	icebp  
  421f98:	dec    edx
  421f99:	and    esi,DWORD PTR [esi+0x65edf1d4]
  421f9f:	push   ds
  421fa0:	mov    bl,0x83
  421fa2:	pushf  
  421fa3:	mov    bl,0x1f
  421fa5:	adc    BYTE PTR [ebx-0x7d206d30],0xe5
  421fac:	(bad)  
  421fad:	(bad)  
  421faf:	pop    ss
  421fb0:	adc    DWORD PTR ds:0x63abfa2a,ebx
  421fb6:	fld    DWORD PTR [ecx-0x6da9a437]
  421fbc:	repnz mov ebp,0x80556695
  421fc2:	xchg   ecx,eax
  421fc3:	dec    esp
  421fc4:	dec    ecx
  421fc5:	xchg   ebx,eax
  421fc6:	outs   dx,DWORD PTR ds:[esi]
  421fc7:	mov    ?,WORD PTR ds:0xafacb1f1
  421fcd:	addr16 pusha 
  421fcf:	cs push esi
  421fd1:	gs scas al,BYTE PTR es:[edi]
  421fd3:	jl     0x421f8e
  421fd5:	sub    edi,DWORD PTR [ebp-0x16]
  421fd8:	outs   dx,DWORD PTR ds:[esi]
  421fd9:	add    BYTE PTR [edi+0x7e513ea0],ch
  421fdf:	mov    bh,0xbe
  421fe1:	or     DWORD PTR [esi+eax*8-0x26],0xffffffff
  421fe6:	push   cs
  421fe7:	xchg   DWORD PTR ds:0x9a11905d,ebx
  421fed:	nop
  421fee:	scas   al,BYTE PTR es:[edi]
  421fef:	in     al,dx
  421ff0:	fistp  QWORD PTR [edi-0x42]
  421ff3:	pushf  
  421ff4:	into   
  421ff5:	add    dl,BYTE PTR [eax]
  421ff7:	sahf   
  421ff8:	leave  
  421ff9:	xlat   BYTE PTR ds:[ebx]
  421ffa:	mov    ebp,0xf6127db6
  421fff:	jl     0x421f89
  422001:	stos   BYTE PTR es:[edi],al
  422002:	mov    eax,ds:0xd92ed000
  422007:	imul   edx,DWORD PTR [esp+edx*4+0x6e269b75],0xa2528015
  422012:	ins    BYTE PTR es:[edi],dx
  422013:	mov    eax,es:0x950687ed
  422019:	aas    
  42201a:	test   BYTE PTR [esi-0x51],dh
  42201d:	cs push 0x6b
  422020:	pop    ss
  422021:	xchg   esp,eax
  422022:	in     eax,dx
  422023:	aas    
  422024:	inc    esi
  422025:	jle    0x42209f
  422027:	mov    eax,ds:0x8e09d8d3
  42202c:	sahf   
  42202d:	and    edi,ebx
  42202f:	fcom   DWORD PTR [ebp-0x711ce10b]
  422035:	call   0x5f793df2
  42203a:	xlat   BYTE PTR ds:[ebx]
  42203b:	fistp  DWORD PTR [edx]
  42203d:	fwait
  42203e:	stc    
  42203f:	retf   
  422040:	or     ebx,DWORD PTR [ebp+0x70]
  422043:	aad    0x7d
  422045:	push   eax
  422046:	pop    esp
  422047:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422048:	xchg   ebp,eax
  422049:	dec    edi
  42204a:	mov    esi,0x6821c41c
  42204f:	jmp    0xd4570cc8
  422054:	sub    al,ch
  422056:	or     eax,DWORD PTR [ebp-0x7b]
  422059:	mov    ebx,0x595b3e8f
  42205e:	adc    edx,DWORD PTR ds:0x4ea3e11b
  422064:	sub    ah,BYTE PTR [edx]
  422066:	push   cs
  422067:	mov    ah,0x85
  422069:	(bad)  
  42206a:	scas   eax,DWORD PTR es:[edi]
  42206b:	add    al,0x3c
  42206d:	out    0x13,al
  42206f:	push   ds
  422070:	jmp    0x42201d
  422072:	lahf   
  422073:	jle    0x422083
  422075:	mov    WORD PTR [edi+0x3d44ec2a],ds
  42207b:	addr16 push 0xdafdd411
  422081:	and    eax,0xca5623f4
  422086:	daa    
  422087:	lods   al,BYTE PTR ds:[esi]
  422088:	pop    ecx
  422089:	sbb    edi,DWORD PTR [ebp+0x69]
  42208c:	lahf   
  42208d:	in     eax,0x99
  42208f:	(bad)  
  422090:	fnstcw WORD PTR [edx-0x2c]
  422093:	mov    ah,ah
  422095:	inc    edi
  422096:	mov    al,0x86
  422098:	pop    esp
  422099:	or     BYTE PTR [eax],dh
  42209b:	retf   
  42209c:	and    BYTE PTR [ebx-0x4a],cl
  42209f:	xor    DWORD PTR [ebx+0x24],ebp
  4220a2:	test   eax,0x70adc480
  4220a7:	mov    bl,0x86
  4220a9:	in     eax,dx
  4220aa:	dec    ecx
  4220ab:	mov    ch,0xff
  4220ad:	mov    eax,0x7da939c6
  4220b2:	stos   DWORD PTR es:[edi],eax
  4220b3:	cmp    eax,DWORD PTR [esi-0x1]
  4220b6:	dec    esp
  4220b7:	shl    BYTE PTR [esi+ebp*4-0x6c],1
  4220bb:	test   eax,0xa0164289
  4220c0:	stc    
  4220c1:	out    0xee,al
  4220c3:	shr    DWORD PTR ds:0xa421654f,0x10
  4220ca:	aad    0x5e
  4220cc:	push   0x7f
  4220ce:	(bad)  
  4220cf:	sbb    eax,0xf239bc45
  4220d4:	adc    BYTE PTR [ebx],0x31
  4220d7:	(bad)  
  4220d8:	shl    BYTE PTR [esi-0x286dca1a],cl
  4220de:	push   ss
  4220df:	lods   eax,DWORD PTR ds:[esi]
  4220e0:	mov    esi,0x5e372987
  4220e5:	or     DWORD PTR [ebx-0x3e],eax
  4220e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220e9:	dec    ebx
  4220ea:	fdivr  st(1),st
  4220ec:	pop    esp
  4220ed:	arpl   WORD PTR gs:[ebp-0x5d997d88],ax
  4220f4:	repnz or al,0xb4
  4220f7:	adc    eax,0x1eb14f24
  4220fc:	sbb    eax,0xcde0fb18
  422101:	loopne 0x4220e9
  422103:	pop    edi
  422104:	addr16 dec ebp
  422106:	mov    al,0x18
  422108:	inc    eax
  422109:	sbb    al,0x74
  42210b:	cdq    
  42210c:	mov    edx,0xaad442a9
  422111:	rol    BYTE PTR [ebx+0x77],cl
  422114:	dec    edx
  422115:	inc    esi
  422116:	mov    edi,0x3873614
  42211b:	jecxz  0x422125
  42211d:	xchg   ebp,eax
  42211e:	fmul   QWORD PTR [eax+0x53]
  422121:	lds    edx,FWORD PTR [esi-0x43]
  422124:	xor    edi,DWORD PTR [edi+0x61]
  422127:	xchg   ecx,eax
  422128:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422129:	cmp    al,bh
  42212b:	out    dx,al
  42212c:	cmc    
  42212d:	push   ebp
  42212e:	sbb    dh,BYTE PTR [eax-0xb]
  422131:	inc    ebx
  422132:	jo     0x4220e0
  422134:	mov    edx,0x78d272a
  422139:	xchg   ebx,eax
  42213a:	ud0    edx,DWORD PTR [ebx]
  42213d:	dec    ebp
  42213e:	adc    bh,BYTE PTR [edi+0x13]
  422141:	and    al,BYTE PTR [edx+0x252c1174]
  422147:	loope  0x4220e6
  422149:	loop   0x422148
  42214b:	mov    bh,BYTE PTR [esi]
  42214d:	mov    esi,ebx
  42214f:	adc    dh,BYTE PTR [edx+0x22f39c97]
  422155:	cld    
  422156:	adc    dh,BYTE PTR [ecx]
  422158:	(bad)  
  422159:	frstor [ebx]
  42215b:	hlt    
  42215c:	fcomp  QWORD PTR [eax+0x314f8ac5]
  422162:	das    
  422163:	arpl   ax,bx
  422165:	fst    DWORD PTR [ebx+0xd]
  422168:	aam    0xeb
  42216a:	dec    ebp
  42216b:	retf   0x9977
  42216e:	(bad)  
  422170:	xchg   esp,eax
  422171:	test   al,0x6d
  422173:	xchg   BYTE PTR [ebp+0x2a],dh
  422176:	adc    al,0x25
  422178:	jmp    0x4221f6
  42217a:	mov    ds:0x24fbea5f,eax
  42217f:	xchg   ebx,eax
  422180:	js     0x422140
  422182:	push   ds
  422183:	stc    
  422184:	xchg   BYTE PTR [ecx],dh
  422186:	pop    ss
  422187:	retf   
  422188:	out    0x1b,eax
  42218a:	jnp    0x422188
  42218c:	scas   eax,DWORD PTR es:[edi]
  42218d:	cmc    
  42218e:	xor    ch,0x8e
  422191:	mov    ds:0xea3a8df6,eax
  422196:	mov    DWORD PTR [esp+edx*2],0x402bb223
  42219d:	out    dx,eax
  42219e:	call   0x2fb7:0x230fa399
  4221a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221a6:	and    bl,bl
  4221a8:	sbb    DWORD PTR [ecx-0x8],ebp
  4221ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221ac:	and    ah,BYTE PTR [edx-0x80]
  4221af:	sub    DWORD PTR [edi-0x360bb44a],edi
  4221b5:	(bad)  
  4221b6:	in     eax,dx
  4221b7:	in     al,0x64
  4221b9:	cmp    edi,esi
  4221bb:	out    0xbc,al
  4221bd:	sbb    ebx,DWORD PTR [ecx]
  4221bf:	mov    eax,0x5d06fdaa
  4221c4:	rcr    BYTE PTR [eax],0x70
  4221c7:	add    al,0x83
  4221c9:	(bad)  
  4221ca:	mov    esp,0x5a571b42
  4221cf:	jl     0x42223c
  4221d1:	and    eax,0x9fd57de
  4221d6:	rdmsr  
  4221d8:	jmp    0x422178
  4221da:	mov    edi,0x4362191c
  4221df:	cmp    al,0xd8
  4221e1:	and    bh,bh
  4221e3:	jecxz  0x422218
  4221e5:	dec    ecx
  4221e6:	xor    eax,0xa0f13c18
  4221eb:	pop    ss
  4221ec:	mov    cl,0xda
  4221ee:	pop    edi
  4221ef:	enter  0x114c,0x6a
  4221f3:	push   esi
  4221f4:	adc    BYTE PTR [ebx+0x3924e3a4],ch
  4221fa:	loopne 0x42218f
  4221fc:	in     al,dx
  4221fd:	jne    0x4221ed
  4221ff:	ins    BYTE PTR es:[edi],dx
  422200:	xchg   DWORD PTR [edi-0x412f393d],ebx
  422206:	inc    edx
  422207:	push   0x21
  422209:	push   0x963cc3a1
  42220e:	mov    edx,0xd132bd35
  422213:	les    edi,FWORD PTR [edx]
  422215:	test   bh,cl
  422217:	daa    
  422218:	scas   eax,DWORD PTR es:[edi]
  422219:	ja     0x42223f
  42221b:	inc    eax
  42221c:	jecxz  0x42225b
  42221e:	lods   eax,DWORD PTR ds:[esi]
  42221f:	lahf   
  422220:	lods   al,BYTE PTR ds:[esi]
  422221:	inc    ebx
  422222:	mov    edx,esp
  422224:	mov    esi,0x8be5b71e
  422229:	cmp    al,0x22
  42222b:	lds    ecx,FWORD PTR [ecx+0x3f]
  42222e:	aam    0x8c
  422230:	sbb    BYTE PTR [edi+0x15c93f35],al
  422236:	scas   eax,DWORD PTR es:[edi]
  422237:	leave  
  422238:	ficomp WORD PTR [ebp+0x21b64736]
  42223e:	dec    eax
  42223f:	or     al,0x3
  422241:	xchg   ecx,eax
  422242:	sbb    edx,edi
  422244:	clc    
  422245:	fsub   st,st(4)
  422247:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  422249:	mov    ?,esi
  42224b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42224c:	adc    esp,DWORD PTR [eax]
  42224e:	std    
  42224f:	loope  0x42228b
  422251:	out    dx,al
  422252:	mov    dl,BYTE PTR [esi]
  422254:	lods   al,BYTE PTR ds:[esi]
  422255:	push   ebp
  422256:	cwde   
  422257:	retf   0x93b2
  42225a:	sub    edi,edi
  42225c:	out    0x9,al
  42225e:	clc    
  42225f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422260:	mov    ?,WORD PTR [ebp-0x5]
  422263:	scas   eax,DWORD PTR es:[edi]
  422264:	mov    BYTE PTR [ebx+0x76],dl
  422267:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422268:	xor    eax,0xe23122e8
  42226d:	mov    ebx,0x76323a67
  422272:	pop    esi
  422273:	mov    DWORD PTR [ebp-0x286b4614],eax
  422279:	cmc    
  42227a:	test   al,0x9d
  42227c:	inc    edx
  42227d:	(bad)  
  42227e:	or     BYTE PTR [ecx+edi*4+0x2830ef92],ah
  422285:	sub    BYTE PTR [esp+esi*2],0x69
  422289:	mov    ah,0xb0
  42228b:	retf   
  42228c:	xchg   ebx,ecx
  42228e:	ret    
  42228f:	js     0x4222da
  422291:	push   ebp
  422292:	dec    eax
  422293:	mov    ecx,DWORD PTR fs:[esi-0x6cd4ee7c]
  42229a:	sbb    eax,0xac0658
  42229f:	sti    
  4222a0:	imul   eax,DWORD PTR [ecx-0x1],0xcebacf96
  4222a7:	test   al,0x51
  4222a9:	mov    WORD PTR [ebx],?
  4222ab:	mov    edi,DWORD PTR [esp+eax*8-0x18]
  4222af:	mov    ch,0x6f
  4222b1:	dec    esi
  4222b2:	fstp   DWORD PTR [edi+0x4a]
  4222b5:	mov    eax,0x663922a6
  4222ba:	retf   0x47
  4222bd:	retf   0x7e82
  4222c0:	in     eax,0x45
  4222c2:	xchg   ecx,eax
  4222c3:	sub    eax,0x13bc84c3
  4222c8:	arpl   WORD PTR [ebp-0x1d],di
  4222cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222cc:	fist   WORD PTR [eax-0x5c27c430]
  4222d2:	and    DWORD PTR [esi-0x32801e68],0x18c95403
  4222dc:	jbe    0x4222f7
  4222de:	xchg   BYTE PTR [ebx],bh
  4222e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222e1:	hlt    
  4222e2:	jae    0x422300
  4222e4:	mov    ah,0x6
  4222e6:	ins    DWORD PTR es:[edi],dx
  4222e7:	rcl    esi,cl
  4222e9:	dec    eax
  4222ea:	adc    esp,DWORD PTR [edx]
  4222ec:	jle    0x4222b1
  4222ee:	sbb    bh,bl
  4222f0:	repnz dec esi
  4222f2:	sti    
  4222f3:	or     ebp,DWORD PTR [esi]
  4222f5:	and    cl,ah
  4222f7:	push   edx
  4222f8:	stos   BYTE PTR es:[edi],al
  4222f9:	xlat   BYTE PTR ds:[ebx]
  4222fa:	mov    ah,BYTE PTR [eax-0x4c88a834]
  422300:	leave  
  422301:	addr16 mov esi,0xcc76973d
  422307:	mov    ah,bh
  422309:	adc    BYTE PTR [eax-0x2e],al
  42230c:	scas   eax,DWORD PTR es:[edi]
  42230d:	inc    esi
  42230e:	(bad)  
  42230f:	(bad)  
  422311:	adc    ch,dl
  422313:	pop    ebp
  422314:	mov    ds:0x9660af5a,al
  422319:	imul   esp,DWORD PTR [edi+ecx*1],0x7e
  42231d:	bswap  esp
  42231f:	add    cl,0xed
  422322:	xchg   esi,eax
  422323:	push   ecx
  422324:	sbb    al,0xf4
  422326:	inc    ebp
  422327:	and    ebp,DWORD PTR [ebx+0x73eaeba5]
  42232d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42232e:	(bad)  
  42232f:	fnstenv [ebx]
  422331:	(bad)  
  422332:	fist   DWORD PTR [ebx]
  422334:	sbb    al,0xf7
  422336:	cs cs jbe 0x42231a
  42233a:	jne    0x422355
  42233c:	inc    edi
  42233d:	jmp    0x76ab:0x900927e5
  422344:	xor    al,0x3b
  422346:	xchg   ebp,eax
  422347:	imul   esp,DWORD PTR [edi],0x36eada4f
  42234d:	jg     0x422302
  42234f:	rol    BYTE PTR [edx+ebp*1],cl
  422352:	in     al,0xbd
  422354:	cmp    al,0x6
  422356:	adc    eax,0xcf2ee9c9
  42235b:	in     al,0xd0
  42235d:	stos   DWORD PTR es:[edi],eax
  42235e:	stos   BYTE PTR es:[edi],al
  42235f:	adc    DWORD PTR [edi+0x5089b7da],edi
  422365:	pop    ebp
  422366:	pop    esi
  422367:	lock dec eax
  422369:	xor    eax,0xa926c068
  42236e:	and    esi,ebp
  422370:	pop    ebp
  422371:	cmc    
  422372:	inc    ecx
  422373:	jmp    0xd98157e5
  422378:	mov    ebx,0x4105e843
  42237d:	lahf   
  42237e:	pop    edi
  42237f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422380:	es pop eax
  422382:	js     0x42236b
  422384:	pop    ebp
  422385:	lods   al,BYTE PTR ds:[esi]
  422386:	add    dh,ah
  422388:	sub    eax,0xa33b0343
  42238d:	xor    edx,ebx
  42238f:	xchg   esp,eax
  422390:	out    dx,eax
  422391:	rcl    dh,0x28
  422394:	gs call 0x2e97:0x798a
  42239b:	jb     0x42235f
  42239d:	out    0x3e,eax
  42239f:	fsubr  st,st(2)
  4223a1:	jl     0x422396
  4223a3:	pop    ss
  4223a4:	pop    es
  4223a5:	ins    DWORD PTR es:[edi],dx
  4223a6:	mov    ecx,0x2ae7fdfa
  4223ab:	stc    
  4223ac:	inc    eax
  4223ae:	icebp  
  4223af:	aas    
  4223b0:	inc    ebp
  4223b1:	popf   
  4223b2:	jmp    0x2405:0x3e609c7a
  4223b9:	adc    cl,cl
  4223bb:	ds pop esi
  4223bd:	or     edx,DWORD PTR [eax+edx*4-0x4e]
  4223c1:	sbb    eax,0xa71ca710
  4223c6:	in     al,0x9d
  4223c8:	mov    eax,0x7e585c2f
  4223cd:	cmp    al,0x7b
  4223cf:	inc    edx
  4223d0:	icebp  
  4223d1:	js     0x4223fe
  4223d3:	jbe    0x4223c5
  4223d5:	call   0x63278e43
  4223da:	mov    dl,0x4e
  4223dc:	cmp    eax,DWORD PTR [edx+0x7660cf10]
  4223e2:	and    al,BYTE PTR [edi-0x62]
  4223e5:	in     al,0xa8
  4223e7:	or     dl,ch
  4223e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223ea:	retf   0xc158
  4223ed:	mov    ebp,0xb25b048
  4223f2:	rep stos DWORD PTR es:[edi],eax
  4223f4:	in     eax,dx
  4223f5:	add    DWORD PTR [ecx],edx
  4223f7:	and    eax,0x38555e95
  4223fc:	cli    
  4223fd:	push   eax
  4223fe:	jmp    DWORD PTR [ecx-0x72c3925c]
  422404:	(bad)
  422408:	addr16 pop edi
  42240a:	ss pushf 
  42240c:	jg     0x422392
  42240e:	fcmovnu st,st(3)
  422410:	outs   dx,BYTE PTR ds:[esi]
  422411:	leave  
  422412:	xor    WORD PTR [ecx-0x3c],di
  422416:	jl     0x4223dd
  422418:	mov    ch,0x9b
  42241a:	scas   eax,DWORD PTR es:[edi]
  42241b:	into   
  42241c:	jge    0x422447
  42241e:	add    ah,BYTE PTR [ebp+0x8]
  422421:	cli    
  422422:	imul   esp,DWORD PTR [edx],0x2b
  422425:	cmp    ebx,DWORD PTR [ebp-0x3e]
  422428:	aaa    
  422429:	retf   
  42242a:	ror    DWORD PTR [ebx+0x5e8cc8ec],1
  422430:	push   ds
  422431:	jp     0x42245a
  422433:	mov    bh,0x5a
  422435:	popf   
  422436:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422437:	fistp  WORD PTR [ebp+0x1c14bdb1]
  42243d:	in     eax,0x56
  42243f:	inc    esp
  422440:	mov    ebp,0x665eb27e
  422445:	imul   eax,DWORD PTR [edx-0x1c],0x3afac363
  42244c:	inc    edx
  42244d:	inc    esi
  42244e:	inc    eax
  42244f:	shl    BYTE PTR [ebx-0x4],cl
  422452:	mov    edi,0x78b7868f
  422457:	mov    cl,0xa8
  422459:	out    0xfa,eax
  42245b:	sub    eax,0x38512d80
  422460:	mov    edx,0xe7109963
  422465:	(bad)  
  422466:	xchg   ebp,eax
  422467:	mov    ebx,0xaa1f60b1
  42246c:	xchg   ebp,eax
  42246d:	xchg   BYTE PTR [eax+0xe],bl
  422470:	icebp  
  422471:	sar    BYTE PTR [esp+ecx*8-0x33],0xf0
  422476:	and    BYTE PTR [eax-0x75085b14],al
  42247c:	mov    DWORD PTR [edx],0x82816b13
  422482:	cmp    BYTE PTR [edi-0x44a7e583],ah
  422488:	fs cmc 
  42248a:	test   eax,0x3ec7d655
  42248f:	fs mov bl,BYTE PTR ds:[ebx-0x54]
  422494:	push   cs
  422495:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422496:	cld    
  422497:	setp   BYTE PTR [ecx+0x7a00f3b4]
  42249e:	and    al,BYTE PTR [ebx]
  4224a0:	(bad)  [eax+0x2fce5e]
  4224a6:	sbb    BYTE PTR [edx+edi*2+0x708fb64d],ch
  4224ad:	out    dx,eax
  4224ae:	sub    BYTE PTR [esi-0x217f8c65],dl
  4224b4:	bound  edx,QWORD PTR [edi-0x27]
  4224b7:	mov    ch,BYTE PTR [ebp-0x60]
  4224ba:	ret    
  4224bb:	leave  
  4224bc:	xchg   edx,eax
  4224bd:	test   eax,0x652bae4d
  4224c2:	xchg   ecx,eax
  4224c3:	mov    dh,0x8a
  4224c5:	xchg   ecx,eax
  4224c6:	scas   al,BYTE PTR es:[edi]
  4224c7:	add    esi,DWORD PTR [ebp+0x58]
  4224ca:	push   ds
  4224cb:	stc    
  4224cc:	mov    esp,0x2f15c96c
  4224d1:	jns    0x4224db
  4224d3:	out    0xf3,al
  4224d5:	mul    BYTE PTR [ebx-0x99206eb]
  4224db:	pushf  
  4224dc:	mov    cl,0x76
  4224df:	push   esp
  4224e0:	and    eax,0x79602f3e
  4224e5:	add    eax,0xac9b1fc2
  4224ea:	and    ebp,DWORD PTR [ebp+0x58b1ed77]
  4224f0:	xchg   esp,eax
  4224f1:	cs stos DWORD PTR es:[edi],eax
  4224f3:	cmp    DWORD PTR [esi-0x734ad5d8],ecx
  4224f9:	fwait
  4224fa:	adc    esi,DWORD PTR [esi+0x151d2c64]
  422500:	jecxz  0x42248b
  422502:	ficom  DWORD PTR [ecx+0x2a717738]
  422508:	test   BYTE PTR [edx+0xeffeccd],al
  42250e:	enter  0x8501,0xf2
  422512:	nop
  422513:	clc    
  422514:	cmp    DWORD PTR [ebx+0x4385d2d9],ebx
  42251a:	push   0x6544ec34
  42251f:	in     eax,0xa0
  422521:	mov    edx,0x423d226e
  422526:	xchg   ebx,eax
  422527:	ret    
  422528:	enter  0xb301,0x3
  42252c:	imul   eax,DWORD PTR [edx-0x62],0xd7cc77f2
  422533:	fs out dx,al
  422535:	and    BYTE PTR [edi+0xdf48b0d],ah
  42253b:	addr16 sbb edi,edi
  42253e:	mov    ebx,0xcbc402f1
  422543:	gs ja  0x422587
  422546:	or     dh,BYTE PTR [esi+ebp*1+0x1f]
  42254a:	outs   dx,BYTE PTR ds:[esi]
  42254b:	adc    BYTE PTR [edx-0x7332c0eb],bh
  422551:	mov    cl,0x3f
  422553:	retf   
  422554:	jb     0x4225c7
  422556:	sti    
  422557:	mov    al,0x21
  422559:	cwde   
  42255a:	push   0x51
  42255c:	mov    al,ds:0x7aa2cbbc
  422561:	call   0x353ab910
  422566:	lahf   
  422567:	loopne 0x42254b
  422569:	cli    
  42256a:	nop
  42256b:	jnp    0x422559
  42256d:	sti    
  42256e:	ret    0xdcf
  422571:	xchg   edi,eax
  422572:	repnz cmp edx,DWORD PTR [eax]
  422575:	iret   
  422576:	mov    edi,0x6a846e20
  42257b:	ss out 0xdc,eax
  42257e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42257f:	mov    esp,0x5ca564cb
  422584:	rcr    BYTE PTR [edx-0x74],cl
  422587:	jno    0x4225d1
  422589:	dec    edx
  42258a:	repz aad 0xa3
  42258d:	or     al,0x9a
  42258f:	dec    edx
  422590:	add    eax,0x844e2470
  422595:	bound  ebx,QWORD PTR [edx-0x65]
  422598:	rcl    ebx,0x7c
  42259b:	xchg   edx,eax
  42259c:	lods   eax,DWORD PTR ds:[esi]
  42259d:	(bad)  
  42259e:	sar    BYTE PTR [eax-0x6f],cl
  4225a1:	inc    esp
  4225a2:	mov    ebp,0xcb5aa058
  4225a7:	es and eax,0x4f5ebad3
  4225ad:	or     eax,0x5f001475
  4225b2:	gs fs push eax
  4225b5:	js     0x4225c1
  4225b7:	stos   DWORD PTR es:[edi],eax
  4225b8:	pop    eax
  4225b9:	jae    0x4225c1
  4225bb:	jo     0x42256e
  4225bd:	xchg   ecx,eax
  4225be:	rol    BYTE PTR [eax],cl
  4225c0:	loop   0x4225b1
  4225c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225c3:	dec    esi
  4225c4:	add    DWORD PTR [edi+0x22ae0ea3],ebp
  4225ca:	fidiv  DWORD PTR [esi-0x30]
  4225cd:	out    dx,al
  4225ce:	push   edx
  4225cf:	push   ds
  4225d0:	inc    esi
  4225d1:	cwde   
  4225d2:	xchg   edi,eax
  4225d3:	and    eax,0x182cf81d
  4225d8:	xchg   ebx,eax
  4225d9:	stos   DWORD PTR es:[edi],eax
  4225da:	retf   0xb823
  4225dd:	ins    DWORD PTR es:[edi],dx
  4225de:	imul   ebp,DWORD PTR [edi],0xffffffd3
  4225e1:	inc    edi
  4225e2:	popf   
  4225e3:	pop    edx
  4225e4:	es ins DWORD PTR es:[edi],dx
  4225e6:	mov    dl,bh
  4225e8:	or     DWORD PTR [ebx+eiz*4],ebx
  4225eb:	push   ebp
  4225ec:	in     al,dx
  4225ed:	pop    edx
  4225ee:	and    DWORD PTR [ebx+0x4b],esi
  4225f1:	push   esi
  4225f2:	mov    ah,0xe4
  4225f4:	jg     0x4225cc
  4225f6:	jne    0x422660
  4225f8:	push   ebx
  4225f9:	cld    
  4225fa:	or     al,0x17
  4225fc:	mov    esp,0xc866e9a0
  422601:	iret   
  422602:	sbb    DWORD PTR [ecx-0x2ff6ceb9],esi
  422608:	and    cl,bl
  42260a:	mov    WORD PTR [esi],?
  42260c:	cmp    al,BYTE PTR ds:0x130d4513
  422612:	mov    ecx,0x7fcee6ce
  422617:	ret    0xe7d7
  42261a:	add    DWORD PTR [ebp+0xf],esp
  42261d:	ds std 
  42261f:	popf   
  422620:	jg     0x4225da
  422622:	mov    eax,0x7d58b14f
  422627:	test   edi,ecx
  422629:	mov    eax,0x680706ea
  42262e:	jb     0x4225ed
  422630:	clc    
  422631:	mov    dh,0x4c
  422633:	cld    
  422634:	test   DWORD PTR [edx-0x15d0cd8f],ebx
  42263a:	xchg   ebx,eax
  42263b:	dec    ebp
  42263c:	call   0xca1ef99f
  422641:	push   ds
  422642:	mov    ecx,0x99a788b7
  422647:	push   ebp
  422648:	jge    0x4226c4
  42264a:	dec    ebp
  42264b:	sbb    ecx,edi
  42264d:	and    bh,BYTE PTR [ebp+0x67f23c89]
  422653:	pushf  
  422654:	pop    edx
  422655:	call   0x739:0x90dc64cd
  42265c:	cmp    al,0x3a
  42265e:	inc    ebp
  42265f:	lahf   
  422660:	imul   DWORD PTR [edi+0x424120ec]
  422666:	adc    BYTE PTR [edi-0x35],ah
  422669:	fist   WORD PTR [ecx]
  42266b:	sub    ecx,DWORD PTR [esi-0x44a3d915]
  422671:	sub    BYTE PTR ds:0x6a956f1b,0xdb
  422678:	lods   al,BYTE PTR ds:[esi]
  422679:	sbb    esi,DWORD PTR [edi-0x3b]
  42267c:	xchg   edx,eax
  42267d:	test   BYTE PTR [edx-0x2b],0x86
  422681:	or     ecx,DWORD PTR [edx]
  422683:	xlat   BYTE PTR ds:[ebx]
  422684:	in     eax,0xf2
  422686:	jl     0x4226d7
  422688:	adc    cl,BYTE PTR [edx]
  42268a:	sub    ch,BYTE PTR [edi+0x3b13c46b]
  422690:	jnp    0x422651
  422692:	push   ecx
  422693:	cmp    BYTE PTR [esp+eiz*8],cl
  422696:	fmul   DWORD PTR [eax-0x768de94d]
  42269c:	push   ecx
  42269d:	cdq    
  42269e:	inc    esi
  42269f:	je     0x42271f
  4226a1:	imul   ebp,DWORD PTR [eax+0x4c],0x4e
  4226a5:	sahf   
  4226a6:	or     al,0x97
  4226a8:	outs   dx,BYTE PTR ds:[esi]
  4226a9:	add    DWORD PTR [edx+0x3b05cd7c],ebx
  4226af:	push   edi
  4226b0:	inc    edx
  4226b1:	imul   ebp,DWORD PTR [esi+0x4da3e415],0xffffffbb
  4226b8:	aad    0x60
  4226ba:	jb     0x4226c4
  4226bc:	add    al,0x3c
  4226be:	int    0x63
  4226c0:	dec    edx
  4226c1:	xchg   esp,eax
  4226c2:	(bad)  
  4226c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226c4:	pop    ebp
  4226c5:	pop    ds
  4226c6:	popa   
  4226c7:	pop    ss
  4226c8:	ds xchg esp,eax
  4226ca:	jne    0x4226a3
  4226cc:	clc    
  4226cd:	fdivrp st(7),st
  4226cf:	aam    0xd9
  4226d1:	mov    ebx,0x23a721b7
  4226d6:	dec    ecx
  4226d7:	xchg   ecx,eax
  4226d8:	or     al,0x99
  4226da:	arpl   WORD PTR [ebp-0x4016e962],dx
  4226e0:	repnz (bad) 
  4226e2:	fnstenv [edx]
  4226e4:	sub    DWORD PTR [edi+edx*8-0x38],ebx
  4226e8:	cwde   
  4226e9:	sub    esp,ebx
  4226eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226ec:	jne    0x422706
  4226ee:	aaa    
  4226ef:	push   0x6291f200
  4226f4:	push   0x32
  4226f6:	mov    al,ds:0xd6ffbf8
  4226fb:	mov    DWORD PTR [esi+0x1f],edx
  4226fe:	jne    0x4226b5
  422700:	push   edi
  422701:	ins    DWORD PTR es:[edi],dx
  422702:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422703:	fiadd  WORD PTR [esi-0x22]
  422706:	sbb    eax,0xc5874177
  42270b:	adc    edi,DWORD PTR [ecx]
  42270d:	pop    ss
  42270e:	push   ds
  42270f:	and    DWORD PTR [ebx-0x122ed3c6],ebp
  422715:	and    eax,0x4429d350
  42271a:	fs or  al,0x1f
  42271d:	inc    edx
  42271e:	dec    eax
  42271f:	es (bad) 
  422721:	adc    esp,DWORD PTR [esi-0xf08b724]
  422727:	aad    0xe3
  422729:	bound  ebx,QWORD PTR [ecx+0x1d25c3a7]
  42272f:	xor    bl,al
  422731:	dec    esp
  422732:	mov    esi,0xbb6fc264
  422737:	data16 fwait
  422739:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42273a:	jl     0x422711
  42273c:	fstp   TBYTE PTR [edx]
  42273e:	enter  0x2abf,0x60
  422742:	(bad)  
  422743:	fld    DWORD PTR [ebx+0x54]
  422746:	jl     0x422787
  422748:	xor    edx,DWORD PTR [ebx]
  42274a:	mov    cl,BYTE PTR [edx-0x58]
  42274d:	fldenv [edi]
  42274f:	(bad)  
  422750:	mov    ch,0x8f
  422752:	repnz pop ss
  422754:	retf   0x3d8d
  422757:	xchg   esp,eax
  422758:	xchg   ebp,eax
  422759:	(bad)  
  42275a:	inc    esp
  42275b:	sbb    DWORD PTR [edi],eax
  42275d:	aas    
  42275e:	aam    0x1c
  422760:	clc    
  422761:	aas    
  422762:	dec    esp
  422763:	rol    BYTE PTR [edi+0x27e47dac],0xce
  42276a:	adc    BYTE PTR ds:[edi+0x7f],cl
  42276e:	call   0xbc448103
  422773:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422774:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422775:	cdq    
  422776:	mov    cs,WORD PTR [edi-0x25030791]
  42277c:	add    al,BYTE PTR [ebp+0x48]
  42277f:	lds    esi,FWORD PTR [ebx]
  422781:	adc    bl,BYTE PTR [ecx-0xa8b1a3d]
  422787:	xor    BYTE PTR [edx-0x11],cl
  42278a:	pop    ecx
  42278b:	dec    eax
  42278c:	scas   al,BYTE PTR es:[edi]
  42278d:	cmc    
  42278e:	out    dx,al
  42278f:	and    ebp,eax
  422791:	call   edx
  422793:	mov    eax,0x6085137a
  422798:	mov    ds:0x36fe01c3,eax
  42279d:	rol    DWORD PTR [esi],1
  42279f:	xchg   BYTE PTR [edx],dh
  4227a1:	mov    esp,0xdd39b7f6
  4227a6:	adc    al,0x4f
  4227a8:	jnp    0x4227b7
  4227aa:	leave  
  4227ab:	iret   
  4227ac:	retf   
  4227ad:	outs   dx,BYTE PTR ds:[esi]
  4227ae:	stos   BYTE PTR es:[edi],al
  4227af:	xchg   ebx,eax
  4227b0:	(bad)  
  4227b1:	mov    bl,0x8a
  4227b3:	std    
  4227b4:	jbe    0x4227d1
  4227b6:	push   es
  4227b7:	cli    
  4227b8:	retf   0x5cc7
  4227bb:	and    eax,0x7f7f3af1
  4227c0:	cmp    dl,BYTE PTR [ebx]
  4227c2:	xor    al,0x9d
  4227c4:	stos   BYTE PTR es:[edi],al
  4227c5:	test   eax,0xb6c0f7a2
  4227ca:	mov    DWORD PTR [ecx-0x3a058857],edi
  4227d0:	and    edx,DWORD PTR [ecx-0x2d42288a]
  4227d6:	std    
  4227d7:	sub    DWORD PTR [eax],0xffffff83
  4227da:	les    esp,FWORD PTR [ebx*8-0x56dabbd7]
  4227e1:	hlt    
  4227e2:	sub    BYTE PTR [ebx],0x1e
  4227e5:	mov    bh,BYTE PTR [edx]
  4227e7:	enter  0xec53,0xd1
  4227eb:	push   ds
  4227ec:	inc    esp
  4227ed:	imul   ecx,DWORD PTR [edi-0x39],0xffffffc8
  4227f1:	repz jle 0x42281d
  4227f4:	fs ja  0x422794
  4227f7:	push   ebp
  4227f8:	loope  0x4227cb
  4227fa:	sub    al,0x98
  4227fc:	pop    esi
  4227fd:	pop    ebp
  4227fe:	pop    edx
  4227ff:	cmp    DWORD PTR [ebx],eax
  422801:	xor    dh,BYTE PTR [esi+0x69]
  422804:	adc    DWORD PTR [eax+0x4fa5de3a],ebx
  42280a:	sub    DWORD PTR [edx],ebx
  42280c:	repz lds ebx,FWORD PTR [esi]
  42280f:	out    0x43,al
  422811:	cdq    
  422812:	adc    al,0xea
  422814:	aaa    
  422815:	ja     0x42284f
  422817:	retf   
  422818:	dec    ebx
  422819:	add    DWORD PTR [esi],edx
  42281b:	xor    eax,0x25906ced
  422820:	(bad)  
  422821:	fcomip st,st(2)
  422823:	in     al,dx
  422824:	jge    0x422866
  422826:	ds (bad) 
  422828:	ds jecxz 0x422871
  42282b:	xchg   edi,eax
  42282c:	out    0x2e,al
  42282e:	sbb    DWORD PTR [ebp-0x78],esp
  422831:	pop    edx
  422832:	call   0x65d7e57b
  422837:	jns    0x422828
  422839:	iret   
  42283a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42283b:	aaa    
  42283c:	xchg   edi,eax
  42283d:	je     0x422837
  42283f:	stos   BYTE PTR es:[edi],al
  422840:	and    al,0x32
  422842:	xchg   BYTE PTR gs:[ebx+0x4c],bl
  422846:	sub    al,0x11
  422848:	in     eax,0x36
  42284a:	daa    
  42284b:	push   0x4a
  42284d:	js     0x4228a0
  42284f:	xchg   esi,eax
  422850:	xor    eax,0x9d8b9eed
  422855:	add    eax,DWORD PTR [edi]
  422857:	int    0x2c
  422859:	pushf  
  42285a:	sub    DWORD PTR [ebx],edi
  42285c:	jns    0x422800
  42285e:	jo     0x4228ce
  422860:	mov    bl,0x79
  422862:	xor    al,0xb0
  422864:	pop    esi
  422865:	stc    
  422866:	pushw  ss
  422868:	adc    esi,esp
  42286a:	fcomp  QWORD PTR [ecx+eiz*2]
  42286d:	xlat   BYTE PTR ds:[ebx]
  42286e:	dec    eax
  42286f:	out    dx,al
  422870:	mov    ebp,0x4270e1de
  422875:	and    bl,BYTE PTR [ecx-0x14]
  422878:	push   ebx
  422879:	dec    ecx
  42287a:	arpl   WORD PTR [esi],bx
  42287c:	or     al,0xf
  42287e:	faddp  st(2),st
  422880:	ja     0x42286c
  422882:	jmp    0x42283b
  422884:	xlat   BYTE PTR ds:[ebx]
  422885:	dec    esi
  422886:	call   0xe5d5c87a
  42288b:	xor    DWORD PTR [esi],edi
  42288d:	out    dx,al
  42288e:	jle    0x422874
  422890:	dec    ecx
  422891:	fsub   QWORD PTR [ebx]
  422893:	sub    ebx,DWORD PTR ss:[edx]
  422896:	inc    edi
  422897:	xchg   DWORD PTR [ebx+0x41],edx
  42289a:	je     0x422894
  42289c:	int    0x48
  42289e:	cmp    ebx,DWORD PTR [esi+esi*8+0x6b]
  4228a2:	aam    0x8b
  4228a4:	pop    eax
  4228a5:	or     DWORD PTR [edx-0x38],0x262a1876
  4228ac:	push   ebp
  4228ad:	sbb    edx,eax
  4228af:	fadd   QWORD PTR [edi]
  4228b1:	dec    ecx
  4228b2:	in     eax,dx
  4228b3:	pop    ecx
  4228b4:	xchg   edi,eax
  4228b5:	ins    BYTE PTR es:[edi],dx
  4228b6:	pushf  
  4228b7:	addr16 mov ebp,0xd43ff7
  4228bd:	push   esp
  4228be:	mov    edx,0xe62264bc
  4228c3:	retf   
  4228c4:	inc    esi
  4228c5:	out    dx,al
  4228c6:	ja     0x4228c3
  4228c8:	mov    ebx,0x656da4f4
  4228cd:	sti    
  4228ce:	bnd jne 0x42285f
  4228d1:	outs   dx,BYTE PTR ds:[esi]
  4228d3:	stc    
  4228d4:	jle    0x422880
  4228d6:	mov    bh,0x2c
  4228d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228d9:	sbb    ebp,edi
  4228db:	loope  0x422913
  4228dd:	out    dx,eax
  4228de:	imul   edi,ecx,0x777e0085
  4228e4:	int    0xcf
  4228e6:	pop    ss
  4228e7:	ins    DWORD PTR es:[edi],dx
  4228e8:	icebp  
  4228e9:	out    dx,al
  4228ea:	mov    ecx,0xa4c61c47
  4228ef:	and    eax,0x1ac25664
  4228f4:	dec    esi
  4228f5:	ror    bl,1
  4228f7:	lods   eax,DWORD PTR ds:[esi]
  4228f8:	sbb    ah,BYTE PTR [ebx+eiz*8]
  4228fb:	(bad)  
  4228fc:	cmp    al,0xb4
  4228fe:	into   
  4228ff:	ret    0x1981
  422902:	mov    ah,0x5e
  422904:	retf   0x855c
  422907:	stos   BYTE PTR es:[edi],al
  422908:	dec    ebx
  422909:	ins    DWORD PTR es:[edi],dx
  42290a:	scas   eax,DWORD PTR es:[edi]
  42290b:	cwde   
  42290c:	add    DWORD PTR ds:0xaa5b63a6,eax
  422912:	xlat   BYTE PTR ds:[ebx]
  422913:	adc    al,0x71
  422915:	xor    eax,eax
  422917:	mov    esp,ebp
  422919:	pop    ebp
  42291a:	ret    0x10
  42291d:	nop
  42291e:	nop
  42291f:	nop
  422920:	cmp    DWORD PTR ds:0x45cabc,0x1
  422927:	jne    0x42292e
  422929:	call   0x422e6c
  42292e:	push   DWORD PTR [esp+0x4]
  422932:	call   0x422cf5
  422937:	push   0xff
  42293c:	call   DWORD PTR ds:0x45c1c0
  422942:	pop    ecx
  422943:	pop    ecx
  422944:	ret    
  422945:	cmp    DWORD PTR ds:0x45cabc,0x1
  42294c:	jne    0x422953
  42294e:	call   0x422e6c
  422953:	push   DWORD PTR [esp+0x4]
  422957:	call   0x422cf5
  42295c:	push   0xff
  422961:	call   0x422b3b
  422966:	pop    ecx
  422967:	pop    ecx
  422968:	ret    
  422969:	push   0x60
  42296b:	push   0x428110
  422970:	call   0x423858
  422975:	mov    edi,0x94
  42297a:	mov    eax,edi
  42297c:	call   0x4238b0
  422981:	mov    DWORD PTR [ebp-0x18],esp
  422984:	mov    esi,esp
  422986:	mov    DWORD PTR [esi],edi
  422988:	push   esi
  422989:	call   DWORD PTR ds:0x428024
  42298f:	mov    ecx,DWORD PTR [esi+0x10]
  422992:	mov    DWORD PTR ds:0x45cac4,ecx
  422998:	mov    eax,DWORD PTR [esi+0x4]
  42299b:	mov    ds:0x45cad0,eax
  4229a0:	mov    edx,DWORD PTR [esi+0x8]
  4229a3:	mov    DWORD PTR ds:0x45cad4,edx
  4229a9:	mov    esi,DWORD PTR [esi+0xc]
  4229ac:	and    esi,0x7fff
  4229b2:	mov    DWORD PTR ds:0x45cac8,esi
  4229b8:	cmp    ecx,0x2
  4229bb:	je     0x4229c9
  4229bd:	or     esi,0x8000
  4229c3:	mov    DWORD PTR ds:0x45cac8,esi
  4229c9:	shl    eax,0x8
  4229cc:	add    eax,edx
  4229ce:	mov    ds:0x45cacc,eax
  4229d3:	xor    esi,esi
  4229d5:	push   esi
  4229d6:	mov    edi,DWORD PTR ds:0x428014
  4229dc:	call   edi
  4229de:	cmp    WORD PTR [eax],0x5a4d
  4229e3:	jne    0x422a04
  4229e5:	mov    ecx,DWORD PTR [eax+0x3c]
  4229e8:	add    ecx,eax
  4229ea:	cmp    DWORD PTR [ecx],0x4550
  4229f0:	jne    0x422a04
  4229f2:	movzx  eax,WORD PTR [ecx+0x18]
  4229f6:	cmp    eax,0x10b
  4229fb:	je     0x422a1c
  4229fd:	cmp    eax,0x20b
  422a02:	je     0x422a09
  422a04:	mov    DWORD PTR [ebp-0x1c],esi
  422a07:	jmp    0x422a30
  422a09:	cmp    DWORD PTR [ecx+0x84],0xe
  422a10:	jbe    0x422a04
  422a12:	xor    eax,eax
  422a14:	cmp    DWORD PTR [ecx+0xf8],esi
  422a1a:	jmp    0x422a2a
  422a1c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a20:	jbe    0x422a04
  422a22:	xor    eax,eax
  422a24:	cmp    DWORD PTR [ecx+0xe8],esi
  422a2a:	setne  al
  422a2d:	mov    DWORD PTR [ebp-0x1c],eax
  422a30:	push   0x1
  422a32:	call   0x423807
  422a37:	pop    ecx
  422a38:	test   eax,eax
  422a3a:	jne    0x422a44
  422a3c:	push   0x1c
  422a3e:	call   0x422945
  422a43:	pop    ecx
  422a44:	call   0x42377e
  422a49:	test   eax,eax
  422a4b:	jne    0x422a55
  422a4d:	push   0x10
  422a4f:	call   0x422945
  422a54:	pop    ecx
  422a55:	call   0x423667
  422a5a:	mov    DWORD PTR [ebp-0x4],esi
  422a5d:	call   0x423469
  422a62:	test   eax,eax
  422a64:	jge    0x422a6e
  422a66:	push   0x1b
  422a68:	call   0x422920
  422a6d:	pop    ecx
  422a6e:	call   DWORD PTR ds:0x428020
  422a74:	mov    ds:0x45d274,eax
  422a79:	call   0x423347
  422a7e:	mov    ds:0x45cab4,eax
  422a83:	call   0x4232a5
  422a88:	test   eax,eax
  422a8a:	jge    0x422a94
  422a8c:	push   0x8
  422a8e:	call   0x422920
  422a93:	pop    ecx
  422a94:	call   0x423072
  422a99:	test   eax,eax
  422a9b:	jge    0x422aa5
  422a9d:	push   0x9
  422a9f:	call   0x422920
  422aa4:	pop    ecx
  422aa5:	call   0x422b7d
  422aaa:	mov    DWORD PTR [ebp-0x20],eax
  422aad:	cmp    eax,esi
  422aaf:	je     0x422ab8
  422ab1:	push   eax
  422ab2:	call   0x422920
  422ab7:	pop    ecx
  422ab8:	mov    DWORD PTR [ebp-0x38],esi
  422abb:	lea    eax,[ebp-0x64]
  422abe:	push   eax
  422abf:	call   DWORD PTR ds:0x42801c
  422ac5:	call   0x423009
  422aca:	mov    DWORD PTR [ebp-0x68],eax
  422acd:	test   BYTE PTR [ebp-0x38],0x1
  422ad1:	je     0x422ad9
  422ad3:	movzx  eax,WORD PTR [ebp-0x34]
  422ad7:	jmp    0x422adc
  422ad9:	push   0xa
  422adb:	pop    eax
  422adc:	push   eax
  422add:	push   DWORD PTR [ebp-0x68]
  422ae0:	push   esi
  422ae1:	push   esi
  422ae2:	call   edi
  422ae4:	push   eax
  422ae5:	call   0x421790
  422aea:	mov    edi,eax
  422aec:	mov    DWORD PTR [ebp-0x6c],edi
  422aef:	cmp    DWORD PTR [ebp-0x1c],esi
  422af2:	jne    0x422afa
  422af4:	push   edi
  422af5:	call   0x422cb5
  422afa:	call   0x422cd7
  422aff:	jmp    0x422b2c
  422b01:	mov    eax,DWORD PTR [ebp-0x14]
  422b04:	mov    ecx,DWORD PTR [eax]
  422b06:	mov    ecx,DWORD PTR [ecx]
  422b08:	mov    DWORD PTR [ebp-0x70],ecx
  422b0b:	push   eax
  422b0c:	push   ecx
  422b0d:	call   0x422ea5
  422b12:	pop    ecx
  422b13:	pop    ecx
  422b14:	ret    
  422b15:	mov    esp,DWORD PTR [ebp-0x18]
  422b18:	mov    edi,DWORD PTR [ebp-0x70]
  422b1b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b1f:	jne    0x422b27
  422b21:	push   edi
  422b22:	call   0x422cc6
  422b27:	call   0x422ce6
  422b2c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b30:	mov    eax,edi
  422b32:	lea    esp,[ebp-0x7c]
  422b35:	call   0x423893
  422b3a:	ret    
  422b3b:	push   0x42812c
  422b40:	call   DWORD PTR ds:0x428014
  422b46:	test   eax,eax
  422b48:	je     0x422b60
  422b4a:	push   0x42811c
  422b4f:	push   eax
  422b50:	call   DWORD PTR ds:0x428018
  422b56:	test   eax,eax
  422b58:	je     0x422b60
  422b5a:	push   DWORD PTR [esp+0x4]
  422b5e:	call   eax
  422b60:	push   DWORD PTR [esp+0x4]
  422b64:	call   DWORD PTR ds:0x428028
  422b6a:	int3   
  422b6b:	push   0x8
  422b6d:	call   0x423a1f
  422b72:	pop    ecx
  422b73:	ret    
  422b74:	push   0x8
  422b76:	call   0x42398b
  422b7b:	pop    ecx
  422b7c:	ret    
  422b7d:	mov    eax,ds:0x45d270
  422b82:	test   eax,eax
  422b84:	je     0x422b88
  422b86:	call   eax
  422b88:	push   esi
  422b89:	push   edi
  422b8a:	mov    ecx,0x42a00c
  422b8f:	mov    edi,0x42a018
  422b94:	xor    eax,eax
  422b96:	cmp    ecx,edi
  422b98:	mov    esi,ecx
  422b9a:	jae    0x422bb3
  422b9c:	test   eax,eax
  422b9e:	jne    0x422bdf
  422ba0:	mov    ecx,DWORD PTR [esi]
  422ba2:	test   ecx,ecx
  422ba4:	je     0x422ba8
  422ba6:	call   ecx
  422ba8:	add    esi,0x4
  422bab:	cmp    esi,edi
  422bad:	jb     0x422b9c
  422baf:	test   eax,eax
  422bb1:	jne    0x422bdf
  422bb3:	push   0x4236ab
  422bb8:	call   0x423b30
  422bbd:	mov    esi,0x42a000
  422bc2:	mov    eax,esi
  422bc4:	mov    edi,0x42a008
  422bc9:	cmp    eax,edi
  422bcb:	pop    ecx
  422bcc:	jae    0x422bdd
  422bce:	mov    eax,DWORD PTR [esi]
  422bd0:	test   eax,eax
  422bd2:	je     0x422bd6
  422bd4:	call   eax
  422bd6:	add    esi,0x4
  422bd9:	cmp    esi,edi
  422bdb:	jb     0x422bce
  422bdd:	xor    eax,eax
  422bdf:	pop    edi
  422be0:	pop    esi
  422be1:	ret    
  422be2:	push   ebp
  422be3:	mov    ebp,esp
  422be5:	push   esi
  422be6:	push   edi
  422be7:	push   0x8
  422be9:	call   0x423a1f
  422bee:	xor    esi,esi
  422bf0:	inc    esi
  422bf1:	cmp    DWORD PTR ds:0x45cb04,esi
  422bf7:	pop    ecx
  422bf8:	jne    0x422c0a
  422bfa:	push   DWORD PTR [ebp+0x8]
  422bfd:	call   DWORD PTR ds:0x428030
  422c03:	push   eax
  422c04:	call   DWORD PTR ds:0x42802c
  422c0a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c0e:	mov    al,BYTE PTR [ebp+0x10]
  422c11:	mov    DWORD PTR ds:0x45cb00,esi
  422c17:	mov    ds:0x45cafc,al
  422c1c:	jne    0x422c70
  422c1e:	mov    ecx,DWORD PTR ds:0x45d268
  422c24:	test   ecx,ecx
  422c26:	je     0x422c51
  422c28:	mov    eax,ds:0x45d264
  422c2d:	sub    eax,0x4
  422c30:	cmp    eax,ecx
  422c32:	jmp    0x422c4a
  422c34:	mov    eax,DWORD PTR [eax]
  422c36:	test   eax,eax
  422c38:	je     0x422c3c
  422c3a:	call   eax
  422c3c:	mov    eax,ds:0x45d264
  422c41:	sub    eax,0x4
  422c44:	cmp    eax,DWORD PTR ds:0x45d268
  422c4a:	mov    ds:0x45d264,eax
  422c4f:	jae    0x422c34
  422c51:	mov    eax,0x42a01c
  422c56:	mov    esi,0x42a020
  422c5b:	cmp    eax,esi
  422c5d:	mov    edi,eax
  422c5f:	jae    0x422c70
  422c61:	mov    eax,DWORD PTR [edi]
  422c63:	test   eax,eax
  422c65:	je     0x422c69
  422c67:	call   eax
  422c69:	add    edi,0x4
  422c6c:	cmp    edi,esi
  422c6e:	jb     0x422c61
  422c70:	mov    eax,0x42a024
  422c75:	mov    esi,0x42a028
  422c7a:	cmp    eax,esi
  422c7c:	mov    edi,eax
  422c7e:	jae    0x422c8f
  422c80:	mov    eax,DWORD PTR [edi]
  422c82:	test   eax,eax
  422c84:	je     0x422c88
  422c86:	call   eax
  422c88:	add    edi,0x4
  422c8b:	cmp    edi,esi
  422c8d:	jb     0x422c80
  422c8f:	cmp    DWORD PTR [ebp+0x10],0x0
  422c93:	pop    edi
  422c94:	pop    esi
  422c95:	je     0x422ca0
  422c97:	push   0x8
  422c99:	call   0x42398b
  422c9e:	jmp    0x422cb2
  422ca0:	push   DWORD PTR [ebp+0x8]
  422ca3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cad:	call   0x422b3b
  422cb2:	pop    ecx
  422cb3:	pop    ebp
  422cb4:	ret    
  422cb5:	push   0x0
  422cb7:	push   0x0
  422cb9:	push   DWORD PTR [esp+0xc]
  422cbd:	call   0x422be2
  422cc2:	add    esp,0xc
  422cc5:	ret    
  422cc6:	push   0x0
  422cc8:	push   0x1
  422cca:	push   DWORD PTR [esp+0xc]
  422cce:	call   0x422be2
  422cd3:	add    esp,0xc
  422cd6:	ret    
  422cd7:	push   0x1
  422cd9:	push   0x0
  422cdb:	push   0x0
  422cdd:	call   0x422be2
  422ce2:	add    esp,0xc
  422ce5:	ret    
  422ce6:	push   0x1
  422ce8:	push   0x1
  422cea:	push   0x0
  422cec:	call   0x422be2
  422cf1:	add    esp,0xc
  422cf4:	ret    
  422cf5:	push   ebp
  422cf6:	mov    ebp,esp
  422cf8:	sub    esp,0x10c
  422cfe:	mov    eax,ds:0x45c430
  422d03:	xor    eax,DWORD PTR [ebp+0x4]
  422d06:	mov    ecx,DWORD PTR [ebp+0x8]
  422d09:	push   ebx
  422d0a:	push   esi
  422d0b:	mov    DWORD PTR [ebp-0x4],eax
  422d0e:	xor    edx,edx
  422d10:	push   edi
  422d11:	xor    eax,eax
  422d13:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d1a:	je     0x422d22
  422d1c:	inc    eax
  422d1d:	cmp    eax,0x12
  422d20:	jb     0x422d13
  422d22:	mov    esi,eax
  422d24:	shl    esi,0x3
  422d27:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d2d:	jne    0x422e56
  422d33:	mov    eax,ds:0x45cabc
  422d38:	cmp    eax,0x1
  422d3b:	je     0x422e31
  422d41:	cmp    eax,edx
  422d43:	jne    0x422d52
  422d45:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d4c:	je     0x422e31
  422d52:	cmp    ecx,0xfc
  422d58:	je     0x422e56
  422d5e:	push   0x104
  422d63:	lea    eax,[ebp-0x10c]
  422d69:	push   eax
  422d6a:	push   edx
  422d6b:	mov    BYTE PTR [ebp-0x8],dl
  422d6e:	call   DWORD PTR ds:0x42803c
  422d74:	test   eax,eax
  422d76:	jne    0x422d8b
  422d78:	lea    eax,[ebp-0x10c]
  422d7e:	push   0x428484
  422d83:	push   eax
  422d84:	call   0x423c40
  422d89:	pop    ecx
  422d8a:	pop    ecx
  422d8b:	lea    eax,[ebp-0x10c]
  422d91:	push   eax
  422d92:	lea    edi,[ebp-0x10c]
  422d98:	call   0x423e70
  422d9d:	inc    eax
  422d9e:	cmp    eax,0x3c
  422da1:	pop    ecx
  422da2:	jbe    0x422dcd
  422da4:	lea    eax,[ebp-0x10c]
  422daa:	push   eax
  422dab:	call   0x423e70
  422db0:	mov    edi,eax
  422db2:	lea    eax,[ebp-0x10c]
  422db8:	sub    eax,0x3b
  422dbb:	push   0x3
  422dbd:	add    edi,eax
  422dbf:	push   0x428480
  422dc4:	push   edi
  422dc5:	call   0x423d40
  422dca:	add    esp,0x10
  422dcd:	push   edi
  422dce:	call   0x423e70
  422dd3:	push   DWORD PTR [esi+0x45c1cc]
  422dd9:	mov    ebx,eax
  422ddb:	call   0x423e70
  422de0:	lea    eax,[ebx+eax*1+0x1c]
  422de4:	pop    ecx
  422de5:	add    eax,0x3
  422de8:	pop    ecx
  422de9:	and    eax,0xfffffffc
  422dec:	call   0x4238b0
  422df1:	mov    ebx,esp
  422df3:	push   0x428464
  422df8:	push   ebx
  422df9:	call   0x423c40
  422dfe:	push   edi
  422dff:	push   ebx
  422e00:	call   0x423c50
  422e05:	push   0x428460
  422e0a:	push   ebx
  422e0b:	call   0x423c50
  422e10:	push   DWORD PTR [esi+0x45c1cc]
  422e16:	push   ebx
  422e17:	call   0x423c50
  422e1c:	push   0x12010
  422e21:	push   0x428438
  422e26:	push   ebx
  422e27:	call   0x423b42
  422e2c:	add    esp,0x2c
  422e2f:	jmp    0x422e56
  422e31:	push   edx
  422e32:	lea    eax,[ebp+0x8]
  422e35:	push   eax
  422e36:	lea    esi,[esi+0x45c1cc]
  422e3c:	push   DWORD PTR [esi]
  422e3e:	call   0x423e70
  422e43:	pop    ecx
  422e44:	push   eax
  422e45:	push   DWORD PTR [esi]
  422e47:	push   0xfffffff4
  422e49:	call   DWORD PTR ds:0x428038
  422e4f:	push   eax
  422e50:	call   DWORD PTR ds:0x428034
  422e56:	lea    esp,[ebp-0x118]
  422e5c:	mov    ecx,DWORD PTR [ebp-0x4]
  422e5f:	xor    ecx,DWORD PTR [ebp+0x4]
  422e62:	call   0x423f2c
  422e67:	pop    edi
  422e68:	pop    esi
  422e69:	pop    ebx
  422e6a:	leave  
  422e6b:	ret    
  422e6c:	mov    eax,ds:0x45cabc
  422e71:	cmp    eax,0x1
  422e74:	je     0x422e83
  422e76:	test   eax,eax
  422e78:	jne    0x422ea4
  422e7a:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422e81:	jne    0x422ea4
  422e83:	push   0xfc
  422e88:	call   0x422cf5
  422e8d:	mov    eax,ds:0x45cb08
  422e92:	test   eax,eax
  422e94:	pop    ecx
  422e95:	je     0x422e99
  422e97:	call   eax
  422e99:	push   0xff
  422e9e:	call   0x422cf5
  422ea3:	pop    ecx
  422ea4:	ret    
  422ea5:	push   ebp
  422ea6:	mov    ebp,esp
  422ea8:	push   ecx
  422ea9:	push   ebx
  422eaa:	push   esi
  422eab:	push   edi
  422eac:	call   0x42370d
  422eb1:	mov    edi,DWORD PTR [ebp+0x8]
  422eb4:	mov    esi,eax
  422eb6:	mov    edx,DWORD PTR [esi+0x54]
  422eb9:	mov    eax,ds:0x45c2dc
  422ebe:	mov    ecx,edx
  422ec0:	cmp    DWORD PTR [ecx],edi
  422ec2:	je     0x422ed1
  422ec4:	lea    ebx,[eax+eax*2]
  422ec7:	add    ecx,0xc
  422eca:	lea    ebx,[edx+ebx*4]
  422ecd:	cmp    ecx,ebx
  422ecf:	jb     0x422ec0
  422ed1:	lea    eax,[eax+eax*2]
  422ed4:	lea    eax,[edx+eax*4]
  422ed7:	cmp    ecx,eax
  422ed9:	jae    0x422edf
  422edb:	cmp    DWORD PTR [ecx],edi
  422edd:	je     0x422ee1
  422edf:	xor    ecx,ecx
  422ee1:	test   ecx,ecx
  422ee3:	je     0x422ffb
  422ee9:	mov    ebx,DWORD PTR [ecx+0x8]
  422eec:	test   ebx,ebx
  422eee:	mov    DWORD PTR [ebp+0x8],ebx
  422ef1:	je     0x422ffb
  422ef7:	cmp    ebx,0x5
  422efa:	jne    0x422f08
  422efc:	and    DWORD PTR [ecx+0x8],0x0
  422f00:	xor    eax,eax
  422f02:	inc    eax
  422f03:	jmp    0x423004
  422f08:	cmp    ebx,0x1
  422f0b:	je     0x422ff6
  422f11:	mov    eax,DWORD PTR [esi+0x58]
  422f14:	mov    DWORD PTR [ebp-0x4],eax
  422f17:	mov    eax,DWORD PTR [ebp+0xc]
  422f1a:	mov    DWORD PTR [esi+0x58],eax
  422f1d:	mov    eax,DWORD PTR [ecx+0x4]
  422f20:	cmp    eax,0x8
  422f23:	jne    0x422fe8
  422f29:	mov    edx,DWORD PTR ds:0x45c2d0
  422f2f:	mov    eax,ds:0x45c2d4
  422f34:	add    eax,edx
  422f36:	cmp    edx,eax
  422f38:	jge    0x422f61
  422f3a:	lea    eax,[edx+edx*2]
  422f3d:	shl    eax,0x2
  422f40:	mov    edi,DWORD PTR [esi+0x54]
  422f43:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f48:	mov    edi,DWORD PTR ds:0x45c2d0
  422f4e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422f54:	inc    edx
  422f55:	add    ebx,edi
  422f57:	add    eax,0xc
  422f5a:	cmp    edx,ebx
  422f5c:	jl     0x422f40
  422f5e:	mov    ebx,DWORD PTR [ebp+0x8]
  422f61:	mov    ecx,DWORD PTR [ecx]
  422f63:	cmp    ecx,0xc000008e
  422f69:	mov    edi,DWORD PTR [esi+0x5c]
  422f6c:	jne    0x422f77
  422f6e:	mov    DWORD PTR [esi+0x5c],0x83
  422f75:	jmp    0x422fdb
  422f77:	cmp    ecx,0xc0000090
  422f7d:	jne    0x422f88
  422f7f:	mov    DWORD PTR [esi+0x5c],0x81
  422f86:	jmp    0x422fdb
  422f88:	cmp    ecx,0xc0000091
  422f8e:	jne    0x422f99
  422f90:	mov    DWORD PTR [esi+0x5c],0x84
  422f97:	jmp    0x422fdb
  422f99:	cmp    ecx,0xc0000093
  422f9f:	jne    0x422faa
  422fa1:	mov    DWORD PTR [esi+0x5c],0x85
  422fa8:	jmp    0x422fdb
  422faa:	cmp    ecx,0xc000008d
  422fb0:	jne    0x422fbb
  422fb2:	mov    DWORD PTR [esi+0x5c],0x82
  422fb9:	jmp    0x422fdb
  422fbb:	cmp    ecx,0xc000008f
  422fc1:	jne    0x422fcc
  422fc3:	mov    DWORD PTR [esi+0x5c],0x86
  422fca:	jmp    0x422fdb
  422fcc:	cmp    ecx,0xc0000092
  422fd2:	jne    0x422fdb
  422fd4:	mov    DWORD PTR [esi+0x5c],0x8a
  422fdb:	push   DWORD PTR [esi+0x5c]
  422fde:	push   0x8
  422fe0:	call   ebx
  422fe2:	pop    ecx
  422fe3:	mov    DWORD PTR [esi+0x5c],edi
  422fe6:	jmp    0x422fef
  422fe8:	and    DWORD PTR [ecx+0x8],0x0
  422fec:	push   eax
  422fed:	call   ebx
  422fef:	mov    eax,DWORD PTR [ebp-0x4]
  422ff2:	pop    ecx
  422ff3:	mov    DWORD PTR [esi+0x58],eax
  422ff6:	or     eax,0xffffffff
  422ff9:	jmp    0x423004
  422ffb:	push   DWORD PTR [ebp+0xc]
  422ffe:	call   DWORD PTR ds:0x428040
  423004:	pop    edi
  423005:	pop    esi
  423006:	pop    ebx
  423007:	leave  
  423008:	ret    
  423009:	cmp    DWORD PTR ds:0x45d26c,0x0
  423010:	jne    0x423017
  423012:	call   0x42444c
  423017:	push   esi
  423018:	mov    esi,DWORD PTR ds:0x45d274
  42301e:	test   esi,esi
  423020:	jne    0x423029
  423022:	mov    esi,0x42849b
  423027:	jmp    0x42306e
  423029:	mov    al,BYTE PTR [esi]
  42302b:	cmp    al,0x22
  42302d:	jne    0x423057
  42302f:	inc    esi
  423030:	mov    al,BYTE PTR [esi]
  423032:	cmp    al,0x22
  423034:	je     0x423067
  423036:	test   al,al
  423038:	je     0x423050
  42303a:	movzx  eax,al
  42303d:	push   eax
  42303e:	call   0x423f6b
  423043:	test   eax,eax
  423045:	pop    ecx
  423046:	je     0x423049
  423048:	inc    esi
  423049:	inc    esi
  42304a:	mov    al,BYTE PTR [esi]
  42304c:	cmp    al,0x22
  42304e:	jne    0x423036
  423050:	cmp    BYTE PTR [esi],0x22
  423053:	jne    0x423068
  423055:	jmp    0x423067
  423057:	cmp    al,0x20
  423059:	jbe    0x423068
  42305b:	inc    esi
  42305c:	cmp    BYTE PTR [esi],0x20
  42305f:	ja     0x42305b
  423061:	jmp    0x423068
  423063:	cmp    al,0x20
  423065:	ja     0x42306e
  423067:	inc    esi
  423068:	mov    al,BYTE PTR [esi]
  42306a:	test   al,al
  42306c:	jne    0x423063
  42306e:	mov    eax,esi
  423070:	pop    esi
  423071:	ret    
  423072:	push   ebx
  423073:	xor    ebx,ebx
  423075:	cmp    DWORD PTR ds:0x45d26c,ebx
  42307b:	push   esi
  42307c:	push   edi
  42307d:	jne    0x423084
  42307f:	call   0x42444c
  423084:	mov    esi,DWORD PTR ds:0x45cab4
  42308a:	xor    edi,edi
  42308c:	cmp    esi,ebx
  42308e:	jne    0x4230a2
  423090:	jmp    0x4230c2
  423092:	cmp    al,0x3d
  423094:	je     0x423097
  423096:	inc    edi
  423097:	push   esi
  423098:	call   0x423e70
  42309d:	pop    ecx
  42309e:	lea    esi,[esi+eax*1+0x1]
  4230a2:	mov    al,BYTE PTR [esi]
  4230a4:	cmp    al,bl
  4230a6:	jne    0x423092
  4230a8:	lea    eax,[edi*4+0x4]
  4230af:	push   eax
  4230b0:	call   0x424582
  4230b5:	mov    edi,eax
  4230b7:	cmp    edi,ebx
  4230b9:	pop    ecx
  4230ba:	mov    DWORD PTR ds:0x45cae4,edi
  4230c0:	jne    0x4230c7
  4230c2:	or     eax,0xffffffff
  4230c5:	jmp    0x42311f
  4230c7:	mov    esi,DWORD PTR ds:0x45cab4
  4230cd:	push   ebp
  4230ce:	jmp    0x4230fa
  4230d0:	push   esi
  4230d1:	call   0x423e70
  4230d6:	mov    ebp,eax
  4230d8:	inc    ebp
  4230d9:	cmp    BYTE PTR [esi],0x3d
  4230dc:	pop    ecx
  4230dd:	je     0x4230f8
  4230df:	push   ebp
  4230e0:	call   0x424582
  4230e5:	cmp    eax,ebx
  4230e7:	pop    ecx
  4230e8:	mov    DWORD PTR [edi],eax
  4230ea:	je     0x423123
  4230ec:	push   esi
  4230ed:	push   eax
  4230ee:	call   0x423c40
  4230f3:	pop    ecx
  4230f4:	pop    ecx
  4230f5:	add    edi,0x4
  4230f8:	add    esi,ebp
  4230fa:	cmp    BYTE PTR [esi],bl
  4230fc:	jne    0x4230d0
  4230fe:	push   DWORD PTR ds:0x45cab4
  423104:	call   0x42446a
  423109:	mov    DWORD PTR ds:0x45cab4,ebx
  42310f:	mov    DWORD PTR [edi],ebx
  423111:	mov    DWORD PTR ds:0x45d260,0x1
  42311b:	xor    eax,eax
  42311d:	pop    ecx
  42311e:	pop    ebp
  42311f:	pop    edi
  423120:	pop    esi
  423121:	pop    ebx
  423122:	ret    
  423123:	push   DWORD PTR ds:0x45cae4
  423129:	call   0x42446a
  42312e:	mov    DWORD PTR ds:0x45cae4,ebx
  423134:	or     eax,0xffffffff
  423137:	jmp    0x42311d
  423139:	push   ebp
  42313a:	mov    ebp,esp
  42313c:	push   ecx
  42313d:	push   ebx
  42313e:	mov    ebx,DWORD PTR [ebp+0xc]
  423141:	xor    edx,edx
  423143:	cmp    DWORD PTR [ebp+0x8],edx
  423146:	push   edi
  423147:	mov    DWORD PTR [esi],edx
  423149:	mov    edi,ecx
  42314b:	mov    DWORD PTR [ebx],0x1
  423151:	je     0x42315c
  423153:	mov    ecx,DWORD PTR [ebp+0x8]
  423156:	add    DWORD PTR [ebp+0x8],0x4
  42315a:	mov    DWORD PTR [ecx],edi
  42315c:	cmp    BYTE PTR [eax],0x22
  42315f:	jne    0x42316f
  423161:	xor    ecx,ecx
  423163:	test   edx,edx
  423165:	sete   cl
  423168:	inc    eax
  423169:	mov    edx,ecx
  42316b:	mov    cl,0x22
  42316d:	jmp    0x42319c
  42316f:	inc    DWORD PTR [esi]
  423171:	test   edi,edi
  423173:	je     0x42317a
  423175:	mov    cl,BYTE PTR [eax]
  423177:	mov    BYTE PTR [edi],cl
  423179:	inc    edi
  42317a:	mov    cl,BYTE PTR [eax]
  42317c:	movzx  ebx,cl
  42317f:	inc    eax
  423180:	test   BYTE PTR [ebx+0x45cf21],0x4
  423187:	je     0x423195
  423189:	inc    DWORD PTR [esi]
  42318b:	test   edi,edi
  42318d:	je     0x423194
  42318f:	mov    bl,BYTE PTR [eax]
  423191:	mov    BYTE PTR [edi],bl
  423193:	inc    edi
  423194:	inc    eax
  423195:	test   cl,cl
  423197:	mov    ebx,DWORD PTR [ebp+0xc]
  42319a:	je     0x4231ce
  42319c:	test   edx,edx
  42319e:	jne    0x42315c
  4231a0:	cmp    cl,0x20
  4231a3:	je     0x4231aa
  4231a5:	cmp    cl,0x9
  4231a8:	jne    0x42315c
  4231aa:	test   edi,edi
  4231ac:	je     0x4231b2
  4231ae:	and    BYTE PTR [edi-0x1],0x0
  4231b2:	and    DWORD PTR [ebp-0x4],0x0
  4231b6:	cmp    BYTE PTR [eax],0x0
  4231b9:	je     0x423295
  4231bf:	mov    cl,BYTE PTR [eax]
  4231c1:	cmp    cl,0x20
  4231c4:	je     0x4231cb
  4231c6:	cmp    cl,0x9
  4231c9:	jne    0x4231d1
  4231cb:	inc    eax
  4231cc:	jmp    0x4231bf
  4231ce:	dec    eax
  4231cf:	jmp    0x4231b2
  4231d1:	cmp    BYTE PTR [eax],0x0
  4231d4:	je     0x423295
  4231da:	cmp    DWORD PTR [ebp+0x8],0x0
  4231de:	je     0x4231e9
  4231e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4231e3:	add    DWORD PTR [ebp+0x8],0x4
  4231e7:	mov    DWORD PTR [ecx],edi
  4231e9:	inc    DWORD PTR [ebx]
  4231eb:	xor    ebx,ebx
  4231ed:	inc    ebx
  4231ee:	xor    edx,edx
  4231f0:	jmp    0x4231f4
  4231f2:	inc    eax
  4231f3:	inc    edx
  4231f4:	cmp    BYTE PTR [eax],0x5c
  4231f7:	je     0x4231f2
  4231f9:	cmp    BYTE PTR [eax],0x22
  4231fc:	jne    0x423224
  4231fe:	test   dl,0x1
  423201:	jne    0x423222
  423203:	cmp    DWORD PTR [ebp-0x4],0x0
  423207:	je     0x423215
  423209:	lea    ecx,[eax+0x1]
  42320c:	cmp    BYTE PTR [ecx],0x22
  42320f:	jne    0x423215
  423211:	mov    eax,ecx
  423213:	jmp    0x423217
  423215:	xor    ebx,ebx
  423217:	xor    ecx,ecx
  423219:	cmp    DWORD PTR [ebp-0x4],ecx
  42321c:	sete   cl
  42321f:	mov    DWORD PTR [ebp-0x4],ecx
  423222:	shr    edx,1
  423224:	test   edx,edx
  423226:	je     0x423235
  423228:	test   edi,edi
  42322a:	je     0x423230
  42322c:	mov    BYTE PTR [edi],0x5c
  42322f:	inc    edi
  423230:	inc    DWORD PTR [esi]
  423232:	dec    edx
  423233:	jne    0x423228
  423235:	mov    cl,BYTE PTR [eax]
  423237:	test   cl,cl
  423239:	je     0x423283
  42323b:	cmp    DWORD PTR [ebp-0x4],0x0
  42323f:	jne    0x42324b
  423241:	cmp    cl,0x20
  423244:	je     0x423283
  423246:	cmp    cl,0x9
  423249:	je     0x423283
  42324b:	test   ebx,ebx
  42324d:	je     0x42327d
  42324f:	test   edi,edi
  423251:	je     0x42326c
  423253:	movzx  edx,cl
  423256:	test   BYTE PTR [edx+0x45cf21],0x4
  42325d:	je     0x423265
  42325f:	mov    BYTE PTR [edi],cl
  423261:	inc    edi
  423262:	inc    eax
  423263:	inc    DWORD PTR [esi]
  423265:	mov    cl,BYTE PTR [eax]
  423267:	mov    BYTE PTR [edi],cl
  423269:	inc    edi
  42326a:	jmp    0x42327b
  42326c:	movzx  ecx,cl
  42326f:	test   BYTE PTR [ecx+0x45cf21],0x4
  423276:	je     0x42327b
  423278:	inc    eax
  423279:	inc    DWORD PTR [esi]
  42327b:	inc    DWORD PTR [esi]
  42327d:	inc    eax
  42327e:	jmp    0x4231eb
  423283:	test   edi,edi
  423285:	je     0x42328b
  423287:	and    BYTE PTR [edi],0x0
  42328a:	inc    edi
  42328b:	inc    DWORD PTR [esi]
  42328d:	mov    ebx,DWORD PTR [ebp+0xc]
  423290:	jmp    0x4231b6
  423295:	mov    eax,DWORD PTR [ebp+0x8]
  423298:	test   eax,eax
  42329a:	je     0x42329f
  42329c:	and    DWORD PTR [eax],0x0
  42329f:	inc    DWORD PTR [ebx]
  4232a1:	pop    edi
  4232a2:	pop    ebx
  4232a3:	leave  
  4232a4:	ret    
  4232a5:	push   ebp
  4232a6:	mov    ebp,esp
  4232a8:	push   ecx
  4232a9:	push   ecx
  4232aa:	push   ebx
  4232ab:	push   esi
  4232ac:	push   edi
  4232ad:	xor    edi,edi
  4232af:	cmp    DWORD PTR ds:0x45d26c,edi
  4232b5:	jne    0x4232bc
  4232b7:	call   0x42444c
  4232bc:	and    BYTE PTR ds:0x45cc14,0x0
  4232c3:	push   0x104
  4232c8:	mov    esi,0x45cb10
  4232cd:	push   esi
  4232ce:	push   edi
  4232cf:	call   DWORD PTR ds:0x42803c
  4232d5:	mov    eax,ds:0x45d274
  4232da:	cmp    eax,edi
  4232dc:	mov    DWORD PTR ds:0x45caf4,esi
  4232e2:	je     0x4232eb
  4232e4:	cmp    BYTE PTR [eax],0x0
  4232e7:	mov    ebx,eax
  4232e9:	jne    0x4232ed
  4232eb:	mov    ebx,esi
  4232ed:	lea    eax,[ebp-0x4]
  4232f0:	push   eax
  4232f1:	push   edi
  4232f2:	lea    esi,[ebp-0x8]
  4232f5:	xor    ecx,ecx
  4232f7:	mov    eax,ebx
  4232f9:	call   0x423139
  4232fe:	mov    esi,DWORD PTR [ebp-0x4]
  423301:	mov    eax,DWORD PTR [ebp-0x8]
  423304:	shl    esi,0x2
  423307:	add    eax,esi
  423309:	push   eax
  42330a:	call   0x424582
  42330f:	mov    edi,eax
  423311:	add    esp,0xc
  423314:	test   edi,edi
  423316:	jne    0x42331d
  423318:	or     eax,0xffffffff
  42331b:	jmp    0x423342
  42331d:	lea    eax,[ebp-0x4]
  423320:	push   eax
  423321:	lea    ecx,[esi+edi*1]
  423324:	push   edi
  423325:	lea    esi,[ebp-0x8]
  423328:	mov    eax,ebx
  42332a:	call   0x423139
  42332f:	mov    eax,DWORD PTR [ebp-0x4]
  423332:	dec    eax
  423333:	pop    ecx
  423334:	mov    ds:0x45cad8,eax
  423339:	pop    ecx
  42333a:	mov    DWORD PTR ds:0x45cadc,edi
  423340:	xor    eax,eax
  423342:	pop    edi
  423343:	pop    esi
  423344:	pop    ebx
  423345:	leave  
  423346:	ret    
  423347:	push   ecx
  423348:	push   ecx
  423349:	mov    eax,ds:0x45cc18
  42334e:	push   ebx
  42334f:	push   ebp
  423350:	push   esi
  423351:	push   edi
  423352:	mov    edi,DWORD PTR ds:0x428054
  423358:	xor    ebx,ebx
  42335a:	xor    esi,esi
  42335c:	cmp    eax,ebx
  42335e:	push   0x2
  423360:	pop    ebp
  423361:	jne    0x423390
  423363:	call   edi
  423365:	mov    esi,eax
  423367:	cmp    esi,ebx
  423369:	je     0x423377
  42336b:	mov    DWORD PTR ds:0x45cc18,0x1
  423375:	jmp    0x423395
  423377:	call   DWORD PTR ds:0x428010
  42337d:	cmp    eax,0x78
  423380:	jne    0x42338b
  423382:	mov    eax,ebp
  423384:	mov    ds:0x45cc18,eax
  423389:	jmp    0x423390
  42338b:	mov    eax,ds:0x45cc18
  423390:	cmp    eax,0x1
  423393:	jne    0x423412
  423395:	cmp    esi,ebx
  423397:	jne    0x4233a1
  423399:	call   edi
  42339b:	mov    esi,eax
  42339d:	cmp    esi,ebx
  42339f:	je     0x42341a
  4233a1:	cmp    WORD PTR [esi],bx
  4233a4:	mov    eax,esi
  4233a6:	je     0x4233b6
  4233a8:	add    eax,ebp
  4233aa:	cmp    WORD PTR [eax],bx
  4233ad:	jne    0x4233a8
  4233af:	add    eax,ebp
  4233b1:	cmp    WORD PTR [eax],bx
  4233b4:	jne    0x4233a8
  4233b6:	mov    edi,DWORD PTR ds:0x428050
  4233bc:	push   ebx
  4233bd:	push   ebx
  4233be:	push   ebx
  4233bf:	sub    eax,esi
  4233c1:	push   ebx
  4233c2:	sar    eax,1
  4233c4:	inc    eax
  4233c5:	push   eax
  4233c6:	push   esi
  4233c7:	push   ebx
  4233c8:	push   ebx
  4233c9:	mov    DWORD PTR [esp+0x34],eax
  4233cd:	call   edi
  4233cf:	mov    ebp,eax
  4233d1:	cmp    ebp,ebx
  4233d3:	je     0x423407
  4233d5:	push   ebp
  4233d6:	call   0x424582
  4233db:	cmp    eax,ebx
  4233dd:	pop    ecx
  4233de:	mov    DWORD PTR [esp+0x10],eax
  4233e2:	je     0x423407
  4233e4:	push   ebx
  4233e5:	push   ebx
  4233e6:	push   ebp
  4233e7:	push   eax
  4233e8:	push   DWORD PTR [esp+0x24]
  4233ec:	push   esi
  4233ed:	push   ebx
  4233ee:	push   ebx
  4233ef:	call   edi
  4233f1:	test   eax,eax
  4233f3:	jne    0x423403
  4233f5:	push   DWORD PTR [esp+0x10]
  4233f9:	call   0x42446a
  4233fe:	pop    ecx
  4233ff:	mov    DWORD PTR [esp+0x10],ebx
  423403:	mov    ebx,DWORD PTR [esp+0x10]
  423407:	push   esi
  423408:	call   DWORD PTR ds:0x42804c
  42340e:	mov    eax,ebx
  423410:	jmp    0x423462
  423412:	cmp    eax,ebp
  423414:	je     0x42341e
  423416:	cmp    eax,ebx
  423418:	je     0x42341e
  42341a:	xor    eax,eax
  42341c:	jmp    0x423462
  42341e:	call   DWORD PTR ds:0x428048
  423424:	mov    esi,eax
  423426:	cmp    esi,ebx
  423428:	je     0x42341a
  42342a:	cmp    BYTE PTR [esi],bl
  42342c:	je     0x423438
  42342e:	inc    eax
  42342f:	cmp    BYTE PTR [eax],bl
  423431:	jne    0x42342e
  423433:	inc    eax
  423434:	cmp    BYTE PTR [eax],bl
  423436:	jne    0x42342e
  423438:	sub    eax,esi
  42343a:	inc    eax
  42343b:	mov    ebp,eax
  42343d:	push   ebp
  42343e:	call   0x424582
  423443:	mov    edi,eax
  423445:	cmp    edi,ebx
  423447:	pop    ecx
  423448:	jne    0x42344e
  42344a:	xor    edi,edi
  42344c:	jmp    0x423459
  42344e:	push   ebp
  42344f:	push   esi
  423450:	push   edi
  423451:	call   0x4245a0
  423456:	add    esp,0xc
  423459:	push   esi
  42345a:	call   DWORD PTR ds:0x428044
  423460:	mov    eax,edi
  423462:	pop    edi
  423463:	pop    esi
  423464:	pop    ebp
  423465:	pop    ebx
  423466:	pop    ecx
  423467:	pop    ecx
  423468:	ret    
  423469:	sub    esp,0x48
  42346c:	push   ebx
  42346d:	mov    ebx,0x480
  423472:	push   ebx
  423473:	call   0x424582
  423478:	test   eax,eax
  42347a:	pop    ecx
  42347b:	jne    0x423485
  42347d:	or     eax,0xffffffff
  423480:	jmp    0x423662
  423485:	mov    ds:0x45d160,eax
  42348a:	mov    DWORD PTR ds:0x45d148,0x20
  423494:	lea    ecx,[eax+0x480]
  42349a:	jmp    0x4234ba
  42349c:	and    BYTE PTR [eax+0x4],0x0
  4234a0:	or     DWORD PTR [eax],0xffffffff
  4234a3:	and    DWORD PTR [eax+0x8],0x0
  4234a7:	mov    BYTE PTR [eax+0x5],0xa
  4234ab:	mov    ecx,DWORD PTR ds:0x45d160
  4234b1:	add    eax,0x24
  4234b4:	add    ecx,0x480
  4234ba:	cmp    eax,ecx
  4234bc:	jb     0x42349c
  4234be:	push   ebp
  4234bf:	push   esi
  4234c0:	push   edi
  4234c1:	lea    eax,[esp+0x14]
  4234c5:	push   eax
  4234c6:	call   DWORD PTR ds:0x42801c
  4234cc:	cmp    WORD PTR [esp+0x46],0x0
  4234d2:	je     0x4235c1
  4234d8:	mov    eax,DWORD PTR [esp+0x48]
  4234dc:	test   eax,eax
  4234de:	je     0x4235c1
  4234e4:	mov    edi,DWORD PTR [eax]
  4234e6:	lea    ebp,[eax+0x4]
  4234e9:	lea    eax,[edi+ebp*1]
  4234ec:	mov    DWORD PTR [esp+0x10],eax
  4234f0:	mov    eax,0x800
  4234f5:	cmp    edi,eax
  4234f7:	jl     0x4234fb
  4234f9:	mov    edi,eax
  4234fb:	cmp    DWORD PTR ds:0x45d148,edi
  423501:	jge    0x423551
  423503:	mov    esi,0x45d164
  423508:	push   ebx
  423509:	call   0x424582
  42350e:	test   eax,eax
  423510:	pop    ecx
  423511:	je     0x42354b
  423513:	add    DWORD PTR ds:0x45d148,0x20
  42351a:	mov    DWORD PTR [esi],eax
  42351c:	lea    ecx,[eax+0x480]
  423522:	jmp    0x42353a
  423524:	and    BYTE PTR [eax+0x4],0x0
  423528:	or     DWORD PTR [eax],0xffffffff
  42352b:	and    DWORD PTR [eax+0x8],0x0
  42352f:	mov    BYTE PTR [eax+0x5],0xa
  423533:	mov    ecx,DWORD PTR [esi]
  423535:	add    eax,0x24
  423538:	add    ecx,ebx
  42353a:	cmp    eax,ecx
  42353c:	jb     0x423524
  42353e:	add    esi,0x4
  423541:	cmp    DWORD PTR ds:0x45d148,edi
  423547:	jl     0x423508
  423549:	jmp    0x423551
  42354b:	mov    edi,DWORD PTR ds:0x45d148
  423551:	xor    ebx,ebx
  423553:	test   edi,edi
  423555:	jle    0x4235c1
  423557:	mov    eax,DWORD PTR [esp+0x10]
  42355b:	mov    eax,DWORD PTR [eax]
  42355d:	cmp    eax,0xffffffff
  423560:	je     0x4235b6
  423562:	mov    cl,BYTE PTR [ebp+0x0]
  423565:	test   cl,0x1
  423568:	je     0x4235b6
  42356a:	test   cl,0x8
  42356d:	jne    0x42357a
  42356f:	push   eax
  423570:	call   DWORD PTR ds:0x42805c
  423576:	test   eax,eax
  423578:	je     0x4235b6
  42357a:	mov    ecx,ebx
  42357c:	mov    eax,ebx
  42357e:	and    eax,0x1f
  423581:	lea    eax,[eax+eax*8]
  423584:	sar    ecx,0x5
  423587:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  42358e:	lea    esi,[ecx+eax*4]
  423591:	mov    eax,DWORD PTR [esp+0x10]
  423595:	mov    eax,DWORD PTR [eax]
  423597:	mov    DWORD PTR [esi],eax
  423599:	mov    al,BYTE PTR [ebp+0x0]
  42359c:	mov    BYTE PTR [esi+0x4],al
  42359f:	lea    eax,[esi+0xc]
  4235a2:	push   0xfa0
  4235a7:	push   eax
  4235a8:	call   0x4248ed
  4235ad:	test   eax,eax
  4235af:	pop    ecx
  4235b0:	pop    ecx
  4235b1:	je     0x4235e1
  4235b3:	inc    DWORD PTR [esi+0x8]
  4235b6:	add    DWORD PTR [esp+0x10],0x4
  4235bb:	inc    ebx
  4235bc:	inc    ebp
  4235bd:	cmp    ebx,edi
  4235bf:	jl     0x423557
  4235c1:	xor    ebx,ebx
  4235c3:	mov    ecx,DWORD PTR ds:0x45d160
  4235c9:	lea    eax,[ebx+ebx*8]
  4235cc:	lea    esi,[ecx+eax*4]
  4235cf:	cmp    DWORD PTR [esi],0xffffffff
  4235d2:	jne    0x423643
  4235d4:	test   ebx,ebx
  4235d6:	mov    BYTE PTR [esi+0x4],0x81
  4235da:	jne    0x4235e6
  4235dc:	push   0xfffffff6
  4235de:	pop    eax
  4235df:	jmp    0x4235f0
  4235e1:	or     eax,0xffffffff
  4235e4:	jmp    0x42365f
  4235e6:	mov    eax,ebx
  4235e8:	dec    eax
  4235e9:	neg    eax
  4235eb:	sbb    eax,eax
  4235ed:	add    eax,0xfffffff5
  4235f0:	push   eax
  4235f1:	call   DWORD PTR ds:0x428038
  4235f7:	mov    edi,eax
  4235f9:	cmp    edi,0xffffffff
  4235fc:	je     0x42363d
  4235fe:	push   edi
  4235ff:	call   DWORD PTR ds:0x42805c
  423605:	test   eax,eax
  423607:	je     0x42363d
  423609:	and    eax,0xff
  42360e:	cmp    eax,0x2
  423611:	mov    DWORD PTR [esi],edi
  423613:	jne    0x42361b
  423615:	or     BYTE PTR [esi+0x4],0x40
  423619:	jmp    0x423624
  42361b:	cmp    eax,0x3
  42361e:	jne    0x423624
  423620:	or     BYTE PTR [esi+0x4],0x8
  423624:	lea    eax,[esi+0xc]
  423627:	push   0xfa0
  42362c:	push   eax
  42362d:	call   0x4248ed
  423632:	test   eax,eax
  423634:	pop    ecx
  423635:	pop    ecx
  423636:	je     0x4235e1
  423638:	inc    DWORD PTR [esi+0x8]
  42363b:	jmp    0x423647
  42363d:	or     BYTE PTR [esi+0x4],0x40
  423641:	jmp    0x423647
  423643:	or     BYTE PTR [esi+0x4],0x80
  423647:	inc    ebx
  423648:	cmp    ebx,0x3
  42364b:	jl     0x4235c3
  423651:	push   DWORD PTR ds:0x45d148
  423657:	call   DWORD PTR ds:0x428058
  42365d:	xor    eax,eax
  42365f:	pop    edi
  423660:	pop    esi
  423661:	pop    ebp
  423662:	pop    ebx
  423663:	add    esp,0x48
  423666:	ret    
  423667:	push   0xc
  423669:	push   0x4284a0
  42366e:	call   0x423858
  423673:	mov    DWORD PTR [ebp-0x1c],0x428ef8
  42367a:	cmp    DWORD PTR [ebp-0x1c],0x428ef8
  423681:	jae    0x4236a5
  423683:	and    DWORD PTR [ebp-0x4],0x0
  423687:	mov    eax,DWORD PTR [ebp-0x1c]
  42368a:	mov    eax,DWORD PTR [eax]
  42368c:	test   eax,eax
  42368e:	je     0x42369b
  423690:	call   eax
  423692:	jmp    0x42369b
  423694:	xor    eax,eax
  423696:	inc    eax
  423697:	ret    
  423698:	mov    esp,DWORD PTR [ebp-0x18]
  42369b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42369f:	add    DWORD PTR [ebp-0x1c],0x4
  4236a3:	jmp    0x42367a
  4236a5:	call   0x423893
  4236aa:	ret    
  4236ab:	push   0xc
  4236ad:	push   0x4284b0
  4236b2:	call   0x423858
  4236b7:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236be:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236c5:	jae    0x4236e9
  4236c7:	and    DWORD PTR [ebp-0x4],0x0
  4236cb:	mov    eax,DWORD PTR [ebp-0x1c]
  4236ce:	mov    eax,DWORD PTR [eax]
  4236d0:	test   eax,eax
  4236d2:	je     0x4236df
  4236d4:	call   eax
  4236d6:	jmp    0x4236df
  4236d8:	xor    eax,eax
  4236da:	inc    eax
  4236db:	ret    
  4236dc:	mov    esp,DWORD PTR [ebp-0x18]
  4236df:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236e3:	add    DWORD PTR [ebp-0x1c],0x4
  4236e7:	jmp    0x4236be
  4236e9:	call   0x423893
  4236ee:	ret    
  4236ef:	call   0x423936
  4236f4:	mov    eax,ds:0x45c304
  4236f9:	cmp    eax,0xffffffff
  4236fc:	je     0x42370c
  4236fe:	push   eax
  4236ff:	call   DWORD PTR ds:0x428064
  423705:	or     DWORD PTR ds:0x45c304,0xffffffff
  42370c:	ret    
  42370d:	push   ebx
  42370e:	push   esi
  42370f:	call   DWORD PTR ds:0x428010
  423715:	push   DWORD PTR ds:0x45c304
  42371b:	mov    ebx,eax
  42371d:	call   DWORD PTR ds:0x428074
  423723:	mov    esi,eax
  423725:	test   esi,esi
  423727:	jne    0x423772
  423729:	push   0x88
  42372e:	push   0x1
  423730:	call   0x424978
  423735:	mov    esi,eax
  423737:	test   esi,esi
  423739:	pop    ecx
  42373a:	pop    ecx
  42373b:	je     0x42376a
  42373d:	push   esi
  42373e:	push   DWORD PTR ds:0x45c304
  423744:	call   DWORD PTR ds:0x428070
  42374a:	test   eax,eax
  42374c:	je     0x42376a
  42374e:	mov    DWORD PTR [esi+0x54],0x45c258
  423755:	mov    DWORD PTR [esi+0x14],0x1
  42375c:	call   DWORD PTR ds:0x42806c
  423762:	or     DWORD PTR [esi+0x4],0xffffffff
  423766:	mov    DWORD PTR [esi],eax
  423768:	jmp    0x423772
  42376a:	push   0x10
  42376c:	call   0x422920
  423771:	pop    ecx
  423772:	push   ebx
  423773:	call   DWORD PTR ds:0x428068
  423779:	mov    eax,esi
  42377b:	pop    esi
  42377c:	pop    ebx
  42377d:	ret    
  42377e:	call   0x4238ed
  423783:	test   eax,eax
  423785:	je     0x423797
  423787:	call   DWORD PTR ds:0x428078
  42378d:	cmp    eax,0xffffffff
  423790:	mov    ds:0x45c304,eax
  423795:	jne    0x42379f
  423797:	call   0x4236ef
  42379c:	xor    eax,eax
  42379e:	ret    
  42379f:	push   esi
  4237a0:	push   0x88
  4237a5:	push   0x1
  4237a7:	call   0x424978
  4237ac:	mov    esi,eax
  4237ae:	test   esi,esi
  4237b0:	pop    ecx
  4237b1:	pop    ecx
  4237b2:	je     0x4237e4
  4237b4:	push   esi
  4237b5:	push   DWORD PTR ds:0x45c304
  4237bb:	call   DWORD PTR ds:0x428070
  4237c1:	test   eax,eax
  4237c3:	je     0x4237e4
  4237c5:	mov    DWORD PTR [esi+0x54],0x45c258
  4237cc:	mov    DWORD PTR [esi+0x14],0x1
  4237d3:	call   DWORD PTR ds:0x42806c
  4237d9:	or     DWORD PTR [esi+0x4],0xffffffff
  4237dd:	mov    DWORD PTR [esi],eax
  4237df:	xor    eax,eax
  4237e1:	inc    eax
  4237e2:	pop    esi
  4237e3:	ret    
  4237e4:	call   0x4236ef
  4237e9:	xor    eax,eax
  4237eb:	pop    esi
  4237ec:	ret    
  4237ed:	cmp    DWORD PTR ds:0x45cac4,0x2
  4237f4:	jne    0x423803
  4237f6:	cmp    DWORD PTR ds:0x45cad0,0x5
  4237fd:	jb     0x423803
  4237ff:	xor    eax,eax
  423801:	inc    eax
  423802:	ret    
  423803:	push   0x3
  423805:	pop    eax
  423806:	ret    
  423807:	xor    eax,eax
  423809:	cmp    DWORD PTR [esp+0x4],eax
  42380d:	push   0x0
  42380f:	sete   al
  423812:	push   0x1000
  423817:	push   eax
  423818:	call   DWORD PTR ds:0x428080
  42381e:	test   eax,eax
  423820:	mov    ds:0x45d140,eax
  423825:	je     0x423851
  423827:	call   0x4237ed
  42382c:	cmp    eax,0x3
  42382f:	mov    ds:0x45d144,eax
  423834:	jne    0x423854
  423836:	push   0x3f8
  42383b:	call   0x424bfa
  423840:	test   eax,eax
  423842:	pop    ecx
  423843:	jne    0x423854
  423845:	push   DWORD PTR ds:0x45d140
  42384b:	call   DWORD PTR ds:0x42807c
  423851:	xor    eax,eax
  423853:	ret    
  423854:	xor    eax,eax
  423856:	inc    eax
  423857:	ret    
  423858:	push   0x425728
  42385d:	mov    eax,fs:0x0
  423863:	push   eax
  423864:	mov    eax,DWORD PTR [esp+0x10]
  423868:	mov    DWORD PTR [esp+0x10],ebp
  42386c:	lea    ebp,[esp+0x10]
  423870:	sub    esp,eax
  423872:	push   ebx
  423873:	push   esi
  423874:	push   edi
  423875:	mov    eax,DWORD PTR [ebp-0x8]
  423878:	mov    DWORD PTR [ebp-0x18],esp
  42387b:	push   eax
  42387c:	mov    eax,DWORD PTR [ebp-0x4]
  42387f:	mov    DWORD PTR [ebp-0x4],0xffffffff
  423886:	mov    DWORD PTR [ebp-0x8],eax
  423889:	lea    eax,[ebp-0x10]
  42388c:	mov    fs:0x0,eax
  423892:	ret    
  423893:	mov    ecx,DWORD PTR [ebp-0x10]
  423896:	mov    DWORD PTR fs:0x0,ecx
  42389d:	pop    ecx
  42389e:	pop    edi
  42389f:	pop    esi
  4238a0:	pop    ebx
  4238a1:	leave  
  4238a2:	push   ecx
  4238a3:	ret    
  4238a4:	int3   
  4238a5:	int3   
  4238a6:	int3   
  4238a7:	int3   
  4238a8:	int3   
  4238a9:	int3   
  4238aa:	int3   
  4238ab:	int3   
  4238ac:	int3   
  4238ad:	int3   
  4238ae:	int3   
  4238af:	int3   
  4238b0:	cmp    eax,0x1000
  4238b5:	jae    0x4238c5
  4238b7:	neg    eax
  4238b9:	add    eax,esp
  4238bb:	add    eax,0x4
  4238be:	test   DWORD PTR [eax],eax
  4238c0:	xchg   esp,eax
  4238c1:	mov    eax,DWORD PTR [eax]
  4238c3:	push   eax
  4238c4:	ret    
  4238c5:	push   ecx
  4238c6:	lea    ecx,[esp+0x8]
  4238ca:	sub    ecx,0x1000
  4238d0:	sub    eax,0x1000
  4238d5:	test   DWORD PTR [ecx],eax
  4238d7:	cmp    eax,0x1000
  4238dc:	jae    0x4238ca
  4238de:	sub    ecx,eax
  4238e0:	mov    eax,esp
  4238e2:	test   DWORD PTR [ecx],eax
  4238e4:	mov    esp,ecx
  4238e6:	mov    ecx,DWORD PTR [eax]
  4238e8:	mov    eax,DWORD PTR [eax+0x4]
  4238eb:	push   eax
  4238ec:	ret    
  4238ed:	push   esi
  4238ee:	push   edi
  4238ef:	xor    esi,esi
  4238f1:	mov    edi,0x45cc20
  4238f6:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  4238fe:	jne    0x42391e
  423900:	lea    eax,[esi*8+0x45c310]
  423907:	mov    DWORD PTR [eax],edi
  423909:	push   0xfa0
  42390e:	push   DWORD PTR [eax]
  423910:	add    edi,0x18
  423913:	call   0x4248ed
  423918:	test   eax,eax
  42391a:	pop    ecx
  42391b:	pop    ecx
  42391c:	je     0x42392a
  42391e:	inc    esi
  42391f:	cmp    esi,0x24
  423922:	jl     0x4238f6
  423924:	xor    eax,eax
  423926:	inc    eax
  423927:	pop    edi
  423928:	pop    esi
  423929:	ret    
  42392a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423932:	xor    eax,eax
  423934:	jmp    0x423927
  423936:	push   ebx
  423937:	mov    ebx,DWORD PTR ds:0x428060
  42393d:	push   esi
  42393e:	mov    esi,0x45c310
  423943:	push   edi
  423944:	mov    edi,DWORD PTR [esi]
  423946:	test   edi,edi
  423948:	je     0x42395d
  42394a:	cmp    DWORD PTR [esi+0x4],0x1
  42394e:	je     0x42395d
  423950:	push   edi
  423951:	call   ebx
  423953:	push   edi
  423954:	call   0x42446a
  423959:	and    DWORD PTR [esi],0x0
  42395c:	pop    ecx
  42395d:	add    esi,0x8
  423960:	cmp    esi,0x45c430
  423966:	jl     0x423944
  423968:	mov    esi,0x45c310
  42396d:	pop    edi
  42396e:	mov    eax,DWORD PTR [esi]
  423970:	test   eax,eax
  423972:	je     0x42397d
  423974:	cmp    DWORD PTR [esi+0x4],0x1
  423978:	jne    0x42397d
  42397a:	push   eax
  42397b:	call   ebx
  42397d:	add    esi,0x8
  423980:	cmp    esi,0x45c430
  423986:	jl     0x42396e
  423988:	pop    esi
  423989:	pop    ebx
  42398a:	ret    
  42398b:	push   ebp
  42398c:	mov    ebp,esp
  42398e:	mov    eax,DWORD PTR [ebp+0x8]
  423991:	push   DWORD PTR [eax*8+0x45c310]
  423998:	call   DWORD PTR ds:0x42808c
  42399e:	pop    ebp
  42399f:	ret    
  4239a0:	push   ebp
  4239a1:	mov    ebp,esp
  4239a3:	push   esi
  4239a4:	mov    esi,DWORD PTR [ebp+0x8]
  4239a7:	lea    esi,[esi*8+0x45c310]
  4239ae:	cmp    DWORD PTR [esi],0x0
  4239b1:	je     0x4239b8
  4239b3:	xor    eax,eax
  4239b5:	inc    eax
  4239b6:	jmp    0x423a1c
  4239b8:	push   edi
  4239b9:	push   0x18
  4239bb:	call   0x424582
  4239c0:	mov    edi,eax
  4239c2:	test   edi,edi
  4239c4:	pop    ecx
  4239c5:	jne    0x4239d6
  4239c7:	call   0x425800
  4239cc:	mov    DWORD PTR [eax],0xc
  4239d2:	xor    eax,eax
  4239d4:	jmp    0x423a1b
  4239d6:	push   0xa
  4239d8:	call   0x423a1f
  4239dd:	cmp    DWORD PTR [esi],0x0
  4239e0:	pop    ecx
  4239e1:	jne    0x423a09
  4239e3:	push   0xfa0
  4239e8:	push   edi
  4239e9:	call   0x4248ed
  4239ee:	test   eax,eax
  4239f0:	pop    ecx
  4239f1:	pop    ecx
  4239f2:	jne    0x423a05
  4239f4:	push   edi
  4239f5:	call   0x42446a
  4239fa:	push   0xa
  4239fc:	call   0x42398b
  423a01:	pop    ecx
  423a02:	pop    ecx
  423a03:	jmp    0x4239c7
  423a05:	mov    DWORD PTR [esi],edi
  423a07:	jmp    0x423a10
  423a09:	push   edi
  423a0a:	call   0x42446a
  423a0f:	pop    ecx
  423a10:	push   0xa
  423a12:	call   0x42398b
  423a17:	xor    eax,eax
  423a19:	pop    ecx
  423a1a:	inc    eax
  423a1b:	pop    edi
  423a1c:	pop    esi
  423a1d:	pop    ebp
  423a1e:	ret    
  423a1f:	push   ebp
  423a20:	mov    ebp,esp
  423a22:	mov    eax,DWORD PTR [ebp+0x8]
  423a25:	push   esi
  423a26:	lea    esi,[eax*8+0x45c310]
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	jne    0x423a45
  423a32:	push   eax
  423a33:	call   0x4239a0
  423a38:	test   eax,eax
  423a3a:	pop    ecx
  423a3b:	jne    0x423a45
  423a3d:	push   0x11
  423a3f:	call   0x422920
  423a44:	pop    ecx
  423a45:	push   DWORD PTR [esi]
  423a47:	call   DWORD PTR ds:0x428090
  423a4d:	pop    esi
  423a4e:	pop    ebp
  423a4f:	ret    
  423a50:	push   esi
  423a51:	push   DWORD PTR ds:0x45d268
  423a57:	call   0x4259b6
  423a5c:	pop    ecx
  423a5d:	mov    ecx,DWORD PTR ds:0x45d264
  423a63:	mov    esi,eax
  423a65:	mov    eax,ds:0x45d268
  423a6a:	mov    edx,ecx
  423a6c:	sub    edx,eax
  423a6e:	add    edx,0x4
  423a71:	cmp    esi,edx
  423a73:	jae    0x423ac3
  423a75:	mov    ecx,0x800
  423a7a:	cmp    esi,ecx
  423a7c:	jae    0x423a80
  423a7e:	mov    ecx,esi
  423a80:	add    ecx,esi
  423a82:	push   ecx
  423a83:	push   eax
  423a84:	call   0x425809
  423a89:	test   eax,eax
  423a8b:	pop    ecx
  423a8c:	pop    ecx
  423a8d:	jne    0x423aa6
  423a8f:	add    esi,0x10
  423a92:	push   esi
  423a93:	push   DWORD PTR ds:0x45d268
  423a99:	call   0x425809
  423a9e:	test   eax,eax
  423aa0:	pop    ecx
  423aa1:	pop    ecx
  423aa2:	jne    0x423aa6
  423aa4:	pop    esi
  423aa5:	ret    
  423aa6:	mov    ecx,DWORD PTR ds:0x45d264
  423aac:	sub    ecx,DWORD PTR ds:0x45d268
  423ab2:	mov    ds:0x45d268,eax
  423ab7:	sar    ecx,0x2
  423aba:	lea    ecx,[eax+ecx*4]
  423abd:	mov    DWORD PTR ds:0x45d264,ecx
  423ac3:	mov    DWORD PTR [ecx],edi
  423ac5:	add    DWORD PTR ds:0x45d264,0x4
  423acc:	mov    eax,edi
  423ace:	pop    esi
  423acf:	ret    
  423ad0:	push   0x80
  423ad5:	call   0x424582
  423ada:	test   eax,eax
  423adc:	pop    ecx
  423add:	mov    ds:0x45d268,eax
  423ae2:	jne    0x423ae8
  423ae4:	push   0x18
  423ae6:	pop    eax
  423ae7:	ret    
  423ae8:	and    DWORD PTR [eax],0x0
  423aeb:	mov    eax,ds:0x45d268
  423af0:	mov    ds:0x45d264,eax
  423af5:	xor    eax,eax
  423af7:	ret    
  423af8:	push   0xc
  423afa:	push   0x4284c0
  423aff:	call   0x423858
  423b04:	call   0x422b6b
  423b09:	and    DWORD PTR [ebp-0x4],0x0
  423b0d:	mov    edi,DWORD PTR [ebp+0x8]
  423b10:	call   0x423a50
  423b15:	mov    DWORD PTR [ebp-0x1c],eax
  423b18:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b1c:	call   0x423b2a
  423b21:	mov    eax,DWORD PTR [ebp-0x1c]
  423b24:	call   0x423893
  423b29:	ret    
  423b2a:	call   0x422b74
  423b2f:	ret    
  423b30:	push   DWORD PTR [esp+0x4]
  423b34:	call   0x423af8
  423b39:	neg    eax
  423b3b:	sbb    eax,eax
  423b3d:	neg    eax
  423b3f:	pop    ecx
  423b40:	dec    eax
  423b41:	ret    
  423b42:	push   ebp
  423b43:	mov    ebp,esp
  423b45:	sub    esp,0x10
  423b48:	push   ebx
  423b49:	xor    ebx,ebx
  423b4b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423b51:	push   esi
  423b52:	push   edi
  423b53:	jne    0x423bc2
  423b55:	push   0x428530
  423b5a:	call   DWORD PTR ds:0x428094
  423b60:	mov    edi,eax
  423b62:	cmp    edi,ebx
  423b64:	je     0x423bfd
  423b6a:	mov    esi,DWORD PTR ds:0x428018
  423b70:	push   0x428524
  423b75:	push   edi
  423b76:	call   esi
  423b78:	test   eax,eax
  423b7a:	mov    ds:0x45cd70,eax
  423b7f:	je     0x423bfd
  423b81:	push   0x428514
  423b86:	push   edi
  423b87:	call   esi
  423b89:	push   0x428500
  423b8e:	push   edi
  423b8f:	mov    ds:0x45cd74,eax
  423b94:	call   esi
  423b96:	cmp    DWORD PTR ds:0x45cac4,0x2
  423b9d:	mov    ds:0x45cd78,eax
  423ba2:	jne    0x423bc2
  423ba4:	push   0x4284e4
  423ba9:	push   edi
  423baa:	call   esi
  423bac:	test   eax,eax
  423bae:	mov    ds:0x45cd80,eax
  423bb3:	je     0x423bc2
  423bb5:	push   0x4284cc
  423bba:	push   edi
  423bbb:	call   esi
  423bbd:	mov    ds:0x45cd7c,eax
  423bc2:	mov    eax,ds:0x45cd7c
  423bc7:	test   eax,eax
  423bc9:	je     0x423c07
  423bcb:	call   eax
  423bcd:	test   eax,eax
  423bcf:	je     0x423bee
  423bd1:	lea    ecx,[ebp-0x4]
  423bd4:	push   ecx
  423bd5:	push   0xc
  423bd7:	lea    ecx,[ebp-0x10]
  423bda:	push   ecx
  423bdb:	push   0x1
  423bdd:	push   eax
  423bde:	call   DWORD PTR ds:0x45cd80
  423be4:	test   eax,eax
  423be6:	je     0x423bee
  423be8:	test   BYTE PTR [ebp-0x8],0x1
  423bec:	jne    0x423c07
  423bee:	cmp    DWORD PTR ds:0x45cad0,0x4
  423bf5:	jb     0x423c01
  423bf7:	or     BYTE PTR [ebp+0x12],0x20
  423bfb:	jmp    0x423c26
  423bfd:	xor    eax,eax
  423bff:	jmp    0x423c36
  423c01:	or     BYTE PTR [ebp+0x12],0x4
  423c05:	jmp    0x423c26
  423c07:	mov    eax,ds:0x45cd74
  423c0c:	test   eax,eax
  423c0e:	je     0x423c26
  423c10:	call   eax
  423c12:	mov    ebx,eax
  423c14:	test   ebx,ebx
  423c16:	je     0x423c26
  423c18:	mov    eax,ds:0x45cd78
  423c1d:	test   eax,eax
  423c1f:	je     0x423c26
  423c21:	push   ebx
  423c22:	call   eax
  423c24:	mov    ebx,eax
  423c26:	push   DWORD PTR [ebp+0x10]
  423c29:	push   DWORD PTR [ebp+0xc]
  423c2c:	push   DWORD PTR [ebp+0x8]
  423c2f:	push   ebx
  423c30:	call   DWORD PTR ds:0x45cd70
  423c36:	pop    edi
  423c37:	pop    esi
  423c38:	pop    ebx
  423c39:	leave  
  423c3a:	ret    
  423c3b:	int3   
  423c3c:	int3   
  423c3d:	int3   
  423c3e:	int3   
  423c3f:	int3   
  423c40:	push   edi
  423c41:	mov    edi,DWORD PTR [esp+0x8]
  423c45:	jmp    0x423cb5
  423c47:	lea    esp,[esp+0x0]
  423c4e:	mov    edi,edi
  423c50:	mov    ecx,DWORD PTR [esp+0x4]
  423c54:	push   edi
  423c55:	test   ecx,0x3
  423c5b:	je     0x423c70
  423c5d:	mov    al,BYTE PTR [ecx]
  423c5f:	add    ecx,0x1
  423c62:	test   al,al
  423c64:	je     0x423ca3
  423c66:	test   ecx,0x3
  423c6c:	jne    0x423c5d
  423c6e:	mov    edi,edi
  423c70:	mov    eax,DWORD PTR [ecx]
  423c72:	mov    edx,0x7efefeff
  423c77:	add    edx,eax
  423c79:	xor    eax,0xffffffff
  423c7c:	xor    eax,edx
  423c7e:	add    ecx,0x4
  423c81:	test   eax,0x81010100
  423c86:	je     0x423c70
  423c88:	mov    eax,DWORD PTR [ecx-0x4]
  423c8b:	test   al,al
  423c8d:	je     0x423cb2
  423c8f:	test   ah,ah
  423c91:	je     0x423cad
  423c93:	test   eax,0xff0000
  423c98:	je     0x423ca8
  423c9a:	test   eax,0xff000000
  423c9f:	je     0x423ca3
  423ca1:	jmp    0x423c70
  423ca3:	lea    edi,[ecx-0x1]
  423ca6:	jmp    0x423cb5
  423ca8:	lea    edi,[ecx-0x2]
  423cab:	jmp    0x423cb5
  423cad:	lea    edi,[ecx-0x3]
  423cb0:	jmp    0x423cb5
  423cb2:	lea    edi,[ecx-0x4]
  423cb5:	mov    ecx,DWORD PTR [esp+0xc]
  423cb9:	test   ecx,0x3
  423cbf:	je     0x423cde
  423cc1:	mov    dl,BYTE PTR [ecx]
  423cc3:	add    ecx,0x1
  423cc6:	test   dl,dl
  423cc8:	je     0x423d30
  423cca:	mov    BYTE PTR [edi],dl
  423ccc:	add    edi,0x1
  423ccf:	test   ecx,0x3
  423cd5:	jne    0x423cc1
  423cd7:	jmp    0x423cde
  423cd9:	mov    DWORD PTR [edi],edx
  423cdb:	add    edi,0x4
  423cde:	mov    edx,0x7efefeff
  423ce3:	mov    eax,DWORD PTR [ecx]
  423ce5:	add    edx,eax
  423ce7:	xor    eax,0xffffffff
  423cea:	xor    eax,edx
  423cec:	mov    edx,DWORD PTR [ecx]
  423cee:	add    ecx,0x4
  423cf1:	test   eax,0x81010100
  423cf6:	je     0x423cd9
  423cf8:	test   dl,dl
  423cfa:	je     0x423d30
  423cfc:	test   dh,dh
  423cfe:	je     0x423d27
  423d00:	test   edx,0xff0000
  423d06:	je     0x423d1a
  423d08:	test   edx,0xff000000
  423d0e:	je     0x423d12
  423d10:	jmp    0x423cd9
  423d12:	mov    DWORD PTR [edi],edx
  423d14:	mov    eax,DWORD PTR [esp+0x8]
  423d18:	pop    edi
  423d19:	ret    
  423d1a:	mov    WORD PTR [edi],dx
  423d1d:	mov    eax,DWORD PTR [esp+0x8]
  423d21:	mov    BYTE PTR [edi+0x2],0x0
  423d25:	pop    edi
  423d26:	ret    
  423d27:	mov    WORD PTR [edi],dx
  423d2a:	mov    eax,DWORD PTR [esp+0x8]
  423d2e:	pop    edi
  423d2f:	ret    
  423d30:	mov    BYTE PTR [edi],dl
  423d32:	mov    eax,DWORD PTR [esp+0x8]
  423d36:	pop    edi
  423d37:	ret    
  423d38:	int3   
  423d39:	int3   
  423d3a:	int3   
  423d3b:	int3   
  423d3c:	int3   
  423d3d:	int3   
  423d3e:	int3   
  423d3f:	int3   
  423d40:	mov    ecx,DWORD PTR [esp+0xc]
  423d44:	push   edi
  423d45:	test   ecx,ecx
  423d47:	je     0x423ddf
  423d4d:	push   esi
  423d4e:	push   ebx
  423d4f:	mov    ebx,ecx
  423d51:	mov    esi,DWORD PTR [esp+0x14]
  423d55:	test   esi,0x3
  423d5b:	mov    edi,DWORD PTR [esp+0x10]
  423d5f:	jne    0x423d6c
  423d61:	shr    ecx,0x2
  423d64:	jne    0x423def
  423d6a:	jmp    0x423d93
  423d6c:	mov    al,BYTE PTR [esi]
  423d6e:	add    esi,0x1
  423d71:	mov    BYTE PTR [edi],al
  423d73:	add    edi,0x1
  423d76:	sub    ecx,0x1
  423d79:	je     0x423da6
  423d7b:	test   al,al
  423d7d:	je     0x423dae
  423d7f:	test   esi,0x3
  423d85:	jne    0x423d6c
  423d87:	mov    ebx,ecx
  423d89:	shr    ecx,0x2
  423d8c:	jne    0x423def
  423d8e:	and    ebx,0x3
  423d91:	je     0x423da6
  423d93:	mov    al,BYTE PTR [esi]
  423d95:	add    esi,0x1
  423d98:	mov    BYTE PTR [edi],al
  423d9a:	add    edi,0x1
  423d9d:	test   al,al
  423d9f:	je     0x423dd8
  423da1:	sub    ebx,0x1
  423da4:	jne    0x423d93
  423da6:	mov    eax,DWORD PTR [esp+0x10]
  423daa:	pop    ebx
  423dab:	pop    esi
  423dac:	pop    edi
  423dad:	ret    
  423dae:	test   edi,0x3
  423db4:	je     0x423dcc
  423db6:	mov    BYTE PTR [edi],al
  423db8:	add    edi,0x1
  423dbb:	sub    ecx,0x1
  423dbe:	je     0x423e5c
  423dc4:	test   edi,0x3
  423dca:	jne    0x423db6
  423dcc:	mov    ebx,ecx
  423dce:	shr    ecx,0x2
  423dd1:	jne    0x423e47
  423dd3:	mov    BYTE PTR [edi],al
  423dd5:	add    edi,0x1
  423dd8:	sub    ebx,0x1
  423ddb:	jne    0x423dd3
  423ddd:	pop    ebx
  423dde:	pop    esi
  423ddf:	mov    eax,DWORD PTR [esp+0x8]
  423de3:	pop    edi
  423de4:	ret    
  423de5:	mov    DWORD PTR [edi],edx
  423de7:	add    edi,0x4
  423dea:	sub    ecx,0x1
  423ded:	je     0x423d8e
  423def:	mov    edx,0x7efefeff
  423df4:	mov    eax,DWORD PTR [esi]
  423df6:	add    edx,eax
  423df8:	xor    eax,0xffffffff
  423dfb:	xor    eax,edx
  423dfd:	mov    edx,DWORD PTR [esi]
  423dff:	add    esi,0x4
  423e02:	test   eax,0x81010100
  423e07:	je     0x423de5
  423e09:	test   dl,dl
  423e0b:	je     0x423e39
  423e0d:	test   dh,dh
  423e0f:	je     0x423e2f
  423e11:	test   edx,0xff0000
  423e17:	je     0x423e25
  423e19:	test   edx,0xff000000
  423e1f:	jne    0x423de5
  423e21:	mov    DWORD PTR [edi],edx
  423e23:	jmp    0x423e3d
  423e25:	and    edx,0xffff
  423e2b:	mov    DWORD PTR [edi],edx
  423e2d:	jmp    0x423e3d
  423e2f:	and    edx,0xff
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	jmp    0x423e3d
  423e39:	xor    edx,edx
  423e3b:	mov    DWORD PTR [edi],edx
  423e3d:	add    edi,0x4
  423e40:	xor    eax,eax
  423e42:	sub    ecx,0x1
  423e45:	je     0x423e53
  423e47:	xor    eax,eax
  423e49:	mov    DWORD PTR [edi],eax
  423e4b:	add    edi,0x4
  423e4e:	sub    ecx,0x1
  423e51:	jne    0x423e49
  423e53:	and    ebx,0x3
  423e56:	jne    0x423dd3
  423e5c:	mov    eax,DWORD PTR [esp+0x10]
  423e60:	pop    ebx
  423e61:	pop    esi
  423e62:	pop    edi
  423e63:	ret    
  423e64:	int3   
  423e65:	int3   
  423e66:	int3   
  423e67:	int3   
  423e68:	int3   
  423e69:	int3   
  423e6a:	int3   
  423e6b:	int3   
  423e6c:	int3   
  423e6d:	int3   
  423e6e:	int3   
  423e6f:	int3   
  423e70:	mov    ecx,DWORD PTR [esp+0x4]
  423e74:	test   ecx,0x3
  423e7a:	je     0x423ea0
  423e7c:	mov    al,BYTE PTR [ecx]
  423e7e:	add    ecx,0x1
  423e81:	test   al,al
  423e83:	je     0x423ed3
  423e85:	test   ecx,0x3
  423e8b:	jne    0x423e7c
  423e8d:	add    eax,0x0
  423e92:	lea    esp,[esp+0x0]
  423e99:	lea    esp,[esp+0x0]
  423ea0:	mov    eax,DWORD PTR [ecx]
  423ea2:	mov    edx,0x7efefeff
  423ea7:	add    edx,eax
  423ea9:	xor    eax,0xffffffff
  423eac:	xor    eax,edx
  423eae:	add    ecx,0x4
  423eb1:	test   eax,0x81010100
  423eb6:	je     0x423ea0
  423eb8:	mov    eax,DWORD PTR [ecx-0x4]
  423ebb:	test   al,al
  423ebd:	je     0x423ef1
  423ebf:	test   ah,ah
  423ec1:	je     0x423ee7
  423ec3:	test   eax,0xff0000
  423ec8:	je     0x423edd
  423eca:	test   eax,0xff000000
  423ecf:	je     0x423ed3
  423ed1:	jmp    0x423ea0
  423ed3:	lea    eax,[ecx-0x1]
  423ed6:	mov    ecx,DWORD PTR [esp+0x4]
  423eda:	sub    eax,ecx
  423edc:	ret    
  423edd:	lea    eax,[ecx-0x2]
  423ee0:	mov    ecx,DWORD PTR [esp+0x4]
  423ee4:	sub    eax,ecx
  423ee6:	ret    
  423ee7:	lea    eax,[ecx-0x3]
  423eea:	mov    ecx,DWORD PTR [esp+0x4]
  423eee:	sub    eax,ecx
  423ef0:	ret    
  423ef1:	lea    eax,[ecx-0x4]
  423ef4:	mov    ecx,DWORD PTR [esp+0x4]
  423ef8:	sub    eax,ecx
  423efa:	ret    
  423efb:	push   0x8
  423efd:	push   0x428540
  423f02:	call   0x423858
  423f07:	and    DWORD PTR [ebp-0x4],0x0
  423f0b:	push   0x0
  423f0d:	push   0x1
  423f0f:	call   0x425a82
  423f14:	pop    ecx
  423f15:	pop    ecx
  423f16:	jmp    0x423f1f
  423f18:	xor    eax,eax
  423f1a:	inc    eax
  423f1b:	ret    
  423f1c:	mov    esp,DWORD PTR [ebp-0x18]
  423f1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f23:	push   0x3
  423f25:	call   DWORD PTR ds:0x428028
  423f2b:	int3   
  423f2c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f32:	jne    0x423f35
  423f34:	ret    
  423f35:	jmp    0x423efb
  423f3a:	movzx  eax,BYTE PTR [esp+0x4]
  423f3f:	mov    cl,BYTE PTR [esp+0xc]
  423f43:	test   BYTE PTR [eax+0x45cf21],cl
  423f49:	jne    0x423f67
  423f4b:	cmp    DWORD PTR [esp+0x8],0x0
  423f50:	je     0x423f60
  423f52:	movzx  eax,WORD PTR [eax*2+0x42893a]
  423f5a:	and    eax,DWORD PTR [esp+0x8]
  423f5e:	jmp    0x423f62
  423f60:	xor    eax,eax
  423f62:	test   eax,eax
  423f64:	jne    0x423f67
  423f66:	ret    
  423f67:	xor    eax,eax
  423f69:	inc    eax
  423f6a:	ret    
  423f6b:	push   0x4
  423f6d:	push   0x0
  423f6f:	push   DWORD PTR [esp+0xc]
  423f73:	call   0x423f3a
  423f78:	add    esp,0xc
  423f7b:	ret    
  423f7c:	sub    eax,0x3a4
  423f81:	je     0x423fa5
  423f83:	sub    eax,0x4
  423f86:	je     0x423f9f
  423f88:	sub    eax,0xd
  423f8b:	je     0x423f99
  423f8d:	dec    eax
  423f8e:	je     0x423f93
  423f90:	xor    eax,eax
  423f92:	ret    
  423f93:	mov    eax,0x404
  423f98:	ret    
  423f99:	mov    eax,0x412
  423f9e:	ret    
  423f9f:	mov    eax,0x804
  423fa4:	ret    
  423fa5:	mov    eax,0x411
  423faa:	ret    
  423fab:	push   edi
  423fac:	push   0x40
  423fae:	xor    eax,eax
  423fb0:	pop    ecx
  423fb1:	mov    edi,0x45cf20
  423fb6:	rep stos DWORD PTR es:[edi],eax
  423fb8:	stos   BYTE PTR es:[edi],al
  423fb9:	xor    eax,eax
  423fbb:	mov    ds:0x45d024,eax
  423fc0:	mov    ds:0x45cf1c,eax
  423fc5:	mov    ds:0x45cf14,eax
  423fca:	mov    edi,0x45d030
  423fcf:	stos   DWORD PTR es:[edi],eax
  423fd0:	stos   DWORD PTR es:[edi],eax
  423fd1:	stos   DWORD PTR es:[edi],eax
  423fd2:	pop    edi
  423fd3:	ret    
  423fd4:	push   ebp
  423fd5:	mov    ebp,esp
  423fd7:	sub    esp,0x518
  423fdd:	mov    eax,ds:0x45c430
  423fe2:	xor    eax,DWORD PTR [ebp+0x4]
  423fe5:	push   esi
  423fe6:	mov    DWORD PTR [ebp-0x4],eax
  423fe9:	lea    eax,[ebp-0x18]
  423fec:	push   eax
  423fed:	push   DWORD PTR ds:0x45d024
  423ff3:	call   DWORD PTR ds:0x4280a0
  423ff9:	cmp    eax,0x1
  423ffc:	mov    esi,0x100
  424001:	jne    0x424114
  424007:	xor    eax,eax
  424009:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424010:	inc    eax
  424011:	cmp    eax,esi
  424013:	jb     0x424009
  424015:	mov    al,BYTE PTR [ebp-0x12]
  424018:	test   al,al
  42401a:	mov    BYTE PTR [ebp-0x118],0x20
  424021:	je     0x424059
  424023:	push   ebx
  424024:	lea    edx,[ebp-0x11]
  424027:	push   edi
  424028:	movzx  ecx,BYTE PTR [edx]
  42402b:	movzx  eax,al
  42402e:	cmp    eax,ecx
  424030:	ja     0x42404f
  424032:	sub    ecx,eax
  424034:	inc    ecx
  424035:	mov    ebx,ecx
  424037:	shr    ecx,0x2
  42403a:	lea    edi,[ebp+eax*1-0x118]
  424041:	mov    eax,0x20202020
  424046:	rep stos DWORD PTR es:[edi],eax
  424048:	mov    ecx,ebx
  42404a:	and    ecx,0x3
  42404d:	rep stos BYTE PTR es:[edi],al
  42404f:	inc    edx
  424050:	mov    al,BYTE PTR [edx]
  424052:	inc    edx
  424053:	test   al,al
  424055:	jne    0x424028
  424057:	pop    edi
  424058:	pop    ebx
  424059:	push   0x0
  42405b:	push   DWORD PTR ds:0x45cf14
  424061:	lea    eax,[ebp-0x518]
  424067:	push   DWORD PTR ds:0x45d024
  42406d:	push   eax
  42406e:	push   esi
  42406f:	lea    eax,[ebp-0x118]
  424075:	push   eax
  424076:	push   0x1
  424078:	call   0x425f88
  42407d:	push   0x0
  42407f:	push   DWORD PTR ds:0x45d024
  424085:	lea    eax,[ebp-0x218]
  42408b:	push   esi
  42408c:	push   eax
  42408d:	push   esi
  42408e:	lea    eax,[ebp-0x118]
  424094:	push   eax
  424095:	push   esi
  424096:	push   DWORD PTR ds:0x45cf14
  42409c:	call   0x425bcc
  4240a1:	push   0x0
  4240a3:	push   DWORD PTR ds:0x45d024
  4240a9:	lea    eax,[ebp-0x318]
  4240af:	push   esi
  4240b0:	push   eax
  4240b1:	push   esi
  4240b2:	lea    eax,[ebp-0x118]
  4240b8:	push   eax
  4240b9:	push   0x200
  4240be:	push   DWORD PTR ds:0x45cf14
  4240c4:	call   0x425bcc
  4240c9:	add    esp,0x5c
  4240cc:	xor    eax,eax
  4240ce:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4240d6:	test   cl,0x1
  4240d9:	je     0x4240f1
  4240db:	or     BYTE PTR [eax+0x45cf21],0x10
  4240e2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4240e9:	mov    BYTE PTR [eax+0x45d040],cl
  4240ef:	jmp    0x42410d
  4240f1:	test   cl,0x2
  4240f4:	je     0x424106
  4240f6:	or     BYTE PTR [eax+0x45cf21],0x20
  4240fd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424104:	jmp    0x4240e9
  424106:	and    BYTE PTR [eax+0x45d040],0x0
  42410d:	inc    eax
  42410e:	cmp    eax,esi
  424110:	jb     0x4240ce
  424112:	jmp    0x424158
  424114:	xor    eax,eax
  424116:	cmp    eax,0x41
  424119:	jb     0x424134
  42411b:	cmp    eax,0x5a
  42411e:	ja     0x424134
  424120:	or     BYTE PTR [eax+0x45cf21],0x10
  424127:	mov    cl,al
  424129:	add    cl,0x20
  42412c:	mov    BYTE PTR [eax+0x45d040],cl
  424132:	jmp    0x424153
  424134:	cmp    eax,0x61
  424137:	jb     0x42414c
  424139:	cmp    eax,0x7a
  42413c:	ja     0x42414c
  42413e:	or     BYTE PTR [eax+0x45cf21],0x20
  424145:	mov    cl,al
  424147:	sub    cl,0x20
  42414a:	jmp    0x42412c
  42414c:	and    BYTE PTR [eax+0x45d040],0x0
  424153:	inc    eax
  424154:	cmp    eax,esi
  424156:	jb     0x424116
  424158:	mov    ecx,DWORD PTR [ebp-0x4]
  42415b:	xor    ecx,DWORD PTR [ebp+0x4]
  42415e:	pop    esi
  42415f:	call   0x423f2c
  424164:	leave  
  424165:	ret    
  424166:	push   ebp
  424167:	mov    ebp,esp
  424169:	sub    esp,0x1c
  42416c:	mov    eax,ds:0x45c430
  424171:	xor    eax,DWORD PTR [ebp+0x4]
  424174:	push   ebx
  424175:	push   esi
  424176:	mov    esi,DWORD PTR [ebp+0x8]
  424179:	xor    ebx,ebx
  42417b:	cmp    esi,ebx
  42417d:	mov    DWORD PTR [ebp-0x4],eax
  424180:	push   edi
  424181:	je     0x4242db
  424187:	xor    edx,edx
  424189:	xor    eax,eax
  42418b:	cmp    DWORD PTR [eax+0x45c440],esi
  424191:	je     0x4241f8
  424193:	add    eax,0x30
  424196:	inc    edx
  424197:	cmp    eax,0xf0
  42419c:	jb     0x42418b
  42419e:	lea    eax,[ebp-0x1c]
  4241a1:	push   eax
  4241a2:	push   esi
  4241a3:	call   DWORD PTR ds:0x4280a0
  4241a9:	cmp    eax,0x1
  4241ac:	jne    0x4242d3
  4241b2:	push   0x40
  4241b4:	xor    eax,eax
  4241b6:	cmp    DWORD PTR [ebp-0x1c],0x1
  4241ba:	pop    ecx
  4241bb:	mov    edi,0x45cf20
  4241c0:	rep stos DWORD PTR es:[edi],eax
  4241c2:	stos   BYTE PTR es:[edi],al
  4241c3:	mov    DWORD PTR ds:0x45d024,esi
  4241c9:	mov    DWORD PTR ds:0x45cf14,ebx
  4241cf:	jbe    0x4242c1
  4241d5:	cmp    BYTE PTR [ebp-0x16],0x0
  4241d9:	je     0x424299
  4241df:	lea    ecx,[ebp-0x15]
  4241e2:	mov    dl,BYTE PTR [ecx]
  4241e4:	test   dl,dl
  4241e6:	je     0x424299
  4241ec:	movzx  eax,BYTE PTR [ecx-0x1]
  4241f0:	movzx  edx,dl
  4241f3:	jmp    0x424289
  4241f8:	push   0x40
  4241fa:	xor    eax,eax
  4241fc:	pop    ecx
  4241fd:	mov    edi,0x45cf20
  424202:	rep stos DWORD PTR es:[edi],eax
  424204:	lea    ecx,[edx+edx*2]
  424207:	shl    ecx,0x4
  42420a:	mov    DWORD PTR [ebp-0x8],ebx
  42420d:	stos   BYTE PTR es:[edi],al
  42420e:	lea    ebx,[ecx+0x45c450]
  424214:	mov    al,BYTE PTR [ebx]
  424216:	mov    esi,ebx
  424218:	jmp    0x424243
  42421a:	mov    dl,BYTE PTR [esi+0x1]
  42421d:	test   dl,dl
  42421f:	je     0x424247
  424221:	movzx  eax,al
  424224:	movzx  edi,dl
  424227:	cmp    eax,edi
  424229:	ja     0x42423f
  42422b:	mov    edx,DWORD PTR [ebp-0x8]
  42422e:	mov    dl,BYTE PTR [edx+0x45c438]
  424234:	or     BYTE PTR [eax+0x45cf21],dl
  42423a:	inc    eax
  42423b:	cmp    eax,edi
  42423d:	jbe    0x424234
  42423f:	inc    esi
  424240:	inc    esi
  424241:	mov    al,BYTE PTR [esi]
  424243:	test   al,al
  424245:	jne    0x42421a
  424247:	inc    DWORD PTR [ebp-0x8]
  42424a:	add    ebx,0x8
  42424d:	cmp    DWORD PTR [ebp-0x8],0x4
  424251:	jb     0x424214
  424253:	mov    eax,DWORD PTR [ebp+0x8]
  424256:	mov    ds:0x45d024,eax
  42425b:	mov    DWORD PTR ds:0x45cf1c,0x1
  424265:	call   0x423f7c
  42426a:	lea    ecx,[ecx+0x45c444]
  424270:	mov    esi,ecx
  424272:	mov    edi,0x45d030
  424277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424279:	mov    ds:0x45cf14,eax
  42427e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42427f:	jmp    0x4242e0
  424281:	or     BYTE PTR [eax+0x45cf21],0x4
  424288:	inc    eax
  424289:	cmp    eax,edx
  42428b:	jbe    0x424281
  42428d:	inc    ecx
  42428e:	inc    ecx
  42428f:	cmp    BYTE PTR [ecx-0x1],0x0
  424293:	jne    0x4241e2
  424299:	xor    ecx,ecx
  42429b:	inc    ecx
  42429c:	mov    eax,ecx
  42429e:	or     BYTE PTR [eax+0x45cf21],0x8
  4242a5:	inc    eax
  4242a6:	cmp    eax,0xff
  4242ab:	jb     0x42429e
  4242ad:	mov    eax,esi
  4242af:	call   0x423f7c
  4242b4:	mov    ds:0x45cf14,eax
  4242b9:	mov    DWORD PTR ds:0x45cf1c,ecx
  4242bf:	jmp    0x4242c7
  4242c1:	mov    DWORD PTR ds:0x45cf1c,ebx
  4242c7:	xor    eax,eax
  4242c9:	mov    edi,0x45d030
  4242ce:	stos   DWORD PTR es:[edi],eax
  4242cf:	stos   DWORD PTR es:[edi],eax
  4242d0:	stos   DWORD PTR es:[edi],eax
  4242d1:	jmp    0x4242e0
  4242d3:	cmp    DWORD PTR ds:0x45cd84,ebx
  4242d9:	je     0x4242e9
  4242db:	call   0x423fab
  4242e0:	call   0x423fd4
  4242e5:	xor    eax,eax
  4242e7:	jmp    0x4242ec
  4242e9:	or     eax,0xffffffff
  4242ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4242ef:	xor    ecx,DWORD PTR [ebp+0x4]
  4242f2:	pop    edi
  4242f3:	pop    esi
  4242f4:	pop    ebx
  4242f5:	call   0x423f2c
  4242fa:	leave  
  4242fb:	ret    
  4242fc:	push   0x14
  4242fe:	push   0x428550
  424303:	call   0x423858
  424308:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42430c:	push   0xd
  42430e:	call   0x423a1f
  424313:	pop    ecx
  424314:	xor    edi,edi
  424316:	mov    DWORD PTR [ebp-0x4],edi
  424319:	mov    DWORD PTR ds:0x45cd84,edi
  42431f:	mov    eax,DWORD PTR [ebp+0x8]
  424322:	cmp    eax,0xfffffffe
  424325:	jne    0x424339
  424327:	mov    DWORD PTR ds:0x45cd84,0x1
  424331:	call   DWORD PTR ds:0x42809c
  424337:	jmp    0x424364
  424339:	cmp    eax,0xfffffffd
  42433c:	jne    0x424350
  42433e:	mov    DWORD PTR ds:0x45cd84,0x1
  424348:	call   DWORD PTR ds:0x428098
  42434e:	jmp    0x424364
  424350:	cmp    eax,0xfffffffc
  424353:	jne    0x424364
  424355:	mov    DWORD PTR ds:0x45cd84,0x1
  42435f:	mov    eax,ds:0x45cdb4
  424364:	mov    DWORD PTR [ebp+0x8],eax
  424367:	cmp    eax,DWORD PTR ds:0x45d024
  42436d:	je     0x42442e
  424373:	mov    esi,DWORD PTR ds:0x45cf18
  424379:	mov    DWORD PTR [ebp-0x20],esi
  42437c:	cmp    esi,edi
  42437e:	je     0x424384
  424380:	cmp    DWORD PTR [esi],edi
  424382:	je     0x424394
  424384:	push   0x220
  424389:	call   0x424582
  42438e:	pop    ecx
  42438f:	mov    esi,eax
  424391:	mov    DWORD PTR [ebp-0x20],esi
  424394:	cmp    esi,edi
  424396:	je     0x424417
  424398:	push   DWORD PTR [ebp+0x8]
  42439b:	call   0x424166
  4243a0:	pop    ecx
  4243a1:	mov    DWORD PTR [ebp-0x1c],eax
  4243a4:	cmp    eax,edi
  4243a6:	jne    0x424417
  4243a8:	mov    DWORD PTR [esi],edi
  4243aa:	mov    eax,ds:0x45d024
  4243af:	mov    DWORD PTR [esi+0x4],eax
  4243b2:	mov    eax,ds:0x45cf1c
  4243b7:	mov    DWORD PTR [esi+0x8],eax
  4243ba:	mov    eax,ds:0x45cf14
  4243bf:	mov    DWORD PTR [esi+0xc],eax
  4243c2:	xor    eax,eax
  4243c4:	mov    DWORD PTR [ebp-0x24],eax
  4243c7:	cmp    eax,0x5
  4243ca:	jge    0x4243dc
  4243cc:	mov    cx,WORD PTR [eax*2+0x45d030]
  4243d4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4243d9:	inc    eax
  4243da:	jmp    0x4243c4
  4243dc:	xor    eax,eax
  4243de:	mov    DWORD PTR [ebp-0x24],eax
  4243e1:	cmp    eax,0x101
  4243e6:	jge    0x4243f5
  4243e8:	mov    cl,BYTE PTR [eax+0x45cf20]
  4243ee:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4243f2:	inc    eax
  4243f3:	jmp    0x4243de
  4243f5:	xor    eax,eax
  4243f7:	mov    DWORD PTR [ebp-0x24],eax
  4243fa:	cmp    eax,0x100
  4243ff:	jge    0x424411
  424401:	mov    cl,BYTE PTR [eax+0x45d040]
  424407:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42440e:	inc    eax
  42440f:	jmp    0x4243f7
  424411:	mov    DWORD PTR ds:0x45cf18,esi
  424417:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42441b:	jne    0x424431
  42441d:	cmp    esi,DWORD PTR ds:0x45cf18
  424423:	je     0x424431
  424425:	push   esi
  424426:	call   0x42446a
  42442b:	pop    ecx
  42442c:	jmp    0x424431
  42442e:	mov    DWORD PTR [ebp-0x1c],edi
  424431:	or     DWORD PTR [ebp-0x4],0xffffffff
  424435:	call   0x424443
  42443a:	mov    eax,DWORD PTR [ebp-0x1c]
  42443d:	call   0x423893
  424442:	ret    
  424443:	push   0xd
  424445:	call   0x42398b
  42444a:	pop    ecx
  42444b:	ret    
  42444c:	cmp    DWORD PTR ds:0x45d26c,0x0
  424453:	jne    0x424467
  424455:	push   0xfffffffd
  424457:	call   0x4242fc
  42445c:	pop    ecx
  42445d:	mov    DWORD PTR ds:0x45d26c,0x1
  424467:	xor    eax,eax
  424469:	ret    
  42446a:	push   0xc
  42446c:	push   0x428560
  424471:	call   0x423858
  424476:	mov    esi,DWORD PTR [ebp+0x8]
  424479:	test   esi,esi
  42447b:	je     0x4244d5
  42447d:	cmp    DWORD PTR ds:0x45d144,0x3
  424484:	jne    0x4244c6
  424486:	push   0x4
  424488:	call   0x423a1f
  42448d:	pop    ecx
  42448e:	and    DWORD PTR [ebp-0x4],0x0
  424492:	push   esi
  424493:	call   0x424c42
  424498:	pop    ecx
  424499:	mov    DWORD PTR [ebp-0x1c],eax
  42449c:	test   eax,eax
  42449e:	je     0x4244a9
  4244a0:	push   esi
  4244a1:	push   eax
  4244a2:	call   0x424c6d
  4244a7:	pop    ecx
  4244a8:	pop    ecx
  4244a9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244ad:	call   0x4244bd
  4244b2:	cmp    DWORD PTR [ebp-0x1c],0x0
  4244b6:	jne    0x4244d5
  4244b8:	push   DWORD PTR [ebp+0x8]
  4244bb:	jmp    0x4244c7
  4244bd:	push   0x4
  4244bf:	call   0x42398b
  4244c4:	pop    ecx
  4244c5:	ret    
  4244c6:	push   esi
  4244c7:	push   0x0
  4244c9:	push   DWORD PTR ds:0x45d140
  4244cf:	call   DWORD PTR ds:0x428088
  4244d5:	call   0x423893
  4244da:	ret    
  4244db:	push   0xc
  4244dd:	push   0x428570
  4244e2:	call   0x423858
  4244e7:	mov    esi,DWORD PTR [ebp+0x8]
  4244ea:	cmp    DWORD PTR ds:0x45d144,0x3
  4244f1:	jne    0x424521
  4244f3:	cmp    esi,DWORD PTR ds:0x45cf04
  4244f9:	ja     0x424521
  4244fb:	push   0x4
  4244fd:	call   0x423a1f
  424502:	pop    ecx
  424503:	and    DWORD PTR [ebp-0x4],0x0
  424507:	push   esi
  424508:	call   0x425421
  42450d:	pop    ecx
  42450e:	mov    DWORD PTR [ebp-0x1c],eax
  424511:	or     DWORD PTR [ebp-0x4],0xffffffff
  424515:	call   0x42454d
  42451a:	mov    eax,DWORD PTR [ebp-0x1c]
  42451d:	test   eax,eax
  42451f:	jne    0x424544
  424521:	test   esi,esi
  424523:	jne    0x424526
  424525:	inc    esi
  424526:	cmp    DWORD PTR ds:0x45d144,0x1
  42452d:	je     0x424535
  42452f:	add    esi,0xf
  424532:	and    esi,0xfffffff0
  424535:	push   esi
  424536:	push   0x0
  424538:	push   DWORD PTR ds:0x45d140
  42453e:	call   DWORD PTR ds:0x4280a4
  424544:	call   0x423893
  424549:	ret    
  42454a:	mov    esi,DWORD PTR [ebp+0x8]
  42454d:	push   0x4
  42454f:	call   0x42398b
  424554:	pop    ecx
  424555:	ret    
  424556:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42455b:	ja     0x42457f
  42455d:	push   DWORD PTR [esp+0x4]
  424561:	call   0x4244db
  424566:	test   eax,eax
  424568:	pop    ecx
  424569:	jne    0x424581
  42456b:	cmp    DWORD PTR [esp+0x8],eax
  42456f:	je     0x424581
  424571:	push   DWORD PTR [esp+0x4]
  424575:	call   0x426142
  42457a:	test   eax,eax
  42457c:	pop    ecx
  42457d:	jne    0x42455d
  42457f:	xor    eax,eax
  424581:	ret    
  424582:	push   DWORD PTR ds:0x45cdc8
  424588:	push   DWORD PTR [esp+0x8]
  42458c:	call   0x424556
  424591:	pop    ecx
  424592:	pop    ecx
  424593:	ret    
  424594:	int3   
  424595:	int3   
  424596:	int3   
  424597:	int3   
  424598:	int3   
  424599:	int3   
  42459a:	int3   
  42459b:	int3   
  42459c:	int3   
  42459d:	int3   
  42459e:	int3   
  42459f:	int3   
  4245a0:	push   ebp
  4245a1:	mov    ebp,esp
  4245a3:	push   edi
  4245a4:	push   esi
  4245a5:	mov    esi,DWORD PTR [ebp+0xc]
  4245a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245ab:	mov    edi,DWORD PTR [ebp+0x8]
  4245ae:	mov    eax,ecx
  4245b0:	mov    edx,ecx
  4245b2:	add    eax,esi
  4245b4:	cmp    edi,esi
  4245b6:	jbe    0x4245c0
  4245b8:	cmp    edi,eax
  4245ba:	jb     0x42473c
  4245c0:	test   edi,0x3
  4245c6:	jne    0x4245dc
  4245c8:	shr    ecx,0x2
  4245cb:	and    edx,0x3
  4245ce:	cmp    ecx,0x8
  4245d1:	jb     0x4245fc
  4245d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245d5:	jmp    DWORD PTR [edx*4+0x4246ec]
  4245dc:	mov    eax,edi
  4245de:	mov    edx,0x3
  4245e3:	sub    ecx,0x4
  4245e6:	jb     0x4245f4
  4245e8:	and    eax,0x3
  4245eb:	add    ecx,eax
  4245ed:	jmp    DWORD PTR [eax*4+0x424600]
  4245f4:	jmp    DWORD PTR [ecx*4+0x4246fc]
  4245fb:	nop
  4245fc:	jmp    DWORD PTR [ecx*4+0x424680]
  424603:	nop
  424604:	adc    BYTE PTR [esi+0x42],al
  424607:	add    BYTE PTR [esi+eax*2],bh
  42460a:	inc    edx
  42460b:	add    BYTE PTR [eax+0x46],ah
  42460e:	inc    edx
  42460f:	add    BYTE PTR [ebx],ah
  424611:	ror    DWORD PTR [edx-0x75f877fa],1
  424617:	inc    esi
  424618:	add    DWORD PTR [eax+0x468a0147],ecx
  42461e:	add    al,cl
  424620:	jmp    0x289ce27
  424625:	add    esi,0x3
  424628:	add    edi,0x3
  42462b:	cmp    ecx,0x8
  42462e:	jb     0x4245fc
  424630:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424632:	jmp    DWORD PTR [edx*4+0x4246ec]
  424639:	lea    ecx,[ecx+0x0]
  42463c:	and    edx,ecx
  42463e:	mov    al,BYTE PTR [esi]
  424640:	mov    BYTE PTR [edi],al
  424642:	mov    al,BYTE PTR [esi+0x1]
  424645:	shr    ecx,0x2
  424648:	mov    BYTE PTR [edi+0x1],al
  42464b:	add    esi,0x2
  42464e:	add    edi,0x2
  424651:	cmp    ecx,0x8
  424654:	jb     0x4245fc
  424656:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424658:	jmp    DWORD PTR [edx*4+0x4246ec]
  42465f:	nop
  424660:	and    edx,ecx
  424662:	mov    al,BYTE PTR [esi]
  424664:	mov    BYTE PTR [edi],al
  424666:	add    esi,0x1
  424669:	shr    ecx,0x2
  42466c:	add    edi,0x1
  42466f:	cmp    ecx,0x8
  424672:	jb     0x4245fc
  424674:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424676:	jmp    DWORD PTR [edx*4+0x4246ec]
  42467d:	lea    ecx,[ecx+0x0]
  424680:	jecxz  0x4246c8
  424682:	inc    edx
  424683:	add    al,dl
  424685:	inc    esi
  424686:	inc    edx
  424687:	add    al,cl
  424689:	inc    esi
  42468a:	inc    edx
  42468b:	add    al,al
  42468d:	inc    esi
  42468e:	inc    edx
  42468f:	add    BYTE PTR [eax-0x4fffbdba],bh
  424695:	inc    esi
  424696:	inc    edx
  424697:	add    BYTE PTR [eax-0x5fffbdba],ch
  42469d:	inc    esi
  42469e:	inc    edx
  42469f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246a5:	inc    esp
  4246a6:	(bad)  
  4246a7:	in     al,0x8b
  4246a9:	inc    esp
  4246aa:	mov    gs,eax
  4246ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4246b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4246b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4246b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4246bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4246c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4246c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4246c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4246cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4246d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4246d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4246d8:	lea    eax,[ecx*4+0x0]
  4246df:	add    esi,eax
  4246e1:	add    edi,eax
  4246e3:	jmp    DWORD PTR [edx*4+0x4246ec]
  4246ea:	mov    edi,edi
  4246ec:	cld    
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [edi+eax*2],al
  4246f2:	inc    edx
  4246f3:	add    BYTE PTR [eax],dl
  4246f5:	inc    edi
  4246f6:	inc    edx
  4246f7:	add    BYTE PTR [edi+eax*2],ah
  4246fa:	inc    edx
  4246fb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424701:	leave  
  424702:	ret    
  424703:	nop
  424704:	mov    al,BYTE PTR [esi]
  424706:	mov    BYTE PTR [edi],al
  424708:	mov    eax,DWORD PTR [ebp+0x8]
  42470b:	pop    esi
  42470c:	pop    edi
  42470d:	leave  
  42470e:	ret    
  42470f:	nop
  424710:	mov    al,BYTE PTR [esi]
  424712:	mov    BYTE PTR [edi],al
  424714:	mov    al,BYTE PTR [esi+0x1]
  424717:	mov    BYTE PTR [edi+0x1],al
  42471a:	mov    eax,DWORD PTR [ebp+0x8]
  42471d:	pop    esi
  42471e:	pop    edi
  42471f:	leave  
  424720:	ret    
  424721:	lea    ecx,[ecx+0x0]
  424724:	mov    al,BYTE PTR [esi]
  424726:	mov    BYTE PTR [edi],al
  424728:	mov    al,BYTE PTR [esi+0x1]
  42472b:	mov    BYTE PTR [edi+0x1],al
  42472e:	mov    al,BYTE PTR [esi+0x2]
  424731:	mov    BYTE PTR [edi+0x2],al
  424734:	mov    eax,DWORD PTR [ebp+0x8]
  424737:	pop    esi
  424738:	pop    edi
  424739:	leave  
  42473a:	ret    
  42473b:	nop
  42473c:	lea    esi,[ecx+esi*1-0x4]
  424740:	lea    edi,[ecx+edi*1-0x4]
  424744:	test   edi,0x3
  42474a:	jne    0x424770
  42474c:	shr    ecx,0x2
  42474f:	and    edx,0x3
  424752:	cmp    ecx,0x8
  424755:	jb     0x424764
  424757:	std    
  424758:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42475a:	cld    
  42475b:	jmp    DWORD PTR [edx*4+0x424888]
  424762:	mov    edi,edi
  424764:	neg    ecx
  424766:	jmp    DWORD PTR [ecx*4+0x424838]
  42476d:	lea    ecx,[ecx+0x0]
  424770:	mov    eax,edi
  424772:	mov    edx,0x3
  424777:	cmp    ecx,0x4
  42477a:	jb     0x424788
  42477c:	and    eax,0x3
  42477f:	sub    ecx,eax
  424781:	jmp    DWORD PTR [eax*4+0x42478c]
  424788:	jmp    DWORD PTR [ecx*4+0x424888]
  42478f:	nop
  424790:	pushf  
  424791:	inc    edi
  424792:	inc    edx
  424793:	add    al,al
  424795:	inc    edi
  424796:	inc    edx
  424797:	add    al,ch
  424799:	inc    edi
  42479a:	inc    edx
  42479b:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247a1:	mov    BYTE PTR [edi+0x3],al
  4247a4:	sub    esi,0x1
  4247a7:	shr    ecx,0x2
  4247aa:	sub    edi,0x1
  4247ad:	cmp    ecx,0x8
  4247b0:	jb     0x424764
  4247b2:	std    
  4247b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247b5:	cld    
  4247b6:	jmp    DWORD PTR [edx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    al,BYTE PTR [esi+0x3]
  4247c3:	and    edx,ecx
  4247c5:	mov    BYTE PTR [edi+0x3],al
  4247c8:	mov    al,BYTE PTR [esi+0x2]
  4247cb:	shr    ecx,0x2
  4247ce:	mov    BYTE PTR [edi+0x2],al
  4247d1:	sub    esi,0x2
  4247d4:	sub    edi,0x2
  4247d7:	cmp    ecx,0x8
  4247da:	jb     0x424764
  4247dc:	std    
  4247dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247df:	cld    
  4247e0:	jmp    DWORD PTR [edx*4+0x424888]
  4247e7:	nop
  4247e8:	mov    al,BYTE PTR [esi+0x3]
  4247eb:	and    edx,ecx
  4247ed:	mov    BYTE PTR [edi+0x3],al
  4247f0:	mov    al,BYTE PTR [esi+0x2]
  4247f3:	mov    BYTE PTR [edi+0x2],al
  4247f6:	mov    al,BYTE PTR [esi+0x1]
  4247f9:	shr    ecx,0x2
  4247fc:	mov    BYTE PTR [edi+0x1],al
  4247ff:	sub    esi,0x3
  424802:	sub    edi,0x3
  424805:	cmp    ecx,0x8
  424808:	jb     0x424764
  42480e:	std    
  42480f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424811:	cld    
  424812:	jmp    DWORD PTR [edx*4+0x424888]
  424819:	lea    ecx,[ecx+0x0]
  42481c:	cmp    al,0x48
  42481e:	inc    edx
  42481f:	add    BYTE PTR [eax+ecx*2+0x42],al
  424823:	add    BYTE PTR [eax+ecx*2+0x42],cl
  424827:	add    BYTE PTR [eax+ecx*2+0x42],dl
  42482b:	add    BYTE PTR [eax+ecx*2+0x42],bl
  42482f:	add    BYTE PTR [eax+ecx*2+0x42],ah
  424833:	add    BYTE PTR [eax+ecx*2+0x42],ch
  424837:	add    BYTE PTR [edi+0x48],bh
  42483a:	inc    edx
  42483b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424841:	inc    esp
  424842:	(bad)  
  424843:	sbb    al,0x8b
  424845:	inc    esp
  424846:	mov    ds,WORD PTR [eax]
  424848:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42484c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424850:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424854:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424858:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42485c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424860:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424864:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424868:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42486c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424870:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424874:	lea    eax,[ecx*4+0x0]
  42487b:	add    esi,eax
  42487d:	add    edi,eax
  42487f:	jmp    DWORD PTR [edx*4+0x424888]
  424886:	mov    edi,edi
  424888:	cwde   
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [eax-0x4fffbdb8],ah
  424891:	dec    eax
  424892:	inc    edx
  424893:	add    ah,al
  424895:	dec    eax
  424896:	inc    edx
  424897:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42489d:	leave  
  42489e:	ret    
  42489f:	nop
  4248a0:	mov    al,BYTE PTR [esi+0x3]
  4248a3:	mov    BYTE PTR [edi+0x3],al
  4248a6:	mov    eax,DWORD PTR [ebp+0x8]
  4248a9:	pop    esi
  4248aa:	pop    edi
  4248ab:	leave  
  4248ac:	ret    
  4248ad:	lea    ecx,[ecx+0x0]
  4248b0:	mov    al,BYTE PTR [esi+0x3]
  4248b3:	mov    BYTE PTR [edi+0x3],al
  4248b6:	mov    al,BYTE PTR [esi+0x2]
  4248b9:	mov    BYTE PTR [edi+0x2],al
  4248bc:	mov    eax,DWORD PTR [ebp+0x8]
  4248bf:	pop    esi
  4248c0:	pop    edi
  4248c1:	leave  
  4248c2:	ret    
  4248c3:	nop
  4248c4:	mov    al,BYTE PTR [esi+0x3]
  4248c7:	mov    BYTE PTR [edi+0x3],al
  4248ca:	mov    al,BYTE PTR [esi+0x2]
  4248cd:	mov    BYTE PTR [edi+0x2],al
  4248d0:	mov    al,BYTE PTR [esi+0x1]
  4248d3:	mov    BYTE PTR [edi+0x1],al
  4248d6:	mov    eax,DWORD PTR [ebp+0x8]
  4248d9:	pop    esi
  4248da:	pop    edi
  4248db:	leave  
  4248dc:	ret    
  4248dd:	push   DWORD PTR [esp+0x4]
  4248e1:	call   DWORD PTR ds:0x4280a8
  4248e7:	xor    eax,eax
  4248e9:	inc    eax
  4248ea:	ret    0x8
  4248ed:	push   0x10
  4248ef:	push   0x4285b8
  4248f4:	call   0x423858
  4248f9:	mov    eax,ds:0x45cd88
  4248fe:	test   eax,eax
  424900:	jne    0x424939
  424902:	cmp    DWORD PTR ds:0x45cac4,0x1
  424909:	je     0x42492f
  42490b:	push   0x4285a4
  424910:	call   DWORD PTR ds:0x428014
  424916:	test   eax,eax
  424918:	je     0x42492f
  42491a:	push   0x42857c
  42491f:	push   eax
  424920:	call   DWORD PTR ds:0x428018
  424926:	mov    ds:0x45cd88,eax
  42492b:	test   eax,eax
  42492d:	jne    0x424939
  42492f:	mov    eax,0x4248dd
  424934:	mov    ds:0x45cd88,eax
  424939:	and    DWORD PTR [ebp-0x4],0x0
  42493d:	push   DWORD PTR [ebp+0xc]
  424940:	push   DWORD PTR [ebp+0x8]
  424943:	call   eax
  424945:	mov    DWORD PTR [ebp-0x1c],eax
  424948:	jmp    0x42496e
  42494a:	mov    eax,DWORD PTR [ebp-0x14]
  42494d:	mov    eax,DWORD PTR [eax]
  42494f:	mov    eax,DWORD PTR [eax]
  424951:	mov    DWORD PTR [ebp-0x20],eax
  424954:	xor    eax,eax
  424956:	inc    eax
  424957:	ret    
  424958:	mov    esp,DWORD PTR [ebp-0x18]
  42495b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424962:	jne    0x42496c
  424964:	push   0x8
  424966:	call   DWORD PTR ds:0x428068
  42496c:	xor    eax,eax
  42496e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424972:	call   0x423893
  424977:	ret    
  424978:	push   0x10
  42497a:	push   0x4285c8
  42497f:	call   0x423858
  424984:	mov    esi,DWORD PTR [ebp+0x8]
  424987:	imul   esi,DWORD PTR [ebp+0xc]
  42498b:	mov    DWORD PTR [ebp-0x1c],esi
  42498e:	test   esi,esi
  424990:	jne    0x424993
  424992:	inc    esi
  424993:	xor    edi,edi
  424995:	mov    DWORD PTR [ebp-0x20],edi
  424998:	cmp    esi,0xffffffe0
  42499b:	ja     0x424a02
  42499d:	cmp    DWORD PTR ds:0x45d144,0x3
  4249a4:	jne    0x4249ed
  4249a6:	add    esi,0xf
  4249a9:	and    esi,0xfffffff0
  4249ac:	mov    DWORD PTR [ebp+0xc],esi
  4249af:	mov    ebx,DWORD PTR [ebp-0x1c]
  4249b2:	cmp    ebx,DWORD PTR ds:0x45cf04
  4249b8:	ja     0x4249ed
  4249ba:	push   0x4
  4249bc:	call   0x423a1f
  4249c1:	pop    ecx
  4249c2:	and    DWORD PTR [ebp-0x4],edi
  4249c5:	push   ebx
  4249c6:	call   0x425421
  4249cb:	pop    ecx
  4249cc:	mov    DWORD PTR [ebp-0x20],eax
  4249cf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249d3:	call   0x424a22
  4249d8:	mov    edi,DWORD PTR [ebp-0x20]
  4249db:	test   edi,edi
  4249dd:	je     0x4249f1
  4249df:	push   DWORD PTR [ebp-0x1c]
  4249e2:	push   0x0
  4249e4:	push   edi
  4249e5:	call   0x426160
  4249ea:	add    esp,0xc
  4249ed:	test   edi,edi
  4249ef:	jne    0x424a2b
  4249f1:	push   esi
  4249f2:	push   0x8
  4249f4:	push   DWORD PTR ds:0x45d140
  4249fa:	call   DWORD PTR ds:0x4280a4
  424a00:	mov    edi,eax
  424a02:	test   edi,edi
  424a04:	jne    0x424a2b
  424a06:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a0c:	je     0x424a2b
  424a0e:	push   esi
  424a0f:	call   0x426142
  424a14:	pop    ecx
  424a15:	test   eax,eax
  424a17:	jne    0x424993
  424a1d:	jmp    0x424a2d
  424a1f:	mov    esi,DWORD PTR [ebp+0xc]
  424a22:	push   0x4
  424a24:	call   0x42398b
  424a29:	pop    ecx
  424a2a:	ret    
  424a2b:	mov    eax,edi
  424a2d:	call   0x423893
  424a32:	ret    
  424a33:	push   esi
  424a34:	mov    esi,DWORD PTR [esp+0x8]
  424a38:	mov    eax,DWORD PTR [esi+0x3c]
  424a3b:	push   edi
  424a3c:	xor    edi,edi
  424a3e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a44:	je     0x424aa9
  424a46:	cmp    eax,edi
  424a48:	je     0x424aa9
  424a4a:	mov    eax,DWORD PTR [esi+0x2c]
  424a4d:	cmp    DWORD PTR [eax],edi
  424a4f:	jne    0x424aa9
  424a51:	mov    eax,DWORD PTR [esi+0x34]
  424a54:	cmp    eax,edi
  424a56:	je     0x424a74
  424a58:	cmp    DWORD PTR [eax],edi
  424a5a:	jne    0x424a74
  424a5c:	cmp    eax,DWORD PTR ds:0x45cef0
  424a62:	je     0x424a74
  424a64:	push   eax
  424a65:	call   0x42446a
  424a6a:	push   DWORD PTR [esi+0x3c]
  424a6d:	call   0x4263af
  424a72:	pop    ecx
  424a73:	pop    ecx
  424a74:	mov    eax,DWORD PTR [esi+0x30]
  424a77:	cmp    eax,edi
  424a79:	je     0x424a97
  424a7b:	cmp    DWORD PTR [eax],edi
  424a7d:	jne    0x424a97
  424a7f:	cmp    eax,DWORD PTR ds:0x45cef4
  424a85:	je     0x424a97
  424a87:	push   eax
  424a88:	call   0x42446a
  424a8d:	push   DWORD PTR [esi+0x3c]
  424a90:	call   0x426350
  424a95:	pop    ecx
  424a96:	pop    ecx
  424a97:	push   DWORD PTR [esi+0x2c]
  424a9a:	call   0x42446a
  424a9f:	push   DWORD PTR [esi+0x3c]
  424aa2:	call   0x42446a
  424aa7:	pop    ecx
  424aa8:	pop    ecx
  424aa9:	mov    eax,DWORD PTR [esi+0x40]
  424aac:	cmp    eax,DWORD PTR ds:0x45ceec
  424ab2:	je     0x424acc
  424ab4:	cmp    eax,edi
  424ab6:	je     0x424acc
  424ab8:	cmp    DWORD PTR [eax],edi
  424aba:	jne    0x424acc
  424abc:	push   eax
  424abd:	call   0x42446a
  424ac2:	push   DWORD PTR [esi+0x44]
  424ac5:	call   0x42446a
  424aca:	pop    ecx
  424acb:	pop    ecx
  424acc:	mov    eax,DWORD PTR [esi+0x50]
  424acf:	cmp    eax,DWORD PTR ds:0x45cdd0
  424ad5:	je     0x424af3
  424ad7:	cmp    eax,edi
  424ad9:	je     0x424af3
  424adb:	cmp    DWORD PTR [eax+0xb4],edi
  424ae1:	jne    0x424af3
  424ae3:	push   eax
  424ae4:	call   0x4261c0
  424ae9:	push   DWORD PTR [esi+0x50]
  424aec:	call   0x42446a
  424af1:	pop    ecx
  424af2:	pop    ecx
  424af3:	push   esi
  424af4:	call   0x42446a
  424af9:	pop    ecx
  424afa:	pop    edi
  424afb:	pop    esi
  424afc:	ret    
  424afd:	push   esi
  424afe:	call   0x42370d
  424b03:	mov    esi,eax
  424b05:	mov    eax,DWORD PTR [esi+0x64]
  424b08:	cmp    eax,DWORD PTR ds:0x45c58c
  424b0e:	je     0x424bba
  424b14:	test   eax,eax
  424b16:	je     0x424b47
  424b18:	mov    ecx,DWORD PTR [eax+0x2c]
  424b1b:	dec    DWORD PTR [eax]
  424b1d:	test   ecx,ecx
  424b1f:	je     0x424b23
  424b21:	dec    DWORD PTR [ecx]
  424b23:	mov    ecx,DWORD PTR [eax+0x34]
  424b26:	test   ecx,ecx
  424b28:	je     0x424b2c
  424b2a:	dec    DWORD PTR [ecx]
  424b2c:	mov    ecx,DWORD PTR [eax+0x30]
  424b2f:	test   ecx,ecx
  424b31:	je     0x424b35
  424b33:	dec    DWORD PTR [ecx]
  424b35:	mov    ecx,DWORD PTR [eax+0x40]
  424b38:	test   ecx,ecx
  424b3a:	je     0x424b3e
  424b3c:	dec    DWORD PTR [ecx]
  424b3e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b41:	dec    DWORD PTR [ecx+0xb4]
  424b47:	mov    ecx,DWORD PTR ds:0x45c58c
  424b4d:	mov    DWORD PTR [esi+0x64],ecx
  424b50:	mov    ecx,DWORD PTR ds:0x45c58c
  424b56:	inc    DWORD PTR [ecx]
  424b58:	mov    ecx,DWORD PTR ds:0x45c58c
  424b5e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424b61:	test   ecx,ecx
  424b63:	je     0x424b67
  424b65:	inc    DWORD PTR [ecx]
  424b67:	mov    ecx,DWORD PTR ds:0x45c58c
  424b6d:	mov    ecx,DWORD PTR [ecx+0x34]
  424b70:	test   ecx,ecx
  424b72:	je     0x424b76
  424b74:	inc    DWORD PTR [ecx]
  424b76:	mov    ecx,DWORD PTR ds:0x45c58c
  424b7c:	mov    ecx,DWORD PTR [ecx+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	inc    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR ds:0x45c58c
  424b8b:	mov    ecx,DWORD PTR [ecx+0x40]
  424b8e:	test   ecx,ecx
  424b90:	je     0x424b94
  424b92:	inc    DWORD PTR [ecx]
  424b94:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424b9d:	inc    DWORD PTR [ecx+0xb4]
  424ba3:	test   eax,eax
  424ba5:	je     0x424bba
  424ba7:	cmp    DWORD PTR [eax],0x0
  424baa:	jne    0x424bba
  424bac:	cmp    eax,0x45c538
  424bb1:	je     0x424bba
  424bb3:	push   eax
  424bb4:	call   0x424a33
  424bb9:	pop    ecx
  424bba:	mov    eax,DWORD PTR [esi+0x64]
  424bbd:	pop    esi
  424bbe:	ret    
  424bbf:	push   0xc
  424bc1:	push   0x428758
  424bc6:	call   0x423858
  424bcb:	push   0xc
  424bcd:	call   0x423a1f
  424bd2:	pop    ecx
  424bd3:	and    DWORD PTR [ebp-0x4],0x0
  424bd7:	call   0x424afd
  424bdc:	mov    DWORD PTR [ebp-0x1c],eax
  424bdf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424be3:	call   0x424bf1
  424be8:	mov    eax,DWORD PTR [ebp-0x1c]
  424beb:	call   0x423893
  424bf0:	ret    
  424bf1:	push   0xc
  424bf3:	call   0x42398b
  424bf8:	pop    ecx
  424bf9:	ret    
  424bfa:	push   0x140
  424bff:	push   0x0
  424c01:	push   DWORD PTR ds:0x45d140
  424c07:	call   DWORD PTR ds:0x4280a4
  424c0d:	test   eax,eax
  424c0f:	mov    ds:0x45cf00,eax
  424c14:	jne    0x424c17
  424c16:	ret    
  424c17:	mov    ecx,DWORD PTR [esp+0x4]
  424c1b:	and    DWORD PTR ds:0x45cef8,0x0
  424c22:	and    DWORD PTR ds:0x45cefc,0x0
  424c29:	mov    ds:0x45cf08,eax
  424c2e:	xor    eax,eax
  424c30:	mov    DWORD PTR ds:0x45cf04,ecx
  424c36:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c40:	inc    eax
  424c41:	ret    
  424c42:	mov    eax,ds:0x45cefc
  424c47:	lea    ecx,[eax+eax*4]
  424c4a:	mov    eax,ds:0x45cf00
  424c4f:	lea    ecx,[eax+ecx*4]
  424c52:	jmp    0x424c66
  424c54:	mov    edx,DWORD PTR [esp+0x4]
  424c58:	sub    edx,DWORD PTR [eax+0xc]
  424c5b:	cmp    edx,0x100000
  424c61:	jb     0x424c6c
  424c63:	add    eax,0x14
  424c66:	cmp    eax,ecx
  424c68:	jb     0x424c54
  424c6a:	xor    eax,eax
  424c6c:	ret    
  424c6d:	push   ebp
  424c6e:	mov    ebp,esp
  424c70:	sub    esp,0x10
  424c73:	mov    ecx,DWORD PTR [ebp+0x8]
  424c76:	mov    eax,DWORD PTR [ecx+0x10]
  424c79:	push   esi
  424c7a:	mov    esi,DWORD PTR [ebp+0xc]
  424c7d:	push   edi
  424c7e:	mov    edi,esi
  424c80:	sub    edi,DWORD PTR [ecx+0xc]
  424c83:	add    esi,0xfffffffc
  424c86:	shr    edi,0xf
  424c89:	mov    ecx,edi
  424c8b:	imul   ecx,ecx,0x204
  424c91:	lea    ecx,[ecx+eax*1+0x144]
  424c98:	mov    DWORD PTR [ebp-0x10],ecx
  424c9b:	mov    ecx,DWORD PTR [esi]
  424c9d:	dec    ecx
  424c9e:	test   cl,0x1
  424ca1:	mov    DWORD PTR [ebp-0x4],ecx
  424ca4:	jne    0x424f81
  424caa:	push   ebx
  424cab:	lea    ebx,[ecx+esi*1]
  424cae:	mov    edx,DWORD PTR [ebx]
  424cb0:	mov    DWORD PTR [ebp-0xc],edx
  424cb3:	mov    edx,DWORD PTR [esi-0x4]
  424cb6:	mov    DWORD PTR [ebp-0x8],edx
  424cb9:	mov    edx,DWORD PTR [ebp-0xc]
  424cbc:	test   dl,0x1
  424cbf:	mov    DWORD PTR [ebp+0xc],ebx
  424cc2:	jne    0x424d38
  424cc4:	sar    edx,0x4
  424cc7:	dec    edx
  424cc8:	cmp    edx,0x3f
  424ccb:	jbe    0x424cd0
  424ccd:	push   0x3f
  424ccf:	pop    edx
  424cd0:	mov    ecx,DWORD PTR [ebx+0x4]
  424cd3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424cd6:	jne    0x424d1a
  424cd8:	cmp    edx,0x20
  424cdb:	mov    ebx,0x80000000
  424ce0:	jae    0x424cfb
  424ce2:	mov    ecx,edx
  424ce4:	shr    ebx,cl
  424ce6:	lea    ecx,[edx+eax*1+0x4]
  424cea:	not    ebx
  424cec:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424cf0:	dec    BYTE PTR [ecx]
  424cf2:	jne    0x424d17
  424cf4:	mov    ecx,DWORD PTR [ebp+0x8]
  424cf7:	and    DWORD PTR [ecx],ebx
  424cf9:	jmp    0x424d17
  424cfb:	lea    ecx,[edx-0x20]
  424cfe:	shr    ebx,cl
  424d00:	lea    ecx,[edx+eax*1+0x4]
  424d04:	not    ebx
  424d06:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d0d:	dec    BYTE PTR [ecx]
  424d0f:	jne    0x424d17
  424d11:	mov    ecx,DWORD PTR [ebp+0x8]
  424d14:	and    DWORD PTR [ecx+0x4],ebx
  424d17:	mov    ebx,DWORD PTR [ebp+0xc]
  424d1a:	mov    edx,DWORD PTR [ebx+0x8]
  424d1d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d20:	mov    ecx,DWORD PTR [ebp-0x4]
  424d23:	add    ecx,DWORD PTR [ebp-0xc]
  424d26:	mov    DWORD PTR [edx+0x4],ebx
  424d29:	mov    edx,DWORD PTR [ebp+0xc]
  424d2c:	mov    ebx,DWORD PTR [edx+0x4]
  424d2f:	mov    edx,DWORD PTR [edx+0x8]
  424d32:	mov    DWORD PTR [ebx+0x8],edx
  424d35:	mov    DWORD PTR [ebp-0x4],ecx
  424d38:	mov    edx,ecx
  424d3a:	sar    edx,0x4
  424d3d:	dec    edx
  424d3e:	cmp    edx,0x3f
  424d41:	jbe    0x424d46
  424d43:	push   0x3f
  424d45:	pop    edx
  424d46:	mov    ebx,DWORD PTR [ebp-0x8]
  424d49:	and    ebx,0x1
  424d4c:	mov    DWORD PTR [ebp-0xc],ebx
  424d4f:	jne    0x424de4
  424d55:	sub    esi,DWORD PTR [ebp-0x8]
  424d58:	mov    ebx,DWORD PTR [ebp-0x8]
  424d5b:	sar    ebx,0x4
  424d5e:	push   0x3f
  424d60:	mov    DWORD PTR [ebp+0xc],esi
  424d63:	dec    ebx
  424d64:	pop    esi
  424d65:	cmp    ebx,esi
  424d67:	jbe    0x424d6b
  424d69:	mov    ebx,esi
  424d6b:	add    ecx,DWORD PTR [ebp-0x8]
  424d6e:	mov    edx,ecx
  424d70:	sar    edx,0x4
  424d73:	dec    edx
  424d74:	cmp    edx,esi
  424d76:	mov    DWORD PTR [ebp-0x4],ecx
  424d79:	jbe    0x424d7d
  424d7b:	mov    edx,esi
  424d7d:	cmp    ebx,edx
  424d7f:	je     0x424ddf
  424d81:	mov    ecx,DWORD PTR [ebp+0xc]
  424d84:	mov    esi,DWORD PTR [ecx+0x4]
  424d87:	cmp    esi,DWORD PTR [ecx+0x8]
  424d8a:	jne    0x424dc7
  424d8c:	cmp    ebx,0x20
  424d8f:	mov    esi,0x80000000
  424d94:	jae    0x424dad
  424d96:	mov    ecx,ebx
  424d98:	shr    esi,cl
  424d9a:	not    esi
  424d9c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424da0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424da4:	jne    0x424dc7
  424da6:	mov    ecx,DWORD PTR [ebp+0x8]
  424da9:	and    DWORD PTR [ecx],esi
  424dab:	jmp    0x424dc7
  424dad:	lea    ecx,[ebx-0x20]
  424db0:	shr    esi,cl
  424db2:	not    esi
  424db4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424dbb:	dec    BYTE PTR [ebx+eax*1+0x4]
  424dbf:	jne    0x424dc7
  424dc1:	mov    ecx,DWORD PTR [ebp+0x8]
  424dc4:	and    DWORD PTR [ecx+0x4],esi
  424dc7:	mov    ecx,DWORD PTR [ebp+0xc]
  424dca:	mov    esi,DWORD PTR [ecx+0x8]
  424dcd:	mov    ecx,DWORD PTR [ecx+0x4]
  424dd0:	mov    DWORD PTR [esi+0x4],ecx
  424dd3:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd6:	mov    esi,DWORD PTR [ecx+0x4]
  424dd9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ddc:	mov    DWORD PTR [esi+0x8],ecx
  424ddf:	mov    esi,DWORD PTR [ebp+0xc]
  424de2:	jmp    0x424de7
  424de4:	mov    ebx,DWORD PTR [ebp+0x8]
  424de7:	cmp    DWORD PTR [ebp-0xc],0x0
  424deb:	jne    0x424df5
  424ded:	cmp    ebx,edx
  424def:	je     0x424e75
  424df5:	mov    ecx,DWORD PTR [ebp-0x10]
  424df8:	lea    ecx,[ecx+edx*8]
  424dfb:	mov    ebx,DWORD PTR [ecx+0x4]
  424dfe:	mov    DWORD PTR [esi+0x8],ecx
  424e01:	mov    DWORD PTR [esi+0x4],ebx
  424e04:	mov    DWORD PTR [ecx+0x4],esi
  424e07:	mov    ecx,DWORD PTR [esi+0x4]
  424e0a:	mov    DWORD PTR [ecx+0x8],esi
  424e0d:	mov    ecx,DWORD PTR [esi+0x4]
  424e10:	cmp    ecx,DWORD PTR [esi+0x8]
  424e13:	jne    0x424e75
  424e15:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e19:	mov    BYTE PTR [ebp+0xf],cl
  424e1c:	inc    cl
  424e1e:	cmp    edx,0x20
  424e21:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e25:	jae    0x424e4c
  424e27:	cmp    BYTE PTR [ebp+0xf],0x0
  424e2b:	jne    0x424e3b
  424e2d:	mov    ecx,edx
  424e2f:	mov    ebx,0x80000000
  424e34:	shr    ebx,cl
  424e36:	mov    ecx,DWORD PTR [ebp+0x8]
  424e39:	or     DWORD PTR [ecx],ebx
  424e3b:	mov    ebx,0x80000000
  424e40:	mov    ecx,edx
  424e42:	shr    ebx,cl
  424e44:	lea    eax,[eax+edi*4+0x44]
  424e48:	or     DWORD PTR [eax],ebx
  424e4a:	jmp    0x424e75
  424e4c:	cmp    BYTE PTR [ebp+0xf],0x0
  424e50:	jne    0x424e62
  424e52:	lea    ecx,[edx-0x20]
  424e55:	mov    ebx,0x80000000
  424e5a:	shr    ebx,cl
  424e5c:	mov    ecx,DWORD PTR [ebp+0x8]
  424e5f:	or     DWORD PTR [ecx+0x4],ebx
  424e62:	lea    ecx,[edx-0x20]
  424e65:	mov    edx,0x80000000
  424e6a:	shr    edx,cl
  424e6c:	lea    eax,[eax+edi*4+0xc4]
  424e73:	or     DWORD PTR [eax],edx
  424e75:	mov    eax,DWORD PTR [ebp-0x4]
  424e78:	mov    DWORD PTR [esi],eax
  424e7a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424e7e:	mov    eax,DWORD PTR [ebp-0x10]
  424e81:	dec    DWORD PTR [eax]
  424e83:	jne    0x424f80
  424e89:	mov    eax,ds:0x45cef8
  424e8e:	test   eax,eax
  424e90:	je     0x424f72
  424e96:	mov    ecx,DWORD PTR ds:0x45cf10
  424e9c:	mov    esi,DWORD PTR ds:0x428084
  424ea2:	push   0x4000
  424ea7:	shl    ecx,0xf
  424eaa:	add    ecx,DWORD PTR [eax+0xc]
  424ead:	mov    ebx,0x8000
  424eb2:	push   ebx
  424eb3:	push   ecx
  424eb4:	call   esi
  424eb6:	mov    ecx,DWORD PTR ds:0x45cf10
  424ebc:	mov    eax,ds:0x45cef8
  424ec1:	mov    edx,0x80000000
  424ec6:	shr    edx,cl
  424ec8:	or     DWORD PTR [eax+0x8],edx
  424ecb:	mov    eax,ds:0x45cef8
  424ed0:	mov    eax,DWORD PTR [eax+0x10]
  424ed3:	mov    ecx,DWORD PTR ds:0x45cf10
  424ed9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424ee1:	mov    eax,ds:0x45cef8
  424ee6:	mov    eax,DWORD PTR [eax+0x10]
  424ee9:	dec    BYTE PTR [eax+0x43]
  424eec:	mov    eax,ds:0x45cef8
  424ef1:	mov    ecx,DWORD PTR [eax+0x10]
  424ef4:	cmp    BYTE PTR [ecx+0x43],0x0
  424ef8:	jne    0x424f03
  424efa:	and    DWORD PTR [eax+0x4],0xfffffffe
  424efe:	mov    eax,ds:0x45cef8
  424f03:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f07:	jne    0x424f72
  424f09:	push   ebx
  424f0a:	push   0x0
  424f0c:	push   DWORD PTR [eax+0xc]
  424f0f:	call   esi
  424f11:	mov    eax,ds:0x45cef8
  424f16:	push   DWORD PTR [eax+0x10]
  424f19:	push   0x0
  424f1b:	push   DWORD PTR ds:0x45d140
  424f21:	call   DWORD PTR ds:0x428088
  424f27:	mov    eax,ds:0x45cefc
  424f2c:	mov    edx,DWORD PTR ds:0x45cf00
  424f32:	lea    eax,[eax+eax*4]
  424f35:	shl    eax,0x2
  424f38:	mov    ecx,eax
  424f3a:	mov    eax,ds:0x45cef8
  424f3f:	sub    ecx,eax
  424f41:	lea    ecx,[ecx+edx*1-0x14]
  424f45:	push   ecx
  424f46:	lea    ecx,[eax+0x14]
  424f49:	push   ecx
  424f4a:	push   eax
  424f4b:	call   0x4267a0
  424f50:	mov    eax,DWORD PTR [ebp+0x8]
  424f53:	add    esp,0xc
  424f56:	dec    DWORD PTR ds:0x45cefc
  424f5c:	cmp    eax,DWORD PTR ds:0x45cef8
  424f62:	jbe    0x424f68
  424f64:	sub    DWORD PTR [ebp+0x8],0x14
  424f68:	mov    eax,ds:0x45cf00
  424f6d:	mov    ds:0x45cf08,eax
  424f72:	mov    eax,DWORD PTR [ebp+0x8]
  424f75:	mov    ds:0x45cef8,eax
  424f7a:	mov    DWORD PTR ds:0x45cf10,edi
  424f80:	pop    ebx
  424f81:	pop    edi
  424f82:	pop    esi
  424f83:	leave  
  424f84:	ret    
  424f85:	mov    eax,ds:0x45cefc
  424f8a:	mov    ecx,DWORD PTR ds:0x45cf0c
  424f90:	push   edi
  424f91:	xor    edi,edi
  424f93:	cmp    eax,ecx
  424f95:	jne    0x424fcb
  424f97:	lea    eax,[ecx+ecx*4+0x50]
  424f9b:	shl    eax,0x2
  424f9e:	push   eax
  424f9f:	push   DWORD PTR ds:0x45cf00
  424fa5:	push   edi
  424fa6:	push   DWORD PTR ds:0x45d140
  424fac:	call   DWORD PTR ds:0x4280b0
  424fb2:	cmp    eax,edi
  424fb4:	jne    0x424fba
  424fb6:	xor    eax,eax
  424fb8:	pop    edi
  424fb9:	ret    
  424fba:	add    DWORD PTR ds:0x45cf0c,0x10
  424fc1:	mov    ds:0x45cf00,eax
  424fc6:	mov    eax,ds:0x45cefc
  424fcb:	mov    ecx,DWORD PTR ds:0x45cf00
  424fd1:	push   esi
  424fd2:	push   0x41c4
  424fd7:	push   0x8
  424fd9:	push   DWORD PTR ds:0x45d140
  424fdf:	lea    eax,[eax+eax*4]
  424fe2:	lea    esi,[ecx+eax*4]
  424fe5:	call   DWORD PTR ds:0x4280a4
  424feb:	cmp    eax,edi
  424fed:	mov    DWORD PTR [esi+0x10],eax
  424ff0:	jne    0x424ff6
  424ff2:	xor    eax,eax
  424ff4:	jmp    0x425039
  424ff6:	push   0x4
  424ff8:	push   0x2000
  424ffd:	push   0x100000
  425002:	push   edi
  425003:	call   DWORD PTR ds:0x4280ac
  425009:	cmp    eax,edi
  42500b:	mov    DWORD PTR [esi+0xc],eax
  42500e:	jne    0x425022
  425010:	push   DWORD PTR [esi+0x10]
  425013:	push   edi
  425014:	push   DWORD PTR ds:0x45d140
  42501a:	call   DWORD PTR ds:0x428088
  425020:	jmp    0x424ff2
  425022:	or     DWORD PTR [esi+0x8],0xffffffff
  425026:	mov    DWORD PTR [esi],edi
  425028:	mov    DWORD PTR [esi+0x4],edi
  42502b:	inc    DWORD PTR ds:0x45cefc
  425031:	mov    eax,DWORD PTR [esi+0x10]
  425034:	or     DWORD PTR [eax],0xffffffff
  425037:	mov    eax,esi
  425039:	pop    esi
  42503a:	pop    edi
  42503b:	ret    
  42503c:	push   ebp
  42503d:	mov    ebp,esp
  42503f:	push   ecx
  425040:	push   ecx
  425041:	mov    ecx,DWORD PTR [ebp+0x8]
  425044:	mov    eax,DWORD PTR [ecx+0x8]
  425047:	push   ebx
  425048:	push   esi
  425049:	mov    esi,DWORD PTR [ecx+0x10]
  42504c:	push   edi
  42504d:	xor    ebx,ebx
  42504f:	jmp    0x425054
  425051:	shl    eax,1
  425053:	inc    ebx
  425054:	test   eax,eax
  425056:	jge    0x425051
  425058:	mov    eax,ebx
  42505a:	imul   eax,eax,0x204
  425060:	lea    eax,[eax+esi*1+0x144]
  425067:	push   0x3f
  425069:	mov    DWORD PTR [ebp-0x8],eax
  42506c:	pop    edx
  42506d:	mov    DWORD PTR [eax+0x8],eax
  425070:	mov    DWORD PTR [eax+0x4],eax
  425073:	add    eax,0x8
  425076:	dec    edx
  425077:	jne    0x42506d
  425079:	push   0x4
  42507b:	mov    edi,ebx
  42507d:	push   0x1000
  425082:	shl    edi,0xf
  425085:	add    edi,DWORD PTR [ecx+0xc]
  425088:	push   0x8000
  42508d:	push   edi
  42508e:	call   DWORD PTR ds:0x4280ac
  425094:	test   eax,eax
  425096:	jne    0x4250a0
  425098:	or     eax,0xffffffff
  42509b:	jmp    0x42513d
  4250a0:	lea    edx,[edi+0x7000]
  4250a6:	cmp    edi,edx
  4250a8:	mov    DWORD PTR [ebp-0x4],edx
  4250ab:	ja     0x4250f0
  4250ad:	mov    ecx,edx
  4250af:	sub    ecx,edi
  4250b1:	shr    ecx,0xc
  4250b4:	lea    eax,[edi+0x10]
  4250b7:	inc    ecx
  4250b8:	or     DWORD PTR [eax-0x8],0xffffffff
  4250bc:	or     DWORD PTR [eax+0xfec],0xffffffff
  4250c3:	lea    edx,[eax+0xffc]
  4250c9:	mov    DWORD PTR [eax],edx
  4250cb:	lea    edx,[eax-0x1004]
  4250d1:	mov    DWORD PTR [eax-0x4],0xff0
  4250d8:	mov    DWORD PTR [eax+0x4],edx
  4250db:	mov    DWORD PTR [eax+0xfe8],0xff0
  4250e5:	add    eax,0x1000
  4250ea:	dec    ecx
  4250eb:	jne    0x4250b8
  4250ed:	mov    edx,DWORD PTR [ebp-0x4]
  4250f0:	mov    eax,DWORD PTR [ebp-0x8]
  4250f3:	add    eax,0x1f8
  4250f8:	lea    ecx,[edi+0xc]
  4250fb:	mov    DWORD PTR [eax+0x4],ecx
  4250fe:	mov    DWORD PTR [ecx+0x8],eax
  425101:	lea    ecx,[edx+0xc]
  425104:	mov    DWORD PTR [eax+0x8],ecx
  425107:	mov    DWORD PTR [ecx+0x4],eax
  42510a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42510f:	xor    edi,edi
  425111:	inc    edi
  425112:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425119:	mov    al,BYTE PTR [esi+0x43]
  42511c:	mov    cl,al
  42511e:	inc    cl
  425120:	test   al,al
  425122:	mov    eax,DWORD PTR [ebp+0x8]
  425125:	mov    BYTE PTR [esi+0x43],cl
  425128:	jne    0x42512d
  42512a:	or     DWORD PTR [eax+0x4],edi
  42512d:	mov    edx,0x80000000
  425132:	mov    ecx,ebx
  425134:	shr    edx,cl
  425136:	not    edx
  425138:	and    DWORD PTR [eax+0x8],edx
  42513b:	mov    eax,ebx
  42513d:	pop    edi
  42513e:	pop    esi
  42513f:	pop    ebx
  425140:	leave  
  425141:	ret    
  425142:	push   ebp
  425143:	mov    ebp,esp
  425145:	sub    esp,0xc
  425148:	mov    ecx,DWORD PTR [ebp+0x8]
  42514b:	mov    eax,DWORD PTR [ecx+0x10]
  42514e:	push   ebx
  42514f:	push   esi
  425150:	mov    esi,DWORD PTR [ebp+0x10]
  425153:	push   edi
  425154:	mov    edi,DWORD PTR [ebp+0xc]
  425157:	mov    edx,edi
  425159:	sub    edx,DWORD PTR [ecx+0xc]
  42515c:	add    esi,0x17
  42515f:	shr    edx,0xf
  425162:	mov    ecx,edx
  425164:	imul   ecx,ecx,0x204
  42516a:	lea    ecx,[ecx+eax*1+0x144]
  425171:	mov    DWORD PTR [ebp-0xc],ecx
  425174:	mov    ecx,DWORD PTR [edi-0x4]
  425177:	and    esi,0xfffffff0
  42517a:	dec    ecx
  42517b:	cmp    esi,ecx
  42517d:	lea    edi,[ecx+edi*1-0x4]
  425181:	mov    ebx,DWORD PTR [edi]
  425183:	mov    DWORD PTR [ebp+0x10],ecx
  425186:	mov    DWORD PTR [ebp-0x4],ebx
  425189:	jle    0x4252e4
  42518f:	test   bl,0x1
  425192:	jne    0x4252dd
  425198:	add    ebx,ecx
  42519a:	cmp    esi,ebx
  42519c:	jg     0x4252dd
  4251a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251a5:	sar    ecx,0x4
  4251a8:	dec    ecx
  4251a9:	cmp    ecx,0x3f
  4251ac:	mov    DWORD PTR [ebp-0x8],ecx
  4251af:	jbe    0x4251b7
  4251b1:	push   0x3f
  4251b3:	pop    ecx
  4251b4:	mov    DWORD PTR [ebp-0x8],ecx
  4251b7:	mov    ebx,DWORD PTR [edi+0x4]
  4251ba:	cmp    ebx,DWORD PTR [edi+0x8]
  4251bd:	jne    0x425202
  4251bf:	cmp    ecx,0x20
  4251c2:	mov    ebx,0x80000000
  4251c7:	jae    0x4251e3
  4251c9:	shr    ebx,cl
  4251cb:	mov    ecx,DWORD PTR [ebp-0x8]
  4251ce:	lea    ecx,[ecx+eax*1+0x4]
  4251d2:	not    ebx
  4251d4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4251d8:	dec    BYTE PTR [ecx]
  4251da:	jne    0x425202
  4251dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251df:	and    DWORD PTR [ecx],ebx
  4251e1:	jmp    0x425202
  4251e3:	add    ecx,0xffffffe0
  4251e6:	shr    ebx,cl
  4251e8:	mov    ecx,DWORD PTR [ebp-0x8]
  4251eb:	lea    ecx,[ecx+eax*1+0x4]
  4251ef:	not    ebx
  4251f1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4251f8:	dec    BYTE PTR [ecx]
  4251fa:	jne    0x425202
  4251fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251ff:	and    DWORD PTR [ecx+0x4],ebx
  425202:	mov    ecx,DWORD PTR [edi+0x8]
  425205:	mov    ebx,DWORD PTR [edi+0x4]
  425208:	mov    DWORD PTR [ecx+0x4],ebx
  42520b:	mov    ecx,DWORD PTR [edi+0x4]
  42520e:	mov    edi,DWORD PTR [edi+0x8]
  425211:	mov    DWORD PTR [ecx+0x8],edi
  425214:	mov    ecx,DWORD PTR [ebp+0x10]
  425217:	sub    ecx,esi
  425219:	add    DWORD PTR [ebp-0x4],ecx
  42521c:	cmp    DWORD PTR [ebp-0x4],0x0
  425220:	jle    0x4252cb
  425226:	mov    edi,DWORD PTR [ebp-0x4]
  425229:	mov    ecx,DWORD PTR [ebp+0xc]
  42522c:	sar    edi,0x4
  42522f:	dec    edi
  425230:	cmp    edi,0x3f
  425233:	lea    ecx,[ecx+esi*1-0x4]
  425237:	jbe    0x42523c
  425239:	push   0x3f
  42523b:	pop    edi
  42523c:	mov    ebx,DWORD PTR [ebp-0xc]
  42523f:	lea    ebx,[ebx+edi*8]
  425242:	mov    DWORD PTR [ebp+0x10],ebx
  425245:	mov    ebx,DWORD PTR [ebx+0x4]
  425248:	mov    DWORD PTR [ecx+0x4],ebx
  42524b:	mov    ebx,DWORD PTR [ebp+0x10]
  42524e:	mov    DWORD PTR [ecx+0x8],ebx
  425251:	mov    DWORD PTR [ebx+0x4],ecx
  425254:	mov    ebx,DWORD PTR [ecx+0x4]
  425257:	mov    DWORD PTR [ebx+0x8],ecx
  42525a:	mov    ebx,DWORD PTR [ecx+0x4]
  42525d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425260:	jne    0x4252b9
  425262:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425266:	mov    BYTE PTR [ebp+0x13],cl
  425269:	inc    cl
  42526b:	cmp    edi,0x20
  42526e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425272:	jae    0x425290
  425274:	cmp    BYTE PTR [ebp+0x13],0x0
  425278:	jne    0x425288
  42527a:	mov    ecx,edi
  42527c:	mov    ebx,0x80000000
  425281:	shr    ebx,cl
  425283:	mov    ecx,DWORD PTR [ebp+0x8]
  425286:	or     DWORD PTR [ecx],ebx
  425288:	lea    eax,[eax+edx*4+0x44]
  42528c:	mov    ecx,edi
  42528e:	jmp    0x4252b0
  425290:	cmp    BYTE PTR [ebp+0x13],0x0
  425294:	jne    0x4252a6
  425296:	lea    ecx,[edi-0x20]
  425299:	mov    ebx,0x80000000
  42529e:	shr    ebx,cl
  4252a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252a3:	or     DWORD PTR [ecx+0x4],ebx
  4252a6:	lea    eax,[eax+edx*4+0xc4]
  4252ad:	lea    ecx,[edi-0x20]
  4252b0:	mov    edx,0x80000000
  4252b5:	shr    edx,cl
  4252b7:	or     DWORD PTR [eax],edx
  4252b9:	mov    edx,DWORD PTR [ebp+0xc]
  4252bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4252bf:	lea    eax,[edx+esi*1-0x4]
  4252c3:	mov    DWORD PTR [eax],ecx
  4252c5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4252c9:	jmp    0x4252ce
  4252cb:	mov    edx,DWORD PTR [ebp+0xc]
  4252ce:	lea    eax,[esi+0x1]
  4252d1:	mov    DWORD PTR [edx-0x4],eax
  4252d4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4252d8:	jmp    0x425419
  4252dd:	xor    eax,eax
  4252df:	jmp    0x42541c
  4252e4:	jge    0x425419
  4252ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4252ed:	sub    DWORD PTR [ebp+0x10],esi
  4252f0:	lea    ecx,[esi+0x1]
  4252f3:	mov    DWORD PTR [ebx-0x4],ecx
  4252f6:	lea    ebx,[ebx+esi*1-0x4]
  4252fa:	mov    esi,DWORD PTR [ebp+0x10]
  4252fd:	sar    esi,0x4
  425300:	dec    esi
  425301:	cmp    esi,0x3f
  425304:	mov    DWORD PTR [ebp+0xc],ebx
  425307:	mov    DWORD PTR [ebx-0x4],ecx
  42530a:	jbe    0x42530f
  42530c:	push   0x3f
  42530e:	pop    esi
  42530f:	test   BYTE PTR [ebp-0x4],0x1
  425313:	jne    0x425399
  425319:	mov    esi,DWORD PTR [ebp-0x4]
  42531c:	sar    esi,0x4
  42531f:	dec    esi
  425320:	cmp    esi,0x3f
  425323:	jbe    0x425328
  425325:	push   0x3f
  425327:	pop    esi
  425328:	mov    ecx,DWORD PTR [edi+0x4]
  42532b:	cmp    ecx,DWORD PTR [edi+0x8]
  42532e:	jne    0x425372
  425330:	cmp    esi,0x20
  425333:	mov    ebx,0x80000000
  425338:	jae    0x425353
  42533a:	mov    ecx,esi
  42533c:	shr    ebx,cl
  42533e:	lea    esi,[esi+eax*1+0x4]
  425342:	not    ebx
  425344:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425348:	dec    BYTE PTR [esi]
  42534a:	jne    0x42536f
  42534c:	mov    ecx,DWORD PTR [ebp+0x8]
  42534f:	and    DWORD PTR [ecx],ebx
  425351:	jmp    0x42536f
  425353:	lea    ecx,[esi-0x20]
  425356:	shr    ebx,cl
  425358:	lea    ecx,[esi+eax*1+0x4]
  42535c:	not    ebx
  42535e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425365:	dec    BYTE PTR [ecx]
  425367:	jne    0x42536f
  425369:	mov    ecx,DWORD PTR [ebp+0x8]
  42536c:	and    DWORD PTR [ecx+0x4],ebx
  42536f:	mov    ebx,DWORD PTR [ebp+0xc]
  425372:	mov    ecx,DWORD PTR [edi+0x8]
  425375:	mov    esi,DWORD PTR [edi+0x4]
  425378:	mov    DWORD PTR [ecx+0x4],esi
  42537b:	mov    esi,DWORD PTR [edi+0x8]
  42537e:	mov    ecx,DWORD PTR [edi+0x4]
  425381:	mov    DWORD PTR [ecx+0x8],esi
  425384:	mov    esi,DWORD PTR [ebp+0x10]
  425387:	add    esi,DWORD PTR [ebp-0x4]
  42538a:	mov    DWORD PTR [ebp+0x10],esi
  42538d:	sar    esi,0x4
  425390:	dec    esi
  425391:	cmp    esi,0x3f
  425394:	jbe    0x425399
  425396:	push   0x3f
  425398:	pop    esi
  425399:	mov    ecx,DWORD PTR [ebp-0xc]
  42539c:	lea    ecx,[ecx+esi*8]
  42539f:	mov    edi,DWORD PTR [ecx+0x4]
  4253a2:	mov    DWORD PTR [ebx+0x8],ecx
  4253a5:	mov    DWORD PTR [ebx+0x4],edi
  4253a8:	mov    DWORD PTR [ecx+0x4],ebx
  4253ab:	mov    ecx,DWORD PTR [ebx+0x4]
  4253ae:	mov    DWORD PTR [ecx+0x8],ebx
  4253b1:	mov    ecx,DWORD PTR [ebx+0x4]
  4253b4:	cmp    ecx,DWORD PTR [ebx+0x8]
  4253b7:	jne    0x425410
  4253b9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4253bd:	mov    BYTE PTR [ebp+0xf],cl
  4253c0:	inc    cl
  4253c2:	cmp    esi,0x20
  4253c5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4253c9:	jae    0x4253e7
  4253cb:	cmp    BYTE PTR [ebp+0xf],0x0
  4253cf:	jne    0x4253df
  4253d1:	mov    ecx,esi
  4253d3:	mov    edi,0x80000000
  4253d8:	shr    edi,cl
  4253da:	mov    ecx,DWORD PTR [ebp+0x8]
  4253dd:	or     DWORD PTR [ecx],edi
  4253df:	lea    eax,[eax+edx*4+0x44]
  4253e3:	mov    ecx,esi
  4253e5:	jmp    0x425407
  4253e7:	cmp    BYTE PTR [ebp+0xf],0x0
  4253eb:	jne    0x4253fd
  4253ed:	lea    ecx,[esi-0x20]
  4253f0:	mov    edi,0x80000000
  4253f5:	shr    edi,cl
  4253f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4253fa:	or     DWORD PTR [ecx+0x4],edi
  4253fd:	lea    eax,[eax+edx*4+0xc4]
  425404:	lea    ecx,[esi-0x20]
  425407:	mov    edx,0x80000000
  42540c:	shr    edx,cl
  42540e:	or     DWORD PTR [eax],edx
  425410:	mov    eax,DWORD PTR [ebp+0x10]
  425413:	mov    DWORD PTR [ebx],eax
  425415:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425419:	xor    eax,eax
  42541b:	inc    eax
  42541c:	pop    edi
  42541d:	pop    esi
  42541e:	pop    ebx
  42541f:	leave  
  425420:	ret    
  425421:	push   ebp
  425422:	mov    ebp,esp
  425424:	sub    esp,0x14
  425427:	mov    ecx,DWORD PTR [ebp+0x8]
  42542a:	mov    eax,ds:0x45cefc
  42542f:	mov    edx,DWORD PTR ds:0x45cf00
  425435:	add    ecx,0x17
  425438:	and    ecx,0xfffffff0
  42543b:	push   ebx
  42543c:	mov    DWORD PTR [ebp-0x10],ecx
  42543f:	sar    ecx,0x4
  425442:	push   esi
  425443:	lea    eax,[eax+eax*4]
  425446:	push   edi
  425447:	dec    ecx
  425448:	cmp    ecx,0x20
  42544b:	lea    edi,[edx+eax*4]
  42544e:	mov    DWORD PTR [ebp-0x4],edi
  425451:	jge    0x42545e
  425453:	or     esi,0xffffffff
  425456:	shr    esi,cl
  425458:	or     DWORD PTR [ebp-0x8],0xffffffff
  42545c:	jmp    0x42546b
  42545e:	add    ecx,0xffffffe0
  425461:	or     eax,0xffffffff
  425464:	xor    esi,esi
  425466:	shr    eax,cl
  425468:	mov    DWORD PTR [ebp-0x8],eax
  42546b:	mov    eax,ds:0x45cf08
  425470:	mov    ebx,eax
  425472:	mov    DWORD PTR [ebp-0xc],esi
  425475:	cmp    ebx,edi
  425477:	jmp    0x42548d
  425479:	mov    ecx,DWORD PTR [ebx+0x4]
  42547c:	mov    edi,DWORD PTR [ebx]
  42547e:	and    ecx,DWORD PTR [ebp-0x8]
  425481:	and    edi,esi
  425483:	or     ecx,edi
  425485:	jne    0x425492
  425487:	add    ebx,0x14
  42548a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42548d:	mov    DWORD PTR [ebp+0x8],ebx
  425490:	jb     0x425479
  425492:	cmp    ebx,DWORD PTR [ebp-0x4]
  425495:	jne    0x4254bb
  425497:	mov    ebx,edx
  425499:	jmp    0x4254ac
  42549b:	mov    ecx,DWORD PTR [ebx+0x4]
  42549e:	mov    edi,DWORD PTR [ebx]
  4254a0:	and    ecx,DWORD PTR [ebp-0x8]
  4254a3:	and    edi,esi
  4254a5:	or     ecx,edi
  4254a7:	jne    0x4254b3
  4254a9:	add    ebx,0x14
  4254ac:	cmp    ebx,eax
  4254ae:	mov    DWORD PTR [ebp+0x8],ebx
  4254b1:	jb     0x42549b
  4254b3:	cmp    ebx,eax
  4254b5:	je     0x42554f
  4254bb:	mov    DWORD PTR ds:0x45cf08,ebx
  4254c1:	mov    eax,DWORD PTR [ebx+0x10]
  4254c4:	mov    edx,DWORD PTR [eax]
  4254c6:	cmp    edx,0xffffffff
  4254c9:	mov    DWORD PTR [ebp-0x4],edx
  4254cc:	je     0x4254e2
  4254ce:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4254d5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4254d9:	and    ecx,DWORD PTR [ebp-0x8]
  4254dc:	and    edi,esi
  4254de:	or     ecx,edi
  4254e0:	jne    0x425518
  4254e2:	mov    edx,DWORD PTR [eax+0xc4]
  4254e8:	and    edx,DWORD PTR [ebp-0x8]
  4254eb:	and    DWORD PTR [ebp-0x4],0x0
  4254ef:	lea    ecx,[eax+0x44]
  4254f2:	mov    esi,DWORD PTR [ecx]
  4254f4:	and    esi,DWORD PTR [ebp-0xc]
  4254f7:	or     edx,esi
  4254f9:	mov    esi,DWORD PTR [ebp-0xc]
  4254fc:	jne    0x425515
  4254fe:	mov    edx,DWORD PTR [ecx+0x84]
  425504:	and    edx,DWORD PTR [ebp-0x8]
  425507:	inc    DWORD PTR [ebp-0x4]
  42550a:	add    ecx,0x4
  42550d:	mov    edi,DWORD PTR [ecx]
  42550f:	and    edi,esi
  425511:	or     edx,edi
  425513:	je     0x4254fe
  425515:	mov    edx,DWORD PTR [ebp-0x4]
  425518:	mov    ecx,edx
  42551a:	imul   ecx,ecx,0x204
  425520:	lea    ecx,[ecx+eax*1+0x144]
  425527:	mov    DWORD PTR [ebp-0xc],ecx
  42552a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42552e:	xor    edi,edi
  425530:	and    ecx,esi
  425532:	jne    0x4255a1
  425534:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42553b:	and    ecx,DWORD PTR [ebp-0x8]
  42553e:	push   0x20
  425540:	pop    edi
  425541:	jmp    0x4255a1
  425543:	cmp    DWORD PTR [ebx+0x8],0x0
  425547:	jne    0x425554
  425549:	add    ebx,0x14
  42554c:	mov    DWORD PTR [ebp+0x8],ebx
  42554f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425552:	jb     0x425543
  425554:	cmp    ebx,DWORD PTR [ebp-0x4]
  425557:	jne    0x42557f
  425559:	mov    ebx,edx
  42555b:	jmp    0x425566
  42555d:	cmp    DWORD PTR [ebx+0x8],0x0
  425561:	jne    0x42556d
  425563:	add    ebx,0x14
  425566:	cmp    ebx,eax
  425568:	mov    DWORD PTR [ebp+0x8],ebx
  42556b:	jb     0x42555d
  42556d:	cmp    ebx,eax
  42556f:	jne    0x42557f
  425571:	call   0x424f85
  425576:	mov    ebx,eax
  425578:	test   ebx,ebx
  42557a:	mov    DWORD PTR [ebp+0x8],ebx
  42557d:	je     0x425597
  42557f:	push   ebx
  425580:	call   0x42503c
  425585:	pop    ecx
  425586:	mov    ecx,DWORD PTR [ebx+0x10]
  425589:	mov    DWORD PTR [ecx],eax
  42558b:	mov    eax,DWORD PTR [ebx+0x10]
  42558e:	cmp    DWORD PTR [eax],0xffffffff
  425591:	jne    0x4254bb
  425597:	xor    eax,eax
  425599:	jmp    0x425718
  42559e:	shl    ecx,1
  4255a0:	inc    edi
  4255a1:	test   ecx,ecx
  4255a3:	jge    0x42559e
  4255a5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255a8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255ac:	mov    ecx,DWORD PTR [edx]
  4255ae:	sub    ecx,DWORD PTR [ebp-0x10]
  4255b1:	mov    esi,ecx
  4255b3:	sar    esi,0x4
  4255b6:	dec    esi
  4255b7:	cmp    esi,0x3f
  4255ba:	mov    DWORD PTR [ebp-0x8],ecx
  4255bd:	jle    0x4255c2
  4255bf:	push   0x3f
  4255c1:	pop    esi
  4255c2:	cmp    esi,edi
  4255c4:	je     0x4256cb
  4255ca:	mov    ecx,DWORD PTR [edx+0x4]
  4255cd:	cmp    ecx,DWORD PTR [edx+0x8]
  4255d0:	jne    0x42562e
  4255d2:	cmp    edi,0x20
  4255d5:	mov    ebx,0x80000000
  4255da:	jge    0x425602
  4255dc:	mov    ecx,edi
  4255de:	shr    ebx,cl
  4255e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4255e3:	lea    edi,[eax+edi*1+0x4]
  4255e7:	not    ebx
  4255e9:	mov    DWORD PTR [ebp-0x14],ebx
  4255ec:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4255f0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4255f4:	dec    BYTE PTR [edi]
  4255f6:	jne    0x42562b
  4255f8:	mov    ecx,DWORD PTR [ebp-0x14]
  4255fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4255fe:	and    DWORD PTR [ebx],ecx
  425600:	jmp    0x42562e
  425602:	lea    ecx,[edi-0x20]
  425605:	shr    ebx,cl
  425607:	mov    ecx,DWORD PTR [ebp-0x4]
  42560a:	lea    ecx,[eax+ecx*4+0xc4]
  425611:	lea    edi,[eax+edi*1+0x4]
  425615:	not    ebx
  425617:	and    DWORD PTR [ecx],ebx
  425619:	dec    BYTE PTR [edi]
  42561b:	mov    DWORD PTR [ebp-0x14],ebx
  42561e:	jne    0x42562b
  425620:	mov    ebx,DWORD PTR [ebp+0x8]
  425623:	mov    ecx,DWORD PTR [ebp-0x14]
  425626:	and    DWORD PTR [ebx+0x4],ecx
  425629:	jmp    0x42562e
  42562b:	mov    ebx,DWORD PTR [ebp+0x8]
  42562e:	cmp    DWORD PTR [ebp-0x8],0x0
  425632:	mov    ecx,DWORD PTR [edx+0x8]
  425635:	mov    edi,DWORD PTR [edx+0x4]
  425638:	mov    DWORD PTR [ecx+0x4],edi
  42563b:	mov    ecx,DWORD PTR [edx+0x4]
  42563e:	mov    edi,DWORD PTR [edx+0x8]
  425641:	mov    DWORD PTR [ecx+0x8],edi
  425644:	je     0x4256d7
  42564a:	mov    ecx,DWORD PTR [ebp-0xc]
  42564d:	lea    ecx,[ecx+esi*8]
  425650:	mov    edi,DWORD PTR [ecx+0x4]
  425653:	mov    DWORD PTR [edx+0x8],ecx
  425656:	mov    DWORD PTR [edx+0x4],edi
  425659:	mov    DWORD PTR [ecx+0x4],edx
  42565c:	mov    ecx,DWORD PTR [edx+0x4]
  42565f:	mov    DWORD PTR [ecx+0x8],edx
  425662:	mov    ecx,DWORD PTR [edx+0x4]
  425665:	cmp    ecx,DWORD PTR [edx+0x8]
  425668:	jne    0x4256c8
  42566a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42566e:	mov    BYTE PTR [ebp+0xb],cl
  425671:	inc    cl
  425673:	cmp    esi,0x20
  425676:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42567a:	jge    0x42569f
  42567c:	cmp    BYTE PTR [ebp+0xb],0x0
  425680:	jne    0x42568d
  425682:	mov    edi,0x80000000
  425687:	mov    ecx,esi
  425689:	shr    edi,cl
  42568b:	or     DWORD PTR [ebx],edi
  42568d:	mov    ecx,esi
  42568f:	mov    edi,0x80000000
  425694:	shr    edi,cl
  425696:	mov    ecx,DWORD PTR [ebp-0x4]
  425699:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42569d:	jmp    0x4256c8
  42569f:	cmp    BYTE PTR [ebp+0xb],0x0
  4256a3:	jne    0x4256b2
  4256a5:	lea    ecx,[esi-0x20]
  4256a8:	mov    edi,0x80000000
  4256ad:	shr    edi,cl
  4256af:	or     DWORD PTR [ebx+0x4],edi
  4256b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4256b5:	lea    edi,[eax+ecx*4+0xc4]
  4256bc:	lea    ecx,[esi-0x20]
  4256bf:	mov    esi,0x80000000
  4256c4:	shr    esi,cl
  4256c6:	or     DWORD PTR [edi],esi
  4256c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4256cb:	test   ecx,ecx
  4256cd:	je     0x4256da
  4256cf:	mov    DWORD PTR [edx],ecx
  4256d1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4256d5:	jmp    0x4256da
  4256d7:	mov    ecx,DWORD PTR [ebp-0x8]
  4256da:	mov    esi,DWORD PTR [ebp-0x10]
  4256dd:	add    edx,ecx
  4256df:	lea    ecx,[esi+0x1]
  4256e2:	mov    DWORD PTR [edx],ecx
  4256e4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4256e8:	mov    esi,DWORD PTR [ebp-0xc]
  4256eb:	mov    ecx,DWORD PTR [esi]
  4256ed:	test   ecx,ecx
  4256ef:	lea    edi,[ecx+0x1]
  4256f2:	mov    DWORD PTR [esi],edi
  4256f4:	jne    0x425710
  4256f6:	cmp    ebx,DWORD PTR ds:0x45cef8
  4256fc:	jne    0x425710
  4256fe:	mov    ecx,DWORD PTR [ebp-0x4]
  425701:	cmp    ecx,DWORD PTR ds:0x45cf10
  425707:	jne    0x425710
  425709:	and    DWORD PTR ds:0x45cef8,0x0
  425710:	mov    ecx,DWORD PTR [ebp-0x4]
  425713:	mov    DWORD PTR [eax],ecx
  425715:	lea    eax,[edx+0x4]
  425718:	pop    edi
  425719:	pop    esi
  42571a:	pop    ebx
  42571b:	leave  
  42571c:	ret    
  42571d:	int3   
  42571e:	int3   
  42571f:	int3   
  425720:	push   esi
  425721:	inc    ebx
  425722:	xor    dh,BYTE PTR [eax]
  425724:	pop    eax
  425725:	inc    ebx
  425726:	xor    BYTE PTR [eax],dh
  425728:	push   ebp
  425729:	mov    ebp,esp
  42572b:	sub    esp,0x8
  42572e:	push   ebx
  42572f:	push   esi
  425730:	push   edi
  425731:	push   ebp
  425732:	cld    
  425733:	mov    ebx,DWORD PTR [ebp+0xc]
  425736:	mov    eax,DWORD PTR [ebp+0x8]
  425739:	test   DWORD PTR [eax+0x4],0x6
  425740:	jne    0x4257c8
  425746:	mov    DWORD PTR [ebp-0x8],eax
  425749:	mov    eax,DWORD PTR [ebp+0x10]
  42574c:	mov    DWORD PTR [ebp-0x4],eax
  42574f:	lea    eax,[ebp-0x8]
  425752:	mov    DWORD PTR [ebx-0x4],eax
  425755:	mov    esi,DWORD PTR [ebx+0xc]
  425758:	mov    edi,DWORD PTR [ebx+0x8]
  42575b:	cmp    esi,0xffffffff
  42575e:	je     0x4257c1
  425760:	lea    ecx,[esi+esi*2]
  425763:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425768:	je     0x4257af
  42576a:	push   esi
  42576b:	push   ebp
  42576c:	lea    ebp,[ebx+0x10]
  42576f:	call   DWORD PTR [edi+ecx*4+0x4]
  425773:	pop    ebp
  425774:	pop    esi
  425775:	mov    ebx,DWORD PTR [ebp+0xc]
  425778:	or     eax,eax
  42577a:	je     0x4257af
  42577c:	js     0x4257ba
  42577e:	mov    edi,DWORD PTR [ebx+0x8]
  425781:	push   ebx
  425782:	call   0x4266b0
  425787:	add    esp,0x4
  42578a:	lea    ebp,[ebx+0x10]
  42578d:	push   esi
  42578e:	push   ebx
  42578f:	call   0x4266f2
  425794:	add    esp,0x8
  425797:	lea    ecx,[esi+esi*2]
  42579a:	push   0x1
  42579c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257a0:	call   0x426786
  4257a5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257a8:	mov    DWORD PTR [ebx+0xc],eax
  4257ab:	call   DWORD PTR [edi+ecx*4+0x8]
  4257af:	mov    edi,DWORD PTR [ebx+0x8]
  4257b2:	lea    ecx,[esi+esi*2]
  4257b5:	mov    esi,DWORD PTR [edi+ecx*4]
  4257b8:	jmp    0x42575b
  4257ba:	mov    eax,0x0
  4257bf:	jmp    0x4257dd
  4257c1:	mov    eax,0x1
  4257c6:	jmp    0x4257dd
  4257c8:	push   ebp
  4257c9:	lea    ebp,[ebx+0x10]
  4257cc:	push   0xffffffff
  4257ce:	push   ebx
  4257cf:	call   0x4266f2
  4257d4:	add    esp,0x8
  4257d7:	pop    ebp
  4257d8:	mov    eax,0x1
  4257dd:	pop    ebp
  4257de:	pop    edi
  4257df:	pop    esi
  4257e0:	pop    ebx
  4257e1:	mov    esp,ebp
  4257e3:	pop    ebp
  4257e4:	ret    
  4257e5:	push   ebp
  4257e6:	mov    ecx,DWORD PTR [esp+0x8]
  4257ea:	mov    ebp,DWORD PTR [ecx]
  4257ec:	mov    eax,DWORD PTR [ecx+0x1c]
  4257ef:	push   eax
  4257f0:	mov    eax,DWORD PTR [ecx+0x18]
  4257f3:	push   eax
  4257f4:	call   0x4266f2
  4257f9:	add    esp,0x8
  4257fc:	pop    ebp
  4257fd:	ret    0x4
  425800:	call   0x42370d
  425805:	add    eax,0x8
  425808:	ret    
  425809:	push   0x14
  42580b:	push   0x428768
  425810:	call   0x423858
  425815:	mov    edi,DWORD PTR [ebp+0x8]
  425818:	xor    ebx,ebx
  42581a:	cmp    edi,ebx
  42581c:	jne    0x42582c
  42581e:	push   DWORD PTR [ebp+0xc]
  425821:	call   0x424582
  425826:	pop    ecx
  425827:	jmp    0x4259b0
  42582c:	mov    esi,DWORD PTR [ebp+0xc]
  42582f:	cmp    esi,ebx
  425831:	jne    0x42583f
  425833:	push   edi
  425834:	call   0x42446a
  425839:	pop    ecx
  42583a:	jmp    0x4259ae
  42583f:	cmp    DWORD PTR ds:0x45d144,0x3
  425846:	jne    0x42597a
  42584c:	mov    DWORD PTR [ebp-0x1c],ebx
  42584f:	cmp    esi,0xffffffe0
  425852:	ja     0x425949
  425858:	push   0x4
  42585a:	call   0x423a1f
  42585f:	pop    ecx
  425860:	mov    DWORD PTR [ebp-0x4],ebx
  425863:	push   edi
  425864:	call   0x424c42
  425869:	pop    ecx
  42586a:	mov    DWORD PTR [ebp-0x20],eax
  42586d:	cmp    eax,ebx
  42586f:	je     0x425919
  425875:	cmp    esi,DWORD PTR ds:0x45cf04
  42587b:	ja     0x4258c9
  42587d:	push   esi
  42587e:	push   edi
  42587f:	push   eax
  425880:	call   0x425142
  425885:	add    esp,0xc
  425888:	test   eax,eax
  42588a:	je     0x425891
  42588c:	mov    DWORD PTR [ebp-0x1c],edi
  42588f:	jmp    0x4258c9
  425891:	push   esi
  425892:	call   0x425421
  425897:	pop    ecx
  425898:	mov    DWORD PTR [ebp-0x1c],eax
  42589b:	cmp    eax,ebx
  42589d:	je     0x4258c9
  42589f:	mov    eax,DWORD PTR [edi-0x4]
  4258a2:	dec    eax
  4258a3:	mov    DWORD PTR [ebp-0x24],eax
  4258a6:	cmp    eax,esi
  4258a8:	jb     0x4258ac
  4258aa:	mov    eax,esi
  4258ac:	push   eax
  4258ad:	push   edi
  4258ae:	push   DWORD PTR [ebp-0x1c]
  4258b1:	call   0x4245a0
  4258b6:	push   edi
  4258b7:	call   0x424c42
  4258bc:	mov    DWORD PTR [ebp-0x20],eax
  4258bf:	push   edi
  4258c0:	push   eax
  4258c1:	call   0x424c6d
  4258c6:	add    esp,0x18
  4258c9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4258cc:	jne    0x425919
  4258ce:	cmp    esi,ebx
  4258d0:	jne    0x4258d8
  4258d2:	xor    esi,esi
  4258d4:	inc    esi
  4258d5:	mov    DWORD PTR [ebp+0xc],esi
  4258d8:	add    esi,0xf
  4258db:	and    esi,0xfffffff0
  4258de:	mov    DWORD PTR [ebp+0xc],esi
  4258e1:	push   esi
  4258e2:	push   ebx
  4258e3:	push   DWORD PTR ds:0x45d140
  4258e9:	call   DWORD PTR ds:0x4280a4
  4258ef:	mov    DWORD PTR [ebp-0x1c],eax
  4258f2:	cmp    eax,ebx
  4258f4:	je     0x425919
  4258f6:	mov    eax,DWORD PTR [edi-0x4]
  4258f9:	dec    eax
  4258fa:	mov    DWORD PTR [ebp-0x24],eax
  4258fd:	cmp    eax,esi
  4258ff:	jb     0x425903
  425901:	mov    eax,esi
  425903:	push   eax
  425904:	push   edi
  425905:	push   DWORD PTR [ebp-0x1c]
  425908:	call   0x4245a0
  42590d:	push   edi
  42590e:	push   DWORD PTR [ebp-0x20]
  425911:	call   0x424c6d
  425916:	add    esp,0x14
  425919:	or     DWORD PTR [ebp-0x4],0xffffffff
  42591d:	call   0x425971
  425922:	cmp    DWORD PTR [ebp-0x20],ebx
  425925:	jne    0x425949
  425927:	cmp    esi,ebx
  425929:	jne    0x42592e
  42592b:	xor    esi,esi
  42592d:	inc    esi
  42592e:	add    esi,0xf
  425931:	and    esi,0xfffffff0
  425934:	mov    DWORD PTR [ebp+0xc],esi
  425937:	push   esi
  425938:	push   edi
  425939:	push   ebx
  42593a:	push   DWORD PTR ds:0x45d140
  425940:	call   DWORD PTR ds:0x4280b0
  425946:	mov    DWORD PTR [ebp-0x1c],eax
  425949:	mov    eax,DWORD PTR [ebp-0x1c]
  42594c:	cmp    eax,ebx
  42594e:	jne    0x4259b0
  425950:	cmp    DWORD PTR ds:0x45cdc8,ebx
  425956:	je     0x4259b0
  425958:	push   esi
  425959:	call   0x426142
  42595e:	pop    ecx
  42595f:	test   eax,eax
  425961:	jne    0x42584c
  425967:	jmp    0x4259ae
  425969:	xor    ebx,ebx
  42596b:	mov    esi,DWORD PTR [ebp+0xc]
  42596e:	mov    edi,DWORD PTR [ebp+0x8]
  425971:	push   0x4
  425973:	call   0x42398b
  425978:	pop    ecx
  425979:	ret    
  42597a:	xor    eax,eax
  42597c:	cmp    esi,0xffffffe0
  42597f:	ja     0x425997
  425981:	cmp    esi,ebx
  425983:	jne    0x425988
  425985:	xor    esi,esi
  425987:	inc    esi
  425988:	push   esi
  425989:	push   edi
  42598a:	push   ebx
  42598b:	push   DWORD PTR ds:0x45d140
  425991:	call   DWORD PTR ds:0x4280b0
  425997:	cmp    eax,ebx
  425999:	jne    0x4259b0
  42599b:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a1:	je     0x4259b0
  4259a3:	push   esi
  4259a4:	call   0x426142
  4259a9:	pop    ecx
  4259aa:	test   eax,eax
  4259ac:	jne    0x42597a
  4259ae:	xor    eax,eax
  4259b0:	call   0x423893
  4259b5:	ret    
  4259b6:	push   0x10
  4259b8:	push   0x428778
  4259bd:	call   0x423858
  4259c2:	cmp    DWORD PTR ds:0x45d144,0x3
  4259c9:	jne    0x425a05
  4259cb:	push   0x4
  4259cd:	call   0x423a1f
  4259d2:	pop    ecx
  4259d3:	and    DWORD PTR [ebp-0x4],0x0
  4259d7:	mov    esi,DWORD PTR [ebp+0x8]
  4259da:	push   esi
  4259db:	call   0x424c42
  4259e0:	pop    ecx
  4259e1:	mov    DWORD PTR [ebp-0x1c],eax
  4259e4:	test   eax,eax
  4259e6:	je     0x4259f3
  4259e8:	mov    esi,DWORD PTR [esi-0x4]
  4259eb:	sub    esi,0x9
  4259ee:	mov    DWORD PTR [ebp-0x20],esi
  4259f1:	jmp    0x4259f6
  4259f3:	mov    esi,DWORD PTR [ebp-0x20]
  4259f6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4259fa:	call   0x425a23
  4259ff:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a03:	jne    0x425a18
  425a05:	push   DWORD PTR [ebp+0x8]
  425a08:	push   0x0
  425a0a:	push   DWORD PTR ds:0x45d140
  425a10:	call   DWORD PTR ds:0x4280b4
  425a16:	mov    esi,eax
  425a18:	mov    eax,esi
  425a1a:	call   0x423893
  425a1f:	ret    
  425a20:	mov    esi,DWORD PTR [ebp-0x20]
  425a23:	push   0x4
  425a25:	call   0x42398b
  425a2a:	pop    ecx
  425a2b:	ret    
  425a2c:	push   ebp
  425a2d:	mov    ebp,esp
  425a2f:	sub    esp,0x10
  425a32:	push   esi
  425a33:	lea    eax,[ebp-0x8]
  425a36:	push   eax
  425a37:	call   DWORD PTR ds:0x4280c4
  425a3d:	mov    esi,DWORD PTR [ebp-0x4]
  425a40:	xor    esi,DWORD PTR [ebp-0x8]
  425a43:	call   DWORD PTR ds:0x4280c0
  425a49:	xor    esi,eax
  425a4b:	call   DWORD PTR ds:0x42806c
  425a51:	xor    esi,eax
  425a53:	call   DWORD PTR ds:0x4280bc
  425a59:	xor    esi,eax
  425a5b:	lea    eax,[ebp-0x10]
  425a5e:	push   eax
  425a5f:	call   DWORD PTR ds:0x4280b8
  425a65:	mov    eax,DWORD PTR [ebp-0xc]
  425a68:	xor    eax,DWORD PTR [ebp-0x10]
  425a6b:	xor    esi,eax
  425a6d:	mov    DWORD PTR ds:0x45c430,esi
  425a73:	jne    0x425a7f
  425a75:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425a7f:	pop    esi
  425a80:	leave  
  425a81:	ret    
  425a82:	push   0x118
  425a87:	push   0x428928
  425a8c:	call   0x423858
  425a91:	mov    eax,ds:0x45c430
  425a96:	xor    eax,DWORD PTR [ebp+0x4]
  425a99:	mov    DWORD PTR [ebp-0x1c],eax
  425a9c:	mov    eax,ds:0x45cd98
  425aa1:	xor    ecx,ecx
  425aa3:	cmp    eax,ecx
  425aa5:	je     0x425ac6
  425aa7:	mov    DWORD PTR [ebp-0x4],ecx
  425aaa:	push   DWORD PTR [ebp+0xc]
  425aad:	push   DWORD PTR [ebp+0x8]
  425ab0:	call   eax
  425ab2:	pop    ecx
  425ab3:	pop    ecx
  425ab4:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ab8:	jmp    0x425bc4
  425abd:	xor    eax,eax
  425abf:	inc    eax
  425ac0:	ret    
  425ac1:	mov    esp,DWORD PTR [ebp-0x18]
  425ac4:	jmp    0x425ab4
  425ac6:	mov    eax,DWORD PTR [ebp+0x8]
  425ac9:	dec    eax
  425aca:	je     0x425adf
  425acc:	mov    edi,0x428904
  425ad1:	mov    DWORD PTR [ebp-0x20],0x428850
  425ad8:	mov    esi,0xd4
  425add:	jmp    0x425af0
  425adf:	mov    edi,0x428830
  425ae4:	mov    DWORD PTR [ebp-0x20],0x428790
  425aeb:	mov    esi,0xb9
  425af0:	mov    BYTE PTR [ebp-0x24],cl
  425af3:	push   0x104
  425af8:	lea    eax,[ebp-0x128]
  425afe:	push   eax
  425aff:	push   ecx
  425b00:	call   DWORD PTR ds:0x42803c
  425b06:	test   eax,eax
  425b08:	jne    0x425b1d
  425b0a:	push   0x428484
  425b0f:	lea    eax,[ebp-0x128]
  425b15:	push   eax
  425b16:	call   0x423c40
  425b1b:	pop    ecx
  425b1c:	pop    ecx
  425b1d:	lea    ebx,[ebp-0x128]
  425b23:	lea    eax,[ebp-0x128]
  425b29:	push   eax
  425b2a:	call   0x423e70
  425b2f:	pop    ecx
  425b30:	add    eax,0xb
  425b33:	cmp    eax,0x3c
  425b36:	jbe    0x425b61
  425b38:	lea    eax,[ebp-0x128]
  425b3e:	push   eax
  425b3f:	call   0x423e70
  425b44:	mov    ebx,eax
  425b46:	lea    eax,[ebp-0x128]
  425b4c:	sub    eax,0x31
  425b4f:	add    ebx,eax
  425b51:	push   0x3
  425b53:	push   0x428480
  425b58:	push   ebx
  425b59:	call   0x423d40
  425b5e:	add    esp,0x10
  425b61:	push   ebx
  425b62:	call   0x423e70
  425b67:	pop    ecx
  425b68:	lea    eax,[eax+esi*1+0xc]
  425b6c:	add    eax,0x3
  425b6f:	and    eax,0xfffffffc
  425b72:	call   0x4238b0
  425b77:	mov    DWORD PTR [ebp-0x18],esp
  425b7a:	mov    esi,esp
  425b7c:	push   edi
  425b7d:	push   esi
  425b7e:	call   0x423c40
  425b83:	mov    edi,0x428460
  425b88:	push   edi
  425b89:	push   esi
  425b8a:	call   0x423c50
  425b8f:	push   0x428784
  425b94:	push   esi
  425b95:	call   0x423c50
  425b9a:	push   ebx
  425b9b:	push   esi
  425b9c:	call   0x423c50
  425ba1:	push   edi
  425ba2:	push   esi
  425ba3:	call   0x423c50
  425ba8:	push   DWORD PTR [ebp-0x20]
  425bab:	push   esi
  425bac:	call   0x423c50
  425bb1:	push   0x12010
  425bb6:	push   0x428438
  425bbb:	push   esi
  425bbc:	call   0x423b42
  425bc1:	add    esp,0x3c
  425bc4:	push   0x3
  425bc6:	call   0x422cc6
  425bcb:	int3   
  425bcc:	push   0x38
  425bce:	push   0x428d48
  425bd3:	call   0x423858
  425bd8:	xor    ebx,ebx
  425bda:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425be0:	jne    0x425c1a
  425be2:	push   ebx
  425be3:	push   ebx
  425be4:	xor    esi,esi
  425be6:	inc    esi
  425be7:	push   esi
  425be8:	push   0x428d44
  425bed:	push   0x100
  425bf2:	push   ebx
  425bf3:	call   DWORD PTR ds:0x4280d0
  425bf9:	test   eax,eax
  425bfb:	je     0x425c05
  425bfd:	mov    DWORD PTR ds:0x45cdbc,esi
  425c03:	jmp    0x425c1a
  425c05:	call   DWORD PTR ds:0x428010
  425c0b:	cmp    eax,0x78
  425c0e:	jne    0x425c1a
  425c10:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c1a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c1d:	jle    0x425c3a
  425c1f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c22:	mov    eax,DWORD PTR [ebp+0x10]
  425c25:	dec    ecx
  425c26:	cmp    BYTE PTR [eax],bl
  425c28:	je     0x425c32
  425c2a:	inc    eax
  425c2b:	cmp    ecx,ebx
  425c2d:	jne    0x425c25
  425c2f:	or     ecx,0xffffffff
  425c32:	or     eax,0xffffffff
  425c35:	sub    eax,ecx
  425c37:	add    DWORD PTR [ebp+0x14],eax
  425c3a:	mov    eax,ds:0x45cdbc
  425c3f:	cmp    eax,0x2
  425c42:	je     0x425e24
  425c48:	cmp    eax,ebx
  425c4a:	je     0x425e24
  425c50:	cmp    eax,0x1
  425c53:	jne    0x425e57
  425c59:	xor    edi,edi
  425c5b:	mov    DWORD PTR [ebp-0x1c],edi
  425c5e:	mov    DWORD PTR [ebp-0x20],ebx
  425c61:	mov    DWORD PTR [ebp-0x24],ebx
  425c64:	cmp    DWORD PTR [ebp+0x20],ebx
  425c67:	jne    0x425c71
  425c69:	mov    eax,ds:0x45cdb4
  425c6e:	mov    DWORD PTR [ebp+0x20],eax
  425c71:	push   ebx
  425c72:	push   ebx
  425c73:	push   DWORD PTR [ebp+0x14]
  425c76:	push   DWORD PTR [ebp+0x10]
  425c79:	xor    eax,eax
  425c7b:	cmp    DWORD PTR [ebp+0x24],ebx
  425c7e:	setne  al
  425c81:	lea    eax,[eax*8+0x1]
  425c88:	push   eax
  425c89:	push   DWORD PTR [ebp+0x20]
  425c8c:	call   DWORD PTR ds:0x4280cc
  425c92:	mov    esi,eax
  425c94:	mov    DWORD PTR [ebp-0x28],esi
  425c97:	cmp    esi,ebx
  425c99:	je     0x425e57
  425c9f:	mov    DWORD PTR [ebp-0x4],0x1
  425ca6:	lea    eax,[esi+esi*1]
  425ca9:	add    eax,0x3
  425cac:	and    eax,0xfffffffc
  425caf:	call   0x4238b0
  425cb4:	mov    DWORD PTR [ebp-0x18],esp
  425cb7:	mov    eax,esp
  425cb9:	mov    DWORD PTR [ebp-0x2c],eax
  425cbc:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cc0:	jmp    0x425cdd
  425cc2:	xor    eax,eax
  425cc4:	inc    eax
  425cc5:	ret    
  425cc6:	mov    esp,DWORD PTR [ebp-0x18]
  425cc9:	call   0x426cf5
  425cce:	xor    ebx,ebx
  425cd0:	mov    DWORD PTR [ebp-0x2c],ebx
  425cd3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cd7:	mov    edi,DWORD PTR [ebp-0x1c]
  425cda:	mov    esi,DWORD PTR [ebp-0x28]
  425cdd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425ce0:	jne    0x425cfe
  425ce2:	lea    eax,[esi+esi*1]
  425ce5:	push   eax
  425ce6:	call   0x424582
  425ceb:	pop    ecx
  425cec:	mov    DWORD PTR [ebp-0x2c],eax
  425cef:	cmp    eax,ebx
  425cf1:	je     0x425e57
  425cf7:	mov    DWORD PTR [ebp-0x20],0x1
  425cfe:	push   esi
  425cff:	push   DWORD PTR [ebp-0x2c]
  425d02:	push   DWORD PTR [ebp+0x14]
  425d05:	push   DWORD PTR [ebp+0x10]
  425d08:	push   0x1
  425d0a:	push   DWORD PTR [ebp+0x20]
  425d0d:	call   DWORD PTR ds:0x4280cc
  425d13:	test   eax,eax
  425d15:	je     0x425e01
  425d1b:	push   ebx
  425d1c:	push   ebx
  425d1d:	push   esi
  425d1e:	push   DWORD PTR [ebp-0x2c]
  425d21:	push   DWORD PTR [ebp+0xc]
  425d24:	push   DWORD PTR [ebp+0x8]
  425d27:	call   DWORD PTR ds:0x4280d0
  425d2d:	mov    edi,eax
  425d2f:	mov    DWORD PTR [ebp-0x1c],edi
  425d32:	cmp    edi,ebx
  425d34:	je     0x425e01
  425d3a:	test   BYTE PTR [ebp+0xd],0x4
  425d3e:	je     0x425d6d
  425d40:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d43:	je     0x425e01
  425d49:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d4c:	jg     0x425e01
  425d52:	push   DWORD PTR [ebp+0x1c]
  425d55:	push   DWORD PTR [ebp+0x18]
  425d58:	push   esi
  425d59:	push   DWORD PTR [ebp-0x2c]
  425d5c:	push   DWORD PTR [ebp+0xc]
  425d5f:	push   DWORD PTR [ebp+0x8]
  425d62:	call   DWORD PTR ds:0x4280d0
  425d68:	jmp    0x425e01
  425d6d:	mov    DWORD PTR [ebp-0x4],0x2
  425d74:	lea    eax,[edi+edi*1]
  425d77:	add    eax,0x3
  425d7a:	and    eax,0xfffffffc
  425d7d:	call   0x4238b0
  425d82:	mov    DWORD PTR [ebp-0x18],esp
  425d85:	mov    eax,esp
  425d87:	mov    DWORD PTR [ebp-0x30],eax
  425d8a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d8e:	jmp    0x425dab
  425d90:	xor    eax,eax
  425d92:	inc    eax
  425d93:	ret    
  425d94:	mov    esp,DWORD PTR [ebp-0x18]
  425d97:	call   0x426cf5
  425d9c:	xor    ebx,ebx
  425d9e:	mov    DWORD PTR [ebp-0x30],ebx
  425da1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425da5:	mov    edi,DWORD PTR [ebp-0x1c]
  425da8:	mov    esi,DWORD PTR [ebp-0x28]
  425dab:	cmp    DWORD PTR [ebp-0x30],ebx
  425dae:	jne    0x425dc8
  425db0:	lea    eax,[edi+edi*1]
  425db3:	push   eax
  425db4:	call   0x424582
  425db9:	pop    ecx
  425dba:	mov    DWORD PTR [ebp-0x30],eax
  425dbd:	cmp    eax,ebx
  425dbf:	je     0x425e01
  425dc1:	mov    DWORD PTR [ebp-0x24],0x1
  425dc8:	push   edi
  425dc9:	push   DWORD PTR [ebp-0x30]
  425dcc:	push   esi
  425dcd:	push   DWORD PTR [ebp-0x2c]
  425dd0:	push   DWORD PTR [ebp+0xc]
  425dd3:	push   DWORD PTR [ebp+0x8]
  425dd6:	call   DWORD PTR ds:0x4280d0
  425ddc:	test   eax,eax
  425dde:	je     0x425e01
  425de0:	push   ebx
  425de1:	push   ebx
  425de2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425de5:	jne    0x425deb
  425de7:	push   ebx
  425de8:	push   ebx
  425de9:	jmp    0x425df1
  425deb:	push   DWORD PTR [ebp+0x1c]
  425dee:	push   DWORD PTR [ebp+0x18]
  425df1:	push   edi
  425df2:	push   DWORD PTR [ebp-0x30]
  425df5:	push   ebx
  425df6:	push   DWORD PTR [ebp+0x20]
  425df9:	call   DWORD PTR ds:0x428050
  425dff:	mov    edi,eax
  425e01:	cmp    DWORD PTR [ebp-0x24],ebx
  425e04:	je     0x425e0f
  425e06:	push   DWORD PTR [ebp-0x30]
  425e09:	call   0x42446a
  425e0e:	pop    ecx
  425e0f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e12:	je     0x425e1d
  425e14:	push   DWORD PTR [ebp-0x2c]
  425e17:	call   0x42446a
  425e1c:	pop    ecx
  425e1d:	mov    eax,edi
  425e1f:	jmp    0x425f7f
  425e24:	mov    DWORD PTR [ebp-0x34],ebx
  425e27:	xor    edi,edi
  425e29:	mov    DWORD PTR [ebp-0x38],ebx
  425e2c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e2f:	jne    0x425e39
  425e31:	mov    eax,ds:0x45cda4
  425e36:	mov    DWORD PTR [ebp+0x8],eax
  425e39:	cmp    DWORD PTR [ebp+0x20],ebx
  425e3c:	jne    0x425e46
  425e3e:	mov    eax,ds:0x45cdb4
  425e43:	mov    DWORD PTR [ebp+0x20],eax
  425e46:	push   DWORD PTR [ebp+0x8]
  425e49:	call   0x426add
  425e4e:	pop    ecx
  425e4f:	mov    DWORD PTR [ebp-0x3c],eax
  425e52:	cmp    eax,0xffffffff
  425e55:	jne    0x425e5e
  425e57:	xor    eax,eax
  425e59:	jmp    0x425f7f
  425e5e:	cmp    eax,DWORD PTR [ebp+0x20]
  425e61:	je     0x425f55
  425e67:	push   ebx
  425e68:	push   ebx
  425e69:	lea    ecx,[ebp+0x14]
  425e6c:	push   ecx
  425e6d:	push   DWORD PTR [ebp+0x10]
  425e70:	push   eax
  425e71:	push   DWORD PTR [ebp+0x20]
  425e74:	call   0x426b26
  425e79:	add    esp,0x18
  425e7c:	mov    DWORD PTR [ebp-0x34],eax
  425e7f:	cmp    eax,ebx
  425e81:	je     0x425e57
  425e83:	push   ebx
  425e84:	push   ebx
  425e85:	push   DWORD PTR [ebp+0x14]
  425e88:	push   eax
  425e89:	push   DWORD PTR [ebp+0xc]
  425e8c:	push   DWORD PTR [ebp+0x8]
  425e8f:	call   DWORD PTR ds:0x4280c8
  425e95:	mov    esi,eax
  425e97:	mov    DWORD PTR [ebp-0x40],esi
  425e9a:	cmp    esi,ebx
  425e9c:	je     0x425f44
  425ea2:	mov    DWORD PTR [ebp-0x4],ebx
  425ea5:	add    eax,0x3
  425ea8:	and    eax,0xfffffffc
  425eab:	call   0x4238b0
  425eb0:	mov    DWORD PTR [ebp-0x18],esp
  425eb3:	mov    edi,esp
  425eb5:	mov    DWORD PTR [ebp-0x44],edi
  425eb8:	push   esi
  425eb9:	push   ebx
  425eba:	push   edi
  425ebb:	call   0x426160
  425ec0:	add    esp,0xc
  425ec3:	jmp    0x425ed5
  425ec5:	xor    eax,eax
  425ec7:	inc    eax
  425ec8:	ret    
  425ec9:	mov    esp,DWORD PTR [ebp-0x18]
  425ecc:	call   0x426cf5
  425ed1:	xor    ebx,ebx
  425ed3:	xor    edi,edi
  425ed5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ed9:	cmp    edi,ebx
  425edb:	jne    0x425f00
  425edd:	push   DWORD PTR [ebp-0x40]
  425ee0:	call   0x424582
  425ee5:	pop    ecx
  425ee6:	mov    edi,eax
  425ee8:	cmp    edi,ebx
  425eea:	je     0x425f1d
  425eec:	push   DWORD PTR [ebp-0x40]
  425eef:	push   ebx
  425ef0:	push   edi
  425ef1:	call   0x426160
  425ef6:	add    esp,0xc
  425ef9:	mov    DWORD PTR [ebp-0x38],0x1
  425f00:	push   DWORD PTR [ebp-0x40]
  425f03:	push   edi
  425f04:	push   DWORD PTR [ebp+0x14]
  425f07:	push   DWORD PTR [ebp-0x34]
  425f0a:	push   DWORD PTR [ebp+0xc]
  425f0d:	push   DWORD PTR [ebp+0x8]
  425f10:	call   DWORD PTR ds:0x4280c8
  425f16:	mov    DWORD PTR [ebp-0x40],eax
  425f19:	cmp    eax,ebx
  425f1b:	jne    0x425f21
  425f1d:	xor    esi,esi
  425f1f:	jmp    0x425f47
  425f21:	push   DWORD PTR [ebp+0x1c]
  425f24:	push   DWORD PTR [ebp+0x18]
  425f27:	lea    eax,[ebp-0x40]
  425f2a:	push   eax
  425f2b:	push   edi
  425f2c:	push   DWORD PTR [ebp+0x20]
  425f2f:	push   DWORD PTR [ebp-0x3c]
  425f32:	call   0x426b26
  425f37:	add    esp,0x18
  425f3a:	mov    esi,eax
  425f3c:	neg    esi
  425f3e:	sbb    esi,esi
  425f40:	neg    esi
  425f42:	jmp    0x425f47
  425f44:	mov    esi,DWORD PTR [ebp-0x48]
  425f47:	cmp    DWORD PTR [ebp-0x38],ebx
  425f4a:	je     0x425f6f
  425f4c:	push   edi
  425f4d:	call   0x42446a
  425f52:	pop    ecx
  425f53:	jmp    0x425f6f
  425f55:	push   DWORD PTR [ebp+0x1c]
  425f58:	push   DWORD PTR [ebp+0x18]
  425f5b:	push   DWORD PTR [ebp+0x14]
  425f5e:	push   DWORD PTR [ebp+0x10]
  425f61:	push   DWORD PTR [ebp+0xc]
  425f64:	push   DWORD PTR [ebp+0x8]
  425f67:	call   DWORD PTR ds:0x4280c8
  425f6d:	mov    esi,eax
  425f6f:	cmp    DWORD PTR [ebp-0x34],ebx
  425f72:	je     0x425f7d
  425f74:	push   DWORD PTR [ebp-0x34]
  425f77:	call   0x42446a
  425f7c:	pop    ecx
  425f7d:	mov    eax,esi
  425f7f:	lea    esp,[ebp-0x54]
  425f82:	call   0x423893
  425f87:	ret    
  425f88:	push   0x1c
  425f8a:	push   0x428d70
  425f8f:	call   0x423858
  425f94:	xor    esi,esi
  425f96:	cmp    DWORD PTR ds:0x45cdc0,esi
  425f9c:	jne    0x425fd3
  425f9e:	lea    eax,[ebp-0x1c]
  425fa1:	push   eax
  425fa2:	xor    edi,edi
  425fa4:	inc    edi
  425fa5:	push   edi
  425fa6:	push   0x428d44
  425fab:	push   edi
  425fac:	call   DWORD PTR ds:0x4280d8
  425fb2:	test   eax,eax
  425fb4:	je     0x425fbe
  425fb6:	mov    DWORD PTR ds:0x45cdc0,edi
  425fbc:	jmp    0x425fd3
  425fbe:	call   DWORD PTR ds:0x428010
  425fc4:	cmp    eax,0x78
  425fc7:	jne    0x425fd3
  425fc9:	mov    DWORD PTR ds:0x45cdc0,0x2
  425fd3:	mov    eax,ds:0x45cdc0
  425fd8:	cmp    eax,0x2
  425fdb:	je     0x4260cb
  425fe1:	cmp    eax,esi
  425fe3:	je     0x4260cb
  425fe9:	cmp    eax,0x1
  425fec:	jne    0x4260f1
  425ff2:	mov    DWORD PTR [ebp-0x20],esi
  425ff5:	mov    DWORD PTR [ebp-0x24],esi
  425ff8:	cmp    DWORD PTR [ebp+0x18],esi
  425ffb:	jne    0x426005
  425ffd:	mov    eax,ds:0x45cdb4
  426002:	mov    DWORD PTR [ebp+0x18],eax
  426005:	push   esi
  426006:	push   esi
  426007:	push   DWORD PTR [ebp+0x10]
  42600a:	push   DWORD PTR [ebp+0xc]
  42600d:	xor    eax,eax
  42600f:	cmp    DWORD PTR [ebp+0x20],esi
  426012:	setne  al
  426015:	lea    eax,[eax*8+0x1]
  42601c:	push   eax
  42601d:	push   DWORD PTR [ebp+0x18]
  426020:	call   DWORD PTR ds:0x4280cc
  426026:	mov    edi,eax
  426028:	mov    DWORD PTR [ebp-0x28],edi
  42602b:	test   edi,edi
  42602d:	je     0x4260f1
  426033:	and    DWORD PTR [ebp-0x4],0x0
  426037:	lea    ebx,[edi+edi*1]
  42603a:	mov    eax,ebx
  42603c:	add    eax,0x3
  42603f:	and    eax,0xfffffffc
  426042:	call   0x4238b0
  426047:	mov    DWORD PTR [ebp-0x18],esp
  42604a:	mov    esi,esp
  42604c:	mov    DWORD PTR [ebp-0x2c],esi
  42604f:	push   ebx
  426050:	push   0x0
  426052:	push   esi
  426053:	call   0x426160
  426058:	add    esp,0xc
  42605b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42605f:	jmp    0x426076
  426061:	xor    eax,eax
  426063:	inc    eax
  426064:	ret    
  426065:	mov    esp,DWORD PTR [ebp-0x18]
  426068:	call   0x426cf5
  42606d:	xor    esi,esi
  42606f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426073:	mov    edi,DWORD PTR [ebp-0x28]
  426076:	test   esi,esi
  426078:	jne    0x426091
  42607a:	push   edi
  42607b:	push   0x2
  42607d:	call   0x424978
  426082:	pop    ecx
  426083:	pop    ecx
  426084:	mov    esi,eax
  426086:	test   esi,esi
  426088:	je     0x4260f1
  42608a:	mov    DWORD PTR [ebp-0x24],0x1
  426091:	push   edi
  426092:	push   esi
  426093:	push   DWORD PTR [ebp+0x10]
  426096:	push   DWORD PTR [ebp+0xc]
  426099:	push   0x1
  42609b:	push   DWORD PTR [ebp+0x18]
  42609e:	call   DWORD PTR ds:0x4280cc
  4260a4:	test   eax,eax
  4260a6:	je     0x4260b9
  4260a8:	push   DWORD PTR [ebp+0x14]
  4260ab:	push   eax
  4260ac:	push   esi
  4260ad:	push   DWORD PTR [ebp+0x8]
  4260b0:	call   DWORD PTR ds:0x4280d8
  4260b6:	mov    DWORD PTR [ebp-0x20],eax
  4260b9:	cmp    DWORD PTR [ebp-0x24],0x0
  4260bd:	je     0x4260c6
  4260bf:	push   esi
  4260c0:	call   0x42446a
  4260c5:	pop    ecx
  4260c6:	mov    eax,DWORD PTR [ebp-0x20]
  4260c9:	jmp    0x426139
  4260cb:	mov    ebx,DWORD PTR [ebp+0x1c]
  4260ce:	cmp    ebx,esi
  4260d0:	jne    0x4260d8
  4260d2:	mov    ebx,DWORD PTR ds:0x45cda4
  4260d8:	mov    edi,DWORD PTR [ebp+0x18]
  4260db:	test   edi,edi
  4260dd:	jne    0x4260e5
  4260df:	mov    edi,DWORD PTR ds:0x45cdb4
  4260e5:	push   ebx
  4260e6:	call   0x426add
  4260eb:	pop    ecx
  4260ec:	cmp    eax,0xffffffff
  4260ef:	jne    0x4260f5
  4260f1:	xor    eax,eax
  4260f3:	jmp    0x426139
  4260f5:	cmp    eax,edi
  4260f7:	je     0x426117
  4260f9:	push   0x0
  4260fb:	push   0x0
  4260fd:	lea    ecx,[ebp+0x10]
  426100:	push   ecx
  426101:	push   DWORD PTR [ebp+0xc]
  426104:	push   eax
  426105:	push   edi
  426106:	call   0x426b26
  42610b:	add    esp,0x18
  42610e:	mov    esi,eax
  426110:	test   esi,esi
  426112:	je     0x4260f1
  426114:	mov    DWORD PTR [ebp+0xc],esi
  426117:	push   DWORD PTR [ebp+0x14]
  42611a:	push   DWORD PTR [ebp+0x10]
  42611d:	push   DWORD PTR [ebp+0xc]
  426120:	push   DWORD PTR [ebp+0x8]
  426123:	push   ebx
  426124:	call   DWORD PTR ds:0x4280d4
  42612a:	mov    edi,eax
  42612c:	test   esi,esi
  42612e:	je     0x426137
  426130:	push   esi
  426131:	call   0x42446a
  426136:	pop    ecx
  426137:	mov    eax,edi
  426139:	lea    esp,[ebp-0x38]
  42613c:	call   0x423893
  426141:	ret    
  426142:	mov    eax,ds:0x45cdc4
  426147:	test   eax,eax
  426149:	je     0x42615a
  42614b:	push   DWORD PTR [esp+0x4]
  42614f:	call   eax
  426151:	test   eax,eax
  426153:	pop    ecx
  426154:	je     0x42615a
  426156:	xor    eax,eax
  426158:	inc    eax
  426159:	ret    
  42615a:	xor    eax,eax
  42615c:	ret    
  42615d:	int3   
  42615e:	int3   
  42615f:	int3   
  426160:	mov    edx,DWORD PTR [esp+0xc]
  426164:	mov    ecx,DWORD PTR [esp+0x4]
  426168:	test   edx,edx
  42616a:	je     0x4261bb
  42616c:	xor    eax,eax
  42616e:	mov    al,BYTE PTR [esp+0x8]
  426172:	push   edi
  426173:	mov    edi,ecx
  426175:	cmp    edx,0x4
  426178:	jb     0x4261ab
  42617a:	neg    ecx
  42617c:	and    ecx,0x3
  42617f:	je     0x42618d
  426181:	sub    edx,ecx
  426183:	mov    BYTE PTR [edi],al
  426185:	add    edi,0x1
  426188:	sub    ecx,0x1
  42618b:	jne    0x426183
  42618d:	mov    ecx,eax
  42618f:	shl    eax,0x8
  426192:	add    eax,ecx
  426194:	mov    ecx,eax
  426196:	shl    eax,0x10
  426199:	add    eax,ecx
  42619b:	mov    ecx,edx
  42619d:	and    edx,0x3
  4261a0:	shr    ecx,0x2
  4261a3:	je     0x4261ab
  4261a5:	rep stos DWORD PTR es:[edi],eax
  4261a7:	test   edx,edx
  4261a9:	je     0x4261b5
  4261ab:	mov    BYTE PTR [edi],al
  4261ad:	add    edi,0x1
  4261b0:	sub    edx,0x1
  4261b3:	jne    0x4261ab
  4261b5:	mov    eax,DWORD PTR [esp+0x8]
  4261b9:	pop    edi
  4261ba:	ret    
  4261bb:	mov    eax,DWORD PTR [esp+0x4]
  4261bf:	ret    
  4261c0:	push   esi
  4261c1:	mov    esi,DWORD PTR [esp+0x8]
  4261c5:	test   esi,esi
  4261c7:	je     0x42634e
  4261cd:	push   DWORD PTR [esi+0x4]
  4261d0:	call   0x42446a
  4261d5:	push   DWORD PTR [esi+0x8]
  4261d8:	call   0x42446a
  4261dd:	push   DWORD PTR [esi+0xc]
  4261e0:	call   0x42446a
  4261e5:	push   DWORD PTR [esi+0x10]
  4261e8:	call   0x42446a
  4261ed:	push   DWORD PTR [esi+0x14]
  4261f0:	call   0x42446a
  4261f5:	push   DWORD PTR [esi+0x18]
  4261f8:	call   0x42446a
  4261fd:	push   DWORD PTR [esi]
  4261ff:	call   0x42446a
  426204:	push   DWORD PTR [esi+0x20]
  426207:	call   0x42446a
  42620c:	push   DWORD PTR [esi+0x24]
  42620f:	call   0x42446a
  426214:	push   DWORD PTR [esi+0x28]
  426217:	call   0x42446a
  42621c:	push   DWORD PTR [esi+0x2c]
  42621f:	call   0x42446a
  426224:	push   DWORD PTR [esi+0x30]
  426227:	call   0x42446a
  42622c:	push   DWORD PTR [esi+0x34]
  42622f:	call   0x42446a
  426234:	push   DWORD PTR [esi+0x1c]
  426237:	call   0x42446a
  42623c:	push   DWORD PTR [esi+0x38]
  42623f:	call   0x42446a
  426244:	push   DWORD PTR [esi+0x3c]
  426247:	call   0x42446a
  42624c:	add    esp,0x40
  42624f:	push   DWORD PTR [esi+0x40]
  426252:	call   0x42446a
  426257:	push   DWORD PTR [esi+0x44]
  42625a:	call   0x42446a
  42625f:	push   DWORD PTR [esi+0x48]
  426262:	call   0x42446a
  426267:	push   DWORD PTR [esi+0x4c]
  42626a:	call   0x42446a
  42626f:	push   DWORD PTR [esi+0x50]
  426272:	call   0x42446a
  426277:	push   DWORD PTR [esi+0x54]
  42627a:	call   0x42446a
  42627f:	push   DWORD PTR [esi+0x58]
  426282:	call   0x42446a
  426287:	push   DWORD PTR [esi+0x5c]
  42628a:	call   0x42446a
  42628f:	push   DWORD PTR [esi+0x60]
  426292:	call   0x42446a
  426297:	push   DWORD PTR [esi+0x64]
  42629a:	call   0x42446a
  42629f:	push   DWORD PTR [esi+0x68]
  4262a2:	call   0x42446a
  4262a7:	push   DWORD PTR [esi+0x6c]
  4262aa:	call   0x42446a
  4262af:	push   DWORD PTR [esi+0x70]
  4262b2:	call   0x42446a
  4262b7:	push   DWORD PTR [esi+0x74]
  4262ba:	call   0x42446a
  4262bf:	push   DWORD PTR [esi+0x78]
  4262c2:	call   0x42446a
  4262c7:	push   DWORD PTR [esi+0x7c]
  4262ca:	call   0x42446a
  4262cf:	add    esp,0x40
  4262d2:	push   DWORD PTR [esi+0x80]
  4262d8:	call   0x42446a
  4262dd:	push   DWORD PTR [esi+0x84]
  4262e3:	call   0x42446a
  4262e8:	push   DWORD PTR [esi+0x88]
  4262ee:	call   0x42446a
  4262f3:	push   DWORD PTR [esi+0x8c]
  4262f9:	call   0x42446a
  4262fe:	push   DWORD PTR [esi+0x90]
  426304:	call   0x42446a
  426309:	push   DWORD PTR [esi+0x94]
  42630f:	call   0x42446a
  426314:	push   DWORD PTR [esi+0x98]
  42631a:	call   0x42446a
  42631f:	push   DWORD PTR [esi+0x9c]
  426325:	call   0x42446a
  42632a:	push   DWORD PTR [esi+0xa0]
  426330:	call   0x42446a
  426335:	push   DWORD PTR [esi+0xa4]
  42633b:	call   0x42446a
  426340:	push   DWORD PTR [esi+0xa8]
  426346:	call   0x42446a
  42634b:	add    esp,0x2c
  42634e:	pop    esi
  42634f:	ret    
  426350:	push   esi
  426351:	mov    esi,DWORD PTR [esp+0x8]
  426355:	test   esi,esi
  426357:	je     0x4263ad
  426359:	mov    eax,DWORD PTR [esi]
  42635b:	mov    ecx,DWORD PTR ds:0x45c934
  426361:	cmp    eax,DWORD PTR [ecx]
  426363:	je     0x426374
  426365:	cmp    eax,DWORD PTR ds:0x45c904
  42636b:	je     0x426374
  42636d:	push   eax
  42636e:	call   0x42446a
  426373:	pop    ecx
  426374:	mov    eax,DWORD PTR [esi+0x4]
  426377:	mov    ecx,DWORD PTR ds:0x45c934
  42637d:	cmp    eax,DWORD PTR [ecx+0x4]
  426380:	je     0x426391
  426382:	cmp    eax,DWORD PTR ds:0x45c908
  426388:	je     0x426391
  42638a:	push   eax
  42638b:	call   0x42446a
  426390:	pop    ecx
  426391:	mov    esi,DWORD PTR [esi+0x8]
  426394:	mov    eax,ds:0x45c934
  426399:	cmp    esi,DWORD PTR [eax+0x8]
  42639c:	je     0x4263ad
  42639e:	cmp    esi,DWORD PTR ds:0x45c90c
  4263a4:	je     0x4263ad
  4263a6:	push   esi
  4263a7:	call   0x42446a
  4263ac:	pop    ecx
  4263ad:	pop    esi
  4263ae:	ret    
  4263af:	push   esi
  4263b0:	mov    esi,DWORD PTR [esp+0x8]
  4263b4:	test   esi,esi
  4263b6:	je     0x426486
  4263bc:	mov    eax,DWORD PTR [esi+0xc]
  4263bf:	mov    ecx,DWORD PTR ds:0x45c934
  4263c5:	cmp    eax,DWORD PTR [ecx+0xc]
  4263c8:	je     0x4263d9
  4263ca:	cmp    eax,DWORD PTR ds:0x45c910
  4263d0:	je     0x4263d9
  4263d2:	push   eax
  4263d3:	call   0x42446a
  4263d8:	pop    ecx
  4263d9:	mov    eax,DWORD PTR [esi+0x10]
  4263dc:	mov    ecx,DWORD PTR ds:0x45c934
  4263e2:	cmp    eax,DWORD PTR [ecx+0x10]
  4263e5:	je     0x4263f6
  4263e7:	cmp    eax,DWORD PTR ds:0x45c914
  4263ed:	je     0x4263f6
  4263ef:	push   eax
  4263f0:	call   0x42446a
  4263f5:	pop    ecx
  4263f6:	mov    eax,DWORD PTR [esi+0x14]
  4263f9:	mov    ecx,DWORD PTR ds:0x45c934
  4263ff:	cmp    eax,DWORD PTR [ecx+0x14]
  426402:	je     0x426413
  426404:	cmp    eax,DWORD PTR ds:0x45c918
  42640a:	je     0x426413
  42640c:	push   eax
  42640d:	call   0x42446a
  426412:	pop    ecx
  426413:	mov    eax,DWORD PTR [esi+0x18]
  426416:	mov    ecx,DWORD PTR ds:0x45c934
  42641c:	cmp    eax,DWORD PTR [ecx+0x18]
  42641f:	je     0x426430
  426421:	cmp    eax,DWORD PTR ds:0x45c91c
  426427:	je     0x426430
  426429:	push   eax
  42642a:	call   0x42446a
  42642f:	pop    ecx
  426430:	mov    eax,DWORD PTR [esi+0x1c]
  426433:	mov    ecx,DWORD PTR ds:0x45c934
  426439:	cmp    eax,DWORD PTR [ecx+0x1c]
  42643c:	je     0x42644d
  42643e:	cmp    eax,DWORD PTR ds:0x45c920
  426444:	je     0x42644d
  426446:	push   eax
  426447:	call   0x42446a
  42644c:	pop    ecx
  42644d:	mov    eax,DWORD PTR [esi+0x20]
  426450:	mov    ecx,DWORD PTR ds:0x45c934
  426456:	cmp    eax,DWORD PTR [ecx+0x20]
  426459:	je     0x42646a
  42645b:	cmp    eax,DWORD PTR ds:0x45c924
  426461:	je     0x42646a
  426463:	push   eax
  426464:	call   0x42446a
  426469:	pop    ecx
  42646a:	mov    esi,DWORD PTR [esi+0x24]
  42646d:	mov    eax,ds:0x45c934
  426472:	cmp    esi,DWORD PTR [eax+0x24]
  426475:	je     0x426486
  426477:	cmp    esi,DWORD PTR ds:0x45c928
  42647d:	je     0x426486
  42647f:	push   esi
  426480:	call   0x42446a
  426485:	pop    ecx
  426486:	pop    esi
  426487:	ret    
  426488:	int3   
  426489:	int3   
  42648a:	int3   
  42648b:	int3   
  42648c:	int3   
  42648d:	int3   
  42648e:	int3   
  42648f:	int3   
  426490:	push   ebp
  426491:	mov    ebp,esp
  426493:	push   esi
  426494:	xor    eax,eax
  426496:	push   eax
  426497:	push   eax
  426498:	push   eax
  426499:	push   eax
  42649a:	push   eax
  42649b:	push   eax
  42649c:	push   eax
  42649d:	push   eax
  42649e:	mov    edx,DWORD PTR [ebp+0xc]
  4264a1:	lea    ecx,[ecx+0x0]
  4264a4:	mov    al,BYTE PTR [edx]
  4264a6:	or     al,al
  4264a8:	je     0x4264b3
  4264aa:	add    edx,0x1
  4264ad:	bts    DWORD PTR [esp],eax
  4264b1:	jmp    0x4264a4
  4264b3:	mov    esi,DWORD PTR [ebp+0x8]
  4264b6:	or     ecx,0xffffffff
  4264b9:	lea    ecx,[ecx+0x0]
  4264bc:	add    ecx,0x1
  4264bf:	mov    al,BYTE PTR [esi]
  4264c1:	or     al,al
  4264c3:	je     0x4264ce
  4264c5:	add    esi,0x1
  4264c8:	bt     DWORD PTR [esp],eax
  4264cc:	jae    0x4264bc
  4264ce:	mov    eax,ecx
  4264d0:	add    esp,0x20
  4264d3:	pop    esi
  4264d4:	leave  
  4264d5:	ret    
  4264d6:	int3   
  4264d7:	int3   
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	mov    edx,DWORD PTR [esp+0x4]
  4264e4:	mov    ecx,DWORD PTR [esp+0x8]
  4264e8:	test   edx,0x3
  4264ee:	jne    0x42652c
  4264f0:	mov    eax,DWORD PTR [edx]
  4264f2:	cmp    al,BYTE PTR [ecx]
  4264f4:	jne    0x426524
  4264f6:	or     al,al
  4264f8:	je     0x426520
  4264fa:	cmp    ah,BYTE PTR [ecx+0x1]
  4264fd:	jne    0x426524
  4264ff:	or     ah,ah
  426501:	je     0x426520
  426503:	shr    eax,0x10
  426506:	cmp    al,BYTE PTR [ecx+0x2]
  426509:	jne    0x426524
  42650b:	or     al,al
  42650d:	je     0x426520
  42650f:	cmp    ah,BYTE PTR [ecx+0x3]
  426512:	jne    0x426524
  426514:	add    ecx,0x4
  426517:	add    edx,0x4
  42651a:	or     ah,ah
  42651c:	jne    0x4264f0
  42651e:	mov    edi,edi
  426520:	xor    eax,eax
  426522:	ret    
  426523:	nop
  426524:	sbb    eax,eax
  426526:	shl    eax,1
  426528:	add    eax,0x1
  42652b:	ret    
  42652c:	test   edx,0x1
  426532:	je     0x42654c
  426534:	mov    al,BYTE PTR [edx]
  426536:	add    edx,0x1
  426539:	cmp    al,BYTE PTR [ecx]
  42653b:	jne    0x426524
  42653d:	add    ecx,0x1
  426540:	or     al,al
  426542:	je     0x426520
  426544:	test   edx,0x2
  42654a:	je     0x4264f0
  42654c:	mov    ax,WORD PTR [edx]
  42654f:	add    edx,0x2
  426552:	cmp    al,BYTE PTR [ecx]
  426554:	jne    0x426524
  426556:	or     al,al
  426558:	je     0x426520
  42655a:	cmp    ah,BYTE PTR [ecx+0x1]
  42655d:	jne    0x426524
  42655f:	or     ah,ah
  426561:	je     0x426520
  426563:	add    ecx,0x2
  426566:	jmp    0x4264f0
  426568:	int3   
  426569:	int3   
  42656a:	int3   
  42656b:	int3   
  42656c:	int3   
  42656d:	int3   
  42656e:	int3   
  42656f:	int3   
  426570:	mov    eax,DWORD PTR [esp+0xc]
  426574:	test   eax,eax
  426576:	je     0x4265c2
  426578:	mov    edx,DWORD PTR [esp+0x4]
  42657c:	push   esi
  42657d:	push   edi
  42657e:	mov    esi,edx
  426580:	mov    edi,DWORD PTR [esp+0x10]
  426584:	or     edx,edi
  426586:	and    edx,0x3
  426589:	je     0x4265c3
  42658b:	test   eax,0x1
  426590:	je     0x4265a3
  426592:	mov    cl,BYTE PTR [esi]
  426594:	cmp    cl,BYTE PTR [edi]
  426596:	jne    0x4265f0
  426598:	add    esi,0x1
  42659b:	add    edi,0x1
  42659e:	sub    eax,0x1
  4265a1:	je     0x4265c0
  4265a3:	mov    cl,BYTE PTR [esi]
  4265a5:	mov    dl,BYTE PTR [edi]
  4265a7:	cmp    cl,dl
  4265a9:	jne    0x4265f0
  4265ab:	mov    cl,BYTE PTR [esi+0x1]
  4265ae:	mov    dl,BYTE PTR [edi+0x1]
  4265b1:	cmp    cl,dl
  4265b3:	jne    0x4265f0
  4265b5:	add    edi,0x2
  4265b8:	add    esi,0x2
  4265bb:	sub    eax,0x2
  4265be:	jne    0x4265a3
  4265c0:	pop    edi
  4265c1:	pop    esi
  4265c2:	ret    
  4265c3:	mov    ecx,eax
  4265c5:	and    eax,0x3
  4265c8:	shr    ecx,0x2
  4265cb:	je     0x4265f8
  4265cd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265cf:	je     0x4265f8
  4265d1:	mov    ecx,DWORD PTR [esi-0x4]
  4265d4:	mov    edx,DWORD PTR [edi-0x4]
  4265d7:	cmp    cl,dl
  4265d9:	jne    0x4265eb
  4265db:	cmp    ch,dh
  4265dd:	jne    0x4265eb
  4265df:	shr    ecx,0x10
  4265e2:	shr    edx,0x10
  4265e5:	cmp    cl,dl
  4265e7:	jne    0x4265eb
  4265e9:	cmp    ch,dh
  4265eb:	mov    eax,0x0
  4265f0:	sbb    eax,eax
  4265f2:	pop    edi
  4265f3:	sbb    eax,0xffffffff
  4265f6:	pop    esi
  4265f7:	ret    
  4265f8:	test   eax,eax
  4265fa:	je     0x4265c0
  4265fc:	mov    edx,DWORD PTR [esi]
  4265fe:	mov    ecx,DWORD PTR [edi]
  426600:	cmp    dl,cl
  426602:	jne    0x4265eb
  426604:	sub    eax,0x1
  426607:	je     0x426625
  426609:	cmp    dh,ch
  42660b:	jne    0x4265eb
  42660d:	sub    eax,0x1
  426610:	je     0x426625
  426612:	and    ecx,0xff0000
  426618:	and    edx,0xff0000
  42661e:	cmp    edx,ecx
  426620:	jne    0x4265eb
  426622:	sub    eax,0x1
  426625:	pop    edi
  426626:	pop    esi
  426627:	ret    
  426628:	int3   
  426629:	int3   
  42662a:	int3   
  42662b:	int3   
  42662c:	int3   
  42662d:	int3   
  42662e:	int3   
  42662f:	int3   
  426630:	push   ebp
  426631:	mov    ebp,esp
  426633:	push   edi
  426634:	push   esi
  426635:	push   ebx
  426636:	mov    ecx,DWORD PTR [ebp+0x10]
  426639:	jecxz  0x426662
  42663b:	mov    ebx,ecx
  42663d:	mov    edi,DWORD PTR [ebp+0x8]
  426640:	mov    esi,edi
  426642:	xor    eax,eax
  426644:	repnz scas al,BYTE PTR es:[edi]
  426646:	neg    ecx
  426648:	add    ecx,ebx
  42664a:	mov    edi,esi
  42664c:	mov    esi,DWORD PTR [ebp+0xc]
  42664f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426651:	mov    al,BYTE PTR [esi-0x1]
  426654:	xor    ecx,ecx
  426656:	cmp    al,BYTE PTR [edi-0x1]
  426659:	ja     0x426660
  42665b:	je     0x426662
  42665d:	sub    ecx,0x2
  426660:	not    ecx
  426662:	mov    eax,ecx
  426664:	pop    ebx
  426665:	pop    esi
  426666:	pop    edi
  426667:	leave  
  426668:	ret    
  426669:	int3   
  42666a:	int3   
  42666b:	int3   
  42666c:	int3   
  42666d:	int3   
  42666e:	int3   
  42666f:	int3   
  426670:	push   ebp
  426671:	mov    ebp,esp
  426673:	push   esi
  426674:	xor    eax,eax
  426676:	push   eax
  426677:	push   eax
  426678:	push   eax
  426679:	push   eax
  42667a:	push   eax
  42667b:	push   eax
  42667c:	push   eax
  42667d:	push   eax
  42667e:	mov    edx,DWORD PTR [ebp+0xc]
  426681:	lea    ecx,[ecx+0x0]
  426684:	mov    al,BYTE PTR [edx]
  426686:	or     al,al
  426688:	je     0x426693
  42668a:	add    edx,0x1
  42668d:	bts    DWORD PTR [esp],eax
  426691:	jmp    0x426684
  426693:	mov    esi,DWORD PTR [ebp+0x8]
  426696:	mov    edi,edi
  426698:	mov    al,BYTE PTR [esi]
  42669a:	or     al,al
  42669c:	je     0x4266aa
  42669e:	add    esi,0x1
  4266a1:	bt     DWORD PTR [esp],eax
  4266a5:	jae    0x426698
  4266a7:	lea    eax,[esi-0x1]
  4266aa:	add    esp,0x20
  4266ad:	pop    esi
  4266ae:	leave  
  4266af:	ret    
  4266b0:	push   ebp
  4266b1:	mov    ebp,esp
  4266b3:	push   ebx
  4266b4:	push   esi
  4266b5:	push   edi
  4266b6:	push   ebp
  4266b7:	push   0x0
  4266b9:	push   0x0
  4266bb:	push   0x4266c8
  4266c0:	push   DWORD PTR [ebp+0x8]
  4266c3:	call   0x42713e
  4266c8:	pop    ebp
  4266c9:	pop    edi
  4266ca:	pop    esi
  4266cb:	pop    ebx
  4266cc:	mov    esp,ebp
  4266ce:	pop    ebp
  4266cf:	ret    
  4266d0:	mov    ecx,DWORD PTR [esp+0x4]
  4266d4:	test   DWORD PTR [ecx+0x4],0x6
  4266db:	mov    eax,0x1
  4266e0:	je     0x4266f1
  4266e2:	mov    eax,DWORD PTR [esp+0x8]
  4266e6:	mov    edx,DWORD PTR [esp+0x10]
  4266ea:	mov    DWORD PTR [edx],eax
  4266ec:	mov    eax,0x3
  4266f1:	ret    
  4266f2:	push   ebx
  4266f3:	push   esi
  4266f4:	push   edi
  4266f5:	mov    eax,DWORD PTR [esp+0x10]
  4266f9:	push   eax
  4266fa:	push   0xfffffffe
  4266fc:	push   0x4266d0
  426701:	push   DWORD PTR fs:0x0
  426708:	mov    DWORD PTR fs:0x0,esp
  42670f:	mov    eax,DWORD PTR [esp+0x20]
  426713:	mov    ebx,DWORD PTR [eax+0x8]
  426716:	mov    esi,DWORD PTR [eax+0xc]
  426719:	cmp    esi,0xffffffff
  42671c:	je     0x42674c
  42671e:	cmp    esi,DWORD PTR [esp+0x24]
  426722:	je     0x42674c
  426724:	lea    esi,[esi+esi*2]
  426727:	mov    ecx,DWORD PTR [ebx+esi*4]
  42672a:	mov    DWORD PTR [esp+0x8],ecx
  42672e:	mov    DWORD PTR [eax+0xc],ecx
  426731:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426736:	jne    0x42674a
  426738:	push   0x101
  42673d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426741:	call   0x426786
  426746:	call   DWORD PTR [ebx+esi*4+0x8]
  42674a:	jmp    0x42670f
  42674c:	pop    DWORD PTR fs:0x0
  426753:	add    esp,0xc
  426756:	pop    edi
  426757:	pop    esi
  426758:	pop    ebx
  426759:	ret    
  42675a:	xor    eax,eax
  42675c:	mov    ecx,DWORD PTR fs:0x0
  426763:	cmp    DWORD PTR [ecx+0x4],0x4266d0
  42676a:	jne    0x42677c
  42676c:	mov    edx,DWORD PTR [ecx+0xc]
  42676f:	mov    edx,DWORD PTR [edx+0xc]
  426772:	cmp    DWORD PTR [ecx+0x8],edx
  426775:	jne    0x42677c
  426777:	mov    eax,0x1
  42677c:	ret    
  42677d:	push   ebx
  42677e:	push   ecx
  42677f:	mov    ebx,0x45c94c
  426784:	jmp    0x426790
  426786:	push   ebx
  426787:	push   ecx
  426788:	mov    ebx,0x45c94c
  42678d:	mov    ecx,DWORD PTR [ebp+0x8]
  426790:	mov    DWORD PTR [ebx+0x8],ecx
  426793:	mov    DWORD PTR [ebx+0x4],eax
  426796:	mov    DWORD PTR [ebx+0xc],ebp
  426799:	pop    ecx
  42679a:	pop    ebx
  42679b:	ret    0x4
  42679e:	int3   
  42679f:	int3   
  4267a0:	push   ebp
  4267a1:	mov    ebp,esp
  4267a3:	push   edi
  4267a4:	push   esi
  4267a5:	mov    esi,DWORD PTR [ebp+0xc]
  4267a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267ab:	mov    edi,DWORD PTR [ebp+0x8]
  4267ae:	mov    eax,ecx
  4267b0:	mov    edx,ecx
  4267b2:	add    eax,esi
  4267b4:	cmp    edi,esi
  4267b6:	jbe    0x4267c0
  4267b8:	cmp    edi,eax
  4267ba:	jb     0x42693c
  4267c0:	test   edi,0x3
  4267c6:	jne    0x4267dc
  4267c8:	shr    ecx,0x2
  4267cb:	and    edx,0x3
  4267ce:	cmp    ecx,0x8
  4267d1:	jb     0x4267fc
  4267d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267d5:	jmp    DWORD PTR [edx*4+0x4268ec]
  4267dc:	mov    eax,edi
  4267de:	mov    edx,0x3
  4267e3:	sub    ecx,0x4
  4267e6:	jb     0x4267f4
  4267e8:	and    eax,0x3
  4267eb:	add    ecx,eax
  4267ed:	jmp    DWORD PTR [eax*4+0x426800]
  4267f4:	jmp    DWORD PTR [ecx*4+0x4268fc]
  4267fb:	nop
  4267fc:	jmp    DWORD PTR [ecx*4+0x426880]
  426803:	nop
  426804:	adc    BYTE PTR [eax+0x42],ch
  426807:	add    BYTE PTR [eax+ebp*2],bh
  42680a:	inc    edx
  42680b:	add    BYTE PTR [eax+0x68],ah
  42680e:	inc    edx
  42680f:	add    BYTE PTR [ebx],ah
  426811:	ror    DWORD PTR [edx-0x75f877fa],1
  426817:	inc    esi
  426818:	add    DWORD PTR [eax+0x468a0147],ecx
  42681e:	add    al,cl
  426820:	jmp    0x289f027
  426825:	add    esi,0x3
  426828:	add    edi,0x3
  42682b:	cmp    ecx,0x8
  42682e:	jb     0x4267fc
  426830:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426832:	jmp    DWORD PTR [edx*4+0x4268ec]
  426839:	lea    ecx,[ecx+0x0]
  42683c:	and    edx,ecx
  42683e:	mov    al,BYTE PTR [esi]
  426840:	mov    BYTE PTR [edi],al
  426842:	mov    al,BYTE PTR [esi+0x1]
  426845:	shr    ecx,0x2
  426848:	mov    BYTE PTR [edi+0x1],al
  42684b:	add    esi,0x2
  42684e:	add    edi,0x2
  426851:	cmp    ecx,0x8
  426854:	jb     0x4267fc
  426856:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426858:	jmp    DWORD PTR [edx*4+0x4268ec]
  42685f:	nop
  426860:	and    edx,ecx
  426862:	mov    al,BYTE PTR [esi]
  426864:	mov    BYTE PTR [edi],al
  426866:	add    esi,0x1
  426869:	shr    ecx,0x2
  42686c:	add    edi,0x1
  42686f:	cmp    ecx,0x8
  426872:	jb     0x4267fc
  426874:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426876:	jmp    DWORD PTR [edx*4+0x4268ec]
  42687d:	lea    ecx,[ecx+0x0]
  426880:	jecxz  0x4268ea
  426882:	inc    edx
  426883:	add    al,dl
  426885:	push   0x68c80042
  42688a:	inc    edx
  42688b:	add    al,al
  42688d:	push   0x68b80042
  426892:	inc    edx
  426893:	add    BYTE PTR [eax-0x57ffbd98],dh
  426899:	push   0x68a00042
  42689e:	inc    edx
  42689f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268a5:	inc    esp
  4268a6:	(bad)  
  4268a7:	in     al,0x8b
  4268a9:	inc    esp
  4268aa:	mov    gs,eax
  4268ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4268b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4268b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4268b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4268bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4268c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4268c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4268c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4268cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4268d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4268d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4268d8:	lea    eax,[ecx*4+0x0]
  4268df:	add    esi,eax
  4268e1:	add    edi,eax
  4268e3:	jmp    DWORD PTR [edx*4+0x4268ec]
  4268ea:	mov    edi,edi
  4268ec:	cld    
  4268ed:	push   0x69040042
  4268f2:	inc    edx
  4268f3:	add    BYTE PTR [eax],dl
  4268f5:	imul   eax,DWORD PTR [edx+0x0],0x426924
  4268fc:	mov    eax,DWORD PTR [ebp+0x8]
  4268ff:	pop    esi
  426900:	pop    edi
  426901:	leave  
  426902:	ret    
  426903:	nop
  426904:	mov    al,BYTE PTR [esi]
  426906:	mov    BYTE PTR [edi],al
  426908:	mov    eax,DWORD PTR [ebp+0x8]
  42690b:	pop    esi
  42690c:	pop    edi
  42690d:	leave  
  42690e:	ret    
  42690f:	nop
  426910:	mov    al,BYTE PTR [esi]
  426912:	mov    BYTE PTR [edi],al
  426914:	mov    al,BYTE PTR [esi+0x1]
  426917:	mov    BYTE PTR [edi+0x1],al
  42691a:	mov    eax,DWORD PTR [ebp+0x8]
  42691d:	pop    esi
  42691e:	pop    edi
  42691f:	leave  
  426920:	ret    
  426921:	lea    ecx,[ecx+0x0]
  426924:	mov    al,BYTE PTR [esi]
  426926:	mov    BYTE PTR [edi],al
  426928:	mov    al,BYTE PTR [esi+0x1]
  42692b:	mov    BYTE PTR [edi+0x1],al
  42692e:	mov    al,BYTE PTR [esi+0x2]
  426931:	mov    BYTE PTR [edi+0x2],al
  426934:	mov    eax,DWORD PTR [ebp+0x8]
  426937:	pop    esi
  426938:	pop    edi
  426939:	leave  
  42693a:	ret    
  42693b:	nop
  42693c:	lea    esi,[ecx+esi*1-0x4]
  426940:	lea    edi,[ecx+edi*1-0x4]
  426944:	test   edi,0x3
  42694a:	jne    0x426970
  42694c:	shr    ecx,0x2
  42694f:	and    edx,0x3
  426952:	cmp    ecx,0x8
  426955:	jb     0x426964
  426957:	std    
  426958:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42695a:	cld    
  42695b:	jmp    DWORD PTR [edx*4+0x426a88]
  426962:	mov    edi,edi
  426964:	neg    ecx
  426966:	jmp    DWORD PTR [ecx*4+0x426a38]
  42696d:	lea    ecx,[ecx+0x0]
  426970:	mov    eax,edi
  426972:	mov    edx,0x3
  426977:	cmp    ecx,0x4
  42697a:	jb     0x426988
  42697c:	and    eax,0x3
  42697f:	sub    ecx,eax
  426981:	jmp    DWORD PTR [eax*4+0x42698c]
  426988:	jmp    DWORD PTR [ecx*4+0x426a88]
  42698f:	nop
  426990:	pushf  
  426991:	imul   eax,DWORD PTR [edx+0x0],0x4269c0
  426998:	call   0x8a42ac06
  42699d:	inc    esi
  42699e:	add    esp,DWORD PTR [ebx]
  4269a0:	ror    DWORD PTR [eax-0x117cfcb9],1
  4269a6:	add    ecx,eax
  4269a8:	jmp    0x231ecaf
  4269ad:	cmp    ecx,0x8
  4269b0:	jb     0x426964
  4269b2:	std    
  4269b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269b5:	cld    
  4269b6:	jmp    DWORD PTR [edx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    al,BYTE PTR [esi+0x3]
  4269c3:	and    edx,ecx
  4269c5:	mov    BYTE PTR [edi+0x3],al
  4269c8:	mov    al,BYTE PTR [esi+0x2]
  4269cb:	shr    ecx,0x2
  4269ce:	mov    BYTE PTR [edi+0x2],al
  4269d1:	sub    esi,0x2
  4269d4:	sub    edi,0x2
  4269d7:	cmp    ecx,0x8
  4269da:	jb     0x426964
  4269dc:	std    
  4269dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269df:	cld    
  4269e0:	jmp    DWORD PTR [edx*4+0x426a88]
  4269e7:	nop
  4269e8:	mov    al,BYTE PTR [esi+0x3]
  4269eb:	and    edx,ecx
  4269ed:	mov    BYTE PTR [edi+0x3],al
  4269f0:	mov    al,BYTE PTR [esi+0x2]
  4269f3:	mov    BYTE PTR [edi+0x2],al
  4269f6:	mov    al,BYTE PTR [esi+0x1]
  4269f9:	shr    ecx,0x2
  4269fc:	mov    BYTE PTR [edi+0x1],al
  4269ff:	sub    esi,0x3
  426a02:	sub    edi,0x3
  426a05:	cmp    ecx,0x8
  426a08:	jb     0x426964
  426a0e:	std    
  426a0f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a11:	cld    
  426a12:	jmp    DWORD PTR [edx*4+0x426a88]
  426a19:	lea    ecx,[ecx+0x0]
  426a1c:	cmp    al,0x6a
  426a1e:	inc    edx
  426a1f:	add    BYTE PTR [edx+ebp*2+0x42],al
  426a23:	add    BYTE PTR [edx+ebp*2+0x42],cl
  426a27:	add    BYTE PTR [edx+ebp*2+0x42],dl
  426a2b:	add    BYTE PTR [edx+ebp*2+0x42],bl
  426a2f:	add    BYTE PTR [edx+ebp*2+0x42],ah
  426a33:	add    BYTE PTR [edx+ebp*2+0x42],ch
  426a37:	add    BYTE PTR [edi+0x6a],bh
  426a3a:	inc    edx
  426a3b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a41:	inc    esp
  426a42:	(bad)  
  426a43:	sbb    al,0x8b
  426a45:	inc    esp
  426a46:	mov    ds,WORD PTR [eax]
  426a48:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a4c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426a50:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426a54:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426a58:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426a5c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426a60:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426a64:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426a68:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426a6c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426a70:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426a74:	lea    eax,[ecx*4+0x0]
  426a7b:	add    esi,eax
  426a7d:	add    edi,eax
  426a7f:	jmp    DWORD PTR [edx*4+0x426a88]
  426a86:	mov    edi,edi
  426a88:	cwde   
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [eax-0x4fffbd96],ah
  426a91:	push   0x42
  426a93:	add    ah,al
  426a95:	push   0x42
  426a97:	add    BYTE PTR [ebx+0x5f5e0845],cl
  426a9d:	leave  
  426a9e:	ret    
  426a9f:	nop
  426aa0:	mov    al,BYTE PTR [esi+0x3]
  426aa3:	mov    BYTE PTR [edi+0x3],al
  426aa6:	mov    eax,DWORD PTR [ebp+0x8]
  426aa9:	pop    esi
  426aaa:	pop    edi
  426aab:	leave  
  426aac:	ret    
  426aad:	lea    ecx,[ecx+0x0]
  426ab0:	mov    al,BYTE PTR [esi+0x3]
  426ab3:	mov    BYTE PTR [edi+0x3],al
  426ab6:	mov    al,BYTE PTR [esi+0x2]
  426ab9:	mov    BYTE PTR [edi+0x2],al
  426abc:	mov    eax,DWORD PTR [ebp+0x8]
  426abf:	pop    esi
  426ac0:	pop    edi
  426ac1:	leave  
  426ac2:	ret    
  426ac3:	nop
  426ac4:	mov    al,BYTE PTR [esi+0x3]
  426ac7:	mov    BYTE PTR [edi+0x3],al
  426aca:	mov    al,BYTE PTR [esi+0x2]
  426acd:	mov    BYTE PTR [edi+0x2],al
  426ad0:	mov    al,BYTE PTR [esi+0x1]
  426ad3:	mov    BYTE PTR [edi+0x1],al
  426ad6:	mov    eax,DWORD PTR [ebp+0x8]
  426ad9:	pop    esi
  426ada:	pop    edi
  426adb:	leave  
  426adc:	ret    
  426add:	push   ebp
  426ade:	mov    ebp,esp
  426ae0:	sub    esp,0xc
  426ae3:	mov    eax,ds:0x45c430
  426ae8:	xor    eax,DWORD PTR [ebp+0x4]
  426aeb:	and    BYTE PTR [ebp-0x6],0x0
  426aef:	push   0x6
  426af1:	mov    DWORD PTR [ebp-0x4],eax
  426af4:	lea    eax,[ebp-0xc]
  426af7:	push   eax
  426af8:	push   0x1004
  426afd:	push   DWORD PTR [ebp+0x8]
  426b00:	call   DWORD PTR ds:0x4280dc
  426b06:	test   eax,eax
  426b08:	jne    0x426b0f
  426b0a:	or     eax,0xffffffff
  426b0d:	jmp    0x426b19
  426b0f:	lea    eax,[ebp-0xc]
  426b12:	push   eax
  426b13:	call   0x426e1e
  426b18:	pop    ecx
  426b19:	mov    ecx,DWORD PTR [ebp-0x4]
  426b1c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b1f:	call   0x423f2c
  426b24:	leave  
  426b25:	ret    
  426b26:	push   0x38
  426b28:	push   0x428ea8
  426b2d:	call   0x423858
  426b32:	mov    eax,ds:0x45c430
  426b37:	xor    eax,DWORD PTR [ebp+0x4]
  426b3a:	mov    DWORD PTR [ebp-0x1c],eax
  426b3d:	xor    edi,edi
  426b3f:	mov    DWORD PTR [ebp-0x20],edi
  426b42:	mov    DWORD PTR [ebp-0x24],edi
  426b45:	mov    eax,DWORD PTR [ebp+0x14]
  426b48:	mov    ebx,DWORD PTR [eax]
  426b4a:	mov    DWORD PTR [ebp-0x28],ebx
  426b4d:	mov    DWORD PTR [ebp-0x2c],edi
  426b50:	mov    eax,DWORD PTR [ebp+0x8]
  426b53:	cmp    eax,DWORD PTR [ebp+0xc]
  426b56:	je     0x426ccf
  426b5c:	lea    ecx,[ebp-0x40]
  426b5f:	push   ecx
  426b60:	push   eax
  426b61:	mov    esi,DWORD PTR ds:0x4280a0
  426b67:	call   esi
  426b69:	test   eax,eax
  426b6b:	je     0x426b8d
  426b6d:	cmp    DWORD PTR [ebp-0x40],0x1
  426b71:	jne    0x426b8d
  426b73:	lea    eax,[ebp-0x40]
  426b76:	push   eax
  426b77:	push   DWORD PTR [ebp+0xc]
  426b7a:	call   esi
  426b7c:	test   eax,eax
  426b7e:	je     0x426b8d
  426b80:	cmp    DWORD PTR [ebp-0x40],0x1
  426b84:	jne    0x426b8d
  426b86:	mov    DWORD PTR [ebp-0x2c],0x1
  426b8d:	cmp    DWORD PTR [ebp-0x2c],edi
  426b90:	je     0x426bac
  426b92:	cmp    ebx,0xffffffff
  426b95:	je     0x426b9b
  426b97:	mov    esi,ebx
  426b99:	jmp    0x426ba7
  426b9b:	push   DWORD PTR [ebp+0x10]
  426b9e:	call   0x423e70
  426ba3:	pop    ecx
  426ba4:	mov    esi,eax
  426ba6:	inc    esi
  426ba7:	mov    DWORD PTR [ebp-0x44],esi
  426baa:	jmp    0x426baf
  426bac:	mov    esi,DWORD PTR [ebp-0x44]
  426baf:	cmp    DWORD PTR [ebp-0x2c],edi
  426bb2:	jne    0x426bce
  426bb4:	push   edi
  426bb5:	push   edi
  426bb6:	push   ebx
  426bb7:	push   DWORD PTR [ebp+0x10]
  426bba:	push   0x1
  426bbc:	push   DWORD PTR [ebp+0x8]
  426bbf:	call   DWORD PTR ds:0x4280cc
  426bc5:	mov    esi,eax
  426bc7:	mov    DWORD PTR [ebp-0x44],esi
  426bca:	cmp    esi,edi
  426bcc:	je     0x426c26
  426bce:	mov    DWORD PTR [ebp-0x4],edi
  426bd1:	lea    eax,[esi+esi*1]
  426bd4:	add    eax,0x3
  426bd7:	and    eax,0xfffffffc
  426bda:	call   0x4238b0
  426bdf:	mov    DWORD PTR [ebp-0x18],esp
  426be2:	mov    ebx,esp
  426be4:	mov    DWORD PTR [ebp-0x48],ebx
  426be7:	lea    eax,[esi+esi*1]
  426bea:	push   eax
  426beb:	push   edi
  426bec:	push   ebx
  426bed:	call   0x426160
  426bf2:	add    esp,0xc
  426bf5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426bf9:	jmp    0x426c12
  426bfb:	xor    eax,eax
  426bfd:	inc    eax
  426bfe:	ret    
  426bff:	mov    esp,DWORD PTR [ebp-0x18]
  426c02:	call   0x426cf5
  426c07:	xor    edi,edi
  426c09:	xor    ebx,ebx
  426c0b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c0f:	mov    esi,DWORD PTR [ebp-0x44]
  426c12:	cmp    ebx,edi
  426c14:	jne    0x426c34
  426c16:	push   esi
  426c17:	push   0x2
  426c19:	call   0x424978
  426c1e:	pop    ecx
  426c1f:	pop    ecx
  426c20:	mov    ebx,eax
  426c22:	cmp    ebx,edi
  426c24:	jne    0x426c2d
  426c26:	xor    eax,eax
  426c28:	jmp    0x426ce1
  426c2d:	mov    DWORD PTR [ebp-0x24],0x1
  426c34:	push   esi
  426c35:	push   ebx
  426c36:	push   DWORD PTR [ebp-0x28]
  426c39:	push   DWORD PTR [ebp+0x10]
  426c3c:	push   0x1
  426c3e:	push   DWORD PTR [ebp+0x8]
  426c41:	call   DWORD PTR ds:0x4280cc
  426c47:	test   eax,eax
  426c49:	je     0x426cd2
  426c4f:	cmp    DWORD PTR [ebp+0x18],edi
  426c52:	je     0x426c74
  426c54:	push   edi
  426c55:	push   edi
  426c56:	push   DWORD PTR [ebp+0x1c]
  426c59:	push   DWORD PTR [ebp+0x18]
  426c5c:	push   esi
  426c5d:	push   ebx
  426c5e:	push   edi
  426c5f:	push   DWORD PTR [ebp+0xc]
  426c62:	call   DWORD PTR ds:0x428050
  426c68:	test   eax,eax
  426c6a:	je     0x426cd2
  426c6c:	mov    eax,DWORD PTR [ebp+0x18]
  426c6f:	mov    DWORD PTR [ebp-0x20],eax
  426c72:	jmp    0x426cd2
  426c74:	cmp    DWORD PTR [ebp-0x2c],edi
  426c77:	jne    0x426c8f
  426c79:	push   edi
  426c7a:	push   edi
  426c7b:	push   edi
  426c7c:	push   edi
  426c7d:	push   esi
  426c7e:	push   ebx
  426c7f:	push   edi
  426c80:	push   DWORD PTR [ebp+0xc]
  426c83:	call   DWORD PTR ds:0x428050
  426c89:	mov    esi,eax
  426c8b:	cmp    esi,edi
  426c8d:	je     0x426cd2
  426c8f:	push   esi
  426c90:	push   0x1
  426c92:	call   0x424978
  426c97:	pop    ecx
  426c98:	pop    ecx
  426c99:	mov    DWORD PTR [ebp-0x20],eax
  426c9c:	cmp    eax,edi
  426c9e:	je     0x426cd2
  426ca0:	push   edi
  426ca1:	push   edi
  426ca2:	push   esi
  426ca3:	push   eax
  426ca4:	push   esi
  426ca5:	push   ebx
  426ca6:	push   edi
  426ca7:	push   DWORD PTR [ebp+0xc]
  426caa:	call   DWORD PTR ds:0x428050
  426cb0:	cmp    eax,edi
  426cb2:	jne    0x426cc2
  426cb4:	push   DWORD PTR [ebp-0x20]
  426cb7:	call   0x42446a
  426cbc:	pop    ecx
  426cbd:	mov    DWORD PTR [ebp-0x20],edi
  426cc0:	jmp    0x426cd2
  426cc2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426cc6:	je     0x426cd2
  426cc8:	mov    ecx,DWORD PTR [ebp+0x14]
  426ccb:	mov    DWORD PTR [ecx],eax
  426ccd:	jmp    0x426cd2
  426ccf:	mov    ebx,DWORD PTR [ebp-0x48]
  426cd2:	cmp    DWORD PTR [ebp-0x24],edi
  426cd5:	je     0x426cde
  426cd7:	push   ebx
  426cd8:	call   0x42446a
  426cdd:	pop    ecx
  426cde:	mov    eax,DWORD PTR [ebp-0x20]
  426ce1:	lea    esp,[ebp-0x54]
  426ce4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426ce7:	xor    ecx,DWORD PTR [ebp+0x4]
  426cea:	call   0x423f2c
  426cef:	call   0x423893
  426cf4:	ret    
  426cf5:	push   ebp
  426cf6:	mov    ebp,esp
  426cf8:	sub    esp,0x48
  426cfb:	push   ebx
  426cfc:	push   esi
  426cfd:	push   edi
  426cfe:	push   0x4
  426d00:	pop    eax
  426d01:	call   0x4238b0
  426d06:	mov    ebx,esp
  426d08:	push   0x1c
  426d0a:	lea    eax,[ebp-0x24]
  426d0d:	push   eax
  426d0e:	push   ebx
  426d0f:	call   DWORD PTR ds:0x4280e8
  426d15:	test   eax,eax
  426d17:	je     0x426d8a
  426d19:	mov    edi,DWORD PTR [ebp-0x20]
  426d1c:	lea    eax,[ebp-0x48]
  426d1f:	push   eax
  426d20:	call   DWORD PTR ds:0x4280e4
  426d26:	mov    eax,DWORD PTR [ebp-0x44]
  426d29:	lea    esi,[eax-0x1]
  426d2c:	not    esi
  426d2e:	and    esi,ebx
  426d30:	sub    esi,eax
  426d32:	mov    DWORD PTR [ebp-0x4],eax
  426d35:	mov    eax,ds:0x45cac4
  426d3a:	mov    ecx,eax
  426d3c:	dec    ecx
  426d3d:	neg    ecx
  426d3f:	sbb    ecx,ecx
  426d41:	and    ecx,0xffff1000
  426d47:	add    ecx,0x11000
  426d4d:	add    ecx,edi
  426d4f:	cmp    esi,ecx
  426d51:	jb     0x426d8a
  426d53:	cmp    eax,0x1
  426d56:	je     0x426da2
  426d58:	mov    ebx,edi
  426d5a:	mov    edi,0x1000
  426d5f:	push   0x1c
  426d61:	lea    eax,[ebp-0x24]
  426d64:	push   eax
  426d65:	push   ebx
  426d66:	call   DWORD PTR ds:0x4280e8
  426d6c:	test   eax,eax
  426d6e:	je     0x426d8a
  426d70:	add    ebx,DWORD PTR [ebp-0x18]
  426d73:	test   DWORD PTR [ebp-0x14],edi
  426d76:	je     0x426d5f
  426d78:	test   BYTE PTR [ebp-0xf],0x1
  426d7c:	mov    ebx,DWORD PTR [ebp-0x24]
  426d7f:	je     0x426d86
  426d81:	xor    eax,eax
  426d83:	inc    eax
  426d84:	jmp    0x426dbe
  426d86:	cmp    esi,ebx
  426d88:	jae    0x426d8e
  426d8a:	xor    eax,eax
  426d8c:	jmp    0x426dbe
  426d8e:	push   0x4
  426d90:	push   edi
  426d91:	push   DWORD PTR [ebp-0x4]
  426d94:	push   ebx
  426d95:	call   DWORD PTR ds:0x4280ac
  426d9b:	mov    eax,ds:0x45cac4
  426da0:	jmp    0x426da4
  426da2:	mov    ebx,esi
  426da4:	dec    eax
  426da5:	neg    eax
  426da7:	sbb    eax,eax
  426da9:	and    eax,0x103
  426dae:	lea    ecx,[ebp-0x8]
  426db1:	push   ecx
  426db2:	inc    eax
  426db3:	push   eax
  426db4:	push   DWORD PTR [ebp-0x4]
  426db7:	push   ebx
  426db8:	call   DWORD PTR ds:0x428008
  426dbe:	lea    esp,[ebp-0x54]
  426dc1:	pop    edi
  426dc2:	pop    esi
  426dc3:	pop    ebx
  426dc4:	leave  
  426dc5:	ret    
  426dc6:	int3   
  426dc7:	int3   
  426dc8:	int3   
  426dc9:	int3   
  426dca:	int3   
  426dcb:	int3   
  426dcc:	int3   
  426dcd:	int3   
  426dce:	int3   
  426dcf:	int3   
  426dd0:	push   ebp
  426dd1:	mov    ebp,esp
  426dd3:	push   edi
  426dd4:	push   esi
  426dd5:	push   ebx
  426dd6:	mov    esi,DWORD PTR [ebp+0xc]
  426dd9:	mov    edi,DWORD PTR [ebp+0x8]
  426ddc:	mov    al,0xff
  426dde:	mov    edi,edi
  426de0:	or     al,al
  426de2:	je     0x426e16
  426de4:	mov    al,BYTE PTR [esi]
  426de6:	add    esi,0x1
  426de9:	mov    ah,BYTE PTR [edi]
  426deb:	add    edi,0x1
  426dee:	cmp    ah,al
  426df0:	je     0x426de0
  426df2:	sub    al,0x41
  426df4:	cmp    al,0x1a
  426df6:	sbb    cl,cl
  426df8:	and    cl,0x20
  426dfb:	add    al,cl
  426dfd:	add    al,0x41
  426dff:	xchg   al,ah
  426e01:	sub    al,0x41
  426e03:	cmp    al,0x1a
  426e05:	sbb    cl,cl
  426e07:	and    cl,0x20
  426e0a:	add    al,cl
  426e0c:	add    al,0x41
  426e0e:	cmp    al,ah
  426e10:	je     0x426de0
  426e12:	sbb    al,al
  426e14:	sbb    al,0xff
  426e16:	movsx  eax,al
  426e19:	pop    ebx
  426e1a:	pop    esi
  426e1b:	pop    edi
  426e1c:	leave  
  426e1d:	ret    
  426e1e:	push   esi
  426e1f:	push   edi
  426e20:	call   0x42370d
  426e25:	mov    edi,DWORD PTR [eax+0x64]
  426e28:	cmp    edi,DWORD PTR ds:0x45c58c
  426e2e:	je     0x426e37
  426e30:	call   0x424bbf
  426e35:	mov    edi,eax
  426e37:	mov    esi,DWORD PTR [esp+0xc]
  426e3b:	cmp    DWORD PTR [edi+0x28],0x1
  426e3f:	movzx  eax,BYTE PTR [esi]
  426e42:	jle    0x426e52
  426e44:	push   0x8
  426e46:	push   eax
  426e47:	push   edi
  426e48:	call   0x426ea6
  426e4d:	add    esp,0xc
  426e50:	jmp    0x426e5c
  426e52:	mov    ecx,DWORD PTR [edi+0x48]
  426e55:	movzx  eax,BYTE PTR [ecx+eax*2]
  426e59:	and    eax,0x8
  426e5c:	test   eax,eax
  426e5e:	je     0x426e63
  426e60:	inc    esi
  426e61:	jmp    0x426e3b
  426e63:	movzx  ecx,BYTE PTR [esi]
  426e66:	inc    esi
  426e67:	cmp    ecx,0x2d
  426e6a:	mov    edx,ecx
  426e6c:	je     0x426e73
  426e6e:	cmp    ecx,0x2b
  426e71:	jne    0x426e77
  426e73:	movzx  ecx,BYTE PTR [esi]
  426e76:	inc    esi
  426e77:	xor    eax,eax
  426e79:	cmp    ecx,0x30
  426e7c:	jl     0x426e88
  426e7e:	cmp    ecx,0x39
  426e81:	jg     0x426e88
  426e83:	sub    ecx,0x30
  426e86:	jmp    0x426e8b
  426e88:	or     ecx,0xffffffff
  426e8b:	cmp    ecx,0xffffffff
  426e8e:	je     0x426e9c
  426e90:	lea    eax,[eax+eax*4]
  426e93:	lea    eax,[ecx+eax*2]
  426e96:	movzx  ecx,BYTE PTR [esi]
  426e99:	inc    esi
  426e9a:	jmp    0x426e79
  426e9c:	cmp    edx,0x2d
  426e9f:	pop    edi
  426ea0:	pop    esi
  426ea1:	jne    0x426ea5
  426ea3:	neg    eax
  426ea5:	ret    
  426ea6:	push   ebp
  426ea7:	mov    ebp,esp
  426ea9:	push   ecx
  426eaa:	mov    eax,DWORD PTR [ebp+0xc]
  426ead:	lea    ecx,[eax+0x1]
  426eb0:	cmp    ecx,0x100
  426eb6:	mov    ecx,DWORD PTR [ebp+0x8]
  426eb9:	ja     0x426ec4
  426ebb:	mov    ecx,DWORD PTR [ecx+0x48]
  426ebe:	movzx  eax,WORD PTR [ecx+eax*2]
  426ec2:	jmp    0x426f18
  426ec4:	push   esi
  426ec5:	mov    edx,eax
  426ec7:	sar    edx,0x8
  426eca:	push   edi
  426ecb:	mov    edi,DWORD PTR [ecx+0x48]
  426ece:	movzx  esi,dl
  426ed1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426ed6:	pop    edi
  426ed7:	pop    esi
  426ed8:	je     0x426ee9
  426eda:	and    BYTE PTR [ebp-0x2],0x0
  426ede:	push   0x2
  426ee0:	mov    BYTE PTR [ebp-0x3],al
  426ee3:	mov    BYTE PTR [ebp-0x4],dl
  426ee6:	pop    eax
  426ee7:	jmp    0x426ef3
  426ee9:	and    BYTE PTR [ebp-0x3],0x0
  426eed:	mov    BYTE PTR [ebp-0x4],al
  426ef0:	xor    eax,eax
  426ef2:	inc    eax
  426ef3:	push   0x1
  426ef5:	push   DWORD PTR [ecx+0x14]
  426ef8:	push   DWORD PTR [ecx+0x4]
  426efb:	lea    ecx,[ebp+0xe]
  426efe:	push   ecx
  426eff:	push   eax
  426f00:	lea    eax,[ebp-0x4]
  426f03:	push   eax
  426f04:	push   0x1
  426f06:	call   0x425f88
  426f0b:	add    esp,0x1c
  426f0e:	test   eax,eax
  426f10:	jne    0x426f14
  426f12:	leave  
  426f13:	ret    
  426f14:	movzx  eax,WORD PTR [ebp+0xe]
  426f18:	and    eax,DWORD PTR [ebp+0x10]
  426f1b:	leave  
  426f1c:	ret    
  426f1d:	int3   
  426f1e:	int3   
  426f1f:	int3   
  426f20:	mov    eax,DWORD PTR [esp+0x8]
  426f24:	mov    ecx,DWORD PTR [esp+0x10]
  426f28:	or     ecx,eax
  426f2a:	mov    ecx,DWORD PTR [esp+0xc]
  426f2e:	jne    0x426f39
  426f30:	mov    eax,DWORD PTR [esp+0x4]
  426f34:	mul    ecx
  426f36:	ret    0x10
  426f39:	push   ebx
  426f3a:	mul    ecx
  426f3c:	mov    ebx,eax
  426f3e:	mov    eax,DWORD PTR [esp+0x8]
  426f42:	mul    DWORD PTR [esp+0x14]
  426f46:	add    ebx,eax
  426f48:	mov    eax,DWORD PTR [esp+0x8]
  426f4c:	mul    ecx
  426f4e:	add    edx,ebx
  426f50:	pop    ebx
  426f51:	ret    0x10
  426f54:	int3   
  426f55:	int3   
  426f56:	int3   
  426f57:	int3   
  426f58:	int3   
  426f59:	int3   
  426f5a:	int3   
  426f5b:	int3   
  426f5c:	int3   
  426f5d:	int3   
  426f5e:	int3   
  426f5f:	int3   
  426f60:	push   ebp
  426f61:	mov    ebp,esp
  426f63:	push   edi
  426f64:	push   esi
  426f65:	push   ebx
  426f66:	mov    ecx,DWORD PTR [ebp+0x10]
  426f69:	or     ecx,ecx
  426f6b:	je     0x426fba
  426f6d:	mov    esi,DWORD PTR [ebp+0x8]
  426f70:	mov    edi,DWORD PTR [ebp+0xc]
  426f73:	mov    bh,0x41
  426f75:	mov    bl,0x5a
  426f77:	mov    dh,0x20
  426f79:	lea    ecx,[ecx+0x0]
  426f7c:	mov    ah,BYTE PTR [esi]
  426f7e:	or     ah,ah
  426f80:	mov    al,BYTE PTR [edi]
  426f82:	je     0x426fab
  426f84:	or     al,al
  426f86:	je     0x426fab
  426f88:	add    esi,0x1
  426f8b:	add    edi,0x1
  426f8e:	cmp    ah,bh
  426f90:	jb     0x426f98
  426f92:	cmp    ah,bl
  426f94:	ja     0x426f98
  426f96:	add    ah,dh
  426f98:	cmp    al,bh
  426f9a:	jb     0x426fa2
  426f9c:	cmp    al,bl
  426f9e:	ja     0x426fa2
  426fa0:	add    al,dh
  426fa2:	cmp    ah,al
  426fa4:	jne    0x426fb1
  426fa6:	sub    ecx,0x1
  426fa9:	jne    0x426f7c
  426fab:	xor    ecx,ecx
  426fad:	cmp    ah,al
  426faf:	je     0x426fba
  426fb1:	mov    ecx,0xffffffff
  426fb6:	jb     0x426fba
  426fb8:	neg    ecx
  426fba:	mov    eax,ecx
  426fbc:	pop    ebx
  426fbd:	pop    esi
  426fbe:	pop    edi
  426fbf:	leave  
  426fc0:	ret    
  426fc1:	int3   
  426fc2:	int3   
  426fc3:	int3   
  426fc4:	int3   
  426fc5:	int3   
  426fc6:	int3   
  426fc7:	int3   
  426fc8:	int3   
  426fc9:	int3   
  426fca:	int3   
  426fcb:	int3   
  426fcc:	int3   
  426fcd:	int3   
  426fce:	int3   
  426fcf:	int3   
  426fd0:	push   esi
  426fd1:	mov    eax,DWORD PTR [esp+0x14]
  426fd5:	or     eax,eax
  426fd7:	jne    0x427001
  426fd9:	mov    ecx,DWORD PTR [esp+0x10]
  426fdd:	mov    eax,DWORD PTR [esp+0xc]
  426fe1:	xor    edx,edx
  426fe3:	div    ecx
  426fe5:	mov    ebx,eax
  426fe7:	mov    eax,DWORD PTR [esp+0x8]
  426feb:	div    ecx
  426fed:	mov    esi,eax
  426fef:	mov    eax,ebx
  426ff1:	mul    DWORD PTR [esp+0x10]
  426ff5:	mov    ecx,eax
  426ff7:	mov    eax,esi
  426ff9:	mul    DWORD PTR [esp+0x10]
  426ffd:	add    edx,ecx
  426fff:	jmp    0x427048
  427001:	mov    ecx,eax
  427003:	mov    ebx,DWORD PTR [esp+0x10]
  427007:	mov    edx,DWORD PTR [esp+0xc]
  42700b:	mov    eax,DWORD PTR [esp+0x8]
  42700f:	shr    ecx,1
  427011:	rcr    ebx,1
  427013:	shr    edx,1
  427015:	rcr    eax,1
  427017:	or     ecx,ecx
  427019:	jne    0x42700f
  42701b:	div    ebx
  42701d:	mov    esi,eax
  42701f:	mul    DWORD PTR [esp+0x14]
  427023:	mov    ecx,eax
  427025:	mov    eax,DWORD PTR [esp+0x10]
  427029:	mul    esi
  42702b:	add    edx,ecx
  42702d:	jb     0x42703d
  42702f:	cmp    edx,DWORD PTR [esp+0xc]
  427033:	ja     0x42703d
  427035:	jb     0x427046
  427037:	cmp    eax,DWORD PTR [esp+0x8]
  42703b:	jbe    0x427046
  42703d:	dec    esi
  42703e:	sub    eax,DWORD PTR [esp+0x10]
  427042:	sbb    edx,DWORD PTR [esp+0x14]
  427046:	xor    ebx,ebx
  427048:	sub    eax,DWORD PTR [esp+0x8]
  42704c:	sbb    edx,DWORD PTR [esp+0xc]
  427050:	neg    edx
  427052:	neg    eax
  427054:	sbb    edx,0x0
  427057:	mov    ecx,edx
  427059:	mov    edx,ebx
  42705b:	mov    ebx,ecx
  42705d:	mov    ecx,eax
  42705f:	mov    eax,esi
  427061:	pop    esi
  427062:	ret    0x10
  427065:	int3   
  427066:	int3   
  427067:	int3   
  427068:	int3   
  427069:	int3   
  42706a:	int3   
  42706b:	int3   
  42706c:	int3   
  42706d:	int3   
  42706e:	int3   
  42706f:	int3   
  427070:	lea    eax,[edx-0x1]
  427073:	pop    ebx
  427074:	ret    
  427075:	lea    esp,[esp+0x0]
  42707c:	lea    esp,[esp+0x0]
  427080:	xor    eax,eax
  427082:	mov    al,BYTE PTR [esp+0x8]
  427086:	push   ebx
  427087:	mov    ebx,eax
  427089:	shl    eax,0x8
  42708c:	mov    edx,DWORD PTR [esp+0x8]
  427090:	test   edx,0x3
  427096:	je     0x4270ad
  427098:	mov    cl,BYTE PTR [edx]
  42709a:	add    edx,0x1
  42709d:	cmp    cl,bl
  42709f:	je     0x427070
  4270a1:	test   cl,cl
  4270a3:	je     0x4270f6
  4270a5:	test   edx,0x3
  4270ab:	jne    0x427098
  4270ad:	or     ebx,eax
  4270af:	push   edi
  4270b0:	mov    eax,ebx
  4270b2:	shl    ebx,0x10
  4270b5:	push   esi
  4270b6:	or     ebx,eax
  4270b8:	mov    ecx,DWORD PTR [edx]
  4270ba:	mov    edi,0x7efefeff
  4270bf:	mov    eax,ecx
  4270c1:	mov    esi,edi
  4270c3:	xor    ecx,ebx
  4270c5:	add    esi,eax
  4270c7:	add    edi,ecx
  4270c9:	xor    ecx,0xffffffff
  4270cc:	xor    eax,0xffffffff
  4270cf:	xor    ecx,edi
  4270d1:	xor    eax,esi
  4270d3:	add    edx,0x4
  4270d6:	and    ecx,0x81010100
  4270dc:	jne    0x4270fa
  4270de:	and    eax,0x81010100
  4270e3:	je     0x4270b8
  4270e5:	and    eax,0x1010100
  4270ea:	jne    0x4270f4
  4270ec:	and    esi,0x80000000
  4270f2:	jne    0x4270b8
  4270f4:	pop    esi
  4270f5:	pop    edi
  4270f6:	pop    ebx
  4270f7:	xor    eax,eax
  4270f9:	ret    
  4270fa:	mov    eax,DWORD PTR [edx-0x4]
  4270fd:	cmp    al,bl
  4270ff:	je     0x427137
  427101:	test   al,al
  427103:	je     0x4270f4
  427105:	cmp    ah,bl
  427107:	je     0x427130
  427109:	test   ah,ah
  42710b:	je     0x4270f4
  42710d:	shr    eax,0x10
  427110:	cmp    al,bl
  427112:	je     0x427129
  427114:	test   al,al
  427116:	je     0x4270f4
  427118:	cmp    ah,bl
  42711a:	je     0x427122
  42711c:	test   ah,ah
  42711e:	je     0x4270f4
  427120:	jmp    0x4270b8
  427122:	pop    esi
  427123:	pop    edi
  427124:	lea    eax,[edx-0x1]
  427127:	pop    ebx
  427128:	ret    
  427129:	lea    eax,[edx-0x2]
  42712c:	pop    esi
  42712d:	pop    edi
  42712e:	pop    ebx
  42712f:	ret    
  427130:	lea    eax,[edx-0x3]
  427133:	pop    esi
  427134:	pop    edi
  427135:	pop    ebx
  427136:	ret    
  427137:	lea    eax,[edx-0x4]
  42713a:	pop    esi
  42713b:	pop    edi
  42713c:	pop    ebx
  42713d:	ret    
  42713e:	jmp    DWORD PTR ds:0x4280e0
