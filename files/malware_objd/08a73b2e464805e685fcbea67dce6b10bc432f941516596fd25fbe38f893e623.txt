
08a73b2e464805e685fcbea67dce6b10bc432f941516596fd25fbe38f893e623.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,DWORD PTR [ebp+0x8]
  40100c:	adc    ecx,0x2570
  401012:	push   ebx
  401013:	adc    DWORD PTR ds:0x42a3e2,ecx
  401019:	push   esi
  40101a:	mov    DWORD PTR ds:0x42a3b6,0x13
  401024:	cmp    DWORD PTR ds:0x42a3b6,0x0
  40102b:	je     0x401065
  401031:	cmp    DWORD PTR ds:0x42a3b6,0x23
  401038:	ja     0x401065
  40103e:	jmp    0x401053
  401043:	push   0x42a3da
  401048:	push   0x4291e3
  40104d:	call   DWORD PTR ds:0x42a542
  401053:	mov    ecx,DWORD PTR ds:0x42a3b6
  401059:	dec    ecx
  40105a:	mov    DWORD PTR ds:0x42a3b6,ecx
  401060:	jmp    0x401024
  401065:	push   edi
  401066:	and    DWORD PTR ds:0x42a406,0x0
  401070:	mov    esi,DWORD PTR ds:0x42a406
  401076:	inc    esi
  401077:	mov    DWORD PTR ds:0x42a406,esi
  40107d:	cmp    DWORD PTR ds:0x42a406,0x4
  401084:	jg     0x4010ce
  40108a:	jmp    0x4010a5
  40108f:	push   0x5221
  401094:	push   0x42a41e
  401099:	push   DWORD PTR [ebp-0x10]
  40109c:	push   DWORD PTR [ebp-0x14]
  40109f:	call   DWORD PTR ds:0x42a546
  4010a5:	cmp    DWORD PTR ds:0x42a406,0x3
  4010ac:	jne    0x4010c1
  4010b2:	xor    esi,esi
  4010b4:	or     esi,DWORD PTR ds:0x42a406
  4010ba:	inc    esi
  4010bb:	mov    DWORD PTR ds:0x42a406,esi
  4010c1:	cmp    DWORD PTR ds:0x42a406,0x15
  4010c8:	jb     0x401070
  4010ce:	mov    esi,0x75108a8
  4010d3:	mov    ecx,DWORD PTR ds:0x42a4c6
  4010d9:	mov    ecx,DWORD PTR [ecx]
  4010db:	add    DWORD PTR ds:0x42a3a6,ecx
  4010e1:	xor    eax,esi
  4010e3:	and    DWORD PTR ds:0x42a3d6,0x0
  4010ed:	mov    ecx,DWORD PTR ds:0x42a3d6
  4010f3:	inc    ecx
  4010f4:	mov    DWORD PTR ds:0x42a3d6,ecx
  4010fa:	cmp    DWORD PTR ds:0x42a3d6,0x1f
  401101:	jge    0x40112c
  401107:	jmp    0x40111f
  40110c:	push   DWORD PTR [ebp-0xc]
  40110f:	push   0x429231
  401114:	push   0x42916d
  401119:	call   DWORD PTR ds:0x42a506
  40111f:	cmp    DWORD PTR ds:0x42a3d6,0x1e
  401126:	jb     0x4010ed
  40112c:	mov    edi,0x3272ef
  401131:	add    eax,edi
  401133:	and    DWORD PTR ds:0x42a3e2,0x0
  40113d:	jmp    0x401151
  401142:	xor    ecx,ecx
  401144:	xor    ecx,DWORD PTR ds:0x42a3e2
  40114a:	inc    ecx
  40114b:	mov    DWORD PTR ds:0x42a3e2,ecx
  401151:	cmp    DWORD PTR ds:0x42a3e2,0x1e
  401158:	jae    0x40119f
  40115e:	cmp    DWORD PTR ds:0x42a3e2,0xe
  401165:	ja     0x40119f
  40116b:	jmp    0x40117e
  401170:	push   0x42916d
  401175:	push   DWORD PTR [ebp-0x18]
  401178:	call   DWORD PTR ds:0x42a50a
  40117e:	cmp    DWORD PTR ds:0x42a3e2,0xd
  401185:	jne    0x40119a
  40118b:	xor    ecx,ecx
  40118d:	or     ecx,DWORD PTR ds:0x42a3e2
  401193:	inc    ecx
  401194:	mov    DWORD PTR ds:0x42a3e2,ecx
  40119a:	jmp    0x401142
  40119f:	mov    DWORD PTR [ebp-0x40],eax
  4011a2:	mov    eax,ds:0x42a41a
  4011a7:	sbb    DWORD PTR ds:0x42a3aa,eax
  4011ad:	mov    eax,ds:0x42929e
  4011b2:	sub    DWORD PTR ds:0x42a44a,ecx
  4011b8:	mov    eax,DWORD PTR [eax]
  4011ba:	mov    DWORD PTR [ebp-0x3c],eax
  4011bd:	inc    eax
  4011be:	mov    eax,ds:0x4294ae
  4011c3:	and    DWORD PTR ds:0x42a3ba,0x0
  4011cd:	jmp    0x4011df
  4011d2:	mov    ecx,DWORD PTR ds:0x42a3ba
  4011d8:	inc    ecx
  4011d9:	mov    DWORD PTR ds:0x42a3ba,ecx
  4011df:	cmp    DWORD PTR ds:0x42a3ba,0x1f
  4011e6:	jae    0x401233
  4011ec:	cmp    DWORD PTR ds:0x42a3ba,0x4
  4011f3:	jge    0x401233
  4011f9:	jmp    0x401214
  4011fe:	push   0x586f
  401203:	push   DWORD PTR [ebp-0x18]
  401206:	push   DWORD PTR [ebp-0x14]
  401209:	push   0x8d08
  40120e:	call   DWORD PTR ds:0x42a50e
  401214:	cmp    DWORD PTR ds:0x42a3ba,0x3
  40121b:	jne    0x40122e
  401221:	mov    ecx,DWORD PTR ds:0x42a3ba
  401227:	inc    ecx
  401228:	mov    DWORD PTR ds:0x42a3ba,ecx
  40122e:	jmp    0x4011d2
  401233:	mov    eax,DWORD PTR [eax]
  401235:	add    ecx,0x507d
  40123b:	mov    DWORD PTR [ebp-0x1c],eax
  40123e:	xor    ecx,0x7815
  401244:	mov    DWORD PTR [ebp-0x34],0xf89c87b9
  40124b:	or     DWORD PTR ds:0x42a42a,0x4fa4
  401255:	mov    eax,DWORD PTR [ebp-0x34]
  401258:	xor    eax,esi
  40125a:	sub    ecx,DWORD PTR ds:0x42a41e
  401260:	add    eax,edi
  401262:	and    DWORD PTR ds:0x42a3b6,edi
  401268:	mov    DWORD PTR [ebp-0x40],eax
  40126b:	mov    eax,ds:0x42941e
  401270:	mov    DWORD PTR [ebp-0x40],eax
  401273:	xor    eax,0x2e62
  401278:	mov    eax,DWORD PTR [ebp-0x3c]
  40127b:	mov    DWORD PTR [ebp-0x14],eax
  40127e:	and    DWORD PTR ds:0x42a42e,0x0
  401288:	xor    ecx,ecx
  40128a:	xor    ecx,DWORD PTR ds:0x42a42e
  401290:	inc    ecx
  401291:	mov    DWORD PTR ds:0x42a42e,ecx
  401297:	cmp    DWORD PTR ds:0x42a42e,0xb
  40129e:	ja     0x4012dc
  4012a4:	jmp    0x4012b5
  4012a9:	push   DWORD PTR [ebp-0x10]
  4012ac:	push   DWORD PTR [ebp-0x18]
  4012af:	call   DWORD PTR ds:0x42a512
  4012b5:	cmp    DWORD PTR ds:0x42a42e,0xa
  4012bc:	jne    0x4012cf
  4012c2:	mov    ecx,DWORD PTR ds:0x42a42e
  4012c8:	inc    ecx
  4012c9:	mov    DWORD PTR ds:0x42a42e,ecx
  4012cf:	cmp    DWORD PTR ds:0x42a42e,0x12
  4012d6:	jb     0x401288
  4012dc:	mov    eax,DWORD PTR [ebp-0x14]
  4012df:	adc    DWORD PTR ds:0x42a43e,edx
  4012e5:	push   0x4
  4012e7:	pop    ecx
  4012e8:	or     DWORD PTR ds:0x42a3a6,0x42a40a
  4012f2:	sub    ecx,eax
  4012f4:	and    DWORD PTR ds:0x42a3fe,edx
  4012fa:	add    ecx,DWORD PTR [ebp-0x1c]
  4012fd:	sub    DWORD PTR ds:0x42a3aa,0x29a3
  401307:	mov    DWORD PTR [ebp-0x2c],0xf89c85f9
  40130e:	adc    DWORD PTR ds:0x42a40a,0x27f4
  401318:	mov    DWORD PTR [ebp-0x18],ecx
  40131b:	xor    eax,eax
  40131d:	xor    eax,DWORD PTR ds:0x42a412
  401323:	or     DWORD PTR ds:0x42a3c6,eax
  401329:	mov    DWORD PTR [ebp-0xa0],0xf89c85bd
  401333:	mov    eax,ds:0x42a3ce
  401338:	or     DWORD PTR ds:0x42a3ca,eax
  40133e:	mov    eax,DWORD PTR [ebp-0x14]
  401341:	mov    DWORD PTR [ebp-0x9c],eax
  401347:	adc    DWORD PTR ds:0x42a3ea,ecx
  40134d:	mov    eax,DWORD PTR [ebp-0x18]
  401350:	mov    DWORD PTR [ebp-0x98],eax
  401356:	sbb    DWORD PTR ds:0x42a3da,0x5122
  401360:	mov    eax,DWORD PTR [ebp-0x2c]
  401363:	xor    eax,esi
  401365:	add    eax,edi
  401367:	or     DWORD PTR ds:0x42a3ca,0x42a43a
  401371:	mov    DWORD PTR [ebp-0x94],eax
  401377:	lea    eax,[ebp-0x48]
  40137a:	mov    DWORD PTR [ebp-0x90],eax
  401380:	mov    eax,DWORD PTR [ebp-0xa0]
  401386:	xor    eax,esi
  401388:	sbb    DWORD PTR ds:0x42a442,0x42a42a
  401392:	add    eax,edi
  401394:	or     DWORD PTR ds:0x42a43e,0x42a3a6
  40139e:	mov    DWORD PTR [ebp-0xa0],eax
  4013a4:	sub    DWORD PTR ds:0x42a3c2,0x1d49
  4013ae:	lea    eax,[ebp-0xa0]
  4013b4:	push   eax
  4013b5:	neg    eax
  4013b7:	mov    eax,DWORD PTR [ebp+0xc]
  4013ba:	sub    DWORD PTR ds:0x42a3fa,0x2c11
  4013c4:	xor    eax,esi
  4013c6:	add    eax,edi
  4013c8:	push   eax
  4013c9:	mov    eax,ds:0x42943e
  4013ce:	push   0x429394
  4013d3:	mov    DWORD PTR ds:0x42a3d6,0x524d
  4013dd:	push   DWORD PTR [eax]
  4013df:	call   0x40a946
  4013e4:	xor    edx,edx
  4013e6:	add    edx,DWORD PTR ds:0x42a3ee
  4013ec:	and    DWORD PTR ds:0x42a3de,edx
  4013f2:	mov    ebx,DWORD PTR [ebp-0x14]
  4013f5:	mov    eax,DWORD PTR [ebp-0x18]
  4013f8:	mov    DWORD PTR [ebp-0x58],eax
  4013fb:	mov    eax,ds:0x42a456
  401400:	mov    edx,DWORD PTR ds:0x42a49e
  401406:	sub    edx,eax
  401408:	sub    eax,DWORD PTR [eax+edx*1]
  40140b:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  401412:	mov    eax,0xf89c85bb
  401417:	mov    DWORD PTR [ebp-0x1c],eax
  40141a:	xor    DWORD PTR ds:0x42a3d6,0x37ec
  401424:	lea    ecx,[eax-0x2]
  401427:	and    DWORD PTR ds:0x42a432,0x0
  401431:	jmp    0x401443
  401436:	mov    edx,DWORD PTR ds:0x42a432
  40143c:	inc    edx
  40143d:	mov    DWORD PTR ds:0x42a432,edx
  401443:	cmp    DWORD PTR ds:0x42a432,0x18
  40144a:	jae    0x40382d
  401450:	cmp    DWORD PTR ds:0x42a432,0x4
  401457:	jge    0x40382d
  40145d:	jmp    0x40146b
  401462:	push   DWORD PTR [ebp-0x14]
  401465:	call   DWORD PTR ds:0x42a516
  40146b:	cmp    DWORD PTR ds:0x42a432,0x3
  401472:	jne    0x401485
  401478:	mov    edx,DWORD PTR ds:0x42a432
  40147e:	inc    edx
  40147f:	mov    DWORD PTR ds:0x42a432,edx
  401485:	jmp    0x401436
  40148a:	jmp    0x40382d
  40148f:	adc    edx,ebx
  401491:	xor    DWORD PTR [esi-0x4f],ebp
  401494:	test   DWORD PTR ds:0x31105485,eax
  40149a:	jg     0x4014a8
  40149c:	js     0x401477
  40149e:	mov    BYTE PTR [edx+0x7a],bh
  4014a1:	jp     0x40151d
  4014a3:	cld    
  4014a4:	pop    edi
  4014a5:	jp     0x401521
  4014a7:	and    DWORD PTR [eax],ebp
  4014a9:	daa    
  4014aa:	cmp    eax,0x2f1b3125
  4014af:	jno    0x4014e9
  4014b1:	jne    0x401529
  4014b3:	scas   al,BYTE PTR es:[edi]
  4014b4:	jbe    0x401520
  4014b6:	push   0x69
  4014b8:	inc    edx
  4014b9:	rcr    eax,1
  4014bb:	std    
  4014bc:	ins    BYTE PTR es:[edi],dx
  4014bd:	push   esp
  4014be:	imul   edi,DWORD PTR [ebp+0x5b],0xffffffac
  4014c2:	jl     0x40152d
  4014c4:	gs iret 
  4014c6:	pop    ecx
  4014c7:	dec    edx
  4014c8:	cmp    al,0x88
  4014ca:	cli    
  4014cb:	xchg   edi,eax
  4014cc:	xchg   BYTE PTR [edi+0x49],ah
  4014cf:	jg     0x401518
  4014d1:	mov    WORD PTR [esi+0x3bb2bc7f],?
  4014d7:	sub    bh,bh
  4014d9:	jbe    0x4014b3
  4014db:	cli    
  4014dc:	arpl   WORD PTR [edi+0x1e],di
  4014df:	jmp    0xe9fade29
  4014e4:	xchg   edi,eax
  4014e5:	and    ebx,esi
  4014e7:	mov    esi,DWORD PTR ds:0x8aab650f
  4014ed:	rol    BYTE PTR [edi],1
  4014ef:	imul   ebx,ecx,0xfa0ee010
  4014f5:	ss and al,0x54
  4014f8:	or     BYTE PTR [esi],dh
  4014fa:	imul   esi,DWORD PTR [ebp+eax*8-0x51],0x23
  4014ff:	pop    ebp
  401500:	adc    DWORD PTR [esi+0x2b55f5ff],esi
  401506:	add    BYTE PTR [edx-0x2c],0x5b
  40150a:	add    eax,0xbd84fa1a
  40150f:	jae    0x4014ea
  401511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401512:	pop    edi
  401513:	mov    edi,DWORD PTR [ebp+0x4d922017]
  401519:	add    ebx,DWORD PTR [esi+0xb838238]
  40151f:	fisubr DWORD PTR [ecx]
  401521:	bound  ecx,QWORD PTR [ecx-0xc9fbcc0]
  401527:	iret   
  401528:	mov    dh,BYTE PTR ds:0xc8c7cc95
  40152e:	xchg   esp,eax
  40152f:	ins    DWORD PTR es:[edi],dx
  401530:	lock push ecx
  401532:	bound  ecx,QWORD PTR [eax+0x8]
  401535:	add    eax,DWORD PTR ds:[esi+0x13]
  401539:	test   eax,0x4cb7ca4b
  40153e:	fcom   QWORD PTR [eax]
  401540:	data16 stc 
  401542:	bound  esp,QWORD PTR [esi-0x4f]
  401545:	add    eax,0x5204bf74
  40154a:	and    al,BYTE PTR [ebx+0x64101a34]
  401550:	fst    DWORD PTR [ecx]
  401552:	jb     0x401553
  401554:	(bad)  
  401555:	outs   dx,DWORD PTR ds:[esi]
  401556:	daa    
  401557:	push   ds
  401558:	xor    ebp,edi
  40155a:	push   ecx
  40155b:	xchg   esi,eax
  40155c:	pushf  
  40155d:	imul   DWORD PTR [ebx-0x60]
  401560:	and    cl,bh
  401562:	lock arpl di,sp
  401565:	fistp  DWORD PTR [esi]
  401567:	adc    ecx,edx
  401569:	mov    ?,WORD PTR [eax]
  40156b:	fisttp QWORD PTR [ebx-0x56]
  40156e:	pop    ecx
  40156f:	aaa    
  401570:	out    dx,al
  401571:	mul    DWORD PTR [edi+0x4]
  401574:	idiv   DWORD PTR [eax+0x63bd4536]
  40157a:	adc    al,0x2f
  40157c:	adc    ebx,DWORD PTR [esp+ecx*1]
  40157f:	scas   al,BYTE PTR es:[edi]
  401580:	inc    esi
  401581:	sbb    al,0x80
  401583:	(bad)  
  401584:	gs stc 
  401586:	dec    ecx
  401587:	out    dx,al
  401588:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401589:	fbld   TBYTE PTR [eax+0x62]
  40158c:	mov    esp,0xf8671aa4
  401591:	xor    al,0x1a
  401593:	jbe    0x401585
  401595:	int3   
  401596:	popf   
  401597:	(bad)  
  401598:	jns    0x401616
  40159a:	icebp  
  40159b:	mov    bh,0xd5
  40159d:	cdq    
  40159e:	outs   dx,BYTE PTR ds:[esi]
  40159f:	xchg   esi,eax
  4015a0:	mov    esi,0x73d368d4
  4015a5:	push   ebx
  4015a6:	jl     0x4015cb
  4015a8:	mov    ds:0xfa866628,eax
  4015ad:	gs jns 0x401568
  4015b0:	mov    ah,0x7c
  4015b2:	or     eax,0xa74a1cca
  4015b7:	and    eax,0x279fc523
  4015bc:	nop
  4015bd:	lds    ebx,FWORD PTR [eax+0x71ac9912]
  4015c3:	add    esp,edx
  4015c5:	sbb    bl,cl
  4015c7:	mov    BYTE PTR [edi+0x1c],bl
  4015ca:	retf   0x7e95
  4015cd:	sub    eax,0xf0ad4855
  4015d2:	fadd   DWORD PTR [ebp-0x7ed84aa8]
  4015d8:	sub    BYTE PTR [ebp+0x5579bc6],dl
  4015de:	repnz les esi,FWORD PTR [ebx+ebx*2]
  4015e2:	repz sub edi,DWORD PTR [esi]
  4015e5:	das    
  4015e6:	cs pop ebx
  4015e8:	fdivr  QWORD PTR [ecx]
  4015ea:	adc    ch,ah
  4015ec:	adc    ch,BYTE PTR [edi+edi*8-0x7d]
  4015f0:	scas   eax,DWORD PTR es:[edi]
  4015f1:	xchg   ebp,edi
  4015f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015f4:	inc    edx
  4015f5:	cwde   
  4015f6:	sub    al,0x60
  4015f8:	inc    ecx
  4015f9:	mov    DWORD PTR [ebx-0x5172d3fa],edx
  4015ff:	(bad)  
  401600:	cld    
  401601:	push   esi
  401602:	sub    DWORD PTR [ebx+0x1b],edx
  401605:	pop    ebp
  401606:	cmc    
  401607:	out    dx,al
  401608:	add    BYTE PTR [esp+ebx*2-0x4d],bh
  40160c:	mov    edx,DWORD PTR [ecx-0x71]
  40160f:	(bad)  
  401611:	adc    DWORD PTR [eax],ebx
  401613:	jae    0x401693
  401615:	pop    ebp
  401616:	sub    cl,0x21
  401619:	or     al,0x63
  40161b:	sbb    ah,BYTE PTR [ebx]
  40161d:	retf   0x74d0
  401620:	inc    esi
  401621:	stos   BYTE PTR es:[edi],al
  401622:	outs   dx,BYTE PTR ds:[esi]
  401623:	mov    bh,0xfa
  401625:	xchg   ebp,eax
  401626:	mov    ds:0x78c6cb2,eax
  40162b:	(bad)  
  40162c:	(bad)  [edx+0x4f2b0abb]
  401632:	dec    edi
  401633:	xlat   BYTE PTR ds:[ebx]
  401634:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401635:	add    edx,DWORD PTR [ecx+0x1da7dbda]
  40163b:	call   0x5038efd6
  401640:	(bad)  
  401641:	add    al,0x80
  401643:	jns    0x401699
  401645:	mov    eax,ds:0xf81d0e7d
  40164a:	ret    
  40164b:	lock xchg edi,eax
  40164d:	push   eax
  40164e:	(bad)  
  40164f:	fimul  WORD PTR [ebp+0x77832dce]
  401655:	xchg   ebp,eax
  401656:	pop    eax
  401657:	or     eax,0xecf08001
  40165c:	imul   ebx,DWORD PTR [ebp-0x3f1e4f9],0x33ce5faf
  401666:	cmc    
  401667:	sbb    eax,0x7dfeab7e
  40166c:	cs aam 0x3b
  40166f:	je     0x4016a0
  401671:	mov    al,0x47
  401673:	sub    DWORD PTR [eax-0x40],0xffffff9f
  401677:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401678:	dec    eax
  401679:	xchg   BYTE PTR [ebx+0x41abca75],dl
  40167f:	push   0xffffffd8
  401681:	repz pop ss
  401683:	lahf   
  401684:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401685:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401686:	pushf  
  401687:	inc    di
  401689:	fcomp  QWORD PTR [eax+0x20]
  40168c:	xchg   edi,eax
  40168d:	das    
  40168e:	sbb    al,0x7
  401690:	mov    edi,0x215fa6f
  401695:	xor    edx,edi
  401697:	rcr    DWORD PTR [esi],1
  401699:	jb     0x4016bf
  40169b:	jb     0x401651
  40169d:	mov    ch,0x26
  40169f:	sbb    BYTE PTR [edx-0x42],dh
  4016a2:	or     eax,DWORD PTR [ebp+0x6b]
  4016a5:	pop    eax
  4016a6:	push   eax
  4016a7:	outs   dx,DWORD PTR ds:[esi]
  4016a8:	repnz or BYTE PTR [esi],0x56
  4016ac:	or     ch,bl
  4016ae:	outs   dx,DWORD PTR ds:[esi]
  4016af:	add    al,0x6b
  4016b1:	sbb    bl,BYTE PTR [ebp+ebp*2-0x28271cec]
  4016b8:	adc    DWORD PTR [edx-0x48],eax
  4016bb:	pop    eax
  4016bc:	mov    ah,0x8a
  4016be:	push   esi
  4016bf:	(bad)  
  4016c0:	pop    esp
  4016c1:	lds    esp,FWORD PTR [esi+0x509c5257]
  4016c7:	clc    
  4016c8:	xor    dh,dl
  4016ca:	fsubp  st(2),st
  4016cc:	es xor edi,ebp
  4016cf:	sahf   
  4016d0:	mov    bl,0x35
  4016d2:	stos   BYTE PTR es:[edi],al
  4016d3:	sbb    BYTE PTR [ebx],al
  4016d5:	inc    ebp
  4016d6:	sahf   
  4016d7:	fisttp DWORD PTR [ecx]
  4016d9:	mov    dh,0xa7
  4016db:	or     bh,0x61
  4016de:	stc    
  4016df:	xchg   ebx,eax
  4016e0:	sub    ch,ch
  4016e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016e3:	mov    ebp,0x902b7991
  4016e8:	xchg   ebp,eax
  4016e9:	xor    eax,0xd168a71a
  4016ee:	jmp    0xe137:0x1e54834
  4016f5:	cli    
  4016f6:	fnsave [ecx]
  4016f8:	out    dx,eax
  4016f9:	shl    BYTE PTR [esi+0x4a4f0340],1
  4016ff:	and    dh,BYTE PTR [si+0x1e]
  401703:	push   0xffffff88
  401705:	dec    eax
  401706:	lds    ebx,FWORD PTR [eax+0x1b]
  401709:	scas   al,BYTE PTR es:[edi]
  40170a:	mov    edx,0xb32e6281
  40170f:	pushf  
  401710:	je     0x40172c
  401712:	(bad)  
  401713:	cs stc 
  401715:	lods   al,BYTE PTR ds:[esi]
  401716:	push   edi
  401717:	outs   dx,BYTE PTR ds:[esi]
  401718:	cs push ds
  40171a:	xor    DWORD PTR ds:0x37655cda,ecx
  401720:	popa   
  401721:	sub    ah,BYTE PTR [ecx-0x6aa12b84]
  401727:	adc    eax,0xcdaae16b
  40172c:	imul   edx,DWORD PTR ds:0x7c9b321b,0xa404a9dc
  401736:	fwait
  401737:	jns    0x4016e7
  401739:	cld    
  40173a:	push   esi
  40173b:	and    DWORD PTR [edx+0x7de06cb2],esi
  401741:	sti    
  401742:	add    eax,DWORD PTR [esi+0x47]
  401745:	loope  0x4017b4
  401747:	pop    ds
  401748:	nop
  401749:	out    dx,eax
  40174a:	xor    BYTE PTR [eax+0x35a94e04],ah
  401750:	mov    bl,0xd0
  401752:	dec    esp
  401753:	mov    cl,0xd7
  401755:	sbb    DWORD PTR [ecx-0xc0ecf33],edx
  40175b:	jp     0x40171b
  40175d:	push   ss
  40175e:	xchg   DWORD PTR [ecx],ebx
  401760:	dec    esi
  401761:	loop   0x40174f
  401763:	mov    dl,0x65
  401765:	cmp    eax,0x6b3c1019
  40176a:	test   BYTE PTR [edx],ah
  40176c:	scas   eax,DWORD PTR es:[edi]
  40176d:	dec    esp
  40176e:	cmp    DWORD PTR gs:[ebp+0xc9b9cab],ecx
  401775:	push   ss
  401776:	fsubr  QWORD PTR [eax-0x59]
  401779:	test   DWORD PTR [ebp-0x52b0e3f],esi
  40177f:	add    cl,BYTE PTR [ecx+0x24]
  401782:	pop    edi
  401783:	data16 (bad) 
  401785:	imul   ebx,DWORD PTR [edi+0x691c4ad9],0x1e7ece3f
  40178f:	int3   
  401790:	inc    edx
  401791:	outs   dx,BYTE PTR ds:[esi]
  401792:	and    al,BYTE PTR [edi-0x41]
  401795:	mov    dl,0x53
  401797:	bound  esi,QWORD PTR [ecx+ecx*2]
  40179a:	inc    edx
  40179b:	pop    ss
  40179c:	test   BYTE PTR [eax],bh
  40179e:	(bad)  
  40179f:	mov    cl,0x0
  4017a1:	cmc    
  4017a2:	das    
  4017a3:	aaa    
  4017a4:	mov    cl,0x31
  4017a6:	shl    ebx,1
  4017a8:	loopne 0x401753
  4017aa:	push   cs
  4017ab:	scas   eax,DWORD PTR es:[edi]
  4017ac:	adc    al,0x92
  4017ae:	xchg   ebp,eax
  4017af:	push   cs
  4017b0:	enter  0xbc12,0xfa
  4017b4:	(bad)  
  4017b5:	xlat   BYTE PTR ds:[ebx]
  4017b6:	mov    eax,0x99c4b4d
  4017bb:	xchg   DWORD PTR [ebx],edi
  4017bd:	cmp    al,0x9a
  4017bf:	push   ecx
  4017c0:	push   esi
  4017c1:	lea    ecx,[ecx-0x16]
  4017c4:	sbb    bh,0x3f
  4017c7:	sub    DWORD PTR [esi-0xab884e4],esp
  4017cd:	xchg   ebx,eax
  4017ce:	mov    eax,0xb7aca953
  4017d3:	push   ebp
  4017d4:	sbb    al,0x9f
  4017d6:	pop    edi
  4017d7:	das    
  4017d8:	lds    ebp,FWORD PTR [edi+0x64]
  4017db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017dc:	dec    ebx
  4017dd:	fdivr  DWORD PTR [edx+0x44]
  4017e0:	loop   0x401802
  4017e2:	mov    ah,0x9c
  4017e4:	call   ebp
  4017e6:	in     al,0xaa
  4017e8:	add    DWORD PTR [ecx+0x1f],0x78
  4017ec:	(bad)  
  4017ed:	jp     0x40186a
  4017ef:	jge    0x4017a3
  4017f1:	out    dx,al
  4017f2:	xchg   edi,eax
  4017f3:	imul   ebx,DWORD PTR [edi-0x41d40887],0x508b724e
  4017fd:	mov    ebx,0x340badcb
  401802:	shl    DWORD PTR [edx-0x74],1
  401805:	addr16 pop edi
  401807:	add    ebp,edx
  401809:	fdivr  QWORD PTR [edx-0x4bdf367f]
  40180f:	adc    DWORD PTR [esi+0x359c7973],edi
  401815:	sahf   
  401816:	push   ds
  401817:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401818:	xor    BYTE PTR [ebp+0x1b],al
  40181b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40181c:	adc    BYTE PTR [edi-0x40],dh
  40181f:	sbb    eax,0xdd10a6d7
  401824:	js     0x40188f
  401826:	push   esp
  401827:	dec    ebp
  401828:	aad    0xab
  40182a:	push   edx
  40182b:	jne    0x4017b3
  40182d:	pop    edx
  40182e:	cli    
  40182f:	cdq    
  401830:	outs   dx,BYTE PTR ds:[esi]
  401831:	loope  0x4017b7
  401833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401834:	sub    dh,bl
  401836:	or     DWORD PTR [ebx-0x32aea2d6],eax
  40183c:	push   eax
  40183d:	mov    DWORD PTR [edx],esp
  40183f:	jecxz  0x401856
  401841:	imul   ecx,DWORD PTR [edi],0xf3b38d77
  401847:	sbb    DWORD PTR gs:[ebx+0x10],ebp
  40184b:	je     0x401881
  40184d:	mov    esi,DWORD PTR [eiz*2+0x29012090]
  401854:	lds    edx,FWORD PTR [ebx+0x42489dba]
  40185a:	dec    ebp
  40185b:	push   ebp
  40185c:	xor    BYTE PTR [esi],ch
  40185e:	mov    al,0xea
  401860:	js     0x40185e
  401862:	loopne 0x4018d4
  401864:	dec    ebp
  401865:	out    dx,eax
  401866:	or     DWORD PTR [ebx-0x36],0x8c3e4845
  40186d:	xlat   BYTE PTR ds:[ebx]
  40186e:	fld    TBYTE PTR [edx]
  401870:	inc    edi
  401871:	or     al,bh
  401873:	(bad)  
  401874:	cmp    al,0x83
  401876:	xchg   ebp,eax
  401877:	sub    BYTE PTR [edi-0x4770557],al
  40187d:	dec    edx
  40187e:	dec    edx
  40187f:	dec    ebp
  401880:	xchg   esi,eax
  401881:	mov    bh,0xdf
  401883:	ret    
  401884:	mov    ah,bh
  401886:	xchg   DWORD PTR [ebp-0x5d],ecx
  401889:	sbb    al,0xdb
  40188b:	(bad)  
  40188c:	cmc    
  40188d:	daa    
  40188e:	mov    ch,0x74
  401890:	xchg   edx,eax
  401891:	adc    DWORD PTR [eax-0x32],esp
  401894:	add    ebx,DWORD PTR [edi-0x69]
  401897:	jnp    0x4018e7
  401899:	xor    DWORD PTR [esi+0x45ea233b],edi
  40189f:	xor    DWORD PTR [edi],0xffffffa2
  4018a2:	lods   al,BYTE PTR ds:[esi]
  4018a3:	inc    ecx
  4018a4:	(bad)  
  4018a6:	nop
  4018a7:	dec    edi
  4018a8:	in     al,dx
  4018a9:	gs inc edx
  4018ab:	out    dx,al
  4018ac:	pop    es
  4018ad:	xchg   BYTE PTR [edx],bl
  4018af:	push   es
  4018b0:	ins    BYTE PTR es:[edi],dx
  4018b1:	xchg   esp,eax
  4018b2:	aam    0xfb
  4018b4:	add    dl,BYTE PTR [edx+edi*1+0x66429e45]
  4018bb:	pop    es
  4018bc:	bnd jne 0x4018ba
  4018bf:	push   es
  4018c0:	int    0xa3
  4018c2:	mov    dl,0xec
  4018c4:	dec    esp
  4018c5:	pushf  
  4018c6:	jnp    0x4018d1
  4018c8:	mov    edi,0xda53b44f
  4018cd:	adc    ah,BYTE PTR [edx]
  4018cf:	dec    esi
  4018d0:	mov    dl,BYTE PTR [ecx+eax*8+0x7515ac77]
  4018d7:	div    BYTE PTR [ebx]
  4018d9:	aas    
  4018da:	xor    ebx,esp
  4018dc:	arpl   bx,si
  4018de:	out    0xe4,al
  4018e0:	cli    
  4018e1:	out    0x39,eax
  4018e3:	dec    ebp
  4018e4:	neg    BYTE PTR [eax-0x7eb746a4]
  4018ea:	in     al,0xa7
  4018ec:	nop
  4018ed:	sub    edx,0xffffff80
  4018f0:	pop    esi
  4018f1:	cld    
  4018f2:	bound  edx,QWORD PTR [eax+0x795cafdf]
  4018f8:	int    0xe8
  4018fa:	pop    esp
  4018fb:	cli    
  4018fc:	xchg   esp,eax
  4018fd:	out    dx,al
  4018fe:	ss scas eax,DWORD PTR es:[edi]
  401900:	ins    DWORD PTR es:[edi],dx
  401901:	out    dx,al
  401902:	sbb    bh,al
  401904:	push   ds
  401905:	(bad)  
  401906:	fisub  WORD PTR [esi-0x15]
  401909:	jp     0x4018ac
  40190b:	addr16 mov esi,0x8b0d4299
  401911:	rcl    DWORD PTR [edi+eax*2+0x6b],1
  401915:	loope  0x4018e4
  401917:	sub    BYTE PTR [esi],bl
  401919:	imul   ecx,DWORD PTR [ecx+0x17],0x6a908b5f
  401920:	jnp    0x40193a
  401922:	or     ebx,DWORD PTR [ebp-0x77]
  401925:	sbb    ah,bh
  401927:	pop    edi
  401928:	aam    0x4e
  40192a:	pop    ds
  40192b:	mov    ch,0xde
  40192d:	sub    eax,DWORD PTR [edx+0x2d]
  401930:	scas   eax,DWORD PTR es:[edi]
  401931:	dec    ebx
  401932:	inc    ebx
  401933:	pop    edi
  401934:	leave  
  401935:	aad    0x17
  401937:	lods   eax,DWORD PTR ds:[esi]
  401938:	outs   dx,DWORD PTR ds:[esi]
  401939:	sbb    DWORD PTR [esi-0x320b2599],0x93993591
  401943:	std    
  401944:	addr16 sti 
  401946:	xor    eax,0xb1bd4f15
  40194b:	sbb    eax,0xe59c6209
  401950:	or     ebx,DWORD PTR [ecx]
  401952:	sub    dh,BYTE PTR [eax]
  401954:	pop    ecx
  401955:	pop    esi
  401956:	(bad)  
  401957:	push   ecx
  401958:	pop    esp
  401959:	xor    al,0x17
  40195b:	push   ecx
  40195c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40195d:	add    ecx,esp
  40195f:	dec    ebp
  401960:	ja     0x40193a
  401962:	test   eax,0xa184bafa
  401967:	mov    al,ds:0xb38978ec
  40196c:	or     ch,BYTE PTR [ebp-0x2b]
  40196f:	sbb    bl,BYTE PTR [ebp+ecx*2-0x1058b60b]
  401976:	or     eax,0xbabd27fc
  40197b:	pop    edi
  40197c:	xchg   ecx,eax
  40197d:	aad    0xdd
  40197f:	jne    0x401962
  401981:	fist   WORD PTR [eax]
  401983:	dec    ax
  401985:	pop    esp
  401986:	outs   dx,BYTE PTR ds:[esi]
  401987:	mov    ebp,0xc1285c9c
  40198c:	mov    ebp,0x4591a6f1
  401991:	inc    esp
  401992:	(bad)  
  401993:	mov    ds:0xcd9e293,eax
  401998:	loopne 0x4019bb
  40199a:	push   eax
  40199b:	pop    eax
  40199c:	in     al,0x34
  40199e:	dec    edx
  40199f:	fcom   DWORD PTR [esi+0x21]
  4019a2:	sbb    DWORD PTR [edx-0x5e3b40e2],eax
  4019a8:	jl     0x40193e
  4019aa:	jl     0x401a0e
  4019ac:	and    DWORD PTR [edx],0x9
  4019af:	shr    bh,cl
  4019b1:	push   ebx
  4019b2:	jns    0x401941
  4019b4:	jns    0x401a31
  4019b6:	aad    0x8d
  4019b8:	rol    BYTE PTR [esi+0x64d90474],0xde
  4019bf:	mul    DWORD PTR [edx-0x47]
  4019c2:	dec    edi
  4019c3:	data16 and bh,BYTE PTR [ecx+0x7878ae9]
  4019ca:	mov    fs,WORD PTR [ebp-0x29]
  4019cd:	aad    0x75
  4019cf:	mov    ecx,0x3c376924
  4019d4:	mov    eax,ds:0x6a6b816b
  4019d9:	mov    ah,0xe3
  4019db:	jbe    0x401a28
  4019dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019de:	push   0x2c3a8c27
  4019e3:	xor    BYTE PTR [ebx+0x2fcb0088],cl
  4019e9:	adc    edi,esi
  4019eb:	mov    al,0xdc
  4019ed:	aaa    
  4019ee:	adc    dh,0x4
  4019f1:	mov    bl,0x4e
  4019f3:	out    0x58,eax
  4019f5:	adc    ah,ah
  4019f7:	adc    BYTE PTR [ebx-0x55],cl
  4019fa:	mov    ?,WORD PTR [eax]
  4019fc:	aaa    
  4019fd:	stos   BYTE PTR es:[edi],al
  4019fe:	mov    ebx,DWORD PTR [eax+0x26]
  401a01:	imul   eax,DWORD PTR [si],0xfffffffa
  401a05:	sbb    ecx,edx
  401a07:	bnd ret 0xd57b
  401a0b:	and    al,ch
  401a0d:	imul   ecx,DWORD PTR [edi+0x26],0x3b
  401a11:	push   ebp
  401a12:	mov    ecx,0xdda8d73a
  401a17:	scas   al,BYTE PTR es:[edi]
  401a18:	inc    eax
  401a19:	inc    ebp
  401a1a:	mov    ecx,0x7e2c2df5
  401a1f:	cs xchg ebx,eax
  401a21:	fdiv   QWORD PTR [ebx-0x2fd272f5]
  401a27:	jle    0x401a76
  401a29:	pop    esi
  401a2a:	xor    BYTE PTR [edi],al
  401a2c:	das    
  401a2d:	inc    esi
  401a2e:	mov    al,0x21
  401a30:	das    
  401a31:	push   0x6aad1e1a
  401a36:	jge    0x4019c7
  401a38:	enter  0xc065,0x7c
  401a3c:	scas   al,BYTE PTR es:[edi]
  401a3d:	sbb    edx,0xdd207ac3
  401a43:	adc    eax,0x1b4fe777
  401a48:	cs mov edx,0xcaa127ed
  401a4e:	pop    es
  401a4f:	cwde   
  401a50:	jle    0x401a15
  401a52:	mov    ds:0xab7aaecc,al
  401a57:	xchg   DWORD PTR [edx],edi
  401a59:	or     DWORD PTR [ecx-0x66d703d1],0x8
  401a60:	adc    bl,al
  401a62:	inc    edx
  401a63:	pop    ss
  401a64:	ds or  esp,esi
  401a67:	adc    eax,0x5506162e
  401a6c:	aad    0xdd
  401a6e:	adc    eax,0x95b0017e
  401a73:	clc    
  401a74:	(bad)  
  401a75:	push   edx
  401a76:	(bad)  
  401a77:	das    
  401a78:	sti    
  401a79:	ret    0x6eae
  401a7c:	repz popa 
  401a7e:	cmp    DWORD PTR [eax],0x65
  401a81:	(bad)  
  401a82:	or     eax,0xd80d168
  401a87:	push   0xffffff9a
  401a89:	and    ecx,edi
  401a8b:	jbe    0x401ae6
  401a8d:	mov    WORD PTR [edi],ds
  401a8f:	sub    eax,DWORD PTR [esi-0x1e]
  401a92:	and    dh,BYTE PTR [edx-0x58]
  401a95:	retf   0x9312
  401a98:	mov    ah,0x37
  401a9a:	inc    esp
  401a9b:	sbb    DWORD PTR [ebp+0x44d5dd63],esi
  401aa1:	in     eax,dx
  401aa2:	sub    dh,dh
  401aa4:	fdiv   DWORD PTR [edi-0x1c46c69f]
  401aaa:	mov    edi,0x6d15429c
  401aaf:	mov    eax,0xa1cb38bd
  401ab4:	cmp    al,0x40
  401ab6:	int3   
  401ab7:	ins    DWORD PTR es:[edi],dx
  401ab8:	(bad)  
  401ab9:	dec    esp
  401aba:	retf   0x448b
  401abd:	and    dh,BYTE PTR [ecx+0x61b78935]
  401ac3:	pushf  
  401ac4:	xchg   ebp,eax
  401ac5:	cmp    BYTE PTR [ebp-0x735acb05],bl
  401acb:	cmp    esi,DWORD PTR [ecx+0x65]
  401ace:	and    cl,bh
  401ad0:	retf   0x57ec
  401ad3:	fs dec edx
  401ad5:	sbb    eax,0x7b59e31
  401ada:	out    0x85,al
  401adc:	jno    0x401ac7
  401ade:	call   0x96830096
  401ae3:	and    cl,cl
  401ae5:	lock aaa 
  401ae7:	sbb    edi,eax
  401ae9:	add    al,0x6
  401aeb:	outs   dx,DWORD PTR ds:[esi]
  401aec:	mov    eax,ds:0xd161d787
  401af1:	retf   0x1617
  401af4:	add    edi,DWORD PTR [ecx]
  401af6:	mov    edi,0x62b5cdf8
  401afb:	pop    ebx
  401afc:	and    eax,0xc5b81246
  401b01:	xchg   ecx,eax
  401b02:	les    esi,FWORD PTR [ebx]
  401b04:	hlt    
  401b05:	ja     0x401b4c
  401b07:	daa    
  401b08:	out    dx,eax
  401b09:	into   
  401b0a:	mov    edi,0xc60acb66
  401b0f:	dec    ebx
  401b10:	mov    bl,0x72
  401b12:	jmp    0xfeb512c2
  401b17:	lds    edi,FWORD PTR [ebx-0x6a832ca3]
  401b1d:	xchg   ecx,eax
  401b1e:	jecxz  0x401ab7
  401b20:	fwait
  401b21:	call   0xb6ad54ea
  401b26:	inc    ebp
  401b27:	fstp   TBYTE PTR [ecx+0x2e]
  401b2a:	or     eax,0x3a61d4e3
  401b2f:	jl     0x401b9a
  401b31:	je     0x401bab
  401b33:	aad    0x9d
  401b35:	xor    BYTE PTR [ebx+0x5949a4d3],al
  401b3b:	pop    ecx
  401b3c:	cmp    ch,BYTE PTR [ebp*4+0x44def237]
  401b43:	(bad)  
  401b44:	fwait
  401b45:	mov    bh,0x58
  401b47:	jp     0x401b00
  401b49:	add    BYTE PTR [esi+edx*1],al
  401b4c:	push   es
  401b4d:	jno    0x401b75
  401b4f:	aas    
  401b50:	push   ebp
  401b51:	inc    esi
  401b52:	bndldx bnd0,[ecx]
  401b55:	(bad)  
  401b57:	ror    esp,cl
  401b59:	pop    esp
  401b5a:	lahf   
  401b5b:	push   eax
  401b5c:	sub    cl,BYTE PTR [edx]
  401b5e:	pop    di
  401b60:	(bad)  
  401b61:	int    0xc9
  401b63:	frstor [ecx+0x58]
  401b66:	call   0xa846:0xa13fd01
  401b6d:	jae    0x401bda
  401b6f:	sub    BYTE PTR [ecx+0x78],0xb0
  401b73:	push   esi
  401b74:	mov    dh,0x5c
  401b76:	(bad)  
  401b77:	push   0x47
  401b79:	xchg   BYTE PTR [ebp+0x50],ah
  401b7c:	ins    DWORD PTR es:[edi],dx
  401b7d:	pop    es
  401b7e:	inc    ebx
  401b7f:	test   ebx,ebx
  401b81:	arpl   WORD PTR [ecx],bx
  401b83:	sahf   
  401b84:	std    
  401b85:	call   0x1e32dc47
  401b8a:	lods   al,BYTE PTR ds:[esi]
  401b8b:	lock and eax,0x9d236c9a
  401b91:	cs push ds
  401b93:	sub    al,0xbc
  401b95:	inc    esi
  401b96:	sub    DWORD PTR [edi+ebp*2+0xdbbe5ff],ebx
  401b9d:	inc    ecx
  401b9e:	int    0x45
  401ba0:	xchg   ah,bh
  401ba2:	loope  0x401bac
  401ba4:	shr    BYTE PTR [ecx+0x68],cl
  401ba7:	jmp    0x47c6:0xe1d00b4d
  401bae:	std    
  401baf:	ror    BYTE PTR [ebx+0x5555ea2c],cl
  401bb5:	jno    0x401b51
  401bb7:	cmp    bl,BYTE PTR [eax]
  401bb9:	fldcw  WORD PTR [eax-0x39]
  401bbc:	add    DWORD PTR [ebp+0x11815e9b],edx
  401bc2:	test   eax,0xf60f6741
  401bc7:	imul   edx,DWORD PTR [ebx],0x1ce008f1
  401bcd:	out    0xee,eax
  401bcf:	rcl    BYTE PTR [ecx-0x405c5cb9],0x75
  401bd6:	int3   
  401bd7:	mov    dl,0x63
  401bd9:	ins    BYTE PTR es:[edi],dx
  401bda:	sahf   
  401bdb:	jbe    0x401c0a
  401bdd:	cmc    
  401bde:	icebp  
  401bdf:	icebp  
  401be0:	dec    ecx
  401be2:	push   ds
  401be3:	mov    al,ds:0xcea83ec
  401be8:	repz pop ss
  401bea:	mov    cl,0xd9
  401bec:	inc    esi
  401bed:	jp     0x401c5f
  401bef:	xchg   ebx,eax
  401bf0:	inc    eax
  401bf1:	dec    ebx
  401bf2:	jae    0x401b78
  401bf4:	pop    ecx
  401bf5:	jmp    0x401c18
  401bf7:	nop
  401bf8:	mov    dl,0x1b
  401bfa:	jle    0x401bbe
  401bfc:	and    al,0xc5
  401bfe:	add    ah,cl
  401c00:	lock push ebp
  401c02:	jns    0x401c73
  401c04:	push   esi
  401c05:	cmp    bh,BYTE PTR [edi-0x6f]
  401c08:	mov    ds:0x87c69f58,al
  401c0d:	ror    DWORD PTR [ecx],0x51
  401c10:	pop    esp
  401c11:	jno    0x401c7a
  401c13:	lahf   
  401c14:	xlat   BYTE PTR ds:[ebx]
  401c15:	pop    ebx
  401c16:	jmp    0xd30a:0xff6dbef8
  401c1d:	xchg   esp,eax
  401c1e:	adc    al,0x8f
  401c20:	xchg   ebx,eax
  401c21:	push   ebp
  401c22:	mov    ds:0xa33efe04,eax
  401c27:	(bad)  
  401c28:	fwait
  401c29:	out    dx,eax
  401c2a:	inc    edi
  401c2b:	leave  
  401c2c:	add    edx,esp
  401c2e:	lgs    ebx,FWORD PTR [eax+0x536fd7e6]
  401c35:	movsx  ebx,WORD PTR [ecx+0x2c]
  401c39:	jle    0x401c10
  401c3b:	sub    esp,DWORD PTR [edx]
  401c3d:	pusha  
  401c3e:	je     0x401c62
  401c40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c41:	hlt    
  401c42:	mov    edx,0x7f39de8f
  401c47:	sub    eax,0xff87d755
  401c4c:	xchg   DWORD PTR [esi],eax
  401c4e:	lods   eax,DWORD PTR ds:[esi]
  401c4f:	nop
  401c50:	int    0x98
  401c52:	mov    esi,0x2b9a4b6c
  401c57:	stos   BYTE PTR es:[edi],al
  401c58:	lods   eax,DWORD PTR ds:[esi]
  401c59:	adc    BYTE PTR [ebp+0x5a4f4a54],ah
  401c5f:	jnp    0x401c55
  401c61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c62:	or     edx,0xffffffc2
  401c65:	das    
  401c66:	mov    ds:0xeb1323bd,eax
  401c6b:	stos   DWORD PTR es:[edi],eax
  401c6c:	shl    DWORD PTR [esi],0x6f
  401c6f:	ins    BYTE PTR es:[edi],dx
  401c70:	outs   dx,DWORD PTR ds:[esi]
  401c71:	faddp  st(2),st
  401c73:	mov    eax,0xeb266d18
  401c78:	and    DWORD PTR [eax],edx
  401c7a:	test   eax,0xd17be7f3
  401c7f:	rcl    DWORD PTR [edx],1
  401c81:	int    0x1e
  401c83:	adc    al,0x83
  401c85:	es mov esp,0xca38d349
  401c8b:	retf   0x1d40
  401c8e:	cs enter 0xede8,0xbd
  401c93:	mov    ah,0x4c
  401c95:	and    DWORD PTR [ebp-0x70c599c2],ebx
  401c9b:	rcr    DWORD PTR ds:0xa08f55ee,0x46
  401ca2:	jmp    0x6bcbb709
  401ca7:	ins    BYTE PTR es:[edi],dx
  401ca8:	scas   al,BYTE PTR es:[edi]
  401ca9:	cmp    edi,DWORD PTR [ebx]
  401cab:	mov    edi,ecx
  401cad:	mov    dl,0x37
  401caf:	jns    0x401c32
  401cb1:	sub    ecx,DWORD PTR [ebp-0x34]
  401cb4:	rcl    BYTE PTR [eax+0x2c],1
  401cb7:	shr    BYTE PTR [eax+0x23],1
  401cba:	xchg   ebp,eax
  401cbb:	and    BYTE PTR [ecx+0x26071d4a],ch
  401cc1:	or     al,0xfd
  401cc3:	push   eax
  401cc4:	xchg   DWORD PTR [edx+0x1c234bfc],esp
  401cca:	in     eax,0x41
  401ccc:	dec    eax
  401ccd:	sbb    DWORD PTR [ebx+0x59],0xa
  401cd1:	xor    eax,eax
  401cd3:	popa   
  401cd4:	das    
  401cd5:	pop    ds
  401cd6:	sub    ebp,DWORD PTR [ebx+ecx*1]
  401cd9:	repz push es
  401cdb:	add    BYTE PTR [eax-0x1d],bl
  401cde:	fsubr  st(6),st
  401ce0:	cmp    dh,BYTE PTR [ebx+0x11]
  401ce3:	arpl   WORD PTR [eax-0x51e7c897],dx
  401ce9:	inc    esp
  401cea:	sbb    DWORD PTR [edi],esi
  401cec:	jae    0x401cc8
  401cee:	sbb    eax,0x6b417dbe
  401cf3:	jb     0x401d4c
  401cf5:	fdiv   DWORD PTR [ebx+0x12942540]
  401cfb:	or     BYTE PTR ds:0x27423573,al
  401d01:	aas    
  401d02:	xchg   esp,eax
  401d03:	pop    edi
  401d04:	and    ah,cl
  401d06:	push   eax
  401d07:	push   esi
  401d08:	ds lahf 
  401d0a:	aam    0xb7
  401d0c:	jo     0x401cb4
  401d0e:	or     al,0x42
  401d10:	push   0x18b80250
  401d15:	pop    esp
  401d16:	jno    0x401ca8
  401d18:	inc    ecx
  401d19:	imul   esp,edx,0xffffffe9
  401d1c:	cmp    DWORD PTR [ecx+0x4555e35c],eax
  401d22:	out    dx,al
  401d23:	mov    bl,0xf2
  401d25:	test   al,0x5b
  401d27:	push   ebx
  401d28:	cmp    al,dl
  401d2a:	add    BYTE PTR [eax],cl
  401d2c:	push   esi
  401d2d:	add    eax,0x14f8cf90
  401d32:	(bad)
  401d35:	pop    ecx
  401d36:	mov    al,ds:0x4569aba9
  401d3b:	add    DWORD PTR [edi+0xe864640],edi
  401d41:	pop    ds
  401d42:	mov    ch,0xc1
  401d44:	(bad)  
  401d45:	adc    edx,esp
  401d47:	xchg   ebp,eax
  401d48:	(bad)  
  401d49:	js     0x401dc5
  401d4b:	inc    ebp
  401d4c:	cmp    ah,BYTE PTR [eax+0x30]
  401d4f:	and    eax,0xd4abe06e
  401d54:	scas   al,BYTE PTR es:[edi]
  401d55:	pop    es
  401d56:	sub    BYTE PTR [edi+ebp*1],dl
  401d59:	jmp    0x401d12
  401d5b:	jae    0x401ddc
  401d5d:	mov    edx,0x4d3703bc
  401d62:	adc    al,0x38
  401d64:	cmp    al,0xc2
  401d66:	cmp    bh,ah
  401d68:	pop    es
  401d69:	shr    ah,1
  401d6b:	lods   eax,DWORD PTR ds:[esi]
  401d6c:	in     eax,dx
  401d6d:	shr    BYTE PTR [eax],1
  401d6f:	sub    DWORD PTR ds:0xe4d4b641,ebp
  401d75:	xchg   edi,eax
  401d76:	out    dx,eax
  401d77:	(bad)  
  401d78:	and    BYTE PTR [ebp-0x1a],al
  401d7b:	mov    esi,0xc3c3966c
  401d80:	sub    ah,dh
  401d82:	sub    edx,ebx
  401d84:	out    0x51,al
  401d86:	jae    0x401db5
  401d88:	push   edi
  401d89:	clc    
  401d8a:	sub    eax,esp
  401d8c:	ss nop
  401d8e:	mov    ch,0x6b
  401d90:	add    al,0x5c
  401d92:	and    esi,DWORD PTR [ebp+0x19841c4c]
  401d98:	mov    ebx,0xb12583c7
  401d9d:	or     BYTE PTR [esp+ecx*8],ah
  401da0:	pusha  
  401da1:	mov    eax,ds:0x6541a231
  401da6:	jp     0x401da2
  401da8:	imul   esp,DWORD PTR [esi],0x41
  401dab:	inc    ebx
  401dac:	mov    ch,0xef
  401dae:	out    0x9e,eax
  401db0:	mov    dh,BYTE PTR [esi+ecx*1]
  401db3:	in     al,dx
  401db4:	in     al,dx
  401db5:	das    
  401db6:	das    
  401db7:	cld    
  401db8:	cmp    ecx,DWORD PTR [eax]
  401dba:	cmp    ch,BYTE PTR [ebx]
  401dbc:	sbb    DWORD PTR [eax-0x19],ebx
  401dbf:	ins    BYTE PTR es:[edi],dx
  401dc0:	jae    0x401d6f
  401dc2:	adc    eax,0x9a58a00c
  401dc7:	ds scas al,BYTE PTR es:[edi]
  401dc9:	pop    edx
  401dca:	mov    edx,0x4ca117d4
  401dcf:	xor    al,0x98
  401dd1:	out    dx,eax
  401dd2:	mov    dl,0x61
  401dd4:	mov    BYTE PTR [eax+0x51],bl
  401dd7:	xchg   BYTE PTR [edi],ch
  401dd9:	loopne 0x401e3d
  401ddb:	xor    ecx,DWORD PTR [eax+0x796cf4fb]
  401de1:	aas    
  401de2:	xor    DWORD PTR [esi+ebx*8-0x18],0xfffffff8
  401de7:	and    edx,DWORD PTR ds:0xe466caef
  401ded:	fld    QWORD PTR [ecx-0x53]
  401df0:	cli    
  401df1:	add    BYTE PTR [edi-0x4befb8a3],al
  401df7:	jne    0x401d9d
  401df9:	and    ecx,ebp
  401dfb:	jge    0x401e7b
  401dfd:	and    DWORD PTR [eax-0x5205eb28],ebx
  401e03:	imul   eax,esp,0x5a
  401e06:	dec    edi
  401e07:	add    al,0xf3
  401e09:	ins    BYTE PTR es:[edi],dx
  401e0a:	dec    ecx
  401e0b:	mov    ds:0x2bd0c940,al
  401e10:	jg     0x401e85
  401e12:	out    dx,al
  401e13:	add    BYTE PTR [eax-0xf],bh
  401e16:	pop    ss
  401e17:	inc    esp
  401e18:	das    
  401e19:	popf   
  401e1a:	cmp    eax,DWORD PTR [ebx]
  401e1c:	push   ds
  401e1d:	pusha  
  401e1e:	ret    
  401e1f:	xchg   ebp,eax
  401e21:	xchg   BYTE PTR [edx-0x2f],ah
  401e24:	repz pop es
  401e26:	inc    esi
  401e27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e28:	add    eax,0x3a942ed4
  401e2d:	add    DWORD PTR [esi+0x206dd899],ebx
  401e33:	jae    0x401e45
  401e35:	jmp    DWORD PTR [ebx+0x4e]
  401e38:	adc    edi,DWORD PTR [edx+ecx*8]
  401e3b:	shl    DWORD PTR [ebp-0x44d93481],cl
  401e41:	les    esp,FWORD PTR ds:0xfd3913a4
  401e47:	xor    eax,0x350ab066
  401e4c:	push   ds
  401e4d:	mov    WORD PTR [edi],es
  401e4f:	out    dx,eax
  401e50:	adc    BYTE PTR [edi-0x22],ch
  401e53:	(bad)
  401e58:	pop    es
  401e59:	inc    ebx
  401e5a:	in     eax,dx
  401e5b:	cmp    esi,esi
  401e5d:	(bad)  
  401e5e:	iret   
  401e5f:	pop    ss
  401e60:	lahf   
  401e61:	xor    dh,BYTE PTR [esp+ecx*4-0x10]
  401e65:	int    0xd9
  401e67:	push   0x37845263
  401e6c:	add    al,0xab
  401e6e:	out    dx,eax
  401e6f:	mov    fs,esi
  401e71:	jg     0x401e8d
  401e73:	test   bh,dh
  401e75:	mov    eax,0xa92a3670
  401e7a:	adc    al,0xf0
  401e7c:	rcr    DWORD PTR [ebp+0x1a],cl
  401e7f:	in     eax,dx
  401e80:	stc    
  401e81:	pop    ds
  401e82:	pop    es
  401e83:	loopne 0x401e44
  401e85:	addr16 xchg esp,eax
  401e87:	mov    esp,0xb7ff24a1
  401e8c:	scas   al,BYTE PTR es:[edi]
  401e8d:	popa   
  401e8e:	xchg   esp,eax
  401e8f:	adc    cl,bl
  401e91:	inc    eax
  401e92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e93:	mov    dh,0x1c
  401e95:	adc    cl,BYTE PTR [esi]
  401e97:	rcr    DWORD PTR [ebx-0x13c74b74],1
  401e9d:	test   edx,ebp
  401e9f:	in     eax,dx
  401ea0:	and    al,0xbf
  401ea2:	ja     0x401e9f
  401ea4:	ss clc 
  401ea6:	nop
  401ea7:	dec    esi
  401ea8:	mov    eax,0x464118c
  401ead:	xor    eax,0xf0add1cc
  401eb2:	in     eax,dx
  401eb3:	(bad)  
  401eb5:	rcr    BYTE PTR [ecx],cl
  401eb7:	ins    DWORD PTR es:[edi],dx
  401eb8:	mov    ecx,0xf80c270e
  401ebd:	shr    dh,cl
  401ebf:	dec    ebp
  401ec0:	iret   
  401ec1:	bound  edi,QWORD PTR [edx]
  401ec3:	neg    BYTE PTR [ebp-0x72]
  401ec6:	cmp    dl,cl
  401ec8:	(bad)  
  401ec9:	aad    0x78
  401ecb:	pop    ds
  401ecc:	fwait
  401ecd:	je     0x401e97
  401ecf:	jmp    0x3d9c:0xed4ed1fc
  401ed6:	xchg   esp,eax
  401ed7:	and    al,0x9e
  401ed9:	dec    esp
  401eda:	jge    0x401e65
  401edc:	sti    
  401edd:	dec    eax
  401ede:	sar    ebx,1
  401ee0:	fwait
  401ee1:	imul   ebx,DWORD PTR [eax],0x5337cf91
  401ee7:	mov    cs:0xc358aeb8,al
  401eed:	dec    eax
  401eee:	jl     0x401e95
  401ef0:	fwait
  401ef1:	outs   dx,BYTE PTR ds:[esi]
  401ef2:	fwait
  401ef3:	xchg   edi,eax
  401ef4:	sbb    al,0x32
  401ef6:	sub    bh,dh
  401ef8:	lock std 
  401efa:	retf   0x1ddb
  401efd:	imul   esp,DWORD PTR [ecx+0x24],0x540ad876
  401f04:	or     DWORD PTR [eax-0x11],ecx
  401f07:	cmp    BYTE PTR gs:[eax+0x5eabf6d2],al
  401f0e:	stc    
  401f0f:	or     esp,ecx
  401f11:	ret    0xa63
  401f14:	mov    bl,0x90
  401f16:	push   edx
  401f17:	scas   eax,DWORD PTR es:[edi]
  401f18:	pop    ebp
  401f19:	ret    
  401f1a:	dec    ecx
  401f1b:	dec    ebx
  401f1c:	cmp    DWORD PTR [edx-0x50],0x39f9a897
  401f23:	je     0x401f53
  401f25:	lods   al,BYTE PTR ds:[esi]
  401f26:	pop    edx
  401f27:	mov    ecx,0xca34f05f
  401f2c:	or     eax,0xd1c9615f
  401f31:	xor    eax,0xc5fa54d1
  401f36:	jmp    0x401fa6
  401f38:	inc    ebx
  401f39:	js     0x401f05
  401f3b:	add    ebp,DWORD PTR [esi+0x13]
  401f3e:	mov    ebp,DWORD PTR [ebp+0x9]
  401f41:	jae    0x401f82
  401f43:	push   0x718a52d2
  401f48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f49:	ret    
  401f4a:	stos   DWORD PTR es:[edi],eax
  401f4b:	ror    BYTE PTR [ecx+0x69516614],cl
  401f51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f52:	out    0x2a,al
  401f54:	std    
  401f55:	jo     0x401f6f
  401f57:	jle    0x401f57
  401f59:	pusha  
  401f5a:	xor    eax,0xd3b78f40
  401f5f:	inc    edi
  401f60:	retf   
  401f61:	retf   
  401f62:	(bad)  
  401f63:	xchg   edx,eax
  401f64:	lock fld TBYTE PTR [eax-0x5]
  401f68:	ins    BYTE PTR es:[edi],dx
  401f69:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f6b:	push   0x4
  401f6d:	ss push ebp
  401f6f:	mul    DWORD PTR [ecx-0xc403b7d]
  401f75:	mov    ds:0x752af2d1,al
  401f7a:	jb     0x401fd7
  401f7c:	ss retf 0xbfa8
  401f80:	adc    eax,0xb94e7de8
  401f85:	leave  
  401f86:	sub    al,BYTE PTR [ebx]
  401f88:	mov    dl,BYTE PTR [ebx+0x13730657]
  401f8e:	adc    ebx,DWORD PTR [edx+edx*8]
  401f91:	in     eax,dx
  401f92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f93:	inc    edi
  401f94:	ins    BYTE PTR es:[edi],dx
  401f95:	mov    bh,0x5
  401f97:	and    eax,0x5c07ded7
  401f9c:	fisubr DWORD PTR [edi+0x34]
  401f9f:	cmp    ecx,ebp
  401fa1:	mov    DWORD PTR [ebp+0x4dfd15d6],0x95e04e1e
  401fab:	and    ecx,DWORD PTR [edx+esi*4+0x2d]
  401faf:	mov    eax,0x8dab748d
  401fb4:	adc    edi,DWORD PTR [esi-0x52]
  401fb7:	ror    DWORD PTR [esi+0x6e],0xda
  401fbb:	add    eax,eax
  401fbd:	loop   0x402022
  401fbf:	mov    al,ds:0xa168d309
  401fc4:	popf   
  401fc5:	stc    
  401fc6:	cmp    ah,BYTE PTR [ecx-0x3f]
  401fc9:	cdq    
  401fca:	ja     0x402028
  401fcc:	cdq    
  401fcd:	mov    BYTE PTR [edx+0x156e8076],dh
  401fd3:	dec    ebp
  401fd4:	loop   0x402043
  401fd6:	mov    esp,0xf3c503b1
  401fdb:	inc    esp
  401fdc:	xlat   BYTE PTR ds:[ebx]
  401fdd:	push   edx
  401fde:	mov    dh,0xeb
  401fe0:	fs dec ebp
  401fe2:	ret    
  401fe3:	and    eax,ecx
  401fe5:	cmp    bl,BYTE PTR [eax+edi*2-0x38]
  401fe9:	adc    ebp,eax
  401feb:	sbb    ecx,DWORD PTR [edx-0x3]
  401fee:	stc    
  401fef:	pop    ss
  401ff0:	push   ecx
  401ff1:	jne    0x40202f
  401ff3:	int3   
  401ff4:	fs in  eax,0x1
  401ff7:	mov    ?,WORD PTR [esi+edx*4-0x328be1e7]
  401ffe:	push   ebp
  401fff:	hlt    
  402000:	outs   dx,BYTE PTR ds:[esi]
  402001:	sub    al,0x8
  402003:	aas    
  402004:	dec    ecx
  402005:	or     al,0x8b
  402007:	lods   al,BYTE PTR ds:[esi]
  402008:	inc    eax
  402009:	jl     0x40200a
  40200b:	div    DWORD PTR [ebp-0x2]
  40200e:	pop    eax
  40200f:	loope  0x401ffd
  402011:	sbb    cl,BYTE PTR [esi]
  402013:	and    ch,cl
  402015:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402016:	jbe    0x401fa2
  402018:	push   ebx
  402019:	fmul   st,st(3)
  40201b:	adc    BYTE PTR [edx-0x30],dh
  40201e:	push   eax
  40201f:	aaa    
  402020:	loopne 0x402007
  402022:	push   eax
  402023:	xchg   esp,eax
  402024:	jo     0x402076
  402026:	push   ds
  402027:	ret    0xdb19
  40202a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40202b:	jnp    0x2943e3ec
  402031:	das    
  402032:	(bad)  
  402033:	call   0xd500afc0
  402038:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402039:	push   eax
  40203a:	nop
  40203b:	pop    edi
  40203c:	test   ebx,edi
  40203e:	stos   BYTE PTR es:[edi],al
  40203f:	xor    al,0x30
  402041:	fdivrp st(2),st
  402043:	and    DWORD PTR [eax+0x2f4dbea],0xfffffffd
  40204a:	fidivr WORD PTR [esi-0x25]
  40204d:	addr16 xchg sp,ax
  402050:	jecxz  0x4020c3
  402052:	ja     0x402093
  402054:	in     eax,dx
  402055:	dec    eax
  402056:	cli    
  402057:	mov    WORD PTR [ecx],?
  402059:	mov    ds:0xdc95f35a,eax
  40205e:	add    BYTE PTR [ebp-0x80],bh
  402061:	pop    esi
  402062:	retf   0xe42f
  402065:	js     0x40203c
  402067:	dec    ebx
  402068:	scas   al,BYTE PTR es:[edi]
  402069:	sbb    cl,BYTE PTR [ebp-0x27c4d50c]
  40206f:	mov    ds:0x87eb22cd,eax
  402074:	cmp    DWORD PTR [eax],ebp
  402076:	lods   al,BYTE PTR ds:[esi]
  402077:	lock mov esp,0x733fc487
  40207d:	stc    
  40207e:	arpl   WORD PTR [eax+0x25f9d592],bp
  402084:	sbb    bh,BYTE PTR [eax-0xf]
  402087:	mov    ebx,0xacd14af
  40208c:	lahf   
  40208d:	and    bh,dl
  40208f:	xchg   edx,eax
  402090:	in     al,0xc4
  402092:	in     eax,dx
  402093:	xchg   DWORD PTR [edi+edx*2],esi
  402096:	loop   0x4020a7
  402098:	inc    ebp
  402099:	sub    eax,0xb76721a4
  40209e:	inc    esp
  40209f:	retf   
  4020a0:	aaa    
  4020a1:	xor    edx,DWORD PTR [ebp+0x2f6b8604]
  4020a7:	add    edx,DWORD PTR [edi-0x7e]
  4020aa:	xchg   ebx,eax
  4020ab:	jecxz  0x4020f3
  4020ad:	xor    eax,0x517dea8b
  4020b2:	sbb    edi,DWORD PTR [edx-0x39d8b9ac]
  4020b8:	pusha  
  4020b9:	push   cs
  4020ba:	inc    esp
  4020bb:	in     eax,dx
  4020bc:	call   0xb15aebb2
  4020c1:	jno    0x402053
  4020c3:	in     al,0x13
  4020c5:	xchg   BYTE PTR [eax+edi*1+0x224d4405],ch
  4020cc:	lods   al,BYTE PTR ds:[esi]
  4020cd:	cli    
  4020ce:	jns    0x402081
  4020d0:	fmul   st(6),st
  4020d2:	xchg   edx,eax
  4020d3:	pop    ebx
  4020d4:	mov    al,0x8c
  4020d6:	gs aad 0x12
  4020d9:	jg     0x4020e1
  4020db:	(bad)  
  4020dc:	sbb    eax,0xea3fa799
  4020e1:	std    
  4020e2:	xchg   esi,eax
  4020e3:	ja     0xe472636a
  4020e9:	mov    ebx,0x89534d5
  4020ee:	stos   BYTE PTR es:[edi],al
  4020ef:	out    0xeb,eax
  4020f1:	dec    edx
  4020f2:	dec    ebp
  4020f3:	xchg   DWORD PTR [edx-0x2b],esi
  4020f6:	inc    ecx
  4020f7:	loop   0x4020c8
  4020f9:	jmp    0x85b4:0x6c1a9cfc
  402100:	int    0xb3
  402102:	shl    DWORD PTR [ecx],1
  402104:	push   es
  402105:	pop    edx
  402106:	mov    cs,ebp
  402108:	xchg   BYTE PTR [edx+eiz*4-0x4f73323f],ch
  40210f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402110:	cmp    DWORD PTR [eax],0xffffffd4
  402113:	lahf   
  402114:	xchg   ebp,eax
  402115:	(bad)  [edi-0x3e]
  402118:	fimul  WORD PTR [esi-0x784037ab]
  40211e:	inc    ebx
  40211f:	and    ebp,DWORD PTR [edi]
  402121:	or     ebx,esi
  402123:	pop    ecx
  402124:	mov    ecx,0xc302f013
  402129:	dec    edi
  40212a:	add    eax,0xf183db3f
  40212f:	ret    
  402130:	mov    esp,0xfb37d0a3
  402135:	shl    BYTE PTR [eax],1
  402137:	xor    ch,BYTE PTR [edi]
  402139:	jge    0x4020bf
  40213b:	adc    DWORD PTR [edx+0x4e4856c4],0x5f
  402142:	mov    dl,0x1d
  402144:	lock in al,dx
  402146:	push   edi
  402147:	aam    0x11
  402149:	pop    eax
  40214a:	pushf  
  40214b:	dec    ebx
  40214c:	out    0xf5,al
  40214e:	cmp    eax,esi
  402150:	push   cs
  402151:	je     0x40211e
  402153:	push   ecx
  402154:	adc    DWORD PTR [ebx-0x2b],ebx
  402157:	jae    0x40212b
  402159:	xor    ch,dl
  40215b:	lods   eax,DWORD PTR ds:[esi]
  40215c:	and    eax,0xf0a4051
  402161:	(bad)  
  402162:	mov    eax,0x893f254c
  402167:	xor    eax,0x8866c9c0
  40216c:	inc    eax
  40216d:	mov    esp,DWORD PTR [ebx-0xa9819f4]
  402173:	bound  eax,QWORD PTR [esi+ebp*4]
  402176:	lods   al,BYTE PTR ds:[esi]
  402177:	fcmovu st,st(5)
  402179:	je     0x40217b
  40217b:	fwait
  40217c:	add    DWORD PTR ds:0xeae1df9d,ebx
  402182:	or     BYTE PTR [edx],ch
  402184:	jns    0x4021d6
  402186:	sbb    esp,edx
  402188:	(bad)  
  402189:	leave  
  40218a:	inc    eax
  40218b:	je     0x4021b0
  40218d:	call   0x992560c0
  402192:	mov    edx,0xea11fdf4
  402197:	xor    BYTE PTR [eax],0x87
  40219a:	xchg   esi,eax
  40219b:	rol    DWORD PTR [ecx+0x6b],0x7d
  40219f:	mov    eax,0xd0109d5
  4021a4:	pop    edx
  4021a5:	shr    BYTE PTR [edi-0x66a1fd50],0x65
  4021ac:	dec    esi
  4021ad:	pop    es
  4021ae:	xor    eax,0x80d276a5
  4021b3:	pop    ds
  4021b4:	adc    ebx,0xfad37ae5
  4021ba:	or     DWORD PTR [eax+0xd5373d4],edi
  4021c0:	or     ebp,DWORD PTR ds:0xf89411bb
  4021c6:	arpl   WORD PTR [eax-0x73],bx
  4021c9:	sub    al,0xdd
  4021cb:	(bad)  
  4021cc:	pop    ss
  4021cd:	pop    ebp
  4021ce:	test   bh,bl
  4021d0:	outs   dx,DWORD PTR ds:[esi]
  4021d1:	jne    0x4021ca
  4021d3:	daa    
  4021d4:	xchg   esp,eax
  4021d5:	cmp    al,0xf8
  4021d7:	mov    edi,0x2ffd7407
  4021dc:	mov    ecx,0x3ff5bcfd
  4021e1:	mov    eax,ds:0xd42646c6
  4021e6:	sbb    DWORD PTR [esi],edi
  4021e8:	pop    esp
  4021e9:	cmp    DWORD PTR [ebx-0x60],eax
  4021ec:	int3   
  4021ed:	iret   
  4021ee:	pop    edx
  4021ef:	sub    DWORD PTR [edx-0x6a01a16e],0x558997e4
  4021f9:	lahf   
  4021fa:	pop    esi
  4021fb:	sbb    eax,edi
  4021fd:	mov    esp,0xec09241c
  402202:	pop    es
  402203:	loop   0x40218d
  402205:	pop    ecx
  402206:	outs   dx,DWORD PTR ds:[esi]
  402207:	cmp    al,BYTE PTR [edi]
  402209:	test   BYTE PTR [edx+0x3e4e5ed9],bl
  40220f:	addr16 fwait
  402211:	dec    ebx
  402212:	cmp    BYTE PTR [edi+0x24],cl
  402215:	sbb    edi,DWORD PTR [edi-0x4e9f0928]
  40221b:	hlt    
  40221c:	or     DWORD PTR [edi+0x60],ebx
  40221f:	inc    ebp
  402220:	icebp  
  402221:	mov    al,ds:0x240f28a0
  402226:	hlt    
  402227:	pushf  
  402228:	rcl    BYTE PTR [edi-0x23a1d11c],1
  40222e:	xor    edi,DWORD PTR [edi+0x38]
  402231:	push   eax
  402232:	xchg   ecx,eax
  402233:	mov    WORD PTR [ebp-0x9],cs
  402236:	push   0x9760820f
  40223b:	(bad)  
  40223c:	out    0xf6,al
  40223e:	popa   
  40223f:	cmp    edx,DWORD PTR [esi]
  402241:	sbb    DWORD PTR [ebp+eiz*8+0x2216ef8f],ebx
  402248:	aas    
  402249:	out    dx,al
  40224a:	dec    ecx
  40224b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40224c:	add    BYTE PTR [edx-0x45fb68d1],0x6e
  402253:	sub    eax,0xa22b4884
  402258:	xchg   DWORD PTR [ebx],ecx
  40225a:	jle    0x4022d0
  40225c:	and    bh,al
  40225e:	sti    
  40225f:	inc    esi
  402260:	jl     0x4021f9
  402262:	retf   
  402263:	jp     0x402283
  402265:	fld    TBYTE PTR [eax-0x6e]
  402268:	stos   DWORD PTR es:[edi],eax
  402269:	add    al,BYTE PTR [ecx+0x5c]
  40226c:	push   0x76e8f47e
  402271:	cld    
  402272:	inc    ax
  402274:	or     DWORD PTR [ebp-0x21d17ef4],esp
  40227a:	inc    eax
  40227b:	adc    DWORD PTR [edx-0x1],ebx
  40227e:	in     eax,dx
  40227f:	fadd   st(4),st
  402281:	aaa    
  402282:	inc    edi
  402283:	pop    ebx
  402284:	test   al,0x94
  402286:	call   0xc91e00f9
  40228b:	and    BYTE PTR [edi],0x74
  40228e:	xlat   BYTE PTR ds:[ebx]
  40228f:	rcl    BYTE PTR [eax-0x6f],cl
  402292:	sub    bl,BYTE PTR [ecx+ecx*8]
  402295:	pop    eax
  402296:	xchg   edx,eax
  402297:	mov    ebp,0x51903713
  40229c:	sub    ah,dh
  40229e:	mov    ebp,0xf0cd2305
  4022a3:	xor    ecx,edx
  4022a5:	(bad)  
  4022a7:	add    edi,DWORD PTR [edi+0x34b2769d]
  4022ad:	sti    
  4022ae:	icebp  
  4022af:	push   edx
  4022b0:	jmp    0x3367:0x9a0e6bcc
  4022b7:	cmp    eax,0xe16a7e1a
  4022bc:	push   ebx
  4022bd:	scas   eax,DWORD PTR es:[edi]
  4022be:	dec    edx
  4022bf:	test   DWORD PTR [esi+0xa],ebx
  4022c2:	push   edi
  4022c3:	adc    bh,al
  4022c5:	dec    esi
  4022c6:	xor    cl,BYTE PTR [ebp+0x43e2e840]
  4022cc:	cmp    ah,BYTE PTR [esi+edx*8-0x54f22eda]
  4022d3:	sub    DWORD PTR ds:0x734394f7,esi
  4022d9:	inc    esi
  4022da:	ror    DWORD PTR [ecx+0x68],cl
  4022dd:	repnz jecxz 0x4022a9
  4022e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022e1:	mov    ch,0x5d
  4022e3:	sub    ebp,DWORD PTR [ebx-0x6e]
  4022e6:	shl    DWORD PTR gs:[eax+0x30ec16aa],cl
  4022ed:	or     BYTE PTR [ecx+edx*2-0x5f51c9df],dh
  4022f4:	mov    esp,0x943b76a9
  4022f9:	mov    ah,0x95
  4022fb:	cmp    BYTE PTR [edi],ch
  4022fd:	xchg   cl,bh
  4022ff:	ret    0x95fa
  402302:	pop    ebp
  402303:	dec    ebp
  402304:	jle    0x40229e
  402306:	fistp  QWORD PTR [ebx+edi*2-0x37]
  40230a:	mov    esp,0x228d1720
  40230f:	hlt    
  402310:	sbb    esp,edi
  402312:	(bad)  
  402313:	repnz stos DWORD PTR es:[edi],eax
  402315:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402316:	and    DWORD PTR [eax-0xa],ecx
  402319:	je     0x402320
  40231b:	inc    ebx
  40231c:	pop    edi
  40231d:	dec    ebx
  40231e:	adc    DWORD PTR [edx+0x60],esi
  402321:	(bad)  
  402323:	(bad)  
  402324:	pop    ecx
  402325:	fild   DWORD PTR [ecx-0x12]
  402328:	add    eax,DWORD PTR [esp+0x545948f1]
  40232f:	cmc    
  402330:	pop    ds
  402331:	cmovle ebp,DWORD PTR [ebx+edi*4]
  402335:	gs data16 rcr dl,0xa5
  40233a:	push   esi
  40233b:	popa   
  40233c:	xor    al,0x42
  40233e:	add    BYTE PTR [edx+0x1b73d375],ah
  402344:	cmp    al,0x24
  402346:	call   0xb988e89f
  40234b:	sbb    BYTE PTR es:[ebp-0x6e],dl
  40234f:	call   0xf83968e1
  402354:	dec    esi
  402355:	test   BYTE PTR [esi],dl
  402357:	int    0x6e
  402359:	mov    ds:0x2278d010,al
  40235e:	sbb    al,0x28
  402360:	loope  0x40231c
  402362:	jl     0x4023ca
  402364:	rcl    DWORD PTR [esi+0x7f],cl
  402367:	lea    ebx,[esi+eiz*1+0x45]
  40236b:	int    0x80
  40236d:	push   edx
  40236e:	sub    al,0x36
  402370:	popa   
  402371:	sahf   
  402372:	and    ah,BYTE PTR [edx]
  402374:	sbb    ch,bl
  402376:	or     eax,0x83a177f9
  40237b:	pop    edi
  40237c:	jo     0x40239d
  40237e:	cmp    eax,0x57871c65
  402383:	pcmpgtb mm1,QWORD PTR [eax-0x60]
  402387:	out    0x85,al
  402389:	pop    ecx
  40238a:	out    0xa,al
  40238c:	mov    dh,0x14
  40238e:	stos   BYTE PTR es:[edi],al
  40238f:	fcomp  QWORD PTR [ebx+0x6c]
  402392:	jae    0x4023ed
  402394:	nop
  402395:	mov    bh,0x71
  402397:	loop   0x4023f5
  402399:	mov    dh,0xdc
  40239b:	cld    
  40239c:	(bad)  
  40239d:	push   ds
  40239e:	jbe    0x402337
  4023a0:	dec    edi
  4023a1:	xchg   ecx,eax
  4023a2:	ret    
  4023a3:	imul   eax,DWORD PTR [esi],0x78
  4023a6:	retf   0x125e
  4023a9:	addr16 lock jns 0x40233a
  4023ad:	nop
  4023ae:	arpl   bx,si
  4023b0:	pop    ss
  4023b1:	mov    esp,0x33e04a91
  4023b6:	cmp    ebx,DWORD PTR ss:[ebx-0x8611df7]
  4023bd:	dec    ebx
  4023be:	sub    bl,BYTE PTR ss:[ebp-0x12b8953e]
  4023c5:	daa    
  4023c6:	sub    al,0xc2
  4023c8:	prefetch (bad)
  4023c9:	or     eax,0xb871cdde
  4023ce:	mov    dh,0x69
  4023d0:	in     eax,0x77
  4023d2:	mov    ds:0xeaebdd30,al
  4023d7:	ja     0x402373
  4023d9:	int    0x6f
  4023db:	gs mov dl,0xfe
  4023de:	mov    esi,DWORD PTR [ebp-0x4f2220fb]
  4023e4:	adc    bh,BYTE PTR [ebx]
  4023e6:	or     cl,BYTE PTR [ebp+0x7a]
  4023e9:	mov    esi,eax
  4023eb:	daa    
  4023ec:	adc    BYTE PTR [ecx],ch
  4023ee:	clc    
  4023ef:	add    eax,0x37b0be1c
  4023f4:	pop    esi
  4023f5:	push   es
  4023f6:	out    0xf6,eax
  4023f8:	mov    WORD PTR [ebx-0x6d50f387],?
  4023fe:	mov    ch,0x9d
  402400:	sub    DWORD PTR [si],eax
  402403:	mov    bl,dh
  402405:	adc    eax,0x2ee60287
  40240a:	mov    edx,0xabe8b32a
  40240f:	shr    DWORD PTR [edx-0x5752062],1
  402415:	or     BYTE PTR [edx-0xc],ah
  402418:	stos   BYTE PTR es:[edi],al
  402419:	call   0x3fcf:0xee622a87
  402420:	faddp  st(7),st
  402422:	adc    dl,BYTE PTR ds:0xd077c43f
  402428:	push   ss
  402429:	jne    0x402423
  40242b:	test   BYTE PTR [ebp-0x77],bl
  40242e:	xchg   BYTE PTR [ebx],dh
  402430:	fnstenv [ebx+0x25232e4d]
  402436:	fs push es
  402438:	imul   edi,DWORD PTR ds:[edx-0x42],0x41824c5a
  402440:	pop    es
  402441:	dec    ecx
  402442:	add    cl,BYTE PTR [ebx]
  402444:	cmp    bl,BYTE PTR [ecx-0x71d81b9d]
  40244a:	call   0xceea:0x42c1dca3
  402451:	sub    DWORD PTR [edi-0x4a],0x6a
  402455:	imul   edx,DWORD PTR [esi],0xfdf31c8c
  40245b:	mov    esp,0x1ba0e33f
  402460:	dec    edi
  402461:	pop    ss
  402462:	gs jg  0x4024a7
  402465:	mov    ebx,0xf0490a54
  40246a:	adc    al,0xb1
  40246c:	sub    al,0x53
  40246e:	inc    ebp
  40246f:	mov    esp,0x6d3fb520
  402474:	or     eax,0x714cfb72
  402479:	mov    fs,WORD PTR [esi+edx*2-0x67e16892]
  402480:	test   BYTE PTR [ebx],0x59
  402483:	jp     0x4024d3
  402485:	mov    dh,0x9e
  402487:	push   ebx
  402488:	stc    
  402489:	sub    al,0xa6
  40248b:	cli    
  40248c:	pop    ebp
  40248d:	xor    BYTE PTR [esi],dh
  40248f:	div    DWORD PTR [ebx-0x2f2a178d]
  402495:	sub    ah,ah
  402497:	jp     0x4024e4
  402499:	leave  
  40249a:	or     BYTE PTR [ebx+0x9],bh
  40249d:	std    
  40249e:	jno    0x40249c
  4024a0:	cwde   
  4024a1:	jns    0x4024dd
  4024a3:	fisttp WORD PTR [esi+0x51d13568]
  4024a9:	test   eax,0xd204c86e
  4024ae:	sbb    eax,0xe8ef91cf
  4024b3:	cmc    
  4024b4:	jno    0x402478
  4024b6:	fstp   TBYTE PTR [edx-0x6d]
  4024b9:	jl     0x402488
  4024bb:	cld    
  4024bc:	cmp    eax,0xe15d21c8
  4024c1:	xor    eax,ebx
  4024c3:	iret   
  4024c4:	xchg   ebx,eax
  4024c5:	xchg   edx,eax
  4024c6:	xchg   esi,eax
  4024c7:	lods   eax,DWORD PTR ds:[esi]
  4024c8:	cmp    ah,BYTE PTR [edi]
  4024ca:	(bad)  
  4024cb:	gs fcomp st(7)
  4024ce:	cmc    
  4024cf:	imul   esp,DWORD PTR [eax],0x1df31a0b
  4024d5:	(bad)  
  4024d7:	sbb    bh,BYTE PTR [eax+0x4195e72e]
  4024dd:	in     eax,0x1a
  4024df:	and    DWORD PTR [eax+0x6b],eax
  4024e2:	xor    BYTE PTR [edi-0x37],cl
  4024e5:	gs jmp 0x4c759c81
  4024eb:	mov    al,ch
  4024ed:	inc    ecx
  4024ee:	jp     0x402512
  4024f0:	lods   al,BYTE PTR ds:[esi]
  4024f1:	sbb    al,0x66
  4024f3:	or     al,BYTE PTR ds:0x4f3622d7
  4024f9:	jmp    DWORD PTR [eax-0x37]
  4024fc:	frstor [ecx]
  4024fe:	pop    eax
  4024ff:	mov    eax,ds:0x4cd92723
  402504:	jle    0x402574
  402506:	shl    cl,1
  402508:	lds    edi,FWORD PTR [ecx+0x6ba6ffc4]
  40250e:	(bad)  
  40250f:	out    0xc4,eax
  402511:	ror    BYTE PTR [esi],0x23
  402514:	cwde   
  402515:	or     edi,DWORD PTR [ebx-0x62]
  402518:	(bad)  
  40251a:	sbb    eax,0xeb75b53c
  40251f:	or     eax,0x9f07e503
  402524:	add    ebp,esi
  402526:	dec    ebp
  402527:	cmp    DWORD PTR [edi+0x51],esi
  40252a:	sbb    al,0x97
  40252c:	repz loop 0x40257c
  40252f:	fcom   st(6)
  402531:	mov    ds:0xebc49c22,eax
  402536:	xchg   ecx,eax
  402537:	stos   BYTE PTR es:[edi],al
  402538:	lods   al,BYTE PTR ds:[esi]
  402539:	add    eax,0x96e32d4c
  40253e:	sub    ecx,esp
  402540:	cld    
  402541:	pop    esi
  402542:	add    eax,0xc5934e7a
  402547:	push   es
  402548:	cs adc ebp,edx
  40254b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40254c:	add    dl,BYTE PTR [edi-0x2f56a3e6]
  402552:	adc    DWORD PTR [eax-0x3e17e396],esp
  402558:	dec    esi
  402559:	cmp    dl,BYTE PTR [ecx+0x609841fb]
  40255f:	pop    es
  402560:	cdq    
  402561:	jb     0x402586
  402563:	push   es
  402564:	test   eax,0x60c91bf6
  402569:	mov    cs,WORD PTR [esp+eax*8-0x76d30ca8]
  402570:	pop    ebp
  402571:	gs push edx
  402573:	addr16 jo 0x402560
  402576:	out    0x28,al
  402578:	out    dx,al
  402579:	lahf   
  40257a:	xchg   BYTE PTR [edx],ch
  40257c:	sbb    DWORD PTR [edi-0x42b0fa75],0x9672093a
  402586:	das    
  402587:	pop    DWORD PTR [ecx+0xb]
  40258a:	push   ecx
  40258b:	push   eax
  40258c:	pop    eax
  40258d:	bnd jae 0x402588
  402590:	loop   0x402611
  402592:	sbb    ch,BYTE PTR [esi+0x30b9807]
  402598:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402599:	imul   ebp,DWORD PTR [ebx-0xe],0xffffffa5
  40259d:	(bad)  
  40259e:	mov    ds:0x156a6dd6,al
  4025a3:	add    DWORD PTR [ebx+edx*8-0x23a45d91],ebp
  4025aa:	test   al,dh
  4025ac:	adc    esi,DWORD PTR [edx]
  4025ae:	cmp    al,0x9b
  4025b0:	repnz mov ss,WORD PTR [edi-0x620be309]
  4025b7:	push   es
  4025b8:	xor    dl,BYTE PTR [esi+0x1eede9e]
  4025be:	sub    BYTE PTR [edi*2+0x41e0d242],dl
  4025c5:	cli    
  4025c6:	sbb    bl,ah
  4025c8:	pop    edi
  4025c9:	scas   al,BYTE PTR es:[edi]
  4025ca:	lods   al,BYTE PTR ds:[esi]
  4025cb:	sub    eax,ebp
  4025cd:	lods   eax,DWORD PTR ds:[esi]
  4025ce:	retf   0x64da
  4025d1:	jno    0x402629
  4025d3:	ja     0x40264b
  4025d5:	pop    ss
  4025d6:	jle    0x4025e6
  4025d8:	sbb    ebp,DWORD PTR [ecx+ecx*1-0x45]
  4025dc:	sbb    edx,DWORD PTR [esi]
  4025de:	ins    DWORD PTR es:[edi],dx
  4025df:	addr16 gs xchg edx,eax
  4025e2:	outs   dx,DWORD PTR ds:[esi]
  4025e3:	aaa    
  4025e4:	sub    al,0x40
  4025e6:	popa   
  4025e7:	cmp    DWORD PTR [ecx],eax
  4025e9:	mov    dl,0x7
  4025eb:	cmp    al,0x2b
  4025ed:	inc    esp
  4025ee:	fs (bad) 
  4025f0:	jbe    0x402661
  4025f2:	or     al,0xe3
  4025f4:	jmp    FWORD PTR [edx+0x21]
  4025f7:	add    al,0x48
  4025f9:	ins    BYTE PTR es:[edi],dx
  4025fa:	jmp    0x4025b1
  4025fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025fd:	and    al,0x2c
  4025ff:	mov    ebp,0xe63ed20a
  402604:	rcl    BYTE PTR [edi+ebx*8+0x45],cl
  402608:	inc    ebx
  402609:	mov    esi,0x5bb2dca6
  40260e:	fs sbb eax,0x53bd390a
  402614:	cmp    al,0x4e
  402616:	addr16 ss es pop esi
  40261a:	xchg   ebx,eax
  40261b:	iret   
  40261c:	mov    eax,ds:0xa97dec8c
  402621:	sub    DWORD PTR [ecx],ecx
  402623:	pop    esi
  402624:	xor    DWORD PTR [edi+0x41dd1ba7],0x2a
  40262b:	push   esp
  40262c:	or     eax,ebx
  40262e:	sub    al,0xb7
  402630:	fild   WORD PTR [eax+0x4a]
  402633:	mov    bh,ah
  402635:	cmp    eax,0xd154b9f3
  40263a:	popf   
  40263b:	pushf  
  40263c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40263d:	repnz pop edx
  40263f:	and    esp,DWORD PTR [eax-0x57]
  402642:	sbb    eax,0x2c33e147
  402647:	sbb    BYTE PTR [edi-0x68],dh
  40264a:	cs (bad) 
  40264c:	icebp  
  40264d:	arpl   WORD PTR [edx+0x30a8380],dx
  402653:	push   cs
  402654:	pushf  
  402655:	dec    eax
  402656:	loopne 0x402687
  402658:	dec    edi
  402659:	jl     0x4026ba
  40265b:	cdq    
  40265c:	cmp    eax,0x3e1a5d9a
  402661:	je     0x4026a2
  402663:	mov    ebp,?
  402665:	dec    edi
  402666:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402667:	xchg   ebp,eax
  402668:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402669:	imul   esi,DWORD PTR [esi],0x90d75acf
  40266f:	mov    esi,0x2e1e2239
  402674:	mov    ds:0x64b6f111,al
  402679:	add    DWORD PTR [eax-0x4],edi
  40267c:	les    eax,FWORD PTR [esi+esi*8]
  40267f:	adc    eax,0x2e894e5
  402684:	add    bh,0xb6
  402687:	adc    eax,0x9cbe60ff
  40268c:	(bad)  
  40268d:	nop
  40268e:	pop    ecx
  40268f:	ins    DWORD PTR es:[edi],dx
  402690:	mov    cs,WORD PTR [edi]
  402692:	arpl   WORD PTR [edi-0x24ff7a59],bp
  402698:	stos   DWORD PTR es:[edi],eax
  402699:	loope  0x402646
  40269b:	dec    ecx
  40269c:	ficom  WORD PTR [esi+0x40833c90]
  4026a2:	sar    DWORD PTR [eax+0x413fac06],1
  4026a8:	push   edi
  4026a9:	sub    ecx,eax
  4026ab:	push   cs
  4026ac:	cmp    bl,cl
  4026ae:	cmc    
  4026af:	push   ebp
  4026b0:	push   ds
  4026b1:	scas   eax,DWORD PTR es:[edi]
  4026b2:	mov    bh,0x6b
  4026b4:	ins    DWORD PTR es:[edi],dx
  4026b5:	ja     0x402682
  4026b7:	mov    al,ds:0xafa339ba
  4026bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026bd:	cmp    eax,0xd7fe6e3e
  4026c2:	and    bh,al
  4026c4:	jg     0x402718
  4026c6:	ficomp DWORD PTR [esi+edx*8]
  4026c9:	mov    ebp,0x3a308f88
  4026ce:	xchg   esi,eax
  4026cf:	call   0x1ba27188
  4026d4:	jge    0x4026d5
  4026d6:	sti    
  4026d7:	push   0xac446fea
  4026dc:	add    eax,0x7c469657
  4026e1:	jmp    0x3cc1:0x6c0c58d6
  4026e8:	(bad)  
  4026e9:	mov    esi,0xe4f0b670
  4026ee:	ret    0x939d
  4026f1:	push   ebx
  4026f2:	mov    eax,0x324e13f7
  4026f7:	dec    ecx
  4026f8:	sub    DWORD PTR [esi],esp
  4026fa:	push   0x19b8d317
  4026ff:	aam    0x82
  402701:	push   eax
  402702:	out    0x72,eax
  402704:	sar    BYTE PTR [edi],1
  402706:	enter  0xd3bb,0x1d
  40270a:	aaa    
  40270b:	xor    eax,0xfe9ff220
  402710:	mov    ebp,0x35b6477
  402715:	push   esi
  402716:	mov    bl,0xda
  402718:	inc    ah
  40271a:	pusha  
  40271b:	push   ebp
  40271c:	ror    DWORD PTR [ecx+0x3d],0x69
  402720:	mov    WORD PTR [esi+ebp*4],ss
  402723:	adc    dl,BYTE PTR ds:0x723b6075
  402729:	sti    
  40272a:	repz sub al,0xaa
  40272d:	loop   0x402761
  40272f:	sbb    eax,0xbef071b9
  402734:	jbe    0x4026db
  402736:	inc    esp
  402737:	mov    ah,0x84
  402739:	mov    edi,0xc1f70547
  40273e:	stos   DWORD PTR es:[edi],eax
  40273f:	or     eax,0x5a5fd144
  402744:	jnp    0x40278e
  402746:	mov    ds:0xc09e6f3e,al
  40274b:	jmp    0x402771
  40274d:	sbb    DWORD PTR [edi],eax
  40274f:	sbb    al,0x4d
  402751:	jp     0x40278a
  402753:	jp     0x402753
  402755:	icebp  
  402756:	jg     0x40279d
  402758:	sub    edx,DWORD PTR [ebx-0x65]
  40275b:	mov    dh,0xac
  40275d:	mov    esi,0x929aa528
  402762:	call   0x98d8:0x7fd6f5ca
  402769:	ss dec ebp
  40276b:	or     BYTE PTR [eax+0x4b],al
  40276e:	or     al,0xb8
  402770:	xchg   edx,eax
  402771:	mov    bh,0xd0
  402773:	jns    0x4027d6
  402775:	jle    0x402724
  402777:	sub    BYTE PTR [ebx+0x5f25d340],al
  40277d:	es jmp 0x1bf3dd21
  402783:	add    BYTE PTR [edi],bh
  402785:	lods   al,BYTE PTR ds:[esi]
  402786:	pop    edi
  402787:	xchg   esi,eax
  402788:	lods   al,BYTE PTR ds:[esi]
  402789:	scas   eax,DWORD PTR es:[edi]
  40278a:	push   ebp
  40278b:	sbb    ah,BYTE PTR [ecx]
  40278d:	inc    eax
  40278e:	(bad)  
  40278f:	pop    eax
  402790:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402791:	dec    eax
  402792:	inc    eax
  402793:	inc    ebx
  402794:	ja     0x40280c
  402796:	lods   eax,DWORD PTR ds:[esi]
  402797:	(bad)  
  402798:	out    0xa7,al
  40279a:	fldcw  WORD PTR [ecx]
  40279c:	in     eax,0x84
  40279e:	call   0x6e0073af
  4027a3:	push   0xc2c02dd8
  4027a8:	adc    al,0x7e
  4027aa:	jnp    0x40280a
  4027ac:	cmp    BYTE PTR [edi],ch
  4027ae:	stc    
  4027af:	add    ebp,DWORD PTR [esi+0xba11dc6]
  4027b5:	mov    eax,ds:0x264e891b
  4027ba:	ja     0x402835
  4027bc:	push   esi
  4027bd:	cmp    ch,BYTE PTR [edx+edi*8+0x55cd8051]
  4027c4:	or     eax,0x9514e7bf
  4027c9:	stc    
  4027ca:	xchg   edi,eax
  4027cb:	xor    al,0x9
  4027cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027ce:	inc    DWORD PTR [edx+0x62]
  4027d1:	aaa    
  4027d2:	and    DWORD PTR ds:0xd8f6d257,edx
  4027d8:	or     DWORD PTR [edi-0x6],edi
  4027db:	mov    ah,BYTE PTR [edi+ebp*8]
  4027de:	(bad)  
  4027df:	sub    bl,BYTE PTR [ebp+ebx*8+0x6ef8cdc3]
  4027e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027e8:	jae    0x402836
  4027ea:	arpl   si,sp
  4027ec:	mov    ecx,0x5f9e960
  4027f1:	repz test BYTE PTR [ebp-0x77],0x23
  4027f6:	dec    edi
  4027f7:	call   0x423f3c68
  4027fc:	das    
  4027fd:	or     al,0x10
  4027ff:	jmp    0x2d04676e
  402804:	mov    ch,0x50
  402806:	nop
  402807:	cmp    ecx,DWORD PTR [edi+0x374c3303]
  40280d:	ja     0x402854
  40280f:	pusha  
  402810:	loope  0x4027a9
  402812:	mov    bl,0xaf
  402814:	and    DWORD PTR [edi-0x1a834f8c],ebp
  40281a:	lds    ecx,FWORD PTR [edx-0x70be64fa]
  402820:	(bad)  
  402821:	into   
  402822:	inc    eax
  402823:	sahf   
  402824:	adc    al,0xd7
  402826:	les    edi,FWORD PTR [eax+ebx*2-0x3b4d7455]
  40282d:	add    al,0x4c
  40282f:	mov    dl,0x12
  402831:	cmp    DWORD PTR [edx],edi
  402833:	jp     0x402844
  402835:	fsub   st(1),st
  402837:	pop    edx
  402838:	or     ecx,eax
  40283a:	fcomp  st(4)
  40283c:	xor    edi,DWORD PTR [esi]
  40283e:	and    al,0x3f
  402840:	add    BYTE PTR [ebx+0x16],bh
  402843:	pop    ss
  402844:	outs   dx,DWORD PTR ds:[esi]
  402845:	add    eax,0xfb1c9f04
  40284a:	adc    BYTE PTR [esi+ebx*4],al
  40284d:	mov    eax,ds:0xc170e132
  402852:	inc    ebx
  402853:	pusha  
  402854:	call   0xdf79cda7
  402859:	cli    
  40285a:	or     ecx,DWORD PTR [ecx]
  40285c:	sbb    al,0xb6
  40285e:	imul   esp,DWORD PTR [eax-0x35f182ac],0xffffffff
  402865:	cli    
  402866:	jmp    0x402890
  402868:	dec    ebx
  402869:	mov    ecx,0xb88d28c8
  40286e:	fimul  DWORD PTR [edx]
  402870:	xor    al,0x5
  402872:	sub    al,0x99
  402874:	mov    ch,0xb6
  402876:	outs   dx,DWORD PTR ds:[esi]
  402877:	push   esi
  402878:	xor    bl,BYTE PTR [ecx]
  40287a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40287b:	jns    0x402828
  40287d:	mov    ds:0x21af50d5,al
  402882:	mov    cl,0x27
  402884:	(bad)
  402887:	cs stc 
  402889:	push   es
  40288a:	js     0x40281d
  40288c:	test   BYTE PTR [edi-0x65],al
  40288f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402890:	test   BYTE PTR [ecx],bl
  402892:	retf   
  402893:	cli    
  402894:	mov    ecx,0xc1af0210
  402899:	xchg   ecx,eax
  40289a:	imul   DWORD PTR [edx+0x57]
  40289d:	adc    ebp,ebx
  40289f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028a0:	inc    eax
  4028a1:	aas    
  4028a2:	mov    DWORD PTR [esp+edx*1+0x6c],ebp
  4028a6:	popf   
  4028a7:	sbb    ch,al
  4028a9:	add    DWORD PTR [ebx+0x2e912d42],ecx
  4028af:	imul   DWORD PTR [eax+0x4a]
  4028b2:	imul   dl
  4028b4:	outs   dx,BYTE PTR ds:[esi]
  4028b5:	or     bh,BYTE PTR [esi-0x58]
  4028b8:	jb     0x40283a
  4028ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028bb:	cs data16 loope 0x4028f9
  4028bf:	mov    edi,0x5463368e
  4028c4:	or     edi,DWORD PTR [ebp-0x29e7f5e2]
  4028ca:	popf   
  4028cb:	add    ebp,DWORD PTR [esi*1+0xd97dd5f]
  4028d2:	inc    ebx
  4028d3:	xlat   BYTE PTR ds:[ebx]
  4028d4:	fwait
  4028d5:	int3   
  4028d6:	int    0x81
  4028d8:	mov    al,ds:0x1da9a276
  4028dd:	js     0x4028aa
  4028df:	fidivr WORD PTR [ecx]
  4028e1:	mov    ebp,esi
  4028e3:	pop    eax
  4028e4:	push   esi
  4028e5:	out    dx,eax
  4028e6:	pop    ss
  4028e7:	jge    0x40286e
  4028e9:	call   0xe7e7:0x7731e660
  4028f0:	and    al,0x39
  4028f2:	out    0x36,eax
  4028f4:	xchg   DWORD PTR ds:0x4fad1a33,ebx
  4028fa:	out    0x7f,eax
  4028fc:	or     ah,BYTE PTR [edi]
  4028fe:	mov    esp,DWORD PTR [esi+ecx*8+0x66079466]
  402905:	int    0xb2
  402907:	paddd  mm7,QWORD PTR [esi]
  40290a:	ins    DWORD PTR es:[edi],dx
  40290b:	cmp    DWORD PTR [ecx],edi
  40290d:	outs   dx,BYTE PTR ds:[esi]
  40290e:	test   eax,0x42aa5034
  402913:	fistp  DWORD PTR [edi+0x560d40c5]
  402919:	outs   dx,DWORD PTR ds:[esi]
  40291a:	xchg   ecx,esi
  40291c:	cmc    
  40291d:	fadd   DWORD PTR [esi+0x50934cc6]
  402923:	test   BYTE PTR [eax],dl
  402925:	scas   eax,DWORD PTR es:[edi]
  402926:	call   DWORD PTR [esp+ecx*8+0x73]
  40292a:	in     al,0xa5
  40292c:	add    DWORD PTR [edx+ebp*1+0x4fc75749],0x63d36b79
  402937:	and    BYTE PTR [edi],cl
  402939:	out    0x5b,al
  40293b:	nop
  40293c:	loope  0x40294e
  40293e:	pop    es
  40293f:	iret   
  402940:	into   
  402941:	jge    0x40296c
  402943:	or     dl,dh
  402945:	fild   WORD PTR ds:0x9180627
  40294b:	stos   BYTE PTR es:[edi],al
  40294c:	mov    eax,ss
  40294e:	gs imul edi,esp,0xffffffb5
  402952:	sub    ah,bl
  402954:	xchg   edx,eax
  402955:	xchg   ecx,eax
  402956:	imul   DWORD PTR [edi+0x2dcd8418]
  40295c:	cs std 
  40295e:	or     al,0xe0
  402960:	sar    BYTE PTR [esi+edx*1-0x5],cl
  402964:	cmp    al,ah
  402966:	or     eax,0x7aa47c0a
  40296b:	jmp    0x7086:0xce38faa0
  402972:	sahf   
  402973:	inc    ecx
  402974:	jg     0x40298e
  402976:	add    BYTE PTR [edi],al
  402978:	add    edx,DWORD PTR [esi+0x6038dcd5]
  40297e:	push   edi
  40297f:	retf   0xa5e0
  402982:	pop    esp
  402983:	ss pop ds
  402985:	add    BYTE PTR [edi+0xc],dh
  402988:	fnsave [ecx+0x12]
  40298b:	ja     0x402a06
  40298d:	ficom  WORD PTR [eax+0x22]
  402990:	fsubr  DWORD PTR [esi+0x630d2992]
  402996:	dec    ebp
  402997:	adc    eax,0x5cf8c1a1
  40299c:	dec    ecx
  40299d:	gs loope 0x4029a6
  4029a0:	jae    0x40299f
  4029a2:	mov    edi,0xbc6c67f3
  4029a7:	aam    0xae
  4029a9:	cmp    BYTE PTR [edi+0x33],0x1
  4029ad:	pop    eax
  4029ae:	and    al,0xf7
  4029b0:	in     al,dx
  4029b1:	out    0x18,eax
  4029b3:	arpl   WORD PTR ds:0xd683b47c,cx
  4029b9:	mov    edx,0xe5a6a33c
  4029be:	sub    BYTE PTR [eax-0x51dc6544],ch
  4029c4:	pop    edi
  4029c5:	adc    edx,DWORD PTR [esi]
  4029c7:	adc    eax,0x68337996
  4029cc:	pop    ebx
  4029cd:	cs hlt 
  4029cf:	hlt    
  4029d0:	(bad)  
  4029d1:	call   0x53c4:0xb8870a08
  4029d8:	ficom  WORD PTR [esi+0x58b20813]
  4029de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029df:	push   ss
  4029e0:	inc    ebp
  4029e1:	fisttp QWORD PTR [edx]
  4029e3:	or     eax,0xe8052e38
  4029e8:	pop    eax
  4029e9:	retf   
  4029ea:	stos   DWORD PTR es:[edi],eax
  4029eb:	jmp    0x4029dc
  4029ed:	inc    ebx
  4029ee:	xchg   ebp,eax
  4029ef:	xor    BYTE PTR [eax-0x2ff5005a],ch
  4029f5:	ret    0x7db0
  4029f8:	ins    BYTE PTR es:[edi],dx
  4029f9:	mov    DWORD PTR [ebp+0x65],ebx
  4029fc:	fisttp QWORD PTR [ecx]
  4029fe:	mov    ?,WORD PTR [esi+0x78]
  402a01:	or     BYTE PTR [edi],ch
  402a03:	and    BYTE PTR [edx+0x401e601d],bl
  402a09:	push   esp
  402a0a:	mov    bh,0xfd
  402a0c:	mov    esp,DWORD PTR [edx-0x4e]
  402a0f:	in     al,0xd
  402a11:	pop    ebx
  402a12:	jg     0x402a5f
  402a14:	jbe    0x402a1b
  402a16:	mov    WORD PTR [esi+0x5c],cs
  402a19:	es repnz push ebx
  402a1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a1d:	or     DWORD PTR [esp+edx*1-0x26fba225],edx
  402a24:	mov    al,ds:0x2b17ffa9
  402a29:	jno    0x4029f5
  402a2b:	fistp  WORD PTR [eax+edi*4]
  402a2e:	test   BYTE PTR [ebx+0x5],0x1b
  402a32:	fbld   TBYTE PTR [edi]
  402a34:	or     al,0xa
  402a36:	push   0xce1b9e61
  402a3b:	and    eax,0x3374db13
  402a40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a42:	xor    bh,0x64
  402a45:	mov    edx,0x974aa027
  402a4a:	mov    ss:0xa7410693,al
  402a50:	aas    
  402a51:	div    edi
  402a53:	sbb    esi,DWORD PTR [eax+0x6e]
  402a56:	mov    ebx,0x59ff0a4d
  402a5b:	daa    
  402a5c:	cmp    eax,0xcdee4cbe
  402a61:	pusha  
  402a62:	push   ds
  402a63:	push   DWORD PTR [ebx+0x45]
  402a66:	adc    BYTE PTR [eax+esi*2+0xb05ffa6],0x30
  402a6e:	ror    BYTE PTR [ecx],cl
  402a70:	out    dx,al
  402a71:	jg     0x4029fa
  402a73:	push   esi
  402a74:	mov    ah,0xec
  402a76:	out    0xec,eax
  402a78:	int3   
  402a79:	ss call 0x6f2e:0x22677e93
  402a81:	popa   
  402a82:	aam    0x57
  402a84:	sbb    eax,DWORD PTR [edi+0x16]
  402a87:	sti    
  402a88:	adc    ecx,DWORD PTR [edx+0x13c06b52]
  402a8e:	out    dx,al
  402a8f:	push   esp
  402a90:	std    
  402a91:	mov    WORD PTR [eax+0x39],?
  402a94:	loop   0x402a33
  402a96:	push   esp
  402a97:	das    
  402a98:	jge    0x402ae1
  402a9a:	xlat   BYTE PTR ds:[ebx]
  402a9b:	icebp  
  402a9c:	enter  0xc673,0x1
  402aa0:	jmp    0xae4f:0x7bec7461
  402aa7:	aad    0xe7
  402aa9:	push   edx
  402aaa:	rol    BYTE PTR [ecx+0xbe232f5],cl
  402ab0:	popa   
  402ab1:	or     BYTE PTR [ecx],ch
  402ab3:	icebp  
  402ab4:	mov    esp,ebp
  402ab6:	cmp    ah,cl
  402ab8:	mov    ch,0xe2
  402aba:	mov    esi,0x688bda84
  402abf:	mov    cl,0x2f
  402ac1:	inc    BYTE PTR [edx+0x5127bb2d]
  402ac7:	mov    ds:0xa68490ab,eax
  402acc:	xor    BYTE PTR [edx-0x3],ch
  402acf:	mov    bl,0x80
  402ad1:	pop    esi
  402ad2:	xor    DWORD PTR [esi+0x765d5c17],0xffc42b9b
  402adc:	loope  0x402b50
  402ade:	pop    ss
  402adf:	div    BYTE PTR [eax+edx*2-0x2b014b67]
  402ae6:	mov    ch,0x2
  402ae8:	lods   al,BYTE PTR ds:[esi]
  402ae9:	das    
  402aea:	xchg   BYTE PTR [ebp-0x34],dh
  402aed:	mov    dl,BYTE PTR [ebx+0x2]
  402af0:	add    DWORD PTR [edx+0x53],ebx
  402af3:	xchg   edx,eax
  402af4:	mov    esp,0x88f49c77
  402af9:	arpl   WORD PTR [edx],cx
  402afb:	add    BYTE PTR [ecx-0x3f05cbd5],ch
  402b01:	or     DWORD PTR [esi-0xb],edi
  402b04:	push   ecx
  402b05:	aam    0xe9
  402b07:	fdivr  DWORD PTR [edx+0x70d527f5]
  402b0d:	xchg   BYTE PTR [edi],dh
  402b0f:	sahf   
  402b10:	call   0xcef8f6ef
  402b15:	jbe    0x402b32
  402b17:	lds    ebx,FWORD PTR [ebp-0x34702177]
  402b1d:	scas   eax,DWORD PTR es:[edi]
  402b1e:	sahf   
  402b1f:	popa   
  402b20:	pop    edx
  402b21:	adc    al,0xdf
  402b23:	jmp    0x36df:0x4fd92817
  402b2a:	push   eax
  402b2b:	adc    al,0xf1
  402b2d:	jl     0x402b61
  402b2f:	aad    0x5
  402b31:	popa   
  402b32:	inc    ecx
  402b33:	pop    edx
  402b34:	sub    BYTE PTR [ecx+0xa],dl
  402b37:	dec    edx
  402b38:	test   eax,0x4d76d70a
  402b3d:	in     al,0xee
  402b3f:	push   cs
  402b40:	lods   al,BYTE PTR ds:[esi]
  402b41:	mov    edx,0x450f20bc
  402b46:	out    0xb1,eax
  402b48:	push   es
  402b49:	xor    bh,0xf6
  402b4c:	jl     0x402b7c
  402b4e:	jbe    0x402bcc
  402b50:	out    dx,al
  402b51:	ins    DWORD PTR es:[edi],dx
  402b52:	ficom  WORD PTR [edi+0x33]
  402b55:	loop   0x402b97
  402b57:	sbb    eax,0x5423320a
  402b5c:	and    al,0xcc
  402b5e:	jl     0x402b34
  402b60:	xchg   ecx,eax
  402b61:	dec    esi
  402b62:	push   ebx
  402b63:	or     dl,BYTE PTR gs:[eax]
  402b66:	xchg   ebx,eax
  402b67:	cwde   
  402b68:	pushf  
  402b69:	test   eax,0xfc8600ca
  402b6e:	mov    eax,0xfba7c3d3
  402b73:	lds    ebp,FWORD PTR [ebx-0x5f4c741d]
  402b79:	sbb    esp,DWORD PTR [esi*4-0x7f8a0f30]
  402b80:	xor    eax,0x47d65dd6
  402b85:	xor    eax,0x6cc30799
  402b8a:	loopne 0x402b46
  402b8c:	fstp   TBYTE PTR [ecx-0x2f]
  402b8f:	loopne 0x402b24
  402b91:	jbe    0x402bc9
  402b93:	fild   WORD PTR [edx+0x45be4ba3]
  402b99:	rol    ebp,0x62
  402b9c:	xor    esi,DWORD PTR [ebx-0x3]
  402b9f:	xor    edx,ebx
  402ba1:	rcl    dh,0xe7
  402ba4:	addr16 ds (bad) 
  402ba8:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  402baa:	hlt    
  402bab:	dec    edx
  402bac:	out    dx,al
  402bad:	int    0x1f
  402baf:	jae    0x402bd6
  402bb1:	sub    eax,0x8f38feae
  402bb6:	sub    ah,BYTE PTR [ecx+0x1a]
  402bb9:	popf   
  402bba:	xor    al,0xda
  402bbc:	adc    DWORD PTR [edi],esi
  402bbe:	out    0xea,eax
  402bc0:	cli    
  402bc1:	test   BYTE PTR [ebp-0x1b],bl
  402bc4:	mov    ebp,es
  402bc6:	and    esi,DWORD PTR [ecx-0x4e]
  402bc9:	cmc    
  402bca:	mov    esp,0x348fc291
  402bcf:	add    eax,0xcbb5583d
  402bd4:	out    dx,eax
  402bd5:	dec    esi
  402bd6:	mov    ebp,0xb2660ca7
  402bdb:	loop   0x402c4b
  402bdd:	dec    eax
  402bde:	test   al,0x4d
  402be0:	push   0x7b56507b
  402be5:	inc    edi
  402be6:	int3   
  402be7:	and    esp,DWORD PTR [ebp+ebp*4-0x6]
  402beb:	scas   al,BYTE PTR es:[edi]
  402bec:	xchg   esi,eax
  402bed:	call   0x87ec6fb0
  402bf2:	in     al,0xb
  402bf4:	pusha  
  402bf5:	mov    dh,0xdc
  402bf7:	in     eax,dx
  402bf8:	lods   eax,DWORD PTR ds:[esi]
  402bf9:	scas   eax,DWORD PTR es:[edi]
  402bfa:	sub    DWORD PTR [edx-0x23159600],0xb6148537
  402c04:	int3   
  402c05:	ror    ebx,cl
  402c07:	jl     0x402c28
  402c09:	sbb    al,0x68
  402c0b:	sbb    al,0xf9
  402c0d:	fdiv   DWORD PTR [edx-0x62f556cd]
  402c13:	jmp    0x219b0ceb
  402c18:	pop    ebp
  402c19:	push   esp
  402c1a:	mov    ds:0xbd6dbf27,al
  402c1f:	push   ebp
  402c20:	mov    edi,0x17bb5714
  402c25:	fucomp st(6)
  402c27:	inc    bh
  402c29:	mov    edi,ecx
  402c2b:	imul   esi,DWORD PTR [ecx-0x4bce4847],0xffffffb4
  402c32:	ds mul ebp
  402c35:	sahf   
  402c36:	add    al,0x6
  402c38:	cmp    dh,BYTE PTR [edi+0x51]
  402c3b:	popa   
  402c3c:	or     bl,BYTE PTR [eax+0x4134ccdb]
  402c42:	pop    ebp
  402c43:	jae    0x402be6
  402c45:	dec    esi
  402c46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c47:	cmc    
  402c48:	mov    eax,ds:0x8f362248
  402c4d:	add    DWORD PTR [esi+0x57bac60b],ebx
  402c53:	inc    edx
  402c54:	cld    
  402c55:	inc    edx
  402c56:	ins    BYTE PTR es:[edi],dx
  402c57:	xor    eax,0x7110d8d9
  402c5c:	stos   DWORD PTR es:[edi],eax
  402c5d:	fwait
  402c5e:	pop    es
  402c5f:	lods   eax,DWORD PTR ds:[esi]
  402c60:	add    al,0xa5
  402c62:	xchg   esp,eax
  402c63:	and    eax,esi
  402c65:	xchg   edx,eax
  402c66:	jle    0x402c05
  402c68:	cld    
  402c69:	xchg   edi,eax
  402c6a:	mov    ds:0x1fcb52a0,al
  402c6f:	mov    al,ds:0x7dbae7da
  402c74:	fcom   DWORD PTR [ebx+esi*1+0x73]
  402c79:	iret   
  402c7a:	cdq    
  402c7b:	sbb    al,0xb1
  402c7d:	pop    ds
  402c7e:	lds    ebp,FWORD PTR [esi+eax*2+0x32]
  402c82:	into   
  402c83:	push   cs
  402c84:	push   ebx
  402c85:	data16 or al,0xa3
  402c88:	add    al,0x90
  402c8a:	and    esi,DWORD PTR [ebp-0x56]
  402c8d:	leave  
  402c8e:	mov    ds:0x8a08d922,al
  402c93:	push   cs
  402c94:	sub    edi,DWORD PTR [ebx-0x74]
  402c97:	push   ss
  402c98:	test   eax,0xd74bdb75
  402c9d:	lods   al,BYTE PTR ds:[esi]
  402c9e:	pop    edi
  402c9f:	mov    DWORD PTR [eax+0x28],ebx
  402ca2:	ds (bad) 
  402ca4:	out    0x53,eax
  402ca6:	mov    dh,BYTE PTR [esi-0x1f]
  402ca9:	or     al,0x68
  402cab:	mov    BYTE PTR ds:[esi+0x738ff284],dh
  402cb2:	mov    dh,0xd7
  402cb4:	xchg   ebx,eax
  402cb5:	pop    es
  402cb6:	cmp    BYTE PTR [esi+0x964ca8f],0x84
  402cbd:	repz sbb ebp,DWORD PTR [ebp+0x1c721006]
  402cc4:	call   0xa2cc:0xf00188c6
  402ccb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ccc:	or     eax,0xd7a1b66e
  402cd1:	outs   dx,BYTE PTR ds:[esi]
  402cd2:	mov    DWORD PTR [esi],edi
  402cd4:	push   es
  402cd5:	or     DWORD PTR [ebp+edi*2-0x25],ecx
  402cd9:	in     eax,0x5b
  402cdb:	mov    al,0x57
  402cdd:	stos   DWORD PTR es:[edi],eax
  402cde:	lea    ecx,[esi]
  402ce0:	mov    edx,0xfd996d44
  402ce5:	push   ss
  402ce6:	jmp    0xd8955959
  402ceb:	and    DWORD PTR [ebp+0x6e],ebp
  402cee:	(bad)  
  402cef:	xor    BYTE PTR [edi],ch
  402cf1:	mov    ch,0xa1
  402cf3:	mov    DWORD PTR [esi+edi*4-0x35],eax
  402cf7:	int3   
  402cf8:	or     al,0xaa
  402cfa:	fsub   DWORD PTR [edi]
  402cfc:	ins    DWORD PTR es:[edi],dx
  402cfd:	sub    eax,0x3182845f
  402d02:	test   eax,0xf42c9dca
  402d07:	xchg   ebx,esp
  402d09:	icebp  
  402d0a:	test   DWORD PTR [esi],edx
  402d0c:	pandn  mm0,mm7
  402d0f:	push   ss
  402d10:	push   ebx
  402d11:	pop    ebp
  402d12:	and    DWORD PTR [ecx+0x64e7b563],ebx
  402d18:	or     al,0x84
  402d1a:	xchg   edx,eax
  402d1b:	mov    eax,0x6163cce0
  402d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d21:	lea    edx,[ecx]
  402d23:	mov    ebx,0xc3dc3a0d
  402d28:	mov    ch,0xf8
  402d2a:	stos   DWORD PTR es:[edi],eax
  402d2b:	inc    esi
  402d2c:	test   BYTE PTR [edx],al
  402d2e:	pop    ebx
  402d2f:	jne    0x402ce0
  402d31:	lock jmp 0x1d83:0x109d62cb
  402d39:	retf   
  402d3a:	inc    edx
  402d3b:	mov    BYTE PTR [edx-0x3a],al
  402d3e:	add    eax,0x2c84fec9
  402d43:	mov    ebp,DWORD PTR [ecx+ebp*4+0x49036105]
  402d4a:	das    
  402d4b:	stos   DWORD PTR es:[edi],eax
  402d4c:	sub    al,0x9f
  402d4e:	adc    BYTE PTR [edi],dh
  402d50:	nop
  402d51:	ret    
  402d52:	jns    0x402d00
  402d54:	or     ebp,0xffffffc7
  402d57:	dec    edx
  402d58:	cdq    
  402d59:	jle    0x402d95
  402d5b:	xor    cl,bh
  402d5d:	and    esi,DWORD PTR [ebx+0x7ae3c965]
  402d63:	push   ss
  402d64:	lahf   
  402d65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d66:	pop    es
  402d67:	mov    dh,0xc
  402d69:	gs sahf 
  402d6b:	out    dx,al
  402d6c:	or     al,0x89
  402d6e:	cmc    
  402d6f:	dec    eax
  402d70:	xor    cl,bh
  402d72:	aas    
  402d73:	cli    
  402d74:	aas    
  402d75:	pop    esp
  402d76:	ja     0x402daf
  402d78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d79:	xchg   DWORD PTR [ecx],eax
  402d7b:	cmp    DWORD PTR [ecx],0xe70a50c6
  402d81:	jne    0x402de7
  402d83:	sbb    eax,0xf5a019f8
  402d88:	pop    esp
  402d89:	scas   al,BYTE PTR es:[edi]
  402d8a:	ins    BYTE PTR es:[edi],dx
  402d8b:	in     al,0xb7
  402d8d:	les    esi,FWORD PTR [edi]
  402d8f:	aaa    
  402d90:	cld    
  402d91:	ins    BYTE PTR es:[edi],dx
  402d92:	imul   esp,DWORD PTR [ecx-0x5f],0xb90cc00d
  402d99:	scas   al,BYTE PTR es:[edi]
  402d9a:	sbb    DWORD PTR [esi-0x145cad85],ebp
  402da0:	jg     0x402e04
  402da2:	or     al,0x50
  402da4:	mov    edx,0x5dfd18c4
  402da9:	aaa    
  402daa:	out    dx,al
  402dab:	pop    esi
  402dac:	pop    esi
  402dad:	pop    ecx
  402dae:	mov    ds:0xf0cb5abc,al
  402db4:	aas    
  402db5:	repz (bad) 
  402db7:	jmp    0x402e38
  402db9:	xchg   ebp,eax
  402dba:	or     eax,0xb5a2d1cc
  402dbf:	(bad)  
  402dc0:	xor    bh,BYTE PTR [ebx+eax*4+0x58be491e]
  402dc7:	sub    al,0xd2
  402dc9:	in     al,dx
  402dca:	repz aas 
  402dcc:	mov    bl,0x6d
  402dce:	sbb    bl,al
  402dd0:	push   edi
  402dd1:	cmp    eax,0x17f0adf7
  402dd6:	in     eax,dx
  402dd7:	or     al,0x3a
  402dd9:	push   eax
  402dda:	inc    edi
  402ddb:	add    ch,BYTE PTR [eax-0x61]
  402dde:	inc    ebx
  402ddf:	popa   
  402de0:	ins    DWORD PTR es:[edi],dx
  402de1:	add    BYTE PTR [edi+0x10626f7b],ch
  402de7:	adc    esi,DWORD PTR ds:0xcf744a68
  402ded:	add    DWORD PTR [ebx-0x6f81cf94],esp
  402df3:	ror    ah,1
  402df5:	addr16 shr esi,0x42
  402df9:	sub    eax,0xcc8083f7
  402dfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402dff:	xor    DWORD PTR [ebp+eiz*1-0x15],0xd7b3b543
  402e07:	adc    dl,BYTE PTR [edx+0xc99328f]
  402e0d:	cdq    
  402e0e:	pop    ds
  402e0f:	sbb    edx,edx
  402e11:	push   esi
  402e12:	(bad)  
  402e13:	imul   esi,DWORD PTR gs:[ecx]
  402e17:	aam    0xb9
  402e19:	inc    ebp
  402e1a:	(bad)  
  402e1b:	jecxz  0x402e51
  402e1d:	push   edi
  402e1e:	jno    0x402da2
  402e20:	xor    ecx,DWORD PTR [ebx+esi*2-0x2d]
  402e24:	cli    
  402e25:	std    
  402e26:	mov    esi,0x5f3fd046
  402e2b:	pop    ebx
  402e2c:	xchg   ebp,eax
  402e2d:	fs daa 
  402e2f:	pop    ebp
  402e30:	jbe    0x402eae
  402e32:	mov    fs,WORD PTR [ebx]
  402e34:	mov    bh,0xac
  402e36:	sbb    BYTE PTR [ebx],al
  402e38:	inc    esp
  402e39:	pop    esi
  402e3a:	pop    ss
  402e3b:	mov    ecx,0x41e7860b
  402e40:	rol    DWORD PTR [edi],1
  402e42:	popf   
  402e43:	clc    
  402e44:	hlt    
  402e45:	cmp    al,0x35
  402e47:	(bad)  
  402e48:	push   esi
  402e49:	add    eax,0x4bca9971
  402e4e:	pop    edi
  402e4f:	jnp    0x402e78
  402e51:	test   DWORD PTR [edi+0x66],esi
  402e54:	mov    eax,DWORD PTR [ebx+0x38]
  402e57:	push   0xb4410e8
  402e5c:	dec    esp
  402e5d:	test   ah,dl
  402e5f:	ss xor eax,0x832d79df
  402e65:	repz dec edi
  402e67:	xchg   esp,eax
  402e68:	sub    BYTE PTR [ecx-0x5d],dl
  402e6b:	and    DWORD PTR [ebx],esi
  402e6d:	cmp    eax,0x20c671ea
  402e72:	xor    DWORD PTR [ebx+edx*2-0x4ddc0a66],ecx
  402e79:	mov    bl,0xc9
  402e7b:	jge    0x402e75
  402e7d:	or     al,0xb8
  402e7f:	dec    eax
  402e80:	cmp    al,0x5b
  402e82:	je     0x402e74
  402e84:	push   edi
  402e86:	push   cs
  402e87:	aas    
  402e88:	out    0x4,eax
  402e8a:	(bad)  
  402e8b:	xor    al,0x63
  402e8d:	aaa    
  402e8e:	mov    ecx,ebp
  402e90:	sub    al,0x61
  402e92:	jns    0x402ef7
  402e94:	test   DWORD PTR [ecx],ebp
  402e96:	nop
  402e97:	xchg   ebx,eax
  402e98:	mov    ecx,0x72b1dc23
  402e9d:	in     eax,dx
  402e9e:	mov    edx,esi
  402ea0:	push   0x3bbdafe4
  402ea5:	inc    esi
  402ea6:	fstp   QWORD PTR [ecx]
  402ea8:	push   esp
  402ea9:	fchs   
  402eab:	mov    BYTE PTR [eax],al
  402ead:	mov    eax,ds:0x731635ff
  402eb2:	cli    
  402eb3:	and    ah,BYTE PTR [ebx-0x4e]
  402eb6:	sbb    ebp,DWORD PTR [ecx-0x3]
  402eb9:	dec    esi
  402eba:	and    cl,BYTE PTR [ecx+0x27696799]
  402ec0:	aas    
  402ec1:	cdq    
  402ec2:	stos   DWORD PTR es:[edi],eax
  402ec3:	xor    DWORD PTR [edx+eiz*8-0x4c165f13],ebp
  402eca:	cmc    
  402ecb:	jmp    0x71a9:0x761ca515
  402ed2:	xor    eax,0x4da84dd0
  402ed7:	mov    al,ds:0x22ff076d
  402edc:	xor    eax,DWORD PTR [ebx+0x770d94ef]
  402ee2:	sbb    DWORD PTR ds:0x9adea228,edx
  402ee8:	and    bh,dl
  402eea:	push   esp
  402eeb:	es jg  0x402e9a
  402eee:	test   BYTE PTR [esi+0x1],ch
  402ef1:	es cmp ch,al
  402ef4:	add    bh,dh
  402ef6:	enter  0x5425,0xeb
  402efa:	dec    ebp
  402efb:	adc    BYTE PTR [edi-0x21],cl
  402efe:	xor    al,0x73
  402f00:	add    edi,DWORD PTR [esi-0x58]
  402f03:	sbb    al,bl
  402f05:	mov    bh,0xd5
  402f07:	std    
  402f08:	sbb    eax,0xbfa10144
  402f0d:	cdq    
  402f0e:	mov    edx,0xe943ec35
  402f13:	or     DWORD PTR [eax+0x70b46819],esi
  402f19:	(bad)  
  402f1a:	sbb    dl,BYTE PTR [edx-0x39380541]
  402f20:	sub    eax,0x40532365
  402f25:	in     eax,dx
  402f26:	jae    0x402f42
  402f28:	adc    al,0xf0
  402f2a:	or     ebx,esi
  402f2c:	call   0xb81944ae
  402f31:	lods   al,BYTE PTR ds:[esi]
  402f32:	out    dx,eax
  402f33:	enter  0x8f1a,0xd
  402f37:	cmc    
  402f38:	test   eax,0x9bd7203e
  402f3d:	fistp  QWORD PTR [ebx]
  402f3f:	out    dx,eax
  402f40:	aad    0x1d
  402f42:	jns    0x402edd
  402f44:	loopne 0x402f79
  402f46:	mov    dh,0x5d
  402f48:	into   
  402f49:	pop    es
  402f4a:	jg     0x402ecc
  402f4c:	(bad)  
  402f4d:	nop
  402f4e:	ror    eax,0xfc
  402f51:	in     al,dx
  402f52:	frstor [esi-0xf18a2f4]
  402f58:	outs   dx,DWORD PTR ds:[esi]
  402f59:	sar    BYTE PTR ds:0x76d8d97f,1
  402f5f:	dec    ebp
  402f60:	scas   eax,DWORD PTR es:[edi]
  402f61:	mov    WORD PTR [ebx+0x452ce1b4],es
  402f67:	je     0x402f4b
  402f69:	out    dx,al
  402f6a:	inc    ecx
  402f6b:	sbb    ebx,DWORD PTR [edx]
  402f6d:	jp     0x402f15
  402f6f:	pop    esi
  402f70:	xor    eax,0x53606ec0
  402f75:	sbb    dh,BYTE PTR [ecx-0x72e62982]
  402f7b:	and    esp,DWORD PTR [eax-0x4d]
  402f7e:	outs   dx,BYTE PTR ds:[esi]
  402f7f:	retf   
  402f80:	aas    
  402f81:	sub    al,0xbe
  402f83:	adc    al,0xed
  402f85:	jl     0x402f42
  402f87:	es loopne 0x402f55
  402f8a:	aad    0xcc
  402f8c:	sub    eax,DWORD PTR [edi+0x23]
  402f8f:	cmc    
  402f90:	mov    edi,0x3cd22dc1
  402f95:	(bad)  
  402f96:	test   BYTE PTR ds:0x11b8eb8c,0x99
  402f9d:	enter  0x83ec,0x39
  402fa1:	xchg   ebp,eax
  402fa2:	pushf  
  402fa3:	sub    eax,0xb2d56326
  402fa8:	data16 jno 0x402f68
  402fab:	dec    eax
  402fac:	popf   
  402fad:	inc    edx
  402fae:	test   DWORD PTR [esi+ecx*4+0x4c237ceb],edx
  402fb5:	pop    eax
  402fb6:	sub    bh,dl
  402fb8:	xor    ebp,DWORD PTR [edx+0x3357c7af]
  402fbe:	out    0x55,al
  402fc0:	pop    esi
  402fc1:	mov    esp,DWORD PTR [edx]
  402fc3:	adc    eax,DWORD PTR [edi+0x5d6ef076]
  402fc9:	and    dl,BYTE PTR ds:0x393a1b40
  402fcf:	xchg   DWORD PTR [ebp-0x6cf77613],ebp
  402fd5:	leave  
  402fd6:	dec    eax
  402fd7:	(bad)  
  402fd9:	add    al,0xe4
  402fdb:	cmp    dl,al
  402fdd:	retf   
  402fde:	or     ah,BYTE PTR [edi+0x7c3412c]
  402fe4:	test   al,0xaf
  402fe6:	add    BYTE PTR [edx+0x52],al
  402fe9:	mov    cl,0xd0
  402feb:	aaa    
  402fec:	in     eax,dx
  402fed:	out    dx,eax
  402fee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fef:	xchg   esp,eax
  402ff0:	push   0xf22a8dff
  402ff5:	push   esi
  402ff6:	xchg   DWORD PTR ds:0xdde0c1e4,ebx
  402ffc:	(bad)  
  402ffd:	cld    
  402ffe:	or     DWORD PTR [esi+0x1f],eax
  403001:	sub    al,0x81
  403003:	rcl    dh,0x59
  403006:	fist   DWORD PTR [edx-0x5a]
  403009:	daa    
  40300a:	dec    edx
  40300b:	xchg   ebx,eax
  40300c:	cwde   
  40300d:	bound  esi,QWORD PTR [edi]
  40300f:	pop    es
  403010:	sbb    BYTE PTR [edi-0x31ab69c8],0xa6
  403017:	enter  0x9145,0x8c
  40301b:	push   edi
  40301c:	adc    bl,BYTE PTR [ecx]
  40301e:	inc    ecx
  40301f:	mov    eax,ds:0x640fcda5
  403024:	inc    ecx
  403025:	(bad)  
  403026:	sbb    DWORD PTR [esi],esp
  403028:	sub    BYTE PTR [ebx-0x2],bh
  40302b:	jb     0x403090
  40302d:	je     0x402fd6
  40302f:	mov    ebx,0x25c78aa7
  403034:	fstp   TBYTE PTR [eax]
  403036:	mov    al,ds:0x766c7017
  40303b:	add    dh,BYTE PTR [edi-0xb6aed60]
  403041:	xor    DWORD PTR [edi],ebx
  403043:	out    dx,eax
  403044:	cdq    
  403045:	ins    BYTE PTR es:[edi],dx
  403046:	out    dx,eax
  403047:	scas   eax,DWORD PTR es:[edi]
  403048:	in     eax,0x6a
  40304a:	jne    0x403047
  40304c:	mov    ecx,eax
  40304e:	mov    ss,esp
  403050:	inc    edi
  403051:	inc    eax
  403052:	jecxz  0x403055
  403054:	pop    edx
  403055:	pop    ss
  403056:	stc    
  403057:	adc    esp,ebp
  403059:	pop    ebx
  40305a:	(bad)  
  40305b:	mov    bl,0xdb
  40305d:	xlat   BYTE PTR ds:[ebx]
  40305e:	std    
  40305f:	sbb    al,0xa0
  403061:	js     0x4030c4
  403063:	imul   edx,DWORD PTR [ebx],0x1e3000f6
  403069:	shl    BYTE PTR [edx],1
  40306b:	stc    
  40306c:	cmp    ebp,DWORD PTR [edx-0x9]
  40306f:	data16 stc 
  403071:	and    esp,ebx
  403073:	or     DWORD PTR [esi+edi*1],esi
  403076:	lods   eax,DWORD PTR ds:[esi]
  403077:	inc    esi
  403078:	pusha  
  403079:	inc    edx
  40307a:	icebp  
  40307b:	iret   
  40307c:	xor    eax,0xcef0ca8e
  403081:	jne    0x403023
  403083:	sbb    DWORD PTR [edi+0x70e1b9cf],ebp
  403089:	or     DWORD PTR [eax+0x1612c359],esi
  40308f:	dec    eax
  403090:	std    
  403091:	cmp    al,0x39
  403093:	data16 test BYTE PTR [esi+0x8f82a17],ah
  40309a:	cmp    esi,ebp
  40309c:	js     0x403084
  40309e:	and    al,BYTE PTR ds:[ebp-0x4e12cebe]
  4030a5:	xor    ch,dh
  4030a7:	(bad)  
  4030a8:	(bad)  
  4030a9:	or     esp,DWORD PTR [ecx]
  4030ab:	fdivr  QWORD PTR [ecx+0x2b9b0122]
  4030b1:	or     al,0x38
  4030b3:	mov    esp,0xe5ddb54d
  4030b8:	mov    ebp,0x52c4bc54
  4030bd:	mov    edi,0xff98678a
  4030c2:	push   ds
  4030c3:	mov    cl,0x3a
  4030c5:	ret    
  4030c6:	sbb    ecx,DWORD PTR [eax-0x2e]
  4030c9:	inc    edi
  4030ca:	add    BYTE PTR [edi],bl
  4030cc:	pushf  
  4030cd:	popf   
  4030ce:	jns    0x403087
  4030d0:	fistp  DWORD PTR [ebx]
  4030d2:	cmp    BYTE PTR [edx-0x10],ch
  4030d5:	dec    esp
  4030d6:	sar    DWORD PTR [ebx],1
  4030d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030d9:	sbb    ecx,DWORD PTR [ecx+0x246e50bf]
  4030df:	imul   ebx,DWORD PTR [edx+0x165253cc],0x34
  4030e6:	daa    
  4030e7:	jle    0x4030c6
  4030e9:	cmp    eax,0x13684e73
  4030ee:	jne    0x40312d
  4030f0:	mov    esi,0xce191ee
  4030f5:	xor    edx,ebp
  4030f7:	sbb    BYTE PTR [ecx],dh
  4030f9:	fwait
  4030fa:	add    al,0xf2
  4030fc:	adc    BYTE PTR [ebx],dl
  4030fe:	mov    edi,0x11b7b9ff
  403103:	push   eax
  403104:	pop    ss
  403105:	fcom   DWORD PTR [edx-0x43]
  403108:	in     al,dx
  403109:	retf   
  40310a:	inc    edx
  40310b:	rcr    BYTE PTR [edx],cl
  40310d:	xor    al,0x6
  40310f:	xchg   DWORD PTR [edi-0x2],ecx
  403112:	in     al,dx
  403113:	dec    esp
  403114:	jmp    0x403169
  403116:	sti    
  403117:	lods   eax,DWORD PTR ds:[esi]
  403118:	push   esi
  403119:	dec    edx
  40311a:	jge    0x40310d
  40311c:	ret    0xf484
  40311f:	cmp    eax,0x69dc0bd
  403124:	mov    esi,0xb0d820c3
  403129:	jnp    0x403102
  40312b:	into   
  40312c:	xor    al,0x8
  40312e:	addr16 and eax,0x5c072556
  403134:	je     0x4030df
  403136:	fld    TBYTE PTR fs:[edx+eax*8+0x4d]
  40313b:	and    al,ch
  40313d:	mov    ds:0xd72f5385,eax
  403142:	push   cs
  403143:	sub    edx,DWORD PTR [ebx]
  403145:	loopne 0x40310f
  403147:	xchg   bl,dl
  403149:	dec    ebp
  40314a:	pop    ds
  40314b:	iret   
  40314c:	push   es
  40314d:	push   esp
  40314e:	pop    gs
  403150:	and    DWORD PTR [ebp+0x44],esp
  403153:	pop    ss
  403154:	imul   eax,edi,0x96c7e332
  40315a:	call   0x287a:0x46ea3b9d
  403161:	sub    bh,BYTE PTR [esi]
  403163:	dec    eax
  403164:	cdq    
  403165:	sub    ch,BYTE PTR [edi-0x29]
  403168:	lahf   
  403169:	pop    ecx
  40316a:	ins    DWORD PTR es:[edi],dx
  40316b:	aad    0x4d
  40316d:	arpl   WORD PTR [edi],bp
  40316f:	nop
  403170:	cli    
  403171:	stos   BYTE PTR es:[edi],al
  403172:	dec    esp
  403173:	loop   0x4031c2
  403175:	dec    edx
  403176:	sub    al,0xa8
  403178:	push   eax
  403179:	push   0xd072b90c
  40317e:	std    
  40317f:	clc    
  403180:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403181:	aad    0x19
  403183:	pop    esp
  403184:	mov    eax,0x81b962c8
  403189:	icebp  
  40318a:	pop    es
  40318b:	lods   eax,DWORD PTR ds:[esi]
  40318c:	jnp    0x403208
  40318e:	mov    ds:0x2f1fdd36,al
  403193:	push   eax
  403194:	ja     0x4031b0
  403196:	outs   dx,BYTE PTR ds:[esi]
  403197:	mov    al,0xe0
  403199:	adc    edi,DWORD PTR [ebx-0x1ab8dafe]
  40319f:	mov    bh,0x3b
  4031a1:	xchg   edi,eax
  4031a2:	inc    edi
  4031a3:	pop    es
  4031a4:	bound  ebx,QWORD PTR [eax]
  4031a6:	outs   dx,BYTE PTR ds:[esi]
  4031a7:	mov    al,0x4d
  4031a9:	pop    esi
  4031aa:	out    dx,eax
  4031ab:	mov    esp,0x2431ccae
  4031b0:	add    DWORD PTR [esi],0x1c
  4031b3:	out    0xba,eax
  4031b5:	into   
  4031b6:	out    0xd7,eax
  4031b8:	mov    ebx,0x514ab982
  4031bd:	inc    ebx
  4031be:	inc    edi
  4031bf:	fnstsw WORD PTR [esi+0x46]
  4031c2:	dec    edi
  4031c3:	pop    ebp
  4031c4:	and    eax,0xbd5e3fc0
  4031c9:	cli    
  4031ca:	sub    eax,0x8124130f
  4031cf:	arpl   WORD PTR [esi+0x2a90dcc2],si
  4031d5:	mov    edi,DWORD PTR [ebx]
  4031d7:	lahf   
  4031d8:	leave  
  4031d9:	sub    al,0xa8
  4031db:	jnp    0x4031bc
  4031dd:	jl     0x4031ab
  4031df:	pushf  
  4031e0:	stos   DWORD PTR es:[edi],eax
  4031e1:	pop    edx
  4031e2:	out    dx,al
  4031e3:	ins    BYTE PTR es:[edi],dx
  4031e4:	lods   al,BYTE PTR ds:[esi]
  4031e5:	cmp    dl,bl
  4031e7:	sbb    eax,0xfd97a9ac
  4031ec:	cmp    BYTE PTR [esp+ecx*1-0x63f8d436],ah
  4031f3:	jp     0x403262
  4031f5:	jge    0x403211
  4031f7:	sub    eax,0x1ad0d766
  4031fc:	fwait
  4031fd:	call   0x6fc8:0x40aedebd
  403204:	inc    esi
  403205:	stc    
  403206:	mov    ds:0x2911e2de,al
  40320b:	test   dl,ah
  40320d:	and    DWORD PTR [eax],edx
  40320f:	scas   eax,DWORD PTR es:[edi]
  403210:	test   al,0xe5
  403212:	and    ah,bl
  403214:	lds    esi,FWORD PTR [edi]
  403216:	imul   ecx,esi,0xddd70788
  40321c:	test   cl,ch
  40321e:	pop    ds
  40321f:	loopne 0x403278
  403221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403222:	sbb    DWORD PTR [esi+ecx*4],ecx
  403225:	or     BYTE PTR [eax],ch
  403227:	inc    ebx
  403228:	and    cl,BYTE PTR ds:0x8d59a858
  40322e:	cld    
  40322f:	jnp    0x403274
  403231:	nop
  403232:	dec    ebx
  403233:	mov    esp,0x92fcef79
  403238:	fimul  DWORD PTR [edx-0x3c]
  40323b:	xchg   esp,eax
  40323c:	test   eax,0x3cbe67fe
  403241:	in     eax,dx
  403242:	mov    edx,0x4efe180c
  403247:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403248:	cmp    cl,dh
  40324a:	pop    esp
  40324b:	(bad)
  40324e:	fild   DWORD PTR [ebp-0x7e]
  403251:	call   0x635c:0xaa412c9e
  403258:	ret    0x502f
  40325b:	es fcomp st(0)
  40325e:	and    DWORD PTR [ecx-0x245199c8],ecx
  403264:	push   0xa2f7008b
  403269:	sub    ch,bh
  40326b:	int3   
  40326c:	mov    DWORD PTR [ecx-0x48a7cb5f],esp
  403272:	push   eax
  403273:	push   edi
  403274:	mov    dh,0x93
  403276:	mov    ebx,0x7f0d95ed
  40327b:	and    DWORD PTR [ecx+0x130b0b92],ecx
  403281:	clc    
  403282:	xor    dh,0x17
  403285:	idiv   esi
  403287:	cmp    cx,WORD PTR [ecx+edx*1+0x43]
  40328c:	push   esp
  40328d:	cmp    ah,BYTE PTR [edi-0x3d]
  403290:	sbb    dl,BYTE PTR [ebx+eiz*1]
  403293:	xchg   BYTE PTR [ebp-0x36b94e8a],al
  403299:	(bad)  
  40329a:	mov    esp,0xefb7b00e
  40329f:	ror    BYTE PTR [ecx+ecx*1],cl
  4032a2:	addr16 retf 
  4032a4:	xchg   edx,eax
  4032a5:	shl    BYTE PTR [ecx+0xb],1
  4032a8:	sub    DWORD PTR ds:0x4a5d0e4d,esp
  4032ae:	add    DWORD PTR [esi-0x70],edx
  4032b1:	jnp    0x4032cb
  4032b3:	xchg   edi,eax
  4032b4:	dec    edi
  4032b5:	jo     0x403246
  4032b7:	and    DWORD PTR [edx+0x37cd0be0],edx
  4032bd:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4032bf:	fdivr  QWORD PTR [ecx+0x753e7e75]
  4032c5:	dec    edi
  4032c6:	test   eax,0x9b3ed333
  4032cb:	xchg   esi,eax
  4032cc:	pop    es
  4032cd:	and    bl,bl
  4032cf:	mov    WORD PTR [ebp+edx*2+0x968a165],es
  4032d6:	fsubr  st,st(0)
  4032d8:	cmp    DWORD PTR [edi-0x3783be89],ecx
  4032de:	inc    eax
  4032df:	in     al,0xaf
  4032e1:	lods   al,BYTE PTR ds:[esi]
  4032e2:	mov    DWORD PTR [ecx-0x6d233757],ecx
  4032e8:	inc    ebx
  4032e9:	sbb    DWORD PTR [esi-0x13],0xed47ebfc
  4032f0:	es mov bl,0x62
  4032f3:	jecxz  0x403333
  4032f5:	cdq    
  4032f6:	in     eax,0x57
  4032f8:	popf   
  4032f9:	(bad)  [eax]
  4032fb:	inc    ebp
  4032fc:	pop    ebx
  4032fd:	iret   
  4032fe:	out    0x2b,eax
  403300:	xor    al,0xe8
  403302:	addr16 mov edi,0xad0523a7
  403308:	das    
  403309:	jo     0x4032f2
  40330b:	mov    edi,0x53321be5
  403310:	jne    0x403347
  403312:	cmc    
  403313:	(bad)  
  403314:	int    0x53
  403316:	not    BYTE PTR [eax-0x33d13236]
  40331c:	or     ecx,ecx
  40331e:	rcl    BYTE PTR [edi-0x4049c60f],cl
  403324:	xchg   ebx,eax
  403325:	mov    al,dh
  403327:	aam    0xbd
  403329:	xor    al,0xf3
  40332b:	push   ebp
  40332c:	cli    
  40332d:	mov    eax,0xa664cefd
  403332:	dec    edx
  403333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403334:	pop    eax
  403335:	pop    ebp
  403336:	pusha  
  403337:	out    dx,al
  403338:	sar    BYTE PTR [ebp-0x2c],0xba
  40333c:	or     edx,DWORD PTR [ebx+0x2a27cec0]
  403342:	sub    bh,dh
  403344:	repz push esp
  403346:	int    0xf2
  403348:	sub    eax,0xe1e396c6
  40334d:	xchg   edi,eax
  40334e:	xchg   ecx,eax
  40334f:	lock mov edx,ss
  403352:	imul   esi,DWORD PTR [esi],0x5c
  403355:	and    eax,0x144ace8c
  40335a:	daa    
  40335b:	jge    0x4032e3
  40335d:	nop
  40335e:	mov    al,0x6a
  403360:	les    eax,FWORD PTR [edx]
  403362:	mov    ch,BYTE PTR [esp+edi*1-0x6f]
  403366:	iret   
  403367:	fnstsw WORD PTR [esi]
  403369:	mov    edi,DWORD PTR [eax]
  40336b:	imul   edi,DWORD PTR [edx],0xffffffeb
  40336e:	inc    ecx
  40336f:	fstp   st(1)
  403371:	fisub  DWORD PTR [esi]
  403373:	and    eax,0xedf84898
  403378:	pmulhuw mm2,QWORD PTR [ebx+ebx*8]
  40337c:	out    dx,al
  40337d:	std    
  40337e:	fimul  WORD PTR [edx+edi*1]
  403381:	stc    
  403382:	hlt    
  403383:	add    DWORD PTR [edi+0x59c01f6f],0x14
  40338a:	or     esi,DWORD PTR [ecx]
  40338c:	dec    edx
  40338d:	push   edi
  40338e:	jae    0x40336c
  403390:	in     al,dx
  403391:	leave  
  403392:	pop    ecx
  403393:	lea    ebx,[eax+ecx*1-0x57]
  403397:	pop    ecx
  403398:	push   es
  403399:	shl    BYTE PTR [edx-0x62],0x33
  40339d:	adc    ah,BYTE PTR [edx+0x344b2c24]
  4033a3:	inc    esp
  4033a4:	inc    edi
  4033a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033a6:	xor    al,0xb6
  4033a8:	mov    esi,0x70d64a77
  4033ad:	addr16 and al,0x35
  4033b0:	jmp    0x4485d792
  4033b5:	jg     0x4033d1
  4033b7:	(bad)  
  4033b8:	lock push ecx
  4033ba:	mov    al,ds:0xfb56676
  4033bf:	fdiv   DWORD PTR [edi]
  4033c1:	jae    0x4033bb
  4033c3:	shl    DWORD PTR [ecx-0x58e56c4a],0xbf
  4033ca:	dec    ebx
  4033cb:	mov    WORD PTR [ebx+0x8],gs
  4033ce:	hlt    
  4033cf:	xor    eax,0x946b6c35
  4033d4:	arpl   WORD PTR [eax-0x56],di
  4033d7:	push   cs
  4033d8:	adc    BYTE PTR ds:0x35363d10,bl
  4033de:	js     0x40345b
  4033e0:	mov    al,ds:0xe8c81068
  4033e5:	cwde   
  4033e6:	retf   0xad40
  4033e9:	neg    DWORD PTR [eax+esi*8+0x37]
  4033ed:	scas   al,BYTE PTR es:[edi]
  4033ee:	xor    eax,0x825f224b
  4033f3:	loope  0x403383
  4033f5:	sub    bl,BYTE PTR [esi-0x2ba3e2f]
  4033fb:	data16 sbb cl,al
  4033fe:	dec    ecx
  4033ff:	mov    ch,0x1d
  403401:	pop    ss
  403402:	adc    ecx,DWORD PTR [ebp-0x45]
  403405:	shr    cl,cl
  403407:	lahf   
  403408:	pop    edx
  403409:	popa   
  40340a:	dec    esp
  40340b:	loop   0x4033f7
  40340d:	jo     0x4033ea
  40340f:	fwait
  403410:	loope  0x4033b5
  403412:	das    
  403413:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403414:	push   0x70
  403416:	add    ebp,edi
  403418:	daa    
  403419:	pop    ecx
  40341a:	cmp    dl,BYTE PTR [eax+0x3b]
  40341d:	popf   
  40341e:	add    ch,dh
  403420:	pop    ebx
  403421:	shr    ebp,cl
  403423:	lock mov ds:0x3b53a777,al
  403429:	sub    esi,ecx
  40342b:	loope  0x403484
  40342d:	mov    ds:0xf335a9cf,al
  403432:	sub    eax,0xe1b41562
  403437:	sar    DWORD PTR [edi-0x3f],1
  40343a:	aad    0x1e
  40343c:	sbb    bh,BYTE PTR [ebx-0x68133447]
  403442:	in     al,0x4c
  403444:	add    ebx,DWORD PTR [ebp-0x599cdce3]
  40344a:	clc    
  40344b:	mov    ch,0xad
  40344d:	jo     0x4034ad
  40344f:	(bad)  
  403450:	xchg   esp,eax
  403451:	jo     0x4034cc
  403453:	clc    
  403454:	jns    0x403452
  403456:	not    BYTE PTR [ecx-0x11375f5b]
  40345c:	mov    ds:0xd6799aea,al
  403461:	retf   
  403462:	lods   al,BYTE PTR ds:[esi]
  403463:	sbb    DWORD PTR [edx],esi
  403465:	mov    ecx,0x6dc965e5
  40346a:	mov    ch,BYTE PTR [edi-0x63d943f]
  403470:	xchg   esp,eax
  403471:	(bad)  
  403472:	ficom  DWORD PTR [ecx-0x7]
  403475:	xchg   esp,eax
  403476:	push   esp
  403477:	clc    
  403478:	mov    ah,BYTE PTR [eax-0x6b]
  40347b:	xlat   BYTE PTR es:[ebx]
  40347d:	jmp    0xeb37:0xb9b1c6a4
  403484:	divps  xmm0,XMMWORD PTR [edi]
  403487:	mov    dh,0x6e
  403489:	xor    dh,bh
  40348b:	dec    edi
  40348c:	and    ecx,eax
  40348e:	push   ebx
  40348f:	xchg   DWORD PTR [ecx+eax*8],esi
  403492:	cmp    eax,0x8db2f42a
  403497:	push   es
  403498:	ret    
  403499:	push   ds
  40349a:	jo     0x4034e3
  40349c:	and    DWORD PTR [edx],ebp
  40349e:	int    0xc7
  4034a0:	dec    esp
  4034a1:	jecxz  0x4034a4
  4034a3:	in     al,dx
  4034a4:	xor    eax,0xd74a2076
  4034a9:	push   ecx
  4034aa:	stos   BYTE PTR es:[edi],al
  4034ab:	loope  0x403484
  4034ad:	xchg   ecx,eax
  4034ae:	pop    edi
  4034af:	and    ecx,DWORD PTR [edi+0x3f0058b5]
  4034b5:	add    eax,0xe2d88a5e
  4034ba:	psubq  mm4,mm3
  4034bd:	inc    ebx
  4034be:	aaa    
  4034bf:	xor    al,0x71
  4034c1:	xor    cl,BYTE PTR [eax-0x215c2b4a]
  4034c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034c8:	ins    BYTE PTR es:[edi],dx
  4034c9:	cmp    al,0x47
  4034cb:	and    al,0xa4
  4034cd:	inc    esp
  4034ce:	das    
  4034cf:	jno    0x403503
  4034d1:	sub    al,dh
  4034d3:	mov    eax,ds:0xcac14ae0
  4034d8:	lock and ah,BYTE PTR [eax+edx*4]
  4034dc:	cld    
  4034dd:	inc    ebp
  4034de:	xchg   esp,eax
  4034df:	jo     0x40347a
  4034e1:	push   0xa
  4034e3:	cld    
  4034e4:	adc    ebx,ecx
  4034e6:	add    bh,cl
  4034e8:	rcl    ebp,cl
  4034ea:	pop    ebx
  4034eb:	sub    cl,BYTE PTR [edx+edx*8+0x2fbd2e4a]
  4034f2:	pushf  
  4034f3:	dec    ebp
  4034f4:	push   ebx
  4034f5:	sbb    eax,0x42e4d10a
  4034fa:	jns    0x4034a6
  4034fc:	sub    BYTE PTR [esi+0x2ca2218],dh
  403502:	jmp    0x9066:0x9715a9f7
  403509:	mov    dh,BYTE PTR [edx+0x37ed2c56]
  40350f:	cmc    
  403510:	push   ss
  403511:	cmp    edi,ebx
  403513:	neg    BYTE PTR [ecx]
  403515:	pop    ebp
  403516:	sub    DWORD PTR [edx],0xb2e6ace
  40351c:	and    ebp,edx
  40351e:	shr    BYTE PTR [esi-0x54],0xc2
  403522:	jl     0x4034a4
  403524:	mov    ecx,0xc4d33a69
  403529:	adc    eax,0xffffffed
  40352c:	sbb    BYTE PTR [eax+0x3dab9952],ah
  403532:	or     ebp,DWORD PTR [ecx-0x11ce98ba]
  403538:	sbb    DWORD PTR [eax],esi
  40353a:	imul   esp
  40353c:	xchg   BYTE PTR [edi],ah
  40353e:	mov    edi,0xd82d5046
  403543:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403545:	or     DWORD PTR [ebp-0x7f4a78a4],edx
  40354b:	test   al,0x97
  40354d:	into   
  40354e:	push   cs
  40354f:	mov    dl,0xe6
  403551:	cmp    cl,BYTE PTR [eax+0x49]
  403554:	dec    edi
  403555:	jnp    0x40359c
  403557:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403558:	push   0x50
  40355a:	fiadd  WORD PTR [edi]
  40355c:	movntq QWORD PTR [edi],mm0
  40355f:	sbb    dl,BYTE PTR [esi+eiz*2]
  403562:	jmp    0xb271:0x5a305db
  403569:	into   
  40356a:	cwde   
  40356b:	mov    esi,DWORD PTR [esi]
  40356d:	jo     0x4035ba
  40356f:	out    0xdc,al
  403571:	mov    dl,0x2e
  403573:	call   0x9dd4:0xa8e10743
  40357a:	cmp    al,dl
  40357c:	inc    esi
  40357d:	dec    ebx
  40357e:	ror    BYTE PTR [ecx+0x24],cl
  403581:	call   0x91f1:0x5e02c597
  403588:	fidiv  DWORD PTR [edx-0x49]
  40358b:	mov    es,WORD PTR [eax-0x4d]
  40358e:	hlt    
  40358f:	jae    0x4035a6
  403591:	xchg   edx,eax
  403592:	push   ecx
  403593:	icebp  
  403594:	inc    esp
  403595:	not    cl
  403597:	dec    al
  403599:	imul   eax,DWORD PTR [ecx-0x27],0xfffffff7
  40359d:	stc    
  40359e:	lods   al,BYTE PTR ds:[esi]
  40359f:	jmp    0x403540
  4035a1:	fisub  WORD PTR [eax]
  4035a3:	dec    edx
  4035a4:	popf   
  4035a5:	push   ebx
  4035a6:	or     eax,0xf5b94962
  4035ab:	jmp    0x40362c
  4035ad:	mov    ebp,0x276c2606
  4035b2:	dec    ebp
  4035b3:	scas   eax,DWORD PTR es:[edi]
  4035b4:	out    0x6e,eax
  4035b6:	in     al,dx
  4035b7:	sti    
  4035b8:	out    dx,eax
  4035b9:	mov    ds:0x98bd8ab1,al
  4035be:	dec    edi
  4035bf:	enter  0x9ec,0xf5
  4035c3:	nop
  4035c4:	fild   DWORD PTR [edi+0x3aa8550f]
  4035ca:	jbe    0x4035ae
  4035cc:	ror    bl,cl
  4035ce:	(bad)  
  4035cf:	xor    DWORD PTR [edi],edi
  4035d1:	mov    edi,0x8c66bf6c
  4035d6:	push   esp
  4035d7:	adc    al,0x1d
  4035d9:	mov    ch,0x82
  4035db:	xchg   edx,eax
  4035dc:	cmp    ecx,DWORD PTR [eax-0x27]
  4035df:	pop    eax
  4035e0:	adc    al,0xcc
  4035e2:	out    0x58,al
  4035e4:	(bad)  
  4035e5:	dec    ebx
  4035e6:	data16 jecxz 0x4035fb
  4035e9:	mov    esp,DWORD PTR [esi+0x1c6f74ba]
  4035ef:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4035f1:	rcr    DWORD PTR [edx+eax*2],1
  4035f4:	ret    0x2053
  4035f7:	loope  0x403606
  4035f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035fa:	loop   0x4035ad
  4035fc:	gs sub al,0xa2
  4035ff:	fistp  DWORD PTR [eax-0x3]
  403602:	in     eax,dx
  403603:	xor    al,0x32
  403605:	push   ds
  403606:	xor    BYTE PTR [eax],0xb7
  403609:	jns    0x4035df
  40360b:	jbe    0x403605
  40360d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40360e:	inc    esp
  40360f:	dec    ebp
  403610:	psubw  mm0,QWORD PTR [ebp+0x35fc772f]
  403617:	fstp   DWORD PTR [esp+ebx*4]
  40361a:	test   BYTE PTR [edx-0x57426a4e],dh
  403620:	pop    edx
  403621:	(bad)  [esi]
  403623:	(bad)  
  403624:	fmul   st(4),st
  403626:	aam    0x28
  403628:	test   al,0x60
  40362a:	dec    eax
  40362b:	push   eax
  40362c:	int3   
  40362d:	cdq    
  40362e:	sub    BYTE PTR [ecx+0x779bef14],ch
  403634:	aad    0xb4
  403636:	jmp    0xa7d8:0xa9738cdd
  40363d:	ins    BYTE PTR es:[edi],dx
  40363e:	pop    edx
  40363f:	push   0x92fbcee1
  403644:	sbb    al,0x3e
  403646:	lahf   
  403647:	jns    0x4036c3
  403649:	(bad)  
  40364a:	repz jns 0x403694
  40364d:	test   al,0xa6
  40364f:	in     eax,0x70
  403651:	dec    ebp
  403652:	in     eax,dx
  403653:	xor    al,0xd2
  403655:	ror    DWORD PTR [ebp+0x5da7b977],0x76
  40365c:	dec    esp
  40365d:	popa   
  40365e:	(bad)  
  40365f:	daa    
  403660:	loope  0x403672
  403662:	(bad)  
  403663:	nop
  403664:	arpl   WORD PTR [edx+0x5cd1d657],bx
  40366a:	mov    ?,WORD PTR cs:[ebx-0x65]
  40366e:	inc    esi
  40366f:	xor    DWORD PTR [ecx+0x38eb728],ebp
  403675:	sahf   
  403676:	mov    ebp,0xbd3ea0e6
  40367b:	pop    ss
  40367c:	or     bl,dl
  40367e:	xchg   esi,eax
  40367f:	push   edi
  403680:	and    dl,BYTE PTR [esi]
  403682:	icebp  
  403683:	sub    BYTE PTR [edi-0x77],ch
  403686:	add    al,0xa4
  403688:	mov    ebx,0xd11d6b1f
  40368d:	xchg   edx,eax
  40368e:	xor    ch,BYTE PTR [eax+0x6a22e96c]
  403694:	sub    eax,eax
  403696:	test   DWORD PTR [eax+eax*4+0x744c4bfd],ebp
  40369d:	in     eax,dx
  40369e:	sbb    esp,DWORD PTR [edi+ebp*2]
  4036a1:	xchg   ebx,eax
  4036a2:	add    eax,0x6851dd54
  4036a7:	adc    al,0xc1
  4036a9:	dec    esp
  4036aa:	cld    
  4036ab:	xor    al,0xe6
  4036ad:	dec    esi
  4036ae:	pop    ebp
  4036af:	pop    eax
  4036b0:	test   eax,0x17a91604
  4036b5:	cmc    
  4036b6:	xchg   ecx,eax
  4036b7:	dec    eax
  4036b8:	jle    0x403714
  4036ba:	fnsave [edi-0x36]
  4036bd:	pop    esi
  4036be:	pusha  
  4036bf:	pop    esi
  4036c0:	test   DWORD PTR [ecx+0x49],0xa4807e3
  4036c7:	jmp    0x403687
  4036c9:	pusha  
  4036ca:	into   
  4036cb:	xchg   dl,al
  4036cd:	pop    esi
  4036ce:	(bad)  
  4036cf:	lea    ebp,[ecx+0x1e]
  4036d2:	sbb    DWORD PTR [edi-0x6ac8da05],0xd9188630
  4036dc:	lahf   
  4036dd:	stos   BYTE PTR es:[edi],al
  4036de:	aaa    
  4036df:	inc    esi
  4036e0:	aad    0xa3
  4036e2:	(bad)  
  4036e3:	retf   
  4036e4:	dec    edx
  4036e5:	(bad)  [esp+esi*4]
  4036e8:	arpl   dx,cx
  4036ea:	repz mov ds:0x39d774d0,al
  4036f0:	cli    
  4036f1:	arpl   WORD PTR [ebx+ebx*8+0x23],cx
  4036f5:	ins    DWORD PTR es:[edi],dx
  4036f6:	mov    dh,0xac
  4036f8:	mov    esp,0x4646773c
  4036fd:	cld    
  4036fe:	jmp    0xf23a:0xa2d0a345
  403705:	inc    edi
  403706:	mov    bl,al
  403708:	dec    edx
  403709:	mov    ebp,0x19056a55
  40370e:	(bad)  
  40370f:	(bad)  
  403710:	je     0x4036ec
  403712:	cmp    al,0x8f
  403714:	add    ebp,DWORD PTR [edi]
  403716:	push   ds
  403717:	dec    ebp
  403718:	sub    BYTE PTR [ecx+0x685dcb8e],cl
  40371e:	div    DWORD PTR [ebp+0x6d17cf43]
  403724:	mul    DWORD PTR [ebx-0x63]
  403727:	and    ebx,ecx
  403729:	ss mov bl,0xac
  40372c:	push   ebx
  40372d:	inc    edi
  40372e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40372f:	adc    eax,0xbe063b75
  403734:	jecxz  0x403796
  403736:	xlat   BYTE PTR ds:[ebx]
  403737:	popf   
  403738:	inc    eax
  403739:	add    DWORD PTR [ebp-0x2612a3fc],ebx
  40373f:	mov    cl,0xc6
  403741:	jno    0x4036eb
  403743:	into   
  403744:	mov    edx,esi
  403746:	rcl    BYTE PTR [esp+eiz*4+0x19],0x79
  40374b:	xor    DWORD PTR [edi],edx
  40374d:	sub    eax,DWORD PTR [ebp+0x3a8ba1c4]
  403753:	mov    ch,0x24
  403755:	or     cl,ah
  403757:	add    eax,0xb5247c33
  40375c:	lock out 0x5,eax
  40375f:	push   0x9efc923b
  403764:	stc    
  403765:	xchg   ecx,eax
  403766:	popf   
  403767:	ret    
  403768:	jl     0x403710
  40376a:	sbb    al,0xcf
  40376c:	cld    
  40376d:	lods   eax,DWORD PTR ds:[esi]
  40376e:	addr16 (bad) 
  403770:	in     eax,dx
  403771:	mov    eax,ds:0xc56d95df
  403776:	adc    DWORD PTR [esi-0x4a],esi
  403779:	mov    eax,0xa2003a47
  40377e:	inc    eax
  40377f:	jo     0x40372e
  403781:	out    0x2,al
  403783:	dec    edx
  403784:	push   ebp
  403785:	push   es
  403786:	hlt    
  403787:	clc    
  403788:	fld    DWORD PTR [edx]
  40378a:	jp     0x403742
  40378c:	cmp    ch,BYTE PTR [eax]
  40378e:	arpl   WORD PTR [edi-0x38bd7a72],dx
  403794:	and    DWORD PTR [ebp-0x52],esp
  403797:	pop    ss
  403798:	or     ebx,eax
  40379a:	test   BYTE PTR [esi+0x8a3ac48],0x93
  4037a1:	imul   eax,DWORD PTR [eax+0x79],0x47
  4037a5:	lods   eax,DWORD PTR es:[esi]
  4037a7:	sub    eax,DWORD PTR [esi+0x3d1eb429]
  4037ad:	out    0x8f,eax
  4037af:	inc    edx
  4037b0:	xchg   edi,eax
  4037b1:	pop    eax
  4037b2:	sahf   
  4037b3:	sbb    BYTE PTR [ebp-0x6a1a8736],bl
  4037b9:	xor    al,0xc9
  4037bb:	add    ebp,ebx
  4037bd:	test   ebx,ebx
  4037bf:	scas   al,BYTE PTR es:[edi]
  4037c0:	stc    
  4037c1:	xor    al,0x70
  4037c3:	xor    BYTE PTR [ecx],cl
  4037c5:	aas    
  4037c6:	lds    edx,FWORD PTR [esp+edx*8-0x51]
  4037ca:	push   esp
  4037cb:	fdiv   DWORD PTR [eax-0x46]
  4037ce:	push   ebp
  4037cf:	xchg   edx,eax
  4037d0:	xlat   BYTE PTR ds:[ebx]
  4037d1:	inc    esi
  4037d2:	pop    esi
  4037d3:	stc    
  4037d4:	retf   
  4037d5:	arpl   WORD PTR [eax+esi*1-0x59bca009],dx
  4037dc:	sub    eax,0x2d415b2f
  4037e1:	cdq    
  4037e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037e3:	call   0x81d4945e
  4037e8:	mov    esp,DWORD PTR ds:0x60fc2b96
  4037ee:	(bad)  
  4037f1:	xor    BYTE PTR [edx+esi*2],dl
  4037f4:	push   ebx
  4037f5:	ret    0x1c17
  4037f8:	push   esp
  4037f9:	in     eax,dx
  4037fa:	stos   DWORD PTR es:[edi],eax
  4037fb:	call   0xf4d:0xb76d7d2f
  403802:	rcl    DWORD PTR [eax+0x683d2afa],0x6c
  403809:	fstp   TBYTE PTR [edi]
  40380b:	test   BYTE PTR [esi+0x35ccf428],al
  403811:	repz sub edi,DWORD PTR [ebp-0x2eb7ffd9]
  403818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403819:	aas    
  40381a:	mov    dh,BYTE PTR [esi+0x2472b173]
  403820:	dec    esp
  403821:	xchg   edi,eax
  403822:	sbb    DWORD PTR [edi],edx
  403824:	sbb    dh,BYTE PTR ds:0xfda5d8e
  40382a:	mov    edi,es
  40382c:	sub    ecx,DWORD PTR [ecx+0x152bd84d]
  403832:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  403834:	inc    edx
  403835:	add    bh,al
  403837:	inc    ebp
  403838:	lock mov edx,0x8bf89c85
  40383e:	adc    eax,0x42a4da
  403843:	mov    edx,DWORD PTR [edx]
  403845:	xor    DWORD PTR ds:0x42a3ea,edx
  40384b:	mov    DWORD PTR [ebp-0x8],eax
  40384e:	mov    eax,DWORD PTR [ebp-0x10]
  403851:	neg    edx
  403853:	xor    eax,esi
  403855:	mov    edx,0xffcd8d91
  40385a:	sub    edx,eax
  40385c:	mov    eax,ds:0x42a44e
  403861:	mov    DWORD PTR [ebp-0xc],edx
  403864:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  40386b:	mov    eax,DWORD PTR [ebp-0x8]
  40386e:	mov    DWORD PTR ds:0x42a41e,0x6d9f
  403878:	mov    DWORD PTR [ebp-0x3c],ebx
  40387b:	mov    DWORD PTR ds:0x42a3d6,0xb52
  403885:	cmp    eax,ecx
  403887:	mov    DWORD PTR ds:0x42a422,0x1900
  403891:	je     0x405f2a
  403897:	xor    DWORD PTR ds:0x42a406,edx
  40389d:	mov    eax,DWORD PTR [ebp-0x10]
  4038a0:	mov    ecx,DWORD PTR [ebp-0x10]
  4038a3:	sub    DWORD PTR ds:0x42a3b6,0x42a432
  4038ad:	xor    eax,esi
  4038af:	add    DWORD PTR ds:0x42a43a,0x138
  4038b9:	xor    ecx,esi
  4038bb:	lea    ecx,[eax+ecx*1+0x64e5de]
  4038c2:	and    DWORD PTR ds:0x42a3ba,0x0
  4038cc:	xor    eax,eax
  4038ce:	or     eax,DWORD PTR ds:0x42a3ba
  4038d4:	inc    eax
  4038d5:	mov    ds:0x42a3ba,eax
  4038da:	cmp    DWORD PTR ds:0x42a3ba,0x7
  4038e1:	jge    0x403927
  4038e7:	jmp    0x403902
  4038ec:	push   DWORD PTR [ebp-0x10]
  4038ef:	push   DWORD PTR [ebp-0x28]
  4038f2:	push   0x5cc9
  4038f7:	push   0x429181
  4038fc:	call   DWORD PTR ds:0x42a51a
  403902:	cmp    DWORD PTR ds:0x42a3ba,0x6
  403909:	jne    0x40391a
  40390f:	mov    eax,ds:0x42a3ba
  403914:	inc    eax
  403915:	mov    ds:0x42a3ba,eax
  40391a:	cmp    DWORD PTR ds:0x42a3ba,0x11
  403921:	jb     0x4038cc
  403927:	mov    eax,DWORD PTR [ebp-0xc]
  40392a:	sbb    DWORD PTR ds:0x42a416,0x42a446
  403934:	xor    edx,edx
  403936:	or     DWORD PTR ds:0x42a3ee,0x16dc
  403940:	div    ecx
  403942:	or     eax,ecx
  403944:	mov    eax,DWORD PTR [ebp-0x8]
  403947:	xor    ecx,ecx
  403949:	xor    ecx,DWORD PTR ds:0x42a3e2
  40394f:	sbb    DWORD PTR ds:0x42a44a,ecx
  403955:	mov    ecx,DWORD PTR [ebp-0x10]
  403958:	xor    eax,esi
  40395a:	or     DWORD PTR ds:0x42a412,0x42a3ea
  403964:	xor    ecx,esi
  403966:	sbb    DWORD PTR ds:0x42a40e,0x52cd
  403970:	sub    eax,ecx
  403972:	cmp    edx,eax
  403974:	jne    0x403b11
  40397a:	mov    eax,DWORD PTR [ebp-0xc]
  40397d:	neg    ecx
  40397f:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  403986:	adc    ecx,eax
  403988:	mov    eax,DWORD PTR [ebp-0x28]
  40398b:	mov    ecx,DWORD PTR [ebp-0x18]
  40398e:	not    DWORD PTR ds:0x42a42a
  403994:	xor    eax,esi
  403996:	or     DWORD PTR ds:0x42a44a,0xa4f
  4039a0:	xor    ecx,esi
  4039a2:	or     DWORD PTR ds:0x42a3ba,0x42a446
  4039ac:	add    eax,edi
  4039ae:	add    ecx,edi
  4039b0:	mov    BYTE PTR [ebp-0x21],dl
  4039b3:	cmp    eax,ecx
  4039b5:	jae    0x403ac5
  4039bb:	add    edx,DWORD PTR ds:0x42a3f2
  4039c1:	lea    ecx,[eax-0x3272ef]
  4039c7:	mov    DWORD PTR [ebp-0x14],ecx
  4039ca:	sub    DWORD PTR ds:0x42a3ca,0x2374
  4039d4:	mov    edx,DWORD PTR [ebp-0x14]
  4039d7:	add    DWORD PTR ds:0x42a3f2,0x6412
  4039e1:	xor    edx,esi
  4039e3:	add    edx,0x7f55d8fb
  4039e9:	lea    ecx,[ebp+eax*4-0xb4]
  4039f0:	mov    DWORD PTR ds:0x42a3aa,0x798e
  4039fa:	mov    DWORD PTR [ecx],edx
  4039fc:	mov    edx,0x1097
  403a01:	mov    edx,DWORD PTR [ecx]
  403a03:	cmp    edx,0x244ecb9c
  403a09:	jbe    0x403a24
  403a0f:	xor    DWORD PTR ds:0x42a3ea,0x42a426
  403a19:	add    DWORD PTR [ecx],0x405fcdd
  403a1f:	jmp    0x403a2a
  403a24:	add    DWORD PTR [ecx],0xfdaf4323
  403a2a:	or     DWORD PTR ds:0x42a446,edi
  403a30:	mov    ecx,DWORD PTR [ebp-0x18]
  403a33:	xor    ecx,esi
  403a35:	and    DWORD PTR ds:0x42a3ae,0x42a3ca
  403a3f:	inc    eax
  403a40:	and    DWORD PTR ds:0x42a3fa,0x42a3f6
  403a4a:	inc    DWORD PTR [ebp-0x14]
  403a4d:	add    ecx,edi
  403a4f:	mov    DWORD PTR ds:0x42a446,0x14dc
  403a59:	cmp    eax,ecx
  403a5b:	mov    DWORD PTR ds:0x42a44e,0x33af
  403a65:	jb     0x4039ca
  403a6b:	and    DWORD PTR ds:0x42a3ae,0x0
  403a75:	mov    eax,ds:0x42a3ae
  403a7a:	inc    eax
  403a7b:	mov    ds:0x42a3ae,eax
  403a80:	cmp    DWORD PTR ds:0x42a3ae,0x1c
  403a87:	jge    0x403ac2
  403a8d:	jmp    0x403ab5
  403a92:	push   0x42a3de
  403a97:	push   0x8ee8
  403a9c:	push   DWORD PTR [ebp-0xc]
  403a9f:	push   0x2324
  403aa4:	push   0x4718
  403aa9:	push   DWORD PTR [ebp-0x20]
  403aac:	push   DWORD PTR [ebp-0x18]
  403aaf:	call   DWORD PTR ds:0x42a51e
  403ab5:	cmp    DWORD PTR ds:0x42a3ae,0x18
  403abc:	jb     0x403a75
  403ac2:	mov    dl,BYTE PTR [ebp-0x21]
  403ac5:	mov    eax,DWORD PTR [ebp-0x34]
  403ac8:	xor    DWORD PTR ds:0x42a402,0x7a5d
  403ad2:	xor    al,0xa8
  403ad4:	mov    cl,0x11
  403ad6:	sub    cl,al
  403ad8:	xor    DWORD PTR ds:0x42a422,0x74a5
  403ae2:	add    dl,cl
  403ae4:	or     DWORD PTR ds:0x42a3b6,edi
  403aea:	mov    ecx,DWORD PTR [ebp-0x1c]
  403aed:	xor    cl,0xa8
  403af0:	sub    cl,0x11
  403af3:	ror    dl,cl
  403af5:	sub    DWORD PTR ds:0x42a3ce,edi
  403afb:	xor    eax,eax
  403afd:	mov    eax,DWORD PTR [ebp-0xc]
  403b00:	sub    DWORD PTR ds:0x42a426,0x42a44a
  403b0a:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  403b11:	adc    ecx,DWORD PTR ds:0x42a3e2
  403b17:	mov    eax,DWORD PTR [ebp-0xc]
  403b1a:	adc    DWORD PTR ds:0x42a416,ecx
  403b20:	mov    ecx,DWORD PTR [ebp-0x28]
  403b23:	sub    DWORD PTR ds:0x42a41e,0x42a442
  403b2d:	sub    eax,edi
  403b2f:	and    DWORD PTR ds:0x42a3aa,0x42a442
  403b39:	xor    eax,esi
  403b3b:	cmp    eax,ecx
  403b3d:	jne    0x403b67
  403b43:	mov    eax,DWORD PTR [ebp-0x8]
  403b46:	mov    ecx,DWORD PTR [ebp-0x10]
  403b49:	xor    eax,esi
  403b4b:	xor    ecx,esi
  403b4d:	sub    eax,ecx
  403b4f:	sub    eax,edi
  403b51:	xor    eax,esi
  403b53:	mov    DWORD PTR [ebp-0x8],eax
  403b56:	mov    eax,DWORD PTR [ebp-0x10]
  403b59:	xor    eax,esi
  403b5b:	mov    ecx,0xffcd8d91
  403b60:	sub    ecx,eax
  403b62:	jmp    0x403b76
  403b67:	mov    eax,DWORD PTR [ebp-0x10]
  403b6a:	xor    eax,esi
  403b6c:	mov    ecx,0xffcd8d11
  403b71:	sub    ecx,eax
  403b73:	add    ecx,DWORD PTR [ebp-0xc]
  403b76:	mov    DWORD PTR [ebp-0xc],ecx
  403b79:	mov    eax,DWORD PTR [ebp-0x8]
  403b7c:	cmp    eax,0xf89c85b9
  403b81:	jne    0x403897
  403b87:	jmp    0x405f2a
  403b8c:	cmc    
  403b8d:	cld    
  403b8e:	mov    ebx,0xb5fbbb03
  403b93:	test   BYTE PTR [eax+esi*1-0x3dae6bb6],dh
  403b9a:	outs   dx,DWORD PTR ds:[esi]
  403b9b:	mov    esp,0x7a7a5ffc
  403ba0:	cld    
  403ba1:	pop    edi
  403ba2:	jp     0x403c1e
  403ba4:	test   BYTE PTR [eax+eax*2+0x7b],bl
  403ba8:	mov    esp,ebp
  403baa:	add    eax,0x7a40d096
  403baf:	jo     0x403bf8
  403bb1:	add    DWORD PTR [edx-0x72ca6d3f],edi
  403bb7:	xchg   esp,eax
  403bb8:	lods   al,BYTE PTR ds:[esi]
  403bb9:	(bad)  
  403bba:	cli    
  403bbb:	les    esp,FWORD PTR [ecx+0x45]
  403bbe:	fcomp  QWORD PTR [edi+0xf7dbf65]
  403bc4:	rol    DWORD PTR ds:0xd7628039,cl
  403bca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bcb:	dec    esp
  403bcc:	mov    ebx,0xcb749b8a
  403bd1:	jnp    0x403bf3
  403bd3:	and    al,BYTE PTR [ebp+0x13]
  403bd6:	and    DWORD PTR [edx-0x7e],ecx
  403bd9:	jmp    0x7dfa182
  403bde:	stos   BYTE PTR es:[edi],al
  403bdf:	arpl   WORD PTR [eax-0x4b3dc6a0],si
  403be5:	push   ds
  403be6:	jge    0x403ba1
  403be8:	jmp    0x403c3d
  403bea:	push   cs
  403beb:	outs   dx,DWORD PTR ds:[esi]
  403bec:	dec    esp
  403bed:	nop
  403bee:	sbb    eax,0x7ff4f75d
  403bf3:	and    eax,0xc0fec306
  403bf8:	or     cl,0xca
  403bfb:	test   al,0xb5
  403bfd:	sub    bh,BYTE PTR [edi-0x22c7e76e]
  403c03:	push   eax
  403c04:	dec    ebx
  403c05:	mov    cl,0x81
  403c07:	fisubr WORD PTR [esi+0x20]
  403c0a:	enter  0xed4e,0xec
  403c0e:	lock call 0xa2942806
  403c14:	cdq    
  403c15:	pop    ebx
  403c16:	or     al,0xa2
  403c18:	nop
  403c19:	repz and ah,BYTE PTR [edi+0x6da405e1]
  403c20:	daa    
  403c21:	jnp    0x403c3b
  403c23:	xor    edx,edi
  403c25:	add    al,0xd
  403c27:	sub    DWORD PTR [esi+esi*1],edx
  403c2a:	push   edi
  403c2b:	mov    ecx,0xc306a1e6
  403c30:	enter  0x2fe7,0xef
  403c34:	sahf   
  403c35:	cmp    esi,edi
  403c37:	sub    edx,DWORD PTR [ecx+ebp*4]
  403c3a:	into   
  403c3b:	loope  0x403bf4
  403c3d:	das    
  403c3e:	add    ah,BYTE PTR [ebx-0x18cdb6aa]
  403c44:	sahf   
  403c45:	mov    ss,WORD PTR [ebp+0x2ae9c3e3]
  403c4b:	jnp    0x403c2e
  403c4d:	sbb    DWORD PTR [ebp-0x3f245764],0x6edc6b11
  403c57:	sub    bl,BYTE PTR ds:0x8e06ac40
  403c5d:	jo     0x403c6b
  403c5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c60:	cs das 
  403c62:	sub    DWORD PTR [edi],eax
  403c64:	aas    
  403c65:	in     eax,dx
  403c66:	mov    ebp,0xb3a108a1
  403c6b:	sbb    bh,BYTE PTR [ebp+0x49c234cb]
  403c71:	sahf   
  403c72:	xor    esp,ebp
  403c74:	xchg   ebp,eax
  403c75:	jnp    0x403c28
  403c77:	shl    DWORD PTR [ebx+edx*8+0x212e0b5a],0xe8
  403c7f:	stos   BYTE PTR es:[edi],al
  403c80:	(bad)  
  403c82:	popf   
  403c83:	cld    
  403c84:	enter  0x7f34,0x98
  403c88:	jnp    0x403c79
  403c8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c8b:	push   ecx
  403c8c:	pop    ss
  403c8d:	std    
  403c8e:	pop    ss
  403c8f:	mov    ebp,0x297e27db
  403c94:	gs call 0xa6cff02e
  403c9a:	ja     0x403c32
  403c9c:	inc    esp
  403c9d:	pop    ecx
  403c9e:	adc    DWORD PTR [ecx+0x73],eax
  403ca1:	pop    esi
  403ca2:	int    0x30
  403ca4:	jns    0x403cdf
  403ca6:	aaa    
  403ca7:	or     eax,DWORD PTR ds:0x8b027022
  403cad:	ins    BYTE PTR es:[edi],dx
  403cae:	in     al,0x60
  403cb0:	pop    edi
  403cb1:	inc    ecx
  403cb2:	mov    eax,0x958f976d
  403cb7:	pop    DWORD PTR [ebx]
  403cb9:	cs push ds
  403cbb:	call   0xe5d70ea6
  403cc0:	sub    DWORD PTR [edx],ebx
  403cc2:	in     eax,0x1f
  403cc4:	pop    esi
  403cc5:	add    ch,0x9
  403cc8:	shr    BYTE PTR [edx],0x48
  403ccb:	jae    0x403c81
  403ccd:	push   cs
  403cce:	and    eax,0x79139188
  403cd3:	cmp    edx,DWORD PTR [eax+0x1059570c]
  403cd9:	test   al,0xc3
  403cdb:	push   ebp
  403cdc:	les    ecx,FWORD PTR [edi+0x50a70ac9]
  403ce2:	add    DWORD PTR [esi+edi*4+0x29],esi
  403ce6:	mov    esi,DWORD PTR [eax+ecx*2+0x72]
  403cea:	(bad)  
  403ceb:	jns    0x403c8c
  403ced:	jae    0x403c7e
  403cef:	cmp    dl,0xc
  403cf2:	sub    al,0x22
  403cf4:	test   eax,0x7d77c88d
  403cf9:	add    eax,0xd3b5903f
  403cfe:	pop    edx
  403cff:	(bad)  
  403d00:	fld    DWORD PTR [eax-0x24]
  403d03:	sar    BYTE PTR [ebx+0x6cb5c484],1
  403d09:	jo     0x403c96
  403d0b:	push   esi
  403d0c:	xchg   edx,eax
  403d0d:	xor    al,0x20
  403d0f:	cmp    al,0x48
  403d11:	pusha  
  403d12:	sti    
  403d13:	pop    ds
  403d14:	cs sub eax,0x4c85dbc9
  403d1a:	out    dx,al
  403d1b:	(bad)  
  403d1c:	jae    0x403d29
  403d1e:	push   edi
  403d1f:	cs ins DWORD PTR es:[edi],dx
  403d21:	ret    
  403d22:	pop    DWORD PTR [esi-0x74]
  403d25:	mov    ebx,0xcc8e6a84
  403d2a:	jmp    0x403cb0
  403d2c:	ret    
  403d2d:	lock aam 0xe9
  403d30:	mov    ah,0x7a
  403d32:	ret    
  403d33:	cmp    BYTE PTR [esi+edx*2-0x5f],bl
  403d37:	dec    edi
  403d38:	or     bl,al
  403d3a:	pop    ebp
  403d3b:	mov    eax,0x869cb6ab
  403d40:	xlat   BYTE PTR ds:[ebx]
  403d41:	nop
  403d42:	push   esp
  403d43:	cli    
  403d44:	(bad)  
  403d45:	mov    ds:0x224522c3,eax
  403d4a:	popa   
  403d4b:	adc    eax,0x58030bc9
  403d50:	pop    esi
  403d51:	add    eax,DWORD PTR [esi-0xe2f14e]
  403d57:	(bad)  
  403d58:	pop    esi
  403d59:	add    ebp,esp
  403d5b:	ja     0x403d6b
  403d5d:	outs   dx,BYTE PTR ds:[esi]
  403d5e:	cdq    
  403d5f:	pop    ebp
  403d60:	outs   dx,BYTE PTR ds:[esi]
  403d61:	sbb    edx,DWORD PTR [edx-0x74869fd]
  403d67:	cs gs fsubr st,st(1)
  403d6b:	mov    al,0x4d
  403d6d:	lds    ecx,FWORD PTR [ecx-0x10]
  403d70:	dec    eax
  403d71:	loope  0x403daa
  403d73:	cmp    BYTE PTR [edx],0x89
  403d76:	sub    esi,esi
  403d78:	add    bh,BYTE PTR [ebp-0x80]
  403d7b:	cli    
  403d7c:	push   edx
  403d7d:	popf   
  403d7e:	aaa    
  403d7f:	adc    eax,0x9acc3731
  403d84:	out    0xa5,al
  403d86:	arpl   WORD PTR [ebp+0x31],bx
  403d89:	pop    ebp
  403d8a:	mov    ebx,0xba49886d
  403d8f:	and    edi,esi
  403d91:	dec    edx
  403d92:	test   al,0xd8
  403d94:	push   edx
  403d95:	mov    ds:0x6a90cf70,eax
  403d9a:	into   
  403d9b:	push   0xbc6a510a
  403da0:	dec    edi
  403da1:	mul    bl
  403da3:	pop    si
  403da5:	les    edx,FWORD PTR [eax+edi*8+0x4a0c221d]
  403dac:	mov    al,0x67
  403dae:	inc    eax
  403daf:	in     al,dx
  403db0:	ret    0x9f90
  403db3:	adc    eax,0x484e7053
  403db8:	xor    edi,DWORD PTR [ebp+ebx*1-0x1dbc1031]
  403dbf:	aam    0x13
  403dc1:	adc    eax,0xf61eab54
  403dc6:	mov    ?,WORD PTR [edi+0x11232892]
  403dcc:	and    eax,0xfcfbc8a4
  403dd1:	nop
  403dd2:	jnp    0x403d9e
  403dd4:	lds    eax,FWORD PTR [esi+0x1e49cfea]
  403dda:	pop    esp
  403ddb:	fld    DWORD PTR [eax+0x6e]
  403dde:	in     eax,dx
  403ddf:	(bad)  
  403de0:	out    dx,al
  403de1:	in     eax,0x2a
  403de3:	and    BYTE PTR cs:[ebx+0x42],0xa1
  403de8:	sbb    ecx,DWORD PTR [ecx+edi*1+0x60]
  403dec:	daa    
  403ded:	mov    ds:0xea6004a1,al
  403df2:	pop    ecx
  403df3:	in     al,0x9f
  403df5:	cli    
  403df6:	repz or DWORD PTR [ebx+0x5d],0xffffffb8
  403dfb:	inc    edi
  403dfc:	cs sbb al,0xbc
  403dff:	sbb    ah,bh
  403e01:	add    eax,esp
  403e03:	sbb    al,0x2b
  403e05:	iret   
  403e06:	out    0x5b,al
  403e08:	xlat   BYTE PTR ds:[ebx]
  403e09:	sbb    BYTE PTR [edi],al
  403e0b:	adc    ah,BYTE PTR [eax+0x50]
  403e0e:	std    
  403e0f:	mov    edi,0x6e3d447b
  403e14:	jg     0x403e80
  403e16:	add    al,0x2d
  403e18:	lea    edi,[ebx+edi*4]
  403e1b:	sub    ch,dh
  403e1d:	sbb    al,BYTE PTR [ecx-0x2ad56bc]
  403e23:	mov    eax,ds:0x365efaee
  403e28:	adc    DWORD PTR [esp+ebp*4+0x19],esi
  403e2c:	lds    esp,FWORD PTR [eax+edx*1+0x74d39962]
  403e33:	mov    dh,0x8f
  403e35:	dec    ebp
  403e36:	lock in eax,dx
  403e38:	add    ecx,ebp
  403e3a:	lock pop esp
  403e3c:	fidiv  DWORD PTR [edx]
  403e3e:	cdq    
  403e3f:	pop    ds
  403e40:	ret    
  403e41:	fstp   QWORD PTR [edi-0x26fe1d99]
  403e47:	hlt    
  403e48:	ds push es
  403e4a:	lods   al,BYTE PTR ds:[esi]
  403e4b:	mov    eax,0x7802ce77
  403e50:	mov    eax,ds:0xf1ee98e7
  403e55:	sahf   
  403e56:	push   0x1e2676f1
  403e5b:	sbb    eax,0xe60e3979
  403e60:	call   DWORD PTR [eax-0x74]
  403e63:	push   esi
  403e64:	mov    edx,0x8998726e
  403e69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e6a:	ds mov ah,0x91
  403e6d:	cld    
  403e6e:	pop    esi
  403e6f:	xchg   edi,eax
  403e70:	mov    esp,0xe98025c9
  403e75:	adc    al,BYTE PTR [esi+eax*8]
  403e78:	aad    0xaf
  403e7a:	sub    BYTE PTR [edx-0x3da70bc9],bh
  403e80:	mov    edx,0x47183902
  403e85:	arpl   WORD PTR [ebp+0x755976a7],dx
  403e8b:	mov    bh,0xd2
  403e8d:	or     DWORD PTR [ecx+ecx*1],esi
  403e90:	mov    bl,0xce
  403e92:	pop    esi
  403e93:	ret    0x298a
  403e96:	fmul   DWORD PTR ds:0x4d966000
  403e9c:	aad    0x29
  403e9e:	dec    edx
  403e9f:	jb     0x403e69
  403ea1:	(bad)  
  403ea2:	xchg   ecx,eax
  403ea3:	inc    edx
  403ea4:	test   DWORD PTR [eax+0x5d2b02d3],esi
  403eaa:	data16 mov al,0x5d
  403ead:	je     0x403efc
  403eaf:	ja     0x403e86
  403eb1:	outs   dx,DWORD PTR ds:[esi]
  403eb2:	pushf  
  403eb3:	and    cl,BYTE PTR [ebp+0x30887579]
  403eb9:	or     DWORD PTR ds:0xbc207a4a,ebp
  403ebf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ec0:	inc    esi
  403ec1:	mov    edx,0xbaf9991a
  403ec6:	adc    cl,BYTE PTR [eax+0x3507090a]
  403ecc:	loope  0x403f1d
  403ece:	in     eax,dx
  403ecf:	mov    ebp,0xe2a5b7a8
  403ed4:	cmp    esi,DWORD PTR [ebx]
  403ed6:	jae    0x403f56
  403ed8:	pop    eax
  403ed9:	stc    
  403eda:	push   esi
  403edb:	and    eax,0x47069c65
  403ee0:	jo     0x403edc
  403ee2:	inc    ebp
  403ee3:	shr    BYTE PTR [edi-0x6d74ed07],1
  403ee9:	push   cs
  403eea:	push   edx
  403eeb:	fdivr  QWORD PTR [edi+eax*8-0x4a576be5]
  403ef2:	daa    
  403ef3:	bnd jbe 0x403e81
  403ef6:	hlt    
  403ef7:	div    BYTE PTR [edi+edx*8+0x19600401]
  403efe:	stos   BYTE PTR es:[edi],al
  403eff:	push   ebx
  403f00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f01:	outs   dx,BYTE PTR ds:[esi]
  403f02:	xchg   esi,eax
  403f03:	push   es
  403f04:	push   0x18
  403f06:	std    
  403f07:	cli    
  403f08:	inc    eax
  403f09:	add    dh,BYTE PTR [ebx+0x6e1a6a1f]
  403f0f:	int    0xd1
  403f11:	outs   dx,DWORD PTR ds:[esi]
  403f12:	dec    ebx
  403f13:	loop   0x403ed1
  403f15:	jecxz  0x403f0d
  403f17:	and    al,cl
  403f19:	scas   al,BYTE PTR es:[edi]
  403f1a:	cdq    
  403f1b:	fdiv   QWORD PTR [ecx-0x384d5d8f]
  403f21:	push   ebx
  403f22:	fisub  DWORD PTR [ebx-0x6f]
  403f25:	aam    0x45
  403f27:	jp     0x403f13
  403f29:	cmp    al,bh
  403f2b:	sti    
  403f2c:	mov    edx,0xd7fce2ca
  403f31:	xor    dh,BYTE PTR [eax]
  403f33:	jns    0x403ee9
  403f35:	ffree  st(0)
  403f37:	loope  0x403ef0
  403f39:	xchg   edx,eax
  403f3a:	fldcw  WORD PTR [edx-0x34]
  403f3d:	mov    esp,0x2ce6121d
  403f42:	sub    ecx,DWORD PTR [ecx+eax*4-0x17]
  403f46:	inc    edi
  403f47:	inc    esp
  403f48:	pop    ecx
  403f49:	xor    BYTE PTR [ebx],dh
  403f4b:	out    dx,al
  403f4c:	and    BYTE PTR [edi-0x4697a9cf],dl
  403f52:	inc    edx
  403f53:	or     eax,0x799c853b
  403f58:	pushf  
  403f59:	jmp    0x403ef7
  403f5b:	jmp    0xa4cceddb
  403f60:	fwait
  403f61:	or     al,ch
  403f63:	iret   
  403f64:	add    DWORD PTR ds:0xfb4759a,edi
  403f6a:	mov    ds:0x66a577a8,eax
  403f6f:	das    
  403f70:	jge    0x403f9f
  403f72:	sbb    ebp,edx
  403f74:	mov    ds:0x722ff4d9,eax
  403f79:	cs fdiv st(0),st
  403f7c:	shr    DWORD PTR [ebx],cl
  403f7e:	outs   dx,DWORD PTR ds:[esi]
  403f7f:	mov    ebx,0x75fffa8
  403f84:	inc    esi
  403f85:	dec    eax
  403f86:	int3   
  403f87:	mov    esi,0xc04e61b2
  403f8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f8d:	sub    DWORD PTR [ecx],eax
  403f8f:	push   ebp
  403f90:	fs push ebp
  403f92:	jmp    0x403f4c
  403f94:	inc    eax
  403f95:	out    0xbe,eax
  403f97:	mov    ds:0x6523ca7c,al
  403f9c:	in     al,dx
  403f9d:	pushf  
  403f9e:	in     eax,dx
  403f9f:	call   DWORD PTR [ecx-0x7b]
  403fa2:	stc    
  403fa3:	dec    edx
  403fa4:	jge    0x403fb9
  403fa6:	retf   0x483c
  403fa9:	pop    edi
  403faa:	push   esi
  403fab:	loop   0x40401b
  403fad:	shl    DWORD PTR [eax-0x1e],1
  403fb0:	jp     0x404011
  403fb2:	mov    esi,0x33ac032b
  403fb7:	in     al,0xbd
  403fb9:	jp     0x403ff8
  403fbb:	fsub   DWORD PTR [edx+0x35de5386]
  403fc1:	(bad)  
  403fc2:	addr16 mov edx,0xdc95e6e
  403fc8:	push   eax
  403fc9:	unpcklps xmm0,XMMWORD PTR [edx-0x5832d5ce]
  403fd0:	rol    edx,1
  403fd2:	mov    dh,0x8c
  403fd4:	stos   DWORD PTR es:[edi],eax
  403fd5:	dec    edi
  403fd6:	test   BYTE PTR [ecx+0x6ea44815],bl
  403fdc:	xchg   esi,eax
  403fdd:	out    dx,eax
  403fde:	sub    BYTE PTR [eax],0x77
  403fe1:	fadd   st(3),st
  403fe3:	mov    DWORD PTR fs:[edi-0x58c0dddd],edx
  403fea:	xor    cl,BYTE PTR [edi]
  403fec:	fcomi  st,st(3)
  403fee:	jle    0x40403b
  403ff0:	mov    edx,0x4539df7
  403ff5:	mov    ch,0xdf
  403ff7:	fsubr  DWORD PTR [ebp-0x387b98c3]
  403ffd:	ret    0x3cb6
  404000:	fistp  QWORD PTR [ecx-0x32]
  404003:	xchg   ebx,eax
  404004:	int3   
  404005:	and    ah,BYTE PTR [ebp+0x6]
  404008:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404009:	cmp    al,0xe7
  40400b:	out    0xfe,al
  40400d:	xor    al,0xc1
  40400f:	scas   eax,DWORD PTR es:[edi]
  404010:	ins    BYTE PTR es:[edi],dx
  404011:	lea    edi,[esp+edx*8-0x5ec6b3a9]
  404018:	dec    edi
  404019:	jb     0x403fee
  40401b:	daa    
  40401c:	les    ebp,FWORD PTR [eax]
  40401e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40401f:	out    0xf4,al
  404021:	in     al,dx
  404022:	bound  edx,QWORD PTR [ebx]
  404024:	push   eax
  404025:	fwait
  404026:	aam    0x26
  404028:	sbb    DWORD PTR [edx],ebp
  40402a:	popa   
  40402b:	(bad)  
  40402c:	div    BYTE PTR [ebx]
  40402e:	pop    eax
  40402f:	mov    edi,0x5ac09efb
  404034:	daa    
  404035:	clc    
  404036:	bound  ebp,QWORD PTR [eax+edx*4-0x7dcd2212]
  40403d:	dec    esp
  40403e:	lds    edx,FWORD PTR ds:0xdb0dfd9
  404044:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404045:	xchg   edi,eax
  404046:	mov    esi,0x8ded1c0a
  40404b:	cld    
  40404c:	xchg   ebp,eax
  40404d:	add    eax,0xe989234
  404052:	popa   
  404053:	iret   
  404054:	fs jae 0x404041
  404057:	push   cs
  404058:	mov    ecx,0x94443d2b
  40405d:	mov    dh,0x3
  40405f:	scas   al,BYTE PTR es:[edi]
  404060:	inc    ebx
  404061:	cmp    eax,0xc85498f4
  404066:	sbb    eax,0xdc52f57
  40406b:	test   al,0x40
  40406d:	and    BYTE PTR [ecx+0x11997939],dl
  404073:	int3   
  404074:	loope  0x404094
  404076:	cdq    
  404077:	pop    es
  404078:	pop    edx
  404079:	dec    ebp
  40407a:	mov    bh,0xec
  40407c:	fld    DWORD PTR [ebp+0x68]
  40407f:	ss mov dl,0xdc
  404082:	pusha  
  404083:	js     0x40401a
  404085:	pop    ecx
  404086:	retf   
  404087:	fisubr WORD PTR [eax]
  404089:	push   edi
  40408a:	push   0x1e
  40408c:	adc    ah,al
  40408e:	rcl    DWORD PTR [edx],0x1
  404091:	jns    0x4040d7
  404093:	jbe    0x404044
  404095:	xor    edi,DWORD PTR [ecx-0x3d03b153]
  40409b:	sbb    ah,BYTE PTR [eax]
  40409d:	lock aaa 
  40409f:	iret   
  4040a0:	retf   0x847d
  4040a3:	pop    eax
  4040a4:	les    ebx,FWORD PTR [esi]
  4040a6:	cmp    ch,BYTE PTR [bp+0x211e]
  4040ab:	push   cs
  4040ac:	shr    BYTE PTR [edi],0x6a
  4040af:	sar    DWORD PTR [ebx+0x5e],cl
  4040b2:	sahf   
  4040b3:	pop    ebp
  4040b4:	loopne 0x404127
  4040b6:	mov    ?,WORD PTR [ebx+0x6ff34e7a]
  4040bc:	and    ch,BYTE PTR [ebp+eax*2+0x64]
  4040c0:	jns    0x4040f2
  4040c2:	dec    edx
  4040c3:	jle    0x40412c
  4040c5:	popa   
  4040c6:	enter  0xe94c,0xb0
  4040ca:	dec    esp
  4040cb:	into   
  4040cc:	retf   0xcef
  4040cf:	pusha  
  4040d0:	faddp  st(3),st
  4040d2:	jmp    DWORD PTR [ebx-0x7f]
  4040d5:	or     edi,DWORD PTR gs:[eax]
  4040d8:	call   0xf9eaa530
  4040dd:	and    eax,0x6c878353
  4040e2:	in     eax,0xf9
  4040e4:	pop    ss
  4040e5:	std    
  4040e6:	dec    DWORD PTR [edi-0x18]
  4040e9:	inc    eax
  4040ea:	ficomp WORD PTR [eax]
  4040ec:	cmp    eax,0x3665756f
  4040f1:	xor    BYTE PTR [ebx-0x3],dl
  4040f4:	adc    esp,esi
  4040f6:	mov    gs,WORD PTR [edi+0x79]
  4040f9:	or     ecx,DWORD PTR [edi+0x1586a52]
  4040ff:	sub    DWORD PTR [edx-0x1c],ebp
  404102:	jno    0x40413b
  404104:	push   0x5ccf409d
  404109:	xor    BYTE PTR [ebx],dl
  40410b:	out    0x24,eax
  40410d:	jno    0x404112
  40410f:	popf   
  404110:	mov    ds:0xa152246f,al
  404115:	dec    edi
  404116:	pop    ecx
  404117:	adc    BYTE PTR [edi],bl
  404119:	nop
  40411a:	into   
  40411b:	mov    ebp,DWORD PTR [edx*8-0x7bc24970]
  404122:	leave  
  404123:	lods   eax,DWORD PTR ds:[esi]
  404124:	hlt    
  404125:	lea    ebx,[ebx-0x4d]
  404128:	inc    eax
  404129:	or     al,0x7d
  40412b:	inc    ebx
  40412c:	cmc    
  40412d:	and    ch,BYTE PTR [ecx+0x1d]
  404130:	jae    0x4040f9
  404132:	mov    edi,ds
  404134:	fst    QWORD PTR [eax]
  404136:	sbb    al,0x9c
  404138:	ins    DWORD PTR es:[di],dx
  40413a:	out    0x74,al
  40413c:	(bad)  
  40413e:	loope  0x4040eb
  404140:	push   ebx
  404141:	xor    DWORD PTR [edi],0x44e003dd
  404147:	(bad)  
  404148:	xchg   ebp,eax
  404149:	mov    dl,0x9f
  40414b:	iret   
  40414c:	pushf  
  40414d:	fisubr WORD PTR [eax+eiz*8-0x2905c210]
  404154:	pushf  
  404155:	xlat   BYTE PTR ds:[ebx]
  404156:	shl    BYTE PTR [esi+0x2e0e23],cl
  40415c:	cdq    
  40415d:	pop    eax
  40415e:	je     0x404145
  404160:	call   0xb7cab6aa
  404165:	pushf  
  404166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404167:	test   DWORD PTR [esi+0x4203e34a],ecx
  40416d:	lock mov DWORD PTR [ebx+0x4617abc8],ebx
  404174:	cwde   
  404175:	sub    BYTE PTR [esi],bl
  404177:	or     al,0x31
  404179:	cmp    BYTE PTR [ebx],bh
  40417b:	or     DWORD PTR [edx+0x3669ab24],ebx
  404181:	sbb    DWORD PTR [edi],0xe79a1da3
  404187:	jns    0x404142
  404189:	int3   
  40418a:	inc    ecx
  40418b:	xchg   esi,eax
  40418c:	mov    eax,ds:0xe619cac
  404191:	pushf  
  404192:	pop    es
  404193:	and    al,BYTE PTR [edx+0x342320fa]
  404199:	pop    ebp
  40419a:	mov    esi,0xbe0e89fc
  40419f:	pop    cx
  4041a1:	ss (bad) 
  4041a4:	xchg   edi,eax
  4041a5:	pushf  
  4041a6:	jnp    0x40413a
  4041a8:	xor    al,0xe1
  4041aa:	mov    edi,0x1fabc230
  4041af:	popw   ss
  4041b1:	imul   esp,ecx,0xcf60cf57
  4041b7:	cmp    DWORD PTR [ecx],0x41571cda
  4041bd:	mov    BYTE PTR [edx-0x2a],ch
  4041c0:	and    edx,esp
  4041c2:	out    dx,eax
  4041c3:	pop    ebx
  4041c4:	hlt    
  4041c5:	cdq    
  4041c6:	mov    esp,0xe3420129
  4041cb:	cld    
  4041cc:	sbb    al,0x7d
  4041ce:	add    eax,0xe630630b
  4041d3:	(bad)  
  4041d4:	int    0x7a
  4041d6:	cmp    al,0x63
  4041d8:	rcl    BYTE PTR [edi+ebp*2-0x24c9177a],0xa9
  4041e0:	push   esi
  4041e1:	ins    BYTE PTR es:[edi],dx
  4041e2:	jmp    0x404250
  4041e4:	push   edi
  4041e5:	test   al,0x7b
  4041e7:	xchg   esp,eax
  4041e8:	and    ah,BYTE PTR [esi-0x60]
  4041eb:	popa   
  4041ec:	and    al,0x1f
  4041ee:	ss push ebp
  4041f0:	and    esp,DWORD PTR [edx+0x27]
  4041f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041f4:	cdq    
  4041f5:	xchg   BYTE PTR [edx],bh
  4041f7:	push   esi
  4041f8:	push   eax
  4041f9:	jns    0x404266
  4041fb:	cmp    dl,ch
  4041fd:	rol    DWORD PTR [esi-0x4c],0x7b
  404201:	inc    edi
  404202:	sbb    DWORD PTR [ebp+0x1c778d92],ebx
  404208:	add    al,0x38
  40420a:	add    esp,DWORD PTR [eax]
  40420c:	adc    al,0x36
  40420e:	dec    esp
  40420f:	mov    es,WORD PTR [eax+edi*8+0x39]
  404213:	sti    
  404214:	sub    cl,bh
  404216:	cmp    BYTE PTR [edi-0x2a],cl
  404219:	lds    edi,FWORD PTR [edi+0x5c59f39c]
  40421f:	ror    DWORD PTR [edx+ebx*1+0x4166733c],0xd5
  404227:	jmp    0xdd95bc64
  40422c:	cmp    ecx,0xfffffff7
  40422f:	sbb    BYTE PTR ds:0xd5554feb,0xb9
  404236:	es scas al,BYTE PTR es:[edi]
  404238:	std    
  404239:	pop    esi
  40423a:	dec    esi
  40423b:	shl    DWORD PTR [ecx-0x20f0bfc3],0x5f
  404242:	sub    eax,0xbf98f0a4
  404247:	pop    ds
  404248:	push   ds
  404249:	jno    0x404282
  40424b:	hlt    
  40424c:	data16 add BYTE PTR [ebx],al
  40424f:	icebp  
  404250:	xchg   ebp,eax
  404251:	xchg   edi,eax
  404252:	mov    al,ds:0x3e7db050
  404257:	pusha  
  404258:	or     BYTE PTR [ebx+edx*4],cl
  40425b:	push   ecx
  40425c:	sub    eax,0x1a89500f
  404261:	sbb    DWORD PTR [ecx+0xc8e0a8a],esp
  404267:	aaa    
  404268:	mov    edi,0xe37e5ff2
  40426d:	xor    DWORD PTR gs:[edi+eax*4-0xc7e3e31],esp
  404275:	add    BYTE PTR [ebx+ebp*1+0x61],bl
  404279:	adc    edi,DWORD PTR [ebx+ebp*2]
  40427c:	mov    ds:0x2e80e312,eax
  404281:	test   cl,dh
  404283:	mov    ch,0xc4
  404285:	add    dh,BYTE PTR ds:0x70cdd40e
  40428b:	outs   dx,DWORD PTR ds:[esi]
  40428c:	out    0xee,al
  40428e:	jbe    0x404227
  404290:	leave  
  404291:	pusha  
  404292:	cmp    DWORD PTR [edx],esi
  404294:	sbb    ah,bh
  404296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404297:	adc    eax,0x915adf71
  40429c:	in     al,0x2e
  40429e:	shl    BYTE PTR [edi+0x2a],1
  4042a1:	mov    dh,0x5f
  4042a3:	jecxz  0x404299
  4042a5:	pop    ebx
  4042a6:	inc    ecx
  4042a7:	xchg   DWORD PTR [eax],esp
  4042a9:	(bad)
  4042ad:	jmp    0x40429b
  4042af:	(bad)  
  4042b0:	stos   DWORD PTR es:[edi],eax
  4042b1:	jnp    0x4042b0
  4042b3:	shr    DWORD PTR ds:0x23afdd49,1
  4042b9:	fsub   st,st(2)
  4042bb:	sbb    BYTE PTR [ebx],bh
  4042bd:	adc    al,0x39
  4042bf:	pop    ebx
  4042c0:	push   cs
  4042c1:	push   edi
  4042c2:	or     al,0xfa
  4042c4:	clc    
  4042c5:	test   eax,0x1c3ef40e
  4042ca:	(bad)  
  4042cb:	rol    bl,0xcd
  4042ce:	push   0xffffffc6
  4042d0:	inc    edx
  4042d1:	pop    ecx
  4042d2:	das    
  4042d3:	jmp    0x998b67ba
  4042d8:	mov    bl,BYTE PTR [edx+ecx*1+0x6f]
  4042dc:	mov    cl,0xc6
  4042de:	daa    
  4042df:	ss (bad) 
  4042e1:	call   0xac76:0xcc7d40f8
  4042e8:	jns    0x40429c
  4042ea:	dec    ecx
  4042eb:	fsubr  QWORD PTR [edx-0x682d4dd2]
  4042f1:	mov    dh,0x4e
  4042f3:	pop    ss
  4042f4:	and    eax,0x4c225727
  4042f9:	jmp    0xd9686326
  4042fe:	or     BYTE PTR [eax],al
  404300:	mov    ds:0x73043143,al
  404305:	jp     0x40436a
  404307:	cdq    
  404308:	fs mov ah,0x1f
  40430b:	fimul  WORD PTR [ecx*4-0x98b5a3]
  404312:	mov    esp,0x1d872d29
  404317:	cmp    esp,DWORD PTR [eax-0x28]
  40431a:	loope  0x40432c
  40431c:	adc    eax,0x44bd0ff5
  404321:	push   ebx
  404322:	push   esi
  404323:	mov    esp,0x8c4c8a2e
  404328:	test   dh,dl
  40432a:	aas    
  40432b:	shl    BYTE PTR [esi],cl
  40432d:	and    BYTE PTR [edx+0x56],dh
  404330:	call   0x1d223ee8
  404335:	sbb    eax,0x57f6185
  40433a:	xor    eax,0x1c4d21ad
  40433f:	mov    edi,0xfa69794d
  404344:	or     al,0x34
  404346:	imul   ecx,DWORD PTR [eax+0x7ad47fbd],0xd5bd8872
  404350:	push   ebp
  404351:	xchg   edx,eax
  404352:	cmp    bl,BYTE PTR [esi]
  404354:	mov    dh,0x7e
  404356:	mov    eax,0xa7ad8d9d
  40435b:	jge    0x404360
  40435d:	jno    0x40433e
  40435f:	(bad)  
  404360:	and    ah,BYTE PTR [ebx+0x5a]
  404363:	push   ebp
  404364:	imul   edi,DWORD PTR es:[ebx-0x5984cf14],0xffffffa0
  40436c:	int3   
  40436d:	jo     0x4043da
  40436f:	pop    es
  404370:	push   ebp
  404371:	adc    ebp,0x4e7f89c0
  404377:	shr    bh,cl
  404379:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40437a:	cmp    DWORD PTR [edi],0xd6c24ee7
  404380:	push   ss
  404381:	or     edx,DWORD PTR ds:[edi+edi*1-0x32eb0afa]
  404389:	outs   dx,BYTE PTR ds:[esi]
  40438a:	test   BYTE PTR [ebx],al
  40438c:	mov    eax,0x821ee39
  404391:	push   0xffffffa4
  404393:	push   esp
  404394:	push   edi
  404395:	cli    
  404396:	mov    eax,ds:0x384692dd
  40439b:	mov    al,ds:0x15d22c62
  4043a0:	ds xchg ebp,eax
  4043a2:	data16 (bad) 
  4043a4:	jne    0x4043b7
  4043a6:	adc    al,0xf8
  4043a8:	jno    0x4043b4
  4043aa:	test   BYTE PTR [esi],dl
  4043ac:	mov    al,0x52
  4043ae:	xchg   edx,eax
  4043af:	test   al,0xf6
  4043b1:	and    BYTE PTR [eax],bl
  4043b3:	and    DWORD PTR [edi-0x40fcb549],eax
  4043b9:	out    dx,eax
  4043ba:	outs   dx,DWORD PTR ds:[esi]
  4043bb:	adc    esi,DWORD PTR [eax+0x9616ae0]
  4043c1:	es clc 
  4043c3:	adc    al,0x8b
  4043c5:	jmp    0x1e68079a
  4043ca:	cwde   
  4043cb:	sub    BYTE PTR ds:0xa6ace479,0x32
  4043d2:	pop    edx
  4043d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043d4:	bound  ecx,QWORD PTR [ebp-0x10]
  4043d7:	scas   al,BYTE PTR es:[edi]
  4043d8:	out    dx,al
  4043d9:	lds    esp,FWORD PTR [ebx+eiz*4+0x5c]
  4043dd:	jns    0x404423
  4043df:	xchg   ebp,eax
  4043e0:	fmul   DWORD PTR [esi-0x42]
  4043e3:	xor    eax,0x7a8b4569
  4043e8:	call   0x81da:0xe1de6a6
  4043ef:	pushf  
  4043f0:	scas   al,BYTE PTR es:[edi]
  4043f1:	stos   DWORD PTR es:[edi],eax
  4043f2:	add    ebx,DWORD PTR [ebx-0x59]
  4043f5:	jecxz  0x404430
  4043f7:	pop    ds
  4043f8:	cmp    eax,DWORD PTR [esi+0x7]
  4043fb:	scas   eax,DWORD PTR es:[edi]
  4043fc:	call   0x85af:0xbf7d60ac
  404403:	test   DWORD PTR [edx],esp
  404405:	and    ch,BYTE PTR [esi+0x32]
  404408:	ficomp WORD PTR [ebp-0x839eb63]
  40440e:	inc    edi
  40440f:	pop    esp
  404410:	adc    DWORD PTR [eax+0x5e],ebx
  404413:	mov    ds:0xfb1f66ee,al
  404418:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404419:	push   esi
  40441a:	lahf   
  40441b:	push   eax
  40441c:	xchg   esp,eax
  40441d:	daa    
  40441e:	mov    esp,0xc0376255
  404423:	outs   dx,DWORD PTR ds:[esi]
  404424:	lods   eax,DWORD PTR ds:[esi]
  404425:	stos   DWORD PTR es:[edi],eax
  404426:	sbb    cl,BYTE PTR [ecx+0x24]
  404429:	pextrw esp,(bad),0xc5
  40442b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40442c:	and    edx,edx
  40442e:	call   0xd4f1fb50
  404433:	inc    ebx
  404434:	push   ebp
  404435:	mov    al,0x4f
  404437:	lea    edi,[esi+0x60e698bd]
  40443d:	add    DWORD PTR [ecx-0x33],ebx
  404440:	or     ebp,edx
  404442:	in     al,dx
  404443:	pop    edi
  404444:	adc    DWORD PTR [edx+ebp*4+0x517d1159],edx
  40444b:	out    dx,eax
  40444c:	lock rol DWORD PTR [esi-0x21ce2727],0xe5
  404454:	in     eax,0xd0
  404456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404457:	jmp    0x40446b
  404459:	xchg   edi,eax
  40445a:	mov    ecx,0xfff99451
  40445f:	je     0x404428
  404461:	jge    0x40442b
  404463:	cwde   
  404464:	aas    
  404465:	clc    
  404466:	and    al,0xda
  404468:	icebp  
  404469:	fnsave ds:0x8d67cb86
  40446f:	dec    ebp
  404470:	xchg   esp,eax
  404471:	jns    0x404416
  404473:	mov    al,0x8e
  404475:	jae    0x4044e7
  404477:	repz cmp al,0x9f
  40447a:	out    0x57,eax
  40447c:	mov    eax,0xb6b51ec3
  404481:	frstor [edx]
  404483:	xlat   BYTE PTR ds:[ebx]
  404484:	push   0xffffffaa
  404486:	and    ch,cl
  404488:	bound  edi,QWORD PTR [edx-0x4df1a77c]
  40448e:	scas   eax,DWORD PTR es:[edi]
  40448f:	aad    0xb
  404491:	and    eax,0x842ce5c3
  404496:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404497:	mov    al,ds:0xc3b09df6
  40449c:	es xor eax,0xad9a8e30
  4044a2:	stos   BYTE PTR es:[edi],al
  4044a3:	jge    0x40445c
  4044a5:	inc    ebp
  4044a6:	add    eax,0x95d80382
  4044ab:	ret    0xe489
  4044ae:	jae    0x404507
  4044b0:	std    
  4044b1:	pop    edi
  4044b2:	xchg   DWORD PTR [edx-0x58fefbfb],eax
  4044b8:	dec    edi
  4044b9:	xlat   BYTE PTR ds:[ebx]
  4044ba:	mov    eax,0x3470b33b
  4044bf:	pop    ecx
  4044c0:	stc    
  4044c1:	add    al,0xab
  4044c3:	dec    ecx
  4044c4:	lock sti 
  4044c6:	pop    ds
  4044c7:	mov    cs,WORD PTR [esi-0x75]
  4044ca:	ror    DWORD PTR [esi+0x20c5cd93],0xf5
  4044d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044d2:	ret    0xa5f2
  4044d5:	femms  
  4044d7:	stc    
  4044d8:	aam    0x99
  4044da:	adc    eax,esp
  4044dc:	sbb    bh,BYTE PTR [ebp+0x1768c84c]
  4044e2:	cmp    eax,0xa9d87dab
  4044e7:	call   0x99379db5
  4044ec:	fnstcw WORD PTR [edx-0x22211f03]
  4044f2:	cmp    ch,BYTE PTR [ebx]
  4044f4:	xchg   esi,eax
  4044f5:	sub    BYTE PTR [esi-0x6f],dh
  4044f8:	push   ebp
  4044f9:	push   esi
  4044fa:	push   ss
  4044fb:	stos   BYTE PTR es:[edi],al
  4044fc:	loope  0x40451d
  4044fe:	mov    ecx,0x5d3c4365
  404503:	push   ebx
  404504:	pop    ds
  404505:	lods   eax,DWORD PTR ds:[esi]
  404506:	dec    eax
  404507:	jnp    0x40450d
  404509:	scas   al,BYTE PTR es:[edi]
  40450a:	stos   BYTE PTR es:[edi],al
  40450b:	sub    al,0xfb
  40450d:	pop    ecx
  40450e:	push   ds
  40450f:	iret   
  404510:	inc    eax
  404511:	mov    bh,0x9b
  404513:	sub    al,0x77
  404515:	cdq    
  404516:	xor    eax,0xbcd3d02d
  40451b:	xchg   BYTE PTR cs:[edi+edi*8+0x26],dh
  404520:	fwait
  404521:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404522:	inc    esi
  404523:	out    0x75,al
  404525:	hlt    
  404526:	les    ecx,FWORD PTR [ebx]
  404528:	in     eax,0xd6
  40452a:	dec    eax
  40452b:	and    DWORD PTR [edi-0x1a41aff8],edx
  404531:	sbb    DWORD PTR [ebp-0x3d],esi
  404534:	or     eax,0xcedaec24
  404539:	fidivr WORD PTR [ebp+0x3e]
  40453c:	jmp    0xb6f0:0xe916c632
  404543:	cli    
  404544:	test   eax,0x88b7d7a2
  404549:	cmp    al,0x58
  40454b:	inc    edi
  40454c:	inc    edi
  40454d:	repz or BYTE PTR [ebx+0x6878a84d],cl
  404554:	push   esp
  404555:	shl    BYTE PTR [edx],1
  404557:	mov    al,0xd6
  404559:	int3   
  40455a:	mov    al,0xc9
  40455c:	xchg   ebp,eax
  40455d:	mov    eax,0x92bb5513
  404562:	push   ds
  404563:	xor    esi,eax
  404565:	and    esi,DWORD PTR [ecx-0x6e4b78f]
  40456b:	les    ebx,FWORD PTR [esi+0x715cf509]
  404571:	in     al,0xc7
  404573:	repz or edi,DWORD PTR [ecx-0x20]
  404577:	shr    BYTE PTR ds:0xb35eaa6a,1
  40457d:	(bad)  
  40457e:	jbe    0x404556
  404580:	xchg   edi,eax
  404581:	jns    0x4045b0
  404583:	aad    0x63
  404585:	xchg   DWORD PTR [ebp-0x2f],edx
  404588:	mov    cl,0x6b
  40458a:	pop    ecx
  40458b:	(bad)  
  40458c:	or     edi,DWORD PTR [eax+0x16783eb]
  404592:	sahf   
  404593:	test   DWORD PTR [esi+eax*4+0x44],ebx
  404597:	jmp    0xdbc67c99
  40459c:	push   ds
  40459d:	jns    0x404559
  40459f:	loope  0x4045ab
  4045a1:	jle    0x404611
  4045a3:	ins    BYTE PTR es:[edi],dx
  4045a4:	sbb    dl,BYTE PTR [esp+ebp*1-0x35]
  4045a8:	jg     0x40456a
  4045aa:	pop    ebp
  4045ab:	popa   
  4045ac:	cmc    
  4045ad:	cli    
  4045ae:	popa   
  4045af:	cwde   
  4045b0:	adc    BYTE PTR [esi-0x76d32078],al
  4045b6:	push   edi
  4045b7:	mov    ch,BYTE PTR [esi+0x41788217]
  4045bd:	out    0x73,al
  4045bf:	and    al,0xfe
  4045c1:	mov    BYTE PTR [ebp-0x4e],cl
  4045c4:	add    esi,DWORD PTR [ebp+0x7f5c7de2]
  4045ca:	jmp    0xd7e638
  4045cf:	sbb    al,0xc5
  4045d1:	cmp    eax,0x92403e52
  4045d6:	jg     0x404579
  4045d8:	sub    ecx,ecx
  4045da:	inc    ecx
  4045db:	(bad)  
  4045dc:	ins    DWORD PTR es:[edi],dx
  4045dd:	mov    ds:0x701c782d,eax
  4045e2:	mov    eax,0x7ae4bf01
  4045e7:	loop   0x4045dd
  4045e9:	test   al,0x84
  4045eb:	mov    ecx,0xf32755d8
  4045f0:	push   0x83c90f41
  4045f5:	xchg   esi,eax
  4045f6:	push   0x3c
  4045f8:	popa   
  4045f9:	call   0xfa5c63c
  4045fe:	ret    
  4045ff:	inc    ecx
  404600:	mov    edi,0x2d51bb60
  404605:	pop    ds
  404606:	dec    al
  404608:	push   0x586e3bb2
  40460d:	xchg   edx,eax
  40460e:	adc    BYTE PTR [eax-0x1405449f],0x11
  404615:	ret    
  404616:	outs   dx,DWORD PTR ds:[esi]
  404617:	xchg   ebx,eax
  404618:	mov    ds:0xf54db7d0,eax
  40461d:	(bad)  
  40461e:	fsub   st(0),st
  404620:	out    dx,eax
  404621:	jbe    0x4045e9
  404623:	cmp    al,0xe
  404625:	jb     0x40464f
  404627:	inc    edi
  404628:	fisubr DWORD PTR [edi-0x3584ef2c]
  40462e:	js     0x40465f
  404630:	mov    dl,BYTE PTR ds:0x87d51130
  404636:	daa    
  404637:	and    eax,DWORD PTR [edi]
  404639:	clc    
  40463a:	push   edx
  40463b:	ss pop ecx
  40463d:	pop    ss
  40463e:	in     eax,dx
  40463f:	push   esp
  404640:	fs pop eax
  404642:	cmc    
  404643:	fbstp  TBYTE PTR [ebp+0x65e7af6f]
  404649:	lahf   
  40464a:	pop    eax
  40464b:	mov    ah,0x43
  40464d:	mov    ds:0xe4a10ac9,al
  404652:	adc    al,BYTE PTR [ebp+0x58c1d52a]
  404658:	test   eax,0x32b92b04
  40465d:	inc    edi
  40465e:	test   DWORD PTR [ebp+0x20],edi
  404661:	or     eax,0x7d1e9740
  404666:	stc    
  404667:	(bad)  
  404668:	stos   DWORD PTR es:[edi],eax
  404669:	sbb    edi,DWORD PTR [edi-0x57]
  40466c:	adc    BYTE PTR [ebx],bl
  40466e:	or     BYTE PTR [ebx-0x26978a34],cl
  404674:	les    edi,FWORD PTR [edx-0x80]
  404677:	adc    DWORD PTR [ecx+edi*2],esi
  40467a:	adc    BYTE PTR [edi],0xcd
  40467d:	hlt    
  40467e:	lahf   
  40467f:	or     ebx,DWORD PTR ds:0x981ddf8f
  404685:	js     0x404705
  404687:	or     DWORD PTR [ecx],ecx
  404689:	mov    eax,ds:0x62ee5b77
  40468e:	inc    ebp
  40468f:	loopne 0x40470c
  404691:	aaa    
  404692:	scas   eax,DWORD PTR es:[edi]
  404693:	loopne 0x40464f
  404695:	in     eax,dx
  404696:	mov    edx,ss
  404698:	xchg   esp,eax
  404699:	and    BYTE PTR [edx],dl
  40469b:	fisub  DWORD PTR ds:0x6124badf
  4046a1:	loop   0x40468c
  4046a3:	dec    eax
  4046a4:	js     0x4046cb
  4046a6:	lock stos DWORD PTR es:[edi],eax
  4046a8:	aaa    
  4046a9:	lods   al,BYTE PTR ds:[esi]
  4046aa:	mov    bh,0x6d
  4046ac:	xchg   ebx,eax
  4046ad:	cli    
  4046ae:	push   cs
  4046af:	mov    ah,0xca
  4046b1:	push   ecx
  4046b2:	(bad)  
  4046b3:	aaa    
  4046b4:	push   0xffffffab
  4046b6:	pop    eax
  4046b7:	push   ss
  4046b8:	dec    eax
  4046b9:	inc    ebx
  4046ba:	pop    edx
  4046bb:	sti    
  4046bc:	fadd   QWORD PTR ds:0xeab96372
  4046c2:	add    esi,DWORD PTR [ebp-0x550c858e]
  4046c8:	rcr    BYTE PTR [esi+0x3e],1
  4046cb:	sub    al,0xfe
  4046cd:	repnz mov ds:0x7e7491f,eax
  4046d3:	ins    DWORD PTR es:[edi],dx
  4046d4:	mov    edi,0xa6d523aa
  4046d9:	stos   DWORD PTR es:[edi],eax
  4046da:	mov    ds:0xb08ae4e0,eax
  4046df:	(bad)  [esi+0x71]
  4046e2:	fsubr  st(7),st
  4046e4:	and    ecx,DWORD PTR [esi]
  4046e6:	loope  0x4046a9
  4046e8:	arpl   WORD PTR [ecx+0x6946ea56],sp
  4046ee:	popa   
  4046ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046f0:	xor    BYTE PTR [eax-0x17],dh
  4046f3:	hlt    
  4046f4:	(bad)  
  4046f5:	fbstp  TBYTE PTR cs:[eax+0x4b]
  4046f9:	test   eax,0xf961c2e
  4046fe:	je     0x40472a
  404700:	inc    ebx
  404701:	cmp    DWORD PTR [ebp+0x7322539c],0xffffffdf
  404708:	mov    eax,ds:0xec4c3997
  40470d:	jne    0x404787
  40470f:	mov    eax,ds:0xf58c8009
  404714:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404715:	sub    DWORD PTR [ecx+0x74],0x53
  404719:	loop   0x40470d
  40471b:	loope  0x40470c
  40471d:	out    dx,eax
  40471e:	inc    esi
  40471f:	jnp    0x404781
  404721:	add    BYTE PTR [ebx+0x2fc0ad43],0x95
  404728:	xchg   esp,eax
  404729:	lahf   
  40472a:	cwde   
  40472b:	add    ah,BYTE PTR [ecx]
  40472d:	sbb    ecx,0x1804570a
  404733:	fdivr  DWORD PTR [ebx-0x4113614c]
  404739:	cld    
  40473a:	fidiv  DWORD PTR [edx+0x23]
  40473d:	fistp  WORD PTR [eax+0x38a084ce]
  404743:	pop    edx
  404744:	int    0x89
  404746:	arpl   WORD PTR [eax],ax
  404748:	xor    al,0x27
  40474a:	push   ds
  40474b:	pop    eax
  40474c:	sub    BYTE PTR [ecx+0x65],bh
  40474f:	jns    0x4046d1
  404751:	mov    eax,0xa9889642
  404756:	inc    edx
  404757:	jl     0x4047c2
  404759:	mov    dh,0xba
  40475b:	jb     0x404768
  40475d:	mov    edi,0xa34b1167
  404762:	jae    0x404785
  404764:	std    
  404765:	test   BYTE PTR [ecx-0x4bac1b56],bl
  40476b:	jne    0x4046ef
  40476d:	adc    al,0xd4
  40476f:	pop    ebp
  404770:	or     edi,DWORD PTR [eax]
  404772:	pop    esp
  404773:	or     esi,0x3f
  404776:	test   eax,0x83580b0e
  40477b:	fincstp 
  40477d:	pop    ebx
  40477e:	jmp    0xa700:0x30ce1487
  404785:	shl    ebp,0xdb
  404788:	(bad)
  40478b:	out    0x24,al
  40478d:	sahf   
  40478e:	aad    0x77
  404790:	jbe    0x4047ff
  404792:	addr16 push cs
  404794:	(bad)  
  404795:	shl    DWORD PTR [esi-0x4fc9bb61],1
  40479b:	adc    al,0xcc
  40479d:	sub    al,BYTE PTR [eax+0xc]
  4047a0:	into   
  4047a1:	mov    eax,ds:0x8fa36392
  4047a6:	nop
  4047a7:	sub    edx,DWORD PTR [eax+0x33]
  4047aa:	mov    dh,0x81
  4047ac:	and    esp,DWORD PTR [esi]
  4047ae:	aad    0xb9
  4047b0:	loopne 0x4047ad
  4047b2:	enter  0x3d5,0x29
  4047b6:	sbb    eax,0xd55671cb
  4047bb:	jmp    0x40480b
  4047bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047be:	add    ebx,DWORD PTR [edx-0x6200a531]
  4047c4:	jnp    0x404805
  4047c6:	inc    eax
  4047c7:	ja     0x4047d8
  4047c9:	dec    edi
  4047ca:	pushf  
  4047cb:	outs   dx,DWORD PTR ds:[esi]
  4047cc:	push   esi
  4047cd:	dec    esp
  4047ce:	repz mov edx,0x585f58e4
  4047d4:	pop    ecx
  4047d5:	mov    ds:0x5510b7a3,al
  4047da:	dec    esi
  4047db:	pop    es
  4047dc:	push   esi
  4047dd:	mov    ebp,0x8050ec67
  4047e2:	mov    esi,ebp
  4047e4:	push   edx
  4047e5:	adc    eax,eax
  4047e7:	addr16 or bh,bh
  4047ea:	jb     0x40484d
  4047ec:	sbb    ebx,0xc83a5ae2
  4047f2:	out    0x54,al
  4047f4:	inc    eax
  4047f5:	xchg   esi,eax
  4047f6:	xlat   BYTE PTR ds:[ebx]
  4047f7:	nop
  4047f8:	jge    0x4047ac
  4047fa:	xchg   ebp,eax
  4047fb:	and    BYTE PTR [eax+0x6cb538ca],ah
  404801:	mov    DWORD PTR [ecx+0x4e1c3fcf],ebx
  404807:	int3   
  404808:	cld    
  404809:	shr    BYTE PTR [esi+ebp*1],cl
  40480c:	mov    fs,WORD PTR [ecx]
  40480e:	shl    DWORD PTR [ebx+ebx*4-0x1],cl
  404812:	push   eax
  404813:	inc    edx
  404814:	inc    ecx
  404815:	xchg   edi,eax
  404816:	outs   dx,BYTE PTR ds:[esi]
  404817:	stos   DWORD PTR es:[edi],eax
  404818:	push   edi
  404819:	xchg   ecx,eax
  40481a:	icebp  
  40481b:	sub    DWORD PTR [ecx-0x8],ebx
  40481e:	cmp    al,0x8f
  404820:	mov    edx,0xb0ce868
  404825:	(bad)  [esi]
  404827:	sbb    ch,BYTE PTR [edx+0x14]
  40482a:	dec    esi
  40482b:	fmulp  st(5),st
  40482d:	scas   al,BYTE PTR es:[edi]
  40482e:	js     0x4047c9
  404830:	and    BYTE PTR [ebp+ecx*4-0x10839825],dl
  404837:	clc    
  404838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404839:	add    DWORD PTR [eax-0x48],edx
  40483c:	(bad)  
  40483d:	aad    0x4f
  40483f:	pop    es
  404840:	adc    al,0x60
  404842:	aad    0x6c
  404844:	call   0x23a3a7ad
  404849:	pop    edi
  40484a:	add    BYTE PTR [ebp+0x13],dh
  40484d:	call   0x996:0x92e350d3
  404854:	in     al,dx
  404855:	push   ds
  404856:	xchg   BYTE PTR [edi],cl
  404858:	fwait
  404859:	js     0x40488a
  40485b:	cli    
  40485c:	push   0x61
  40485e:	int    0x9f
  404860:	nop
  404861:	retf   0xc68e
  404864:	jmp    0xc31558c9
  404869:	bound  edx,QWORD PTR [ecx-0x59d5bf6b]
  40486f:	stos   BYTE PTR es:[edi],al
  404870:	jp     0x40482b
  404872:	and    ecx,esi
  404874:	rcl    al,cl
  404876:	jae    0x40482b
  404878:	adc    ah,cl
  40487a:	mov    ebp,0xe4ae853c
  40487f:	inc    ebp
  404880:	cdq    
  404881:	hlt    
  404882:	(bad)  
  404883:	in     eax,0x22
  404885:	inc    ebx
  404886:	push   edx
  404887:	jp     0x40485d
  404889:	cmp    al,0x58
  40488b:	inc    edx
  40488c:	inc    edx
  40488d:	inc    edi
  40488e:	andps  xmm6,XMMWORD PTR [ecx]
  404891:	leave  
  404892:	ins    BYTE PTR es:[edi],dx
  404893:	and    eax,0xa0b151cd
  404898:	jl     0x404860
  40489a:	jp     0x404845
  40489c:	in     eax,dx
  40489d:	jle    0x4048cf
  40489f:	dec    edi
  4048a0:	cld    
  4048a1:	pop    ds
  4048a2:	xchg   ebp,eax
  4048a3:	shl    BYTE PTR [edi-0x78453587],cl
  4048a9:	es inc edi
  4048ab:	and    dh,BYTE PTR [eax-0x6e]
  4048ae:	dec    eax
  4048af:	sar    ch,0x49
  4048b2:	stos   DWORD PTR es:[edi],eax
  4048b3:	into   
  4048b4:	imul   esi,DWORD PTR [eax+ebp*2-0x78],0xff21411c
  4048bc:	shr    DWORD PTR [ecx-0x1f],0x7
  4048c0:	sbb    BYTE PTR [ecx],0xf6
  4048c3:	sbb    al,0x4d
  4048c5:	imul   eax,DWORD PTR [esi],0x7035ca3e
  4048cb:	and    al,BYTE PTR [ebx+0x1a7da65b]
  4048d1:	push   0x25
  4048d3:	jns    0x4048d9
  4048d5:	pop    edi
  4048d6:	or     ebx,ebp
  4048d8:	add    al,0x5b
  4048da:	test   DWORD PTR [ebx-0x6],ebx
  4048dd:	pop    esi
  4048de:	pop    esp
  4048df:	mov    edx,0xeff09081
  4048e4:	stos   BYTE PTR es:[edi],al
  4048e5:	gs (bad) 
  4048e7:	pop    esp
  4048e8:	(bad)  
  4048e9:	icebp  
  4048ea:	sbb    cl,BYTE PTR [ebx-0x1449221a]
  4048f0:	and    BYTE PTR [ecx-0x7a],ch
  4048f3:	push   ecx
  4048f4:	fs pop esp
  4048f6:	out    dx,eax
  4048f7:	in     al,0x4b
  4048f9:	jne    0x40487b
  4048fb:	es xor eax,0xff4f722f
  404901:	push   0xe9a0f0ae
  404906:	sbb    eax,0x5029a2fa
  40490b:	jno    0x404943
  40490d:	scas   eax,DWORD PTR es:[edi]
  40490e:	std    
  40490f:	gs push es
  404911:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404912:	cmp    al,0x68
  404914:	dec    edi
  404915:	cmp    edx,DWORD PTR [edi-0x308bdfea]
  40491b:	xchg   esi,eax
  40491c:	mov    edx,0x23c889ec
  404921:	adc    esp,DWORD PTR [esi+0x45]
  404924:	jne    0x404901
  404926:	aad    0xd8
  404928:	sub    ecx,esi
  40492a:	jmp    0xf46b:0xe1643668
  404931:	sub    DWORD PTR [eax],eax
  404933:	push   eax
  404934:	jp     0x40490c
  404936:	aas    
  404937:	jg     0x404920
  404939:	jle    0x40495f
  40493b:	xor    dl,dl
  40493d:	sbb    eax,0x217ba2b7
  404942:	inc    esi
  404943:	cdq    
  404944:	jno    0x40493c
  404946:	popf   
  404947:	lock shl BYTE PTR [esi+0x65],cl
  40494b:	(bad)  
  40494c:	mov    edx,0x49f78015
  404951:	push   ss
  404952:	rcl    BYTE PTR [ebx],0xf8
  404955:	pop    edi
  404956:	and    bl,BYTE PTR [eax+0x34a321e6]
  40495c:	js     0x404950
  40495e:	jo     0x4048f2
  404960:	sbb    eax,0x43882075
  404965:	cmp    bh,BYTE PTR [ecx]
  404967:	dec    ebx
  404968:	out    0x5b,al
  40496a:	adc    ch,BYTE PTR [ebp+0x2fb878a3]
  404970:	repnz or esi,DWORD PTR ds:0xec0b0169
  404977:	mov    DWORD PTR [edx+0x57],esi
  40497a:	jp     0x4049ba
  40497c:	int3   
  40497d:	cmp    ah,bh
  40497f:	(bad)  
  404981:	push   edx
  404982:	mov    bh,0xf5
  404984:	mov    bl,ch
  404986:	push   edi
  404987:	pop    ds
  404988:	sbb    BYTE PTR [esi-0x52],dl
  40498b:	push   esp
  40498c:	mov    gs,WORD PTR [edx+ebx*4-0x6eac9b4a]
  404993:	fsubr  DWORD PTR [ecx+0xa]
  404996:	xchg   esi,eax
  404997:	fwait
  404998:	push   ds
  404999:	or     al,0x3a
  40499b:	inc    edi
  40499c:	pop    ebx
  40499d:	scas   eax,DWORD PTR es:[edi]
  40499e:	or     cl,BYTE PTR [ebp-0x2e]
  4049a1:	inc    edx
  4049a2:	mov    ebp,0x73537d29
  4049a7:	cmp    edi,DWORD PTR [eax-0x23]
  4049aa:	mov    BYTE PTR [eax-0x42],cl
  4049ad:	pop    ebx
  4049ae:	gs stc 
  4049b0:	sti    
  4049b1:	or     eax,0x24fc31bd
  4049b6:	pop    edi
  4049b7:	sub    dh,dl
  4049b9:	clc    
  4049ba:	push   ss
  4049bb:	xchg   edi,eax
  4049bc:	cmp    DWORD PTR [esi-0x3b7fa683],0xaa984193
  4049c6:	adc    eax,0xc8ff29e1
  4049cb:	adc    eax,0x8a1912b2
  4049d0:	pop    esp
  4049d1:	pop    ecx
  4049d2:	or     ecx,eax
  4049d4:	leave  
  4049d5:	pop    es
  4049d6:	xchg   esp,eax
  4049d7:	pop    es
  4049d8:	add    ah,BYTE PTR [ebp+0x41]
  4049db:	sub    BYTE PTR [edx],0x4d
  4049de:	mov    esi,fs
  4049e0:	pop    eax
  4049e1:	jbe    0x40497d
  4049e3:	adc    BYTE PTR [edx+0x4f],dh
  4049e6:	fst    st(7)
  4049e8:	xchg   edi,eax
  4049e9:	jb     0x404a0f
  4049eb:	(bad)  
  4049ec:	jo     0x404a0b
  4049ee:	xor    dh,dh
  4049f0:	mov    ebx,0xb7d51d5d
  4049f5:	xchg   BYTE PTR [ecx],dh
  4049f7:	inc    ebx
  4049f8:	push   ebx
  4049f9:	sar    DWORD PTR [ebx],cl
  4049fb:	mov    ah,0xe2
  4049fd:	mov    edi,0x11d3adf9
  404a02:	test   ecx,edi
  404a04:	sbb    DWORD PTR [ebp+0xc3f0793],ecx
  404a0a:	add    esp,eax
  404a0c:	push   edi
  404a0d:	mov    eax,DWORD PTR ds:0xbf13a722
  404a13:	stos   DWORD PTR es:[edi],eax
  404a14:	sar    BYTE PTR [edi+0x48],cl
  404a17:	es inc ebp
  404a19:	xchg   esi,eax
  404a1a:	inc    edi
  404a1b:	mov    dl,0x6c
  404a1d:	add    eax,0xbf99d480
  404a22:	shl    DWORD PTR [edi-0x3c],0x69
  404a26:	dec    eax
  404a27:	sub    DWORD PTR [edi],edx
  404a29:	sub    al,0xeb
  404a2b:	mov    eax,ds:0x11b0e015
  404a30:	sbb    eax,DWORD PTR [eax-0x2f392623]
  404a36:	mov    cl,0x77
  404a38:	scas   al,BYTE PTR es:[edi]
  404a39:	lds    ecx,FWORD PTR [edx+0x77]
  404a3c:	sub    edi,DWORD PTR [esi+0x62]
  404a3f:	push   ebp
  404a40:	sbb    ch,dl
  404a42:	scas   al,BYTE PTR es:[edi]
  404a43:	pop    ss
  404a44:	sub    eax,0x7250e65b
  404a49:	adc    dh,BYTE PTR [ecx]
  404a4b:	rcr    al,0xf1
  404a4e:	popf   
  404a4f:	mov    BYTE PTR [edi+0x70da2580],cl
  404a55:	pop    eax
  404a56:	inc    ecx
  404a57:	je     0x404aad
  404a59:	sbb    ecx,0xd244ef2a
  404a5f:	and    ecx,DWORD PTR [eax+0x6ea23a62]
  404a65:	mov    ch,0xa1
  404a67:	loop   0x404a64
  404a69:	fwait
  404a6a:	lds    ebp,FWORD PTR [ebx]
  404a6c:	xchg   DWORD PTR fs:[edi+0x0],ebx
  404a70:	pop    esi
  404a71:	mov    ecx,0x43e48ee9
  404a76:	aad    0x39
  404a78:	das    
  404a79:	or     eax,eax
  404a7b:	inc    edi
  404a7c:	test   DWORD PTR [edx+edi*8+0x76],0xd8425b2
  404a84:	loop   0x404a9c
  404a86:	and    BYTE PTR [edi],bh
  404a88:	rol    BYTE PTR [edi-0x6fc58a50],cl
  404a8e:	inc    ebp
  404a8f:	shl    BYTE PTR [ebx-0x7d780c92],cl
  404a95:	adc    al,0x36
  404a97:	(bad)  
  404a98:	stos   DWORD PTR es:[edi],eax
  404a99:	(bad)
  404a9c:	aam    0x3f
  404a9e:	std    
  404a9f:	dec    esp
  404aa0:	fidivr WORD PTR [ebx]
  404aa2:	retf   0xc39b
  404aa5:	aas    
  404aa6:	mov    edx,0x9cbb9b3d
  404aab:	dec    esi
  404aac:	pusha  
  404aad:	mov    ebp,0x465e0cf1
  404ab2:	adc    al,0x33
  404ab4:	icebp  
  404ab5:	pop    ss
  404ab6:	mul    DWORD PTR [edi-0x14c0cc05]
  404abc:	xor    ah,al
  404abe:	push   ecx
  404abf:	int3   
  404ac0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ac1:	push   esi
  404ac2:	mov    al,ds:0x6df5fa5b
  404ac7:	out    0x5,eax
  404ac9:	iret   
  404aca:	shr    BYTE PTR [ebp+0x60],1
  404acd:	xchg   esi,eax
  404ace:	mov    ecx,0x1160b526
  404ad3:	out    dx,eax
  404ad4:	push   edi
  404ad5:	stc    
  404ad6:	test   esi,0xaf45295c
  404adc:	sub    edx,DWORD PTR [eax]
  404ade:	cmp    edi,DWORD PTR [edx+eax*1]
  404ae1:	jmp    0x404b1b
  404ae3:	call   0xe99b:0x1990dd24
  404aea:	addr16 inc ebp
  404aec:	and    al,0x19
  404aee:	aam    0xae
  404af0:	pop    es
  404af1:	or     al,0xcc
  404af3:	xor    eax,DWORD PTR [edi-0x1864c46]
  404af9:	jge    0x404acb
  404afb:	in     eax,0xea
  404afd:	les    edi,FWORD PTR [edi]
  404aff:	test   eax,0x4291bcff
  404b04:	out    0x7a,al
  404b06:	inc    eax
  404b07:	jl     0x404b19
  404b09:	or     BYTE PTR [ecx+0x43],0x7c
  404b0d:	cwde   
  404b0e:	bound  esp,QWORD PTR [eax]
  404b10:	aaa    
  404b11:	sahf   
  404b12:	xchg   esi,eax
  404b13:	push   edi
  404b14:	xchg   DWORD PTR [ebx-0x78988399],ebx
  404b1a:	pop    ebp
  404b1b:	pushf  
  404b1c:	stos   DWORD PTR es:[edi],eax
  404b1d:	aad    0x77
  404b1f:	mov    fs,edi
  404b21:	mov    WORD PTR [edx-0x6c],?
  404b24:	fiadd  WORD PTR [edx]
  404b26:	cmp    BYTE PTR [ecx],0xfd
  404b29:	or     DWORD PTR [edi-0x7433c529],esi
  404b2f:	jne    0x404ae1
  404b31:	push   esp
  404b32:	or     ch,ch
  404b34:	shr    DWORD PTR ds:0x40c69ff3,1
  404b3a:	aas    
  404b3b:	ror    DWORD PTR [ebx+0xed2a2d5],cl
  404b41:	push   ss
  404b42:	jge    0x404b46
  404b44:	in     eax,0xe7
  404b46:	xor    BYTE PTR [ecx],ah
  404b48:	popf   
  404b49:	adc    al,0x64
  404b4b:	retf   0x2a93
  404b4e:	adc    eax,ecx
  404b50:	pop    ecx
  404b51:	xlat   BYTE PTR ds:[ebx]
  404b52:	ja     0x404ae6
  404b54:	scas   al,BYTE PTR es:[edi]
  404b55:	add    DWORD PTR [edx-0x4f],esi
  404b58:	xchg   ecx,eax
  404b59:	stos   DWORD PTR es:[edi],eax
  404b5a:	sub    DWORD PTR [esp+ebx*1-0x6f],ebp
  404b5e:	mov    ebx,0x5a574709
  404b63:	push   edi
  404b64:	and    eax,0x70bd0e57
  404b69:	jecxz  0x404afa
  404b6b:	pop    ebp
  404b6c:	push   0xc36a5c9c
  404b71:	ja     0x404af9
  404b73:	pop    edi
  404b74:	loopne 0x404bbe
  404b76:	mov    eax,ds:0x92ed9b4f
  404b7b:	push   es
  404b7c:	leave  
  404b7d:	and    BYTE PTR [ebp-0x79dc7d95],bl
  404b83:	aaa    
  404b84:	mov    ebx,0xf912d3ba
  404b89:	call   0x4624:0x1e02ac08
  404b90:	mov    esi,0x27b6f524
  404b95:	mov    ebx,0x488172d7
  404b9a:	mov    edi,0x82ba1d5
  404b9f:	pop    edx
  404ba0:	inc    edi
  404ba1:	cmp    BYTE PTR [edx],dh
  404ba3:	add    al,0xde
  404ba5:	pop    eax
  404ba6:	mov    WORD PTR [esi+0x7a],es
  404ba9:	pop    edi
  404baa:	out    dx,eax
  404bab:	test   BYTE PTR [edi-0x53c86420],0x8a
  404bb2:	(bad)  
  404bb3:	sub    al,BYTE PTR [ecx-0x15]
  404bb6:	fnstcw WORD PTR [eax-0x3e3306f0]
  404bbc:	mov    WORD PTR [edx+0x72],es
  404bbf:	fsub   DWORD PTR [ecx]
  404bc1:	mov    dh,0xf2
  404bc3:	cmp    BYTE PTR [ecx-0x6b],0x5a
  404bc7:	bound  edi,QWORD PTR [eax-0x3c]
  404bca:	fs jns 0x404c04
  404bcd:	mov    edi,0x2eecd91a
  404bd2:	xchg   esp,eax
  404bd3:	inc    edi
  404bd4:	ja     0x404b6c
  404bd6:	jmp    0x1f36:0x3e6dcfc9
  404bdd:	xchg   edx,eax
  404bde:	loope  0x404b90
  404be0:	xchg   BYTE PTR [eax],al
  404be2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404be3:	mov    edx,0xcfa87bd4
  404be8:	out    dx,al
  404be9:	js     0x404c14
  404beb:	imul   esi,DWORD PTR [esi-0x46cce066],0x3a0adffb
  404bf5:	push   ss
  404bf6:	add    dl,bl
  404bf8:	pusha  
  404bf9:	popa   
  404bfa:	cdq    
  404bfb:	mov    al,0xeb
  404bfd:	hlt    
  404bfe:	jo     0x404bcc
  404c00:	or     ch,BYTE PTR [ebx-0x2]
  404c03:	and    edi,DWORD PTR [eax+0x19aadd39]
  404c09:	rol    DWORD PTR [esi-0x6d8c7f3a],cl
  404c0f:	jno    0x404c23
  404c11:	(bad)  
  404c12:	cmp    dl,ah
  404c14:	push   es
  404c15:	loop   0x404c09
  404c17:	das    
  404c18:	dec    edx
  404c19:	cmp    al,0xb0
  404c1b:	pop    eax
  404c1c:	or     eax,0x91b522f
  404c21:	ins    BYTE PTR es:[edi],dx
  404c22:	mov    ebx,0x7bfc2e33
  404c27:	inc    ebp
  404c28:	push   ebp
  404c29:	mov    ss,WORD PTR [ecx]
  404c2b:	popa   
  404c2c:	inc    edi
  404c2d:	cmp    al,0x81
  404c2f:	jo     0x404c13
  404c31:	cmp    al,0xb3
  404c33:	mov    ecx,ebp
  404c35:	sbb    cl,cl
  404c37:	loop   0x404ca2
  404c39:	cld    
  404c3a:	jmp    0xbb87:0xbeee1e3f
  404c41:	int3   
  404c42:	sub    DWORD PTR [esi],esi
  404c44:	mov    bl,0x83
  404c46:	pop    ebp
  404c47:	mov    bl,0xa1
  404c49:	adc    eax,DWORD PTR [edi]
  404c4b:	ins    BYTE PTR es:[edi],dx
  404c4c:	dec    esp
  404c4d:	(bad)  
  404c4e:	(bad)  
  404c50:	add    BYTE PTR [ebx-0x5d],ah
  404c53:	outs   dx,BYTE PTR ds:[esi]
  404c54:	pop    es
  404c55:	add    eax,0x985448a0
  404c5a:	jecxz  0x404cd9
  404c5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c5d:	(bad)  
  404c5e:	jle    0x404cc6
  404c60:	inc    esi
  404c61:	leave  
  404c62:	or     BYTE PTR [edx-0x20],0x44
  404c66:	xchg   edi,eax
  404c67:	out    dx,eax
  404c68:	sti    
  404c69:	div    DWORD PTR [edx-0x203c5f42]
  404c6f:	xchg   DWORD PTR [eax-0x73c30e92],edx
  404c75:	or     eax,0xc8449733
  404c7a:	jp     0x404c0d
  404c7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c7d:	add    BYTE PTR [ebx-0x16974bb8],cl
  404c83:	sbb    esi,DWORD PTR [edx-0xa]
  404c86:	mov    dl,0x82
  404c88:	clc    
  404c89:	in     al,0x2e
  404c8b:	inc    esi
  404c8c:	mov    edi,eax
  404c8e:	sub    al,0x2a
  404c90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c91:	push   ebx
  404c92:	fist   DWORD PTR [edx+0x79c32288]
  404c98:	cmp    eax,0xe8e15a1a
  404c9d:	js     0x404c56
  404c9f:	xor    ebx,esi
  404ca1:	mov    bh,0xae
  404ca3:	adc    cl,bh
  404ca5:	inc    DWORD PTR [ebx]
  404ca7:	dec    eax
  404ca8:	mov    al,0x41
  404caa:	enter  0xfda9,0x68
  404cae:	mov    al,0x6f
  404cb0:	ins    DWORD PTR es:[edi],dx
  404cb1:	stc    
  404cb2:	cmpxchg DWORD PTR [ebx-0x42],esi
  404cb6:	fst    QWORD PTR [esi]
  404cb8:	pop    esi
  404cb9:	mov    dh,0xab
  404cbb:	mov    WORD PTR [ebx],ss
  404cbd:	sahf   
  404cbe:	mov    BYTE PTR [ecx-0x49],ch
  404cc1:	test   cl,bl
  404cc3:	lods   al,BYTE PTR ds:[esi]
  404cc4:	mov    esp,0x1859a56
  404cc9:	cmp    dl,BYTE PTR [ebx-0x3f]
  404ccc:	xchg   edx,eax
  404ccd:	mov    BYTE PTR [edi],dl
  404ccf:	aaa    
  404cd0:	rcr    BYTE PTR [esp+edx*1],0x67
  404cd4:	jmp    0xa99a:0x6c682bd2
  404cdb:	ror    DWORD PTR [ebx+0x4da97d10],1
  404ce1:	lods   eax,DWORD PTR ds:[esi]
  404ce2:	push   esi
  404ce3:	jb     0x404c6a
  404ce5:	xchg   esi,eax
  404ce6:	fidivr WORD PTR [eax+0x4ac3601c]
  404cec:	retf   
  404ced:	mov    bl,0x38
  404cef:	pop    esp
  404cf0:	add    DWORD PTR [eax+0x3a],ecx
  404cf3:	mov    ah,0x86
  404cf5:	in     eax,dx
  404cf6:	mov    ds:0xeeb2be87,eax
  404cfb:	fdivr  QWORD PTR [edx]
  404cfd:	pop    ds
  404cfe:	adc    edi,DWORD PTR [ecx-0x66]
  404d01:	js     0x404c98
  404d03:	inc    eax
  404d04:	adc    DWORD PTR [edx],eax
  404d06:	jle    0x404d1b
  404d08:	sbb    BYTE PTR ss:[ebx+0x4e3511de],0x80
  404d10:	lock adc ch,cl
  404d13:	cmp    eax,DWORD PTR [ebx+0x6d]
  404d16:	mov    DWORD PTR [edi+edi*2+0x2b],ebx
  404d1a:	outs   dx,BYTE PTR ds:[esi]
  404d1b:	popf   
  404d1c:	(bad)  
  404d1d:	fnstcw WORD PTR [edi]
  404d1f:	call   0xd8a8:0x2d26f461
  404d26:	sub    eax,esp
  404d28:	icebp  
  404d29:	pop    ss
  404d2a:	adc    esp,eax
  404d2c:	and    al,0x8d
  404d2e:	daa    
  404d2f:	pop    ebp
  404d30:	dec    ebp
  404d31:	xor    ebp,DWORD PTR [ebx]
  404d33:	push   esp
  404d34:	and    cl,cl
  404d36:	pop    edi
  404d37:	jmp    0xf697ffe5
  404d3c:	sub    eax,DWORD PTR [ecx+0x42]
  404d3f:	out    dx,eax
  404d40:	push   ds
  404d41:	(bad)  
  404d42:	adc    edi,esp
  404d44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d45:	dec    edx
  404d46:	xor    al,BYTE PTR [esi]
  404d48:	mov    cl,0x48
  404d4a:	xchg   esi,eax
  404d4b:	xchg   esp,eax
  404d4c:	inc    ecx
  404d4d:	add    bl,BYTE PTR [ecx]
  404d4f:	aas    
  404d50:	call   0xda4c:0x3afacffc
  404d57:	dec    ebp
  404d58:	fistp  QWORD PTR [ecx+0x1d]
  404d5b:	sahf   
  404d5c:	dec    ebp
  404d5d:	sub    al,0x94
  404d5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d60:	nop
  404d61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d62:	fstp   DWORD PTR [eax-0x200153d0]
  404d68:	loop   0x404d8f
  404d6a:	jns    0x404dd6
  404d6c:	pop    ss
  404d6d:	sub    ebx,DWORD PTR [eax+esi*1+0x40]
  404d71:	daa    
  404d72:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  404d74:	xor    BYTE PTR [ebx+0x50],bl
  404d77:	xor    edi,esp
  404d79:	lds    eax,FWORD PTR [ebx-0x4e]
  404d7c:	mov    eax,ds:0x8d5282ee
  404d81:	pop    ebp
  404d82:	adc    dh,BYTE PTR ds:0x2fe8995f
  404d88:	fwait
  404d89:	sahf   
  404d8a:	jno    0x404d35
  404d8c:	push   ecx
  404d8d:	aas    
  404d8e:	xchg   esp,eax
  404d8f:	test   ecx,esp
  404d91:	cmp    eax,0x4250f222
  404d96:	pop    esi
  404d97:	inc    edi
  404d98:	jmp    0x7d4b:0xe56bc85b
  404d9f:	in     eax,dx
  404da0:	loope  0x404d80
  404da2:	cwde   
  404da3:	inc    esp
  404da4:	frstor [esp+eax*1]
  404da7:	add    edx,DWORD PTR [ecx+0x30]
  404daa:	adc    bh,BYTE PTR ds:0x760bddc9
  404db0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404db1:	mov    eax,ds:0xd23bd417
  404db6:	push   ebx
  404db7:	cmp    DWORD PTR [ebx],0x14
  404dba:	push   edx
  404dbb:	repz jno 0x404e3d
  404dbe:	mov    bh,0x2e
  404dc0:	in     al,dx
  404dc1:	stc    
  404dc2:	dec    ebp
  404dc3:	cmp    dl,dl
  404dc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404dc6:	dec    eax
  404dc7:	(bad)  
  404dc8:	dec    ecx
  404dc9:	adc    DWORD PTR [edx],0xffffffa2
  404dcc:	mov    ah,0x20
  404dce:	sbb    eax,0xe3a8aa3
  404dd3:	xchg   edx,eax
  404dd4:	lahf   
  404dd5:	stos   DWORD PTR es:[edi],eax
  404dd6:	call   0x400591b3
  404ddb:	mov    dl,0xaf
  404ddd:	ror    DWORD PTR [ecx],1
  404ddf:	or     ah,BYTE PTR [ebp-0x2dfe9ddb]
  404de5:	sub    eax,0x6c0b70fc
  404dea:	pop    ss
  404deb:	cmp    esi,DWORD PTR [esi-0x40]
  404dee:	lock or dh,bl
  404df1:	aaa    
  404df2:	push   0xffffff97
  404df4:	iret   
  404df5:	retf   0xc039
  404df8:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dfa:	repz pop ebp
  404dfc:	mov    ecx,0xe96c8a18
  404e01:	(bad)  
  404e02:	and    ebx,DWORD PTR [ebp+0x7bbecbfd]
  404e08:	cli    
  404e09:	and    eax,0xc0652954
  404e0e:	popa   
  404e0f:	push   esp
  404e10:	mov    ds,WORD PTR [ebp+ebp*4-0xffc71c5]
  404e17:	(bad)  
  404e19:	jo     0x404dc2
  404e1b:	in     al,dx
  404e1c:	adc    edi,DWORD PTR [edx-0x52977038]
  404e22:	inc    ebp
  404e23:	mov    edi,0x2ffc9401
  404e28:	xor    ebp,DWORD PTR [eax-0x3b]
  404e2b:	js     0x404e31
  404e2d:	xchg   DWORD PTR [ecx-0x173d62a7],edi
  404e33:	cld    
  404e34:	leave  
  404e35:	adc    ecx,DWORD PTR ds:0x7946cc43
  404e3b:	(bad)  
  404e3c:	and    al,0xa5
  404e3e:	dec    esp
  404e3f:	es out 0x3b,eax
  404e42:	xchg   esp,eax
  404e43:	cmp    al,0xce
  404e45:	xchg   esp,eax
  404e46:	daa    
  404e47:	push   0x7293e397
  404e4c:	xchg   edx,eax
  404e4d:	sti    
  404e4e:	pop    ebx
  404e4f:	jge    0x404e8d
  404e51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e52:	std    
  404e53:	mov    ds:0xdc223ac1,al
  404e58:	cld    
  404e59:	and    BYTE PTR [edx+0x63f10e42],cl
  404e5f:	test   BYTE PTR [esi+0x0],al
  404e62:	dec    edi
  404e63:	shr    BYTE PTR [edx+0x2f],cl
  404e66:	sbb    eax,esp
  404e68:	or     BYTE PTR [edi+0x39],bh
  404e6b:	cmp    eax,eax
  404e6d:	leave  
  404e6e:	adc    al,0xb5
  404e70:	retfw  
  404e72:	ficomp WORD PTR [edi]
  404e74:	in     al,0x43
  404e76:	push   esi
  404e77:	jmp    0xe537:0x2688b90
  404e7e:	add    al,0xd1
  404e80:	mov    ebp,0x550c5376
  404e85:	mov    edx,0x8e28ce71
  404e8a:	fdivr  st,st(6)
  404e8c:	dec    esi
  404e8d:	or     esp,ecx
  404e8f:	fistp  DWORD PTR [edi+0x7f26bcab]
  404e95:	xchg   esp,eax
  404e96:	das    
  404e97:	cmp    ebp,ebp
  404e99:	pusha  
  404e9a:	inc    ebx
  404e9b:	push   ebp
  404e9c:	pop    esi
  404e9d:	push   esi
  404e9e:	leave  
  404e9f:	sub    DWORD PTR [edi+0xc],ebp
  404ea2:	es or  al,0x34
  404ea5:	jp     0x404e61
  404ea7:	dec    esi
  404ea8:	jle    0x404f11
  404eaa:	pop    ecx
  404eab:	jl     0x404ecc
  404ead:	mul    esi
  404eaf:	inc    ebx
  404eb0:	lea    esp,[ebx-0x5bcd08a6]
  404eb6:	or     DWORD PTR [edx-0x633778a0],edx
  404ebc:	mov    ah,0xfc
  404ebe:	call   0x5611:0x5c4b2392
  404ec5:	pop    esi
  404ec6:	sahf   
  404ec7:	dec    edx
  404ec8:	mov    ebp,ss
  404eca:	scas   al,BYTE PTR es:[edi]
  404ecb:	retf   
  404ecc:	xchg   edx,eax
  404ecd:	retf   
  404ece:	jbe    0x404ee4
  404ed0:	fcmovnb st,st(1)
  404ed2:	shr    DWORD PTR [edx+0x4eeccc84],0x33
  404ed9:	lahf   
  404eda:	inc    esp
  404edb:	push   cs
  404edc:	sbb    cl,BYTE PTR [ebp+0x7d58b82e]
  404ee2:	stos   BYTE PTR es:[edi],al
  404ee3:	mov    esi,0x382130f
  404ee8:	dec    edi
  404ee9:	jmp    FWORD PTR [ebx-0x6b]
  404eec:	aad    0xf7
  404eee:	xor    BYTE PTR [esi-0x57],dh
  404ef1:	pop    eax
  404ef2:	call   0x2bae1617
  404ef7:	outs   dx,DWORD PTR ds:[esi]
  404ef8:	mov    edx,ebx
  404efa:	mov    dh,0x49
  404efc:	jns    0x404f08
  404efe:	mov    al,cl
  404f00:	pop    ecx
  404f01:	(bad)  
  404f02:	fwait
  404f03:	pop    esi
  404f04:	iret   
  404f05:	test   DWORD PTR [ebx+0x59],ecx
  404f08:	inc    ebx
  404f09:	jecxz  0x404ef2
  404f0b:	pushf  
  404f0c:	stos   DWORD PTR es:[edi],eax
  404f0d:	cli    
  404f0e:	repnz push ecx
  404f10:	push   esp
  404f11:	add    dl,dl
  404f13:	add    esp,eax
  404f15:	sbb    al,0x50
  404f17:	cdq    
  404f18:	sbb    eax,0x3386e5bf
  404f1d:	or     bl,BYTE PTR [esi+0x1a43df66]
  404f23:	imul   edx,DWORD PTR [eax],0xffffffd1
  404f26:	or     eax,0x1ae0a1f
  404f2b:	push   esi
  404f2c:	arpl   WORD PTR [ecx+0x62],si
  404f2f:	sbb    bh,dh
  404f31:	sub    DWORD PTR [esi+0x60],ecx
  404f34:	and    esi,DWORD PTR [ebp-0x6f]
  404f37:	xchg   BYTE PTR [edx-0xd],dh
  404f3a:	enter  0x60bd,0xb0
  404f3e:	jp     0x404ee9
  404f40:	dec    bx
  404f42:	lahf   
  404f43:	das    
  404f44:	(bad)  
  404f45:	adc    cl,dl
  404f47:	sbb    esp,DWORD PTR [eax+0x48]
  404f4a:	dec    esp
  404f4b:	ret    
  404f4c:	adc    al,0x36
  404f4e:	adc    BYTE PTR [ebx+esi*1],al
  404f51:	sbb    BYTE PTR ds:0x86202bfb,dh
  404f57:	push   edx
  404f58:	sti    
  404f59:	dec    ecx
  404f5a:	lahf   
  404f5b:	mov    eax,0xba70e513
  404f60:	(bad)  
  404f61:	adc    al,0xf5
  404f63:	dec    ebx
  404f64:	pop    ecx
  404f65:	dec    ebx
  404f66:	mov    eax,ds:0x382557a0
  404f6b:	lods   eax,DWORD PTR ds:[esi]
  404f6d:	mov    ebx,0xe01822c8
  404f72:	stc    
  404f73:	mov    esp,0x5c9eed43
  404f78:	out    dx,al
  404f79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f7a:	inc    eax
  404f7b:	hlt    
  404f7c:	cmp    BYTE PTR [edx+edx*1],cl
  404f7f:	rcr    BYTE PTR [ebp-0x54],0xbf
  404f83:	mov    ?,WORD PTR [eax+0xcfba890]
  404f89:	cmc    
  404f8a:	mov    dh,0x84
  404f8c:	jle    0x404f13
  404f8e:	lods   al,BYTE PTR ds:[esi]
  404f8f:	loopne 0x404f8a
  404f91:	mov    edx,DWORD PTR [esi+0x7]
  404f94:	xchg   ebp,eax
  404f95:	or     ch,BYTE PTR [edx-0x5e89357b]
  404f9b:	inc    edx
  404f9c:	mov    BYTE PTR [edi],0x7c
  404f9f:	jae    0x404f4d
  404fa1:	popa   
  404fa2:	leave  
  404fa3:	ja     0x404f7a
  404fa5:	mov    DWORD PTR [edi],ebx
  404fa7:	sbb    dl,ch
  404fa9:	adc    edi,DWORD PTR [ebx-0x7bbf8232]
  404faf:	cli    
  404fb0:	add    DWORD PTR [ebx+0x5755ea17],eax
  404fb6:	xchg   esi,eax
  404fb7:	je     0x404fa1
  404fb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fba:	mov    al,ds:0x7832d5d
  404fbf:	enter  0x443d,0x31
  404fc3:	mov    ds:0x3dad5197,al
  404fc8:	scas   eax,DWORD PTR es:[edi]
  404fc9:	gs jns 0x404f84
  404fcc:	stc    
  404fcd:	inc    BYTE PTR [ecx-0x74]
  404fd0:	cdq    
  404fd1:	and    eax,0x607384ce
  404fd6:	leave  
  404fd7:	xchg   edx,eax
  404fd8:	adc    eax,0x72fefcd6
  404fdd:	push   eax
  404fde:	das    
  404fdf:	cdq    
  404fe0:	add    eax,0xe0cdeb87
  404fe5:	dec    ebp
  404fe6:	jmp    esi
  404fe8:	mov    ss,WORD PTR [edx]
  404fea:	pop    edi
  404feb:	push   es
  404fec:	(bad)  
  404fee:	fs add al,0x69
  404ff1:	outs   dx,DWORD PTR ds:[esi]
  404ff2:	scas   al,BYTE PTR es:[edi]
  404ff3:	ret    
  404ff4:	(bad)  
  404ff5:	lods   eax,DWORD PTR ds:[esi]
  404ff6:	jge    0x40503e
  404ff8:	js     0x404fa4
  404ffa:	imul   ebx,esi,0xb27b83cb
  405000:	(bad)  
  405001:	(bad)  
  405002:	pop    edx
  405003:	mov    edx,0xd78ffa72
  405008:	mov    bh,0x69
  40500a:	cmp    BYTE PTR [edx+0xd5c64f2],0xb
  405011:	jecxz  0x40506c
  405013:	aam    0x54
  405015:	fsubr  DWORD PTR [ebp-0x30]
  405018:	sbb    ah,0xd
  40501b:	test   al,0xdd
  40501d:	stc    
  40501e:	cmp    al,bl
  405020:	cld    
  405021:	stos   DWORD PTR es:[edi],eax
  405022:	sub    dh,BYTE PTR [ecx]
  405024:	test   al,0x2
  405026:	pop    ss
  405027:	xchg   ebx,eax
  405028:	mov    ecx,0xce70270
  40502d:	fldl2t 
  40502f:	jo     0x404fd8
  405031:	mov    bh,0x25
  405033:	mov    dl,0x91
  405035:	inc    esi
  405036:	clc    
  405037:	lods   al,BYTE PTR ds:[esi]
  405038:	sbb    dl,BYTE PTR [edx-0x67]
  40503b:	out    0xde,al
  40503d:	push   edx
  40503e:	fdivr  QWORD PTR [eax]
  405040:	add    al,0xf7
  405042:	push   edx
  405043:	cmp    dl,BYTE PTR [esi]
  405045:	sbb    esp,ebx
  405047:	ret    
  405048:	dec    edi
  405049:	xor    ah,BYTE PTR [ebp+eax*8+0x1502eb4a]
  405050:	xor    BYTE PTR [esi+0x28004570],dl
  405056:	icebp  
  405057:	inc    edi
  405058:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405059:	loop   0x40509c
  40505b:	cmp    al,0x6f
  40505d:	inc    DWORD PTR [esi+0xb]
  405060:	mov    edx,0x560c7e12
  405065:	inc    edi
  405066:	test   ecx,edx
  405068:	xor    dh,ah
  40506a:	out    0x15,al
  40506c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40506d:	jmp    0x81cf:0x4cf65149
  405074:	jp     0x40507b
  405076:	cdq    
  405077:	jbe    0x4050dd
  405079:	retf   
  40507a:	or     al,0xcf
  40507c:	fwait
  40507d:	mov    dl,BYTE PTR [edx+0x3e]
  405080:	or     dh,ch
  405082:	push   ecx
  405083:	cld    
  405084:	mov    bh,0x61
  405086:	(bad)  
  405087:	mov    DWORD PTR [esi],0x79d79f3e
  40508d:	mov    ?,WORD PTR [ebp-0x40]
  405090:	cmp    DWORD PTR [edi+0x5ffb9877],0x52
  405097:	call   0x30ba:0x1b6279ae
  40509e:	addr16 loope 0x405035
  4050a1:	repz test al,0xd0
  4050a4:	adc    esp,ecx
  4050a6:	std    
  4050a7:	xor    esi,DWORD PTR ds:0x8d5e9274
  4050ad:	or     BYTE PTR [edx-0x49],0x99
  4050b1:	lods   eax,DWORD PTR ds:[esi]
  4050b2:	mov    eax,ds:0x16c41193
  4050b7:	mov    eax,0x3e81f24
  4050bc:	cmp    dl,BYTE PTR [edi]
  4050be:	fnstenv [eax-0x1f9a5fe8]
  4050c4:	push   0x6f
  4050c6:	loopne 0x4050d6
  4050c8:	loope  0x405135
  4050ca:	ins    DWORD PTR es:[edi],dx
  4050cb:	adc    eax,0xc0889ecd
  4050d0:	cld    
  4050d1:	mov    al,0xe0
  4050d3:	xchg   ebx,eax
  4050d4:	test   DWORD PTR [edi],ebx
  4050d6:	push   cs
  4050d7:	cmp    eax,esi
  4050d9:	sahf   
  4050da:	mov    eax,ds:0x715cb94c
  4050df:	push   cs
  4050e0:	aad    0x29
  4050e2:	or     eax,0xa1168ae7
  4050e7:	imul   BYTE PTR [esi+ebp*8]
  4050ea:	xchg   ebp,eax
  4050eb:	push   cs
  4050ec:	pushf  
  4050ed:	mov    DWORD PTR gs:[edx+esi*4+0xcb8f514],esp
  4050f5:	mov    edx,0x2cb97920
  4050fa:	popf   
  4050fb:	ja     0x405168
  4050fd:	adc    esp,DWORD PTR [ebx-0x531a6fe5]
  405103:	mov    ecx,0x90c55f6d
  405108:	lods   al,BYTE PTR ds:[esi]
  405109:	mov    eax,ds:0x75dbefc8
  40510e:	and    eax,0xcacc7367
  405113:	xchg   ebx,eax
  405114:	and    al,0x37
  405116:	adc    DWORD PTR [esp+eiz*2],esp
  405119:	or     BYTE PTR ds:[ecx+0x640fe16c],al
  405120:	sub    DWORD PTR [eax+esi*1],0x4d
  405124:	pop    ebx
  405125:	gs js  0x4050dc
  405128:	in     eax,0x31
  40512a:	inc    esi
  40512b:	stos   BYTE PTR es:[edi],al
  40512c:	mov    dh,0xb8
  40512e:	fnstcw WORD PTR [edi+0x50]
  405131:	dec    cx
  405133:	sbb    BYTE PTR [esi],bh
  405135:	sbb    BYTE PTR [edi-0xcfeeaa4],dh
  40513b:	jbe    0x405138
  40513d:	jg     0x40519e
  40513f:	fsub   QWORD PTR [ebx]
  405141:	loopne 0x4050ce
  405143:	call   0x1b5cf865
  405148:	outs   dx,DWORD PTR ds:[esi]
  405149:	mov    al,0x91
  40514b:	xchg   ebx,eax
  40514c:	mov    dl,0x21
  40514e:	mov    WORD PTR [bp+si-0x6b],es
  405152:	cmp    BYTE PTR [edi],0x5f
  405155:	sub    al,0xce
  405157:	mov    bl,BYTE PTR [ecx]
  405159:	in     al,dx
  40515a:	mov    eax,ds:0x10623660
  40515f:	push   cs
  405160:	mov    ebp,0x3b6f39a4
  405165:	xchg   ecx,eax
  405166:	inc    ebp
  405167:	inc    esi
  405168:	mov    DWORD PTR [ecx-0x72],esp
  40516b:	mov    cs,WORD PTR [eax+0x2f]
  40516e:	xlat   BYTE PTR ds:[ebx]
  40516f:	retf   0xbdf9
  405172:	fiadd  WORD PTR [esi+0x54]
  405175:	xor    al,0x15
  405177:	dec    edi
  405178:	adc    dh,bl
  40517a:	dec    ebx
  40517b:	rol    edx,1
  40517d:	loopne 0x405159
  40517f:	mov    edx,0x4b94a2b3
  405184:	add    al,0x7a
  405186:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405187:	pop    es
  405188:	ret    
  405189:	in     al,0x12
  40518b:	retf   0x220
  40518e:	(bad)  
  40518f:	iret   
  405190:	mov    esi,0xcccac455
  405195:	and    BYTE PTR [ebx+0x2],dl
  405198:	stos   DWORD PTR es:[edi],eax
  405199:	mov    al,ds:0xc519bddc
  40519e:	sbb    al,0x1d
  4051a0:	ret    
  4051a1:	pop    ss
  4051a2:	stos   DWORD PTR es:[edi],eax
  4051a3:	retf   
  4051a4:	push   0x815df62f
  4051a9:	mov    eax,ds:0x9c04f5ff
  4051ae:	icebp  
  4051af:	in     al,dx
  4051b0:	fwait
  4051b1:	sbb    eax,0xa1cd67b3
  4051b6:	data16 and al,0xbc
  4051b9:	into   
  4051ba:	test   eax,0x67eead6d
  4051bf:	jo     0x4051b4
  4051c1:	loope  0x4051b7
  4051c3:	pop    ebx
  4051c4:	xchg   edx,eax
  4051c5:	jecxz  0x405199
  4051c7:	ins    DWORD PTR es:[edi],dx
  4051c8:	push   esi
  4051c9:	jge    0x40523f
  4051cb:	mov    ebp,cs
  4051cd:	call   0x2d04:0xfd242a81
  4051d4:	or     BYTE PTR [eax-0x482d46c6],bl
  4051da:	call   0x9b1f94d2
  4051df:	dec    eax
  4051e0:	inc    ecx
  4051e1:	loopne 0x40516b
  4051e3:	test   al,0xe5
  4051e5:	or     al,0xf4
  4051e7:	mov    WORD PTR [eax-0x30208c80],?
  4051ed:	mov    ebx,0x95aa2b4a
  4051f2:	shl    DWORD PTR [edi],1
  4051f4:	bound  eax,QWORD PTR [ecx]
  4051f6:	test   DWORD PTR [ebp+0x226a3a70],0x69e87945
  405200:	enter  0xdf64,0xc8
  405204:	cli    
  405205:	lea    eax,[ecx]
  405207:	dec    esi
  405208:	and    ah,dh
  40520a:	push   esp
  40520b:	arpl   WORD PTR [edi],sp
  40520d:	sub    DWORD PTR [eax],ecx
  40520f:	adc    BYTE PTR [edx],al
  405211:	and    al,0x98
  405213:	sub    esp,0x3772217
  405219:	push   es
  40521a:	jge    0x4051b2
  40521c:	jl     0x4051a8
  40521e:	or     BYTE PTR [edi+ebx*1],al
  405221:	fdiv   DWORD PTR [eax]
  405223:	das    
  405224:	push   eax
  405225:	cwde   
  405226:	jno    0x4052a0
  405228:	out    0xd3,al
  40522a:	es aad 0x84
  40522d:	repz sbb cl,BYTE PTR [edi+0x66]
  405231:	or     BYTE PTR ds:0x4d5b0e3a,bh
  405237:	jecxz  0x405282
  405239:	sub    al,0x6
  40523b:	scas   al,BYTE PTR es:[edi]
  40523c:	mov    edi,0xfbc1b836
  405241:	(bad)  
  405242:	(bad)  
  405243:	sbb    BYTE PTR [esi+0x6094fc36],bh
  405249:	jae    0x4051ef
  40524b:	fisttp QWORD PTR [ecx+0x2f]
  40524e:	mov    dl,0xef
  405250:	mov    esi,0xbd9cc8aa
  405255:	and    al,BYTE PTR [eax+0x4c9db864]
  40525b:	push   cs
  40525c:	mov    al,0x9
  40525e:	outs   dx,DWORD PTR ds:[esi]
  40525f:	fbstp  TBYTE PTR [edi+ebx*2+0x4b]
  405263:	xor    eax,0x73d84fa6
  405268:	rol    dl,0xd3
  40526b:	imul   ecx,DWORD PTR [edi+0x5550d8a],0x34b24f21
  405275:	push   cs
  405276:	xchg   edi,eax
  405277:	imul   edi
  405279:	or     eax,0x590c83b
  40527e:	loopne 0x4052ab
  405280:	fisttp DWORD PTR [edx-0x6c]
  405283:	popa   
  405284:	dec    ecx
  405285:	xchg   ecx,eax
  405286:	mov    esp,ecx
  405288:	add    esp,ecx
  40528a:	lods   al,BYTE PTR ds:[esi]
  40528b:	dec    edx
  40528c:	xchg   edx,eax
  40528d:	xchg   ecx,eax
  40528e:	outs   dx,DWORD PTR ds:[esi]
  40528f:	pusha  
  405290:	dec    esp
  405291:	inc    ebp
  405292:	fstp   DWORD PTR [ecx-0x71]
  405295:	push   cs
  405296:	ins    DWORD PTR es:[edi],dx
  405297:	or     edi,0xffffffca
  40529a:	shr    BYTE PTR [edi+0x52],1
  40529d:	repz adc eax,edx
  4052a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052a1:	loop   0x405307
  4052a3:	ret    
  4052a4:	int3   
  4052a5:	popf   
  4052a6:	or     edx,DWORD PTR [eax+ebp*4+0x51]
  4052aa:	outs   dx,DWORD PTR ds:[esi]
  4052ab:	lds    ecx,FWORD PTR [ebx+0x77]
  4052ae:	pop    ds
  4052af:	lea    edi,[ecx+0x431be3c]
  4052b5:	jecxz  0x4052f4
  4052b7:	dec    edx
  4052b8:	in     al,0xb7
  4052ba:	std    
  4052bb:	repz in eax,0xab
  4052be:	mov    BYTE PTR [ebx],dl
  4052c0:	dec    eax
  4052c1:	pusha  
  4052c2:	fadd   DWORD PTR [ebx+0x50]
  4052c5:	test   eax,0x29de28b0
  4052ca:	mov    BYTE PTR [eax+0x16],dl
  4052cd:	adc    al,0x2e
  4052cf:	icebp  
  4052d0:	and    DWORD PTR ds:0x553aae9e,ebp
  4052d6:	mov    BYTE PTR [eax-0x10],al
  4052d9:	je     0x40530d
  4052db:	mov    ds:0x871fc630,al
  4052e0:	xchg   edx,eax
  4052e1:	xlat   BYTE PTR ds:[ebx]
  4052e2:	mov    gs,eax
  4052e4:	push   0x1a06064b
  4052e9:	xchg   ebp,eax
  4052ea:	xchg   ecx,eax
  4052eb:	idiv   BYTE PTR [edi*1+0x699894bd]
  4052f2:	pushf  
  4052f3:	and    BYTE PTR [esi],bh
  4052f5:	pop    esi
  4052f6:	or     al,BYTE PTR [edi+eiz*4+0x41]
  4052fa:	xlat   BYTE PTR ds:[ebx]
  4052fb:	and    al,0x95
  4052fd:	mov    BYTE PTR [esi-0x57],ah
  405300:	add    BYTE PTR [ebp+0x65a620b5],0xc8
  405307:	ss daa 
  405309:	sub    dh,BYTE PTR [ecx]
  40530b:	push   cs
  40530c:	mov    edx,0xb0338f63
  405311:	push   edx
  405312:	call   0xefca:0x6f3246ad
  405319:	xor    eax,0x84c529fa
  40531e:	ins    DWORD PTR es:[edi],dx
  40531f:	xchg   ebx,eax
  405320:	in     al,dx
  405321:	nop
  405322:	loopne 0x405347
  405324:	jl     0x4052c5
  405326:	jmp    0xcab6:0xb73269d7
  40532d:	nop
  40532e:	jae    0x40534a
  405330:	add    al,0xae
  405332:	js     0x405308
  405334:	inc    edi
  405335:	sbb    ecx,edi
  405337:	push   esi
  405338:	mov    esi,0x61eafb7
  40533d:	sbb    bh,al
  40533f:	sbb    eax,0x3881644d
  405344:	fidivr DWORD PTR [edx-0x5caf6378]
  40534a:	retf   
  40534b:	push   0x38
  40534d:	ficom  WORD PTR [eax]
  40534f:	sbb    ah,BYTE PTR [ecx+0x4b8c4bf5]
  405355:	or     DWORD PTR [esi-0x47ebc24a],ebp
  40535b:	outs   dx,DWORD PTR ds:[esi]
  40535c:	push   ds
  40535d:	loop   0x405341
  40535f:	(bad)  
  405361:	jne    0x405325
  405363:	mov    cl,0xac
  405365:	ins    BYTE PTR es:[edi],dx
  405366:	xlat   BYTE PTR ds:[ebx]
  405367:	mov    dl,ch
  405369:	lods   eax,DWORD PTR ds:[esi]
  40536a:	jo     0x4053ea
  40536c:	sub    eax,0xb8f242cf
  405371:	bound  eax,QWORD PTR [edi-0x1ebdf7cb]
  405377:	gs xchg edx,edx
  40537a:	into   
  40537b:	mov    ch,0x29
  40537d:	jbe    0x4053d5
  40537f:	mov    esi,0xb7bf811d
  405384:	lds    ecx,FWORD PTR [edi]
  405386:	imul   DWORD PTR [ebx+0x6d]
  405389:	popa   
  40538a:	push   ss
  40538b:	sahf   
  40538c:	iret   
  40538d:	adc    ah,ch
  40538f:	inc    edx
  405390:	ss mov edi,0x140e8ab3
  405396:	(bad)  
  405397:	or     eax,0xf60d3d60
  40539c:	cmp    BYTE PTR [edx+0x1e],dh
  40539f:	and    DWORD PTR [edx+0xf],eax
  4053a2:	or     al,0x9b
  4053a4:	in     eax,0x5c
  4053a6:	fisttp QWORD PTR [eax+0x6cb119d6]
  4053ac:	mov    cl,0x1
  4053ae:	mov    cl,0xf7
  4053b0:	mov    ds:0x8484007a,eax
  4053b5:	inc    edx
  4053b6:	lds    esi,FWORD PTR ds:0x362995fc
  4053bc:	adc    DWORD PTR [edi-0x1cd7f9ca],eax
  4053c2:	xchg   BYTE PTR [edx+0x7096935],bh
  4053c8:	clc    
  4053c9:	stos   BYTE PTR es:[edi],al
  4053ca:	stos   DWORD PTR es:[edi],eax
  4053cb:	clc    
  4053cc:	xchg   BYTE PTR [eax],ch
  4053ce:	or     DWORD PTR [edx-0x33],ebx
  4053d1:	lea    eax,[edx]
  4053d3:	rcl    DWORD PTR [ebx+0x0],0xca
  4053d7:	jne    0x4053ba
  4053d9:	inc    edx
  4053da:	inc    DWORD PTR [edi-0x42]
  4053dd:	ins    DWORD PTR es:[edi],dx
  4053de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053df:	add    DWORD PTR [ecx],0x356dcead
  4053e5:	popf   
  4053e6:	xchg   esi,eax
  4053e7:	push   cs
  4053e8:	cmp    esi,ebx
  4053ea:	adc    bh,BYTE PTR [esi+0x4761f669]
  4053f0:	outs   dx,BYTE PTR ds:[esi]
  4053f1:	ins    BYTE PTR es:[edi],dx
  4053f2:	xor    DWORD PTR [esi+0x4d43c2dd],eax
  4053f8:	(bad)  
  4053f9:	jb     0x4053ef
  4053fb:	xchg   ecx,eax
  4053fc:	xor    al,0xad
  4053fe:	cmc    
  4053ff:	push   cs
  405400:	inc    esi
  405401:	jb     0x4053e1
  405403:	mov    ecx,0xf7ab0bae
  405408:	xchg   DWORD PTR [edi+0x775529e],eax
  40540e:	aad    0x18
  405410:	arpl   WORD PTR [ecx],bx
  405412:	int3   
  405413:	jne    0x4053b7
  405415:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405416:	outs   dx,BYTE PTR ds:[esi]
  405417:	sub    eax,0xb27e0793
  40541c:	mov    bh,BYTE PTR [ecx-0x35]
  40541f:	jle    0x4053fd
  405421:	rol    BYTE PTR [esi+0x2a],0xe4
  405425:	int3   
  405426:	sub    eax,0xbc58cd70
  40542b:	rcr    BYTE PTR [edi],cl
  40542d:	push   ds
  40542e:	xor    eax,0x69bba679
  405433:	sub    al,0x72
  405435:	test   BYTE PTR [ebx],dh
  405437:	cwde   
  405438:	mov    edx,0x5eb962cf
  40543d:	std    
  40543e:	test   DWORD PTR [edi+0xedf07a],0x17cecee4
  405448:	cli    
  405449:	adc    al,BYTE PTR [ecx+0x46]
  40544c:	outs   dx,DWORD PTR ds:[esi]
  40544d:	jge    0x405495
  40544f:	mov    bl,0x1d
  405451:	es inc ebx
  405453:	nop
  405454:	adc    al,0xa6
  405456:	push   edx
  405457:	cmc    
  405458:	ret    0xf3c6
  40545b:	jbe    0x40542c
  40545d:	cld    
  40545e:	inc    esi
  40545f:	jl     0x4054bb
  405461:	or     cl,ah
  405463:	nop
  405464:	xor    bh,BYTE PTR [edi+0x7c]
  405467:	sub    eax,0xd22ed3ee
  40546c:	push   ds
  40546d:	mov    ecx,ds
  40546f:	loope  0x4054ed
  405471:	test   edx,edi
  405473:	(bad)  
  405474:	scas   eax,DWORD PTR es:[edi]
  405475:	mov    ds,edx
  405477:	mov    ds:0x2e4a4fdb,eax
  40547c:	(bad)  
  40547d:	mov    WORD PTR [edi+ebx*1-0x17],es
  405481:	or     ebp,DWORD PTR [esi-0x34a71ef]
  405487:	add    ebx,DWORD PTR [edi+0x6ffb6937]
  40548d:	ins    BYTE PTR es:[edi],dx
  40548e:	pop    es
  40548f:	adc    BYTE PTR [esi],dl
  405491:	pop    ss
  405492:	(bad)  
  405493:	sub    BYTE PTR [eax-0x7d],bh
  405496:	shld   DWORD PTR [ecx+ecx*2-0x7c],esp,0x4
  40549c:	mov    ecx,0x452e39d9
  4054a1:	test   BYTE PTR [eax-0x2d],dh
  4054a4:	sahf   
  4054a5:	dec    esi
  4054a6:	retf   
  4054a7:	or     al,0xba
  4054a9:	mov    eax,0x7e426811
  4054ae:	mov    dh,0xeb
  4054b0:	retf   
  4054b1:	pop    ss
  4054b2:	(bad)  
  4054b3:	fdivr  QWORD PTR [ebp-0x48fd98ab]
  4054b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054ba:	lea    edi,[edi]
  4054bc:	mov    ecx,0x1067d199
  4054c1:	jmp    0x9ec1:0xa12aef52
  4054c8:	out    0x98,al
  4054ca:	xchg   esp,edx
  4054cc:	jns    0x405476
  4054ce:	push   eax
  4054cf:	scas   eax,DWORD PTR es:[edi]
  4054d0:	imul   esi,DWORD PTR [ebx-0x3b626ca5],0xffffffdb
  4054d7:	sub    ecx,DWORD PTR [ebx-0x17]
  4054da:	(bad)  
  4054db:	aas    
  4054dc:	mov    edx,edx
  4054de:	cmc    
  4054df:	jp     0x405510
  4054e1:	sbb    BYTE PTR [ebx],0xf0
  4054e4:	aam    0x5e
  4054e6:	ss jge 0x4054fa
  4054e9:	mov    BYTE PTR [ecx],ch
  4054eb:	xchg   esp,eax
  4054ec:	xchg   ebp,eax
  4054ed:	stos   BYTE PTR es:[edi],al
  4054ee:	lods   eax,DWORD PTR ds:[esi]
  4054ef:	mov    ecx,0x89cb474d
  4054f4:	mov    bh,bh
  4054f6:	sub    BYTE PTR [edi+0x64bf4549],bh
  4054fc:	lahf   
  4054fd:	jae    0x4054e7
  4054ff:	sub    BYTE PTR [eax-0x13],bl
  405502:	cmp    al,0x2f
  405504:	iret   
  405505:	mov    ebx,0x41e8eb3a
  40550a:	jmp    0x86b9:0x2c84823b
  405511:	sbb    al,ah
  405513:	iret   
  405514:	jp     0x405536
  405516:	inc    esi
  405517:	movsx  esp,WORD PTR [ebp+0x4d]
  40551b:	adc    dl,BYTE PTR [eax+0x1f]
  40551e:	lahf   
  40551f:	mov    dh,0x20
  405521:	cwde   
  405522:	(bad)  
  405523:	sbb    DWORD PTR [ebx-0x23],esi
  405526:	or     eax,0xc5d88dbd
  40552b:	jbe    0x405540
  40552d:	cld    
  40552e:	int    0xea
  405530:	mov    ah,0x57
  405532:	jmp    0xe5ba:0x1dc10844
  405539:	mov    ebp,0xff63755b
  40553e:	jmp    0xf5fa4540
  405543:	inc    esi
  405544:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405545:	cld    
  405546:	fs ins BYTE PTR es:[edi],dx
  405548:	daa    
  405549:	shr    BYTE PTR [edx],1
  40554b:	push   ds
  40554c:	ficomp DWORD PTR [esi-0x2ee161a9]
  405552:	xchg   edx,eax
  405553:	and    al,0x9
  405555:	xchg   ecx,eax
  405556:	stc    
  405557:	lock retf 0x7da2
  40555b:	push   es
  40555c:	xlat   BYTE PTR ds:[ebx]
  40555d:	xor    eax,0xe301af2
  405562:	pop    edi
  405563:	push   edx
  405564:	fadd   QWORD PTR [ebx-0x6a253ab3]
  40556a:	loop   0x4055a8
  40556c:	ficom  WORD PTR [edi+ebx*8]
  40556f:	mov    dl,0xd5
  405571:	mov    eax,0x1a365f03
  405576:	and    dh,BYTE PTR ds:0xf9e84d8f
  40557c:	mov    esi,0x429e7058
  405581:	dec    esp
  405582:	gs mov edi,0x3b5c3e3b
  405588:	add    esi,edx
  40558a:	test   eax,0xa6d00c19
  40558f:	test   DWORD PTR [ecx+0x12],eax
  405592:	mov    ss,WORD PTR [ecx]
  405594:	call   0x93901b24
  405599:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40559b:	gs cmp al,0xd3
  40559e:	pop    ds
  40559f:	cmp    al,bl
  4055a1:	sub    DWORD PTR [edx+0xddcd0bc],ecx
  4055a7:	or     ecx,esp
  4055a9:	fs or  eax,0x38eba34a
  4055af:	cmp    BYTE PTR [edi],bh
  4055b1:	scas   eax,DWORD PTR es:[edi]
  4055b2:	mov    ecx,es
  4055b4:	jb     0x4055a7
  4055b6:	in     al,dx
  4055b7:	pop    esp
  4055b8:	cdq    
  4055b9:	scas   eax,DWORD PTR es:[edi]
  4055ba:	arpl   WORD PTR ds:0xfe5f2dd,ax
  4055c0:	retf   
  4055c1:	test   DWORD PTR [ecx],ebx
  4055c3:	or     al,0x0
  4055c5:	aam    0x3d
  4055c7:	jmp    0xe615a69c
  4055cc:	cdq    
  4055cd:	and    al,0xb3
  4055cf:	rol    BYTE PTR gs:[eax*2-0x329931ad],1
  4055d7:	rcl    BYTE PTR [ebx],cl
  4055d9:	jbe    0x405566
  4055db:	sub    edi,DWORD PTR [esi+0x474dbf95]
  4055e1:	ja     0x40565d
  4055e3:	jno    0x405588
  4055e5:	push   ecx
  4055e6:	push   esp
  4055e7:	adc    BYTE PTR [eax-0x5a92e227],bl
  4055ed:	iret   
  4055ee:	pop    edx
  4055ef:	fsub   QWORD PTR [ebp-0x1d85fce2]
  4055f5:	das    
  4055f6:	cmp    DWORD PTR [ebp+0x3cc4fca9],edx
  4055fc:	xchg   BYTE PTR [edx],bl
  4055fe:	cs ss jns 0x405664
  405602:	adc    eax,0xcee0eee5
  405607:	test   DWORD PTR [edx+0x10],eax
  40560a:	inc    edx
  40560b:	test   dl,bl
  40560d:	idiv   BYTE PTR [ecx+0x6f3a326a]
  405613:	pop    ss
  405614:	push   edx
  405615:	xchg   ecx,eax
  405616:	pop    esi
  405617:	mov    al,0x89
  405619:	js     0x4055ba
  40561b:	fdivr  DWORD PTR [edx+0x6c1c2489]
  405621:	in     eax,0x91
  405623:	div    DWORD PTR [eax]
  405625:	ret    0xbad8
  405628:	xor    al,0x34
  40562a:	retf   0xb9f0
  40562d:	jecxz  0x405674
  40562f:	and    edx,edi
  405631:	loopne 0x405620
  405633:	pop    edx
  405634:	cld    
  405635:	sbb    BYTE PTR [ecx],bl
  405637:	call   0xca2f:0x979372e7
  40563e:	into   
  40563f:	call   0x660c:0x901ece65
  405646:	jb     0x405679
  405648:	out    dx,eax
  405649:	mov    edx,0x4a6902f2
  40564e:	sbb    BYTE PTR [esi+0x10],0x99
  405652:	mov    ah,0x99
  405654:	inc    eax
  405655:	push   cs
  405656:	jb     0x4055ef
  405658:	cvtdq2ps xmm2,XMMWORD PTR [eax+edx*8]
  40565c:	inc    ebp
  40565d:	retf   
  40565e:	loope  0x40565e
  405660:	ret    0x8a28
  405663:	cmp    DWORD PTR [edi+eax*1],esp
  405666:	outs   dx,BYTE PTR ds:[esi]
  405667:	fadd   st(1),st
  405669:	jae    0x405633
  40566b:	test   eax,0xd449f4c4
  405670:	test   cl,ah
  405672:	xor    eax,DWORD PTR [ecx+esi*4]
  405675:	ficomp DWORD PTR [ebp+0x78]
  405678:	aas    
  405679:	or     eax,ecx
  40567b:	xchg   BYTE PTR [ebx+0x7],bl
  40567e:	push   cs
  40567f:	(bad)  
  405680:	(bad)  
  405681:	mov    ch,0x96
  405683:	jns    0x4056bc
  405685:	rcl    DWORD PTR [ecx],1
  405687:	ins    BYTE PTR es:[edi],dx
  405688:	loop   0x405640
  40568a:	repnz cs push 0xffffffc7
  40568e:	adc    cl,ch
  405690:	inc    edx
  405691:	imul   eax,DWORD PTR [esi],0xeda04362
  405697:	mov    cl,0x4d
  405699:	xor    al,0x50
  40569b:	xchg   BYTE PTR [esi],ah
  40569d:	adc    eax,0x7b3624f1
  4056a2:	push   0x72
  4056a4:	dec    ebx
  4056a5:	mov    es,WORD PTR [edx]
  4056a7:	sbb    ch,BYTE PTR [ecx-0x39]
  4056aa:	mov    eax,0xd1117760
  4056af:	adc    eax,0x9d682c81
  4056b4:	mov    ds:0x49507f8b,eax
  4056b9:	icebp  
  4056ba:	iret   
  4056bb:	inc    ebx
  4056bc:	sub    esi,0x7fd84ce0
  4056c2:	stos   DWORD PTR es:[edi],eax
  4056c3:	add    ch,BYTE PTR [ebx]
  4056c5:	cld    
  4056c6:	jno    0x4056b1
  4056c8:	mov    ch,0x2
  4056ca:	in     eax,dx
  4056cb:	or     DWORD PTR [eax-0x33],ebx
  4056ce:	lock mov ds:0x66ce4669,al
  4056d4:	adc    edi,DWORD PTR [ebp-0x61844a17]
  4056da:	sbb    DWORD PTR [ebx+0x76],ecx
  4056dd:	adc    BYTE PTR [esi-0x10],cl
  4056e0:	std    
  4056e1:	mov    esp,0x9eba8af2
  4056e6:	sub    BYTE PTR [ebx+eiz*1-0x5d],al
  4056ea:	arpl   WORD PTR [edi],bp
  4056ec:	sub    al,0x45
  4056ee:	mov    eax,ds:0x7ba1f327
  4056f3:	push   ds
  4056f4:	jno    0x405690
  4056f6:	test   DWORD PTR [edi+0x684bfab7],0xd01f8360
  405700:	mov    BYTE PTR [ebx+0x5a],ah
  405703:	je     0x40570a
  405705:	push   ebp
  405706:	ror    al,1
  405708:	test   eax,0x37d5df0c
  40570d:	mov    ah,0xd0
  40570f:	inc    ebp
  405710:	jecxz  0x40577b
  405712:	sbb    ah,BYTE PTR [ecx+edx*4]
  405715:	ds inc esi
  405717:	fbld   TBYTE PTR [edx+ebx*1+0x498287b]
  40571e:	(bad)  
  40571f:	or     ecx,DWORD PTR [ecx+edi*2]
  405722:	adc    bh,BYTE PTR [edx+0x6e]
  405725:	hlt    
  405726:	mov    dl,0x26
  405728:	dec    ebx
  405729:	jo     0x4057a4
  40572b:	or     al,0x8c
  40572d:	add    eax,0x187be886
  405732:	dec    ebp
  405733:	sub    ebp,edx
  405735:	scas   al,BYTE PTR es:[edi]
  405736:	xlat   BYTE PTR ds:[ebx]
  405737:	loop   0x405764
  405739:	loopne 0x4056fc
  40573b:	and    al,0x1c
  40573d:	cmp    DWORD PTR cs:[ecx],0xffffff8a
  405741:	iret   
  405742:	outs   dx,BYTE PTR ds:[esi]
  405743:	dec    ebp
  405744:	les    ebx,FWORD PTR [edx-0x6c]
  405747:	stc    
  405748:	push   0xffffffee
  40574a:	aad    0xc6
  40574c:	sub    al,0x73
  40574e:	mov    bh,0xce
  405750:	pop    es
  405751:	ds pushf 
  405753:	dec    ecx
  405754:	jp     0x40577a
  405756:	jnp    0x4056ff
  405758:	lods   eax,DWORD PTR ds:[esi]
  405759:	dec    edx
  40575a:	test   BYTE PTR [edx+ebx*1],0xfe
  40575e:	lahf   
  40575f:	fld    DWORD PTR [ecx]
  405761:	push   edx
  405762:	cs aam 0xa1
  405765:	fwait
  405766:	out    dx,eax
  405767:	(bad)  
  405768:	xor    edi,edx
  40576a:	addr16 retf 0x6a05
  40576e:	pop    es
  40576f:	jb     0x405797
  405771:	(bad)  
  405772:	in     al,dx
  405773:	hlt    
  405774:	push   esi
  405775:	mov    eax,ds:0xa67ff0dc
  40577a:	icebp  
  40577b:	pushf  
  40577c:	mov    cl,0xc7
  40577e:	fwait
  40577f:	out    dx,al
  405780:	enter  0xf406,0xf4
  405784:	aam    0x4e
  405786:	loope  0x405754
  405788:	jge    0x405756
  40578a:	aas    
  40578b:	push   ds
  40578c:	fcom   DWORD PTR [ebx-0x98225f1]
  405792:	aad    0xd2
  405794:	daa    
  405795:	inc    eax
  405796:	xlat   BYTE PTR ds:[ebx]
  405797:	or     DWORD PTR [esi],0x267f8b49
  40579d:	jmp    0x5503:0xd73f4fdb
  4057a4:	std    
  4057a5:	aam    0x95
  4057a7:	mov    dl,0xb4
  4057a9:	push   0xffffff9d
  4057ab:	daa    
  4057ac:	cli    
  4057ad:	push   esi
  4057ae:	in     al,dx
  4057af:	push   edi
  4057b0:	stc    
  4057b1:	push   edx
  4057b2:	mov    ch,0xab
  4057b4:	call   0xf5bd187a
  4057b9:	shl    esp,cl
  4057bb:	aas    
  4057bc:	ret    0x15ec
  4057bf:	aam    0xc4
  4057c1:	int    0x58
  4057c3:	jmp    0xc338be5e
  4057c8:	jnp    0x40579c
  4057ca:	(bad)  
  4057cb:	dec    ecx
  4057cc:	js     0x405805
  4057ce:	shr    DWORD PTR [ebx+0x1f],cl
  4057d1:	es fs jmp 0x2787a5ce
  4057d8:	sub    eax,0x11e702ee
  4057dd:	sbb    DWORD PTR [edi],edi
  4057df:	add    ebp,DWORD PTR [eax+0x2b]
  4057e2:	push   esi
  4057e3:	xchg   ebp,eax
  4057e4:	mov    ah,0xc8
  4057e6:	or     dl,dh
  4057e8:	stos   BYTE PTR es:[edi],al
  4057e9:	adc    eax,esi
  4057eb:	cli    
  4057ec:	sub    al,0xe3
  4057ee:	retf   0x9e29
  4057f1:	cs aaa 
  4057f3:	mov    al,0xdd
  4057f5:	push   es
  4057f6:	push   0x17
  4057f8:	xor    al,0xe6
  4057fa:	mov    ah,0xd
  4057fc:	push   edx
  4057fd:	(bad)  
  4057ff:	(bad)  
  405801:	mov    WORD PTR [esi+0x3f],es
  405804:	jp     0x4057d7
  405806:	adc    eax,0x208e91de
  40580b:	mov    bh,0x14
  40580d:	rol    BYTE PTR [ebp+0x78],0x9a
  405811:	push   edx
  405812:	xchg   DWORD PTR [ecx],ebp
  405814:	test   eax,0x989bf85a
  405819:	(bad)  
  40581b:	retf   0x8017
  40581e:	mov    ebp,0x9d17e7ba
  405823:	add    al,0x97
  405825:	loopne 0x40580b
  405827:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405828:	push   edi
  405829:	mov    al,bh
  40582b:	scas   eax,DWORD PTR es:[edi]
  40582c:	sub    al,0x14
  40582e:	xchg   BYTE PTR es:[edi+0x46],cl
  405832:	or     bh,BYTE PTR [ecx+0x72]
  405835:	enter  0xb829,0xb
  405839:	iret   
  40583a:	jge    0x405833
  40583c:	nop
  40583d:	and    DWORD PTR [ebx-0x4f010638],edi
  405843:	imul   esp,DWORD PTR [ecx+0xc],0xae4a7094
  40584a:	fbstp  TBYTE PTR [esi-0x53]
  40584d:	shl    DWORD PTR [ecx-0x20],cl
  405850:	jge    0x405828
  405852:	sub    BYTE PTR [ecx+0x70ee8373],al
  405858:	inc    ebx
  405859:	aaa    
  40585a:	into   
  40585b:	lods   al,BYTE PTR ds:[esi]
  40585c:	inc    edx
  40585d:	push   ss
  40585e:	test   eax,0xfa8a3ba3
  405863:	retf   0x66f4
  405866:	(bad)  
  405867:	mov    ebp,0x99f84ecc
  40586c:	retf   
  40586d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40586e:	rcr    BYTE PTR [edx+0x25b29336],cl
  405874:	ret    0x91d7
  405877:	xchg   edi,eax
  405878:	push   edi
  405879:	call   0x6da17c40
  40587e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40587f:	shl    DWORD PTR [ecx-0x23],1
  405882:	aam    0x8c
  405884:	clc    
  405885:	mov    esp,0xc0f60d84
  40588a:	out    0x30,al
  40588c:	xchg   edx,eax
  40588d:	mov    bl,0x2
  40588f:	call   0x9852ccf7
  405894:	in     eax,0xd9
  405896:	out    0x0,eax
  405898:	jecxz  0x40587a
  40589a:	gs push esi
  40589c:	push   eax
  40589d:	pop    esi
  40589e:	dec    edi
  40589f:	mov    esi,0x170201bd
  4058a4:	sub    BYTE PTR [esi+ecx*2-0x22],ch
  4058a8:	cmp    ah,BYTE PTR [edx+esi*2+0x3c4a61c4]
  4058af:	pop    ebx
  4058b0:	pop    eax
  4058b1:	call   0xed96f6af
  4058b6:	jbe    0x405907
  4058b8:	jecxz  0x405857
  4058ba:	sbb    DWORD PTR [ecx+0x2f1b046d],0x7daa537f
  4058c4:	test   DWORD PTR [esi+0x6f],0x4e39363d
  4058cb:	js     0x4058fa
  4058cd:	aas    
  4058ce:	aad    0x86
  4058d0:	xchg   ecx,esp
  4058d2:	sbb    al,0x3
  4058d4:	es popa 
  4058d6:	outs   dx,DWORD PTR ds:[esi]
  4058d7:	popf   
  4058d8:	mov    ds,WORD PTR [ecx-0x5]
  4058db:	iret   
  4058dc:	sub    al,0x8d
  4058de:	in     eax,0xf5
  4058e0:	or     BYTE PTR [esi],bl
  4058e2:	mov    bh,0x5b
  4058e4:	push   0x6e1cab7e
  4058e9:	inc    ecx
  4058ea:	push   ebx
  4058eb:	mov    cl,0xaf
  4058ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058ee:	adc    BYTE PTR [edi+0x1a],ah
  4058f1:	sbb    DWORD PTR [edx+0x2d],ebx
  4058f4:	cmp    dh,bl
  4058f6:	inc    eax
  4058f7:	jns    0x405879
  4058f9:	inc    ebx
  4058fa:	mov    eax,ds:0x73f29e17
  4058ff:	into   
  405900:	inc    edi
  405901:	daa    
  405902:	add    al,0x77
  405904:	fistp  QWORD PTR [ebx+0x7426ca8f]
  40590a:	ficom  DWORD PTR [eax+eax*8+0x41]
  40590e:	leave  
  40590f:	add    al,0x7c
  405911:	rcr    DWORD PTR [edi+edx*8],cl
  405914:	les    eax,FWORD PTR ds:0x3e171c8e
  40591a:	push   es
  40591b:	cdq    
  40591c:	xor    eax,0x7abfc761
  405921:	std    
  405922:	rol    BYTE PTR [eax-0x35b3bed9],cl
  405928:	pop    ss
  405929:	(bad)  
  40592a:	pop    ss
  40592b:	clc    
  40592c:	xchg   edx,eax
  40592d:	daa    
  40592e:	jle    0x40591f
  405930:	xchg   edi,eax
  405931:	adc    DWORD PTR [bx-0x3539],edx
  405936:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405937:	inc    ecx
  405938:	mov    bh,0x8e
  40593a:	out    dx,eax
  40593b:	repz rcr ecx,cl
  40593e:	in     eax,dx
  40593f:	leave  
  405940:	and    ebp,eax
  405942:	pop    eax
  405943:	lods   al,BYTE PTR ds:[esi]
  405944:	mov    al,0x41
  405946:	sub    eax,0x7d229163
  40594b:	inc    esp
  40594c:	popa   
  40594d:	push   ebx
  40594e:	mov    al,0x6b
  405950:	cmp    ebx,esp
  405952:	ret    0xdb9
  405955:	sub    al,0xab
  405957:	pop    ebp
  405958:	sbb    eax,0x56f5ffac
  40595d:	inc    ebx
  40595e:	icebp  
  40595f:	dec    esi
  405960:	inc    edx
  405961:	lahf   
  405962:	mov    dl,0x22
  405964:	xchg   BYTE PTR [ebx-0x40],ch
  405967:	pushf  
  405968:	int    0x99
  40596a:	std    
  40596b:	or     al,0x70
  40596d:	pop    es
  40596e:	sub    DWORD PTR [eax+edx*1],ebx
  405971:	mov    esi,0xd3b9bb2c
  405976:	ret    0x2245
  405979:	sbb    BYTE PTR [ecx],dl
  40597b:	mov    eax,DWORD PTR ds:0xd10e11e6
  405981:	popa   
  405982:	push   edi
  405983:	gs or  eax,0x444e2ae3
  405989:	inc    esi
  40598a:	mov    fs,eax
  40598c:	out    dx,al
  40598d:	add    eax,ecx
  40598f:	pop    esi
  405990:	add    BYTE PTR [esi+0x1c],dh
  405993:	sub    DWORD PTR [edx+ebx*8],eax
  405996:	call   0x42f71532
  40599b:	xchg   esp,eax
  40599c:	push   eax
  40599d:	dec    edx
  40599e:	aaa    
  40599f:	in     eax,0x90
  4059a1:	repz je 0x40597a
  4059a4:	sub    BYTE PTR [eax-0x6b],0x87
  4059a8:	xchg   esi,eax
  4059a9:	jb     0x405989
  4059ab:	fdiv   QWORD PTR [ecx+edi*8]
  4059ae:	xchg   ebx,eax
  4059af:	ja     0x405a01
  4059b1:	sub    BYTE PTR [ebx+eax*4-0x7e],cl
  4059b5:	call   0xe945:0x2ed5eb44
  4059bc:	and    ebx,ebp
  4059be:	in     eax,0x91
  4059c0:	icebp  
  4059c1:	js     0x4059de
  4059c3:	addr16 loop 0x405955
  4059c6:	shr    bh,1
  4059c8:	stos   BYTE PTR es:[edi],al
  4059c9:	jle    0x405995
  4059cb:	(bad)  
  4059cd:	pop    ss
  4059ce:	popf   
  4059cf:	dec    ecx
  4059d0:	emms   
  4059d2:	pop    esi
  4059d3:	push   edi
  4059d4:	jae    0x4059cd
  4059d6:	xchg   ecx,eax
  4059d7:	pop    edi
  4059d8:	clc    
  4059d9:	mov    ebp,0x51a931a1
  4059de:	xchg   ebp,eax
  4059df:	lds    ebx,FWORD PTR ds:0xdd094676
  4059e5:	push   ebp
  4059e6:	fcmovb st,st(0)
  4059e8:	test   DWORD PTR [esi],ebx
  4059ea:	(bad)  
  4059eb:	fidivr WORD PTR [ecx]
  4059ed:	pusha  
  4059ee:	ins    BYTE PTR es:[edi],dx
  4059ef:	push   edi
  4059f0:	xor    ebx,DWORD PTR [esi-0x9891d85]
  4059f6:	retf   
  4059f7:	jo     0x405a71
  4059f9:	push   ss
  4059fa:	or     bl,dl
  4059fc:	lahf   
  4059fd:	jnp    0x4059e2
  4059ff:	in     eax,dx
  405a00:	xor    DWORD PTR [ebp+0x41686568],0xffffffd4
  405a07:	xchg   DWORD PTR [esi+0x79],eax
  405a0a:	enter  0x28c2,0xd7
  405a0e:	popa   
  405a0f:	in     al,0xd9
  405a11:	cli    
  405a12:	push   ss
  405a13:	bound  eax,QWORD PTR [ebx]
  405a15:	daa    
  405a16:	mov    dl,BYTE PTR [edx+esi*2]
  405a19:	addr16 call 0xc50512b8
  405a1f:	repnz or DWORD PTR [edi+0x6e27020d],ecx
  405a26:	fwait
  405a27:	cmp    al,0x50
  405a29:	xor    esp,ebp
  405a2b:	jg     0x405a3b
  405a2d:	icebp  
  405a2e:	mov    esp,0x3d08b35c
  405a33:	daa    
  405a34:	lds    esp,FWORD PTR [eax]
  405a36:	adc    eax,DWORD PTR [ebx]
  405a38:	shr    BYTE PTR [edx],1
  405a3a:	jne    0x405a8c
  405a3c:	push   ecx
  405a3d:	and    DWORD PTR [eax],esi
  405a3f:	out    dx,eax
  405a40:	jg     0x405aae
  405a42:	cdq    
  405a43:	lock imul ebp,eax,0x38
  405a47:	inc    esi
  405a48:	nop
  405a49:	cli    
  405a4a:	mov    ebx,0x9dbb4c9e
  405a4f:	dec    eax
  405a50:	ins    DWORD PTR es:[edi],dx
  405a51:	lods   eax,DWORD PTR ds:[esi]
  405a52:	mov    edi,0x116982a1
  405a57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a58:	test   BYTE PTR [ebp+0x5d],dh
  405a5b:	inc    edx
  405a5c:	aas    
  405a5d:	retf   
  405a5e:	jp     0x405abf
  405a60:	stos   BYTE PTR es:[edi],al
  405a61:	das    
  405a62:	bound  ecx,QWORD PTR [ebp+0x268f544f]
  405a68:	mov    ebp,0x944d8238
  405a6d:	pop    DWORD PTR [ecx+0x3d0ce89b]
  405a73:	(bad)  
  405a74:	jge    0x405a76
  405a76:	clc    
  405a77:	inc    edx
  405a78:	je     0x405a3b
  405a7a:	mov    ah,0x9e
  405a7c:	jnp    0x405a07
  405a7e:	push   ebp
  405a7f:	pop    edi
  405a80:	mov    esp,0x53c60d95
  405a85:	or     bh,BYTE PTR [eax]
  405a87:	push   eax
  405a88:	push   es
  405a89:	rcr    BYTE PTR [esi+ebx*4-0x3d01c39e],1
  405a90:	xor    ch,cl
  405a92:	and    BYTE PTR [esi-0x21aee933],ch
  405a98:	pop    eax
  405a99:	lock jp 0x405a1f
  405a9c:	test   DWORD PTR [esi+0x4e306639],ebx
  405aa2:	mov    dl,bl
  405aa4:	jae    0x405aec
  405aa6:	loopne 0x405a54
  405aa8:	ret    
  405aa9:	cmp    eax,0xf2972715
  405aae:	push   edi
  405aaf:	ds std 
  405ab1:	dec    eax
  405ab2:	jns    0x405b1a
  405ab4:	mov    ecx,0xa5aafe24
  405ab9:	aas    
  405aba:	fldcw  WORD PTR [ebx+0x16]
  405abd:	pop    edx
  405abe:	jmp    0x8b17eb47
  405ac3:	popf   
  405ac4:	xor    eax,0x743a29a1
  405ac9:	addr16 or eax,0xe1213776
  405acf:	xchg   edi,eax
  405ad0:	cmp    ecx,DWORD PTR [ebx-0xee324e9]
  405ad6:	out    dx,eax
  405ad7:	mov    ecx,edx
  405ad9:	idiv   DWORD PTR [edx]
  405adb:	and    edx,eax
  405add:	sbb    DWORD PTR [edi-0x1c],ebp
  405ae0:	pop    es
  405ae1:	inc    sp
  405ae3:	icebp  
  405ae4:	icebp  
  405ae5:	int    0x2d
  405ae7:	loope  0x405ae1
  405ae9:	cmp    cl,BYTE PTR [edx]
  405aeb:	das    
  405aec:	jecxz  0x405a8f
  405aee:	dec    ebx
  405aef:	fwait
  405af0:	adc    bl,BYTE PTR [esi]
  405af2:	aaa    
  405af3:	add    bh,BYTE PTR [edx+0x71f1c6ce]
  405af9:	ret    0x7e84
  405afc:	ins    DWORD PTR es:[edi],dx
  405afd:	neg    BYTE PTR [eax+0x53ff2229]
  405b03:	arpl   cx,bp
  405b05:	dec    ecx
  405b06:	dec    eax
  405b07:	mov    al,0xc9
  405b09:	xor    bl,bl
  405b0b:	ret    0x9946
  405b0e:	aaa    
  405b0f:	add    BYTE PTR [edx+0x1a],bl
  405b12:	mov    al,ds:0x2518ca53
  405b17:	call   0x16b7:0x9bc07fdf
  405b1e:	lods   al,BYTE PTR ds:[esi]
  405b1f:	xchg   ebp,eax
  405b20:	pop    ebx
  405b21:	out    dx,eax
  405b22:	(bad)  
  405b23:	ret    
  405b24:	mov    eax,DWORD PTR [ecx-0x517d088b]
  405b2a:	sbb    edi,ebp
  405b2c:	sar    DWORD PTR [ebx],0x4b
  405b2f:	jo     0x405aec
  405b31:	dec    ebx
  405b32:	outs   dx,BYTE PTR ds:[esi]
  405b33:	aad    0x9c
  405b35:	mov    DWORD PTR [ecx-0x73cb341e],ebx
  405b3b:	nop
  405b3c:	jmp    0xa507:0xbfbaa585
  405b43:	pop    esi
  405b44:	mov    dh,0xde
  405b46:	test   DWORD PTR [eax],ebx
  405b48:	imul   ecx,DWORD PTR [edi+0x63],0xffffffe0
  405b4c:	dec    esi
  405b4d:	lds    ebx,FWORD PTR ds:0x23797317
  405b53:	mov    bh,0x87
  405b55:	or     BYTE PTR [esi-0x61],ch
  405b58:	pop    edx
  405b59:	ins    BYTE PTR es:[edi],dx
  405b5a:	(bad)  
  405b5b:	stos   BYTE PTR es:[edi],al
  405b5c:	in     eax,0x7e
  405b5e:	outs   dx,BYTE PTR ds:[esi]
  405b5f:	(bad)  
  405b60:	jns    0x405b2f
  405b62:	(bad)  
  405b64:	cmp    eax,0x78fbca76
  405b69:	ror    ah,cl
  405b6b:	and    esi,DWORD PTR [ecx]
  405b6d:	lods   eax,DWORD PTR ds:[esi]
  405b6e:	mov    cl,0xc8
  405b70:	pop    edx
  405b71:	sbb    dl,BYTE PTR [edi-0x5f]
  405b74:	fadd   st(7),st
  405b76:	es in  eax,0x69
  405b79:	mov    esi,0x91488b84
  405b7e:	sbb    BYTE PTR [ebx+esi*8],dl
  405b81:	push   ds
  405b82:	aam    0xbd
  405b84:	stc    
  405b85:	xor    DWORD PTR [ebp-0x52],ecx
  405b88:	nop
  405b89:	inc    edi
  405b8a:	lods   eax,DWORD PTR fs:[esi]
  405b8c:	pop    eax
  405b8d:	adc    al,0x32
  405b8f:	jl     0x405b43
  405b91:	or     ch,BYTE PTR [ecx]
  405b93:	pop    ss
  405b94:	mov    edx,0x1c3f489a
  405b99:	inc    edx
  405b9a:	fs dec esp
  405b9c:	push   ebx
  405b9d:	test   al,0xd6
  405b9f:	mov    ch,0x43
  405ba1:	jb     0x405b71
  405ba3:	gs stos DWORD PTR es:[edi],eax
  405ba5:	out    0xe9,eax
  405ba7:	xchg   BYTE PTR [ecx-0x69],cl
  405baa:	pop    edi
  405bab:	and    ebp,ebx
  405bad:	push   ecx
  405bae:	and    edx,ebx
  405bb0:	popf   
  405bb1:	in     al,0xbc
  405bb3:	(bad)  
  405bb4:	imul   BYTE PTR ds:[esi+ecx*2]
  405bb8:	cmp    dh,bl
  405bba:	dec    esp
  405bbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bbc:	mov    ds:0xbed07799,eax
  405bc1:	mov    bl,dl
  405bc3:	fcmovnbe st,st(5)
  405bc5:	mov    ebp,0xe4a9ce70
  405bca:	and    al,0x94
  405bcc:	sbb    al,0x9f
  405bce:	jle    0x405b8c
  405bd0:	push   ds
  405bd1:	dec    edx
  405bd2:	aaa    
  405bd3:	lea    ecx,[ecx]
  405bd5:	out    dx,al
  405bd6:	cmp    DWORD PTR [edx],0x73
  405bd9:	pop    ds
  405bda:	arpl   di,si
  405bdc:	and    eax,0x835c1577
  405be1:	mov    cl,0x89
  405be3:	mov    ds:0x4e9ce6d7,al
  405be8:	idiv   DWORD PTR [ecx]
  405bea:	ds in  eax,0xb2
  405bed:	stos   BYTE PTR es:[edi],al
  405bee:	jmp    0x405bba
  405bf0:	inc    BYTE PTR [esp+ebp*8]
  405bf3:	jl     0x405c60
  405bf5:	out    dx,eax
  405bf6:	push   edi
  405bf7:	(bad)  
  405bf9:	icebp  
  405bfa:	push   ecx
  405bfb:	arpl   WORD PTR [edi-0x6a],di
  405bfe:	scas   eax,DWORD PTR es:[edi]
  405bff:	and    edi,edi
  405c01:	jbe    0x405c0c
  405c03:	xchg   esp,eax
  405c04:	mov    ecx,0x281bb6b5
  405c09:	inc    esi
  405c0a:	xchg   esp,eax
  405c0b:	dec    edi
  405c0c:	outs   dx,BYTE PTR ds:[esi]
  405c0d:	mov    ecx,0x74dde057
  405c12:	ins    DWORD PTR es:[edi],dx
  405c13:	repnz test al,0x58
  405c16:	cmc    
  405c17:	xchg   ebx,eax
  405c18:	(bad)  
  405c19:	rcl    BYTE PTR [eax],1
  405c1b:	out    0xb6,eax
  405c1d:	sar    DWORD PTR [esi],cl
  405c1f:	and    BYTE PTR cs:[esi-0x1c57b453],0x68
  405c27:	int    0xdb
  405c29:	test   al,0x70
  405c2b:	(bad)  
  405c2c:	out    0xbc,eax
  405c2e:	pop    edi
  405c2f:	pop    ss
  405c30:	sti    
  405c31:	scas   eax,DWORD PTR es:[edi]
  405c32:	mov    ebx,DWORD PTR [esi]
  405c34:	push   edx
  405c35:	cwde   
  405c36:	jbe    0x405c0a
  405c38:	mov    esi,0xe276165
  405c3d:	xchg   edi,eax
  405c3e:	push   0xfffffff1
  405c40:	push   cs
  405c41:	add    edi,DWORD PTR [ebx]
  405c43:	push   0xe870e7d1
  405c48:	adc    BYTE PTR [edx],dl
  405c4a:	xor    BYTE PTR [ebx],dl
  405c4c:	lahf   
  405c4d:	dec    eax
  405c4e:	cdq    
  405c4f:	setae  bl
  405c52:	jbe    0x405cb6
  405c54:	inc    ebx
  405c55:	jne    0x405cc3
  405c57:	in     eax,0x36
  405c59:	cld    
  405c5a:	sub    BYTE PTR [ecx-0x6a],ch
  405c5d:	fstp   st(2)
  405c5f:	pop    ss
  405c60:	pushf  
  405c61:	fadd   QWORD PTR [edx]
  405c63:	enter  0x10cd,0x7c
  405c67:	retf   0xd3f9
  405c6a:	fnstcw WORD PTR [ecx-0x72]
  405c6d:	cmc    
  405c6e:	push   es
  405c6f:	jmp    0x405cd6
  405c71:	mov    al,0x9
  405c73:	leave  
  405c74:	pop    ds
  405c75:	cmp    eax,0xb8fdc53e
  405c7a:	pop    esp
  405c7b:	pop    es
  405c7c:	jecxz  0x405c8c
  405c7e:	adc    al,0x7
  405c80:	retf   
  405c81:	in     al,0xce
  405c83:	or     eax,0x6df95f27
  405c88:	cmp    eax,0x831907e1
  405c8d:	stos   BYTE PTR es:[edi],al
  405c8e:	mov    dl,0xa5
  405c90:	sbb    ebx,edx
  405c92:	inc    esp
  405c93:	fmul   st,st(1)
  405c95:	push   ss
  405c96:	outs   dx,DWORD PTR ds:[esi]
  405c97:	stos   BYTE PTR es:[edi],al
  405c98:	xor    BYTE PTR [edi+0x5e],ch
  405c9b:	push   ss
  405c9c:	add    dh,dh
  405c9e:	repz sub eax,edi
  405ca1:	pop    ss
  405ca2:	mov    ah,0x64
  405ca4:	pop    ebx
  405ca5:	jo     0x405d0d
  405ca7:	xchg   ecx,eax
  405ca8:	push   ecx
  405ca9:	dec    ecx
  405caa:	rol    DWORD PTR [esi+eiz*1-0x67],1
  405cae:	mov    al,ds:0xe604c1b5
  405cb3:	pop    edi
  405cb4:	and    esi,edi
  405cb6:	shl    ah,cl
  405cb8:	call   DWORD PTR [edi-0xb44d1ba]
  405cbe:	sar    BYTE PTR [edi+0x15],1
  405cc1:	mov    WORD PTR [ebp-0x7bcb223],es
  405cc7:	mov    al,0x55
  405cc9:	xor    al,0x90
  405ccb:	pushf  
  405ccc:	ss iret 
  405cce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ccf:	fdiv   DWORD PTR [edi-0x1575dd67]
  405cd5:	xchg   ah,cl
  405cd7:	pop    ebx
  405cd8:	xchg   esp,eax
  405cd9:	xchg   edx,eax
  405cda:	mov    esi,0x74427d4c
  405cdf:	xor    ebp,ebx
  405ce1:	enter  0x3c28,0x80
  405ce5:	sar    DWORD PTR [eax+0x11],0x7a
  405ce9:	fisttp DWORD PTR [edi-0x35]
  405cec:	pop    ebx
  405ced:	sahf   
  405cee:	jbe    0x405ca5
  405cf0:	mov    bl,0x32
  405cf2:	inc    edx
  405cf3:	ss and eax,0xa887eef8
  405cf9:	jg     0x405cc3
  405cfb:	lea    eax,[ecx-0x7e75ab36]
  405d01:	rol    DWORD PTR [esi-0x2a],1
  405d04:	adc    al,0xe4
  405d06:	fst    QWORD PTR [ebp-0x51]
  405d09:	leave  
  405d0a:	inc    edi
  405d0b:	loope  0x405d69
  405d0d:	and    eax,0x13feba21
  405d12:	xchg   ebp,eax
  405d13:	clc    
  405d14:	shl    DWORD PTR [ebx+0x37887f29],1
  405d1a:	jmp    0x7c39:0xfe46d006
  405d21:	add    BYTE PTR [esi+ebp*4],cl
  405d24:	jnp    0x405cef
  405d26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d27:	stos   DWORD PTR es:[edi],eax
  405d28:	add    BYTE PTR cs:[ecx],ah
  405d2b:	(bad)  
  405d2d:	sbb    al,0xbc
  405d2f:	retf   0xf9b7
  405d32:	mov    dl,0xfe
  405d34:	lock ja 0x405d8f
  405d37:	sub    DWORD PTR [ebp+0x78e48987],ebp
  405d3d:	scas   eax,DWORD PTR es:[edi]
  405d3e:	outs   dx,DWORD PTR ds:[esi]
  405d3f:	or     al,0xf0
  405d41:	test   BYTE PTR [esi-0x4f],cl
  405d44:	cmp    ecx,edx
  405d46:	and    ebx,edx
  405d48:	add    BYTE PTR ds:0x3365fbb4,dh
  405d4e:	pop    esi
  405d4f:	cmp    BYTE PTR [ebx-0x1325ae29],al
  405d55:	push   ecx
  405d56:	or     ch,BYTE PTR [edi]
  405d58:	lds    esi,FWORD PTR [edx-0x30]
  405d5b:	and    al,0xe0
  405d5d:	int3   
  405d5e:	sbb    ebx,0xffffffaf
  405d61:	stc    
  405d62:	mov    edi,0xcfbe58df
  405d67:	push   cs
  405d68:	out    dx,al
  405d69:	mov    ecx,0x7d39b4e4
  405d6e:	loope  0x405d47
  405d70:	inc    eax
  405d71:	and    al,0xb6
  405d73:	pop    esi
  405d74:	aam    0xf8
  405d76:	pusha  
  405d77:	and    DWORD PTR [ecx],ecx
  405d79:	add    DWORD PTR [ebx],ebx
  405d7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d7c:	arpl   bx,si
  405d7e:	adc    dh,al
  405d80:	mov    cl,0xac
  405d82:	test   BYTE PTR [eax+0x4f837da5],ch
  405d88:	and    edi,DWORD PTR [ebp+0x7fc11b5d]
  405d8e:	ret    
  405d8f:	retf   
  405d90:	add    eax,0x379aedad
  405d95:	xchg   ebx,eax
  405d96:	test   eax,0x65525c9c
  405d9b:	imul   edx,DWORD PTR [edi],0xe1164777
  405da1:	jge    0x405d6e
  405da3:	pop    ebp
  405da4:	or     BYTE PTR [eax+0x477c82cb],0x6d
  405dab:	dec    esp
  405dac:	je     0x405df8
  405dae:	cmp    DWORD PTR [esi+edi*1],esi
  405db1:	inc    edx
  405db2:	xchg   edx,eax
  405db3:	mov    dl,0xd1
  405db5:	bound  esi,QWORD PTR [ecx]
  405db7:	cmp    DWORD PTR [ebp+0x6c825304],edi
  405dbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405dbe:	shl    DWORD PTR [edi-0x30],1
  405dc1:	sbb    BYTE PTR [ebx],0x96
  405dc4:	shl    BYTE PTR ds:0x25bb7fb1,1
  405dca:	mov    esp,0x5d25aa98
  405dcf:	retf   0x95a9
  405dd2:	loopne 0x405e40
  405dd4:	lds    esi,FWORD PTR [edx-0x6e3c305c]
  405dda:	cmp    cl,ch
  405ddc:	leave  
  405ddd:	sub    ebp,DWORD PTR [ebx-0x33]
  405de0:	xchg   edx,eax
  405de1:	repnz fcomp DWORD PTR ds:0xf49cc232
  405de8:	pop    ecx
  405de9:	es and edi,ebx
  405dec:	ja     0x405e05
  405dee:	xor    dh,dl
  405df0:	retf   
  405df1:	cmp    DWORD PTR [ecx],0xffffff95
  405df4:	inc    eax
  405df5:	jmp    eax
  405df7:	cmp    DWORD PTR [esi+0x1aa16929],0x1c
  405dfe:	push   ss
  405dff:	add    dh,BYTE PTR ds:0x5bc98fb3
  405e05:	jecxz  0x405e74
  405e07:	aaa    
  405e08:	push   ds
  405e09:	dec    esp
  405e0a:	jg     0x405e32
  405e0c:	test   DWORD PTR [ecx],ecx
  405e0e:	jae    0x405d95
  405e10:	sbb    eax,ebp
  405e12:	adc    ah,0x50
  405e15:	and    al,cl
  405e17:	sub    ecx,DWORD PTR [eax-0x5bffa2bd]
  405e1d:	jg     0x405e53
  405e1f:	xchg   BYTE PTR [edi],al
  405e21:	cld    
  405e22:	dec    ecx
  405e23:	mov    esi,0x3b808f5a
  405e28:	push   es
  405e29:	imul   esp,DWORD PTR [ecx-0x6287788e],0x2e
  405e30:	or     bl,BYTE PTR ds:0x7649309c
  405e36:	retf   0x46cc
  405e39:	imul   esp,esi,0x5f
  405e3c:	mov    ds:0x3252187,eax
  405e41:	sub    al,0x28
  405e43:	or     al,0x0
  405e45:	dec    eax
  405e46:	inc    esi
  405e47:	outs   dx,BYTE PTR ds:[esi]
  405e48:	mov    dh,0x8a
  405e4a:	ficom  DWORD PTR [edi+ecx*4-0x5d]
  405e4e:	or     edi,DWORD PTR [esi+0x1c]
  405e51:	push   0xffffffec
  405e53:	cdq    
  405e54:	pop    eax
  405e55:	add    BYTE PTR ds:0x1989eaa7,0xad
  405e5d:	mov    al,0x73
  405e5f:	popf   
  405e60:	mov    bl,0x8e
  405e62:	sti    
  405e63:	pop    es
  405e64:	xor    al,0xbf
  405e66:	clc    
  405e67:	jge    0x405e5b
  405e69:	repnz popa 
  405e6b:	das    
  405e6c:	imul   edx,DWORD PTR [ecx-0x77],0x2b
  405e70:	dec    ebx
  405e71:	pop    esi
  405e72:	ja     0x405e96
  405e74:	shl    eax,0x5
  405e77:	xchg   edi,eax
  405e78:	add    DWORD PTR [edi+0x3ca0ed1],ebx
  405e7e:	cli    
  405e7f:	mov    bh,0x14
  405e81:	mov    DWORD PTR [ecx],ecx
  405e83:	cmp    al,BYTE PTR [ecx+edx*4-0x51]
  405e87:	dec    edi
  405e88:	and    dh,ch
  405e8a:	ss inc edx
  405e8c:	(bad)  
  405e8d:	aas    
  405e8e:	test   al,0xda
  405e90:	cs jp  0x405e58
  405e93:	jl     0x405f11
  405e95:	mov    ss,WORD PTR [ebp-0x4d]
  405e98:	mov    BYTE PTR [esp+esi*8],dh
  405e9b:	and    DWORD PTR [ebx],eax
  405e9d:	retf   
  405e9e:	scas   eax,DWORD PTR es:[edi]
  405e9f:	bound  esp,QWORD PTR [edi-0x18777f9c]
  405ea5:	push   0xffffffdf
  405ea7:	(bad)  
  405ea8:	push   0xfffffff7
  405eaa:	jle    0x405e8f
  405eac:	retf   0x711d
  405eaf:	mov    ebp,0xa5bdfb46
  405eb4:	mov    bh,ah
  405eb6:	sar    BYTE PTR [ecx+0x1b8606d2],1
  405ebc:	xor    al,0x0
  405ebe:	or     ah,dl
  405ec0:	push   0xffffffb3
  405ec2:	scas   eax,DWORD PTR es:[edi]
  405ec3:	jmp    0x405e7d
  405ec5:	mov    ds:0x38f6cce1,al
  405eca:	inc    ebp
  405ecb:	adc    cl,BYTE PTR [ebx+0x70]
  405ece:	cmc    
  405ecf:	jl     0x405e7e
  405ed1:	iret   
  405ed2:	sbb    dh,BYTE PTR [edx]
  405ed4:	fsubp  st(4),st
  405ed6:	jns    0x405e76
  405ed8:	inc    ecx
  405ed9:	and    bh,BYTE PTR [edx+edx*2+0x35]
  405edd:	nop/reserved BYTE PTR [edi+0x4a498267]
  405ee4:	xor    al,0xe1
  405ee6:	inc    esi
  405ee7:	xchg   ebx,eax
  405ee8:	inc    esp
  405ee9:	ins    BYTE PTR es:[edi],dx
  405eea:	inc    esp
  405eeb:	push   ds
  405eec:	hlt    
  405eed:	push   edx
  405eee:	push   ebx
  405eef:	rcl    dl,1
  405ef1:	test   BYTE PTR [esi-0x9],ah
  405ef4:	lock test bh,0x38
  405ef8:	stc    
  405ef9:	shl    BYTE PTR [esi-0x7e],1
  405efc:	call   FWORD PTR [ebp+0x30701ee5]
  405f02:	sahf   
  405f03:	pop    esp
  405f04:	mov    ebp,0xb5009e5f
  405f09:	test   ecx,eax
  405f0b:	(bad)  
  405f0c:	fs call 0x210c78fa
  405f12:	hlt    
  405f13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f14:	outs   dx,BYTE PTR ds:[esi]
  405f15:	sub    DWORD PTR [edx],ecx
  405f17:	mov    DWORD PTR [edx],ecx
  405f19:	jmp    DWORD PTR [edx]
  405f1b:	mov    ebx,0xd1a69669
  405f20:	mov    dl,0xc3
  405f22:	jae    0x405f11
  405f24:	scas   eax,DWORD PTR es:[edi]
  405f25:	bound  ebx,QWORD PTR [eax-0x3808dd5e]
  405f2b:	inc    ebp
  405f2c:	int3   
  405f2d:	or     DWORD PTR [eax],eax
  405f2f:	add    BYTE PTR [eax],al
  405f31:	mov    ecx,DWORD PTR [ebp+0x8]
  405f34:	xor    ecx,esi
  405f36:	add    ecx,edi
  405f38:	jmp    0x40a8de
  405f3d:	lea    eax,[ecx+ebx*1]
  405f40:	mov    DWORD PTR [ebp-0x2c],eax
  405f43:	mov    eax,DWORD PTR [ebp-0x58]
  405f46:	sub    eax,ecx
  405f48:	mov    DWORD PTR [ebp-0x1c],eax
  405f4b:	mov    eax,DWORD PTR [ebp-0x1c]
  405f4e:	mov    DWORD PTR [ebp-0x14],eax
  405f51:	mov    eax,DWORD PTR [ebp-0x2c]
  405f54:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  405f5b:	mov    DWORD PTR [ebp-0x54],eax
  405f5e:	mov    DWORD PTR [ebp-0x20],0xf89c85ba
  405f65:	mov    eax,DWORD PTR [ebp-0x38]
  405f68:	xor    eax,esi
  405f6a:	add    eax,edi
  405f6c:	mov    DWORD PTR [ebp-0x10],eax
  405f6f:	mov    eax,DWORD PTR [ebp-0x38]
  405f72:	xor    eax,esi
  405f74:	add    eax,edi
  405f76:	mov    DWORD PTR [ebp-0x8],eax
  405f79:	mov    DWORD PTR [ebp-0x2c],0xf89c8599
  405f80:	mov    DWORD PTR [ebp-0x44],0xf89c85b0
  405f87:	mov    eax,DWORD PTR [ebp-0x38]
  405f8a:	mov    edx,DWORD PTR [ebp-0x14]
  405f8d:	xor    eax,esi
  405f8f:	add    eax,edi
  405f91:	cmp    edx,eax
  405f93:	je     0x40a8d2
  405f99:	mov    eax,DWORD PTR [ebp-0x20]
  405f9c:	xor    eax,esi
  405f9e:	mov    edx,0xffcd8d11
  405fa3:	sub    edx,eax
  405fa5:	add    edx,DWORD PTR [ebp-0x14]
  405fa8:	mov    eax,DWORD PTR [ebp-0x20]
  405fab:	mov    ebx,DWORD PTR [ebp-0x10]
  405fae:	xor    eax,esi
  405fb0:	add    eax,edi
  405fb2:	imul   eax,ebx
  405fb5:	cmp    eax,edx
  405fb7:	ja     0x40a8cf
  405fbd:	mov    edx,DWORD PTR [ebp-0x10]
  405fc0:	mov    eax,DWORD PTR [ebp-0x14]
  405fc3:	mov    ebx,DWORD PTR [ebp-0x2c]
  405fc6:	sub    eax,edx
  405fc8:	xor    ebx,esi
  405fca:	xor    edx,edx
  405fcc:	add    ebx,edi
  405fce:	div    ebx
  405fd0:	mov    DWORD PTR [ebp-0x8],eax
  405fd3:	mov    eax,DWORD PTR [ebp-0x44]
  405fd6:	mov    edx,DWORD PTR [ebp-0x8]
  405fd9:	xor    eax,esi
  405fdb:	add    eax,edi
  405fdd:	cmp    edx,eax
  405fdf:	jbe    0x405fef
  405fe5:	mov    eax,DWORD PTR [ebp-0x44]
  405fe8:	xor    eax,esi
  405fea:	add    eax,edi
  405fec:	mov    DWORD PTR [ebp-0x8],eax
  405fef:	mov    eax,DWORD PTR [ebp-0x2c]
  405ff2:	mov    edx,DWORD PTR [ebp-0x8]
  405ff5:	xor    eax,esi
  405ff7:	add    eax,edi
  405ff9:	imul   eax,edx
  405ffc:	mov    DWORD PTR [ebp-0x8],eax
  405fff:	mov    eax,DWORD PTR [ebp-0x38]
  406002:	mov    edx,DWORD PTR [ebp-0x8]
  406005:	xor    eax,esi
  406007:	add    eax,edi
  406009:	cmp    edx,eax
  40600b:	je     0x40a8b8
  406011:	mov    eax,DWORD PTR [ebp-0x8]
  406014:	mov    DWORD PTR [ebp-0x18],eax
  406017:	mov    eax,DWORD PTR [ebp-0x10]
  40601a:	add    eax,DWORD PTR [ebp-0x54]
  40601d:	mov    DWORD PTR [ebp-0x1c],0xf89c85b9
  406024:	mov    DWORD PTR [ebp-0x8],eax
  406027:	mov    eax,0xf89c85ba
  40602c:	mov    DWORD PTR [ebp-0x28],eax
  40602f:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  406036:	mov    DWORD PTR [ebp-0x40],0xf89c85bc
  40603d:	mov    DWORD PTR [ebp-0x30],eax
  406040:	mov    eax,DWORD PTR [ebp-0x1c]
  406043:	xor    eax,esi
  406045:	add    eax,edi
  406047:	jmp    0x40a874
  40604c:	mov    DWORD PTR [ebp-0x4c],0xf89c85b4
  406053:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  40605a:	mov    eax,DWORD PTR [ebp-0x30]
  40605d:	mov    edx,DWORD PTR [ebp-0xc]
  406060:	xor    eax,esi
  406062:	add    eax,edi
  406064:	imul   eax,edx
  406067:	jmp    0x40840a
  40606c:	pop    edx
  40606d:	add    BYTE PTR [eax-0x613b5f9c],ah
  406073:	add    al,0x73
  406075:	xor    eax,0x9f41eab1
  40607a:	scas   al,BYTE PTR es:[edi]
  40607b:	mov    BYTE PTR [esi+0x33],dh
  40607e:	jp     0x4060fa
  406080:	cld    
  406081:	pop    edi
  406082:	jp     0x4060fe
  406084:	and    ecx,0x7b218506
  40608a:	pop    ss
  40608b:	repnz pusha 
  40608d:	scas   eax,DWORD PTR es:[edi]
  40608e:	add    al,0xab
  406090:	out    0xc5,eax
  406092:	and    ch,cl
  406094:	or     BYTE PTR [ebp+eiz*4-0x5b8a9ee4],ch
  40609b:	jge    0x4060d2
  40609d:	leave  
  40609e:	mov    al,ds:0xda9b142d
  4060a3:	push   edi
  4060a4:	inc    edi
  4060a5:	xor    DWORD PTR [esi+0x5a],edi
  4060a8:	lahf   
  4060a9:	das    
  4060aa:	(bad)  
  4060ab:	ja     0x40606b
  4060ad:	test   BYTE PTR [edi-0x7a830a97],dl
  4060b3:	stc    
  4060b4:	aad    0x6c
  4060b6:	sbb    DWORD PTR [ecx+0x6ea46880],esp
  4060bc:	push   esp
  4060bd:	mov    esp,0x1685d5c1
  4060c2:	add    DWORD PTR [edi+eax*8+0x19],ebx
  4060c6:	cmp    al,bl
  4060c8:	out    dx,eax
  4060c9:	cmp    DWORD PTR [ecx],0x26649672
  4060cf:	ret    0x135f
  4060d2:	xlat   BYTE PTR ds:[ebx]
  4060d3:	xchg   ebp,eax
  4060d4:	das    
  4060d5:	inc    esp
  4060d6:	sub    al,0x6d
  4060d8:	dec    ebx
  4060d9:	ja     0x40607f
  4060db:	dec    ebp
  4060dc:	icebp  
  4060dd:	sti    
  4060de:	mov    bh,0x51
  4060e0:	cmp    eax,0x6875fc35
  4060e5:	jecxz  0x40606c
  4060e7:	mov    eax,ds:0xc1d9f336
  4060ec:	mov    ds:0xa4032ec5,al
  4060f1:	and    DWORD PTR ds:0xf361e735,0x62
  4060f8:	mov    dl,0x43
  4060fa:	scas   al,BYTE PTR es:[edi]
  4060fb:	dec    ebx
  4060fc:	xor    eax,0xd1c8f0b4
  406101:	xchg   ebx,eax
  406102:	rcl    ecx,cl
  406104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406105:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406106:	and    DWORD PTR [eax+0x6bced176],edx
  40610c:	dec    esi
  40610d:	imul   ebx,DWORD PTR [edi-0x33031c6e],0x4a
  406114:	sub    DWORD PTR [bp+si],edx
  406117:	and    al,0xf
  406119:	das    
  40611a:	and    ch,al
  40611c:	fisttp DWORD PTR [ebp-0x778371a8]
  406122:	(bad)  
  406124:	adc    BYTE PTR [eax+edx*8],cl
  406127:	inc    ebx
  406128:	shr    BYTE PTR [edi],0x26
  40612b:	lea    esi,[esi]
  40612d:	dec    ecx
  40612e:	and    eax,0x4c423889
  406133:	lods   al,BYTE PTR ds:[esi]
  406134:	and    dh,BYTE PTR [esi-0x4d]
  406137:	retf   
  406138:	or     bl,0x63
  40613b:	jle    0x4060d0
  40613d:	and    ch,BYTE PTR [esi-0x20]
  406140:	pop    ecx
  406141:	or     BYTE PTR [ebp+0x6b],bh
  406144:	ds in  eax,0x6f
  406147:	es (bad) 
  406149:	push   cs
  40614a:	mov    DWORD PTR [ebx+0x3404f982],ebx
  406150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406151:	mov    ecx,edi
  406153:	dec    edi
  406154:	sub    al,BYTE PTR [ebp+0x42]
  406157:	cmp    edi,DWORD PTR [ecx+0x16]
  40615a:	mov    WORD PTR [ebp-0x3d],?
  40615d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40615e:	or     ebp,DWORD PTR [ebx]
  406160:	mov    dl,0x92
  406162:	mov    eax,0xfb82f740
  406167:	dec    eax
  406168:	pop    eax
  406169:	jns    0x406108
  40616b:	add    DWORD PTR [ecx-0x6b13f250],esp
  406171:	data16 sub BYTE PTR [edi],0x39
  406175:	rcl    BYTE PTR [edx+0x31],cl
  406178:	pop    ecx
  406179:	mov    eax,ds:0x5b1db31f
  40617e:	sub    eax,0x6fe96aa4
  406183:	xchg   esp,eax
  406184:	les    esi,FWORD PTR ds:0xb318feae
  40618a:	je     0x40616d
  40618c:	ret    
  40618d:	mov    ecx,0x247dab21
  406192:	in     eax,dx
  406193:	leave  
  406194:	fcomp  DWORD PTR [ecx-0x5ead3b13]
  40619a:	jns    0x406184
  40619c:	mov    ecx,0xd24678a0
  4061a1:	add    DWORD PTR [ebx-0x58d71cf7],0x423fc3cf
  4061ab:	adc    al,0x88
  4061ad:	call   0x340c:0x2398d26b
  4061b4:	jecxz  0x406180
  4061b6:	xor    al,0x87
  4061b8:	nop
  4061b9:	adc    eax,0x1130b734
  4061be:	xchg   esp,eax
  4061bf:	sub    ax,0xf4f
  4061c3:	sar    dh,cl
  4061c5:	mov    ds,WORD PTR [edx]
  4061c7:	push   ebx
  4061c8:	in     al,dx
  4061c9:	cli    
  4061ca:	out    dx,eax
  4061cb:	adc    DWORD PTR [esi+0xf7ce866],edx
  4061d1:	popa   
  4061d2:	push   cs
  4061d3:	ret    
  4061d4:	and    bh,BYTE PTR [eax-0x75]
  4061d7:	xor    BYTE PTR [esi-0x5f46b1b6],0x83
  4061de:	mov    fs,edx
  4061e0:	adc    eax,0x22a2b54d
  4061e5:	mov    esi,0x67def3ab
  4061ea:	ins    DWORD PTR es:[edi],dx
  4061eb:	cmc    
  4061ec:	popa   
  4061ed:	push   esp
  4061ee:	cmc    
  4061ef:	ins    BYTE PTR es:[edi],dx
  4061f0:	mov    ch,0x17
  4061f2:	xchg   edi,eax
  4061f3:	sar    cl,1
  4061f5:	jae    0x4061bc
  4061f7:	fwait
  4061f8:	push   edi
  4061f9:	cld    
  4061fa:	push   cs
  4061fb:	sti    
  4061fc:	adc    bh,BYTE PTR [esi+0x2fd9d955]
  406202:	dec    ebx
  406203:	and    cl,bl
  406205:	(bad)  
  406206:	cmp    al,0x36
  406208:	mul    BYTE PTR [ecx+0x54]
  40620b:	mov    dh,0xa0
  40620d:	test   al,0xa1
  40620f:	addr16 mov ds:0x9011,eax
  406213:	aas    
  406214:	xlat   BYTE PTR ds:[ebx]
  406215:	nop
  406216:	cld    
  406217:	sbb    cl,BYTE PTR [esi+0x3a]
  40621a:	into   
  40621b:	jne    0x406215
  40621d:	(bad)  
  40621e:	dec    ecx
  40621f:	ret    
  406220:	cld    
  406221:	(bad)  
  406222:	out    0x95,al
  406224:	cmp    BYTE PTR [ebp+0x532d69d4],dh
  40622a:	ins    BYTE PTR es:[edi],dx
  40622b:	add    esp,DWORD PTR [ebx]
  40622d:	addr16 add dl,0xbb
  406231:	rcl    DWORD PTR [ecx-0x60dfc4cb],cl
  406237:	jo     0x4062a9
  406239:	jbe    0x406246
  40623b:	loope  0x406267
  40623d:	daa    
  40623e:	loopne 0x406283
  406240:	sbb    DWORD PTR [ebx],ebx
  406242:	add    esi,DWORD PTR [eax+ebx*4]
  406245:	lods   eax,DWORD PTR es:[esi]
  406247:	ret    0x6d96
  40624a:	ret    
  40624b:	repnz inc ecx
  40624d:	mov    esi,0x1d8040fc
  406252:	in     eax,dx
  406253:	lea    esi,[ebp-0x66]
  406256:	pusha  
  406257:	xor    DWORD PTR ds:0xc7dda537,edi
  40625d:	cmc    
  40625e:	imul   esp,DWORD PTR [eax-0x79074b80],0xe8f7d3af
  406268:	add    al,0xf9
  40626a:	or     eax,0x2c1240e8
  40626f:	sbb    al,0x85
  406271:	fdiv   DWORD PTR [esi+eiz*4]
  406274:	cli    
  406275:	mov    ds:0xa7db5b0e,eax
  40627a:	pop    edx
  40627b:	add    ah,ch
  40627d:	jno    0x4062f2
  40627f:	loope  0x406292
  406281:	or     eax,0xd01d1f09
  406286:	push   ds
  406287:	or     eax,0xdc92d326
  40628c:	neg    DWORD PTR [ecx+0x48]
  40628f:	adc    al,0x90
  406291:	xor    al,0x46
  406293:	cmp    al,0x22
  406295:	push   ebx
  406296:	rcr    BYTE PTR [edi-0x7e],cl
  406299:	lods   eax,DWORD PTR ds:[esi]
  40629a:	fnstenv [ebx-0x41]
  40629d:	xor    al,0xf7
  40629f:	test   al,0xa0
  4062a1:	push   ss
  4062a2:	enter  0x4211,0x8e
  4062a6:	pop    esi
  4062a7:	leave  
  4062a8:	or     eax,0x7971aa35
  4062ad:	sbb    BYTE PTR [esi+esi*2-0xc],0xc7
  4062b2:	ja     0x4062c6
  4062b4:	cmp    eax,0x2357d51b
  4062b9:	pop    ebp
  4062ba:	jge    0x4062a2
  4062bc:	call   0xbe5b8805
  4062c1:	mov    ecx,0xbb8fc7e
  4062c6:	inc    esi
  4062c7:	pop    edx
  4062c8:	adc    al,0x6d
  4062ca:	retf   
  4062cb:	xchg   DWORD PTR [ecx],esp
  4062cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062ce:	outs   dx,DWORD PTR ds:[esi]
  4062cf:	mov    WORD PTR [ebx],?
  4062d1:	mov    WORD PTR [edx+0x5b],cs
  4062d4:	stos   DWORD PTR es:[edi],eax
  4062d5:	sub    cl,BYTE PTR ss:[esi+0x61]
  4062d9:	mov    bl,BYTE PTR [esp+ecx*4-0x2a]
  4062dd:	adc    eax,0x1517ba
  4062e2:	push   ds
  4062e3:	mov    cl,0x73
  4062e5:	xlat   BYTE PTR ds:[ebx]
  4062e6:	dec    ebp
  4062e7:	cmp    ebp,DWORD PTR [edx-0x7]
  4062ea:	ja     0x406326
  4062ec:	dec    ecx
  4062ed:	cmc    
  4062ee:	cmp    ebx,DWORD PTR [edi]
  4062f0:	clc    
  4062f1:	in     eax,dx
  4062f2:	rol    bl,0xd3
  4062f5:	ins    BYTE PTR es:[edi],dx
  4062f6:	mov    bh,0x62
  4062f8:	cmp    bh,BYTE PTR [esi-0x35ae10d2]
  4062fe:	shl    BYTE PTR [ebp+0x5],cl
  406301:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406302:	sub    eax,0x437187e3
  406307:	adc    DWORD PTR [esp+esi*4-0x7d],0x15ae5551
  40630f:	mulps  xmm6,XMMWORD PTR [esi-0x462d2776]
  406316:	add    edx,DWORD PTR [ecx]
  406318:	inc    ecx
  406319:	mov    dh,0xe5
  40631b:	xchg   esp,eax
  40631c:	sbb    DWORD PTR [edi],edi
  40631e:	mov    DWORD PTR [esi+0x6e],0xb62e84e2
  406325:	imul   edi,DWORD PTR [ecx+0x64],0x45bf4bb3
  40632c:	(bad)  
  40632d:	sbb    DWORD PTR [ebx],edx
  40632f:	xchg   esp,eax
  406330:	jo     0x4062d3
  406332:	inc    esp
  406333:	shl    BYTE PTR [ebp+0x3f],cl
  406336:	popa   
  406337:	(bad)
  40633a:	cmps   WORD PTR ss:[esi],WORD PTR es:[edi]
  40633d:	cmc    
  40633e:	lock dec esp
  406340:	mov    dh,0xfb
  406342:	jae    0x40632f
  406344:	ds sbb dl,al
  406347:	out    dx,eax
  406348:	lock ins DWORD PTR es:[edi],dx
  40634a:	ret    
  40634b:	and    esp,ebp
  40634d:	xor    al,0xe0
  40634f:	pop    esp
  406350:	mov    eax,ds:0xdfea9fef
  406355:	shr    ecx,1
  406357:	pop    edx
  406358:	in     eax,dx
  406359:	xor    eax,0xfccee40
  40635e:	aam    0x6c
  406360:	xchg   ebx,eax
  406361:	into   
  406362:	test   DWORD PTR [edi+ebx*8+0x75],esp
  406366:	cmc    
  406367:	mov    ds:0x95540cfa,eax
  40636c:	pop    edx
  40636d:	mov    ch,0x62
  40636f:	and    eax,DWORD PTR [ecx]
  406371:	outs   dx,BYTE PTR ds:[esi]
  406372:	mov    ch,0xc7
  406374:	lahf   
  406375:	pop    ecx
  406376:	adc    BYTE PTR [edi+0x78d6ddce],dl
  40637c:	push   edi
  40637d:	jmp    0x4901d3d9
  406382:	aaa    
  406383:	add    ah,ah
  406385:	fwait
  406386:	jbe    0x406378
  406388:	(bad)  
  406389:	imul   DWORD PTR [edx+ebx*4-0x5658d756]
  406390:	sub    ebp,DWORD PTR [ecx-0x45]
  406393:	mov    ds:0xe0207498,al
  406398:	push   edx
  406399:	jne    0x4063e3
  40639b:	xor    DWORD PTR [ecx+0x38],ecx
  40639e:	mov    ds:0xca62f065,eax
  4063a3:	ins    BYTE PTR es:[edi],dx
  4063a4:	gs and dh,0x39
  4063a8:	sub    eax,0x9ee9ac79
  4063ad:	fst    QWORD PTR ds:0x9033536a
  4063b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063b4:	out    0x6c,al
  4063b6:	pop    ebx
  4063b7:	nop
  4063b8:	and    al,0xb3
  4063ba:	(bad)  
  4063bb:	loopne 0x4063dc
  4063bd:	rol    edi,0xf1
  4063c0:	fwait
  4063c1:	adc    DWORD PTR [ebx-0x1a],ebp
  4063c4:	test   edi,ebp
  4063c6:	push   es
  4063c7:	(bad)  
  4063c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063c9:	and    DWORD PTR [edx+0x33],edx
  4063cc:	stc    
  4063cd:	cli    
  4063ce:	lds    ebx,FWORD PTR [eax-0x2c]
  4063d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063d2:	aas    
  4063d3:	mov    ah,0x58
  4063d5:	test   eax,0xf6339f81
  4063da:	dec    ebp
  4063db:	mov    edx,0xa64ff723
  4063e0:	pusha  
  4063e1:	pop    edi
  4063e2:	push   eax
  4063e3:	(bad)  
  4063e4:	imul   esi,DWORD PTR [ebp-0x7],0xadf23908
  4063eb:	cmc    
  4063ec:	popf   
  4063ed:	(bad)  
  4063ee:	jne    0x406450
  4063f0:	sbb    esp,ecx
  4063f2:	retf   0x4ea
  4063f5:	cmp    al,0x97
  4063f7:	in     al,dx
  4063f8:	mov    ebp,0x1002216c
  4063fd:	adc    al,BYTE PTR [edi+0xf19495]
  406403:	aaa    
  406404:	aad    0xa9
  406406:	dec    ebp
  406407:	cld    
  406408:	jmp    0x9d40:0xbb0ba62a
  40640f:	ja     0x40640e
  406411:	push   ebp
  406412:	pop    ss
  406413:	pop    es
  406414:	adc    eax,0xa10d1de5
  406419:	mov    edi,0xe5ad8a96
  40641e:	jle    0x6d5a610c
  406424:	or     esi,DWORD PTR [edx]
  406426:	into   
  406427:	inc    eax
  406428:	inc    eax
  406429:	setno  BYTE PTR ds:0x1c78e672
  406430:	add    al,bh
  406432:	sar    BYTE PTR [ecx-0x3401bd81],0xfd
  406439:	in     al,dx
  40643a:	push   ebp
  40643b:	out    0xf,al
  40643d:	out    dx,eax
  40643e:	mov    dh,BYTE PTR [edi+eiz*8+0x3]
  406442:	cdq    
  406443:	or     esi,eax
  406445:	jmp    0x5a6d:0x886d7d6c
  40644c:	mov    eax,ds:0x2197a6db
  406451:	ins    DWORD PTR es:[edi],dx
  406452:	in     al,0xd
  406454:	mov    ebx,0x6c5042da
  406459:	mov    al,ds:0x7f86ae44
  40645e:	push   es
  40645f:	push   es
  406460:	xchg   ebx,eax
  406461:	sub    DWORD PTR [edx+0x5f],esi
  406464:	mov    ds:0xe4b84ba7,al
  406469:	mov    dh,0x4
  40646b:	mov    al,0x47
  40646d:	ins    BYTE PTR es:[edi],dx
  40646e:	leave  
  40646f:	jl     0x406491
  406471:	dec    eax
  406472:	inc    edx
  406473:	cmc    
  406474:	cmp    al,0x48
  406476:	xor    dl,BYTE PTR [edi+eax*4+0x1b88ec54]
  40647d:	fild   QWORD PTR [ecx+0x0]
  406480:	adc    DWORD PTR [edi-0x7e7063],edi
  406486:	sbb    DWORD PTR fs:[esi+0xd5ff29],ebp
  40648d:	(bad)  
  40648e:	aaa    
  40648f:	cmp    ah,cl
  406491:	inc    ecx
  406492:	jg     0x406490
  406494:	sub    ebp,DWORD PTR [ecx+edx*2]
  406497:	cdq    
  406498:	jmp    0x40648b
  40649a:	addr16 sub al,0x8b
  40649d:	in     eax,dx
  40649e:	add    edx,edx
  4064a0:	xor    ecx,DWORD PTR [ebp-0x6a703c0a]
  4064a6:	hlt    
  4064a7:	in     al,0x28
  4064a9:	pop    eax
  4064aa:	aam    0x44
  4064ac:	fstp   st(7)
  4064ae:	or     eax,0xa4215d04
  4064b3:	retf   
  4064b4:	and    DWORD PTR [ebx+eax*1-0x59],ebp
  4064b8:	add    eax,0xdbcc6953
  4064bd:	adc    eax,0x1b7789ed
  4064c2:	shr    DWORD PTR [ecx+0x6d],0x4
  4064c6:	xchg   ebx,eax
  4064c7:	outs   dx,DWORD PTR ds:[esi]
  4064c8:	clc    
  4064c9:	pop    edi
  4064ca:	xchg   edi,eax
  4064cb:	sti    
  4064cc:	push   0x1e7eb27d
  4064d1:	fistp  DWORD PTR [eax-0x44]
  4064d4:	jnp    0x406468
  4064d6:	outs   dx,BYTE PTR ds:[esi]
  4064d7:	jp     0x4064df
  4064d9:	or     esi,DWORD PTR [ecx+0x36800df4]
  4064df:	mov    cl,BYTE PTR [edx]
  4064e1:	and    BYTE PTR [edi+0x19],ah
  4064e4:	fsubr  QWORD PTR [ebx-0x17]
  4064e7:	cdq    
  4064e8:	xchg   BYTE PTR [ebx-0x3],cl
  4064eb:	icebp  
  4064ec:	sbb    al,0x5e
  4064ee:	int    0xa0
  4064f0:	shl    ebp,cl
  4064f2:	xor    eax,0xd7d49b8b
  4064f7:	jle    0x4064f3
  4064f9:	and    al,0x30
  4064fb:	repnz pushf 
  4064fd:	cmp    DWORD PTR [edi+edi*4],0x72
  406501:	adc    bh,BYTE PTR [edi]
  406503:	add    eax,0x46201ca6
  406508:	in     eax,dx
  406509:	scas   eax,DWORD PTR es:[edi]
  40650a:	and    al,0x7a
  40650c:	or     esp,DWORD PTR [edx]
  40650e:	and    DWORD PTR [ecx+0x17fea5f8],0x6d
  406515:	push   edx
  406516:	jl     0x40654f
  406518:	loop   0x406574
  40651a:	add    eax,0xf3e7f6c3
  40651f:	push   esp
  406520:	popf   
  406521:	mov    edx,0x11a3cdbf
  406526:	dec    esp
  406527:	add    ebp,DWORD PTR [edi+0x711f6d3a]
  40652d:	call   0x94f6:0x87572453
  406534:	pop    edx
  406535:	mov    al,0x32
  406537:	ins    DWORD PTR es:[edi],dx
  406538:	or     DWORD PTR [ebp+0x62],esi
  40653b:	fsub   QWORD PTR [eax-0x71]
  40653e:	jo     0x40651f
  406540:	push   0x100d02ff
  406545:	sub    eax,DWORD PTR [edi]
  406547:	int3   
  406548:	inc    esp
  406549:	test   DWORD PTR [ecx+0x102c9e03],esp
  40654f:	mov    edi,0xbaa6ca41
  406554:	cs (bad) 
  406556:	jmp    0xbc4b:0x42382a5e
  40655d:	sbb    al,0x36
  40655f:	inc    esp
  406560:	and    bl,cl
  406562:	adc    DWORD PTR [ebx-0x77e35a8a],edi
  406568:	xchg   edi,eax
  406569:	lds    esi,FWORD PTR [edi+ebp*4-0x352e93a3]
  406570:	sub    bl,BYTE PTR ds:0x481a3f36
  406576:	inc    ebx
  406577:	sbb    eax,0xae080138
  40657c:	and    DWORD PTR [ebx+ebx*2],esi
  40657f:	jno    0x406581
  406581:	std    
  406582:	inc    esi
  406583:	(bad)  
  406584:	cmp    al,0xcd
  406586:	enter  0x57cf,0xb
  40658a:	jge    0x40654d
  40658c:	aam    0x37
  40658e:	aaa    
  40658f:	xchg   DWORD PTR [edi-0x7ed2d863],esi
  406595:	sbb    dh,ah
  406597:	or     al,BYTE PTR [edi+edi*4]
  40659a:	cwde   
  40659b:	aad    0x72
  40659d:	jbe    0x40659d
  40659f:	aam    0xec
  4065a1:	call   0x85da7897
  4065a6:	mov    ds:0x7ead53c4,al
  4065ab:	mov    BYTE PTR [ecx+0xb559860],dh
  4065b1:	push   ebx
  4065b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065b3:	into   
  4065b4:	in     al,dx
  4065b5:	add    al,0x1f
  4065b7:	scas   eax,DWORD PTR es:[edi]
  4065b8:	push   eax
  4065b9:	or     al,0xe5
  4065bb:	mov    edi,0x9e7e1cdc
  4065c0:	adc    eax,0x92fa0d20
  4065c5:	add    ch,BYTE PTR [edx+ebx*8-0x2]
  4065c9:	adc    ebx,DWORD PTR [edi]
  4065cb:	cdq    
  4065cc:	mov    ebp,0x3addcc7b
  4065d1:	bound  esp,QWORD PTR [ebx]
  4065d3:	cmp    BYTE PTR [edi+eax*4+0x2e],0xb1
  4065d8:	xor    cl,BYTE PTR [ebp-0x3e]
  4065db:	xchg   DWORD PTR [edx+0x6b807eeb],edx
  4065e1:	jecxz  0x4065fb
  4065e3:	inc    esp
  4065e4:	cdq    
  4065e5:	out    dx,eax
  4065e6:	mov    esi,DWORD PTR [ebx+0x3f]
  4065e9:	sub    BYTE PTR [ebx+ecx*1+0x2bfc834f],0x85
  4065f1:	dec    eax
  4065f2:	cld    
  4065f3:	pusha  
  4065f4:	sbb    DWORD PTR [eax],0xffffff8a
  4065f7:	xchg   ecx,eax
  4065f8:	sar    BYTE PTR [edx-0x28],0xc2
  4065fc:	stos   DWORD PTR es:[edi],eax
  4065fd:	jp     0x4065ba
  4065ff:	and    DWORD PTR [esi*8+0x4aefd96],ebx
  406606:	ds sub ecx,0x17
  40660a:	cwde   
  40660b:	dec    esp
  40660c:	inc    ebp
  40660d:	pushf  
  40660e:	int    0x6b
  406610:	scas   al,BYTE PTR es:[edi]
  406611:	retf   
  406612:	popf   
  406613:	icebp  
  406614:	sub    al,0x9a
  406616:	pop    es
  406617:	ins    BYTE PTR es:[edi],dx
  406618:	fsubr  QWORD PTR [ecx-0x7f3d8a21]
  40661e:	sbb    eax,0x3b00bff2
  406623:	ret    0x8fb3
  406626:	ret    0xe66d
  406629:	jecxz  0x406646
  40662b:	mov    ebp,0xd53a2233
  406630:	fidivr DWORD PTR [ecx-0x6991a6e8]
  406636:	rcr    DWORD PTR [eax+0x50],0xb6
  40663a:	and    edx,0xbd03f317
  406640:	in     eax,dx
  406641:	rcr    BYTE PTR [edi],cl
  406643:	add    eax,0x44c3f426
  406648:	fistp  QWORD PTR [ebp-0x7f]
  40664b:	retf   0x783e
  40664e:	sahf   
  40664f:	in     eax,0x5f
  406651:	and    DWORD PTR [eax+0x40],ebp
  406654:	mov    cl,0x99
  406656:	xchg   esp,eax
  406657:	xor    eax,0x65f0a12d
  40665c:	pop    esp
  40665d:	mov    eax,ds:0x7a1c6c88
  406662:	nop
  406663:	jne    0x4066be
  406665:	lahf   
  406666:	mul    DWORD PTR [edx+ebx*8-0x532542a5]
  40666d:	fwait
  40666e:	aaa    
  40666f:	pop    edx
  406670:	xchg   ebx,eax
  406671:	clc    
  406672:	pop    esp
  406673:	sub    bh,cl
  406675:	(bad)
  406678:	cmp    DWORD PTR [ebx+0x146aff79],edi
  40667e:	adc    BYTE PTR [esi+0x10],bl
  406681:	xchg   ebx,eax
  406682:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406683:	fstp   st(1)
  406685:	jo     0x406643
  406687:	dec    ecx
  406688:	cmp    esp,0xef33d71e
  40668e:	inc    ebx
  40668f:	sbb    dl,bl
  406691:	xor    BYTE PTR [ebx+0x34],0x37
  406695:	xchg   al,ch
  406697:	xchg   ebp,eax
  406698:	jnp    0x406711
  40669a:	aam    0x31
  40669c:	inc    edi
  40669d:	icebp  
  40669e:	add    BYTE PTR [eax],0xe
  4066a1:	dec    esi
  4066a2:	mov    ch,0x2
  4066a4:	xor    al,0x4e
  4066a6:	inc    edi
  4066a7:	stos   BYTE PTR es:[edi],al
  4066a8:	dec    ebx
  4066a9:	add    bh,bl
  4066ab:	inc    ebp
  4066ac:	test   DWORD PTR [ecx+edx*8-0x3ff06823],0x7e9b8a8
  4066b7:	in     al,dx
  4066b8:	hlt    
  4066b9:	shl    al,0x48
  4066bc:	lahf   
  4066bd:	loop   0x406686
  4066bf:	lahf   
  4066c0:	jecxz  0x4066f9
  4066c2:	js     0x4066cd
  4066c4:	sub    al,0x1f
  4066c6:	stos   BYTE PTR es:[edi],al
  4066c7:	in     al,dx
  4066c8:	pop    ebp
  4066c9:	mov    DWORD PTR [esi*4+0x37946919],ebp
  4066d0:	repnz lahf 
  4066d2:	xchg   ebp,eax
  4066d3:	mov    ecx,0x17f2dcb7
  4066d8:	test   cl,ah
  4066da:	pop    edi
  4066db:	pop    edi
  4066dc:	jb     0x4066bd
  4066de:	(bad)  
  4066df:	jno    0x4066f1
  4066e1:	push   es
  4066e2:	push   ebx
  4066e3:	mov    BYTE PTR [ebx-0x20de4662],al
  4066e9:	adc    dl,BYTE PTR [esi-0x38]
  4066ec:	push   es
  4066ed:	add    BYTE PTR [eax],ch
  4066ef:	call   0xd94a:0x6921ebdc
  4066f6:	sbb    ah,dl
  4066f8:	outs   dx,BYTE PTR ds:[esi]
  4066f9:	retf   
  4066fa:	lea    esi,[ecx-0x23]
  4066fd:	call   0x755f:0xccb5c096
  406704:	sti    
  406705:	aas    
  406706:	aaa    
  406707:	sub    DWORD PTR [ecx-0x2d],esp
  40670a:	cdq    
  40670b:	pop    ecx
  40670c:	fstp   TBYTE PTR [ebp-0x28]
  40670f:	add    al,0xcf
  406711:	stc    
  406712:	aam    0x4e
  406714:	aaa    
  406715:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406716:	repz out dx,al
  406718:	fld    QWORD PTR [ebp+0x7d9257c4]
  40671e:	pop    esp
  40671f:	add    BYTE PTR [edi+esi*4+0x1e],0xd2
  406724:	popa   
  406725:	sbb    al,BYTE PTR [eax]
  406727:	and    BYTE PTR [ebx-0x2efe2689],bl
  40672d:	jmp    0x4066bc
  40672f:	fcomp  QWORD PTR [ecx-0x67]
  406732:	dec    esp
  406733:	gs ret 
  406735:	ins    BYTE PTR es:[edi],dx
  406736:	adc    edi,DWORD PTR [edx]
  406738:	push   ebx
  406739:	sti    
  40673a:	xor    eax,0x761c5b0b
  40673f:	(bad)  
  406741:	(bad)  
  406742:	pushf  
  406743:	outs   dx,BYTE PTR ds:[esi]
  406744:	jns    0x4067a2
  406746:	dec    ebp
  406747:	rcl    DWORD PTR [edx+0x4bd27c9e],cl
  40674d:	jl     0x4066d5
  40674f:	sub    eax,eax
  406751:	loope  0x4067a7
  406753:	push   ebp
  406754:	push   ds
  406755:	sub    DWORD PTR [eax-0x1c17f3f4],esi
  40675b:	or     bh,dh
  40675d:	inc    esi
  40675e:	loopne 0x4066e3
  406760:	inc    ebp
  406761:	ins    BYTE PTR es:[edi],dx
  406762:	cmp    DWORD PTR [eax+0x32],esp
  406765:	mov    al,ds:0x9d6f0a9e
  40676a:	test   BYTE PTR [edx-0x25],0xbf
  40676e:	dec    esi
  40676f:	mov    dl,0xd
  406771:	or     ebx,DWORD PTR [ebx-0x3cc9b8db]
  406777:	nop
  406778:	pop    es
  406779:	(bad)  
  40677b:	push   cs
  40677c:	cmp    bl,BYTE PTR [ebx-0x6b7d53fe]
  406782:	arpl   WORD PTR [eax+eiz*8+0xa],sp
  406786:	sar    al,1
  406788:	shr    DWORD PTR [eax-0x1b],0xbd
  40678c:	loope  0x40676a
  40678e:	int3   
  40678f:	dec    esp
  406790:	dec    edx
  406791:	sub    ecx,DWORD PTR [ebx+0x6b]
  406794:	push   ds
  406795:	push   ecx
  406796:	push   ss
  406797:	push   ebp
  406798:	das    
  406799:	or     BYTE PTR [eax],0x67
  40679c:	popf   
  40679d:	(bad)  
  40679f:	push   edi
  4067a0:	fs add edi,ebp
  4067a3:	push   edx
  4067a4:	hlt    
  4067a5:	sub    BYTE PTR [ebx],al
  4067a7:	mov    eax,0xe073d170
  4067ac:	imul   edi,DWORD PTR [ebp-0x23d29c5f],0xffffffff
  4067b3:	xchg   cl,bh
  4067b5:	daa    
  4067b6:	out    dx,al
  4067b7:	cmp    BYTE PTR [eax],bl
  4067b9:	popf   
  4067ba:	push   0x5c9f2c14
  4067bf:	std    
  4067c0:	xchg   esp,eax
  4067c1:	leave  
  4067c2:	cmp    DWORD PTR [esp+ebp*4],0x51
  4067c6:	iret   
  4067c7:	dec    eax
  4067c8:	stos   BYTE PTR es:[edi],al
  4067c9:	mov    eax,ds:0x2578a188
  4067ce:	ret    
  4067cf:	and    BYTE PTR [edi+0x26],ah
  4067d2:	or     al,0xa9
  4067d4:	and    al,0xda
  4067d6:	jnp    0x406850
  4067d8:	ret    
  4067d9:	xor    ecx,DWORD PTR [ebx-0x64743d81]
  4067df:	ins    BYTE PTR es:[edi],dx
  4067e0:	ds repz das 
  4067e3:	hlt    
  4067e4:	pop    ebp
  4067e5:	and    al,0xa4
  4067e7:	dec    ecx
  4067e8:	loope  0x406776
  4067ea:	mov    esi,0x43e8deba
  4067ef:	jns    0x40678e
  4067f1:	cmp    edi,DWORD PTR [edi-0x38]
  4067f4:	out    dx,eax
  4067f5:	mov    BYTE PTR [edi+0x13],bh
  4067f8:	mov    ds:0xe7183269,eax
  4067fd:	xor    BYTE PTR [edx],0x76
  406800:	mov    bl,0x1c
  406802:	dec    edi
  406803:	mov    al,ds:0xe2405bcc
  406808:	push   0x6d
  40680a:	stc    
  40680b:	jo     0x40678f
  40680d:	enter  0x64a2,0x30
  406811:	or     DWORD PTR [edi+edi*1+0x259d870b],esp
  406818:	jp     0x40685f
  40681a:	enter  0x8754,0x54
  40681e:	adc    al,0x4a
  406820:	call   DWORD PTR [esi]
  406822:	or     BYTE PTR [ecx-0x50980aa1],bh
  406828:	sbb    BYTE PTR [ebx],0xa9
  40682b:	jge    0x406800
  40682d:	mov    esp,0x6c0336d1
  406832:	and    al,0x90
  406834:	nop
  406835:	or     ebx,DWORD PTR [ebp+0x403c62a1]
  40683b:	jge    0x406803
  40683d:	adc    esp,DWORD PTR [edx+ebp*4+0x468995ea]
  406844:	inc    eax
  406845:	jmp    0xeffed363
  40684a:	jbe    0x40680d
  40684c:	ins    DWORD PTR es:[edi],dx
  40684d:	mov    esi,0x3d352c07
  406852:	out    dx,eax
  406853:	mov    dh,0x74
  406855:	outs   dx,BYTE PTR ds:[esi]
  406856:	add    al,0xc2
  406858:	stc    
  406859:	jbe    0x406840
  40685b:	inc    ecx
  40685c:	inc    esi
  40685d:	pop    edi
  40685e:	pop    eax
  40685f:	inc    eax
  406860:	jae    0x4068d0
  406862:	push   ebp
  406863:	dec    ebp
  406864:	sbb    eax,0x6abd51bd
  406869:	jecxz  0x4068e7
  40686b:	inc    eax
  40686c:	fld    DWORD PTR [edx+edx*8-0x38aab646]
  406873:	push   edi
  406874:	add    eax,0x5f703f29
  406879:	test   al,0x2
  40687b:	jns    0x406805
  40687d:	or     al,BYTE PTR [ebp+0x56]
  406880:	jle    0x4068ff
  406882:	sbb    dl,BYTE PTR [edx+0x774834e2]
  406888:	add    al,0xfa
  40688a:	push   ds
  40688b:	jo     0x406826
  40688d:	push   0x2247b4ba
  406892:	dec    ecx
  406893:	or     DWORD PTR [edi-0x5a],ebx
  406896:	mov    edx,edi
  406898:	fdivr  DWORD PTR [edi-0x3a3bec30]
  40689e:	adc    BYTE PTR [ecx+0x67],al
  4068a1:	or     al,0x5c
  4068a3:	inc    eax
  4068a4:	inc    edx
  4068a5:	jle    0x40689e
  4068a7:	xchg   ecx,eax
  4068a8:	xchg   edi,eax
  4068a9:	mov    bl,0x5a
  4068ab:	add    eax,DWORD PTR [esp+eax*4]
  4068ae:	mov    ebp,0x4223f93a
  4068b3:	es mov ebx,0x54e48d3d
  4068b9:	adc    cl,BYTE PTR [edi+esi*4]
  4068bc:	xor    ebp,DWORD PTR [ecx]
  4068be:	fs pop eax
  4068c0:	out    dx,eax
  4068c1:	push   ss
  4068c2:	pop    ebx
  4068c3:	(bad)  
  4068c4:	out    0xb,al
  4068c6:	leave  
  4068c7:	cmp    eax,0xc049371
  4068cc:	ficom  DWORD PTR [esi]
  4068ce:	and    dl,BYTE PTR [eax+0x6b]
  4068d1:	cs popf 
  4068d3:	xchg   esp,eax
  4068d4:	out    dx,al
  4068d5:	outs   dx,BYTE PTR ds:[esi]
  4068d6:	push   0x7f
  4068d8:	out    0x37,eax
  4068da:	test   DWORD PTR [esi-0x1b],esi
  4068dd:	out    0xa,al
  4068df:	les    ebx,FWORD PTR [edi-0x2d485649]
  4068e5:	data16 jne 0x4068a5
  4068e8:	mov    es,WORD PTR [di+0x4a50]
  4068ed:	arpl   WORD PTR [ebx],sp
  4068ef:	inc    esi
  4068f0:	add    DWORD PTR [esi],0x978978a5
  4068f6:	imul   ebp,DWORD PTR [eax],0x77
  4068f9:	or     bh,BYTE PTR [eax]
  4068fb:	push   esi
  4068fc:	push   ebp
  4068fd:	mov    al,0x7b
  4068ff:	mov    ebx,0x28348c04
  406904:	sbb    al,0x5d
  406906:	mov    ah,0xae
  406908:	xchg   esi,eax
  406909:	(bad)  
  40690a:	and    eax,0xf4c1b783
  40690f:	pop    esi
  406910:	cmp    edx,ecx
  406912:	int3   
  406913:	ins    DWORD PTR es:[edi],dx
  406914:	or     edi,DWORD PTR [ebx-0x305c961e]
  40691a:	lea    ebp,[eax+0x71]
  40691d:	imul   eax,esp,0x5089a317
  406923:	push   edx
  406924:	xlat   BYTE PTR ds:[ebx]
  406925:	retf   0x8ed2
  406928:	loope  0x4068e8
  40692a:	fbld   TBYTE PTR [esp+ecx*4]
  40692d:	scas   eax,DWORD PTR es:[edi]
  40692e:	mov    DWORD PTR [esi],esi
  406930:	dec    eax
  406931:	leave  
  406932:	adc    BYTE PTR [edx],bh
  406934:	das    
  406935:	and    eax,0x14734554
  40693a:	(bad)  
  40693b:	shl    BYTE PTR ds:0x5881b24c,cl
  406941:	retf   0x59a1
  406944:	sahf   
  406945:	cmp    BYTE PTR [esi],dh
  406947:	jp     0x406909
  406949:	mov    esp,edx
  40694b:	mov    BYTE PTR [ecx+0x32],0xdf
  40694f:	push   cs
  406950:	push   ebx
  406951:	mov    ds:0x318b39c8,al
  406956:	cmp    esp,DWORD PTR [edi]
  406958:	js     0x406904
  40695a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40695b:	jle    0x4069be
  40695d:	call   0x4a73:0x7cc6fab9
  406964:	jbe    0x40690e
  406966:	sub    al,BYTE PTR [ebp+0x1a]
  406969:	xchg   ebp,eax
  40696a:	(bad)  
  40696b:	pop    ecx
  40696c:	or     al,0x90
  40696e:	aam    0x9c
  406970:	mov    ah,0x43
  406972:	loop   0x406981
  406974:	fidivr DWORD PTR [edx-0x74]
  406977:	stc    
  406978:	adc    dl,ah
  40697a:	loopne 0x4069a5
  40697c:	dec    esp
  40697d:	ret    0x747
  406980:	cwde   
  406981:	dec    ebx
  406982:	cmp    ebx,DWORD PTR [ebx]
  406984:	mov    dl,0x76
  406986:	push   edx
  406987:	test   BYTE PTR [eax+0x54],bh
  40698a:	and    dh,0x7e
  40698d:	loopne 0x4069ab
  40698f:	pcmpgtw mm2,mm3
  406992:	push   0x6b
  406994:	push   ss
  406995:	xor    al,BYTE PTR ds:0xe55c88aa
  40699b:	pop    esi
  40699c:	out    0x0,eax
  40699e:	aam    0xb4
  4069a0:	push   ds
  4069a1:	mov    cl,0x77
  4069a3:	lahf   
  4069a4:	mov    bh,0x24
  4069a6:	aas    
  4069a7:	pop    ecx
  4069a8:	and    cl,BYTE PTR [edx-0x55]
  4069ab:	enter  0xf92,0x9e
  4069af:	arpl   WORD PTR [ecx],sp
  4069b1:	jae    0x4069d4
  4069b3:	repz push ss
  4069b5:	mov    eax,0x4f0f3be3
  4069ba:	std    
  4069bb:	or     bl,BYTE PTR [ebx+0xb50ccdb]
  4069c1:	ss fcos 
  4069c4:	mov    al,ds:0xd754e7e2
  4069c9:	ins    DWORD PTR es:[edi],dx
  4069ca:	lock push ecx
  4069cc:	sub    ebp,ebx
  4069ce:	cli    
  4069cf:	or     ah,dh
  4069d1:	xchg   ebx,eax
  4069d2:	cwde   
  4069d3:	add    ebx,DWORD PTR [ebp-0x62]
  4069d6:	div    DWORD PTR [esi+eax*1-0x2012b10d]
  4069dd:	test   al,0xc4
  4069df:	jae    0x406987
  4069e1:	sbb    al,bl
  4069e3:	iret   
  4069e4:	mov    WORD PTR [ecx+0x67ebf60e],es
  4069ea:	lea    esi,fs:[esi-0x11ac21b4]
  4069f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069f2:	icebp  
  4069f3:	or     DWORD PTR [ebx+ebx*8],ecx
  4069f6:	mov    DWORD PTR [edi],edx
  4069f8:	dec    edi
  4069f9:	xor    BYTE PTR [ecx],al
  4069fb:	push   edx
  4069fc:	cmp    cl,dh
  4069fe:	enter  0x2eb1,0x99
  406a02:	les    ebp,FWORD PTR [edx+0x500c4ec5]
  406a08:	dec    edx
  406a09:	imul   DWORD PTR [ecx]
  406a0b:	adc    al,0x94
  406a0d:	outs   dx,DWORD PTR ds:[esi]
  406a0e:	jbe    0x406a6a
  406a10:	xchg   esi,eax
  406a11:	daa    
  406a12:	call   0x4a07:0x948c91bb
  406a19:	jns    0x4069d0
  406a1b:	ficom  WORD PTR [edi+0x36c6e233]
  406a21:	je     0x406a7d
  406a23:	inc    edx
  406a24:	imul   eax,DWORD PTR [edi-0x341b4483],0xb320c2c6
  406a2e:	and    ebp,DWORD PTR [esi+0x50]
  406a31:	repz inc ebp
  406a33:	out    0x25,eax
  406a35:	mov    eax,0x533f90eb
  406a3a:	adc    al,0x27
  406a3c:	(bad)  
  406a3d:	dec    ebp
  406a3e:	(bad)  
  406a3f:	dec    esp
  406a40:	push   ebx
  406a41:	push   esp
  406a42:	adc    al,0xda
  406a44:	push   edi
  406a45:	inc    esi
  406a46:	cdq    
  406a47:	daa    
  406a48:	pop    ds
  406a49:	add    DWORD PTR [esi],0x71c42e59
  406a4f:	outs   dx,DWORD PTR ds:[esi]
  406a50:	mov    ah,0x46
  406a52:	stos   BYTE PTR es:[edi],al
  406a53:	inc    ebx
  406a54:	js     0x406a52
  406a56:	cmp    DWORD PTR [edi+0x3ae73d5],0xaeb4e5ee
  406a60:	adc    al,0xff
  406a62:	inc    edx
  406a63:	xchg   esi,eax
  406a64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a65:	repz bswap esp
  406a68:	xlat   BYTE PTR ds:[ebx]
  406a69:	jne    0x406ab5
  406a6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a6c:	lock cli 
  406a6e:	cmp    al,0x6c
  406a70:	(bad)  
  406a71:	(bad)  
  406a72:	inc    ebp
  406a73:	outs   dx,DWORD PTR ds:[esi]
  406a74:	mov    al,ds:0x840b1df4
  406a79:	jecxz  0x406a6b
  406a7b:	pop    eax
  406a7c:	xlat   BYTE PTR ds:[ebx]
  406a7d:	mov    al,0x15
  406a7f:	dec    esp
  406a80:	fwait
  406a81:	pushaw 
  406a83:	push   ebx
  406a84:	mov    eax,ds:0x4b65121a
  406a89:	call   0xa850:0xc86b6f28
  406a90:	sub    DWORD PTR [ebp-0x3f3c28ac],ebx
  406a96:	mov    ds:0xb20d2c3c,eax
  406a9b:	(bad)  
  406a9c:	aam    0x39
  406a9e:	jge    0x406b07
  406aa0:	cmc    
  406aa1:	push   esp
  406aa2:	sub    eax,edi
  406aa4:	add    BYTE PTR [edx+ecx*8-0x3fd951fd],0x68
  406aac:	mov    esi,0x6297e3b5
  406ab1:	retf   
  406ab2:	int    0xb9
  406ab4:	sub    esp,DWORD PTR [ebx]
  406ab6:	xor    dl,BYTE PTR [ebx+0x39]
  406ab9:	aas    
  406aba:	jp     0x406a54
  406abc:	loope  0x406ac8
  406abe:	sub    al,0x56
  406ac0:	xor    DWORD PTR [edi+0x6],ebp
  406ac3:	cld    
  406ac4:	or     edx,DWORD PTR [ecx-0x3f]
  406ac7:	call   0x9fd33b68
  406acc:	mov    ecx,0xd3ecfc6d
  406ad1:	add    ebx,eax
  406ad3:	inc    edi
  406ad4:	iret   
  406ad5:	jne    0x406a82
  406ad7:	ins    DWORD PTR es:[edi],dx
  406ad8:	push   cs
  406ad9:	lods   al,BYTE PTR ds:[esi]
  406ada:	movsx  ebp,WORD PTR [esi-0x16]
  406ade:	xor    eax,ebx
  406ae0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ae1:	je     0x406a86
  406ae3:	mov    esi,0x73a75a08
  406ae8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ae9:	xchg   esi,eax
  406aea:	mov    ecx,DWORD PTR [ebp-0x7c]
  406aed:	scas   eax,DWORD PTR es:[edi]
  406aee:	jl     0x406af7
  406af0:	xlat   BYTE PTR ds:[ebx]
  406af1:	cmp    eax,0x91af4121
  406af6:	mov    ch,0xd2
  406af8:	in     al,dx
  406af9:	retf   
  406afa:	inc    ebp
  406afb:	shl    bh,0x4b
  406afe:	loopne 0x406b63
  406b00:	ja     0x406b60
  406b02:	or     DWORD PTR [eax],edx
  406b04:	arpl   WORD PTR [edi-0x1b],di
  406b07:	icebp  
  406b08:	jo     0x406abf
  406b0a:	adc    bh,0x4e
  406b0d:	xchg   DWORD PTR [eax+0x44],edi
  406b10:	(bad)  
  406b11:	sub    eax,0xd7eb06f3
  406b16:	lods   eax,DWORD PTR ds:[esi]
  406b17:	sar    bl,cl
  406b19:	(bad)
  406b1e:	fdiv   QWORD PTR [ebx]
  406b20:	je     0x406b71
  406b22:	add    BYTE PTR [ecx-0x57367113],cl
  406b28:	and    BYTE PTR [edi-0x3a],dh
  406b2b:	or     eax,0x9254af8b
  406b30:	mov    cs,WORD PTR [edi-0x33]
  406b33:	lock sbb edx,DWORD PTR [edi+0x766c7ff3]
  406b3a:	pop    esp
  406b3b:	pop    ds
  406b3c:	or     cl,dl
  406b3e:	dec    eax
  406b3f:	icebp  
  406b40:	jb     0x406ae3
  406b42:	sub    eax,ebx
  406b44:	daa    
  406b45:	and    esp,eax
  406b47:	rol    bh,1
  406b49:	fistp  DWORD PTR [edi+0x3ddf184d]
  406b4f:	sbb    dh,dl
  406b51:	adc    DWORD PTR [eax+0x6f9c6eb6],edi
  406b57:	dec    ebp
  406b58:	js     0x406bcc
  406b5a:	pop    ds
  406b5b:	adc    dh,BYTE PTR [ebp+ecx*4+0x1a]
  406b5f:	inc    eax
  406b60:	adc    al,0xa1
  406b62:	ins    DWORD PTR es:[edi],dx
  406b63:	ds push es
  406b65:	push   0xffffffbf
  406b67:	outs   dx,DWORD PTR ds:[esi]
  406b68:	fldenv [ebp-0x73]
  406b6b:	or     BYTE PTR [eax+edx*2+0x2af57c50],dl
  406b72:	xchg   DWORD PTR [edi-0x33],ebp
  406b75:	in     eax,dx
  406b76:	retf   0x1055
  406b79:	jmp    0x4333f67a
  406b7e:	enter  0x6c6a,0x3a
  406b82:	or     BYTE PTR [edi-0x5847d0f3],dl
  406b88:	ror    DWORD PTR [edx+0x636237fe],0x42
  406b8f:	jns    0x406ba5
  406b91:	mov    ds:0x69a3320e,eax
  406b96:	std    
  406b97:	test   al,0xf0
  406b99:	mov    eax,ds:0xd797d1e0
  406b9e:	ins    BYTE PTR es:[edi],dx
  406b9f:	scas   al,BYTE PTR es:[edi]
  406ba0:	shl    ch,cl
  406ba2:	int3   
  406ba3:	xlat   BYTE PTR ds:[ebx]
  406ba4:	mov    cl,0xc0
  406ba6:	push   es
  406ba7:	popa   
  406ba8:	xor    DWORD PTR [edi-0x6d8cde9f],esp
  406bae:	pop    ebx
  406baf:	mov    esp,gs
  406bb1:	and    esi,DWORD PTR [ebp-0x27]
  406bb4:	adc    ch,BYTE PTR [edi]
  406bb6:	sbb    BYTE PTR [ecx],0x28
  406bb9:	add    DWORD PTR [esi-0x29],edi
  406bbc:	dec    ecx
  406bbd:	sbb    dh,BYTE PTR [ecx]
  406bbf:	lock xchg ebp,eax
  406bc1:	push   0x1b
  406bc3:	cmp    al,0xcb
  406bc5:	push   edi
  406bc6:	out    0x46,eax
  406bc8:	push   ds
  406bc9:	push   0xffffffd4
  406bcb:	inc    ebx
  406bcc:	inc    esp
  406bcd:	cmc    
  406bce:	push   ecx
  406bcf:	pop    eax
  406bd0:	bound  edx,QWORD PTR [edi+0xf]
  406bd3:	neg    DWORD PTR ss:[edi-0x795e0f8c]
  406bda:	es inc eax
  406bdc:	(bad)  
  406bdd:	cdq    
  406bde:	dec    ecx
  406bdf:	daa    
  406be0:	stos   BYTE PTR es:[edi],al
  406be1:	pop    ds
  406be2:	and    DWORD PTR [ebx],eax
  406be4:	stos   DWORD PTR es:[edi],eax
  406be5:	ret    0xb33f
  406be8:	ds pop ecx
  406bea:	rcl    BYTE PTR [edx],1
  406bec:	das    
  406bed:	jge    0x406ba3
  406bef:	mov    ebp,0xd71bcb16
  406bf4:	dec    ebx
  406bf5:	stos   BYTE PTR es:[edi],al
  406bf6:	mov    eax,0x403e543f
  406bfb:	add    DWORD PTR [ebx-0x4e],ebp
  406bfe:	std    
  406bff:	scas   eax,DWORD PTR es:[edi]
  406c00:	and    esp,DWORD PTR [ebp+edi*8+0x4a]
  406c04:	pop    esp
  406c05:	sbb    eax,DWORD PTR [esi-0x11]
  406c08:	sbb    BYTE PTR [edx+0x56],ah
  406c0b:	gs (bad) 
  406c0d:	inc    esi
  406c0e:	adc    al,0xeb
  406c10:	out    0xbb,al
  406c12:	xchg   edx,eax
  406c13:	push   cs
  406c14:	fcmove st,st(2)
  406c16:	(bad)  fs:[eax+0x3958ad70]
  406c1d:	xchg   edx,eax
  406c1e:	sbb    eax,0x183df039
  406c23:	lock add ebx,DWORD PTR [edi-0x7456c9cb]
  406c2a:	lods   eax,DWORD PTR ds:[esi]
  406c2b:	sti    
  406c2c:	dec    edi
  406c2d:	in     al,0xd5
  406c2f:	jb     0x406bb6
  406c31:	mov    edx,DWORD PTR [ebp+0x35]
  406c34:	jmp    0xce2fb034
  406c39:	xchg   esi,eax
  406c3a:	mov    al,0xdf
  406c3c:	pushf  
  406c3d:	xor    al,0xb8
  406c3f:	mov    dh,0x19
  406c41:	jo     0x406bce
  406c43:	lods   al,BYTE PTR ds:[esi]
  406c44:	fsubr  st(3),st
  406c46:	dec    edx
  406c47:	jmp    0x406c81
  406c49:	aad    0x19
  406c4b:	mov    esp,0x554a6f44
  406c50:	sti    
  406c51:	pop    ecx
  406c52:	sbb    esi,DWORD PTR [ebx+ebx*1-0x2c]
  406c56:	imul   edx,DWORD PTR [eax+0x44ab815],0xffffffd2
  406c5d:	inc    edi
  406c5e:	sub    ebp,0x75
  406c61:	sub    ebp,DWORD PTR [eax-0x6d]
  406c64:	push   edx
  406c65:	mov    esp,0xb2691c1a
  406c6a:	stc    
  406c6b:	sub    al,0x11
  406c6d:	pop    ds
  406c6e:	sahf   
  406c6f:	cmc    
  406c70:	sar    dh,cl
  406c72:	xchg   esp,eax
  406c73:	cwde   
  406c74:	cmp    al,0xe4
  406c76:	mov    eax,ds:0x92ea37b0
  406c7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c7c:	inc    edi
  406c7d:	pop    edx
  406c7e:	sbb    edx,ebp
  406c80:	in     al,0x98
  406c82:	inc    esi
  406c83:	jno    0x406cb9
  406c85:	xchg   edx,eax
  406c86:	add    DWORD PTR [eax+ebp*2],esi
  406c89:	pop    edi
  406c8a:	imul   DWORD PTR [esi+0x52]
  406c8d:	or     dl,BYTE PTR [ebp+ebp*2+0x5f589446]
  406c94:	aam    0xe2
  406c96:	lea    edx,[ebp+0x6f626859]
  406c9c:	and    BYTE PTR [esi-0x27],ch
  406c9f:	xor    eax,0x2172ca9b
  406ca4:	sub    esi,DWORD PTR [esi+0xd]
  406ca7:	jb     0x406cf2
  406ca9:	loope  0x406c92
  406cab:	and    cl,ch
  406cad:	sbb    BYTE PTR [edi],cl
  406caf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cb0:	shl    al,1
  406cb2:	dec    ebp
  406cb3:	pushf  
  406cb4:	or     eax,0xe904186e
  406cb9:	push   esp
  406cba:	xchg   BYTE PTR [eax],al
  406cbc:	mov    ch,BYTE PTR [ebx*8+0x54709b3e]
  406cc3:	sbb    eax,ebx
  406cc5:	sbb    DWORD PTR [ebp+0x1e],esi
  406cc8:	adc    edx,DWORD PTR [edx-0x7421da14]
  406cce:	cmp    al,0xba
  406cd0:	jg     0x406c99
  406cd2:	lods   al,BYTE PTR ds:[esi]
  406cd3:	ss lahf 
  406cd5:	sbb    DWORD PTR [ecx+edi*2],ebx
  406cd8:	sub    al,0x96
  406cda:	cmp    bh,BYTE PTR [edx]
  406cdc:	in     al,0xa3
  406cde:	das    
  406cdf:	adc    al,BYTE PTR [esp+eiz*8+0x38]
  406ce3:	aaa    
  406ce4:	push   es
  406ce5:	shl    BYTE PTR [edi+0x5f],0x2d
  406ce9:	xchg   edi,eax
  406cea:	lock xchg ebx,eax
  406cec:	jae    0x406ceb
  406cee:	jbe    0x406c9f
  406cf0:	push   0x1
  406cf2:	or     al,0x8c
  406cf4:	jbe    0x406d74
  406cf6:	xor    eax,0x9ac4aeb8
  406cfb:	jmp    0xa31c42a6
  406d00:	ror    BYTE PTR [ecx],0xe
  406d03:	popf   
  406d04:	(bad)  
  406d05:	in     al,dx
  406d06:	inc    ebx
  406d07:	push   ebx
  406d08:	ror    DWORD PTR [ebx-0x52],cl
  406d0b:	imul   esi,DWORD PTR [esi+0x17],0xffffffee
  406d0f:	pop    es
  406d10:	lods   al,BYTE PTR ds:[esi]
  406d11:	cmp    BYTE PTR [esi-0x2ac8ea6f],ch
  406d17:	add    ebx,edx
  406d19:	add    ch,ah
  406d1b:	dec    ecx
  406d1c:	push   0x24
  406d1e:	add    eax,DWORD PTR ds:0x4732c6c1
  406d24:	push   esi
  406d25:	fs or  eax,0x5a4f8cdc
  406d2b:	xor    ch,BYTE PTR [edi+eiz*1-0xe9db994]
  406d32:	int3   
  406d33:	ret    0xb47a
  406d36:	mov    ds:0x9809a887,al
  406d3b:	mov    eax,0x5a70e062
  406d40:	test   DWORD PTR [edi-0xc],edx
  406d43:	adc    BYTE PTR [esi+0x4ff046d5],bl
  406d49:	shl    DWORD PTR [esi],0x51
  406d4c:	dec    DWORD PTR [esi-0x43e442f3]
  406d52:	pusha  
  406d53:	adc    DWORD PTR [ebx+0x8],0x16
  406d57:	mov    esp,esi
  406d59:	xchg   esi,eax
  406d5a:	dec    edx
  406d5b:	xchg   edx,eax
  406d5c:	call   0xd18f9a14
  406d61:	sbb    eax,0xff1a6c4
  406d66:	mov    bl,0x4e
  406d68:	pop    edx
  406d69:	mov    eax,0x6104df3
  406d6e:	add    ch,BYTE PTR [esi]
  406d70:	scas   al,BYTE PTR es:[edi]
  406d71:	test   eax,0xfb379b79
  406d76:	mov    eax,0x116a869b
  406d7b:	out    0x98,al
  406d7d:	jmp    0x54e970bd
  406d82:	dec    esp
  406d83:	and    BYTE PTR [esi-0x65],ah
  406d86:	in     eax,0xd5
  406d88:	imul   ebx,DWORD PTR [edx-0x6a],0x3108abfb
  406d8f:	dec    esp
  406d90:	mov    al,0x78
  406d92:	ret    0xf340
  406d95:	sbb    DWORD PTR ds:0x3be57938,edx
  406d9b:	jne    0x406d1e
  406d9d:	and    BYTE PTR [esi],bh
  406d9f:	popf   
  406da0:	jecxz  0x406e0a
  406da2:	addr16 xor al,0x61
  406da5:	cld    
  406da6:	sar    DWORD PTR ds:0x97254ace,cl
  406dac:	loope  0x406e17
  406dae:	sbb    al,0x4f
  406db0:	xor    eax,DWORD PTR [ebx+0x56]
  406db3:	fld    DWORD PTR [esi-0x28]
  406db6:	push   edi
  406db7:	inc    esp
  406db8:	mov    edx,0x5293cf3a
  406dbd:	adc    eax,0x26f7d015
  406dc2:	inc    ebp
  406dc3:	xor    DWORD PTR [edi-0x5f],esp
  406dc6:	jmp    0x2964:0x9948c98a
  406dcd:	dec    edx
  406dce:	mov    ch,0x7d
  406dd0:	mov    ah,0x76
  406dd2:	retf   
  406dd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dd4:	popf   
  406dd5:	sbb    ah,ah
  406dd7:	mov    edx,0x2246fd0f
  406ddc:	gs mov ecx,0x179ace68
  406de2:	test   eax,edx
  406de4:	push   cs
  406de5:	pusha  
  406de6:	mov    cl,0xd1
  406de9:	cmp    dh,BYTE PTR ds:[ebx]
  406dec:	cdq    
  406ded:	adc    DWORD PTR [eax+0x521d80a6],0x8962dc1d
  406df7:	ins    BYTE PTR es:[edi],dx
  406df8:	loop   0x406d87
  406dfa:	dec    ebp
  406dfb:	je     0x406e4a
  406dfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406dfe:	xadd   esp,ebx
  406e01:	mov    esi,0x8a11a3f
  406e06:	pop    ebx
  406e07:	mov    BYTE PTR [bp+si],bl
  406e0a:	imul   ebp
  406e0c:	sub    DWORD PTR [bp+si-0x20dd],0x22
  406e12:	cld    
  406e13:	neg    BYTE PTR [esi-0x775314e0]
  406e19:	push   cs
  406e1a:	mov    dh,0x84
  406e1c:	addr16 (bad) 
  406e1e:	das    
  406e1f:	sar    cl,1
  406e21:	add    DWORD PTR [edi],edx
  406e23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e24:	into   
  406e25:	enter  0xebae,0x55
  406e29:	dec    ebp
  406e2a:	mov    DWORD PTR [edi+0x36],ecx
  406e2d:	sar    BYTE PTR [edx+0x581126f7],1
  406e33:	mov    ebp,eax
  406e35:	xchg   bl,al
  406e37:	sbb    ecx,esp
  406e39:	jl     0x406de2
  406e3b:	lea    ebp,[edx-0x288ec6b8]
  406e41:	add    ebx,0xffffffaf
  406e44:	adc    al,0xeb
  406e46:	fisubr DWORD PTR [eax-0x12]
  406e49:	cli    
  406e4a:	sbb    al,0x47
  406e4c:	xchg   esp,eax
  406e4d:	mov    ah,0x37
  406e4f:	or     cl,ah
  406e51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e52:	sub    dl,BYTE PTR [ecx]
  406e54:	jp     0x406e5d
  406e56:	shl    ebx,1
  406e58:	push   eax
  406e59:	aad    0x8f
  406e5b:	fnclex 
  406e5d:	adc    bl,BYTE PTR [ebx-0x26]
  406e60:	test   al,0x2f
  406e62:	das    
  406e63:	mul    DWORD PTR [ebp+0x62a80f5a]
  406e69:	sbb    BYTE PTR [edi-0x7c6923af],al
  406e6f:	jmp    0xba98:0xc39083a5
  406e76:	jle    0x406e46
  406e78:	dec    edi
  406e79:	mov    ah,0x5d
  406e7b:	push   0x19c4975c
  406e80:	aam    0xb4
  406e82:	gs sub al,0x57
  406e85:	sub    al,0x83
  406e87:	test   al,0x10
  406e89:	cwde   
  406e8a:	jne    0x406e22
  406e8c:	sub    eax,0xe63e630a
  406e91:	in     eax,dx
  406e92:	arpl   bx,dx
  406e94:	adc    DWORD PTR [esi-0x64dea9e8],ebp
  406e9a:	clc    
  406e9b:	aad    0xe1
  406e9d:	unpcklps xmm2,xmm1
  406ea0:	das    
  406ea1:	xor    BYTE PTR [ebx+0x3],bh
  406ea4:	mov    ebx,0x510786f2
  406ea9:	mov    ?,WORD PTR [esi+eiz*2]
  406eac:	daa    
  406ead:	arpl   WORD PTR [ebp-0x42dbfa55],bp
  406eb3:	ins    BYTE PTR es:[edi],dx
  406eb4:	lods   eax,DWORD PTR ds:[esi]
  406eb5:	scas   al,BYTE PTR es:[edi]
  406eb6:	call   0x76bd02b4
  406ebb:	sahf   
  406ebc:	mov    bl,0x68
  406ebe:	cmp    al,0x6a
  406ec0:	cld    
  406ec1:	cmp    DWORD PTR [esi],eax
  406ec3:	shl    ebp,0x34
  406ec6:	mov    ds:0xe6c199a8,al
  406ecb:	bound  ecx,QWORD PTR [ebx-0x37]
  406ece:	mov    ah,0x13
  406ed0:	fld    DWORD PTR [eax+eax*8]
  406ed3:	pop    es
  406ed4:	cmp    ch,ah
  406ed6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ed7:	sbb    bh,ch
  406ed9:	xor    DWORD PTR [edi-0x5e],ecx
  406edc:	loop   0x406f56
  406ede:	lock or BYTE PTR [ebx+0x54],bl
  406ee2:	fnstsw WORD PTR [ecx-0x22791f9f]
  406ee8:	xor    al,0x34
  406eea:	dec    ebp
  406eeb:	les    ebp,FWORD PTR [ecx+0x3f]
  406eee:	jmp    0xeb6b:0xc27c08f7
  406ef5:	pop    edi
  406ef6:	dec    eax
  406ef7:	or     eax,0xfdd16348
  406efc:	lods   al,BYTE PTR ds:[esi]
  406efd:	cwde   
  406efe:	sub    DWORD PTR [ebx-0x7711ab9b],eax
  406f04:	pop    ecx
  406f05:	pusha  
  406f06:	add    bh,BYTE PTR [edi+0x78fcfdd4]
  406f0c:	jns    0x406ecc
  406f0e:	inc    ebx
  406f0f:	cmp    al,0x4d
  406f11:	repz rcl BYTE PTR [edi],1
  406f14:	out    dx,eax
  406f15:	cmp    ebp,eax
  406f17:	(bad)  
  406f18:	out    0xd0,eax
  406f1a:	sub    eax,0xade9e43
  406f1f:	jmp    0x406f1c
  406f21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f22:	mov    BYTE PTR ss:[ebx],dl
  406f25:	mul    DWORD PTR [esi+esi*2+0x7c]
  406f29:	mov    bh,0x2a
  406f2b:	add    al,0x58
  406f2d:	or     eax,0xed4a983e
  406f32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f33:	dec    ecx
  406f34:	push   ebx
  406f35:	mov    edx,esi
  406f37:	or     bh,BYTE PTR [esi+ebx*8-0x14]
  406f3b:	adc    esp,DWORD PTR [ebx-0x34]
  406f3e:	xor    ch,BYTE PTR [esp+esi*4-0x47]
  406f42:	mov    dh,0x54
  406f44:	xchg   ecx,eax
  406f45:	nop
  406f46:	and    eax,0xa7fc3626
  406f4b:	adc    al,0x1c
  406f4d:	dec    esi
  406f4e:	push   esi
  406f4f:	pushf  
  406f50:	or     eax,0x18eb4a82
  406f55:	js     0x406f44
  406f57:	pop    eax
  406f58:	add    ecx,ebp
  406f5a:	sub    DWORD PTR [edx-0x56],edi
  406f5d:	ins    DWORD PTR es:[edi],dx
  406f5e:	call   FWORD PTR [ebx+ecx*2+0x9302e1e]
  406f65:	xor    eax,0xfc696865
  406f6a:	(bad)  
  406f6b:	mov    ds:0xb0fa16e8,eax
  406f70:	pop    eax
  406f71:	imul   esp,DWORD PTR [esi+0x52a0833],0x7493eb7f
  406f7b:	dec    esi
  406f7c:	retf   
  406f7d:	push   edi
  406f7e:	jnp    0x406f0b
  406f80:	daa    
  406f81:	xor    eax,0xa0173969
  406f86:	sub    dl,0x28
  406f89:	fldenv [eax+0x4e]
  406f8c:	xor    ebp,edx
  406f8e:	(bad)  
  406f8f:	sbb    al,0xe3
  406f91:	pop    edx
  406f92:	sub    al,0xdc
  406f94:	push   cs
  406f95:	jne    0x406fe1
  406f97:	out    dx,eax
  406f98:	repnz push edi
  406f9a:	retf   0x78
  406f9d:	(bad)  
  406f9e:	pop    ebp
  406f9f:	add    ah,BYTE PTR [eax-0x46]
  406fa2:	push   ecx
  406fa3:	or     eax,0x87bea55d
  406fa8:	aad    0xc2
  406faa:	adc    al,0xf3
  406fac:	or     dh,dh
  406fae:	xchg   ecx,eax
  406faf:	rcl    BYTE PTR [eax+0x36],1
  406fb2:	dec    eax
  406fb3:	mov    dl,0xe2
  406fb5:	dec    eax
  406fb6:	jns    0x406f49
  406fb8:	sub    DWORD PTR [ebx],eax
  406fba:	rcl    BYTE PTR [eax],0xc9
  406fbd:	or     al,0xb9
  406fbf:	xchg   edx,eax
  406fc0:	stc    
  406fc1:	cmp    al,0xa3
  406fc3:	das    
  406fc4:	pop    ebp
  406fc5:	or     eax,0x1b9befe5
  406fca:	inc    ecx
  406fcb:	jmp    0xb774:0x62d2869
  406fd2:	jg     0x407021
  406fd4:	lds    edi,FWORD PTR [edi-0x2]
  406fd7:	xlat   BYTE PTR ds:[ebx]
  406fd8:	push   0x89f7f85a
  406fdd:	push   ebx
  406fde:	out    0xe,eax
  406fe0:	lods   al,BYTE PTR ds:[esi]
  406fe1:	mov    ebx,0x29d6d4a3
  406fe6:	(bad)  
  406fe7:	repz mov dh,0x8
  406fea:	fcmove st,st(2)
  406fec:	stos   BYTE PTR es:[edi],al
  406fed:	jnp    0x407059
  406fef:	mov    dl,0x38
  406ff1:	(bad)  
  406ff2:	in     eax,dx
  406ff3:	or     cl,ch
  406ff5:	sti    
  406ff6:	fisubr WORD PTR [edx-0x3b]
  406ff9:	push   esi
  406ffa:	push   ebp
  406ffb:	rcr    DWORD PTR [edx],cl
  406ffd:	or     eax,0xf6b65869
  407002:	aad    0xf7
  407004:	aad    0xc
  407006:	iret   
  407007:	frstor [edx-0x38]
  40700a:	and    DWORD PTR [bp+si-0x3b],esi
  40700e:	xor    ch,al
  407010:	cmc    
  407011:	or     bl,BYTE PTR [edi]
  407013:	add    DWORD PTR [ecx+0x402b921b],esp
  407019:	push   ebp
  40701a:	ficomp DWORD PTR [ecx]
  40701c:	jp     0x40700c
  40701e:	test   al,0x5d
  407020:	push   0xffffffbd
  407022:	lea    ebp,[esi]
  407024:	mov    ?,ecx
  407026:	xor    al,0xd
  407028:	call   0xf790f80e
  40702d:	cmc    
  40702e:	jnp    0x406fd8
  407030:	(bad)  [ebx]
  407032:	push   ecx
  407033:	inc    edi
  407034:	dec    edi
  407035:	mov    dl,BYTE PTR [edi]
  407037:	scas   eax,DWORD PTR es:[edi]
  407038:	loope  0x406fdd
  40703a:	pushf  
  40703b:	adc    ch,ch
  40703d:	sbb    al,0xfb
  40703f:	jge    0x40702b
  407041:	lods   eax,DWORD PTR ds:[esi]
  407042:	jno    0x407030
  407044:	and    BYTE PTR [edx],ch
  407046:	lock pusha 
  407048:	out    dx,al
  407049:	adc    eax,0x7653c458
  40704e:	lds    ecx,FWORD PTR [edi]
  407050:	add    BYTE PTR [esi],ah
  407052:	cmp    al,0xe9
  407054:	pop    edi
  407055:	jbe    0x40706d
  407057:	hlt    
  407058:	mov    dl,BYTE PTR [ecx]
  40705a:	push   ds
  40705b:	retf   
  40705c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40705d:	cmp    edi,DWORD PTR [eax+0x3de4d278]
  407063:	inc    esi
  407064:	lock xor eax,0xce309ebf
  40706a:	out    dx,eax
  40706b:	add    esi,DWORD PTR [edi-0x72]
  40706e:	imul   ebx,edi,0x6f
  407071:	add    al,0x43
  407073:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407074:	bound  ecx,QWORD PTR [bp+di]
  407077:	and    dl,BYTE PTR [edi*2+0x4621f7f3]
  40707e:	xchg   edi,eax
  40707f:	fs xchg ebx,eax
  407081:	jecxz  0x4070ae
  407083:	add    eax,0xb6f8a3b1
  407088:	xor    al,0x20
  40708a:	mov    cs,WORD PTR [esi+0x1ac3876d]
  407090:	test   BYTE PTR [bp+si+0x41],dl
  407094:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407095:	adc    al,0x79
  407097:	aad    0xd
  407099:	xlat   BYTE PTR ds:[ebx]
  40709a:	sbb    DWORD PTR [ecx],esi
  40709c:	leave  
  40709d:	cmp    al,0x1
  40709f:	jne    0x407037
  4070a1:	inc    ecx
  4070a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070a3:	popf   
  4070a4:	leave  
  4070a5:	bound  esp,QWORD PTR [edi-0x32f7eb4e]
  4070ab:	sbb    al,0xee
  4070ad:	jl     0x4070aa
  4070af:	mov    esi,eax
  4070b1:	pop    eax
  4070b2:	out    0xd8,al
  4070b4:	cmp    eax,0xa8adb09a
  4070b9:	imul   edx,ebx,0x68
  4070bc:	sbb    ch,0x1e
  4070bf:	xlat   BYTE PTR ds:[bx]
  4070c1:	xchg   BYTE PTR [ebp-0x1a],bh
  4070c4:	mov    eax,esp
  4070c6:	pushf  
  4070c7:	or     al,0x3f
  4070c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070ca:	into   
  4070cb:	ret    
  4070cc:	push   ss
  4070cd:	repz fbld TBYTE PTR [esp+ecx*4]
  4070d1:	mov    bl,0x33
  4070d3:	sub    esp,DWORD PTR [edx]
  4070d5:	imul   edx,DWORD PTR [edx],0x5f065af2
  4070db:	call   0xb6fc:0x345582a4
  4070e2:	sbb    BYTE PTR [eax+0x49fe7634],bl
  4070e8:	fnstsw WORD PTR cs:[edx+0x26]
  4070ec:	int3   
  4070ed:	xor    eax,0x7cde4d7c
  4070f2:	cmp    BYTE PTR [esi+0x3482e8fb],cl
  4070f8:	ja     0x407114
  4070fa:	mov    ch,0xbc
  4070fc:	add    bl,BYTE PTR [ebp+0x63c81b72]
  407102:	ss scas eax,DWORD PTR es:[edi]
  407104:	fld    QWORD PTR [edi+0x32]
  407107:	je     0x40715b
  407109:	(bad)  
  40710a:	in     al,dx
  40710b:	dec    ebp
  40710c:	sar    ebp,0x31
  40710f:	push   ebp
  407110:	ds push 0xca4251a7
  407116:	outs   dx,BYTE PTR ds:[esi]
  407117:	popf   
  407118:	gs push cs
  40711a:	fisubr WORD PTR [edi-0x1869179f]
  407120:	sub    al,0xac
  407122:	xor    al,0x95
  407124:	jle    0x407166
  407126:	es add ah,al
  407129:	mov    ebp,0xbef271a5
  40712e:	fs jne 0x4070ba
  407131:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407132:	mov    edx,0x653ad6
  407137:	sbb    BYTE PTR [ecx-0x248b213f],dh
  40713d:	mov    eax,ds:0x4c95d5b9
  407142:	xor    esp,ebp
  407144:	xor    al,0x10
  407146:	stos   DWORD PTR es:[edi],eax
  407147:	cmovge ecx,DWORD PTR [ebx+0x3280c37a]
  40714e:	iret   
  40714f:	loop   0x4070e9
  407151:	test   al,0x35
  407153:	call   0x41b9:0xd87dc9fb
  40715a:	mov    esi,0x9fefcd75
  40715f:	pop    ss
  407160:	(bad)  
  407162:	push   cs
  407163:	cmc    
  407164:	dec    edi
  407165:	sub    eax,0xc2c0ea72
  40716a:	cwde   
  40716b:	adc    ebp,DWORD PTR [ebp+0x7b14242d]
  407171:	xor    BYTE PTR [esi-0x76],0x94
  407175:	mov    edx,ebx
  407177:	(bad)  
  407178:	adc    ebx,ebx
  40717a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40717b:	inc    ecx
  40717c:	and    al,0x98
  40717e:	xchg   ebp,eax
  40717f:	aam    0xdb
  407181:	dec    edx
  407182:	mov    BYTE PTR [ecx],al
  407184:	push   edi
  407185:	mov    bl,0x5e
  407187:	ins    DWORD PTR es:[edi],dx
  407188:	mov    ebx,DWORD PTR [edx+0x78]
  40718b:	stc    
  40718c:	pmaddwd mm0,mm3
  40718f:	dec    eax
  407190:	fwait
  407191:	mov    al,BYTE PTR [esi]
  407193:	cmc    
  407194:	push   eax
  407195:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407196:	and    dh,BYTE PTR [ebx-0x3c974970]
  40719c:	lods   eax,DWORD PTR ds:[esi]
  40719d:	jmp    0x759f99f4
  4071a2:	dec    edi
  4071a3:	js     0x4071be
  4071a5:	mov    DWORD PTR [ebx-0x49],edx
  4071a8:	ror    esp,cl
  4071aa:	push   eax
  4071ab:	and    eax,0x381b92f5
  4071b0:	mov    ebx,0x14edbf1a
  4071b5:	and    ebp,edi
  4071b7:	adc    DWORD PTR es:[ecx],0xdb043d90
  4071be:	ins    DWORD PTR es:[edi],dx
  4071bf:	mov    esp,0xde710fff
  4071c4:	jo     0x407203
  4071c6:	mov    ecx,DWORD PTR [ecx+0x5ff1fbb2]
  4071cc:	jp     0x4071c0
  4071ce:	sahf   
  4071cf:	hlt    
  4071d0:	and    eax,0xe6fbe7a6
  4071d5:	or     DWORD PTR [edx+0x42],0x514ef2d4
  4071dc:	mov    eax,0x75f18f19
  4071e1:	jmp    0x4071e8
  4071e3:	xor    DWORD PTR [eax+0x4e],eax
  4071e6:	ds mov ecx,0x21617a6a
  4071ec:	xchg   ebp,eax
  4071ed:	mov    esp,0x5b4ea764
  4071f2:	int3   
  4071f3:	ss stos DWORD PTR es:[edi],eax
  4071f5:	outs   dx,DWORD PTR ds:[esi]
  4071f6:	idiv   BYTE PTR [ebx]
  4071f8:	(bad)  
  4071f9:	out    0x1e,al
  4071fb:	add    bl,BYTE PTR [edx]
  4071fd:	addr16 mov ds:0xf9b8,eax
  407201:	mov    dh,0x6b
  407203:	inc    ecx
  407204:	iret   
  407205:	and    ecx,ebp
  407207:	inc    ecx
  407208:	add    al,0x73
  40720a:	dec    ebp
  40720b:	pushf  
  40720c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40720d:	shr    DWORD PTR [edi],0x3a
  407210:	xchg   edx,eax
  407211:	cmp    esi,DWORD PTR [eax+0x28]
  407214:	dec    edx
  407215:	mov    DWORD PTR [edi],ecx
  407217:	push   es
  407218:	push   ecx
  407219:	dec    edx
  40721a:	loop   0x4071da
  40721c:	out    0xa5,al
  40721e:	leave  
  40721f:	or     cl,BYTE PTR [ebx]
  407221:	fbstp  TBYTE PTR [esi-0x5214cb50]
  407227:	sub    eax,0xb18d4a9e
  40722c:	mov    ds:0x78661951,al
  407231:	jg     0x40722b
  407233:	inc    ebp
  407234:	(bad)
  407237:	ret    
  407238:	retf   
  407239:	jmp    0xdbc2110a
  40723e:	and    ecx,DWORD PTR [edi]
  407240:	imul   edi,ecx,0x4bf1b53b
  407246:	out    0x2b,al
  407248:	gs jae 0x407231
  40724b:	inc    ecx
  40724c:	in     eax,dx
  40724d:	scas   al,BYTE PTR es:[edi]
  40724e:	xchg   ebx,eax
  40724f:	call   0x59d3:0x639d8bad
  407256:	sar    DWORD PTR [ecx+0x19776b6e],cl
  40725c:	or     DWORD PTR [edi+0x72],edi
  40725f:	push   ebp
  407260:	jno    0x407291
  407262:	mov    bl,0x92
  407264:	test   al,0xd
  407266:	push   ecx
  407267:	test   ebx,ecx
  407269:	xchg   ebp,eax
  40726a:	ja     0x407266
  40726c:	mov    bh,0xcf
  40726e:	push   cs
  40726f:	push   ecx
  407270:	(bad)  
  407271:	pop    esi
  407272:	retf   0x91bd
  407275:	or     ch,al
  407277:	ret    0xcea7
  40727a:	js     0x40724f
  40727c:	(bad)  [ebx+0x45]
  40727f:	scas   eax,DWORD PTR es:[edi]
  407280:	(bad)  
  407281:	mov    al,0xb0
  407283:	leave  
  407284:	push   edx
  407285:	lods   al,BYTE PTR ds:[esi]
  407286:	jne    0x407301
  407288:	(bad)  [esp+eax*1+0x34]
  40728c:	mov    ds:0x661ea61e,al
  407291:	mov    bl,0x2f
  407293:	aam    0x50
  407295:	data16 (bad) 
  407297:	int3   
  407298:	cmp    al,0x67
  40729a:	ror    DWORD PTR [ebx-0x73b8d91f],cl
  4072a0:	cli    
  4072a1:	jne    0x407265
  4072a3:	xchg   DWORD PTR [ecx],edx
  4072a5:	rcl    BYTE PTR [eax],cl
  4072a7:	sub    eax,edi
  4072a9:	mov    al,0x90
  4072ab:	fidiv  DWORD PTR ss:[esp+edx*1]
  4072af:	xor    al,0xbe
  4072b1:	(bad)  [ecx-0x7a]
  4072b4:	icebp  
  4072b5:	adc    ecx,esi
  4072b7:	push   eax
  4072b8:	(bad)  
  4072ba:	jno    0x4072e8
  4072bc:	mov    eax,0x1332c9ea
  4072c1:	add    DWORD PTR [edi-0x17fd4708],ebp
  4072c7:	sub    al,BYTE PTR [ecx+0x38]
  4072ca:	out    0x18,al
  4072cc:	cdq    
  4072cd:	aas    
  4072ce:	push   0x5f
  4072d0:	aas    
  4072d1:	push   esi
  4072d2:	loopne 0x4072a0
  4072d4:	mov    cl,0x70
  4072d6:	sbb    eax,0x1c81aa1
  4072db:	pop    ss
  4072dc:	sub    cl,dl
  4072de:	ins    BYTE PTR es:[edi],dx
  4072df:	add    DWORD PTR [ebx],0xffffffc6
  4072e2:	out    dx,al
  4072e3:	test   al,0xc9
  4072e5:	mov    ecx,edi
  4072e7:	dec    edi
  4072e8:	fild   QWORD PTR [edx+0x67]
  4072eb:	lods   eax,DWORD PTR ds:[esi]
  4072ec:	icebp  
  4072ed:	xor    eax,0x4c2fcf4e
  4072f2:	adc    ch,al
  4072f4:	or     BYTE PTR [ebx+0x23],0x4b
  4072f8:	add    eax,0x36879aa
  4072fd:	ret    
  4072fe:	adc    edx,DWORD PTR [ecx+ebp*1+0x74]
  407302:	cmp    BYTE PTR [esi+ebp*8-0x6d856d4d],dl
  407309:	mov    ds:0x3c904ec2,eax
  40730e:	dec    esp
  40730f:	mov    ch,0x96
  407311:	and    eax,0xd92abaaf
  407316:	lds    eax,FWORD PTR [eax+0x46bd17f1]
  40731c:	dec    esp
  40731d:	push   0x7a
  40731f:	xchg   ecx,eax
  407320:	stos   BYTE PTR es:[edi],al
  407321:	inc    edx
  407322:	dec    edi
  407323:	sti    
  407324:	ret    0x3838
  407327:	lods   eax,DWORD PTR ds:[esi]
  407328:	ret    
  407329:	or     DWORD PTR [esi-0x4dbf9aab],edx
  40732f:	mov    al,ds:0x3a57f104
  407334:	fistp  DWORD PTR [edx]
  407336:	imul   edx,DWORD PTR [edi],0xffffff8d
  407339:	aam    0x6f
  40733b:	sbb    al,0xaa
  40733d:	and    bh,ch
  40733f:	push   0x21f42669
  407344:	inc    edi
  407345:	cmc    
  407346:	inc    eax
  407347:	mov    ch,0x5e
  407349:	int    0x22
  40734b:	mov    ah,0xa2
  40734d:	in     eax,0x45
  40734f:	push   ecx
  407350:	inc    edx
  407351:	fdivr  st(3),st
  407353:	cmp    BYTE PTR [ebx+eiz*2],ch
  407356:	and    ebx,0xffffffe0
  407359:	xor    al,0x7a
  40735b:	xor    BYTE PTR [edx-0x42386136],bl
  407361:	adc    al,0x14
  407363:	imul   esp,DWORD PTR [edx+0x5f],0x80508aeb
  40736a:	and    eax,0xe0453c3d
  40736f:	jle    0x407325
  407371:	xchg   ebp,eax
  407372:	adc    DWORD PTR [edi-0x6354f750],ebp
  407378:	ja     0x407307
  40737a:	lea    ebx,[ebp-0xd8eb245]
  407380:	lahf   
  407381:	pop    ss
  407382:	out    0x3f,al
  407384:	or     BYTE PTR [edi],ch
  407386:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407387:	sub    eax,0xef15b7cb
  40738c:	hlt    
  40738d:	imul   ebx,esi,0xa049fe64
  407393:	call   DWORD PTR [eax-0x51]
  407396:	loop   0x40735e
  407398:	and    ecx,DWORD PTR cs:[esi-0x10f687aa]
  40739f:	popw   ds
  4073a1:	or     ebx,DWORD PTR [ecx+0x331e8eff]
  4073a7:	or     eax,0xb48a4b5
  4073ac:	jmp    0x40733f
  4073ae:	loope  0x4073c4
  4073b0:	aad    0xec
  4073b2:	push   edx
  4073b3:	loope  0x4073f4
  4073b5:	mov    al,0xe9
  4073b7:	(bad)  
  4073b8:	test   al,0xe
  4073ba:	fcom   DWORD PTR [edx+0x78cdd1c2]
  4073c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073c1:	pop    ds
  4073c2:	mov    edi,0x16feafe5
  4073c7:	das    
  4073c8:	dec    ecx
  4073c9:	add    dh,BYTE PTR [ecx-0xa]
  4073cc:	fistp  QWORD PTR ds:0x1d41f9cf
  4073d2:	add    ebp,esp
  4073d4:	or     bl,BYTE PTR [eax]
  4073d6:	xor    BYTE PTR [eax-0x4b87dfd0],0xd1
  4073dd:	push   ebx
  4073de:	imul   edi,esp,0x74
  4073e1:	clc    
  4073e2:	add    al,cl
  4073e4:	xor    BYTE PTR [ecx+0x9ef9d4f],ah
  4073ea:	sub    al,0x98
  4073ec:	and    al,0x25
  4073ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073ef:	adc    esi,DWORD PTR ds:0x5787771d
  4073f5:	int    0x8f
  4073f7:	add    BYTE PTR [edi-0x6ec04e22],ch
  4073fd:	test   al,0x4b
  4073ff:	aad    0x50
  407401:	jnp    0x407477
  407403:	xlat   BYTE PTR ds:[ebx]
  407404:	add    dh,BYTE PTR [ebx]
  407406:	push   cs
  407407:	lea    edi,[ecx]
  407409:	cmp    edi,DWORD PTR [esp+edi*2+0x2e]
  40740d:	loope  0x407437
  40740f:	scas   al,BYTE PTR es:[edi]
  407410:	fimul  WORD PTR [edi]
  407412:	adc    ah,bh
  407414:	cmc    
  407415:	xor    dl,BYTE PTR [edx+0x7]
  407418:	mov    DWORD PTR [ebx-0x63217d2e],esi
  40741e:	das    
  40741f:	fadd   QWORD PTR [eax+esi*8]
  407422:	lods   al,BYTE PTR ds:[esi]
  407423:	bound  eax,QWORD PTR [esi-0x4b]
  407426:	xor    cl,BYTE PTR [edx+0x6c76fd38]
  40742c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40742d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40742e:	dec    edi
  40742f:	out    0x7e,eax
  407431:	std    
  407432:	and    al,0xa0
  407434:	mov    ch,0x7c
  407436:	out    0x73,al
  407438:	mov    al,0x7
  40743a:	lods   al,BYTE PTR ds:[esi]
  40743b:	iret   
  40743c:	xchg   ecx,eax
  40743d:	daa    
  40743e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40743f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407440:	ds xor eax,0x7a16f4c4
  407446:	add    al,0xc5
  407448:	add    DWORD PTR [esi+0x51],ebp
  40744b:	adc    BYTE PTR [ebx+0x441f6303],bl
  407451:	into   
  407452:	sub    ebp,DWORD PTR [eax+ebp*1-0x423896b5]
  407459:	call   0x2b580e33
  40745e:	hlt    
  40745f:	or     DWORD PTR [edi],edx
  407461:	mov    esi,0x53c07c90
  407466:	(bad)  
  407469:	jg     0x407416
  40746b:	(bad)  
  40746e:	out    dx,al
  40746f:	test   DWORD PTR [esi],esp
  407471:	pop    ebx
  407472:	in     eax,dx
  407473:	push   ebx
  407474:	adc    ah,cl
  407476:	add    cl,cl
  407478:	and    bh,BYTE PTR [edx+eax*4+0x20]
  40747c:	cmp    al,0x54
  40747e:	mov    cl,0x3c
  407480:	mov    esp,0xa6f6c5a4
  407485:	in     al,0x41
  407487:	mov    BYTE PTR gs:[esi],bh
  40748a:	mov    al,0xd1
  40748c:	in     al,0xac
  40748e:	test   al,0x3a
  407490:	dec    ecx
  407491:	ins    BYTE PTR es:[edi],dx
  407492:	sub    DWORD PTR [ecx+0x7],edi
  407495:	daa    
  407496:	in     eax,dx
  407497:	aad    0x69
  407499:	stc    
  40749a:	(bad)  
  40749b:	push   0xeff5fe4c
  4074a0:	ss mov edx,0x2b7142
  4074a6:	test   eax,0x6c408326
  4074ab:	(bad)  
  4074ac:	fwait
  4074ad:	add    eax,0x1d9cf44b
  4074b2:	adc    BYTE PTR [esi-0x2d],cl
  4074b5:	adc    BYTE PTR [ecx],bh
  4074b7:	popf   
  4074b8:	adc    ebx,DWORD PTR [ecx-0x75]
  4074bb:	in     eax,0x33
  4074bd:	jo     0x40752c
  4074bf:	sar    ch,0x13
  4074c2:	shr    BYTE PTR [edx+eiz*2],cl
  4074c5:	add    DWORD PTR [esi+0xe977c59],0xf82f44ab
  4074cf:	cld    
  4074d0:	pop    ds
  4074d1:	repnz pop ebx
  4074d3:	stos   DWORD PTR es:[edi],eax
  4074d4:	test   al,0xa9
  4074d6:	fimul  DWORD PTR [edi+eax*1+0x4]
  4074da:	test   dl,al
  4074dc:	les    ebp,FWORD PTR ds:0x233f17a2
  4074e2:	and    eax,DWORD PTR [edi]
  4074e4:	push   ebx
  4074e5:	je     0x407493
  4074e7:	fistp  DWORD PTR [edi]
  4074e9:	xor    al,0xbb
  4074eb:	cdq    
  4074ec:	mov    DWORD PTR [edi-0x6662a632],ebx
  4074f2:	mov    ecx,0x1ec7ea99
  4074f7:	add    BYTE PTR [edx+0x31],cl
  4074fa:	leave  
  4074fb:	fwait
  4074fc:	adc    DWORD PTR [ebx-0x3ea68034],edx
  407502:	sub    BYTE PTR [ecx*1-0x4c194764],al
  407509:	xchg   esp,eax
  40750a:	mov    BYTE PTR [edi-0x6f2625a9],dh
  407510:	aaa    
  407511:	cwde   
  407512:	add    BYTE PTR [edx],al
  407514:	or     BYTE PTR fs:[ecx+0x54],0x1f
  407519:	xchg   ch,cl
  40751b:	lds    esp,FWORD PTR ds:0xf2f29eaf
  407521:	je     0x407530
  407523:	imul   ebx,DWORD PTR [esi],0xffffff9c
  407526:	adc    edi,DWORD PTR [edi+0x3]
  407529:	lods   al,BYTE PTR cs:[esi]
  40752b:	lds    esp,FWORD PTR [eax+edx*2-0x7c4b7d62]
  407532:	pop    ss
  407533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407534:	mov    edi,0xf4223429
  407539:	(bad)  
  40753a:	push   ss
  40753b:	fld    st(1)
  40753d:	retf   
  40753e:	sbb    al,0xea
  407540:	mov    dl,BYTE PTR [ebp+0x6c]
  407543:	(bad)  
  407545:	mov    al,0xb6
  407547:	call   0x5878:0xf1c9bab8
  40754e:	stc    
  40754f:	pop    ss
  407550:	int    0x90
  407552:	retf   
  407553:	push   ds
  407554:	adc    al,BYTE PTR [ebp-0x1266e04f]
  40755a:	shl    DWORD PTR [ecx],1
  40755c:	xor    edx,DWORD PTR [ebx]
  40755e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40755f:	mov    esi,0x471e403c
  407564:	mov    ?,WORD PTR [ebp-0x1c]
  407567:	jmp    0x407599
  407569:	jmp    0x836a60e6
  40756e:	mul    DWORD PTR [edi-0x72785db3]
  407574:	adc    DWORD PTR [ebx+esi*1-0xb],esi
  407578:	and    BYTE PTR [eax],dl
  40757a:	xor    dh,BYTE PTR [esi-0x32]
  40757d:	push   esp
  40757e:	and    ah,BYTE PTR [edx-0x7c2ea41]
  407584:	pop    ds
  407585:	sbb    DWORD PTR [ebx-0x13],ebp
  407588:	dec    bh
  40758a:	push   ds
  40758b:	dec    ebx
  40758c:	js     0x407581
  40758e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40758f:	pop    esi
  407591:	pop    esi
  407592:	iret   
  407593:	fnstsw WORD PTR [edx+eiz*8]
  407596:	or     BYTE PTR [ecx+0x50],ch
  407599:	push   eax
  40759a:	pop    esp
  40759b:	mov    DWORD PTR [edx+0x72],ebx
  40759e:	push   edi
  40759f:	push   0x3ba075bd
  4075a4:	mov    edx,0x23a17fb
  4075a9:	aaa    
  4075aa:	stc    
  4075ab:	jmp    0x407549
  4075ad:	sar    DWORD PTR [esi],1
  4075af:	or     BYTE PTR [edi-0x76c1f69a],bh
  4075b5:	scas   eax,DWORD PTR es:[edi]
  4075b6:	ins    DWORD PTR es:[edi],dx
  4075b7:	test   BYTE PTR [ecx+0x183efc8c],ah
  4075bd:	mov    WORD PTR [esi],gs
  4075bf:	idiv   BYTE PTR [ebp+0x22c842e5]
  4075c5:	(bad)  
  4075c6:	mov    ch,0xbb
  4075c8:	xchg   ebp,eax
  4075c9:	imul   ecx,DWORD PTR [ecx],0x1a0c0a77
  4075cf:	fcomip st,st(4)
  4075d1:	out    0x49,eax
  4075d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075d4:	pop    ds
  4075d5:	xchg   ebx,eax
  4075d6:	cmp    eax,0xf8918a04
  4075db:	xor    eax,0xcb885082
  4075e0:	ins    DWORD PTR es:[edi],dx
  4075e1:	jge    0x407597
  4075e3:	mov    WORD PTR gs:[ebx],?
  4075e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075e7:	retf   
  4075e8:	stos   BYTE PTR es:[edi],al
  4075e9:	mov    cl,0xf0
  4075eb:	push   cs
  4075ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075ed:	pushf  
  4075ee:	(bad)  
  4075ef:	aad    0x4b
  4075f1:	lea    eax,[edi-0x34]
  4075f4:	adc    al,0x74
  4075f6:	hlt    
  4075f7:	test   BYTE PTR [eax+ebp*1-0x3053efb5],ch
  4075fe:	mov    esp,0x32a7dfc2
  407603:	sub    BYTE PTR [esp+ecx*4-0x3ea7980a],0x79
  40760b:	and    BYTE PTR [eax+0x3612c4af],ah
  407611:	jae    0x4075ba
  407613:	mov    DWORD PTR [edi+0x30],ebx
  407616:	xlat   BYTE PTR ds:[ebx]
  407618:	mov    esp,0x252c1a25
  40761d:	ss out dx,eax
  40761f:	int    0x8a
  407621:	stc    
  407622:	mov    edi,0xcf0ab2d0
  407627:	mulps  xmm7,XMMWORD PTR [ecx+0x1724f6c7]
  40762e:	repz pop esi
  407630:	out    dx,al
  407631:	sahf   
  407632:	mov    ah,0x2a
  407634:	out    dx,al
  407635:	call   0x1f54:0xc6344e05
  40763c:	aad    0xeb
  40763e:	sbb    eax,0x72ed4ca2
  407643:	rcr    esi,cl
  407645:	stc    
  407646:	out    0xfa,al
  407648:	fild   WORD PTR [esp+ebx*2+0x4e96ec3b]
  40764f:	lods   eax,DWORD PTR ds:[esi]
  407650:	out    dx,al
  407651:	mov    al,0x71
  407653:	pusha  
  407654:	mov    edx,0xc944be9
  407659:	fnstsw WORD PTR [ecx]
  40765b:	push   es
  40765c:	ror    ecx,cl
  40765e:	sbb    al,BYTE PTR [ebx-0x56649eff]
  407664:	ror    BYTE PTR [ebp-0x4c],cl
  407667:	push   ds
  407668:	hlt    
  407669:	jns    0x407653
  40766b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40766c:	retf   
  40766d:	or     dh,0x4a
  407670:	or     al,0x48
  407672:	pusha  
  407673:	mov    al,0xf
  407675:	mov    ah,0x59
  407677:	mov    edx,ecx
  407679:	fstp   QWORD PTR [bp+si-0x3d8b]
  40767e:	aad    0x61
  407680:	mov    cl,0xef
  407682:	in     eax,dx
  407683:	lahf   
  407684:	mov    esi,esi
  407686:	popa   
  407687:	cmp    DWORD PTR [eax+0x7d],ebp
  40768a:	sbb    ch,BYTE PTR [eax-0x5ec82cc4]
  407690:	fmul   st,st(5)
  407692:	push   ss
  407693:	test   al,0x60
  407695:	jo     0x4076ff
  407697:	and    ah,BYTE PTR [edx+0x2d3d2d72]
  40769d:	cmp    BYTE PTR [edx+0x6eed4a90],bh
  4076a3:	sub    ebx,DWORD PTR ds:0x31c90c1b
  4076a9:	and    eax,0x73e02648
  4076ae:	pop    ss
  4076af:	outs   dx,DWORD PTR ds:[esi]
  4076b0:	(bad)  
  4076b1:	jbe    0x407708
  4076b3:	or     dh,BYTE PTR [ebp+0x24b66860]
  4076b9:	mov    WORD PTR [ebx],fs
  4076bb:	sub    ch,0x7f
  4076be:	outs   dx,BYTE PTR ds:[esi]
  4076bf:	push   0x23296ce8
  4076c4:	xchg   ecx,eax
  4076c5:	ror    DWORD PTR [ecx-0x35],1
  4076c8:	dec    esi
  4076c9:	dec    esi
  4076ca:	mov    ds:0x2ecd64c9,al
  4076cf:	cli    
  4076d0:	pop    esi
  4076d1:	jne    0x407696
  4076d3:	mov    edi,0x9e57e336
  4076d8:	adc    ebp,ebp
  4076da:	(bad)  
  4076db:	fwait
  4076dc:	mov    esp,0x21ffe407
  4076e1:	fldcw  WORD PTR [edx]
  4076e3:	add    ebp,DWORD PTR [eax-0x6424d675]
  4076e9:	cwde   
  4076ea:	sub    eax,0x1d15dd90
  4076ef:	mov    gs,edx
  4076f1:	aad    0x5f
  4076f3:	in     al,0xda
  4076f5:	std    
  4076f6:	data16 jno 0x407752
  4076f9:	test   BYTE PTR [ebx+0x57],0xb3
  4076fd:	enter  0x7119,0xae
  407701:	dec    eax
  407702:	pop    ebp
  407703:	daa    
  407704:	scas   al,BYTE PTR es:[edi]
  407705:	push   eax
  407706:	cmp    eax,0x40716568
  40770b:	xchg   esp,eax
  40770c:	outs   dx,DWORD PTR ds:[esi]
  40770d:	jne    0x4076a2
  40770f:	mov    esi,0xe1cdafa9
  407714:	push   edx
  407715:	sub    eax,0x258446b4
  40771a:	xor    edx,esp
  40771c:	ins    BYTE PTR es:[edi],dx
  40771d:	sti    
  40771e:	mov    BYTE PTR [ebx-0x12],bh
  407721:	pop    ebx
  407722:	dec    eax
  407723:	jbe    0x4076c1
  407725:	xchg   edi,eax
  407726:	jmp    0xf18db8e3
  40772b:	pop    ebx
  40772c:	add    BYTE PTR [ebp+0x205617d6],bl
  407732:	sub    cl,BYTE PTR [ebx-0x29]
  407735:	in     al,dx
  407736:	inc    ecx
  407737:	(bad)  [ebx]
  407739:	out    dx,al
  40773a:	add    al,0x81
  40773c:	sub    eax,0x66d47ea8
  407741:	sbb    ecx,DWORD PTR [edi]
  407743:	in     eax,0xdb
  407745:	sbb    DWORD PTR [ecx-0x4279802a],edi
  40774b:	adc    DWORD PTR [eax],esp
  40774d:	enter  0x7c3f,0xe2
  407751:	in     eax,0x6e
  407753:	(bad)  
  407755:	or     ebp,ebp
  407757:	or     edi,DWORD PTR [edi+0x72e41114]
  40775d:	ins    BYTE PTR es:[edi],dx
  40775e:	mov    esp,0x34817d62
  407763:	jmp    FWORD PTR [ebx]
  407765:	pop    esp
  407766:	icebp  
  407767:	xchg   esi,esi
  407769:	mul    bh
  40776b:	fs adc al,0xe5
  40776e:	cmp    al,0xbd
  407770:	je     0x407730
  407772:	call   0xabed:0x494ff491
  407779:	pop    esi
  40777a:	dec    ecx
  40777b:	daa    
  40777c:	add    al,ah
  40777e:	mov    dl,0xd
  407780:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407781:	rol    DWORD PTR ds:0x32ba839b,cl
  407787:	out    dx,eax
  407788:	add    dh,BYTE PTR [ecx-0x4e]
  40778b:	pop    edx
  40778c:	cmp    BYTE PTR [edx-0x5f],0x69
  407790:	aaa    
  407791:	ins    DWORD PTR es:[edi],dx
  407792:	pop    esp
  407793:	mov    ebp,0x60debd52
  407798:	sbb    eax,0x88d7fabd
  40779d:	jnp    0x4077d3
  40779f:	push   edx
  4077a0:	sbb    ecx,DWORD PTR [esp+esi*8-0x4d]
  4077a4:	xchg   esp,eax
  4077a5:	jl     0x407812
  4077a7:	jle    0x40780a
  4077a9:	mov    ecx,DWORD PTR [edi+edi*2-0x1d2b5275]
  4077b0:	cmp    eax,edx
  4077b2:	lahf   
  4077b3:	lods   al,BYTE PTR ds:[esi]
  4077b4:	test   DWORD PTR [ecx],eax
  4077b6:	cmp    eax,0x834a1e93
  4077bb:	push   es
  4077bc:	arpl   ax,ax
  4077be:	mov    DWORD PTR [edi-0x76937338],edi
  4077c4:	xchg   esp,eax
  4077c5:	or     DWORD PTR [esi-0x6e45bfbd],esp
  4077cb:	add    DWORD PTR [esi],ecx
  4077cd:	dec    esp
  4077ce:	xor    esi,DWORD PTR [ebx+0x75]
  4077d1:	std    
  4077d2:	(bad)  
  4077d3:	xchg   esi,eax
  4077d4:	shl    DWORD PTR [esi+edx*1],cl
  4077d7:	jbe    0x407793
  4077d9:	inc    esi
  4077da:	mov    edi,0x89b962ff
  4077df:	and    DWORD PTR [edx-0xb],0x3493737a
  4077e6:	test   DWORD PTR [ebp+0x3a11d58f],edi
  4077ec:	push   ss
  4077ed:	out    dx,eax
  4077ee:	sub    BYTE PTR [edi],ah
  4077f0:	cmp    BYTE PTR es:[edi+edx*2-0x73256d37],bh
  4077f8:	stos   BYTE PTR es:[edi],al
  4077f9:	sahf   
  4077fa:	lds    esp,FWORD PTR [eax-0x44]
  4077fd:	fstp   QWORD PTR [esi-0x69]
  407800:	hlt    
  407801:	and    eax,0xb8fe7e29
  407806:	pop    esi
  407807:	dec    ebx
  407808:	cmp    al,0x44
  40780a:	dec    eax
  40780b:	rcl    DWORD PTR [ebp+0x646d3c86],cl
  407811:	add    eax,0xa60442d5
  407816:	aas    
  407817:	mov    edx,DWORD PTR [edi]
  407819:	lods   al,BYTE PTR ds:[esi]
  40781a:	sahf   
  40781b:	popa   
  40781c:	xor    al,0xb8
  40781e:	repz jo 0x4077ab
  407821:	add    DWORD PTR [edx+0x39],edx
  407824:	or     eax,0x297379de
  407829:	scas   eax,DWORD PTR es:[edi]
  40782a:	pushf  
  40782b:	pop    esp
  40782c:	mov    cl,0xc4
  40782e:	pusha  
  40782f:	shl    DWORD PTR [ecx+0x6150f10],0xe8
  407836:	ss sti 
  407838:	fdiv   DWORD PTR [ebx-0x389d822]
  40783e:	repz push 0x71
  407841:	sub    DWORD PTR [ecx-0x69b3300],edx
  407847:	fidiv  WORD PTR [ebp-0x57bf6b6c]
  40784d:	aas    
  40784e:	jg     0x4077ef
  407850:	lock jecxz 0x40783e
  407853:	outs   dx,BYTE PTR ds:[esi]
  407854:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407855:	(bad)  
  407856:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407857:	cmp    al,0xa2
  407859:	cmp    DWORD PTR [esi],eax
  40785b:	mov    ?,WORD PTR [ecx]
  40785d:	clc    
  40785e:	lods   eax,DWORD PTR ds:[esi]
  40785f:	jecxz  0x4078bc
  407861:	dec    esi
  407862:	pop    ebp
  407863:	leave  
  407864:	fstp   QWORD PTR [ebp-0x3c]
  407867:	fmul   QWORD PTR [ebx]
  407869:	add    ch,BYTE PTR [eax+0x2c15571b]
  40786f:	sbb    DWORD PTR [edx-0xc07675e],ebp
  407875:	sbb    DWORD PTR [ebx],ecx
  407877:	out    0xff,al
  407879:	dec    ecx
  40787a:	jp     0x407823
  40787c:	outs   dx,BYTE PTR ds:[esi]
  40787d:	jne    0x407882
  40787f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407880:	fld    st(4)
  407882:	ror    edx,1
  407884:	and    dh,BYTE PTR [ebx-0x72ec0484]
  40788a:	mov    ecx,0xd5023cb6
  40788f:	sbb    esp,DWORD PTR [ebx+0x5f]
  407892:	and    ah,BYTE PTR [eax+0x3b2e79e0]
  407898:	or     BYTE PTR [edx-0x56bff88a],0x15
  40789f:	dec    esi
  4078a0:	(bad)  
  4078a1:	dec    eax
  4078a2:	dec    ebp
  4078a3:	mov    ebp,0xa6230a0e
  4078a8:	pop    ds
  4078a9:	sar    bl,0x63
  4078ac:	add    al,0xb5
  4078ae:	retf   
  4078af:	xor    ah,BYTE PTR [ebx+ebx*2]
  4078b2:	es data16 (bad) 
  4078b6:	pop    ds
  4078b7:	fimul  WORD PTR [esi]
  4078b9:	add    al,0xdb
  4078bb:	or     dh,dh
  4078bd:	fimul  DWORD PTR [ecx-0x7a78253f]
  4078c3:	shl    ecx,cl
  4078c5:	loopne 0x40791b
  4078c7:	in     al,0x9
  4078c9:	push   ebp
  4078ca:	xchg   DWORD PTR [ecx],edx
  4078cc:	pop    esp
  4078cd:	aaa    
  4078ce:	imul   ecx,ebp,0x4d
  4078d1:	aad    0x26
  4078d3:	jmp    edx
  4078d5:	mov    esp,0x64e66ba1
  4078da:	add    eax,0xa2b6da7c
  4078df:	imul   eax,DWORD PTR [eax],0x80aceec9
  4078e5:	push   0xffffffd6
  4078e7:	mov    eax,0x9a13af98
  4078ec:	jp     0x407882
  4078ee:	rol    DWORD PTR [ebp+0x49],1
  4078f1:	sub    eax,0x33fd3355
  4078f6:	arpl   cx,dx
  4078f8:	setne  BYTE PTR [eax]
  4078fb:	inc    ebx
  4078fc:	xor    eax,0xc4fd12cd
  407901:	jl     0x4078dc
  407903:	adc    al,0xc8
  407905:	out    0x94,al
  407907:	push   es
  407908:	inc    esi
  407909:	add    al,0xf
  40790b:	enter  0xe887,0x82
  40790f:	not    DWORD PTR [esi+0x55]
  407912:	retf   0x2bcf
  407915:	aam    0x3f
  407917:	add    eax,DWORD PTR [edi+ebp*1]
  40791a:	dec    esi
  40791b:	fldcw  WORD PTR [esi]
  40791d:	jae    0x407983
  40791f:	nop
  407920:	jmp    0x4078b9
  407922:	push   ebp
  407923:	call   0xb8e44fd5
  407928:	test   al,0x64
  40792a:	dec    DWORD PTR [eax-0x68]
  40792d:	shr    BYTE PTR [ebp-0x291f91b5],cl
  407933:	pop    edi
  407934:	mov    bl,0xb5
  407936:	dec    eax
  407937:	stos   BYTE PTR es:[edi],al
  407938:	stos   DWORD PTR es:[edi],eax
  407939:	xlat   BYTE PTR ds:[ebx]
  40793a:	add    ch,cl
  40793c:	jp     0x407999
  40793e:	shl    BYTE PTR [ebx+0x5d],0xa3
  407942:	fsubr  QWORD PTR [ecx+0x6e]
  407945:	inc    eax
  407946:	in     al,dx
  407947:	repnz lock push edi
  40794a:	or     al,0x90
  40794c:	scas   al,BYTE PTR es:[edi]
  40794d:	mov    edx,0x44103530
  407952:	mov    BYTE PTR [edx-0x63],bh
  407955:	mov    eax,esi
  407957:	dec    ebx
  407958:	push   ss
  407959:	cmp    esp,DWORD PTR [edx]
  40795b:	cmp    eax,DWORD PTR [esi-0x66]
  40795e:	xchg   ebp,eax
  40795f:	inc    ebp
  407960:	push   0xffffffbb
  407962:	dec    ebx
  407963:	xor    al,0x11
  407965:	or     cl,ah
  407967:	iret   
  407968:	inc    ecx
  407969:	ds popa 
  40796b:	sbb    BYTE PTR [ecx+0x7d],dh
  40796e:	mov    DWORD PTR [edx+ebp*8-0x37],ecx
  407972:	inc    esp
  407973:	lahf   
  407974:	cmp    al,0xb
  407976:	mov    BYTE PTR [edx],cl
  407978:	(bad)  
  407979:	fiadd  DWORD PTR [eax+0x730f2730]
  40797f:	out    dx,al
  407980:	pop    esi
  407981:	test   bl,ah
  407983:	test   BYTE PTR [ebp-0x2db8a6b2],0x83
  40798a:	rcl    bl,1
  40798c:	push   ecx
  40798d:	cmp    DWORD PTR [edi+eiz*2-0x5b],0xc4a92f45
  407995:	mov    ecx,0x1c8e64a4
  40799a:	and    ch,bh
  40799c:	push   es
  40799d:	push   ebp
  40799e:	add    esp,DWORD PTR [ebp-0xf]
  4079a1:	jnp    0x4079d6
  4079a3:	cmp    ah,BYTE PTR [edi+esi*8-0x31]
  4079a7:	jge    0x407a02
  4079a9:	mov    esp,0x464686a8
  4079ae:	retf   
  4079af:	xor    al,0x39
  4079b1:	mov    edx,0x6218388f
  4079b6:	sar    DWORD PTR [eax-0xdadf7aa],0xce
  4079bd:	in     eax,0xd7
  4079bf:	daa    
  4079c0:	lock and edi,DWORD PTR [esi]
  4079c3:	sub    ebp,ecx
  4079c5:	xor    DWORD PTR [edi-0x7b],edi
  4079c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079c9:	cld    
  4079ca:	cmp    eax,eax
  4079cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079cd:	(bad)  
  4079ce:	push   edi
  4079cf:	(bad)  
  4079d0:	sar    DWORD PTR [eax+eiz*4-0x46564477],1
  4079d7:	iret   
  4079d8:	idiv   DWORD PTR [ecx+edx*2]
  4079db:	mov    dl,0x8b
  4079dd:	(bad)  
  4079de:	fimul  WORD PTR [ebx+ebx*2-0x52]
  4079e2:	je     0x407a23
  4079e4:	in     eax,dx
  4079e5:	mov    al,0x1a
  4079e7:	pop    ds
  4079e8:	loopne 0x407a28
  4079ea:	jne    0x407a1d
  4079ec:	adc    eax,0x35061926
  4079f1:	jns    0x4079d1
  4079f3:	xchg   DWORD PTR [ebx],eax
  4079f5:	cmp    al,0x16
  4079f7:	pushf  
  4079f8:	pop    ebx
  4079f9:	xchg   ebp,eax
  4079fa:	fstp   TBYTE PTR [edi+0x197d1a1]
  407a00:	icebp  
  407a01:	add    ecx,DWORD PTR [ecx]
  407a03:	sbb    DWORD PTR ds:0x2a08fea5,esp
  407a09:	xlat   BYTE PTR ds:[ebx]
  407a0a:	in     al,0x4a
  407a0c:	jecxz  0x4079ed
  407a0e:	ret    
  407a0f:	adc    DWORD PTR [ecx+0x7acd1812],ecx
  407a15:	cmp    BYTE PTR [edx-0x772b2bdc],0x97
  407a1c:	test   eax,0x52f7e458
  407a21:	or     ax,cx
  407a24:	jmp    0xcdc6:0xa597671d
  407a2b:	pushf  
  407a2c:	and    al,0xc7
  407a2e:	repz loopne 0x4079b7
  407a31:	and    DWORD PTR [ecx],esi
  407a33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a34:	test   DWORD PTR [ebp+0x46],edx
  407a37:	stc    
  407a38:	aad    0x67
  407a3a:	test   bh,al
  407a3c:	push   ss
  407a3d:	es push edi
  407a3f:	jnp    0x407a01
  407a41:	repnz mov eax,0xf63adec6
  407a47:	sub    eax,0x576e9040
  407a4c:	mov    bh,0x30
  407a4e:	pop    ebp
  407a4f:	or     DWORD PTR ds:0xaa0140b0,0xfffffff9
  407a56:	dec    esp
  407a57:	inc    edx
  407a58:	iret   
  407a59:	lahf   
  407a5a:	loope  0x407a73
  407a5c:	sbb    ch,BYTE PTR [esp+ebp*8]
  407a5f:	push   edi
  407a60:	cldemote BYTE PTR [eax-0x48f7ebf4]
  407a67:	xchg   ebp,eax
  407a68:	jl     0x407aa1
  407a6a:	shr    DWORD PTR [edx+0x333267e],1
  407a70:	icebp  
  407a71:	fcmovb st,st(3)
  407a73:	xor    dh,BYTE PTR [esi+ebp*4-0x7274057f]
  407a7a:	xchg   edi,eax
  407a7b:	into   
  407a7c:	retf   
  407a7d:	daa    
  407a7e:	test   BYTE PTR [esi+0x26],ch
  407a81:	(bad)  
  407a82:	aad    0xd
  407a84:	jae    0x407a1b
  407a86:	pop    ecx
  407a87:	cmp    DWORD PTR [ebx],ebx
  407a89:	lock add BYTE PTR [edi+0x76],al
  407a8d:	ja     0x407a95
  407a8f:	adc    eax,0xfe9ee3f5
  407a94:	sub    DWORD PTR ds:0x64a964e7,0x21
  407a9b:	xor    ecx,edx
  407a9d:	adc    BYTE PTR [ecx-0x647a37bd],dl
  407aa3:	aad    0x98
  407aa5:	xchg   esp,eax
  407aa6:	mov    bh,BYTE PTR [eax-0xc]
  407aa9:	xor    ebp,DWORD PTR [ecx-0x52c0d037]
  407aaf:	push   eax
  407ab0:	adc    esi,DWORD PTR [ebx-0x3c]
  407ab3:	push   ebp
  407ab4:	dec    edx
  407ab5:	mov    WORD PTR [ebp+0x5],cs
  407ab8:	mov    cl,0x7b
  407aba:	cmp    DWORD PTR [ebx-0x2e],ecx
  407abd:	punpcklbw mm0,DWORD PTR [ebx]
  407ac0:	cmp    esp,DWORD PTR [esi]
  407ac2:	pop    ss
  407ac3:	(bad)  
  407ac4:	pushf  
  407ac5:	in     al,dx
  407ac6:	enter  0x4567,0xa0
  407aca:	(bad)
  407acd:	fimul  DWORD PTR [edi+eax*2-0x78]
  407ad1:	cdq    
  407ad2:	jmp    0x49a6:0xbf6059ae
  407ad9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ada:	xchg   edi,eax
  407adb:	mov    ch,0xca
  407add:	add    al,0xfa
  407adf:	cmp    dl,al
  407ae1:	jae    0x407b2d
  407ae3:	xor    eax,0xd601a9d0
  407ae8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ae9:	imul   esi,edx,0x50
  407aec:	push   esi
  407aed:	popf   
  407aee:	adc    edx,DWORD PTR [ebx]
  407af0:	aas    
  407af1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407af2:	(bad)  
  407af3:	mov    ebp,0xa3b9184
  407af8:	popf   
  407af9:	lods   eax,DWORD PTR ds:[esi]
  407afa:	nop
  407afb:	test   eax,0xf133d1f5
  407b00:	test   edi,ebp
  407b02:	jnp    0x407b50
  407b04:	and    BYTE PTR [ebx+edx*4],bh
  407b07:	inc    esi
  407b08:	test   bl,ah
  407b0a:	out    0x1b,eax
  407b0c:	add    eax,0x9838f90d
  407b11:	shl    edx,1
  407b13:	loopne 0x407aa9
  407b15:	gs loopne 0x407b83
  407b18:	stos   DWORD PTR es:[edi],eax
  407b19:	mov    WORD PTR [ecx+0x58],gs
  407b1c:	jle    0x407ab3
  407b1e:	pop    eax
  407b1f:	mov    eax,ds:0x21fa1dff
  407b24:	jl     0x407b04
  407b26:	sub    al,0xae
  407b28:	or     eax,0x4bbfdc41
  407b2d:	xchg   esi,eax
  407b2e:	mov    dl,0x82
  407b30:	lds    eax,FWORD PTR [edi-0x4ef47dcf]
  407b36:	cdq    
  407b37:	adc    eax,0xa916ed9a
  407b3c:	or     DWORD PTR [esi+0x15],esi
  407b3f:	call   FWORD PTR [edi-0x61]
  407b42:	cld    
  407b43:	or     BYTE PTR [edx],bh
  407b45:	imul   ecx,ecx,0xc
  407b48:	mul    edx
  407b4a:	jecxz  0x407b17
  407b4c:	lods   al,BYTE PTR ds:[esi]
  407b4d:	add    BYTE PTR [esi],dh
  407b4f:	jmp    0x92c5:0x5100dd73
  407b56:	test   BYTE PTR [esi],ah
  407b58:	test   BYTE PTR [esi],cl
  407b5a:	pop    ds
  407b5b:	outs   dx,BYTE PTR ds:[esi]
  407b5c:	sti    
  407b5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b5e:	sub    DWORD PTR [edx-0x253bb31c],ecx
  407b64:	adc    al,ah
  407b66:	mov    ah,0x5
  407b68:	xchg   edx,eax
  407b69:	push   cs
  407b6a:	fcmovb st,st(6)
  407b6c:	pop    edi
  407b6d:	mov    esp,0x3df564a7
  407b72:	and    cl,BYTE PTR [ebx+eiz*2-0x2f]
  407b76:	lods   eax,DWORD PTR ds:[esi]
  407b77:	jbe    0x407b8b
  407b79:	(bad)  
  407b7a:	fstp   QWORD PTR ds:[ebx-0x5c8dbef6]
  407b81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b82:	mov    ecx,0x48b7be52
  407b87:	cmp    BYTE PTR [edi],0x20
  407b8a:	push   edx
  407b8b:	xchg   BYTE PTR [eax],dh
  407b8d:	pop    edi
  407b8e:	repz loopne 0x407bf3
  407b91:	loope  0x407bd9
  407b93:	xor    ecx,eax
  407b95:	inc    esp
  407b96:	cli    
  407b97:	add    al,0xe7
  407b99:	es (bad) 
  407b9b:	ficomp WORD PTR [edi-0x79e58cc3]
  407ba1:	adc    ch,bl
  407ba3:	in     eax,0x8c
  407ba5:	sub    eax,0x38f8fa39
  407baa:	je     0x407c1b
  407bac:	dec    ebx
  407bad:	add    bh,dl
  407baf:	push   es
  407bb0:	pusha  
  407bb1:	imul   edx,DWORD PTR [eax],0x91c613fe
  407bb7:	out    dx,al
  407bb8:	pop    eax
  407bb9:	into   
  407bba:	push   edi
  407bbb:	(bad)  
  407bbc:	arpl   WORD PTR [eax+0x242fddac],si
  407bc2:	scas   al,BYTE PTR es:[edi]
  407bc3:	aad    0x7e
  407bc5:	popf   
  407bc6:	pop    ss
  407bc7:	pop    esi
  407bc8:	lock dec ebx
  407bca:	and    eax,DWORD PTR ds:0x2afe5356
  407bd0:	repz mov eax,ds:0x1e41466f
  407bd6:	or     dh,0x93
  407bd9:	push   0x4c356bae
  407bde:	cs adc al,0x9e
  407be1:	test   al,0x7c
  407be3:	or     bl,BYTE PTR [ebx+edi*8+0x14]
  407be7:	cli    
  407be8:	stc    
  407be9:	outs   dx,BYTE PTR ds:[esi]
  407bea:	xchg   esp,eax
  407beb:	and    eax,0x48be4496
  407bf0:	pop    ds
  407bf1:	ret    0xb3a8
  407bf4:	push   ds
  407bf5:	push   eax
  407bf6:	jl     0x407bfd
  407bf8:	add    ebp,DWORD PTR [edx-0x713d733c]
  407bfe:	(bad)  
  407c00:	retf   0x4796
  407c03:	test   DWORD PTR [edi+0x7d],0x522f4e39
  407c0a:	inc    ebx
  407c0b:	dec    esp
  407c0c:	mov    dl,0x51
  407c0e:	xor    cl,BYTE PTR [ebx]
  407c10:	sahf   
  407c11:	inc    edi
  407c12:	xor    DWORD PTR [edx+0x189c5fc9],0x72
  407c19:	xor    BYTE PTR [edx+eax*8],0xb
  407c1d:	mov    DWORD PTR [eax],edi
  407c1f:	xchg   esp,eax
  407c20:	jge    0x407c7b
  407c22:	cmp    al,BYTE PTR [ecx]
  407c24:	fstp   TBYTE PTR [edx+0x617a3942]
  407c2a:	nop
  407c2b:	jge    0x407bfb
  407c2d:	fld    TBYTE PTR [eax*2-0x8d8cef6]
  407c34:	ss enter 0xd7e4,0xd4
  407c39:	push   eax
  407c3a:	pop    ebx
  407c3b:	cs xchg edx,eax
  407c3d:	jno    0x407c7c
  407c3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c40:	js     0x407c19
  407c42:	push   edi
  407c43:	inc    ebp
  407c44:	lock mov dh,0xda
  407c47:	push   edx
  407c48:	das    
  407c49:	retf   0x31b1
  407c4c:	shl    ebx,cl
  407c4e:	ins    BYTE PTR es:[edi],dx
  407c4f:	sub    DWORD PTR [ebx-0x73d10af2],esp
  407c55:	push   esp
  407c56:	cdq    
  407c57:	ins    BYTE PTR es:[edi],dx
  407c58:	les    ebp,FWORD PTR [ecx+0x5e]
  407c5b:	jge    0x407c45
  407c5d:	sub    eax,0xe29a0ed6
  407c62:	outs   dx,DWORD PTR ds:[esi]
  407c63:	mov    edx,0x81bd5de0
  407c68:	push   edx
  407c69:	push   ebx
  407c6a:	scas   al,BYTE PTR es:[edi]
  407c6b:	adc    cl,BYTE PTR [edi]
  407c6d:	daa    
  407c6e:	jmp    0xd42b:0x341f24d
  407c75:	dec    ebp
  407c76:	sub    eax,0x32810329
  407c7b:	ror    edx,0x37
  407c7e:	pop    eax
  407c7f:	pushf  
  407c80:	mov    eax,0xf057cb1
  407c85:	sbb    esp,DWORD PTR [edx-0x5d]
  407c88:	sub    eax,0x204f0cfe
  407c8d:	fimul  DWORD PTR [edi+0x5c]
  407c90:	lds    eax,FWORD PTR [esi]
  407c92:	scas   al,BYTE PTR es:[edi]
  407c93:	loope  0x407c98
  407c95:	add    ch,BYTE PTR [ebp+0x5d]
  407c98:	cmp    eax,0x2e043cbe
  407c9d:	enter  0xf437,0x32
  407ca1:	dec    esp
  407ca2:	sub    cl,BYTE PTR [esi-0x24]
  407ca5:	pop    esp
  407ca6:	dec    ecx
  407ca7:	sub    DWORD PTR [esi+0x5abf26ff],edi
  407cad:	inc    edx
  407cae:	inc    esp
  407caf:	shr    DWORD PTR [eax],0x1a
  407cb2:	push   edx
  407cb3:	push   es
  407cb4:	push   edi
  407cb5:	addr16 pop esp
  407cb7:	fdiv   DWORD PTR [edx-0x3e9d70fb]
  407cbd:	dec    edx
  407cbe:	xor    ecx,DWORD PTR [ecx-0x1b]
  407cc1:	or     DWORD PTR [edi-0x36],0x7915462e
  407cc8:	imul   edx,DWORD PTR [esi+0x10],0xb6c5be37
  407ccf:	jecxz  0x407cc8
  407cd1:	dec    eax
  407cd2:	(bad)  
  407cd3:	(bad)  
  407cd4:	sub    eax,DWORD PTR [ebx+edx*8]
  407cd7:	xchg   esp,eax
  407cd8:	adc    al,0x37
  407cda:	dec    eax
  407cdb:	push   ebx
  407cdc:	mov    ecx,0x9278e4d9
  407ce1:	push   ebp
  407ce2:	mov    al,0x66
  407ce4:	aaa    
  407ce5:	into   
  407ce6:	ja     0x407cdb
  407ce8:	sar    BYTE PTR [edx],0x4a
  407ceb:	mov    WORD PTR [ecx+0x77],cs
  407cee:	call   DWORD PTR [edi+0x57b4342b]
  407cf4:	into   
  407cf5:	xlat   BYTE PTR ds:[ebx]
  407cf6:	ror    DWORD PTR [eax+0x53],cl
  407cf9:	sub    DWORD PTR [ebp+edx*8-0x1d406c77],edx
  407d00:	ror    BYTE PTR [esi+0xf],cl
  407d03:	or     al,0x80
  407d05:	xchg   edx,eax
  407d06:	dec    esp
  407d07:	das    
  407d08:	aas    
  407d09:	loope  0x407cde
  407d0b:	pop    ebx
  407d0c:	aas    
  407d0d:	jmp    0x407d38
  407d0f:	lahf   
  407d10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d11:	mov    ebp,0x653ee68e
  407d16:	sbb    al,0x9a
  407d18:	sub    al,0x73
  407d1a:	adc    dh,BYTE PTR [edi-0x5]
  407d1d:	stc    
  407d1e:	pusha  
  407d1f:	repz clc 
  407d21:	adc    edi,edi
  407d23:	jmp    0x36ac:0x95769d14
  407d2a:	mov    esi,0x8f61dca5
  407d2f:	or     al,0x25
  407d31:	and    eax,DWORD PTR fs:[eax-0x7fece41]
  407d38:	sbb    DWORD PTR [esi+edi*4-0x5b],edx
  407d3c:	jp     0x407cce
  407d3e:	push   ds
  407d3f:	sub    ah,BYTE PTR [esp+ecx*4-0x12]
  407d43:	in     al,dx
  407d44:	cdq    
  407d45:	data16 loopne 0x407d5b
  407d48:	add    DWORD PTR [esi],ebp
  407d4a:	cld    
  407d4b:	inc    edi
  407d4c:	enter  0x11a7,0x3c
  407d50:	clc    
  407d51:	adc    DWORD PTR ds:0x33ca362e,eax
  407d57:	or     al,0xd4
  407d59:	mul    ebx
  407d5b:	(bad)  
  407d5d:	sbb    al,0xb
  407d5f:	scas   al,BYTE PTR es:[edi]
  407d60:	jb     0x407d0f
  407d62:	fdiv   DWORD PTR [eax+0x2549dcac]
  407d68:	jmp    0x7213:0x6eaa899
  407d6f:	xor    al,0xa0
  407d71:	loope  0x407d45
  407d73:	lahf   
  407d74:	and    eax,0x5f5cd177
  407d79:	or     al,0xd6
  407d7b:	sbb    bl,BYTE PTR [esi-0x7f47973e]
  407d81:	pop    esi
  407d82:	cmc    
  407d83:	and    eax,0x536954a7
  407d88:	cli    
  407d89:	pop    ecx
  407d8a:	pop    ss
  407d8b:	in     eax,dx
  407d8c:	push   esi
  407d8d:	xor    ch,BYTE PTR [ecx]
  407d8f:	jmp    FWORD PTR [edi+0x1f]
  407d92:	add    al,0xbe
  407d94:	mov    edi,0x96046854
  407d99:	retf   
  407d9a:	dec    esi
  407d9b:	rcr    DWORD PTR [ebx+0x34dccff8],0x5d
  407da2:	sbb    ebp,DWORD PTR [edx+0x33be3450]
  407da8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407da9:	test   dl,ah
  407dab:	inc    ebx
  407dac:	(bad)  
  407dad:	cmp    bl,dl
  407daf:	fidiv  DWORD PTR [edi+0x3a9790fd]
  407db5:	dec    ebp
  407db6:	and    bh,cl
  407db8:	dec    eax
  407db9:	add    al,0x53
  407dbb:	adc    dl,BYTE PTR [edi]
  407dbd:	sbb    eax,0xe2437287
  407dc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dc3:	in     eax,dx
  407dc4:	xchg   esp,eax
  407dc5:	jmp    0x8833:0x9542f1e6
  407dcc:	and    ebx,DWORD PTR [eax+ebx*8]
  407dcf:	sahf   
  407dd0:	loope  0x407df7
  407dd2:	retf   0xe968
  407dd5:	(bad)  
  407dd7:	cdq    
  407dd8:	sub    ebp,DWORD PTR [ebp-0x49953381]
  407dde:	repnz pop esp
  407de0:	lods   al,BYTE PTR ds:[esi]
  407de1:	pop    es
  407de2:	inc    ecx
  407de3:	mov    dh,0x42
  407de5:	xchg   edi,eax
  407de6:	xchg   edi,eax
  407de7:	jge    0x407d7f
  407de9:	test   al,0xdd
  407deb:	cdq    
  407dec:	fmul   DWORD PTR [eax-0x11]
  407def:	ins    DWORD PTR es:[edi],dx
  407df0:	jge    0x407dac
  407df2:	sti    
  407df3:	jae    0x407d79
  407df5:	pop    ebp
  407df6:	or     al,0xbb
  407df8:	scas   al,BYTE PTR es:[edi]
  407df9:	repz add DWORD PTR ds:0xc2936bf4,ebp
  407e00:	inc    edx
  407e01:	push   0xffffff8f
  407e03:	out    0x3c,al
  407e05:	jl     0x407e38
  407e07:	mov    cl,0xac
  407e09:	and    DWORD PTR [esi-0x7c8fc1b9],edx
  407e0f:	mov    esp,0x6d28f1d7
  407e14:	or     dl,BYTE PTR [edx+ecx*2-0x1e5841a0]
  407e1b:	jecxz  0x407e37
  407e1d:	inc    ecx
  407e1e:	(bad)  
  407e1f:	push   esi
  407e20:	push   ss
  407e21:	sbb    DWORD PTR [ebp+0x13],edx
  407e24:	pop    ebp
  407e25:	fcmovne st,st(6)
  407e27:	sub    ebp,0x4efeef0d
  407e2d:	scas   al,BYTE PTR es:[edi]
  407e2e:	inc    ebp
  407e2f:	adc    BYTE PTR [edi+edi*4],ch
  407e32:	or     ebp,DWORD PTR [esi+0x2d]
  407e35:	test   BYTE PTR [edx-0xc],dl
  407e38:	cld    
  407e39:	jge    0x407e66
  407e3b:	mov    eax,0xe45c732
  407e40:	xchg   esi,eax
  407e41:	aam    0x15
  407e43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e44:	sti    
  407e45:	push   cs
  407e46:	int3   
  407e47:	dec    edx
  407e48:	lds    ebp,FWORD PTR [ebx+0x51]
  407e4b:	mov    WORD PTR [ebx-0x78],?
  407e4e:	stos   DWORD PTR es:[edi],eax
  407e4f:	(bad)  
  407e50:	stos   BYTE PTR es:[edi],al
  407e51:	xor    DWORD PTR [eax+0x7b],esi
  407e54:	daa    
  407e55:	pop    edi
  407e56:	xchg   ebp,eax
  407e57:	xor    esp,DWORD PTR [esi-0x80]
  407e5a:	mov    ah,0xa0
  407e5c:	loopne 0x407de4
  407e5e:	fisubr DWORD PTR [ecx-0x2960169a]
  407e64:	xor    eax,0x2e7f31a0
  407e69:	xchg   esp,eax
  407e6a:	dec    edx
  407e6b:	push   0xffffff85
  407e6d:	sub    ecx,DWORD PTR [ecx]
  407e6f:	xchg   esi,eax
  407e70:	(bad)  
  407e71:	out    0x91,eax
  407e73:	rcl    BYTE PTR [esi-0x55],1
  407e76:	ror    DWORD PTR [ecx-0x2436fa7f],0x34
  407e7d:	test   BYTE PTR [ebp-0x3aa654ed],0xf4
  407e84:	mov    dl,0x95
  407e86:	(bad)  
  407e87:	call   0x15e87e77
  407e8c:	cdq    
  407e8d:	inc    edx
  407e8e:	(bad)  [ebp-0x1]
  407e91:	in     eax,dx
  407e92:	aam    0xfe
  407e94:	mov    dh,0x97
  407e96:	in     al,0x35
  407e98:	pop    edi
  407e99:	sbb    bh,dh
  407e9b:	fnstenv [ebp+edi*8-0x1cfb726b]
  407ea2:	adc    eax,ecx
  407ea4:	mov    BYTE PTR [ebx-0x5b29da39],ch
  407eaa:	or     DWORD PTR [esp+edi*2],ebp
  407ead:	push   cs
  407eae:	dec    eax
  407eaf:	ror    DWORD PTR [ebx-0x5a],cl
  407eb2:	aam    0x95
  407eb4:	sub    cl,ah
  407eb6:	adc    ah,BYTE PTR [ecx]
  407eb8:	pop    esp
  407eb9:	shr    dh,1
  407ebb:	gs inc ecx
  407ebd:	das    
  407ebe:	sub    eax,0xa0de2613
  407ec3:	mov    al,ds:0x5026ce04
  407ec8:	sub    BYTE PTR [ebp-0x233ac8ba],ch
  407ece:	scas   al,BYTE PTR es:[edi]
  407ecf:	fbstp  TBYTE PTR [edx+ecx*1+0x1b]
  407ed3:	bound  esi,QWORD PTR [edi+0x3b]
  407ed6:	inc    ecx
  407ed7:	dec    eax
  407ed8:	mov    ds:0xde93dbee,eax
  407edd:	cmp    ah,BYTE PTR [ebx+ebx*8]
  407ee0:	mov    bl,0x19
  407ee2:	jl     0x407e70
  407ee4:	mov    WORD PTR [ebp+esi*4+0x29894676],?
  407eeb:	cld    
  407eec:	mov    ebx,0x18df3eb6
  407ef1:	xlat   BYTE PTR ds:[ebx]
  407ef2:	xchg   esp,eax
  407ef3:	in     eax,dx
  407ef4:	xor    edx,DWORD PTR [edi+0x3b372258]
  407efa:	scas   eax,DWORD PTR es:[edi]
  407efb:	mov    ?,ebx
  407efd:	mov    dl,0x54
  407eff:	push   ebx
  407f00:	jle    0x407f6e
  407f02:	mov    bh,0xd
  407f04:	ret    0x9188
  407f07:	retf   
  407f08:	xor    al,BYTE PTR [eax]
  407f0a:	dec    esp
  407f0b:	mov    cl,0xe0
  407f0d:	out    dx,eax
  407f0e:	je     0x407f69
  407f10:	rcl    BYTE PTR [ebx+0x30417ca5],cl
  407f16:	and    eax,0x1c8bbb26
  407f1b:	sub    cl,0xf4
  407f1e:	call   0x8e11:0x388253bf
  407f25:	add    bh,0xd1
  407f28:	rcl    esp,cl
  407f2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f2b:	out    dx,al
  407f2c:	test   BYTE PTR [edi+0x5252a4d8],bh
  407f32:	ds aam 0x95
  407f35:	stc    
  407f36:	jbe    0x407f43
  407f38:	and    edi,eax
  407f3a:	cmp    eax,0x51fd1c8
  407f3f:	lahf   
  407f40:	cmp    eax,0x1adeffd
  407f45:	sbb    eax,0xfbac2422
  407f4a:	loop   0x407f28
  407f4c:	jno    0x407f58
  407f4e:	ss addr16 push esi
  407f51:	std    
  407f52:	(bad)  
  407f53:	mov    WORD PTR [edx+eax*2-0x122afcf0],ss
  407f5a:	sti    
  407f5b:	sti    
  407f5c:	xor    DWORD PTR [eax-0x53],0x74e08880
  407f63:	mov    ecx,0x91ebae62
  407f68:	aas    
  407f69:	jge    0x407f6a
  407f6b:	cmp    dl,BYTE PTR [ebx-0x2]
  407f6e:	ror    DWORD PTR [eax+0x2],cl
  407f71:	cwde   
  407f72:	clc    
  407f73:	and    eax,0x5228ee1e
  407f78:	ror    ebx,0x3c
  407f7b:	ins    DWORD PTR es:[edi],dx
  407f7c:	test   BYTE PTR [esi+0x47],0xba
  407f80:	mov    esi,fs
  407f82:	std    
  407f83:	dec    edi
  407f84:	inc    ecx
  407f85:	or     al,0xf9
  407f87:	sbb    edi,DWORD PTR ds:0xb21a3626
  407f8d:	xor    DWORD PTR [ebp+0x14],esi
  407f90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f91:	cmp    DWORD PTR [edx+0x35],esi
  407f94:	inc    edi
  407f95:	daa    
  407f96:	daa    
  407f97:	jbe    0x407ff7
  407f99:	pusha  
  407f9a:	mov    cl,0xc
  407f9c:	repz or BYTE PTR [eax+0x15],dh
  407fa0:	xor    DWORD PTR [ecx+0x5c],esi
  407fa3:	stc    
  407fa4:	test   DWORD PTR [ebx+0x6a],eax
  407fa7:	(bad)  
  407fa8:	sub    edx,ebx
  407faa:	lock fs push 0xffffffce
  407fae:	in     eax,0x43
  407fb0:	push   es
  407fb1:	cmc    
  407fb2:	inc    eax
  407fb3:	mov    bh,0xf9
  407fb5:	pushf  
  407fb6:	loop   0x407f5b
  407fb8:	jmp    0x17fe:0x5a71a8ba
  407fbf:	pop    esi
  407fc0:	or     DWORD PTR [edx],0xeaff6ddd
  407fc6:	(bad)
  407fc9:	dec    edx
  407fca:	iret   
  407fcb:	rcl    BYTE PTR [ebx+edx*4],0x64
  407fcf:	cmp    dl,BYTE PTR [esi+0x5fd94584]
  407fd5:	call   0xd574dbf8
  407fda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fdb:	or     eax,0x69b7678
  407fe0:	mov    edi,0xd6345112
  407fe5:	fwait
  407fe6:	jmp    0x7228:0xcd963b88
  407fed:	or     BYTE PTR [eax+0xd],al
  407ff0:	jno    0x407f82
  407ff2:	fidiv  WORD PTR [ebp-0x6f]
  407ff5:	je     0x40805a
  407ff7:	repz push 0x1b
  407ffa:	or     eax,0x9aec4124
  407fff:	and    dl,dl
  408001:	push   esi
  408002:	jge    0x408073
  408004:	mov    dl,BYTE PTR [edi+0x1e]
  408007:	push   ebx
  408008:	dec    edx
  408009:	pop    esp
  40800a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40800b:	sub    cl,ch
  40800d:	push   ds
  40800e:	mov    edi,0x814397e7
  408013:	mov    ebp,0x87861407
  408018:	xchg   ecx,ebp
  40801a:	loopne 0x407fee
  40801c:	pop    ebp
  40801d:	xor    eax,0x9518cec9
  408022:	je     0x40809a
  408024:	test   DWORD PTR [ebp-0x1b46b572],edi
  40802a:	and    eax,0xc2948c74
  40802f:	mov    edi,DWORD PTR [esi-0x15]
  408032:	(bad)  
  408033:	pusha  
  408034:	pop    ds
  408035:	push   ebp
  408036:	sbb    DWORD PTR [eax-0x6ff3edc5],ebp
  40803c:	dec    ebx
  40803d:	cwde   
  40803e:	ret    0x8b4d
  408041:	hlt    
  408042:	push   0x4b54e59e
  408047:	push   ds
  408048:	or     eax,0xa3ef53a0
  40804d:	xchg   esi,eax
  40804e:	pop    ds
  40804f:	mov    ss,WORD PTR [edi+ebp*4-0x15976c9a]
  408056:	or     al,0x42
  408058:	test   ch,bl
  40805a:	enter  0xaf69,0xf2
  40805e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40805f:	lods   eax,DWORD PTR ds:[esi]
  408060:	icebp  
  408061:	xor    al,0x5a
  408063:	inc    eax
  408064:	dec    ebx
  408065:	or     al,0x8e
  408067:	jmp    0x9df16a5b
  40806c:	out    dx,eax
  40806d:	fs pop esp
  40806f:	(bad)  
  408070:	or     DWORD PTR [edx-0x4c],edi
  408073:	rcl    BYTE PTR [ebx+edi*8-0x52],cl
  408077:	bound  esp,QWORD PTR cs:[eax+0x76]
  40807b:	out    0xd3,al
  40807d:	fst    QWORD PTR ds:0xfe0d12a4
  408083:	cmp    al,0xb6
  408085:	ds aam 0x9b
  408088:	sub    ah,dh
  40808a:	rcr    DWORD PTR [ecx],1
  40808c:	mov    edi,0xbfe83b55
  408091:	mov    edi,0x9f12b308
  408096:	test   DWORD PTR [eax],0xb070578c
  40809c:	dec    edi
  40809d:	pop    esp
  40809e:	add    bh,BYTE PTR [esi+0x1e]
  4080a1:	sub    DWORD PTR [ebx+0x57],esp
  4080a4:	sub    DWORD PTR [edx+0x76],eax
  4080a7:	sub    DWORD PTR [ebp+0x3957779c],0x296dae48
  4080b1:	push   0xffffffb0
  4080b3:	sub    eax,0x66ba48c9
  4080b8:	or     eax,edi
  4080ba:	adc    esi,edx
  4080bc:	jb     0x40812a
  4080be:	adc    BYTE PTR [ebx-0x5f],bh
  4080c1:	cmc    
  4080c2:	int3   
  4080c3:	data16 (bad) 
  4080c5:	xor    ch,BYTE PTR [esi+edx*8+0x2b5e544a]
  4080cc:	xor    bh,al
  4080ce:	mov    DWORD PTR [ebx],edi
  4080d0:	icebp  
  4080d1:	push   esi
  4080d2:	jb     0x408113
  4080d4:	or     ebx,DWORD PTR [eax]
  4080d6:	data16 stos BYTE PTR es:[edi],al
  4080d8:	sub    al,0x18
  4080da:	retf   
  4080db:	out    0xf9,eax
  4080dd:	sbb    ah,ch
  4080df:	jmp    0xb0558e9c
  4080e4:	jae    0x4080df
  4080e6:	jns    0x408113
  4080e8:	mov    ecx,0x2c29f520
  4080ed:	les    ecx,FWORD PTR [ebx+0x43]
  4080f0:	cmp    bh,BYTE PTR [edi]
  4080f2:	sub    BYTE PTR [ecx-0xc0b6cbd],dl
  4080f8:	push   ebx
  4080f9:	xor    edx,DWORD PTR [ebx+0x5f]
  4080fc:	push   esp
  4080fd:	es scas al,BYTE PTR es:[edi]
  4080ff:	sti    
  408100:	je     0x408172
  408102:	jecxz  0x4080fa
  408104:	sub    al,0x92
  408106:	xor    bl,bl
  408108:	or     al,0xbc
  40810a:	pop    eax
  40810b:	fs (bad) 
  40810d:	and    eax,0xa3a78f26
  408112:	xchg   edi,eax
  408113:	retf   0x914c
  408116:	loop   0x40815e
  408118:	fs pop ebx
  40811a:	jns    0x408162
  40811c:	fiadd  DWORD PTR [esi-0x37]
  40811f:	fwait
  408120:	sbb    cl,BYTE PTR [ecx-0x6c]
  408123:	mov    cs,WORD PTR [ebp-0x6f43641c]
  408129:	push   ebx
  40812a:	inc    esi
  40812b:	mov    dh,0x21
  40812d:	and    al,0x8b
  40812f:	and    al,0x62
  408131:	sbb    al,0xe1
  408133:	fistp  QWORD PTR ds:0x65c76a6f
  408139:	inc    ecx
  40813a:	daa    
  40813b:	cld    
  40813c:	aam    0x44
  40813e:	xor    ebx,DWORD PTR [edx+0x50d5ebd9]
  408144:	xor    BYTE PTR [eax+ebx*2-0x49ed08b],bl
  40814b:	scas   al,BYTE PTR es:[edi]
  40814c:	mov    bl,0x29
  40814e:	in     al,dx
  40814f:	sbb    BYTE PTR [ebx+0x3a],dl
  408152:	call   0xa4a3733c
  408157:	mov    esp,0x50ba729c
  40815c:	rcr    bl,0x7f
  40815f:	adc    cl,BYTE PTR [ecx-0x1d924653]
  408165:	nop
  408166:	or     BYTE PTR [ecx-0x473db158],cl
  40816c:	add    al,0x98
  40816e:	mov    ?,WORD PTR [edi+0xe]
  408171:	add    eax,0xe29a4841
  408176:	mov    WORD PTR [eax],?
  408178:	sbb    eax,0x6a7fd5cc
  40817d:	push   esi
  40817e:	adc    eax,0xc7cd1b44
  408183:	jnp    0x408180
  408185:	pop    ds
  408186:	sahf   
  408187:	rol    BYTE PTR [ebp+0x77],0x68
  40818b:	fisub  DWORD PTR [edx-0x35]
  40818e:	push   0x243b2ab2
  408193:	push   edx
  408194:	xchg   edx,edi
  408196:	fcomp  QWORD PTR [edx+0x6e]
  408199:	shl    edi,1
  40819b:	cwde   
  40819c:	sahf   
  40819d:	cdq    
  40819e:	jnp    0x408207
  4081a0:	xchg   esi,eax
  4081a1:	jmp    0x408196
  4081a3:	push   es
  4081a4:	(bad)  
  4081a5:	test   eax,0x37df7b5f
  4081aa:	mov    ds:0xf77500ff,al
  4081af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081b0:	sti    
  4081b1:	mov    dl,0x1
  4081b3:	and    BYTE PTR [edi+0x5588f743],bl
  4081b9:	sbb    al,0xe
  4081bb:	and    ch,BYTE PTR [ecx-0x2b]
  4081be:	mov    dh,0xc3
  4081c0:	loope  0x4081d3
  4081c2:	test   DWORD PTR [esi+0x3f015578],eax
  4081c8:	jmp    0x11128ae
  4081cd:	xlat   BYTE PTR ds:[ebx]
  4081ce:	sbb    eax,0x379391b1
  4081d3:	cld    
  4081d4:	enter  0x9530,0x16
  4081d8:	call   0x7d802319
  4081dd:	ret    0x8df5
  4081e0:	jl     0x408238
  4081e2:	daa    
  4081e3:	or     eax,0xf6b7f5a4
  4081e8:	repz add esi,DWORD PTR [eax+0x57]
  4081ec:	fisttp QWORD PTR ds:0xbd0d11ae
  4081f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081f3:	jmp    0x8c5d:0xd636962a
  4081fa:	mov    bh,0xaa
  4081fc:	push   0x2f58f022
  408201:	call   0x1dd9:0x4066d498
  408208:	lds    ebp,FWORD PTR gs:[esi-0x26]
  40820c:	jne    0x4081af
  40820e:	loopne 0x40827a
  408210:	add    edx,esi
  408212:	mov    eax,ds:0xbb6968de
  408217:	ficom  DWORD PTR [ebp+0x687243f7]
  40821d:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40821f:	xchg   esp,eax
  408220:	mov    DWORD PTR [eax],eax
  408222:	dec    esi
  408223:	cmp    ebx,DWORD PTR [esi-0x2eb81738]
  408229:	adc    BYTE PTR [edi+0x68],dl
  40822c:	or     al,0x8b
  40822e:	daa    
  40822f:	sub    eax,0xab11d7bd
  408234:	ds jnp 0x408292
  408237:	mov    cl,0x19
  408239:	psrld  mm3,QWORD PTR [esi+0x21]
  40823d:	push   0x61b27613
  408242:	fist   WORD PTR [edi-0x59588ca3]
  408248:	ja     0x408232
  40824a:	outs   dx,BYTE PTR ds:[esi]
  40824b:	int3   
  40824c:	(bad)  
  40824e:	loopne 0x40823d
  408250:	and    al,BYTE PTR [eax]
  408252:	mov    al,0xcd
  408254:	shl    dl,cl
  408256:	(bad)  
  408257:	dec    esi
  408258:	in     eax,0xe8
  40825a:	retf   
  40825b:	fild   WORD PTR [esi]
  40825d:	jbe    0x4082d0
  40825f:	jae    0x40825e
  408261:	(bad)  
  408262:	out    dx,al
  408263:	cmp    eax,0xd1f1ce98
  408268:	(bad)  
  408269:	mov    cl,0xe5
  40826b:	rol    BYTE PTR [ecx+ecx*2],cl
  40826e:	shr    BYTE PTR [edx],cl
  408270:	test   BYTE PTR [edx+esi*8+0xc],0x87
  408275:	(bad)  
  408276:	retf   0x7c6d
  408279:	fidivr WORD PTR [edi+ecx*8+0xe]
  40827d:	leave  
  40827e:	cmp    eax,0x8307a9b8
  408283:	xchg   ebp,eax
  408284:	lahf   
  408285:	cmp    eax,0x6f6dca1b
  40828a:	push   edi
  40828b:	mov    al,0xd9
  40828d:	enter  0xedb7,0xd0
  408291:	adc    esi,DWORD PTR [ebp-0xf]
  408294:	xchg   edi,eax
  408295:	scas   al,BYTE PTR es:[edi]
  408296:	(bad)  
  408297:	dec    esi
  408298:	jg     0x4082f2
  40829a:	push   es
  40829b:	add    eax,0x142060e5
  4082a0:	add    ch,cl
  4082a2:	xor    BYTE PTR [esi-0x3e],ah
  4082a5:	xchg   cl,ah
  4082a7:	adc    DWORD PTR [edx-0x2ef6a8d7],edx
  4082ad:	dec    ebp
  4082ae:	mov    bl,0x2f
  4082b0:	sahf   
  4082b1:	mov    ds:0x184730ee,al
  4082b6:	adc    al,0x80
  4082b8:	xchg   esi,eax
  4082b9:	adc    dl,0xe9
  4082bc:	inc    edx
  4082bd:	and    DWORD PTR [edi],esi
  4082bf:	jp     0x408259
  4082c1:	in     al,0xc8
  4082c3:	arpl   WORD PTR [esi],ax
  4082c5:	pop    eax
  4082c6:	stos   BYTE PTR es:[edi],al
  4082c7:	ss gs repz xchg edx,eax
  4082cb:	or     al,0x3f
  4082cd:	lea    edi,ds:0x6b60a092
  4082d3:	pop    eax
  4082d4:	lds    esp,FWORD PTR [ebp+0x1e6908fa]
  4082da:	fwait
  4082db:	mov    BYTE PTR [eax-0x72],cl
  4082de:	mov    al,0xea
  4082e0:	add    DWORD PTR [edx-0x380706fe],ecx
  4082e6:	xchg   DWORD PTR [eax-0x7d],ebx
  4082e9:	push   esi
  4082ea:	sbb    eax,0x9b129c2c
  4082ef:	sbb    DWORD PTR [esi-0x7e36eea8],esi
  4082f5:	fxtract 
  4082f7:	rcl    ecx,1
  4082f9:	push   ecx
  4082fa:	add    DWORD PTR [edi+0x6a],ebp
  4082fd:	xchg   ebp,eax
  4082fe:	dec    edi
  4082ff:	and    ch,cl
  408301:	test   al,0x97
  408303:	xchg   edi,eax
  408304:	lahf   
  408305:	push   esp
  408306:	cs hlt 
  408308:	pop    eax
  408309:	rol    DWORD PTR [eax],1
  40830b:	int3   
  40830c:	cmp    eax,0xdb7967a3
  408311:	int    0xb9
  408313:	sahf   
  408314:	aas    
  408315:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408316:	mov    eax,ds:0x97f6fa48
  40831b:	push   ebp
  40831c:	jns    0x408357
  40831e:	mov    eax,ds:0xfe2b87b8
  408323:	cmp    BYTE PTR [edx+eiz*2],bh
  408326:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408327:	sbb    ah,BYTE PTR [edx-0x34]
  40832a:	in     al,dx
  40832b:	ret    
  40832c:	neg    DWORD PTR ds:0x64b86dfc
  408332:	lahf   
  408333:	test   DWORD PTR [ebx],0x3f38b4de
  408339:	into   
  40833a:	cdq    
  40833b:	dec    ebp
  40833c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40833d:	shl    BYTE PTR [esi],0x7
  408340:	push   ds
  408341:	fwait
  408342:	std    
  408343:	punpckhdq mm1,QWORD PTR ds:0xbca5e952
  40834a:	push   eax
  40834b:	out    0x52,eax
  40834d:	add    eax,0x64c78c66
  408352:	adc    al,0xa1
  408354:	lods   eax,DWORD PTR ds:[esi]
  408355:	ss popf 
  408357:	clc    
  408358:	xlat   BYTE PTR ds:[ebx]
  408359:	add    bl,BYTE PTR [edi+0x5228e3d8]
  40835f:	mov    esi,DWORD PTR [eax-0x77]
  408362:	out    dx,eax
  408363:	lods   eax,DWORD PTR ds:[esi]
  408364:	sbb    dl,dl
  408366:	or     al,0x32
  408368:	test   BYTE PTR [ecx+0x370abca3],cl
  40836e:	pusha  
  40836f:	test   eax,0xe1b8a2ad
  408374:	jae    0x40834a
  408376:	les    ebx,FWORD PTR [edi]
  408378:	inc    edi
  408379:	inc    ebp
  40837a:	dec    ebp
  40837b:	xor    eax,0x3b9249bd
  408380:	jno    0x408399
  408382:	pop    ecx
  408383:	out    0x76,eax
  408385:	je     0x408377
  408387:	pop    ebx
  408388:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408389:	ja     0x408337
  40838b:	test   BYTE PTR ss:[edx],ah
  40838e:	stos   DWORD PTR es:[edi],eax
  40838f:	jg     0x408315
  408391:	nop
  408392:	je     0x408400
  408394:	mov    gs,WORD PTR [esp+eax*1-0x76f0f06b]
  40839b:	call   0x36a9:0x1d97456b
  4083a2:	ins    DWORD PTR es:[edi],dx
  4083a3:	and    BYTE PTR [ebp-0x56],cl
  4083a6:	mov    edx,0xa4156854
  4083ab:	sti    
  4083ac:	lea    eax,[eax-0x6bf17beb]
  4083b2:	bound  edx,QWORD PTR [esi*2+0x7c6e50ff]
  4083b9:	push   esp
  4083ba:	mov    bh,0x38
  4083bc:	aad    0xf7
  4083be:	das    
  4083bf:	imul   edi,DWORD PTR [edx-0x72183f8b],0x1a
  4083c6:	faddp  st(7),st
  4083c8:	pop    es
  4083c9:	ss and eax,0xfb43fc2
  4083cf:	xchg   edx,eax
  4083d0:	or     ah,BYTE PTR [eax+0x32]
  4083d3:	mov    cs,WORD PTR [eax]
  4083d5:	mov    ah,BYTE PTR [ebp+0x69919262]
  4083db:	(bad)  
  4083dc:	sub    esi,DWORD PTR [ebx-0x1c]
  4083df:	jns    0x408405
  4083e1:	lods   eax,DWORD PTR ds:[esi]
  4083e2:	push   es
  4083e3:	push   ebp
  4083e4:	jg     0x4083ad
  4083e6:	push   edx
  4083e7:	add    BYTE PTR [esi-0x42],0xf
  4083eb:	add    eax,0x3275e2fd
  4083f0:	dec    eax
  4083f1:	pop    esi
  4083f2:	loopne 0x408423
  4083f4:	mov    ch,0x80
  4083f6:	test   DWORD PTR [esp+eax*4-0x570fa35d],0x7155b1b0
  408401:	stos   BYTE PTR es:[edi],al
  408402:	repnz dec edi
  408404:	sub    eax,0xcfd6e0e3
  408409:	adc    eax,0x8af8558b
  40840e:	add    al,0x10
  408410:	mov    BYTE PTR [ebp-0x1],al
  408413:	mov    eax,DWORD PTR [ebp-0x30]
  408416:	jmp    0x40a7b9
  40841b:	and    al,0x5f
  40841d:	not    BYTE PTR [ebp+eax*4+0x62cf048b]
  408424:	xchg   ecx,eax
  408425:	dec    edi
  408426:	in     eax,dx
  408427:	mov    al,0xb1
  408429:	push   ss
  40842a:	ds call 0xfcbafe40
  408430:	pop    edi
  408431:	jp     0x4084ad
  408433:	ds and dl,al
  408436:	(bad)  
  408437:	iret   
  408438:	loopne 0x408404
  40843a:	sqrtps xmm5,XMMWORD PTR [eax]
  40843d:	mov    ecx,0x1c3f8027
  408442:	cmp    eax,0x17dc72df
  408447:	xchg   esp,eax
  408448:	popa   
  408449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40844a:	fmul   DWORD PTR ds:0xfff5758a
  408450:	cs sahf 
  408452:	sahf   
  408453:	mov    ebp,0xe69debdd
  408458:	and    al,0xa9
  40845a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40845b:	mov    ah,0xf
  40845d:	inc    eax
  40845e:	pop    ecx
  40845f:	daa    
  408460:	daa    
  408461:	stos   DWORD PTR es:[edi],eax
  408462:	imul   edx,DWORD PTR [edi],0x79b42a0a
  408468:	call   0xa64d9dca
  40846d:	inc    edi
  40846e:	bndstx [ecx+0x77a7a938],bnd2
  408475:	and    eax,DWORD PTR [edx+0x37cbeb32]
  40847b:	mov    esp,0xe193cff1
  408480:	fyl2xp1 
  408482:	cmp    al,0xa3
  408484:	inc    ebp
  408485:	mov    gs,WORD PTR [ecx+0x53e88b2a]
  40848b:	fnstsw WORD PTR [ecx+eiz*8+0x5311af3d]
  408492:	xlat   BYTE PTR ds:[ebx]
  408493:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408494:	imul   ebp,edx,0xffffffbe
  408497:	(bad)  
  408498:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408499:	sbb    al,0x93
  40849b:	xchg   esp,eax
  40849c:	jmp    0x40847e
  40849e:	xchg   DWORD PTR [ebp-0x9785bc9],ecx
  4084a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084a5:	jmp    0x3e17ae4d
  4084aa:	imul   ebx,DWORD PTR [ebp+0x67c299e9],0x6d55a6af
  4084b4:	mov    DWORD PTR [ebx-0x38],ecx
  4084b7:	outs   dx,BYTE PTR ds:[esi]
  4084b8:	push   esp
  4084b9:	jmp    0x408446
  4084bb:	les    ebp,FWORD PTR [ebx+0x468adc02]
  4084c1:	fdivr  st(1),st
  4084c3:	push   esi
  4084c4:	mov    ebp,0x3f4be64d
  4084c9:	mov    edx,0x8bffeb23
  4084ce:	dec    ecx
  4084cf:	rcr    DWORD PTR [edx-0x75f15b79],1
  4084d5:	and    eax,0xbf5e6d22
  4084da:	retf   
  4084db:	jns    0x408500
  4084dd:	rcr    DWORD PTR [esi],1
  4084df:	test   eax,0x450dc4a4
  4084e4:	cmp    DWORD PTR [esp+edx*8-0x6cffbe09],eax
  4084eb:	call   DWORD PTR [ebp-0x3b4431fd]
  4084f1:	inc    edx
  4084f2:	mov    esi,ecx
  4084f4:	hlt    
  4084f5:	(bad)  
  4084f6:	scas   eax,DWORD PTR es:[edi]
  4084f7:	sub    al,0x45
  4084f9:	in     eax,0x1d
  4084fb:	(bad)  [ebp-0x798e9564]
  408501:	retf   0x82b8
  408504:	jno    0x40856e
  408506:	jmp    0x17920e52
  40850b:	clc    
  40850c:	neg    esp
  40850e:	ins    DWORD PTR es:[edi],dx
  40850f:	mov    ecx,0x28dc156d
  408514:	rol    BYTE PTR [edx+0x59],0xf7
  408518:	test   al,0x41
  40851a:	js     0x408514
  40851c:	rcl    DWORD PTR [eax-0x16],cl
  40851f:	inc    ecx
  408520:	jge    0x4084a2
  408522:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408523:	dec    ebx
  408524:	inc    eax
  408525:	cmp    eax,0x4a157255
  40852a:	jmp    0xd1504215
  40852f:	xor    BYTE PTR [ebx+0x5e0e912d],bh
  408535:	mov    ebx,0xdd8aa3e
  40853a:	add    eax,0xa6a779c4
  40853f:	mov    al,0xff
  408541:	aad    0xdb
  408543:	scas   eax,DWORD PTR es:[edi]
  408544:	sbb    al,0xdc
  408546:	int3   
  408547:	stos   BYTE PTR es:[edi],al
  408548:	xor    BYTE PTR [ecx+0x6960db3b],bl
  40854e:	call   0xbc61:0x9851944f
  408555:	fsubr  QWORD PTR [ebp+0x17ff8bc9]
  40855b:	and    esi,DWORD PTR [esi]
  40855d:	xor    BYTE PTR ds:0x7d57be01,0x4b
  408564:	call   0xe3a9:0x618054d8
  40856b:	into   
  40856c:	aas    
  40856d:	ds xchg edx,eax
  40856f:	(bad)  
  408570:	lods   eax,DWORD PTR ds:[esi]
  408571:	sbb    BYTE PTR [ebp+esi*4+0x4],ch
  408575:	mov    ds:0x5e25ea78,eax
  40857a:	lahf   
  40857b:	sub    ebp,ebx
  40857d:	inc    eax
  40857e:	mov    eax,ds:0x69addcee
  408583:	in     al,dx
  408584:	outs   dx,BYTE PTR ds:[esi]
  408585:	add    eax,0xe2362558
  40858a:	(bad)  
  40858b:	je     0x4085d4
  40858d:	add    ch,0xa4
  408590:	lods   eax,DWORD PTR ds:[esi]
  408591:	outs   dx,BYTE PTR ds:[esi]
  408592:	inc    edx
  408593:	int    0xf
  408595:	jb     0x408554
  408597:	stos   DWORD PTR es:[edi],eax
  408598:	hlt    
  408599:	xchg   esp,eax
  40859a:	aaa    
  40859b:	hlt    
  40859c:	sub    cl,BYTE PTR [edx-0x12985f2c]
  4085a2:	sub    dh,bl
  4085a4:	ret    
  4085a5:	test   ch,0x5f
  4085a8:	xor    DWORD PTR [edx],ebx
  4085aa:	mov    dh,0x1e
  4085ac:	fs pop edi
  4085ae:	adc    dh,BYTE PTR [ecx-0x5a1b7dc3]
  4085b4:	inc    edx
  4085b5:	ins    BYTE PTR es:[edi],dx
  4085b6:	cwde   
  4085b7:	cwde   
  4085b8:	inc    DWORD PTR [edi+0x73]
  4085bb:	pop    ds
  4085bc:	inc    esp
  4085bd:	scas   eax,DWORD PTR es:[edi]
  4085be:	lea    eax,[edx]
  4085c0:	mov    DWORD PTR ds:0xa6230cf,0x60a0bb0
  4085ca:	add    al,0x85
  4085cc:	add    BYTE PTR [edx+edi*8-0x3fd79df8],ah
  4085d3:	outs   dx,DWORD PTR ds:[esi]
  4085d4:	jne    0x4085f3
  4085d6:	jbe    0x4085ab
  4085d8:	adc    DWORD PTR [esi],eax
  4085da:	xchg   edi,eax
  4085db:	xchg   ebp,eax
  4085dc:	pop    ebx
  4085dd:	scas   eax,DWORD PTR es:[edi]
  4085de:	stc    
  4085df:	add    al,0x6a
  4085e1:	fs xchg edx,eax
  4085e3:	add    BYTE PTR [esp+ecx*1],cl
  4085e6:	nop
  4085e7:	or     esp,esi
  4085e9:	js     0x4085b3
  4085eb:	pop    edi
  4085ec:	sbb    cl,BYTE PTR [ebx+0x7a42d826]
  4085f2:	and    DWORD PTR [edx-0x25],0x750628b5
  4085f9:	into   
  4085fa:	xor    ebx,DWORD PTR [ebp*2+0x4b0d661f]
  408601:	ret    
  408602:	pop    edx
  408603:	push   ss
  408604:	push   esi
  408605:	or     BYTE PTR [ecx-0x3c],bl
  408608:	mov    DWORD PTR [esi+0x30],esi
  40860b:	arpl   WORD PTR [esi-0x3b],sp
  40860e:	dec    ecx
  40860f:	and    BYTE PTR [edi-0x206d0d91],bl
  408615:	hlt    
  408616:	add    bh,BYTE PTR [edi]
  408618:	test   eax,0xdeeee931
  40861d:	xlat   BYTE PTR ds:[ebx]
  40861e:	jo     0x40865a
  408620:	adc    BYTE PTR [esi+0x1],al
  408623:	in     al,dx
  408624:	or     al,0x43
  408626:	out    dx,eax
  408627:	aam    0x82
  408629:	add    ch,BYTE PTR [eax+edi*1-0x1215336d]
  408630:	mov    ebx,0x60179384
  408635:	cmp    al,0x2d
  408637:	sahf   
  408638:	jb     0x4085de
  40863a:	pop    edi
  40863b:	push   ecx
  40863c:	dec    ebp
  40863d:	xor    al,0xd4
  40863f:	(bad)  
  408640:	aam    0xf5
  408642:	ficom  DWORD PTR [edx+0x13]
  408645:	test   eax,0x710fad5b
  40864a:	fstp   DWORD PTR [ebx+0x21]
  40864d:	jmp    0x40868d
  40864f:	xor    bl,0x68
  408652:	stos   BYTE PTR es:[edi],al
  408653:	cdq    
  408654:	in     al,0x27
  408656:	and    al,0x88
  408658:	idiv   BYTE PTR gs:[ebx+0x5704d0dd]
  40865f:	dec    edi
  408660:	push   0x19
  408662:	xor    eax,0xd32fb6a0
  408667:	jae    0x40863f
  408669:	and    DWORD PTR [edx-0x35],eax
  40866c:	(bad)  
  40866d:	pop    esi
  40866e:	rcr    DWORD PTR [ebx-0x161e3d79],0xe7
  408675:	(bad)  
  408676:	ror    BYTE PTR [esi*1+0x3b128db5],cl
  40867d:	pop    ss
  40867e:	jae    0x408679
  408680:	push   edx
  408681:	push   ss
  408682:	add    dh,BYTE PTR [ecx+0x57abe73f]
  408688:	xor    eax,0xca0652eb
  40868d:	push   DWORD PTR [ecx-0xf07de8f]
  408693:	das    
  408694:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408695:	mov    ds:0x3bf45e1d,al
  40869a:	push   esp
  40869b:	push   ebx
  40869c:	mov    bh,0x70
  40869e:	push   edi
  40869f:	cwde   
  4086a0:	test   DWORD PTR [edi-0x684d18c2],ebp
  4086a6:	cwde   
  4086a7:	mov    al,0x9
  4086a9:	mov    al,ds:0xcae15d1f
  4086ae:	push   es
  4086af:	push   esp
  4086b0:	ds stc 
  4086b2:	sar    BYTE PTR [eax-0x1ca9f379],0x7a
  4086b9:	sbb    eax,0x3e2b161b
  4086be:	addr16 mov esp,0xa8b3d78b
  4086c4:	in     eax,0x5a
  4086c6:	test   ah,cl
  4086c8:	push   edi
  4086c9:	out    0x3f,eax
  4086cb:	add    al,0x5d
  4086cd:	lock mov ebp,0xe336ae72
  4086d3:	push   esi
  4086d4:	jno    0x4086b9
  4086d6:	pop    edi
  4086d7:	mov    ds:0xf10aaaf3,eax
  4086dc:	test   DWORD PTR [ecx+0x3d372767],edx
  4086e2:	adc    dh,bl
  4086e4:	aad    0x1b
  4086e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086e7:	into   
  4086e8:	inc    edx
  4086e9:	lahf   
  4086ea:	cmp    eax,0x3d65bc57
  4086ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086f0:	adc    al,0x29
  4086f2:	test   eax,0x5f40df8f
  4086f7:	mov    edx,0xe7356ba
  4086fc:	xchg   edx,eax
  4086fd:	outs   dx,DWORD PTR ds:[esi]
  4086fe:	aaa    
  4086ff:	cmp    BYTE PTR [eax-0x1],0x21
  408703:	mov    ebx,0xfbd6cfb2
  408708:	or     dl,BYTE PTR [eax-0x8]
  40870b:	dec    ebx
  40870c:	mov    ebp,DWORD PTR [esi]
  40870e:	cmp    DWORD PTR [eax+0x3713dc61],edx
  408714:	mov    cl,0xb9
  408716:	jnp    0x4086e0
  408718:	and    edx,ecx
  40871a:	pop    ecx
  40871b:	push   esp
  40871c:	xor    BYTE PTR [esi],dh
  40871e:	mov    ebx,0x2fd16997
  408723:	sub    BYTE PTR [edx],bl
  408725:	data16 clc 
  408727:	jnp    0x4087a1
  408729:	xchg   DWORD PTR [esp+edi*8-0x34236c3f],ecx
  408730:	pop    ds
  408731:	lds    esp,FWORD PTR cs:[ebp+eax*1-0x61]
  408736:	push   0x1
  408738:	cmp    ch,cl
  40873a:	mov    dh,0x4c
  40873c:	jle    0x4087af
  40873e:	les    ebp,FWORD PTR [eax+0x3f]
  408741:	cli    
  408742:	and    ebx,esi
  408744:	rcr    ebp,0xe5
  408747:	imul   ecx,DWORD PTR [ebx],0xffffffca
  40874a:	imul   esp,DWORD PTR [edi+0x78],0x3e
  40874e:	test   BYTE PTR [ecx+0xdf4acfd],0x88
  408755:	inc    ebx
  408756:	xchg   edi,eax
  408757:	cmc    
  408758:	aad    0x94
  40875a:	sar    DWORD PTR [edi+0x3a],0x7b
  40875e:	popf   
  40875f:	dec    ecx
  408760:	outs   dx,BYTE PTR ds:[esi]
  408761:	lods   al,BYTE PTR ds:[esi]
  408762:	ss adc eax,0xdb4d003f
  408768:	ss fwait
  40876a:	rcl    DWORD PTR [ecx+ecx*4+0xc],cl
  40876e:	rcl    BYTE PTR [edi+0x7a4b4d22],0xe6
  408775:	push   cs
  408776:	jle    0x4087bb
  408778:	mov    dh,0x30
  40877a:	stc    
  40877b:	jae    0x40874d
  40877d:	xchg   ecx,eax
  40877e:	add    al,BYTE PTR gs:[esi]
  408781:	pusha  
  408782:	icebp  
  408783:	gs loop 0x408750
  408786:	sub    DWORD PTR [edi-0x6a],0xea2bd77d
  40878d:	mov    ah,0xae
  40878f:	or     DWORD PTR [ebx-0x3ef9662],ebx
  408795:	out    0x1e,eax
  408797:	sub    BYTE PTR [edi-0x3a9c0b6f],bh
  40879d:	push   cs
  40879e:	stos   BYTE PTR es:[edi],al
  40879f:	mov    cl,0x0
  4087a1:	scas   eax,DWORD PTR es:[edi]
  4087a2:	adc    al,0x21
  4087a4:	int3   
  4087a5:	js     0x408801
  4087a7:	dec    ebp
  4087a8:	and    esi,DWORD PTR [edi]
  4087aa:	push   eax
  4087ab:	scas   al,BYTE PTR es:[edi]
  4087ac:	in     eax,0x3b
  4087ae:	mov    ebp,0xc604a61c
  4087b3:	aaa    
  4087b4:	sbb    DWORD PTR [edx],ecx
  4087b6:	xor    al,bh
  4087b8:	inc    ah
  4087ba:	ss rol ebx,1
  4087bd:	out    dx,eax
  4087be:	lock xor eax,edx
  4087c1:	popa   
  4087c2:	std    
  4087c3:	sub    al,dh
  4087c5:	and    dh,ah
  4087c7:	test   BYTE PTR [edx+0x44],ch
  4087ca:	lods   eax,DWORD PTR ds:[esi]
  4087cb:	adc    al,BYTE PTR es:[ecx-0x35]
  4087cf:	outs   dx,BYTE PTR ds:[esi]
  4087d0:	jb     0x408850
  4087d2:	dec    ebp
  4087d4:	repz shl DWORD PTR [ecx],cl
  4087d7:	mov    esi,DWORD PTR [ecx-0x79c153bb]
  4087dd:	out    dx,al
  4087de:	add    bl,dl
  4087e0:	dec    esi
  4087e1:	or     edi,ebx
  4087e3:	or     DWORD PTR [ebx+eax*2],ebx
  4087e6:	shr    DWORD PTR [ecx+0x24],0xa2
  4087ea:	or     al,0x70
  4087ec:	int3   
  4087ed:	cmp    bl,BYTE PTR [eax-0x42c77254]
  4087f3:	mov    esp,0x1551cafe
  4087f8:	and    eax,0x28624e0a
  4087fd:	inc    ebx
  4087fe:	push   ecx
  4087ff:	xor    DWORD PTR [edi+0x67c2fee7],esi
  408805:	adc    dl,bl
  408807:	mov    DWORD PTR cs:[edi],edx
  40880a:	fcomp  DWORD PTR ss:[eax+esi*8-0x21c85be4]
  408812:	pop    esp
  408813:	mov    eax,ds:0x78a2ff41
  408818:	rcl    DWORD PTR [esi],0xfa
  40881b:	imul   esp,ebp,0xffffff9a
  40881e:	xor    DWORD PTR [edi],esp
  408820:	xor    ebp,ecx
  408822:	jo     0x40887b
  408824:	shr    BYTE PTR [edi+0x32],cl
  408827:	lea    ecx,[ebx+0x35]
  40882a:	pop    es
  40882b:	scas   eax,DWORD PTR es:[edi]
  40882c:	jo     0x4087c7
  40882e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40882f:	sub    BYTE PTR [ebx+edx*4-0x56972a77],0xf9
  408837:	xor    ch,BYTE PTR [esi+0x68]
  40883a:	cdq    
  40883b:	jp     0x40885e
  40883d:	push   esi
  40883e:	jno    0x4088af
  408840:	pop    esi
  408841:	xor    eax,0x59d4c136
  408846:	enter  0xc6bd,0xeb
  40884a:	iret   
  40884b:	fcmovb st,st(4)
  40884d:	adc    dh,BYTE PTR [edx-0x1c]
  408850:	pop    ds
  408851:	mov    ah,0x2a
  408853:	cmp    DWORD PTR [ecx+esi*1-0x54],ebp
  408857:	dec    ebx
  408858:	mov    bh,0x85
  40885a:	addr16 push es
  40885c:	ficomp WORD PTR [ebx-0x2d]
  40885f:	aaa    
  408860:	push   esp
  408861:	arpl   WORD PTR [ebx+0x9b367d4],di
  408867:	pop    eax
  408868:	sub    DWORD PTR [edi+0x28],edx
  40886b:	daa    
  40886c:	ins    DWORD PTR es:[edi],dx
  40886d:	popa   
  40886e:	mov    eax,ds:0x261f6862
  408873:	add    DWORD PTR [ebp+0x537e63ae],0xfffffffa
  40887a:	lock lods eax,DWORD PTR ds:[esi]
  40887c:	enter  0xd883,0x9a
  408880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408881:	push   esp
  408882:	push   es
  408883:	lock fiadd WORD PTR [edx+0x3e863090]
  40888a:	aaa    
  40888b:	jnp    0x408904
  40888d:	push   edi
  40888e:	std    
  40888f:	push   ds
  408890:	jnp    0x4088f1
  408892:	jmp    0xc7a947fb
  408897:	sub    eax,edi
  408899:	bound  ecx,QWORD PTR [edx+eiz*8+0xd]
  40889d:	loope  0x4088ab
  40889f:	inc    esp
  4088a0:	sub    bh,dh
  4088a2:	out    dx,eax
  4088a3:	jmp    0x6467:0x17dafe7c
  4088aa:	inc    esp
  4088ab:	mov    esp,0x29dcfa20
  4088b0:	mov    bh,0xad
  4088b2:	fiadd  WORD PTR [edi+0x79d33fb1]
  4088b8:	aaa    
  4088b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088ba:	jne    0x408903
  4088bc:	fld    TBYTE PTR [ecx+0x6a7e39bd]
  4088c2:	mov    ds:0x2010924,al
  4088c7:	cmp    al,0x3a
  4088c9:	mov    ds:0x4a83e535,al
  4088ce:	push   0xffffffba
  4088d0:	cli    
  4088d1:	xchg   edx,eax
  4088d2:	rcr    BYTE PTR [ecx+0x39],cl
  4088d5:	sahf   
  4088d6:	pop    esi
  4088d7:	test   al,0x12
  4088d9:	(bad)  
  4088da:	es pop esi
  4088dc:	ret    0x9014
  4088df:	sbb    edi,edi
  4088e1:	adc    al,0xe7
  4088e3:	pop    esi
  4088e4:	test   DWORD PTR [ecx+0x23],eax
  4088e7:	js     0x4088b6
  4088e9:	neg    DWORD PTR [eax-0x38]
  4088ec:	call   0x55051e1f
  4088f1:	add    eax,0x127145c5
  4088f6:	push   0xa8ca2831
  4088fb:	jno    0x408933
  4088fd:	scas   al,BYTE PTR es:[edi]
  4088fe:	sub    dh,BYTE PTR [eax]
  408900:	and    esi,DWORD PTR [esi]
  408902:	adc    al,0x51
  408904:	scas   eax,DWORD PTR es:[edi]
  408905:	lock arpl WORD PTR [edx+0x3f13cc3f],di
  40890c:	mov    ds:0x9c1e2507,eax
  408911:	into   
  408912:	pop    ds
  408913:	ret    
  408914:	(bad)
  408917:	scas   al,BYTE PTR es:[edi]
  408918:	mov    ch,0x1e
  40891a:	cdq    
  40891b:	in     al,0x75
  40891d:	cmc    
  40891e:	inc    ebx
  408920:	and    eax,0xaeae81d5
  408925:	and    BYTE PTR [edx+ecx*4-0x7a504ccc],al
  40892c:	cdq    
  40892d:	xchg   esi,eax
  40892e:	sub    DWORD PTR [eax+0x71],0x89ad3b98
  408935:	je     0x40891c
  408937:	(bad)  
  408938:	(bad)  
  408939:	test   al,0x4f
  40893b:	cmp    eax,0xc4c1d04e
  408940:	dec    edx
  408941:	xor    DWORD PTR [ecx+eax*2-0x28401de8],ecx
  408948:	(bad)  
  40894a:	imul   esi,DWORD PTR [eax-0x41],0x94213cd0
  408951:	push   edi
  408952:	mov    BYTE PTR [edx+0x14],al
  408955:	mov    ds:0x4ff55103,eax
  40895a:	xor    DWORD PTR [edi-0x757662ba],edx
  408960:	loop   0x408911
  408962:	icebp  
  408963:	and    ch,dl
  408965:	mov    dh,0x99
  408967:	mov    ah,0xa6
  408969:	adc    al,0xcc
  40896b:	mov    bl,0x12
  40896d:	fsubr  st,st(1)
  40896f:	call   0xa41c67d9
  408974:	or     esi,DWORD PTR [edx-0x21]
  408977:	dec    esp
  408978:	dec    esp
  408979:	and    bh,BYTE PTR ds:0x5f10c7dc
  40897f:	mov    ch,0x67
  408981:	out    dx,eax
  408982:	loope  0x4089b2
  408984:	mov    bl,0xd3
  408986:	jge    0x4089ff
  408988:	leave  
  408989:	test   BYTE PTR [ebp+0x67],dl
  40898c:	jne    0x408950
  40898e:	inc    edx
  40898f:	stos   DWORD PTR es:[edi],eax
  408990:	cwde   
  408991:	sub    BYTE PTR [ecx+0x5b],ch
  408994:	cld    
  408995:	and    eax,DWORD PTR [ebx+0x74]
  408998:	sbb    DWORD PTR [ecx],ebx
  40899a:	(bad)  [ebx+edi*4+0x51]
  40899e:	add    eax,DWORD PTR [esi+0x34eb1dab]
  4089a4:	sub    eax,0x9c5a4b70
  4089a9:	or     edi,ebx
  4089ab:	sub    ah,bh
  4089ad:	sbb    eax,esi
  4089af:	in     al,0x8a
  4089b1:	mov    dh,0xfb
  4089b3:	mov    edx,0x2e91c754
  4089b8:	mov    al,0x53
  4089ba:	stos   BYTE PTR es:[edi],al
  4089bb:	xor    al,0x7b
  4089bd:	add    DWORD PTR cs:[esi-0x26c23754],ebp
  4089c4:	xchg   edx,eax
  4089c5:	sub    DWORD PTR [ebx+0x2346f8b2],0x9c9d4e93
  4089cf:	jno    0x40899e
  4089d1:	repnz xchg ebp,eax
  4089d3:	add    DWORD PTR [esi],esi
  4089d5:	aad    0xa6
  4089d7:	cwde   
  4089d8:	sbb    eax,0x58baa7d
  4089dd:	fsub   DWORD PTR [ebp+0x5e]
  4089e0:	out    dx,al
  4089e1:	mov    WORD PTR [ecx+0x8],?
  4089e4:	mov    ecx,0x1db3e1c9
  4089e9:	xor    DWORD PTR [eax-0x56],esi
  4089ec:	cmp    dl,0x29
  4089ef:	fcomp  DWORD PTR [ebx+0x3f]
  4089f2:	cmp    esi,DWORD PTR [ebx-0x57]
  4089f5:	enter  0x650b,0xd0
  4089f9:	adc    ebp,DWORD PTR [edx-0x3f15a2e8]
  4089ff:	ds clc 
  408a01:	hlt    
  408a02:	test   DWORD PTR [eax+0x3b],ecx
  408a05:	(bad)  
  408a06:	mov    ds:0x68ce9f2f,eax
  408a0b:	xchg   esi,eax
  408a0c:	dec    edi
  408a0d:	jne    0x408a85
  408a0f:	nop
  408a10:	addr16 pop esi
  408a12:	cs jg  0x408a11
  408a15:	idiv   ch
  408a17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a18:	retf   0x2a69
  408a1b:	sbb    dl,BYTE PTR [edx]
  408a1d:	jbe    0x4089a6
  408a1f:	cmp    ebp,DWORD PTR [ebx-0x5227f8f8]
  408a25:	or     eax,DWORD PTR [ebp-0x33]
  408a28:	jns    0x4089d1
  408a2a:	xlat   BYTE PTR ds:[ebx]
  408a2b:	xlat   BYTE PTR ds:[ebx]
  408a2c:	std    
  408a2d:	push   ds
  408a2e:	adc    DWORD PTR [esi+0x16],ecx
  408a31:	outs   dx,DWORD PTR ds:[esi]
  408a32:	xchg   edx,eax
  408a33:	repnz mov edx,0xe669bf74
  408a39:	fidiv  WORD PTR [esi+esi*8+0x2cd77f1f]
  408a40:	rcr    esp,cl
  408a42:	(bad)  
  408a43:	adc    ecx,ebx
  408a45:	xchg   esi,eax
  408a46:	push   ds
  408a47:	dec    eax
  408a48:	mov    eax,0x42c0adad
  408a4d:	mov    esp,0x86f17872
  408a52:	adc    cl,BYTE PTR [esi+eax*2-0x2]
  408a56:	test   eax,edi
  408a58:	ror    DWORD PTR [esi],cl
  408a5a:	out    0xdc,al
  408a5c:	leave  
  408a5d:	in     al,0x6d
  408a5f:	stc    
  408a60:	add    BYTE PTR [ebx-0x75194043],ah
  408a66:	lock add esp,DWORD PTR [eax]
  408a69:	ret    0xb62b
  408a6c:	mov    fs,ecx
  408a6e:	adc    al,0x6b
  408a70:	adc    esp,edi
  408a72:	std    
  408a73:	mov    eax,ds:0x5749b271
  408a78:	(bad)  
  408a79:	push   ebx
  408a7a:	sub    DWORD PTR [edx+ebx*8+0x36],0xffffffd8
  408a7f:	pop    ds
  408a80:	cmp    ecx,DWORD PTR [esi]
  408a82:	mov    BYTE PTR [edi-0x2d],al
  408a85:	adc    eax,ebx
  408a87:	jno    0x408abb
  408a89:	cdq    
  408a8a:	push   ds
  408a8b:	std    
  408a8c:	(bad)  
  408a8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a8e:	test   eax,0x2f6ef310
  408a93:	stos   DWORD PTR es:[edi],eax
  408a94:	xchg   esi,eax
  408a95:	cwde   
  408a96:	popf   
  408a97:	mov    eax,0x46515616
  408a9c:	jae    0x408a68
  408a9e:	ins    DWORD PTR es:[edi],dx
  408a9f:	sbb    BYTE PTR [esp+ecx*4],0xfc
  408aa3:	int3   
  408aa4:	jge    0x408ac9
  408aa6:	sbb    ebx,DWORD PTR [eax]
  408aa8:	mov    eax,ds:0x6a49a14
  408aad:	add    dl,BYTE PTR [edi]
  408aaf:	out    dx,al
  408ab0:	cld    
  408ab1:	xor    edi,DWORD PTR cs:[esi]
  408ab4:	int    0x5b
  408ab6:	jae    0x408ab0
  408ab8:	mov    eax,ds:0x5f379ed8
  408abd:	mov    ds:0x245db01f,eax
  408ac2:	add    ah,BYTE PTR [ebp-0x68]
  408ac5:	int3   
  408ac6:	int    0x7a
  408ac8:	pop    esp
  408ac9:	xrelease mov DWORD PTR [eax+0x61],eax
  408acd:	or     al,0x9c
  408acf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ad0:	mov    edx,0x8c36c121
  408ad5:	mov    ecx,0x6dbdd734
  408ada:	jge    0x408ac0
  408adc:	daa    
  408add:	and    eax,0x79d45b07
  408ae2:	jmp    0x2b325660
  408ae7:	or     eax,0x370c9d1e
  408aec:	mov    eax,ds:0x95cb5b59
  408af1:	in     eax,dx
  408af2:	mov    ebp,0x8f422128
  408af7:	daa    
  408af8:	test   al,0x7e
  408afa:	outs   dx,BYTE PTR ds:[esi]
  408afb:	jmp    0x408b33
  408afd:	fs cmc 
  408aff:	xchg   ebp,eax
  408b00:	add    al,0x98
  408b02:	pusha  
  408b03:	in     eax,0x4a
  408b05:	ret    0xdd85
  408b08:	inc    esi
  408b09:	push   eax
  408b0a:	mov    dh,0x21
  408b0c:	fdivrp st(5),st
  408b0e:	and    edx,ecx
  408b10:	fild   DWORD PTR [ebp+0x39631403]
  408b16:	or     esp,ebx
  408b18:	or     eax,0xb902c56a
  408b1d:	push   esp
  408b1e:	fild   DWORD PTR [edx-0x1d]
  408b21:	lods   al,BYTE PTR ds:[esi]
  408b22:	(bad)  
  408b23:	gs es pop cx
  408b27:	sbb    esp,esp
  408b29:	xor    eax,0x9111f268
  408b2e:	es dec ebx
  408b30:	push   0xffffffdb
  408b32:	adc    ch,BYTE PTR [ebp+0x6e08ec1a]
  408b38:	push   esp
  408b39:	daa    
  408b3a:	dec    edx
  408b3b:	and    eax,0x8cfab833
  408b40:	adc    eax,0x9c4efbcd
  408b45:	jb     0x408b0c
  408b47:	push   eax
  408b48:	int3   
  408b49:	xchg   edx,eax
  408b4a:	sbb    BYTE PTR [ebx+0x2b886555],cl
  408b50:	and    cl,BYTE PTR [edi]
  408b52:	or     BYTE PTR [ecx+0x4],bh
  408b55:	and    bl,bl
  408b57:	sub    esi,edx
  408b59:	or     dh,ah
  408b5b:	pcmpeqb mm1,QWORD PTR [esi+0x67294100]
  408b62:	lods   al,BYTE PTR ds:[esi]
  408b63:	mov    bh,0xc9
  408b65:	dec    ebx
  408b66:	jbe    0x408b77
  408b68:	jl     0x408b4c
  408b6a:	test   BYTE PTR [edx+0x1f],dh
  408b6d:	inc    edx
  408b6e:	data16 (bad) 
  408b70:	imul   DWORD PTR [ebx-0x48]
  408b73:	dec    esi
  408b74:	ja     0x408b97
  408b76:	sub    ebp,esi
  408b78:	enter  0xba98,0x88
  408b7c:	dec    edi
  408b7d:	jl     0x408b6c
  408b7f:	xchg   BYTE PTR ds:0x22c1aa31,dl
  408b85:	(bad)  
  408b86:	push   esi
  408b87:	sbb    al,BYTE PTR ds:0x4ca08029
  408b8d:	push   ds
  408b8e:	mov    ch,al
  408b90:	popa   
  408b91:	cmp    al,0x5c
  408b93:	push   esi
  408b94:	adc    ecx,eax
  408b96:	rcl    BYTE PTR [esi],cl
  408b98:	push   ebx
  408b99:	add    bl,dh
  408b9b:	jecxz  0x408b4c
  408b9d:	inc    ebx
  408b9e:	repz (bad) 
  408ba0:	dec    edi
  408ba1:	pop    ebx
  408ba2:	ror    BYTE PTR [esi-0x718943d7],cl
  408ba8:	cmp    edi,DWORD PTR [ebx+0x79]
  408bab:	add    eax,0xba6bd37a
  408bb0:	inc    eax
  408bb1:	add    esi,DWORD PTR [edx]
  408bb3:	(bad)
  408bb6:	mov    ah,dh
  408bb8:	dec    esi
  408bb9:	(bad)
  408bbd:	push   esp
  408bbe:	lods   al,BYTE PTR ds:[esi]
  408bbf:	sti    
  408bc0:	dec    edi
  408bc1:	inc    edx
  408bc2:	jmp    0x408c13
  408bc4:	es mov ebx,0x11e388cb
  408bca:	mov    WORD PTR [edx+0x53bb4750],?
  408bd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bd1:	sub    BYTE PTR [edx],0x90
  408bd4:	popf   
  408bd5:	add    al,0xbc
  408bd7:	push   ebp
  408bd8:	shr    BYTE PTR [edi],1
  408bda:	xlat   BYTE PTR ds:[ebx]
  408bdb:	pop    esp
  408bdc:	vinserti32x8 zmm5{k5}{z},zmm6,YMMWORD PTR ds:0x6ab181c1,0x78
  408be7:	pop    ecx
  408be8:	icebp  
  408be9:	fistp  DWORD PTR [esp+esi*1-0x566420e6]
  408bf0:	dec    esi
  408bf1:	jg     0x408bbc
  408bf3:	push   ebx
  408bf4:	push   edx
  408bf5:	repz xor BYTE PTR [ebp-0x39b1791c],bh
  408bfc:	loopne 0x408c62
  408bfe:	jmp    0x408c5e
  408c00:	addr16 cwde 
  408c02:	out    dx,eax
  408c03:	and    eax,0xba2b733
  408c08:	mov    DWORD PTR [ebx-0xd],ebx
  408c0b:	mov    ah,0xa5
  408c0d:	mov    esp,esi
  408c0f:	mov    edx,0x8d84d8d9
  408c14:	xchg   esp,eax
  408c15:	popw   es
  408c17:	out    0x3,al
  408c19:	inc    esi
  408c1a:	xor    al,0xef
  408c1c:	ins    DWORD PTR es:[edi],dx
  408c1d:	fcomp  DWORD PTR [ebx-0x34]
  408c20:	(bad)  
  408c21:	ds (bad) 
  408c23:	jb     0x408bd9
  408c25:	int3   
  408c26:	fidiv  WORD PTR [ebx]
  408c28:	bound  edi,QWORD PTR [ebx-0x36]
  408c2b:	sbb    DWORD PTR [edx+0x3c0f1784],ebp
  408c31:	ja     0x408c58
  408c33:	(bad)  
  408c34:	out    0x9d,eax
  408c36:	or     eax,0x6686b821
  408c3b:	dec    edx
  408c3c:	push   0x72
  408c3e:	ret    
  408c3f:	and    BYTE PTR [edi+0x654ea468],bl
  408c45:	cwde   
  408c46:	cli    
  408c47:	out    dx,al
  408c48:	(bad)  [ebx-0x5b74635a]
  408c4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c4f:	(bad)  
  408c50:	stc    
  408c51:	bound  ecx,QWORD PTR [edi-0x29]
  408c54:	inc    eax
  408c55:	mov    WORD PTR gs:[edi],gs
  408c58:	add    BYTE PTR [edx-0x3adddd35],al
  408c5e:	fstp   st(7)
  408c60:	xchg   esi,eax
  408c61:	mov    ah,0xa3
  408c63:	xor    ebp,DWORD PTR [ebx+0x3]
  408c66:	stos   DWORD PTR es:[edi],eax
  408c67:	inc    esi
  408c68:	cwde   
  408c69:	jmp    0x5f3b:0xbbb43b7
  408c70:	mov    dl,0xfa
  408c72:	arpl   WORD PTR [ebx-0x4b3e48c8],bp
  408c78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c79:	dec    edi
  408c7a:	aad    0xd4
  408c7c:	and    DWORD PTR ds:0x147cda20,ebx
  408c82:	lea    esi,[esi]
  408c84:	pop    eax
  408c85:	mov    bh,0xb2
  408c87:	dec    esi
  408c88:	pop    esi
  408c89:	(bad)  
  408c8a:	shl    BYTE PTR [esi-0x37],1
  408c8d:	mov    ebx,0x9b5fdcd8
  408c92:	loope  0x408cde
  408c94:	inc    ebp
  408c95:	and    ebx,DWORD PTR [eax-0x78]
  408c98:	stos   BYTE PTR es:[edi],al
  408c99:	cld    
  408c9a:	adc    esp,DWORD PTR [esi+eax*8]
  408c9d:	loope  0x408cc6
  408c9f:	test   DWORD PTR [ebp+0x3182ce4f],eax
  408ca5:	sbb    al,0xbe
  408ca7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ca8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ca9:	fst    DWORD PTR [ecx]
  408cab:	sub    DWORD PTR [ebp+eiz*8+0x26073f03],esp
  408cb2:	and    bl,BYTE PTR [edi-0x43]
  408cb5:	mov    eax,0x6545feb9
  408cba:	or     dl,BYTE PTR [edx-0x15]
  408cbd:	gs aaa 
  408cbf:	add    esi,DWORD PTR ds:0x43f5c8d3
  408cc5:	lods   eax,DWORD PTR ds:[esi]
  408cc6:	lock outs dx,BYTE PTR ds:[esi]
  408cc8:	mov    ds:0x1cc4b9e3,al
  408ccd:	popf   
  408cce:	scas   al,BYTE PTR es:[edi]
  408ccf:	or     ecx,DWORD PTR [edi]
  408cd1:	adc    bh,al
  408cd3:	pop    eax
  408cd4:	fs (bad) 
  408cd6:	fcomp  QWORD PTR [ebx-0x4f]
  408cd9:	repz adc dl,BYTE PTR [esi-0x1d867c18]
  408ce0:	mov    dl,0x19
  408ce2:	ins    DWORD PTR es:[edi],dx
  408ce3:	loopne 0x408d42
  408ce5:	xchg   esp,eax
  408ce6:	cmp    eax,0x406f1d99
  408ceb:	xchg   DWORD PTR [eax],ebx
  408ced:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cee:	pop    esp
  408cef:	popf   
  408cf0:	outs   dx,BYTE PTR ds:[esi]
  408cf1:	idiv   BYTE PTR [eax-0x3bd51e75]
  408cf7:	jo     0x408c7b
  408cf9:	mov    bh,0x45
  408cfb:	mov    BYTE PTR [eax+edx*2],0x6f
  408cff:	mov    ds:0xb0151c38,eax
  408d04:	cmp    edi,DWORD PTR [eax+0x1b84b0f7]
  408d0a:	dec    eax
  408d0b:	icebp  
  408d0c:	push   ebx
  408d0d:	test   DWORD PTR [edx+0x3d],0x854452af
  408d14:	mov    ds:0xf37b91ef,al
  408d19:	ins    DWORD PTR es:[edi],dx
  408d1a:	popf   
  408d1b:	xchg   edi,eax
  408d1c:	pop    ds
  408d1d:	mov    DWORD PTR [edx],edi
  408d1f:	retf   0xf8f6
  408d22:	pop    ecx
  408d23:	pushf  
  408d24:	aas    
  408d25:	(bad)  
  408d26:	ins    BYTE PTR es:[edi],dx
  408d27:	add    dl,BYTE PTR [edi]
  408d29:	mov    dh,0x19
  408d2b:	call   DWORD PTR [eax+eax*2+0x45ae82e9]
  408d32:	nop
  408d33:	or     BYTE PTR [ecx+0x59085820],cl
  408d39:	rol    DWORD PTR [ecx+0x8],0x3f
  408d3d:	push   cs
  408d3e:	inc    ebx
  408d3f:	mov    ecx,DWORD PTR [ebx+0x4b83ff1]
  408d45:	test   BYTE PTR [eax+ecx*8+0x64],ah
  408d49:	xchg   ebx,eax
  408d4a:	dec    ebx
  408d4b:	stc    
  408d4c:	pop    edx
  408d4d:	add    ah,BYTE PTR [ebx-0x66e55a84]
  408d53:	stos   BYTE PTR es:[edi],al
  408d54:	pop    ds
  408d55:	fbstp  TBYTE PTR [ebx]
  408d57:	out    dx,eax
  408d58:	add    dl,BYTE PTR [esi+esi*2]
  408d5b:	xchg   ebp,eax
  408d5c:	(bad)  
  408d5d:	mov    ecx,0x75d4cb2e
  408d62:	sbb    BYTE PTR [edi+edx*4+0x75],ch
  408d66:	pop    ds
  408d67:	test   al,0x7e
  408d69:	xor    esi,DWORD PTR [edx+0x54]
  408d6c:	xchg   edi,eax
  408d6d:	pop    edi
  408d6e:	in     eax,dx
  408d6f:	cmp    eax,0x300faa21
  408d74:	(bad)  
  408d75:	fstp   DWORD PTR [eax-0x6c]
  408d78:	mov    ds:0x53790782,al
  408d7d:	push   ebp
  408d7e:	add    esi,DWORD PTR [esi+0xe]
  408d81:	pop    edi
  408d82:	mov    ds:0xdcc3894f,al
  408d87:	adc    dh,dh
  408d89:	or     cl,dh
  408d8b:	loope  0x408d16
  408d8d:	or     al,BYTE PTR [ecx+0x5edbfebc]
  408d93:	mov    ds:0x355a65a2,eax
  408d98:	icebp  
  408d99:	rcl    BYTE PTR ds:0x2e7eef4b,1
  408d9f:	repz inc eax
  408da1:	dec    ebp
  408da2:	or     eax,0xbd611bec
  408da7:	mov    bl,0x31
  408da9:	fucomi st,st(6)
  408dab:	test   eax,0x167567f6
  408db0:	aas    
  408db1:	ds inc ebx
  408db3:	add    bl,BYTE PTR [ebx+0xb]
  408db6:	out    0x73,al
  408db8:	in     al,dx
  408db9:	mov    bh,0xfb
  408dbb:	and    eax,0x6b17a529
  408dc0:	mov    dl,0xcb
  408dc2:	popf   
  408dc3:	inc    BYTE PTR cs:[edx+0x74]
  408dc7:	gs stos BYTE PTR es:[edi],al
  408dc9:	pop    ebp
  408dca:	sub    BYTE PTR [edx+edi*8-0x5d],dh
  408dce:	daa    
  408dcf:	pop    ss
  408dd0:	mov    edx,0x70c4e195
  408dd5:	loopne 0x408dc2
  408dd7:	mov    eax,ds:0xf3c7e884
  408ddc:	sbb    al,0xc0
  408dde:	push   ss
  408ddf:	leave  
  408de0:	fisttp QWORD PTR [ebx]
  408de2:	xor    al,0xa3
  408de4:	mov    ebp,0xc9b6d473
  408de9:	int    0x13
  408deb:	mov    dl,0xe
  408ded:	push   ebx
  408dee:	cdq    
  408def:	aad    0x4c
  408df1:	jg     0x408d7e
  408df3:	mov    ds:0x40e5d9e,eax
  408df8:	mov    ebp,0x70e62e28
  408dfd:	clc    
  408dfe:	test   al,0x15
  408e00:	jbe    0x408e00
  408e02:	jle    0x408ddb
  408e04:	push   eax
  408e05:	or     ah,BYTE PTR [edi-0x75]
  408e08:	mov    eax,DWORD PTR [ecx+0x7310f052]
  408e0e:	movlps QWORD PTR [eax],xmm7
  408e11:	push   edx
  408e12:	call   FWORD PTR [edi+edi*4-0x7bb7f750]
  408e19:	fistp  WORD PTR ds:0x26d0762b
  408e1f:	in     al,0x65
  408e21:	push   ebx
  408e22:	ror    DWORD PTR cs:[edx],1
  408e25:	scas   eax,DWORD PTR es:[edi]
  408e26:	mov    dl,0x9c
  408e28:	in     eax,dx
  408e29:	lods   al,BYTE PTR ds:[esi]
  408e2a:	jg     0x408e03
  408e2c:	(bad)  
  408e2d:	xchg   edi,eax
  408e2e:	and    BYTE PTR [ebp+0x29],bh
  408e31:	aas    
  408e32:	out    0x58,al
  408e34:	neg    DWORD PTR [eax+0x12]
  408e37:	sbb    eax,DWORD PTR [eax+0x7d67bf44]
  408e3d:	ror    BYTE PTR [edi+0x73],0xf2
  408e41:	push   esp
  408e42:	out    0x71,eax
  408e44:	inc    ebp
  408e45:	pop    ebp
  408e46:	aam    0x93
  408e48:	or     al,0x30
  408e4a:	pop    ds
  408e4b:	push   ebp
  408e4c:	adc    eax,0x2173f6c2
  408e51:	lock mov esp,0x3b512858
  408e57:	mov    eax,0xe752230
  408e5c:	jmp    0x5947d694
  408e61:	and    DWORD PTR [ecx+0x48],edx
  408e64:	adc    ebx,0xffffffa5
  408e67:	paddsb mm3,QWORD PTR [edx+eax*1+0x4cf927f6]
  408e6f:	stos   DWORD PTR es:[edi],eax
  408e70:	repnz push edx
  408e72:	jmp    0x72e0:0x86ae0303
  408e79:	popf   
  408e7a:	xchg   esi,eax
  408e7b:	xchg   dx,ax
  408e7d:	sub    DWORD PTR [ecx-0x27f663ee],edx
  408e83:	setle  BYTE PTR [ebx]
  408e86:	js     0x408ecc
  408e88:	cmp    ah,dl
  408e8a:	outs   dx,BYTE PTR ds:[esi]
  408e8b:	imul   BYTE PTR [ebx-0x60]
  408e8e:	jnp    0x408e61
  408e90:	push   0x72
  408e92:	push   0xfc7562a9
  408e97:	push   ss
  408e98:	xchg   edi,eax
  408e99:	add    eax,0xd159d9ea
  408e9e:	call   0x4a57:0x90c53f8f
  408ea5:	jmp    0x408e86
  408ea7:	gs cmp eax,0x8eb22126
  408ead:	ret    
  408eae:	leave  
  408eaf:	ja     0x408e71
  408eb1:	(bad)
  408eb5:	test   BYTE PTR [ebp-0x72b0bd30],bh
  408ebb:	xor    esi,DWORD PTR es:[edx+edx*4-0x6acb6239]
  408ec3:	or     eax,0x87c90580
  408ec8:	iret   
  408ec9:	icebp  
  408eca:	cs (bad) 
  408ecc:	pop    ds
  408ecd:	and    eax,0x23a901c5
  408ed2:	adc    dh,BYTE PTR [ebx+0x6efe934e]
  408ed8:	mov    ds:0x430ad520,eax
  408edd:	adc    eax,0x5b2bebbc
  408ee2:	mov    al,ds:0x29f9d990
  408ee7:	xor    al,0x97
  408ee9:	ins    BYTE PTR es:[edi],dx
  408eea:	int3   
  408eeb:	stc    
  408eec:	je     0x408eb6
  408eee:	in     eax,0xb9
  408ef0:	leave  
  408ef1:	push   es
  408ef2:	xor    ecx,esp
  408ef4:	stos   DWORD PTR es:[edi],eax
  408ef5:	les    ebx,FWORD PTR [edx-0x67]
  408ef8:	shl    BYTE PTR [esi-0x18f1a623],0x75
  408eff:	add    eax,0x1bb20fd0
  408f04:	xchg   edi,eax
  408f05:	imul   edi,DWORD PTR [ebx-0x67],0x22
  408f09:	cld    
  408f0a:	aad    0x64
  408f0c:	in     al,0x89
  408f0e:	out    dx,eax
  408f0f:	sti    
  408f10:	push   0xffffffcf
  408f12:	test   al,0x59
  408f14:	in     al,0xdb
  408f16:	nop
  408f17:	retf   
  408f18:	push   cs
  408f19:	addr16 xchg ebx,eax
  408f1b:	xor    eax,0xde531e66
  408f20:	dec    esi
  408f21:	loop   0x408efb
  408f23:	jle    0x408eb5
  408f25:	jg     0x408f31
  408f27:	pop    edx
  408f28:	add    ebp,ebp
  408f2a:	inc    ebp
  408f2b:	and    edi,esi
  408f2d:	call   0xd534:0x13dc5d51
  408f34:	(bad)  
  408f36:	cdq    
  408f37:	add    esp,DWORD PTR [esi-0x79fd4e38]
  408f3d:	inc    ebp
  408f3e:	es inc ecx
  408f40:	push   ecx
  408f41:	jl     0x408f98
  408f43:	mov    ecx,?
  408f45:	pop    eax
  408f46:	leave  
  408f47:	pop    esp
  408f48:	int    0x3d
  408f4a:	or     esi,DWORD PTR [edx+esi*1]
  408f4d:	or     al,0x23
  408f4f:	lods   eax,DWORD PTR ds:[esi]
  408f50:	sti    
  408f51:	mov    edi,0x9e474f5e
  408f56:	ror    BYTE PTR [ecx+0x3f],1
  408f59:	sbb    bh,cl
  408f5b:	and    edi,DWORD PTR [edx]
  408f5d:	ror    DWORD PTR [eax-0x4c],0xa8
  408f61:	xchg   edi,eax
  408f62:	cwde   
  408f63:	js     0x408f06
  408f65:	inc    ecx
  408f66:	or     eax,0xc06184f5
  408f6b:	inc    esi
  408f6c:	jmp    0xeacb514
  408f71:	fwait
  408f72:	mov    bl,0xb
  408f74:	lods   al,BYTE PTR ds:[esi]
  408f75:	ret    0x6050
  408f78:	jge    0x408f91
  408f7a:	ret    
  408f7b:	fisttp WORD PTR [eax+0x48]
  408f7e:	cdq    
  408f7f:	(bad)  
  408f80:	loope  0x408fd4
  408f82:	mov    edx,0xf9b02b5f
  408f87:	ja     0x408ff7
  408f89:	xor    BYTE PTR [ecx+0x2],ch
  408f8c:	aam    0xb5
  408f8e:	movhps QWORD PTR [ecx],xmm5
  408f91:	adc    al,0xe9
  408f93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f94:	in     al,dx
  408f95:	fadd   DWORD PTR [ebx-0x4f272e40]
  408f9b:	dec    edi
  408f9c:	enter  0x6dbe,0xf
  408fa0:	add    BYTE PTR [edx],bh
  408fa2:	outs   dx,BYTE PTR ds:[esi]
  408fa3:	jle    0x408fcd
  408fa5:	into   
  408fa6:	pushf  
  408fa7:	pop    ss
  408fa8:	mov    ah,0x17
  408faa:	shl    ch,0xdc
  408fad:	adc    eax,DWORD PTR [edi]
  408faf:	push   ebp
  408fb0:	push   edi
  408fb1:	mov    ch,0xa1
  408fb3:	sbb    esi,ebp
  408fb5:	inc    ebx
  408fb6:	loope  0x408f6f
  408fb8:	adc    bl,BYTE PTR [eax-0x47]
  408fbb:	(bad)  
  408fbc:	in     al,0x1f
  408fbe:	inc    ecx
  408fbf:	sub    BYTE PTR [ebp-0x65],bl
  408fc2:	jle    0x40900f
  408fc4:	pop    ecx
  408fc5:	out    0xca,eax
  408fc7:	sbb    eax,0xaaedf0d1
  408fcc:	enter  0x1852,0x67
  408fd0:	mov    ds:0x4db41d65,al
  408fd5:	mov    WORD PTR ds:0x41d57992,?
  408fdb:	xor    al,0x8f
  408fdd:	retf   
  408fde:	mov    ah,0x82
  408fe0:	push   ebp
  408fe1:	jae    0x408f8c
  408fe3:	mov    al,0xcf
  408fe5:	fbld   TBYTE PTR [ecx]
  408fe7:	push   edi
  408fe8:	sti    
  408fe9:	jle    0x409001
  408feb:	push   ecx
  408fec:	(bad)  
  408fed:	arpl   si,di
  408fef:	repz pop esi
  408ff1:	mov    esi,edi
  408ff3:	pop    ds
  408ff4:	ja     0x408fd2
  408ff6:	(bad)  
  408ff8:	loope  0x408fa7
  408ffa:	out    0x8,eax
  408ffc:	xor    al,0x3c
  408ffe:	dec    ebx
  408fff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409000:	ror    BYTE PTR [eax],cl
  409002:	setae  BYTE PTR [ebx+eiz*4-0xce4ca23]
  40900a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40900b:	add    DWORD PTR [edx],esi
  40900d:	sar    BYTE PTR [eax],1
  40900f:	daa    
  409010:	test   eax,0x9d82f118
  409015:	cld    
  409016:	call   0xb2b7a9e
  40901b:	test   DWORD PTR [esi],edi
  40901d:	rol    DWORD PTR [edx-0x55],cl
  409020:	sar    BYTE PTR [edx-0x23],0x5e
  409024:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409025:	das    
  409026:	fs aaa 
  409028:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409029:	adc    eax,0x89774d8c
  40902e:	fcmovb st,st(4)
  409030:	and    eax,0x6fd1adec
  409035:	es push ss
  409037:	outs   dx,BYTE PTR ds:[esi]
  409038:	and    BYTE PTR [edi+0x303a0f60],ah
  40903e:	call   0xe9ca:0xc337db1f
  409045:	icebp  
  409046:	xchg   esp,eax
  409047:	cli    
  409048:	test   DWORD PTR [ebx-0x569e0a10],esi
  40904e:	jg     0x40907a
  409050:	xor    BYTE PTR [ebx+esi*8-0x3fca1801],dh
  409057:	mov    ds:0xdc9eea32,eax
  40905c:	push   ds
  40905d:	ret    
  40905e:	xchg   edx,eax
  40905f:	mov    ecx,0xca96b23
  409064:	cmp    bl,BYTE PTR [eax-0x64]
  409067:	ret    
  409068:	ja     0x40906e
  40906a:	jmp    0xfebd6dfd
  40906f:	push   0xffffff98
  409071:	push   0x5fc40eea
  409076:	sbb    ebp,DWORD PTR [ebp-0x2b]
  409079:	mov    ebx,0x6bbc97b1
  40907e:	inc    edi
  40907f:	bound  ebp,QWORD PTR [eax]
  409081:	cmp    al,0x50
  409083:	mov    ch,0x89
  409085:	dec    edx
  409086:	pop    ss
  409087:	mov    ch,0x68
  409089:	cli    
  40908a:	and    edi,DWORD PTR [edi]
  40908c:	cli    
  40908d:	popf   
  40908e:	pop    ss
  40908f:	daa    
  409090:	or     ch,ah
  409092:	in     eax,0xd
  409094:	sbb    DWORD PTR [edx],esp
  409096:	leave  
  409097:	out    dx,al
  409098:	xor    al,0x58
  40909a:	outs   dx,DWORD PTR ds:[esi]
  40909b:	ins    DWORD PTR es:[edi],dx
  40909c:	jbe    0x40905a
  40909e:	jbe    0x40903d
  4090a0:	dec    ecx
  4090a1:	stos   DWORD PTR es:[edi],eax
  4090a2:	dec    edx
  4090a3:	lock mov eax,0x5c626367
  4090a9:	adc    bl,0xe2
  4090ac:	push   edx
  4090ad:	int3   
  4090ae:	sbb    DWORD PTR [ebx+ebx*2+0x79],ebx
  4090b2:	sub    BYTE PTR [ecx+0x6b9ec93a],dl
  4090b8:	cld    
  4090b9:	dec    edx
  4090ba:	jae    0x4090bc
  4090bc:	and    DWORD PTR ds:0x5fabd4b2,0x8d2447c5
  4090c6:	xor    bh,bh
  4090c8:	fisub  DWORD PTR [edx-0x6]
  4090cb:	inc    ebp
  4090cc:	dec    esi
  4090cd:	push   esi
  4090ce:	pop    ebp
  4090cf:	lds    ebx,FWORD PTR [esi-0x4a]
  4090d2:	(bad)  
  4090d3:	retf   0x9b17
  4090d6:	je     0x4090e2
  4090d8:	mov    ah,0x49
  4090da:	dec    eax
  4090db:	pop    edi
  4090dc:	aad    0x4f
  4090de:	push   0xd06c8b0
  4090e3:	jp     0x4090ef
  4090e5:	fisubr DWORD PTR [esi+0x5]
  4090e8:	fstp   QWORD PTR [edx]
  4090ea:	js     0x4090f5
  4090ec:	sahf   
  4090ed:	ret    0x4d31
  4090f0:	les    edx,FWORD PTR [eax+0x637d2dc]
  4090f6:	adc    ebp,DWORD PTR [ecx+0x19d42980]
  4090fc:	inc    ecx
  4090fd:	lds    edi,FWORD PTR [ebx]
  4090ff:	test   al,0xc9
  409101:	pop    DWORD PTR [ecx]
  409103:	pop    eax
  409104:	xchg   ebp,eax
  409105:	pop    esi
  409106:	cld    
  409107:	jns    0x4090ac
  409109:	adc    esi,ebx
  40910b:	cmp    ch,BYTE PTR [ecx+ebx*4]
  40910e:	cmp    DWORD PTR [edi],esp
  409110:	call   0x91e1:0xc85e7efe
  409117:	pushf  
  409118:	clc    
  409119:	out    dx,eax
  40911a:	sti    
  40911b:	imul   edi,DWORD PTR [edi+0x4efe5cba],0xed429600
  409125:	das    
  409126:	dec    ebx
  409127:	mov    dh,0x7b
  409129:	add    esp,DWORD PTR [edi-0x28]
  40912c:	(bad)  
  40912d:	ja     0x409114
  40912f:	sbb    dl,dl
  409131:	add    bh,BYTE PTR [ecx+0x6f6c5d7e]
  409137:	sar    BYTE PTR [ebx],cl
  409139:	(bad)  
  40913a:	loop   0x40919b
  40913c:	jae    0x409145
  40913e:	xchg   edx,eax
  40913f:	push   cs
  409140:	int    0x88
  409142:	add    al,0xb
  409144:	in     al,dx
  409145:	pop    ebp
  409146:	addr16 cmp al,0x8c
  409149:	lods   eax,DWORD PTR ds:[esi]
  40914a:	xchg   edx,eax
  40914b:	inc    ebx
  40914c:	sub    DWORD PTR [edx+0x3bec1ffc],edx
  409152:	jns    0x409191
  409154:	(bad)  
  409156:	sub    eax,0x4f744edf
  40915b:	lods   al,BYTE PTR ds:[esi]
  40915c:	xchg   edi,eax
  40915d:	or     DWORD PTR [eax+0x4b],ebx
  409160:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409161:	repz push cs
  409163:	sar    DWORD PTR [edi-0x80],0x82
  409167:	(bad)  
  409169:	int3   
  40916a:	add    cl,bh
  40916c:	mov    al,0x92
  40916e:	lds    esi,FWORD PTR [edi]
  409170:	ret    0x2849
  409173:	push   esp
  409174:	sub    al,0x4d
  409176:	jns    0x40912a
  409178:	fisub  DWORD PTR [ecx+ecx*2-0x27051c9d]
  40917f:	outs   dx,DWORD PTR ds:[esi]
  409180:	scas   al,BYTE PTR es:[edi]
  409181:	sub    esp,0xc89aa91f
  409187:	sub    BYTE PTR [esi+0x7],dh
  40918a:	cmp    esp,ebp
  40918c:	inc    esp
  40918d:	shr    bl,0xa9
  409190:	loop   0x4091e3
  409192:	in     ax,dx
  409194:	pop    es
  409195:	and    ch,BYTE PTR gs:[ebp+0x76949439]
  40919c:	fwait
  40919d:	cmp    dl,BYTE PTR [edx-0x254f7389]
  4091a3:	xchg   esp,eax
  4091a4:	mov    al,0xff
  4091a6:	rcl    esi,0x35
  4091a9:	clc    
  4091aa:	test   BYTE PTR [edx+0x2f],0xfb
  4091ae:	in     al,dx
  4091af:	das    
  4091b0:	xor    BYTE PTR [edx+0x3c],bh
  4091b3:	xchg   edi,eax
  4091b4:	das    
  4091b5:	and    al,0xe5
  4091b7:	cmp    DWORD PTR [ebx-0x7e55ac0f],edi
  4091bd:	and    ebp,DWORD PTR [ebp-0x70]
  4091c0:	sar    BYTE PTR [ebx+0x34d64087],0xd3
  4091c7:	dec    esp
  4091c8:	xchg   edx,eax
  4091c9:	popa   
  4091ca:	push   ecx
  4091cb:	mov    bl,0xd
  4091cd:	mov    ch,0xb7
  4091cf:	xor    ah,cl
  4091d1:	jl     0x40920a
  4091d3:	mov    edx,0xa4ad4472
  4091d8:	scas   eax,DWORD PTR es:[edi]
  4091d9:	xchg   ecx,eax
  4091da:	adc    al,0x6b
  4091dc:	jl     0x40918a
  4091de:	and    al,0xe6
  4091e0:	(bad)  
  4091e1:	add    eax,0x43ca9eb4
  4091e6:	pop    es
  4091e7:	(bad)  
  4091e8:	mov    ebp,0x648224ac
  4091ed:	js     0x409257
  4091ef:	popa   
  4091f0:	fld    QWORD PTR [eax+0x19]
  4091f3:	outs   dx,DWORD PTR ds:[esi]
  4091f4:	fldenv [edi-0x16]
  4091f7:	or     al,0xee
  4091f9:	xlat   BYTE PTR ds:[ebx]
  4091fa:	adc    ch,bl
  4091fc:	test   edx,0xefc44572
  409202:	add    al,0xfa
  409204:	mov    al,ds:0x5fcddb6c
  409209:	push   esp
  40920a:	pop    ds
  40920b:	and    BYTE PTR [eax+0x7743cacd],0x58
  409212:	jnp    0x4091b8
  409214:	xor    bl,BYTE PTR [edi+0x64bd4805]
  40921a:	aam    0x1f
  40921c:	lods   eax,DWORD PTR ds:[esi]
  40921d:	int3   
  40921e:	ss fldz 
  409221:	mov    edi,0x8f98680b
  409226:	jecxz  0x40920a
  409228:	sbb    DWORD PTR [esi],ecx
  40922a:	dec    esi
  40922b:	push   ecx
  40922c:	lea    edx,[eax]
  40922e:	dec    edx
  40922f:	mov    eax,0xcace7f51
  409234:	and    eax,0xa0cc1e5a
  409239:	or     BYTE PTR [esp+edi*4+0x2a],ah
  40923d:	add    ebp,esi
  40923f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409240:	xchg   edi,eax
  409241:	push   es
  409242:	push   es
  409243:	add    al,0xa3
  409245:	xchg   edi,eax
  409246:	into   
  409247:	or     DWORD PTR [esp+ebp*8-0x75],ecx
  40924b:	mov    DWORD PTR [edx+ebx*1],edx
  40924e:	ret    0x8a59
  409251:	jl     0x409214
  409253:	sti    
  409254:	mov    dh,ch
  409256:	shr    BYTE PTR [esi+0x57],1
  409259:	inc    ebp
  40925a:	add    eax,0xe01b2e2d
  40925f:	stc    
  409260:	pop    esp
  409261:	ins    DWORD PTR es:[edi],dx
  409262:	and    bl,BYTE PTR [ebx+0x76]
  409265:	cmp    eax,0x5a5000b3
  40926a:	pop    ecx
  40926b:	daa    
  40926c:	ins    BYTE PTR es:[edi],dx
  40926d:	sti    
  40926e:	mov    ebp,ecx
  409270:	jle    0x40921f
  409272:	mov    dl,0xb6
  409274:	inc    edx
  409275:	inc    ebp
  409276:	repnz dec ebx
  409278:	bound  eax,QWORD PTR [ebx-0x2ada6e02]
  40927e:	xchg   esp,eax
  40927f:	out    0x52,al
  409281:	sub    DWORD PTR [ecx],esp
  409283:	add    esp,DWORD PTR [esi-0x19]
  409286:	xchg   edi,eax
  409287:	in     al,dx
  409288:	push   ecx
  409289:	dec    eax
  40928a:	js     0x40922a
  40928c:	jmp    0x4092c9
  40928e:	sub    bl,BYTE PTR [ecx]
  409290:	and    esi,ecx
  409292:	pop    esi
  409293:	ins    BYTE PTR es:[edi],dx
  409294:	repz fild QWORD PTR [ebp+0x43]
  409298:	and    DWORD PTR [ebx+esi*4+0x6c3ac3b0],ebp
  40929f:	int    0x5
  4092a1:	rcr    bh,0x20
  4092a4:	lods   eax,DWORD PTR ds:[esi]
  4092a5:	xchg   ecx,eax
  4092a6:	mov    esp,0x537d1898
  4092ab:	bound  edx,QWORD PTR [ebx+0x7962e2aa]
  4092b1:	popa   
  4092b2:	lds    esi,FWORD PTR [ebx]
  4092b4:	xchg   ebx,eax
  4092b5:	(bad)
  4092b8:	popf   
  4092b9:	imul   eax,eax,0xffffffbc
  4092bc:	pop    edx
  4092bd:	xor    ecx,ebp
  4092bf:	pop    eax
  4092c0:	aaa    
  4092c1:	bnd je 0x40927a
  4092c4:	ss push edi
  4092c6:	xchg   DWORD PTR [ecx-0x31],ecx
  4092c9:	rcr    DWORD PTR [edx+0x7d],0x61
  4092cd:	cdq    
  4092ce:	fsub   st(6),st
  4092d0:	and    ecx,DWORD PTR [edi]
  4092d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092d3:	stc    
  4092d4:	adc    al,0x66
  4092d6:	shl    BYTE PTR [edi],1
  4092d8:	or     bh,BYTE PTR [ebp+0x510774a8]
  4092de:	pusha  
  4092df:	mov    esp,ecx
  4092e1:	(bad)  
  4092e2:	(bad)  
  4092e3:	push   ss
  4092e4:	add    BYTE PTR [edx],bh
  4092e6:	lock xchg ecx,eax
  4092e8:	push   0x15
  4092ea:	or     al,BYTE PTR [ebp-0x2d62aac4]
  4092f0:	test   BYTE PTR [ecx+ebx*4+0x26b3cb5],ch
  4092f7:	mov    fs,ecx
  4092f9:	sub    bh,BYTE PTR [ecx+0x17810dae]
  4092ff:	(bad)  
  409300:	adc    al,0xa0
  409302:	jnp    0x409383
  409304:	sub    al,0x3b
  409306:	cmc    
  409307:	xor    ebp,esp
  409309:	test   BYTE PTR [ecx+0x43],dl
  40930c:	iret   
  40930d:	sbb    DWORD PTR [ebx],esp
  40930f:	std    
  409310:	jb     0x409352
  409312:	adc    eax,0x22020783
  409317:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409318:	pop    esp
  409319:	stos   BYTE PTR es:[edi],al
  40931a:	ins    DWORD PTR es:[edi],dx
  40931b:	retf   0xcb0b
  40931e:	cld    
  40931f:	les    ecx,FWORD PTR [edx-0x7ef8a8b2]
  409325:	dec    esp
  409326:	mov    DWORD PTR [edx-0x77],ebx
  409329:	push   esi
  40932a:	iret   
  40932b:	xor    eax,0xdb43810d
  409330:	mov    edi,0xb9f20bb5
  409335:	add    cl,BYTE PTR [eax]
  409337:	xor    eax,0xdedf5e50
  40933c:	pop    esi
  40933d:	xchg   esi,eax
  40933e:	mov    edi,ebp
  409340:	repnz fadd st,st(2)
  409343:	adc    BYTE PTR [ebx-0x4d538a71],0x41
  40934a:	fmul   QWORD PTR [esi+0x228a9389]
  409350:	(bad)  
  409352:	add    edi,DWORD PTR [ecx+eiz*8+0x5a]
  409356:	clc    
  409357:	xor    al,0x64
  409359:	test   esi,esi
  40935b:	add    eax,0xee95f385
  409360:	jmp    0xe618:0x76475cb1
  409367:	push   fs
  409369:	jb     0x409318
  40936b:	pushf  
  40936c:	fnstcw WORD PTR [edi]
  40936e:	cli    
  40936f:	out    dx,al
  409370:	mov    DWORD PTR [edi],eax
  409372:	jle    0x409301
  409374:	jl     0x4093a5
  409376:	add    edx,DWORD PTR [eax-0x15]
  409379:	outs   dx,BYTE PTR ds:[esi]
  40937a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40937b:	enter  0x40d5,0xa2
  40937f:	leave  
  409380:	mov    al,ds:0x8cc69092
  409385:	test   BYTE PTR [edx+0x7ac18471],bh
  40938b:	jecxz  0x4093cd
  40938d:	(bad)  
  40938f:	push   0x5d
  409391:	mov    esp,0xe0d6c8c7
  409396:	imul   DWORD PTR [ebx-0x6c4aa706]
  40939c:	ror    DWORD PTR gs:[eax+0x1b998d66],1
  4093a3:	jo     0x409374
  4093a5:	stos   BYTE PTR es:[edi],al
  4093a6:	mov    al,ds:0x31cff2a5
  4093ab:	xor    al,dl
  4093ad:	fstp   DWORD PTR [edi-0x130a635a]
  4093b3:	ins    BYTE PTR es:[edi],dx
  4093b4:	int3   
  4093b5:	sub    ecx,DWORD PTR [ebx+ecx*4]
  4093b8:	pushf  
  4093b9:	add    eax,DWORD PTR [edi-0x5ad6a87]
  4093bf:	jns    0x4093e7
  4093c1:	add    ebp,0xffffffe1
  4093c4:	mov    ah,0xea
  4093c6:	(bad)  
  4093c7:	das    
  4093c8:	mov    cl,0xa1
  4093ca:	test   DWORD PTR [ecx-0x73476f70],0x8bc1d5d3
  4093d4:	je     0x40938e
  4093d6:	pop    es
  4093d7:	pop    ss
  4093d8:	push   ebp
  4093d9:	and    eax,0x73a8a843
  4093de:	sbb    al,0x3b
  4093e0:	int    0x7a
  4093e2:	xchg   edx,eax
  4093e3:	and    al,0x23
  4093e5:	cmp    eax,0xfd32d0c2
  4093ea:	test   DWORD PTR [ecx],eax
  4093ec:	loopne 0x409434
  4093ee:	pop    esi
  4093ef:	xchg   ecx,eax
  4093f0:	imul   edi,DWORD PTR [ebx+0x29],0xd88b682e
  4093f7:	icebp  
  4093f8:	rcr    DWORD PTR [esi-0x169c1410],1
  4093fe:	arpl   WORD PTR [edx],di
  409400:	push   ss
  409401:	add    BYTE PTR [esi-0x10],bl
  409404:	popf   
  409405:	xchg   esp,eax
  409406:	mov    ah,0xa0
  409408:	xor    BYTE PTR [ebx+ecx*4],0xac
  40940c:	sbb    ebx,0x66f57ec4
  409412:	inc    ebp
  409413:	rcr    BYTE PTR [eax-0x30],1
  409416:	xchg   ebx,eax
  409417:	es sbb eax,0xe3f3fabc
  40941d:	bound  ecx,QWORD PTR [esi+0x77]
  409420:	pop    esi
  409421:	fild   DWORD PTR [ebx-0x31]
  409424:	sbb    eax,0x47779a09
  409429:	push   ebp
  40942a:	push   ecx
  40942b:	out    dx,eax
  40942c:	repz xchg ecx,eax
  40942e:	lods   eax,DWORD PTR ds:[esi]
  40942f:	out    0xcc,eax
  409431:	rol    ah,cl
  409433:	push   0x473abcec
  409438:	enter  0xa25,0xc4
  40943c:	add    ch,BYTE PTR [ebx-0x68]
  40943f:	add    al,0x79
  409441:	das    
  409442:	mov    dl,0x1b
  409444:	lods   al,BYTE PTR ds:[esi]
  409445:	jne    0x4093dd
  409447:	xor    esp,DWORD PTR [esi+eiz*4-0x5a]
  40944b:	mov    ebx,eax
  40944d:	das    
  40944e:	push   0x1c
  409450:	mov    eax,0x3ea6b00b
  409455:	adc    al,0xb
  409457:	js     0x409462
  409459:	sub    al,0x3c
  40945b:	or     al,ch
  40945d:	adc    DWORD PTR [esi+ecx*8-0x7a],0x52
  409462:	arpl   ax,bx
  409464:	mov    ebp,0x9ca4847b
  409469:	pushf  
  40946a:	add    esi,eax
  40946c:	jge    0x4094b9
  40946e:	jge    0x4094cf
  409470:	cwde   
  409471:	cmp    al,0x47
  409473:	outs   dx,BYTE PTR ds:[esi]
  409474:	xor    BYTE PTR [edx],dh
  409476:	xor    al,0xf8
  409478:	stos   DWORD PTR es:[edi],eax
  409479:	aas    
  40947a:	jbe    0x409499
  40947c:	out    0xe6,al
  40947e:	dec    ebp
  40947f:	and    BYTE PTR [edi-0x2b273fee],cl
  409485:	mov    al,0x22
  409487:	(bad)  [eax]
  409489:	pop    edx
  40948a:	jns    0x409485
  40948c:	jns    0x409472
  40948e:	call   esp
  409490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409491:	mov    ds:0xcb3456f9,eax
  409496:	xor    esp,DWORD PTR [edi]
  409498:	jmp    0x3433:0x1d6f8139
  40949f:	cmp    al,0x97
  4094a1:	mov    bl,bh
  4094a3:	mov    ecx,0xdcb9bfb6
  4094a8:	call   0xc454:0x104a4746
  4094af:	mov    ah,0xe2
  4094b1:	mov    bh,0xbd
  4094b3:	jmp    DWORD PTR [eax]
  4094b5:	fwait
  4094b6:	pushf  
  4094b7:	push   es
  4094b8:	test   DWORD PTR [esi+edi*4+0x3f],esi
  4094bc:	jg     0x4094d1
  4094be:	or     ah,al
  4094c0:	push   ebp
  4094c1:	cmp    BYTE PTR [ebx-0x4ec2db6e],cl
  4094c7:	ins    BYTE PTR es:[edi],dx
  4094c8:	pop    ds
  4094c9:	fisttp QWORD PTR [eax]
  4094cb:	scas   eax,DWORD PTR es:[edi]
  4094cc:	push   0x1dbc4e01
  4094d1:	sbb    al,0x25
  4094d3:	mov    ebp,0x173a3dec
  4094d8:	or     al,0xd3
  4094da:	sti    
  4094db:	clc    
  4094dc:	mov    ds:0xb4cac54c,al
  4094e1:	and    dh,BYTE PTR [eax]
  4094e3:	sti    
  4094e4:	jmp    0x907360ec
  4094e9:	cmp    ch,BYTE PTR [ebp-0x59]
  4094ec:	ins    DWORD PTR es:[edi],dx
  4094ed:	add    eax,0xa79c6e14
  4094f2:	test   eax,0xb6160baa
  4094f7:	loope  0x409534
  4094f9:	inc    ecx
  4094fa:	lods   eax,DWORD PTR ds:[esi]
  4094fb:	in     al,0xe1
  4094fd:	out    dx,al
  4094fe:	mov    ?,ebx
  409500:	out    dx,al
  409501:	mov    esp,0x611c5237
  409506:	mov    BYTE PTR [edx+ebx*1],ch
  409509:	mov    edx,DWORD PTR [ebp+0x12c1ef11]
  40950f:	out    0xa1,eax
  409511:	daa    
  409512:	jae    0x409529
  409514:	and    BYTE PTR [eax],bl
  409516:	rcl    BYTE PTR [edx-0x3e3f40b3],1
  40951c:	and    esp,eax
  40951e:	fldenv [ebx+0x26ff3855]
  409524:	adc    ch,bl
  409526:	dec    esp
  409527:	add    bl,BYTE PTR [eax]
  409529:	add    DWORD PTR [esi],esp
  40952b:	jmp    0xe8428f60
  409530:	repz fprem 
  409533:	mov    cl,0xd6
  409535:	ins    DWORD PTR es:[edi],dx
  409536:	repz sbb edx,DWORD PTR [eax+edx*2]
  40953a:	push   0xffffffa7
  40953c:	pop    ecx
  40953d:	or     cl,cl
  40953f:	pop    es
  409540:	adc    al,0x80
  409542:	mov    bl,0xcf
  409544:	mov    dl,0x75
  409546:	mov    dh,0xba
  409548:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409549:	jns    0x409589
  40954b:	aas    
  40954c:	adc    al,0x8
  40954e:	int3   
  40954f:	mov    DWORD PTR fs:[ebx+ecx*8],ecx
  409553:	sbb    BYTE PTR [esi+0x177d87ee],bh
  409559:	sub    ah,al
  40955b:	repnz iret 
  40955d:	mov    DWORD PTR [edx],esi
  40955f:	fmul   DWORD PTR [eax-0x40324237]
  409565:	jl     0x4094ee
  409567:	jae    0x409557
  409569:	dec    ebx
  40956a:	add    eax,0xaa1fa396
  40956f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409570:	clc    
  409571:	pop    ss
  409572:	lock inc BYTE PTR ds:0xb3b9a03e
  409579:	pop    es
  40957a:	gs jmp 0xba53fc4f
  409580:	fld    DWORD PTR [edx+0x40b3e91c]
  409586:	ds push ss
  409588:	push   0x26
  40958a:	adc    DWORD PTR [ecx+ecx*8],esp
  40958d:	not    DWORD PTR [edx+0x214129a]
  409593:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409594:	mov    ?,WORD PTR [edx+0x2f255ec6]
  40959a:	sub    eax,0x6f9aeb95
  40959f:	and    DWORD PTR [edi+eiz*1+0x288843b6],esi
  4095a6:	pop    eax
  4095a7:	jl     0x409614
  4095a9:	cdq    
  4095aa:	mov    ebp,0x2083dde7
  4095af:	jnp    0x40956e
  4095b1:	test   BYTE PTR [esi+0x3c6f25c5],bl
  4095b7:	lea    esi,[eax+0x2f]
  4095ba:	jecxz  0x4095f1
  4095bc:	ret    
  4095bd:	xor    ecx,ebx
  4095bf:	sbb    eax,0x570e717c
  4095c4:	out    0x1d,al
  4095c6:	xor    BYTE PTR [edi-0x7f],0xf8
  4095ca:	pop    ds
  4095cb:	mov    edi,0x80203f2f
  4095d0:	lahf   
  4095d1:	(bad)  
  4095d3:	mov    dl,0x9e
  4095d5:	ret    
  4095d6:	imul   edi,DWORD PTR [eax+0x23],0xffffffbb
  4095da:	mov    eax,0xdeba5427
  4095df:	or     eax,0xd63c1148
  4095e4:	test   ebp,ebx
  4095e6:	ins    BYTE PTR es:[edi],dx
  4095e7:	cmp    BYTE PTR [ebp-0x8],0x15
  4095eb:	jge    0x40957e
  4095ed:	and    eax,0xb54ba200
  4095f2:	leave  
  4095f3:	sbb    DWORD PTR [ecx+0xd],edi
  4095f6:	shl    DWORD PTR [ecx+edi*1],1
  4095f9:	adc    al,0xfe
  4095fb:	dec    ebx
  4095fc:	ss dec esi
  4095fe:	fld    QWORD PTR [edi-0x5729f2cc]
  409604:	ins    BYTE PTR es:[edi],dx
  409605:	ror    DWORD PTR [edi-0x5801a2e3],cl
  40960b:	xor    DWORD PTR [edi+0x6de080f1],0xc6b22130
  409615:	mov    ecx,0x46626914
  40961a:	out    dx,eax
  40961b:	cwde   
  40961c:	xchg   ecx,eax
  40961d:	popf   
  40961e:	ins    BYTE PTR es:[edi],dx
  40961f:	push   eax
  409620:	loope  0x409602
  409622:	cld    
  409623:	das    
  409624:	out    dx,al
  409625:	loop   0x4095da
  409627:	inc    esp
  409628:	xor    ebp,DWORD PTR [eiz*4-0x779dc766]
  40962f:	sub    al,0x6d
  409631:	lods   al,BYTE PTR ds:[esi]
  409632:	xor    esp,0x48
  409635:	repz jns 0x4096ae
  409638:	sub    eax,0xe7788a
  40963d:	push   ss
  40963e:	lahf   
  40963f:	fld    QWORD PTR [bp+0x7906]
  409644:	icebp  
  409645:	stos   DWORD PTR es:[edi],eax
  409646:	nop
  409647:	(bad)  
  409648:	in     eax,dx
  409649:	call   0x965af065
  40964e:	mov    ecx,0x8fe4354
  409653:	cmp    bl,ch
  409655:	lahf   
  409656:	jmp    DWORD PTR [eax+0x7]
  409659:	mov    BYTE PTR [ebx+0x1bce5af5],cl
  40965f:	adc    eax,0xc85b2586
  409664:	int    0xb0
  409666:	sti    
  409667:	loopne 0x409690
  409669:	jg     0x4096cb
  40966b:	aaa    
  40966c:	fs pop ecx
  40966e:	mov    edi,0x66b83aff
  409673:	jp     0x40960b
  409675:	jmp    DWORD PTR [eax-0x5f]
  409678:	out    dx,eax
  409679:	sub    eax,0xa26293df
  40967e:	aas    
  40967f:	and    BYTE PTR [edi+0x15],dl
  409682:	xchg   ch,cl
  409684:	ins    DWORD PTR es:[edi],dx
  409685:	loope  0x4096c0
  409687:	and    ecx,edi
  409689:	adc    DWORD PTR [edx-0x4a6d7c3e],eax
  40968f:	leave  
  409690:	push   esp
  409691:	mov    BYTE PTR [ebx+ecx*4],ah
  409694:	push   ds
  409695:	push   ebp
  409696:	cmp    al,0x52
  409698:	sub    edx,DWORD PTR [edx+0x3017d4b7]
  40969e:	ror    DWORD PTR [ecx],cl
  4096a0:	mov    esp,0x1e3cbdd9
  4096a5:	je     0x40968c
  4096a7:	mov    edx,0x8989901d
  4096ac:	stos   BYTE PTR es:[edi],al
  4096ad:	test   BYTE PTR es:[edx-0x7e6e9cb4],dl
  4096b4:	mov    bh,0x84
  4096b6:	fwait
  4096b7:	mov    BYTE PTR [edx-0x22cda2d2],ch
  4096bd:	repnz mov es,WORD PTR ds:0x640ba4fa
  4096c4:	ror    BYTE PTR [eax+0x59e26ab7],cl
  4096ca:	sub    al,0x78
  4096cc:	xchg   ecx,eax
  4096cd:	(bad)  [eax+edx*1]
  4096d0:	xchg   edi,eax
  4096d1:	gs xchg edx,eax
  4096d3:	push   esp
  4096d4:	mul    BYTE PTR [ebp-0x1c99c221]
  4096da:	dec    ebx
  4096db:	or     ch,0xc7
  4096de:	xor    esi,eax
  4096e0:	rol    eax,0xa
  4096e3:	fisubr DWORD PTR [ebp-0x59466a9d]
  4096e9:	jmp    0x4096e7
  4096eb:	xchg   edx,eax
  4096ec:	inc    esp
  4096ed:	addr16 adc eax,0xc0076b9
  4096f3:	or     BYTE PTR [ebp+0x3f],bl
  4096f6:	fdiv   DWORD PTR [esi+0x52]
  4096f9:	mov    ch,0xdd
  4096fb:	mov    edx,0x602a8118
  409700:	push   es
  409701:	pop    esi
  409702:	sub    ebx,DWORD PTR [esi-0x44f9443e]
  409708:	sub    al,0xf5
  40970a:	arpl   WORD PTR [edi],cx
  40970c:	mov    esp,0xc7a0574f
  409711:	arpl   WORD PTR [edx+0x57],cx
  409714:	stos   WORD PTR es:[edi],ax
  409716:	in     al,0xc9
  409718:	push   esi
  409719:	pop    ebx
  40971a:	inc    ebp
  40971b:	(bad)  
  40971c:	cwde   
  40971d:	shl    BYTE PTR ss:[ecx],1
  409720:	mov    eax,0x81891372
  409725:	jae    0x40971d
  409727:	adc    eax,0x5efd17ee
  40972c:	sub    eax,0x84f91490
  409731:	mov    edi,0x90213182
  409736:	repz adc DWORD PTR [edi-0x1e],0xffffffe2
  40973b:	mov    esi,0xad0b9124
  409740:	jl     0x4097a5
  409742:	dec    esp
  409743:	push   ecx
  409744:	cmp    ah,0x1b
  409747:	fnstcw WORD PTR [esi-0x78089974]
  40974d:	loopne 0x409700
  40974f:	int    0xe9
  409751:	fild   WORD PTR ds:0x3a276087
  409757:	test   al,0x4e
  409759:	mov    ebx,0x6792fc52
  40975e:	xor    DWORD PTR [ecx-0x7f],edx
  409761:	pop    esp
  409762:	push   esp
  409763:	and    eax,0xcd9ba7ad
  409768:	pop    esp
  409769:	fidivr WORD PTR [esi]
  40976b:	mov    edx,0x1bba0653
  409770:	adc    eax,0xb5ec07f9
  409775:	mov    bh,0x3e
  409777:	add    bl,BYTE PTR [esi]
  409779:	sub    ah,dl
  40977b:	fs and bh,dl
  40977e:	xchg   ebp,eax
  40977f:	dec    ecx
  409780:	fild   DWORD PTR [ecx]
  409782:	inc    eax
  409783:	in     eax,dx
  409784:	dec    edi
  409785:	jae    0x409762
  409787:	sub    DWORD PTR [ecx],0xfffffffe
  40978a:	cmp    eax,eax
  40978c:	setae  BYTE PTR [edx+0x1]
  409790:	dec    esi
  409791:	arpl   WORD PTR [ebx-0x6d],bp
  409794:	call   0xa97040fa
  409799:	adc    cl,bl
  40979b:	jg     0x409795
  40979d:	mov    edi,ebp
  40979f:	sti    
  4097a0:	mov    ah,0x85
  4097a2:	(bad)  
  4097a3:	lods   eax,DWORD PTR ds:[esi]
  4097a4:	xor    dl,bh
  4097a6:	mov    DWORD PTR [edx],eax
  4097a8:	sub    ebp,esi
  4097aa:	mov    ds:0xe7d4ad59,al
  4097af:	(bad)  
  4097b0:	pop    ecx
  4097b1:	or     DWORD PTR [edx],ebp
  4097b3:	stc    
  4097b4:	outs   dx,BYTE PTR ds:[esi]
  4097b5:	ja     0x409823
  4097b7:	or     dl,bl
  4097b9:	mov    WORD PTR [ebp-0x3b],cs
  4097bc:	pop    es
  4097bd:	dec    ecx
  4097be:	(bad)  
  4097bf:	stos   DWORD PTR es:[edi],eax
  4097c0:	xchg   ecx,eax
  4097c1:	mov    cl,BYTE PTR [ebp+0x4e343a73]
  4097c7:	jmp    0x1924:0xdb84cc9
  4097ce:	(bad)  
  4097cf:	cmp    eax,0xba22d656
  4097d4:	(bad)  
  4097d5:	dec    esp
  4097d6:	(bad)  
  4097d7:	xchg   esp,eax
  4097d8:	inc    ecx
  4097d9:	in     eax,0x4d
  4097db:	(bad)  
  4097dc:	aaa    
  4097dd:	(bad)  
  4097de:	adc    ch,BYTE PTR ds:0x20e09b9d
  4097e4:	or     ch,ch
  4097e6:	pop    ecx
  4097e7:	data16 cmc 
  4097e9:	inc    esi
  4097ea:	mov    eax,0x7587ae73
  4097ef:	outs   dx,DWORD PTR ds:[esi]
  4097f0:	dec    edx
  4097f1:	mov    bl,0xe3
  4097f3:	jp     0x409869
  4097f5:	sbb    DWORD PTR [eax-0x6cd2ec9c],edx
  4097fb:	je     0x3becb2bf
  409801:	sub    ebx,DWORD PTR [esi-0x4e7d963c]
  409807:	mov    dl,0x6e
  409809:	cmp    esi,DWORD PTR [eax-0x39]
  40980c:	push   ebx
  40980d:	dec    edi
  40980e:	cwde   
  40980f:	iret   
  409810:	mov    al,ds:0xc722bfa5
  409815:	mov    cl,0xe5
  409817:	popa   
  409818:	sub    DWORD PTR [ecx-0x7ec92b1a],edi
  40981e:	xchg   edx,eax
  40981f:	inc    ebp
  409820:	loope  0x409826
  409822:	daa    
  409823:	push   cs
  409824:	aam    0xdf
  409826:	fcomp  DWORD PTR [ebp+0x1]
  409829:	adc    DWORD PTR [esi],0xffffff9f
  40982c:	sbb    eax,0x963587b6
  409831:	jg     0x4098a8
  409833:	stc    
  409834:	outs   dx,BYTE PTR ds:[esi]
  409835:	ss jge 0x4098ad
  409838:	pop    ds
  409839:	push   es
  40983a:	or     al,0x1
  40983c:	(bad)  
  40983d:	pop    ebp
  40983e:	pop    esi
  40983f:	int    0x42
  409841:	je     0x40982f
  409843:	mov    BYTE PTR [ebx],dl
  409845:	jns    0x40988b
  409847:	xor    DWORD PTR [esi-0x14],ebx
  40984a:	fs and ebx,ebp
  40984d:	add    DWORD PTR [esi+0x53],edi
  409850:	xchg   ecx,eax
  409851:	jne    0x4097d4
  409853:	push   ss
  409854:	sub    eax,0x96d543a5
  409859:	sbb    dh,ch
  40985b:	mov    al,ds:0x2966356f
  409860:	imul   edi,DWORD PTR [ecx-0xd],0x3
  409864:	lahf   
  409865:	nop
  409866:	mov    al,0xc1
  409868:	xor    al,0x92
  40986a:	cmc    
  40986b:	enter  0xe4b8,0xce
  40986f:	ficomp DWORD PTR [ecx]
  409871:	and    BYTE PTR [ecx-0x2b],al
  409874:	lock cli 
  409876:	(bad)  
  409878:	stc    
  409879:	pop    ss
  40987a:	test   eax,0x2b9cdf23
  40987f:	jp     0x4098a1
  409881:	xchg   edx,eax
  409882:	ror    BYTE PTR [esi+0x7fb5242f],0x27
  409889:	out    dx,al
  40988a:	adc    DWORD PTR [ebp-0x2aa65ce2],edi
  409890:	dec    ecx
  409891:	test   bl,bl
  409893:	or     dh,cl
  409895:	or     al,0x7c
  409897:	lahf   
  409898:	inc    ecx
  409899:	iret   
  40989a:	mov    BYTE PTR [edx+edi*8-0x70dace3a],bl
  4098a1:	rcl    DWORD PTR [di+0x6731],0x12
  4098a7:	add    cl,cl
  4098a9:	mov    bh,BYTE PTR [edx-0x11b70510]
  4098af:	cmp    dh,dl
  4098b1:	cmp    al,0x52
  4098b3:	mov    eax,DWORD PTR [ebx-0x10d0ce42]
  4098b9:	mov    ebx,ds
  4098bb:	jns    0x4098ff
  4098bd:	mov    cl,0xba
  4098bf:	or     DWORD PTR [edi],edi
  4098c1:	xchg   ecx,eax
  4098c2:	in     al,0x5d
  4098c4:	xchg   esi,eax
  4098c5:	fiadd  WORD PTR [edx+edx*1+0x38]
  4098c9:	or     esi,DWORD PTR [ebx]
  4098cb:	das    
  4098cc:	pop    esi
  4098cd:	mov    esp,0x29351a72
  4098d2:	lods   eax,DWORD PTR ds:[esi]
  4098d3:	ins    BYTE PTR es:[edi],dx
  4098d4:	rcl    DWORD PTR [eax-0x170e1faf],0x3f
  4098db:	shl    BYTE PTR [ebx],0x1b
  4098de:	mov    ds:0x16760e17,al
  4098e3:	xchg   BYTE PTR ds:[esi+ebx*1+0x3],ch
  4098e8:	repnz in eax,0x36
  4098eb:	pop    ebx
  4098ec:	xor    DWORD PTR [ebp+eax*8-0x77e03808],esi
  4098f3:	push   edi
  4098f4:	pop    ebx
  4098f5:	adc    bh,BYTE PTR [edx+0x20e393f2]
  4098fb:	hlt    
  4098fc:	mov    ds:0x392627a6,eax
  409901:	push   ss
  409902:	fwait
  409903:	push   ebx
  409904:	dec    ebx
  409905:	dec    ebx
  409906:	cwde   
  409907:	fldenv [ebp+0x2313caae]
  40990d:	cmp    edx,ecx
  40990f:	fcom   st(1)
  409911:	sti    
  409912:	scas   al,BYTE PTR es:[edi]
  409913:	nop
  409914:	test   BYTE PTR [ebp-0x25376ba6],0x3f
  40991b:	add    ebp,ecx
  40991d:	mov    eax,ds:0xd6342e89
  409922:	ret    0x30a7
  409925:	icebp  
  409926:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409927:	fwait
  409928:	pop    es
  409929:	adc    edi,DWORD PTR [ecx+0x55]
  40992c:	cmovae ecx,esi
  40992f:	mov    edx,0x8379a4e6
  409934:	mov    ebx,0x5712b994
  409939:	dec    edi
  40993a:	lahf   
  40993b:	fucomp st(3)
  40993d:	popf   
  40993e:	pushf  
  40993f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409940:	adc    DWORD PTR es:[edx],ecx
  409943:	xor    eax,0xd74cf42e
  409948:	aam    0x3e
  40994a:	lock mov ds,esi
  40994d:	pop    eax
  40994e:	mov    cl,0x8e
  409950:	iret   
  409951:	(bad)  
  409952:	scas   al,BYTE PTR es:[edi]
  409953:	aaa    
  409954:	mov    BYTE PTR [edi],bl
  409956:	dec    eax
  409957:	push   edi
  409958:	(bad)  
  409959:	sub    ebp,esi
  40995b:	imul   esi,DWORD PTR [eax+0x2c3ec1e7],0x66
  409962:	push   0xc6431913
  409967:	inc    esi
  409968:	stos   DWORD PTR es:[edi],eax
  409969:	cli    
  40996a:	popa   
  40996b:	stos   BYTE PTR es:[edi],al
  40996c:	push   ds
  40996d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40996e:	imul   esi,DWORD PTR [esi],0xffffffa5
  409971:	push   ds
  409972:	jbe    0x409957
  409974:	rol    BYTE PTR [edi-0x5fc2efa3],0xfe
  40997b:	addr16 mov ebp,0xa4721fa4
  409981:	xlat   BYTE PTR ds:[ebx]
  409982:	cmp    eax,0xa39f5a9e
  409987:	ins    BYTE PTR es:[edi],dx
  409988:	mov    ecx,0x57c648d5
  40998d:	imul   BYTE PTR [esp+esi*2+0x2]
  409991:	pop    es
  409992:	arpl   WORD PTR [ebx],cx
  409994:	sahf   
  409995:	dec    ecx
  409996:	mov    DWORD PTR [ebx+0x7d],ebx
  409999:	xchg   edi,eax
  40999a:	xor    ch,bh
  40999c:	popf   
  40999d:	jnp    0x4099cf
  40999f:	and    eax,0x6ac7a84b
  4099a4:	inc    esi
  4099a5:	int3   
  4099a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099a7:	jmp    0xcedf:0x16b0d485
  4099ae:	pop    ss
  4099af:	adc    BYTE PTR ds:0xe44ea866,0xe4
  4099b6:	test   eax,0x1fc5ed7e
  4099bb:	mov    ah,0xde
  4099bd:	mov    edx,0x1256acdd
  4099c2:	imul   DWORD PTR [edi-0x65953bdf]
  4099c8:	int    0xa9
  4099ca:	fadd   QWORD PTR [eax]
  4099cc:	push   ss
  4099cd:	adc    BYTE PTR [ebx],cl
  4099cf:	lock push ebp
  4099d1:	int    0x35
  4099d3:	sahf   
  4099d4:	push   ebp
  4099d5:	shl    BYTE PTR [eax+0x3a],cl
  4099d8:	pop    ds
  4099d9:	sbb    DWORD PTR [ecx-0x7c],0xa
  4099dd:	cmp    BYTE PTR [ebp-0x56],ch
  4099e0:	in     eax,dx
  4099e1:	push   ds
  4099e2:	xor    al,0x9d
  4099e4:	xchg   edi,eax
  4099e5:	inc    esi
  4099e6:	fdiv   QWORD PTR [eax+0x44]
  4099e9:	lahf   
  4099ea:	inc    ecx
  4099eb:	xor    bl,BYTE PTR [edi]
  4099ed:	test   BYTE PTR [edi],al
  4099ef:	mov    ds:0x9d909d3b,eax
  4099f4:	push   0xa3fd5a89
  4099f9:	sub    BYTE PTR [eax],dh
  4099fb:	ret    0x9469
  4099fe:	adc    DWORD PTR [ebp-0x3a],esi
  409a01:	adc    BYTE PTR [ecx+0x51bcfe4c],al
  409a07:	icebp  
  409a08:	jle    0x409a0f
  409a0a:	sub    DWORD PTR [edx+0x26e51665],edi
  409a10:	rcl    BYTE PTR [ecx+0x6e67406],1
  409a16:	(bad)  
  409a17:	stos   DWORD PTR es:[edi],eax
  409a18:	std    
  409a19:	and    BYTE PTR [ecx+ebp*8+0x14],0x3a
  409a1e:	cmp    al,0x83
  409a20:	test   ebp,edx
  409a22:	enter  0x668c,0xc6
  409a26:	outs   dx,DWORD PTR ds:[esi]
  409a27:	cmp    BYTE PTR [eax-0x74],ah
  409a2a:	dec    esi
  409a2b:	push   ss
  409a2c:	mov    esp,0xffa27184
  409a31:	cmp    al,bh
  409a33:	lahf   
  409a34:	mov    fs,WORD PTR [edi-0x5589cdeb]
  409a3a:	jmp    0xfa777445
  409a3f:	stos   DWORD PTR es:[edi],eax
  409a40:	(bad)  
  409a41:	dec    edi
  409a42:	data16 jp 0x409a9e
  409a45:	jnp    0x409a1f
  409a47:	push   edx
  409a48:	xchg   ebx,eax
  409a49:	das    
  409a4a:	scas   eax,DWORD PTR es:[edi]
  409a4b:	sub    esp,DWORD PTR [edi-0x50]
  409a4e:	sti    
  409a4f:	cmp    edi,DWORD PTR [eax+0x2a]
  409a52:	inc    edi
  409a53:	cmc    
  409a54:	scas   al,BYTE PTR es:[edi]
  409a55:	fdivr  DWORD PTR [ecx]
  409a57:	dec    ecx
  409a58:	cmp    eax,0x8a267eb3
  409a5d:	cmp    al,0xec
  409a5f:	cs cld 
  409a61:	mov    ch,BYTE PTR [eax]
  409a63:	repz ss aaa 
  409a66:	lock push edi
  409a68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a69:	gs out 0x62,eax
  409a6c:	adc    al,0xfa
  409a6e:	gs xor al,0xd4
  409a71:	mov    dl,0x7b
  409a73:	pop    edx
  409a74:	pop    ebx
  409a75:	retf   0x242
  409a78:	nop
  409a79:	ja     0x4099fc
  409a7b:	inc    esi
  409a7c:	add    al,0xe5
  409a7e:	xchg   edx,eax
  409a7f:	daa    
  409a80:	mov    bh,0x16
  409a82:	or     al,0xff
  409a84:	xchg   edx,eax
  409a85:	adc    eax,0x191406e7
  409a8a:	sub    ch,ch
  409a8c:	movzx  ebp,cx
  409a8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a90:	pop    esp
  409a91:	sbb    esp,DWORD PTR [ecx-0x5e]
  409a94:	inc    edi
  409a95:	sub    eax,esp
  409a97:	jns    0x409a23
  409a99:	push   0xffffffee
  409a9b:	cs dec eax
  409a9d:	and    edx,eax
  409a9f:	jns    0x409ae0
  409aa1:	cdq    
  409aa2:	sub    al,0xd6
  409aa4:	in     eax,dx
  409aa5:	out    dx,al
  409aa6:	imul   edi,DWORD PTR [ebp+0x2b47956f],0xffffffa7
  409aad:	mov    dh,0x69
  409aaf:	inc    ebx
  409ab0:	jmp    0x86d5947d
  409ab5:	into   
  409ab6:	jmp    0x24e4:0xd4570040
  409abd:	test   BYTE PTR [eax+0x3b],0x57
  409ac1:	dec    ecx
  409ac2:	ins    DWORD PTR es:[edi],dx
  409ac3:	dec    esp
  409ac4:	daa    
  409ac5:	(bad)  
  409ac6:	xor    BYTE PTR [esi],0xa8
  409ac9:	xor    dh,bl
  409acb:	int3   
  409acc:	xor    esi,ebx
  409ace:	jns    0x409a89
  409ad0:	je     0x409a54
  409ad2:	dec    ebx
  409ad3:	iret   
  409ad4:	cli    
  409ad5:	jle    0x409b07
  409ad7:	ror    BYTE PTR [edx],cl
  409ad9:	sbb    al,0x74
  409adb:	jp     0x409ad2
  409add:	mov    bh,0xcf
  409adf:	sbb    DWORD PTR [edx+esi*8-0x23],0x79
  409ae4:	icebp  
  409ae5:	jle    0x409b2d
  409ae7:	dec    ecx
  409ae8:	xchg   ebp,eax
  409ae9:	push   esp
  409aea:	int    0xf3
  409aec:	mov    esp,0xedd358d5
  409af1:	ret    0xca45
  409af4:	adc    DWORD PTR [edx],ecx
  409af6:	add    esi,DWORD PTR [ebp+0x48fc3701]
  409afc:	push   eax
  409afd:	enter  0x58ef,0x1d
  409b01:	iret   
  409b02:	in     eax,0xe
  409b04:	lea    ecx,[esi]
  409b06:	sub    al,0xa9
  409b08:	pop    esp
  409b09:	push   0xa8e1ed66
  409b0e:	sub    edi,DWORD PTR [edx]
  409b10:	clc    
  409b11:	pop    ecx
  409b12:	in     al,dx
  409b13:	(bad)  
  409b14:	mul    DWORD PTR [eax-0x1e]
  409b17:	or     BYTE PTR [esi+edx*1],0x9f
  409b1b:	das    
  409b1c:	jecxz  0x409af7
  409b1e:	mov    DWORD PTR [edi+0x28c099c2],esi
  409b24:	jae    0x409b9c
  409b26:	mov    edi,0x536364db
  409b2b:	mov    cl,BYTE PTR [esi+0x42a4f15]
  409b31:	clc    
  409b32:	stos   DWORD PTR es:[edi],eax
  409b33:	in     al,dx
  409b34:	js     0x409b10
  409b36:	bswap  ebp
  409b38:	arpl   WORD PTR [eax+0x5feb3fbf],dx
  409b3e:	rcr    eax,cl
  409b40:	dec    edx
  409b41:	sahf   
  409b42:	mov    al,0xce
  409b44:	lds    ebp,FWORD PTR [esi+ecx*8+0x4c61a606]
  409b4b:	xchg   esp,ecx
  409b4d:	(bad)  
  409b4e:	sahf   
  409b4f:	dec    eax
  409b50:	xchg   edx,eax
  409b51:	ficomp WORD PTR [esi-0x11]
  409b54:	std    
  409b55:	mov    eax,ds:0xecef2ea0
  409b5a:	push   ebp
  409b5b:	and    BYTE PTR ds:0x6e142b1,bh
  409b61:	fsub   QWORD PTR [ebp-0x3]
  409b64:	sti    
  409b65:	xchg   ebp,eax
  409b66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b67:	ret    
  409b68:	adc    al,0x2a
  409b6a:	mov    bl,0x14
  409b6c:	mov    gs,WORD PTR ds:0x429e76d3
  409b72:	add    al,0xc2
  409b74:	xchg   ebx,eax
  409b75:	ja     0x409b2c
  409b77:	es or  al,0x53
  409b7a:	pushf  
  409b7b:	mov    DWORD PTR [edx-0xadf701d],edx
  409b81:	jo     0x409bdb
  409b83:	imul   ebp,DWORD PTR [eax-0x52bce52c],0x60
  409b8a:	jmp    0x78690c1
  409b8f:	jae    0x409bff
  409b91:	mov    dh,0xf0
  409b93:	out    0x3d,al
  409b95:	mov    ds:0x103f00f2,eax
  409b9a:	mov    cl,0xad
  409b9c:	scas   al,BYTE PTR es:[edi]
  409b9d:	inc    esi
  409b9e:	mov    esp,0x4d603ad0
  409ba3:	xlat   BYTE PTR ds:[ebx]
  409ba4:	cwde   
  409ba5:	ins    BYTE PTR es:[edi],dx
  409ba6:	dec    eax
  409ba7:	push   ebx
  409ba8:	add    al,0xf3
  409baa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bab:	push   es
  409bac:	cmc    
  409bad:	(bad)  
  409bae:	in     al,0xfd
  409bb0:	xor    edi,DWORD PTR [edx-0x388df30]
  409bb6:	or     al,0x4a
  409bb8:	push   edi
  409bb9:	(bad)  
  409bbb:	add    bl,ah
  409bbd:	sub    BYTE PTR [esi],bh
  409bbf:	dec    esp
  409bc0:	jecxz  0x409b71
  409bc2:	mov    bh,0xf
  409bc4:	stc    
  409bc5:	xchg   esi,eax
  409bc6:	push   ss
  409bc7:	cwde   
  409bc8:	cmp    eax,0x72846a7e
  409bcd:	out    dx,eax
  409bce:	mov    BYTE PTR [edx],0x9
  409bd1:	fistp  WORD PTR [eax+0x419b5c46]
  409bd7:	push   ds
  409bd8:	adc    al,0x63
  409bda:	inc    ebx
  409bdb:	jmp    0xb2e3bcb7
  409be0:	inc    eax
  409be1:	adc    al,0x86
  409be3:	cmp    ebp,DWORD PTR [esi]
  409be5:	pop    esp
  409be6:	push   ds
  409be7:	lea    edi,[esi]
  409be9:	push   ebx
  409bea:	call   edi
  409bec:	sub    bl,BYTE PTR [edx]
  409bee:	pop    ss
  409bef:	mov    bh,0x6a
  409bf1:	(bad)  
  409bf2:	test   eax,0xda725206
  409bf7:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  409bf9:	jmp    0x409be2
  409bfb:	mov    bl,0xb1
  409bfd:	push   edx
  409bfe:	dec    ecx
  409bff:	adc    edi,DWORD PTR [esi-0x651dbfd1]
  409c05:	sub    BYTE PTR [edx],cl
  409c07:	div    DWORD PTR [esi-0x32a431e7]
  409c0d:	or     bh,cl
  409c0f:	add    al,0xdd
  409c11:	mov    dl,0x26
  409c13:	xchg   BYTE PTR [edx+0x7a],dh
  409c16:	test   ebp,0x80774fde
  409c1c:	out    0x4f,eax
  409c1e:	jmp    0x72229643
  409c23:	retf   
  409c24:	pop    esp
  409c25:	jle    0x409bff
  409c27:	dec    esi
  409c28:	and    DWORD PTR [edi+0x2e0005fa],ecx
  409c2e:	aad    0x15
  409c30:	sub    ah,0x61
  409c33:	push   eax
  409c34:	mov    dh,0x21
  409c36:	mul    ecx
  409c38:	add    al,0x2b
  409c3a:	dec    edx
  409c3b:	lock ds and bh,al
  409c3f:	fwait
  409c40:	and    BYTE PTR [edi+edx*8+0x1d],dh
  409c44:	cld    
  409c45:	xor    edi,DWORD PTR [esi+eiz*2]
  409c48:	aaa    
  409c49:	sub    ecx,DWORD PTR [ecx-0x6203db7d]
  409c4f:	mov    ebp,0x3d18bb55
  409c54:	jb     0x409c7d
  409c56:	xor    eax,0xcf0b9adc
  409c5b:	mov    ch,BYTE PTR [ebp+ebx*2+0x7e14d0b0]
  409c62:	popa   
  409c63:	repnz lds edi,FWORD PTR [ecx+edi*4-0x2b]
  409c68:	repnz dec ecx
  409c6a:	das    
  409c6b:	mov    WORD PTR [esi+edi*2+0x25],gs
  409c6f:	push   edx
  409c70:	lea    esp,[eax+0x4]
  409c73:	jo     0x409c74
  409c75:	xor    al,0xe
  409c77:	or     dh,ah
  409c79:	sub    BYTE PTR [edi+0x463a0e93],0xd3
  409c80:	test   eax,0x50a46a06
  409c85:	add    ebp,DWORD PTR [esi]
  409c87:	mov    ebp,0x8d0025da
  409c8c:	cmp    al,0x6e
  409c8e:	retf   0x2d17
  409c91:	sti    
  409c92:	inc    ecx
  409c93:	fwait
  409c94:	jbe    0x409c55
  409c96:	jg     0x409c30
  409c98:	mov    DWORD PTR [ebx+ecx*2],ebx
  409c9b:	in     eax,0x65
  409c9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c9e:	loop   0x409c61
  409ca0:	sbb    edi,DWORD PTR [eax]
  409ca2:	jo     0x409c84
  409ca4:	xchg   esp,eax
  409ca5:	arpl   WORD PTR [esi-0x72],bp
  409ca8:	and    ah,BYTE PTR [edx]
  409caa:	pop    edx
  409cab:	adc    eax,ecx
  409cad:	enter  0xdc8b,0xc3
  409cb1:	pop    edi
  409cb2:	stos   DWORD PTR es:[edi],eax
  409cb3:	test   DWORD PTR [edx+0x2ea1ae1e],eax
  409cb9:	adc    esi,ecx
  409cbb:	or     esi,DWORD PTR [eax]
  409cbd:	jmp    0x409c50
  409cbf:	shr    DWORD PTR [edi],cl
  409cc1:	cmp    BYTE PTR [esi-0x18],0x86
  409cc5:	or     al,BYTE PTR [edi-0x4bf0e327]
  409ccb:	stos   BYTE PTR es:[edi],al
  409ccc:	fnstenv [ecx+esi*4-0x626c0ead]
  409cd3:	test   ebx,0x13fd5500
  409cd9:	gs (bad) 
  409cdb:	jo     0x409cc1
  409cdd:	imul   esi,DWORD PTR [ebp-0x14],0x756ad2c5
  409ce4:	push   esi
  409ce5:	jle    0x409ce8
  409ce7:	push   ds
  409ce8:	or     DWORD PTR [ebx+esi*4+0x425db041],ebx
  409cef:	mov    ?,WORD PTR [edi-0x47]
  409cf2:	scas   eax,DWORD PTR es:[edi]
  409cf3:	sti    
  409cf4:	das    
  409cf5:	shl    BYTE PTR [edi],0x3e
  409cf8:	or     eax,ecx
  409cfa:	(bad)  
  409cfb:	adc    eax,0x33ffa00a
  409d00:	sub    DWORD PTR [ebp-0x17061199],0x8ce68eb4
  409d0a:	outs   dx,DWORD PTR ds:[esi]
  409d0b:	(bad)  
  409d0c:	and    BYTE PTR ds:0x1b9167d7,bh
  409d12:	ret    
  409d13:	push   0x28
  409d15:	xchg   esp,eax
  409d16:	jmp    0x440d:0xc5f44a2f
  409d1d:	out    0xe8,eax
  409d1f:	arpl   WORD PTR [ecx+eiz*1-0xb],di
  409d23:	and    eax,0xc971feb2
  409d28:	lods   eax,DWORD PTR ds:[esi]
  409d29:	(bad)  
  409d2a:	jecxz  0x409cbe
  409d2c:	int3   
  409d2d:	dec    esi
  409d2e:	mov    fs,ebx
  409d30:	pop    es
  409d31:	cs dec ecx
  409d33:	js     0x409d2d
  409d35:	and    BYTE PTR [esi-0x539d6508],0xa9
  409d3c:	fmul   DWORD PTR [eax-0x4d]
  409d3f:	mov    dh,0x4a
  409d41:	inc    ecx
  409d42:	syscall 
  409d44:	push   0xffffffd2
  409d46:	cmp    al,0x4f
  409d48:	dec    ecx
  409d49:	loopne 0x409d00
  409d4b:	rcr    cl,0xbf
  409d4e:	call   DWORD PTR [eax-0x52b2782]
  409d54:	mov    ebx,0xa89ec4b2
  409d59:	jo     0x409d0a
  409d5b:	rcl    DWORD PTR [ebx-0x6c],1
  409d5e:	xchg   esi,eax
  409d5f:	les    ecx,FWORD PTR [eax-0x70284e74]
  409d65:	sbb    DWORD PTR [si+0x31],esi
  409d69:	call   ecx
  409d6b:	and    DWORD PTR [ebx],edi
  409d6d:	jg     0x409d9d
  409d6f:	jmp    0x6a48fe51
  409d74:	and    al,0x9c
  409d76:	and    DWORD PTR [ecx+0x1a],ecx
  409d79:	clc    
  409d7a:	in     al,0xc8
  409d7c:	xchg   edi,eax
  409d7d:	mov    dh,0x8b
  409d7f:	pusha  
  409d80:	fdivr  DWORD PTR [ebx-0x541de65e]
  409d86:	pop    ebp
  409d87:	jns    0x409da1
  409d89:	out    0x5b,al
  409d8b:	out    dx,eax
  409d8c:	dec    ebx
  409d8d:	daa    
  409d8e:	sbb    bh,BYTE PTR [ecx-0x21]
  409d91:	pusha  
  409d92:	shl    esp,1
  409d94:	dec    ebx
  409d95:	in     al,0xb5
  409d97:	rcl    BYTE PTR [edi+eax*4+0x7e],1
  409d9b:	rcr    DWORD PTR [ebp+eiz*1+0x14],0xba
  409da0:	lea    edi,[edx+0x71]
  409da3:	cld    
  409da4:	or     ah,BYTE PTR [edx+ebx*1]
  409da7:	cwde   
  409da8:	inc    eax
  409da9:	(bad)  
  409daa:	and    edx,DWORD PTR [edi]
  409dac:	mov    al,0xd4
  409dae:	outs   dx,BYTE PTR ds:[esi]
  409daf:	outs   dx,DWORD PTR ds:[esi]
  409db0:	dec    edx
  409db1:	pop    esi
  409db2:	dec    ebp
  409db3:	or     DWORD PTR cs:[esi+0x5f],esp
  409db7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409db8:	pop    ebp
  409db9:	or     DWORD PTR [eax-0x57],esi
  409dbc:	and    DWORD PTR [eax+edi*2-0x27],0xa611c194
  409dc4:	push   ecx
  409dc5:	jae    0x409d89
  409dc7:	fld    QWORD PTR [esi-0x534f524a]
  409dcd:	cdq    
  409dce:	outs   dx,BYTE PTR ds:[esi]
  409dcf:	icebp  
  409dd0:	fcomp  st(0)
  409dd2:	mov    al,ds:0x13abf0ac
  409dd7:	pop    eax
  409dd8:	cmp    BYTE PTR [esi-0x30],ah
  409ddb:	and    dh,BYTE PTR [eax-0x1a]
  409dde:	inc    ecx
  409ddf:	adc    eax,DWORD PTR [edx-0x3d1e8d2f]
  409de5:	cwde   
  409de6:	sar    DWORD PTR [ecx+edx*8-0x327d5b4b],0x37
  409dee:	retf   
  409def:	adc    BYTE PTR [esi+0x74],ch
  409df2:	lods   eax,DWORD PTR ds:[esi]
  409df3:	mov    edx,0x2c5d13
  409df8:	fsub   QWORD PTR [esi-0x1b]
  409dfb:	fwait
  409dfc:	sti    
  409dfd:	loopne 0x409e53
  409dff:	mov    bh,0x2a
  409e01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e02:	xor    eax,0x3aba72a7
  409e07:	jbe    0x409e85
  409e09:	shl    BYTE PTR cs:[ebx-0x36676fa6],cl
  409e10:	adc    BYTE PTR [edi-0x2f],0x4
  409e14:	inc    esi
  409e15:	ss pop ebx
  409e17:	ss push esp
  409e19:	test   al,0xf8
  409e1b:	std    
  409e1c:	xlat   BYTE PTR ds:[ebx]
  409e1d:	(bad)  
  409e1f:	adc    dl,dh
  409e21:	add    BYTE PTR [esi-0x67],cl
  409e24:	push   edi
  409e25:	fmul   st(7),st
  409e27:	adc    BYTE PTR [ecx+0x4362bef6],0xb1
  409e2e:	mov    eax,ds:0x8522f681
  409e33:	lods   eax,DWORD PTR ds:[esi]
  409e34:	push   0xfffffff7
  409e36:	jne    0x409dd9
  409e38:	push   edi
  409e39:	add    eax,ebx
  409e3b:	push   cs
  409e3c:	add    eax,0x78548e3c
  409e41:	xchg   edx,eax
  409e42:	jb     0x409e56
  409e44:	mov    esi,0x981ce6c5
  409e49:	ficom  WORD PTR [ebp+0x2b5b61d4]
  409e4f:	popf   
  409e50:	or     DWORD PTR [ebp-0x2ec8852c],edx
  409e56:	call   0x15db:0x72e824af
  409e5d:	xchg   DWORD PTR [di+0x4e1],edx
  409e62:	daa    
  409e63:	(bad)  
  409e65:	ins    BYTE PTR es:[edi],dx
  409e66:	out    dx,al
  409e67:	dec    ecx
  409e68:	xchg   bl,cl
  409e6a:	xor    edx,ecx
  409e6c:	test   eax,0x18c50779
  409e71:	sub    ch,bl
  409e73:	inc    edi
  409e74:	mov    ecx,fs
  409e76:	xchg   esp,eax
  409e77:	in     eax,dx
  409e78:	xchg   edi,eax
  409e79:	stos   DWORD PTR es:[edi],eax
  409e7a:	in     eax,0xbb
  409e7c:	and    DWORD PTR [edx-0x48],esp
  409e7f:	out    dx,al
  409e80:	mov    esp,0xc1647231
  409e85:	xor    al,0xe4
  409e87:	xor    edx,ebx
  409e89:	cdq    
  409e8a:	jmp    0x8ec099d5
  409e8f:	stos   DWORD PTR es:[edi],eax
  409e90:	jbe    0x409e96
  409e92:	inc    edx
  409e93:	(bad)  
  409e94:	mov    edi,0x5b038c8
  409e99:	cmp    DWORD PTR [ecx-0x55],0xffffffc3
  409e9d:	dec    ecx
  409e9e:	jg     0x409ef8
  409ea0:	jl     0x409ecc
  409ea2:	pop    ds
  409ea3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ea4:	dec    ebx
  409ea5:	test   al,0xa5
  409ea7:	xchg   cl,al
  409ea9:	xchg   edi,eax
  409eaa:	sbb    BYTE PTR [esp+eax*8-0x5e435810],al
  409eb1:	adc    dh,BYTE PTR [eax]
  409eb3:	jg     0x409eda
  409eb5:	stos   DWORD PTR es:[edi],eax
  409eb6:	xchg   ecx,eax
  409eb7:	push   esp
  409eb8:	cld    
  409eb9:	or     BYTE PTR [ecx-0x573809bd],bl
  409ebf:	daa    
  409ec0:	sbb    eax,0x4d2c81e9
  409ec5:	xor    DWORD PTR [esi+edx*4],edi
  409ec8:	lods   al,BYTE PTR ds:[esi]
  409ec9:	lock adc esp,DWORD PTR [edi-0x3980a2e0]
  409ed0:	dec    esi
  409ed1:	shl    DWORD PTR [ebp+0x171d9aee],1
  409ed7:	xor    DWORD PTR [esi],ebp
  409ed9:	stc    
  409eda:	imul   esi,DWORD PTR [edx-0x45c11e03],0x3f
  409ee1:	adc    bl,BYTE PTR [ebx]
  409ee3:	inc    eax
  409ee4:	mov    cl,0xd6
  409ee6:	arpl   WORD PTR [ebx+0x2a],ax
  409ee9:	fld    TBYTE PTR [ebp+edi*2-0x6801bb20]
  409ef0:	xor    DWORD PTR [esi-0x14],edi
  409ef3:	inc    edx
  409ef4:	add    DWORD PTR [ebx],edx
  409ef6:	mov    cl,0x35
  409ef8:	in     eax,0x97
  409efa:	cmc    
  409efb:	sbb    al,0x65
  409efd:	mov    BYTE PTR [edi+0x61cff5e9],al
  409f03:	mov    bh,0x7
  409f05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f06:	mov    eax,DWORD PTR [edx]
  409f08:	fwait
  409f09:	sub    al,0x8e
  409f0b:	int3   
  409f0c:	dec    eax
  409f0d:	les    eax,FWORD PTR [ecx]
  409f0f:	cmp    DWORD PTR [edi+ebx*4-0x7b],edi
  409f13:	jns    0x91932738
  409f19:	scas   al,BYTE PTR es:[edi]
  409f1a:	ja     0x409f6b
  409f1c:	mov    ds:0xc33f497f,al
  409f21:	ins    BYTE PTR es:[edi],dx
  409f22:	sbb    eax,0xa264fb0c
  409f27:	push   ebx
  409f28:	push   ebp
  409f29:	(bad)  
  409f2a:	jp     0x409ee2
  409f2c:	and    al,0xe1
  409f2e:	xchg   edx,eax
  409f2f:	adc    BYTE PTR [edi+0x52],0xa9
  409f33:	icebp  
  409f34:	push   ds
  409f35:	fiadd  WORD PTR [ecx-0x63]
  409f38:	ds int 0x3d
  409f3b:	xor    edx,DWORD PTR [eax-0x441f031d]
  409f41:	mov    edi,0x6121395
  409f46:	ja     0x409eec
  409f48:	(bad)  [ecx+0xf]
  409f4b:	adc    al,0xed
  409f4d:	and    esi,edi
  409f4f:	leave  
  409f50:	jmp    0x64355eea
  409f55:	out    dx,eax
  409f56:	clc    
  409f57:	cli    
  409f58:	xchg   ecx,eax
  409f59:	pop    edi
  409f5a:	mov    esi,0xcedcb8e0
  409f5f:	inc    esp
  409f60:	imul   esp,DWORD PTR [eax],0xffffffc0
  409f63:	pop    ss
  409f64:	xchg   BYTE PTR [ecx],cl
  409f66:	add    al,0x78
  409f68:	mul    dl
  409f6a:	imul   eax,DWORD PTR [edx-0x432a5b6c],0xffffffe9
  409f71:	mov    esi,0x8bdfc226
  409f76:	push   0x35
  409f78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f79:	mov    ebx,0x68fcf82d
  409f7e:	jns    0x409f7a
  409f80:	lods   eax,DWORD PTR ds:[esi]
  409f81:	enter  0xf20f,0x98
  409f85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f86:	fs aaa 
  409f88:	rcl    edi,cl
  409f8a:	push   esi
  409f8b:	mov    eax,ds:0xeae7579b
  409f90:	pop    ebp
  409f91:	sub    eax,0xd257638e
  409f96:	jp     0x409f46
  409f98:	outs   dx,DWORD PTR ds:[esi]
  409f99:	lods   eax,DWORD PTR ds:[esi]
  409f9a:	mov    ah,0x9
  409f9c:	mov    al,BYTE PTR [edx]
  409f9e:	rol    DWORD PTR [edi+0x1eac2049],0x32
  409fa5:	ret    0x10a9
  409fa8:	mov    ebx,0x249f68eb
  409fad:	cmp    esp,DWORD PTR [esi-0x69]
  409fb0:	add    BYTE PTR [ebx+0x1d5befad],ah
  409fb6:	ja     0x409f67
  409fb8:	jnp    0x409f5b
  409fba:	ret    
  409fbb:	pop    ebp
  409fbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fbd:	inc    edi
  409fbe:	clc    
  409fbf:	push   ebp
  409fc0:	mov    esp,0x93aa5902
  409fc5:	imul   ebp,esi,0x5e85be47
  409fcb:	call   0x9f2e975
  409fd0:	mov    esp,0xa4a5c9e9
  409fd5:	popa   
  409fd6:	shl    BYTE PTR ds:0x155b1447,1
  409fdc:	cs ret 
  409fde:	call   0xd2e2d966
  409fe3:	push   esp
  409fe4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fe5:	mov    bl,0x7b
  409fe7:	fstp   TBYTE PTR [edx-0x4c]
  409fea:	test   eax,0xad317e41
  409fef:	data16 cmp al,0x33
  409ff2:	jge    0x409fe3
  409ff4:	sbb    DWORD PTR [esi+0x7b],edi
  409ff7:	inc    esp
  409ff8:	dec    ecx
  409ff9:	js     0x40a030
  409ffb:	popf   
  409ffc:	(bad)  [eax-0x39f5a317]
  40a002:	sbb    dl,cl
  40a004:	out    0x65,eax
  40a006:	test   bh,dl
  40a008:	jno    0x40a051
  40a00a:	ins    DWORD PTR es:[edi],dx
  40a00b:	(bad)  
  40a00c:	pop    ss
  40a00d:	je     0x40a00e
  40a00f:	aas    
  40a010:	add    edi,ebp
  40a012:	mov    dl,ah
  40a014:	jge    0x40a076
  40a016:	and    edi,0xffffffca
  40a019:	fucomip st,st(3)
  40a01b:	pushf  
  40a01c:	push   ebp
  40a01d:	iret   
  40a01e:	inc    ebx
  40a01f:	loop   0x40a035
  40a021:	inc    edi
  40a022:	jb     0x40a05f
  40a024:	xor    bl,bh
  40a026:	lds    ebp,FWORD PTR [edx-0x77]
  40a029:	into   
  40a02a:	lods   al,BYTE PTR ds:[esi]
  40a02b:	pop    ecx
  40a02c:	xor    eax,0xfa9a6491
  40a031:	mov    ebx,0xb510e8da
  40a036:	or     eax,0xfe8d6c50
  40a03b:	lahf   
  40a03c:	add    ch,BYTE PTR [edx]
  40a03e:	sahf   
  40a03f:	push   esi
  40a040:	in     eax,0x1d
  40a042:	push   cs
  40a043:	adc    dl,dh
  40a045:	lock mov edx,edi
  40a048:	add    eax,0x250d218
  40a04d:	or     bh,bl
  40a04f:	scas   eax,DWORD PTR es:[edi]
  40a050:	ja     0x40a045
  40a052:	pop    ebp
  40a053:	shr    BYTE PTR [edi],1
  40a055:	imul   edi,edi,0x4b
  40a058:	sub    ecx,DWORD PTR gs:[ebx+0x55427d1c]
  40a05f:	adc    bl,BYTE PTR [eax-0x66]
  40a062:	xchg   edi,esp
  40a064:	adc    BYTE PTR [edi+0x36],0xe0
  40a068:	fld    DWORD PTR ds:0x283f0d34
  40a06e:	(bad)  [esi+eax*8+0x7b]
  40a072:	shr    DWORD PTR [eax-0x24],cl
  40a075:	fidivr DWORD PTR [eax-0x1baa1b90]
  40a07b:	lock ret 0xdf1c
  40a07f:	cmp    ch,BYTE PTR [eax]
  40a081:	xchg   ebx,eax
  40a082:	pusha  
  40a083:	xor    edi,DWORD PTR [eax-0x6c4d816f]
  40a089:	mov    ds:0xf774eb1c,eax
  40a08e:	sbb    eax,0x432a9918
  40a093:	dec    ecx
  40a094:	dec    esi
  40a095:	xor    cl,BYTE PTR [eax+eiz*2-0x67]
  40a099:	jo     0x40a043
  40a09b:	in     al,0x51
  40a09d:	out    dx,eax
  40a09e:	ins    BYTE PTR es:[edi],dx
  40a09f:	fmul   QWORD PTR ds:0xfee769fd
  40a0a5:	lds    edx,FWORD PTR [eax+0x7c]
  40a0a8:	or     BYTE PTR [ecx-0x6ab812bb],al
  40a0ae:	inc    ebp
  40a0af:	inc    ebx
  40a0b0:	jbe    0x40a0f8
  40a0b2:	les    edi,FWORD PTR [ecx-0x35]
  40a0b5:	sti    
  40a0b6:	arpl   WORD PTR [edi+0x6ed7b17f],bx
  40a0bc:	lods   eax,DWORD PTR ds:[esi]
  40a0bd:	xchg   edx,eax
  40a0be:	test   al,0xbc
  40a0c0:	fist   DWORD PTR [eax]
  40a0c2:	mov    esi,0x4028813e
  40a0c7:	jne    0x40a148
  40a0c9:	mov    al,ds:0x139b51ce
  40a0ce:	loopne 0x40a05e
  40a0d0:	pusha  
  40a0d1:	pop    ds
  40a0d2:	jp     0x40a0d9
  40a0d4:	shr    ch,1
  40a0d6:	pop    esi
  40a0d7:	xchg   esi,eax
  40a0d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0d9:	and    esp,eax
  40a0db:	(bad)  
  40a0dc:	mov    esp,0x9451285f
  40a0e1:	add    DWORD PTR [ecx+0x1b],ebx
  40a0e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0e5:	fs mov ecx,0xc2781816
  40a0eb:	jle    0x40a14d
  40a0ed:	aas    
  40a0ee:	mov    al,0x28
  40a0f0:	fstp   QWORD PTR [eax]
  40a0f2:	xchg   sp,ax
  40a0f4:	aaa    
  40a0f5:	and    al,0x78
  40a0f7:	in     eax,dx
  40a0f8:	(bad)  
  40a0fa:	retf   0x2016
  40a0fd:	xor    dh,BYTE PTR [edi+ecx*4+0x79]
  40a101:	in     al,0xe3
  40a103:	push   0xfffffff3
  40a105:	popa   
  40a106:	push   es
  40a107:	xchg   ebx,eax
  40a108:	xor    DWORD PTR [eax-0x3b],eax
  40a10b:	out    dx,al
  40a10c:	pop    ebx
  40a10d:	cmc    
  40a10e:	mov    edx,0x2a3e999d
  40a113:	push   ecx
  40a114:	int    0x93
  40a116:	mov    DWORD PTR [ebp-0x4b2b641b],0xa6c483f4
  40a120:	or     dh,BYTE PTR [eax-0x16a49b5c]
  40a126:	add    al,0xa9
  40a128:	sub    eax,0x285dc64
  40a12d:	xor    al,BYTE PTR ds:0xc19fb115
  40a133:	mov    ?,ebx
  40a135:	and    al,0x95
  40a137:	cmp    eax,0x5ec48890
  40a13c:	inc    ebp
  40a13d:	js     0x40a15c
  40a13f:	push   eax
  40a140:	outs   dx,BYTE PTR ds:[esi]
  40a141:	and    bl,BYTE PTR [ebp+0x65]
  40a144:	punpcklbw mm2,DWORD PTR [ecx-0x61]
  40a148:	out    dx,eax
  40a149:	jo     0x40a1a1
  40a14b:	test   al,0xc8
  40a14d:	loop   0x40a189
  40a14f:	(bad)  
  40a150:	scas   eax,DWORD PTR es:[edi]
  40a151:	rcl    ecx,0x60
  40a154:	xor    cl,0xfe
  40a157:	and    DWORD PTR [edx-0x46],0x5ea690e7
  40a15e:	cmp    eax,0x4f79a202
  40a163:	stos   DWORD PTR es:[edi],eax
  40a164:	and    bh,BYTE PTR [edx+0x27]
  40a167:	jns    0x40a160
  40a169:	data16 mov BYTE PTR [esi+0x516e0a3e],cl
  40a170:	mov    esp,0x9b4c1bd0
  40a175:	adc    eax,0xe6ac7fef
  40a17a:	xchg   esi,eax
  40a17b:	inc    ecx
  40a17c:	sbb    DWORD PTR [edi+0x658fa019],ecx
  40a182:	les    esp,FWORD PTR [eax+0x15]
  40a185:	stc    
  40a186:	ret    0xb854
  40a189:	dec    ebx
  40a18a:	sar    DWORD PTR [eax+0x1b],1
  40a18d:	mov    ch,BYTE PTR [eax]
  40a18f:	imul   ecx,DWORD PTR [eax+0x5fb89bfa],0xffffffcf
  40a196:	cs jne 0x40a132
  40a199:	push   esi
  40a19a:	pop    eax
  40a19b:	nop
  40a19c:	iret   
  40a19d:	add    BYTE PTR [esi*1+0x13b54a9d],cl
  40a1a4:	retf   0x7b1e
  40a1a7:	in     al,dx
  40a1a8:	in     eax,0x79
  40a1aa:	(bad)
  40a1ae:	cdq    
  40a1af:	jmp    FWORD PTR [edi+0x8]
  40a1b2:	sub    esi,DWORD PTR [esi-0x3b]
  40a1b5:	push   0x3e47b443
  40a1ba:	jp     0x40a17f
  40a1bc:	adc    ebx,DWORD PTR [ecx+eiz*8]
  40a1bf:	push   ds
  40a1c0:	jge    0x40a16a
  40a1c2:	inc    eax
  40a1c3:	retf   
  40a1c4:	sbb    bh,al
  40a1c6:	xchg   ebp,eax
  40a1c7:	push   ss
  40a1c8:	test   eax,0xbc290cae
  40a1cd:	xor    al,0x75
  40a1cf:	sti    
  40a1d0:	or     DWORD PTR [ebx+0x58],ebx
  40a1d3:	and    al,0x5c
  40a1d5:	cwde   
  40a1d6:	test   BYTE PTR [ecx],ch
  40a1d8:	or     eax,0x185613f0
  40a1dd:	push   edi
  40a1de:	xchg   ebx,eax
  40a1df:	jge    0x40a1f7
  40a1e1:	xor    al,0xe8
  40a1e3:	stc    
  40a1e4:	push   ebx
  40a1e5:	cmp    esi,esp
  40a1e7:	add    DWORD PTR [edx+0x20fe139b],ebx
  40a1ed:	jp     0x40a1e8
  40a1ef:	xlat   BYTE PTR ds:[ebx]
  40a1f0:	arpl   dx,si
  40a1f2:	mov    BYTE PTR [ebx+0x18],dh
  40a1f5:	mov    ch,0x6d
  40a1f7:	mov    bh,0x84
  40a1f9:	push   0x32
  40a1fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1fc:	loope  0x40a262
  40a1fe:	out    0xa7,al
  40a200:	je     0x40a194
  40a202:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a203:	repnz mov cl,0x70
  40a206:	cmp    al,0xb0
  40a208:	inc    esi
  40a209:	pop    ebx
  40a20a:	xor    eax,0x7e082b7d
  40a20f:	ins    DWORD PTR es:[edi],dx
  40a210:	jbe    0x40a199
  40a212:	add    eax,0x53beecf
  40a217:	test   BYTE PTR [edi+0x3d],0x5b
  40a21b:	call   0x83ff14b4
  40a220:	xchg   edx,eax
  40a221:	cmp    BYTE PTR [ebx],0xe0
  40a224:	mov    ebx,0x50d35aed
  40a229:	pop    edi
  40a22a:	lea    esi,[ebx+edi*1+0x7d]
  40a22e:	jb     0x40a271
  40a230:	leave  
  40a231:	ds ret 
  40a233:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a234:	xlat   BYTE PTR ds:[ebx]
  40a235:	repz neg ebp
  40a238:	sti    
  40a239:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a23a:	into   
  40a23b:	fimul  WORD PTR [esp+esi*8]
  40a23e:	adc    dl,dl
  40a240:	xchg   ecx,eax
  40a241:	push   ebp
  40a242:	enter  0xf106,0x8d
  40a246:	push   edx
  40a247:	mov    ds:0x98b45519,eax
  40a24c:	outs   dx,BYTE PTR ds:[esi]
  40a24d:	jo     0x40a1ff
  40a24f:	pop    eax
  40a250:	add    BYTE PTR [edx],0xf1
  40a253:	pop    ebp
  40a254:	mov    ch,BYTE PTR [ecx+0x9]
  40a257:	nop
  40a258:	sub    eax,DWORD PTR [edi+0x60be5f7c]
  40a25e:	dec    esi
  40a25f:	and    edx,DWORD PTR [ecx-0x4772845f]
  40a265:	lods   eax,DWORD PTR ds:[esi]
  40a266:	mov    dl,0x4a
  40a268:	jno    0x40a21e
  40a26a:	push   cs
  40a26b:	xor    al,0x1e
  40a26d:	test   eax,0x78e29905
  40a272:	mov    edi,0x6561732
  40a277:	xor    DWORD PTR [esi+0x39b21fd9],0x68
  40a27e:	ins    DWORD PTR es:[edi],dx
  40a27f:	cmp    ecx,DWORD PTR [ecx]
  40a281:	inc    ecx
  40a282:	add    bh,BYTE PTR [edx]
  40a284:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a285:	(bad)  
  40a288:	test   eax,0xc3b6e88a
  40a28d:	imul   eax,DWORD PTR [edi+0x17325538],0x42
  40a294:	xchg   esi,eax
  40a295:	icebp  
  40a296:	mov    dl,0x6e
  40a298:	or     bl,BYTE PTR [ecx-0x55]
  40a29b:	pop    ecx
  40a29c:	adc    al,0x36
  40a29e:	sbb    al,0xb1
  40a2a0:	fldl2t 
  40a2a2:	fdiv   QWORD PTR ds:0x62ee63b4
  40a2a8:	in     eax,0x4b
  40a2aa:	ins    DWORD PTR es:[edi],dx
  40a2ab:	repnz bound ebx,QWORD PTR [edi]
  40a2ae:	mov    al,0xd7
  40a2b0:	loopne 0x40a2c3
  40a2b2:	cs inc edx
  40a2b4:	mov    bl,0xf6
  40a2b6:	xchg   esp,eax
  40a2b7:	aas    
  40a2b8:	push   eax
  40a2b9:	inc    edx
  40a2ba:	sbb    edi,ebp
  40a2bc:	add    al,0xfe
  40a2be:	scas   al,BYTE PTR es:[edi]
  40a2bf:	daa    
  40a2c0:	fnsave [eax+0x14]
  40a2c3:	loop   0x40a298
  40a2c5:	retf   
  40a2c6:	out    dx,eax
  40a2c7:	or     al,0xc6
  40a2c9:	cdq    
  40a2ca:	add    ecx,DWORD PTR [eax]
  40a2cc:	sbb    BYTE PTR [ecx],0x37
  40a2cf:	retf   0x3612
  40a2d2:	clc    
  40a2d3:	cmp    eax,0xecb48f62
  40a2d8:	mov    gs,ebp
  40a2da:	xchg   esi,eax
  40a2db:	jp     0x40a2e1
  40a2dd:	xchg   DWORD PTR [ebx+0x27],ebx
  40a2e0:	ret    0xdbff
  40a2e3:	mov    ecx,0x9255e0f6
  40a2e8:	pop    es
  40a2e9:	mov    al,0x9f
  40a2eb:	pop    eax
  40a2ec:	cwde   
  40a2ed:	sbb    DWORD PTR [eax+0x9],0x4543ed0b
  40a2f4:	or     BYTE PTR [edx+0x68],0xd7
  40a2f8:	inc    edi
  40a2f9:	mov    DWORD PTR [ebx+ebx*1+0x6d7e5387],ecx
  40a300:	lea    ecx,[ebx+ebx*8+0x3a]
  40a304:	je     0x40a32f
  40a306:	sub    al,BYTE PTR [ebp+0x428e82e0]
  40a30c:	push   ecx
  40a30d:	xor    esi,DWORD PTR [ebx]
  40a30f:	push   cs
  40a310:	sar    DWORD PTR [ecx-0x19dcf286],1
  40a316:	mov    ds:0xec82b8dc,al
  40a31b:	mov    ah,0x8f
  40a31d:	(bad)  
  40a31e:	fnsave [eax-0x684c499b]
  40a324:	mov    esi,DWORD PTR [esp+ecx*4-0x9]
  40a328:	dec    ebp
  40a329:	and    bh,BYTE PTR [eax]
  40a32b:	add    BYTE PTR [eax-0x5b1fdabd],0xb7
  40a332:	push   ecx
  40a333:	jg     0x40a2db
  40a335:	fisttp WORD PTR [edx-0x9d297cf]
  40a33b:	push   ds
  40a33c:	xchg   edx,eax
  40a33d:	fcomp  DWORD PTR [eax+0x28]
  40a340:	(bad)  
  40a341:	xor    DWORD PTR [esp+esi*2+0x1f],eax
  40a345:	ret    0x6bb3
  40a348:	sbb    al,0x71
  40a34a:	and    al,0x76
  40a34c:	mov    eax,ds:0xeee7b9b0
  40a351:	hlt    
  40a352:	ror    DWORD PTR [esi+0x64],cl
  40a355:	leave  
  40a356:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a357:	or     esi,0xac0699fd
  40a35d:	arpl   WORD PTR [ebx],di
  40a35f:	fsub   QWORD PTR [ebp+0x4c45d9c6]
  40a365:	cmc    
  40a366:	scas   al,BYTE PTR es:[edi]
  40a367:	push   edx
  40a368:	mov    bh,0xd7
  40a36a:	cmp    al,0xd
  40a36c:	xchg   ecx,eax
  40a36d:	cld    
  40a36e:	and    al,bl
  40a370:	sar    BYTE PTR [ebx+0x2c],0xfd
  40a374:	sub    ah,ah
  40a376:	rcr    BYTE PTR [edi],1
  40a378:	sbb    al,0xd
  40a37a:	mov    ds:0xbc4ccc07,eax
  40a37f:	outs   dx,BYTE PTR ds:[esi]
  40a380:	push   es
  40a381:	xlat   BYTE PTR ds:[ebx]
  40a382:	js     0x40a3c1
  40a384:	(bad)  [ebx+0x43a8ad83]
  40a38a:	push   es
  40a38b:	mov    eax,0x2bc6bcec
  40a390:	xchg   ebx,eax
  40a391:	test   al,0x44
  40a393:	outs   dx,BYTE PTR ds:[esi]
  40a394:	sub    al,0x76
  40a396:	push   edi
  40a397:	inc    esi
  40a398:	test   DWORD PTR [esi+0xdefecbd],0x7243c6a1
  40a3a2:	add    eax,0xa72dc192
  40a3a7:	mov    ah,dh
  40a3a9:	popa   
  40a3aa:	repz (bad) 
  40a3ac:	jbe    0x40a3fa
  40a3ae:	or     al,0x42
  40a3b0:	arpl   WORD PTR [edx],bx
  40a3b2:	push   eax
  40a3b3:	data16 int3 
  40a3b5:	xlat   BYTE PTR ds:[ebx]
  40a3b6:	es xchg edx,eax
  40a3b8:	jb     0x40a3bd
  40a3ba:	lahf   
  40a3bb:	or     eax,0xd170aec6
  40a3c0:	sbb    eax,DWORD PTR [esi+0x75]
  40a3c3:	mov    dh,0x8
  40a3c5:	daa    
  40a3c6:	add    BYTE PTR [ebp+0x13],bh
  40a3c9:	out    dx,al
  40a3ca:	test   al,0xd3
  40a3cc:	ins    BYTE PTR es:[edi],dx
  40a3cd:	(bad)
  40a3d0:	and    eax,0xa7129ae5
  40a3d5:	in     al,dx
  40a3d6:	clc    
  40a3d7:	mov    esi,0x7abbebc1
  40a3dc:	in     eax,dx
  40a3dd:	sub    esp,DWORD PTR [ebp-0x2818530c]
  40a3e3:	in     al,dx
  40a3e4:	inc    eax
  40a3e5:	retf   0xbf42
  40a3e8:	xor    dh,bh
  40a3ea:	and    eax,0xc9fde82e
  40a3ef:	cmp    esp,DWORD PTR [edi+0x30]
  40a3f2:	in     al,0x90
  40a3f4:	dec    esi
  40a3f5:	test   BYTE PTR [ecx-0x3b6271b8],bh
  40a3fb:	cld    
  40a3fc:	dec    edi
  40a3fd:	(bad)  
  40a3fe:	jnp    0x40a401
  40a400:	cli    
  40a401:	ror    dh,0xab
  40a404:	push   eax
  40a405:	ss add al,0xf0
  40a408:	jle    0x40a3ca
  40a40a:	test   al,0x34
  40a40c:	mov    ch,0xbd
  40a40e:	cmp    al,0x50
  40a410:	jecxz  0x40a3e3
  40a412:	ss pop esp
  40a414:	addr16 mov ebp,0x3fe35163
  40a41a:	cwde   
  40a41b:	sbb    DWORD PTR [esi],edi
  40a41d:	aad    0x86
  40a41f:	push   es
  40a420:	add    cl,BYTE PTR [edi-0x3462f7e6]
  40a426:	lahf   
  40a427:	nop
  40a428:	in     al,0x12
  40a42a:	ins    BYTE PTR es:[edi],dx
  40a42b:	jno    0x40a426
  40a42d:	push   edi
  40a42e:	cmp    bl,ah
  40a430:	push   ebx
  40a431:	adc    al,0x4c
  40a433:	pop    ecx
  40a434:	aad    0xd2
  40a436:	ret    
  40a437:	lock push ds
  40a439:	call   0x28c8:0x1d9eb789
  40a440:	xchg   edx,eax
  40a441:	xchg   ecx,eax
  40a442:	cdq    
  40a443:	or     al,0xf3
  40a445:	inc    ebp
  40a446:	xchg   BYTE PTR [esi-0x4c],ah
  40a449:	shl    eax,cl
  40a44b:	mov    ds:0x16ed357d,al
  40a450:	adc    ebx,DWORD PTR [ebp+0x57]
  40a453:	cmp    eax,0x5aacd154
  40a458:	adc    dh,dl
  40a45a:	xor    eax,DWORD PTR [ecx]
  40a45c:	mov    WORD PTR ds:0x906b0157,cs
  40a462:	dec    eax
  40a463:	nop
  40a464:	cwde   
  40a465:	repz inc eax
  40a467:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a468:	stos   DWORD PTR es:[edi],eax
  40a469:	lahf   
  40a46a:	fld    TBYTE PTR [edi+ebx*8]
  40a46d:	or     cl,BYTE PTR [eax+0x78e63d11]
  40a473:	push   cs
  40a474:	lds    edi,FWORD PTR [edx]
  40a476:	popf   
  40a477:	pop    ebx
  40a478:	lds    dx,DWORD PTR [eax+0x40]
  40a47c:	aaa    
  40a47d:	mov    edi,0x8ebbac94
  40a482:	inc    DWORD PTR [eax+0x0]
  40a485:	adc    dh,ah
  40a487:	shl    DWORD PTR [ecx-0x79],cl
  40a48a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a48b:	push   cs
  40a48c:	mov    al,ah
  40a48e:	cld    
  40a48f:	jge    0x40a41e
  40a491:	arpl   si,ax
  40a493:	xor    esi,DWORD PTR [ebx+0x29ff5adb]
  40a499:	ja     0x40a438
  40a49b:	inc    esi
  40a49c:	lods   al,BYTE PTR ds:[esi]
  40a49d:	(bad)  
  40a49e:	ins    DWORD PTR es:[edi],dx
  40a49f:	ret    0xd615
  40a4a2:	jge    0x40a468
  40a4a4:	sbb    ebp,DWORD PTR [ebx-0x504eed23]
  40a4aa:	cld    
  40a4ab:	jno    0x40a518
  40a4ad:	mov    bl,0x2e
  40a4af:	pop    ss
  40a4b0:	adc    eax,0xe0120b74
  40a4b5:	enter  0x5ddb,0x22
  40a4b9:	jle    0x40a516
  40a4bb:	sub    edi,DWORD PTR [ecx]
  40a4bd:	lods   al,BYTE PTR ds:[esi]
  40a4be:	in     eax,0x3
  40a4c0:	cmp    al,0x5e
  40a4c2:	nop
  40a4c3:	pushf  
  40a4c4:	enter  0x144c,0x4b
  40a4c8:	add    al,0xb3
  40a4ca:	dec    ebp
  40a4cb:	lahf   
  40a4cc:	pop    ecx
  40a4cd:	sub    DWORD PTR [ebp-0x5140dcb],0xffffffc5
  40a4d4:	fcomp  QWORD PTR [edx-0x77]
  40a4d7:	lods   eax,DWORD PTR ds:[esi]
  40a4d8:	iret   
  40a4d9:	push   0x4a
  40a4db:	sbb    al,BYTE PTR [eax]
  40a4dd:	xlat   BYTE PTR ds:[ebx]
  40a4de:	add    BYTE PTR [edx],cl
  40a4e0:	stc    
  40a4e1:	pusha  
  40a4e2:	stos   BYTE PTR es:[edi],al
  40a4e3:	mov    ch,0xf9
  40a4e5:	rcl    BYTE PTR [eax+0x2b],cl
  40a4e8:	push   ecx
  40a4e9:	mov    dl,0x53
  40a4eb:	pushf  
  40a4ec:	pop    ebx
  40a4ed:	(bad)  
  40a4ee:	cli    
  40a4ef:	or     BYTE PTR [ecx+edx*1-0x17],dh
  40a4f3:	push   ebp
  40a4f4:	xchg   DWORD PTR [eax-0x3],eax
  40a4f7:	call   0xec78fb6d
  40a4fc:	sub    al,0x18
  40a4fe:	cmp    ebp,esp
  40a500:	sub    al,0x58
  40a502:	test   al,0x6e
  40a504:	xlat   BYTE PTR fs:[ebx]
  40a506:	adc    BYTE PTR [edx-0x5e690a89],cl
  40a50c:	adc    DWORD PTR [edx],ebp
  40a50e:	dec    eax
  40a50f:	xor    al,0x6e
  40a511:	daa    
  40a512:	xchg   ebp,eax
  40a513:	inc    ebp
  40a514:	ret    
  40a515:	enter  0x3337,0xfe
  40a519:	sub    al,0x0
  40a51b:	xchg   edi,eax
  40a51c:	push   DWORD PTR [ebp+0x5a]
  40a51f:	fbld   TBYTE PTR [ecx]
  40a521:	popf   
  40a522:	out    dx,al
  40a523:	jmp    0x624a079
  40a528:	mov    ebp,0x96490f2
  40a52d:	(bad)  
  40a52e:	ins    DWORD PTR es:[edi],dx
  40a52f:	jnp    0x40a4b1
  40a531:	jb     0x40a4da
  40a533:	cmc    
  40a534:	out    dx,eax
  40a535:	or     BYTE PTR [edx],al
  40a537:	shl    ah,0x33
  40a53a:	test   DWORD PTR [edx],eax
  40a53c:	and    bl,BYTE PTR [ebx-0x51]
  40a53f:	mov    esi,0x8f9f5752
  40a544:	loop   0x40a4d9
  40a546:	loop   0x40a55b
  40a548:	nop
  40a549:	cs jb  0x40a52d
  40a54c:	in     al,dx
  40a54d:	iret   
  40a54e:	xor    eax,0xecc0bf12
  40a553:	mov    eax,0x269f9bff
  40a558:	dec    esp
  40a559:	sahf   
  40a55a:	jge    0x40a5a0
  40a55c:	ds fs pop es
  40a55f:	rcr    DWORD PTR ds:0xfa87466e,0x93
  40a566:	aaa    
  40a567:	fild   WORD PTR ds:[edx-0x3a5288bf]
  40a56e:	(bad)  
  40a56f:	push   ss
  40a570:	jnp    0x40a572
  40a572:	sbb    cl,dh
  40a574:	xchg   esp,eax
  40a575:	mov    dl,0xd7
  40a577:	clc    
  40a578:	push   eax
  40a579:	mov    es,WORD PTR [edi-0x31]
  40a57c:	mov    edi,0x6f92e29a
  40a581:	sahf   
  40a582:	out    dx,eax
  40a583:	sti    
  40a584:	(bad)  
  40a586:	dec    edx
  40a587:	mov    ds:0x9bfab2f5,al
  40a58c:	push   edx
  40a58d:	lock cld 
  40a58f:	cmp    BYTE PTR [edi-0x201f56ac],ch
  40a595:	into   
  40a596:	cs retf 0x89c8
  40a59a:	and    al,0xce
  40a59c:	cmp    al,BYTE PTR [esi]
  40a59e:	sahf   
  40a59f:	pop    eax
  40a5a0:	pop    esp
  40a5a1:	loope  0x40a602
  40a5a3:	inc    esi
  40a5a4:	shl    BYTE PTR [ebx-0x24],cl
  40a5a7:	outs   dx,BYTE PTR ds:[esi]
  40a5a8:	add    eax,DWORD PTR [ebp+0x79]
  40a5ab:	ins    BYTE PTR es:[edi],dx
  40a5ac:	enter  0x60c4,0x1c
  40a5b0:	or     ah,cl
  40a5b2:	not    bh
  40a5b4:	push   eax
  40a5b5:	mov    al,0x82
  40a5b7:	and    BYTE PTR [ebx+edx*4+0x72f09ada],bh
  40a5be:	sub    esp,DWORD PTR [esi-0x145c8c17]
  40a5c4:	or     BYTE PTR [ebx+0x7a],bl
  40a5c7:	adc    eax,0xbded12c8
  40a5cc:	ds push cs
  40a5ce:	jne    0x40a562
  40a5d0:	daa    
  40a5d1:	cmp    ch,BYTE PTR [edx+0x21]
  40a5d4:	in     al,0x0
  40a5d6:	jne    0x40a635
  40a5d8:	and    ebp,DWORD PTR [edx]
  40a5da:	or     BYTE PTR [ebp-0x79c127d3],0x8c
  40a5e1:	test   al,0xeb
  40a5e3:	leave  
  40a5e4:	xor    BYTE PTR [esi],dh
  40a5e6:	(bad)
  40a5e9:	jg     0x40a5ea
  40a5eb:	jge    0x40a65b
  40a5ed:	mov    bh,0x8
  40a5ef:	jge    0x40a5ee
  40a5f1:	pop    edx
  40a5f2:	pop    edx
  40a5f3:	jecxz  0x40a5b7
  40a5f5:	mov    ebx,0x85ca1fc7
  40a5fa:	pop    edx
  40a5fb:	add    DWORD PTR [eax+0x57279704],ebx
  40a601:	mov    edx,0x70483de1
  40a606:	(bad)
  40a60a:	jmp    0x40a5ec
  40a60c:	xchg   esi,eax
  40a60d:	pop    es
  40a60e:	sbb    BYTE PTR [ebp-0x69c254b3],0x38
  40a615:	loopne 0x40a5cc
  40a617:	hlt    
  40a618:	lods   eax,DWORD PTR ds:[esi]
  40a619:	dec    ebp
  40a61a:	aad    0x8f
  40a61c:	sub    ah,dl
  40a61e:	push   ss
  40a61f:	xchg   ebx,eax
  40a620:	(bad)  
  40a621:	fdiv   DWORD PTR [eax+0x29]
  40a624:	es inc eax
  40a626:	push   esi
  40a627:	jl     0x40a5bf
  40a629:	je     0x40a630
  40a62b:	push   esp
  40a62c:	jl     0x40a685
  40a62e:	xchg   ebx,eax
  40a62f:	xor    DWORD PTR [esi],esp
  40a631:	pop    ebx
  40a632:	sub    ebp,eax
  40a634:	imul   edx,ebp,0xffffffcd
  40a637:	scas   al,BYTE PTR es:[edi]
  40a638:	fwait
  40a639:	mov    fs,WORD PTR [edx]
  40a63b:	jae    0x40a67e
  40a63d:	pop    DWORD PTR [edx-0x4b]
  40a640:	xlat   BYTE PTR ds:[bx]
  40a642:	in     eax,0x7b
  40a644:	jne    0x40a670
  40a646:	cmp    al,0xd1
  40a648:	pop    ebx
  40a649:	mov    ds:0xed0fe84a,eax
  40a64e:	cld    
  40a64f:	and    eax,0xc32916eb
  40a654:	fist   DWORD PTR [eax+ebx*8]
  40a657:	cli    
  40a658:	fldenv [esi-0x3e01cd7b]
  40a65e:	push   0x3c
  40a660:	data16 sbb BYTE PTR [edx-0x4],al
  40a664:	aas    
  40a665:	push   esi
  40a666:	dec    ebx
  40a667:	cs mov bl,0x8e
  40a66a:	retf   
  40a66b:	aad    0xa0
  40a66d:	or     BYTE PTR [ecx+0x4e],0xd0
  40a671:	xor    DWORD PTR [esi],ecx
  40a673:	inc    esp
  40a674:	lock (bad) 
  40a676:	sti    
  40a677:	je     0x40a61e
  40a679:	dec    ecx
  40a67a:	inc    edi
  40a67b:	mov    ah,0xaa
  40a67d:	aas    
  40a67e:	inc    edx
  40a67f:	shl    BYTE PTR [ecx+0x5a],cl
  40a682:	mov    esp,0xb0daa9b4
  40a687:	mov    dh,0x54
  40a689:	adc    ah,BYTE PTR [ebp+0xb388d96]
  40a68f:	test   DWORD PTR [edx+0x48dc6fce],ecx
  40a695:	outs   dx,DWORD PTR ds:[esi]
  40a696:	or     eax,DWORD PTR [ebx-0x3b05ea41]
  40a69c:	in     al,dx
  40a69d:	sbb    DWORD PTR [eax+0x6609613b],ebp
  40a6a3:	shl    edx,cl
  40a6a5:	pushf  
  40a6a6:	push   edx
  40a6a7:	aam    0xea
  40a6a9:	mov    ebx,0x1d09a019
  40a6ae:	sub    ebp,edi
  40a6b0:	fist   DWORD PTR [ecx]
  40a6b2:	(bad)  
  40a6b3:	pop    edi
  40a6b4:	mov    ebx,0x9a8952cc
  40a6b9:	sub    esp,DWORD PTR [ebp+0x69]
  40a6bc:	add    BYTE PTR [ebx+0x4ab4e53a],bl
  40a6c2:	pop    ebp
  40a6c3:	push   ebp
  40a6c4:	stos   DWORD PTR es:[edi],eax
  40a6c5:	pop    es
  40a6c6:	pusha  
  40a6c7:	pop    ds
  40a6c8:	pop    esp
  40a6c9:	popf   
  40a6ca:	je     0x40a6d6
  40a6cc:	shr    BYTE PTR [esi+0x245c9027],cl
  40a6d2:	rcl    BYTE PTR [eax-0x2b],cl
  40a6d5:	push   eax
  40a6d6:	or     ebp,edx
  40a6d8:	ret    0xe2ca
  40a6db:	pop    eax
  40a6dc:	mov    ecx,0x97525e6d
  40a6e1:	add    eax,0x58e56cbf
  40a6e6:	jl     0x40a68b
  40a6e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6e9:	and    BYTE PTR [ebx],ch
  40a6eb:	test   DWORD PTR [ebp+0x27f8d9b4],esp
  40a6f1:	cld    
  40a6f2:	adc    BYTE PTR [edx-0x48],bl
  40a6f5:	idiv   BYTE PTR [edx-0x35cabf53]
  40a6fb:	pop    ebx
  40a6fc:	inc    esi
  40a6fd:	pop    ebx
  40a6fe:	scas   al,BYTE PTR es:[edi]
  40a6ff:	cmc    
  40a700:	(bad)  
  40a701:	and    bl,BYTE PTR [edx]
  40a703:	ss pop ebp
  40a705:	ret    0xe6b4
  40a708:	mov    BYTE PTR [ebx-0x4c73d3e6],al
  40a70e:	aas    
  40a70f:	xor    al,0x61
  40a711:	fdiv   DWORD PTR [esi+0x5]
  40a714:	mov    bh,0xe9
  40a716:	xor    al,0xbf
  40a718:	pop    edx
  40a719:	fild   WORD PTR [eax+0xc]
  40a71c:	pushaw 
  40a71e:	out    0xc3,eax
  40a720:	sub    ebx,ebp
  40a722:	sbb    BYTE PTR [ebx+ebp*4],ch
  40a725:	jb     0x40a712
  40a727:	push   ds
  40a728:	std    
  40a729:	add    al,0x1c
  40a72b:	pop    ds
  40a72c:	mov    ah,0x57
  40a72e:	mov    ch,BYTE PTR [edx-0x4b3ca018]
  40a734:	mov    dl,0xe1
  40a736:	imul   eax,DWORD PTR [ecx],0xff8247d6
  40a73c:	mov    BYTE PTR [eax+eiz*1-0x52c3032e],0x60
  40a744:	lahf   
  40a745:	mov    dl,BYTE PTR [eax]
  40a747:	xchg   BYTE PTR [ecx+0x3ed60e55],bl
  40a74d:	cli    
  40a74e:	inc    eax
  40a74f:	std    
  40a750:	test   eax,0x39e834ae
  40a755:	fdivrp st(2),st
  40a758:	(bad)
  40a75b:	xchg   DWORD PTR [ecx],eax
  40a75d:	or     eax,0x6ef398e9
  40a762:	loopne 0x40a7a4
  40a764:	repz sbb ebp,DWORD PTR [edx-0x63]
  40a768:	adc    al,0xeb
  40a76a:	pop    ebx
  40a76b:	pop    eax
  40a76c:	enter  0x52fd,0xec
  40a770:	in     al,0x51
  40a772:	xor    al,0xa8
  40a774:	cmp    DWORD PTR [ebx],edx
  40a776:	aas    
  40a777:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a778:	push   0x84582b9b
  40a77d:	ja     0x40a798
  40a77f:	pop    edx
  40a780:	ret    0x5b53
  40a783:	cwde   
  40a784:	jle    0x40a7cf
  40a786:	add    dl,BYTE PTR [ecx]
  40a788:	cmc    
  40a789:	ret    
  40a78a:	sar    DWORD PTR [ebx-0x4e],0xf6
  40a78e:	gs ja  0x40a7fd
  40a791:	fwait
  40a792:	dec    edi
  40a793:	xor    bl,BYTE PTR [ebx-0x30]
  40a796:	not    DWORD PTR [edi+0x64]
  40a799:	jmp    0x6b9d0529
  40a79e:	sti    
  40a79f:	(bad)  
  40a7a0:	and    ch,BYTE PTR [ebx]
  40a7a2:	fs leave 
  40a7a4:	nop
  40a7a5:	es mov ah,0xe0
  40a7a8:	adc    eax,0x9f18d485
  40a7ad:	push   ebx
  40a7ae:	xchg   eax,edx
  40a7b0:	or     eax,0x2c598bd6
  40a7b6:	or     BYTE PTR [esi-0xbaa749e],dh
  40a7bc:	xor    eax,esi
  40a7be:	add    eax,edi
  40a7c0:	imul   eax,edx
  40a7c3:	mov    edx,DWORD PTR [ebp-0x5c]
  40a7c6:	xor    edx,esi
  40a7c8:	add    eax,edx
  40a7ca:	mov    edx,DWORD PTR [ebp-0x8]
  40a7cd:	movzx  eax,BYTE PTR [eax+edx*1+0x3272ef]
  40a7d5:	mov    edx,DWORD PTR [ebp-0x4c]
  40a7d8:	xor    edx,esi
  40a7da:	lea    eax,[edx+eax*1+0x3272ef]
  40a7e1:	movzx  edx,BYTE PTR [ebp-0x1]
  40a7e5:	xor    edx,eax
  40a7e7:	mov    BYTE PTR [ebp-0x1],dl
  40a7ea:	mov    al,BYTE PTR [ebp-0x1]
  40a7ed:	mov    edx,DWORD PTR [ebp-0x30]
  40a7f0:	mov    ebx,DWORD PTR [ebp-0xc]
  40a7f3:	xor    edx,esi
  40a7f5:	add    edx,edi
  40a7f7:	imul   edx,ebx
  40a7fa:	mov    ebx,DWORD PTR [ebp-0x8]
  40a7fd:	mov    BYTE PTR [edx+ebx*1],al
  40a800:	mov    eax,DWORD PTR [ebp-0x30]
  40a803:	mov    edx,DWORD PTR [ebp-0xc]
  40a806:	xor    eax,esi
  40a808:	add    eax,edi
  40a80a:	imul   eax,edx
  40a80d:	mov    edx,DWORD PTR [ebp-0x8]
  40a810:	mov    al,BYTE PTR [eax+edx*1]
  40a813:	mov    BYTE PTR [ebp-0x1],al
  40a816:	mov    eax,DWORD PTR [ebp-0x30]
  40a819:	mov    edx,DWORD PTR [ebp-0xc]
  40a81c:	xor    eax,esi
  40a81e:	add    eax,edi
  40a820:	imul   eax,edx
  40a823:	mov    edx,DWORD PTR [ebp-0x28]
  40a826:	xor    edx,esi
  40a828:	add    eax,edx
  40a82a:	mov    edx,DWORD PTR [ebp-0x8]
  40a82d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272ef]
  40a835:	mov    edx,DWORD PTR [ebp-0x50]
  40a838:	xor    edx,esi
  40a83a:	lea    eax,[edx+eax*1+0x3272ef]
  40a841:	movzx  edx,BYTE PTR [ebp-0x1]
  40a845:	xor    edx,eax
  40a847:	mov    BYTE PTR [ebp-0x1],dl
  40a84a:	mov    al,BYTE PTR [ebp-0x1]
  40a84d:	mov    edx,DWORD PTR [ebp-0x30]
  40a850:	mov    ebx,DWORD PTR [ebp-0xc]
  40a853:	xor    edx,esi
  40a855:	add    edx,edi
  40a857:	imul   edx,ebx
  40a85a:	mov    ebx,DWORD PTR [ebp-0x8]
  40a85d:	mov    BYTE PTR [edx+ebx*1],al
  40a860:	mov    eax,DWORD PTR [ebp-0x40]
  40a863:	mov    edx,DWORD PTR [ebp-0x28]
  40a866:	xor    eax,esi
  40a868:	xor    edx,esi
  40a86a:	add    eax,edi
  40a86c:	add    edx,edi
  40a86e:	imul   eax,edx
  40a871:	add    eax,DWORD PTR [ebp-0xc]
  40a874:	mov    DWORD PTR [ebp-0xc],eax
  40a877:	mov    eax,DWORD PTR [ebp-0xc]
  40a87a:	mov    edx,DWORD PTR [ebp-0x18]
  40a87d:	cmp    edx,eax
  40a87f:	jb     0x40604c
  40a885:	mov    eax,DWORD PTR [ebp-0x28]
  40a888:	mov    edx,DWORD PTR [ebp-0x18]
  40a88b:	xor    eax,esi
  40a88d:	add    eax,edi
  40a88f:	imul   eax,edx
  40a892:	mov    edx,DWORD PTR [ebp-0x1c]
  40a895:	xor    edx,esi
  40a897:	add    edx,edi
  40a899:	or     eax,edx
  40a89b:	mov    edx,DWORD PTR [ebp-0x20]
  40a89e:	xor    edx,esi
  40a8a0:	add    eax,edx
  40a8a2:	mov    edx,DWORD PTR [ebp-0x20]
  40a8a5:	xor    edx,esi
  40a8a7:	add    eax,edx
  40a8a9:	mov    edx,DWORD PTR [ebp-0x10]
  40a8ac:	lea    eax,[eax+edx*1+0x64e5de]
  40a8b3:	jmp    0x40a8c7
  40a8b8:	mov    eax,DWORD PTR [ebp-0x20]
  40a8bb:	mov    edx,DWORD PTR [ebp-0x10]
  40a8be:	xor    eax,esi
  40a8c0:	lea    eax,[eax+edx*1+0x3272ef]
  40a8c7:	mov    DWORD PTR [ebp-0x10],eax
  40a8ca:	jmp    0x405f99
  40a8cf:	mov    ebx,DWORD PTR [ebp-0x3c]
  40a8d2:	mov    eax,DWORD PTR [ebp+0xc]
  40a8d5:	xor    eax,esi
  40a8d7:	lea    ecx,[ecx+eax*1+0x3272ef]
  40a8de:	lea    eax,[ecx-0x3272ef]
  40a8e4:	xor    eax,esi
  40a8e6:	cmp    eax,0xf89c95b9
  40a8eb:	jne    0x405f3d
  40a8f1:	dec    DWORD PTR [ebp-0x34]
  40a8f4:	jne    0x405f31
  40a8fa:	mov    eax,DWORD PTR [ebp+0x8]
  40a8fd:	mov    ecx,DWORD PTR [ebp+0xc]
  40a900:	mov    edx,DWORD PTR [ebp+0x8]
  40a903:	xor    ecx,esi
  40a905:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272ef]
  40a90c:	xor    eax,esi
  40a90e:	mov    al,BYTE PTR [eax+ebx*1+0x3272ef]
  40a915:	xor    edx,esi
  40a917:	mov    BYTE PTR [edx+ebx*1+0x3272ef],cl
  40a91e:	mov    ecx,DWORD PTR [ebp+0xc]
  40a921:	xor    ecx,esi
  40a923:	mov    BYTE PTR [ecx+ebx*1+0x3272ef],al
  40a92a:	mov    eax,DWORD PTR [ebp+0xc]
  40a92d:	xor    eax,esi
  40a92f:	add    eax,edi
  40a931:	pop    edi
  40a932:	pop    esi
  40a933:	pop    ebx
  40a934:	leave  
  40a935:	ret    0x8
  40a938:	xor    eax,eax
  40a93a:	and    DWORD PTR ds:0x42a436,0x42a3da
  40a944:	inc    eax
  40a945:	ret    
  40a946:	push   ebp
  40a947:	mov    ebp,esp
  40a949:	sub    esp,0x38
  40a94c:	xor    DWORD PTR ds:0x42a3aa,ebx
  40a952:	jmp    0x40cd14
  40a957:	push   esp
  40a958:	cmp    BYTE PTR [ecx],0x21
  40a95b:	mov    ds:0xdb7b4481,eax
  40a960:	icebp  
  40a961:	cdq    
  40a962:	xchg   ebx,eax
  40a963:	sbb    BYTE PTR [ebx+0x0],0x82
  40a967:	(bad)  
  40a968:	hlt    
  40a969:	jp     0x40a9e5
  40a96b:	fstp   QWORD PTR [edi+0x7a]
  40a96e:	jp     0x40a9d9
  40a970:	or     ecx,DWORD PTR [edx]
  40a972:	jp     0x40a8fb
  40a974:	in     al,dx
  40a975:	xor    edi,DWORD PTR fs:[ecx-0x78]
  40a979:	ret    
  40a97a:	jmp    0x40a941
  40a97c:	rcl    BYTE PTR [ecx-0x1f],1
  40a97f:	test   DWORD PTR [eax],ecx
  40a981:	lods   al,BYTE PTR ds:[esi]
  40a982:	fdivr  st,st(5)
  40a984:	out    0xe5,eax
  40a986:	out    0x2e,al
  40a988:	and    esp,edi
  40a98a:	cmp    bl,BYTE PTR [ecx]
  40a98c:	arpl   WORD PTR [ebp-0x1c6936d5],dx
  40a992:	ds xchg esp,eax
  40a994:	daa    
  40a995:	inc    edi
  40a996:	mov    dh,0xfc
  40a998:	bound  ebx,QWORD PTR [edx+0x1b9a0786]
  40a99e:	loopne 0x40a9a6
  40a9a0:	add    al,bl
  40a9a2:	pop    edx
  40a9a3:	aaa    
  40a9a4:	retf   
  40a9a5:	sub    al,0x25
  40a9a7:	icebp  
  40a9a8:	cmp    ah,BYTE PTR [edi-0x18]
  40a9ab:	adc    edi,DWORD PTR [edx]
  40a9ad:	test   DWORD PTR [ebx-0x5b],edi
  40a9b0:	sub    esi,esi
  40a9b2:	adc    al,0x42
  40a9b4:	mov    esi,0x595b5d63
  40a9b9:	cmc    
  40a9ba:	pop    eax
  40a9bb:	cmp    esp,edi
  40a9bd:	xor    al,0x53
  40a9bf:	jb     0x40a942
  40a9c1:	lods   al,BYTE PTR ds:[esi]
  40a9c2:	adc    al,0xe
  40a9c4:	aad    0x88
  40a9c6:	int3   
  40a9c7:	mov    ecx,0xb2ef43c3
  40a9cc:	cmp    edx,edx
  40a9ce:	loope  0x40a972
  40a9d0:	or     BYTE PTR [esi],ah
  40a9d2:	enter  0xce58,0x9e
  40a9d6:	fmul   QWORD PTR [ebp-0x21a8de50]
  40a9dc:	scas   al,BYTE PTR es:[di]
  40a9de:	jg     0x40a974
  40a9e0:	enter  0x12ef,0xcd
  40a9e4:	pop    es
  40a9e5:	test   BYTE PTR [ecx],bl
  40a9e7:	(bad)  [ecx-0x72]
  40a9ea:	push   eax
  40a9eb:	pop    eax
  40a9ec:	clc    
  40a9ed:	dec    edi
  40a9ee:	jl     0x40a9f2
  40a9f0:	les    esp,FWORD PTR [esi-0x7f]
  40a9f3:	(bad)  
  40a9f4:	icebp  
  40a9f5:	jae    0x40aa2c
  40a9f7:	sub    ah,dh
  40a9f9:	clc    
  40a9fa:	sahf   
  40a9fb:	mov    ds:0xd87d8d10,al
  40aa00:	imul   ebx,edx,0xff6d9be2
  40aa06:	mov    ebp,0x7a267173
  40aa0b:	(bad)  
  40aa0c:	push   ds
  40aa0d:	xor    al,0x20
  40aa0f:	push   eax
  40aa10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa11:	call   0x50626a98
  40aa16:	add    al,dl
  40aa18:	adc    eax,0x45821bcb
  40aa1d:	loope  0x40a9dc
  40aa1f:	jne    0x40a9f1
  40aa21:	ds popa 
  40aa23:	xchg   edx,eax
  40aa24:	leave  
  40aa25:	fisubr WORD PTR [ecx]
  40aa27:	mov    bh,0xde
  40aa29:	cmp    eax,0x29530635
  40aa2e:	jp     0x40a9f4
  40aa30:	fidivr DWORD PTR [ebp-0x7b]
  40aa33:	sub    cl,BYTE PTR [ecx-0x5d]
  40aa36:	fcom   QWORD PTR [edx-0x5a2bcbf1]
  40aa3c:	(bad)  
  40aa3d:	adc    cl,BYTE PTR [edx-0x15]
  40aa40:	ins    BYTE PTR es:[edi],dx
  40aa41:	fadd   DWORD PTR [esi+0x4cb31e2d]
  40aa47:	bound  ebx,QWORD PTR [ecx-0x2a]
  40aa4a:	fcomp  DWORD PTR [ebx+0x59]
  40aa4d:	xlat   BYTE PTR ds:[ebx]
  40aa4e:	push   ecx
  40aa4f:	adc    edx,eax
  40aa51:	lahf   
  40aa52:	mov    ah,0xf7
  40aa54:	or     al,0xaf
  40aa56:	adc    DWORD PTR [eax-0x2e],edi
  40aa59:	ins    BYTE PTR es:[edi],dx
  40aa5a:	dec    ebp
  40aa5b:	cmp    al,0xa3
  40aa5d:	ins    BYTE PTR es:[edi],dx
  40aa5e:	jge    0x40aa2f
  40aa60:	fcomp  QWORD PTR [ebx+ebp*4-0x59b1c497]
  40aa67:	repz jns 0x40aa4b
  40aa6a:	jo     0x40aa3e
  40aa6c:	xor    esp,ecx
  40aa6e:	leave  
  40aa6f:	pusha  
  40aa70:	lods   al,BYTE PTR ds:[esi]
  40aa71:	jb     0x40aa67
  40aa73:	pop    edi
  40aa74:	retf   
  40aa75:	hlt    
  40aa76:	ror    DWORD PTR [eax+ebp*2+0x26e2d7f9],cl
  40aa7d:	popa   
  40aa7e:	jnp    0x40aa29
  40aa80:	adc    al,0x73
  40aa82:	les    eax,FWORD PTR ds:0x5e10d586
  40aa88:	in     al,0xa1
  40aa8a:	int    0xe7
  40aa8c:	mov    eax,esi
  40aa8e:	push   edi
  40aa8f:	mov    edi,0x4d9e3c07
  40aa94:	sbb    ebp,ecx
  40aa96:	sar    DWORD PTR [ecx+eax*8+0x43],1
  40aa9a:	addr16 retf 0x121
  40aa9e:	dec    ebx
  40aa9f:	aaa    
  40aaa0:	jae    0x40aac4
  40aaa2:	ins    DWORD PTR es:[edi],dx
  40aaa3:	dec    ebx
  40aaa4:	cmp    BYTE PTR [edi],bh
  40aaa6:	lock pushf 
  40aaa8:	test   DWORD PTR [esi],eax
  40aaaa:	mov    BYTE PTR [eax],dl
  40aaac:	mov    bl,0x67
  40aaae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aaaf:	cmp    ebp,DWORD PTR [eax+edi*4+0x21]
  40aab3:	sbb    al,0xfd
  40aab5:	aaa    
  40aab6:	cli    
  40aab7:	inc    ebp
  40aab8:	adc    edx,DWORD PTR [eax]
  40aaba:	jno    0x40ab1d
  40aabc:	outs   dx,BYTE PTR ds:[esi]
  40aabd:	push   ds
  40aabe:	retf   0xe625
  40aac1:	pop    ebp
  40aac2:	sbb    ah,ch
  40aac4:	and    eax,0xf5af5a44
  40aac9:	stos   DWORD PTR es:[edi],eax
  40aaca:	or     al,0x1
  40aacc:	pop    ecx
  40aacd:	pushf  
  40aace:	stos   DWORD PTR es:[edi],eax
  40aacf:	fld    TBYTE PTR [ebp+0x2c]
  40aad2:	or     BYTE PTR [edx+edx*1-0xd990290],bl
  40aad9:	sbb    eax,0xf7ce5d01
  40aade:	cld    
  40aadf:	dec    eax
  40aae0:	push   0xfffffff6
  40aae2:	dec    eax
  40aae3:	retf   0xb33c
  40aae6:	call   DWORD PTR [eax+0xba9b867]
  40aaec:	sbb    DWORD PTR [edi+ebp*1],0x339fc123
  40aaf3:	not    DWORD PTR [edx-0x74dc8db9]
  40aaf9:	cwde   
  40aafa:	in     eax,dx
  40aafb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aafc:	int3   
  40aafd:	stos   DWORD PTR es:[edi],eax
  40aafe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aaff:	xlat   BYTE PTR ds:[ebx]
  40ab00:	and    esp,DWORD PTR [edi+0x66ffd5aa]
  40ab06:	jmp    0x26c6ecc7
  40ab0b:	sbb    eax,DWORD PTR [eax]
  40ab0d:	rcr    DWORD PTR [eax+0x60],cl
  40ab10:	push   esp
  40ab11:	xor    eax,DWORD PTR [esp+ebx*1-0x60d84ee8]
  40ab18:	aad    0x29
  40ab1a:	mov    esp,0xa7b40925
  40ab1f:	dec    esp
  40ab20:	ins    DWORD PTR es:[edi],dx
  40ab21:	in     al,0xba
  40ab23:	fild   QWORD PTR [ecx-0x655ed648]
  40ab29:	inc    ebp
  40ab2a:	and    edi,DWORD PTR [esp+eiz*8]
  40ab2d:	push   cs
  40ab2e:	shl    DWORD PTR [edi],cl
  40ab30:	int3   
  40ab31:	jne    0x40ab48
  40ab33:	or     eax,0xaf44dc02
  40ab38:	xlat   BYTE PTR ds:[ebx]
  40ab39:	imul   ecx,DWORD PTR [edx+esi*8],0xffffffe9
  40ab3d:	jno    0x40ab93
  40ab3f:	daa    
  40ab40:	mov    eax,DWORD PTR [edx-0x36]
  40ab43:	iret   
  40ab44:	push   edi
  40ab45:	daa    
  40ab46:	and    al,0xd3
  40ab48:	jb     0x40abbe
  40ab4a:	cmp    dh,BYTE PTR [ebp+edx*4+0x5a]
  40ab4e:	push   eax
  40ab4f:	(bad)  
  40ab50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab51:	mov    bl,BYTE PTR [esi+0x7594085c]
  40ab57:	cdq    
  40ab58:	mov    cl,0x6b
  40ab5a:	push   0xffffff87
  40ab5c:	enter  0xe096,0x76
  40ab60:	xchg   ecx,eax
  40ab61:	jb     0x40ab24
  40ab63:	scas   eax,DWORD PTR es:[edi]
  40ab64:	mov    ebp,DWORD PTR [ecx+0x666211d4]
  40ab6a:	mov    dl,0x37
  40ab6c:	mov    edx,DWORD PTR [ebx-0x79b23b64]
  40ab72:	popa   
  40ab73:	adc    edi,DWORD PTR [ebx-0x7ffd7715]
  40ab79:	mov    dl,BYTE PTR [ecx+ebp*1+0x72]
  40ab7d:	(bad)  
  40ab7e:	int    0x88
  40ab80:	mov    al,ds:0x3b01a02f
  40ab85:	add    DWORD PTR [edx+0xe],0x65
  40ab89:	sbb    cl,BYTE PTR [edi]
  40ab8b:	loope  0x40abaf
  40ab8d:	cmp    ebx,DWORD PTR [edx+0x5c]
  40ab90:	pop    es
  40ab91:	ins    DWORD PTR es:[edi],dx
  40ab92:	in     al,0xdd
  40ab94:	test   al,0x60
  40ab96:	sub    DWORD PTR [ebp+ebx*1-0x406d8b18],edx
  40ab9d:	test   BYTE PTR [edx+0x5841dad0],ah
  40aba3:	sar    DWORD PTR ss:[ebp-0x619c8fd],cl
  40abaa:	fstp   QWORD PTR [esi-0x31878c32]
  40abb0:	and    DWORD PTR [eax+ecx*8],eax
  40abb3:	pop    edi
  40abb4:	repnz xor al,0x6
  40abb7:	cmp    esi,ebp
  40abb9:	mov    DWORD PTR [edi-0x480c8349],ebp
  40abbf:	jmp    0x284e3a26
  40abc4:	rcl    edx,0x67
  40abc7:	inc    eax
  40abc8:	cli    
  40abc9:	mov    ecx,0xc17cb5ea
  40abce:	jge    0x40ab6e
  40abd0:	push   esi
  40abd1:	push   esp
  40abd2:	mov    bh,0xba
  40abd4:	scas   al,BYTE PTR es:[edi]
  40abd5:	xor    edi,esp
  40abd7:	je     0x40ac02
  40abd9:	ds pop esp
  40abdb:	pop    eax
  40abdc:	ret    0xe0c1
  40abdf:	fst    DWORD PTR [edi-0x6a6b6cd8]
  40abe5:	arpl   WORD PTR ds:0x8dc45147,si
  40abeb:	adc    bl,BYTE PTR [eax-0x2c]
  40abee:	out    0xe6,al
  40abf0:	cdq    
  40abf1:	mov    edi,0x35d1b780
  40abf6:	pop    edx
  40abf7:	mov    ds:0xa1a764d6,eax
  40abfc:	and    dl,cl
  40abfe:	repz aam 0x6a
  40ac01:	stos   DWORD PTR es:[edi],eax
  40ac02:	dec    eax
  40ac03:	add    al,0xd4
  40ac05:	jg     0x40aba4
  40ac07:	shr    DWORD PTR [edi+0x7cb6f7d8],1
  40ac0d:	rol    ebp,1
  40ac0f:	mov    cl,BYTE PTR [edi]
  40ac11:	neg    BYTE PTR ds:0x878a5528
  40ac17:	push   ebp
  40ac18:	hlt    
  40ac19:	out    0x8e,eax
  40ac1b:	cmc    
  40ac1c:	dec    ebp
  40ac1d:	mov    edx,0x2aee970
  40ac22:	adc    ecx,DWORD PTR [ecx+0x54f6ad0c]
  40ac28:	jb     0x40ac63
  40ac2a:	aam    0xbf
  40ac2c:	mov    al,0x30
  40ac2e:	push   esp
  40ac2f:	data16 ds ss sub al,0x72
  40ac34:	mov    ds:0xb94ae7e5,al
  40ac39:	and    dh,BYTE PTR [esi]
  40ac3b:	or     bl,BYTE PTR [ecx-0x56cb1352]
  40ac41:	add    BYTE PTR [ecx-0xe2d597e],0x9f
  40ac48:	jl     0x40abd9
  40ac4a:	xor    al,0x81
  40ac4c:	xchg   ecx,eax
  40ac4d:	jne    0x40ac84
  40ac4f:	(bad)  
  40ac50:	fstp   st(5)
  40ac52:	arpl   WORD PTR [edi-0x5a],sp
  40ac55:	xor    ch,dh
  40ac57:	das    
  40ac58:	inc    esi
  40ac59:	call   0x72a3:0xe5dfbfba
  40ac60:	aaa    
  40ac61:	jecxz  0x40ac70
  40ac63:	jmp    0x8a62:0x1474b5dd
  40ac6a:	jnp    0x40ac52
  40ac6c:	mov    ecx,0xd9993a59
  40ac71:	call   0xf7da5292
  40ac76:	add    DWORD PTR [edi-0x18],0x35
  40ac7a:	pop    ebx
  40ac7b:	push   edi
  40ac7c:	je     0x40ac52
  40ac7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac7f:	push   eax
  40ac80:	cld    
  40ac81:	pop    esp
  40ac82:	cmovle edx,edi
  40ac85:	pop    edi
  40ac86:	retf   0x1dad
  40ac89:	sbb    BYTE PTR ds:[esi+0x62],al
  40ac8d:	mov    al,0x69
  40ac8f:	or     cl,BYTE PTR [ecx-0x7]
  40ac92:	call   DWORD PTR [ebx]
  40ac94:	test   ecx,ebx
  40ac96:	xor    DWORD PTR [ebp+0x64],ebp
  40ac99:	mov    WORD PTR [edi],ds
  40ac9b:	js     0x40aca8
  40ac9d:	jae    0x40ac55
  40ac9f:	in     al,0x86
  40aca1:	clc    
  40aca2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aca3:	sub    dh,BYTE PTR [edx-0x3d39bdbd]
  40aca9:	add    esi,DWORD PTR [ebx+0x53]
  40acac:	cli    
  40acad:	and    edi,DWORD PTR [edi-0x1857ac4e]
  40acb3:	push   0xfffffff4
  40acb5:	loop   0x40ac39
  40acb7:	mov    ds:0x977f8d82,eax
  40acbc:	adc    bl,BYTE PTR [esi+0x72]
  40acbf:	out    dx,eax
  40acc0:	nop
  40acc1:	adc    BYTE PTR [ecx],ah
  40acc3:	inc    edx
  40acc4:	inc    ebp
  40acc5:	cmp    DWORD PTR [esi],ebp
  40acc7:	sar    BYTE PTR [edx+esi*4-0x13a0bd30],cl
  40acce:	inc    ecx
  40accf:	arpl   dx,bx
  40acd1:	sub    BYTE PTR [esi-0x1f2e7829],0x58
  40acd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acda:	nop
  40acdb:	jge    0x40acc1
  40acdd:	jle    0x40acd0
  40acdf:	xor    ecx,esi
  40ace1:	call   0x96bef33c
  40ace6:	mov    ebx,0x81960b19
  40aceb:	adc    eax,DWORD PTR [edi+eax*1+0x21928e2c]
  40acf2:	(bad)  
  40acf3:	leave  
  40acf4:	push   edx
  40acf5:	pop    ebx
  40acf6:	hlt    
  40acf7:	xor    al,0xb7
  40acf9:	sbb    eax,0x24778892
  40acfe:	iret   
  40acff:	inc    esi
  40ad00:	jae    0x40acd5
  40ad02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad03:	das    
  40ad04:	ss jl  0x40ace7
  40ad07:	xchg   ecx,eax
  40ad08:	sahf   
  40ad09:	cli    
  40ad0a:	xchg   BYTE PTR [esi],ch
  40ad0c:	dec    ecx
  40ad0d:	pop    ds
  40ad0e:	fidivr WORD PTR [edx-0x26b4248e]
  40ad14:	icebp  
  40ad15:	jo     0x40acc7
  40ad17:	cdq    
  40ad18:	cmp    edx,0x3097911c
  40ad1e:	mov    cl,BYTE PTR [eax-0x59]
  40ad21:	mov    ds:0x635cabcd,al
  40ad26:	and    al,0x65
  40ad28:	jne    0x40ad31
  40ad2a:	push   es
  40ad2b:	mov    ss,WORD PTR [ebx+0x2f]
  40ad2e:	jmp    0xe8f4390f
  40ad33:	loopne 0x40ad32
  40ad35:	outs   dx,DWORD PTR ds:[esi]
  40ad36:	mov    BYTE PTR ds:0xf0dd0a01,ah
  40ad3c:	xchg   ecx,eax
  40ad3d:	stc    
  40ad3e:	and    al,0x26
  40ad40:	jle    0x40ad27
  40ad42:	cmp    esp,edi
  40ad44:	bound  ebp,QWORD PTR [esi-0x45]
  40ad47:	scas   al,BYTE PTR es:[edi]
  40ad48:	mov    cl,0x65
  40ad4a:	mov    ecx,0x4910cbdf
  40ad4f:	sbb    DWORD PTR [ebx],eax
  40ad51:	(bad)  
  40ad52:	push   esp
  40ad53:	out    dx,eax
  40ad54:	xchg   edi,eax
  40ad55:	mov    al,ds:0x732c43f5
  40ad5a:	(bad)  
  40ad5b:	xchg   edx,eax
  40ad5c:	mov    eax,ds:0xcdd74e0d
  40ad61:	jecxz  0x40ad4e
  40ad63:	or     al,0xee
  40ad65:	cmp    eax,0xb1a8c60e
  40ad6a:	aaa    
  40ad6b:	into   
  40ad6c:	jecxz  0x40ad57
  40ad6e:	cmp    al,0x8e
  40ad70:	sub    cl,bh
  40ad72:	add    ebx,ecx
  40ad74:	loop   0x40ada8
  40ad76:	jecxz  0x40adf2
  40ad78:	jo     0x40ad6f
  40ad7a:	sbb    DWORD PTR [eax+esi*4],edx
  40ad7d:	xlat   BYTE PTR ds:[ebx]
  40ad7e:	retf   
  40ad7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad80:	int    0x60
  40ad82:	stos   DWORD PTR es:[edi],eax
  40ad83:	je     0x40ad6a
  40ad85:	sub    eax,0xe084308e
  40ad8a:	scas   eax,DWORD PTR es:[edi]
  40ad8b:	sub    esi,esp
  40ad8d:	lock out 0x49,al
  40ad90:	jl     0x40adf1
  40ad92:	xchg   ecx,eax
  40ad93:	sbb    edx,ecx
  40ad95:	sbb    bh,BYTE PTR [ebx+ebx*8-0x68851a5e]
  40ad9c:	xor    BYTE PTR [edx-0x1c],bh
  40ad9f:	ins    BYTE PTR es:[edi],dx
  40ada0:	jo     0x40ad91
  40ada2:	retf   
  40ada3:	cmp    DWORD PTR [edx+0x39],ecx
  40ada6:	or     DWORD PTR [eax-0x50],ebx
  40ada9:	lds    esp,FWORD PTR [ecx]
  40adab:	inc    eax
  40adac:	nop
  40adad:	dec    ecx
  40adae:	out    dx,al
  40adaf:	mov    dl,0xbc
  40adb1:	pop    ss
  40adb2:	test   BYTE PTR [ebx+0x337e66eb],bl
  40adb8:	mov    esi,0xaaf61603
  40adbd:	mov    esp,0xba65b725
  40adc2:	pop    edi
  40adc3:	cmp    DWORD PTR [esi+0x4180b140],eax
  40adc9:	dec    esi
  40adca:	cmp    al,0xab
  40adcc:	in     eax,dx
  40adcd:	push   es
  40adce:	xor    dl,ch
  40add0:	xor    DWORD PTR [esi-0x64acbd5d],edi
  40add6:	jnp    0x40ada9
  40add8:	or     bl,BYTE PTR [esi+ebp*2]
  40addb:	add    DWORD PTR [edi+edx*2+0x4105aafb],esi
  40ade2:	ins    DWORD PTR es:[edi],dx
  40ade3:	inc    ecx
  40ade4:	sub    al,0xf2
  40ade6:	frstor [ecx]
  40ade8:	pop    esi
  40ade9:	xchg   esp,eax
  40adea:	or     al,BYTE PTR [ecx]
  40adec:	bound  esi,QWORD PTR ds:0x2f266971
  40adf2:	push   edi
  40adf3:	sbb    BYTE PTR [edi-0x1330d586],0x9f
  40adfa:	inc    edi
  40adfb:	hlt    
  40adfc:	pop    ebx
  40adfd:	xchg   edi,eax
  40adfe:	test   DWORD PTR [edi+0x593d97f9],eax
  40ae04:	rol    BYTE PTR [ecx],cl
  40ae06:	call   0x6aaa5b18
  40ae0b:	xor    ecx,esi
  40ae0d:	and    bh,BYTE PTR [edi-0x59372bbd]
  40ae13:	xchg   esp,eax
  40ae14:	popf   
  40ae15:	sub    eax,0x621c1f84
  40ae1a:	push   edx
  40ae1b:	jbe    0x40ade9
  40ae1d:	push   0xfffffff5
  40ae1f:	mov    bl,0xbb
  40ae21:	mov    esp,0x59b24274
  40ae26:	xor    eax,edx
  40ae28:	les    ebp,FWORD PTR [esi+edx*4+0x2a0a273e]
  40ae2f:	mov    esp,0x71779fac
  40ae34:	xor    ebp,DWORD PTR [edi+eiz*8]
  40ae37:	stc    
  40ae38:	xor    edi,ebp
  40ae3a:	out    dx,al
  40ae3b:	push   ecx
  40ae3c:	cmp    esp,DWORD PTR [esi-0x2d7144db]
  40ae42:	jge    0x40ae33
  40ae44:	fbld   TBYTE PTR [ecx-0x56]
  40ae47:	gs mov ah,0xe9
  40ae4a:	stc    
  40ae4b:	mov    dl,0x0
  40ae4d:	test   DWORD PTR [ebp-0x3eeb825d],esi
  40ae53:	mov    bl,0xf5
  40ae55:	shl    DWORD PTR [ebx-0x7e],0x6
  40ae59:	xchg   eax,esi
  40ae5b:	shr    cl,0x7f
  40ae5e:	jae    0x40ae4d
  40ae60:	inc    esi
  40ae61:	xchg   dh,dh
  40ae63:	idiv   DWORD PTR [edi-0x35ac5013]
  40ae69:	xor    ebx,DWORD PTR [eax+0x37e439f1]
  40ae6f:	pop    esp
  40ae70:	stos   DWORD PTR es:[edi],eax
  40ae71:	add    eax,0x47f166d
  40ae76:	push   ss
  40ae77:	lahf   
  40ae78:	mov    bh,0x31
  40ae7a:	aas    
  40ae7b:	xor    al,0xc9
  40ae7d:	cmp    eax,0x46e76378
  40ae82:	push   ebx
  40ae83:	push   0xa72408a6
  40ae88:	mov    ecx,0x98a98605
  40ae8d:	mov    bl,0xfc
  40ae8f:	sub    esp,DWORD PTR [ebx+0xb309b]
  40ae95:	xor    BYTE PTR [eax+0x40],bl
  40ae98:	lods   al,BYTE PTR ds:[esi]
  40ae99:	jle    0x40af03
  40ae9b:	out    dx,eax
  40ae9c:	mov    eax,0xf8955092
  40aea1:	fnstcw WORD PTR [ebx-0x73086d98]
  40aea7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aea8:	mov    ds:0xb834caa4,al
  40aead:	arpl   WORD PTR [esi+0x16],dx
  40aeb0:	cs call 0xbbc2:0xae45515b
  40aeb8:	int3   
  40aeb9:	(bad)  
  40aeba:	daa    
  40aebb:	rcr    BYTE PTR ds:0xf6dfea7,0x8a
  40aec2:	jp     0x40ae45
  40aec4:	jo     0x40ae64
  40aec6:	xchg   ebp,eax
  40aec7:	out    0xbd,al
  40aec9:	shr    BYTE PTR [ebp+0x7],cl
  40aecc:	or     eax,0x4371fe24
  40aed1:	rol    edx,1
  40aed3:	mov    edi,0xbec46ad
  40aed9:	fwait
  40aeda:	xchg   ebp,eax
  40aedb:	cli    
  40aedc:	in     eax,0xef
  40aede:	enter  0x6376,0xd0
  40aee2:	sbb    BYTE PTR [edi],cl
  40aee4:	mov    eax,0x8e5387e7
  40aee9:	retf   0xca1b
  40aeec:	fisub  WORD PTR [esi-0x11]
  40aeef:	in     al,0x57
  40aef1:	xlat   BYTE PTR ds:[ebx]
  40aef2:	fisubr DWORD PTR [ecx]
  40aef4:	je     0x40af2f
  40aef6:	aaa    
  40aef7:	sbb    BYTE PTR [edi+0x44],dl
  40aefa:	and    ch,BYTE PTR [edx]
  40aefc:	stc    
  40aefd:	and    BYTE PTR [ebp-0x34],bh
  40af00:	ror    BYTE PTR [edx+ebp*1+0x83b544b],1
  40af07:	xchg   esi,ebp
  40af09:	mov    al,0x60
  40af0b:	cmp    edi,DWORD PTR [eax-0x13bc0289]
  40af11:	mov    eax,0x1c3277ef
  40af16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af17:	in     eax,dx
  40af18:	xor    DWORD PTR [edx],ebp
  40af1a:	add    eax,0x49aa5912
  40af1f:	daa    
  40af20:	pop    edi
  40af21:	(bad)
  40af24:	xor    eax,0xee5c9e32
  40af29:	lea    esp,[esi+ecx*2+0x3]
  40af2d:	xor    cl,BYTE PTR [ecx]
  40af2f:	or     cl,cl
  40af31:	and    eax,ebp
  40af33:	rol    DWORD PTR [ebx],cl
  40af35:	sub    al,0x5f
  40af37:	cmp    eax,0x2b2bbb04
  40af3c:	imul   edx,DWORD PTR [eax],0x7e
  40af3f:	(bad)  [esi-0x4c9e1de0]
  40af45:	popa   
  40af46:	lods   eax,DWORD PTR ds:[esi]
  40af47:	push   ecx
  40af48:	jmp    DWORD PTR [ebp+0x67]
  40af4b:	call   0xefc9:0x7bcf981d
  40af52:	jmp    0xaff9097f
  40af57:	dec    edi
  40af58:	adc    DWORD PTR [eax+0x72],esp
  40af5b:	pop    ebp
  40af5c:	adc    ch,bh
  40af5e:	dec    ebp
  40af5f:	dec    esi
  40af60:	stos   DWORD PTR es:[edi],eax
  40af61:	inc    ecx
  40af62:	xor    edx,ecx
  40af64:	rol    DWORD PTR [eax+edx*8],1
  40af67:	jb     0x40afe2
  40af69:	mov    eax,ds:0x1d320a33
  40af6e:	push   esi
  40af6f:	repz jmpw 0xfd5d
  40af74:	adc    DWORD PTR [edi],esp
  40af76:	mov    edx,0xe1073c77
  40af7b:	int3   
  40af7c:	mov    esi,0x6bb4ff40
  40af81:	pop    edi
  40af82:	jmp    0x40b001
  40af84:	xor    ebx,0xffffff9e
  40af87:	test   al,0x8e
  40af89:	mov    al,ds:0xa0414394
  40af8e:	push   eax
  40af8f:	call   0x578:0x20debd23
  40af96:	mov    ch,0xa2
  40af98:	xchg   edx,eax
  40af99:	push   eax
  40af9a:	pop    ss
  40af9b:	jbe    0x40afe6
  40af9d:	jecxz  0x40af75
  40af9f:	mov    edx,0x69ec18bb
  40afa4:	jl     0x40af7b
  40afa6:	xor    BYTE PTR [edi+0xc0f7a89],ah
  40afac:	mov    ebp,eax
  40afae:	scas   eax,DWORD PTR es:[edi]
  40afaf:	nop
  40afb0:	nop
  40afb1:	push   edx
  40afb2:	push   es
  40afb3:	jg     0x40afeb
  40afb5:	jae    0x40b034
  40afb7:	les    edx,FWORD PTR [edx+0x50f1911]
  40afbd:	push   ds
  40afbe:	int3   
  40afbf:	jae    0x40af4f
  40afc1:	push   esi
  40afc2:	fsubrp st(5),st
  40afc4:	ins    DWORD PTR es:[edi],dx
  40afc5:	lods   al,BYTE PTR ds:[esi]
  40afc6:	shr    BYTE PTR [ebp+esi*2+0x78],1
  40afca:	or     eax,0x2374f3e8
  40afcf:	add    eax,0x8705b74e
  40afd4:	js     0x40afef
  40afd6:	cmp    edx,DWORD PTR [ecx-0x32]
  40afd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afda:	jg     0x40af9a
  40afdc:	jecxz  0x40af8e
  40afde:	xlat   BYTE PTR ds:[ebx]
  40afdf:	leave  
  40afe0:	ins    BYTE PTR es:[edi],dx
  40afe1:	aad    0x77
  40afe3:	out    0x46,al
  40afe5:	adc    eax,0x266c4599
  40afea:	pop    edi
  40afeb:	loop   0x40af81
  40afed:	mov    edi,0x2ecf9152
  40aff2:	dec    ebp
  40aff3:	mov    edi,0xa5b09330
  40aff8:	pop    ebx
  40aff9:	stos   DWORD PTR es:[edi],eax
  40affa:	inc    edi
  40affb:	test   eax,0xe7483399
  40b000:	sti    
  40b001:	push   ebx
  40b002:	pop    edi
  40b003:	inc    ecx
  40b004:	sbb    al,0xd4
  40b006:	popf   
  40b007:	pop    DWORD PTR [ecx+0x4a]
  40b00a:	loopne 0x40b07b
  40b00c:	cdq    
  40b00d:	mov    bh,0xd7
  40b00f:	shl    DWORD PTR [edx],1
  40b011:	sbb    DWORD PTR [esi+0x5e],esp
  40b014:	ins    DWORD PTR es:[edi],dx
  40b015:	push   ss
  40b016:	or     BYTE PTR [esi+0x4a51bcd3],ah
  40b01c:	lea    ebx,[edi+0x7c7a1f5c]
  40b022:	retf   0x873c
  40b025:	ss push ds
  40b027:	xor    eax,0xae8d1bab
  40b02c:	pop    ds
  40b02d:	jnp    0x40b096
  40b02f:	scas   al,BYTE PTR es:[edi]
  40b030:	inc    esi
  40b031:	sar    BYTE PTR [ebx],cl
  40b033:	ss inc ebx
  40b035:	pop    ecx
  40b036:	fbld   TBYTE PTR [ecx+0x9]
  40b039:	ss inc ebp
  40b03b:	push   ss
  40b03c:	repz out 0xfe,al
  40b03f:	sub    eax,0x4949be24
  40b044:	shr    edx,cl
  40b046:	std    
  40b047:	xchg   BYTE PTR [esi+0x645835d8],bl
  40b04d:	mov    bl,0x29
  40b04f:	call   0xb523ebce
  40b054:	fcmovnu st,st(1)
  40b056:	xchg   DWORD PTR [edx],ebx
  40b058:	and    al,0x25
  40b05a:	dec    ebp
  40b05b:	push   edx
  40b05c:	jne    0x40b075
  40b05e:	iret   
  40b05f:	push   eax
  40b060:	mov    esp,0x8db45307
  40b065:	or     cl,BYTE PTR [eax+esi*4]
  40b068:	enter  0x803,0x75
  40b06c:	jecxz  0x40b087
  40b06e:	fld1   
  40b070:	(bad)  
  40b071:	sub    eax,0xacd14823
  40b076:	aam    0xa6
  40b078:	mov    esi,0x96c64b57
  40b07d:	out    0xd9,eax
  40b07f:	or     al,al
  40b081:	xchg   esi,eax
  40b082:	add    ah,BYTE PTR [edi+0x792f1bb0]
  40b088:	std    
  40b089:	dec    edx
  40b08a:	pop    ds
  40b08b:	jge    0x40b055
  40b08d:	(bad)  
  40b08e:	int    0xed
  40b090:	outs   dx,BYTE PTR ds:[esi]
  40b091:	mov    edi,0x5a77123f
  40b096:	nop
  40b097:	imul   esi,DWORD PTR [esp+eiz*2],0xffffff94
  40b09b:	aam    0x98
  40b09d:	es jg  0x40b061
  40b0a0:	je     0x40b0cd
  40b0a2:	pop    es
  40b0a3:	dec    ebp
  40b0a4:	or     ch,dh
  40b0a6:	mov    esi,0x3b9edd07
  40b0ab:	jne    0x40b088
  40b0ad:	push   ds
  40b0ae:	sahf   
  40b0af:	in     eax,dx
  40b0b0:	push   ss
  40b0b1:	inc    ebp
  40b0b2:	outs   dx,DWORD PTR ds:[esi]
  40b0b3:	mov    esp,0x16c1c2b4
  40b0b8:	sti    
  40b0b9:	ficom  DWORD PTR [edi+0x16]
  40b0bc:	dec    ebx
  40b0bd:	imul   esi,DWORD PTR [edi],0x78
  40b0c0:	loop   0x40b0ce
  40b0c2:	jl     0x40b107
  40b0c4:	sub    al,BYTE PTR [edx-0x5b]
  40b0c7:	and    bh,al
  40b0c9:	in     al,0xa1
  40b0cb:	and    eax,0xa1cd38b1
  40b0d0:	fimul  WORD PTR [ecx+edx*2]
  40b0d3:	rcr    BYTE PTR [ecx+0x7d],1
  40b0d6:	scas   al,BYTE PTR es:[edi]
  40b0d7:	jmp    0x40b08d
  40b0d9:	lea    edx,[edx-0x64]
  40b0dc:	popf   
  40b0dd:	cwde   
  40b0de:	xor    eax,DWORD PTR [ebx-0x72b00523]
  40b0e4:	jns    0x40b0e7
  40b0e6:	mov    WORD PTR [esi],es
  40b0e8:	je     0x40b105
  40b0ea:	icebp  
  40b0eb:	pop    ds
  40b0ec:	push   cs
  40b0ed:	bound  ebp,QWORD PTR [esp+edi*4]
  40b0f0:	xchg   ebx,eax
  40b0f1:	(bad)  
  40b0f2:	pop    DWORD PTR [eax-0x11]
  40b0f5:	lods   eax,DWORD PTR ds:[esi]
  40b0f6:	clc    
  40b0f7:	push   ecx
  40b0f8:	add    al,0x4e
  40b0fa:	xchg   ecx,eax
  40b0fb:	(bad)  [eax-0x2]
  40b0fe:	out    dx,al
  40b0ff:	popa   
  40b100:	out    dx,al
  40b101:	ret    
  40b102:	xor    DWORD PTR [eax-0x7],0xffffffad
  40b106:	push   0x57e5aeab
  40b10b:	adc    bh,BYTE PTR [edx-0x2f]
  40b10e:	xchg   esp,eax
  40b10f:	mov    eax,ds:0xed56910
  40b114:	outs   dx,DWORD PTR ds:[esi]
  40b115:	call   0x288e:0xcfca8d4a
  40b11c:	lahf   
  40b11d:	dec    ebp
  40b11e:	adc    bl,dl
  40b120:	or     esi,esi
  40b122:	xchg   DWORD PTR [ebx+0x14764a66],edx
  40b128:	fld    DWORD PTR [esi+0x63]
  40b12b:	sub    al,0x9e
  40b12d:	repnz lea edx,[eax-0x6]
  40b131:	dec    edx
  40b132:	jp     0x40b11e
  40b134:	mov    ah,0xf5
  40b136:	mov    ah,0xc9
  40b138:	ja     0x40b18f
  40b13a:	mov    cl,bl
  40b13c:	mov    BYTE PTR [eax-0x69fa56bd],bl
  40b142:	enter  0x904d,0xdb
  40b146:	scas   eax,DWORD PTR es:[edi]
  40b147:	dec    esi
  40b148:	or     DWORD PTR [ebp-0x348200a2],esp
  40b14e:	mov    eax,0x7fb70ffb
  40b153:	hlt    
  40b154:	ror    DWORD PTR [ecx+0x44],1
  40b157:	sub    eax,0x8e281cdc
  40b15c:	outs   dx,BYTE PTR ds:[esi]
  40b15d:	retf   0x6367
  40b160:	sbb    ah,BYTE PTR [ebx+0x31]
  40b163:	xchg   esi,eax
  40b164:	and    ah,BYTE PTR ds:0x401dd39d
  40b16a:	out    dx,eax
  40b16b:	call   0x5a1804ef
  40b170:	sbb    BYTE PTR [ebp+eax*2+0xb],cl
  40b174:	dec    ecx
  40b175:	add    DWORD PTR [ebp-0x30],ebp
  40b178:	jl     0x40b14a
  40b17a:	lods   eax,DWORD PTR ds:[esi]
  40b17b:	add    BYTE PTR [esi+ecx*1-0x52dbe671],bh
  40b182:	lods   eax,DWORD PTR ds:[esi]
  40b183:	xchg   esp,eax
  40b184:	(bad)  
  40b186:	retf   0xe94c
  40b189:	addr16 mov al,0xd0
  40b18c:	mov    edi,0x95b80e0c
  40b191:	and    BYTE PTR [edi-0x27],ah
  40b194:	ds push ecx
  40b196:	jecxz  0x40b190
  40b198:	inc    edx
  40b199:	call   0x83a3bb68
  40b19e:	sbb    BYTE PTR [esi+0x54710245],al
  40b1a4:	and    al,0x80
  40b1a6:	hlt    
  40b1a7:	push   edi
  40b1a8:	mov    ch,0xed
  40b1aa:	loopne 0x40b180
  40b1ac:	or     DWORD PTR [eax+edx*8],esp
  40b1af:	add    bh,al
  40b1b1:	add    ebx,edi
  40b1b3:	lock jb 0x40b1e9
  40b1b6:	mov    BYTE PTR [eax-0xd],cl
  40b1b9:	and    ebp,DWORD PTR [edx-0x6e]
  40b1bc:	outs   dx,BYTE PTR fs:[esi]
  40b1be:	enter  0xb9d6,0x3b
  40b1c2:	xchg   ecx,eax
  40b1c3:	pop    edi
  40b1c4:	xchg   ebx,eax
  40b1c5:	aad    0x84
  40b1c7:	(bad)  
  40b1c9:	jnp    0x40b1dc
  40b1cb:	retf   
  40b1cc:	mov    dh,0xb7
  40b1ce:	xor    DWORD PTR [edx+0x57],ebp
  40b1d1:	xchg   edi,eax
  40b1d2:	sub    esi,DWORD PTR [ebp-0x3e72d501]
  40b1d8:	fwait
  40b1d9:	call   0x5c91:0x5636eca
  40b1e0:	jns    0x40b1fe
  40b1e2:	mov    bl,0x3b
  40b1e4:	add    DWORD PTR [esi-0x39],0x0
  40b1e8:	add    eax,0x74b827a4
  40b1ed:	pop    eax
  40b1ee:	xor    esi,ebx
  40b1f0:	inc    ebx
  40b1f1:	dec    ecx
  40b1f2:	jbe    0x6a7b98f6
  40b1f8:	ret    0xe16f
  40b1fb:	sbb    BYTE PTR [ecx+0x4835f3cf],bh
  40b201:	lods   al,BYTE PTR ds:[esi]
  40b202:	push   edi
  40b203:	scas   al,BYTE PTR es:[edi]
  40b204:	cli    
  40b205:	mov    eax,0x69ff160f
  40b20a:	dec    esi
  40b20b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b20c:	inc    ebp
  40b20d:	jg     0x40b1d2
  40b20f:	stos   DWORD PTR es:[edi],eax
  40b210:	jne    0x40b1ba
  40b212:	cmp    DWORD PTR [edx],edi
  40b214:	in     eax,0xf7
  40b216:	std    
  40b217:	or     al,0x37
  40b219:	dec    esp
  40b21a:	add    al,BYTE PTR [eax+0x74be38a]
  40b220:	jecxz  0x40b284
  40b222:	mov    eax,ds:0x340bedbb
  40b227:	push   ss
  40b228:	loop   0x40b226
  40b22a:	mov    edx,0xa7cac836
  40b22f:	adc    dl,bl
  40b231:	ficom  DWORD PTR [ebp-0x544c35a9]
  40b237:	lock in al,0xa7
  40b23a:	stos   DWORD PTR es:[edi],eax
  40b23b:	gs jb  0x40b28f
  40b23e:	sahf   
  40b23f:	and    DWORD PTR [ecx-0x16],ebp
  40b242:	clc    
  40b243:	popfw  
  40b245:	mov    eax,0xba26f1c
  40b24a:	push   0x71
  40b24c:	popa   
  40b24d:	cmp    eax,ecx
  40b24f:	out    0x68,eax
  40b251:	xchg   edi,eax
  40b252:	lahf   
  40b253:	add    bh,bl
  40b255:	mov    ecx,0x9ab33ad2
  40b25a:	test   DWORD PTR [ebp-0x2eb158c],esi
  40b260:	sbb    bl,BYTE PTR [esi]
  40b262:	add    BYTE PTR [ebx+0x39be25c8],bl
  40b268:	push   ss
  40b269:	or     dh,BYTE PTR [ecx]
  40b26b:	nop
  40b26c:	(bad)  
  40b26d:	add    DWORD PTR [esp+ebx*4-0x8],0xaed1ef3a
  40b275:	xlat   BYTE PTR ds:[ebx]
  40b276:	xor    eax,0xc7b2d99d
  40b27b:	dec    esi
  40b27c:	xchg   ebp,eax
  40b27d:	les    ecx,FWORD PTR [ebx-0xc1b3651]
  40b283:	pop    edx
  40b284:	enter  0xf3d3,0x8b
  40b288:	add    DWORD PTR [eax],eax
  40b28a:	dec    edx
  40b28b:	mov    DWORD PTR [esi-0x5a2b3483],esi
  40b291:	jb     0x40b218
  40b293:	gs push edi
  40b295:	pop    ss
  40b296:	retf   0xfed8
  40b299:	nop
  40b29a:	in     eax,dx
  40b29b:	lds    esi,FWORD PTR [ebx+ebp*8]
  40b29e:	dec    dl
  40b2a0:	mov    ch,0x5b
  40b2a2:	cmp    eax,0xec42af62
  40b2a7:	sbb    eax,0xe59b1726
  40b2ac:	cmp    al,0xd0
  40b2ae:	mov    eax,edi
  40b2b0:	lahf   
  40b2b1:	push   0x1eb22cb4
  40b2b6:	jp     0x40b25d
  40b2b8:	cmp    al,BYTE PTR [esp+edx*2-0x34cbb824]
  40b2bf:	adc    ch,BYTE PTR [edi]
  40b2c1:	loop   0x40b281
  40b2c3:	jmp    0x460f:0x7928b62f
  40b2ca:	(bad)  
  40b2cb:	dec    ebp
  40b2cc:	push   edi
  40b2cd:	cs iret 
  40b2cf:	inc    eax
  40b2d0:	mov    BYTE PTR [ebx-0x53],dl
  40b2d3:	mov    ah,0xe7
  40b2d5:	into   
  40b2d6:	mov    ebp,0x174155fe
  40b2db:	inc    ebp
  40b2dc:	mov    ecx,0x885cdec9
  40b2e1:	in     al,dx
  40b2e2:	loope  0x40b2d2
  40b2e4:	sub    DWORD PTR [edx+0x4c8b9ca4],ecx
  40b2ea:	das    
  40b2eb:	sbb    ebx,esp
  40b2ed:	sar    BYTE PTR [ebx+0x2],1
  40b2f0:	mov    ah,0x85
  40b2f2:	push   ss
  40b2f3:	clc    
  40b2f4:	out    0x1a,al
  40b2f6:	cwde   
  40b2f7:	call   0xb334:0x2c56007b
  40b2fe:	cmp    bl,BYTE PTR [edx-0x6b]
  40b301:	outs   dx,BYTE PTR ds:[esi]
  40b302:	js     0x40b2d7
  40b304:	(bad)  [ebx+0x2b]
  40b307:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b308:	aam    0x3a
  40b30a:	rol    BYTE PTR [esi+0x0],cl
  40b30d:	or     edx,DWORD PTR ds:0xe061
  40b312:	shl    BYTE PTR [ebp*1-0x386363d0],cl
  40b319:	jnp    0x40b382
  40b31b:	cmp    ecx,DWORD PTR [esi-0x36]
  40b31e:	ja     0x40b39a
  40b320:	popa   
  40b321:	call   0x4abdb984
  40b326:	out    0xad,al
  40b328:	bound  ecx,QWORD PTR [ebp+0x9]
  40b32b:	aaa    
  40b32c:	sbb    ecx,DWORD PTR [ebp-0x3ddcb487]
  40b332:	cmp    BYTE PTR ds:0x557f82a5,dh
  40b338:	aad    0x19
  40b33a:	(bad)  
  40b33b:	and    ecx,DWORD PTR [eax+0x6bd60954]
  40b341:	xchg   DWORD PTR [ecx],edx
  40b343:	loop   0x40b328
  40b345:	mov    cl,0xd7
  40b347:	mov    esi,0x95ac338d
  40b34c:	in     al,dx
  40b34d:	sub    eax,0x1be20423
  40b352:	dec    esi
  40b353:	sti    
  40b354:	mov    dl,0x1e
  40b356:	xchg   edi,eax
  40b357:	cmp    BYTE PTR ds:0x6b7b72bb,dh
  40b35d:	or     eax,0x9416e39
  40b362:	sar    al,1
  40b364:	pop    edx
  40b365:	add    DWORD PTR [ebx-0x4790a0d1],eax
  40b36b:	into   
  40b36c:	xor    dl,BYTE PTR [edx+0x59d4c64]
  40b372:	es ins DWORD PTR es:[edi],dx
  40b374:	std    
  40b375:	push   eax
  40b376:	ffree  st(0)
  40b378:	pop    ebx
  40b379:	retf   
  40b37a:	mov    ebx,0x856db9b
  40b37f:	push   0x36dba321
  40b384:	neg    BYTE PTR [ebx]
  40b386:	fnsave [ebp-0x208d4828]
  40b38c:	or     BYTE PTR [edi-0x39],dl
  40b38f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b390:	shr    DWORD PTR ds:0x59c72aac,cl
  40b396:	jne    0x40b3c6
  40b398:	add    al,0x42
  40b39a:	or     BYTE PTR [ecx+edx*2+0x3bc4d1f1],dl
  40b3a1:	mov    eax,0xbf77f721
  40b3a6:	pop    esi
  40b3a7:	in     al,dx
  40b3a8:	mov    edi,0xda29fe4a
  40b3ad:	rol    BYTE PTR ds:0xf3548d26,1
  40b3b3:	mov    ecx,0x4b615341
  40b3b8:	cmp    eax,ebp
  40b3ba:	mov    WORD PTR [esi],ss
  40b3bc:	mov    DWORD PTR [ebx],ebp
  40b3be:	(bad)  
  40b3bf:	ds and dh,dl
  40b3c2:	es mov ch,0x27
  40b3c5:	retf   0xce5f
  40b3c8:	ja     0x40b42b
  40b3ca:	inc    edi
  40b3cb:	(bad)  
  40b3cc:	xchg   ebx,eax
  40b3cd:	xor    al,0x21
  40b3cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3d0:	jae    0x40b366
  40b3d2:	lock jbe 0x40b402
  40b3d5:	sub    BYTE PTR [ecx],0xa4
  40b3d8:	xor    BYTE PTR [edi],dh
  40b3da:	daa    
  40b3db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3dc:	add    ebx,DWORD PTR [eax]
  40b3de:	cld    
  40b3df:	mov    eax,ds:0x4fe5392a
  40b3e4:	and    dh,BYTE PTR [eax]
  40b3e6:	xor    esp,DWORD PTR [esi-0x59e9a148]
  40b3ec:	enter  0xd01b,0x5
  40b3f0:	jp     0x40b46a
  40b3f2:	jl     0x40b44f
  40b3f4:	loopne 0x40b430
  40b3f6:	sbb    BYTE PTR ds:0x83adfc82,ah
  40b3fc:	add    ecx,DWORD PTR [edi-0x4b9a84b]
  40b402:	xchg   ebx,eax
  40b403:	push   ebp
  40b404:	or     al,0x91
  40b406:	jle    0x40b38e
  40b408:	mov    ecx,0x46cf7557
  40b40d:	bound  eax,QWORD PTR [ecx+0x5c52997d]
  40b413:	hlt    
  40b414:	and    al,0x6c
  40b416:	push   esp
  40b417:	icebp  
  40b418:	cmovbe edi,eax
  40b41b:	lahf   
  40b41c:	inc    edi
  40b41d:	mov    ebx,0xffbb6011
  40b422:	inc    esi
  40b423:	inc    eax
  40b424:	outs   dx,BYTE PTR ds:[esi]
  40b425:	inc    eax
  40b426:	gs int3 
  40b428:	lahf   
  40b429:	inc    ecx
  40b42a:	push   edx
  40b42b:	sbb    al,0xe4
  40b42d:	sub    edi,DWORD PTR [ecx]
  40b42f:	fdivr  QWORD PTR [eax]
  40b431:	push   esi
  40b432:	mov    BYTE PTR [eax-0x560e65dd],ah
  40b438:	mov    BYTE PTR [ebp-0x1a290c56],dh
  40b43e:	les    ecx,FWORD PTR [ecx]
  40b440:	push   ss
  40b441:	add    BYTE PTR [edi+0x6e55b1dc],ch
  40b447:	stc    
  40b448:	pop    edx
  40b449:	adc    edi,ebx
  40b44b:	jle    0x40b3e0
  40b44d:	stos   BYTE PTR es:[edi],al
  40b44e:	jno    0x40b4c0
  40b450:	and    BYTE PTR [ecx-0x23aecd77],0x75
  40b457:	pop    edx
  40b458:	jae    0x40b4b0
  40b45a:	xchg   ebp,edx
  40b45c:	jmp    0x57ff:0x888169d6
  40b463:	inc    edx
  40b464:	xchg   esi,eax
  40b465:	or     bl,BYTE PTR [edi+esi*2-0x786b3afa]
  40b46c:	lock adc esp,DWORD PTR [ecx]
  40b46f:	cmp    esi,DWORD PTR [ecx+0x43bc4df7]
  40b475:	arpl   WORD PTR [edi-0x51],bp
  40b478:	jae    0x40b409
  40b47a:	pop    esi
  40b47b:	xchg   ecx,eax
  40b47c:	mov    eax,ds:0xe23d361b
  40b481:	repnz mov edi,eax
  40b484:	test   BYTE PTR ds:0x5a06634d,ah
  40b48a:	mov    WORD PTR [edi],fs
  40b48c:	outs   dx,DWORD PTR ds:[esi]
  40b48d:	xor    esi,DWORD PTR [ebx-0x3cf2269c]
  40b493:	jnp    0x40b4d8
  40b495:	jbe    0x40b494
  40b497:	add    edx,DWORD PTR [esi+0x3c]
  40b49a:	push   ecx
  40b49b:	xchg   edi,eax
  40b49c:	mov    dl,0xac
  40b49e:	jg     0x40b481
  40b4a0:	sbb    al,0xb8
  40b4a2:	cmp    al,0x1a
  40b4a4:	cmp    al,0x3c
  40b4a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4a7:	shl    BYTE PTR [edx],1
  40b4a9:	stos   DWORD PTR es:[edi],eax
  40b4aa:	xor    dl,ch
  40b4ac:	aaa    
  40b4ad:	xor    dh,ah
  40b4af:	and    bh,BYTE PTR [eax+0xf554886]
  40b4b5:	xor    eax,0x29251a29
  40b4ba:	cmp    al,0xaf
  40b4bc:	xor    ch,BYTE PTR [ebx]
  40b4be:	cdq    
  40b4bf:	mov    WORD PTR [edx+0xf38a7e4],?
  40b4c5:	mov    eax,0x3be77d48
  40b4ca:	add    al,0xb5
  40b4cc:	popf   
  40b4cd:	imul   BYTE PTR [ecx]
  40b4cf:	dec    esp
  40b4d0:	jae    0x40b535
  40b4d2:	mov    al,ds:0x6806df85
  40b4d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4d8:	mov    ch,0x75
  40b4da:	jecxz  0x40b522
  40b4dc:	or     al,0x32
  40b4de:	push   edi
  40b4df:	popa   
  40b4e0:	mov    esi,?
  40b4e2:	js     0x40b47a
  40b4e4:	adc    eax,ecx
  40b4e6:	jmp    0xe9b5262
  40b4eb:	shl    DWORD PTR [ebx-0x5c27de91],cl
  40b4f1:	test   cl,al
  40b4f3:	mov    dl,ah
  40b4f5:	pop    esi
  40b4f6:	sub    DWORD PTR [edx+ecx*2],eax
  40b4f9:	jbe    0x40b499
  40b4fb:	(bad)  
  40b4fc:	out    dx,eax
  40b4fd:	xor    ah,0x27
  40b500:	jo     0x40b531
  40b502:	push   cs
  40b503:	sub    DWORD PTR [ebp+0x4547e3c2],0x98873163
  40b50d:	add    ebx,DWORD PTR [ebx+0x1c]
  40b510:	fsub   st(0),st
  40b512:	sub    al,0xf7
  40b514:	or     eax,0x11f3a0da
  40b519:	mov    ds:0x6c98ae82,al
  40b51e:	mov    ebp,?
  40b520:	sub    cl,bl
  40b522:	popf   
  40b523:	(bad)  
  40b524:	jecxz  0x40b517
  40b526:	dec    eax
  40b527:	mov    dh,0x90
  40b529:	sahf   
  40b52a:	(bad)
  40b52f:	leave  
  40b530:	cdq    
  40b531:	cld    
  40b532:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b533:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b534:	imul   bl
  40b536:	push   esp
  40b537:	lea    eax,[esi-0x7d93cdaa]
  40b53d:	inc    esi
  40b53e:	mov    ecx,0x1c1b9db
  40b543:	pop    edi
  40b544:	out    dx,eax
  40b545:	cmp    al,0xd
  40b547:	push   ebx
  40b548:	repnz mov bh,0x48
  40b54b:	lods   eax,DWORD PTR ds:[esi]
  40b54c:	dec    ecx
  40b54d:	loopne 0x40b516
  40b54f:	pop    esp
  40b550:	clc    
  40b551:	iret   
  40b552:	pop    edi
  40b553:	jmp    0x97471650
  40b558:	mov    ds:0xc315e49a,al
  40b55d:	iret   
  40b55e:	cmp    BYTE PTR [ebx],ch
  40b560:	test   BYTE PTR [ecx+ebx*2+0x16],ah
  40b564:	mov    ebp,0x536c8aee
  40b569:	iret   
  40b56a:	jno    0x40b518
  40b56c:	loope  0x40b578
  40b56e:	and    DWORD PTR [eax+0x56e44d82],0xe
  40b575:	xchg   edx,eax
  40b576:	mov    al,0x21
  40b578:	ds mov eax,ebx
  40b57b:	aam    0x9b
  40b57d:	sbb    BYTE PTR [ebx+edx*4-0x52d46eae],bh
  40b584:	(bad)  
  40b585:	cld    
  40b586:	leave  
  40b587:	aam    0xc0
  40b589:	adc    edx,DWORD PTR [esp+ecx*8+0x66]
  40b58d:	jp     0x40b600
  40b58f:	sbb    BYTE PTR [eax-0x31],0xb5
  40b593:	cs std 
  40b595:	das    
  40b596:	retf   
  40b597:	xchg   esi,eax
  40b598:	dec    ecx
  40b599:	icebp  
  40b59a:	mov    WORD PTR [edx],?
  40b59c:	and    al,0xe7
  40b59e:	pop    ebp
  40b59f:	out    0x8c,eax
  40b5a1:	mov    al,0xef
  40b5a3:	jecxz  0x40b603
  40b5a5:	push   ebp
  40b5a6:	inc    edx
  40b5a7:	add    eax,DWORD PTR [ecx-0x54]
  40b5aa:	fdivp  st(7),st
  40b5ac:	mov    cl,BYTE PTR [ebx-0x6b]
  40b5af:	jmp    0xeec4:0x232a44c8
  40b5b6:	jno    0x40b629
  40b5b8:	pop    edx
  40b5b9:	mov    eax,ds:0x55c54d5
  40b5be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5bf:	cs jl  0x40b5ae
  40b5c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5c3:	hlt    
  40b5c4:	add    DWORD PTR [esi],ecx
  40b5c6:	outs   dx,DWORD PTR ds:[esi]
  40b5c7:	mov    eax,0xbfdc2d08
  40b5cc:	arpl   WORD PTR [edi-0x63],si
  40b5cf:	cmp    DWORD PTR [ecx+0x256d4201],edx
  40b5d5:	mov    esi,0xf021b18e
  40b5da:	cmp    DWORD PTR [ecx-0x29484541],eax
  40b5e0:	and    eax,0x6f39d9d6
  40b5e5:	sub    al,0xb3
  40b5e7:	out    dx,al
  40b5e8:	fadd   QWORD PTR [edi-0x238dc512]
  40b5ee:	dec    ebx
  40b5ef:	push   ebx
  40b5f0:	es into 
  40b5f2:	jecxz  0x40b66a
  40b5f4:	sbb    DWORD PTR [ecx-0x265934bd],ebp
  40b5fa:	das    
  40b5fb:	xor    bl,ah
  40b5fd:	ficom  DWORD PTR [edi-0x29]
  40b600:	jmp    0xda3b:0x6212173f
  40b607:	inc    esp
  40b608:	or     BYTE PTR [edi+0x48],cl
  40b60b:	imul   edx,ebx,0xa3e1eb5
  40b611:	mov    bh,0xc7
  40b613:	fidivr DWORD PTR [esi+0x22805e1a]
  40b619:	inc    edx
  40b61a:	pop    ecx
  40b61b:	mov    ecx,0x9975a47c
  40b620:	sbb    BYTE PTR [eax-0x59f76040],bl
  40b626:	jg     0x40b66f
  40b628:	shl    eax,1
  40b62a:	loop   0x40b5e9
  40b62c:	mov    ds:0x65f3c2bc,eax
  40b631:	paddusb mm7,QWORD PTR [edx]
  40b634:	icebp  
  40b635:	jmp    0x5c0a:0xdce0c046
  40b63c:	mov    ds:0x2405b5f4,eax
  40b641:	add    dh,BYTE PTR [esi+0x2a]
  40b644:	test   eax,0x90074d38
  40b649:	call   0x30f0:0x8efebf66
  40b650:	xchg   ebp,eax
  40b651:	pop    esp
  40b652:	inc    eax
  40b653:	add    BYTE PTR [ecx+edx*4],bl
  40b656:	dec    esp
  40b657:	or     eax,0x8b8bc73b
  40b65c:	sbb    bh,al
  40b65e:	shr    BYTE PTR [ebp-0x784b80b4],cl
  40b664:	jb     0x40b66f
  40b666:	sbb    dl,BYTE PTR [ebp+0x4a]
  40b669:	and    edi,DWORD PTR [esi]
  40b66b:	aaa    
  40b66c:	push   es
  40b66d:	pop    ebp
  40b66e:	mov    eax,0xdc03ee0c
  40b673:	fcomi  st,st(6)
  40b675:	add    edi,DWORD PTR [edi]
  40b677:	mov    ah,0xe
  40b679:	xor    ah,BYTE PTR [esi+ecx*2-0x3841728a]
  40b680:	dec    esp
  40b681:	bound  esp,QWORD PTR [ebp+0x38]
  40b684:	scas   eax,DWORD PTR es:[edi]
  40b685:	push   es
  40b686:	aaa    
  40b687:	pop    ss
  40b688:	fadd   st,st(0)
  40b68a:	imul   esp,esi,0x3e404ef9
  40b690:	dec    esi
  40b691:	stc    
  40b692:	cmp    BYTE PTR [esi-0x3ad12169],0x9a
  40b699:	add    BYTE PTR [edi],bl
  40b69b:	or     eax,0x3fdd14d2
  40b6a0:	ja     0x40b714
  40b6a2:	jmp    0x4590:0x762b9c47
  40b6a9:	rcr    DWORD PTR [esi+0x36ba7990],cl
  40b6af:	mov    ebp,DWORD PTR ds:0x1baab249
  40b6b5:	cwde   
  40b6b6:	jecxz  0x40b6ea
  40b6b8:	mov    ecx,0xa37011f5
  40b6bd:	mov    ecx,ebp
  40b6bf:	cmp    BYTE PTR [esi+0x20d10619],ah
  40b6c5:	xchg   edx,eax
  40b6c6:	jno    0x40b720
  40b6c8:	push   ebp
  40b6c9:	push   ebp
  40b6ca:	(bad)  
  40b6cb:	leave  
  40b6cc:	inc    ecx
  40b6cd:	inc    ecx
  40b6ce:	xor    ecx,DWORD PTR [ecx+0x2be9fa8f]
  40b6d4:	mov    ah,0xeb
  40b6d6:	adc    ebx,esi
  40b6d8:	cs mov esp,0xd4bebd51
  40b6de:	scas   al,BYTE PTR es:[edi]
  40b6df:	rcr    BYTE PTR [eax+0x4],cl
  40b6e2:	and    al,0x33
  40b6e4:	push   0x13
  40b6e6:	cdq    
  40b6e7:	cmp    bh,al
  40b6e9:	fdivr  st,st(4)
  40b6eb:	inc    edx
  40b6ec:	jae    0x40b76b
  40b6ee:	fldenvw [eax-0x2341f7a5]
  40b6f5:	(bad)  
  40b6f7:	add    BYTE PTR [edi],ah
  40b6f9:	mov    cl,0xfe
  40b6fb:	ins    DWORD PTR es:[edi],dx
  40b6fc:	mov    ah,0x5a
  40b6fe:	sbb    DWORD PTR [esi],esp
  40b700:	sub    bl,dh
  40b702:	popf   
  40b703:	sbb    eax,0xba9270f2
  40b708:	jb     0x40b75f
  40b70a:	push   esp
  40b70b:	jo     0x40b778
  40b70d:	adc    eax,0xf53f840d
  40b712:	push   0x57
  40b714:	sbb    ebp,esp
  40b716:	add    al,0x3d
  40b718:	sahf   
  40b719:	fsubr  QWORD PTR [ecx-0x2aeecfa9]
  40b71f:	lds    edx,FWORD PTR [edi+0x6b7e0cb0]
  40b725:	xor    BYTE PTR ds:0xb8fc4c60,dh
  40b72b:	pop    esi
  40b72c:	push   ebp
  40b72d:	mov    esp,DWORD PTR [ecx]
  40b72f:	xlat   BYTE PTR ds:[ebx]
  40b730:	adc    eax,0x68a0c59a
  40b735:	sub    BYTE PTR [bp+0x5f34],ch
  40b73a:	push   esp
  40b73b:	mov    bl,0xbb
  40b73d:	ret    
  40b73e:	(bad)  
  40b73f:	shr    DWORD PTR [esi+0x7f],cl
  40b742:	pop    esp
  40b743:	sti    
  40b744:	aad    0xc8
  40b746:	fdivr  DWORD PTR [ebp+0x6a]
  40b749:	pop    esp
  40b74a:	mov    ch,0xd5
  40b74c:	imul   edi,DWORD PTR [ecx],0xffffffba
  40b74f:	mov    dl,0xe1
  40b751:	inc    esp
  40b752:	js     0x40b6e0
  40b754:	ja     0x40b753
  40b756:	push   ss
  40b757:	fisttp DWORD PTR ds:[ecx+0x7]
  40b75b:	mov    dh,0x1
  40b75d:	mov    DWORD PTR [ecx+0x51],ebx
  40b760:	add    eax,0x3f928e9b
  40b765:	loopne 0x40b6ef
  40b767:	jns    0x40b799
  40b769:	stos   BYTE PTR es:[edi],al
  40b76a:	test   al,0xdb
  40b76c:	sub    al,0x90
  40b76e:	retf   0x818b
  40b771:	adc    BYTE PTR [esi],al
  40b773:	xchg   esi,eax
  40b774:	call   0x2a8a:0x4bde4196
  40b77b:	fstp   TBYTE PTR [esi]
  40b77d:	dec    ebx
  40b77e:	xor    eax,0xe15fc990
  40b783:	jne    0x40b769
  40b785:	sbb    BYTE PTR [ebx+0x8e28ca0],bl
  40b78b:	into   
  40b78c:	xchg   esp,eax
  40b78d:	jl     0x40b7a1
  40b78f:	pop    ecx
  40b790:	gs lock imul ebp,edi,0x73
  40b795:	popa   
  40b796:	leave  
  40b797:	adc    eax,0x1a9a43f4
  40b79c:	cmp    cl,ah
  40b79e:	daa    
  40b79f:	mov    edx,esi
  40b7a1:	lods   al,BYTE PTR ds:[esi]
  40b7a2:	scas   eax,DWORD PTR es:[edi]
  40b7a3:	loop   0x40b74a
  40b7a5:	fidiv  DWORD PTR [edi-0x52]
  40b7a8:	cmp    cl,BYTE PTR [edx]
  40b7aa:	xlat   BYTE PTR ds:[ebx]
  40b7ab:	jns    0x40b7ae
  40b7ad:	xchg   esi,eax
  40b7ae:	ret    0xb2fc
  40b7b1:	jmp    0x7835:0x6239bd13
  40b7b8:	mov    esi,es
  40b7ba:	jne    0x40b75e
  40b7bc:	icebp  
  40b7bd:	xor    al,0x32
  40b7bf:	sub    al,0x74
  40b7c1:	adc    DWORD PTR [esi-0x64],edx
  40b7c4:	repz xchg edi,eax
  40b7c6:	icebp  
  40b7c7:	pop    edx
  40b7c8:	addr16 adc esi,eax
  40b7cb:	repz xchg ebp,eax
  40b7cd:	les    eax,FWORD PTR [ecx+0x7d41fa84]
  40b7d3:	jmp    0x661d57a5
  40b7d8:	mov    esp,DWORD PTR [ebp+0x16]
  40b7db:	and    esi,DWORD PTR [esi-0x762dda6e]
  40b7e1:	int3   
  40b7e2:	mov    cl,BYTE PTR [edi]
  40b7e4:	lea    eax,[esi-0x5d]
  40b7e7:	mov    al,0x83
  40b7e9:	mov    ecx,0x5d4f451a
  40b7ee:	xchg   BYTE PTR [ecx+0x63],cl
  40b7f1:	mov    bl,0xad
  40b7f3:	adc    eax,0xeb3f3144
  40b7f8:	push   edi
  40b7f9:	mov    ah,0x43
  40b7fb:	sub    dl,BYTE PTR [ebp+eiz*4-0x12]
  40b7ff:	fistp  QWORD PTR [ecx]
  40b801:	out    dx,al
  40b802:	(bad)  
  40b804:	inc    edi
  40b805:	(bad)  [esi]
  40b807:	cmp    BYTE PTR ds:0x62b82dd,0x39
  40b80e:	or     DWORD PTR [ecx-0x6e4e136d],ebp
  40b814:	std    
  40b815:	xor    DWORD PTR [eax],ecx
  40b817:	inc    esp
  40b818:	adc    dh,ch
  40b81a:	sub    eax,0x195a6591
  40b81f:	fs cmp eax,0xd488a2e5
  40b825:	daa    
  40b826:	xor    ch,dh
  40b828:	fld    TBYTE PTR [edx-0x76]
  40b82b:	fdivr  DWORD PTR ds:0x1609d12f
  40b831:	int    0xd7
  40b833:	pop    ss
  40b834:	jp     0x40b7f6
  40b836:	int3   
  40b837:	xchg   edi,eax
  40b838:	cmp    al,0xe4
  40b83a:	mov    ds:0x82252b55,eax
  40b83f:	shr    BYTE PTR [eax+edx*1+0x79],cl
  40b843:	xchg   esi,eax
  40b844:	xor    DWORD PTR [eax],ebx
  40b846:	dec    edx
  40b847:	scas   eax,DWORD PTR es:[edi]
  40b848:	ins    BYTE PTR es:[edi],dx
  40b849:	xor    al,dh
  40b84b:	push   ebp
  40b84c:	sbb    dh,BYTE PTR [edi+eax*8+0x501edbb]
  40b853:	bound  eax,QWORD PTR [ecx+edi*1]
  40b856:	sahf   
  40b857:	add    eax,0x2b72c378
  40b85c:	pop    ebp
  40b85d:	call   0x21dca598
  40b862:	mov    edi,DWORD PTR [ebx+0x68]
  40b865:	pop    edx
  40b866:	jle    0x40b8e3
  40b868:	ins    BYTE PTR es:[edi],dx
  40b869:	lods   eax,DWORD PTR ds:[esi]
  40b86a:	mov    ?,WORD PTR [esi]
  40b86c:	xchg   edx,eax
  40b86d:	inc    ebx
  40b86e:	ror    BYTE PTR [edi],cl
  40b870:	test   DWORD PTR [edi+0x596328f0],edx
  40b876:	dec    ebp
  40b877:	mov    cl,0x15
  40b879:	and    BYTE PTR [ebx+0x2bfa3537],ch
  40b87f:	jno    0x40b8af
  40b881:	mov    al,0x57
  40b883:	pop    edx
  40b884:	iret   
  40b885:	or     esp,eax
  40b887:	in     eax,dx
  40b888:	es leave 
  40b88a:	jmp    0x9b3e4fc3
  40b88f:	jl     0x40b874
  40b891:	mov    dl,0x68
  40b893:	ins    DWORD PTR es:[edi],dx
  40b894:	jb     0x40b8b4
  40b896:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b897:	imul   ecx,esp,0x33a84917
  40b89d:	mov    al,0x7e
  40b89f:	shr    al,0x2c
  40b8a2:	out    dx,al
  40b8a3:	inc    ebx
  40b8a4:	jb     0x40b901
  40b8a6:	xor    dh,bh
  40b8a8:	pop    ebp
  40b8a9:	shl    BYTE PTR [ebx+0x14d644b2],1
  40b8af:	jmp    0x9ff8fe98
  40b8b4:	in     eax,dx
  40b8b5:	or     al,0x92
  40b8b7:	(bad)  
  40b8b8:	mov    eax,ds:0x9db4108c
  40b8bd:	and    edx,DWORD PTR [ebp+0x60]
  40b8c0:	jecxz  0x40b87d
  40b8c2:	imul   eax,DWORD PTR [ebp+eiz*8-0x3253b13f],0x1b
  40b8ca:	repnz ficom WORD PTR [edi]
  40b8cd:	jo     0x40b90e
  40b8cf:	mov    ch,0xe8
  40b8d1:	stos   BYTE PTR es:[edi],al
  40b8d2:	ss push edi
  40b8d4:	es pop edi
  40b8d6:	sub    DWORD PTR [eax+0x4b],eax
  40b8d9:	and    eax,0x99cf967f
  40b8de:	mov    cl,0x10
  40b8e1:	(bad)  
  40b8e2:	aaa    
  40b8e3:	mov    esi,0xf2d5d643
  40b8e8:	add    DWORD PTR [ebp+0x39f65117],ebp
  40b8ee:	xor    edi,esp
  40b8f0:	rcr    bl,1
  40b8f2:	inc    ebp
  40b8f3:	jns    0x40b94e
  40b8f5:	out    0xce,al
  40b8f7:	ficom  WORD PTR [eax-0x65bc2d8b]
  40b8fd:	add    eax,edi
  40b8ff:	imul   eax
  40b901:	das    
  40b902:	sub    DWORD PTR [eax+0x2b720ed5],eax
  40b908:	in     eax,0x9d
  40b90a:	ror    BYTE PTR [edx+edi*2-0x4b4650d7],0x2c
  40b912:	scas   eax,DWORD PTR es:[edi]
  40b913:	popf   
  40b914:	xchg   BYTE PTR [ecx+0x54],cl
  40b917:	rcr    BYTE PTR [eax+0x53],1
  40b91a:	stos   BYTE PTR es:[edi],al
  40b91b:	inc    edx
  40b91c:	std    
  40b91d:	add    al,0xe0
  40b91f:	loope  0x40b8bd
  40b921:	xchg   esi,eax
  40b922:	xchg   BYTE PTR [eax-0x5],dl
  40b925:	sahf   
  40b926:	inc    esi
  40b927:	lods   eax,DWORD PTR ds:[esi]
  40b928:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b929:	push   ebp
  40b92a:	leave  
  40b92b:	pop    edi
  40b92c:	push   esp
  40b92d:	adc    dh,BYTE PTR [ebx+eiz*4+0x1af01627]
  40b934:	add    eax,0xdf91ec8
  40b939:	mov    al,ds:0x19bfcda4
  40b93e:	or     eax,0x186ee2a0
  40b943:	push   ss
  40b944:	jl     0x40b93b
  40b946:	fisubr DWORD PTR [edx-0x4dec7cd4]
  40b94c:	out    dx,eax
  40b94d:	cs add al,0xcc
  40b950:	scas   al,BYTE PTR es:[edi]
  40b951:	std    
  40b952:	cmp    esi,DWORD PTR [eax]
  40b954:	mov    ds:0x3eb13776,al
  40b959:	xor    ebx,DWORD PTR [edi-0x1aa17b32]
  40b95f:	adc    al,BYTE PTR ds:[esi-0x57]
  40b963:	jno    0x40b932
  40b965:	ror    esp,cl
  40b967:	xchg   esi,eax
  40b968:	mov    dh,0xe5
  40b96a:	pushf  
  40b96b:	popf   
  40b96c:	scas   eax,DWORD PTR es:[edi]
  40b96d:	arpl   WORD PTR [eax],si
  40b96f:	call   0x91936198
  40b974:	xchg   edx,eax
  40b975:	lods   al,BYTE PTR ds:[esi]
  40b976:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b977:	push   eax
  40b978:	add    esp,eax
  40b97a:	jae    0x40b9b4
  40b97c:	pop    ecx
  40b97d:	jns    0x40b90f
  40b97f:	xchg   ebp,eax
  40b980:	inc    esi
  40b981:	cmp    DWORD PTR [edx-0x2],esi
  40b984:	and    BYTE PTR [esi-0x2d],dl
  40b987:	pop    ebx
  40b988:	sbb    al,0xe3
  40b98a:	inc    eax
  40b98b:	cmp    al,0x65
  40b98d:	adc    dh,BYTE PTR [esi]
  40b98f:	sub    BYTE PTR [edx+0x270abd0],ch
  40b995:	outs   dx,DWORD PTR ds:[esi]
  40b996:	or     DWORD PTR ds:0xf17d0bfe,0x4469aeac
  40b9a0:	ss pop ebx
  40b9a2:	in     al,dx
  40b9a3:	sub    dl,BYTE PTR [ecx]
  40b9a5:	mov    edi,0x706493fa
  40b9aa:	add    BYTE PTR [esi+edx*4],0xac
  40b9ae:	jo     0x40b9b6
  40b9b0:	mov    esp,0x54b08a91
  40b9b5:	mov    DWORD PTR [esi-0x47f03983],esi
  40b9bb:	shr    BYTE PTR [ecx-0x26a04868],1
  40b9c1:	int    0x7a
  40b9c3:	ror    BYTE PTR [edx],cl
  40b9c5:	(bad)  
  40b9c6:	cmp    ebx,ebp
  40b9c8:	sahf   
  40b9c9:	loop   0x40ba1f
  40b9cb:	mov    esi,0xd280f109
  40b9d0:	paddusb mm0,QWORD PTR [eax*2+0x4d8928c9]
  40b9d8:	dec    ebp
  40b9d9:	cmp    al,0x2a
  40b9db:	or     al,0x9
  40b9dd:	(bad)  
  40b9de:	xchg   ebp,eax
  40b9df:	adc    ecx,DWORD PTR [edx-0x6b8e0be5]
  40b9e5:	jg     0x40b9dd
  40b9e7:	xchg   esi,eax
  40b9e8:	mov    dl,0xb0
  40b9ea:	std    
  40b9eb:	ins    BYTE PTR es:[edi],dx
  40b9ec:	cmp    BYTE PTR [ebp+0x2e],ah
  40b9ef:	sbb    ecx,DWORD PTR [edx-0x28505c29]
  40b9f5:	lods   eax,DWORD PTR ds:[esi]
  40b9f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9f7:	retf   0x949f
  40b9fa:	test   ecx,ecx
  40b9fc:	lock retf 
  40b9fe:	dec    esi
  40b9ff:	jno    0x40ba58
  40ba01:	adc    al,0x21
  40ba03:	cmp    BYTE PTR [edx+0x67],ah
  40ba06:	xor    al,0xda
  40ba08:	mov    esi,0x97d2aa02
  40ba0d:	hlt    
  40ba0e:	(bad)  
  40ba0f:	inc    edx
  40ba10:	aad    0xf5
  40ba12:	sub    ebx,edx
  40ba14:	int    0xf9
  40ba16:	in     al,dx
  40ba17:	repz jecxz 0x40ba2e
  40ba1a:	cmp    dl,ah
  40ba1c:	cwde   
  40ba1d:	jmp    0x138e:0x10ab2eb
  40ba24:	adc    ch,BYTE PTR [ecx+0x48]
  40ba27:	add    ecx,DWORD PTR [bp+0x2c7b]
  40ba2c:	sub    esp,ebp
  40ba2e:	popa   
  40ba2f:	push   ebx
  40ba30:	sub    eax,0x2f494e47
  40ba35:	xchg   esi,eax
  40ba36:	xchg   edi,eax
  40ba37:	mov    bh,0x32
  40ba39:	shl    ebx,1
  40ba3b:	outs   dx,DWORD PTR ds:[esi]
  40ba3c:	sub    BYTE PTR [eax+0x22],cl
  40ba3f:	ret    0x9ff0
  40ba42:	fidiv  DWORD PTR [ebp+0x1c]
  40ba45:	outs   dx,DWORD PTR ds:[esi]
  40ba46:	lahf   
  40ba47:	stos   BYTE PTR es:[edi],al
  40ba48:	pop    edi
  40ba49:	repz loop 0x40baa5
  40ba4c:	fidivr DWORD PTR [ebp+0x45]
  40ba4f:	jl     0x40b9e2
  40ba51:	dec    esp
  40ba52:	sti    
  40ba53:	jmp    0xd933:0x82f670f6
  40ba5a:	imul   edi,DWORD PTR [edi+0x315e1029],0x7a
  40ba61:	sti    
  40ba62:	cmp    BYTE PTR [ebx],0x38
  40ba65:	stc    
  40ba66:	push   ecx
  40ba67:	adc    eax,0x10ab3103
  40ba6c:	xchg   edx,eax
  40ba6d:	rol    eax,1
  40ba6f:	cmc    
  40ba70:	sub    al,0xad
  40ba72:	ret    0x2bb9
  40ba75:	pushf  
  40ba76:	call   0x2d80:0xceb7ffe2
  40ba7d:	ins    DWORD PTR es:[edi],dx
  40ba7e:	in     eax,0x21
  40ba80:	xlat   BYTE PTR ds:[ebx]
  40ba81:	or     al,0x87
  40ba83:	add    esp,DWORD PTR [ecx]
  40ba85:	ss cmp eax,0x84d6e81a
  40ba8b:	dec    esp
  40ba8c:	shl    DWORD PTR [esi-0x45fcaadc],0x95
  40ba93:	jg     0x40bb0d
  40ba95:	leave  
  40ba96:	push   esp
  40ba97:	lock xor dl,BYTE PTR [ecx]
  40ba9a:	ret    0xf76b
  40ba9d:	jmp    DWORD PTR [ebx-0x74]
  40baa0:	add    edx,DWORD PTR [edx+0x4f5d2f09]
  40baa6:	jecxz  0x40bae7
  40baa8:	cmp    al,BYTE PTR [ecx]
  40baaa:	out    0xd1,al
  40baac:	mov    edx,0x4e115d48
  40bab1:	test   al,0x1a
  40bab3:	sbb    BYTE PTR [esi],cl
  40bab5:	iret   
  40bab6:	adc    ebx,DWORD PTR [edx]
  40bab8:	adc    al,0x8a
  40baba:	imul   ebx,DWORD PTR ds:0x3858b313,0xdd955255
  40bac4:	imul   eax,DWORD PTR [eax],0xe1fb862
  40baca:	or     bh,BYTE PTR gs:0xc72766f3
  40bad1:	inc    esp
  40bad2:	ror    DWORD PTR [esi-0x5f],cl
  40bad5:	mov    ecx,0xb381c1c9
  40bada:	div    DWORD PTR [edx-0x2a060129]
  40bae0:	lds    ecx,FWORD PTR [eax]
  40bae2:	leave  
  40bae3:	push   esp
  40bae4:	(bad)  
  40bae5:	sub    al,0xe0
  40bae7:	fs mov eax,0x817cf880
  40baed:	sbb    BYTE PTR [edi],dl
  40baef:	mov    al,ds:0xcb86fb7f
  40baf4:	add    BYTE PTR [ebx+esi*8-0x53],bl
  40baf8:	dec    ebx
  40baf9:	mov    esi,0x97add2d5
  40bafe:	mov    ds:0x726132a9,eax
  40bb03:	xchg   ebp,eax
  40bb04:	lock jb 0x40bb09
  40bb07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb08:	sub    eax,0x2cddbffd
  40bb0d:	jbe    0x40baab
  40bb0f:	inc    ebx
  40bb10:	mov    ebp,DWORD PTR [esi+0x102482c0]
  40bb16:	sub    ecx,DWORD PTR [ecx+0x21fbb055]
  40bb1c:	sub    DWORD PTR [ebx+0x6cc37bf1],ecx
  40bb22:	call   0xec55583a
  40bb27:	inc    edi
  40bb28:	push   DWORD PTR [ecx]
  40bb2a:	aas    
  40bb2b:	pop    esp
  40bb2c:	dec    esp
  40bb2d:	jbe    0x40bb16
  40bb2f:	popa   
  40bb30:	adc    eax,0xa9dd6db8
  40bb35:	mov    ecx,ebp
  40bb37:	adc    al,0x91
  40bb39:	pop    ebx
  40bb3a:	inc    ebp
  40bb3b:	mov    WORD PTR [edx+ecx*1+0x3ecc6eb3],?
  40bb42:	adc    DWORD PTR [esi],ebp
  40bb44:	loope  0x40baf8
  40bb46:	pop    esi
  40bb47:	push   ebx
  40bb48:	ret    0xf351
  40bb4b:	outs   dx,DWORD PTR ds:[esi]
  40bb4c:	int3   
  40bb4d:	retf   
  40bb4e:	add    esi,DWORD PTR [ebx+esi*1]
  40bb51:	neg    BYTE PTR [edi]
  40bb53:	lds    esp,FWORD PTR [ebx+0x27]
  40bb56:	mov    cl,0x58
  40bb58:	nop
  40bb59:	ins    BYTE PTR es:[edi],dx
  40bb5a:	xchg   BYTE PTR [eax],dl
  40bb5c:	rcr    DWORD PTR [edi+0x6e6c2482],1
  40bb62:	hlt    
  40bb63:	cmp    esi,ebp
  40bb65:	fild   QWORD PTR [ebx]
  40bb67:	sub    al,0x54
  40bb69:	cwde   
  40bb6a:	sar    dl,1
  40bb6c:	and    DWORD PTR [eax-0x20],ebp
  40bb6f:	and    al,0x7a
  40bb71:	push   eax
  40bb72:	out    0x36,eax
  40bb74:	mov    cl,0xe6
  40bb76:	test   ah,cl
  40bb78:	retf   
  40bb79:	in     eax,dx
  40bb7a:	mov    edx,0x977ba391
  40bb7f:	daa    
  40bb80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb81:	mov    WORD PTR [edi-0x6ad6c7c8],ds
  40bb87:	inc    edx
  40bb88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb89:	mov    ebp,0x2af4b3fb
  40bb8e:	lods   al,BYTE PTR ds:[esi]
  40bb8f:	mov    esp,0xa7990ae4
  40bb94:	mov    edi,0x278dde87
  40bb99:	dec    eax
  40bb9a:	jo     0x40bb5a
  40bb9c:	sbb    DWORD PTR [edx+0x34a2492c],esi
  40bba2:	data16 test ch,bl
  40bba5:	ds ret 0xab7d
  40bba9:	cmp    ecx,ebx
  40bbab:	push   cs
  40bbac:	pop    esp
  40bbad:	cld    
  40bbae:	dec    esp
  40bbaf:	aad    0x7a
  40bbb1:	inc    ebx
  40bbb2:	xor    al,0x8e
  40bbb4:	stos   DWORD PTR es:[edi],eax
  40bbb5:	xchg   esp,eax
  40bbb6:	cmp    ebx,DWORD PTR [eax]
  40bbb8:	xchg   edx,eax
  40bbb9:	dec    edx
  40bbba:	mov    ds:0xb3c182d3,al
  40bbbf:	ret    
  40bbc0:	mov    cl,0x81
  40bbc2:	(bad)  
  40bbc3:	out    dx,al
  40bbc4:	cmp    esi,DWORD PTR [ebx+0x7688def4]
  40bbca:	stos   BYTE PTR es:[edi],al
  40bbcb:	add    al,BYTE PTR [edi]
  40bbcd:	fxch   st(3)
  40bbcf:	push   ss
  40bbd0:	add    BYTE PTR [esi],bh
  40bbd2:	iret   
  40bbd3:	leave  
  40bbd4:	(bad)  
  40bbd5:	xchg   ecx,eax
  40bbd6:	mov    esp,0x71779288
  40bbdb:	push   ebp
  40bbdc:	ins    BYTE PTR es:[edi],dx
  40bbdd:	jb     0x40bc1c
  40bbdf:	cmc    
  40bbe0:	nop
  40bbe1:	call   0x4f4c6067
  40bbe6:	mov    ebx,edi
  40bbe8:	mov    bh,0x7c
  40bbea:	ins    BYTE PTR es:[edi],dx
  40bbeb:	fdivr  DWORD PTR [edx+ecx*2+0x2cf8914a]
  40bbf2:	ficomp WORD PTR [ebp+0x53]
  40bbf5:	sub    BYTE PTR [edx+edi*4],bh
  40bbf8:	sub    ebp,DWORD PTR [ecx]
  40bbfa:	test   eax,0x4bd345ed
  40bbff:	dec    esi
  40bc00:	xor    BYTE PTR [ecx-0x75],cl
  40bc03:	test   BYTE PTR [edx-0x75],al
  40bc06:	int    0x6
  40bc08:	arpl   WORD PTR [ebx],bx
  40bc0a:	lahf   
  40bc0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc0c:	popf   
  40bc0d:	es in  eax,0xee
  40bc10:	inc    ebp
  40bc11:	das    
  40bc12:	sbb    BYTE PTR [esi+0x2bcc4d42],bl
  40bc18:	shl    BYTE PTR [ebx-0x4e30935a],cl
  40bc1e:	mov    dl,0x2e
  40bc20:	jne    0x40bba3
  40bc22:	or     dl,BYTE PTR [ebx-0x439c7634]
  40bc28:	pop    es
  40bc29:	mov    esp,0xac7d7ae2
  40bc2e:	xchg   BYTE PTR [edx],dh
  40bc30:	enter  0xcd3a,0x20
  40bc34:	jb     0x40bc5f
  40bc36:	popa   
  40bc37:	cld    
  40bc38:	adc    BYTE PTR [edx-0x3c2af7d5],0x14
  40bc3f:	pop    esp
  40bc40:	lahf   
  40bc41:	stos   BYTE PTR es:[edi],al
  40bc42:	pop    edx
  40bc43:	mov    ebx,0x4e48a358
  40bc48:	out    0xed,al
  40bc4a:	adc    al,0x3b
  40bc4c:	pushf  
  40bc4d:	jno    0x40bc88
  40bc4f:	aas    
  40bc50:	ja     0x40bbd2
  40bc52:	imul   edi,DWORD PTR [edi+0x4fc9c600],0xffffffaa
  40bc59:	adc    eax,0xe6a98542
  40bc5e:	pop    edx
  40bc5f:	jne    0x40bbf5
  40bc61:	sub    eax,0xb824fee2
  40bc66:	adc    al,0xa6
  40bc68:	inc    edi
  40bc69:	push   eax
  40bc6a:	test   DWORD PTR [esi-0x51],edx
  40bc6d:	dec    eax
  40bc6e:	fsubrp st(5),st
  40bc70:	mov    bl,0x1a
  40bc72:	sub    eax,0x5286e3eb
  40bc77:	xor    DWORD PTR [ebp+ebx*4+0x1af68e0c],esp
  40bc7e:	lea    ebx,[edi+0x32]
  40bc81:	pop    esp
  40bc82:	jo     0x40bcfd
  40bc84:	out    dx,al
  40bc85:	adc    bl,dl
  40bc87:	fnstcw WORD PTR [eax-0x7e]
  40bc8a:	data16 das 
  40bc8c:	push   esi
  40bc8d:	outs   dx,BYTE PTR ds:[esi]
  40bc8e:	rcr    BYTE PTR [esi-0x4d16c44a],1
  40bc94:	push   ecx
  40bc95:	ds jge 0x40bd0c
  40bc98:	fcomp  DWORD PTR [eax+0xc]
  40bc9b:	scas   al,BYTE PTR es:[edi]
  40bc9c:	sbb    al,0xbe
  40bc9e:	inc    esp
  40bc9f:	test   al,0x29
  40bca1:	sahf   
  40bca2:	pop    edi
  40bca3:	xchg   edi,eax
  40bca4:	test   al,0x68
  40bca6:	adc    al,0x6e
  40bca8:	xchg   esi,eax
  40bca9:	outs   dx,BYTE PTR ds:[esi]
  40bcaa:	scas   eax,DWORD PTR es:[edi]
  40bcab:	inc    esi
  40bcac:	scas   eax,DWORD PTR es:[edi]
  40bcad:	mov    DWORD PTR [edx-0x19ee2d3c],0x2dea98dc
  40bcb7:	adc    BYTE PTR [edx-0x167ffd27],dh
  40bcbd:	xchg   esi,eax
  40bcbe:	and    ebp,DWORD PTR [eax+0x3d66a8af]
  40bcc4:	pop    ebp
  40bcc5:	fisub  DWORD PTR [esi]
  40bcc7:	into   
  40bcc8:	iret   
  40bcc9:	sbb    eax,0x8b0547f
  40bcce:	inc    edx
  40bccf:	mov    ah,0xa8
  40bcd1:	loopne 0x40bd43
  40bcd3:	cmp    esp,DWORD PTR [edx+0x45]
  40bcd6:	dec    ecx
  40bcd7:	(bad)  
  40bcd8:	outs   dx,DWORD PTR ds:[esi]
  40bcd9:	dec    edi
  40bcda:	sub    BYTE PTR [edx-0x18],0x42
  40bcde:	rcr    BYTE PTR [edi+0x10],1
  40bce1:	in     al,0x5a
  40bce3:	call   0xcc9163a4
  40bce8:	fcom   QWORD PTR [esi+0x28]
  40bceb:	xor    BYTE PTR [ecx],ch
  40bced:	push   edi
  40bcee:	imul   edi,DWORD PTR [ecx-0x37],0x5907ba92
  40bcf5:	jbe    0x40bd42
  40bcf7:	dec    esp
  40bcf8:	rcl    BYTE PTR [esi-0x11],cl
  40bcfb:	sbb    al,0x9b
  40bcfd:	rcl    edi,1
  40bcff:	outs   dx,DWORD PTR ds:[esi]
  40bd00:	or     DWORD PTR [ebx+0x314bd758],0xbbd87ae3
  40bd0a:	in     al,0x2
  40bd0c:	call   0xc7be5e9e
  40bd11:	push   ds
  40bd12:	or     DWORD PTR [ebp-0x2b],esp
  40bd15:	or     edx,edx
  40bd17:	int    0xf0
  40bd19:	cdq    
  40bd1a:	pop    ebx
  40bd1b:	ins    DWORD PTR es:[edi],dx
  40bd1c:	inc    ecx
  40bd1d:	mov    ds:0x93235adb,al
  40bd22:	adc    ecx,DWORD PTR [edi-0x56]
  40bd25:	sbb    eax,DWORD PTR [ebp+ebx*2-0xa3b9c87]
  40bd2c:	or     BYTE PTR [eax-0x64b4ac62],bl
  40bd32:	mov    ah,bl
  40bd34:	mov    al,0x7f
  40bd36:	fadd   QWORD PTR [esi-0x1a25abaa]
  40bd3c:	je     0x40bd8f
  40bd3e:	test   al,0xec
  40bd40:	(bad)  
  40bd41:	pop    ecx
  40bd42:	call   0xbfbd8057
  40bd47:	mov    ds:0xcfd71094,eax
  40bd4c:	dec    edi
  40bd4d:	inc    ebx
  40bd4e:	lahf   
  40bd4f:	outs   dx,DWORD PTR ds:[esi]
  40bd50:	pusha  
  40bd51:	pop    edx
  40bd52:	dec    esi
  40bd53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd55:	mov    ebp,0x6948cf63
  40bd5a:	aaa    
  40bd5b:	(bad)  
  40bd5c:	mov    al,ds:0x6242294d
  40bd61:	leave  
  40bd62:	and    eax,0x96cfbf61
  40bd67:	(bad)
  40bd6a:	push   ebx
  40bd6b:	ret    0xbf61
  40bd6e:	pop    ebx
  40bd6f:	inc    ebx
  40bd70:	jno    0x40bdc9
  40bd72:	sbb    BYTE PTR [eax+0x46],ch
  40bd75:	cli    
  40bd76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd77:	ret    
  40bd78:	xor    BYTE PTR [ebx-0x3e],0x89
  40bd7c:	mov    BYTE PTR [ebx],ah
  40bd7e:	pop    es
  40bd7f:	inc    esi
  40bd80:	jg     0x40bdf9
  40bd82:	mov    dl,ah
  40bd84:	sbb    ch,BYTE PTR [ecx+edx*8]
  40bd87:	loop   0x40bd1c
  40bd89:	test   ch,bl
  40bd8b:	cli    
  40bd8c:	lods   al,BYTE PTR cs:[esi]
  40bd8e:	loope  0x40bdf2
  40bd90:	push   edx
  40bd91:	jb     0x40bde0
  40bd93:	or     DWORD PTR [ebx+eiz*8+0x37e5fc63],ebp
  40bd9a:	enter  0x4637,0x6b
  40bd9e:	inc    esi
  40bd9f:	mov    esi,ds
  40bda1:	jecxz  0x40bdcb
  40bda3:	int3   
  40bda4:	mov    dl,0x95
  40bda6:	into   
  40bda7:	into   
  40bda8:	idiv   DWORD PTR [edi]
  40bdaa:	xchg   BYTE PTR [esi+0x793f6e77],bh
  40bdb0:	or     DWORD PTR [edx+0x162479bb],ebx
  40bdb6:	repz dec eax
  40bdb8:	mov    dl,BYTE PTR [eax-0x6342a05e]
  40bdbe:	out    dx,al
  40bdbf:	xchg   ebx,eax
  40bdc0:	lea    ebp,[ecx+0x50]
  40bdc3:	xor    ebx,DWORD PTR [edi+ebx*1-0x15]
  40bdc7:	cmp    DWORD PTR [esi+0x2c5d4a],0xa7796683
  40bdd1:	pavgb  mm4,QWORD PTR [edi]
  40bdd4:	add    DWORD PTR [eax+0x7c2c1839],edx
  40bdda:	retf   
  40bddb:	aaa    
  40bddc:	push   esp
  40bddd:	mov    ecx,0xac46cdea
  40bde2:	(bad)  
  40bde3:	pop    ecx
  40bde4:	fidiv  DWORD PTR [eax+0x4e5d2f85]
  40bdea:	cmp    eax,0xa10b3b14
  40bdef:	iretw  
  40bdf1:	or     esi,DWORD PTR [ecx+0x18abe81c]
  40bdf7:	cmp    al,0x85
  40bdf9:	jl     0x40be17
  40bdfb:	push   esi
  40bdfc:	cmp    DWORD PTR [esi],0x5d8384f0
  40be02:	repz in eax,0xf0
  40be05:	push   edx
  40be06:	xchg   ebx,eax
  40be07:	int3   
  40be08:	ficomp WORD PTR [ebp+0x5d]
  40be0b:	mov    ss,ebx
  40be0d:	mov    dl,0xa
  40be0f:	inc    esi
  40be10:	shr    BYTE PTR [eax-0x70f702fb],1
  40be16:	in     al,dx
  40be17:	ds retf 0x6b98
  40be1b:	pop    ebp
  40be1c:	sbb    eax,0x72e14147
  40be21:	xlat   BYTE PTR ds:[ebx]
  40be22:	imul   BYTE PTR [ecx+0x4b]
  40be25:	(bad)  
  40be27:	ja     0x40be26
  40be29:	pop    esp
  40be2a:	fst    QWORD PTR [ecx]
  40be2c:	shl    BYTE PTR [esi-0x69e80dfd],cl
  40be32:	cmp    BYTE PTR [edx+0x76],bh
  40be35:	sahf   
  40be36:	jns    0x40be2f
  40be38:	ror    ecx,cl
  40be3a:	mov    bl,0x54
  40be3c:	and    BYTE PTR [esi+0x2e],0x58
  40be40:	cdq    
  40be41:	test   al,0x6c
  40be43:	jno    0x40bebd
  40be45:	outs   dx,DWORD PTR ds:[esi]
  40be46:	pushf  
  40be47:	inc    esp
  40be48:	pop    eax
  40be49:	lods   eax,DWORD PTR ds:[esi]
  40be4a:	inc    ecx
  40be4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be4c:	xchg   ebx,eax
  40be4d:	mov    edi,0xed7a305d
  40be52:	arpl   WORD PTR [ecx+0x28f4b579],bp
  40be58:	hlt    
  40be59:	jge    0x40be1a
  40be5b:	ds dec edx
  40be5d:	pop    es
  40be5e:	sbb    eax,0xbb6cc91
  40be63:	fwait
  40be64:	je     0x40be42
  40be66:	test   eax,0x96829d54
  40be6b:	pop    es
  40be6c:	mov    dh,0x3
  40be6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be6f:	icebp  
  40be70:	ins    DWORD PTR es:[edi],dx
  40be71:	loope  0x40beaf
  40be73:	ins    BYTE PTR es:[edi],dx
  40be74:	scas   eax,DWORD PTR es:[edi]
  40be75:	or     dh,ch
  40be77:	mov    BYTE PTR [edx-0x57],dl
  40be7a:	into   
  40be7b:	lods   eax,DWORD PTR ds:[esi]
  40be7c:	mov    al,BYTE PTR [eax+0x67]
  40be7f:	jle    0x40be0a
  40be81:	mov    edx,0xa650f752
  40be86:	in     al,dx
  40be87:	stos   DWORD PTR es:[edi],eax
  40be88:	mov    BYTE PTR [eax+0x6f],0xe5
  40be8c:	mov    ah,0xeb
  40be8e:	push   edx
  40be8f:	in     al,dx
  40be90:	mov    esi,0x4d615ce3
  40be95:	inc    ebp
  40be96:	add    DWORD PTR [edi+0x1002d802],ebx
  40be9c:	mov    esi,0xf28db114
  40bea1:	mov    dl,0x6d
  40bea3:	xchg   BYTE PTR [edx],bh
  40bea5:	add    ebx,DWORD PTR [eax]
  40bea7:	(bad)  
  40bea8:	fiadd  DWORD PTR [edi]
  40beaa:	mov    dl,0xf1
  40beac:	xchg   edx,eax
  40bead:	(bad)  
  40beae:	cmp    DWORD PTR [edi+0x7e],edx
  40beb1:	mov    ecx,0xa5118684
  40beb6:	pop    ds
  40beb7:	je     0x40bef3
  40beb9:	int    0x5f
  40bebb:	pop    ebp
  40bebc:	(bad)  
  40bebd:	sbb    DWORD PTR [ebx],ebx
  40bebf:	loopne 0x40bf06
  40bec1:	les    ebx,FWORD PTR [ebx+esi*4]
  40bec4:	push   0x53
  40bec6:	mov    eax,0x56a08909
  40becb:	jmp    0x7f9d:0xd8bcc9cd
  40bed2:	add    edi,DWORD PTR gs:[ebp-0x13f5cad9]
  40bed9:	pop    ecx
  40beda:	mov    edx,DWORD PTR [edx]
  40bedc:	lds    eax,FWORD PTR [ebx-0x25]
  40bedf:	mov    ch,0xb2
  40bee1:	adc    BYTE PTR [eax+ebp*1+0x3114c066],ah
  40bee8:	aam    0xd3
  40beea:	mov    ah,0xc4
  40beec:	test   edx,0x4e4b744b
  40bef2:	and    eax,0x386bded5
  40bef7:	mov    cl,0x86
  40bef9:	pop    es
  40befa:	inc    edi
  40befb:	mov    WORD PTR [ecx-0xa2dc0bb],?
  40bf01:	xchg   ebp,eax
  40bf02:	adc    DWORD PTR [edx],ebx
  40bf04:	and    ecx,DWORD PTR [eax]
  40bf06:	jnp    0x40be8d
  40bf08:	mov    dl,0x32
  40bf0a:	scas   eax,DWORD PTR es:[edi]
  40bf0b:	or     al,0x61
  40bf0d:	data16 fwait
  40bf0f:	pusha  
  40bf10:	pop    ecx
  40bf11:	mov    ecx,0x1ee96e0f
  40bf16:	in     al,0x29
  40bf18:	aas    
  40bf19:	jne    0x40bf79
  40bf1b:	add    ebp,DWORD PTR ds:0x3c606a4a
  40bf21:	xor    BYTE PTR [ebx],ch
  40bf23:	jno    0x40bf64
  40bf25:	fdivrp st(0),st
  40bf27:	les    ebp,FWORD PTR [eax]
  40bf29:	test   eax,0xa1f33782
  40bf2e:	sbb    BYTE PTR [ebx+0x9],ch
  40bf31:	cmp    BYTE PTR [esi],dh
  40bf33:	gs ret 
  40bf35:	xor    BYTE PTR [edx-0x711f6289],al
  40bf3b:	rol    ebp,cl
  40bf3d:	jo     0x40bf5a
  40bf3f:	adc    al,0x37
  40bf41:	dec    ebx
  40bf42:	dec    esp
  40bf43:	shl    BYTE PTR [edi+0x17],cl
  40bf46:	cli    
  40bf47:	adc    DWORD PTR [edi+ebp*1],ebx
  40bf4a:	adc    BYTE PTR [ebp-0x3494df28],dl
  40bf50:	cmp    ebx,DWORD PTR [ecx+0x57d897f6]
  40bf56:	inc    edi
  40bf57:	mul    DWORD PTR [eax-0x5b]
  40bf5a:	fidivr DWORD PTR [esi]
  40bf5c:	pushf  
  40bf5d:	xchg   ebp,eax
  40bf5e:	sub    dh,BYTE PTR [ebx+0x5]
  40bf61:	test   ecx,ecx
  40bf63:	push   eax
  40bf64:	add    DWORD PTR ds:0xed12a630,esi
  40bf6a:	popf   
  40bf6b:	mov    esi,edi
  40bf6d:	jge    0x40bf4f
  40bf6f:	mov    ebx,0x1db9e5b7
  40bf74:	aad    0x72
  40bf76:	fs cmp al,0x1e
  40bf79:	or     DWORD PTR [esi+eiz*1+0x7b8621c4],esp
  40bf80:	lods   al,BYTE PTR ds:[esi]
  40bf81:	pop    eax
  40bf82:	add    al,0x11
  40bf84:	out    0x9c,al
  40bf86:	push   eax
  40bf87:	add    al,0x43
  40bf89:	daa    
  40bf8a:	xchg   ebx,eax
  40bf8b:	xlat   BYTE PTR ds:[ebx]
  40bf8c:	inc    esi
  40bf8d:	mov    edx,0xc2ba5f38
  40bf92:	std    
  40bf93:	fnsave [esi]
  40bf95:	pop    ecx
  40bf96:	je     0x40bf6e
  40bf98:	mov    al,BYTE PTR [ebx+0x45041dba]
  40bf9e:	xor    BYTE PTR [eax+0xa462a4],0x99
  40bfa5:	jle    0x40c017
  40bfa7:	inc    eax
  40bfa8:	mov    dl,0x87
  40bfaa:	jae    0x40c01d
  40bfac:	outs   dx,BYTE PTR ds:[esi]
  40bfad:	jp     0x40bffa
  40bfaf:	js     0x40bffd
  40bfb1:	sti    
  40bfb2:	lods   al,BYTE PTR ds:[esi]
  40bfb3:	cmp    eax,0xa6e8be80
  40bfb8:	xchg   ebp,eax
  40bfb9:	fcomp  DWORD PTR [ebx-0x5f]
  40bfbc:	lods   eax,DWORD PTR ds:[esi]
  40bfbd:	pop    es
  40bfbe:	pop    ebx
  40bfbf:	cmc    
  40bfc0:	hlt    
  40bfc1:	mov    al,0x9
  40bfc3:	cli    
  40bfc4:	sahf   
  40bfc5:	jnp    0x40c00e
  40bfc7:	mov    bh,0x77
  40bfc9:	jne    0x40c020
  40bfcb:	or     bl,BYTE PTR [esi]
  40bfcd:	sbb    bh,BYTE PTR [eax+0x20]
  40bfd0:	loopne 0x40c015
  40bfd2:	inc    eax
  40bfd3:	mov    ds,esi
  40bfd5:	mov    ecx,0x6e19dd3f
  40bfda:	sub    eax,0x6eb6ad40
  40bfdf:	addr16 jge 0x40c03f
  40bfe2:	imul   esp
  40bfe4:	sub    ah,BYTE PTR [esi+ebp*4]
  40bfe7:	jecxz  0x40bfcb
  40bfe9:	imul   edi,DWORD PTR [edx+0x7b6c09c2],0xfffffffb
  40bff0:	xchg   esp,eax
  40bff1:	inc    ebx
  40bff2:	pop    eax
  40bff3:	or     BYTE PTR [edx+0x12df61b2],al
  40bff9:	fmul   QWORD PTR [edx]
  40bffb:	and    dl,ch
  40bffd:	lods   eax,DWORD PTR ds:[esi]
  40bffe:	inc    esi
  40bfff:	adc    DWORD PTR [edi],edi
  40c001:	jnp    0x40c006
  40c003:	dec    ebp
  40c004:	push   esp
  40c005:	pushf  
  40c006:	sbb    eax,0xa0638437
  40c00b:	xchg   ebp,eax
  40c00c:	aas    
  40c00d:	out    0xe9,eax
  40c00f:	push   es
  40c010:	and    al,0x83
  40c012:	xchg   edi,eax
  40c013:	ins    BYTE PTR es:[edi],dx
  40c014:	aam    0x67
  40c016:	in     eax,0xa6
  40c018:	gs jbe 0x40c01f
  40c01b:	push   cs
  40c01c:	add    al,0xaf
  40c01e:	or     al,0xa0
  40c020:	(bad)  
  40c022:	adc    al,0x10
  40c024:	xchg   DWORD PTR [ebx],edi
  40c026:	cmp    al,0xc3
  40c028:	sub    eax,0x845b8bc4
  40c02d:	sar    BYTE PTR [eax],0x64
  40c030:	mov    edi,0x40bf2c39
  40c035:	or     cl,BYTE PTR ds:0xd53a7438
  40c03b:	cmp    BYTE PTR [ecx],ah
  40c03d:	pushf  
  40c03e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c03f:	xchg   BYTE PTR [ebp-0x2a75f157],al
  40c045:	sti    
  40c046:	pop    es
  40c047:	or     eax,DWORD PTR [ebp+0x5c]
  40c04a:	mov    cl,0x91
  40c04c:	jnp    0x40c0ac
  40c04e:	mov    ecx,DWORD PTR [ecx+0x44a1f953]
  40c054:	imul   ebp,DWORD PTR [eax-0x79f6ce8b],0xfac90213
  40c05e:	int    0x1c
  40c060:	add    ecx,ecx
  40c062:	xchg   ecx,eax
  40c063:	mov    bh,BYTE PTR [edi]
  40c065:	xor    dl,BYTE PTR [ecx]
  40c067:	xlat   BYTE PTR ds:[ebx]
  40c068:	add    BYTE PTR [ecx+0x7a],cl
  40c06b:	cld    
  40c06c:	mov    WORD PTR [ecx-0x3f69940],fs
  40c072:	mov    al,BYTE PTR [edx]
  40c074:	inc    ecx
  40c075:	mov    ds:0xb1923c1,eax
  40c07a:	mov    ds:0xa2dd2255,al
  40c07f:	bnd ret 
  40c081:	hlt    
  40c082:	sub    cl,BYTE PTR [ebp+0x24168d32]
  40c088:	mov    dh,BYTE PTR [edi]
  40c08a:	das    
  40c08b:	pop    edi
  40c08c:	inc    edi
  40c08d:	inc    edx
  40c08e:	push   edi
  40c08f:	(bad)  
  40c090:	cld    
  40c091:	or     BYTE PTR gs:[edx+esi*8-0x786daabc],dh
  40c099:	inc    eax
  40c09a:	push   cs
  40c09b:	adc    eax,0x97f18125
  40c0a0:	jp     0x40c03e
  40c0a2:	jg     0x40c0ff
  40c0a4:	retf   
  40c0a5:	mov    WORD PTR [ebx+edi*2-0x215e9087],es
  40c0ac:	sub    DWORD PTR [edi-0x75b15427],0x91783f7a
  40c0b6:	sub    BYTE PTR [edi-0x12],bl
  40c0b9:	xchg   edx,eax
  40c0ba:	cmp    bl,ah
  40c0bc:	mov    ebp,0xf0eccb33
  40c0c1:	dec    esi
  40c0c2:	idiv   dl
  40c0c4:	int    0x40
  40c0c6:	scas   eax,DWORD PTR es:[edi]
  40c0c7:	inc    DWORD PTR [esi+0x265e911e]
  40c0cd:	adc    al,dl
  40c0cf:	(bad)  
  40c0d0:	int3   
  40c0d1:	jp     0x40c0ff
  40c0d3:	icebp  
  40c0d4:	dec    eax
  40c0d5:	fs and ebx,0xfffffffb
  40c0d9:	out    0xbd,al
  40c0db:	pop    ebx
  40c0dc:	hlt    
  40c0dd:	stos   DWORD PTR es:[edi],eax
  40c0de:	push   cs
  40c0df:	mov    BYTE PTR [ebp-0x19c6b720],0x96
  40c0e6:	je     0x40c145
  40c0e8:	sub    al,0xe6
  40c0ea:	lods   eax,DWORD PTR ds:[esi]
  40c0eb:	mov    BYTE PTR [ebp-0x7b],ch
  40c0ee:	xchg   esi,eax
  40c0ef:	in     al,0xa0
  40c0f1:	fild   WORD PTR [eax-0x5e]
  40c0f5:	call   0x256a:0x57e7fd5f
  40c0fc:	(bad)  
  40c0fd:	stc    
  40c0fe:	fs retf 
  40c100:	mov    al,0xae
  40c102:	icebp  
  40c103:	mov    esp,0x37bd93
  40c108:	mov    ds:0x43e8749d,al
  40c10d:	lahf   
  40c10e:	push   0x71
  40c110:	repz js 0x40c0d0
  40c113:	push   0xa034b8da
  40c118:	jl     0x40c127
  40c11a:	jbe    0x40c0be
  40c11c:	imul   edx,DWORD PTR [eax-0x1e9b2d28],0x36109656
  40c126:	and    al,0x81
  40c128:	xlat   BYTE PTR ds:[ebx]
  40c129:	cmp    DWORD PTR [ecx*8-0x110e12bb],edx
  40c130:	add    ch,BYTE PTR [ecx-0x16]
  40c133:	pop    eax
  40c134:	ins    DWORD PTR es:[edi],dx
  40c135:	sub    ebp,DWORD PTR [edx+ebx*2-0x52]
  40c139:	das    
  40c13a:	jae    0x40c172
  40c13c:	outs   dx,DWORD PTR ds:[esi]
  40c13d:	stos   DWORD PTR es:[edi],eax
  40c13e:	mov    ds:0xa7a15ec3,al
  40c143:	dec    edi
  40c144:	bound  esi,QWORD PTR [edi-0x58eb6ba0]
  40c14a:	popa   
  40c14b:	xlat   BYTE PTR ds:[bx]
  40c14d:	cmp    ecx,DWORD PTR [eax+0xe]
  40c150:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c151:	shr    eax,cl
  40c153:	fimul  WORD PTR [esi+eiz*1-0x7eb9d83b]
  40c15a:	(bad)
  40c15e:	and    eax,0x620cd443
  40c163:	pop    eax
  40c164:	sti    
  40c165:	or     al,ah
  40c167:	adc    eax,0x33d14e3d
  40c16c:	test   al,0xda
  40c16e:	xchg   ebx,eax
  40c16f:	and    ah,BYTE PTR [eax]
  40c171:	inc    esi
  40c172:	fild   DWORD PTR [ecx+0x27a5b72f]
  40c178:	inc    esi
  40c179:	leave  
  40c17a:	jb     0x40c1ee
  40c17c:	ins    DWORD PTR es:[edi],dx
  40c17d:	jg     0x40c153
  40c17f:	jns    0x40c18b
  40c181:	mov    dl,0xfb
  40c183:	sub    ah,BYTE PTR [ecx+0x65]
  40c186:	push   ebp
  40c187:	fwait
  40c188:	adc    DWORD PTR [esi-0x73],ebx
  40c18b:	setbe  BYTE PTR [ebp-0x169cd7cf]
  40c192:	cli    
  40c193:	xor    eax,0x30cdfe94
  40c198:	adc    esi,DWORD PTR [ecx]
  40c19a:	jl     0x40c12b
  40c19c:	cmp    al,0xce
  40c19e:	std    
  40c19f:	dec    edi
  40c1a0:	fbstp  TBYTE PTR [esi+0x1c292e49]
  40c1a6:	jne    0x40c185
  40c1a8:	add    BYTE PTR [edx],0x30
  40c1ab:	in     al,0xd8
  40c1ad:	mov    DWORD PTR [esi-0x55e318f7],ebp
  40c1b3:	push   es
  40c1b4:	sub    ebx,ebp
  40c1b6:	pop    esi
  40c1b7:	lea    esp,[edi+0x4c]
  40c1ba:	adc    al,0xe0
  40c1bc:	push   ebp
  40c1bd:	out    dx,eax
  40c1be:	sub    eax,0x22e32a2e
  40c1c3:	outs   dx,DWORD PTR ds:[esi]
  40c1c4:	cmp    eax,0xcb22e50a
  40c1c9:	fwait
  40c1ca:	jmp    0xfab2:0x2d514ef4
  40c1d1:	push   es
  40c1d2:	sub    DWORD PTR [ecx],esi
  40c1d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1d5:	in     eax,0x5a
  40c1d7:	rol    DWORD PTR [esi-0x63665cc3],1
  40c1dd:	sti    
  40c1de:	jae    0x40c196
  40c1e0:	les    ecx,FWORD PTR [edi]
  40c1e2:	ja     0x40c183
  40c1e4:	pop    edi
  40c1e5:	mov    edx,0x53e06bc
  40c1ea:	xor    BYTE PTR [edx],dh
  40c1ec:	xchg   DWORD PTR [ecx],ebx
  40c1ee:	pop    ss
  40c1ef:	mov    ecx,DWORD PTR [eax-0x62166a36]
  40c1f5:	in     eax,0x2d
  40c1f7:	sub    BYTE PTR [eax],al
  40c1f9:	mov    edi,0xcb9e054e
  40c1fe:	push   edi
  40c1ff:	inc    eax
  40c200:	jb     0x40c25a
  40c202:	ret    0xd59f
  40c205:	add    esi,eax
  40c207:	mov    ebp,DWORD PTR [eax-0x70f29121]
  40c20d:	in     al,0x12
  40c20f:	ss stc 
  40c211:	add    eax,0xebdf79f8
  40c216:	mov    ch,0x0
  40c218:	mov    BYTE PTR [ebx],ah
  40c21a:	push   esi
  40c21b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c21c:	call   0x12ef0d12
  40c221:	ja     0x40c1e1
  40c223:	jb     0x40c223
  40c225:	jecxz  0x40c1ee
  40c227:	mov    bl,0xcc
  40c229:	mul    ecx
  40c22b:	in     al,0xe0
  40c22d:	push   es
  40c22e:	cmp    al,0x8
  40c230:	add    BYTE PTR [ebp+0xeac574f],al
  40c236:	pop    edi
  40c237:	icebp  
  40c238:	div    BYTE PTR [ecx-0x9]
  40c23b:	xchg   edi,eax
  40c23c:	xchg   ecx,eax
  40c23d:	xor    ecx,DWORD PTR [ebx-0x1ad23d93]
  40c243:	lods   al,BYTE PTR ds:[esi]
  40c244:	push   esp
  40c245:	and    DWORD PTR [esi-0x34],eax
  40c248:	xchg   ebp,eax
  40c249:	ja     0x40c2bd
  40c24b:	xchg   esi,eax
  40c24c:	and    DWORD PTR [ebx+0x6455ead4],edx
  40c252:	pop    edi
  40c253:	rcr    BYTE PTR [edx+0x1d988694],1
  40c259:	in     eax,dx
  40c25a:	in     al,dx
  40c25b:	fwait
  40c25c:	stos   DWORD PTR es:[edi],eax
  40c25d:	push   0x8b8d889
  40c262:	mov    edi,0x5009d9af
  40c267:	mov    esp,esi
  40c269:	sub    ecx,DWORD PTR [eax-0x3d]
  40c26c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c26d:	popa   
  40c26e:	sub    ah,BYTE PTR [ecx+0x35b22f87]
  40c274:	add    ch,BYTE PTR [eax-0x25807b38]
  40c27a:	in     eax,0x34
  40c27c:	sbb    al,0x26
  40c27e:	fadd   st(0),st
  40c280:	mov    bl,0x74
  40c282:	outs   dx,DWORD PTR ds:[esi]
  40c283:	dec    esp
  40c284:	hlt    
  40c285:	pop    ecx
  40c286:	cmp    edi,esi
  40c288:	bound  edx,QWORD PTR ss:[ebp+0x3d]
  40c28c:	les    edx,FWORD PTR [edx+0x5e3d054c]
  40c292:	add    eax,DWORD PTR gs:[edx+0x3b]
  40c296:	enter  0xdc30,0x40
  40c29a:	shl    BYTE PTR [edx+0x24],0x38
  40c29e:	aad    0x18
  40c2a0:	push   ecx
  40c2a1:	(bad)  
  40c2a2:	fs jecxz 0x40c306
  40c2a5:	and    BYTE PTR [eax],dh
  40c2a7:	and    BYTE PTR [ecx],dl
  40c2a9:	push   ds
  40c2aa:	and    al,0x7d
  40c2ac:	and    DWORD PTR [ebp+0xa3b4270],eax
  40c2b2:	jg     0x40c24e
  40c2b4:	or     BYTE PTR [ebx+0xc854d86],0x78
  40c2bb:	sar    ebp,cl
  40c2bd:	iret   
  40c2be:	inc    eax
  40c2bf:	pop    es
  40c2c0:	jle    0x40c2ba
  40c2c2:	add    BYTE PTR [edi+0x5116dc7],0x25
  40c2c9:	pop    esi
  40c2ca:	cmp    al,0x41
  40c2cc:	lock clc 
  40c2ce:	outs   dx,DWORD PTR ds:[esi]
  40c2cf:	clc    
  40c2d0:	loopne 0x40c2d5
  40c2d2:	mov    dh,0x8e
  40c2d4:	inc    eax
  40c2d5:	call   0xa831:0xf09f8946
  40c2dc:	lahf   
  40c2dd:	or     edi,DWORD PTR [edi+esi*1+0x472e3a81]
  40c2e4:	sub    al,0x21
  40c2e6:	sub    eax,0x67bd98cf
  40c2eb:	out    dx,al
  40c2ec:	inc    eax
  40c2ed:	and    eax,0x3381063d
  40c2f2:	mov    eax,0x12b49360
  40c2f7:	jmp    0x78825746
  40c2fc:	mov    dh,BYTE PTR [ebp-0x66]
  40c2ff:	or     al,0xd7
  40c301:	jo     0x40c380
  40c303:	or     eax,DWORD PTR [edi+0x18]
  40c306:	(bad)  
  40c307:	loope  0x40c34a
  40c309:	jle    0x40c352
  40c30b:	fcomp  QWORD PTR [ebx+0x1c]
  40c30e:	sub    eax,ebp
  40c310:	xor    BYTE PTR [ecx+0x1],dh
  40c313:	cmp    dh,dl
  40c315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c316:	mov    eax,ds:0xba4e40a9
  40c31b:	xchg   ecx,eax
  40c31c:	int    0x2b
  40c31e:	or     eax,DWORD PTR [eax+ebx*8]
  40c321:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c322:	mov    ebp,0x58ddc37
  40c327:	push   ss
  40c328:	pop    ecx
  40c329:	sub    DWORD PTR [eax],0x3f909a9a
  40c32f:	leave  
  40c330:	mov    ecx,0xdad8ddde
  40c335:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c336:	ret    0x4f5d
  40c339:	call   0x287d7e65
  40c33e:	dec    edx
  40c33f:	je     0x40c3a6
  40c341:	scas   eax,DWORD PTR es:[edi]
  40c342:	int3   
  40c343:	rcl    BYTE PTR [ecx-0x5],cl
  40c346:	sbb    DWORD PTR [ecx],edi
  40c348:	shl    BYTE PTR [edx-0x4d],0xc5
  40c34c:	ror    ecx,1
  40c34e:	int    0x23
  40c350:	cmp    edx,DWORD PTR [esi+0x14]
  40c353:	in     al,dx
  40c354:	loop   0x40c321
  40c356:	xchg   edi,eax
  40c357:	xchg   ecx,eax
  40c358:	das    
  40c359:	retf   
  40c35a:	add    al,0xa8
  40c35c:	out    dx,al
  40c35d:	out    0xae,al
  40c35f:	fdiv   QWORD PTR [ebp-0x5a4ccd9a]
  40c365:	(bad)
  40c368:	inc    edx
  40c369:	mov    ah,0x29
  40c36b:	mov    esi,0xe5032069
  40c370:	les    esp,FWORD PTR [esp+edx*4-0x6fec3f50]
  40c377:	or     eax,0x69a0a5ee
  40c37c:	add    bl,BYTE PTR [ecx+0x6799c91b]
  40c382:	fs dec eax
  40c384:	out    0x90,eax
  40c386:	cmp    BYTE PTR [ecx],0x80
  40c389:	adc    BYTE PTR [esi],ch
  40c38b:	test   BYTE PTR [eax-0x6edc8bbf],dl
  40c391:	rcl    esi,1
  40c393:	scas   al,BYTE PTR es:[edi]
  40c394:	fld    QWORD PTR [ebx-0x4b]
  40c397:	mov    edx,0x8d49dcdd
  40c39c:	loopne 0x40c3a1
  40c39e:	(bad)  
  40c39f:	mov    ah,0x63
  40c3a1:	test   bl,cl
  40c3a3:	add    ah,BYTE PTR [ecx]
  40c3a5:	mov    ds:0x78c2132d,eax
  40c3aa:	mov    ebx,0x5cdb2ac7
  40c3af:	stc    
  40c3b0:	jnp    0x40c42f
  40c3b2:	es int3 
  40c3b4:	mov    dl,BYTE PTR [esi-0xa]
  40c3b7:	xor    eax,0x34355572
  40c3bc:	cmp    eax,0xb3c30678
  40c3c1:	jle    0x40c412
  40c3c3:	shl    DWORD PTR [ecx+edi*2],1
  40c3c6:	sti    
  40c3c7:	inc    eax
  40c3c8:	call   0x6d7:0x5d6af71d
  40c3cf:	jmp    0xbe2f8ffd
  40c3d4:	cmp    eax,0x651d20b8
  40c3d9:	repz arpl WORD PTR ds:0xf37baf37,sp
  40c3e0:	adc    edi,DWORD PTR [ebp-0x36]
  40c3e3:	sbb    ecx,edx
  40c3e5:	lock inc eax
  40c3e7:	leave  
  40c3e8:	icebp  
  40c3e9:	mov    BYTE PTR [eax+0x56],bh
  40c3ec:	pop    eax
  40c3ed:	or     al,dl
  40c3ef:	ins    DWORD PTR es:[edi],dx
  40c3f0:	fidiv  DWORD PTR [ecx]
  40c3f2:	and    al,0x55
  40c3f4:	icebp  
  40c3f5:	ins    BYTE PTR es:[edi],dx
  40c3f6:	or     DWORD PTR ds:0xfee0d143,esi
  40c3fc:	sbb    cl,BYTE PTR [ebx+esi*2+0xd]
  40c400:	std    
  40c401:	jle    0x40c3c2
  40c403:	xchg   edi,eax
  40c404:	jb     0x40c3af
  40c406:	fmul   st(2),st
  40c408:	dec    edi
  40c409:	mov    al,ds:0x91caa4bf
  40c40e:	popa   
  40c40f:	sbb    eax,0xb53ccaef
  40c414:	fiadd  DWORD PTR [ecx-0x72]
  40c417:	clc    
  40c418:	stos   DWORD PTR es:[edi],eax
  40c419:	jno    0x40c3c0
  40c41b:	leave  
  40c41c:	setno  BYTE PTR [ebx-0x31]
  40c420:	jns    0x40c434
  40c422:	out    dx,al
  40c423:	jnp    0x40c3e2
  40c425:	test   al,0xa5
  40c427:	adc    esi,DWORD PTR ds:0x610ebfb4
  40c42d:	or     al,0xdc
  40c42f:	nop
  40c430:	imul   esp,DWORD PTR [ecx-0x68],0x952499dd
  40c437:	jmp    0x98e3:0xb8f4c799
  40c43e:	loope  0x40c485
  40c440:	aas    
  40c441:	les    edi,FWORD PTR [esi]
  40c443:	cmp    edx,DWORD PTR [ebx+0x2c875e83]
  40c449:	xchg   esi,eax
  40c44a:	pop    ebp
  40c44b:	sbb    eax,0x41837f64
  40c450:	(bad)  
  40c451:	and    eax,0x20a31c88
  40c456:	sub    dh,BYTE PTR [edx]
  40c458:	mov    ch,0xce
  40c45a:	jne    0x40c3e0
  40c45c:	sub    eax,0x88f96de4
  40c461:	fimul  DWORD PTR [edx]
  40c463:	jp     0x40c498
  40c465:	cmp    al,0x6
  40c467:	(bad)  
  40c469:	mov    eax,ds:0x88da4f12
  40c46e:	mul    ecx
  40c470:	fst    QWORD PTR [esp+edi*8]
  40c473:	pop    edx
  40c474:	stc    
  40c475:	jne    0x40c472
  40c477:	push   esp
  40c478:	adc    edx,DWORD PTR [eax]
  40c47a:	ror    BYTE PTR [edx],1
  40c47c:	dec    ebx
  40c47d:	pop    edi
  40c47e:	and    BYTE PTR [edx+0xe2ab97b],dl
  40c484:	xor    DWORD PTR [ebx],esp
  40c486:	fst    QWORD PTR [eax+0x5a52f8b7]
  40c48c:	mov    ebx,0xa3999c8
  40c492:	mov    ebx,DWORD PTR [edx]
  40c494:	dec    ebx
  40c495:	fucom  st(1)
  40c497:	push   edx
  40c498:	mov    ah,0x67
  40c49a:	mov    dl,0xae
  40c49c:	ds cmp bl,BYTE PTR es:[esi+0x28]
  40c4a1:	shl    BYTE PTR [edx-0x74],1
  40c4a4:	cli    
  40c4a5:	mov    ch,dh
  40c4a7:	sub    BYTE PTR [edi+0x32],dh
  40c4aa:	jge    0x40c4fc
  40c4ac:	aaa    
  40c4ad:	mov    al,0x3c
  40c4af:	jne    0x40c4a4
  40c4b1:	mov    edi,fs
  40c4b3:	cmp    ch,BYTE PTR [edi]
  40c4b5:	pop    ebp
  40c4b6:	retf   
  40c4b7:	pop    edi
  40c4b8:	mov    al,ds:0x98f8acd1
  40c4bd:	add    bl,BYTE PTR [edi-0x35]
  40c4c0:	inc    edx
  40c4c1:	jmp    0x677c75fa
  40c4c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4c7:	xchg   DWORD PTR [eax+0x4b],esp
  40c4ca:	sbb    bh,dl
  40c4cc:	outs   dx,DWORD PTR ds:[esi]
  40c4cd:	out    dx,eax
  40c4ce:	mov    ecx,0x2f12a14d
  40c4d3:	add    cl,BYTE PTR [eax]
  40c4d5:	xor    esi,ebx
  40c4d7:	mov    DWORD PTR [edx+ecx*4],0x4b354523
  40c4de:	test   dl,ah
  40c4e0:	mov    esp,0xe53aeea
  40c4e5:	adc    al,0xf5
  40c4e7:	sbb    al,0x4
  40c4e9:	sub    DWORD PTR [esi],edi
  40c4eb:	ret    0xa84a
  40c4ee:	mov    edi,eax
  40c4f0:	int    0x5e
  40c4f2:	imul   ecx,DWORD PTR [ebp+0x25],0xffffffc8
  40c4f6:	das    
  40c4f7:	cmp    ecx,DWORD PTR ds:0xa97e4c32
  40c4fd:	inc    edi
  40c4fe:	inc    eax
  40c4ff:	or     al,0xf2
  40c501:	jmp    0x40c570
  40c503:	loopne 0x40c51f
  40c505:	sub    DWORD PTR [edx],ebx
  40c507:	add    BYTE PTR [ebx+0x1f],al
  40c50a:	cdq    
  40c50b:	jg     0x40c4c7
  40c50d:	adc    cl,BYTE PTR [eax]
  40c50f:	js     0x40c53f
  40c511:	jae    0x40c50d
  40c513:	mov    edi,0x3fe634e9
  40c518:	xchg   ebx,eax
  40c519:	sub    al,0x50
  40c51b:	mov    DWORD PTR [edx],esp
  40c51d:	out    0xce,al
  40c51f:	push   cs
  40c520:	out    0x2a,al
  40c522:	cmp    eax,0xf5d6040b
  40c527:	lods   eax,DWORD PTR ds:[esi]
  40c528:	test   eax,0xbf486e62
  40c52d:	cmp    al,0xd6
  40c52f:	lds    ebx,FWORD PTR [esp+ecx*2-0xb]
  40c533:	ret    
  40c534:	les    ebx,FWORD PTR [edi]
  40c536:	clc    
  40c537:	imul   eax,DWORD PTR [ebx-0x14],0xfd9da4bf
  40c53e:	xchg   esi,eax
  40c53f:	leave  
  40c540:	jmp    0x73e6c632
  40c545:	xor    eax,edx
  40c547:	ja     0x40c50d
  40c549:	push   edx
  40c54a:	shr    ah,1
  40c54c:	inc    ebx
  40c54d:	outs   dx,BYTE PTR ds:[esi]
  40c54e:	outs   dx,DWORD PTR ds:[esi]
  40c54f:	dec    edx
  40c550:	pop    edi
  40c551:	jl     0x40c589
  40c553:	lahf   
  40c554:	jmp    0xee31:0x66773e5
  40c55b:	rol    DWORD PTR [edi-0x29843bd4],1
  40c561:	xor    eax,0x1a627854
  40c566:	stc    
  40c567:	dec    eax
  40c568:	dec    ecx
  40c569:	cmp    eax,0x6fb0fcb3
  40c56e:	inc    ebp
  40c56f:	dec    ecx
  40c570:	push   bx
  40c572:	adc    BYTE PTR es:[edi+0x52],0xf6
  40c577:	nop
  40c578:	scas   eax,DWORD PTR es:[edi]
  40c579:	or     dl,0x64
  40c57c:	shr    DWORD PTR [ecx-0x33645301],0x84
  40c583:	imul   ecx,ebx,0x70329a34
  40c589:	or     bl,ah
  40c58b:	add    al,0xab
  40c58d:	aam    0x79
  40c58f:	js     0x40c526
  40c591:	mov    ebp,0x4fe5c998
  40c596:	or     eax,0xfcbb5cf6
  40c59b:	sahf   
  40c59c:	dec    ebx
  40c59d:	loope  0x40c540
  40c59f:	dec    edx
  40c5a0:	jge    0x40c620
  40c5a2:	sbb    DWORD PTR [esi],0xfbe2ff8d
  40c5a8:	mov    es,WORD PTR [ecx]
  40c5aa:	and    eax,0x8946b03f
  40c5af:	fcom   QWORD PTR [edi-0x2d]
  40c5b2:	adc    al,0x3e
  40c5b4:	iret   
  40c5b5:	jb     0x40c5a3
  40c5b7:	scas   al,BYTE PTR es:[edi]
  40c5b8:	jmp    DWORD PTR [edx]
  40c5ba:	and    DWORD PTR [edi-0x27],esp
  40c5bd:	pop    ss
  40c5be:	mov    cl,0xe0
  40c5c0:	mov    BYTE PTR [ebp+0x1e615e7c],0xb9
  40c5c7:	(bad)  
  40c5c8:	sti    
  40c5c9:	inc    eax
  40c5ca:	mov    bh,0x25
  40c5cc:	ror    DWORD PTR [edx],0x7
  40c5cf:	jecxz  0x40c638
  40c5d1:	or     BYTE PTR [ecx+ebx*4+0x33],dl
  40c5d5:	sahf   
  40c5d6:	xor    ebx,DWORD PTR [eax]
  40c5d8:	jmp    0xe722ef8e
  40c5dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5de:	scas   al,BYTE PTR es:[edi]
  40c5df:	nop
  40c5e0:	repnz adc DWORD PTR [esi+0x21b7af4b],eax
  40c5e7:	lods   eax,DWORD PTR ds:[esi]
  40c5e8:	sub    ch,BYTE PTR [edi-0x56]
  40c5eb:	retf   
  40c5ec:	jmp    0x3b3cae56
  40c5f1:	sar    DWORD PTR [edx-0x56],1
  40c5f4:	mov    edi,0x6a6d3a07
  40c5f9:	pop    ebp
  40c5fa:	mov    ch,0x31
  40c5fc:	jno    0x715bf550
  40c602:	aam    0x8b
  40c604:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c605:	mov    edx,0xf135be08
  40c60a:	add    eax,0xe4680195
  40c60f:	mov    bh,0x2
  40c611:	sahf   
  40c612:	jb     0x40c5cd
  40c614:	xor    BYTE PTR [edi-0x34bc0237],bl
  40c61a:	sbb    dh,bh
  40c61c:	ins    BYTE PTR es:[edi],dx
  40c61d:	xchg   ecx,eax
  40c61e:	std    
  40c61f:	rcr    DWORD PTR [ebx],1
  40c621:	pop    ecx
  40c622:	(bad)  
  40c623:	shr    DWORD PTR [ebp+0x285772ba],0xd5
  40c62a:	je     0x40c6a1
  40c62c:	add    esi,DWORD PTR [eax-0x63b257cf]
  40c632:	dec    edx
  40c633:	jmp    0x2bc5f464
  40c638:	repz mov ecx,DWORD PTR [edx-0x66d5f69b]
  40c63f:	dec    ebx
  40c640:	in     eax,0x5
  40c642:	jp     0x40c6b0
  40c644:	fnstcw WORD PTR ds:0x2e471df6
  40c64a:	or     eax,0xf399f897
  40c64f:	daa    
  40c650:	push   0xffffffd3
  40c652:	test   eax,0x57114103
  40c657:	inc    eax
  40c658:	inc    edx
  40c659:	dec    ebp
  40c65a:	xchg   ebx,eax
  40c65b:	(bad)  
  40c65c:	fcompp 
  40c65e:	sbb    esi,DWORD PTR [esi+0x2b]
  40c661:	mul    BYTE PTR [edx+0x69]
  40c664:	pop    edi
  40c665:	sub    al,0x43
  40c667:	sub    BYTE PTR [edx],ah
  40c669:	adc    DWORD PTR [edi-0x63],esp
  40c66c:	xchg   edi,eax
  40c66d:	cwde   
  40c66e:	lea    ebp,[ecx]
  40c670:	iret   
  40c671:	inc    eax
  40c672:	sub    al,0xa9
  40c674:	gs cwde 
  40c676:	popf   
  40c677:	xor    edx,eax
  40c679:	lahf   
  40c67a:	and    eax,0x9b5ac3a4
  40c67f:	sub    eax,0x14ab7699
  40c684:	cmp    al,0xe5
  40c686:	ret    0xe1a9
  40c689:	jae    0x40c6af
  40c68b:	xchg   ebp,eax
  40c68c:	ret    0xa8ac
  40c68f:	jl     0x40c6ca
  40c691:	mov    DWORD PTR [ebp+0x11],ebp
  40c694:	mov    ah,0xb3
  40c696:	leave  
  40c697:	xchg   edi,eax
  40c698:	div    DWORD PTR [edx]
  40c69a:	into   
  40c69b:	pushf  
  40c69c:	cmp    eax,0x3598c2d
  40c6a1:	popf   
  40c6a2:	jle    0x40c689
  40c6a4:	daa    
  40c6a5:	xor    DWORD PTR [edi+0x43],ecx
  40c6a8:	inc    esi
  40c6a9:	cmp    BYTE PTR [ebp+0x3a9372aa],dh
  40c6af:	mov    edx,0xf5288cf8
  40c6b4:	mul    DWORD PTR [ecx+0x4f450b4c]
  40c6ba:	test   eax,0x67516466
  40c6bf:	push   edx
  40c6c0:	je     0x40c660
  40c6c2:	xor    ebx,ebx
  40c6c4:	daa    
  40c6c5:	mov    esp,0xa429ed2a
  40c6ca:	add    al,0xba
  40c6cc:	rol    DWORD PTR [esi],cl
  40c6ce:	pop    ebp
  40c6cf:	mov    bh,0xa6
  40c6d1:	push   ss
  40c6d2:	and    dh,BYTE PTR [eax+0xd]
  40c6d5:	or     ebp,edx
  40c6d7:	rcr    al,1
  40c6d9:	cmp    BYTE PTR [edi+0x78294cec],ch
  40c6df:	push   cs
  40c6e0:	call   0x16f4a7c3
  40c6e5:	inc    edi
  40c6e6:	and    edx,DWORD PTR [esi+0x58806d96]
  40c6ec:	pop    ebx
  40c6ed:	jbe    0x40c74f
  40c6ef:	fstp   TBYTE PTR [ebx+edi*1]
  40c6f2:	repz xchg ebx,eax
  40c6f4:	cmc    
  40c6f5:	mov    al,0x84
  40c6f7:	ins    DWORD PTR es:[edi],dx
  40c6f8:	xor    ch,bl
  40c6fa:	gs std 
  40c6fc:	dec    edx
  40c6fd:	pop    edi
  40c6fe:	sbb    bh,al
  40c700:	cli    
  40c701:	call   0xc357:0xd5338706
  40c708:	ror    eax,1
  40c70a:	dec    esp
  40c70b:	adc    DWORD PTR [eax+eiz*1+0x55e1cef9],0xa099930f
  40c716:	xchg   edi,eax
  40c717:	sub    DWORD PTR [edi-0x13],edi
  40c71a:	leave  
  40c71b:	shr    BYTE PTR [edx],0x6b
  40c71e:	inc    edx
  40c71f:	add    eax,0x8d4a50b2
  40c724:	retf   
  40c725:	cmp    eax,0x28238f6e
  40c72a:	ror    BYTE PTR [esi-0x9],0xf7
  40c72e:	pop    ecx
  40c72f:	(bad)  
  40c730:	xchg   edi,eax
  40c731:	pop    ds
  40c732:	or     al,0xed
  40c734:	and    dh,cl
  40c736:	xor    DWORD PTR es:[edi+0x56],ebx
  40c73a:	dec    esi
  40c73b:	scas   al,BYTE PTR es:[edi]
  40c73c:	xchg   esi,eax
  40c73d:	repnz ins BYTE PTR es:[edi],dx
  40c73f:	repnz (bad)
  40c742:	leave  
  40c743:	dec    esi
  40c744:	test   al,0xf7
  40c746:	mov    eax,0x83f3765d
  40c74b:	push   edx
  40c74c:	push   0xffffffc4
  40c74e:	lods   al,BYTE PTR ds:[esi]
  40c74f:	loopne 0x40c70a
  40c751:	cs ss jp 0x40c7c5
  40c755:	add    bl,BYTE PTR [eax+0xe]
  40c758:	cdq    
  40c759:	mov    DWORD PTR [edx+edi*4-0x658f999d],ebp
  40c760:	popa   
  40c761:	pop    esp
  40c762:	push   ss
  40c763:	jae    0x40c720
  40c765:	add    al,0xc3
  40c767:	sbb    ah,BYTE PTR [ebx-0x2b]
  40c76a:	mov    ds:0x3c448882,eax
  40c76f:	cdq    
  40c770:	dec    ebp
  40c771:	adc    edx,esi
  40c773:	push   cs
  40c774:	je     0x40c7a4
  40c776:	dec    eax
  40c777:	pop    es
  40c778:	aas    
  40c779:	sqrtps xmm2,xmm6
  40c77c:	call   0x59c4:0x916f1873
  40c783:	jle    0x40c72f
  40c785:	(bad)  
  40c786:	in     al,0x20
  40c788:	pusha  
  40c789:	mov    ecx,0x180e0b6
  40c78e:	prefetcht1 BYTE PTR [edx+0x52906096]
  40c795:	ins    BYTE PTR es:[edi],dx
  40c796:	pushf  
  40c797:	sti    
  40c798:	inc    ecx
  40c799:	cld    
  40c79a:	aad    0x50
  40c79c:	pop    esp
  40c79d:	push   esi
  40c79e:	out    dx,al
  40c79f:	rcl    BYTE PTR [edi+0x613cda3d],cl
  40c7a5:	sub    DWORD PTR [esp+edx*4],esp
  40c7a8:	xor    BYTE PTR ds:0xb6fb56d3,bh
  40c7ae:	sbb    eax,0x6874fbe4
  40c7b3:	js     0x40c7ee
  40c7b5:	mov    edi,0x4dd8429e
  40c7ba:	arpl   WORD PTR [edx-0x1c],ax
  40c7bd:	mul    BYTE PTR [edx]
  40c7bf:	or     bl,BYTE PTR [edx]
  40c7c1:	fstp   DWORD PTR [eax]
  40c7c3:	pop    eax
  40c7c4:	xchg   DWORD PTR [esi-0x66ef0c77],ebx
  40c7ca:	add    BYTE PTR [edi+0x66],bl
  40c7cd:	cs sbb dh,dl
  40c7d0:	xchg   ecx,eax
  40c7d1:	(bad)  
  40c7d2:	in     al,dx
  40c7d3:	add    al,BYTE PTR ds:0x9edc924e
  40c7d9:	inc    ebp
  40c7da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7db:	imul   eax,DWORD PTR [edx+0x5d9cf02d],0x1afcf871
  40c7e5:	push   cs
  40c7e6:	jmp    0xad84388c
  40c7eb:	add    eax,0x6e68a04
  40c7f0:	inc    ebp
  40c7f1:	(bad)  
  40c7f2:	sahf   
  40c7f3:	enter  0xa738,0xf1
  40c7f7:	call   0xdd4d:0x72a02805
  40c7fe:	cdq    
  40c7ff:	(bad)  
  40c800:	adc    al,0x47
  40c802:	loop   0x40c85d
  40c804:	jmp    0x40c7e7
  40c806:	inc    ecx
  40c807:	dec    edx
  40c808:	pop    ebx
  40c809:	inc    edi
  40c80a:	dec    ebp
  40c80b:	call   FWORD PTR [edx]
  40c80d:	test   eax,0x65f7b82
  40c812:	in     al,0x48
  40c814:	xor    BYTE PTR [edx],al
  40c816:	jbe    0x40c888
  40c818:	pop    eax
  40c819:	nop
  40c81a:	mov    gs,WORD PTR [ebx]
  40c81c:	pop    esp
  40c81d:	rcl    DWORD PTR [ebp-0xe],1
  40c820:	leave  
  40c821:	gs mov ebp,0xd757e337
  40c827:	call   0xebf4109e
  40c82c:	and    bl,ah
  40c82e:	add    al,0x7b
  40c831:	or     esi,DWORD PTR [edx+edx*1]
  40c834:	(bad)
  40c837:	data16 cmc 
  40c839:	add    DWORD PTR [esi-0x30],ebp
  40c83c:	dec    esp
  40c83d:	in     al,dx
  40c83e:	adc    eax,0x7f055c06
  40c843:	jbe    0x40c7ea
  40c845:	mov    bl,0x40
  40c847:	lahf   
  40c848:	jnp    0x40c8a8
  40c84a:	mov    dh,0x65
  40c84c:	fst    QWORD PTR [edi+ecx*8+0xb]
  40c850:	push   edx
  40c851:	(bad)  
  40c852:	dec    ebx
  40c853:	push   ss
  40c854:	out    0x31,eax
  40c856:	ret    0xd9c3
  40c859:	or     al,0x71
  40c85b:	and    al,0xa8
  40c85d:	test   DWORD PTR [ebx],ebx
  40c85f:	sbb    ah,0xcf
  40c862:	jg     0x40c804
  40c864:	repnz lea ebp,[eax-0x7c]
  40c868:	out    dx,al
  40c869:	inc    ebx
  40c86a:	(bad)  
  40c86b:	aaa    
  40c86c:	js     0x40c842
  40c86e:	test   eax,0x35427468
  40c873:	mov    eax,ds:0x61b36070
  40c878:	lods   al,BYTE PTR ds:[esi]
  40c879:	cmp    al,0x8b
  40c87b:	test   al,0xb4
  40c87d:	stos   BYTE PTR es:[edi],al
  40c87e:	das    
  40c87f:	imul   edi,eax,0x70
  40c882:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c883:	mov    ds:0x2963d73,al
  40c888:	in     eax,dx
  40c889:	mov    esp,0x5341e6a2
  40c88e:	out    dx,eax
  40c88f:	cmp    eax,DWORD PTR [edx+0x11eba1ab]
  40c895:	xchg   ebx,eax
  40c896:	xchg   ebx,eax
  40c897:	mov    al,ds:0xda35f4f
  40c89c:	rcr    BYTE PTR [eax-0x1c716dd0],1
  40c8a2:	add    BYTE PTR [ebp+eiz*8-0x12],bl
  40c8a6:	(bad)  
  40c8a7:	jp     0x40c847
  40c8a9:	mov    ebp,0x664a988b
  40c8ae:	jp     0x40c8b3
  40c8b0:	cmp    esi,esp
  40c8b2:	xor    ebx,DWORD PTR [edx-0x555e8b50]
  40c8b8:	mov    esp,0x84913bc9
  40c8bd:	ja     0x40c8ce
  40c8bf:	push   cs
  40c8c0:	clc    
  40c8c1:	inc    edx
  40c8c2:	mov    eax,ds:0x5187d025
  40c8c7:	gs out dx,al
  40c8c9:	popf   
  40c8ca:	test   eax,0x7fcf3ee
  40c8cf:	add    al,BYTE PTR [ecx]
  40c8d1:	aaa    
  40c8d2:	in     eax,dx
  40c8d3:	xchg   DWORD PTR [esi-0x62f3c9e2],edx
  40c8d9:	sbb    DWORD PTR [ebx],esp
  40c8db:	ja     0x40c900
  40c8dd:	push   0x141fe1f6
  40c8e2:	adc    ch,cl
  40c8e4:	jae    0x40c882
  40c8e6:	xlat   BYTE PTR ds:[ebx]
  40c8e7:	jno    0x40c91f
  40c8e9:	mov    eax,ds:0xa10752d0
  40c8ee:	sbb    DWORD PTR [esi],ebp
  40c8f0:	mov    edx,0x4f5d75f4
  40c8f5:	outs   dx,BYTE PTR ds:[esi]
  40c8f6:	or     DWORD PTR [esi],esp
  40c8f8:	xor    DWORD PTR [eax+0x67],edx
  40c8fb:	repnz loop 0x40c8b3
  40c8fe:	jmp    0x6ba9:0x33f5d9e8
  40c905:	mov    ebx,0x41f1cc86
  40c90b:	pop    es
  40c90c:	inc    eax
  40c90d:	push   esi
  40c90e:	(bad)  
  40c90f:	jb     0x40c983
  40c911:	mov    BYTE PTR [esi+0x26],dl
  40c914:	mov    bl,0x95
  40c916:	sbb    ch,BYTE PTR [esi]
  40c918:	xor    esp,DWORD PTR [ecx-0x190fd2a4]
  40c91e:	(bad)  
  40c91f:	jecxz  0x40c97e
  40c921:	sahf   
  40c922:	stos   DWORD PTR es:[edi],eax
  40c923:	sub    eax,0x2cea1e79
  40c928:	add    DWORD PTR [ecx+0x74c88672],0x6127809d
  40c932:	rcr    BYTE PTR [ecx-0x9],1
  40c935:	add    ebx,edx
  40c937:	jo     0x40c982
  40c939:	arpl   cx,bp
  40c93b:	hlt    
  40c93c:	push   0xffffff9a
  40c93e:	sbb    bh,BYTE PTR [esi-0x75f4b4ee]
  40c944:	loopne 0x40c982
  40c946:	mov    edx,0x15df6003
  40c94b:	pop    es
  40c94c:	arpl   ax,bp
  40c94e:	enter  0x3908,0xb9
  40c952:	push   esi
  40c953:	xor    bh,BYTE PTR [ecx+0x600560b1]
  40c959:	rcl    BYTE PTR [ebx-0x1e],cl
  40c95c:	sbb    al,0x2f
  40c95e:	cs cmp al,0x82
  40c961:	loopne 0x40c993
  40c963:	aad    0xba
  40c965:	call   0x314b:0x78784423
  40c96c:	pop    eax
  40c96d:	int    0x2b
  40c96f:	ins    DWORD PTR es:[edi],dx
  40c970:	jns    0x40c977
  40c972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c973:	lock sbb eax,0x5639f523
  40c979:	mov    WORD PTR [esi+0x450573a7],fs
  40c97f:	mov    esi,0x6a0b6abb
  40c984:	mov    bl,0xa7
  40c986:	lods   eax,DWORD PTR ds:[esi]
  40c987:	pushf  
  40c988:	adc    DWORD PTR [esi+edi*1],ecx
  40c98b:	sbb    al,0x94
  40c98d:	inc    ebp
  40c98e:	or     al,0x7e
  40c990:	imul   edi,DWORD PTR [eax-0x7a16464f],0xffffffb3
  40c997:	and    eax,0x7f905e09
  40c99c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c99d:	add    esi,DWORD PTR [edx]
  40c99f:	xchg   BYTE PTR [ecx],ch
  40c9a1:	add    al,0x14
  40c9a3:	scas   eax,DWORD PTR es:[edi]
  40c9a4:	push   ebx
  40c9a5:	and    edi,DWORD PTR fs:[esi+0xf011af9]
  40c9ac:	bound  eax,QWORD PTR [ebx]
  40c9ae:	jecxz  0x40c9c3
  40c9b0:	pushf  
  40c9b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9b2:	in     eax,0x9f
  40c9b4:	loop   0x40c9e3
  40c9b6:	enter  0x2413,0x10
  40c9ba:	pop    esi
  40c9bb:	pop    ds
  40c9bc:	sbb    cl,bh
  40c9be:	mov    DWORD PTR [eax+0x767c5815],ecx
  40c9c4:	adc    al,0x44
  40c9c6:	pop    edx
  40c9c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9c8:	cmc    
  40c9c9:	loop   0x40c94c
  40c9cb:	xchg   edx,eax
  40c9cc:	pop    ebx
  40c9cd:	push   esi
  40c9ce:	dec    esp
  40c9cf:	dec    edi
  40c9d0:	(bad)  
  40c9d1:	sub    eax,0x4062f7d3
  40c9d6:	int    0x3c
  40c9d8:	xchg   esp,eax
  40c9d9:	iret   
  40c9da:	nop
  40c9db:	scas   eax,DWORD PTR es:[edi]
  40c9dc:	jg     0x40c9cc
  40c9de:	mov    esi,0xef82f399
  40c9e3:	push   0x5e3344a
  40c9e8:	push   es
  40c9e9:	mov    ds:0xfc1400e3,eax
  40c9ee:	stc    
  40c9ef:	repnz dec eax
  40c9f1:	xchg   ecx,eax
  40c9f2:	rcr    BYTE PTR [edi-0x1d],0xc0
  40c9f6:	out    dx,eax
  40c9f7:	add    al,0x85
  40c9f9:	jl     0x40c98a
  40c9fb:	gs (bad) 
  40c9fd:	loop   0x40c9a6
  40c9ff:	pushf  
  40ca00:	mov    ebp,0x3b398a1d
  40ca05:	lea    ebx,[eax+0x39]
  40ca08:	in     eax,dx
  40ca09:	mov    ebx,es
  40ca0b:	data16 mov WORD PTR [esi+0x67],es
  40ca0f:	ins    DWORD PTR es:[edi],dx
  40ca10:	jo     0x40ca14
  40ca12:	mov    ds:0xc55e1959,eax
  40ca17:	shl    DWORD PTR [ebx-0x6de5eeaa],1
  40ca1d:	imul   ebp,DWORD PTR [ecx+0x64],0x77
  40ca21:	push   0x57f2c4f9
  40ca26:	call   0xf25c:0x3a07de66
  40ca2d:	push   edx
  40ca2e:	jmp    0x2c3ebd9f
  40ca33:	in     eax,dx
  40ca34:	dec    ebx
  40ca35:	sub    DWORD PTR [ecx+0x6994b9b5],0x20f9498
  40ca3f:	pop    ss
  40ca40:	stos   DWORD PTR es:[edi],eax
  40ca41:	inc    edi
  40ca42:	dec    edx
  40ca43:	pop    eax
  40ca44:	shufps xmm6,xmm2,0x51
  40ca48:	leave  
  40ca49:	jecxz  0x40c9d9
  40ca4b:	cmp    BYTE PTR [esi],0x3d
  40ca4e:	repnz aas 
  40ca50:	cdq    
  40ca51:	rol    DWORD PTR [edx],cl
  40ca53:	mov    bh,0x23
  40ca55:	ret    0x26d0
  40ca58:	cs vpmulhw xmm0,xmm6,xmm7
  40ca5d:	add    ecx,ebp
  40ca5f:	daa    
  40ca60:	es mov ah,0x7c
  40ca63:	nop
  40ca64:	lahf   
  40ca65:	call   0xd15c:0xbe3529d5
  40ca6c:	out    dx,eax
  40ca6d:	push   esi
  40ca6e:	scas   al,BYTE PTR es:[edi]
  40ca6f:	jbe    0x40ca0d
  40ca71:	iret   
  40ca72:	cmp    DWORD PTR [edx+0x4e],edi
  40ca75:	ins    DWORD PTR es:[edi],dx
  40ca76:	mov    esi,0x6ed7877c
  40ca7b:	in     eax,dx
  40ca7c:	sahf   
  40ca7d:	fcom   DWORD PTR [edx]
  40ca7f:	retf   0xe62e
  40ca82:	xor    ch,ah
  40ca84:	or     BYTE PTR [edi+0x74406f99],0xb2
  40ca8b:	cmp    dh,BYTE PTR [edi+0x39]
  40ca8e:	or     BYTE PTR [eax],cl
  40ca90:	aam    0x57
  40ca92:	pop    ebp
  40ca93:	sub    BYTE PTR [edi+eax*8-0x22],al
  40ca97:	sub    ah,ah
  40ca99:	cld    
  40ca9a:	mov    ah,0xcb
  40ca9c:	stos   BYTE PTR es:[edi],al
  40ca9d:	jb     0x40ca5d
  40ca9f:	xchg   esi,eax
  40caa0:	mov    ecx,0x4157e4f3
  40caa6:	lock popa 
  40caa8:	and    DWORD PTR [edi],ebp
  40caaa:	xchg   DWORD PTR [eax],eax
  40caac:	dec    esi
  40caad:	es cdq 
  40caaf:	lods   eax,DWORD PTR ds:[esi]
  40cab0:	call   FWORD PTR ds:[ebp-0x35ede87]
  40cab7:	inc    ecx
  40cab8:	inc    edi
  40cab9:	sti    
  40caba:	fucom  st(7)
  40cabc:	stos   BYTE PTR es:[edi],al
  40cabd:	or     bh,cl
  40cabf:	in     al,dx
  40cac0:	jb     0x40caa7
  40cac2:	fsubrp st(2),st
  40cac4:	xchg   edx,eax
  40cac5:	cli    
  40cac6:	inc    ecx
  40cac7:	sbb    eax,0x449008e3
  40cacc:	js     0x40ca7b
  40cace:	je     0x40cb3f
  40cad0:	scas   al,BYTE PTR es:[edi]
  40cad1:	push   0x245e4521
  40cad6:	aad    0x51
  40cad8:	cmc    
  40cad9:	dec    ecx
  40cada:	ja     0x40caf7
  40cadc:	or     bl,BYTE PTR [edi+0x66]
  40cadf:	cli    
  40cae0:	cdq    
  40cae1:	dec    eax
  40cae2:	es out 0x23,eax
  40cae5:	sbb    eax,0x122d2a36
  40caea:	arpl   WORD PTR [ebx],bp
  40caec:	push   0xc88db56
  40caf1:	shr    BYTE PTR [esp+esi*1-0x6f4196cf],0x7d
  40caf9:	loope  0x40ca8a
  40cafb:	mov    al,ds:0xfdae4b97
  40cb00:	test   BYTE PTR [edx+0x7c],0x8a
  40cb04:	jnp    0x40cb39
  40cb06:	fisubr DWORD PTR [edi-0x73]
  40cb09:	repz or cl,BYTE PTR ds:0x1bb90571
  40cb10:	stos   BYTE PTR es:[edi],al
  40cb11:	icebp  
  40cb12:	mov    eax,0xfe6cda6b
  40cb17:	xor    eax,0x6a0a02be
  40cb1c:	mov    dh,0x95
  40cb1e:	(bad)  
  40cb20:	sub    BYTE PTR [eax-0x7b],dl
  40cb23:	xchg   BYTE PTR [edx],ah
  40cb25:	xchg   DWORD PTR [edx+0xa],ebx
  40cb28:	mov    esi,?
  40cb2a:	out    dx,al
  40cb2b:	xchg   ecx,eax
  40cb2c:	xchg   ebx,eax
  40cb2d:	sbb    DWORD PTR [eax-0x2d],edi
  40cb30:	inc    ebp
  40cb31:	add    cl,BYTE PTR [ebp+0x48]
  40cb34:	pop    ds
  40cb35:	mov    al,ds:0x2f4ffe6a
  40cb3a:	cli    
  40cb3b:	out    0xec,eax
  40cb3d:	pop    eax
  40cb3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb3f:	test   al,0x9b
  40cb41:	ret    
  40cb42:	dec    esp
  40cb43:	cs push 0x904a7d31
  40cb49:	and    ebp,DWORD PTR [ecx-0x41350002]
  40cb4f:	or     ebp,DWORD PTR [esi]
  40cb51:	scas   eax,DWORD PTR es:[edi]
  40cb52:	imul   edi,DWORD PTR [ebx],0x77b06bbe
  40cb58:	test   ah,ah
  40cb5a:	loop   0x40cb90
  40cb5c:	cvtps2pd xmm5,QWORD PTR fs:[esi]
  40cb60:	mov    dl,cl
  40cb62:	(bad)  
  40cb63:	cli    
  40cb64:	dec    ecx
  40cb65:	mov    ah,0xf7
  40cb67:	pushf  
  40cb68:	iret   
  40cb69:	push   0x47
  40cb6b:	push   esp
  40cb6c:	out    dx,eax
  40cb6d:	pop    ebx
  40cb6e:	jae    0x40cba2
  40cb70:	mov    ebx,0x7d2cff61
  40cb75:	shl    DWORD PTR [ebx-0xa],0x46
  40cb79:	cwde   
  40cb7a:	fs xchg ecx,eax
  40cb7c:	mov    al,0x8e
  40cb7e:	mov    dl,0xb
  40cb80:	xchg   BYTE PTR [ecx],bh
  40cb82:	mov    ds:0xcf3dd5b,al
  40cb87:	sbb    cl,BYTE PTR ss:[edx]
  40cb8a:	les    esp,FWORD PTR [edi+0x735dabbd]
  40cb90:	lahf   
  40cb91:	stos   BYTE PTR es:[edi],al
  40cb92:	les    edx,FWORD PTR [esi-0x78]
  40cb95:	and    eax,0xb04ca20a
  40cb9a:	or     edx,DWORD PTR [esi+0x3]
  40cb9d:	enter  0x7e5e,0xd5
  40cba1:	push   edx
  40cba2:	cmp    dl,ch
  40cba4:	sub    esp,esp
  40cba6:	rcl    BYTE PTR [edi-0x28],0xf0
  40cbaa:	fstp   TBYTE PTR [edi-0x34]
  40cbad:	jecxz  0x40cb72
  40cbaf:	xchg   edi,eax
  40cbb0:	ret    
  40cbb1:	mov    ebx,0xab0ebfb7
  40cbb6:	jo     0x40cb3a
  40cbb8:	jmp    0x481f5ce5
  40cbbd:	cmp    DWORD PTR [ecx*1+0x17eb216d],ecx
  40cbc4:	add    eax,0x2e1e94c5
  40cbc9:	xchg   al,bl
  40cbcb:	out    0x9e,eax
  40cbcd:	dec    ecx
  40cbce:	or     ebp,DWORD PTR [edx]
  40cbd0:	or     eax,0x1445adce
  40cbd5:	arpl   WORD PTR [ecx+0x2a],di
  40cbd8:	push   esi
  40cbd9:	cmp    DWORD PTR [ebp-0x80],esi
  40cbdc:	repz push ds
  40cbde:	xchg   ebx,eax
  40cbdf:	xchg   DWORD PTR cs:[eax-0x29e14417],esp
  40cbe6:	shl    BYTE PTR [ebx],cl
  40cbe8:	cmc    
  40cbe9:	leave  
  40cbea:	fs jbe 0x40cc18
  40cbed:	inc    eax
  40cbee:	stos   DWORD PTR es:[edi],eax
  40cbef:	cmp    BYTE PTR [edi],cl
  40cbf1:	mov    ds:0x11806b7d,eax
  40cbf6:	adc    al,0xcc
  40cbf8:	dec    ecx
  40cbf9:	outs   dx,DWORD PTR gs:[esi]
  40cbfb:	jl     0x40cc56
  40cbfd:	mov    eax,0xa051a3de
  40cc02:	xchg   esi,eax
  40cc03:	les    edi,FWORD PTR [eax-0x13]
  40cc06:	fcomp  DWORD PTR [esi+0x71]
  40cc09:	xchg   esi,eax
  40cc0a:	ja     0x40cc7c
  40cc0c:	inc    ebp
  40cc0d:	pop    edi
  40cc0e:	or     eax,0x6ea9cd20
  40cc13:	lock sahf 
  40cc15:	shl    esp,0xa0
  40cc18:	jbe    0x40cc5e
  40cc1a:	jmp    0x40cc87
  40cc1c:	js     0x40cc53
  40cc1e:	or     DWORD PTR [edi-0x38c1c201],0x13
  40cc25:	and    DWORD PTR [eax+0x399a7b59],edx
  40cc2b:	loopne 0x40cc3a
  40cc2d:	iret   
  40cc2e:	adc    eax,0xe35e2130
  40cc33:	or     DWORD PTR [edi+0x3a],0x44
  40cc37:	mov    ds:0x134cf03,eax
  40cc3c:	repnz mov ebp,0x6662df10
  40cc42:	mov    BYTE PTR [edx+0x15],bl
  40cc45:	dec    ecx
  40cc46:	fldcw  WORD PTR [ecx+0x7ae52421]
  40cc4c:	out    0x47,al
  40cc4e:	jb     0x40ccb5
  40cc50:	push   ebx
  40cc51:	dec    esp
  40cc52:	cmp    eax,esp
  40cc54:	data16 jle 0x40cbe3
  40cc57:	xor    ch,BYTE PTR [ebx-0x3c4fdf29]
  40cc5d:	jmp    0xa546:0xbd1005ee
  40cc64:	test   BYTE PTR [eax],dh
  40cc66:	push   es
  40cc67:	pop    esi
  40cc68:	cli    
  40cc69:	adc    DWORD PTR [esi],ebp
  40cc6b:	out    0x50,al
  40cc6d:	push   ss
  40cc6e:	sahf   
  40cc6f:	xor    ebx,edx
  40cc71:	sub    eax,0x39e54a43
  40cc76:	retf   
  40cc77:	aaa    
  40cc78:	jecxz  0x40cc6f
  40cc7a:	pop    ss
  40cc7b:	add    eax,0x1263c1a8
  40cc80:	cmp    ecx,ebp
  40cc82:	iret   
  40cc83:	mov    bl,0x35
  40cc85:	pop    ss
  40cc86:	xor    ecx,esp
  40cc88:	outs   dx,DWORD PTR ds:[esi]
  40cc89:	xchg   edi,eax
  40cc8a:	out    dx,eax
  40cc8b:	lahf   
  40cc8c:	mov    DWORD PTR [esp+eax*4+0x12],eax
  40cc90:	jns    0x40cd0c
  40cc92:	out    0x24,eax
  40cc94:	mov    dh,BYTE PTR [ebx-0x6f]
  40cc97:	test   BYTE PTR [eax+0xfd4e070],0x6b
  40cc9e:	add    BYTE PTR [edx-0xb0f8b95],cl
  40cca4:	lods   eax,DWORD PTR ds:[esi]
  40cca5:	rol    ebx,cl
  40cca7:	inc    ecx
  40cca8:	rcr    DWORD PTR [ebx-0x6f8b5937],cl
  40ccae:	retf   0x75af
  40ccb1:	or     ecx,DWORD PTR [eax-0x2dc50c5d]
  40ccb7:	out    dx,al
  40ccb8:	repz cmp ebp,DWORD PTR [eax]
  40ccbb:	frstor [ecx]
  40ccbd:	stos   BYTE PTR es:[edi],al
  40ccbe:	jno    0x40cd36
  40ccc0:	xchg   esp,eax
  40ccc1:	add    eax,0x90ff6ff8
  40ccc6:	sub    eax,0xa356da6
  40cccb:	sub    bh,0xba
  40ccce:	adc    BYTE PTR [ebp+0x2bece563],dl
  40ccd4:	jo     0x40cce1
  40ccd6:	inc    esi
  40ccd7:	stc    
  40ccd8:	and    dl,BYTE PTR [eax+ebx*1+0x1a67fc1d]
  40ccdf:	mov    eax,0x326babf0
  40cce4:	pushf  
  40cce5:	shld   DWORD PTR [eax*1-0x6ba11279],esi,0xee
  40ccee:	xlat   BYTE PTR ds:[ebx]
  40ccef:	sub    al,0xc
  40ccf1:	dec    eax
  40ccf2:	fldenv [edx]
  40ccf4:	sbb    dl,BYTE PTR [eax+eiz*1-0x1bfcab5]
  40ccfb:	adc    BYTE PTR [eax+0x2050e6ec],al
  40cd01:	stos   DWORD PTR es:[edi],eax
  40cd02:	and    bh,BYTE PTR [eax+edi*8]
  40cd05:	test   eax,0x4a3bc34
  40cd0a:	sub    DWORD PTR [ebx-0x80],esi
  40cd0d:	scas   eax,DWORD PTR es:[edi]
  40cd0e:	rol    BYTE PTR ds:0x825e548d,0xc7
  40cd15:	inc    ebp
  40cd16:	cld    
  40cd17:	mov    ecx,0xc7f89c85
  40cd1c:	add    eax,0x42a3f6
  40cd21:	adc    DWORD PTR [eax],eax
  40cd23:	add    BYTE PTR [eax],al
  40cd25:	cmp    DWORD PTR ds:0x42a3f6,0x0
  40cd2c:	je     0x40cd62
  40cd32:	cmp    DWORD PTR ds:0x42a3f6,0x1a
  40cd39:	jg     0x40cd62
  40cd3f:	jmp    0x40cd52
  40cd44:	push   DWORD PTR [ebp-0x10]
  40cd47:	push   0x42a3ce
  40cd4c:	call   DWORD PTR ds:0x42a54a
  40cd52:	mov    eax,ds:0x42a3f6
  40cd57:	dec    eax
  40cd58:	mov    ds:0x42a3f6,eax
  40cd5d:	jmp    0x40cd25
  40cd62:	push   ebx
  40cd63:	add    DWORD PTR ds:0x42a436,0x20e2
  40cd6d:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  40cd74:	and    DWORD PTR ds:0x42a40e,0x0
  40cd7e:	jmp    0x40cd91
  40cd83:	xor    eax,eax
  40cd85:	or     eax,DWORD PTR ds:0x42a40e
  40cd8b:	inc    eax
  40cd8c:	mov    ds:0x42a40e,eax
  40cd91:	cmp    DWORD PTR ds:0x42a40e,0x1e
  40cd98:	jae    0x40cdbe
  40cd9e:	cmp    DWORD PTR ds:0x42a40e,0x1f
  40cda5:	jge    0x40cdbe
  40cdab:	jmp    0x40cdb9
  40cdb0:	push   DWORD PTR [ebp-0x18]
  40cdb3:	call   DWORD PTR ds:0x42a526
  40cdb9:	jmp    0x40cd83
  40cdbe:	mov    eax,DWORD PTR [ebp-0x4]
  40cdc1:	and    DWORD PTR ds:0x42a422,0x42a3b2
  40cdcb:	push   esi
  40cdcc:	adc    DWORD PTR ds:0x42a44a,0x42a43e
  40cdd6:	mov    esi,0x75108a8
  40cddb:	and    DWORD PTR ds:0x42a3ee,0x42a42a
  40cde5:	xor    eax,esi
  40cde7:	push   edi
  40cde8:	neg    edi
  40cdea:	mov    edi,0x3272ef
  40cdef:	sub    DWORD PTR ds:0x42a436,0x606e
  40cdf9:	add    eax,edi
  40cdfb:	mov    DWORD PTR [ebp-0x1c],eax
  40cdfe:	mov    eax,DWORD PTR [ebp+0x14]
  40ce01:	test   eax,eax
  40ce03:	mov    DWORD PTR ds:0x42a426,0x6967
  40ce0d:	je     0x40ce8f
  40ce13:	mov    DWORD PTR ds:0x42a3fe,0x1e
  40ce1d:	cmp    DWORD PTR ds:0x42a3fe,0x0
  40ce24:	je     0x40ce77
  40ce2a:	cmp    DWORD PTR ds:0x42a3fe,0xc
  40ce31:	jb     0x40ce77
  40ce37:	jmp    0x40ce4b
  40ce3c:	push   DWORD PTR [ebp-0x20]
  40ce3f:	push   DWORD PTR [ebp-0x24]
  40ce42:	push   DWORD PTR [ebp-0x24]
  40ce45:	call   DWORD PTR ds:0x42a52a
  40ce4b:	cmp    DWORD PTR ds:0x42a3fe,0xd
  40ce52:	jne    0x40ce65
  40ce58:	mov    ebx,DWORD PTR ds:0x42a3fe
  40ce5e:	dec    ebx
  40ce5f:	mov    DWORD PTR ds:0x42a3fe,ebx
  40ce65:	mov    ebx,DWORD PTR ds:0x42a3fe
  40ce6b:	dec    ebx
  40ce6c:	mov    DWORD PTR ds:0x42a3fe,ebx
  40ce72:	jmp    0x40ce1d
  40ce77:	mov    eax,DWORD PTR [ebp+0x14]
  40ce7a:	or     ebx,0x6757
  40ce80:	mov    eax,DWORD PTR [eax]
  40ce82:	xor    DWORD PTR ds:0x42a3a6,0x5a4b
  40ce8c:	mov    DWORD PTR [ebp-0x1c],eax
  40ce8f:	mov    eax,DWORD PTR [ebp-0x4]
  40ce92:	dec    DWORD PTR ds:0x42a40e
  40ce98:	xor    eax,esi
  40ce9a:	add    eax,edi
  40ce9c:	and    DWORD PTR ds:0x42a40e,0x0
  40cea6:	jmp    0x40ceb8
  40ceab:	mov    ebx,DWORD PTR ds:0x42a40e
  40ceb1:	inc    ebx
  40ceb2:	mov    DWORD PTR ds:0x42a40e,ebx
  40ceb8:	cmp    DWORD PTR ds:0x42a40e,0x13
  40cebf:	jae    0x40cf11
  40cec5:	cmp    DWORD PTR ds:0x42a40e,0x4
  40cecc:	jg     0x40cf11
  40ced2:	jmp    0x40cef2
  40ced7:	push   0x629b
  40cedc:	push   DWORD PTR [ebp-0x20]
  40cedf:	push   0x4472
  40cee4:	push   DWORD PTR [ebp-0x1c]
  40cee7:	push   0x42a3ae
  40ceec:	call   DWORD PTR ds:0x42a52e
  40cef2:	cmp    DWORD PTR ds:0x42a40e,0x3
  40cef9:	jne    0x40cf0c
  40ceff:	mov    ebx,DWORD PTR ds:0x42a40e
  40cf05:	inc    ebx
  40cf06:	mov    DWORD PTR ds:0x42a40e,ebx
  40cf0c:	jmp    0x40ceab
  40cf11:	mov    DWORD PTR [ebp-0x8],eax
  40cf14:	mov    eax,DWORD PTR [ebp-0xc]
  40cf17:	and    DWORD PTR ds:0x42a41a,0x4058
  40cf21:	xor    eax,esi
  40cf23:	sbb    DWORD PTR ds:0x42a412,edi
  40cf29:	add    eax,edi
  40cf2b:	and    DWORD PTR ds:0x42a3e2,0x0
  40cf35:	jmp    0x40cf47
  40cf3a:	mov    ebx,DWORD PTR ds:0x42a3e2
  40cf40:	inc    ebx
  40cf41:	mov    DWORD PTR ds:0x42a3e2,ebx
  40cf47:	cmp    DWORD PTR ds:0x42a3e2,0x10
  40cf4e:	jae    0x40cf77
  40cf54:	cmp    DWORD PTR ds:0x42a3e2,0x19
  40cf5b:	jbe    0x40cf77
  40cf61:	jmp    0x40cf72
  40cf66:	push   DWORD PTR [ebp-0x1c]
  40cf69:	push   DWORD PTR [ebp-0x10]
  40cf6c:	call   DWORD PTR ds:0x42a532
  40cf72:	jmp    0x40cf3a
  40cf77:	mov    DWORD PTR [ebp-0x24],eax
  40cf7a:	mov    eax,DWORD PTR [ebp-0x4]
  40cf7d:	sbb    DWORD PTR ds:0x42a422,0x3c99
  40cf87:	xor    eax,esi
  40cf89:	mov    ebx,DWORD PTR ds:0x42a3ae
  40cf8f:	sbb    DWORD PTR ds:0x42a402,ebx
  40cf95:	add    eax,edi
  40cf97:	neg    DWORD PTR ds:0x42a446
  40cf9d:	mov    DWORD PTR [ebp-0x30],eax
  40cfa0:	and    DWORD PTR ds:0x42a40a,0x0
  40cfaa:	jmp    0x40cfba
  40cfaf:	mov    eax,ds:0x42a40a
  40cfb4:	inc    eax
  40cfb5:	mov    ds:0x42a40a,eax
  40cfba:	cmp    DWORD PTR ds:0x42a40a,0x19
  40cfc1:	jae    0x40d006
  40cfc7:	cmp    DWORD PTR ds:0x42a40a,0xf
  40cfce:	jb     0x40d006
  40cfd4:	jmp    0x40cfe9
  40cfd9:	push   0x5bac
  40cfde:	push   0x42a3c2
  40cfe3:	call   DWORD PTR ds:0x42a55a
  40cfe9:	cmp    DWORD PTR ds:0x42a40a,0xe
  40cff0:	jne    0x40d001
  40cff6:	mov    eax,ds:0x42a40a
  40cffb:	inc    eax
  40cffc:	mov    ds:0x42a40a,eax
  40d001:	jmp    0x40cfaf
  40d006:	mov    ebx,DWORD PTR [ebp-0x4]
  40d009:	xor    ebx,esi
  40d00b:	and    DWORD PTR ds:0x42a3be,ecx
  40d011:	add    ebx,edi
  40d013:	and    DWORD PTR ds:0x42a3fe,0x0
  40d01d:	jmp    0x40d02d
  40d022:	mov    eax,ds:0x42a3fe
  40d027:	inc    eax
  40d028:	mov    ds:0x42a3fe,eax
  40d02d:	cmp    DWORD PTR ds:0x42a3fe,0x13
  40d034:	jae    0x40d072
  40d03a:	cmp    DWORD PTR ds:0x42a3fe,0x6
  40d041:	jle    0x40d072
  40d047:	jmp    0x40d055
  40d04c:	push   DWORD PTR [ebp-0x20]
  40d04f:	call   DWORD PTR ds:0x42a53a
  40d055:	cmp    DWORD PTR ds:0x42a3fe,0x5
  40d05c:	jne    0x40d06d
  40d062:	mov    eax,ds:0x42a3fe
  40d067:	inc    eax
  40d068:	mov    ds:0x42a3fe,eax
  40d06d:	jmp    0x40d022
  40d072:	mov    eax,DWORD PTR [ebp-0x24]
  40d075:	add    DWORD PTR ds:0x42a432,0x76fe
  40d07f:	sub    eax,edi
  40d081:	lea    ecx,[ebx-0x3272ef]
  40d087:	or     DWORD PTR ds:0x42a3f6,0x6e45
  40d091:	xor    eax,esi
  40d093:	sub    DWORD PTR ds:0x42a3c2,0x42a412
  40d09d:	xor    ecx,esi
  40d09f:	cmp    ecx,eax
  40d0a1:	je     0x40d250
  40d0a7:	inc    eax
  40d0a8:	mov    eax,DWORD PTR [ebp-0x4]
  40d0ab:	add    DWORD PTR ds:0x42a3f6,0x42a3de
  40d0b5:	xor    eax,esi
  40d0b7:	xor    DWORD PTR ds:0x42a3e6,0x42a436
  40d0c1:	add    eax,edi
  40d0c3:	mov    DWORD PTR ds:0x42a41e,0x1ae8
  40d0cd:	cmp    ebx,eax
  40d0cf:	jne    0x40d22d
  40d0d5:	xor    DWORD PTR ds:0x42a3be,0x42a436
  40d0df:	push   DWORD PTR [ebp+0x8]
  40d0e2:	call   0x424b82
  40d0e7:	mov    DWORD PTR [ebp-0x14],eax
  40d0ea:	xor    ecx,ecx
  40d0ec:	xor    ecx,DWORD PTR ds:0x42a456
  40d0f2:	mov    eax,ds:0x42a4f2
  40d0f7:	sub    ecx,eax
  40d0f9:	or     ecx,DWORD PTR [ecx+eax*1]
  40d0fc:	mov    eax,DWORD PTR [ebp-0x4]
  40d0ff:	sbb    ecx,0x17a4
  40d105:	mov    ecx,DWORD PTR [ebp-0x14]
  40d108:	xor    DWORD PTR ds:0x42a3da,0x42a3f6
  40d112:	xor    eax,esi
  40d114:	add    eax,edi
  40d116:	mov    DWORD PTR ds:0x42a3aa,0x307a
  40d120:	cmp    ecx,eax
  40d122:	mov    DWORD PTR ds:0x42a40e,0xd4
  40d12c:	je     0x40d2bb
  40d132:	or     DWORD PTR ds:0x42a416,0x42a3b6
  40d13c:	push   DWORD PTR [ebp-0x14]
  40d13f:	not    DWORD PTR ds:0x42a3f6
  40d145:	push   DWORD PTR [ebp+0x8]
  40d148:	sbb    DWORD PTR ds:0x42a3fe,0x3b6a
  40d152:	call   0x424c57
  40d157:	mov    DWORD PTR [ebp-0x14],eax
  40d15a:	or     eax,DWORD PTR ds:0x42a40e
  40d160:	mov    eax,DWORD PTR [ebp-0x4]
  40d163:	mov    ecx,DWORD PTR [ebp-0x14]
  40d166:	xor    eax,esi
  40d168:	and    DWORD PTR ds:0x42a42a,0x42a44e
  40d172:	add    eax,edi
  40d174:	cmp    ecx,eax
  40d176:	mov    DWORD PTR ds:0x42a426,0x7d26
  40d180:	je     0x40d2bb
  40d186:	xor    ecx,DWORD PTR ds:0x42a43a
  40d18c:	mov    eax,DWORD PTR [ebp-0x14]
  40d18f:	mov    eax,DWORD PTR [eax+0x18]
  40d192:	or     DWORD PTR ds:0x42a3ea,0x5e55
  40d19c:	mov    DWORD PTR [ebp-0x24],eax
  40d19f:	xor    DWORD PTR ds:0x42a40e,ecx
  40d1a5:	mov    eax,DWORD PTR [ebp-0x14]
  40d1a8:	and    DWORD PTR ds:0x42a43e,0x0
  40d1b2:	mov    ecx,DWORD PTR ds:0x42a43e
  40d1b8:	inc    ecx
  40d1b9:	mov    DWORD PTR ds:0x42a43e,ecx
  40d1bf:	cmp    DWORD PTR ds:0x42a43e,0x1f
  40d1c6:	jge    0x40d1f1
  40d1cc:	jmp    0x40d1e4
  40d1d1:	push   0x848c
  40d1d6:	push   0x1918
  40d1db:	push   DWORD PTR [ebp-0x10]
  40d1de:	call   DWORD PTR ds:0x42a55e
  40d1e4:	cmp    DWORD PTR ds:0x42a43e,0x14
  40d1eb:	jb     0x40d1b2
  40d1f1:	mov    ecx,DWORD PTR [ebp+0x8]
  40d1f4:	add    ecx,DWORD PTR [eax+0x20]
  40d1f7:	and    eax,DWORD PTR ds:0x42a452
  40d1fd:	mov    DWORD PTR [ebp-0x2c],ecx
  40d200:	mov    eax,DWORD PTR [ebp-0x14]
  40d203:	add    DWORD PTR ds:0x42a3fe,0x4a53
  40d20d:	mov    ecx,DWORD PTR [ebp+0x8]
  40d210:	not    DWORD PTR ds:0x42a3e2
  40d216:	add    ecx,DWORD PTR [eax+0x24]
  40d219:	mov    DWORD PTR [ebp-0x34],ecx
  40d21c:	mov    eax,DWORD PTR [ebp-0x14]
  40d21f:	mov    ecx,DWORD PTR [ebp+0x8]
  40d222:	add    ecx,DWORD PTR [eax+0x1c]
  40d225:	mov    DWORD PTR [ebp-0x14],ecx
  40d228:	jmp    0x40d283
  40d22d:	mov    eax,DWORD PTR [ebp-0x2c]
  40d230:	mov    ecx,DWORD PTR [ebp+0x8]
  40d233:	add    ecx,DWORD PTR [eax+ebx*4]
  40d236:	mov    DWORD PTR [ebp-0x28],ecx
  40d239:	mov    eax,DWORD PTR [ebp-0x4]
  40d23c:	mov    ecx,DWORD PTR [ebp-0x28]
  40d23f:	xor    eax,esi
  40d241:	add    eax,edi
  40d243:	cmp    ecx,eax
  40d245:	je     0x40d283
  40d24b:	jmp    0x40d274
  40d250:	mov    eax,DWORD PTR [ebp-0x4]
  40d253:	mov    ecx,DWORD PTR [ebp-0x8]
  40d256:	xor    eax,esi
  40d258:	add    eax,edi
  40d25a:	cmp    ecx,eax
  40d25c:	mov    eax,DWORD PTR [ebp-0x4]
  40d25f:	je     0x40d2be
  40d265:	mov    ecx,DWORD PTR [ebp-0x30]
  40d268:	xor    eax,esi
  40d26a:	add    eax,edi
  40d26c:	cmp    ecx,eax
  40d26e:	je     0x40d2c7
  40d274:	lea    eax,[ebp-0x8]
  40d277:	push   eax
  40d278:	push   DWORD PTR [ebp-0x28]
  40d27b:	push   DWORD PTR [ebp+0xc]
  40d27e:	call   0x40f865
  40d283:	mov    eax,DWORD PTR [ebp-0x4]
  40d286:	mov    ecx,DWORD PTR [ebp-0x8]
  40d289:	xor    eax,esi
  40d28b:	add    eax,edi
  40d28d:	cmp    ecx,eax
  40d28f:	je     0x40d2aa
  40d295:	mov    eax,DWORD PTR [ebp-0x34]
  40d298:	movzx  eax,WORD PTR [eax+ebx*2]
  40d29c:	mov    ecx,DWORD PTR [ebp-0x14]
  40d29f:	mov    eax,DWORD PTR [ecx+eax*4]
  40d2a2:	mov    DWORD PTR [ebp-0x38],eax
  40d2a5:	jmp    0x40d250
  40d2aa:	mov    eax,DWORD PTR [ebp-0xc]
  40d2ad:	xor    eax,esi
  40d2af:	lea    ebx,[ebx+eax*1+0x3272ef]
  40d2b6:	jmp    0x40d013
  40d2bb:	mov    eax,DWORD PTR [ebp-0x4]
  40d2be:	xor    eax,esi
  40d2c0:	add    eax,edi
  40d2c2:	jmp    0x40f7a8
  40d2c7:	mov    eax,DWORD PTR [ebp-0x38]
  40d2ca:	add    eax,DWORD PTR [ebp+0x8]
  40d2cd:	mov    DWORD PTR [ebp-0x18],eax
  40d2d0:	mov    eax,DWORD PTR [ebp-0x1c]
  40d2d3:	test   eax,eax
  40d2d5:	je     0x40d36f
  40d2db:	mov    DWORD PTR [ebp-0x20],0x0
  40d2e2:	push   0x3
  40d2e4:	xor    edx,edx
  40d2e6:	pop    edx
  40d2e7:	add    edx,0x8
  40d2ea:	push   edx
  40d2eb:	pop    ecx
  40d2ec:	push   0x6
  40d2ee:	dec    ecx
  40d2ef:	pop    ebx
  40d2f0:	dec    ebx
  40d2f1:	xchg   ebx,ecx
  40d2f3:	sub    ebx,ecx
  40d2f5:	xchg   ebx,ecx
  40d2f7:	dec    ecx
  40d2f8:	mov    eax,DWORD PTR [ebp-0x1c]
  40d2fb:	imul   eax,ecx
  40d2fe:	sub    esp,eax
  40d300:	mov    DWORD PTR [ebp-0x20],esp
  40d303:	mov    eax,DWORD PTR [ebp-0x4]
  40d306:	xor    eax,esi
  40d308:	add    eax,edi
  40d30a:	jmp    0x40d348
  40d30f:	mov    ecx,DWORD PTR [ebp-0xc]
  40d312:	mov    eax,DWORD PTR [ebp+0x8]
  40d315:	mov    edx,DWORD PTR [ebp+0x14]
  40d318:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d31c:	xor    ecx,esi
  40d31e:	add    ecx,edi
  40d320:	xor    edx,edx
  40d322:	div    ecx
  40d324:	mov    ecx,DWORD PTR [ebp-0x4]
  40d327:	xor    ecx,esi
  40d329:	lea    eax,[ecx+eax*1+0x3272ef]
  40d330:	mov    ecx,DWORD PTR [ebp+0x8]
  40d333:	mov    edx,DWORD PTR [ebp-0x20]
  40d336:	mov    DWORD PTR [edx+ecx*4],eax
  40d339:	mov    eax,DWORD PTR [ebp-0xc]
  40d33c:	mov    ecx,DWORD PTR [ebp+0x8]
  40d33f:	xor    eax,esi
  40d341:	lea    eax,[eax+ecx*1+0x3272ef]
  40d348:	mov    DWORD PTR [ebp+0x8],eax
  40d34b:	mov    eax,DWORD PTR [ebp-0xc]
  40d34e:	mov    ecx,DWORD PTR [ebp+0x14]
  40d351:	xor    eax,esi
  40d353:	add    eax,edi
  40d355:	imul   eax,DWORD PTR [ecx]
  40d358:	mov    ecx,DWORD PTR [ebp-0x4]
  40d35b:	mov    edx,DWORD PTR [ebp+0x8]
  40d35e:	xor    ecx,esi
  40d360:	lea    ecx,[ecx+edx*1+0x3272ef]
  40d367:	cmp    ecx,eax
  40d369:	jne    0x40d30f
  40d36f:	mov    eax,DWORD PTR [ebp-0x4]
  40d372:	xor    eax,esi
  40d374:	add    eax,edi
  40d376:	mov    DWORD PTR [ebp-0x10],eax
  40d379:	mov    ebx,0x65655
  40d37e:	add    ebx,0x3234
  40d384:	xchg   ebx,esi
  40d386:	xor    ebx,ebx
  40d388:	push   esi
  40d389:	mov    esi,ebx
  40d38b:	pop    ebx
  40d38c:	mov    edx,esi
  40d38e:	jmp    0x40f750
  40d393:	ja     0x40d3b0
  40d395:	test   DWORD PTR [ebp-0x7b],esp
  40d398:	mov    ebx,0x91a51b97
  40d39d:	test   BYTE PTR [ecx+0x31329da3],0xc5
  40d3a4:	leave  
  40d3a5:	jp     0x40d421
  40d3a7:	fstp   QWORD PTR [edi+0x7a]
  40d3aa:	jp     0x40d3be
  40d3ac:	loopne 0x40d3e4
  40d3ae:	sbb    ebp,edi
  40d3b0:	adc    al,0xde
  40d3b2:	cld    
  40d3b3:	push   cs
  40d3b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3b5:	mov    al,ds:0xe64e3bf2
  40d3ba:	ins    BYTE PTR es:[edi],dx
  40d3bb:	or     dl,BYTE PTR [edx]
  40d3bd:	jmp    0x40d399
  40d3bf:	inc    edi
  40d3c0:	loop   0x40d35f
  40d3c2:	push   ebx
  40d3c3:	aad    0x94
  40d3c5:	(bad)  
  40d3c7:	xchg   edi,eax
  40d3c8:	(bad)  
  40d3c9:	cli    
  40d3ca:	in     al,0x24
  40d3cc:	or     bh,dl
  40d3ce:	mov    ebx,edx
  40d3d0:	je     0x40d3b5
  40d3d2:	adc    BYTE PTR [edx],dl
  40d3d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3d5:	dec    edx
  40d3d6:	inc    ebp
  40d3d7:	cmp    eax,0x28cf9411
  40d3dc:	cmp    eax,0x274c1177
  40d3e1:	jp     0x40d456
  40d3e3:	faddp  st(4),st
  40d3e5:	mov    dl,0x6e
  40d3e7:	pop    esi
  40d3e8:	nop
  40d3e9:	pop    ss
  40d3ea:	mov    DWORD PTR [esi-0x2f3e986b],edi
  40d3f0:	cs dec esi
  40d3f2:	dec    edi
  40d3f3:	ja     0x40d3ae
  40d3f5:	adc    eax,0x839aed38
  40d3fa:	ins    BYTE PTR es:[edi],dx
  40d3fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3fc:	in     eax,0x3f
  40d3fe:	dec    ebp
  40d3ff:	add    eax,0x7c4aa304
  40d404:	and    edx,DWORD PTR [esi-0x3e]
  40d407:	ficomp DWORD PTR [edx+0x7e39cf6a]
  40d40d:	out    dx,al
  40d40e:	xchg   DWORD PTR [eax-0x11476874],esi
  40d414:	xchg   edi,eax
  40d415:	mov    esi,0x8a7e0b03
  40d41a:	cmp    DWORD PTR [ebx+eax*8+0x5a9751f9],ebp
  40d421:	mov    ah,BYTE PTR [esi-0x4a807217]
  40d427:	push   ecx
  40d428:	call   0xa29aeec6
  40d42d:	clc    
  40d42e:	fldcw  WORD PTR [edi-0x5554a178]
  40d434:	mov    dh,0x81
  40d436:	aaa    
  40d437:	inc    esp
  40d438:	jo     0x40d3d4
  40d43a:	sbb    ch,bh
  40d43c:	lods   al,BYTE PTR ds:[esi]
  40d43d:	add    DWORD PTR [esi],ebp
  40d43f:	or     DWORD PTR [ecx+0x30],ebx
  40d442:	stos   DWORD PTR es:[edi],eax
  40d443:	sbb    eax,0x2d4bca4a
  40d448:	aas    
  40d449:	pop    eax
  40d44a:	xor    DWORD PTR [eax+ecx*8-0x7c],eax
  40d44e:	xor    edi,DWORD PTR [edi]
  40d450:	pop    ds
  40d451:	(bad)  
  40d452:	pop    edx
  40d453:	stos   BYTE PTR es:[edi],al
  40d454:	jb     0x40d45f
  40d456:	ret    0x4178
  40d459:	sbb    DWORD PTR [esi],esi
  40d45b:	dec    ebx
  40d45c:	xor    DWORD PTR [edi],0x47ad40c
  40d462:	mov    esi,0xec0a727e
  40d467:	mov    cl,ch
  40d469:	hlt    
  40d46a:	xor    edx,eax
  40d46c:	loopne 0x40d48e
  40d46e:	mov    DWORD PTR [eax+0x59],ecx
  40d471:	pop    edi
  40d472:	inc    ecx
  40d473:	ss xchg edi,eax
  40d475:	ror    BYTE PTR [ebp+0xf1e7bdd],0xaa
  40d47c:	inc    ecx
  40d47d:	mov    BYTE PTR [esi],0x4a
  40d480:	mov    ch,0xd3
  40d482:	shl    DWORD PTR [esi-0x6d],0x4f
  40d486:	fldcw  WORD PTR [esi-0x35b16ad]
  40d48c:	push   edi
  40d48d:	lds    edx,FWORD PTR [ebp-0x19]
  40d490:	loop   0x40d41a
  40d492:	and    bh,BYTE PTR [esi]
  40d494:	inc    ebp
  40d495:	lahf   
  40d496:	mov    cl,0xfa
  40d498:	cmc    
  40d499:	idiv   DWORD PTR [esi+0x3dbd8f52]
  40d49f:	push   cs
  40d4a0:	mov    ah,0xf7
  40d4a2:	lea    esp,[esp+edx*2+0x1]
  40d4a6:	je     0x40d482
  40d4a8:	ds dec esi
  40d4aa:	loop   0x40d453
  40d4ac:	mov    edi,0x82afd407
  40d4b1:	int    0x2f
  40d4b3:	mov    WORD PTR [ecx+0x6a],fs
  40d4b6:	xor    BYTE PTR [esi+0x6b],0xa8
  40d4ba:	mov    ah,0x0
  40d4bc:	ins    BYTE PTR es:[edi],dx
  40d4bd:	adc    eax,0x3b7849e9
  40d4c2:	jl     0x40d51a
  40d4c4:	inc    eax
  40d4c5:	test   eax,0x8ceb2f68
  40d4ca:	inc    ebp
  40d4cb:	fwait
  40d4cc:	nop
  40d4cd:	add    al,0xec
  40d4cf:	(bad)  
  40d4d2:	mov    WORD PTR [ebx],es
  40d4d4:	in     eax,0x30
  40d4d6:	xchg   ebx,esp
  40d4d8:	sbb    al,0x38
  40d4da:	lds    edi,FWORD PTR [ecx+0x5548536f]
  40d4e0:	xchg   BYTE PTR [ebx+0x4633a791],ah
  40d4e6:	jl     0x40d4d8
  40d4e8:	test   DWORD PTR [esi-0x42],ebx
  40d4eb:	mov    BYTE PTR [edx],dl
  40d4ed:	mov    ds:0xc85e72c8,al
  40d4f2:	ror    BYTE PTR [edi],0xeb
  40d4f5:	dec    eax
  40d4f6:	lds    ebp,FWORD PTR [esi-0x65]
  40d4f9:	fcomp  QWORD PTR [eax+0x6a]
  40d4fc:	push   es
  40d4fd:	add    eax,0x43c4a8ac
  40d502:	dec    ecx
  40d503:	outs   dx,DWORD PTR ds:[esi]
  40d504:	outs   dx,DWORD PTR ds:[esi]
  40d505:	fldcw  WORD PTR [ecx+edi*8]
  40d508:	gs das 
  40d50a:	test   ecx,esp
  40d50c:	jle    0x40d4c0
  40d50e:	mov    dl,0xf
  40d510:	mov    WORD PTR [edx-0x43cb1953],?
  40d516:	jl     0x40d4e8
  40d518:	retf   0x83a0
  40d51b:	js     0x40d52b
  40d51d:	push   es
  40d51e:	xor    DWORD PTR [edi-0x1c3866bf],0xffffffb5
  40d525:	mov    ds:0xaf3ead1d,eax
  40d52a:	outs   dx,BYTE PTR ds:[esi]
  40d52b:	dec    edx
  40d52c:	in     eax,dx
  40d52d:	xchg   BYTE PTR [ebp-0x4a6f4175],dh
  40d533:	les    ebp,FWORD PTR [esi]
  40d535:	clc    
  40d536:	test   BYTE PTR [eax-0x7a34c080],0x2e
  40d53d:	stc    
  40d53e:	adc    al,0xbd
  40d540:	arpl   WORD PTR [edx-0x4901fc2b],di
  40d546:	dec    edi
  40d547:	jnp    0x40d4df
  40d549:	imul   ecx,DWORD PTR [esi-0x23],0xfffffff0
  40d54d:	pusha  
  40d54e:	div    BYTE PTR [bx+di-0x33]
  40d552:	data16 mov dl,0xfc
  40d555:	popf   
  40d556:	pop    ebx
  40d557:	xchg   BYTE PTR [eax],bh
  40d559:	scas   al,BYTE PTR es:[edi]
  40d55a:	jecxz  0x40d5d6
  40d55c:	test   al,0xa7
  40d55e:	les    ebp,FWORD PTR [eax]
  40d560:	mov    WORD PTR [ecx+0x24d6c7d9],?
  40d566:	inc    ebx
  40d567:	push   cs
  40d568:	lods   eax,DWORD PTR ds:[esi]
  40d569:	ret    0x79b
  40d56c:	mov    ds,WORD PTR [ebx+ebp*4]
  40d56f:	mov    ah,BYTE PTR [esi-0x496c59ba]
  40d575:	xchg   sp,ax
  40d577:	mov    edx,0x1d8eb055
  40d57c:	xchg   ebx,eax
  40d57d:	and    al,ah
  40d57f:	fstp   TBYTE PTR [ebx-0x3f]
  40d582:	repz call 0x5d56:0x44fb5421
  40d58a:	aas    
  40d58b:	xor    edi,DWORD PTR [ebp-0x2a]
  40d58e:	(bad)  
  40d58f:	jbe    0x40d5bd
  40d591:	dec    esi
  40d592:	add    BYTE PTR [eax-0x3ff80e40],0xa4
  40d599:	mov    WORD PTR [ecx+0x4e],gs
  40d59c:	ret    0x8870
  40d59f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5a0:	retf   0xcddf
  40d5a3:	mov    cl,0x93
  40d5a5:	jno    0x40d5f9
  40d5a7:	jecxz  0x40d530
  40d5a9:	or     ah,bh
  40d5ab:	xchg   bx,ax
  40d5ad:	add    DWORD PTR [esi-0x78949284],ebx
  40d5b3:	mov    ecx,DWORD PTR [ebx+0x12c88586]
  40d5b9:	test   eax,0xea0ff2c5
  40d5be:	lahf   
  40d5bf:	ja     0x40d54f
  40d5c1:	stc    
  40d5c2:	adc    eax,0xb93fc2a3
  40d5c7:	adc    esi,DWORD PTR [esi]
  40d5c9:	lea    ebp,[esp+ebx*1]
  40d5cc:	push   cs
  40d5cd:	jo     0x40d555
  40d5cf:	push   ss
  40d5d0:	in     eax,0xd7
  40d5d2:	push   eax
  40d5d3:	ficom  WORD PTR [ecx]
  40d5d5:	dec    ecx
  40d5d6:	neg    BYTE PTR [ebp+0xc48a6b3]
  40d5dc:	dec    esp
  40d5dd:	sub    ebp,DWORD PTR [edi-0x3cd97851]
  40d5e3:	adc    al,0xbb
  40d5e5:	bound  esp,QWORD PTR [esi+esi*1-0x66]
  40d5e9:	scas   al,BYTE PTR es:[edi]
  40d5ea:	repnz cmp BYTE PTR [edx+0x51e6ad33],0x5a
  40d5f2:	inc    ebx
  40d5f3:	add    DWORD PTR [ebx-0x39],0x998eac18
  40d5fa:	xor    ebp,DWORD PTR [esi+0x24]
  40d5fd:	sub    ebx,ebp
  40d5ff:	(bad)  
  40d600:	or     ebx,DWORD PTR es:[ebp-0x5d]
  40d604:	jae    0x40d664
  40d606:	sub    ah,BYTE PTR [ebp+ebp*2-0x69687971]
  40d60d:	xchg   esi,eax
  40d60e:	aad    0x7a
  40d610:	or     edi,esp
  40d612:	jecxz  0x40d656
  40d614:	ins    DWORD PTR es:[edi],dx
  40d615:	pop    ds
  40d616:	stos   BYTE PTR es:[edi],al
  40d617:	outs   dx,DWORD PTR ds:[esi]
  40d618:	pop    edx
  40d619:	push   es
  40d61a:	xchg   DWORD PTR [edx-0x74],eax
  40d61d:	shl    DWORD PTR [edx+0x1d],1
  40d620:	xor    al,0x8c
  40d622:	inc    esi
  40d623:	popf   
  40d624:	cmp    BYTE PTR [ebx+0x4],bl
  40d627:	mov    dh,0x6
  40d629:	mov    ds:0xab515769,eax
  40d62e:	aam    0x1
  40d630:	fld    TBYTE PTR [edi-0x79db626a]
  40d636:	fwait
  40d637:	cmp    BYTE PTR [ecx-0x5e066b0c],al
  40d63d:	or     BYTE PTR [edx],dh
  40d63f:	retf   0x508b
  40d642:	stc    
  40d643:	fcmovnu st,st(1)
  40d645:	ins    DWORD PTR es:[edi],dx
  40d646:	ret    0x8f7c
  40d649:	and    dh,al
  40d64b:	jp     0x40d5ea
  40d64d:	jg     0x40d67e
  40d64f:	popf   
  40d650:	pop    esi
  40d651:	xor    DWORD PTR [edi+0x2c5ec12a],esi
  40d657:	inc    ebp
  40d658:	inc    eax
  40d659:	push   esi
  40d65a:	ret    0xc012
  40d65d:	out    dx,eax
  40d65e:	in     al,dx
  40d65f:	loope  0x40d697
  40d661:	jo     0x40d681
  40d663:	push   edx
  40d664:	xor    al,cl
  40d666:	nop
  40d667:	cmp    DWORD PTR [ebp-0xd498c31],esi
  40d66d:	mov    esp,gs
  40d66f:	hlt    
  40d670:	xlat   BYTE PTR ds:[ebx]
  40d671:	and    DWORD PTR [edi],edi
  40d673:	popa   
  40d674:	mov    BYTE PTR [ecx+0x57],dh
  40d677:	mov    al,0x69
  40d679:	retf   
  40d67a:	(bad)  
  40d67b:	mov    eax,0xf132e88
  40d680:	mov    ds:0x855e060c,al
  40d685:	call   0x32fc419a
  40d68a:	sub    dh,BYTE PTR [esi]
  40d68c:	push   0x70
  40d68e:	bnd ja 0x40d65f
  40d691:	clc    
  40d692:	inc    edi
  40d693:	jecxz  0x40d699
  40d695:	arpl   sp,dx
  40d697:	push   ecx
  40d698:	sbb    bh,dh
  40d69a:	ss clc 
  40d69c:	xchg   ecx,eax
  40d69d:	cmp    ebx,DWORD PTR [eax+0x32]
  40d6a0:	push   es
  40d6a1:	sub    eax,DWORD PTR [ecx+0xf]
  40d6a4:	in     eax,0xaa
  40d6a6:	shl    DWORD PTR [ebx],0x4f
  40d6a9:	in     al,0x2
  40d6ab:	mov    eax,0xc67aa095
  40d6b0:	xlat   BYTE PTR ds:[ebx]
  40d6b1:	mov    ah,0xfd
  40d6b3:	push   eax
  40d6b4:	shl    DWORD PTR [eax-0x6a],1
  40d6b7:	loope  0x40d6bf
  40d6b9:	cmp    BYTE PTR [edi+0x3f26567a],0x22
  40d6c0:	inc    esp
  40d6c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6c2:	test   DWORD PTR [edi-0x50721281],esi
  40d6c8:	aas    
  40d6c9:	mov    eax,0xb10a154a
  40d6ce:	sbb    esi,DWORD PTR [eax+edi*2+0x3b22301c]
  40d6d5:	mov    cl,0xd9
  40d6d7:	mov    bh,0xdf
  40d6d9:	jno    0x40d6d8
  40d6db:	and    BYTE PTR [edi-0x2ad52793],ah
  40d6e1:	shr    bh,cl
  40d6e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6e4:	adc    eax,0x5fb06fcc
  40d6e9:	sub    ah,BYTE PTR [ecx]
  40d6eb:	mov    BYTE PTR [esp+edi*1+0x51],ch
  40d6ef:	nop
  40d6f0:	mov    eax,ds:0x1400807b
  40d6f5:	and    ah,BYTE PTR [esi-0x27]
  40d6f8:	and    esp,0x67
  40d6fb:	inc    ebp
  40d6fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6fd:	(bad)  
  40d6fe:	int3   
  40d6ff:	mov    edx,0x9173ceb2
  40d704:	imul   esi,ebp,0xfc439078
  40d70a:	and    BYTE PTR [esi+0x1f],bh
  40d70d:	shl    DWORD PTR [ebp-0x54],0x86
  40d711:	mov    bl,0x66
  40d713:	or     esi,DWORD PTR [edx-0x1c]
  40d716:	daa    
  40d717:	push   esi
  40d718:	ret    
  40d719:	xchg   ebp,eax
  40d71a:	inc    ebx
  40d71b:	jbe    0x40d6a2
  40d71d:	mov    cl,0x21
  40d71f:	inc    esi
  40d720:	(bad)  
  40d721:	das    
  40d722:	dec    edx
  40d723:	pop    esi
  40d724:	mov    dl,0xb6
  40d726:	dec    ebp
  40d727:	and    al,BYTE PTR [eax]
  40d729:	or     edi,0xffffffbd
  40d72c:	pop    ds
  40d72d:	(bad)  
  40d730:	aad    0xd2
  40d732:	mov    ebx,0xb6d0084b
  40d737:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d738:	stc    
  40d739:	enter  0xcd4b,0xe0
  40d73d:	cmp    ah,0x54
  40d740:	cdq    
  40d741:	stc    
  40d742:	popa   
  40d743:	inc    ecx
  40d744:	mov    edi,0x30350fd6
  40d749:	mov    esi,0x932b4efe
  40d74e:	inc    edx
  40d74f:	adc    bl,BYTE PTR [edx-0x30]
  40d752:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d753:	in     eax,0xa0
  40d755:	mov    esp,0xfb098686
  40d75a:	mov    ch,0x33
  40d75c:	inc    edi
  40d75d:	in     eax,0xfd
  40d75f:	mov    cl,0xf6
  40d761:	pusha  
  40d762:	(bad)  
  40d763:	mov    dl,0xc8
  40d765:	out    0xd0,eax
  40d767:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d768:	add    BYTE PTR [ecx],dl
  40d76a:	inc    edx
  40d76b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d76c:	pop    ebp
  40d76d:	sti    
  40d76e:	pop    ebp
  40d76f:	dec    ecx
  40d770:	xchg   esi,eax
  40d771:	mov    bl,0x58
  40d773:	in     eax,dx
  40d774:	xor    dl,BYTE PTR [edi]
  40d776:	push   edi
  40d777:	cmp    BYTE PTR [edx-0x6e],bl
  40d77a:	xor    esp,ecx
  40d77c:	push   edi
  40d77d:	pop    esp
  40d77e:	aam    0xf6
  40d780:	jg     0x40d720
  40d782:	or     ebp,ecx
  40d784:	jge    0x40d794
  40d786:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d787:	pop    esp
  40d788:	jecxz  0x40d7bd
  40d78a:	pop    ss
  40d78b:	mov    dl,0x10
  40d78d:	ss push eax
  40d78f:	mov    ebx,0x2cee7b13
  40d794:	fwait
  40d795:	mov    bh,0x60
  40d797:	mov    edi,esi
  40d799:	rol    BYTE PTR ds:0xd52f568e,cl
  40d79f:	cwde   
  40d7a0:	sahf   
  40d7a1:	or     eax,0xd41ee9da
  40d7a6:	adc    esp,DWORD PTR [edx+eiz*4+0x44b94f03]
  40d7ad:	mov    ebp,0xd1d99740
  40d7b2:	sub    al,0x60
  40d7b4:	popf   
  40d7b5:	pushf  
  40d7b6:	mov    dl,al
  40d7b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7b9:	sahf   
  40d7ba:	add    al,al
  40d7bc:	or     BYTE PTR [ecx-0x3b1b9423],dh
  40d7c2:	outs   dx,DWORD PTR ds:[esi]
  40d7c3:	test   DWORD PTR [edx-0x69],ebx
  40d7c6:	in     al,0x7a
  40d7c8:	inc    edx
  40d7c9:	ror    DWORD PTR [ecx-0x3d],1
  40d7cc:	mov    bl,BYTE PTR [edx-0x281552c0]
  40d7d2:	cdq    
  40d7d3:	pop    esp
  40d7d4:	sar    ecx,0x34
  40d7d7:	aaa    
  40d7d8:	out    dx,al
  40d7d9:	mov    dh,0x1a
  40d7db:	xchg   ebx,eax
  40d7dc:	outs   dx,BYTE PTR ds:[esi]
  40d7dd:	dec    edx
  40d7de:	es or  al,0x83
  40d7e1:	adc    al,BYTE PTR [edi+edx*1+0x6cb1faff]
  40d7e8:	dec    esp
  40d7e9:	cmp    DWORD PTR [eax+0x3487f3dd],ebx
  40d7ef:	loope  0x40d860
  40d7f1:	xor    al,0xee
  40d7f3:	arpl   WORD PTR [ecx+eax*2+0x17511ff4],ax
  40d7fa:	fist   WORD PTR [eax-0x28]
  40d7fd:	cld    
  40d7fe:	xchg   ecx,eax
  40d7ff:	mov    al,0x1f
  40d801:	stos   DWORD PTR es:[edi],eax
  40d802:	call   ecx
  40d804:	imul   eax,DWORD PTR [eax-0x6dcfb6a2],0x2a
  40d80b:	pop    ebx
  40d80c:	xor    dh,al
  40d80e:	sbb    BYTE PTR [eax-0x6d],dl
  40d811:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d812:	(bad)  
  40d813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d814:	ins    BYTE PTR es:[edi],dx
  40d815:	js     0x40d7c6
  40d817:	push   ecx
  40d818:	ins    DWORD PTR es:[edi],dx
  40d819:	adc    al,0x5b
  40d81b:	mov    dl,0xe
  40d81d:	imul   esp,DWORD PTR [ecx+eiz*4+0x1f],0x5d
  40d822:	cdq    
  40d823:	ds adc bh,ah
  40d826:	dec    eax
  40d827:	(bad)  
  40d828:	enter  0x3546,0x95
  40d82c:	fmul   DWORD PTR [ecx-0x20f4a5ab]
  40d832:	push   cs
  40d833:	jecxz  0x40d869
  40d835:	test   BYTE PTR [ecx-0x79],dl
  40d838:	(bad)  
  40d839:	jmp    0x23db:0x97469578
  40d840:	adc    eax,DWORD PTR [edx+eiz*4]
  40d843:	movups xmm5,XMMWORD PTR [esi+0x2cc4c1a0]
  40d84a:	fwait
  40d84b:	aam    0x16
  40d84d:	and    eax,0x5aca5db1
  40d852:	adc    eax,0xa02f566d
  40d857:	xchg   ebx,eax
  40d858:	push   eax
  40d859:	fst    st(7)
  40d85b:	inc    ebx
  40d85c:	mov    WORD PTR ds:0x1f9fe4e9,ds
  40d862:	inc    ebx
  40d863:	inc    ebp
  40d864:	sub    al,0x19
  40d866:	aas    
  40d867:	and    eax,0xad2564ab
  40d86c:	push   ebp
  40d86d:	mov    edi,0x5f73db63
  40d872:	jecxz  0x40d8b0
  40d874:	jmp    0x40d821
  40d876:	sub    al,0x3b
  40d878:	inc    esi
  40d879:	mov    ch,BYTE PTR [edx-0x53]
  40d87c:	mov    cl,0x2b
  40d87e:	push   esp
  40d87f:	pop    ebx
  40d880:	nop
  40d881:	into   
  40d882:	das    
  40d883:	mov    al,0xb5
  40d885:	add    esp,DWORD PTR [eax+ebx*8+0x17]
  40d889:	pop    edi
  40d88a:	cmp    DWORD PTR [esi-0x2c],edi
  40d88d:	test   DWORD PTR [eax],edx
  40d88f:	mov    eax,DWORD PTR [ebx+0x36e2c154]
  40d895:	pop    ebp
  40d896:	je     0x40d8f4
  40d898:	out    0x1,al
  40d89a:	sub    eax,esi
  40d89c:	sar    BYTE PTR [esi-0x33b2ae3d],cl
  40d8a2:	or     al,0xd1
  40d8a4:	and    DWORD PTR [eax],edx
  40d8a6:	sub    eax,0x5522bea4
  40d8ab:	outs   dx,BYTE PTR ds:[esi]
  40d8ac:	ficom  WORD PTR [ebx-0x46]
  40d8af:	shl    BYTE PTR [ebx-0x7b],cl
  40d8b2:	add    al,0xa5
  40d8b4:	stc    
  40d8b5:	xchg   ecx,eax
  40d8b6:	fiadd  DWORD PTR [ecx]
  40d8b8:	and    edx,DWORD PTR [eax+0x5b78f05d]
  40d8be:	idiv   BYTE PTR [eax-0x64]
  40d8c1:	test   ch,ch
  40d8c3:	xchg   ecx,eax
  40d8c4:	icebp  
  40d8c5:	sub    al,0xb1
  40d8c7:	fdivr  DWORD PTR [ecx+0x7d661336]
  40d8cd:	ror    DWORD PTR [ebp-0x1b192aa8],1
  40d8d3:	ins    DWORD PTR es:[edi],dx
  40d8d4:	xchg   ebx,eax
  40d8d5:	cvtdq2ps xmm1,XMMWORD PTR [esi+0x6d]
  40d8d9:	pop    esi
  40d8da:	nop
  40d8db:	shr    DWORD PTR [eax-0x41],cl
  40d8de:	shr    DWORD PTR [edi-0xc760cd3],0xf8
  40d8e5:	jns    0x40d88e
  40d8e7:	out    0x98,eax
  40d8e9:	jle    0x40d95c
  40d8eb:	arpl   WORD PTR [edi],bx
  40d8ed:	xor    dh,bl
  40d8ef:	adc    al,0xbf
  40d8f1:	pop    esi
  40d8f2:	rol    BYTE PTR [ecx],1
  40d8f4:	xchg   DWORD PTR [ebx+0x4b1aa6ec],edx
  40d8fa:	lods   al,BYTE PTR ds:[esi]
  40d8fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8fc:	mov    ebx,0xe5344049
  40d901:	out    dx,al
  40d902:	loopne 0x40d929
  40d904:	xchg   bl,ch
  40d906:	cli    
  40d907:	cmc    
  40d908:	in     eax,0x1b
  40d90a:	pusha  
  40d90b:	xchg   esp,eax
  40d90c:	hlt    
  40d90d:	mov    WORD PTR [edi-0x7a],?
  40d910:	xchg   edx,eax
  40d911:	xchg   ecx,eax
  40d912:	fisttp QWORD PTR [ecx+0x7]
  40d915:	mov    edi,0x4d7e8c5d
  40d91a:	lahf   
  40d91b:	retf   0x320a
  40d91e:	xor    al,0xee
  40d920:	inc    ecx
  40d922:	loope  0x40d8d1
  40d924:	and    eax,0xc64e3853
  40d929:	push   ebp
  40d92a:	add    eax,0x6bd72d52
  40d92f:	cmp    BYTE PTR [ecx-0x5c],ah
  40d932:	jle    0x40d8ec
  40d934:	adc    esi,DWORD PTR [ebp-0x1d]
  40d937:	loop   0x40d9ae
  40d939:	mov    eax,ds:0x9e741275
  40d93e:	mov    bh,0x1a
  40d940:	mov    bh,BYTE PTR [ecx-0x47]
  40d943:	and    DWORD PTR fs:[ebx],edi
  40d946:	or     DWORD PTR [ebx+0x1],eax
  40d949:	(bad)  
  40d94a:	test   BYTE PTR [eax+0x13b42286],0x71
  40d951:	es jne 0x40d98f
  40d954:	js     0x40d986
  40d956:	(bad)  
  40d958:	mov    fs,WORD PTR [esi+0x1e8e0ebf]
  40d95e:	xor    DWORD PTR [ebx+0x13023852],ebp
  40d964:	xchg   ebp,eax
  40d965:	ret    
  40d966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d967:	jecxz  0x40d990
  40d969:	stos   BYTE PTR es:[edi],al
  40d96a:	outs   dx,BYTE PTR ds:[esi]
  40d96b:	jecxz  0x40d904
  40d96d:	mov    ds:0xade58a25,eax
  40d972:	imul   eax,DWORD PTR [eax-0x6ff03991],0xffffffc9
  40d979:	mov    WORD PTR [edi-0x42],ss
  40d97c:	mov    al,0x1d
  40d97e:	ds add eax,0x7d1b2c1f
  40d984:	fist   WORD PTR [esi+0x47]
  40d987:	neg    ebp
  40d989:	mov    cl,0xb9
  40d98b:	fst    DWORD PTR [ebx+0x5ac817d4]
  40d991:	inc    ecx
  40d992:	inc    edx
  40d993:	pop    edx
  40d994:	push   ss
  40d995:	cli    
  40d996:	(bad)  
  40d997:	or     al,0x75
  40d999:	fwait
  40d99a:	imul   eax,DWORD PTR [edi],0xffffffea
  40d99d:	mov    ah,0xa2
  40d99f:	loopne 0x40d98e
  40d9a1:	hlt    
  40d9a2:	nop
  40d9a3:	jb     0x40d9ab
  40d9a5:	ret    
  40d9a6:	popf   
  40d9a7:	stos   DWORD PTR es:[edi],eax
  40d9a8:	dec    esp
  40d9a9:	imul   esi,DWORD PTR [esi+0x1cb279db],0x77062cad
  40d9b3:	lds    esp,FWORD PTR [edx]
  40d9b5:	loopne 0x40d960
  40d9b7:	mov    si,0x19a1
  40d9bb:	xor    edx,DWORD PTR [ebp-0x1c5dd716]
  40d9c1:	mov    ebx,0xec005a2e
  40d9c6:	mov    edx,0x993c035e
  40d9cb:	mov    al,ds:0xac02f4d4
  40d9d0:	add    DWORD PTR [edi],ecx
  40d9d2:	ins    BYTE PTR es:[edi],dx
  40d9d3:	popf   
  40d9d4:	push   ss
  40d9d5:	mov    edx,0xaa61c192
  40d9da:	xor    eax,0xdfc2120e
  40d9df:	and    edx,DWORD PTR [edx-0x65]
  40d9e2:	jne    0x40da14
  40d9e4:	pop    ds
  40d9e5:	xchg   esp,eax
  40d9e6:	repnz test al,0xb6
  40d9e9:	mov    gs,edi
  40d9eb:	je     0x40da09
  40d9ed:	unpckhps xmm7,XMMWORD PTR [ebp-0x23]
  40d9f1:	push   es
  40d9f2:	or     eax,0x1432f007
  40d9f7:	lock mov ds:0x773ad099,eax
  40d9fd:	jb     0x40d9c6
  40d9ff:	retf   
  40da00:	pushf  
  40da01:	cmp    al,0x33
  40da03:	cwde   
  40da04:	lods   eax,DWORD PTR ds:[esi]
  40da05:	fmul   st(7),st
  40da07:	push   0x9
  40da09:	or     BYTE PTR [ebx+0x71],ch
  40da0c:	cmp    BYTE PTR [eax-0x527ff0d0],cl
  40da12:	adc    ebx,ebp
  40da14:	push   eax
  40da15:	lea    ebp,[edx+0x6f]
  40da18:	fistp  WORD PTR [ecx+ecx*1]
  40da1b:	jns    0x40da93
  40da1d:	popf   
  40da1e:	lods   al,BYTE PTR ds:[esi]
  40da1f:	fwait
  40da20:	test   al,0xb5
  40da22:	sbb    al,0x39
  40da24:	(bad)  
  40da25:	or     edx,DWORD PTR [eax]
  40da27:	outs   dx,DWORD PTR ds:[esi]
  40da28:	inc    ebx
  40da29:	loope  0x40d9d1
  40da2b:	fwait
  40da2c:	imul   esi,DWORD PTR [ecx+0x42fdb800],0x28b836fa
  40da36:	or     esi,DWORD PTR [ebx-0x26c9a455]
  40da3c:	call   0x102c1f16
  40da41:	and    BYTE PTR [eax-0x5160ae0f],al
  40da47:	mov    ch,0x92
  40da49:	shl    BYTE PTR [ecx-0x50],cl
  40da4c:	loop   0x40d9e1
  40da4e:	xor    DWORD PTR [ebp+0x4aa1b3b9],0xffffffce
  40da55:	cs dec ebx
  40da57:	mov    ch,0x1a
  40da59:	sub    edx,0xffffff87
  40da5c:	xchg   ebx,eax
  40da5d:	dec    edi
  40da5e:	pop    ebx
  40da5f:	lock sub DWORD PTR [edi+eiz*8],edx
  40da63:	std    
  40da64:	std    
  40da65:	jno    0x40d9f8
  40da67:	rcl    DWORD PTR [ebp-0x22d66942],0xe6
  40da6e:	xchg   esi,eax
  40da6f:	sbb    eax,0xa98e2c25
  40da74:	mov    ds:0xe728c26,eax
  40da79:	sub    BYTE PTR ds:0xca9db85,0x14
  40da80:	mov    al,0x7
  40da82:	dec    eax
  40da83:	lock mov dh,0x71
  40da86:	das    
  40da87:	jle    0x40da4a
  40da89:	adc    DWORD PTR [esp+eiz*4],edx
  40da8c:	fdiv   DWORD PTR [ebx]
  40da8e:	xchg   esp,eax
  40da8f:	dec    cx
  40da91:	mov    ?,WORD PTR [esi]
  40da93:	jg     0x40dae9
  40da95:	and    al,0xe6
  40da97:	ins    DWORD PTR es:[edi],dx
  40da98:	test   al,0xb2
  40da9a:	xor    al,0xec
  40da9c:	sbb    al,0xe7
  40da9e:	sub    ch,ah
  40daa0:	push   ds
  40daa1:	lea    eax,[ebp-0x69]
  40daa4:	push   ds
  40daa5:	push   es
  40daa6:	in     al,dx
  40daa7:	ds dec edi
  40daa9:	ffreep st(2)
  40daab:	xchg   esp,eax
  40daac:	pop    edi
  40daad:	mov    al,0x7b
  40daaf:	xchg   esi,eax
  40dab0:	stc    
  40dab1:	inc    edi
  40dab2:	outs   dx,DWORD PTR ds:[esi]
  40dab3:	add    al,0x2a
  40dab5:	add    bl,BYTE PTR [ebx+0x5264c422]
  40dabb:	adc    al,0xa3
  40dabd:	sbb    ebx,DWORD PTR [eax-0x5e6fbcfb]
  40dac3:	fcomp  DWORD PTR [ecx-0x3c]
  40dac6:	mov    ebp,0x8c6d6e45
  40dacb:	xor    ah,BYTE PTR [eax+0x7b]
  40dace:	pusha  
  40dacf:	cmp    esi,DWORD PTR [edx]
  40dad1:	scas   al,BYTE PTR es:[edi]
  40dad2:	int3   
  40dad3:	or     edi,DWORD PTR [edx-0x78]
  40dad6:	push   ss
  40dad7:	inc    edi
  40dad8:	iret   
  40dad9:	cmp    al,0xa8
  40dadb:	mov    DWORD PTR [ebx-0x6d50cad7],ebx
  40dae1:	ficom  DWORD PTR [ecx-0x40]
  40dae4:	dec    ebp
  40dae5:	outs   dx,DWORD PTR ds:[esi]
  40dae6:	push   edx
  40dae7:	jnp    0x40db50
  40dae9:	jae    0x40db58
  40daeb:	scas   al,BYTE PTR es:[edi]
  40daec:	add    al,BYTE PTR [ebx+0x48]
  40daef:	(bad)  
  40daf1:	push   0x22
  40daf3:	mov    dl,0x85
  40daf5:	aaa    
  40daf6:	loop   0x40db20
  40daf8:	rol    DWORD PTR [edx+0x6e],1
  40dafb:	adc    edx,DWORD PTR [ebp+0x14b226e3]
  40db01:	in     eax,0x76
  40db03:	dec    esp
  40db04:	gs js  0x40dae2
  40db07:	dec    eax
  40db08:	sbb    edi,DWORD PTR ds:0x3b1f25d7
  40db0e:	gs in  al,0x7
  40db11:	sbb    DWORD PTR [esi+0x6a722fbd],ecx
  40db17:	pusha  
  40db18:	iret   
  40db19:	mov    ch,0x24
  40db1b:	mov    dl,BYTE PTR [si+0x6a4]
  40db20:	(bad)  
  40db21:	inc    ecx
  40db22:	stc    
  40db23:	clc    
  40db24:	ds enter 0x93cb,0x2
  40db29:	pop    es
  40db2a:	pop    es
  40db2b:	mov    esi,0x59b9f861
  40db30:	dec    eax
  40db31:	mov    edx,0xf22b60f5
  40db37:	pop    ds
  40db38:	dec    esp
  40db39:	mov    esi,0x8d860382
  40db3e:	xchg   esi,eax
  40db3f:	pop    edi
  40db40:	dec    edx
  40db41:	lods   al,BYTE PTR ds:[esi]
  40db42:	fisub  WORD PTR [ecx]
  40db44:	xor    ecx,esp
  40db46:	ss loope 0x40db40
  40db49:	jns    0x40dba4
  40db4b:	out    0x30,al
  40db4d:	cmc    
  40db4e:	xchg   esi,eax
  40db4f:	scas   eax,DWORD PTR es:[edi]
  40db50:	pop    es
  40db51:	loop   0x40dbbc
  40db53:	xchg   esp,eax
  40db54:	and    eax,0xa69e6c1f
  40db59:	cmp    DWORD PTR [ecx+0x3dc21a10],0x17
  40db60:	mov    ebx,0xb4da866d
  40db65:	sub    edi,DWORD PTR [ebx-0x28]
  40db68:	dec    eax
  40db69:	add    bl,BYTE PTR [ebx]
  40db6b:	out    dx,al
  40db6c:	ins    BYTE PTR es:[edi],dx
  40db6d:	aaa    
  40db6e:	xchg   edx,eax
  40db6f:	push   es
  40db70:	hlt    
  40db71:	icebp  
  40db72:	mov    dh,ch
  40db74:	sub    esp,DWORD PTR [eax]
  40db76:	sub    esi,DWORD PTR [ebp-0x3f9fadc1]
  40db7c:	jl     0x40db3b
  40db7e:	add    dl,BYTE PTR [esi-0x7ec75c2e]
  40db84:	mov    ah,0xf7
  40db86:	(bad)  
  40db87:	jmp    0x40db8e
  40db89:	jb     0x40dba6
  40db8b:	pop    ebx
  40db8c:	sub    al,0x59
  40db8e:	jge    0x40db45
  40db90:	xor    edx,DWORD PTR [edi]
  40db92:	repnz dec esp
  40db94:	cmp    eax,0x617b9dbb
  40db99:	adc    ecx,DWORD PTR [eax]
  40db9b:	(bad)  
  40db9c:	mov    ebp,0x89309275
  40dba1:	push   DWORD PTR [ecx]
  40dba3:	adc    BYTE PTR [edi-0x3d1e1a53],cl
  40dba9:	dec    ebp
  40dbaa:	int    0x4c
  40dbac:	repnz push ecx
  40dbae:	mov    ebx,0x292ec815
  40dbb3:	mov    ds:0x80b7b61e,eax
  40dbb8:	mov    ecx,0x7c9c6ae3
  40dbbd:	popa   
  40dbbe:	push   edx
  40dbbf:	data16 and al,0x71
  40dbc2:	push   0xa378229a
  40dbc7:	or     eax,0xa8c28d8d
  40dbcc:	int    0x1
  40dbce:	mov    esi,0xa11837e2
  40dbd3:	test   DWORD PTR [eax+0x71],edx
  40dbd6:	mov    ecx,0x835a4e6e
  40dbdb:	and    edi,DWORD PTR [ebp+edx*2+0x1]
  40dbdf:	mov    bh,ah
  40dbe1:	inc    ebp
  40dbe2:	sub    BYTE PTR [ecx+0x27],cl
  40dbe5:	push   edi
  40dbe6:	ficom  WORD PTR [ecx-0xe63907]
  40dbec:	cmp    dl,0x7d
  40dbef:	jne    0x40dc11
  40dbf1:	addr16 and al,0xc4
  40dbf4:	shl    DWORD PTR [ecx-0x5e],cl
  40dbf7:	fistp  WORD PTR [edx+0x71e71f2d]
  40dbfd:	jl     0x40dc3c
  40dbff:	fldcw  WORD PTR [esi]
  40dc01:	in     al,0xb6
  40dc03:	mov    ch,0xa2
  40dc05:	cmp    dl,BYTE PTR [ecx+0x11226427]
  40dc0b:	test   DWORD PTR [eax],esp
  40dc0d:	jle    0x40dbae
  40dc0f:	test   al,0x8f
  40dc11:	xchg   edi,eax
  40dc12:	adc    eax,DWORD PTR [ecx+0x76]
  40dc15:	out    0x89,eax
  40dc17:	cli    
  40dc18:	mov    bh,0x52
  40dc1a:	jo     0x40dc6f
  40dc1c:	clc    
  40dc1d:	pop    ds
  40dc1e:	dec    ebp
  40dc1f:	pushf  
  40dc20:	lock pushf 
  40dc22:	clc    
  40dc23:	mov    edi,0x3fd2f371
  40dc28:	or     edx,ecx
  40dc2a:	aad    0xfc
  40dc2c:	jmp    0x40dc7a
  40dc2e:	and    BYTE PTR [ebx+0x12],ch
  40dc31:	mov    ss,WORD PTR [ebx-0x41]
  40dc34:	leave  
  40dc35:	add    BYTE PTR [eax],0x91
  40dc38:	dec    ecx
  40dc39:	repz (bad) 
  40dc3c:	push   ecx
  40dc3d:	mov    eax,ds:0x875a1053
  40dc42:	mov    DWORD PTR [edi-0x2a],eax
  40dc45:	and    al,0x4d
  40dc47:	mov    cl,0x2b
  40dc49:	(bad)  
  40dc4a:	clc    
  40dc4b:	dec    edi
  40dc4c:	pop    esp
  40dc4d:	(bad)
  40dc50:	les    eax,FWORD PTR [esi+0x72]
  40dc53:	adc    BYTE PTR ds:0x36115b13,dh
  40dc59:	push   es
  40dc5a:	repnz imul ebx,edx,0xe4e60219
  40dc61:	push   esp
  40dc62:	pop    ecx
  40dc63:	xchg   edx,eax
  40dc64:	sub    DWORD PTR [edx-0x43],esi
  40dc67:	or     BYTE PTR [ecx-0x34eaf180],ch
  40dc6d:	cli    
  40dc6e:	clc    
  40dc6f:	sbb    DWORD PTR [eax],esp
  40dc71:	push   edx
  40dc72:	loope  0x40dc57
  40dc74:	sahf   
  40dc75:	outs   dx,BYTE PTR ds:[esi]
  40dc76:	sub    DWORD PTR [ecx+0x30],0xffffffcf
  40dc7a:	push   ebp
  40dc7b:	xor    BYTE PTR [edx-0x253c09c3],dl
  40dc81:	call   0x284217d4
  40dc86:	push   ecx
  40dc87:	xlat   BYTE PTR ds:[ebx]
  40dc88:	js     0x40dc93
  40dc8a:	sbb    edx,DWORD PTR [eax]
  40dc8c:	dec    esp
  40dc8d:	das    
  40dc8e:	push   ebx
  40dc8f:	mov    eax,0xf0bfda5e
  40dc94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc95:	cmp    dl,BYTE PTR [edx]
  40dc97:	inc    esi
  40dc98:	sbb    ebp,DWORD PTR [esi]
  40dc9a:	xchg   edx,eax
  40dc9b:	jb     0x40dc30
  40dc9d:	push   0x2e
  40dc9f:	jno    0x40dd17
  40dca1:	mov    ah,0x10
  40dca3:	nop
  40dca4:	inc    dl
  40dca6:	fsub   st(5),st
  40dca8:	push   edi
  40dca9:	add    ah,BYTE PTR [edi+0x4f9f04f2]
  40dcaf:	out    0xc8,eax
  40dcb1:	jnp    0x40dcbf
  40dcb3:	test   eax,0xc1f61936
  40dcb8:	sbb    edx,DWORD PTR [edx]
  40dcba:	xchg   edi,eax
  40dcbb:	jmp    0x40dced
  40dcbd:	rcr    DWORD PTR [ecx],0x9a
  40dcc0:	nop
  40dcc1:	and    eax,0x8926782b
  40dcc6:	retf   
  40dcc7:	adc    al,0x50
  40dcc9:	cmp    DWORD PTR ds:0x95e5ee7,ebx
  40dccf:	test   dl,cl
  40dcd1:	stc    
  40dcd2:	xchg   esi,eax
  40dcd3:	(bad)  
  40dcd4:	cdq    
  40dcd5:	mov    esp,0x9b030a7
  40dcda:	sbb    DWORD PTR [esp+edx*2-0x6b],0x2345a390
  40dce2:	mov    ah,0x55
  40dce4:	mov    eax,ds:0x8e3ea7f6
  40dce9:	retf   0x1e7a
  40dcec:	jl     0x40dd2d
  40dcee:	imul   ebp,DWORD PTR [ecx],0xc1141112
  40dcf4:	gs sub al,0x30
  40dcf7:	cs inc eax
  40dcf9:	xchg   ebx,eax
  40dcfa:	nop
  40dcfb:	push   ss
  40dcfc:	add    ah,BYTE PTR [ebx+0x42]
  40dcff:	fidiv  WORD PTR [ebp-0xb9a52fb]
  40dd05:	jns    0x40dd77
  40dd07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd08:	or     eax,DWORD PTR [esi+eiz*2-0x7f848091]
  40dd0f:	in     eax,dx
  40dd10:	xor    al,0x21
  40dd12:	loope  0x40dce1
  40dd14:	arpl   WORD PTR [bp-0x4c],ax
  40dd18:	test   al,0x3d
  40dd1a:	cmp    BYTE PTR [edx],0x1a
  40dd1d:	dec    esp
  40dd1e:	dec    ecx
  40dd1f:	jp     0x40dd4d
  40dd21:	mov    ecx,0x21036ac6
  40dd26:	inc    ebp
  40dd27:	ja     0x40dd03
  40dd29:	clc    
  40dd2a:	out    0x7f,al
  40dd2c:	es jecxz 0x40dd4c
  40dd2f:	fimul  DWORD PTR [edx+esi*2-0x76]
  40dd33:	and    eax,0x7e7faf30
  40dd38:	xchg   ebx,eax
  40dd39:	mov    esp,0x42b13520
  40dd3e:	lods   eax,DWORD PTR ds:[esi]
  40dd3f:	shl    bh,0xb7
  40dd42:	imul   edx,edi,0xbed61c88
  40dd48:	push   ecx
  40dd49:	inc    ebp
  40dd4a:	jne    0x40dd82
  40dd4c:	dec    ecx
  40dd4d:	xchg   edi,eax
  40dd4e:	mov    bh,0x90
  40dd50:	push   ebp
  40dd51:	push   ebx
  40dd52:	or     eax,0x266c48a3
  40dd57:	mov    bl,BYTE PTR [ecx]
  40dd59:	pop    ebp
  40dd5a:	in     eax,dx
  40dd5b:	(bad)  
  40dd5d:	fadd   DWORD PTR [eax]
  40dd5f:	mov    edi,0xf0b500db
  40dd64:	pop    es
  40dd65:	scas   eax,DWORD PTR es:[edi]
  40dd66:	xchg   esp,eax
  40dd67:	(bad)  
  40dd69:	aad    0xe2
  40dd6b:	pushf  
  40dd6c:	outs   dx,BYTE PTR ds:[esi]
  40dd6d:	sti    
  40dd6e:	mov    dh,0xa0
  40dd70:	into   
  40dd71:	ins    BYTE PTR es:[edi],dx
  40dd72:	dec    ecx
  40dd73:	fisub  DWORD PTR [edx+0x70]
  40dd76:	sbb    esp,ebx
  40dd78:	dec    eax
  40dd79:	push   0xd8b99cc
  40dd7e:	pushf  
  40dd7f:	dec    dh
  40dd81:	fwait
  40dd82:	add    dh,dh
  40dd84:	ror    BYTE PTR [ecx],cl
  40dd86:	retf   0xc5db
  40dd89:	jnp    0x40dd35
  40dd8b:	pop    ss
  40dd8c:	call   DWORD PTR [edx+ecx*8+0x5e55f3d7]
  40dd93:	sbb    al,0x1d
  40dd95:	aam    0x57
  40dd97:	inc    ebx
  40dd98:	loope  0x40dd78
  40dd9a:	lods   al,BYTE PTR cs:[esi]
  40dd9c:	sub    al,0xc7
  40dd9e:	dec    esp
  40dd9f:	sub    DWORD PTR [edx],eax
  40dda1:	dec    eax
  40dda2:	push   0x1b
  40dda4:	popf   
  40dda5:	xchg   esp,eax
  40dda6:	or     al,BYTE PTR [edi-0x6c]
  40dda9:	mov    edx,0xb0a8ef0b
  40ddae:	cwde   
  40ddaf:	test   DWORD PTR [ebx],esp
  40ddb1:	push   ss
  40ddb2:	jno    0x40dd3a
  40ddb4:	es add esi,ebp
  40ddb7:	daa    
  40ddb8:	xchg   ecx,eax
  40ddb9:	pop    ss
  40ddba:	stos   BYTE PTR es:[edi],al
  40ddbb:	aam    0x4b
  40ddbd:	adc    esi,DWORD PTR [ebp+0x4144350a]
  40ddc3:	addr16 sbb eax,0x54bf1a89
  40ddc9:	jne    0x40ddd7
  40ddcb:	out    0x6b,eax
  40ddcd:	sub    ch,BYTE PTR [esi-0x3e81c481]
  40ddd3:	ins    DWORD PTR es:[edi],dx
  40ddd4:	sbb    BYTE PTR [eax],bh
  40ddd6:	cmp    esp,DWORD PTR [edx-0x6e]
  40ddd9:	add    BYTE PTR [edx+0x483f9991],al
  40dddf:	mov    edi,0x97176b11
  40dde4:	jae    0x40ddb9
  40dde6:	sbb    ecx,DWORD PTR [esi]
  40dde8:	es mov ebp,ecx
  40ddeb:	mov    edx,0xc1ea8d0b
  40ddf0:	pop    ss
  40ddf1:	ret    
  40ddf2:	inc    eax
  40ddf3:	xor    DWORD PTR [edx-0x61],ecx
  40ddf6:	push   esp
  40ddf7:	fwait
  40ddf8:	scas   eax,DWORD PTR es:[edi]
  40ddf9:	jbe    0x40dd91
  40ddfb:	out    0x7e,eax
  40ddfd:	ret    
  40ddfe:	mov    ds:0x10d96593,al
  40de03:	daa    
  40de04:	repz repz xor ah,BYTE PTR [eax]
  40de08:	das    
  40de09:	cdq    
  40de0a:	out    0x5e,eax
  40de0c:	test   al,0xff
  40de0e:	jge    0x40ddec
  40de10:	lds    edi,FWORD PTR [ebx]
  40de12:	je     0x40de69
  40de14:	and    ebp,eax
  40de16:	adc    bh,BYTE PTR [ebx+0x369b0ad4]
  40de1c:	cmp    ch,BYTE PTR [eax+0x66]
  40de1f:	lea    edi,[edx-0x59e3e63]
  40de25:	xlat   BYTE PTR ds:[ebx]
  40de26:	dec    ebp
  40de27:	hlt    
  40de28:	and    cl,BYTE PTR [edx-0x16]
  40de2b:	cmp    BYTE PTR [ecx+ebx*8+0x77],dl
  40de2f:	pop    ebx
  40de30:	inc    esp
  40de31:	xor    DWORD PTR [edi],eax
  40de33:	jne    0x40ddf9
  40de35:	mov    BYTE PTR [edx+0x6c4ef500],0x4
  40de3c:	inc    ebx
  40de3d:	daa    
  40de3e:	pop    ecx
  40de3f:	scas   al,BYTE PTR es:[edi]
  40de40:	inc    esi
  40de41:	aad    0x9a
  40de43:	dec    ebp
  40de44:	leave  
  40de45:	pushf  
  40de46:	dec    ecx
  40de47:	stos   DWORD PTR es:[edi],eax
  40de48:	mov    ecx,DWORD PTR [ebp+0x66]
  40de4b:	xor    esp,DWORD PTR [edi]
  40de4d:	add    esi,DWORD PTR [ebp+0x7d]
  40de50:	and    ebp,esi
  40de52:	icebp  
  40de53:	in     eax,dx
  40de54:	pop    es
  40de55:	clc    
  40de56:	jno    0x40de1b
  40de58:	(bad)  
  40de59:	repz cmc 
  40de5b:	mov    eax,ds:0xef2560b4
  40de60:	mov    esi,0x3195e01
  40de65:	les    esp,FWORD PTR [eax+0x706c4f96]
  40de6b:	mov    dl,0xf5
  40de6d:	pop    edi
  40de6e:	pop    ecx
  40de6f:	push   ds
  40de70:	pop    edi
  40de71:	arpl   si,di
  40de73:	or     al,BYTE PTR [edi]
  40de75:	(bad)  
  40de76:	xor    al,0x10
  40de78:	jge    0x40de99
  40de7a:	cmp    eax,0x4b583167
  40de7f:	or     al,0x1
  40de81:	sub    ebp,DWORD PTR [ebx+0x60]
  40de84:	jne    0x40de1c
  40de86:	inc    ecx
  40de87:	push   eax
  40de88:	xor    BYTE PTR [ebx-0x73],0xd0
  40de8c:	imul   ebp,DWORD PTR [edx-0x2edc157c],0xd1da616b
  40de96:	inc    esi
  40de97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de98:	jb     0x40deb4
  40de9a:	cmp    ah,BYTE PTR [esi]
  40de9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de9d:	fwait
  40de9e:	adc    bh,cl
  40dea0:	push   edi
  40dea1:	cld    
  40dea2:	ins    BYTE PTR es:[edi],dx
  40dea3:	fwait
  40dea4:	push   ecx
  40dea5:	dec    ebx
  40dea6:	popf   
  40dea7:	push   ebp
  40dea8:	cmp    bh,BYTE PTR [ecx+esi*4-0x4c]
  40deac:	cmp    dl,BYTE PTR [ebx+0x2e]
  40deaf:	push   ss
  40deb0:	and    dh,BYTE PTR [esi]
  40deb2:	cli    
  40deb3:	stos   DWORD PTR es:[edi],eax
  40deb4:	xchg   BYTE PTR [esi+edi*4],bl
  40deb7:	sbb    eax,0x3ac3d2da
  40debc:	sbb    ah,BYTE PTR [edx]
  40debe:	pop    edi
  40debf:	xchg   edx,eax
  40dec0:	sub    eax,0x1e9befc1
  40dec5:	call   0x8ebea35e
  40deca:	(bad)  
  40decb:	mov    edx,0xa2b692d9
  40ded0:	dec    ebp
  40ded1:	ja     0x40deda
  40ded3:	aas    
  40ded4:	mov    dh,dl
  40ded6:	jg     0x40de81
  40ded8:	push   ss
  40ded9:	aam    0xab
  40dedb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dedc:	cld    
  40dedd:	push   ecx
  40dede:	add    dl,bl
  40dee0:	sbb    al,0xc7
  40dee2:	sub    BYTE PTR ds:0xaa9a1d44,0x19
  40dee9:	xchg   ebp,eax
  40deea:	pop    edx
  40deeb:	adc    DWORD PTR [edi-0x3e],esi
  40deee:	mov    esi,0xe8c4f162
  40def3:	sbb    al,0x12
  40def5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40def6:	arpl   WORD PTR [ecx+ebx*2],bx
  40def9:	pop    esp
  40defa:	inc    ecx
  40defb:	aam    0xf5
  40defd:	pop    edx
  40defe:	hlt    
  40deff:	loop   0x40df3b
  40df01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df02:	push   ebp
  40df03:	stos   DWORD PTR es:[edi],eax
  40df04:	inc    ebp
  40df05:	cmp    ch,dh
  40df07:	inc    ebx
  40df08:	sub    eax,0x26290603
  40df0d:	test   BYTE PTR [edi],cl
  40df0f:	mov    ds,WORD PTR [eax+0x69]
  40df12:	dec    ecx
  40df13:	inc    ecx
  40df14:	mov    cl,0x40
  40df16:	mov    eax,ds:0x2e997b5c
  40df1b:	sbb    BYTE PTR [ebx-0x23],ah
  40df1e:	(bad)  
  40df1f:	and    eax,0x42daec9c
  40df24:	cmp    BYTE PTR [ecx],cl
  40df26:	push   edi
  40df27:	xchg   BYTE PTR [bx+si-0xf],dh
  40df2b:	mov    dh,BYTE PTR [ebp+0x50]
  40df2e:	and    ch,BYTE PTR ds:0xeecd7135
  40df34:	arpl   WORD PTR [eax+eiz*4],si
  40df37:	sbb    eax,0x47d683d3
  40df3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df3d:	rcr    BYTE PTR [ebp+esi*1-0x61bd2669],cl
  40df44:	(bad)  
  40df45:	fs push esi
  40df47:	fmulp  st(3),st
  40df49:	push   cs
  40df4a:	aam    0x60
  40df4c:	(bad)  
  40df4d:	xchg   ecx,eax
  40df4e:	bound  esp,QWORD PTR [ecx+0x31]
  40df51:	inc    edi
  40df52:	(bad)  
  40df53:	(bad)  
  40df55:	repnz shl BYTE PTR fs:[edi-0x4e],1
  40df5a:	mov    dh,0x0
  40df5c:	pop    eax
  40df5d:	xlat   BYTE PTR ds:[ebx]
  40df5e:	call   0xb2a:0x66002b68
  40df65:	and    ebp,DWORD PTR [ebx]
  40df67:	inc    ecx
  40df68:	loope  0x40dfc5
  40df6a:	add    al,0x60
  40df6c:	sbb    ax,0xb8ab
  40df70:	jge    0x40df9a
  40df72:	mov    dh,BYTE PTR [eax]
  40df74:	stc    
  40df75:	xor    al,0xec
  40df77:	retf   
  40df78:	mov    ch,0xda
  40df7a:	push   ecx
  40df7b:	fild   QWORD PTR [ecx-0x30]
  40df7e:	add    DWORD PTR [eax+0x28b704b1],eax
  40df84:	(bad)  
  40df85:	popa   
  40df86:	addr16 retf 0xbcd9
  40df8a:	xchg   DWORD PTR [edi-0x98a52d4],esp
  40df90:	sahf   
  40df91:	xchg   ebx,eax
  40df92:	in     eax,0x62
  40df94:	ja     0x40df4b
  40df96:	pop    edi
  40df97:	loopne 0x40df55
  40df99:	mov    ecx,DWORD PTR [ebx-0x6b04289e]
  40df9f:	cmp    ebp,DWORD PTR [eax-0x65]
  40dfa2:	out    0x5,al
  40dfa4:	and    al,0x2f
  40dfa6:	scas   eax,DWORD PTR es:[edi]
  40dfa7:	adc    esi,eax
  40dfa9:	ins    DWORD PTR es:[edi],dx
  40dfaa:	dec    eax
  40dfab:	xlat   BYTE PTR ds:[ebx]
  40dfac:	add    eax,0x20387d47
  40dfb1:	mov    dl,0x9
  40dfb3:	xor    al,0x3f
  40dfb5:	shr    DWORD PTR [edx+esi*1-0x4c7a4744],cl
  40dfbc:	jmp    0x40e02b
  40dfbe:	jg     0x40e01c
  40dfc0:	mov    BYTE PTR [edi],0xb0
  40dfc3:	xor    cl,BYTE PTR cs:[ebx+0x29]
  40dfc7:	xor    eax,0x45bdfdd1
  40dfcc:	sub    BYTE PTR [edx+0x6b],0xdb
  40dfd0:	lea    esp,[edx-0x72]
  40dfd3:	stos   BYTE PTR es:[edi],al
  40dfd4:	adc    eax,0xca38f9b3
  40dfd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfda:	push   0x511ca39f
  40dfdf:	imul   eax,DWORD PTR [edx+esi*8],0xffffffbf
  40dfe3:	repnz sti 
  40dfe5:	adc    esp,DWORD PTR [ecx-0x36009f43]
  40dfeb:	add    dh,cl
  40dfed:	sub    edi,DWORD PTR [edi+0x12]
  40dff0:	ins    BYTE PTR es:[edi],dx
  40dff1:	jge    0x40dfd5
  40dff3:	push   esp
  40dff4:	jecxz  0x40dfa1
  40dff6:	mov    bl,0x3c
  40dff8:	aas    
  40dff9:	dec    edx
  40dffa:	xor    al,0x28
  40dffc:	(bad)  
  40dffd:	push   eax
  40dffe:	fsubr  st(6),st
  40e000:	ss sbb eax,0xb17ad377
  40e006:	pusha  
  40e007:	pop    ss
  40e008:	js     0x40e06b
  40e00a:	test   eax,0x62bb11d3
  40e00f:	out    0x91,eax
  40e011:	outs   dx,DWORD PTR ds:[esi]
  40e012:	jmp    0x3ce3:0x1b5c5a13
  40e019:	in     eax,dx
  40e01a:	pop    ds
  40e01b:	dec    edi
  40e01c:	mov    bl,0x9a
  40e01e:	push   eax
  40e01f:	arpl   bx,bx
  40e021:	sbb    bh,BYTE PTR ds:0x257771cc
  40e027:	add    BYTE PTR [edx+eiz*8+0x20],0x76
  40e02c:	aaa    
  40e02d:	popa   
  40e02e:	jno    0x40e083
  40e030:	les    ebp,FWORD PTR [edi+0x566b18af]
  40e036:	pop    edi
  40e037:	jmp    0x2dfb:0x4c5fb831
  40e03e:	fnstsw WORD PTR [ebx+0x2e]
  40e041:	dec    esi
  40e042:	cli    
  40e043:	or     DWORD PTR [ebp+0x3c],edx
  40e046:	lahf   
  40e047:	idiv   DWORD PTR [ebx+0x2e]
  40e04a:	iret   
  40e04b:	xchg   ecx,eax
  40e04c:	sbb    BYTE PTR [esi],bh
  40e04e:	loop   0x40e02e
  40e050:	sti    
  40e051:	lods   eax,DWORD PTR ds:[esi]
  40e052:	pop    ebx
  40e053:	and    DWORD PTR [edi+0x4c],edx
  40e056:	dec    esp
  40e057:	cli    
  40e058:	add    DWORD PTR [ecx-0x20],esp
  40e05b:	jge    0x40e058
  40e05d:	fsub   st(6),st
  40e05f:	cmp    al,0x5b
  40e061:	adc    bl,ch
  40e063:	inc    ecx
  40e064:	jmp    0xea207609
  40e069:	or     al,0x63
  40e06b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e06c:	push   esi
  40e06d:	jle    0x40e001
  40e06f:	pop    esp
  40e070:	ss and ecx,ebp
  40e073:	out    0x9b,al
  40e075:	mov    edx,0xdd15304e
  40e07a:	jns    0x40e0a0
  40e07c:	inc    ecx
  40e07d:	inc    eax
  40e07e:	out    dx,al
  40e07f:	(bad)  
  40e080:	adc    al,0x64
  40e082:	adc    ebx,esp
  40e084:	(bad)  
  40e085:	fs and al,0xc1
  40e088:	cmp    BYTE PTR [edx-0x3ebf5235],al
  40e08e:	neg    BYTE PTR [edx+edi*4]
  40e091:	cs inc esp
  40e093:	cmp    bh,BYTE PTR [edx+ebp*2]
  40e096:	mov    esi,0x6515ae21
  40e09b:	imul   edx,DWORD PTR [eax-0x59],0x5b
  40e09f:	sbb    BYTE PTR [ebx],bh
  40e0a1:	push   esi
  40e0a2:	push   esp
  40e0a3:	add    eax,0xe3a41419
  40e0a8:	ins    BYTE PTR es:[edi],dx
  40e0a9:	dec    esp
  40e0aa:	mov    edx,0xf154d961
  40e0af:	or     edx,0xffffffbc
  40e0b2:	mov    esp,ecx
  40e0b4:	add    BYTE PTR [ecx+0x62e6466a],bl
  40e0ba:	xor    al,0x61
  40e0bc:	cmp    edx,DWORD PTR [esi-0x6]
  40e0bf:	pop    ebp
  40e0c0:	and    al,0xc7
  40e0c2:	montmul (bad)
  40e0c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0c4:	inc    ebp
  40e0c5:	push   0x37
  40e0c7:	xchg   esi,eax
  40e0c8:	cli    
  40e0c9:	mov    eax,ds:0xcf614098
  40e0ce:	mov    esp,DWORD PTR [ebp+0x70f05aab]
  40e0d4:	int    0x98
  40e0d6:	push   cs
  40e0d7:	sub    BYTE PTR [edi-0x3c568b17],ah
  40e0dd:	ss mov dl,0x7d
  40e0e0:	mov    dh,0xdf
  40e0e2:	mov    ss,edi
  40e0e4:	(bad)  
  40e0e5:	xor    BYTE PTR [ecx-0x45231c5d],ch
  40e0eb:	dec    eax
  40e0ec:	push   es
  40e0ed:	cmp    DWORD PTR [ebp-0x12],esi
  40e0f0:	mov    cl,0xc4
  40e0f2:	jecxz  0x40e168
  40e0f4:	sbb    ah,dl
  40e0f6:	aaa    
  40e0f7:	mov    dl,0x91
  40e0f9:	cmp    eax,0xbbe9285a
  40e0fe:	hlt    
  40e0ff:	push   0xfffffffc
  40e101:	imul   bh
  40e103:	jae    0x40e13d
  40e105:	push   es
  40e106:	adc    ah,BYTE PTR [edx]
  40e108:	xchg   edi,eax
  40e109:	xchg   ebp,eax
  40e10a:	es mov ah,0x16
  40e10d:	mov    BYTE PTR [ecx+ecx*1],al
  40e110:	popf   
  40e111:	shl    DWORD PTR [ebp-0x435f570c],0x52
  40e118:	shl    DWORD PTR [eax+0x15],cl
  40e11b:	adc    al,0x5a
  40e11d:	(bad)  
  40e11e:	out    0x68,al
  40e120:	pop    ebx
  40e121:	sub    DWORD PTR [esi+0x76c0e268],edi
  40e127:	shl    BYTE PTR [ebx],0x6d
  40e12a:	jp     0x40e0d5
  40e12c:	fwait
  40e12d:	aad    0xe2
  40e12f:	jne    0x40e119
  40e131:	or     BYTE PTR [ebx+0x77],dl
  40e134:	xor    eax,0x51dff22d
  40e139:	inc    eax
  40e13a:	sbb    eax,0x955227c6
  40e13f:	mov    eax,ds:0x845d33fd
  40e144:	mov    al,ds:0x69d3b80f
  40e14a:	shr    esi,cl
  40e14c:	mov    ebp,0x4a05299a
  40e151:	stos   DWORD PTR es:[edi],eax
  40e152:	xchg   edx,eax
  40e153:	scas   al,BYTE PTR es:[edi]
  40e154:	jb     0x40e139
  40e156:	data16 fcomp QWORD PTR [ecx+0x7bdd554d]
  40e15d:	bound  eax,QWORD PTR [esi-0x17c06a67]
  40e163:	cmp    esp,DWORD PTR [ebx-0x71]
  40e166:	mov    al,0xc2
  40e168:	ja     0x40e125
  40e16a:	and    dl,BYTE PTR [edx+0x1372429f]
  40e170:	add    al,0x15
  40e172:	add    al,0xb1
  40e174:	dec    ebx
  40e175:	enter  0x754b,0xaa
  40e179:	cdq    
  40e17a:	jno    0x40e1ad
  40e17c:	mov    cl,0x5f
  40e17e:	xchg   DWORD PTR [ebx+ecx*4+0x2f131ba7],eax
  40e185:	jl     0x40e1a9
  40e187:	retf   0xe137
  40e18a:	dec    ebx
  40e18b:	push   ds
  40e18c:	fs push edi
  40e18e:	xor    eax,0x2c699e3e
  40e193:	neg    ah
  40e195:	aas    
  40e196:	mov    ebp,0xf1c0c086
  40e19b:	retf   0xea2
  40e19e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e19f:	aad    0x44
  40e1a1:	int    0x29
  40e1a3:	inc    ebx
  40e1a4:	push   eax
  40e1a5:	scas   eax,DWORD PTR es:[edi]
  40e1a6:	test   al,0x52
  40e1a8:	test   al,0xc2
  40e1aa:	leave  
  40e1ab:	in     al,0x7c
  40e1ad:	or     esi,ebp
  40e1af:	push   cs
  40e1b0:	popf   
  40e1b1:	push   esp
  40e1b2:	mov    eax,ds:0xfb4b5360
  40e1b7:	push   ss
  40e1b8:	mov    ch,0xe1
  40e1ba:	mov    ds,edi
  40e1bc:	aad    0xfd
  40e1be:	jmp    0x720f:0x41db8611
  40e1c5:	out    0x97,al
  40e1c7:	cmp    al,0x66
  40e1c9:	xor    al,0xec
  40e1cb:	scas   eax,DWORD PTR es:[edi]
  40e1cc:	and    edi,DWORD PTR [edi+0x561064c1]
  40e1d2:	lods   al,BYTE PTR ds:[esi]
  40e1d3:	popa   
  40e1d4:	or     bh,BYTE PTR [ecx+0x64b835e8]
  40e1da:	mov    edx,0x139116be
  40e1df:	loopne 0x40e168
  40e1e1:	rol    BYTE PTR [edx+0x77],0x8f
  40e1e5:	sub    al,ah
  40e1e7:	ins    DWORD PTR es:[edi],dx
  40e1e8:	xor    eax,0x2c053c3a
  40e1ed:	mov    bl,0x82
  40e1ef:	out    dx,eax
  40e1f0:	mov    esi,0x590dc3ff
  40e1f5:	add    ebx,edx
  40e1f7:	out    dx,al
  40e1f8:	or     esi,DWORD PTR [ecx]
  40e1fa:	and    BYTE PTR [eax+0x9],dl
  40e1fd:	cwde   
  40e1fe:	cmc    
  40e1ff:	jae    0x40e1f6
  40e201:	add    dh,BYTE PTR [ecx+0x1f5c6247]
  40e207:	and    bh,BYTE PTR [edx]
  40e209:	sbb    eax,0xb4d68d6c
  40e20e:	jae    0x40e21a
  40e210:	aam    0x6f
  40e212:	mov    dl,ah
  40e214:	cmp    al,0x43
  40e216:	lods   eax,DWORD PTR ds:[esi]
  40e217:	ins    DWORD PTR es:[edi],dx
  40e218:	int3   
  40e219:	add    al,0xfa
  40e21b:	nop
  40e21c:	adc    eax,0x8af88e3b
  40e221:	jmp    0x40e213
  40e223:	xchg   ecx,eax
  40e224:	push   es
  40e225:	push   ebp
  40e226:	lds    edi,FWORD PTR [eax-0x50eb363d]
  40e22c:	test   eax,0x3fc0c746
  40e231:	adc    DWORD PTR [edx-0x206dcb47],esp
  40e237:	fdiv   DWORD PTR [ecx]
  40e239:	data16 stos BYTE PTR es:[edi],al
  40e23b:	pusha  
  40e23c:	arpl   WORD PTR [ebp+edi*4-0x59316817],cx
  40e243:	mov    ds:0x11f357d8,al
  40e248:	ds int3 
  40e24a:	mov    WORD PTR [eax+0x7a9a27cd],gs
  40e250:	enter  0x9084,0x89
  40e254:	xchg   edi,eax
  40e255:	(bad)  
  40e256:	pop    ebx
  40e257:	jae    0x40e214
  40e259:	push   ds
  40e25a:	push   ecx
  40e25b:	popa   
  40e25c:	mov    edi,0x73f15e13
  40e261:	fisub  WORD PTR cs:[edx-0x42]
  40e265:	and    al,0xae
  40e267:	or     dh,BYTE PTR [esi]
  40e269:	or     al,0x6a
  40e26b:	mov    ecx,0x5aa7cb41
  40e270:	pop    es
  40e271:	inc    ecx
  40e272:	mov    al,ds:0x2718c3d9
  40e277:	fbld   TBYTE PTR [ecx+0x42377354]
  40e27d:	jnp    0x40e225
  40e27f:	aaa    
  40e280:	lock fist DWORD PTR [eax-0x7adb338c]
  40e287:	push   ebp
  40e288:	cli    
  40e289:	rcr    edi,0xfc
  40e28c:	push   0x8a5e3d22
  40e291:	ret    
  40e292:	call   0x823a5582
  40e297:	fcomp  DWORD PTR [edi+0x5e]
  40e29a:	inc    esp
  40e29b:	xchg   ecx,eax
  40e29c:	es loop 0x40e2c9
  40e29f:	adc    al,dh
  40e2a1:	in     eax,0xc1
  40e2a3:	push   0x75f610a7
  40e2a8:	mov    bh,0xcd
  40e2aa:	data16 sahf 
  40e2ac:	mov    eax,ds:0xa4f4e0df
  40e2b1:	add    BYTE PTR [eax-0x2a5c1078],dl
  40e2b7:	xchg   esp,eax
  40e2b8:	pop    esp
  40e2b9:	pop    edx
  40e2ba:	mov    dh,0x69
  40e2bc:	push   eax
  40e2bd:	div    DWORD PTR [eax]
  40e2bf:	fsub   DWORD PTR [ebp+0x56]
  40e2c2:	jbe    0x40e26b
  40e2c4:	cdq    
  40e2c5:	loope  0x40e328
  40e2c7:	lock or al,0x4e
  40e2ca:	add    eax,0xb3adb67b
  40e2cf:	in     al,0x5b
  40e2d1:	ss push edi
  40e2d3:	mov    al,0xdf
  40e2d5:	add    al,BYTE PTR [esi]
  40e2d7:	or     DWORD PTR [ecx-0x70584295],ebx
  40e2dd:	cdq    
  40e2de:	icebp  
  40e2df:	stc    
  40e2e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2e1:	repz neg DWORD PTR [ebp+0xce8a2fd]
  40e2e8:	xor    bh,dh
  40e2ea:	or     ebx,DWORD PTR [ebp+ebp*1+0x24]
  40e2ee:	mov    DWORD PTR [ecx-0xca84265],esp
  40e2f4:	es pop ebx
  40e2f6:	ror    DWORD PTR [eax+edx*1+0x631c055f],0x48
  40e2fe:	scas   al,BYTE PTR es:[edi]
  40e2ff:	fbld   TBYTE PTR [ebx+0xbc38d73]
  40e305:	ffree  st(3)
  40e307:	inc    esp
  40e308:	bound  edi,QWORD PTR [esi+0x29e11838]
  40e30e:	and    DWORD PTR [esi-0x7e4960e2],edi
  40e314:	repnz fstp QWORD PTR [eax+0x5e976b9c]
  40e31b:	jp     0x40e2e6
  40e31d:	or     BYTE PTR [ecx+0x46f8962a],bl
  40e323:	xchg   ecx,eax
  40e324:	stos   DWORD PTR es:[edi],eax
  40e325:	and    esp,DWORD PTR [ebx]
  40e327:	data16 sti 
  40e329:	ins    BYTE PTR es:[edi],dx
  40e32a:	aam    0x50
  40e32c:	push   ebx
  40e32d:	dec    edx
  40e32e:	jo     0x40e361
  40e330:	xchg   edx,eax
  40e331:	lahf   
  40e332:	pop    ebx
  40e333:	test   BYTE PTR [eax-0x55a00633],0x59
  40e33a:	push   edx
  40e33b:	mov    ?,WORD PTR [esi+0x5e4ff44a]
  40e341:	inc    ebp
  40e342:	xchg   BYTE PTR [edi],dl
  40e344:	es fcmovnbe st,st(3)
  40e347:	xchg   ebp,eax
  40e348:	je     0x40e2db
  40e34a:	push   eax
  40e34b:	mov    esi,0x1c8a22d2
  40e350:	maxps  xmm3,XMMWORD PTR [edi+0x10]
  40e354:	dec    edi
  40e355:	popa   
  40e356:	ss in  al,0xb9
  40e359:	mov    esi,0xdfd9632
  40e35e:	enter  0xb87d,0x25
  40e362:	mov    ecx,0xbf464d05
  40e367:	or     bh,BYTE PTR [eax+0x3f327f22]
  40e36d:	rcr    BYTE PTR [esi-0x6522b7fb],1
  40e373:	(bad)
  40e377:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e378:	retf   0xd56f
  40e37b:	frstor [edi+0x52]
  40e37e:	xor    ch,BYTE PTR [edi+0x5fdeac11]
  40e384:	jge    0x40e385
  40e386:	iret   
  40e387:	fsubrp st(6),st
  40e389:	mov    ch,0x4f
  40e38b:	daa    
  40e38c:	cli    
  40e38d:	iret   
  40e38e:	pusha  
  40e38f:	inc    edi
  40e390:	cmp    BYTE PTR [eax-0x49],bh
  40e393:	and    DWORD PTR [ebp-0x1eb3e6f4],0xd208fa0d
  40e39d:	mov    DWORD PTR [edi-0x26ce3bd1],eax
  40e3a3:	mov    ecx,0x6b26fb7
  40e3a8:	mov    edx,DWORD PTR [esi-0x51]
  40e3ab:	adc    bl,0xb4
  40e3ae:	mov    ecx,0x5668fe92
  40e3b3:	clc    
  40e3b4:	out    0x51,al
  40e3b6:	dec    esi
  40e3b7:	xchg   ebx,eax
  40e3b8:	mov    ebx,0x34e3b428
  40e3bd:	push   es
  40e3be:	push   esi
  40e3bf:	fist   WORD PTR [eax+esi*2+0x7a]
  40e3c3:	xchg   DWORD PTR ds:0xde36cb49,ebp
  40e3c9:	sbb    al,0x69
  40e3cb:	jns    0x40e382
  40e3cd:	fnstcw WORD PTR [ebx+eax*2-0x90f3d1a]
  40e3d4:	dec    ebp
  40e3d5:	fs dec ebp
  40e3d7:	mov    ah,0x54
  40e3d9:	dec    ebx
  40e3da:	fcomp  DWORD PTR [edi]
  40e3dc:	and    ebp,DWORD PTR [edx-0x61]
  40e3df:	int3   
  40e3e0:	sub    BYTE PTR [edi],dl
  40e3e2:	add    BYTE PTR [edx+0x1e],cl
  40e3e5:	pop    edi
  40e3e6:	retf   0x6533
  40e3e9:	faddp  st(6),st
  40e3eb:	sbb    eax,0x28a9fe52
  40e3f0:	mov    ds:0x5c83a45f,eax
  40e3f5:	icebp  
  40e3f6:	mov    eax,ds:0x310d2d30
  40e3fb:	xchg   edx,eax
  40e3fc:	dec    ecx
  40e3fd:	hlt    
  40e3fe:	jmp    0xbe55:0x79fc669d
  40e405:	mov    esi,0x2034d75b
  40e40a:	fwait
  40e40b:	or     edi,DWORD PTR [esi+0x4a48b31]
  40e411:	sbb    al,0xc1
  40e413:	xlat   BYTE PTR ds:[ebx]
  40e414:	cmp    eax,0xdc0acddb
  40e419:	arpl   WORD PTR [eax-0x58],bx
  40e41c:	(bad)  
  40e41d:	xchg   edx,eax
  40e41e:	aad    0x2b
  40e420:	outs   dx,BYTE PTR ds:[esi]
  40e421:	mov    eax,0x35d4599d
  40e426:	stos   BYTE PTR es:[edi],al
  40e427:	leave  
  40e428:	fsubr  DWORD PTR [edx]
  40e42a:	cmp    al,BYTE PTR [eax]
  40e42c:	fimul  WORD PTR [ebx]
  40e42e:	sub    ebx,DWORD PTR [esi-0x2bfd5359]
  40e434:	ds or  al,0xdd
  40e437:	mov    bl,0xde
  40e439:	cmp    al,0x24
  40e43b:	clc    
  40e43c:	call   0xcd365ca0
  40e441:	hlt    
  40e442:	in     eax,0x3b
  40e444:	inc    ecx
  40e445:	les    esi,FWORD PTR [edx+0x11]
  40e448:	sbb    ebx,ebx
  40e44a:	xchg   ebp,eax
  40e44b:	shl    DWORD PTR [esp+ebx*8],1
  40e44e:	fs jmp 0x1349d049
  40e454:	cmc    
  40e455:	outs   dx,DWORD PTR ds:[esi]
  40e456:	outs   dx,DWORD PTR ds:[esi]
  40e457:	xor    eax,0x9a005398
  40e45c:	xchg   ebp,eax
  40e45d:	sub    edi,DWORD PTR [ebp-0x510c0440]
  40e463:	cld    
  40e464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e465:	daa    
  40e466:	xchg   DWORD PTR [ecx+0x76],ebx
  40e469:	inc    esi
  40e46a:	xor    BYTE PTR [ebx+0x1e],cl
  40e46d:	sbb    al,0x60
  40e46f:	mov    eax,ds:0x7d1b928
  40e474:	ins    DWORD PTR es:[edi],dx
  40e475:	and    eax,0x2404e4c6
  40e47a:	pop    ebp
  40e47b:	or     al,0x47
  40e47d:	jno    0x40e4eb
  40e47f:	rcr    DWORD PTR [edi-0x1bf9c274],cl
  40e485:	xchg   esp,eax
  40e486:	ja     0x40e41b
  40e488:	(bad)  
  40e489:	ss cld 
  40e48b:	jg     0x40e4c5
  40e48d:	(bad)  
  40e48f:	push   ebp
  40e490:	xor    eax,0x8a72d013
  40e495:	lea    esi,[esi+0x76]
  40e498:	clc    
  40e499:	ins    DWORD PTR es:[edi],dx
  40e49a:	mov    ds:0xeaa1d834,al
  40e49f:	int3   
  40e4a0:	imul   esi,ecx,0x3b59d6e3
  40e4a6:	inc    ecx
  40e4a7:	add    bh,BYTE PTR [ebp-0x33]
  40e4aa:	adc    al,cl
  40e4ac:	cwde   
  40e4ad:	int    0x30
  40e4af:	std    
  40e4b0:	jno    0x40e440
  40e4b2:	dec    eax
  40e4b3:	out    0xc2,eax
  40e4b5:	push   0xffffffc7
  40e4b7:	cli    
  40e4b8:	jge    0x40e493
  40e4ba:	test   al,0x9d
  40e4bc:	mov    al,ds:0xd394daab
  40e4c1:	mov    ebp,0xc6e56590
  40e4c6:	xchg   esp,eax
  40e4c7:	mov    cl,0x9
  40e4c9:	lahf   
  40e4ca:	jbe    0x40e488
  40e4cc:	push   esi
  40e4cd:	sub    BYTE PTR [ecx-0x74],dh
  40e4d0:	dec    edx
  40e4d1:	out    dx,al
  40e4d2:	sub    al,0x7b
  40e4d4:	xchg   esi,eax
  40e4d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4d6:	dec    eax
  40e4d7:	dec    eax
  40e4d8:	in     al,0x60
  40e4da:	mov    ch,0x32
  40e4dc:	mov    ah,0x99
  40e4de:	lods   eax,DWORD PTR ds:[esi]
  40e4df:	xchg   edx,eax
  40e4e0:	in     al,0xef
  40e4e2:	aas    
  40e4e3:	mov    ecx,0xb9bc2379
  40e4e8:	push   ecx
  40e4e9:	xor    DWORD PTR [ebx],0x23
  40e4ec:	aaa    
  40e4ed:	mov    bl,0xe3
  40e4ef:	ins    DWORD PTR es:[edi],dx
  40e4f0:	in     eax,0xd
  40e4f2:	pop    esp
  40e4f3:	dec    edx
  40e4f4:	mov    bh,bh
  40e4f6:	cmp    eax,0x1f49cbad
  40e4fb:	ins    DWORD PTR es:[edi],dx
  40e4fc:	in     al,dx
  40e4fd:	push   es
  40e4fe:	(bad)  
  40e4ff:	out    dx,eax
  40e500:	call   0xf599d4c4
  40e505:	inc    ebp
  40e507:	jge    0x40e504
  40e509:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e50a:	out    dx,eax
  40e50b:	aaa    
  40e50c:	hlt    
  40e50d:	xchg   DWORD PTR [edx],esi
  40e50f:	stos   DWORD PTR es:[edi],eax
  40e510:	cmp    esp,DWORD PTR [ecx-0x2d]
  40e513:	fbstp  TBYTE PTR [esi+0x7ca3b0cd]
  40e519:	push   cs
  40e51a:	inc    esi
  40e51b:	xchg   edi,eax
  40e51c:	mov    ah,0x99
  40e51e:	leave  
  40e51f:	cld    
  40e520:	pop    ebp
  40e521:	cmc    
  40e522:	sub    DWORD PTR [esi],0x4c4c3aed
  40e528:	aas    
  40e529:	sub    BYTE PTR [eax+ecx*4+0x3e],0x37
  40e52e:	data16 (bad) 
  40e530:	gs sbb eax,0xa6c5ac18
  40e536:	or     DWORD PTR [esi-0x54fccf58],0x30
  40e53d:	sub    esi,DWORD PTR [edx+0x67]
  40e540:	loope  0x40e586
  40e542:	aaa    
  40e543:	stos   DWORD PTR es:[edi],eax
  40e544:	dec    ecx
  40e545:	int    0x7f
  40e547:	repz pusha 
  40e549:	sub    DWORD PTR [eax-0x19a5c2ec],eax
  40e54f:	pop    esi
  40e550:	lods   eax,DWORD PTR ds:[esi]
  40e551:	je     0x40e5aa
  40e553:	lahf   
  40e554:	mov    edi,0x9290af29
  40e559:	or     DWORD PTR [edi],0xedbcc7f2
  40e55f:	pop    es
  40e560:	mov    bh,0x96
  40e562:	and    eax,DWORD PTR [ecx]
  40e564:	push   0xffffff9e
  40e566:	lea    edx,[esi]
  40e568:	cwde   
  40e569:	jno    0x40e551
  40e56b:	ja     0x40e512
  40e56d:	mov    al,ds:0x3226e286
  40e572:	je     0x40e584
  40e574:	dec    ebx
  40e575:	push   ebx
  40e576:	hlt    
  40e577:	jbe    0x40e507
  40e579:	ss ja  0x40e57d
  40e57c:	cld    
  40e57d:	(bad)  
  40e57f:	cmp    eax,0x5d3df7dd
  40e584:	dec    esp
  40e585:	ins    DWORD PTR es:[edi],dx
  40e586:	cmp    esp,DWORD PTR [ebx+eiz*8+0x6e]
  40e58a:	retf   0x40a6
  40e58d:	add    ah,dl
  40e58f:	and    bh,BYTE PTR [ecx-0x3a]
  40e592:	xor    DWORD PTR [esi+0x45],esi
  40e595:	dec    edx
  40e596:	xchg   ecx,eax
  40e597:	into   
  40e598:	inc    eax
  40e599:	ins    DWORD PTR es:[edi],dx
  40e59a:	cmp    eax,DWORD PTR [esi]
  40e59c:	ja     0x40e591
  40e59e:	xor    DWORD PTR [bp-0xb42],ebp
  40e5a3:	imul   DWORD PTR [ebx]
  40e5a5:	sbb    eax,0x174aa618
  40e5aa:	repz sbb eax,0xd27d0333
  40e5b0:	(bad)  
  40e5b1:	gs out dx,al
  40e5b3:	(bad)  [edi+0x2547d3c5]
  40e5b9:	mov    ah,0x8b
  40e5bb:	fldcw  WORD PTR [edx-0x1e]
  40e5be:	push   ebx
  40e5bf:	jge    0x40e548
  40e5c1:	fstp   QWORD PTR [edi]
  40e5c3:	xchg   ebp,eax
  40e5c4:	push   ebp
  40e5c5:	pop    ebp
  40e5c6:	mov    edx,DWORD PTR [esi-0x58]
  40e5c9:	dec    edi
  40e5ca:	add    DWORD PTR [ebx+ebp*4+0x6dcda874],0xffffffb4
  40e5d2:	sbb    DWORD PTR [ebx],eax
  40e5d4:	mov    esp,0xcd43c172
  40e5d9:	fs xchg ebp,eax
  40e5db:	xor    DWORD PTR [edi-0x4e918144],0x76
  40e5e2:	jmp    0x4589:0xbecac589
  40e5e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5ea:	(bad)  
  40e5eb:	pop    edi
  40e5ec:	xor    BYTE PTR [eax+0x7],bh
  40e5ef:	and    BYTE PTR [ebx-0x7804af8a],bh
  40e5f5:	add    al,0x8a
  40e5f7:	xor    ebp,DWORD PTR [ebx+eax*4+0x3b]
  40e5fb:	shr    DWORD PTR [ebx],0x5f
  40e5fe:	inc    eax
  40e5ff:	jge    0x40e64e
  40e601:	push   ds
  40e602:	fsubr  QWORD PTR [ebp-0x31]
  40e605:	(bad)  
  40e606:	pusha  
  40e607:	push   eax
  40e608:	mov    al,0xd2
  40e60a:	jnp    0x40e5b7
  40e60c:	jae    0x40e61d
  40e60e:	mov    bl,0xf9
  40e610:	stos   DWORD PTR es:[edi],eax
  40e611:	mov    cl,0xef
  40e613:	int3   
  40e614:	push   edi
  40e615:	jo     0x40e648
  40e617:	pop    ss
  40e618:	add    eax,0x448b4200
  40e61d:	or     eax,0x50852357
  40e622:	les    ebp,FWORD PTR [ecx]
  40e624:	mov    eax,0xeeca538b
  40e629:	shl    BYTE PTR [ecx],1
  40e62b:	js     0x40e664
  40e62d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e62e:	inc    ebx
  40e62f:	mov    esp,0xf4d9a131
  40e634:	lods   eax,DWORD PTR ds:[esi]
  40e635:	push   ebp
  40e636:	jmp    0x4e6a5b88
  40e63b:	push   ecx
  40e63c:	inc    ebx
  40e63d:	mov    ecx,ebp
  40e63f:	je     0x40e661
  40e641:	mov    ds:0x4b5a298a,eax
  40e646:	sub    ebp,0x4a
  40e649:	cld    
  40e64a:	ins    DWORD PTR es:[edi],dx
  40e64b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e64c:	ror    BYTE PTR [ebx+0x1c63650f],1
  40e652:	arpl   WORD PTR [eax+0x56a5a3eb],bx
  40e658:	or     edi,DWORD PTR [ebp+0x6d14f0f]
  40e65e:	mul    bh
  40e660:	daa    
  40e661:	icebp  
  40e662:	pop    eax
  40e663:	sahf   
  40e664:	hlt    
  40e665:	(bad)  
  40e666:	and    esi,DWORD PTR [ecx+ebp*2-0x1bf3c6]
  40e66d:	mov    al,BYTE PTR [edi+0x6aefd5eb]
  40e673:	sbb    DWORD PTR [edx],eax
  40e675:	pop    esi
  40e676:	xchg   esp,eax
  40e677:	lds    ecx,FWORD PTR [esi-0x3a15c05a]
  40e67d:	xor    ecx,0x5263c069
  40e683:	aam    0x56
  40e685:	jmp    0xb338d999
  40e68a:	pop    ebx
  40e68b:	push   cs
  40e68c:	faddp  st(7),st
  40e68e:	mov    esi,DWORD PTR [ebx+0x40]
  40e691:	fdiv   QWORD PTR [esi+eiz*4]
  40e694:	dec    esp
  40e695:	test   al,0x5a
  40e697:	push   ebp
  40e698:	cmp    eax,0xed96c651
  40e69d:	pop    ebp
  40e69e:	add    edx,ebx
  40e6a0:	xor    bl,cl
  40e6a2:	pop    eax
  40e6a3:	xchg   edi,eax
  40e6a4:	mov    edi,0x1d5bc3ce
  40e6a9:	rcl    DWORD PTR [ecx-0x72],cl
  40e6ac:	cwde   
  40e6ad:	dec    eax
  40e6ae:	pop    eax
  40e6af:	mov    BYTE PTR [esi],dh
  40e6b1:	sub    edx,DWORD PTR [edi+0x5eb8aeda]
  40e6b7:	mov    dh,0xd8
  40e6b9:	adc    al,0x5b
  40e6bb:	inc    ebp
  40e6bc:	cmc    
  40e6bd:	sahf   
  40e6be:	push   0x546ba9df
  40e6c3:	dec    ebx
  40e6c4:	or     eax,0xbd04eef9
  40e6c9:	push   ss
  40e6ca:	repz and esi,DWORD PTR [edx]
  40e6cd:	add    DWORD PTR [edx],esi
  40e6cf:	retf   0xc7fc
  40e6d2:	pop    ss
  40e6d3:	push   0x9e81939d
  40e6d8:	adc    al,0x36
  40e6da:	push   0xffffff8a
  40e6dc:	cmp    DWORD PTR [ebx],edi
  40e6de:	mov    ch,0xd7
  40e6e0:	xor    eax,0x8974dfda
  40e6e5:	lahf   
  40e6e6:	and    esp,DWORD PTR [edx+eiz*2+0x12]
  40e6ea:	aad    0x41
  40e6ec:	in     eax,0x3
  40e6ee:	mov    eax,0xb80e422c
  40e6f3:	xchg   DWORD PTR [ecx-0x4a798878],esp
  40e6f9:	leave  
  40e6fa:	hlt    
  40e6fb:	pop    ds
  40e6fc:	cld    
  40e6fd:	int    0x71
  40e6ff:	mov    BYTE PTR [ebp+0x7e],bl
  40e702:	jnp    0x40e6e6
  40e704:	xchg   esi,eax
  40e705:	stc    
  40e706:	dec    eax
  40e707:	(bad)  
  40e708:	mov    ch,0x5b
  40e70a:	popa   
  40e70b:	xchg   ch,dl
  40e70d:	arpl   WORD PTR fs:[esi],bx
  40e710:	das    
  40e711:	jne    0x40e753
  40e713:	addr16 dec eax
  40e715:	sub    eax,0x5532bff1
  40e71a:	inc    esi
  40e71b:	adc    DWORD PTR [ebx-0x377aaedd],0x45ec028e
  40e725:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e726:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e727:	(bad)  
  40e728:	mov    dl,0x45
  40e72a:	add    ebx,DWORD PTR ds:0x7d580bb3
  40e730:	add    eax,0xd9fed7bb
  40e735:	push   edi
  40e736:	xor    esp,eax
  40e738:	shr    BYTE PTR [esi],0xec
  40e73b:	(bad)  [eax-0xd]
  40e73e:	or     DWORD PTR [ebx-0x3e],edx
  40e741:	jb     0x40e713
  40e743:	push   cs
  40e744:	pop    edi
  40e745:	push   ds
  40e746:	out    dx,eax
  40e747:	sub    DWORD PTR [ebx-0xc6ce349],eax
  40e74d:	pop    esp
  40e74e:	cmp    edi,DWORD PTR [eax+edx*8]
  40e751:	inc    ecx
  40e752:	and    DWORD PTR [ebp+0x5e6910c8],ebp
  40e758:	add    eax,0x61214b46
  40e75d:	test   BYTE PTR [ecx+0x9],dh
  40e760:	lock pop ds
  40e762:	mov    DWORD PTR [edi+0x6e],ebx
  40e765:	sbb    ah,bh
  40e767:	dec    edi
  40e768:	inc    esp
  40e769:	aas    
  40e76a:	cdq    
  40e76b:	mov    esp,0x90ed1a7e
  40e770:	out    dx,al
  40e771:	ins    DWORD PTR es:[edi],dx
  40e772:	xchg   edx,eax
  40e773:	pop    eax
  40e774:	mov    fs,WORD PTR [ebx]
  40e776:	outs   dx,BYTE PTR ss:[esi]
  40e778:	xchg   BYTE PTR [eax],cl
  40e77a:	mov    dl,0xb8
  40e77c:	mov    BYTE PTR ss:[edi-0x2d],bl
  40e780:	jecxz  0x40e7dc
  40e782:	xchg   edi,eax
  40e783:	ja     0x40e7bd
  40e785:	cmc    
  40e786:	sti    
  40e787:	fwait
  40e788:	xchg   ebx,eax
  40e789:	xchg   edi,eax
  40e78a:	push   ecx
  40e78b:	jae    0x40e7d5
  40e78d:	test   al,0xc5
  40e78f:	js     0x40e787
  40e791:	jb     0x40e71f
  40e793:	xor    al,al
  40e795:	sub    BYTE PTR [edi+eiz*2+0x1a],bh
  40e799:	pop    esp
  40e79a:	pop    ebx
  40e79b:	push   ss
  40e79c:	dec    edx
  40e79d:	sbb    ecx,DWORD PTR [eax]
  40e79f:	ja     0x40e743
  40e7a1:	mov    cl,cl
  40e7a3:	and    ebp,DWORD PTR [esi+ebx*1-0x57de6104]
  40e7aa:	lods   al,BYTE PTR ds:[esi]
  40e7ab:	mov    bh,BYTE PTR [eax]
  40e7ad:	loopne 0x40e75b
  40e7af:	cmp    DWORD PTR [esi+0x61],ebx
  40e7b2:	ret    0x2fd6
  40e7b5:	jge    0x40e7d2
  40e7b7:	inc    esp
  40e7b8:	push   0x6e33e218
  40e7bd:	or     DWORD PTR [edi-0x6ed8db21],eax
  40e7c3:	inc    edi
  40e7c4:	mov    dh,0x86
  40e7c6:	inc    ebx
  40e7c7:	push   0xd69928b2
  40e7cc:	fidiv  WORD PTR [ecx-0x5d]
  40e7cf:	sbb    BYTE PTR [ecx-0x74],dl
  40e7d2:	fnstsw ax
  40e7d4:	enter  0x8ce3,0xc6
  40e7d8:	ss call 0x70aa:0x9b2456d8
  40e7e0:	ds mov cx,0xfbb3
  40e7e5:	jne    0x40e822
  40e7e7:	arpl   WORD PTR [ebx-0x39],bp
  40e7ea:	dec    ebx
  40e7eb:	pop    ds
  40e7ec:	test   dl,cl
  40e7ee:	sub    al,BYTE PTR [esi+0x7f5281ba]
  40e7f4:	xchg   esi,eax
  40e7f5:	pop    ss
  40e7f6:	push   eax
  40e7f7:	hlt    
  40e7f8:	mov    dh,cl
  40e7fa:	or     eax,DWORD PTR ds:0x4b09c30a
  40e800:	sub    DWORD PTR [ebx+0x4362b602],0x16581047
  40e80a:	sar    edi,0x87
  40e80d:	mov    edi,0x3b6144b
  40e812:	inc    edx
  40e813:	loop   0x40e815
  40e815:	cmc    
  40e816:	push   edx
  40e817:	int3   
  40e818:	inc    esp
  40e819:	dec    esi
  40e81a:	add    al,0x42
  40e81c:	and    BYTE PTR [eax-0x7b],cl
  40e81f:	xchg   ebp,eax
  40e820:	(bad)  
  40e821:	sbb    ch,dl
  40e823:	fldcw  WORD PTR [esi-0x6a]
  40e826:	cld    
  40e827:	pop    edx
  40e828:	mov    edi,0x7d914ebd
  40e82d:	dec    esi
  40e82e:	popf   
  40e82f:	mov    eax,ds:0x4865a3d4
  40e834:	mov    ebp,ebx
  40e836:	mov    al,0x16
  40e838:	pop    ebp
  40e839:	push   ebp
  40e83a:	sub    al,0xa3
  40e83c:	je     0x40e80e
  40e83e:	out    dx,al
  40e83f:	add    al,0x1a
  40e841:	icebp  
  40e842:	mov    ds:0x5d6aac67,al
  40e847:	push   esi
  40e848:	jl     0x40e874
  40e84a:	repz cli 
  40e84c:	loopne 0x40e8a3
  40e84e:	inc    esp
  40e84f:	gs (bad) 
  40e851:	jle    0x40e862
  40e853:	jg     0x40e7d8
  40e855:	int3   
  40e856:	jecxz  0x40e886
  40e858:	loop   0x40e8bd
  40e85a:	add    DWORD PTR ss:[edi+0x23],ebx
  40e85e:	sub    ecx,DWORD PTR [ecx+ebp*4-0x6e2b05bf]
  40e865:	imul   ebx,DWORD PTR [esi-0x4a0d058f],0xffffff9e
  40e86c:	adc    DWORD PTR ds:0xba08ba76,eax
  40e872:	mov    WORD PTR [ecx+0x2c47b1f],es
  40e878:	sbb    al,BYTE PTR [eax-0x53]
  40e87b:	pop    ecx
  40e87c:	fdiv   st(6),st
  40e87e:	loop   0x40e8b4
  40e880:	hlt    
  40e881:	pop    es
  40e882:	mov    ecx,0x439dd89e
  40e887:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e888:	inc    ebx
  40e889:	mov    eax,0xc9d87b83
  40e88e:	xor    eax,0xd2b553a1
  40e893:	and    edx,ebx
  40e895:	pop    edi
  40e896:	push   esp
  40e897:	scas   al,BYTE PTR es:[edi]
  40e898:	cmp    edi,DWORD PTR [edx+0x3c5fee83]
  40e89e:	je     0x40e8fc
  40e8a0:	adc    al,0x40
  40e8a2:	sti    
  40e8a3:	push   ebp
  40e8a4:	and    al,0xb6
  40e8a6:	int3   
  40e8a7:	dec    eax
  40e8a8:	mov    ds:0xf971f6d2,al
  40e8ad:	jle    0x40e898
  40e8af:	inc    edi
  40e8b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8b1:	fcmovnbe st,st(5)
  40e8b3:	and    cl,0x3e
  40e8b6:	add    al,0x3b
  40e8b8:	mov    cl,0x74
  40e8ba:	or     al,0x4e
  40e8bc:	mov    bh,0x40
  40e8be:	frstor [edi-0x6cf31400]
  40e8c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8c5:	dec    ebx
  40e8c6:	pop    esp
  40e8c7:	sub    DWORD PTR [eax+0x38],ecx
  40e8ca:	ins    DWORD PTR es:[edi],dx
  40e8cb:	and    ch,BYTE PTR [ebp+0x6c776b45]
  40e8d1:	dec    edi
  40e8d2:	js     0x40e8e6
  40e8d4:	dec    edi
  40e8d5:	inc    ecx
  40e8d6:	adc    esi,DWORD PTR [ebx+0x3b]
  40e8d9:	ss and al,0x5b
  40e8dc:	cmp    al,0x44
  40e8de:	push   ebx
  40e8df:	(bad)  
  40e8e0:	int    0xc3
  40e8e2:	fldenv [eax+eax*8+0x32]
  40e8e6:	xchg   DWORD PTR [ecx+edi*1],eax
  40e8e9:	bound  ebp,QWORD PTR [ecx]
  40e8eb:	push   ebx
  40e8ec:	(bad)  [eax]
  40e8ee:	sar    BYTE PTR [esi-0x8092dfd],0x76
  40e8f5:	push   0xf4631fe8
  40e8fa:	int3   
  40e8fb:	rol    DWORD PTR [eax-0x3ace1099],0x57
  40e902:	aas    
  40e903:	call   0x8d12:0x8af930b6
  40e90a:	adc    al,0xfb
  40e90c:	lahf   
  40e90d:	lahf   
  40e90e:	aas    
  40e90f:	fmul   QWORD PTR [edi-0x6131e592]
  40e915:	imul   edi,esp,0x42
  40e918:	mov    al,0xb3
  40e91a:	imul   ecx,ecx,0xffffffd8
  40e91d:	mov    BYTE PTR [edi+ecx*1-0x26cb91e],dl
  40e924:	arpl   WORD PTR [eax+ebx*1],sp
  40e927:	sbb    dl,BYTE PTR [esi-0x3ac0aef1]
  40e92d:	ds je  0x40e968
  40e930:	shr    edi,0x3a
  40e933:	jae    0x40e929
  40e935:	dec    ecx
  40e936:	cmp    DWORD PTR [edi+0x3a3dacd2],ebx
  40e93c:	jmp    0x40e965
  40e93e:	mov    esi,0xfad07f10
  40e943:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e944:	(bad)  
  40e945:	test   eax,0xec596696
  40e94a:	call   0x7f4427ab
  40e94f:	and    bl,BYTE PTR [ebx+edi*2]
  40e952:	fisub  DWORD PTR [edi-0x7f4d44c5]
  40e958:	imul   DWORD PTR [ecx-0x552a098b]
  40e95e:	dec    ebp
  40e95f:	jp     0x40e911
  40e961:	arpl   di,ax
  40e963:	ret    0x3e3a
  40e966:	push   eax
  40e967:	push   ss
  40e968:	mov    eax,0xe07a6a2a
  40e96d:	pushf  
  40e96e:	sub    BYTE PTR [ebx+0x72],0x74
  40e972:	out    0xde,eax
  40e974:	arpl   WORD PTR [edx],ax
  40e976:	jno    0x40e94e
  40e978:	fwait
  40e979:	dec    ebp
  40e97a:	mov    esp,0xbe0e60b4
  40e97f:	clc    
  40e980:	xchg   esi,eax
  40e981:	out    0x4c,al
  40e983:	sbb    ch,BYTE PTR [ecx]
  40e985:	dec    ebx
  40e986:	jp     0x40e948
  40e988:	ret    0x997e
  40e98b:	jg     0x40e936
  40e98d:	dec    DWORD PTR [edx]
  40e98f:	clc    
  40e990:	cmp    edi,DWORD PTR [esi-0x3d]
  40e993:	popa   
  40e994:	outs   dx,DWORD PTR ds:[esi]
  40e995:	mov    ch,0x1d
  40e997:	int3   
  40e998:	cli    
  40e999:	pop    ebp
  40e99a:	inc    edi
  40e99b:	mov    ch,0x73
  40e99d:	ret    0xda37
  40e9a0:	pushf  
  40e9a1:	addr16 das 
  40e9a3:	stos   BYTE PTR es:[edi],al
  40e9a4:	xchg   esi,eax
  40e9a5:	sti    
  40e9a6:	mov    bh,0xb2
  40e9a8:	mov    ecx,0x4e4c9a10
  40e9ad:	dec    ecx
  40e9ae:	jo     0x40e99f
  40e9b0:	mov    eax,ds:0x59442c90
  40e9b5:	test   al,dl
  40e9b7:	inc    DWORD PTR ds:0x52c2540f
  40e9bd:	jmp    DWORD PTR [eax]
  40e9bf:	adc    bh,al
  40e9c1:	push   ss
  40e9c2:	test   BYTE PTR [ebx+ebp*2+0x7],al
  40e9c6:	inc    esi
  40e9c7:	or     al,0x4d
  40e9c9:	test   DWORD PTR [ebx-0x30bdb39a],0x4b87fe98
  40e9d3:	push   0xfffffffb
  40e9d5:	imul   esp
  40e9d7:	pop    ebx
  40e9d8:	adc    edi,DWORD PTR [ecx+0x54a9f046]
  40e9de:	mov    edx,0xea033c94
  40e9e3:	mov    ch,0xde
  40e9e5:	test   BYTE PTR [ebx],cl
  40e9e7:	not    BYTE PTR [edi-0x67]
  40e9ea:	loope  0x40e9e7
  40e9ec:	lea    edx,[ebp+0x45cb7a]
  40e9f2:	jmp    0xfff7b524
  40e9f7:	and    esp,DWORD PTR [eax+0x16]
  40e9fa:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9fc:	aas    
  40e9fd:	adc    cl,BYTE PTR ds:0xff36bd50
  40ea03:	mov    dl,0x8
  40ea05:	jns    0x40ea20
  40ea07:	and    BYTE PTR [ebx-0x73],0xa2
  40ea0b:	(bad)  
  40ea0c:	pop    edi
  40ea0d:	or     ah,BYTE PTR [ebp-0x26]
  40ea10:	or     ah,bh
  40ea12:	(bad)  
  40ea13:	repz cwde 
  40ea15:	push   edi
  40ea16:	mov    bh,0x62
  40ea18:	xchg   edi,eax
  40ea19:	in     eax,0xa
  40ea1b:	inc    ecx
  40ea1c:	fxch   st(2)
  40ea1e:	xor    dl,BYTE PTR [ebx-0x396cb393]
  40ea24:	call   0x1a1e77d2
  40ea29:	js     0x40ea92
  40ea2b:	aaa    
  40ea2c:	and    al,0xe4
  40ea2e:	mov    dl,0x72
  40ea30:	or     ecx,DWORD PTR [edx+esi*2]
  40ea33:	mov    BYTE PTR [eax-0xe8cddda],bh
  40ea39:	add    al,0xfd
  40ea3b:	shr    DWORD PTR [edx+0x70],0x5
  40ea3f:	lock rol DWORD PTR [esi+0xf],cl
  40ea43:	push   ecx
  40ea44:	inc    edx
  40ea45:	jp     0x40ea18
  40ea47:	(bad)  
  40ea48:	clc    
  40ea49:	inc    eax
  40ea4a:	inc    eax
  40ea4b:	push   0xffffffd9
  40ea4d:	hlt    
  40ea4e:	in     eax,dx
  40ea4f:	jmp    FWORD PTR [ebp+0x5b470cfb]
  40ea55:	jg     0x40ea16
  40ea57:	inc    eax
  40ea58:	test   al,0xd2
  40ea5a:	cmp    al,0x71
  40ea5c:	adc    ebp,edx
  40ea5e:	sub    BYTE PTR [ecx-0x10],al
  40ea61:	inc    edi
  40ea62:	pop    esp
  40ea63:	fnsave [edi]
  40ea65:	ja     0x40ea2d
  40ea67:	clc    
  40ea68:	dec    eax
  40ea69:	sub    eax,0xa8a9d780
  40ea6e:	lods   al,BYTE PTR ds:[esi]
  40ea6f:	xchg   esi,eax
  40ea70:	inc    eax
  40ea71:	pop    ecx
  40ea72:	cmp    al,0x71
  40ea74:	mov    ah,0x44
  40ea76:	ret    
  40ea77:	outs   dx,DWORD PTR ds:[esi]
  40ea78:	pusha  
  40ea79:	adc    BYTE PTR [edx],dl
  40ea7b:	std    
  40ea7c:	sahf   
  40ea7d:	inc    ecx
  40ea7e:	pushf  
  40ea7f:	mov    ebx,0x43e2ffd2
  40ea84:	inc    ecx
  40ea85:	in     al,dx
  40ea86:	iret   
  40ea87:	call   0x1ce0761c
  40ea8c:	sbb    eax,DWORD PTR [ecx+0x13]
  40ea8f:	xor    al,0xc1
  40ea91:	xor    eax,0x3420f04d
  40ea96:	cli    
  40ea97:	jmp    0x40eac0
  40ea99:	into   
  40ea9a:	push   ebx
  40ea9b:	repnz adc eax,0xa1c62532
  40eaa1:	inc    edi
  40eaa2:	psadbw mm2,QWORD PTR [edx+0x65f34cce]
  40eaa9:	out    dx,eax
  40eaaa:	dec    ebx
  40eaab:	mov    eax,ds:0x17cae870
  40eab0:	and    BYTE PTR [edx+edx*1],cl
  40eab3:	jle    0x40eb25
  40eab5:	outs   dx,DWORD PTR es:[esi]
  40eab7:	imul   BYTE PTR [edx+eiz*2+0x6a92ddf7]
  40eabe:	sub    al,0xa5
  40eac0:	jmp    0x40ead8
  40eac2:	pushf  
  40eac3:	cmp    DWORD PTR [edx+0x703ca1cf],ebx
  40eac9:	adc    ch,0x9a
  40eacc:	sub    al,0x13
  40eace:	and    ah,ch
  40ead0:	pop    eax
  40ead1:	daa    
  40ead2:	mov    ah,0x3f
  40ead4:	mov    esi,0x8369852a
  40ead9:	cdq    
  40eada:	or     al,ch
  40eadc:	jg     0x40ea7a
  40eade:	stc    
  40eadf:	jp     0x40ead6
  40eae1:	mov    ds:0xab798e9f,al
  40eae6:	sub    eax,0x7d3fb4a5
  40eaeb:	imul   ebx,eax,0x1d96fea6
  40eaf1:	rcr    DWORD PTR [edx],0x7d
  40eaf4:	test   BYTE PTR [esp+ebp*4-0x193b1590],dl
  40eafb:	call   DWORD PTR [eax+0x57f675e1]
  40eb01:	jle    0x40ea9f
  40eb03:	adc    eax,0x60bcdace
  40eb08:	call   0x4b12953
  40eb0d:	add    BYTE PTR [edi-0x15],al
  40eb10:	add    BYTE PTR [bp+si],cl
  40eb13:	int    0x1
  40eb15:	scas   al,BYTE PTR es:[edi]
  40eb16:	lds    ebp,FWORD PTR [edx-0x3ea73df6]
  40eb1c:	mov    dl,0xe2
  40eb1e:	dec    ebx
  40eb1f:	and    ebp,edx
  40eb21:	ret    
  40eb22:	clc    
  40eb23:	jp     0x40eae0
  40eb25:	push   ebp
  40eb26:	ds mov ah,dh
  40eb29:	mov    gs:0x9d25c25e,al
  40eb2f:	sbb    eax,0x5f430773
  40eb34:	xor    al,0x31
  40eb36:	ins    BYTE PTR es:[edi],dx
  40eb37:	jle    0x40eb37
  40eb39:	mov    ah,0xe
  40eb3b:	xlat   BYTE PTR ds:[ebx]
  40eb3c:	mov    esp,0x65305fbf
  40eb41:	inc    ebx
  40eb42:	jle    0x40eb2e
  40eb44:	mov    WORD PTR [ecx-0x45aa8727],ss
  40eb4a:	jp     0x40eb51
  40eb4c:	outs   dx,DWORD PTR ds:[esi]
  40eb4d:	stc    
  40eb4e:	ja     0x40eb46
  40eb50:	mov    eax,0xcab05878
  40eb55:	mov    ecx,0x14fbed98
  40eb5a:	sbb    DWORD PTR [ecx],ebp
  40eb5c:	cwde   
  40eb5d:	retf   
  40eb5e:	int3   
  40eb5f:	stos   BYTE PTR es:[edi],al
  40eb60:	lods   eax,DWORD PTR ds:[esi]
  40eb61:	mov    esi,0x27102c31
  40eb66:	arpl   bp,si
  40eb68:	push   eax
  40eb69:	sub    eax,0xd2b36222
  40eb6e:	test   eax,0x9efa9b59
  40eb73:	fs push 0x9865e56b
  40eb79:	xlat   BYTE PTR ds:[ebx]
  40eb7a:	add    esi,DWORD PTR [ecx-0x56078844]
  40eb80:	fimul  DWORD PTR [ebp-0x66]
  40eb83:	fiadd  DWORD PTR [ebx]
  40eb85:	je     0x40ebe5
  40eb87:	rol    BYTE PTR [ebx-0x3941d490],1
  40eb8d:	jp     0x40eb43
  40eb8f:	cmp    ah,BYTE PTR [eax]
  40eb91:	adc    al,0xc8
  40eb93:	sahf   
  40eb94:	and    DWORD PTR es:[edi],ecx
  40eb97:	cmp    al,0x8a
  40eb99:	fwait
  40eb9a:	sti    
  40eb9b:	dec    ebp
  40eb9c:	bound  ecx,QWORD PTR [edi+0x3a]
  40eb9f:	arpl   WORD PTR [ecx],si
  40eba1:	mov    dh,BYTE PTR [esi]
  40eba3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eba4:	push   cs
  40eba5:	sbb    edx,edi
  40eba7:	mov    al,ds:0xaa2417a0
  40ebac:	jmp    0x24a6:0x5a0fc141
  40ebb3:	or     bh,BYTE PTR [esi+0x12763e64]
  40ebb9:	(bad)  
  40ebba:	icebp  
  40ebbb:	sbb    eax,0x45c905ba
  40ebc0:	mov    edx,0x45ff0864
  40ebc5:	sar    BYTE PTR [edi-0x4d0c524c],1
  40ebcb:	dec    esp
  40ebcc:	inc    edx
  40ebcd:	arpl   cx,cx
  40ebcf:	lods   eax,DWORD PTR ds:[esi]
  40ebd0:	mov    ebx,DWORD PTR ds:0xc64b38d5
  40ebd6:	jns    0x40ec21
  40ebd8:	adc    ebp,eax
  40ebda:	xor    edx,DWORD PTR [edx]
  40ebdc:	mov    esi,0x4c986fd8
  40ebe1:	iret   
  40ebe2:	xchg   ah,ah
  40ebe4:	int    0xad
  40ebe6:	mov    bh,0x2
  40ebe8:	ins    DWORD PTR es:[edi],dx
  40ebe9:	dec    esi
  40ebea:	jp     0x40ec3d
  40ebec:	(bad)  
  40ebed:	or     ah,bl
  40ebef:	sbb    BYTE PTR [edx-0x60],al
  40ebf2:	dec    esi
  40ebf3:	dec    edi
  40ebf4:	(bad)  
  40ebf5:	in     al,0x2e
  40ebf7:	add    bl,BYTE PTR [edx]
  40ebf9:	in     al,0xbc
  40ebfb:	pushf  
  40ebfc:	in     al,dx
  40ebfd:	ret    
  40ebfe:	icebp  
  40ebff:	sbb    BYTE PTR [ebp-0x2481e0da],ch
  40ec05:	sbb    esp,DWORD PTR [eax+edi*4+0x1ad5300f]
  40ec0c:	fdivp  st(2),st
  40ec0e:	adc    esp,eax
  40ec10:	and    al,0x28
  40ec12:	xchg   edi,eax
  40ec13:	add    eax,0xeb76aa3c
  40ec18:	inc    eax
  40ec19:	inc    eax
  40ec1a:	mov    ebp,DWORD PTR ds:[edx+0x2]
  40ec1e:	in     eax,dx
  40ec1f:	add    BYTE PTR [ebp+esi*8+0xb68cec7],bh
  40ec26:	std    
  40ec27:	cld    
  40ec28:	mov    ebx,0x555abf27
  40ec2d:	and    eax,0xf49aca19
  40ec32:	cs dec ebp
  40ec34:	pop    esp
  40ec35:	leave  
  40ec36:	test   eax,0x311af64c
  40ec3b:	jns    0x40ec3b
  40ec3d:	jo     0x40ebee
  40ec3f:	pusha  
  40ec40:	mov    ecx,0x7ea39b9e
  40ec45:	mov    ds:0xeefe1109,al
  40ec4a:	jne    0x40ebe2
  40ec4c:	cmp    BYTE PTR [eax-0x43],bl
  40ec4f:	sub    eax,0x4a4dbc81
  40ec54:	leave  
  40ec55:	fbstp  TBYTE PTR [esi-0x52]
  40ec58:	pop    ebx
  40ec59:	sbb    cl,bl
  40ec5b:	out    dx,al
  40ec5c:	icebp  
  40ec5d:	and    eax,0xc696e416
  40ec62:	fs sti 
  40ec64:	jns    0x40ece0
  40ec66:	xchg   ecx,esi
  40ec68:	sbb    BYTE PTR [esi+ebp*1+0x28d6646f],al
  40ec6f:	xchg   edi,esp
  40ec71:	sub    ebp,0x80f0ba09
  40ec77:	(bad)  
  40ec78:	out    0x10,eax
  40ec7a:	in     al,dx
  40ec7b:	rcr    DWORD PTR [ebx+0x7f],cl
  40ec7e:	sar    dh,cl
  40ec80:	push   es
  40ec81:	push   cs
  40ec82:	ficomp WORD PTR [esi+0x6d]
  40ec85:	clc    
  40ec86:	sbb    BYTE PTR [ebx-0xf],ah
  40ec89:	ret    0xa6f6
  40ec8c:	ja     0x40ec94
  40ec8e:	mov    eax,0x8c737020
  40ec93:	add    ebx,DWORD PTR [ebx]
  40ec95:	mov    BYTE PTR [esi],0x1f
  40ec98:	out    dx,al
  40ec99:	or     cl,BYTE PTR [ecx+0x648a2cea]
  40ec9f:	icebp  
  40eca0:	dec    esi
  40eca1:	stc    
  40eca2:	jmp    0xce2a:0x24c23f7a
  40eca9:	out    dx,eax
  40ecaa:	inc    eax
  40ecab:	(bad)  
  40ecac:	sbb    BYTE PTR [esi-0x3f],al
  40ecaf:	or     esp,ecx
  40ecb1:	ret    0x181c
  40ecb4:	pop    ss
  40ecb5:	mov    ah,0x4c
  40ecb7:	mov    bh,0x2c
  40ecb9:	cmp    DWORD PTR [esi-0x26f31f61],edx
  40ecbf:	sahf   
  40ecc0:	pop    eax
  40ecc1:	sub    DWORD PTR [edx+0x37],esi
  40ecc4:	stos   DWORD PTR es:[edi],eax
  40ecc5:	inc    eax
  40ecc6:	xor    ecx,DWORD PTR [edx+0x3347e4ef]
  40eccc:	sahf   
  40eccd:	and    DWORD PTR [ecx],0x42f39fb5
  40ecd3:	(bad)  
  40ecd4:	xchg   edi,eax
  40ecd5:	retf   
  40ecd6:	inc    edx
  40ecd7:	inc    ecx
  40ecd8:	arpl   WORD PTR [ebp-0x2bfedb0a],cx
  40ecde:	popa   
  40ecdf:	inc    esp
  40ece0:	dec    edx
  40ece1:	loop   0x40ed15
  40ece3:	shl    bh,cl
  40ece5:	mov    ds:0x76aee792,al
  40ecea:	sub    BYTE PTR [esp+ecx*8+0x5343bfaf],0x54
  40ecf2:	scas   al,BYTE PTR es:[edi]
  40ecf3:	sub    BYTE PTR [edi+0x40],bl
  40ecf6:	inc    ebx
  40ecf7:	fwait
  40ecf8:	xchg   ecx,eax
  40ecf9:	dec    ebx
  40ecfa:	fsub   DWORD PTR ds:0x8ea8c780
  40ed00:	fnstcw WORD PTR [edx]
  40ed02:	ss pop ds
  40ed04:	jle    0x40ed3b
  40ed06:	mov    bh,0xda
  40ed08:	push   0x7
  40ed0a:	mov    eax,0x6a99185c
  40ed0f:	add    DWORD PTR ds:0xf347e1ae,esp
  40ed15:	mov    dh,BYTE PTR [ebx*8+0xa1f4b78]
  40ed1c:	mov    al,0xda
  40ed1e:	adc    eax,0xc2e69ed8
  40ed23:	shl    esp,cl
  40ed25:	stos   BYTE PTR es:[edi],al
  40ed26:	and    esp,DWORD PTR [edx-0x32]
  40ed29:	sub    DWORD PTR [ebp-0x5a37bf0f],ebx
  40ed2f:	ret    
  40ed30:	jmp    0xa6cd:0x95b30bcd
  40ed37:	mov    ds:0xefed16f6,eax
  40ed3c:	clc    
  40ed3d:	div    ch
  40ed3f:	out    0xd1,al
  40ed41:	push   edx
  40ed42:	add    ecx,edi
  40ed44:	mov    ds:0x46c20542,al
  40ed49:	repnz adc ecx,DWORD PTR [eax-0x6c5f0488]
  40ed50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed51:	aam    0xd6
  40ed53:	mov    DWORD PTR [ebp-0x51],esi
  40ed56:	sub    DWORD PTR [eax],esi
  40ed58:	mov    eax,ds:0x7ceaf57a
  40ed5d:	mov    bh,0x29
  40ed5f:	fsubr  st(5),st
  40ed61:	xchg   edi,eax
  40ed62:	mov    esp,0x7ae62805
  40ed67:	inc    ecx
  40ed68:	pop    ss
  40ed69:	jnp    0x40edba
  40ed6b:	mov    ecx,DWORD PTR [ebx+0x37]
  40ed6e:	jbe    0x40edac
  40ed70:	stc    
  40ed71:	fs mov cl,0x4c
  40ed74:	js     0x40edbe
  40ed76:	sbb    eax,0x7f964a98
  40ed7b:	jmp    0x31d831f7
  40ed80:	shr    DWORD PTR [esi-0x56],1
  40ed83:	shr    BYTE PTR [ebp-0x1eda3e39],0x6e
  40ed8a:	leave  
  40ed8b:	adc    BYTE PTR [ecx-0x672c348a],cl
  40ed91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed92:	mov    bl,0x51
  40ed94:	add    eax,0xb90bac46
  40ed99:	jmp    0x40eda0
  40ed9b:	mov    ds:0xf8195678,eax
  40eda0:	add    eax,0x4f4fefa8
  40eda5:	push   DWORD PTR [eax-0x62]
  40eda8:	xor    eax,0xef3f9fb2
  40edad:	pop    ecx
  40edae:	das    
  40edaf:	not    DWORD PTR [ecx-0x28]
  40edb2:	and    DWORD PTR [ebp-0x31],esp
  40edb5:	jle    0x40edfe
  40edb7:	les    edx,FWORD PTR [edx]
  40edb9:	out    dx,eax
  40edba:	lahf   
  40edbb:	inc    ebp
  40edbc:	test   eax,0xfc16ae96
  40edc1:	and    eax,0x97d4ae4f
  40edc6:	inc    edi
  40edc7:	lods   al,BYTE PTR ds:[esi]
  40edc8:	add    al,0xb
  40edca:	(bad)  
  40edcb:	sub    eax,0x8161e7d7
  40edd0:	jbe    0x40ed76
  40edd2:	test   ch,cl
  40edd4:	cmp    eax,DWORD PTR [ebx-0x38]
  40edd7:	loopne 0x40ee4b
  40edd9:	stc    
  40edda:	lahf   
  40eddb:	stc    
  40eddc:	xchg   ebp,eax
  40eddd:	clc    
  40edde:	lahf   
  40eddf:	fs loope 0x40ee05
  40ede2:	mov    al,ds:0xcaae9b3d
  40ede7:	sub    al,0xb0
  40ede9:	fsubr  st(0),st
  40edeb:	xchg   ebp,eax
  40edec:	scas   eax,DWORD PTR es:[edi]
  40eded:	or     ah,dh
  40edef:	xor    DWORD PTR [eax-0x38e9df98],esi
  40edf5:	pushf  
  40edf6:	dec    eax
  40edf7:	(bad)  
  40edf8:	pop    edi
  40edf9:	push   ecx
  40edfa:	pop    edi
  40edfb:	dec    ebp
  40edfc:	mov    edi,0x484c3722
  40ee01:	push   0xffffffa2
  40ee03:	das    
  40ee04:	cmp    esp,ebp
  40ee06:	lods   eax,DWORD PTR ds:[esi]
  40ee07:	push   edi
  40ee08:	std    
  40ee09:	dec    esp
  40ee0a:	adc    DWORD PTR [esi+0x1b063ae2],esi
  40ee10:	inc    ecx
  40ee11:	push   ecx
  40ee12:	pop    esi
  40ee13:	jns    0x40ee6a
  40ee15:	nop
  40ee16:	aam    0x59
  40ee18:	loop   0x40ee13
  40ee1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee1b:	(bad)  
  40ee1d:	ret    0xd987
  40ee20:	into   
  40ee21:	mov    BYTE PTR [edx-0x5],al
  40ee24:	mov    edi,0x1d7b1dc3
  40ee29:	call   FWORD PTR [edi-0x65]
  40ee2c:	cmc    
  40ee2d:	repz int 0x24
  40ee30:	stc    
  40ee31:	call   0x6aa5:0xe9f726b8
  40ee38:	dec    edi
  40ee39:	inc    ecx
  40ee3a:	or     ebp,DWORD PTR [ecx+0x4bfce0a9]
  40ee40:	fdivr  st(4),st
  40ee42:	jle    0x40eeb6
  40ee44:	sbb    al,0x8e
  40ee46:	dec    ebp
  40ee47:	push   ss
  40ee48:	pusha  
  40ee49:	xchg   esp,eax
  40ee4a:	sub    eax,0xa495f44f
  40ee4f:	aam    0x63
  40ee51:	xchg   ecx,eax
  40ee52:	jnp    0x40ee7e
  40ee54:	mov    ds:0x2563da15,al
  40ee59:	mov    bl,0x48
  40ee5b:	not    DWORD PTR [eax]
  40ee5d:	pushf  
  40ee5e:	mov    ch,0xca
  40ee60:	adc    eax,0x40ec294e
  40ee65:	dec    esi
  40ee66:	fnstenv [edi-0x31]
  40ee69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee6a:	or     esp,DWORD PTR [ecx-0x118588e4]
  40ee70:	inc    edx
  40ee71:	xor    BYTE PTR [esi-0x13],cl
  40ee74:	and    esi,DWORD PTR [eax-0x6a]
  40ee77:	rcr    cl,cl
  40ee79:	aam    0x2f
  40ee7b:	jecxz  0x40ee76
  40ee7d:	and    cl,BYTE PTR [ecx-0x5]
  40ee80:	and    esp,DWORD PTR [ebp-0x2d]
  40ee83:	jbe    0x40ee32
  40ee85:	leave  
  40ee86:	inc    edi
  40ee87:	mov    edi,DWORD PTR [esi-0x23]
  40ee8a:	push   ds
  40ee8b:	aad    0x46
  40ee8d:	mov    WORD PTR [edx+0x6df05c8b],gs
  40ee93:	jl     0x40ee3b
  40ee95:	xor    DWORD PTR [edi-0x66d5fce7],0x65
  40ee9c:	sub    edx,ebx
  40ee9e:	loope  0x40eef2
  40eea0:	(bad)  
  40eea1:	dec    ebx
  40eea2:	test   al,0x7f
  40eea4:	out    dx,eax
  40eea5:	inc    ecx
  40eea6:	pushf  
  40eea7:	pop    es
  40eea8:	adc    eax,0xcf49407b
  40eead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eeae:	call   0xbebaf7eb
  40eeb3:	cmc    
  40eeb4:	out    0x5a,al
  40eeb6:	jo     0x40ee46
  40eeb8:	retf   
  40eeb9:	les    edx,FWORD PTR [edi-0x6fd078b7]
  40eebf:	into   
  40eec0:	je     0x40ef3b
  40eec2:	sbb    DWORD PTR [eax-0x169419b7],edx
  40eec8:	into   
  40eec9:	xor    BYTE PTR [edi+edi*2-0x29],0xdc
  40eece:	shl    DWORD PTR [eax+0x10911e44],1
  40eed4:	jg     0x40ef3a
  40eed6:	ins    BYTE PTR es:[edi],dx
  40eed7:	test   eax,0x918862ae
  40eedc:	int3   
  40eedd:	cld    
  40eede:	and    eax,0x978003d0
  40eee3:	pusha  
  40eee4:	(bad)  
  40eee5:	jno    0x40ee96
  40eee7:	sub    al,0xf1
  40eee9:	test   DWORD PTR [ecx],edx
  40eeeb:	outs   dx,DWORD PTR ds:[esi]
  40eeec:	fmul   DWORD PTR [eax+0x6c6bf59f]
  40eef2:	mov    WORD PTR [ebx+0x79df9d39],ss
  40eef8:	sahf   
  40eef9:	int3   
  40eefa:	add    al,0x9e
  40eefc:	cmovo  ecx,DWORD PTR [esi]
  40eeff:	cwde   
  40ef00:	jmp    0x40ef48
  40ef02:	hlt    
  40ef03:	add    al,ah
  40ef05:	xor    eax,0x9fb9fd37
  40ef0a:	cwde   
  40ef0b:	aam    0xc9
  40ef0d:	es dec edx
  40ef0f:	adc    ah,al
  40ef11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef12:	push   es
  40ef13:	imul   eax,DWORD PTR [ecx-0x24],0xbdf3aa1e
  40ef1a:	jae    0x40eecd
  40ef1c:	cdq    
  40ef1d:	imul   edx,DWORD PTR [edx-0x2e],0x84278971
  40ef24:	xchg   ebp,eax
  40ef25:	in     al,0x25
  40ef27:	mov    ch,0x7
  40ef29:	pop    edx
  40ef2a:	cmp    BYTE PTR [ebp+ecx*4-0x35d53e38],ch
  40ef31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef32:	(bad)  
  40ef33:	out    dx,eax
  40ef34:	add    al,0x7b
  40ef36:	in     eax,0x9d
  40ef38:	jo     0x40ef3a
  40ef3a:	js     0x40ef28
  40ef3c:	mov    eax,0x958a406f
  40ef41:	fucom  st(0)
  40ef43:	clc    
  40ef44:	ins    DWORD PTR es:[edi],dx
  40ef45:	jg     0x40eefc
  40ef47:	xchg   esi,eax
  40ef48:	and    edx,DWORD PTR [eax-0x5b]
  40ef4b:	test   BYTE PTR [esi],ch
  40ef4d:	xor    al,BYTE PTR [esi]
  40ef4f:	popf   
  40ef50:	mov    cl,0xb1
  40ef52:	popf   
  40ef53:	xor    ah,BYTE PTR [ebp+ebp*1-0x2ec277e2]
  40ef5a:	cmp    BYTE PTR [esi],dl
  40ef5c:	mov    ch,0x66
  40ef5e:	xchg   ebx,eax
  40ef5f:	fidivr DWORD PTR [ebx]
  40ef61:	inc    esp
  40ef62:	repz mul BYTE PTR [edx+0x20a388cf]
  40ef69:	jbe    0x40ef27
  40ef6b:	es addr16 xor al,0xcf
  40ef6f:	jae    0x40efbc
  40ef71:	jo     0x40efa8
  40ef73:	in     al,0xeb
  40ef75:	xchg   edi,eax
  40ef76:	into   
  40ef77:	call   0xfc53646b
  40ef7c:	and    ebp,DWORD PTR [ecx-0x56c72b1b]
  40ef82:	(bad)  
  40ef83:	xchg   edi,eax
  40ef84:	inc    esp
  40ef85:	fwait
  40ef86:	ds pop esp
  40ef88:	dec    edi
  40ef89:	retf   
  40ef8a:	mov    ebp,DWORD PTR [edx+0x2fec83c9]
  40ef90:	push   ds
  40ef91:	test   al,0xcf
  40ef93:	lds    eax,FWORD PTR [eax-0x17]
  40ef96:	fs sbb dl,bh
  40ef99:	add    ch,BYTE PTR [edi-0x9854107]
  40ef9f:	add    ecx,ebx
  40efa1:	cmp    ch,BYTE PTR [edi+edx*4]
  40efa4:	cmp    al,0x52
  40efa6:	mov    DWORD PTR [esi+eax*1],esp
  40efa9:	dec    ebp
  40efaa:	adc    eax,0xba49d654
  40efaf:	xchg   ecx,eax
  40efb0:	cmp    ecx,DWORD PTR [edx+0x7b053b35]
  40efb6:	jae    0x40f00a
  40efb8:	adc    BYTE PTR [esi],0x27
  40efbb:	jecxz  0x40efcf
  40efbd:	fcmovnbe st,st(1)
  40efbf:	(bad)  
  40efc0:	and    al,0x23
  40efc2:	fwait
  40efc3:	xor    al,0xd2
  40efc5:	dec    ebp
  40efc6:	dec    eax
  40efc7:	shr    cl,cl
  40efc9:	jns    0xdd1568be
  40efcf:	xchg   esp,eax
  40efd0:	jecxz  0x40f002
  40efd2:	dec    eax
  40efd3:	lods   eax,DWORD PTR ds:[esi]
  40efd4:	and    esi,0xa91682b5
  40efda:	inc    edi
  40efdb:	rcl    BYTE PTR ds:0xd4d82c2,1
  40efe1:	push   ds
  40efe2:	(bad)  
  40efe3:	jp     0x40efa0
  40efe5:	mov    cl,0xa4
  40efe7:	nop
  40efe8:	dec    esp
  40efe9:	mov    ebx,0x5ab302d5
  40efee:	push   esp
  40efef:	push   esp
  40eff0:	enter  0xd3a7,0x10
  40eff4:	data16 mov ah,0x73
  40eff7:	sbb    al,0xc8
  40eff9:	push   es
  40effa:	jecxz  0x40ef83
  40effc:	(bad)  
  40effd:	jmp    0xdbd23a21
  40f002:	inc    esp
  40f003:	dec    esi
  40f004:	fisttp QWORD PTR [ebp-0x273a2df0]
  40f00a:	ret    
  40f00b:	push   edi
  40f00c:	push   ecx
  40f00d:	jecxz  0x40efb2
  40f00f:	xchg   ebp,eax
  40f010:	enter  0x8c3a,0x7d
  40f014:	adc    dl,ah
  40f016:	out    0x20,al
  40f018:	fnsave [esi+0x125b2c86]
  40f01e:	js     0x40efa7
  40f020:	pusha  
  40f021:	and    eax,0x682b30ce
  40f026:	cdq    
  40f027:	rcl    BYTE PTR [edi+0x5],cl
  40f02a:	lock sbb al,0x6c
  40f02d:	retf   0x568
  40f030:	xor    eax,0x86b8b9b6
  40f035:	mul    DWORD PTR [ebp+ecx*1-0x3bc4f063]
  40f03c:	outs   dx,DWORD PTR ds:[esi]
  40f03d:	xchg   edi,eax
  40f03e:	and    al,0x33
  40f040:	jp     0x40f0a9
  40f042:	mov    al,0x57
  40f044:	or     eax,0xb8ef2332
  40f049:	(bad)  
  40f04a:	scas   eax,DWORD PTR es:[edi]
  40f04b:	repz adc al,0x2d
  40f04e:	push   es
  40f04f:	and    ebx,edi
  40f051:	cmp    BYTE PTR [eax+0x6c],0xc4
  40f055:	std    
  40f056:	int    0x7a
  40f058:	sar    BYTE PTR [eax],1
  40f05a:	mov    cl,0x6c
  40f05c:	pushf  
  40f05d:	add    DWORD PTR [edi+0x4a9d01d],edi
  40f063:	inc    eax
  40f064:	mov    dl,0xb6
  40f066:	lea    ebx,[ebx+0x68a5e82e]
  40f06c:	sub    al,BYTE PTR [edx+0x679309b6]
  40f072:	dec    edi
  40f073:	in     eax,dx
  40f074:	xor    eax,DWORD PTR [eax]
  40f076:	jle    0x40f089
  40f078:	inc    ebx
  40f079:	fisttp DWORD PTR [ebx]
  40f07b:	shr    bh,cl
  40f07d:	imul   ebp,DWORD PTR [esi+eiz*8],0x15
  40f081:	xchg   edi,eax
  40f082:	retf   
  40f083:	mov    edx,0x5ce63b99
  40f088:	pop    eax
  40f089:	dec    edx
  40f08a:	loop   0x40f033
  40f08c:	mov    dl,0x4a
  40f08e:	sti    
  40f08f:	mov    ds:0x75e1f933,eax
  40f094:	jge    0x40f09a
  40f096:	push   es
  40f097:	mov    edx,0x72f0fc28
  40f09c:	cld    
  40f09d:	shr    BYTE PTR [edx],cl
  40f09f:	add    ah,BYTE PTR [edi+0x1f]
  40f0a2:	adc    bl,BYTE PTR [eax]
  40f0a4:	pop    esi
  40f0a5:	add    al,0xac
  40f0a7:	fmul   st(4),st
  40f0a9:	push   ebx
  40f0aa:	out    0x12,eax
  40f0ac:	jmp    0x6ef08f7b
  40f0b1:	dec    ecx
  40f0b2:	retf   
  40f0b3:	mov    ch,0x25
  40f0b5:	jnp    0x40f07f
  40f0b7:	lock jmp 0xda275389
  40f0bd:	and    DWORD PTR [esi-0x68e68901],ebx
  40f0c3:	dec    ebp
  40f0c4:	iret   
  40f0c5:	xlat   BYTE PTR ds:[ebx]
  40f0c6:	sub    DWORD PTR [esi],esi
  40f0c8:	jnp    0x40f085
  40f0ca:	lods   eax,DWORD PTR ds:[esi]
  40f0cb:	mov    ah,0xc9
  40f0cd:	inc    esp
  40f0ce:	dec    eax
  40f0cf:	jno    0x40f0ac
  40f0d1:	test   bh,bh
  40f0d3:	push   ebp
  40f0d4:	hlt    
  40f0d5:	adc    al,0x1a
  40f0d7:	jo     0x40f122
  40f0d9:	repz repnz sbb al,0x11
  40f0dd:	scas   al,BYTE PTR es:[edi]
  40f0de:	int3   
  40f0df:	ret    0x75e6
  40f0e2:	mov    DWORD PTR [ebx+0x29910828],esp
  40f0e8:	out    dx,eax
  40f0e9:	sbb    al,0x4a
  40f0eb:	loope  0x40f133
  40f0ed:	mov    edi,0x818f6042
  40f0f2:	pop    ss
  40f0f3:	mov    cs,WORD PTR ds:0xca032147
  40f0f9:	mov    edx,0xd70c615c
  40f0fe:	mov    BYTE PTR [edx-0x5da291d1],ch
  40f104:	cmc    
  40f105:	dec    esp
  40f106:	sbb    al,0xad
  40f108:	mov    ds:0xd782df9,eax
  40f10d:	mov    WORD PTR [edx+0x70],?
  40f110:	push   0x3f
  40f112:	retf   
  40f113:	sub    eax,0x772b7406
  40f118:	rol    BYTE PTR [edi+0x26],cl
  40f11b:	adc    bh,BYTE PTR [ecx+0x37]
  40f11e:	sub    dl,BYTE PTR [edx+edi*4]
  40f121:	push   edi
  40f122:	mov    ds:0x1aa47572,eax
  40f127:	fwait
  40f128:	dec    edi
  40f129:	push   esp
  40f12a:	stos   BYTE PTR es:[edi],al
  40f12b:	sub    ah,BYTE PTR [edx]
  40f12d:	push   0xe4f60991
  40f132:	xchg   ebp,eax
  40f133:	pop    eax
  40f134:	cmp    DWORD PTR [ebp+0x62084453],ebp
  40f13a:	lds    ebp,FWORD PTR [edx-0x79]
  40f13d:	xlat   BYTE PTR ds:[ebx]
  40f13e:	daa    
  40f13f:	jp     0x40f149
  40f141:	ret    0xf3f6
  40f144:	and    eax,0x6c3c0516
  40f149:	rcr    ch,0x58
  40f14c:	inc    ebp
  40f14d:	or     BYTE PTR [ecx],bl
  40f14f:	lahf   
  40f150:	in     al,dx
  40f151:	into   
  40f152:	pop    edi
  40f153:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f154:	mov    ch,0xd5
  40f156:	and    DWORD PTR [ebp+ebx*4+0x6a],0xb9025b93
  40f15e:	fcom   DWORD PTR [eax+eiz*8]
  40f161:	dec    esi
  40f162:	arpl   WORD PTR [esi-0x36],sp
  40f165:	mov    esi,0x85b1e6c7
  40f16a:	xlat   BYTE PTR ds:[ebx]
  40f16b:	repnz add DWORD PTR [ebp+eiz*1-0x7b1041d1],ebp
  40f173:	inc    edi
  40f174:	mov    WORD PTR ds:0x94d2072c,gs
  40f17a:	mov    cl,0x4a
  40f17c:	pop    edi
  40f17d:	and    bl,BYTE PTR [ebx-0xe]
  40f180:	stos   DWORD PTR es:[edi],eax
  40f181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f182:	push   eax
  40f183:	fwait
  40f184:	addr16 out 0xa,al
  40f187:	and    DWORD PTR [eax+0x1e7ea176],eax
  40f18d:	dec    ebx
  40f18e:	jns    0x40f18e
  40f190:	stos   DWORD PTR es:[edi],eax
  40f191:	iret   
  40f192:	pop    esi
  40f193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f194:	or     eax,0x1737a236
  40f199:	in     al,0x71
  40f19b:	pop    es
  40f19c:	xor    eax,0xdb6806e0
  40f1a1:	xchg   BYTE PTR [edx-0x4ac8d888],al
  40f1a7:	cld    
  40f1a8:	push   0x8c6d54c4
  40f1ad:	nop
  40f1ae:	jnp    0x40f17d
  40f1b0:	test   al,0x2c
  40f1b2:	bound  ecx,QWORD PTR [ebx-0x380622e3]
  40f1b8:	cmp    ebx,0x69
  40f1bb:	cmp    ch,BYTE PTR [ecx+0x20]
  40f1be:	pop    ebp
  40f1bf:	jbe    0x40f145
  40f1c1:	mov    ebp,0x7d520221
  40f1c6:	loopne 0x40f207
  40f1c8:	es mov ah,0x87
  40f1cb:	dec    sp
  40f1cd:	dec    edx
  40f1ce:	sbb    bl,cl
  40f1d0:	fisubr DWORD PTR [ecx+ecx*4-0x56]
  40f1d4:	rcr    DWORD PTR [esi-0x1a87a8b5],0xe7
  40f1db:	push   0xf313a83a
  40f1e0:	pushf  
  40f1e1:	cmp    eax,0x250d6998
  40f1e6:	icebp  
  40f1e7:	dec    edx
  40f1e8:	sar    ecx,cl
  40f1ea:	mov    bl,0xa7
  40f1ec:	out    dx,eax
  40f1ed:	push   edi
  40f1ee:	mov    cl,0x12
  40f1f0:	sub    DWORD PTR [ebx],ecx
  40f1f2:	xor    DWORD PTR [ebx+0x2da965e4],edx
  40f1f8:	cmp    BYTE PTR [edx-0x66],ah
  40f1fb:	and    BYTE PTR [edi-0x67297bac],dh
  40f201:	stc    
  40f202:	cli    
  40f203:	xchg   edx,eax
  40f204:	call   0xa6b65502
  40f209:	jns    0x40f25d
  40f20b:	call   FWORD PTR fs:[edx]
  40f20e:	clc    
  40f20f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f210:	xchg   edx,eax
  40f211:	sub    bh,BYTE PTR [eax]
  40f213:	aas    
  40f214:	mov    ah,0x3
  40f216:	mov    al,ds:0x1c4eb15
  40f21b:	stos   BYTE PTR es:[edi],al
  40f21c:	call   0x9a442846
  40f221:	or     al,0xc9
  40f223:	outs   dx,DWORD PTR ds:[esi]
  40f224:	pop    edi
  40f225:	xor    esp,DWORD PTR [edx+0x1e]
  40f228:	cdq    
  40f229:	inc    ebx
  40f22a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f22b:	and    DWORD PTR [edx-0x65e1dece],0x5eacfe44
  40f235:	stc    
  40f236:	jns    0x40f211
  40f238:	push   esp
  40f239:	(bad)  
  40f23a:	gs and cl,0x3f
  40f23e:	xchg   ebx,eax
  40f23f:	and    eax,0xf82d8563
  40f244:	push   0xb40a466b
  40f249:	jnp    0x40f2a4
  40f24b:	pop    ss
  40f24c:	inc    esp
  40f24d:	pop    ecx
  40f24e:	mov    fs,eax
  40f250:	mov    cs,WORD PTR [edi+0x2c33cca7]
  40f256:	imul   ebx,DWORD PTR [edi],0x10
  40f259:	jp     0x40f24e
  40f25b:	clc    
  40f25c:	inc    ebx
  40f25d:	sub    eax,0xc09b829c
  40f262:	aam    0x46
  40f264:	xlat   BYTE PTR ds:[ebx]
  40f265:	xchg   ecx,eax
  40f266:	mov    dl,0xa6
  40f268:	ficomp WORD PTR [eax+0x50]
  40f26b:	shl    BYTE PTR [ecx],1
  40f26d:	out    dx,eax
  40f26e:	mov    BYTE PTR [esi+edx*1+0x54],al
  40f272:	xor    esi,DWORD PTR [eax]
  40f274:	dec    eax
  40f275:	jo     0x40f2d3
  40f277:	fnstsw WORD PTR [edi-0x79]
  40f27a:	popf   
  40f27b:	dec    ecx
  40f27c:	lock call 0x5f06:0x3ddba4d
  40f284:	xor    esi,edi
  40f286:	cmp    al,0x91
  40f288:	(bad)  
  40f289:	mov    esp,0x4bf61fd8
  40f28e:	arpl   si,ax
  40f290:	xor    DWORD PTR [eax-0xe7ba3cd],edi
  40f296:	mov    ecx,0xbe1d9307
  40f29b:	jl     0x40f27a
  40f29d:	inc    eax
  40f29e:	xchg   esi,eax
  40f29f:	jge    0x40f239
  40f2a1:	lock iret 
  40f2a3:	mul    BYTE PTR [eax+eiz*4-0x7e5171f2]
  40f2aa:	sbb    DWORD PTR [ecx+0x6d58a00d],ebx
  40f2b0:	push   0x78
  40f2b2:	scas   eax,DWORD PTR es:[edi]
  40f2b3:	dec    edi
  40f2b4:	inc    eax
  40f2b5:	cmc    
  40f2b6:	repz and eax,DWORD PTR [ebp+0x8eadd3d]
  40f2bd:	je     0x40f284
  40f2bf:	add    bl,bl
  40f2c1:	dec    eax
  40f2c2:	xchg   DWORD PTR [eax+ebp*8],edi
  40f2c5:	jp     0x40f31f
  40f2c7:	mov    esp,0x7f85a3bb
  40f2cc:	push   ebp
  40f2cd:	ds sti 
  40f2cf:	cmovnp ebx,DWORD PTR [ecx]
  40f2d2:	dec    esp
  40f2d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2d4:	jg     0x40f34b
  40f2d6:	or     al,BYTE PTR [ebx]
  40f2d8:	push   0xeeae2f22
  40f2dd:	sub    eax,0xb29b17e6
  40f2e2:	inc    edx
  40f2e3:	test   BYTE PTR [ebp+edi*2-0x1dae5e74],ah
  40f2ea:	sti    
  40f2eb:	sub    DWORD PTR [eax+0x6f2ca4c8],ebp
  40f2f1:	push   edx
  40f2f2:	mov    ecx,0xbb4bcd43
  40f2f7:	aas    
  40f2f8:	jno    0x40f365
  40f2fa:	pop    ss
  40f2fb:	jmp    0x7e87:0xefc74e9b
  40f302:	popf   
  40f303:	cmc    
  40f304:	xchg   ecx,eax
  40f305:	add    dl,ch
  40f307:	mov    DWORD PTR [ebx-0x53],edi
  40f30a:	outs   dx,DWORD PTR ds:[esi]
  40f30b:	xchg   ebp,eax
  40f30c:	sub    dl,BYTE PTR [ebx+0x78]
  40f30f:	mov    esi,0x28c953f8
  40f314:	js     0x40f2fe
  40f316:	dec    ecx
  40f317:	cmp    eax,0xac921db3
  40f31c:	mov    ah,0xe1
  40f31e:	int    0x18
  40f320:	sbb    BYTE PTR [edi-0x1e087be],bh
  40f326:	out    0xda,al
  40f328:	lahf   
  40f329:	jge    0x40f31b
  40f32b:	pop    ds
  40f32c:	add    BYTE PTR [ebp+0x30],dh
  40f32f:	and    esi,ebp
  40f331:	and    BYTE PTR [edx+edx*8-0x45b0d50a],ch
  40f338:	arpl   WORD PTR [edi],sp
  40f33a:	xchg   edi,eax
  40f33b:	and    ebx,DWORD PTR [ebx+ecx*4+0x54b78949]
  40f342:	retf   
  40f343:	jecxz  0x40f3a9
  40f345:	in     al,0x9b
  40f347:	fstp   TBYTE PTR [esi]
  40f349:	xchg   ecx,eax
  40f34a:	inc    ebp
  40f34b:	scas   al,BYTE PTR es:[edi]
  40f34c:	cdq    
  40f34d:	xchg   esp,eax
  40f34e:	rcr    BYTE PTR [esi+eax*2+0x25],1
  40f352:	test   DWORD PTR [edi+0x42],eax
  40f355:	pop    esp
  40f356:	in     eax,dx
  40f357:	in     eax,0x9
  40f359:	jmp    0x718955e0
  40f35e:	ret    
  40f35f:	and    ah,BYTE PTR [ecx]
  40f361:	add    ecx,DWORD PTR [eax-0x35]
  40f364:	ja     0x40f366
  40f366:	test   eax,0x676992a9
  40f36b:	push   ecx
  40f36c:	mov    bl,0xf
  40f36e:	in     al,0x61
  40f370:	add    edi,edx
  40f372:	push   esp
  40f373:	xchg   esp,eax
  40f374:	mov    eax,0x79508fa5
  40f379:	enter  0x2fd8,0x78
  40f37d:	xor    DWORD PTR [ebp+0xa],ebp
  40f380:	or     BYTE PTR [ecx],0x28
  40f383:	sbb    dl,BYTE PTR [edx]
  40f385:	xchg   edx,eax
  40f386:	lock add ebx,DWORD PTR [ecx-0x17a1fe9b]
  40f38d:	loopne 0x40f39c
  40f38f:	js     0x40f372
  40f391:	repnz xchg edx,eax
  40f393:	jecxz  0x40f331
  40f395:	es inc esi
  40f397:	clc    
  40f398:	iret   
  40f399:	out    dx,eax
  40f39a:	pop    edi
  40f39b:	and    ebx,DWORD PTR [edi+0x380e399e]
  40f3a1:	xchg   ebx,eax
  40f3a2:	retf   
  40f3a3:	pop    ds
  40f3a4:	cmp    eax,0xd6d5de50
  40f3a9:	pop    ebx
  40f3aa:	(bad)  
  40f3ab:	xor    BYTE PTR [ecx-0x18],al
  40f3ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3af:	xchg   ecx,eax
  40f3b0:	mov    BYTE PTR [edx],dh
  40f3b2:	int3   
  40f3b3:	lods   al,BYTE PTR ds:[esi]
  40f3b4:	pop    ss
  40f3b5:	enter  0x748b,0xc5
  40f3b9:	xor    al,0x67
  40f3bb:	dec    eax
  40f3bc:	pop    ds
  40f3bd:	cs stos BYTE PTR es:[edi],al
  40f3bf:	pop    es
  40f3c0:	xchg   ebx,eax
  40f3c1:	or     eax,0xb2fdbf3e
  40f3c6:	pop    ecx
  40f3c7:	in     al,0xf1
  40f3c9:	jle    0x40f3f1
  40f3cb:	inc    edx
  40f3cc:	sbb    edi,edi
  40f3ce:	lock push cs
  40f3d0:	cmp    al,0xe4
  40f3d2:	cmp    DWORD PTR [edi+ebx*4-0xa],ebx
  40f3d6:	in     al,0x7c
  40f3d8:	lds    esi,FWORD PTR [ecx]
  40f3da:	pop    edx
  40f3db:	xchg   ecx,eax
  40f3dc:	call   0xb1baca63
  40f3e1:	shl    dh,1
  40f3e3:	scas   al,BYTE PTR es:[edi]
  40f3e4:	fld    QWORD PTR [edx+0x30f8bdc3]
  40f3ea:	pop    ecx
  40f3eb:	stos   BYTE PTR es:[edi],al
  40f3ec:	je     0x40f41c
  40f3ee:	aad    0x6e
  40f3f0:	sti    
  40f3f1:	lds    eax,FWORD PTR [ebx+0x515d842d]
  40f3f7:	mov    ebp,0x42ef4dd9
  40f3fc:	cld    
  40f3fd:	cli    
  40f3fe:	jne    0x40f408
  40f400:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f401:	cdq    
  40f402:	pop    esi
  40f403:	cwde   
  40f404:	jo     0x40f47d
  40f406:	jg     0x40f46e
  40f408:	lock inc esi
  40f40a:	ins    BYTE PTR es:[edi],dx
  40f40b:	pop    ecx
  40f40c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f40d:	loop   0x40f421
  40f40f:	pop    ss
  40f410:	dec    ebp
  40f411:	cmp    al,0x97
  40f413:	sbb    eax,0x9ff7a688
  40f418:	mov    al,ds:0x46f8600b
  40f41d:	pop    ecx
  40f41e:	test   esp,esi
  40f420:	sbb    BYTE PTR [eax+ebx*8-0x7b66c0c1],al
  40f427:	outs   dx,BYTE PTR ds:[esi]
  40f428:	xchg   ebx,eax
  40f429:	int    0x3c
  40f42b:	xchg   edi,eax
  40f42c:	adc    BYTE PTR [edi+0xa6f488b],cl
  40f432:	and    DWORD PTR [eax],ebp
  40f434:	aas    
  40f435:	sub    ch,BYTE PTR ds:0x359b4df2
  40f43b:	(bad)  
  40f43c:	into   
  40f43d:	dec    esi
  40f43e:	add    BYTE PTR [edi-0x80],0xfe
  40f442:	out    dx,eax
  40f443:	xor    bh,0xcd
  40f446:	fldcw  WORD PTR [esi-0x624d892]
  40f44c:	clc    
  40f44d:	out    0xbc,eax
  40f44f:	fwait
  40f450:	xor    bh,BYTE PTR [ebx+0x27]
  40f453:	push   es
  40f454:	mov    DWORD PTR [ecx-0x2b8671ea],esi
  40f45a:	or     esi,ecx
  40f45c:	cs pop ecx
  40f45e:	inc    edi
  40f45f:	mov    ebp,DWORD PTR [ebp+0x3755d4d2]
  40f465:	loopne 0x40f3f5
  40f467:	xor    cl,BYTE PTR [ecx+eax*1]
  40f46a:	(bad)  
  40f46b:	jmp    0xc520:0x57025b06
  40f472:	daa    
  40f473:	push   0xffffffa9
  40f475:	or     DWORD PTR [eax+0x3ec309d6],edx
  40f47b:	int3   
  40f47c:	adc    al,0xe3
  40f47e:	jnp    0x40f45f
  40f480:	xor    eax,0x4419fe52
  40f485:	sahf   
  40f486:	mov    eax,ds:0x28f0f521
  40f48b:	mov    es,esi
  40f48d:	frstor [edx+0x43]
  40f490:	jbe    0x40f4b9
  40f492:	cdq    
  40f493:	out    0xb3,eax
  40f495:	ins    BYTE PTR es:[edi],dx
  40f496:	xchg   esp,eax
  40f497:	add    al,0xac
  40f499:	shl    BYTE PTR [edi-0x76],0x7f
  40f49d:	dec    eax
  40f49e:	dec    eax
  40f49f:	fistp  QWORD PTR [ebx+0x25bb6c2d]
  40f4a5:	clc    
  40f4a6:	jge    0x40f4dd
  40f4a8:	jb     0x40f446
  40f4aa:	jno    0x40f516
  40f4ac:	jge    0x40f526
  40f4ae:	in     eax,0x84
  40f4b0:	cmp    al,0xad
  40f4b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4b3:	addr16 in al,0x98
  40f4b6:	icebp  
  40f4b7:	xchg   esp,eax
  40f4b8:	fsubr  st(2),st
  40f4ba:	lahf   
  40f4bb:	push   edx
  40f4bc:	cdq    
  40f4bd:	popf   
  40f4be:	fimul  DWORD PTR [ecx]
  40f4c0:	push   esp
  40f4c1:	push   ds
  40f4c2:	sbb    edx,DWORD PTR [ebp-0x54945b82]
  40f4c8:	nop
  40f4c9:	add    edi,DWORD PTR [eax-0x5a]
  40f4cc:	stos   DWORD PTR es:[edi],eax
  40f4cd:	mov    dh,0xf
  40f4cf:	gs mov edi,0x71785901
  40f4d5:	mov    edx,0x3f1ea7dd
  40f4da:	ja     0x40f524
  40f4dc:	xchg   ecx,eax
  40f4dd:	mov    eax,0xb5ab22cc
  40f4e2:	add    BYTE PTR [ecx+ebx*4+0x50],ch
  40f4e6:	jno    0x40f503
  40f4e8:	xor    ebp,DWORD PTR [edi-0x5e50f21f]
  40f4ee:	mov    cl,0x1f
  40f4f0:	pop    eax
  40f4f1:	dec    edi
  40f4f3:	jg     0x40f4e8
  40f4f5:	adc    BYTE PTR [edx+0x33],cl
  40f4f8:	arpl   WORD PTR [eax+edi*1+0x6cdc4e6],sp
  40f4ff:	loopne 0x40f575
  40f501:	daa    
  40f502:	aaa    
  40f503:	sahf   
  40f504:	mov    ds:0x1e71b886,eax
  40f509:	xor    al,0x2e
  40f50b:	ins    DWORD PTR es:[edi],dx
  40f50c:	mov    bh,0x33
  40f50e:	dec    ebx
  40f50f:	popf   
  40f510:	xchg   edx,eax
  40f511:	jnp    0x40f561
  40f513:	mov    ch,0x17
  40f515:	add    eax,DWORD PTR [ecx-0x4a9ee6b6]
  40f51b:	xor    DWORD PTR [edx+0xa],0x4f
  40f51f:	fiadd  DWORD PTR [ebp-0x2ccf1cde]
  40f525:	in     eax,dx
  40f526:	aad    0x6e
  40f528:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f529:	test   eax,0xa8c66095
  40f52e:	or     ecx,DWORD PTR [eax+0x17]
  40f531:	adc    bh,BYTE PTR [ebx+0x6f82e33a]
  40f537:	lods   al,BYTE PTR ds:[esi]
  40f538:	loopne 0x40f4ee
  40f53a:	inc    ebp
  40f53b:	and    BYTE PTR [ecx-0x44e3651],ch
  40f541:	popf   
  40f542:	xor    BYTE PTR [ebx],bl
  40f544:	sbb    BYTE PTR [eax+0x1239b430],al
  40f54a:	inc    ebx
  40f54b:	(bad)  [ebx+edx*8-0x9c95434]
  40f552:	jbe    0x40f595
  40f554:	jmp    FWORD PTR [edi]
  40f556:	out    dx,al
  40f557:	dec    ebp
  40f558:	and    BYTE PTR [edx-0x45b19b53],dl
  40f55e:	outs   dx,BYTE PTR ds:[esi]
  40f55f:	(bad)  
  40f561:	jle    0x40f50b
  40f563:	arpl   sp,cx
  40f565:	aad    0x88
  40f567:	pop    esi
  40f568:	or     esi,edx
  40f56a:	bound  edi,QWORD PTR [ecx]
  40f56c:	test   eax,0x5fb16ed7
  40f571:	jmp    0x40f577
  40f573:	pop    ebp
  40f574:	adc    al,0xeb
  40f576:	dec    edx
  40f577:	loopne 0x40f5a2
  40f579:	adc    dh,BYTE PTR [ebx-0x1cf9806a]
  40f57f:	and    ah,ah
  40f581:	cmp    BYTE PTR [ecx+0x1e],ch
  40f584:	xchg   ecx,eax
  40f585:	lahf   
  40f586:	jl     0x40f52c
  40f588:	shr    BYTE PTR [edx+ecx*8],cl
  40f58b:	sub    BYTE PTR [esi+0x785c7eb0],ch
  40f591:	mov    BYTE PTR [ecx+0x16],cl
  40f594:	sbb    al,BYTE PTR [ebx+0x48]
  40f597:	xor    cl,dh
  40f599:	xchg   DWORD PTR [ebx],edi
  40f59b:	push   eax
  40f59c:	push   ds
  40f59d:	jmp    0xedd2:0xa940548d
  40f5a4:	adc    ah,al
  40f5a6:	adc    dh,BYTE PTR [esi]
  40f5a8:	ret    
  40f5a9:	iret   
  40f5aa:	xchg   ecx,eax
  40f5ab:	mov    ecx,0xab1ccced
  40f5b0:	sbb    DWORD PTR gs:[ecx-0x77],0xffffffa2
  40f5b5:	loopne 0x40f60b
  40f5b7:	std    
  40f5b8:	repz iret 
  40f5ba:	jmp    0x40f60b
  40f5bc:	scas   al,BYTE PTR es:[edi]
  40f5bd:	dec    edx
  40f5bf:	jmp    0x40f60a
  40f5c1:	pop    ecx
  40f5c2:	test   BYTE PTR [edi+0x50],0xd8
  40f5c6:	jl     0x40f559
  40f5c8:	addr16 jmp 0x7fd:0x999c318a
  40f5d0:	sub    esp,DWORD PTR [edx-0x7fb50f38]
  40f5d6:	dec    ecx
  40f5d7:	jno    0x40f647
  40f5d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5da:	mov    cl,0xc8
  40f5dc:	repnz out 0xe4,eax
  40f5df:	or     dh,BYTE PTR cs:[eax+esi*8+0x4f]
  40f5e4:	cmc    
  40f5e5:	mov    al,ds:0xc8993ce1
  40f5ea:	out    0x20,al
  40f5ec:	sbb    al,0x87
  40f5ee:	cmp    BYTE PTR [edx+ebx*1],0xb2
  40f5f2:	xchg   ebp,eax
  40f5f3:	xor    DWORD PTR es:[ebx+0x6f312587],esi
  40f5fa:	ret    
  40f5fb:	stos   BYTE PTR es:[edi],al
  40f5fc:	popf   
  40f5fd:	data16 icebp 
  40f5ff:	mov    dh,0x58
  40f601:	jl     0x40f58a
  40f603:	lods   eax,DWORD PTR ds:[esi]
  40f604:	jns    0x40f5db
  40f606:	sbb    ah,BYTE PTR [esi-0x1ac7a490]
  40f60c:	jbe    0x40f672
  40f60e:	jmp    0x49f7cfba
  40f613:	inc    ecx
  40f614:	or     BYTE PTR [ebp+0x66],bl
  40f617:	adc    BYTE PTR [esp],bl
  40f61a:	pop    ss
  40f61b:	test   BYTE PTR [edx+edx*8+0x6c],cl
  40f61f:	popf   
  40f620:	jae    0x40f632
  40f622:	call   0x52fb3ea4
  40f627:	(bad)  
  40f628:	(bad)  
  40f629:	jecxz  0x40f65c
  40f62b:	cmp    eax,0x79ee61e1
  40f630:	mov    edx,ss
  40f632:	lds    esi,FWORD PTR [ebp-0x14]
  40f635:	xchg   ebp,eax
  40f636:	jae    0x40f68a
  40f638:	mov    al,0x45
  40f63a:	mov    ch,0x3a
  40f63c:	and    BYTE PTR [edx+ecx*2],bl
  40f63f:	fwait
  40f640:	add    DWORD PTR [edx],ebp
  40f642:	push   esp
  40f643:	lahf   
  40f644:	and    eax,0x26013918
  40f649:	mov    bh,0xcc
  40f64b:	pop    eax
  40f64c:	sub    BYTE PTR [ebp+0x1],dh
  40f64f:	xchg   ebp,eax
  40f650:	push   0xcfe590e5
  40f655:	pop    esi
  40f656:	in     eax,dx
  40f657:	push   edx
  40f658:	hlt    
  40f659:	mov    WORD PTR [edi],gs
  40f65b:	lock adc BYTE PTR [edx+esi*4+0x66],dh
  40f660:	push   eax
  40f661:	mov    ds:0x36fcf41,al
  40f666:	jge    0x40f6b5
  40f668:	xchg   ecx,eax
  40f669:	cmp    DWORD PTR [eax+0x60c41717],eax
  40f66f:	pop    ecx
  40f670:	int    0x4b
  40f672:	mov    eax,ds:0x88092973
  40f677:	scas   eax,DWORD PTR es:[edi]
  40f678:	xor    al,0xaf
  40f67a:	stc    
  40f67b:	push   edi
  40f67c:	jne    0x40f6be
  40f67e:	push   edx
  40f67f:	(bad)  
  40f680:	lods   al,BYTE PTR ds:[esi]
  40f681:	mov    esp,0xcb114feb
  40f686:	mov    BYTE PTR [esi+eax*8],cl
  40f689:	inc    edi
  40f68a:	add    BYTE PTR [esi-0x19],0x50
  40f68e:	ins    DWORD PTR es:[edi],dx
  40f68f:	mov    al,0xe
  40f691:	in     eax,0xe5
  40f693:	xchg   ebp,eax
  40f694:	cmp    ebp,DWORD PTR [edx]
  40f696:	dec    ebx
  40f697:	push   edi
  40f698:	cmp    dl,0xa8
  40f69b:	jge    0x40f634
  40f69d:	gs mov bl,0xa1
  40f6a0:	shl    ch,1
  40f6a2:	jo     0x40f6f6
  40f6a4:	retf   
  40f6a5:	xchg   BYTE PTR [edx],bl
  40f6a7:	cmp    DWORD PTR [esi+0x767742b7],esp
  40f6ad:	mov    eax,ds:0xc6f19173
  40f6b2:	inc    eax
  40f6b3:	mov    bh,0xe8
  40f6b5:	add    dh,dh
  40f6b7:	xor    bh,BYTE PTR ds:0x2b703419
  40f6bd:	and    ebp,DWORD PTR [esi+0x6d]
  40f6c0:	lea    edi,[eax]
  40f6c2:	test   eax,0xd3fc5c4f
  40f6c7:	sbb    BYTE PTR [edx+0x68],0x2e
  40f6cb:	dec    edx
  40f6cc:	push   es
  40f6cd:	mov    edi,0xcf44acdf
  40f6d2:	iret   
  40f6d3:	aas    
  40f6d4:	xchg   edi,eax
  40f6d5:	jmp    DWORD PTR ds:0x93b9d44d
  40f6db:	nop
  40f6dc:	iret   
  40f6dd:	ins    BYTE PTR es:[edi],dx
  40f6de:	rol    DWORD PTR [esi-0x1f60eef0],0x34
  40f6e5:	push   ecx
  40f6e6:	imul   BYTE PTR [edx-0x563e27e]
  40f6ec:	sahf   
  40f6ed:	cwde   
  40f6ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6ef:	inc    ebp
  40f6f0:	rcl    BYTE PTR [ebx-0x3e],cl
  40f6f3:	mov    eax,DWORD PTR [ebx]
  40f6f5:	(bad)  
  40f6f6:	in     al,0x39
  40f6f8:	ja     0x40f746
  40f6fa:	sahf   
  40f6fb:	add    eax,0x4c6c27b4
  40f700:	or     dh,bl
  40f702:	addr16 lock mov bl,0x8e
  40f706:	xchg   edx,eax
  40f707:	sub    bh,BYTE PTR [ebp-0x6c]
  40f70a:	jns    0x40f699
  40f70c:	adc    dl,BYTE PTR [edx+0x78]
  40f70f:	xchg   edi,eax
  40f710:	sub    eax,0xe4365158
  40f715:	mov    al,ds:0xcdad3694
  40f71a:	push   0x51
  40f71c:	clc    
  40f71d:	mul    DWORD PTR ds:0x43d128b9
  40f723:	add    BYTE PTR [ecx+ebp*1-0x1f],al
  40f727:	sbb    al,0xc
  40f72a:	and    ebp,DWORD PTR [ebx-0x59674c9c]
  40f730:	out    0x11,eax
  40f732:	add    al,0x75
  40f734:	inc    edi
  40f735:	xor    DWORD PTR [ebx],ebx
  40f737:	cmp    al,0xa4
  40f739:	cmp    al,0x2b
  40f73b:	jbe    0x40f780
  40f73d:	clc    
  40f73e:	lds    ebx,FWORD PTR [ebx]
  40f740:	or     bl,dh
  40f742:	je     0x40f6fb
  40f744:	pop    esi
  40f745:	leave  
  40f746:	xchg   edi,eax
  40f747:	jae    0x40f7a7
  40f749:	or     eax,0x3162077d
  40f74e:	adc    BYTE PTR [ebp+0x1002c381],dl
  40f754:	add    BYTE PTR [eax],al
  40f756:	lea    eax,[ebp-0x18]
  40f759:	add    edx,eax
  40f75b:	add    edx,0x5
  40f75e:	push   edx
  40f75f:	inc    esi
  40f760:	pop    ecx
  40f761:	dec    ecx
  40f762:	xchg   ecx,eax
  40f763:	dec    eax
  40f764:	xchg   ecx,eax
  40f765:	dec    ecx
  40f766:	xchg   ecx,edx
  40f768:	dec    edx
  40f769:	push   edx
  40f76a:	mov    edx,ebx
  40f76c:	pop    ebx
  40f76d:	dec    ebx
  40f76e:	call   DWORD PTR [ebx]
  40f770:	cmp    DWORD PTR [ebp+0x10],esi
  40f773:	je     0x40f794
  40f779:	xchg   edx,eax
  40f77a:	push   0xc
  40f77c:	pop    ecx
  40f77d:	dec    ecx
  40f77e:	push   0x3
  40f780:	pop    ebx
  40f781:	inc    ebx
  40f782:	xchg   ebx,ecx
  40f784:	inc    ecx
  40f785:	sub    ebx,ecx
  40f787:	xchg   ebx,ecx
  40f789:	dec    ecx
  40f78a:	dec    ecx
  40f78b:	mov    eax,DWORD PTR [ebp-0x1c]
  40f78e:	imul   eax,ecx
  40f791:	add    esp,eax
  40f793:	xchg   edx,eax
  40f794:	push   eax
  40f795:	xor    ebx,ebx
  40f797:	mov    edx,esp
  40f799:	dec    edx
  40f79a:	inc    ebx
  40f79b:	add    ebx,DWORD PTR [edx+ebx*1]
  40f79e:	dec    ebx
  40f79f:	xor    edx,edx
  40f7a1:	add    DWORD PTR [ebp-0x10],ebx
  40f7a4:	pop    ebx
  40f7a5:	mov    eax,DWORD PTR [ebp-0x10]
  40f7a8:	pop    edi
  40f7a9:	pop    esi
  40f7aa:	pop    ebx
  40f7ab:	leave  
  40f7ac:	ret    0x10
  40f7af:	push   ebp
  40f7b0:	mov    ebp,esp
  40f7b2:	push   ecx
  40f7b3:	sbb    DWORD PTR ds:0x42a406,0x42a422
  40f7bd:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  40f7c4:	and    DWORD PTR ds:0x42a42e,0x1336
  40f7ce:	mov    eax,DWORD PTR [ebp-0x4]
  40f7d1:	mov    edx,DWORD PTR [ebp+0x10]
  40f7d4:	mov    ecx,0x75108a8
  40f7d9:	add    DWORD PTR ds:0x42a3c6,0x42a3f6
  40f7e3:	xor    eax,ecx
  40f7e5:	xor    DWORD PTR ds:0x42a3ce,0x42a422
  40f7ef:	add    eax,0x3272ef
  40f7f4:	and    DWORD PTR ds:0x42a3b2,0x42a44a
  40f7fe:	mov    DWORD PTR [edx],eax
  40f800:	and    eax,eax
  40f802:	mov    eax,DWORD PTR [ebp+0xc]
  40f805:	xor    eax,ecx
  40f807:	push   esi
  40f808:	mov    esi,DWORD PTR [ebp+0x10]
  40f80b:	mov    edx,0x3272ef
  40f810:	adc    DWORD PTR ds:0x42a3da,0x42a3ee
  40f81a:	add    eax,edx
  40f81c:	mov    DWORD PTR [esi+0x4],eax
  40f81f:	and    DWORD PTR ds:0x42a40a,edi
  40f825:	mov    eax,DWORD PTR [ebp+0x14]
  40f828:	sub    esi,DWORD PTR ds:0x42a3f6
  40f82e:	mov    esi,DWORD PTR [ebp+0x10]
  40f831:	mov    DWORD PTR [esi+0x8],eax
  40f834:	mov    eax,DWORD PTR [ebp+0x18]
  40f837:	movzx  esi,WORD PTR ds:0x42a43e
  40f83e:	sbb    esi,DWORD PTR ds:0x42a44e
  40f844:	mov    DWORD PTR ds:0x42a43e,esi
  40f84a:	mov    esi,DWORD PTR [ebp+0x10]
  40f84d:	mov    DWORD PTR [esi+0xc],eax
  40f850:	mov    eax,DWORD PTR [ebp+0x1c]
  40f853:	mov    esi,DWORD PTR [ebp+0x10]
  40f856:	mov    DWORD PTR [esi+0x10],eax
  40f859:	mov    eax,DWORD PTR [ebp+0x8]
  40f85c:	xor    eax,ecx
  40f85e:	add    eax,edx
  40f860:	pop    esi
  40f861:	leave  
  40f862:	ret    0x18
  40f865:	push   ebp
  40f866:	mov    ebp,esp
  40f868:	sub    esp,0x9c
  40f86e:	and    DWORD PTR ds:0x42a3ba,0x0
  40f878:	mov    ecx,DWORD PTR ds:0x42a3ba
  40f87e:	inc    ecx
  40f87f:	mov    DWORD PTR ds:0x42a3ba,ecx
  40f885:	cmp    DWORD PTR ds:0x42a3ba,0x21
  40f88c:	jge    0x40f8b7
  40f892:	jmp    0x40f8aa
  40f897:	push   DWORD PTR [ebp-0x18]
  40f89a:	push   0x36e7
  40f89f:	push   0x5fbf
  40f8a4:	call   DWORD PTR ds:0x42a562
  40f8aa:	cmp    DWORD PTR ds:0x42a3ba,0x19
  40f8b1:	jb     0x40f878
  40f8b7:	mov    ecx,DWORD PTR [ebp+0x8]
  40f8ba:	mov    eax,0x8a96
  40f8bf:	xor    ax,WORD PTR [ecx+0x20]
  40f8c3:	mov    DWORD PTR ds:0x42a426,0x15
  40f8cd:	cmp    DWORD PTR ds:0x42a426,0x0
  40f8d4:	je     0x40f92a
  40f8da:	cmp    DWORD PTR ds:0x42a426,0x2
  40f8e1:	jg     0x40f92a
  40f8e7:	jmp    0x40f8fc
  40f8ec:	push   0x42a3ce
  40f8f1:	push   0x4291b5
  40f8f6:	call   DWORD PTR ds:0x42a542
  40f8fc:	cmp    DWORD PTR ds:0x42a426,0x3
  40f903:	jne    0x40f918
  40f909:	xor    ecx,ecx
  40f90b:	or     ecx,DWORD PTR ds:0x42a426
  40f911:	dec    ecx
  40f912:	mov    DWORD PTR ds:0x42a426,ecx
  40f918:	mov    ecx,DWORD PTR ds:0x42a426
  40f91e:	dec    ecx
  40f91f:	mov    DWORD PTR ds:0x42a426,ecx
  40f925:	jmp    0x40f8cd
  40f92a:	mov    ecx,0x3b59
  40f92f:	add    ax,cx
  40f932:	mov    DWORD PTR ds:0x42a3fa,0x1d
  40f93c:	cmp    DWORD PTR ds:0x42a3fa,0x0
  40f943:	je     0x40f99e
  40f949:	cmp    DWORD PTR ds:0x42a3fa,0xc
  40f950:	jge    0x40f99e
  40f956:	jmp    0x40f970
  40f95b:	push   0x7643
  40f960:	push   0x429231
  40f965:	push   0x429247
  40f96a:	call   DWORD PTR ds:0x42a506
  40f970:	cmp    DWORD PTR ds:0x42a3fa,0xd
  40f977:	jne    0x40f98c
  40f97d:	xor    ecx,ecx
  40f97f:	or     ecx,DWORD PTR ds:0x42a3fa
  40f985:	dec    ecx
  40f986:	mov    DWORD PTR ds:0x42a3fa,ecx
  40f98c:	mov    ecx,DWORD PTR ds:0x42a3fa
  40f992:	dec    ecx
  40f993:	mov    DWORD PTR ds:0x42a3fa,ecx
  40f999:	jmp    0x40f93c
  40f99e:	movzx  eax,ax
  40f9a1:	sbb    DWORD PTR ds:0x42a442,edx
  40f9a7:	mov    DWORD PTR [ebp-0x10],eax
  40f9aa:	or     DWORD PTR ds:0x42a3f6,edx
  40f9b0:	mov    BYTE PTR [ebp-0x1],0x79
  40f9b4:	lea    eax,[ebp-0x1]
  40f9b7:	mov    DWORD PTR ds:0x42a42a,0x17
  40f9c1:	cmp    DWORD PTR ds:0x42a42a,0x0
  40f9c8:	je     0x40fa00
  40f9ce:	cmp    DWORD PTR ds:0x42a42a,0x26
  40f9d5:	jle    0x40fa00
  40f9db:	jmp    0x40f9ee
  40f9e0:	push   0x429211
  40f9e5:	push   DWORD PTR [ebp-0x14]
  40f9e8:	call   DWORD PTR ds:0x42a50a
  40f9ee:	mov    ecx,DWORD PTR ds:0x42a42a
  40f9f4:	dec    ecx
  40f9f5:	mov    DWORD PTR ds:0x42a42a,ecx
  40f9fb:	jmp    0x40f9c1
  40fa00:	mov    DWORD PTR [ebp-0xc],eax
  40fa03:	adc    DWORD PTR ds:0x42a40e,0x428b
  40fa0d:	mov    al,BYTE PTR [ebp-0x1]
  40fa10:	mov    ecx,DWORD PTR [ebp-0xc]
  40fa13:	xor    al,0x7b
  40fa15:	dec    al
  40fa17:	add    DWORD PTR ds:0x42a452,0x42a3e2
  40fa21:	mov    BYTE PTR [ecx],al
  40fa23:	and    eax,DWORD PTR ds:0x42a3e6
  40fa29:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  40fa30:	jmp    0x411db8
  40fa35:	sub    cl,dl
  40fa37:	call   0x2dd482ef
  40fa3c:	ret    
  40fa3d:	int3   
  40fa3e:	pop    eax
  40fa3f:	mov    ah,0x7e
  40fa41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa42:	out    dx,eax
  40fa43:	mov    WORD PTR [edi+0x18],es
  40fa46:	lods   eax,DWORD PTR ds:[esi]
  40fa47:	jp     0x40fac3
  40fa49:	pop    ss
  40fa4a:	pop    edi
  40fa4b:	jp     0x40fac7
  40fa4d:	add    BYTE PTR [edx-0x65],0x43
  40fa51:	pushf  
  40fa52:	outs   dx,DWORD PTR ds:[esi]
  40fa53:	xor    edx,esi
  40fa55:	xchg   esp,eax
  40fa56:	push   ebp
  40fa57:	add    bh,cl
  40fa59:	imul   esi,DWORD PTR [esi-0x6c65659],0xfffffff1
  40fa60:	xchg   ebx,eax
  40fa61:	push   ds
  40fa62:	push   ebx
  40fa63:	movsx  ecx,bp
  40fa66:	cs add al,0x41
  40fa69:	jle    0x40fabd
  40fa6b:	mov    edi,ebp
  40fa6d:	mov    esp,ebp
  40fa6f:	into   
  40fa70:	xchg   BYTE PTR [edi+0x52],dh
  40fa73:	in     al,dx
  40fa74:	rcl    esp,0xd0
  40fa77:	and    bh,BYTE PTR [esi]
  40fa79:	int    0xf7
  40fa7b:	dec    esp
  40fa7c:	ds inc ebx
  40fa7e:	test   al,0xf6
  40fa80:	adc    eax,esp
  40fa82:	outs   dx,BYTE PTR ds:[esi]
  40fa83:	xchg   BYTE PTR [ecx],ah
  40fa85:	push   es
  40fa86:	fwait
  40fa87:	outs   dx,BYTE PTR ds:[esi]
  40fa88:	mov    ch,0x93
  40fa8a:	repz shr bh,cl
  40fa8d:	add    edi,esp
  40fa8f:	int    0x3b
  40fa91:	inc    esi
  40fa92:	and    DWORD PTR [edi-0x26],esi
  40fa95:	cld    
  40fa96:	test   eax,0x83337899
  40fa9b:	jnp    0x40fa66
  40fa9d:	test   DWORD PTR [ecx+0x4d6c4688],0xfff8abdf
  40faa7:	dec    esi
  40faa8:	jmp    0x40fb0f
  40faaa:	jns    0x40fad4
  40faac:	xor    bl,BYTE PTR [ebp-0x4fbe9c55]
  40fab2:	clc    
  40fab3:	xor    al,0x8e
  40fab5:	cli    
  40fab6:	mov    al,BYTE PTR [edi+0x31e7bb5f]
  40fabc:	mov    ebx,0x8a6d05cb
  40fac1:	and    al,0x13
  40fac3:	clc    
  40fac4:	sahf   
  40fac5:	or     al,BYTE PTR [ecx+0x69af4aa]
  40facb:	fsubr  DWORD PTR [edi]
  40facd:	mov    esi,0x3c9cb9b7
  40fad2:	test   eax,0xf14253f9
  40fad7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fad8:	sahf   
  40fad9:	cmp    dh,0xe3
  40fadc:	xchg   esi,eax
  40fadd:	mov    dl,0x79
  40fadf:	mov    ds:0x346606b9,eax
  40fae4:	pop    ss
  40fae5:	pop    esi
  40fae6:	jle    0x40fa93
  40fae8:	pop    eax
  40fae9:	inc    ebx
  40faea:	loope  0x40fa78
  40faec:	popf   
  40faed:	mov    ch,0xc4
  40faef:	clc    
  40faf0:	xor    eax,0xb6ff38fe
  40faf5:	stc    
  40faf6:	inc    eax
  40faf7:	push   es
  40faf8:	pop    ds
  40faf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fafa:	out    dx,eax
  40fafb:	(bad)  
  40fafc:	xchg   esp,eax
  40fafd:	lods   al,BYTE PTR ds:[esi]
  40fafe:	push   esp
  40faff:	jmp    DWORD PTR [ebx]
  40fb01:	add    al,0x39
  40fb03:	inc    ebx
  40fb04:	inc    esp
  40fb05:	cmc    
  40fb06:	xchg   esp,eax
  40fb07:	mov    ds:0xb368e129,al
  40fb0c:	pop    ebp
  40fb0d:	sbb    ch,BYTE PTR [eax-0x12]
  40fb10:	mov    BYTE PTR [ebx],dh
  40fb12:	sub    DWORD PTR [ebp+0x33111748],edi
  40fb18:	nop
  40fb19:	int3   
  40fb1a:	sbb    eax,0x5cca908c
  40fb1f:	push   ebp
  40fb20:	xchg   esp,eax
  40fb21:	jmp    0x40fb76
  40fb23:	repz pop eax
  40fb25:	jae    0x40fb54
  40fb27:	mov    esp,0xc310350d
  40fb2c:	dec    eax
  40fb2d:	jae    0x40fbab
  40fb2f:	mov    dl,0x9f
  40fb31:	pop    esi
  40fb32:	or     esp,DWORD PTR [edi+0x3225f5b2]
  40fb38:	inc    ebx
  40fb39:	ja     0x40fb26
  40fb3b:	sub    al,BYTE PTR [edx]
  40fb3d:	dec    edi
  40fb3e:	and    BYTE PTR [ecx-0x7b],dl
  40fb41:	leave  
  40fb42:	ret    
  40fb43:	(bad)  
  40fb44:	jp     0x40fb8c
  40fb46:	ja     0x40fb1e
  40fb48:	enter  0xa7e1,0xff
  40fb4c:	xchg   edx,eax
  40fb4d:	leave  
  40fb4e:	ficom  WORD PTR [eax]
  40fb50:	dec    ecx
  40fb51:	mov    esp,0x49a92555
  40fb56:	xor    DWORD PTR [esi-0x66],0x5d840bfe
  40fb5d:	dec    edi
  40fb5e:	call   0xa7b3:0x34eea2db
  40fb65:	inc    eax
  40fb66:	aas    
  40fb67:	pop    ebp
  40fb68:	call   0xb1f2d1ae
  40fb6d:	or     al,0xbd
  40fb6f:	dec    ebp
  40fb70:	(bad)  
  40fb71:	push   eax
  40fb72:	ret    0x2516
  40fb75:	(bad)  
  40fb76:	jp     0x40fbdf
  40fb78:	outs   dx,DWORD PTR ds:[esi]
  40fb79:	jns    0x40fb9a
  40fb7b:	xor    dh,BYTE PTR [ecx-0x1963b082]
  40fb81:	pop    eax
  40fb82:	adc    bl,BYTE PTR [esi]
  40fb84:	mov    dl,0xcd
  40fb86:	dec    ebx
  40fb87:	std    
  40fb88:	add    bh,BYTE PTR [eax+0x56]
  40fb8b:	ja     0x40fc03
  40fb8d:	imul   ebp,DWORD PTR [esi],0x21e8dd23
  40fb93:	push   ds
  40fb94:	arpl   di,bp
  40fb96:	xor    bh,BYTE PTR [edx+0x77e3fee]
  40fb9c:	inc    ecx
  40fb9d:	aam    0x72
  40fb9f:	popa   
  40fba0:	fs inc dx
  40fba3:	xor    ecx,DWORD PTR [eax-0x7a]
  40fba6:	in     eax,0x34
  40fba8:	mov    ds:0x25fbbd78,eax
  40fbad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbae:	inc    ebp
  40fbaf:	(bad)  
  40fbb1:	dec    edx
  40fbb2:	cmp    al,0xe6
  40fbb4:	retf   0xdd5a
  40fbb7:	gs cs push eax
  40fbba:	add    DWORD PTR [esi+0x9],ecx
  40fbbd:	(bad)
  40fbc1:	(bad)  
  40fbc2:	sbb    dh,dl
  40fbc4:	mov    ah,0xcd
  40fbc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbc7:	ret    
  40fbc8:	and    bl,dh
  40fbca:	mov    al,0x1
  40fbcc:	cmp    dl,al
  40fbce:	leave  
  40fbcf:	shl    DWORD PTR [eax-0xc],cl
  40fbd2:	int3   
  40fbd3:	loopne 0x40fc43
  40fbd5:	adc    edx,DWORD PTR [edi]
  40fbd7:	shl    BYTE PTR ds:0x249bed5,1
  40fbdd:	add    ah,dh
  40fbdf:	ja     0x40fb77
  40fbe1:	std    
  40fbe2:	add    BYTE PTR [eax],al
  40fbe4:	ds inc edi
  40fbe6:	loope  0x40fbe8
  40fbe8:	stc    
  40fbe9:	xchg   esi,eax
  40fbea:	sbb    dh,BYTE PTR [ebp-0x2d9c0e2e]
  40fbf0:	pop    cx
  40fbf2:	aad    0x95
  40fbf4:	addr16 ret 0x5283
  40fbf8:	into   
  40fbf9:	(bad)  
  40fbfa:	adc    ax,0x42e7
  40fbfe:	push   edi
  40fbff:	das    
  40fc00:	inc    esi
  40fc01:	inc    eax
  40fc02:	xchg   DWORD PTR [ecx-0x77],edi
  40fc05:	mov    bl,0x8a
  40fc07:	gs and eax,0x10937211
  40fc0d:	retf   
  40fc0e:	dec    ebx
  40fc0f:	cwde   
  40fc10:	dec    ecx
  40fc11:	nop
  40fc12:	adc    dh,BYTE PTR [ecx]
  40fc14:	pop    ds
  40fc15:	push   ecx
  40fc16:	push   0x1a
  40fc18:	mov    BYTE PTR [edx-0xa9adf61],0xe
  40fc1f:	ret    0xd6f3
  40fc22:	sbb    eax,0x68e0a986
  40fc27:	cld    
  40fc28:	lds    ebx,FWORD PTR [edi]
  40fc2a:	jno    0x40fc59
  40fc2c:	test   ebx,edx
  40fc2e:	call   0x38d9c4eb
  40fc33:	xor    al,0x84
  40fc35:	inc    edi
  40fc36:	into   
  40fc37:	or     eax,0xfc43e89a
  40fc3c:	sub    DWORD PTR [edi-0x1b],ecx
  40fc3f:	xchg   DWORD PTR [edi],esp
  40fc41:	xor    al,0xe4
  40fc43:	nop
  40fc44:	cli    
  40fc45:	xchg   ebp,eax
  40fc46:	imul   edi,DWORD PTR fs:[edx],0x6975d305
  40fc4d:	ss push ecx
  40fc4f:	mov    ds:0x9ffc8910,eax
  40fc54:	push   edx
  40fc55:	aam    0xa7
  40fc57:	push   ecx
  40fc58:	adc    ebp,DWORD PTR [ebp+0x4a]
  40fc5b:	out    0x3b,al
  40fc5d:	es out dx,al
  40fc5f:	mov    cl,0xff
  40fc61:	and    eax,0x4a54bf9a
  40fc66:	adc    DWORD PTR [ebx-0x6fc4cb31],ebp
  40fc6c:	push   edx
  40fc6d:	push   0xc5027b6b
  40fc72:	push   edi
  40fc73:	xchg   ebp,eax
  40fc74:	xchg   edx,eax
  40fc75:	pop    edi
  40fc76:	sub    ch,BYTE PTR es:[ebx]
  40fc79:	leave  
  40fc7a:	ret    
  40fc7b:	shl    DWORD PTR [edx-0x36206747],cl
  40fc81:	push   ds
  40fc82:	xchg   DWORD PTR [esi],esp
  40fc84:	xchg   esi,eax
  40fc85:	pop    edx
  40fc86:	sbb    eax,0xe595dc9
  40fc8c:	js     0x40fc15
  40fc8e:	iret   
  40fc8f:	push   ss
  40fc90:	out    0x9e,al
  40fc92:	sbb    al,0xbe
  40fc94:	adc    BYTE PTR [eax+0x1d85cecc],0xb0
  40fc9b:	scas   eax,DWORD PTR es:[edi]
  40fc9c:	out    0xcb,eax
  40fc9e:	hlt    
  40fc9f:	cli    
  40fca0:	ds (bad) 
  40fca2:	rol    DWORD PTR cs:[ecx+0x3b875c4b],cl
  40fca9:	adc    DWORD PTR [ecx-0x4b],eax
  40fcac:	jb     0x40fcb8
  40fcae:	mov    al,0xf6
  40fcb0:	(bad)  
  40fcb1:	or     eax,0x2aac091b
  40fcb6:	dec    ebp
  40fcb7:	lahf   
  40fcb8:	adc    BYTE PTR [edi],cl
  40fcba:	neg    BYTE PTR [ecx+0x32]
  40fcbd:	loop   0x40fcb0
  40fcbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcc0:	retf   
  40fcc1:	jns    0x40fd37
  40fcc3:	adc    DWORD PTR [esi-0x7150b252],esi
  40fcc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcca:	jmp    0x40fcbd
  40fccc:	sbb    DWORD PTR [edi],0x467e99a3
  40fcd2:	int    0xf4
  40fcd4:	cmp    eax,0x9ee5645c
  40fcd9:	repnz fidiv DWORD PTR [esi+0x7]
  40fcdd:	into   
  40fcde:	add    BYTE PTR [ecx+0x43],ah
  40fce1:	sub    ebx,DWORD PTR [edi-0x1bc1fad2]
  40fce7:	cdq    
  40fce8:	push   esp
  40fce9:	jo     0x40fca1
  40fceb:	aam    0x51
  40fced:	pop    ebp
  40fcee:	imul   edx,DWORD PTR [edi],0xef670e22
  40fcf4:	out    dx,al
  40fcf5:	cmc    
  40fcf6:	cs aam 0xc7
  40fcf9:	rol    DWORD PTR [edx+0x5c],0x95
  40fcfd:	jmp    0x4fbcc2bd
  40fd02:	sub    esi,0x6b
  40fd05:	jecxz  0x40fcb3
  40fd07:	add    al,0x68
  40fd09:	iret   
  40fd0a:	loop   0x40fd51
  40fd0c:	xor    edi,ebx
  40fd0e:	dec    esi
  40fd0f:	xchg   edi,eax
  40fd10:	retf   0xa622
  40fd13:	rcl    DWORD PTR [bp+0x2f54],0x46
  40fd19:	push   ecx
  40fd1a:	jl     0x40fd3a
  40fd1c:	jle    0x40fcd2
  40fd1e:	cmp    ch,dl
  40fd20:	call   0x16d8:0xa4470bd0
  40fd27:	pusha  
  40fd28:	mov    cl,0xe8
  40fd2a:	jns    0x40fd6c
  40fd2c:	push   ebp
  40fd2d:	jle    0x40fd66
  40fd2f:	add    eax,0x8c00600e
  40fd34:	pop    esp
  40fd35:	sbb    BYTE PTR [edx+0xa7e581a],dl
  40fd3b:	dec    edx
  40fd3c:	mov    eax,ds:0xe13ed91
  40fd41:	mov    esp,0x4aacdcb6
  40fd46:	aas    
  40fd47:	dec    edx
  40fd48:	daa    
  40fd49:	xor    eax,DWORD PTR [edx]
  40fd4b:	outs   dx,BYTE PTR ds:[esi]
  40fd4c:	data16 je 0x40fce0
  40fd4f:	or     BYTE PTR [ecx],dl
  40fd51:	icebp  
  40fd52:	sub    eax,0xc2cc6883
  40fd57:	pop    es
  40fd58:	pop    ecx
  40fd59:	dec    edx
  40fd5a:	cmp    bh,0x5f
  40fd5d:	fcom   st(2)
  40fd5f:	leave  
  40fd60:	fcomp  st(2)
  40fd62:	and    al,0x14
  40fd64:	test   DWORD PTR [eax+edx*2+0x23],ebx
  40fd68:	mov    ch,0x94
  40fd6a:	outs   dx,DWORD PTR ds:[esi]
  40fd6b:	out    0x17,eax
  40fd6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd6e:	push   esi
  40fd6f:	call   0x63ddf9d3
  40fd74:	aaa    
  40fd75:	aam    0x83
  40fd77:	scas   eax,DWORD PTR es:[edi]
  40fd78:	add    BYTE PTR [ebx-0x4d],al
  40fd7b:	imul   ecx,DWORD PTR [ebx],0xd4625977
  40fd81:	pushf  
  40fd82:	mov    ebx,0xd4fbde75
  40fd87:	daa    
  40fd88:	dec    esi
  40fd89:	pushf  
  40fd8a:	pop    es
  40fd8b:	cs sahf 
  40fd8d:	cdq    
  40fd8e:	jmp    0x40fd6f
  40fd90:	dec    edi
  40fd91:	lock push ss
  40fd93:	push   cs
  40fd94:	mov    ecx,0xd16e112c
  40fd99:	mov    edx,0x7dfbc5bd
  40fd9e:	push   es
  40fd9f:	popf   
  40fda0:	pop    ds
  40fda1:	shr    BYTE PTR [eax-0xb1ce21a],cl
  40fda7:	inc    ecx
  40fda8:	pop    ebx
  40fda9:	sub    al,0xea
  40fdab:	popf   
  40fdac:	out    dx,al
  40fdad:	lea    ecx,[esi-0x118966c9]
  40fdb3:	sti    
  40fdb4:	andnps xmm0,XMMWORD PTR [ebx]
  40fdb7:	in     al,dx
  40fdb8:	inc    esp
  40fdb9:	pop    ebx
  40fdba:	xchg   edx,eax
  40fdbb:	das    
  40fdbc:	push   0x28
  40fdbe:	pop    ecx
  40fdbf:	push   edx
  40fdc0:	xchg   esp,eax
  40fdc1:	sbb    eax,0x4e4306
  40fdc6:	in     eax,dx
  40fdc7:	es dec edi
  40fdc9:	mov    esp,0x18bd8148
  40fdce:	lea    ecx,[eax]
  40fdd0:	pop    ebp
  40fdd1:	push   edi
  40fdd2:	dec    ecx
  40fdd3:	lea    ecx,[ebp+0x0]
  40fdd6:	ds push ebp
  40fdd8:	cmc    
  40fdd9:	gs inc ecx
  40fddb:	dec    ebx
  40fddc:	loopne 0x40fd70
  40fdde:	test   DWORD PTR [edi-0x6db4c731],0x835e7efc
  40fde8:	mov    bl,0xaf
  40fdea:	adc    ecx,DWORD PTR [ebx-0x797a56d0]
  40fdf0:	mov    bh,0x3e
  40fdf2:	sbb    al,0xb5
  40fdf4:	jne    0x40fd8d
  40fdf6:	mov    al,0x91
  40fdf8:	jle    0x40fe11
  40fdfa:	mov    bh,0x8e
  40fdfc:	jge    0x40fe0a
  40fdfe:	mov    BYTE PTR [edi-0x5de65299],ah
  40fe04:	fsubrp st(5),st
  40fe06:	add    esi,DWORD PTR [edi+ecx*4+0x6e04fdcc]
  40fe0d:	rcl    DWORD PTR [edx-0x1f7fd0c5],1
  40fe13:	pop    ebp
  40fe14:	pop    eax
  40fe15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe16:	int3   
  40fe17:	addr16 mov esi,0xff7e4ecf
  40fe1d:	xor    al,0xfb
  40fe1f:	sub    al,0x16
  40fe21:	lods   al,BYTE PTR ds:[esi]
  40fe22:	push   esp
  40fe23:	out    dx,eax
  40fe24:	xchg   edx,eax
  40fe25:	mov    eax,ds:0xe49bd506
  40fe2a:	ficomp DWORD PTR [edi+ebp*1-0x2b]
  40fe2e:	iret   
  40fe2f:	sti    
  40fe30:	pop    DWORD PTR [eax-0x4287da9f]
  40fe36:	push   ss
  40fe37:	out    0xb3,al
  40fe39:	shl    DWORD PTR [esi+eax*4],0xbd
  40fe3d:	dec    edi
  40fe3e:	jnp    0x40fe1b
  40fe40:	loopne 0x40fe57
  40fe42:	(bad)  
  40fe43:	mov    edx,0xc95df40e
  40fe48:	pop    esi
  40fe49:	stos   DWORD PTR es:[edi],eax
  40fe4a:	fs dec ebx
  40fe4c:	retf   
  40fe4d:	jbe    0x40fe66
  40fe4f:	or     edi,ebp
  40fe51:	not    DWORD PTR [edi-0x114e30fe]
  40fe57:	fnstenv [edx-0x417c4eb4]
  40fe5d:	int3   
  40fe5e:	add    DWORD PTR gs:[esi],eax
  40fe61:	iret   
  40fe62:	push   0x32f19707
  40fe67:	cmp    ah,BYTE PTR [eax+0xd]
  40fe6a:	inc    eax
  40fe6b:	cmp    DWORD PTR [ebx-0x66],0x21444984
  40fe72:	cli    
  40fe73:	dec    ebp
  40fe74:	popf   
  40fe75:	xor    cl,BYTE PTR [edx]
  40fe77:	cmp    al,BYTE PTR [esp+ebx*1+0x4219d571]
  40fe7e:	in     al,dx
  40fe7f:	jmp    0x1ff5554
  40fe84:	(bad)  
  40fe86:	outs   dx,DWORD PTR ds:[esi]
  40fe87:	arpl   WORD PTR [eax+0x2b7d5009],dx
  40fe8d:	xor    bh,bh
  40fe8f:	push   ebp
  40fe90:	call   0xb3b:0xb5d9fe7
  40fe97:	fild   DWORD PTR [eax-0x2f]
  40fe9a:	ret    0x11bc
  40fe9d:	dec    esi
  40fe9e:	xor    bh,BYTE PTR [ebp+0x45a3330d]
  40fea4:	lods   eax,DWORD PTR ds:[esi]
  40fea5:	dec    edx
  40fea6:	fstp   DWORD PTR [ebx+0xb]
  40fea9:	adc    BYTE PTR [eax],ah
  40feab:	str    WORD PTR [ecx+0x45]
  40feaf:	fsubr  QWORD PTR [esi+0x7444b076]
  40feb5:	gs xchg esi,ebx
  40feb8:	cld    
  40feb9:	repnz shl DWORD PTR [edi+0x7d],0x22
  40febe:	pop    ebp
  40febf:	mov    ecx,0xe6a8cef3
  40fec4:	out    dx,al
  40fec5:	rcl    DWORD PTR [edi],0x5e
  40fec8:	push   si
  40feca:	stc    
  40fecb:	mov    cl,0x49
  40fecd:	jo     0x40fedb
  40fecf:	bound  ebp,QWORD PTR [esi+eax*8-0x310f9c46]
  40fed6:	cdq    
  40fed7:	loopne 0x40fef2
  40fed9:	or     bh,dh
  40fedb:	xchg   BYTE PTR [eax-0x72],cl
  40fede:	dec    ecx
  40fedf:	mov    esi,0xfaec2d2b
  40fee4:	out    dx,eax
  40fee5:	sbb    ebx,esi
  40fee7:	xchg   esp,eax
  40fee8:	add    esi,esi
  40feea:	pusha  
  40feeb:	data16 aad 0xdd
  40feee:	scas   al,BYTE PTR es:[edi]
  40feef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fef0:	ret    
  40fef1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fef2:	mov    bh,0xa9
  40fef4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fef5:	pop    esp
  40fef6:	ror    ah,0xb2
  40fef9:	ds inc edi
  40fefb:	pusha  
  40fefc:	aam    0xcd
  40fefe:	or     al,0xd6
  40ff00:	shl    BYTE PTR [edi],0x95
  40ff03:	cmc    
  40ff04:	inc    edi
  40ff05:	inc    esi
  40ff06:	ret    0x3b18
  40ff09:	test   BYTE PTR [esi],ah
  40ff0b:	sub    edx,esi
  40ff0d:	call   0x5de3:0xb348e1a3
  40ff14:	xor    al,0x2d
  40ff16:	repz pop esi
  40ff18:	sub    ebp,eax
  40ff1a:	out    0x7e,al
  40ff1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff1d:	and    ecx,DWORD PTR [esi]
  40ff1f:	call   0xfdc0e17d
  40ff24:	icebp  
  40ff25:	add    esp,ecx
  40ff27:	(bad)
  40ff2a:	jmp    0x7067:0xef2746af
  40ff31:	add    bh,bl
  40ff33:	mov    al,0x84
  40ff35:	mov    ecx,0xda3fc569
  40ff3a:	aam    0xfe
  40ff3c:	cmc    
  40ff3d:	in     al,0x5b
  40ff3f:	loopne 0x40ffb7
  40ff41:	pop    edx
  40ff42:	bound  eax,QWORD PTR [ebx+0x1e]
  40ff45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff46:	xchg   DWORD PTR [ebx-0x2d],eax
  40ff49:	stc    
  40ff4a:	push   cs
  40ff4b:	mov    cl,0xbb
  40ff4d:	mov    al,ds:0x53dc567d
  40ff52:	push   0xffffffa5
  40ff54:	inc    esi
  40ff55:	pop    ebp
  40ff56:	dec    ebx
  40ff57:	pop    ds
  40ff58:	or     ch,BYTE PTR [edi-0x145d073]
  40ff5e:	and    bh,BYTE PTR [eax]
  40ff60:	aas    
  40ff61:	push   eax
  40ff62:	std    
  40ff63:	jle    0x40ff6d
  40ff65:	ret    
  40ff66:	out    dx,al
  40ff67:	aam    0xba
  40ff69:	or     eax,0x75b81a38
  40ff6e:	out    dx,eax
  40ff6f:	sahf   
  40ff70:	lahf   
  40ff71:	iret   
  40ff72:	test   BYTE PTR [esi+0x5d],cl
  40ff75:	xor    esp,DWORD PTR [edx+0x1b]
  40ff78:	bswap  esi
  40ff7a:	jo     0x40ff61
  40ff7c:	test   eax,0xbd7b56b8
  40ff81:	scas   eax,DWORD PTR es:[edi]
  40ff82:	fimul  DWORD PTR [ebx-0x1aeb1dae]
  40ff88:	mov    dh,0xc0
  40ff8a:	pop    es
  40ff8b:	pop    ecx
  40ff8c:	mov    ah,0xd5
  40ff8e:	pop    ebx
  40ff8f:	jae    0x40ff4b
  40ff91:	xchg   DWORD PTR [eax],ecx
  40ff93:	rol    BYTE PTR [edx-0x1d],1
  40ff96:	int    0x2
  40ff98:	pop    DWORD PTR [edi+0x68]
  40ff9b:	iret   
  40ff9c:	jl     0x410016
  40ff9e:	mov    bl,0x6a
  40ffa0:	into   
  40ffa1:	jnp    0x40ff40
  40ffa3:	dec    edx
  40ffa4:	mov    edi,0xd05583d
  40ffa9:	pop    ecx
  40ffaa:	js     0x40ff71
  40ffac:	and    ebx,DWORD PTR [ecx-0x27]
  40ffaf:	jno    0x41000a
  40ffb1:	call   0x3e2490c0
  40ffb6:	dec    edi
  40ffb7:	ss jb  0x41001e
  40ffba:	(bad)  
  40ffbb:	sbb    al,BYTE PTR [edi+0x4391624b]
  40ffc1:	jp     0x40ffba
  40ffc3:	aad    0x95
  40ffc5:	xchg   cl,ch
  40ffc7:	inc    ebx
  40ffc8:	or     eax,0xd856e8fc
  40ffcd:	pop    es
  40ffce:	or     cl,al
  40ffd0:	xchg   esi,eax
  40ffd1:	add    BYTE PTR [ebp+0x76],bh
  40ffd4:	pop    ebp
  40ffd5:	fadd   st,st(7)
  40ffd7:	repz pop ss
  40ffd9:	outs   dx,DWORD PTR ds:[esi]
  40ffda:	mov    ah,0xa3
  40ffdc:	sbb    edx,esi
  40ffde:	pop    ecx
  40ffdf:	cmp    BYTE PTR [ebp+0x1e],0xd3
  40ffe3:	and    al,0xfa
  40ffe5:	adc    eax,eax
  40ffe7:	int    0xb4
  40ffe9:	jns    0x410016
  40ffeb:	adc    al,0x3d
  40ffed:	jnp    0x410021
  40ffef:	(bad)  
  40fff0:	in     eax,0xb9
  40fff2:	inc    edx
  40fff3:	nop
  40fff4:	add    dh,ch
  40fff6:	dec    esp
  40fff7:	pop    edi
  40fff8:	test   ah,cl
  40fffa:	mov    bl,0xc8
  40fffc:	popa   
  40fffd:	test   al,0xb4
  40ffff:	ins    BYTE PTR es:[edi],dx
  410000:	stc    
  410001:	div    DWORD PTR [edx+0x7e]
  410004:	scas   eax,DWORD PTR es:[edi]
  410005:	(bad)  
  410008:	and    bh,0x5c
  41000b:	ror    DWORD PTR [ebx],0x4e
  41000e:	jecxz  0x40fffd
  410010:	dec    esi
  410011:	add    eax,0xe22a8f87
  410016:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410017:	xchg   ecx,eax
  410018:	stc    
  410019:	nop
  41001a:	push   eax
  41001b:	and    ebx,DWORD PTR [ebx+0x4079c011]
  410021:	stos   BYTE PTR es:[edi],al
  410022:	nop
  410023:	inc    ebx
  410024:	popf   
  410025:	cwde   
  410026:	adc    al,dl
  410028:	sub    BYTE PTR [ecx-0x3],dl
  41002b:	fstp   QWORD PTR [ebp+0x4b3dd211]
  410031:	sub    BYTE PTR [eax],ah
  410033:	xor    al,0x46
  410035:	fs mov esp,0x4f7b74a4
  41003b:	mov    ebp,DWORD PTR [esi-0xe]
  41003e:	call   0x7dd0:0x944be5d6
  410045:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410046:	add    ch,al
  410048:	or     DWORD PTR [ebx-0x8a0fc91],edi
  41004e:	or     ebp,ecx
  410050:	ins    BYTE PTR es:[edi],dx
  410051:	retf   0xa66d
  410054:	cmp    edx,ebx
  410056:	outs   dx,BYTE PTR ds:[esi]
  410057:	rcl    DWORD PTR [ebp+eiz*2+0x3b5bb014],0x25
  41005f:	jno    0x410054
  410061:	sbb    cl,bl
  410063:	ds mov edi,0x2cb29b5b
  410069:	daa    
  41006a:	xor    BYTE PTR [edx-0x41510bc5],0x1e
  410071:	inc    esp
  410072:	inc    ebx
  410073:	fadd   QWORD PTR fs:[ecx+0x12]
  410077:	pop    ebx
  410078:	or     DWORD PTR [ecx],0x491721d2
  41007e:	jae    0x410008
  410080:	sbb    edx,DWORD PTR [eax]
  410082:	fs mov ecx,0x45c86e35
  410088:	push   esp
  410089:	inc    esi
  41008a:	push   0xffffffd3
  41008c:	pop    ds
  41008d:	push   ss
  41008e:	cmp    eax,0xa4f979b6
  410093:	daa    
  410094:	inc    BYTE PTR [ebx-0x7c]
  410097:	sbb    eax,0x85c496dd
  41009c:	dec    edi
  41009d:	fwait
  41009e:	repnz inc ebx
  4100a0:	test   DWORD PTR [ebp-0x59],esi
  4100a3:	je     0x4100ca
  4100a5:	outs   dx,DWORD PTR ds:[esi]
  4100a6:	sub    BYTE PTR [edi+0x75],bh
  4100a9:	sbb    ebp,DWORD PTR [ebx+0x32]
  4100ac:	call   0xf61d:0x77bd36bf
  4100b3:	outs   dx,DWORD PTR ds:[esi]
  4100b4:	adc    DWORD PTR [ecx+0x613e37fd],esp
  4100ba:	and    al,0x16
  4100bc:	scas   al,BYTE PTR es:[edi]
  4100bd:	bound  ebp,QWORD PTR [edi+ecx*8]
  4100c0:	push   ebp
  4100c1:	adc    eax,0xa210070
  4100c6:	dec    ecx
  4100c7:	push   ecx
  4100c8:	out    dx,al
  4100c9:	test   eax,0xf4ea90d3
  4100ce:	test   eax,0xff0bdacf
  4100d3:	repz or DWORD PTR [ecx-0x78],ecx
  4100d7:	std    
  4100d8:	cmp    ecx,DWORD PTR [edi-0x6e]
  4100db:	arpl   WORD PTR [edx+0x7a59ba1b],cx
  4100e1:	cmc    
  4100e2:	icebp  
  4100e3:	out    dx,al
  4100e4:	or     al,0x81
  4100e6:	aam    0xa5
  4100e8:	cmp    eax,0x70f86dfb
  4100ed:	cmc    
  4100ee:	pop    ds
  4100ef:	and    DWORD PTR [edx-0x40],eax
  4100f2:	lock pop edx
  4100f4:	repz fcomp DWORD PTR [edx+0x45c4c6fd]
  4100fb:	jge    0x4100ab
  4100fd:	arpl   WORD PTR [ebx+edi*4+0x10d4c4cc],dx
  410104:	mov    BYTE PTR [ecx+ebp*2-0x7af695bb],cl
  41010b:	mov    esi,0xd5e7848e
  410110:	or     al,0x2
  410112:	add    ch,BYTE PTR [ebp+0x7d7429ce]
  410118:	sub    ebx,DWORD PTR es:[edx+ebx*4]
  41011c:	les    edx,FWORD PTR [ebx-0x2a02cf73]
  410122:	in     al,0xe
  410124:	pop    ds
  410125:	ficom  WORD PTR [ecx]
  410127:	fisttp QWORD PTR [edi]
  410129:	cdq    
  41012a:	int3   
  41012b:	repz popf 
  41012d:	es leave 
  41012f:	iret   
  410130:	popf   
  410131:	shrd   DWORD PTR [edx-0x57],esp,cl
  410135:	dec    esi
  410136:	ins    DWORD PTR es:[edi],dx
  410137:	push   ds
  410138:	lahf   
  410139:	sbb    BYTE PTR [ecx+0x41ab27c1],cl
  41013f:	jg     0x41010f
  410141:	jmp    0xa6bfd1e1
  410146:	mov    DWORD PTR [edi+0x65],ecx
  410149:	test   BYTE PTR [ebx+0x12cef1e5],bh
  41014f:	sbb    DWORD PTR [ecx],edi
  410151:	outs   dx,DWORD PTR ds:[esi]
  410152:	test   al,0x23
  410154:	outs   dx,BYTE PTR ds:[esi]
  410155:	mov    edx,0x6a413fdb
  41015a:	jno    0x4100f0
  41015c:	xchg   edi,eax
  41015d:	push   ecx
  41015e:	sub    DWORD PTR [edi-0x66afa95b],0x1045f50a
  410168:	fcomip st,st(1)
  41016a:	(bad)  
  41016b:	mov    dl,0xe0
  41016d:	addr16 (bad) 
  41016f:	std    
  410170:	adc    al,0x33
  410172:	out    dx,eax
  410173:	sub    BYTE PTR ds:0x8f0d37f7,bl
  410179:	xlat   BYTE PTR ds:[ebx]
  41017a:	(bad)  
  41017b:	icebp  
  41017c:	or     dl,bh
  41017e:	and    eax,0xf3a9aaf7
  410183:	pop    edx
  410184:	mov    al,0xc1
  410186:	daa    
  410187:	fmul   DWORD PTR [esi]
  410189:	aad    0xa
  41018b:	sub    BYTE PTR [ebp+0x20],0xf1
  41018f:	ror    DWORD PTR [esi+0x7d],1
  410192:	(bad)  
  410194:	or     BYTE PTR [esi-0x15],dl
  410197:	xchg   esp,eax
  410198:	push   ebp
  410199:	sub    eax,0x638d792a
  41019e:	mov    dl,dl
  4101a0:	out    0x9,eax
  4101a2:	je     0x4101b8
  4101a4:	out    dx,eax
  4101a5:	arpl   WORD PTR [edx+0x56],dx
  4101a8:	mov    ah,0x80
  4101aa:	xor    eax,0x1d6c4bf2
  4101af:	ret    0x872b
  4101b2:	arpl   WORD PTR [esi+0x2d],si
  4101b5:	or     ah,BYTE PTR [esi+0x7f88965f]
  4101bb:	(bad)  
  4101bd:	sub    edi,DWORD PTR [eax+0x2d388aa8]
  4101c3:	push   esp
  4101c4:	pop    esi
  4101c5:	jmp    0xc396833d
  4101ca:	in     al,dx
  4101cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101cc:	es inc ecx
  4101ce:	sub    eax,0x552437db
  4101d3:	fdivr  DWORD PTR [edi+0x50]
  4101d6:	xchg   edx,eax
  4101d7:	les    eax,FWORD PTR [ecx-0x30d5ad37]
  4101dd:	jnp    0x410251
  4101df:	sbb    eax,0x4fd6606a
  4101e4:	cmp    DWORD PTR [ecx+0x45],ecx
  4101e7:	pop    sp
  4101e9:	adc    al,0x6d
  4101eb:	mov    ebp,0xabf7a588
  4101f0:	add    esi,DWORD PTR [ebp+0x2f]
  4101f3:	arpl   WORD PTR [ebx-0x1cf6e6d9],bp
  4101f9:	out    0x51,al
  4101fb:	in     eax,0xa6
  4101fd:	or     DWORD PTR [edx-0x5c],edx
  410200:	pop    esi
  410201:	shl    DWORD PTR [edi],cl
  410203:	jmp    0xbad:0xcda2ce97
  41020a:	add    BYTE PTR [ecx-0x4fc965d4],ah
  410210:	sub    bl,BYTE PTR [edi-0x51937d69]
  410216:	push   ebx
  410217:	das    
  410218:	jg     0x410216
  41021a:	std    
  41021b:	dec    esp
  41021c:	push   ebx
  41021d:	call   0x75f50cd0
  410222:	and    cl,al
  410224:	cmp    bh,BYTE PTR [eax-0x120bbebb]
  41022a:	inc    edx
  41022b:	fwait
  41022c:	stos   DWORD PTR es:[edi],eax
  41022d:	repz adc DWORD PTR [edx+0x1359afe4],eax
  410234:	jae    0x4101cd
  410236:	repz jge 0x41021d
  410239:	inc    ebp
  41023a:	aam    0xb1
  41023c:	rcr    BYTE PTR [ebp-0x33066f40],cl
  410242:	jmp    0x410208
  410244:	idiv   DWORD PTR [ebx+edx*2+0x72057ac0]
  41024b:	cmp    dh,BYTE PTR [esi+0x21169d25]
  410251:	mov    esi,0xf05e6afd
  410256:	sti    
  410257:	js     0x410206
  410259:	fnsave [edx]
  41025b:	call   0x8b49:0x50a18f2a
  410262:	ret    0x96d3
  410265:	ret    
  410266:	fsubr  st(0),st
  410268:	mov    dh,0xd3
  41026a:	(bad)  
  41026c:	inc    eax
  41026d:	das    
  41026e:	popf   
  41026f:	add    eax,0xeeb171fe
  410274:	ds mov dh,0x8
  410277:	call   0x402c7eb3
  41027c:	gs push esi
  41027e:	int    0xc6
  410280:	mov    cl,0xa5
  410282:	test   al,0xe
  410284:	scas   eax,DWORD PTR es:[edi]
  410285:	push   ebp
  410286:	jecxz  0x4102ea
  410288:	jge    0x41026a
  41028a:	xchg   edi,eax
  41028b:	(bad)  
  41028c:	push   ss
  41028d:	xor    eax,DWORD PTR [ecx-0x2393b1b3]
  410293:	push   ecx
  410294:	jo     0x41023e
  410296:	mov    bh,0xc3
  410298:	test   eax,0xb6534a4a
  41029d:	daa    
  41029e:	xchg   edi,eax
  41029f:	cld    
  4102a0:	inc    edi
  4102a1:	inc    DWORD PTR [edi+0x15]
  4102a4:	pop    eax
  4102a5:	pop    ebx
  4102a6:	mov    bl,BYTE PTR [esi-0x47]
  4102a9:	mov    ebx,0x92e41491
  4102ae:	push   ss
  4102af:	je     0x410251
  4102b1:	cmc    
  4102b2:	dec    edi
  4102b3:	inc    ax
  4102b5:	sbb    eax,0xebceff5e
  4102ba:	xchg   edx,eax
  4102bb:	(bad)  
  4102bc:	and    BYTE PTR [eax],ah
  4102be:	js     0x4102fa
  4102c0:	arpl   WORD PTR [esp+edi*4],bx
  4102c3:	cdq    
  4102c4:	mov    eax,ds:0x68d659e1
  4102c9:	push   cs
  4102ca:	in     al,0xfa
  4102cc:	jb     0x410342
  4102ce:	outs   dx,BYTE PTR ds:[esi]
  4102cf:	push   ss
  4102d0:	add    BYTE PTR ds:0x3f1e0b9c,dl
  4102d6:	inc    edi
  4102d7:	loopne 0x410310
  4102d9:	sub    BYTE PTR [esi-0x583c3fee],ah
  4102df:	mov    bh,0x17
  4102e1:	fnstenv fs:[edx]
  4102e4:	icebp  
  4102e5:	aam    0x24
  4102e7:	fsubr  st,st(0)
  4102e9:	repz and al,0xab
  4102ec:	iret   
  4102ed:	jnp    0x4102cc
  4102ef:	jae    0x41029f
  4102f1:	mov    ebx,0xe61c6de0
  4102f6:	repz jno 0x410354
  4102f9:	add    DWORD PTR [edx+0x7719318c],edi
  4102ff:	jbe    0x410362
  410301:	in     eax,dx
  410302:	push   ebx
  410303:	scas   eax,DWORD PTR es:[edi]
  410304:	xchg   BYTE PTR [esi],bh
  410306:	or     eax,0xfbc49c2f
  41030b:	jl     0x4102ef
  41030d:	clc    
  41030e:	ret    
  41030f:	ins    DWORD PTR es:[edi],dx
  410310:	into   
  410311:	push   esp
  410312:	repz jae 0x410299
  410315:	stos   BYTE PTR es:[edi],al
  410316:	ja     0x4102c5
  410318:	fs jb  0x410309
  41031b:	cmp    BYTE PTR ds:[ecx+0x4e],0x3
  410320:	test   eax,0x16acdc09
  410325:	repnz pop ss
  410327:	lahf   
  410328:	push   ebp
  410329:	mov    cl,0x39
  41032b:	rcl    BYTE PTR [edx],0xcb
  41032e:	push   cs
  41032f:	or     DWORD PTR [edi+0x7f],esi
  410332:	sbb    DWORD PTR [ecx+0x2c],esp
  410335:	push   esi
  410336:	inc    edi
  410337:	xor    esi,esp
  410339:	pushf  
  41033a:	(bad)  
  41033b:	lahf   
  41033c:	adc    dl,BYTE PTR ds:0x3dd836fb
  410342:	mov    edi,0x3b05cedd
  410347:	inc    edi
  410348:	and    BYTE PTR [esi-0x67],0x2f
  41034c:	pop    es
  41034d:	or     al,al
  41034f:	mov    edi,0xa23880db
  410354:	inc    ebx
  410355:	sahf   
  410356:	ror    dl,0x5c
  410359:	iret   
  41035a:	hlt    
  41035b:	push   ebx
  41035c:	mov    ch,0x82
  41035e:	(bad)  
  41035f:	idiv   dl
  410361:	sub    esp,eax
  410363:	cli    
  410364:	dec    eax
  410365:	pop    esi
  410366:	in     al,dx
  410367:	fild   WORD PTR [edi]
  410369:	jecxz  0x410349
  41036b:	xchg   ebp,eax
  41036c:	repz xchg ebx,eax
  41036e:	stos   DWORD PTR es:[edi],eax
  41036f:	or     DWORD PTR [esi],0xffffff95
  410372:	mov    ds:0xa18fd136,eax
  410377:	push   ss
  410378:	cmp    eax,0x4d97b261
  41037d:	and    al,0x79
  41037f:	push   ds
  410380:	hlt    
  410381:	mov    edx,0x26a68c7d
  410386:	call   0x6b4406bb
  41038b:	jno    0x4103cb
  41038d:	(bad)  
  41038e:	cmc    
  41038f:	xchg   ebx,eax
  410390:	xlat   BYTE PTR ds:[ebx]
  410391:	ins    DWORD PTR es:[edi],dx
  410392:	mov    bh,0xe9
  410394:	ins    BYTE PTR es:[edi],dx
  410395:	fdivr  DWORD PTR [edi]
  410397:	pop    ebp
  410398:	mov    ?,ebx
  41039a:	adc    al,al
  41039c:	out    0x1,eax
  41039e:	pop    ecx
  41039f:	xchg   edx,eax
  4103a0:	xor    al,0x84
  4103a2:	inc    ecx
  4103a3:	imul   esi,eax,0x80d546d9
  4103a9:	inc    edx
  4103aa:	dec    edx
  4103ab:	sbb    BYTE PTR [eax-0x19],dl
  4103ae:	fist   WORD PTR [ecx]
  4103b0:	pop    ss
  4103b1:	mov    bl,0x94
  4103b3:	(bad)  
  4103b5:	xor    ah,dl
  4103b7:	push   esp
  4103b8:	inc    edi
  4103b9:	int3   
  4103ba:	fimul  WORD PTR [edx]
  4103bc:	jle    0x410389
  4103be:	shr    ebx,0x64
  4103c1:	scas   eax,DWORD PTR es:[edi]
  4103c2:	jge    0x41042e
  4103c4:	bound  esp,QWORD PTR [esi-0x52fa079c]
  4103ca:	pusha  
  4103cb:	jmp    0x4103ff
  4103cd:	aad    0x11
  4103cf:	mov    ds:0x70d4cf5,eax
  4103d4:	pop    ds
  4103d5:	ror    BYTE PTR [edi+edx*8-0x1dfa4539],0xf8
  4103dd:	fcmovnbe st,st(0)
  4103df:	xchg   ebx,eax
  4103e0:	jge    0x4103a6
  4103e2:	imul   ebp,DWORD PTR [edx+0x25],0x1cd90232
  4103e9:	adc    DWORD PTR [esp+ecx*2-0x34],eax
  4103ed:	ret    
  4103ee:	xor    eax,0xbc4c1d77
  4103f3:	test   al,0xe
  4103f5:	shr    DWORD PTR [edx],cl
  4103f7:	pop    ds
  4103f8:	fild   QWORD PTR [ecx]
  4103fa:	fwait
  4103fb:	mov    edi,ecx
  4103fd:	repz or bh,BYTE PTR [ebp-0x3c]
  410401:	jmp    0x897a:0xcd57e36b
  410408:	fisubr DWORD PTR [eax-0x37]
  41040b:	in     al,dx
  41040c:	in     al,0x60
  41040e:	inc    ecx
  41040f:	rcl    DWORD PTR [edi-0xe],1
  410412:	jbe    0x410454
  410414:	mov    edi,0x667249b4
  410419:	je     0x41042d
  41041b:	add    dl,BYTE PTR [edi+0x54162b41]
  410421:	adc    DWORD PTR [edx+0x6b071b89],0x49
  410428:	lods   eax,DWORD PTR ds:[esi]
  410429:	loope  0x41041a
  41042b:	and    edi,esp
  41042d:	mov    DWORD PTR [eax-0x11],edx
  410430:	scas   al,BYTE PTR es:[edi]
  410431:	fisubr WORD PTR [ecx-0x17]
  410434:	and    BYTE PTR [edi],cl
  410436:	push   esi
  410437:	pop    edi
  410438:	jne    0x410480
  41043a:	xor    ecx,ecx
  41043c:	(bad)  
  41043e:	cdq    
  41043f:	dec    ebp
  410440:	add    BYTE PTR [ecx+edi*4+0x601be416],ah
  410447:	mov    ds:0x7a15a428,al
  41044c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41044d:	cmp    esi,DWORD PTR [eax-0x18]
  410450:	loop   0x41040c
  410452:	pop    esi
  410453:	ret    0x8e72
  410456:	ins    BYTE PTR es:[edi],dx
  410457:	adc    al,0xf8
  410459:	sbb    DWORD PTR [esi-0x12],ebp
  41045c:	or     ch,BYTE PTR [ebp-0x7c]
  41045f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410460:	mov    cl,0x37
  410462:	or     bl,BYTE PTR [ecx]
  410464:	xor    dl,BYTE PTR [edx]
  410466:	cmp    DWORD PTR [esi],0x23
  410469:	inc    esp
  41046a:	mov    edx,0x74add491
  41046f:	retf   0x89eb
  410472:	dec    edi
  410473:	imul   edi,DWORD PTR [esi-0x44],0xcd52dffc
  41047a:	mov    cl,0xa1
  41047c:	push   cs
  41047d:	dec    edx
  41047e:	mov    BYTE PTR [edx-0x1eed00d7],dh
  410484:	sub    eax,0x556aeb54
  410489:	fsub   QWORD PTR [esi+esi*1]
  41048c:	jl     0x4104ca
  41048e:	jl     0x410504
  410490:	mov    ch,BYTE PTR [ebp+0x72]
  410493:	xlat   BYTE PTR ds:[ebx]
  410494:	test   BYTE PTR [ebx],ah
  410496:	cdq    
  410497:	aaa    
  410498:	mov    eax,ds:0x919b090
  41049d:	pop    ds
  41049e:	jno    0x410509
  4104a0:	out    dx,al
  4104a1:	mov    ch,0x6d
  4104a3:	mov    ch,BYTE PTR [edx-0x3f]
  4104a6:	xchg   ebx,eax
  4104a7:	push   esp
  4104a8:	mov    ah,0x8e
  4104aa:	mul    BYTE PTR [edx]
  4104ac:	pop    ss
  4104ad:	xor    edi,DWORD PTR [edi]
  4104af:	(bad)  
  4104b0:	cmp    ch,BYTE PTR [eax-0x3f87f857]
  4104b6:	mov    edi,ebp
  4104b8:	fldenv [edi+eax*4+0x4e]
  4104bc:	ret    0xfff3
  4104bf:	repz jmp 0x37ecf909
  4104c5:	adc    bh,bh
  4104c7:	adc    al,0xce
  4104c9:	retf   0xa948
  4104cc:	ror    BYTE PTR [esi-0x66],1
  4104cf:	popa   
  4104d0:	sub    edi,edi
  4104d2:	jb     0x4104a8
  4104d4:	pop    esp
  4104d5:	jle    0x410490
  4104d7:	pop    esi
  4104d8:	sub    ebp,DWORD PTR [edx+0x78]
  4104db:	push   edx
  4104dc:	cdq    
  4104dd:	push   0xfef12a86
  4104e2:	push   esp
  4104e3:	push   edi
  4104e4:	cmc    
  4104e5:	jg     0x41046d
  4104e7:	cmc    
  4104e8:	mov    ecx,0x3e7425f1
  4104ed:	adc    DWORD PTR [ebx],ebx
  4104ef:	out    dx,al
  4104f0:	imul   edx,DWORD PTR [ecx],0xffffffa8
  4104f3:	add    eax,0x64663bf
  4104f8:	add    BYTE PTR [ebp+0xc77d4f9],cl
  4104fe:	(bad)  
  410500:	jmp    0x41054e
  410502:	cmp    dh,BYTE PTR [ebp-0x2c07fb25]
  410508:	jle    0x410494
  41050a:	icebp  
  41050b:	shl    BYTE PTR [esp+ecx*4-0x42c81b63],1
  410512:	leave  
  410513:	out    0x37,al
  410515:	or     DWORD PTR [edi+eax*4+0x54],0x6f6f0ca2
  41051d:	xchg   dh,bl
  41051f:	jmp    0xba8ebed1
  410524:	jp     0x4104e7
  410526:	loop   0x4104f8
  410528:	lock mov ch,0x8b
  41052b:	mov    al,ds:0x6c0322cb
  410530:	aas    
  410531:	mov    edx,0xe6b5b00e
  410536:	cmp    eax,0x212ca2ba
  41053b:	pop    ecx
  41053c:	or     DWORD PTR [eax-0x3e],0x8789aea1
  410543:	(bad)  
  410544:	mov    dh,0xf6
  410546:	in     eax,0x3c
  410548:	loopne 0x410553
  41054a:	sub    BYTE PTR [esi],ah
  41054c:	and    BYTE PTR [ebp-0x9],al
  41054f:	into   
  410550:	mov    edx,0x1bea966f
  410555:	mov    al,0xb0
  410557:	jmp    0x6bd8:0x5c80540c
  41055e:	mov    ?,WORD PTR [ebp-0x39]
  410561:	xor    eax,0x80699368
  410566:	dec    edi
  410567:	cmp    al,0xbc
  410569:	push   es
  41056a:	sbb    eax,0x926bb990
  41056f:	mov    al,0xb1
  410571:	(bad)  
  410572:	mov    esp,ecx
  410574:	(bad)  
  410575:	or     eax,0xbe5e05f9
  41057a:	sbb    dh,bl
  41057c:	jb     0x4105f4
  41057e:	sahf   
  41057f:	cmp    eax,0xcc3a3d3e
  410584:	adc    DWORD PTR [edi-0x33],esi
  410587:	add    al,0x86
  410589:	sub    eax,0xf0f52c9f
  41058e:	inc    eax
  41058f:	inc    ebp
  410590:	xor    ebx,DWORD PTR [esi-0x25f1dd38]
  410596:	jmp    0xdad540a7
  41059b:	mov    eax,ds:0x4f4306db
  4105a0:	into   
  4105a1:	sar    eax,0xc8
  4105a4:	xlat   BYTE PTR ds:[bx]
  4105a6:	popa   
  4105a7:	jle    0x41056c
  4105a9:	(bad)  
  4105aa:	cmp    cl,cl
  4105ac:	sbb    ah,BYTE PTR [ecx]
  4105ae:	call   0x3496:0x6d168c9f
  4105b5:	xor    al,0xeb
  4105b7:	test   al,0x78
  4105b9:	jno    0x410545
  4105bb:	dec    ebp
  4105bc:	inc    esp
  4105bd:	sub    eax,0x2d992fd8
  4105c2:	mov    ds:0xa23b4182,eax
  4105c7:	nop
  4105c8:	jnp    0x410640
  4105ca:	outs   dx,BYTE PTR ds:[esi]
  4105cb:	xchg   BYTE PTR [esi-0x44],cl
  4105ce:	(bad)  
  4105cf:	(bad)  
  4105d0:	fbstp  TBYTE PTR [ecx]
  4105d2:	sar    ah,cl
  4105d4:	imul   esp,DWORD PTR [ecx-0x12],0xc58f6783
  4105db:	lds    edx,FWORD PTR [eax+0x55]
  4105de:	adc    eax,0xade594e
  4105e3:	retf   0x25f
  4105e6:	add    al,0xa6
  4105e8:	lock add ebp,DWORD PTR [ecx+0x6acd3ca7]
  4105ef:	inc    edx
  4105f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105f1:	paddusw mm6,QWORD PTR [ebx-0x540b1d48]
  4105f8:	enter  0xf661,0x2c
  4105fc:	out    dx,al
  4105fd:	push   eax
  4105fe:	ficom  DWORD PTR [eax-0x5da519af]
  410604:	xor    eax,0x3a3ff6e3
  410609:	lds    esp,FWORD PTR [edx-0x17]
  41060c:	fcomp  DWORD PTR [ebp+0x7d6bbb80]
  410612:	(bad)  
  410613:	gs jb  0x410636
  410616:	push   0xf2337122
  41061b:	nop
  41061c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41061d:	ss jge 0x410681
  410620:	push   ebx
  410621:	mov    bh,0xa1
  410623:	lahf   
  410624:	jmp    0xc1c5:0x73c0d41b
  41062b:	repnz mov esp,0xe93c2ed2
  410631:	int    0x16
  410633:	push   esp
  410634:	xchg   esi,eax
  410635:	mov    ecx,0x61a978b5
  41063a:	dec    edi
  41063b:	out    dx,eax
  41063c:	rcr    BYTE PTR [ebx],cl
  41063e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41063f:	shl    ecx,cl
  410641:	mov    DWORD PTR [esi],edi
  410643:	mov    bh,0x3a
  410645:	out    dx,eax
  410646:	sbb    eax,0x29458e98
  41064b:	ja     0x41069e
  41064d:	mov    eax,ds:0x1c6270
  410652:	xor    BYTE PTR ds:0xf1cc8a43,ah
  410658:	iret   
  410659:	xor    al,0xd8
  41065b:	shl    DWORD PTR [ebx],cl
  41065d:	pusha  
  41065e:	jg     0x4105ef
  410660:	and    eax,0x5d0479e6
  410665:	rcr    DWORD PTR [ebx],1
  410667:	loopne 0x410651
  410669:	repnz push eax
  41066b:	jo     0x410689
  41066d:	inc    edi
  41066e:	mov    esi,0x3d663957
  410673:	pop    edi
  410674:	pop    ebx
  410675:	adc    BYTE PTR [edx+eiz*4-0x63],bl
  410679:	mov    eax,ds:0x4d54b209
  41067e:	les    ebx,FWORD PTR [ebp-0x56db22e5]
  410684:	shr    cl,0xcd
  410687:	sbb    esi,eax
  410689:	mov    ebp,0x30e516e8
  41068e:	add    al,0xe
  410690:	sub    cl,BYTE PTR [edi+edi*1-0x74]
  410694:	cmp    DWORD PTR [edi],ecx
  410696:	sbb    bh,BYTE PTR ds:0xfed6c41f
  41069c:	inc    esi
  41069d:	stos   DWORD PTR es:[edi],eax
  41069e:	xchg   ebx,eax
  41069f:	lods   eax,DWORD PTR ds:[esi]
  4106a0:	xchg   ebx,eax
  4106a1:	stos   BYTE PTR es:[edi],al
  4106a2:	inc    esi
  4106a3:	sahf   
  4106a4:	fidiv  WORD PTR [ebx-0x2b4b524]
  4106aa:	cmp    eax,0xbd50536a
  4106af:	adc    al,BYTE PTR [eax]
  4106b1:	enter  0xc6ef,0x66
  4106b5:	add    eax,0x6f9c1cff
  4106ba:	(bad)  
  4106bb:	pop    edx
  4106bc:	xchg   esi,eax
  4106bd:	mov    eax,0x9e4b644
  4106c2:	lods   al,BYTE PTR ds:[esi]
  4106c3:	mov    esi,0x3088b1fd
  4106c8:	stos   DWORD PTR es:[edi],eax
  4106c9:	and    ebx,esi
  4106cb:	lahf   
  4106cc:	push   esp
  4106cd:	fcmovbe st,st(3)
  4106cf:	or     BYTE PTR [ecx+0x15f27bb9],dh
  4106d5:	xor    BYTE PTR ds:0xaff16d,dh
  4106db:	cmp    esi,DWORD PTR [esp+edi*2+0x1c]
  4106df:	stc    
  4106e0:	aaa    
  4106e1:	sbb    BYTE PTR [ebx-0x2a],dh
  4106e4:	add    eax,0x7493f677
  4106e9:	adc    cl,BYTE PTR [edx+ebp*4-0x3a82a2d7]
  4106f0:	rol    BYTE PTR [edx-0x80],1
  4106f3:	sub    eax,0xf768f8d
  4106f8:	add    edi,DWORD PTR gs:[ebx+0x4f97112a]
  4106ff:	push   edx
  410700:	aam    0x78
  410702:	fnstenv [ebx+edx*8]
  410705:	mov    ?,esi
  410707:	add    eax,0xc2ed5980
  41070c:	hlt    
  41070d:	jae    0x4106d2
  41070f:	fcom   QWORD PTR [esi+eiz*8-0x35983af3]
  410716:	mov    WORD PTR [edi-0x7e8209cd],fs
  41071c:	fidiv  WORD PTR [ecx]
  41071e:	fnstcw WORD PTR [edi]
  410720:	std    
  410721:	test   al,dh
  410723:	sbb    BYTE PTR [edx+0x5665619f],bl
  410729:	cdq    
  41072a:	shl    BYTE PTR [edi-0x181c5b53],cl
  410730:	inc    ebp
  410731:	repz mov eax,ds:0x108cbf67
  410737:	push   ebx
  410738:	in     al,dx
  410739:	sub    ecx,DWORD PTR [edi-0x15]
  41073c:	call   0xdfec:0x5f49fef7
  410743:	(bad)  
  410744:	loopne 0x410731
  410746:	addr16 out dx,eax
  410748:	cmp    ecx,esp
  41074a:	imul   eax,ebx,0xffffffda
  41074d:	scas   eax,DWORD PTR es:[edi]
  41074e:	call   0x30cc7e42
  410753:	push   0xe
  410755:	test   BYTE PTR [ecx+ebp*4],al
  410758:	inc    BYTE PTR [eax-0x64b1c07a]
  41075e:	js     0x4107b6
  410760:	mov    DWORD PTR [esi-0x72],ecx
  410763:	sub    ah,ch
  410765:	xchg   ebp,eax
  410766:	fstp   DWORD PTR [edi-0x4e]
  410769:	es in  al,0x41
  41076c:	cmp    BYTE PTR [ebp-0x57],ah
  41076f:	jae    0x410752
  410771:	sbb    bl,BYTE PTR [ecx+0x53]
  410774:	jne    0x4107dd
  410776:	cmc    
  410777:	sbb    ch,BYTE PTR [ecx+0x43]
  41077a:	jo     0x41075a
  41077c:	jo     0x41071f
  41077e:	dec    ebx
  410780:	jno    0x4107c2
  410782:	sub    edx,edi
  410784:	out    dx,eax
  410785:	jnp    0x4107da
  410787:	mov    ch,0x6
  410789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41078a:	inc    edx
  41078b:	pop    ds
  41078c:	and    esi,ecx
  41078e:	inc    esi
  41078f:	(bad)  
  410790:	pop    ebx
  410791:	push   cs
  410792:	mov    ebp,0xbabee365
  410797:	stos   DWORD PTR es:[edi],eax
  410798:	mov    esp,0xd60d9f8c
  41079d:	rcl    BYTE PTR [eax+ebx*8-0x70034b8e],cl
  4107a4:	ss mov cl,0x33
  4107a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107a8:	mov    ds,WORD PTR [ecx+eax*1]
  4107ab:	or     BYTE PTR [ebp-0x5a],ah
  4107ae:	test   DWORD PTR cs:[esi+eiz*2],eax
  4107b2:	iret   
  4107b3:	inc    ebp
  4107b4:	mov    BYTE PTR [eax-0x4b8a51f3],0xe3
  4107bb:	cmp    eax,0xdfa5c9f4
  4107c0:	imul   BYTE PTR [ecx-0x60c9d780]
  4107c6:	xor    al,BYTE PTR [ecx+0x6da87240]
  4107cc:	std    
  4107cd:	xor    ebp,esp
  4107cf:	sub    eax,0xf8fd770b
  4107d4:	cmp    al,0x7d
  4107d6:	jmp    ebx
  4107d8:	xor    esi,DWORD PTR [eax]
  4107da:	rcl    DWORD PTR [edi+ebx*8],1
  4107dd:	jmp    0x8a01:0x3b22ae01
  4107e4:	loop   0x410767
  4107e6:	arpl   WORD PTR [ebx-0x31e1532f],si
  4107ec:	sub    ch,ah
  4107ee:	xor    dh,BYTE PTR [ebp-0x63]
  4107f1:	cld    
  4107f2:	fs jmp 0x12bb35b
  4107f8:	xlat   BYTE PTR ds:[ebx]
  4107f9:	pop    DWORD PTR [esi]
  4107fb:	push   es
  4107fc:	push   es
  4107fd:	out    0x36,al
  4107ff:	pop    ebx
  410800:	jo     0x41083a
  410802:	jl     0x410882
  410804:	aam    0xa8
  410806:	sbb    al,0x9b
  410808:	mov    ch,0x1c
  41080a:	inc    edi
  41080b:	jmp    FWORD PTR [edi]
  41080d:	inc    ecx
  41080e:	adc    DWORD PTR [ecx],0x6b
  410811:	jecxz  0x41087b
  410813:	xlat   BYTE PTR ds:[ebx]
  410814:	mov    DWORD PTR [edi],eax
  410816:	xchg   esp,eax
  410817:	inc    ebx
  410818:	push   ebx
  410819:	and    ch,bl
  41081b:	cs mov bl,0x87
  41081e:	leave  
  41081f:	loop   0x41087e
  410821:	push   0xffffff9b
  410823:	mov    dl,0xa1
  410825:	add    al,0xfe
  410827:	cs or  al,0x7c
  41082a:	bound  esi,QWORD PTR [edi+ebx*4]
  41082d:	mov    ds:0x48682674,al
  410832:	aad    0x1
  410834:	sbb    bl,cl
  410836:	arpl   WORD PTR [eax-0x778b2fcd],di
  41083c:	repz jo 0x41089d
  41083f:	div    BYTE PTR [edx]
  410841:	shl    BYTE PTR [esi],0x43
  410844:	(bad)  
  410845:	leave  
  410846:	xor    eax,0x27e2aea1
  41084b:	dec    eax
  41084c:	jp     0x41084d
  41084e:	and    DWORD PTR [eax-0x60d12091],esi
  410854:	mov    esi,0xd69354cd
  410859:	mov    edi,0xa8ce4ae5
  41085e:	iret   
  41085f:	and    al,0x4a
  410861:	stos   BYTE PTR es:[edi],al
  410862:	jnp    0x410858
  410864:	mov    al,fs:0x6e29c9a
  41086a:	xchg   esp,eax
  41086b:	dec    ecx
  41086c:	mov    eax,0xcf8076fa
  410871:	clc    
  410872:	push   ds
  410873:	pop    ebx
  410874:	imul   ebx,DWORD PTR [edx+ebx*2-0x2e],0x14
  410879:	test   DWORD PTR [esi],esi
  41087b:	mov    esi,0x51e1ec38
  410880:	ds add al,0xe7
  410883:	rcr    DWORD PTR [ebx],0xfe
  410886:	les    edi,FWORD PTR [eax+0x2f62692c]
  41088c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41088d:	and    BYTE PTR [edi-0x26dd2da2],0x28
  410894:	jge    0x410830
  410896:	mov    ah,0xfe
  410898:	(bad)  
  410899:	fldcw  WORD PTR [edx]
  41089b:	add    eax,0x2a38649f
  4108a0:	mov    bl,0xe3
  4108a2:	jns    0x410831
  4108a4:	inc    esi
  4108a5:	dec    esp
  4108a6:	mov    ebx,DWORD PTR [ecx]
  4108a8:	aam    0x94
  4108aa:	and    ebx,ecx
  4108ac:	mov    edx,0xe110a633
  4108b1:	shr    BYTE PTR [edi+0x3a],cl
  4108b4:	fs pop edx
  4108b6:	mov    dh,0xfe
  4108b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108b9:	fs mov bh,0xed
  4108bc:	xor    cl,BYTE PTR [edx]
  4108be:	arpl   WORD PTR [esi+0x1d],sp
  4108c1:	dec    esp
  4108c2:	test   BYTE PTR [edx-0x28],ch
  4108c5:	sub    bl,dh
  4108c7:	neg    BYTE PTR [ecx-0x44]
  4108ca:	pushf  
  4108cb:	(bad)  
  4108cc:	das    
  4108cd:	or     DWORD PTR [ebx],eax
  4108cf:	and    al,0x4e
  4108d1:	sbb    eax,0x8cd1f339
  4108d6:	sar    bh,cl
  4108d8:	sbb    al,0xf4
  4108da:	(bad)  
  4108db:	mov    ah,0xd6
  4108dd:	mov    dl,0xa1
  4108df:	dec    esp
  4108e0:	adc    al,0xba
  4108e2:	rol    DWORD PTR [edi],cl
  4108e4:	inc    edx
  4108e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108e6:	and    eax,0x37e4d123
  4108eb:	or     al,0xab
  4108ed:	addr16 xchg edx,eax
  4108ef:	push   0xa874c09e
  4108f4:	mov    ds:0x50c641c7,eax
  4108f9:	add    esi,0xffffffa5
  4108fc:	jecxz  0x410922
  4108fe:	mov    cl,BYTE PTR [eax+0x7f0eaf90]
  410904:	mov    ds:0xb9c2a13a,al
  410909:	stc    
  41090a:	cld    
  41090b:	nop
  41090c:	mov    ds:0x402056,eax
  410911:	jae    0x41090d
  410913:	dec    esi
  410914:	xchg   ebx,eax
  410915:	sbb    al,0xaa
  410917:	push   esp
  410918:	outs   dx,BYTE PTR ds:[esi]
  410919:	ficomp DWORD PTR [edi-0x8]
  41091c:	jb     0x4108d1
  41091e:	(bad)  
  41091f:	cmp    BYTE PTR [eax+ecx*4-0x508c0936],dh
  410926:	js     0x41095b
  410928:	mov    bh,BYTE PTR [edx]
  41092a:	add    al,0xdb
  41092c:	xchg   ebx,eax
  41092d:	imul   edx,DWORD PTR [eax+0x7540bf82],0xaed048be
  410937:	and    dl,BYTE PTR [edx-0x7357e8ce]
  41093d:	mov    al,ds:0x542205c0
  410942:	push   edx
  410943:	sub    eax,0x72b1a1e6
  410948:	test   DWORD PTR [edx],esp
  41094a:	test   al,0x52
  41094c:	inc    ebx
  41094d:	lods   al,BYTE PTR ds:[esi]
  41094e:	jne    0x410970
  410950:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410951:	into   
  410952:	inc    edi
  410953:	push   ecx
  410954:	and    ebx,DWORD PTR [ebp+0x6d]
  410957:	xchg   edx,eax
  410958:	hlt    
  410959:	mov    BYTE PTR [ebx-0x56],dl
  41095c:	push   edi
  41095d:	pop    ecx
  41095e:	in     eax,0xb
  410960:	retf   0xf2bd
  410963:	xchg   edi,eax
  410964:	sbb    edi,ecx
  410966:	sbb    eax,0x7a0e310a
  41096b:	aaa    
  41096c:	sti    
  41096d:	inc    ebx
  41096e:	shl    BYTE PTR [esi+edi*8-0x41],cl
  410972:	mov    cs,WORD PTR [esi-0x5145574f]
  410978:	je     0x4109c0
  41097a:	popf   
  41097b:	outs   dx,DWORD PTR ds:[esi]
  41097c:	jmp    0x410969
  41097e:	push   ds
  41097f:	jg     0x41097a
  410981:	sbb    BYTE PTR [edx],cl
  410983:	sbb    al,0xe3
  410985:	jl     0x410917
  410987:	push   eax
  410988:	out    0x31,eax
  41098a:	push   cs
  41098b:	sub    DWORD PTR [edx],eax
  41098d:	xor    DWORD PTR [esi],edi
  41098f:	aad    0x67
  410991:	cmp    BYTE PTR [esi+ecx*1],cl
  410994:	add    BYTE PTR [edi+0x44],0x22
  410998:	aaa    
  410999:	jne    0x4109f4
  41099b:	sbb    eax,0x8469a5da
  4109a0:	add    bh,dl
  4109a2:	sahf   
  4109a3:	and    esp,DWORD PTR [ebx]
  4109a5:	xchg   ebx,eax
  4109a6:	pop    ecx
  4109a7:	scas   al,BYTE PTR es:[edi]
  4109a8:	jmp    0x323c4577
  4109ad:	jne    0x4109b5
  4109af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109b0:	(bad)  
  4109b1:	xchg   edx,eax
  4109b2:	mov    ah,0xbd
  4109b4:	pop    ebx
  4109b5:	dec    eax
  4109b6:	add    ebp,esi
  4109b8:	xor    edi,DWORD PTR [ebp+0x65fc9561]
  4109be:	sub    ecx,DWORD PTR [esi-0x42]
  4109c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109c2:	and    bh,BYTE PTR [esi-0x15]
  4109c5:	or     dl,cl
  4109c7:	imul   esp,DWORD PTR [eax-0x3f],0xfffffffa
  4109cb:	lds    edx,FWORD PTR [eax-0x431a12a3]
  4109d1:	sbb    eax,0x4cb3d06c
  4109d6:	lods   eax,DWORD PTR ds:[esi]
  4109d7:	fsubrp st(4),st
  4109d9:	xor    ebx,DWORD PTR [esi-0x19e6b615]
  4109df:	dec    ebp
  4109e0:	test   al,0xa4
  4109e2:	and    eax,0xf46f7332
  4109e7:	sub    eax,0x20ea6cd9
  4109ec:	push   es
  4109ed:	imul   edi,DWORD PTR [ebx],0x197a717b
  4109f3:	adc    BYTE PTR [ebp-0x7b],0x9e
  4109f7:	(bad)  
  4109f8:	xor    eax,0x61f10a0
  4109fd:	and    al,0xaa
  4109ff:	sbb    eax,0x71902492
  410a04:	scas   al,BYTE PTR es:[edi]
  410a05:	cmp    DWORD PTR [eax-0x3b],0xffffffba
  410a09:	ret    
  410a0a:	bnd js 0x410a2b
  410a0d:	ret    
  410a0e:	inc    ebx
  410a0f:	mov    dl,0x37
  410a11:	inc    esi
  410a12:	sub    edi,edi
  410a14:	je     0x410a19
  410a16:	(bad)  
  410a17:	shl    BYTE PTR [edi+0x48],cl
  410a1a:	xor    ebx,DWORD PTR [edi-0x76e03939]
  410a20:	and    al,0xe6
  410a22:	mov    dh,0x4f
  410a24:	or     esp,DWORD PTR ds:0x596a1ab3
  410a2a:	pop    ecx
  410a2b:	and    al,0x92
  410a2d:	stc    
  410a2e:	jg     0x410aae
  410a30:	call   0x6aef:0x9c7bfcea
  410a37:	or     eax,0x137bb40e
  410a3c:	daa    
  410a3d:	or     eax,0x90496b5b
  410a42:	jle    0x410a27
  410a44:	push   eax
  410a45:	xchg   esp,eax
  410a46:	and    bh,BYTE PTR [ecx]
  410a48:	clc    
  410a49:	imul   esi,DWORD PTR ds:0xe16d26e1,0x1d
  410a50:	je     0x410a6a
  410a52:	push   ss
  410a53:	xchg   DWORD PTR [edx+eiz*8-0x6b],ebp
  410a57:	pop    es
  410a58:	jg     0x410a4a
  410a5a:	dec    edx
  410a5b:	xlat   BYTE PTR ds:[ebx]
  410a5c:	or     eax,0xbc31c60
  410a61:	dec    ebx
  410a62:	or     esi,DWORD PTR [edi+0x5ca0c8f7]
  410a68:	adc    DWORD PTR [edx-0x34],edx
  410a6b:	cli    
  410a6c:	jns    0x410a74
  410a6e:	std    
  410a6f:	ja     0x410aa8
  410a71:	xchg   ebp,eax
  410a72:	imul   DWORD PTR cs:[ecx+0x73bd874]
  410a79:	xchg   edi,eax
  410a7a:	fwait
  410a7b:	add    DWORD PTR [edx],0x7e
  410a7e:	lods   eax,DWORD PTR ds:[esi]
  410a7f:	test   DWORD PTR [eax],ecx
  410a81:	bound  eax,QWORD PTR [edx]
  410a83:	and    al,0x66
  410a85:	aaa    
  410a86:	outs   dx,BYTE PTR ds:[esi]
  410a87:	sbb    al,BYTE PTR [ebp+edi*2-0x13610345]
  410a8e:	popa   
  410a8f:	in     al,0x50
  410a91:	imul   eax,DWORD PTR [eax-0x391ee168],0xb0060098
  410a9b:	inc    eax
  410a9c:	fmul   st,st(7)
  410a9e:	jbe    0x410a42
  410aa0:	ins    DWORD PTR es:[edi],dx
  410aa1:	sbb    DWORD PTR [ecx-0x4ec0eb1],0xb68f74dd
  410aab:	mov    ecx,0x42f0ccb4
  410ab0:	cmp    DWORD PTR [ecx+0x60d0eaa1],edi
  410ab6:	out    dx,al
  410ab7:	pop    ebp
  410ab8:	mov    eax,0x5e18111d
  410abd:	xchg   esp,eax
  410abe:	sahf   
  410abf:	pop    esi
  410ac0:	push   edx
  410ac1:	daa    
  410ac2:	mov    ebp,DWORD PTR [esi+0x674b23c5]
  410ac8:	arpl   WORD PTR [ebp-0x277abab7],si
  410ace:	push   ds
  410acf:	inc    eax
  410ad0:	sub    eax,0x543de90a
  410ad5:	leave  
  410ad6:	call   0xe27cb137
  410adb:	sub    BYTE PTR [esi-0xb],al
  410ade:	jge    0x410a84
  410ae0:	stos   DWORD PTR es:[edi],eax
  410ae1:	jns    0x410ae9
  410ae3:	fstp   QWORD PTR [ebp-0x61153d63]
  410ae9:	shr    DWORD PTR [ecx],1
  410aeb:	adc    ah,BYTE PTR [eax-0x7e]
  410aee:	(bad)  
  410aef:	xlat   BYTE PTR ds:[ebx]
  410af0:	sti    
  410af1:	sti    
  410af2:	push   ebp
  410af3:	lea    ecx,[edi+eax*2+0x13]
  410af7:	sbb    cl,BYTE PTR [eax]
  410af9:	bound  esi,QWORD PTR [ecx]
  410afb:	mov    dl,dl
  410afd:	push   edx
  410afe:	and    DWORD PTR [ebx],edi
  410b00:	das    
  410b01:	jp     0x410a84
  410b03:	mov    ebx,0xaca789cb
  410b08:	arpl   WORD PTR [ebp+0x42461e7a],dx
  410b0e:	scas   al,BYTE PTR es:[edi]
  410b0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b10:	xchg   edx,eax
  410b11:	stos   DWORD PTR es:[edi],eax
  410b12:	add    edx,DWORD PTR [ecx-0x47]
  410b15:	int    0x1
  410b17:	cli    
  410b18:	js     0x410aa5
  410b1a:	out    0x2b,eax
  410b1c:	cwde   
  410b1d:	or     BYTE PTR [eax+eiz*8],cl
  410b20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b21:	inc    ebp
  410b22:	(bad)  
  410b23:	cmp    eax,0x2f90090
  410b28:	jmp    0x9a4f5482
  410b2d:	pop    ds
  410b2e:	popf   
  410b2f:	(bad)  
  410b30:	sahf   
  410b31:	xor    BYTE PTR [edx+0x0],dl
  410b34:	ret    
  410b35:	jne    0x410ac5
  410b37:	iret   
  410b38:	(bad)  
  410b39:	jmp    0x84b6a832
  410b3e:	outs   dx,BYTE PTR ds:[esi]
  410b3f:	scas   eax,DWORD PTR es:[edi]
  410b40:	lahf   
  410b41:	xchg   DWORD PTR [esi+edi*4+0x38],edi
  410b45:	rol    DWORD PTR [ebx+eiz*2+0x7c],0x50
  410b4a:	jecxz  0x410bbc
  410b4c:	jecxz  0x410ad0
  410b4e:	add    edi,DWORD PTR [eax]
  410b50:	cli    
  410b51:	into   
  410b52:	adc    DWORD PTR [esi-0x3ccbc224],esp
  410b58:	adc    BYTE PTR [eax],bh
  410b5a:	mov    bh,0x5c
  410b5c:	cmp    ebp,ebp
  410b5e:	rcr    ebp,0x83
  410b61:	lds    eax,FWORD PTR [ebp-0x1acf13a]
  410b67:	clc    
  410b68:	aas    
  410b69:	and    dl,ch
  410b6b:	jno    0x410bc5
  410b6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b6e:	fisub  WORD PTR [edx]
  410b70:	leave  
  410b71:	lock (bad) 
  410b73:	repz test BYTE PTR [ecx],0xe9
  410b77:	ins    BYTE PTR es:[edi],dx
  410b78:	fld    TBYTE PTR [eax-0x1a268325]
  410b7e:	sbb    edi,DWORD PTR [edi+eax*1-0x1e946e9e]
  410b85:	iret   
  410b86:	sti    
  410b87:	scas   eax,DWORD PTR es:[edi]
  410b88:	lods   eax,DWORD PTR ds:[esi]
  410b89:	cld    
  410b8a:	push   ebp
  410b8b:	push   es
  410b8c:	sub    al,0xcc
  410b8e:	jle    0x410b7d
  410b90:	fist   DWORD PTR [ebp+edx*4+0x3ce05834]
  410b97:	in     eax,dx
  410b98:	test   ecx,0x9ca51328
  410b9e:	fisttp DWORD PTR [ebx+ebp*8]
  410ba1:	mov    DWORD PTR [eax-0x29],esp
  410ba4:	xchg   esi,eax
  410ba5:	(bad)  
  410ba6:	pop    ds
  410ba7:	jg     0x410c0f
  410ba9:	jge    0x410b49
  410bab:	push   cs
  410bac:	xor    eax,0xa9ab217e
  410bb1:	repz adc DWORD PTR [ebp-0x16087c1d],esp
  410bb8:	add    dl,ah
  410bba:	lock shr BYTE PTR [edi],1
  410bbd:	add    bh,BYTE PTR [esi]
  410bbf:	cmp    DWORD PTR [ebx],0x14f66e7a
  410bc5:	inc    edi
  410bc6:	and    BYTE PTR [edx],cl
  410bc8:	popa   
  410bc9:	and    al,0xb5
  410bcb:	in     eax,0x76
  410bcd:	sub    bh,BYTE PTR [esi-0x6f4c0698]
  410bd3:	ficomp WORD PTR [edi*8-0x7608943a]
  410bda:	mov    WORD PTR [esi+0x5b2420f4],cs
  410be0:	adc    ch,BYTE PTR [esi-0x456ba774]
  410be6:	pop    esp
  410be7:	sub    dh,BYTE PTR [edx-0x49]
  410bea:	mov    dl,0xce
  410bec:	rol    ah,0x70
  410bef:	cld    
  410bf0:	and    al,0xb3
  410bf2:	xlat   BYTE PTR ds:[ebx]
  410bf3:	fs and eax,0x274696f5
  410bf9:	add    al,0xdc
  410bfb:	push   cs
  410bfc:	add    al,BYTE PTR [eax]
  410bfe:	push   ecx
  410bff:	xlat   BYTE PTR ds:[ebx]
  410c00:	ja     0x410c75
  410c02:	nop
  410c03:	addr16 int3 
  410c05:	xor    bh,dh
  410c07:	call   0xe0db5091
  410c0c:	push   edi
  410c0d:	or     al,0x1f
  410c0f:	sbb    DWORD PTR ds:0x5533636c,esp
  410c15:	cmp    BYTE PTR [edi-0x46],cl
  410c18:	mov    dl,0x55
  410c1a:	mov    eax,0xb5d21a31
  410c1f:	ret    
  410c20:	mov    ebx,0xef621e72
  410c25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c26:	push   edi
  410c27:	aam    0x6b
  410c29:	mov    ds:0x16128cac,al
  410c2e:	pusha  
  410c2f:	and    ebp,eax
  410c31:	push   ds
  410c32:	and    ah,BYTE PTR [edx+0x6c2be40d]
  410c38:	inc    edi
  410c39:	jne    0x410bf2
  410c3b:	and    BYTE PTR [edi],dl
  410c3d:	aaa    
  410c3e:	push   esp
  410c3f:	push   es
  410c40:	sub    bh,BYTE PTR [ebp+0x1a1b8125]
  410c46:	sub    ecx,DWORD PTR [edx+eiz*8]
  410c49:	outs   dx,DWORD PTR ds:[esi]
  410c4a:	dec    bh
  410c4c:	ja     0x410c9f
  410c4e:	xchg   esp,eax
  410c4f:	xchg   edi,eax
  410c50:	sub    eax,0xdc1649c3
  410c55:	nop
  410c56:	sub    BYTE PTR [ebp+0x675e1bb],bl
  410c5c:	lds    ebx,FWORD PTR [ecx-0x2074c1eb]
  410c62:	out    0xd1,eax
  410c64:	xor    BYTE PTR [ebx+0x43e81c48],dh
  410c6a:	or     BYTE PTR [esi-0x4b42461a],dh
  410c70:	leave  
  410c71:	adc    BYTE PTR [ebx+0x3],bh
  410c74:	sbb    al,ah
  410c76:	out    0x25,eax
  410c78:	jmp    0xdd826b09
  410c7d:	pop    es
  410c7e:	mov    ch,0xda
  410c80:	aad    0x73
  410c82:	or     edi,DWORD PTR [edx+0x3]
  410c85:	scas   eax,DWORD PTR es:[edi]
  410c86:	fnstcw WORD PTR [esi-0x44]
  410c89:	mov    cl,BYTE PTR [edi]
  410c8b:	inc    eax
  410c8c:	(bad)  
  410c8d:	cmp    ah,BYTE PTR [eax+0x59]
  410c90:	js     0x410c5a
  410c92:	or     al,BYTE PTR [edi*1+0x81e95e7]
  410c99:	jecxz  0x410c31
  410c9b:	ins    BYTE PTR es:[edi],dx
  410c9c:	jp     0x410c79
  410c9e:	mov    ch,BYTE PTR [esi]
  410ca0:	dec    BYTE PTR [ebp+0x73ff7042]
  410ca6:	cli    
  410ca7:	sub    al,0xed
  410ca9:	pop    eax
  410caa:	dec    ebp
  410cab:	call   0x7cb5ca0f
  410cb0:	or     eax,0x4e2a2ddb
  410cb5:	sub    al,0x9f
  410cb7:	inc    edx
  410cb8:	(bad)  
  410cb9:	or     DWORD PTR [ebx+0x29],esp
  410cbc:	jo     0x410d1f
  410cbe:	add    dh,ch
  410cc0:	es jno 0x410ce8
  410cc3:	xlat   BYTE PTR ds:[ebx]
  410cc4:	call   0xd04b:0x99f4f12a
  410ccb:	aas    
  410ccc:	jbe    0x410cfc
  410cce:	mov    edx,0xa909295
  410cd3:	shr    DWORD PTR [edx+0x18],1
  410cd6:	pop    esi
  410cd7:	imul   edx,DWORD PTR [ecx+0x27],0xe59140f8
  410cde:	jbe    0x410d4a
  410ce0:	pop    edx
  410ce1:	cld    
  410ce2:	jae    0x410cfa
  410ce4:	sub    bl,al
  410ce6:	xor    DWORD PTR [edi],0xe7bbc6d2
  410cec:	leave  
  410ced:	mov    esi,0xad93fdb5
  410cf2:	into   
  410cf3:	cdq    
  410cf4:	xor    al,0xd7
  410cf6:	xchg   edx,eax
  410cf7:	arpl   WORD PTR [esp+ebp*2],bp
  410cfa:	sbb    cl,BYTE PTR [ecx-0x37]
  410cfd:	cmp    BYTE PTR [esi],0xab
  410d00:	bound  edx,QWORD PTR [ebx-0x611805c3]
  410d06:	or     DWORD PTR [ecx+0x15],0x485ee25f
  410d0d:	aam    0x56
  410d0f:	in     al,0x37
  410d11:	rol    DWORD PTR [edi+0x75],1
  410d14:	fdiv   st,st(6)
  410d16:	(bad)  
  410d17:	lods   al,BYTE PTR ds:[esi]
  410d18:	popf   
  410d19:	pop    esi
  410d1a:	mov    ebx,0x759861bb
  410d1f:	(bad)  
  410d20:	adc    dh,BYTE PTR [bx+di-0x47f5]
  410d25:	aad    0x24
  410d27:	mov    DWORD PTR fs:[edi],esi
  410d2a:	jmp    0x410d50
  410d2c:	sbb    DWORD PTR [ebx],ebp
  410d2e:	cmp    bl,BYTE PTR [ebp-0x4e]
  410d31:	in     eax,dx
  410d32:	push   ebx
  410d33:	test   BYTE PTR [eax-0x74],dh
  410d36:	push   0xbb320b56
  410d3b:	in     eax,dx
  410d3c:	int3   
  410d3d:	mov    cl,0x5b
  410d3f:	ror    DWORD PTR [esi],cl
  410d41:	or     al,0xbb
  410d43:	xor    BYTE PTR [esi+0x50b4d849],cl
  410d49:	mov    esi,0x67065b75
  410d4e:	and    BYTE PTR [edi],bh
  410d50:	(bad)  
  410d51:	mov    eax,0x92782577
  410d56:	dec    eax
  410d57:	jno    0x410d73
  410d59:	mov    ebp,0x612011e7
  410d5e:	out    0xdb,eax
  410d60:	sbb    DWORD PTR [edi-0x47],eax
  410d63:	outs   dx,DWORD PTR gs:[esi]
  410d65:	test   al,0xeb
  410d67:	(bad)  
  410d68:	iret   
  410d69:	cdq    
  410d6a:	sbb    BYTE PTR [esi-0x60e3ee58],dh
  410d70:	or     DWORD PTR [esi-0x485e811b],edx
  410d76:	mov    eax,?
  410d78:	test   DWORD PTR [edi+0x5f],0xc4e44f56
  410d7f:	(bad)  
  410d80:	int    0x98
  410d82:	inc    edi
  410d83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d84:	xchg   ecx,eax
  410d85:	adc    cl,BYTE PTR [bp-0x11]
  410d89:	sti    
  410d8a:	test   BYTE PTR [edi+0x4e03d5b6],0xd1
  410d91:	retf   0x5ddf
  410d94:	lods   eax,DWORD PTR ds:[esi]
  410d95:	daa    
  410d96:	aam    0x81
  410d98:	scas   al,BYTE PTR es:[edi]
  410d99:	leave  
  410d9a:	mov    cl,0x70
  410d9c:	or     al,0xe3
  410d9e:	adc    al,BYTE PTR [esi]
  410da0:	leave  
  410da1:	(bad)  
  410da2:	adc    ch,BYTE PTR [eax-0x5d885f74]
  410da8:	jmp    0x697dec50
  410dad:	test   DWORD PTR [edi+ebp*1-0x78],ecx
  410db1:	or     esi,ebp
  410db3:	ja     0x410e2b
  410db5:	add    dl,BYTE PTR [edi-0x137dd2bc]
  410dbb:	inc    esi
  410dbc:	xchg   ecx,eax
  410dbd:	imul   ebp,DWORD PTR [ebx],0x58155ca7
  410dc3:	cmp    al,0x5f
  410dc5:	ds fwait
  410dc7:	mov    WORD PTR ds:0x1b2e2063,gs
  410dcd:	das    
  410dce:	or     BYTE PTR [ebp-0x5230cbb8],ah
  410dd4:	out    dx,al
  410dd5:	dec    edx
  410dd6:	ins    BYTE PTR es:[edi],dx
  410dd7:	sbb    al,0x4a
  410dd9:	mov    BYTE PTR [ebx],ch
  410ddb:	test   DWORD PTR [edi],0xee9ec77d
  410de1:	mov    ebp,0x39f98996
  410de6:	lahf   
  410de7:	je     0x410da1
  410de9:	adc    eax,0x93e28f6b
  410dee:	loopne 0x410d9f
  410df0:	mov    ch,0xa3
  410df2:	add    esp,DWORD PTR [eax]
  410df4:	cwde   
  410df5:	(bad)  
  410df7:	adc    esp,ecx
  410df9:	pop    ds
  410dfa:	test   eax,0x430c872f
  410dff:	int3   
  410e00:	jae    0x410dc0
  410e02:	or     edi,ebx
  410e04:	retf   0x606f
  410e07:	lods   eax,DWORD PTR ds:[esi]
  410e08:	jmp    0xdb50e2b4
  410e0d:	xchg   edi,eax
  410e0e:	push   es
  410e0f:	dec    edx
  410e10:	in     al,0xc9
  410e12:	or     BYTE PTR [ebp+eiz*1+0x3a],dl
  410e16:	lods   eax,DWORD PTR ds:[esi]
  410e17:	aas    
  410e18:	icebp  
  410e19:	imul   eax,esp,0x7a7010d6
  410e1f:	sub    al,0xf4
  410e21:	or     eax,0x61ea26fa
  410e26:	retf   0xa24d
  410e29:	jmp    0xb44:0xc7011f4f
  410e30:	dec    esi
  410e32:	icebp  
  410e33:	jecxz  0x410dea
  410e35:	mov    ah,0x25
  410e37:	xchg   ebx,eax
  410e38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e39:	in     al,dx
  410e3a:	sub    eax,0xec3eb52e
  410e3f:	es ja  0x410eb9
  410e42:	push   ecx
  410e43:	xor    ch,BYTE PTR [ecx+0x4746aa41]
  410e49:	xor    BYTE PTR [edx-0x76cae619],bl
  410e4f:	(bad)  
  410e50:	stos   BYTE PTR es:[edi],al
  410e51:	clc    
  410e52:	mul    BYTE PTR [edi-0x35206f7f]
  410e58:	out    dx,al
  410e59:	jmp    0x82a0:0x20a1a923
  410e60:	mov    dh,0xe6
  410e62:	sub    BYTE PTR [ebx+edx*1-0x1],cl
  410e66:	add    cl,0x8
  410e69:	sbb    ebx,DWORD PTR [ecx+0x11e07a7f]
  410e6f:	mov    al,0x3d
  410e71:	hlt    
  410e72:	lds    ebx,FWORD PTR [edi-0x4]
  410e75:	cmp    DWORD PTR [ebp+0x5be61e28],eax
  410e7b:	mov    ch,0x3d
  410e7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e7e:	in     al,dx
  410e7f:	mov    ebx,0xdb502364
  410e84:	icebp  
  410e85:	dec    edx
  410e86:	pushf  
  410e87:	(bad)  
  410e89:	ins    BYTE PTR es:[edi],dx
  410e8a:	xchg   ecx,eax
  410e8b:	out    0x19,al
  410e8d:	iret   
  410e8e:	or     edx,ebx
  410e90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e91:	cmp    eax,0xa7704bbb
  410e96:	data16 daa 
  410e98:	ss nop
  410e9a:	loop   0x410e6c
  410e9c:	popa   
  410e9d:	push   DWORD PTR [edi-0x75a6bcd3]
  410ea3:	sub    BYTE PTR [edx+ebx*8-0x23],dh
  410ea7:	dec    ebp
  410ea8:	sub    al,0xb8
  410eaa:	mov    al,0x28
  410eac:	xor    ecx,DWORD PTR [eax]
  410eae:	sbb    eax,0x94dec871
  410eb3:	mov    ds:0x58cee076,al
  410eb8:	cmp    DWORD PTR [ebp-0x4301fb15],edi
  410ebe:	cwde   
  410ebf:	les    esi,FWORD PTR [esi+0x6ba3b7c8]
  410ec5:	fist   WORD PTR [esi+0x4e]
  410ec8:	pop    esi
  410ec9:	mov    ds:0xb27e472d,al
  410ece:	lea    edi,[edi-0x581490be]
  410ed4:	xor    BYTE PTR [eax+0x48],ch
  410ed7:	adc    ch,BYTE PTR [esi-0x54]
  410eda:	push   ds
  410edb:	popf   
  410edc:	sub    BYTE PTR ss:[edx+0x4dad7b8a],cl
  410ee3:	mov    WORD PTR [esp+ecx*2],cs
  410ee6:	pop    edx
  410ee7:	xchg   ebp,eax
  410ee8:	push   esp
  410ee9:	bound  esp,QWORD PTR [ecx+0x2e]
  410eec:	push   cs
  410eed:	jp     0x410f65
  410eef:	cmp    dl,BYTE PTR [edx+0x3da97295]
  410ef5:	fsubp  st(1),st
  410ef7:	mov    al,ds:0xc5be16c1
  410efc:	div    BYTE PTR [ecx+0x74]
  410eff:	inc    esp
  410f00:	call   0x7ed17d50
  410f05:	gs jl  0x410f62
  410f08:	sbb    dh,BYTE PTR [ebx]
  410f0a:	push   ebp
  410f0b:	ins    DWORD PTR es:[edi],dx
  410f0c:	sbb    DWORD PTR cs:[edx+ebx*2-0x27],0xffffffb0
  410f12:	imul   ebp,DWORD PTR [ebx-0x5cad5884],0xffffff92
  410f19:	cs jmp 0x213cd2ad
  410f1f:	retf   
  410f20:	ror    DWORD PTR [edx-0x56f402bd],0xc8
  410f27:	sub    ebp,edi
  410f29:	(bad)  
  410f2a:	lahf   
  410f2b:	cmp    al,ah
  410f2d:	popa   
  410f2e:	clc    
  410f2f:	push   eax
  410f30:	mov    dh,0x38
  410f32:	xor    esp,DWORD PTR [ecx+0x6963568e]
  410f38:	mov    ebp,DWORD PTR [eax-0x7a]
  410f3b:	mov    eax,ds:0x90cef99a
  410f40:	ds jb  0x410f40
  410f43:	fiadd  WORD PTR [edx]
  410f45:	jmp    0x797cbe45
  410f4a:	shr    ebp,1
  410f4c:	sbb    eax,0x6e39b964
  410f51:	sub    DWORD PTR [esi-0x27],0x3d
  410f55:	div    edi
  410f57:	or     eax,0xb4f83d48
  410f5c:	pop    ebx
  410f5d:	dec    eax
  410f5e:	rcl    BYTE PTR [eax-0x23],0xd
  410f62:	fistp  DWORD PTR [edx+0x17d4275f]
  410f68:	popf   
  410f69:	out    0x4c,al
  410f6b:	sbb    BYTE PTR [esi-0x1daf6e05],0xe2
  410f72:	test   al,0x33
  410f74:	mov    bh,0x37
  410f76:	and    eax,0xf13322b9
  410f7b:	push   cs
  410f7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f7d:	gs in  al,dx
  410f7f:	push   esp
  410f80:	cmp    bl,BYTE PTR [ebp+0x2e]
  410f83:	inc    ebp
  410f84:	xor    dl,BYTE PTR [edi]
  410f86:	les    ebp,FWORD PTR [edi]
  410f88:	or     eax,0x370a7a32
  410f8d:	and    eax,0x86e87f2e
  410f92:	add    al,0x7a
  410f94:	inc    ecx
  410f95:	(bad)  
  410f96:	mov    al,0xca
  410f98:	out    0x4c,al
  410f9a:	jo     0x410fd7
  410f9c:	jmp    0xc3081575
  410fa1:	mov    al,0x2d
  410fa3:	pop    esp
  410fa4:	js     0x410f59
  410fa6:	scas   al,BYTE PTR es:[edi]
  410fa7:	jecxz  0x411010
  410fa9:	pop    ebp
  410faa:	add    eax,0xb030110e
  410faf:	dec    esp
  410fb1:	push   ss
  410fb2:	(bad)  
  410fb3:	out    dx,al
  410fb4:	cmp    BYTE PTR [eax+0x3090944f],0xd0
  410fbb:	sbb    eax,0xd12b797c
  410fc0:	lahf   
  410fc1:	jl     0x410f84
  410fc3:	fcom   QWORD PTR [esi*4-0x75d32ed0]
  410fca:	adc    al,0xf2
  410fcc:	jmp    0xbde7fc78
  410fd1:	jnp    0x410f9f
  410fd3:	pop    ecx
  410fd4:	fs rcr edx,0x4a
  410fd8:	and    BYTE PTR [esp+ebx*2+0x13],ah
  410fdc:	nop
  410fdd:	mov    eax,esi
  410fdf:	inc    edi
  410fe0:	adc    bh,BYTE PTR [ecx-0x1d]
  410fe3:	sbb    dl,dl
  410fe5:	mov    dl,0x12
  410fe7:	mov    gs,WORD PTR [ebp+ebx*1+0x66cf081b]
  410fee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fef:	adc    DWORD PTR [ebx-0x47],edx
  410ff2:	icebp  
  410ff3:	in     eax,0x95
  410ff5:	cmp    edx,DWORD PTR [ebx+0x7ac0612a]
  410ffb:	lods   eax,DWORD PTR ds:[esi]
  410ffc:	ror    ah,cl
  410ffe:	or     BYTE PTR [eax+0x79],cl
  411001:	push   edi
  411002:	mov    ch,0xe5
  411004:	adc    edx,DWORD PTR [ebp+0x41]
  411007:	out    dx,eax
  411008:	ror    BYTE PTR [ebp-0x169c4df9],cl
  41100e:	adc    BYTE PTR [ecx-0x22],ch
  411011:	out    dx,eax
  411012:	sbb    dh,BYTE PTR [esp+ebp*1]
  411015:	cmc    
  411016:	pushf  
  411017:	sub    DWORD PTR [eax+0x69f3eab3],eax
  41101d:	and    al,0x83
  41101f:	cmp    eax,0xca63c8e0
  411024:	and    al,0xd4
  411026:	dec    esi
  411027:	push   ss
  411028:	outs   dx,BYTE PTR ds:[esi]
  411029:	cmp    eax,edx
  41102b:	jo     0x4110aa
  41102d:	shr    DWORD PTR [esi],1
  41102f:	inc    edi
  411030:	sub    DWORD PTR [eax+0x54],ecx
  411033:	mov    BYTE PTR [edi],dh
  411035:	jp     0x411053
  411037:	(bad)  
  411038:	pop    esi
  411039:	push   ebx
  41103a:	mov    ebx,0x80179b14
  41103f:	loope  0x4110ac
  411041:	(bad)  
  411042:	in     eax,0xf9
  411044:	stc    
  411045:	and    BYTE PTR [ecx-0x65],al
  411048:	ss pop ebx
  41104a:	in     al,0x81
  41104c:	(bad)  
  41104d:	mov    dh,0xf4
  41104f:	add    eax,0xad1fc080
  411054:	cdq    
  411055:	out    0x65,al
  411057:	sahf   
  411058:	mov    bh,0x5
  41105a:	ds adc dl,al
  41105d:	jnp    0x410fed
  41105f:	dec    ebp
  411060:	sub    al,0xae
  411062:	dec    eax
  411063:	mov    ebp,0xe53d2f76
  411068:	shl    bl,cl
  41106a:	in     al,dx
  41106b:	mov    ds:0x20d17331,al
  411070:	mov    bh,0xc7
  411072:	xchg   ebp,eax
  411073:	mov    al,ds:0xf9baeefc
  411078:	lea    edx,[esi+0x1e]
  41107b:	scas   eax,DWORD PTR es:[edi]
  41107c:	out    0x3f,al
  41107e:	lods   eax,DWORD PTR ds:[esi]
  41107f:	or     BYTE PTR [ecx-0x6e0a35c7],bl
  411085:	ja     0x411031
  411087:	mov    cl,0x9b
  411089:	cld    
  41108a:	jno    0x41104b
  41108c:	cmp    eax,0x5ed8bbe6
  411091:	jb     0x4110fa
  411093:	rol    DWORD PTR [ebx+ebx*1],cl
  411096:	ja     0x411091
  411098:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411099:	ret    0x276a
  41109c:	mov    ebp,DWORD PTR [edx]
  41109e:	adc    ebx,ebx
  4110a0:	pop    ebx
  4110a1:	in     al,dx
  4110a2:	nop
  4110a3:	enter  0x374f,0x88
  4110a7:	popf   
  4110a8:	mov    dl,BYTE PTR [edi+0x345c2a68]
  4110ae:	dec    esi
  4110af:	fist   DWORD PTR [ebp-0x111e8713]
  4110b5:	pop    esp
  4110b6:	inc    ecx
  4110b7:	mov    ds:0xed448ffe,al
  4110bc:	call   0xa5c6:0xa97364c3
  4110c3:	push   es
  4110c4:	ins    DWORD PTR es:[edi],dx
  4110c5:	sub    ebp,0x4bc9e915
  4110cb:	in     eax,dx
  4110cc:	pop    eax
  4110cd:	pop    ds
  4110ce:	jae    0x411119
  4110d0:	mov    dl,0x97
  4110d2:	lock mov eax,ds:0xbbd8ffdf
  4110d8:	inc    esi
  4110d9:	adc    eax,0x3a8bf857
  4110de:	(bad)  
  4110df:	xchg   ecx,eax
  4110e0:	cld    
  4110e1:	fadd   DWORD PTR [di]
  4110e4:	sub    al,0xa5
  4110e6:	xor    DWORD PTR [edx],ebp
  4110e8:	pusha  
  4110e9:	or     eax,0x6261dd8d
  4110ee:	pop    esp
  4110ef:	(bad)  [ebx]
  4110f1:	retf   
  4110f2:	pop    eax
  4110f3:	scas   eax,DWORD PTR es:[edi]
  4110f4:	jge    0x4110c2
  4110f6:	cdq    
  4110f7:	fidiv  WORD PTR [edx-0x374249]
  4110fd:	call   0xd34:0x4363e68b
  411104:	and    al,0xe2
  411106:	repnz repz lea ecx,[ebp-0x8]
  41110b:	(bad)  
  41110c:	jmp    0x4110a4
  41110e:	cmp    al,0x18
  411110:	cdq    
  411111:	out    0x87,eax
  411113:	inc    eax
  411114:	fldenv [eax+ebp*1-0x68136076]
  41111b:	neg    BYTE PTR [eax+0x44]
  41111e:	and    BYTE PTR [esi+0x68],dl
  411121:	and    BYTE PTR [ecx+eax*2+0x40],dh
  411125:	sub    DWORD PTR [edx+edi*4+0x30],esi
  411129:	push   ds
  41112a:	mov    dh,0xc
  41112c:	mov    edi,0xb0af4f71
  411131:	(bad)  [ecx]
  411133:	push   eax
  411134:	popf   
  411135:	pop    edi
  411136:	pop    edx
  411137:	mov    dh,0x49
  411139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41113a:	imul   ecx,DWORD PTR [ebx-0x7a],0x74bd062a
  411141:	scas   al,BYTE PTR es:[edi]
  411142:	mov    cl,0xc1
  411144:	gs int3 
  411146:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411147:	adc    al,0x6e
  411149:	pop    esp
  41114a:	fninit 
  41114c:	or     edx,eax
  41114e:	cdq    
  41114f:	lock push edx
  411151:	sti    
  411152:	add    ecx,DWORD PTR [esi+0x4a]
  411155:	and    DWORD PTR [ebp-0x1e80e3fd],esp
  41115b:	inc    eax
  41115c:	xchg   DWORD PTR [eax],ecx
  41115e:	and    al,0xa1
  411160:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411161:	xchg   ebx,eax
  411162:	test   al,0xaf
  411164:	sbb    eax,0x8b53f057
  411169:	push   es
  41116a:	jmp    0x411195
  41116c:	lods   eax,DWORD PTR ds:[esi]
  41116d:	shr    BYTE PTR [ebx+edx*4+0x657bb2d0],0xcc
  411175:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411176:	xchg   ebx,eax
  411177:	or     DWORD PTR [ebp+ecx*4-0x62],edx
  41117b:	dec    ebx
  41117c:	gs jmp 0xcfb0:0x26a7ca56
  411184:	add    DWORD PTR [ebp+0x41],esp
  411187:	adc    BYTE PTR [ebx],0x72
  41118a:	cmp    DWORD PTR [ecx-0x20],esp
  41118d:	jg     0x411179
  41118f:	dec    edi
  411190:	fwait
  411191:	pop    ecx
  411192:	push   esp
  411193:	pop    edi
  411194:	outs   dx,DWORD PTR ds:[esi]
  411195:	jns    0x411125
  411197:	or     BYTE PTR [edi],bl
  411199:	sti    
  41119a:	dec    edi
  41119b:	shl    BYTE PTR [esi],1
  41119d:	dec    esi
  41119e:	jns    0x411195
  4111a0:	sub    ah,BYTE PTR [edi+ebx*1-0x546a4d41]
  4111a7:	inc    esp
  4111a8:	(bad)  
  4111a9:	int    0x74
  4111ab:	out    0x34,al
  4111ad:	ret    0x68a
  4111b0:	nop
  4111b1:	inc    edx
  4111b2:	out    0xc7,al
  4111b4:	dec    esi
  4111b5:	into   
  4111b6:	aaa    
  4111b7:	xor    DWORD PTR [ebx-0x22],edi
  4111ba:	retf   
  4111bb:	adc    bl,BYTE PTR [edx+ecx*4]
  4111be:	pop    edi
  4111bf:	pop    edx
  4111c0:	rol    BYTE PTR [eax],0xa8
  4111c3:	add    DWORD PTR [ebx],ecx
  4111c5:	ss and cl,bl
  4111c8:	push   esi
  4111c9:	(bad)  
  4111ca:	or     al,0x2f
  4111cc:	aas    
  4111cd:	pop    esp
  4111ce:	lds    edx,FWORD PTR [eax+eiz*2+0x35]
  4111d2:	pop    es
  4111d3:	jmp    0x41115b
  4111d5:	adc    DWORD PTR [eax+0x6b],edx
  4111d8:	mov    eax,0xa1d345c8
  4111dd:	in     al,dx
  4111de:	test   BYTE PTR [edx+0x3a],ch
  4111e1:	lock push 0x7c435b6b
  4111e7:	pop    DWORD PTR [edx-0xa05223f]
  4111ed:	cli    
  4111ee:	cli    
  4111ef:	sbb    BYTE PTR [edx],0xdd
  4111f2:	in     eax,0x16
  4111f4:	in     eax,dx
  4111f5:	adc    BYTE PTR [ecx+edi*8-0x52f533cd],al
  4111fc:	dec    ebx
  4111fd:	pop    esi
  4111fe:	clc    
  4111ff:	mov    al,ds:0x15e0683d
  411204:	in     al,0xde
  411206:	scas   al,BYTE PTR es:[edi]
  411207:	lea    esi,[ebx+0x4f2dc174]
  41120d:	push   cs
  41120e:	sbb    eax,0xb77a7d7e
  411213:	sub    al,0xd0
  411215:	inc    esi
  411216:	sub    DWORD PTR [esi-0xb],0xca9789b3
  41121d:	shl    BYTE PTR [edx],0xa5
  411220:	pop    ds
  411221:	adc    BYTE PTR [edx+0x14],bl
  411224:	and    BYTE PTR ds:0x3f23c205,0x38
  41122b:	or     al,0x2
  41122d:	cld    
  41122e:	jecxz  0x411250
  411230:	mov    BYTE PTR [eax+0x2e],dh
  411233:	add    bl,BYTE PTR [ebx-0x65]
  411236:	mov    ah,0x6e
  411238:	das    
  411239:	inc    ecx
  41123a:	jecxz  0x41123c
  41123c:	jmp    0x4affb092
  411241:	mov    al,0xd0
  411243:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411244:	xor    DWORD PTR [esp+ebx*1-0x7e],edi
  411248:	fwait
  411249:	ds jmp 0x8b135969
  41124f:	xchg   edi,eax
  411250:	jnp    0x4112ba
  411252:	xor    DWORD PTR [ecx],eax
  411254:	xchg   esp,eax
  411255:	pusha  
  411256:	iret   
  411257:	loopne 0x4111f2
  411259:	jp     0x4112cb
  41125b:	jb     0x4112b5
  41125d:	stos   DWORD PTR es:[edi],eax
  41125e:	aad    0x2c
  411260:	cmc    
  411261:	mov    cl,0x56
  411263:	shl    dh,cl
  411265:	aam    0x55
  411267:	jmp    0xe421:0xfbef20ac
  41126e:	fisttp DWORD PTR [ebp-0x2d]
  411271:	dec    edi
  411272:	or     bh,BYTE PTR [eax-0x6aa97b24]
  411278:	sbb    DWORD PTR [edi],eax
  41127a:	fidiv  DWORD PTR [ecx]
  41127c:	ss into 
  41127e:	pop    ss
  41127f:	adc    BYTE PTR [esi-0x30e815c3],ch
  411285:	inc    ebx
  411286:	push   es
  411287:	or     dh,BYTE PTR [esp+ecx*8-0x38fb6efd]
  41128e:	push   cs
  41128f:	imul   edi,DWORD PTR [ecx-0x533ff55e],0x50
  411296:	retf   0xf9c1
  411299:	in     eax,dx
  41129a:	or     cl,BYTE PTR [esi+0x70]
  41129d:	stc    
  41129e:	sub    al,cl
  4112a0:	jg     0x41129e
  4112a2:	add    esp,ebp
  4112a4:	sar    DWORD PTR [edx-0x1e191fd8],0xa1
  4112ab:	fidiv  DWORD PTR [ecx-0x5e6cc2d3]
  4112b1:	shl    ch,0x6
  4112b4:	popf   
  4112b5:	sbb    al,0x28
  4112b7:	js     0x411312
  4112b9:	mov    ebx,0xa8213b4b
  4112be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112bf:	shl    cl,0x1
  4112c2:	jecxz  0x411300
  4112c4:	add    eax,0x2987e583
  4112c9:	adc    eax,0x1397b944
  4112ce:	lock test DWORD PTR es:[ecx+0x36ce2721],edi
  4112d6:	mov    ah,0xf0
  4112d8:	xchg   esi,eax
  4112d9:	and    BYTE PTR [eax+0x43],0x34
  4112dd:	stc    
  4112de:	cld    
  4112df:	hlt    
  4112e0:	pop    eax
  4112e1:	xchg   edi,eax
  4112e2:	sti    
  4112e3:	mov    ds:0xb4befc53,eax
  4112e8:	fidiv  DWORD PTR [ebx]
  4112ea:	mov    ebp,0xbb7fc9da
  4112ef:	jns    0x41136f
  4112f1:	retf   0x376e
  4112f4:	adc    eax,0xc59f8896
  4112f9:	pop    ebp
  4112fa:	sub    edi,ecx
  4112fc:	out    0x19,eax
  4112fe:	test   BYTE PTR [esi],dl
  411300:	scas   al,BYTE PTR es:[edi]
  411301:	push   0xb6183f6e
  411306:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411307:	or     eax,0xe3c44463
  41130c:	pop    es
  41130d:	add    eax,0x174079d
  411312:	dec    eax
  411313:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411314:	inc    ecx
  411315:	lock xlat BYTE PTR ds:[ebx]
  411317:	mov    ah,0xef
  411319:	into   
  41131a:	test   eax,0x9aa3f3a5
  41131f:	iret   
  411320:	cwde   
  411321:	sub    ebp,DWORD PTR [edx+edi*4-0x19660a32]
  411328:	adc    al,0x65
  41132a:	xor    DWORD PTR [eax],edx
  41132c:	(bad)  
  41132d:	scas   al,BYTE PTR es:[edi]
  41132e:	mov    cl,bh
  411330:	(bad)  
  411332:	cmp    DWORD PTR [edx],ebp
  411334:	add    al,BYTE PTR [edx+0x1c8139bb]
  41133a:	mov    DWORD PTR [edi-0x4488dec4],esp
  411340:	pop    eax
  411341:	fwait
  411342:	and    BYTE PTR [ebx+0x15],al
  411345:	sub    eax,0x50e5152c
  41134a:	and    eax,0xc44e6f89
  41134f:	(bad)  
  411350:	(bad)
  411354:	pop    eax
  411355:	icebp  
  411356:	lock pop ds
  411358:	pop    ss
  411359:	(bad)  
  41135a:	retf   
  41135b:	enter  0xdb6b,0xf8
  41135f:	mov    bl,0xf1
  411361:	adc    BYTE PTR [edi-0x6c],dl
  411364:	icebp  
  411365:	dec    esi
  411366:	out    0xd5,eax
  411368:	mov    DWORD PTR [esi],0x20c894d
  41136e:	psrld  mm7,QWORD PTR [ebx]
  411371:	popa   
  411372:	or     ebx,DWORD PTR [ecx]
  411374:	ret    
  411375:	dec    esp
  411376:	mov    al,0x24
  411378:	cmp    eax,0xd9395cc7
  41137d:	dec    ebx
  41137e:	jmp    0x411365
  411380:	fcos   
  411382:	int    0x80
  411384:	dec    ecx
  411385:	push   edi
  411386:	mov    dh,0x93
  411388:	ret    
  411389:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41138a:	imul   eax,DWORD PTR [esi],0x749492d9
  411390:	mov    edx,0xedb585e1
  411395:	pop    esi
  411396:	push   ecx
  411397:	rcr    BYTE PTR [ecx],cl
  411399:	jno    0x41132d
  41139b:	repnz add eax,0xaebc5231
  4113a1:	mov    cs,WORD PTR [edi+0x14]
  4113a4:	dec    edx
  4113a5:	cmovns esi,edx
  4113a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113a9:	ret    
  4113aa:	mov    ebp,0x4235a83d
  4113af:	jo     0x4113fc
  4113b1:	test   al,0xa5
  4113b3:	(bad)  
  4113b4:	es push edi
  4113b6:	ja     0x411386
  4113b8:	outs   dx,BYTE PTR ds:[esi]
  4113b9:	mov    bh,0x1b
  4113bb:	jnp    0x41133d
  4113bd:	sub    bl,bl
  4113bf:	hlt    
  4113c0:	xor    al,0x6b
  4113c2:	mov    edx,0x6f2d6874
  4113c7:	push   esi
  4113c8:	push   ss
  4113c9:	es loopne 0x411351
  4113cc:	gs out dx,eax
  4113ce:	fdiv   QWORD PTR [ebx+0xd]
  4113d1:	adc    al,0x58
  4113d3:	mov    dh,BYTE PTR [edi+edi*2+0x1992c5c3]
  4113da:	fidivr WORD PTR [ebp-0x1b]
  4113dd:	jecxz  0x4113e7
  4113df:	add    BYTE PTR [ebx+0x36],bh
  4113e2:	ret    
  4113e3:	ret    
  4113e4:	fist   DWORD PTR [esi-0x19]
  4113e7:	mov    ebx,0xcf388eba
  4113ec:	inc    esi
  4113ed:	shl    DWORD PTR [ecx-0x4c],0x98
  4113f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113f2:	mov    esp,0x3dc711b7
  4113f7:	jnp    0x4113c2
  4113f9:	(bad)  
  4113fa:	(bad)  
  4113fb:	out    dx,eax
  4113fc:	mov    edi,0x1b9e2df
  411401:	inc    esp
  411402:	sbb    bh,dl
  411404:	dec    ebp
  411405:	clc    
  411406:	fcom   QWORD PTR [esi-0x2c]
  411409:	call   0xa8b8:0xf9325f9c
  411410:	inc    esi
  411411:	lahf   
  411412:	mov    dl,0x82
  411414:	push   ecx
  411415:	neg    BYTE PTR [edi+0x39f9876a]
  41141b:	pop    esi
  41141c:	call   edi
  41141e:	adc    eax,0x812932a4
  411423:	pop    ebx
  411424:	add    bh,BYTE PTR [edi+0x431a333f]
  41142a:	cdq    
  41142b:	add    DWORD PTR [edx-0x4be998f1],esi
  411431:	fcom   QWORD PTR [edi]
  411433:	sbb    cl,ch
  411435:	test   dh,cl
  411437:	push   esi
  411438:	test   DWORD PTR [ebx],ebx
  41143a:	int    0x80
  41143c:	ins    DWORD PTR es:[edi],dx
  41143d:	daa    
  41143e:	shl    BYTE PTR [eax+0x8],1
  411441:	and    BYTE PTR [edi+esi*1],ch
  411444:	mov    es,ecx
  411446:	mov    ebp,0x435ac174
  41144b:	xchg   DWORD PTR [ebp-0x5f],eax
  41144e:	stos   DWORD PTR es:[edi],eax
  41144f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411450:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411451:	dec    cl
  411453:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411454:	push   edx
  411455:	nop
  411456:	mov    edi,DWORD PTR [eax]
  411458:	jl     0x41145f
  41145a:	iret   
  41145b:	xchg   ebx,eax
  41145c:	mov    ch,0xe2
  41145e:	jecxz  0x4114b4
  411460:	mov    ch,0x32
  411462:	cmp    eax,0xd97b1985
  411467:	push   ecx
  411468:	inc    ebp
  411469:	mov    ds:0x14894006,eax
  41146e:	jmp    0xc93a6bba
  411473:	ror    DWORD PTR [eax+0x62],1
  411476:	mov    DWORD PTR [ecx],ebp
  411478:	sub    DWORD PTR [ecx],esi
  41147a:	clc    
  41147b:	push   cs
  41147c:	adc    ah,BYTE PTR [ecx]
  41147e:	push   edx
  41147f:	mov    ebp,0xcd55d812
  411484:	add    al,0x5e
  411486:	xchg   esi,eax
  411487:	daa    
  411488:	mov    dl,0x2c
  41148a:	bound  edi,QWORD PTR [ebx]
  41148c:	dec    edx
  41148d:	pop    edi
  41148e:	add    BYTE PTR [edi-0x33e1b015],dh
  411494:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411495:	sti    
  411496:	test   DWORD PTR [ebx+0x268686f5],ebx
  41149c:	ss inc eax
  41149e:	daa    
  41149f:	lds    edx,FWORD PTR [ecx]
  4114a1:	and    al,0x36
  4114a3:	xor    ebp,esi
  4114a5:	xchg   BYTE PTR [ebx],bl
  4114a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114a8:	cmp    ch,ah
  4114aa:	rol    DWORD PTR [ebx+0x45abe131],0x2e
  4114b1:	pop    ebx
  4114b2:	xchg   ecx,eax
  4114b3:	add    dl,BYTE PTR [ecx-0x7c]
  4114b6:	dec    edi
  4114b7:	xor    DWORD PTR [edx-0x46],ebx
  4114ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114bb:	cmp    BYTE PTR [eax*4-0x99189c8],0x88
  4114c3:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4114c5:	adc    al,0x37
  4114c7:	fwait
  4114c8:	lods   al,BYTE PTR ds:[esi]
  4114c9:	cmp    dl,BYTE PTR [eax-0x1c]
  4114cc:	cmp    BYTE PTR [eax+0x72],al
  4114cf:	push   esi
  4114d0:	adc    BYTE PTR [eax],0xd
  4114d3:	sahf   
  4114d4:	dec    ebx
  4114d5:	mov    dl,0xe3
  4114d7:	dec    esi
  4114d8:	fmulp  st(7),st
  4114da:	dec    ebx
  4114db:	or     al,0x7e
  4114dd:	mov    ch,0x11
  4114df:	mov    edx,0xdc36c877
  4114e4:	lahf   
  4114e5:	xor    esi,DWORD PTR [ebx-0x11164403]
  4114eb:	cdq    
  4114ec:	mov    dl,0x44
  4114ee:	sub    DWORD PTR [eax-0x99ecf4e],ebx
  4114f4:	xor    BYTE PTR [edx-0x69],bl
  4114f7:	daa    
  4114f8:	leave  
  4114f9:	add    eax,DWORD PTR [bp+di+0x1219]
  4114fe:	pop    eax
  4114ff:	pop    esp
  411500:	std    
  411501:	push   edx
  411502:	mov    ds:0xc42278e6,al
  411507:	mov    DWORD PTR [ecx],edi
  411509:	(bad)  
  41150a:	div    BYTE PTR [ebx+0x47]
  41150d:	or     dh,bl
  41150f:	test   DWORD PTR [eax],ecx
  411511:	std    
  411512:	or     eax,0xbb30ba43
  411517:	adc    DWORD PTR [ebp-0x565dce38],eax
  41151d:	adc    BYTE PTR [ebx+esi*2-0x2ccf1510],cl
  411524:	ret    0x7bfd
  411527:	xor    al,0x1
  411529:	pusha  
  41152a:	pop    edi
  41152b:	test   al,cl
  41152d:	nop
  41152e:	jne    0x411504
  411530:	jbe    0x41152f
  411532:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411533:	pop    ebx
  411534:	pop    edi
  411535:	js     0x4114e6
  411537:	sbb    eax,0xfb582bcc
  41153c:	ret    
  41153d:	(bad)  
  41153e:	icebp  
  41153f:	adc    esi,DWORD PTR [ebx-0x2d]
  411542:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411543:	pop    ebx
  411544:	add    al,0xdb
  411546:	jecxz  0x4115ab
  411548:	inc    ebp
  411549:	mov    edx,0x261e2570
  41154e:	inc    eax
  41154f:	xor    ecx,edi
  411551:	push   0x874f70b0
  411556:	pop    edx
  411557:	mov    ch,0xfc
  411559:	sub    BYTE PTR [edx-0x2b],0xdf
  41155d:	stos   DWORD PTR es:[edi],eax
  41155e:	dec    edi
  41155f:	test   eax,0x96c294ad
  411564:	and    al,0x70
  411566:	es enter 0x419,0x80
  41156b:	push   ebx
  41156c:	mov    al,ds:0x9fc658d
  411571:	cmp    al,0x5f
  411573:	cmp    ch,bl
  411575:	pop    ds
  411576:	cs sbb eax,0xc688e88f
  41157c:	jnp    0x41159e
  41157e:	or     ch,bl
  411580:	mov    ebx,0x28b7cb0b
  411585:	fild   DWORD PTR [eax+0xfeae74d]
  41158b:	loope  0x411598
  41158d:	rol    DWORD PTR [ebx+0x3d],0x56
  411591:	dec    ebx
  411592:	pop    eax
  411593:	div    BYTE PTR [eax]
  411595:	imul   eax,DWORD PTR [edi+0x31],0xffffff82
  411599:	into   
  41159a:	cld    
  41159b:	cli    
  41159c:	inc    edx
  41159d:	push   edx
  41159e:	cli    
  41159f:	jbe    0x4115a9
  4115a1:	loopne 0x41152f
  4115a3:	je     0x4115c0
  4115a5:	sub    eax,0xaeba509b
  4115aa:	rol    DWORD PTR [eax-0x4bb677d3],1
  4115b0:	or     DWORD PTR [eax+0x16],ebx
  4115b3:	mov    eax,0xa743d416
  4115b8:	push   0xa4a00c9f
  4115bd:	outs   dx,BYTE PTR gs:[esi]
  4115bf:	movsx  eax,ax
  4115c2:	fsubr  st,st(1)
  4115c4:	call   0xa742:0x3213c783
  4115cb:	in     al,dx
  4115cc:	test   BYTE PTR [edi],ch
  4115ce:	das    
  4115cf:	and    ch,BYTE PTR [ebx+0x21ec1120]
  4115d5:	jmp    0xb3dda560
  4115da:	(bad)  
  4115db:	aas    
  4115dc:	dec    esp
  4115dd:	lds    eax,FWORD PTR [ecx]
  4115df:	dec    ebx
  4115e0:	call   0x1e7e6555
  4115e5:	mov    ah,BYTE PTR [ebp+0x5f]
  4115e8:	mov    al,0x73
  4115ea:	outs   dx,DWORD PTR ds:[esi]
  4115eb:	dec    ebp
  4115ec:	xor    al,0xae
  4115ee:	fsub   DWORD PTR [ecx-0x1b2f1326]
  4115f4:	sti    
  4115f5:	and    esi,esp
  4115f7:	jb     0x4115e0
  4115f9:	xchg   ecx,eax
  4115fa:	push   ss
  4115fb:	and    BYTE PTR ds:0x236dbc49,0xb7
  411602:	addr16 inc edx
  411604:	popf   
  411605:	mov    edi,0x12f99cec
  41160a:	out    0xa4,eax
  41160c:	jae    0x4115f1
  41160e:	out    0xae,al
  411610:	fcomp  DWORD PTR [ecx]
  411612:	pushf  
  411613:	ins    DWORD PTR es:[edi],dx
  411614:	xchg   dl,al
  411616:	imul   BYTE PTR [ecx]
  411618:	cwde   
  411619:	adc    eax,0xfa6bb503
  41161e:	(bad)  
  41161f:	hlt    
  411620:	mov    dh,0x15
  411622:	or     ebp,DWORD PTR [esi-0x39e73644]
  411628:	xchg   edx,eax
  411629:	sub    bh,BYTE PTR [edi+ecx*8+0x61f3914e]
  411630:	cmp    eax,0x54c4efa8
  411635:	icebp  
  411636:	leave  
  411637:	std    
  411638:	mov    edx,esp
  41163a:	xor    ecx,DWORD PTR [esi]
  41163c:	out    dx,al
  41163d:	test   eax,0xc7235e71
  411642:	ror    BYTE PTR [ebx],1
  411644:	aad    0x6d
  411646:	pslld  mm7,QWORD PTR [ebp+0x52]
  41164a:	or     al,0x1d
  41164c:	js     0x41163a
  41164e:	out    0xfa,eax
  411650:	sub    BYTE PTR [esi],bh
  411652:	test   DWORD PTR [esi-0x70],ebp
  411655:	pop    ds
  411656:	je     0x411696
  411658:	sbb    DWORD PTR [edx],eax
  41165a:	jp     0x41167d
  41165c:	fadd   DWORD PTR [edx]
  41165e:	dec    ecx
  41165f:	push   ebx
  411660:	mov    WORD PTR [eax+0x74ff03a2],ds
  411666:	pusha  
  411667:	(bad)  
  411668:	leave  
  411669:	unpckhps xmm7,XMMWORD PTR ds:0x27f00037
  411670:	push   edx
  411671:	jmp    0xb06b3653
  411676:	clc    
  411677:	fiadd  WORD PTR [edx+eiz*8]
  41167a:	mov    al,0xda
  41167c:	enter  0x59d1,0x6b
  411680:	lea    ebx,[ecx]
  411682:	(bad)  
  411683:	inc    esp
  411684:	mov    al,0x30
  411686:	in     al,dx
  411687:	loope  0x4116da
  411689:	out    dx,eax
  41168a:	sti    
  41168b:	xor    edx,DWORD PTR [edi+ebp*2+0x1558bfe9]
  411692:	inc    ebp
  411693:	adc    dh,dl
  411695:	mov    edx,0xb0f79b84
  41169a:	iret   
  41169b:	shl    BYTE PTR [ebx+0x5d157cb7],cl
  4116a1:	(bad)  
  4116a2:	scas   eax,DWORD PTR es:[edi]
  4116a3:	adc    DWORD PTR [eax],edi
  4116a5:	leave  
  4116a6:	or     dl,BYTE PTR cs:[eax]
  4116a9:	sbb    esp,DWORD PTR [ebx+0x7b]
  4116ac:	retfw  0x743
  4116b0:	fs ds mov esi,0xdce1cce2
  4116b7:	or     dh,BYTE PTR ds:0x4675a5c2
  4116bd:	lods   al,BYTE PTR ds:[esi]
  4116be:	push   ds
  4116bf:	xor    BYTE PTR [ecx],ah
  4116c1:	xor    esp,ecx
  4116c3:	es in  eax,dx
  4116c5:	je     0x4116c9
  4116c7:	jo     0x411720
  4116c9:	jecxz  0x4116d8
  4116cb:	push   edx
  4116cc:	jb     0x411730
  4116ce:	mov    ah,0x12
  4116d0:	cwde   
  4116d1:	inc    edi
  4116d2:	mov    ss,WORD PTR [edi]
  4116d4:	adc    DWORD PTR [edi+0x55],ebp
  4116d7:	fwait
  4116d8:	mov    esi,0x760020cd
  4116dd:	mov    ah,0x15
  4116df:	mov    ebp,0xd9a772a1
  4116e4:	xor    BYTE PTR [ebp+0x42],0x15
  4116e8:	pop    ecx
  4116e9:	mov    edi,DWORD PTR [ebx]
  4116eb:	call   0x4f96:0x772d4366
  4116f2:	add    eax,0x80272090
  4116f7:	daa    
  4116f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116f9:	cdq    
  4116fa:	sbb    BYTE PTR [eax-0x50efada4],ch
  411700:	(bad)  
  411702:	lahf   
  411703:	iret   
  411704:	lods   al,BYTE PTR ds:[esi]
  411705:	call   0xd85889be
  41170a:	xor    al,cl
  41170c:	mov    al,ds:0x545c7800
  411711:	xchg   edx,eax
  411712:	dec    esp
  411713:	xor    dh,BYTE PTR [ecx-0x76]
  411716:	test   BYTE PTR [ecx+0x2d],bl
  411719:	clc    
  41171a:	jg     0x411732
  41171c:	and    al,0x17
  41171e:	(bad)  
  411720:	ret    
  411721:	clc    
  411722:	push   esi
  411723:	fld    TBYTE PTR [ebp-0x46]
  411726:	fstp   TBYTE PTR [esp+ebp*2+0x22]
  41172a:	jmp    0x41178b
  41172c:	cwde   
  41172d:	dec    esp
  41172e:	mov    ebx,0xe39b0efd
  411733:	ror    DWORD PTR [edx-0x446d0574],0xfa
  41173a:	aaa    
  41173b:	loop   0x4116e4
  41173d:	pop    ecx
  41173e:	lock (bad) 
  411740:	ss ds scas al,BYTE PTR es:[edi]
  411743:	and    esi,DWORD PTR [edi+0x3457494f]
  411749:	jns    0x4116e2
  41174b:	dec    ecx
  41174c:	xchg   bl,ch
  41174e:	mov    ds:0x3686c7b8,eax
  411753:	leave  
  411754:	(bad)  
  411756:	jae    0x4117b2
  411758:	inc    edi
  411759:	scas   eax,DWORD PTR es:[edi]
  41175a:	icebp  
  41175b:	pop    es
  41175c:	loope  0x411754
  41175e:	xor    eax,0x98c77a36
  411763:	or     DWORD PTR es:0x954a07f1,edx
  41176a:	xor    DWORD PTR ds:0xd02cd3f4,eax
  411770:	aad    0xc4
  411772:	pop    edi
  411773:	ret    
  411774:	ss (bad) 
  411776:	enter  0x99ba,0x57
  41177a:	mov    edi,0x2efb2dae
  41177f:	scas   al,BYTE PTR es:[edi]
  411780:	mov    ah,0x70
  411782:	call   0x50b5f986
  411787:	and    edi,0x8975ac60
  41178d:	pusha  
  41178e:	sbb    al,ah
  411790:	(bad)  
  411792:	xor    BYTE PTR [ebx+0x63],bh
  411795:	ds (bad) 
  411797:	lock ret 
  411799:	or     eax,0x5a83a83d
  41179e:	aam    0x35
  4117a0:	outs   dx,BYTE PTR ds:[esi]
  4117a1:	iret   
  4117a2:	stos   BYTE PTR es:[edi],al
  4117a3:	or     ch,BYTE PTR [edi+0x5c]
  4117a6:	mov    ds:0xb25ecfcf,al
  4117ab:	int3   
  4117ac:	leave  
  4117ad:	ds pop edi
  4117af:	stos   BYTE PTR es:[edi],al
  4117b0:	cmc    
  4117b1:	loopne 0x411770
  4117b3:	loopne 0x411757
  4117b5:	adc    eax,0xb7d7cfdc
  4117ba:	dec    ecx
  4117bb:	pop    es
  4117bc:	inc    eax
  4117bd:	fadd   DWORD PTR [edx+ecx*4]
  4117c0:	mov    ebp,0xa95e8286
  4117c5:	add    al,0x3f
  4117c7:	es adc bl,dl
  4117ca:	dec    eax
  4117cb:	pop    es
  4117cc:	add    ecx,DWORD PTR [esp+esi*2+0xa]
  4117d0:	lods   al,BYTE PTR ds:[esi]
  4117d1:	(bad)  [ecx]
  4117d3:	fisub  DWORD PTR [ecx]
  4117d5:	xchg   edi,eax
  4117d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117d7:	xor    BYTE PTR [ebx-0x5f9d5325],al
  4117dd:	std    
  4117de:	sub    ecx,DWORD PTR [esi+0x66]
  4117e1:	cmp    DWORD PTR [ecx+eax*4-0x44],esi
  4117e5:	sub    BYTE PTR [ecx+0x343f9343],bl
  4117eb:	(bad)  
  4117ec:	sahf   
  4117ed:	push   esp
  4117ee:	mov    cl,0x91
  4117f0:	das    
  4117f1:	xor    edi,eax
  4117f3:	sub    ch,0xc0
  4117f6:	inc    ecx
  4117f7:	shr    ebp,cl
  4117f9:	jmp    0xead2:0x18bd61db
  411800:	sbb    dl,bl
  411802:	jno    0x411851
  411804:	(bad)  
  411806:	push   ss
  411807:	mov    esp,0xcbd3ddd3
  41180c:	cld    
  41180d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41180e:	js     0x411802
  411810:	fcomip st,st(1)
  411812:	fcom   st(1)
  411814:	xor    al,0xca
  411816:	cs and ah,ah
  411819:	jle    0x4117cb
  41181b:	ror    BYTE PTR [edi+0x65],1
  41181e:	sti    
  41181f:	loop   0x4117ed
  411821:	mov    dl,0x86
  411823:	cmp    BYTE PTR [ecx+edx*2],bl
  411826:	jmp    0xaa1f:0x76b84bd8
  41182d:	xor    al,0xb4
  41182f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411830:	stos   DWORD PTR es:[edi],eax
  411831:	lods   al,BYTE PTR ds:[esi]
  411832:	retf   0xc342
  411835:	add    al,cl
  411837:	gs pop edi
  411839:	dec    ecx
  41183a:	in     eax,0x2f
  41183c:	jb     0x4117c2
  41183e:	cli    
  41183f:	inc    edx
  411840:	jae    0x41186a
  411842:	addr16 sahf 
  411844:	fsub   DWORD PTR [edx-0x7e1d3fb0]
  41184a:	mov    al,0xdd
  41184c:	(bad)  
  41184d:	mov    al,0x88
  41184f:	mov    cl,0x6e
  411851:	mov    ds:0x51521670,al
  411856:	mov    bl,0x1d
  411858:	sub    edi,DWORD PTR [ebx-0x3e]
  41185b:	pop    eax
  41185c:	int    0xe7
  41185e:	mov    ch,0x4
  411860:	(bad)  
  411861:	mov    esi,0xcb584355
  411866:	mov    ebx,0x4ea4c3a9
  41186b:	imul   edx,DWORD PTR [ebx+0x2c],0x82634174
  411872:	xchg   ecx,eax
  411873:	xchg   esi,eax
  411874:	add    al,0x4e
  411876:	aas    
  411877:	data16 fist WORD PTR [esi-0x74]
  41187b:	pushf  
  41187c:	ja     0x41181f
  41187e:	call   0xa24d0398
  411883:	adc    esp,DWORD PTR [edi-0x38c1faf5]
  411889:	shr    bh,0x7b
  41188c:	push   ebx
  41188d:	(bad)  
  411891:	xchg   BYTE PTR [ebp-0x720eaec],dh
  411897:	jmp    DWORD PTR [ecx]
  411899:	int    0x9d
  41189b:	mov    BYTE PTR [eax+0x2e],ch
  41189e:	sub    al,BYTE PTR [ecx-0xb]
  4118a1:	mov    edx,0xe94d2060
  4118a6:	js     0x411852
  4118a8:	inc    esp
  4118a9:	xchg   ebx,eax
  4118aa:	jnp    0x4118cd
  4118ac:	adc    esi,DWORD PTR [ebp+ebp*4+0x1e]
  4118b0:	mov    bl,BYTE PTR [esi+ebp*1+0x1a]
  4118b4:	sub    eax,0x84f59dd4
  4118b9:	ficomp WORD PTR [edx-0x1aa26754]
  4118bf:	adc    ah,dh
  4118c1:	loop   0x4118bf
  4118c3:	xor    edi,edi
  4118c5:	cmp    dl,BYTE PTR [ebx]
  4118c7:	mov    DWORD PTR [ebx-0x60],0x88d1afd3
  4118ce:	push   ss
  4118cf:	(bad)
  4118d2:	jl     0x41185b
  4118d4:	sbb    ebx,DWORD PTR [ebx]
  4118d6:	(bad)  
  4118d7:	mov    edi,0x375836ce
  4118dc:	in     al,dx
  4118dd:	nop
  4118de:	push   edi
  4118df:	mov    ebp,0x16096f25
  4118e4:	or     al,0x12
  4118e6:	add    eax,0xbe2bfb74
  4118eb:	pop    ecx
  4118ec:	add    ebx,DWORD PTR [ebx+0x40e335d5]
  4118f2:	push   eax
  4118f3:	popa   
  4118f4:	dec    ebx
  4118f5:	push   edi
  4118f6:	or     edi,DWORD PTR [esi-0x3e]
  4118f9:	repnz iret 
  4118fb:	cmp    al,0x81
  4118fd:	es inc edi
  4118ff:	push   esp
  411900:	xchg   esp,eax
  411901:	lahf   
  411902:	add    DWORD PTR [ebp-0xd069e2c],edx
  411908:	aas    
  411909:	push   cs
  41190a:	int    0xef
  41190c:	out    dx,al
  41190d:	sar    DWORD PTR [ebx-0x1a],1
  411910:	xchg   edx,eax
  411911:	gs ss mov edx,0xb9fa1cfb
  411918:	jns    0x411908
  41191a:	mov    ds:0xea91e810,al
  41191f:	and    BYTE PTR [edi-0xf],bh
  411922:	jmp    0x41199c
  411924:	dec    ebx
  411925:	jae    0x411947
  411927:	xchg   ecx,eax
  411928:	js     0x4118c1
  41192a:	pop    ecx
  41192b:	xchg   ecx,eax
  41192c:	pop    edi
  41192d:	daa    
  41192e:	add    ah,BYTE PTR [edi]
  411930:	(bad)  
  411931:	xchg   esp,eax
  411932:	mov    ecx,0x3d8cccb
  411937:	repnz xor al,BYTE PTR [edi-0x1d2da2f0]
  41193e:	or     al,0xf7
  411940:	and    BYTE PTR [eax],al
  411942:	push   0x9
  411944:	push   edx
  411945:	pop    eax
  411946:	sub    BYTE PTR [esi-0x54],dl
  411949:	clc    
  41194a:	ins    BYTE PTR es:[edi],dx
  41194b:	mov    dl,0x95
  41194d:	sub    DWORD PTR [edx],ebx
  41194f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411950:	shl    edx,0x13
  411953:	fld    DWORD PTR [ebp-0x5f3eaf9c]
  411959:	imul   ecx,DWORD PTR [eax-0x163e0b54],0xffffff9c
  411960:	fldcw  WORD PTR [ecx]
  411962:	cwde   
  411963:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411964:	dec    edx
  411965:	(bad)  
  411966:	pop    ds
  411967:	lods   al,BYTE PTR ds:[esi]
  411968:	in     eax,0x5c
  41196a:	mov    eax,ds:0x29aed10
  41196f:	adc    eax,0x1d956269
  411974:	in     al,dx
  411975:	sbb    eax,0xcd3599b8
  41197a:	mov    ebp,?
  41197c:	leave  
  41197d:	test   BYTE PTR [eax+0x77],cl
  411980:	push   es
  411981:	mov    esp,0xde413e76
  411986:	inc    eax
  411987:	mov    esi,0x57ddfbc9
  41198c:	jns    0x4119db
  41198e:	pop    esp
  41198f:	(bad)  
  411990:	repz mov ebx,DWORD PTR [ecx]
  411993:	adc    eax,0xd9cce55f
  411998:	ss mov esp,?
  41199b:	inc    esp
  41199c:	mov    ebp,ebx
  41199e:	sbb    eax,0xbf3f1a71
  4119a3:	adc    DWORD PTR [ebp-0x1e],esp
  4119a6:	outs   dx,BYTE PTR ds:[esi]
  4119a7:	int3   
  4119a8:	pop    es
  4119a9:	pop    ecx
  4119aa:	sbb    BYTE PTR [ebx],0xb
  4119ad:	fimul  DWORD PTR [edi]
  4119af:	je     0x411931
  4119b1:	outs   dx,BYTE PTR ds:[esi]
  4119b2:	stos   DWORD PTR es:[edi],eax
  4119b3:	popa   
  4119b4:	adc    dl,BYTE PTR [di]
  4119b7:	pop    ds
  4119b8:	sbb    eax,0x9ef9e90b
  4119bd:	xor    eax,DWORD PTR [edx+0x62c2ccfc]
  4119c3:	out    0x48,al
  4119c5:	add    DWORD PTR [edx-0x2c],eax
  4119c8:	jl     0x411966
  4119ca:	es pop ds
  4119cc:	mov    dh,0x45
  4119ce:	test   al,0x74
  4119d0:	dec    esp
  4119d1:	mov    ds:0xda7ebc90,al
  4119d6:	std    
  4119d7:	in     al,dx
  4119d8:	hlt    
  4119d9:	data16 sahf 
  4119db:	test   BYTE PTR [ebp+eax*2-0x1fb471a5],0x83
  4119e3:	inc    ecx
  4119e4:	xor    eax,0xd6226566
  4119e9:	cmp    eax,0xa92a5ed9
  4119ee:	xor    BYTE PTR [esi],0x17
  4119f1:	xor    BYTE PTR [ebp+0x4c],0x89
  4119f5:	mov    dl,0x53
  4119f7:	inc    ebp
  4119f8:	add    BYTE PTR [edi+ecx*2],dh
  4119fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119fc:	or     eax,0xeb579da5
  411a01:	(bad)  
  411a02:	adc    ecx,DWORD PTR [ecx+0x11]
  411a05:	jle    0x4119af
  411a07:	xlat   BYTE PTR ds:[ebx]
  411a08:	inc    eax
  411a09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a0a:	push   edx
  411a0b:	cmp    al,0x58
  411a0d:	pop    esp
  411a0e:	mov    bh,cl
  411a10:	sub    dl,ah
  411a12:	mov    esp,0x71024cda
  411a17:	hlt    
  411a18:	xchg   ebx,eax
  411a19:	and    eax,0xf6709daa
  411a1e:	call   0x11ee5b6e
  411a23:	(bad)  
  411a24:	cmp    bh,0x27
  411a27:	mov    edx,0x3e12747c
  411a2c:	lock call 0xeda00df0
  411a32:	cs dec ebx
  411a34:	sub    eax,0xc4df5749
  411a39:	call   edi
  411a3b:	fadd   QWORD PTR [esi+eax*4]
  411a3e:	jp     0x411a2d
  411a40:	in     al,0x98
  411a42:	adc    edx,DWORD PTR [ecx-0x46]
  411a45:	sub    BYTE PTR [esi-0x52],cl
  411a48:	xchg   esp,eax
  411a49:	ror    DWORD PTR [edx-0x28],1
  411a4c:	out    dx,al
  411a4d:	int3   
  411a4e:	add    eax,0x2010d429
  411a53:	mov    bl,0x6d
  411a55:	mov    ds:0x843c0d7a,al
  411a5a:	(bad)  
  411a5b:	nop
  411a5c:	mov    ecx,0xa9518829
  411a61:	push   0xffffff8b
  411a63:	cs ss and eax,0xe5194cbc
  411a6a:	sbb    ch,BYTE PTR [ecx-0x75c0dd28]
  411a70:	imul   al
  411a72:	scas   al,BYTE PTR es:[edi]
  411a73:	or     BYTE PTR [edx+0x7a],cl
  411a76:	jnp    0x411a1c
  411a78:	rol    BYTE PTR [ecx+eiz*1+0x74],cl
  411a7c:	xchg   edx,eax
  411a7d:	push   esi
  411a7e:	(bad)  
  411a7f:	mov    al,ds:0x1bfb3480
  411a84:	cld    
  411a85:	rol    BYTE PTR [ecx+ebp*1-0x1e],1
  411a89:	dec    BYTE PTR [ebx-0x2d]
  411a8c:	popf   
  411a8d:	sbb    ecx,ebp
  411a8f:	pop    es
  411a90:	pusha  
  411a91:	push   ss
  411a92:	jno    0x411a9f
  411a94:	sbb    bh,ah
  411a96:	std    
  411a97:	dec    ecx
  411a98:	in     eax,0x1d
  411a9a:	test   al,0x33
  411a9c:	sbb    al,0x54
  411a9e:	or     ch,ah
  411aa0:	js     0x411ad8
  411aa2:	into   
  411aa3:	adc    DWORD PTR [ebp+0xb348953],ebp
  411aa9:	fiadd  DWORD PTR ds:0x924bbae6
  411aaf:	or     DWORD PTR [edx+0x15],esi
  411ab2:	sub    DWORD PTR [ecx-0x4d9007c1],esp
  411ab8:	sub    DWORD PTR [ecx-0x754c4286],esp
  411abe:	lahf   
  411abf:	xchg   esp,eax
  411ac0:	stc    
  411ac1:	adc    ch,BYTE PTR [eax]
  411ac3:	sbb    cl,BYTE PTR ds:0x4e406b75
  411ac9:	jno    0x411b3b
  411acb:	xchg   edx,eax
  411acc:	xchg   ebp,eax
  411acd:	stos   BYTE PTR es:[edi],al
  411ace:	mov    bl,0x2b
  411ad0:	xor    al,0x84
  411ad2:	xchg   BYTE PTR [esi],bl
  411ad4:	js     0x411af1
  411ad6:	xchg   ecx,eax
  411ad7:	cmp    al,0xa8
  411ad9:	mov    al,0x8c
  411adb:	adc    eax,DWORD PTR [edx]
  411add:	jbe    0x411ae0
  411adf:	fild   QWORD PTR [edi-0x7b]
  411ae2:	sti    
  411ae3:	sbb    cl,ch
  411ae5:	nop
  411ae6:	(bad)  
  411ae7:	lahf   
  411ae8:	adc    dh,BYTE PTR [edi]
  411aea:	mov    ebx,0x34892d45
  411aef:	pusha  
  411af0:	mov    al,0x63
  411af2:	fild   QWORD PTR [ecx]
  411af4:	inc    edi
  411af5:	inc    ecx
  411af6:	and    eax,0x52f577a8
  411afb:	hlt    
  411afc:	jp     0x411adc
  411afe:	imul   ebx,DWORD PTR [ecx-0x12],0xffffffcb
  411b02:	xchg   DWORD PTR [edi-0x46],edx
  411b05:	xor    ch,BYTE PTR [ebx]
  411b07:	(bad)  
  411b08:	mov    ds:0xa6008534,eax
  411b0d:	and    eax,0x26
  411b10:	pop    esi
  411b11:	pop    edx
  411b12:	(bad)  
  411b14:	push   ss
  411b15:	sub    BYTE PTR [ecx+edx*1],cl
  411b18:	je     0x411ad5
  411b1a:	aam    0x83
  411b1c:	sub    esi,DWORD PTR ds:0x2708e318
  411b22:	xor    al,0x31
  411b24:	hlt    
  411b25:	pushf  
  411b26:	mov    bl,0x86
  411b28:	mov    ds:0x80000795,eax
  411b2d:	fwait
  411b2e:	test   BYTE PTR [edi],ch
  411b30:	sub    esi,ebx
  411b32:	add    bl,al
  411b34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b35:	into   
  411b36:	xchg   esi,eax
  411b37:	jnp    0x411ba8
  411b39:	mov    bl,BYTE PTR [ecx-0x3ed8dbb4]
  411b3f:	comiss xmm1,xmm2
  411b42:	cdq    
  411b43:	or     DWORD PTR [esi+0x1a1ea5d8],edi
  411b49:	xchg   edi,eax
  411b4a:	ds (bad) 
  411b4c:	jge    0x411b87
  411b4e:	mov    WORD PTR [ebx-0x649bcfa],fs
  411b54:	mov    bl,0xb
  411b56:	xor    al,0x3d
  411b58:	inc    eax
  411b59:	jnp    0x411b32
  411b5b:	mov    BYTE PTR gs:[ebx-0x51],0xe
  411b60:	aas    
  411b61:	fstp   TBYTE PTR [edx]
  411b63:	fild   QWORD PTR [eax-0x41]
  411b66:	mov    cl,0xb3
  411b68:	fisttp QWORD PTR [esi]
  411b6a:	sar    BYTE PTR ds:[esi],0x38
  411b6e:	xor    eax,0x7550bec
  411b73:	enter  0xe7b3,0x2b
  411b77:	jmp    0xb88f1dba
  411b7c:	sub    eax,0xc8f51bea
  411b81:	pop    ebp
  411b82:	cmp    al,al
  411b84:	or     dl,ah
  411b86:	xor    al,0x94
  411b88:	inc    edx
  411b89:	xlat   BYTE PTR ds:[ebx]
  411b8a:	or     edx,DWORD PTR [ecx]
  411b8c:	ja     0x411bb8
  411b8e:	pop    ds
  411b8f:	cmp    BYTE PTR [ecx+0x650baf67],cl
  411b95:	sbb    BYTE PTR [esi+0x79],dl
  411b98:	adc    al,0x88
  411b9a:	sahf   
  411b9b:	cli    
  411b9c:	or     ebp,eax
  411b9e:	(bad)  
  411b9f:	ins    DWORD PTR es:[edi],dx
  411ba0:	or     al,0x42
  411ba2:	jb     0x411bbe
  411ba4:	jmp    0x411b6e
  411ba6:	jae    0x411bfc
  411ba8:	add    bh,BYTE PTR [esp+eax*1]
  411bab:	inc    esp
  411bac:	inc    esp
  411bad:	add    BYTE PTR [edi-0x105e1a29],0x68
  411bb4:	or     eax,0x1f08b342
  411bb9:	cdq    
  411bba:	and    al,0x1e
  411bbc:	pop    esp
  411bbd:	add    BYTE PTR [ebp-0x59],bl
  411bc0:	dec    edi
  411bc1:	push   ebp
  411bc2:	test   DWORD PTR [edx-0x16],ebx
  411bc5:	adc    eax,0x7f6874d5
  411bca:	xchg   ebx,eax
  411bcb:	in     al,0xc5
  411bcd:	dec    edx
  411bce:	sti    
  411bcf:	xchg   ebp,eax
  411bd0:	mov    WORD PTR [edx-0x7f83af64],gs
  411bd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bd7:	outs   dx,DWORD PTR ds:[esi]
  411bd8:	and    BYTE PTR [ebp+ebp*4+0x2c],ch
  411bdc:	lods   al,BYTE PTR ds:[esi]
  411bdd:	stos   BYTE PTR es:[edi],al
  411bde:	pusha  
  411bdf:	push   eax
  411be0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411be1:	iret   
  411be2:	add    DWORD PTR [esi],esp
  411be4:	rdtscp 
  411be7:	repnz fmul DWORD PTR [eax]
  411bea:	gs adc eax,0x6113e4d5
  411bf1:	mov    bl,0xc5
  411bf3:	mov    dh,0x3d
  411bf5:	mov    WORD PTR [edx],ss
  411bf7:	jg     0x411bb6
  411bf9:	es out dx,al
  411bfb:	fidiv  WORD PTR [eax]
  411bfd:	scas   eax,DWORD PTR es:[edi]
  411bfe:	dec    ecx
  411bff:	or     cl,BYTE PTR [eax-0x6430e71a]
  411c05:	or     BYTE PTR [eax-0x4f41dfc0],cl
  411c0b:	loope  0x411c0f
  411c0d:	jmp    0x411c83
  411c0f:	inc    ebx
  411c10:	cmp    DWORD PTR [esi-0x7a],esi
  411c13:	pop    esi
  411c14:	fcmovbe st,st(7)
  411c16:	push   esp
  411c17:	outs   dx,DWORD PTR ds:[esi]
  411c18:	call   0xb494:0x6f318732
  411c1f:	imul   esp,ebx,0xffffffe9
  411c22:	inc    esi
  411c23:	scas   al,BYTE PTR es:[edi]
  411c24:	sbb    al,0x4f
  411c26:	outs   dx,DWORD PTR ds:[esi]
  411c27:	loop   0x411c00
  411c29:	mov    eax,DWORD PTR [ecx]
  411c2b:	stc    
  411c2c:	push   ebx
  411c2d:	mov    edi,0xdb02a00a
  411c32:	iret   
  411c33:	dec    ebx
  411c34:	mov    bh,0xa4
  411c36:	pop    ebp
  411c37:	mov    esi,0xe6019607
  411c3c:	arpl   WORD PTR [edx+0x46],ax
  411c3f:	sub    al,0x31
  411c41:	push   esp
  411c42:	std    
  411c43:	popf   
  411c44:	xor    eax,0x6eb36055
  411c49:	mov    esp,0xbc3f910b
  411c4e:	jnp    0x411bdf
  411c50:	in     eax,dx
  411c51:	out    0xf1,al
  411c53:	inc    ecx
  411c54:	mov    ds:0x587642ba,eax
  411c59:	sti    
  411c5a:	cmp    ebp,DWORD PTR [edx-0x7f]
  411c5d:	in     al,0xf0
  411c5f:	lods   eax,DWORD PTR ds:[esi]
  411c60:	lods   al,BYTE PTR es:[esi]
  411c62:	xchg   ecx,eax
  411c63:	cmp    al,0x49
  411c65:	and    eax,0xe7af7de1
  411c6a:	xchg   ah,cl
  411c6c:	jmp    0x6e55:0x1df0a772
  411c73:	jle    0x411c7c
  411c75:	inc    eax
  411c76:	mov    esp,0xa545013b
  411c7b:	mov    ebx,DWORD PTR [esi-0x78a2accf]
  411c81:	xchg   edx,eax
  411c82:	data16 cs (bad) 
  411c85:	jl     0x411cd9
  411c87:	sbb    ecx,DWORD PTR [eax+0x8a24b42]
  411c8d:	cld    
  411c8e:	and    ch,bl
  411c90:	lds    edi,FWORD PTR [ebp+0x56]
  411c93:	pusha  
  411c94:	cld    
  411c95:	add    cl,al
  411c97:	jae    0x411c59
  411c99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c9b:	dec    edx
  411c9c:	cmp    esi,ecx
  411c9e:	jl     0x411d1f
  411ca0:	add    ebp,ecx
  411ca2:	in     eax,0x18
  411ca4:	xor    cl,BYTE PTR [esi]
  411ca6:	or     BYTE PTR [ecx+edi*2+0x43],0xa
  411cab:	iret   
  411cac:	(bad)  
  411cad:	jle    0x411d11
  411caf:	and    DWORD PTR [ebx+0x4a],ecx
  411cb2:	cli    
  411cb3:	push   0x44
  411cb5:	sub    ch,al
  411cb7:	dec    ebx
  411cb8:	push   ss
  411cb9:	loopne 0x411caa
  411cbb:	add    eax,0xdabe3674
  411cc0:	pushf  
  411cc1:	inc    eax
  411cc2:	pop    ss
  411cc3:	leave  
  411cc4:	or     DWORD PTR [esi],ecx
  411cc6:	push   ebp
  411cc7:	lods   al,BYTE PTR ds:[esi]
  411cc8:	test   BYTE PTR [esi-0x435c9d89],bh
  411cce:	(bad)  
  411ccf:	add    al,0x89
  411cd1:	scas   al,BYTE PTR es:[edi]
  411cd2:	mul    BYTE PTR [edi+0x1aa1d25a]
  411cd8:	mov    BYTE PTR [ebp-0x1e],ch
  411cdb:	fadd   st,st(0)
  411cdd:	test   eax,0x67956c14
  411ce2:	aad    0x52
  411ce4:	das    
  411ce5:	inc    edx
  411ce6:	xor    eax,0x8efb8d65
  411ceb:	(bad)  
  411cec:	ror    cl,cl
  411cee:	dec    ebp
  411cef:	int3   
  411cf0:	inc    eax
  411cf1:	dec    ebx
  411cf2:	pop    ebp
  411cf3:	or     eax,0xb30323d5
  411cf8:	mov    edi,DWORD PTR [eax]
  411cfa:	adc    edi,edx
  411cfc:	(bad)  
  411cfd:	fisttp WORD PTR [ecx+edx*4-0x46a09b9e]
  411d04:	aas    
  411d05:	popf   
  411d06:	sahf   
  411d07:	outs   dx,BYTE PTR ds:[esi]
  411d08:	push   edi
  411d09:	sub    DWORD PTR [ebp+esi*4-0xd],0xb98c2e25
  411d11:	pop    ecx
  411d12:	and    al,0xaf
  411d14:	mov    ah,0x76
  411d16:	push   ebp
  411d17:	mov    al,ds:0xd01a80d
  411d1c:	sub    edx,esi
  411d1e:	dec    ebp
  411d1f:	ja     0x411d4b
  411d21:	dec    edx
  411d22:	sahf   
  411d23:	push   ebp
  411d24:	call   0xe7a:0x85941c64
  411d2b:	test   bh,al
  411d2d:	(bad)  
  411d2e:	sbb    esp,DWORD PTR [edi-0x6e033ed5]
  411d34:	std    
  411d35:	mov    dl,0xdc
  411d37:	cdq    
  411d38:	inc    edi
  411d39:	ins    BYTE PTR es:[edi],dx
  411d3a:	mov    ebx,0x35746cb2
  411d3f:	dec    ebp
  411d40:	and    ah,dh
  411d42:	aaa    
  411d43:	jns    0x411cee
  411d45:	jns    0x411da3
  411d47:	vpshlb ymm6,[edx],xmm1
  411d4c:	add    al,0x47
  411d4e:	retf   
  411d4f:	addr16 cmp eax,0xbf64a2ab
  411d55:	imul   esi,esi,0x116c2028
  411d5b:	inc    DWORD PTR [ebx]
  411d5d:	stos   DWORD PTR es:[edi],eax
  411d5e:	jmp    0x363f:0xa8f9ae2d
  411d65:	sbb    eax,0xcf8e24e0
  411d6a:	and    BYTE PTR [ebx+edx*8],cl
  411d6d:	std    
  411d6e:	xchg   esi,eax
  411d6f:	aam    0x3a
  411d71:	cmp    al,0x8c
  411d73:	jo     0x411d1f
  411d75:	pop    esp
  411d76:	pop    ebp
  411d77:	mul    BYTE PTR [ebx]
  411d79:	or     al,0x2e
  411d7b:	mov    ebp,0xb96756cb
  411d80:	inc    ebp
  411d81:	stos   BYTE PTR es:[edi],al
  411d82:	cmp    edx,DWORD PTR [edx+eiz*2]
  411d85:	out    0x9a,eax
  411d87:	aas    
  411d88:	adc    al,0x12
  411d8a:	mov    eax,ds:0xd85f45bb
  411d8f:	out    dx,eax
  411d90:	dec    edx
  411d91:	dec    esi
  411d92:	add    DWORD PTR [bx-0x64c8],edi
  411d97:	fdivr  st,st(5)
  411d99:	sub    ch,BYTE PTR [ecx-0x2d]
  411d9c:	and    eax,ecx
  411d9e:	pop    es
  411d9f:	sub    cl,BYTE PTR [ecx]
  411da1:	xor    BYTE PTR [ebx-0x6],bh
  411da4:	cld    
  411da5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411da6:	int    0xbd
  411da8:	lods   al,BYTE PTR ds:[esi]
  411da9:	scas   al,BYTE PTR es:[edi]
  411daa:	ret    
  411dab:	and    eax,0xadda22b7
  411db0:	inc    eax
  411db1:	sahf   
  411db2:	imul   edx,DWORD PTR [esi+edi*2],0x29
  411db6:	xchg   ebx,eax
  411db7:	push   edi
  411db8:	push   ebx
  411db9:	xor    DWORD PTR ds:0x42a3c6,0x6495
  411dc3:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  411dca:	sub    ecx,0x160a
  411dd0:	jmp    0x414158
  411dd5:	adc    eax,0x1bd93348
  411dda:	lea    ecx,[ebx+0x2fbe3784]
  411de0:	cmp    esp,esi
  411de2:	cwde   
  411de3:	std    
  411de4:	sub    dh,BYTE PTR [ebp+0x177a7a82]
  411dea:	pop    edi
  411deb:	jp     0x411e67
  411ded:	arpl   bx,sp
  411def:	inc    BYTE PTR [eax+esi*1+0x5c]
  411df3:	sbb    ch,BYTE PTR [ecx-0x61]
  411df6:	test   DWORD PTR ds:0xa0de8941,edi
  411dfc:	xchg   edx,eax
  411dfd:	mov    eax,0x3769e036
  411e02:	and    al,0x34
  411e04:	ficomp WORD PTR [ecx-0x1d53d6e0]
  411e0a:	cld    
  411e0b:	sbb    ah,BYTE PTR [edx-0x26]
  411e0e:	jge    0x411df2
  411e10:	mov    BYTE PTR [edi],al
  411e12:	sub    al,bl
  411e14:	and    BYTE PTR [esi+esi*4],bh
  411e17:	outs   dx,BYTE PTR ds:[esi]
  411e18:	add    eax,0x14189118
  411e1d:	push   eax
  411e1e:	out    dx,al
  411e1f:	(bad)  
  411e20:	(bad)  
  411e22:	inc    esi
  411e23:	inc    ebx
  411e24:	jb     0x411dcb
  411e26:	dec    edi
  411e27:	sub    DWORD PTR [edi+0x3d],ebp
  411e2a:	sbb    ch,BYTE PTR [eax+0x17a53cff]
  411e30:	inc    ecx
  411e31:	ret    0x6de3
  411e34:	and    BYTE PTR [edx+0x4d],ch
  411e37:	push   es
  411e38:	xchg   DWORD PTR [ecx-0x56],edx
  411e3b:	mov    ds:0xbab596ab,al
  411e40:	shl    BYTE PTR [esp+edi*2-0x18],0x69
  411e45:	dec    eax
  411e46:	mov    BYTE PTR [ebx],al
  411e48:	push   es
  411e49:	mov    ebx,0x954c7e
  411e4e:	inc    eax
  411e4f:	dec    edx
  411e50:	sub    BYTE PTR [ebx-0x2],bh
  411e53:	repz jle 0x411e43
  411e56:	xor    BYTE PTR [ebx],bh
  411e58:	popa   
  411e59:	jnp    0x411e14
  411e5b:	or     dh,BYTE PTR [eax+ebx*4]
  411e5e:	shl    DWORD PTR ds:0x379c1f56,cl
  411e64:	fcomp  QWORD PTR [ebp-0xc]
  411e67:	imul   ebx,DWORD PTR [eax+edi*8-0x62f832d6],0x25c78227
  411e72:	jle    0x411e89
  411e74:	in     al,0xe0
  411e76:	pop    es
  411e77:	sbb    BYTE PTR [ecx+eax*2],dh
  411e7a:	mov    ds:0x7a351a2c,eax
  411e7f:	jl     0x411e3f
  411e81:	add    al,0x9a
  411e83:	pop    ebp
  411e84:	aam    0x3d
  411e86:	popf   
  411e87:	xchg   ebx,eax
  411e88:	mov    bl,0x4e
  411e8a:	add    al,0xe9
  411e8c:	addr16 int3 
  411e8e:	es jne 0x411e26
  411e91:	or     BYTE PTR [edx+0x340fb0ec],cl
  411e97:	out    0x8a,al
  411e99:	cmc    
  411e9a:	lds    esi,FWORD PTR [esi-0x2b085557]
  411ea0:	and    BYTE PTR [edi-0x1],bh
  411ea3:	jno    0x411e93
  411ea5:	dec    edi
  411ea6:	sub    dh,dl
  411ea8:	rcl    BYTE PTR [ebp-0x22],0x1c
  411eac:	shr    BYTE PTR [esi+0x2d],1
  411eaf:	test   eax,0x7514d00a
  411eb4:	and    edx,eax
  411eb6:	(bad)  
  411eb7:	std    
  411eb8:	and    dh,BYTE PTR [ebp-0x303fb371]
  411ebe:	dec    ebp
  411ebf:	int    0x9f
  411ec1:	mov    ebx,0x9a7ab383
  411ec6:	mov    eax,0x4031e072
  411ecb:	enter  0xc53c,0x2
  411ecf:	out    0x81,eax
  411ed1:	mov    ds:0x794ce183,eax
  411ed6:	adc    BYTE PTR [edi],bl
  411ed8:	jmp    0x411ebc
  411eda:	dec    edx
  411edb:	(bad)  
  411edc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411edd:	ret    0xadd1
  411ee0:	stos   BYTE PTR es:[edi],al
  411ee1:	add    eax,0x5b1143aa
  411ee6:	daa    
  411ee7:	imul   esi,edx,0x50
  411eea:	in     eax,dx
  411eeb:	push   0xb0bb2b60
  411ef0:	cmp    al,0xfe
  411ef2:	push   edx
  411ef3:	retf   
  411ef4:	jnp    0x411f24
  411ef6:	in     al,0x75
  411ef8:	mov    ebp,0x923247a5
  411efd:	pop    es
  411efe:	mov    esp,0x2e3cfa53
  411f03:	jg     0x411f41
  411f05:	call   0x6864:0xc1bcaa27
  411f0c:	pop    edx
  411f0d:	push   ebx
  411f0e:	ins    BYTE PTR es:[edi],dx
  411f0f:	push   esi
  411f10:	dec    eax
  411f11:	push   eax
  411f12:	mov    dl,BYTE PTR ds:[edi]
  411f15:	fmul   QWORD PTR [edx]
  411f17:	sahf   
  411f18:	pop    ss
  411f19:	cld    
  411f1a:	jl     0x411ebc
  411f1c:	sbb    eax,0xcb5662d1
  411f21:	(bad)
  411f25:	mov    al,ds:0x778069aa
  411f2a:	hlt    
  411f2b:	add    ah,0xaa
  411f2e:	mov    edi,0x7578ec5a
  411f33:	push   edi
  411f34:	add    al,0x2b
  411f36:	cwde   
  411f37:	test   BYTE PTR [ebx+0xf],ch
  411f3a:	dec    ebx
  411f3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f3c:	xchg   edi,eax
  411f3d:	pop    edx
  411f3e:	mov    ah,0xf1
  411f40:	mov    WORD PTR [esi],ds
  411f42:	ficom  WORD PTR [esi+0x3e978e63]
  411f48:	add    eax,0x42e81d11
  411f4d:	aaa    
  411f4e:	mov    ah,0x9c
  411f50:	push   edx
  411f51:	xchg   ebx,eax
  411f52:	xor    al,0x96
  411f54:	inc    ebp
  411f55:	sbb    DWORD PTR [edi],edi
  411f57:	push   edx
  411f58:	push   edx
  411f59:	inc    ebx
  411f5a:	adc    al,0x6a
  411f5c:	dec    ebp
  411f5d:	xchg   BYTE PTR [esi-0x7ad2b79f],bl
  411f63:	adc    al,0xa9
  411f65:	mov    DWORD PTR [esi+0x3],0x8352ad63
  411f6c:	xchg   ecx,eax
  411f6d:	test   eax,0x50d711ac
  411f72:	xor    cl,ch
  411f74:	dec    eax
  411f75:	inc    ebp
  411f76:	pop    edi
  411f77:	and    dh,ah
  411f79:	retf   
  411f7a:	aad    0x8d
  411f7c:	push   ebx
  411f7d:	cmp    ah,BYTE PTR [esi]
  411f7f:	and    DWORD PTR [ebx+edx*4],eax
  411f82:	cld    
  411f83:	pop    ds
  411f84:	inc    ebp
  411f85:	call   0xfd2e14fe
  411f8a:	pushf  
  411f8b:	mov    ebx,gs
  411f8d:	cwde   
  411f8e:	jmp    0xcd18f5a
  411f93:	out    0xa1,al
  411f95:	aad    0x49
  411f97:	ds popa 
  411f99:	mov    ds:0xa13da222,eax
  411f9e:	outs   dx,BYTE PTR ds:[esi]
  411f9f:	mov    eax,0x6c5a45b
  411fa4:	xor    DWORD PTR [edx+0x4d01e69b],eax
  411faa:	push   ds
  411fab:	shl    DWORD PTR [eax-0x77],1
  411fae:	and    BYTE PTR [esi-0x25],ah
  411fb1:	shr    BYTE PTR [esi+0x4b3acfba],0xa
  411fb8:	in     al,dx
  411fb9:	push   edi
  411fba:	pushf  
  411fbb:	lods   eax,DWORD PTR fs:[esi]
  411fbd:	or     DWORD PTR [edi+0x6c8019b6],esp
  411fc3:	lods   al,BYTE PTR fs:[esi]
  411fc5:	mov    ebp,0x65ee3aa4
  411fca:	ror    DWORD PTR [esi],1
  411fcc:	xor    eax,0x2f1d7c68
  411fd1:	jle    0x411fab
  411fd3:	or     al,0x96
  411fd5:	jbe    0x411f7a
  411fd7:	inc    ebp
  411fd8:	cmc    
  411fd9:	mov    ah,0x89
  411fdb:	inc    esp
  411fdc:	bsf    ecx,edx
  411fdf:	add    eax,0x573370ff
  411fe4:	adc    al,dl
  411fe6:	jmp    FWORD PTR [eax+0x47d49051]
  411fec:	mov    DWORD PTR [edx-0x80],edx
  411fef:	inc    eax
  411ff0:	mov    al,0x3d
  411ff2:	ins    DWORD PTR es:[edi],dx
  411ff3:	xor    al,BYTE PTR [eax+ebx*2-0x6829daa9]
  411ffa:	inc    esp
  411ffb:	shr    BYTE PTR [edx],1
  411ffd:	add    eax,0x63c24be5
  412002:	adc    bh,dl
  412004:	sbb    al,0xb6
  412006:	sahf   
  412007:	xchg   esp,eax
  412008:	mov    BYTE PTR [edi+0x7b],dh
  41200b:	scas   al,BYTE PTR es:[edi]
  41200c:	push   edi
  41200d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41200e:	dec    ebp
  41200f:	push   ebp
  412010:	mov    esp,0x1970196c
  412015:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412016:	mov    ah,0x50
  412018:	mov    eax,0x8bd8f9b9
  41201d:	jg     0x412009
  41201f:	inc    esp
  412020:	xor    ah,dl
  412022:	sub    ah,BYTE PTR [eax-0x21981f5]
  412028:	sahf   
  412029:	pop    ecx
  41202a:	fldcw  WORD PTR [esp+ecx*1+0x66654238]
  412031:	scas   eax,DWORD PTR es:[edi]
  412032:	inc    edx
  412033:	cld    
  412034:	scas   al,BYTE PTR es:[edi]
  412035:	mov    bh,0x2b
  412037:	push   ecx
  412038:	outs   dx,BYTE PTR ds:[esi]
  412039:	cwde   
  41203a:	mov    BYTE PTR [ebp+0x7c],ah
  41203d:	into   
  41203e:	shr    DWORD PTR [bp+di-0x4d32],cl
  412043:	lods   eax,DWORD PTR ds:[esi]
  412044:	dec    eax
  412045:	mov    DWORD PTR [edi],edi
  412047:	lods   al,BYTE PTR ds:[esi]
  412048:	and    BYTE PTR ds:[ecx],al
  41204b:	jge    0x412009
  41204d:	daa    
  41204e:	jecxz  0x411ff4
  412050:	mov    bl,0x99
  412052:	mov    BYTE PTR [edx-0x5bdf5915],dh
  412058:	test   al,0x7
  41205a:	mov    BYTE PTR [edi],al
  41205c:	shl    edx,cl
  41205e:	ret    0x8358
  412061:	and    BYTE PTR [edi-0x29],cl
  412064:	adc    bh,ah
  412066:	push   0x3c8f4dd4
  41206b:	or     DWORD PTR [ebp+0x44],eax
  41206e:	retf   0x6ceb
  412071:	aaa    
  412072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412073:	repnz mov dl,0x1f
  412076:	sub    ebx,ecx
  412078:	retf   0x3867
  41207b:	in     al,dx
  41207c:	(bad)
  41207f:	pop    esi
  412080:	mov    edx,0xeb23090
  412085:	jbe    0x41205d
  412087:	mov    esi,DWORD PTR [esi]
  412089:	push   ecx
  41208a:	sub    dl,BYTE PTR [ebx]
  41208c:	test   BYTE PTR cs:[edi],dh
  41208f:	loope  0x412027
  412091:	cld    
  412092:	ins    BYTE PTR es:[edi],dx
  412093:	cmp    DWORD PTR [edi+ecx*2-0x6],eax
  412097:	out    dx,eax
  412098:	shl    DWORD PTR [ecx-0x51e227fa],1
  41209e:	ret    
  41209f:	inc    ecx
  4120a0:	lds    esi,FWORD PTR [esp+edi*8]
  4120a3:	stos   BYTE PTR es:[edi],al
  4120a4:	dec    edi
  4120a5:	pop    ss
  4120a6:	or     cl,ah
  4120a8:	xchg   ecx,eax
  4120a9:	in     al,dx
  4120aa:	pop    ebp
  4120ab:	(bad)  
  4120ac:	pushf  
  4120ad:	fcomip st,st(7)
  4120af:	in     eax,dx
  4120b0:	push   ds
  4120b1:	fdivrp st(7),st
  4120b3:	or     edi,DWORD PTR [esi+0x4512d5e7]
  4120b9:	xchg   BYTE PTR [ebx+0x1c],bl
  4120bc:	adc    BYTE PTR [ecx-0x7d],0x3f
  4120c0:	push   es
  4120c1:	xchg   esp,eax
  4120c2:	jecxz  0x4120fa
  4120c4:	pop    ebx
  4120c5:	or     al,0xd3
  4120c7:	add    eax,0x295a5bd8
  4120cc:	mov    ch,0x50
  4120ce:	sub    eax,0x847656a7
  4120d3:	shl    DWORD PTR ds:0x9d36fd04,cl
  4120d9:	test   al,0xdb
  4120db:	dec    ecx
  4120dc:	addr16 stc 
  4120de:	out    dx,eax
  4120df:	ret    
  4120e0:	and    esp,DWORD PTR ds:0xc0da788d
  4120e6:	sbb    BYTE PTR [ebx-0x72a2a1bb],bh
  4120ec:	pop    esi
  4120ed:	mov    al,ds:0x6e79d04c
  4120f2:	ss dec esi
  4120f4:	and    BYTE PTR [eax+0x1d],ch
  4120f7:	je     0x412108
  4120f9:	push   ecx
  4120fa:	sub    al,0x98
  4120fc:	xor    eax,0x5b5bd8e0
  412101:	scas   al,BYTE PTR es:[edi]
  412102:	mov    dh,ch
  412104:	mov    dh,0xb4
  412106:	mov    WORD PTR [edi+0x30de071a],es
  41210c:	sbb    al,0xd1
  41210e:	adc    eax,0xd2b69845
  412113:	pop    esi
  412114:	dec    edi
  412115:	inc    ebp
  412116:	and    eax,0x7779736e
  41211b:	repz retf 0xaf14
  41211f:	mov    ds:0x7671b884,al
  412124:	ss sub al,0x20
  412127:	fidiv  DWORD PTR [ecx+0x23d28e2]
  41212d:	mov    esp,0xd7f73435
  412132:	stos   DWORD PTR es:[edi],eax
  412133:	adc    eax,0xbab094d4
  412138:	add    al,0x39
  41213a:	ss pop edx
  41213c:	sub    eax,0xe65cb52b
  412141:	jnp    0x41212a
  412143:	pop    ecx
  412144:	jge    0x4121a1
  412146:	cmc    
  412147:	out    dx,al
  412148:	push   edi
  412149:	pop    ds
  41214a:	mov    ecx,0x36b60309
  41214f:	adc    esi,edx
  412151:	clc    
  412152:	pop    ebx
  412153:	xchg   ecx,eax
  412154:	xchg   edi,eax
  412155:	jae    0x41210d
  412157:	test   eax,0xe200cd12
  41215c:	in     eax,0xa0
  41215e:	aas    
  41215f:	xchg   ecx,eax
  412160:	xor    BYTE PTR [edx-0x15],bh
  412163:	push   ebp
  412164:	scas   al,BYTE PTR es:[edi]
  412165:	inc    eax
  412166:	jp     0x41210b
  412168:	push   eax
  412169:	jg     0x41214d
  41216b:	and    esp,esp
  41216d:	sub    al,0xd7
  41216f:	fwait
  412170:	cdq    
  412171:	es xchg esi,eax
  412173:	cmp    BYTE PTR [edx-0x3e],bl
  412176:	gs inc ebp
  412178:	mov    eax,0x8311f59c
  41217d:	loop   0x41218f
  41217f:	fld    st(0)
  412181:	mov    WORD PTR [edi-0x74],es
  412184:	pop    esi
  412185:	inc    edx
  412186:	cdq    
  412187:	cwde   
  412188:	not    DWORD PTR [ebp+eiz*8-0x7a]
  41218c:	add    BYTE PTR [esi+0x3298d855],ch
  412192:	stos   BYTE PTR es:[edi],al
  412193:	lock push ebp
  412195:	push   0xb7384443
  41219a:	jmp    0x52ea3712
  41219f:	fisubr WORD PTR [edi+0x6d1426f]
  4121a5:	js     0x412160
  4121a7:	cmp    BYTE PTR [ebp-0x6c],ah
  4121aa:	call   0x280c:0x80106b18
  4121b1:	xchg   DWORD PTR [esi],esi
  4121b3:	mov    ecx,0xf4bf792f
  4121b8:	cmp    BYTE PTR [ebp+0x7d],ah
  4121bb:	scas   eax,DWORD PTR es:[edi]
  4121bc:	stos   BYTE PTR es:[edi],al
  4121bd:	gs test eax,0x791bf4c4
  4121c3:	add    eax,DWORD PTR [ebp+edi*8-0x2de881ab]
  4121ca:	sub    ch,BYTE PTR [ecx+edx*2-0x11c2c11d]
  4121d1:	adc    edx,DWORD PTR [edx]
  4121d3:	leave  
  4121d4:	pushf  
  4121d5:	mov    cl,0xba
  4121d7:	push   0x81d425f7
  4121dc:	mov    al,0x66
  4121de:	cmp    ebx,ebp
  4121e0:	add    eax,0xbdfc1d7e
  4121e5:	inc    ebx
  4121e6:	cmp    al,0x9
  4121e8:	or     BYTE PTR [ebx],cl
  4121ea:	pop    esi
  4121eb:	in     al,dx
  4121ec:	imul   ecx,edi,0x55c8d25b
  4121f2:	jp     0x4121d1
  4121f4:	sbb    DWORD PTR [ebp+0x4c043834],0xffffffdf
  4121fb:	pop    ecx
  4121fc:	stc    
  4121fd:	dec    ebp
  4121fe:	stos   DWORD PTR es:[edi],eax
  4121ff:	stos   DWORD PTR es:[edi],eax
  412200:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412201:	jbe    0x4121ad
  412203:	shl    DWORD PTR [ecx+ebp*8+0x1f],cl
  412207:	jp     0x4121ad
  412209:	push   0x71342ab5
  41220e:	test   al,0x75
  412210:	xchg   ebx,eax
  412211:	sbb    DWORD PTR [ebx],0x17
  412214:	clc    
  412215:	jle    0x4121b8
  412217:	adc    eax,0x1be528e
  41221c:	scas   eax,DWORD PTR es:[edi]
  41221d:	ins    DWORD PTR es:[edi],dx
  41221e:	ins    DWORD PTR es:[edi],dx
  41221f:	aaa    
  412220:	enter  0x7c91,0x27
  412224:	adc    bh,BYTE PTR ds:0x9a096e12
  41222a:	xlat   BYTE PTR ds:[ebx]
  41222b:	xchg   edx,eax
  41222c:	leave  
  41222d:	cmp    al,0x9f
  41222f:	inc    esp
  412230:	iret   
  412231:	jae    0x412281
  412233:	push   ds
  412234:	xor    BYTE PTR [edi-0x3b85fa42],dl
  41223a:	xor    BYTE PTR [edx-0x4d],bl
  41223d:	call   ecx
  41223f:	and    BYTE PTR [edi],bl
  412241:	dec    esi
  412242:	inc    edi
  412243:	pop    edx
  412244:	mov    ah,BYTE PTR [eax]
  412246:	and    DWORD PTR [ecx+0x6c],edx
  412249:	popa   
  41224a:	popa   
  41224b:	scas   al,BYTE PTR es:[edi]
  41224c:	mov    dl,dl
  41224e:	dec    ecx
  41224f:	or     ebx,eax
  412251:	mov    edi,0x61025030
  412256:	sbb    edx,0xff9d3c80
  41225c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41225d:	sub    eax,0x350fa21e
  412262:	adc    al,BYTE PTR cs:[edx]
  412265:	fabs   
  412267:	into   
  412268:	outs   dx,DWORD PTR ds:[esi]
  412269:	(bad)  
  41226a:	ror    BYTE PTR [ebx-0x34],1
  41226d:	sbb    al,0x24
  412270:	cmp    ebx,DWORD PTR [esi-0x5453aa61]
  412276:	out    0xa6,eax
  412278:	enter  0xf6ba,0x4a
  41227c:	dec    ebp
  41227d:	test   DWORD PTR [ebp+0x56],edi
  412280:	test   DWORD PTR [edi+0x5f78d775],0x4b29703c
  41228a:	into   
  41228b:	lock and BYTE PTR [edi-0x5b],0x4f
  412290:	xor    DWORD PTR [ebx],edi
  412292:	mov    edi,DWORD PTR [ebx]
  412294:	mov    cl,0x98
  412296:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412297:	loopne 0x4122bf
  412299:	ror    DWORD PTR [ebp+0x6d],0x35
  41229d:	push   ebx
  41229e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41229f:	and    BYTE PTR [esi],bh
  4122a1:	xor    DWORD PTR [esi+0x20db0063],ebx
  4122a7:	je     0x412290
  4122a9:	(bad)  
  4122ab:	fisub  DWORD PTR [edi]
  4122ad:	cmp    eax,0xf65977c8
  4122b2:	pop    esp
  4122b3:	sbb    ebp,ebx
  4122b5:	cmp    al,0x55
  4122b7:	and    ah,BYTE PTR [edx]
  4122b9:	clc    
  4122ba:	sbb    BYTE PTR ds:0x86e330f8,cl
  4122c0:	jg     0x4122ab
  4122c2:	scas   al,BYTE PTR es:[edi]
  4122c3:	pop    ds
  4122c4:	dec    ecx
  4122c5:	xchg   edi,eax
  4122c6:	dec    eax
  4122c7:	jecxz  0x4122b6
  4122c9:	iret   
  4122ca:	and    BYTE PTR [eax+0x1f],ch
  4122cd:	out    dx,al
  4122ce:	jmp    0x7c48e924
  4122d3:	jns    0x412341
  4122d5:	inc    edi
  4122d6:	sub    bl,BYTE PTR [esi+0x52ee0372]
  4122dc:	lahf   
  4122dd:	sub    al,ah
  4122df:	cmp    ch,al
  4122e1:	aaa    
  4122e2:	jno    0x41230c
  4122e4:	and    esp,DWORD PTR ds:0xa2009190
  4122ea:	ret    0x46c9
  4122ed:	(bad)  
  4122ee:	or     ebx,DWORD PTR [edi]
  4122f0:	jnp    0x4122e6
  4122f2:	push   0x7d
  4122f4:	lds    eax,FWORD PTR [eax]
  4122f6:	sbb    dh,BYTE PTR [ebp+esi*2-0x14]
  4122fa:	inc    edx
  4122fb:	(bad)  
  4122fc:	cmp    eax,0x5dc43cc
  412301:	add    DWORD PTR [ecx],0x2e
  412304:	std    
  412305:	mov    ds:0xce1640d9,al
  41230a:	icebp  
  41230b:	in     eax,0xd
  41230d:	mov    edi,DWORD PTR [eax+0x4f12d2ff]
  412313:	mov    bl,0xcd
  412315:	mov    esi,0x9049a49
  41231a:	outs   dx,BYTE PTR ds:[esi]
  41231b:	mov    ecx,0x61c656b8
  412320:	add    al,0x33
  412322:	or     DWORD PTR [ecx-0x4401b69d],eax
  412328:	out    dx,al
  412329:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41232a:	jmp    0xb06f2ee2
  41232f:	pop    esp
  412330:	loop   0x4122ce
  412332:	push   esp
  412333:	fcomi  st,st(7)
  412335:	mov    ds:0x9fe7ba18,al
  41233a:	rol    DWORD PTR [edx-0x10],0xd
  41233e:	jle    0x4122e9
  412340:	dec    eax
  412341:	mov    eax,?
  412343:	mov    esi,0xc00d9b5d
  412348:	imul   DWORD PTR [edi+0x20fcb850]
  41234e:	and    esi,edi
  412350:	push   esi
  412351:	clc    
  412352:	test   al,0xb7
  412354:	dec    DWORD PTR [eax+0x7c]
  412357:	sbb    BYTE PTR [ecx-0x64],ch
  41235a:	ins    DWORD PTR es:[edi],dx
  41235b:	sbb    DWORD PTR [edx+0x4],edx
  41235e:	out    0x19,al
  412360:	(bad)  
  412361:	stos   DWORD PTR es:[edi],eax
  412362:	adc    ebx,DWORD PTR [ebp+0x6f]
  412365:	xlat   BYTE PTR ds:[ebx]
  412366:	jo     0x412305
  412368:	outs   dx,DWORD PTR ds:[esi]
  412369:	lahf   
  41236a:	inc    esi
  41236b:	fldcw  WORD PTR [ecx]
  41236d:	mov    ch,0x82
  41236f:	fdivr  QWORD PTR [ecx-0x77e2988b]
  412375:	je     0x4123dd
  412377:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412378:	sub    eax,0x9fdb0ace
  41237d:	ins    BYTE PTR es:[edi],dx
  41237e:	push   es
  41237f:	scas   al,BYTE PTR es:[edi]
  412380:	ret    0x6af3
  412383:	ds (bad) 
  412385:	or     esp,edx
  412387:	jmp    0x87e1e315
  41238c:	inc    edi
  41238d:	mov    BYTE PTR ds:0x2cf15cda,cl
  412393:	ds cdq 
  412395:	or     bh,bl
  412397:	push   ds
  412398:	shr    BYTE PTR fs:[ebp-0x6eb89da6],0x35
  4123a0:	cmp    ch,BYTE PTR [edi]
  4123a2:	js     0x4123fe
  4123a4:	push   ebp
  4123a5:	popf   
  4123a6:	xchg   edi,eax
  4123a7:	ja     0x412351
  4123a9:	dec    ebx
  4123aa:	inc    esi
  4123ab:	and    eax,0x9f786bb7
  4123b0:	inc    ebx
  4123b1:	data16 in al,dx
  4123b3:	jae    0x4123b6
  4123b5:	xor    eax,0x3763be9c
  4123ba:	sahf   
  4123bb:	loope  0x41242a
  4123bd:	xlat   BYTE PTR ds:[ebx]
  4123be:	dec    ebx
  4123bf:	inc    eax
  4123c0:	test   eax,0x78464136
  4123c5:	test   DWORD PTR [esi],edx
  4123c7:	mov    edx,0x84007e77
  4123cc:	retf   
  4123cd:	(bad)  
  4123ce:	rcr    BYTE PTR [ebx+0x5b65d369],1
  4123d4:	ror    dl,cl
  4123d6:	jg     0x412401
  4123d8:	inc    ebp
  4123d9:	push   ss
  4123da:	gs mov edi,0x252d83a7
  4123e0:	mov    ebx,0x802e891b
  4123e5:	leave  
  4123e6:	shr    BYTE PTR [eax-0x53],cl
  4123e9:	push   ecx
  4123ea:	dec    ebp
  4123eb:	ds sub ebp,esi
  4123ee:	pop    edi
  4123ef:	imul   eax,DWORD PTR ds:0xfe9e7c21,0xeb4a92ab
  4123f9:	mov    DWORD PTR [edx-0x4a],0xd8f4d9d
  412400:	mov    edx,0x50d608d1
  412405:	in     al,0x24
  412407:	xchg   ebx,eax
  412409:	jp     0x41247c
  41240b:	imul   esp,DWORD PTR [edi+0x3f],0x38
  41240f:	xor    dh,dh
  412411:	mov    al,BYTE PTR [edx-0x6f18ddc1]
  412417:	ret    
  412418:	leave  
  412419:	inc    esi
  41241a:	mov    dh,0x78
  41241c:	push   0x1e88ed33
  412421:	sti    
  412422:	push   ds
  412423:	(bad)  
  412424:	lock jmp 0x4123fb
  412427:	fdivr  QWORD PTR [edi-0x3c]
  41242a:	imul   ebx,DWORD PTR [ebp+0x32d47215],0xffffffd9
  412431:	pop    ecx
  412432:	mov    ah,BYTE PTR [eax]
  412434:	daa    
  412435:	adc    eax,0x28fa83d5
  41243a:	jb     0x41243f
  41243c:	push   ebp
  41243d:	test   DWORD PTR [edi],ebp
  41243f:	mov    al,ds:0xcaf86632
  412444:	and    ebx,ebp
  412446:	dec    edx
  412447:	or     cl,BYTE PTR [ebp+0x7d]
  41244a:	outs   dx,BYTE PTR ds:[esi]
  41244b:	mov    ebp,0x5d0595c3
  412450:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412451:	int3   
  412452:	retf   
  412453:	aam    0xff
  412455:	pop    ecx
  412456:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412457:	mov    dl,0xc7
  412459:	test   al,0xab
  41245b:	adc    al,0xb3
  41245d:	adc    BYTE PTR [edx],dl
  41245f:	mov    al,ds:0xbec5ea02
  412464:	sar    DWORD PTR [edi],1
  412466:	retf   
  412467:	jg     0x4124d9
  412469:	cmp    bl,bl
  41246b:	enter  0xb1db,0x1e
  41246f:	sub    bl,BYTE PTR [ecx-0x43]
  412472:	adc    DWORD PTR [edx-0x3546f36b],esp
  412478:	mov    dl,0xe6
  41247a:	pushf  
  41247b:	xchg   edi,eax
  41247c:	nop
  41247d:	repz inc ebp
  41247f:	pop    edx
  412480:	push   esi
  412481:	push   ss
  412482:	xor    DWORD PTR [edx-0x16e06ad6],ebx
  412488:	mov    edx,0x42858548
  41248d:	adc    edi,DWORD PTR [ebx-0x55]
  412490:	mov    ebp,DWORD PTR [ebp+0x50]
  412493:	(bad)  
  412494:	jo     0x4124d0
  412496:	stos   DWORD PTR es:[edi],eax
  412497:	push   ds
  412498:	(bad)  [esp+ecx*1]
  41249b:	sub    al,0x2f
  41249d:	jns    0x41247b
  41249f:	pop    ecx
  4124a0:	inc    edx
  4124a1:	jmp    0x4a76:0xedf888c4
  4124a8:	sub    al,0x90
  4124aa:	(bad)  
  4124ab:	jnp    0x4124df
  4124ad:	pop    ebp
  4124ae:	clc    
  4124af:	dec    ecx
  4124b0:	cld    
  4124b1:	out    0x82,eax
  4124b3:	dec    esp
  4124b4:	lods   eax,DWORD PTR ds:[esi]
  4124b5:	lods   al,BYTE PTR ds:[esi]
  4124b6:	dec    edx
  4124b7:	push   0xf02200dc
  4124bc:	jmp    0x41253c
  4124be:	pop    esi
  4124bf:	push   ebx
  4124c0:	(bad)  [esp+ecx*1+0x1b]
  4124c4:	pop    ds
  4124c5:	sub    eax,0x5ecab8b9
  4124ca:	push   esp
  4124cb:	dec    ebp
  4124cc:	clc    
  4124cd:	sar    BYTE PTR [ecx+edx*2],cl
  4124d0:	out    0xf8,eax
  4124d2:	cwde   
  4124d3:	imul   BYTE PTR [eax-0x1b]
  4124d6:	xor    esp,DWORD PTR [eax+0x6c]
  4124d9:	shl    DWORD PTR [bp+di+0x2441],0xa4
  4124df:	or     edi,DWORD PTR [ebx]
  4124e1:	(bad)  
  4124e2:	(bad)  
  4124e3:	popf   
  4124e4:	ds nop
  4124e6:	inc    ebx
  4124e7:	retf   
  4124e8:	inc    edi
  4124e9:	xchg   ebx,eax
  4124ea:	push   eax
  4124eb:	stc    
  4124ec:	lods   eax,DWORD PTR ds:[esi]
  4124ed:	iret   
  4124ee:	mov    eax,ds:0x328598c6
  4124f3:	dec    edi
  4124f4:	mov    esp,0x86217f03
  4124f9:	cmp    dh,BYTE PTR [ebp+0x7c]
  4124fc:	stos   DWORD PTR es:[edi],eax
  4124fd:	adc    DWORD PTR [ebp+eax*2+0x60],0xffffffff
  412502:	mov    eax,0xc0a0e43b
  412507:	shr    bh,1
  412509:	mov    eax,0x2072c8e1
  41250e:	and    BYTE PTR [esp+ebp*2-0x62],ah
  412512:	outs   dx,BYTE PTR ds:[esi]
  412513:	mov    WORD PTR [ecx],gs
  412515:	test   BYTE PTR [eax+0x50ecbcf6],0xf6
  41251c:	stc    
  41251d:	jmp    0x4124e2
  41251f:	cdq    
  412520:	mov    dl,0xee
  412522:	mov    ss,WORD PTR [ebx-0x13405429]
  412528:	cmp    esi,0xbb1b33cc
  41252e:	xor    al,0x1
  412530:	ins    DWORD PTR es:[edi],dx
  412531:	and    eax,0x7f8e6089
  412536:	push   cs
  412537:	cmp    edx,DWORD PTR [esi-0x6bab4842]
  41253d:	inc    eax
  41253e:	pop    ebx
  41253f:	ss mov edi,0x8846f020
  412545:	ror    BYTE PTR [esi+0xa2d665f],0xe4
  41254c:	cmp    eax,0x73bf4a56
  412551:	jmp    0x68bbfe20
  412556:	imul   edx,DWORD PTR [edx-0x6b2f47e0],0xffffffd5
  41255d:	push   ebp
  41255e:	inc    esp
  41255f:	into   
  412560:	adc    ch,BYTE PTR [esi]
  412562:	nop
  412563:	(bad)  
  412565:	std    
  412566:	pop    esp
  412567:	dec    ebp
  412568:	call   0x69473d5f
  41256d:	mov    ah,0x19
  41256f:	loop   0x4125bb
  412571:	arpl   WORD PTR ds:0xf0089ee1,bx
  412577:	jmp    0x9b8e6cf0
  41257c:	ins    BYTE PTR es:[edi],dx
  41257d:	imul   BYTE PTR [esi+0x39]
  412580:	stos   BYTE PTR es:[edi],al
  412581:	ret    0x9e98
  412584:	jbe    0x412586
  412586:	mov    bl,0xf3
  412588:	xor    BYTE PTR [esi-0x15],dh
  41258b:	icebp  
  41258c:	mov    dl,BYTE PTR [edx+0x5861ed23]
  412592:	and    DWORD PTR [edi+0x4f],ebp
  412595:	add    ecx,ebp
  412597:	out    dx,eax
  412598:	fsubr  DWORD PTR ds:0x35fb674
  41259e:	rol    bh,0xdb
  4125a1:	inc    edx
  4125a2:	dec    esi
  4125a3:	retf   
  4125a4:	jl     0x4125c6
  4125a6:	push   ds
  4125a7:	inc    ebp
  4125a8:	sbb    eax,ebp
  4125aa:	aad    0x20
  4125ac:	jnp    0x412604
  4125ae:	jmp    0xc4c06025
  4125b3:	mov    WORD PTR [edx+ebx*2-0x701ac578],gs
  4125ba:	cmp    DWORD PTR [edi+0x158a1be0],ebx
  4125c0:	fistp  DWORD PTR [ebp+0x53]
  4125c3:	cli    
  4125c4:	xor    esi,DWORD PTR [eax+0xa]
  4125c7:	dec    edi
  4125c8:	cmp    DWORD PTR [eax],ecx
  4125ca:	fcmovne st,st(1)
  4125cc:	xchg   esp,eax
  4125cd:	ins    BYTE PTR es:[edi],dx
  4125ce:	or     DWORD PTR [esp+esi*4-0x72df1496],0xa854791d
  4125d9:	mov    esi,0x5677b760
  4125de:	shl    DWORD PTR [eax+ebp*8+0x51],0x7a
  4125e3:	jmp    0x7838:0x4ef164b0
  4125ea:	lods   eax,DWORD PTR ds:[esi]
  4125eb:	ins    BYTE PTR es:[edi],dx
  4125ec:	xor    al,0x7
  4125ee:	dec    DWORD PTR [ecx]
  4125f0:	ins    DWORD PTR es:[edi],dx
  4125f1:	push   esi
  4125f2:	jbe    0x4125fe
  4125f4:	sar    esp,cl
  4125f6:	pusha  
  4125f7:	pushf  
  4125f8:	xchg   edi,eax
  4125f9:	mov    edx,0x67fdd588
  4125fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125ff:	adc    dh,BYTE PTR [ebp+0x5ca28257]
  412605:	mov    al,0x2b
  412607:	dec    esp
  412608:	fst    QWORD PTR [ecx-0x75]
  41260b:	(bad)  
  41260c:	jo     0x4125a9
  41260e:	je     0x41262b
  412610:	ret    0x4b71
  412613:	loope  0x4125b9
  412615:	sbb    BYTE PTR [edi-0xa8a7b7c],dl
  41261b:	test   eax,0x2ec258a4
  412620:	hlt    
  412621:	mov    eax,0x5ecc5e45
  412626:	fmulp  st(0),st
  412628:	scas   eax,DWORD PTR es:[edi]
  412629:	sbb    DWORD PTR [eax-0x30c05a06],edi
  41262f:	mov    dh,0x96
  412631:	(bad)  
  412632:	cli    
  412633:	cmp    ch,BYTE PTR [ecx]
  412635:	cwde   
  412636:	addr16 jbe 0x4125c5
  412639:	es int 0xb1
  41263c:	mov    eax,0xe22e21d5
  412641:	cmp    edi,esp
  412643:	jge    0x412675
  412645:	dec    esi
  412646:	popa   
  412647:	scas   al,BYTE PTR es:[edi]
  412648:	jp     0x41268b
  41264a:	push   ds
  41264b:	mov    esp,0xfe160b7b
  412650:	pop    esp
  412652:	aaa    
  412653:	sub    al,0x70
  412655:	ds repnz mov cl,0x9e
  412659:	mov    DWORD PTR [ebx-0x45],0x33cc8d3
  412660:	jle    0x4126d0
  412662:	jmp    0x82a34faf
  412667:	aad    0x68
  412669:	(bad)  
  41266a:	test   BYTE PTR [edx],0xe
  41266d:	inc    edx
  41266e:	(bad)  
  412670:	sub    dl,dl
  412672:	call   0x34ec000a
  412677:	les    eax,FWORD PTR [edi-0xbc192e9]
  41267d:	fsubr  QWORD PTR [ebp+0x6e]
  412680:	dec    ebx
  412681:	pop    edi
  412682:	pop    ds
  412683:	push   esi
  412684:	pop    es
  412685:	(bad)  
  412686:	(bad)  
  412687:	mov    dl,BYTE PTR [ecx+edi*4+0x1422ebb5]
  41268e:	sub    ebp,edi
  412690:	sub    ecx,ecx
  412692:	fwait
  412693:	xchg   ebx,eax
  412694:	pop    edx
  412695:	mov    cl,0x8a
  412697:	div    esi
  412699:	ins    DWORD PTR es:[edi],dx
  41269a:	xor    eax,0xf93fc502
  41269f:	xor    al,0xb9
  4126a1:	cmp    al,0xeb
  4126a3:	jg     0x4126fa
  4126a5:	test   DWORD PTR [ebx+eax*2],edi
  4126a8:	cmp    eax,0x6236e7d
  4126ad:	rcl    DWORD PTR [edx-0x5f342637],0xb6
  4126b4:	pop    ebp
  4126b5:	push   cs
  4126b6:	cmc    
  4126b7:	jl     0x412667
  4126b9:	cli    
  4126ba:	cld    
  4126bb:	dec    edi
  4126bc:	punpcklbw mm7,DWORD PTR [edi-0x66]
  4126c0:	test   eax,0x8b24b1a8
  4126c5:	inc    ecx
  4126c6:	inc    edi
  4126c7:	push   esi
  4126c8:	(bad)  
  4126c9:	test   al,0x2c
  4126cb:	jge    0x41273e
  4126cd:	inc    ebp
  4126ce:	loop   0x4126ed
  4126d0:	push   ds
  4126d1:	cmp    DWORD PTR [esi+0x2bf0ba7e],esi
  4126d7:	sub    DWORD PTR [edx],esp
  4126d9:	ret    
  4126da:	xor    DWORD PTR ds:0x6fe02243,ebx
  4126e0:	cmp    ch,BYTE PTR [edi+0x20]
  4126e3:	fwait
  4126e4:	icebp  
  4126e5:	dec    edi
  4126e6:	loopne 0x41267a
  4126e8:	in     eax,dx
  4126e9:	mov    ah,0xbe
  4126eb:	mov    ebp,0xb95e2a13
  4126f0:	push   edx
  4126f1:	mov    eax,0x76382ccf
  4126f6:	mov    edi,0x85548dba
  4126fb:	push   cs
  4126fc:	fdiv   QWORD PTR [eax-0x34481a91]
  412702:	inc    edi
  412703:	imul   esp,DWORD PTR [eax],0x72076379
  412709:	push   edx
  41270a:	cmp    BYTE PTR [edi+0x47],ch
  41270d:	je     0x41273c
  41270f:	in     eax,dx
  412710:	ins    BYTE PTR es:[edi],dx
  412711:	sub    ebp,ebx
  412713:	rcl    BYTE PTR [edi],1
  412715:	out    dx,al
  412716:	xor    BYTE PTR [esi+ebp*4+0x759c950e],0xad
  41271e:	pop    ss
  41271f:	jns    0x412747
  412721:	cmc    
  412722:	pop    ebx
  412723:	pop    esp
  412724:	xchg   DWORD PTR [ebx-0x58c59841],edi
  41272a:	mul    BYTE PTR [edx]
  41272c:	cmp    BYTE PTR [ecx-0x37],ch
  41272f:	sub    eax,0xd617e505
  412734:	xor    ch,BYTE PTR [edi+0x1eaee3e5]
  41273a:	(bad)  
  41273b:	je     0x41272d
  41273d:	mov    eax,0x8413d83e
  412742:	mov    ah,0x72
  412744:	xor    al,bl
  412746:	dec    eax
  412747:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412748:	fsubp  st(5),st
  41274a:	mov    dl,0xe
  41274c:	adc    eax,0x74546391
  412751:	mov    esi,DWORD PTR [ecx-0x3183db3a]
  412757:	or     dl,BYTE PTR [eax+0x789f6938]
  41275d:	mov    eax,ds:0x5c4363fa
  412762:	and    DWORD PTR [edx-0x80],0xdf838188
  412769:	clc    
  41276a:	mov    BYTE PTR [esi+0x6c7b8a2a],cl
  412770:	or     eax,0xb17c1f79
  412775:	aam    0xd8
  412777:	jmp    0x412757
  412779:	daa    
  41277a:	dec    ebp
  41277b:	and    eax,0xd725b8d8
  412780:	inc    ebx
  412781:	xor    al,0xe7
  412783:	shl    BYTE PTR [ecx-0x5abbece0],1
  412789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41278a:	push   ds
  41278b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41278c:	cwde   
  41278d:	popf   
  41278e:	inc    esp
  41278f:	outs   dx,DWORD PTR ds:[esi]
  412790:	push   cs
  412791:	jbe    0x4127e8
  412793:	inc    eax
  412794:	stc    
  412795:	xor    edx,esi
  412797:	das    
  412798:	jno    0x4127ab
  41279a:	sub    ebp,DWORD PTR [esi+0x42]
  41279d:	fidiv  WORD PTR [edx-0x65]
  4127a0:	sbb    esi,ebp
  4127a2:	xchg   ebp,eax
  4127a3:	jl     0x412788
  4127a5:	cmp    DWORD PTR [edx],edi
  4127a7:	or     DWORD PTR [esi-0x3b327c76],esi
  4127ad:	lock rcr DWORD PTR [edi],cl
  4127b0:	pusha  
  4127b1:	adc    dh,ah
  4127b3:	in     eax,dx
  4127b4:	outs   dx,DWORD PTR ds:[esi]
  4127b5:	push   edi
  4127b6:	adc    eax,0x731c6e71
  4127bb:	jg     0x412795
  4127bd:	in     al,0xb1
  4127bf:	mov    esi,0xfc6ade1e
  4127c4:	jns    0x412783
  4127c6:	mov    ss,WORD PTR [edx+0x6b]
  4127c9:	sahf   
  4127ca:	push   ecx
  4127cb:	push   cs
  4127cc:	pop    ds
  4127cd:	or     dh,BYTE PTR [ebp+0x44]
  4127d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127d1:	mov    ch,0xfd
  4127d3:	and    DWORD PTR [edi-0x2],edi
  4127d6:	xchg   edi,eax
  4127d7:	(bad)  
  4127d8:	hlt    
  4127d9:	sbb    eax,ebx
  4127db:	jle    0x412828
  4127dd:	dec    esi
  4127de:	cdq    
  4127df:	mov    bl,0xcd
  4127e1:	pop    edi
  4127e2:	(bad)  
  4127e3:	stc    
  4127e4:	sbb    al,0xd9
  4127e6:	repz rol BYTE PTR [edx-0x9],cl
  4127ea:	loope  0x412788
  4127ec:	in     eax,0xba
  4127ee:	push   es
  4127ef:	and    BYTE PTR fs:[esi-0x29],bh
  4127f3:	hlt    
  4127f4:	cwde   
  4127f5:	cmp    esi,DWORD PTR [eax-0x50]
  4127f8:	push   0x3b
  4127fa:	pop    ds
  4127fb:	not    DWORD PTR [eax-0x2c]
  4127fe:	inc    esp
  4127ff:	adc    BYTE PTR [ebx+0x7c6fd7f4],ch
  412805:	pop    esp
  412806:	repz pushw 0x78
  41280a:	pop    es
  41280b:	inc    eax
  41280c:	sar    BYTE PTR [ecx+ebx*4+0x75],1
  412810:	inc    esp
  412811:	xchg   esp,eax
  412812:	push   esp
  412813:	push   eax
  412814:	popa   
  412815:	jp     0x4127e3
  412817:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412818:	or     DWORD PTR [edi*8+0x23258921],ebx
  41281f:	cmp    al,BYTE PTR [ebx-0x36]
  412822:	adc    edi,esp
  412824:	mov    ah,0xc4
  412826:	leave  
  412827:	xchg   esi,eax
  412828:	dec    ebx
  412829:	bnd jp 0x412896
  41282c:	jbe    0x4127e9
  41282e:	mov    esi,0x4fe78991
  412833:	ror    bl,0xd0
  412836:	ror    DWORD PTR [eax+0x64],0xae
  41283a:	dec    edi
  41283b:	pop    DWORD PTR [eax+0x7f1ea19a]
  412841:	loopne 0x41280f
  412843:	push   edi
  412844:	aad    0xb2
  412846:	loope  0x412852
  412848:	sbb    ebx,DWORD PTR [ebp+0x7a]
  41284b:	in     al,dx
  41284c:	and    eax,0x1a6fb826
  412851:	(bad)  
  412852:	jmp    0xef14f56a
  412857:	dec    esi
  412858:	stos   BYTE PTR es:[edi],al
  412859:	enter  0x9c2d,0xd3
  41285d:	inc    esi
  41285e:	xchg   esp,ebp
  412860:	jo     0x4128bd
  412862:	pop    eax
  412863:	sub    ebp,esp
  412865:	mov    ebx,0xab8f3f37
  41286a:	pop    es
  41286b:	pop    edi
  41286c:	or     DWORD PTR [edx+eax*4],esp
  41286f:	mov    ebp,0xfd44331b
  412874:	xchg   eax,edx
  412876:	sub    BYTE PTR [eax],al
  412878:	sub    BYTE PTR [ebp-0x3311d6],0x2
  41287f:	xor    al,0x2
  412881:	adc    esi,esi
  412883:	mov    edx,0x4f99d93f
  412888:	iret   
  412889:	in     al,dx
  41288a:	push   0x57
  41288c:	or     al,0x4f
  41288e:	and    al,BYTE PTR [esi-0x3]
  412891:	pop    eax
  412892:	or     al,0xcb
  412894:	mov    al,0xc0
  412896:	xor    DWORD PTR [ecx+0x38],ebp
  412899:	jecxz  0x412829
  41289b:	les    edi,FWORD PTR [ecx+0x1ef3c58b]
  4128a1:	fist   WORD PTR [edx+0x69]
  4128a4:	xchg   esi,ebp
  4128a6:	push   esp
  4128a7:	xlat   BYTE PTR ds:[ebx]
  4128a8:	sbb    edx,ecx
  4128aa:	pop    ecx
  4128ab:	and    eax,DWORD PTR [ebx]
  4128ad:	xchg   ebp,eax
  4128ae:	(bad)  
  4128af:	gs aas 
  4128b1:	arpl   WORD PTR [edi+0x5f],di
  4128b4:	call   0x187a:0x3d45b95e
  4128bb:	test   BYTE PTR [edx],al
  4128bd:	sub    esi,eax
  4128bf:	out    dx,al
  4128c0:	mov    dl,0x15
  4128c2:	add    eax,0x354b9a81
  4128c7:	jl     0x4128d8
  4128c9:	adc    bl,0xd2
  4128cc:	mov    bl,0xc6
  4128ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128cf:	add    bh,BYTE PTR [edx+0x7f]
  4128d2:	jne    0x4128cf
  4128d4:	xchg   edx,eax
  4128d5:	nop    esp
  4128d8:	stos   BYTE PTR es:[edi],al
  4128d9:	lea    esi,[edx+0x51]
  4128dc:	fdivr  DWORD PTR [esi+0x36]
  4128df:	cmp    ch,dl
  4128e1:	push   es
  4128e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128e4:	leave  
  4128e5:	pop    ecx
  4128e6:	pop    esp
  4128e7:	in     al,0xcd
  4128e9:	sbb    eax,0xf3dbb558
  4128ee:	aaa    
  4128ef:	cmp    eax,0xc2b3f640
  4128f4:	mov    ch,0x93
  4128f6:	call   0xf258:0xfe5852f0
  4128fd:	mov    ds:0x6697c0a8,al
  412902:	mov    ds:0x3748a4ea,al
  412907:	loopne 0x4128ad
  412909:	jns    0x4128a5
  41290b:	jmp    0xfee8:0xada22359
  412912:	inc    edi
  412913:	sub    eax,0x268cd17
  412918:	js     0x4128ed
  41291a:	retf   0x1851
  41291d:	retf   
  41291e:	not    BYTE PTR [edx+ebx*8+0x42]
  412922:	or     BYTE PTR [ebx-0x6548f0a9],al
  412928:	rol    BYTE PTR [esi-0x5c86bcab],1
  41292e:	push   eax
  41292f:	add    bh,BYTE PTR [edi-0x65]
  412932:	dec    edi
  412933:	ja     0x412901
  412935:	jae    0x41290e
  412937:	fwait
  412938:	in     al,dx
  412939:	mov    ds:0xed5c378d,al
  41293e:	out    0x3,al
  412940:	dec    edx
  412941:	mov    ebx,0xe4f4a240
  412946:	xor    esi,DWORD PTR [esi+0x20043be2]
  41294c:	pusha  
  41294d:	jae    0x4128fc
  41294f:	and    ah,cl
  412951:	xor    eax,0x54cb32d7
  412956:	inc    edx
  412957:	dec    ebp
  412958:	xor    dh,BYTE PTR [ebx+eax*4+0x564fd6fb]
  41295f:	push   ecx
  412960:	dec    edx
  412961:	add    eax,0x3b318e23
  412966:	push   es
  412967:	pop    esp
  412968:	mov    WORD PTR [esi+0x72],es
  41296b:	hlt    
  41296c:	ret    0xfdfa
  41296f:	push   ebp
  412970:	jl     0x4129ae
  412972:	enter  0x172a,0x3d
  412976:	mov    ds:0xd6ea9e14,al
  41297b:	(bad)  
  41297c:	and    bh,BYTE PTR [edi-0x77]
  41297f:	aas    
  412980:	icebp  
  412981:	xchg   edx,eax
  412982:	enter  0xd0b1,0x44
  412986:	sbb    BYTE PTR [esi],dh
  412988:	add    edx,DWORD PTR [edi+0x66]
  41298b:	std    
  41298c:	fmul   st,st(7)
  41298e:	scas   al,BYTE PTR es:[edi]
  41298f:	div    ah
  412991:	popa   
  412992:	pop    edx
  412993:	fld    QWORD PTR [esi-0x9]
  412996:	repnz retf 
  412998:	pop    ecx
  412999:	ss pop esp
  41299b:	shr    BYTE PTR [esi-0xf],1
  41299e:	stos   DWORD PTR es:[edi],eax
  41299f:	mov    ch,0x1
  4129a1:	sbb    al,0x97
  4129a3:	imul   esi,DWORD PTR [ebx],0x84f86afc
  4129a9:	sbb    al,0xb4
  4129ab:	xchg   esi,eax
  4129ac:	inc    edx
  4129ad:	jnp    0x412979
  4129af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129b0:	mov    ds:0x99d70ebe,eax
  4129b5:	push   ebp
  4129b6:	retf   0xee43
  4129b9:	inc    ebp
  4129ba:	pop    ds
  4129bb:	out    dx,eax
  4129bc:	in     eax,dx
  4129bd:	pop    esp
  4129be:	mov    cl,0xeb
  4129c0:	fistp  DWORD PTR [edi]
  4129c2:	into   
  4129c3:	jmp    0x2a76:0x81ce4313
  4129ca:	popa   
  4129cb:	add    BYTE PTR [bp+si],dl
  4129ce:	add    eax,0x760106cf
  4129d3:	mov    eax,ds:0x2573ab2e
  4129d8:	imul   edx,ebx,0x211550fe
  4129de:	inc    esp
  4129df:	sbb    eax,esi
  4129e1:	pop    ecx
  4129e2:	test   DWORD PTR [esp+ebp*8-0x19],0x27314195
  4129ea:	pop    esi
  4129eb:	or     ah,dh
  4129ed:	dec    edi
  4129ee:	imul   esi,DWORD PTR ds:0x574bab99,0x67
  4129f5:	lahf   
  4129f6:	pop    ss
  4129f7:	adc    dh,BYTE PTR [edi-0x6c]
  4129fa:	clc    
  4129fb:	mov    ds:0x40a95886,eax
  412a00:	stos   BYTE PTR es:[edi],al
  412a01:	mov    ecx,ecx
  412a03:	inc    edx
  412a04:	sbb    DWORD PTR [edx+eiz*1-0x413f34cf],ebp
  412a0b:	clc    
  412a0c:	xchg   ecx,eax
  412a0d:	adc    esi,DWORD PTR [ebp-0x46c7460]
  412a13:	nop
  412a14:	clc    
  412a15:	jg     0x4129e1
  412a17:	nop    DWORD PTR [eax+edx*8-0x2c2b0fcf]
  412a1f:	push   ebx
  412a20:	pop    esp
  412a21:	bound  ebp,QWORD PTR [ebx+ebp*4-0x25cd7bf8]
  412a28:	ss hlt 
  412a2a:	xchg   ebx,eax
  412a2b:	out    0x9a,al
  412a2d:	pop    esi
  412a2e:	mov    cl,0x17
  412a30:	(bad)  
  412a32:	jle    0x412a63
  412a34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a35:	leave  
  412a36:	add    esi,DWORD PTR [ecx+0x73150583]
  412a3c:	xchg   ecx,eax
  412a3d:	sahf   
  412a3e:	test   DWORD PTR [ecx],edi
  412a40:	pop    edx
  412a41:	dec    ecx
  412a42:	inc    ecx
  412a43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a44:	adc    BYTE PTR [esi-0x5c],bh
  412a47:	sahf   
  412a48:	shl    BYTE PTR [esi],1
  412a4a:	jecxz  0x412a52
  412a4c:	xchg   BYTE PTR [ecx],bh
  412a4e:	xchg   ebp,eax
  412a4f:	dec    esi
  412a50:	jo     0x412a72
  412a52:	stc    
  412a53:	ins    BYTE PTR es:[edi],dx
  412a54:	pop    ss
  412a55:	push   edi
  412a56:	jmp    0x412a01
  412a58:	adc    al,0x84
  412a5a:	test   eax,0xa3550d95
  412a5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a60:	adc    DWORD PTR [ebp+0x58],ecx
  412a63:	mov    edx,0x9bfb16da
  412a68:	out    dx,eax
  412a69:	xor    al,0x0
  412a6b:	xlat   BYTE PTR ds:[ebx]
  412a6c:	out    dx,al
  412a6d:	cwde   
  412a6e:	mov    ds,WORD PTR [eax-0x1a]
  412a71:	sbb    eax,DWORD PTR [edx+0x2c]
  412a74:	dec    edi
  412a75:	inc    ebp
  412a76:	ret    0xf183
  412a79:	add    eax,0x8eb26310
  412a7e:	pusha  
  412a7f:	mov    ds:0x7c876c67,eax
  412a84:	pop    edi
  412a85:	pop    esp
  412a86:	dec    ebx
  412a87:	aam    0x25
  412a89:	int3   
  412a8a:	mov    edx,0xead7523a
  412a8f:	xchg   esi,eax
  412a90:	mov    ch,0xb7
  412a92:	pop    esi
  412a93:	xchg   ebx,eax
  412a94:	test   eax,0x6fa31c01
  412a99:	inc    ebp
  412a9a:	nop
  412a9b:	aas    
  412a9c:	xchg   ebx,edx
  412a9e:	inc    ebp
  412a9f:	les    eax,FWORD PTR ds:0xc7924bdf
  412aa5:	leave  
  412aa6:	push   esp
  412aa7:	push   esi
  412aa8:	call   0x152da8cd
  412aad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412aae:	mov    ds:0x13d5967c,eax
  412ab3:	jno    0x412b32
  412ab5:	aam    0x9e
  412ab7:	sub    al,0x7d
  412ab9:	push   edx
  412aba:	jae    0x412a84
  412abc:	xor    DWORD PTR [ebx-0x66c8bc15],eax
  412ac2:	int3   
  412ac3:	cmp    BYTE PTR [eax],ch
  412ac5:	inc    eax
  412ac6:	mul    BYTE PTR [ecx-0x1a]
  412ac9:	(bad)  
  412aca:	fist   WORD PTR [ebp-0xce1c6d0]
  412ad0:	push   ss
  412ad1:	imul   esp,DWORD PTR [eax-0x60053231],0x14a816a8
  412adb:	sbb    eax,0x856ab51c
  412ae0:	jno    0x412a9e
  412ae2:	dec    esp
  412ae3:	arpl   WORD PTR [edx+eiz*8-0x59f903cf],dx
  412aea:	call   0x3935:0x77b0a4dd
  412af1:	imul   esp,ecx,0xc1893360
  412af7:	add    al,0x4a
  412af9:	addr16 int 0xae
  412afc:	mov    ah,0xf8
  412afe:	sahf   
  412aff:	shl    BYTE PTR [eax-0x16aea664],1
  412b05:	imul   edi,DWORD PTR [ebx+eiz*2],0x2b4def12
  412b0c:	or     eax,0x4dfc83a3
  412b11:	pop    esp
  412b12:	fcmovb st,st(1)
  412b14:	xchg   esp,eax
  412b15:	shl    BYTE PTR [edx-0x2a301370],cl
  412b1b:	shl    BYTE PTR [ecx-0x11],0x12
  412b1f:	lds    edx,FWORD PTR [edx+0x6bcefe1]
  412b25:	popa   
  412b26:	in     al,0x7f
  412b28:	jae    0x412b47
  412b2a:	cdq    
  412b2b:	or     bh,al
  412b2d:	mov    ds:0xcba87312,al
  412b32:	sub    al,dl
  412b34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b35:	shl    DWORD PTR [eax+0x8],cl
  412b38:	pop    eax
  412b39:	cld    
  412b3a:	dec    ebx
  412b3b:	nop
  412b3c:	pop    es
  412b3d:	test   al,0x26
  412b3f:	repnz inc edi
  412b41:	push   esi
  412b43:	add    ecx,ebp
  412b45:	xchg   ebx,eax
  412b46:	adc    edx,DWORD PTR [ecx-0x7d]
  412b49:	cdq    
  412b4a:	mov    al,0x1d
  412b4c:	in     eax,0x47
  412b4e:	inc    edi
  412b4f:	shl    al,0xb0
  412b52:	(bad)  
  412b54:	xchg   edx,eax
  412b55:	je     0x412bc2
  412b57:	fistp  QWORD PTR [esi-0x55ee6b4]
  412b5d:	sub    ecx,DWORD PTR [edi+0x58]
  412b60:	ror    DWORD PTR [ecx+0x58c0129c],1
  412b66:	mul    BYTE PTR [edx-0x669fa045]
  412b6c:	mov    DWORD PTR [esi-0x50],esp
  412b6f:	gs (bad) 
  412b72:	push   ebp
  412b73:	jno    0x412bcb
  412b75:	(bad)  
  412b77:	lock sub eax,0xcc883b07
  412b7d:	or     BYTE PTR [edx-0x32],ch
  412b80:	mov    esp,0x78d9f7e5
  412b85:	add    DWORD PTR [ecx+0x4b],edi
  412b88:	data16 lods al,BYTE PTR ds:[esi]
  412b8a:	into   
  412b8b:	push   0xff06033f
  412b90:	inc    esp
  412b91:	xor    eax,0xd2414ebf
  412b96:	cmp    BYTE PTR ds:0xafdcaac,cl
  412b9c:	(bad)  
  412b9d:	push   ss
  412b9e:	int3   
  412b9f:	(bad)  [ebx-0x43f9c516]
  412ba5:	xchg   ebp,eax
  412ba6:	adc    BYTE PTR ds:0xf1d1c96,cl
  412bac:	xchg   esp,eax
  412bad:	out    0x63,eax
  412baf:	mov    bl,0xca
  412bb1:	jo     0x412c04
  412bb3:	xchg   BYTE PTR [ecx],dl
  412bb5:	add    DWORD PTR [ecx-0x43],ebx
  412bb8:	out    0xeb,al
  412bba:	mov    al,ds:0xad562c9d
  412bbf:	mov    al,0xb4
  412bc1:	xchg   ebp,eax
  412bc2:	pop    es
  412bc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bc4:	sub    DWORD PTR [ecx+edi*8],ebp
  412bc7:	imul   ebx,DWORD PTR ds:0x2b612170,0x448e24c2
  412bd1:	dec    eax
  412bd2:	add    cl,ch
  412bd4:	aam    0x95
  412bd6:	lods   al,BYTE PTR ds:[esi]
  412bd7:	xlat   BYTE PTR ds:[ebx]
  412bd8:	stos   DWORD PTR es:[edi],eax
  412bd9:	xor    al,bl
  412bdb:	pop    es
  412bdc:	aas    
  412bdd:	xchg   ebp,eax
  412bdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412be0:	cdq    
  412be1:	or     eax,0xff6a9a64
  412be6:	pop    esi
  412be7:	scas   eax,DWORD PTR es:[edi]
  412be8:	out    0xf7,al
  412bea:	or     BYTE PTR [eax+0x18f34498],ch
  412bf0:	bound  ebx,QWORD PTR ds:0xad38944a
  412bf6:	fdiv   QWORD PTR [eax]
  412bf8:	xchg   edx,eax
  412bf9:	ins    DWORD PTR es:[edi],dx
  412bfa:	pop    esp
  412bfb:	adc    eax,0x3e1b820
  412c00:	mov    BYTE PTR [edi+0x3c],dl
  412c03:	mov    al,0xf
  412c05:	ror    DWORD PTR [esp+ecx*8],1
  412c08:	pop    ss
  412c09:	dec    ebp
  412c0a:	jl     0x412c15
  412c0c:	add    al,0x8e
  412c0e:	test   al,0xd5
  412c10:	scas   al,BYTE PTR es:[edi]
  412c11:	imul   ebx,DWORD PTR [edi-0x41],0x309390c8
  412c18:	mov    ebx,0xc039279d
  412c1d:	mov    esi,DWORD PTR [eax-0x741a34a4]
  412c23:	shl    BYTE PTR [ebp+0xb],1
  412c26:	mov    eax,0xb2278932
  412c2b:	and    ecx,DWORD PTR [esi+0x42]
  412c2e:	je     0x412c73
  412c30:	push   0xffffffdf
  412c32:	and    eax,0x4ee46410
  412c37:	inc    edi
  412c38:	fist   DWORD PTR ds:0x2c00a86
  412c3e:	xlat   BYTE PTR ds:[ebx]
  412c3f:	mov    bh,0xa4
  412c41:	xor    BYTE PTR [edi+0x47],al
  412c44:	push   0x96f23398
  412c49:	adc    DWORD PTR [ebx+eiz*8-0x15],0xfffffffa
  412c4e:	popf   
  412c4f:	test   BYTE PTR [edx-0x6f7632cf],0x64
  412c56:	lock lds ecx,FWORD PTR [esi-0x31]
  412c5a:	xchg   DWORD PTR [edi+ecx*1+0x466c9a64],edx
  412c61:	mov    BYTE PTR [ebp-0x14d0f2b9],0x2f
  412c68:	adc    BYTE PTR ds:0x4977324a,0xd
  412c6f:	mov    esi,0x9e319b95
  412c74:	jmp    0xd38bd5a2
  412c79:	pop    esi
  412c7a:	shl    BYTE PTR [ebp+0x5e],cl
  412c7d:	jle    0x412c25
  412c7f:	ret    
  412c80:	inc    ebp
  412c81:	loopne 0x412cfe
  412c83:	fdivr  QWORD PTR [esp+esi*8]
  412c86:	jp     0x412c17
  412c88:	rol    DWORD PTR [ebp+0x333616c3],1
  412c8e:	xlat   BYTE PTR ds:[ebx]
  412c8f:	aaa    
  412c90:	pop    DWORD PTR [edx+edx*8+0x4d]
  412c94:	clc    
  412c95:	add    DWORD PTR [edi+0x2c792aa3],ebx
  412c9b:	out    dx,al
  412c9c:	cmp    al,0xd6
  412c9e:	icebp  
  412c9f:	inc    ebx
  412ca0:	and    eax,0xd2c7bb2f
  412ca5:	or     esp,DWORD PTR ss:[edx+eiz*4+0x79925f3e]
  412cad:	sbb    al,0xf0
  412caf:	in     eax,dx
  412cb0:	pop    ebp
  412cb1:	lahf   
  412cb2:	ret    0xe524
  412cb5:	mov    bl,0x2e
  412cb7:	mov    dh,0x3e
  412cb9:	cmp    ah,bh
  412cbb:	data16 sti 
  412cbd:	mov    ebx,0xecab7744
  412cc2:	(bad)  
  412cc3:	sub    BYTE PTR [esi+0x16c0e356],cl
  412cc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cca:	and    al,BYTE PTR [ebx]
  412ccc:	jae    0x412cf4
  412cce:	mov    dh,0xcd
  412cd0:	call   0x625d0143
  412cd5:	push   esp
  412cd6:	add    eax,DWORD PTR [eax-0x3cdaf0db]
  412cdc:	add    DWORD PTR [edi],ebp
  412cde:	xor    ebp,DWORD PTR [edx+0x46]
  412ce1:	sub    ecx,DWORD PTR [edx-0x61a5a85d]
  412ce7:	jge    0x412d44
  412ce9:	push   ecx
  412cea:	daa    
  412ceb:	cld    
  412cec:	sub    ebp,esp
  412cee:	xchg   BYTE PTR [edi],bl
  412cf0:	(bad)  
  412cf1:	xchg   ebp,eax
  412cf2:	ficom  WORD PTR [edi+0x6a]
  412cf5:	adc    BYTE PTR [edx],dh
  412cf7:	(bad)  
  412cf8:	sbb    DWORD PTR [ecx-0x1742300c],edx
  412cfe:	xlat   BYTE PTR ds:[ebx]
  412cff:	in     eax,0xb2
  412d01:	sbb    al,0xef
  412d03:	mov    ecx,0xd10b5c77
  412d08:	xchg   ebp,eax
  412d09:	iret   
  412d0a:	mov    edi,0xadca9ed9
  412d0f:	add    eax,0x303524c9
  412d14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d15:	lds    eax,FWORD PTR [edx]
  412d17:	es mov bh,0xc1
  412d1a:	retf   
  412d1b:	loopne 0x412d25
  412d1d:	inc    ecx
  412d1e:	sbb    DWORD PTR [eax-0x79edb7e8],esp
  412d24:	lea    ebx,ds:0x8a1dda5b
  412d2a:	sbb    DWORD PTR [eax+edx*2+0x3f527e67],ecx
  412d31:	push   ebx
  412d32:	daa    
  412d33:	retf   0xe241
  412d36:	iret   
  412d37:	mov    eax,ds:0xcd3775ef
  412d3c:	imul   ecx,DWORD PTR [edi],0x20
  412d3f:	adc    eax,DWORD PTR [edi+eax*4+0x62]
  412d43:	xchg   ebp,eax
  412d44:	jno    0x412d42
  412d46:	mov    eax,0x9783fbdf
  412d4b:	popa   
  412d4c:	xchg   BYTE PTR [edx+0x549437f2],ah
  412d52:	adc    ebp,DWORD PTR [ebx+0x56f264f1]
  412d58:	fdivr  QWORD PTR [edi+0x76]
  412d5b:	dec    ebx
  412d5c:	push   ebx
  412d5d:	cmp    dh,BYTE PTR [edi+edx*4+0x3b]
  412d61:	mov    ebx,0x2ec85ac0
  412d66:	sbb    dh,BYTE PTR [edx]
  412d68:	fcmovnb st,st(0)
  412d6a:	or     DWORD PTR [esi-0x5b],ecx
  412d6d:	daa    
  412d6e:	test   al,0x6
  412d70:	and    BYTE PTR [esi],0x76
  412d73:	ficomp WORD PTR [edi+edx*8]
  412d76:	ins    BYTE PTR es:[edi],dx
  412d77:	mov    ds:0x11a22d60,eax
  412d7c:	add    edi,DWORD PTR [ebx+0x3f55e18b]
  412d82:	mov    esi,0x7e18c666
  412d87:	xchg   ebx,eax
  412d88:	mov    esi,0x90a84368
  412d8d:	out    dx,eax
  412d8e:	hlt    
  412d8f:	addr16 sbb cl,ah
  412d92:	js     0x412d57
  412d94:	sub    DWORD PTR [edx-0x74],0xf980824e
  412d9b:	jl     0x412d2c
  412d9d:	pop    esp
  412d9e:	xchg   edx,eax
  412d9f:	(bad)  
  412da0:	dec    esi
  412da1:	mov    ecx,0xbe6e368d
  412da6:	xor    BYTE PTR [edx+0x5243d578],dl
  412dac:	xor    DWORD PTR [ebp-0x2bab969],eax
  412db2:	xor    DWORD PTR [ebp+0x5f2ddf07],eax
  412db8:	aaa    
  412db9:	int    0xb5
  412dbb:	dec    ecx
  412dbc:	shr    BYTE PTR [ebx-0x28372ea6],0xe3
  412dc3:	ja     0x412e25
  412dc5:	nop
  412dc6:	(bad)  [ebp+esi*2-0x17]
  412dca:	mov    edx,0x760ce02e
  412dcf:	push   0xffffff93
  412dd1:	cs repz dec dx
  412dd5:	xor    al,0x1e
  412dd7:	cmp    al,0xc6
  412dd9:	or     eax,0xaf651505
  412dde:	aas    
  412ddf:	sub    ch,BYTE PTR [edi+ecx*2+0x1d0a63dd]
  412de6:	jge    0x412d6e
  412de8:	(bad)  
  412de9:	jo     0x412e0d
  412deb:	ficomp WORD PTR [esi]
  412ded:	dec    esi
  412dee:	and    edx,ebp
  412df0:	(bad)  
  412df1:	int3   
  412df2:	outs   dx,DWORD PTR ds:[esi]
  412df3:	mov    eax,0x7b3574bb
  412df8:	mov    ch,0x1c
  412dfa:	jg     0x412d7d
  412dfc:	push   esi
  412dfd:	sub    ebp,DWORD PTR [ebx-0x6c68ff7c]
  412e03:	sub    esi,edx
  412e05:	in     eax,0x80
  412e07:	mov    ch,0x9c
  412e09:	mov    WORD PTR [edx+0x694acd10],es
  412e0f:	dec    edx
  412e10:	push   ebx
  412e11:	mov    edx,0x8ee78b65
  412e16:	iret   
  412e17:	icebp  
  412e18:	adc    BYTE PTR [ecx+0x27],al
  412e1b:	pop    edi
  412e1c:	adc    dl,BYTE PTR [eax+0x3a977e84]
  412e22:	std    
  412e23:	mov    edx,0x8801803b
  412e28:	cld    
  412e29:	sbb    ecx,DWORD PTR [ecx+0x4d433a77]
  412e2f:	aaa    
  412e30:	sbb    eax,0x83a0a413
  412e35:	js     0x412e66
  412e37:	stos   BYTE PTR es:[edi],al
  412e38:	jg     0x412df0
  412e3a:	adc    ecx,DWORD PTR [ecx]
  412e3c:	fdiv   st(1),st
  412e3e:	lods   al,BYTE PTR ds:[esi]
  412e3f:	adc    BYTE PTR [edi+0x3ae968ab],ah
  412e45:	add    edi,DWORD PTR [eax+0x5e]
  412e48:	mov    ah,0x55
  412e4a:	fistp  DWORD PTR [ebp-0x37]
  412e4d:	mov    ecx,0xbaa6f7c5
  412e52:	mov    ebx,0x8dd472ed
  412e57:	out    dx,al
  412e58:	ins    BYTE PTR es:[edi],dx
  412e59:	lahf   
  412e5a:	sbb    BYTE PTR [esp+esi*8+0x4e],0x2e
  412e5f:	ror    DWORD PTR [edi+0x29112f98],1
  412e65:	sub    dl,BYTE PTR [edx+ebp*1]
  412e68:	sbb    BYTE PTR [edx-0x58],bl
  412e6b:	enter  0xae2f,0x47
  412e6f:	xor    al,0x84
  412e71:	xchg   DWORD PTR [esi-0x2daef01b],edi
  412e77:	mov    bh,BYTE PTR [edi-0x67]
  412e7a:	dec    edi
  412e7b:	scas   eax,DWORD PTR es:[edi]
  412e7c:	jle    0x412eb1
  412e7e:	cwde   
  412e7f:	inc    edi
  412e80:	lock cmp bl,BYTE PTR [edx]
  412e83:	stos   DWORD PTR es:[edi],eax
  412e84:	(bad)  
  412e85:	rcr    ecx,cl
  412e87:	and    eax,0x27cd4dfe
  412e8c:	xor    BYTE PTR [esi+esi*2+0x3e],bh
  412e90:	push   0x2e7f7045
  412e95:	ss popf 
  412e97:	cmp    DWORD PTR fs:[edx+0x6c],0xffffff84
  412e9c:	xchg   cl,al
  412e9e:	pop    esp
  412e9f:	xchg   DWORD PTR [eax+0x13],edi
  412ea2:	lods   al,BYTE PTR ds:[esi]
  412ea3:	mov    al,0xf7
  412ea5:	pop    ds
  412ea6:	adc    al,0x1e
  412ea8:	jnp    0x412e5d
  412eaa:	pop    edi
  412eab:	dec    ecx
  412eac:	in     eax,dx
  412ead:	sar    al,0xbb
  412eb0:	pop    esp
  412eb1:	popf   
  412eb2:	jmp    DWORD PTR cs:0x5112b6e4
  412eb9:	daa    
  412eba:	ret    
  412ebb:	icebp  
  412ebc:	pop    esp
  412ebd:	rol    DWORD PTR [edi],cl
  412ebf:	sbb    bl,BYTE PTR [ebx+0x5c7d156f]
  412ec5:	stos   BYTE PTR es:[edi],al
  412ec6:	loopne 0x412e9d
  412ec8:	ds loopne 0x412e4c
  412ecb:	push   esp
  412ecc:	ins    BYTE PTR es:[edi],dx
  412ecd:	xchg   esi,eax
  412ece:	dec    esp
  412ecf:	adc    bh,BYTE PTR [edi]
  412ed1:	jle    0x412ea8
  412ed3:	or     DWORD PTR [esp+ebx*1+0x27238506],ecx
  412eda:	adc    al,0x34
  412edc:	cmp    BYTE PTR [edi-0x3538c2fd],bh
  412ee2:	call   0x1f96a9ce
  412ee7:	inc    edi
  412ee8:	ins    DWORD PTR es:[edi],dx
  412ee9:	test   BYTE PTR [ebx+0x18],al
  412eec:	(bad)  
  412eed:	jnp    0x412ec3
  412eef:	leave  
  412ef0:	lods   eax,DWORD PTR ds:[esi]
  412ef1:	mov    eax,DWORD PTR [eax+0x7c]
  412ef4:	shl    cl,1
  412ef6:	cld    
  412ef7:	push   ebp
  412ef8:	sbb    al,0xa8
  412efb:	push   ss
  412efc:	mov    ecx,0x7385995a
  412f01:	add    dh,BYTE PTR [edx+ecx*4-0x76]
  412f05:	pop    edx
  412f06:	cld    
  412f07:	repz inc ebp
  412f09:	or     esi,DWORD PTR [ecx]
  412f0b:	fdiv   DWORD PTR [esi]
  412f0d:	cmc    
  412f0e:	xchg   ch,al
  412f10:	cdq    
  412f11:	pushf  
  412f12:	push   esi
  412f13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f15:	xchg   esi,eax
  412f16:	jl     0x412e9c
  412f18:	jb     0x412f59
  412f1a:	je     0x412eb0
  412f1c:	mov    dh,0x43
  412f1e:	inc    ebp
  412f1f:	adc    DWORD PTR [esi],edi
  412f21:	mov    ah,0x27
  412f23:	pop    ebx
  412f24:	sub    BYTE PTR [edi],bh
  412f26:	mov    esp,0x4e4ac675
  412f2b:	lea    eax,[ecx+eax*2+0x31]
  412f2f:	fisub  WORD PTR [ebp+0xb55ae43]
  412f35:	fnsave [eax+0x2eb116c8]
  412f3b:	lds    edi,FWORD PTR [ebx+0x378d4c17]
  412f41:	jg     0x412f9e
  412f43:	aaa    
  412f44:	in     al,dx
  412f45:	jne    0x412ee6
  412f47:	test   DWORD PTR [edx-0x5815bf81],eax
  412f4d:	push   ds
  412f4e:	scas   eax,DWORD PTR es:[edi]
  412f4f:	int    0x26
  412f51:	add    cl,ah
  412f53:	inc    ecx
  412f54:	push   edx
  412f55:	rcl    DWORD PTR ds:0x14a21b64,cl
  412f5b:	rcl    BYTE PTR [esi*8-0x4258a2aa],0x2e
  412f63:	test   eax,0x4c3a289b
  412f68:	lahf   
  412f69:	push   ds
  412f6a:	or     ah,dl
  412f6c:	cs inc ebp
  412f6e:	int3   
  412f6f:	jmp    0xdbb1:0xcaa03765
  412f76:	jp     0x412f97
  412f78:	jno    0x412f35
  412f7a:	sahf   
  412f7b:	ret    0x8116
  412f7e:	icebp  
  412f7f:	push   edi
  412f80:	and    dh,cl
  412f82:	add    ebx,ebp
  412f84:	aad    0x22
  412f86:	adc    ebx,DWORD PTR [ebx-0x36]
  412f89:	push   edx
  412f8a:	jmp    0xf92b:0xf3de1da9
  412f91:	or     ebx,DWORD PTR [edi+edx*2+0x36]
  412f95:	mov    ebx,0xeda57564
  412f9a:	add    ah,bh
  412f9c:	xchg   ecx,eax
  412f9d:	push   ebp
  412f9e:	mov    al,0xae
  412fa0:	jle    0x412f85
  412fa2:	jns    0x412ff1
  412fa4:	(bad)  
  412fa5:	stc    
  412fa6:	mov    cl,BYTE PTR [edi-0x7858c36a]
  412fac:	dec    esp
  412fad:	inc    edx
  412fae:	mov    ebp,0x83620e16
  412fb3:	jno    0x412fb7
  412fb5:	mov    WORD PTR [ebp-0x8],gs
  412fb8:	jo     0x413020
  412fba:	sub    ecx,DWORD PTR [ecx+0x69]
  412fbd:	outs   dx,DWORD PTR ds:[esi]
  412fbe:	xor    dl,BYTE PTR [ebp-0x1b]
  412fc1:	xchg   esi,eax
  412fc2:	and    edx,edx
  412fc4:	pop    ebp
  412fc5:	mov    eax,0xa2328768
  412fca:	dec    edx
  412fcb:	rcr    bl,cl
  412fcd:	cmp    DWORD PTR [ebx],eax
  412fcf:	pushf  
  412fd0:	cmp    al,0xa2
  412fd2:	and    al,0xaf
  412fd4:	dec    edx
  412fd5:	outs   dx,DWORD PTR ds:[esi]
  412fd6:	fisttp QWORD PTR [ebx+0xd]
  412fd9:	or     al,0x78
  412fdb:	pop    edi
  412fdc:	jmp    0x8bb0:0xe49fdaa9
  412fe3:	mov    ds:0x77107723,eax
  412fe8:	pop    esi
  412fe9:	inc    ebx
  412fea:	aas    
  412feb:	(bad)  
  412fec:	scas   eax,DWORD PTR es:[edi]
  412fed:	xchg   ecx,eax
  412fee:	test   esi,esi
  412ff0:	stos   BYTE PTR es:[edi],al
  412ff1:	sub    esp,DWORD PTR [esi+0x3a]
  412ff4:	add    edx,esi
  412ff6:	mov    ebp,0x2900cbe3
  412ffb:	out    dx,al
  412ffc:	je     0x413070
  412ffe:	jle    0x412fde
  413000:	add    eax,DWORD PTR [eax]
  413002:	aam    0xd9
  413004:	das    
  413005:	es sub al,0x73
  413008:	in     eax,0x6d
  41300a:	out    dx,eax
  41300b:	jl     0x412fc2
  41300d:	push   ebx
  41300e:	jge    0x413048
  413010:	sub    bh,BYTE PTR [edx-0x4177d348]
  413016:	mov    dh,0xaf
  413018:	jge    0x41307b
  41301a:	fs call 0xaa21:0x2a84c9ec
  413022:	jne    0x41307d
  413024:	or     eax,0x70956cca
  413029:	and    al,0xc6
  41302b:	aas    
  41302c:	sbb    BYTE PTR [ecx+0x68],0x1e
  413030:	outs   dx,BYTE PTR ds:[esi]
  413031:	pop    es
  413032:	outs   dx,BYTE PTR ds:[esi]
  413033:	cwde   
  413034:	dec    eax
  413035:	pusha  
  413036:	aaa    
  413037:	data16 sbb bl,BYTE PTR [edx-0x6e0507dc]
  41303e:	push   0x2d42db01
  413043:	scas   eax,DWORD PTR es:[edi]
  413044:	dec    edx
  413045:	sub    DWORD PTR [ebx],ebp
  413047:	sbb    WORD PTR [edi-0x417aed59],bx
  41304e:	outs   dx,BYTE PTR ds:[esi]
  41304f:	jno    0x412fe0
  413051:	sub    DWORD PTR [ebx+edi*4],ebx
  413054:	pop    eax
  413055:	mov    bl,0x45
  413057:	fnsave [esi+0x7c10488b]
  41305d:	loope  0x41304b
  41305f:	mov    esp,0x27012c29
  413064:	inc    eax
  413065:	pop    ecx
  413066:	fidiv  WORD PTR [edi-0x12]
  413069:	int    0x13
  41306b:	imul   esi,ebx,0x825b48c6
  413071:	xchg   ebx,eax
  413072:	xchg   dl,dl
  413074:	jmp    0x4130d0
  413076:	lahf   
  413077:	mov    cl,BYTE PTR ss:[ecx+0x73]
  41307b:	loop   0x412fff
  41307d:	in     eax,dx
  41307e:	bound  ebp,QWORD PTR ds:0x2b6b1d14
  413084:	aam    0xfe
  413086:	mov    eax,0xcfeb3879
  41308b:	push   es
  41308c:	dec    ebp
  41308d:	xchg   ecx,eax
  41308e:	(bad)  
  41308f:	shr    DWORD PTR [esi-0x31],0xfc
  413093:	(bad)  
  413094:	aam    0x63
  413096:	mov    ebp,DWORD PTR [esi-0x7b169f9d]
  41309c:	xchg   edx,eax
  41309d:	neg    BYTE PTR [edx+0x2714e3e7]
  4130a3:	and    al,bh
  4130a5:	mov    ebx,0x16381d45
  4130aa:	in     eax,0xb6
  4130ac:	popf   
  4130ad:	enter  0x4d6c,0x32
  4130b1:	ret    0x1097
  4130b4:	adc    BYTE PTR [esi-0x12],bl
  4130b7:	outs   dx,DWORD PTR ds:[esi]
  4130b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130b9:	(bad)  
  4130ba:	mov    esi,0xcba3d3ff
  4130bf:	pushf  
  4130c0:	bound  ebp,QWORD PTR [esi]
  4130c2:	fmul   DWORD PTR [ecx-0x3eb684b7]
  4130c8:	xor    eax,0xc404e6e1
  4130cd:	sbb    eax,0x9ca21b2f
  4130d2:	pusha  
  4130d3:	stos   BYTE PTR es:[edi],al
  4130d4:	jmp    0x46a893f
  4130d9:	loope  0x413112
  4130db:	add    DWORD PTR [ebx+0x49303d00],ebp
  4130e1:	test   BYTE PTR [eax],bl
  4130e3:	sub    DWORD PTR [eax],edx
  4130e5:	outs   dx,BYTE PTR ds:[esi]
  4130e6:	pusha  
  4130e7:	adc    cl,BYTE PTR [edx+0x720892bc]
  4130ed:	jp     0x4130b9
  4130ef:	or     BYTE PTR [edx+ebx*2],bl
  4130f2:	mov    bl,0x77
  4130f4:	pop    ss
  4130f5:	in     al,0x1f
  4130f7:	mov    ds:0x2a7dda59,eax
  4130fc:	addr16 mov dh,ch
  4130ff:	jns    0x413158
  413101:	je     0x4130b2
  413103:	(bad)  
  413104:	fild   QWORD PTR cs:[ecx-0x158c3275]
  41310b:	or     DWORD PTR es:0xae09d70b,ebp
  413112:	push   eax
  413113:	leave  
  413114:	loop   0x4130d0
  413116:	mov    ebx,0x47de857f
  41311b:	fisub  WORD PTR [edi]
  41311d:	shl    BYTE PTR [eax-0x77],0x28
  413121:	(bad)  [ecx]
  413123:	adc    eax,DWORD PTR [esi-0x75aefe04]
  413129:	push   ecx
  41312a:	or     esp,DWORD PTR [ebp+edi*2+0x7b]
  41312e:	push   cs
  41312f:	mov    BYTE PTR [ebx-0xbd2a5c4],0x79
  413136:	pop    ds
  413137:	or     eax,0x99843ecc
  41313c:	pop    ecx
  41313d:	and    al,0xb0
  41313f:	mov    ebx,0xa41e7030
  413144:	int3   
  413145:	sbb    ecx,DWORD PTR [ecx-0x74]
  413148:	loop   0x413134
  41314a:	or     BYTE PTR ds:0x852d5385,0x39
  413151:	and    dl,bl
  413153:	mov    bh,0xe1
  413155:	in     eax,dx
  413156:	fucomp st(4)
  413158:	sbb    dl,BYTE PTR [ebx+0x57]
  41315b:	mov    ds:0x8151c2b8,eax
  413160:	cli    
  413161:	mov    ds:0x9df5bf0c,al
  413166:	psubw  mm2,QWORD PTR [ebx+eiz*2-0x3e]
  41316b:	push   esp
  41316c:	dec    edi
  41316d:	retf   0x3e5f
  413170:	(bad)  
  413171:	mov    bh,BYTE PTR [ebp-0x4f664669]
  413177:	xor    esi,edx
  413179:	(bad)  
  41317a:	mov    ebx,0x119fd1c7
  41317f:	mov    WORD PTR [ebx+0x6f7778d3],?
  413185:	(bad)  
  413186:	repz sbb esp,esp
  413189:	add    eax,0x4c1d00fc
  41318e:	jne    0x413189
  413190:	imul   edx,esp,0xffffffec
  413193:	jbe    0x4131e1
  413195:	sub    eax,0x791cf67
  41319a:	in     eax,dx
  41319b:	call   0x6277d04
  4131a0:	jp     0x413153
  4131a2:	call   0x863c:0x75c49eef
  4131a9:	sti    
  4131aa:	add    eax,DWORD PTR [ebx]
  4131ac:	push   eax
  4131ad:	cmc    
  4131ae:	push   edx
  4131af:	fwait
  4131b0:	cmp    bh,BYTE PTR [esi]
  4131b2:	dec    edi
  4131b3:	fwait
  4131b4:	add    ebx,ebp
  4131b6:	xchg   ebp,eax
  4131b7:	adc    BYTE PTR [ebp+0x13],0x8e
  4131bb:	sub    ebx,0xffffffe8
  4131be:	xchg   edi,eax
  4131bf:	fidiv  WORD PTR [ecx]
  4131c1:	inc    ebx
  4131c2:	repz and BYTE PTR [edx-0x61794120],ch
  4131c9:	add    eax,0x456bdaeb
  4131ce:	aam    0xcc
  4131d0:	xchg   DWORD PTR [ebp+0x1050500d],ebx
  4131d6:	fist   DWORD PTR [edi]
  4131d8:	shr    BYTE PTR [ecx-0x45],0xe2
  4131dc:	inc    ecx
  4131dd:	sbb    al,0x27
  4131df:	or     BYTE PTR [ecx+0x60],0xdc
  4131e3:	ss jp  0x41325f
  4131e6:	outs   dx,DWORD PTR ds:[esi]
  4131e7:	retf   0x1eb4
  4131ea:	icebp  
  4131eb:	jmp    0xe5b0:0x7f382b1d
  4131f2:	fiadd  WORD PTR [ebx+0x54]
  4131f5:	or     al,0x25
  4131f7:	or     ch,al
  4131f9:	stos   DWORD PTR es:[edi],eax
  4131fa:	ins    BYTE PTR es:[edi],dx
  4131fb:	add    BYTE PTR [eax],bh
  4131fd:	inc    edx
  4131fe:	cmp    BYTE PTR [edx-0x79],bh
  413201:	adc    eax,0xb6022915
  413206:	out    dx,eax
  413207:	mov    esi,0x4aa3dcf8
  41320c:	dec    esi
  41320d:	jno    0x41322a
  41320f:	pop    ebp
  413210:	push   0xf5d521b7
  413215:	xor    edi,DWORD PTR [ebp-0x5f]
  413218:	call   0x9fe8:0xdd284de7
  41321f:	add    BYTE PTR [edi],ch
  413221:	imul   BYTE PTR [ebx+0x28]
  413224:	and    esp,edx
  413226:	mov    esp,0xd1cc96cc
  41322b:	jp     0x413212
  41322d:	stc    
  41322e:	mov    ch,0x2a
  413230:	add    ebx,DWORD PTR [edi+0x77751696]
  413236:	imul   edi,DWORD PTR [edi+eax*4+0x464bf5b],0xe380ab7
  413241:	sti    
  413242:	mov    ds:0x483cd33,eax
  413247:	cmp    ebp,ebp
  413249:	lea    edi,[edi+0x17]
  41324c:	mov    edi,0xd393241d
  413251:	and    BYTE PTR [ecx+0x72],ch
  413254:	lahf   
  413255:	adc    esp,DWORD PTR [ecx]
  413257:	pop    edx
  413258:	test   DWORD PTR ds:0xb1fe0762,0x77912f3f
  413262:	std    
  413263:	mov    edx,0x84a75fdf
  413268:	mov    WORD PTR [edx-0x727c97cc],fs
  41326e:	(bad)  
  413270:	aas    
  413271:	rcl    DWORD PTR [eax+0x2d],0x3
  413275:	pop    ebp
  413276:	jl     0x4131f8
  413278:	out    0xda,al
  41327a:	mov    DWORD PTR [ebp-0x54334766],ebx
  413280:	pushf  
  413281:	pop    eax
  413282:	es add cl,cl
  413285:	pop    edi
  413286:	mov    bh,0x4f
  413288:	mov    al,0x14
  41328a:	shl    DWORD PTR [edi],0x8b
  41328d:	xor    DWORD PTR [edi-0x51e2c472],ebp
  413293:	inc    edi
  413294:	cmp    BYTE PTR [ecx],0xda
  413297:	popa   
  413298:	jmp    0x1e99:0x61cda26
  41329f:	xchg   edi,eax
  4132a0:	sbb    BYTE PTR [edi+0x7348a36f],cl
  4132a6:	or     edx,DWORD PTR [eax-0x68]
  4132a9:	sbb    al,0xf5
  4132ab:	in     eax,0xdc
  4132ad:	inc    ecx
  4132ae:	fistp  WORD PTR [edx]
  4132b0:	add    al,0xb0
  4132b2:	cmp    dl,BYTE PTR [eax-0x75]
  4132b5:	out    dx,eax
  4132b6:	add    eax,0x22b6c670
  4132bb:	ror    BYTE PTR [esi+ebx*2+0x1b4fbf93],cl
  4132c2:	mov    al,ds:0xe51355ec
  4132c7:	(bad)
  4132ca:	mov    bl,0xa9
  4132cc:	cwde   
  4132cd:	mov    eax,DWORD PTR [esi+0x6a]
  4132d0:	scas   eax,DWORD PTR es:[edi]
  4132d1:	mov    edi,DWORD PTR [esi-0x39]
  4132d4:	daa    
  4132d5:	adc    al,0x8d
  4132d7:	retf   0x610
  4132da:	push   ds
  4132db:	inc    edi
  4132dc:	js     0x4132c5
  4132de:	arpl   WORD PTR [esi+eax*2],sp
  4132e1:	lds    edi,FWORD PTR [ebx]
  4132e3:	inc    ebp
  4132e4:	inc    edi
  4132e5:	xchg   esp,eax
  4132e6:	push   edx
  4132e7:	lods   eax,DWORD PTR ds:[esi]
  4132e8:	clc    
  4132e9:	stos   BYTE PTR es:[edi],al
  4132ea:	ds es jg 0x413315
  4132ee:	and    al,0x58
  4132f0:	pushf  
  4132f1:	fadd   st(6),st
  4132f3:	enter  0x42a8,0xbf
  4132f7:	adc    cl,BYTE PTR [eax-0x70]
  4132fa:	sub    edi,DWORD PTR [edi-0x3604fc17]
  413300:	mov    BYTE PTR [ecx+0x68],al
  413303:	mov    cs,WORD PTR [eax-0x4bbba618]
  413309:	pop    ebp
  41330a:	in     eax,0xd5
  41330c:	xchg   ebp,eax
  41330d:	mov    al,0x13
  41330f:	jmp    0xcd00eb09
  413314:	inc    esi
  413315:	cmp    eax,0x24a0ac8
  41331a:	sub    dx,WORD PTR [eax]
  41331d:	addr16 sub eax,0x637aaa19
  413323:	push   ebp
  413324:	std    
  413325:	push   eax
  413326:	xor    eax,DWORD PTR [eax-0x665df668]
  41332c:	jmp    0xd950:0x682d9eb0
  413333:	arpl   WORD PTR [edi+ebx*2-0x1],di
  413337:	mov    edx,esi
  413339:	add    eax,0xc7753b6b
  41333e:	out    dx,eax
  41333f:	add    al,0x4
  413341:	rol    BYTE PTR [ecx],1
  413343:	les    edx,FWORD PTR [ebp+0x2b]
  413346:	xchg   ebp,eax
  413347:	sbb    BYTE PTR [ecx+0x1bf59e8e],al
  41334d:	loopne 0x413339
  41334f:	cs xchg ecx,eax
  413351:	pop    ss
  413352:	jmp    0xe5feb677
  413357:	pop    edx
  413358:	pop    edx
  413359:	jmp    edi
  41335b:	mov    ds:0x547820fc,eax
  413360:	out    0x79,eax
  413362:	or     edx,edx
  413364:	lock jae 0x4133ac
  413367:	xchg   ecx,eax
  413368:	adc    al,0xbe
  41336a:	xchg   ebp,eax
  41336b:	ss mov ebx,0x4cf0f87c
  413371:	xor    BYTE PTR [edi-0x1a],cl
  413374:	ins    BYTE PTR es:[edi],dx
  413375:	push   ebp
  413376:	push   ebp
  413377:	xor    ch,BYTE PTR [ebp+0x6684d0e9]
  41337d:	sub    eax,0xf0ba566d
  413382:	xor    al,0xdc
  413384:	test   eax,0x4ca0f35f
  413389:	dec    esi
  41338a:	setle  BYTE PTR [ebp+0x10]
  41338e:	aaa    
  41338f:	loop   0x413397
  413391:	xchg   edi,eax
  413392:	xor    al,0x55
  413394:	sub    eax,0x92c5380f
  413399:	and    dl,dl
  41339b:	lds    edi,FWORD PTR [ebx+0x4b]
  41339e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41339f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133a0:	test   al,0xe
  4133a2:	mov    bl,BYTE PTR [edi-0x67]
  4133a5:	push   0xffffff8f
  4133a7:	sahf   
  4133a8:	ret    
  4133a9:	daa    
  4133aa:	sub    BYTE PTR [esi],ch
  4133ac:	xor    eax,0x7503555c
  4133b1:	aam    0x12
  4133b3:	xor    eax,0xb2df609f
  4133b8:	mov    ebp,0xf8df23c1
  4133bd:	shl    DWORD PTR [esp+eax*2+0x78fcd872],cl
  4133c4:	and    al,0xf1
  4133c6:	(bad)  
  4133c7:	leave  
  4133c8:	test   BYTE PTR [ecx+0x3be4a9da],0x50
  4133cf:	jbe    0x413358
  4133d1:	loope  0x413420
  4133d3:	shr    esi,cl
  4133d5:	dec    edi
  4133d6:	adc    DWORD PTR [edx-0x19bdca32],ecx
  4133dc:	jb     0x413409
  4133de:	hlt    
  4133df:	jmp    0x53da:0xaf39f985
  4133e6:	es shld esp,ebx,cl
  4133ea:	xlat   BYTE PTR ds:[ebx]
  4133eb:	mov    dl,0xbe
  4133ed:	jae    0x41345a
  4133ef:	daa    
  4133f0:	shl    BYTE PTR [edi+0x53174ccc],1
  4133f6:	jmp    0x4133d7
  4133f8:	push   ds
  4133f9:	loop   0x4133d5
  4133fb:	or     eax,DWORD PTR [ebp+0x6b3542e0]
  413401:	cmp    al,0xea
  413403:	dec    esi
  413404:	arpl   WORD PTR [ebx+0x1548558b],si
  41340a:	add    bl,BYTE PTR [ecx-0x5]
  41340d:	xor    dl,BYTE PTR [ebx+0x27]
  413410:	push   0x7
  413412:	jae    0x413409
  413414:	shl    BYTE PTR [ebx],1
  413416:	test   DWORD PTR [bx],edi
  413419:	icebp  
  41341a:	sti    
  41341b:	dec    ebp
  41341c:	inc    edi
  41341d:	mov    dh,0x3b
  41341f:	mov    dh,0xa3
  413421:	test   eax,0x9df39883
  413426:	or     bh,ch
  413428:	sbb    bh,BYTE PTR [ecx+ecx*2-0x3b6351b4]
  41342f:	adc    BYTE PTR [ebx+ebx*8-0x6d3e5e0e],0xc0
  413437:	(bad)  
  413438:	xchg   ebp,eax
  413439:	(bad)  
  41343a:	or     al,0x80
  41343c:	jno    0x413403
  41343e:	ret    
  41343f:	jp     0x4133db
  413441:	push   es
  413442:	xor    BYTE PTR [esi+0x36],bh
  413445:	les    esi,FWORD PTR [esi]
  413447:	inc    edx
  413448:	mov    eax,ds:0xb3f53599
  41344d:	test   al,0xef
  41344f:	pop    edi
  413450:	fldcw  WORD PTR ds:0xe33bbb7f
  413456:	aam    0xf5
  413458:	pushf  
  413459:	enter  0x5850,0x20
  41345d:	xchg   ebp,edi
  41345f:	ds push 0xffffffa2
  413462:	jno    0x413444
  413464:	push   edx
  413465:	pop    edx
  413466:	cwde   
  413467:	or     cl,BYTE PTR [edi+eiz*2+0x5c]
  41346b:	mov    ecx,0xca966878
  413470:	mov    edi,0xf1103799
  413475:	push   es
  413476:	and    BYTE PTR [ecx],0x1b
  413479:	sbb    DWORD PTR [ecx-0x57],esp
  41347c:	push   es
  41347d:	push   0xec5d9f85
  413482:	in     al,0xe1
  413484:	inc    ebp
  413485:	out    0x53,al
  413487:	rcr    DWORD PTR [ebx+ecx*1-0x4e2b9f1b],1
  41348e:	mov    al,0x90
  413490:	out    0xb7,eax
  413492:	sti    
  413493:	cmp    al,0x6c
  413495:	jl     0x413448
  413497:	push   0x3b
  413499:	sbb    al,0x42
  41349b:	fld    DWORD PTR [esi+ebp*1+0x6b]
  41349f:	int    0xae
  4134a1:	out    0x5d,al
  4134a3:	pop    esp
  4134a4:	inc    esi
  4134a5:	lods   al,BYTE PTR ds:[esi]
  4134a6:	inc    esi
  4134a7:	fisub  DWORD PTR [ebx]
  4134a9:	lods   eax,DWORD PTR ds:[esi]
  4134aa:	shl    BYTE PTR [ecx-0x13eaf58c],0x37
  4134b1:	(bad)  
  4134b2:	mul    BYTE PTR [esi+eax*2+0x6c13cfe7]
  4134b9:	cs mov ecx,0xca7e851c
  4134bf:	add    DWORD PTR [esi+0x40],ecx
  4134c2:	sbb    esp,edx
  4134c4:	test   eax,0x27b097a9
  4134c9:	xor    BYTE PTR [edi+0x7c023f22],0xe7
  4134d0:	in     eax,dx
  4134d1:	out    0xb8,al
  4134d3:	dec    esi
  4134d4:	arpl   ax,sp
  4134d6:	enter  0xd355,0xbd
  4134da:	enter  0x6ef6,0x13
  4134de:	imul   BYTE PTR [ecx+0x1219cd61]
  4134e4:	sub    esp,DWORD PTR [edx+0x6f7736d6]
  4134ea:	pop    edi
  4134eb:	cmp    al,0xba
  4134ed:	(bad)  
  4134ee:	daa    
  4134ef:	lea    ebp,[ebx-0x65]
  4134f2:	push   es
  4134f3:	jl     0x4134bc
  4134f5:	nop
  4134f6:	push   0xee4b5fb5
  4134fb:	popa   
  4134fc:	pop    ebx
  4134fd:	fld    TBYTE PTR ds:0xe9d0db55
  413503:	(bad)  
  413505:	sub    eax,0x6b59bc21
  41350a:	pop    esp
  41350b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41350c:	pop    esp
  41350d:	cld    
  41350e:	xor    DWORD PTR [esi+ecx*2+0x6a],ecx
  413512:	or     ah,BYTE PTR [esi]
  413514:	adc    eax,0xdd4b1387
  413519:	add    edi,DWORD PTR [edi-0x9]
  41351c:	xchg   ecx,eax
  41351d:	enter  0x9e0b,0x3e
  413521:	mov    ds:0xf31801a5,eax
  413526:	stos   DWORD PTR es:[edi],eax
  413527:	in     al,0x2a
  413529:	cmp    bl,BYTE PTR [ebx+0x3d72bab5]
  41352f:	dec    ecx
  413530:	out    0x94,eax
  413532:	push   0x85df62b5
  413537:	mov    dh,0xbf
  413539:	sub    BYTE PTR [ecx+0x38],ah
  41353c:	jmp    0xd01bbdd
  413541:	sahf   
  413542:	mul    DWORD PTR [ebx+0x189067e0]
  413548:	hlt    
  413549:	adc    eax,0x1d38a589
  41354e:	popf   
  41354f:	cmp    BYTE PTR [ebx-0x51defabf],0xa0
  413556:	ret    0x10c9
  413559:	pop    es
  41355a:	inc    ebx
  41355b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41355c:	stc    
  41355d:	test   eax,0xc4b08334
  413562:	mov    ah,0x22
  413564:	lods   al,BYTE PTR ds:[esi]
  413565:	pop    es
  413566:	jp     0x41350e
  413568:	imul   ecx,DWORD PTR [edi],0xbf404f67
  41356e:	mov    al,0x47
  413570:	in     eax,0x44
  413572:	popa   
  413573:	dec    esp
  413574:	mov    ah,0x2f
  413576:	data16 xlat BYTE PTR ds:[ebx]
  413578:	lods   eax,DWORD PTR ds:[esi]
  413579:	js     0x413535
  41357b:	das    
  41357c:	repz xor DWORD PTR [ecx+0x6a],ebx
  413580:	and    al,0xe9
  413582:	and    al,0xd8
  413584:	sbb    al,0x4c
  413586:	ds pop esp
  413588:	scas   al,BYTE PTR es:[edi]
  413589:	sub    al,0x5d
  41358b:	mov    WORD PTR [ebp-0x12bba17],ds
  413591:	adc    esi,DWORD PTR ds:0x2d0e46b6
  413597:	fcomp  QWORD PTR [esi-0x26]
  41359a:	dec    eax
  41359b:	and    ch,dl
  41359d:	pop    ebp
  41359e:	mov    cl,0xaf
  4135a0:	test   bl,0x29
  4135a3:	cmp    al,0x77
  4135a5:	lea    esi,[eax]
  4135a7:	fs push ebx
  4135a9:	and    ecx,0x1a12625c
  4135af:	inc    ebx
  4135b0:	(bad)  
  4135b1:	fimul  DWORD PTR [edi]
  4135b3:	fstp   DWORD PTR [eax+0x53]
  4135b6:	mov    ds:0xe3e7fa4b,eax
  4135bb:	dec    edi
  4135bc:	and    BYTE PTR [ecx*2+0x23f0a387],ah
  4135c3:	(bad)  
  4135c5:	hlt    
  4135c6:	push   esp
  4135c7:	or     ebx,ebp
  4135c9:	(bad)  
  4135ca:	sub    eax,0x3fbd2fe
  4135cf:	pop    ss
  4135d0:	ins    DWORD PTR es:[edi],dx
  4135d1:	hlt    
  4135d2:	and    dh,ah
  4135d4:	inc    ebp
  4135d5:	xor    eax,0x51f1d7cb
  4135da:	jp     0x413561
  4135dc:	pop    esi
  4135dd:	pop    ds
  4135de:	pop    ebp
  4135df:	pop    edi
  4135e0:	xor    al,0x27
  4135e2:	xchg   edx,eax
  4135e3:	or     al,0x7e
  4135e5:	in     eax,0x27
  4135e7:	inc    esi
  4135e8:	push   ss
  4135e9:	or     BYTE PTR [ebp+0x1d0fc0d3],ch
  4135ef:	outs   dx,BYTE PTR ds:[esi]
  4135f0:	cmp    ch,al
  4135f2:	call   0x38d1:0xac8f7baa
  4135f9:	sub    eax,0xa04bdd7f
  4135fe:	mov    esi,0xf14cb288
  413603:	je     0x4135c8
  413605:	stos   DWORD PTR es:[edi],eax
  413606:	jo     0x4135b9
  413608:	xor    DWORD PTR [ecx+0x19c79699],ecx
  41360e:	pop    edx
  41360f:	mov    esp,0x1c6dcd11
  413614:	xchg   edx,eax
  413615:	inc    esp
  413616:	mov    ch,BYTE PTR [edi+0x3]
  413619:	pop    ds
  41361a:	cli    
  41361b:	sbb    BYTE PTR ds:0x82c9609,dl
  413621:	call   0xd045:0x60bb1147
  413628:	or     DWORD PTR [edi+0x42],esi
  41362b:	jg     0x4135e3
  41362d:	mov    ecx,0x3a04c144
  413632:	pop    ebx
  413633:	inc    edi
  413634:	adc    bl,BYTE PTR [edx]
  413636:	(bad)  
  413637:	faddp  st(4),st
  413639:	mov    dh,0xe6
  41363b:	and    BYTE PTR [edi+0x25739a81],dl
  413641:	mov    ecx,0x6a7e350f
  413646:	xchg   ecx,eax
  413647:	cwde   
  413648:	in     al,dx
  413649:	dec    esp
  41364a:	pop    ecx
  41364b:	sub    al,0x3
  41364d:	add    DWORD PTR ds:0xfc690904,0xf9e4c655
  413657:	sbb    al,ch
  413659:	fsub   st,st(1)
  41365b:	ss push ds
  41365d:	push   ds
  41365e:	push   0x69
  413660:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413661:	mov    cl,0x82
  413663:	lods   eax,DWORD PTR ds:[esi]
  413664:	or     dh,BYTE PTR [eax-0x5825232d]
  41366a:	inc    edi
  41366b:	stos   DWORD PTR es:[edi],eax
  41366c:	push   esi
  41366d:	pop    es
  41366e:	retf   0xaa6d
  413671:	imul   esi,DWORD PTR [ecx+0x31fc0e3b],0x13d3e1f8
  41367b:	or     BYTE PTR [ebp+0x69eb5bcf],al
  413681:	leave  
  413682:	stos   DWORD PTR es:[edi],eax
  413683:	sbb    dh,bl
  413685:	popf   
  413686:	push   ebx
  413687:	out    0x38,al
  413689:	jns    0x4136d5
  41368b:	xor    bl,BYTE PTR [edi-0x62995b0f]
  413691:	lds    ebx,FWORD PTR [ecx-0x44]
  413694:	test   al,0xb9
  413696:	dec    esp
  413697:	pop    ds
  413698:	or     al,0xd9
  41369a:	imul   dh
  41369c:	retf   0x110d
  41369f:	lds    ecx,FWORD PTR [esi]
  4136a1:	int    0xb3
  4136a3:	fsubrp st(0),st
  4136a5:	mov    dl,BYTE PTR [esi+0x1f]
  4136a8:	lds    ecx,FWORD PTR [eax-0x4b8ba655]
  4136ae:	arpl   WORD PTR [eax+eax*8],bx
  4136b1:	sub    eax,0xe3a66243
  4136b6:	or     DWORD PTR ds:[ecx+0x78],esi
  4136ba:	in     al,0x61
  4136bc:	fnstsw WORD PTR [ebx-0x3ad58f8e]
  4136c2:	cmp    ch,ah
  4136c4:	add    ch,dh
  4136c6:	pushf  
  4136c7:	test   eax,0x5acab943
  4136cc:	ficom  WORD PTR [ebx-0x38bcefa9]
  4136d2:	or     al,cl
  4136d4:	mov    al,0x9d
  4136d6:	pop    ebx
  4136d7:	retf   
  4136d8:	bound  ecx,QWORD PTR [ebp+eax*8+0x13e5ed99]
  4136df:	jmp    0x413702
  4136e1:	neg    DWORD PTR [edx]
  4136e3:	xor    ah,BYTE PTR [esp+edx*4]
  4136e6:	xor    BYTE PTR [eax+0x45be4f56],0xdb
  4136ed:	sahf   
  4136ee:	imul   ecx,DWORD PTR [edi],0x7c
  4136f1:	push   edi
  4136f2:	stos   BYTE PTR es:[edi],al
  4136f3:	inc    ecx
  4136f4:	mov    ebx,0x10198103
  4136f9:	inc    ebx
  4136fa:	enter  0xe1fb,0xb7
  4136fe:	dec    edx
  4136ff:	lahf   
  413700:	fimul  WORD PTR [ebx-0x7efdbd58]
  413706:	(bad)  
  413707:	push   ecx
  413708:	hlt    
  413709:	mov    BYTE PTR [esi],bh
  41370b:	pop    esp
  41370c:	dec    esp
  41370d:	or     DWORD PTR [esi],eax
  41370f:	(bad)  
  413710:	sbb    BYTE PTR [edi-0x415466b9],bh
  413716:	add    al,0x3f
  413718:	or     BYTE PTR [ebx],0xdd
  41371b:	and    al,0xa7
  41371d:	rcl    BYTE PTR [ecx+0x74ac21a4],1
  413723:	jae    0x4136bf
  413725:	pause  
  413727:	adc    BYTE PTR cs:[eax],dl
  41372a:	and    esi,eax
  41372c:	sbb    bh,BYTE PTR [eax]
  41372e:	sbb    al,0x69
  413730:	mov    eax,0x60abf5e5
  413735:	fbld   TBYTE PTR [esi]
  413737:	sbb    DWORD PTR ds:0x8ac4c194,eax
  41373d:	add    esp,DWORD PTR [edi-0xf]
  413740:	dec    esi
  413741:	xchg   edx,eax
  413742:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413743:	adc    al,0x79
  413745:	ret    
  413746:	lock xchg BYTE PTR [ecx],dl
  413749:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41374b:	xor    ah,BYTE PTR [edx+eax*8-0x27bb617c]
  413752:	pop    esi
  413753:	jge    0x41372f
  413755:	xchg   esp,eax
  413756:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  413758:	inc    ecx
  413759:	add    ah,BYTE PTR [ebx-0x64]
  41375c:	mov    cl,0x10
  41375e:	sub    DWORD PTR [edi],0x13fc5950
  413764:	lds    ebx,FWORD PTR [eax+eax*1]
  413767:	inc    esi
  413768:	shr    DWORD PTR [ebp+0x66eb0e8c],0x11
  41376f:	cld    
  413770:	pusha  
  413771:	cmp    esi,DWORD PTR [esi-0x3b45a0e5]
  413777:	xor    edx,DWORD PTR [eax+0x8]
  41377a:	aaa    
  41377b:	(bad)  
  41377c:	bnd jo 0x413734
  41377f:	sahf   
  413780:	xlat   BYTE PTR ds:[ebx]
  413781:	jnp    0x413752
  413783:	test   DWORD PTR [eax],edi
  413785:	jo     0x413759
  413787:	test   bh,dl
  413789:	inc    ecx
  41378a:	and    BYTE PTR [ebp+0x36],al
  41378d:	inc    edi
  41378e:	or     dl,ch
  413790:	jne    0x41376d
  413792:	or     eax,0x6b9ff52c
  413797:	pop    ss
  413798:	std    
  413799:	stc    
  41379a:	mov    bh,0xfd
  41379c:	mov    al,ss:0x35f8a81a
  4137a2:	push   edx
  4137a3:	mov    ah,0xd
  4137a5:	mov    BYTE PTR [esi+0x5],0x86
  4137a9:	xor    bh,BYTE PTR [ebx-0xd1710cc]
  4137af:	ret    
  4137b0:	dec    ebp
  4137b1:	and    DWORD PTR [ecx+edx*4+0xe],ebx
  4137b5:	jnp    0x413805
  4137b7:	arpl   WORD PTR [esi],sp
  4137b9:	dec    edx
  4137ba:	sbb    BYTE PTR [edi-0x34],bh
  4137bd:	adc    eax,0xe9b81584
  4137c2:	scas   al,BYTE PTR es:[edi]
  4137c3:	retf   
  4137c4:	inc    ebx
  4137c5:	sbb    eax,0x549a72d3
  4137ca:	pusha  
  4137cb:	xchg   esi,eax
  4137cc:	xchg   DWORD PTR [ecx-0x7cbbdd64],eax
  4137d2:	jnp    0x413786
  4137d4:	in     eax,dx
  4137d5:	dec    ecx
  4137d6:	cmp    cl,dh
  4137d8:	ret    0xc095
  4137db:	test   al,0x70
  4137dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137de:	mov    ecx,0x9abad61b
  4137e3:	aad    0x7
  4137e5:	in     al,0x7d
  4137e7:	in     eax,0x24
  4137e9:	aad    0xef
  4137eb:	sbb    al,0x2c
  4137ed:	es cwde 
  4137ef:	fisubr DWORD PTR [edx+0x4e]
  4137f2:	std    
  4137f3:	sub    esi,DWORD PTR [ebx-0x61]
  4137f6:	ins    BYTE PTR es:[edi],dx
  4137f7:	in     eax,0xe1
  4137f9:	xor    eax,0x2daa4ecd
  4137fe:	inc    edx
  4137ff:	jmp    0x413794
  413801:	ss fwait
  413803:	std    
  413804:	pop    es
  413805:	push   ecx
  413806:	lock xor esi,ecx
  413809:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41380a:	xchg   edi,eax
  41380b:	fistp  DWORD PTR [edx]
  41380d:	xor    DWORD PTR [esi-0x3d02ecfe],edi
  413813:	scas   al,BYTE PTR es:[edi]
  413814:	bound  ebx,QWORD PTR [ecx]
  413816:	and    cl,ah
  413818:	xchg   edi,eax
  413819:	sub    BYTE PTR [edx-0x5e],ch
  41381c:	inc    esp
  41381d:	repnz mov al,cl
  413820:	ret    
  413821:	and    DWORD PTR [edx-0x4a],ebx
  413824:	aas    
  413825:	lds    edi,FWORD PTR [ebx]
  413827:	out    0xaa,al
  413829:	cmp    eax,0xb6eff233
  41382e:	test   DWORD PTR [ebx+edx*4],0xc6f9036c
  413835:	loope  0x4137d2
  413837:	add    ebx,DWORD PTR [ecx+0x2adb0f6b]
  41383d:	cmp    dl,dl
  41383f:	pushf  
  413840:	push   edi
  413841:	jno    0x413877
  413843:	lods   al,BYTE PTR ds:[esi]
  413844:	inc    BYTE PTR [eax]
  413846:	xchg   edx,eax
  413847:	mov    al,0x6d
  413849:	stos   BYTE PTR es:[edi],al
  41384a:	es call 0xcd6b764e
  413850:	or     DWORD PTR [ecx],eax
  413852:	stos   BYTE PTR es:[edi],al
  413853:	xchg   BYTE PTR [ebx+0x2788a3d5],dh
  413859:	loope  0x413824
  41385b:	add    BYTE PTR [edx-0x21e8a6d3],bh
  413861:	sar    esp,1
  413863:	test   BYTE PTR [eax],dl
  413865:	sub    edx,DWORD PTR [eax-0x73]
  413868:	add    al,0xe4
  41386a:	mov    al,ds:0x92486b3d
  41386f:	pusha  
  413870:	push   0x7c
  413872:	sti    
  413873:	(bad)  
  413874:	xor    DWORD PTR ds:0x80922140,0xcc40d400
  41387e:	mov    edx,0x7655a622
  413883:	xlat   BYTE PTR ds:[ebx]
  413884:	cmp    ebp,esi
  413886:	pop    es
  413887:	aas    
  413888:	pop    eax
  413889:	pop    ss
  41388a:	sub    eax,0xc7a629cb
  41388f:	ins    DWORD PTR es:[edi],dx
  413890:	cmp    ebp,DWORD PTR [ecx+esi*4+0x57447414]
  413897:	mov    esp,0x6cada367
  41389c:	ins    DWORD PTR es:[edi],dx
  41389d:	into   
  41389e:	and    al,0xd7
  4138a0:	jmp    0x41383f
  4138a2:	pop    es
  4138a3:	xchg   ecx,eax
  4138a4:	sbb    DWORD PTR [edi+0x2a8cf16a],ebx
  4138aa:	imul   esi,edx,0xffffff8d
  4138ad:	adc    dl,cl
  4138af:	popa   
  4138b0:	or     eax,DWORD PTR [esi-0x2703c446]
  4138b6:	xchg   edi,eax
  4138b7:	push   0xfffffff1
  4138b9:	xchg   ecx,eax
  4138ba:	mov    ebx,0xd51bd09a
  4138bf:	arpl   WORD PTR [edx-0x5bda1237],cx
  4138c5:	jecxz  0x413907
  4138c7:	xor    edx,DWORD PTR [edi+0x38dcb12a]
  4138cd:	and    al,0xcf
  4138d0:	add    eax,0x78a7c63a
  4138d5:	mov    bh,0x8d
  4138d7:	dec    esi
  4138d8:	jge    0x41389c
  4138da:	xchg   DWORD PTR [ecx+0x6c2bea24],ebx
  4138e0:	lods   al,BYTE PTR ds:[esi]
  4138e1:	call   0x1628907a
  4138e6:	pop    eax
  4138e7:	pop    ebx
  4138e8:	aam    0xc0
  4138ea:	xor    DWORD PTR [ecx-0x4d889b83],ebx
  4138f0:	jmp    0xef4:0x720c38f2
  4138f7:	mov    esi,0xa6098710
  4138fc:	add    edi,eax
  4138fe:	data16 adc BYTE PTR ss:[edi+0x10],dh
  413903:	lock leave 
  413905:	xor    al,0xe
  413907:	or     dl,BYTE PTR [eax-0x79]
  41390a:	mov    esi,0xf5404953
  41390f:	cmp    dh,al
  413911:	xlat   BYTE PTR ds:[ebx]
  413912:	std    
  413913:	js     0x4138e6
  413915:	push   es
  413916:	sbb    eax,0x75c2ebc7
  41391b:	pop    esi
  41391c:	pop    ds
  41391d:	push   esi
  41391e:	das    
  41391f:	out    dx,eax
  413920:	pusha  
  413921:	jnp    0x413983
  413923:	scas   al,BYTE PTR es:[edi]
  413924:	push   esp
  413925:	popa   
  413926:	cdq    
  413927:	and    eax,0xeba75d8b
  41392c:	and    al,0x89
  41392e:	push   esp
  413930:	out    dx,al
  413931:	add    BYTE PTR [esi],0xe
  413934:	mov    eax,0x24ab4285
  413939:	es dec eax
  41393b:	push   es
  41393c:	add    BYTE PTR [ecx+eax*4+0x76],ch
  413940:	mov    esp,0x9e74888f
  413945:	xlat   BYTE PTR ds:[ebx]
  413946:	in     al,0x20
  413948:	or     BYTE PTR [edi],bl
  41394a:	add    BYTE PTR [edi-0x8f8b686],dh
  413950:	mov    ebp,0xe41981bd
  413955:	shl    dl,cl
  413957:	jns    0x4139b1
  413959:	jo     0x41396d
  41395b:	add    al,0x93
  41395d:	sar    DWORD PTR [esp+ecx*2-0x2],0x3
  413962:	cli    
  413963:	rcr    DWORD PTR [edi+0x67],1
  413966:	shr    BYTE PTR [ebx+0x1c9f7a75],0x77
  41396d:	cld    
  41396e:	sbb    edi,ebp
  413970:	jl     0x413954
  413972:	and    al,0x9e
  413974:	pop    eax
  413975:	dec    esi
  413976:	clc    
  413977:	ds test eax,0xff9b2187
  41397d:	nop
  41397e:	popa   
  41397f:	jmp    0x4c3:0x12a7cd3b
  413986:	xchg   esi,eax
  413987:	sbb    DWORD PTR [edi-0x5cc32ca0],ebx
  41398d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41398e:	(bad)  [ecx]
  413990:	out    0xf5,al
  413992:	lods   al,BYTE PTR gs:[esi]
  413994:	ss enter 0xf7c3,0x7d
  413999:	jno    0x413920
  41399b:	aaa    
  41399c:	call   esp
  41399e:	xchg   edi,eax
  41399f:	push   ss
  4139a0:	jmp    0x4139bd
  4139a2:	std    
  4139a3:	ins    BYTE PTR es:[edi],dx
  4139a4:	adc    DWORD PTR [esi+0x33],esi
  4139a7:	or     ecx,DWORD PTR [esi]
  4139a9:	hlt    
  4139aa:	ins    BYTE PTR es:[edi],dx
  4139ab:	ret    0xcb38
  4139ae:	fistp  DWORD PTR [edi-0x28d4c75]
  4139b4:	cs ja  0x413999
  4139b7:	sbb    DWORD PTR [edx+ebp*8+0x6f],eax
  4139bb:	inc    ecx
  4139bc:	sbb    ch,cl
  4139be:	fs aad 0x55
  4139c1:	scas   eax,DWORD PTR es:[edi]
  4139c2:	mov    ecx,0x879e7015
  4139c7:	enter  0xf25e,0xd1
  4139cb:	jp     0x413a18
  4139cd:	mov    BYTE PTR [ecx+0x1bbc4119],bh
  4139d3:	cwde   
  4139d4:	or     edx,eax
  4139d6:	lahf   
  4139d7:	lea    ebx,[ecx]
  4139d9:	fcom   st(3)
  4139db:	sbb    DWORD PTR ds:0x523761c9,ecx
  4139e1:	pop    esi
  4139e2:	or     dh,al
  4139e4:	cld    
  4139e5:	(bad)  
  4139e6:	outs   dx,DWORD PTR ds:[esi]
  4139e7:	push   esi
  4139e8:	(bad)  
  4139e9:	mov    ebp,0xf8d9d67
  4139ee:	ret    
  4139ef:	mov    dl,0xe3
  4139f1:	sti    
  4139f2:	push   edi
  4139f4:	or     BYTE PTR [edx-0x43],al
  4139f7:	enter  0x988b,0x28
  4139fb:	loope  0x4139b4
  4139fd:	cwde   
  4139fe:	ret    0x72ca
  413a01:	ficom  DWORD PTR [ebp-0x5e28f117]
  413a07:	out    0x8d,eax
  413a09:	cmp    BYTE PTR [edx],bh
  413a0b:	mov    ebx,DWORD PTR [edx-0x6d]
  413a0e:	sub    BYTE PTR [ebx-0x2],0xbb
  413a12:	sub    al,0x4e
  413a14:	xor    esp,esp
  413a16:	add    BYTE PTR ds:0x821c9118,bh
  413a1c:	xlat   BYTE PTR ds:[ebx]
  413a1d:	jmp    0x413a50
  413a1f:	hlt    
  413a20:	stos   DWORD PTR es:[edi],eax
  413a21:	imul   edi,DWORD PTR ds:0xffd6fbab,0x75f167ed
  413a2b:	xor    bh,BYTE PTR [esp]
  413a2e:	test   al,0xbb
  413a30:	dec    edx
  413a31:	jno    0x413a5e
  413a33:	push   edx
  413a34:	mov    eax,edi
  413a36:	fisubr DWORD PTR [ecx+0x1b0f830a]
  413a3c:	jb     0x413a47
  413a3e:	jnp    0x4139d8
  413a40:	sbb    DWORD PTR [esp+ebp*1+0x6f2bd27d],0xf970cde2
  413a4b:	or     BYTE PTR [edx+0x6b9aab16],ch
  413a51:	std    
  413a52:	jecxz  0x413a8b
  413a54:	test   DWORD PTR [ecx],0x9064556f
  413a5a:	lea    edx,[ecx+0x5ed41eea]
  413a60:	daa    
  413a61:	loope  0x413ad6
  413a63:	push   ebp
  413a64:	and    BYTE PTR [ebp-0x76c1f205],bl
  413a6a:	xor    DWORD PTR [ebx-0x363bca1a],ecx
  413a70:	add    ebx,0xe1a150ae
  413a76:	in     eax,dx
  413a77:	inc    ebx
  413a78:	mov    al,ds:0xba916bca
  413a7d:	sub    bl,0xcc
  413a80:	aam    0x38
  413a82:	xchg   ebx,eax
  413a83:	dec    edi
  413a84:	out    dx,eax
  413a85:	xchg   esi,eax
  413a86:	sub    DWORD PTR [ebp+0x24eeeea1],edi
  413a8c:	dec    ecx
  413a8d:	stc    
  413a8e:	gs xchg ebp,eax
  413a90:	mov    eax,0x63bf37be
  413a95:	xchg   edi,eax
  413a96:	xchg   edx,eax
  413a97:	and    al,0x53
  413a99:	dec    ebp
  413a9a:	pop    ss
  413a9b:	xchg   ebx,eax
  413a9c:	jmp    0x413a4d
  413a9e:	pop    ebx
  413a9f:	mov    WORD PTR [ecx-0x5808bdc9],ss
  413aa5:	retf   0x274b
  413aa8:	inc    esp
  413aa9:	or     BYTE PTR [ebx-0x1f],bl
  413aac:	adc    DWORD PTR [esi],esp
  413aae:	repnz dec esi
  413ab0:	ficom  DWORD PTR [edi-0x55]
  413ab3:	dec    esp
  413ab4:	push   ss
  413ab5:	and    edx,0x107866ca
  413abb:	xor    esp,DWORD PTR [edi]
  413abd:	push   0xffffffd0
  413abf:	pop    ds
  413ac0:	mov    al,0xfc
  413ac2:	inc    esp
  413ac3:	jne    0x413af8
  413ac5:	cmp    BYTE PTR cs:[ecx-0x4e],bh
  413ac9:	inc    edi
  413aca:	jne    0x413a86
  413acc:	js     0x413a5d
  413ace:	dec    ecx
  413acf:	into   
  413ad0:	sub    ebp,edx
  413ad2:	fcomp  DWORD PTR [eax-0x4269c7ae]
  413ad8:	int    0x73
  413ada:	mov    fs,WORD PTR [ecx+0x78e50925]
  413ae0:	push   0x11
  413ae2:	add    eax,DWORD PTR [ecx-0x77]
  413ae5:	add    BYTE PTR [ecx-0x7a],ah
  413ae8:	dec    ebp
  413ae9:	ss (bad) 
  413aec:	sbb    BYTE PTR [eax-0x1c],0x8d
  413af0:	push   ecx
  413af1:	ss xchg edx,eax
  413af3:	dec    ebp
  413af4:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  413af6:	out    dx,al
  413af7:	out    0x3,eax
  413af9:	ret    0xa01a
  413afc:	(bad)  
  413afe:	inc    ebx
  413aff:	adc    DWORD PTR [eax],esp
  413b01:	lahf   
  413b02:	test   al,0x57
  413b04:	cmp    DWORD PTR [ecx],0xe3b63001
  413b0a:	jg     0x413b4d
  413b0c:	mov    dl,0xd1
  413b0e:	jne    0x413b5a
  413b10:	aas    
  413b11:	and    DWORD PTR [eax],ecx
  413b13:	in     eax,0x42
  413b15:	shr    DWORD PTR [eax+0x29],1
  413b18:	ret    
  413b19:	cmp    ecx,DWORD PTR [esi-0x28886aa2]
  413b1f:	aad    0xfe
  413b21:	push   ss
  413b22:	int    0x9c
  413b24:	test   DWORD PTR [ebx+0x1c78fd5d],edi
  413b2a:	sbb    esi,DWORD PTR [eax]
  413b2c:	mov    al,ds:0x88d18ac7
  413b31:	or     eax,DWORD PTR [ebp-0x1cb5b43f]
  413b37:	test   eax,0x73778e3d
  413b3c:	push   es
  413b3d:	mov    bh,0x9e
  413b3f:	jge    0x413ba8
  413b41:	pop    edx
  413b42:	jle    0x413b69
  413b44:	mov    ds:0x9bc5c3d3,al
  413b49:	sbb    bl,BYTE PTR [esi]
  413b4b:	jbe    0x413af5
  413b4d:	addr16 push ecx
  413b4f:	lahf   
  413b50:	mov    ds:0x6afb0848,al
  413b55:	cmp    DWORD PTR [eax],0x0
  413b58:	xchg   esi,eax
  413b59:	sbb    eax,0xea78a547
  413b5e:	mov    al,0x66
  413b60:	mov    ecx,0x12e27649
  413b65:	fild   DWORD PTR [esi]
  413b67:	jmp    0xd775:0xda727708
  413b6e:	push   ebp
  413b6f:	mov    ch,0x12
  413b71:	mov    bh,0x16
  413b73:	fisttp WORD PTR [edi]
  413b75:	(bad)  [ecx+0x4cd069a2]
  413b7b:	cmp    ah,BYTE PTR [eax+0x11dee984]
  413b81:	xor    eax,0x521a57f2
  413b86:	dec    eax
  413b87:	stc    
  413b88:	jb     0x413c09
  413b8a:	and    esp,DWORD PTR [ebp+0x58]
  413b8d:	retf   0x4d52
  413b90:	push   esp
  413b91:	test   al,0x12
  413b93:	call   FWORD PTR [ebx+0x37737ec6]
  413b99:	daa    
  413b9a:	int3   
  413b9b:	adc    eax,0x46a2589e
  413ba0:	push   ds
  413ba1:	and    ebx,edi
  413ba3:	cmp    cl,ch
  413ba5:	mov    cl,0xd5
  413ba7:	xor    ecx,DWORD PTR [eax-0x3013516b]
  413bad:	jne    0x413bf5
  413baf:	add    al,0x99
  413bb1:	adc    al,0xff
  413bb3:	push   esp
  413bb4:	ror    BYTE PTR [eax+0x4b23e732],cl
  413bba:	mul    BYTE PTR [edi-0x2d]
  413bbd:	int    0x1d
  413bbf:	int    0x24
  413bc1:	js     0x413bec
  413bc3:	pop    ecx
  413bc4:	mov    BYTE PTR [esi+0x7193e755],0xb6
  413bcb:	dec    BYTE PTR [eax-0x24]
  413bce:	aaa    
  413bcf:	out    0x16,al
  413bd1:	jne    0x413bc9
  413bd3:	lods   eax,DWORD PTR ds:[esi]
  413bd4:	sub    BYTE PTR [eax+edx*4],0x7b
  413bd8:	hlt    
  413bd9:	neg    BYTE PTR [ecx+ecx*8-0x3f]
  413bdd:	retf   0xec16
  413be0:	mov    bl,0xcd
  413be2:	not    DWORD PTR [esi-0x58c80638]
  413be8:	sub    ebx,DWORD PTR [ebx]
  413bea:	push   si
  413bec:	xchg   edi,eax
  413bed:	mov    ecx,DWORD PTR [ebx]
  413bef:	adc    DWORD PTR [ebp+0x3dc2cc67],ecx
  413bf5:	enter  0xcd83,0xba
  413bf9:	cmp    eax,0xc939180c
  413bfe:	ret    
  413bff:	pop    esi
  413c00:	jg     0x413be8
  413c02:	sti    
  413c03:	pushf  
  413c04:	mov    ecx,0x5a898a40
  413c09:	cdq    
  413c0a:	adc    eax,ebp
  413c0c:	je     0x413be2
  413c0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c0f:	shl    ah,cl
  413c11:	add    BYTE PTR [esi+0x299e0c96],bh
  413c17:	jns    0x413c3a
  413c19:	mov    esi,0x2157bf84
  413c1e:	lea    ecx,[eax]
  413c20:	cdq    
  413c21:	dec    ecx
  413c22:	std    
  413c23:	outs   dx,BYTE PTR ds:[esi]
  413c24:	out    dx,eax
  413c25:	(bad)  
  413c26:	jg     0x413c97
  413c28:	inc    esi
  413c29:	fdiv   st(5),st
  413c2b:	test   esi,esi
  413c2d:	dec    esi
  413c2e:	std    
  413c2f:	mov    ch,0x39
  413c31:	xor    DWORD PTR [ebx+0x75],0x4e42caf1
  413c38:	addr16 push esp
  413c3a:	pop    ebx
  413c3b:	(bad)  
  413c3c:	fisttp DWORD PTR [ecx]
  413c3e:	sub    al,0xff
  413c40:	out    0x39,al
  413c42:	mov    bh,0x1b
  413c44:	out    0x80,eax
  413c46:	icebp  
  413c47:	mov    esi,DWORD PTR [edi]
  413c49:	adc    BYTE PTR [esi],ah
  413c4b:	je     0x413c48
  413c4d:	dec    ecx
  413c4e:	push   ss
  413c4f:	xor    BYTE PTR [ebx],ch
  413c51:	dec    edx
  413c52:	jno    0x413cc0
  413c54:	dec    esp
  413c55:	adc    al,0xd1
  413c57:	dec    edi
  413c58:	stc    
  413c59:	into   
  413c5a:	jne    0x413c41
  413c5c:	ins    DWORD PTR es:[edi],dx
  413c5d:	addr16 in eax,dx
  413c5f:	ins    DWORD PTR es:[edi],dx
  413c60:	aaa    
  413c61:	je     0x413c02
  413c63:	jns    0x413c96
  413c65:	mov    gs,WORD PTR [ebp-0x1fa837bc]
  413c6b:	xor    al,0x65
  413c6d:	mov    ds:0x23fe7491,eax
  413c72:	xchg   esp,eax
  413c73:	mov    esp,0xb1ca556a
  413c78:	outs   dx,BYTE PTR ds:[esi]
  413c79:	in     eax,dx
  413c7a:	push   ds
  413c7b:	push   ebp
  413c7c:	hlt    
  413c7d:	js     0x413cf2
  413c7f:	std    
  413c80:	pushf  
  413c81:	pop    ebx
  413c82:	fwait
  413c83:	jnp    0x413ccb
  413c85:	adc    DWORD PTR [ebx-0xfc6e9cf],0xbedd3e47
  413c8f:	sbb    BYTE PTR [edx],bh
  413c91:	or     BYTE PTR [eax],al
  413c93:	xor    dh,ch
  413c95:	add    ebx,DWORD PTR [ebp-0x43170115]
  413c9b:	mov    esp,0xb4548ce8
  413ca0:	retf   0x1dc9
  413ca3:	ds jg  0x413cc3
  413ca6:	daa    
  413ca7:	mov    DWORD PTR [edi+ebx*2],ebx
  413caa:	add    al,0xdb
  413cac:	cwde   
  413cad:	test   eax,0x837f0a61
  413cb2:	jge    0x413cda
  413cb4:	pop    es
  413cb5:	push   0xfffffff0
  413cb7:	xchg   edx,eax
  413cb8:	xchg   ebp,eax
  413cb9:	push   ebx
  413cba:	sub    al,0x21
  413cbc:	xor    cl,cl
  413cbe:	sbb    DWORD PTR [eax-0x62],eax
  413cc1:	ss jecxz 0x413ca1
  413cc4:	ror    eax,1
  413cc6:	shl    BYTE PTR ds:0x10b1a720,cl
  413ccc:	mov    dh,0xce
  413cce:	and    dh,BYTE PTR [edx]
  413cd0:	xlat   BYTE PTR ds:[ebx]
  413cd1:	cmp    ecx,DWORD PTR [edi-0x76a321a6]
  413cd7:	and    edi,esp
  413cd9:	sbb    eax,0x142a72f5
  413cde:	mov    ah,0xcb
  413ce0:	ret    0xd663
  413ce3:	mov    ds:0xb1c16b81,eax
  413ce8:	aaa    
  413ce9:	cmc    
  413cea:	dec    ebp
  413ceb:	(bad)  
  413cec:	ficomp WORD PTR ds:0xdd09887b
  413cf2:	ins    DWORD PTR es:[edi],dx
  413cf3:	in     al,dx
  413cf4:	pushf  
  413cf5:	and    al,0x8d
  413cf7:	out    dx,eax
  413cf8:	aaa    
  413cf9:	lods   eax,DWORD PTR ds:[esi]
  413cfa:	imul   ebp,DWORD PTR [eax+0x1],0x5d
  413cfe:	mov    es,ecx
  413d00:	stos   BYTE PTR es:[edi],al
  413d01:	xor    ebp,DWORD PTR [ecx-0x65]
  413d04:	mov    eax,ds:0x8546eaff
  413d09:	dec    ebp
  413d0a:	xchg   edx,eax
  413d0b:	sub    esp,DWORD PTR [edx+0xd]
  413d0e:	pop    es
  413d0f:	xchg   ebx,eax
  413d10:	mov    ah,0x5e
  413d12:	add    dh,BYTE PTR [edi-0x7654fb70]
  413d18:	dec    ecx
  413d19:	add    bh,bl
  413d1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d1c:	(bad)  
  413d1d:	jg     0x413cf5
  413d1f:	fidivr DWORD PTR [eax]
  413d21:	and    BYTE PTR [edx],ch
  413d23:	stos   DWORD PTR es:[edi],eax
  413d24:	push   ebx
  413d25:	icebp  
  413d26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d27:	add    ecx,DWORD PTR [ecx]
  413d29:	xchg   edi,eax
  413d2a:	mov    bl,0xee
  413d2c:	push   eax
  413d2d:	dec    edi
  413d2e:	jns    0x413d0a
  413d30:	nop
  413d31:	push   esi
  413d32:	cmp    BYTE PTR [eax+0x4fa79938],bh
  413d38:	hlt    
  413d39:	mov    ebp,0xc550e379
  413d3e:	cmp    DWORD PTR [ecx+edi*4-0x62c7c8a3],edx
  413d45:	and    ch,BYTE PTR [edi+0x6089482a]
  413d4b:	and    ah,bl
  413d4d:	pop    ebp
  413d4e:	nop
  413d4f:	add    ebp,DWORD PTR [esi+0xf0ddd02]
  413d55:	popf   
  413d56:	pushf  
  413d57:	pushf  
  413d58:	out    dx,al
  413d59:	sub    BYTE PTR [eax-0x7c8f7131],dl
  413d5f:	jge    0x413dc7
  413d61:	(bad)  
  413d62:	fcmovu st,st(6)
  413d64:	xchg   ebx,eax
  413d65:	dec    edx
  413d66:	iret   
  413d67:	repnz sbb esi,DWORD PTR [esi+esi*4+0x3]
  413d6c:	sbb    eax,DWORD PTR [ecx]
  413d6e:	rcl    ebp,cl
  413d70:	fst    DWORD PTR fs:[ebp+0x15]
  413d74:	popf   
  413d75:	jl     0x413da7
  413d77:	xor    eax,0xa76faaed
  413d7c:	xlat   BYTE PTR ds:[ebx]
  413d7d:	adc    DWORD PTR [ecx+0x39],esp
  413d80:	(bad)  
  413d82:	sub    bl,0xe6
  413d85:	leave  
  413d86:	(bad)  
  413d88:	fwait
  413d89:	push   esi
  413d8a:	imul   esi,DWORD PTR [edi],0x1b37014b
  413d90:	mov    dh,0x77
  413d92:	enter  0x5041,0x8f
  413d96:	out    dx,al
  413d97:	scas   eax,DWORD PTR es:[edi]
  413d98:	jg     0x413da0
  413d9a:	sbb    bh,BYTE PTR [edx+0x13]
  413d9d:	test   eax,0x588124d0
  413da2:	sub    DWORD PTR [edi+eax*4-0x26],edi
  413da6:	out    dx,al
  413da7:	pop    DWORD PTR [ebx-0x6e550c93]
  413dad:	mov    ch,BYTE PTR [esi-0x475813e4]
  413db3:	mov    esi,0x75e9fa1e
  413db8:	ins    DWORD PTR es:[edi],dx
  413db9:	daa    
  413dba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413dbb:	dec    ebx
  413dbc:	jnp    0x413d9f
  413dbe:	cmp    eax,0x7b66d3b8
  413dc3:	test   eax,0xf76762e9
  413dc8:	mov    ch,0xf4
  413dca:	push   0x3a
  413dcc:	sti    
  413dcd:	inc    ecx
  413dce:	sbb    al,0xa3
  413dd0:	and    eax,0x391d6c
  413dd5:	addr16 mov edx,0xf5cdbca5
  413ddb:	in     al,dx
  413ddc:	mov    ebp,0x2679ac1b
  413de1:	mov    cl,0x5d
  413de3:	pop    ebp
  413de4:	cdq    
  413de5:	inc    eax
  413de6:	cmp    BYTE PTR [ebp-0x7f9eb2e6],bh
  413dec:	mov    bh,0x11
  413def:	repnz sbb BYTE PTR [edx-0x66140c5d],0xf3
  413df7:	gs pop eax
  413df9:	push   esp
  413dfa:	jno    0x413da9
  413dfc:	or     eax,0x12cb2f9d
  413e01:	pop    eax
  413e02:	ins    DWORD PTR es:[edi],dx
  413e03:	lds    ebp,FWORD PTR [eax-0x6c]
  413e06:	mov    cl,0xad
  413e08:	inc    edx
  413e09:	cwde   
  413e0a:	in     eax,dx
  413e0b:	imul   edi,DWORD PTR [di+0x1886],0xcbc8093c
  413e14:	mov    esp,0xc0a646e3
  413e19:	dec    edi
  413e1a:	add    BYTE PTR [ecx],bh
  413e1c:	shl    BYTE PTR [ebp+0x1bed39e1],1
  413e22:	pop    ebp
  413e23:	cdq    
  413e24:	adc    esp,ebp
  413e26:	xchg   dh,dl
  413e28:	cmp    ebp,edi
  413e2a:	jns    0x413df7
  413e2c:	sbb    bl,dh
  413e2e:	retf   0xe263
  413e31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e32:	fcom   DWORD PTR [edi+0x3]
  413e35:	pop    ss
  413e36:	fdiv   DWORD PTR [edx]
  413e38:	sub    eax,0x76ec8b73
  413e3d:	mov    ecx,0x42c3285c
  413e42:	js     0x413e52
  413e44:	fdiv   DWORD PTR ds:0xdd0ec032
  413e4a:	mov    bh,0x92
  413e4c:	adc    cl,BYTE PTR [esi]
  413e4e:	xchg   ebp,eax
  413e4f:	mov    dh,0xa3
  413e51:	jo     0x413e2b
  413e53:	xor    al,0x22
  413e55:	addr16 xchg ebp,eax
  413e57:	push   0xcd857864
  413e5c:	jb     0x413deb
  413e5e:	cdq    
  413e5f:	xchg   DWORD PTR [ecx-0x5642dd39],ecx
  413e65:	sbb    al,0x9f
  413e67:	ficomp DWORD PTR [edx+0x42bbeaef]
  413e6d:	push   ss
  413e6e:	jmp    0xadf69646
  413e73:	adc    ah,BYTE PTR [esi]
  413e75:	push   edx
  413e76:	cmp    ebx,edx
  413e78:	xchg   ebx,eax
  413e79:	xchg   ecx,eax
  413e7a:	rol    DWORD PTR [eax+0x3e],1
  413e7d:	jb     0x413e03
  413e7f:	adc    al,0x10
  413e81:	mov    edx,DWORD PTR [ebx+0x66]
  413e84:	pop    edi
  413e85:	dec    edi
  413e86:	pop    esp
  413e87:	or     esp,ebx
  413e89:	pusha  
  413e8a:	xor    al,0xf4
  413e8c:	in     eax,0x98
  413e8e:	mov    edi,0xcd98bde0
  413e93:	inc    edx
  413e94:	push   ds
  413e95:	sti    
  413e96:	aaa    
  413e97:	or     ecx,DWORD PTR [ebx-0x176cb581]
  413e9d:	pop    ecx
  413e9e:	mov    eax,ds:0xb62839d2
  413ea3:	mov    bh,al
  413ea5:	fadd   st(2),st
  413ea7:	iret   
  413ea8:	std    
  413ea9:	(bad)  [edi-0x2c1654c9]
  413eaf:	out    0xea,eax
  413eb1:	mov    ebx,0xab76ee35
  413eb6:	retf   0xa574
  413eb9:	cli    
  413eba:	stos   DWORD PTR es:[edi],eax
  413ebb:	dec    ebx
  413ebc:	mov    edi,0x47048421
  413ec1:	or     eax,0x4a0b19ac
  413ec6:	pushf  
  413ec7:	pusha  
  413ec8:	cli    
  413ec9:	call   0x1ef42707
  413ece:	mov    bh,0x6f
  413ed0:	inc    edx
  413ed1:	jb     0x413ed9
  413ed3:	mov    ah,0x7b
  413ed5:	js     0x413f42
  413ed7:	fidivr WORD PTR [edi-0x1e]
  413eda:	and    bl,BYTE PTR [ebx-0x75]
  413edd:	or     DWORD PTR [ecx-0x402c4f90],0x2c4f9b3
  413ee7:	call   0xec323102
  413eec:	mov    bh,0xa3
  413eee:	push   ebx
  413eef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ef1:	ins    BYTE PTR es:[edi],dx
  413ef2:	cmp    al,0xe9
  413ef4:	inc    ebp
  413ef5:	movhps xmm0,QWORD PTR [edx+0x7a30f7d3]
  413efc:	pop    ebx
  413efd:	sar    DWORD PTR [ebx-0x34b6dda9],1
  413f03:	aam    0x61
  413f05:	cmp    ebx,DWORD PTR [ebx+0x7e97845b]
  413f0b:	(bad)  
  413f0c:	push   esp
  413f0d:	jmp    0xd4aff15c
  413f12:	loope  0x413f21
  413f14:	dec    esi
  413f15:	lods   al,BYTE PTR ds:[esi]
  413f16:	inc    ebp
  413f17:	ffree  st(4)
  413f19:	dec    ebp
  413f1a:	or     ch,0xa5
  413f1d:	sub    DWORD PTR [ecx+edi*2-0x2c],ebp
  413f21:	pop    ecx
  413f22:	ins    BYTE PTR es:[edi],dx
  413f23:	add    BYTE PTR [esi],bl
  413f25:	into   
  413f26:	scas   al,BYTE PTR es:[edi]
  413f27:	es adc eax,0x4ef8a4ed
  413f2d:	daa    
  413f2e:	sub    cl,BYTE PTR [ecx-0x1e214668]
  413f34:	adc    ecx,DWORD PTR [eax-0x4]
  413f37:	call   0x79f7f746
  413f3c:	push   edi
  413f3d:	add    DWORD PTR ds:0x7de640a8,ebx
  413f43:	ja     0x413ecd
  413f45:	fistp  QWORD PTR [edx+0x3bdf68a0]
  413f4b:	xchg   ecx,eax
  413f4c:	and    dl,bh
  413f4e:	mov    cx,0x56ca
  413f52:	data16 rol BYTE PTR [ebp+0x30],cl
  413f56:	sbb    eax,0xc9f8e612
  413f5b:	pop    esp
  413f5c:	lods   al,BYTE PTR ds:[esi]
  413f5d:	jecxz  0x413f27
  413f5f:	or     ebp,edi
  413f61:	inc    eax
  413f62:	imul   edi,DWORD PTR [edi+0x75],0x4f
  413f66:	(bad)  
  413f67:	sbb    eax,DWORD PTR [ecx-0x74]
  413f6a:	outs   dx,BYTE PTR ds:[esi]
  413f6b:	mov    DWORD PTR [esi+edi*2],eax
  413f6e:	jp     0x413f68
  413f70:	mov    eax,0xb980e46
  413f75:	in     al,dx
  413f76:	sbb    DWORD PTR [ebx],esi
  413f78:	pop    ecx
  413f79:	and    dl,bl
  413f7b:	mov    eax,0x33e4e91
  413f80:	mov    dh,0x63
  413f82:	jno    0x413fbf
  413f84:	pop    es
  413f85:	adc    ch,dl
  413f87:	mov    ah,0x74
  413f89:	push   0x16799e75
  413f8e:	imul   ebx,DWORD PTR [esi+0x4306bcfc],0x80d707f5
  413f98:	inc    ebp
  413f99:	(bad)
  413f9c:	aas    
  413f9d:	test   al,0xba
  413f9f:	push   ds
  413fa0:	push   ebx
  413fa1:	pusha  
  413fa2:	dec    esi
  413fa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fa4:	mov    esi,0xb0e7c5fd
  413fa9:	jp     0x413fec
  413fab:	int3   
  413fac:	ins    BYTE PTR es:[edi],dx
  413fad:	or     ch,dl
  413faf:	xor    DWORD PTR [ebp+0x5d],edi
  413fb2:	jnp    0x413f39
  413fb4:	jne    0x414028
  413fb6:	out    dx,eax
  413fb7:	jecxz  0x413fb1
  413fb9:	jmp    0x413f5a
  413fbb:	mov    ebx,0x78d28b05
  413fc0:	sub    bl,dl
  413fc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fc3:	push   ss
  413fc4:	clc    
  413fc5:	inc    edx
  413fc6:	xchg   ebp,eax
  413fc7:	ficom  DWORD PTR [edi-0xc]
  413fca:	ins    DWORD PTR es:[edi],dx
  413fcb:	(bad)
  413fcf:	pop    edx
  413fd0:	add    dh,BYTE PTR [ecx+eax*2-0x16f20a5b]
  413fd7:	inc    ecx
  413fd8:	add    eax,0xd8b5c4a6
  413fdd:	dec    ebp
  413fde:	mov    cl,0xf1
  413fe0:	push   0x38
  413fe2:	iret   
  413fe3:	jl     0x414021
  413fe5:	jbe    0x413f7a
  413fe7:	mul    ebp
  413fe9:	mov    esi,0x59d6cae4
  413fee:	add    edi,DWORD PTR [esi]
  413ff0:	add    BYTE PTR [edi-0xa],bh
  413ff3:	xchg   ecx,eax
  413ff4:	sub    al,0xf8
  413ff6:	or     al,0x47
  413ff8:	xor    BYTE PTR [ecx+0x1cadc09f],ah
  413ffe:	jne    0x413fe2
  414000:	sbb    eax,0x4438e689
  414005:	xchg   DWORD PTR [edi-0x6b0e1f78],ecx
  41400b:	inc    esp
  41400c:	xor    BYTE PTR [esi],0x67
  41400f:	mov    ebx,cs
  414011:	push   eax
  414012:	lahf   
  414013:	mov    eax,ds:0x27357047
  414018:	das    
  414019:	pop    ss
  41401a:	pusha  
  41401b:	ret    0xc1d4
  41401e:	mov    ch,0x97
  414020:	push   esi
  414021:	or     BYTE PTR [ebp-0x5b],0x53
  414025:	pop    edi
  414026:	mov    dl,0x51
  414028:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414029:	adc    al,bl
  41402b:	in     eax,0x14
  41402d:	pop    eax
  41402e:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414030:	adc    BYTE PTR [ecx+edi*2+0xef90995],bh
  414037:	(bad)  
  414038:	mov    eax,0x7ff7153e
  41403d:	repz mov edx,0xc8f8334f
  414043:	scas   eax,DWORD PTR es:[edi]
  414044:	push   eax
  414045:	and    eax,0x508fdaaa
  41404a:	jecxz  0x41406d
  41404c:	jae    0x413fd8
  41404e:	adc    edi,eax
  414050:	add    eax,0xc501cb4f
  414055:	repnz xchg esp,eax
  414057:	adc    cl,BYTE PTR [eax-0x72]
  41405a:	mov    esi,0xcabc8e31
  41405f:	push   eax
  414060:	jmp    0xbed6:0x38e2168b
  414067:	cs xchg edx,eax
  414069:	sbb    dl,cl
  41406b:	mov    edi,0xfcabdf23
  414070:	push   edx
  414071:	push   ebx
  414072:	outs   dx,BYTE PTR ds:[esi]
  414073:	pusha  
  414074:	jb     0x4140ad
  414076:	xchg   DWORD PTR [eax],ebp
  414078:	inc    eax
  414079:	lds    edi,FWORD PTR [esi]
  41407b:	push   0x2d
  41407d:	into   
  41407e:	sti    
  41407f:	xor    eax,0xc7281f59
  414084:	aad    0x8a
  414086:	mov    dl,BYTE PTR [esi]
  414088:	mov    esp,DWORD PTR [edx-0x2]
  41408b:	cmp    DWORD PTR [ecx],ebp
  41408d:	push   es
  41408e:	xchg   edx,eax
  41408f:	bound  edi,QWORD PTR [edx]
  414091:	or     al,BYTE PTR [esi+0x6e4b10e3]
  414097:	call   0xb08c9b96
  41409c:	inc    ecx
  41409d:	stos   BYTE PTR es:[edi],al
  41409e:	fidivr WORD PTR [esp+0x4c7d32b4]
  4140a5:	shl    BYTE PTR [esi],0xac
  4140a8:	inc    esi
  4140a9:	fisub  WORD PTR [edi+0x502d1c9a]
  4140af:	retf   
  4140b0:	pop    ebp
  4140b1:	inc    esi
  4140b2:	or     ecx,DWORD PTR [eax]
  4140b4:	(bad)  
  4140b5:	sbb    al,BYTE PTR [ecx+0x261298fc]
  4140bb:	data16 data16 or ah,BYTE PTR [esi-0x60898747]
  4140c3:	int    0x15
  4140c5:	jl     0x4140d1
  4140c7:	jg     0x414064
  4140c9:	lahf   
  4140ca:	fs ret 
  4140cc:	shl    DWORD PTR [edi+0x5e],cl
  4140cf:	push   esi
  4140d0:	scas   al,BYTE PTR es:[edi]
  4140d1:	mov    ebx,0xd03930bf
  4140d6:	into   
  4140d7:	sub    esi,DWORD PTR [ebx]
  4140d9:	pop    ebx
  4140da:	out    dx,al
  4140db:	mov    bh,0x87
  4140dd:	jno    0x4140d1
  4140df:	sub    al,ah
  4140e1:	ds pop edi
  4140e3:	fwait
  4140e4:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4140e6:	test   esp,0xdbf0de38
  4140ec:	inc    edx
  4140ed:	mov    cl,0x52
  4140ef:	ss addr16 jmp 0x3ac8e38d
  4140f6:	iret   
  4140f7:	mov    bl,0x81
  4140f9:	sub    eax,0x24105974
  4140fe:	inc    esi
  4140ff:	push   edx
  414100:	jmp    0x5dc7c12d
  414105:	clc    
  414106:	repnz or edx,DWORD PTR [edx]
  414109:	imul   ebp,edi,0xb
  41410c:	push   ds
  41410d:	mov    edi,0x5ded6ce5
  414112:	adc    edi,DWORD PTR [ebp+0x4b]
  414115:	sbb    ebp,edx
  414117:	jnp    0x414168
  414119:	xchg   esp,eax
  41411a:	ins    DWORD PTR es:[edi],dx
  41411b:	in     eax,0x42
  41411d:	lds    ebx,FWORD PTR [edi+0xf]
  414120:	pushf  
  414121:	push   es
  414122:	ds iret 
  414124:	sub    al,BYTE PTR [eax+0x5b]
  414127:	mov    cl,0xd1
  414129:	fld    TBYTE PTR [edi+0x20d003e6]
  41412f:	pop    ss
  414130:	retf   
  414131:	mov    ds:0xfe6619a8,al
  414136:	add    BYTE PTR [edi],cl
  414138:	dec    ecx
  414139:	and    esp,DWORD PTR [esi+0x41]
  41413c:	clc    
  41413d:	and    BYTE PTR [edi+0x76],bh
  414140:	lock push edi
  414142:	lea    edi,[edi-0x2e9e691c]
  414148:	sbb    bh,BYTE PTR [ebp-0x2e]
  41414b:	sub    DWORD PTR [esi],ebp
  41414d:	pop    es
  41414e:	push   ebx
  41414f:	pop    si
  414151:	fwait
  414152:	aam    0x5c
  414154:	shr    DWORD PTR [eax+0x75],0xa0
  414158:	mov    ecx,DWORD PTR [ebp-0x18]
  41415b:	add    DWORD PTR ds:0x42a3b6,edx
  414161:	push   esi
  414162:	mov    eax,0x75108a8
  414167:	sbb    DWORD PTR ds:0x42a3fa,0x2976
  414171:	xor    ecx,eax
  414173:	and    esi,DWORD PTR ds:0x42a406
  414179:	mov    esi,0x3272ef
  41417e:	push   edi
  41417f:	sbb    DWORD PTR ds:0x42a412,0x4902
  414189:	add    ecx,esi
  41418b:	mov    DWORD PTR ds:0x42a3ee,0x5bf5
  414195:	jmp    0x4141b9
  41419a:	mov    DWORD PTR ds:0x42a432,0x67c9
  4141a4:	mov    dl,BYTE PTR [ebp-0x1]
  4141a7:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  4141ae:	mov    DWORD PTR ds:0x42a3fa,0x7173
  4141b8:	inc    ecx
  4141b9:	mov    DWORD PTR ds:0x42a3da,0x2657
  4141c3:	cmp    ecx,0x40
  4141c6:	jb     0x41419a
  4141cc:	mov    edx,DWORD PTR [ebp-0x18]
  4141cf:	sbb    DWORD PTR ds:0x42a41a,0x5717
  4141d9:	xor    edx,eax
  4141db:	add    edx,esi
  4141dd:	jmp    0x4142b9
  4141e2:	and    DWORD PTR ds:0x42a446,0x0
  4141ec:	mov    ecx,DWORD PTR ds:0x42a446
  4141f2:	inc    ecx
  4141f3:	mov    DWORD PTR ds:0x42a446,ecx
  4141f9:	cmp    DWORD PTR ds:0x42a446,0x18
  414200:	jb     0x414230
  414206:	jmp    0x414223
  41420b:	push   0x39f2
  414210:	push   0x1eb0
  414215:	push   0x8db9
  41421a:	push   DWORD PTR [ebp-0x1c]
  41421d:	call   DWORD PTR ds:0x42a50e
  414223:	cmp    DWORD PTR ds:0x42a446,0x11
  41422a:	jb     0x4141ec
  414230:	mov    edi,DWORD PTR [ebp+0x8]
  414233:	mov    ecx,0x8a96
  414238:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41423d:	and    DWORD PTR ds:0x42a42e,0x0
  414247:	mov    edi,DWORD PTR ds:0x42a42e
  41424d:	inc    edi
  41424e:	mov    DWORD PTR ds:0x42a42e,edi
  414254:	cmp    DWORD PTR ds:0x42a42e,0x21
  41425b:	jge    0x414280
  414261:	jmp    0x414273
  414266:	push   0x1
  414268:	push   0x1de7
  41426d:	call   DWORD PTR ds:0x42a512
  414273:	cmp    DWORD PTR ds:0x42a42e,0x18
  41427a:	jb     0x414247
  414280:	mov    edi,0x3b59
  414285:	add    cx,di
  414288:	movzx  ecx,cx
  41428b:	mov    DWORD PTR [ebp-0xc],ecx
  41428e:	adc    DWORD PTR ds:0x42a40e,edi
  414294:	mov    ecx,DWORD PTR [ebp+0x8]
  414297:	neg    DWORD PTR ds:0x42a3ca
  41429d:	movzx  ecx,WORD PTR [ecx+edx*4]
  4142a1:	xor    ecx,0x8a96
  4142a7:	add    ecx,edi
  4142a9:	mov    edi,0x7bd4
  4142ae:	mov    edi,DWORD PTR [ebp-0xc]
  4142b1:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  4142b8:	inc    edx
  4142b9:	mov    ecx,DWORD PTR [ebp-0x10]
  4142bc:	mov    DWORD PTR ds:0x42a44e,0x7160
  4142c6:	cmp    edx,ecx
  4142c8:	jne    0x4141e2
  4142ce:	add    edx,DWORD PTR ds:0x42a3c2
  4142d4:	mov    ecx,DWORD PTR [ebp-0x18]
  4142d7:	mov    edx,DWORD PTR [ebp+0x10]
  4142da:	add    DWORD PTR ds:0x42a3be,ecx
  4142e0:	xor    ecx,eax
  4142e2:	add    ecx,esi
  4142e4:	sub    edi,0x4ba6
  4142ea:	mov    DWORD PTR [edx],ecx
  4142ec:	and    DWORD PTR ds:0x42a3ba,0x0
  4142f6:	mov    edi,DWORD PTR ds:0x42a3ba
  4142fc:	inc    edi
  4142fd:	mov    DWORD PTR ds:0x42a3ba,edi
  414303:	cmp    DWORD PTR ds:0x42a3ba,0xa
  41430a:	jge    0x414354
  414310:	jmp    0x41432d
  414315:	push   0x5605
  41431a:	push   0x42a3ee
  41431f:	push   DWORD PTR [ebp-0x1c]
  414322:	push   0x6fb7
  414327:	call   DWORD PTR ds:0x42a546
  41432d:	cmp    DWORD PTR ds:0x42a3ba,0x9
  414334:	jne    0x414347
  41433a:	mov    edi,DWORD PTR ds:0x42a3ba
  414340:	inc    edi
  414341:	mov    DWORD PTR ds:0x42a3ba,edi
  414347:	cmp    DWORD PTR ds:0x42a3ba,0x14
  41434e:	jb     0x4142f6
  414354:	mov    ecx,DWORD PTR [ebp-0x18]
  414357:	adc    DWORD PTR ds:0x42a412,edx
  41435d:	xor    ecx,eax
  41435f:	and    DWORD PTR ds:0x42a416,0x0
  414369:	mov    edi,DWORD PTR ds:0x42a416
  41436f:	inc    edi
  414370:	mov    DWORD PTR ds:0x42a416,edi
  414376:	cmp    DWORD PTR ds:0x42a416,0x9
  41437d:	ja     0x4143c1
  414383:	jmp    0x414398
  414388:	push   0x6c58
  41438d:	push   0x42a3aa
  414392:	call   DWORD PTR ds:0x42a54a
  414398:	cmp    DWORD PTR ds:0x42a416,0x8
  41439f:	jne    0x4143b4
  4143a5:	xor    edi,edi
  4143a7:	add    edi,DWORD PTR ds:0x42a416
  4143ad:	inc    edi
  4143ae:	mov    DWORD PTR ds:0x42a416,edi
  4143b4:	cmp    DWORD PTR ds:0x42a416,0x14
  4143bb:	jb     0x414369
  4143c1:	add    ecx,esi
  4143c3:	mov    DWORD PTR [ebp-0xc],ecx
  4143c6:	and    DWORD PTR ds:0x42a44e,ebx
  4143cc:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  4143d3:	sbb    DWORD PTR ds:0x42a3f6,0x631a
  4143dd:	mov    DWORD PTR [ebp-0x14],0xf89c8589
  4143e4:	mov    DWORD PTR [ebp-0x10],0xf89c95b9
  4143eb:	mov    ecx,DWORD PTR [ebp-0x14]
  4143ee:	mov    DWORD PTR [ebp+0x8],ecx
  4143f1:	neg    ecx
  4143f3:	mov    ecx,DWORD PTR [ebp+0x8]
  4143f6:	movzx  edi,BYTE PTR ds:0x42a43a
  4143fd:	sub    DWORD PTR ds:0x42a43e,edi
  414403:	xor    ecx,eax
  414405:	add    ecx,esi
  414407:	mov    ecx,0x242ebcd
  41440c:	mov    edi,0x2eb0
  414411:	mov    edi,0xf641bcc
  414416:	je     0x416e1f
  41441c:	and    DWORD PTR ds:0x42a3ce,0x0
  414426:	mov    ebx,DWORD PTR ds:0x42a3ce
  41442c:	inc    ebx
  41442d:	mov    DWORD PTR ds:0x42a3ce,ebx
  414433:	cmp    DWORD PTR ds:0x42a3ce,0x4
  41443a:	jl     0x414475
  414440:	jmp    0x41444e
  414445:	push   DWORD PTR [ebp-0x14]
  414448:	call   DWORD PTR ds:0x42a516
  41444e:	cmp    DWORD PTR ds:0x42a3ce,0x3
  414455:	jne    0x414468
  41445b:	mov    ebx,DWORD PTR ds:0x42a3ce
  414461:	inc    ebx
  414462:	mov    DWORD PTR ds:0x42a3ce,ebx
  414468:	cmp    DWORD PTR ds:0x42a3ce,0x19
  41446f:	jb     0x414426
  414475:	mov    edx,DWORD PTR [ebp+0x8]
  414478:	mov    ebx,DWORD PTR [ebp-0x8]
  41447b:	adc    DWORD PTR ds:0x42a3da,0x42a416
  414485:	xor    edx,eax
  414487:	xor    ebx,eax
  414489:	xor    DWORD PTR ds:0x42a3aa,0x6c23
  414493:	sub    edx,ebx
  414495:	sbb    DWORD PTR ds:0x42a402,0x57b9
  41449f:	sub    edx,esi
  4144a1:	xor    edx,eax
  4144a3:	movzx  ebx,WORD PTR ds:0x42a406
  4144aa:	sbb    DWORD PTR ds:0x42a432,ebx
  4144b0:	mov    DWORD PTR [ebp+0x8],edx
  4144b3:	mov    edx,DWORD PTR [ebp+0x8]
  4144b6:	and    DWORD PTR ds:0x42a42e,0x0
  4144c0:	xor    ebx,ebx
  4144c2:	xor    ebx,DWORD PTR ds:0x42a42e
  4144c8:	inc    ebx
  4144c9:	mov    DWORD PTR ds:0x42a42e,ebx
  4144cf:	cmp    DWORD PTR ds:0x42a42e,0x7
  4144d6:	jl     0x414516
  4144dc:	jmp    0x4144ef
  4144e1:	push   DWORD PTR [ebp-0x20]
  4144e4:	push   0x42a3d6
  4144e9:	call   DWORD PTR ds:0x42a55a
  4144ef:	cmp    DWORD PTR ds:0x42a42e,0x6
  4144f6:	jne    0x414509
  4144fc:	mov    ebx,DWORD PTR ds:0x42a42e
  414502:	inc    ebx
  414503:	mov    DWORD PTR ds:0x42a42e,ebx
  414509:	cmp    DWORD PTR ds:0x42a42e,0x14
  414510:	jb     0x4144c0
  414516:	mov    ebx,DWORD PTR [ebp-0x58]
  414519:	adc    DWORD PTR ds:0x42a3e6,0x1f0e
  414523:	add    edx,0x5708fa
  414529:	sub    DWORD PTR ds:0x42a3fa,0x42a426
  414533:	imul   edx,ebx
  414536:	and    DWORD PTR ds:0x42a41a,0x0
  414540:	mov    ebx,DWORD PTR ds:0x42a41a
  414546:	inc    ebx
  414547:	mov    DWORD PTR ds:0x42a41a,ebx
  41454d:	cmp    DWORD PTR ds:0x42a41a,0x22
  414554:	jb     0x41457d
  41455a:	jmp    0x414570
  41455f:	push   DWORD PTR [ebp-0x1c]
  414562:	push   DWORD PTR [ebp-0x1c]
  414565:	push   0x5112
  41456a:	call   DWORD PTR ds:0x42a55e
  414570:	cmp    DWORD PTR ds:0x42a41a,0x19
  414577:	jb     0x414540
  41457d:	mov    DWORD PTR [ebp-0x58],edx
  414580:	sbb    DWORD PTR ds:0x42a3f6,0x5e0b
  41458a:	mov    edx,DWORD PTR [ebp+0x8]
  41458d:	mov    ebx,DWORD PTR [ebp-0x54]
  414590:	and    DWORD PTR ds:0x42a44a,0x42a3ae
  41459a:	add    edx,0x64f89c
  4145a0:	add    DWORD PTR ds:0x42a3fe,0x23c2
  4145aa:	or     edx,ebx
  4145ac:	mov    DWORD PTR [ebp-0x54],edx
  4145af:	sbb    edx,edx
  4145b1:	mov    edx,DWORD PTR [ebp+0x8]
  4145b4:	add    ebx,DWORD PTR ds:0x42a446
  4145ba:	mov    ebx,DWORD PTR [ebp-0x50]
  4145bd:	mov    DWORD PTR ds:0x42a41a,0x1d36
  4145c7:	add    edx,ecx
  4145c9:	xor    edx,ebx
  4145cb:	mov    DWORD PTR [ebp-0x50],edx
  4145ce:	and    DWORD PTR ds:0x42a43e,0x0
  4145d8:	jmp    0x4145ea
  4145dd:	mov    edx,DWORD PTR ds:0x42a43e
  4145e3:	inc    edx
  4145e4:	mov    DWORD PTR ds:0x42a43e,edx
  4145ea:	cmp    DWORD PTR ds:0x42a43e,0x1d
  4145f1:	jae    0x414624
  4145f7:	cmp    DWORD PTR ds:0x42a43e,0x2d
  4145fe:	jbe    0x414624
  414604:	jmp    0x41461f
  414609:	push   DWORD PTR [ebp-0x14]
  41460c:	push   DWORD PTR [ebp-0x20]
  41460f:	push   0x1476
  414614:	push   0x4291d1
  414619:	call   DWORD PTR ds:0x42a51a
  41461f:	jmp    0x4145dd
  414624:	mov    edx,DWORD PTR [ebp+0x8]
  414627:	mov    ebx,DWORD PTR [ebp-0x4c]
  41462a:	adc    DWORD PTR ds:0x42a3ea,0x42a3ae
  414634:	add    edx,edi
  414636:	adc    DWORD PTR ds:0x42a3e2,0x5ee0
  414640:	and    edx,ebx
  414642:	mov    DWORD PTR [ebp-0x4c],edx
  414645:	neg    edx
  414647:	mov    edx,DWORD PTR [ebp+0x8]
  41464a:	mov    ebx,DWORD PTR [ebp-0x48]
  41464d:	lea    edx,[ebx+edx*1+0x241fcdf]
  414654:	mov    DWORD PTR [ebp-0x48],edx
  414657:	mov    ebx,DWORD PTR ds:0x42a4ba
  41465d:	mov    ebx,DWORD PTR [ebx]
  41465f:	and    DWORD PTR ds:0x42a44a,ebx
  414665:	mov    edx,DWORD PTR [ebp+0x8]
  414668:	mov    ebx,0xfa5e1530
  41466d:	mov    DWORD PTR ds:0x42a446,0x6c5b
  414677:	sub    ebx,edx
  414679:	add    ebx,DWORD PTR [ebp-0x44]
  41467c:	mov    DWORD PTR [ebp-0x44],ebx
  41467f:	sub    DWORD PTR ds:0x42a3d6,0x1976
  414689:	mov    edx,DWORD PTR [ebp+0x8]
  41468c:	xor    edx,eax
  41468e:	add    edx,esi
  414690:	mov    DWORD PTR ds:0x42a42a,0x7528
  41469a:	jne    0x41441c
  4146a0:	mov    DWORD PTR ds:0x42a426,0x7cb7
  4146aa:	jmp    0x416e1f
  4146af:	mov    DWORD PTR ds:0x42a3ce,0x1e
  4146b9:	cmp    DWORD PTR ds:0x42a3ce,0x0
  4146c0:	je     0x414725
  4146c6:	cmp    DWORD PTR ds:0x42a3ce,0xf
  4146cd:	ja     0x414725
  4146d3:	jmp    0x4146f9
  4146d8:	push   0x42a3de
  4146dd:	push   0x2937
  4146e2:	push   DWORD PTR [ebp-0x1c]
  4146e5:	push   DWORD PTR [ebp-0x20]
  4146e8:	push   DWORD PTR [ebp-0x14]
  4146eb:	push   DWORD PTR [ebp-0x1c]
  4146ee:	push   0x7ba5
  4146f3:	call   DWORD PTR ds:0x42a51e
  4146f9:	cmp    DWORD PTR ds:0x42a3ce,0x10
  414700:	jne    0x414713
  414706:	mov    ebx,DWORD PTR ds:0x42a3ce
  41470c:	dec    ebx
  41470d:	mov    DWORD PTR ds:0x42a3ce,ebx
  414713:	mov    ebx,DWORD PTR ds:0x42a3ce
  414719:	dec    ebx
  41471a:	mov    DWORD PTR ds:0x42a3ce,ebx
  414720:	jmp    0x4146b9
  414725:	mov    edx,DWORD PTR [ebp-0xc]
  414728:	sub    edx,esi
  41472a:	adc    DWORD PTR ds:0x42a412,ebx
  414730:	xor    edx,eax
  414732:	and    DWORD PTR ds:0x42a3fe,0x0
  41473c:	mov    ebx,DWORD PTR ds:0x42a3fe
  414742:	inc    ebx
  414743:	mov    DWORD PTR ds:0x42a3fe,ebx
  414749:	cmp    DWORD PTR ds:0x42a3fe,0xc
  414750:	ja     0x414791
  414756:	jmp    0x41476a
  41475b:	push   DWORD PTR [ebp-0x18]
  41475e:	push   DWORD PTR [ebp-0x1c]
  414761:	push   DWORD PTR [ebp-0x1c]
  414764:	call   DWORD PTR ds:0x42a562
  41476a:	cmp    DWORD PTR ds:0x42a3fe,0xb
  414771:	jne    0x414784
  414777:	mov    ebx,DWORD PTR ds:0x42a3fe
  41477d:	inc    ebx
  41477e:	mov    DWORD PTR ds:0x42a3fe,ebx
  414784:	cmp    DWORD PTR ds:0x42a3fe,0x18
  41478b:	jb     0x41473c
  414791:	mov    DWORD PTR [ebp-0x5c],edx
  414794:	sbb    DWORD PTR ds:0x42a432,ebx
  41479a:	mov    edx,DWORD PTR [ebp-0x10]
  41479d:	sub    DWORD PTR ds:0x42a3f2,0x55b5
  4147a7:	mov    ebx,DWORD PTR [ebp-0x8]
  4147aa:	xor    edx,eax
  4147ac:	xor    ebx,eax
  4147ae:	or     DWORD PTR ds:0x42a43a,0x4c86
  4147b8:	sub    edx,ebx
  4147ba:	sub    edx,esi
  4147bc:	and    DWORD PTR ds:0x42a42a,0x23d1
  4147c6:	xor    edx,eax
  4147c8:	mov    DWORD PTR [ebp-0x10],edx
  4147cb:	mov    edx,0x4ef4
  4147d0:	mov    edx,DWORD PTR [ebp-0x14]
  4147d3:	mov    DWORD PTR [ebp+0x8],edx
  4147d6:	jmp    0x41487b
  4147db:	and    DWORD PTR ds:0x42a3aa,ebx
  4147e1:	mov    edx,DWORD PTR [ebp+0x8]
  4147e4:	mov    ebx,DWORD PTR [ebp-0x8]
  4147e7:	sub    DWORD PTR ds:0x42a3ae,0x69af
  4147f1:	xor    edx,eax
  4147f3:	adc    DWORD PTR ds:0x42a436,0x774b
  4147fd:	xor    ebx,eax
  4147ff:	add    DWORD PTR ds:0x42a40e,0x42a3aa
  414809:	sub    edx,ebx
  41480b:	not    DWORD PTR ds:0x42a3b6
  414811:	sub    edx,esi
  414813:	xor    edx,eax
  414815:	mov    DWORD PTR [ebp+0x8],edx
  414818:	sbb    DWORD PTR ds:0x42a422,edi
  41481e:	mov    edx,DWORD PTR [ebp+0x8]
  414821:	mov    ebx,DWORD PTR [ebp-0x58]
  414824:	add    edx,0x5708fa
  41482a:	imul   edx,ebx
  41482d:	mov    DWORD PTR [ebp-0x58],edx
  414830:	mov    edx,DWORD PTR [ebp+0x8]
  414833:	mov    ebx,DWORD PTR [ebp-0x54]
  414836:	add    edx,0x64f89c
  41483c:	or     edx,ebx
  41483e:	mov    DWORD PTR [ebp-0x54],edx
  414841:	mov    edx,DWORD PTR [ebp+0x8]
  414844:	mov    ebx,DWORD PTR [ebp-0x50]
  414847:	add    edx,ecx
  414849:	xor    edx,ebx
  41484b:	mov    DWORD PTR [ebp-0x50],edx
  41484e:	mov    edx,DWORD PTR [ebp+0x8]
  414851:	mov    ebx,DWORD PTR [ebp-0x4c]
  414854:	add    edx,edi
  414856:	and    edx,ebx
  414858:	mov    DWORD PTR [ebp-0x4c],edx
  41485b:	mov    edx,DWORD PTR [ebp+0x8]
  41485e:	mov    ebx,DWORD PTR [ebp-0x48]
  414861:	lea    edx,[ebx+edx*1+0x241fcdf]
  414868:	mov    DWORD PTR [ebp-0x48],edx
  41486b:	mov    edx,DWORD PTR [ebp+0x8]
  41486e:	mov    ebx,0xfa5e1530
  414873:	sub    ebx,edx
  414875:	add    ebx,DWORD PTR [ebp-0x44]
  414878:	mov    DWORD PTR [ebp-0x44],ebx
  41487b:	mov    edx,DWORD PTR [ebp+0x8]
  41487e:	xor    edx,eax
  414880:	add    edx,esi
  414882:	jne    0x4147db
  414888:	mov    edx,DWORD PTR [ebp-0xc]
  41488b:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  414892:	mov    bl,BYTE PTR [ebp-0x1]
  414895:	cmp    dl,bl
  414897:	je     0x414975
  41489d:	mov    ecx,DWORD PTR [ebp-0x5c]
  4148a0:	mov    edx,DWORD PTR [ebp-0xc]
  4148a3:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4148aa:	mov    ebx,DWORD PTR [ebp+0xc]
  4148ad:	xor    ecx,eax
  4148af:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272ef]
  4148b6:	jne    0x416e31
  4148bc:	mov    ecx,DWORD PTR [ebp-0x5c]
  4148bf:	mov    edx,DWORD PTR [ebp+0xc]
  4148c2:	xor    ecx,eax
  4148c4:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272ef]
  4148cc:	mov    edx,DWORD PTR [ebp-0x18]
  4148cf:	xor    edx,eax
  4148d1:	add    edx,esi
  4148d3:	cmp    ecx,edx
  4148d5:	mov    ecx,DWORD PTR [ebp-0x14]
  4148d8:	mov    DWORD PTR [ebp+0x8],ecx
  4148db:	mov    ecx,DWORD PTR [ebp+0x8]
  4148de:	je     0x4192c1
  4148e4:	xor    ecx,eax
  4148e6:	add    ecx,esi
  4148e8:	mov    ecx,0x242ebcd
  4148ed:	je     0x4149fd
  4148f3:	mov    edx,DWORD PTR [ebp+0x8]
  4148f6:	mov    ebx,DWORD PTR [ebp-0x8]
  4148f9:	xor    edx,eax
  4148fb:	xor    ebx,eax
  4148fd:	sub    edx,ebx
  4148ff:	sub    edx,esi
  414901:	xor    edx,eax
  414903:	mov    DWORD PTR [ebp+0x8],edx
  414906:	mov    edx,DWORD PTR [ebp+0x8]
  414909:	mov    ebx,DWORD PTR [ebp-0x58]
  41490c:	add    edx,0x5708fa
  414912:	imul   edx,ebx
  414915:	mov    DWORD PTR [ebp-0x58],edx
  414918:	mov    edx,DWORD PTR [ebp+0x8]
  41491b:	mov    ebx,DWORD PTR [ebp-0x54]
  41491e:	add    edx,0x64f89c
  414924:	or     edx,ebx
  414926:	mov    DWORD PTR [ebp-0x54],edx
  414929:	mov    edx,DWORD PTR [ebp+0x8]
  41492c:	mov    ebx,DWORD PTR [ebp-0x50]
  41492f:	add    edx,ecx
  414931:	xor    edx,ebx
  414933:	mov    DWORD PTR [ebp-0x50],edx
  414936:	mov    edx,DWORD PTR [ebp+0x8]
  414939:	mov    ebx,DWORD PTR [ebp-0x4c]
  41493c:	add    edx,edi
  41493e:	and    edx,ebx
  414940:	mov    DWORD PTR [ebp-0x4c],edx
  414943:	mov    edx,DWORD PTR [ebp+0x8]
  414946:	mov    ebx,DWORD PTR [ebp-0x48]
  414949:	lea    edx,[ebx+edx*1+0x241fcdf]
  414950:	mov    DWORD PTR [ebp-0x48],edx
  414953:	mov    edx,DWORD PTR [ebp+0x8]
  414956:	mov    ebx,0xfa5e1530
  41495b:	sub    ebx,edx
  41495d:	add    ebx,DWORD PTR [ebp-0x44]
  414960:	mov    DWORD PTR [ebp-0x44],ebx
  414963:	mov    edx,DWORD PTR [ebp+0x8]
  414966:	xor    edx,eax
  414968:	add    edx,esi
  41496a:	jne    0x4148f3
  414970:	jmp    0x4149fd
  414975:	mov    edx,DWORD PTR [ebp-0x14]
  414978:	mov    DWORD PTR [ebp+0x8],edx
  41497b:	jmp    0x4149f0
  414980:	mov    edx,DWORD PTR [ebp+0x8]
  414983:	mov    ebx,DWORD PTR [ebp-0x8]
  414986:	xor    edx,eax
  414988:	xor    ebx,eax
  41498a:	sub    edx,ebx
  41498c:	sub    edx,esi
  41498e:	xor    edx,eax
  414990:	mov    DWORD PTR [ebp+0x8],edx
  414993:	mov    edx,DWORD PTR [ebp+0x8]
  414996:	mov    ebx,DWORD PTR [ebp-0x58]
  414999:	add    edx,0x5708fa
  41499f:	imul   edx,ebx
  4149a2:	mov    DWORD PTR [ebp-0x58],edx
  4149a5:	mov    edx,DWORD PTR [ebp+0x8]
  4149a8:	mov    ebx,DWORD PTR [ebp-0x54]
  4149ab:	add    edx,0x64f89c
  4149b1:	or     edx,ebx
  4149b3:	mov    DWORD PTR [ebp-0x54],edx
  4149b6:	mov    edx,DWORD PTR [ebp+0x8]
  4149b9:	mov    ebx,DWORD PTR [ebp-0x50]
  4149bc:	add    edx,ecx
  4149be:	xor    edx,ebx
  4149c0:	mov    DWORD PTR [ebp-0x50],edx
  4149c3:	mov    edx,DWORD PTR [ebp+0x8]
  4149c6:	mov    ebx,DWORD PTR [ebp-0x4c]
  4149c9:	add    edx,edi
  4149cb:	and    edx,ebx
  4149cd:	mov    DWORD PTR [ebp-0x4c],edx
  4149d0:	mov    edx,DWORD PTR [ebp+0x8]
  4149d3:	mov    ebx,DWORD PTR [ebp-0x48]
  4149d6:	lea    edx,[ebx+edx*1+0x241fcdf]
  4149dd:	mov    DWORD PTR [ebp-0x48],edx
  4149e0:	mov    edx,DWORD PTR [ebp+0x8]
  4149e3:	mov    ebx,0xfa5e1530
  4149e8:	sub    ebx,edx
  4149ea:	add    ebx,DWORD PTR [ebp-0x44]
  4149ed:	mov    DWORD PTR [ebp-0x44],ebx
  4149f0:	mov    edx,DWORD PTR [ebp+0x8]
  4149f3:	xor    edx,eax
  4149f5:	add    edx,esi
  4149f7:	jne    0x414980
  4149fd:	mov    edx,DWORD PTR [ebp-0x14]
  414a00:	mov    DWORD PTR [ebp+0x8],edx
  414a03:	jmp    0x416e00
  414a08:	jmp    0x416d90
  414a0d:	push   eax
  414a0e:	and    BYTE PTR [edi+0x7d18fda],cl
  414a14:	mov    al,ds:0x672ec4b9
  414a19:	fnsave [ebx+edi*8+0x29]
  414a1d:	inc    edx
  414a1e:	data16 jns 0x414a9b
  414a21:	pop    ss
  414a22:	pop    edi
  414a23:	jp     0x414a9f
  414a25:	push   cs
  414a26:	popa   
  414a27:	mov    esi,0x966a74b3
  414a2c:	xor    BYTE PTR [esi-0x59],dl
  414a2f:	stos   DWORD PTR es:[edi],eax
  414a30:	and    DWORD PTR [ebp-0x6c],edx
  414a33:	ret    
  414a34:	mov    ebp,0x658bffc4
  414a39:	cmp    ecx,ebp
  414a3b:	jmp    0x414a22
  414a3d:	sbb    ah,BYTE PTR [ebx+0x46856a9d]
  414a43:	xchg   ebx,eax
  414a44:	mov    dh,0x9
  414a46:	push   0xffffffad
  414a48:	and    al,0xf0
  414a4a:	loope  0x4149ed
  414a4c:	sar    BYTE PTR [ebp+0x32762637],0x2a
  414a53:	cmp    BYTE PTR [edi],al
  414a55:	inc    ebx
  414a56:	imul   eax,ebp,0x115077a8
  414a5c:	adc    eax,0x51fe4d54
  414a61:	pop    eax
  414a62:	mov    dh,0x9a
  414a64:	out    dx,al
  414a65:	and    DWORD PTR ds:0xfa6f0598,edx
  414a6b:	rcl    BYTE PTR [edx+0x5e9b4d8c],0xe4
  414a72:	xchg   ebp,eax
  414a73:	outs   dx,BYTE PTR ds:[esi]
  414a74:	imul   esp,esi,0x78
  414a77:	bound  ecx,QWORD PTR [edx-0x499beec4]
  414a7d:	fcmovnb st,st(7)
  414a7f:	fimul  WORD PTR [edi-0x77]
  414a82:	sbb    DWORD PTR [ebp+0x1d828bd4],ecx
  414a88:	or     BYTE PTR [edi-0x25],0xa8
  414a8c:	pop    eax
  414a8d:	mov    bl,ah
  414a8f:	aad    0xfb
  414a91:	adc    eax,0xa1270a67
  414a96:	jmp    0x414a79
  414a98:	jns    0x414aff
  414a9a:	stos   DWORD PTR es:[edi],eax
  414a9b:	xchg   esi,eax
  414a9c:	sub    al,0x61
  414a9e:	and    BYTE PTR [ecx-0x3c],dl
  414aa1:	and    eax,0xb5e81809
  414aa6:	dec    eax
  414aa7:	cmp    al,0x38
  414aa9:	loope  0x414a34
  414aab:	xchg   ebp,eax
  414aac:	push   ds
  414aad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414aae:	(bad)  
  414aaf:	mov    ah,0x37
  414ab1:	fidiv  DWORD PTR [ebp+0x36066528]
  414ab7:	test   al,0xca
  414ab9:	sbb    cl,bh
  414abb:	loop   0x414a84
  414abd:	mov    al,ds:0x68479cd7
  414ac2:	(bad)  
  414ac3:	xor    eax,0x8f1f4d7c
  414ac8:	inc    ebp
  414ac9:	jmp    0xf2b2051b
  414ace:	xchg   esp,eax
  414acf:	mov    bh,0x9f
  414ad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ad2:	inc    edi
  414ad3:	jmp    0x341f:0x5a5f090a
  414ada:	pop    edx
  414adb:	pop    esp
  414adc:	or     eax,0xe123507f
  414ae1:	cmp    edx,eax
  414ae3:	mov    eax,0xbece9880
  414ae8:	cdq    
  414ae9:	into   
  414aea:	cmp    eax,0xb9b20168
  414aef:	test   eax,0x193149e9
  414af4:	xchg   ebp,eax
  414af5:	stos   BYTE PTR es:[edi],al
  414af6:	aas    
  414af7:	cmp    bh,dh
  414af9:	push   eax
  414afa:	ds dec ebx
  414afc:	inc    esp
  414afd:	and    al,0x34
  414aff:	cmc    
  414b00:	lods   eax,DWORD PTR ds:[esi]
  414b01:	xlat   BYTE PTR ds:[ebx]
  414b02:	inc    ebx
  414b03:	stc    
  414b04:	cmp    al,0xe4
  414b06:	int    0x20
  414b08:	pop    esp
  414b09:	fstp   DWORD PTR [edx+0x2d7a880f]
  414b0f:	sbb    dh,bh
  414b11:	push   ebp
  414b12:	pushf  
  414b13:	retf   
  414b14:	in     al,dx
  414b15:	pop    ebp
  414b16:	icebp  
  414b17:	sub    ebx,ebp
  414b19:	add    ch,dl
  414b1b:	sbb    dh,dh
  414b1d:	int    0xb2
  414b1f:	pop    ss
  414b20:	call   0xaaa:0xe8f6fd95
  414b27:	inc    ecx
  414b28:	iret   
  414b29:	xchg   ebx,eax
  414b2a:	and    bl,al
  414b2c:	jne    0x414ac6
  414b2e:	mov    ebp,0xf6302129
  414b33:	out    0xa7,eax
  414b35:	xor    DWORD PTR [esi+0x79577f7f],esi
  414b3b:	rol    DWORD PTR [edi-0x180130e8],cl
  414b41:	arpl   WORD PTR [ebp+0x55],di
  414b44:	(bad)  
  414b46:	loope  0x414aeb
  414b48:	push   es
  414b49:	mov    bl,0x2e
  414b4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b4c:	inc    ebx
  414b4d:	adc    ebp,eax
  414b4f:	push   eax
  414b50:	dec    ebp
  414b51:	or     ch,BYTE PTR [ecx-0x5d]
  414b54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b55:	jmp    0x414b05
  414b57:	fwait
  414b58:	jbe    0x414b26
  414b5a:	lds    edi,FWORD PTR [eax+0x70b9ee2f]
  414b60:	cmp    al,0x60
  414b62:	mov    edi,0x5ef308fa
  414b67:	mov    al,0xcc
  414b69:	test   eax,0x25549dae
  414b6e:	retf   
  414b6f:	or     BYTE PTR [esi+0x57],0x57
  414b73:	arpl   WORD PTR [edx],si
  414b75:	mov    al,ds:0x9f875885
  414b7a:	pop    edx
  414b7b:	pop    edx
  414b7c:	mov    DWORD PTR [ecx-0x73205898],ecx
  414b82:	je     0x414be8
  414b84:	stos   DWORD PTR es:[edi],eax
  414b85:	ja     0x414bcc
  414b87:	test   eax,0xdc688ef3
  414b8c:	inc    edi
  414b8d:	ret    0xcf67
  414b90:	int    0x1f
  414b92:	jp     0x414b92
  414b94:	call   0x3fd1e2a4
  414b99:	bnd jb 0x414bf6
  414b9c:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b9e:	outs   dx,BYTE PTR ds:[esi]
  414b9f:	mov    dh,0x27
  414ba1:	mov    WORD PTR [eax+eiz*4+0x4cbc63a8],fs
  414ba8:	and    ecx,DWORD PTR [edi+0x41]
  414bab:	mov    dl,0xde
  414bad:	sbb    dl,BYTE PTR [esi+0x407a916f]
  414bb3:	ret    0x63bf
  414bb6:	inc    edx
  414bb7:	inc    esi
  414bb8:	dec    esp
  414bb9:	(bad)  
  414bba:	stos   BYTE PTR es:[edi],al
  414bbb:	cwde   
  414bbc:	inc    ebx
  414bbd:	xor    DWORD PTR [edx-0x58fcbc6a],ecx
  414bc3:	and    ecx,esi
  414bc5:	xor    edi,DWORD PTR [esi+0x43]
  414bc8:	jnp    0x414b90
  414bca:	ret    
  414bcb:	std    
  414bcc:	push   0x1e
  414bce:	cmc    
  414bcf:	xchg   edx,eax
  414bd0:	mov    dl,0x59
  414bd2:	pop    ecx
  414bd3:	lahf   
  414bd4:	ins    BYTE PTR es:[edi],dx
  414bd5:	mov    ds:0xe176d44d,eax
  414bda:	adc    esi,ecx
  414bdc:	int    0x6b
  414bde:	shl    BYTE PTR [edx-0x3c],1
  414be1:	inc    esi
  414be2:	sub    bl,dh
  414be4:	mov    eax,ds:0x297415b6
  414be9:	pusha  
  414bea:	jmp    0xe974:0xa28dddae
  414bf1:	test   BYTE PTR [ebx+0xfce9db9],bh
  414bf7:	cmp    BYTE PTR [ecx],0xaf
  414bfa:	mov    eax,0x8366af2e
  414bff:	lahf   
  414c00:	cs cmp eax,0x7b5b57b1
  414c06:	cmp    BYTE PTR [ebx],bh
  414c08:	adc    DWORD PTR [ebx],edx
  414c0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c0b:	mov    cl,0x29
  414c0d:	cmp    DWORD PTR [esi],0xffffffd2
  414c10:	add    eax,ebp
  414c12:	jecxz  0x414c56
  414c14:	jns    0x414bf2
  414c16:	ja     0x414bf8
  414c18:	lods   eax,DWORD PTR ds:[esi]
  414c19:	adc    DWORD PTR [esi],esp
  414c1b:	push   edx
  414c1c:	inc    esi
  414c1d:	mov    esi,0x7562dac6
  414c22:	repnz dec ecx
  414c24:	fiadd  DWORD PTR [ebx+0x222ecad1]
  414c2a:	inc    ebx
  414c2b:	xor    ch,BYTE PTR [eax+0x48a64794]
  414c31:	outs   dx,BYTE PTR ds:[esi]
  414c32:	xor    al,0xed
  414c34:	inc    eax
  414c35:	push   eax
  414c36:	ja     0x414c91
  414c38:	repnz push ss
  414c3a:	and    al,BYTE PTR [edx-0x2e]
  414c3d:	mov    al,0x66
  414c3f:	call   FWORD PTR ds:0x45997d6
  414c45:	(bad)  
  414c46:	push   edi
  414c47:	and    dh,BYTE PTR [edi-0x57]
  414c4a:	mov    dh,0x39
  414c4c:	leave  
  414c4d:	in     al,dx
  414c4e:	add    al,0xf5
  414c50:	xchg   edx,eax
  414c51:	sbb    BYTE PTR [eax+0x34b10327],dh
  414c57:	mov    esi,0xee05f8d1
  414c5c:	and    dl,ch
  414c5e:	aas    
  414c5f:	mov    BYTE PTR [ebx+0xb],dl
  414c62:	sub    eax,0xae9a1f0a
  414c67:	cmp    BYTE PTR [eax+0x7],bl
  414c6a:	cwde   
  414c6b:	and    eax,0xd4f51baa
  414c70:	dec    edi
  414c71:	imul   eax,DWORD PTR [eax],0x8b8bfa78
  414c77:	into   
  414c78:	por    mm3,QWORD PTR [eax-0xe3efd2]
  414c7f:	add    dl,bl
  414c81:	iret   
  414c82:	mov    ch,0x24
  414c84:	push   ebp
  414c85:	lods   al,BYTE PTR ds:[esi]
  414c86:	mov    ch,0x80
  414c88:	xchg   edi,eax
  414c89:	icebp  
  414c8a:	jecxz  0x414cb5
  414c8c:	xor    DWORD PTR [eax],ecx
  414c8e:	pop    eax
  414c8f:	dec    esi
  414c90:	or     al,0x13
  414c92:	inc    edi
  414c93:	lods   eax,DWORD PTR ds:[esi]
  414c94:	retf   
  414c95:	in     al,0x54
  414c97:	mov    eax,ds:0x11a6241b
  414c9c:	sub    DWORD PTR [eax-0x32],eax
  414c9f:	lea    ebx,[ebp-0x57cc05e]
  414ca5:	(bad)  
  414ca6:	popa   
  414ca7:	xchg   esp,eax
  414ca8:	iret   
  414ca9:	and    eax,0xefaa81b1
  414cae:	fstp   TBYTE PTR [ecx]
  414cb0:	aas    
  414cb1:	mov    eax,ds:0x6325611c
  414cb6:	or     al,0xea
  414cb8:	rol    BYTE PTR [esi+ecx*4+0x69],0xd3
  414cbd:	pop    ss
  414cbe:	jno    0x414cdc
  414cc0:	xor    DWORD PTR [edx-0x4839f89],edx
  414cc6:	xor    bl,al
  414cc8:	dec    esp
  414cc9:	mov    BYTE PTR [ebx-0x67],bl
  414ccc:	or     ah,ch
  414cce:	jae    0x414c62
  414cd0:	mov    edx,0xab4fc5bc
  414cd5:	mov    al,ds:0x61b66f8a
  414cda:	scas   al,BYTE PTR es:[edi]
  414cdb:	data16 jmp 0x414c7e
  414cde:	bound  edx,QWORD PTR [esi-0x705f036b]
  414ce4:	scas   eax,DWORD PTR es:[edi]
  414ce5:	dec    eax
  414ce6:	mov    edi,0x766fa079
  414ceb:	and    BYTE PTR [edx-0x4],bl
  414cee:	test   eax,0x88ca70f6
  414cf3:	push   ds
  414cf4:	adc    WORD PTR [eax-0x16737462],0x7a
  414cfc:	and    al,0xef
  414cfe:	jl     0x414d28
  414d00:	inc    ebp
  414d01:	rcl    BYTE PTR [ebp-0x7861549c],0xb4
  414d08:	xor    eax,0xdf0f7a8f
  414d0d:	or     al,0x65
  414d0f:	mov    al,ds:0x8d052ebe
  414d14:	cmp    eax,DWORD PTR [ecx+ebx*1+0x1e]
  414d18:	jle    0x414d6f
  414d1a:	lea    esi,[ecx+0x6553e10f]
  414d20:	fidiv  WORD PTR [edx+0x6a4c2fac]
  414d26:	dec    ebp
  414d27:	mov    es,WORD PTR [esi+0x2d]
  414d2a:	jns    0x414ce2
  414d2c:	xchg   esp,eax
  414d2d:	mov    al,0x59
  414d2f:	push   cs
  414d30:	popf   
  414d31:	cmp    al,0x4e
  414d33:	push   esp
  414d34:	cmp    eax,0xebb7ea63
  414d39:	xchg   edx,eax
  414d3a:	(bad)  
  414d3b:	cmp    DWORD PTR [esp+ecx*4],eax
  414d3e:	pop    ss
  414d3f:	fcomp  DWORD PTR [esi]
  414d41:	pusha  
  414d42:	inc    ebp
  414d43:	mov    ds:0x149a0c47,eax
  414d48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d49:	(bad)  
  414d4a:	shr    BYTE PTR [ebx+esi*2],1
  414d4d:	nop
  414d4e:	and    bl,dl
  414d50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d51:	fmul   QWORD PTR [ebx+ebp*4+0x12]
  414d55:	bound  esp,QWORD PTR [ecx+0x2b]
  414d58:	in     al,dx
  414d59:	data16 adc bh,bh
  414d5c:	in     al,0x12
  414d5e:	fidiv  WORD PTR [ebp+ecx*8+0x1b16ad63]
  414d65:	pop    ss
  414d66:	imul   eax
  414d68:	jae    0x414d2b
  414d6a:	mov    ebx,0x138b5afe
  414d6f:	cli    
  414d70:	cmp    DWORD PTR [esi-0x60bec77a],edi
  414d76:	or     ah,BYTE PTR es:[edx]
  414d79:	ret    0x59cc
  414d7c:	jnp    0x414d7a
  414d7e:	imul   ebp
  414d80:	jne    0x414da6
  414d82:	xchg   ebp,eax
  414d83:	xchg   ebp,eax
  414d84:	outs   dx,DWORD PTR ds:[esi]
  414d85:	outs   dx,DWORD PTR ds:[esi]
  414d86:	xchg   BYTE PTR [ebp+0x78],cl
  414d89:	adc    BYTE PTR [ebp-0x30c6174e],bl
  414d8f:	sbb    ebx,DWORD PTR [edi-0x834ca5]
  414d95:	das    
  414d96:	pop    ds
  414d97:	gs jmp 0x6a27b486
  414d9d:	xchg   esp,esi
  414d9f:	inc    edi
  414da0:	push   ss
  414da1:	mov    ebx,DWORD PTR [eax+edi*2+0x4f914fa1]
  414da8:	cmp    bl,BYTE PTR [edx]
  414daa:	sahf   
  414dab:	mov    ebx,DWORD PTR [edx+0x5e8da596]
  414db1:	mov    DWORD PTR [edx],0xf6547aff
  414db7:	ret    
  414db8:	sbb    al,0xc0
  414dba:	xchg   ebp,eax
  414dbb:	add    BYTE PTR [esi-0x170bc960],dh
  414dc1:	mov    ch,BYTE PTR [eax]
  414dc3:	dec    edx
  414dc4:	xor    ebx,DWORD PTR [ecx+0x38]
  414dc7:	in     eax,0x84
  414dc9:	inc    edi
  414dca:	jne    0x414e4b
  414dcc:	jbe    0x414e12
  414dce:	aad    0xce
  414dd0:	jmp    0x900e:0x1727f877
  414dd7:	adc    esp,DWORD PTR [ecx+0x3aedd227]
  414ddd:	push   edx
  414dde:	shl    DWORD PTR [eax+ecx*2-0x1f51ae85],0x1d
  414de6:	retf   0xbae3
  414de9:	dec    edx
  414dea:	fstp   QWORD PTR [ebx-0x1f]
  414ded:	inc    esp
  414dee:	ficomp DWORD PTR [ebx+0x7d65caf5]
  414df4:	es inc ebp
  414df6:	push   0xda91bf11
  414dfb:	rcr    BYTE PTR [edx],cl
  414dfd:	sar    DWORD PTR [ebp-0x5a3ba124],cl
  414e03:	into   
  414e04:	and    edi,DWORD PTR [ebp+0x54]
  414e07:	daa    
  414e08:	jecxz  0x414dcc
  414e0a:	sar    BYTE PTR [ebx+0x47d5ffd6],0xe2
  414e11:	(bad)  
  414e12:	push   ss
  414e13:	scas   eax,DWORD PTR es:[edi]
  414e14:	inc    esi
  414e15:	lods   al,BYTE PTR ds:[esi]
  414e16:	xchg   esp,eax
  414e17:	rcr    BYTE PTR [ecx-0x33],cl
  414e1a:	data16 (bad) 
  414e1c:	aad    0x5a
  414e1e:	mov    ebp,0x7d1a5a8e
  414e23:	mov    al,0x69
  414e25:	aam    0x94
  414e27:	cwde   
  414e28:	cmp    ebp,DWORD PTR [edx-0x3b66f940]
  414e2e:	cdq    
  414e2f:	mov    dh,0x8d
  414e31:	outs   dx,BYTE PTR ds:[esi]
  414e32:	sub    bh,BYTE PTR [esi-0x22b81d3d]
  414e38:	xor    eax,0xfd9650e4
  414e3d:	adc    ax,0x708b
  414e41:	add    ebp,DWORD PTR [ebx]
  414e43:	jbe    0x414e86
  414e45:	inc    esp
  414e46:	addr16 push cs
  414e48:	outs   dx,DWORD PTR ds:[esi]
  414e49:	cmp    DWORD PTR [ebx-0x6d],ebp
  414e4c:	ror    BYTE PTR ss:[eax],0xf4
  414e50:	cmp    ch,al
  414e52:	sub    al,0xc0
  414e54:	xchg   DWORD PTR [ebx-0x57a481b7],esp
  414e5a:	call   0x43ba540
  414e5f:	mov    bh,0x1
  414e61:	push   cs
  414e62:	sar    BYTE PTR [edx+esi*1-0x4ba7fc0],1
  414e69:	inc    eax
  414e6a:	(bad)  
  414e6c:	lahf   
  414e6d:	scas   eax,DWORD PTR es:[edi]
  414e6e:	push   0xb2870045
  414e73:	mov    edx,DWORD PTR [edx+0x4e6bfe1f]
  414e79:	sub    esp,DWORD PTR [eax+esi*2+0x2]
  414e7d:	sti    
  414e7e:	sbb    ah,BYTE PTR [ecx+ecx*8-0x1941782e]
  414e85:	mov    edx,0xe5825b18
  414e8a:	cmc    
  414e8b:	jecxz  0x414edb
  414e8d:	in     al,0xcd
  414e8f:	sbb    esp,esi
  414e91:	in     al,dx
  414e92:	loopne 0x414eb2
  414e94:	lods   al,BYTE PTR ds:[esi]
  414e95:	dec    ecx
  414e96:	add    BYTE PTR [ebx-0x50],0x43
  414e9a:	add    DWORD PTR [ebx],ecx
  414e9c:	or     eax,0x8f4c1511
  414ea1:	inc    edx
  414ea2:	les    edx,FWORD PTR [eax-0x3dd6b1f0]
  414ea8:	mov    ch,dh
  414eaa:	outs   dx,BYTE PTR ds:[esi]
  414eab:	imul   esp,DWORD PTR fs:[ecx+0x583e238e],0xd08b0ea6
  414eb6:	cmp    al,0x7b
  414eb8:	pop    DWORD PTR [edx+ebx*8]
  414ebb:	int3   
  414ebc:	pop    ebp
  414ebd:	mov    DWORD PTR [eax+0x4438a12a],ebp
  414ec3:	nop
  414ec4:	mov    ss,esp
  414ec6:	pop    ebx
  414ec7:	fs cmp cl,ch
  414eca:	xchg   edx,eax
  414ecb:	or     DWORD PTR [edx-0x4a],ecx
  414ece:	dec    edi
  414ecf:	sahf   
  414ed0:	data16 mov ds:0xce249976,al
  414ed6:	mov    eax,ds:0x82b692ac
  414edb:	or     eax,0xf7516c35
  414ee0:	xchg   ebp,eax
  414ee1:	dec    edi
  414ee2:	test   esp,esp
  414ee4:	xchg   ebx,eax
  414ee5:	cmp    eax,0x1577b59d
  414eea:	xor    eax,0x61bf6af4
  414eef:	outs   dx,BYTE PTR ds:[esi]
  414ef0:	call   0x709a1abf
  414ef5:	or     BYTE PTR [ecx+0x11ca02c9],0x89
  414efc:	jo     0x414f1e
  414efe:	pop    eax
  414eff:	(bad)  [eax-0x3b41ec73]
  414f05:	fcom   QWORD PTR [ebp-0x28]
  414f08:	dec    esi
  414f09:	mov    eax,0x8f93f9db
  414f0e:	nop
  414f0f:	push   0x26
  414f11:	and    cl,al
  414f13:	xlat   BYTE PTR ds:[ebx]
  414f14:	jle    0x414f19
  414f16:	enter  0x1289,0xb9
  414f1a:	repz and al,cl
  414f1d:	repnz and BYTE PTR [ebx],bh
  414f20:	cdq    
  414f21:	(bad)  
  414f22:	cwde   
  414f23:	rol    BYTE PTR [ecx],0xb5
  414f26:	mov    al,0x99
  414f28:	lods   al,BYTE PTR ds:[esi]
  414f29:	idiv   DWORD PTR [edi+ebp*2+0x7852bf75]
  414f30:	mov    ebp,ecx
  414f32:	call   0x2ed309e7
  414f37:	pop    ds
  414f38:	push   ebx
  414f39:	out    dx,al
  414f3a:	mov    WORD PTR [esi+eiz*4+0x77],?
  414f3e:	dec    edx
  414f3f:	(bad)  
  414f40:	repnz mov bl,0x6a
  414f43:	(bad)  
  414f44:	dec    eax
  414f45:	retf   
  414f46:	cmp    al,BYTE PTR [ecx]
  414f48:	mov    ecx,0x3320312
  414f4d:	and    BYTE PTR [edx+edx*1],al
  414f50:	(bad)  
  414f51:	and    dl,0x2d
  414f54:	push   ds
  414f55:	aad    0x8
  414f57:	jnp    0x414f89
  414f59:	aas    
  414f5a:	xor    BYTE PTR [ebx],0x3c
  414f5d:	jle    0x414fdd
  414f5f:	push   ebx
  414f60:	clc    
  414f61:	ret    0xf4f8
  414f64:	daa    
  414f65:	push   esp
  414f66:	push   es
  414f67:	sub    dh,bh
  414f69:	mov    ss,WORD PTR [edx+0x12]
  414f6c:	jle    0x414f33
  414f6e:	add    eax,0xb86086df
  414f73:	icebp  
  414f74:	shl    dh,1
  414f76:	sub    eax,0xbaaf149c
  414f7b:	mov    dl,0xa7
  414f7d:	mov    al,ds:0x814b3c39
  414f82:	or     BYTE PTR [esi],0xb2
  414f85:	pop    ss
  414f86:	leave  
  414f87:	cmp    al,bh
  414f89:	sub    BYTE PTR [bp+di-0x34],dh
  414f8d:	push   edx
  414f8e:	out    0x4e,al
  414f90:	sbb    bh,BYTE PTR [eax+edx*4+0x21]
  414f94:	inc    esp
  414f95:	dec    ecx
  414f96:	sub    DWORD PTR [eax+0x62],ebp
  414f99:	out    dx,eax
  414f9a:	test   al,0x43
  414f9c:	loope  0x414fc2
  414f9e:	inc    ebp
  414f9f:	dec    esp
  414fa0:	pop    esp
  414fa1:	jp     0x414f37
  414fa3:	ds ja  0x414f7a
  414fa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fa7:	fdiv   st,st(2)
  414fa9:	sbb    eax,0xf8feb37e
  414fae:	outs   dx,DWORD PTR ds:[esi]
  414faf:	jnp    0x415025
  414fb1:	push   ds
  414fb2:	xlat   BYTE PTR ds:[ebx]
  414fb3:	mov    DWORD PTR [ecx],edx
  414fb5:	shl    BYTE PTR [ebp+esi*4-0x42],1
  414fb9:	ss dec ecx
  414fbb:	xchg   DWORD PTR [esi+esi*2-0x55],edx
  414fbf:	(bad)  
  414fc0:	js     0x414fe8
  414fc2:	xor    cl,BYTE PTR [ebp+0x42]
  414fc5:	adc    al,0x56
  414fc7:	mov    al,0x4
  414fc9:	jo     0x415016
  414fcb:	sub    dl,BYTE PTR [ecx+eiz*1]
  414fce:	pop    esi
  414fcf:	xor    eax,0xfd42c94f
  414fd4:	fisub  DWORD PTR es:[eax+0x2f8ddf76]
  414fdb:	jmp    0x85b57483
  414fe0:	in     al,0xf7
  414fe2:	push   ss
  414fe3:	pop    edi
  414fe4:	out    0x75,eax
  414fe6:	repz icebp 
  414fe8:	push   esp
  414fe9:	mov    WORD PTR [edi+0x15261754],?
  414fef:	mov    esp,edx
  414ff1:	or     BYTE PTR [esi+0x27c2816c],cl
  414ff7:	sub    BYTE PTR [esi-0x63],bh
  414ffa:	(bad)  
  414ffb:	dec    esp
  414ffc:	test   DWORD PTR [ebp+esi*4+0x59a12cef],0x80793b81
  415007:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415008:	and    bh,BYTE PTR [ecx]
  41500a:	pop    esp
  41500b:	sbb    eax,0x77d44997
  415010:	outs   dx,DWORD PTR ds:[esi]
  415011:	xor    esp,DWORD PTR [eax]
  415013:	call   ebx
  415015:	fldcw  WORD PTR [edx-0x6eac63b0]
  41501b:	out    dx,al
  41501c:	push   ds
  41501d:	int3   
  41501e:	stos   DWORD PTR es:[edi],eax
  41501f:	test   al,0x8e
  415021:	rcl    DWORD PTR [ecx+0x6859ac4f],0xe3
  415028:	ins    BYTE PTR es:[edi],dx
  415029:	mov    bh,0xa5
  41502b:	ret    
  41502c:	and    eax,0x59f33456
  415031:	outs   dx,DWORD PTR ds:[esi]
  415032:	in     al,0x1a
  415034:	mov    al,fs:0xf3dbe106
  41503a:	or     edi,eax
  41503c:	std    
  41503d:	retf   0x80b9
  415040:	mov    ah,0x66
  415042:	lds    ebp,FWORD PTR [ebx-0x2b]
  415045:	sub    BYTE PTR [edx+0x26f065ca],bl
  41504b:	retf   
  41504c:	adc    edi,DWORD PTR cs:[esi-0x1a7371cb]
  415053:	push   es
  415054:	dec    esp
  415055:	scas   al,BYTE PTR es:[edi]
  415056:	mov    ebx,0xb82336d1
  41505b:	mov    es,WORD PTR [edi]
  41505d:	fbld   TBYTE PTR [edi-0x61]
  415060:	jmp    0xe1c918ac
  415065:	imul   bh
  415067:	mov    al,0xb6
  415069:	das    
  41506a:	aaa    
  41506b:	popf   
  41506c:	add    edx,ebp
  41506e:	shl    DWORD PTR [ecx+0x1c],1
  415071:	mov    ch,0x33
  415073:	popa   
  415074:	stos   BYTE PTR es:[edi],al
  415075:	(bad)  
  415076:	mov    ds:0xbe91f320,eax
  41507b:	fucom  st(4)
  41507d:	nop
  41507e:	push   edx
  41507f:	jmp    0x9b241a30
  415084:	aad    0xc9
  415086:	dec    ebx
  415087:	sahf   
  415088:	outs   dx,BYTE PTR ds:[esi]
  415089:	add    BYTE PTR [ecx+ecx*1+0x29994cfb],cl
  415090:	xchg   esp,eax
  415091:	jmp    0x7ca1b0f0
  415096:	aad    0x58
  415098:	dec    esp
  415099:	mov    edx,0xcdd9f757
  41509e:	mov    eax,0x91b2397c
  4150a3:	sub    bh,BYTE PTR [esp+ecx*1-0x1bcb3535]
  4150aa:	pop    eax
  4150ab:	cs cmp eax,0x88cb8f44
  4150b1:	push   esp
  4150b2:	xchg   DWORD PTR [ecx+ebx*1+0x73],esi
  4150b6:	or     eax,0xa2ceb4b6
  4150bb:	push   ds
  4150bc:	dec    eax
  4150bd:	xchg   BYTE PTR [ebp-0x12734f7b],bl
  4150c3:	enter  0x754b,0x96
  4150c7:	call   esp
  4150c9:	dec    ebx
  4150ca:	out    0xf8,eax
  4150cc:	scas   al,BYTE PTR es:[edi]
  4150cd:	leave  
  4150ce:	mov    ch,0x40
  4150d0:	push   0xffffffa0
  4150d2:	test   DWORD PTR [edi],ebp
  4150d4:	dec    eax
  4150d5:	retf   0x27d5
  4150d8:	adc    edx,DWORD PTR [esp+edi*4]
  4150db:	push   ebp
  4150dc:	pop    ebp
  4150dd:	dec    ecx
  4150de:	push   ss
  4150df:	or     al,bl
  4150e1:	jbe    0x41515d
  4150e3:	leave  
  4150e4:	mov    esp,ebp
  4150e6:	retf   0xcae6
  4150e9:	mov    ah,0x65
  4150eb:	popa   
  4150ec:	mov    WORD PTR [esi-0x3ee3dca6],ss
  4150f2:	jbe    0x4150a6
  4150f4:	cmp    eax,0x16a991d8
  4150f9:	mov    ch,0xca
  4150fb:	jae    0x415155
  4150fd:	and    al,al
  4150ff:	and    dh,al
  415101:	mov    cs:0xde756ed6,al
  415107:	repz and ecx,DWORD PTR [eax+0x560210ed]
  41510e:	pusha  
  41510f:	inc    edx
  415110:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415111:	fs retf 
  415113:	mov    ?,WORD PTR [edi+0x58]
  415116:	xchg   esi,eax
  415117:	or     ch,BYTE PTR [edx+0x71a65657]
  41511d:	outs   dx,DWORD PTR ds:[esi]
  41511e:	gs dec edi
  415120:	retf   
  415121:	pusha  
  415122:	mov    ds:0x114a7c2b,al
  415127:	mov    ecx,0x77b7ec94
  41512c:	dec    edi
  41512d:	loopne 0x4150d4
  41512f:	jo     0x415156
  415131:	jmp    0x415177
  415133:	inc    edi
  415134:	lds    eax,FWORD PTR [eax+0x25]
  415137:	cmovle ecx,DWORD PTR [ebp-0x6a26bdef]
  41513e:	jns    0x4150ea
  415140:	pop    edi
  415141:	mov    ds,WORD PTR [ebx+esi*2+0x59da5adc]
  415148:	jle    0x4150d4
  41514a:	inc    ebx
  41514b:	arpl   WORD PTR [edi],sp
  41514d:	dec    ebx
  41514e:	cmp    eax,eax
  415150:	gs pop esi
  415152:	out    0x1a,eax
  415154:	mov    ah,BYTE PTR [ebx-0x3b92a397]
  41515a:	into   
  41515b:	mov    ah,0x77
  41515d:	cmc    
  41515e:	fwait
  41515f:	or     eax,0xbcb58754
  415164:	dec    ebp
  415165:	sbb    al,0xa8
  415167:	enter  0xdc97,0x61
  41516b:	push   cs
  41516c:	(bad)  
  41516d:	or     DWORD PTR [edi],ecx
  41516f:	sub    BYTE PTR [ebx-0x7d],cl
  415172:	pop    ss
  415173:	xchg   DWORD PTR [ebp+ebx*2+0x2df92ad5],ecx
  41517a:	mov    bl,0x3b
  41517c:	rcl    DWORD PTR [eax-0x29],cl
  41517f:	lods   al,BYTE PTR ds:[esi]
  415180:	lea    esp,[ebx+ebx*2-0x3f7873e4]
  415187:	mov    edi,0x4eadd0a7
  41518c:	call   0xc3b0:0x6140485e
  415193:	sbb    DWORD PTR [ebp-0x1b77b7cb],0xf981b84c
  41519d:	out    0x52,al
  41519f:	sbb    esi,DWORD PTR [esi]
  4151a1:	cld    
  4151a2:	and    DWORD PTR [edx+ecx*8-0x8b0abbb],0x41d00edb
  4151ad:	lock arpl WORD PTR [eax+edi*8-0x64],ax
  4151b2:	shr    esi,1
  4151b4:	push   eax
  4151b5:	loopne 0x415160
  4151b7:	xchg   esi,eax
  4151b8:	into   
  4151b9:	inc    esp
  4151ba:	dec    esi
  4151bb:	lea    ebx,[eax]
  4151bd:	jecxz  0x415224
  4151bf:	std    
  4151c0:	out    dx,eax
  4151c1:	test   DWORD PTR [edx+0x1079d27c],esi
  4151c7:	mov    cl,0xfb
  4151c9:	fist   WORD PTR [edi-0x6b]
  4151cc:	or     ebp,DWORD PTR ds:0xf4f6f35e
  4151d2:	int    0xdb
  4151d4:	add    ch,BYTE PTR [eax-0x46]
  4151d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151d8:	adc    ecx,DWORD PTR [esi]
  4151da:	pop    esp
  4151db:	sub    DWORD PTR [eax+0x7f5ee93f],eax
  4151e1:	sahf   
  4151e2:	loop   0x4151e3
  4151e4:	fs push cs
  4151e6:	jg     0x41522d
  4151e8:	scas   al,BYTE PTR es:[edi]
  4151e9:	aas    
  4151ea:	push   0x49
  4151ec:	jmp    0x9d657509
  4151f1:	cmp    BYTE PTR [eax],ch
  4151f3:	(bad)  
  4151f4:	push   DWORD PTR ds:0x337d794
  4151fa:	ret    
  4151fb:	out    dx,al
  4151fc:	jmp    0x4ae1:0xf7d5491c
  415203:	fdivr  DWORD PTR [bx+0x46]
  415207:	retf   
  415208:	mov    esp,0xc01ba951
  41520d:	jns    0x415213
  41520f:	xor    bh,BYTE PTR [edi+0x65]
  415212:	dec    edx
  415213:	fnstenv [ecx]
  415215:	int3   
  415216:	retf   
  415217:	sti    
  415218:	sahf   
  415219:	rcl    DWORD PTR [ebx-0x50d67355],0x67
  415220:	pop    edx
  415221:	adc    ch,BYTE PTR [edi+0x7ede9c3a]
  415227:	push   sp
  415229:	xor    BYTE PTR [eax+0x36],ch
  41522c:	aaa    
  41522d:	push   es
  41522e:	sbb    al,0x93
  415230:	dec    ebp
  415231:	mov    esp,0x54aa6085
  415236:	sub    bh,ah
  415238:	shl    BYTE PTR [ebp-0x30772bfc],1
  41523e:	(bad)  
  41523f:	shl    BYTE PTR [eax-0x1b05ae51],1
  415245:	rol    cl,cl
  415247:	pop    edi
  415248:	jno    0x415228
  41524a:	shr    DWORD PTR [ecx+0x1b],0xdf
  41524e:	int    0x44
  415250:	test   bh,al
  415252:	jecxz  0x4151f2
  415254:	stc    
  415255:	icebp  
  415256:	xchg   ecx,eax
  415257:	repnz push es
  415259:	xchg   ebx,eax
  41525a:	and    eax,0xa0c6b5db
  41525f:	pusha  
  415260:	mov    ds:0xd31134b0,eax
  415265:	in     al,dx
  415266:	sub    eax,0x825d551b
  41526b:	lods   eax,DWORD PTR ds:[esi]
  41526c:	fidiv  DWORD PTR [ebx-0x66]
  41526f:	fdiv   DWORD PTR [ecx+ecx*4+0x6e]
  415273:	repnz xchg ebx,eax
  415275:	data16 (bad) 
  415277:	popf   
  415278:	and    ecx,ebx
  41527a:	mov    ds:0x6ac590cf,eax
  41527f:	imul   ecx,DWORD PTR ds:0xa3b1e8c4,0xe6fa09cb
  415289:	repnz test eax,0x205424a7
  41528f:	inc    esp
  415290:	int    0x5f
  415292:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415293:	adc    DWORD PTR [edi+0x74],edx
  415296:	or     al,0x8c
  415298:	dec    eax
  415299:	cmp    BYTE PTR [ebp+0x3b],0x87
  41529d:	mov    cl,0xf6
  41529f:	fidiv  DWORD PTR [esi]
  4152a1:	ret    0xe599
  4152a4:	jb     0x41523d
  4152a6:	pushf  
  4152a7:	test   al,0xa9
  4152a9:	mov    DWORD PTR [esi],ecx
  4152ab:	jbe    0x41523b
  4152ad:	mov    dl,0x72
  4152af:	mov    ch,0xa
  4152b1:	sub    edi,DWORD PTR [eax+0x55]
  4152b4:	jo     0x415335
  4152b6:	std    
  4152b7:	mov    edi,DWORD PTR [esi-0x7c4decc5]
  4152bd:	jp     0x415261
  4152bf:	into   
  4152c0:	dec    esi
  4152c1:	mov    dl,0x8a
  4152c3:	push   edx
  4152c4:	pop    esp
  4152c5:	ds fdivr st(3),st
  4152c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152c9:	pop    es
  4152ca:	mov    esp,0x282548ea
  4152cf:	sub    eax,0x15c06729
  4152d4:	sbb    BYTE PTR [eax+0x0],dh
  4152d7:	cmp    eax,0x1db6e9a9
  4152dc:	repz rcr BYTE PTR gs:[eax],cl
  4152e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152e1:	xor    eax,0xd9d16f85
  4152e6:	adc    bl,BYTE PTR [edi-0x4d329808]
  4152ec:	clc    
  4152ed:	cmp    eax,0x37a775d4
  4152f2:	imul   ebp,DWORD PTR [eax+0x2f7161f2],0xc6f55fdc
  4152fc:	jp     0x41528e
  4152fe:	inc    DWORD PTR [ecx]
  415300:	js     0x4152c8
  415302:	sub    BYTE PTR ds:0x514a0e8d,dh
  415308:	jmp    0x4152db
  41530a:	test   eax,0x6d0885e8
  41530f:	inc    ebx
  415310:	lahf   
  415311:	ret    
  415312:	aam    0x1f
  415314:	inc    ebx
  415315:	mov    eax,DWORD PTR [esi-0x53827cbc]
  41531b:	(bad)  
  41531c:	jb     0x415356
  41531e:	mov    ah,dl
  415320:	mov    al,0xc8
  415322:	aad    0xd3
  415324:	out    dx,al
  415325:	out    0x48,eax
  415327:	xor    eax,0xb1834610
  41532c:	aas    
  41532d:	fs ja  0x415374
  415330:	das    
  415331:	push   edx
  415332:	mov    BYTE PTR [ecx+0x6e],ch
  415335:	xchg   esp,eax
  415336:	out    dx,al
  415337:	jmp    0x41534c
  415339:	dec    esi
  41533a:	pop    edi
  41533b:	mov    esi,0x73086dac
  415340:	test   DWORD PTR [ecx-0xb],ecx
  415343:	int3   
  415344:	or     cl,BYTE PTR [ecx]
  415346:	in     eax,dx
  415347:	lods   al,BYTE PTR ds:[esi]
  415348:	mov    gs,WORD PTR [ecx]
  41534a:	or     esp,DWORD PTR [ebp-0x58]
  41534d:	pop    ds
  41534e:	fist   WORD PTR [esi-0x7863eeb3]
  415354:	call   edx
  415356:	shl    BYTE PTR [edx+edi*1-0x3f],0x39
  41535b:	leave  
  41535c:	das    
  41535d:	xchg   DWORD PTR ds:0x78a1aacc,ebp
  415363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415364:	sar    BYTE PTR [ebx-0x4be42ace],0xc0
  41536b:	xchg   edx,eax
  41536c:	loop   0x4153ca
  41536e:	push   es
  41536f:	mov    esi,0xfc51d082
  415374:	inc    edi
  415375:	cmc    
  415376:	pusha  
  415377:	sar    DWORD PTR [esi],0xc2
  41537a:	dec    esi
  41537b:	sbb    eax,0x1557c858
  415380:	push   esi
  415381:	ja     0x4153e9
  415383:	lea    eax,[ebx+0x3d34f924]
  415389:	xor    edx,DWORD PTR [ebp-0x5b]
  41538c:	adc    dh,BYTE PTR [eax+ebp*8-0x1b]
  415390:	xor    ecx,DWORD PTR [esi+0x46]
  415393:	push   ss
  415394:	push   esp
  415395:	outs   dx,BYTE PTR ds:[esi]
  415396:	scas   al,BYTE PTR es:[edi]
  415397:	mov    ebp,0x8589670e
  41539c:	mov    ?,WORD PTR [ecx-0x5475c419]
  4153a2:	ja     0x415422
  4153a4:	xor    eax,0xb1318ec8
  4153a9:	ss add eax,0x18087e14
  4153af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153b0:	xor    eax,0x3795cb4c
  4153b5:	out    0xa7,al
  4153b7:	ins    DWORD PTR es:[edi],dx
  4153b8:	dec    esi
  4153b9:	mov    esp,0xebc281d5
  4153be:	sbb    esp,ecx
  4153c0:	fisubr DWORD PTR [ecx+0x12]
  4153c3:	push   es
  4153c4:	dec    eax
  4153c5:	ds ss iret 
  4153c8:	sub    bh,al
  4153ca:	aam    0x8
  4153cc:	push   edx
  4153cd:	xchg   ecx,eax
  4153ce:	jmp    0x4153a8
  4153d0:	ins    DWORD PTR es:[edi],dx
  4153d1:	lds    ecx,FWORD PTR [edi+ebx*2-0x5a]
  4153d5:	jns    0x415430
  4153d7:	rol    DWORD PTR [eax+0x74005e39],1
  4153dd:	fild   WORD PTR [ebx+0x4bcd41dd]
  4153e3:	mov    ebx,0x27a2edf9
  4153e8:	mov    al,0xc
  4153ea:	inc    esp
  4153eb:	jl     0x415438
  4153ed:	xchg   ebx,eax
  4153ee:	daa    
  4153ef:	lds    eax,FWORD PTR [eax-0x18]
  4153f2:	and    edx,ecx
  4153f4:	lods   eax,DWORD PTR ds:[esi]
  4153f5:	jmp    0x6d86228a
  4153fa:	cmp    al,0x46
  4153fc:	das    
  4153fd:	ret    
  4153fe:	jne    0x4153ec
  415400:	aas    
  415401:	(bad)  
  415403:	in     eax,0xff
  415405:	inc    ebx
  415406:	cli    
  415407:	xor    eax,0x5144fe15
  41540c:	pop    gs
  41540e:	xor    cl,BYTE PTR [edx+0x11c304a0]
  415414:	fdiv   DWORD PTR [ecx-0x1d]
  415417:	int3   
  415418:	cmp    al,0x8a
  41541a:	daa    
  41541b:	mov    eax,0xdbeb53bb
  415420:	add    dh,BYTE PTR [esi]
  415422:	add    eax,0xff064725
  415427:	xlat   BYTE PTR ds:[ebx]
  415428:	test   DWORD PTR [eax+0x425bcbb0],esp
  41542e:	xlat   BYTE PTR ds:[ebx]
  41542f:	popa   
  415430:	out    0xca,al
  415432:	stos   BYTE PTR es:[edi],al
  415433:	adc    edx,DWORD PTR [ecx+0xa]
  415436:	pop    ss
  415437:	je     0x41543a
  415439:	xchg   ebp,eax
  41543a:	cmp    eax,0xa5c8076c
  41543f:	hlt    
  415440:	stos   DWORD PTR es:[edi],eax
  415441:	mov    ds:0x5b35eb87,eax
  415446:	popa   
  415447:	mov    bh,BYTE PTR [eax-0x3855edf5]
  41544d:	test   eax,0x6063e907
  415452:	push   cs
  415453:	sbb    al,0xbb
  415455:	jns    0x4153e3
  415457:	pop    edi
  415458:	mov    dl,BYTE PTR ds:0x4406f720
  41545e:	ja     0x415418
  415460:	dec    ecx
  415461:	jb     0x4154d7
  415463:	xor    BYTE PTR [edi-0x4d957900],cl
  415469:	pushf  
  41546a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41546b:	sbb    eax,0x31d68065
  415470:	leave  
  415471:	imul   esi,DWORD PTR [esi],0xffffffe1
  415474:	pop    esp
  415475:	adc    al,0xe6
  415477:	addr16 in eax,0x68
  41547a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41547b:	aam    0x3b
  41547d:	ja     0x4154fb
  41547f:	xchg   ebx,eax
  415480:	ins    DWORD PTR es:[edi],dx
  415481:	dec    edx
  415482:	pop    ebp
  415483:	sub    DWORD PTR [eax-0x2c],esi
  415486:	or     ecx,edi
  415488:	retf   
  415489:	dec    ebp
  41548a:	mov    bh,0x23
  41548c:	inc    eax
  41548d:	mov    ds:0x9e38378c,al
  415492:	adc    al,0xc5
  415494:	pop    ecx
  415495:	(bad)  
  415496:	cs into 
  415498:	repnz mov ah,0x65
  41549b:	sti    
  41549c:	call   0xbdc4:0x9207e2a9
  4154a3:	add    ch,BYTE PTR [ebx-0x4e875eb2]
  4154a9:	and    BYTE PTR [ebx],0xb
  4154ac:	xchg   edx,eax
  4154ad:	jno    0x415442
  4154af:	inc    eax
  4154b0:	mov    dl,0xe8
  4154b2:	xchg   DWORD PTR [eax-0x7395f07],ebx
  4154b8:	mov    ebp,0xd71904b
  4154bd:	cmp    al,al
  4154bf:	into   
  4154c0:	gs cld 
  4154c2:	pop    ecx
  4154c3:	(bad)  
  4154c4:	stos   DWORD PTR es:[edi],eax
  4154c5:	xor    eax,0xc28bcf8f
  4154ca:	mov    al,0xc3
  4154cc:	mov    gs,ecx
  4154ce:	nop
  4154cf:	mov    dh,0x65
  4154d1:	loopne 0x415464
  4154d3:	iret   
  4154d4:	sbb    eax,0xde622faf
  4154d9:	in     al,dx
  4154da:	ja     0x415469
  4154dc:	loopne 0x4154a2
  4154de:	fsubr  DWORD PTR [edi]
  4154e0:	call   0xec64:0x3720b3ab
  4154e7:	sti    
  4154e8:	popa   
  4154e9:	jmp    0x552062f9
  4154ee:	je     0x415539
  4154f0:	ja     0x4154bd
  4154f2:	adc    ah,BYTE PTR [eax+0x75]
  4154f5:	(bad)  
  4154f7:	test   al,0xb7
  4154f9:	fwait
  4154fa:	and    al,0x67
  4154fc:	push   ds
  4154fd:	popf   
  4154fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415500:	ret    0x586b
  415503:	adc    eax,DWORD PTR [ebp+0x3068e7f]
  415509:	pusha  
  41550a:	dec    eax
  41550b:	xchg   edx,eax
  41550c:	out    0x43,eax
  41550e:	and    BYTE PTR [eax-0xf],dh
  415511:	in     eax,0x1c
  415513:	inc    eax
  415514:	div    BYTE PTR [ecx+eax*4+0x60]
  415518:	scas   al,BYTE PTR es:[edi]
  415519:	lea    edx,[edx]
  41551b:	xchg   edx,eax
  41551c:	mov    al,ds:0x815ed37b
  415521:	dec    esp
  415522:	sub    eax,0x53dced5c
  415527:	inc    esi
  415528:	out    0x66,eax
  41552a:	cmp    ebx,DWORD PTR [edi]
  41552c:	lods   eax,DWORD PTR ds:[esi]
  41552d:	adc    DWORD PTR [esp+ecx*8],esi
  415530:	add    BYTE PTR [ebp+0xe],dl
  415533:	sub    BYTE PTR [ebp-0x5b],bl
  415536:	(bad)  
  415537:	cmp    al,0xf4
  415539:	jge    0x4154e3
  41553b:	ja     0x41554e
  41553d:	cmp    cl,BYTE PTR [ebx-0x6670a95b]
  415543:	hlt    
  415544:	test   BYTE PTR es:[edx+0x1d53ac63],cl
  41554b:	ins    DWORD PTR es:[edi],dx
  41554c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41554d:	pop    eax
  41554e:	push   ebp
  41554f:	inc    ecx
  415550:	and    al,0x9
  415552:	rcl    DWORD PTR [ebp-0x26],cl
  415555:	mov    esi,0x9006bed5
  41555a:	xchg   DWORD PTR [eax],ecx
  41555c:	arpl   WORD PTR [edx+0x5d],bx
  41555f:	sub    eax,0x60efffd
  415564:	cs in  eax,dx
  415566:	popf   
  415567:	ins    DWORD PTR es:[edi],dx
  415568:	repz mov bl,dl
  41556b:	cmp    eax,0xe490c2ad
  415570:	(bad)
  415573:	test   eax,0xc10ebc7f
  415578:	mov    ds:0x917bbed0,eax
  41557d:	cmp    dh,BYTE PTR [eax-0x7a]
  415580:	addr16 (bad) 
  415582:	cdq    
  415583:	inc    BYTE PTR [ebx+ebx*4]
  415586:	test   BYTE PTR [ebp-0xd],cl
  415589:	in     eax,0xa2
  41558b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41558c:	jmp    0xf8b9e56c
  415591:	add    edx,DWORD PTR [esp+eax*2-0x3f]
  415595:	pop    esp
  415596:	sub    eax,0xf30ca3e3
  41559b:	aas    
  41559c:	jmp    0x23f6:0x2e1793e2
  4155a3:	xlat   BYTE PTR ds:[ebx]
  4155a4:	pusha  
  4155a5:	and    DWORD PTR [edi],ebp
  4155a7:	sbb    eax,0xf6c3eb2f
  4155ac:	xchg   ebp,eax
  4155ad:	pop    edx
  4155ae:	xor    DWORD PTR [ebx*2-0x2f52cc7d],ecx
  4155b5:	mov    ebp,fs
  4155b7:	mov    DWORD PTR [edi+0x3ab9e31d],0x6707db7e
  4155c1:	neg    DWORD PTR [ebp+0x7f]
  4155c4:	loopne 0x4155f0
  4155c6:	scas   eax,DWORD PTR es:[edi]
  4155c7:	and    al,0x2d
  4155c9:	add    DWORD PTR [edx+0x1dbc820a],ebp
  4155cf:	add    DWORD PTR [esp+ebp*4+0x4e],edx
  4155d3:	sbb    DWORD PTR [edi+0x64a3a911],esi
  4155d9:	push   es
  4155da:	sub    edx,DWORD PTR [eax+eiz*1]
  4155dd:	sbb    al,0x9c
  4155df:	jg     0x415616
  4155e1:	mov    ch,0xa5
  4155e3:	sub    BYTE PTR [edx-0x5d53e732],bl
  4155e9:	mov    eax,DWORD PTR [ebx-0x7752577a]
  4155ef:	push   eax
  4155f0:	pop    es
  4155f1:	loopne 0x415632
  4155f3:	data16 fcomp DWORD PTR [esi]
  4155f6:	mov    BYTE PTR [edi+0x63c5b54b],bl
  4155fc:	or     BYTE PTR [ebx],dl
  4155fe:	inc    ecx
  4155ff:	mov    ch,0x8e
  415601:	pop    edx
  415602:	mov    dl,BYTE PTR ds:0x3a689f9b
  415608:	jmp    0xc063:0x74d477f6
  41560f:	lahf   
  415610:	inc    ecx
  415611:	rcl    BYTE PTR [ebx-0x2c],0xa3
  415615:	jg     0x41560a
  415617:	or     BYTE PTR [edx],bh
  415619:	test   al,0xc0
  41561b:	arpl   cx,cx
  41561d:	xor    edi,esp
  41561f:	dec    esi
  415620:	pop    esp
  415621:	fnstcw WORD PTR [edi+0x64]
  415624:	xor    BYTE PTR [ebp+eax*2-0x71b32f7a],dh
  41562b:	in     eax,dx
  41562c:	mov    ds:0xe9b8583a,eax
  415631:	in     eax,0xb1
  415633:	pop    ds
  415634:	dec    ecx
  415635:	push   edx
  415636:	pop    edx
  415637:	loopne 0x415694
  415639:	jbe    0x4155e2
  41563b:	aaa    
  41563c:	jns    0x415634
  41563e:	or     eax,0x310af579
  415643:	loop   0x4155e8
  415645:	push   es
  415646:	inc    eax
  415647:	addr16 jl 0x415642
  41564a:	xchg   edx,eax
  41564b:	hlt    
  41564c:	dec    edi
  41564d:	xor    DWORD PTR [eax],ecx
  41564f:	dec    ebp
  415650:	add    DWORD PTR [eax+0x32],esi
  415653:	cs data16 cli 
  415656:	push   edx
  415657:	xor    eax,ebx
  415659:	into   
  41565a:	out    dx,al
  41565b:	mov    esi,0x89191b86
  415660:	std    
  415661:	jp     0x41562d
  415663:	cdq    
  415664:	pop    ecx
  415665:	xchg   edx,eax
  415666:	lods   eax,DWORD PTR ds:[esi]
  415667:	fs (bad) 
  415669:	sbb    eax,0x5c49802e
  41566e:	push   0xffffffb4
  415670:	leave  
  415671:	sub    bh,dl
  415673:	push   ebx
  415674:	mov    eax,0x6f9b9ca3
  415679:	sbb    eax,0x6a7a26c5
  41567e:	adc    eax,0xf37e12a0
  415683:	enter  0x7055,0xd2
  415687:	cmp    al,0x7a
  415689:	fistp  DWORD PTR [ecx-0x439f5e8]
  41568f:	pop    esi
  415690:	shr    BYTE PTR [ebp-0x75],0x87
  415694:	stos   DWORD PTR es:[edi],eax
  415695:	into   
  415696:	jg     0x415712
  415698:	cmp    eax,0x7f025e91
  41569d:	dec    ebp
  41569e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41569f:	cmp    ebp,DWORD PTR [ecx+0x52fead6d]
  4156a5:	jecxz  0x4156ad
  4156a7:	addr16 xor bh,ah
  4156aa:	(bad)  
  4156ab:	or     eax,0x19a47e72
  4156b0:	xchg   ecx,eax
  4156b1:	xchg   edx,eax
  4156b2:	jmp    0x4156a1
  4156b4:	inc    edx
  4156b5:	pop    ebp
  4156b6:	add    eax,0xdbb0e58
  4156bb:	or     ah,0xa6
  4156be:	js     0x4156d9
  4156c0:	push   es
  4156c1:	mov    dl,0x7d
  4156c3:	cmp    BYTE PTR [ebx+eiz*4],dh
  4156c6:	shl    BYTE PTR [edx+0x21665ec],cl
  4156cc:	sub    al,0xa6
  4156ce:	(bad)  
  4156d1:	cld    
  4156d2:	or     edx,DWORD PTR gs:[bp+di+0x246b]
  4156d8:	dec    esp
  4156d9:	jle    0x415660
  4156db:	mov    al,ds:0x644d87c1
  4156e0:	xchg   ecx,eax
  4156e1:	mov    al,ds:0xdad2ee0e
  4156e6:	aaa    
  4156e7:	cmc    
  4156e8:	and    al,BYTE PTR [edi+0x54]
  4156eb:	retf   0x4720
  4156ee:	add    al,0x7c
  4156f0:	jmp    0x415710
  4156f2:	xor    DWORD PTR [edx-0x17],0x26
  4156f6:	outs   dx,BYTE PTR ds:[esi]
  4156f7:	push   0xffffffa1
  4156f9:	ja     0x415752
  4156fb:	icebp  
  4156fc:	stos   DWORD PTR es:[edi],eax
  4156fd:	lahf   
  4156fe:	sbb    ebp,DWORD PTR [eiz*2-0x3eef7758]
  415705:	jnp    0x41571b
  415707:	mov    cl,0xc5
  415709:	and    eax,0x3c1717a
  41570e:	test   DWORD PTR [ebp-0x70],esp
  415711:	scas   al,BYTE PTR es:[edi]
  415712:	add    al,0x27
  415714:	sbb    dh,bl
  415716:	pop    ds
  415717:	jno    0x415781
  415719:	pop    edx
  41571a:	nop
  41571b:	and    dh,BYTE PTR [edx-0xe626727]
  415721:	fidiv  DWORD PTR [ecx-0x7b649443]
  415727:	in     al,0xfb
  415729:	inc    eax
  41572a:	bound  ebp,QWORD PTR [ebx]
  41572c:	xchg   ebp,eax
  41572d:	push   ecx
  41572e:	mov    ds:0xfdfdb902,al
  415733:	add    eax,0x1e49e2ce
  415738:	mov    ?,edi
  41573a:	xor    al,0x26
  41573c:	stos   DWORD PTR es:[edi],eax
  41573d:	jns    0x83a34f25
  415743:	add    eax,0xb3741ddd
  415748:	outs   dx,DWORD PTR ds:[esi]
  415749:	sbb    cl,dl
  41574b:	add    DWORD PTR [edi+ebp*4-0x6c14ca1],esi
  415752:	and    al,0xed
  415754:	dec    esp
  415755:	dec    edi
  415757:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415758:	ins    DWORD PTR es:[edi],dx
  415759:	push   ss
  41575a:	scas   al,BYTE PTR es:[edi]
  41575b:	(bad)  
  41575d:	xchg   ecx,eax
  41575e:	les    ebp,FWORD PTR [eax+0x2]
  415761:	add    eax,0xcb20e79
  415766:	call   FWORD PTR [edx]
  415768:	jp     0x415741
  41576a:	and    ebx,DWORD PTR [ebx]
  41576c:	push   esi
  41576d:	mov    dl,0xf0
  41576f:	or     BYTE PTR [edx-0x7444923e],0xf8
  415776:	dec    edi
  415777:	push   ds
  415778:	adc    BYTE PTR [eax-0x73],ch
  41577b:	loop   0x4157eb
  41577d:	inc    edx
  41577e:	aaa    
  41577f:	(bad)  
  415780:	adc    eax,0xc0f1cf8d
  415785:	loop   0x41579f
  415787:	dec    eax
  415788:	in     al,dx
  415789:	mov    ecx,0x56b8e0b7
  41578e:	inc    ebx
  41578f:	pushf  
  415790:	lods   al,BYTE PTR ds:[esi]
  415791:	jbe    0x415767
  415793:	sub    esp,DWORD PTR [edx+ebx*1-0x5e]
  415797:	mov    bl,0xba
  415799:	(bad)  
  41579a:	xchg   esp,eax
  41579b:	test   eax,0xddab97f6
  4157a0:	adc    al,0x2a
  4157a2:	adc    edx,DWORD PTR [edi+0x708aaa81]
  4157a8:	mov    bh,0xa3
  4157aa:	aas    
  4157ab:	cld    
  4157ac:	jg     0x41581c
  4157ae:	push   ebp
  4157af:	ins    BYTE PTR es:[edi],dx
  4157b0:	das    
  4157b1:	out    dx,al
  4157b2:	ror    esi,1
  4157b4:	fs je  0x415753
  4157b7:	jecxz  0x4157c6
  4157b9:	and    BYTE PTR [esi],dh
  4157bb:	push   esp
  4157bc:	or     edx,eax
  4157be:	mov    al,0xd0
  4157c0:	jb     0x41575e
  4157c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157c3:	pop    esp
  4157c4:	in     al,0x8
  4157c6:	(bad)  
  4157c7:	repnz pop ds
  4157c9:	sub    al,0x60
  4157cb:	sbb    esi,DWORD PTR [edx-0x2f]
  4157ce:	jne    0x415826
  4157d0:	dec    eax
  4157d1:	pop    es
  4157d2:	and    DWORD PTR [edi-0x1c],edi
  4157d5:	out    dx,al
  4157d6:	pop    ebp
  4157d7:	jbe    0x415811
  4157d9:	or     dh,BYTE PTR [ecx]
  4157db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157dc:	clc    
  4157dd:	add    dl,BYTE PTR [ebx-0x2bb1c394]
  4157e3:	pushf  
  4157e4:	jmp    0xd27e9792
  4157e9:	sub    DWORD PTR [esi],eax
  4157eb:	lods   al,BYTE PTR ds:[esi]
  4157ec:	push   ss
  4157ed:	scas   al,BYTE PTR es:[edi]
  4157ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157ef:	cmp    eax,0xb9476df0
  4157f4:	aam    0xd3
  4157f6:	pop    edx
  4157f7:	mov    bh,0xd
  4157f9:	pusha  
  4157fa:	or     BYTE PTR [ecx-0x74b35c5b],bl
  415800:	fwait
  415801:	and    ebx,DWORD PTR [esi]
  415803:	mov    ecx,0x6fa6f8d7
  415808:	jb     0x415874
  41580a:	xlat   BYTE PTR ds:[ebx]
  41580b:	fstp   TBYTE PTR [edi+0x77]
  41580e:	jo     0x4157f0
  415810:	das    
  415811:	fcom   DWORD PTR [ebp-0x4e]
  415814:	enter  0x45a0,0x57
  415818:	cmc    
  415819:	aaa    
  41581a:	dec    edi
  41581b:	test   BYTE PTR [edi-0x112ac676],bh
  415821:	pop    ebp
  415822:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415823:	or     eax,0xaa04b2ea
  415828:	ja     0x415836
  41582a:	xor    esp,DWORD PTR [ecx]
  41582c:	in     al,dx
  41582d:	inc    edi
  41582e:	and    al,0x7f
  415830:	dec    edx
  415831:	into   
  415832:	mov    BYTE PTR [edi],cl
  415834:	mov    al,0x64
  415836:	push   ecx
  415837:	add    al,0x22
  415839:	xor    dh,BYTE PTR [ebx+eax*2]
  41583c:	gs mov esp,0x33835c21
  415842:	ret    0xb18
  415845:	mov    esp,DWORD PTR [esi]
  415847:	inc    edi
  415848:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415849:	inc    esp
  41584a:	mov    ah,0x8e
  41584c:	or     dl,BYTE PTR [esi+0x12]
  41584f:	fcom   QWORD PTR [ebp-0x4]
  415852:	xchg   ecx,eax
  415853:	inc    esp
  415854:	retf   
  415855:	adc    esi,DWORD PTR [edx]
  415857:	mov    ebp,0xdd558d46
  41585c:	and    ah,BYTE PTR [edx+0x5f]
  41585f:	jb     0x415876
  415861:	pusha  
  415862:	das    
  415863:	dec    eax
  415864:	(bad)  
  415865:	xor    al,0xfa
  415867:	into   
  415868:	gs jge 0x415825
  41586b:	imul   edx,DWORD PTR [edx-0x2],0x5
  41586f:	(bad)  
  415870:	rcl    ebx,1
  415872:	push   ecx
  415873:	add    bh,cl
  415875:	adc    ch,BYTE PTR [eax]
  415877:	xchg   edi,eax
  415878:	retf   0xccd5
  41587b:	sub    bh,cl
  41587d:	loope  0x415836
  41587f:	bound  ebp,QWORD PTR [eax+0x36]
  415882:	je     0x41587d
  415884:	imul   esp,DWORD PTR [esi],0x6d8e0f6f
  41588a:	sbb    eax,0x6fc50adc
  41588f:	outs   dx,DWORD PTR ds:[esi]
  415890:	jl     0x415834
  415892:	sub    BYTE PTR [eax-0x23d9322],0xe8
  415899:	cmp    al,0x49
  41589b:	pop    edx
  41589c:	sahf   
  41589d:	fstp   DWORD PTR [edx]
  41589f:	sbb    al,0x67
  4158a1:	pop    esi
  4158a2:	xchg   edx,eax
  4158a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158a4:	bound  eax,QWORD PTR [ebp-0x37]
  4158a7:	sbb    al,0x84
  4158a9:	push   esp
  4158aa:	pop    es
  4158ab:	ret    0x75f5
  4158ae:	mov    esp,0xcaaae629
  4158b3:	mov    dh,0xf0
  4158b5:	pop    ecx
  4158b6:	clc    
  4158b7:	jg     0x415915
  4158b9:	sbb    cl,bh
  4158bb:	sub    al,0xbc
  4158bd:	lahf   
  4158be:	test   DWORD PTR [ebp-0x55e08ccc],ebx
  4158c4:	jmp    ecx
  4158c6:	cmp    al,0x48
  4158c8:	push   cs
  4158c9:	cmc    
  4158ca:	scas   al,BYTE PTR es:[edi]
  4158cb:	cwde   
  4158cc:	stos   BYTE PTR es:[edi],al
  4158cd:	add    eax,DWORD PTR [ecx]
  4158cf:	shl    DWORD PTR [ebx-0x57],cl
  4158d2:	cmc    
  4158d3:	jmp    DWORD PTR [ecx+0x4729d5b1]
  4158d9:	mov    ah,0x64
  4158db:	enter  0x2db0,0x26
  4158df:	mov    esp,0x425691fd
  4158e4:	add    DWORD PTR [ebx-0x39],ebx
  4158e7:	mov    ecx,0xf6f5bcb1
  4158ec:	push   0x3b
  4158ee:	adc    ebp,edi
  4158f0:	fisttp QWORD PTR [esp+ebx*2+0x19e4b6f]
  4158f7:	push   cs
  4158f8:	inc    edx
  4158f9:	leave  
  4158fa:	cs pop es
  4158fc:	push   cs
  4158fd:	jg     0x41596a
  4158ff:	pop    edx
  415900:	push   ebp
  415901:	pushf  
  415902:	mov    ecx,0xaeabccfb
  415907:	or     dl,BYTE PTR [esi+edx*4-0x52]
  41590b:	mov    bl,0x16
  41590d:	dec    eax
  41590e:	jns    0x415962
  415910:	pop    ebx
  415911:	jge    0x415933
  415913:	add    al,ah
  415915:	and    BYTE PTR [ebx+ebp*4],ch
  415918:	je     0x415977
  41591a:	enter  0xc668,0xc
  41591e:	icebp  
  41591f:	stc    
  415920:	into   
  415921:	icebp  
  415922:	add    eax,0x8baa47ee
  415927:	pop    ecx
  415928:	jne    0x41592b
  41592a:	arpl   WORD PTR [ebx],ax
  41592c:	rcl    DWORD PTR [ebp-0x28],cl
  41592f:	and    bl,cl
  415931:	aad    0x6c
  415933:	std    
  415934:	push   DWORD PTR [edi]
  415936:	pop    ss
  415937:	or     al,0x25
  415939:	mov    ebx,0x24a588df
  41593e:	sar    BYTE PTR [ebx+0x6d],1
  415941:	jbe    0x415921
  415943:	and    ecx,ebp
  415945:	or     al,BYTE PTR [edi+0x7d]
  415948:	not    al
  41594a:	xchg   ecx,eax
  41594b:	mov    al,ds:0xa1113900
  415950:	sub    eax,0xd0a7ea35
  415955:	(bad)  
  415956:	mov    ebp,0x569a29bc
  41595b:	not    DWORD PTR [ebp+0x19557279]
  415961:	mov    dh,bh
  415963:	es jne 0x4158fa
  415966:	fdiv   st,st(6)
  415968:	inc    eax
  415969:	bound  esi,QWORD PTR [eax+0x74]
  41596c:	aaa    
  41596d:	out    dx,al
  41596e:	mul    esi
  415970:	push   edi
  415971:	sbb    esi,DWORD PTR [ebp+esi*8-0x4a1685b5]
  415978:	stos   BYTE PTR es:[edi],al
  415979:	xor    al,0x1b
  41597b:	push   ebp
  41597c:	test   DWORD PTR [eax-0x14],0x3008ef50
  415983:	lahf   
  415984:	div    DWORD PTR [ebx+0x44e96b81]
  41598a:	dec    ecx
  41598b:	mov    eax,0xbb72171d
  415990:	aaa    
  415991:	sub    DWORD PTR [ebp+0x3f92c5a0],0x2d
  415998:	rol    BYTE PTR [esi],cl
  41599a:	xchg   ebp,eax
  41599b:	jae    0x415a08
  41599d:	pusha  
  41599e:	div    DWORD PTR [eax+edx*2-0x57dd82fb]
  4159a5:	jmp    0x90f9f433
  4159aa:	inc    ebx
  4159ab:	gs push es
  4159ad:	and    dh,BYTE PTR [edx+0x2980e201]
  4159b3:	aas    
  4159b4:	and    al,0x17
  4159b6:	cmp    eax,DWORD PTR [eax]
  4159b8:	ds pop ecx
  4159ba:	dec    sp
  4159bc:	cmp    eax,ebx
  4159be:	push   ecx
  4159bf:	lock inc esp
  4159c1:	mov    al,ds:0xba2223ca
  4159c6:	ss add al,0x5b
  4159c9:	jecxz  0x41598c
  4159cb:	stos   DWORD PTR es:[edi],eax
  4159cc:	jg     0x415989
  4159ce:	out    dx,al
  4159cf:	pop    esp
  4159d0:	sbb    al,0xcb
  4159d2:	hlt    
  4159d3:	mov    WORD PTR [edi],ss
  4159d5:	std    
  4159d6:	sahf   
  4159d7:	cmp    esi,0x82b93250
  4159dd:	jmp    0x5a38:0x2a031518
  4159e4:	xor    DWORD PTR [ebx+eiz*2+0x2b],esp
  4159e8:	das    
  4159e9:	jp     0x4159dc
  4159eb:	scas   al,BYTE PTR es:[edi]
  4159ec:	js     0x415a28
  4159ee:	mov    ds:0xb28dce0f,eax
  4159f3:	loopne 0x41599e
  4159f5:	fimul  DWORD PTR [ebx+0x3e]
  4159f8:	bound  eax,QWORD PTR [ecx+0x6e7136c9]
  4159fe:	clc    
  4159ff:	jmp    0xd9c1:0x460770f4
  415a06:	fcom   QWORD PTR [ebx-0x65]
  415a09:	imul   ecx,esp,0x1dbe72bd
  415a0f:	mov    ecx,0x6c34a783
  415a14:	call   0xff30:0x5aaf1e5c
  415a1b:	scas   al,BYTE PTR es:[edi]
  415a1c:	loope  0x415a15
  415a1e:	daa    
  415a1f:	push   ecx
  415a20:	xor    cl,0xfc
  415a23:	or     al,0xab
  415a25:	pop    ebx
  415a26:	or     esi,DWORD PTR [ebx-0x69ff127d]
  415a2c:	push   ebp
  415a2d:	popa   
  415a2e:	pop    eax
  415a2f:	xor    esi,DWORD PTR [eax+0x282ffef1]
  415a35:	xchg   ebx,eax
  415a36:	pop    ss
  415a37:	xor    dh,dl
  415a39:	inc    edi
  415a3a:	lahf   
  415a3b:	dec    esp
  415a3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a3d:	xchg   esp,eax
  415a3e:	into   
  415a3f:	push   edx
  415a40:	(bad)  
  415a41:	ror    BYTE PTR [ebx],1
  415a43:	sbb    ebx,esi
  415a45:	pop    edx
  415a46:	xlat   BYTE PTR ds:[ebx]
  415a47:	leave  
  415a48:	cwde   
  415a49:	xor    BYTE PTR [edx-0x222bfd23],cl
  415a4f:	sub    al,0x12
  415a51:	call   0xf4a5:0xf54bdd6c
  415a58:	sti    
  415a59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a5a:	push   ebx
  415a5b:	sbb    esi,esi
  415a5d:	xchg   esp,eax
  415a5e:	int3   
  415a5f:	rol    DWORD PTR [eax+0x4b456e04],1
  415a65:	ret    
  415a66:	adc    DWORD PTR [edi+0x66b577c],ebx
  415a6c:	(bad)  
  415a6f:	pop    ecx
  415a70:	bnd jae 0x415a41
  415a73:	add    ch,dh
  415a75:	(bad)  
  415a76:	std    
  415a77:	pop    ecx
  415a78:	xor    DWORD PTR [edi+0xc9bba29],ebx
  415a7e:	mov    esp,0xb98ac3af
  415a83:	pop    ebp
  415a84:	push   ds
  415a85:	inc    ebx
  415a86:	std    
  415a87:	sbb    bh,BYTE PTR [esi-0x9]
  415a8a:	xlat   BYTE PTR ds:[ebx]
  415a8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a8c:	adc    al,0xd0
  415a8e:	xchg   esi,eax
  415a8f:	xchg   ebx,eax
  415a90:	cmc    
  415a91:	and    eax,0x485ccf4d
  415a96:	out    0x7b,eax
  415a98:	jg     0x415b17
  415a9a:	jg     0x415a54
  415a9c:	mov    ebx,?
  415a9e:	repnz aaa 
  415aa0:	int    0x8f
  415aa2:	in     eax,0x30
  415aa4:	xchg   edi,ebp
  415aa6:	cdq    
  415aa7:	outs   dx,BYTE PTR ds:[esi]
  415aa8:	mov    edi,0x8292ec20
  415aad:	arpl   WORD PTR [ebp+0x3885b5a3],cx
  415ab3:	pop    esi
  415ab4:	fild   DWORD PTR [esi]
  415ab6:	es and dl,dl
  415ab9:	mov    esp,0x26b489f1
  415abe:	call   0xd5c5:0xc39b8d0e
  415ac5:	adc    DWORD PTR [ecx+0x7a],0x56
  415ac9:	xchg   DWORD PTR [ebp-0x3d],eax
  415acc:	hlt    
  415acd:	pop    es
  415ace:	push   ecx
  415acf:	loopne 0x415af5
  415ad1:	test   DWORD PTR [eax-0x8],ecx
  415ad4:	arpl   WORD PTR ds:0x8be209c9,cx
  415ada:	ret    
  415adb:	and    DWORD PTR [eax],eax
  415add:	(bad)  
  415ade:	adc    dl,ah
  415ae0:	leave  
  415ae1:	add    ebx,ecx
  415ae3:	push   ss
  415ae4:	add    ah,BYTE PTR [esi+0x71]
  415ae7:	hlt    
  415ae8:	outs   dx,BYTE PTR ds:[esi]
  415ae9:	hlt    
  415aea:	loop   0x415b1e
  415aec:	sbb    eax,0xf84e1440
  415af1:	or     DWORD PTR [ecx-0x73850da4],eax
  415af7:	push   eax
  415af8:	inc    ebp
  415af9:	repnz add al,0x3a
  415afc:	sub    ch,0x64
  415aff:	pop    edi
  415b00:	pushf  
  415b01:	xchg   edi,eax
  415b02:	test   al,0x8
  415b04:	ret    0x7adb
  415b07:	add    al,0xd7
  415b09:	lods   al,BYTE PTR ds:[si]
  415b0b:	sub    cl,ah
  415b0d:	mov    ds:0x1a58cd7c,al
  415b12:	nop
  415b13:	push   ecx
  415b14:	dec    esi
  415b15:	sub    eax,0x432e0729
  415b1a:	cli    
  415b1b:	scas   eax,DWORD PTR es:[edi]
  415b1c:	adc    al,0xaf
  415b1e:	int    0x87
  415b20:	xor    ebx,edx
  415b22:	loope  0x415b90
  415b24:	jne    0x415b0c
  415b26:	clc    
  415b27:	fwait
  415b28:	in     eax,dx
  415b29:	test   al,0xea
  415b2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b2c:	imul   ecx,esp,0x1ff9375e
  415b32:	nop
  415b33:	stos   DWORD PTR es:[edi],eax
  415b34:	jo     0x415ae2
  415b36:	aaa    
  415b37:	je     0x415af8
  415b39:	gs in  eax,0xd0
  415b3c:	xlat   BYTE PTR ds:[ebx]
  415b3d:	call   0x35708cc
  415b42:	xchg   esi,eax
  415b43:	sahf   
  415b44:	shr    esp,cl
  415b46:	pop    edx
  415b47:	push   0x1c
  415b49:	in     eax,0x5a
  415b4b:	arpl   WORD PTR [ebp+0x43f3e86e],bp
  415b51:	jns    0x415ad4
  415b53:	dec    esp
  415b54:	adc    eax,0xb0cceddc
  415b59:	xor    DWORD PTR [ecx-0x22],ebx
  415b5c:	adc    BYTE PTR [edi-0x17abee37],dh
  415b62:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b64:	jns    0x415b2a
  415b66:	repz test dh,0x4a
  415b6a:	data16 sub ah,bh
  415b6d:	dec    ebx
  415b6e:	push   ebp
  415b6f:	(bad)  
  415b70:	cmc    
  415b71:	dec    esp
  415b72:	mov    ds:0x1f070689,eax
  415b77:	mov    al,0x2a
  415b79:	mov    ebx,0x7fe7d66c
  415b7e:	mov    edx,0xa29e48cf
  415b83:	fdivr  QWORD PTR [ecx-0x1e]
  415b86:	mov    al,0x49
  415b88:	das    
  415b89:	(bad)  
  415b8b:	add    al,0xc1
  415b8d:	pop    es
  415b8e:	push   eax
  415b8f:	xchg   edx,eax
  415b90:	out    0xfd,eax
  415b92:	sub    al,0xe
  415b94:	mov    cl,0x52
  415b96:	add    dh,BYTE PTR [ecx-0x50]
  415b99:	dec    esp
  415b9a:	push   ds
  415b9b:	fild   QWORD PTR [eax]
  415b9d:	xor    al,BYTE PTR [esi+0x18]
  415ba0:	jns    0x415b99
  415ba2:	or     eax,0x6f3e8b2
  415ba7:	dec    eax
  415ba8:	xor    al,BYTE PTR [edx]
  415baa:	fs jno 0x415b84
  415bad:	mov    ds:0x7ebf45e4,eax
  415bb2:	sbb    eax,0x70ca4da4
  415bb7:	lock add al,0x81
  415bba:	out    dx,al
  415bbb:	mov    edi,0x50156c36
  415bc0:	cmp    ah,BYTE PTR ds:[edx+edi*4-0x4a5ca496]
  415bc8:	psrld  mm7,QWORD PTR ds:0xfb26782a
  415bcf:	dec    eax
  415bd0:	sbb    BYTE PTR [eax],bh
  415bd2:	or     bl,BYTE PTR [ebx+0x547a98ea]
  415bd8:	ror    BYTE PTR [ecx-0x3b15d076],1
  415bde:	push   ebp
  415bdf:	aad    0xe4
  415be1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415be2:	inc    esi
  415be3:	or     BYTE PTR [edi+0x61],0x42
  415be7:	mov    esi,ecx
  415be9:	add    edi,esp
  415beb:	xchg   ebp,eax
  415bec:	cmp    ebx,DWORD PTR [eax-0x23f2eee2]
  415bf2:	retf   
  415bf3:	sub    DWORD PTR [ebx+0x4cd6b88a],edi
  415bf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bfa:	cwde   
  415bfb:	dec    ebp
  415bfc:	bound  edx,QWORD PTR ds:[esi-0x6f]
  415c00:	sbb    BYTE PTR [ebp-0x5e],cl
  415c03:	jmp    DWORD PTR [eax]
  415c05:	gs inc ebx
  415c07:	jmp    0x415c15
  415c09:	xchg   esi,eax
  415c0a:	sub    eax,0x7545b107
  415c0f:	aam    0x75
  415c11:	bound  ecx,QWORD PTR [edi-0x55]
  415c14:	xchg   edi,eax
  415c15:	fwait
  415c16:	cmp    ecx,edx
  415c18:	sub    BYTE PTR [eax],ah
  415c1a:	mov    al,0x1d
  415c1c:	cmp    al,0xa2
  415c1e:	cmp    esi,DWORD PTR [ecx]
  415c20:	adc    BYTE PTR [ebx+0x66],dh
  415c23:	dec    edx
  415c24:	fdivr  DWORD PTR [eax-0x6e94e92a]
  415c2a:	test   al,0x72
  415c2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c2d:	fstp   QWORD PTR [esp+ebx*1-0x1b]
  415c31:	pop    ecx
  415c32:	or     dl,BYTE PTR [eax-0x206dc168]
  415c38:	fs add al,0xea
  415c3b:	enter  0x7240,0xa5
  415c3f:	dec    ebx
  415c40:	or     DWORD PTR [ebx],esi
  415c42:	add    dl,bh
  415c44:	push   eax
  415c45:	ret    
  415c46:	xor    bh,BYTE PTR ds:0x2c9e0ff9
  415c4c:	call   0xb8008467
  415c51:	xchg   DWORD PTR [ebx*4+0x50b53ea],esi
  415c58:	ret    0xc961
  415c5b:	inc    ecx
  415c5c:	(bad)  [edx]
  415c5e:	fwait
  415c5f:	xlat   BYTE PTR ds:[ebx]
  415c60:	retf   
  415c61:	push   0xaf5bd61
  415c66:	repnz shl DWORD PTR [eax+0x16],0x80
  415c6b:	jno    0x415ce6
  415c6d:	xchg   ebx,eax
  415c6e:	mov    bl,0x91
  415c70:	jmp    0xa1d6:0x50074d65
  415c77:	mov    ax,ds:0x964bb1a3
  415c7d:	sbb    DWORD PTR [ebx],esp
  415c7f:	xlat   BYTE PTR ds:[ebx]
  415c80:	sbb    DWORD PTR [ebx],ebx
  415c82:	push   ss
  415c83:	aad    0xa9
  415c85:	and    edi,DWORD PTR [ecx+ebx*1]
  415c88:	jp     0x415cf7
  415c8a:	neg    esp
  415c8c:	mov    eax,0x3e448059
  415c91:	lock mov ebp,0x55e58b91
  415c97:	mov    ebx,0x4c728467
  415c9c:	dec    ebx
  415c9d:	jmp    0x415c6f
  415c9f:	adc    ebx,DWORD PTR [edx-0x1e]
  415ca2:	mov    bh,0x55
  415ca4:	(bad)  
  415ca5:	les    edx,FWORD PTR [ebx-0x184da4eb]
  415cab:	ins    BYTE PTR es:[edi],dx
  415cac:	stc    
  415cad:	push   esi
  415cae:	and    al,0x83
  415cb0:	pop    ebp
  415cb1:	ret    
  415cb2:	dec    edi
  415cb3:	fcmovu st,st(3)
  415cb5:	mov    cs,WORD PTR [eax]
  415cb7:	push   ebp
  415cb8:	xchg   ebx,eax
  415cb9:	mov    ebx,0xa116e46a
  415cbe:	repz xchg ebx,eax
  415cc0:	or     DWORD PTR [ebx-0x720508f9],edx
  415cc6:	ds out 0x74,al
  415cc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cca:	das    
  415ccb:	jl     0x415cb7
  415ccd:	(bad)  ds:0x8447ef58
  415cd3:	inc    edx
  415cd4:	(bad)  [ebp-0x4a726363]
  415cda:	aas    
  415cdb:	mov    bh,0x7f
  415cdd:	mov    ebx,0xf606775b
  415ce2:	mov    ah,0x8a
  415ce4:	jbe    0x415d25
  415ce6:	xchg   esp,eax
  415ce7:	loop   0x415d19
  415ce9:	sub    BYTE PTR [esi+0x251b75a2],al
  415cef:	inc    edi
  415cf0:	mov    ebx,0xa844eea4
  415cf5:	or     ecx,eax
  415cf7:	ficom  WORD PTR [esi]
  415cf9:	and    BYTE PTR [ecx+ecx*8-0x3],ah
  415cfd:	mov    cl,0xb3
  415cff:	mov    ah,0x50
  415d01:	adc    al,0x46
  415d03:	jge    0x415d30
  415d05:	adc    dh,cl
  415d07:	lock pop edi
  415d09:	jge    0x415d01
  415d0b:	add    DWORD PTR ds:0x617f611f,0xffffffa5
  415d12:	xchg   ebx,eax
  415d13:	data16 mov BYTE PTR [edx-0x15],dh
  415d17:	stos   BYTE PTR es:[edi],al
  415d18:	jo     0x415d79
  415d1a:	jp     0x415d76
  415d1c:	inc    eax
  415d1d:	rol    BYTE PTR [ebx],1
  415d1f:	hlt    
  415d20:	pop    es
  415d21:	push   esi
  415d22:	jae    0x415d11
  415d24:	xor    esp,DWORD PTR [edi]
  415d26:	mov    dh,0x6
  415d28:	mov    ah,BYTE PTR [edx+edx*4-0x50893844]
  415d2f:	std    
  415d30:	in     al,dx
  415d31:	mov    eax,ds:0x67eb58f3
  415d36:	sub    BYTE PTR [edi+edx*1],dl
  415d39:	dec    ebx
  415d3a:	das    
  415d3b:	sub    BYTE PTR [edi+0x46],ch
  415d3e:	pop    ss
  415d3f:	cli    
  415d40:	cld    
  415d41:	jmp    0xa13f:0x4d5ce742
  415d48:	cwde   
  415d49:	and    DWORD PTR [edi],ebx
  415d4b:	lods   al,BYTE PTR ds:[esi]
  415d4c:	cwde   
  415d4d:	dec    ebp
  415d4e:	and    ecx,DWORD PTR [ebx]
  415d50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d51:	push   esp
  415d52:	leave  
  415d53:	inc    edi
  415d54:	fld    QWORD PTR [esi]
  415d56:	sub    DWORD PTR [ebp+0x505348f6],eax
  415d5c:	jo     0x415d42
  415d5e:	imul   eax,eax,0x71
  415d61:	sbb    edx,DWORD PTR [edx+ebp*8+0x70144b32]
  415d68:	mov    ds:0xa61487dc,eax
  415d6d:	je     0x415d4b
  415d6f:	and    BYTE PTR [ebx+0x57],al
  415d72:	add    bh,BYTE PTR [eax+0x73]
  415d75:	loopne 0x415d25
  415d77:	test   al,0x7f
  415d79:	push   esp
  415d7a:	loop   0x415d19
  415d7c:	mov    bl,0xbe
  415d7e:	inc    edi
  415d7f:	in     al,0x91
  415d81:	sahf   
  415d82:	mov    dl,0x7e
  415d84:	adc    esi,DWORD PTR [edx]
  415d86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d87:	jle    0x415d46
  415d89:	inc    DWORD PTR [edx+ebx*4]
  415d8c:	dec    eax
  415d8d:	cmp    eax,ebx
  415d8f:	mov    dh,0xed
  415d91:	cli    
  415d92:	ret    
  415d93:	adc    al,cl
  415d95:	push   esi
  415d96:	push   ebp
  415d97:	sbb    DWORD PTR [eax],ecx
  415d99:	sar    BYTE PTR [edx],cl
  415d9b:	and    al,0x37
  415d9d:	into   
  415d9e:	or     DWORD PTR ds:0xa4a4b31,ebx
  415da4:	pop    es
  415da5:	or     ah,ch
  415da7:	(bad)  
  415da8:	push   ebx
  415da9:	ja     0x415d90
  415dab:	addr16 jae 0x415e1e
  415dae:	adc    dl,BYTE PTR [esi+0x27b2b69f]
  415db4:	xchg   esp,eax
  415db5:	jmp    0x415db3
  415db7:	ror    DWORD PTR [edx],cl
  415db9:	push   ecx
  415dba:	out    0x75,eax
  415dbc:	in     al,0xd4
  415dbe:	es jne 0x415dfd
  415dc1:	jno    0x415dd5
  415dc3:	jo     0x415e1c
  415dc5:	sub    esi,DWORD PTR [edi]
  415dc7:	daa    
  415dc8:	ins    BYTE PTR es:[edi],dx
  415dc9:	aaa    
  415dca:	fidivr DWORD PTR [edi-0x28f5af9d]
  415dd0:	dec    ebp
  415dd1:	xchg   edx,eax
  415dd2:	xlat   BYTE PTR ds:[ebx]
  415dd3:	loopne 0x415e45
  415dd5:	clc    
  415dd6:	and    dh,ch
  415dd8:	out    dx,al
  415dd9:	mov    ah,0x12
  415ddb:	imul   ecx,DWORD PTR [esi+ebx*1+0x791b13b1],0xffffff97
  415de3:	pop    esi
  415de4:	xchg   ebp,eax
  415de5:	mov    ebp,0xe539d3d8
  415dea:	imul   eax,esp,0x54
  415ded:	xor    ah,dl
  415def:	pop    ebx
  415df0:	jne    0x415e05
  415df2:	popa   
  415df3:	dec    edx
  415df4:	neg    DWORD PTR [ebx-0x7d]
  415df7:	pop    eax
  415df8:	leave  
  415df9:	test   al,0xe4
  415dfb:	inc    esi
  415dfc:	es push esi
  415dfe:	jne    0x415ddf
  415e00:	adc    ebx,DWORD PTR [ebp-0x4c]
  415e03:	push   edi
  415e04:	mov    eax,0x9571a678
  415e09:	pop    ebp
  415e0a:	mov    al,ds:0x3642f09f
  415e0f:	push   esi
  415e10:	pop    ebx
  415e11:	stos   DWORD PTR es:[edi],eax
  415e12:	retf   
  415e13:	xchg   ebx,eax
  415e14:	xor    DWORD PTR gs:[ebp+0x2d],edi
  415e18:	mov    bh,0xd4
  415e1a:	cmc    
  415e1b:	(bad)  
  415e1c:	out    dx,al
  415e1d:	jb     0x415d9f
  415e1f:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  415e21:	les    ebx,FWORD PTR [ecx+0x6488f44c]
  415e27:	icebp  
  415e28:	mov    ebp,0x1d4f7e29
  415e2d:	int3   
  415e2e:	cmp    ah,BYTE PTR [eax]
  415e30:	jmp    0x2ac6a3c9
  415e35:	push   0x837ec45b
  415e3a:	retf   0xb1cc
  415e3d:	pop    edi
  415e3e:	mov    ds:0x585e8f3f,al
  415e43:	push   edi
  415e44:	fmul   DWORD PTR ds:0x7d1668a6
  415e4a:	or     bh,BYTE PTR [edx-0xfab487b]
  415e50:	jg     0x415ea4
  415e52:	or     bh,bl
  415e54:	out    dx,eax
  415e55:	dec    edi
  415e56:	mov    ah,0xd3
  415e58:	cmp    ebp,DWORD PTR [ecx]
  415e5a:	add    ch,BYTE PTR [eax-0x7175704a]
  415e60:	xchg   esi,eax
  415e61:	jae    0x415e0f
  415e63:	ud2    
  415e65:	mov    bl,0x70
  415e67:	mov    dh,0xff
  415e69:	push   ebp
  415e6a:	dec    ecx
  415e6b:	bound  ecx,QWORD PTR [ebp-0x1b]
  415e6e:	lock int3 
  415e70:	xchg   ecx,eax
  415e71:	iret   
  415e72:	pop    ds
  415e73:	(bad)  
  415e74:	rol    dl,0xca
  415e77:	jnp    0x415ec4
  415e79:	xor    DWORD PTR [esi-0x539e19dd],ebp
  415e7f:	and    esi,DWORD PTR [eax-0x11dc5f5b]
  415e85:	int    0x3c
  415e87:	jmp    0x4458:0xeaffd55b
  415e8e:	sbb    dh,BYTE PTR [ebx+0x77]
  415e91:	repnz fwait
  415e93:	mov    esp,0xdfc31cc
  415e98:	jnp    0x415e3e
  415e9a:	into   
  415e9b:	push   ss
  415e9c:	inc    esp
  415e9d:	xor    BYTE PTR [esi+0x1bd6638d],dl
  415ea3:	xchg   ebp,eax
  415ea4:	mov    bh,0xed
  415ea6:	mov    ds:0x3139eb7b,eax
  415eab:	xchg   ebx,eax
  415eac:	loope  0x415e90
  415eae:	cmp    DWORD PTR [edi],0xfa91beb9
  415eb4:	pusha  
  415eb5:	ss std 
  415eb7:	stc    
  415eb8:	push   eax
  415eb9:	xchg   esi,eax
  415eba:	lods   al,BYTE PTR ds:[esi]
  415ebb:	jbe    0x415ea3
  415ebd:	or     DWORD PTR [ebp-0xb],ebp
  415ec0:	stos   DWORD PTR es:[edi],eax
  415ec1:	mov    ah,0xf8
  415ec3:	ffree  st(1)
  415ec5:	jl     0x415e99
  415ec7:	ins    BYTE PTR es:[edi],dx
  415ec8:	sahf   
  415ec9:	jns    0x415e54
  415ecb:	shl    DWORD PTR [edx+0x1c],0xea
  415ecf:	and    al,BYTE PTR [esi-0x74ddc70f]
  415ed5:	inc    ebx
  415ed6:	inc    esp
  415ed7:	mov    cl,0x13
  415ed9:	sbb    ecx,DWORD PTR ds:0xfb429dda
  415edf:	(bad)  
  415ee0:	idiv   edi
  415ee2:	(bad)  
  415ee4:	mov    dh,0x45
  415ee6:	fs test al,0xfb
  415ee9:	push   eax
  415eea:	cdq    
  415eeb:	push   ecx
  415eec:	cdq    
  415eed:	adc    al,0x24
  415eef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ef0:	pop    ecx
  415ef1:	cld    
  415ef2:	push   edx
  415ef3:	dec    ecx
  415ef4:	pop    ebp
  415ef5:	popa   
  415ef6:	gs gs popf 
  415ef9:	fild   DWORD PTR ds:0x1e81d9a1
  415eff:	add    dh,BYTE PTR [ecx]
  415f01:	hlt    
  415f02:	pop    ss
  415f03:	sub    BYTE PTR [edi],cl
  415f05:	(bad)  
  415f06:	xchg   ecx,eax
  415f07:	repz in eax,0x52
  415f0a:	cs aaa 
  415f0c:	test   eax,0x6500e7f6
  415f11:	xchg   esp,eax
  415f12:	and    al,0x77
  415f15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f16:	jne    0x415f4f
  415f18:	xor    eax,0x3fba454c
  415f1d:	push   es
  415f1e:	rcl    DWORD PTR [edx+0x12],1
  415f21:	das    
  415f22:	inc    esp
  415f23:	loope  0x415f8f
  415f25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f26:	ret    
  415f27:	(bad)  
  415f28:	fimul  WORD PTR [eax+esi*1+0x40ce1b8d]
  415f2f:	sub    ch,BYTE PTR [esi]
  415f31:	mov    eax,0x7530021e
  415f36:	das    
  415f37:	push   ebx
  415f38:	inc    esp
  415f39:	pusha  
  415f3a:	dec    ebp
  415f3b:	dec    esi
  415f3c:	mul    dl
  415f3e:	push   edi
  415f3f:	jno    0x415fac
  415f41:	cmp    ebx,DWORD PTR [esi]
  415f43:	xor    al,0x5a
  415f45:	jmp    0x415faf
  415f47:	and    dh,BYTE PTR [ebp+0x631966d8]
  415f4d:	rcl    edi,0x28
  415f50:	loopne 0x415f05
  415f52:	mov    ebp,0x868ca3f3
  415f57:	lahf   
  415f58:	enter  0x48a7,0x48
  415f5c:	enter  0xeb57,0xd8
  415f60:	es cmc 
  415f62:	int    0x59
  415f64:	sub    ebx,edi
  415f66:	jnp    0x415f1f
  415f68:	test   al,0x26
  415f6a:	call   0xde57842c
  415f6f:	ror    DWORD PTR [ebp+0x24],cl
  415f72:	fdivr  DWORD PTR [ebx+0x53]
  415f75:	jge    0x415f92
  415f77:	test   BYTE PTR [ebx],dh
  415f79:	in     eax,dx
  415f7a:	arpl   WORD PTR [ebp+0x65e67e7],bp
  415f80:	fmul   DWORD PTR [edi+eax*1]
  415f83:	push   edi
  415f84:	xor    bl,BYTE PTR [edx]
  415f86:	mov    cl,0xdc
  415f88:	sub    eax,0xd39a68b6
  415f8d:	mov    ebp,0x4435de6e
  415f92:	dec    ecx
  415f93:	sbb    esi,DWORD PTR [eax+eax*1-0x13911728]
  415f9a:	cli    
  415f9b:	fistp  QWORD PTR [edx+edi*8-0x6e]
  415f9f:	cmp    eax,0xc9def2b
  415fa4:	int    0x1a
  415fa6:	popa   
  415fa7:	aam    0x40
  415fa9:	in     al,dx
  415faa:	inc    edi
  415fab:	jbe    0x415ffe
  415fad:	mov    esi,0xea70666f
  415fb2:	cwde   
  415fb3:	sahf   
  415fb4:	js     0x415f9f
  415fb6:	test   DWORD PTR [ebx*1-0x71cea94f],edx
  415fbd:	pop    ebx
  415fbe:	cli    
  415fbf:	int3   
  415fc0:	mov    ch,0x16
  415fc2:	add    DWORD PTR [ebx-0x41],0xc7038396
  415fc9:	fistp  QWORD PTR ds:0x3de75c09
  415fcf:	popa   
  415fd0:	push   edi
  415fd1:	outs   dx,DWORD PTR ds:[esi]
  415fd2:	mov    bh,BYTE PTR [ecx+0x3d]
  415fd5:	push   eax
  415fd6:	mov    esi,0xcb5ab843
  415fdb:	and    DWORD PTR [eax-0x71],esi
  415fde:	pop    edx
  415fdf:	out    dx,al
  415fe0:	rcr    DWORD PTR [ecx+0xb],1
  415fe3:	(bad)  
  415fe4:	stos   BYTE PTR es:[edi],al
  415fe5:	idiv   cl
  415fe7:	jb     0x415fa5
  415fe9:	lahf   
  415fea:	sbb    BYTE PTR [edi+0x4f],bl
  415fed:	push   esp
  415fee:	shl    BYTE PTR ds:0xc205fe95,0x15
  415ff5:	jae    0x415fcb
  415ff7:	lds    esi,FWORD PTR [ebx+0x355fa160]
  415ffd:	sub    ebp,DWORD PTR [edi+0x6]
  416000:	sub    al,BYTE PTR [ecx-0x1f]
  416003:	mul    BYTE PTR [edx+0x3a5e0d16]
  416009:	inc    ebx
  41600a:	js     0x415f97
  41600c:	lods   al,BYTE PTR ds:[esi]
  41600d:	and    BYTE PTR [edx-0x25275f7e],0x88
  416014:	push   es
  416015:	outs   dx,BYTE PTR ds:[esi]
  416016:	mov    edi,0xf841b1e6
  41601b:	cdq    
  41601c:	mov    dl,0xae
  41601e:	lea    ebx,[edi-0x24]
  416021:	loop   0x415fad
  416023:	mov    ds:0x7ea62d2f,al
  416028:	stos   DWORD PTR es:[edi],eax
  416029:	cmp    al,0x1f
  41602b:	xchg   esp,eax
  41602c:	mov    edx,DWORD PTR [edi+0x5]
  41602f:	jp     0x416060
  416031:	mov    esi,0xb3aa361d
  416036:	dec    eax
  416037:	sahf   
  416038:	data16 fwait
  41603a:	or     BYTE PTR [ebx+0xf856adc],al
  416040:	repz cmp bl,bl
  416043:	push   ebx
  416044:	inc    edx
  416045:	xor    BYTE PTR [edx+0x44],bl
  416048:	push   eax
  416049:	cmp    ah,BYTE PTR [eax+ebp*4+0x72]
  41604d:	jl     0x41606b
  41604f:	fistp  QWORD PTR [edx]
  416051:	das    
  416052:	retf   0x1329
  416055:	or     BYTE PTR [eax+eiz*8],cl
  416058:	push   ss
  416059:	pop    ecx
  41605a:	or     ah,BYTE PTR [eax]
  41605c:	test   BYTE PTR [eax+0x4b],0x24
  416060:	jo     0x415fe4
  416062:	mov    esp,?
  416064:	jo     0x416080
  416066:	scas   eax,DWORD PTR es:[edi]
  416067:	jbe    0x4160d7
  416069:	jo     0x416013
  41606b:	xchg   esp,eax
  41606c:	mov    bl,0x91
  41606e:	pop    es
  41606f:	outs   dx,BYTE PTR ds:[esi]
  416070:	in     al,dx
  416071:	dec    ecx
  416072:	xlat   BYTE PTR ds:[ebx]
  416073:	mov    ebx,0xebcafb41
  416078:	xchg   edi,eax
  416079:	jp     0x416005
  41607b:	inc    edi
  41607c:	inc    edi
  41607d:	inc    eax
  41607e:	loop   0x416094
  416080:	idiv   edi
  416082:	test   DWORD PTR [esi],esp
  416084:	sub    eax,0xe1e5d99e
  416089:	sub    DWORD PTR [ebx-0x1e13fede],eax
  41608f:	xchg   ebp,eax
  416090:	xchg   DWORD PTR [esp+ecx*1],edi
  416093:	and    DWORD PTR [ebp+0x12f88f00],ebx
  416099:	cwde   
  41609a:	popf   
  41609b:	mov    al,0x4
  41609d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41609e:	mov    cl,0xde
  4160a0:	dec    edx
  4160a1:	jno    0x4160a4
  4160a3:	aas    
  4160a4:	dec    edx
  4160a5:	into   
  4160a6:	nop
  4160a7:	fnstsw ax
  4160a9:	add    eax,0x2f53c651
  4160ae:	mov    ds:0x58a06be1,eax
  4160b3:	(bad)  
  4160b4:	dec    ebx
  4160b5:	and    al,0x72
  4160b7:	sbb    BYTE PTR [edx],dh
  4160b9:	cmp    BYTE PTR [esi+0x3edc0544],bh
  4160bf:	in     eax,dx
  4160c0:	aam    0x95
  4160c2:	cmp    al,0xab
  4160c4:	test   eax,0x5b580626
  4160c9:	mov    ds:0x40c6c8c7,al
  4160ce:	inc    ebx
  4160cf:	mov    ebp,0x224de903
  4160d4:	mov    cl,0x26
  4160d6:	adc    esi,DWORD PTR [edi+0x7225ea4b]
  4160dc:	mov    ebp,0x6da22502
  4160e1:	inc    ecx
  4160e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160e3:	ja     0x4160e4
  4160e5:	jmp    0xedc3a899
  4160ea:	stc    
  4160eb:	pop    ds
  4160ec:	test   BYTE PTR [edx],0x7b
  4160ef:	shl    BYTE PTR [edx+0x3a296c91],0x21
  4160f6:	out    0x5f,al
  4160f8:	cmp    dh,BYTE PTR ds:0x61911ad9
  4160fe:	jnp    0x4160d9
  416100:	xchg   esi,eax
  416101:	aad    0x4a
  416103:	mov    bh,0x87
  416105:	xchg   BYTE PTR [edi+0x56f9b070],ah
  41610b:	adc    al,0x87
  41610d:	aam    0x40
  41610f:	es mov cl,0x82
  416112:	cmp    al,BYTE PTR [ebx-0x21]
  416115:	cmp    dl,dh
  416117:	fs mov dh,0x2b
  41611a:	and    DWORD PTR [esi+ebx*1-0x70d9cbd],0xffffffdc
  416122:	retf   
  416123:	cmp    BYTE PTR [edx],ch
  416125:	mov    ?,WORD PTR [edi+edi*8]
  416128:	adc    ebp,DWORD PTR ds:0x2e713b26
  41612e:	jecxz  0x4161a1
  416130:	sub    bl,BYTE PTR [edi]
  416132:	mov    al,0x51
  416134:	pop    es
  416135:	scas   eax,DWORD PTR es:[edi]
  416136:	sbb    ebx,edi
  416138:	or     BYTE PTR [eax-0x26715bca],bh
  41613e:	xor    eax,0xfb9e12ae
  416143:	push   esp
  416144:	or     ebx,ebx
  416146:	push   ebx
  416147:	or     eax,0x9d5e8119
  41614c:	call   0x1dba4fdc
  416151:	sub    ebx,ebp
  416153:	sub    al,0x5f
  416155:	stos   BYTE PTR es:[edi],al
  416156:	jo     0x416142
  416158:	ss and eax,0xd7fe9f13
  41615e:	mov    edi,0xf7e2a8
  416163:	xchg   edi,eax
  416164:	push   0xb003309c
  416169:	xor    al,BYTE PTR [edi+eax*8+0x30]
  41616d:	jmp    0xa0507dba
  416172:	aam    0xce
  416174:	add    ebp,0xffffffdf
  416177:	xlat   BYTE PTR ds:[ebx]
  416178:	ffree  st(7)
  41617a:	gs jg  0x4161be
  41617d:	ret    
  41617e:	or     al,0x1b
  416180:	lds    ecx,FWORD PTR [edi]
  416182:	test   ebp,edx
  416184:	push   edi
  416185:	xchg   dl,dl
  416187:	push   eax
  416188:	cmp    edx,DWORD PTR [eax-0x7a]
  41618b:	sar    edx,cl
  41618d:	lock retf 0x6658
  416191:	shl    BYTE PTR [edi-0xa],1
  416194:	dec    ebp
  416195:	jo     0x416125
  416197:	sub    edi,DWORD PTR [edx-0xd]
  41619a:	cmp    al,0xd0
  41619c:	add    DWORD PTR [esi+0x70],eax
  41619f:	imul   edi,DWORD PTR ds:0xd128c68f,0xffffff8c
  4161a6:	mov    eax,0x6f1285db
  4161ab:	sbb    al,0x72
  4161ad:	xchg   edi,eax
  4161ae:	loop   0x416172
  4161b0:	test   BYTE PTR [edi+0x5adad793],ah
  4161b6:	adc    ecx,0x4061167d
  4161bc:	push   0x9af197fa
  4161c1:	sub    bl,cl
  4161c3:	icebp  
  4161c4:	cmp    eax,0xffc1f583
  4161c9:	vmaxps ymm0,ymm3,YMMWORD PTR [ecx-0x5c81b822]
  4161d1:	jmp    0x416236
  4161d3:	mov    edi,0x3fe23349
  4161d8:	add    eax,0x765c6bb9
  4161dd:	nop
  4161de:	ins    BYTE PTR es:[edi],dx
  4161df:	aad    0x15
  4161e1:	test   ecx,ebx
  4161e3:	xor    dl,BYTE PTR [edx+0x18]
  4161e6:	mov    al,BYTE PTR [ebx]
  4161e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161e9:	jae    0x4161d3
  4161eb:	mov    cl,0x40
  4161ed:	mov    ah,0xce
  4161ef:	ret    
  4161f0:	cmp    esi,DWORD PTR [ebp-0x75]
  4161f3:	mov    ds:0x6d981572,al
  4161f8:	out    dx,eax
  4161f9:	pop    es
  4161fa:	sbb    eax,0x47bd25e7
  4161ff:	test   eax,0x948a39f3
  416204:	dec    esp
  416205:	mov    al,0x19
  416207:	sub    dl,al
  416209:	(bad)  
  41620a:	adc    eax,0xd416b671
  41620f:	pop    ss
  416210:	mov    ebp,0x3cdd508c
  416215:	cli    
  416216:	pop    edx
  416217:	ss in  eax,0x5f
  41621a:	scas   eax,DWORD PTR es:[edi]
  41621b:	xchg   esp,eax
  41621c:	mov    ecx,0xede6b3c6
  416221:	ins    BYTE PTR es:[edi],dx
  416222:	dec    esp
  416223:	xor    esi,DWORD PTR [edx]
  416225:	dec    esp
  416226:	lods   eax,DWORD PTR ds:[esi]
  416227:	pop    esp
  416228:	jae    0x4161f9
  41622a:	stos   DWORD PTR es:[edi],eax
  41622b:	popf   
  41622c:	jl     0x4161e6
  41622e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41622f:	loop   0x416238
  416231:	inc    edx
  416232:	mov    bl,0x2c
  416234:	push   ebx
  416235:	lods   eax,DWORD PTR ds:[esi]
  416236:	xchg   ebx,eax
  416237:	out    0x0,al
  416239:	mov    bh,0xd3
  41623b:	push   esp
  41623c:	aam    0x4d
  41623e:	xor    esi,ebp
  416240:	sub    edx,DWORD PTR [eax+eiz*4]
  416243:	mov    bh,0x4a
  416245:	mul    DWORD PTR [ebp+0x6602833d]
  41624b:	mov    eax,ds:0x1e59fb76
  416250:	cmp    ch,ch
  416252:	adc    ebx,0x3e950b5e
  416258:	les    ebx,FWORD PTR [edi+0x5b]
  41625b:	jnp    0x41627e
  41625d:	pop    esp
  41625e:	je     0x416214
  416260:	lea    ecx,[ebx-0x56]
  416263:	scas   al,BYTE PTR es:[edi]
  416264:	loop   0x416298
  416266:	popf   
  416267:	(bad)  
  416268:	out    0x17,al
  41626a:	or     BYTE PTR [esi+0x66a361e4],dl
  416270:	add    BYTE PTR [eax+0x146de2dd],bh
  416276:	xchg   edx,eax
  416277:	cmp    DWORD PTR [edx+0x5a],0x51
  41627b:	xor    BYTE PTR [eax-0x4493e414],ch
  416281:	xor    DWORD PTR [eax],esi
  416283:	out    0x91,eax
  416285:	xchg   edx,eax
  416286:	sub    eax,DWORD PTR [edi+ebx*8-0x62]
  41628a:	out    0x78,eax
  41628c:	mov    BYTE PTR [ebx],ch
  41628e:	ret    0x4cac
  416291:	retf   0x770e
  416294:	adc    ebp,DWORD PTR [eax]
  416296:	fwait
  416297:	xchg   ebp,eax
  416298:	xor    eax,0x48841f34
  41629d:	xor    bh,BYTE PTR [ecx-0x79]
  4162a0:	mov    ds:0x71432000,eax
  4162a5:	shl    DWORD PTR [edi],0x39
  4162a8:	scas   al,BYTE PTR es:[di]
  4162aa:	mov    esp,0xf61cf235
  4162af:	inc    ebp
  4162b0:	loop   0x4162a4
  4162b2:	pop    edi
  4162b3:	ins    BYTE PTR es:[edi],dx
  4162b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162b5:	retf   
  4162b6:	shr    DWORD PTR [esi],0xb4
  4162b9:	mov    edi,ebx
  4162bb:	add    bh,BYTE PTR [ecx]
  4162bd:	mov    ch,0x98
  4162bf:	dec    ecx
  4162c0:	out    dx,al
  4162c1:	xor    DWORD PTR [ebx-0x5a2c803],0x12
  4162c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162c9:	call   0xf1cf9fd
  4162ce:	xchg   edx,ebx
  4162d0:	add    BYTE PTR [esi],0x4
  4162d3:	jno    0x4162a8
  4162d5:	dec    esp
  4162d6:	sbb    eax,0x279db110
  4162db:	mov    eax,0x367e764d
  4162e0:	dec    ah
  4162e2:	adc    eax,0x36ee11ec
  4162e7:	pop    es
  4162e8:	cmp    BYTE PTR [eax],bh
  4162ea:	fist   DWORD PTR [edx-0x320e0015]
  4162f0:	hlt    
  4162f1:	test   DWORD PTR [edi+eiz*8-0x150444ad],0x162c25b4
  4162fc:	mov    esi,0xb7372573
  416301:	mov    BYTE PTR [edx+0x2d],bh
  416304:	and    al,0x56
  416306:	inc    ebx
  416307:	mov    esp,0x5437756b
  41630c:	xchg   ebp,eax
  41630d:	arpl   WORD PTR [esi+0x70a842d5],si
  416313:	aaa    
  416314:	xor    ah,BYTE PTR [ecx]
  416316:	test   al,0x6f
  416318:	clc    
  416319:	cmc    
  41631a:	xor    dh,BYTE PTR [ebx+0x57]
  41631d:	or     bh,BYTE PTR [edx]
  41631f:	and    dh,BYTE PTR [edi+0x30e1cda2]
  416325:	sub    ebp,DWORD PTR [ebp+0x24]
  416328:	fidivr WORD PTR [ecx]
  41632a:	popa   
  41632b:	pop    esp
  41632c:	sub    al,0x55
  41632e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41632f:	(bad)  
  416330:	int    0x50
  416332:	dec    esi
  416333:	mov    ecx,esp
  416335:	stos   BYTE PTR es:[edi],al
  416336:	loopne 0x416333
  416338:	push   esp
  416339:	pop    ds
  41633a:	loop   0x416303
  41633c:	pop    ecx
  41633d:	pop    es
  41633e:	or     BYTE PTR [eax+0x79],dl
  416341:	les    ebx,FWORD PTR [eax-0x202b2ec8]
  416347:	std    
  416348:	xor    dl,0xc9
  41634b:	in     eax,0xe6
  41634d:	data16 mov al,0x84
  416350:	outs   dx,DWORD PTR ds:[esi]
  416351:	mov    ds:0x3e961344,ax
  416357:	icebp  
  416358:	das    
  416359:	jno    0x4163bd
  41635b:	xchg   BYTE PTR [edi],ah
  41635d:	mov    ah,0xd0
  41635f:	int3   
  416360:	jb     0x4163cd
  416362:	push   0x69
  416364:	inc    esi
  416365:	sbb    DWORD PTR [edi+0x509b121e],edi
  41636b:	mov    bh,0xc4
  41636d:	dec    BYTE PTR [edi-0x6d]
  416370:	ins    DWORD PTR es:[edi],dx
  416371:	mov    edx,0xca4cb63d
  416376:	jle    0x4163c7
  416378:	and    al,0x15
  41637a:	inc    edx
  41637b:	sbb    ebx,DWORD PTR [eax+0x67c7873f]
  416381:	shr    BYTE PTR [eax-0x25],1
  416384:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416385:	retf   
  416386:	sbb    DWORD PTR [ebp-0xbc95c7e],edx
  41638c:	mov    edx,DWORD PTR [eax+eax*1-0x34e73480]
  416393:	test   DWORD PTR [edi+ebp*4],0xb1b15131
  41639a:	in     eax,dx
  41639b:	and    eax,0xf7ba1993
  4163a0:	cmp    esi,DWORD PTR [eax]
  4163a2:	or     dl,BYTE PTR [ecx]
  4163a4:	or     al,0x73
  4163a6:	mov    dl,0x39
  4163a8:	pushf  
  4163a9:	or     dh,BYTE PTR [eax+esi*8-0x201020a0]
  4163b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163b1:	test   BYTE PTR [ebx],al
  4163b3:	mov    esp,0x7764cf4c
  4163b8:	cli    
  4163b9:	jmp    0xb65c:0xf34a43fb
  4163c0:	dec    ecx
  4163c1:	sub    al,0x53
  4163c3:	cwde   
  4163c4:	xchg   ebp,eax
  4163c5:	and    al,0x19
  4163c7:	stos   BYTE PTR es:[edi],al
  4163c8:	shl    al,0x18
  4163cb:	sbb    al,0x58
  4163cd:	(bad)  
  4163ce:	sbb    ecx,DWORD PTR [ecx-0x79917ec4]
  4163d4:	mov    ah,0x18
  4163d6:	mov    edi,0x8517d4f9
  4163db:	fnsave [ebp-0x5c3b4122]
  4163e1:	jae    0x4163bc
  4163e3:	(bad)  
  4163e4:	and    bl,dl
  4163e6:	push   0x8b3ecc26
  4163eb:	aam    0x37
  4163ed:	push   es
  4163ee:	addr16 jle 0x416461
  4163f1:	mov    ?,ebx
  4163f3:	sbb    BYTE PTR [eax+ebx*2],bh
  4163f6:	cli    
  4163f7:	ss stos BYTE PTR es:[edi],al
  4163f9:	imul   edi,DWORD PTR [ecx],0x7585355f
  4163ff:	and    cl,BYTE PTR [ecx]
  416401:	ret    0xeae9
  416404:	ficomp WORD PTR [ecx+ebx*1]
  416407:	mov    ecx,0xda348e41
  41640c:	stos   BYTE PTR es:[edi],al
  41640d:	pusha  
  41640e:	inc    esp
  41640f:	ficomp WORD PTR [ecx-0x74b3c513]
  416415:	xor    DWORD PTR [ebp+edi*8-0x90d844d],edi
  41641c:	fcomi  st,st(2)
  41641e:	int3   
  41641f:	lods   eax,DWORD PTR ds:[esi]
  416420:	push   cs
  416421:	hlt    
  416422:	or     eax,0xa4ddc81a
  416427:	mov    ds:0xb9f20c41,eax
  41642c:	lock or eax,0x92659f35
  416432:	(bad)  
  416433:	int3   
  416434:	out    0x39,al
  416436:	push   ss
  416437:	sbb    DWORD PTR [eax+0x62],edi
  41643a:	je     0x4164a1
  41643c:	xchg   esp,eax
  41643d:	cdq    
  41643e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41643f:	mov    dh,0x4
  416441:	push   esp
  416442:	int3   
  416443:	retf   
  416444:	push   ss
  416445:	sub    al,0x3b
  416447:	sti    
  416448:	adc    al,0xf0
  41644a:	rsm    
  41644c:	sti    
  41644d:	mov    dh,0x44
  41644f:	pop    edi
  416450:	daa    
  416451:	push   0xffffffda
  416453:	cs std 
  416455:	inc    esi
  416456:	into   
  416457:	cld    
  416458:	mov    bh,0x7b
  41645a:	aad    0xca
  41645c:	(bad)  
  41645d:	xchg   ecx,eax
  41645e:	int3   
  41645f:	fidivr WORD PTR [ebx-0x6e]
  416462:	lahf   
  416463:	sti    
  416464:	or     ebp,DWORD PTR [esi-0x9]
  416467:	test   eax,0x8a8e28c6
  41646c:	xchg   esp,eax
  41646d:	and    ebx,DWORD PTR [esi]
  41646f:	aam    0x6c
  416471:	sbb    ch,BYTE PTR [eax+0x78c527ff]
  416477:	mov    cl,0x3f
  41647a:	lods   al,BYTE PTR ds:[esi]
  41647b:	imul   ecx,DWORD PTR [ebx],0x67
  41647e:	xchg   ebx,eax
  41647f:	lods   eax,DWORD PTR ds:[esi]
  416480:	jg     0x416432
  416482:	aad    0x34
  416484:	dec    ebp
  416485:	pusha  
  416486:	xchg   edx,eax
  416487:	ss pop eax
  416489:	and    BYTE PTR [edi+edi*4],cl
  41648c:	pusha  
  41648d:	(bad)  
  41648e:	hlt    
  41648f:	(bad)  
  416490:	int3   
  416491:	inc    ecx
  416492:	hlt    
  416493:	or     ebx,ecx
  416495:	or     BYTE PTR [ebx-0x45],0x1e
  416499:	fcmovnb st,st(6)
  41649b:	(bad)  
  41649c:	fidiv  WORD PTR [ebp+0x4a]
  41649f:	lds    ebx,FWORD PTR [ecx]
  4164a1:	in     al,dx
  4164a2:	mov    ebp,0xc26b44d
  4164a7:	leave  
  4164a8:	div    DWORD PTR [ebp+0x22]
  4164ab:	pop    edx
  4164ac:	dec    esi
  4164ad:	xor    ecx,DWORD PTR [edi+0x67dc74c1]
  4164b3:	sbb    eax,0x5c62d94c
  4164b8:	mov    ch,0x57
  4164ba:	jmp    0xf749a46c
  4164bf:	ja     0x416442
  4164c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164c2:	jecxz  0x4164ad
  4164c4:	mov    ds:0xe61dbc1,eax
  4164c9:	xor    bl,BYTE PTR [ebx]
  4164cb:	push   ss
  4164cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164cd:	or     eax,0x3fd439c4
  4164d2:	jle    0x41648b
  4164d4:	pop    ecx
  4164d5:	xor    bl,dl
  4164d7:	xchg   edx,eax
  4164d8:	imul   edx,eax,0xffffffd3
  4164db:	or     DWORD PTR [eax+0x507ef634],edx
  4164e1:	mov    eax,ds:0x3f2d7589
  4164e6:	stos   BYTE PTR es:[edi],al
  4164e7:	lahf   
  4164e8:	xchg   edx,eax
  4164e9:	aaa    
  4164ea:	neg    dh
  4164ec:	(bad)  
  4164ed:	in     al,dx
  4164ee:	mov    eax,DWORD PTR [ebx-0x27]
  4164f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164f2:	je     0x416552
  4164f4:	mov    al,ds:0xb0549122
  4164f9:	gs pop edi
  4164fb:	xchg   edi,eax
  4164fc:	add    cl,BYTE PTR [edi-0x13]
  4164ff:	sub    eax,0x2caf967c
  416504:	in     al,dx
  416505:	jp     0x416547
  416507:	test   BYTE PTR [edi+0x5f],al
  41650a:	sbb    ch,bl
  41650c:	rcr    DWORD PTR ds:0x35ba9b2a,cl
  416512:	inc    ebp
  416513:	int3   
  416514:	pop    eax
  416515:	cmc    
  416516:	pop    es
  416517:	push   eax
  416518:	add    eax,0x176d6d4d
  41651d:	push   ebx
  41651e:	and    BYTE PTR [esi],0x6e
  416521:	mov    bl,0xa2
  416523:	inc    eax
  416524:	inc    ebp
  416525:	std    
  416526:	pmullw mm4,QWORD PTR [edi]
  416529:	mov    ebx,0xa8587683
  41652e:	idiv   ch
  416530:	mov    ds,WORD PTR [esi+0x5b04b27a]
  416536:	or     eax,edi
  416538:	out    dx,eax
  416539:	(bad)  
  41653a:	mov    eax,0x848a3a5e
  41653f:	jns    0x41652f
  416541:	or     al,0xe
  416543:	jb     0x4164eb
  416545:	fiadd  DWORD PTR [esi-0xa]
  416548:	cmp    al,0xda
  41654a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41654b:	xchg   esi,eax
  41654c:	adc    BYTE PTR ds:0xaacc5943,0xa8
  416553:	mov    bl,0xdf
  416555:	call   0xe080bcfe
  41655a:	xor    dl,BYTE PTR [ecx-0x2d80cab]
  416560:	inc    eax
  416561:	lds    ecx,FWORD PTR [edx-0x58e735bb]
  416567:	push   ebx
  416568:	jne    0x416585
  41656a:	xor    dh,BYTE PTR ds:0x4921eda9
  416570:	repnz xchg ebp,eax
  416572:	mov    ebx,0xfb24cd2d
  416577:	loop   0x41651b
  416579:	push   0xedc30c31
  41657e:	mov    dl,BYTE PTR [edi-0x76b84ed7]
  416584:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416585:	dec    ebx
  416586:	mov    bl,ch
  416588:	dec    esi
  416589:	inc    esi
  41658a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41658b:	sti    
  41658c:	push   edx
  41658d:	fistp  QWORD PTR [ebx]
  41658f:	xor    BYTE PTR [esi+ebp*4+0x4c],ch
  416593:	xor    DWORD PTR [eax],edx
  416595:	dec    edx
  416596:	jns    0x41659d
  416598:	pop    ebp
  416599:	xor    DWORD PTR [eax+0x10],edx
  41659c:	hlt    
  41659d:	cmp    eax,edx
  41659f:	sbb    al,0xb7
  4165a1:	shl    BYTE PTR [ecx-0x41f99bdd],0x17
  4165a8:	push   edi
  4165a9:	or     BYTE PTR [edi],bl
  4165ab:	dec    esp
  4165ac:	sar    BYTE PTR [esi-0x9],0x7e
  4165b0:	iret   
  4165b1:	cmc    
  4165b2:	inc    ecx
  4165b3:	and    al,BYTE PTR [ebp-0x21a93ca1]
  4165b9:	cmp    ecx,DWORD PTR [esi+0x21e5ed02]
  4165bf:	xchg   BYTE PTR [edi+0x12d08113],bl
  4165c5:	sub    DWORD PTR [edx],ebp
  4165c7:	test   DWORD PTR [edi],edx
  4165c9:	icebp  
  4165ca:	xchg   ebp,eax
  4165cb:	xchg   ebx,eax
  4165cc:	nop
  4165cd:	xor    DWORD PTR [ecx],0x3d
  4165d0:	xchg   ebp,eax
  4165d1:	dec    ebp
  4165d2:	dec    eax
  4165d3:	fsub   QWORD PTR [ebx+0x1a]
  4165d6:	(bad)  
  4165d7:	cmp    DWORD PTR [eax-0x7],ebp
  4165da:	fs or  eax,0x12896289
  4165e0:	mov    eax,0x6b24b3ae
  4165e5:	sbb    eax,0x530ddea7
  4165ea:	pusha  
  4165eb:	into   
  4165ec:	cmp    eax,0x548ec74a
  4165f1:	sbb    DWORD PTR [edx],ebp
  4165f3:	mov    bh,0xca
  4165f5:	push   ebp
  4165f6:	retf   0x64c5
  4165f9:	ret    0xd968
  4165fc:	rol    DWORD PTR [ecx+0x46],0x9e
  416600:	sub    eax,esp
  416602:	mov    eax,ds:0xb69f6428
  416607:	jns    0x416612
  416609:	jecxz  0x416655
  41660b:	mov    bh,0x11
  41660d:	jecxz  0x416649
  41660f:	jle    0x41667c
  416611:	or     DWORD PTR [edx-0x5659873f],esi
  416617:	dec    esi
  416618:	outs   dx,DWORD PTR ds:[esi]
  416619:	dec    ecx
  41661a:	fcom   DWORD PTR [ebx]
  41661c:	xchg   edi,eax
  41661d:	inc    eax
  41661e:	mov    edx,0xd9e89c85
  416623:	mov    esi,0xb2d5a953
  416628:	rol    BYTE PTR [eax],cl
  41662a:	sbb    ch,BYTE PTR [edx]
  41662c:	xlat   BYTE PTR ds:[ebx]
  41662d:	fist   WORD PTR [edx+0x6d0c2ddb]
  416633:	mov    dl,0xcd
  416635:	hlt    
  416636:	push   ss
  416637:	jge    0x4165ef
  416639:	retf   0xab09
  41663c:	ror    DWORD PTR [ebp+0x6d9b2018],cl
  416642:	sbb    BYTE PTR [esi-0x1],dh
  416645:	jmp    0x7c14:0x1c1adad1
  41664c:	icebp  
  41664d:	pusha  
  41664e:	mov    dl,BYTE PTR [ecx]
  416650:	in     eax,dx
  416651:	call   0x50c7:0x3b0f9c94
  416658:	or     bl,BYTE PTR ds:0x424a0051
  41665e:	dec    ebx
  41665f:	int    0xa5
  416661:	dec    edx
  416662:	inc    ebx
  416663:	mov    dh,0xca
  416665:	add    al,0x40
  416667:	mov    edi,0xd5a79c27
  41666c:	cmp    eax,DWORD PTR [esi+0x9]
  41666f:	jg     0x41660a
  416671:	add    esi,edx
  416673:	push   0x55c1bd5d
  416678:	ds xchg ebx,eax
  41667a:	ins    BYTE PTR es:[edi],dx
  41667b:	test   al,0x82
  41667d:	cmp    DWORD PTR [ebx],ecx
  41667f:	mov    eax,0xbce7b014
  416684:	jo     0x416629
  416686:	inc    eax
  416687:	call   0xd374e17e
  41668c:	sub    eax,0x1f8788c7
  416691:	mul    DWORD PTR [ecx+edx*4+0x5c]
  416695:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416696:	out    dx,eax
  416697:	iret   
  416698:	cmp    al,0x75
  41669a:	rol    esi,cl
  41669c:	sub    eax,0xebff4a3a
  4166a1:	xchg   edx,eax
  4166a2:	in     eax,0x4
  4166a4:	ja     0x4166cd
  4166a6:	pop    ecx
  4166a7:	in     eax,dx
  4166a8:	xlat   BYTE PTR ds:[ebx]
  4166a9:	ss xchg esi,eax
  4166ab:	imul   ecx,DWORD PTR ds:0x234837e8,0xed895a99
  4166b5:	in     al,0x86
  4166b7:	or     eax,0x176f48d1
  4166bc:	add    BYTE PTR [ecx],bh
  4166be:	call   0x3ec6eb41
  4166c3:	jmp    0xc4e9:0xb83e838a
  4166ca:	mov    bh,0x8b
  4166cc:	iret   
  4166cd:	test   BYTE PTR [eax],bl
  4166cf:	pop    edi
  4166d0:	jmp    0xad7f:0xb017079b
  4166d7:	loope  0x41670b
  4166d9:	lock pop ds
  4166db:	lods   al,BYTE PTR ds:[esi]
  4166dc:	cmp    eax,edi
  4166de:	sbb    bh,bl
  4166e0:	inc    ebx
  4166e1:	pop    ebp
  4166e2:	pop    ds
  4166e3:	daa    
  4166e4:	push   eax
  4166e5:	jle    0x416719
  4166e7:	inc    esp
  4166e8:	popa   
  4166e9:	adc    DWORD PTR [esi+0x44327577],esi
  4166ef:	adc    eax,0x826ddfcf
  4166f4:	in     al,0xf7
  4166f6:	scas   eax,DWORD PTR es:[edi]
  4166f7:	xchg   edi,eax
  4166f8:	fst    QWORD PTR [edi+edx*1-0x5208816e]
  4166ff:	mov    bl,0x2c
  416701:	pop    esi
  416702:	retf   
  416703:	sbb    bl,BYTE PTR [edi-0x29]
  416706:	das    
  416707:	ror    DWORD PTR [ebp+0x296cca6e],0xbc
  41670e:	sbb    DWORD PTR [edi+eax*4-0xf],ebp
  416712:	in     al,0xbd
  416714:	mov    esi,DWORD PTR [eax+0x21]
  416717:	or     DWORD PTR [esp+ebx*1-0x51],edi
  41671b:	ins    BYTE PTR es:[edi],dx
  41671c:	xchg   ebp,eax
  41671d:	cmc    
  41671e:	add    eax,0x37715a2
  416723:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416724:	adc    BYTE PTR [ecx],0x7e
  416727:	mov    esi,0x60036022
  41672c:	mov    al,0xbe
  41672e:	scas   al,BYTE PTR es:[edi]
  41672f:	cmp    edx,esi
  416731:	call   0x65df:0x318bf8ad
  416738:	adc    BYTE PTR [edx],dl
  41673a:	push   esi
  41673b:	mov    ecx,edx
  41673d:	jne    0x4166cc
  41673f:	jg     0x4166f7
  416741:	sbb    DWORD PTR [edx-0x59],eax
  416744:	mov    eax,0xbef1c9ca
  416749:	jmp    0x41671f
  41674b:	and    edi,ebx
  41674d:	jne    0x4166da
  41674f:	test   eax,0xe0075d73
  416754:	and    al,0xa7
  416756:	jns    0x416759
  416758:	mov    ebp,0x222524f8
  41675d:	mov    bl,0xee
  41675f:	pop    esi
  416760:	mov    al,ds:0x254c6386
  416765:	jb     0x4167cd
  416767:	mov    esp,0xde629539
  41676c:	imul   eax,DWORD PTR [edx+0x5fb27cef],0x2
  416773:	out    0x81,eax
  416775:	pop    es
  416776:	add    DWORD PTR [eax-0x6c],esi
  416779:	(bad)  
  41677a:	in     eax,0x7a
  41677c:	sub    eax,esp
  41677e:	outs   dx,BYTE PTR ds:[esi]
  41677f:	cmp    ebp,DWORD PTR [esi-0x4e]
  416782:	ja     0x4167c4
  416784:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416785:	mov    esi,0xce73d34
  41678a:	test   al,0x8d
  41678c:	hlt    
  41678d:	jmp    0x41676c
  41678f:	mov    ds:0x4f5e8ba1,eax
  416794:	nop
  416795:	aad    0xd
  416797:	lods   al,BYTE PTR ds:[esi]
  416798:	lock clc 
  41679a:	out    dx,eax
  41679b:	push   edi
  41679c:	frstor ds:0xdfb51146
  4167a2:	xor    al,BYTE PTR [edx]
  4167a4:	push   0x955930d1
  4167a9:	loopne 0x4167aa
  4167ab:	adc    al,0x49
  4167ad:	aad    0xc6
  4167af:	fwait
  4167b0:	add    eax,0x53b1e8d
  4167b5:	sbb    DWORD PTR [edi+0x563c6de6],ebp
  4167bb:	cmc    
  4167bc:	pop    esp
  4167bd:	loope  0x4167ec
  4167bf:	add    eax,0x4b4f5f12
  4167c4:	add    BYTE PTR [esi+0x63690f34],dh
  4167ca:	add    cl,BYTE PTR [edx-0x5e8e]
  4167d0:	test   BYTE PTR [edi+0x4c2025d4],bl
  4167d6:	xor    DWORD PTR [edi-0x11e3d4a8],edi
  4167dc:	in     eax,dx
  4167dd:	push   edx
  4167de:	inc    esi
  4167df:	call   0x206a:0x25709e8f
  4167e6:	(bad)  
  4167e7:	mov    dl,0x8e
  4167e9:	xchg   edx,eax
  4167ea:	call   0x4bc5:0x406beb15
  4167f1:	ret    0x92a4
  4167f4:	loopne 0x416810
  4167f6:	cmp    DWORD PTR [ecx-0x4c],edx
  4167f9:	mov    bl,0xc5
  4167fb:	loop   0x4167d4
  4167fd:	aad    0xa1
  4167ff:	popa   
  416800:	pop    edx
  416801:	xor    esi,edi
  416803:	out    dx,eax
  416804:	add    DWORD PTR [esi+ecx*4],0xffffffbc
  416808:	inc    ecx
  416809:	aam    0x57
  41680b:	lea    esi,[ecx+0x70]
  41680e:	sti    
  41680f:	mov    ch,bl
  416811:	pushf  
  416812:	test   DWORD PTR [ecx+0xdc784bd],esp
  416818:	or     al,0x97
  41681a:	add    al,0x57
  41681c:	mov    ebx,0x531cffc4
  416821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416822:	inc    edi
  416823:	fbstp  TBYTE PTR [ecx+0x1f]
  416826:	ja     0x41680e
  416828:	xor    eax,0xfec65626
  41682d:	inc    esi
  41682e:	int    0xf7
  416830:	jne    0x4168a5
  416832:	adc    DWORD PTR [edi+eax*2-0x4a0ec6dd],0xcd45cc29
  41683d:	xchg   edx,eax
  41683e:	inc    ebp
  41683f:	pop    edx
  416840:	cmp    al,0x56
  416842:	add    eax,0x56c44275
  416847:	nop
  416848:	inc    esp
  416849:	pop    ecx
  41684a:	fldcw  WORD PTR [edi-0x27]
  41684d:	mov    cl,0x33
  41684f:	xor    al,0xd0
  416851:	mov    dl,0xfd
  416853:	inc    esp
  416854:	and    cl,bl
  416856:	in     eax,0x7e
  416858:	add    BYTE PTR [esi-0x5f],bh
  41685b:	mov    dl,0xca
  41685d:	rcl    BYTE PTR [ebp+0x3d5da6ab],cl
  416863:	addr16 mov ch,0x8
  416866:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416867:	sahf   
  416868:	popf   
  416869:	sti    
  41686a:	(bad)  
  41686b:	xchg   ecx,eax
  41686c:	aaa    
  41686d:	popa   
  41686e:	mov    ebp,0xad9f4769
  416873:	push   ecx
  416874:	fldenv [eax]
  416876:	(bad)  
  416877:	mov    dl,al
  416879:	push   ds
  41687a:	icebp  
  41687b:	mov    esi,0x12318208
  416880:	push   es
  416881:	leave  
  416882:	ret    0x3d2e
  416885:	pop    es
  416886:	xor    DWORD PTR [ecx-0x39697255],ecx
  41688c:	cmp    BYTE PTR [edx],cl
  41688e:	push   0xffffffa2
  416890:	call   0x6ec4a29f
  416895:	push   eax
  416896:	mov    bh,0xef
  416898:	nop
  416899:	rol    BYTE PTR [esi+ebp*1+0x77871bb4],1
  4168a0:	rcl    DWORD PTR ds:0xdace2086,0x42
  4168a7:	jne    0x416844
  4168a9:	inc    eax
  4168aa:	jnp    0x41691e
  4168ac:	mov    BYTE PTR [esi],0x8e
  4168af:	push   cs
  4168b0:	fiadd  DWORD PTR [ebx-0x53]
  4168b3:	xor    eax,0x649764da
  4168b8:	mov    WORD PTR [ebx-0x53997bc3],ds
  4168be:	xchg   DWORD PTR [edx-0x624d4a43],ecx
  4168c4:	push   0xbf0cbcb1
  4168c9:	xor    eax,0x26c4c25c
  4168cf:	lods   eax,DWORD PTR ds:[esi]
  4168d0:	cmc    
  4168d1:	into   
  4168d2:	into   
  4168d3:	repnz ds push ss
  4168d6:	test   eax,0x8c15b12c
  4168db:	inc    eax
  4168dc:	test   DWORD PTR [eax],ecx
  4168de:	adc    bh,BYTE PTR [edi]
  4168e0:	sub    eax,0xb78a48d
  4168e5:	push   es
  4168e6:	out    0xce,al
  4168e8:	add    DWORD PTR [eax],ebx
  4168ea:	in     al,dx
  4168eb:	and    ebx,edi
  4168ed:	mov    ch,0xe2
  4168ef:	jae    0x4168b1
  4168f1:	cwde   
  4168f2:	mov    ebx,DWORD PTR [ecx]
  4168f4:	push   edx
  4168f5:	xor    DWORD PTR [ebp-0x32a2210c],edx
  4168fb:	fisub  WORD PTR [edx+0x5f]
  4168fe:	je     0x416976
  416900:	stos   BYTE PTR es:[edi],al
  416901:	or     dl,dl
  416903:	mov    cl,0x3c
  416905:	cmp    edi,DWORD PTR [eax-0x2310dbda]
  41690b:	arpl   WORD PTR [ebp-0x29],sp
  41690e:	popf   
  41690f:	cli    
  416910:	jge    0x4168ad
  416912:	or     ecx,eax
  416914:	popf   
  416915:	inc    edi
  416916:	ins    BYTE PTR es:[edi],dx
  416917:	repnz (bad)
  41691a:	addr16 mov ebx,0x87f3d46c
  416920:	cmp    DWORD PTR [ebx],ecx
  416922:	push   ax
  416924:	(bad)  
  416926:	sbb    BYTE PTR [eax+0x69bf6516],dl
  41692c:	dec    ebx
  41692d:	jmp    0x2367:0x5ac86e34
  416934:	mov    ebp,0x805a75af
  416939:	or     DWORD PTR [ebp-0x4a],ebp
  41693c:	and    BYTE PTR [esi+0x61a8410e],bh
  416942:	fstp   st(3)
  416944:	dec    BYTE PTR [ebx+edi*2-0x749b3fb5]
  41694b:	jns    0x416930
  41694d:	(bad)  
  41694e:	shr    BYTE PTR [ebp+0x4d],1
  416951:	daa    
  416952:	xor    BYTE PTR [esi+ebx*8+0x5e],ah
  416956:	icebp  
  416957:	xchg   ecx,eax
  416958:	and    ah,cl
  41695a:	sbb    DWORD PTR [ebx+0x13395e7f],0xbbe2a2ad
  416964:	or     eax,0xffaf88b2
  416969:	sbb    eax,0x3ada1bf5
  41696e:	lods   al,BYTE PTR ds:[esi]
  41696f:	inc    esi
  416970:	and    dl,BYTE PTR [esi]
  416972:	retf   0x32eb
  416975:	lahf   
  416976:	fs scas eax,DWORD PTR es:[edi]
  416978:	mov    al,ds:0xfdc39994
  41697d:	and    ebp,DWORD PTR [ecx+0x2898cf5e]
  416983:	xor    BYTE PTR [eax+esi*1],bl
  416986:	stos   DWORD PTR es:[edi],eax
  416987:	dec    esp
  416988:	mov    DWORD PTR [esi+0x49d55390],esp
  41698e:	jge    0x41699a
  416990:	aaa    
  416991:	dec    esp
  416992:	arpl   WORD PTR [esi+0x3dcec16a],bp
  416998:	push   edi
  416999:	cmp    dl,BYTE PTR [eax]
  41699b:	call   0xe8b9:0x29ef2b50
  4169a2:	lea    ebx,[ecx+0x7e]
  4169a5:	stc    
  4169a6:	popa   
  4169a7:	mov    bh,0xc2
  4169a9:	or     DWORD PTR [esi],esi
  4169ab:	and    DWORD PTR ds:0xd964aae1,0xcf0d37a
  4169b5:	mov    ecx,0x9f0dc6d9
  4169ba:	mov    bl,0xdb
  4169bc:	test   al,0x40
  4169be:	shl    DWORD PTR [ecx],cl
  4169c0:	ror    DWORD PTR [edi+ecx*4-0x535845f6],0x52
  4169c8:	inc    edi
  4169c9:	leave  
  4169ca:	out    dx,al
  4169cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169cc:	sbb    ebx,ebp
  4169ce:	fstp   TBYTE PTR [ebx+edi*4-0x7b]
  4169d2:	sti    
  4169d3:	aaa    
  4169d4:	dec    esi
  4169d5:	aaa    
  4169d6:	lea    edx,[eax+0x10]
  4169d9:	retf   
  4169da:	xlat   BYTE PTR ds:[ebx]
  4169db:	and    al,0xd
  4169dd:	frndint 
  4169df:	sbb    BYTE PTR [ecx+0x2a],cl
  4169e2:	or     eax,DWORD PTR [eax+0x34ee34e2]
  4169e8:	add    BYTE PTR [ecx+ebp*8],bh
  4169eb:	enter  0x2360,0xee
  4169ef:	adc    DWORD PTR [edx],ebp
  4169f1:	test   ecx,ebp
  4169f3:	ss addr16 cwde 
  4169f6:	xchg   BYTE PTR [edx+0x5cf0d891],dh
  4169fc:	sahf   
  4169fd:	stos   DWORD PTR es:[edi],eax
  4169fe:	mov    ecx,0x959ba5ed
  416a03:	repz or eax,ecx
  416a06:	xchg   esp,eax
  416a07:	dec    edx
  416a08:	cli    
  416a09:	or     eax,0x2dbedad9
  416a0e:	es jg  0x416a82
  416a11:	es (bad) 
  416a13:	jge    0x416a53
  416a15:	adc    al,0x88
  416a17:	pop    eax
  416a18:	mov    ah,0x93
  416a1a:	(bad)  
  416a1c:	sub    dl,BYTE PTR [esi]
  416a1e:	lea    edi,[ebx+ecx*1-0x1fbf02aa]
  416a25:	jnp    0x416a9c
  416a27:	bound  ecx,QWORD PTR [esi-0x4a]
  416a2a:	sbb    eax,0x309ed520
  416a2f:	loope  0x416a4a
  416a31:	rcr    al,1
  416a33:	fimul  WORD PTR ds:0xce660605
  416a39:	xor    BYTE PTR [ebx+ebx*2+0xcafe95c],al
  416a40:	sbb    ch,al
  416a42:	and    ebp,0x95edba70
  416a48:	inc    esi
  416a49:	or     edi,DWORD PTR [ecx-0x1]
  416a4c:	cwde   
  416a4d:	cmp    ebx,edi
  416a4f:	pop    esi
  416a50:	dec    esp
  416a51:	xor    eax,0x7ee151cd
  416a56:	aam    0x4c
  416a58:	out    dx,eax
  416a59:	dec    esi
  416a5a:	or     eax,0x57ffeac8
  416a5f:	mov    esi,0x66f211f2
  416a64:	stos   BYTE PTR es:[edi],al
  416a65:	jne    0x416a9c
  416a67:	das    
  416a68:	dec    esi
  416a69:	inc    edx
  416a6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a6b:	mov    cl,0xcf
  416a6d:	in     al,0xd
  416a6f:	int3   
  416a70:	std    
  416a71:	adc    esp,edx
  416a73:	add    esp,DWORD PTR [edi+0x9]
  416a76:	adc    eax,edx
  416a78:	dec    esi
  416a79:	jle    0x416a00
  416a7b:	retf   0xde39
  416a7e:	or     bl,bh
  416a80:	in     al,dx
  416a81:	cmovp  esi,DWORD PTR [edx-0x35]
  416a85:	inc    esp
  416a86:	stos   BYTE PTR es:[edi],al
  416a87:	or     cl,BYTE PTR [esp+eiz*2]
  416a8a:	je     0x416a22
  416a8c:	outs   dx,BYTE PTR ds:[esi]
  416a8d:	(bad)  
  416a8e:	or     dh,al
  416a90:	ret    
  416a91:	lods   eax,DWORD PTR ds:[esi]
  416a92:	imul   esp,edx,0xedf8b239
  416a98:	shr    BYTE PTR [edx],1
  416a9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a9b:	js     0x416aad
  416a9d:	fcom   st(4)
  416a9f:	or     eax,ebx
  416aa1:	mov    al,0xde
  416aa3:	in     eax,dx
  416aa4:	(bad)  
  416aa5:	in     eax,dx
  416aa6:	xchg   edx,eax
  416aa7:	push   es
  416aa8:	jb     0x416b07
  416aaa:	sub    eax,0x39de54d7
  416aaf:	inc    ebx
  416ab0:	xlat   BYTE PTR ds:[ebx]
  416ab1:	mov    bh,0xe2
  416ab4:	ficom  DWORD PTR [esi]
  416ab6:	iret   
  416ab7:	mov    edi,0xe6166f6
  416abc:	in     al,0xd7
  416abe:	enter  0x1cfb,0x1e
  416ac2:	jae    0x416b2a
  416ac4:	repnz nop
  416ac6:	repz sti 
  416ac8:	sub    dh,BYTE PTR [esi]
  416aca:	pusha  
  416acb:	dec    edi
  416acc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416acd:	xlat   BYTE PTR ds:[ebx]
  416ace:	dec    ecx
  416acf:	or     DWORD PTR [ecx+0x508e0a74],ecx
  416ad5:	ins    BYTE PTR es:[edi],dx
  416ad6:	inc    ecx
  416ad7:	adc    BYTE PTR [edx+0xc847fc8],ah
  416add:	lahf   
  416ade:	cld    
  416adf:	sar    DWORD PTR [esi-0x4b],cl
  416ae2:	cli    
  416ae3:	xchg   bl,cl
  416ae5:	stos   BYTE PTR es:[edi],al
  416ae6:	jmp    0xc796fa3e
  416aeb:	and    BYTE PTR [edi+0x11ce1bcb],dl
  416af1:	add    al,0xea
  416af3:	(bad)  
  416af4:	pop    edx
  416af5:	mov    ebx,0xe7849c0e
  416afa:	hlt    
  416afb:	cmp    eax,0x2f116c1f
  416b00:	popf   
  416b01:	(bad)  
  416b02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b03:	pop    ecx
  416b04:	nop
  416b05:	inc    esi
  416b06:	adc    eax,0x98d95f08
  416b0b:	(bad)  
  416b0c:	rcl    BYTE PTR [edi],cl
  416b0e:	dec    esp
  416b0f:	retf   0xf9d7
  416b12:	fisttp WORD PTR [ecx+0x17]
  416b15:	in     al,0xc9
  416b17:	jae    0x416b1c
  416b19:	cwde   
  416b1a:	jecxz  0x416b57
  416b1c:	xor    eax,0x9ac81531
  416b21:	cld    
  416b22:	xor    eax,0x7e604088
  416b27:	xchg   ecx,ebp
  416b29:	jns    0x416ac9
  416b2b:	and    al,0x4b
  416b2d:	in     al,dx
  416b2e:	pop    edi
  416b2f:	add    eax,0xcba5aff9
  416b34:	xchg   DWORD PTR [eax+0x49],eax
  416b37:	mov    WORD PTR [eax],ds
  416b39:	(bad)  
  416b3a:	mov    ebp,0x7a644a22
  416b3f:	sub    eax,0x64342ebf
  416b44:	inc    edi
  416b45:	inc    ebx
  416b46:	fucomip st,st(5)
  416b48:	sub    DWORD PTR [edx+0x61d52f06],esp
  416b4e:	scas   al,BYTE PTR es:[edi]
  416b4f:	jg     0x416af1
  416b51:	lea    ecx,[ebp+0x46dfc9af]
  416b57:	adc    esi,DWORD PTR [ebx+0x2dab000a]
  416b5d:	mov    dh,0x2
  416b5f:	push   0x94c6db1c
  416b64:	xchg   dh,ch
  416b66:	out    0x9f,al
  416b68:	and    bh,BYTE PTR [esi-0x40f77618]
  416b6e:	addr16 comiss xmm0,xmm3
  416b72:	mov    WORD PTR ds:0x59d7857c,gs
  416b78:	inc    ebp
  416b79:	fild   QWORD PTR [esi-0x10]
  416b7c:	dec    ebp
  416b7d:	sub    eax,0x145fea93
  416b82:	test   BYTE PTR [ecx+0x61d21068],bl
  416b88:	mov    WORD PTR [eax+0x7e5ae759],ss
  416b8e:	add    dh,dh
  416b90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b91:	test   esi,ebp
  416b93:	fcom   DWORD PTR [esi+0x2e2a1f2e]
  416b99:	or     esi,ebp
  416b9b:	(bad)  
  416b9d:	das    
  416b9e:	int    0xc3
  416ba0:	pop    ebp
  416ba1:	outs   dx,DWORD PTR ds:[esi]
  416ba2:	retf   
  416ba3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ba4:	sahf   
  416ba5:	jmp    0x416b72
  416ba7:	pop    ds
  416ba8:	jns    0x416bbe
  416baa:	jl     0x416b2d
  416bac:	inc    edi
  416bad:	sub    al,0x4d
  416baf:	or     al,0x52
  416bb1:	outs   dx,DWORD PTR ds:[esi]
  416bb2:	test   al,0x58
  416bb4:	mov    edx,0xd142902a
  416bb9:	inc    DWORD PTR [edx+0x6a]
  416bbc:	xchg   edi,eax
  416bbd:	dec    ebx
  416bbe:	jnp    0x416bba
  416bc0:	mov    ds,WORD PTR [eax+0x5]
  416bc3:	stc    
  416bc4:	push   ebx
  416bc5:	push   esp
  416bc6:	jmp    0x7a53:0xcc8a73d5
  416bcd:	sbb    eax,0x1737e65d
  416bd2:	fstp   TBYTE PTR [ebx-0x17]
  416bd5:	push   0xffffffb7
  416bd7:	mov    WORD PTR [esi-0x34],?
  416bda:	fstp   st(3)
  416bdc:	jb     0x416bcd
  416bde:	ds push es
  416be0:	cld    
  416be1:	repnz outs dx,BYTE PTR ds:[esi]
  416be3:	adc    esi,edx
  416be5:	push   ds
  416be6:	repz or al,0x81
  416be9:	push   eax
  416bea:	fidiv  WORD PTR [edi+0x36]
  416bed:	test   al,0xaa
  416bef:	fild   WORD PTR [eax+0x306841dd]
  416bf5:	cld    
  416bf6:	loopne 0x416bbb
  416bf8:	jo     0x416c32
  416bfa:	repnz dec ebx
  416bfc:	mov    bl,0xdc
  416bfe:	mov    ebp,0xa41c63bd
  416c03:	je     0x416c15
  416c05:	daa    
  416c06:	call   0xc16:0x18e7c345
  416c0d:	xor    al,BYTE PTR [edx+0x76]
  416c10:	aam    0xde
  416c12:	(bad)  
  416c13:	push   ss
  416c14:	(bad)  
  416c15:	je     0x416c7b
  416c17:	jns    0x416bb0
  416c19:	(bad)  
  416c1a:	loop   0x416bd5
  416c1c:	push   eax
  416c1d:	and    ecx,edx
  416c1f:	rcr    BYTE PTR [ebx+0x194456a],cl
  416c25:	xchg   ebx,eax
  416c26:	loop   0x416c65
  416c28:	loop   0x416c98
  416c2a:	mov    ecx,0xc6083a22
  416c2f:	cmp    eax,0xf463a78c
  416c34:	daa    
  416c35:	inc    ebp
  416c36:	or     al,0xbf
  416c38:	and    eax,0x31af6f28
  416c3d:	jnp    0x416c0b
  416c3f:	dec    ecx
  416c40:	jae    0x416c81
  416c42:	repnz sbb eax,0x3944d120
  416c48:	mov    dh,0xd5
  416c4a:	lock (bad) 
  416c4c:	retf   
  416c4d:	adc    DWORD PTR [edx-0x7f],eax
  416c50:	lods   al,BYTE PTR ds:[esi]
  416c51:	adc    al,0xd
  416c53:	fwait
  416c54:	popf   
  416c55:	xchg   edx,eax
  416c56:	adc    DWORD PTR [ebx],eax
  416c58:	cmp    dh,BYTE PTR [esi+0x1a14f0d3]
  416c5e:	ret    
  416c5f:	ins    BYTE PTR es:[edi],dx
  416c60:	loopne 0x416c7d
  416c62:	loope  0x416c1a
  416c64:	xlat   BYTE PTR ds:[ebx]
  416c65:	mov    edx,0x20da44f0
  416c6a:	pop    edi
  416c6b:	mov    WORD PTR ds:0x244db3b1,?
  416c71:	add    al,0x7f
  416c73:	test   eax,0x4f1ee8d8
  416c78:	(bad)  
  416c79:	push   ss
  416c7a:	outs   dx,BYTE PTR ds:[esi]
  416c7b:	jg     0x416c7e
  416c7d:	dec    ebp
  416c7e:	ss xchg ecx,eax
  416c80:	div    DWORD PTR [edx]
  416c82:	fisub  DWORD PTR [ebp+0x2c]
  416c85:	mov    ds:0x2b70c87,al
  416c8b:	sub    BYTE PTR [esi+0x4c],dl
  416c8e:	xor    DWORD PTR [edx+ebp*8+0x34],edi
  416c92:	push   esp
  416c93:	fwait
  416c94:	repnz popa 
  416c96:	pop    eax
  416c97:	aas    
  416c98:	js     0x416ca7
  416c9a:	cmp    DWORD PTR [ecx+0x7b],0xf56b42f6
  416ca1:	adc    eax,0xeae49f57
  416ca6:	out    0xd5,al
  416ca8:	pop    ds
  416ca9:	dec    esi
  416caa:	push   ecx
  416cab:	xlat   BYTE PTR ds:[ebx]
  416cac:	inc    DWORD PTR [ebp-0x2b94cf18]
  416cb2:	inc    edi
  416cb3:	aaa    
  416cb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cb5:	shr    DWORD PTR [ecx+edi*8-0x3b08ed9b],1
  416cbc:	add    al,0x42
  416cbe:	arpl   WORD PTR [ebx+0x5b],ax
  416cc1:	shl    BYTE PTR [ecx],cl
  416cc3:	add    edi,DWORD PTR [esp+edi*2]
  416cc6:	fs call 0xb77:0x6d24c395
  416cce:	mov    cl,0xbd
  416cd0:	bound  eax,QWORD PTR [esi-0x1f1799f9]
  416cd6:	(bad)  
  416cd7:	cmp    eax,0x5b1561a6
  416cdc:	mov    esi,0x459bf87e
  416ce1:	inc    ebx
  416ce2:	or     al,0xb0
  416ce4:	enter  0xb329,0x56
  416ce8:	pop    eax
  416ce9:	inc    edi
  416cea:	push   esp
  416ceb:	out    dx,eax
  416cec:	pushf  
  416ced:	repnz push esp
  416cef:	jmp    0x416d41
  416cf1:	jae    0x416d2c
  416cf3:	outs   dx,BYTE PTR ds:[esi]
  416cf4:	es jns 0x416ce4
  416cf7:	pop    esp
  416cf8:	dec    esi
  416cf9:	add    ch,BYTE PTR [eax-0x54]
  416cfc:	mov    al,ds:0x983857ab
  416d01:	ins    DWORD PTR es:[edi],dx
  416d02:	pop    ss
  416d03:	add    al,0xe7
  416d05:	xchg   edi,eax
  416d06:	(bad)  
  416d07:	sbb    bh,BYTE PTR [edi+0x6af7e3b3]
  416d0d:	loopne 0x416cd6
  416d0f:	pop    ss
  416d10:	dec    eax
  416d11:	fbld   TBYTE PTR [ebx]
  416d13:	outs   dx,DWORD PTR ds:[esi]
  416d14:	daa    
  416d15:	xchg   DWORD PTR [edx+0x4839692e],ebx
  416d1b:	push   ss
  416d1c:	mov    edx,0x224fd741
  416d21:	dec    ebp
  416d22:	push   0xffffffb4
  416d24:	add    al,0x9a
  416d26:	xchg   edx,eax
  416d27:	jmp    FWORD PTR [esi+0x26]
  416d2a:	sub    esi,ecx
  416d2c:	jbe    0xaf985532
  416d32:	stos   DWORD PTR es:[edi],eax
  416d33:	in     eax,dx
  416d34:	ret    
  416d35:	(bad)  
  416d36:	inc    edx
  416d37:	pop    ebp
  416d38:	int3   
  416d39:	push   0x77
  416d3b:	idiv   DWORD PTR [esi+eax*4]
  416d3e:	dec    ebp
  416d3f:	fidivr DWORD PTR [edx]
  416d41:	adc    ah,bh
  416d43:	inc    edi
  416d44:	or     bl,BYTE PTR [ebp+0x4e]
  416d47:	pop    ds
  416d48:	in     ax,0x99
  416d4b:	pop    ecx
  416d4c:	pop    ebp
  416d4d:	adc    bh,BYTE PTR [ecx+0x3e]
  416d50:	popf   
  416d51:	xor    eax,eax
  416d53:	adc    BYTE PTR [ebx-0x6656d924],ch
  416d59:	pop    ecx
  416d5a:	nop
  416d5b:	jp     0x416d7a
  416d5d:	pop    edi
  416d5e:	or     al,0xe3
  416d60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d61:	outs   dx,BYTE PTR ds:[esi]
  416d62:	jle    0x416cf7
  416d64:	icebp  
  416d65:	inc    edi
  416d66:	inc    esp
  416d67:	inc    esi
  416d68:	cdq    
  416d69:	xchg   edx,eax
  416d6a:	xchg   ebx,eax
  416d6b:	mov    al,0xe8
  416d6d:	adc    esi,DWORD PTR [edi+0x26]
  416d70:	xchg   esp,eax
  416d71:	dec    ebx
  416d72:	xor    DWORD PTR ds:0xb9ce8a62,ebp
  416d78:	inc    esp
  416d79:	popf   
  416d7a:	sbb    cl,BYTE PTR [ebx]
  416d7c:	ror    BYTE PTR [edi+0xb5c803f],cl
  416d82:	cmp    al,0x15
  416d84:	fcmovbe st,st(2)
  416d86:	popf   
  416d87:	cmp    al,0x41
  416d89:	sub    dl,al
  416d8b:	scas   eax,DWORD PTR es:[edi]
  416d8c:	dec    esp
  416d8d:	mov    edi,0x558b3448
  416d92:	or     BYTE PTR [ebx-0x2fcc07a3],cl
  416d98:	xor    ebx,eax
  416d9a:	sub    edx,ebx
  416d9c:	sub    edx,esi
  416d9e:	xor    edx,eax
  416da0:	mov    DWORD PTR [ebp+0x8],edx
  416da3:	mov    edx,DWORD PTR [ebp+0x8]
  416da6:	mov    ebx,DWORD PTR [ebp-0x58]
  416da9:	add    edx,0x5708fa
  416daf:	imul   edx,ebx
  416db2:	mov    DWORD PTR [ebp-0x58],edx
  416db5:	mov    edx,DWORD PTR [ebp+0x8]
  416db8:	mov    ebx,DWORD PTR [ebp-0x54]
  416dbb:	add    edx,0x64f89c
  416dc1:	or     edx,ebx
  416dc3:	mov    DWORD PTR [ebp-0x54],edx
  416dc6:	mov    edx,DWORD PTR [ebp+0x8]
  416dc9:	mov    ebx,DWORD PTR [ebp-0x50]
  416dcc:	add    edx,ecx
  416dce:	xor    edx,ebx
  416dd0:	mov    DWORD PTR [ebp-0x50],edx
  416dd3:	mov    edx,DWORD PTR [ebp+0x8]
  416dd6:	mov    ebx,DWORD PTR [ebp-0x4c]
  416dd9:	add    edx,edi
  416ddb:	and    edx,ebx
  416ddd:	mov    DWORD PTR [ebp-0x4c],edx
  416de0:	mov    edx,DWORD PTR [ebp+0x8]
  416de3:	mov    ebx,DWORD PTR [ebp-0x48]
  416de6:	lea    edx,[ebx+edx*1+0x241fcdf]
  416ded:	mov    DWORD PTR [ebp-0x48],edx
  416df0:	mov    edx,DWORD PTR [ebp+0x8]
  416df3:	mov    ebx,0xfa5e1530
  416df8:	sub    ebx,edx
  416dfa:	add    ebx,DWORD PTR [ebp-0x44]
  416dfd:	mov    DWORD PTR [ebp-0x44],ebx
  416e00:	mov    edx,DWORD PTR [ebp+0x8]
  416e03:	xor    edx,eax
  416e05:	add    edx,esi
  416e07:	jne    0x416d90
  416e0d:	mov    edx,DWORD PTR [ebp-0x8]
  416e10:	mov    ebx,DWORD PTR [ebp-0xc]
  416e13:	xor    edx,eax
  416e15:	lea    edx,[edx+ebx*1+0x3272ef]
  416e1c:	mov    DWORD PTR [ebp-0xc],edx
  416e1f:	mov    edx,DWORD PTR [ebp-0x10]
  416e22:	xor    edx,eax
  416e24:	add    edx,esi
  416e26:	jne    0x4146af
  416e2c:	jmp    0x4192cb
  416e31:	mov    ecx,DWORD PTR [ebp-0x14]
  416e34:	mov    DWORD PTR [ebp+0x8],ecx
  416e37:	jmp    0x419238
  416e3c:	mov    ecx,DWORD PTR [ebp+0x8]
  416e3f:	mov    edx,DWORD PTR [ebp-0x8]
  416e42:	xor    ecx,eax
  416e44:	xor    edx,eax
  416e46:	jmp    0x4191ce
  416e4b:	aam    0x6
  416e4d:	sbb    ah,BYTE PTR [ecx-0x4445a78]
  416e53:	test   eax,0xd78912f5
  416e58:	sbb    BYTE PTR [ecx-0x70],0xdf
  416e5c:	cmp    edi,DWORD PTR [ecx+0x7a]
  416e5f:	pop    ss
  416e60:	pop    edi
  416e61:	jp     0x416edd
  416e63:	mov    ecx,0xa047c3d8
  416e68:	adc    BYTE PTR [eax],al
  416e6a:	mov    edx,eax
  416e6c:	add    eax,DWORD PTR [edi-0x59]
  416e6f:	or     eax,0xccfe5549
  416e74:	stc    
  416e75:	add    BYTE PTR [ebp-0x64aa5f98],cl
  416e7b:	fadd   DWORD PTR [edi-0x6532f44c]
  416e81:	(bad)  
  416e83:	div    BYTE PTR [esi-0x55fd1d94]
  416e89:	repnz sub ecx,0xcb8e30d4
  416e90:	and    dh,cl
  416e92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e93:	and    eax,esp
  416e95:	add    cl,0xf9
  416e98:	mov    BYTE PTR [edi],al
  416e9a:	cmp    bh,0x6c
  416e9d:	fdivp  st(3),st
  416e9f:	add    edx,DWORD PTR [edx+0x27]
  416ea2:	mov    edi,0x4255c473
  416ea7:	push   0xffffffce
  416ea9:	test   al,0xf5
  416eab:	test   al,0xb7
  416ead:	div    DWORD PTR [ebx]
  416eaf:	jne    0x416e8f
  416eb1:	cmp    ah,BYTE PTR [esi+ecx*4]
  416eb4:	pop    ebx
  416eb5:	(bad)  
  416eb6:	mov    eax,ds:0xb3f1f265
  416ebb:	push   ss
  416ebc:	cdq    
  416ebd:	or     BYTE PTR [eax+0x6168e6a1],bl
  416ec3:	or     DWORD PTR [edx],edx
  416ec5:	sbb    ah,BYTE PTR [eax-0x25]
  416ec8:	xchg   esi,eax
  416ec9:	mov    bl,0xc9
  416ecb:	sub    edi,esi
  416ecd:	jmp    0x56183d30
  416ed2:	xchg   esp,eax
  416ed3:	lds    edi,FWORD PTR ds:0x99d2cca1
  416ed9:	js     0x416ed1
  416edb:	(bad)  
  416edc:	dec    esp
  416edd:	fwait
  416ede:	repnz fs mov ch,0x5d
  416ee2:	sbb    al,0x85
  416ee4:	sbb    al,BYTE PTR [esp+ebx*4+0x73c2735f]
  416eeb:	sbb    eax,0x21b6abeb
  416ef0:	scas   al,BYTE PTR es:[edi]
  416ef1:	sbb    al,0x1b
  416ef3:	shl    bl,1
  416ef5:	jo     0x416f2a
  416ef7:	push   0x7180878a
  416efc:	ror    BYTE PTR [edx+0x31008ccc],cl
  416f02:	jnp    0x416f80
  416f04:	mov    esi,0x9eee66b9
  416f09:	hlt    
  416f0a:	xor    al,0x7e
  416f0c:	cs inc ebp
  416f0e:	cld    
  416f0f:	xchg   edx,eax
  416f10:	(bad)  
  416f11:	cld    
  416f12:	inc    edi
  416f13:	push   ds
  416f14:	dec    ebp
  416f15:	test   al,0xf0
  416f17:	mov    cs,ecx
  416f19:	adc    ecx,DWORD PTR [eax]
  416f1b:	cs cdq 
  416f1d:	ret    0xaac3
  416f20:	cmp    eax,0x8ddc49c6
  416f25:	or     BYTE PTR [esi-0x17],al
  416f28:	sub    DWORD PTR [ebx],eax
  416f2a:	fild   WORD PTR [ecx-0x61e24b40]
  416f30:	leave  
  416f31:	rol    edi,0xe1
  416f34:	xor    esp,DWORD PTR [ecx]
  416f36:	and    al,0x13
  416f38:	dec    ecx
  416f39:	stc    
  416f3a:	call   DWORD PTR [ecx]
  416f3c:	scas   eax,DWORD PTR es:[edi]
  416f3d:	xchg   edx,eax
  416f3e:	inc    edi
  416f3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f40:	ror    BYTE PTR ds:0x8cb18c1b,cl
  416f46:	shr    bh,0xbf
  416f49:	inc    esi
  416f4a:	cmc    
  416f4b:	stos   DWORD PTR es:[edi],eax
  416f4c:	pop    es
  416f4d:	xor    al,0xef
  416f4f:	dec    ecx
  416f50:	sahf   
  416f51:	iret   
  416f52:	data16 out 0x60,al
  416f55:	mov    ebp,0x957fb11d
  416f5a:	sbb    eax,0xda85e9e2
  416f60:	xchg   BYTE PTR ss:[eax],al
  416f63:	push   edx
  416f64:	jmp    0x60e1:0xbff4800
  416f6b:	les    edi,FWORD PTR [edx+0x3a]
  416f6e:	inc    BYTE PTR [eax-0x18]
  416f71:	pop    ebp
  416f72:	ja     0x416fe6
  416f74:	sbb    al,0xd4
  416f76:	adc    eax,0x258386c4
  416f7b:	mov    eax,0xbce5671c
  416f80:	cmc    
  416f81:	add    ah,BYTE PTR [ebp+0x5acc2b30]
  416f87:	rol    BYTE PTR [edx],1
  416f89:	(bad)  
  416f8b:	add    dl,BYTE PTR [edx]
  416f8d:	dec    ebx
  416f8e:	mov    fs,ecx
  416f90:	xchg   ebx,eax
  416f91:	addr16 mov ebx,0x3ecb1f8e
  416f97:	lock ret 0xf05f
  416f9b:	xor    BYTE PTR [edx-0x75],dl
  416f9e:	in     al,dx
  416f9f:	jmp    0xd39887d
  416fa4:	or     eax,0xa4746a59
  416fa9:	gs mov cl,0x6b
  416fac:	mov    edi,DWORD PTR [edi-0x3fd97556]
  416fb2:	dec    esp
  416fb3:	mov    edi,0x13e966e1
  416fb8:	push   ecx
  416fb9:	cmp    bx,bp
  416fbc:	inc    edi
  416fbd:	jecxz  0x417020
  416fbf:	mov    eax,edx
  416fc1:	out    0xca,eax
  416fc3:	pop    ebp
  416fc4:	stc    
  416fc5:	sbb    DWORD PTR [edi+edx*4-0x3b],esp
  416fc9:	(bad)  
  416fca:	push   edx
  416fcb:	pop    ds
  416fcc:	push   eax
  416fcd:	mov    bh,0x5d
  416fcf:	arpl   WORD PTR [esi-0x69],cx
  416fd2:	or     al,0x9c
  416fd4:	(bad)  
  416fd5:	(bad)  
  416fd6:	shr    DWORD PTR es:[ebx-0x4207b135],0x46
  416fde:	pop    es
  416fdf:	push   0x7b
  416fe1:	push   cs
  416fe2:	or     al,0xdc
  416fe4:	dec    esi
  416fe5:	sub    dh,ch
  416fe7:	sti    
  416fe8:	mov    gs,WORD PTR [ebx]
  416fea:	pop    edi
  416feb:	jg     0x416f9d
  416fed:	ficomp WORD PTR [ebx]
  416fef:	dec    esi
  416ff0:	push   esi
  416ff1:	sbb    cl,BYTE PTR [si]
  416ff4:	add    DWORD PTR [ebx+eax*1-0x40d769b0],ebx
  416ffb:	and    DWORD PTR ds:0x3fb13407,0xc1ca77f5
  417005:	mov    cl,0xaf
  417007:	out    dx,eax
  417008:	cmp    al,0x28
  41700a:	push   0x3f5b6005
  41700f:	aam    0xda
  417011:	jne    0x41706f
  417013:	jge    0x416fde
  417015:	in     al,dx
  417016:	mov    al,BYTE PTR [esp+ebp*1-0x40]
  41701a:	out    0x56,al
  41701c:	sub    ch,cl
  41701e:	rcl    DWORD PTR [edi+ecx*1],cl
  417021:	fbstp  TBYTE PTR [edi]
  417023:	aam    0x7e
  417025:	xchg   ebx,eax
  417026:	xor    ebp,DWORD PTR [esi]
  417028:	cmp    BYTE PTR [ecx],bl
  41702a:	test   BYTE PTR [ebp+0x9],bl
  41702d:	pop    ss
  41702e:	mov    ds:0x7c97e899,eax
  417033:	fs cmp al,0xef
  417036:	(bad)  
  417038:	inc    ebp
  417039:	mov    ds,WORD PTR [esi-0x23]
  41703c:	push   0xb0851eb0
  417041:	sbb    edi,ebx
  417043:	cli    
  417044:	std    
  417045:	cwde   
  417046:	not    BYTE PTR [edx+eiz*4-0x5ecbda93]
  41704d:	mov    eax,ds:0xf81feedb
  417052:	sub    eax,0x7550106c
  417057:	or     ecx,0xffffffbc
  41705a:	js     0x416fea
  41705c:	pop    ebp
  41705d:	jg     0x416fea
  41705f:	xor    esp,DWORD PTR [ecx]
  417061:	xchg   edx,eax
  417062:	test   BYTE PTR [edx-0x54],dl
  417065:	(bad)  
  417066:	jns    0x41700c
  417068:	jo     0x41705c
  41706a:	aad    0x3f
  41706c:	lock cmp DWORD PTR [edx+0x77],esi
  417070:	adc    BYTE PTR [ecx],ch
  417072:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417073:	fstp   QWORD PTR [edi]
  417075:	cmp    BYTE PTR [ebp-0x5a],bh
  417078:	sbb    eax,0x9c6caf4d
  41707d:	sub    ebp,eax
  41707f:	clc    
  417080:	mov    dl,0xd
  417082:	cdq    
  417083:	scas   eax,DWORD PTR es:[edi]
  417084:	xor    ebp,DWORD PTR [bp-0x10d3]
  417089:	jecxz  0x4170d4
  41708b:	scas   eax,DWORD PTR es:[edi]
  41708c:	cli    
  41708d:	icebp  
  41708e:	ins    BYTE PTR es:[edi],dx
  41708f:	cs fsubr st,st(1)
  417092:	test   al,0x14
  417094:	dec    ebx
  417095:	mov    eax,0xe2dcbaba
  41709a:	in     al,dx
  41709b:	in     al,0xf4
  41709d:	mov    ?,ebp
  41709f:	add    BYTE PTR [ecx-0x1ee6a0ab],dl
  4170a5:	add    al,0xcd
  4170a7:	mov    al,ds:0xa6c5cfe2
  4170ac:	adc    BYTE PTR [ebx+eax*2],ch
  4170af:	cmp    DWORD PTR [edx+0x56],edx
  4170b2:	xlat   BYTE PTR ds:[ebx]
  4170b3:	sub    DWORD PTR [edx-0x3711ea54],ebp
  4170b9:	jne    0x417069
  4170bb:	(bad)  
  4170bc:	push   ebp
  4170bd:	in     eax,dx
  4170be:	add    DWORD PTR [ecx+0x5c],edi
  4170c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170c2:	mov    WORD PTR [edi+0x67ed0319],cs
  4170c8:	inc    ebx
  4170c9:	ror    BYTE PTR [ebx],0x1f
  4170cc:	in     al,dx
  4170cd:	aas    
  4170ce:	jle    0x41708f
  4170d0:	xchg   DWORD PTR [edx-0x41],eax
  4170d3:	cmp    ah,dl
  4170d5:	lods   eax,DWORD PTR ds:[esi]
  4170d6:	mov    ecx,0x8027bb2b
  4170db:	push   0xffffffa4
  4170dd:	pushf  
  4170de:	call   0x800ab53b
  4170e3:	call   0x53096663
  4170e8:	int    0x82
  4170ea:	or     edx,ecx
  4170ec:	popa   
  4170ed:	dec    edi
  4170ee:	dec    ebx
  4170ef:	nop
  4170f0:	adc    DWORD PTR [edx-0x603774d3],ecx
  4170f6:	mov    esi,0x1fe9dd88
  4170fb:	retf   
  4170fc:	imul   DWORD PTR [ebp-0x6ba6329e]
  417102:	int    0xd9
  417104:	cmp    esi,DWORD PTR [edx+0x4757ceed]
  41710a:	sbb    DWORD PTR [edx],0x5d9b9c5f
  417110:	ficomp WORD PTR [edi]
  417112:	add    bl,ah
  417114:	inc    edx
  417115:	adc    DWORD PTR [eax+0x6b0d04a5],esp
  41711b:	dec    edx
  41711c:	out    0x91,al
  41711e:	(bad)  [esi+ebp*8-0x44]
  417122:	aam    0x4d
  417124:	ins    DWORD PTR es:[edi],dx
  417125:	push   cs
  417126:	and    al,0xc6
  417128:	and    eax,0x53fbd06c
  41712d:	lds    esp,FWORD PTR [edi]
  41712f:	mov    edi,?
  417131:	stos   DWORD PTR es:[edi],eax
  417132:	mov    al,0x1b
  417134:	jle    0x4170fc
  417136:	mov    dl,0xb
  417138:	push   ecx
  417139:	lods   eax,DWORD PTR ds:[esi]
  41713a:	(bad)  
  41713b:	cmp    eax,0x99bf8fa4
  417140:	sahf   
  417141:	xor    DWORD PTR [edi],ecx
  417143:	in     eax,0x87
  417145:	mov    ebx,0xbf20fdc0
  41714a:	fsubrp st(0),st
  41714c:	gs popa 
  41714e:	dec    edx
  41714f:	cmp    BYTE PTR [esi+0x3d],0x95
  417153:	dec    ebx
  417154:	inc    ecx
  417155:	std    
  417156:	outs   dx,BYTE PTR ds:[esi]
  417157:	inc    esi
  417158:	inc    ebp
  417159:	in     eax,0xab
  41715b:	fnstsw WORD PTR ds:0x3ffc1e24
  417161:	(bad)  
  417162:	xchg   edi,eax
  417163:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417164:	inc    edx
  417165:	stos   BYTE PTR es:[edi],al
  417166:	push   edx
  417167:	lea    ecx,[ecx]
  417169:	mov    BYTE PTR ss:[ebp+0x73],ch
  41716d:	dec    edx
  41716e:	mov    WORD PTR [edi-0x3c],es
  417171:	shr    BYTE PTR [edx+0x9bd5092],0xac
  417178:	sbb    cl,BYTE PTR [ebx-0x6badd0ae]
  41717e:	dec    edx
  41717f:	mov    al,0xd6
  417181:	sub    al,BYTE PTR [esi-0x1b105519]
  417187:	inc    esi
  417188:	aas    
  417189:	call   0x4a03:0x2ba0b150
  417190:	lea    ecx,[ebp+edx*8-0x6]
  417194:	fs push edx
  417196:	mov    edi,0x538343c
  41719b:	aad    0x73
  41719d:	dec    ecx
  41719e:	and    eax,0xfa9c4cbb
  4171a3:	mov    cl,0x89
  4171a5:	mov    eax,ds:0xfd29c91b
  4171aa:	mov    ah,0xfd
  4171ac:	adc    eax,0x27f95535
  4171b1:	or     bl,dh
  4171b3:	push   eax
  4171b4:	adc    ch,BYTE PTR [ecx-0x6b1332f]
  4171ba:	rcl    BYTE PTR [edx+0x34e209c7],0x72
  4171c1:	and    ch,0x18
  4171c4:	out    dx,eax
  4171c5:	mov    ebx,0xd807804c
  4171ca:	bound  ebp,QWORD PTR [eax-0x27]
  4171cd:	or     DWORD PTR [edx-0x79],eax
  4171d0:	sub    bl,dl
  4171d2:	fidiv  DWORD PTR [edi+eiz*4+0x70030a40]
  4171d9:	sar    al,cl
  4171db:	imul   DWORD PTR [eax]
  4171dd:	pop    edx
  4171de:	push   esi
  4171df:	leave  
  4171e0:	aaa    
  4171e1:	retf   
  4171e2:	sub    edi,ebx
  4171e4:	and    DWORD PTR [eax+0x17],ecx
  4171e7:	fisubr WORD PTR [esi]
  4171e9:	dec    al
  4171eb:	push   edx
  4171ec:	loop   0x41723e
  4171ee:	cli    
  4171ef:	jns    0x4171b3
  4171f1:	call   FWORD PTR [edi-0x7d]
  4171f4:	xchg   BYTE PTR [ecx],al
  4171f6:	(bad)  [edi+0x73]
  4171f9:	or     dh,bl
  4171fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171fd:	mov    al,0x28
  4171ff:	pop    esi
  417200:	add    al,BYTE PTR [ebx]
  417202:	retf   0x11c1
  417205:	ins    DWORD PTR es:[edi],dx
  417206:	and    eax,0x114e529c
  41720b:	lock mov BYTE PTR [esi],bl
  41720e:	fld    TBYTE PTR es:[ebp+eax*2-0x80]
  417213:	into   
  417214:	(bad)  
  417215:	adc    DWORD PTR [ebx-0x8],edi
  417218:	pop    ds
  417219:	mov    ebx,0xf292198a
  41721e:	add    al,0x3d
  417220:	repz sbb bh,BYTE PTR [ecx-0x66155892]
  417227:	mov    dh,0x9e
  417229:	mov    edi,0xa34c9553
  41722e:	adc    bl,BYTE PTR [ebx+edx*8+0x6f]
  417232:	xor    DWORD PTR [esi-0x11],ebp
  417235:	ds jae 0x4171f0
  417238:	clc    
  417239:	inc    ecx
  41723a:	shr    BYTE PTR [bp+di],0xf8
  41723e:	sbb    al,0x4f
  417240:	int    0x65
  417242:	mov    al,ds:0xa555d610
  417247:	jbe    0x41720d
  417249:	jo     0x41727e
  41724b:	pusha  
  41724c:	ret    0x70d9
  41724f:	pop    es
  417250:	sub    ecx,DWORD PTR [edx]
  417252:	dec    ebp
  417253:	or     DWORD PTR [esi],edi
  417255:	dec    edx
  417256:	cmp    dl,bl
  417258:	daa    
  417259:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41725a:	inc    esp
  41725b:	push   edi
  41725c:	retf   
  41725d:	in     al,0xa3
  41725f:	mov    ecx,0x5e251e2a
  417264:	std    
  417265:	mov    ds:0xa5dba343,al
  41726a:	ins    BYTE PTR es:[edi],dx
  41726b:	aad    0x88
  41726d:	test   al,0x5e
  41726f:	pop    edx
  417270:	pop    esp
  417271:	loope  0x417225
  417273:	jnp    0x4171f9
  417275:	shl    DWORD PTR [ebx],1
  417277:	or     eax,DWORD PTR [edi]
  417279:	fist   DWORD PTR cs:[ebp-0x218ef1f]
  417280:	jmp    0xc7d27946
  417285:	xchg   ebp,eax
  417286:	pop    edx
  417287:	push   edx
  417288:	ror    DWORD PTR [esi-0x4a3ba1f3],cl
  41728e:	dec    esi
  41728f:	fsubr  DWORD PTR [esi+0x18]
  417292:	push   ebp
  417293:	mov    ds:0xba7f020c,eax
  417298:	aaa    
  417299:	and    ch,BYTE PTR [esi+0x6c]
  41729c:	jnp    0x417284
  41729e:	mov    ebx,0x644134aa
  4172a3:	pop    es
  4172a4:	xchg   esi,eax
  4172a5:	fiadd  DWORD PTR [ebx]
  4172a7:	arpl   WORD PTR [edi+0x4bfa3787],bp
  4172ad:	rol    eax,cl
  4172af:	cwde   
  4172b0:	xchg   ah,bh
  4172b2:	call   0x9e634112
  4172b7:	mov    cl,0xc8
  4172b9:	sub    DWORD PTR [ecx-0xc06e409],esp
  4172bf:	ret    0x4fe1
  4172c2:	mov    ecx,0xb7e06675
  4172c7:	(bad)  
  4172ca:	pop    edi
  4172cb:	loope  0x4172c1
  4172cd:	add    esi,esp
  4172cf:	add    BYTE PTR [edi+0xda8cfb],cl
  4172d5:	cdq    
  4172d6:	adc    al,0xfa
  4172d8:	sub    cl,BYTE PTR [ebx+esi*4+0x28]
  4172dc:	jno    0x417311
  4172de:	lea    ebx,[ebx]
  4172e0:	pushf  
  4172e1:	xchg   esi,eax
  4172e2:	daa    
  4172e3:	dec    edi
  4172e4:	das    
  4172e5:	int    0x7d
  4172e7:	sbb    DWORD PTR [eax-0x5],esp
  4172ea:	adc    esp,ebp
  4172ec:	mov    esp,0x403ee1ce
  4172f1:	cmc    
  4172f2:	mov    edx,0xaf23a97a
  4172f7:	into   
  4172f8:	mov    edx,0xb8fdd739
  4172fd:	xchg   ebx,eax
  4172fe:	xor    BYTE PTR [ebp+0xc3c33ff],ah
  417304:	xchg   ebp,eax
  417305:	push   edi
  417306:	sahf   
  417307:	cmp    al,bl
  417309:	mov    esi,esp
  41730b:	add    al,0x7d
  41730d:	dec    eax
  41730e:	mov    bl,0xa3
  417310:	dec    esi
  417311:	inc    edx
  417312:	push   0xda01a70b
  417317:	cmp    ebp,DWORD PTR [edx]
  417319:	mov    ecx,0x3d291256
  41731e:	jge    0x417354
  417320:	push   edi
  417321:	bound  eax,QWORD PTR [edi-0x35042ee7]
  417327:	adc    eax,0x8f6e6946
  41732c:	pop    edi
  41732d:	mov    eax,0x84cf3b5
  417332:	sbb    eax,0x75f339a
  417337:	cmp    DWORD PTR [ecx-0x8],ebx
  41733a:	mov    al,ds:0x7b531a02
  41733f:	inc    ecx
  417340:	cmp    eax,DWORD PTR [edx]
  417342:	rcl    ebp,1
  417344:	stc    
  417345:	xchg   esp,eax
  417346:	sbb    ebx,esp
  417348:	xor    BYTE PTR [ebx-0x779128b2],al
  41734e:	leave  
  41734f:	sti    
  417350:	dec    ebx
  417351:	and    DWORD PTR [edi-0x3000dbe9],ebx
  417357:	jge    0x417321
  417359:	mov    esi,0x4434394a
  41735e:	push   edx
  41735f:	(bad)  [edx+0x5b37d446]
  417365:	dec    edx
  417366:	mov    bh,0x95
  417368:	mov    ds:0x8fb7c3c,eax
  41736d:	mov    WORD PTR [edx],fs
  41736f:	repz in al,dx
  417371:	je     0x4173d9
  417373:	cld    
  417374:	stc    
  417375:	sbb    BYTE PTR [ebx+ebp*4],ch
  417378:	xor    bl,cl
  41737a:	int    0x51
  41737c:	ffree  st(7)
  41737e:	xlat   BYTE PTR ds:[ebx]
  41737f:	xchg   edx,eax
  417380:	das    
  417381:	(bad)  
  417382:	pop    ss
  417383:	in     al,0x8b
  417385:	rol    ecx,cl
  417387:	pop    esp
  417388:	ret    
  417389:	rcl    BYTE PTR [edx],1
  41738b:	mov    edx,0xf29b03ce
  417390:	lods   eax,DWORD PTR ds:[esi]
  417391:	mov    esp,0x59e971fb
  417396:	fisub  DWORD PTR [edx]
  417398:	sub    BYTE PTR [ebx],al
  41739a:	pop    edi
  41739b:	arpl   WORD PTR [ebp-0x6e],ax
  41739e:	fimul  DWORD PTR [esi+ecx*2+0x6e07173b]
  4173a5:	sub    BYTE PTR ds:0xacf1ed96,al
  4173ab:	mov    ah,0x90
  4173ad:	je     0x4173c7
  4173af:	mov    cl,0x29
  4173b1:	inc    ebp
  4173b2:	test   eax,0xec798f21
  4173b7:	inc    al
  4173b9:	dec    ebx
  4173ba:	mov    BYTE PTR [ecx-0x7e],dl
  4173bd:	retf   0xd85b
  4173c0:	enter  0x4500,0x75
  4173c4:	sub    BYTE PTR [ebx],dh
  4173c6:	sbb    DWORD PTR [ebx-0x13],edx
  4173c9:	mov    DWORD PTR [ebx-0x46768178],esp
  4173cf:	bnd js 0x417451
  4173d2:	mov    ebx,0xb05caae
  4173d7:	out    dx,eax
  4173d8:	xchg   ebx,eax
  4173d9:	enter  0xd171,0xa1
  4173dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173de:	sbb    BYTE PTR [eax],bh
  4173e0:	jge    0x4173d5
  4173e2:	lock scas eax,DWORD PTR es:[edi]
  4173e4:	in     al,dx
  4173e5:	mov    edx,0x75baabfa
  4173ea:	lahf   
  4173eb:	pushf  
  4173ec:	pop    edx
  4173ed:	pop    ds
  4173ee:	push   ebp
  4173ef:	push   ebx
  4173f0:	enter  0x4fa1,0x46
  4173f4:	test   DWORD PTR [edi],edx
  4173f6:	test   al,0x33
  4173f8:	sub    DWORD PTR [edx],edi
  4173fa:	add    bh,BYTE PTR [esi-0x2b]
  4173fd:	cdq    
  4173fe:	pop    ss
  4173ff:	ja     0x41745e
  417401:	jbe    0x417460
  417403:	and    eax,esp
  417405:	fadd   st,st(3)
  417407:	jne    0x4173b6
  417409:	fbld   TBYTE PTR [edi+ebp*4+0x5e26f4ed]
  417410:	mov    cl,0x2c
  417412:	lds    ecx,FWORD PTR [ecx+0x589ee156]
  417418:	cdq    
  417419:	mov    fs,WORD PTR [eax]
  41741b:	(bad)  
  41741c:	sti    
  41741d:	add    DWORD PTR fs:[ebp-0x14],ecx
  417421:	aas    
  417422:	or     DWORD PTR [edi+0x5ef9d0a7],ebx
  417428:	cmc    
  417429:	rol    al,cl
  41742b:	pop    esi
  41742c:	cli    
  41742d:	je     0x417417
  41742f:	push   cs
  417430:	out    dx,eax
  417431:	ror    DWORD PTR [ecx+0x15],1
  417434:	inc    ebx
  417435:	inc    ecx
  417436:	mov    eax,0xb82a17c4
  41743b:	add    eax,0x3637b9f3
  417440:	jge    0x41740d
  417442:	inc    ecx
  417443:	cli    
  417444:	xchg   esp,eax
  417445:	fadd   st(1),st
  417447:	test   al,0xe
  41744a:	(bad)  
  41744b:	es pop ecx
  41744d:	rcl    BYTE PTR [ebx],cl
  41744f:	mov    ch,0x2b
  417451:	adc    ah,dl
  417453:	out    dx,al
  417454:	ficomp WORD PTR [esi]
  417456:	mov    cl,0xe9
  417458:	int    0xd1
  41745a:	xor    DWORD PTR [edi],0xec7dfbe6
  417460:	popf   
  417461:	fsubr  st,st(0)
  417463:	mov    ecx,0x1d0ddc1e
  417468:	mov    eax,0x878903f7
  41746d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41746e:	jno    0x417411
  417470:	mov    dl,0x18
  417472:	pop    ecx
  417473:	pushf  
  417474:	bswap  edi
  417476:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417477:	mov    al,0xdc
  417479:	add    DWORD PTR [eax-0x74],edx
  41747c:	in     eax,0x11
  41747e:	popa   
  41747f:	mov    ds:0xfe90148d,eax
  417484:	ins    BYTE PTR es:[edi],dx
  417485:	repnz mov eax,ds:0x48e4c241
  41748b:	add    BYTE PTR [eax-0x1130b0e1],al
  417491:	test   ah,0xf1
  417494:	retf   
  417495:	pop    edx
  417496:	push   ecx
  417497:	push   ebx
  417498:	jo     0x41742e
  41749a:	xchg   edi,eax
  41749b:	xor    BYTE PTR ds:0xb9842ff8,0x24
  4174a2:	add    ebx,DWORD PTR [eax+ebp*8]
  4174a5:	add    BYTE PTR [eax+0x387b020],al
  4174ab:	daa    
  4174ac:	clc    
  4174ad:	mov    bh,0x8d
  4174af:	adc    DWORD PTR [ebp-0x58ce5fb1],esi
  4174b5:	daa    
  4174b6:	icebp  
  4174b7:	adc    ecx,DWORD PTR es:[ebx-0x22]
  4174bb:	add    DWORD PTR cs:[esi-0x59a61031],ecx
  4174c2:	add    al,0x2b
  4174c4:	lahf   
  4174c5:	inc    edi
  4174c6:	cli    
  4174c7:	das    
  4174c8:	inc    ebp
  4174c9:	jb     0x4174a3
  4174cb:	pop    esp
  4174cc:	fcom   DWORD PTR [ebx]
  4174ce:	inc    esi
  4174cf:	cld    
  4174d0:	mov    ecx,0x3ef4b4bd
  4174d5:	pop    edx
  4174d6:	mov    esi,0x2dcafb9f
  4174db:	(bad)  
  4174dc:	mov    ecx,0x49066451
  4174e1:	jne    0x4174be
  4174e3:	sub    al,0x27
  4174e5:	mov    eax,ds:0x4e278b95
  4174ea:	or     BYTE PTR [ecx-0x7d],ah
  4174ed:	js     0x417550
  4174ef:	lahf   
  4174f0:	push   ebp
  4174f1:	fwait
  4174f2:	imul   esp,DWORD PTR ds:0x7c883346,0x7c014e64
  4174fc:	imul   BYTE PTR [edi-0x65]
  4174ff:	dec    esi
  417500:	leave  
  417501:	outs   dx,DWORD PTR ds:[esi]
  417502:	repz mov esp,DWORD PTR [ebx]
  417505:	addr16 mov eax,ds:0xba20
  417509:	jmp    0xbfea:0x76f7553b
  417510:	pop    ecx
  417511:	dec    DWORD PTR [edi]
  417513:	sbb    BYTE PTR [ebx],0x54
  417516:	mov    DWORD PTR [ecx-0x56],esp
  417519:	faddp  st(3),st
  41751b:	ror    DWORD PTR [ecx],1
  41751d:	mov    dh,0xf7
  41751f:	mov    edx,0x1c3a2b70
  417524:	jg     0x417590
  417526:	dec    edi
  417527:	add    BYTE PTR [edi+ebp*8],ch
  41752a:	pushf  
  41752b:	fadd   st,st(7)
  41752d:	stos   DWORD PTR es:[edi],eax
  41752e:	mov    ds:0x65ff89b0,eax
  417533:	fisubr DWORD PTR [ebx+0x8936f2f]
  417539:	in     al,dx
  41753a:	push   ecx
  41753b:	push   ebx
  41753c:	push   eax
  41753d:	xlat   BYTE PTR ds:[ebx]
  41753e:	push   0xffffff8c
  417540:	jo     0x4175b2
  417542:	inc    ecx
  417543:	dec    DWORD PTR [edx]
  417545:	scas   eax,DWORD PTR es:[edi]
  417546:	mov    dl,0x2a
  417548:	fwait
  417549:	cdq    
  41754a:	inc    esi
  41754b:	pop    es
  41754c:	in     eax,0xfd
  41754e:	jecxz  0x41750d
  417550:	mov    ds:0x7749a4f1,al
  417555:	int    0x80
  417557:	jmp    DWORD PTR [edx]
  417559:	dec    ecx
  41755a:	push   eax
  41755b:	popa   
  41755c:	retf   0x5cb5
  41755f:	cli    
  417560:	addr16 cmp al,0xf8
  417563:	(bad)  
  417565:	fadd   QWORD PTR [esi-0x4a]
  417568:	outs   dx,DWORD PTR ds:[esi]
  417569:	push   ss
  41756a:	and    al,0x49
  41756c:	sbb    eax,0x8cbd9249
  417571:	fs out 0xb4,eax
  417574:	enter  0x2355,0x3f
  417578:	jns    0x4175d0
  41757a:	pop    edi
  41757b:	popf   
  41757c:	push   es
  41757d:	mov    dh,0xd2
  41757f:	mov    ebp,0xc0d2be40
  417584:	scas   eax,DWORD PTR es:[edi]
  417585:	or     ebp,esi
  417587:	in     al,0xa7
  417589:	jg     0x41758f
  41758b:	and    BYTE PTR ds:0x8de297a7,al
  417591:	sbb    al,BYTE PTR [edi-0x498d9d75]
  417597:	pop    eax
  417598:	dec    edx
  417599:	icebp  
  41759a:	in     eax,dx
  41759b:	enter  0xc7a2,0x32
  41759f:	sub    eax,0xae9e3b6f
  4175a4:	scas   al,BYTE PTR es:[edi]
  4175a5:	xchg   esi,eax
  4175a6:	xor    DWORD PTR [ebx+0x51de0273],edx
  4175ac:	(bad)  
  4175ad:	xchg   edx,eax
  4175ae:	ja     0x417541
  4175b0:	adc    BYTE PTR [eax],ch
  4175b2:	sbb    DWORD PTR [ebx-0x68],ebp
  4175b5:	xchg   DWORD PTR [eax],ecx
  4175b7:	div    ebx
  4175b9:	bound  edx,QWORD PTR [ecx+0x6e]
  4175bc:	popa   
  4175bd:	and    al,0xe5
  4175bf:	adc    eax,0xe04f18e7
  4175c4:	dec    ecx
  4175c5:	call   0x81af:0x167d95c5
  4175cc:	xchg   ecx,eax
  4175cd:	loop   0x417635
  4175cf:	xor    ah,ch
  4175d1:	iret   
  4175d2:	and    BYTE PTR [bx+si+0x4bd3],al
  4175d7:	pop    ds
  4175d8:	aad    0x27
  4175da:	mov    eax,0x8f9fdd03
  4175df:	rcr    BYTE PTR [esi+0x17],cl
  4175e2:	or     ecx,DWORD PTR [esi]
  4175e4:	inc    edi
  4175e5:	jmp    0x597563f1
  4175ea:	mov    esi,0x10ea1249
  4175ef:	loop   0x4175f5
  4175f1:	push   es
  4175f2:	dec    esp
  4175f3:	js     0x4175b8
  4175f5:	push   esp
  4175f6:	cmp    BYTE PTR [esi+eax*4-0x6fa7faf2],cl
  4175fd:	stos   DWORD PTR es:[edi],eax
  4175fe:	ficomp WORD PTR [ebx-0xc817c01]
  417604:	xchg   DWORD PTR [eax+0x12fac4a7],ebx
  41760a:	push   ebx
  41760b:	rcr    BYTE PTR [esi+0x65944d4f],cl
  417611:	adc    edx,DWORD PTR [edi]
  417613:	pop    edx
  417614:	sub    eax,0xa2b85905
  417619:	adc    eax,0x34525560
  41761e:	mov    dh,0x12
  417620:	sar    DWORD PTR [eax],1
  417622:	test   BYTE PTR [ecx+0x88c28e3],cl
  417628:	arpl   WORD PTR [eax],sp
  41762a:	adc    BYTE PTR [eax],cl
  41762c:	push   ebp
  41762d:	sub    ch,al
  41762f:	xor    eax,0x66fa88f5
  417634:	(bad)  
  417635:	mov    eax,ds:0xd8ef2def
  41763a:	xor    esi,edi
  41763c:	sub    DWORD PTR [edx+ebp*4+0x11],edx
  417640:	and    eax,0x33bccab8
  417645:	pushf  
  417646:	jbe    0x4175d2
  417648:	std    
  417649:	in     ax,0xd6
  41764c:	repnz rol DWORD PTR [esi-0xb744aa5],0xb8
  417654:	dec    edx
  417655:	add    eax,0x92c6c961
  41765a:	jp     0x4175e7
  41765c:	xor    ah,BYTE PTR [ebp-0x65725d3c]
  417662:	mov    ebx,0xabd29d7b
  417667:	fs dec bp
  41766a:	dec    ebp
  41766b:	cld    
  41766c:	fsub   QWORD PTR [ebx]
  41766e:	push   esi
  41766f:	mov    esp,ebp
  417671:	sbb    dl,BYTE PTR [eax]
  417673:	push   0xffffffaa
  417675:	cdq    
  417676:	adc    ecx,DWORD PTR [ecx]
  417678:	out    0x97,al
  41767a:	(bad)  
  41767b:	or     eax,0x9ee136a5
  417680:	inc    ebx
  417681:	(bad)  
  417682:	jmp    0xc5cdc78f
  417687:	sub    BYTE PTR [edi-0x51],ch
  41768a:	inc    edi
  41768b:	xchg   ecx,eax
  41768c:	stos   DWORD PTR es:[edi],eax
  41768d:	test   al,0x15
  41768f:	xchg   edx,eax
  417690:	cmc    
  417691:	es xchg esi,eax
  417693:	pop    es
  417694:	ror    cl,cl
  417696:	pop    ebx
  417697:	(bad)  
  417698:	clc    
  417699:	ret    0x2039
  41769c:	push   esi
  41769d:	inc    ecx
  41769e:	into   
  41769f:	and    cl,cl
  4176a1:	sub    BYTE PTR [ebx+0x1763815e],ah
  4176a7:	mov    ?,ebp
  4176a9:	adc    edi,DWORD PTR [edi+ebp*1-0x64]
  4176ad:	sbb    DWORD PTR [eax],edi
  4176af:	inc    ebx
  4176b0:	mov    bl,0x94
  4176b2:	neg    DWORD PTR [ecx-0x2d]
  4176b5:	mov    DWORD PTR [edx],ebp
  4176b7:	add    bl,dh
  4176b9:	cld    
  4176ba:	lods   al,BYTE PTR ds:[esi]
  4176bb:	stos   BYTE PTR es:[edi],al
  4176bc:	cs cld 
  4176be:	jg     0x417663
  4176c0:	lods   al,BYTE PTR ds:[esi]
  4176c1:	xchg   BYTE PTR [ecx-0xaf07fe4],ah
  4176c7:	outs   dx,DWORD PTR ds:[esi]
  4176c8:	in     eax,0xd2
  4176ca:	loopne 0x417722
  4176cc:	clc    
  4176cd:	out    0xb8,al
  4176cf:	mov    eax,gs
  4176d1:	les    edi,FWORD PTR [ebp+esi*1+0x5d]
  4176d5:	test   eax,esi
  4176d7:	cmp    BYTE PTR [ebx+0x1f],al
  4176da:	and    al,0x36
  4176dc:	aas    
  4176dd:	inc    edx
  4176de:	aam    0xfd
  4176e0:	jmp    0x7c13:0x476ce5db
  4176e7:	in     al,dx
  4176e8:	inc    esi
  4176e9:	and    dh,BYTE PTR [edx+0x5b]
  4176ec:	repnz data16 std 
  4176ef:	push   esi
  4176f0:	fisubr WORD PTR [edx+ebx*1-0x65]
  4176f4:	mov    eax,0x3c49a249
  4176f9:	push   esi
  4176fa:	and    bh,BYTE PTR ds:0x6b662654
  417700:	xchg   ebp,eax
  417701:	lea    ebx,[edx+0x13]
  417704:	jp     0x41772e
  417706:	mov    dl,BYTE PTR [edx-0x47]
  417709:	fldcw  WORD PTR [edi+0x501ea1df]
  41770f:	mov    ebp,DWORD PTR [ebx+edx*4-0xfd5024f]
  417716:	or     ecx,DWORD PTR [edx-0x344a2e21]
  41771c:	sbb    cl,bl
  41771e:	shr    BYTE PTR [edi],1
  417720:	jp     0x417749
  417722:	int    0x76
  417724:	mov    al,ds:0xfb09f27a
  417729:	bndstx [eax+0x18f95964],(bad)
  417730:	(bad)  
  417731:	jecxz  0x417758
  417733:	in     al,0x8e
  417735:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417736:	bound  esp,QWORD PTR [eax]
  417738:	in     al,dx
  417739:	cmp    eax,0x1613dad6
  41773e:	outs   dx,BYTE PTR ds:[esi]
  41773f:	adc    edi,DWORD PTR [ecx+0x9]
  417742:	fxch   st(6)
  417744:	in     eax,dx
  417745:	and    esi,ebp
  417747:	or     BYTE PTR [esi-0x70],bl
  41774a:	jle    0x417751
  41774c:	sub    eax,0xa73fb8c4
  417751:	rcl    edi,0x9f
  417754:	lahf   
  417755:	mov    edi,0xce9c565a
  41775a:	and    BYTE PTR [eax],dh
  41775c:	add    BYTE PTR [edx],ah
  41775e:	mov    WORD PTR [edi-0x77],cs
  417761:	loopne 0x4176e6
  417763:	jb     0x417728
  417765:	std    
  417766:	dec    esp
  417767:	into   
  417768:	mov    eax,ds:0xc38c5645
  41776d:	aad    0xf1
  41776f:	(bad)  
  417770:	push   0x18
  417772:	in     eax,dx
  417773:	adc    al,BYTE PTR [eax-0x483727ca]
  417779:	int3   
  41777a:	sbb    al,0xdc
  41777c:	inc    ebp
  41777d:	aam    0xd2
  41777f:	adc    DWORD PTR [esp+ebx*1],esi
  417782:	push   esi
  417783:	out    dx,al
  417784:	ins    BYTE PTR es:[edi],dx
  417785:	inc    edi
  417786:	pop    ebp
  417787:	call   0x1cb6975b
  41778c:	mov    ds:0xfb81162,al
  417791:	sti    
  417792:	stc    
  417793:	idiv   ah
  417795:	and    eax,0xd7e4128b
  41779a:	test   BYTE PTR [edx],bl
  41779c:	cmp    DWORD PTR [edx+eiz*8-0x40b10d03],ebx
  4177a3:	pop    edi
  4177a4:	(bad)  
  4177a5:	cmp    DWORD PTR [edi-0x215a8644],esi
  4177ab:	std    
  4177ac:	jb     0x417773
  4177ae:	aas    
  4177af:	jbe    0x417764
  4177b1:	scas   eax,DWORD PTR es:[edi]
  4177b2:	xor    eax,0x1e5bc045
  4177b7:	and    BYTE PTR [edi+0x69],0xe5
  4177bb:	cmp    edx,esp
  4177bd:	cs jnp 0x41778a
  4177c0:	clc    
  4177c1:	lods   eax,DWORD PTR ds:[esi]
  4177c2:	push   edi
  4177c3:	jns    0x417787
  4177c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177c6:	push   0x18a64482
  4177cb:	mov    ds:0x10d5085d,al
  4177d0:	pop    ss
  4177d1:	or     cl,BYTE PTR [edx-0x714e9dbb]
  4177d7:	xor    BYTE PTR [ebx-0x210ef922],0x3f
  4177de:	push   0xffffffa7
  4177e0:	outs   dx,BYTE PTR ds:[esi]
  4177e1:	loopne 0x417779
  4177e3:	rcr    esi,0x4
  4177e6:	ret    
  4177e7:	stc    
  4177e8:	pop    edx
  4177e9:	inc    esi
  4177ea:	mov    al,0x8d
  4177ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177ee:	jecxz  0x4177ae
  4177f0:	inc    ebx
  4177f1:	aas    
  4177f2:	adc    al,BYTE PTR [eax-0x3f]
  4177f5:	sbb    BYTE PTR [esi],bh
  4177f7:	test   DWORD PTR [eax+0x44],edi
  4177fa:	nop
  4177fb:	popf   
  4177fc:	loopne 0x417787
  4177fe:	xor    DWORD PTR [ebp+0x52],ecx
  417801:	push   esi
  417802:	add    al,0x6a
  417804:	inc    ebp
  417805:	jge    0x417836
  417807:	mov    ?,edx
  417809:	xchg   esi,eax
  41780a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41780b:	jnp    0x417820
  41780d:	push   0x46
  41780f:	out    dx,eax
  417810:	mov    bl,0x8e
  417812:	jg     0x4177dd
  417814:	push   0xffffffc9
  417816:	adc    edi,esp
  417818:	xor    cl,bh
  41781a:	sub    edi,esp
  41781c:	enter  0x31c1,0xbb
  417820:	int    0xac
  417822:	shufps xmm0,XMMWORD PTR [ecx+0x3085e2ac],0x67
  41782a:	leave  
  41782b:	jns    0x417858
  41782d:	xchg   edi,eax
  41782e:	jmp    0xde46:0x47cbbf5f
  417835:	call   esi
  417837:	pop    ebp
  417838:	pop    esp
  417839:	xchg   edx,eax
  41783a:	bound  ebx,QWORD PTR [ebx]
  41783c:	test   eax,0x65e6d0
  417841:	push   ss
  417842:	adc    DWORD PTR [esi+0x77],0xffffffc8
  417846:	or     DWORD PTR [edi],0xffffff85
  417849:	add    BYTE PTR [esi],ah
  41784b:	(bad)  
  41784c:	sbb    eax,0x12c3137c
  417851:	push   ss
  417852:	or     DWORD PTR [eax+0x3f],0x6cea2070
  417859:	outs   dx,BYTE PTR ds:[esi]
  41785a:	jne    0x4177fe
  41785c:	arpl   WORD PTR [eax-0x19],dx
  41785f:	cmp    eax,0xa22e792b
  417864:	fidivr DWORD PTR [ebp+0x12]
  417867:	sbb    bh,BYTE PTR [edi+0x11]
  41786a:	(bad)  
  41786c:	pop    ds
  41786d:	add    bl,BYTE PTR [ecx]
  41786f:	stos   DWORD PTR es:[edi],eax
  417870:	jge    0x4178d2
  417872:	adc    BYTE PTR [edi+0x7ad07bdb],al
  417878:	(bad)  
  417879:	fld    st(0)
  41787b:	test   BYTE PTR [edi+0x27b8bccb],al
  417881:	pop    esp
  417882:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417883:	inc    ebx
  417884:	sbb    BYTE PTR [ebx],cl
  417886:	arpl   WORD PTR [ebx+0x5aaac985],dx
  41788c:	iret   
  41788d:	xchg   edi,eax
  41788e:	call   0xdeef:0x1c399e67
  417895:	ret    
  417896:	fnstsw ax
  417898:	xchg   esp,eax
  417899:	adc    ch,BYTE PTR [esi-0x74]
  41789c:	mov    esp,0xe45f8fb8
  4178a1:	cdq    
  4178a2:	out    dx,eax
  4178a3:	es inc edi
  4178a5:	inc    ecx
  4178a6:	xlat   BYTE PTR ds:[ebx]
  4178a7:	or     bl,BYTE PTR [esi+0x4b]
  4178aa:	(bad)  
  4178ab:	push   esi
  4178ac:	adc    dl,BYTE PTR [eax-0x33bf0ed9]
  4178b2:	pop    esi
  4178b3:	lds    ebx,FWORD PTR [esi]
  4178b5:	test   DWORD PTR [esi-0x53a18652],eax
  4178bb:	iret   
  4178bc:	mov    al,ds:0xfd3b4d93
  4178c1:	fcom   DWORD PTR [esi-0x6]
  4178c4:	jmp    0x417861
  4178c6:	push   esi
  4178c7:	push   edi
  4178c8:	lock mov DWORD PTR [edx+0x63],esi
  4178cc:	push   ebx
  4178cd:	or     dh,BYTE PTR [eax-0x34b0d5bf]
  4178d3:	pop    ds
  4178d4:	jne    0x417940
  4178d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178d7:	ds pop esp
  4178d9:	daa    
  4178da:	(bad)
  4178dd:	loop   0x417905
  4178df:	sub    BYTE PTR [ecx-0x44088934],ah
  4178e5:	test   BYTE PTR [ecx-0x51],ah
  4178e8:	lods   al,BYTE PTR ds:[esi]
  4178e9:	or     edx,esi
  4178eb:	ror    bh,0x58
  4178ee:	sbb    bh,BYTE PTR [edx+eax*2]
  4178f1:	or     DWORD PTR [edx-0x5ab1a912],ecx
  4178f7:	popa   
  4178f8:	fisub  WORD PTR [esi-0x5e]
  4178fb:	cwde   
  4178fc:	pop    esp
  4178fd:	push   ds
  4178fe:	ins    DWORD PTR es:[edi],dx
  4178ff:	and    DWORD PTR [ebp-0x47],edx
  417902:	rcl    DWORD PTR [eax+0x1a],cl
  417905:	out    dx,eax
  417906:	xchg   ebx,eax
  417907:	inc    esp
  417908:	mov    ecx,0x2442fdbe
  41790d:	adc    bl,al
  41790f:	out    dx,eax
  417910:	je     0x417987
  417912:	test   ebx,edi
  417914:	fisub  DWORD PTR [ebx-0x41d6ae5f]
  41791a:	call   ebx
  41791c:	sub    BYTE PTR [edx],0x3b
  41791f:	xor    eax,0xc9aeb331
  417924:	push   cs
  417925:	femms  
  417927:	mov    esp,DWORD PTR [edi-0xa]
  41792a:	dec    ebp
  41792b:	cwde   
  41792c:	in     al,0x3a
  41792e:	fld    QWORD PTR [ebp+ebx*2-0x57d2d97b]
  417935:	mov    dh,0xa1
  417937:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417938:	punpckhbw mm3,QWORD PTR [ecx+edi*1-0x3e0ce8ea]
  417940:	sti    
  417941:	mov    eax,0xcd165325
  417946:	mov    ds:0x14db182c,al
  41794b:	inc    edx
  41794c:	push   esi
  41794d:	neg    esp
  41794f:	inc    ebp
  417950:	sbb    bh,BYTE PTR [esi+esi*8-0x662efa72]
  417957:	push   cs
  417958:	adc    DWORD PTR [ecx+0x27acdbd9],ecx
  41795e:	xor    DWORD PTR [ecx+0x30dea416],ebp
  417964:	(bad)  
  417966:	or     BYTE PTR [eax+0x5c],bh
  417969:	fdiv   QWORD PTR [esi+0x45]
  41796c:	dec    edx
  41796d:	jecxz  0x41791d
  41796f:	dec    eax
  417970:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417971:	lds    ecx,FWORD PTR [esi+0x6e18c1f2]
  417977:	int    0xe9
  417979:	test   al,0x66
  41797b:	fwait
  41797c:	icebp  
  41797d:	daa    
  41797e:	call   0x559f505
  417983:	xor    al,0xbf
  417985:	adc    eax,0x1a11feef
  41798a:	gs int3 
  41798c:	aas    
  41798d:	std    
  41798e:	sbb    dh,BYTE PTR [esi+0x37]
  417991:	push   es
  417992:	and    BYTE PTR [eax],0x3e
  417995:	repnz adc al,BYTE PTR [eax+0x4a4dd68b]
  41799c:	repz and al,0x9f
  41799f:	mov    ds,WORD PTR [eax]
  4179a1:	fstp   DWORD PTR fs:[esi+0x66]
  4179a5:	lea    esp,[edi+0x15e7d57c]
  4179ab:	pop    edx
  4179ac:	test   ebx,ebx
  4179ae:	push   0xffffffca
  4179b0:	sar    BYTE PTR [esi],0x4c
  4179b3:	mov    esi,0x8f24c353
  4179b8:	les    ebx,FWORD PTR [eax]
  4179ba:	add    dh,cl
  4179bc:	sub    edi,DWORD PTR [edi]
  4179be:	(bad)  
  4179bf:	jmp    0x49db:0x930dcd0c
  4179c6:	shr    BYTE PTR [eax-0x15037351],cl
  4179cc:	ins    BYTE PTR es:[edi],dx
  4179cd:	mov    bl,0x2
  4179cf:	add    al,0xcf
  4179d1:	pop    edi
  4179d2:	xchg   esp,eax
  4179d3:	pop    edx
  4179d4:	mov    BYTE PTR [edx+eiz*4],dl
  4179d7:	shl    BYTE PTR [ecx-0x2fc40bd8],1
  4179dd:	bound  esp,QWORD PTR [eax+0x3321391d]
  4179e3:	rcr    DWORD PTR [edi],1
  4179e5:	push   ebx
  4179e6:	out    0x2d,al
  4179e8:	push   ds
  4179e9:	leave  
  4179ea:	stos   DWORD PTR es:[edi],eax
  4179eb:	jge    0x4179c9
  4179ed:	lds    edi,FWORD PTR [edi+0x2d4e5f1]
  4179f3:	(bad)  
  4179f4:	repnz loop 0x417991
  4179f7:	scas   eax,DWORD PTR es:[edi]
  4179f8:	adc    DWORD PTR [ebx+0x731850cc],eax
  4179fe:	mov    esi,0xb2415c2
  417a03:	in     eax,dx
  417a04:	pop    esi
  417a05:	retf   
  417a06:	jo     0x4179ed
  417a08:	pop    ss
  417a09:	xchg   ecx,eax
  417a0a:	mov    ds:0x60d72ed1,eax
  417a0f:	push   eax
  417a10:	xor    ebp,ebp
  417a12:	mov    gs,WORD PTR ds:0x198a
  417a17:	mov    eax,0xab327293
  417a1c:	frstor [ebp+0x11]
  417a1f:	std    
  417a20:	inc    BYTE PTR [edi-0x368e60be]
  417a26:	pop    DWORD PTR [eiz*8-0x5a25535b]
  417a2d:	cmp    al,0xf3
  417a2f:	fldcw  WORD PTR [edx-0x61]
  417a32:	bound  eax,QWORD PTR [esp+eax*1-0x37]
  417a36:	dec    ecx
  417a37:	or     ebx,esi
  417a39:	inc    ecx
  417a3a:	int    0x5b
  417a3c:	mov    ch,0xb8
  417a3e:	pop    ebx
  417a3f:	mov    ch,0x27
  417a41:	jp     0x417a77
  417a43:	cs in  al,dx
  417a45:	sbb    al,0xc3
  417a47:	jmp    0x417a78
  417a49:	popf   
  417a4a:	lods   eax,DWORD PTR ds:[esi]
  417a4b:	cmc    
  417a4c:	jbe    0x417ac3
  417a4e:	adc    al,0x46
  417a50:	mov    ds:0x6513e610,al
  417a55:	push   edx
  417a56:	imul   edx,DWORD PTR [ebx],0x4d
  417a59:	(bad)
  417a5c:	das    
  417a5d:	xchg   esi,eax
  417a5e:	sbb    eax,0x5deceb9a
  417a63:	cli    
  417a64:	rol    BYTE PTR [edx-0x18],1
  417a67:	xor    ecx,ebx
  417a69:	mov    ebp,0x5f2d5959
  417a6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a6f:	dec    edi
  417a70:	xor    al,0xb3
  417a72:	xchg   ebp,eax
  417a73:	jmp    0x417acf
  417a75:	loopne 0x417aba
  417a77:	pop    esp
  417a78:	jae    0x417aae
  417a7a:	les    ecx,FWORD PTR [eax]
  417a7c:	adc    edi,DWORD PTR [eax-0x7e51e23b]
  417a82:	sbb    eax,0x6762b445
  417a87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a88:	lods   eax,DWORD PTR ds:[esi]
  417a89:	stc    
  417a8a:	or     ah,BYTE PTR ds:0x320443af
  417a90:	pop    es
  417a91:	dec    ecx
  417a92:	sbb    BYTE PTR [esi],0x13
  417a95:	bound  edx,QWORD PTR [esi+0x27]
  417a98:	imul   esp,edi,0x34
  417a9b:	xchg   esi,eax
  417a9c:	jae    0x417a55
  417a9e:	pop    ecx
  417a9f:	xor    al,0x5a
  417aa1:	mov    eax,ds:0xfc7761fe
  417aa6:	mov    ah,BYTE PTR [eax-0xa59e875]
  417aac:	scas   al,BYTE PTR es:[edi]
  417aad:	sbb    esi,DWORD PTR [eax-0xebc3f38]
  417ab3:	leave  
  417ab4:	data16 jne 0x417b08
  417ab7:	sub    BYTE PTR [eax+0x46d6f666],dh
  417abd:	cmp    esp,esi
  417abf:	(bad)  
  417ac0:	mov    al,0xf8
  417ac2:	daa    
  417ac3:	icebp  
  417ac4:	inc    DWORD PTR [ecx+ebx*2+0x23]
  417ac8:	(bad)  
  417ac9:	in     al,0xb5
  417acb:	dec    ecx
  417acc:	and    ebx,0x93efd2bd
  417ad2:	dec    ecx
  417ad3:	popa   
  417ad4:	out    dx,eax
  417ad5:	scas   al,BYTE PTR es:[edi]
  417ad6:	mov    dh,0x27
  417ad8:	cmp    BYTE PTR [ecx+0x23fbc8d3],bl
  417ade:	loopne 0x417ac1
  417ae0:	ret    0x798e
  417ae3:	outs   dx,DWORD PTR ds:[esi]
  417ae4:	gs enter 0xb917,0x20
  417ae9:	jge    0x417ab4
  417aeb:	in     al,dx
  417aec:	xlat   BYTE PTR ds:[ebx]
  417aed:	push   eax
  417aee:	test   dl,bh
  417af0:	mov    bh,0xa
  417af2:	test   BYTE PTR [edi],ch
  417af4:	dec    esp
  417af5:	push   ss
  417af6:	and    BYTE PTR [edx-0x49],bh
  417af9:	adc    eax,0x36feaf78
  417afe:	cwde   
  417aff:	jl     0x417aa5
  417b01:	sbb    ch,cl
  417b03:	and    ebp,edi
  417b05:	mul    ecx
  417b07:	mov    cl,0x70
  417b09:	cmp    DWORD PTR [ebx+0x11],edx
  417b0c:	mov    ecx,0xba2bb55e
  417b11:	inc    ecx
  417b12:	adc    al,0xe1
  417b14:	sahf   
  417b15:	clc    
  417b16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b17:	scas   al,BYTE PTR es:[edi]
  417b18:	cld    
  417b19:	ss and al,0xf1
  417b1c:	or     edx,DWORD PTR [ebx+0x53128279]
  417b22:	mov    esi,0xc2ced9d4
  417b27:	lds    edx,FWORD PTR [edx]
  417b29:	push   ds
  417b2a:	inc    edi
  417b2b:	xor    al,0x9c
  417b2d:	xrelease xchg DWORD PTR [eax-0x18ffd424],edx
  417b34:	pop    ds
  417b35:	cs dec esp
  417b37:	and    eax,0x8607b499
  417b3c:	mov    al,ds:0xd1223b25
  417b41:	out    dx,eax
  417b42:	rcr    BYTE PTR [ebx],cl
  417b44:	aaa    
  417b45:	in     al,dx
  417b46:	not    DWORD PTR [esi-0x2c]
  417b49:	retf   
  417b4a:	jg     0x417acd
  417b4c:	cmp    bh,BYTE PTR [eax]
  417b4e:	mov    edx,0x4ee86506
  417b53:	ret    
  417b54:	dec    eax
  417b55:	xor    esi,DWORD PTR [edi+0x14]
  417b58:	int3   
  417b59:	adc    ecx,DWORD PTR [ecx-0x3f]
  417b5c:	jb     0x417ade
  417b5e:	xor    eax,0xe7fd9e78
  417b63:	ins    BYTE PTR es:[edi],dx
  417b64:	inc    ecx
  417b65:	je     0x417af3
  417b67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b68:	or     al,0x1f
  417b6a:	mov    esp,0x3d368430
  417b6f:	loopne 0x417bad
  417b71:	call   0xfb9edd1e
  417b76:	adc    al,dh
  417b78:	push   eax
  417b79:	imul   edi,esp,0x74
  417b7c:	sub    BYTE PTR [edx],0xe1
  417b7f:	or     dl,BYTE PTR [edi]
  417b81:	pop    eax
  417b82:	adc    edi,DWORD PTR [edx]
  417b84:	adc    DWORD PTR [esi+0x21baced6],0xffffffed
  417b8b:	jnp    0x417bc2
  417b8d:	sbb    al,0x8a
  417b8f:	ret    
  417b90:	sub    ch,BYTE PTR [ecx]
  417b92:	cmp    ah,BYTE PTR [esi-0x2593263d]
  417b98:	div    BYTE PTR gs:[edx]
  417b9b:	dec    ecx
  417b9c:	(bad)  
  417b9d:	ja     0x417b67
  417b9f:	sbb    DWORD PTR [ebx],ebp
  417ba1:	(bad)  
  417ba2:	push   DWORD PTR [ebp+0x443611b]
  417ba8:	sbb    eax,0xd825c31c
  417bad:	xor    ch,dl
  417baf:	add    DWORD PTR [ebp-0x74],eax
  417bb2:	cwde   
  417bb3:	cmp    al,0xfc
  417bb5:	(bad)  
  417bb6:	mov    ebx,0xc6347e1b
  417bbb:	xchg   BYTE PTR [ebp-0x71cbdb0a],bh
  417bc1:	scas   al,BYTE PTR es:[edi]
  417bc2:	out    0xc0,al
  417bc4:	push   ss
  417bc5:	xchg   ebp,eax
  417bc6:	or     al,0xcc
  417bc8:	outs   dx,BYTE PTR ds:[esi]
  417bc9:	sub    dl,BYTE PTR [ebp-0x8]
  417bcc:	and    DWORD PTR [eax-0x1b],0x27
  417bd0:	dec    ebp
  417bd1:	and    al,0xf0
  417bd3:	jle    0x417c2b
  417bd5:	fild   DWORD PTR [eax-0x66ff4525]
  417bdb:	or     eax,0x5ce7f2e1
  417be0:	jno    0x417c30
  417be2:	lods   al,BYTE PTR ds:[esi]
  417be3:	or     dl,0x68
  417be6:	dec    esi
  417be7:	aas    
  417be8:	fnstsw WORD PTR [eax+0x4b]
  417beb:	mov    eax,0x1ec03a77
  417bf0:	in     eax,0x13
  417bf2:	add    DWORD PTR [ebx-0x4e],ebp
  417bf5:	or     DWORD PTR [ebp+0x3a],esi
  417bf8:	fld    DWORD PTR [ebx]
  417bfa:	fwait
  417bfb:	pop    edx
  417bfc:	imul   ebx,DWORD PTR [edi+0x4be40477],0x9678c0a6
  417c06:	jl     0x417b93
  417c08:	int    0xc6
  417c0a:	xor    cl,BYTE PTR [esi+0x54]
  417c0d:	sub    eax,esp
  417c0f:	ret    0x4dd9
  417c12:	int    0xc0
  417c14:	adc    BYTE PTR [esi-0x34],dh
  417c17:	push   esi
  417c18:	cmc    
  417c19:	mov    edx,0x841825e
  417c1e:	pop    esp
  417c1f:	push   0xdff28cb3
  417c24:	and    eax,0xce0e85ce
  417c29:	iret   
  417c2a:	stos   DWORD PTR es:[edi],eax
  417c2b:	test   al,0xdc
  417c2d:	imul   ebp,DWORD PTR [esp+ebx*4-0x48b6e3a1],0x2b
  417c35:	out    0x93,eax
  417c37:	sbb    al,0x29
  417c39:	mov    ?,WORD PTR [edi+esi*2-0x5b]
  417c3d:	mov    eax,edx
  417c3f:	jle    0x417c22
  417c41:	dec    ebx
  417c42:	sub    al,0x3b
  417c44:	pop    esp
  417c45:	mov    al,ds:0xb5835e26
  417c4a:	jno    0x417c2f
  417c4c:	push   esi
  417c4d:	sar    BYTE PTR [edx],cl
  417c4f:	add    ebx,DWORD PTR [edx-0x2b]
  417c52:	or     eax,0xdbbd5cfd
  417c57:	nop
  417c58:	aad    0x63
  417c5a:	clc    
  417c5b:	mov    WORD PTR [esp+edi*1-0xaaf074],fs
  417c62:	enter  0x3796,0x75
  417c66:	sub    al,0x29
  417c68:	inc    ecx
  417c69:	das    
  417c6a:	lds    esi,FWORD PTR [ecx-0xa530ca9]
  417c70:	inc    ebx
  417c71:	neg    cl
  417c73:	sbb    al,bl
  417c75:	ins    BYTE PTR es:[edi],dx
  417c76:	and    BYTE PTR [eax],ah
  417c78:	adc    al,0x50
  417c7a:	or     bl,BYTE PTR [esi]
  417c7c:	xchg   edx,eax
  417c7d:	inc    esp
  417c7e:	(bad)  
  417c7f:	lods   al,BYTE PTR ds:[esi]
  417c80:	jmp    FWORD PTR ds:[ebp+edx*1-0x18]
  417c85:	pusha  
  417c86:	mov    BYTE PTR [bp+di],ah
  417c89:	bound  ebp,QWORD PTR [edx]
  417c8b:	(bad)  
  417c8c:	push   ds
  417c8d:	test   al,0xae
  417c8f:	mov    ebx,0xe1050eb7
  417c94:	push   ds
  417c95:	test   eax,0x4d4aea
  417c9a:	test   al,0xa6
  417c9c:	(bad)  
  417c9d:	dec    esi
  417c9e:	loop   0x417c96
  417ca0:	jmp    FWORD PTR [eax+esi*2]
  417ca3:	inc    eax
  417ca4:	ds stc 
  417ca6:	mov    dh,0x7d
  417ca8:	out    0x5a,eax
  417caa:	out    dx,al
  417cab:	lods   eax,DWORD PTR ds:[esi]
  417cac:	fcom   DWORD PTR [esi]
  417cae:	pop    ds
  417caf:	cld    
  417cb0:	push   edx
  417cb1:	sub    eax,0x63286fe3
  417cb6:	outs   dx,BYTE PTR ds:[esi]
  417cb7:	icebp  
  417cb8:	adc    ecx,DWORD PTR [edx-0x71]
  417cbb:	push   eax
  417cbc:	dec    BYTE PTR [ebx-0x71b0c9cb]
  417cc2:	aad    0x8a
  417cc4:	(bad)  
  417cc5:	ins    BYTE PTR es:[edi],dx
  417cc6:	dec    eax
  417cc7:	fwait
  417cc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cc9:	and    eax,0x317628
  417cce:	or     BYTE PTR [edi-0x2bb921f3],ah
  417cd4:	(bad)  
  417cd5:	sub    dh,bl
  417cd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cd8:	xchg   BYTE PTR [esi+0x1a],dl
  417cdb:	mov    ecx,0x12186c58
  417ce0:	aam    0xe9
  417ce2:	push   edx
  417ce3:	jp     0x417c83
  417ce5:	mov    ebx,0x24f5d0da
  417cea:	and    bl,BYTE PTR [ecx+0x10]
  417ced:	cmp    ecx,esp
  417cef:	mov    WORD PTR [edx+0xe7300ce],ds
  417cf5:	in     eax,0x4a
  417cf7:	pop    ds
  417cf8:	ja     0x417cb9
  417cfa:	cmp    esp,esp
  417cfc:	pop    esi
  417cfd:	or     DWORD PTR ds:0x228745da,esi
  417d03:	fcmovu st,st(4)
  417d05:	fidivr DWORD PTR [ebx]
  417d07:	xchg   esp,eax
  417d08:	nop
  417d09:	mov    bl,0xae
  417d0b:	xor    BYTE PTR [edx+eax*2+0x52d052bf],cl
  417d12:	clc    
  417d13:	push   esp
  417d14:	popa   
  417d15:	pop    esp
  417d16:	pop    edx
  417d17:	add    BYTE PTR [ecx+0x2f728cf3],bl
  417d1d:	sub    esi,esi
  417d1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d20:	dec    DWORD PTR ds:0x10a2293e
  417d26:	dec    ecx
  417d27:	jnp    0x417cb2
  417d29:	test   BYTE PTR [esi-0x6be73a78],cl
  417d2f:	add    al,al
  417d31:	jge    0x417d23
  417d33:	arpl   WORD PTR [edi-0x3d421c9e],dx
  417d39:	fisub  DWORD PTR [edi]
  417d3b:	je     0x417d79
  417d3d:	dec    ebx
  417d3e:	data16 aad 0xcb
  417d41:	(bad)  
  417d43:	pop    ss
  417d44:	or     al,0x9e
  417d46:	adc    DWORD PTR [bx+di],ebx
  417d49:	cwde   
  417d4a:	dec    edx
  417d4b:	dec    edx
  417d4c:	ret    
  417d4d:	out    0xfd,eax
  417d4f:	(bad)  
  417d50:	js     0x417d94
  417d52:	inc    DWORD PTR [ecx+0x38433d84]
  417d58:	pop    ss
  417d59:	ficomp WORD PTR [ebx]
  417d5b:	and    ch,cl
  417d5d:	mov    ebx,0x141f34e5
  417d62:	jne    0x417dc6
  417d64:	push   es
  417d65:	jmp    0xd95eefc
  417d6a:	ins    DWORD PTR es:[edi],dx
  417d6b:	adc    eax,0xbf9f6e15
  417d70:	loope  0x417d6b
  417d72:	and    ecx,DWORD PTR [ebx+0x73]
  417d75:	add    DWORD PTR [esi+eax*2-0x11],0xfffffff7
  417d7a:	or     cl,0xaa
  417d7d:	pusha  
  417d7e:	jmp    0x66d536ee
  417d83:	xor    dh,dh
  417d85:	jnp    0x417df8
  417d87:	inc    edx
  417d88:	mov    cl,0x42
  417d8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d8b:	pop    ecx
  417d8c:	mov    al,ds:0x275fcd7a
  417d91:	sbb    bh,BYTE PTR [ebx+0x38d85000]
  417d97:	idiv   DWORD PTR [edx]
  417d99:	jle    0x417dee
  417d9b:	imul   ebx,DWORD PTR [ecx+0x2f],0x55
  417d9f:	arpl   WORD PTR [ecx],ax
  417da1:	fwait
  417da2:	adc    al,0xd7
  417da4:	cmp    BYTE PTR [ebx+0x4f],dl
  417da7:	mov    bh,0xbd
  417da9:	pop    es
  417daa:	gs push cs
  417dac:	enter  0xebac,0xbb
  417db0:	and    ecx,edx
  417db2:	repz pop ds
  417db4:	lods   al,BYTE PTR ds:[esi]
  417db5:	in     eax,0xa7
  417db7:	test   al,0x3f
  417db9:	ret    
  417dba:	dec    eax
  417dbb:	aaa    
  417dbc:	int3   
  417dbd:	pop    ecx
  417dbe:	test   eax,0x111b6465
  417dc3:	push   esp
  417dc4:	inc    eax
  417dc5:	fdivr  st(1),st
  417dc7:	push   esi
  417dc8:	jg     0x417dcd
  417dca:	(bad)  
  417dcb:	lods   eax,DWORD PTR ds:[esi]
  417dcc:	xchg   ebp,eax
  417dcd:	push   cs
  417dce:	jae    0x417e4c
  417dd0:	cld    
  417dd1:	and    ebp,ebp
  417dd3:	xchg   ebp,eax
  417dd4:	mov    esi,0x4eee465d
  417dd9:	pop    ecx
  417dda:	int    0xed
  417ddc:	sti    
  417ddd:	xchg   esi,eax
  417dde:	shl    bh,cl
  417de0:	popa   
  417de1:	cli    
  417de2:	dec    ebx
  417de3:	popf   
  417de4:	push   ecx
  417de5:	in     eax,0xdc
  417de7:	lods   al,BYTE PTR ds:[esi]
  417de8:	leave  
  417de9:	adc    esp,eax
  417deb:	pushf  
  417dec:	fisubr DWORD PTR [esi-0x11de1e3c]
  417df2:	push   ecx
  417df3:	xor    eax,0x73268cd0
  417df8:	adc    DWORD PTR [edi-0x55],ebx
  417dfb:	add    ebp,DWORD PTR [esi-0x2d]
  417dfe:	or     edx,DWORD PTR [eax]
  417e00:	push   esp
  417e01:	dec    ebp
  417e02:	mov    al,0xd0
  417e04:	or     BYTE PTR [esp+eiz*4],bh
  417e07:	fdivr  DWORD PTR [esi+ebx*8+0x1c]
  417e0b:	arpl   WORD PTR [ebx+edi*8+0x3c],di
  417e0f:	add    edi,ebx
  417e11:	jmp    0xca2b:0x5ec83414
  417e18:	imul   edx,ecx,0x3e
  417e1b:	cmp    ebx,DWORD PTR [ebp-0x7d]
  417e1e:	stos   BYTE PTR es:[edi],al
  417e1f:	stos   BYTE PTR es:[edi],al
  417e20:	or     eax,0x7b5d9c82
  417e25:	sti    
  417e26:	dec    edi
  417e27:	and    esp,DWORD PTR [ecx-0x3b]
  417e2a:	loopne 0x417e5a
  417e2c:	in     al,0xfe
  417e2e:	icebp  
  417e2f:	jns    0x417e39
  417e31:	push   esp
  417e32:	jnp    0x417e0b
  417e34:	xor    ah,BYTE PTR [edi+ecx*1-0x499013c1]
  417e3b:	pop    ecx
  417e3c:	std    
  417e3d:	fistp  WORD PTR [eax+edx*1]
  417e40:	punpcklbw mm2,DWORD PTR [ecx-0x66]
  417e44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e45:	aaa    
  417e46:	push   ebx
  417e47:	fucom  st(2)
  417e49:	and    cl,BYTE PTR [edx-0x369e7ec8]
  417e4f:	xchg   esi,eax
  417e50:	add    DWORD PTR [esi],0x57c81019
  417e56:	jne    0x417e9a
  417e58:	(bad)  
  417e59:	sbb    eax,0xffffff9f
  417e5c:	cdq    
  417e5d:	mov    esi,0x7a85ed7
  417e62:	push   ds
  417e63:	sti    
  417e64:	xchg   esi,eax
  417e65:	jge    0x417e2d
  417e67:	ja     0x417e16
  417e69:	jle    0x417e96
  417e6b:	jno    0x417e7f
  417e6d:	add    BYTE PTR [eax+0x7b],dh
  417e70:	jmp    0x417e79
  417e72:	jmp    0x8860a19d
  417e77:	jp     0x417e75
  417e79:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  417e7b:	jle    0x417e42
  417e7d:	adc    eax,0xd5542e4
  417e82:	repnz inc ebx
  417e84:	mov    dh,0xaa
  417e86:	mov    ebx,0x366777ac
  417e8b:	dec    esp
  417e8c:	sbb    eax,0x944466ff
  417e91:	sahf   
  417e92:	fnstsw WORD PTR [ecx]
  417e94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e95:	add    esi,DWORD PTR [ebp+0x6d]
  417e98:	rcl    eax,1
  417e9a:	inc    ebx
  417e9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e9c:	mov    edx,0x2936a7f3
  417ea1:	sub    edx,DWORD PTR [esi+0x4c]
  417ea4:	enter  0x425f,0xe0
  417ea8:	add    BYTE PTR [ebx+0xb],bl
  417eab:	into   
  417eac:	xchg   edi,eax
  417ead:	jns    0x417eb4
  417eaf:	outs   dx,BYTE PTR ds:[esi]
  417eb0:	sahf   
  417eb1:	lods   al,BYTE PTR ds:[esi]
  417eb2:	sbb    dh,BYTE PTR [edx]
  417eb4:	std    
  417eb5:	(bad)  
  417eb6:	adc    DWORD PTR [ebp+0x27],ebx
  417eb9:	adc    al,cl
  417ebb:	daa    
  417ebc:	jbe    0x417eb5
  417ebe:	popa   
  417ebf:	sub    eax,0xade9bb25
  417ec4:	sbb    eax,0x20c2501a
  417ec9:	or     BYTE PTR [edx-0x41],ch
  417ecc:	push   esp
  417ecd:	lea    esp,[ebx]
  417ecf:	jo     0x417ebd
  417ed1:	jge    0x417e9b
  417ed3:	inc    edi
  417ed4:	inc    ecx
  417ed5:	inc    edx
  417ed6:	dec    esp
  417ed7:	lock fsubr st(2),st
  417eda:	aas    
  417edb:	rol    BYTE PTR [edx],1
  417edd:	ja     0x417eb9
  417edf:	push   esi
  417ee0:	mov    bl,0x46
  417ee2:	(bad)  
  417ee3:	(bad)
  417ee6:	loopne 0x417e9d
  417ee8:	(bad)  
  417ee9:	addr16 lock int 0x6e
  417eed:	push   es
  417eee:	mov    edi,0x3e28effe
  417ef3:	jecxz  0x417f6a
  417ef5:	call   0xfa1b8d82
  417efa:	loop   0x417f2a
  417efc:	push   edi
  417efd:	addr16 sub ah,ah
  417f00:	shr    BYTE PTR [ecx-0x697a277d],1
  417f06:	fst    DWORD PTR [eax+0x46]
  417f09:	pop    ecx
  417f0a:	mov    dl,0xa6
  417f0c:	xor    BYTE PTR [ebp+edx*2+0x3e],0x57
  417f11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f12:	ror    DWORD PTR ds:[eax+0x6e],cl
  417f16:	lock mov WORD PTR [esi-0x46],?
  417f1a:	push   esi
  417f1b:	mov    BYTE PTR [ebp-0x2b],cl
  417f1e:	push   esi
  417f1f:	xchg   esi,eax
  417f20:	js     0x417ecb
  417f22:	(bad)  
  417f23:	aad    0xb3
  417f25:	bound  esp,QWORD PTR [edi-0x30df3d99]
  417f2b:	xchg   BYTE PTR [esi],ch
  417f2d:	mov    ds,esi
  417f2f:	push   dx
  417f31:	in     eax,0xa
  417f33:	mov    dl,0x5a
  417f35:	pop    eax
  417f36:	test   eax,0x79863cdd
  417f3b:	cmp    ebp,DWORD PTR [ebp+0x13a83887]
  417f41:	add    eax,0x7027d3fe
  417f46:	jo     0x417f52
  417f48:	pop    ebp
  417f49:	and    eax,0x48ec24a4
  417f4e:	test   eax,0x466ee8c0
  417f53:	icebp  
  417f54:	call   0x58c:0xcd0f36ad
  417f5b:	inc    esp
  417f5c:	push   ebp
  417f5d:	inc    ecx
  417f5e:	sub    BYTE PTR [ebp-0x6ff11b5e],bh
  417f64:	aam    0xa3
  417f66:	cwde   
  417f67:	sub    eax,0x81ba4955
  417f6c:	scas   eax,DWORD PTR es:[edi]
  417f6d:	or     BYTE PTR [ecx+edi*4],al
  417f70:	pop    eax
  417f71:	pop    ecx
  417f72:	lock lds esp,FWORD PTR [esi+0x6]
  417f76:	add    al,0xdf
  417f78:	dec    ebx
  417f79:	in     al,dx
  417f7a:	pushf  
  417f7b:	fiadd  DWORD PTR [eax+ebp*4-0x574a433c]
  417f82:	inc    eax
  417f83:	loopne 0x417fc9
  417f85:	inc    ebx
  417f86:	add    eax,0x7a4a2291
  417f8b:	inc    ebx
  417f8c:	or     BYTE PTR [esi],al
  417f8e:	fcmovbe st,st(7)
  417f90:	jno    0x417fa2
  417f92:	sub    al,0xac
  417f94:	call   0x90249721
  417f99:	pop    esi
  417f9a:	js     0x417f89
  417f9c:	out    0xe0,eax
  417f9e:	mov    ebx,DWORD PTR [edi+ebp*2-0x2b5decb3]
  417fa5:	add    eax,0x251fc096
  417faa:	push   ebp
  417fab:	dec    ecx
  417fac:	mov    dl,0xca
  417fae:	mov    ebx,DWORD PTR [esi+0x2a]
  417fb1:	popa   
  417fb2:	in     al,dx
  417fb3:	shl    DWORD PTR [edi+edx*2+0x6998adf4],1
  417fba:	pusha  
  417fbb:	or     BYTE PTR [edi+0x67],0xf5
  417fbf:	(bad)  [edi+0x6ff7b395]
  417fc5:	sub    BYTE PTR ds:0x39e79bd1,al
  417fcb:	pop    esi
  417fcc:	ds stos BYTE PTR es:[edi],al
  417fce:	stos   BYTE PTR es:[edi],al
  417fcf:	ins    BYTE PTR es:[edi],dx
  417fd0:	push   es
  417fd1:	xchg   ecx,eax
  417fd2:	stc    
  417fd3:	inc    esp
  417fd4:	fwait
  417fd5:	xchg   BYTE PTR [eax-0xf803ee9],bl
  417fdb:	data16 loop 0x418015
  417fde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fdf:	aas    
  417fe0:	mov    ecx,0x86506484
  417fe5:	xor    edx,DWORD PTR [esp+eax*8-0x26]
  417fe9:	retf   
  417fea:	pop    es
  417feb:	loopne 0x417fdb
  417fed:	in     eax,0xd2
  417fef:	stos   BYTE PTR es:[edi],al
  417ff0:	add    ah,BYTE PTR [ecx-0x67e57a2d]
  417ff6:	pop    edi
  417ff7:	mov    esi,0x94a91f7f
  417ffc:	fdivr  DWORD PTR [ebx]
  417ffe:	cmp    eax,0x3be7fa8e
  418003:	fdivr  st(3),st
  418005:	jmp    0x417fdd
  418007:	leave  
  418008:	dec    ebp
  418009:	dec    ebp
  41800a:	jp     0x418017
  41800c:	les    esi,FWORD PTR [ebx]
  41800e:	icebp  
  41800f:	(bad)  
  418011:	pop    ecx
  418012:	and    BYTE PTR [esi+0xb8a334b],ah
  418018:	(bad)  
  418019:	pop    edi
  41801a:	repz pop ebx
  41801c:	or     bh,dl
  41801e:	out    0xc7,eax
  418020:	jno    0x41808d
  418022:	cs xor al,0x0
  418025:	pop    edx
  418026:	(bad)  
  418027:	loopne 0x418073
  418029:	aam    0x85
  41802b:	mov    ds:0x52c2aa8,al
  418030:	dec    esp
  418031:	push   edx
  418032:	outs   dx,BYTE PTR ds:[esi]
  418033:	aas    
  418034:	cmp    esi,ebp
  418036:	or     DWORD PTR [edi+ecx*2-0x7133a5a6],ecx
  41803d:	mov    esp,0xd35d493
  418042:	mov    ah,0xd0
  418044:	outs   dx,BYTE PTR ds:[esi]
  418045:	dec    esi
  418046:	push   edx
  418047:	lock push 0x75859aea
  41804d:	aas    
  41804e:	out    dx,eax
  41804f:	cs pop ebp
  418051:	xor    eax,0x76d14084
  418056:	sub    edi,ebx
  418058:	fcom   DWORD PTR [edi]
  41805a:	gs xchg ebx,eax
  41805c:	(bad)  
  41805d:	sbb    BYTE PTR [esi],cl
  41805f:	mov    ecx,0x2deb4ca1
  418064:	mov    bh,0xb1
  418066:	subps  xmm2,XMMWORD PTR [ebp+edx*4+0x1d91e73e]
  41806e:	scas   eax,DWORD PTR es:[edi]
  41806f:	sahf   
  418070:	ror    BYTE PTR [eax],1
  418072:	iret   
  418073:	and    al,0xee
  418075:	repz enter 0xbb50,0x79
  41807a:	inc    eax
  41807b:	js     0x41807f
  41807d:	(bad)
  418081:	or     DWORD PTR [esi+eiz*1],0x326b9c9f
  418088:	mov    bh,0x36
  41808a:	cdq    
  41808b:	daa    
  41808c:	sbb    DWORD PTR [ebx+0x46223de7],ebx
  418092:	imul   al
  418094:	mov    ebp,0x89fec081
  418099:	adc    eax,0xa2b737c8
  41809e:	cmp    eax,0xfdc9b9e1
  4180a3:	xor    ebp,ebx
  4180a5:	les    esi,FWORD PTR [ecx+ecx*2+0x5c6d30a2]
  4180ac:	sbb    al,0xa0
  4180ae:	mov    BYTE PTR [ebx+eiz*8],bl
  4180b1:	sub    eax,0x8791dc7b
  4180b6:	addr16 loop 0x41804f
  4180b9:	xlat   BYTE PTR ds:[ebx]
  4180ba:	cmp    BYTE PTR [edi-0x304245e3],dl
  4180c0:	and    DWORD PTR [edi],ecx
  4180c2:	xchg   BYTE PTR [edi+ebp*2+0x7a],ah
  4180c6:	(bad)  
  4180c7:	out    0x98,al
  4180c9:	jb     0x418072
  4180cb:	mov    bl,0x41
  4180cd:	call   0xa469d433
  4180d2:	js     0x4180f1
  4180d4:	xor    esi,edx
  4180d6:	jge    0x418142
  4180d8:	sub    al,0xc9
  4180da:	out    dx,eax
  4180db:	mov    cs,edx
  4180dd:	in     eax,dx
  4180de:	mov    ch,0xdf
  4180e0:	shl    ecx,1
  4180e2:	sub    al,0xff
  4180e4:	lds    edi,FWORD PTR [eax+ebx*2-0x7d6bf454]
  4180eb:	jmp    0x7233:0x9bc64aed
  4180f2:	jno    0x418086
  4180f4:	push   edi
  4180f5:	arpl   WORD PTR [ebp-0x24],di
  4180f8:	jg     0x418144
  4180fa:	stos   DWORD PTR es:[edi],eax
  4180fb:	pop    ebx
  4180fc:	or     eax,0xb0af69fb
  418101:	pushf  
  418102:	mov    ebp,0xe4e9ce80
  418107:	mov    cl,0xd9
  418109:	pop    edi
  41810a:	aad    0xd
  41810c:	mov    ds:0x31981d6b,eax
  418111:	in     eax,0x26
  418113:	jmp    DWORD PTR [ebx+0x1e332de0]
  418119:	adc    BYTE PTR [ecx+0x300c94bb],ah
  41811f:	sbb    DWORD PTR [esi],ecx
  418121:	mov    edi,0x1f66ee1f
  418126:	fidiv  DWORD PTR [esi-0x21efd52a]
  41812c:	clc    
  41812d:	retf   0xda0b
  418130:	(bad)  
  418131:	jnp    0x418176
  418133:	or     edx,DWORD PTR [esi+0x15]
  418136:	push   0x9
  418138:	sbb    bl,bl
  41813a:	(bad)  
  41813b:	outs   dx,DWORD PTR ds:[esi]
  41813c:	or     BYTE PTR [edx],0xbb
  41813f:	pop    ds
  418140:	sbb    DWORD PTR [edi+ebp*2],0x4585e647
  418147:	and    BYTE PTR ds:0x7e304c54,dl
  41814d:	xor    al,ch
  41814f:	pop    ds
  418150:	mov    esi,0x590ce10e
  418155:	enter  0x6795,0xbf
  418159:	jae    0x418167
  41815b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41815c:	inc    eax
  41815d:	mov    ch,0xe1
  41815f:	jo     0x418132
  418161:	mov    ds,WORD PTR [eax+0x24fe9f1]
  418167:	jecxz  0x4181d3
  418169:	out    dx,eax
  41816a:	mov    edi,DWORD PTR [edx+0x13]
  41816d:	aas    
  41816e:	inc    edx
  41816f:	sbb    eax,DWORD PTR [eax+0x494b61c7]
  418175:	xchg   DWORD PTR [ebp+0x55c5f41e],esi
  41817b:	jns    0x4181ea
  41817d:	push   ecx
  41817e:	jge    0x4181ee
  418180:	cs mov eax,0x630dc9c
  418186:	loopne 0x41812b
  418188:	jbe    0x418111
  41818a:	xchg   ebx,eax
  41818c:	daa    
  41818d:	aas    
  41818e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41818f:	cmp    edx,esp
  418191:	setbe  dl
  418194:	rol    BYTE PTR [esi+0x73f9d7d1],1
  41819a:	outs   dx,BYTE PTR ds:[esi]
  41819b:	mov    ds:0x6e1a2527,eax
  4181a0:	or     al,0xed
  4181a2:	jno    0x4181a0
  4181a4:	ja     0x418210
  4181a6:	shr    BYTE PTR [edi+0x6ac336c2],1
  4181ac:	or     eax,0x9b56f3f6
  4181b1:	dec    eax
  4181b2:	mov    edi,0xcd079231
  4181b7:	or     DWORD PTR [edi+0x4f38e79],esp
  4181bd:	arpl   WORD PTR [edx+0x4],bp
  4181c0:	xchg   ecx,eax
  4181c1:	shl    BYTE PTR [ebx],1
  4181c3:	call   0xb66a50ca
  4181c8:	hlt    
  4181c9:	sbb    edx,ebx
  4181cb:	rcl    al,1
  4181cd:	fnsave [ebp+0x74]
  4181d0:	ret    0x7a92
  4181d3:	mov    ds:0x2919d1bb,eax
  4181d8:	sbb    eax,0x85139948
  4181dd:	add    dh,BYTE PTR [edi]
  4181df:	inc    ecx
  4181e0:	test   eax,0x99d2d356
  4181e5:	dec    DWORD PTR [eax+0x5bf75a87]
  4181eb:	in     eax,dx
  4181ec:	add    al,0xa4
  4181ee:	or     al,0xd4
  4181f0:	test   eax,0xc3272d8c
  4181f5:	inc    ebx
  4181f6:	(bad)  
  4181f7:	fidivr DWORD PTR [edi]
  4181f9:	fidivr DWORD PTR [ebx+eax*1]
  4181fc:	pop    ds
  4181fd:	xor    esp,DWORD PTR es:[edx-0x1b61af70]
  418204:	xchg   ebx,eax
  418205:	in     al,dx
  418206:	jmp    0x418202
  418208:	cwde   
  418209:	xor    BYTE PTR [ebx-0x76d27620],bh
  41820f:	ds add eax,0x17498ea8
  418215:	xchg   edi,eax
  418216:	(bad)  
  418218:	add    eax,0xadaf7477
  41821d:	dec    ebp
  41821e:	adc    eax,0xdfd9a010
  418223:	jno    0x4181bf
  418225:	add    ecx,ecx
  418227:	lds    ebx,FWORD PTR [edx-0x42]
  41822a:	jb     0x4181d7
  41822c:	push   esp
  41822d:	mov    esp,DWORD PTR [eax+edx*8+0x514880c8]
  418234:	fsubr  st,st(5)
  418236:	lods   al,BYTE PTR ds:[esi]
  418237:	sub    bl,BYTE PTR [edx]
  418239:	rcr    BYTE PTR [esi],0xe4
  41823c:	aad    0x5e
  41823e:	pusha  
  41823f:	sub    al,0x1b
  418241:	les    ecx,FWORD PTR [ecx-0x2f]
  418244:	cld    
  418245:	retf   
  418246:	mov    ch,0xbe
  418248:	out    dx,al
  418249:	cld    
  41824a:	repz imul DWORD PTR [esi+0x21]
  41824e:	(bad)  
  41824f:	test   esp,0x738cc46d
  418255:	dec    eax
  418256:	test   ch,ch
  418258:	dec    esi
  418259:	inc    dl
  41825b:	pop    eax
  41825c:	mov    DWORD PTR [edi+0x11],ebp
  41825f:	jo     0x418242
  418261:	js     0x4181ec
  418263:	jae    0x418253
  418265:	aad    0xa7
  418267:	push   ebp
  418268:	popf   
  418269:	into   
  41826a:	mov    dh,0x9c
  41826c:	jne    0x4182e7
  41826e:	sbb    BYTE PTR [ebx],ah
  418270:	dec    ebx
  418271:	sahf   
  418272:	in     al,0x9
  418274:	or     al,0x21
  418276:	leave  
  418277:	push   ebx
  418278:	ror    BYTE PTR [esi],cl
  41827a:	mov    dl,BYTE PTR [ebp+0x5e]
  41827d:	pop    esi
  41827e:	push   eax
  41827f:	add    al,0x1
  418281:	dec    eax
  418282:	dec    eax
  418283:	lds    ecx,FWORD PTR [ecx+0x169de7d1]
  418289:	les    ebp,FWORD PTR ds:0xde855875
  41828f:	mov    ah,0xfe
  418291:	mov    dh,0xaa
  418293:	push   ecx
  418294:	push   ss
  418295:	mov    esp,0x6bec7377
  41829a:	popa   
  41829b:	jmp    0x418257
  41829d:	xchg   edx,eax
  41829e:	lds    ebx,FWORD PTR [edi]
  4182a0:	xor    BYTE PTR [ebx+edx*2-0x73a8a09d],ch
  4182a7:	mov    bh,0xda
  4182a9:	adc    BYTE PTR [eax],al
  4182ab:	cmc    
  4182ac:	lahf   
  4182ad:	inc    edi
  4182ae:	sbb    eax,0x1bf04775
  4182b3:	pushf  
  4182b4:	icebp  
  4182b5:	inc    ecx
  4182b6:	jno    0x4182fa
  4182b8:	mov    dh,0xa4
  4182ba:	jecxz  0x4182df
  4182bc:	jge    0x4182e2
  4182be:	(bad)  
  4182bf:	clc    
  4182c0:	sahf   
  4182c1:	pop    ecx
  4182c2:	scas   eax,DWORD PTR es:[edi]
  4182c3:	and    ebp,ecx
  4182c5:	cmc    
  4182c6:	ins    DWORD PTR es:[edi],dx
  4182c7:	stos   BYTE PTR es:[edi],al
  4182c8:	call   0xc56e:0x3f5dff5b
  4182cf:	mov    bh,0xac
  4182d1:	xchg   ebx,eax
  4182d3:	pop    esi
  4182d4:	xchg   esp,eax
  4182d5:	je     0x418350
  4182d7:	sbb    ch,BYTE PTR [ecx+0x3c]
  4182da:	fnstenv ds:0x33c3c60e
  4182e0:	sar    BYTE PTR [ebp-0x6a2a31b],1
  4182e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182e7:	mov    ebx,0x884451e3
  4182ec:	out    dx,al
  4182ed:	inc    edi
  4182ee:	frstor [eax-0x3f]
  4182f1:	xchg   edx,eax
  4182f2:	mov    ?,esp
  4182f4:	cwde   
  4182f5:	mov    WORD PTR [edi+0x47e022bb],?
  4182fb:	sub    DWORD PTR [esi+0x55],esi
  4182fe:	or     DWORD PTR [edi+0x4b],esi
  418301:	nop
  418302:	mov    ebp,DWORD PTR [ebx]
  418304:	dec    edx
  418305:	sub    dl,al
  418307:	add    al,0x77
  418309:	fstp   TBYTE PTR [ebx-0x5e3edba7]
  41830f:	cmp    edx,DWORD PTR ds:0xd57f881c
  418315:	bound  ecx,QWORD PTR [edi+0x14]
  418318:	fwait
  418319:	mov    DWORD PTR [esp+eax*2+0x35810090],eax
  418320:	in     al,dx
  418321:	pop    es
  418322:	xor    esp,DWORD PTR [edi]
  418324:	repnz fild WORD PTR [ebp-0x4e]
  418328:	fcmovne st,st(0)
  41832a:	mov    DWORD PTR [edi+0x64dcc069],ebp
  418330:	mov    esp,0xccbbbe1b
  418335:	xchg   ebx,eax
  418336:	test   DWORD PTR ds:0xb70f364b,edx
  41833c:	cs je  0x418311
  41833f:	shl    DWORD PTR [eax],0x76
  418342:	call   FWORD PTR [edx-0x9456af5]
  418348:	pushf  
  418349:	adc    dh,cl
  41834b:	dec    ebx
  41834c:	cmp    dl,BYTE PTR [edi+0x74bd170]
  418352:	cld    
  418353:	pop    esp
  418354:	mov    ah,0x44
  418356:	ret    
  418357:	cmp    eax,0x2222e835
  41835c:	sbb    dh,BYTE PTR [edi+0x5e3a2395]
  418362:	dec    ecx
  418363:	mov    DWORD PTR [eax],ebp
  418365:	adc    DWORD PTR [ecx+0x45bfd95f],edi
  41836b:	adc    eax,0x586edbb3
  418370:	mov    ah,0xf2
  418372:	test   eax,0xf32d5c40
  418377:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418378:	dec    ebp
  418379:	retf   
  41837a:	out    dx,al
  41837b:	popa   
  41837c:	and    edi,ebx
  41837e:	mov    edx,0x54df725e
  418383:	or     DWORD PTR [ebx],ebp
  418385:	dec    esp
  418386:	ja     0x418389
  418388:	sbb    cl,BYTE PTR [ecx-0x5aed7c1d]
  41838e:	xchg   esp,eax
  41838f:	ins    DWORD PTR es:[edi],dx
  418390:	pop    edi
  418391:	fist   WORD PTR [ecx+0x19]
  418394:	dec    esp
  418395:	dec    esp
  418396:	sub    esi,edi
  418398:	test   al,0x70
  41839a:	shl    DWORD PTR [esi+0x3cb09a22],cl
  4183a0:	iret   
  4183a1:	adc    bh,ch
  4183a3:	das    
  4183a4:	test   al,0xfc
  4183a6:	dec    edi
  4183a7:	icebp  
  4183a8:	xchg   DWORD PTR [edx-0x45],ebx
  4183ab:	add    DWORD PTR ds:0xf34cc3af,0xffffffe4
  4183b2:	ret    0x7a37
  4183b5:	xchg   dh,bl
  4183b7:	add    DWORD PTR [ebp-0x4],edi
  4183ba:	fcmovbe st,st(6)
  4183bc:	mov    esi,0xca17204e
  4183c1:	(bad)  
  4183c2:	mov    al,ds:0x9a979066
  4183c7:	call   0x1b0f658c
  4183cc:	nop
  4183cd:	cld    
  4183ce:	mov    ecx,0xd1e394a5
  4183d3:	div    BYTE PTR [ebx+0x11]
  4183d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183d7:	jae    0x41841d
  4183d9:	pop    ss
  4183da:	out    0xd5,eax
  4183dc:	fsub   QWORD PTR [edi+0x3f74f566]
  4183e2:	xchg   esi,eax
  4183e3:	mov    edi,0x59471f10
  4183e8:	sar    BYTE PTR ds:0x45835d6e,1
  4183ee:	in     eax,0x99
  4183f0:	dec    ebx
  4183f1:	dec    edx
  4183f2:	lock mov al,ds:0x91a11048
  4183f8:	sbb    al,0xd
  4183fa:	cmp    eax,0x4bcc86b7
  4183ff:	lods   al,BYTE PTR ds:[esi]
  418400:	(bad)  
  418401:	sub    al,0xef
  418403:	rcr    BYTE PTR [ecx],0x8
  418406:	inc    ebx
  418407:	clc    
  418408:	loopne 0x4183aa
  41840a:	(bad)  
  41840b:	aad    0xa3
  41840d:	ss stc 
  41840f:	cdq    
  418410:	scas   eax,DWORD PTR es:[edi]
  418411:	mov    dl,0x89
  418413:	push   0xe16ba589
  418418:	sbb    bh,dh
  41841a:	fnsave [esi*4-0x294ce608]
  418421:	cwde   
  418422:	ss push 0x8cfe8acf
  418428:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418429:	ds loop 0x4183be
  41842c:	mov    eax,ds:0x4801c9b6
  418431:	mov    esp,0x4419b17f
  418436:	cwde   
  418437:	int    0x25
  418439:	(bad)  
  41843a:	jbe    0x418470
  41843c:	stc    
  41843d:	aad    0x96
  41843f:	jmp    0x60da:0x127cc4ea
  418446:	sub    cl,ah
  418448:	push   eax
  418449:	mov    ch,0xdb
  41844b:	mov    al,ds:0x31876afd
  418450:	dec    eax
  418451:	ret    
  418452:	fsub   DWORD PTR [edi]
  418454:	sbb    ch,BYTE PTR [edx+ebp*1+0x32]
  418458:	adc    ebp,DWORD PTR [ebp-0xc]
  41845b:	push   edi
  41845c:	scas   al,BYTE PTR es:[edi]
  41845d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41845f:	fadd   st,st(1)
  418461:	out    dx,al
  418462:	sub    eax,DWORD PTR [esi]
  418464:	les    ebp,FWORD PTR [edi+0x3f1775b6]
  41846a:	ss mov dl,0x1
  41846d:	pop    esp
  41846e:	fucomi st,st(0)
  418470:	(bad)
  418474:	pop    esi
  418475:	jno    0x4184eb
  418477:	sub    esi,ecx
  418479:	xchg   ebx,eax
  41847a:	dec    ecx
  41847b:	mov    es,esi
  41847d:	mov    dh,0x0
  41847f:	jecxz  0x418466
  418481:	rcr    BYTE PTR [ecx+eiz*1-0x1a],0x4a
  418486:	lds    ecx,FWORD PTR ds:0xe1c04dcf
  41848c:	pushf  
  41848d:	gs (bad) 
  41848f:	cdq    
  418490:	les    esp,FWORD PTR [eax]
  418492:	push   0x2
  418494:	rcr    DWORD PTR [edi],cl
  418496:	cmp    ebx,DWORD PTR [eax]
  418498:	mov    BYTE PTR [edx+0x1cfb1cf4],dh
  41849e:	pop    ecx
  41849f:	adc    al,0xa0
  4184a1:	fsubr  st,st(0)
  4184a3:	mov    ah,0x68
  4184a5:	(bad)  
  4184a6:	or     eax,0x74def4f4
  4184ab:	sub    esi,0x5336a710
  4184b1:	mov    BYTE PTR gs:[ebx],dh
  4184b4:	lock ror BYTE PTR [ebp-0x1e],1
  4184b8:	hlt    
  4184b9:	inc    ebx
  4184ba:	fwait
  4184bb:	shl    BYTE PTR [eax],cl
  4184bd:	loop   0x418518
  4184bf:	pop    esi
  4184c0:	lock adc ah,BYTE PTR [eax]
  4184c3:	retf   
  4184c4:	mov    fs,ebx
  4184c6:	cs (bad) 
  4184c8:	addr16 pop es
  4184ca:	stos   DWORD PTR es:[edi],eax
  4184cb:	sub    eax,0x6180b79b
  4184d0:	call   0x903b:0xab8884ab
  4184d7:	push   edi
  4184d8:	xchg   ebp,eax
  4184d9:	cdq    
  4184da:	dec    esi
  4184db:	dec    ebx
  4184dc:	mov    edx,0x405b99a2
  4184e1:	mov    bh,0x2b
  4184e3:	out    0xd7,eax
  4184e5:	and    ah,bh
  4184e7:	sbb    al,0x1e
  4184e9:	sub    al,0x77
  4184eb:	lahf   
  4184ec:	cli    
  4184ed:	sahf   
  4184ee:	js     0x41855a
  4184f0:	cmp    al,0xde
  4184f2:	movups XMMWORD PTR [edi+0x79],xmm5
  4184f6:	cmp    BYTE PTR [ebp-0x3067fb0a],bl
  4184fc:	mov    dl,0xad
  4184fe:	dec    ebx
  4184ff:	xchg   DWORD PTR [ebx-0x33],esi
  418502:	bound  ecx,QWORD PTR [ecx]
  418504:	push   edi
  418505:	mov    ebp,0xb009dccb
  41850a:	stc    
  41850b:	sbb    dl,BYTE PTR [ebp-0x34d91ae9]
  418511:	fmul   QWORD PTR [ecx-0x10b95853]
  418517:	leave  
  418518:	das    
  418519:	inc    esp
  41851a:	lahf   
  41851b:	addr16 inc edx
  41851d:	add    eax,0x31056
  418522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418523:	cwde   
  418524:	in     al,dx
  418525:	retf   
  418526:	cdq    
  418527:	adc    ch,BYTE PTR [edx-0x4b46e836]
  41852d:	scas   eax,DWORD PTR es:[edi]
  41852e:	jns    0x418551
  418530:	popa   
  418531:	ficomp DWORD PTR [ebp+0x4d68332c]
  418537:	(bad)
  41853a:	lods   al,BYTE PTR ds:[esi]
  41853b:	ss aaa 
  41853d:	or     al,0x2d
  41853f:	xchg   ebp,eax
  418540:	repnz cmp dl,BYTE PTR [ecx-0x40e0eabe]
  418547:	je     0x418502
  418549:	enter  0x7f1f,0xd4
  41854d:	or     BYTE PTR ss:[esp+ebx*8],dh
  418551:	sbb    eax,0x6f999802
  418556:	jo     0x4185c6
  418558:	push   ss
  418559:	inc    esi
  41855a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41855b:	shl    esp,cl
  41855d:	and    esp,DWORD PTR [eax+0x99dfa4a]
  418563:	not    BYTE PTR [esp+ecx*4+0x3af0bd04]
  41856a:	fadd   st,st(7)
  41856c:	adc    DWORD PTR [ebx+0x45b978d0],edi
  418572:	inc    ecx
  418573:	mov    bh,BYTE PTR [ebp+0x53]
  418576:	cmp    al,0x3f
  418578:	mov    bh,0x43
  41857a:	add    dl,BYTE PTR [ebx-0x60]
  41857d:	icebp  
  41857e:	inc    eax
  41857f:	sahf   
  418580:	out    dx,eax
  418581:	push   ecx
  418582:	ja     0x4185fe
  418584:	xchg   esi,eax
  418585:	pop    esi
  418586:	mov    eax,ds:0xc728305d
  41858b:	loopne 0x418577
  41858d:	xchg   edi,eax
  41858e:	rcl    DWORD PTR [edx],cl
  418590:	jmp    0x41851a
  418592:	mov    bl,0x87
  418594:	dec    edx
  418596:	mov    dl,BYTE PTR [esi-0x42]
  418599:	inc    esi
  41859a:	or     BYTE PTR [ecx-0x4b],dl
  41859d:	lea    ebp,[ebp-0x2875e21f]
  4185a3:	in     al,0x6a
  4185a5:	sahf   
  4185a6:	push   cs
  4185a7:	sub    al,BYTE PTR [ebx+0x43]
  4185aa:	adc    al,BYTE PTR [edx+0x7abb8cb1]
  4185b0:	out    0x6,al
  4185b2:	scas   eax,DWORD PTR es:[edi]
  4185b3:	dec    esp
  4185b4:	(bad)  
  4185b6:	retf   
  4185b7:	jne    0x418593
  4185b9:	nop
  4185ba:	ins    BYTE PTR es:[edi],dx
  4185bb:	outs   dx,DWORD PTR ds:[esi]
  4185bc:	cmp    eax,0x712b022f
  4185c1:	ds retf 0x162d
  4185c5:	cli    
  4185c6:	int    0xe3
  4185c8:	sbb    ebp,DWORD PTR [edi-0x7887edab]
  4185ce:	inc    esi
  4185cf:	mov    ebp,0xa3762e76
  4185d4:	js     0x418591
  4185d6:	mov    esp,0x1381c420
  4185db:	push   esi
  4185dc:	sub    edx,DWORD PTR [edi-0x51]
  4185df:	lods   al,BYTE PTR ds:[esi]
  4185e0:	and    ebp,0x82ac1e4c
  4185e6:	pop    esi
  4185e7:	dec    edx
  4185e8:	test   BYTE PTR [edx-0x7],bh
  4185eb:	stos   BYTE PTR es:[edi],al
  4185ec:	mov    ?,WORD PTR [edi]
  4185ee:	rcr    DWORD PTR [ecx],1
  4185f0:	daa    
  4185f1:	sahf   
  4185f2:	aam    0x59
  4185f4:	push   es
  4185f5:	je     0x418609
  4185f7:	aaa    
  4185f8:	repz mov eax,DWORD PTR [edx+edx*2+0x4f282d28]
  418600:	push   esi
  418601:	fs inc esi
  418603:	pusha  
  418604:	arpl   WORD PTR [edi+0x71],si
  418607:	mov    ah,0x26
  418609:	add    al,0xf3
  41860b:	in     al,dx
  41860c:	inc    esp
  41860d:	push   ds
  41860e:	cwde   
  41860f:	sbb    dh,0x4e
  418612:	mov    cl,0x57
  418614:	shl    esp,1
  418616:	lods   eax,DWORD PTR ds:[esi]
  418617:	pop    ds
  418618:	push   ss
  418619:	jecxz  0x41864a
  41861b:	into   
  41861c:	inc    ecx
  41861d:	out    0x17,eax
  41861f:	mul    BYTE PTR [ecx]
  418621:	xchg   edi,eax
  418622:	pop    esp
  418623:	aad    0xd7
  418625:	add    bh,al
  418627:	mov    edi,0x929c76d6
  41862c:	out    0x56,eax
  41862e:	mul    BYTE PTR [edx]
  418630:	and    ebx,DWORD PTR [ecx+0x45]
  418633:	cmp    eax,0x3694df6c
  418638:	rcl    bh,cl
  41863a:	cmc    
  41863b:	out    dx,eax
  41863c:	nop
  41863d:	in     eax,dx
  41863e:	mov    ds:0xafc86d03,al
  418643:	test   DWORD PTR [ebx-0x52f1ef0f],0x9851d1b9
  41864d:	gs xor bl,bh
  418650:	dec    eax
  418651:	lahf   
  418652:	inc    esi
  418653:	shr    DWORD PTR ds:0x4cf7d2a7,1
  418659:	and    eax,0xf579c7e6
  41865e:	push   eax
  41865f:	or     al,ch
  418661:	push   es
  418662:	stos   DWORD PTR es:[edi],eax
  418663:	xor    bl,BYTE PTR [ecx+0x7e]
  418666:	mov    esp,0x92276a71
  41866b:	(bad)  
  41866c:	jno    0x418606
  41866e:	and    BYTE PTR [esi-0x3a0cdac5],ah
  418674:	fwait
  418675:	or     DWORD PTR [ebp+0x4efdba4],0xf5392d77
  41867f:	lea    ecx,[ebx-0x6af6ef19]
  418685:	shl    BYTE PTR [esi],cl
  418687:	jg     0x418641
  418689:	mov    BYTE PTR [ebx+ecx*8-0x72e0c4e1],bl
  418690:	(bad)  
  418691:	sub    al,0xc7
  418693:	(bad)  
  418694:	test   al,0x6e
  418696:	mov    ds:0xa69f28dc,eax
  41869b:	sub    esp,edx
  41869d:	add    al,0xbf
  41869f:	pop    es
  4186a0:	shl    BYTE PTR [eax-0x2],0xa2
  4186a4:	jp     0x418658
  4186a6:	scas   al,BYTE PTR es:[edi]
  4186a7:	add    esp,DWORD PTR [ecx-0x64]
  4186aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186ab:	out    dx,al
  4186ac:	sub    DWORD PTR [ecx-0xb],edx
  4186af:	mov    eax,0xd28c3f68
  4186b4:	arpl   WORD PTR [eax],bp
  4186b6:	pop    edx
  4186b7:	cmp    al,0x29
  4186b9:	cmp    eax,0x5bee4d1a
  4186be:	rol    DWORD PTR [ebx],0x4
  4186c1:	xchg   ebp,eax
  4186c2:	idiv   BYTE PTR [edi]
  4186c4:	and    DWORD PTR [edx-0x5fcc1aa5],ebx
  4186ca:	xor    al,0x68
  4186cc:	pcmpeqb mm0,QWORD PTR [esp+eax*1-0x76]
  4186d1:	ds pop edx
  4186d3:	repz pop ss
  4186d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186d6:	scas   eax,DWORD PTR es:[edi]
  4186d7:	cmp    esp,DWORD PTR [esi-0x40]
  4186da:	daa    
  4186db:	ror    DWORD PTR [ebx-0x1c0a96eb],1
  4186e1:	sub    DWORD PTR [edi-0x80],ecx
  4186e4:	lods   al,BYTE PTR ds:[esi]
  4186e5:	jnp    0x41871d
  4186e7:	inc    ebp
  4186e8:	push   es
  4186e9:	jb     0x418735
  4186eb:	stos   DWORD PTR es:[edi],eax
  4186ec:	stc    
  4186ed:	test   dh,bl
  4186ef:	and    bh,al
  4186f1:	hlt    
  4186f2:	gs icebp 
  4186f4:	push   edx
  4186f5:	test   esi,ebp
  4186f7:	jg     0x250bdf6e
  4186fd:	jmp    FWORD PTR [esi]
  4186ff:	(bad)  
  418700:	cwde   
  418701:	jne    0x4186c4
  418703:	ret    
  418704:	mov    dl,0xbd
  418706:	dec    esi
  418707:	push   es
  418708:	mov    ebx,DWORD PTR [esi]
  41870a:	add    edx,DWORD PTR [eax+0x33]
  41870d:	push   ecx
  41870e:	jno    0x4186fe
  418710:	jl     0x418692
  418712:	xchg   ecx,eax
  418713:	mov    esi,0x31c60621
  418718:	fcomip st,st(0)
  41871a:	sub    eax,0xa3ae555e
  41871f:	dec    edx
  418720:	(bad)  
  418721:	fsub   DWORD PTR [eax]
  418723:	(bad)  
  418724:	sub    edx,edx
  418726:	aaa    
  418727:	out    dx,al
  418728:	icebp  
  418729:	pop    edi
  41872a:	stos   BYTE PTR es:[edi],al
  41872b:	dec    esp
  41872c:	push   es
  41872d:	hlt    
  41872e:	mov    ecx,0xd01eac45
  418733:	inc    ebp
  418734:	es hlt 
  418736:	sub    DWORD PTR [edi+0x23],0x94e5f261
  41873d:	rcr    ah,1
  41873f:	jno    0x4186eb
  418741:	sub    DWORD PTR [esi+0x440bf66d],ebx
  418747:	or     BYTE PTR [ebx+0x47fe53a2],bl
  41874d:	xchg   DWORD PTR [eax],edi
  41874f:	mov    al,ds:0x233037a0
  418754:	cmp    eax,0xa3cc43ad
  418759:	and    BYTE PTR [esi+0x6801b014],dl
  41875f:	jae    0x418752
  418761:	int    0x16
  418763:	les    ecx,FWORD PTR ds:0x3593f132
  418769:	cmc    
  41876a:	adc    esp,DWORD PTR [edx]
  41876c:	xchg   esp,eax
  41876d:	lahf   
  41876e:	out    0x22,al
  418770:	sub    BYTE PTR [ebp-0x6a],0xd9
  418774:	test   DWORD PTR [edi-0x59dec1de],esp
  41877a:	inc    esi
  41877b:	push   edx
  41877c:	rcr    DWORD PTR ss:[edx],cl
  41877f:	lods   al,BYTE PTR ds:[esi]
  418780:	adc    DWORD PTR [esi],ecx
  418782:	jecxz  0x4187ea
  418784:	jno    0x418748
  418786:	dec    edx
  418787:	std    
  418788:	add    ecx,DWORD PTR [ebx-0x21]
  41878b:	xchg   ecx,eax
  41878c:	cdq    
  41878d:	dec    esp
  41878e:	pop    ss
  41878f:	sahf   
  418790:	iret   
  418791:	mov    cl,bl
  418793:	dec    esp
  418794:	xchg   esp,eax
  418795:	mov    ecx,edi
  418797:	pop    ds
  418798:	adc    esp,DWORD PTR [ebx]
  41879a:	pop    edi
  41879b:	jp     0x418770
  41879d:	mov    eax,ds:0xb965355c
  4187a2:	leave  
  4187a3:	sbb    BYTE PTR [ecx+ecx*8-0x74927fd7],al
  4187aa:	xor    DWORD PTR ds:0x74bf9197,0xffffffa3
  4187b1:	sar    BYTE PTR [ecx+0x66],1
  4187b4:	leave  
  4187b5:	ins    DWORD PTR es:[edi],dx
  4187b6:	ret    
  4187b7:	int3   
  4187b8:	or     eax,0x9e9a476f
  4187bd:	fidiv  WORD PTR [edx+0x6a]
  4187c0:	out    0x46,al
  4187c2:	test   BYTE PTR [edx-0x2100ae23],0x38
  4187c9:	daa    
  4187ca:	adc    dl,bh
  4187cc:	retf   
  4187cd:	inc    esi
  4187ce:	jp     0x4187a0
  4187d0:	mov    edi,0x16ae623b
  4187d5:	xchg   esi,eax
  4187d6:	jno    0x41877d
  4187d8:	and    esi,eax
  4187da:	push   esi
  4187db:	mov    bl,0xcb
  4187dd:	imul   edi,edx,0x3b7b1700
  4187e3:	in     al,0x9d
  4187e5:	cwde   
  4187e6:	out    dx,al
  4187e7:	nop
  4187e8:	pop    esp
  4187e9:	inc    edx
  4187ea:	clc    
  4187eb:	shl    BYTE PTR ds:0x59623ca9,1
  4187f1:	test   BYTE PTR [eax-0x63f99948],ch
  4187f7:	cwde   
  4187f8:	xchg   ecx,eax
  4187f9:	(bad)  [ebx+0x51f5aed0]
  4187ff:	test   eax,0x7b5aee33
  418804:	mov    edx,0x7194188d
  418809:	repnz out 0xed,eax
  41880c:	xor    edi,esp
  41880e:	or     dl,BYTE PTR [ebp+0x7e]
  418811:	cld    
  418812:	mov    bl,0x34
  418814:	dec    edx
  418815:	pop    ebp
  418816:	dec    BYTE PTR ds:0xfef93fc4
  41881c:	mov    es,WORD PTR [edi+0x10098b4]
  418822:	and    DWORD PTR [edi-0x23],ebx
  418825:	in     al,0x56
  418827:	pop    ss
  418828:	mov    ds:0xd10db568,al
  41882d:	pop    ecx
  41882e:	jne    0xf427dbad
  418834:	lods   eax,DWORD PTR ds:[esi]
  418835:	jp     0x418802
  418837:	std    
  418838:	jmp    0x5f82:0x497a4a52
  41883f:	test   esp,edi
  418841:	xor    DWORD PTR [ebp-0x7068a6db],edx
  418847:	dec    esi
  418848:	xchg   edi,eax
  418849:	pushf  
  41884a:	addr16 mov al,ds:0xa14a
  41884e:	jns    0x418834
  418850:	lds    ebp,FWORD PTR [esi-0x4c]
  418853:	sbb    bh,ah
  418855:	dec    esp
  418856:	fdivr  DWORD PTR [eax+0x1e]
  418859:	icebp  
  41885a:	imul   edi,DWORD PTR ds:0x72f0663b,0x54ba2709
  418864:	and    eax,0xc924e5d5
  418869:	sub    DWORD PTR [edx+0x28],ecx
  41886c:	test   eax,0x2b3c8e15
  418871:	xor    al,0x63
  418873:	test   al,0x5a
  418875:	mov    al,0x69
  418877:	pop    eax
  418878:	shl    DWORD PTR [edi-0x37],0x2f
  41887c:	lods   eax,DWORD PTR ds:[esi]
  41887d:	jge    0x41889b
  41887f:	sbb    BYTE PTR [ecx],bh
  418881:	daa    
  418882:	shl    DWORD PTR [esi-0x2787436],0x35
  418889:	out    0x44,eax
  41888b:	stos   BYTE PTR es:[edi],al
  41888c:	push   ebx
  41888d:	sbb    DWORD PTR [esi+esi*2+0x5a13ca8],ebp
  418894:	in     al,dx
  418895:	aam    0x6b
  418897:	cli    
  418898:	push   ebx
  418899:	push   es
  41889a:	ficom  DWORD PTR [esi]
  41889c:	(bad)  
  41889d:	push   edx
  41889e:	nop
  41889f:	int3   
  4188a0:	ret    
  4188a1:	fisttp QWORD PTR [ebp+0x7064f61f]
  4188a7:	popa   
  4188a8:	scas   al,BYTE PTR es:[edi]
  4188a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188aa:	mov    al,ds:0x43e4356b
  4188af:	push   ebp
  4188b0:	shl    dh,0x87
  4188b3:	les    edx,FWORD PTR [edi-0x5d1b66f5]
  4188b9:	(bad)  
  4188ba:	pop    edi
  4188bb:	pop    ds
  4188bc:	jbe    0x418874
  4188be:	(bad)  
  4188bf:	lahf   
  4188c0:	pop    es
  4188c1:	mov    al,0xf6
  4188c3:	xor    eax,0xfffffffd
  4188c6:	or     ebx,0x60
  4188c9:	sub    al,0x25
  4188cb:	jnp    0x4188b4
  4188cd:	shr    BYTE PTR [edx],cl
  4188cf:	jmp    FWORD PTR [edx+0x5]
  4188d2:	mov    bl,BYTE PTR [ecx]
  4188d4:	mov    al,ds:0x5089c2de
  4188d9:	sub    cl,dl
  4188db:	push   ss
  4188dc:	int3   
  4188dd:	iret   
  4188de:	pop    ecx
  4188df:	imul   esp,edi,0x8e06c28a
  4188e5:	pusha  
  4188e6:	mov    ebp,0xa9485ea1
  4188eb:	clc    
  4188ec:	mov    WORD PTR [edx+0x7d],?
  4188ef:	fistp  QWORD PTR [edi+0x6ea1edf5]
  4188f5:	adc    al,dh
  4188f7:	js     0x41892f
  4188f9:	xchg   esi,eax
  4188fa:	sub    bl,BYTE PTR [edx+0x7f]
  4188fd:	iret   
  4188fe:	div    DWORD PTR [esi]
  418900:	mov    BYTE PTR [edi+0x5b],ch
  418903:	cwde   
  418904:	jecxz  0x4188f5
  418906:	in     eax,dx
  418907:	aam    0xd9
  418909:	out    0xab,al
  41890b:	pusha  
  41890c:	popa   
  41890d:	jae    0x418982
  41890f:	ret    0x3b7f
  418912:	jg     0x418932
  418914:	or     ebp,edi
  418916:	loop   0x41894c
  418918:	mov    esp,0x373ff38c
  41891d:	fs popf 
  41891f:	shr    DWORD PTR [edi+0x32],cl
  418922:	cld    
  418923:	fstp   QWORD PTR [esi]
  418925:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418926:	xchg   ebp,eax
  418927:	rcl    BYTE PTR [eax],cl
  418929:	cdq    
  41892a:	xlat   BYTE PTR ds:[ebx]
  41892b:	mov    ch,0xdc
  41892d:	not    BYTE PTR [esi]
  41892f:	sahf   
  418930:	jmp    0x418999
  418932:	int    0x3a
  418934:	push   ebp
  418935:	ret    
  418936:	xlat   BYTE PTR ds:[ebx]
  418937:	or     BYTE PTR [ecx],dl
  418939:	fs dec edi
  41893b:	iret   
  41893c:	push   ebp
  41893d:	pusha  
  41893e:	out    0x6c,al
  418940:	add    DWORD PTR [eax-0x194c7b3c],0x66
  418947:	sbb    eax,0x6ca8447
  41894c:	or     dh,dl
  41894e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41894f:	fisub  WORD PTR [edx-0x3e8a6c12]
  418955:	test   eax,0xcb493121
  41895a:	ss ja  0x418998
  41895d:	or     ecx,esi
  41895f:	mov    edi,0x756efaf0
  418964:	and    eax,0xf7898d20
  418969:	imul   ecx,DWORD PTR [ebp+0x6b],0x7aebc41e
  418970:	mov    BYTE PTR [esi+0x5f],dl
  418973:	add    bl,bh
  418975:	in     eax,dx
  418976:	sub    dl,al
  418978:	cdq    
  418979:	jl     0x41895f
  41897b:	xchg   esp,eax
  41897c:	add    eax,0xf5b3faca
  418981:	push   edx
  418982:	pushf  
  418983:	fs sbb eax,0x4d2e7cd2
  418989:	and    al,0x23
  41898b:	and    al,0x71
  41898d:	stos   DWORD PTR es:[edi],eax
  41898e:	push   eax
  41898f:	sub    al,0x34
  418991:	test   esi,eax
  418993:	mov    BYTE PTR [esi-0x115373e5],bl
  418999:	repz sub BYTE PTR [edx*4-0x31bdef40],dl
  4189a1:	xchg   ebp,eax
  4189a2:	arpl   WORD PTR [esi],bx
  4189a4:	pop    edi
  4189a5:	mov    ebx,0xa45c7b79
  4189aa:	(bad)  
  4189ab:	jbe    0x41898f
  4189ad:	sbb    DWORD PTR [eax],esi
  4189af:	mov    bl,0x57
  4189b1:	mov    ebp,0xef4790c6
  4189b6:	pop    eax
  4189b7:	jg     0x418a08
  4189b9:	loopne 0x41895d
  4189bb:	stos   BYTE PTR es:[edi],al
  4189bc:	jae    0x41895e
  4189be:	es sbb dh,dh
  4189c1:	retf   
  4189c2:	ret    0xbc91
  4189c5:	xchg   ebp,eax
  4189c6:	add    eax,0x58fea2b
  4189cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189cc:	add    al,0xf
  4189ce:	adc    DWORD PTR [eax-0x47],esi
  4189d1:	sub    ebp,DWORD PTR [edi+0x58]
  4189d4:	ja     0x4189bf
  4189d6:	xchg   ecx,eax
  4189d7:	mov    ds:0x799a0d71,al
  4189dc:	pop    eax
  4189dd:	sbb    BYTE PTR [edx+0x1c],bh
  4189e0:	jecxz  0x4189b4
  4189e2:	cs jo  0x41899e
  4189e5:	and    bl,BYTE PTR [edx+0x5bd24332]
  4189eb:	jge    0x418a29
  4189ed:	rcr    DWORD PTR [ecx+0x20876894],cl
  4189f3:	pop    edi
  4189f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189f5:	or     al,0x48
  4189f7:	popa   
  4189f8:	and    cl,BYTE PTR [edi]
  4189fa:	sub    BYTE PTR ds:0x85dc53a2,ch
  418a00:	mov    WORD PTR [edi],fs
  418a02:	call   0xf1d020dc
  418a07:	(bad)  
  418a08:	lock imul dh
  418a0b:	in     al,dx
  418a0c:	push   ebx
  418a0d:	icebp  
  418a0e:	xchg   edi,eax
  418a0f:	dec    esi
  418a10:	jb     0x4189ab
  418a12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a13:	addr16 mov edi,0xf02ae3e7
  418a19:	jnp    0x4189e7
  418a1b:	ins    DWORD PTR es:[edi],dx
  418a1c:	jno    0x4189f4
  418a1e:	inc    esi
  418a1f:	xor    ah,BYTE PTR [ecx-0x2dd939e5]
  418a25:	out    dx,al
  418a26:	sub    ax,cx
  418a29:	cdq    
  418a2a:	inc    ebp
  418a2b:	or     dl,BYTE PTR [esi+0x5e007401]
  418a31:	out    0xe5,eax
  418a33:	retf   
  418a34:	pop    eax
  418a35:	push   ss
  418a36:	inc    ebx
  418a37:	jae    0x418a59
  418a39:	mov    gs,WORD PTR [ebp-0x108495e3]
  418a3f:	push   edi
  418a40:	or     edx,DWORD PTR [edi+0x57]
  418a43:	jge    0x4189e1
  418a45:	xchg   ebp,edx
  418a47:	sbb    al,0x32
  418a49:	loop   0x418a26
  418a4b:	cmp    DWORD PTR [esi+0x7c],ebx
  418a4e:	and    al,0x87
  418a50:	scas   al,BYTE PTR es:[edi]
  418a51:	jnp    0x418a2f
  418a53:	pop    esp
  418a54:	xor    DWORD PTR [esi],ebx
  418a56:	cmp    al,0x2a
  418a58:	pop    esi
  418a59:	out    0x7f,al
  418a5b:	inc    ecx
  418a5c:	pop    es
  418a5d:	dec    ecx
  418a5e:	mul    BYTE PTR [esi]
  418a60:	lds    edi,FWORD PTR [edx+ecx*4-0x37]
  418a64:	fiadd  WORD PTR [edx]
  418a66:	add    al,0xf0
  418a68:	test   DWORD PTR [edx],ebp
  418a6a:	rcl    DWORD PTR [ecx+0x76389c99],0xee
  418a71:	pop    edi
  418a72:	int3   
  418a73:	mov    eax,ds:0x9bc8c5f6
  418a78:	cmp    dl,BYTE PTR [edx]
  418a7a:	xchg   BYTE PTR [edx+0x55],dh
  418a7d:	fimul  WORD PTR [ebx+0x57]
  418a80:	sub    al,BYTE PTR [edi+edx*8+0x17]
  418a84:	sbb    BYTE PTR [esi],0x7e
  418a87:	lods   eax,DWORD PTR ds:[esi]
  418a88:	xor    ecx,eax
  418a8a:	bound  edx,QWORD PTR [edi+edi*2-0x63]
  418a8e:	and    BYTE PTR [eax-0x72],0x2
  418a92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a93:	std    
  418a94:	ss cmp al,0xb4
  418a97:	lods   eax,DWORD PTR ds:[esi]
  418a98:	adc    edi,esp
  418a9a:	and    esi,DWORD PTR [eax]
  418a9c:	mov    al,BYTE PTR [esi]
  418a9e:	jg     0x418ac9
  418aa0:	pop    edx
  418aa1:	sub    eax,0xe9fccb91
  418aa6:	lods   eax,DWORD PTR ds:[esi]
  418aa7:	jmp    0x418aac
  418aa9:	jge    0x418aad
  418aab:	outs   dx,BYTE PTR ds:[esi]
  418aac:	add    eax,DWORD PTR [edx+0x74ecc0b8]
  418ab2:	xor    cl,BYTE PTR [edi-0xc]
  418ab5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ab6:	retf   0x2ebc
  418ab9:	cs ret 
  418abb:	test   eax,0xd36a275f
  418ac0:	or     DWORD PTR [edx-0x4],esp
  418ac3:	jnp    0x418a66
  418ac5:	aaa    
  418ac6:	ins    DWORD PTR es:[edi],dx
  418ac7:	inc    ebp
  418ac8:	neg    BYTE PTR [esi+0x5766716e]
  418ace:	dec    ebp
  418acf:	ja     0x418ac5
  418ad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ad2:	dec    ebp
  418ad3:	cmp    BYTE PTR [ecx-0x6f108c80],0x52
  418ada:	addr16 push esp
  418adc:	push   esp
  418add:	lods   eax,DWORD PTR ds:[esi]
  418ade:	xor    ebp,DWORD PTR [ebx-0x62ff0ed5]
  418ae4:	outs   dx,BYTE PTR ds:[esi]
  418ae5:	scas   eax,DWORD PTR es:[edi]
  418ae6:	daa    
  418ae7:	dec    eax
  418ae8:	mul    BYTE PTR [edx+0x1c]
  418aeb:	rol    DWORD PTR [ebx+0x60aad233],0x4b
  418af2:	(bad)  
  418af3:	lods   al,BYTE PTR ds:[esi]
  418af4:	test   BYTE PTR [ecx+0x37],ah
  418af7:	das    
  418af8:	jno    0x418a9c
  418afa:	loop   0x418b59
  418afc:	call   0x3027a4f5
  418b01:	push   edi
  418b02:	out    0x4f,eax
  418b04:	daa    
  418b05:	or     DWORD PTR [edx-0x71],esp
  418b08:	icebp  
  418b09:	enter  0xedac,0xfb
  418b0d:	mov    dl,0xfe
  418b0f:	inc    edx
  418b10:	xchg   edx,eax
  418b11:	pusha  
  418b12:	jo     0x418b01
  418b14:	repz pop eax
  418b16:	and    DWORD PTR [esi-0x4f511032],0x4c
  418b1d:	jae    0x418b72
  418b1f:	and    dl,BYTE PTR cs:[eax]
  418b22:	mov    eax,ds:0xae6a292b
  418b27:	dec    ecx
  418b28:	fst    QWORD PTR [ebp+0x5e]
  418b2b:	jae    0x418b62
  418b2d:	(bad)  
  418b2e:	jmp    0x468:0x60e71397
  418b35:	mov    bh,0xf2
  418b37:	repz xor eax,0x1c39b97f
  418b3d:	or     DWORD PTR [edx+0x1f],ecx
  418b40:	cwde   
  418b41:	sbb    ecx,DWORD PTR [ebp-0x31fb9ec1]
  418b47:	cmp    BYTE PTR [ebx-0x50],dh
  418b4a:	cmp    ah,al
  418b4c:	xchg   cl,al
  418b4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b4f:	push   ebx
  418b50:	dec    ebp
  418b51:	and    BYTE PTR [ecx+0x2250051e],cl
  418b57:	shr    DWORD PTR [ecx],0xf8
  418b5a:	ror    ebx,1
  418b5c:	lds    ebp,FWORD PTR [edi-0xa]
  418b5f:	cdq    
  418b60:	arpl   WORD PTR ds:0xedaac6b1,dx
  418b66:	sbb    al,BYTE PTR [eax-0x58a0ef88]
  418b6c:	dec    eax
  418b6d:	xchg   esp,eax
  418b6e:	jno    0x418be5
  418b70:	dec    esp
  418b71:	and    al,0xe
  418b73:	mov    ecx,0x3a36e110
  418b78:	sbb    al,0x0
  418b7a:	out    0x33,eax
  418b7c:	test   al,0x8d
  418b7e:	jne    0x418b24
  418b80:	cwde   
  418b81:	in     eax,dx
  418b82:	xchg   esp,eax
  418b83:	sub    al,0x7
  418b85:	fld    TBYTE PTR [esi+0x64]
  418b88:	pop    edx
  418b89:	cmp    DWORD PTR [ebp+0x65],esp
  418b8c:	or     bl,BYTE PTR [ecx+edx*8-0x55]
  418b90:	fild   DWORD PTR [edx+0x606c26e6]
  418b96:	in     eax,0xd6
  418b98:	mov    eax,0x33b56b30
  418b9d:	inc    edx
  418b9e:	xor    BYTE PTR [ebx+0x4d36b802],al
  418ba4:	std    
  418ba5:	xchg   BYTE PTR [ebx+0x5a5c828c],ah
  418bab:	(bad)  
  418bac:	xor    al,0xe3
  418bae:	mov    ?,WORD PTR [edx]
  418bb0:	jbe    0x418c22
  418bb2:	xchg   ebx,eax
  418bb3:	push   esp
  418bb4:	rol    DWORD PTR [ebx+0x3f44df2e],1
  418bba:	sub    BYTE PTR [edx],bh
  418bbc:	dec    edx
  418bbd:	push   ss
  418bbe:	push   ss
  418bbf:	adc    ch,BYTE PTR [ecx]
  418bc1:	fs inc ecx
  418bc3:	dec    edx
  418bc4:	pop    ebx
  418bc5:	daa    
  418bc6:	xchg   edi,eax
  418bc7:	mov    edi,DWORD PTR [esi]
  418bc9:	inc    edi
  418bca:	jnp    0x418b54
  418bcc:	mov    dh,0xc0
  418bce:	mov    bh,0x21
  418bd0:	push   ebx
  418bd1:	das    
  418bd2:	stc    
  418bd3:	aaa    
  418bd4:	hlt    
  418bd5:	sbb    bh,dl
  418bd7:	ret    
  418bd8:	cmc    
  418bd9:	xchg   BYTE PTR [ecx+0x23],bh
  418bdc:	push   esi
  418bdd:	or     DWORD PTR [ebp+ebp*2-0x4],edx
  418be1:	cmp    cl,BYTE PTR [esi]
  418be3:	lds    edx,FWORD PTR [edx-0x4d249c7c]
  418be9:	sbb    eax,0x2887b293
  418bee:	add    eax,0x6deddd61
  418bf3:	mov    edi,DWORD PTR [esi-0x16]
  418bf6:	call   esp
  418bf8:	in     al,dx
  418bf9:	es push 0xfe7f1c72
  418bff:	or     al,ah
  418c01:	jmp    0x418c0e
  418c03:	xlat   BYTE PTR ds:[ebx]
  418c04:	into   
  418c05:	jns    0x418c2f
  418c07:	adc    al,0xc3
  418c09:	stc    
  418c0a:	push   ebx
  418c0b:	sbb    BYTE PTR [ecx-0x15],dl
  418c0e:	sub    ah,ah
  418c10:	xor    ebx,DWORD PTR [esi-0x1fa9f2d9]
  418c16:	mov    ch,0x2a
  418c18:	clc    
  418c19:	jmp    0x6565:0x24f47f2f
  418c20:	into   
  418c21:	cmc    
  418c22:	inc    edx
  418c23:	leave  
  418c24:	inc    edi
  418c25:	lahf   
  418c26:	icebp  
  418c27:	mov    ah,0x87
  418c29:	or     edx,0xffffffa4
  418c2c:	sti    
  418c2d:	out    0x89,al
  418c2f:	jle    0x418c47
  418c31:	pop    edi
  418c32:	aad    0x32
  418c34:	ss push cs
  418c36:	push   esp
  418c37:	dec    esi
  418c38:	adc    eax,0xe0b57da2
  418c3d:	inc    esp
  418c3e:	imul   ecx,DWORD PTR [ebp+0x74dec5cf],0xb67dbaf7
  418c48:	gs jo  0x418c0f
  418c4b:	mov    ah,0x91
  418c4d:	ret    
  418c4e:	push   edx
  418c4f:	xchg   ebx,eax
  418c50:	add    ch,BYTE PTR ds:0x2fc5db6a
  418c56:	sbb    eax,0xa5d345be
  418c5b:	sbb    eax,0x7987c6b5
  418c60:	xor    al,0x1a
  418c62:	icebp  
  418c63:	mov    BYTE PTR [esi],0xec
  418c66:	mov    edx,0xe53158a6
  418c6b:	ja     0x418c89
  418c6d:	or     eax,0x377dbb39
  418c72:	addr16 inc ecx
  418c74:	repnz lds eax,FWORD PTR [edi-0x4e]
  418c78:	and    eax,0x3d5d03a3
  418c7d:	into   
  418c7e:	push   0x33
  418c80:	jmp    0x37436f93
  418c85:	sub    al,0xc8
  418c87:	ins    DWORD PTR es:[edi],dx
  418c88:	jmp    0x5ea7:0x87d96992
  418c8f:	aas    
  418c90:	xchg   esi,eax
  418c91:	and    DWORD PTR [edx-0x278201d],edx
  418c97:	jl     0x418c98
  418c99:	jmp    0x458c:0xe127132b
  418ca0:	ret    
  418ca1:	xchg   esi,eax
  418ca2:	in     al,0xf0
  418ca4:	ja     0x418c8b
  418ca6:	xchg   ecx,eax
  418ca7:	outs   dx,BYTE PTR ds:[esi]
  418ca8:	(bad)  
  418ca9:	ins    DWORD PTR es:[edi],dx
  418caa:	retf   
  418cab:	test   eax,0x49772cb1
  418cb0:	test   BYTE PTR [eax+0x67],ah
  418cb3:	popf   
  418cb4:	mov    cl,0xfe
  418cb6:	jl     0x418c95
  418cb8:	fild   WORD PTR [esi-0x62]
  418cbb:	out    dx,al
  418cbc:	int    0x93
  418cbe:	mov    al,0x88
  418cc0:	inc    ebp
  418cc1:	test   al,0xc9
  418cc3:	jns    0x418d0d
  418cc5:	xchg   esi,eax
  418cc6:	dec    ebp
  418cc7:	xor    BYTE PTR [ebx],cl
  418cc9:	das    
  418cca:	mov    ebp,DWORD PTR [edx+0x212d0d27]
  418cd0:	loopne 0x418cec
  418cd2:	adc    eax,ebp
  418cd4:	xchg   BYTE PTR [esi+0x36],ch
  418cd7:	ret    0x2bf9
  418cda:	sub    bh,0x46
  418cdd:	clc    
  418cde:	dec    BYTE PTR [edi-0x6287a446]
  418ce4:	cmc    
  418ce5:	cmp    bl,bl
  418ce7:	push   ebp
  418ce8:	cmp    bh,BYTE PTR [ebx-0x6c]
  418ceb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cec:	in     al,dx
  418ced:	mov    edi,0xf965a046
  418cf2:	loop   0x418d09
  418cf4:	mov    ?,WORD PTR [esi]
  418cf6:	pop    ebx
  418cf7:	sahf   
  418cf8:	test   DWORD PTR [edi],esi
  418cfa:	sbb    esp,edx
  418cfc:	inc    esi
  418cfd:	pusha  
  418cfe:	inc    ebp
  418cff:	sbb    eax,0x99b9b6ce
  418d04:	pushf  
  418d05:	hlt    
  418d06:	jmp    0x418d0c
  418d08:	lds    ecx,FWORD PTR [edi]
  418d0a:	lods   eax,DWORD PTR ds:[esi]
  418d0b:	outs   dx,BYTE PTR ds:[esi]
  418d0c:	ret    
  418d0d:	fcmovb st,st(2)
  418d0f:	or     eax,0x5c
  418d12:	cvtpi2ps xmm6,QWORD PTR [ecx+0x3]
  418d16:	ins    DWORD PTR es:[edi],dx
  418d17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d18:	dec    esi
  418d19:	xchg   edi,eax
  418d1a:	imul   edx,edx,0xf3939a86
  418d20:	jb     0x418cd0
  418d22:	or     dl,al
  418d24:	nop
  418d25:	cmp    dl,BYTE PTR [edi+ecx*4+0x49a32b77]
  418d2c:	xor    esi,eax
  418d2e:	jno    0x418d0f
  418d30:	sbb    DWORD PTR [ecx],esp
  418d32:	clc    
  418d33:	hlt    
  418d34:	inc    ebp
  418d35:	sub    BYTE PTR [esi+0x39753930],bh
  418d3b:	(bad)  
  418d3e:	pusha  
  418d3f:	sbb    BYTE PTR [edx+eiz*1],ch
  418d42:	push   edi
  418d43:	ficomp WORD PTR es:[edi]
  418d46:	dec    ebx
  418d47:	pop    ds
  418d48:	xchg   BYTE PTR [ebx+ebx*8],ch
  418d4b:	xchg   BYTE PTR [eax],ah
  418d4d:	push   esp
  418d4e:	rcl    BYTE PTR [eax],0xd4
  418d51:	add    ah,BYTE PTR [edx+0xa608570]
  418d57:	xor    BYTE PTR [ecx],0x7d
  418d5a:	mov    bh,0x13
  418d5c:	ins    BYTE PTR es:[edi],dx
  418d5d:	inc    ecx
  418d5e:	leave  
  418d5f:	xchg   cl,al
  418d61:	lahf   
  418d62:	or     BYTE PTR [edi],dh
  418d64:	xchg   edi,ecx
  418d66:	pushf  
  418d67:	adc    edi,DWORD PTR [ebp+0x12f3b7c0]
  418d6d:	out    dx,eax
  418d6e:	jbe    0x418db0
  418d70:	popf   
  418d71:	add    BYTE PTR [esp+esi*2-0x72],al
  418d75:	cdq    
  418d76:	xchg   DWORD PTR [edi+0x6],edx
  418d79:	inc    eax
  418d7a:	ret    0xeb92
  418d7d:	aam    0x5a
  418d7f:	mov    DWORD PTR [edi-0x6a61ff28],ecx
  418d85:	jp     0x418dda
  418d87:	scas   eax,DWORD PTR es:[edi]
  418d88:	pop    esp
  418d89:	push   ss
  418d8a:	in     al,dx
  418d8b:	inc    edi
  418d8c:	repnz fdiv DWORD PTR [edx+0x78]
  418d90:	ds mov ah,0x8f
  418d93:	lahf   
  418d94:	jo     0x418d6f
  418d96:	daa    
  418d97:	jg     0x418dad
  418d99:	shl    cl,0x80
  418d9c:	pop    edi
  418d9d:	add    dh,BYTE PTR [ebx-0x59]
  418da0:	cmc    
  418da1:	mov    ebx,0xdef4d7a9
  418da6:	pop    ebp
  418da7:	mov    esi,0x66176324
  418dac:	sbb    al,0x5d
  418dae:	pop    esp
  418daf:	stc    
  418db0:	iret   
  418db1:	int3   
  418db2:	xchg   DWORD PTR [esi+0x76a40972],eax
  418db8:	add    DWORD PTR [edi+0xd],0xb5b2972a
  418dbf:	sub    DWORD PTR [eax-0x7],ebx
  418dc2:	push   cs
  418dc3:	std    
  418dc4:	gs xchg eax,eax
  418dc7:	js     0x418dc1
  418dc9:	ret    
  418dca:	sbb    bh,bh
  418dcc:	sbb    eax,0x7257f8f
  418dd1:	dec    esi
  418dd2:	fidivr WORD PTR [ebp-0x5fb7730e]
  418dd8:	and    al,0x0
  418dda:	mov    ds:0xf1df8aed,eax
  418ddf:	xor    eax,0x9ccbadf4
  418de4:	int    0xd2
  418de6:	clc    
  418de7:	mov    ebx,0xaf8a610b
  418dec:	pop    DWORD PTR [ebx]
  418dee:	pop    ss
  418def:	in     eax,0x32
  418df1:	int    0x3
  418df3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418df4:	dec    ebx
  418df5:	cmp    ebx,DWORD PTR [ebp+0x298f4bb5]
  418dfb:	dec    edx
  418dfc:	sub    ch,dh
  418dfe:	or     al,0x14
  418e00:	push   cs
  418e01:	xor    eax,0x3b1c1ba6
  418e06:	sub    DWORD PTR [ebx-0x2a],edi
  418e09:	xchg   esp,eax
  418e0a:	das    
  418e0b:	and    al,BYTE PTR [eax-0x41e046a1]
  418e11:	mov    eax,ds:0x9770d1e5
  418e16:	enter  0x2bca,0x53
  418e1a:	mov    ch,0xb7
  418e1c:	sub    al,cl
  418e1e:	int3   
  418e1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e20:	mov    esi,0xfd6f1a8c
  418e25:	jl     0x418e91
  418e27:	push   ebx
  418e28:	inc    ecx
  418e29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e2a:	clc    
  418e2b:	push   cs
  418e2c:	repnz mov DWORD PTR [ebx],esi
  418e2f:	bound  eax,QWORD PTR ds:0x40f1077c
  418e35:	inc    esi
  418e36:	or     esi,edi
  418e38:	add    edx,ebp
  418e3a:	pop    ds
  418e3b:	dec    edx
  418e3c:	std    
  418e3d:	sti    
  418e3e:	(bad)  [esi+0x7e9a3ac1]
  418e44:	nop
  418e45:	loope  0x418e5b
  418e47:	cmp    al,0x1d
  418e49:	das    
  418e4a:	or     BYTE PTR [esi],al
  418e4c:	test   BYTE PTR [esp+eax*2],ah
  418e4f:	outs   dx,BYTE PTR ds:[esi]
  418e50:	enter  0x6903,0xb8
  418e54:	lea    eax,[edx+0x29566034]
  418e5a:	mov    ah,0xe1
  418e5c:	adc    DWORD PTR [esi+ebx*1+0x63],esi
  418e60:	sar    DWORD PTR [edi+0x26],0xad
  418e64:	mov    ds:0xbeafbc54,eax
  418e69:	xor    al,0x1b
  418e6b:	popf   
  418e6c:	xor    dl,BYTE PTR [eax]
  418e6e:	out    dx,eax
  418e6f:	or     eax,0x763e6193
  418e74:	jns    0x418dfc
  418e76:	push   edx
  418e77:	jno    0x418ed2
  418e79:	mov    esp,0x27e06a5b
  418e7e:	out    dx,eax
  418e7f:	inc    ecx
  418e80:	out    dx,eax
  418e81:	inc    edx
  418e82:	int    0x13
  418e84:	out    0x98,al
  418e86:	sub    eax,0x7dea76e1
  418e8b:	adc    DWORD PTR [ebx],edi
  418e8d:	popa   
  418e8e:	sbb    dl,ah
  418e90:	mov    bh,bh
  418e92:	rcl    DWORD PTR [ebx+0x50],1
  418e95:	aaa    
  418e96:	shr    dh,0x1b
  418e99:	loop   0x418e7f
  418e9b:	pop    ebx
  418e9c:	inc    esp
  418e9d:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e9f:	fistp  WORD PTR ds:0xa8460720
  418ea5:	push   ebp
  418ea6:	mov    al,ds:0x1885f70d
  418eab:	pop    ds
  418eac:	and    BYTE PTR [esi],bh
  418eae:	push   ebp
  418eaf:	adc    edx,DWORD PTR [eax]
  418eb1:	(bad)  
  418eb2:	lock adc al,0xc9
  418eb5:	test   esp,0x3a7605cc
  418ebb:	mov    ecx,0x36831a8f
  418ec0:	push   es
  418ec1:	push   ecx
  418ec2:	ins    DWORD PTR es:[edi],dx
  418ec3:	ds push es
  418ec5:	mov    edx,0x6ecdcc35
  418eca:	inc    ebx
  418ecb:	call   0x5279:0xf072f08c
  418ed2:	outs   dx,DWORD PTR ds:[esi]
  418ed3:	(bad)  
  418ed4:	ffree  st(4)
  418ed6:	in     eax,0x60
  418ed8:	retf   0x5ab6
  418edb:	add    al,bh
  418edd:	popf   
  418ede:	(bad)
  418ee2:	aad    0x12
  418ee4:	and    esp,DWORD PTR [edx-0x41]
  418ee7:	outs   dx,DWORD PTR ds:[esi]
  418ee8:	cmp    DWORD PTR [esi-0x38],edi
  418eeb:	adc    bh,cl
  418eed:	lahf   
  418eee:	mov    bh,0x27
  418ef0:	out    dx,al
  418ef1:	cmp    DWORD PTR [ecx-0x3],edi
  418ef4:	out    dx,eax
  418ef5:	pop    eax
  418ef6:	stc    
  418ef7:	test   al,0xfb
  418ef9:	and    ebp,DWORD PTR [ebx-0x10]
  418efc:	(bad)  
  418efd:	ficom  WORD PTR [esi-0x2c]
  418f00:	ret    0xe5b7
  418f03:	jl     0x418ec8
  418f05:	push   esp
  418f06:	jecxz  0x418ebd
  418f08:	out    0xcd,eax
  418f0a:	sti    
  418f0b:	fwait
  418f0c:	das    
  418f0d:	jnp    0x418eb9
  418f0f:	dec    ebp
  418f10:	imul   ecx,eax,0xabc1d78c
  418f16:	xor    eax,0x68cf2272
  418f1b:	out    dx,eax
  418f1c:	test   al,0x76
  418f1e:	and    DWORD PTR [ebx+0x2dd3d93a],0x915efa3e
  418f28:	pop    es
  418f29:	jns    0x418f98
  418f2b:	or     DWORD PTR [eax-0x892c32a],edx
  418f31:	iret   
  418f32:	enter  0xfd8c,0x70
  418f36:	dec    edx
  418f37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f38:	sar    DWORD PTR [esp+ecx*1-0x5d],1
  418f3c:	std    
  418f3d:	repnz imul edi,DWORD PTR [ecx-0x46],0xb72b3dec
  418f45:	cmp    DWORD PTR [esi+0x7],ebx
  418f48:	fistp  DWORD PTR [ecx-0x60]
  418f4b:	jecxz  0x418f7f
  418f4d:	sub    BYTE PTR [ecx],dl
  418f4f:	cwde   
  418f50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f51:	in     eax,dx
  418f52:	pop    ds
  418f53:	push   ss
  418f54:	jae    0x418f08
  418f56:	scas   eax,DWORD PTR es:[edi]
  418f57:	inc    esp
  418f58:	fsubr  DWORD PTR [ebx]
  418f5a:	pop    eax
  418f5b:	adc    BYTE PTR [edi],0xd8
  418f5e:	ds out dx,eax
  418f60:	inc    ebp
  418f61:	xor    al,0x9a
  418f63:	retf   
  418f64:	jg     0x418f79
  418f66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f67:	std    
  418f68:	test   al,0x97
  418f6a:	cli    
  418f6b:	std    
  418f6c:	les    ebx,FWORD PTR [eax]
  418f6e:	bound  ebp,QWORD PTR [edi+0x79]
  418f71:	mov    edx,0x1baccc0f
  418f76:	and    dh,al
  418f78:	add    al,0xde
  418f7a:	mov    ebp,0xb508383
  418f7f:	and    ch,BYTE PTR [edi]
  418f81:	call   0xc2cb:0xa1ad3a09
  418f88:	xor    DWORD PTR [ebx],ebp
  418f8a:	xchg   esi,eax
  418f8b:	(bad)  
  418f8c:	dec    ecx
  418f8d:	sub    DWORD PTR [ebx],esp
  418f8f:	pusha  
  418f90:	push   cs
  418f91:	push   es
  418f92:	sbb    BYTE PTR [ecx],bh
  418f94:	push   ebx
  418f95:	into   
  418f96:	scas   al,BYTE PTR es:[edi]
  418f97:	call   FWORD PTR [edi]
  418f99:	loopne 0x418f61
  418f9b:	hlt    
  418f9c:	(bad)
  418fa0:	jl     0x418f30
  418fa2:	sbb    eax,0x84882abb
  418fa7:	xor    DWORD PTR [esi+ecx*2-0x45],ebp
  418fab:	push   ss
  418fac:	dec    ebp
  418fad:	in     eax,dx
  418fae:	pop    es
  418faf:	stos   BYTE PTR es:[edi],al
  418fb0:	test   al,0x8b
  418fb2:	fisubr DWORD PTR [ebp+0x7aac558]
  418fb8:	ss repz jge 0x418ff6
  418fbc:	push   es
  418fbd:	mov    dl,0x28
  418fbf:	jbe    0x41903b
  418fc1:	xchg   edi,eax
  418fc2:	sbb    BYTE PTR [esi+0x7a],bh
  418fc5:	push   ss
  418fc6:	leave  
  418fc7:	(bad)  gs:[ebp-0x51]
  418fcb:	dec    esp
  418fcc:	and    al,0x52
  418fce:	fmul   DWORD PTR [ebp+edx*2-0x28ebed25]
  418fd5:	mov    edi,0xda832ece
  418fda:	cld    
  418fdb:	mov    esp,DWORD PTR [edi+0x2f]
  418fde:	fisub  WORD PTR [eax+0x69]
  418fe1:	fbld   TBYTE PTR [ecx-0x14]
  418fe4:	inc    dl
  418fe6:	jne    0x419049
  418fe8:	dec    ebx
  418fe9:	out    0x42,al
  418feb:	fadd   QWORD PTR [ebp-0x1f697f4f]
  418ff1:	enter  0x97e0,0x98
  418ff5:	out    0x9,al
  418ff7:	xor    bl,BYTE PTR [ecx+edx*4-0x24]
  418ffb:	sar    esp,1
  418ffd:	mov    dl,0x75
  418fff:	cmp    DWORD PTR [ebp+0x39],0x836c65ec
  419006:	(bad)  
  419007:	jmp    0x419004
  419009:	lahf   
  41900a:	nop
  41900b:	out    0xf0,al
  41900d:	sbb    esi,DWORD PTR [eax]
  41900f:	in     eax,0xc4
  419011:	jnp    0x419091
  419013:	jae    0x418fb4
  419015:	dec    BYTE PTR [esi+esi*4]
  419018:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419019:	loop   0x41900b
  41901b:	inc    eax
  41901c:	arpl   WORD PTR [ebx],dx
  41901e:	mov    dl,0xc6
  419020:	out    0x89,eax
  419022:	lock lea eax,[ecx+0x517b1bdc]
  419029:	loopne 0x419013
  41902b:	add    ebp,ecx
  41902d:	pop    ebx
  41902e:	test   BYTE PTR [ebp-0x7b],cl
  419031:	ins    DWORD PTR es:[edi],dx
  419032:	hlt    
  419033:	mov    esp,0x59778582
  419038:	cmc    
  419039:	loope  0x419058
  41903b:	jmp    0x418ff7
  41903d:	sti    
  41903e:	lea    esi,[eax+0x66dafba4]
  419044:	cmp    dl,ah
  419046:	fld    DWORD PTR gs:[edi+0x35]
  41904a:	sbb    al,0x64
  41904c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41904d:	mov    al,ds:0xbc6398a4
  419052:	sub    al,0x4b
  419054:	mov    dl,0xe8
  419056:	sbb    esi,DWORD PTR [edx]
  419058:	ss push edi
  41905a:	bnd jo 0x41904a
  41905d:	push   esi
  41905e:	mov    ds:0x32ea91dd,al
  419063:	mov    ?,edx
  419065:	test   DWORD PTR [esi],esi
  419067:	loop   0x419054
  419069:	mov    WORD PTR [edi-0x45],gs
  41906c:	div    DWORD PTR [ecx-0x5248a18b]
  419072:	test   eax,0xa4490724
  419077:	jl     0x41909a
  419079:	mov    ch,0x3c
  41907b:	mov    ds:0x825c759c,eax
  419080:	xchg   esp,eax
  419081:	mov    ebx,0xf2fc6d9e
  419086:	neg    BYTE PTR [edi]
  419088:	xor    eax,0x6cbdeddf
  41908d:	push   ebp
  41908e:	cdq    
  41908f:	stos   BYTE PTR es:[edi],al
  419090:	push   eax
  419091:	cld    
  419092:	lods   eax,DWORD PTR ds:[esi]
  419093:	lea    ebp,[ebp-0x5834ac33]
  419099:	fist   WORD PTR [edi-0x7475ea13]
  41909f:	ss (bad) 
  4190a1:	xchg   BYTE PTR [ebx-0x13306f36],dh
  4190a7:	js     0x419075
  4190a9:	aaa    
  4190aa:	ins    BYTE PTR es:[edi],dx
  4190ab:	fs jge 0x4190ba
  4190ae:	push   0x6025a14
  4190b3:	scas   al,BYTE PTR es:[edi]
  4190b4:	pop    ebx
  4190b5:	xchg   DWORD PTR [ecx-0x4651a78],edx
  4190bb:	cli    
  4190bc:	cmp    dh,al
  4190be:	imul   DWORD PTR [edx+edx*4]
  4190c1:	repz mov ebx,0x6a7745aa
  4190c7:	mov    bl,0x2
  4190c9:	sbb    eax,0xcaedf7aa
  4190ce:	sub    ch,0x2b
  4190d1:	dec    ebx
  4190d2:	jge    0x41911a
  4190d4:	cdq    
  4190d5:	mov    dh,0xc5
  4190d7:	sub    bl,BYTE PTR [ebx+eiz*8+0x1f924f28]
  4190de:	mov    fs,WORD PTR [eax+ebp*4+0x2efc53e9]
  4190e5:	pusha  
  4190e6:	dec    eax
  4190e7:	and    eax,0x764bd84b
  4190ec:	nop
  4190ed:	sbb    ecx,DWORD PTR ds:0x996db35f
  4190f3:	mov    cl,0x72
  4190f5:	mov    al,0xdc
  4190f7:	pop    ecx
  4190f8:	std    
  4190f9:	test   DWORD PTR [edx+eax*8+0x6e335239],esi
  419100:	data16 rol BYTE PTR [eax-0x7a],1
  419104:	sbb    ebp,DWORD PTR [ecx]
  419106:	loope  0x419172
  419108:	xchg   edi,eax
  419109:	xor    DWORD PTR [ebx+0x56],0xffffffc7
  41910d:	ds call 0x89d7a1f
  419113:	sbb    BYTE PTR [esi-0x50],0xce
  419117:	(bad)
  41911a:	cmp    ch,cl
  41911c:	push   ecx
  41911d:	push   ebp
  41911e:	mov    ebp,ebp
  419120:	sbb    DWORD PTR [edi+0x159f64c],0xa
  419127:	mov    al,ds:0xd194dea8
  41912c:	jge    0x419107
  41912e:	je     0x901963f
  419134:	in     al,dx
  419135:	test   al,0xda
  419137:	xor    al,0x1
  419139:	push   esi
  41913a:	mov    bl,0x8
  41913c:	and    BYTE PTR [edi],ch
  41913e:	jae    0x41919b
  419140:	mov    WORD PTR [ebx+0x2b9a4475],?
  419146:	inc    esp
  419147:	inc    edi
  419148:	jo     0x4191b6
  41914a:	or     esp,esi
  41914c:	aad    0x4c
  41914e:	pop    ss
  41914f:	sbb    DWORD PTR [esi+eiz*1+0x773d1972],esp
  419156:	(bad)  [esi+ebp*2-0x51bf102d]
  41915d:	xor    dh,ch
  41915f:	outs   dx,BYTE PTR fs:[esi]
  419161:	push   es
  419162:	add    al,0xf7
  419164:	leave  
  419165:	mov    bl,0x8b
  419167:	lods   al,BYTE PTR ds:[esi]
  419168:	arpl   WORD PTR ds:0x91401a6e,ax
  41916e:	(bad)  
  41916f:	push   esi
  419170:	pop    ebp
  419171:	push   ebx
  419172:	inc    ebp
  419173:	lahf   
  419174:	(bad)  
  419175:	sbb    al,0xe
  419177:	inc    ebp
  419178:	sti    
  419179:	sub    edi,0x13
  41917c:	call   0x2355:0x556d17af
  419183:	fdiv   st(6),st
  419185:	int3   
  419186:	loop   0x41913b
  419188:	aaa    
  419189:	icebp  
  41918a:	dec    ebp
  41918b:	sbb    dh,BYTE PTR [esi+0x39aa6030]
  419191:	les    edi,FWORD PTR [edi+0x57]
  419194:	xchg   esp,eax
  419195:	sub    eax,0x7e29850d
  41919a:	stc    
  41919b:	test   eax,0x35d0db01
  4191a0:	out    dx,eax
  4191a1:	ror    BYTE PTR ss:[edi+0x9],cl
  4191a5:	mov    ecx,0x84af3cf5
  4191aa:	jne    0x419130
  4191ac:	adc    al,0x53
  4191ae:	lock leave 
  4191b0:	push   cs
  4191b1:	sbb    BYTE PTR [esi+0x1f],dh
  4191b4:	adc    bh,BYTE PTR gs:[edx-0x6]
  4191b8:	(bad)  
  4191b9:	enter  0xd3d1,0x56
  4191bd:	loop   0x419191
  4191bf:	test   ah,dl
  4191c1:	lahf   
  4191c2:	loop   0x4191e6
  4191c4:	add    esi,eax
  4191c6:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4191c8:	(bad)  [esi]
  4191ca:	dec    edi
  4191cb:	add    bl,0xe3
  4191ce:	sub    ecx,edx
  4191d0:	sub    ecx,esi
  4191d2:	xor    ecx,eax
  4191d4:	mov    DWORD PTR [ebp+0x8],ecx
  4191d7:	mov    ecx,DWORD PTR [ebp+0x8]
  4191da:	mov    edx,DWORD PTR [ebp-0x58]
  4191dd:	add    ecx,0x5708fa
  4191e3:	imul   ecx,edx
  4191e6:	mov    DWORD PTR [ebp-0x58],ecx
  4191e9:	mov    ecx,DWORD PTR [ebp+0x8]
  4191ec:	mov    edx,DWORD PTR [ebp-0x54]
  4191ef:	add    ecx,0x64f89c
  4191f5:	or     ecx,edx
  4191f7:	mov    DWORD PTR [ebp-0x54],ecx
  4191fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4191fd:	mov    edx,DWORD PTR [ebp-0x50]
  419200:	add    ecx,0x242ebcd
  419206:	xor    ecx,edx
  419208:	mov    DWORD PTR [ebp-0x50],ecx
  41920b:	mov    ecx,DWORD PTR [ebp+0x8]
  41920e:	mov    edx,DWORD PTR [ebp-0x4c]
  419211:	add    ecx,edi
  419213:	and    ecx,edx
  419215:	mov    DWORD PTR [ebp-0x4c],ecx
  419218:	mov    ecx,DWORD PTR [ebp+0x8]
  41921b:	mov    edx,DWORD PTR [ebp-0x48]
  41921e:	lea    ecx,[edx+ecx*1+0x241fcdf]
  419225:	mov    DWORD PTR [ebp-0x48],ecx
  419228:	mov    ecx,DWORD PTR [ebp+0x8]
  41922b:	mov    edx,0xfa5e1530
  419230:	sub    edx,ecx
  419232:	add    edx,DWORD PTR [ebp-0x44]
  419235:	mov    DWORD PTR [ebp-0x44],edx
  419238:	mov    ecx,DWORD PTR [ebp+0x8]
  41923b:	xor    ecx,eax
  41923d:	add    ecx,esi
  41923f:	jne    0x416e3c
  419245:	jmp    0x4192d7
  41924a:	mov    ecx,DWORD PTR [ebp+0x8]
  41924d:	mov    edx,DWORD PTR [ebp-0x8]
  419250:	xor    ecx,eax
  419252:	xor    edx,eax
  419254:	sub    ecx,edx
  419256:	sub    ecx,esi
  419258:	xor    ecx,eax
  41925a:	mov    DWORD PTR [ebp+0x8],ecx
  41925d:	mov    ecx,DWORD PTR [ebp+0x8]
  419260:	mov    edx,DWORD PTR [ebp-0x58]
  419263:	add    ecx,0x5708fa
  419269:	imul   ecx,edx
  41926c:	mov    DWORD PTR [ebp-0x58],ecx
  41926f:	mov    ecx,DWORD PTR [ebp+0x8]
  419272:	mov    edx,DWORD PTR [ebp-0x54]
  419275:	add    ecx,0x64f89c
  41927b:	or     ecx,edx
  41927d:	mov    DWORD PTR [ebp-0x54],ecx
  419280:	mov    ecx,DWORD PTR [ebp+0x8]
  419283:	mov    edx,DWORD PTR [ebp-0x50]
  419286:	add    ecx,0x242ebcd
  41928c:	xor    ecx,edx
  41928e:	mov    DWORD PTR [ebp-0x50],ecx
  419291:	mov    ecx,DWORD PTR [ebp+0x8]
  419294:	mov    edx,DWORD PTR [ebp-0x4c]
  419297:	add    ecx,edi
  419299:	and    ecx,edx
  41929b:	mov    DWORD PTR [ebp-0x4c],ecx
  41929e:	mov    ecx,DWORD PTR [ebp+0x8]
  4192a1:	mov    edx,DWORD PTR [ebp-0x48]
  4192a4:	lea    ecx,[edx+ecx*1+0x241fcdf]
  4192ab:	mov    DWORD PTR [ebp-0x48],ecx
  4192ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4192b1:	mov    edx,0xfa5e1530
  4192b6:	sub    edx,ecx
  4192b8:	add    edx,DWORD PTR [ebp-0x44]
  4192bb:	mov    DWORD PTR [ebp-0x44],edx
  4192be:	mov    ecx,DWORD PTR [ebp+0x8]
  4192c1:	xor    ecx,eax
  4192c3:	add    ecx,esi
  4192c5:	jne    0x41924a
  4192cb:	mov    ecx,DWORD PTR [ebp-0x8]
  4192ce:	xor    ecx,eax
  4192d0:	mov    eax,DWORD PTR [ebp+0x10]
  4192d3:	add    ecx,esi
  4192d5:	mov    DWORD PTR [eax],ecx
  4192d7:	pop    edi
  4192d8:	pop    esi
  4192d9:	pop    ebx
  4192da:	leave  
  4192db:	ret    0xc
  4192de:	push   ebp
  4192df:	mov    ebp,esp
  4192e1:	sub    esp,0x78
  4192e4:	inc    eax
  4192e5:	push   esi
  4192e6:	xor    DWORD PTR ds:0x42a452,edi
  4192ec:	push   edi
  4192ed:	mov    eax,ds:0x42941e
  4192f2:	mov    DWORD PTR [ebp-0x24],eax
  4192f5:	add    DWORD PTR ds:0x42a40e,edi
  4192fb:	mov    eax,ds:0x42953e
  419300:	dec    DWORD PTR ds:0x42a412
  419306:	mov    DWORD PTR [ebp-0x30],eax
  419309:	mov    eax,ds:0x42a486
  41930e:	mov    eax,DWORD PTR [eax]
  419310:	xor    DWORD PTR ds:0x42a3f2,eax
  419316:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  41931d:	mov    DWORD PTR ds:0x42a3f2,0x1f
  419327:	cmp    DWORD PTR ds:0x42a3f2,0x0
  41932e:	je     0x419363
  419334:	cmp    DWORD PTR ds:0x42a3f2,0x27
  41933b:	jge    0x419363
  419341:	jmp    0x419351
  419346:	push   0x203c
  41934b:	call   DWORD PTR ds:0x42a526
  419351:	mov    edi,DWORD PTR ds:0x42a3f2
  419357:	dec    edi
  419358:	mov    DWORD PTR ds:0x42a3f2,edi
  41935e:	jmp    0x419327
  419363:	mov    DWORD PTR [ebp-0x28],0xf89c85ba
  41936a:	sub    ecx,0x2563
  419370:	mov    eax,DWORD PTR [ebp-0x10]
  419373:	or     ecx,edi
  419375:	mov    ecx,DWORD PTR [ebp-0x10]
  419378:	sub    edi,DWORD PTR ds:0x42a446
  41937e:	sub    eax,ecx
  419380:	mov    DWORD PTR [ebp-0x10],eax
  419383:	and    DWORD PTR ds:0x42a42e,0x0
  41938d:	jmp    0x4193a1
  419392:	xor    edi,edi
  419394:	add    edi,DWORD PTR ds:0x42a42e
  41939a:	inc    edi
  41939b:	mov    DWORD PTR ds:0x42a42e,edi
  4193a1:	cmp    DWORD PTR ds:0x42a42e,0x1b
  4193a8:	jae    0x4193f0
  4193ae:	cmp    DWORD PTR ds:0x42a42e,0x7
  4193b5:	ja     0x4193f0
  4193bb:	jmp    0x4193d1
  4193c0:	push   0x160a
  4193c5:	push   DWORD PTR [ebp-0x28]
  4193c8:	push   DWORD PTR [ebp-0x28]
  4193cb:	call   DWORD PTR ds:0x42a52a
  4193d1:	cmp    DWORD PTR ds:0x42a42e,0x6
  4193d8:	jne    0x4193eb
  4193de:	mov    edi,DWORD PTR ds:0x42a42e
  4193e4:	inc    edi
  4193e5:	mov    DWORD PTR ds:0x42a42e,edi
  4193eb:	jmp    0x419392
  4193f0:	xor    DWORD PTR [ebp-0x10],0xf89cb5b9
  4193f7:	add    DWORD PTR ds:0x42a3b2,edx
  4193fd:	mov    eax,DWORD PTR [ebp-0x18]
  419400:	mov    ecx,DWORD PTR [ebp-0x18]
  419403:	sub    eax,ecx
  419405:	mov    DWORD PTR [ebp-0x18],eax
  419408:	or     DWORD PTR [ebp-0x18],0xf89f05b9
  41940f:	and    DWORD PTR ds:0x42a3e2,0x0
  419419:	mov    ecx,DWORD PTR ds:0x42a3e2
  41941f:	inc    ecx
  419420:	mov    DWORD PTR ds:0x42a3e2,ecx
  419426:	cmp    DWORD PTR ds:0x42a3e2,0x24
  41942d:	jge    0x419460
  419433:	jmp    0x419453
  419438:	push   DWORD PTR [ebp-0x10]
  41943b:	push   DWORD PTR [ebp-0x10]
  41943e:	push   0x788a
  419443:	push   0x4432
  419448:	push   0x42a3e2
  41944d:	call   DWORD PTR ds:0x42a52e
  419453:	cmp    DWORD PTR ds:0x42a3e2,0x19
  41945a:	jb     0x419419
  419460:	mov    eax,DWORD PTR [ebp-0xc]
  419463:	add    DWORD PTR ds:0x42a436,0x42a42a
  41946d:	mov    ecx,DWORD PTR [ebp-0xc]
  419470:	adc    esi,edi
  419472:	sub    eax,ecx
  419474:	or     DWORD PTR ds:0x42a3ee,ebx
  41947a:	mov    DWORD PTR [ebp-0xc],eax
  41947d:	or     DWORD PTR [ebp-0xc],0xf89c85f9
  419484:	sub    DWORD PTR ds:0x42a3ba,0x3296
  41948e:	mov    eax,DWORD PTR [ebp-0x1c]
  419491:	mov    ecx,DWORD PTR [ebp-0x1c]
  419494:	sbb    edi,edi
  419496:	sub    eax,ecx
  419498:	adc    DWORD PTR ds:0x42a402,edi
  41949e:	mov    DWORD PTR [ebp-0x1c],eax
  4194a1:	add    esi,eax
  4194a3:	or     DWORD PTR [ebp-0x1c],0xf89c8599
  4194aa:	mov    DWORD PTR ds:0x42a44a,0x13
  4194b4:	cmp    DWORD PTR ds:0x42a44a,0x0
  4194bb:	je     0x4194f5
  4194c1:	cmp    DWORD PTR ds:0x42a44a,0x22
  4194c8:	jge    0x4194f5
  4194ce:	jmp    0x4194e1
  4194d3:	push   DWORD PTR [ebp-0x20]
  4194d6:	push   0x3f6d
  4194db:	call   DWORD PTR ds:0x42a532
  4194e1:	xor    ecx,ecx
  4194e3:	add    ecx,DWORD PTR ds:0x42a44a
  4194e9:	dec    ecx
  4194ea:	mov    DWORD PTR ds:0x42a44a,ecx
  4194f0:	jmp    0x4194b4
  4194f5:	mov    eax,DWORD PTR [ebp-0x20]
  4194f8:	mov    ecx,DWORD PTR [ebp-0x20]
  4194fb:	sub    eax,ecx
  4194fd:	mov    DWORD PTR [ebp-0x20],eax
  419500:	mov    eax,DWORD PTR [ebp-0x2c]
  419503:	mov    DWORD PTR ds:0x42a3c2,0x10
  41950d:	cmp    DWORD PTR ds:0x42a3c2,0x0
  419514:	je     0x419563
  41951a:	cmp    DWORD PTR ds:0x42a3c2,0x9
  419521:	jb     0x419563
  419527:	jmp    0x419535
  41952c:	push   DWORD PTR [ebp-0x10]
  41952f:	call   DWORD PTR ds:0x42a53a
  419535:	cmp    DWORD PTR ds:0x42a3c2,0xa
  41953c:	jne    0x419551
  419542:	xor    esi,esi
  419544:	xor    esi,DWORD PTR ds:0x42a3c2
  41954a:	dec    esi
  41954b:	mov    DWORD PTR ds:0x42a3c2,esi
  419551:	mov    esi,DWORD PTR ds:0x42a3c2
  419557:	dec    esi
  419558:	mov    DWORD PTR ds:0x42a3c2,esi
  41955e:	jmp    0x41950d
  419563:	mov    ecx,DWORD PTR [ebp-0x20]
  419566:	mov    esi,0x75108a8
  41956b:	xor    eax,esi
  41956d:	mov    edi,0x3272ef
  419572:	add    eax,edi
  419574:	or     eax,ecx
  419576:	mov    DWORD PTR [ebp-0x20],eax
  419579:	mov    eax,DWORD PTR [ebp-0x4]
  41957c:	mov    ecx,DWORD PTR [ebp-0x4]
  41957f:	sub    eax,ecx
  419581:	mov    DWORD PTR [ebp-0x4],eax
  419584:	or     DWORD PTR [ebp-0x4],0xf89c85be
  41958b:	mov    eax,DWORD PTR [ebp-0xc]
  41958e:	xor    eax,esi
  419590:	add    eax,edi
  419592:	push   eax
  419593:	mov    eax,DWORD PTR [ebp-0x10]
  419596:	xor    eax,esi
  419598:	add    eax,edi
  41959a:	push   eax
  41959b:	mov    eax,DWORD PTR [ebp-0x4]
  41959e:	xor    eax,esi
  4195a0:	add    eax,edi
  4195a2:	push   eax
  4195a3:	lea    eax,[ebp-0x78]
  4195a6:	push   eax
  4195a7:	push   DWORD PTR [ebp-0x2c]
  4195aa:	push   DWORD PTR [ebp-0x28]
  4195ad:	call   0x40f7af
  4195b2:	test   eax,eax
  4195b4:	je     0x4195e2
  4195ba:	lea    eax,[ebp-0x78]
  4195bd:	push   eax
  4195be:	mov    eax,DWORD PTR [ebp-0x28]
  4195c1:	xor    eax,esi
  4195c3:	add    eax,edi
  4195c5:	push   eax
  4195c6:	mov    eax,DWORD PTR [ebp-0x24]
  4195c9:	add    eax,0xaa
  4195ce:	push   eax
  4195cf:	mov    eax,DWORD PTR [ebp-0x24]
  4195d2:	mov    eax,DWORD PTR [eax+0x198]
  4195d8:	push   DWORD PTR [eax]
  4195da:	call   0x40a946
  4195df:	mov    DWORD PTR [ebp-0x14],eax
  4195e2:	mov    ecx,DWORD PTR ds:0x429516
  4195e8:	lea    eax,[ebp+0x4]
  4195eb:	jmp    0x41b96b
  4195f0:	jge    0x41963e
  4195f2:	pop    es
  4195f3:	add    BYTE PTR [edi],al
  4195f5:	sti    
  4195f6:	jge    0x4195f3
  4195f8:	jne    0x41963d
  4195fa:	pop    ecx
  4195fb:	in     al,0xb2
  4195fd:	mov    ?,WORD PTR [ebp-0xb]
  419600:	je     0x419621
  419602:	jns    0x41967e
  419604:	pop    ds
  419605:	pop    edi
  419606:	jp     0x419682
  419608:	mov    al,ds:0xa943cab2
  41960d:	les    ebx,FWORD PTR [edi-0x52c47cd7]
  419613:	and    esi,DWORD PTR [ecx-0x72095e77]
  419619:	add    edi,DWORD PTR [eax+0xb]
  41961c:	adc    ebp,DWORD PTR ds:0xf5e324af
  419622:	(bad)  [ebp+0x4194b8b9]
  419628:	adc    dl,BYTE PTR [esi+esi*2-0x1e]
  41962c:	loop   0x419676
  41962e:	pop    es
  41962f:	imul   ebp,DWORD PTR [edi+0x6bca7e13],0x4cba360b
  419639:	cmp    eax,0xccb3d6b0
  41963e:	mov    eax,ds:0x198d2bc3
  419643:	inc    eax
  419644:	adc    al,0xe
  419646:	xchg   ecx,eax
  419647:	sar    al,1
  419649:	(bad)  
  41964a:	jo     0x4196a6
  41964c:	pop    ds
  41964d:	xchg   edi,eax
  41964e:	lea    edx,[edi+ebx*8]
  419651:	inc    edx
  419652:	retf   0x33b0
  419655:	inc    edi
  419656:	cmp    eax,0xbc987218
  41965b:	pop    esp
  41965c:	out    0x6d,al
  41965e:	mov    ebx,0xadc9fc8f
  419663:	sub    DWORD PTR [ebp+0xd238be3],edx
  419669:	xor    eax,0x91dab2b7
  41966e:	dec    edx
  41966f:	clc    
  419670:	test   eax,0xacb694f
  419675:	lock and ch,BYTE PTR [edx]
  419678:	ret    
  419679:	push   es
  41967a:	mov    esp,0xb517fd61
  41967f:	stos   BYTE PTR es:[edi],al
  419680:	loope  0x419698
  419682:	mov    dh,0xdb
  419684:	lea    ebp,[esi-0x1acbd66a]
  41968a:	ror    DWORD PTR [ebx-0xe59dce3],1
  419690:	cdq    
  419691:	sahf   
  419692:	ja     0x4196ad
  419694:	mov    bh,0x77
  419696:	bound  ebx,QWORD PTR [edx]
  419698:	and    dl,0x3f
  41969b:	mov    esp,0xdcc34788
  4196a0:	das    
  4196a1:	jl     0x4196db
  4196a3:	jne    0x4196ee
  4196a5:	ds push esi
  4196a7:	aaa    
  4196a8:	push   0x8f7e0083
  4196ad:	pop    ebx
  4196ae:	sbb    BYTE PTR [ecx],0xa6
  4196b1:	lock push 0x13
  4196b4:	loop   0x419673
  4196b6:	sbb    ebx,edi
  4196b8:	cmc    
  4196b9:	dec    ecx
  4196ba:	mov    edi,DWORD PTR [edi+edx*4-0x39]
  4196be:	sbb    dh,dl
  4196c0:	adc    al,0x28
  4196c2:	or     dl,dh
  4196c4:	into   
  4196c5:	in     al,dx
  4196c6:	jl     0x4196cd
  4196c8:	mov    ds:0x9f70cb25,eax
  4196cd:	pop    es
  4196ce:	mov    dh,0xdf
  4196d0:	fmul   QWORD PTR [edx]
  4196d2:	fdivr  st(7),st
  4196d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196d5:	idiv   DWORD PTR [esi+edi*1+0x4e]
  4196d9:	fs jmp 0xdb93f262
  4196df:	dec    ebx
  4196e0:	out    0x51,al
  4196e2:	test   DWORD PTR [ecx-0x6c454430],ebp
  4196e8:	jb     0x41966a
  4196ea:	jns    0x419763
  4196ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196ed:	pop    esi
  4196ee:	jbe    0x4196e4
  4196f0:	push   0xdde8a078
  4196f5:	fist   DWORD PTR [ebx]
  4196f7:	mov    al,0x8c
  4196f9:	mov    DWORD PTR [edx],esp
  4196fb:	sahf   
  4196fc:	and    dl,BYTE PTR [edx+0x2]
  4196ff:	dec    eax
  419700:	adc    DWORD PTR [esi+0x97ca12b],ebp
  419706:	add    BYTE PTR [ecx-0xa0853d1],bl
  41970c:	outs   dx,BYTE PTR ds:[esi]
  41970d:	mov    WORD PTR [ecx+0x8],ds
  419710:	adc    al,0xe1
  419712:	scas   al,BYTE PTR es:[edi]
  419713:	rcr    BYTE PTR ds:0x4e9552,0xe3
  41971a:	lods   al,BYTE PTR ds:[esi]
  41971b:	dec    edi
  41971d:	ins    BYTE PTR es:[edi],dx
  41971e:	ret    0x344c
  419721:	call   0x18e9:0x9f489e30
  419728:	cmp    ah,dl
  41972a:	xor    DWORD PTR ds:0x755c0717,esp
  419730:	adc    al,BYTE PTR [eax+0x190994df]
  419736:	adc    DWORD PTR [ecx-0x793e0d90],edi
  41973c:	xchg   edx,eax
  41973d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41973e:	inc    edx
  41973f:	xor    eax,0x1e1827a5
  419744:	xchg   esi,eax
  419745:	aas    
  419746:	icebp  
  419747:	xchg   edi,eax
  419748:	enter  0xfd6c,0xb4
  41974c:	jle    0x4197c4
  41974e:	pop    esi
  41974f:	push   ds
  419750:	mov    ch,0x8e
  419752:	sbb    ebx,edi
  419754:	rol    DWORD PTR [edx+ebx*8-0x73e77782],cl
  41975b:	push   cs
  41975c:	cwde   
  41975d:	push   ss
  41975e:	sub    eax,0xe1e32dfc
  419763:	push   es
  419764:	enter  0x73b0,0xec
  419768:	cmp    bh,BYTE PTR [edx-0x34]
  41976b:	and    ebx,DWORD PTR [eax+0x2eeb4a4d]
  419771:	xor    eax,0xb66b51a8
  419776:	int    0x72
  419778:	pinsrw mm5,WORD PTR [ebx+ecx*4-0x69],0x15
  41977e:	call   0xeb76:0xc31abf92
  419785:	leave  
  419786:	sbb    BYTE PTR [edx-0x7],bl
  419789:	icebp  
  41978a:	pop    ecx
  41978b:	cdq    
  41978c:	mov    esi,0xf18c60e6
  419791:	jb     0x419722
  419793:	inc    ecx
  419794:	out    0xf,al
  419796:	rol    DWORD PTR [edi-0xf],0xbf
  41979a:	adc    ebx,DWORD PTR [ecx-0x6e]
  41979d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41979e:	sahf   
  41979f:	xchg   esi,eax
  4197a0:	and    al,0x31
  4197a2:	pushf  
  4197a3:	mov    al,0xd6
  4197a5:	mov    ebp,0xab8f89ab
  4197aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197ab:	popa   
  4197ac:	fldcw  WORD PTR [ebx+0x8144bd8]
  4197b2:	dec    eax
  4197b3:	fnstenv [edi-0x18]
  4197b6:	std    
  4197b7:	enter  0x5256,0x4
  4197bb:	jecxz  0x419788
  4197bd:	mov    ds,ecx
  4197bf:	inc    DWORD PTR [eax+0x73]
  4197c2:	mov    ecx,0xc058f3a2
  4197c7:	jmp    DWORD PTR [eax-0x74]
  4197ca:	daa    
  4197cb:	sbb    al,0xd
  4197cd:	outs   dx,BYTE PTR ds:[esi]
  4197ce:	xor    DWORD PTR [edi],edx
  4197d0:	es test eax,0xef75ecb9
  4197d6:	es das 
  4197d8:	(bad)  
  4197da:	icebp  
  4197db:	mov    dl,0x1a
  4197dd:	mov    bh,0x27
  4197df:	mov    esi,0xa9ad92b9
  4197e4:	sub    BYTE PTR [edi],bl
  4197e6:	cmp    BYTE PTR [ecx],bl
  4197e8:	pop    ebx
  4197e9:	rcl    cl,0x3f
  4197ec:	push   edx
  4197ed:	mov    ds:0x607efbd5,eax
  4197f2:	test   al,0xe8
  4197f4:	push   es
  4197f5:	or     eax,0x73c7128b
  4197fa:	xor    eax,0xba66d446
  4197ff:	pop    ebx
  419800:	(bad)  
  419801:	dec    esi
  419802:	and    al,0xd3
  419804:	sbb    bl,BYTE PTR [ebp+0x2c0496e7]
  41980a:	test   DWORD PTR cs:[esp+ecx*2],edx
  41980e:	cmc    
  41980f:	clc    
  419810:	ret    
  419811:	pop    ebp
  419812:	inc    eax
  419813:	das    
  419814:	pop    edx
  419815:	fs xchg esi,eax
  419817:	(bad)  
  419818:	mov    esp,0x5ced1078
  41981d:	and    edi,DWORD PTR [edx]
  41981f:	ss leave 
  419821:	ret    
  419822:	pop    es
  419823:	scas   al,BYTE PTR es:[edi]
  419824:	xor    eax,0x30ee344d
  419829:	push   cs
  41982a:	stc    
  41982b:	out    dx,al
  41982c:	repnz mov BYTE PTR [eax+esi*4+0x3c],0xe4
  419832:	lea    esi,[eax+ebp*4]
  419835:	in     al,0xf9
  419837:	mov    al,0xfd
  419839:	rcl    DWORD PTR [bx+di-0x24],1
  41983d:	add    eax,0x7195aec1
  419842:	push   ds
  419843:	push   0x28
  419845:	sbb    edi,ebx
  419847:	(bad)  
  419848:	dec    dl
  41984a:	push   cs
  41984b:	sti    
  41984c:	call   0x99006a03
  419851:	cld    
  419852:	cs mov dh,0xcf
  419855:	sbb    bh,bh
  419857:	jl     0x419867
  419859:	push   ds
  41985a:	cld    
  41985b:	fsubr  DWORD PTR [ebp-0x3a7b3cd7]
  419861:	fisubr DWORD PTR [ebx]
  419863:	and    eax,0x5754a90f
  419868:	cmp    al,0x82
  41986a:	enter  0x85b0,0xc6
  41986e:	out    0xed,eax
  419870:	cdq    
  419871:	xchg   esp,eax
  419872:	mov    dl,0x50
  419874:	retf   0x4c16
  419877:	xchg   ebp,eax
  419878:	sub    ecx,DWORD PTR [eax]
  41987a:	fcomp  DWORD PTR [eax-0x49ec9a26]
  419880:	les    edx,FWORD PTR [eax-0x12]
  419883:	push   ebx
  419884:	mov    ds:0xd9b31b34,al
  419889:	aas    
  41988a:	push   cs
  41988b:	xor    DWORD PTR [edx-0x6d],ebx
  41988e:	call   0xa317:0x85926152
  419895:	cmp    BYTE PTR [esi-0x43b3c4d9],ah
  41989b:	out    0x9,al
  41989d:	mov    bl,BYTE PTR [edx-0x23]
  4198a0:	hlt    
  4198a1:	lds    esp,FWORD PTR [edx-0x59]
  4198a4:	xor    DWORD PTR [edi+edi*1-0x4c],edi
  4198a8:	imul   ebp,DWORD PTR [edi+0x29efd9d],0x2a716eda
  4198b2:	or     cl,BYTE PTR [edi]
  4198b4:	dec    edx
  4198b5:	dec    ecx
  4198b6:	mov    esp,0x470fac5a
  4198bb:	and    edi,DWORD PTR [esp+ebx*2-0x588b850e]
  4198c2:	mov    edi,0x2d2cfb0
  4198c7:	xchg   ebx,eax
  4198c8:	out    dx,al
  4198c9:	cmc    
  4198ca:	imul   esi,DWORD PTR [edi],0xffffffbf
  4198cd:	lods   eax,DWORD PTR ds:[esi]
  4198cf:	cmp    dh,al
  4198d1:	mov    WORD PTR [ebx-0x39],?
  4198d4:	mov    edx,0x7be1cf71
  4198d9:	xchg   DWORD PTR [edx+0x4b175fbc],ecx
  4198df:	int    0xf4
  4198e1:	int    0xb6
  4198e3:	mov    ecx,0xbdb49972
  4198e8:	push   cs
  4198e9:	faddp  st(0),st
  4198eb:	sub    ecx,ebp
  4198ed:	loop   0x419929
  4198ef:	shl    DWORD PTR [ebx-0x419328ec],1
  4198f5:	mov    bl,0x4c
  4198f7:	inc    DWORD PTR [edx]
  4198f9:	jp     0x4198dc
  4198fb:	hlt    
  4198fc:	mov    ch,0x8e
  4198fe:	jns    0x419899
  419900:	jno    0x419943
  419902:	aam    0x78
  419904:	or     DWORD PTR [ebp-0x67001ec7],ebp
  41990a:	xchg   edi,edx
  41990c:	fisub  DWORD PTR ds:0xd4da1423
  419912:	xor    dh,BYTE PTR [eax-0x18802a7]
  419918:	ins    DWORD PTR es:[edi],dx
  419919:	mov    esi,0x4f485cc6
  41991e:	cmp    bl,dh
  419920:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419921:	leave  
  419922:	jne    0x4198ef
  419924:	or     eax,0xc3309d4b
  419929:	sbb    eax,DWORD PTR [edx*1+0x434af9db]
  419930:	out    0x6a,eax
  419932:	fiadd  DWORD PTR [edi]
  419934:	aaa    
  419935:	push   cs
  419936:	adc    eax,0x99e0f1ac
  41993b:	das    
  41993c:	in     al,0xaf
  41993e:	and    eax,0xbbfa1b5c
  419943:	leave  
  419944:	test   al,0xbe
  419946:	xor    edx,DWORD PTR [edx]
  419948:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419949:	rol    DWORD PTR [edx],1
  41994b:	push   edi
  41994c:	cmc    
  41994d:	shr    ch,cl
  41994f:	ss pop ebx
  419951:	sub    al,0xb3
  419953:	stos   BYTE PTR es:[edi],al
  419954:	mov    bh,0xce
  419956:	sti    
  419957:	push   edx
  419958:	dec    ebp
  419959:	adc    DWORD PTR [di-0x1788],edi
  41995e:	ins    BYTE PTR es:[edi],dx
  41995f:	sbb    eax,0xa8facef9
  419964:	ret    
  419965:	jmp    0x419938
  419967:	fcomp  DWORD PTR ds:0x1a7ddf67
  41996d:	jecxz  0x419944
  41996f:	xchg   ebp,eax
  419970:	cmp    al,0x52
  419972:	ss xchg esp,eax
  419974:	sub    DWORD PTR [edi],0x38
  419977:	mov    DWORD PTR [ebp-0x18],esp
  41997a:	jecxz  0x4199d1
  41997c:	cmp    DWORD PTR [edx],0x55
  41997f:	fistp  WORD PTR [ebp-0x7e]
  419982:	lods   eax,DWORD PTR ds:[esi]
  419983:	test   bl,0x4c
  419986:	test   eax,0x5ed47163
  41998b:	mov    al,ds:0xa60a4971
  419990:	repnz imul ebx,DWORD PTR [ecx+0x71],0x18
  419995:	push   ecx
  419996:	push   ecx
  419997:	aas    
  419998:	xchg   ebx,eax
  419999:	push   ebx
  41999a:	jbe    0x419942
  41999c:	daa    
  41999d:	push   es
  41999e:	loopne 0x419927
  4199a0:	out    dx,eax
  4199a1:	in     al,dx
  4199a2:	xchg   BYTE PTR [edx+0x484dffb4],ah
  4199a8:	cmp    al,BYTE PTR [ecx]
  4199aa:	call   0x9d87:0xfe5ecf2f
  4199b1:	dec    edi
  4199b2:	mov    esp,0x2164da83
  4199b7:	xor    BYTE PTR [esi+0x244d9ac2],cl
  4199bd:	dec    esp
  4199be:	jge    0x41996c
  4199c0:	fadd   QWORD PTR ds:0xb9e1b428
  4199c6:	push   edx
  4199c7:	or     dh,cl
  4199c9:	xor    esp,DWORD PTR [esp+edx*1]
  4199cc:	jbe    0x4199fd
  4199ce:	pop    edx
  4199cf:	add    BYTE PTR ds:0x2d33dac7,dl
  4199d5:	mov    WORD PTR [ebp-0x7],gs
  4199d8:	add    BYTE PTR [ecx-0x3d],0x75
  4199dc:	(bad)  
  4199dd:	mov    ds:0x857f5831,al
  4199e2:	popa   
  4199e3:	ret    0x300
  4199e6:	xlat   BYTE PTR ds:[ebx]
  4199e7:	mov    bh,0x36
  4199e9:	rcl    BYTE PTR [esi],cl
  4199eb:	and    edx,DWORD PTR [esi]
  4199ed:	sbb    esp,DWORD PTR [edx+0x356b12d9]
  4199f3:	xor    DWORD PTR ds:0x94b4c235,0x21
  4199fa:	pop    ebx
  4199fb:	push   0x65794eb4
  419a00:	xor    DWORD PTR [edx+0x69],ebx
  419a03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a04:	pop    ss
  419a05:	mov    bh,BYTE PTR [ecx]
  419a07:	push   ebx
  419a08:	jns    0x4199fe
  419a0a:	out    dx,al
  419a0b:	enter  0x17f8,0xb
  419a0f:	push   ss
  419a10:	and    ebp,ecx
  419a12:	or     BYTE PTR [edx],bl
  419a14:	xor    DWORD PTR [ecx-0x71],edi
  419a17:	cwde   
  419a18:	out    0xa,eax
  419a1a:	add    BYTE PTR [edx+0x2d],cl
  419a1d:	rcr    DWORD PTR [ebx],1
  419a1f:	jae    0x4199b0
  419a21:	xor    bh,BYTE PTR [ebp-0x64]
  419a24:	enter  0x446c,0x75
  419a28:	pop    es
  419a29:	iret   
  419a2a:	push   0xfffffff3
  419a2c:	pop    eax
  419a2d:	add    ebx,ebp
  419a2f:	es cwde 
  419a31:	call   DWORD PTR [ebx+0x33d2f4b5]
  419a37:	sub    DWORD PTR [edx],0xffffffe6
  419a3a:	int    0x72
  419a3c:	sahf   
  419a3d:	mov    al,ds:0xe13d1049
  419a42:	rcr    DWORD PTR [edx-0x2576245e],cl
  419a48:	mov    eax,0x1431514f
  419a4d:	and    dl,ch
  419a4f:	cmp    DWORD PTR [ecx-0x31],ebx
  419a52:	cmp    ecx,DWORD PTR [ebp+0x3f]
  419a55:	push   esp
  419a56:	mov    ds:0x81febc78,eax
  419a5b:	dec    edi
  419a5c:	stos   DWORD PTR es:[edi],eax
  419a5d:	inc    edx
  419a5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a5f:	iret   
  419a60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a61:	out    0x84,al
  419a63:	ja     0x419a7c
  419a65:	jle    0x419aa1
  419a67:	pop    ecx
  419a68:	pop    bp
  419a6a:	jno    0x419a0f
  419a6c:	sub    eax,0xb37e75f2
  419a71:	hlt    
  419a72:	xchg   edi,eax
  419a73:	xlat   BYTE PTR ds:[ebx]
  419a74:	push   esi
  419a75:	jmp    0xf5bf4cf5
  419a7a:	and    al,0x5b
  419a7c:	sub    edx,ebx
  419a7e:	fistp  DWORD PTR [ebx]
  419a80:	(bad)  
  419a81:	out    0x40,eax
  419a83:	and    edx,esi
  419a85:	repnz aam 0x76
  419a88:	jmp    0xe7fc6b23
  419a8d:	or     esi,DWORD PTR [ecx-0x426cb4ab]
  419a93:	xchg   ecx,eax
  419a94:	cdq    
  419a95:	repnz xor dl,BYTE PTR [ebp+0x23]
  419a99:	fs dec edi
  419a9b:	sbb    al,0x96
  419a9d:	dec    esi
  419a9e:	mov    edi,edx
  419aa0:	xor    BYTE PTR [ebx+0x7d],cl
  419aa3:	and    al,0xf8
  419aa5:	mov    DWORD PTR [esi+0x22],edx
  419aa8:	test   al,0xd5
  419aaa:	mov    edi,0xe2124169
  419aaf:	iret   
  419ab0:	pop    ebx
  419ab1:	out    dx,eax
  419ab2:	mov    edi,DWORD PTR [esi-0x37fd9e1c]
  419ab8:	rol    DWORD PTR cs:[eax+esi*4-0x64],0xb4
  419abe:	pop    DWORD PTR [esi]
  419ac0:	test   eax,0xc8675d8d
  419ac5:	mov    cl,0xd5
  419ac7:	cdq    
  419ac8:	xor    ebx,0xffffffe2
  419acb:	sbb    al,0xad
  419ace:	sti    
  419acf:	push   esp
  419ad0:	ins    DWORD PTR es:[edi],dx
  419ad1:	fsub   DWORD PTR [edi]
  419ad3:	xor    DWORD PTR [ecx+0x10702082],edi
  419ad9:	pop    ebp
  419ada:	jb     0x419a7f
  419adc:	outs   dx,DWORD PTR ds:[esi]
  419add:	sub    DWORD PTR [esi],ebx
  419adf:	and    BYTE PTR [edi+0x24],bh
  419ae2:	cmp    al,0x38
  419ae4:	inc    eax
  419ae5:	pop    ebp
  419ae6:	xor    al,0x76
  419ae8:	push   es
  419ae9:	mov    DWORD PTR [edi+0x34717cfe],edx
  419aef:	and    al,ah
  419af1:	push   ecx
  419af2:	(bad)  
  419af3:	mov    ecx,0xfbc4f1ee
  419af8:	xor    dh,BYTE PTR [edx+0x16eeb1e0]
  419afe:	ds (bad) 
  419b01:	imul   ecx,ebp,0xe7614eaf
  419b07:	sahf   
  419b08:	jo     0x419ae3
  419b0a:	enter  0xb9b6,0xcf
  419b0e:	or     bh,BYTE PTR [ecx-0x6aacba48]
  419b14:	repz pop edx
  419b16:	jmp    0xa11e7125
  419b1b:	inc    ebp
  419b1c:	inc    edi
  419b1d:	pop    esi
  419b1e:	push   esp
  419b1f:	cmp    DWORD PTR [ecx+0x289fccdc],0x3
  419b26:	jbe    0x419ae9
  419b28:	xor    al,0x44
  419b2a:	stc    
  419b2b:	xor    al,0x64
  419b2d:	jge    0x419b26
  419b2f:	and    ah,bh
  419b31:	mov    ebp,0xb29d1e2a
  419b36:	push   esp
  419b37:	jmp    0x6eb9:0x18f65e8f
  419b3e:	in     eax,0xb5
  419b40:	fwait
  419b41:	add    eax,0x110a797f
  419b46:	xor    BYTE PTR [edi+eax*8],0x2a
  419b4a:	call   0x19de:0x1ff24783
  419b51:	fwait
  419b52:	cmp    al,0x8a
  419b54:	stc    
  419b55:	and    DWORD PTR [edx+0x7bd66359],ebp
  419b5b:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  419b5d:	push   es
  419b5e:	pop    ecx
  419b5f:	jmp    0xd2ceda78
  419b64:	mov    ecx,0xfa7a7d7
  419b69:	xor    DWORD PTR [ecx-0x1b],ebp
  419b6c:	jnp    0x419b11
  419b6e:	(bad)  
  419b6f:	mov    ecx,0x40250dab
  419b74:	mov    cl,0xb5
  419b76:	cmp    eax,0x1973b861
  419b7b:	pop    es
  419b7c:	mov    BYTE PTR [ecx],al
  419b7e:	adc    BYTE PTR [edx+0x5817fbcd],dl
  419b84:	xchg   edi,eax
  419b85:	shr    BYTE PTR [ebx-0x13b0c096],1
  419b8b:	pop    esp
  419b8c:	bound  ecx,QWORD PTR [ecx]
  419b8e:	ss push ecx
  419b90:	cld    
  419b91:	fadd   DWORD PTR [ebp+0x7e]
  419b94:	adc    eax,0x11dee1de
  419b99:	sbb    BYTE PTR [eax+0x1723eb01],0x1c
  419ba0:	lods   al,BYTE PTR ds:[esi]
  419ba1:	mov    al,0x62
  419ba3:	fisttp DWORD PTR [ebx-0x617c9bcc]
  419ba9:	stos   DWORD PTR es:[edi],eax
  419baa:	dec    ebx
  419bab:	or     eax,0xa9dbd788
  419bb0:	jmp    0x419c13
  419bb2:	xchg   esp,eax
  419bb3:	inc    ecx
  419bb4:	push   ss
  419bb5:	sbb    bh,BYTE PTR [esi+0x6947508c]
  419bbb:	js     0x419bfd
  419bbd:	ret    0xb42
  419bc0:	sbb    al,0xb6
  419bc2:	cs sbb ebx,ebx
  419bc5:	push   ds
  419bc6:	(bad)  
  419bc7:	mov    ebp,0xb0a95a37
  419bcc:	pop    edx
  419bcd:	xor    bh,BYTE PTR ds:0x9be64108
  419bd3:	jp     0x419bfb
  419bd5:	sbb    eax,0xcdefab0b
  419bda:	arpl   dx,bp
  419bdc:	pop    ebp
  419bdd:	push   ds
  419bde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bdf:	cmp    DWORD PTR [ebx+0x13],0x2beb195f
  419be6:	mov    esp,0x24ee897d
  419beb:	pusha  
  419bec:	mov    gs,WORD PTR [edi]
  419bee:	dec    sp
  419bf0:	sbb    al,0xb6
  419bf2:	les    esp,FWORD PTR [ecx+0x48b0e9ae]
  419bf8:	xor    ebp,ecx
  419bfa:	imul   esi,DWORD PTR [edi],0x547df65d
  419c00:	mov    bl,0xd1
  419c02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c03:	cld    
  419c04:	rcl    DWORD PTR [ecx+0x2ab742e0],cl
  419c0a:	arpl   WORD PTR [eax+ebp*4-0x54],ax
  419c0e:	repz sbb edx,ebp
  419c11:	xor    al,0x19
  419c13:	cmp    eax,eax
  419c15:	lods   al,BYTE PTR ds:[esi]
  419c16:	pop    ebp
  419c17:	out    0x98,al
  419c19:	push   esp
  419c1a:	call   0xc9cf:0x9fbc80ce
  419c21:	ss jle 0x419c56
  419c24:	fs aas 
  419c26:	sub    BYTE PTR [esi+0x7c6d63a8],ah
  419c2c:	int3   
  419c2d:	sbb    ebp,edi
  419c2f:	adc    DWORD PTR [edx-0x161c256b],0xeeb473ca
  419c39:	add    BYTE PTR [eax-0x24],dh
  419c3c:	jp     0x419c20
  419c3e:	fnsave [ebx+0x65]
  419c41:	cli    
  419c42:	rcr    DWORD PTR [ecx+esi*1-0x6d],1
  419c46:	mov    ebp,0xeee07539
  419c4b:	cmp    al,0xef
  419c4d:	shl    DWORD PTR [ebx-0x5f5cd37f],cl
  419c53:	js     0x419c8f
  419c55:	jecxz  0x419bf8
  419c57:	sbb    DWORD PTR [edx],eax
  419c59:	shr    bl,1
  419c5b:	sbb    ebx,ebx
  419c5d:	cld    
  419c5e:	out    dx,al
  419c5f:	data16 repnz mov es,WORD PTR [esi]
  419c63:	popa   
  419c64:	sbb    cl,bh
  419c66:	enter  0xad66,0x16
  419c6a:	push   ebx
  419c6b:	cmp    edi,edx
  419c6d:	sbb    al,0x4d
  419c6f:	sbb    DWORD PTR [edx],ebx
  419c71:	or     esp,DWORD PTR [edi]
  419c73:	out    0xf3,eax
  419c75:	jg     0x419cd9
  419c77:	add    dl,0x7f
  419c7a:	push   ebx
  419c7b:	mov    ds:0x8f37fb35,eax
  419c80:	sbb    ah,BYTE PTR [edi+0x29]
  419c83:	call   0xb99c:0x24a2a74c
  419c8a:	cs xchg edi,eax
  419c8c:	and    eax,0x279dd3b8
  419c91:	ins    BYTE PTR es:[edi],dx
  419c92:	je     0x419c66
  419c94:	lds    ebx,FWORD PTR [edx+0x3a70e9d0]
  419c9a:	fimul  DWORD PTR [edi+esi*4+0x78]
  419c9e:	or     DWORD PTR [ecx],0xbafc1d2f
  419ca4:	push   eax
  419ca5:	sbb    dh,BYTE PTR [eax+0x1d79fa4b]
  419cab:	mov    esi,ebx
  419cad:	(bad)  
  419cae:	stos   BYTE PTR es:[edi],al
  419caf:	xor    DWORD PTR [edi+0x22],esi
  419cb2:	push   eax
  419cb3:	sbb    bl,BYTE PTR [eax]
  419cb5:	imul   ebp,DWORD PTR [esi],0xffffff9c
  419cb8:	adc    al,0x82
  419cba:	mov    edi,edx
  419cbc:	mov    esi,0x3b1a68ea
  419cc1:	sub    eax,0x8a1c36b0
  419cc6:	les    esi,FWORD PTR [edi+0xe]
  419cc9:	cwde   
  419cca:	popa   
  419ccb:	mov    esi,0xd2049cf5
  419cd0:	call   0x26b4:0x816d4fc8
  419cd7:	push   es
  419cd8:	dec    esp
  419cd9:	mov    BYTE PTR [ecx+esi*8+0x753d014a],dl
  419ce0:	push   ss
  419ce1:	mov    ebp,0x8712e214
  419ce6:	or     eax,0x318fa1aa
  419ceb:	in     eax,0x4a
  419ced:	jnp    0x419d4e
  419cef:	and    esi,DWORD PTR [ebx]
  419cf1:	imul   eax,DWORD PTR [ecx-0x44],0x83138fd
  419cf8:	mov    dl,0x96
  419cfa:	mov    al,ds:0xfa8bb9f0
  419cff:	sbb    ch,BYTE PTR [edx-0x44a5257d]
  419d05:	sub    edx,DWORD PTR [esp+ecx*1-0x40e28b61]
  419d0c:	fs repnz ins BYTE PTR es:[edi],dx
  419d0f:	(bad)  
  419d10:	mov    WORD PTR [ebp-0x5c],gs
  419d13:	push   ebp
  419d14:	inc    edi
  419d15:	push   es
  419d16:	test   ah,dh
  419d18:	add    eax,0x83ec357
  419d1d:	jg     0x419d87
  419d1f:	inc    edx
  419d20:	shl    DWORD PTR [edx+0xb],0x64
  419d24:	push   0x39453fc6
  419d29:	retf   0x5cd
  419d2c:	fisttp QWORD PTR [edi-0x4a]
  419d2f:	add    DWORD PTR [esi+0x34],ebp
  419d32:	test   BYTE PTR [ebx],bh
  419d34:	outs   dx,DWORD PTR ds:[esi]
  419d35:	sbb    eax,0xcfd61c36
  419d3a:	ret    
  419d3b:	ror    DWORD PTR [ebx],0x23
  419d3e:	popa   
  419d3f:	rcr    DWORD PTR [ebp+0x4a],1
  419d42:	fiadd  DWORD PTR [esi+esi*4+0x7b]
  419d46:	mov    ebx,?
  419d48:	in     al,0x97
  419d4a:	push   cs
  419d4b:	mov    ?,edi
  419d4d:	(bad)  
  419d4e:	aam    0x1d
  419d50:	jbe    0x419d8c
  419d52:	xor    eax,0x72bf4a25
  419d57:	test   DWORD PTR [edi-0x69b7200e],edi
  419d5d:	pop    eax
  419d5e:	adc    eax,0xed00571
  419d63:	dec    esi
  419d64:	cmp    eax,0x2d5c3262
  419d69:	cmp    DWORD PTR [eax],edi
  419d6b:	xor    BYTE PTR [eax],dh
  419d6d:	add    eax,ebx
  419d6f:	mov    al,ah
  419d71:	ret    
  419d72:	pop    ecx
  419d73:	(bad)  
  419d74:	in     al,dx
  419d75:	xchg   ebx,eax
  419d76:	push   es
  419d77:	jno    0x419d60
  419d79:	push   ecx
  419d7a:	xchg   esp,eax
  419d7b:	bound  ecx,QWORD PTR fs:[edi-0x6d]
  419d7f:	push   eax
  419d80:	hlt    
  419d81:	sub    al,0xde
  419d83:	pop    es
  419d84:	mov    esi,0x2cdd502a
  419d89:	mov    edx,0x5d695fd1
  419d8e:	lock clc 
  419d90:	fs xchg edx,eax
  419d92:	xchg   esi,eax
  419d93:	ret    0xb48a
  419d96:	test   al,0x72
  419d98:	imul   edx,DWORD PTR [ebp-0x3b],0x3825e5f5
  419d9f:	aad    0x56
  419da1:	mov    al,ds:0xa3b74d0
  419da6:	or     ebp,DWORD PTR [edi-0x6207e15e]
  419dac:	push   edx
  419dad:	push   0x50
  419daf:	or     esi,esi
  419db1:	cmp    al,0x83
  419db3:	leave  
  419db4:	push   0xd8ba582f
  419db9:	rcr    DWORD PTR [edi-0x7c74f75f],cl
  419dbf:	cmp    BYTE PTR [ecx-0x61],0x7e
  419dc3:	imul   edi,esi,0xffffffb6
  419dc6:	mov    eax,ds:0xb8dc82e6
  419dcb:	mov    ah,0xcb
  419dcd:	(bad)  
  419dcf:	or     al,0x37
  419dd1:	stos   BYTE PTR es:[edi],al
  419dd2:	xlat   BYTE PTR ds:[ebx]
  419dd3:	outs   dx,BYTE PTR ds:[esi]
  419dd4:	xchg   edi,eax
  419dd5:	mov    ebp,0x4a53fe82
  419dda:	fstp   TBYTE PTR [eax]
  419ddc:	test   al,0xb8
  419dde:	ror    BYTE PTR [edx+0x31],cl
  419de1:	enter  0x782d,0xe6
  419de5:	xor    al,0x38
  419de7:	cmp    al,0x9e
  419de9:	out    dx,eax
  419dea:	adc    dh,BYTE PTR [ebp+0x69aa0cb0]
  419df0:	push   ebx
  419df1:	loop   0x419e2a
  419df3:	jp     0x419dc7
  419df5:	scas   eax,DWORD PTR es:[edi]
  419df6:	push   0x3e71cce6
  419dfb:	pop    esp
  419dfc:	int    0x63
  419dfe:	push   ss
  419dff:	into   
  419e00:	fmul   QWORD PTR [edi+0xd9e084]
  419e06:	(bad)  
  419e07:	inc    ebx
  419e08:	pop    esi
  419e09:	sub    DWORD PTR [ebx+ebp*2-0x20],ecx
  419e0d:	gs stos DWORD PTR es:[edi],eax
  419e0f:	mov    bh,0x8
  419e11:	stc    
  419e12:	or     ah,dh
  419e14:	xchg   edi,eax
  419e15:	or     dl,al
  419e17:	sbb    DWORD PTR [esi-0x3d],ebp
  419e1a:	std    
  419e1b:	test   DWORD PTR [ecx-0xe],0xf62c90ef
  419e22:	clc    
  419e23:	shl    DWORD PTR [edi+0x73],0x4d
  419e27:	pop    edi
  419e28:	sub    edi,ebp
  419e2a:	adc    dl,ah
  419e2c:	xor    eax,edi
  419e2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e2f:	fdivr  st,st(2)
  419e31:	aad    0x96
  419e33:	sahf   
  419e34:	sbb    al,0x6a
  419e36:	gs jmp 0x7afa:0x4da40221
  419e3e:	fldenv [ebx-0x363bc43a]
  419e44:	(bad)  
  419e45:	gs jb  0x419e64
  419e48:	imul   edi,edi,0xffffff90
  419e4b:	xchg   esp,eax
  419e4c:	icebp  
  419e4d:	dec    edx
  419e4e:	mov    edi,0xcee8d1d9
  419e53:	mov    eax,DWORD PTR [ecx-0x6a]
  419e56:	pop    ebx
  419e57:	cmp    BYTE PTR [edi+0x5d],dh
  419e5a:	xchg   al,dh
  419e5c:	pushf  
  419e5d:	mov    eax,ds:0x8403bdfa
  419e62:	pop    ss
  419e63:	ja     0x419e04
  419e65:	adc    eax,0xa0a44569
  419e6a:	jbe    0x419eb5
  419e6c:	jbe    0x419ed4
  419e6e:	mov    DWORD PTR [edx+0x588e433e],ebx
  419e74:	ins    BYTE PTR es:[edi],dx
  419e75:	jecxz  0x419eb5
  419e77:	sub    ebp,DWORD PTR [eax-0x20]
  419e7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e7b:	into   
  419e7c:	out    dx,al
  419e7d:	or     BYTE PTR [ebp+ebx*2-0x39d4bc1c],al
  419e84:	scas   eax,DWORD PTR es:[edi]
  419e85:	ror    BYTE PTR [esi+0x54],0xbb
  419e89:	xor    dh,BYTE PTR [edx-0x168dfd5f]
  419e8f:	sti    
  419e90:	fidiv  WORD PTR [eax-0x38]
  419e93:	jge    0x419e3e
  419e95:	call   0xbea7:0x9625ff57
  419e9c:	lods   al,BYTE PTR ds:[esi]
  419e9d:	retf   
  419e9e:	adc    eax,0xad408aa2
  419ea3:	push   cs
  419ea4:	xor    ah,al
  419ea6:	sbb    BYTE PTR [edx+0x27],bl
  419ea9:	adc    cl,al
  419eab:	test   ebp,0xd5a7b368
  419eb1:	fwait
  419eb2:	shr    BYTE PTR [ecx-0xb],0xde
  419eb6:	repnz push cs
  419eb8:	push   DWORD PTR [edi+0x7d8bd55f]
  419ebe:	or     DWORD PTR ds:0xf2b4cb2,edi
  419ec4:	mov    dh,0x3a
  419ec6:	std    
  419ec7:	clc    
  419ec8:	or     al,0x5e
  419eca:	dec    edx
  419ecb:	lds    edx,FWORD PTR [edi]
  419ecd:	mov    BYTE PTR [ebx+eiz*8+0x4fde4de6],cl
  419ed4:	addr16 xchg edx,eax
  419ed6:	xchg   BYTE PTR [ebx+eax*2],dh
  419ed9:	xchg   ecx,eax
  419eda:	mov    ecx,ds
  419edc:	test   BYTE PTR cs:[edi],ch
  419edf:	imul   ebx,DWORD PTR [ebx-0x4878ad0f],0x7816f3bf
  419ee9:	dec    edi
  419eea:	mov    ch,0xaa
  419eec:	pop    ebx
  419eed:	gs fdecstp 
  419ef0:	sub    ebx,DWORD PTR [ebp+0x48]
  419ef3:	aad    0x3a
  419ef5:	pop    ss
  419ef6:	or     eax,0x307c5a11
  419efb:	and    esi,DWORD PTR [esi+0x2c]
  419efe:	dec    edx
  419eff:	add    DWORD PTR [edi-0x2abf36c5],edi
  419f05:	lods   eax,DWORD PTR ds:[esi]
  419f06:	mov    al,ds:0xd8589d06
  419f0b:	push   0x952c4373
  419f10:	nop
  419f11:	sub    dh,BYTE PTR [edi+edi*8+0x3975b8f0]
  419f18:	pop    ss
  419f19:	or     eax,0xe64165f6
  419f1e:	pusha  
  419f1f:	sahf   
  419f20:	cs push eax
  419f22:	popf   
  419f23:	push   ds
  419f24:	aas    
  419f25:	pop    esi
  419f26:	mov    bl,0x37
  419f28:	iret   
  419f29:	repz jmp FWORD PTR [edi]
  419f2c:	retf   
  419f2d:	test   eax,0x3f2fe741
  419f32:	shr    BYTE PTR [ecx-0x56],cl
  419f35:	repz sti 
  419f37:	in     eax,dx
  419f38:	mov    esi,0x9c708fdd
  419f3d:	push   eax
  419f3e:	mov    es,WORD PTR [esi+0x70]
  419f41:	jmp    0xd70fbc18
  419f46:	dec    ebx
  419f47:	fdivr  QWORD PTR [esi]
  419f49:	push   eax
  419f4a:	adc    edx,DWORD PTR [edi]
  419f4c:	mov    ebx,0x5a4eae8a
  419f51:	ds stc 
  419f53:	lock rcr al,0xb9
  419f57:	add    DWORD PTR [edx+0x64],ebp
  419f5a:	outs   dx,BYTE PTR ds:[esi]
  419f5b:	dec    esi
  419f5c:	stc    
  419f5d:	jle    0x419f76
  419f5f:	cmc    
  419f60:	adc    bl,BYTE PTR [ecx-0xd]
  419f63:	mov    ebx,0xc04ccaab
  419f68:	jbe    0x419f43
  419f6a:	mov    ch,0xba
  419f6c:	mov    ds:0xd50f3d1a,al
  419f71:	cmp    al,0x11
  419f73:	push   ecx
  419f74:	out    0x17,eax
  419f76:	xchg   esi,eax
  419f77:	inc    ecx
  419f78:	and    eax,0x3750ae07
  419f7d:	fisubr DWORD PTR [ecx+0x61]
  419f80:	gs pop ecx
  419f82:	inc    ebx
  419f83:	ss or  al,0xaa
  419f86:	dec    ecx
  419f87:	jb     0x419f2d
  419f89:	and    DWORD PTR [ebp+0x4a237076],ebx
  419f8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f90:	push   edi
  419f91:	sub    al,0xc9
  419f93:	mov    eax,0xe97fc890
  419f98:	psubsw mm1,mm7
  419f9b:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  419f9d:	daa    
  419f9e:	in     al,dx
  419f9f:	mov    esi,0xb2f09a83
  419fa4:	xchg   edi,eax
  419fa5:	inc    esp
  419fa6:	add    eax,0xf968b424
  419fab:	xchg   ebx,eax
  419fac:	add    dh,dl
  419fae:	scas   eax,DWORD PTR es:[edi]
  419faf:	hlt    
  419fb0:	and    BYTE PTR [esi+0x142b324d],ah
  419fb6:	mov    ds:0x60b04ad5,al
  419fbb:	add    DWORD PTR ds:0xd9eb0612,ebp
  419fc1:	inc    ecx
  419fc2:	sbb    ah,bh
  419fc4:	daa    
  419fc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fc6:	add    bl,BYTE PTR [edi]
  419fc8:	hlt    
  419fc9:	out    dx,al
  419fca:	in     eax,0x75
  419fcc:	fisubr WORD PTR [esi-0x7d]
  419fcf:	fs test al,0xbb
  419fd2:	int3   
  419fd3:	push   cs
  419fd4:	inc    eax
  419fd5:	xor    DWORD PTR [esi+0x7a],ebx
  419fd8:	loopne 0x419ff2
  419fda:	retf   0xa5cf
  419fdd:	mov    ebp,0x2ca7b175
  419fe2:	in     al,dx
  419fe3:	icebp  
  419fe4:	pop    ds
  419fe5:	(bad)  
  419fe6:	jnp    0x41a04f
  419fe8:	not    DWORD PTR [ebx]
  419fea:	push   esp
  419feb:	add    BYTE PTR [ebx-0xa],bl
  419fee:	add    eax,0xb3f3348d
  419ff3:	xchg   dh,dl
  419ff5:	and    DWORD PTR [ebp+eax*2+0x26],edi
  419ff9:	xor    BYTE PTR [ebx-0x77b2974a],dh
  419fff:	test   al,0xf4
  41a001:	add    BYTE PTR [eax-0x214d2708],ch
  41a007:	retf   0x7a94
  41a00a:	jns    0x419fb9
  41a00c:	jb     0x419f9a
  41a00e:	xchg   ah,bl
  41a010:	into   
  41a011:	test   bh,ch
  41a013:	adc    edx,DWORD PTR [ebx+0x7dcf58e4]
  41a019:	std    
  41a01a:	stos   DWORD PTR es:[edi],eax
  41a01b:	sbb    edx,DWORD PTR [ebp-0x4f]
  41a01e:	cs enter 0x75ff,0xed
  41a023:	cmp    eax,0xdf7b8a2f
  41a028:	int    0xcb
  41a02a:	adc    BYTE PTR [ebx-0x499a8056],dh
  41a030:	cmc    
  41a031:	add    BYTE PTR [esi+0xd],bl
  41a034:	and    ah,BYTE PTR [ebp-0x3488e326]
  41a03a:	out    0x32,al
  41a03c:	adc    eax,0x490f8f5
  41a041:	cmp    DWORD PTR [ebx-0x5d1191],eax
  41a047:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a048:	inc    ebp
  41a049:	das    
  41a04a:	and    edi,esp
  41a04c:	inc    ebp
  41a04e:	popf   
  41a04f:	in     eax,dx
  41a050:	iret   
  41a051:	xchg   esp,eax
  41a052:	cld    
  41a053:	jmp    0x41a07f
  41a055:	in     al,0x7e
  41a057:	mov    WORD PTR [edx+edi*4+0x936b791],?
  41a05e:	xchg   edi,eax
  41a05f:	ins    BYTE PTR es:[edi],dx
  41a060:	paddw  mm3,mm2
  41a063:	pop    ecx
  41a064:	out    dx,eax
  41a065:	push   ds
  41a066:	jmp    0x41a066
  41a068:	or     dl,BYTE PTR [edi+0x4c4f843c]
  41a06e:	or     eax,0x2d8cd34f
  41a073:	pop    esi
  41a074:	mov    dl,0x99
  41a076:	sbb    BYTE PTR [esp+ebp*4+0x13cc1f15],bh
  41a07d:	push   ds
  41a07e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a07f:	(bad)  
  41a080:	mov    esi,0x27b9c96c
  41a085:	lods   al,BYTE PTR ds:[esi]
  41a086:	lock in eax,0x5e
  41a089:	xor    ebp,eax
  41a08b:	out    0x22,al
  41a08d:	ret    
  41a08e:	cmp    eax,0x7667fc73
  41a093:	mov    ds,WORD PTR [edi+0x53b71a67]
  41a099:	inc    edi
  41a09a:	jmp    0x41a03b
  41a09c:	cmp    eax,0x62e47bff
  41a0a1:	dec    ebx
  41a0a2:	stc    
  41a0a3:	out    dx,al
  41a0a4:	jl     0x41a10c
  41a0a6:	xor    cl,dl
  41a0a8:	daa    
  41a0a9:	fbld   TBYTE PTR [ecx-0xdc57658]
  41a0af:	push   edi
  41a0b0:	push   ebx
  41a0b1:	imul   ecx,DWORD PTR [ebp-0x38bc3521],0xdedacab4
  41a0bb:	inc    ebp
  41a0bc:	adc    DWORD PTR [edi+0x2e],ecx
  41a0bf:	cmp    BYTE PTR [edx],dl
  41a0c1:	xor    BYTE PTR [eax+0x10],al
  41a0c4:	push   0xd94eee17
  41a0c9:	dec    esi
  41a0ca:	jg     0x41a06b
  41a0cc:	stos   BYTE PTR es:[edi],al
  41a0cd:	pop    ds
  41a0ce:	dec    edi
  41a0cf:	or     eax,0x2cfb825e
  41a0d4:	fs pushf 
  41a0d6:	lds    ecx,FWORD PTR [ebx+0x26]
  41a0d9:	jle    0x41a0f3
  41a0db:	out    dx,al
  41a0dc:	xor    DWORD PTR [ebp+0x57],0xd452859a
  41a0e3:	or     BYTE PTR [edi],al
  41a0e5:	outs   dx,DWORD PTR ds:[esi]
  41a0e6:	jno    0x41a0d4
  41a0e8:	cmp    dl,BYTE PTR [ebp+0x75]
  41a0eb:	ss push esp
  41a0ed:	mov    WORD PTR [ecx],?
  41a0ef:	pop    ds
  41a0f0:	sub    eax,DWORD PTR [ebx-0x7]
  41a0f3:	pop    ss
  41a0f4:	loope  0x41a08d
  41a0f6:	sub    DWORD PTR [ebx],edi
  41a0f8:	(bad)  
  41a0f9:	fild   WORD PTR ds:0x950bf5db
  41a0ff:	pop    ss
  41a100:	pop    edi
  41a101:	in     al,dx
  41a102:	icebp  
  41a103:	scas   al,BYTE PTR es:[edi]
  41a104:	inc    esp
  41a105:	push   esi
  41a106:	idiv   bl
  41a108:	pop    ebx
  41a109:	mov    dh,BYTE PTR [ecx]
  41a10b:	xchg   esi,eax
  41a10c:	and    bh,BYTE PTR [ebx+0x14]
  41a10f:	sbb    esp,eax
  41a111:	xor    DWORD PTR ds:0x6a859f13,0xf1a0fe7b
  41a11b:	icebp  
  41a11c:	pop    edi
  41a11d:	add    BYTE PTR [edi],ch
  41a11f:	in     al,dx
  41a120:	ds ss cmp al,0x1b
  41a124:	out    0xaa,eax
  41a126:	add    cl,dl
  41a128:	ins    BYTE PTR es:[edi],dx
  41a129:	pop    ecx
  41a12a:	inc    edx
  41a12b:	lea    edi,[edx+ebx*4]
  41a12e:	retf   
  41a12f:	outs   dx,BYTE PTR ds:[esi]
  41a130:	(bad)  [ebp+0x2b5fc7f9]
  41a136:	or     eax,0x8d84ff51
  41a13b:	retf   0xb2df
  41a13e:	pop    ss
  41a13f:	call   0xe7a66355
  41a144:	pushf  
  41a145:	test   al,0xfc
  41a147:	push   eax
  41a148:	xchg   edi,eax
  41a149:	xor    BYTE PTR [ecx+0x77a249f3],ah
  41a14f:	retf   
  41a150:	and    al,0x82
  41a152:	jle    0x41a12e
  41a154:	loope  0x41a196
  41a156:	sbb    ecx,DWORD PTR [eax]
  41a158:	push   0x36
  41a15a:	jecxz  0x41a15b
  41a15c:	(bad)  
  41a15d:	sub    eax,0xf3cc6ab5
  41a162:	or     ch,bh
  41a164:	and    eax,0x1947efc2
  41a169:	mov    al,0xbd
  41a16b:	adc    al,0x6d
  41a16d:	or     al,0x66
  41a16f:	in     al,dx
  41a170:	ja     0x41a15e
  41a172:	rol    DWORD PTR [edx-0x39],cl
  41a175:	mov    ds,WORD PTR [ebx-0x55]
  41a178:	retf   0x2685
  41a17b:	mov    edi,0x66f44c44
  41a180:	int3   
  41a181:	jmp    0x5b75:0x1e60329d
  41a188:	inc    ebx
  41a189:	imul   edx,DWORD PTR [esi-0x342ffe00],0x7f
  41a190:	inc    eax
  41a191:	xchg   esi,eax
  41a192:	test   eax,0xfcb446c2
  41a197:	mov    cl,0x9d
  41a199:	iret   
  41a19a:	sbb    eax,0xb9015619
  41a19f:	pop    eax
  41a1a0:	sbb    dl,dl
  41a1a2:	jns    0x41a1a9
  41a1a4:	mul    BYTE PTR [ebp+0xd]
  41a1a7:	imul   ebx,DWORD PTR [ecx+0x66],0xf984c164
  41a1ae:	mov    cl,0x6
  41a1b0:	pop    ss
  41a1b1:	cmp    al,0x39
  41a1b3:	icebp  
  41a1b4:	test   eax,0x60b7e638
  41a1b9:	leave  
  41a1ba:	int3   
  41a1bb:	call   0xf37b239d
  41a1c0:	inc    edi
  41a1c1:	scas   al,BYTE PTR es:[edi]
  41a1c2:	fbld   TBYTE PTR [ecx+0x39]
  41a1c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1c6:	pusha  
  41a1c7:	xor    cl,ch
  41a1c9:	and    ecx,DWORD PTR [ebx+0xa732194]
  41a1cf:	push   ebx
  41a1d0:	xchg   ebp,eax
  41a1d1:	sub    DWORD PTR [edx],edx
  41a1d3:	dec    esi
  41a1d4:	mov    ecx,0x5e4e02c
  41a1d9:	dec    eax
  41a1da:	push   esp
  41a1db:	gs (bad) 
  41a1dd:	pop    edx
  41a1de:	fstp   DWORD PTR [ebx]
  41a1e0:	cmp    eax,0x3a330722
  41a1e5:	mov    bh,0x72
  41a1e7:	cli    
  41a1e8:	adc    eax,0x6d17f677
  41a1ed:	adc    BYTE PTR [ebx+ebx*2+0x160da7c9],ah
  41a1f4:	or     ecx,DWORD PTR [eax+0x422bf80a]
  41a1fa:	mov    al,0xc2
  41a1fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1fd:	sbb    esp,ecx
  41a1ff:	dec    ebp
  41a200:	leave  
  41a201:	pop    eax
  41a202:	ret    
  41a203:	jns    0x41a1d3
  41a205:	imul   ebp,DWORD PTR [esi+0xd],0xffffffe1
  41a209:	loope  0x41a262
  41a20b:	nop
  41a20c:	mov    edx,0xab6ec524
  41a211:	(bad)  
  41a212:	pusha  
  41a213:	les    edx,FWORD PTR [edx-0x12]
  41a216:	div    DWORD PTR [ebp-0x23]
  41a219:	fst    DWORD PTR ss:[edi-0x6b]
  41a21d:	cmc    
  41a21e:	or     eax,DWORD PTR [esi-0x3d]
  41a221:	cmc    
  41a222:	sbb    BYTE PTR [edx+0x4ddc101c],ah
  41a228:	in     al,0x15
  41a22a:	enter  0x7e91,0x7b
  41a22e:	and    esp,ebp
  41a230:	adc    BYTE PTR [esi-0x4687601a],0xd8
  41a237:	inc    ecx
  41a238:	jo     0x41a1fe
  41a23a:	and    al,0x1b
  41a23c:	and    cl,BYTE PTR [ecx]
  41a23e:	addr16 push ebp
  41a240:	pop    ds
  41a241:	and    al,0xe9
  41a243:	les    edx,FWORD PTR [edx+0x6e6f9df7]
  41a249:	cmp    eax,0x649892f1
  41a24e:	or     esp,edi
  41a250:	arpl   WORD PTR [esp+esi*8],di
  41a253:	xchg   ebp,eax
  41a254:	dec    ebp
  41a255:	in     eax,dx
  41a256:	lock fisttp WORD PTR ds:0xd1f8a1f3
  41a25d:	aaa    
  41a25e:	jge    0x41a25e
  41a260:	dec    eax
  41a261:	adc    eax,0x588bc250
  41a266:	cld    
  41a267:	repz sub ah,bl
  41a26a:	sbb    eax,0x7eea5415
  41a26f:	sbb    bh,BYTE PTR [esi]
  41a271:	ffreep st(0)
  41a273:	(bad)
  41a276:	dec    ebp
  41a277:	mov    cl,0x79
  41a279:	aad    0xa9
  41a27b:	sbb    ebx,ecx
  41a27d:	sbb    edi,DWORD PTR [edx+0x2f]
  41a280:	add    BYTE PTR [ecx+edi*2],ah
  41a283:	mov    bl,0x8
  41a285:	xchg   ebx,eax
  41a286:	mul    DWORD PTR [ecx]
  41a288:	fidiv  DWORD PTR [edx-0x13e1cf70]
  41a28e:	(bad)  
  41a28f:	stos   BYTE PTR es:[edi],al
  41a290:	mov    dl,BYTE PTR [edi-0x6fde3d5d]
  41a296:	jl     0x41a317
  41a298:	ins    DWORD PTR es:[edi],dx
  41a299:	in     eax,0x5c
  41a29b:	pop    esi
  41a29c:	cmp    ah,BYTE PTR [edi+0x29]
  41a29f:	push   0xe246dc48
  41a2a4:	cwde   
  41a2a5:	test   BYTE PTR cs:[edi-0x22e3e38],al
  41a2ac:	test   eax,0xc55f6b86
  41a2b1:	or     eax,0x16d29f6e
  41a2b6:	retf   0xb537
  41a2b9:	mov    bl,0x4e
  41a2bb:	fwait
  41a2bc:	inc    esp
  41a2bd:	jno    0x41a2dc
  41a2bf:	imul   esi,DWORD PTR [edi-0x15e8385e],0xd726be7a
  41a2c9:	arpl   bx,sp
  41a2cb:	stos   DWORD PTR es:[edi],eax
  41a2cc:	daa    
  41a2cd:	lahf   
  41a2ce:	mov    edx,0x71db1b75
  41a2d3:	mov    bh,0x6e
  41a2d5:	or     cl,BYTE PTR [ebp-0x79]
  41a2d8:	repnz loop 0x41a341
  41a2db:	xor    eax,0x6499abe1
  41a2e0:	(bad)  
  41a2e1:	scas   eax,DWORD PTR es:[edi]
  41a2e2:	or     al,0x71
  41a2e4:	pop    eax
  41a2e5:	mov    gs,ebx
  41a2e7:	jmp    0xaefc:0xa8201932
  41a2ee:	in     al,dx
  41a2ef:	jge    0x41a2dc
  41a2f1:	pop    ds
  41a2f2:	dec    ebp
  41a2f3:	push   ebx
  41a2f4:	mov    gs,WORD PTR [edx-0x15]
  41a2f7:	pop    ecx
  41a2f8:	push   ebx
  41a2f9:	icebp  
  41a2fa:	mov    ds:0xf6f686f4,al
  41a2ff:	fidiv  DWORD PTR [esi]
  41a301:	pop    eax
  41a302:	or     eax,0xab0568c5
  41a307:	mov    esi,0xa58d802b
  41a30c:	fild   DWORD PTR [ebx-0x29e8ff4a]
  41a312:	in     eax,dx
  41a313:	inc    ebp
  41a314:	or     bl,BYTE PTR [edx-0x4f]
  41a317:	cmovl  edi,DWORD PTR [eax+ebx*1-0x47db73d3]
  41a31f:	sbb    eax,esp
  41a321:	mov    edi,0xb12a260d
  41a326:	sar    BYTE PTR [esi],cl
  41a328:	push   eax
  41a329:	adc    al,0x4f
  41a32b:	xchg   ebp,eax
  41a32c:	inc    edi
  41a32d:	dec    esp
  41a32e:	sbb    BYTE PTR [esi+eax*8],dh
  41a331:	mov    DWORD PTR [eax-0x56],ebx
  41a334:	jmp    0x41a2c0
  41a336:	shl    DWORD PTR [ecx],cl
  41a338:	cs cld 
  41a33a:	mov    ebx,DWORD PTR [edi]
  41a33c:	cdq    
  41a33d:	clc    
  41a33e:	sub    dh,BYTE PTR [eax+0x3799aec5]
  41a344:	hlt    
  41a345:	mov    ebp,0x910fa85b
  41a34a:	retf   0x4f67
  41a34d:	sub    eax,0x8ee861a0
  41a352:	imul   ebp,edx,0x2f
  41a355:	push   edi
  41a356:	mov    ebx,0xa65eb177
  41a35b:	sub    ebx,DWORD PTR [ecx-0x4acb25d]
  41a361:	xor    DWORD PTR [esi-0x28],0xffffffba
  41a365:	sub    eax,0x4d62af4c
  41a36a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a36b:	mov    edi,0x214e5314
  41a370:	adc    bl,BYTE PTR [edx+0x75c490d0]
  41a376:	xchg   BYTE PTR [ebx-0x65],dh
  41a379:	stos   BYTE PTR es:[edi],al
  41a37a:	fdivr  st(3),st
  41a37c:	adc    BYTE PTR [edx-0x559d3bc8],0x7a
  41a383:	xchg   BYTE PTR [edx+0x418b000e],bl
  41a389:	cmp    DWORD PTR ds:0xc53f4cbc,eax
  41a38f:	fiadd  WORD PTR [ecx+0x0]
  41a392:	jo     0x41a3c5
  41a394:	in     eax,dx
  41a395:	(bad)  
  41a396:	test   eax,0x4f137576
  41a39b:	xor    BYTE PTR [edi*4-0x41e423bb],dh
  41a3a2:	mov    ds:0x4cc8b614,eax
  41a3a7:	jbe    0x41a33a
  41a3a9:	nop
  41a3aa:	retf   
  41a3ab:	lods   eax,DWORD PTR ds:[esi]
  41a3ac:	inc    esi
  41a3ad:	adc    BYTE PTR [ebx+0x8514ca5],bh
  41a3b3:	push   ebx
  41a3b4:	add    eax,DWORD PTR [eax+0x524bae7f]
  41a3ba:	inc    ebx
  41a3bb:	mov    esi,0x6445e2bd
  41a3c0:	jno    0x41a42d
  41a3c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3c3:	sbb    BYTE PTR [eax+0x4],0x16
  41a3c7:	enter  0x9b84,0xc8
  41a3cb:	mov    eax,0x87803b4
  41a3d0:	fmul   st(6),st
  41a3d2:	pop    ecx
  41a3d3:	mov    al,ds:0x73d06ec4
  41a3d8:	pop    ebx
  41a3d9:	repnz dec ebx
  41a3db:	mov    esp,0xb8607eb2
  41a3e0:	enter  0xa9b5,0x91
  41a3e4:	cmp    esp,edx
  41a3e6:	sbb    bl,BYTE PTR [eax-0x7f]
  41a3e9:	out    dx,al
  41a3ea:	mov    bl,0x34
  41a3ec:	mov    al,ds:0x82e014d0
  41a3f1:	lods   al,BYTE PTR ds:[esi]
  41a3f2:	mov    al,0xb6
  41a3f4:	bound  esi,QWORD PTR [ebx+eiz*4]
  41a3f7:	dec    ebx
  41a3f8:	xor    eax,0xd0281be7
  41a3fd:	ins    BYTE PTR es:[edi],dx
  41a3fe:	pusha  
  41a3ff:	cmp    al,0xb2
  41a401:	call   0xb71e8371
  41a406:	into   
  41a407:	pusha  
  41a408:	push   ebp
  41a409:	sub    BYTE PTR [edx-0x5d],al
  41a40c:	xor    WORD PTR [ebx],ax
  41a40f:	fisub  DWORD PTR [esp+esi*2+0x3aa34b82]
  41a416:	mov    dh,0x81
  41a418:	bound  edi,QWORD PTR [ecx+ebp*2-0x1f7df13d]
  41a41f:	xor    al,0x32
  41a421:	push   ds
  41a422:	inc    ecx
  41a423:	or     BYTE PTR [esi+esi*4],al
  41a426:	cli    
  41a427:	repnz adc esi,edx
  41a42a:	push   ss
  41a42b:	out    0xd3,eax
  41a42d:	adc    DWORD PTR [ebp+ebx*4-0x12fcd967],ecx
  41a434:	jg     0x41a434
  41a436:	mov    dl,0x77
  41a438:	in     al,0xe0
  41a43a:	cs jle 0x41a457
  41a43d:	and    dl,BYTE PTR [ecx]
  41a43f:	ds mov bh,0xa4
  41a442:	cmp    edi,DWORD PTR [esp+ebp*8-0x429e98da]
  41a449:	pop    dx
  41a44b:	mov    DWORD PTR [eax-0x717cb0e],eax
  41a451:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a453:	sub    bl,BYTE PTR [esp+esi*1-0x7e9d8fb4]
  41a45a:	push   edx
  41a45b:	hlt    
  41a45c:	fistp  DWORD PTR [edi-0x13]
  41a45f:	pusha  
  41a460:	cli    
  41a461:	popa   
  41a462:	pop    ss
  41a463:	adc    BYTE PTR [edx],ch
  41a465:	mov    al,0xa4
  41a467:	and    ecx,DWORD PTR gs:[ebp+0xeb848fa]
  41a46e:	xchg   ebx,eax
  41a46f:	mov    BYTE PTR [edx+0x49],al
  41a472:	mov    ecx,0xe8b81547
  41a477:	xchg   edi,eax
  41a478:	pop    ds
  41a479:	js     0x41a471
  41a47b:	and    ebp,ebp
  41a47d:	stos   BYTE PTR es:[edi],al
  41a47e:	jo     0x41a469
  41a480:	dec    ebx
  41a481:	repnz sub BYTE PTR [ebx-0x5b],0x34
  41a486:	bound  esp,QWORD PTR [ebp+0x64]
  41a489:	mov    eax,DWORD PTR [edi-0x7c]
  41a48c:	mov    bl,0x52
  41a48e:	sbb    ebp,0xddd549ea
  41a494:	scas   al,BYTE PTR es:[edi]
  41a495:	int    0xfe
  41a497:	inc    edx
  41a498:	fcom   st(3)
  41a49a:	arpl   sp,dx
  41a49c:	mov    bl,0x74
  41a49e:	and    cl,BYTE PTR [esi+0x6ac991bb]
  41a4a4:	or     ecx,ebp
  41a4a6:	dec    eax
  41a4a7:	mov    al,0x76
  41a4a9:	dec    ecx
  41a4aa:	or     esi,DWORD PTR [esp+edi*1]
  41a4ad:	in     eax,dx
  41a4ae:	mov    cs,edx
  41a4b0:	add    DWORD PTR [esi],0xfb6c7a7c
  41a4b6:	shr    DWORD PTR [edx+0x5987b113],0xb9
  41a4bd:	pop    edx
  41a4be:	loope  0x41a49e
  41a4c0:	xor    ebx,edx
  41a4c2:	(bad)  
  41a4c3:	jo     0x41a4ff
  41a4c5:	dec    dl
  41a4c7:	xor    BYTE PTR [edi],ch
  41a4c9:	ror    BYTE PTR [ecx+ecx*1-0x473fc9a4],0x66
  41a4d1:	outs   dx,DWORD PTR ds:[esi]
  41a4d2:	in     al,dx
  41a4d3:	sbb    al,0x6e
  41a4d5:	into   
  41a4d6:	(bad)  
  41a4d7:	retf   
  41a4d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4d9:	jmp    FWORD PTR [esp+edi*8-0x46b33e6e]
  41a4e0:	mov    eax,ds:0x2c0beb32
  41a4e5:	mov    bh,0xfb
  41a4e7:	div    BYTE PTR [ebx]
  41a4e9:	jno    0x41a4d7
  41a4eb:	and    al,0x6
  41a4ed:	stc    
  41a4ee:	outs   dx,BYTE PTR ds:[esi]
  41a4ef:	xor    BYTE PTR [ebp-0x41b5ed7],bh
  41a4f5:	sub    al,0x5f
  41a4f7:	into   
  41a4f8:	pushf  
  41a4f9:	cs jge 0x41a49f
  41a4fc:	pop    bp
  41a4fe:	ret    
  41a4ff:	js     0x41a540
  41a501:	loope  0x41a4c8
  41a503:	hlt    
  41a504:	or     edx,DWORD PTR [edx+0x4e]
  41a507:	jns    0x41a53e
  41a509:	out    0x20,al
  41a50b:	bt     DWORD PTR [edi-0x49],ebp
  41a50f:	call   0x391cb9a9
  41a514:	aam    0x13
  41a516:	xchg   si,ax
  41a518:	sbb    BYTE PTR [ebx+0x700d3506],ah
  41a51e:	pop    eax
  41a51f:	loope  0x41a587
  41a521:	jp     0x41a580
  41a523:	or     eax,0x295b8090
  41a528:	(bad)  
  41a529:	aaa    
  41a52a:	and    ah,dh
  41a52c:	(bad)  
  41a52d:	ffree  st(2)
  41a52f:	bound  ebx,QWORD PTR [edi+0x4ef7c021]
  41a535:	xchg   edx,eax
  41a536:	or     al,dl
  41a538:	mov    al,ds:0x1c2ccd0c
  41a53d:	loope  0x41a503
  41a53f:	mov    ebx,0x2e756d69
  41a544:	sbb    DWORD PTR [edx+0x557980c],0x7248fa7f
  41a54e:	mov    ?,WORD PTR [ecx-0x1fce9708]
  41a554:	jb     0x41a5b9
  41a556:	jecxz  0x41a5ca
  41a558:	push   ss
  41a559:	xor    eax,0x25923591
  41a55e:	pop    DWORD PTR [eax+0x1630cfa1]
  41a564:	int    0x19
  41a566:	scas   eax,DWORD PTR es:[edi]
  41a567:	mov    ebp,edx
  41a569:	adc    BYTE PTR [ecx+0x1a198955],al
  41a56f:	adc    DWORD PTR [eax-0x15c9c00f],ebp
  41a575:	ret    
  41a576:	jmp    0x41a5d1
  41a578:	push   ebp
  41a579:	jmp    0x41a52d
  41a57b:	add    bl,BYTE PTR [edx+0x36]
  41a57e:	mov    DWORD PTR [ebp-0x40d88baa],ecx
  41a584:	cmc    
  41a585:	addr16 push edx
  41a587:	popa   
  41a588:	pop    ss
  41a589:	mov    ds:0x6d18283,al
  41a58e:	and    al,0xa
  41a590:	sbb    eax,0x6ba3bc52
  41a595:	jl     0x41a579
  41a597:	dec    esi
  41a598:	aas    
  41a599:	xchg   esi,eax
  41a59a:	test   DWORD PTR [ecx-0xd],edi
  41a59d:	push   ss
  41a59e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a59f:	mov    esp,0x917eddee
  41a5a4:	scas   eax,DWORD PTR es:[edi]
  41a5a5:	xchg   edx,eax
  41a5a6:	imul   BYTE PTR [edi-0x242c24cf]
  41a5ac:	inc    edx
  41a5ad:	outs   dx,BYTE PTR ds:[esi]
  41a5ae:	lods   al,BYTE PTR ds:[esi]
  41a5af:	inc    ecx
  41a5b0:	pop    es
  41a5b1:	mov    bl,0xdd
  41a5b3:	aaa    
  41a5b4:	cli    
  41a5b5:	rcr    DWORD PTR [edi+0x57],1
  41a5b8:	cmp    ch,BYTE PTR [esp+0x5b0deeaa]
  41a5bf:	inc    ebx
  41a5c0:	ss sbb eax,0xd791414c
  41a5c6:	ret    0xc40f
  41a5c9:	fwait
  41a5ca:	push   eax
  41a5cb:	(bad)  
  41a5cc:	cmp    DWORD PTR [edx+esi*4-0x5b494951],esp
  41a5d3:	imul   DWORD PTR [edi]
  41a5d5:	ds add al,0xb
  41a5d8:	dec    ecx
  41a5d9:	jb     0x41a64c
  41a5db:	pushf  
  41a5dc:	(bad)  
  41a5dd:	(bad)  
  41a5de:	ins    WORD PTR es:[edi],dx
  41a5e0:	fsub   DWORD PTR [edi+0x626bedba]
  41a5e6:	stc    
  41a5e7:	xchg   esp,eax
  41a5e8:	jmp    0x41a5ab
  41a5ea:	jecxz  0x41a581
  41a5ec:	push   edx
  41a5ed:	loop   0x41a5ca
  41a5ef:	mov    eax,ds:0x6d870440
  41a5f4:	xor    DWORD PTR [ebp+0x5b],esi
  41a5f7:	xor    ecx,DWORD PTR [edi-0x7459bd61]
  41a5fd:	(bad)  
  41a5fe:	les    edi,FWORD PTR [edx+eiz*1]
  41a601:	pop    esi
  41a602:	ja     0x41a663
  41a604:	dec    edx
  41a605:	sbb    BYTE PTR [ecx+0x52beb464],ah
  41a60b:	std    
  41a60c:	inc    esp
  41a60d:	jle    0x41a63c
  41a60f:	mov    bl,0x8
  41a611:	jg     0x41a641
  41a613:	and    DWORD PTR [esi+0x67f886c5],0xda5aeed
  41a61d:	fwait
  41a61e:	mov    esi,0x6592b0db
  41a623:	retf   
  41a624:	jecxz  0x41a5e1
  41a626:	sidtd  [eax-0x15]
  41a62a:	and    DWORD PTR [esi],esi
  41a62c:	jecxz  0x41a651
  41a62e:	inc    eax
  41a62f:	sbb    BYTE PTR [esp+edi*2-0x7f7eaeba],dh
  41a636:	mov    ah,BYTE PTR [eax]
  41a638:	js     0x41a68a
  41a63a:	cmp    al,0x18
  41a63c:	jbe    0x41a630
  41a63e:	jne    0x41a5c9
  41a640:	inc    ecx
  41a641:	push   cs
  41a642:	adc    bl,BYTE PTR [ebp-0x3eb1bfcd]
  41a648:	mov    ecx,DWORD PTR [ebp-0x15]
  41a64b:	pop    edi
  41a64c:	sub    BYTE PTR [edi],bh
  41a64e:	dec    esi
  41a64f:	ds mov ah,0xba
  41a652:	rcr    BYTE PTR [ebx*4+0x3779f343],cl
  41a659:	jno    0x41a5de
  41a65b:	xor    esi,DWORD PTR [ecx+0x73]
  41a65e:	fidiv  WORD PTR [ecx-0x5b]
  41a661:	adc    ebx,DWORD PTR [edx+eiz*4-0x7a]
  41a665:	rcr    dl,1
  41a667:	mov    edi,0x2ee06414
  41a66c:	loop   0x41a61e
  41a66e:	es dec edx
  41a670:	or     al,0x47
  41a672:	dec    ebp
  41a673:	pop    edx
  41a674:	popa   
  41a675:	inc    ebp
  41a676:	fiadd  WORD PTR [eax+edx*8]
  41a679:	inc    esi
  41a67a:	xchg   ecx,eax
  41a67b:	outs   dx,BYTE PTR ds:[esi]
  41a67c:	mov    edi,edx
  41a67e:	dec    ebp
  41a67f:	in     al,dx
  41a680:	test   eax,0x224ac5a3
  41a685:	push   DWORD PTR [esi]
  41a687:	adc    al,0x70
  41a689:	jno    0x41a672
  41a68b:	pop    esp
  41a68c:	std    
  41a68d:	mov    ds:0x14887635,eax
  41a692:	test   eax,0xb6216872
  41a697:	xor    ebx,esi
  41a699:	push   cs
  41a69a:	fimul  WORD PTR [esi+eax*8-0x4eadb889]
  41a6a1:	pop    es
  41a6a2:	nop
  41a6a3:	jns    0x41a6c8
  41a6a5:	jg     0x41a711
  41a6a7:	ja     0x41a665
  41a6a9:	add    BYTE PTR [esi-0x5c],ah
  41a6ac:	xor    al,0xf4
  41a6ae:	jnp    0x41a66d
  41a6b0:	mov    edi,0xcee7fac0
  41a6b5:	fwait
  41a6b6:	sbb    al,0x69
  41a6b8:	push   ecx
  41a6b9:	xchg   ebp,eax
  41a6ba:	lds    esp,FWORD PTR [edx+0x364ad190]
  41a6c0:	mov    BYTE PTR [edi+esi*4-0x77f001c6],ch
  41a6c7:	xor    DWORD PTR es:[ebx+0x56],ebx
  41a6cb:	mov    dh,0x98
  41a6cd:	mov    al,ds:0x647393f5
  41a6d2:	outs   dx,DWORD PTR ds:[esi]
  41a6d3:	jl     0x41a753
  41a6d5:	xor    eax,0xc755e627
  41a6da:	nop
  41a6db:	dec    ebp
  41a6dc:	mov    eax,DWORD PTR [ebp+0x25]
  41a6df:	mov    ch,dl
  41a6e1:	or     ah,BYTE PTR [edx]
  41a6e3:	retf   0xed9a
  41a6e6:	add    DWORD PTR ds:0xe52223b9,ebp
  41a6ec:	pop    esp
  41a6ed:	push   eax
  41a6ee:	ins    DWORD PTR es:[edi],dx
  41a6ef:	mov    ebp,0x383f384e
  41a6f4:	ja     0x41a6df
  41a6f6:	mov    BYTE PTR [ebp+0x2f29aaab],bl
  41a6fc:	mov    cl,0x84
  41a6fe:	pop    edi
  41a6ff:	ja     0x41a76c
  41a701:	sub    al,0x2d
  41a703:	int    0x55
  41a705:	repz xchg ecx,eax
  41a707:	lods   al,BYTE PTR ds:[esi]
  41a708:	mov    ebx,0xd0a77353
  41a70d:	xchg   edi,eax
  41a70e:	movzx  esp,WORD PTR [ebp-0x2dcb642e]
  41a715:	ret    0x189b
  41a718:	lahf   
  41a719:	sbb    eax,0xd4718f02
  41a71e:	cmp    esp,DWORD PTR ds:0xfe1c35a9
  41a724:	or     al,0x31
  41a726:	push   edi
  41a727:	sbb    DWORD PTR ds:0xd88a4cb7,esp
  41a72d:	out    dx,al
  41a72e:	mov    ebx,0x36b939e3
  41a733:	inc    esi
  41a734:	jmp    0x115:0xe8ecc8c6
  41a73b:	loop   0x41a792
  41a73d:	jb     0x41a77e
  41a73f:	cwde   
  41a740:	push   ds
  41a741:	add    eax,0x461b17d8
  41a746:	add    ebp,esp
  41a748:	jecxz  0x41a6d2
  41a74a:	lahf   
  41a74b:	mov    bl,0x27
  41a74d:	fimul  DWORD PTR [ebp-0x7a2079bf]
  41a753:	scas   al,BYTE PTR es:[edi]
  41a754:	mov    al,ds:0x7a7b568f
  41a759:	out    dx,eax
  41a75a:	mov    al,ds:0xa75e8f84
  41a75f:	add    eax,0x42df102c
  41a764:	popf   
  41a765:	inc    esi
  41a766:	sahf   
  41a767:	sahf   
  41a768:	and    ebx,DWORD PTR [ebx-0x24]
  41a76b:	sub    bl,BYTE PTR [eax-0x792eb4b9]
  41a771:	mov    edi,0x6bedb541
  41a776:	imul   esp,DWORD PTR [edx-0x4c],0xffffffb0
  41a77a:	out    dx,al
  41a77b:	imul   esi,DWORD PTR [ebp+0x4742e375],0xba05c821
  41a785:	ffreep st(1)
  41a787:	jmp    0x41a7e6
  41a789:	ins    BYTE PTR es:[edi],dx
  41a78a:	add    BYTE PTR [esp+ebx*1+0x48],dl
  41a78e:	add    eax,0xcf7efd67
  41a793:	and    cl,ch
  41a795:	(bad)  
  41a797:	mov    ebx,0x3e4a38ff
  41a79c:	mov    bl,0x60
  41a79e:	aad    0x1b
  41a7a0:	das    
  41a7a1:	mov    ecx,0xe36a2f36
  41a7a6:	sub    esp,ebp
  41a7a8:	mov    eax,ds:0x8e171f90
  41a7ad:	pop    eax
  41a7ae:	mov    dl,BYTE PTR [ecx-0x20]
  41a7b1:	fisub  WORD PTR [ecx-0x1a460ce8]
  41a7b7:	cmp    dh,dh
  41a7b9:	sbb    BYTE PTR [edi-0x3c],dh
  41a7bc:	push   cs
  41a7bd:	jnp    0x41a7ac
  41a7bf:	dec    esp
  41a7c0:	vmread ebx,ecx
  41a7c3:	fs inc ebp
  41a7c5:	sbb    al,cl
  41a7c7:	mov    dl,BYTE PTR [esi-0x71]
  41a7ca:	and    ecx,edi
  41a7cc:	out    0xbf,eax
  41a7ce:	dec    ecx
  41a7cf:	mov    ecx,0x6361a714
  41a7d4:	(bad)  
  41a7d5:	sbb    eax,0xeafa8231
  41a7da:	adc    BYTE PTR [edi-0x225e7c3c],0x81
  41a7e1:	add    eax,0x770fac3
  41a7e6:	xor    ah,cl
  41a7e8:	aam    0x89
  41a7ea:	jmp    FWORD PTR [eax+0x4a]
  41a7ed:	sub    BYTE PTR [eax],dh
  41a7ef:	je     0x41a78f
  41a7f1:	bound  ecx,QWORD PTR [ebx-0x33]
  41a7f4:	leave  
  41a7f5:	pop    ss
  41a7f6:	mov    edi,0xd518ad3e
  41a7fb:	sbb    bh,BYTE PTR [ecx-0x62388d8d]
  41a801:	mov    bh,0xaa
  41a803:	in     al,0x27
  41a805:	loope  0x41a813
  41a807:	addr16 cli 
  41a809:	sbb    ebx,DWORD PTR [ebp-0x1b003f6a]
  41a80f:	idiv   DWORD PTR [ecx-0x50]
  41a812:	call   0x41b47957
  41a817:	and    al,0xf1
  41a819:	mov    bh,0xc7
  41a81b:	rcr    BYTE PTR [eax+0x76],cl
  41a81e:	repnz ds inc edx
  41a821:	inc    esi
  41a822:	mov    edx,DWORD PTR [edi+0x3e0bcbbd]
  41a828:	mov    ds,WORD PTR [ebx+0x4f]
  41a82b:	in     eax,dx
  41a82c:	ds push ecx
  41a82e:	push   es
  41a82f:	xlat   BYTE PTR ds:[ebx]
  41a830:	push   ds
  41a831:	dec    edx
  41a832:	test   BYTE PTR [eax+0x6960f084],bh
  41a838:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a839:	pop    ebp
  41a83a:	pop    eax
  41a83b:	inc    edx
  41a83c:	mov    ds:0x80f63bd0,al
  41a841:	repz or al,0xe7
  41a844:	mov    al,0xd9
  41a846:	int    0x16
  41a848:	pop    ds
  41a849:	nop
  41a84a:	push   cs
  41a84b:	jl     0x41a839
  41a84d:	sbb    al,0x9f
  41a84f:	scas   al,BYTE PTR es:[edi]
  41a850:	adc    bh,BYTE PTR [ecx+0x77]
  41a853:	inc    ecx
  41a854:	mov    edx,0x64edd20c
  41a859:	scas   eax,DWORD PTR es:[edi]
  41a85a:	or     ch,BYTE PTR [eax+0x69]
  41a85d:	mov    eax,0x56ed85a0
  41a862:	mov    es,WORD PTR [eax+edx*8+0x15]
  41a866:	or     DWORD PTR [ebp-0x7b],0xffffffa1
  41a86a:	rep stos DWORD PTR es:[edi],eax
  41a86c:	xchg   esp,ecx
  41a86e:	and    ch,BYTE PTR [ebp-0x3b]
  41a871:	jp     0x41a814
  41a873:	cvttps2pi mm7,QWORD PTR [ecx]
  41a876:	sbb    al,0x2a
  41a878:	in     eax,0x1d
  41a87a:	push   es
  41a87b:	les    eax,FWORD PTR [esi]
  41a87d:	adc    DWORD PTR [ebx],edx
  41a87f:	sub    eax,0x89fe0ca7
  41a884:	loope  0x41a8c6
  41a886:	or     eax,0x66d02791
  41a88b:	(bad)  
  41a88c:	outs   dx,DWORD PTR ds:[esi]
  41a88d:	stc    
  41a88e:	js     0x41a892
  41a890:	(bad)  [ecx-0x20]
  41a893:	ss out dx,al
  41a895:	(bad)  
  41a896:	call   0x43be8876
  41a89b:	mov    al,0x83
  41a89d:	lea    esi,[ecx+eax*2]
  41a8a0:	adc    DWORD PTR [esi+0x48566a0d],edi
  41a8a6:	call   0x8ab2:0x8ad02f88
  41a8ad:	test   BYTE PTR [edx+0x24101b99],dh
  41a8b3:	inc    esi
  41a8b4:	fwait
  41a8b5:	shl    DWORD PTR [edx-0x30],1
  41a8b8:	out    0x17,eax
  41a8ba:	mov    dl,0x61
  41a8bc:	in     al,dx
  41a8bd:	call   0x4986b9b4
  41a8c2:	inc    edx
  41a8c3:	aaa    
  41a8c4:	inc    ebx
  41a8c5:	add    edx,DWORD PTR [esi+0x74]
  41a8c8:	jb     0x41a940
  41a8ca:	inc    edx
  41a8cb:	push   ss
  41a8cc:	inc    esp
  41a8cd:	imul   ebp,DWORD PTR [edi],0x343cca83
  41a8d3:	ja     0x41a8d1
  41a8d5:	inc    eax
  41a8d6:	sahf   
  41a8d7:	or     DWORD PTR [eax],esp
  41a8d9:	mov    cl,0x42
  41a8db:	das    
  41a8dc:	mov    BYTE PTR [esi-0x57535a3a],dh
  41a8e2:	imul   ebx,edi,0xffffffdb
  41a8e5:	or     cl,ah
  41a8e7:	jns    0x41a914
  41a8e9:	retf   
  41a8ea:	mov    ch,0x25
  41a8ec:	das    
  41a8ed:	imul   ecx,DWORD PTR [edx+0x5914e012],0xdff685c9
  41a8f7:	jg     0x41a924
  41a8f9:	bound  esi,QWORD PTR [esi+eiz*1]
  41a8fc:	or     eax,0x529c7174
  41a901:	xor    cl,ch
  41a903:	xlat   BYTE PTR ds:[ebx]
  41a904:	sbb    DWORD PTR [esi],esp
  41a906:	xor    BYTE PTR [ebx+0xa4435f9],0x60
  41a90d:	test   eax,0xd380299f
  41a912:	jo     0x41a959
  41a914:	loopne 0x41a91d
  41a916:	pop    ecx
  41a917:	repnz imul dx,WORD PTR fs:[ecx],0xffca
  41a91d:	jmp    0x41a8ba
  41a91f:	mov    dh,BYTE PTR [edi+0x3df764ff]
  41a925:	mov    fs,WORD PTR [edx]
  41a927:	push   edx
  41a928:	leave  
  41a929:	lock sbb al,0x3a
  41a92c:	mov    esp,0x4f70a54
  41a931:	adc    BYTE PTR [ecx+0x1f],ah
  41a934:	imul   ebx,esi,0x57c4bcb8
  41a93a:	xchg   edi,eax
  41a93b:	add    bl,cl
  41a93d:	rcl    DWORD PTR [esi+0x66],0xfc
  41a941:	sti    
  41a942:	add    eax,0xa9ea1513
  41a947:	jge    0x41a8de
  41a949:	dec    ecx
  41a94a:	jno    0x41a986
  41a94c:	dec    esi
  41a94d:	xchg   ebx,eax
  41a94e:	sbb    al,ch
  41a950:	mov    DWORD PTR [ebx],esp
  41a952:	mov    edi,DWORD PTR [ebx]
  41a954:	fsub   QWORD PTR [ebp+0x246873a2]
  41a95a:	and    DWORD PTR [ebx+0x4a405fb3],eax
  41a960:	hlt    
  41a961:	sub    al,cl
  41a963:	daa    
  41a964:	repnz fwait
  41a966:	mov    ecx,DWORD PTR [ecx]
  41a968:	enter  0x5edb,0x45
  41a96c:	jbe    0x41a9c5
  41a96e:	out    0xf4,al
  41a970:	inc    esi
  41a971:	push   esp
  41a972:	cmp    al,0x1f
  41a974:	pop    edi
  41a975:	test   BYTE PTR [edx+0x23bc1835],0xa7
  41a97c:	leave  
  41a97d:	push   ecx
  41a97e:	pop    ds
  41a97f:	pushf  
  41a980:	popf   
  41a981:	cdq    
  41a982:	das    
  41a983:	ret    0xe595
  41a986:	inc    esp
  41a987:	out    0x68,eax
  41a989:	or     al,0xb9
  41a98b:	out    0x4f,eax
  41a98d:	nop
  41a98e:	sbb    ah,cl
  41a990:	sub    DWORD PTR [ebx+0x6c503cfd],esi
  41a996:	dec    ebp
  41a997:	rcl    BYTE PTR [ebx-0xacb7554],1
  41a99d:	call   0xc0b:0x3a0f50c3
  41a9a4:	neg    BYTE PTR [ebp+0x5cfa1342]
  41a9aa:	neg    DWORD PTR [esi]
  41a9ac:	(bad)  
  41a9ad:	(bad)  
  41a9ae:	div    BYTE PTR [ecx+0x30f3bdb2]
  41a9b4:	std    
  41a9b5:	sti    
  41a9b6:	xor    dl,BYTE PTR [edx]
  41a9b8:	pop    ebx
  41a9b9:	into   
  41a9ba:	push   ebp
  41a9bb:	cmp    al,0xc7
  41a9bd:	push   esp
  41a9be:	mov    ecx,0xe091703e
  41a9c3:	cmp    BYTE PTR [esi+ecx*4],bl
  41a9c6:	lea    edx,[edi+ebx*4-0x1a4f1408]
  41a9cd:	retf   0x8d73
  41a9d0:	sub    DWORD PTR [edi-0x2f54a8c],ecx
  41a9d6:	jmp    0xc193:0x7e93f997
  41a9dd:	cwde   
  41a9de:	(bad)  
  41a9e0:	into   
  41a9e1:	gs cli 
  41a9e3:	mov    ebx,cs
  41a9e5:	cmp    ch,bl
  41a9e7:	xchg   BYTE PTR [esi+0x7b186b2d],cl
  41a9ed:	(bad)  
  41a9ee:	frstor [ebx-0x6acd9523]
  41a9f4:	fdivr  QWORD PTR es:[edi+0x765b13a]
  41a9fb:	inc    esp
  41a9fc:	loop   0x41aa12
  41a9fe:	push   ebp
  41a9ff:	add    BYTE PTR [eax],bh
  41aa01:	and    cl,BYTE PTR [ebp+0x74]
  41aa04:	xchg   esi,eax
  41aa05:	inc    esp
  41aa06:	aam    0x78
  41aa08:	pop    edi
  41aa09:	cmp    esi,edi
  41aa0b:	mov    ecx,0xa5e56be7
  41aa10:	dec    ebx
  41aa11:	adc    BYTE PTR [edx+eiz*2-0x123fe65f],ch
  41aa18:	jl     0x41a9f4
  41aa1a:	pop    ds
  41aa1b:	lea    eax,[ebx-0x15]
  41aa1e:	xlat   BYTE PTR ds:[ebx]
  41aa1f:	repnz les esp,FWORD PTR [esi+0x2801fdc6]
  41aa26:	or     al,0x36
  41aa28:	inc    ebx
  41aa29:	adc    BYTE PTR [edi-0x7ac6dcf8],dh
  41aa2f:	popf   
  41aa30:	mul    esi
  41aa32:	je     0x41aa5b
  41aa34:	and    al,0xe3
  41aa36:	inc    ebx
  41aa37:	scas   al,BYTE PTR es:[edi]
  41aa38:	ret    
  41aa39:	inc    edi
  41aa3a:	adc    eax,0x1b0e25c3
  41aa3f:	fdiv   st,st(5)
  41aa41:	sbb    DWORD PTR [eax-0x40a6630b],esi
  41aa47:	inc    esi
  41aa48:	adc    al,0x1c
  41aa4a:	loop   0x41aa71
  41aa4c:	dec    esp
  41aa4d:	mov    edi,0xcdd69542
  41aa52:	rol    DWORD PTR [ebx-0x42],1
  41aa55:	adc    esi,edx
  41aa57:	jp     0x41aa37
  41aa59:	mov    cl,BYTE PTR [edx+0x5cb729d8]
  41aa5f:	xor    cl,bl
  41aa61:	pop    esi
  41aa62:	ror    DWORD PTR [esi],cl
  41aa64:	aas    
  41aa65:	lods   al,BYTE PTR ds:[esi]
  41aa66:	es in  eax,0x4d
  41aa69:	xchg   BYTE PTR [ebp-0xc89f611],cl
  41aa6f:	in     al,dx
  41aa70:	ss mov cl,0xf0
  41aa73:	xchg   esp,eax
  41aa74:	push   es
  41aa75:	mov    cs,WORD PTR [edi+0x2b6f1bc1]
  41aa7b:	jno    0x41aaef
  41aa7d:	xchg   edi,eax
  41aa7e:	sbb    eax,0xc01e6186
  41aa83:	out    0x98,eax
  41aa85:	ret    
  41aa86:	ins    DWORD PTR es:[edi],dx
  41aa87:	lods   eax,DWORD PTR ds:[esi]
  41aa88:	(bad)  
  41aa89:	ja     0x41aa1e
  41aa8b:	lock cli 
  41aa8d:	enter  0x611c,0x94
  41aa91:	inc    esi
  41aa92:	xor    edi,0xffffffaf
  41aa95:	int3   
  41aa96:	sbb    eax,0xdb295940
  41aa9b:	mov    ds,ebp
  41aa9d:	push   eax
  41aa9e:	adc    BYTE PTR [ecx-0x330b4079],bh
  41aaa4:	inc    edx
  41aaa5:	add    al,0x2
  41aaa7:	pushf  
  41aaa8:	mov    esi,DWORD PTR [eax-0x34]
  41aaab:	inc    esp
  41aaac:	jecxz  0x41ab27
  41aaae:	pop    es
  41aaaf:	ins    BYTE PTR es:[edi],dx
  41aab0:	adc    al,0x8f
  41aab2:	outs   dx,BYTE PTR ds:[esi]
  41aab3:	lahf   
  41aab4:	out    0xf7,eax
  41aab6:	sahf   
  41aab7:	jo     0x41aaa8
  41aab9:	xlat   BYTE PTR ds:[ebx]
  41aaba:	pop    esi
  41aabb:	xor    ebp,ecx
  41aabd:	iret   
  41aabe:	pop    es
  41aabf:	addr16 push eax
  41aac1:	lods   al,BYTE PTR ds:[esi]
  41aac2:	push   ecx
  41aac3:	mov    dh,0xe5
  41aac5:	pop    eax
  41aac6:	jno    0x41aa98
  41aac8:	popf   
  41aac9:	xchg   esp,eax
  41aaca:	mov    eax,0xf9f175cf
  41aacf:	les    ebx,FWORD PTR [ecx-0x3ffc1306]
  41aad5:	push   DWORD PTR [edx+0xa]
  41aad8:	rcr    BYTE PTR [eax+0x3b],cl
  41aadb:	cmp    BYTE PTR [edi+ebp*4+0x21],0x64
  41aae0:	minps  xmm7,XMMWORD PTR [ebx+esi*8]
  41aae4:	rol    BYTE PTR [ecx],0xf
  41aae7:	sbb    bh,0x98
  41aaea:	xchg   edx,eax
  41aaeb:	cmp    DWORD PTR [eax],edx
  41aaed:	mov    bh,0xcc
  41aaef:	ss dec edx
  41aaf1:	fadd   DWORD PTR [ebx+0x5aa24cd8]
  41aaf7:	out    dx,eax
  41aaf8:	add    BYTE PTR [edi],bh
  41aafa:	xor    eax,0x8c4671e1
  41aaff:	push   esp
  41ab00:	mov    ah,0x70
  41ab02:	cmp    eax,0xe514506c
  41ab07:	test   al,0x79
  41ab09:	cmp    BYTE PTR [eax],ah
  41ab0b:	ins    DWORD PTR es:[edi],dx
  41ab0c:	or     DWORD PTR [ecx+0x0],eax
  41ab0f:	nop
  41ab10:	stos   BYTE PTR es:[edi],al
  41ab11:	fs pusha 
  41ab13:	or     eax,0xdcdfa6cd
  41ab18:	cli    
  41ab19:	push   edx
  41ab1a:	dec    esp
  41ab1b:	(bad)
  41ab1f:	stos   DWORD PTR es:[edi],eax
  41ab20:	das    
  41ab21:	(bad)  
  41ab22:	sbb    al,0xf9
  41ab24:	mov    eax,ds:0x3f8356c2
  41ab29:	scas   eax,DWORD PTR es:[edi]
  41ab2a:	xor    eax,0x4ae58841
  41ab2f:	push   ds
  41ab30:	cmp    bh,BYTE PTR [eax+ecx*1]
  41ab33:	xchg   ebx,eax
  41ab34:	clc    
  41ab35:	test   BYTE PTR [ebp-0x4331a648],bh
  41ab3b:	adc    cl,BYTE PTR [ebp-0x9]
  41ab3e:	aaa    
  41ab3f:	and    edi,esp
  41ab41:	mov    al,ds:0x3320d267
  41ab46:	mov    dh,0xe0
  41ab48:	xchg   edi,eax
  41ab49:	add    al,0xf9
  41ab4b:	pop    esp
  41ab4c:	jbe    0x41ab20
  41ab4e:	and    dl,BYTE PTR [edi-0x27]
  41ab51:	inc    eax
  41ab52:	pop    edx
  41ab53:	int    0x6f
  41ab55:	outs   dx,DWORD PTR ds:[esi]
  41ab56:	jb     0x41abb7
  41ab58:	cs xchg ebx,eax
  41ab5a:	lods   al,BYTE PTR ds:[esi]
  41ab5b:	dec    edi
  41ab5c:	arpl   WORD PTR [ecx+esi*8],cx
  41ab5f:	xor    al,0xcf
  41ab61:	lods   eax,DWORD PTR ds:[esi]
  41ab62:	mov    edx,0xe156591a
  41ab67:	and    bl,bl
  41ab69:	jg     0x41aaef
  41ab6b:	jecxz  0x41ab00
  41ab6d:	pop    ecx
  41ab6e:	sbb    ch,bh
  41ab70:	ficom  DWORD PTR [eax]
  41ab72:	dec    ebx
  41ab73:	mov    cl,0xe
  41ab75:	push   ecx
  41ab76:	pop    ecx
  41ab77:	shr    BYTE PTR [ebp+0x33443fb9],cl
  41ab7d:	sbb    esi,esp
  41ab7f:	imul   edi,DWORD PTR [ebp+eax*4+0x4f],0xffffffe5
  41ab84:	xchg   edi,eax
  41ab85:	cdq    
  41ab86:	icebp  
  41ab87:	jl     0x41ab20
  41ab89:	cs imul ebx,ebx,0xdc606eb4
  41ab90:	jbe    0x41ab9e
  41ab92:	jo     0x41ab9d
  41ab94:	outs   dx,DWORD PTR ds:[esi]
  41ab95:	gs inc ecx
  41ab97:	xchg   esi,eax
  41ab98:	push   0x17
  41ab9a:	cmp    DWORD PTR [ebp-0x343649f2],esp
  41aba0:	mov    esi,0xc1d02c55
  41aba5:	push   ebp
  41aba6:	js     0x41ab79
  41aba8:	shr    DWORD PTR [edx-0x6d0cd0e7],1
  41abae:	lods   eax,DWORD PTR ds:[esi]
  41abaf:	leave  
  41abb0:	xchg   esp,eax
  41abb1:	aas    
  41abb2:	out    dx,al
  41abb3:	xchg   edx,eax
  41abb4:	adc    BYTE PTR ds:0x6260a9b3,ch
  41abba:	pushf  
  41abbb:	adc    BYTE PTR [ecx-0x51],0xdc
  41abbf:	and    eax,0x5c888bde
  41abc4:	hlt    
  41abc5:	mov    BYTE PTR ds:0xa6b43830,cl
  41abcb:	inc    ebp
  41abcc:	mov    esp,0x735d9ad9
  41abd1:	sbb    DWORD PTR [edi-0x537c0cc7],0x27
  41abd8:	jle    0x41abeb
  41abda:	fwait
  41abdb:	mov    edx,ecx
  41abdd:	push   ss
  41abde:	cli    
  41abdf:	lahf   
  41abe0:	in     eax,0x98
  41abe2:	mov    bl,0xa6
  41abe4:	push   0x657a2c19
  41abe9:	pop    ebp
  41abea:	inc    esp
  41abeb:	add    esi,DWORD PTR [edi+0x54c13416]
  41abf1:	push   edi
  41abf2:	and    BYTE PTR [edi],0xce
  41abf5:	inc    edi
  41abf6:	pop    ebx
  41abf7:	into   
  41abf8:	push   ebx
  41abf9:	cwde   
  41abfa:	ror    DWORD PTR [edi+0xcbe7eb4],1
  41ac00:	out    0x5c,eax
  41ac02:	lods   al,BYTE PTR ds:[esi]
  41ac03:	xchg   esp,eax
  41ac04:	(bad)  
  41ac06:	jne    0x41ab98
  41ac08:	aam    0xcb
  41ac0a:	adc    BYTE PTR [ebx-0x4dc99171],al
  41ac10:	sub    al,0x29
  41ac12:	ficomp DWORD PTR [ecx-0x5d91f0a7]
  41ac18:	mov    ah,0x2
  41ac1a:	mov    ebp,0xb6e8763d
  41ac1f:	add    BYTE PTR ss:[ebx+0x8faa720],ch
  41ac26:	jnp    0x41abeb
  41ac28:	shl    BYTE PTR [ecx-0x6a],cl
  41ac2b:	xor    cl,BYTE PTR [edx]
  41ac2d:	aad    0xab
  41ac2f:	cmp    eax,DWORD PTR [eax]
  41ac31:	jno    0x41ac18
  41ac33:	nop
  41ac34:	sahf   
  41ac35:	or     DWORD PTR [edi-0x7c],0x7a
  41ac39:	cs into 
  41ac3b:	or     esi,esi
  41ac3d:	daa    
  41ac3e:	leave  
  41ac3f:	loope  0x41ac22
  41ac41:	push   ds
  41ac42:	push   eax
  41ac43:	repnz add ch,cl
  41ac46:	iret   
  41ac47:	mov    esp,0x8293cb86
  41ac4c:	out    dx,al
  41ac4d:	mov    ah,0xd2
  41ac4f:	inc    eax
  41ac50:	test   BYTE PTR [ebp+0x6b],cl
  41ac53:	hlt    
  41ac54:	fnstcw WORD PTR [edi+edi*1]
  41ac57:	sbb    esi,DWORD PTR [eax]
  41ac59:	scas   al,BYTE PTR es:[edi]
  41ac5a:	pushf  
  41ac5b:	adc    eax,0x54cb9fda
  41ac60:	in     al,dx
  41ac61:	jmp    0x5732:0x3e987acb
  41ac68:	retf   0x1143
  41ac6b:	cmp    al,0x14
  41ac6d:	test   al,0xc2
  41ac6f:	mov    ecx,0x582e7158
  41ac74:	pop    ds
  41ac75:	je     0x41ac63
  41ac77:	int    0xcf
  41ac79:	jb     0x41acd1
  41ac7b:	push   es
  41ac7c:	stos   BYTE PTR es:[edi],al
  41ac7d:	push   ecx
  41ac7e:	sbb    eax,0xbc652619
  41ac83:	(bad)  
  41ac84:	ficomp DWORD PTR [esi]
  41ac86:	inc    eax
  41ac87:	fwait
  41ac88:	pop    esi
  41ac89:	jmp    FWORD PTR [eax]
  41ac8b:	imul   edi,ebx,0xc744bbf
  41ac91:	cmc    
  41ac92:	push   es
  41ac93:	(bad)  
  41ac94:	mov    ch,0x7f
  41ac96:	mov    al,ds:0x941031e2
  41ac9b:	mov    edx,0x3238e39f
  41aca0:	outs   dx,BYTE PTR ds:[esi]
  41aca1:	(bad)  
  41aca2:	mov    ch,0x85
  41aca4:	loop   0x41ac55
  41aca6:	data16 in al,0x18
  41aca9:	in     al,0x12
  41acab:	add    eax,0xa89e0834
  41acb0:	fidiv  WORD PTR ds:0xcbbde013
  41acb6:	lock xor DWORD PTR [ebx],esi
  41acb9:	mov    esi,0x5069b97b
  41acbe:	retf   
  41acbf:	mov    ss,WORD PTR [ebx-0x261999eb]
  41acc5:	aad    0xbd
  41acc7:	dec    esp
  41acc8:	lea    eax,[edx]
  41acca:	popa   
  41accb:	(bad)  
  41accc:	je     0x41ac90
  41acce:	or     al,0xdb
  41acd0:	leave  
  41acd1:	inc    BYTE PTR [eax]
  41acd3:	sub    BYTE PTR [edx],bh
  41acd5:	xchg   ebp,eax
  41acd6:	fmul   st(4),st
  41acd8:	pop    ecx
  41acd9:	xchg   edi,eax
  41acda:	mov    DWORD PTR ds:0xc665f452,esp
  41ace0:	loop   0x41ad3f
  41ace2:	xchg   BYTE PTR [ecx],al
  41ace4:	loop   0x41acc9
  41ace6:	repz pop esp
  41ace8:	cmp    eax,0xe6366823
  41aced:	add    ecx,DWORD PTR [edx+edi*8+0x710aa1c5]
  41acf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acf5:	push   0xde89cbd9
  41acfa:	mov    ah,0x14
  41acfc:	dec    edi
  41acfd:	push   edi
  41acfe:	or     edx,DWORD PTR [edi+ebx*2+0x36]
  41ad02:	call   0x2a787461
  41ad07:	inc    ebx
  41ad08:	jo     0x41acef
  41ad0a:	cmp    dl,cl
  41ad0c:	scas   eax,DWORD PTR es:[edi]
  41ad0d:	add    ecx,DWORD PTR [ebx+0x19496613]
  41ad13:	xchg   esi,eax
  41ad14:	stc    
  41ad15:	stos   DWORD PTR es:[edi],eax
  41ad16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad17:	pop    esp
  41ad18:	jge    0x41ad10
  41ad1a:	xlat   BYTE PTR ds:[bx]
  41ad1c:	mov    bh,0xa7
  41ad1e:	push   ss
  41ad1f:	ds push ebp
  41ad21:	push   0x6b9f4e49
  41ad26:	ins    DWORD PTR es:[edi],dx
  41ad27:	inc    ebx
  41ad28:	inc    edi
  41ad29:	jecxz  0x41ad32
  41ad2b:	mov    eax,0xb41cfb4c
  41ad30:	cmp    bh,ch
  41ad32:	pop    ds
  41ad33:	inc    ebp
  41ad34:	sbb    BYTE PTR [edx],dh
  41ad36:	fistp  DWORD PTR [edx+edx*1-0x163b99a5]
  41ad3d:	fild   WORD PTR [ebp+0x25b20e26]
  41ad43:	xchg   DWORD PTR [ebp+0x1b],esp
  41ad46:	(bad)  
  41ad47:	enter  0xdef9,0x3d
  41ad4b:	retf   
  41ad4c:	push   0xffffffcf
  41ad4e:	ss dec edi
  41ad50:	jmp    0x41adbe
  41ad52:	xchg   DWORD PTR [esi-0x46f6eb7],ebx
  41ad58:	lds    eax,FWORD PTR [edx]
  41ad5a:	leave  
  41ad5b:	sbb    DWORD PTR [esi+0x41],eax
  41ad5e:	loope  0x41ad6b
  41ad60:	adc    dh,BYTE PTR [eax+0x641332b]
  41ad66:	mov    esi,0x28b7cd84
  41ad6b:	clc    
  41ad6c:	xchg   edi,eax
  41ad6d:	dec    esp
  41ad6e:	(bad)  
  41ad6f:	dec    edx
  41ad70:	shufps xmm5,XMMWORD PTR [ecx],0xfc
  41ad74:	push   esi
  41ad75:	pop    ebx
  41ad76:	hlt    
  41ad77:	xchg   ecx,eax
  41ad78:	ret    0x5c5c
  41ad7b:	out    0xd0,al
  41ad7d:	mul    DWORD PTR [eax+0x706de022]
  41ad83:	or     al,0xe4
  41ad85:	xor    dh,BYTE PTR [edi+0x73]
  41ad88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad89:	rol    BYTE PTR [ebx-0x7bf5e556],cl
  41ad8f:	jne    0x41ad1d
  41ad91:	daa    
  41ad92:	or     esi,0xffffffbe
  41ad95:	or     ebx,eax
  41ad97:	push   ds
  41ad98:	fs jo  0x41ad34
  41ad9b:	inc    ebp
  41ad9c:	add    eax,0xef03e2c5
  41ada1:	mov    dh,0x46
  41ada3:	cmc    
  41ada4:	ja     0x41adbd
  41ada6:	xor    ebx,DWORD PTR [eax+0x408944d]
  41adac:	inc    eax
  41adad:	daa    
  41adae:	scas   al,BYTE PTR es:[edi]
  41adaf:	sbb    ah,cl
  41adb1:	push   edi
  41adb2:	mov    ah,ch
  41adb4:	ss loope 0x41adcc
  41adb7:	pop    es
  41adb8:	push   edx
  41adb9:	jns    0x41ad64
  41adbb:	daa    
  41adbc:	sbb    BYTE PTR [ebp+0x5be53979],ch
  41adc2:	call   0xf8d0:0x260a7df4
  41adc9:	es pop edx
  41adcb:	xor    DWORD PTR [edx-0x46a6cc96],0xffffffee
  41add2:	mov    ebp,0x6b22a4c7
  41add7:	cmp    dl,0x6
  41adda:	push   DWORD PTR [eax+eiz*2]
  41addd:	in     eax,dx
  41adde:	mov    ds,WORD PTR [esi-0x21]
  41ade1:	dec    ebx
  41ade2:	mov    ecx,0x27ed1ae8
  41ade7:	dec    edx
  41ade8:	jmp    0x79ec:0x3094350e
  41adef:	jl     0x41ad82
  41adf1:	in     eax,dx
  41adf2:	aad    0x23
  41adf4:	xchg   esi,eax
  41adf5:	sbb    esi,DWORD PTR [edi-0x6ed6c02d]
  41adfb:	not    BYTE PTR ds:0xdc8c4a93
  41ae01:	cmc    
  41ae02:	and    al,0xb4
  41ae04:	call   0x822c:0x4d648eea
  41ae0b:	(bad)  
  41ae0c:	fcomi  st,st(0)
  41ae0e:	into   
  41ae0f:	fwait
  41ae10:	sti    
  41ae11:	hlt    
  41ae12:	cmc    
  41ae13:	pop    esi
  41ae14:	adc    eax,DWORD PTR [esi+0x5ab10e7b]
  41ae1a:	popa   
  41ae1b:	fcom   DWORD PTR [ebx+0x4f]
  41ae1e:	je     0x41ae2e
  41ae20:	fild   QWORD PTR [eax-0x7177e6e2]
  41ae26:	lahf   
  41ae27:	test   eax,0xe872ab71
  41ae2c:	(bad)  
  41ae2d:	push   eax
  41ae2e:	dec    esp
  41ae2f:	mov    al,ds:0xfc6064d
  41ae34:	sbb    al,0x6c
  41ae36:	push   eax
  41ae37:	mov    cl,0x3e
  41ae39:	xchg   ebp,eax
  41ae3a:	jmp    0x143:0x1a147ab
  41ae41:	sub    dl,bh
  41ae43:	jno    0x41ae39
  41ae45:	sbb    ebp,DWORD PTR [ecx-0x75]
  41ae48:	push   ss
  41ae49:	jmp    0xac20:0x53a69ca9
  41ae50:	sbb    esi,DWORD PTR ds:0xcfdc543c
  41ae56:	retf   0xf0de
  41ae59:	adc    esi,DWORD PTR [ebp-0x25]
  41ae5c:	imul   edi,DWORD PTR [ebp+ebx*1+0x4f],0x6
  41ae61:	xor    BYTE PTR [edx],dl
  41ae63:	outs   dx,BYTE PTR ds:[esi]
  41ae64:	or     al,0x88
  41ae66:	lods   al,BYTE PTR ds:[esi]
  41ae67:	push   ds
  41ae68:	or     eax,0x8aaebe54
  41ae6d:	into   
  41ae6e:	shr    bl,0x64
  41ae71:	or     DWORD PTR [ebx],eax
  41ae73:	jmp    0x23b0:0xae293401
  41ae7a:	adc    DWORD PTR [ebx],ebp
  41ae7c:	sub    cl,bl
  41ae7e:	jp     0x41ae04
  41ae80:	pop    esp
  41ae81:	sub    eax,DWORD PTR ds:0xf7f8e116
  41ae87:	jge    0x41ae3e
  41ae89:	jl     0x41ae55
  41ae8b:	mov    ds:0x7bbb869a,al
  41ae90:	adc    DWORD PTR [edi+0x3d],ebx
  41ae93:	sbb    BYTE PTR [esi+0x3e83ee9a],al
  41ae99:	xchg   edx,eax
  41ae9a:	ffree  st(0)
  41ae9c:	lahf   
  41ae9d:	sub    ecx,DWORD PTR [ecx-0x2]
  41aea0:	in     al,0x42
  41aea2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aea3:	add    DWORD PTR [eax+0x5e35be5e],edi
  41aea9:	mov    cl,0x4b
  41aeab:	ins    DWORD PTR es:[edi],dx
  41aeac:	(bad)  
  41aead:	in     eax,dx
  41aeae:	inc    ebx
  41aeaf:	cdq    
  41aeb0:	test   DWORD PTR [esi-0x61566a6d],edi
  41aeb6:	ficomp DWORD PTR [edi+ecx*2]
  41aeb9:	aaa    
  41aeba:	cs addr16 mov bh,0x7b
  41aebe:	ds mov ebx,0x2a5043a1
  41aec4:	ret    
  41aec5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aec6:	scas   al,BYTE PTR es:[edi]
  41aec7:	shr    BYTE PTR [esi],cl
  41aec9:	push   ebx
  41aeca:	(bad)  
  41aecb:	xchg   edx,eax
  41aecc:	loop   0x41af4d
  41aece:	xor    BYTE PTR [edx-0x72b98686],al
  41aed4:	jno    0x41aeea
  41aed6:	sub    DWORD PTR [ebx+0x47],eax
  41aed9:	xor    eax,DWORD PTR [ebp-0x2]
  41aedc:	dec    ebp
  41aedd:	inc    ebp
  41aede:	mov    ecx,0x2361777d
  41aee3:	push   0x72687607
  41aee8:	jle    0x41af23
  41aeea:	xchg   esp,eax
  41aeeb:	les    eax,FWORD PTR [ebx+0x54]
  41aeee:	mov    bh,0xbc
  41aef0:	mov    ch,0x50
  41aef2:	sub    esp,esp
  41aef4:	mov    cl,0x3e
  41aef6:	xchg   esi,eax
  41aef7:	out    dx,al
  41aef8:	and    eax,DWORD PTR [esi]
  41aefa:	jnp    0x41af44
  41aefc:	fidiv  DWORD PTR [esi+ebx*4+0x350f8c01]
  41af03:	test   BYTE PTR [eax],0x97
  41af06:	fidiv  DWORD PTR [ebx+0x3a]
  41af09:	mov    al,ds:0x698523b5
  41af0e:	test   DWORD PTR [edx],ebx
  41af10:	mov    edi,0x15f4da34
  41af15:	out    dx,eax
  41af16:	push   esp
  41af17:	add    DWORD PTR [ebp+0x7c],ebx
  41af1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af1b:	adc    al,0x3f
  41af1d:	sbb    BYTE PTR [ebp+eiz*1-0x1444face],dh
  41af24:	mov    cl,0xdd
  41af26:	lods   al,BYTE PTR ds:[esi]
  41af27:	push   cs
  41af28:	retf   0xfc1a
  41af2b:	mov    esi,0x4ecf818e
  41af30:	xchg   esi,eax
  41af31:	pop    ds
  41af32:	add    BYTE PTR [eax+0x78b9c775],0xc6
  41af39:	test   ch,dl
  41af3b:	sub    ch,BYTE PTR [ebx]
  41af3d:	mov    bh,0xd1
  41af3f:	adc    DWORD PTR [ebx],edi
  41af41:	dec    ebp
  41af42:	mov    ecx,DWORD PTR [esi-0x671f7790]
  41af48:	lock lods al,BYTE PTR ds:[esi]
  41af4a:	mov    esi,DWORD PTR [ebx-0x1b]
  41af4d:	xchg   al,bh
  41af4f:	mov    eax,0xa83a8e3c
  41af54:	adc    eax,0xa55bc77f
  41af59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af5a:	mov    bl,0x27
  41af5c:	mov    ds:0xa002dbe5,eax
  41af61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af62:	ins    DWORD PTR es:[edi],dx
  41af63:	jbe    0x41afcc
  41af65:	js     0x41af2c
  41af67:	xor    eax,0x915e8f42
  41af6c:	ja     0x41af35
  41af6e:	fiadd  WORD PTR [ebx]
  41af70:	push   eax
  41af71:	into   
  41af72:	jne    0x41af98
  41af74:	ret    0xd571
  41af77:	fbld   TBYTE PTR [esi+0x77]
  41af7a:	loope  0x41af21
  41af7c:	and    ebx,edx
  41af7e:	push   eax
  41af7f:	cwde   
  41af80:	dec    esi
  41af81:	outs   dx,BYTE PTR ds:[esi]
  41af82:	hlt    
  41af83:	stos   BYTE PTR es:[edi],al
  41af84:	push   esp
  41af85:	sbb    al,0x57
  41af87:	adc    eax,0x8ba11a6d
  41af8c:	push   edi
  41af8d:	ret    
  41af8e:	sub    eax,0xc81c1a4e
  41af93:	jne    0x41afef
  41af95:	lock mov ebp,0x5526ca72
  41af9b:	sti    
  41af9c:	scas   eax,DWORD PTR es:[edi]
  41af9d:	xor    BYTE PTR [ebp-0x1a],dh
  41afa0:	or     bh,BYTE PTR [eax-0x8]
  41afa3:	adc    DWORD PTR [eax],ebx
  41afa5:	inc    edx
  41afa6:	push   cs
  41afa7:	jno    0x41af3d
  41afa9:	ss cs rep stos BYTE PTR es:[edi],al
  41afad:	jo     0x41af33
  41afaf:	xchg   ebx,eax
  41afb0:	push   es
  41afb1:	rcl    cl,1
  41afb3:	jno    0x41b030
  41afb5:	or     esp,DWORD PTR ds:0x2f798d3b
  41afbb:	test   BYTE PTR ss:[edx],al
  41afbe:	icebp  
  41afbf:	adc    BYTE PTR [edx+0x3c],0x97
  41afc3:	in     eax,dx
  41afc4:	aaa    
  41afc5:	stc    
  41afc6:	cmp    dl,ah
  41afc8:	push   ss
  41afc9:	out    0xe9,al
  41afcb:	sar    edi,0xe0
  41afce:	cdq    
  41afcf:	sbb    dh,BYTE PTR [edx+0x39]
  41afd2:	sahf   
  41afd3:	inc    ecx
  41afd4:	cmp    bh,BYTE PTR [edx]
  41afd6:	xchg   ecx,eax
  41afd7:	push   ss
  41afd8:	adc    esi,edi
  41afda:	std    
  41afdb:	prefetchnta BYTE PTR cs:[ecx+eax*1-0x23]
  41afe1:	(bad)  
  41afe3:	push   ds
  41afe4:	xchg   BYTE PTR [ecx],cl
  41afe6:	imul   edx,ebp,0x8e9f626d
  41afec:	lahf   
  41afed:	mov    bh,cl
  41afef:	cld    
  41aff0:	out    dx,eax
  41aff1:	push   edi
  41aff2:	lock je 0x41af8f
  41aff5:	push   0xd7ae4b6b
  41affa:	mov    ecx,0xbd25eeea
  41afff:	pop    ss
  41b000:	jo     0x41afb2
  41b002:	dec    ebp
  41b003:	xchg   edx,eax
  41b004:	sbb    cl,bl
  41b006:	adc    eax,esp
  41b008:	jbe    0x41afd1
  41b00a:	or     ebx,DWORD PTR [ebp+0x46]
  41b00d:	enter  0x5ebc,0x1e
  41b011:	leave  
  41b012:	xchg   DWORD PTR [edx],ebx
  41b014:	adc    ebx,eax
  41b016:	dec    eax
  41b017:	dec    ebp
  41b018:	push   ecx
  41b019:	xchg   BYTE PTR [edi+0x57c48ab9],ah
  41b01f:	(bad)  
  41b020:	(bad)  
  41b021:	mov    esp,0x820cb54e
  41b026:	pop    esi
  41b027:	jmp    0x41afbb
  41b029:	xchg   esp,eax
  41b02a:	shl    bh,cl
  41b02c:	mov    eax,ds:0x371723d8
  41b031:	loopne 0x41afdc
  41b033:	loope  0x41b098
  41b035:	ret    0x94cc
  41b038:	xor    esi,DWORD PTR [edi]
  41b03a:	int3   
  41b03b:	sbb    bh,BYTE PTR [edi]
  41b03d:	shl    DWORD PTR [edi],1
  41b03f:	push   0x30b1fd12
  41b044:	sbb    dl,bh
  41b046:	xor    DWORD PTR ds:0xae5ac934,edi
  41b04c:	aas    
  41b04d:	adc    al,0xc9
  41b04f:	cli    
  41b050:	dec    esi
  41b051:	adc    al,0xe2
  41b053:	popa   
  41b054:	sub    WORD PTR [esi],0x1d64
  41b059:	cmp    esi,edx
  41b05b:	les    eax,FWORD PTR [eax+0x38f3eddd]
  41b061:	push   0xffffffc1
  41b063:	stos   BYTE PTR es:[edi],al
  41b064:	jp     0x41b0bb
  41b066:	int    0x0
  41b068:	sub    dl,BYTE PTR ds:0x2b381eed
  41b06e:	out    0xde,eax
  41b070:	jp     0x41b047
  41b072:	rcl    BYTE PTR [edi-0x2c],0x2d
  41b076:	test   eax,0x4dbb0d3a
  41b07b:	mov    esi,0xeba23a8e
  41b080:	push   eax
  41b081:	clc    
  41b082:	jb     0x41b064
  41b084:	dec    esi
  41b085:	out    0x21,al
  41b087:	icebp  
  41b088:	pop    ebp
  41b089:	icebp  
  41b08a:	std    
  41b08b:	repz and al,0xf2
  41b08e:	mov    al,0xa0
  41b090:	mov    ecx,0x8a7c979f
  41b095:	scas   al,BYTE PTR es:[edi]
  41b096:	and    al,0x42
  41b098:	mov    bl,0xc5
  41b09a:	js     0x41b106
  41b09c:	js     0x41b02e
  41b09e:	lea    esp,[edi+0x3a]
  41b0a1:	es pop eax
  41b0a3:	jp     0x41b0e0
  41b0a5:	inc    edx
  41b0a6:	xor    BYTE PTR [edi],ch
  41b0a8:	test   BYTE PTR [esp+edx*8],bl
  41b0ab:	xlat   BYTE PTR ds:[ebx]
  41b0ac:	pushf  
  41b0ad:	adc    ecx,esi
  41b0af:	out    0xd4,eax
  41b0b1:	jo     0x41b11e
  41b0b3:	into   
  41b0b4:	push   ss
  41b0b5:	cwde   
  41b0b6:	retf   
  41b0b7:	cld    
  41b0b8:	ror    BYTE PTR [edi],cl
  41b0ba:	je     0x41b104
  41b0bc:	rcr    ah,cl
  41b0be:	inc    eax
  41b0bf:	inc    esp
  41b0c0:	add    eax,esi
  41b0c2:	retf   0x6e64
  41b0c5:	push   ebp
  41b0c6:	mov    edx,0xbb237c18
  41b0cb:	js     0x41b06a
  41b0cd:	pop    edx
  41b0ce:	jle    0x41b0af
  41b0d0:	xor    al,0xf7
  41b0d2:	lahf   
  41b0d3:	and    DWORD PTR [edi+0x3c],eax
  41b0d6:	ins    DWORD PTR es:[edi],dx
  41b0d7:	pop    eax
  41b0d8:	imul   BYTE PTR [ebp-0x70]
  41b0db:	inc    ebx
  41b0dc:	call   0x9fddb572
  41b0e1:	jmp    0xc4cdb17e
  41b0e6:	push   edx
  41b0e7:	leave  
  41b0e8:	jb     0x41b0b9
  41b0ea:	pop    edx
  41b0eb:	aam    0xb0
  41b0ed:	test   al,0xfb
  41b0ef:	ror    dl,1
  41b0f1:	popf   
  41b0f2:	inc    ebx
  41b0f3:	scas   eax,DWORD PTR es:[edi]
  41b0f4:	arpl   WORD PTR [esp+ebp*1],ax
  41b0f7:	(bad)  
  41b0f8:	xor    ah,dh
  41b0fa:	lea    edi,[esi-0x18]
  41b0fd:	jns    0x41b0b9
  41b0ff:	fwait
  41b100:	mov    ds:0x4742f53f,eax
  41b105:	xchg   ecx,eax
  41b106:	popa   
  41b107:	add    bl,BYTE PTR [ebx-0x65b8d505]
  41b10d:	jmp    0xe95ef15a
  41b112:	mov    eax,eax
  41b114:	aas    
  41b115:	push   ebx
  41b116:	inc    edi
  41b117:	fxch   st(4)
  41b119:	mov    esp,0x1ca2a672
  41b11e:	pop    ecx
  41b11f:	xor    esi,ebx
  41b121:	sbb    eax,0x3ec69cc6
  41b126:	sbb    eax,0xe253a8de
  41b12b:	dec    ebp
  41b12c:	cld    
  41b12d:	fs nop
  41b12f:	add    eax,0xe04ec24
  41b134:	sub    BYTE PTR [esi],bl
  41b136:	mov    eax,0xa297d8e9
  41b13b:	or     BYTE PTR [edx-0x2d7375d7],al
  41b141:	sar    DWORD PTR [ebx+ecx*4-0x7f],1
  41b145:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b146:	xor    al,0x8f
  41b148:	push   es
  41b149:	pop    edx
  41b14a:	mov    BYTE PTR [eax-0x66],ch
  41b14d:	js     0x41b19e
  41b14f:	jns    0x41b14c
  41b151:	popf   
  41b152:	(bad)  
  41b153:	std    
  41b154:	cmp    DWORD PTR [ecx-0x7bad8dd8],ebx
  41b15a:	frstor [edx+esi*4-0x1bd586d9]
  41b161:	call   0x284c:0x8c575bca
  41b168:	int3   
  41b169:	mov    bl,0x74
  41b16b:	sbb    al,0xed
  41b16d:	ins    BYTE PTR es:[edi],dx
  41b16e:	add    bh,0x4e
  41b171:	dec    edx
  41b172:	inc    edx
  41b173:	jg     0x41b154
  41b175:	inc    ebp
  41b176:	mov    ch,0x6a
  41b178:	sub    esi,DWORD PTR [eax+0x15f91738]
  41b17e:	stos   BYTE PTR es:[edi],al
  41b17f:	inc    edx
  41b180:	xor    eax,0x8f272949
  41b185:	push   edi
  41b186:	shr    edx,1
  41b188:	push   ecx
  41b189:	sub    al,0x25
  41b18b:	xlat   BYTE PTR ds:[ebx]
  41b18c:	mov    edi,0xccd07f4b
  41b191:	aaa    
  41b192:	sbb    eax,0xfd98aba
  41b197:	fs push cs
  41b199:	mov    bh,0xa2
  41b19b:	je     0x41b1d6
  41b19d:	ja     0x41b16d
  41b19f:	push   ds
  41b1a0:	ins    BYTE PTR es:[edi],dx
  41b1a1:	inc    ebp
  41b1a2:	popa   
  41b1a3:	add    eax,0xab470407
  41b1a8:	(bad)  
  41b1aa:	mov    cl,0x54
  41b1ac:	adc    BYTE PTR [ebp-0x15],ah
  41b1af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1b0:	leave  
  41b1b1:	cs pop ecx
  41b1b3:	(bad)  
  41b1b4:	cmp    al,0xa7
  41b1b6:	(bad)  
  41b1b7:	mov    eax,ds:0xb21a35fd
  41b1bc:	cmp    BYTE PTR [esi-0x1c41bb33],dl
  41b1c2:	mov    bl,0x14
  41b1c4:	xchg   BYTE PTR [edi+0x34],dh
  41b1c7:	in     al,dx
  41b1c8:	mov    cl,0xe4
  41b1ca:	inc    ebx
  41b1cb:	pushf  
  41b1cc:	das    
  41b1cd:	push   eax
  41b1ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1cf:	jns    0x41b1af
  41b1d1:	es pop ebx
  41b1d3:	xchg   ecx,eax
  41b1d4:	imul   eax,DWORD PTR [edx+ebx*2],0xa6b6326d
  41b1db:	imul   ecx,DWORD PTR [edx+0x7e521cce],0x87fbf991
  41b1e5:	jns    0x41b212
  41b1e7:	les    esi,FWORD PTR ds:0x229fdb5c
  41b1ed:	inc    esp
  41b1ee:	ror    eax,cl
  41b1f0:	test   DWORD PTR [ecx],eax
  41b1f2:	mov    esp,0x4257e3c2
  41b1f7:	repnz daa 
  41b1f9:	pop    edi
  41b1fa:	cdq    
  41b1fb:	dec    ecx
  41b1fc:	adc    ebx,DWORD PTR [ebp-0x26]
  41b1ff:	mov    eax,0xb18cb5b4
  41b204:	dec    esp
  41b205:	imul   ebx,DWORD PTR [edi+0x521bdd7c],0x4752ca7d
  41b20f:	pushf  
  41b210:	psllw  mm4,QWORD PTR [ebx]
  41b213:	push   ss
  41b214:	push   0xf9cc9579
  41b219:	mov    ds:0x5cd6193d,eax
  41b21e:	and    esi,DWORD PTR [eax-0x59]
  41b221:	xor    edx,ecx
  41b223:	mov    WORD PTR [esi+ecx*2+0x26],fs
  41b227:	(bad)  
  41b228:	jmp    0x76cd:0xee5458a5
  41b22f:	out    dx,eax
  41b230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b231:	mov    cl,0x1a
  41b233:	shl    esp,cl
  41b235:	imul   esp,esi,0x486650de
  41b23b:	pusha  
  41b23c:	dec    ebx
  41b23d:	jmp    0xe8749089
  41b242:	inc    ebx
  41b243:	es retf 0xd747
  41b247:	ss dec edi
  41b249:	daa    
  41b24a:	jns    0x41b281
  41b24c:	ins    DWORD PTR es:[edi],dx
  41b24d:	das    
  41b24e:	xor    DWORD PTR [edx+0x3c219489],ecx
  41b254:	mov    WORD PTR [eax],es
  41b256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b257:	fldcw  WORD PTR [edx-0x13bffc58]
  41b25d:	loope  0x41b2b2
  41b25f:	mov    bl,0xc7
  41b261:	stc    
  41b262:	and    al,BYTE PTR [eax]
  41b264:	ret    
  41b265:	in     al,dx
  41b266:	cmp    eax,ecx
  41b268:	cwde   
  41b269:	mov    esp,0x11d93840
  41b26e:	sbb    ebx,ebp
  41b270:	xor    DWORD PTR [edi],edi
  41b272:	shl    BYTE PTR [ebp-0x75],cl
  41b275:	mov    bh,0x38
  41b277:	sub    ecx,DWORD PTR [eax-0x678d81b8]
  41b27d:	mov    dh,0x9c
  41b27f:	out    0xa2,eax
  41b281:	adc    DWORD PTR [edi-0x3b],0x67
  41b285:	push   ss
  41b286:	stos   BYTE PTR es:[edi],al
  41b287:	mov    ds:0x208c7188,al
  41b28c:	dec    esi
  41b28d:	sub    cl,BYTE PTR ds:0x9c967af7
  41b293:	stc    
  41b294:	(bad)  
  41b295:	(bad)  
  41b296:	int    0xdf
  41b298:	loopne 0x41b2d2
  41b29a:	xchg   ecx,eax
  41b29b:	mov    esi,0xa984891d
  41b2a0:	and    DWORD PTR [eax],edi
  41b2a2:	mov    bl,0xff
  41b2a4:	popa   
  41b2a5:	jbe    0x41b2b6
  41b2a7:	arpl   WORD PTR [edi+0x5],cx
  41b2aa:	ret    0xb0cf
  41b2ad:	fistp  QWORD PTR [edi-0x3ffb9237]
  41b2b3:	mov    esp,0xf409fa9a
  41b2b8:	nop
  41b2b9:	rdtsc  
  41b2bb:	repz sub esi,eax
  41b2be:	dec    edi
  41b2bf:	inc    eax
  41b2c0:	add    eax,0x72188220
  41b2c5:	cmp    BYTE PTR [ebx],dh
  41b2c7:	nop
  41b2c8:	adc    DWORD PTR [eax-0x204c7d02],edx
  41b2ce:	fidiv  DWORD PTR [eax+0x65]
  41b2d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2d2:	push   ds
  41b2d3:	jae    0x41b2b8
  41b2d5:	mov    esi,0x5499c2b3
  41b2da:	xor    DWORD PTR ds:0xefc909cc,0x1f7850e
  41b2e4:	pop    ebp
  41b2e5:	xor    al,0xe
  41b2e7:	xchg   ebp,eax
  41b2e8:	jle    0x41b284
  41b2ea:	jno    0x41b300
  41b2ec:	dec    esp
  41b2ed:	xor    al,0x9
  41b2ef:	push   ebp
  41b2f0:	inc    edi
  41b2f1:	adc    esi,ecx
  41b2f3:	push   ecx
  41b2f4:	inc    esi
  41b2f5:	mov    ecx,0x1dfaf1ab
  41b2fa:	lahf   
  41b2fb:	mov    bl,0x16
  41b2fd:	adc    ecx,ebp
  41b2ff:	mov    ebp,0xec9c537f
  41b304:	ds push 0x3f23fc51
  41b30a:	inc    esp
  41b30b:	shr    BYTE PTR [ecx],0xb9
  41b30e:	jmp    0x41b337
  41b310:	adc    DWORD PTR [edi-0x43ce7343],0xed0c798a
  41b31a:	xchg   ebx,eax
  41b31b:	xor    esp,DWORD PTR [edi]
  41b31d:	add    eax,0x2347f979
  41b322:	pop    esp
  41b323:	sbb    al,0x75
  41b325:	cmp    dl,BYTE PTR [ebx-0x7583060c]
  41b32b:	aad    0xd6
  41b32d:	call   DWORD PTR [ebx-0x2065d23f]
  41b333:	push   0xa9580e09
  41b338:	cwde   
  41b339:	jbe    0x41b2e8
  41b33b:	bound  esi,QWORD PTR [ecx-0x2ecb3814]
  41b341:	outs   dx,BYTE PTR ds:[esi]
  41b342:	or     cl,BYTE PTR fs:[edx+0x7409d1ff]
  41b349:	cmp    cl,BYTE PTR [ecx+0x24]
  41b34c:	ins    DWORD PTR es:[edi],dx
  41b34d:	scas   al,BYTE PTR es:[edi]
  41b34e:	outs   dx,BYTE PTR ds:[esi]
  41b34f:	mov    WORD PTR [edx-0x60],gs
  41b352:	iret   
  41b353:	xor    ecx,DWORD PTR [ebx]
  41b355:	cs test eax,0x73f0bcce
  41b35b:	xor    BYTE PTR [esi+esi*8],cl
  41b35e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b35f:	mov    edx,0xa0e3de7b
  41b364:	lea    ecx,[eax]
  41b366:	test   ebx,ecx
  41b368:	std    
  41b369:	lahf   
  41b36a:	fidivr DWORD PTR [edx-0x2]
  41b36d:	mov    al,ds:0xfd0db981
  41b372:	cmc    
  41b373:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b374:	jno    0x41b3e2
  41b376:	cmp    BYTE PTR [eax+0x49],bh
  41b379:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b37a:	loopne 0x41b359
  41b37c:	xchg   edi,eax
  41b37d:	jmp    0xbabf:0x25d4af8e
  41b384:	dec    ebp
  41b385:	int3   
  41b386:	xor    eax,ecx
  41b388:	ds std 
  41b38a:	subps  xmm2,xmm1
  41b38d:	adc    bh,0x10
  41b390:	mov    ebx,DWORD PTR [edi+0x52]
  41b393:	mov    ds:0xf78b5a46,al
  41b398:	sub    DWORD PTR [ecx+0xd],0x45867840
  41b39f:	fbstp  TBYTE PTR [ebp-0x43c82d6d]
  41b3a5:	in     eax,0xad
  41b3a7:	jbe    0x41b378
  41b3a9:	xor    esi,ebp
  41b3ab:	xchg   edi,eax
  41b3ac:	stos   DWORD PTR es:[edi],eax
  41b3ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3ae:	je     0x41b404
  41b3b0:	fdivr  QWORD PTR [esi+0xe]
  41b3b3:	push   ebp
  41b3b4:	in     eax,0x77
  41b3b6:	push   ss
  41b3b7:	sub    ah,BYTE PTR [ecx+eiz*4-0x38ebe303]
  41b3be:	cmp    eax,0x2df217e4
  41b3c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3c4:	add    BYTE PTR [edx-0x75f869e2],dh
  41b3ca:	dec    ebx
  41b3cb:	jno    0x41b408
  41b3cd:	cmp    al,0xeb
  41b3cf:	shl    DWORD PTR [ebx+0x341ae35b],0x89
  41b3d6:	out    0xa8,eax
  41b3d8:	pop    ss
  41b3d9:	push   0x1a51a0e5
  41b3de:	pop    ss
  41b3df:	xchg   ebx,eax
  41b3e0:	add    dh,BYTE PTR [ebp+esi*2-0x293c9a2]
  41b3e7:	iret   
  41b3e8:	adc    BYTE PTR ds:0x20c336a0,ah
  41b3ee:	mov    ebp,0xc169e6d9
  41b3f3:	test   dl,al
  41b3f5:	loopne 0x41b475
  41b3f7:	adc    DWORD PTR [edx-0x75],esp
  41b3fa:	dec    eax
  41b3fb:	cmp    BYTE PTR [esi],dl
  41b3fd:	add    eax,0x475cb7f8
  41b402:	lods   al,BYTE PTR ds:[esi]
  41b403:	cmp    al,BYTE PTR [edi]
  41b405:	xor    DWORD PTR [edx-0x1d1b86c4],edi
  41b40b:	add    ecx,esi
  41b40d:	sbb    eax,0xc3b25e7a
  41b412:	mov    dl,0x2
  41b414:	enter  0x5028,0x75
  41b418:	add    dh,ch
  41b41a:	cmc    
  41b41b:	movzx  esp,BYTE PTR [edx+0x14387b92]
  41b422:	dec    esp
  41b423:	jb     0x41b450
  41b425:	retf   
  41b426:	jge    0x41b3ea
  41b428:	into   
  41b429:	xchg   ebx,eax
  41b42a:	push   esi
  41b42b:	in     al,dx
  41b42c:	stc    
  41b42d:	or     BYTE PTR [esi-0x63],bh
  41b430:	sub    BYTE PTR [edi+0x1d],al
  41b433:	push   ebx
  41b434:	jmp    0x582c:0xce979485
  41b43b:	in     eax,0x67
  41b43d:	ss inc eax
  41b43f:	jae    0x41b4b2
  41b441:	mov    cl,0x68
  41b443:	pop    eax
  41b444:	idiv   DWORD PTR [eax-0x42]
  41b447:	or     DWORD PTR [ecx-0x4],edi
  41b44a:	fbstp  TBYTE PTR [esi-0x43]
  41b44d:	mov    dl,0x52
  41b44f:	jecxz  0x41b427
  41b451:	ror    DWORD PTR [edi-0x20d684e6],0x66
  41b458:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b459:	sbb    DWORD PTR [edx-0x3a],edi
  41b45c:	loope  0x41b416
  41b45e:	clc    
  41b45f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b460:	dec    ebp
  41b461:	jmp    0xd7a3:0xacf93889
  41b468:	(bad)  
  41b469:	std    
  41b46a:	or     cl,BYTE PTR [edi-0x5185a93a]
  41b470:	lea    edx,[eax-0x69]
  41b473:	push   0x9
  41b475:	dec    eax
  41b476:	inc    ebx
  41b477:	clc    
  41b478:	and    DWORD PTR ds:0xddc946bd,esp
  41b47e:	or     ah,BYTE PTR [eax+esi*4]
  41b481:	xor    BYTE PTR [ecx+0x25],bh
  41b484:	pop    ebp
  41b485:	das    
  41b486:	xchg   BYTE PTR [ebp+0x5ff104f5],ah
  41b48c:	sbb    al,BYTE PTR [eax]
  41b48e:	adc    esi,ecx
  41b490:	pop    ds
  41b491:	pop    esi
  41b492:	addr16 push esp
  41b494:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b495:	xchg   ebx,eax
  41b496:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b497:	xchg   edx,eax
  41b498:	cld    
  41b499:	cli    
  41b49a:	inc    ebp
  41b49c:	inc    esi
  41b49d:	jecxz  0x41b4c3
  41b49f:	jbe    0x41b468
  41b4a1:	pop    esp
  41b4a2:	rcr    BYTE PTR [ebx],cl
  41b4a4:	ins    DWORD PTR es:[edi],dx
  41b4a5:	and    dl,BYTE PTR [ecx+0x75361d35]
  41b4ab:	sub    DWORD PTR [ecx],esp
  41b4ad:	ja     0x41b4c3
  41b4af:	fcmovu st,st(6)
  41b4b1:	cld    
  41b4b2:	ror    bh,1
  41b4b4:	fst    st(5)
  41b4b6:	out    0x1e,al
  41b4b8:	xchg   esi,eax
  41b4b9:	or     BYTE PTR [ecx-0x7c],ah
  41b4bc:	ror    esp,1
  41b4be:	mov    bh,ah
  41b4c0:	cmp    eax,0xfcc540e6
  41b4c5:	or     eax,0x5f8f880f
  41b4ca:	sub    eax,0xfe4422c8
  41b4cf:	sbb    dl,BYTE PTR [eax+0x65]
  41b4d2:	xchg   esi,eax
  41b4d3:	clc    
  41b4d4:	jmp    0x41b4b6
  41b4d6:	fnstenv [ebp-0x77]
  41b4d9:	pop    ecx
  41b4da:	fcmovnu st,st(3)
  41b4dc:	xchg   BYTE PTR [edi],cl
  41b4de:	adc    bl,ah
  41b4e0:	call   0xd596:0x4b7ff75e
  41b4e7:	xor    al,0xf1
  41b4e9:	add    DWORD PTR [eax-0x6f3d67e8],0xffffffa8
  41b4f0:	add    ebx,DWORD PTR [esi]
  41b4f2:	mov    gs,WORD PTR [ebp+0x0]
  41b4f5:	pop    es
  41b4f6:	(bad)  
  41b4f8:	test   DWORD PTR [eax],ebp
  41b4fa:	stos   BYTE PTR es:[edi],al
  41b4fb:	pop    ecx
  41b4fc:	sub    eax,0xc3571089
  41b501:	jp     0x41b54a
  41b503:	loope  0x41b565
  41b505:	loope  0x41b4ea
  41b507:	lds    eax,FWORD PTR [eiz*2-0x1c18d22d]
  41b50e:	inc    ebp
  41b50f:	pop    ss
  41b510:	bndldx bnd0,[ecx]
  41b513:	(bad)  
  41b514:	pusha  
  41b515:	dec    esp
  41b516:	int    0x75
  41b518:	(bad)  
  41b51a:	scas   al,BYTE PTR es:[edi]
  41b51b:	xchg   esp,eax
  41b51c:	ret    0x9993
  41b51f:	scas   al,BYTE PTR es:[edi]
  41b520:	jmp    0x5261d97a
  41b525:	push   edx
  41b526:	(bad)  
  41b527:	retf   0xa1ba
  41b52a:	or     eax,0x156948ef
  41b52f:	add    eax,0xe992effb
  41b534:	mov    edx,0xa1c4e8
  41b539:	(bad)  
  41b53a:	cmc    
  41b53b:	dec    esp
  41b53c:	jb     0x41b4ee
  41b53e:	or     ebx,DWORD PTR [ebx-0x690b6162]
  41b544:	mov    ah,BYTE PTR [edx-0x7f]
  41b547:	mov    DWORD PTR [eax],edx
  41b549:	or     bh,BYTE PTR [edx]
  41b54b:	stos   BYTE PTR es:[edi],al
  41b54c:	and    esi,DWORD PTR [ebp-0x4b64206f]
  41b552:	int    0x79
  41b554:	nop
  41b555:	sti    
  41b556:	mov    ds:0x2edf1ae1,eax
  41b55b:	in     eax,dx
  41b55c:	fwait
  41b55d:	in     al,0x9c
  41b55f:	mov    al,0x43
  41b561:	repnz jmp 0x905:0x1395a3c7
  41b569:	les    ebx,FWORD PTR [edx+esi*8]
  41b56c:	shr    DWORD PTR [edx+ebx*2],cl
  41b56f:	mov    esp,0x8288a89c
  41b574:	and    bl,al
  41b576:	call   0x241d87cc
  41b57b:	jl     0x41b5df
  41b57d:	sbb    dl,bh
  41b57f:	scas   al,BYTE PTR es:[edi]
  41b580:	bound  ecx,QWORD PTR [ebp-0x53]
  41b583:	lahf   
  41b584:	and    esi,edx
  41b586:	and    DWORD PTR [ecx+0x63],ebp
  41b589:	adc    eax,DWORD PTR [esi-0x68]
  41b58c:	mov    ah,0xec
  41b58e:	xor    dh,BYTE PTR [edi-0x17]
  41b591:	str    WORD PTR [edx-0x47]
  41b595:	jnp    0x41b608
  41b597:	jae    0x41b524
  41b599:	mov    dl,0xc8
  41b59b:	repnz push ecx
  41b59d:	ds es stc 
  41b5a0:	ins    BYTE PTR es:[edi],dx
  41b5a1:	aad    0x47
  41b5a3:	ja     0x41b5c8
  41b5a5:	lds    edi,FWORD PTR [esp+esi*8+0xa33ed74]
  41b5ac:	enter  0x83ea,0x5
  41b5b0:	cmp    DWORD PTR [eax],ebx
  41b5b2:	sub    eax,0xf59b90b1
  41b5b7:	or     bl,BYTE PTR [ecx-0x63]
  41b5ba:	mov    ch,BYTE PTR [esi+0x750e281d]
  41b5c0:	xor    BYTE PTR [edi-0x6cd2c40b],bh
  41b5c6:	or     al,0xcb
  41b5c8:	xchg   ebx,eax
  41b5c9:	mov    bh,0xa
  41b5cb:	jae    0x41b5d6
  41b5cd:	jle    0x41b57f
  41b5cf:	cmp    esi,DWORD PTR [eax]
  41b5d1:	jbe    0x41b5f5
  41b5d3:	daa    
  41b5d4:	xchg   ebp,eax
  41b5d5:	imul   edi,DWORD PTR [ecx],0x69
  41b5d8:	mov    edi,0xb0658cc6
  41b5dd:	pop    sp
  41b5df:	(bad)  
  41b5e0:	cmp    esi,DWORD PTR [edi-0x66]
  41b5e3:	or     bl,BYTE PTR [ecx+0x641f8723]
  41b5e9:	scas   eax,DWORD PTR es:[edi]
  41b5ea:	pop    es
  41b5eb:	mov    esp,0xc7ce534b
  41b5f0:	out    dx,al
  41b5f1:	pusha  
  41b5f2:	jbe    0x41b626
  41b5f4:	dec    esp
  41b5f5:	push   esi
  41b5f6:	repz int 0x4
  41b5f9:	int    0x52
  41b5fb:	cmc    
  41b5fc:	cwde   
  41b5fd:	mov    ch,0xf5
  41b5ff:	add    eax,0x276f8bcb
  41b604:	pop    esi
  41b605:	push   ecx
  41b606:	aad    0x81
  41b608:	inc    edx
  41b609:	sar    bh,0x61
  41b60c:	addr16 (bad) 
  41b60e:	gs adc dh,ch
  41b611:	mov    WORD PTR [esp+ebp*2],dx
  41b615:	imul   ebx,DWORD PTR [edx-0x5457c460],0xbf728103
  41b61f:	adc    ebp,esp
  41b621:	mov    dl,0xf9
  41b623:	in     al,dx
  41b624:	pop    edi
  41b625:	pop    ebx
  41b626:	ror    edx,cl
  41b628:	cmp    edi,edi
  41b62a:	ds push ss
  41b62c:	rcl    DWORD PTR [ebx],cl
  41b62e:	jle    0x41b69c
  41b630:	mov    al,ds:0xc8da300c
  41b635:	popa   
  41b636:	les    edx,FWORD PTR [eax]
  41b638:	(bad)  
  41b639:	inc    ebx
  41b63a:	call   0x1e9c52ed
  41b63f:	punpckhdq mm6,QWORD PTR [eax]
  41b642:	add    al,cl
  41b644:	jbe    0x41b646
  41b646:	stc    
  41b647:	push   cs
  41b648:	imul   ebx,DWORD PTR [eax+esi*8],0x38
  41b64c:	jbe    0x41b62b
  41b64e:	mov    esp,0x79c2d7b2
  41b653:	test   al,0x16
  41b655:	mov    BYTE PTR [ebx],al
  41b657:	jo     0x41b6c1
  41b659:	(bad)  
  41b65a:	mov    ebx,edx
  41b65c:	sbb    eax,0x8b133304
  41b661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b662:	mov    DWORD PTR [esi-0x4a529386],ecx
  41b668:	iret   
  41b669:	inc    edi
  41b66a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b66b:	addr16 jo 0x41b605
  41b66e:	xchg   esi,eax
  41b66f:	(bad)  
  41b670:	fnstenv [ebx-0x7cf1d363]
  41b676:	loope  0x41b6df
  41b678:	pop    edi
  41b679:	mov    WORD PTR [eax-0x66435069],ss
  41b67f:	imul   esp,DWORD PTR [esi],0x69
  41b682:	das    
  41b683:	stos   BYTE PTR es:[edi],al
  41b684:	cmp    DWORD PTR [ecx],ebx
  41b686:	jo     0x41b627
  41b688:	adc    DWORD PTR [eax-0x70],edx
  41b68b:	je     0x41b6d1
  41b68d:	scas   al,BYTE PTR es:[edi]
  41b68e:	adc    eax,0xbce43a2a
  41b693:	adc    al,0xee
  41b695:	push   edx
  41b696:	ficomp DWORD PTR [edx-0x2ee849dd]
  41b69c:	into   
  41b69d:	mov    ds:0xbf663d7,eax
  41b6a2:	dec    edx
  41b6a3:	fisub  DWORD PTR [esi+0xa]
  41b6a6:	or     DWORD PTR [ebx],eax
  41b6a8:	cs xor eax,0x7d72843c
  41b6ae:	out    dx,eax
  41b6af:	inc    esi
  41b6b0:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41b6b2:	jmp    0x1bb40aa
  41b6b7:	xchg   ebx,eax
  41b6b8:	or     DWORD PTR [edi-0x11],ebx
  41b6bb:	test   DWORD PTR [ecx+ecx*1+0xc],esp
  41b6bf:	cmc    
  41b6c0:	test   BYTE PTR [eax-0x23],0xaa
  41b6c4:	or     DWORD PTR [edi+0x63e0fe2a],eax
  41b6ca:	adc    bl,al
  41b6cc:	mov    esi,ss
  41b6ce:	xor    DWORD PTR [edi+0x24],ecx
  41b6d1:	aam    0xcc
  41b6d3:	sar    ah,0x44
  41b6d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6d7:	(bad)  
  41b6d8:	lock adc al,0x80
  41b6db:	leave  
  41b6dc:	jbe    0x41b6ac
  41b6de:	nop
  41b6df:	xchg   esp,eax
  41b6e0:	test   dl,al
  41b6e2:	inc    esp
  41b6e3:	dec    ebp
  41b6e4:	and    ch,ah
  41b6e6:	or     eax,0x80ccc7c3
  41b6eb:	push   0xffffffdd
  41b6ed:	ins    BYTE PTR es:[edi],dx
  41b6ee:	or     esp,DWORD PTR [ecx-0x1071e0df]
  41b6f4:	pop    ebp
  41b6f5:	outs   dx,BYTE PTR ds:[esi]
  41b6f6:	ins    DWORD PTR es:[edi],dx
  41b6f7:	outs   dx,BYTE PTR ds:[esi]
  41b6f8:	push   0xffffffaa
  41b6fa:	mov    ds:0x171dd2d0,eax
  41b6ff:	pop    ebp
  41b700:	inc    ebx
  41b701:	inc    esi
  41b702:	xor    ch,BYTE PTR [edx-0x16]
  41b705:	mov    eax,ds:0x767eccc8
  41b70a:	cmp    ch,bl
  41b70c:	mov    dl,0x40
  41b70e:	sub    DWORD PTR [ebp+0x13],eax
  41b711:	(bad)  
  41b712:	push   0xf1fd7938
  41b717:	sar    BYTE PTR [esi-0x73],0x4f
  41b71b:	stos   BYTE PTR es:[edi],al
  41b71c:	inc    BYTE PTR [edi+0x5e]
  41b71f:	loopne 0x41b6a5
  41b721:	repnz push ss
  41b723:	inc    ebp
  41b724:	inc    edx
  41b725:	cmp    bl,BYTE PTR [ebp+0x41e01355]
  41b72b:	inc    ecx
  41b72c:	mov    WORD PTR [edx-0x49db3fa7],?
  41b732:	arpl   WORD PTR [ecx-0x11],ax
  41b735:	cmp    al,0x96
  41b737:	scas   al,BYTE PTR es:[edi]
  41b738:	cld    
  41b739:	cs pop eax
  41b73b:	fs xchg esp,eax
  41b73d:	xor    eax,0x5ca1b747
  41b742:	xor    eax,0x66a98828
  41b747:	mov    ch,0x5e
  41b749:	shl    BYTE PTR [ebx],1
  41b74b:	lea    edx,[ebx]
  41b74d:	mov    al,0xaf
  41b74f:	pop    ss
  41b750:	dec    esp
  41b751:	pusha  
  41b752:	push   esp
  41b753:	sub    eax,0x426d4a04
  41b758:	(bad)  
  41b759:	(bad)  
  41b75a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b75b:	sar    DWORD PTR ds:0xb5796dcc,cl
  41b761:	repnz sbb bh,ah
  41b764:	ds scas al,BYTE PTR es:[edi]
  41b766:	xchg   esp,eax
  41b767:	mov    sp,0x9baf
  41b76b:	dec    esi
  41b76c:	dec    ecx
  41b76d:	daa    
  41b76e:	das    
  41b76f:	not    DWORD PTR [ebp+0x12d1177f]
  41b775:	pop    esi
  41b776:	jmp    0x41b7db
  41b778:	mov    dl,0x78
  41b77a:	fstp   DWORD PTR [ecx+0x1482a548]
  41b780:	iret   
  41b781:	(bad)  
  41b782:	fld    TBYTE PTR [esi-0x36]
  41b785:	lea    edi,[ebp-0x31]
  41b788:	mov    dl,0x1e
  41b78a:	outs   dx,DWORD PTR ds:[esi]
  41b78b:	push   cs
  41b78c:	mov    eax,0x7a7acb1a
  41b791:	fnsave [edi+ecx*4]
  41b794:	pop    ebp
  41b795:	ins    DWORD PTR es:[edi],dx
  41b796:	pop    edi
  41b797:	outs   dx,DWORD PTR ds:[esi]
  41b798:	fnstsw WORD PTR [ecx]
  41b79a:	xchg   edi,eax
  41b79b:	xor    BYTE PTR [edi-0x2e14ddf0],ah
  41b7a1:	jns    0x41b72d
  41b7a3:	imul   edi,DWORD PTR ds:0x17dd8b40,0xffffffb8
  41b7aa:	jmp    0xe68c:0x77ec12b6
  41b7b1:	lods   eax,DWORD PTR ds:[esi]
  41b7b2:	jg     0x41b78f
  41b7b4:	ins    DWORD PTR es:[edi],dx
  41b7b5:	fdivr  DWORD PTR ss:[ebx-0x72f5d4ba]
  41b7bc:	pop    ds
  41b7bd:	div    DWORD PTR [ebx-0x30]
  41b7c0:	and    DWORD PTR [ecx+0x659280a6],esi
  41b7c6:	push   ss
  41b7c7:	xor    edi,DWORD PTR [ebx+edx*2-0x1]
  41b7cb:	dec    eax
  41b7cc:	aas    
  41b7cd:	and    DWORD PTR [edx+0xd],ebp
  41b7d0:	fwait
  41b7d1:	call   0xf19:0xc520138e
  41b7d8:	(bad)  
  41b7d9:	clc    
  41b7da:	mov    WORD PTR [ebp+ebx*8+0x85bc63a],cs
  41b7e1:	sub    al,0x35
  41b7e3:	push   ss
  41b7e4:	imul   BYTE PTR ds:0xfe106d32
  41b7ea:	and    eax,0xc1450e3f
  41b7ef:	dec    ebp
  41b7f0:	dec    esp
  41b7f1:	sub    bl,BYTE PTR [esi]
  41b7f3:	push   es
  41b7f4:	jbe    0x41b84b
  41b7f6:	xor    eax,0x770ed725
  41b7fb:	outs   dx,DWORD PTR ds:[esi]
  41b7fc:	aad    0xef
  41b7fe:	ss jle 0x41b7e2
  41b801:	xchg   edx,eax
  41b802:	mov    dh,0x24
  41b804:	or     esi,DWORD PTR [edi]
  41b806:	jmp    DWORD PTR [eax+0x56251f35]
  41b80c:	dec    ebx
  41b80d:	sti    
  41b80e:	mov    ds:0x6d4c4d12,al
  41b813:	xchg   edi,eax
  41b814:	add    DWORD PTR [edi-0x53bc66dd],0x106c2806
  41b81e:	ret    
  41b81f:	and    BYTE PTR [edx-0x30],cl
  41b822:	jbe    0x41b819
  41b824:	add    al,ah
  41b826:	dec    edx
  41b827:	shl    DWORD PTR [esi-0x327b3d38],1
  41b82d:	retf   0x4638
  41b830:	gs dec edx
  41b832:	mov    ebx,0x27d3d0e5
  41b837:	push   0xffffffc0
  41b839:	sahf   
  41b83a:	adc    ebp,esp
  41b83c:	loop   0x41b895
  41b83e:	adc    BYTE PTR [ebx],ah
  41b840:	imul   edx,DWORD PTR [edx+0x1a85ee38],0xa9cb41d8
  41b84a:	adc    esi,eax
  41b84c:	aad    0x53
  41b84e:	aam    0x2d
  41b850:	push   esp
  41b851:	popf   
  41b852:	cmp    edx,DWORD PTR [ebp+ecx*4-0xe]
  41b856:	adc    eax,DWORD PTR [edi-0x9471d00]
  41b85c:	sbb    eax,0x97c80928
  41b861:	mov    bh,0xc5
  41b863:	icebp  
  41b864:	lods   al,BYTE PTR ds:[esi]
  41b865:	ins    BYTE PTR es:[edi],dx
  41b866:	out    0x8f,al
  41b868:	jb     0x41b853
  41b86a:	mov    dh,BYTE PTR ds:0xbcd79ee6
  41b870:	icebp  
  41b871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b872:	das    
  41b873:	add    eax,0x83f07ec6
  41b878:	adc    edx,eax
  41b87a:	mov    dh,0xd3
  41b87c:	leave  
  41b87d:	sbb    eax,DWORD PTR [ecx]
  41b87f:	xor    BYTE PTR ds:0x89b44ae9,ch
  41b885:	out    0x70,al
  41b887:	jp     0x41b864
  41b889:	pop    es
  41b88a:	inc    edx
  41b88b:	cmp    eax,0xc0f43ee3
  41b890:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b891:	lods   eax,DWORD PTR es:[esi]
  41b893:	jno    0x41b845
  41b895:	and    DWORD PTR ds:0x739195a4,esp
  41b89b:	push   esi
  41b89c:	(bad)  
  41b89d:	lds    ecx,FWORD PTR [esi+0x5d9d3d91]
  41b8a3:	mov    ch,0x53
  41b8a5:	pop    eax
  41b8a6:	push   es
  41b8a7:	mov    dh,BYTE PTR [ebp-0x11]
  41b8aa:	cmp    dh,ah
  41b8ac:	lods   eax,DWORD PTR ds:[esi]
  41b8ad:	mov    ecx,0x380e7f8c
  41b8b2:	fxch   st(7)
  41b8b4:	cwde   
  41b8b5:	je     0x41b8e7
  41b8b7:	sbb    BYTE PTR [edx+eiz*2+0x6d],dl
  41b8bb:	popf   
  41b8bc:	ins    DWORD PTR es:[edi],dx
  41b8bd:	rcl    DWORD PTR [ecx-0x5320bb43],1
  41b8c3:	pop    esp
  41b8c4:	mov    al,0xf1
  41b8c6:	repz ret 
  41b8c8:	out    dx,al
  41b8c9:	jg     0x41b92d
  41b8cb:	inc    ebx
  41b8cc:	pop    eax
  41b8cd:	cmp    eax,0xdd703b29
  41b8d2:	mov    al,0x8
  41b8d4:	mov    bl,0x41
  41b8d6:	jge    0x41b90f
  41b8d8:	cmp    BYTE PTR [edx],al
  41b8da:	daa    
  41b8db:	cwde   
  41b8dc:	sub    BYTE PTR [ebp-0x2d43f0f5],cl
  41b8e2:	aam    0x9c
  41b8e4:	mov    es,WORD PTR [ecx+0x5]
  41b8e7:	and    eax,0x8e69e77d
  41b8ec:	in     al,dx
  41b8ed:	cmp    DWORD PTR [esi+ebp*4],eax
  41b8f0:	mov    edx,0xa2286365
  41b8f5:	xchg   edx,eax
  41b8f6:	sbb    BYTE PTR [esi+0x10],ah
  41b8f9:	jnp    0x41b946
  41b8fb:	pop    ds
  41b8fc:	pop    ebp
  41b8fd:	sti    
  41b8fe:	aas    
  41b8ff:	xchg   ebx,eax
  41b900:	stos   BYTE PTR es:[edi],al
  41b901:	xchg   ebx,eax
  41b902:	mov    ah,0xe4
  41b904:	ror    bh,cl
  41b906:	push   cs
  41b907:	iret   
  41b908:	add    al,0xe1
  41b90a:	adc    bl,BYTE PTR ds:0x2e6fc0c5
  41b910:	ror    esi,cl
  41b912:	dec    ecx
  41b913:	retf   0x616e
  41b916:	lahf   
  41b917:	add    al,0x87
  41b919:	lock xor dh,BYTE PTR [esi+0x408cd98b]
  41b920:	jmp    0x9cf3d422
  41b925:	cmc    
  41b926:	cdq    
  41b927:	mov    bh,0x7b
  41b929:	popa   
  41b92a:	xor    al,0x5b
  41b92c:	(bad)  [ecx-0x51]
  41b92f:	add    ch,al
  41b931:	mov    ah,0x70
  41b933:	adc    al,0xaf
  41b935:	je     0x41b8e7
  41b937:	and    DWORD PTR [edx+0x28],0xb
  41b93b:	retf   0x74b1
  41b93e:	pop    ss
  41b93f:	sbb    ebp,DWORD PTR [ebp+0x29]
  41b942:	mov    edx,0xbb33cc48
  41b947:	outs   dx,BYTE PTR ds:[esi]
  41b948:	ins    BYTE PTR es:[edi],dx
  41b949:	add    al,0xb0
  41b94b:	sbb    eax,0x4e0da5f9
  41b950:	dec    edi
  41b951:	add    ah,al
  41b953:	pop    edi
  41b954:	fs (bad) 
  41b956:	cli    
  41b957:	jbe    0x41b949
  41b959:	test   BYTE PTR [edi+0x1f0bfd0c],0x32
  41b960:	push   edi
  41b961:	ficomp WORD PTR [edi-0x1c190d48]
  41b967:	fsubp  st(6),st
  41b969:	xor    ebx,DWORD PTR [edi+0xe8d0489]
  41b96f:	xchg   ebp,eax
  41b970:	inc    edx
  41b971:	add    bh,bh
  41b973:	add    eax,0x429516
  41b978:	mov    eax,DWORD PTR [ebp-0x14]
  41b97b:	jmp    0x41dcfb
  41b980:	jb     0x41b9c1
  41b982:	sbb    eax,DWORD PTR [edx-0x703479e5]
  41b988:	retf   0x8b0f
  41b98b:	mov    al,0xa7
  41b98d:	aas    
  41b98e:	sub    BYTE PTR [ebx],al
  41b990:	or     esp,edi
  41b992:	jns    0x41ba0e
  41b994:	pop    ds
  41b995:	pop    edi
  41b996:	jp     0x41ba12
  41b998:	clc    
  41b999:	aas    
  41b99a:	fwait
  41b99b:	cmp    cl,BYTE PTR [esi-0x2b]
  41b99e:	xor    esp,DWORD PTR [ecx]
  41b9a0:	inc    ecx
  41b9a1:	das    
  41b9a2:	adc    al,0x31
  41b9a4:	loopne 0x41b92b
  41b9a6:	push   esi
  41b9a7:	lods   eax,DWORD PTR ds:[esi]
  41b9a8:	jno    0x41b9d8
  41b9aa:	push   ebx
  41b9ab:	or     eax,0x2ddb7578
  41b9b0:	xchg   ah,al
  41b9b2:	xchg   edx,eax
  41b9b3:	push   esp
  41b9b4:	push   ss
  41b9b5:	aas    
  41b9b6:	mov    esi,0x31eb2da7
  41b9bb:	push   esp
  41b9bc:	lea    esp,[edi]
  41b9be:	inc    edi
  41b9bf:	pop    ss
  41b9c0:	xchg   esp,eax
  41b9c1:	dec    edx
  41b9c2:	mov    al,0x46
  41b9c4:	ins    DWORD PTR es:[edi],dx
  41b9c5:	and    al,0x80
  41b9c7:	aaa    
  41b9c8:	int3   
  41b9c9:	cmp    DWORD PTR [ebp+0x7b],0xd
  41b9cd:	push   eax
  41b9ce:	xchg   edi,eax
  41b9cf:	dec    ebp
  41b9d1:	fidiv  WORD PTR [edi-0x3bf06f4e]
  41b9d7:	inc    ecx
  41b9d8:	adc    DWORD PTR [ebp+0x3e],0xf9475ecf
  41b9df:	sub    bl,BYTE PTR [esi+0x31]
  41b9e2:	js     0x41b986
  41b9e4:	jno    0x41b9cf
  41b9e6:	mov    bl,0x99
  41b9e8:	into   
  41b9e9:	sbb    DWORD PTR [eax+0x6c],ebx
  41b9ec:	retf   
  41b9ed:	push   ds
  41b9ee:	in     al,dx
  41b9ef:	add    bl,BYTE PTR [ebp-0xc]
  41b9f2:	out    dx,eax
  41b9f3:	mov    ch,0x47
  41b9f5:	pop    edx
  41b9f6:	daa    
  41b9f7:	cmp    BYTE PTR ss:[esi-0x24],ch
  41b9fb:	loope  0x41ba66
  41b9fd:	call   0x3be7:0x78f2e4d5
  41ba04:	push   0xffffffd1
  41ba06:	in     al,dx
  41ba07:	add    al,0x5
  41ba09:	mov    al,0xde
  41ba0b:	rcl    dh,1
  41ba0d:	cmp    DWORD PTR ds:0xb299b0aa,ebx
  41ba13:	cmp    esi,DWORD PTR [ebp+0x1b]
  41ba16:	ret    
  41ba17:	nop
  41ba18:	mov    dh,0xe9
  41ba1a:	shr    DWORD PTR [edi+0x4daefea5],1
  41ba20:	mov    dl,0xc1
  41ba22:	push   ebx
  41ba23:	test   al,0x98
  41ba25:	mov    ebx,0xf2274aa8
  41ba2a:	jge    0x41baa0
  41ba2c:	push   ebp
  41ba2d:	mov    eax,0x23d94f0e
  41ba32:	push   ss
  41ba33:	lock divps xmm1,XMMWORD PTR [edi+eiz*4-0x60caccbc]
  41ba3c:	sbb    eax,DWORD PTR [ebx]
  41ba3e:	jns    0x41ba1d
  41ba40:	and    eax,0x50f37bcc
  41ba45:	inc    ebx
  41ba46:	mov    al,bl
  41ba48:	int3   
  41ba49:	lock in eax,0xa0
  41ba4c:	pop    eax
  41ba4d:	dec    eax
  41ba4e:	ffreep st(1)
  41ba50:	out    dx,eax
  41ba51:	push   es
  41ba52:	rcl    DWORD PTR [edx-0x3b3bd998],cl
  41ba58:	sti    
  41ba59:	xchg   ebx,eax
  41ba5a:	gs jg  0x41ba0e
  41ba5d:	frstor [edx]
  41ba5f:	cmc    
  41ba60:	xchg   ebp,eax
  41ba61:	xchg   esi,eax
  41ba62:	jb     0x41ba50
  41ba64:	das    
  41ba65:	sub    ah,ah
  41ba67:	ds test BYTE PTR ss:[edi],bh
  41ba6b:	leave  
  41ba6c:	in     eax,dx
  41ba6d:	and    BYTE PTR [ecx-0xb14bd1a],cl
  41ba73:	in     eax,0x9a
  41ba75:	dec    edx
  41ba76:	sbb    ax,0x6af0
  41ba7a:	shl    DWORD PTR [esi],cl
  41ba7c:	xchg   BYTE PTR [ecx-0x3c],ch
  41ba7f:	imul   ebp,DWORD PTR ds:0xf248764,0xea46b4bb
  41ba89:	xor    al,0xfd
  41ba8b:	jle    0x41ba75
  41ba8d:	test   BYTE PTR [esi-0x76],dh
  41ba90:	leave  
  41ba91:	sti    
  41ba92:	adc    BYTE PTR [eax],0x90
  41ba95:	jo     0x41ba57
  41ba97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba98:	lods   eax,DWORD PTR ds:[esi]
  41ba99:	mov    eax,0xa759f292
  41ba9e:	adc    al,0x2f
  41baa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41baa1:	hlt    
  41baa2:	cmp    esi,DWORD PTR [ecx-0x34]
  41baa5:	dec    esp
  41baa6:	mov    bh,0xb
  41baa8:	icebp  
  41baa9:	call   0x8fb0f278
  41baae:	repnz aam 0xeb
  41bab1:	jecxz  0x41ba5a
  41bab3:	nop
  41bab4:	inc    eax
  41bab5:	push   esp
  41bab6:	addr16 xchg al,ch
  41bab9:	mov    bh,0x3d
  41babb:	inc    eax
  41babc:	jmp    0x5aa:0xf2119bd8
  41bac3:	and    DWORD PTR [ecx-0x382e812c],eax
  41bac9:	std    
  41baca:	and    eax,0x6b76c707
  41bacf:	aas    
  41bad0:	pop    edi
  41bad1:	mov    cl,0xd1
  41bad3:	mov    ebp,0xc531d680
  41bad8:	mov    bh,0x32
  41bada:	(bad)  
  41badb:	call   0xccc6:0x32fae34e
  41bae2:	sub    ecx,DWORD PTR [eax-0x1c22fe53]
  41bae8:	outs   dx,DWORD PTR ds:[esi]
  41bae9:	xchg   ebx,eax
  41baea:	sahf   
  41baeb:	cmp    eax,0x8503d085
  41baf0:	call   0x1dce3513
  41baf5:	jle    0x41bb52
  41baf7:	popa   
  41baf8:	neg    BYTE PTR ds:0x25579293
  41bafe:	mov    bh,0xcc
  41bb00:	das    
  41bb01:	push   ebp
  41bb02:	jns    0x41bb1c
  41bb04:	or     al,0x81
  41bb06:	dec    esp
  41bb07:	adc    dl,BYTE PTR [edx]
  41bb09:	lea    ecx,cs:[ebx-0x55]
  41bb0d:	paddq  mm7,QWORD PTR [edi+0x67aa0408]
  41bb14:	xchg   bh,dl
  41bb16:	push   ss
  41bb17:	adc    eax,0xa962d4a3
  41bb1c:	xor    al,0xa0
  41bb1e:	jns    0x41bb22
  41bb20:	inc    esp
  41bb21:	xor    dh,al
  41bb23:	mov    al,ds:0xe4a8891a
  41bb28:	fs stc 
  41bb2a:	cld    
  41bb2b:	jmp    FWORD PTR [ebx]
  41bb2d:	add    al,0xf2
  41bb30:	cmp    ah,BYTE PTR [edi-0x13374409]
  41bb36:	push   ds
  41bb37:	sub    BYTE PTR [edi-0x2f],0xb0
  41bb3b:	cmp    eax,DWORD PTR [ecx+0x3c]
  41bb3e:	ja     0x41bba3
  41bb40:	scas   al,BYTE PTR es:[edi]
  41bb41:	mov    cl,0x36
  41bb43:	inc    ebx
  41bb44:	test   eax,0x641691a9
  41bb49:	jns    0x41bb7f
  41bb4b:	lods   eax,DWORD PTR ds:[esi]
  41bb4c:	sub    ecx,DWORD PTR [ecx-0x63]
  41bb4f:	ja     0x41bb1a
  41bb51:	dec    esp
  41bb52:	ret    0xcf85
  41bb55:	jge    0x41bb91
  41bb57:	jno    0x41bb3a
  41bb59:	mov    ds,WORD PTR [ebx+0x1484ad24]
  41bb5f:	cli    
  41bb60:	jg     0x41bbe1
  41bb62:	inc    DWORD PTR [ebx]
  41bb64:	pop    esp
  41bb65:	test   bh,al
  41bb67:	div    cl
  41bb69:	lods   al,BYTE PTR ds:[esi]
  41bb6a:	imul   edi,DWORD PTR [edi-0x1c027171],0xc6861dd5
  41bb74:	push   ecx
  41bb75:	data16 sbb al,0x98
  41bb78:	js     0x41bbf3
  41bb7a:	sub    dl,bl
  41bb7c:	fwait
  41bb7d:	pop    ebx
  41bb7e:	jnp    0x41bb28
  41bb80:	mov    BYTE PTR [esi+0xbffda21],ch
  41bb86:	mov    bh,0xd9
  41bb88:	push   eax
  41bb89:	jmp    0xb4ea:0x29b7f19e
  41bb90:	(bad)  
  41bb91:	enter  0x42d2,0x64
  41bb95:	retf   0xde41
  41bb98:	(bad)  
  41bb99:	xor    DWORD PTR [eax+eax*4],ebp
  41bb9c:	in     al,dx
  41bb9d:	js     0x41bb31
  41bb9f:	mov    ebx,0x3d4dfe67
  41bba4:	mov    ah,BYTE PTR [edi]
  41bba6:	dec    eax
  41bba7:	mov    bl,0xbe
  41bba9:	xchg   edx,eax
  41bbaa:	mov    ebx,0x1198c889
  41bbaf:	outs   dx,BYTE PTR ds:[esi]
  41bbb0:	pushf  
  41bbb1:	fidivr WORD PTR [edx-0x31]
  41bbb4:	addr16 stc 
  41bbb6:	retf   0xd729
  41bbb9:	js     0x41bbb7
  41bbbb:	mov    edi,0x5355533c
  41bbc0:	push   ds
  41bbc1:	dec    edi
  41bbc2:	fidiv  WORD PTR [ebx+edx*2+0x13]
  41bbc6:	inc    eax
  41bbc7:	add    BYTE PTR [ecx-0x4],cl
  41bbca:	fdivr  DWORD PTR [edx+edi*4+0x2a]
  41bbce:	mov    eax,ds:0xf3e8e089
  41bbd3:	popa   
  41bbd4:	inc    esp
  41bbd5:	addr16 fcmovnb st,st(3)
  41bbd8:	jecxz  0x41bc50
  41bbda:	fldenv [ecx]
  41bbdc:	cld    
  41bbdd:	out    0xe,al
  41bbdf:	push   ebx
  41bbe0:	movd   mm5,DWORD PTR [eax+0x291c1e42]
  41bbe7:	nop
  41bbe8:	and    DWORD PTR [esi+0x548c0c39],ebp
  41bbee:	push   0x3ee8507a
  41bbf3:	test   DWORD PTR [edx],esp
  41bbf5:	idiv   ecx
  41bbf7:	inc    esi
  41bbf8:	shl    dh,0xe0
  41bbfb:	mov    esi,DWORD PTR [edi]
  41bbfd:	add    BYTE PTR [ebp-0x1f],dh
  41bc00:	rcl    BYTE PTR [ebp+0x2170a3f],1
  41bc06:	sbb    ch,cl
  41bc08:	(bad)  
  41bc09:	mov    ecx,0x54df7d13
  41bc0e:	add    BYTE PTR [ebp+0x4d],bh
  41bc11:	stos   BYTE PTR es:[edi],al
  41bc12:	jp     0x41bbdf
  41bc14:	mov    dh,0x68
  41bc16:	mov    edi,0x7b58aba5
  41bc1b:	jmp    0xaaf:0xd30697b7
  41bc22:	jg     0x41bc9f
  41bc24:	pop    esi
  41bc25:	pop    edx
  41bc26:	adc    BYTE PTR [esi-0x7f02785f],cl
  41bc2c:	pop    eax
  41bc2d:	xchg   ebx,eax
  41bc2e:	stos   DWORD PTR es:[edi],eax
  41bc2f:	neg    DWORD PTR [eax-0x2]
  41bc32:	mov    WORD PTR [eax-0x4d1edf64],es
  41bc38:	push   esp
  41bc39:	sbb    ah,BYTE PTR es:[ecx+0x55086688]
  41bc40:	jl     0x41bcc1
  41bc42:	fnstcw WORD PTR [edi-0x6416993a]
  41bc48:	mov    bl,0xcc
  41bc4a:	enter  0xf8ea,0xce
  41bc4e:	inc    ecx
  41bc4f:	fnstsw WORD PTR ds:0x6372a3c8
  41bc55:	jnp    0x41bc92
  41bc57:	mov    ah,0x35
  41bc59:	mov    esi,fs
  41bc5b:	loope  0x41bc19
  41bc5d:	jne    0x41bc11
  41bc5f:	xor    BYTE PTR [ecx+0x37c9b71e],bl
  41bc65:	call   0x978074d6
  41bc6a:	inc    edx
  41bc6b:	out    dx,al
  41bc6c:	pop    ebx
  41bc6d:	shl    BYTE PTR [edx+esi*8-0x3aa5f006],cl
  41bc74:	cmp    ch,BYTE PTR [ebx+0xfd8cb26]
  41bc7a:	jl     0x41bc36
  41bc7c:	pop    esp
  41bc7d:	xor    BYTE PTR fs:[ecx+ecx*1+0x68],cl
  41bc82:	fdivr  DWORD PTR [edi+0x7d]
  41bc85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc86:	rcr    BYTE PTR [esi-0x4d],cl
  41bc89:	mov    ah,0x7d
  41bc8b:	repz leave 
  41bc8d:	test   cl,ch
  41bc8f:	stos   BYTE PTR es:[edi],al
  41bc90:	popf   
  41bc91:	mov    ebp,0x5f1b21a5
  41bc96:	push   0x50
  41bc98:	retf   
  41bc99:	and    cl,BYTE PTR [edx-0x5e3133b6]
  41bc9f:	aam    0xeb
  41bca1:	shl    BYTE PTR [ebx+0x30],cl
  41bca4:	daa    
  41bca5:	(bad)  
  41bca6:	jmp    0x590cc2dc
  41bcab:	scas   al,BYTE PTR es:[edi]
  41bcac:	mov    ch,0xef
  41bcae:	dec    edx
  41bcaf:	stos   DWORD PTR es:[edi],eax
  41bcb0:	daa    
  41bcb1:	jbe    0x41bc97
  41bcb3:	dec    ecx
  41bcb4:	xor    esp,ebx
  41bcb6:	inc    eax
  41bcb7:	pop    ebx
  41bcb8:	dec    ecx
  41bcb9:	lods   al,BYTE PTR ds:[esi]
  41bcba:	not    BYTE PTR [edi]
  41bcbc:	loope  0x41bcfc
  41bcbe:	adc    ebx,ecx
  41bcc0:	jle    0x41bc8b
  41bcc2:	repz jle 0x41bc74
  41bcc5:	ja     0x41bc4d
  41bcc7:	(bad)  
  41bcc8:	pop    ebx
  41bcc9:	loop   0x41bc57
  41bccb:	ror    BYTE PTR [ebx],cl
  41bccd:	inc    eax
  41bcce:	(bad)  
  41bccf:	cmp    ah,BYTE PTR [ecx-0x7]
  41bcd2:	mov    eax,0x7e0625cd
  41bcd7:	jge    0x41bd52
  41bcd9:	ror    DWORD PTR [eax-0x411644b],1
  41bcdf:	imul   ebx,DWORD PTR [esi],0x912e67d2
  41bce5:	push   edi
  41bce6:	mov    dh,0x9c
  41bce8:	(bad)  [ebx-0x3e9257e4]
  41bcee:	(bad)  
  41bcef:	sbb    al,BYTE PTR [ecx+0x3152653b]
  41bcf5:	call   0x8bcf0ce8
  41bcfa:	outs   dx,DWORD PTR ds:[esi]
  41bcfb:	fs pop edi
  41bcfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcfe:	jae    0x41bd71
  41bd00:	loopne 0x41bca3
  41bd02:	xchg   edx,eax
  41bd03:	test   al,0xa9
  41bd05:	and    al,0x1f
  41bd07:	and    al,0x51
  41bd09:	adc    DWORD PTR [ecx+0x34051140],esp
  41bd0f:	mov    ch,BYTE PTR [ebx-0x4b]
  41bd12:	jno    0x41bd6b
  41bd14:	mov    ecx,0xd09b6697
  41bd19:	ret    
  41bd1a:	xchg   BYTE PTR [ecx-0x26329e17],dl
  41bd20:	ret    0x73be
  41bd23:	pop    edx
  41bd24:	js     0x41bd42
  41bd26:	out    0xce,eax
  41bd28:	ins    BYTE PTR es:[edi],dx
  41bd29:	hlt    
  41bd2a:	jp     0x41bd87
  41bd2c:	out    dx,eax
  41bd2d:	out    dx,eax
  41bd2e:	loopne 0x41bda1
  41bd30:	daa    
  41bd31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd32:	fdiv   DWORD PTR [edi+0x20e16128]
  41bd38:	add    esp,ecx
  41bd3a:	mov    WORD PTR [ebp-0x36],es
  41bd3d:	xchg   edi,eax
  41bd3e:	out    0x66,al
  41bd40:	push   edi
  41bd41:	shr    DWORD PTR [eax-0x41],0xd4
  41bd45:	outs   dx,BYTE PTR ds:[esi]
  41bd46:	pop    esi
  41bd47:	sti    
  41bd48:	xchg   edi,eax
  41bd49:	inc    ebp
  41bd4a:	fsubr  st(1),st
  41bd4c:	js     0x41bd18
  41bd4e:	or     BYTE PTR [edx+edi*1-0x6313a28f],dh
  41bd55:	ret    0xfbbd
  41bd58:	add    eax,0xc7d0571f
  41bd5d:	sbb    DWORD PTR [ecx+0x4c],ebp
  41bd60:	aaa    
  41bd61:	push   ebp
  41bd62:	pop    edi
  41bd63:	lods   eax,DWORD PTR ds:[esi]
  41bd64:	ret    0x5eb3
  41bd67:	jecxz  0x41bd68
  41bd69:	or     BYTE PTR [edi-0x30],dl
  41bd6c:	sbb    eax,0xa8ed1ec9
  41bd71:	loope  0x41bdea
  41bd73:	fs jl  0x41bd11
  41bd76:	vpand  ymm1,ymm7,ymm0
  41bd7a:	push   0xffffffeb
  41bd7c:	(bad)  
  41bd7d:	aaa    
  41bd7e:	and    BYTE PTR [esi],ah
  41bd80:	dec    ecx
  41bd81:	je     0x41bd88
  41bd83:	call   0x78b7:0x3477cca0
  41bd8a:	mov    ss:0x56d94da2,eax
  41bd90:	push   cs
  41bd91:	popf   
  41bd92:	mov    dh,0x3c
  41bd94:	sub    esp,DWORD PTR [ecx+eiz*1-0x14f2344c]
  41bd9b:	cs cwde 
  41bd9d:	and    BYTE PTR ds:0x1e1e61de,ch
  41bda3:	push   ecx
  41bda4:	sbb    esi,DWORD PTR [esi]
  41bda6:	mov    al,ds:0x7cf264e6
  41bdab:	sbb    dh,BYTE PTR [eax-0x28]
  41bdae:	sti    
  41bdaf:	loop   0x41bde7
  41bdb1:	and    al,0xcc
  41bdb3:	clc    
  41bdb4:	stos   BYTE PTR es:[edi],al
  41bdb5:	or     BYTE PTR [esi-0x584b8f22],ch
  41bdbb:	xor    DWORD PTR [edi-0x29],esp
  41bdbe:	outs   dx,BYTE PTR ds:[esi]
  41bdbf:	es pop esi
  41bdc1:	mov    DWORD PTR [edx-0x32bc23f3],ebp
  41bdc7:	rcr    BYTE PTR [esi-0x725aac14],0x1b
  41bdce:	mov    ds:0x32a6bf9,al
  41bdd3:	fwait
  41bdd4:	pushf  
  41bdd5:	call   0x939b72ed
  41bdda:	mov    cl,0xf1
  41bddc:	mov    esp,0xc9de68ee
  41bde1:	jnp    0x41be02
  41bde3:	and    BYTE PTR [edi],cl
  41bde5:	(bad)  
  41bde6:	push   esi
  41bde7:	(bad)  
  41bde8:	jnp    0x41bd94
  41bdea:	call   0xe14ea622
  41bdef:	bts    esp,eax
  41bdf2:	out    0x55,al
  41bdf4:	sub    DWORD PTR [ecx+0x7],edi
  41bdf7:	push   esp
  41bdf8:	or     al,dl
  41bdfa:	jl     0x41bdf5
  41bdfc:	popf   
  41bdfd:	cmp    eax,DWORD PTR [ebx]
  41bdff:	popf   
  41be00:	push   esi
  41be01:	or     BYTE PTR ds:0xdbb6c9ce,bh
  41be07:	ret    
  41be08:	popf   
  41be09:	or     BYTE PTR [edx-0x72],ah
  41be0c:	jno    0x41be26
  41be0e:	jge    0x41be83
  41be10:	test   BYTE PTR [esi],ch
  41be12:	test   eax,0x62716b3e
  41be17:	popa   
  41be18:	mov    BYTE PTR [ebx-0x325b738b],dl
  41be1e:	or     ch,BYTE PTR [ebp+0x45]
  41be21:	sbb    al,0xe8
  41be23:	xchg   ebp,eax
  41be24:	cmp    edi,DWORD PTR [ebx+0x7b]
  41be27:	fld    QWORD PTR [edi-0x1047a85]
  41be2d:	call   DWORD PTR [edx]
  41be2f:	retf   
  41be30:	or     esp,DWORD PTR [eax+ebp*2]
  41be33:	xor    DWORD PTR [ebp-0x30458711],0xffffffbe
  41be3a:	fisubr DWORD PTR ds:0xb9157fbc
  41be40:	cs popa 
  41be42:	add    eax,0xfdde44bd
  41be47:	inc    esi
  41be48:	push   ds
  41be49:	or     BYTE PTR [edi],dl
  41be4b:	cwde   
  41be4c:	daa    
  41be4d:	test   al,0x74
  41be4f:	jmp    0x41be5e
  41be51:	scas   eax,DWORD PTR es:[edi]
  41be52:	add    DWORD PTR [edi+0x3a],ebp
  41be55:	push   ebx
  41be56:	dec    edx
  41be57:	xchg   ebx,eax
  41be58:	lahf   
  41be59:	data16 sub dh,BYTE PTR [ecx+0x114cb689]
  41be60:	adc    eax,0x5f8aa402
  41be65:	sahf   
  41be66:	call   0xd5d1855d
  41be6b:	es pop ds
  41be6d:	adc    DWORD PTR [eax-0x68e99566],ecx
  41be73:	xchg   ebp,eax
  41be74:	or     BYTE PTR [ebx-0x2d6681a3],ah
  41be7a:	xlat   BYTE PTR ds:[ebx]
  41be7b:	mov    ch,0x48
  41be7d:	jae    0x41be20
  41be7f:	mov    al,ds:0xb11cf35d
  41be84:	inc    ebx
  41be85:	clc    
  41be86:	sti    
  41be87:	scas   al,BYTE PTR es:[edi]
  41be88:	mov    ds:0x8bd54f78,al
  41be8d:	cmp    DWORD PTR [ebx+eax*2+0x54e1d2de],esi
  41be94:	mov    ah,bl
  41be96:	mov    ah,0xfc
  41be98:	jb     0x41beb4
  41be9a:	outs   dx,BYTE PTR ds:[esi]
  41be9b:	mov    cl,0xdb
  41be9d:	call   0x26cfca52
  41bea2:	std    
  41bea3:	stos   BYTE PTR es:[edi],al
  41bea4:	in     eax,dx
  41bea5:	mov    cl,BYTE PTR [ecx+0x17]
  41bea8:	and    esi,DWORD PTR [ebx-0x508c3693]
  41beae:	push   ss
  41beaf:	sub    al,0x84
  41beb1:	push   ebx
  41beb2:	and    edx,ebp
  41beb4:	xor    ebx,DWORD PTR [edi-0x173425fb]
  41beba:	mov    bl,BYTE PTR ds:0x3c623a8e
  41bec0:	jno    0x41bec9
  41bec2:	es fs cmp al,0x36
  41bec6:	dec    ebx
  41bec7:	jp     0x41beb2
  41bec9:	mov    ds:0x834afd3c,eax
  41bece:	xchg   esi,eax
  41becf:	mov    ebp,0xaef46737
  41bed4:	xchg   edi,eax
  41bed5:	jecxz  0x41be6f
  41bed7:	mov    al,0x4a
  41bed9:	push   es
  41beda:	xchg   edi,eax
  41bedb:	jnp    0x41bf54
  41bedd:	mov    dh,0xb0
  41bedf:	push   ss
  41bee0:	or     ah,BYTE PTR [edx+0x67600276]
  41bee6:	aad    0x5f
  41bee8:	and    ch,BYTE PTR [ecx-0x32c9a67d]
  41beee:	retf   
  41beef:	mov    dh,0x56
  41bef1:	xchg   ebx,eax
  41bef2:	lea    edi,[eax]
  41bef4:	pop    edi
  41bef5:	add    edx,ecx
  41bef7:	pop    esp
  41bef8:	and    BYTE PTR [edx-0x62],al
  41befb:	idiv   BYTE PTR [esi+0x6d]
  41befe:	pop    ds
  41beff:	call   0xa0e8:0xff08a71b
  41bf06:	stos   BYTE PTR es:[edi],al
  41bf07:	jno    0x41bec8
  41bf09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf0a:	or     dl,BYTE PTR [ebx+0x47e3a0b3]
  41bf10:	dec    edi
  41bf11:	inc    esi
  41bf12:	xchg   edx,eax
  41bf13:	imul   ecx,ebx,0xffffffd1
  41bf16:	dec    edi
  41bf17:	adc    al,0x6
  41bf19:	mov    eax,0xaa9fce60
  41bf1e:	mov    edi,0xd0d0fd5a
  41bf23:	adc    DWORD PTR [ecx-0x3f13df73],ebx
  41bf29:	test   al,0xd6
  41bf2b:	sub    eax,0xe6cbbc54
  41bf30:	xor    al,0x5f
  41bf32:	dec    eax
  41bf33:	leave  
  41bf34:	daa    
  41bf35:	or     esi,DWORD PTR [edi]
  41bf37:	sbb    al,ah
  41bf39:	or     BYTE PTR [ebp+eax*4-0x3cc1c8b8],dh
  41bf40:	xor    ch,BYTE PTR [esi-0x4e1f076a]
  41bf46:	push   esp
  41bf47:	fdivr  QWORD PTR [ebx]
  41bf49:	fwait
  41bf4a:	xchg   ebp,eax
  41bf4b:	dec    ecx
  41bf4c:	pop    esi
  41bf4d:	imul   esi,ebp,0xb3225e9b
  41bf53:	out    0x33,al
  41bf55:	inc    eax
  41bf56:	jg     0x41bfcc
  41bf58:	and    eax,0xc73122b9
  41bf5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf5e:	pop    edx
  41bf5f:	pop    ebx
  41bf60:	jnp    0x41bf5c
  41bf62:	bound  esp,QWORD PTR [esi-0x2e1ab823]
  41bf68:	sti    
  41bf69:	lock jg 0x41beec
  41bf6c:	dec    BYTE PTR [eax-0x52]
  41bf6f:	push   esp
  41bf70:	lods   eax,DWORD PTR ds:[esi]
  41bf71:	sub    eax,0x2d346ce9
  41bf76:	inc    eax
  41bf77:	xor    al,0xe7
  41bf79:	ss xchg ebx,eax
  41bf7b:	or     BYTE PTR [ebx],bh
  41bf7d:	sub    al,0x7e
  41bf7f:	fwait
  41bf80:	pop    ebp
  41bf81:	push   0x78
  41bf83:	push   esp
  41bf84:	cdq    
  41bf85:	rcl    DWORD PTR [edi-0x6a],1
  41bf88:	inc    ecx
  41bf89:	dec    esi
  41bf8a:	jl     0x41bfd0
  41bf8c:	mul    DWORD PTR [ebp-0x690f1ced]
  41bf92:	pusha  
  41bf93:	xor    BYTE PTR [edi+0x72677753],ah
  41bf99:	neg    BYTE PTR [eax-0x6a]
  41bf9c:	mov    ecx,0x59bbc94a
  41bfa1:	mov    ecx,0xffb48509
  41bfa6:	lds    edx,FWORD PTR [esi]
  41bfa8:	cmp    ecx,DWORD PTR [ecx]
  41bfaa:	inc    ecx
  41bfab:	pop    ss
  41bfac:	test   BYTE PTR [ebx+0x653f863],bl
  41bfb2:	pushf  
  41bfb3:	xchg   BYTE PTR [edx],ch
  41bfb5:	imul   esp,DWORD PTR [edx-0x22],0x1ebaf622
  41bfbc:	lock push cs
  41bfbe:	sbb    BYTE PTR [ecx],dl
  41bfc0:	in     al,dx
  41bfc1:	sub    eax,0xcb2189b
  41bfc6:	push   eax
  41bfc7:	out    dx,eax
  41bfc8:	xchg   esp,eax
  41bfc9:	lea    edi,[ecx]
  41bfcb:	stc    
  41bfcc:	out    0x18,eax
  41bfce:	push   ds
  41bfcf:	test   edi,esp
  41bfd1:	imul   eax,DWORD PTR [eax+esi*4+0x340f99e1],0x5e74206c
  41bfdc:	cld    
  41bfdd:	xchg   ebx,eax
  41bfde:	mov    ch,0xc9
  41bfe0:	(bad)  
  41bfe1:	xchg   edx,eax
  41bfe2:	and    BYTE PTR [esi+0x83a4c65],0x88
  41bfe9:	add    DWORD PTR [edi-0x5e85e19d],ecx
  41bfef:	loop   0x41bf9f
  41bff1:	stc    
  41bff2:	pmaddwd mm7,QWORD PTR [edx+0x3a]
  41bff6:	aam    0xfa
  41bff8:	mov    ds:0x167d26ea,eax
  41bffd:	(bad)  
  41bffe:	nop
  41bfff:	mov    BYTE PTR [edx+ebx*1],dh
  41c002:	jbe    0x41bfe1
  41c004:	ficomp WORD PTR [edi+0x40]
  41c007:	fiadd  DWORD PTR [ecx]
  41c009:	push   es
  41c00a:	fsub   QWORD PTR [ebx+0x36]
  41c00d:	das    
  41c00e:	xor    bl,BYTE PTR [esi]
  41c010:	dec    esp
  41c011:	out    dx,eax
  41c012:	mov    ah,0x32
  41c014:	add    eax,0x3be28031
  41c019:	xchg   edx,eax
  41c01a:	push   ds
  41c01b:	jmp    0xc99c3ddc
  41c020:	cmp    DWORD PTR [ebx-0xf36ae69],edx
  41c026:	bound  edi,QWORD PTR [ebx]
  41c028:	cmc    
  41c029:	in     al,dx
  41c02a:	loop   0x41c04e
  41c02c:	in     al,dx
  41c02d:	fldenv [ecx-0x39]
  41c030:	call   FWORD PTR [ebx]
  41c032:	push   esp
  41c033:	mov    esp,0x65f6bc47
  41c038:	test   eax,0xa9046be6
  41c03d:	jg     0x41bfdd
  41c03f:	(bad)  
  41c040:	test   DWORD PTR [esi],0x233eb352
  41c046:	fs mov ch,0xe4
  41c049:	(bad)  
  41c04a:	fstp   TBYTE PTR [ecx-0x24]
  41c04d:	in     eax,0xe8
  41c04f:	add    DWORD PTR [ebx+0x38],eax
  41c052:	sbb    al,0x3e
  41c054:	jbe    0x41c09b
  41c056:	inc    ebx
  41c057:	fist   DWORD PTR [edx+0x3b13620]
  41c05d:	xchg   ebp,eax
  41c05e:	ret    0x9857
  41c061:	xchg   BYTE PTR [ecx+0x6f94dc0d],dl
  41c067:	or     al,0x3b
  41c069:	(bad)
  41c06c:	jno    0x41c089
  41c06e:	pop    ecx
  41c06f:	idiv   esi
  41c071:	nop
  41c072:	jge    0x41c00a
  41c074:	adc    cl,BYTE PTR [eax-0x420d20d7]
  41c07a:	retf   0x69f0
  41c07d:	push   ebp
  41c07e:	inc    esp
  41c07f:	add    BYTE PTR [ebx],ah
  41c081:	mov    cl,0xd2
  41c083:	add    eax,0x1869825a
  41c088:	lds    esi,FWORD PTR [ebp-0x1f]
  41c08b:	inc    edi
  41c08c:	xchg   edi,eax
  41c08d:	movsx  edx,BYTE PTR [edx+0x2a485a9a]
  41c094:	lds    esp,FWORD PTR [ebp+0x144d0677]
  41c09a:	inc    eax
  41c09b:	lds    edi,FWORD PTR [edi]
  41c09d:	adc    bh,BYTE PTR [edx]
  41c09f:	inc    edi
  41c0a0:	js     0x41c07f
  41c0a2:	pop    edi
  41c0a3:	fstp   st(0)
  41c0a5:	mov    ss,WORD PTR [esi]
  41c0a7:	sbb    ecx,DWORD PTR [ecx]
  41c0a9:	(bad)  
  41c0aa:	adc    eax,0xad6f1ca6
  41c0af:	popa   
  41c0b0:	mov    cl,0x6b
  41c0b2:	dec    ebp
  41c0b3:	mov    ch,BYTE PTR ds:0x21cbd2c5
  41c0b9:	fwait
  41c0ba:	jg     0x41c12a
  41c0bc:	fisubr WORD PTR [ebx]
  41c0be:	pop    esi
  41c0bf:	shl    dl,0x7c
  41c0c2:	push   edx
  41c0c3:	pushf  
  41c0c4:	adc    eax,0xf4a712f
  41c0c9:	sti    
  41c0ca:	mov    al,ds:0xa60f807e
  41c0cf:	gs or  ah,dh
  41c0d2:	sti    
  41c0d3:	dec    esp
  41c0d4:	sub    ebx,DWORD PTR [ebp-0x1b]
  41c0d7:	int    0x4c
  41c0d9:	ret    0xc940
  41c0dc:	pop    edx
  41c0dd:	mov    bh,0x69
  41c0df:	(bad)  
  41c0e0:	jge    0x41c085
  41c0e2:	inc    esi
  41c0e3:	mov    cl,0x1f
  41c0e5:	inc    eax
  41c0e6:	sbb    edx,edi
  41c0e8:	mov    dl,dh
  41c0ea:	jae    0x41c15a
  41c0ec:	mov    bl,0x15
  41c0ee:	fist   DWORD PTR [ebp-0x41a33d44]
  41c0f4:	cmp    DWORD PTR [ecx-0x43],ebp
  41c0f7:	inc    esi
  41c0f8:	cs pop esp
  41c0fa:	inc    ecx
  41c0fb:	nop
  41c0fc:	xchg   edx,eax
  41c0fd:	addr16 mov ah,0x97
  41c100:	int    0x1a
  41c102:	jmp    0xca87:0x409d36b8
  41c109:	xor    al,0x30
  41c10b:	push   ds
  41c10c:	aad    0xdd
  41c10e:	iret   
  41c10f:	xchg   edi,eax
  41c110:	mov    al,ds:0x477c60e3
  41c115:	or     DWORD PTR [edx+eiz*2],0x5ea30af8
  41c11c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c11d:	cld    
  41c11e:	adc    DWORD PTR [edx],0xffffff85
  41c121:	das    
  41c122:	mov    edi,0x5c48328d
  41c127:	xchg   edi,eax
  41c128:	mov    ch,0x5c
  41c12a:	mov    bl,ah
  41c12c:	jae    0x41c15c
  41c12e:	mul    BYTE PTR [edi-0x2]
  41c131:	sahf   
  41c132:	add    ah,BYTE PTR [edi-0x1e]
  41c135:	sti    
  41c136:	hlt    
  41c137:	scas   eax,DWORD PTR es:[edi]
  41c138:	jb     0x41c119
  41c13a:	cli    
  41c13b:	cmp    ecx,ebp
  41c13d:	out    0x10,eax
  41c13f:	fisttp WORD PTR ss:[esi+0x69]
  41c143:	push   eax
  41c144:	cmp    DWORD PTR [ecx-0x8cefc90],0xa668cfce
  41c14e:	mov    ?,WORD PTR [eax]
  41c150:	and    DWORD PTR [ebx-0xe2af3f7],ebp
  41c156:	xor    DWORD PTR [esi+0x406677c6],ebx
  41c15c:	push   ebp
  41c15d:	adc    al,0x5d
  41c15f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c160:	lds    edi,FWORD PTR [edi+0x5f53083]
  41c166:	mov    ebx,0x3b365816
  41c16b:	and    eax,0xaff6b115
  41c170:	and    DWORD PTR [ecx-0x1f],0x53
  41c174:	dec    esp
  41c175:	xchg   DWORD PTR [edi],ebp
  41c177:	loope  0x41c15c
  41c179:	ficom  WORD PTR [edi]
  41c17b:	adc    BYTE PTR [ebx+0x675defa8],cl
  41c181:	mov    ?,WORD PTR ds:0xea043cf0
  41c187:	push   edx
  41c188:	cmovne esi,DWORD PTR ds:0x7c31caa7
  41c18f:	out    0x98,eax
  41c191:	push   eax
  41c192:	add    ebx,DWORD PTR [ebp-0xc]
  41c195:	xor    eax,0xa591580a
  41c19a:	push   esi
  41c19b:	sbb    ebp,DWORD PTR [eax*2+0x52d6c15b]
  41c1a2:	push   cs
  41c1a3:	leave  
  41c1a4:	lea    eax,[ebx]
  41c1a6:	aam    0x1b
  41c1a8:	shl    DWORD PTR [eax],cl
  41c1aa:	jp     0x41c173
  41c1ac:	adc    dh,BYTE PTR [ecx-0x21]
  41c1af:	icebp  
  41c1b0:	adc    cl,BYTE PTR [eax+0x4f]
  41c1b3:	jmp    0x3867fc49
  41c1b8:	arpl   si,si
  41c1ba:	pop    esp
  41c1bb:	sub    BYTE PTR [ebx],bl
  41c1bd:	scas   eax,DWORD PTR es:[edi]
  41c1be:	xchg   esi,eax
  41c1bf:	ror    BYTE PTR [edx],0x5f
  41c1c2:	(bad)  [ecx]
  41c1c4:	test   BYTE PTR [esi+0x51957833],bh
  41c1ca:	jl     0x41c17c
  41c1cc:	push   0xffffff90
  41c1ce:	hlt    
  41c1cf:	sbb    esi,0x1e84ac28
  41c1d5:	pop    ebp
  41c1d6:	enter  0x1016,0x95
  41c1da:	mov    ch,0x66
  41c1dc:	jns    0x41c1da
  41c1de:	ficom  WORD PTR [esi-0x7f27ee02]
  41c1e4:	ds hlt 
  41c1e6:	xor    BYTE PTR [eax-0x57],al
  41c1e9:	sub    BYTE PTR [ecx-0x60],0x84
  41c1ed:	es sbb BYTE PTR ds:[edx-0x41],0x80
  41c1f3:	hlt    
  41c1f4:	push   ecx
  41c1f5:	sub    eax,DWORD PTR [ebp+eiz*2-0x62136e39]
  41c1fc:	mov    ebx,0xaca50228
  41c201:	jg     0x41c1d1
  41c203:	aas    
  41c204:	sub    ecx,DWORD PTR [ebx+0x46d2e0d]
  41c20a:	fild   DWORD PTR [ebp+eiz*2+0x67]
  41c20e:	inc    ebx
  41c20f:	aad    0xbb
  41c211:	jl     0x41c217
  41c213:	mov    al,ds:0x984f7be2
  41c218:	sbb    ch,BYTE PTR [esi]
  41c21a:	sbb    edx,0x586e3e18
  41c220:	xlat   BYTE PTR ds:[ebx]
  41c221:	call   0xf9cc:0xb1016045
  41c228:	shl    DWORD PTR [edi],0xab
  41c22b:	stos   DWORD PTR es:[edi],eax
  41c22c:	mov    dh,0xbf
  41c22e:	or     eax,0x8749c1ae
  41c233:	hlt    
  41c234:	xchg   ecx,eax
  41c235:	xchg   esi,eax
  41c236:	xchg   DWORD PTR [ecx],edx
  41c238:	popa   
  41c239:	push   ecx
  41c23a:	xlat   BYTE PTR ds:[ebx]
  41c23b:	mov    DWORD PTR [eax],edx
  41c23d:	(bad)  
  41c23e:	inc    edx
  41c23f:	in     eax,dx
  41c240:	loopne 0x41c23b
  41c242:	dec    ecx
  41c243:	imul   ebp,DWORD PTR [esi],0xbf52cb56
  41c249:	jge    0x41c2ba
  41c24b:	sahf   
  41c24c:	sbb    BYTE PTR [edx-0x2afb8011],ch
  41c252:	fistp  WORD PTR [ecx+0x4a]
  41c255:	in     eax,0xd9
  41c257:	retf   
  41c258:	daa    
  41c259:	mov    dh,0xf6
  41c25b:	or     eax,0x3b15d052
  41c260:	fabs   
  41c262:	or     cl,BYTE PTR [ebx+0x19]
  41c265:	sub    esi,eax
  41c267:	jnp    0x41c1f4
  41c269:	cmp    ah,BYTE PTR [ebp+0x79]
  41c26c:	repnz cmp DWORD PTR [edx+0x14],0xd7d33d16
  41c274:	inc    eax
  41c275:	xchg   edx,eax
  41c276:	mov    ebp,0x8e42b116
  41c27b:	cmp    edi,DWORD PTR [ecx+0x16c53ffd]
  41c281:	jo     0x41c2ab
  41c283:	cmp    dl,bl
  41c285:	cmp    al,0x79
  41c287:	mov    eax,ds:0xdc0e10b5
  41c28c:	xlat   BYTE PTR ds:[ebx]
  41c28d:	and    esi,esp
  41c28f:	loope  0x41c220
  41c291:	cmc    
  41c292:	xor    DWORD PTR [edx+0x5d4aa212],ebx
  41c298:	sbb    al,0xc5
  41c29a:	add    cl,ch
  41c29c:	fsub   st(2),st
  41c29e:	sar    DWORD PTR [eax-0x4f329a45],cl
  41c2a4:	fisttp QWORD PTR [eax-0x5c9e8851]
  41c2aa:	cmc    
  41c2ab:	mov    dl,0x8b
  41c2ad:	xor    ebp,DWORD PTR [eax+0x4c]
  41c2b0:	out    dx,eax
  41c2b1:	cdq    
  41c2b2:	clc    
  41c2b3:	pop    edx
  41c2b4:	and    al,0x30
  41c2b6:	jle    0x41c263
  41c2b8:	or     al,0x6f
  41c2ba:	les    ecx,FWORD PTR [ebx]
  41c2bc:	push   edx
  41c2bd:	push   edx
  41c2be:	jno    0x41c25f
  41c2c0:	add    esp,DWORD PTR [eax]
  41c2c2:	xlat   BYTE PTR ds:[ebx]
  41c2c3:	xor    bh,0xa4
  41c2c6:	or     BYTE PTR [eax+0x20c1753f],cl
  41c2cc:	cmp    ah,al
  41c2ce:	push   esp
  41c2cf:	fcmovnb st,st(3)
  41c2d1:	push   edi
  41c2d2:	jnp    0x41c2ae
  41c2d4:	fwait
  41c2d5:	mov    ecx,0x291b81ba
  41c2da:	je     0x41c30d
  41c2dc:	adc    eax,0xce8c52f6
  41c2e1:	fidiv  DWORD PTR [ebx+0x212b45de]
  41c2e7:	mov    ds:0xbab02668,eax
  41c2ec:	push   esp
  41c2ed:	pop    ebx
  41c2ee:	lock mov ah,0xe2
  41c2f1:	xor    DWORD PTR [edx-0x6c],ebx
  41c2f4:	test   DWORD PTR [eax],ebp
  41c2f6:	in     al,0xc8
  41c2f8:	mov    esi,0x80ddf35b
  41c2fd:	fisubr DWORD PTR [edi]
  41c2ff:	out    dx,eax
  41c300:	aam    0x22
  41c302:	inc    esi
  41c303:	sbb    bl,ch
  41c305:	or     dl,BYTE PTR [eax-0x5f]
  41c308:	sbb    bh,dl
  41c30a:	loopne 0x41c304
  41c30c:	arpl   WORD PTR [ebx-0xde09e4a],sp
  41c312:	jmp    0x7e39:0xcb60a6c
  41c319:	mov    ebx,cs
  41c31b:	ss pop esp
  41c31d:	je     0x41c2ed
  41c31f:	mov    al,0x2e
  41c321:	mov    bh,0x6d
  41c323:	lds    esp,FWORD PTR [esi]
  41c325:	dec    edi
  41c326:	sti    
  41c327:	push   0xffffffec
  41c329:	nop
  41c32a:	imul   ebp,DWORD PTR [edx-0x44],0x74
  41c32e:	lods   eax,DWORD PTR ds:[esi]
  41c32f:	or     al,0x14
  41c331:	and    eax,0x585aa1a
  41c336:	in     eax,dx
  41c337:	dec    ebp
  41c338:	nop
  41c339:	xchg   ebp,eax
  41c33a:	push   ebx
  41c33b:	ret    0x59dc
  41c33e:	pushf  
  41c33f:	dec    esp
  41c340:	jecxz  0x41c343
  41c342:	and    eax,0xf12c7269
  41c347:	jne    0x41c303
  41c349:	lahf   
  41c34a:	inc    ebp
  41c34b:	jp     0x41c2db
  41c34d:	rcl    DWORD PTR [ecx],1
  41c34f:	(bad)  
  41c350:	ins    DWORD PTR es:[edi],dx
  41c351:	cmp    edi,DWORD PTR [ebp-0x7dc68e79]
  41c357:	out    0x9,al
  41c359:	std    
  41c35a:	bound  ecx,QWORD PTR [ebp-0x3]
  41c35d:	std    
  41c35e:	ret    0xd6f2
  41c361:	ret    0x5c25
  41c364:	adc    BYTE PTR [ebp-0x11d80910],dl
  41c36a:	pushf  
  41c36b:	cmp    edx,ecx
  41c36d:	or     eax,0x97599cf3
  41c372:	sbb    edi,DWORD PTR [eax+0x30]
  41c375:	mov    eax,0x8469e47a
  41c37a:	ds add al,dl
  41c37d:	jmp    FWORD PTR [ecx]
  41c37f:	add    DWORD PTR [esi+0x5fef1373],ecx
  41c385:	dec    esi
  41c386:	icebp  
  41c387:	in     al,dx
  41c388:	imul   esp,DWORD PTR [ebx+0x7467a96f],0x52
  41c38f:	xchg   DWORD PTR [edi+0x314c10f7],eax
  41c395:	shl    BYTE PTR [edx-0x67],1
  41c398:	les    ecx,FWORD PTR [edi+esi*8+0x1]
  41c39c:	pop    ebp
  41c39d:	jo     0x41c405
  41c39f:	xchg   ecx,eax
  41c3a0:	dec    eax
  41c3a1:	and    al,0x0
  41c3a3:	jmp    0x44ecfae5
  41c3a8:	aad    0x17
  41c3aa:	cmp    BYTE PTR [ecx],dl
  41c3ac:	leave  
  41c3ad:	sbb    ecx,DWORD PTR [ecx-0x77]
  41c3b0:	mov    ecx,0xf3feded6
  41c3b5:	pop    edx
  41c3b6:	push   0xed3a56da
  41c3bb:	mov    ecx,0x33d99b80
  41c3c0:	aad    0x60
  41c3c2:	inc    edx
  41c3c3:	mov    DWORD PTR [edi],ecx
  41c3c5:	pop    edx
  41c3c6:	cmp    BYTE PTR [ebx],0xba
  41c3c9:	leave  
  41c3ca:	and    ebx,DWORD PTR [eax-0x34bda643]
  41c3d0:	add    BYTE PTR [esi-0x75],dl
  41c3d3:	jbe    0x41c359
  41c3d5:	fistp  QWORD PTR [edx]
  41c3d7:	call   0x25642969
  41c3dc:	dec    edx
  41c3dd:	cmc    
  41c3de:	mov    bl,0x25
  41c3e0:	adc    esi,DWORD PTR [eax+0x71]
  41c3e3:	sbb    DWORD PTR [ebx+0x34152f11],ebp
  41c3e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3ea:	cwde   
  41c3eb:	mov    ah,0xc6
  41c3ed:	mov    al,0x2a
  41c3ef:	inc    ebx
  41c3f0:	rcr    DWORD PTR [eax],0xc2
  41c3f3:	jo     0x41c3a4
  41c3f5:	pop    ebx
  41c3f6:	js     0x41c3d4
  41c3f8:	xlat   BYTE PTR ds:[ebx]
  41c3f9:	add    edi,edx
  41c3fb:	popa   
  41c3fc:	pop    esp
  41c3fd:	scas   al,BYTE PTR es:[edi]
  41c3fe:	jmp    0x41c46a
  41c400:	jmp    0xfbe2:0x9201f9fd
  41c407:	push   0xd0bc2b82
  41c40c:	dec    edi
  41c40d:	push   0x51b2e23b
  41c412:	push   es
  41c413:	xor    BYTE PTR [ebp+0x73a39688],ah
  41c419:	pop    ecx
  41c41a:	nop
  41c41b:	mov    ds:0x5f0b2993,eax
  41c420:	mov    fs,WORD PTR [ecx-0x20660309]
  41c426:	test   eax,0xab2cbcd2
  41c42b:	(bad)  
  41c42c:	xor    ebx,edx
  41c42e:	add    al,0x79
  41c430:	jae    0x41c3b2
  41c432:	mov    WORD PTR [ebx+0x7850f464],?
  41c438:	call   0x205d9e9a
  41c43d:	push   ss
  41c43e:	mov    ?,WORD PTR [eax]
  41c440:	mov    ch,0x3d
  41c442:	imul   ebp,DWORD PTR [esi],0x67
  41c445:	into   
  41c446:	cmp    al,0x65
  41c448:	mov    WORD PTR [edx],fs
  41c44a:	scas   al,BYTE PTR es:[edi]
  41c44b:	jns    0x41c483
  41c44d:	ss popa 
  41c44f:	scas   eax,DWORD PTR es:[edi]
  41c450:	cld    
  41c451:	xor    al,0x81
  41c453:	leave  
  41c454:	mov    ebx,0x7e42c0db
  41c459:	mov    esp,0x60c48a00
  41c45e:	outs   dx,BYTE PTR ds:[esi]
  41c45f:	test   eax,0x73cb5213
  41c464:	jl     0x41c4b3
  41c466:	add    bh,BYTE PTR [eax+0x39]
  41c469:	gs sbb bh,al
  41c46c:	jns    0x41c43a
  41c46e:	stos   DWORD PTR es:[edi],eax
  41c46f:	add    esp,DWORD PTR [edi-0x59a06341]
  41c475:	mov    ds:0x9cdd88b3,al
  41c47a:	inc    ecx
  41c47b:	cmp    esi,DWORD PTR [ecx-0x31]
  41c47e:	ins    BYTE PTR es:[edi],dx
  41c47f:	mov    edx,esi
  41c481:	popf   
  41c482:	pop    edi
  41c483:	inc    edi
  41c484:	and    bh,ch
  41c486:	and    al,0x7e
  41c488:	pop    ds
  41c489:	jle    0x41c48f
  41c48b:	mov    WORD PTR [ecx],ds
  41c48d:	sti    
  41c48e:	sub    al,0x0
  41c490:	xor    al,0x8b
  41c492:	leave  
  41c493:	aaa    
  41c494:	push   esi
  41c495:	je     0x41c473
  41c497:	cs jmp 0x41c47d
  41c49a:	clc    
  41c49b:	dec    ebp
  41c49c:	fist   DWORD PTR [edx+0x37b1fc34]
  41c4a2:	loope  0x41c4b9
  41c4a4:	xchg   ebp,eax
  41c4a5:	fnstcw WORD PTR [edi+ecx*2+0x44040a24]
  41c4ac:	js     0x41c525
  41c4ae:	sbb    edi,eax
  41c4b0:	push   edi
  41c4b1:	scas   al,BYTE PTR es:[edi]
  41c4b2:	xchg   ebx,eax
  41c4b3:	call   0x3de004df
  41c4b8:	(bad)  
  41c4b9:	push   edi
  41c4ba:	pop    esp
  41c4bb:	push   0x57
  41c4bd:	push   ebp
  41c4be:	fsubr  st(0),st
  41c4c0:	arpl   WORD PTR [esi],bp
  41c4c2:	stos   BYTE PTR es:[edi],al
  41c4c3:	and    DWORD PTR [ebx],esi
  41c4c5:	leave  
  41c4c6:	push   ebp
  41c4c7:	add    dl,BYTE PTR [eax-0x7c]
  41c4ca:	mov    al,0xca
  41c4cc:	sub    bl,BYTE PTR [ecx-0x30]
  41c4cf:	sub    DWORD PTR [ecx+edi*8+0x4b],0x327f5a78
  41c4d7:	inc    ebx
  41c4d8:	and    al,0x5e
  41c4da:	mov    WORD PTR [ebp+0x2c0b7004],fs
  41c4e0:	call   0x7297:0x9b7fc8f
  41c4e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4e8:	(bad)  
  41c4e9:	jb     0x41c4e9
  41c4eb:	nop
  41c4ec:	jmp    0x71f5:0x994ced4b
  41c4f3:	pop    edi
  41c4f4:	mov    DWORD PTR [edi+0x15],ebp
  41c4f7:	out    0xe,eax
  41c4f9:	mov    dl,0x30
  41c4fb:	cmp    ebp,ebp
  41c4fd:	fstp   st(1)
  41c4ff:	shr    DWORD PTR [ebx+0x8330002],1
  41c505:	sti    
  41c506:	imul   esi,DWORD PTR [ecx+edi*2+0x71fdbd6b],0xffffff8d
  41c50e:	(bad)  
  41c50f:	mov    ds:0x748aabcd,al
  41c514:	mov    ebp,0xc425d836
  41c519:	mov    BYTE PTR [ebx-0x28],cl
  41c51c:	loop   0x41c543
  41c51e:	int3   
  41c51f:	rol    BYTE PTR [edx+0x1f],1
  41c522:	call   0xba85:0xa933d2d7
  41c529:	pop    ss
  41c52a:	leave  
  41c52b:	sahf   
  41c52c:	lods   eax,DWORD PTR ds:[esi]
  41c52d:	add    bl,BYTE PTR [ecx-0x367b187a]
  41c533:	pop    esp
  41c534:	push   ebp
  41c535:	and    BYTE PTR [esi-0x39],0xc2
  41c539:	js     0x41c561
  41c53b:	sub    bh,BYTE PTR [edx-0x2fdbd928]
  41c541:	rcl    cl,cl
  41c543:	loope  0x41c52b
  41c545:	in     eax,0x40
  41c547:	(bad)  
  41c548:	mov    dl,0xaf
  41c54a:	pop    ss
  41c54b:	lahf   
  41c54c:	or     eax,0x7231a51f
  41c551:	jne    0x41c4d7
  41c553:	gs push ss
  41c555:	out    0x93,eax
  41c557:	and    al,0xaa
  41c559:	iret   
  41c55a:	es out dx,eax
  41c55c:	xchg   ecx,eax
  41c55d:	xchg   esp,eax
  41c55e:	fst    DWORD PTR [eax-0x2847615b]
  41c564:	dec    ebx
  41c565:	inc    edi
  41c566:	icebp  
  41c567:	out    0xb1,eax
  41c569:	mov    dh,0xe0
  41c56b:	sbb    al,0xa9
  41c56d:	jle    0x41c559
  41c56f:	xchg   esp,eax
  41c570:	sbb    eax,0xda2e4cf5
  41c575:	push   esi
  41c576:	sub    BYTE PTR [ecx+0x300eb01a],al
  41c57c:	add    bh,bl
  41c57e:	addr16 into 
  41c580:	mov    bl,0x45
  41c582:	xor    ah,BYTE PTR [eax]
  41c584:	aad    0x57
  41c586:	xchg   edx,eax
  41c587:	jnp    0x41c605
  41c589:	xchg   ebp,eax
  41c58a:	xchg   edx,eax
  41c58b:	pusha  
  41c58c:	and    BYTE PTR [esi],0xb2
  41c58f:	retf   
  41c590:	sub    al,0xe7
  41c592:	cmp    ah,BYTE PTR [ecx]
  41c594:	cmp    eax,0x3b0b7f23
  41c599:	and    al,BYTE PTR [ebx+esi*2-0x13]
  41c59d:	and    eax,0x71794d18
  41c5a2:	mov    esi,0xf4f86890
  41c5a7:	in     al,dx
  41c5a8:	mov    dl,0x59
  41c5aa:	bound  edi,QWORD PTR [ecx-0x5e92f189]
  41c5b0:	(bad)  
  41c5b1:	mul    BYTE PTR [eax]
  41c5b3:	push   ss
  41c5b4:	lods   al,BYTE PTR ds:[esi]
  41c5b5:	inc    esi
  41c5b6:	das    
  41c5b7:	clc    
  41c5b8:	mov    cl,0xc6
  41c5ba:	mov    bl,0x37
  41c5bc:	jno    0x41c567
  41c5be:	ret    
  41c5bf:	sbb    ch,BYTE PTR [edi+0x5dd5acf3]
  41c5c5:	icebp  
  41c5c6:	sbb    al,BYTE PTR [ebx]
  41c5c8:	bound  esi,QWORD PTR [esi+0x7b]
  41c5cb:	fsubrp st(1),st
  41c5cd:	push   eax
  41c5ce:	iret   
  41c5cf:	push   edx
  41c5d0:	je     0x41c578
  41c5d2:	xchg   ebp,eax
  41c5d3:	cs (bad) 
  41c5d5:	fcom   QWORD PTR [ecx]
  41c5d7:	mov    dh,0x29
  41c5d9:	mov    ebp,0xd9c40fac
  41c5de:	add    cl,dl
  41c5e0:	xlat   BYTE PTR ds:[ebx]
  41c5e1:	mov    ds:0x53315b93,al
  41c5e6:	leave  
  41c5e7:	cmc    
  41c5e8:	inc    esp
  41c5e9:	jmp    0x5837:0x36b00953
  41c5f0:	pop    ss
  41c5f1:	dec    esi
  41c5f2:	xor    ah,ah
  41c5f4:	cmc    
  41c5f5:	dec    ecx
  41c5f6:	mov    eax,0x3ade8733
  41c5fb:	jg     0x41c5ef
  41c5fd:	pop    esp
  41c5fe:	not    dl
  41c600:	or     ebp,ebp
  41c602:	and    al,0x38
  41c604:	leave  
  41c605:	sub    dh,ch
  41c607:	add    DWORD PTR [ecx+0x73],ebx
  41c60a:	repnz mov ah,0x63
  41c60d:	sub    BYTE PTR [edx+0x59],cl
  41c610:	lds    ebp,FWORD PTR [ecx]
  41c612:	fwait
  41c613:	or     dl,ch
  41c615:	cld    
  41c616:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c617:	xor    al,0xeb
  41c619:	inc    esi
  41c61a:	test   eax,0x1a24215c
  41c61f:	cmc    
  41c620:	or     esi,esp
  41c622:	adc    esp,DWORD PTR [edx+0x565fe655]
  41c628:	push   0x8d7f6f2a
  41c62d:	push   ebx
  41c62e:	fdivr  st(1),st
  41c630:	mov    al,BYTE PTR [edi-0x80]
  41c633:	jmp    0x41c685
  41c635:	jb     0x41c5da
  41c637:	pop    esi
  41c638:	in     eax,dx
  41c639:	fxch   st(6)
  41c63b:	pop    ds
  41c63c:	sbb    al,0xdf
  41c63e:	pop    ebx
  41c63f:	dec    edi
  41c640:	add    al,0xd0
  41c642:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41c644:	xor    BYTE PTR [edx+ecx*8+0x54],cl
  41c648:	in     al,0x44
  41c64a:	or     DWORD PTR [ecx-0x4c6e5112],ebx
  41c650:	and    BYTE PTR [ecx-0x4d],bh
  41c653:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c654:	nop
  41c655:	mov    ds:0x30491f99,eax
  41c65a:	pop    ebp
  41c65b:	loopne 0x41c664
  41c65d:	retf   
  41c65e:	mov    eax,ds:0x5e1f22f0
  41c663:	cmp    dh,dl
  41c665:	sar    DWORD PTR [ecx+0x7a],cl
  41c668:	lods   al,BYTE PTR ds:[esi]
  41c669:	mov    ch,BYTE PTR [eax]
  41c66b:	and    ah,dh
  41c66d:	sub    esi,eax
  41c66f:	sbb    eax,DWORD PTR [eax-0x75ebc1f3]
  41c675:	mov    edx,DWORD PTR [esi]
  41c677:	outs   dx,DWORD PTR ds:[esi]
  41c678:	sub    BYTE PTR [esp+edi*2-0x62],al
  41c67c:	sbb    eax,0x3c6eb6ad
  41c681:	xchg   ecx,eax
  41c682:	(bad)  
  41c683:	in     al,dx
  41c684:	loopne 0x41c67e
  41c686:	adc    al,0xa3
  41c688:	fcomp  DWORD PTR [edx]
  41c68a:	xchg   edx,eax
  41c68b:	and    ah,al
  41c68d:	lds    esi,FWORD PTR [ebx]
  41c68f:	in     eax,dx
  41c690:	mov    BYTE PTR [esi+0xa],cl
  41c693:	retf   0xf6c1
  41c696:	adc    al,0x38
  41c698:	jmp    0x41c65d
  41c69a:	fsub   DWORD PTR [eax-0x3c]
  41c69d:	(bad)  
  41c69e:	xor    esp,DWORD PTR ss:[edi+0x70]
  41c6a2:	xchg   edi,eax
  41c6a3:	adc    edx,DWORD PTR [eax-0x47]
  41c6a6:	dec    eax
  41c6a7:	or     BYTE PTR [esi+0x3a032f6d],bh
  41c6ad:	cmp    eax,0xba373e39
  41c6b2:	fcmovu st,st(6)
  41c6b4:	sti    
  41c6b5:	shl    ebx,1
  41c6b7:	test   eax,0x3f00cf64
  41c6bc:	xor    WORD PTR [esi+0x47],ax
  41c6c0:	push   edi
  41c6c1:	ret    0x1eb5
  41c6c4:	or     al,0x41
  41c6c6:	pop    esp
  41c6c7:	enter  0x434b,0x3d
  41c6cb:	test   DWORD PTR [edi],ebx
  41c6cd:	gs adc al,0x2f
  41c6d0:	mov    edx,0x4a077336
  41c6d5:	adc    dl,BYTE PTR [ebp-0x74baab82]
  41c6db:	retf   0xa374
  41c6de:	mov    al,0x1a
  41c6e0:	adc    BYTE PTR [eax-0x2a],al
  41c6e3:	loope  0x41c69f
  41c6e5:	adc    bh,ch
  41c6e7:	lods   al,BYTE PTR ds:[esi]
  41c6e8:	jnp    0x41c682
  41c6ea:	mov    edx,0xe312930e
  41c6ef:	sti    
  41c6f0:	xchg   ecx,eax
  41c6f1:	popf   
  41c6f2:	imul   ebp,edi,0x8deda39e
  41c6f8:	cld    
  41c6f9:	jne    0x41c74c
  41c6fb:	mov    al,0x60
  41c6fd:	mov    ch,0x11
  41c6ff:	adc    esi,DWORD PTR [eax+0x4b]
  41c702:	shr    BYTE PTR [esi+0x32],0x79
  41c706:	push   ebx
  41c707:	push   ecx
  41c708:	iret   
  41c709:	inc    esp
  41c70a:	or     dl,BYTE PTR [ebx+esi*1+0x48]
  41c70e:	mov    edx,0x76193043
  41c713:	je     0x41c768
  41c715:	hlt    
  41c716:	mov    ecx,0x14e96974
  41c71b:	jmp    0x697c1c09
  41c720:	mul    BYTE PTR [edi+eax*2-0x3a647fe0]
  41c727:	xchg   edx,eax
  41c728:	mov    ecx,0x9fe52565
  41c72d:	mov    ah,0x37
  41c72f:	imul   esi,DWORD PTR [ecx],0xab395106
  41c735:	inc    eax
  41c736:	add    DWORD PTR [ebx-0x431a6a66],0x21ab7e1b
  41c740:	ret    0x2f90
  41c743:	pop    eax
  41c744:	fmul   QWORD PTR [ecx+esi*8-0x22a749ee]
  41c74b:	xchg   edi,eax
  41c74c:	dec    esi
  41c74d:	sbb    al,0x89
  41c74f:	ret    
  41c750:	loopne 0x41c6e5
  41c752:	xor    al,0xa6
  41c754:	and    eax,0xb866aa98
  41c759:	push   esp
  41c75a:	inc    ecx
  41c75b:	rcl    esp,cl
  41c75d:	out    dx,al
  41c75e:	mov    ebp,0x64f7499c
  41c763:	push   0x5d0705d6
  41c768:	xor    cl,BYTE PTR ds:0xebd2b500
  41c76e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c76f:	sbb    ebp,DWORD PTR [esi-0x4e22fbfb]
  41c775:	cdq    
  41c776:	adc    al,0x3b
  41c778:	mov    esp,DWORD PTR [edi+0x4f93c3c5]
  41c77e:	or     edi,DWORD PTR [eax+eax*4]
  41c781:	mov    ds:0x7773546e,eax
  41c786:	mov    ds:0x2426a01,eax
  41c78b:	mov    edx,0x85829880
  41c790:	(bad)  
  41c791:	fnstcw WORD PTR [edi+ecx*4-0x9]
  41c795:	push   ebp
  41c796:	sub    BYTE PTR [ecx+0x5cefb320],0x19
  41c79d:	dec    esp
  41c79e:	xchg   edx,eax
  41c79f:	daa    
  41c7a0:	popf   
  41c7a1:	xor    DWORD PTR [eax],ebx
  41c7a3:	arpl   WORD PTR [ecx+eax*2-0x735b66fb],sp
  41c7aa:	inc    ebx
  41c7ab:	loopne 0x41c7d4
  41c7ad:	loopne 0x41c76f
  41c7af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7b0:	jecxz  0x41c7ba
  41c7b2:	xor    DWORD PTR [esi-0x537e9c92],esp
  41c7b8:	inc    esi
  41c7b9:	out    0x35,eax
  41c7bb:	inc    edi
  41c7bc:	loope  0x41c7bd
  41c7be:	xchg   ebp,eax
  41c7bf:	xor    DWORD PTR [esi],0xe04f8ead
  41c7c5:	ret    
  41c7c6:	mov    edi,0xffb4ac68
  41c7cb:	stos   DWORD PTR es:[edi],eax
  41c7cc:	xchg   DWORD PTR [edx],edi
  41c7ce:	and    al,BYTE PTR [ebx+0x1f5aedc0]
  41c7d4:	jmp    0x8e85:0xf3ecc8c7
  41c7db:	fst    DWORD PTR [edx+0x1668e2cf]
  41c7e1:	jnp    0x41c788
  41c7e3:	sub    DWORD PTR [ebx],edx
  41c7e5:	mov    esp,0x7b3b5950
  41c7ea:	dec    esp
  41c7eb:	mov    edi,0xfb4affcf
  41c7f0:	fiadd  WORD PTR [edi+0x74d72696]
  41c7f6:	lock inc esp
  41c7f8:	mov    WORD PTR fs:[esi+0x67addbd1],?
  41c7ff:	and    DWORD PTR [bp+di+0x62],edx
  41c803:	cmp    eax,0x1be853eb
  41c808:	add    eax,0x7fceceb5
  41c80d:	aas    
  41c80e:	cld    
  41c80f:	cmp    DWORD PTR [ebx],ebp
  41c811:	or     DWORD PTR [ecx+esi*1-0x28],esp
  41c815:	push   eax
  41c816:	pusha  
  41c817:	ins    BYTE PTR es:[edi],dx
  41c818:	jl     0x41c83c
  41c81a:	popa   
  41c81b:	xchg   edi,eax
  41c81c:	enter  0x5e8b,0xb0
  41c820:	add    cl,BYTE PTR [eax-0xf]
  41c823:	pop    eax
  41c824:	xchg   ebx,eax
  41c825:	dec    eax
  41c826:	inc    esp
  41c827:	mov    ebx,0x44604903
  41c82c:	sub    al,0x6f
  41c82e:	test   al,bl
  41c830:	xchg   ebp,eax
  41c831:	push   ss
  41c832:	push   eax
  41c833:	cs jb  0x41c83e
  41c836:	sub    ebx,ecx
  41c838:	mov    ch,0x2b
  41c83a:	or     eax,0x63a4f528
  41c83f:	jo     0x41c805
  41c841:	xchg   BYTE PTR es:[ebp+edx*4-0x58],dh
  41c846:	loope  0x41c87f
  41c848:	fmul   st(0),st
  41c84a:	out    dx,eax
  41c84b:	push   eax
  41c84c:	push   ecx
  41c84d:	ds cld 
  41c84f:	mov    ds:0x7ae6bdcf,al
  41c854:	sbb    eax,0xbe018e0a
  41c859:	repnz pop ss
  41c85b:	and    DWORD PTR ds:0x2561946b,ebx
  41c861:	or     esi,ebp
  41c863:	or     esi,eax
  41c865:	cdq    
  41c866:	into   
  41c867:	dec    edi
  41c868:	stos   DWORD PTR es:[edi],eax
  41c869:	push   esi
  41c86a:	sbb    esi,DWORD PTR [ebx-0x5aff5ba0]
  41c870:	into   
  41c871:	and    DWORD PTR [esi-0x39],ecx
  41c874:	(bad)  
  41c875:	(bad)  
  41c876:	xlat   BYTE PTR ds:[ebx]
  41c877:	ror    DWORD PTR [edx],0xd8
  41c87a:	pop    esp
  41c87b:	push   edx
  41c87c:	je     0x41c8cc
  41c87e:	xchg   edi,eax
  41c87f:	retf   0x2984
  41c882:	fisubr DWORD PTR [edi-0x72]
  41c885:	pop    esi
  41c886:	loope  0x41c818
  41c888:	pop    edi
  41c889:	nop
  41c88a:	outs   dx,BYTE PTR ds:[esi]
  41c88b:	adc    ebx,DWORD PTR [eax+0x4d]
  41c88e:	lods   al,BYTE PTR ds:[esi]
  41c88f:	inc    esp
  41c890:	stos   DWORD PTR es:[edi],eax
  41c891:	out    0x2b,al
  41c893:	xor    bl,bh
  41c895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c896:	and    dl,BYTE PTR gs:[eax+0x5]
  41c89a:	mov    WORD PTR [ebp-0x7ab00bad],ss
  41c8a0:	cwde   
  41c8a1:	(bad)  
  41c8a2:	out    dx,al
  41c8a3:	xchg   ebx,eax
  41c8a4:	inc    ebp
  41c8a5:	dec    ecx
  41c8a6:	imul   edx,DWORD PTR [esi],0xffffffb5
  41c8a9:	add    bh,BYTE PTR [ebx]
  41c8ab:	stos   BYTE PTR es:[edi],al
  41c8ac:	dec    BYTE PTR [edx*2-0x3e2a9ad8]
  41c8b3:	jnp    0x41c929
  41c8b5:	jmp    0x41c848
  41c8b7:	bound  ebx,QWORD PTR [ecx]
  41c8b9:	(bad)  
  41c8ba:	push   ss
  41c8bb:	imul   esp,DWORD PTR [eax+ecx*8+0x4d],0xd06c0b18
  41c8c3:	aaa    
  41c8c4:	inc    edx
  41c8c5:	repnz and al,0x49
  41c8c8:	dec    edi
  41c8c9:	aam    0xd
  41c8cb:	add    DWORD PTR [esi-0x74dca7fc],esp
  41c8d1:	retf   0xbe29
  41c8d4:	or     eax,0xdee830d3
  41c8d9:	add    al,BYTE PTR [edx+0x5c6755df]
  41c8df:	data16 icebp 
  41c8e1:	jl     0x41c877
  41c8e3:	popf   
  41c8e4:	cdq    
  41c8e5:	sub    DWORD PTR [eax-0x28],edi
  41c8e8:	sti    
  41c8e9:	aaa    
  41c8ea:	push   edx
  41c8eb:	inc    esi
  41c8ec:	ffree  st(7)
  41c8ee:	inc    esp
  41c8ef:	in     al,dx
  41c8f0:	adc    ebx,DWORD PTR [ebx]
  41c8f2:	and    al,BYTE PTR [edi-0x70]
  41c8f5:	dec    edx
  41c8f6:	sbb    bh,BYTE PTR ds:0x24df7004
  41c8fc:	stos   BYTE PTR es:[edi],al
  41c8fd:	push   ecx
  41c8fe:	jmp    0x69c0673a
  41c903:	jnp    0x41c8a4
  41c905:	xchg   ecx,eax
  41c906:	das    
  41c907:	(bad)  
  41c908:	hlt    
  41c909:	or     DWORD PTR [ebx-0x21a1afe0],0xb842d86a
  41c913:	cmc    
  41c914:	mov    DWORD PTR [esi],edi
  41c916:	add    al,0xf6
  41c918:	pop    ds
  41c919:	xchg   edi,eax
  41c91a:	loop   0x41c947
  41c91c:	fild   WORD PTR fs:[eax+edi*4]
  41c920:	add    bh,ch
  41c922:	ret    0xe4a8
  41c925:	mov    esi,ss
  41c927:	sbb    esi,ebx
  41c929:	addr16 add al,0x14
  41c92c:	pop    esi
  41c92d:	add    al,0x6d
  41c92f:	mov    esp,0xef77ba8b
  41c934:	pop    ss
  41c935:	ins    BYTE PTR es:[edi],dx
  41c936:	sbb    BYTE PTR [esi-0x3c0c19c6],dh
  41c93c:	and    BYTE PTR [eax+0x5c],bl
  41c93f:	adc    edx,eax
  41c941:	jmp    0x3a9f:0x3f01b4b8
  41c948:	jo     0x41c986
  41c94a:	mov    esp,0x63060218
  41c94f:	xor    bh,BYTE PTR [edi-0x4]
  41c952:	push   ss
  41c953:	sub    eax,0x73b13670
  41c958:	jbe    0x41c93b
  41c95a:	hlt    
  41c95b:	call   0xd0d0942d
  41c960:	mov    bh,0xbd
  41c962:	aas    
  41c963:	adc    al,0x65
  41c965:	fwait
  41c966:	(bad)  
  41c967:	idiv   DWORD PTR [ebx]
  41c969:	cdq    
  41c96a:	fucomp st(2)
  41c96c:	mul    DWORD PTR [ecx]
  41c96e:	in     al,0x36
  41c970:	stos   BYTE PTR es:[edi],al
  41c971:	pushf  
  41c972:	or     BYTE PTR [ebp-0xc26d240],al
  41c978:	idiv   DWORD PTR [edx+edi*1]
  41c97b:	mov    BYTE PTR [ebx-0x6ea3bed1],ch
  41c981:	cdq    
  41c982:	push   ebp
  41c983:	inc    esi
  41c984:	pop    edx
  41c985:	jp     0x41c970
  41c987:	(bad)  
  41c988:	aas    
  41c989:	lea    edi,[esi-0x34]
  41c98c:	test   DWORD PTR [ebp+0x6c],edx
  41c98f:	sahf   
  41c990:	out    0x54,eax
  41c992:	cmp    bl,BYTE PTR [ebp-0xd]
  41c995:	xchg   esi,eax
  41c996:	cli    
  41c997:	outs   dx,BYTE PTR ds:[esi]
  41c998:	inc    edi
  41c999:	and    BYTE PTR [esi-0xa],al
  41c99c:	cmp    dh,BYTE PTR [ebp+0x7b10c775]
  41c9a2:	push   ebx
  41c9a3:	jno    0x41c940
  41c9a5:	test   dl,cl
  41c9a7:	(bad)  
  41c9a8:	cmp    DWORD PTR [esi],ebx
  41c9aa:	or     BYTE PTR [esi+eiz*4],cl
  41c9ad:	lods   eax,DWORD PTR ds:[esi]
  41c9ae:	lds    edx,FWORD PTR [edi]
  41c9b0:	sbb    dh,dl
  41c9b2:	punpckhdq mm1,QWORD PTR [edi-0x75e4c367]
  41c9b9:	push   ebp
  41c9ba:	push   esi
  41c9bb:	les    edi,FWORD PTR [edx+0x2f35220d]
  41c9c1:	(bad)  
  41c9c2:	and    eax,DWORD PTR [esi+0xcdb5ebc]
  41c9c8:	cmp    DWORD PTR [ebx-0x7e],ebx
  41c9cb:	sbb    eax,0x7e1bf72a
  41c9d0:	(bad)  [ebx+0x25]
  41c9d3:	dec    esp
  41c9d4:	mov    WORD PTR [esi+0x2657a9ee],ss
  41c9da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9db:	fs jmp 0x62e6de80
  41c9e1:	jmp    0x8a4e5581
  41c9e6:	and    cl,ch
  41c9e8:	push   0xf395297f
  41c9ed:	fiadd  WORD PTR [esi+edx*4-0x7397d7b]
  41c9f4:	add    DWORD PTR [ebx+edx*8-0x6d],ebp
  41c9f8:	out    dx,eax
  41c9f9:	inc    edi
  41c9fa:	call   0x9fb72193
  41c9ff:	inc    esp
  41ca00:	sbb    DWORD PTR [ebx+0x13],edi
  41ca03:	cs shl esp,0xd6
  41ca07:	push   0xfffffff9
  41ca09:	or     al,0x5b
  41ca0b:	sbb    ah,bh
  41ca0d:	int3   
  41ca0e:	mov    al,ds:0x733057d
  41ca13:	test   al,0xbd
  41ca15:	mov    al,0x6c
  41ca17:	int3   
  41ca18:	daa    
  41ca19:	in     eax,dx
  41ca1a:	jae    0x41ca33
  41ca1c:	dec    ebp
  41ca1d:	jb     0x41ca13
  41ca1f:	pop    ebx
  41ca20:	xlat   BYTE PTR ds:[ebx]
  41ca21:	lds    edi,FWORD PTR [edx-0x4c]
  41ca24:	arpl   WORD PTR [edx-0x6e9a03af],bx
  41ca2a:	add    eax,ebx
  41ca2c:	xchg   esp,ebx
  41ca2e:	sbb    DWORD PTR [esi+0x1b],0x7d
  41ca32:	in     eax,0x5b
  41ca34:	xor    DWORD PTR [edi+0x1c],edi
  41ca37:	cmp    BYTE PTR [edx-0x2b],dl
  41ca3a:	dec    esp
  41ca3b:	push   0xffffff87
  41ca3d:	xchg   esi,eax
  41ca3e:	addr16 out dx,eax
  41ca40:	xor    BYTE PTR [eax+0x75ae0ff4],0x1e
  41ca47:	sbb    BYTE PTR [ecx-0x7cfc3ec8],al
  41ca4d:	pushf  
  41ca4e:	ss lahf 
  41ca50:	jbe    0x41ca71
  41ca52:	icebp  
  41ca53:	cmp    BYTE PTR [esi+0x3d6e93ae],bl
  41ca59:	xor    eax,0x9dd59a1f
  41ca5e:	jbe    0x41ca8a
  41ca60:	bound  edx,QWORD PTR [eax-0x17]
  41ca63:	mov    dh,ah
  41ca65:	gs call 0x93e79aac
  41ca6b:	adc    BYTE PTR [ecx+ebx*2],ah
  41ca6e:	sbb    bh,bh
  41ca70:	mov    dl,0xa7
  41ca72:	mov    ah,0x55
  41ca74:	xchg   esi,eax
  41ca75:	inc    esi
  41ca76:	int    0x3c
  41ca78:	cmp    al,0xe5
  41ca7a:	xor    bl,BYTE PTR [esi+0xd9b2080]
  41ca80:	or     esi,DWORD PTR [esi+0x6e]
  41ca83:	pushf  
  41ca84:	(bad)  
  41ca85:	out    0x86,eax
  41ca87:	dec    esi
  41ca88:	sbb    eax,0x8e6b61f8
  41ca8d:	cli    
  41ca8e:	test   ebp,eax
  41ca90:	imul   ebx,DWORD PTR [esi],0x4
  41ca93:	ins    BYTE PTR es:[edi],dx
  41ca94:	inc    ebx
  41ca95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca96:	cdq    
  41ca97:	outs   dx,BYTE PTR ds:[esi]
  41ca98:	inc    esi
  41ca99:	xor    BYTE PTR [eax+0x42],0xa7
  41ca9d:	jle    0x41ca80
  41ca9f:	gs ret 
  41caa1:	popa   
  41caa2:	xor    al,0x0
  41caa4:	mov    ch,0x22
  41caa6:	mov    ds:0xcc7ddc87,al
  41caab:	xchg   esp,eax
  41caac:	sahf   
  41caad:	mov    al,0x91
  41caaf:	jns    0x41cae3
  41cab1:	adc    edx,DWORD PTR [ebx+0x12]
  41cab4:	jo     0x41cacc
  41cab6:	pop    es
  41cab7:	pop    es
  41cab8:	shl    BYTE PTR [ebx],1
  41caba:	ja     0x41ca6c
  41cabc:	aaa    
  41cabd:	repnz jecxz 0x41caab
  41cac0:	jle    0x41ca87
  41cac2:	push   ebx
  41cac3:	std    
  41cac4:	push   0x20
  41cac6:	loop   0x41ca8b
  41cac8:	pop    es
  41cac9:	jle    0x41cab5
  41cacb:	test   DWORD PTR ds:0xc78dbdb8,0xe872b574
  41cad5:	scas   al,BYTE PTR es:[edi]
  41cad6:	repnz mov ah,0x54
  41cad9:	aad    0xf8
  41cadb:	les    ecx,FWORD PTR [esi]
  41cadd:	ins    BYTE PTR es:[edi],dx
  41cade:	sbb    DWORD PTR [esi+eax*4+0x4b],0xa2af2012
  41cae6:	jbe    0x41cae2
  41cae8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cae9:	inc    BYTE PTR [esi-0x1c580fc0]
  41caef:	mov    esi,0xd50ee312
  41caf4:	push   ds
  41caf5:	cmp    eax,0x1edfa07
  41cafa:	outs   dx,BYTE PTR ds:[esi]
  41cafb:	nop
  41cafc:	in     al,0xd6
  41cafe:	or     eax,0x43b6a232
  41cb03:	push   esp
  41cb04:	outs   dx,BYTE PTR ds:[esi]
  41cb05:	mov    eax,0x636d9908
  41cb0a:	sub    esi,DWORD PTR [ecx+0x1d73246]
  41cb10:	mov    ah,0x22
  41cb12:	in     eax,0x58
  41cb14:	pop    ss
  41cb15:	dec    eax
  41cb16:	lock mov ebp,0x74025862
  41cb1c:	out    dx,eax
  41cb1d:	adc    ebp,DWORD PTR [ecx]
  41cb1f:	pop    edi
  41cb20:	push   es
  41cb21:	pop    esp
  41cb22:	(bad)  
  41cb23:	adc    al,0xba
  41cb25:	lds    ecx,FWORD PTR [ebp-0x21]
  41cb28:	sbb    dl,0x82
  41cb2b:	ret    0xfa6d
  41cb2e:	aad    0x9e
  41cb30:	dec    ebx
  41cb31:	xchg   DWORD PTR [esi+eiz*2-0x720a2e92],ebx
  41cb38:	stc    
  41cb39:	pop    ebp
  41cb3a:	inc    edx
  41cb3b:	xlat   BYTE PTR ds:[ebx]
  41cb3c:	iret   
  41cb3d:	inc    esi
  41cb3e:	bound  edi,QWORD PTR [eax]
  41cb40:	xchg   esi,eax
  41cb41:	fcomp  QWORD PTR [ecx-0x45]
  41cb44:	lods   eax,DWORD PTR ds:[esi]
  41cb45:	das    
  41cb46:	pop    ds
  41cb47:	data16 scas al,BYTE PTR es:[edi]
  41cb49:	mov    edi,0x4cc7e94e
  41cb4e:	js     0x41cb57
  41cb50:	push   0x1840324f
  41cb55:	out    dx,al
  41cb56:	sbb    ebx,DWORD PTR [ecx+0x760f822d]
  41cb5c:	(bad)  
  41cb5d:	mov    bl,0x16
  41cb5f:	or     esp,DWORD PTR [ebx+0x12]
  41cb62:	lods   al,BYTE PTR ds:[esi]
  41cb63:	scas   al,BYTE PTR es:[edi]
  41cb64:	fdiv   st,st(1)
  41cb66:	push   0x75
  41cb68:	aas    
  41cb69:	push   esp
  41cb6a:	sub    BYTE PTR [edx+0x61],ah
  41cb6d:	mov    bh,0xf0
  41cb6f:	mov    cl,0xd3
  41cb71:	aad    0x5d
  41cb73:	jp     0x41cbe5
  41cb75:	dec    edi
  41cb76:	test   BYTE PTR [ebx+ecx*1-0x4c],bl
  41cb7a:	mov    al,ds:0x86dee344
  41cb7f:	jge    0x41cb69
  41cb81:	xor    ah,BYTE PTR [ebp+0x2beebdf4]
  41cb87:	mov    ds:0xe68071ee,al
  41cb8c:	repz popa 
  41cb8e:	xchg   esi,eax
  41cb8f:	xlat   BYTE PTR ds:[ebx]
  41cb90:	jbe    0x41cb44
  41cb92:	inc    ecx
  41cb93:	std    
  41cb94:	cmp    BYTE PTR [eax+eiz*4],ch
  41cb97:	(bad)  
  41cb98:	mov    ebp,0xeb624b7
  41cb9d:	fs mov dl,0xb6
  41cba0:	cmp    dh,ah
  41cba2:	aam    0xf1
  41cba4:	ror    DWORD PTR [ecx-0x4a],0x69
  41cba8:	sub    ebx,DWORD PTR [eax]
  41cbaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbab:	outs   dx,BYTE PTR ds:[esi]
  41cbac:	retf   0xaa98
  41cbaf:	popa   
  41cbb0:	push   ds
  41cbb1:	mov    ah,0xf0
  41cbb3:	push   eax
  41cbb4:	vunpckhpd xmm5,xmm2,XMMWORD PTR [edi]
  41cbb8:	bound  edi,QWORD PTR [ebp-0x16]
  41cbbb:	pop    ecx
  41cbbc:	(bad)  
  41cbbd:	mov    ch,0xc4
  41cbbf:	cmp    eax,0x18df4ba8
  41cbc4:	pop    esi
  41cbc5:	popf   
  41cbc6:	rol    DWORD PTR [eax],1
  41cbc8:	aad    0x69
  41cbca:	(bad)  
  41cbcb:	pusha  
  41cbcc:	in     eax,0xa9
  41cbce:	in     eax,dx
  41cbcf:	lods   al,BYTE PTR ds:[esi]
  41cbd0:	inc    edx
  41cbd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbd2:	or     DWORD PTR [ebx-0x7bf60908],eax
  41cbd8:	push   ebx
  41cbd9:	or     ebp,edi
  41cbdb:	xlat   BYTE PTR ds:[ebx]
  41cbdc:	cmp    al,0x75
  41cbde:	xor    BYTE PTR [ebx+0x56],bh
  41cbe1:	scas   al,BYTE PTR es:[edi]
  41cbe2:	pop    ebx
  41cbe3:	cdq    
  41cbe4:	jns    0x41cbc0
  41cbe6:	xchg   esp,eax
  41cbe7:	or     bh,BYTE PTR [esi+eiz*4]
  41cbea:	xor    al,0x39
  41cbec:	pop    eax
  41cbed:	jbe    0x41cc1c
  41cbef:	or     ah,0xd3
  41cbf2:	add    al,0xf5
  41cbf4:	push   edi
  41cbf5:	jae    0x41cc2d
  41cbf7:	xchg   ebx,eax
  41cbf8:	loopne 0x41cbaa
  41cbfa:	int    0x52
  41cbfc:	fstp   DWORD PTR [ebp+0x4a8187b6]
  41cc02:	push   ecx
  41cc03:	push   cs
  41cc04:	inc    BYTE PTR [esi+0x298b3a4c]
  41cc0a:	in     eax,0xdd
  41cc0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc0d:	sbb    BYTE PTR [ecx+0x40a03172],0x52
  41cc14:	adc    eax,0x9120a9e0
  41cc19:	sub    BYTE PTR [eax-0x80],0xf9
  41cc1d:	lea    esi,[esi+0x5e5ccbb6]
  41cc23:	lods   eax,DWORD PTR ds:[esi]
  41cc24:	mov    dl,0xc0
  41cc26:	fs (bad) 
  41cc28:	xlat   BYTE PTR ds:[ebx]
  41cc29:	mov    edi,0x377cf828
  41cc2e:	pop    esp
  41cc2f:	add    DWORD PTR [edi-0x39],esp
  41cc32:	push   esi
  41cc33:	inc    esi
  41cc34:	ret    
  41cc35:	std    
  41cc36:	hlt    
  41cc37:	mov    esp,0x9f1a8f69
  41cc3c:	fs dec edx
  41cc3e:	sbb    DWORD PTR [ebx+0x27],0xffffff84
  41cc42:	mov    cl,BYTE PTR [edi+0x36]
  41cc45:	lock pop es
  41cc47:	cmp    BYTE PTR [eax+0x7d],0x5d
  41cc4b:	push   ss
  41cc4c:	mov    ebx,0x76b81d0c
  41cc51:	cld    
  41cc52:	or     ebx,ecx
  41cc54:	repz cmp al,0x73
  41cc57:	jecxz  0x41cc1a
  41cc59:	fs aam 0x98
  41cc5c:	pop    ss
  41cc5d:	sbb    ebx,DWORD PTR [edx+0x1e34ca88]
  41cc63:	idiv   BYTE PTR [edi+0x79]
  41cc66:	aad    0x41
  41cc68:	dec    ebx
  41cc69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc6a:	sbb    dh,BYTE PTR [ebx+0x3ee6ee81]
  41cc70:	adc    DWORD PTR [ebx-0x636c95cb],eax
  41cc76:	dec    esi
  41cc77:	(bad)  [eax]
  41cc79:	inc    esi
  41cc7a:	push   ecx
  41cc7b:	jae    0x41cc6f
  41cc7d:	sbb    dl,BYTE PTR [ecx]
  41cc7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc80:	jecxz  0x41cc42
  41cc82:	mov    dl,cl
  41cc84:	cmp    BYTE PTR [ebx+ebx*4+0x66d1224e],al
  41cc8b:	mov    ebx,0xaef2cbc1
  41cc90:	add    dl,BYTE PTR [edi]
  41cc92:	pop    ebp
  41cc93:	add    edx,eax
  41cc95:	loop   0x41cc29
  41cc97:	jg     0x41cd04
  41cc99:	scas   eax,DWORD PTR es:[edi]
  41cc9a:	pop    ss
  41cc9b:	sbb    al,0xef
  41cc9d:	mov    DWORD PTR [ecx],ebx
  41cc9f:	adc    ch,BYTE PTR [esi-0x126d7898]
  41cca5:	sub    al,0x6b
  41cca7:	dec    ebx
  41cca8:	out    dx,eax
  41cca9:	sub    eax,0x278427ac
  41ccae:	fld    TBYTE PTR [ebx+0x6b80d50f]
  41ccb4:	or     ebp,DWORD PTR [edx+0x7c]
  41ccb7:	mov    dl,0x5f
  41ccb9:	push   ss
  41ccba:	dec    ebp
  41ccbb:	sub    eax,0xd71e0c14
  41ccc0:	inc    ebp
  41ccc1:	pop    edx
  41ccc2:	sub    DWORD PTR [edx-0x7e6fc27e],ecx
  41ccc8:	or     eax,0xaf94b502
  41cccd:	push   ds
  41ccce:	xchg   esp,eax
  41cccf:	scas   eax,DWORD PTR es:[edi]
  41ccd0:	dec    edx
  41ccd1:	test   BYTE PTR [eax-0x338d2bf9],0x4e
  41ccd8:	sar    DWORD PTR [edx+esi*4-0x47dc90f],1
  41ccdf:	add    eax,0xed378c96
  41cce4:	xor    al,0x8f
  41cce6:	xor    DWORD PTR fs:[eax],0xf
  41ccea:	adc    al,0x88
  41ccec:	mov    ds:0x7c35b6f7,al
  41ccf1:	sbb    eax,0x76b6e021
  41ccf6:	sar    DWORD PTR gs:[ecx+0x2c267c55],cl
  41ccfd:	test   BYTE PTR [esi+ecx*4-0x5f],0xe8
  41cd02:	sub    bl,BYTE PTR [edx+ecx*8]
  41cd05:	mov    ebp,0xa46a82b7
  41cd0a:	xchg   esp,eax
  41cd0b:	mov    ?,ecx
  41cd0d:	js     0x41cca1
  41cd0f:	dec    edi
  41cd10:	sahf   
  41cd11:	mov    ds:0xf5774f7e,eax
  41cd16:	and    al,0x18
  41cd18:	or     dh,BYTE PTR [ebp+0x13]
  41cd1b:	jl     0x41ccdb
  41cd1d:	jb     0x41cce5
  41cd1f:	mov    DWORD PTR [edx-0x7f],eax
  41cd22:	cdq    
  41cd23:	adc    eax,0x1e75903f
  41cd28:	push   esp
  41cd29:	or     eax,0xf0d429b7
  41cd2e:	imul   eax,DWORD PTR [ebx+0x62cf310],0x72726c40
  41cd38:	fnstcw WORD PTR [ecx]
  41cd3a:	mov    ebp,?
  41cd3c:	outs   dx,BYTE PTR ds:[esi]
  41cd3d:	sbb    eax,0x7290ef30
  41cd42:	mov    edx,0xcd1faee3
  41cd47:	repnz repz add al,0x40
  41cd4b:	loope  0x41cd98
  41cd4d:	retf   0xbfd5
  41cd50:	mov    eax,ds:0x9b122fc3
  41cd55:	test   al,0xe7
  41cd57:	(bad)
  41cd5b:	add    DWORD PTR [ecx+eax*2+0x5bdbe05f],0x91244e15
  41cd66:	popf   
  41cd67:	mov    eax,ds:0x48208e4
  41cd6c:	xlat   BYTE PTR ds:[ebx]
  41cd6d:	and    eax,DWORD PTR [edi+0x457a33f5]
  41cd73:	cmc    
  41cd74:	sti    
  41cd75:	mov    ds:0xa9dc5bee,al
  41cd7a:	add    dh,BYTE PTR [edx]
  41cd7c:	fst    QWORD PTR [edx-0x2feb74d1]
  41cd82:	xlat   BYTE PTR ds:[ebx]
  41cd83:	pop    edi
  41cd84:	cmp    al,0x24
  41cd86:	sbb    ebp,DWORD PTR [edi+0x469dd2fa]
  41cd8c:	xor    al,0x9
  41cd8e:	cld    
  41cd8f:	sbb    BYTE PTR [edi],0x7d
  41cd92:	and    dh,al
  41cd94:	hlt    
  41cd95:	mov    ah,0x30
  41cd97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd98:	lods   al,BYTE PTR ds:[esi]
  41cd99:	cdq    
  41cd9a:	jmp    0xf6d7:0x877a6e98
  41cda1:	ins    BYTE PTR es:[edi],dx
  41cda2:	adc    al,0xe7
  41cda4:	mov    ds:0xa7a8aaca,al
  41cda9:	push   es
  41cdaa:	into   
  41cdab:	adc    DWORD PTR [edx],ebx
  41cdad:	add    al,0x5d
  41cdaf:	push   edx
  41cdb0:	pop    edi
  41cdb1:	rcr    BYTE PTR [ebx-0x42],cl
  41cdb4:	or     dh,bl
  41cdb6:	xchg   edi,eax
  41cdb7:	push   edi
  41cdb8:	das    
  41cdb9:	mov    ?,WORD PTR [eax+edi*1-0x19]
  41cdbd:	mov    ebp,DWORD PTR [ebp+0x60]
  41cdc0:	or     DWORD PTR [edx],edi
  41cdc2:	inc    ebx
  41cdc3:	scas   al,BYTE PTR es:[edi]
  41cdc4:	ins    DWORD PTR es:[edi],dx
  41cdc5:	in     eax,0x46
  41cdc7:	xchg   DWORD PTR [ebx-0x3d],edi
  41cdca:	pop    edx
  41cdcb:	aad    0x89
  41cdcd:	or     bl,BYTE PTR [ebx+0x55d1d35b]
  41cdd3:	rcl    BYTE PTR [ecx],cl
  41cdd5:	(bad)  
  41cdd6:	cmc    
  41cdd7:	push   es
  41cdd8:	mov    ds,WORD PTR [ebx-0x4]
  41cddb:	out    0x8a,al
  41cddd:	or     al,0x1a
  41cddf:	mov    bl,BYTE PTR [eax-0x35ebe1cd]
  41cde5:	nop
  41cde6:	sbb    DWORD PTR [ecx+0x730832bb],eax
  41cdec:	inc    edx
  41cded:	adc    BYTE PTR [ebp+0x2f],cl
  41cdf0:	and    edx,ebx
  41cdf2:	adc    BYTE PTR [esi+ecx*2+0x4a],0x28
  41cdf7:	or     al,0xa9
  41cdf9:	sar    BYTE PTR [esi-0x71],0x92
  41cdfd:	ja     0x41cda3
  41cdff:	mov    ebp,0x10680060
  41ce04:	mov    ds:0x2522bcd7,eax
  41ce09:	fld    DWORD PTR [edx]
  41ce0b:	mov    ch,ch
  41ce0d:	push   edi
  41ce0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce0f:	mov    esi,0x83114ad5
  41ce14:	pop    ecx
  41ce15:	xchg   BYTE PTR [esi-0xd35fc96],dl
  41ce1b:	scas   al,BYTE PTR es:[edi]
  41ce1c:	mov    ds:0xc22d78b4,eax
  41ce21:	push   esp
  41ce22:	(bad)  
  41ce23:	aad    0x40
  41ce25:	retf   
  41ce26:	jg     0x41cea1
  41ce28:	popf   
  41ce29:	retf   0xa45d
  41ce2c:	push   esi
  41ce2d:	pop    ebp
  41ce2e:	jb     0x41cdbb
  41ce30:	imul   esp,DWORD PTR [eax+0x3d],0x25
  41ce34:	ror    esp,1
  41ce36:	ret    
  41ce37:	das    
  41ce38:	rcl    bl,0xff
  41ce3b:	cs add esi,ebx
  41ce3e:	shl    DWORD PTR [edx],0x9d
  41ce41:	jae    0x41ce7f
  41ce43:	mov    al,0x70
  41ce45:	cmp    BYTE PTR [edx+0x6e],0x1a
  41ce49:	or     BYTE PTR [ecx],al
  41ce4b:	fcmovnbe st,st(1)
  41ce4d:	jge    0x41ce5e
  41ce4f:	or     al,0x69
  41ce51:	cs inc ebp
  41ce53:	pop    edi
  41ce54:	ss or  eax,0x46e03b71
  41ce5a:	push   ds
  41ce5b:	leave  
  41ce5c:	outs   dx,DWORD PTR ds:[esi]
  41ce5d:	scas   al,BYTE PTR es:[edi]
  41ce5e:	mov    edi,0x8fa7a433
  41ce63:	and    BYTE PTR [edi+0x4972e894],ch
  41ce69:	mov    al,ds:0x77ef5f9e
  41ce6e:	cmp    ah,BYTE PTR [eax+esi*8-0x3f]
  41ce72:	dec    ebx
  41ce73:	ins    DWORD PTR es:[edi],dx
  41ce74:	(bad)  
  41ce75:	jecxz  0x41cdfb
  41ce77:	add    eax,0xaae71248
  41ce7c:	dec    ebp
  41ce7d:	xor    eax,0x8a969797
  41ce82:	outs   dx,BYTE PTR ds:[esi]
  41ce83:	cmovne ebp,DWORD PTR ds:0xb81deed1
  41ce8a:	push   edx
  41ce8b:	repnz inc esp
  41ce8d:	inc    edx
  41ce8e:	inc    edx
  41ce8f:	aam    0x45
  41ce91:	ror    esp,cl
  41ce93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce94:	inc    ebx
  41ce95:	jmp    0x41ce64
  41ce97:	daa    
  41ce98:	fstp   DWORD PTR [edx]
  41ce9a:	stc    
  41ce9b:	inc    eax
  41ce9c:	es dec cx
  41ce9f:	fsubr  DWORD PTR [edi+ebp*8]
  41cea2:	adc    DWORD PTR [esi],ecx
  41cea4:	jbe    0x41ce6e
  41cea6:	mov    ebp,0x4851c0bc
  41ceab:	dec    ebx
  41ceac:	or     al,0x99
  41ceae:	add    eax,0x8f387eb9
  41ceb3:	daa    
  41ceb4:	push   esp
  41ceb5:	push   0x33
  41ceb7:	loopne 0x41cea6
  41ceb9:	sbb    BYTE PTR [esi],cl
  41cebb:	sub    eax,0x5738f7d0
  41cec0:	push   ebp
  41cec1:	add    BYTE PTR [ecx+0x2b02c7fa],ah
  41cec7:	sbb    BYTE PTR [eax-0x69bcdfa6],0xd7
  41cece:	hlt    
  41cecf:	sub    DWORD PTR [ebx-0x241c9842],edi
  41ced5:	dec    edi
  41ced6:	xchg   ecx,eax
  41ced7:	push   esp
  41ced8:	dec    edx
  41ced9:	jb     0x41ce5d
  41cedb:	jle    0x41cea2
  41cedd:	mov    ebp,DWORD PTR [eax]
  41cedf:	dec    esi
  41cee0:	mov    bh,0x14
  41cee2:	jle    0x41cefa
  41cee4:	test   BYTE PTR ds:0xa89257e9,bl
  41ceea:	mov    ds:0xd9d11cd8,al
  41ceef:	jno    0x41ce9b
  41cef1:	pop    ebx
  41cef2:	int    0x21
  41cef4:	test   ah,ah
  41cef6:	xor    eax,DWORD PTR [ecx-0x3eb6418e]
  41cefc:	dec    edi
  41cefd:	cdq    
  41cefe:	stos   DWORD PTR es:[edi],eax
  41ceff:	jmp    0xcaa0:0xb7b10319
  41cf06:	dec    ecx
  41cf07:	cmp    DWORD PTR [edi+0x4a942899],esi
  41cf0d:	lds    ebp,FWORD PTR [ebx]
  41cf0f:	xor    ecx,DWORD PTR [ecx+0x426f98e2]
  41cf15:	jle    0x41cec8
  41cf17:	mov    BYTE PTR [edi+ebp*8],ah
  41cf1a:	xlat   BYTE PTR ds:[ebx]
  41cf1b:	or     al,0x37
  41cf1d:	into   
  41cf1e:	arpl   WORD PTR [edx-0x794ae038],si
  41cf24:	jl     0x41cef2
  41cf26:	mov    dh,0x99
  41cf28:	arpl   si,cx
  41cf2a:	rcl    DWORD PTR [eax-0x6dd722b3],0x82
  41cf31:	cmp    DWORD PTR [edi+0x3f],0x291485b9
  41cf38:	xor    eax,0x2004e062
  41cf3d:	arpl   WORD PTR fs:[ecx+eiz*8],ax
  41cf41:	daa    
  41cf42:	div    ebx
  41cf44:	and    ecx,0xdb53a42e
  41cf4a:	outs   dx,BYTE PTR ds:[esi]
  41cf4b:	leave  
  41cf4c:	ja     0x41cfc6
  41cf4e:	ret    0xacdb
  41cf51:	rol    DWORD PTR [ebx-0x9],1
  41cf54:	dec    edi
  41cf55:	and    ah,ch
  41cf57:	loopne 0x41cfcc
  41cf59:	pusha  
  41cf5a:	ret    
  41cf5b:	test   DWORD PTR [ecx+0x17536101],ecx
  41cf61:	mov    ebp,DWORD PTR [edi+0x3a]
  41cf64:	push   edi
  41cf65:	mov    al,0x45
  41cf67:	into   
  41cf68:	into   
  41cf69:	rol    BYTE PTR [edx-0x3f],1
  41cf6c:	xchg   dl,ah
  41cf6e:	and    eax,DWORD PTR [edi+eax*4+0x79]
  41cf72:	inc    esp
  41cf73:	popf   
  41cf74:	mov    fs,ebp
  41cf76:	push   esi
  41cf77:	call   0x9e3:0x6cc2bcf6
  41cf7e:	lods   al,BYTE PTR ds:[esi]
  41cf7f:	inc    ebx
  41cf80:	push   esi
  41cf81:	pusha  
  41cf82:	and    DWORD PTR [ecx-0x69],eax
  41cf85:	test   BYTE PTR [ebp+0x31ebdbe3],ch
  41cf8b:	jne    0x41d00a
  41cf8d:	jl     0x41d005
  41cf8f:	shl    BYTE PTR [ebx],cl
  41cf91:	dec    ebx
  41cf92:	dec    edi
  41cf93:	push   edi
  41cf94:	push   edi
  41cf95:	sbb    cl,BYTE PTR [eax+0x5]
  41cf98:	jp     0x41cf30
  41cf9a:	pop    eax
  41cf9b:	retf   0x1b8c
  41cf9e:	daa    
  41cf9f:	mov    ch,bl
  41cfa1:	jne    0x41cf86
  41cfa3:	mov    ecx,DWORD PTR ss:[ecx-0x29ec4a31]
  41cfaa:	jmp    0x41cfc0
  41cfac:	shr    BYTE PTR [ecx-0x63553ee9],0xa0
  41cfb3:	ja     0x41cf7e
  41cfb5:	jmp    FWORD PTR [eax]
  41cfb7:	mov    bh,0xe3
  41cfb9:	mov    BYTE PTR [ecx],0x6e
  41cfbc:	and    ah,dl
  41cfbe:	dec    edi
  41cfbf:	inc    edx
  41cfc0:	imul   DWORD PTR [esp+edx*2+0x3a]
  41cfc4:	sbb    BYTE PTR [ecx+0xd6310fb],bl
  41cfca:	mov    WORD PTR [eax-0xde6a999],?
  41cfd0:	mov    bh,0x79
  41cfd2:	add    eax,0x6a358ab7
  41cfd7:	jp     0x41cfb0
  41cfd9:	or     al,0xd1
  41cfdb:	lock adc BYTE PTR [ebp+0x43],bh
  41cfdf:	jl     0x41cf77
  41cfe1:	adc    eax,0xadcc845
  41cfe6:	add    al,0xe6
  41cfe8:	pop    ss
  41cfe9:	outs   dx,BYTE PTR ds:[esi]
  41cfea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfeb:	add    cl,BYTE PTR [esi]
  41cfed:	push   0xffffffc0
  41cfef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cff0:	sahf   
  41cff1:	fcmovu st,st(6)
  41cff3:	adc    ecx,ebx
  41cff5:	and    al,0x30
  41cff7:	sbb    eax,0x15c86981
  41cffc:	jecxz  0x41d003
  41cffe:	jge    0x41d00c
  41d000:	clc    
  41d001:	scas   al,BYTE PTR es:[edi]
  41d002:	lods   al,BYTE PTR ds:[esi]
  41d003:	xchg   edx,eax
  41d004:	pop    ebx
  41d005:	jmp    0x41d062
  41d007:	dec    edx
  41d008:	mov    esp,0xa878a17e
  41d00d:	mov    dh,0x4f
  41d00f:	sbb    DWORD PTR [ebx-0x4a7f9ae9],ebp
  41d015:	mov    dh,0x6a
  41d017:	iret   
  41d018:	inc    ecx
  41d019:	inc    esp
  41d01a:	aaa    
  41d01b:	fcom   st(2)
  41d01d:	sti    
  41d01e:	jl     0x41d09e
  41d020:	jne    0x41cff5
  41d022:	loopne 0x41d05a
  41d024:	pop    edx
  41d025:	jecxz  0x41cfaa
  41d027:	rcr    bl,0x3b
  41d02a:	mov    cl,0x46
  41d02c:	lods   al,BYTE PTR ds:[esi]
  41d02d:	xchg   edi,eax
  41d02e:	cli    
  41d02f:	repnz sti 
  41d031:	scas   al,BYTE PTR es:[edi]
  41d032:	cwde   
  41d033:	retf   0xcadb
  41d036:	xlat   BYTE PTR ds:[ebx]
  41d037:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d038:	inc    esi
  41d039:	in     al,dx
  41d03a:	mov    esi,0x21aeb55c
  41d03f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d040:	xor    eax,0xdb31ab31
  41d045:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d046:	pop    esp
  41d047:	mov    ds:0x30424d1f,eax
  41d04c:	sbb    BYTE PTR [eax+eiz*2],0xb
  41d050:	test   eax,0xc3d18e65
  41d055:	int    0xf8
  41d057:	push   es
  41d058:	lods   al,BYTE PTR ds:[esi]
  41d059:	jno    0x41d068
  41d05b:	(bad)  
  41d05c:	push   edi
  41d05d:	mov    eax,0x7f3d4149
  41d062:	inc    DWORD PTR [edx]
  41d064:	inc    ebp
  41d065:	clc    
  41d066:	jae    0x41cffe
  41d068:	xor    al,0xd5
  41d06a:	or     eax,0x167b76f1
  41d06f:	retf   0x67a0
  41d072:	pusha  
  41d073:	inc    eax
  41d074:	out    0xa9,al
  41d076:	mov    ebx,0xe90c0cad
  41d07b:	mov    bl,0x74
  41d07d:	lahf   
  41d07e:	daa    
  41d07f:	leave  
  41d080:	pop    es
  41d081:	mov    edi,DWORD PTR [esi]
  41d083:	xchg   esp,eax
  41d084:	sbb    DWORD PTR [esi-0x13],edx
  41d087:	int3   
  41d088:	outs   dx,DWORD PTR ds:[esi]
  41d089:	mov    ebp,0x5a2eac9b
  41d08e:	sar    DWORD PTR [edx+0x25],1
  41d091:	addr16 mov al,0x62
  41d094:	ja     0x41d01f
  41d096:	cmp    dl,BYTE PTR [esi]
  41d098:	sbb    eax,0x7d96f7f5
  41d09d:	add    eax,0x95991d77
  41d0a2:	test   BYTE PTR [ecx+edx*2],cl
  41d0a5:	aam    0xc1
  41d0a7:	pop    esp
  41d0a8:	ret    
  41d0a9:	or     al,0xcd
  41d0ab:	movntq (bad),mm1
  41d0ac:	out    0xce,eax
  41d0ae:	or     al,0xe
  41d0b0:	lods   al,BYTE PTR ds:[esi]
  41d0b1:	adc    cl,BYTE PTR [ebx-0x367570b]
  41d0b7:	call   0xa6f821f0
  41d0bc:	sti    
  41d0bd:	xchg   ebp,eax
  41d0be:	imul   edi,ebp,0xffffffc5
  41d0c1:	xor    BYTE PTR [edx],bh
  41d0c3:	lock or ebp,DWORD PTR [ebp-0x3d]
  41d0c7:	cmp    esp,0x40
  41d0ca:	xchg   DWORD PTR [ebx-0x77],esi
  41d0cd:	nop
  41d0ce:	leave  
  41d0cf:	jg     0x41d0ae
  41d0d1:	lods   eax,DWORD PTR ds:[esi]
  41d0d2:	lea    edx,[eax]
  41d0d4:	push   edi
  41d0d5:	sbb    eax,0x35b291bf
  41d0da:	loop   0x41d05e
  41d0dc:	push   cs
  41d0dd:	jno    0x41d155
  41d0df:	fnstenv [ecx+edx*8-0x3518e90a]
  41d0e6:	outs   dx,DWORD PTR ds:[esi]
  41d0e7:	dec    edx
  41d0e8:	push   ss
  41d0e9:	sti    
  41d0ea:	jne    0x41d102
  41d0ec:	(bad)  
  41d0ed:	or     ecx,DWORD PTR [esi-0x5c]
  41d0f0:	arpl   WORD PTR [ecx+0x71],ax
  41d0f3:	cmp    al,bl
  41d0f5:	adc    bl,al
  41d0f7:	sub    BYTE PTR [ebp+0xb1a25dc],ah
  41d0fd:	ficom  DWORD PTR [esi]
  41d0ff:	jg     0x41d115
  41d101:	mov    BYTE PTR [edx+0x46ea1412],bl
  41d107:	(bad)  
  41d108:	cmp    ebx,DWORD PTR [edi+0xe]
  41d10b:	and    esp,esi
  41d10d:	repz pop ecx
  41d10f:	adc    al,cl
  41d111:	add    ch,BYTE PTR [esp+ebx*1+0x1e]
  41d115:	sahf   
  41d116:	je     0x41d0fc
  41d118:	mov    bl,0xf0
  41d11a:	jnp    0x41d197
  41d11c:	retf   0x23e
  41d11f:	jo     0x41d12c
  41d121:	nop
  41d122:	cli    
  41d123:	ss popa 
  41d125:	pop    esp
  41d126:	pop    eax
  41d127:	jp     0x41d13c
  41d129:	dec    eax
  41d12a:	mov    DWORD PTR ds:0xfda101b7,ecx
  41d130:	push   cs
  41d131:	jb     0x41d1af
  41d133:	ins    DWORD PTR es:[edi],dx
  41d134:	in     eax,dx
  41d135:	leave  
  41d136:	rcl    al,cl
  41d138:	fsubr  QWORD PTR [esi-0x49f1e538]
  41d13e:	es add al,0xe7
  41d141:	and    al,0xc4
  41d143:	sub    bh,0x2
  41d146:	mov    bh,0xa
  41d148:	ins    BYTE PTR es:[edi],dx
  41d149:	dec    eax
  41d14a:	repz fbstp TBYTE PTR [edx+0x49]
  41d14e:	xchg   esi,eax
  41d14f:	rcr    BYTE PTR [esi+0x7b],0x83
  41d153:	dec    esp
  41d154:	or     DWORD PTR [ebx-0x41cee184],ebp
  41d15a:	in     al,0x69
  41d15c:	or     bl,BYTE PTR [ecx]
  41d15e:	jns    0x41d175
  41d160:	icebp  
  41d161:	xlat   BYTE PTR ds:[ebx]
  41d162:	xlat   BYTE PTR ds:[ebx]
  41d163:	inc    ebp
  41d164:	shl    DWORD PTR [ecx+eiz*2-0x747ff278],0x19
  41d16c:	push   0x26
  41d16e:	jne    0x41d158
  41d170:	pop    edi
  41d171:	cdq    
  41d172:	sbb    eax,0x81ee6d29
  41d177:	imul   ebp,DWORD PTR [edx-0x35bfab87],0xffffffd3
  41d17e:	inc    DWORD PTR [edi]
  41d180:	(bad)  
  41d181:	out    dx,eax
  41d182:	adc    dl,BYTE PTR [esi+0x13]
  41d185:	lea    ecx,[edi+eiz*4-0x446702f1]
  41d18c:	or     al,0xd9
  41d18e:	test   BYTE PTR [eax+0x3144decb],bl
  41d194:	cmp    ebx,esi
  41d196:	(bad)  
  41d197:	aam    0x64
  41d199:	stos   DWORD PTR es:[edi],eax
  41d19a:	xchg   ecx,eax
  41d19b:	addr16 dec ecx
  41d19d:	stos   BYTE PTR es:[edi],al
  41d19e:	cli    
  41d19f:	dec    edi
  41d1a0:	cmp    al,0xa7
  41d1a2:	pop    ecx
  41d1a3:	cdq    
  41d1a4:	mov    cl,0x8a
  41d1a6:	lahf   
  41d1a7:	loopne 0x41d158
  41d1a9:	push   cs
  41d1aa:	out    0xf2,eax
  41d1ac:	imul   ebp,DWORD PTR [ebx-0x2f],0x4c
  41d1b0:	jp     0x41d179
  41d1b2:	and    eax,0xd09c196f
  41d1b7:	lds    ebp,FWORD PTR [edi+0x3cd57990]
  41d1bd:	mov    ebx,0xc2edbb43
  41d1c2:	out    dx,eax
  41d1c3:	out    dx,al
  41d1c4:	push   cs
  41d1c5:	sub    ebp,DWORD PTR [ebx+0x1]
  41d1c8:	stos   DWORD PTR es:[edi],eax
  41d1c9:	int    0x3
  41d1cb:	cli    
  41d1cc:	jmp    0x68aa2e28
  41d1d1:	xchg   ebp,eax
  41d1d2:	push   ebp
  41d1d3:	jmp    0x41d19c
  41d1d5:	xchg   ebx,eax
  41d1d6:	mov    bl,0x80
  41d1d8:	mov    WORD PTR [eax],ss
  41d1da:	mov    BYTE PTR [ebx],dh
  41d1dc:	mov    al,0x92
  41d1de:	mov    ebp,0xe5418796
  41d1e3:	add    DWORD PTR [eax+0x1],ebp
  41d1e6:	lea    edi,[ecx]
  41d1e8:	lods   al,BYTE PTR ds:[esi]
  41d1e9:	stc    
  41d1ea:	fnstenv [ebp-0x24]
  41d1ed:	fnstcw WORD PTR [esi+0xbef4701]
  41d1f3:	add    ecx,eax
  41d1f5:	sbb    eax,0x37d2bec5
  41d1fa:	inc    ecx
  41d1fb:	and    edi,DWORD PTR [edx-0x31]
  41d1fe:	cmp    al,0xba
  41d200:	pop    ds
  41d201:	adc    al,0x1c
  41d203:	sahf   
  41d204:	call   0xd04e8878
  41d209:	sub    eax,0x26f83412
  41d20e:	imul   ecx,eax,0xd393a116
  41d214:	popa   
  41d215:	test   eax,0x96e4f193
  41d21a:	fucomi st,st(7)
  41d21c:	cli    
  41d21d:	cmc    
  41d21e:	mov    ds,WORD PTR [ebx]
  41d220:	lea    edx,[esi-0x645abc84]
  41d226:	dec    ebp
  41d227:	mul    DWORD PTR [esp+edi*8]
  41d22a:	(bad)  
  41d22b:	fs push cs
  41d22d:	add    DWORD PTR [ecx],ebp
  41d22f:	loop   0x41d276
  41d231:	adc    BYTE PTR [ebx+0x2b],ah
  41d234:	cdq    
  41d235:	jns    0x41d2b1
  41d237:	xchg   ecx,eax
  41d238:	dec    edx
  41d239:	mov    eax,DWORD PTR [ecx]
  41d23b:	into   
  41d23c:	sar    ah,1
  41d23e:	test   DWORD PTR [edx+0x64],ecx
  41d241:	mov    eax,0xb3069a55
  41d246:	sbb    BYTE PTR [eax+0x23],al
  41d249:	and    esi,ebx
  41d24b:	pop    eax
  41d24c:	xor    eax,0x7fcf0295
  41d251:	pop    ebp
  41d252:	xchg   BYTE PTR ss:[eax-0x76d8695e],al
  41d259:	enter  0xd077,0x8e
  41d25d:	in     eax,0x81
  41d25f:	popa   
  41d260:	dec    eax
  41d261:	push   cs
  41d262:	psllq  mm4,QWORD PTR [ebx+0x4f]
  41d266:	jbe    0x41d1f2
  41d268:	sar    edi,0x44
  41d26b:	rcl    DWORD PTR [esi],1
  41d26d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d26e:	xor    eax,0xacb85e80
  41d273:	mov    edi,0xbae4aa18
  41d278:	call   0x5fd40729
  41d27d:	hlt    
  41d27e:	mov    eax,0x24057253
  41d283:	(bad)  
  41d284:	daa    
  41d285:	mov    DWORD PTR [ebx-0x70b223b],esi
  41d28b:	das    
  41d28c:	dec    edi
  41d28d:	pop    ebp
  41d28e:	sub    DWORD PTR [ecx],esi
  41d290:	fsub   DWORD PTR [edx+ecx*8]
  41d293:	pop    es
  41d294:	adc    bl,bh
  41d296:	dec    ebx
  41d297:	jmp    0x54ef:0x73fc9abc
  41d29e:	ret    0xcb7e
  41d2a1:	push   0x336bb0fe
  41d2a6:	jp     0x41d2df
  41d2a8:	or     al,0xa9
  41d2aa:	ret    
  41d2ab:	mov    ah,0xd7
  41d2ad:	dec    esi
  41d2ae:	cwde   
  41d2af:	out    0x4b,eax
  41d2b1:	cmp    eax,0xe908147d
  41d2b6:	mov    bl,0xc7
  41d2b8:	(bad)  
  41d2b9:	cmp    BYTE PTR [eax+0x56173f19],bh
  41d2bf:	hlt    
  41d2c0:	mov    ebx,0xd7c02fc8
  41d2c5:	inc    esi
  41d2c6:	shr    ch,1
  41d2c8:	(bad)  
  41d2c9:	cmp    eax,0x96c5bdb1
  41d2ce:	cmp    al,bl
  41d2d0:	ja     0x41d288
  41d2d2:	jp     0x41d292
  41d2d4:	fisub  WORD PTR [eax-0x13bc1a89]
  41d2da:	pop    esi
  41d2db:	shr    BYTE PTR [ebx],cl
  41d2dd:	arpl   WORD PTR [ebx],cx
  41d2df:	in     al,dx
  41d2e0:	inc    ebp
  41d2e1:	out    0x28,eax
  41d2e3:	cwde   
  41d2e4:	jle    0x41d2f4
  41d2e6:	cdq    
  41d2e7:	jecxz  0x41d2df
  41d2e9:	retf   
  41d2ea:	push   ds
  41d2eb:	mov    eax,ds:0xc216f6ad
  41d2f0:	test   DWORD PTR [esi+0x4f],ebp
  41d2f3:	(bad)  
  41d2f4:	das    
  41d2f5:	repnz or DWORD PTR [ecx],esp
  41d2f8:	cli    
  41d2f9:	xchg   esp,eax
  41d2fa:	add    edx,DWORD PTR [edi-0x131a6456]
  41d300:	lock inc edx
  41d302:	jge    0x41d313
  41d304:	push   edx
  41d305:	lahf   
  41d306:	mov    cs,WORD PTR [ebx]
  41d308:	xor    ah,dh
  41d30a:	pop    ds
  41d30b:	pop    eax
  41d30c:	and    BYTE PTR [ebx+ecx*1+0x5020bd58],dl
  41d313:	sub    bl,ch
  41d315:	(bad)  
  41d317:	sub    DWORD PTR [edx+ebx*8],ebx
  41d31a:	jecxz  0x41d2ba
  41d31c:	mov    esi,0x83405a08
  41d321:	push   0x3
  41d323:	mov    eax,ds:0x6d587ca3
  41d328:	adc    eax,0xee66e7b8
  41d32d:	cwde   
  41d32e:	pop    ds
  41d32f:	xchg   ecx,eax
  41d330:	inc    edi
  41d331:	(bad)  
  41d332:	mov    eax,0x71c3c8f7
  41d337:	pop    ebx
  41d338:	mov    edx,0xec2295c2
  41d33d:	push   es
  41d33e:	dec    ebp
  41d33f:	mov    al,0xd4
  41d341:	mov    bl,0xb8
  41d343:	lahf   
  41d344:	dec    ebx
  41d345:	mov    WORD PTR [esi],?
  41d347:	adc    DWORD PTR cs:[edx-0x7f],edx
  41d34b:	shl    DWORD PTR [edi-0x70],1
  41d34e:	or     al,0x7
  41d350:	daa    
  41d351:	sub    dl,BYTE PTR [edx+eax*2]
  41d354:	pusha  
  41d355:	or     cl,BYTE PTR [esi]
  41d357:	fmul   QWORD PTR [esi-0x440b8b91]
  41d35d:	fdivr  DWORD PTR [ecx+0x72]
  41d360:	xor    ecx,DWORD PTR ds:0x41e57027
  41d366:	bound  ebx,QWORD PTR [ebx]
  41d368:	mov    es,edx
  41d36a:	xchg   ebx,eax
  41d36b:	adc    esi,DWORD PTR [edi-0x2a6b3893]
  41d371:	pop    ebx
  41d372:	data16 std 
  41d374:	xchg   esp,eax
  41d375:	call   0x6dec:0x58c29b4e
  41d37c:	jbe    0x41d358
  41d37e:	cmc    
  41d37f:	(bad)  
  41d380:	stos   DWORD PTR es:[edi],eax
  41d381:	dec    ebx
  41d382:	dec    eax
  41d383:	jbe    0x41d3a3
  41d385:	stos   BYTE PTR es:[edi],al
  41d386:	std    
  41d387:	or     eax,0x6009900f
  41d38c:	xor    DWORD PTR ds:[edx],edi
  41d38f:	add    eax,0x970b16ef
  41d394:	xor    al,0xcd
  41d396:	mov    esi,?
  41d398:	scas   eax,DWORD PTR es:[edi]
  41d399:	mov    WORD PTR [esi],es
  41d39b:	jge    0x41d392
  41d39d:	push   esp
  41d39e:	mov    esp,ebp
  41d3a0:	ins    DWORD PTR es:[edi],dx
  41d3a1:	push   edi
  41d3a2:	cmp    BYTE PTR [esi],ah
  41d3a4:	sar    DWORD PTR [edx-0x1c],cl
  41d3a7:	loope  0x41d347
  41d3a9:	dec    edi
  41d3aa:	mov    ebp,0x82fc8e05
  41d3af:	cmp    DWORD PTR [edi],eax
  41d3b1:	pop    eax
  41d3b2:	fbstp  TBYTE PTR [edx]
  41d3b4:	xchg   edx,eax
  41d3b5:	into   
  41d3b6:	mov    esi,0xeb5a5dbb
  41d3bb:	test   esp,ebx
  41d3bd:	clc    
  41d3be:	cli    
  41d3bf:	arpl   WORD PTR [eax+0x515f3393],di
  41d3c5:	add    al,0xd7
  41d3c7:	jp     0x41d35c
  41d3c9:	pushf  
  41d3ca:	cwde   
  41d3cb:	dec    ecx
  41d3cc:	scas   eax,DWORD PTR es:[edi]
  41d3cd:	les    ebx,FWORD PTR [esi]
  41d3cf:	push   esp
  41d3d0:	jl     0x41d3e3
  41d3d2:	or     DWORD PTR [esi],edi
  41d3d4:	enter  0x768,0x36
  41d3d8:	inc    ebx
  41d3d9:	cmp    al,0xe8
  41d3db:	add    eax,0x3fae6c12
  41d3e0:	inc    ebp
  41d3e1:	pop    ebx
  41d3e2:	jmp    0x3d855de7
  41d3e7:	std    
  41d3e8:	add    al,0xbf
  41d3ea:	sar    dl,0x3
  41d3ed:	lock add ah,0xb0
  41d3f1:	dec    ecx
  41d3f2:	das    
  41d3f3:	xor    DWORD PTR [esi+ecx*1],ecx
  41d3f6:	inc    edi
  41d3f7:	fist   WORD PTR [esi+0x52bf262]
  41d3fd:	add    cl,BYTE PTR [ebp-0x78]
  41d400:	add    BYTE PTR [esi+0x4b],0x26
  41d404:	mov    edi,0x66b2ee28
  41d409:	jae    0x41d478
  41d40b:	mov    ds,WORD PTR [esi]
  41d40d:	sub    eax,0x3f891101
  41d412:	or     bl,cl
  41d414:	(bad)  
  41d415:	fmul   DWORD PTR [esi+0x6be31663]
  41d41b:	and    dl,BYTE PTR [ebx+0x11]
  41d41e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d41f:	call   0x4484ddb5
  41d424:	mov    ah,0x39
  41d426:	xor    BYTE PTR [esi],dh
  41d428:	xor    esp,ebp
  41d42a:	pop    ebx
  41d42b:	jbe    0x41d4aa
  41d42d:	leave  
  41d42e:	xor    eax,0x2ffb038e
  41d433:	icebp  
  41d434:	retf   
  41d435:	xor    bl,BYTE PTR [esi+0x6a]
  41d438:	mov    ds:0xcffe22ac,al
  41d43d:	sub    eax,0x19af899
  41d442:	pop    eax
  41d443:	xchg   edx,eax
  41d444:	xchg   edi,eax
  41d445:	data16 or cl,BYTE PTR [esi]
  41d448:	fcomp  DWORD PTR [eax+0x3f]
  41d44b:	std    
  41d44c:	test   BYTE PTR [ebp+0x51],0x54
  41d450:	inc    ebx
  41d451:	mov    esi,0x6a35fd0a
  41d456:	mov    ds:0x29a7c766,al
  41d45b:	ins    BYTE PTR es:[edi],dx
  41d45c:	std    
  41d45d:	mov    edx,0x3416038f
  41d462:	jno    0x41d48a
  41d464:	test   DWORD PTR [ebx+0x48],esi
  41d467:	add    DWORD PTR [eax-0x77],ecx
  41d46a:	dec    esi
  41d46b:	ins    BYTE PTR es:[edi],dx
  41d46c:	push   0x4
  41d46e:	fwait
  41d46f:	psadbw mm1,mm1
  41d472:	sub    BYTE PTR [ebx+0x1d],ah
  41d475:	ror    DWORD PTR [esi+0x11b1335f],cl
  41d47b:	das    
  41d47c:	add    al,0x24
  41d47e:	lods   eax,DWORD PTR cs:[esi]
  41d480:	jle    0x41d4b8
  41d482:	lea    ebx,[edx]
  41d484:	inc    eax
  41d485:	(bad)  
  41d486:	out    dx,eax
  41d487:	sub    dh,BYTE PTR [edi-0x2d85cab0]
  41d48d:	mov    BYTE PTR [ecx],0x62
  41d490:	bound  ebx,QWORD PTR [edi-0x48]
  41d493:	retf   0xad07
  41d496:	jl     0x41d478
  41d498:	ds adc esi,0xe001d2f5
  41d49f:	aad    0x82
  41d4a1:	repz or esp,0x18634d06
  41d4a8:	add    al,0x3c
  41d4aa:	fisubr DWORD PTR [eax-0x3503aa]
  41d4b0:	inc    ebp
  41d4b1:	int3   
  41d4b2:	(bad)
  41d4b7:	push   esp
  41d4b8:	pusha  
  41d4b9:	repz push es
  41d4bb:	add    DWORD PTR [ebp-0xd],ebp
  41d4be:	(bad)  
  41d4bf:	and    al,0xbf
  41d4c1:	xor    DWORD PTR es:[ebp+0x33],esi
  41d4c5:	scas   al,BYTE PTR es:[edi]
  41d4c6:	stc    
  41d4c7:	mov    ds:0x9a0e991a,al
  41d4cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4ce:	push   ds
  41d4cf:	dec    esi
  41d4d0:	dec    eax
  41d4d1:	imul   BYTE PTR [esi-0x686e9ca8]
  41d4d7:	dec    edx
  41d4d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4d9:	sub    DWORD PTR [eax+0x2526245f],esp
  41d4df:	fsubrp st(6),st
  41d4e1:	fnstsw WORD PTR [edi+ebx*2+0x21]
  41d4e5:	sahf   
  41d4e6:	mov    eax,0xdcc8f3a6
  41d4eb:	pop    es
  41d4ec:	fldl2e 
  41d4ee:	hlt    
  41d4ef:	dec    ebp
  41d4f0:	loop   0x41d481
  41d4f2:	not    BYTE PTR [edx-0x60d2f7db]
  41d4f8:	in     eax,dx
  41d4f9:	sub    DWORD PTR [eax-0x271b0d19],edx
  41d4ff:	ret    0x15eb
  41d502:	cmp    esp,ebp
  41d504:	pop    edi
  41d505:	(bad)  
  41d506:	dec    esi
  41d507:	mov    ebx,0xe4850a40
  41d50c:	in     eax,0x68
  41d50e:	(bad)  
  41d50f:	push   esi
  41d510:	cmp    al,0xb6
  41d512:	jae    0x41d576
  41d514:	retf   0x240f
  41d517:	sub    ebp,edx
  41d519:	loop   0x41d554
  41d51b:	mov    dh,BYTE PTR [edx-0x3092912]
  41d521:	dec    esp
  41d522:	jge    0x41d59d
  41d524:	add    al,0x69
  41d526:	jo     0x41d4e0
  41d528:	in     eax,dx
  41d529:	cmc    
  41d52a:	test   al,0x61
  41d52c:	int3   
  41d52d:	and    BYTE PTR [edi+0x7b],0xd4
  41d531:	xor    eax,0x90886cfb
  41d536:	xor    BYTE PTR [edx-0x21820527],ch
  41d53c:	sub    al,0x5f
  41d53e:	add    eax,0xefc7d06e
  41d543:	aaa    
  41d544:	pop    edi
  41d545:	xchg   ebx,eax
  41d546:	pop    edi
  41d547:	loop   0x41d4de
  41d549:	cmp    BYTE PTR [esi+0x48],bl
  41d54c:	out    dx,al
  41d54d:	xchg   edx,eax
  41d54e:	and    al,0x13
  41d550:	xchg   bh,al
  41d552:	cmp    al,0x9e
  41d554:	(bad)  
  41d556:	sub    edi,DWORD PTR [esp+ebx*1]
  41d559:	or     esp,DWORD PTR [edx-0x4c27e1d5]
  41d55f:	sahf   
  41d560:	(bad)  
  41d561:	fsub   st(5),st
  41d563:	lods   al,BYTE PTR ds:[esi]
  41d564:	hlt    
  41d565:	jecxz  0x41d5d3
  41d567:	data16 aas 
  41d569:	and    BYTE PTR [edx-0x63],0x89
  41d56d:	dec    edi
  41d56e:	fsub   QWORD PTR [ebx+ebp*4-0x1f3ea8eb]
  41d575:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d576:	sti    
  41d577:	enter  0xc1d9,0x98
  41d57b:	pop    esp
  41d57c:	jo     0x41d5ad
  41d57e:	icebp  
  41d57f:	test   eax,0x18bfa984
  41d584:	jmp    0xa421988a
  41d589:	add    eax,DWORD PTR [bx+si-0x6b]
  41d58d:	and    DWORD PTR [ebp+0x4d],esp
  41d590:	pop    edi
  41d591:	arpl   WORD PTR [edx],ax
  41d593:	mov    cl,0x67
  41d595:	dec    esi
  41d596:	mov    al,ch
  41d598:	mov    ecx,0xa1959028
  41d59d:	lock jecxz 0x41d5a3
  41d5a0:	mov    al,0x9a
  41d5a2:	aaa    
  41d5a3:	mov    ds:0xe26e9563,eax
  41d5a8:	addr16 loopne 0x41d555
  41d5ab:	sbb    DWORD PTR [ecx-0x71afa74f],eax
  41d5b1:	xor    esi,ecx
  41d5b3:	inc    esi
  41d5b4:	and    eax,0xf6080a18
  41d5b9:	dec    eax
  41d5ba:	jbe    0x41d568
  41d5bc:	int    0x4b
  41d5be:	ins    BYTE PTR es:[edi],dx
  41d5bf:	ds sbb eax,0xf180da78
  41d5c5:	loopne 0x41d580
  41d5c7:	fadd   DWORD PTR [ebx+0x4e]
  41d5ca:	jmp    0xe8c02fe7
  41d5cf:	inc    ebp
  41d5d0:	pop    ebx
  41d5d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5d2:	dec    edi
  41d5d3:	mov    ds:0x5c088dcf,al
  41d5d8:	pop    ds
  41d5d9:	(bad)  
  41d5db:	inc    edi
  41d5dc:	xor    al,0x49
  41d5de:	rol    BYTE PTR [esi],cl
  41d5e0:	inc    esp
  41d5e1:	js     0x41d573
  41d5e3:	adc    edx,DWORD PTR [ecx]
  41d5e5:	fcomp  st(1)
  41d5e7:	dec    edx
  41d5e8:	mov    al,ds:0xa8c39768
  41d5ed:	and    edi,DWORD PTR [ebp+0x127639cd]
  41d5f3:	or     BYTE PTR [eax],ch
  41d5f5:	mov    bh,0x56
  41d5f7:	fs (bad) 
  41d5f9:	in     eax,dx
  41d5fa:	pop    edi
  41d5fb:	push   0xffffffa1
  41d5fd:	or     eax,0x12985341
  41d602:	pop    eax
  41d603:	call   0x199d:0x47f9d29c
  41d60a:	sahf   
  41d60b:	call   FWORD PTR cs:[edx]
  41d60e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d60f:	bound  ebp,QWORD PTR [eax+eiz*2+0xee95bf1]
  41d616:	adc    al,0xcb
  41d618:	pop    esi
  41d619:	imul   esp,DWORD PTR [eax+esi*8+0x3],0x8e177def
  41d621:	(bad)  
  41d622:	jo     0x41d647
  41d624:	inc    edx
  41d625:	aas    
  41d626:	mov    al,0xac
  41d628:	aam    0x2b
  41d62a:	(bad)  
  41d62b:	(bad)  
  41d62d:	xlat   BYTE PTR ds:[ebx]
  41d62e:	push   eax
  41d62f:	pop    edi
  41d630:	nop
  41d631:	jo     0x41d63f
  41d633:	push   ss
  41d634:	push   edx
  41d635:	rol    DWORD PTR [edi+ebp*1],cl
  41d638:	dec    ebx
  41d639:	sbb    bh,dh
  41d63b:	mov    WORD PTR [ebx-0x29b721de],?
  41d641:	and    BYTE PTR [ebx+0x23b01d5],al
  41d647:	push   0x2ea8a272
  41d64c:	aam    0x73
  41d64e:	arpl   ax,di
  41d650:	in     eax,dx
  41d651:	hlt    
  41d652:	in     eax,0xe5
  41d654:	dec    esi
  41d655:	jp     0x41d5ff
  41d657:	dec    DWORD PTR [eax+edi*4]
  41d65a:	sub    al,0x72
  41d65c:	mov    al,0x3
  41d65e:	push   edi
  41d65f:	popf   
  41d660:	and    eax,0xa91b4400
  41d665:	or     al,0xb1
  41d667:	mov    ecx,edx
  41d669:	mov    edi,DWORD PTR [edx+ebx*2-0x7f0e495a]
  41d670:	pop    si
  41d672:	cmp    DWORD PTR [edx+0x0],ebx
  41d675:	sub    dl,0x4
  41d678:	mov    esp,0xb97d892d
  41d67d:	outs   dx,BYTE PTR ds:[esi]
  41d67e:	push   ecx
  41d67f:	jmp    0x41d612
  41d681:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d682:	cmp    ebx,DWORD PTR [esi]
  41d684:	jne    0x41d63c
  41d686:	and    cl,BYTE PTR [ebx]
  41d688:	cmp    DWORD PTR [ebx-0x11],esi
  41d68b:	cld    
  41d68c:	dec    esp
  41d68d:	pusha  
  41d68e:	xor    BYTE PTR [ebp+0x79],0x55
  41d692:	add    DWORD PTR [edx],0x1e
  41d695:	or     ecx,DWORD PTR [ebx+esi*8-0x6a8bf69b]
  41d69c:	push   edi
  41d69d:	ret    
  41d69e:	sub    BYTE PTR [edx],dl
  41d6a0:	out    dx,al
  41d6a1:	push   cs
  41d6a2:	sub    eax,0x4c248499
  41d6a7:	push   esp
  41d6a8:	repz sbb eax,0x7137b136
  41d6ae:	clc    
  41d6af:	mov    bh,0x0
  41d6b1:	dec    ebx
  41d6b2:	ffree  st(3)
  41d6b4:	test   BYTE PTR [ebx-0x7e255bfd],bh
  41d6ba:	inc    eax
  41d6bb:	adc    al,0x75
  41d6bd:	bound  esi,QWORD PTR [ecx+0x12]
  41d6c0:	out    dx,eax
  41d6c1:	or     esp,DWORD PTR [edx]
  41d6c3:	mov    ebp,0xd6499f77
  41d6c8:	add    eax,0x73ec2d2a
  41d6cd:	push   esi
  41d6ce:	(bad)  
  41d6cf:	jae    0x41d6a5
  41d6d1:	mov    edi,0x398b4813
  41d6d6:	push   ecx
  41d6d7:	stos   BYTE PTR es:[edi],al
  41d6d8:	jb     0x41d6ec
  41d6da:	jns    0x41d65d
  41d6dc:	adc    BYTE PTR [ecx],cl
  41d6de:	adc    al,0xcb
  41d6e0:	pop    esi
  41d6e1:	pop    ecx
  41d6e2:	push   edi
  41d6e3:	jmp    0xe8e848d3
  41d6e8:	sbb    ebp,DWORD PTR [ebp-0x15]
  41d6eb:	(bad)  [edi-0x6e]
  41d6ee:	and    DWORD PTR [edx+0x6356de40],esp
  41d6f4:	add    al,0xfa
  41d6f6:	scas   eax,DWORD PTR es:[edi]
  41d6f7:	in     al,0x75
  41d6f9:	clc    
  41d6fa:	push   ecx
  41d6fb:	rcr    DWORD PTR [esi+0x27b1e52],cl
  41d701:	cdq    
  41d702:	and    ebx,esi
  41d704:	and    al,0x17
  41d706:	iret   
  41d707:	sbb    al,0x1c
  41d709:	jns    0x41d70a
  41d70b:	stos   BYTE PTR es:[edi],al
  41d70c:	mov    esi,0x576954c0
  41d711:	inc    esi
  41d712:	or     esi,DWORD PTR [ebp+esi*4+0x6d]
  41d716:	loop   0x41d75c
  41d718:	mov    ds:0xed4d9288,al
  41d71d:	inc    esi
  41d71e:	es mov al,0x61
  41d721:	cdq    
  41d722:	cmp    bl,BYTE PTR [ebp-0x3b]
  41d725:	out    0x4,eax
  41d727:	push   cs
  41d728:	shl    BYTE PTR [edx],1
  41d72a:	jo     0x41d709
  41d72c:	push   0xf8af956d
  41d731:	dec    edx
  41d732:	add    ah,dl
  41d734:	xor    eax,0x86bf6ae7
  41d739:	mov    bl,0x12
  41d73b:	sbb    eax,0xfa30957a
  41d740:	cmp    BYTE PTR [edi+0x4bcc995a],cl
  41d746:	gs cs stc 
  41d749:	add    DWORD PTR [ecx+0xc],ebx
  41d74c:	xchg   ebx,eax
  41d74d:	nop
  41d74e:	pushw  ds
  41d750:	xchg   edi,eax
  41d751:	mov    DWORD PTR [eax+0x65],ecx
  41d754:	or     eax,0x55dc0e8f
  41d75a:	mov    bh,0xcc
  41d75c:	pop    esp
  41d75d:	sub    DWORD PTR [ebp-0x6e],esp
  41d760:	jmp    0xd9c5:0x607ba576
  41d767:	test   BYTE PTR [ecx-0x3a6b6fb0],ch
  41d76d:	push   ebx
  41d76e:	ficom  WORD PTR [eax+0x61]
  41d771:	and    edx,DWORD PTR [edi-0x18f1fdc2]
  41d777:	xchg   dh,bh
  41d779:	fst    DWORD PTR [ebp-0x28]
  41d77c:	mov    ecx,0x14095b51
  41d781:	shr    ebp,0x32
  41d784:	push   esp
  41d785:	adc    eax,0xedd97363
  41d78a:	push   0xffffffe6
  41d78c:	sub    esp,DWORD PTR [edx-0x7a0912f4]
  41d792:	popa   
  41d793:	call   0xf5ca:0x2f9396d9
  41d79a:	sub    BYTE PTR [ebp+0x17],0xd3
  41d79e:	xchg   BYTE PTR [edi+edi*8],cl
  41d7a1:	dec    edx
  41d7a2:	jbe    0x41d7c7
  41d7a4:	fnstenv [ecx+esi*8-0x5354f237]
  41d7ab:	call   DWORD PTR [edi]
  41d7ad:	sub    ch,BYTE PTR [ebx-0x7]
  41d7b0:	dec    ecx
  41d7b1:	and    al,BYTE PTR [ecx]
  41d7b3:	loopne 0x41d7f2
  41d7b5:	neg    esp
  41d7b7:	mov    DWORD PTR [ecx],esp
  41d7b9:	sub    eax,0xb55c76f1
  41d7be:	and    al,0x8b
  41d7c0:	mov    ebx,0x10d39209
  41d7c5:	jnp    0x41d798
  41d7c7:	pop    esi
  41d7c8:	lods   al,BYTE PTR ds:[esi]
  41d7c9:	mov    eax,0xf6b6db9a
  41d7ce:	jae    0x41d765
  41d7d0:	fsubr  QWORD PTR [ecx-0x688c4e21]
  41d7d6:	jno    0x41d773
  41d7d8:	xchg   bl,cl
  41d7da:	repz pop esp
  41d7dc:	imul   edx,DWORD PTR [esi],0x21c72d7
  41d7e2:	aam    0x42
  41d7e4:	sub    esp,ecx
  41d7e6:	or     ecx,DWORD PTR [ecx]
  41d7e8:	jmp    0x41d843
  41d7ea:	stos   BYTE PTR es:[edi],al
  41d7eb:	retf   
  41d7ec:	cmp    al,0x90
  41d7ee:	pop    esi
  41d7ef:	(bad)  
  41d7f0:	pop    eax
  41d7f1:	cmp    BYTE PTR [edx-0x355d7334],ch
  41d7f7:	imul   dl
  41d7f9:	push   eax
  41d7fa:	inc    ebp
  41d7fb:	scas   al,BYTE PTR es:[edi]
  41d7fc:	jb     0x41d7fb
  41d7fe:	fist   DWORD PTR [ebx+0x3b]
  41d801:	fcom   QWORD PTR [esi+0x29afd3ad]
  41d807:	or     BYTE PTR [edx+0x30],dl
  41d80a:	es sub eax,0xe79daf17
  41d810:	inc    edi
  41d811:	mov    al,ds:0x93ca5e40
  41d816:	xchg   ebx,eax
  41d817:	mov    ebp,0xee7acb0d
  41d81c:	pop    esp
  41d81d:	test   BYTE PTR [eax+0x723deca3],bl
  41d823:	mov    ds:0x9acd0d34,al
  41d828:	and    edi,DWORD PTR [edi]
  41d82a:	mov    cl,0xbc
  41d82c:	adc    DWORD PTR ds:0xcf412c68,esp
  41d832:	(bad)  
  41d833:	push   cs
  41d834:	inc    edx
  41d835:	xchg   BYTE PTR ds:0xcd45a843,ch
  41d83b:	dec    esp
  41d83c:	aad    0x4a
  41d83e:	imul   esi,DWORD PTR [edx+0x6c],0x69
  41d842:	jmp    0xf44a:0x8334dbb3
  41d849:	(bad)  
  41d84a:	and    eax,0x8e8cf2d6
  41d84f:	dec    ecx
  41d850:	aam    0xf5
  41d852:	jae    0x41d7ea
  41d854:	sbb    esp,eax
  41d856:	bound  edi,QWORD PTR [ebx]
  41d858:	cmp    ecx,0x59205aeb
  41d85e:	mov    ebx,0x85b929e7
  41d863:	jle    0x41d7fd
  41d865:	add    DWORD PTR [edx+0x38e4ac36],esp
  41d86b:	iret   
  41d86c:	stos   DWORD PTR es:[edi],eax
  41d86d:	mov    esp,0xf7d37eca
  41d872:	cwde   
  41d873:	adc    al,0x2a
  41d875:	or     ch,al
  41d877:	pop    ss
  41d878:	fnstenv [edx+0x28]
  41d87b:	mov    cl,bl
  41d87d:	dec    ecx
  41d87e:	push   ecx
  41d87f:	rol    DWORD PTR [esp+edi*8+0x75],0xb0
  41d884:	cmp    al,0x91
  41d886:	inc    edi
  41d887:	daa    
  41d888:	jno    0x41d8f1
  41d88a:	mov    bh,BYTE PTR [ecx]
  41d88c:	lea    ebx,[eax+edi*2+0x3df8eb03]
  41d893:	sbb    bl,BYTE PTR [eax+0x5a]
  41d896:	push   es
  41d897:	mov    cl,0x31
  41d899:	je     0x41d82e
  41d89b:	pop    edi
  41d89c:	push   ebp
  41d89d:	push   ebp
  41d89e:	aam    0xf3
  41d8a0:	ret    0xc47f
  41d8a3:	out    0xe4,al
  41d8a5:	jns    0x41d925
  41d8a7:	push   0xffffffc9
  41d8a9:	xor    dl,bh
  41d8ab:	sar    DWORD PTR [edi+esi*2+0x1645062e],0x3f
  41d8b3:	push   ebp
  41d8b4:	mov    WORD PTR [ecx],?
  41d8b6:	xor    esp,DWORD PTR [ebx-0x65801314]
  41d8bc:	sub    ebx,DWORD PTR [eax+0x28d60031]
  41d8c2:	fsub   QWORD PTR [esi]
  41d8c4:	in     al,dx
  41d8c5:	clc    
  41d8c6:	sbb    edx,ebx
  41d8c8:	enter  0x6bf2,0x85
  41d8cc:	retf   
  41d8cd:	push   esi
  41d8ce:	int    0x5c
  41d8d0:	js     0x41d92f
  41d8d2:	dec    esi
  41d8d3:	pop    ecx
  41d8d4:	push   0xffffffbd
  41d8d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8d7:	into   
  41d8d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8d9:	dec    esp
  41d8da:	inc    esi
  41d8db:	cmc    
  41d8dc:	push   0x581a499a
  41d8e1:	adc    al,0xb9
  41d8e3:	add    al,0xa0
  41d8e5:	cwde   
  41d8e6:	mov    ebp,0xb3919c7e
  41d8eb:	fmul   st,st(5)
  41d8ed:	cmp    al,BYTE PTR [eax-0x6c]
  41d8f0:	test   BYTE PTR [edi],bh
  41d8f2:	dec    esp
  41d8f3:	in     eax,0xc8
  41d8f5:	mov    dh,0x9f
  41d8f7:	mov    al,0xff
  41d8f9:	cli    
  41d8fa:	scas   eax,DWORD PTR es:[edi]
  41d8fb:	xchg   esp,eax
  41d8fc:	pop    ebx
  41d8fd:	or     ebx,DWORD PTR [eax]
  41d8ff:	out    0x48,al
  41d901:	adc    DWORD PTR [edx],ecx
  41d903:	or     BYTE PTR [eax],0x7c
  41d906:	sbb    dl,ah
  41d908:	mov    ah,0x86
  41d90a:	repnz and ebp,DWORD PTR [ebx+eax*4]
  41d90e:	xor    edx,DWORD PTR [eax-0x4a4f9446]
  41d914:	repnz leave 
  41d916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d917:	les    esp,FWORD PTR [eax+0x333ea52e]
  41d91d:	std    
  41d91e:	mov    ds:0x5015906b,al
  41d923:	inc    edx
  41d924:	mov    WORD PTR [edx-0x75],?
  41d927:	stos   DWORD PTR es:[edi],eax
  41d928:	js     0x41d957
  41d92a:	jecxz  0x41d94e
  41d92c:	jbe    0x41d8e7
  41d92e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d92f:	and    al,0x26
  41d931:	in     al,dx
  41d932:	or     al,0x67
  41d934:	and    DWORD PTR [ecx+0x7c],esp
  41d937:	sti    
  41d938:	pop    ebx
  41d939:	ret    0xe34
  41d93c:	jecxz  0x41d96d
  41d93e:	fstp   TBYTE PTR [ebp+0x70]
  41d941:	mov    edi,0xb08def75
  41d946:	stos   BYTE PTR es:[edi],al
  41d947:	fsubr  st(3),st
  41d949:	pop    ecx
  41d94a:	ud1    ebx,DWORD PTR [esp+edx*8-0x4cbb5a68]
  41d952:	adc    ebx,esi
  41d954:	stc    
  41d955:	xchg   ebp,eax
  41d956:	dec    ecx
  41d957:	mov    ecx,0xc082e99b
  41d95c:	mov    esp,esi
  41d95e:	adc    DWORD PTR [edx+0x2c],eax
  41d961:	dec    ecx
  41d962:	push   0x72284269
  41d967:	push   ecx
  41d968:	mov    eax,0x9130a00f
  41d96d:	lds    ebx,FWORD PTR [ecx+esi*2-0x37fce06d]
  41d974:	popa   
  41d975:	jg     0x41d984
  41d977:	pop    ebp
  41d978:	push   edi
  41d979:	mov    dl,0x1b
  41d97b:	and    al,0x4b
  41d97d:	mov    al,ds:0xf444fa64
  41d982:	jno    0x41d9f2
  41d984:	jnp    0x41d953
  41d986:	jne    0x41d989
  41d988:	mov    al,0x0
  41d98a:	sar    edi,cl
  41d98c:	xchg   ecx,eax
  41d98d:	dec    ecx
  41d98e:	sub    BYTE PTR [edi],0xcd
  41d991:	xor    eax,0x226784fe
  41d996:	(bad)  
  41d997:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d998:	add    al,0x6
  41d99a:	add    BYTE PTR [esi-0x9],dh
  41d99d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d99e:	bound  ebx,QWORD PTR [edi]
  41d9a0:	xor    eax,DWORD PTR [ebx-0xd]
  41d9a3:	push   edi
  41d9a4:	clc    
  41d9a5:	adc    eax,0x15b2ecc9
  41d9aa:	xor    eax,0x8c07fcd
  41d9af:	cmc    
  41d9b0:	sub    eax,0x3ae9fd0e
  41d9b5:	nop
  41d9b6:	dec    ecx
  41d9b7:	in     al,0x81
  41d9b9:	mov    ebp,0x554286fa
  41d9be:	sbb    DWORD PTR [ecx+0x62e11cc3],0xffffffd3
  41d9c5:	es cdq 
  41d9c7:	cld    
  41d9c8:	xchg   edx,eax
  41d9c9:	ins    BYTE PTR es:[edi],dx
  41d9ca:	int3   
  41d9cb:	lock scas eax,DWORD PTR es:[edi]
  41d9cd:	cmp    edi,DWORD PTR [ecx-0x8]
  41d9d0:	push   ss
  41d9d1:	jge    0x41d9ee
  41d9d3:	fst    st(4)
  41d9d5:	fisubr DWORD PTR [ecx-0x48953e26]
  41d9db:	inc    eax
  41d9dc:	lods   al,BYTE PTR ds:[esi]
  41d9dd:	cdq    
  41d9de:	pushf  
  41d9df:	pop    eax
  41d9e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9e1:	in     al,0x4
  41d9e3:	std    
  41d9e4:	sbb    edi,ebp
  41d9e6:	jecxz  0x41da18
  41d9e8:	nop
  41d9e9:	nop
  41d9ea:	fist   WORD PTR [ebx-0x2d85b75f]
  41d9f0:	outs   dx,BYTE PTR ds:[esi]
  41d9f1:	jge    0x41da6a
  41d9f3:	ss inc esi
  41d9f5:	(bad)  
  41d9f6:	push   edx
  41d9f7:	pop    ds
  41d9f8:	mov    cl,0x72
  41d9fa:	mov    bh,0x58
  41d9fc:	enter  0x9fc9,0x44
  41da00:	jae    0x41da42
  41da02:	cmp    eax,0x403df9ac
  41da07:	xor    BYTE PTR [edi],cl
  41da09:	retf   
  41da0a:	cld    
  41da0b:	in     eax,0x82
  41da0d:	cwde   
  41da0e:	xor    eax,0xdebbd488
  41da13:	leave  
  41da14:	pop    DWORD PTR [esi]
  41da16:	mov    ch,0x55
  41da18:	mov    ecx,DWORD PTR ds:0x7f30f96b
  41da1e:	icebp  
  41da1f:	call   0x1ff9f2c
  41da24:	xchg   edi,eax
  41da25:	aam    0x27
  41da27:	inc    ebx
  41da28:	sbb    ebx,esp
  41da2a:	sub    ah,BYTE PTR [edi-0x44]
  41da2d:	pop    ecx
  41da2e:	stc    
  41da2f:	leave  
  41da30:	xchg   edi,eax
  41da31:	jmp    0x5347:0x470c921c
  41da38:	cld    
  41da39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da3a:	lods   al,BYTE PTR ds:[esi]
  41da3b:	fs push ecx
  41da3d:	jmp    0xee86db92
  41da42:	retf   
  41da43:	fild   WORD PTR [ebp-0x2db95d00]
  41da49:	jmp    0x3f636de2
  41da4e:	enter  0x4ce6,0x82
  41da52:	mov    ds:0xae060969,eax
  41da57:	and    al,0x74
  41da59:	fwait
  41da5a:	enter  0xd41d,0xc3
  41da5e:	pop    eax
  41da5f:	lods   eax,DWORD PTR ds:[esi]
  41da60:	dec    edi
  41da61:	push   ebx
  41da62:	fxch   st(1)
  41da64:	xchg   BYTE PTR [edx+0x5d],ah
  41da67:	ins    BYTE PTR es:[edi],dx
  41da68:	cmp    eax,DWORD PTR [edx-0x33]
  41da6b:	mov    bh,0x4a
  41da6d:	fcom   QWORD PTR ds:0x36bdab3
  41da73:	lahf   
  41da74:	cdq    
  41da75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da76:	(bad)  
  41da77:	push   eax
  41da78:	les    ebp,FWORD PTR [edx-0x5f6ae621]
  41da7e:	dec    edx
  41da7f:	dec    esp
  41da80:	xor    DWORD PTR [edi-0x33],0xbc35bc38
  41da87:	out    0xb1,al
  41da89:	add    DWORD PTR ds:0xfa909bc6,0x9361ad12
  41da93:	mov    al,0x8
  41da95:	jnp    0x41db06
  41da97:	mov    al,0xc8
  41da99:	mov    DWORD PTR ds:0x69c4b5d,ecx
  41da9f:	mov    ebx,0x3c3f442d
  41daa4:	xchg   edx,eax
  41daa5:	mov    ah,0xd5
  41daa7:	mov    ecx,0x47e55c42
  41daac:	cs jp  0x41db1b
  41daaf:	fldcw  WORD PTR [esi]
  41dab1:	adc    ecx,0xbc19132b
  41dab7:	cdq    
  41dab8:	dec    edx
  41dab9:	jbe    0x41dae3
  41dabb:	jae    0x41daba
  41dabd:	mov    ds,WORD PTR [ebx+0x16f041a8]
  41dac3:	push   0x3da8756e
  41dac8:	stos   DWORD PTR es:[edi],eax
  41dac9:	(bad)  
  41daca:	sbb    ebx,DWORD PTR [ecx+0x431d51c7]
  41dad0:	mov    al,0xc1
  41dad2:	(bad)  
  41dad4:	mov    esp,0x51c135ab
  41dad9:	xor    DWORD PTR [edx-0x4499b14],ebx
  41dadf:	push   esi
  41dae0:	js     0x41db61
  41dae2:	or     al,0xcb
  41dae4:	mov    eax,DWORD PTR [ecx]
  41dae6:	or     eax,0x56053b71
  41daeb:	add    bl,BYTE PTR [esi]
  41daed:	mov    ch,0x80
  41daef:	push   ds
  41daf0:	and    dh,BYTE PTR [esi-0x56f16f80]
  41daf6:	mov    dh,0xf5
  41daf8:	into   
  41daf9:	pop    ds
  41dafa:	sub    ebx,DWORD PTR [ecx-0x70]
  41dafd:	mov    edx,edx
  41daff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db00:	sub    DWORD PTR [esi+edx*1+0x1e],0x2575adc0
  41db08:	and    esp,eax
  41db0a:	mov    esi,0xf49f8a63
  41db0f:	pop    ss
  41db10:	inc    esi
  41db11:	mov    dl,0xca
  41db13:	ja     0x41db7c
  41db15:	mov    bh,0x53
  41db17:	loope  0x41db32
  41db19:	fstp   QWORD PTR cs:[edx+0x3e8b3371]
  41db20:	sub    eax,0x2cc38465
  41db25:	mov    esi,0x14e13ee8
  41db2a:	ds xchg edx,eax
  41db2c:	jne    0x41db4b
  41db2e:	inc    ebx
  41db2f:	and    ebp,DWORD PTR [edi+edi*4]
  41db32:	hlt    
  41db33:	sbb    ch,0x54
  41db36:	mov    edx,0x2814e90b
  41db3b:	pushf  
  41db3c:	aaa    
  41db3d:	mov    al,0x4c
  41db3f:	push   0x2c
  41db41:	and    eax,0x427804c4
  41db46:	adc    esp,eax
  41db48:	push   cs
  41db49:	nop
  41db4a:	clc    
  41db4b:	sar    bh,1
  41db4d:	cmp    al,0xae
  41db4f:	sbb    DWORD PTR [esi-0x1a09dab8],ecx
  41db55:	out    dx,al
  41db56:	push   edx
  41db57:	shl    BYTE PTR [ebx+0x55],cl
  41db5a:	pop    edx
  41db5b:	jno    0x41db37
  41db5d:	adc    BYTE PTR [eax],ah
  41db5f:	xor    esp,ebx
  41db61:	aas    
  41db62:	jmp    0x41db7a
  41db64:	fsubr  st(6),st
  41db66:	ret    
  41db67:	and    eax,0x2ff0a5a
  41db6c:	inc    edi
  41db6d:	xor    BYTE PTR [edi],ah
  41db6f:	mov    ecx,0x113ff379
  41db74:	call   0x13b8c97c
  41db79:	and    ecx,DWORD PTR [esi+0x5f]
  41db7c:	mov    ch,0x4f
  41db7e:	inc    ecx
  41db7f:	push   0xceaa3b73
  41db84:	fnstenv [edi-0x65]
  41db87:	psrlq  mm7,QWORD PTR [edx-0x16]
  41db8b:	cmp    al,0x95
  41db8d:	jne    0x41db44
  41db8f:	out    0xeb,eax
  41db91:	idiv   cl
  41db93:	fistp  QWORD PTR [ebx]
  41db95:	adc    eax,0x645b497f
  41db9a:	ins    DWORD PTR es:[edi],dx
  41db9b:	stc    
  41db9c:	push   eax
  41db9d:	ret    0x79db
  41dba0:	pop    ebp
  41dba1:	jge    0x41db48
  41dba3:	fst    DWORD PTR [esi+0x40]
  41dba6:	ds out dx,al
  41dba8:	(bad)  
  41dba9:	sbb    bl,ah
  41dbab:	stc    
  41dbac:	lods   eax,DWORD PTR ds:[esi]
  41dbad:	jb     0x41dc20
  41dbaf:	icebp  
  41dbb0:	nop
  41dbb1:	stos   DWORD PTR es:[edi],eax
  41dbb2:	pop    ecx
  41dbb3:	or     eax,0x2af75c22
  41dbb8:	cmp    dl,dh
  41dbba:	sti    
  41dbbb:	mov    ecx,0x7cb8b0ac
  41dbc0:	(bad)  
  41dbc1:	xchg   ebx,eax
  41dbc2:	aad    0xc
  41dbc4:	sbb    esp,DWORD PTR [edi-0x503e4b23]
  41dbca:	scas   eax,DWORD PTR es:[edi]
  41dbcb:	jbe    0x41dc00
  41dbcd:	dec    ebx
  41dbce:	push   esi
  41dbcf:	lods   eax,DWORD PTR ds:[esi]
  41dbd0:	xchg   esi,eax
  41dbd1:	xchg   BYTE PTR [ebx-0x13],cl
  41dbd4:	cs loop 0x41dbc1
  41dbd7:	xor    bh,BYTE PTR [ebp-0x3]
  41dbda:	xor    BYTE PTR [esi],bh
  41dbdc:	xor    ebx,DWORD PTR [eax]
  41dbde:	iret   
  41dbdf:	daa    
  41dbe0:	xchg   ecx,eax
  41dbe1:	push   ebx
  41dbe2:	xor    BYTE PTR [ecx],dl
  41dbe4:	sbb    eax,0xd0031f4
  41dbe9:	sub    al,0x19
  41dbeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbec:	clc    
  41dbed:	scas   eax,DWORD PTR es:[edi]
  41dbee:	int    0x87
  41dbf0:	mov    ah,0xe5
  41dbf2:	ret    
  41dbf3:	leave  
  41dbf4:	addr16 pop ss
  41dbf6:	popa   
  41dbf7:	rcr    BYTE PTR [esp+ebx*8+0x3b],1
  41dbfb:	div    DWORD PTR [esi+0x69]
  41dbfe:	sbb    eax,0x4a685ce0
  41dc03:	retf   
  41dc04:	xchg   esi,eax
  41dc05:	rol    DWORD PTR [ebp+0x227d57b3],cl
  41dc0b:	xor    cl,BYTE PTR ds:0x185cc5a3
  41dc11:	imul   ebp,DWORD PTR [esi-0x76],0x1db1cf7
  41dc18:	rcr    BYTE PTR [edi-0x7c],0x39
  41dc1c:	scas   al,BYTE PTR es:[edi]
  41dc1d:	(bad)  
  41dc1e:	aas    
  41dc1f:	sub    al,0xfd
  41dc21:	adc    al,0xd7
  41dc23:	out    dx,eax
  41dc24:	ret    
  41dc25:	out    dx,eax
  41dc26:	mov    eax,0x957658cc
  41dc2b:	xchg   edi,eax
  41dc2c:	pop    ebp
  41dc2d:	push   ebx
  41dc2e:	push   ebx
  41dc2f:	push   0xae157984
  41dc34:	push   esi
  41dc35:	loopne 0x41dcb6
  41dc37:	std    
  41dc38:	push   ecx
  41dc39:	or     bh,dl
  41dc3b:	ret    
  41dc3c:	xor    DWORD PTR es:[eax-0x6e841123],0x3c
  41dc44:	rcl    BYTE PTR [esi],cl
  41dc46:	stos   BYTE PTR es:[edi],al
  41dc47:	pop    ebp
  41dc48:	in     al,dx
  41dc49:	mov    esi,DWORD PTR [ecx-0x318a2a0]
  41dc4f:	mov    BYTE PTR [edx+edx*2],al
  41dc52:	div    ecx
  41dc54:	std    
  41dc55:	sbb    DWORD PTR [edi-0xe],esp
  41dc58:	pop    ecx
  41dc59:	rcl    DWORD PTR [edx],0x43
  41dc5c:	out    0x45,eax
  41dc5e:	cs xor al,0x62
  41dc61:	pop    edi
  41dc62:	xlat   BYTE PTR ds:[ebx]
  41dc63:	or     al,BYTE PTR [ebx]
  41dc65:	outs   dx,DWORD PTR ds:[esi]
  41dc66:	dec    eax
  41dc67:	pop    edx
  41dc68:	test   BYTE PTR ds:0x1501d0a1,ah
  41dc6e:	jle    0x41dc55
  41dc70:	in     al,0xeb
  41dc72:	inc    edi
  41dc73:	jno    0x41dcef
  41dc75:	or     BYTE PTR [ecx-0x63],bl
  41dc78:	sub    al,0x78
  41dc7a:	inc    esp
  41dc7b:	push   es
  41dc7c:	jb     0x41dcdc
  41dc7e:	mov    esi,0x9f5b82f0
  41dc83:	repnz loopne 0x41dccd
  41dc86:	rcr    BYTE PTR [esi-0x29cdb847],cl
  41dc8c:	cmc    
  41dc8d:	in     eax,0x9a
  41dc8f:	xchg   DWORD PTR ds:0xbab7df28,eax
  41dc95:	lods   al,BYTE PTR ds:[esi]
  41dc96:	cmp    esp,DWORD PTR [esi-0x19]
  41dc99:	mov    eax,0xe09d3ca6
  41dc9e:	push   cs
  41dc9f:	cdq    
  41dca0:	outs   dx,DWORD PTR ds:[esi]
  41dca1:	mov    al,ds:0x9f7bad30
  41dca6:	dec    edx
  41dca7:	fs jge 0x41dd23
  41dcaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcab:	pushw  ss
  41dcad:	or     eax,0xa56f3e9c
  41dcb2:	test   BYTE PTR [eax+0x297ded7],dh
  41dcb8:	ret    
  41dcb9:	clc    
  41dcba:	jp     0x41dd27
  41dcbc:	(bad)  
  41dcbd:	(bad)  
  41dcbe:	stos   DWORD PTR es:[edi],eax
  41dcbf:	mov    edi,0x9de92b30
  41dcc4:	cmp    eax,0x654c54e6
  41dcc9:	sub    DWORD PTR [esi+esi*8+0x2d4264d2],esp
  41dcd0:	jb     0x41dc99
  41dcd2:	xor    al,0x6f
  41dcd4:	jl     0x41dd09
  41dcd6:	data16 (bad) 
  41dcd8:	jbe    0x41dcf8
  41dcda:	mov    esp,0x1204da35
  41dcdf:	mov    DWORD PTR [esi-0x374644df],esp
  41dce5:	push   edi
  41dce6:	mov    BYTE PTR [ecx+0x57],ah
  41dce9:	mov    ch,0xf1
  41dceb:	sbb    BYTE PTR [esi],0x4e
  41dcee:	mov    ah,0x74
  41dcf0:	adc    eax,DWORD PTR [edi+0x50bd8ca9]
  41dcf6:	jmp    0xbed34d06
  41dcfb:	test   eax,eax
  41dcfd:	je     0x41dd65
  41dd03:	lea    eax,[ebp-0x8]
  41dd06:	mov    DWORD PTR [ebp-0x34],eax
  41dd09:	mov    eax,DWORD PTR [ebp-0x30]
  41dd0c:	mov    DWORD PTR [ebp-0x8],eax
  41dd0f:	mov    eax,DWORD PTR [ebp-0x8]
  41dd12:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd15:	sub    eax,ecx
  41dd17:	mov    DWORD PTR [ebp-0x8],eax
  41dd1a:	mov    ecx,DWORD PTR [ebp-0x4]
  41dd1d:	xor    ecx,esi
  41dd1f:	mov    eax,0xffcd8d11
  41dd24:	sub    eax,ecx
  41dd26:	add    DWORD PTR [ebp-0x8],eax
  41dd29:	mov    eax,DWORD PTR [ebp-0x8]
  41dd2c:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd2f:	mov    DWORD PTR [ecx+0x1],eax
  41dd32:	mov    eax,DWORD PTR [ebp-0x14]
  41dd35:	push   DWORD PTR [ebp-0x24]
  41dd38:	mov    BYTE PTR [eax],0xe9
  41dd3b:	mov    eax,ds:0x42929a
  41dd40:	push   DWORD PTR [eax]
  41dd42:	push   DWORD PTR ds:0x4294fe
  41dd48:	push   DWORD PTR ds:0x4292a2
  41dd4e:	push   DWORD PTR ds:0x4294de
  41dd54:	push   DWORD PTR ds:0x42a18a
  41dd5a:	push   DWORD PTR [ebp-0x28]
  41dd5d:	push   DWORD PTR [ebp-0x2c]
  41dd60:	mov    eax,DWORD PTR [ebp-0x14]
  41dd63:	call   eax
  41dd65:	pop    edi
  41dd66:	pop    esi
  41dd67:	leave  
  41dd68:	ret    
  41dd69:	push   ebp
  41dd6a:	mov    ebp,esp
  41dd6c:	sub    esp,0x1c
  41dd6f:	adc    DWORD PTR ds:0x42a43a,0x3656
  41dd79:	mov    DWORD PTR [ebp-0x10],0xf89f85b9
  41dd80:	lea    eax,[ebp+0x14]
  41dd83:	or     edx,edx
  41dd85:	mov    DWORD PTR [ebp-0x4],eax
  41dd88:	xor    edx,0xd6f
  41dd8e:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41dd95:	lea    eax,[ebp-0xc]
  41dd98:	and    DWORD PTR ds:0x42a40a,0x0
  41dda2:	jmp    0x41ddb4
  41dda7:	mov    edx,DWORD PTR ds:0x42a40a
  41ddad:	inc    edx
  41ddae:	mov    DWORD PTR ds:0x42a40a,edx
  41ddb4:	cmp    DWORD PTR ds:0x42a40a,0x16
  41ddbb:	jae    0x41de02
  41ddc1:	cmp    DWORD PTR ds:0x42a40a,0xe
  41ddc8:	jbe    0x41de02
  41ddce:	jmp    0x41dde3
  41ddd3:	push   0x42a442
  41ddd8:	push   0x4291d1
  41dddd:	call   DWORD PTR ds:0x42a542
  41dde3:	cmp    DWORD PTR ds:0x42a40a,0xd
  41ddea:	jne    0x41ddfd
  41ddf0:	mov    edx,DWORD PTR ds:0x42a40a
  41ddf6:	inc    edx
  41ddf7:	mov    DWORD PTR ds:0x42a40a,edx
  41ddfd:	jmp    0x41dda7
  41de02:	mov    DWORD PTR [ebp-0x14],eax
  41de05:	mov    eax,DWORD PTR [ebp-0xc]
  41de08:	mov    edx,DWORD PTR [ebp-0x14]
  41de0b:	add    DWORD PTR ds:0x42a3ba,0x2e29
  41de15:	mov    ecx,0x75108a8
  41de1a:	sbb    DWORD PTR ds:0x42a3c2,0x6ecf
  41de24:	xor    eax,ecx
  41de26:	sub    DWORD PTR ds:0x42a3a6,0x42a3ea
  41de30:	add    eax,0x3272ef
  41de35:	mov    DWORD PTR [edx],eax
  41de37:	mov    eax,ds:0x429296
  41de3c:	and    DWORD PTR ds:0x42a416,0x0
  41de46:	mov    edx,DWORD PTR ds:0x42a416
  41de4c:	inc    edx
  41de4d:	mov    DWORD PTR ds:0x42a416,edx
  41de53:	cmp    DWORD PTR ds:0x42a416,0x5
  41de5a:	jge    0x41de9f
  41de60:	jmp    0x41de78
  41de65:	push   DWORD PTR [ebp-0x1c]
  41de68:	push   0x42919f
  41de6d:	push   0x429153
  41de72:	call   DWORD PTR ds:0x42a506
  41de78:	cmp    DWORD PTR ds:0x42a416,0x4
  41de7f:	jne    0x41de92
  41de85:	mov    edx,DWORD PTR ds:0x42a416
  41de8b:	inc    edx
  41de8c:	mov    DWORD PTR ds:0x42a416,edx
  41de92:	cmp    DWORD PTR ds:0x42a416,0x1a
  41de99:	jb     0x41de46
  41de9f:	mov    edx,DWORD PTR [ebp-0x4]
  41dea2:	mov    eax,DWORD PTR [eax]
  41dea4:	add    eax,DWORD PTR [edx]
  41dea6:	sbb    edx,DWORD PTR ds:0x42a3fa
  41deac:	push   esi
  41dead:	adc    DWORD PTR ds:0x42a3ba,0x287e
  41deb7:	mov    DWORD PTR [ebp-0x8],eax
  41deba:	adc    esi,esi
  41debc:	mov    edx,DWORD PTR [ebp+0x8]
  41debf:	mov    eax,ds:0x42941e
  41dec4:	xor    DWORD PTR ds:0x42a406,0x51ed
  41dece:	mov    eax,DWORD PTR [eax+0x198]
  41ded4:	and    DWORD PTR ds:0x42a3fe,0x0
  41dede:	mov    esi,DWORD PTR ds:0x42a3fe
  41dee4:	inc    esi
  41dee5:	mov    DWORD PTR ds:0x42a3fe,esi
  41deeb:	cmp    DWORD PTR ds:0x42a3fe,0x1b
  41def2:	jle    0x41df22
  41def8:	jmp    0x41df15
  41defd:	push   0x659e
  41df02:	push   0x42a3ba
  41df07:	push   0x7425
  41df0c:	push   DWORD PTR [ebp-0x28]
  41df0f:	call   DWORD PTR ds:0x42a546
  41df15:	cmp    DWORD PTR ds:0x42a3fe,0x12
  41df1c:	jb     0x41dede
  41df22:	xor    edx,ecx
  41df24:	mov    esi,0x3272ef
  41df29:	and    DWORD PTR ds:0x42a3fa,0x1b88
  41df33:	add    edx,esi
  41df35:	cmp    DWORD PTR [eax],edx
  41df37:	mov    DWORD PTR ds:0x42a3b2,0x5220
  41df41:	je     0x41df4e
  41df47:	mov    eax,DWORD PTR [eax]
  41df49:	jmp    0x41e3e2
  41df4e:	and    DWORD PTR ds:0x42a44e,0x0
  41df58:	mov    eax,ds:0x42a44e
  41df5d:	inc    eax
  41df5e:	mov    ds:0x42a44e,eax
  41df63:	cmp    DWORD PTR ds:0x42a44e,0xd
  41df6a:	jg     0x41dfa8
  41df70:	jmp    0x41df83
  41df75:	push   DWORD PTR [ebp-0x14]
  41df78:	push   0x42a41e
  41df7d:	call   DWORD PTR ds:0x42a54a
  41df83:	cmp    DWORD PTR ds:0x42a44e,0xc
  41df8a:	jne    0x41df9b
  41df90:	mov    eax,ds:0x42a44e
  41df95:	inc    eax
  41df96:	mov    ds:0x42a44e,eax
  41df9b:	cmp    DWORD PTR ds:0x42a44e,0x17
  41dfa2:	jb     0x41df58
  41dfa8:	mov    eax,DWORD PTR [ebp+0x18]
  41dfab:	sub    DWORD PTR ds:0x42a42e,0x5c9e
  41dfb5:	xor    eax,ecx
  41dfb7:	push   ebx
  41dfb8:	sbb    ebx,0x56df
  41dfbe:	add    eax,esi
  41dfc0:	add    ebx,DWORD PTR ds:0x42a41a
  41dfc6:	xor    edx,edx
  41dfc8:	mov    ebx,0xfabdbeda
  41dfcd:	add    eax,ebx
  41dfcf:	push   edi
  41dfd0:	mov    edi,0x286f
  41dfd5:	adc    edx,0xffffffff
  41dfd8:	mov    edi,0x8a29a13b
  41dfdd:	xor    eax,edi
  41dfdf:	mov    DWORD PTR ds:0x42a43a,0x59ae
  41dfe9:	xor    edx,0x0
  41dfec:	mov    DWORD PTR ds:0x42a426,0x4720
  41dff6:	cmp    eax,0x70941fe1
  41dffb:	jne    0x41e032
  41e001:	mov    DWORD PTR ds:0x42a406,0x4be9
  41e00b:	cmp    edx,0xffffffff
  41e00e:	jne    0x41e032
  41e014:	mov    DWORD PTR ds:0x42a43a,0x6dae
  41e01e:	push   0xf89c85ba
  41e023:	mov    DWORD PTR ds:0x42a42a,0x1950
  41e02d:	jmp    0x41e3cf
  41e032:	sbb    eax,DWORD PTR ds:0x42a3e6
  41e038:	mov    eax,DWORD PTR [ebp+0x18]
  41e03b:	xor    eax,ecx
  41e03d:	adc    DWORD PTR ds:0x42a436,0x42a402
  41e047:	add    eax,esi
  41e049:	xor    edx,edx
  41e04b:	dec    DWORD PTR ds:0x42a3fa
  41e051:	add    eax,ebx
  41e053:	mov    DWORD PTR ds:0x42a3b2,0x604
  41e05d:	adc    edx,0xffffffff
  41e060:	adc    DWORD PTR ds:0x42a3ae,0x42a40e
  41e06a:	xor    eax,edi
  41e06c:	xor    edx,0x0
  41e06f:	mov    DWORD PTR ds:0x42a3ca,0x4b6d
  41e079:	cmp    eax,0x70941fe7
  41e07e:	mov    DWORD PTR ds:0x42a40e,0x342
  41e088:	jne    0x41e3bc
  41e08e:	mov    DWORD PTR ds:0x42a41a,0x69f4
  41e098:	cmp    edx,0xffffffff
  41e09b:	jne    0x41e3bc
  41e0a1:	and    edx,eax
  41e0a3:	mov    eax,DWORD PTR [ebp+0x10]
  41e0a6:	inc    edx
  41e0a7:	xor    eax,ecx
  41e0a9:	movzx  edx,BYTE PTR ds:0x42a3f2
  41e0b0:	and    DWORD PTR ds:0x42a43e,edx
  41e0b6:	add    eax,esi
  41e0b8:	sub    DWORD PTR ds:0x42a452,0x2e10
  41e0c2:	mov    DWORD PTR [ebp-0x18],eax
  41e0c5:	xor    DWORD PTR ds:0x42a416,ebx
  41e0cb:	mov    eax,DWORD PTR [ebp+0xc]
  41e0ce:	mov    edx,DWORD PTR ds:0x42a3ce
  41e0d4:	and    DWORD PTR ds:0x42a43e,edx
  41e0da:	mov    edx,DWORD PTR [ebp-0x8]
  41e0dd:	or     DWORD PTR ds:0x42a416,0x42a43a
  41e0e7:	xor    eax,ecx
  41e0e9:	xor    DWORD PTR ds:0x42a3f2,0x2c59
  41e0f3:	add    eax,esi
  41e0f5:	add    DWORD PTR ds:0x42a3aa,0x1203
  41e0ff:	imul   eax,DWORD PTR [edx]
  41e102:	mov    edx,DWORD PTR [ebp+0x8]
  41e105:	xor    edx,ecx
  41e107:	add    edx,esi
  41e109:	mov    DWORD PTR ds:0x42a3d6,0x15dc
  41e113:	cmp    edx,eax
  41e115:	mov    eax,DWORD PTR [ebp-0x4]
  41e118:	mov    DWORD PTR ds:0x42a41a,0x25f0
  41e122:	je     0x41e1f0
  41e128:	xor    DWORD PTR ds:0x42a432,edi
  41e12e:	mov    edx,DWORD PTR [ebp-0x18]
  41e131:	and    DWORD PTR ds:0x42a3aa,0x42a3e6
  41e13b:	add    DWORD PTR [eax],edx
  41e13d:	mov    eax,DWORD PTR [ebp-0x4]
  41e140:	sbb    edx,0x41ab
  41e146:	mov    edx,DWORD PTR [ebp+0xc]
  41e149:	or     DWORD PTR ds:0x42a3e6,0x42a3b2
  41e153:	xor    edx,ecx
  41e155:	and    DWORD PTR ds:0x42a3b2,0x1b9a
  41e15f:	add    edx,esi
  41e161:	imul   edx,DWORD PTR [eax]
  41e164:	mov    DWORD PTR ds:0x42a446,0x43e8
  41e16e:	mov    DWORD PTR [eax],edx
  41e170:	mov    eax,DWORD PTR [ebp-0x4]
  41e173:	and    DWORD PTR ds:0x42a402,0x0
  41e17d:	mov    edx,DWORD PTR ds:0x42a402
  41e183:	inc    edx
  41e184:	mov    DWORD PTR ds:0x42a402,edx
  41e18a:	cmp    DWORD PTR ds:0x42a402,0x8
  41e191:	jle    0x41e1d3
  41e197:	jmp    0x41e1aa
  41e19c:	push   0x4291e3
  41e1a1:	push   DWORD PTR [ebp-0x28]
  41e1a4:	call   DWORD PTR ds:0x42a50a
  41e1aa:	cmp    DWORD PTR ds:0x42a402,0x7
  41e1b1:	jne    0x41e1c6
  41e1b7:	xor    edx,edx
  41e1b9:	or     edx,DWORD PTR ds:0x42a402
  41e1bf:	inc    edx
  41e1c0:	mov    DWORD PTR ds:0x42a402,edx
  41e1c6:	cmp    DWORD PTR ds:0x42a402,0x1f
  41e1cd:	jb     0x41e17d
  41e1d3:	mov    DWORD PTR [ebp-0x1c],eax
  41e1d6:	not    DWORD PTR ds:0x42a422
  41e1dc:	mov    eax,DWORD PTR [ebp+0x10]
  41e1df:	xor    eax,ecx
  41e1e1:	mov    edx,0xffcd8d11
  41e1e6:	sub    edx,eax
  41e1e8:	mov    eax,DWORD PTR [ebp-0x1c]
  41e1eb:	jmp    0x41e253
  41e1f0:	mov    edx,DWORD PTR [ebp+0x14]
  41e1f3:	xor    DWORD PTR [eax],edx
  41e1f5:	mov    DWORD PTR ds:0x42a3fa,0x16
  41e1ff:	cmp    DWORD PTR ds:0x42a3fa,0x0
  41e206:	je     0x41e23e
  41e20c:	cmp    DWORD PTR ds:0x42a3fa,0x25
  41e213:	jbe    0x41e23e
  41e219:	jmp    0x41e22e
  41e21e:	push   0x5d62
  41e223:	push   0x42a3c2
  41e228:	call   DWORD PTR ds:0x42a55a
  41e22e:	mov    eax,ds:0x42a3fa
  41e233:	dec    eax
  41e234:	mov    ds:0x42a3fa,eax
  41e239:	jmp    0x41e1ff
  41e23e:	mov    eax,DWORD PTR [ebp-0x4]
  41e241:	mov    DWORD PTR [ebp-0x1c],eax
  41e244:	mov    eax,DWORD PTR [ebp+0x10]
  41e247:	xor    eax,ecx
  41e249:	mov    edx,0xffcd8d11
  41e24e:	sub    edx,eax
  41e250:	mov    eax,DWORD PTR [ebp-0x1c]
  41e253:	add    DWORD PTR [eax],edx
  41e255:	mov    eax,DWORD PTR [ebp-0x4]
  41e258:	mov    edx,DWORD PTR [ebp-0x8]
  41e25b:	add    edx,DWORD PTR [eax]
  41e25d:	mov    DWORD PTR [ebp-0x8],edx
  41e260:	mov    eax,DWORD PTR [ebp+0xc]
  41e263:	mov    edx,DWORD PTR [ebp+0xc]
  41e266:	xor    edx,ecx
  41e268:	xor    eax,ecx
  41e26a:	lea    eax,[eax+edx*1+0x64e5de]
  41e271:	mov    edx,DWORD PTR [ebp+0xc]
  41e274:	xor    edx,ecx
  41e276:	add    edx,esi
  41e278:	imul   eax,edx
  41e27b:	mov    edx,DWORD PTR [ebp+0xc]
  41e27e:	xor    edx,ecx
  41e280:	sub    edx,eax
  41e282:	mov    eax,DWORD PTR [ebp-0x4]
  41e285:	add    edx,esi
  41e287:	cmp    DWORD PTR [eax],edx
  41e289:	mov    eax,DWORD PTR [ebp-0x4]
  41e28c:	jg     0x41e2a9
  41e292:	mov    DWORD PTR [ebp-0x1c],eax
  41e295:	mov    eax,DWORD PTR [ebp+0x10]
  41e298:	xor    eax,ecx
  41e29a:	mov    edx,0xffcd8d11
  41e29f:	sub    edx,eax
  41e2a1:	mov    eax,DWORD PTR [ebp-0x1c]
  41e2a4:	jmp    0x41e2b0
  41e2a9:	mov    edx,DWORD PTR [ebp+0x10]
  41e2ac:	xor    edx,ecx
  41e2ae:	add    edx,esi
  41e2b0:	add    DWORD PTR [eax],edx
  41e2b2:	mov    eax,DWORD PTR [ebp-0x8]
  41e2b5:	mov    edx,DWORD PTR [ebp-0x10]
  41e2b8:	mov    eax,DWORD PTR [eax]
  41e2ba:	xor    edx,ecx
  41e2bc:	add    edx,0x3272ee
  41e2c2:	not    edx
  41e2c4:	and    eax,edx
  41e2c6:	mov    DWORD PTR [ebp-0x4],eax
  41e2c9:	movsx  eax,BYTE PTR [eax+0x1]
  41e2cd:	cdq    
  41e2ce:	add    eax,ebx
  41e2d0:	adc    edx,0xffffffff
  41e2d3:	xor    eax,edi
  41e2d5:	xor    edx,0x0
  41e2d8:	cmp    eax,0x70941e0f
  41e2dd:	jne    0x41e311
  41e2e3:	cmp    edx,0xffffffff
  41e2e6:	jne    0x41e311
  41e2ec:	mov    eax,DWORD PTR [ebp-0x4]
  41e2ef:	movsx  eax,BYTE PTR [eax]
  41e2f2:	cdq    
  41e2f3:	add    eax,ebx
  41e2f5:	adc    edx,0xffffffff
  41e2f8:	xor    eax,edi
  41e2fa:	xor    edx,0x0
  41e2fd:	cmp    eax,0x70941e1c
  41e302:	jne    0x41e311
  41e308:	cmp    edx,0xffffffff
  41e30b:	je     0x41e328
  41e311:	mov    eax,DWORD PTR [ebp-0x10]
  41e314:	xor    eax,ecx
  41e316:	mov    edx,0xffcd8d11
  41e31b:	sub    edx,eax
  41e31d:	add    DWORD PTR [ebp-0x4],edx
  41e320:	mov    eax,DWORD PTR [ebp-0x4]
  41e323:	jmp    0x41e2c9
  41e328:	mov    eax,DWORD PTR [ebp-0x14]
  41e32b:	mov    eax,DWORD PTR [eax]
  41e32d:	mov    edx,DWORD PTR [ebp-0x4]
  41e330:	mov    edx,DWORD PTR [edx+0x3c]
  41e333:	lea    eax,[edx+eax*8+0x78]
  41e337:	mov    edx,DWORD PTR [ebp-0x4]
  41e33a:	mov    eax,DWORD PTR [eax+edx*1]
  41e33d:	mov    DWORD PTR [ebp-0x8],eax
  41e340:	mov    eax,DWORD PTR [ebp+0x8]
  41e343:	xor    eax,ecx
  41e345:	add    eax,esi
  41e347:	mov    DWORD PTR [ebp-0x14],eax
  41e34a:	mov    eax,DWORD PTR [ebp+0x8]
  41e34d:	mov    edx,DWORD PTR [ebp-0x8]
  41e350:	xor    eax,ecx
  41e352:	add    eax,esi
  41e354:	cmp    edx,eax
  41e356:	jne    0x41e374
  41e35c:	mov    eax,DWORD PTR [ebp+0xc]
  41e35f:	xor    eax,ecx
  41e361:	mov    ecx,DWORD PTR [ebp-0x8]
  41e364:	add    eax,esi
  41e366:	imul   eax,ecx
  41e369:	mov    DWORD PTR [ebp-0x8],eax
  41e36c:	push   DWORD PTR [ebp+0x18]
  41e36f:	jmp    0x41e3cf
  41e374:	mov    eax,DWORD PTR [ebp-0x8]
  41e377:	mov    ecx,DWORD PTR [ebp-0x4]
  41e37a:	add    eax,ecx
  41e37c:	mov    DWORD PTR [ebp-0x14],eax
  41e37f:	mov    eax,DWORD PTR [ebp-0x14]
  41e382:	mov    eax,DWORD PTR [eax+0xc]
  41e385:	movsx  eax,BYTE PTR [eax+ecx*1]
  41e389:	cdq    
  41e38a:	add    eax,ebx
  41e38c:	adc    edx,0xffffffff
  41e38f:	xor    eax,edi
  41e391:	xor    edx,0x0
  41e394:	cmp    eax,0x70941e1e
  41e399:	jne    0x41e36c
  41e39f:	cmp    edx,0xffffffff
  41e3a2:	jne    0x41e36c
  41e3a8:	mov    eax,ds:0x42941e
  41e3ad:	mov    eax,DWORD PTR [eax+0x198]
  41e3b3:	mov    DWORD PTR [eax],ecx
  41e3b5:	mov    eax,ecx
  41e3b7:	jmp    0x41e3e0
  41e3bc:	mov    eax,DWORD PTR [ebp+0x18]
  41e3bf:	cmp    eax,0xf89c85ba
  41e3c4:	jne    0x41e3e0
  41e3ca:	push   0xf89c85bb
  41e3cf:	push   DWORD PTR [ebp+0x14]
  41e3d2:	push   DWORD PTR [ebp+0x10]
  41e3d5:	push   DWORD PTR [ebp+0xc]
  41e3d8:	push   DWORD PTR [ebp+0x8]
  41e3db:	call   0x41dd69
  41e3e0:	pop    edi
  41e3e1:	pop    ebx
  41e3e2:	pop    esi
  41e3e3:	leave  
  41e3e4:	ret    0x14
  41e3e7:	push   ebp
  41e3e8:	mov    ebp,esp
  41e3ea:	sub    esp,0x68
  41e3ed:	add    DWORD PTR ds:0x42a43e,0x42a42a
  41e3f7:	push   esi
  41e3f8:	push   edi
  41e3f9:	xor    edi,edi
  41e3fb:	mov    DWORD PTR ds:0x42a3de,0x573c
  41e405:	push   edi
  41e406:	call   DWORD PTR ds:0x42a522
  41e40c:	mov    esi,DWORD PTR ds:0x42a552
  41e412:	not    DWORD PTR ds:0x42a40e
  41e418:	push   0xf
  41e41a:	mov    DWORD PTR [ebp-0x14],eax
  41e41d:	add    DWORD PTR ds:0x42a3ca,0x7d28
  41e427:	lea    eax,[ebp-0x68]
  41e42a:	and    DWORD PTR ds:0x42a402,0x1edb
  41e434:	push   eax
  41e435:	push   0x429542
  41e43a:	sub    DWORD PTR ds:0x42a41a,0x42a406
  41e444:	push   0x42955e
  41e449:	push   0x42958e
  41e44e:	sbb    DWORD PTR ds:0x42a3fe,0x7a6
  41e458:	call   esi
  41e45a:	mov    DWORD PTR ds:0x42a3a6,0x73eb
  41e464:	shl    eax,0x15
  41e467:	mov    DWORD PTR ds:0x42a3ba,0x2439
  41e471:	cmp    eax,0x1800000
  41e476:	je     0x41e48d
  41e47c:	xor    eax,eax
  41e47e:	mov    DWORD PTR ds:0x42a3ae,0x1037
  41e488:	jmp    0x41f43c
  41e48d:	or     DWORD PTR ds:0x42a406,0x42a3a6
  41e497:	push   0x4295b6
  41e49c:	call   DWORD PTR ds:0x42a54e
  41e4a2:	xor    DWORD PTR ds:0x42a3da,0x42a432
  41e4ac:	test   eax,eax
  41e4ae:	mov    DWORD PTR ds:0x42a3b6,0x194e
  41e4b8:	jne    0x41e47c
  41e4be:	push   0x4295ee
  41e4c3:	xor    DWORD PTR ds:0x42a3f2,0x42a3d6
  41e4cd:	call   DWORD PTR ds:0x42a556
  41e4d3:	test   eax,eax
  41e4d5:	mov    DWORD PTR ds:0x42a432,0x7c0b
  41e4df:	jne    0x41e47c
  41e4e5:	or     DWORD PTR ds:0x42a42e,0x6f8e
  41e4ef:	push   ebx
  41e4f0:	mov    DWORD PTR ds:0x42a41a,0xfae
  41e4fa:	push   DWORD PTR [ebp-0x14]
  41e4fd:	add    DWORD PTR ds:0x42a3d6,0x42a3ee
  41e507:	push   edi
  41e508:	sbb    DWORD PTR ds:0x42a442,0x76dd
  41e512:	call   DWORD PTR ds:0x42a536
  41e518:	mov    ecx,DWORD PTR ds:0x42a4ce
  41e51e:	mov    ebx,DWORD PTR ds:0x42a4e6
  41e524:	sub    ecx,ebx
  41e526:	sub    ecx,DWORD PTR [ecx+ebx*1]
  41e529:	mov    DWORD PTR [ebp-0x2c],edi
  41e52c:	or     DWORD PTR ds:0x42a3ee,0x565
  41e536:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41e53d:	mov    DWORD PTR ds:0x42a3c2,0x78c3
  41e547:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  41e54e:	or     ebx,ecx
  41e550:	lea    eax,[ebp-0x20]
  41e553:	mov    DWORD PTR [ebp-0x2c],eax
  41e556:	add    ebx,edi
  41e558:	lea    eax,[ebp-0x1c]
  41e55b:	mov    edi,DWORD PTR ds:0x42a462
  41e561:	mov    ecx,DWORD PTR ds:0x42a49e
  41e567:	sub    edi,ecx
  41e569:	and    edi,DWORD PTR [edi+ecx*1]
  41e56c:	mov    DWORD PTR [ebp-0x14],eax
  41e56f:	and    DWORD PTR ds:0x42a3fa,0x5d3c
  41e579:	mov    eax,ds:0x42941e
  41e57e:	xor    ebx,ebx
  41e580:	xor    ebx,DWORD PTR ds:0x42a40a
  41e586:	sbb    DWORD PTR ds:0x42a43e,ebx
  41e58c:	mov    eax,DWORD PTR [eax+0x1c8]
  41e592:	sbb    edi,DWORD PTR ds:0x42a44e
  41e598:	mov    eax,DWORD PTR [eax]
  41e59a:	and    DWORD PTR ds:0x42a3f2,0x0
  41e5a4:	mov    edi,DWORD PTR ds:0x42a3f2
  41e5aa:	inc    edi
  41e5ab:	mov    DWORD PTR ds:0x42a3f2,edi
  41e5b1:	cmp    DWORD PTR ds:0x42a3f2,0xf
  41e5b8:	jl     0x41e5fe
  41e5be:	jmp    0x41e5d7
  41e5c3:	push   DWORD PTR [ebp-0x1c]
  41e5c6:	push   DWORD PTR [ebp-0x1c]
  41e5c9:	push   DWORD PTR [ebp-0xc]
  41e5cc:	push   0x53e0
  41e5d1:	call   DWORD PTR ds:0x42a50e
  41e5d7:	cmp    DWORD PTR ds:0x42a3f2,0xe
  41e5de:	jne    0x41e5f1
  41e5e4:	mov    edi,DWORD PTR ds:0x42a3f2
  41e5ea:	inc    edi
  41e5eb:	mov    DWORD PTR ds:0x42a3f2,edi
  41e5f1:	cmp    DWORD PTR ds:0x42a3f2,0x1d
  41e5f8:	jb     0x41e5a4
  41e5fe:	mov    ecx,DWORD PTR [ebp-0x14]
  41e601:	and    ebx,DWORD PTR ds:0x42a42a
  41e607:	mov    edi,0x75108a8
  41e60c:	xor    ebx,DWORD PTR ds:0x42a3f2
  41e612:	xor    eax,edi
  41e614:	mov    ebx,DWORD PTR ds:0x42a40a
  41e61a:	or     DWORD PTR ds:0x42a3be,ebx
  41e620:	mov    ebx,0x3272ef
  41e625:	add    eax,ebx
  41e627:	mov    DWORD PTR ds:0x42a442,0x4871
  41e631:	mov    DWORD PTR [ecx],eax
  41e633:	mov    eax,ds:0x42a412
  41e638:	mov    eax,ds:0x42a25a
  41e63d:	cmp    eax,0x445cecf9
  41e642:	jne    0x41e6bf
  41e648:	sbb    ecx,0x3851
  41e64e:	mov    eax,DWORD PTR [ebp-0x4]
  41e651:	sub    DWORD PTR ds:0x42a3ea,edi
  41e657:	mov    ecx,DWORD PTR ds:0x42941e
  41e65d:	mov    ecx,DWORD PTR [ecx+0x198]
  41e663:	adc    DWORD PTR ds:0x42a3ca,0x1545
  41e66d:	xor    eax,edi
  41e66f:	add    eax,ebx
  41e671:	mov    DWORD PTR [ecx],eax
  41e673:	xor    eax,DWORD PTR ds:0x42a41e
  41e679:	mov    eax,DWORD PTR [ebp-0x4]
  41e67c:	sub    DWORD PTR ds:0x42a3be,0x2657
  41e686:	xor    eax,edi
  41e688:	add    eax,ebx
  41e68a:	mov    ds:0x42a25a,eax
  41e68f:	dec    DWORD PTR ds:0x42a40a
  41e695:	mov    eax,DWORD PTR [ebp-0x4]
  41e698:	xor    DWORD PTR ds:0x42a3da,0x42a42e
  41e6a2:	xor    eax,edi
  41e6a4:	sbb    DWORD PTR ds:0x42a3d6,0xceb
  41e6ae:	add    eax,ebx
  41e6b0:	sbb    DWORD PTR ds:0x42a3f6,0x42a41e
  41e6ba:	mov    ds:0x429516,eax
  41e6bf:	sub    eax,0xfb3
  41e6c4:	mov    eax,ds:0x42941e
  41e6c9:	not    DWORD PTR ds:0x42a422
  41e6cf:	mov    eax,DWORD PTR [eax+0x18c]
  41e6d5:	sub    DWORD PTR ds:0x42a3b2,0x42a41a
  41e6df:	mov    eax,DWORD PTR [eax]
  41e6e1:	not    DWORD PTR ds:0x42a3b2
  41e6e7:	mov    DWORD PTR [ebp-0x34],eax
  41e6ea:	adc    DWORD PTR ds:0x42a446,0x42a42e
  41e6f4:	mov    eax,0xf89c85bd
  41e6f9:	mov    DWORD PTR [ebp-0x24],eax
  41e6fc:	sbb    DWORD PTR ds:0x42a3fe,0x42a3f6
  41e706:	mov    DWORD PTR [ebp-0x24],eax
  41e709:	sub    DWORD PTR ds:0x42a3c2,0x5dcc
  41e713:	mov    DWORD PTR [ebp-0x24],eax
  41e716:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  41e71d:	sbb    DWORD PTR ds:0x42a422,0x2005
  41e727:	mov    DWORD PTR [ebp-0x14],eax
  41e72a:	mov    DWORD PTR ds:0x42a426,0x202e
  41e734:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  41e73b:	mov    eax,DWORD PTR [ebp-0x4]
  41e73e:	add    DWORD PTR ds:0x42a406,0x42a41e
  41e748:	xor    eax,edi
  41e74a:	or     DWORD PTR ds:0x42a3da,0x42a3e2
  41e754:	add    eax,ebx
  41e756:	jmp    0x41e89f
  41e75b:	dec    DWORD PTR ds:0x42a3c2
  41e761:	lea    eax,[ebp-0x68]
  41e764:	adc    DWORD PTR ds:0x42a3ee,0x2f79
  41e76e:	push   eax
  41e76f:	xor    DWORD PTR ds:0x42a3ba,0x2364
  41e779:	push   0x429606
  41e77e:	push   0x429622
  41e783:	push   0x429652
  41e788:	sub    DWORD PTR ds:0x42a3ea,0x2bd1
  41e792:	call   esi
  41e794:	mov    DWORD PTR ds:0x42a3c6,0x6294
  41e79e:	shl    eax,0x15
  41e7a1:	cmp    eax,0x1800000
  41e7a6:	jne    0x41f419
  41e7ac:	dec    DWORD PTR ds:0x42a3e2
  41e7b2:	push   0x42967a
  41e7b7:	adc    DWORD PTR ds:0x42a44a,0x42a42e
  41e7c1:	call   DWORD PTR ds:0x42a54e
  41e7c7:	add    DWORD PTR ds:0x42a3ca,0x6241
  41e7d1:	test   eax,eax
  41e7d3:	jne    0x41f419
  41e7d9:	or     DWORD PTR ds:0x42a3b2,0x259a
  41e7e3:	push   0x4296b2
  41e7e8:	call   DWORD PTR ds:0x42a556
  41e7ee:	test   eax,eax
  41e7f0:	mov    DWORD PTR ds:0x42a3aa,0x7610
  41e7fa:	jne    0x41f419
  41e800:	mov    DWORD PTR ds:0x42a446,0x3430
  41e80a:	mov    eax,DWORD PTR [ebp-0x8]
  41e80d:	mov    ecx,DWORD PTR [ebp-0x14]
  41e810:	xor    eax,edi
  41e812:	add    DWORD PTR ds:0x42a3b6,0x3941
  41e81c:	lea    eax,[eax+ecx*1+0x3272ef]
  41e823:	or     DWORD PTR ds:0x42a43e,0x42a446
  41e82d:	push   eax
  41e82e:	mov    eax,DWORD PTR [ebp-0x24]
  41e831:	sbb    DWORD PTR ds:0x42a3ee,0x42a422
  41e83b:	xor    eax,edi
  41e83d:	lea    eax,[ebp+eax*1+0x3272f7]
  41e844:	push   eax
  41e845:	and    eax,DWORD PTR ds:0x42a3ba
  41e84b:	mov    eax,ds:0x42941e
  41e850:	sbb    DWORD PTR ds:0x42a41a,0x42a43a
  41e85a:	push   DWORD PTR [eax+0x1bc]
  41e860:	add    DWORD PTR ds:0x42a3e6,0x42a442
  41e86a:	call   0x41f442
  41e86f:	adc    DWORD PTR ds:0x42a3c6,0x3c17
  41e879:	mov    eax,DWORD PTR [ebp-0x8]
  41e87c:	and    DWORD PTR ds:0x42a40a,0x7df0
  41e886:	mov    ecx,DWORD PTR [ebp-0x14]
  41e889:	movzx  edx,BYTE PTR ds:0x42a3aa
  41e890:	sub    DWORD PTR ds:0x42a42a,edx
  41e896:	xor    eax,edi
  41e898:	lea    eax,[ecx+eax*1+0x3272ef]
  41e89f:	sub    DWORD PTR ds:0x42a3aa,edi
  41e8a5:	mov    ecx,DWORD PTR [ebp-0x8]
  41e8a8:	mov    edx,DWORD PTR [ebp-0x8]
  41e8ab:	inc    DWORD PTR ds:0x42a442
  41e8b1:	xor    edx,edi
  41e8b3:	add    DWORD PTR ds:0x42a40e,0x340b
  41e8bd:	xor    ecx,edi
  41e8bf:	add    ecx,edx
  41e8c1:	and    DWORD PTR ds:0x42a412,0x0
  41e8cb:	mov    edx,DWORD PTR ds:0x42a412
  41e8d1:	inc    edx
  41e8d2:	mov    DWORD PTR ds:0x42a412,edx
  41e8d8:	cmp    DWORD PTR ds:0x42a412,0x23
  41e8df:	jge    0x41e903
  41e8e5:	jmp    0x41e8f6
  41e8ea:	push   DWORD PTR [ebp-0x1c]
  41e8ed:	push   DWORD PTR [ebp-0x1c]
  41e8f0:	call   DWORD PTR ds:0x42a512
  41e8f6:	cmp    DWORD PTR ds:0x42a412,0x1c
  41e8fd:	jb     0x41e8cb
  41e903:	mov    edx,DWORD PTR [ebp-0x8]
  41e906:	sub    DWORD PTR ds:0x42a42a,0x42a446
  41e910:	xor    edx,edi
  41e912:	lea    ecx,[ecx+edx*1+0x9758cd]
  41e919:	mov    DWORD PTR ds:0x42a3c2,0x75f2
  41e923:	mov    DWORD PTR [ebp-0x14],eax
  41e926:	push   0xf
  41e928:	cmp    eax,ecx
  41e92a:	mov    DWORD PTR ds:0x42a3de,0x7e75
  41e934:	jbe    0x41e75b
  41e93a:	sub    ecx,0x81d
  41e940:	mov    eax,DWORD PTR [ebp+0xc]
  41e943:	xor    ecx,ecx
  41e945:	xor    ecx,DWORD PTR ds:0x42a3ce
  41e94b:	add    DWORD PTR ds:0x42a3e6,ecx
  41e951:	mov    ds:0x4292a2,eax
  41e956:	and    DWORD PTR ds:0x42a3b6,0x0
  41e960:	jmp    0x41e970
  41e965:	mov    eax,ds:0x42a3b6
  41e96a:	inc    eax
  41e96b:	mov    ds:0x42a3b6,eax
  41e970:	cmp    DWORD PTR ds:0x42a3b6,0x1a
  41e977:	jae    0x41e9a9
  41e97d:	cmp    DWORD PTR ds:0x42a3b6,0x1c
  41e984:	jl     0x41e9a9
  41e98a:	jmp    0x41e9a4
  41e98f:	push   0x202a
  41e994:	push   0x8d25
  41e999:	push   0x4dd2
  41e99e:	call   DWORD PTR ds:0x42a55e
  41e9a4:	jmp    0x41e965
  41e9a9:	mov    eax,DWORD PTR [ebp+0x10]
  41e9ac:	mov    DWORD PTR ds:0x42a412,0x1d
  41e9b6:	cmp    DWORD PTR ds:0x42a412,0x0
  41e9bd:	je     0x41e9f8
  41e9c3:	cmp    DWORD PTR ds:0x42a412,0x27
  41e9ca:	jbe    0x41e9f8
  41e9d0:	jmp    0x41e9e6
  41e9d5:	push   DWORD PTR [ebp-0x14]
  41e9d8:	push   DWORD PTR [ebp-0x20]
  41e9db:	push   0x749a
  41e9e0:	call   DWORD PTR ds:0x42a562
  41e9e6:	mov    ecx,DWORD PTR ds:0x42a412
  41e9ec:	dec    ecx
  41e9ed:	mov    DWORD PTR ds:0x42a412,ecx
  41e9f3:	jmp    0x41e9b6
  41e9f8:	mov    ds:0x4294fe,eax
  41e9fd:	mov    eax,ds:0x4292a2
  41ea02:	sub    DWORD PTR ds:0x42a3ee,edx
  41ea08:	mov    ecx,DWORD PTR [ebp-0x2c]
  41ea0b:	mov    DWORD PTR ds:0x42a3ee,0x79ec
  41ea15:	sub    eax,ebx
  41ea17:	or     DWORD PTR ds:0x42a426,0x42a43e
  41ea21:	xor    eax,edi
  41ea23:	and    DWORD PTR ds:0x42a3ce,0x7738
  41ea2d:	mov    DWORD PTR [ecx],eax
  41ea2f:	adc    DWORD PTR ds:0x42a416,0x42a3b2
  41ea39:	lea    eax,[ebp-0xc]
  41ea3c:	sbb    DWORD PTR ds:0x42a452,0x7a39
  41ea46:	mov    DWORD PTR [ebp-0x38],eax
  41ea49:	xor    DWORD PTR ds:0x42a41a,0x42a3aa
  41ea53:	lea    eax,[ebp+0x4]
  41ea56:	or     DWORD PTR ds:0x42a42e,0x42a44a
  41ea60:	mov    DWORD PTR [ebp-0xc],eax
  41ea63:	sub    DWORD PTR ds:0x42a406,0x2768
  41ea6d:	lea    eax,[ebp-0x68]
  41ea70:	and    DWORD PTR ds:0x42a3fa,0x51d9
  41ea7a:	push   eax
  41ea7b:	push   0x4296ca
  41ea80:	push   0x4296e6
  41ea85:	push   0x429716
  41ea8a:	xor    DWORD PTR ds:0x42a42a,0x6aa
  41ea94:	call   esi
  41ea96:	mov    DWORD PTR ds:0x42a42e,0x6529
  41eaa0:	shl    eax,0x15
  41eaa3:	cmp    eax,0x1800000
  41eaa8:	jne    0x41f419
  41eaae:	not    DWORD PTR ds:0x42a42a
  41eab4:	push   0x42973e
  41eab9:	call   DWORD PTR ds:0x42a54e
  41eabf:	adc    DWORD PTR ds:0x42a3d6,0x6662
  41eac9:	test   eax,eax
  41eacb:	mov    DWORD PTR ds:0x42a432,0x1a32
  41ead5:	jne    0x41f419
  41eadb:	add    DWORD PTR ds:0x42a3da,0x42a432
  41eae5:	push   0x429776
  41eaea:	call   DWORD PTR ds:0x42a556
  41eaf0:	test   eax,eax
  41eaf2:	jne    0x41f419
  41eaf8:	push   0xf
  41eafa:	lea    eax,[ebp-0x68]
  41eafd:	xor    DWORD PTR ds:0x42a3ee,0x42a3f6
  41eb07:	push   eax
  41eb08:	push   0x42978e
  41eb0d:	adc    DWORD PTR ds:0x42a3ee,0x7895
  41eb17:	push   0x4297aa
  41eb1c:	push   0x4297da
  41eb21:	call   esi
  41eb23:	shl    eax,0x15
  41eb26:	cmp    eax,0x1800000
  41eb2b:	jne    0x41f419
  41eb31:	push   0x429802
  41eb36:	call   DWORD PTR ds:0x42a54e
  41eb3c:	test   eax,eax
  41eb3e:	mov    DWORD PTR ds:0x42a41a,0x758e
  41eb48:	jne    0x41f419
  41eb4e:	sbb    DWORD PTR ds:0x42a3de,0x42a43a
  41eb58:	push   0x42983a
  41eb5d:	xor    DWORD PTR ds:0x42a422,0x75c
  41eb67:	call   DWORD PTR ds:0x42a556
  41eb6d:	test   eax,eax
  41eb6f:	mov    DWORD PTR ds:0x42a426,0x39fb
  41eb79:	jne    0x41f419
  41eb7f:	sbb    DWORD PTR ds:0x42a43a,0x7658
  41eb89:	push   0xf
  41eb8b:	lea    eax,[ebp-0x68]
  41eb8e:	push   eax
  41eb8f:	push   0x429852
  41eb94:	push   0x42986e
  41eb99:	adc    DWORD PTR ds:0x42a3ce,0x33c9
  41eba3:	push   0x42989e
  41eba8:	call   esi
  41ebaa:	mov    DWORD PTR ds:0x42a3ca,0x4f36
  41ebb4:	shl    eax,0x15
  41ebb7:	mov    DWORD PTR ds:0x42a3f2,0x71f8
  41ebc1:	cmp    eax,0x1800000
  41ebc6:	mov    DWORD PTR ds:0x42a3b2,0x6c26
  41ebd0:	jne    0x41f419
  41ebd6:	push   0x4298c6
  41ebdb:	sub    DWORD PTR ds:0x42a416,0x5c7b
  41ebe5:	call   DWORD PTR ds:0x42a54e
  41ebeb:	adc    DWORD PTR ds:0x42a406,0x42a42a
  41ebf5:	test   eax,eax
  41ebf7:	mov    DWORD PTR ds:0x42a402,0x529e
  41ec01:	jne    0x41f419
  41ec07:	or     DWORD PTR ds:0x42a3f2,0x42a3be
  41ec11:	push   0x4298fe
  41ec16:	call   DWORD PTR ds:0x42a556
  41ec1c:	adc    DWORD PTR ds:0x42a3ca,0x42a402
  41ec26:	test   eax,eax
  41ec28:	jne    0x41f419
  41ec2e:	or     DWORD PTR ds:0x42a3ae,0x1a1c
  41ec38:	push   0xf
  41ec3a:	lea    eax,[ebp-0x68]
  41ec3d:	sub    DWORD PTR ds:0x42a446,0xb4e
  41ec47:	push   eax
  41ec48:	not    DWORD PTR ds:0x42a3ae
  41ec4e:	push   0x429916
  41ec53:	sub    DWORD PTR ds:0x42a412,0x42a44a
  41ec5d:	push   0x429932
  41ec62:	xor    DWORD PTR ds:0x42a3e6,0x42a3fe
  41ec6c:	push   0x429962
  41ec71:	call   esi
  41ec73:	shl    eax,0x15
  41ec76:	mov    DWORD PTR ds:0x42a422,0x17a8
  41ec80:	cmp    eax,0x1800000
  41ec85:	mov    DWORD PTR ds:0x42a422,0x1e6c
  41ec8f:	jne    0x41f419
  41ec95:	push   0x42998a
  41ec9a:	call   DWORD PTR ds:0x42a54e
  41eca0:	sub    DWORD PTR ds:0x42a3ce,0x1b5
  41ecaa:	test   eax,eax
  41ecac:	mov    DWORD PTR ds:0x42a436,0x4a2d
  41ecb6:	jne    0x41f419
  41ecbc:	sub    DWORD PTR ds:0x42a40e,0x42a41a
  41ecc6:	push   0x4299c2
  41eccb:	call   DWORD PTR ds:0x42a556
  41ecd1:	test   eax,eax
  41ecd3:	jne    0x41f419
  41ecd9:	neg    DWORD PTR ds:0x42a43a
  41ecdf:	push   0xf
  41ece1:	lea    eax,[ebp-0x68]
  41ece4:	push   eax
  41ece5:	push   0x4299da
  41ecea:	add    DWORD PTR ds:0x42a3f6,0x3a44
  41ecf4:	push   0x4299f6
  41ecf9:	not    DWORD PTR ds:0x42a3d6
  41ecff:	push   0x429a26
  41ed04:	mov    DWORD PTR ds:0x42a416,0x1e5a
  41ed0e:	call   esi
  41ed10:	shl    eax,0x15
  41ed13:	cmp    eax,0x1800000
  41ed18:	jne    0x41f419
  41ed1e:	push   0x429a4e
  41ed23:	add    DWORD PTR ds:0x42a3fe,0x42a426
  41ed2d:	call   DWORD PTR ds:0x42a54e
  41ed33:	or     DWORD PTR ds:0x42a406,0x4619
  41ed3d:	test   eax,eax
  41ed3f:	jne    0x41f419
  41ed45:	and    DWORD PTR ds:0x42a3ca,0x42a44a
  41ed4f:	push   0x429a86
  41ed54:	xor    DWORD PTR ds:0x42a3e2,0xea8
  41ed5e:	call   DWORD PTR ds:0x42a556
  41ed64:	or     DWORD PTR ds:0x42a3aa,0x45b6
  41ed6e:	test   eax,eax
  41ed70:	mov    DWORD PTR ds:0x42a3e6,0x62c6
  41ed7a:	jne    0x41f419
  41ed80:	and    DWORD PTR ds:0x42a42e,0x5eb4
  41ed8a:	push   0xf
  41ed8c:	adc    DWORD PTR ds:0x42a3da,0x4918
  41ed96:	lea    eax,[ebp-0x68]
  41ed99:	or     DWORD PTR ds:0x42a3f6,0x42a3ae
  41eda3:	push   eax
  41eda4:	sbb    DWORD PTR ds:0x42a3f2,0x42a3b2
  41edae:	push   0x429a9e
  41edb3:	xor    DWORD PTR ds:0x42a422,0x1d8b
  41edbd:	push   0x429aba
  41edc2:	and    DWORD PTR ds:0x42a406,0x42a452
  41edcc:	push   0x429aea
  41edd1:	not    DWORD PTR ds:0x42a422
  41edd7:	call   esi
  41edd9:	shl    eax,0x15
  41eddc:	cmp    eax,0x1800000
  41ede1:	mov    DWORD PTR ds:0x42a3e2,0xbee
  41edeb:	jne    0x41f419
  41edf1:	xor    DWORD PTR ds:0x42a3b6,0x42a416
  41edfb:	push   0x429b12
  41ee00:	call   DWORD PTR ds:0x42a54e
  41ee06:	or     DWORD PTR ds:0x42a40e,0x2cef
  41ee10:	test   eax,eax
  41ee12:	jne    0x41f419
  41ee18:	push   0x429b4a
  41ee1d:	sub    DWORD PTR ds:0x42a3fe,0x42a3ea
  41ee27:	call   DWORD PTR ds:0x42a556
  41ee2d:	test   eax,eax
  41ee2f:	jne    0x41f419
  41ee35:	or     DWORD PTR ds:0x42a3fe,0x42a43e
  41ee3f:	push   0xf
  41ee41:	or     DWORD PTR ds:0x42a3ea,0x255b
  41ee4b:	lea    eax,[ebp-0x68]
  41ee4e:	and    DWORD PTR ds:0x42a406,0x42a40a
  41ee58:	push   eax
  41ee59:	add    DWORD PTR ds:0x42a3ee,0x42a452
  41ee63:	push   0x429b62
  41ee68:	push   0x429b7e
  41ee6d:	adc    DWORD PTR ds:0x42a3ca,0x42a416
  41ee77:	push   0x429bae
  41ee7c:	call   esi
  41ee7e:	shl    eax,0x15
  41ee81:	mov    DWORD PTR ds:0x42a446,0x2330
  41ee8b:	cmp    eax,0x1800000
  41ee90:	mov    DWORD PTR ds:0x42a3ce,0x5d2b
  41ee9a:	jne    0x41f419
  41eea0:	push   0x429bd6
  41eea5:	call   DWORD PTR ds:0x42a54e
  41eeab:	test   eax,eax
  41eead:	mov    DWORD PTR ds:0x42a3e2,0x284d
  41eeb7:	jne    0x41f419
  41eebd:	inc    DWORD PTR ds:0x42a3da
  41eec3:	push   0x429c0e
  41eec8:	sbb    DWORD PTR ds:0x42a3a6,0x42a3ce
  41eed2:	call   DWORD PTR ds:0x42a556
  41eed8:	test   eax,eax
  41eeda:	mov    DWORD PTR ds:0x42a3f6,0xc3a
  41eee4:	jne    0x41f419
  41eeea:	push   0xf
  41eeec:	lea    eax,[ebp-0x68]
  41eeef:	inc    DWORD PTR ds:0x42a44a
  41eef5:	push   eax
  41eef6:	push   0x429c26
  41eefb:	push   0x429c42
  41ef00:	sub    DWORD PTR ds:0x42a3ba,0x42a3ce
  41ef0a:	push   0x429c72
  41ef0f:	xor    DWORD PTR ds:0x42a3de,0x6779
  41ef19:	call   esi
  41ef1b:	mov    DWORD PTR ds:0x42a436,0x68bf
  41ef25:	shl    eax,0x15
  41ef28:	mov    DWORD PTR ds:0x42a3ba,0x5b0c
  41ef32:	cmp    eax,0x1800000
  41ef37:	mov    DWORD PTR ds:0x42a3b2,0x4026
  41ef41:	jne    0x41f419
  41ef47:	push   0x429c9a
  41ef4c:	and    DWORD PTR ds:0x42a436,0x42a3c6
  41ef56:	call   DWORD PTR ds:0x42a54e
  41ef5c:	test   eax,eax
  41ef5e:	jne    0x41f419
  41ef64:	push   0x429cd2
  41ef69:	call   DWORD PTR ds:0x42a556
  41ef6f:	test   eax,eax
  41ef71:	jne    0x41f419
  41ef77:	xor    DWORD PTR ds:0x42a3d6,0x22c0
  41ef81:	push   0xf
  41ef83:	lea    eax,[ebp-0x68]
  41ef86:	push   eax
  41ef87:	xor    DWORD PTR ds:0x42a426,0x42a442
  41ef91:	push   0x429cea
  41ef96:	and    DWORD PTR ds:0x42a3c2,0x42a42a
  41efa0:	push   0x429d06
  41efa5:	push   0x429d36
  41efaa:	dec    DWORD PTR ds:0x42a3fe
  41efb0:	call   esi
  41efb2:	mov    DWORD PTR ds:0x42a3e6,0x5803
  41efbc:	shl    eax,0x15
  41efbf:	mov    DWORD PTR ds:0x42a43e,0x7cea
  41efc9:	cmp    eax,0x1800000
  41efce:	mov    DWORD PTR ds:0x42a42e,0x15cd
  41efd8:	jne    0x41f419
  41efde:	sbb    DWORD PTR ds:0x42a452,0x6bf8
  41efe8:	push   0x429d5e
  41efed:	or     DWORD PTR ds:0x42a3ba,0x5c33
  41eff7:	call   DWORD PTR ds:0x42a54e
  41effd:	test   eax,eax
  41efff:	jne    0x41f419
  41f005:	and    DWORD PTR ds:0x42a3fe,0x42a406
  41f00f:	push   0x429d96
  41f014:	call   DWORD PTR ds:0x42a556
  41f01a:	xor    DWORD PTR ds:0x42a41a,0x1623
  41f024:	test   eax,eax
  41f026:	mov    DWORD PTR ds:0x42a3de,0x197f
  41f030:	jne    0x41f419
  41f036:	push   0xf
  41f038:	inc    DWORD PTR ds:0x42a3b6
  41f03e:	lea    eax,[ebp-0x68]
  41f041:	push   eax
  41f042:	xor    DWORD PTR ds:0x42a43a,0x42a436
  41f04c:	push   0x429dae
  41f051:	xor    DWORD PTR ds:0x42a3ea,0x6e19
  41f05b:	push   0x429dca
  41f060:	adc    DWORD PTR ds:0x42a3b6,0x42a426
  41f06a:	push   0x429dfa
  41f06f:	call   esi
  41f071:	mov    DWORD PTR ds:0x42a422,0x179c
  41f07b:	shl    eax,0x15
  41f07e:	mov    DWORD PTR ds:0x42a42a,0x7c35
  41f088:	cmp    eax,0x1800000
  41f08d:	jne    0x41f419
  41f093:	push   0x429e22
  41f098:	call   DWORD PTR ds:0x42a54e
  41f09e:	test   eax,eax
  41f0a0:	jne    0x41f419
  41f0a6:	push   0x429e5a
  41f0ab:	call   DWORD PTR ds:0x42a556
  41f0b1:	test   eax,eax
  41f0b3:	jne    0x41f419
  41f0b9:	push   0xf
  41f0bb:	lea    eax,[ebp-0x68]
  41f0be:	push   eax
  41f0bf:	push   0x429e72
  41f0c4:	push   0x429e8e
  41f0c9:	push   0x429ebe
  41f0ce:	call   esi
  41f0d0:	shl    eax,0x15
  41f0d3:	cmp    eax,0x1800000
  41f0d8:	jne    0x41f419
  41f0de:	push   0x429ee6
  41f0e3:	call   DWORD PTR ds:0x42a54e
  41f0e9:	test   eax,eax
  41f0eb:	jne    0x41f419
  41f0f1:	push   0x429f1e
  41f0f6:	call   DWORD PTR ds:0x42a556
  41f0fc:	test   eax,eax
  41f0fe:	jne    0x41f419
  41f104:	push   0xf
  41f106:	lea    eax,[ebp-0x68]
  41f109:	push   eax
  41f10a:	push   0x429f36
  41f10f:	push   0x429f52
  41f114:	push   0x429f82
  41f119:	call   esi
  41f11b:	shl    eax,0x15
  41f11e:	cmp    eax,0x1800000
  41f123:	jne    0x41f419
  41f129:	push   0x429faa
  41f12e:	call   DWORD PTR ds:0x42a54e
  41f134:	test   eax,eax
  41f136:	jne    0x41f419
  41f13c:	push   0x429fe2
  41f141:	call   DWORD PTR ds:0x42a556
  41f147:	test   eax,eax
  41f149:	jne    0x41f419
  41f14f:	mov    eax,DWORD PTR [ebp-0x20]
  41f152:	cmp    eax,0xf89c85ba
  41f157:	je     0x41f1b4
  41f15d:	mov    eax,DWORD PTR [ebp-0x4]
  41f160:	mov    ecx,DWORD PTR [ebp-0x1c]
  41f163:	xor    eax,edi
  41f165:	add    eax,ebx
  41f167:	cmp    eax,ecx
  41f169:	je     0x41f1b4
  41f16f:	mov    eax,ds:0x42941e
  41f174:	mov    eax,DWORD PTR [eax+0x194]
  41f17a:	mov    ecx,DWORD PTR [eax]
  41f17c:	mov    eax,DWORD PTR [ecx+0x3c]
  41f17f:	push   DWORD PTR ds:0x4294fe
  41f185:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41f189:	push   DWORD PTR ds:0x4292a2
  41f18f:	add    eax,ecx
  41f191:	mov    ecx,DWORD PTR ds:0x42941e
  41f197:	mov    ecx,DWORD PTR [ecx+0x194]
  41f19d:	push   DWORD PTR [ecx]
  41f19f:	call   eax
  41f1a1:	mov    ecx,DWORD PTR ds:0x42941e
  41f1a7:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41f1ad:	mov    DWORD PTR [ecx],eax
  41f1af:	jmp    0x41f3ca
  41f1b4:	mov    eax,DWORD PTR [ebp-0x4]
  41f1b7:	mov    ecx,DWORD PTR [ebp-0x34]
  41f1ba:	xor    eax,edi
  41f1bc:	add    eax,ebx
  41f1be:	cmp    eax,ecx
  41f1c0:	jne    0x41f221
  41f1c6:	mov    eax,DWORD PTR [ebp-0x4]
  41f1c9:	mov    ecx,DWORD PTR ds:0x42941e
  41f1cf:	mov    ecx,DWORD PTR [ecx+0x198]
  41f1d5:	xor    eax,edi
  41f1d7:	add    eax,ebx
  41f1d9:	cmp    eax,DWORD PTR [ecx]
  41f1db:	jne    0x41f1fe
  41f1e1:	mov    eax,DWORD PTR [ebp-0x4]
  41f1e4:	push   0xf89c85b9
  41f1e9:	xor    eax,edi
  41f1eb:	add    eax,ebx
  41f1ed:	push   eax
  41f1ee:	push   0xf89c85bd
  41f1f3:	push   DWORD PTR [ebp-0x8]
  41f1f6:	push   DWORD PTR [ebp-0x4]
  41f1f9:	call   0x41dd69
  41f1fe:	push   DWORD PTR [ebp-0x8]
  41f201:	push   DWORD PTR [ebp-0x4]
  41f204:	call   0x401000
  41f209:	mov    eax,DWORD PTR [ebp-0x4]
  41f20c:	xor    eax,edi
  41f20e:	add    eax,ebx
  41f210:	mov    ds:0x4294aa,eax
  41f215:	mov    eax,DWORD PTR [ebp-0x4]
  41f218:	xor    eax,edi
  41f21a:	add    eax,ebx
  41f21c:	mov    ds:0x4294a2,eax
  41f221:	mov    eax,DWORD PTR [ebp-0xc]
  41f224:	test   eax,eax
  41f226:	je     0x41f3ca
  41f22c:	push   0xf
  41f22e:	lea    eax,[ebp-0x68]
  41f231:	push   eax
  41f232:	push   0x429ffa
  41f237:	mov    DWORD PTR [ebp-0x3c],0xf152c32
  41f23e:	push   0x42a016
  41f243:	mov    DWORD PTR [ebp-0x40],0x712ed2f
  41f24a:	mov    DWORD PTR [ebp-0x44],0x373fc01
  41f251:	push   0x42a046
  41f256:	mov    DWORD PTR [ebp-0x48],0x72670ad1
  41f25d:	call   esi
  41f25f:	shl    eax,0x15
  41f262:	cmp    eax,0x1800000
  41f267:	jne    0x41f419
  41f26d:	push   0x42a06e
  41f272:	call   DWORD PTR ds:0x42a54e
  41f278:	test   eax,eax
  41f27a:	jne    0x41f419
  41f280:	push   0x42a0a6
  41f285:	call   DWORD PTR ds:0x42a556
  41f28b:	test   eax,eax
  41f28d:	jne    0x41f419
  41f293:	call   0x4192de
  41f298:	mov    eax,DWORD PTR [ebp-0x10]
  41f29b:	mov    eax,DWORD PTR [ebp-0x8]
  41f29e:	mov    DWORD PTR [ebp+0x10],eax
  41f2a1:	mov    eax,DWORD PTR [ebp-0x4]
  41f2a4:	mov    DWORD PTR [ebp+0xc],eax
  41f2a7:	mov    eax,eax
  41f2a9:	mov    eax,ds:0x42941e
  41f2ae:	mov    ecx,DWORD PTR [eax+0x1c0]
  41f2b4:	mov    edx,DWORD PTR [ecx]
  41f2b6:	and    DWORD PTR [ebp-0x2c],0x0
  41f2ba:	mov    esi,0xfabdbeda
  41f2bf:	add    edx,esi
  41f2c1:	adc    DWORD PTR [ebp-0x2c],0xffffffff
  41f2c5:	mov    ecx,0x8a29a13b
  41f2ca:	xor    edx,ecx
  41f2cc:	mov    DWORD PTR [ebp-0x28],edx
  41f2cf:	mov    edx,DWORD PTR [ebp-0x2c]
  41f2d2:	xor    edx,0x0
  41f2d5:	cmp    DWORD PTR [ebp-0x28],0x70941fe0
  41f2dc:	mov    DWORD PTR [ebp-0x24],edx
  41f2df:	jne    0x41f310
  41f2e5:	cmp    edx,0xffffffff
  41f2e8:	jne    0x41f310
  41f2ee:	mov    eax,ds:0x4294a2
  41f2f3:	mov    edx,DWORD PTR ds:0x4294aa
  41f2f9:	xor    eax,edx
  41f2fb:	mov    ds:0x4294a2,eax
  41f300:	mov    edx,DWORD PTR ds:0x4294a2
  41f306:	mov    eax,DWORD PTR [ebp-0xc]
  41f309:	add    DWORD PTR [eax],edx
  41f30b:	jmp    0x41f38c
  41f310:	mov    eax,DWORD PTR [eax+0x1c8]
  41f316:	mov    eax,DWORD PTR [eax]
  41f318:	cdq    
  41f319:	add    eax,esi
  41f31b:	adc    edx,0xffffffff
  41f31e:	and    DWORD PTR [ebp-0x2c],0x0
  41f322:	xor    edx,0x0
  41f325:	mov    DWORD PTR [ebp-0x14],edx
  41f328:	mov    edx,DWORD PTR [ebp+0xc]
  41f32b:	mov    DWORD PTR [ebp-0x30],edx
  41f32e:	xor    eax,ecx
  41f330:	add    DWORD PTR [ebp-0x30],esi
  41f333:	mov    edx,DWORD PTR [ebp-0x30]
  41f336:	adc    DWORD PTR [ebp-0x2c],0xffffffff
  41f33a:	xor    edx,ecx
  41f33c:	mov    DWORD PTR [ebp-0x28],edx
  41f33f:	mov    edx,DWORD PTR [ebp-0x2c]
  41f342:	xor    edx,0x0
  41f345:	mov    DWORD PTR [ebp-0x24],edx
  41f348:	cmp    DWORD PTR [ebp-0x28],eax
  41f34b:	jne    0x41f35c
  41f351:	mov    eax,DWORD PTR [ebp-0x14]
  41f354:	cmp    edx,eax
  41f356:	je     0x41f36a
  41f35c:	mov    eax,DWORD PTR [ebp+0xc]
  41f35f:	add    eax,DWORD PTR [ebp+0x10]
  41f362:	mov    DWORD PTR [ebp+0xc],eax
  41f365:	jmp    0x41f3ca
  41f36a:	mov    eax,ds:0x4294a2
  41f36f:	mov    edx,DWORD PTR ds:0x4294aa
  41f375:	xor    eax,edx
  41f377:	mov    ds:0x4294a2,eax
  41f37c:	mov    eax,DWORD PTR [ebp-0xc]
  41f37f:	mov    edx,DWORD PTR ds:0x4294a2
  41f385:	add    edx,DWORD PTR [eax]
  41f387:	mov    eax,DWORD PTR [ebp-0xc]
  41f38a:	mov    DWORD PTR [eax],edx
  41f38c:	mov    edx,DWORD PTR [ebp+0xc]
  41f38f:	mov    eax,ds:0x4294a2
  41f394:	xor    edx,edi
  41f396:	add    edx,ebx
  41f398:	xor    ebx,ebx
  41f39a:	add    edx,esi
  41f39c:	adc    ebx,0xffffffff
  41f39f:	xor    edi,edi
  41f3a1:	xor    edx,ecx
  41f3a3:	xor    ebx,0x0
  41f3a6:	add    eax,esi
  41f3a8:	adc    edi,0xffffffff
  41f3ab:	xor    eax,ecx
  41f3ad:	xor    edi,0x0
  41f3b0:	cmp    eax,edx
  41f3b2:	jne    0x41f3ca
  41f3b8:	cmp    edi,ebx
  41f3ba:	jne    0x41f3ca
  41f3c0:	mov    eax,ds:0x4294a2
  41f3c5:	mov    ds:0x4294aa,eax
  41f3ca:	push   0xf
  41f3cc:	lea    eax,[ebp-0x68]
  41f3cf:	push   eax
  41f3d0:	push   0x42a0be
  41f3d5:	push   0x42a0da
  41f3da:	push   0x42a10a
  41f3df:	call   DWORD PTR ds:0x42a552
  41f3e5:	shl    eax,0x15
  41f3e8:	cmp    eax,0x1800000
  41f3ed:	jne    0x41f419
  41f3f3:	push   0x42a132
  41f3f8:	call   DWORD PTR ds:0x42a54e
  41f3fe:	test   eax,eax
  41f400:	jne    0x41f419
  41f406:	push   0x42a16a
  41f40b:	call   DWORD PTR ds:0x42a556
  41f411:	test   eax,eax
  41f413:	je     0x41f420
  41f419:	xor    eax,eax
  41f41b:	jmp    0x41f43b
  41f420:	mov    eax,ds:0x42941e
  41f425:	push   0x4
  41f427:	add    eax,0x1cc
  41f42c:	push   eax
  41f42d:	lea    eax,[ebp-0x10]
  41f430:	push   eax
  41f431:	call   0x41f442
  41f436:	mov    eax,DWORD PTR [ebp-0x10]
  41f439:	mov    eax,DWORD PTR [eax]
  41f43b:	pop    ebx
  41f43c:	pop    edi
  41f43d:	pop    esi
  41f43e:	leave  
  41f43f:	ret    0xc
  41f442:	push   ebp
  41f443:	mov    ebp,esp
  41f445:	sub    esp,0x10
  41f448:	or     edx,edx
  41f44a:	mov    eax,0xf89c85b9
  41f44f:	sub    ecx,ecx
  41f451:	mov    DWORD PTR [ebp-0x4],eax
  41f454:	mov    edx,DWORD PTR ds:0x42a452
  41f45a:	adc    DWORD PTR ds:0x42a43a,edx
  41f460:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  41f467:	sub    edx,DWORD PTR ds:0x42a3be
  41f46d:	mov    ecx,DWORD PTR [ebp-0x4]
  41f470:	and    DWORD PTR ds:0x42a3ba,edi
  41f476:	jmp    0x4217f3
  41f47b:	and    esi,DWORD PTR [esi]
  41f47d:	push   0xfb046716
  41f482:	sti    
  41f483:	shl    BYTE PTR [ebx],cl
  41f485:	(bad)  
  41f486:	jg     0x41f4da
  41f488:	fsubr  QWORD PTR [edi]
  41f48a:	nop
  41f48b:	scas   al,BYTE PTR es:[edi]
  41f48c:	sar    DWORD PTR [ecx+0x7a],1
  41f48f:	sbb    bl,BYTE PTR [edi+0x7a]
  41f492:	jp     0x41f428
  41f494:	cmp    dl,cl
  41f496:	in     al,dx
  41f497:	out    dx,eax
  41f498:	sub    BYTE PTR [ebp+0x72],ah
  41f49b:	cmp    edi,DWORD PTR [esi]
  41f49d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f49e:	mov    edx,?
  41f4a0:	int3   
  41f4a1:	mov    bl,0x59
  41f4a3:	outs   dx,DWORD PTR ds:[esi]
  41f4a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4a5:	daa    
  41f4a6:	or     eax,0x97800cf9
  41f4ab:	test   BYTE PTR [eax+0x7c],0xa5
  41f4af:	test   eax,0xb816a580
  41f4b4:	pop    es
  41f4b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4b6:	rcr    DWORD PTR [eax-0x778113c9],0x96
  41f4bd:	push   cs
  41f4be:	and    al,0xb
  41f4c0:	mul    BYTE PTR [edx]
  41f4c2:	aam    0x7a
  41f4c4:	mov    edx,ebx
  41f4c6:	sbb    esi,ecx
  41f4c8:	mov    bh,0x10
  41f4ca:	push   ecx
  41f4cb:	cmp    BYTE PTR [eax],bl
  41f4cd:	daa    
  41f4ce:	push   ds
  41f4cf:	sbb    BYTE PTR [ebx],bh
  41f4d1:	add    edx,DWORD PTR [edx]
  41f4d3:	mov    BYTE PTR cs:[ecx+0x2],al
  41f4d7:	pop    edi
  41f4d8:	test   bh,dl
  41f4da:	in     al,dx
  41f4db:	xchg   ecx,eax
  41f4dc:	in     al,dx
  41f4dd:	adc    eax,0x7b18a90f
  41f4e2:	xlat   BYTE PTR ds:[ebx]
  41f4e3:	pop    ecx
  41f4e4:	cwde   
  41f4e5:	in     al,0x32
  41f4e7:	pusha  
  41f4e8:	mov    esi,0xb7f0bdd0
  41f4ed:	push   edi
  41f4ee:	or     al,0xb8
  41f4f0:	aaa    
  41f4f1:	add    al,0xdb
  41f4f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4f4:	mov    dl,0x10
  41f4f6:	out    0x95,al
  41f4f8:	int    0x88
  41f4fa:	out    dx,al
  41f4fb:	mov    dh,0x13
  41f4fd:	cmp    eax,0x32fcacda
  41f502:	jnp    0x41f57c
  41f504:	mov    ebx,0xea4ba617
  41f509:	inc    ebx
  41f50a:	xadd   BYTE PTR [edx],ch
  41f50d:	lahf   
  41f50e:	(bad)  
  41f50f:	cld    
  41f510:	imul   edi,DWORD PTR [eax-0x3b5dc008],0xaaefef52
  41f51a:	idiv   BYTE PTR [ecx-0x50]
  41f51d:	stc    
  41f51e:	inc    edx
  41f51f:	out    dx,al
  41f520:	iret   
  41f521:	(bad)
  41f525:	jo     0x41f4d1
  41f527:	adc    cl,bh
  41f529:	sbb    BYTE PTR [ebx+0x64],0x6e
  41f52d:	sti    
  41f52e:	std    
  41f52f:	xchg   ebp,eax
  41f530:	mov    eax,0x8bcd5d27
  41f535:	add    BYTE PTR [ebx+edx*8],ah
  41f538:	(bad)  
  41f539:	jmp    0x41f544
  41f53b:	out    dx,al
  41f53c:	xor    DWORD PTR [esp+eiz*4-0x3930f67d],ecx
  41f543:	icebp  
  41f544:	push   ebx
  41f545:	dec    edx
  41f546:	(bad)  
  41f548:	sbb    eax,0xf3819bc3
  41f54d:	and    al,BYTE PTR [esi+eiz*1+0x5c6489b0]
  41f554:	shl    DWORD PTR [esi],0x10
  41f557:	adc    eax,0xc3266979
  41f55c:	(bad)  
  41f55d:	fsub   st,st(4)
  41f55f:	leave  
  41f560:	xor    bh,BYTE PTR [eax]
  41f562:	pusha  
  41f563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f564:	inc    eax
  41f565:	dec    ebx
  41f566:	xor    BYTE PTR [edx-0x34],ch
  41f569:	pop    edi
  41f56a:	sbb    al,0x5
  41f56c:	fild   DWORD PTR [edx+0x15]
  41f56f:	daa    
  41f570:	pop    edi
  41f571:	and    eax,0xde87268b
  41f576:	and    eax,0xd86bf8aa
  41f57b:	adc    dl,BYTE PTR [esi-0x1f2e5598]
  41f581:	sar    BYTE PTR [esi+0x739bf8b1],0xc3
  41f588:	xchg   esi,eax
  41f589:	jp     0x41f56b
  41f58b:	sahf   
  41f58c:	mov    esp,0xa49313f7
  41f591:	or     al,0x3c
  41f593:	cmp    esi,eax
  41f595:	or     dh,BYTE PTR [ecx-0x58]
  41f598:	pop    ecx
  41f599:	adc    DWORD PTR [ebp+0x12],edx
  41f59c:	cmp    edx,edi
  41f59e:	dec    edi
  41f59f:	jb     0x41f5bc
  41f5a1:	sub    eax,0x9649ccd9
  41f5a6:	xor    BYTE PTR ds:0x8eb83f31,0x4c
  41f5ad:	or     al,0xba
  41f5af:	dec    ebx
  41f5b0:	xchg   esp,edi
  41f5b2:	ins    DWORD PTR es:[edi],dx
  41f5b3:	enter  0x2843,0x66
  41f5b7:	adc    al,0xc5
  41f5b9:	js     0x41f579
  41f5bb:	xor    eax,0x32d7147f
  41f5c0:	mov    eax,ds:0x48d269be
  41f5c5:	jae    0x41f564
  41f5c7:	and    BYTE PTR ds:0x627a7828,0xe2
  41f5ce:	push   0xffffffb8
  41f5d0:	fwait
  41f5d1:	test   DWORD PTR [eax],0xd3cede01
  41f5d7:	popa   
  41f5d8:	lods   eax,DWORD PTR ds:[esi]
  41f5d9:	adc    ecx,eax
  41f5db:	lods   al,BYTE PTR ds:[esi]
  41f5dc:	in     eax,dx
  41f5dd:	jmp    0xd735b483
  41f5e2:	and    ch,0x5d
  41f5e5:	rcl    DWORD PTR [ecx+0x23],1
  41f5e8:	test   BYTE PTR [eax+0x744fc74a],dl
  41f5ee:	(bad)  
  41f5ef:	xchg   ecx,eax
  41f5f0:	lods   eax,DWORD PTR ds:[esi]
  41f5f1:	enter  0xd7d5,0xb8
  41f5f5:	cmp    DWORD PTR [ebx+edi*2+0x3056577a],esp
  41f5fc:	xor    dh,cl
  41f5fe:	xor    ebp,DWORD PTR [esi+0x66]
  41f601:	push   0x77
  41f603:	fnstsw WORD PTR [esi+0x68]
  41f606:	and    DWORD PTR [ecx-0x1c],edi
  41f609:	dec    esi
  41f60a:	ret    0xea98
  41f60d:	or     BYTE PTR [ebp-0x41],dl
  41f610:	and    BYTE PTR ds:[eax-0xb],dh
  41f614:	mov    ebx,0x32e1927c
  41f619:	pushf  
  41f61a:	or     eax,DWORD PTR [edx]
  41f61c:	add    al,0x89
  41f61e:	xchg   edi,eax
  41f61f:	bound  esp,QWORD PTR [edx-0x52e6688b]
  41f625:	mov    al,0x18
  41f627:	popf   
  41f628:	mov    bl,0xbf
  41f62a:	jmp    0x66f786d0
  41f62f:	enter  0xb5b8,0xa
  41f633:	mov    al,ds:0x6af6cdd
  41f638:	push   ebp
  41f639:	xor    DWORD PTR [edi+0x6593e2],ebx
  41f63f:	push   es
  41f640:	cwde   
  41f641:	test   al,0x5d
  41f643:	jo     0x41f5fd
  41f645:	outs   dx,BYTE PTR ds:[esi]
  41f646:	lock cmp ecx,edx
  41f649:	das    
  41f64a:	sub    eax,0x9bebc3cc
  41f64f:	mov    bh,0xe0
  41f651:	arpl   WORD PTR [edi+eax*8+0x10],di
  41f655:	sub    esp,edx
  41f657:	add    al,0x6a
  41f659:	mov    ebp,0x54ebbac7
  41f65e:	cli    
  41f65f:	retf   0xaaf
  41f662:	xchg   ch,ch
  41f664:	pop    ds
  41f665:	ja     0x41f6a0
  41f667:	and    al,0x4
  41f669:	fld    TBYTE PTR [ebp+ecx*2+0x7b26e14f]
  41f670:	xchg   edx,eax
  41f671:	adc    al,0xcc
  41f673:	inc    esi
  41f674:	jge    0x41f617
  41f676:	jp     0x41f6e6
  41f678:	cmc    
  41f679:	clc    
  41f67a:	ds test al,0x2a
  41f67d:	jecxz  0x41f66a
  41f67f:	sbb    al,BYTE PTR [eax-0xf1cbea7]
  41f685:	or     ah,0xec
  41f688:	add    edi,DWORD PTR [edi-0x7f73f6a2]
  41f68e:	enter  0xcaab,0xd5
  41f692:	cmc    
  41f693:	push   ebp
  41f694:	cmp    ebx,DWORD PTR [edi]
  41f696:	add    al,0x5d
  41f698:	mov    esi,0xa0da966d
  41f69d:	js     0x41f6d1
  41f69f:	cmp    eax,edi
  41f6a1:	fimul  WORD PTR [edx+0x1e]
  41f6a4:	daa    
  41f6a5:	clc    
  41f6a6:	xchg   esp,eax
  41f6a7:	iret   
  41f6a8:	stos   DWORD PTR es:[edi],eax
  41f6a9:	stc    
  41f6aa:	leave  
  41f6ab:	test   eax,0xf29f6e95
  41f6b0:	cmp    al,BYTE PTR [ecx-0x2dadc9df]
  41f6b6:	sahf   
  41f6b7:	mov    cl,0x65
  41f6b9:	mov    ah,0x70
  41f6bb:	dec    ecx
  41f6bc:	mov    esp,0xbef9bab2
  41f6c1:	mov    fs,WORD PTR [edi+0x19cbbe16]
  41f6c7:	add    BYTE PTR [edi-0x46fa00f6],dh
  41f6cd:	call   0x1538c9ba
  41f6d2:	ret    
  41f6d3:	mov    ebx,0xb509377c
  41f6d8:	ins    BYTE PTR es:[edi],dx
  41f6d9:	int    0xc7
  41f6db:	bound  esi,QWORD PTR [ebx]
  41f6dd:	test   al,0x35
  41f6df:	jbe    0x41f6b0
  41f6e1:	hlt    
  41f6e2:	cli    
  41f6e3:	pusha  
  41f6e4:	lods   al,BYTE PTR ds:[esi]
  41f6e5:	ror    DWORD PTR [edx+0x1ed2d5be],cl
  41f6eb:	dec    esi
  41f6ec:	or     dl,BYTE PTR [edi-0x419e3f55]
  41f6f2:	shr    DWORD PTR [edi],cl
  41f6f4:	pop    ecx
  41f6f5:	ret    
  41f6f6:	dec    ebp
  41f6f7:	add    al,0x25
  41f6f9:	hlt    
  41f6fa:	xchg   DWORD PTR [ebp-0x5a],ebp
  41f6fd:	push   edi
  41f6fe:	xlat   BYTE PTR ds:[ebx]
  41f6ff:	mov    WORD PTR [esi-0x5c4d98ab],fs
  41f705:	mov    bh,0xb3
  41f707:	mov    esi,es
  41f709:	in     al,dx
  41f70a:	loopne 0x41f709
  41f70c:	fsubr  st(6),st
  41f70e:	inc    esi
  41f70f:	inc    ebx
  41f710:	push   cs
  41f711:	fild   QWORD PTR [edx]
  41f713:	dec    edi
  41f714:	add    ebx,0xa
  41f717:	and    cl,BYTE PTR [esi+0x33ba8f75]
  41f71d:	(bad)  
  41f71e:	test   eax,0xa756902c
  41f723:	in     eax,0x9e
  41f725:	jne    0x41f6d2
  41f727:	jns    0x41f798
  41f729:	cmp    al,0x90
  41f72b:	jnp    0x41f774
  41f72d:	call   0x7d3c:0x8edc2b50
  41f734:	into   
  41f735:	cmp    DWORD PTR [esi+0x13],esp
  41f738:	clc    
  41f739:	inc    eax
  41f73a:	mov    BYTE PTR [esi+0x63],ch
  41f73d:	mov    BYTE PTR [eax+edi*8+0x22],ah
  41f741:	aad    0x91
  41f743:	xor    eax,0x9d57e62
  41f748:	mov    al,0xae
  41f74a:	test   al,0xda
  41f74c:	fnsave [edx+ecx*2-0x5e9f90ab]
  41f753:	test   al,0x6b
  41f755:	(bad)  
  41f756:	je     0x41f78f
  41f758:	push   edi
  41f759:	mov    cl,0x1f
  41f75b:	mov    WORD PTR [esi],ss
  41f75d:	jo     0x41f7a4
  41f75f:	mov    eax,0x3b0a18d1
  41f764:	cli    
  41f765:	icebp  
  41f766:	arpl   WORD PTR ds:0x44d3bd7,si
  41f76d:	inc    eax
  41f76e:	into   
  41f76f:	aad    0x3
  41f771:	pop    es
  41f772:	mov    esi,gs
  41f774:	push   ecx
  41f775:	push   esp
  41f776:	imul   esi,DWORD PTR [ebx-0x4d],0x86430a0e
  41f77d:	inc    ecx
  41f77e:	xor    ch,dl
  41f780:	scas   al,BYTE PTR es:[edi]
  41f781:	sbb    esp,DWORD PTR [edx]
  41f783:	outs   dx,DWORD PTR ds:[esi]
  41f784:	and    eax,0x2ec6ca1
  41f789:	lock pop ebx
  41f78b:	jge    0x41f7ad
  41f78d:	jp     0x41f80a
  41f78f:	mov    ebp,0x9d3bdddf
  41f794:	mov    dh,0xfd
  41f796:	out    dx,al
  41f797:	aad    0x73
  41f799:	cwde   
  41f79a:	out    dx,al
  41f79b:	or     al,0x94
  41f79d:	loope  0x41f74d
  41f79f:	in     al,dx
  41f7a0:	stos   BYTE PTR es:[edi],al
  41f7a1:	mov    ds:0x10865730,al
  41f7a6:	push   ecx
  41f7a7:	push   ebp
  41f7a8:	outs   dx,BYTE PTR ds:[esi]
  41f7a9:	test   DWORD PTR [edx],eax
  41f7ab:	inc    ebx
  41f7ac:	xchg   esp,eax
  41f7ad:	xlat   BYTE PTR ds:[ebx]
  41f7ae:	(bad)  
  41f7af:	outs   dx,DWORD PTR ds:[esi]
  41f7b0:	cmc    
  41f7b1:	out    dx,eax
  41f7b2:	fistp  WORD PTR [ebp+0x2d]
  41f7b5:	stc    
  41f7b6:	into   
  41f7b7:	dec    edx
  41f7b8:	repz cmp DWORD PTR [ebx+0x39315d36],ebx
  41f7bf:	and    edx,eax
  41f7c1:	enter  0x7264,0x42
  41f7c5:	aaa    
  41f7c6:	icebp  
  41f7c7:	or     esi,eax
  41f7c9:	mov    dh,0x46
  41f7cb:	jle    0x41f7b8
  41f7cd:	mov    DWORD PTR [edi+0x3],0xefd78a98
  41f7d4:	scas   al,BYTE PTR es:[edi]
  41f7d5:	dec    ecx
  41f7d6:	push   ebx
  41f7d7:	shl    BYTE PTR [edi+0x272c14e3],1
  41f7dd:	xor    eax,0xa1d828ee
  41f7e2:	jns    0x41f7d2
  41f7e4:	ror    BYTE PTR [eax],cl
  41f7e6:	stos   DWORD PTR es:[edi],eax
  41f7e7:	fisttp QWORD PTR [esi+0x56]
  41f7ea:	mov    DWORD PTR [esi+edx*8+0x12],ecx
  41f7ee:	lods   eax,DWORD PTR ds:[esi]
  41f7ef:	push   eax
  41f7f0:	dec    edx
  41f7f1:	mov    esp,0x7a9627d4
  41f7f6:	and    DWORD PTR [ebp+0x7f],edi
  41f7f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7fa:	jl     0x41f848
  41f7fc:	cmp    cl,BYTE PTR ds:[esi]
  41f7ff:	popa   
  41f800:	clc    
  41f801:	dec    ebp
  41f802:	dec    edx
  41f803:	push   es
  41f804:	mov    esp,0x5788f056
  41f809:	cli    
  41f80a:	fdivr  QWORD PTR [ebx+edx*2]
  41f80d:	fucomp st(5)
  41f80f:	push   ss
  41f810:	or     al,0x40
  41f812:	and    dl,BYTE PTR cs:[esi]
  41f815:	lods   al,BYTE PTR ds:[esi]
  41f816:	mov    ds:0x74503e85,eax
  41f81b:	xlat   BYTE PTR cs:[ebx]
  41f81d:	fnstenv ds:0xfb89243e
  41f823:	and    eax,0x9bf43a61
  41f828:	aaa    
  41f829:	sbb    DWORD PTR [esi],ebx
  41f82b:	mov    ds,edi
  41f82d:	push   edx
  41f82e:	or     al,0x3e
  41f830:	addr16 push ds
  41f832:	(bad)  
  41f833:	sub    eax,0x79fdf7f
  41f838:	cmp    BYTE PTR [ecx-0x4a],al
  41f83b:	fwait
  41f83c:	inc    edx
  41f83d:	sbb    al,0x39
  41f83f:	push   edi
  41f840:	jns    0x41f7de
  41f842:	addr16 push 0x12130e8b
  41f848:	sub    eax,0x827ec3d0
  41f84d:	cmp    esi,DWORD PTR [ebx+0x6e]
  41f850:	pop    edx
  41f851:	dec    ebp
  41f852:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f853:	js     0x41f8a4
  41f855:	push   ecx
  41f856:	or     DWORD PTR [ecx+0x6577a5ee],edx
  41f85c:	aaa    
  41f85d:	popa   
  41f85e:	mov    eax,0xd95fa2a7
  41f863:	in     eax,dx
  41f864:	adc    BYTE PTR [edi],dh
  41f866:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f867:	imul   edi,DWORD PTR [esi-0x46],0xffffff9e
  41f86b:	pop    ss
  41f86c:	push   ebx
  41f86d:	inc    eax
  41f86e:	dec    edi
  41f86f:	mov    ch,0x4a
  41f871:	test   ch,al
  41f873:	dec    BYTE PTR [edx-0x6d]
  41f876:	nop
  41f877:	cmp    eax,0x217541fc
  41f87c:	in     eax,dx
  41f87d:	xlat   BYTE PTR ds:[ebx]
  41f87e:	pop    edx
  41f87f:	addr16 das 
  41f881:	lea    edi,[esi]
  41f883:	fs adc eax,0x332a0670
  41f889:	push   cs
  41f88a:	lock lods eax,DWORD PTR ds:[esi]
  41f88c:	sbb    eax,0xece7c4f3
  41f891:	clc    
  41f892:	pop    esi
  41f893:	xor    BYTE PTR [edi-0x5bbf2bb],bl
  41f899:	mov    cl,BYTE PTR [esi]
  41f89b:	test   esi,ecx
  41f89d:	and    eax,0x6b4474fb
  41f8a2:	sahf   
  41f8a3:	jb     0x41f909
  41f8a5:	movsx  eax,WORD PTR [ecx+0x41]
  41f8a9:	mov    dl,0xe4
  41f8ab:	cmc    
  41f8ac:	mov    al,BYTE PTR [edx]
  41f8ae:	lods   al,BYTE PTR ds:[esi]
  41f8af:	or     ebx,DWORD PTR [ebx+0x77ba9314]
  41f8b5:	lea    esi,[ecx+eiz*2]
  41f8b8:	loopne 0x41f89a
  41f8ba:	es ret 0x569
  41f8be:	mov    ds:0x4e8f9d00,eax
  41f8c3:	rcl    BYTE PTR [edx-0x80],cl
  41f8c6:	les    ecx,FWORD PTR [eax+0x70]
  41f8c9:	repnz push edi
  41f8cb:	sbb    al,0xe6
  41f8cd:	idiv   BYTE PTR [edi]
  41f8cf:	(bad)  
  41f8d0:	sbb    DWORD PTR [edx+edi*4-0x8],edx
  41f8d4:	mov    dl,0x76
  41f8d6:	mov    ecx,0xff79feb9
  41f8db:	or     DWORD PTR [esi+0x55b9e671],esi
  41f8e1:	mov    edi,0xabdb7223
  41f8e6:	pop    edi
  41f8e7:	add    DWORD PTR [ebx],0xffffff93
  41f8ea:	leave  
  41f8eb:	adc    ecx,edx
  41f8ed:	aas    
  41f8ee:	inc    edi
  41f8ef:	jecxz  0x41f897
  41f8f1:	sub    bh,dl
  41f8f3:	fbld   TBYTE PTR [esi+eiz*8-0x74]
  41f8f7:	stos   BYTE PTR es:[edi],al
  41f8f8:	jb     0x41f92c
  41f8fa:	ret    0x56a8
  41f8fd:	mov    edx,0x8f0b4cac
  41f902:	repz inc esp
  41f904:	ds je  0x41f8f6
  41f907:	cld    
  41f908:	out    dx,al
  41f909:	lea    esp,[edx-0x71]
  41f90c:	lea    edx,[eax-0x6f97ea08]
  41f912:	scas   eax,DWORD PTR es:[edi]
  41f913:	ins    BYTE PTR es:[edi],dx
  41f914:	add    ebp,DWORD PTR [ecx-0x7993a75e]
  41f91a:	push   0xfffffff9
  41f91c:	add    al,0xf7
  41f91e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f91f:	inc    ecx
  41f920:	ficomp WORD PTR [ecx+edi*8+0x46]
  41f924:	into   
  41f925:	test   eax,0x43b98ca7
  41f92a:	xchg   edx,eax
  41f92b:	enter  0x287d,0x66
  41f92f:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f931:	xchg   edx,eax
  41f932:	sbb    al,0xdc
  41f934:	les    eax,FWORD PTR [eax+0x55]
  41f937:	sub    al,0x5
  41f939:	sub    BYTE PTR [ecx+ecx*8+0xef63e0a],0x49
  41f941:	shl    BYTE PTR [ecx],0x6b
  41f944:	cld    
  41f945:	aad    0x45
  41f947:	xchg   ecx,eax
  41f948:	call   0xa68109d6
  41f94d:	outs   dx,DWORD PTR ds:[esi]
  41f94e:	(bad)  
  41f94f:	push   0xe56b8658
  41f954:	ror    BYTE PTR [esi],0x3
  41f957:	inc    esi
  41f958:	(bad)  
  41f959:	jbe    0x41f94e
  41f95b:	inc    eax
  41f95c:	sub    DWORD PTR [edx+0x29],ebp
  41f95f:	in     al,dx
  41f960:	xor    BYTE PTR [edi],cl
  41f962:	fidivr DWORD PTR [eax+0x55]
  41f965:	mov    edx,0x9fd8559b
  41f96a:	(bad)  
  41f96b:	jno    0x41f9c2
  41f96d:	pop    edi
  41f96e:	pop    es
  41f96f:	jno    0x41f900
  41f971:	aam    0xc4
  41f973:	mov    esp,0x62aa29fe
  41f978:	iret   
  41f979:	je     0x41f9aa
  41f97b:	lock adc DWORD PTR ss:[ebx],esp
  41f97f:	dec    eax
  41f980:	push   ss
  41f981:	mov    bh,0x0
  41f983:	mov    edi,0x95d52ce9
  41f988:	xchg   edi,eax
  41f989:	cmp    eax,0xfd785cc6
  41f98e:	jb     0x41f9fc
  41f990:	and    BYTE PTR [edi+eax*4],dl
  41f993:	jmp    DWORD PTR [edx+eax*2-0x2d]
  41f998:	lods   al,BYTE PTR ds:[esi]
  41f999:	pushf  
  41f99a:	sub    bh,al
  41f99c:	and    BYTE PTR [eax],al
  41f99e:	mov    al,0x82
  41f9a0:	mov    ds:0x5043ba3c,eax
  41f9a5:	push   edi
  41f9a6:	sbb    DWORD PTR [bp-0x8],ebx
  41f9aa:	mov    esp,0x52c9b85a
  41f9af:	inc    ebp
  41f9b0:	mov    WORD PTR [edx+0x34],cs
  41f9b3:	lea    ecx,[ebx+edx*1-0x75]
  41f9b7:	mov    cl,0x25
  41f9b9:	sbb    al,BYTE PTR [ebx+0x6a]
  41f9bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9bd:	push   ecx
  41f9be:	jae    0x41f9aa
  41f9c0:	dec    ebp
  41f9c1:	test   eax,0x8d0b4409
  41f9c6:	repz jmp 0x41f979
  41f9c9:	sub    ecx,DWORD PTR ss:[ebx+0x16eab95f]
  41f9d0:	mov    gs,WORD PTR [eax-0x4556b1ae]
  41f9d6:	dec    edi
  41f9d7:	jae    0x41f9c1
  41f9d9:	mov    bl,0xee
  41f9db:	sub    edx,DWORD PTR [eax+0x1436e2c2]
  41f9e1:	gs xchg ecx,eax
  41f9e3:	and    esp,esi
  41f9e5:	out    dx,eax
  41f9e6:	aad    0xc5
  41f9e8:	xor    ah,dl
  41f9ea:	xchg   edi,edi
  41f9ec:	mov    ecx,0x3de460f1
  41f9f1:	cmp    ch,BYTE PTR [ebp+0x55]
  41f9f4:	fwait
  41f9f5:	fs push eax
  41f9f7:	and    BYTE PTR es:[edi],ah
  41f9fa:	aad    0x1f
  41f9fc:	push   ebx
  41f9fd:	or     bh,BYTE PTR [ecx+esi*4]
  41fa00:	lock xor ebx,DWORD PTR [eax+0x1c]
  41fa04:	and    eax,0x463eb87f
  41fa09:	and    DWORD PTR [edi],edi
  41fa0b:	mov    BYTE PTR [ecx+0x45],al
  41fa0e:	and    eax,0x87f43d9a
  41fa13:	mov    al,ds:0xe17fafb6
  41fa18:	mov    ah,ah
  41fa1a:	mov    WORD PTR [edi-0x324d62f0],cs
  41fa20:	jge    0x41fa71
  41fa22:	mov    esp,0x91dd46e1
  41fa27:	xchg   ecx,eax
  41fa28:	out    0x82,al
  41fa2a:	cli    
  41fa2b:	add    DWORD PTR [edx+0x53eadb4c],edx
  41fa31:	push   edx
  41fa32:	rol    DWORD PTR [ecx+0x1e],cl
  41fa35:	or     BYTE PTR [ebx],ah
  41fa37:	rcr    BYTE PTR [ebx-0x2efaf2da],cl
  41fa3d:	fcom   DWORD PTR [eax-0x54381521]
  41fa43:	in     eax,0x5d
  41fa45:	and    eax,0x49a2237a
  41fa4a:	adc    eax,0x3e605dbf
  41fa4f:	dec    edi
  41fa50:	icebp  
  41fa51:	test   al,0xb1
  41fa53:	rcl    bl,0x9a
  41fa56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa57:	pop    es
  41fa58:	or     al,0xdc
  41fa5a:	call   0xab27df83
  41fa5f:	outs   dx,DWORD PTR ds:[esi]
  41fa60:	out    0x73,al
  41fa62:	das    
  41fa63:	pop    ebx
  41fa64:	sub    eax,0x204e8852
  41fa69:	lahf   
  41fa6a:	fisub  WORD PTR [edi+0x1]
  41fa6d:	xchg   esp,eax
  41fa6e:	pop    es
  41fa6f:	pop    esp
  41fa70:	mov    al,0x66
  41fa72:	sub    eax,0xa31483c3
  41fa77:	clc    
  41fa78:	in     eax,dx
  41fa79:	cmp    BYTE PTR [eax],ah
  41fa7b:	mov    eax,ds:0x405be733
  41fa80:	xor    al,0xc3
  41fa82:	loop   0x41fac2
  41fa84:	sbb    esi,DWORD PTR [ecx-0x6f]
  41fa87:	call   0x5c0c:0x39824bb
  41fa8e:	push   cs
  41fa8f:	outs   dx,DWORD PTR ds:[esi]
  41fa90:	xchg   edx,eax
  41fa91:	or     BYTE PTR [eax],al
  41fa93:	cmp    eax,0xc244b037
  41fa98:	cs pop ebx
  41fa9a:	rcr    BYTE PTR ds:0x4f3a62d6,cl
  41faa0:	retf   
  41faa1:	sahf   
  41faa2:	mov    dh,0x5b
  41faa4:	(bad)  
  41faa5:	das    
  41faa6:	pop    esp
  41faa7:	stc    
  41faa8:	stos   BYTE PTR es:[edi],al
  41faa9:	add    dl,BYTE PTR [esp+ebx*2]
  41faac:	cmp    DWORD PTR [eax-0x5b],ebx
  41faaf:	mov    esp,0x6ab4dda3
  41fab4:	mov    eax,0x7980160f
  41fab9:	inc    ecx
  41faba:	not    DWORD PTR [edx-0x34fb7173]
  41fac0:	sti    
  41fac1:	or     ebx,DWORD PTR [ebx-0x47246e61]
  41fac7:	push   cs
  41fac8:	(bad)  
  41fac9:	mov    dh,0x6
  41facb:	xchg   DWORD PTR [esi-0x7e],esp
  41face:	pcmpeqd mm6,mm2
  41fad1:	imul   edi,ecx,0x91426c62
  41fad7:	inc    ebp
  41fad8:	inc    eax
  41fad9:	mov    eax,0xc0188218
  41fade:	dec    edx
  41fadf:	ror    BYTE PTR [ebp-0x2c],0x7
  41fae3:	lods   eax,DWORD PTR ds:[esi]
  41fae4:	fs int3 
  41fae6:	sahf   
  41fae7:	pop    edx
  41fae8:	ret    
  41fae9:	dec    esp
  41faea:	data16 and al,0x2a
  41faed:	push   esi
  41faee:	ficomp WORD PTR [ecx+ebx*2-0x1abbbac6]
  41faf5:	mov    dl,0x16
  41faf7:	or     BYTE PTR ds:0x1c00c8e8,0x27
  41fafe:	out    0x95,al
  41fb00:	imul   ecx,DWORD PTR [ecx-0x5a958e05],0xc6b8c9a9
  41fb0a:	aas    
  41fb0b:	stos   BYTE PTR es:[edi],al
  41fb0c:	aaa    
  41fb0d:	daa    
  41fb0e:	sub    eax,0x9ccab2e
  41fb13:	cmp    esp,DWORD PTR [esp+esi*2-0xa]
  41fb17:	stos   BYTE PTR es:[edi],al
  41fb18:	imul   eax,DWORD PTR [ecx+edx*1],0x23034a2f
  41fb1f:	mov    ecx,DWORD PTR [eax]
  41fb21:	pop    edi
  41fb22:	push   ebx
  41fb23:	inc    ebx
  41fb24:	mov    esp,0xb7f656e3
  41fb29:	push   esi
  41fb2a:	shl    BYTE PTR [edx+0x6d],cl
  41fb2d:	xchg   ecx,eax
  41fb2e:	jmp    0x4d1e:0x8029630d
  41fb35:	jg     0x41fb4d
  41fb37:	or     al,0x3
  41fb39:	or     ah,BYTE PTR [edx]
  41fb3b:	dec    ecx
  41fb3c:	stc    
  41fb3d:	stos   DWORD PTR es:[edi],eax
  41fb3e:	stos   BYTE PTR es:[edi],al
  41fb3f:	cmp    BYTE PTR [edx+0x1337a151],dl
  41fb45:	inc    ebp
  41fb46:	in     eax,0x9c
  41fb48:	cmp    cl,bh
  41fb4a:	push   esi
  41fb4b:	inc    eax
  41fb4c:	mov    ebx,0x4689adc6
  41fb51:	pop    edi
  41fb52:	je     0x41fbbe
  41fb54:	mov    ecx,0x63f850e3
  41fb59:	retf   
  41fb5a:	push   ds
  41fb5b:	loope  0x41fbb3
  41fb5d:	std    
  41fb5e:	rcl    BYTE PTR [ebx-0x19dbd3bc],0x2a
  41fb65:	pop    DWORD PTR [esi-0x6b]
  41fb68:	ins    BYTE PTR es:[edi],dx
  41fb69:	and    eax,0x8c58f02b
  41fb6e:	mov    ds:0x92f0c0ce,al
  41fb73:	dec    eax
  41fb74:	dec    edx
  41fb75:	push   esi
  41fb76:	cld    
  41fb77:	popf   
  41fb78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb79:	adc    BYTE PTR [ebp-0x60],bh
  41fb7c:	jecxz  0x41fb19
  41fb7e:	push   0x5070903b
  41fb83:	pop    ss
  41fb84:	pop    eax
  41fb85:	mov    ch,0xd
  41fb87:	lahf   
  41fb88:	daa    
  41fb89:	mov    bh,0x33
  41fb8b:	popf   
  41fb8c:	retf   0x823b
  41fb8f:	mul    DWORD PTR ds:0x7002526
  41fb95:	jl     0x41fbea
  41fb97:	mov    esi,0x2ccf1c3d
  41fb9c:	xor    BYTE PTR [edi-0x73aca6f4],0x19
  41fba3:	adc    al,BYTE PTR [ebp-0x69]
  41fba6:	mov    eax,0xbd9790f1
  41fbab:	inc    edx
  41fbac:	or     DWORD PTR [ecx+0x7d2d951b],edx
  41fbb2:	retf   
  41fbb3:	clc    
  41fbb4:	loop   0x41fbe7
  41fbb6:	cmp    DWORD PTR [ebx],esi
  41fbb8:	or     BYTE PTR [esi],0xd9
  41fbbb:	fwait
  41fbbc:	or     DWORD PTR [esp+ebx*4-0x45],ecx
  41fbc0:	outs   dx,DWORD PTR ds:[esi]
  41fbc1:	inc    eax
  41fbc2:	mov    edi,0x6ebbc276
  41fbc7:	rcl    BYTE PTR [eax+0x42],cl
  41fbca:	call   0xabce44e2
  41fbcf:	add    esi,DWORD PTR [ebx+0x9]
  41fbd2:	cmp    BYTE PTR [ebx],cl
  41fbd4:	loop   0x41fc33
  41fbd6:	scas   al,BYTE PTR es:[edi]
  41fbd7:	xor    DWORD PTR [esp+ebp*8],ecx
  41fbda:	jmp    0xe1b1c1d8
  41fbdf:	fwait
  41fbe0:	adc    esp,esi
  41fbe2:	mov    ds:0x2e3193ed,al
  41fbe7:	(bad)  
  41fbe9:	sub    BYTE PTR [esi+edx*8-0x349e1a89],cl
  41fbf0:	pushf  
  41fbf1:	push   0x38
  41fbf3:	mov    bl,0xac
  41fbf5:	push   ebx
  41fbf6:	sub    al,0xc2
  41fbf8:	test   esp,esi
  41fbfa:	aas    
  41fbfb:	inc    ecx
  41fbfc:	je     0x41fbb0
  41fbfe:	out    0x39,eax
  41fc00:	or     ecx,ebp
  41fc02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc03:	iret   
  41fc04:	add    ch,BYTE PTR [edx+esi*8+0xe]
  41fc08:	and    BYTE PTR [ebx],0x7a
  41fc0b:	fist   DWORD PTR es:[esi+0x35]
  41fc0f:	js     0x41fbeb
  41fc11:	enter  0x6aa3,0xbb
  41fc15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc16:	xchg   esi,eax
  41fc17:	or     esp,DWORD PTR [ecx]
  41fc19:	sbb    bl,BYTE PTR [edx+0x4bf82b05]
  41fc1f:	push   0x60
  41fc21:	push   esp
  41fc22:	data16 sbb ah,BYTE PTR [edx-0x49366ef]
  41fc29:	leave  
  41fc2a:	pop    eax
  41fc2b:	push   ecx
  41fc2c:	into   
  41fc2d:	dec    edi
  41fc2e:	lea    edx,[ecx+0x24]
  41fc31:	sbb    DWORD PTR [esi],esp
  41fc33:	xor    al,0xba
  41fc35:	xor    BYTE PTR [esp+ebp*1-0x7a480139],bl
  41fc3c:	mov    ?,WORD PTR ds:0xd296d8c8
  41fc42:	arpl   WORD PTR [eax-0xc],sp
  41fc45:	and    cl,BYTE PTR [edx]
  41fc47:	pop    esi
  41fc48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc49:	cs inc ebx
  41fc4b:	jne    0x41fc98
  41fc4d:	jo     0x41fc11
  41fc4f:	xor    ebp,DWORD PTR [edi]
  41fc51:	jnp    0x41fc3d
  41fc53:	outs   dx,DWORD PTR ds:[esi]
  41fc54:	mov    BYTE PTR [edi+0x3c],cl
  41fc57:	ffree  st(2)
  41fc59:	adc    al,0x6
  41fc5b:	test   BYTE PTR [edx-0x2],cl
  41fc5e:	mov    al,ds:0x974bdd6f
  41fc63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc64:	dec    esi
  41fc65:	sahf   
  41fc66:	sbb    al,0xad
  41fc68:	fisub  DWORD PTR [edi-0x3ebb5323]
  41fc6e:	sub    esi,ecx
  41fc70:	and    eax,0x6bba31c1
  41fc75:	push   esi
  41fc76:	mov    al,ds:0x2892d7bf
  41fc7b:	inc    edi
  41fc7c:	jmp    0x41fc9c
  41fc7e:	cmc    
  41fc7f:	dec    edx
  41fc80:	push   ebp
  41fc81:	dec    ebx
  41fc82:	adc    DWORD PTR [edi+0x30ee419],ebx
  41fc88:	jmp    0x41f8bd78
  41fc8d:	pop    edx
  41fc8e:	(bad)  
  41fc8f:	cs add al,0x13
  41fc92:	or     ebp,ecx
  41fc94:	test   al,0x49
  41fc96:	jnp    0x41fc4b
  41fc98:	mov    ch,0x1f
  41fc9a:	sbb    BYTE PTR ds:0xb7497b44,ch
  41fca0:	shl    ch,cl
  41fca2:	pop    ss
  41fca3:	retf   0x766d
  41fca6:	jmp    0x41fcbf
  41fca8:	jae    0x41fcfe
  41fcaa:	and    BYTE PTR [esi],0x7e
  41fcad:	pop    edi
  41fcae:	test   DWORD PTR [ebx],0xb0f907b
  41fcb4:	sbb    edx,edx
  41fcb6:	popf   
  41fcb7:	jmp    0xf787:0x376d5a76
  41fcbe:	add    bh,dl
  41fcc0:	icebp  
  41fcc1:	dec    ebp
  41fcc2:	fprem  
  41fcc4:	mov    ebp,0xe1d2e6d8
  41fcc9:	add    DWORD PTR [eax-0x6f8e83f5],ebp
  41fccf:	imul   esi,DWORD PTR [eax+0x68],0x8ff25440
  41fcd6:	pop    ebx
  41fcd7:	mov    esp,0x7a05bc89
  41fcdc:	and    ecx,DWORD PTR [ebp-0x46]
  41fcdf:	xchg   ecx,eax
  41fce0:	scas   eax,DWORD PTR es:[edi]
  41fce1:	(bad)  
  41fce2:	or     eax,0xa1970dfa
  41fce7:	adc    eax,0xb19a6da4
  41fcec:	inc    edi
  41fced:	data16 icebp 
  41fcef:	pop    ebp
  41fcf0:	test   al,0xf7
  41fcf2:	sti    
  41fcf3:	arpl   WORD PTR [edx],sp
  41fcf5:	int3   
  41fcf6:	dec    ebp
  41fcf7:	(bad)  
  41fcf8:	ret    0xa378
  41fcfb:	ins    DWORD PTR es:[edi],dx
  41fcfc:	ss test al,0x8f
  41fcff:	rcr    dh,1
  41fd01:	adc    eax,0x482445fe
  41fd06:	out    dx,eax
  41fd07:	xchg   edx,eax
  41fd08:	pop    eax
  41fd09:	cmovl  esp,DWORD PTR [ecx+0x59]
  41fd0d:	xor    bh,BYTE PTR [edi+0x1d9cc2da]
  41fd13:	test   BYTE PTR cs:[ebx],ah
  41fd16:	cmp    eax,0x945901d1
  41fd1b:	dec    esi
  41fd1c:	fld    TBYTE PTR [edi-0x468ea630]
  41fd22:	pop    esp
  41fd23:	and    eax,ebp
  41fd25:	loope  0x41fd9a
  41fd27:	xchg   dh,al
  41fd29:	repz inc ecx
  41fd2b:	mov    edi,0x12177aec
  41fd30:	hlt    
  41fd31:	ss and eax,ecx
  41fd34:	dec    ebx
  41fd35:	xchg   ebx,eax
  41fd36:	push   ds
  41fd37:	pop    eax
  41fd38:	sub    cl,cl
  41fd3a:	xchg   ebx,eax
  41fd3b:	inc    edx
  41fd3c:	pop    eax
  41fd3d:	pop    edi
  41fd3e:	mov    edi,0x1e585c8d
  41fd43:	stos   DWORD PTR es:[edi],eax
  41fd44:	je     0x41fd95
  41fd46:	jb     0x41fd7c
  41fd48:	inc    ebx
  41fd49:	sahf   
  41fd4a:	scas   al,BYTE PTR es:[edi]
  41fd4b:	jp     0x41fdb2
  41fd4d:	imul   BYTE PTR [eax+0x26]
  41fd50:	fsubrp st(1),st
  41fd52:	adc    al,0x7e
  41fd54:	xlat   BYTE PTR ds:[ebx]
  41fd55:	add    ah,BYTE PTR [esi]
  41fd57:	fld    QWORD PTR [edi+0x42]
  41fd5a:	imul   ebp,DWORD PTR [eax-0x64],0x4766d5b6
  41fd61:	dec    eax
  41fd62:	(bad)  [eax-0x71]
  41fd65:	add    ch,bh
  41fd67:	arpl   cx,dx
  41fd69:	(bad)  
  41fd6b:	and    esp,esi
  41fd6d:	jmp    0x7619:0x984c7ff9
  41fd74:	scas   eax,DWORD PTR es:[edi]
  41fd75:	je     0x41fdc1
  41fd77:	test   al,0x5d
  41fd79:	fs popa 
  41fd7b:	push   ecx
  41fd7c:	xchg   bl,dh
  41fd7e:	fmul   DWORD PTR [edi-0x3c1af638]
  41fd84:	ja     0x41fe00
  41fd86:	adc    al,0x36
  41fd88:	test   BYTE PTR [eax-0x6aaf2ae4],ch
  41fd8e:	test   al,0x53
  41fd90:	das    
  41fd91:	dec    ebx
  41fd92:	shr    edi,1
  41fd94:	push   ss
  41fd95:	test   BYTE PTR [ecx-0x20ace7c5],0xd4
  41fd9c:	xchg   edx,eax
  41fd9d:	adc    esp,DWORD PTR [edx]
  41fd9f:	inc    edi
  41fda0:	imul   ebp,DWORD PTR [eax+eiz*4+0x22],0x1
  41fda5:	mov    ds:0xb743a70f,al
  41fdaa:	dec    ecx
  41fdab:	loope  0x41fd45
  41fdad:	cmp    eax,ebp
  41fdaf:	lea    ebp,[ecx]
  41fdb1:	inc    sp
  41fdb3:	loop   0x41fd3d
  41fdb5:	ss mov edi,ebp
  41fdb8:	imul   edi,DWORD PTR [ebx],0x70
  41fdbb:	xchg   DWORD PTR [esi+ecx*4+0x7ce6211d],ebx
  41fdc2:	daa    
  41fdc3:	push   ecx
  41fdc4:	xchg   BYTE PTR [edx-0x3673c3f4],ah
  41fdca:	mov    ebp,0x7fb04ef4
  41fdcf:	dec    edx
  41fdd0:	into   
  41fdd1:	xchg   ecx,eax
  41fdd2:	sub    DWORD PTR [eax-0x53],0xd50a589
  41fdd9:	(bad)  
  41fdda:	pop    esi
  41fddb:	sub    eax,0x329cd866
  41fde0:	sbb    BYTE PTR [eax+eax*8+0x23],cl
  41fde4:	(bad)  
  41fde5:	xchg   ecx,eax
  41fde6:	sbb    BYTE PTR [ebx+ecx*2],dh
  41fde9:	call   0x70090361
  41fdee:	jb     0x41fdd9
  41fdf0:	push   ebx
  41fdf1:	mov    al,0xc3
  41fdf3:	push   ss
  41fdf4:	nop
  41fdf5:	pop    esp
  41fdf6:	sbb    bl,bh
  41fdf8:	jae    0x41fe47
  41fdfa:	scas   eax,DWORD PTR es:[edi]
  41fdfb:	push   ss
  41fdfc:	out    0xa,eax
  41fdfe:	mov    eax,0x67c82ef5
  41fe03:	mov    bh,0x2a
  41fe05:	std    
  41fe06:	adc    eax,0x1a9101a1
  41fe0b:	adc    al,0x68
  41fe0d:	mov    al,0x70
  41fe0f:	mov    eax,ds:0x3d301fc2
  41fe14:	sbb    eax,0x6c9c3e3c
  41fe19:	pop    esp
  41fe1a:	je     0x41fda5
  41fe1c:	and    DWORD PTR [eax-0x77b89b2],ebp
  41fe22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe23:	mov    eax,ebp
  41fe25:	fisub  DWORD PTR [eax-0x1d]
  41fe28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe29:	inc    ebp
  41fe2a:	mov    dl,0x91
  41fe2c:	div    BYTE PTR [edi+eiz*8+0xc]
  41fe30:	push   edi
  41fe31:	repnz and ah,BYTE PTR [ebp+0x417d882c]
  41fe38:	sub    DWORD PTR [edx-0x1210bfd0],esp
  41fe3e:	jp     0x41fdd8
  41fe40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe41:	inc    esi
  41fe42:	mov    edi,0x6faa82a
  41fe47:	(bad)  
  41fe49:	(bad)  
  41fe4a:	lods   al,BYTE PTR ds:[esi]
  41fe4b:	(bad)  
  41fe4c:	dec    esi
  41fe4d:	loop   0x41fdef
  41fe4f:	ss pusha 
  41fe51:	cmp    ebp,DWORD PTR [ebx]
  41fe53:	dec    edi
  41fe54:	int3   
  41fe55:	ja     0x41fdf3
  41fe57:	push   eax
  41fe58:	cwde   
  41fe59:	popa   
  41fe5a:	in     eax,dx
  41fe5b:	scas   eax,DWORD PTR es:[edi]
  41fe5c:	mov    al,0x93
  41fe5e:	push   ss
  41fe5f:	and    ebx,DWORD PTR [esi]
  41fe61:	imul   ebx,DWORD PTR [ecx-0x57],0xffffffbc
  41fe65:	sub    edi,eax
  41fe67:	pop    es
  41fe68:	pusha  
  41fe69:	mov    esi,0xc927959f
  41fe6e:	push   eax
  41fe6f:	jns    0x41fec3
  41fe71:	dec    esp
  41fe72:	xchg   ebx,eax
  41fe73:	pop    edx
  41fe74:	fild   WORD PTR [esi+0x68]
  41fe77:	add    BYTE PTR [esi+0x39a492e5],0x79
  41fe7e:	inc    ebp
  41fe7f:	add    eax,0x2f70466e
  41fe84:	imul   ebp,DWORD PTR [ebx-0x23],0x4e
  41fe88:	dec    ebx
  41fe89:	inc    esi
  41fe8a:	stos   DWORD PTR es:[edi],eax
  41fe8b:	js     0x41fe80
  41fe8d:	or     eax,0x89e3554c
  41fe92:	pushf  
  41fe93:	out    0xff,eax
  41fe95:	xchg   ebp,eax
  41fe96:	xchg   DWORD PTR [edi+0x17],esp
  41fe99:	test   eax,0x7b1f4702
  41fe9e:	shr    bh,cl
  41fea0:	xor    al,0x6c
  41fea2:	pop    esi
  41fea3:	cmp    ebp,0x81a38e8f
  41fea9:	out    dx,eax
  41feaa:	lahf   
  41feab:	inc    ecx
  41feac:	add    DWORD PTR [edx+0x1bd0b98d],esi
  41feb2:	sub    eax,0x7242a8ae
  41feb7:	sub    ebx,DWORD PTR [esi-0x50d3980f]
  41febd:	mov    ebp,0x3f5b64f5
  41fec2:	(bad)  
  41fec3:	mov    esp,0xfb04a230
  41fec8:	push   ebp
  41fec9:	int    0x5c
  41fecb:	rol    BYTE PTR [esi+0x5f],0xdf
  41fecf:	rcl    eax,1
  41fed1:	xchg   ecx,eax
  41fed2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fed3:	mov    ch,0xf
  41fed5:	mov    BYTE PTR [eax+esi*2],al
  41fed8:	pop    edx
  41fed9:	pop    esp
  41feda:	sub    eax,0x1696c5aa
  41fedf:	inc    edi
  41fee0:	dec    esi
  41fee1:	aam    0x82
  41fee3:	push   ebx
  41fee4:	ror    ch,0x52
  41fee7:	in     eax,dx
  41fee8:	sub    DWORD PTR [ecx+0x76],eax
  41feeb:	sub    al,0x2a
  41feed:	and    BYTE PTR [esp+ebp*1+0x4f359972],dl
  41fef4:	mov    edi,0x3aa1dd83
  41fef9:	jnp    0x41fedc
  41fefb:	mov    ecx,0xbab5ffa7
  41ff00:	sbb    al,0xad
  41ff02:	stos   BYTE PTR es:[edi],al
  41ff03:	cmp    al,0x1a
  41ff05:	dec    edx
  41ff06:	pop    ss
  41ff07:	jle    0x41fee3
  41ff09:	sbb    al,0xa5
  41ff0b:	push   ss
  41ff0c:	mov    ah,0xb4
  41ff0e:	das    
  41ff0f:	in     eax,0x8b
  41ff11:	push   es
  41ff12:	cmp    DWORD PTR [esi+edx*4-0x32],eax
  41ff16:	shr    DWORD PTR [eax-0x69cb36fe],cl
  41ff1c:	gs push 0x387bc85a
  41ff22:	cmp    ebx,edi
  41ff24:	mov    eax,ds:0x1d0f255f
  41ff29:	mov    cl,bh
  41ff2b:	(bad)  
  41ff2c:	fs jae 0x41fec8
  41ff2f:	push   es
  41ff30:	or     BYTE PTR [edx-0x7b5593f0],al
  41ff36:	mov    edi,DWORD PTR [edx+eax*4]
  41ff39:	push   ss
  41ff3a:	adc    DWORD PTR [ebx],edi
  41ff3c:	out    0xe9,al
  41ff3e:	fisub  DWORD PTR [ebx]
  41ff40:	xlat   BYTE PTR ds:[ebx]
  41ff41:	mov    al,ds:0xb65f1113
  41ff46:	ficomp DWORD PTR [esi+edi*1]
  41ff49:	shl    edx,0x3f
  41ff4c:	in     al,dx
  41ff4d:	cmp    bl,bl
  41ff4f:	bound  edx,QWORD PTR [ebx+0x5dcb2589]
  41ff55:	and    BYTE PTR [eax-0x3b],dl
  41ff58:	jns    0x41ff63
  41ff5a:	push   ebx
  41ff5b:	push   cs
  41ff5c:	shl    BYTE PTR [edx],0x37
  41ff5f:	sub    esi,DWORD PTR [ebx-0x2c52af1c]
  41ff65:	aad    0x48
  41ff67:	leave  
  41ff68:	mov    WORD PTR [edi+0x18],?
  41ff6b:	sbb    eax,esi
  41ff6d:	xchg   DWORD PTR [ecx-0x42bf1f89],ebp
  41ff73:	xchg   esi,eax
  41ff74:	add    al,0xa3
  41ff76:	daa    
  41ff77:	(bad)  
  41ff78:	sti    
  41ff79:	enter  0xf8a1,0xb5
  41ff7d:	inc    eax
  41ff7e:	imul   esp,DWORD PTR [ecx+0x599517e2],0x8479b0bb
  41ff88:	in     al,dx
  41ff89:	daa    
  41ff8a:	mov    esi,cs
  41ff8c:	stos   BYTE PTR es:[edi],al
  41ff8d:	call   0x3da772b6
  41ff92:	cld    
  41ff93:	mov    BYTE PTR [edi-0x55],bl
  41ff96:	push   edi
  41ff97:	mov    ebp,0x52732231
  41ff9c:	in     al,dx
  41ff9d:	sub    cl,BYTE PTR [edx-0x5fa9252a]
  41ffa3:	stos   BYTE PTR es:[edi],al
  41ffa4:	pushf  
  41ffa5:	outs   dx,BYTE PTR ds:[esi]
  41ffa6:	xchg   edx,eax
  41ffa7:	jae    0x41ff58
  41ffa9:	ficomp WORD PTR [ecx+0x46]
  41ffac:	mov    bl,0x4d
  41ffae:	sub    eax,0xfbadc643
  41ffb3:	push   ecx
  41ffb4:	xchg   esp,eax
  41ffb5:	into   
  41ffb6:	loopne 0x41ffb0
  41ffb8:	add    DWORD PTR [ecx+0x21aa6974],eax
  41ffbe:	sbb    eax,0x2209d962
  41ffc3:	jno    0x41ff69
  41ffc5:	mov    cl,0xa8
  41ffc7:	sub    bl,BYTE PTR [esi-0x53]
  41ffca:	push   esi
  41ffcb:	out    0x87,al
  41ffcd:	dec    ecx
  41ffce:	aad    0x39
  41ffd0:	pop    es
  41ffd1:	lea    esp,[edi+0x14]
  41ffd4:	jae    0x41ffd0
  41ffd6:	in     al,dx
  41ffd7:	cmc    
  41ffd8:	lods   eax,DWORD PTR ds:[esi]
  41ffd9:	shr    BYTE PTR [ebp+ebx*8+0x1ef9133a],0x79
  41ffe1:	add    dh,bh
  41ffe3:	xor    esp,DWORD PTR [esi]
  41ffe5:	sbb    DWORD PTR [ecx-0x60ed353],edi
  41ffeb:	ret    0x59f
  41ffee:	enter  0x5a36,0xd9
  41fff2:	fidivr DWORD PTR [ecx+ebx*4+0x47]
  41fff6:	retf   0x56c3
  41fff9:	push   esp
  41fffa:	and    DWORD PTR [edi],edi
  41fffc:	ds push ss
  41fffe:	add    al,0x40
  420000:	mov    esi,DWORD PTR [ebx+0x26]
  420003:	xor    eax,0xb514f056
  420008:	cmp    DWORD PTR [esi],edi
  42000a:	je     0x420046
  42000c:	mov    ebx,0x68147c52
  420011:	dec    edi
  420012:	in     al,0x64
  420014:	inc    esi
  420015:	mov    eax,0x889d8d54
  42001a:	adc    bl,BYTE PTR [esi+0x38]
  42001d:	inc    edi
  42001e:	arpl   di,sp
  420020:	clc    
  420021:	push   edi
  420022:	cmp    ebp,DWORD PTR [ebp+0x18ef594e]
  420028:	hlt    
  420029:	frndint 
  42002b:	mov    WORD PTR [eax+ecx*8+0x7f],es
  42002f:	cmp    BYTE PTR [edi-0x55],bh
  420032:	cmp    DWORD PTR [ebp+0x65d7ed1],0xd35dcba7
  42003c:	sub    BYTE PTR [eax+0x4a7b28da],cl
  420042:	dec    ebp
  420043:	pop    ebx
  420044:	adc    al,0xde
  420046:	shl    DWORD PTR [ecx+0x5],1
  420049:	ins    DWORD PTR es:[edi],dx
  42004a:	test   DWORD PTR [ecx-0x11fe09e4],eax
  420050:	mov    ah,0x15
  420052:	or     BYTE PTR ds:[ebp+0x34],0x86
  420057:	mov    ebx,edx
  420059:	add    al,0x2
  42005b:	shl    bl,cl
  42005d:	mov    ds,WORD PTR [esp+eiz*2]
  420060:	cmp    eax,0xb1d9fb98
  420065:	cmp    bl,al
  420067:	sbb    DWORD PTR gs:[eax-0x25],ebx
  42006b:	xchg   BYTE PTR [esi+ebx*1-0x2011f214],dl
  420072:	xor    DWORD PTR [ebp+0x7f],ecx
  420075:	jge    0x420092
  420077:	loopne 0x420086
  420079:	cmp    dl,al
  42007b:	xchg   ecx,eax
  42007c:	mov    WORD PTR [eax-0x23],?
  42007f:	out    0x90,eax
  420081:	rcl    BYTE PTR ds:0x59366272,0xd5
  420088:	lahf   
  420089:	jg     0x4200a6
  42008b:	mov    cl,0x82
  42008d:	(bad)  
  42008e:	(bad)  
  420091:	in     al,dx
  420092:	imul   ebp,DWORD PTR [ebx-0x159c9d7c],0x2a
  420099:	bound  esi,QWORD PTR [esi+0x31]
  42009c:	mov    ch,0x79
  42009e:	ja     0x4200b8
  4200a0:	add    BYTE PTR [eax-0x71d61560],ah
  4200a6:	pop    esi
  4200a7:	adc    al,0xe7
  4200a9:	inc    esp
  4200aa:	outs   dx,DWORD PTR ds:[esi]
  4200ab:	les    edx,FWORD PTR [ebp+0x5d]
  4200ae:	sub    DWORD PTR [ebx-0x2],eax
  4200b1:	jb     0x420084
  4200b3:	pop    ds
  4200b4:	test   BYTE PTR [esi-0x59],0x62
  4200b8:	mov    ah,0x6
  4200ba:	mov    ebx,0xb1399f85
  4200bf:	dec    edi
  4200c0:	mov    dh,0xc9
  4200c2:	xor    al,0xf0
  4200c4:	sti    
  4200c5:	sub    al,0xdd
  4200c7:	fimul  WORD PTR es:[esi-0x66]
  4200cb:	rcl    edi,cl
  4200cd:	push   0xfffffffd
  4200cf:	stos   DWORD PTR es:[edi],eax
  4200d0:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200d2:	js     0x4200c2
  4200d4:	arpl   WORD PTR [ecx-0x4c4bfe45],sp
  4200da:	add    al,0x2a
  4200dc:	adc    ah,BYTE PTR [ebx]
  4200de:	std    
  4200df:	push   edx
  4200e0:	popf   
  4200e1:	jmp    0x420103
  4200e3:	test   BYTE PTR [edx],al
  4200e5:	ins    BYTE PTR es:[edi],dx
  4200e6:	pop    es
  4200e7:	sub    DWORD PTR [edi],ecx
  4200e9:	add    ah,BYTE PTR [ecx-0x6a746e8e]
  4200ef:	cli    
  4200f0:	stos   BYTE PTR es:[edi],al
  4200f1:	mov    cl,0x6e
  4200f3:	adc    DWORD PTR [ebp+0x5d],edi
  4200f6:	and    eax,0xdf0a7f9d
  4200fb:	mov    ds:0xebe27ae9,al
  420100:	push   ecx
  420101:	jle    0x42013b
  420103:	inc    ebx
  420104:	push   cs
  420105:	out    0x6a,al
  420107:	bound  esi,QWORD PTR [esi+0x3f643d0c]
  42010d:	pop    es
  42010e:	lods   eax,DWORD PTR ds:[esi]
  42010f:	icebp  
  420110:	and    DWORD PTR [esi+0x7798ddb3],ebx
  420116:	mov    eax,ecx
  420118:	pop    edi
  420119:	push   edx
  42011a:	outs   dx,BYTE PTR ds:[esi]
  42011b:	or     BYTE PTR [esi],ch
  42011d:	mov    esi,0x309db15f
  420122:	mov    edx,0xdd0e6d7c
  420127:	add    esi,DWORD PTR [edx+0x1be3b67]
  42012d:	push   cs
  42012e:	jne    0x42012f
  420130:	dec    eax
  420131:	mov    edx,0x12f89d0
  420136:	sbb    DWORD PTR [eax+0x292fe310],eax
  42013c:	jnp    0x420197
  42013e:	and    bl,BYTE PTR [ebx+ebp*4-0x2ede4e11]
  420145:	sbb    eax,0xf00fb50f
  42014a:	rcl    DWORD PTR [edi-0x2fca6118],0xe0
  420151:	stos   DWORD PTR es:[edi],eax
  420152:	cmp    DWORD PTR [esi-0x2a],edx
  420155:	inc    esi
  420156:	mov    ebp,0x73288a17
  42015b:	ret    
  42015c:	sub    bh,BYTE PTR cs:[esi]
  42015f:	popf   
  420160:	(bad)  
  420161:	icebp  
  420162:	ss mov ah,0x17
  420165:	push   0x4bdb6700
  42016a:	js     0x42017b
  42016c:	dec    ebx
  42016d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42016e:	hlt    
  42016f:	add    ch,bh
  420171:	push   ss
  420172:	xor    ch,BYTE PTR [ebp-0x25636a6b]
  420178:	or     dl,0x4b
  42017b:	int3   
  42017c:	inc    ecx
  42017d:	add    dl,0x9a
  420180:	xor    BYTE PTR [ebx-0x67],0xa
  420184:	or     eax,0xd7c0b1d8
  420189:	scas   eax,DWORD PTR es:[edi]
  42018a:	rcr    bl,0x3b
  42018d:	test   DWORD PTR [esi],edx
  42018f:	xchg   esi,eax
  420190:	sub    DWORD PTR [eax-0x785705b3],ebp
  420196:	xchg   BYTE PTR [ebp+0x18],bh
  420199:	dec    esi
  42019a:	sbb    eax,0x9b1c2845
  42019f:	cmp    dl,cl
  4201a1:	scas   eax,DWORD PTR es:[edi]
  4201a2:	push   esp
  4201a3:	dec    ebp
  4201a4:	mov    ah,0x3
  4201a6:	retf   
  4201a7:	sub    BYTE PTR [edx+0x705b4f89],dl
  4201ad:	outs   dx,DWORD PTR ds:[esi]
  4201ae:	cmp    al,0xbf
  4201b0:	int    0xa2
  4201b2:	pop    ds
  4201b3:	inc    esp
  4201b4:	fwait
  4201b5:	xor    esp,ebx
  4201b7:	fwait
  4201b8:	mov    dh,0x39
  4201ba:	mov    eax,0xe41f649f
  4201bf:	push   esi
  4201c0:	jb     0x42019a
  4201c2:	mov    ah,0x28
  4201c4:	fwait
  4201c5:	jmp    FWORD PTR ss:[edx]
  4201c8:	sbb    ah,BYTE PTR [eax+esi*4]
  4201cb:	jne    0x42021b
  4201cd:	jnp    0x4201b7
  4201cf:	adc    bl,dh
  4201d1:	mov    edi,0xbc9adc77
  4201d6:	pusha  
  4201d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201d8:	les    esi,FWORD PTR [esi+0x4bd5b9a1]
  4201de:	rcr    DWORD PTR [ecx],0xf9
  4201e1:	and    DWORD PTR [ebx+esi*2+0x6291013d],ecx
  4201e8:	enter  0xe5e9,0xd1
  4201ec:	mov    cl,0x7
  4201ee:	mov    bh,BYTE PTR [ebx]
  4201f0:	xchg   ebp,eax
  4201f1:	lahf   
  4201f2:	cmp    BYTE PTR [eax+0x13efebb6],ch
  4201f8:	sub    BYTE PTR [edx-0x6a],cl
  4201fb:	dec    edi
  4201fc:	fcomp  DWORD PTR [edi+0x36]
  4201ff:	mov    eax,DWORD PTR [edx]
  420201:	jns    0x42023e
  420203:	cmp    eax,0x520ef9f9
  420208:	inc    ecx
  420209:	adc    al,0x3a
  42020b:	in     al,0x48
  42020d:	push   eax
  42020e:	or     BYTE PTR [ecx],0x34
  420211:	jno    0x4201ef
  420213:	loope  0x4201c2
  420215:	or     DWORD PTR [edx-0x5a34a085],esi
  42021b:	jp     0x420251
  42021d:	idiv   DWORD PTR [eax+0x47]
  420220:	iret   
  420221:	and    eax,DWORD PTR [ebx]
  420223:	fcomip st,st(3)
  420225:	popa   
  420226:	jbe    0x420298
  420228:	xchg   esp,eax
  420229:	and    al,0xe7
  42022b:	(bad)  
  42022c:	mov    ecx,0x9369f173
  420231:	out    dx,eax
  420232:	sar    BYTE PTR [ecx],1
  420234:	icebp  
  420235:	adc    DWORD PTR [ebx+0x9],esi
  420238:	lea    ebx,[edi+0x4c657db3]
  42023e:	(bad)  
  42023f:	outs   dx,BYTE PTR ds:[esi]
  420240:	jnp    0x420247
  420242:	add    BYTE PTR [ebx],ch
  420244:	lock and DWORD PTR [edi+eiz*8-0x1f688266],edi
  42024c:	and    DWORD PTR [edx+0x59],ebx
  42024f:	clc    
  420250:	jnp    0x4201fb
  420252:	lods   al,BYTE PTR ds:[esi]
  420253:	aaa    
  420254:	xlat   BYTE PTR ds:[ebx]
  420255:	mov    cl,0xb9
  420257:	gs jo  0x4202b4
  42025a:	arpl   bx,si
  42025c:	cmp    al,0xe5
  42025e:	jne    0x4202de
  420260:	pop    eax
  420261:	xchg   esp,ebp
  420263:	mov    edi,0x62e16e97
  420268:	popa   
  420269:	out    dx,al
  42026a:	cmp    esi,DWORD PTR [esi-0x4142af93]
  420270:	xor    eax,0x92c079bb
  420275:	mov    esp,0x5a4ee944
  42027a:	push   ss
  42027b:	jmp    0x4c222077
  420280:	push   cs
  420281:	adc    ch,BYTE PTR ds:0x7ab91d21
  420287:	cmp    DWORD PTR [edx],ecx
  420289:	and    eax,0x3560ebf5
  42028e:	mov    BYTE PTR [esi],bl
  420290:	pop    edi
  420291:	icebp  
  420292:	or     al,0xf1
  420294:	in     al,dx
  420295:	mov    WORD PTR ds:0x932c7f66,cs
  42029b:	imul   esp,DWORD PTR [ebp-0x68afdc1a],0xe78bc719
  4202a5:	dec    esi
  4202a6:	neg    BYTE PTR [esi-0x12]
  4202a9:	or     esi,DWORD PTR [eax-0x500ef112]
  4202af:	pop    ebp
  4202b0:	or     BYTE PTR [ecx],0xde
  4202b3:	sub    al,0xb3
  4202b5:	inc    esp
  4202b6:	shr    BYTE PTR [edx+0x390512e1],1
  4202bc:	jge    0x420283
  4202be:	cmp    dl,ch
  4202c0:	mov    bh,BYTE PTR [edx-0x61]
  4202c3:	pushf  
  4202c4:	in     al,0xd0
  4202c6:	add    al,0xa8
  4202c8:	leave  
  4202c9:	sub    BYTE PTR ds:0x61c27be1,dh
  4202cf:	scas   al,BYTE PTR es:[edi]
  4202d0:	mov    dh,0x62
  4202d2:	std    
  4202d3:	test   al,0xc9
  4202d5:	mov    DWORD PTR [ecx-0x52],0xc96f2983
  4202dc:	xchg   ecx,eax
  4202dd:	cmp    cl,BYTE PTR [edi]
  4202df:	adc    dh,BYTE PTR [esi+eax*8-0x4]
  4202e3:	mov    ds:0x15fc284b,eax
  4202e8:	mov    edx,0xb60e65de
  4202ed:	call   0x7b64411f
  4202f2:	and    cl,bl
  4202f4:	xor    ebp,DWORD PTR [eax+esi*2]
  4202f7:	sbb    BYTE PTR [edi-0xe],dl
  4202fa:	dec    ebx
  4202fb:	sbb    BYTE PTR [edx+0x68],dh
  4202fe:	dec    ebp
  4202ff:	push   DWORD PTR fs:[ebx+0x22c572ba]
  420306:	jnp    0x42031d
  420308:	(bad)  
  420309:	push   esi
  42030a:	pop    esi
  42030b:	out    0x70,eax
  42030d:	push   ebp
  42030e:	arpl   si,ax
  420310:	iret   
  420311:	es mov ch,bh
  420314:	ret    
  420315:	mov    ds:0x1bccb2e5,eax
  42031a:	dec    esi
  42031b:	mov    bh,ch
  42031d:	cmp    eax,0x8add2b72
  420322:	cld    
  420323:	and    al,0xf1
  420325:	mov    esp,0x19cc8fc7
  42032a:	jge    0x42031c
  42032c:	xchg   edx,eax
  42032d:	dec    esp
  42032e:	fadd   QWORD PTR [ebp-0x2b]
  420331:	sti    
  420332:	gs pop esi
  420334:	aas    
  420335:	gs xchg ebx,eax
  420337:	lods   eax,DWORD PTR ds:[esi]
  420338:	add    ebx,DWORD PTR [esi-0x5d7807fe]
  42033e:	rcr    BYTE PTR ds:0xe07b88f3,cl
  420344:	jp     0x420364
  420346:	(bad)  
  420347:	js     0x420368
  420349:	or     BYTE PTR ds:0x7c7f893f,al
  42034f:	fmulp  st(2),st
  420351:	int    0xf0
  420353:	fnstsw WORD PTR [ebp+0x4f]
  420356:	cmp    eax,0x6a936aa
  42035b:	adc    ah,BYTE PTR [ebx]
  42035d:	mov    al,ds:0x458dab4
  420362:	imul   ebp,DWORD PTR [edx+0x7e9a92d5],0xffffffbc
  420369:	mov    ebx,0x108332fb
  42036e:	push   ss
  42036f:	mov    edi,0xaf455aae
  420374:	scas   eax,DWORD PTR es:[edi]
  420375:	mov    BYTE PTR [esi+0x673a9a27],cl
  42037b:	dec    BYTE PTR [ebp+0x114eefdf]
  420381:	add    edi,esp
  420383:	(bad)  
  420384:	stos   BYTE PTR es:[edi],al
  420385:	rcl    ecx,1
  420387:	imul   eax,DWORD PTR [ebx],0x6a1a00c9
  42038d:	and    ah,0x56
  420390:	dec    edi
  420391:	dec    ecx
  420392:	pop    ebx
  420393:	repnz out 0x73,al
  420396:	mov    edi,0xa49cbd98
  42039b:	inc    edi
  42039c:	aas    
  42039d:	mov    edx,DWORD PTR [ebp+edi*8+0x71]
  4203a1:	cs push cs
  4203a3:	pushf  
  4203a4:	fwait
  4203a5:	sbb    DWORD PTR ds:0x7099f8b0,ecx
  4203ab:	fisubr DWORD PTR [eax]
  4203ad:	inc    ebx
  4203ae:	test   eax,0x72210d9a
  4203b3:	and    edi,ebp
  4203b5:	je     0x4203d9
  4203b7:	jae    0x420419
  4203b9:	cld    
  4203ba:	loope  0x420427
  4203bc:	xor    DWORD PTR [esi+0x33b11547],eax
  4203c2:	jp     0x420352
  4203c4:	push   cs
  4203c5:	and    ebx,DWORD PTR ds:0xdb030c12
  4203cb:	jmp    0x420424
  4203cd:	hlt    
  4203ce:	daa    
  4203cf:	lds    eax,FWORD PTR [edx+0x590f3936]
  4203d5:	and    BYTE PTR [ebp-0xc6ef588],ch
  4203db:	iret   
  4203dc:	adc    edi,DWORD PTR [eax+0x6174bd3d]
  4203e2:	shl    dh,0x5e
  4203e5:	cmp    edi,DWORD PTR [edx]
  4203e7:	lock cmc 
  4203e9:	mov    ds:0x47150a06,eax
  4203ee:	ret    0xea6c
  4203f1:	(bad)  
  4203f2:	stos   DWORD PTR es:[edi],eax
  4203f3:	nop
  4203f4:	mov    eax,ds:0xa6fb7cc2
  4203f9:	or     ah,bl
  4203fb:	pop    es
  4203fc:	cmp    dh,BYTE PTR [ebx-0x5c]
  4203ff:	inc    esp
  420400:	lahf   
  420401:	inc    edx
  420402:	lods   al,BYTE PTR ds:[esi]
  420403:	xchg   DWORD PTR [ecx],edx
  420405:	sbb    dh,0x4a
  420408:	loop   0x42043e
  42040a:	retf   0x92bb
  42040d:	jmp    0x420430
  42040f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420410:	xchg   ebx,eax
  420411:	push   ds
  420412:	lock ds lahf 
  420415:	pop    esp
  420416:	jne    0x42041b
  420418:	mov    edi,DWORD PTR [edx+0x58202f25]
  42041e:	lods   al,BYTE PTR ds:[esi]
  42041f:	sahf   
  420420:	and    DWORD PTR [ebx+0x4e],edx
  420423:	inc    ebp
  420424:	jmp    0x4203ba
  420426:	xor    BYTE PTR [ecx-0x3f03e418],dh
  42042c:	push   ebx
  42042d:	in     eax,dx
  42042e:	cdq    
  42042f:	adc    ebx,edi
  420431:	jmp    0x42049d
  420433:	push   ebp
  420434:	sub    BYTE PTR [eax+0x48],dl
  420437:	add    al,0xe8
  420439:	pop    edi
  42043a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42043b:	daa    
  42043c:	pop    ebx
  42043d:	mov    esi,0xd1e8fe0b
  420442:	inc    esp
  420443:	dec    edi
  420444:	pop    ebp
  420445:	xchg   ecx,eax
  420446:	and    DWORD PTR [eax+0x4d],0xfe886f85
  42044d:	jns    0x4203d3
  42044f:	inc    ebp
  420450:	fild   DWORD PTR [ebx-0x6a]
  420453:	jg     0x420442
  420455:	mov    dl,BYTE PTR [eax+0x5d972f2d]
  42045b:	loopne 0x420455
  42045d:	and    eax,0x48c3d716
  420462:	pop    ebx
  420463:	add    esp,esp
  420465:	add    al,0x30
  420467:	xor    eax,0x5c9fe92
  42046c:	add    BYTE PTR [edi+0x6f],bh
  42046f:	cmp    bl,dh
  420471:	cmp    al,dl
  420473:	enter  0x858c,0xed
  420477:	loop   0x4204f0
  420479:	and    DWORD PTR [eax+ebx*8+0x5],ebx
  42047d:	jg     0x420496
  42047f:	sbb    eax,0x4f1b6cbd
  420484:	add    BYTE PTR [ecx+0x5a],0x49
  420488:	(bad)  
  420489:	mov    ebp,0x259f9eb
  42048e:	icebp  
  42048f:	mov    ah,0x33
  420491:	sub    BYTE PTR [edx],cl
  420493:	sub    ebx,ecx
  420495:	jno    0x420475
  420497:	aaa    
  420498:	push   DWORD PTR [ecx]
  42049a:	mov    ds:0xd9830490,al
  42049f:	mov    eax,0xcee09a0
  4204a4:	das    
  4204a5:	adc    eax,DWORD PTR [ebp+0xe9f6679]
  4204ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204ac:	lahf   
  4204ad:	out    0xda,eax
  4204af:	cmp    DWORD PTR [edx-0x7139adb1],ecx
  4204b5:	xchg   esp,eax
  4204b6:	fld    DWORD PTR [edi-0x21f13654]
  4204bc:	sbb    ecx,esi
  4204be:	adc    DWORD PTR [ecx+ebx*4+0x57c9a88b],esi
  4204c5:	mov    esp,edx
  4204c7:	and    al,0xc0
  4204c9:	sub    esp,DWORD PTR [ebx-0x3abff28c]
  4204cf:	dec    eax
  4204d0:	jp     0x4204f5
  4204d2:	sub    eax,0x26f95619
  4204d7:	pusha  
  4204d8:	scas   eax,DWORD PTR es:[edi]
  4204d9:	out    dx,al
  4204da:	dec    ebp
  4204db:	or     BYTE PTR [edi],ah
  4204dd:	inc    ecx
  4204de:	cmp    al,0x21
  4204e0:	icebp  
  4204e1:	mov    WORD PTR [esp+edx*8-0x64],fs
  4204e5:	retf   0x4493
  4204e8:	mov    WORD PTR [edi],fs
  4204ea:	scas   eax,DWORD PTR es:[edi]
  4204eb:	lods   eax,DWORD PTR ds:[esi]
  4204ec:	out    0x21,eax
  4204ee:	add    eax,0x4bda178e
  4204f3:	mov    al,0xce
  4204f5:	mov    cl,0xd4
  4204f7:	push   eax
  4204f8:	jmp    0x7291ee45
  4204fd:	mov    ss,WORD PTR [edi+eiz*2]
  420500:	jge    0x420563
  420502:	fwait
  420503:	sti    
  420504:	jmp    0x123d:0x13147bbd
  42050b:	out    0x5b,al
  42050d:	mov    fs,WORD PTR [eax+0x42db896]
  420513:	ja     0x4204fc
  420515:	xchg   DWORD PTR [ebp+eiz*2-0x48],esp
  420519:	push   0xffffffd3
  42051b:	sbb    dh,BYTE PTR [edi+0x31]
  42051e:	pop    ecx
  42051f:	call   0x31b3:0xb6c4e2a3
  420526:	dec    ebx
  420527:	or     DWORD PTR [edx+0x1a2b2c49],ecx
  42052d:	or     bl,BYTE PTR [ebx+0x5c49ae73]
  420533:	fild   QWORD PTR ds:0x239becf4
  420539:	pop    ebx
  42053a:	dec    esp
  42053b:	out    0x54,al
  42053d:	jp     0x420500
  42053f:	mov    bl,0x83
  420541:	nop
  420542:	loop   0x420580
  420544:	cmc    
  420545:	mov    ah,dl
  420547:	mov    esp,0xff8ad556
  42054c:	imul   esp,DWORD PTR [ebx+0x15],0xb958d4af
  420553:	push   0x30
  420555:	inc    ebx
  420556:	dec    edi
  420557:	retf   0xa3a5
  42055a:	adc    ah,BYTE PTR [ebx-0x13]
  42055d:	mov    ah,0x4e
  42055f:	lahf   
  420560:	paddw  mm2,QWORD PTR [ebx]
  420563:	loopne 0x4204fc
  420565:	or     eax,0x24e9e5c7
  42056a:	push   0xffffff99
  42056c:	xchg   DWORD PTR [edx],ecx
  42056e:	stos   DWORD PTR es:[edi],eax
  42056f:	inc    ebx
  420570:	sbb    ebx,DWORD PTR [edx]
  420572:	aas    
  420573:	dec    esp
  420574:	loop   0x4205a5
  420576:	push   ds
  420577:	jecxz  0x42055d
  420579:	imul   esi,DWORD PTR [edx-0x7f],0xbcee10a2
  420580:	aad    0x86
  420582:	and    BYTE PTR [eax],ah
  420584:	repz lahf 
  420586:	mov    ebx,0x11c75744
  42058b:	iret   
  42058c:	jg     0x4205de
  42058e:	add    bh,BYTE PTR [eax]
  420590:	cmp    eax,0x114d0879
  420595:	or     eax,0x561b78d1
  42059a:	cli    
  42059b:	sbb    esi,DWORD PTR [ecx-0x1acbf8cf]
  4205a1:	fs ror ecx,0x9b
  4205a5:	retf   0x995d
  4205a8:	or     al,0xe9
  4205aa:	fs jge 0x42055d
  4205ad:	mov    gs,WORD PTR [ebx-0x18]
  4205b0:	mov    edx,es
  4205b2:	cld    
  4205b3:	lea    ebp,[esi+edi*1-0x7664fd97]
  4205ba:	push   ebp
  4205bb:	inc    ecx
  4205bc:	xchg   ebp,eax
  4205bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205be:	out    0x73,eax
  4205c0:	lea    edi,[edi-0x6]
  4205c3:	shr    DWORD PTR ds:0xb8b5a0e8,0x4e
  4205ca:	addr16 push 0x32
  4205cd:	lds    ebx,FWORD PTR [esi]
  4205cf:	mov    al,0x7b
  4205d1:	pop    ebp
  4205d2:	(bad)  
  4205d3:	lods   eax,DWORD PTR ds:[esi]
  4205d4:	sub    dh,BYTE PTR [ecx-0x52]
  4205d7:	pushf  
  4205d8:	mov    dh,BYTE PTR [edx+0x4ad6fd36]
  4205de:	inc    edi
  4205df:	stos   BYTE PTR es:[edi],al
  4205e0:	jl     0x4205ec
  4205e2:	addr16 out 0xd5,al
  4205e5:	mov    bl,0xcb
  4205e7:	(bad)  [edx]
  4205e9:	jo     0x420634
  4205eb:	sbb    ecx,DWORD PTR ds:0x5221482b
  4205f1:	mov    esi,0x5803b367
  4205f6:	pusha  
  4205f7:	adc    eax,0x50bf47f6
  4205fc:	(bad)  
  4205fd:	in     eax,dx
  4205fe:	and    ch,BYTE PTR [ebp+edi*2+0x4a]
  420602:	mov    DWORD PTR [edi],ebx
  420604:	clc    
  420605:	ja     0x420605
  420607:	lods   al,BYTE PTR ds:[esi]
  420608:	cmp    DWORD PTR [edx+0x4a],0xffffffdb
  42060c:	es rdpmc 
  42060f:	mov    ds:0x5c273cb8,al
  420614:	push   0xb22ab047
  420619:	call   0xeb8c:0x1cbc0c4e
  420620:	adc    BYTE PTR [ecx-0x5d],0x56
  420624:	in     eax,dx
  420625:	pop    edx
  420626:	sub    al,0x25
  420628:	dec    ebx
  420629:	pop    edx
  42062a:	add    BYTE PTR [edx],dh
  42062c:	ret    
  42062d:	das    
  42062e:	jbe    0x420651
  420630:	jo     0x420684
  420632:	xchg   esp,eax
  420633:	into   
  420634:	icebp  
  420635:	jno    0x42062f
  420637:	jnp    0x4205dc
  420639:	pop    edi
  42063a:	iret   
  42063b:	js     0x420658
  42063d:	pushf  
  42063e:	mov    edi,0x72225131
  420643:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  420645:	das    
  420646:	xor    BYTE PTR [ebx+ecx*2+0x4681e5f],ch
  42064d:	xor    ebp,DWORD PTR [ecx]
  42064f:	call   0x5f57:0x5a2ee71f
  420656:	mov    ecx,0xda643924
  42065c:	bound  esi,QWORD PTR [ebp+0x57]
  42065f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420660:	mov    edx,0xaf4ce2ef
  420665:	mov    cl,0x2b
  420667:	or     al,0x54
  420669:	sub    bh,ch
  42066b:	rcr    bh,cl
  42066d:	ins    BYTE PTR es:[edi],dx
  42066e:	push   edx
  42066f:	je     0x420662
  420671:	enter  0xfbd5,0x42
  420675:	loopne 0x4206d7
  420677:	test   al,0xff
  420679:	ss inc eax
  42067b:	mov    dl,ah
  42067d:	xchg   edi,eax
  42067e:	rcl    BYTE PTR ds:0xb5e971c5,cl
  420684:	adc    DWORD PTR [ecx],ebx
  420686:	ret    
  420687:	xor    DWORD PTR [edx+esi*4+0x55],edi
  42068b:	cmp    bl,bh
  42068d:	div    BYTE PTR [eax-0x58]
  420690:	lock mov ds:0xba065a17,al
  420696:	rcr    DWORD PTR [esp+eax*4],1
  420699:	(bad)  
  42069a:	pop    ds
  42069b:	ins    BYTE PTR es:[edi],dx
  42069c:	sbb    edx,DWORD PTR [eax+ecx*4]
  42069f:	rol    BYTE PTR [ecx+0x55],1
  4206a2:	adc    BYTE PTR [edi+0x79],ch
  4206a5:	push   ebp
  4206a6:	jno    0x420725
  4206a8:	out    0xac,eax
  4206aa:	in     eax,0x4f
  4206ac:	or     ebx,ecx
  4206ae:	imul   esp,edi,0x74
  4206b1:	jmp    0x420699
  4206b3:	adc    eax,0x450f125c
  4206b8:	push   esi
  4206b9:	dec    ecx
  4206ba:	dec    ah
  4206bc:	sub    ch,bh
  4206be:	mov    eax,ds:0x736520d7
  4206c3:	mov    DWORD PTR [edi-0x62],edx
  4206c6:	mov    ebx,0x9310afba
  4206cb:	out    0xd5,eax
  4206cd:	jg     0x4206ee
  4206cf:	mov    ah,0x1f
  4206d1:	xlat   BYTE PTR es:[ebx]
  4206d3:	jnp    0x420728
  4206d5:	inc    ecx
  4206d6:	shl    esi,cl
  4206d8:	pop    edi
  4206d9:	cmp    BYTE PTR [eax-0x240c66aa],dl
  4206df:	loop   0x42067a
  4206e1:	mov    bh,0xa4
  4206e3:	js     0x420760
  4206e5:	mov    DWORD PTR [esi+0x43],0x80b5019e
  4206ec:	mov    edx,0xc29cb333
  4206f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206f2:	xchg   esp,eax
  4206f3:	mov    eax,0x8176c7d2
  4206f8:	mov    esi,DWORD PTR [ebx-0x4a]
  4206fb:	lahf   
  4206fc:	xchg   esp,eax
  4206fd:	dec    esi
  4206fe:	and    eax,ecx
  420700:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420701:	imul   eax,DWORD PTR [ebx+0x40],0x23c3e7e9
  420708:	scas   al,BYTE PTR es:[edi]
  420709:	mov    bl,0xb
  42070b:	sbb    BYTE PTR [edi+0x7031c99f],bh
  420711:	dec    ebx
  420712:	mov    al,ds:0x32c5a0a5
  420717:	sahf   
  420718:	dec    ebp
  420719:	fistp  WORD PTR [edx]
  42071b:	xchg   edi,eax
  42071c:	pop    ds
  42071d:	pop    esi
  42071e:	push   esi
  42071f:	shl    edx,cl
  420721:	cmp    eax,0xb6db6eb9
  420726:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420727:	mov    eax,ds:0xe454a3f
  42072c:	push   ebp
  42072d:	mov    al,ds:0x86966c89
  420732:	cmp    cl,BYTE PTR [edi-0x3b]
  420735:	sub    al,0x21
  420737:	mov    edx,0x17059978
  42073c:	jge    0x420725
  42073e:	and    ch,BYTE PTR [eax]
  420740:	(bad)  
  420741:	imul   esp,DWORD PTR [edi+0x3d],0x1883bd81
  420748:	jge    0x4206fc
  42074a:	add    BYTE PTR [eax+0x0],bh
  42074d:	jge    0x4206d2
  42074f:	or     eax,0x8a187795
  420754:	test   al,0xc8
  420756:	jae    0x4206f9
  420758:	inc    ebp
  420759:	mov    ebx,0xf22e8ec7
  42075e:	sbb    ebp,esp
  420760:	imul   edx,DWORD PTR [ecx+0x54],0x6b
  420764:	fdiv   DWORD PTR [esi-0x49]
  420767:	fistp  WORD PTR [ebx]
  420769:	pop    edx
  42076a:	pop    ss
  42076b:	or     ecx,DWORD PTR [ebx+eax*1-0x1765232e]
  420772:	fmul   st(2),st
  420774:	sbb    edx,DWORD PTR [ecx]
  420776:	mov    edi,0x59d55857
  42077b:	pop    edx
  42077c:	stos   BYTE PTR es:[edi],al
  42077d:	nop
  42077e:	dec    ebx
  42077f:	test   al,0xb5
  420781:	cld    
  420782:	push   cs
  420783:	imul   esp,DWORD PTR [esi],0x44
  420786:	iret   
  420787:	int3   
  420788:	or     BYTE PTR [ebx-0xf326591],cl
  42078e:	push   edx
  42078f:	sti    
  420790:	push   edx
  420791:	sub    DWORD PTR fs:[ecx+0x60d06216],ebx
  420798:	mov    WORD PTR [eax],es
  42079a:	std    
  42079b:	adc    bl,BYTE PTR [edi-0x35846e5a]
  4207a1:	push   ecx
  4207a2:	inc    ecx
  4207a3:	test   BYTE PTR [eax-0x8],0xd3
  4207a7:	adc    DWORD PTR [edx-0x25],ebx
  4207aa:	mov    ds:0x1ccb9d08,al
  4207af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207b0:	and    ah,bh
  4207b2:	adc    bl,BYTE PTR [ebx+0x5a]
  4207b5:	paddusw mm7,mm2
  4207b8:	fsub   DWORD PTR [eax-0x66]
  4207bb:	popa   
  4207bc:	sub    DWORD PTR [edi],0x175ed3f9
  4207c2:	(bad)  
  4207c3:	sbb    eax,0xad1f0af
  4207c8:	push   esp
  4207c9:	mov    eax,0xe3c42509
  4207ce:	jmp    0x21e4dbe9
  4207d3:	fst    QWORD PTR [ebp-0x63e67e63]
  4207d9:	loope  0x420763
  4207db:	(bad)  
  4207dc:	rcl    DWORD PTR [ebx],1
  4207de:	test   eax,0x7fa49915
  4207e3:	adc    DWORD PTR [ebx-0x1cf4a4a4],esp
  4207e9:	pop    ss
  4207ea:	cmp    bl,BYTE PTR [ebx]
  4207ec:	aas    
  4207ed:	xchg   esi,eax
  4207ee:	adc    esi,DWORD PTR [ebp-0x6d7d39f]
  4207f4:	popf   
  4207f5:	mov    esp,0x974c34f7
  4207fa:	pushf  
  4207fb:	nop
  4207fc:	fisttp WORD PTR [ecx-0x471a2850]
  420802:	inc    ecx
  420803:	arpl   WORD PTR gs:[edx+edi*2-0x78],di
  420808:	cmc    
  420809:	loopne 0x4207e0
  42080b:	fstp   TBYTE PTR [edi+0x3f]
  42080e:	sbb    al,0x67
  420810:	fwait
  420811:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420812:	cmp    DWORD PTR [ecx],ebx
  420814:	out    dx,eax
  420815:	ror    al,1
  420817:	imul   ebp,edi,0x348a094f
  42081d:	add    ebp,ebp
  42081f:	push   eax
  420820:	mov    bl,BYTE PTR [edi+0x2c]
  420823:	inc    edx
  420824:	sub    eax,0x90b3542f
  420829:	sub    BYTE PTR [ebx-0x7e],dl
  42082c:	in     al,dx
  42082d:	jecxz  0x420803
  42082f:	push   ebp
  420830:	(bad)  
  420831:	mov    ebp,0xe805e020
  420836:	jb     0x420834
  420838:	pop    edi
  42083a:	jl     0x420895
  42083c:	or     eax,0xb68347b
  420841:	mov    eax,ds:0xe8470aac
  420846:	mov    dl,0x39
  420848:	adc    bl,BYTE PTR [eax]
  42084a:	mov    edx,0x6b5da09f
  42084f:	add    dh,BYTE PTR [edi]
  420851:	lds    esp,FWORD PTR [edx]
  420853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420854:	and    bh,BYTE PTR [ebx]
  420856:	jns    0x420894
  420858:	pop    esi
  420859:	outs   dx,BYTE PTR ds:[esi]
  42085a:	stos   DWORD PTR es:[edi],eax
  42085b:	pop    ebp
  42085c:	aas    
  42085d:	cmp    esp,esp
  42085f:	fidivr WORD PTR [esi+0x20]
  420862:	sar    BYTE PTR [ecx-0x46],0xe7
  420866:	ror    BYTE PTR [esp+ebp*8],cl
  420869:	inc    ebp
  42086a:	fdiv   DWORD PTR [ebx+eax*4+0x21a340e4]
  420871:	dec    edx
  420872:	test   dl,bl
  420874:	imul   DWORD PTR [ebx]
  420876:	pusha  
  420877:	mov    dh,0x57
  420879:	sub    BYTE PTR [esi+0x362c23b5],ch
  42087f:	dec    edx
  420880:	sub    bh,dl
  420882:	sub    BYTE PTR ds:0x6f2d9f9b,dh
  420888:	xor    eax,0x3243dbba
  42088d:	jg     0x42082d
  42088f:	mov    bl,0xdf
  420891:	mov    ds:0x251e46f5,eax
  420896:	fadd   QWORD PTR [esi]
  420898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420899:	data16 mov al,0x92
  42089c:	test   eax,0x92887424
  4208a1:	stc    
  4208a2:	call   0x7eb5:0x51d93436
  4208a9:	jmp    0x8cb9:0x73e601f9
  4208b0:	cmp    al,0x35
  4208b2:	sub    al,0xb4
  4208b4:	mov    cl,0x8e
  4208b6:	adc    BYTE PTR [esi],al
  4208b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208b9:	cdq    
  4208ba:	pop    edx
  4208bb:	loopne 0x420928
  4208bd:	jae    0x420882
  4208bf:	dec    ebx
  4208c0:	popf   
  4208c1:	mov    ebx,0x7c6e4d23
  4208c6:	fld    TBYTE PTR [edx]
  4208c8:	mov    ebx,0xe4a8236d
  4208cd:	push   ebp
  4208cf:	mov    esp,0xb34a2bf1
  4208d4:	sub    cl,dl
  4208d6:	dec    ebx
  4208d7:	push   esi
  4208d8:	call   0xd8e72c3a
  4208dd:	add    bh,bl
  4208df:	mov    ah,0x2a
  4208e1:	adc    bl,BYTE PTR [edi+0x321c6a10]
  4208e7:	test   BYTE PTR [ecx],ch
  4208e9:	dec    ebp
  4208ea:	test   edx,ecx
  4208ec:	pop    esp
  4208ed:	jo     0x420948
  4208ef:	mov    ds:0xa51eb29a,al
  4208f4:	loop   0x4208e6
  4208f6:	aaa    
  4208f7:	push   esp
  4208f8:	lahf   
  4208f9:	jge    0x42089f
  4208fb:	mov    eax,ss:0xb86d1383
  420901:	rcl    BYTE PTR [eax+0x4866870c],cl
  420907:	jnp    0x420971
  420909:	dec    esi
  42090a:	and    dh,dl
  42090c:	aam    0x6e
  42090e:	daa    
  42090f:	imul   edx,DWORD PTR [edx],0x63
  420912:	xor    eax,edi
  420914:	push   edx
  420915:	popa   
  420916:	scas   eax,DWORD PTR es:[edi]
  420917:	stos   DWORD PTR es:[edi],eax
  420918:	jnp    0x42097b
  42091a:	dec    ebx
  42091b:	mov    eax,0x6d196630
  420920:	ins    DWORD PTR es:[edi],dx
  420921:	mov    ebx,0x3367846a
  420926:	jno    0x420936
  420928:	ins    DWORD PTR es:[edi],dx
  420929:	pop    ebp
  42092a:	mov    ch,BYTE PTR [ecx+0x4b3f951d]
  420930:	mov    ds:0xff6cea8e,al
  420935:	cli    
  420936:	mov    BYTE PTR [eax+0x6d158bd0],dl
  42093c:	mov    ebp,DWORD PTR cs:[ecx+0x24]
  420940:	lea    edx,[ebx-0x22777965]
  420946:	jne    0x420917
  420948:	ins    BYTE PTR es:[edi],dx
  420949:	add    BYTE PTR ds:0x26291e,al
  42094f:	arpl   WORD PTR [ecx],bx
  420951:	cmp    ebp,edx
  420953:	or     eax,0xdb89be1d
  420958:	add    al,0x5
  42095a:	push   esp
  42095b:	mov    esp,0x2bb7c1db
  420960:	dec    esi
  420961:	les    edx,FWORD PTR [ecx]
  420963:	sar    esi,0x11
  420966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420967:	adc    DWORD PTR [edx+eax*4+0x6a],0x19dec13e
  42096f:	mov    dh,0x7c
  420971:	mov    edx,0x5057e9d0
  420976:	xchg   ebp,eax
  420977:	dec    esp
  420978:	popa   
  420979:	imul   eax,eax,0xd1db9702
  42097f:	dec    ebx
  420980:	mov    BYTE PTR [edi],ch
  420982:	nop
  420983:	rcl    DWORD PTR [edx],1
  420985:	pop    ecx
  420986:	dec    ecx
  420987:	mov    bh,cl
  420989:	xchg   edx,eax
  42098a:	cmp    al,0x91
  42098c:	test   DWORD PTR [ebp+0x66],edx
  42098f:	adc    BYTE PTR [edi],0xfd
  420992:	mov    bh,0x4a
  420994:	daa    
  420995:	icebp  
  420996:	cmp    bl,cl
  420998:	mov    edi,0x472970ae
  42099d:	mov    ebx,0x1d76dbdd
  4209a2:	jo     0x4209c7
  4209a4:	fld    st(0)
  4209a6:	repnz push ds
  4209a8:	jle    0x4209ec
  4209aa:	add    BYTE PTR [eax],0xff
  4209ad:	pop    esp
  4209ae:	mov    ebp,0xa5fdf56d
  4209b3:	outs   dx,DWORD PTR ds:[esi]
  4209b4:	(bad)  
  4209b6:	pop    ds
  4209b7:	push   edi
  4209b8:	xchg   esi,eax
  4209b9:	push   edi
  4209ba:	ret    
  4209bb:	mov    ch,BYTE PTR [ebp-0x1d104a41]
  4209c1:	sbb    BYTE PTR [ebp+0x5b841fc7],al
  4209c7:	call   0xa572f8f1
  4209cc:	dec    ebx
  4209cd:	imul   edx,DWORD PTR ds:0xdc40833c,0xf8486f18
  4209d7:	xor    ecx,DWORD PTR [edi+0xa]
  4209da:	ds iret 
  4209dc:	jge    0x420a1d
  4209de:	int    0x71
  4209e0:	mov    ecx,0x29ea79b5
  4209e5:	push   eax
  4209e6:	mov    BYTE PTR [edi],dh
  4209e8:	out    dx,eax
  4209e9:	mov    esi,0xa6360ff5
  4209ee:	inc    esi
  4209ef:	push   ss
  4209f0:	cli    
  4209f1:	push   eax
  4209f2:	daa    
  4209f3:	ins    BYTE PTR es:[edi],dx
  4209f4:	push   eax
  4209f5:	cmc    
  4209f6:	ja     0x4209bd
  4209f8:	push   ds
  4209f9:	push   ebp
  4209fa:	mov    ecx,DWORD PTR [ebx]
  4209fc:	or     eax,DWORD PTR [eax+0x7a]
  4209ff:	bound  ecx,QWORD PTR [edx+edx*4-0x714b12ae]
  420a06:	inc    ebp
  420a07:	test   al,0x6b
  420a09:	inc    eax
  420a0a:	ret    0xfe63
  420a0d:	ret    
  420a0e:	pusha  
  420a0f:	inc    ebp
  420a10:	cmp    DWORD PTR [ebp+0x7d],0x2e
  420a14:	cwde   
  420a15:	mul    BYTE PTR [ecx+0x69c95832]
  420a1b:	enter  0x9d88,0x59
  420a1f:	fdiv   QWORD PTR [edi-0x5e8bab51]
  420a25:	cli    
  420a26:	les    eax,FWORD PTR [ebp-0x7c3c9f9a]
  420a2c:	or     cl,BYTE PTR [eax-0x75]
  420a2f:	pop    esp
  420a30:	and    eax,0x542944d5
  420a35:	adc    eax,0x3e46c443
  420a3a:	jge    0x420aa7
  420a3c:	xor    ebx,0xffffffb3
  420a3f:	pop    es
  420a40:	mov    dh,al
  420a42:	sbb    DWORD PTR [eax],0x5f0e00db
  420a48:	test   BYTE PTR ds:0x235ccc04,0xdb
  420a4f:	adc    eax,0x48d0683f
  420a54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a55:	arpl   WORD PTR [ecx-0x15e81618],bx
  420a5b:	aas    
  420a5c:	mov    al,0x48
  420a5e:	in     al,0x5d
  420a60:	lods   al,BYTE PTR ds:[esi]
  420a61:	xchg   edx,eax
  420a62:	or     BYTE PTR [ecx-0xb],dh
  420a65:	je     0x420ae5
  420a67:	pop    ds
  420a68:	mov    BYTE PTR [edi-0x7e],dl
  420a6b:	jl     0x420ab0
  420a6d:	ss push esi
  420a6f:	mov    dh,0xaf
  420a71:	adc    al,0x9c
  420a73:	pop    edi
  420a74:	ins    DWORD PTR es:[edi],dx
  420a75:	mov    dh,0xbf
  420a77:	call   0x188a9f39
  420a7c:	mov    bh,0xab
  420a7e:	ss pop edx
  420a80:	int3   
  420a81:	xor    edx,DWORD PTR [edx+0x37e9c054]
  420a87:	cmp    edx,DWORD PTR [ebp-0x1c68ca16]
  420a8d:	(bad)  
  420a8e:	(bad)  
  420a8f:	mov    ds:0x3d20e5ae,al
  420a94:	pop    ebp
  420a95:	jmp    0x14e14045
  420a9a:	outs   dx,DWORD PTR ds:[esi]
  420a9b:	inc    eax
  420a9c:	and    al,BYTE PTR [edi]
  420a9e:	dec    esp
  420a9f:	pop    esp
  420aa0:	inc    ebx
  420aa1:	xchg   esi,eax
  420aa2:	push   eax
  420aa3:	xor    BYTE PTR [esi+esi*1+0x28fdd8ea],al
  420aaa:	adc    DWORD PTR [edx-0x6a99b5cb],0x2ae7787b
  420ab4:	push   ss
  420ab5:	and    cl,bh
  420ab7:	mov    bh,0xd1
  420ab9:	sub    DWORD PTR [edx],0x65
  420abc:	mov    ch,0x24
  420abe:	sahf   
  420abf:	out    dx,al
  420ac0:	out    dx,al
  420ac1:	push   ebp
  420ac2:	mov    DWORD PTR [edx+edx*8-0x5ca311c],esi
  420ac9:	fnstsw WORD PTR [eax]
  420acb:	(bad)  
  420acc:	dec    BYTE PTR [esi]
  420ace:	aaa    
  420acf:	cs or  bh,ah
  420ad2:	int3   
  420ad3:	aad    0x1f
  420ad5:	rcr    BYTE PTR [ecx+0x56],0xf1
  420ad9:	aas    
  420ada:	mov    eax,ds:0xc1efeeea
  420adf:	pop    edx
  420ae0:	push   0xffffffce
  420ae2:	jnp    0x420ab3
  420ae4:	xchg   edi,eax
  420ae5:	sbb    bl,BYTE PTR [edx*1-0x247a8281]
  420aec:	std    
  420aed:	push   ecx
  420aee:	nop
  420aef:	and    eax,0x1fe7dc82
  420af4:	mov    al,0x98
  420af6:	es push ss
  420af8:	sub    ch,BYTE PTR [ecx]
  420afa:	popa   
  420afb:	int    0xc
  420afd:	sub    dh,0xd0
  420b00:	mov    ah,BYTE PTR [ecx+0x48]
  420b03:	pusha  
  420b04:	scas   al,BYTE PTR es:[edi]
  420b05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b06:	out    dx,eax
  420b07:	xor    ecx,DWORD PTR [ebx+eax*1]
  420b0a:	pop    es
  420b0b:	push   ebp
  420b0c:	(bad)  
  420b0d:	mov    bl,0x59
  420b0f:	cmp    esi,ebx
  420b11:	das    
  420b12:	mov    bl,0xb5
  420b14:	iret   
  420b15:	xchg   esi,eax
  420b16:	push   es
  420b17:	(bad)  
  420b18:	push   ecx
  420b19:	cs or  eax,0x4292e097
  420b1f:	imul   eax,DWORD PTR ds:0x5395d055,0xade8aae3
  420b29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b2a:	test   eax,0x45331ccc
  420b2f:	js     0x420b01
  420b31:	lods   eax,DWORD PTR ds:[esi]
  420b32:	mov    eax,ebx
  420b34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b35:	ror    DWORD PTR [ebx+0x5b0722e1],0x5a
  420b3c:	dec    esp
  420b3d:	xor    al,0x5e
  420b3f:	bound  edx,QWORD PTR [ecx+0x54]
  420b42:	aas    
  420b43:	sahf   
  420b44:	adc    DWORD PTR [edx+esi*2],ecx
  420b47:	sbb    eax,0x7d352b41
  420b4c:	sbb    al,0x9
  420b4e:	xor    esp,ebp
  420b50:	repnz sar BYTE PTR [edi+0x7a],cl
  420b54:	arpl   WORD PTR [eax-0x4bab316c],dx
  420b5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b5b:	aad    0x5f
  420b5d:	adc    eax,0xf55f2d4e
  420b62:	or     al,ah
  420b64:	push   edi
  420b65:	cmp    ebx,DWORD PTR [ecx+edi*8+0x72]
  420b69:	fs std 
  420b6b:	pop    ds
  420b6c:	jb     0x420b1b
  420b6e:	jb     0x420b4e
  420b70:	fsubr  DWORD PTR [esp+ebx*1+0x742e989]
  420b77:	cmp    DWORD PTR [ebp-0x6f],edx
  420b7a:	xlat   BYTE PTR ds:[ebx]
  420b7b:	mov    BYTE PTR [esi+0x2167bf02],0x95
  420b82:	dec    BYTE PTR [ecx-0x72]
  420b85:	or     DWORD PTR [edi-0x4d],eax
  420b88:	lahf   
  420b89:	mov    dl,0xd5
  420b8b:	jp     0x420b7e
  420b8d:	data16 js 0x420b36
  420b90:	cmp    esi,DWORD PTR [eiz*1-0x26d99cf0]
  420b97:	add    eax,0x911ac7a4
  420b9c:	sub    al,0x1f
  420b9e:	adc    edi,DWORD PTR [eax+0x60ef3694]
  420ba4:	fst    DWORD PTR [eax+0x52]
  420ba7:	xchg   esp,eax
  420ba8:	clc    
  420ba9:	lahf   
  420baa:	imul   edx,DWORD PTR [esp+ebx*2-0x20],0x197590c0
  420bb2:	mov    DWORD PTR [ecx+0x1f],ebp
  420bb5:	mov    ch,0x42
  420bb7:	inc    ebp
  420bb9:	in     eax,0xf1
  420bbb:	mov    al,ds:0xa38480f5
  420bc0:	cli    
  420bc1:	mov    ebx,0x214f6da8
  420bc6:	add    eax,0x7a1c4283
  420bcb:	push   esi
  420bcc:	push   cs
  420bcd:	test   DWORD PTR es:0x42aa2a1c,esp
  420bd4:	or     ch,BYTE PTR [ebx]
  420bd6:	enter  0x9b11,0x7f
  420bda:	add    cl,BYTE PTR [edi+0x8]
  420bdd:	sbb    al,0xd9
  420bdf:	add    al,BYTE PTR [edi]
  420be1:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  420be3:	mov    cl,0x96
  420be5:	pop    ecx
  420be6:	jb     0x420b7f
  420be8:	mov    ebp,0xb5610b33
  420bed:	ins    BYTE PTR es:[edi],dx
  420bee:	loopne 0x420c05
  420bf0:	mov    esp,esp
  420bf2:	fld    st(3)
  420bf4:	scas   eax,DWORD PTR es:[edi]
  420bf5:	(bad)  
  420bf6:	pop    esp
  420bf7:	push   ebp
  420bf8:	cmp    esp,DWORD PTR [ecx]
  420bfa:	in     eax,0xda
  420bfc:	dec    DWORD PTR [ebx+0x68]
  420bff:	jp     0x420bd0
  420c01:	fnstsw WORD PTR [ebx]
  420c03:	hlt    
  420c04:	cmp    edi,DWORD PTR [ebp+edi*8+0x4d3e8710]
  420c0b:	stc    
  420c0c:	lods   eax,DWORD PTR ds:[esi]
  420c0d:	mov    dh,0xa6
  420c0f:	jae    0x420bc7
  420c11:	lea    esi,[edi+0xb16ee90]
  420c17:	out    0x47,eax
  420c19:	pop    eax
  420c1a:	shl    DWORD PTR [ebx+0x2a1c5e6e],1
  420c20:	ins    DWORD PTR es:[edi],dx
  420c21:	js     0x420bf3
  420c23:	add    al,0xb4
  420c25:	ds jle 0x420bfe
  420c28:	test   bl,dh
  420c2a:	xchg   esi,eax
  420c2b:	(bad)  
  420c2c:	cmc    
  420c2d:	ja     0x420bce
  420c2f:	bound  edx,QWORD PTR [edx]
  420c31:	test   BYTE PTR [ecx-0x784b05ef],dh
  420c37:	shr    dl,1
  420c39:	add    DWORD PTR [edx],edx
  420c3b:	cmp    BYTE PTR [ecx+0x6f31dbc9],dl
  420c41:	xlat   BYTE PTR ds:[ebx]
  420c42:	ret    
  420c43:	sub    edx,ebx
  420c45:	sub    DWORD PTR [ebp+0x78d1f333],eax
  420c4b:	rol    BYTE PTR [ecx-0x38],0xa4
  420c4f:	sbb    DWORD PTR [ecx+0x31],edi
  420c52:	cmp    BYTE PTR [ebp-0x34677e76],ah
  420c58:	adc    ch,BYTE PTR [edx-0x24]
  420c5b:	add    DWORD PTR [ebx+0x77def2a8],0xffffffd8
  420c62:	or     edi,eax
  420c64:	ja     0x420c22
  420c66:	pusha  
  420c67:	repz adc al,0xf7
  420c6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c6b:	(bad)  
  420c6c:	mov    ds:0x623f6ced,al
  420c71:	retf   
  420c72:	jp     0x420cec
  420c74:	pop    ecx
  420c75:	pop    ss
  420c76:	jnp    0x420cf1
  420c78:	xor    dh,BYTE PTR [ebp+0x6f80352]
  420c7e:	add    ah,BYTE PTR [edi]
  420c80:	sbb    al,0x31
  420c82:	js     0x420c38
  420c84:	mov    bh,0x2
  420c86:	sub    eax,0xada654aa
  420c8b:	jl     0x420cd1
  420c8d:	leave  
  420c8e:	mov    dl,0xea
  420c90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c91:	add    ebp,edi
  420c93:	push   ecx
  420c94:	std    
  420c95:	stos   BYTE PTR es:[edi],al
  420c96:	add    eax,0xc7637610
  420c9b:	cli    
  420c9c:	dec    esp
  420c9d:	sbb    ebp,DWORD PTR [edx+0x60]
  420ca0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ca1:	mov    bh,0xa6
  420ca3:	fcmovnb st,st(6)
  420ca5:	inc    esp
  420ca6:	xlat   BYTE PTR ds:[ebx]
  420ca7:	jbe    0x420ce1
  420ca9:	jecxz  0x420c97
  420cab:	xchg   esp,eax
  420cac:	ficomp DWORD PTR [esi+edx*1-0x7c]
  420cb0:	retf   
  420cb1:	sub    eax,0x9d8c4ae6
  420cb6:	and    esp,DWORD PTR gs:[ecx-0x6]
  420cba:	dec    esp
  420cbb:	add    DWORD PTR [ebp-0x49],edx
  420cbe:	lods   al,BYTE PTR ds:[esi]
  420cbf:	aas    
  420cc0:	sub    eax,0xd97fd60b
  420cc5:	mov    esp,0x3e560e37
  420cca:	enter  0x8e52,0x14
  420cce:	shl    BYTE PTR [edi+0xe127e78],1
  420cd4:	std    
  420cd5:	jne    0x420cd0
  420cd7:	pop    esi
  420cd8:	pop    edi
  420cd9:	xchg   BYTE PTR [ebx+0x41],bh
  420cdc:	xchg   edx,eax
  420cdd:	sbb    DWORD PTR [ebx+edi*1-0x5cf83ba],0x8d46a7b7
  420ce8:	mov    ecx,ebx
  420cea:	pushf  
  420ceb:	jnp    0x420ca7
  420ced:	or     esi,esi
  420cef:	lea    edi,[ebp+0x5b]
  420cf2:	push   esp
  420cf3:	cmc    
  420cf4:	mov    ch,0x1b
  420cf6:	pop    es
  420cf7:	push   edi
  420cf8:	fild   QWORD PTR [esi+0x33]
  420cfb:	arpl   dx,sp
  420cfd:	sbb    al,0xb3
  420cff:	imul   edx,esi,0x346f577a
  420d05:	clc    
  420d06:	ficom  DWORD PTR [ecx]
  420d08:	cs mov edx,0x5a544b3a
  420d0e:	cwde   
  420d0f:	xor    al,0x2a
  420d11:	mov    esp,0x99c685de
  420d16:	jle    0x420ce4
  420d18:	jmp    0x240d:0xfee1bf1d
  420d1f:	or     esp,DWORD PTR ds:0x28f344c1
  420d25:	fild   DWORD PTR [eax]
  420d27:	dec    esi
  420d28:	repz retf 
  420d2a:	pop    ebx
  420d2b:	mov    edx,0x5ed52873
  420d30:	ins    DWORD PTR es:[edi],dx
  420d31:	cli    
  420d32:	add    al,BYTE PTR [ebp+0x69]
  420d35:	pop    es
  420d36:	add    esp,ebp
  420d38:	mov    eax,ds:0xa25c291e
  420d3d:	push   edi
  420d3e:	pop    ebx
  420d3f:	fbstp  TBYTE PTR [ecx+0x45]
  420d42:	sub    DWORD PTR [edx+0xaecebf],edx
  420d48:	mov    ds:0xb82f13b6,eax
  420d4d:	sbb    dh,BYTE PTR [ecx-0x4fa96a87]
  420d53:	mov    eax,DWORD PTR [ecx+0x1d]
  420d56:	or     cl,BYTE PTR [ecx]
  420d58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d59:	adc    ebp,DWORD PTR [ebp-0x53]
  420d5c:	mov    bl,0x68
  420d5e:	lds    ebx,FWORD PTR [esi-0x5d]
  420d61:	sub    edx,DWORD PTR [ecx]
  420d63:	sahf   
  420d64:	shl    BYTE PTR [edi-0x67],cl
  420d67:	cs add eax,0xb90b625e
  420d6d:	dec    esi
  420d6e:	mov    dh,0xd8
  420d70:	jbe    0x420d15
  420d72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d73:	inc    edi
  420d74:	mov    cl,0xd6
  420d76:	test   DWORD PTR [edi-0x771378],eax
  420d7c:	jns    0x420d9d
  420d7e:	loop   0x420d47
  420d80:	sub    BYTE PTR [eax+0x1125d363],0x6e
  420d87:	mov    WORD PTR [ecx],gs
  420d89:	cmp    esp,DWORD PTR [esi-0x31]
  420d8c:	adc    eax,0x5be64df
  420d91:	repz adc DWORD PTR [ebx+0x6e],esi
  420d95:	out    0xee,eax
  420d97:	dec    esp
  420d98:	retf   
  420d99:	fucomi st,st(2)
  420d9b:	dec    eax
  420d9c:	xchg   ebx,eax
  420d9d:	add    eax,0x3d193f76
  420da2:	pop    esp
  420da3:	into   
  420da4:	sbb    eax,eax
  420da6:	jno    0x420da0
  420da8:	repnz stos BYTE PTR es:[edi],al
  420daa:	mov    edx,0x3cb21856
  420daf:	jmp    0xca6c:0x3439d08f
  420db6:	push   esi
  420db7:	pop    edx
  420db8:	pop    ebp
  420db9:	cmp    edi,ebx
  420dbb:	or     esi,edx
  420dbd:	cmc    
  420dbe:	mov    eax,ds:0x4496179e
  420dc3:	inc    esi
  420dc4:	leave  
  420dc5:	arpl   WORD PTR [eax-0x2b],cx
  420dc8:	in     al,dx
  420dc9:	jmp    0xc4557396
  420dce:	lds    ebx,FWORD PTR [edx]
  420dd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420dd1:	dec    eax
  420dd2:	in     al,0x36
  420dd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420dd5:	psubsb mm0,QWORD PTR [ebx-0x51]
  420dd9:	pop    esp
  420dda:	fcmovnb st,st(1)
  420ddc:	mov    ah,0x5f
  420dde:	inc    ebx
  420ddf:	cs pop ebp
  420de1:	inc    ebx
  420de2:	xor    BYTE PTR [edx-0x5b],ah
  420de5:	rol    DWORD PTR [ecx],0x3f
  420de8:	fbstp  TBYTE PTR [esp+eax*4+0x74]
  420dec:	into   
  420ded:	jp     0x420e38
  420def:	in     al,dx
  420df0:	pop    ecx
  420df1:	jmp    0x26ed:0xbd7e1204
  420df8:	push   edi
  420df9:	mov    cl,0xc0
  420dfb:	test   eax,0x38af1519
  420e00:	iret   
  420e01:	data16 and al,0xad
  420e04:	in     al,0xbc
  420e06:	mov    bh,0xf2
  420e08:	stc    
  420e09:	mov    ebp,0xf2a0de88
  420e0e:	xor    al,al
  420e10:	adc    eax,0xe4272f69
  420e15:	mov    al,0x9f
  420e17:	push   es
  420e18:	mov    dh,0xd7
  420e1a:	adc    ebx,0x11
  420e1d:	int    0x8
  420e1f:	mov    ds:0xa62fc520,al
  420e24:	cmc    
  420e25:	cdq    
  420e26:	add    dl,BYTE PTR [edi+0x18]
  420e29:	mov    bl,0xea
  420e2b:	scas   eax,DWORD PTR es:[edi]
  420e2c:	out    dx,al
  420e2d:	push   cs
  420e2e:	and    al,0x59
  420e30:	div    DWORD PTR [esi+0x40]
  420e33:	les    esi,FWORD PTR [ecx-0x74b2890]
  420e39:	cmp    al,0x21
  420e3b:	jo     0x420e58
  420e3d:	mov    dl,0x95
  420e3f:	fist   WORD PTR [ebx]
  420e41:	fcmovnbe st,st(0)
  420e43:	mov    edx,0x8049c98d
  420e48:	push   esp
  420e49:	push   es
  420e4a:	pop    edx
  420e4b:	mov    al,BYTE PTR [eax-0x4baee354]
  420e51:	push   esi
  420e52:	daa    
  420e53:	fcom   QWORD PTR [edx+0x46c89283]
  420e59:	add    eax,DWORD PTR cs:[ebx+0x5710ee35]
  420e60:	adc    BYTE PTR [ebp+0x20d43568],0x96
  420e67:	push   edi
  420e68:	cmc    
  420e69:	and    cl,BYTE PTR ds:0x4b67ff12
  420e6f:	sbb    BYTE PTR [eax+0x33],dh
  420e72:	push   ebx
  420e73:	jo     0x420ebb
  420e75:	icebp  
  420e76:	(bad)  [eax+0x52]
  420e79:	es mov ebx,0xb3b37811
  420e7f:	(bad)  
  420e80:	lock xchg ebx,eax
  420e82:	mov    ecx,0x2e1751b9
  420e87:	sbb    DWORD PTR [eax-0x77],ebx
  420e8a:	sub    eax,0x9d75c094
  420e8f:	push   ds
  420e90:	xchg   edx,eax
  420e91:	pop    es
  420e92:	or     eax,0x701dc0c9
  420e97:	push   0xffffffd4
  420e99:	test   dl,bl
  420e9b:	mov    edi,0xeb371423
  420ea0:	shr    BYTE PTR [eax+0x21],0x7e
  420ea4:	xchg   eax,esp
  420ea6:	scas   eax,DWORD PTR es:[edi]
  420ea7:	adc    BYTE PTR [ebp-0x2a],cl
  420eaa:	in     eax,dx
  420eab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420eac:	cmp    al,0x4a
  420eae:	das    
  420eaf:	pusha  
  420eb0:	or     eax,0xa2757fb2
  420eb5:	pop    es
  420eb6:	aam    0x79
  420eb8:	and    ah,BYTE PTR [eax-0x69]
  420ebb:	pop    eax
  420ebc:	pop    ecx
  420ebd:	in     al,0x2a
  420ebf:	jmp    0x420f11
  420ec1:	xchg   DWORD PTR [esi],eax
  420ec3:	jge    0x420eaa
  420ec5:	aaa    
  420ec6:	adc    ch,dh
  420ec8:	aam    0x77
  420eca:	xchg   ebx,eax
  420ecb:	xchg   ebx,eax
  420ecc:	mov    ebp,0x25feb732
  420ed1:	add    edi,DWORD PTR [edx+0x4]
  420ed4:	pop    edi
  420ed5:	sbb    al,0x88
  420ed7:	pop    ds
  420ed8:	mov    al,0x1b
  420eda:	sbb    bh,BYTE PTR [esi+0x5eaba4e4]
  420ee0:	nop
  420ee1:	adc    DWORD PTR [eax-0x51],ebx
  420ee4:	ffree  st(6)
  420ee6:	fs test eax,0xb54e50f2
  420eec:	stc    
  420eed:	sub    bl,dh
  420eef:	push   0xe
  420ef1:	push   edi
  420ef2:	dec    esi
  420ef3:	in     eax,0xb0
  420ef5:	dec    ebx
  420ef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ef7:	inc    edx
  420ef8:	and    BYTE PTR [ecx-0x4],dl
  420efb:	imul   eax,DWORD PTR [edi+edx*4+0x27],0x1bf109c5
  420f03:	pushf  
  420f04:	popf   
  420f05:	test   al,0x9e
  420f07:	(bad)  
  420f08:	(bad)  
  420f09:	out    dx,eax
  420f0a:	(bad)  
  420f0b:	cmp    dl,BYTE PTR [edx]
  420f0d:	xor    eax,0x260a0f44
  420f12:	int3   
  420f13:	scas   al,BYTE PTR es:[edi]
  420f14:	and    al,0xd
  420f16:	mov    bl,0x94
  420f18:	pop    eax
  420f19:	stos   BYTE PTR es:[edi],al
  420f1a:	jnp    0x420f32
  420f1c:	pop    esp
  420f1d:	pop    ebx
  420f1e:	stos   BYTE PTR es:[edi],al
  420f1f:	neg    BYTE PTR [ebx]
  420f21:	ja     0x420fa0
  420f23:	dec    eax
  420f24:	scas   eax,DWORD PTR es:[edi]
  420f25:	scas   eax,DWORD PTR es:[edi]
  420f26:	inc    edx
  420f27:	maskmovq mm1,(bad)
  420f28:	test   DWORD PTR [ebx+0x2b251912],0x503ef9f8
  420f32:	cld    
  420f33:	inc    edx
  420f34:	jbe    0x420f5f
  420f36:	jbe    0x420eea
  420f38:	jae    0x420fa9
  420f3a:	ret    
  420f3b:	mov    cl,0x72
  420f3d:	leave  
  420f3e:	cld    
  420f3f:	adc    eax,DWORD PTR [eax-0xc1bd5e1]
  420f45:	mov    dh,0xe0
  420f47:	test   eax,0xc8fa998d
  420f4c:	mov    esp,0xe8d1f84b
  420f51:	pop    esp
  420f52:	jp     0x420ee1
  420f54:	imul   ecx,eax,0x1f08bded
  420f5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f5b:	fiadd  DWORD PTR [ebp+0x53c18d81]
  420f61:	out    dx,al
  420f62:	jl     0x420ef4
  420f64:	sbb    al,0x81
  420f66:	xchg   edx,eax
  420f67:	stos   BYTE PTR es:[edi],al
  420f68:	enter  0x4b99,0xa4
  420f6c:	nop
  420f6d:	jns    0x420f96
  420f6f:	retf   0x614e
  420f72:	dec    edi
  420f73:	bound  esi,QWORD PTR ds:0x35410362
  420f79:	pusha  
  420f7a:	add    DWORD PTR es:[edi-0xd],ebp
  420f7e:	arpl   si,sp
  420f80:	int3   
  420f81:	jae    0x420f3c
  420f83:	mov    ds:0xd623f8c8,eax
  420f88:	test   eax,edi
  420f8a:	sbb    BYTE PTR [esi-0x23],dh
  420f8d:	sub    al,0xe0
  420f8f:	iret   
  420f90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f91:	jp     0x420f43
  420f93:	lds    ebx,FWORD PTR [edx-0x59a3a952]
  420f99:	add    ch,BYTE PTR [edi]
  420f9b:	pop    ecx
  420f9c:	test   BYTE PTR [ebp+0x24],ch
  420f9f:	scas   eax,DWORD PTR es:[edi]
  420fa0:	int    0x54
  420fa2:	mov    edi,0x5050089
  420fa7:	mov    al,0xaa
  420fa9:	lock loopne 0x420ff7
  420fac:	outs   dx,DWORD PTR ds:[esi]
  420fad:	xlat   BYTE PTR ds:[ebx]
  420fae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420faf:	mov    esp,0xe003f767
  420fb4:	push   ebp
  420fb5:	pop    ss
  420fb6:	xchg   DWORD PTR [eax-0x4db4b1b9],ebx
  420fbc:	test   DWORD PTR [eax-0x7cf1529e],esi
  420fc2:	add    al,0x15
  420fc4:	xchg   ch,dl
  420fc6:	xor    BYTE PTR [eax+ecx*1+0x70508c30],0x47
  420fce:	fwait
  420fcf:	xchg   esi,eax
  420fd0:	call   0x67eb:0x23c2fcab
  420fd7:	fisttp DWORD PTR [ecx-0x1f86f64]
  420fdd:	daa    
  420fde:	and    al,0xbd
  420fe1:	sub    al,0xdd
  420fe3:	mov    ah,0x9d
  420fe5:	jae    0x42105a
  420fe7:	sub    al,0x19
  420fe9:	shr    ch,cl
  420feb:	pop    esi
  420fec:	push   ecx
  420fed:	xchg   DWORD PTR [ecx+0x1d],esi
  420ff0:	aam    0x9d
  420ff2:	mov    ebx,edi
  420ff4:	jbe    0x421053
  420ff6:	mov    cl,0x20
  420ff8:	fisubr DWORD PTR [edx]
  420ffa:	mov    DWORD PTR [eax-0x7c],ebx
  420ffd:	ins    BYTE PTR es:[edi],dx
  420ffe:	cmp    bh,BYTE PTR [eax]
  421000:	sub    DWORD PTR [edx],esi
  421002:	mov    eax,ds:0xae804698
  421007:	mov    edi,0x85c7a76f
  42100c:	outs   dx,DWORD PTR ds:[esi]
  42100d:	shl    ecx,cl
  42100f:	mov    dl,0xfe
  421011:	pop    es
  421012:	je     0x420faf
  421014:	sub    esi,0x12
  421017:	pop    eax
  421018:	push   ebx
  421019:	lods   eax,DWORD PTR ds:[esi]
  42101a:	stos   BYTE PTR es:[edi],al
  42101b:	mov    ch,0xf7
  42101d:	adc    dl,BYTE PTR [edx]
  42101f:	jl     0x421004
  421021:	add    ah,bl
  421023:	mov    edi,0x6212e8d5
  421028:	dec    ebp
  421029:	push   esp
  42102a:	xchg   DWORD PTR [eax-0x28ecbbd1],ebx
  421030:	icebp  
  421031:	dec    ebp
  421032:	and    ebp,ebx
  421034:	mov    bh,0x6
  421036:	xchg   ebp,eax
  421037:	jp     0x421052
  421039:	push   esp
  42103a:	mov    ds:0x8ea1a9a4,eax
  42103f:	jp     0x4210a0
  421041:	inc    esp
  421042:	arpl   di,si
  421044:	std    
  421045:	stos   BYTE PTR es:[edi],al
  421046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421047:	repz pop edi
  421049:	mov    al,fs:0x3798dafd
  42104f:	mov    eax,ds:0x66e3f91d
  421054:	ss jo  0x42106f
  421057:	js     0x420fe1
  421059:	icebp  
  42105a:	or     cl,BYTE PTR [ebx+edx*8+0x3c]
  42105e:	push   0x35
  421060:	jns    0x421097
  421062:	mov    cl,0xba
  421064:	(bad)  
  421065:	push   0x5d
  421067:	pop    ecx
  421068:	cmp    DWORD PTR [edx+0x6b6ac693],ecx
  42106e:	jb     0x42101b
  421070:	pop    es
  421071:	jne    0x42107c
  421073:	mov    cl,0xa4
  421075:	push   ss
  421076:	loopne 0x42109b
  421078:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421079:	(bad)  [eax-0x35ec241d]
  42107f:	std    
  421080:	mov    eax,?
  421082:	aas    
  421083:	or     edx,DWORD PTR [edx]
  421085:	enter  0x708f,0xd1
  421089:	push   ebx
  42108a:	int3   
  42108b:	ins    DWORD PTR es:[edi],dx
  42108c:	ins    DWORD PTR es:[edi],dx
  42108d:	fldenv [edx]
  42108f:	mov    eax,0xe8f2aad3
  421094:	(bad)  
  421096:	cli    
  421097:	mov    edx,0x8f45b62d
  42109c:	int3   
  42109d:	sti    
  42109e:	sbb    al,0x5a
  4210a0:	fstp   TBYTE PTR [edx+0x1d72dda1]
  4210a6:	enter  0xc0bf,0xc
  4210aa:	addr16 push ds
  4210ac:	pop    edx
  4210ad:	hlt    
  4210ae:	xor    DWORD PTR [ecx+0x61],ebx
  4210b1:	test   DWORD PTR [eax],esp
  4210b3:	rcr    dh,0xe
  4210b6:	xlat   BYTE PTR ds:[ebx]
  4210b7:	outs   dx,DWORD PTR ds:[esi]
  4210b8:	mov    ss,WORD PTR ds:0x41f16106
  4210be:	sti    
  4210bf:	push   ebx
  4210c0:	adc    al,0xe6
  4210c2:	gs xchg edx,eax
  4210c4:	add    al,0x76
  4210c6:	sub    eax,0x795cd8c1
  4210cb:	loope  0x4210aa
  4210cd:	sbb    eax,DWORD PTR [ecx-0x44]
  4210d0:	push   ebp
  4210d1:	test   dh,dh
  4210d3:	retf   
  4210d4:	sahf   
  4210d5:	add    eax,0x888d05c9
  4210da:	xchg   ebx,eax
  4210db:	sbb    DWORD PTR [eax-0x25856722],ebp
  4210e1:	pop    ss
  4210e2:	pop    es
  4210e3:	mov    esi,0x6b3b288a
  4210e8:	sub    ecx,DWORD PTR [ebx]
  4210ea:	or     eax,0xc7c3e624
  4210ef:	pushf  
  4210f0:	ret    0x7c4b
  4210f3:	call   0x4aee:0x84b5af7f
  4210fa:	ror    BYTE PTR [ebx*2-0x7dd9d9b4],cl
  421101:	mov    al,ds:0x4327ab39
  421106:	xor    eax,0x1ac8887b
  42110b:	js     0x421102
  42110d:	jg     0x42112f
  42110f:	retf   
  421110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421111:	xor    DWORD PTR [ebp+0x45],edx
  421114:	adc    al,0x17
  421116:	adc    eax,0x5078a9b
  42111b:	pop    edx
  42111c:	sbb    ebp,ecx
  42111e:	arpl   di,sp
  421120:	add    esi,DWORD PTR [esi+0x7b03caf7]
  421126:	jno    0x421126
  421128:	pop    eax
  421129:	inc    edi
  42112a:	push   esi
  42112b:	sub    DWORD PTR [esi+esi*2-0x39fec2f1],esi
  421132:	fist   DWORD PTR es:[edi-0x63a65d8]
  421139:	lods   eax,DWORD PTR ds:[esi]
  42113a:	in     eax,0x88
  42113c:	stos   BYTE PTR es:[edi],al
  42113d:	mov    cl,0xc0
  42113f:	and    ebx,ecx
  421141:	int    0x2f
  421143:	arpl   sp,dx
  421145:	or     edx,DWORD PTR ds:0xaa1944bc
  42114b:	xchg   ebx,eax
  42114c:	inc    edi
  42114d:	or     dh,BYTE PTR [ebx+edx*2]
  421150:	ins    BYTE PTR es:[edi],dx
  421151:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421152:	sbb    al,BYTE PTR [ebp+0x5cdb3144]
  421158:	(bad)  
  421159:	out    dx,al
  42115a:	add    edx,eax
  42115c:	jg     0x4211be
  42115e:	call   0x39a85bfd
  421163:	xor    DWORD PTR ds:0xf92d1b72,edi
  421169:	adc    BYTE PTR ds:0x8aea2c68,0x3e
  421170:	cli    
  421171:	loope  0x42110a
  421173:	leave  
  421174:	jl     0x4211e0
  421176:	mov    al,ds:0x4d2b9c5a
  42117b:	xchg   dh,ch
  42117d:	mov    al,ds:0x9688e0dc
  421182:	lods   eax,DWORD PTR ds:[si]
  421184:	enter  0x108b,0x1f
  421188:	or     eax,0xee3a3a93
  42118d:	push   eax
  42118e:	jae    0x4211fb
  421190:	ins    BYTE PTR es:[edi],dx
  421191:	jmp    0x34180627
  421196:	jle    0x42112a
  421198:	dec    esp
  421199:	(bad)  
  42119b:	xor    al,dh
  42119d:	push   ebx
  42119e:	fild   WORD PTR [esi+esi*2]
  4211a1:	scas   al,BYTE PTR es:[edi]
  4211a2:	lods   eax,DWORD PTR ds:[esi]
  4211a3:	sbb    DWORD PTR [eax],ebx
  4211a5:	and    eax,0xcfe21146
  4211aa:	jp     0x421178
  4211ac:	dec    ecx
  4211ad:	mov    dl,0x87
  4211af:	aam    0xf6
  4211b1:	(bad)  
  4211b2:	pop    eax
  4211b3:	adc    edx,DWORD PTR [ebx]
  4211b5:	scas   al,BYTE PTR es:[edi]
  4211b6:	loope  0x421143
  4211b8:	dec    eax
  4211b9:	dec    ecx
  4211ba:	test   al,0x9
  4211bc:	daa    
  4211bd:	stos   BYTE PTR es:[edi],al
  4211be:	arpl   WORD PTR [ebp+0x511532c9],dx
  4211c4:	push   esp
  4211c5:	aaa    
  4211c6:	xor    eax,0x8788d2b3
  4211cb:	cs cmp al,0x11
  4211ce:	lahf   
  4211cf:	or     cl,ch
  4211d1:	adc    BYTE PTR [edx+0x60c54940],bh
  4211d7:	xor    BYTE PTR [ecx+0x143db8e2],dh
  4211dd:	sar    DWORD PTR [ecx+0x391f5372],0x41
  4211e4:	pop    esi
  4211e5:	popf   
  4211e6:	out    0x63,al
  4211e8:	xor    DWORD PTR [edi-0x4eb1207a],esi
  4211ee:	pop    edi
  4211ef:	jmp    0x634a265b
  4211f4:	xor    esp,DWORD PTR [eax+0x1e]
  4211f7:	mov    ebp,0xf2237af6
  4211fc:	jp     0x42125b
  4211fe:	dec    ah
  421200:	das    
  421201:	mov    ah,0xac
  421203:	or     al,0x35
  421205:	cmp    al,0x62
  421207:	cli    
  421208:	dec    edi
  421209:	jg     0x42120f
  42120b:	fisubr DWORD PTR fs:[eax+0x755893e0]
  421212:	icebp  
  421213:	les    esi,FWORD PTR [ebx-0x607b9a3a]
  421219:	mov    ecx,0xfa4cb291
  42121e:	mov    ch,0x3a
  421220:	jmp    0x3754:0x540b4bee
  421227:	push   ds
  421228:	mov    esp,eax
  42122a:	xchg   esp,eax
  42122b:	sub    eax,0xe47a35c2
  421230:	sbb    al,0xc2
  421232:	aaa    
  421233:	test   al,0xa7
  421235:	push   ds
  421236:	mov    ?,WORD PTR [ebp+0x75]
  421239:	push   ss
  42123a:	cmc    
  42123b:	adc    DWORD PTR [edx],ebp
  42123d:	and    al,0x96
  42123f:	pop    esp
  421240:	aad    0xef
  421242:	mov    ds:0xade66d13,eax
  421247:	leave  
  421248:	(bad)
  42124b:	push   edx
  42124c:	lock dec esi
  42124e:	push   esp
  42124f:	push   esp
  421250:	push   ss
  421251:	outs   dx,BYTE PTR ds:[esi]
  421252:	shl    DWORD PTR [edi-0x7a],1
  421255:	call   0xebf7:0x85123337
  42125c:	fdiv   QWORD PTR [esp+edi*1+0x3078280f]
  421263:	push   ebx
  421264:	mov    cl,0x3f
  421266:	add    eax,0x44c523da
  42126b:	sbb    dl,BYTE PTR [edx-0x45a35956]
  421271:	aad    0xca
  421273:	jmp    0x63b0:0xafec03c9
  42127a:	add    BYTE PTR [ebx],dl
  42127c:	mov    dh,0xde
  42127e:	mov    dl,BYTE PTR [edi+0x38]
  421281:	(bad)  
  421282:	retf   0x65da
  421285:	push   esi
  421286:	shl    BYTE PTR [edx+0x13],cl
  421289:	inc    bp
  42128b:	call   0xc829:0xb48f102f
  421292:	push   edi
  421293:	sti    
  421294:	add    al,0x2b
  421296:	mov    esi,0xc656c62b
  42129b:	adc    ah,BYTE PTR [eax+0x48a7fdec]
  4212a1:	das    
  4212a2:	icebp  
  4212a3:	and    bh,BYTE PTR ds:0x57338ffb
  4212a9:	pop    edx
  4212aa:	or     DWORD PTR [edi],0xffffffec
  4212ad:	jl     0x421256
  4212af:	jecxz  0x42132b
  4212b1:	cmp    DWORD PTR [edi-0x6d7dae2d],ebp
  4212b7:	bound  ecx,QWORD PTR [ecx+edi*1-0x2b]
  4212bb:	pop    ebx
  4212bc:	mov    bl,0x29
  4212be:	aas    
  4212bf:	jne    0x4212db
  4212c1:	aaa    
  4212c2:	(bad)  
  4212c3:	cwde   
  4212c4:	sub    edx,DWORD PTR [ecx-0x7]
  4212c7:	jg     0x4212f4
  4212c9:	or     esi,ebp
  4212cb:	adc    DWORD PTR ds:0xf1ec417f,ebx
  4212d1:	std    
  4212d2:	fisttp WORD PTR [eax-0x3f0322a]
  4212d8:	icebp  
  4212d9:	jmp    0x29f95b3a
  4212de:	iret   
  4212df:	in     eax,0xdd
  4212e1:	push   0xd8afada6
  4212e6:	jecxz  0x4212ea
  4212e8:	add    ch,bl
  4212ea:	inc    ebx
  4212eb:	jb     0x4212d4
  4212ed:	mov    ebp,?
  4212ef:	rcl    DWORD PTR [edx+0x5],1
  4212f2:	jmp    0x9dc0:0x5bf166eb
  4212f9:	xabort 0x34
  4212fc:	aaa    
  4212fd:	scas   al,BYTE PTR es:[edi]
  4212fe:	pop    edx
  4212ff:	adc    eax,0x4e427783
  421304:	jp     0x42135a
  421306:	pop    edi
  421307:	jg     0x4212c4
  421309:	pusha  
  42130a:	add    BYTE PTR [edx+0x63c0e67a],dl
  421310:	sub    dh,dh
  421312:	into   
  421313:	xor    BYTE PTR [esi],dh
  421315:	out    dx,al
  421316:	test   eax,0xea2be5a5
  42131b:	jns    0x42135b
  42131d:	imul   ecx,ebx,0x22d7f897
  421323:	mov    bl,0x84
  421325:	add    cl,BYTE PTR [edi]
  421327:	rol    DWORD PTR [esi],0x59
  42132a:	daa    
  42132b:	data16 jmp 0x4212b1
  42132e:	push   ss
  42132f:	cmp    eax,0x93ed1183
  421334:	test   DWORD PTR [eax-0x6ded02ac],0x5d245600
  42133e:	cdq    
  42133f:	and    DWORD PTR [ebx-0x37],edi
  421342:	div    BYTE PTR [edi+0x2d]
  421345:	mov    esp,0x41a1365c
  42134a:	bound  ebp,QWORD PTR [eax+0x2d5e129c]
  421350:	and    BYTE PTR [ebp-0x77],dh
  421353:	and    al,0xb9
  421355:	sbb    cl,BYTE PTR [edi-0x1bde27ed]
  42135b:	sub    ah,BYTE PTR [edi]
  42135d:	outs   dx,BYTE PTR ds:[esi]
  42135e:	sahf   
  42135f:	inc    esi
  421360:	mov    DWORD PTR [edi],ecx
  421362:	js     0x4212e7
  421364:	sar    DWORD PTR [ebp-0x13],cl
  421367:	lock sbb edx,esp
  42136a:	mov    ebx,0xd9d41c8f
  42136f:	jmp    0x69e8:0x3b302d3b
  421376:	add    esp,DWORD PTR [ebx]
  421378:	cdq    
  421379:	inc    esi
  42137a:	mov    edi,0x42667b77
  421380:	outs   dx,DWORD PTR ds:[esi]
  421381:	cwde   
  421382:	cmp    eax,0x755e9526
  421387:	add    eax,0x248d18e1
  42138c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42138d:	mov    ds:0xe200e3b9,al
  421392:	push   ecx
  421393:	pop    edi
  421394:	adc    bl,dl
  421396:	retf   
  421397:	push   edx
  421398:	cmp    ebx,DWORD PTR [edx]
  42139a:	scas   eax,DWORD PTR es:[edi]
  42139b:	lea    ebp,[ebp+0x376c873c]
  4213a1:	dec    esi
  4213a2:	lahf   
  4213a3:	or     ebp,DWORD PTR [ebp-0x7de117d6]
  4213a9:	loopne 0x421332
  4213ab:	test   DWORD PTR [edx+eiz*1+0x716c1942],edi
  4213b2:	addr16 jmp 0xf6ae3e76
  4213b8:	jg     0x4213c7
  4213ba:	scas   al,BYTE PTR es:[edi]
  4213bb:	sub    DWORD PTR [esi-0x52016ed1],ecx
  4213c1:	push   ebp
  4213c2:	fisub  DWORD PTR [ebx]
  4213c4:	add    dl,BYTE PTR [edi+0x515dccca]
  4213ca:	inc    esp
  4213cb:	(bad)  
  4213cc:	and    BYTE PTR [eax-0x2bcbb16d],bl
  4213d2:	aam    0x65
  4213d4:	dec    esi
  4213d5:	shl    edi,0x95
  4213d8:	fwait
  4213d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213da:	xor    al,0x96
  4213dc:	mov    al,es:0x1019f3ae
  4213e2:	dec    ebx
  4213e3:	pop    edi
  4213e4:	lock arpl WORD PTR fs:[edi-0x7b],si
  4213e9:	sti    
  4213ea:	or     BYTE PTR [ecx],cl
  4213ec:	scas   al,BYTE PTR es:[edi]
  4213ed:	sub    esi,DWORD PTR [eax-0x6]
  4213f0:	push   eax
  4213f1:	adc    BYTE PTR [edx],cl
  4213f3:	stos   BYTE PTR es:[edi],al
  4213f4:	xchg   esi,eax
  4213f5:	popa   
  4213f6:	cmp    ch,BYTE PTR [edx-0xa]
  4213f9:	sub    bl,BYTE PTR [edi]
  4213fb:	push   ebx
  4213fc:	(bad)  
  4213fd:	int    0xdc
  4213ff:	xlat   BYTE PTR ds:[ebx]
  421400:	xchg   edi,eax
  421401:	mov    ds:0x4906e719,eax
  421406:	mov    bh,0x23
  421408:	xchg   esi,eax
  421409:	and    ah,ch
  42140b:	inc    eax
  42140c:	test   BYTE PTR [edx-0x7aae2cdb],0xeb
  421413:	push   ecx
  421414:	cld    
  421415:	(bad)
  421418:	add    cl,ah
  42141a:	test   DWORD PTR [ebp-0xc51bc36],edi
  421420:	leave  
  421421:	ret    
  421422:	mov    WORD PTR [edx+0x424f5eed],?
  421428:	ss inc eax
  42142a:	jecxz  0x421468
  42142c:	fist   WORD PTR [eax]
  42142e:	in     eax,dx
  42142f:	jmp    0x4213f6
  421431:	push   cs
  421432:	pop    ecx
  421433:	imul   eax,DWORD PTR [ecx],0x58
  421436:	hlt    
  421437:	jns    0x421406
  421439:	dec    esp
  42143a:	fcmovnb st,st(5)
  42143c:	or     eax,0x3ddcb173
  421441:	or     al,0x68
  421443:	sbb    eax,0xdf7ad259
  421448:	sbb    esi,DWORD PTR [ebx-0x3735c713]
  42144e:	data16 adc BYTE PTR [ebx+0x17211d5d],0x2b
  421456:	test   al,0x88
  421458:	ins    BYTE PTR es:[edi],dx
  421459:	adc    edx,ebx
  42145b:	out    0xca,eax
  42145d:	scas   al,BYTE PTR es:[edi]
  42145e:	cwde   
  42145f:	scas   al,BYTE PTR es:[edi]
  421460:	mov    bl,0xb2
  421462:	xchg   esp,eax
  421463:	icebp  
  421464:	std    
  421465:	xor    ebp,DWORD PTR [ebx+esi*2]
  421468:	sbb    eax,0x5c65f371
  42146d:	test   al,0x69
  42146f:	paddusw mm1,QWORD PTR [edi]
  421472:	iret   
  421473:	dec    edx
  421474:	sbb    eax,DWORD PTR [eax+0x22]
  421477:	into   
  421478:	cmp    DWORD PTR [ebx-0x74],ebx
  42147b:	jmp    0x1acd:0x32365760
  421482:	out    0x5d,eax
  421484:	loope  0x421459
  421486:	rcl    BYTE PTR [ebp-0x2c8a5269],0x36
  42148d:	cmp    dh,BYTE PTR [ecx+0x578744e0]
  421493:	lods   eax,DWORD PTR ds:[esi]
  421494:	icebp  
  421495:	mov    dh,0x93
  421497:	xlat   BYTE PTR ds:[ebx]
  421498:	jns    0x421437
  42149a:	jecxz  0x421487
  42149c:	pop    ebp
  42149d:	xchg   DWORD PTR [ebp+0x1a],ebp
  4214a0:	xor    BYTE PTR [eax],ch
  4214a2:	(bad)  
  4214a3:	mov    bh,0x5c
  4214a5:	dec    esp
  4214a6:	aad    0x29
  4214a8:	sahf   
  4214a9:	mov    dl,0xc7
  4214ab:	nop
  4214ac:	xor    eax,0x871729fb
  4214b1:	xchg   edi,eax
  4214b2:	mov    ah,0xa1
  4214b4:	xor    DWORD PTR [ecx],ebx
  4214b6:	retf   0x2991
  4214b9:	jmp    0x4214a8
  4214bb:	mov    bl,0x17
  4214bd:	sbb    ah,BYTE PTR [esi+eax*1]
  4214c0:	js     0x4214ab
  4214c2:	pop    eax
  4214c3:	int3   
  4214c4:	test   DWORD PTR [ebx],eax
  4214c6:	call   0x46f9e67e
  4214cb:	sub    edi,DWORD PTR [edx]
  4214cd:	push   es
  4214ce:	sub    dl,BYTE PTR [ecx]
  4214d0:	fild   WORD PTR [esi]
  4214d2:	stos   BYTE PTR es:[edi],al
  4214d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214d4:	imul   eax,ebx,0x9822334c
  4214da:	add    cl,al
  4214dc:	sbb    cl,al
  4214de:	and    al,0x9
  4214e0:	push   edx
  4214e1:	mov    al,0xd6
  4214e3:	mov    ds:0x4b33c5b7,eax
  4214e8:	mov    esp,DWORD PTR [ebx]
  4214ea:	xor    DWORD PTR [ebx+eiz*8+0x70],ebp
  4214ee:	ss mov ebp,0xe9a28ba0
  4214f4:	pop    ebx
  4214f5:	push   edi
  4214f6:	shl    DWORD PTR [edx],0x5e
  4214f9:	cwde   
  4214fa:	xor    BYTE PTR [ebp+0x2],dh
  4214fd:	js     0x4214f1
  4214ff:	pandn  mm6,QWORD PTR [esi]
  421502:	adc    BYTE PTR [ebp+eax*2+0x57],dl
  421506:	adc    DWORD PTR [ebp-0x77a36c4b],ebx
  42150c:	sub    DWORD PTR [eax-0xd44a12e],0xffffffb7
  421513:	or     eax,0xc1c02077
  421518:	test   DWORD PTR [ebp+0x49a18987],0xd672d1f7
  421522:	and    ebp,DWORD PTR [eax]
  421524:	lods   eax,DWORD PTR ds:[esi]
  421525:	adc    BYTE PTR [ebx+0x34],0x74
  421529:	mov    esi,0x767b3ae0
  42152e:	fisttp WORD PTR [ecx+0x7d]
  421531:	pop    edi
  421532:	aam    0x69
  421534:	cmp    al,BYTE PTR [esp+ebp*2-0x61c36493]
  42153b:	mov    cl,0x50
  42153d:	xchg   ecx,eax
  42153e:	or     BYTE PTR [ebx+0x76],cl
  421541:	std    
  421542:	scas   al,BYTE PTR es:[edi]
  421543:	xchg   ecx,eax
  421544:	data16 jl 0x42155c
  421547:	mov    ebx,0xfede3eb3
  42154c:	mov    BYTE PTR [ebx],ch
  42154e:	outs   dx,DWORD PTR ds:[esi]
  42154f:	mov    DWORD PTR [ecx],esi
  421551:	mov    bh,0xdb
  421553:	iret   
  421554:	shl    BYTE PTR [ecx],cl
  421556:	sub    DWORD PTR [eax],0x40
  421559:	xchg   edi,eax
  42155a:	imul   esi,DWORD PTR [esi-0x73bd3f03],0xffffffe2
  421561:	icebp  
  421562:	mov    esp,0x2cd4a3be
  421567:	dec    ebp
  421568:	std    
  421569:	push   ebp
  42156a:	retf   0x7891
  42156d:	jl     0x421596
  42156f:	inc    ebx
  421570:	jbe    0x42151a
  421572:	push   ebp
  421573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421574:	iret   
  421575:	dec    esp
  421576:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421577:	adc    al,0xeb
  421579:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42157a:	in     al,0x5d
  42157c:	sbb    esp,DWORD PTR [ebp-0x8]
  42157f:	adc    ecx,DWORD PTR [esp+ebx*8]
  421582:	in     al,0xd6
  421584:	pop    eax
  421585:	add    eax,0x51fa4141
  42158a:	push   ebp
  42158b:	hlt    
  42158c:	leave  
  42158d:	out    0x93,al
  42158f:	fcmovb st,st(3)
  421591:	jnp    0x4215ac
  421593:	sub    BYTE PTR [eax-0x4a],ch
  421596:	xor    bh,cl
  421598:	xchg   BYTE PTR [eax-0x50],cl
  42159b:	bound  ebp,QWORD PTR [ecx+0x50]
  42159e:	popf   
  42159f:	pop    esi
  4215a0:	xor    eax,0x5d4e48e6
  4215a5:	push   ebx
  4215a6:	jo     0x421578
  4215a8:	adc    DWORD PTR ds:0xa3ad8b96,ebx
  4215ae:	cwde   
  4215af:	aam    0x1
  4215b1:	or     DWORD PTR [ecx],0xffffffe1
  4215b4:	sbb    al,0x67
  4215b6:	fnstsw WORD PTR [ecx+0x4ef4f20]
  4215bc:	mov    esi,0x30aa1e67
  4215c1:	(bad)  
  4215c3:	mov    bl,0x65
  4215c5:	bswap  ebx
  4215c7:	jmp    0x4f1200c9
  4215cc:	gs push ebx
  4215ce:	call   0x8af5:0xf62a534a
  4215d5:	stc    
  4215d6:	or     eax,0x7387dac4
  4215db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215dc:	and    edx,DWORD PTR [ebx]
  4215de:	loop   0x4215a4
  4215e0:	lock push es
  4215e2:	jns    0x421607
  4215e4:	add    DWORD PTR [ecx-0x18],eax
  4215e7:	out    0xb3,eax
  4215e9:	in     eax,dx
  4215ea:	push   edx
  4215eb:	or     DWORD PTR [eax+esi*2],esi
  4215ee:	ret    0xb775
  4215f1:	arpl   sp,cx
  4215f3:	test   al,0xc
  4215f5:	(bad)  
  4215f7:	pushf  
  4215f8:	jle    0x421675
  4215fa:	mov    eax,0x44dfe750
  4215ff:	mov    al,ds:0x7da10a78
  421604:	and    BYTE PTR [eax+0xfeec232],al
  42160a:	iret   
  42160b:	repz in al,0x3a
  42160e:	out    0x34,eax
  421610:	test   BYTE PTR [edx-0x59316c78],0xbf
  421617:	mov    edx,0xc2de3b9b
  42161c:	mov    edi,0x661d332a
  421621:	lahf   
  421622:	mov    bh,bh
  421624:	or     BYTE PTR [esi+edi*1-0x3c4bacd8],0x89
  42162c:	jno    0x42164b
  42162e:	stos   DWORD PTR es:[edi],eax
  42162f:	dec    BYTE PTR [edi+0x48af0f30]
  421635:	mov    dl,0x8e
  421637:	jg     0x421638
  421639:	stos   BYTE PTR es:[edi],al
  42163a:	icebp  
  42163b:	jbe    0x421628
  42163d:	rcl    BYTE PTR [ebx+0x47f69d91],0x4a
  421644:	add    BYTE PTR ds:[esp+ecx*2-0x6d],al
  421649:	in     al,0x26
  42164b:	or     BYTE PTR [ecx+ebx*2+0x1565e5f9],al
  421652:	adc    ecx,DWORD PTR [eax]
  421654:	sti    
  421655:	rcr    esp,1
  421657:	ret    
  421658:	push   0xffffffff
  42165a:	mov    edx,0x287e5b58
  42165f:	mov    al,ds:0x5aa78b7e
  421665:	dec    esp
  421666:	nop
  421667:	sahf   
  421668:	das    
  421669:	sub    ah,BYTE PTR [ebx]
  42166b:	mov    bh,0x79
  42166d:	jbe    0x4216cf
  42166f:	cs push 0xda075bb0
  421675:	dec    edi
  421676:	retf   0x476f
  421679:	add    BYTE PTR [ebx+0x49aea682],dl
  42167f:	inc    ecx
  421680:	add    DWORD PTR [esi-0x4a],ebp
  421683:	mov    DWORD PTR [ebx],eax
  421685:	push   ds
  421686:	popfw  
  421688:	aad    0x19
  42168a:	test   al,0xb6
  42168c:	ja     0x421680
  42168e:	cld    
  42168f:	jo     0x4216f9
  421691:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421692:	loope  0x4216d5
  421694:	or     ebx,DWORD PTR [ebp+eiz*2+0x16]
  421698:	test   dl,dh
  42169a:	aad    0x17
  42169c:	push   es
  42169d:	sub    eax,0x9a0175a6
  4216a2:	xchg   ebx,eax
  4216a3:	sbb    DWORD PTR [eax+0x37774576],esp
  4216a9:	push   eax
  4216aa:	jb     0x4216da
  4216ac:	ret    
  4216ad:	adc    BYTE PTR [edx],dl
  4216af:	cld    
  4216b0:	neg    BYTE PTR [eax-0x22c32387]
  4216b6:	mov    ebx,0xdc6f97dc
  4216bb:	int3   
  4216bc:	jbe    0x421674
  4216be:	push   esp
  4216bf:	daa    
  4216c0:	mov    dl,0xe4
  4216c2:	lods   eax,DWORD PTR ds:[esi]
  4216c3:	mov    WORD PTR [eax+0x5c90d909],ds
  4216c9:	pop    ebp
  4216ca:	lea    esi,[ebp+0x24]
  4216cd:	sub    esp,DWORD PTR [eax]
  4216cf:	std    
  4216d0:	std    
  4216d1:	cmp    al,0xf9
  4216d3:	ins    BYTE PTR es:[edi],dx
  4216d4:	xchg   BYTE PTR [edi+0x0],dh
  4216d7:	repz ja 0x421727
  4216da:	test   eax,0x99dd2ae1
  4216df:	fld    DWORD PTR [ebx]
  4216e1:	js     0x42167a
  4216e3:	push   0x72
  4216e5:	clc    
  4216e6:	push   ebp
  4216e7:	add    edi,edi
  4216e9:	mov    al,0x80
  4216eb:	aam    0xc9
  4216ed:	xor    al,0x65
  4216ef:	xchg   esi,eax
  4216f0:	std    
  4216f1:	mov    dl,ch
  4216f3:	in     eax,dx
  4216f4:	push   ebp
  4216f5:	xor    ebp,ecx
  4216f7:	push   0x49
  4216f9:	es in  al,dx
  4216fb:	mov    al,0xb6
  4216fd:	pop    ds
  4216fe:	out    dx,eax
  4216ff:	push   eax
  421700:	sbb    al,0x79
  421702:	lods   eax,DWORD PTR ds:[esi]
  421703:	add    dh,cl
  421705:	pusha  
  421706:	inc    ebx
  421707:	dec    ecx
  421708:	scas   al,BYTE PTR es:[edi]
  421709:	jp     0x4216c6
  42170b:	cmp    dl,0xcf
  42170e:	pop    es
  42170f:	(bad)  
  421710:	gs icebp 
  421712:	std    
  421713:	mov    ds:0x9fb7b27a,al
  421718:	sub    al,0xb2
  42171a:	outs   dx,BYTE PTR ds:[esi]
  42171b:	fld    DWORD PTR [ebp+0x16]
  42171e:	mov    ah,BYTE PTR [ebp+0x646965ab]
  421724:	push   0x20
  421726:	stos   DWORD PTR es:[edi],eax
  421727:	xchg   edi,eax
  421728:	pop    ss
  421729:	add    al,0xb2
  42172b:	(bad)  
  42172c:	out    dx,eax
  42172d:	call   0x100e:0x5e6ea8f7
  421734:	mov    cl,0xb1
  421736:	ror    DWORD PTR [ecx-0x45],0x1a
  42173a:	pop    esi
  42173b:	xor    ch,BYTE PTR [esi+0x30]
  42173e:	inc    ecx
  42173f:	pop    edx
  421740:	jecxz  0x421789
  421742:	fnstcw WORD PTR [esi-0x3e]
  421745:	mov    ds:0x7a4a940e,al
  42174a:	jle    0x421700
  42174c:	xchg   ebp,eax
  42174d:	xor    esi,edx
  42174f:	test   eax,eax
  421751:	in     al,dx
  421752:	and    eax,0x511c9ad0
  421757:	or     esp,ebp
  421759:	mov    ecx,0x7916d7a
  42175e:	mov    eax,ds:0x41c6f62e
  421763:	xor    esp,DWORD PTR [eax+esi*8]
  421766:	xchg   edi,eax
  421767:	dec    ebx
  421768:	es add eax,0xd548eb60
  42176e:	mov    esi,0xec491a6d
  421773:	shl    BYTE PTR [ebx+0x35edc441],1
  421779:	ja     0x42174c
  42177b:	ss dec edx
  42177d:	in     al,dx
  42177e:	lds    edx,FWORD PTR [ebp+0x5b94af52]
  421784:	xchg   ecx,eax
  421785:	test   al,dl
  421787:	add    edx,edx
  421789:	cld    
  42178a:	push   ss
  42178b:	shl    DWORD PTR [edx+0x6b],0x93
  42178f:	lds    ebx,FWORD PTR [esi+0x4d1ce7fb]
  421795:	jo     0x4217fb
  421797:	ret    
  421798:	sub    al,0x38
  42179a:	loopne 0x4217b7
  42179c:	mov    fs,WORD PTR [ecx-0x7d89d8a1]
  4217a2:	adc    DWORD PTR [ebx],0xb6e99f9d
  4217a8:	pop    ecx
  4217a9:	xor    eax,0x77a9915b
  4217ae:	jne    0x421764
  4217b0:	adc    BYTE PTR [ebp+0x7dd2e7c0],0x78
  4217b7:	fcomp  DWORD PTR [ecx]
  4217b9:	ins    BYTE PTR es:[edi],dx
  4217ba:	aam    0xa
  4217bc:	jp     0x42179a
  4217be:	xchg   edi,eax
  4217bf:	shl    DWORD PTR [ecx],1
  4217c1:	push   es
  4217c2:	jns    0x4217a8
  4217c4:	sti    
  4217c5:	stos   BYTE PTR es:[edi],al
  4217c6:	sbb    eax,0xb77d0a0e
  4217cb:	aad    0x4b
  4217cd:	sbb    al,0xed
  4217cf:	sbb    al,0x3a
  4217d1:	mov    ch,0xdd
  4217d3:	out    0x16,al
  4217d5:	enter  0xcb32,0x8e
  4217d9:	mov    ah,0x6c
  4217db:	stc    
  4217dc:	stos   BYTE PTR es:[edi],al
  4217dd:	in     eax,dx
  4217de:	jp     0x42181e
  4217e0:	push   cs
  4217e1:	xchg   ebx,eax
  4217e2:	clc    
  4217e3:	in     eax,dx
  4217e4:	xchg   ecx,ebp
  4217e6:	cld    
  4217e7:	scas   al,BYTE PTR es:[edi]
  4217e8:	sub    DWORD PTR [ebp-0x3c4b9ab5],ecx
  4217ee:	inc    edx
  4217ef:	mov    WORD PTR [esi-0x62],es
  4217f2:	pop    ds
  4217f3:	push   esi
  4217f4:	and    DWORD PTR ds:0x42a43e,0x0
  4217fe:	jmp    0x421812
  421803:	xor    edx,edx
  421805:	add    edx,DWORD PTR ds:0x42a43e
  42180b:	inc    edx
  42180c:	mov    DWORD PTR ds:0x42a43e,edx
  421812:	cmp    DWORD PTR ds:0x42a43e,0x16
  421819:	jae    0x421841
  42181f:	cmp    DWORD PTR ds:0x42a43e,0x1a
  421826:	jbe    0x421841
  42182c:	jmp    0x42183c
  421831:	push   0x76b1
  421836:	call   DWORD PTR ds:0x42a516
  42183c:	jmp    0x421803
  421841:	mov    edx,0x75108a8
  421846:	and    esi,DWORD PTR ds:0x42a3fa
  42184c:	xor    ecx,edx
  42184e:	xor    esi,DWORD PTR ds:0x42a426
  421854:	mov    esi,0x3272ef
  421859:	sub    DWORD PTR ds:0x42a436,0x42a3ce
  421863:	push   edi
  421864:	mov    edi,DWORD PTR [ebp+0x10]
  421867:	add    ecx,esi
  421869:	cmp    ecx,edi
  42186b:	je     0x424b7c
  421871:	adc    ecx,ecx
  421873:	mov    ecx,DWORD PTR [ebp-0x4]
  421876:	mov    edi,DWORD PTR ds:0x42a3aa
  42187c:	adc    DWORD PTR ds:0x42a3f2,edi
  421882:	mov    edi,DWORD PTR [ebp+0x10]
  421885:	xor    eax,eax
  421887:	xor    ecx,edx
  421889:	or     DWORD PTR ds:0x42a3be,0x42a3ea
  421893:	add    ecx,esi
  421895:	adc    DWORD PTR ds:0x42a406,0x263a
  42189f:	add    edi,0xfabdbeda
  4218a5:	mov    DWORD PTR ds:0x42a436,0x52b8
  4218af:	adc    eax,0xffffffff
  4218b2:	adc    DWORD PTR ds:0x42a446,0x42a40a
  4218bc:	xor    eax,0x0
  4218bf:	mov    DWORD PTR ds:0x42a41a,0x5a1b
  4218c9:	mov    DWORD PTR [ebp-0xc],eax
  4218cc:	push   ebx
  4218cd:	adc    eax,0x7347
  4218d2:	xor    ebx,ebx
  4218d4:	xor    edi,0x8a29a13b
  4218da:	add    eax,DWORD PTR ds:0x42a43e
  4218e0:	mov    eax,ecx
  4218e2:	add    eax,0xfabdbeda
  4218e7:	mov    DWORD PTR ds:0x42a3de,0x60e7
  4218f1:	adc    ebx,0xffffffff
  4218f4:	sub    DWORD PTR ds:0x42a402,0x42a3be
  4218fe:	xor    eax,0x8a29a13b
  421903:	xor    ebx,0x0
  421906:	cmp    eax,edi
  421908:	mov    DWORD PTR ds:0x42a3da,0x406a
  421912:	jne    0x423cae
  421918:	cmp    ebx,DWORD PTR [ebp-0xc]
  42191b:	jmp    0x423c98
  421920:	xor    cl,BYTE PTR [eax-0x43fc43e]
  421926:	stos   DWORD PTR es:[edi],eax
  421927:	sub    eax,0xffffffcd
  42192a:	(bad)  
  42192b:	cmc    
  42192c:	cmp    DWORD PTR ds:[eax+edi*8],ecx
  421930:	dec    esi
  421931:	mov    ch,0x79
  421933:	jp     0x42194f
  421935:	pop    edi
  421936:	jp     0x4219b2
  421938:	cld    
  421939:	cli    
  42193a:	fs out 0xc9,eax
  42193d:	adc    ch,ah
  42193f:	fst    DWORD PTR [ebp+eax*1+0x50ee94bc]
  421946:	and    al,0xb8
  421948:	dec    edi
  421949:	aas    
  42194a:	fimul  WORD PTR [ebx]
  42194c:	ret    0x7152
  42194f:	mov    ecx,ebx
  421951:	and    eax,DWORD PTR [edi-0x6c]
  421954:	xor    DWORD PTR [edx+0x5],esi
  421957:	adc    bh,BYTE PTR [edi]
  421959:	push   0x20
  42195b:	pop    ds
  42195c:	sbb    bl,BYTE PTR [ebp+0x70]
  42195f:	mov    ah,0xd4
  421961:	push   eax
  421962:	jg     0x421942
  421964:	sub    DWORD PTR [edi+0x5c72dd68],edx
  42196a:	mov    dh,0xd0
  42196c:	dec    eax
  42196d:	fadd   st,st(6)
  42196f:	in     al,0x59
  421971:	je     0x421939
  421973:	jns    0x421924
  421975:	add    dh,dl
  421977:	xchg   DWORD PTR [ebx+ecx*2-0x7d],ecx
  42197b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42197c:	inc    ecx
  42197d:	xchg   edx,eax
  42197e:	jge    0x4219f0
  421980:	cmc    
  421981:	sbb    ebx,DWORD PTR [ebp+0x265a496c]
  421987:	sbb    DWORD PTR [ebx+ebx*2-0x31],esi
  42198b:	stos   BYTE PTR es:[edi],al
  42198c:	shl    BYTE PTR [edi-0x38],0xaf
  421990:	aas    
  421991:	push   cs
  421992:	xchg   esi,eax
  421993:	sar    BYTE PTR ds:0x400c9b61,0xf5
  42199a:	arpl   WORD PTR [edi+0x15acd2bc],bp
  4219a0:	mov    esi,fs
  4219a2:	xlat   BYTE PTR ds:[ebx]
  4219a3:	pop    ecx
  4219a4:	popa   
  4219a5:	xchg   edx,eax
  4219a6:	xor    DWORD PTR [edx+0x5e],0x30
  4219aa:	jle    0x421a0a
  4219ac:	lds    ebx,FWORD PTR [edi-0x7561d34e]
  4219b2:	jp     0x42194b
  4219b4:	jg     0x42193e
  4219b6:	jmp    0xb35c:0x3a308142
  4219bd:	fisubr WORD PTR [esp+edx*2]
  4219c0:	mov    edi,gs
  4219c2:	into   
  4219c3:	adc    DWORD PTR [eax],esp
  4219c5:	into   
  4219c6:	(bad)  
  4219c7:	sahf   
  4219c8:	mov    ebp,esi
  4219ca:	jle    0x4219d2
  4219cc:	mov    DWORD PTR [ecx-0x3f5223e2],ecx
  4219d2:	push   edi
  4219d3:	shl    DWORD PTR [ebx+0x75],0x9f
  4219d7:	xor    bh,dh
  4219d9:	inc    ebx
  4219da:	xchg   edi,eax
  4219db:	out    dx,eax
  4219dc:	and    esi,DWORD PTR [ebx-0xe]
  4219df:	test   al,0xd6
  4219e1:	pop    ebp
  4219e2:	ins    BYTE PTR es:[edi],dx
  4219e3:	jbe    0x4219bc
  4219e5:	fild   WORD PTR [edi+0x5bd60bab]
  4219eb:	hlt    
  4219ec:	jle    0x421a0b
  4219ee:	xor    ebp,DWORD PTR [edx+0x4d170a2f]
  4219f4:	sbb    al,0x6d
  4219f6:	add    BYTE PTR [edx+eax*1+0x1a],ah
  4219fa:	mov    bh,0xb1
  4219fc:	cli    
  4219fd:	clc    
  4219fe:	lods   al,BYTE PTR ds:[esi]
  4219ff:	push   edx
  421a00:	call   DWORD PTR [ecx-0x61]
  421a03:	jne    0x421a1d
  421a05:	cmp    BYTE PTR [ecx],0xc7
  421a08:	fcomp  DWORD PTR [ebx+0x2b7bbda2]
  421a0e:	sahf   
  421a0f:	std    
  421a10:	and    DWORD PTR [ebx-0x19],ecx
  421a13:	cli    
  421a14:	mov    ah,0x34
  421a16:	ss dec ecx
  421a18:	jmp    0x421a46
  421a1a:	lahf   
  421a1b:	in     eax,0xb2
  421a1d:	mov    eax,ds:0x226d4cbf
  421a22:	stos   DWORD PTR es:[edi],eax
  421a23:	lods   eax,DWORD PTR ds:[esi]
  421a24:	xor    dh,BYTE PTR [ecx]
  421a26:	cmp    ch,BYTE PTR [ebx+edx*8+0xa]
  421a2a:	leave  
  421a2b:	mov    ds:0xb8cd48a7,eax
  421a30:	mov    esi,0xb0b42cbe
  421a35:	dec    esp
  421a36:	or     BYTE PTR [ecx-0x39],al
  421a39:	xor    edx,DWORD PTR ds:0x4e2440c6
  421a3f:	xor    DWORD PTR [esi-0x27],edx
  421a42:	test   DWORD PTR [edi+0x14932391],edx
  421a48:	leave  
  421a49:	cld    
  421a4a:	mov    al,ds:0x855de577
  421a4f:	call   0xfc7b:0x69ab8814
  421a56:	pusha  
  421a57:	xchg   esi,esp
  421a59:	dec    edi
  421a5a:	push   ss
  421a5b:	lods   eax,DWORD PTR ds:[esi]
  421a5c:	inc    ebp
  421a5d:	pop    ebp
  421a5e:	or     eax,ebx
  421a60:	test   al,0x7b
  421a62:	out    dx,al
  421a63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a64:	jo     0x421a8a
  421a66:	mov    cl,dl
  421a68:	dec    ebx
  421a6a:	in     eax,0xbe
  421a6c:	imul   ecx,ebp,0xf
  421a6f:	jo     0x421a0d
  421a71:	inc    esp
  421a72:	(bad)  
  421a73:	cli    
  421a74:	cmp    DWORD PTR [ebp-0x76d818d5],edx
  421a7a:	vsubsd xmm6,xmm1,QWORD PTR [edi-0x7586265e]
  421a82:	jo     0x421ad0
  421a84:	ret    
  421a85:	lsl    eax,WORD PTR [eax+0x4f0f1123]
  421a8c:	mov    bh,0x6d
  421a8e:	add    DWORD PTR [ecx],esp
  421a90:	and    edi,edi
  421a92:	mov    cl,0x1d
  421a94:	jmp    0x6a749a3c
  421a99:	xor    BYTE PTR [edi-0x499a357b],al
  421a9f:	inc    esp
  421aa0:	sbb    dl,BYTE PTR [edx+ecx*2-0x2d250f58]
  421aa7:	mov    ebp,0xe3001d2e
  421aac:	out    0xf2,eax
  421aae:	stos   BYTE PTR es:[edi],al
  421aaf:	(bad)  
  421ab0:	and    al,0x65
  421ab2:	or     eax,0xb3a89c95
  421ab7:	mov    WORD PTR [esi+0x2e],ss
  421aba:	jge    0x421af8
  421abc:	jle    0x421ab1
  421abe:	aaa    
  421abf:	mov    dl,0xfe
  421ac1:	mov    ebp,0x1e422c81
  421ac6:	fidiv  WORD PTR [ecx]
  421ac8:	adc    BYTE PTR [esi+0x58],dh
  421acb:	xchg   ebx,eax
  421acc:	imul   DWORD PTR [eax+edi*1-0x5fc4262c]
  421ad3:	mov    esp,0x45c9b51f
  421ad8:	mov    cl,0x14
  421ada:	ins    DWORD PTR es:[edi],dx
  421adb:	adc    dh,ch
  421add:	(bad)  
  421ade:	(bad)  
  421adf:	jae    0x421b00
  421ae1:	xchg   ebp,eax
  421ae2:	sub    cl,BYTE PTR [edx]
  421ae4:	and    al,0x96
  421ae6:	into   
  421ae7:	sbb    ch,BYTE PTR [edi+0x3b6c337e]
  421aed:	push   es
  421aee:	sub    dl,dh
  421af0:	cdq    
  421af1:	es jo  0x421a96
  421af4:	pop    ebp
  421af5:	inc    ecx
  421af6:	shr    bl,0xd4
  421af9:	call   0xc2bc11d3
  421afe:	leave  
  421aff:	and    al,0x72
  421b01:	jo     0x421a8f
  421b03:	shl    DWORD PTR [ebx+0x6f947aad],cl
  421b09:	pop    es
  421b0a:	xchg   DWORD PTR [ebx],esi
  421b0c:	retf   
  421b0d:	fistp  QWORD PTR [ebp+0x263a250d]
  421b13:	mov    BYTE PTR [eax-0xf],ah
  421b16:	sti    
  421b17:	pusha  
  421b18:	aam    0x22
  421b1a:	jae    0x421b20
  421b1c:	xlat   BYTE PTR ds:[ebx]
  421b1d:	std    
  421b1e:	ins    BYTE PTR es:[edi],dx
  421b1f:	and    ecx,edi
  421b21:	push   0x7f
  421b23:	lock mov dh,0xe3
  421b26:	pop    esp
  421b27:	jns    0x421b52
  421b29:	xchg   edx,eax
  421b2a:	xchg   esp,eax
  421b2b:	mov    ds:0xfb027a93,eax
  421b30:	cld    
  421b31:	add    al,0x76
  421b33:	xchg   ecx,eax
  421b34:	neg    BYTE PTR [ebx-0x5605222]
  421b3a:	test   al,0xcb
  421b3c:	xor    al,0xc7
  421b3e:	ja     0x421b32
  421b40:	mov    esp,gs
  421b42:	mov    al,0xce
  421b44:	mov    esi,DWORD PTR [eax]
  421b46:	retf   0xd312
  421b49:	out    dx,eax
  421b4a:	scas   eax,DWORD PTR es:[edi]
  421b4b:	mov    bh,BYTE PTR [edx-0x65]
  421b4e:	test   eax,0xffef8a
  421b53:	jg     0x421b8d
  421b55:	dec    ecx
  421b56:	xor    dh,BYTE PTR [eax]
  421b58:	and    dh,BYTE PTR ds:0x9ba744f0
  421b5e:	jl     0x421bd9
  421b60:	inc    eax
  421b61:	mov    ch,0xea
  421b63:	sar    DWORD PTR [eax-0x626cf8df],1
  421b69:	push   edi
  421b6a:	dec    edi
  421b6b:	mov    dh,0x30
  421b6d:	and    eax,0x4f31fb25
  421b72:	add    DWORD PTR [eax-0x9],0xffffffa0
  421b76:	pop    ebp
  421b77:	cli    
  421b78:	xor    BYTE PTR [ecx+edx*4-0x4b],dh
  421b7c:	ins    DWORD PTR es:[edi],dx
  421b7d:	jbe    0x421bad
  421b7f:	pusha  
  421b80:	xchg   DWORD PTR [edx-0x18],esp
  421b83:	and    eax,0x15d171e7
  421b88:	mov    dl,0xaa
  421b8a:	add    DWORD PTR [ecx-0x6e],0x26
  421b8e:	cdq    
  421b8f:	mov    ah,BYTE PTR [esi]
  421b91:	mov    ch,0x93
  421b93:	sub    ebx,DWORD PTR [eax]
  421b95:	xchg   edi,eax
  421b96:	stos   DWORD PTR es:[edi],eax
  421b97:	in     eax,0x70
  421b99:	imul   ah
  421b9b:	push   ecx
  421b9c:	pop    ds
  421b9d:	sahf   
  421b9e:	xchg   ebx,eax
  421b9f:	or     eax,0x43c6dc77
  421ba4:	fs dec ebp
  421ba6:	add    eax,0xc000a0c4
  421bab:	xor    edx,DWORD PTR [ebp+0x4947ee3a]
  421bb1:	gs dec edx
  421bb3:	xchg   edx,eax
  421bb4:	xchg   edi,eax
  421bb5:	mov    dh,0x44
  421bb7:	mov    bl,0x70
  421bb9:	xchg   ecx,eax
  421bba:	dec    eax
  421bbb:	mov    edx,0xadfd5e0a
  421bc0:	or     al,0x51
  421bc2:	je     0x421b7b
  421bc4:	pop    edi
  421bc5:	popf   
  421bc6:	mov    edi,0x3c4772bf
  421bcb:	mov    esi,0xfe88c862
  421bd0:	adc    al,0xe6
  421bd2:	mov    eax,ds:0x4064283
  421bd7:	mov    ds:0x71f8192c,eax
  421bdc:	out    dx,eax
  421bdd:	mov    ecx,0x8aac968a
  421be2:	(bad)  
  421be3:	int3   
  421be4:	lock test al,0xdd
  421be7:	push   esi
  421be8:	mov    eax,0xabacb68b
  421bed:	(bad)  
  421bee:	rol    DWORD PTR [eax+ebx*4],1
  421bf1:	add    al,0x2f
  421bf3:	push   edx
  421bf4:	mov    dh,BYTE PTR [eax-0x72]
  421bf7:	jg     0x421bdb
  421bf9:	mov    dh,0x80
  421bfb:	adc    al,0x9d
  421bfd:	retf   
  421bfe:	push   es
  421bff:	mov    DWORD PTR [ecx-0x4b],eax
  421c02:	or     al,0x44
  421c04:	sub    ebx,DWORD PTR [esi+edx*8-0x2a47868]
  421c0b:	arpl   sp,si
  421c0d:	or     bl,bh
  421c0f:	sub    eax,0x5d789426
  421c14:	enter  0x38cd,0xf2
  421c18:	push   esi
  421c19:	push   0xcb188dca
  421c1e:	cld    
  421c1f:	dec    eax
  421c20:	jl     0x421bdd
  421c22:	pop    edi
  421c23:	hlt    
  421c24:	push   eax
  421c25:	or     al,0xc6
  421c27:	pop    ebp
  421c28:	stos   DWORD PTR es:[edi],eax
  421c29:	sub    DWORD PTR [esi-0x55b08ade],0x30
  421c30:	jecxz  0x421c42
  421c32:	test   BYTE PTR [ecx],ch
  421c34:	out    dx,eax
  421c35:	add    BYTE PTR es:[edx-0x7179184f],0x93
  421c3d:	out    dx,al
  421c3e:	xchg   esp,eax
  421c3f:	lods   eax,DWORD PTR ds:[esi]
  421c40:	pop    ds
  421c41:	test   BYTE PTR [ecx],bl
  421c43:	or     cl,BYTE PTR [ebx]
  421c45:	into   
  421c46:	jns    0x421c87
  421c48:	fidiv  DWORD PTR [edx-0x28]
  421c4b:	mov    edx,0x2d97dde0
  421c50:	ret    
  421c51:	mov    esp,0x23a2e8e7
  421c56:	call   0xf905579f
  421c5b:	xor    al,0x83
  421c5d:	pop    eax
  421c5e:	hlt    
  421c5f:	adc    edi,DWORD PTR [esi-0x7e]
  421c62:	or     al,0x70
  421c64:	pop    eax
  421c65:	cdq    
  421c66:	mov    bh,0xd4
  421c68:	aad    0xad
  421c6a:	test   DWORD PTR [ebx-0x7da43f2e],eax
  421c70:	or     esp,0x77
  421c73:	jge    0x421c32
  421c75:	mov    esi,0x7d64107
  421c7a:	scas   al,BYTE PTR es:[edi]
  421c7b:	adc    DWORD PTR [ebx],0x88c55db7
  421c81:	pop    ebp
  421c82:	pop    ss
  421c83:	in     eax,dx
  421c84:	lods   eax,DWORD PTR ds:[esi]
  421c85:	sub    eax,eax
  421c87:	outs   dx,BYTE PTR ds:[esi]
  421c88:	leave  
  421c89:	pop    ds
  421c8a:	inc    DWORD PTR [eax]
  421c8c:	test   DWORD PTR [esi+esi*4-0x34a081e3],edi
  421c93:	imul   edx,DWORD PTR [esi-0x6f],0x1bc0c004
  421c9a:	imul   edi,DWORD PTR [edi+0x15],0xffffffeb
  421c9e:	adc    al,0x59
  421ca0:	bswap  eax
  421ca2:	pop    eax
  421ca3:	and    edx,edx
  421ca5:	ret    0x6a5a
  421ca8:	mov    ds:0x96205c78,al
  421cad:	sub    al,0xd5
  421caf:	mov    ah,0xc6
  421cb1:	(bad)  
  421cb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cb3:	mov    ah,0xdb
  421cb5:	inc    esi
  421cb6:	data16 fcomp QWORD PTR [edi+0x19]
  421cba:	pop    esi
  421cbb:	fs gs push ebx
  421cbe:	pop    esi
  421cbf:	icebp  
  421cc0:	lock loope 0x421c4f
  421cc3:	retf   0x585e
  421cc6:	fadd   QWORD PTR [edx+eiz*1+0x3d5da5c7]
  421ccd:	in     eax,dx
  421cce:	push   eax
  421ccf:	js     0x421cfa
  421cd1:	sbb    BYTE PTR [esp+esi*1-0x6ccc488c],bh
  421cd8:	pop    ebx
  421cd9:	sbb    eax,0x98b9bfb6
  421cde:	cs cmc 
  421ce0:	call   0xb6ae:0xe051ee78
  421ce7:	adc    BYTE PTR [ecx-0x7ae3c56f],ah
  421ced:	push   ebx
  421cee:	ror    BYTE PTR [eax],cl
  421cf0:	sbb    BYTE PTR [edi],dl
  421cf2:	cmp    eax,0xaa8a3ff0
  421cf7:	icebp  
  421cf8:	js     0x421d64
  421cfa:	jecxz  0x421d72
  421cfc:	shl    edi,0xa
  421cff:	xor    edi,edi
  421d01:	outs   dx,DWORD PTR ds:[esi]
  421d02:	fisttp WORD PTR [esp+edx*2-0x31812f30]
  421d09:	mov    ds:0xbceecff1,al
  421d0e:	cs inc eax
  421d10:	mov    dh,0x7e
  421d12:	cwde   
  421d13:	cdq    
  421d14:	add    ch,BYTE PTR gs:[edx-0x68]
  421d18:	js     0x421ca0
  421d1a:	pop    esi
  421d1b:	scas   al,BYTE PTR es:[edi]
  421d1c:	(bad)  
  421d1d:	and    ch,BYTE PTR [edx]
  421d1f:	cmp    eax,0x6ae3679a
  421d24:	call   0x4639a07f
  421d29:	not    DWORD PTR [ecx+0x7]
  421d2c:	sub    ch,BYTE PTR [eax+eiz*2]
  421d2f:	push   ebp
  421d30:	ja     0x421d06
  421d32:	or     BYTE PTR [edx],al
  421d34:	rcr    BYTE PTR [esi+edi*4-0x73],0x79
  421d39:	lea    eax,[esi+0x6d]
  421d3c:	test   BYTE PTR [ebx+esi*8-0x78],cl
  421d40:	xchg   edx,eax
  421d41:	aad    0x41
  421d43:	repnz mov ah,0xee
  421d46:	mov    bl,0xb3
  421d48:	loope  0x421d65
  421d4a:	add    BYTE PTR [ebx-0x6d49d990],dl
  421d50:	pop    esi
  421d51:	jbe    0x421d33
  421d53:	hlt    
  421d54:	mov    esi,0x3122782
  421d59:	jo     0x421dbb
  421d5b:	xor    esi,DWORD PTR [eax]
  421d5d:	pop    edx
  421d5e:	bnd jne 0x421d14
  421d61:	rol    dl,1
  421d63:	clc    
  421d64:	out    0xf6,al
  421d66:	xchg   cl,bl
  421d68:	aaa    
  421d69:	dec    esp
  421d6a:	push   edx
  421d6b:	pop    ds
  421d6c:	xchg   ecx,eax
  421d6d:	jnp    0x421da0
  421d6f:	mov    dh,BYTE PTR fs:[esi-0x6e]
  421d73:	ficom  DWORD PTR [edx+0xc]
  421d76:	sub    ebp,DWORD PTR [esp+ecx*4-0x5d]
  421d7a:	cdq    
  421d7b:	test   al,0x74
  421d7d:	imul   bh
  421d7f:	and    esp,edi
  421d81:	loopne 0x421dc8
  421d83:	xchg   bh,dl
  421d85:	mov    ecx,0x17f2e092
  421d8a:	cmp    BYTE PTR [esi+0x34f40723],ch
  421d90:	push   edx
  421d91:	mov    edi,0xdb578592
  421d96:	data16 cld 
  421d98:	push   0x3e
  421d9a:	cmp    eax,0xd17106e4
  421d9f:	sbb    dh,BYTE PTR [esi+0x7e]
  421da2:	mov    esp,0x9af7f11e
  421da7:	push   edi
  421da8:	add    ch,al
  421daa:	outs   dx,BYTE PTR ds:[esi]
  421dab:	dec    ebp
  421dac:	jg     0x421df1
  421dae:	pop    edx
  421daf:	xchg   edx,eax
  421db0:	repz repnz adc eax,0x9f31cb4d
  421db7:	cmp    DWORD PTR cs:[eax-0x26b13a1b],0x351af161
  421dc2:	aas    
  421dc3:	mov    al,0x9d
  421dc5:	jmp    FWORD PTR [ecx]
  421dc7:	mov    al,ds:0x83d16051
  421dcc:	or     al,0x63
  421dce:	lods   al,BYTE PTR ds:[esi]
  421dcf:	inc    edx
  421dd0:	xor    edi,DWORD PTR [eax+0x17]
  421dd3:	add    BYTE PTR [ebp+0x1c],dl
  421dd6:	lea    ebp,[edx+0x183b5a60]
  421ddc:	mov    al,ds:0xfc36d0b0
  421de1:	adc    DWORD PTR [esi+eiz*4+0x5321ca5b],esi
  421de8:	out    0x58,eax
  421dea:	gs scas al,BYTE PTR es:[edi]
  421dec:	fiadd  DWORD PTR [edi]
  421dee:	xchg   ax,ax
  421df0:	mov    WORD PTR ds:0x2a5c9ef7,ds
  421df6:	arpl   si,ax
  421df8:	je     0x421ddf
  421dfa:	sbb    ebx,ecx
  421dfc:	dec    esi
  421dfd:	je     0x421ded
  421dff:	hlt    
  421e00:	sub    eax,0xad5416f
  421e05:	cmp    eax,0xe8e6fc79
  421e0a:	div    dh
  421e0c:	push   cs
  421e0d:	inc    esi
  421e0e:	cdq    
  421e0f:	cld    
  421e10:	mov    es,WORD PTR [eax+0x34]
  421e13:	or     ah,BYTE PTR [eax+edx*8+0x4e8a33c6]
  421e1a:	fwait
  421e1b:	or     BYTE PTR [ebp+0xddec375],cl
  421e21:	jns    0x77f8ac69
  421e27:	xor    ah,ch
  421e29:	stos   BYTE PTR es:[edi],al
  421e2a:	sbb    BYTE PTR [ebp-0x525b85d3],cl
  421e30:	jb     0x421e9f
  421e32:	cmp    dh,BYTE PTR [edx-0x60]
  421e35:	cmp    eax,edi
  421e37:	lea    edi,[edi]
  421e39:	lds    ebx,FWORD PTR [ebp-0x67]
  421e3c:	sub    dl,ah
  421e3e:	and    cl,BYTE PTR [edi-0x7f]
  421e41:	and    bl,BYTE PTR [edx+0x40552b49]
  421e47:	fs mov ebp,0x70226031
  421e4d:	push   edx
  421e4e:	dec    ebp
  421e4f:	leave  
  421e50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e51:	add    ch,dh
  421e53:	fiadd  WORD PTR [ecx-0x47]
  421e56:	fadd   DWORD PTR [ebx-0x14]
  421e59:	fs mov bh,bl
  421e5c:	sub    esi,esp
  421e5e:	dec    esi
  421e5f:	cli    
  421e60:	cmp    ebx,0x16aae6f8
  421e66:	add    esi,esi
  421e68:	or     ecx,DWORD PTR [ecx+0x41]
  421e6b:	scas   eax,DWORD PTR es:[edi]
  421e6c:	xchg   ebp,eax
  421e6d:	out    0x5,al
  421e6f:	(bad)  
  421e70:	int    0xaa
  421e72:	enter  0x2d11,0x7d
  421e76:	sahf   
  421e77:	addr16 push ebx
  421e79:	jnp    0x421ed0
  421e7b:	pushf  
  421e7c:	mov    ch,0x51
  421e7e:	cmc    
  421e7f:	dec    edx
  421e80:	or     BYTE PTR [ebx-0x4e],0xa0
  421e84:	cmp    al,0x6d
  421e86:	aam    0x7b
  421e88:	loope  0x421ee8
  421e8a:	enter  0xf1,0x78
  421e8e:	pop    edi
  421e8f:	mov    edx,0x7a1beefa
  421e94:	cmp    edi,DWORD PTR [edi+0x6e]
  421e97:	stos   DWORD PTR es:[edi],eax
  421e98:	mov    bh,0x27
  421e9a:	sbb    al,0xf2
  421e9c:	fwait
  421e9d:	imul   esp,DWORD PTR [ecx+0x296c5be6],0xeb6c8a79
  421ea7:	stos   DWORD PTR es:[edi],eax
  421ea8:	mov    al,ds:0xb760aca9
  421ead:	mov    ds:0xc0106e44,eax
  421eb2:	dec    ebp
  421eb3:	ja     0x421ef2
  421eb5:	dec    ecx
  421eb6:	ficomp WORD PTR [ebx-0x3840b276]
  421ebc:	pop    eax
  421ebd:	push   edi
  421ebe:	loop   0x421e4f
  421ec0:	sub    DWORD PTR [ecx+0x176a9f29],eax
  421ec6:	into   
  421ec7:	dec    BYTE PTR [esp+edi*4-0xa05d932]
  421ece:	test   DWORD PTR [esi],esp
  421ed0:	int3   
  421ed1:	inc    esi
  421ed2:	mov    ds:0xb119b5e9,eax
  421ed7:	xchg   esi,eax
  421ed8:	pusha  
  421ed9:	xchg   edx,eax
  421eda:	or     al,BYTE PTR [ecx-0xbcdcf35]
  421ee0:	call   0x72b1:0xd2ac6604
  421ee7:	or     eax,0xd7bcdb4e
  421eec:	dec    ebx
  421eed:	cmp    al,0x57
  421eef:	cwde   
  421ef0:	jo     0x421f71
  421ef2:	and    DWORD PTR ds:[eax],eax
  421ef5:	cld    
  421ef6:	push   edx
  421ef7:	pusha  
  421ef8:	jp     0x421f62
  421efa:	mov    dh,0x20
  421efc:	fsub   DWORD PTR [esi]
  421efe:	xor    esp,edi
  421f00:	jg     0x421e9d
  421f02:	lock xchg ebx,eax
  421f04:	xor    ebx,DWORD PTR [ecx-0x2587cf71]
  421f0a:	je     0x421f88
  421f0c:	or     edx,edi
  421f0e:	loopne 0x421ece
  421f10:	cmp    DWORD PTR [eax-0x66],ebx
  421f13:	jb     0x421f25
  421f15:	dec    eax
  421f16:	loop   0x421f90
  421f18:	stos   BYTE PTR es:[edi],al
  421f19:	in     eax,0x37
  421f1b:	imul   edi,DWORD PTR [eax],0x6a
  421f1e:	and    al,0xf6
  421f20:	xor    DWORD PTR [ebp+edx*8+0x1ea3cde],esp
  421f27:	pop    ds
  421f28:	mov    eax,0xe07081f0
  421f2d:	or     edi,DWORD PTR [esi]
  421f2f:	mov    ebp,0x3aa61fec
  421f34:	outs   dx,DWORD PTR ds:[esi]
  421f35:	and    BYTE PTR ss:[edx-0x67523941],bh
  421f3c:	repnz icebp 
  421f3e:	sti    
  421f3f:	dec    edx
  421f40:	(bad)  [edx]
  421f42:	(bad)  
  421f43:	out    dx,eax
  421f44:	sbb    al,0x3d
  421f46:	outs   dx,DWORD PTR ds:[esi]
  421f47:	jp     0x421efa
  421f49:	sbb    al,0x89
  421f4b:	leave  
  421f4c:	mov    bh,0x4
  421f4e:	push   es
  421f4f:	lods   eax,DWORD PTR ds:[esi]
  421f50:	mov    DWORD PTR [ebx+0x23],esp
  421f53:	mov    eax,0xe843b9e7
  421f58:	dec    esi
  421f59:	xchg   ebp,eax
  421f5a:	xor    al,ah
  421f5c:	mov    ah,0xba
  421f5e:	in     eax,0x4b
  421f60:	arpl   WORD PTR [eax+0x1a6d2cbd],si
  421f66:	xchg   edx,eax
  421f67:	push   esp
  421f68:	nop
  421f69:	in     al,dx
  421f6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f6b:	test   DWORD PTR [eax],ecx
  421f6d:	pop    esp
  421f6e:	cmp    eax,0x556d1ed8
  421f73:	or     DWORD PTR [ebp-0x475087c0],esi
  421f79:	jmp    0x92ee:0xc2eb3e4e
  421f80:	aam    0xa6
  421f82:	pop    ecx
  421f83:	jle    0x421fff
  421f85:	or     eax,0x461efcf1
  421f8a:	or     cl,BYTE PTR [eax-0x47f6a736]
  421f90:	fcmovnu st,st(0)
  421f92:	jl     0x421f28
  421f94:	das    
  421f95:	lea    ebx,[ebx]
  421f97:	das    
  421f98:	cld    
  421f99:	outs   dx,DWORD PTR ds:[esi]
  421f9a:	cmc    
  421f9b:	xchg   ebx,eax
  421f9c:	push   ds
  421f9d:	fnstcw WORD PTR [ebx]
  421f9f:	xlat   BYTE PTR ds:[ebx]
  421fa0:	mov    ebp,0x2998d164
  421fa5:	cwde   
  421fa6:	dec    ecx
  421fa7:	add    al,0x58
  421fa9:	int    0xff
  421fab:	adc    DWORD PTR [ebp+ecx*2-0x261aa5e1],0xfb1e3ea9
  421fb6:	lea    ebx,[ecx]
  421fb8:	les    ecx,FWORD PTR [edi]
  421fba:	(bad)  [eax-0x33]
  421fbd:	push   ebp
  421fbe:	imul   esi,DWORD PTR [ebp-0x53],0x3e5c8546
  421fc5:	in     al,dx
  421fc6:	test   eax,0x14f5f25d
  421fcb:	xlat   BYTE PTR ds:[ebx]
  421fcc:	fidiv  WORD PTR [ebx]
  421fce:	mov    al,0x7b
  421fd0:	mov    dh,0xd5
  421fd2:	ds mov ch,0xe3
  421fd5:	mov    ecx,0xc4745425
  421fda:	xor    edx,DWORD PTR [eax]
  421fdc:	je     0x421fcb
  421fde:	push   ebx
  421fdf:	scas   eax,DWORD PTR es:[edi]
  421fe0:	in     eax,0x88
  421fe2:	inc    ebx
  421fe3:	sub    BYTE PTR [ecx-0x242e659a],0x87
  421fea:	adc    al,0x5
  421fec:	clc    
  421fed:	scas   al,BYTE PTR es:[edi]
  421fee:	ds hlt 
  421ff0:	xor    bl,ch
  421ff2:	clc    
  421ff3:	or     BYTE PTR [edx-0x33],al
  421ff6:	sti    
  421ff7:	cld    
  421ff8:	cmp    eax,0x41548684
  421ffd:	or     DWORD PTR [eax+0x6e6a3947],ebp
  422003:	sbb    ebp,DWORD PTR [esi-0x6126e13]
  422009:	data16 jecxz 0x421fcd
  42200c:	ffreep st(0)
  42200e:	sbb    al,BYTE PTR [edi+0x14]
  422011:	test   al,0x34
  422013:	pusha  
  422014:	jecxz  0x42200f
  422016:	dec    edx
  422017:	in     al,0x61
  422019:	loop   0x422092
  42201b:	inc    edi
  42201c:	xchg   ecx,eax
  42201d:	ror    DWORD PTR [ecx+edi*4-0x561cb208],1
  422024:	fild   WORD PTR [ecx+0x15]
  422027:	cmc    
  422028:	rcl    ah,1
  42202a:	sbb    BYTE PTR [ecx],0x9b
  42202d:	js     0x42202b
  42202f:	or     ch,BYTE PTR [ebp+0x4b297ed1]
  422035:	retf   
  422036:	pop    eax
  422037:	call   FWORD PTR [ecx+0x299c4930]
  42203d:	fimul  DWORD PTR [eax+eax*1-0x3d]
  422041:	or     eax,0x2d6b89e0
  422046:	mov    ds:0x5cd3e382,al
  42204b:	or     eax,0xd81ccb71
  422050:	pop    esp
  422051:	rcr    BYTE PTR [eax+ebp*4+0x31],1
  422055:	js     0x42205e
  422057:	mov    fs,WORD PTR [eax-0x59afee6f]
  42205d:	xchg   ebp,eax
  42205e:	jne    0x42201f
  422060:	popf   
  422061:	or     ch,dh
  422063:	mov    ch,0xe
  422065:	out    0xca,al
  422067:	leave  
  422068:	fstp   TBYTE PTR [eax+0x684444c1]
  42206e:	out    0x9a,eax
  422070:	mov    WORD PTR [ecx+0x4],?
  422073:	shr    DWORD PTR [edi+0x6ad4e93f],cl
  422079:	(bad)  
  42207a:	mov    dl,0x6d
  42207c:	sub    DWORD PTR [ebx-0x31],esp
  42207f:	repz pop ds
  422081:	or     eax,0x4ae26de0
  422086:	inc    eax
  422087:	cmp    BYTE PTR [edi-0x3ddc7fcf],dl
  42208d:	sub    eax,0xdf223a0b
  422092:	inc    ebx
  422093:	xchg   ebp,eax
  422094:	repnz xchg esi,eax
  422096:	add    eax,0x3b78c5da
  42209b:	mov    eax,ds:0xe416c3ad
  4220a0:	arpl   WORD PTR ds:0xde1fec21,si
  4220a6:	imul   ebx,edi,0x92fb9a66
  4220ac:	and    dl,ch
  4220ae:	daa    
  4220af:	cs retf 
  4220b1:	inc    ecx
  4220b2:	pop    es
  4220b3:	adc    esi,DWORD PTR [edi-0x32]
  4220b6:	popf   
  4220b7:	out    dx,al
  4220b8:	daa    
  4220b9:	or     al,0x8e
  4220bb:	or     dl,BYTE PTR [esi-0x5b58b24b]
  4220c1:	sahf   
  4220c2:	(bad)
  4220c5:	dec    esp
  4220c6:	retf   0x51f1
  4220c9:	jb     0x42211c
  4220cb:	sbb    eax,0x7a518c54
  4220d0:	and    eax,0xc73a5ba
  4220d5:	xchg   esi,eax
  4220d6:	out    0xb2,eax
  4220d8:	jmp    0xb6f6573c
  4220dd:	mov    ecx,0x3d31a88
  4220e2:	rol    edi,1
  4220e4:	ds jns 0x4220a8
  4220e7:	mov    bl,0xc6
  4220e9:	mov    al,ds:0xe0dec3b
  4220ee:	fisttp WORD PTR [eax+ecx*1-0x586f31c5]
  4220f5:	fdiv   st,st(1)
  4220f7:	fmul   QWORD PTR [esi-0x3ec32c46]
  4220fd:	into   
  4220fe:	xchg   edx,eax
  4220ff:	inc    eax
  422100:	imul   ebp,esi,0xffffff98
  422103:	dec    edx
  422104:	je     0x422099
  422106:	jno    0x4220e2
  422108:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422109:	add    BYTE PTR [edi],ch
  42210b:	ins    BYTE PTR es:[edi],dx
  42210c:	mov    cl,0x10
  42210e:	push   esp
  42210f:	push   ss
  422110:	push   ebx
  422111:	stos   DWORD PTR es:[edi],eax
  422112:	sbb    al,0xfd
  422114:	jne    0x4220f0
  422116:	js     0x422102
  422118:	into   
  422119:	mov    ebp,0xf19d08df
  42211e:	fadd   QWORD PTR [ebp+0x63]
  422121:	and    eax,0x709dfafd
  422126:	retf   
  422127:	push   ss
  422128:	jmp    0xc1fe9ef2
  42212d:	add    DWORD PTR [ebx+eax*1],0x34
  422131:	jnp    0x4220bb
  422133:	and    DWORD PTR [edi-0x68],eax
  422136:	mov    ds:0x5d9abd0c,al
  42213b:	test   ah,0x38
  42213e:	or     edx,DWORD PTR [ebp+0x4f89dd04]
  422144:	lahf   
  422145:	loopne 0x4220d8
  422147:	cmp    BYTE PTR [ecx+0x4267f6dc],bh
  42214d:	mov    ebp,0x8207ab38
  422152:	mov    ebp,0x425307ed
  422157:	fnstcw WORD PTR [ecx-0x65]
  42215a:	mov    eax,0x51c11c9
  42215f:	adc    eax,0xb4a069ba
  422164:	shl    edx,cl
  422166:	test   cl,ah
  422168:	sbb    al,0x83
  42216a:	push   eax
  42216b:	fst    DWORD PTR [ecx]
  42216d:	mov    eax,ds:0x97aa981b
  422172:	popf   
  422173:	push   edi
  422174:	ins    BYTE PTR es:[edi],dx
  422175:	pusha  
  422176:	sar    BYTE PTR [ebx-0x24b5ae22],cl
  42217c:	mov    ds:0xeb15a41d,eax
  422181:	adc    cl,BYTE PTR [edi+0x4a]
  422184:	into   
  422185:	nop
  422186:	pop    edi
  422187:	sbb    cl,BYTE PTR [esi+edi*1+0x6bc86ad0]
  42218e:	mov    DWORD PTR [ecx+0x30],0xda95522c
  422195:	stos   BYTE PTR es:[edi],al
  422196:	mov    ?,WORD PTR [edx]
  422198:	mov    esi,0x611de4c2
  42219d:	cmp    al,0xc5
  42219f:	push   esi
  4221a0:	or     DWORD PTR [edx],edi
  4221a2:	retf   
  4221a3:	cdq    
  4221a4:	mov    ecx,0xf70d2940
  4221a9:	repz xlat BYTE PTR ds:[ebx]
  4221ab:	jge    0x422202
  4221ad:	push   eax
  4221ae:	in     al,0x23
  4221b0:	mov    WORD PTR [ebp-0x6725281a],gs
  4221b6:	adc    DWORD PTR [eax+0x64],eax
  4221b9:	inc    esi
  4221ba:	fs jae 0x422149
  4221bd:	leave  
  4221be:	pop    ds
  4221bf:	or     eax,0x792ca7f6
  4221c4:	test   DWORD PTR [ecx+0x4e],ecx
  4221c7:	enter  0x323f,0x4
  4221cb:	pop    ebx
  4221cc:	sub    esi,DWORD PTR [ecx]
  4221ce:	loope  0x4221e8
  4221d0:	push   esp
  4221d1:	call   0xcdf:0xa00cf501
  4221d8:	scas   eax,DWORD PTR es:[edi]
  4221d9:	in     eax,0xa2
  4221db:	xor    eax,0xb8b2c290
  4221e0:	mov    edx,0x7aedfe82
  4221e5:	jl     0x422199
  4221e7:	pop    es
  4221e8:	popa   
  4221e9:	jle    0x42224a
  4221eb:	shl    DWORD PTR [esi*2+0x61ba3607],cl
  4221f2:	(bad)  
  4221f3:	sbb    DWORD PTR [ebx-0x1d],ebx
  4221f6:	fdiv   st,st(1)
  4221f8:	cmp    eax,0xace43d8a
  4221fd:	test   ebp,esp
  4221ff:	sub    ah,BYTE PTR [eax]
  422201:	data16 loopne 0x422199
  422204:	ficomp DWORD PTR [ebp-0x12d8092b]
  42220a:	xor    ch,BYTE PTR ds:0x25d38e5d
  422210:	lea    edi,[esi+0x35ccfb93]
  422216:	clc    
  422217:	int3   
  422218:	pusha  
  422219:	pop    ebp
  42221a:	sub    eax,0xffffffa2
  42221d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42221e:	add    al,0x4e
  422220:	jne    0x42220c
  422222:	dec    edx
  422223:	inc    edi
  422224:	out    0x13,al
  422226:	sub    BYTE PTR [edi-0x58],dh
  422229:	je     0x4221f4
  42222b:	ss push esi
  42222d:	cdq    
  42222e:	mov    dl,BYTE PTR [ebp+0x41c9aaea]
  422234:	ds ret 
  422236:	pop    eax
  422237:	outs   dx,BYTE PTR ds:[esi]
  422238:	and    DWORD PTR [ecx],ecx
  42223a:	pop    esp
  42223b:	outs   dx,BYTE PTR ds:[esi]
  42223c:	add    al,0x5d
  42223e:	ins    BYTE PTR es:[edi],dx
  42223f:	lods   al,BYTE PTR ds:[esi]
  422240:	test   DWORD PTR [esi],0xafaf254d
  422246:	sub    al,0xe3
  422248:	je     0x422256
  42224a:	ds (bad) 
  42224c:	scas   eax,DWORD PTR es:[edi]
  42224d:	popf   
  42224e:	or     DWORD PTR [ebp+eax*1+0x34],esp
  422252:	jge    0x4222a8
  422254:	push   ss
  422255:	lock and ebx,esp
  422258:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422259:	push   ebx
  42225a:	mov    ch,0xb8
  42225c:	pop    esi
  42225d:	fstp   QWORD PTR ds:0x31dc6f99
  422263:	jecxz  0x4222d7
  422265:	jb     0x422238
  422267:	mov    bh,0x83
  42226a:	dec    esp
  42226b:	mov    ch,0x84
  42226d:	xor    eax,edi
  42226f:	sbb    eax,0x47b8bf4b
  422274:	cmc    
  422275:	xchg   edi,eax
  422276:	mov    fs,WORD PTR [edx+0x7ff6abdc]
  42227c:	daa    
  42227d:	push   ebp
  42227e:	in     al,dx
  42227f:	mov    ebx,0x178e1e2b
  422284:	inc    ebx
  422285:	js     0x422299
  422287:	ds mov eax,0x90b92941
  42228d:	adc    al,0xd1
  42228f:	loope  0x4222ef
  422291:	or     al,0xc8
  422293:	mov    ds,WORD PTR [edi]
  422295:	scas   al,BYTE PTR es:[edi]
  422296:	stos   DWORD PTR es:[edi],eax
  422297:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422298:	inc    eax
  422299:	mov    ecx,0x7a8423a1
  42229e:	cmp    DWORD PTR [ebp-0x21547fcc],eax
  4222a4:	out    dx,eax
  4222a5:	jg     0x42225e
  4222a7:	shl    bl,cl
  4222a9:	mov    ecx,0x28e15494
  4222ae:	xchg   esi,eax
  4222af:	xchg   esp,eax
  4222b0:	loope  0x4222ca
  4222b2:	xor    al,0x94
  4222b4:	ror    ch,cl
  4222b6:	sbb    al,BYTE PTR [bx+si+0x61fe]
  4222bb:	xchg   ebx,eax
  4222bc:	sbb    DWORD PTR [ebx+0x34],ebx
  4222bf:	pop    ebp
  4222c0:	xchg   ebp,eax
  4222c1:	bound  eax,QWORD PTR [ecx+eax*8-0x787a2fff]
  4222c8:	jge    0x4222c8
  4222ca:	pop    ebx
  4222cb:	xchg   edi,eax
  4222cc:	sub    al,0xc1
  4222ce:	inc    ebp
  4222cf:	mov    cl,0xad
  4222d1:	lock mov edx,0x94178f9
  4222d7:	or     eax,0x9a9e443a
  4222dc:	dec    ebp
  4222dd:	cmp    al,0xfd
  4222df:	mov    ebp,0x2d4d15df
  4222e4:	or     edx,0xffc95df7
  4222ea:	popf   
  4222eb:	bound  ebp,QWORD PTR [edx+0x14]
  4222ee:	scas   eax,DWORD PTR es:[edi]
  4222ef:	repz sbb eax,0x8dde16c
  4222f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222f6:	outs   dx,BYTE PTR ds:[esi]
  4222f7:	add    al,0xfa
  4222f9:	and    eax,0x97e72ffa
  4222fe:	pop    edi
  4222ff:	fimul  DWORD PTR [edx]
  422301:	mov    eax,0x4d137073
  422306:	std    
  422307:	ins    DWORD PTR es:[edi],dx
  422308:	inc    edx
  422309:	das    
  42230a:	push   ds
  42230b:	push   esi
  42230c:	xchg   esp,eax
  42230d:	adc    ah,BYTE PTR [ebx-0x73]
  422310:	cmp    esi,DWORD PTR [edi+0xd8c667d]
  422316:	xor    eax,0x1ebd823
  42231b:	ret    0x748f
  42231e:	aas    
  42231f:	mov    ds:0xf761516,al
  422324:	cmp    esp,esp
  422326:	mov    esi,0xf2227a0
  42232b:	(bad)  
  42232c:	cmp    BYTE PTR [eax+eax*4+0x21ef1568],al
  422333:	out    dx,eax
  422334:	cmp    esp,ebx
  422336:	mov    ds:0xfeeb296a,eax
  42233b:	jmp    0xcb31d92d
  422340:	cld    
  422341:	enter  0xd9a7,0xab
  422345:	retw   0x8826
  422349:	popa   
  42234a:	retf   0xc894
  42234d:	push   eax
  42234e:	cdq    
  42234f:	mov    DWORD PTR [ebx+ebp*4],eax
  422352:	test   al,0x47
  422354:	fdivr  QWORD PTR [esi+ebp*2-0x47]
  422358:	jae    0x42235a
  42235a:	push   ebp
  42235b:	sbb    DWORD PTR [esi-0x27347541],0xffffffd9
  422362:	inc    esi
  422363:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422364:	nop
  422365:	loope  0x422315
  422367:	xor    cl,ah
  422369:	sbb    al,0x5c
  42236b:	mov    eax,ds:0x797fd1bc
  422370:	sahf   
  422371:	sbb    al,0x56
  422373:	out    0xd4,al
  422375:	outs   dx,DWORD PTR ds:[esi]
  422376:	ss or  bh,0xe4
  42237a:	loopne 0x422369
  42237c:	sahf   
  42237d:	addr16 jns 0x4223d8
  422380:	out    dx,eax
  422381:	adc    eax,0xa43c6af7
  422386:	and    al,0xfd
  422388:	into   
  422389:	cmp    eax,0xcfa718be
  42238e:	push   cs
  42238f:	jae    0x42233f
  422391:	inc    edi
  422392:	fs je  0x42240b
  422395:	loopne 0x422380
  422397:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422398:	in     eax,dx
  422399:	xchg   ecx,eax
  42239a:	mov    bh,BYTE PTR [eax]
  42239c:	mov    esi,0x561bde3d
  4223a1:	dec    eax
  4223a2:	imul   ebp,DWORD PTR [eax+0x66],0x3e
  4223a6:	jns    0x422353
  4223a8:	sahf   
  4223a9:	push   ds
  4223aa:	pop    ebx
  4223ab:	cmc    
  4223ac:	xchg   edx,eax
  4223ad:	add    esp,DWORD PTR [edx]
  4223af:	xchg   esp,eax
  4223b0:	js     0x4223ca
  4223b2:	loopne 0x42239a
  4223b4:	jne    0x42240e
  4223b6:	xchg   ecx,eax
  4223b7:	xlat   BYTE PTR ds:[ebx]
  4223b8:	jo     0x4223d9
  4223ba:	xchg   ebx,eax
  4223bb:	cmp    eax,0x28141182
  4223c0:	push   edx
  4223c1:	inc    ebx
  4223c2:	adc    dl,BYTE PTR [edi+0x65]
  4223c5:	cmp    al,0xfc
  4223c7:	cld    
  4223c8:	imul   BYTE PTR [edi-0x3c]
  4223cb:	pop    eax
  4223cc:	fmul   QWORD PTR [edi+0x46]
  4223cf:	sbb    eax,0x34f5e33d
  4223d4:	retf   0xd41b
  4223d7:	(bad)  
  4223d8:	xchg   esp,eax
  4223d9:	or     al,0xdf
  4223db:	xchg   esp,eax
  4223dc:	fisub  DWORD PTR [eax]
  4223de:	pop    edi
  4223df:	xchg   edx,eax
  4223e0:	fisub  DWORD PTR [ecx+0x107b6ef0]
  4223e6:	jb     0x4223f1
  4223e8:	xchg   esi,eax
  4223e9:	hlt    
  4223ea:	mov    dh,0x2b
  4223ec:	inc    edi
  4223ed:	cdq    
  4223ee:	xlat   BYTE PTR ds:[ebx]
  4223ef:	mov    dl,0x41
  4223f1:	xlat   BYTE PTR ds:[ebx]
  4223f2:	xor    esp,DWORD PTR [edx]
  4223f4:	popa   
  4223f5:	dec    esp
  4223f6:	in     al,dx
  4223f7:	aaa    
  4223f8:	int    0x7d
  4223fa:	pushf  
  4223fb:	stos   DWORD PTR es:[edi],eax
  4223fc:	aam    0xeb
  4223fe:	jb     0x422406
  422400:	mov    ecx,0x90633ba3
  422405:	jl     0x4223e5
  422407:	(bad)  [eax]
  422409:	ds in  eax,dx
  42240b:	add    BYTE PTR [ebp+0x5b],dh
  42240e:	fcomi  st,st(6)
  422410:	ja     0x42241a
  422412:	int3   
  422413:	out    dx,eax
  422414:	dec    ebx
  422415:	jmp    0x422478
  422417:	or     al,BYTE PTR [esi-0x33575821]
  42241d:	dec    eax
  42241e:	xchg   esp,eax
  42241f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422420:	add    DWORD PTR ds:0x62fbd6ea,esi
  422426:	xchg   ebx,eax
  422427:	jg     0x42247e
  422429:	or     al,BYTE PTR [edi-0x13]
  42242c:	add    al,bh
  42242e:	push   ebp
  42242f:	mov    eax,ds:0xce0ed3e8
  422434:	lahf   
  422435:	or     BYTE PTR [ebx+0x37],dl
  422438:	inc    eax
  422439:	stos   BYTE PTR es:[edi],al
  42243a:	jp     0x422459
  42243c:	push   ebx
  42243d:	xchg   edi,eax
  42243e:	fs push 0x9c3a3f4d
  422444:	mov    ecx,0xcc86c920
  422449:	test   BYTE PTR [eax+0x11],dl
  42244c:	push   esp
  42244d:	outs   dx,BYTE PTR ds:[esi]
  42244e:	ror    BYTE PTR [ebx+0x6c],cl
  422451:	inc    ebp
  422452:	mov    eax,ds:0x905d87ad
  422457:	mov    ss,WORD PTR [edi+0x1286e229]
  42245d:	in     al,dx
  42245e:	hlt    
  42245f:	push   cs
  422460:	fbld   TBYTE PTR [edx]
  422462:	pop    edx
  422463:	lods   eax,DWORD PTR ds:[esi]
  422464:	outs   dx,DWORD PTR ds:[esi]
  422465:	mov    dh,0xd9
  422467:	jno    0x42247b
  422469:	inc    ecx
  42246a:	clc    
  42246b:	mov    bh,0xbd
  42246d:	mov    dh,0xb1
  42246f:	cmc    
  422470:	dec    esp
  422471:	and    al,0xe6
  422473:	mov    edi,0x9424ec61
  422479:	ins    DWORD PTR es:[edi],dx
  42247a:	scas   al,BYTE PTR es:[edi]
  42247b:	add    BYTE PTR [ebp-0x54],dh
  42247e:	and    ebp,DWORD PTR [esi-0x2d]
  422481:	xchg   ebp,esp
  422483:	adc    bl,ah
  422485:	in     al,dx
  422486:	and    cl,ch
  422488:	fild   QWORD PTR [edi+edx*4]
  42248b:	dec    esp
  42248c:	xlat   BYTE PTR ds:[ebx]
  42248d:	jl     0x422445
  42248f:	sub    DWORD PTR [ebx+0x478fad3c],0x40
  422496:	mov    BYTE PTR [ecx],0x24
  422499:	sub    al,0xee
  42249b:	push   edx
  42249c:	jns    0x4224dd
  42249e:	retf   0xff3b
  4224a1:	xor    eax,0x6ec93fa3
  4224a6:	inc    ebx
  4224a7:	int3   
  4224a8:	push   esi
  4224a9:	aam    0xa1
  4224ab:	xchg   esi,eax
  4224ac:	clc    
  4224ad:	and    cl,BYTE PTR [ebx-0x9]
  4224b0:	and    eax,0x581e3d7c
  4224b5:	or     eax,0xb3d676c5
  4224ba:	cwde   
  4224bb:	std    
  4224bc:	fcomi  st,st(5)
  4224be:	sub    eax,0x315181f0
  4224c3:	into   
  4224c4:	or     edx,DWORD PTR [edi+0x34]
  4224c7:	lock mov esi,0xc7431840
  4224cd:	outs   dx,BYTE PTR ds:[esi]
  4224ce:	jno    0x4224a3
  4224d0:	push   0xc2c7d23f
  4224d5:	jecxz  0x422478
  4224d7:	mov    bl,BYTE PTR [ebp+eax*4+0x7a80e94b]
  4224de:	mov    esi,0xaf85c8a
  4224e3:	fsubr  DWORD PTR gs:[ebx-0x39]
  4224e7:	icebp  
  4224e8:	jl     0x4224fb
  4224ea:	add    bl,BYTE PTR [edx-0x1b]
  4224ed:	jbe    0x422568
  4224ef:	das    
  4224f0:	clc    
  4224f1:	addr16 out 0x6a,al
  4224f4:	push   eax
  4224f5:	mov    al,ds:0x3602b1c9
  4224fa:	mov    ds:0x5201f5ae,al
  4224ff:	pop    eax
  422500:	lods   eax,DWORD PTR ds:[esi]
  422501:	cmp    al,0x6a
  422503:	retf   
  422504:	rcr    BYTE PTR [esi-0x7ac43517],1
  42250a:	mov    edi,0x92f050df
  42250f:	cld    
  422510:	jno    0x42252d
  422512:	aam    0xd6
  422514:	jmp    0x24b0:0x58c103b0
  42251b:	lea    esp,[ebx]
  42251d:	ins    DWORD PTR es:[edi],dx
  42251e:	ret    0x59eb
  422521:	push   es
  422522:	cmp    al,0x59
  422524:	xor    bh,BYTE PTR [esi+0x42]
  422527:	ret    
  422528:	add    eax,0x3cdbbf13
  42252d:	jle    0x422569
  42252f:	adc    ebp,ecx
  422531:	repnz or edi,DWORD PTR [ebx-0xe]
  422535:	dec    esi
  422536:	mov    esp,0x65f20886
  42253b:	fdivr  QWORD PTR [ebx]
  42253d:	lods   eax,DWORD PTR ds:[esi]
  42253e:	in     al,dx
  42253f:	jne    0x4224f1
  422541:	rol    DWORD PTR [eax+eiz*8-0x3a690d64],1
  422548:	adc    esp,edi
  42254a:	ins    DWORD PTR es:[edi],dx
  42254b:	lods   al,BYTE PTR ds:[esi]
  42254c:	dec    esp
  42254d:	(bad)  
  42254e:	sub    esi,DWORD PTR [ebx+ebx*2+0xaa00a78]
  422555:	mov    ds:0x1b0c440,al
  42255a:	adc    eax,0x7d888ef
  42255f:	add    al,0x7a
  422561:	nop
  422562:	fisttp QWORD PTR [ebx-0x696d5d3c]
  422568:	cdq    
  422569:	sahf   
  42256a:	loope  0x4224f2
  42256c:	mov    esi,0xb1273767
  422572:	ins    BYTE PTR es:[edi],dx
  422573:	loope  0x42258c
  422575:	arpl   cx,si
  422577:	dec    ebx
  422578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422579:	xchg   BYTE PTR [edx-0x6014a425],dl
  42257f:	pusha  
  422580:	add    DWORD PTR [ebp+0x6b2ed9ac],edx
  422586:	jb     0x42254a
  422588:	imul   esp,DWORD PTR [ebp-0x4f],0xf57ff3bf
  42258f:	cwde   
  422590:	adc    DWORD PTR [edi+esi*1],ebp
  422593:	test   bh,0xb2
  422596:	lds    eax,FWORD PTR [eax+0x45be1ee4]
  42259c:	outs   dx,BYTE PTR ds:[esi]
  42259d:	sbb    DWORD PTR [ecx],esi
  42259f:	popf   
  4225a0:	aad    0x88
  4225a2:	push   ecx
  4225a3:	inc    ecx
  4225a4:	pop    eax
  4225a5:	aaa    
  4225a6:	add    DWORD PTR [edi-0x34],0xe2172467
  4225ad:	in     al,dx
  4225ae:	aas    
  4225af:	push   ds
  4225b0:	pop    edx
  4225b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225b2:	xchg   esi,eax
  4225b3:	sahf   
  4225b4:	or     eax,0x3730d13
  4225b9:	pop    edi
  4225ba:	in     al,dx
  4225bb:	mov    dh,0x23
  4225bd:	cld    
  4225be:	mov    ds:0x4c8ccf54,al
  4225c3:	push   0xcbb18b1e
  4225c8:	lods   al,BYTE PTR ds:[esi]
  4225c9:	sbb    al,0xe4
  4225cb:	xchg   ecx,eax
  4225cc:	(bad)  
  4225ce:	sar    DWORD PTR [eax+edx*1],1
  4225d1:	ss dec esp
  4225d3:	test   DWORD PTR [eax-0x3b3a69fc],eax
  4225d9:	adc    ch,bl
  4225db:	fmul   QWORD PTR [edx-0x70e240cf]
  4225e1:	loop   0x422617
  4225e3:	call   0x7e5f:0xa66b33f9
  4225ea:	sub    DWORD PTR [ecx+eax*2+0x30fa12a0],edx
  4225f1:	push   edi
  4225f2:	add    al,0x82
  4225f4:	and    edx,ebx
  4225f6:	icebp  
  4225f7:	ss es repz cmp eax,0x5567bfc
  4225ff:	xchg   ch,al
  422601:	jno    0x4225fa
  422603:	aas    
  422604:	xchg   DWORD PTR [ebx+0x11],esp
  422607:	pop    ss
  422608:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422609:	enter  0xc21b,0xb8
  42260d:	jo     0x4225e5
  42260f:	arpl   WORD PTR [edx],ax
  422611:	iret   
  422612:	xor    DWORD PTR [ecx+eax*1-0x647e3bc2],0xbca01df6
  42261d:	in     eax,0xbf
  42261f:	lahf   
  422620:	xor    BYTE PTR [edx+edi*8+0x6a082730],dl
  422627:	dec    eax
  422628:	bound  ebx,QWORD PTR [ebp+0x13e97a27]
  42262e:	sbb    BYTE PTR [ebx],bl
  422630:	and    DWORD PTR [edx-0x1344bfc7],edx
  422636:	in     eax,dx
  422637:	pop    esi
  422638:	ins    DWORD PTR es:[edi],dx
  422639:	cmc    
  42263a:	in     al,dx
  42263b:	pop    ds
  42263c:	stos   BYTE PTR es:[edi],al
  42263d:	adc    eax,0xba6791f2
  422642:	cld    
  422643:	pushf  
  422644:	shl    al,0x87
  422647:	out    0x24,eax
  422649:	mov    edi,0x5f652d93
  42264e:	mov    ebx,0xf9a6d498
  422653:	ja     0x4226ba
  422655:	stos   DWORD PTR es:[edi],eax
  422656:	push   ecx
  422657:	push   ds
  422658:	retf   
  422659:	xchg   ebp,eax
  42265a:	cmp    eax,0x72886ee
  42265f:	ins    BYTE PTR es:[edi],dx
  422660:	adc    eax,0x84c5b75a
  422665:	ret    
  422666:	add    edx,edi
  422668:	nop
  422669:	and    eax,edi
  42266b:	mov    eax,ds:0x454ab19d
  422670:	aaa    
  422671:	test   DWORD PTR [ebx+0x123d9881],esp
  422677:	xchg   ebp,eax
  422678:	mov    cl,0xa4
  42267a:	pop    ecx
  42267b:	pop    edx
  42267c:	jg     0x4226c4
  42267e:	int3   
  42267f:	dec    esi
  422680:	jl     0x422640
  422682:	inc    ecx
  422683:	pusha  
  422684:	sub    al,0xd8
  422686:	(bad)  
  422687:	pop    eax
  422688:	nop
  422689:	test   eax,0x6ee35258
  42268e:	call   0x686e:0xd35299f4
  422695:	push   edi
  422696:	outs   dx,DWORD PTR ds:[esi]
  422697:	jecxz  0x4226ee
  422699:	push   ds
  42269a:	pop    ebp
  42269b:	mov    dh,0x77
  42269d:	dec    esp
  42269e:	fadd   st(7),st
  4226a0:	push   edx
  4226a1:	mov    ds,eax
  4226a3:	iret   
  4226a4:	jp     0x422690
  4226a6:	pop    ebx
  4226a7:	dec    ebp
  4226a8:	rcl    ecx,0xfb
  4226ab:	pusha  
  4226ac:	cmp    dl,BYTE PTR [esi+0x50]
  4226af:	xor    DWORD PTR [eax+edi*8-0x57],ecx
  4226b3:	icebp  
  4226b4:	xchg   esi,eax
  4226b5:	jne    0x422685
  4226b7:	mov    edx,0x2dd94f34
  4226bc:	push   0xb5909e19
  4226c1:	push   ebp
  4226c2:	(bad)  
  4226c3:	pop    ss
  4226c4:	cmc    
  4226c5:	cmp    dh,BYTE PTR [ebp-0x53]
  4226c8:	aad    0x71
  4226ca:	sbb    DWORD PTR [eax+0x2aef67ca],ebp
  4226d0:	and    edx,edi
  4226d2:	mov    esp,0x702bd770
  4226d7:	call   0x481a:0x56b5462a
  4226de:	fdiv   QWORD PTR [edi+0x7d]
  4226e1:	mov    esi,0xc6f4d398
  4226e6:	add    eax,0x3fef165c
  4226eb:	jle    0x422714
  4226ed:	dec    edx
  4226ee:	fs pop ss
  4226f0:	aam    0x5b
  4226f2:	dec    edx
  4226f3:	es stc 
  4226f5:	retf   
  4226f6:	aam    0xc
  4226f8:	or     DWORD PTR [edi-0x70],esi
  4226fb:	adc    ah,BYTE PTR [ebp+0x75a3ce50]
  422701:	xor    DWORD PTR [edi+0x79],ecx
  422704:	xchg   BYTE PTR [ecx],ah
  422706:	(bad)  
  422707:	popa   
  422708:	pop    eax
  422709:	xchg   ebx,eax
  42270a:	out    dx,eax
  42270b:	sub    esp,esi
  42270d:	loope  0x422767
  42270f:	int3   
  422710:	popa   
  422711:	ss pop ds
  422713:	pop    ebp
  422714:	inc    ebx
  422715:	inc    ecx
  422716:	lahf   
  422717:	cmp    eax,0x16f9cf25
  42271c:	dec    ebp
  42271d:	adc    DWORD PTR [edx+0x68],eax
  422720:	retf   
  422721:	lea    edi,[edx]
  422723:	adc    esp,edi
  422725:	aas    
  422726:	addr16 into 
  422728:	mov    cs,WORD PTR [ebp-0x6fbc21a5]
  42272e:	pop    edx
  42272f:	ret    
  422730:	std    
  422731:	add    eax,DWORD PTR [esi+edi*4]
  422734:	std    
  422735:	dec    ecx
  422736:	in     al,0xf0
  422738:	jle    0x42273a
  42273a:	xor    al,0x32
  42273c:	lods   al,BYTE PTR ds:[esi]
  42273d:	(bad)  
  42273e:	into   
  42273f:	xlat   BYTE PTR ds:[ebx]
  422740:	jle    0x4227b2
  422742:	inc    edx
  422743:	add    WORD PTR [ecx],si
  422746:	mov    ds:0x8e7f10f8,al
  42274b:	cmp    al,0x38
  42274d:	int3   
  42274e:	mov    ebx,0xaa8b298f
  422753:	ins    DWORD PTR es:[edi],dx
  422754:	inc    ebx
  422755:	push   eax
  422756:	sbb    al,0x51
  422758:	mov    esi,0xef8eba16
  42275d:	fstp   TBYTE PTR [edx]
  42275f:	mov    eax,ds:0xf4d88d22
  422764:	or     dh,BYTE PTR [esp+ebp*8-0x1d329699]
  42276b:	hlt    
  42276c:	and    DWORD PTR [ebp-0x3b],ecx
  42276f:	fs mov ecx,0x58d3ee4a
  422775:	popf   
  422776:	mov    esp,0xc1400a04
  42277b:	xor    al,0x3d
  42277d:	imul   esp,DWORD PTR ds:0xdc2b8d68,0xd10b7920
  422787:	stc    
  422788:	adc    dl,BYTE PTR [edi+ebx*4-0x5f2d25be]
  42278f:	(bad)  
  422791:	out    0xe2,eax
  422793:	(bad)  
  422794:	push   ebp
  422795:	pop    eax
  422796:	cdq    
  422797:	in     al,dx
  422798:	pusha  
  422799:	mov    edx,0xb6ad3b42
  42279e:	xor    al,0xe7
  4227a0:	push   esi
  4227a1:	push   edi
  4227a2:	xchg   ebx,eax
  4227a3:	push   edx
  4227a4:	std    
  4227a5:	cmp    edx,ecx
  4227a7:	push   ebx
  4227a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227a9:	mov    bl,0x66
  4227ab:	pop    eax
  4227ac:	xor    al,0xf8
  4227ae:	and    edx,ecx
  4227b0:	mov    dh,0x0
  4227b2:	ror    DWORD PTR [ebx+0x6c],cl
  4227b5:	les    esp,FWORD PTR [esi+0x18a7ee2e]
  4227bb:	dec    ebp
  4227bc:	retf   0xec13
  4227bf:	fstp   TBYTE PTR [edx+0x79619f9e]
  4227c5:	pop    ebp
  4227c6:	sahf   
  4227c7:	mov    dl,0x2e
  4227c9:	fsubr  QWORD PTR [edx+0x5b1b000c]
  4227cf:	int3   
  4227d0:	dec    ebp
  4227d1:	lods   al,BYTE PTR ds:[esi]
  4227d2:	bound  edx,QWORD PTR [edx-0x41520c]
  4227d8:	mov    ds:0xefe3361a,eax
  4227dd:	arpl   WORD PTR [ebx-0x2d67f0b8],di
  4227e3:	mov    DWORD PTR [eax+0x34b00594],edi
  4227e9:	jno    0x422844
  4227eb:	mov    DWORD PTR [edx-0x4f4f2ca9],ecx
  4227f1:	bound  edi,QWORD PTR [ebx-0x3de47376]
  4227f7:	xor    ch,al
  4227f9:	jecxz  0x4227d4
  4227fb:	xor    BYTE PTR [esp+esi*8+0x5b16159a],0xb4
  422803:	sbb    BYTE PTR [ecx+0x63],ah
  422806:	dec    edx
  422807:	sbb    eax,0x15a4da0e
  42280c:	sub    BYTE PTR [edi-0x37b8e4b3],al
  422812:	pop    ebx
  422813:	and    al,0xc9
  422815:	xchg   ebp,eax
  422816:	dec    eax
  422817:	enter  0x300b,0x33
  42281b:	inc    esi
  42281c:	add    eax,0x378e6f27
  422821:	mov    ah,0x1b
  422823:	lea    ebp,[edx-0x53]
  422826:	fsub   QWORD PTR [esi]
  422828:	dec    edx
  422829:	(bad)  
  42282a:	fcmovnbe st,st(1)
  42282c:	or     al,0xb7
  42282e:	jne    0x422886
  422830:	sbb    al,0xd5
  422832:	add    BYTE PTR [edi-0x69],dh
  422835:	cli    
  422836:	test   BYTE PTR [ebp+0x776e7999],bl
  42283c:	jno    0x422871
  42283e:	and    ebp,edi
  422840:	xor    ch,ch
  422842:	or     al,BYTE PTR [ecx-0x2a1e75d9]
  422848:	xor    BYTE PTR [esi+0x196e6b45],0xb
  42284f:	retf   0xcfbe
  422852:	dec    ecx
  422853:	jb     0x422822
  422855:	seta   dl
  422858:	aas    
  422859:	mov    ss,WORD PTR [ebx-0x331065f1]
  42285f:	stc    
  422860:	xor    dh,ch
  422862:	jp     0x4228de
  422864:	cmp    ebp,DWORD PTR [edi-0x26462327]
  42286a:	inc    ecx
  42286b:	or     DWORD PTR [edi],edx
  42286d:	cwde   
  42286e:	adc    edx,esp
  422870:	adc    eax,0x4296c748
  422875:	pop    ds
  422876:	loop   0x4228a9
  422878:	pop    edx
  422879:	and    al,0x7b
  42287b:	xchg   ebx,eax
  42287c:	push   edx
  42287d:	push   ds
  42287e:	cmp    esp,DWORD PTR [ecx+ebp*4]
  422881:	retf   
  422882:	cwde   
  422883:	pushf  
  422884:	mov    ah,0xb0
  422886:	pusha  
  422887:	xlat   BYTE PTR ds:[ebx]
  422888:	fld    QWORD PTR [edx-0x2bc73b8f]
  42288e:	stos   DWORD PTR es:[edi],eax
  42288f:	sub    DWORD PTR [edx+edx*1-0x303b188e],eax
  422896:	lods   al,BYTE PTR ds:[esi]
  422897:	jno    0x4228cc
  422899:	outs   dx,BYTE PTR ds:[esi]
  42289a:	repnz sti 
  42289c:	(bad)  
  42289e:	ffree  st(1)
  4228a0:	sti    
  4228a1:	les    eax,FWORD PTR [ebx]
  4228a3:	jae    0x4228d0
  4228a5:	in     eax,0xbd
  4228a7:	push   0x4bff2b07
  4228ac:	gs in  eax,dx
  4228ae:	inc    eax
  4228af:	repnz dec esi
  4228b1:	xor    al,0xf4
  4228b3:	div    BYTE PTR [esi]
  4228b5:	inc    edx
  4228b6:	ins    DWORD PTR es:[edi],dx
  4228b7:	sbb    esi,DWORD PTR [edi+0x6e741c2a]
  4228bd:	out    0xd9,al
  4228bf:	cmp    al,0x4e
  4228c1:	ret    
  4228c2:	imul   edi,edx,0x22
  4228c5:	js     0x42284c
  4228c7:	sub    ebx,ebp
  4228c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228ca:	inc    DWORD PTR [edi]
  4228cc:	aas    
  4228cd:	jle    0x42294d
  4228cf:	add    eax,0xa54afca3
  4228d4:	push   cs
  4228d5:	jmp    0xa2eb20e0
  4228da:	push   esi
  4228db:	pop    esi
  4228dc:	pop    ebp
  4228dd:	jp     0x4228f1
  4228df:	loopne 0x42292c
  4228e1:	inc    esp
  4228e2:	test   DWORD PTR [ecx],ecx
  4228e4:	and    DWORD PTR [ecx],edx
  4228e6:	fs adc eax,0xa79a0973
  4228ec:	dec    ebp
  4228ed:	imul   esp,edi,0xffffff90
  4228f0:	mov    fs,WORD PTR [edi+0x71]
  4228f3:	or     esp,ecx
  4228f5:	js     0x4228f4
  4228f7:	enter  0x9665,0x7f
  4228fb:	push   ebx
  4228fc:	jge    0x4228aa
  4228fe:	leave  
  4228ff:	int3   
  422900:	rcr    eax,1
  422902:	xor    edx,DWORD PTR ds:0x40351e79
  422908:	out    0xa0,eax
  42290a:	jmp    0xa3d7b070
  42290f:	ficomp DWORD PTR [esi+0x4e]
  422912:	mul    BYTE PTR [edx+0x24]
  422915:	repz cmp BYTE PTR [ebx],bl
  422918:	(bad)  
  422919:	mov    bh,0xdd
  42291b:	les    edi,FWORD PTR [ebx+0x35]
  42291e:	(bad)  
  42291f:	lahf   
  422920:	and    esp,DWORD PTR [edx]
  422922:	cmp    dh,BYTE PTR [ecx+0x5823efc7]
  422928:	fisttp QWORD PTR [esi+0x62]
  42292b:	js     0x422909
  42292d:	ror    BYTE PTR [ebx-0x24],1
  422930:	gs inc ebx
  422932:	shr    BYTE PTR [esi],0x13
  422935:	sub    al,BYTE PTR [ebp+0x6]
  422938:	xor    BYTE PTR ds:0x1e48d005,cl
  42293e:	fadd   QWORD PTR [edi+ebx*2-0x62c994f4]
  422945:	mov    eax,0xc07e8765
  42294a:	jecxz  0x42296b
  42294c:	sub    BYTE PTR ds:0x407ed5ad,dh
  422952:	fstp   DWORD PTR [ebp+0x753dd112]
  422958:	push   esi
  422959:	push   0xf
  42295b:	pop    es
  42295c:	fsubr  QWORD PTR [ebp+edi*1+0x463f59c1]
  422963:	mov    gs,WORD PTR [eax+0x31b4f2b3]
  422969:	outs   dx,DWORD PTR ds:[esi]
  42296a:	mov    BYTE PTR [ebp+0x1d49c74c],bh
  422970:	mov    al,0x7f
  422972:	dec    eax
  422973:	cld    
  422974:	ret    
  422975:	add    eax,0x153020ff
  42297a:	xchg   bh,cl
  42297c:	jo     0x42295c
  42297e:	pop    edi
  42297f:	cmp    ah,0xbf
  422982:	sub    ah,BYTE PTR [eax]
  422984:	ja     0x4229e9
  422986:	sti    
  422987:	inc    ecx
  422988:	imul   esp,DWORD PTR [edx],0x38
  42298b:	enter  0x88b3,0x86
  42298f:	mov    dh,0x20
  422991:	add    DWORD PTR [esi],ebx
  422993:	inc    ebp
  422994:	jo     0x42294a
  422996:	mov    dl,0xbb
  422998:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422999:	or     bl,ch
  42299b:	and    ebx,DWORD PTR [ecx+edx*1-0x77]
  42299f:	fbstp  TBYTE PTR [edx-0x66366128]
  4229a5:	scas   eax,DWORD PTR es:[edi]
  4229a6:	sub    bh,BYTE PTR [eax]
  4229a8:	loop   0x422978
  4229aa:	in     al,0xfb
  4229ac:	push   ss
  4229ad:	mov    ecx,0x91eb3754
  4229b2:	repnz scas eax,DWORD PTR es:[edi]
  4229b4:	mov    ah,0x5
  4229b6:	add    al,0xab
  4229b8:	test   al,0x92
  4229ba:	and    BYTE PTR [ecx],cl
  4229bc:	mov    ah,0x78
  4229be:	push   ss
  4229bf:	add    edi,DWORD PTR [esi-0x8]
  4229c2:	retf   0x9bad
  4229c5:	shr    DWORD PTR [edx+eax*2+0x338d3f7c],0x6c
  4229cd:	lea    edi,[edi]
  4229cf:	fsubr  QWORD PTR [ebx-0x3f6b7877]
  4229d5:	jbe    0x422957
  4229d7:	xchg   DWORD PTR [eax+0x6c],ecx
  4229da:	int3   
  4229db:	jecxz  0x422a16
  4229dd:	pop    esp
  4229de:	aam    0x48
  4229e0:	js     0x422a2a
  4229e2:	or     bh,BYTE PTR [esi-0x1]
  4229e5:	jnp    0x422a11
  4229e7:	dec    edi
  4229e8:	int3   
  4229e9:	jne    0x4229c2
  4229eb:	inc    BYTE PTR [edi-0x1c431d19]
  4229f1:	out    0x92,al
  4229f3:	jns    0x422a00
  4229f5:	or     al,0x5
  4229f7:	bound  esp,QWORD PTR [eax]
  4229f9:	push   ebp
  4229fa:	push   cs
  4229fb:	test   DWORD PTR [esi],ecx
  4229fd:	sub    ch,dh
  4229ff:	scas   al,BYTE PTR es:[edi]
  422a00:	mov    ds:0xf58fcd8d,eax
  422a05:	jno    0x4229ac
  422a07:	ds add edx,ecx
  422a0a:	test   BYTE PTR [ebx+0x7c],dl
  422a0d:	ror    BYTE PTR [eax],cl
  422a0f:	mov    al,ds:0x49ba8468
  422a14:	adc    eax,0x6bd43eeb
  422a19:	push   es
  422a1a:	stos   DWORD PTR es:[edi],eax
  422a1b:	outs   dx,BYTE PTR ds:[esi]
  422a1c:	cs jnp 0x422a0c
  422a1f:	mov    bh,0x1a
  422a21:	or     DWORD PTR [edi+0x57bc86a2],0x6
  422a28:	bound  ebp,QWORD PTR [edi-0x13904528]
  422a2e:	sbb    edx,DWORD PTR [edi+0x4c]
  422a31:	pop    ebp
  422a32:	sub    DWORD PTR [edx],0x54
  422a35:	retf   
  422a36:	cld    
  422a37:	aam    0x9b
  422a39:	out    dx,al
  422a3a:	mov    eax,0xea795380
  422a3f:	fmul   QWORD PTR [edx-0x75]
  422a42:	inc    edx
  422a43:	jmp    0x422a31
  422a45:	or     ebp,DWORD PTR [ecx-0x355142d6]
  422a4b:	sub    eax,0xc4f4dba2
  422a50:	outs   dx,DWORD PTR ds:[esi]
  422a51:	cmp    BYTE PTR [eax],bl
  422a53:	ret    0xdae5
  422a56:	scas   al,BYTE PTR es:[edi]
  422a57:	and    edx,ebx
  422a59:	pop    edi
  422a5a:	nop
  422a5b:	push   ebx
  422a5c:	test   BYTE PTR [edi+0x6b],cl
  422a5f:	pushf  
  422a60:	sub    eax,0xc7a2d77d
  422a65:	xchg   edi,eax
  422a66:	in     eax,dx
  422a67:	in     al,dx
  422a68:	call   0x49b30a0d
  422a6d:	enter  0x906c,0x92
  422a71:	pop    eax
  422a72:	es leave 
  422a74:	into   
  422a75:	loope  0x422a31
  422a77:	stc    
  422a78:	inc    edx
  422a79:	or     esi,eax
  422a7b:	push   cs
  422a7c:	lods   eax,DWORD PTR ds:[esi]
  422a7d:	rcl    DWORD PTR [ebx-0x77],0x29
  422a81:	inc    ebx
  422a82:	xor    BYTE PTR [esi-0x65],cl
  422a85:	clc    
  422a86:	and    eax,0x3cc53917
  422a8b:	jmp    0x9ffdb51
  422a90:	popf   
  422a91:	in     al,dx
  422a92:	xlat   BYTE PTR ds:[ebx]
  422a93:	mov    ebp,0x39393a8b
  422a98:	out    0xc4,eax
  422a9a:	mov    eax,ds:0xe57919e0
  422a9f:	test   ch,cl
  422aa1:	iret   
  422aa2:	aad    0x47
  422aa4:	pop    edi
  422aa5:	sbb    esp,DWORD PTR [edi]
  422aa7:	sbb    eax,0x107d6be8
  422aac:	or     ch,0x35
  422aaf:	inc    ebx
  422ab0:	xchg   ebx,eax
  422ab1:	jns    0x422b08
  422ab3:	mov    esi,0x3ea5b09d
  422ab8:	adc    eax,0xfebc8d78
  422abd:	pop    edi
  422abe:	sbb    al,0x77
  422ac0:	xor    al,0xbb
  422ac2:	inc    esp
  422ac3:	mov    edi,0xb32ae968
  422ac8:	ss jg  0x422a67
  422acb:	jl     0x422a5d
  422acd:	in     eax,0x6a
  422acf:	push   esp
  422ad0:	dec    edx
  422ad1:	ror    DWORD PTR [ebp-0x4d],1
  422ad4:	push   edx
  422ad5:	addr16 test eax,0x89e26ca5
  422adb:	sub    DWORD PTR [edi],esp
  422add:	nop
  422ade:	lock sbb DWORD PTR [edx+0x12ccd771],edi
  422ae5:	xchg   edx,eax
  422ae6:	mov    dh,0xd5
  422ae8:	stos   DWORD PTR es:[edi],eax
  422ae9:	adc    dh,BYTE PTR [ebx+0x15]
  422aec:	mov    bh,0x5d
  422aee:	mov    bl,0x79
  422af0:	adc    eax,DWORD PTR [ecx-0x72]
  422af3:	test   BYTE PTR [eax],bh
  422af5:	lea    esi,[ecx+eiz*8+0xa]
  422af9:	push   cs
  422afa:	pop    esp
  422afb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422afc:	(bad)  
  422afd:	mov    esp,0xdad3fea7
  422b02:	bound  edi,QWORD PTR [ecx+0x4f9e7901]
  422b08:	mov    DWORD PTR [ebx],ebx
  422b0a:	cld    
  422b0b:	iret   
  422b0c:	and    eax,0x1bf5f4d0
  422b11:	pushf  
  422b12:	inc    esi
  422b13:	xchg   BYTE PTR [edi-0x21],ah
  422b16:	push   eax
  422b17:	dec    ebx
  422b18:	call   FWORD PTR [ecx-0x3b]
  422b1b:	push   eax
  422b1c:	xor    dh,0x66
  422b1f:	je     0x422aff
  422b21:	pop    ss
  422b22:	sbb    eax,0x93de403d
  422b27:	add    DWORD PTR [esi+edx*8],esi
  422b2a:	push   esi
  422b2b:	and    eax,0xf1aedc30
  422b30:	jg     0x422aec
  422b32:	stc    
  422b33:	jnp    0x422ab7
  422b35:	int    0x48
  422b37:	sbb    eax,0x9ef6544c
  422b3c:	fwait
  422b3d:	sar    dl,cl
  422b3f:	xor    edx,DWORD PTR [esi-0x3f4b821a]
  422b45:	inc    eax
  422b46:	push   ds
  422b47:	mov    al,0x42
  422b49:	mov    dh,0x36
  422b4b:	pushf  
  422b4c:	lods   al,BYTE PTR ds:[esi]
  422b4d:	iret   
  422b4e:	push   ss
  422b4f:	(bad)  [edx]
  422b52:	sub    al,0x1a
  422b54:	pop    es
  422b55:	sti    
  422b56:	outs   dx,BYTE PTR ds:[esi]
  422b57:	mov    bh,0x45
  422b59:	pop    eax
  422b5a:	lea    edi,[eax]
  422b5c:	mov    ds:0x8cb90ecc,al
  422b61:	mov    al,ds:0x47ea03c5
  422b66:	add    al,0x86
  422b68:	push   ecx
  422b69:	mov    bh,0x1e
  422b6b:	repnz mov ecx,0xf36f2b9a
  422b71:	mov    eax,ds:0x89d5070
  422b76:	mov    fs,WORD PTR [ecx+0x3f]
  422b79:	jmp    0x422b5c
  422b7b:	jbe    0x422b23
  422b7d:	adc    eax,0x37c12ca0
  422b82:	mov    eax,ds:0x32e34619
  422b87:	out    0x49,al
  422b89:	(bad)  [ebp-0x23753e21]
  422b8f:	(bad)  
  422b90:	mov    edi,0x5163c1c5
  422b95:	and    edx,esi
  422b97:	mov    DWORD PTR [edi-0x1a82e345],ebx
  422b9d:	and    BYTE PTR [ebp+0x2],ah
  422ba0:	std    
  422ba1:	ds jns 0x422bcf
  422ba4:	mov    ebp,0x6a2809ca
  422ba9:	add    BYTE PTR [eax-0x33],cl
  422bac:	(bad)  
  422bae:	out    0x8e,eax
  422bb0:	xchg   esp,eax
  422bb1:	js     0x422b6a
  422bb3:	push   edx
  422bb4:	jae    0x422b8a
  422bb6:	adc    esp,0xfba06bd
  422bbc:	mov    bl,0x9d
  422bbe:	push   0x8805c4e6
  422bc3:	pushf  
  422bc4:	fld    DWORD PTR [edi+ebx*4-0x77d04ea1]
  422bcb:	je     0x422bfe
  422bcd:	jbe    0x422c05
  422bcf:	dec    edx
  422bd0:	ret    0x2c94
  422bd3:	retf   
  422bd4:	pusha  
  422bd5:	or     eax,0x75186abc
  422bda:	push   ebx
  422bdb:	shl    esp,1
  422bdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422bde:	popf   
  422bdf:	inc    edi
  422be0:	jmp    0x47c359e5
  422be5:	push   0xf
  422be7:	popa   
  422be8:	cmp    dl,BYTE PTR [ebp-0x34]
  422beb:	mov    eax,ds:0x263849f2
  422bf0:	ret    0xf9c5
  422bf3:	push   ebx
  422bf4:	or     esp,DWORD PTR [ebx+0x6b98f6f0]
  422bfa:	js     0x422c1b
  422bfc:	test   DWORD PTR [ebp-0x70],ebp
  422bff:	cli    
  422c00:	mov    edi,ds
  422c02:	sahf   
  422c03:	mov    eax,ebp
  422c05:	xor    BYTE PTR [esp+esi*8-0x4e],dh
  422c09:	xchg   ecx,eax
  422c0a:	mov    esi,DWORD PTR [ecx]
  422c0c:	mov    al,ds:0xe826e256
  422c11:	inc    ebp
  422c12:	das    
  422c13:	xlat   BYTE PTR ds:[ebx]
  422c14:	sbb    DWORD PTR [ecx],edi
  422c16:	inc    edx
  422c17:	in     al,0x97
  422c19:	xchg   ebp,eax
  422c1a:	jns    0x422c45
  422c1c:	je     0x422bd7
  422c1e:	cli    
  422c1f:	in     al,0x41
  422c21:	jp     0x422bea
  422c23:	add    ah,cl
  422c25:	pop    ss
  422c26:	stos   DWORD PTR es:[edi],eax
  422c27:	test   BYTE PTR [ebp-0x791e64ab],cl
  422c2d:	mov    ds:0x68f5be31,al
  422c32:	cmp    eax,esi
  422c34:	push   ebx
  422c35:	xchg   ebp,eax
  422c36:	cs (bad) 
  422c39:	mov    ah,0xbe
  422c3b:	addr16 dec edi
  422c3d:	or     eax,0xf1eabb95
  422c42:	es jmp 0xcf43eec8
  422c48:	fmul   QWORD PTR [ebp+0x6f5b8701]
  422c4e:	mov    dh,ch
  422c50:	adc    al,0xe8
  422c52:	push   es
  422c53:	out    dx,al
  422c54:	nop
  422c55:	popf   
  422c56:	fimul  WORD PTR [edx+0x75]
  422c59:	inc    ebp
  422c5a:	sub    BYTE PTR [ebp+0x4082f8f0],0x5d
  422c61:	jnp    0x422cbd
  422c63:	push   ebp
  422c64:	mov    al,ds:0xa5249bfd
  422c69:	push   ss
  422c6a:	leave  
  422c6b:	xchg   ebx,eax
  422c6c:	fbld   TBYTE PTR [edx+0x28]
  422c6f:	jnp    0x422c8f
  422c71:	pusha  
  422c72:	sti    
  422c73:	adc    al,0x2d
  422c75:	jnp    0x422c7a
  422c77:	xor    DWORD PTR [ebp-0x55],ebp
  422c7a:	outs   dx,BYTE PTR ds:[esi]
  422c7b:	xchg   esi,edi
  422c7d:	push   ebp
  422c7e:	fucom  st(2)
  422c80:	sti    
  422c81:	out    dx,al
  422c82:	inc    esi
  422c83:	or     al,0x6d
  422c85:	hlt    
  422c86:	rcl    DWORD PTR [eax],cl
  422c88:	mov    ebp,0xf2efda87
  422c8d:	lahf   
  422c8e:	in     al,0x19
  422c90:	push   ecx
  422c91:	mov    BYTE PTR [edi+0x2c77f965],dl
  422c97:	and    esp,DWORD PTR [ecx-0xe]
  422c9a:	and    DWORD PTR ds:[edx-0x37],esi
  422c9e:	mov    ebp,DWORD PTR [ecx-0xc]
  422ca1:	push   0xfffffffd
  422ca3:	gs push ebp
  422ca5:	rep ins BYTE PTR es:[edi],dx
  422ca7:	mov    dl,0x38
  422ca9:	mov    al,0xea
  422cab:	fistp  WORD PTR [ecx+0x661d44c8]
  422cb1:	xor    eax,DWORD PTR [esi+0x1e]
  422cb4:	push   esi
  422cb5:	xchg   ebx,eax
  422cb6:	jg     0x422d07
  422cb8:	adc    al,BYTE PTR [edx+0x34e05ba]
  422cbe:	in     al,dx
  422cbf:	adc    DWORD PTR [ebx-0x38ef7632],esi
  422cc5:	scas   eax,DWORD PTR es:[edi]
  422cc6:	in     al,dx
  422cc7:	xor    cl,0xd0
  422cca:	cmp    al,0x1f
  422ccc:	(bad)  [esi-0x64]
  422ccf:	dec    sp
  422cd1:	dec    ecx
  422cd2:	jne    0x422cdf
  422cd4:	pop    es
  422cd5:	mov    ?,edi
  422cd7:	in     al,0x81
  422cd9:	sub    BYTE PTR [esi],bl
  422cdb:	repnz leave 
  422cdd:	ins    DWORD PTR es:[edi],dx
  422cde:	hlt    
  422cdf:	aas    
  422ce0:	cld    
  422ce1:	xchg   ebx,eax
  422ce2:	add    al,dh
  422ce4:	rcr    DWORD PTR [esi+0x7f],0xc6
  422ce8:	inc    ebx
  422ce9:	test   al,0x49
  422ceb:	outs   dx,DWORD PTR ds:[esi]
  422cec:	(bad)
  422cef:	mov    dh,0xed
  422cf1:	adc    DWORD PTR [esi+0x79],edx
  422cf4:	dec    esi
  422cf5:	pop    edx
  422cf6:	cmp    esp,ebx
  422cf8:	es mov ebx,ecx
  422cfb:	(bad)
  422cfe:	push   0xffffffcc
  422d00:	ret    
  422d01:	cmp    BYTE PTR [esp+ebx*4+0x51],0xdc
  422d06:	cdq    
  422d07:	lods   eax,DWORD PTR ds:[esi]
  422d08:	test   DWORD PTR [ecx+0x2637910c],ebp
  422d0e:	lods   al,BYTE PTR ds:[esi]
  422d0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d10:	mov    dh,0x90
  422d12:	mov    edx,0x9e818f2e
  422d17:	out    dx,al
  422d18:	cmovb  ebx,esi
  422d1b:	test   DWORD PTR [edi+edi*4+0xa],ecx
  422d1f:	mov    ecx,0xd929084a
  422d24:	mov    edx,DWORD PTR [eax+0x8a93887]
  422d2a:	outs   dx,DWORD PTR ds:[esi]
  422d2b:	(bad)  
  422d2c:	loopne 0x422ce2
  422d2e:	clc    
  422d2f:	(bad)  
  422d30:	cmp    esp,edx
  422d32:	je     0x422daa
  422d34:	xchg   BYTE PTR [esp+eiz*2],bh
  422d37:	inc    esi
  422d38:	stos   BYTE PTR es:[edi],al
  422d39:	pop    edx
  422d3a:	scas   eax,DWORD PTR es:[edi]
  422d3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d3c:	and    eax,0xa3fb6a00
  422d41:	xchg   edx,eax
  422d42:	std    
  422d43:	xor    al,0xe2
  422d45:	push   0x319b5bdf
  422d4a:	sbb    ch,BYTE PTR [edi+ebp*8]
  422d4d:	fnsave [ebx]
  422d4f:	popf   
  422d50:	mov    esi,0x33e49645
  422d55:	jle    0x422d92
  422d57:	in     eax,0xa9
  422d59:	inc    BYTE PTR [ebp-0x78]
  422d5c:	popa   
  422d5d:	cmp    eax,0x9baf12bb
  422d62:	mov    DWORD PTR [ebx+0x2582eb15],esp
  422d68:	mov    ebp,ebp
  422d6a:	out    0xfd,al
  422d6c:	push   esp
  422d6d:	jmp    0x422d63
  422d6f:	jmp    0xbaec62b8
  422d74:	mov    dh,0xef
  422d76:	lahf   
  422d77:	and    BYTE PTR [ecx],ah
  422d79:	sbb    ecx,DWORD PTR [ecx-0x52836218]
  422d7f:	and    ah,dh
  422d81:	sbb    eax,0x101220ab
  422d86:	jbe    0x422de9
  422d88:	ffreep st(5)
  422d8a:	call   0x108d:0x3df9e989
  422d91:	das    
  422d92:	shl    DWORD PTR [edi-0x28324fad],1
  422d98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d99:	retf   
  422d9a:	cs mov edi,0x9638f743
  422da0:	xor    esp,ecx
  422da2:	scas   al,BYTE PTR es:[edi]
  422da3:	push   ds
  422da4:	and    al,0xed
  422da6:	scas   eax,DWORD PTR es:[edi]
  422da7:	xor    DWORD PTR [edi+ecx*4],esp
  422daa:	test   al,0x39
  422dac:	scas   eax,DWORD PTR es:[edi]
  422dad:	mov    DWORD PTR [ebp+0x4e],ecx
  422db0:	dec    ecx
  422db1:	push   cs
  422db2:	pop    esp
  422db3:	adc    al,0xfd
  422db5:	xchg   ebp,eax
  422db6:	mov    ecx,DWORD PTR [ebx]
  422db8:	lahf   
  422db9:	sahf   
  422dba:	imul   ebx,esp,0xa9b5e6e1
  422dc0:	add    DWORD PTR [ecx],esi
  422dc2:	aaa    
  422dc3:	xor    BYTE PTR [eax-0x4e08f5e3],dl
  422dc9:	and    al,BYTE PTR ds:0xf6ecdb44
  422dcf:	pop    edx
  422dd0:	int3   
  422dd1:	mov    al,0x5d
  422dd3:	lahf   
  422dd4:	test   al,0xb4
  422dd6:	add    al,0x58
  422dd8:	pop    esp
  422dd9:	and    cl,dh
  422ddb:	hlt    
  422ddc:	cld    
  422ddd:	mov    al,ds:0xd909cb0a
  422de2:	fild   DWORD PTR [edi+0x15]
  422de6:	mov    ds:0xdbae3c5a,ax
  422dec:	imul   edx,ecx,0x3e
  422def:	ins    DWORD PTR es:[edi],dx
  422df0:	xchg   esi,eax
  422df1:	jmp    0x422dd8
  422df3:	in     eax,dx
  422df4:	sar    BYTE PTR [ecx+eiz*8],cl
  422df7:	rcr    DWORD PTR [esi-0x3ddae256],cl
  422dfd:	xchg   ebp,eax
  422dfe:	mov    edi,0xfa810baa
  422e03:	push   ecx
  422e04:	cmp    DWORD PTR [eax+0x653a3e14],0xfffffff4
  422e0b:	retf   0xc892
  422e0e:	or     esi,DWORD PTR [ebp-0x351f1547]
  422e14:	xor    eax,0xaf3b1e9f
  422e19:	add    ebp,eax
  422e1b:	mov    ch,0x96
  422e1d:	in     al,dx
  422e1e:	clc    
  422e1f:	push   edi
  422e20:	je     0x422e05
  422e22:	imul   ecx,ebp,0xaf2de6ec
  422e28:	pop    es
  422e29:	push   ecx
  422e2a:	xor    al,0x33
  422e2c:	lods   al,BYTE PTR ds:[esi]
  422e2d:	(bad)  
  422e2e:	(bad)  
  422e30:	xor    DWORD PTR [esi+ebp*2],ebx
  422e33:	push   ecx
  422e34:	mov    BYTE PTR [ebp+0x38],cl
  422e37:	into   
  422e38:	mov    al,ds:0x729a03e1
  422e3d:	lds    edx,FWORD PTR [edx-0x52]
  422e40:	push   0xbe53237e
  422e45:	pop    ebx
  422e46:	mov    dl,0xe1
  422e48:	mov    ds:0x39c32fd5,al
  422e4d:	outs   dx,BYTE PTR ds:[esi]
  422e4e:	outs   dx,DWORD PTR ds:[esi]
  422e4f:	jno    0x422e5b
  422e51:	int3   
  422e52:	push   esi
  422e53:	or     al,0x7
  422e55:	loop   0x422e36
  422e57:	pop    ebp
  422e58:	rcl    DWORD PTR [eax],1
  422e5a:	inc    ebp
  422e5b:	iret   
  422e5c:	xor    dl,BYTE PTR [esi]
  422e5e:	sbb    al,cl
  422e60:	or     cl,BYTE PTR [eax+0x3a]
  422e63:	out    dx,al
  422e64:	mov    eax,0x6eabeb2f
  422e69:	dec    ebp
  422e6a:	pop    es
  422e6b:	mov    ah,0xca
  422e6d:	sub    eax,0x82a80891
  422e72:	(bad)  
  422e74:	mov    esi,0xfd50638e
  422e79:	and    al,0x70
  422e7b:	cwde   
  422e7c:	ficomp WORD PTR [esi+0x24]
  422e7f:	arpl   WORD PTR ss:[ecx-0x45a49048],di
  422e86:	jle    0x422e32
  422e88:	add    ah,BYTE PTR [ecx]
  422e8a:	ins    BYTE PTR es:[edi],dx
  422e8b:	cwde   
  422e8c:	mov    dl,0x2f
  422e8e:	or     ebx,DWORD PTR [esi+eax*2]
  422e91:	sub    DWORD PTR [esi],edx
  422e93:	repz hlt 
  422e95:	dec    esi
  422e96:	mov    esi,0xa25b8954
  422e9b:	mov    ebx,0x92882f74
  422ea0:	jo     0x422ed5
  422ea2:	out    dx,eax
  422ea3:	and    al,0x24
  422ea5:	stos   DWORD PTR es:[edi],eax
  422ea6:	and    BYTE PTR [eax-0x1b],0x88
  422eaa:	dec    edx
  422eab:	push   0xaddcb67c
  422eb0:	and    ecx,DWORD PTR [edi+0x6]
  422eb3:	and    bh,BYTE PTR [ecx+ebp*8-0x17]
  422eb7:	inc    edx
  422eb8:	hlt    
  422eb9:	fwait
  422eba:	in     eax,0x26
  422ebc:	imul   ebp,DWORD PTR [ebp-0x14dbd329],0x1f665e0
  422ec6:	(bad)  
  422ec7:	pop    ebx
  422ec8:	test   DWORD PTR [eax+0x5c],ecx
  422ecb:	cli    
  422ecc:	jb     0x422e58
  422ece:	jne    0x422e78
  422ed0:	inc    eax
  422ed1:	sbb    eax,0x345781bc
  422ed6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ed7:	push   eax
  422ed8:	and    dh,0xad
  422edb:	icebp  
  422edc:	(bad)  
  422edd:	push   edx
  422ede:	cdq    
  422edf:	ins    BYTE PTR es:[edi],dx
  422ee0:	pop    eax
  422ee1:	inc    eax
  422ee2:	scas   eax,DWORD PTR es:[edi]
  422ee3:	cmp    ah,BYTE PTR [ebp-0x20]
  422ee6:	stc    
  422ee7:	jb     0x422f27
  422ee9:	fwait
  422eea:	mov    al,ds:0x8025b4bf
  422eef:	jge    0x422f28
  422ef1:	push   ecx
  422ef2:	sbb    esp,DWORD PTR [ecx+0x5061e78]
  422ef8:	cli    
  422ef9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422efa:	add    al,0xff
  422efc:	add    ebx,esp
  422efe:	data16 adc al,0x26
  422f01:	in     eax,0xb0
  422f03:	jmp    0xeb88:0x89df8522
  422f0a:	adc    bh,al
  422f0c:	mov    ds,eax
  422f0e:	retf   0x8a82
  422f11:	dec    edi
  422f12:	iret   
  422f13:	(bad)  
  422f15:	xchg   esp,eax
  422f16:	and    DWORD PTR ds:0x69a26719,edi
  422f1c:	ins    BYTE PTR es:[edi],dx
  422f1d:	retw   0xc25e
  422f21:	sbb    al,0xf0
  422f23:	mov    ch,cl
  422f25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f26:	and    eax,0xfd015072
  422f2b:	pop    ebx
  422f2c:	push   ebp
  422f2d:	das    
  422f2e:	jecxz  0x422ee2
  422f30:	and    cl,BYTE PTR [ebp-0x4f969d0b]
  422f36:	mov    cl,0x4b
  422f38:	daa    
  422f39:	adc    DWORD PTR [ebp-0x16],0x27
  422f3d:	xor    eax,0x3dff4c67
  422f42:	sysret 
  422f44:	loop   0x422f86
  422f46:	in     al,dx
  422f47:	nop
  422f48:	dec    ebx
  422f49:	push   ebx
  422f4a:	add    al,0xd4
  422f4c:	div    DWORD PTR [esp+esi*4-0x7a132af4]
  422f53:	stos   DWORD PTR es:[edi],eax
  422f54:	mov    ebp,0x726a889c
  422f59:	and    esp,ebp
  422f5b:	mov    ds:0x29c0b209,al
  422f60:	mov    ah,0xef
  422f62:	jle    0x422fc6
  422f64:	push   0x32baa854
  422f69:	or     bl,BYTE PTR [ecx+0x52]
  422f6c:	inc    edi
  422f6d:	or     ah,BYTE PTR [edx+ebp*8]
  422f70:	in     al,0xea
  422f72:	in     al,0xe8
  422f74:	jno    0x422f39
  422f76:	aam    0xf0
  422f78:	fcmovbe st,st(2)
  422f7a:	mov    eax,ds:0xf17bd9a0
  422f7f:	mov    ebx,0x4053eb1
  422f84:	cs dec edx
  422f86:	push   ds
  422f87:	xchg   ebp,eax
  422f88:	lods   al,BYTE PTR ds:[esi]
  422f89:	push   ds
  422f8a:	mov    bh,0x62
  422f8c:	mov    edi,0xda131c06
  422f91:	mov    ds:0x81850f8f,al
  422f96:	mov    al,ds:0xd587c9ee
  422f9b:	jl     0x422f1f
  422f9d:	aad    0xce
  422f9f:	(bad)  
  422fa0:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422fa2:	jbe    0x422fc1
  422fa4:	rcl    DWORD PTR [eax-0x66e4e9d7],0xcd
  422fab:	(bad)  
  422fad:	or     DWORD PTR [ecx+0x5],esp
  422fb0:	mov    ah,ch
  422fb2:	dec    edi
  422fb3:	lahf   
  422fb4:	in     al,0xee
  422fb6:	jb     0x42301b
  422fb8:	mov    esp,0xb0ee35d1
  422fbd:	push   0xe37574e7
  422fc2:	dec    ebp
  422fc3:	sti    
  422fc4:	loop   0x422fcf
  422fc6:	inc    ebp
  422fc7:	or     BYTE PTR [ebp+eiz*8-0x7a9fe993],dh
  422fce:	cdq    
  422fcf:	clc    
  422fd0:	xchg   ecx,eax
  422fd1:	fnstcw WORD PTR ds:0x68762fe6
  422fd7:	call   0xf3a9c202
  422fdc:	sub    al,al
  422fde:	in     al,dx
  422fdf:	mov    eax,ds:0x2b514a2f
  422fe4:	mov    ah,bh
  422fe6:	fld    TBYTE PTR [eax]
  422fe8:	sahf   
  422fe9:	sbb    DWORD PTR [eax+0x2f],edx
  422fec:	aad    0x27
  422fee:	add    eax,DWORD PTR [esi]
  422ff0:	xchg   ebx,eax
  422ff1:	(bad)  
  422ff2:	mov    esi,0x40bca723
  422ff7:	inc    edx
  422ff8:	xchg   ebp,eax
  422ff9:	or     al,0x77
  422ffb:	and    DWORD PTR [edi+0x7538c330],edi
  423001:	cmp    DWORD PTR [edx],0xc2048931
  423007:	outs   dx,BYTE PTR ds:[esi]
  423008:	mov    ds:0x8b019e1d,al
  42300d:	pushf  
  42300e:	pushf  
  42300f:	mov    bl,BYTE PTR [ebp-0x54]
  423012:	mov    al,0xc0
  423014:	cld    
  423015:	jl     0x423039
  423017:	shr    ch,0x74
  42301a:	stos   BYTE PTR es:[edi],al
  42301b:	in     al,dx
  42301c:	add    al,0x7c
  42301e:	enter  0xfe44,0x84
  423022:	daa    
  423023:	dec    ecx
  423024:	fsub   QWORD PTR [eax]
  423026:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423027:	mov    edx,0x3fde4213
  42302c:	in     eax,dx
  42302d:	out    dx,al
  42302e:	inc    edx
  42302f:	sub    cl,BYTE PTR [ebx+0x12]
  423032:	ins    DWORD PTR es:[edi],dx
  423033:	and    al,0x91
  423035:	into   
  423036:	jnp    0x42308d
  423038:	xchg   ebx,eax
  423039:	leave  
  42303a:	aad    0x58
  42303c:	add    ch,ah
  42303e:	mov    dh,0xb7
  423040:	bnd jns 0x423057
  423043:	out    dx,eax
  423044:	and    eax,0x64f46244
  423049:	in     al,dx
  42304a:	(bad)  
  42304b:	fnstcw WORD PTR [edi]
  42304d:	inc    eax
  42304e:	adc    BYTE PTR [eax+0x3c],ah
  423051:	ja     0x42309f
  423053:	or     DWORD PTR [edi+0x22],ebp
  423056:	(bad)  
  423057:	aad    0x21
  423059:	aad    0x59
  42305b:	fsub   st(3),st
  42305d:	ror    DWORD PTR ss:[esi-0x4b83cdac],cl
  423064:	bound  edi,QWORD PTR [ebp+0x53f5a8d5]
  42306a:	add    eax,0x10a9cbc4
  42306f:	pop    edx
  423070:	mov    al,ds:0x1eac5194
  423075:	ret    
  423076:	adc    cl,al
  423078:	xor    ch,al
  42307a:	shr    BYTE PTR [edi-0x32],cl
  42307d:	push   0x1d91957c
  423082:	gs clc 
  423084:	inc    ebp
  423085:	ss je  0x42303f
  423088:	push   es
  423089:	ds stos DWORD PTR es:[edi],eax
  42308b:	adc    BYTE PTR [edx-0x2698d32b],0xc4
  423092:	in     al,0x38
  423094:	xor    al,0x8b
  423096:	pop    eax
  423097:	add    esi,DWORD PTR [edi]
  423099:	jns    0x423105
  42309b:	lds    ebx,FWORD PTR [ecx]
  42309d:	sbb    bl,BYTE PTR [ecx]
  42309f:	cmp    al,0x60
  4230a1:	dec    esi
  4230a2:	ds mov ecx,0x36b61c46
  4230a8:	mov    BYTE PTR [ebx],dh
  4230aa:	ss pop ebp
  4230ac:	into   
  4230ad:	inc    esp
  4230ae:	or     esp,esi
  4230b0:	push   cs
  4230b1:	sbb    eax,0x8b2bfccd
  4230b6:	neg    BYTE PTR [edi]
  4230b8:	(bad)  
  4230b9:	fs mov ch,0x4a
  4230bc:	sub    ch,BYTE PTR [ebp+0x10]
  4230bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230c0:	and    DWORD PTR [edx],esp
  4230c2:	shl    BYTE PTR [ebp-0x80c0e75],1
  4230c8:	das    
  4230c9:	rcl    BYTE PTR [ebp-0x6d],0x35
  4230cd:	dec    BYTE PTR [ebp+0x53f0c461]
  4230d3:	cmp    eax,0xe3d03424
  4230d8:	cmc    
  4230d9:	push   edx
  4230da:	dec    ecx
  4230db:	in     eax,dx
  4230dc:	std    
  4230dd:	addr16 jge 0x4230ff
  4230e0:	or     bl,dh
  4230e2:	or     eax,0x4b15929
  4230e7:	jecxz  0x4230d9
  4230e9:	ins    BYTE PTR es:[edi],dx
  4230ea:	mov    cl,0x5e
  4230ec:	adc    BYTE PTR [ecx-0x7ac4c165],cl
  4230f2:	ds popf 
  4230f4:	or     eax,0x60331be6
  4230f9:	rcl    DWORD PTR [ecx+0x1d79fc4],cl
  4230ff:	inc    edi
  423100:	icebp  
  423101:	repnz and dh,BYTE PTR [eax]
  423104:	stos   BYTE PTR es:[edi],al
  423105:	test   al,0xfa
  423107:	pop    esp
  423108:	data16 test BYTE PTR [edx],bh
  42310b:	cmp    BYTE PTR [edi+0x3],bl
  42310e:	push   ecx
  42310f:	or     DWORD PTR [esi-0x3],ebx
  423112:	test   al,0xee
  423114:	imul   edi,DWORD PTR [ebx+ecx*8+0x39],0x77
  423119:	sub    al,0xf8
  42311b:	xchg   esp,ecx
  42311d:	mov    ds:0xd5029abc,eax
  423122:	(bad)  
  423123:	(bad)  
  423124:	and    eax,0x3851651b
  423129:	inc    ecx
  42312a:	mov    ebp,gs
  42312c:	mov    al,0xf7
  42312e:	out    0xb7,eax
  423130:	sub    BYTE PTR [ecx],dh
  423132:	mov    ecx,DWORD PTR [ebx+0x509f6cb2]
  423138:	inc    edx
  423139:	loop   0x4230e6
  42313b:	test   eax,0xb7e22413
  423140:	(bad)  
  423141:	loop   0x4231c1
  423143:	push   es
  423144:	jmp    0x423104
  423146:	aas    
  423147:	gs (bad) 
  423149:	mov    eax,0xc31f532d
  42314e:	test   DWORD PTR [edx-0xb5c4ae8],ecx
  423154:	mov    ebp,0xf355e4a7
  423159:	push   esp
  42315a:	adc    bl,BYTE PTR [edx]
  42315c:	js     0x42312a
  42315e:	inc    eax
  42315f:	add    eax,0x1018a64a
  423164:	(bad)  
  423165:	popa   
  423166:	mov    esp,0x8cb4851
  42316b:	daa    
  42316c:	jnp    0x423147
  42316e:	ins    BYTE PTR es:[edi],dx
  42316f:	mov    BYTE PTR [edi+0x42],al
  423172:	pop    edi
  423173:	cli    
  423174:	je     0x423157
  423176:	outs   dx,DWORD PTR gs:[esi]
  423178:	adc    DWORD PTR [esi-0x6cf2445d],0x21
  42317f:	rcl    BYTE PTR [eax-0x4a],0xae
  423183:	loop   0x423113
  423185:	ret    
  423186:	imul   ebx,DWORD PTR ds:0x1099dc14,0x47
  42318d:	jno    0x42317c
  42318f:	cmp    ecx,DWORD PTR [ebx]
  423191:	ret    
  423192:	or     BYTE PTR [ecx-0x40c1cb29],0x3b
  423199:	and    ecx,DWORD PTR [eax+0x26]
  42319c:	dec    edx
  42319d:	mov    al,ds:0xe596739b
  4231a2:	in     al,0xd7
  4231a4:	mul    DWORD PTR [ebp-0x1a7302b7]
  4231aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231ab:	outs   dx,BYTE PTR ds:[esi]
  4231ac:	xor    DWORD PTR [ecx],0x35c62ca6
  4231b2:	aas    
  4231b3:	imul   DWORD PTR [edi-0x7c0f38b2]
  4231b9:	outs   dx,BYTE PTR ds:[esi]
  4231ba:	pop    ecx
  4231bb:	mov    ds:0xdf1fdc1d,eax
  4231c0:	mov    esp,eax
  4231c2:	pop    es
  4231c3:	sar    DWORD PTR [edx+0x67ae8273],cl
  4231c9:	sub    DWORD PTR [ecx],ebp
  4231cb:	enter  0x5fcf,0x68
  4231cf:	mov    esi,0x43c1f397
  4231d4:	sbb    DWORD PTR [ecx+0x4671fb5a],esi
  4231da:	jne    0x4231b3
  4231dc:	mov    ah,0xa2
  4231de:	mov    ecx,0xc38c1d55
  4231e3:	add    al,0x2e
  4231e5:	add    esi,esi
  4231e7:	nop
  4231e8:	ss ss jg 0x423171
  4231ec:	jne    0x42317c
  4231ee:	adc    ch,BYTE PTR [edx+0x690841d1]
  4231f4:	fimul  WORD PTR [ecx]
  4231f6:	jmp    0x38d4:0x6b2b4b67
  4231fd:	inc    esi
  4231fe:	repz add eax,0x81e237db
  423204:	mov    eax,ds:0x809acfe0
  423209:	pop    ds
  42320a:	aaa    
  42320b:	sub    dh,BYTE PTR [eax]
  42320d:	scas   eax,DWORD PTR es:[edi]
  42320e:	sar    BYTE PTR [eax-0x13],1
  423211:	push   ss
  423212:	out    0x31,al
  423214:	scas   eax,DWORD PTR es:[edi]
  423215:	repz (bad) 
  423217:	pop    esi
  423218:	pop    ecx
  423219:	nop
  42321a:	mov    edx,0xcf265144
  42321f:	mov    edi,0xa1a5a740
  423224:	dec    esi
  423225:	fwait
  423226:	cmp    DWORD PTR [eax+0x1fb8b6],esi
  42322c:	cmp    DWORD PTR [eax-0x39],ebx
  42322f:	lods   eax,DWORD PTR ds:[esi]
  423230:	clc    
  423231:	aad    0x66
  423233:	jne    0x4231f5
  423235:	shr    BYTE PTR [esi],0xeb
  423238:	jmp    0x4232b5
  42323a:	adc    DWORD PTR [edi],ebp
  42323c:	jg     0x4231c1
  42323e:	add    bh,BYTE PTR [edi+0x6f]
  423241:	dec    eax
  423242:	test   eax,0x3e36df48
  423247:	mov    ebp,0xa1a67694
  42324c:	mov    DWORD PTR [ecx],eax
  42324e:	push   ebp
  42324f:	(bad)  [eax+edx*8+0x5d346c44]
  423256:	push   esp
  423257:	cmp    BYTE PTR [edi+eax*1-0x263e50c0],cl
  42325e:	imul   dh
  423260:	pusha  
  423261:	pop    ds
  423262:	ret    
  423263:	push   es
  423264:	inc    ecx
  423265:	add    al,0x86
  423267:	pushf  
  423268:	js     0x42322d
  42326a:	push   esp
  42326b:	aad    0x91
  42326d:	xchg   BYTE PTR [eax+0x3ade7717],cl
  423273:	xor    al,0x18
  423275:	in     al,dx
  423276:	out    dx,al
  423277:	fadd   DWORD PTR [edi-0x87d15ad]
  42327d:	pusha  
  42327e:	pop    es
  42327f:	mov    ebx,0x4328ea8d
  423284:	inc    esp
  423285:	sahf   
  423286:	mov    esi,0x410ee27c
  42328b:	mov    ebp,0xb9be8670
  423290:	and    eax,0xb95ac621
  423295:	xor    eax,0x3fbc61c6
  42329a:	sbb    BYTE PTR [eax+ebx*4],dh
  42329d:	stos   BYTE PTR es:[edi],al
  42329e:	mov    esp,0xac03fee3
  4232a3:	nop
  4232a4:	cmc    
  4232a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232a6:	call   0x9aca:0xf9e477f8
  4232ad:	and    dl,BYTE PTR [ebp+0x61]
  4232b0:	sub    bl,al
  4232b2:	and    cl,BYTE PTR [eax]
  4232b4:	mov    bh,0x43
  4232b6:	xor    eax,0xf3c043e6
  4232bb:	inc    edx
  4232bc:	stc    
  4232bd:	xor    dl,BYTE PTR [eax+0x46]
  4232c0:	pop    eax
  4232c1:	(bad)  
  4232c2:	fisttp QWORD PTR [ebx+0x51]
  4232c5:	mov    WORD PTR [ecx],?
  4232c7:	jmp    0x50d:0xbe0d013b
  4232ce:	xchg   esi,eax
  4232cf:	dec    eax
  4232d0:	or     DWORD PTR [ebp-0x1058e76d],ecx
  4232d6:	jo     0x423327
  4232d8:	mov    ds:0x7bb0ff96,eax
  4232dd:	jp     0x423337
  4232df:	sbb    bh,dl
  4232e1:	push   ebx
  4232e2:	dec    eax
  4232e3:	sbb    DWORD PTR [edx],0x54ca7cac
  4232e9:	rcl    BYTE PTR [ecx+edi*1+0x54af6405],cl
  4232f0:	cmp    ecx,DWORD PTR [eax+0x3a]
  4232f3:	stos   DWORD PTR es:[edi],eax
  4232f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232f5:	sub    eax,0x7ef62ad8
  4232fa:	push   eax
  4232fb:	and    eax,ebp
  4232fd:	push   ebp
  4232fe:	sbb    eax,0x793e51d3
  423303:	dec    esp
  423304:	dec    ebx
  423305:	sub    eax,0x461f6683
  42330a:	ret    
  42330b:	mov    eax,ds:0x913ca0e7
  423310:	(bad)  
  423311:	(bad)  
  423312:	(bad)  
  423313:	jmp    FWORD PTR [ebp-0x497d6cc1]
  423319:	push   ds
  42331a:	fcmovb st,st(3)
  42331c:	xor    BYTE PTR [ecx],dh
  42331e:	cmp    edi,DWORD PTR [ebp+eiz*4+0x48]
  423322:	xchg   DWORD PTR [esi-0x5f],ebp
  423325:	adc    dl,BYTE PTR fs:[ecx+0x31]
  423329:	mov    eax,0xeb5166a6
  42332e:	(bad)  [ebp-0x4c]
  423331:	cmp    eax,0xb8d24b69
  423336:	mov    ah,0x73
  423338:	or     al,BYTE PTR [edi+0x5615a36c]
  42333e:	sub    eax,0x1c5e8924
  423343:	push   es
  423344:	out    dx,eax
  423345:	xchg   BYTE PTR [ebx-0x7c],ch
  423348:	sbb    BYTE PTR [esi+eax*4+0x55d58fdb],ch
  42334f:	push   esi
  423350:	mov    dh,0xe5
  423352:	lods   eax,DWORD PTR ds:[esi]
  423353:	and    BYTE PTR [ecx+0x40474b4a],ch
  423359:	fdiv   QWORD PTR ds:0xad1ddc1a
  42335f:	xchg   ecx,eax
  423360:	xchg   edx,eax
  423361:	cmp    bl,BYTE PTR ds:0x526a02df
  423367:	ror    DWORD PTR [edx+0x37],cl
  42336a:	arpl   bp,di
  42336c:	gs retf 
  42336e:	loopne 0x423377
  423370:	xchg   esp,eax
  423371:	std    
  423372:	xlat   BYTE PTR ds:[ebx]
  423373:	mov    eax,ds:0xa4e17a30
  423378:	fsubr  QWORD PTR [ecx+eax*1]
  42337b:	js     0x42335e
  42337d:	cld    
  42337e:	hlt    
  42337f:	xchg   ebp,eax
  423380:	ret    
  423381:	fnstsw WORD PTR [edx-0x63]
  423384:	xchg   ecx,eax
  423385:	sub    al,0x45
  423387:	out    0xce,al
  423389:	test   al,0x49
  42338b:	aam    0x11
  42338d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42338e:	in     al,0xff
  423390:	push   0xb3aba317
  423395:	test   BYTE PTR [edx-0x35c9af26],bh
  42339b:	push   es
  42339c:	stc    
  42339d:	jmp    0x53d9:0xc736d3f6
  4233a4:	clc    
  4233a5:	mov    bl,0x5f
  4233a7:	fdivr  DWORD PTR [eax-0x5cfc2417]
  4233ad:	aad    0x1c
  4233af:	adc    ebp,ebx
  4233b1:	mov    BYTE PTR [edi-0x34a8a281],al
  4233b7:	rol    ebx,cl
  4233b9:	adc    al,0x6d
  4233bb:	dec    esi
  4233bc:	jae    0x4233b0
  4233be:	add    al,0x2f
  4233c0:	mov    dh,0xfd
  4233c2:	cmp    eax,0xebb94bad
  4233c7:	mov    ah,0x9
  4233c9:	jae    0x4233fb
  4233cb:	xlat   BYTE PTR ds:[ebx]
  4233cc:	mov    ecx,0x4f2ab62e
  4233d1:	popf   
  4233d2:	cmp    BYTE PTR [edx],al
  4233d4:	or     DWORD PTR [edi-0x5d],edx
  4233d7:	clc    
  4233d8:	push   edx
  4233d9:	pop    esi
  4233da:	dec    esi
  4233db:	popa   
  4233dc:	(bad)  
  4233dd:	aam    0x5d
  4233df:	and    eax,0x34b7f4bd
  4233e4:	lds    ebp,FWORD PTR [eax+ebp*2]
  4233e7:	push   edi
  4233e8:	out    dx,al
  4233e9:	cmp    BYTE PTR [eax-0x4f],ch
  4233ec:	xor    DWORD PTR [eax+0x76a9fed7],ebx
  4233f2:	xchg   edi,eax
  4233f3:	cwde   
  4233f4:	(bad)  
  4233f5:	rcr    DWORD PTR [ebp-0x6],1
  4233f8:	mov    bl,dh
  4233fa:	ficomp DWORD PTR [esi+edx*4+0x332c6be4]
  423401:	out    0xc8,al
  423403:	repnz cmc 
  423405:	or     BYTE PTR [ebp+edx*8+0xf],ah
  423409:	ret    0xa093
  42340c:	mov    ecx,esi
  42340e:	cmp    cl,BYTE PTR ds:[esi+0x334a7918]
  423415:	mov    eax,0x8e933632
  42341a:	jl     0x4233c4
  42341c:	dec    ecx
  42341d:	jg     0x423430
  42341f:	(bad)  
  423420:	iret   
  423421:	enter  0xaccd,0x81
  423425:	jecxz  0x42344f
  423427:	xor    edx,DWORD PTR [esi-0x38d4e728]
  42342d:	fnstenv [edx+0x162ef901]
  423433:	clc    
  423434:	xchg   ecx,eax
  423435:	add    BYTE PTR [ecx],dl
  423437:	push   eax
  423438:	fdivr  QWORD PTR [eax]
  42343a:	hlt    
  42343b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42343c:	dec    ebx
  42343d:	jne    0x4233ed
  42343f:	int    0xdf
  423441:	mov    bl,0x6f
  423443:	lods   eax,DWORD PTR ds:[esi]
  423444:	sub    ebp,edi
  423446:	jl     0x4233d6
  423448:	mov    al,0x0
  42344a:	div    dh
  42344c:	push   cs
  42344d:	cld    
  42344e:	or     dh,BYTE PTR [eax+0x43be422f]
  423454:	jo     0x423461
  423456:	xor    BYTE PTR [ecx+ebp*4],cl
  423459:	fs aas 
  42345b:	cmpps  xmm6,XMMWORD PTR [ebx-0x1c66849f],0xf
  423463:	inc    esp
  423464:	neg    bl
  423466:	ins    DWORD PTR es:[edi],dx
  423467:	pop    esp
  423468:	pop    edx
  423469:	clc    
  42346a:	mov    ds:0x4d239e0c,al
  42346f:	push   esp
  423470:	jecxz  0x42348e
  423472:	(bad)  [edi]
  423474:	in     eax,0x6b
  423476:	pop    es
  423477:	int    0xee
  423479:	mov    dl,0xee
  42347b:	adc    BYTE PTR [ebx],dh
  42347d:	aad    0x25
  42347f:	rcr    BYTE PTR [edi-0x12],0xaa
  423483:	add    al,0x9c
  423485:	cmp    eax,0x83f8f3c2
  42348a:	ds stos DWORD PTR es:[edi],eax
  42348c:	mov    esi,0x664242de
  423491:	fld    QWORD PTR [esi]
  423493:	rcr    BYTE PTR [edx],1
  423495:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423496:	cmp    BYTE PTR [eax+eax*4+0x58],ch
  42349a:	pop    ds
  42349b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42349c:	or     al,0x89
  42349e:	pop    edx
  42349f:	cmp    BYTE PTR [esi+0x7a],0x2a
  4234a3:	mov    al,ds:0xe317bfae
  4234a8:	out    dx,eax
  4234a9:	mov    esi,0x45b15a4c
  4234ae:	mov    ebx,0xe1d6d05a
  4234b3:	push   edi
  4234b4:	test   al,0xd5
  4234b6:	jmp    0x39a4956e
  4234bb:	popa   
  4234bc:	add    DWORD PTR [ebx-0x51],edi
  4234bf:	ds mov eax,0xd418213f
  4234c5:	aas    
  4234c6:	jecxz  0x423512
  4234c8:	pop    ebp
  4234c9:	mov    dh,0x83
  4234cb:	add    DWORD PTR [ecx-0x3ec6da54],ecx
  4234d1:	xor    DWORD PTR ds:0x778828eb,ebp
  4234d7:	(bad)  
  4234d8:	fistp  QWORD PTR [edx-0x4]
  4234db:	nop
  4234dc:	and    esi,DWORD PTR [eax]
  4234de:	add    dh,cl
  4234e0:	dec    edx
  4234e1:	gs cwde 
  4234e3:	ret    0xfe9a
  4234e6:	or     al,0xed
  4234e8:	test   DWORD PTR [eax],ebx
  4234ea:	mov    ds:0x92ddcc98,al
  4234ef:	stos   BYTE PTR es:[edi],al
  4234f0:	adc    al,0x7a
  4234f2:	sbb    BYTE PTR [edi+esi*2],ch
  4234f5:	pop    ebp
  4234f6:	sub    bh,cl
  4234f8:	enter  0x3c24,0xe0
  4234fc:	inc    ebp
  4234fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234fe:	pop    ebp
  4234ff:	inc    edx
  423500:	jp     0x423578
  423502:	push   esp
  423503:	xchg   esp,eax
  423504:	xchg   edi,eax
  423505:	fcom   DWORD PTR [edi+ecx*8+0x5c354a6d]
  42350c:	and    esi,esp
  42350e:	out    0xde,eax
  423510:	xchg   edi,eax
  423511:	inc    ecx
  423512:	push   ss
  423513:	add    BYTE PTR [ebp-0x37decac1],0x34
  42351a:	jo     0x423532
  42351c:	test   BYTE PTR [edi+0x3d3f6b24],0xcc
  423523:	xor    DWORD PTR [ebp+0xe],esi
  423526:	adc    BYTE PTR ds:0x4d3964fe,ah
  42352c:	push   ecx
  42352d:	mov    ah,0xae
  42352f:	add    DWORD PTR [eax-0x4d],0x71c524e5
  423536:	mov    cl,0x1f
  423538:	or     dh,BYTE PTR [esi]
  42353a:	gs dec esi
  42353c:	iret   
  42353d:	in     eax,dx
  42353e:	outs   dx,DWORD PTR ds:[esi]
  42353f:	pop    ss
  423540:	dec    ebp
  423541:	adc    edx,DWORD PTR [ecx+0x6e819b47]
  423547:	sub    eax,0x4d37b674
  42354c:	xchg   BYTE PTR [edi+0x6e],bh
  42354f:	std    
  423550:	mov    eax,0xb4e3c0b8
  423555:	dec    ecx
  423556:	xchg   bl,cl
  423558:	into   
  423559:	pop    ecx
  42355a:	call   0x905d1f8b
  42355f:	stos   DWORD PTR es:[edi],eax
  423560:	add    eax,0x4cd77700
  423565:	jno    0x423587
  423567:	js     0x423559
  423569:	(bad)  
  42356a:	pop    eax
  42356b:	fisubr DWORD PTR [ecx-0x36]
  42356e:	cmp    edx,DWORD PTR [esi+0x4d]
  423571:	ret    
  423572:	and    BYTE PTR [eax+ebp*2+0x24],al
  423576:	fdivr  DWORD PTR [eax+ecx*1-0x42ead54e]
  42357d:	int    0x33
  42357f:	add    eax,0x595c2bab
  423584:	jo     0x423513
  423586:	sahf   
  423587:	xchg   ebx,eax
  423588:	mov    edx,0xb4474b84
  42358d:	mov    ecx,0xfe333dc6
  423592:	mov    esp,0xb1a489b6
  423597:	lods   eax,DWORD PTR ds:[esi]
  423598:	xor    BYTE PTR [esi-0xa],bh
  42359b:	adc    al,0xf1
  42359d:	mov    ah,0x98
  42359f:	lea    esp,[edi+0x3c]
  4235a2:	cdq    
  4235a3:	xor    eax,0x697eae6d
  4235a8:	add    BYTE PTR [ebx-0x334f45ec],0x68
  4235af:	test   DWORD PTR [eax],0x729846f
  4235b5:	mov    ch,0xef
  4235b7:	stos   BYTE PTR es:[edi],al
  4235b8:	inc    ebp
  4235b9:	xchg   ebx,eax
  4235ba:	ins    BYTE PTR es:[edi],dx
  4235bb:	inc    esi
  4235bc:	mov    dh,0x84
  4235be:	repnz mov dh,BYTE PTR [ecx+0x1937d75f]
  4235c5:	sub    al,0x53
  4235c7:	pop    edx
  4235c8:	inc    edi
  4235c9:	xchg   edx,eax
  4235ca:	mov    edx,0xeb6e72da
  4235cf:	stos   BYTE PTR es:[edi],al
  4235d0:	or     DWORD PTR [ecx],esi
  4235d2:	aad    0x22
  4235d4:	jno    0x423556
  4235d6:	(bad)  
  4235d7:	push   esp
  4235d8:	adc    BYTE PTR [eax+0x6a77fcd4],dh
  4235de:	ss jbe 0x4235fc
  4235e1:	lahf   
  4235e2:	mov    ch,0x1a
  4235e4:	daa    
  4235e5:	in     eax,0xca
  4235e7:	cmc    
  4235e8:	inc    edi
  4235e9:	push   cs
  4235ea:	ins    BYTE PTR es:[edi],dx
  4235eb:	sti    
  4235ec:	iret   
  4235ed:	sub    BYTE PTR [edi-0x6c],bh
  4235f0:	fistp  DWORD PTR [ebx+edx*2+0x6f403f2]
  4235f7:	popa   
  4235f8:	mov    cs,WORD PTR [edi+0x6541e197]
  4235fe:	cmp    eax,0xe8e9675a
  423603:	mov    dh,0x28
  423605:	push   0x4c91bb33
  42360a:	std    
  42360b:	jnp    0x423598
  42360d:	loope  0x423595
  42360f:	(bad)  
  423610:	mov    bl,0x5d
  423612:	add    eax,0x6795a7d0
  423617:	add    esi,0xffffffac
  42361a:	adc    eax,0x61bb086b
  42361f:	sub    DWORD PTR [eax-0x10e2fd2c],0x57
  423626:	(bad)  
  423627:	arpl   bp,di
  423629:	mov    al,ds:0xf544573a
  42362e:	inc    ebx
  42362f:	(bad)  
  423630:	in     eax,0x74
  423632:	rol    BYTE PTR [ebx],cl
  423634:	int    0xe0
  423636:	scas   al,BYTE PTR es:[edi]
  423637:	xor    eax,0x909b9df1
  42363c:	ficomp WORD PTR [eax-0x7a36975f]
  423642:	pop    esp
  423643:	sbb    edx,ebx
  423645:	mov    gs,edx
  423647:	pop    edi
  423648:	xor    al,0x19
  42364a:	(bad)  
  42364b:	lods   al,BYTE PTR ds:[esi]
  42364c:	and    eax,0xffc646c9
  423651:	xor    al,0xa6
  423653:	popa   
  423654:	test   ah,ah
  423656:	(bad)  
  423657:	ins    DWORD PTR es:[edi],dx
  423658:	jle    0x4235f9
  42365a:	dec    ebx
  42365b:	fld    QWORD PTR [edi]
  42365d:	dec    ecx
  42365e:	cmp    eax,0x29b42dce
  423663:	pop    esi
  423664:	mov    ebp,0xb54b046c
  423669:	cmp    al,0x88
  42366b:	call   0x4a5:0x6de7d712
  423672:	push   eax
  423673:	mov    ebp,0x1b4d443
  423678:	adc    DWORD PTR [esi],ebx
  42367a:	push   ds
  42367b:	push   esp
  42367c:	(bad)  
  42367d:	sbb    eax,0x7869682d
  423682:	or     ecx,ecx
  423684:	xor    edx,DWORD PTR [edi]
  423686:	aam    0x82
  423688:	call   0x7b05d2c4
  42368d:	ja     0x42361e
  42368f:	dec    esi
  423690:	outs   dx,DWORD PTR ds:[esi]
  423691:	int    0x3b
  423693:	mov    ecx,0xab37dd2
  423698:	inc    edi
  423699:	dec    ecx
  42369a:	(bad)  
  42369b:	sar    BYTE PTR [ecx-0x27],1
  42369e:	mov    ch,0x60
  4236a0:	lahf   
  4236a1:	and    al,0x22
  4236a4:	jns    0x42369e
  4236a6:	push   eax
  4236a7:	mov    cl,0x5d
  4236a9:	shl    edi,1
  4236ab:	(bad)  
  4236ac:	icebp  
  4236ad:	inc    esi
  4236ae:	mov    ds:0xbfa5d0ac,al
  4236b3:	(bad)  
  4236b4:	push   esi
  4236b5:	lds    eax,FWORD PTR [edi]
  4236b7:	cvtps2pd xmm4,xmm6
  4236ba:	(bad)
  4236be:	dec    esp
  4236bf:	inc    ah
  4236c1:	call   0x3f99ee25
  4236c6:	or     DWORD PTR [ebp-0x555017a2],0x75
  4236cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236ce:	and    al,0xc1
  4236d0:	mov    BYTE PTR [ebx-0x405e70e7],0x34
  4236d7:	out    0xcf,eax
  4236d9:	repnz or DWORD PTR [ebx+edi*4+0x75],esp
  4236de:	cwde   
  4236df:	jns    0x42372b
  4236e1:	adc    ecx,DWORD PTR [ecx+0x59]
  4236e4:	in     al,0x94
  4236e6:	cdq    
  4236e7:	xchg   ebp,eax
  4236e8:	sub    al,0x20
  4236ea:	div    BYTE PTR [ecx+0x2b]
  4236ed:	xor    eax,DWORD PTR fs:[esi+0x519722df]
  4236f4:	mov    ds:0x2385f5ad,eax
  4236f9:	lahf   
  4236fa:	xchg   esi,eax
  4236fb:	mov    edx,0x5c6715b8
  423700:	xchg   DWORD PTR [esi],esp
  423702:	inc    esp
  423703:	popf   
  423704:	das    
  423705:	xchg   edi,eax
  423706:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423707:	fwait
  423708:	lahf   
  423709:	inc    ebp
  42370a:	xor    edx,DWORD PTR [esi+ecx*8]
  42370d:	(bad)  
  42370e:	aas    
  42370f:	jecxz  0x423702
  423711:	sbb    esp,DWORD PTR [ebx]
  423713:	xor    dl,BYTE PTR [edx]
  423715:	pop    ebp
  423716:	add    DWORD PTR [edi+ebp*2-0x30],esp
  42371a:	mov    ebx,0x9357ec6f
  42371f:	mov    ebp,0x73ad9661
  423724:	pop    ecx
  423725:	mov    bl,0x66
  423727:	xchg   edx,eax
  423728:	pop    eax
  423729:	popa   
  42372a:	test   eax,0xc236dde8
  42372f:	mov    esp,0xaaebf80f
  423734:	xor    bl,BYTE PTR [ebx-0x54]
  423737:	loope  0x4236f1
  423739:	aad    0xeb
  42373b:	enter  0x6cf1,0x4
  42373f:	mov    dl,0xcc
  423741:	mov    DWORD PTR [ebx+0x6789bd35],ecx
  423747:	mov    BYTE PTR [ecx-0x68e67152],ch
  42374d:	cs (bad) 
  42374f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423750:	dec    edi
  423751:	pop    edx
  423752:	or     eax,0x1566f815
  423757:	js     0x4237c0
  423759:	setne  BYTE PTR [edx-0x37]
  42375d:	push   esi
  42375e:	(bad)  
  42375f:	sbb    al,0x4a
  423761:	jnp    0x423792
  423763:	mov    ch,0xbd
  423765:	push   ebp
  423766:	stos   DWORD PTR es:[edi],eax
  423767:	push   0x123767d
  42376c:	adc    al,0x4b
  42376e:	mov    DWORD PTR [ebx+0xc9d5791],ebp
  423774:	das    
  423775:	fidivr DWORD PTR [ecx-0x5c]
  423778:	mov    ebp,0xd86ff267
  42377d:	push   es
  42377e:	and    BYTE PTR gs:[ebp+0x52],ch
  423782:	xchg   esp,eax
  423783:	sahf   
  423784:	sbb    al,0x10
  423786:	jo     0x4237a3
  423788:	cmp    eax,0x96b940d7
  42378d:	dec    eax
  42378e:	mov    gs,WORD PTR [edx-0x6e]
  423791:	cmp    eax,0x8ebdd5a3
  423796:	in     al,0x6d
  423798:	test   eax,0xf4422eb0
  42379d:	pusha  
  42379e:	rol    DWORD PTR [ebx],1
  4237a0:	fadd   QWORD PTR [eax]
  4237a2:	mov    dl,0xae
  4237a4:	les    ebx,FWORD PTR [edi+edx*8-0x3ca5f64]
  4237ab:	fst    DWORD PTR [ebp-0x1d71ef4]
  4237b1:	jmp    0x42381b
  4237b3:	mov    bh,0x95
  4237b5:	stc    
  4237b6:	mov    ch,0x48
  4237b8:	pop    esi
  4237b9:	stos   BYTE PTR es:[edi],al
  4237ba:	js     0x4237e9
  4237bc:	push   ebp
  4237bd:	mov    esp,0xe80b2926
  4237c2:	and    al,0x81
  4237c4:	sbb    bh,al
  4237c6:	test   BYTE PTR [ebp-0x71],dh
  4237c9:	dec    edx
  4237ca:	in     al,0x24
  4237cc:	xchg   ecx,eax
  4237cd:	fisub  DWORD PTR [ecx]
  4237cf:	cmp    cl,bl
  4237d1:	cdq    
  4237d2:	xor    eax,0x5ce19e1d
  4237d7:	scas   eax,DWORD PTR es:[edi]
  4237d8:	sahf   
  4237d9:	pop    ecx
  4237da:	add    ah,bh
  4237dc:	mov    bl,0x22
  4237de:	or     DWORD PTR [esi-0x3776dc7a],edi
  4237e4:	pop    esp
  4237e5:	cmp    BYTE PTR ds:0x4171e2cb,dl
  4237eb:	mov    dx,di
  4237ee:	(bad)  
  4237ef:	jg     0x423800
  4237f1:	jecxz  0x423806
  4237f3:	push   cs
  4237f4:	sub    DWORD PTR [edx+ecx*1-0x2465350c],eax
  4237fb:	cs pop ebp
  4237fd:	push   eax
  4237fe:	push   es
  4237ff:	push   cs
  423800:	out    dx,al
  423801:	cdq    
  423802:	mov    al,0x47
  423804:	xor    BYTE PTR [ecx],0xc7
  423807:	cmp    eax,0x575124ff
  42380c:	sub    DWORD PTR [ebp+0x51c3b81e],edx
  423812:	gs out 0xe7,al
  423815:	mov    ebx,0x15156c0a
  42381a:	in     eax,dx
  42381b:	dec    ebx
  42381c:	jae    0x4237db
  42381e:	fwait
  42381f:	out    dx,al
  423820:	or     DWORD PTR [edx-0x7dcd9083],edx
  423826:	push   DWORD PTR [edx]
  423828:	arpl   WORD PTR es:[edi+0x62d6927d],dx
  42382f:	xchg   esp,eax
  423830:	jns    0x423801
  423832:	push   edi
  423833:	jecxz  0x4237e4
  423835:	jmp    0x423819
  423837:	inc    edx
  423838:	xchg   esp,eax
  423839:	xchg   ebx,eax
  42383a:	lds    ebx,FWORD PTR [edx+0x1c]
  42383d:	mov    bh,0x7f
  42383f:	imul   esi,DWORD PTR [ebx+0x36],0xc39fc91d
  423846:	sub    al,0x2a
  423848:	sti    
  423849:	daa    
  42384a:	dec    esp
  42384b:	pop    esi
  42384c:	xchg   ebx,eax
  42384d:	or     WORD PTR [ebp+0x1a],cx
  423851:	jmp    0x3a2d5d05
  423856:	clc    
  423857:	xor    al,0xb8
  423859:	mov    al,0x24
  42385b:	dec    ecx
  42385c:	mov    cl,0x6c
  42385e:	pop    eax
  42385f:	push   ebp
  423860:	mov    bh,0x86
  423862:	test   al,0x6f
  423864:	aaa    
  423865:	mov    al,ds:0x715480aa
  42386a:	push   cs
  42386b:	retf   
  42386c:	mov    ds:0x6921a45f,al
  423871:	lock cmp al,0x42
  423874:	out    0xcb,al
  423876:	mov    ecx,0xf21115ad
  42387b:	mov    edi,0xf883db26
  423880:	dec    edi
  423881:	mov    al,ds:0xef689cdb
  423886:	xchg   edx,eax
  423887:	ret    
  423888:	ja     0x423862
  42388a:	xchg   edx,eax
  42388b:	fadd   DWORD PTR [edi+edi*2+0xa72d045]
  423892:	ins    DWORD PTR es:[edi],dx
  423893:	scas   al,BYTE PTR es:[edi]
  423894:	jno    0x42385d
  423896:	loope  0x4238a9
  423898:	and    DWORD PTR [ebx-0x4c],esp
  42389b:	retf   
  42389c:	cmp    DWORD PTR [edi],ebp
  42389e:	jl     0x4238d8
  4238a0:	cs adc eax,0x9a2360ef
  4238a6:	lds    esp,FWORD PTR [edi]
  4238a8:	xor    eax,0xca5a4edc
  4238ad:	add    BYTE PTR [ebx-0x76d87adc],al
  4238b3:	addr16 jae 0x423934
  4238b6:	imul   ebp,DWORD PTR [edx-0x7b],0x5b7051e6
  4238bd:	test   BYTE PTR [esp+edx*1-0x5851b7cc],cl
  4238c4:	xor    ecx,ecx
  4238c6:	sbb    ah,BYTE PTR [ecx]
  4238c8:	push   0xfe2c5781
  4238cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238ce:	and    BYTE PTR [ecx+0x5a479595],dl
  4238d4:	jbe    0x42386b
  4238d6:	mov    ds,WORD PTR [eax-0xb]
  4238d9:	adc    BYTE PTR [ebp+0x26daad5f],ah
  4238df:	shl    DWORD PTR [edx+edi*2],0x6
  4238e3:	mov    ebx,0x791b35ac
  4238e8:	outs   dx,BYTE PTR ds:[esi]
  4238e9:	mov    dl,0xdf
  4238eb:	lock mov ebx,0x5b3c3ef7
  4238f1:	lods   eax,DWORD PTR ds:[esi]
  4238f2:	out    0x52,eax
  4238f4:	dec    eax
  4238f5:	mov    ecx,0x7a8d229d
  4238fa:	sub    BYTE PTR [edx+0x76],bl
  4238fd:	xchg   ebx,ebx
  4238ff:	mov    al,0xb
  423901:	push   ebx
  423902:	pop    esi
  423903:	jge    0x42388e
  423905:	aam    0x8b
  423907:	in     eax,dx
  423908:	lea    esi,[eax+ebp*2+0x7d6e11c7]
  42390f:	ins    BYTE PTR es:[edi],dx
  423910:	(bad)  
  423911:	adc    edi,esi
  423913:	push   ebp
  423914:	sub    ebp,ebp
  423916:	sbb    esi,ebp
  423918:	loopne 0x423949
  42391a:	add    DWORD PTR [edi-0x78],edx
  42391d:	mov    cl,0x82
  42391f:	add    edx,DWORD PTR [edi-0x6d]
  423922:	push   ebx
  423923:	div    DWORD PTR [ebx+0x4c]
  423926:	cmp    eax,0x38c305f3
  42392b:	add    BYTE PTR [ebp+0x7b],al
  42392e:	test   DWORD PTR [ebx+0x61],ebx
  423931:	jbe    0x42393b
  423933:	div    bh
  423935:	bound  esp,QWORD PTR [ecx+esi*2-0x29]
  423939:	cwde   
  42393a:	inc    eax
  42393c:	or     ecx,DWORD PTR [edx-0x3e4b2e7b]
  423942:	sbb    dl,BYTE PTR [edi-0x6132ed14]
  423948:	popa   
  423949:	push   ecx
  42394a:	mov    WORD PTR [ebx-0x630b1114],gs
  423950:	fidiv  WORD PTR [ebp-0x7de72567]
  423956:	test   al,0x6f
  423958:	mov    ch,0x7c
  42395a:	adc    eax,0x63a435ad
  42395f:	and    eax,0xd838e548
  423964:	in     eax,dx
  423965:	xor    BYTE PTR [ebx+eax*2],al
  423968:	sub    al,0x9a
  42396a:	xor    edi,DWORD PTR [ebx-0x77909a53]
  423970:	xor    eax,0x4ba1fc1d
  423975:	aad    0xd6
  423977:	rcr    BYTE PTR [eax],1
  423979:	mov    ebx,0xfc7ace70
  42397e:	into   
  42397f:	xchg   ecx,eax
  423980:	loopne 0x4239af
  423982:	xchg   esi,eax
  423983:	push   edx
  423984:	mov    eax,ds:0xe2264058
  423989:	mov    al,0x5d
  42398b:	push   0xf2c55829
  423990:	sub    ebx,DWORD PTR [edi+0x1d]
  423993:	iret   
  423994:	dec    ecx
  423995:	push   0xffffffcf
  423997:	push   ebp
  423998:	pop    edx
  423999:	je     0x423959
  42399b:	repz mov ds:0xe2d6b94,eax
  4239a1:	fwait
  4239a2:	retf   0x55d5
  4239a5:	pop    esp
  4239a6:	add    bh,BYTE PTR [edi-0xaa4a8fc]
  4239ac:	lea    esp,[edi]
  4239ae:	cdq    
  4239af:	cld    
  4239b0:	dec    ebp
  4239b1:	in     eax,dx
  4239b2:	push   edi
  4239b3:	adc    ebp,DWORD PTR [edi-0x5c]
  4239b6:	mov    ss,WORD PTR [edi]
  4239b8:	imul   esp,DWORD PTR [ebp-0x1c],0xffffffb3
  4239bc:	jp     0x423949
  4239be:	xor    al,0xf1
  4239c0:	mov    eax,0x7a2ab0be
  4239c5:	int3   
  4239c6:	cmc    
  4239c7:	lds    ecx,FWORD PTR [edx-0x37]
  4239ca:	cmp    al,0xe1
  4239cc:	loopne 0x4239ba
  4239ce:	mov    bh,0xc
  4239d0:	xchg   DWORD PTR [esi-0x4d],ecx
  4239d3:	sbb    esp,DWORD PTR [edi]
  4239d5:	fmul   QWORD PTR [eax+0x5d1ce960]
  4239db:	out    dx,eax
  4239dc:	pop    esp
  4239dd:	jp     0x423a16
  4239df:	add    eax,0x9e2953bd
  4239e4:	inc    edx
  4239e5:	xchg   esp,eax
  4239e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4239e7:	mov    eax,ds:0xbb18c24c
  4239ec:	sub    ebx,esi
  4239ee:	mov    bh,0x43
  4239f0:	iret   
  4239f1:	sub    DWORD PTR [ecx-0x99c0819],0xfffffffa
  4239f8:	into   
  4239f9:	aas    
  4239fa:	idiv   ch
  4239fc:	or     BYTE PTR [esp+ebx*2-0x56079432],bl
  423a03:	cdq    
  423a04:	xor    BYTE PTR [edi+ecx*4+0x1b4dd8b4],al
  423a0b:	or     esi,DWORD PTR [esi+eiz*4+0x9]
  423a0f:	pop    eax
  423a10:	cs xchg ecx,eax
  423a12:	pop    esp
  423a13:	jp     0x423a08
  423a15:	sbb    al,0xb5
  423a17:	mov    esi,0xb826c4e9
  423a1c:	dec    eax
  423a1d:	retf   
  423a1e:	adc    BYTE PTR ds:0x4e70edfa,cl
  423a24:	push   0x6d
  423a26:	aaa    
  423a27:	mov    DWORD PTR [edx-0x271a88e6],esi
  423a2d:	inc    eax
  423a2e:	test   eax,0x34f69c12
  423a34:	mov    cl,0xdd
  423a36:	leave  
  423a37:	and    DWORD PTR [ebp+0x45bedf74],edx
  423a3d:	add    eax,0xa1195e62
  423a42:	jp     0x423a0a
  423a44:	(bad)  
  423a45:	(bad)  
  423a46:	jns    0x423a22
  423a48:	xor    al,0xd6
  423a4a:	mov    al,ah
  423a4c:	mov    ebx,0x77377a69
  423a51:	pop    esp
  423a52:	imul   ebx,DWORD PTR [ebx-0xb],0x43177e99
  423a59:	cmp    DWORD PTR [eax-0x4ec8ccb3],ecx
  423a5f:	push   ebx
  423a60:	iret   
  423a61:	je     0x423a82
  423a63:	xlat   BYTE PTR ds:[ebx]
  423a64:	mov    cl,0x65
  423a66:	pop    es
  423a67:	fisttp WORD PTR [ecx]
  423a69:	adc    BYTE PTR [ebx],bh
  423a6b:	or     bl,BYTE PTR [esi+0x6b]
  423a6e:	sbb    ebp,0x37dc49b
  423a74:	sbb    al,0x73
  423a76:	sub    eax,0x4f660be0
  423a7b:	(bad)  
  423a7c:	lock mov al,0x6b
  423a80:	and    eax,0xc02a1a41
  423a85:	loopne 0x423a5d
  423a87:	cmp    eax,0x32ed4ad9
  423a8c:	jge    0x423a15
  423a8e:	test   al,0x3a
  423a90:	stos   DWORD PTR es:[edi],eax
  423a91:	repz cmps DWORD PTR cs:[esi],DWORD PTR es:[edi]
  423a94:	ja     0x423b0b
  423a96:	(bad)  
  423a97:	cmc    
  423a98:	push   ecx
  423a99:	mov    ecx,0x6577da4
  423a9e:	push   0xffffffde
  423aa0:	mov    bh,0x5c
  423aa2:	mov    esi,0x5268e45e
  423aa7:	mov    ds:0x79c0cc33,eax
  423aac:	aad    0x28
  423aae:	inc    DWORD PTR [eax+ebx*4+0x39b4acb3]
  423ab5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ab6:	(bad)  
  423ab7:	xor    edx,DWORD PTR [esi+ecx*1]
  423aba:	mov    ebx,0x7f0559d7
  423abf:	clc    
  423ac0:	mov    ch,0x82
  423ac2:	imul   BYTE PTR [edi-0x736a8475]
  423ac8:	pop    es
  423ac9:	or     ch,al
  423acb:	(bad)  
  423acc:	mov    BYTE PTR [esi+0x6a85d7e],cl
  423ad2:	xor    al,0x49
  423ad4:	push   cs
  423ad5:	dec    esi
  423ad6:	mov    fs,WORD PTR [esi+eax*1+0x5]
  423ada:	inc    esp
  423adb:	mov    edi,0x5ab96b3d
  423ae0:	xor    esi,ebx
  423ae2:	loop   0x423aa3
  423ae4:	push   ebx
  423ae5:	ret    0x4969
  423ae8:	fild   QWORD PTR [ecx]
  423aea:	idiv   bl
  423aec:	loop   0x423aa0
  423aee:	xor    ah,cl
  423af0:	dec    eax
  423af1:	pop    esp
  423af2:	sub    ebx,ecx
  423af4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423af5:	popa   
  423af6:	xchg   BYTE PTR ds:0x82f597a8,ch
  423afc:	in     eax,0x2d
  423afe:	leave  
  423aff:	pop    esp
  423b00:	push   ds
  423b01:	mov    ah,0x1e
  423b03:	sahf   
  423b04:	adc    esi,esi
  423b06:	(bad)  [eax-0x37]
  423b09:	out    dx,al
  423b0a:	lock xlat BYTE PTR ds:[ebx]
  423b0c:	addr16 pop ds
  423b0e:	pusha  
  423b0f:	jp     0x423a95
  423b11:	xchg   esi,esp
  423b13:	push   esi
  423b14:	jne    0x423af3
  423b16:	inc    ebp
  423b17:	shr    esp,1
  423b19:	xchg   ebp,eax
  423b1a:	pop    ds
  423b1b:	jbe    0x423b11
  423b1d:	jo     0x423b9e
  423b1f:	shr    BYTE PTR [esi+ebp*2+0x19ebae90],cl
  423b26:	lds    esi,FWORD PTR [ebp+esi*4+0x69]
  423b2a:	in     al,dx
  423b2b:	cmc    
  423b2c:	jg     0x423ac7
  423b2e:	out    dx,eax
  423b2f:	push   0xe1130c98
  423b34:	in     eax,0x45
  423b36:	push   ebp
  423b37:	ss or  al,0xdc
  423b3a:	xchg   DWORD PTR [edi-0x78],ebp
  423b3d:	loopne 0x423b7c
  423b3f:	push   cs
  423b40:	in     eax,dx
  423b41:	xor    ecx,ecx
  423b43:	adc    al,0xbe
  423b45:	xchg   DWORD PTR [ebp+0x36],ecx
  423b48:	repnz mov BYTE PTR [eax],0x45
  423b4c:	pop    edi
  423b4d:	lods   al,BYTE PTR ds:[esi]
  423b4e:	fs cli 
  423b50:	data16 int 0x1c
  423b53:	ds mov dl,0x21
  423b56:	and    ebp,DWORD PTR [ebp+0x4aa7d69b]
  423b5c:	call   DWORD PTR [ebx+edx*2+0x7f096988]
  423b63:	lods   al,BYTE PTR ds:[esi]
  423b64:	in     al,0x18
  423b66:	ret    0xe62
  423b69:	fistp  WORD PTR [eax-0x58]
  423b6c:	call   0xf5f0:0x6eb331dc
  423b73:	fild   QWORD PTR [esi+0x39808523]
  423b79:	mov    ebp,0x6ff94807
  423b7e:	jns    0x423b71
  423b80:	mov    esp,0xffc8a83
  423b85:	pop    esp
  423b86:	sbb    al,0xfb
  423b88:	xchg   ebx,eax
  423b89:	in     eax,0xaa
  423b8b:	mov    edi,0x8754a529
  423b90:	stos   BYTE PTR es:[edi],al
  423b91:	mov    ecx,0xc866db6
  423b96:	pop    ss
  423b97:	jno    0x423b5f
  423b99:	cld    
  423b9a:	cs sbb eax,0xb80c9c3a
  423ba0:	test   DWORD PTR [esi],eax
  423ba2:	test   BYTE PTR [bp+0x483c],al
  423ba7:	or     ebx,esp
  423ba9:	push   cs
  423baa:	pop    es
  423bab:	and    dl,bh
  423bad:	mov    al,0x52
  423baf:	lea    esi,[ecx]
  423bb1:	sub    bh,BYTE PTR [ecx+0x15]
  423bb4:	and    DWORD PTR [edx+0x67],edx
  423bb7:	addr16 cmc 
  423bb9:	addr16 xchg ebp,eax
  423bbb:	stos   DWORD PTR es:[edi],eax
  423bbc:	icebp  
  423bbd:	xor    edi,DWORD PTR [edx+0x28]
  423bc0:	cmp    eax,0x8a83dca9
  423bc5:	jno    0x423bd1
  423bc7:	dec    ecx
  423bc8:	es inc ebx
  423bca:	push   0x4bda358e
  423bcf:	(bad)  
  423bd0:	jbe    0x423bf1
  423bd2:	test   BYTE PTR [eax],cl
  423bd4:	xor    al,0x8e
  423bd6:	fisttp QWORD PTR [eax+0x1f5827fc]
  423bdd:	or     eax,0x90f73d2c
  423be2:	inc    ecx
  423be3:	out    dx,al
  423be4:	inc    ebx
  423be5:	imul   edi,DWORD PTR [edi+0x48],0xc6ef7a7e
  423bec:	fsubr  DWORD PTR [edi]
  423bee:	stos   DWORD PTR es:[edi],eax
  423bef:	fadd   st(0),st
  423bf1:	push   eax
  423bf2:	mov    eax,0x102004cd
  423bf7:	(bad)  
  423bf8:	(bad)  [edi+0x4a]
  423bfb:	inc    eax
  423bfc:	(bad)  
  423bfd:	jecxz  0x423c16
  423bff:	int3   
  423c00:	inc    esi
  423c01:	add    dh,ch
  423c03:	jb     0x423ba7
  423c05:	pop    esi
  423c06:	cmp    BYTE PTR ds:0x7978ff59,cl
  423c0c:	dec    eax
  423c0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c0e:	fwait
  423c0f:	test   DWORD PTR ds:0x312333bf,ebp
  423c15:	xchg   ebp,eax
  423c16:	xor    esp,DWORD PTR [edi-0x3889ba79]
  423c1c:	into   
  423c1d:	inc    edi
  423c1e:	lds    esp,FWORD PTR [edx-0x20]
  423c21:	out    dx,eax
  423c22:	mov    ch,0xf
  423c24:	mov    edx,0xd1b19a1d
  423c29:	inc    esi
  423c2a:	(bad)  
  423c2b:	aaa    
  423c2c:	std    
  423c2d:	jmp    0x56c7a84f
  423c32:	data16 add bh,bl
  423c35:	mul    BYTE PTR [edx-0x764d23af]
  423c3b:	or     al,0x94
  423c3d:	sub    DWORD PTR [edi],esi
  423c3f:	xchg   DWORD PTR [ecx+0x52],ebp
  423c42:	aas    
  423c43:	pop    ebx
  423c44:	loope  0x423c40
  423c46:	jae    0x423cb4
  423c48:	lods   al,BYTE PTR ds:[esi]
  423c49:	pop    ebx
  423c4a:	cmp    esi,0x76
  423c4d:	out    0xaf,eax
  423c4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c50:	out    0x53,al
  423c52:	nop
  423c53:	repz xchg ecx,eax
  423c55:	jae    0x423c87
  423c57:	cli    
  423c58:	imul   esp,ebx,0x69836723
  423c5e:	xor    BYTE PTR [eax-0x42171e62],al
  423c64:	inc    ebp
  423c65:	sub    eax,0xc6d5f587
  423c6a:	stos   BYTE PTR es:[edi],al
  423c6b:	mov    ebx,0x63962b5d
  423c70:	xchg   ebp,eax
  423c71:	sub    BYTE PTR ds:0x10ef228c,0x74
  423c78:	inc    edi
  423c79:	addr16 (bad) 
  423c7b:	ds (bad) 
  423c7d:	xor    DWORD PTR [ebx],edx
  423c7f:	xchg   ebp,eax
  423c80:	sahf   
  423c81:	dec    esi
  423c82:	test   al,0xf5
  423c84:	adc    ebp,DWORD PTR [ebp-0xa]
  423c87:	out    0x45,eax
  423c89:	loope  0x423c16
  423c8b:	aas    
  423c8c:	xchg   DWORD PTR [ecx-0x66],edi
  423c8f:	dec    eax
  423c90:	jnp    0x423ccf
  423c92:	jnp    0x423ca3
  423c94:	mov    bl,0x27
  423c96:	pop    ss
  423c97:	mov    eax,0xed8840f
  423c9c:	add    BYTE PTR [eax],al
  423c9e:	jmp    0x423cae
  423ca3:	sub    edi,DWORD PTR ds:0x42a3a6
  423ca9:	mov    esi,0x3272ef
  423cae:	mov    eax,DWORD PTR [ebp-0x4]
  423cb1:	mov    edi,DWORD PTR [ebp-0x8]
  423cb4:	xor    edi,edx
  423cb6:	jmp    0x424b16
  423cbb:	sbb    DWORD PTR [esi+0x7],esp
  423cbe:	stc    
  423cbf:	sti    
  423cc0:	xchg   ebx,eax
  423cc1:	xchg   DWORD PTR [esi-0x7e0d41b7],eax
  423cc7:	jae    0x423c86
  423cc9:	dec    esp
  423cca:	cmp    ebp,esi
  423ccc:	mov    bh,BYTE PTR [ecx+0x7a]
  423ccf:	aas    
  423cd0:	je     0x423d4c
  423cd2:	jp     0x423d34
  423cd4:	inc    ebp
  423cd5:	cdq    
  423cd6:	pop    ecx
  423cd7:	std    
  423cd8:	pop    ds
  423cd9:	aam    0xec
  423cdb:	sub    BYTE PTR [eax+0x12],dl
  423cde:	enter  0x3a81,0x1c
  423ce2:	mov    ebp,0xa4b8f134
  423ce7:	add    BYTE PTR ds:0xa6e911f3,al
  423ced:	mov    eax,DWORD PTR [eax+0x18]
  423cf0:	and    dl,BYTE PTR [edx+0x6507489a]
  423cf6:	xchg   edx,eax
  423cf7:	mov    ebp,0x55461415
  423cfc:	mov    bh,0x45
  423cfe:	fadd   QWORD PTR [edx-0x35]
  423d01:	inc    esp
  423d02:	in     eax,dx
  423d03:	xchg   DWORD PTR [ecx-0x37600ae5],ecx
  423d09:	push   DWORD PTR [ecx]
  423d0b:	aam    0x65
  423d0d:	gs clc 
  423d0f:	xchg   ecx,eax
  423d10:	scas   eax,DWORD PTR es:[edi]
  423d11:	pushw  0x658a
  423d15:	repnz mov cl,0x27
  423d18:	xchg   esi,eax
  423d19:	jmp    0x3ac7:0xfb076cc0
  423d20:	pop    ecx
  423d21:	jae    0x423cad
  423d23:	push   0xf20a6276
  423d28:	or     ah,BYTE PTR [ebx+0x0]
  423d2b:	cmp    BYTE PTR [ebp-0x64],0x2b
  423d2f:	push   esp
  423d30:	test   eax,edi
  423d32:	mov    eax,eax
  423d34:	inc    edx
  423d35:	(bad)  
  423d36:	xor    bh,BYTE PTR [edi]
  423d38:	mov    ebx,0x69fc367c
  423d3d:	imul   ecx,DWORD PTR [edi],0x42
  423d40:	stc    
  423d41:	shr    DWORD PTR [esi+0x19],0x11
  423d45:	xor    al,0xa6
  423d47:	mov    eax,DWORD PTR [esi+0x4b2833]
  423d4d:	pop    ds
  423d4e:	pop    edx
  423d4f:	or     DWORD PTR [edx],ebx
  423d51:	xor    esp,DWORD PTR [ecx+ecx*1-0x608f5464]
  423d58:	or     ch,BYTE PTR [ecx+0x28]
  423d5b:	push   eax
  423d5c:	ret    
  423d5d:	retf   
  423d5e:	cld    
  423d5f:	and    BYTE PTR [esp],bl
  423d62:	out    dx,al
  423d63:	mov    cl,0xa4
  423d65:	or     DWORD PTR [edx+ecx*4-0x1],ecx
  423d69:	xchg   edx,eax
  423d6a:	ja     0x423dd0
  423d6c:	test   BYTE PTR [ebp-0x31c74fb4],dh
  423d72:	jo     0x423d08
  423d74:	or     ebp,DWORD PTR [esi-0x12e35e62]
  423d7a:	xor    DWORD PTR [edx+0x57],0x17
  423d7e:	xor    BYTE PTR [edx],ch
  423d80:	in     eax,0x61
  423d82:	mov    dl,0x3e
  423d84:	cmp    esi,eax
  423d86:	(bad)  
  423d88:	nop
  423d89:	mov    al,0x95
  423d8b:	test   eax,0xe3a381fe
  423d90:	jl     0x423d88
  423d92:	mov    esi,0x875950d2
  423d97:	pop    ss
  423d98:	add    DWORD PTR [eax],edx
  423d9a:	xchg   ecx,eax
  423d9b:	inc    ebp
  423d9c:	mov    dl,0xfe
  423d9e:	lock push 0x8
  423da1:	mov    dh,0x54
  423da3:	mov    esp,0x977f28b2
  423da8:	mov    al,0xe1
  423daa:	dec    esp
  423dab:	(bad)  
  423dac:	xchg   ebp,eax
  423dad:	(bad)  
  423dae:	popa   
  423daf:	inc    esi
  423db0:	cmp    al,0x5d
  423db2:	std    
  423db3:	daa    
  423db4:	push   eax
  423db5:	dec    ebp
  423db6:	pusha  
  423db7:	jno    0x423e12
  423db9:	adc    cl,BYTE PTR [eax+0x3a]
  423dbc:	aaa    
  423dbd:	dec    eax
  423dbe:	js     0x423e37
  423dc0:	mov    bl,0xce
  423dc2:	inc    esp
  423dc3:	cld    
  423dc4:	xchg   ebx,eax
  423dc5:	nop
  423dc6:	(bad)  
  423dc7:	push   ss
  423dc8:	or     al,0x65
  423dca:	mov    ds:0xf8509492,al
  423dcf:	int    0x53
  423dd1:	repnz in al,dx
  423dd3:	cwde   
  423dd4:	arpl   WORD PTR [edx+0x45],si
  423dd7:	push   eax
  423dd8:	ret    
  423dd9:	xchg   edi,eax
  423dda:	ss jge 0x423ddf
  423ddd:	test   al,0xb9
  423ddf:	aaa    
  423de0:	jge    0x423e51
  423de2:	mov    ebp,0xa697491d
  423de7:	sbb    edi,DWORD PTR [edx]
  423de9:	pop    ebx
  423dea:	ds dec ecx
  423dec:	loope  0x423e05
  423dee:	jae    0x423e1a
  423df0:	jno    0x423e69
  423df2:	sbb    eax,esi
  423df4:	mul    edi
  423df6:	inc    eax
  423df7:	and    edi,DWORD PTR [edx+0x6c]
  423dfa:	loop   0x423dbc
  423dfc:	pushf  
  423dfd:	mov    cl,0xd8
  423dff:	int    0x1d
  423e01:	movzx  edi,WORD PTR [eax-0x4a0674ea]
  423e08:	test   BYTE PTR [ebp+0x404c45ca],dh
  423e0e:	mov    BYTE PTR [edx],bl
  423e10:	add    DWORD PTR [eax-0x18],ebp
  423e13:	xchg   ebp,eax
  423e14:	mov    eax,ds:0x64c12936
  423e19:	fimul  DWORD PTR [edi-0x3323c909]
  423e1f:	push   cs
  423e20:	push   edx
  423e21:	fidiv  WORD PTR [ecx+eax*1]
  423e24:	xchg   edx,eax
  423e25:	fiadd  DWORD PTR [ebx-0x1c]
  423e28:	rcr    edi,1
  423e2a:	fstp   QWORD PTR ds:0x665d842d
  423e30:	(bad)  [ebx+0x1e861747]
  423e36:	test   DWORD PTR [edx+0x66],ebx
  423e39:	adc    BYTE PTR [ecx+0x57],dl
  423e3c:	lahf   
  423e3d:	or     ch,ch
  423e3f:	sbb    al,0x44
  423e41:	inc    edx
  423e42:	fidiv  DWORD PTR [ecx+0x56]
  423e45:	jne    0x423e93
  423e47:	call   0x84aaa328
  423e4c:	mov    esi,DWORD PTR ds:0xdcb5a794
  423e52:	xchg   DWORD PTR [ebx+0x2],ebx
  423e55:	hlt    
  423e56:	jno    0x423e78
  423e58:	out    0x57,eax
  423e5a:	cmp    bh,ah
  423e5c:	scas   eax,DWORD PTR es:[edi]
  423e5d:	stos   BYTE PTR es:[edi],al
  423e5e:	mov    cl,0x4f
  423e60:	jbe    0x423df9
  423e62:	cmp    al,0xc3
  423e64:	xor    BYTE PTR [ecx],0xc4
  423e67:	(bad)  
  423e69:	iret   
  423e6a:	rcr    DWORD PTR [ecx+edi*1-0x30],0x8c
  423e6f:	cmp    ebx,DWORD PTR [esi+0x3]
  423e72:	lock popf 
  423e74:	push   0x2aeefb8a
  423e79:	mov    edx,0xf06845ba
  423e7e:	xchg   edx,eax
  423e7f:	aad    0xf1
  423e81:	xor    BYTE PTR [edi+ecx*8-0x5d],cl
  423e85:	mov    edx,0x41f1dd77
  423e8a:	call   0x54af2860
  423e8f:	dec    eax
  423e90:	into   
  423e91:	dec    edx
  423e92:	sub    DWORD PTR [ebx],ebp
  423e94:	in     al,0x6c
  423e96:	fdiv   st,st(5)
  423e98:	fdivp  st(6),st
  423e9a:	fdiv   st,st(1)
  423e9c:	leave  
  423e9d:	push   es
  423e9e:	dec    esi
  423e9f:	fstp   DWORD PTR [edx-0x42]
  423ea2:	mov    cl,0xa7
  423ea4:	xor    BYTE PTR [edx+ebx*1-0x74],0xf2
  423ea9:	adc    BYTE PTR [edx+eax*4],dl
  423eac:	add    esp,ebx
  423eae:	xor    eax,0xc6176c6e
  423eb3:	out    dx,eax
  423eb4:	inc    esi
  423eb5:	mov    ch,0xe8
  423eb7:	add    BYTE PTR [esp+eiz*2+0x49],dl
  423ebb:	sahf   
  423ebc:	lock popa 
  423ebe:	jbe    0x423e4b
  423ec0:	mov    dl,0xd3
  423ec2:	fsub   QWORD PTR [ebp+0x437dced5]
  423ec8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ec9:	mov    DWORD PTR [eax],esp
  423ecb:	and    eax,0xda7b7fbc
  423ed0:	sub    eax,0x5ee7f77
  423ed5:	sbb    esp,edi
  423ed7:	movaps xmm0,xmm3
  423eda:	adc    ebx,DWORD PTR [ebx-0x53d691c4]
  423ee0:	and    al,0x3b
  423ee2:	cmp    al,0x2
  423ee4:	pop    ebp
  423ee5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ee6:	inc    eax
  423ee7:	push   esi
  423ee8:	and    eax,0xcbedde55
  423eed:	push   edx
  423eee:	sbb    esp,DWORD PTR [ebp+0x312fcf0f]
  423ef4:	mov    al,0x4
  423ef6:	repnz fcom QWORD PTR [eax+0x26]
  423efa:	pusha  
  423efb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423efc:	add    DWORD PTR [edx+0x72c8a6bd],0x7b
  423f03:	jge    0x423eac
  423f05:	div    DWORD PTR [ebp-0x8]
  423f08:	rcl    DWORD PTR [edx-0x3],1
  423f0b:	pop    es
  423f0c:	in     al,dx
  423f0d:	fmul   QWORD PTR [eax]
  423f0f:	add    DWORD PTR ss:[ebp-0x41],edx
  423f13:	mov    esp,0x5c4472a5
  423f18:	xor    BYTE PTR [edi],0x6b
  423f1b:	outs   dx,BYTE PTR ds:[esi]
  423f1c:	mov    bl,0x39
  423f1e:	fmul   st,st(1)
  423f20:	retf   0xf566
  423f23:	and    al,ah
  423f25:	sbb    BYTE PTR [ecx],bh
  423f27:	pop    ds
  423f28:	mov    ecx,0xe08de842
  423f2d:	inc    edx
  423f2e:	mov    bl,0x91
  423f30:	sbb    esp,DWORD PTR ds:0xf53ecfa2
  423f36:	std    
  423f37:	and    BYTE PTR [esi+ebp*8],bl
  423f3a:	outs   dx,BYTE PTR ds:[esi]
  423f3b:	adc    edx,edi
  423f3d:	pop    ecx
  423f3e:	lods   eax,DWORD PTR ds:[esi]
  423f3f:	ja     0x423f71
  423f41:	test   al,0xb4
  423f44:	not    DWORD PTR [ebx-0x28c91ad0]
  423f4a:	mov    fs,WORD PTR [edx-0x3f899abc]
  423f50:	lahf   
  423f51:	mov    al,0xc9
  423f53:	mov    bl,0xa8
  423f55:	xor    al,0x70
  423f57:	and    eax,0x75d37382
  423f5c:	sub    al,BYTE PTR [eax-0x1]
  423f5f:	mov    dh,0x3c
  423f61:	cdq    
  423f62:	mov    ch,0xe2
  423f64:	sar    ch,1
  423f66:	test   al,0xba
  423f68:	jb     0x423fbe
  423f6a:	pop    edi
  423f6b:	cmp    eax,0x86e651a6
  423f70:	cmp    eax,DWORD PTR [ebx]
  423f72:	inc    ebp
  423f73:	xlat   BYTE PTR ds:[ebx]
  423f74:	aam    0xab
  423f76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f77:	mov    ch,0xaa
  423f79:	in     al,dx
  423f7a:	mov    ah,0x53
  423f7c:	mov    edi,0xeb401f4b
  423f81:	sar    DWORD PTR [eax+0x21],cl
  423f84:	push   esp
  423f85:	test   eax,0xf769b28a
  423f8a:	inc    ebx
  423f8b:	or     eax,0xba06ff63
  423f90:	out    0x6,al
  423f92:	ss sub eax,0xb324bcfd
  423f98:	xchg   edi,eax
  423f99:	sub    ebx,eax
  423f9b:	scas   eax,DWORD PTR es:[edi]
  423f9c:	loop   0x423f83
  423f9e:	rcl    bh,0x87
  423fa1:	sub    ebx,ebp
  423fa3:	(bad)  
  423fa4:	cmp    dl,BYTE PTR [ebp-0x750e46bd]
  423faa:	and    eax,0xc1735181
  423faf:	jge    0x423f65
  423fb1:	in     eax,0xe3
  423fb3:	pop    ss
  423fb4:	shl    DWORD PTR [esi+0x1f],cl
  423fb7:	out    dx,eax
  423fb8:	popa   
  423fb9:	jo     0x423f6b
  423fbb:	fidiv  DWORD PTR [esi+0x67e95e6b]
  423fc1:	jg     0x424037
  423fc3:	cmp    bh,BYTE PTR [edx]
  423fc5:	sahf   
  423fc6:	scas   al,BYTE PTR es:[edi]
  423fc7:	jae    0x423fd1
  423fc9:	pop    ss
  423fca:	sbb    DWORD PTR [esi],edx
  423fcc:	and    edx,DWORD PTR [ebx]
  423fce:	sbb    eax,0x8d783ff6
  423fd3:	sbb    DWORD PTR [edx-0x9e35614],edi
  423fd9:	stos   BYTE PTR es:[edi],al
  423fda:	mov    al,0x54
  423fdc:	pop    eax
  423fdd:	jge    0x424053
  423fdf:	xchg   ebp,eax
  423fe0:	xchg   edi,eax
  423fe1:	data16 sahf 
  423fe3:	jne    0x424051
  423fe5:	mov    bl,0xcd
  423fe7:	dec    edx
  423fe8:	xor    ebx,DWORD PTR [ebp-0x1d]
  423feb:	sub    esi,DWORD PTR [ebx]
  423fed:	mov    ebx,0x1c8ce7d6
  423ff2:	cmp    dh,BYTE PTR [ebx-0x32]
  423ff5:	jae    0x424074
  423ff7:	cmp    DWORD PTR [eax-0x6c],esp
  423ffa:	(bad)  [edx+eiz*8]
  423ffd:	outs   dx,BYTE PTR ds:[esi]
  423ffe:	ret    
  423fff:	idiv   DWORD PTR [edx]
  424001:	jne    0x423fcb
  424003:	push   es
  424004:	inc    eax
  424005:	mov    edx,0x776f744b
  42400a:	mov    bl,0x2
  42400c:	int    0x6f
  42400e:	pushf  
  42400f:	gs and al,0xc7
  424012:	xchg   edi,eax
  424013:	jle    0x423fab
  424015:	pop    ss
  424016:	mov    dl,dl
  424018:	test   eax,0xd23761f3
  42401d:	push   edi
  42401e:	mov    ebp,0x40d6759c
  424023:	cmp    bl,BYTE PTR [esi+edx*8+0x40]
  424027:	mov    cl,0xb
  424029:	ret    
  42402a:	pushf  
  42402b:	sbb    ah,BYTE PTR [eax]
  42402d:	mov    ebx,0xee355f84
  424032:	loopne 0x42402d
  424034:	add    edi,DWORD PTR [edx+0x28]
  424037:	mov    dl,0xf9
  424039:	sahf   
  42403a:	inc    esi
  42403b:	scas   eax,DWORD PTR es:[edi]
  42403c:	push   ds
  42403d:	ins    BYTE PTR es:[edi],dx
  42403e:	mov    bl,0xf0
  424040:	and    ebx,DWORD PTR [esp+edx*1+0x954e2ef]
  424047:	repnz and esi,edi
  42404a:	adc    eax,0xc37374d5
  42404f:	xchg   DWORD PTR [eax-0x4d],eax
  424052:	pop    ss
  424053:	jge    0x423feb
  424055:	aas    
  424056:	pop    edx
  424057:	pushf  
  424058:	sbb    DWORD PTR [eax+eax*1-0x3a],edi
  42405c:	ja     0x424009
  42405e:	shr    DWORD PTR ds:0x2122e220,cl
  424064:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424065:	dec    ecx
  424066:	mov    cl,0xda
  424068:	sub    DWORD PTR [edi+0x300f05c2],0xffffff8b
  42406f:	pop    edx
  424070:	fidivr DWORD PTR [ebp+0x5f]
  424073:	xchg   esi,eax
  424074:	mov    eax,ds:0x13eb261
  424079:	rcr    BYTE PTR [ebx],0x34
  42407c:	shl    DWORD PTR [ecx],1
  42407e:	(bad)  
  42407f:	push   esi
  424080:	scas   al,BYTE PTR es:[edi]
  424081:	pushf  
  424082:	jecxz  0x4240fc
  424084:	popa   
  424085:	jl     0x424070
  424087:	add    eax,0xbea2df02
  42408c:	add    eax,0x847fd462
  424091:	push   ebp
  424092:	mov    BYTE PTR [ebp-0x483628b5],al
  424098:	push   DWORD PTR [ecx]
  42409a:	(bad)  
  42409d:	jmp    0xb9ec6437
  4240a2:	pop    ebx
  4240a3:	or     DWORD PTR [ebp+0x55],eax
  4240a6:	mov    esp,0x6983b483
  4240ab:	cmp    ah,ch
  4240ad:	shr    BYTE PTR [edi+0x6e],cl
  4240b0:	dec    ebp
  4240b1:	inc    esi
  4240b2:	push   ebp
  4240b3:	repnz lock dec ebp
  4240b6:	ds out 0x7d,al
  4240b9:	mov    esp,0xb23c7ffd
  4240be:	add    eax,0xd551679e
  4240c3:	mov    BYTE PTR ds:0x3a40b8a5,cl
  4240c9:	xchg   esi,eax
  4240ca:	jnp    0x4240a8
  4240cc:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4240ce:	adc    cl,BYTE PTR [esi]
  4240d0:	push   ecx
  4240d1:	push   0xe68b2024
  4240d6:	adc    dl,BYTE PTR [edi-0x2db647b7]
  4240dc:	call   0x4603cada
  4240e1:	or     BYTE PTR [eax-0xf854f82],ah
  4240e7:	ja     0x4240cc
  4240e9:	dec    eax
  4240ea:	pop    es
  4240eb:	data16 jae 0x42413d
  4240ee:	dec    esp
  4240ef:	mov    eax,ds:0x272a8ed8
  4240f4:	leave  
  4240f5:	dec    eax
  4240f6:	inc    ecx
  4240f7:	out    dx,eax
  4240f8:	leave  
  4240f9:	fidivr WORD PTR [ebp+0x42]
  4240fc:	push   cs
  4240fd:	push   eax
  4240fe:	fwait
  4240ff:	jmp    0x3b85:0x8fcac0c4
  424106:	or     esp,DWORD PTR [ebp-0x72]
  424109:	sbb    esi,DWORD PTR [ecx+ebp*2]
  42410c:	and    eax,0x5f9fdf1b
  424111:	leave  
  424112:	loope  0x42417d
  424114:	(bad)  
  424115:	out    dx,eax
  424116:	popa   
  424117:	mov    BYTE PTR [esi+0x1254adf0],dl
  42411d:	and    DWORD PTR [eax+0x4f28a20f],eax
  424123:	xchg   ecx,eax
  424124:	sub    DWORD PTR [ecx+eiz*2-0x28],0x47
  424129:	inc    edi
  42412a:	addr16 sti 
  42412c:	inc    edi
  42412d:	sub    cl,BYTE PTR [edx+edi*2+0x1993ebab]
  424134:	scas   eax,DWORD PTR es:[edi]
  424135:	ins    BYTE PTR es:[edi],dx
  424136:	in     al,dx
  424137:	je     0x4240df
  424139:	inc    ebp
  42413a:	push   ecx
  42413b:	xchg   ebx,eax
  42413c:	ret    0x7f82
  42413f:	pop    ss
  424140:	mov    bh,0x11
  424142:	add    eax,0xdbfecbd2
  424147:	pusha  
  424148:	adc    ecx,DWORD PTR [edx+eiz*2-0x29eb162e]
  42414f:	mov    esp,0x313f3611
  424154:	jl     0x4240fe
  424156:	pop    ss
  424157:	fdivr  st(6),st
  424159:	ja     0x42416b
  42415b:	imul   ecx,DWORD PTR [edx-0x13c78e7e],0xadfef5bf
  424165:	adc    BYTE PTR [ebx],dh
  424167:	je     0x42414e
  424169:	and    ecx,esi
  42416b:	cli    
  42416c:	add    BYTE PTR [edx-0x3e],ch
  42416f:	mov    cl,0x21
  424171:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424172:	push   0x5441847c
  424177:	and    edi,ecx
  424179:	or     edi,edx
  42417b:	nop
  42417c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42417d:	fsubr  DWORD PTR [edi-0x1cb6b413]
  424183:	loop   0x424135
  424185:	or     al,0x8e
  424187:	stos   BYTE PTR es:[edi],al
  424188:	iret   
  424189:	or     bl,BYTE PTR [edx]
  42418b:	xchg   edi,eax
  42418c:	sqrtps xmm6,XMMWORD PTR [ebx+edi*2]
  424190:	ret    0x6f96
  424193:	das    
  424194:	inc    ecx
  424195:	aam    0x7f
  424197:	out    dx,al
  424198:	in     al,dx
  424199:	inc    ebp
  42419a:	imul   esi,edi,0xffffff8d
  42419d:	inc    eax
  42419e:	cmp    eax,ecx
  4241a0:	adc    DWORD PTR [ecx-0x654402e4],edx
  4241a6:	push   eax
  4241a7:	jg     0x42415e
  4241a9:	stc    
  4241aa:	add    dh,0xc6
  4241ad:	inc    edx
  4241ae:	xchg   ecx,eax
  4241af:	jp     0x42417c
  4241b1:	test   BYTE PTR [edi-0x31],dl
  4241b4:	mov    dh,0xaa
  4241b6:	mov    al,ds:0xf72c32e8
  4241bb:	add    eax,0x6e9d0386
  4241c0:	mov    ecx,0xae96d368
  4241c5:	xchg   ebx,eax
  4241c6:	rol    BYTE PTR [ecx],1
  4241c8:	cmc    
  4241c9:	adc    eax,DWORD PTR [ebp+0x6c9548c9]
  4241cf:	imul   esi,DWORD PTR [eax+edx*2],0xffffffa4
  4241d3:	into   
  4241d4:	mov    dl,0x8b
  4241d6:	fdivr  QWORD PTR [esp+eax*1+0x34c25c27]
  4241dd:	push   ecx
  4241de:	cmp    eax,0x50faaaed
  4241e3:	in     al,0x6d
  4241e5:	bound  eax,QWORD PTR [esp+edi*2]
  4241e8:	lods   al,BYTE PTR ds:[esi]
  4241e9:	sbb    esi,ebx
  4241eb:	fdivr  QWORD PTR [esi-0x1a1eaa9a]
  4241f1:	jae    0x424263
  4241f3:	in     al,0x5f
  4241f5:	cmp    al,0x58
  4241f7:	push   0x85e0ffdb
  4241fc:	push   es
  4241fd:	or     esp,DWORD PTR [edx+esi*8-0x14]
  424201:	les    edi,FWORD PTR [edi+ebx*8]
  424204:	xor    DWORD PTR [edi+0x4b],0x184d8d04
  42420b:	lods   al,BYTE PTR ds:[esi]
  42420c:	sbb    DWORD PTR [ebx+0x71],edx
  42420f:	or     DWORD PTR [ebp-0x73],ebp
  424212:	inc    edi
  424213:	xor    dh,al
  424215:	jmp    0xc87df5a7
  42421a:	xchg   ebp,eax
  42421b:	mov    ah,0x0
  42421d:	(bad)  
  42421e:	(bad)  
  42421f:	and    ecx,ebp
  424221:	imul   ecx,DWORD PTR [ecx+0x64],0x65aa72f
  424228:	dec    eax
  424229:	xlat   BYTE PTR ds:[ebx]
  42422a:	popf   
  42422b:	sbb    al,0xbd
  42422d:	sahf   
  42422e:	cmp    al,BYTE PTR [edx-0x18019b8e]
  424234:	pop    ds
  424235:	adc    esi,DWORD PTR [eax+0x67e88c11]
  42423b:	dec    eax
  42423c:	push   0xf7396e43
  424241:	nop
  424242:	lds    ebp,FWORD PTR [ebx]
  424244:	nop
  424245:	cmp    BYTE PTR [ecx],al
  424247:	test   BYTE PTR [ecx+eax*4+0x72],dl
  42424b:	and    BYTE PTR [edi],0xb0
  42424e:	and    al,0x8
  424250:	mov    al,0xf9
  424252:	mov    ebx,0xbcbb7ba0
  424257:	aam    0x13
  424259:	inc    esp
  42425a:	push   cs
  42425b:	arpl   WORD PTR [ecx+0xb],cx
  42425e:	jne    0x4241e7
  424260:	mov    ch,0x85
  424262:	gs (bad) 
  424265:	jno    0x424226
  424267:	xor    edx,esi
  424269:	sbb    BYTE PTR [ecx],0x30
  42426c:	leave  
  42426d:	dec    esp
  42426e:	jo     0x4242a4
  424270:	ret    
  424271:	or     al,0x91
  424273:	aam    0x6b
  424275:	pop    ds
  424276:	stos   DWORD PTR es:[edi],eax
  424277:	sbb    BYTE PTR [ebp-0x1c4f74e7],cl
  42427d:	fmul   st,st(3)
  42427f:	add    eax,0x796babbb
  424284:	(bad)  
  424285:	fs jo  0x424303
  424288:	or     BYTE PTR [edx-0x41],dl
  42428b:	iret   
  42428c:	(bad)  
  42428d:	push   esp
  42428e:	push   cs
  42428f:	leave  
  424290:	push   ebx
  424291:	or     al,0x29
  424293:	push   ebp
  424294:	cli    
  424295:	ret    0x30e2
  424298:	xor    esi,ebp
  42429a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42429b:	shl    bl,0xc2
  42429e:	test   DWORD PTR [edx+0x7db35ea1],ecx
  4242a4:	cs jmp 0x4242bb
  4242a7:	xchg   edi,eax
  4242a8:	loope  0x4242ca
  4242aa:	push   0x1f
  4242ac:	in     eax,dx
  4242ad:	ins    DWORD PTR es:[edi],dx
  4242ae:	pop    edi
  4242af:	adc    DWORD PTR [eax-0x27],edi
  4242b2:	adc    BYTE PTR [ebx+0x32],0x8
  4242b6:	cmp    DWORD PTR [esi-0x413ab5cb],esp
  4242bc:	pop    esp
  4242bd:	sbb    al,0x64
  4242bf:	and    al,0x7c
  4242c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242c2:	push   edi
  4242c3:	inc    eax
  4242c4:	shl    DWORD PTR [ebx+0x72],cl
  4242c7:	sub    DWORD PTR [ecx+edx*2],edi
  4242ca:	ja     0x4242b4
  4242cc:	push   ss
  4242cd:	jl     0x4242e5
  4242cf:	in     eax,dx
  4242d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242d1:	test   BYTE PTR [esi+0x3d],ah
  4242d4:	fs pushf 
  4242d6:	lock fild WORD PTR ds:0xe30bbbc5
  4242dd:	mov    bh,0xcf
  4242df:	jmp    0x42429c
  4242e1:	sbb    esp,0x11
  4242e4:	sub    eax,0xa8d38589
  4242e9:	cwde   
  4242ea:	or     BYTE PTR [ebx+0x679dc22d],cl
  4242f0:	fwait
  4242f1:	test   eax,0xfb8b92b1
  4242f6:	push   ecx
  4242f7:	movaps xmm2,XMMWORD PTR [ecx+0x5f121090]
  4242fe:	jne    0x424287
  424300:	push   ebx
  424301:	test   DWORD PTR [eax-0x34],esp
  424304:	stos   BYTE PTR es:[edi],al
  424305:	fs mov al,0xf0
  424308:	pop    edx
  424309:	push   ecx
  42430a:	std    
  42430b:	repnz pop esi
  42430d:	pop    edx
  42430e:	jns    0x424339
  424310:	and    DWORD PTR [eax+0x45],edx
  424313:	mov    ah,0xde
  424315:	sbb    DWORD PTR ds:0xf135c8c5,esi
  42431b:	and    al,0x5d
  42431d:	ret    
  42431e:	call   0xa7b77377
  424323:	scas   eax,DWORD PTR es:[edi]
  424324:	jb     0x42437b
  424326:	das    
  424327:	das    
  424328:	mov    dl,0x4d
  42432a:	call   0x4370faa1
  42432f:	pop    ds
  424330:	rcl    edi,0x46
  424333:	jle    0x42435c
  424335:	test   al,0x6d
  424337:	adc    DWORD PTR [ebp+eax*4+0x64],edx
  42433b:	or     bh,BYTE PTR ds:0xd0262425
  424341:	add    al,0xf2
  424343:	(bad)  
  424345:	push   es
  424346:	pop    edi
  424347:	(bad)  
  424348:	mov    cl,0x13
  42434a:	inc    edx
  42434b:	loope  0x424378
  42434d:	pop    ds
  42434e:	in     eax,dx
  42434f:	ror    cl,1
  424351:	xor    bl,al
  424353:	sub    DWORD PTR [ebp-0x64b43ee],0x1b778eaa
  42435d:	mov    ds:0x348a738,eax
  424362:	fcomip st,st(1)
  424364:	mov    bl,0xe6
  424366:	push   edi
  424367:	popa   
  424368:	arpl   WORD PTR [edx],cx
  42436a:	sbb    al,0xd
  42436c:	in     eax,dx
  42436d:	push   ebp
  42436e:	pop    ss
  42436f:	xchg   ebp,eax
  424370:	lods   al,BYTE PTR ds:[esi]
  424371:	sub    esp,DWORD PTR [edi+ecx*2-0x17de6b0a]
  424378:	pop    esi
  424379:	mov    DWORD PTR [esi-0x21bb0acf],edx
  42437f:	cwde   
  424380:	lods   al,BYTE PTR ds:[esi]
  424381:	fwait
  424382:	pop    esi
  424383:	mov    al,0x3
  424385:	mov    bl,0xd1
  424387:	cmp    BYTE PTR [esi+0x47],0x7a
  42438b:	scas   al,BYTE PTR es:[edi]
  42438c:	clc    
  42438d:	mov    ds,WORD PTR [ecx+0x1f46fe08]
  424393:	xor    ah,BYTE PTR [edi+0x19]
  424396:	mov    ch,0x82
  424398:	mov    DWORD PTR [ebp-0xd],esp
  42439b:	fidiv  DWORD PTR [edi+0x4b51acb5]
  4243a1:	inc    ecx
  4243a2:	and    edx,eax
  4243a4:	stc    
  4243a5:	out    dx,al
  4243a6:	cmp    esp,esi
  4243a8:	mov    eax,0xa1f05d2c
  4243ad:	imul   esi,edi,0xc0c7cc22
  4243b3:	xchg   DWORD PTR [esp+ebp*4],edi
  4243b6:	or     al,ah
  4243b8:	test   eax,0xbbf8170
  4243bd:	shr    BYTE PTR [edx-0x53],cl
  4243c0:	xchg   BYTE PTR [esi+0x8],al
  4243c3:	jmp    FWORD PTR [eax]
  4243c5:	(bad)  
  4243c6:	xor    al,0xbd
  4243c8:	out    dx,eax
  4243c9:	and    BYTE PTR [ecx-0x1f],0x9
  4243cd:	popf   
  4243ce:	lods   al,BYTE PTR ds:[esi]
  4243cf:	cmp    eax,0xdbd7d2a2
  4243d4:	push   edx
  4243d5:	mov    al,ds:0xddc58b01
  4243da:	outs   dx,BYTE PTR ds:[esi]
  4243db:	jb     0x424438
  4243dd:	lahf   
  4243de:	sub    esp,DWORD PTR [esi+0x24bcc0bc]
  4243e4:	lods   eax,DWORD PTR ds:[esi]
  4243e5:	call   0xaeca:0x81419ef3
  4243ec:	mov    eax,0xc1bd7767
  4243f1:	fcomp  QWORD PTR [esi+0x7f]
  4243f4:	fwait
  4243f5:	int    0x19
  4243f7:	int3   
  4243f8:	daa    
  4243f9:	out    0xb3,eax
  4243fb:	cmp    edx,DWORD PTR [esi-0x745b2c20]
  424401:	pop    eax
  424402:	xor    ecx,DWORD PTR [esi-0x1b72d688]
  424408:	(bad)  
  424409:	addr16 adc al,0x9a
  42440c:	adc    eax,0x3dd5fa80
  424411:	fldz   
  424413:	xchg   ebx,eax
  424414:	ss aas 
  424416:	dec    eax
  424417:	pop    ecx
  424418:	nop
  424419:	xor    ah,BYTE PTR [edx+esi*1+0x11]
  42441d:	mov    bh,0x42
  42441f:	push   es
  424420:	pop    ebx
  424421:	push   0x68d38936
  424426:	jg     0x424404
  424428:	mov    ebx,DWORD PTR [edx-0x77]
  42442b:	xor    DWORD PTR [eax-0x34bb2db1],0xffffffc7
  424432:	cwde   
  424433:	mov    edx,0x75ca15ac
  424438:	xlat   BYTE PTR ds:[ebx]
  424439:	lock jo 0x4243bc
  42443c:	cld    
  42443d:	stc    
  42443e:	add    DWORD PTR [eax],edx
  424440:	iret   
  424441:	int3   
  424442:	stc    
  424443:	rcr    DWORD PTR ss:[edi],0x94
  424447:	neg    DWORD PTR [ebp+0x53cb0632]
  42444d:	addr16 mov bl,0x6e
  424450:	inc    ecx
  424451:	outs   dx,DWORD PTR ds:[esi]
  424452:	inc    ecx
  424453:	dec    esp
  424454:	repz mov dh,0x57
  424457:	inc    ebp
  424458:	inc    ebp
  424459:	lods   al,BYTE PTR ds:[esi]
  42445a:	loop   0x424487
  42445c:	(bad)  
  42445e:	inc    esp
  42445f:	xor    esi,DWORD PTR [edi-0x1f1e4b85]
  424465:	lea    edi,[esi]
  424467:	add    ah,BYTE PTR [edi]
  424469:	mov    edx,0x4372a684
  42446e:	loope  0x4243f8
  424470:	imul   esi
  424472:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424473:	aaa    
  424474:	(bad)  ds:0xf1d13757
  42447a:	sub    DWORD PTR ds:0x2c77c0f7,0x72
  424481:	mov    ds:0xba989bdc,al
  424486:	dec    ecx
  424487:	push   cs
  424488:	je     0x4244c2
  42448a:	xchg   esp,eax
  42448b:	adc    al,0x43
  42448d:	xchg   ah,dh
  42448f:	or     esp,DWORD PTR [edi-0x374689ec]
  424495:	cmp    DWORD PTR [ebx],edi
  424497:	fidivr DWORD PTR [esi]
  424499:	mov    ah,0xa6
  42449b:	mov    ebp,0xa46effbf
  4244a0:	dec    ebx
  4244a1:	dec    ecx
  4244a2:	lods   al,BYTE PTR ds:[esi]
  4244a3:	jmp    0x2a94dc9e
  4244a8:	cld    
  4244a9:	out    0x82,al
  4244ab:	loope  0x424502
  4244ad:	push   edx
  4244ae:	push   esi
  4244af:	(bad)  
  4244b0:	dec    ecx
  4244b1:	in     al,dx
  4244b2:	mov    cl,cl
  4244b4:	(bad)  
  4244b5:	mov    al,ds:0x2d831d8
  4244ba:	mov    ebx,0xead76b0a
  4244bf:	xchg   edx,eax
  4244c0:	add    al,0x4a
  4244c2:	mov    esi,0x158e0905
  4244c7:	stos   BYTE PTR es:[edi],al
  4244c8:	and    BYTE PTR [esi+0x46c20f56],ah
  4244ce:	sub    edx,DWORD PTR [ecx+0x53837c74]
  4244d4:	sub    al,0x8b
  4244d6:	aas    
  4244d7:	jmp    0x1da8300c
  4244dc:	xchg   ecx,eax
  4244dd:	call   0x271a:0x3a1b1603
  4244e4:	cmp    esp,DWORD PTR [edx-0x1]
  4244e7:	jnp    0x424531
  4244e9:	cmp    BYTE PTR [ebx],dl
  4244eb:	mov    dh,0x4b
  4244ed:	sub    ecx,DWORD PTR [ecx-0x16ac5443]
  4244f3:	fld    TBYTE PTR [esi+0x58bacb8a]
  4244f9:	push   esp
  4244fa:	je     0x424495
  4244fc:	add    dl,bl
  4244fe:	adc    ah,BYTE PTR [esi+0x4c]
  424501:	add    bl,BYTE PTR [ebx+ebp*4-0x45aca3e1]
  424508:	es inc esp
  42450a:	mov    dl,0x9f
  42450c:	retf   0x1711
  42450f:	sti    
  424510:	jecxz  0x42452e
  424512:	ror    DWORD PTR [ebp+0x5],0x7e
  424516:	xchg   edx,eax
  424517:	mov    esp,0xf291038d
  42451c:	jae    0x42455f
  42451e:	imul   esp,DWORD PTR [edi],0xcb9ed91c
  424524:	pushf  
  424525:	push   esi
  424526:	pusha  
  424527:	and    BYTE PTR [ecx-0x8],bh
  42452a:	les    esi,FWORD PTR [edi]
  42452c:	jmp    DWORD PTR [edi-0x4a022d9c]
  424532:	fstp   DWORD PTR [esi]
  424534:	jle    0x42452e
  424536:	dec    esp
  424537:	sub    cl,dh
  424539:	add    eax,0x3a49df03
  42453e:	adc    DWORD PTR [edx],0x33a58a6f
  424544:	fisttp WORD PTR [ebx+esi*4-0xb]
  424548:	icebp  
  424549:	shl    BYTE PTR [edx+0x35f5527b],1
  42454f:	mov    DWORD PTR ds:0x6d02a23a,edx
  424555:	fsub   st,st(1)
  424557:	inc    esi
  424558:	adc    eax,0xd560b3d4
  42455d:	push   eax
  42455e:	ja     0x42454a
  424560:	ret    
  424561:	xor    BYTE PTR [esi],ah
  424563:	rcr    ebp,1
  424565:	addr16 in al,0x8
  424568:	mov    edx,DWORD PTR [eax]
  42456a:	gs int 0x91
  42456d:	sub    ah,BYTE PTR ds:0xdf44e820
  424573:	in     al,dx
  424574:	test   eax,0x1429da
  424579:	push   edi
  42457a:	xchg   edx,eax
  42457b:	clc    
  42457c:	mov    bl,BYTE PTR [eax-0x3355a915]
  424582:	xchg   edi,eax
  424583:	not    DWORD PTR [esi+0x2df03cce]
  424589:	mov    ch,BYTE PTR [esp+ebx*8+0x22]
  42458d:	arpl   ax,ax
  42458f:	xchg   esp,edx
  424591:	xchg   ebp,eax
  424592:	inc    eax
  424593:	mov    dh,0xe5
  424595:	cmc    
  424596:	(bad)  
  424597:	stc    
  424598:	not    BYTE PTR [ecx]
  42459a:	adc    eax,0x478c06ff
  42459f:	and    DWORD PTR [edi+0x5d663332],esi
  4245a5:	ja     0x424618
  4245a7:	outs   dx,BYTE PTR ds:[esi]
  4245a8:	iret   
  4245a9:	mov    cl,0xa1
  4245ab:	xchg   ecx,eax
  4245ac:	add    eax,0xbf8adaff
  4245b1:	sub    esp,DWORD PTR [eax-0x62c90e09]
  4245b7:	or     ebx,eax
  4245b9:	rol    DWORD PTR [edi],cl
  4245bb:	and    ebp,edi
  4245bd:	mov    WORD PTR [edx],fs
  4245bf:	aad    0xd8
  4245c1:	in     al,0xef
  4245c3:	dec    edi
  4245c4:	cmc    
  4245c5:	mov    dl,0x1d
  4245c7:	sbb    BYTE PTR [ebx],al
  4245c9:	ja     0x4245e7
  4245cb:	and    DWORD PTR ds:0xac5d2e37,0xffffffe2
  4245d2:	fnstcw WORD PTR [edi+eiz*8-0x31]
  4245d6:	sahf   
  4245d7:	xchg   edx,eax
  4245d8:	jg     0x42455f
  4245da:	loopne 0x424611
  4245dc:	pop    es
  4245dd:	xchg   ebx,eax
  4245de:	icebp  
  4245df:	or     edi,DWORD PTR [esi+0x34]
  4245e2:	xor    eax,0xfbdf28e7
  4245e7:	lods   al,BYTE PTR ds:[esi]
  4245e8:	push   ebp
  4245e9:	mov    eax,ds:0x8fb06085
  4245ee:	inc    esi
  4245ef:	push   ebx
  4245f0:	add    DWORD PTR [edi+0x2e1759b4],esp
  4245f6:	sub    BYTE PTR [eax-0x253c3e83],0xec
  4245fd:	int    0xb3
  4245ff:	mov    ecx,0x5f4528e7
  424604:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424605:	dec    edi
  424606:	or     BYTE PTR [ebx+0x35],al
  424609:	mov    DWORD PTR [eax],ebx
  42460b:	adc    al,BYTE PTR [ebp+0x73]
  42460e:	scas   al,BYTE PTR es:[edi]
  42460f:	inc    esp
  424610:	jmp    0xb27e:0x2bdd2c16
  424617:	sbb    ch,dh
  424619:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42461a:	ss aaa 
  42461c:	mov    ds:0xd2194284,eax
  424621:	push   ecx
  424622:	stos   BYTE PTR es:[edi],al
  424623:	xchg   BYTE PTR [edi+0x58f4f90a],ah
  424629:	jae    0x42460b
  42462b:	aam    0x8e
  42462d:	lea    edx,[edi]
  42462f:	rcl    ebx,0xf
  424632:	dec    edi
  424633:	cld    
  424634:	sub    eax,DWORD PTR [edi-0x420aead6]
  42463a:	test   BYTE PTR [ebp+0x5e],dh
  42463d:	ja     0x424618
  42463f:	dec    edi
  424640:	mov    dl,0x67
  424642:	cmc    
  424643:	lds    ebx,FWORD PTR [ebx-0x43]
  424646:	jp     0x4245f1
  424648:	push   edx
  424649:	push   DWORD PTR [edi+ebp*2+0xe]
  42464d:	in     al,0x30
  42464f:	mov    ah,0x42
  424651:	shr    BYTE PTR ds:0x8d478dc2,0x77
  424658:	push   0x5117c9d4
  42465d:	and    DWORD PTR [eax],0x8bd0a8e6
  424663:	dec    esi
  424664:	sbb    eax,DWORD PTR [eax-0x54d43c17]
  42466a:	pop    edx
  42466b:	in     al,0xcf
  42466d:	rcr    edx,1
  42466f:	jo     0x4246a7
  424671:	dec    ecx
  424672:	outs   dx,DWORD PTR ds:[esi]
  424673:	xor    edx,DWORD PTR [edx+0x405146d7]
  424679:	lahf   
  42467a:	push   ds
  42467b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42467c:	fs scas eax,DWORD PTR es:[edi]
  42467e:	sti    
  42467f:	xchg   esp,eax
  424680:	enter  0xc4f2,0x24
  424684:	or     DWORD PTR [eax],esi
  424686:	out    0xe,al
  424688:	jecxz  0x4246f6
  42468a:	sub    al,BYTE PTR [eax-0x5f49ad31]
  424690:	scas   eax,DWORD PTR es:[edi]
  424691:	add    esi,DWORD PTR [ebx+ebp*4-0x7e39aefa]
  424698:	add    DWORD PTR [ebx+0x3b832e8d],ecx
  42469e:	lds    ebp,FWORD PTR [edx-0x2b]
  4246a1:	enter  0xf878,0x4d
  4246a5:	aad    0xfc
  4246a7:	jbe    0x4246f3
  4246a9:	xor    BYTE PTR ds:0x656c467b,dh
  4246af:	rcr    DWORD PTR [eax],cl
  4246b1:	push   0x7b
  4246b3:	pusha  
  4246b4:	push   esi
  4246b5:	jle    0x4246b4
  4246b7:	xor    DWORD PTR [esi],edx
  4246b9:	outs   dx,BYTE PTR ds:[esi]
  4246ba:	test   BYTE PTR [esi+0x611ed164],ch
  4246c0:	stc    
  4246c1:	add    DWORD PTR [ebp-0x54a607b5],ebx
  4246c7:	inc    ebx
  4246c8:	mov    ch,0x72
  4246ca:	push   edx
  4246cb:	addr16 adc eax,0x65b6015b
  4246d1:	xor    eax,0x64b53a7c
  4246d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4246d7:	xlat   BYTE PTR ds:[ebx]
  4246d8:	push   ebp
  4246d9:	(bad)  
  4246da:	mov    ch,0xb5
  4246dc:	jno    0x424699
  4246de:	nop
  4246df:	shl    BYTE PTR [ebp+0x724534b8],1
  4246e5:	dec    edx
  4246e6:	push   eax
  4246e7:	pop    eax
  4246e8:	adc    bh,BYTE PTR [edx+0x4d]
  4246eb:	je     0x42472a
  4246ed:	and    ebx,DWORD PTR [edx+0x51]
  4246f0:	aad    0x7e
  4246f2:	mov    bl,0xe3
  4246f4:	ss out dx,eax
  4246f6:	sbb    esp,ebx
  4246f8:	aam    0xd6
  4246fa:	inc    BYTE PTR [ecx-0x31]
  4246fd:	stos   BYTE PTR es:[edi],al
  4246fe:	fadd   st,st(3)
  424700:	xchg   edx,eax
  424701:	and    esi,DWORD PTR [eax+0x2512fa10]
  424707:	sub    BYTE PTR ds:0x2ec02983,dh
  42470d:	ret    0xc2a5
  424710:	fdiv   DWORD PTR [ebx-0x30c4c084]
  424716:	jae    0x4246bf
  424718:	push   esp
  424719:	repz push es
  42471b:	xchg   edi,eax
  42471c:	call   0x38599cf
  424721:	popa   
  424722:	pop    esi
  424723:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424724:	inc    eax
  424725:	lds    ebx,FWORD PTR ds:0x20524b54
  42472b:	mov    esp,0xadd03481
  424730:	stos   DWORD PTR es:[edi],eax
  424731:	and    ch,bh
  424733:	push   0x49
  424735:	pop    eax
  424736:	int    0x9e
  424738:	arpl   WORD PTR [ebx],ax
  42473a:	sub    eax,0x7bd851a0
  42473f:	gs xchg edi,ebp
  424742:	pop    ss
  424743:	dec    esp
  424744:	(bad)  
  424745:	(bad)  
  424746:	xchg   esi,eax
  424747:	retf   0x27ad
  42474a:	and    BYTE PTR [edx],ah
  42474c:	stc    
  42474d:	push   cs
  42474e:	cwde   
  42474f:	outs   dx,DWORD PTR ds:[esi]
  424750:	mov    WORD PTR [ebp+0x4a],ss
  424753:	hlt    
  424754:	loop   0x42475e
  424756:	add    ebx,DWORD PTR [edx]
  424758:	or     eax,0x654322cc
  42475d:	and    DWORD PTR [ecx+0x51864c3d],esp
  424763:	daa    
  424764:	imul   edx,DWORD PTR [esi-0x3d],0x3a
  424768:	pushf  
  424769:	or     BYTE PTR [eax],al
  42476b:	cmp    eax,0x1ba5770b
  424770:	mov    BYTE PTR [edx],dl
  424772:	js     0x424764
  424774:	js     0x4247ef
  424776:	and    esp,0x73d6c4b
  42477c:	sub    al,0xeb
  42477e:	mov    esp,eax
  424780:	xor    BYTE PTR cs:[edi-0x6009e0a4],bl
  424787:	loope  0x424803
  424789:	fbld   TBYTE PTR [edx]
  42478b:	outs   dx,DWORD PTR ds:[esi]
  42478c:	mov    eax,ds:0xa268c53a
  424791:	(bad)  
  424792:	les    ecx,FWORD PTR [ebx+0x41]
  424795:	leave  
  424796:	addr16 in al,0x95
  424799:	adc    DWORD PTR [ebp-0x37],eax
  42479c:	in     al,dx
  42479d:	sub    bl,BYTE PTR [esi-0x1fba44b5]
  4247a3:	das    
  4247a4:	jno    0x424757
  4247a6:	jmp    0x424802
  4247a8:	loopne 0x42476d
  4247aa:	pop    DWORD PTR [ebp+0x58d848d1]
  4247b0:	mov    cl,0xb1
  4247b2:	mov    DWORD PTR [edx+eax*4],eax
  4247b5:	and    edi,DWORD PTR [edx]
  4247b7:	sbb    ebx,DWORD PTR [ebx]
  4247b9:	push   esi
  4247ba:	aaa    
  4247bb:	xchg   esp,eax
  4247bc:	jmp    0x4247d7
  4247be:	or     al,0x3
  4247c0:	push   0xffffffcc
  4247c2:	push   0xd29d4e0d
  4247c7:	test   al,0x9e
  4247c9:	call   FWORD PTR [ecx+0x5be6e1a3]
  4247cf:	or     BYTE PTR [ebx+0x24087dd0],bl
  4247d5:	cmp    ebp,DWORD PTR [edi-0x38]
  4247d8:	aad    0x59
  4247da:	mov    edx,0x24ffcd80
  4247df:	neg    BYTE PTR [eax-0x77]
  4247e2:	js     0x4247b5
  4247e4:	or     DWORD PTR [eax-0x2f5adc39],ebp
  4247ea:	xor    BYTE PTR [edi-0x6],0x80
  4247ee:	sbb    eax,0xd3390ec0
  4247f3:	dec    ebp
  4247f4:	xor    al,0x5f
  4247f6:	mov    eax,ds:0xac0b2c74
  4247fb:	or     eax,0x65b2752
  424800:	mov    eax,0x939b5505
  424805:	rcr    BYTE PTR [edi-0x76],0xda
  424809:	add    DWORD PTR [ebp-0x59800064],ebx
  42480f:	lock cmp al,0xe8
  424812:	ret    0x81f3
  424815:	sub    al,0x28
  424817:	pop    ecx
  424818:	or     eax,0x8d2508fa
  42481d:	test   DWORD PTR [edx+0x47237d46],eax
  424823:	loope  0x42485f
  424825:	adc    cl,ch
  424827:	ret    
  424828:	ja     0x4247e8
  42482a:	dec    edi
  42482b:	loop   0x424867
  42482d:	sub    al,0xf3
  42482f:	cli    
  424830:	loope  0x42481b
  424832:	ret    
  424833:	jo     0x42485e
  424835:	adc    eax,0xd5287489
  42483a:	and    eax,DWORD PTR [eax-0x600b4d89]
  424840:	imul   edi,DWORD PTR [edi+0x356d7979],0xffffffbe
  424847:	gs icebp 
  424849:	mov    esp,DWORD PTR [ebp+eax*1+0x4d]
  42484d:	sbb    edi,DWORD PTR [ebp+0x46]
  424850:	(bad)  
  424851:	aam    0xf7
  424853:	push   ebx
  424854:	sub    DWORD PTR [esi-0x48413754],esi
  42485a:	scas   al,BYTE PTR es:[edi]
  42485b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42485c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42485d:	sbb    eax,0xe0115cc3
  424862:	je     0x424840
  424864:	js     0x4247f0
  424866:	fld    st(2)
  424868:	jle    0x424892
  42486a:	xchg   esp,eax
  42486b:	mov    al,ds:0xb385e654
  424870:	dec    eax
  424871:	(bad)  
  424872:	lods   al,BYTE PTR ds:[esi]
  424873:	sub    edx,0x9cbc9be2
  424879:	ss mov al,0x66
  42487c:	cld    
  42487d:	cmp    DWORD PTR [edi+0x4f83729f],edi
  424883:	repz mov ebp,0x8d90140a
  424889:	pop    ebp
  42488a:	dec    ebp
  42488b:	dec    ecx
  42488c:	adc    esp,DWORD PTR [edi+0x179bf0a]
  424892:	mov    cl,0xec
  424894:	xor    al,al
  424896:	les    edx,FWORD PTR [ecx]
  424898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424899:	addr16 out 0x80,al
  42489c:	inc    ebx
  42489d:	mov    esp,0x42b3a67b
  4248a2:	inc    ebx
  4248a3:	mov    ah,0xea
  4248a5:	rcr    DWORD PTR [edi],0x4a
  4248a8:	dec    ebp
  4248a9:	mov    ebx,0x24ccce5
  4248ae:	pop    ebx
  4248af:	push   0xd5061521
  4248b4:	pop    ebx
  4248b5:	lods   al,BYTE PTR ds:[esi]
  4248b6:	push   0xd47bff4d
  4248bb:	sub    eax,0x4bf44449
  4248c0:	xchg   esp,eax
  4248c1:	lahf   
  4248c2:	outs   dx,BYTE PTR ds:[esi]
  4248c3:	adc    DWORD PTR [ecx+ebx*4+0x347c3270],0x6f
  4248cb:	pop    ds
  4248cc:	cmc    
  4248cd:	jp     0x4248d5
  4248cf:	into   
  4248d0:	inc    edi
  4248d1:	lahf   
  4248d2:	add    eax,0x535f26a8
  4248d7:	dec    ebx
  4248d8:	shl    DWORD PTR [ebx],1
  4248da:	adc    eax,0x4f468d12
  4248df:	push   es
  4248e0:	add    al,0x47
  4248e2:	adc    al,0xc4
  4248e4:	push   ds
  4248e5:	mov    ah,0xc5
  4248e7:	sub    ebx,0xf52f10ad
  4248ed:	imul   esp,DWORD PTR [ebp-0x23ea993b],0xffffffe8
  4248f4:	fiadd  WORD PTR [ebx-0x45]
  4248f7:	or     BYTE PTR [ebp-0x3eda8fb3],cl
  4248fd:	add    DWORD PTR [ebx],0x6f
  424900:	xchg   DWORD PTR [eax],esi
  424902:	xlat   BYTE PTR ds:[ebx]
  424903:	cmp    eax,0x96ead31d
  424908:	rcl    esp,1
  42490a:	jmp    0x58b132c5
  42490f:	and    eax,esi
  424911:	ss (bad) 
  424913:	sbb    BYTE PTR [edx-0x1a],al
  424916:	retf   
  424917:	mov    ah,0xd7
  424919:	dec    edx
  42491a:	pusha  
  42491b:	xor    ebp,esp
  42491d:	pop    ss
  42491e:	jl     0x4248c2
  424920:	mov    cl,0xbf
  424922:	retf   
  424923:	sahf   
  424924:	or     al,0x80
  424926:	pop    DWORD PTR [ebx+eax*4]
  424929:	adc    BYTE PTR [ebp+ecx*1+0x26f0851f],al
  424930:	mov    edx,0x2d08dd57
  424935:	dec    edi
  424936:	jno    0x4248fc
  424938:	dec    ecx
  424939:	and    eax,DWORD PTR [edx-0x3d]
  42493c:	jns    0x424947
  42493e:	push   edi
  42493f:	mov    esi,0xeae7b834
  424944:	dec    ebx
  424945:	sbb    dl,BYTE PTR [esi+0x54eb7b9f]
  42494b:	pop    ss
  42494c:	xchg   ebx,eax
  42494d:	add    BYTE PTR [esi-0x2c500790],0xb2
  424954:	(bad)  
  424955:	add    ebx,edi
  424957:	mov    esp,0x3277413f
  42495c:	cmp    dh,BYTE PTR [esi-0x314ca216]
  424962:	fimul  WORD PTR [ecx-0x743a2670]
  424968:	test   eax,0x91bb2830
  42496d:	loope  0x424995
  42496f:	repnz add DWORD PTR [ebp-0x2b98a0fe],ebx
  424976:	lds    edi,FWORD PTR ds:0x8e084296
  42497c:	mul    ebp
  42497e:	fwait
  42497f:	jne    0x4249c0
  424981:	adc    al,0x6a
  424983:	sahf   
  424984:	xor    esp,DWORD PTR [edx-0x31ae99a7]
  42498a:	fdiv   QWORD PTR [ecx]
  42498c:	repnz fwait
  42498e:	pushf  
  42498f:	je     0x4249c3
  424991:	add    BYTE PTR [edi+0x33de5db2],dl
  424997:	and    al,0xa7
  424999:	lahf   
  42499a:	(bad)  
  42499b:	cdq    
  42499c:	sbb    eax,0x787107b7
  4249a1:	push   0x17
  4249a3:	hlt    
  4249a4:	pop    ds
  4249a5:	mov    dl,0x18
  4249a7:	retf   
  4249a8:	add    BYTE PTR [esi+0x1de219a],dh
  4249ae:	call   0xf900:0x68d069ce
  4249b5:	mov    al,ds:0xcd12ec80
  4249ba:	(bad)  
  4249bb:	mov    esi,0xc9c5635a
  4249c0:	xor    dl,BYTE PTR [ebx-0x5ce9e19f]
  4249c6:	out    0x9a,al
  4249c8:	sbb    ebp,DWORD PTR [edx+0xfb6e559]
  4249ce:	bound  edi,QWORD PTR [edx]
  4249d0:	xor    eax,0xd5352d61
  4249d5:	into   
  4249d6:	call   0x7fb1d36e
  4249db:	sbb    eax,0x8deb446b
  4249e0:	les    eax,FWORD PTR [ebp-0x26]
  4249e3:	pushf  
  4249e4:	(bad)  
  4249e5:	test   BYTE PTR [edi],ch
  4249e7:	xchg   esp,eax
  4249e8:	(bad)  
  4249e9:	cld    
  4249ea:	imul   edi,ebx,0x11de062a
  4249f0:	fsub   st,st(1)
  4249f2:	push   ebx
  4249f3:	or     esi,esp
  4249f5:	mov    bh,0xa8
  4249f7:	js     0x424a14
  4249f9:	cli    
  4249fa:	pop    esi
  4249fb:	retf   0xff07
  4249fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4249ff:	sub    al,0x76
  424a01:	mov    dl,0xca
  424a03:	pop    edi
  424a04:	adc    BYTE PTR [esi-0x32a0c9a],ch
  424a0a:	and    eax,0xa3369359
  424a0f:	cdq    
  424a10:	nop
  424a11:	jl     0x424a3a
  424a13:	xchg   edi,eax
  424a14:	adc    al,0xdd
  424a16:	fist   WORD PTR [ebp+0x505b0ed3]
  424a1c:	pop    es
  424a1d:	jo     0x4249a4
  424a1f:	jge    0x4249d1
  424a21:	push   esi
  424a22:	fcom   DWORD PTR [ebp-0x7f0ea41b]
  424a28:	cmp    DWORD PTR [ecx+0x22fef3b2],ebx
  424a2e:	call   0x7e99ad9d
  424a33:	ins    DWORD PTR es:[edi],dx
  424a34:	sub    DWORD PTR [ebx],0xb3e1b3c9
  424a3a:	jae    0x424a34
  424a3c:	push   0xf5442e45
  424a41:	in     eax,0xd6
  424a43:	test   DWORD PTR [esi+0x5b3f3d9c],edi
  424a49:	rcl    DWORD PTR ds:0x3717,0x19
  424a4f:	xchg   edx,eax
  424a50:	sbb    BYTE PTR [esi+0x58],cl
  424a53:	pop    ss
  424a54:	sub    dl,BYTE PTR [eax+eiz*8-0x13]
  424a58:	repz js 0x4249ef
  424a5b:	mov    ebx,0x8411441b
  424a60:	mov    dh,0xac
  424a62:	fimul  WORD PTR [ecx+0x6c]
  424a65:	lods   al,BYTE PTR ds:[esi]
  424a66:	fcomp  QWORD PTR [esi-0x2a]
  424a69:	(bad)  
  424a6a:	int3   
  424a6b:	mov    al,ds:0xaa3db7de
  424a70:	mov    al,ds:0x4cbc01bf
  424a75:	sub    BYTE PTR [ebp+0x7b1d64db],0x32
  424a7c:	das    
  424a7d:	je     0x424a8e
  424a7f:	out    0xc6,eax
  424a81:	cmp    DWORD PTR ds:[eax+0x4a],ecx
  424a85:	sub    DWORD PTR [esi+ecx*1+0x1e],ebp
  424a89:	jae    0x424a51
  424a8b:	jmp    esi
  424a8d:	cld    
  424a8e:	ret    0x5e10
  424a91:	sti    
  424a92:	fiadd  DWORD PTR [edi+edx*2+0x815d14]
  424a99:	or     BYTE PTR ds:0xa2fc91e8,al
  424a9f:	test   eax,0x7ff5e410
  424aa4:	jne    0x424a4d
  424aa6:	dec    eax
  424aa7:	mov    eax,ds:0x93cd337f
  424aac:	xor    ebp,DWORD PTR [edx+edx*8]
  424aaf:	sbb    eax,0xf4e48deb
  424ab4:	mul    dl
  424ab6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ab7:	inc    eax
  424ab8:	dec    eax
  424ab9:	cwde   
  424aba:	jge    0x424a3e
  424abc:	adc    al,0x86
  424abe:	dec    ebp
  424abf:	or     BYTE PTR ds:0x69b234,bl
  424ac5:	inc    ecx
  424ac6:	mov    bl,ah
  424ac8:	fadd   st(2),st
  424aca:	(bad)  
  424acb:	sub    DWORD PTR [esi+0x4129d59],ebp
  424ad1:	push   edx
  424ad2:	in     eax,dx
  424ad3:	add    al,BYTE PTR [ebx-0x66]
  424ad6:	cli    
  424ad7:	sub    BYTE PTR [edi],ah
  424ad9:	and    al,al
  424adb:	mov    dh,0x75
  424add:	ds data16 or al,0x1e
  424ae1:	mov    al,0xc5
  424ae3:	add    edi,DWORD PTR [esi]
  424ae5:	nop
  424ae6:	in     al,dx
  424ae7:	outs   dx,DWORD PTR ds:[esi]
  424ae8:	scas   al,BYTE PTR es:[edi]
  424ae9:	pop    edi
  424aea:	test   al,ch
  424aec:	mov    bh,0x65
  424aee:	ja     0x424a94
  424af0:	xlat   BYTE PTR ds:[ebx]
  424af1:	add    cl,BYTE PTR [ecx+eiz*1+0x746e9046]
  424af8:	stc    
  424af9:	or     ebx,esp
  424afb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424afc:	test   BYTE PTR [ebx+edx*8-0x1d],dl
  424b00:	pusha  
  424b01:	mov    al,0xf7
  424b03:	out    dx,al
  424b04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b05:	inc    eax
  424b06:	pop    ss
  424b07:	(bad)  
  424b08:	mov    ch,0xd6
  424b0a:	jmp    0xa6b43b2e
  424b0f:	cmp    eax,0x21a5ccc6
  424b14:	and    esp,DWORD PTR [ebx+0x3]
  424b17:	dec    BYTE PTR [ebx-0x50f0f78b]
  424b1d:	stc    
  424b1e:	mov    ebx,DWORD PTR [ebp+0xc]
  424b21:	xor    eax,edx
  424b23:	add    eax,ecx
  424b25:	mov    al,BYTE PTR [ebx+eax*1+0x3272ef]
  424b2c:	mov    BYTE PTR [edi+esi*1],al
  424b2f:	mov    eax,DWORD PTR [ebp-0x8]
  424b32:	mov    esi,DWORD PTR [ebp+0x10]
  424b35:	xor    eax,edx
  424b37:	xor    ebx,ebx
  424b39:	add    esi,0xfabdbeda
  424b3f:	adc    ebx,0xffffffff
  424b42:	lea    ecx,[ecx+eax*1+0x3272ef]
  424b49:	xor    edi,edi
  424b4b:	xor    esi,0x8a29a13b
  424b51:	xor    ebx,0x0
  424b54:	mov    eax,ecx
  424b56:	add    eax,0xfabdbeda
  424b5b:	adc    edi,0xffffffff
  424b5e:	xor    eax,0x8a29a13b
  424b63:	xor    edi,0x0
  424b66:	cmp    eax,esi
  424b68:	jne    0x423ca3
  424b6e:	cmp    edi,ebx
  424b70:	jne    0x423ca3
  424b76:	mov    eax,0xf89c85ba
  424b7b:	pop    ebx
  424b7c:	pop    edi
  424b7d:	pop    esi
  424b7e:	leave  
  424b7f:	ret    0xc
  424b82:	push   ebp
  424b83:	mov    ebp,esp
  424b85:	push   ecx
  424b86:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  424b8d:	sbb    DWORD PTR ds:0x42a44a,edi
  424b93:	mov    eax,DWORD PTR [ebp+0x8]
  424b96:	mov    DWORD PTR ds:0x42a3ba,0x17
  424ba0:	cmp    DWORD PTR ds:0x42a3ba,0x0
  424ba7:	je     0x424be9
  424bad:	cmp    DWORD PTR ds:0x42a3ba,0x1a
  424bb4:	jge    0x424be9
  424bba:	jmp    0x424bd7
  424bbf:	push   0x81bf
  424bc4:	push   DWORD PTR [ebp-0x14]
  424bc7:	push   0x4ee6
  424bcc:	push   0x429247
  424bd1:	call   DWORD PTR ds:0x42a51a
  424bd7:	mov    edx,DWORD PTR ds:0x42a3ba
  424bdd:	dec    edx
  424bde:	mov    DWORD PTR ds:0x42a3ba,edx
  424be4:	jmp    0x424ba0
  424be9:	movsx  eax,BYTE PTR [eax]
  424bec:	or     DWORD PTR ds:0x42a436,edi
  424bf2:	mov    edx,0x3272ef
  424bf7:	mov    ecx,DWORD PTR ds:0x42a4de
  424bfd:	mov    ecx,DWORD PTR [ecx]
  424bff:	sub    DWORD PTR ds:0x42a446,ecx
  424c05:	sub    eax,edx
  424c07:	mov    ecx,0x75108a8
  424c0c:	xor    eax,ecx
  424c0e:	mov    DWORD PTR ds:0x42a402,0x47a6
  424c18:	cmp    eax,0xf89c85f6
  424c1d:	jne    0x424c4c
  424c23:	mov    eax,DWORD PTR [ebp+0x8]
  424c26:	push   esi
  424c27:	mov    esi,DWORD PTR [ebp+0x8]
  424c2a:	add    esi,DWORD PTR [eax+0x3c]
  424c2d:	mov    DWORD PTR [ebp+0x8],esi
  424c30:	mov    eax,DWORD PTR [ebp-0x4]
  424c33:	mov    esi,DWORD PTR [ebp+0x8]
  424c36:	xor    eax,ecx
  424c38:	add    eax,edx
  424c3a:	cmp    DWORD PTR [esi+0x54],eax
  424c3d:	pop    esi
  424c3e:	je     0x424c4c
  424c44:	mov    eax,DWORD PTR [ebp+0x8]
  424c47:	jmp    0x424c53
  424c4c:	mov    eax,DWORD PTR [ebp-0x4]
  424c4f:	xor    eax,ecx
  424c51:	add    eax,edx
  424c53:	leave  
  424c54:	ret    0x4
  424c57:	push   ebp
  424c58:	mov    ebp,esp
  424c5a:	sub    esp,0xc
  424c5d:	or     DWORD PTR ds:0x42a452,0x1d31
  424c67:	push   esi
  424c68:	and    DWORD PTR ds:0x42a406,0x23eb
  424c72:	mov    esi,0xf89c85b9
  424c77:	mov    DWORD PTR [ebp-0x8],esi
  424c7a:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  424c81:	mov    edx,DWORD PTR ds:0x42a3a6
  424c87:	or     DWORD PTR ds:0x42a3ca,edx
  424c8d:	push   edi
  424c8e:	mov    eax,eax
  424c90:	mov    eax,DWORD PTR [ebp-0x4]
  424c93:	mov    edi,DWORD PTR [ebp-0x8]
  424c96:	and    DWORD PTR ds:0x42a3ba,ecx
  424c9c:	mov    ecx,0x75108a8
  424ca1:	or     edx,0x44c8
  424ca7:	xor    eax,ecx
  424ca9:	xor    edi,ecx
  424cab:	and    edx,DWORD PTR ds:0x42a42e
  424cb1:	mov    edx,0x3272ef
  424cb6:	sub    DWORD PTR ds:0x42a406,0x42a436
  424cc0:	add    edi,edx
  424cc2:	sbb    DWORD PTR ds:0x42a3b2,0x42a3f6
  424ccc:	add    eax,edx
  424cce:	imul   eax,edi
  424cd1:	mov    DWORD PTR ds:0x42a452,0x2cc6
  424cdb:	mov    edi,DWORD PTR [ebp+0xc]
  424cde:	mov    DWORD PTR ds:0x42a3b6,0x805
  424ce8:	cmp    edi,eax
  424cea:	je     0x424dca
  424cf0:	or     DWORD PTR ds:0x42a3d6,ebx
  424cf6:	mov    DWORD PTR [ebp-0xc],esi
  424cf9:	mov    eax,DWORD PTR [ebp-0xc]
  424cfc:	mov    esi,DWORD PTR [ebp+0xc]
  424cff:	xor    DWORD PTR ds:0x42a406,0x42a3f2
  424d09:	xor    eax,ecx
  424d0b:	sbb    DWORD PTR ds:0x42a402,0x1fd5
  424d15:	lea    eax,[eax*8+0x19397f0]
  424d1c:	mov    DWORD PTR ds:0x42a3ce,0x647a
  424d26:	mov    eax,DWORD PTR [esi+eax*1]
  424d29:	and    DWORD PTR ds:0x42a43a,0x0
  424d33:	jmp    0x424d47
  424d38:	xor    esi,esi
  424d3a:	xor    esi,DWORD PTR ds:0x42a43a
  424d40:	inc    esi
  424d41:	mov    DWORD PTR ds:0x42a43a,esi
  424d47:	cmp    DWORD PTR ds:0x42a43a,0x17
  424d4e:	jae    0x424d90
  424d54:	cmp    DWORD PTR ds:0x42a43a,0x20
  424d5b:	jl     0x424d90
  424d61:	jmp    0x424d8b
  424d66:	push   0x42a406
  424d6b:	push   0x60aa
  424d70:	push   0x629f
  424d75:	push   DWORD PTR [ebp-0x24]
  424d78:	push   0x2e64
  424d7d:	push   0x223e
  424d82:	push   DWORD PTR [ebp-0x20]
  424d85:	call   DWORD PTR ds:0x42a51e
  424d8b:	jmp    0x424d38
  424d90:	mov    DWORD PTR [ebp+0xc],eax
  424d93:	mov    eax,DWORD PTR [ebp-0x4]
  424d96:	mov    esi,DWORD PTR [ebp-0x8]
  424d99:	xor    eax,ecx
  424d9b:	xor    esi,ecx
  424d9d:	add    esi,edx
  424d9f:	add    eax,edx
  424da1:	imul   eax,esi
  424da4:	mov    esi,DWORD PTR [ebp+0xc]
  424da7:	cmp    esi,eax
  424da9:	je     0x424dca
  424daf:	mov    eax,DWORD PTR [ebp-0x4]
  424db2:	xor    eax,ecx
  424db4:	mov    ecx,DWORD PTR [ebp+0xc]
  424db7:	add    eax,edx
  424db9:	imul   eax,ecx
  424dbc:	add    eax,DWORD PTR [ebp+0x8]
  424dbf:	mov    DWORD PTR [ebp+0xc],eax
  424dc2:	mov    eax,DWORD PTR [ebp+0xc]
  424dc5:	jmp    0x424ddb
  424dca:	mov    eax,DWORD PTR [ebp-0x4]
  424dcd:	mov    esi,DWORD PTR [ebp-0x8]
  424dd0:	xor    esi,ecx
  424dd2:	xor    eax,ecx
  424dd4:	add    esi,edx
  424dd6:	add    eax,edx
  424dd8:	imul   eax,esi
  424ddb:	pop    edi
  424ddc:	pop    esi
  424ddd:	leave  
  424dde:	ret    0x8
	...
  424df1:	add    BYTE PTR [eax],al
  424df3:	add    BYTE PTR [esi-0x5],ch
  424df6:	ss dec ebp
  424df8:	add    BYTE PTR [eax],al
  424dfa:	add    BYTE PTR [eax],al
  424dfc:	add    al,BYTE PTR [eax]
  424dfe:	add    BYTE PTR [eax],al
  424e00:	xor    al,0x0
  424e02:	add    BYTE PTR [eax],al
  424e04:	adc    BYTE PTR [esi+0x2],cl
  424e07:	add    BYTE PTR [eax],dl
  424e09:	inc    edx
  424e0a:	add    al,BYTE PTR [eax]
  424e0c:	add    BYTE PTR [eax],al
  424e0e:	add    BYTE PTR [eax],al
  424e10:	push   edx
  424e11:	push   ebx
  424e12:	inc    esp
  424e13:	push   ebx
  424e14:	fstp   DWORD PTR [ecx+0x2c]
  424e17:	jns    0x424e4a
  424e19:	jnp    0x424e6c
  424e1b:	dec    ecx
  424e1c:	(bad)  
  424e1d:	int    0x29
  424e1f:	lock jb 0x424e53
  424e22:	out    dx,eax
  424e23:	sbb    eax,DWORD PTR [ecx]
  424e25:	add    BYTE PTR [eax],al
  424e27:	add    BYTE PTR [ebp+0x3a],al
  424e2a:	pop    esp
  424e2b:	push   edx
  424e2c:	popa   
  424e2d:	ja     0x424e4f
  424e2f:	inc    esp
  424e30:	popa   
  424e31:	je     0x424e94
  424e33:	pop    esp
  424e34:	inc    ebp
  424e35:	outs   dx,BYTE PTR ds:[esi]
  424e36:	arpl   WORD PTR [edi+0x64],bp
  424e39:	gs fs inc esp
  424e3c:	popa   
  424e3d:	je     0x424ea0
  424e3f:	inc    esi
  424e40:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x81ec558b
  424e48:	in     al,dx
  424e49:	or     BYTE PTR [ecx],al
  424e4b:	add    BYTE PTR [eax],al
  424e4d:	push   ebx
  424e4e:	mov    eax,ebx
  424e50:	xchg   ecx,eax
  424e51:	mov    eax,DWORD PTR [ebp+0x8]
  424e54:	cmp    eax,0xf89c85b9
  424e59:	jne    0x42531b
  424e5f:	mov    eax,DWORD PTR [ebp+0xc]
  424e62:	cmp    eax,0xf89c85ba
  424e67:	jne    0x42531b
  424e6d:	mov    eax,DWORD PTR [ebp+0x24]
  424e70:	mov    DWORD PTR [ebp-0x4],eax
  424e73:	mov    eax,DWORD PTR [ebp-0x4]
  424e76:	mov    eax,DWORD PTR [eax+0x1d8]
  424e7c:	mov    eax,DWORD PTR [eax]
  424e7e:	mov    eax,DWORD PTR [eax]
  424e80:	mov    DWORD PTR [ebp-0x8],eax
  424e83:	mov    BYTE PTR [ebp-0x18],0x13
  424e87:	mov    BYTE PTR [ebp-0x17],0x1e
  424e8b:	mov    BYTE PTR [ebp-0x16],0x11
  424e8f:	mov    BYTE PTR [ebp-0x15],0x4f
  424e93:	mov    BYTE PTR [ebp-0x14],0x48
  424e97:	mov    BYTE PTR [ebp-0x13],0x7a
  424e9b:	mov    BYTE PTR [ebp-0x20],0xd
  424e9f:	mov    BYTE PTR [ebp-0x1f],0xf
  424ea3:	mov    BYTE PTR [ebp-0x1e],0x1d
  424ea7:	mov    BYTE PTR [ebp-0x1d],0x8
  424eab:	mov    BYTE PTR [ebp-0x1c],0x4f
  424eaf:	mov    BYTE PTR [ebp-0x1b],0x48
  424eb3:	mov    BYTE PTR [ebp-0x1a],0x7a
  424eb7:	mov    BYTE PTR [ebp-0x28],0xf
  424ebb:	mov    BYTE PTR [ebp-0x27],0x12
  424ebf:	mov    BYTE PTR [ebp-0x26],0x16
  424ec3:	mov    BYTE PTR [ebp-0x25],0x3
  424ec7:	mov    BYTE PTR [ebp-0x24],0x19
  424ecb:	push   esi
  424ecc:	mov    BYTE PTR [ebp-0x23],0xa
  424ed0:	mov    BYTE PTR [ebp-0x22],0x11
  424ed4:	push   edi
  424ed5:	mov    BYTE PTR [ebp-0x21],0x7a
  424ed9:	xor    esi,esi
  424edb:	mov    eax,0xff
  424ee0:	lea    ecx,[ebp+esi*1-0x18]
  424ee4:	movzx  edx,BYTE PTR [ecx]
  424ee7:	xor    edx,0x7b
  424eea:	add    edx,eax
  424eec:	inc    esi
  424eed:	mov    BYTE PTR [ecx],dl
  424eef:	cmp    esi,0x6
  424ef2:	jb     0x424ee0
  424ef4:	xor    esi,esi
  424ef6:	lea    ecx,[ebp+esi*1-0x20]
  424efa:	movzx  edx,BYTE PTR [ecx]
  424efd:	xor    edx,0x7b
  424f00:	add    edx,eax
  424f02:	inc    esi
  424f03:	mov    BYTE PTR [ecx],dl
  424f05:	cmp    esi,0x7
  424f08:	jb     0x424ef6
  424f0a:	xor    esi,esi
  424f0c:	lea    ecx,[ebp+esi*1-0x28]
  424f10:	movzx  edx,BYTE PTR [ecx]
  424f13:	xor    edx,0x7b
  424f16:	add    edx,eax
  424f18:	inc    esi
  424f19:	mov    BYTE PTR [ecx],dl
  424f1b:	cmp    esi,0x8
  424f1e:	jb     0x424f0c
  424f20:	lea    eax,[ebp-0x2c]
  424f23:	mov    DWORD PTR [ebp-0x8],eax
  424f26:	mov    ecx,DWORD PTR [ebp-0x8]
  424f29:	mov    eax,0x7113fccf
  424f2e:	mov    DWORD PTR [ecx],eax
  424f30:	mov    ecx,DWORD PTR [ebp-0x2c]
  424f33:	mov    esi,0x4e31
  424f38:	mov    ebx,0x3272ef
  424f3d:	cmp    ecx,eax
  424f3f:	jne    0x42500a
  424f45:	lea    eax,[esi+0x35]
  424f48:	mov    WORD PTR [ebp-0x78],ax
  424f4c:	mov    eax,esi
  424f4e:	mov    WORD PTR [ebp-0x76],ax
  424f52:	add    eax,0x4b
  424f55:	mov    WORD PTR [ebp-0x74],ax
  424f59:	lea    eax,[esi+0xe]
  424f5c:	mov    WORD PTR [ebp-0x72],ax
  424f60:	add    eax,0x3f
  424f63:	mov    ecx,eax
  424f65:	lea    eax,[esi-0xd]
  424f68:	mov    WORD PTR [ebp-0x66],ax
  424f6c:	mov    eax,esi
  424f6e:	mov    WORD PTR [ebp-0x64],ax
  424f72:	add    eax,0xfffffff4
  424f75:	mov    WORD PTR [ebp-0x62],ax
  424f79:	mov    eax,0x44a
  424f7e:	mov    WORD PTR [ebp-0x60],ax
  424f82:	mov    eax,0x567b
  424f87:	mov    WORD PTR [ebp-0x5e],ax
  424f8b:	mov    eax,0x611b
  424f90:	mov    WORD PTR [ebp-0x5c],ax
  424f94:	lea    eax,[ebp-0xe0]
  424f9a:	push   eax
  424f9b:	mov    eax,DWORD PTR [ebp+0xc]
  424f9e:	mov    edi,0x75108a8
  424fa3:	xor    eax,edi
  424fa5:	add    eax,ebx
  424fa7:	push   eax
  424fa8:	mov    WORD PTR [ebp-0x70],cx
  424fac:	lea    ecx,[esi+0xa]
  424faf:	mov    edx,ecx
  424fb1:	lea    eax,[ebp-0x78]
  424fb4:	push   eax
  424fb5:	mov    eax,DWORD PTR [ebp-0x4]
  424fb8:	mov    eax,DWORD PTR [eax+0x198]
  424fbe:	mov    WORD PTR [ebp-0x6e],dx
  424fc2:	mov    edx,0x4f85
  424fc7:	mov    WORD PTR [ebp-0x6c],dx
  424fcb:	mov    DWORD PTR [ebp-0x6a],0x4e7e4e38
  424fd2:	mov    DWORD PTR [ebp-0x5a],0x4e3bf1e9
  424fd9:	mov    DWORD PTR [ebp-0xe0],0x1
  424fe3:	mov    DWORD PTR [ebp-0xdc],0x255
  424fed:	push   DWORD PTR [eax]
  424fef:	mov    eax,DWORD PTR [ebp+0x10]
  424ff2:	call   eax
  424ff4:	mov    DWORD PTR [ebp-0x8],eax
  424ff7:	mov    eax,DWORD PTR [ebp-0x8]
  424ffa:	test   eax,eax
  424ffc:	je     0x42500f
  424ffe:	xor    DWORD PTR ds:0x76586876,0x87687666
  425008:	jmp    0x42500f
  42500a:	mov    edi,0x75108a8
  42500f:	mov    eax,DWORD PTR [ebp-0x4]
  425012:	mov    ecx,DWORD PTR [eax+0x18c]
  425018:	xor    eax,eax
  42501a:	cmp    DWORD PTR [ecx],eax
  42501c:	jne    0x42528e
  425022:	mov    ecx,DWORD PTR [ebp-0x4]
  425025:	mov    ecx,DWORD PTR [ecx+0x17c]
  42502b:	mov    DWORD PTR [ecx],eax
  42502d:	mov    ecx,DWORD PTR [ebp-0x4]
  425030:	mov    ecx,DWORD PTR [ecx+0x180]
  425036:	mov    DWORD PTR [ecx],eax
  425038:	mov    eax,0x4e6c
  42503d:	mov    WORD PTR [ebp-0x9c],ax
  425044:	mov    eax,esi
  425046:	mov    WORD PTR [ebp-0x9a],ax
  42504d:	mov    eax,0x4e7c
  425052:	mov    WORD PTR [ebp-0x98],ax
  425059:	add    eax,0xffffffc0
  42505c:	mov    WORD PTR [ebp-0x96],ax
  425063:	mov    eax,0x4f81
  425068:	mov    WORD PTR [ebp-0x94],ax
  42506f:	mov    eax,0x4e3d
  425074:	mov    WORD PTR [ebp-0x92],ax
  42507b:	add    eax,0x41
  42507e:	mov    WORD PTR [ebp-0x90],ax
  425085:	mov    eax,0x4e3b
  42508a:	mov    WORD PTR [ebp-0x8e],ax
  425091:	mov    eax,esi
  425093:	mov    WORD PTR [ebp-0x8c],ax
  42509a:	mov    eax,0x4e38
  42509f:	mov    WORD PTR [ebp-0x8a],ax
  4250a6:	mov    eax,0x99fc
  4250ab:	mov    WORD PTR [ebp-0x88],ax
  4250b2:	mov    eax,0x8d6d
  4250b7:	mov    WORD PTR [ebp-0x86],ax
  4250be:	mov    eax,0xd66e
  4250c3:	mov    WORD PTR [ebp-0x84],ax
  4250ca:	mov    eax,0xd78a
  4250cf:	mov    WORD PTR [ebp-0x82],ax
  4250d6:	mov    eax,0x278b
  4250db:	mov    WORD PTR [ebp-0x80],ax
  4250df:	mov    eax,0x478b
  4250e4:	mov    WORD PTR [ebp-0x7e],ax
  4250e8:	mov    eax,0x4e3a
  4250ed:	push   0x8
  4250ef:	mov    WORD PTR [ebp-0x7c],ax
  4250f3:	mov    DWORD PTR [ebp-0x10],0x316120f
  4250fa:	mov    DWORD PTR [ebp-0xc],0x7a110a19
  425101:	lea    eax,[ebp-0x10]
  425104:	pop    ecx
  425105:	mov    dl,BYTE PTR [eax]
  425107:	xor    dl,0x7b
  42510a:	dec    dl
  42510c:	mov    BYTE PTR [eax],dl
  42510e:	inc    eax
  42510f:	dec    ecx
  425110:	jne    0x425105
  425112:	lea    eax,[ebp-0x10]
  425115:	mov    DWORD PTR [ebp-0xdc],eax
  42511b:	lea    eax,[ebp-0xe0]
  425121:	push   eax
  425122:	mov    eax,DWORD PTR [ebp+0xc]
  425125:	xor    eax,edi
  425127:	add    eax,ebx
  425129:	push   eax
  42512a:	mov    eax,DWORD PTR [ebp-0x4]
  42512d:	add    eax,0x66
  425130:	push   eax
  425131:	mov    eax,DWORD PTR [ebp-0x4]
  425134:	mov    eax,DWORD PTR [eax+0x198]
  42513a:	mov    DWORD PTR [ebp-0xe0],0x1
  425144:	push   DWORD PTR [eax]
  425146:	mov    eax,DWORD PTR [ebp+0x10]
  425149:	call   eax
  42514b:	mov    ecx,DWORD PTR [ebp+0x8]
  42514e:	xor    ecx,edi
  425150:	add    ecx,ebx
  425152:	mov    DWORD PTR [ebp-0x8],eax
  425155:	cmp    eax,ecx
  425157:	jne    0x425172
  425159:	mov    eax,ds:0x33730bc0
  42515e:	or     eax,0x22150bcf
  425163:	mov    ds:0x33730bc0,eax
  425168:	add    eax,0x3372e92f
  42516d:	mov    ds:0x33730bc0,eax
  425172:	mov    ecx,0x4e69
  425177:	mov    eax,ecx
  425179:	mov    WORD PTR [ebp-0x40],ax
  42517d:	add    eax,0xfffffff9
  425180:	mov    edx,eax
  425182:	mov    WORD PTR [ebp-0x3e],dx
  425186:	mov    edx,0x4f9a
  42518b:	mov    WORD PTR [ebp-0x3c],dx
  42518f:	add    edx,0xffffffe8
  425192:	mov    WORD PTR [ebp-0x3a],dx
  425196:	mov    edx,0x4f80
  42519b:	mov    WORD PTR [ebp-0x38],dx
  42519f:	add    edx,0xf
  4251a2:	mov    WORD PTR [ebp-0x36],dx
  4251a6:	mov    edx,0x4fb6
  4251ab:	mov    WORD PTR [ebp-0x34],dx
  4251af:	mov    WORD PTR [ebp-0x32],cx
  4251b3:	mov    ecx,esi
  4251b5:	mov    WORD PTR [ebp-0x30],cx
  4251b9:	lea    ecx,[edx-0x2d]
  4251bc:	mov    edx,ecx
  4251be:	mov    WORD PTR [ebp-0x54],dx
  4251c2:	mov    edx,eax
  4251c4:	mov    WORD PTR [ebp-0x52],dx
  4251c8:	mov    edx,0x4e7a
  4251cd:	mov    WORD PTR [ebp-0x50],dx
  4251d1:	mov    WORD PTR [ebp-0x4e],ax
  4251d5:	lea    eax,[edx-0x1a]
  4251d8:	mov    WORD PTR [ebp-0x4c],ax
  4251dc:	add    eax,0xf
  4251df:	mov    WORD PTR [ebp-0x4a],ax
  4251e3:	lea    eax,[ecx+0xd]
  4251e6:	mov    WORD PTR [ebp-0x48],ax
  4251ea:	mov    WORD PTR [ebp-0x46],cx
  4251ee:	mov    WORD PTR [ebp-0x44],si
  4251f2:	mov    eax,DWORD PTR [ebp+0x8]
  4251f5:	movzx  ecx,WORD PTR [ebp-0x54]
  4251f9:	xor    eax,edi
  4251fb:	add    eax,ebx
  4251fd:	xor    eax,ecx
  4251ff:	mov    WORD PTR [ebp-0x54],ax
  425203:	mov    eax,DWORD PTR [ebp+0x8]
  425206:	movzx  ecx,WORD PTR [ebp-0x40]
  42520a:	xor    eax,edi
  42520c:	add    eax,ebx
  42520e:	xor    eax,ecx
  425210:	mov    WORD PTR [ebp-0x40],ax
  425214:	xor    eax,eax
  425216:	mov    WORD PTR [ebp-0xf4],ax
  42521d:	mov    WORD PTR [ebp-0x108],ax
  425224:	mov    edi,DWORD PTR [ebp+0x24]
  425227:	lea    eax,[ebp-0xf4]
  42522d:	lea    edx,[ebp-0x54]
  425230:	mov    DWORD PTR [ebp-0xe0],0x2
  42523a:	mov    DWORD PTR [ebp-0xdc],eax
  425240:	call   0x427c77
  425245:	mov    DWORD PTR [ebp-0xd8],eax
  42524b:	lea    eax,[ebp-0xe0]
  425251:	push   eax
  425252:	mov    eax,DWORD PTR [ebp+0xc]
  425255:	xor    eax,0x75108a8
  42525a:	add    eax,ebx
  42525c:	push   eax
  42525d:	lea    eax,[ebp-0x9c]
  425263:	push   eax
  425264:	push   DWORD PTR [ebp-0x8]
  425267:	mov    eax,DWORD PTR [ebp+0x10]
  42526a:	call   eax
  42526c:	mov    edi,DWORD PTR [ebp+0x24]
  42526f:	lea    eax,[ebp-0x108]
  425275:	lea    edx,[ebp-0x40]
  425278:	mov    DWORD PTR [ebp-0xdc],eax
  42527e:	call   0x427c77
  425283:	mov    DWORD PTR [ebp-0xd8],eax
  425289:	mov    edi,0x75108a8
  42528e:	mov    eax,DWORD PTR [ebp+0x14]
  425291:	push   DWORD PTR [ebp-0x4]
  425294:	push   DWORD PTR [ebp+0x20]
  425297:	push   DWORD PTR [ebp+0x1c]
  42529a:	push   DWORD PTR [ebp+0x18]
  42529d:	push   DWORD PTR [ebp+0x10]
  4252a0:	push   DWORD PTR [ebp+0x8]
  4252a3:	push   DWORD PTR [ebp+0xc]
  4252a6:	call   0x426518
  4252ab:	test   eax,eax
  4252ad:	je     0x4252f1
  4252af:	add    DWORD PTR [ebp-0x4],eax
  4252b2:	push   DWORD PTR [ebp-0x4]
  4252b5:	lea    esi,[ebp+0x4]
  4252b8:	call   0x425709
  4252bd:	mov    eax,DWORD PTR [ebp-0x4]
  4252c0:	mov    eax,DWORD PTR [eax+0x1c8]
  4252c6:	mov    eax,DWORD PTR [eax]
  4252c8:	xor    eax,edi
  4252ca:	add    eax,ebx
  4252cc:	mov    eax,DWORD PTR [ebp-0x4]
  4252cf:	jne    0x4252e7
  4252d1:	mov    ecx,DWORD PTR [ebp-0x4]
  4252d4:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4252da:	push   DWORD PTR [ecx]
  4252dc:	mov    eax,DWORD PTR [eax+0x1e0]
  4252e2:	call   DWORD PTR [eax+0x28]
  4252e5:	jmp    0x4252f1
  4252e7:	mov    eax,DWORD PTR [eax+0x17c]
  4252ed:	mov    eax,DWORD PTR [eax]
  4252ef:	add    DWORD PTR [esi],eax
  4252f1:	mov    eax,DWORD PTR [ebp-0x4]
  4252f4:	mov    eax,DWORD PTR [eax+0x1dc]
  4252fa:	dec    DWORD PTR [eax]
  4252fc:	mov    ecx,DWORD PTR [ebp-0x4]
  4252ff:	mov    ecx,DWORD PTR [ecx+0x1d8]
  425305:	mov    eax,DWORD PTR [eax]
  425307:	lea    eax,[ecx+eax*4]
  42530a:	mov    ecx,DWORD PTR [ebp-0x4]
  42530d:	mov    ecx,DWORD PTR [ecx+0x17c]
  425313:	mov    eax,DWORD PTR [eax]
  425315:	mov    ecx,DWORD PTR [ecx]
  425317:	add    DWORD PTR [eax],ecx
  425319:	pop    edi
  42531a:	pop    esi
  42531b:	pop    ebx
  42531c:	leave  
  42531d:	ret    0x20
  425320:	push   edi
  425321:	push   esi
  425322:	push   ebx
  425323:	push   ebp
  425324:	mov    ebp,esp
  425326:	mov    eax,DWORD PTR [ebp+0x24]
  425329:	add    DWORD PTR [ebp+0x28],eax
  42532c:	push   eax
  42532d:	cld    
  42532e:	mov    esi,DWORD PTR [ebp+0x18]
  425331:	add    DWORD PTR [ebp+0x1c],esi
  425334:	push   esi
  425335:	mov    esi,DWORD PTR [ebp+0x14]
  425338:	lods   eax,DWORD PTR ds:[esi]
  425339:	xchg   edx,eax
  42533a:	push   edx
  42533b:	mov    cl,BYTE PTR [esi-0x2]
  42533e:	or     eax,0xffffffff
  425341:	shl    eax,cl
  425343:	not    eax
  425345:	push   eax
  425346:	mov    cl,dh
  425348:	or     eax,0xffffffff
  42534b:	shl    eax,cl
  42534d:	not    eax
  42534f:	push   eax
  425350:	add    cl,dl
  425352:	mov    edi,esi
  425354:	sub    esp,0xc
  425357:	sub    eax,eax
  425359:	inc    eax
  42535a:	push   eax
  42535b:	push   eax
  42535c:	push   eax
  42535d:	push   eax
  42535e:	push   eax
  42535f:	push   edi
  425360:	sub    esi,esi
  425362:	push   esi
  425363:	or     ebx,0xffffffff
  425366:	mov    eax,0x300
  42536b:	shl    eax,cl
  42536d:	lea    ecx,[eax+0x736]
  425373:	mov    eax,0x4000400
  425378:	shr    ecx,1
  42537a:	rep stos DWORD PTR es:[edi],eax
  42537c:	push   0x5
  42537e:	pop    ecx
  42537f:	call   0x42566a
  425384:	loop   0x42537f
  425386:	lea    esi,[esi]
  425388:	lea    edi,[edi]
  42538a:	mov    edi,DWORD PTR [ebp-0x4]
  42538d:	mov    eax,DWORD PTR [ebp-0x10]
  425390:	sub    edi,DWORD PTR [ebp+0x24]
  425393:	and    eax,edi
  425395:	mov    DWORD PTR [ebp-0x18],eax
  425398:	mov    al,0x0
  42539a:	call   0x425682
  42539f:	jne    0x42543a
  4253a5:	mov    cl,BYTE PTR [ebp-0xc]
  4253a8:	and    edi,DWORD PTR [ebp-0x14]
  4253ab:	shl    edi,cl
  4253ad:	sub    cl,0x8
  4253b0:	neg    cl
  4253b2:	shr    esi,cl
  4253b4:	pop    eax
  4253b5:	add    edi,esi
  4253b7:	pop    esi
  4253b8:	lea    edi,[edi+edi*2]
  4253bb:	shl    edi,0x8
  4253be:	cmp    al,0x7
  4253c0:	pop    edx
  4253c1:	lea    ecx,[esi+edi*2+0xe6c]
  4253c8:	push   ecx
  4253c9:	push   esi
  4253ca:	mov    esi,0x100
  4253cf:	push   eax
  4253d0:	mov    al,0x1
  4253d2:	jb     0x425408
  4253d4:	mov    edi,DWORD PTR [ebp-0x4]
  4253d7:	sub    edi,DWORD PTR [ebp-0x24]
  4253da:	movzx  edi,BYTE PTR [edi]
  4253dd:	mov    ebp,DWORD PTR [ebp-0x34]
  4253e0:	shl    edi,1
  4253e2:	mov    ecx,esi
  4253e4:	and    esi,edi
  4253e6:	add    ecx,esi
  4253e8:	lea    ebp,[ebp+ecx*2+0x0]
  4253ec:	call   0x4256a1
  4253f1:	mov    ecx,eax
  4253f3:	shr    esi,0x8
  4253f6:	and    ecx,0x1
  4253f9:	cmp    esi,ecx
  4253fb:	mov    esi,0x100
  425400:	jne    0x425410
  425402:	cmp    eax,esi
  425404:	jb     0x4253dd
  425406:	jmp    0x42541c
  425408:	mov    ebp,DWORD PTR [ebp-0x34]
  42540b:	call   0x4256a1
  425410:	inc    eax
  425411:	inc    esi
  425412:	sub    eax,0x1
  425415:	sub    esi,0x1
  425418:	cmp    eax,esi
  42541a:	jb     0x425408
  42541c:	pop    edx
  42541d:	inc    edx
  42541e:	cmp    edx,0x5
  425421:	dec    edx
  425422:	mov    ecx,edx
  425424:	jb     0x425435
  425426:	inc    edx
  425427:	cmp    edx,0xb
  42542a:	dec    edx
  42542b:	mov    cl,0x4
  42542d:	dec    cl
  42542f:	jb     0x425435
  425431:	mov    cl,0x7
  425433:	dec    cl
  425435:	sub    edx,ecx
  425437:	push   edx
  425438:	jmp    0x425489
  42543a:	mov    al,0xc1
  42543c:	dec    al
  42543e:	call   0x425692
  425443:	jne    0x425459
  425445:	pop    eax
  425446:	pop    edi
  425447:	pop    edx
  425448:	pop    ecx
  425449:	pop    edx
  42544a:	pop    ecx
  42544b:	push   DWORD PTR [esp]
  42544e:	push   ecx
  42544f:	push   edx
  425450:	mov    edx,0x664
  425455:	mov    cl,0x0
  425457:	jmp    0x4254cc
  425459:	mov    al,0xcd
  42545b:	dec    al
  42545d:	call   0x425692
  425462:	jne    0x425492
  425464:	mov    al,0xf1
  425466:	dec    al
  425468:	call   0x425682
  42546d:	jne    0x4254c2
  42546f:	pop    eax
  425470:	cmp    al,0x7
  425472:	mov    al,0x9
  425474:	jb     0x425478
  425476:	mov    al,0xb
  425478:	push   eax
  425479:	mov    esi,DWORD PTR [ebp-0x4]
  42547c:	sub    esi,DWORD PTR [ebp-0x24]
  42547f:	cmp    esi,DWORD PTR [ebp+0x24]
  425482:	jb     0x425659
  425488:	lods   al,BYTE PTR ds:[esi]
  425489:	mov    edi,DWORD PTR [ebp-0x4]
  42548c:	stos   BYTE PTR es:[edi],al
  42548d:	jmp    0x425620
  425492:	mov    al,0xd8
  425494:	call   0x425692
  425499:	mov    esi,DWORD PTR [ebp-0x28]
  42549c:	je     0x4254b9
  42549e:	mov    al,0xe4
  4254a0:	call   0x425692
  4254a5:	mov    esi,DWORD PTR [ebp-0x2c]
  4254a8:	je     0x4254b3
  4254aa:	mov    esi,DWORD PTR [ebp-0x30]
  4254ad:	mov    ecx,DWORD PTR [ebp-0x2c]
  4254b0:	mov    DWORD PTR [ebp-0x30],ecx
  4254b3:	mov    ecx,DWORD PTR [ebp-0x28]
  4254b6:	mov    DWORD PTR [ebp-0x2c],ecx
  4254b9:	mov    ecx,DWORD PTR [ebp-0x24]
  4254bc:	mov    DWORD PTR [ebp-0x28],ecx
  4254bf:	mov    DWORD PTR [ebp-0x24],esi
  4254c2:	pop    eax
  4254c3:	pop    edi
  4254c4:	pop    ecx
  4254c5:	mov    edx,0xa68
  4254ca:	mov    cl,0x8
  4254cc:	add    edx,edi
  4254ce:	push   edx
  4254cf:	push   edi
  4254d0:	cmp    al,0x7
  4254d2:	mov    al,cl
  4254d4:	jb     0x4254d8
  4254d6:	add    al,0x3
  4254d8:	push   eax
  4254d9:	mov    ebp,DWORD PTR [ebp-0x34]
  4254dc:	call   0x42569f
  4254e1:	jne    0x4254f7
  4254e3:	mov    eax,DWORD PTR [ebp-0x18]
  4254e6:	mov    edi,DWORD PTR [ebp-0x34]
  4254e9:	shl    eax,0x3
  4254ec:	sub    ecx,ecx
  4254ee:	push   0x8
  4254f0:	pop    esi
  4254f1:	lea    edi,[edi+eax*2+0x4]
  4254f5:	jmp    0x42552c
  4254f7:	mov    ebp,DWORD PTR [ebp-0x34]
  4254fa:	add    ebp,0x2
  4254fd:	call   0x42569f
  425502:	jne    0x42551c
  425504:	mov    eax,DWORD PTR [ebp-0x18]
  425507:	mov    edi,DWORD PTR [ebp-0x34]
  42550a:	shl    eax,0x3
  42550d:	push   0x8
  42550f:	pop    ecx
  425510:	push   0x8
  425512:	pop    esi
  425513:	lea    edi,[edi+eax*2+0x104]
  42551a:	jmp    0x42552c
  42551c:	mov    edi,0x204
  425521:	add    edi,DWORD PTR [ebp-0x34]
  425524:	push   0x10
  425526:	pop    ecx
  425527:	mov    esi,0x100
  42552c:	mov    DWORD PTR [ebp-0x1c],ecx
  42552f:	sub    eax,eax
  425531:	inc    eax
  425532:	mov    ebp,edi
  425534:	call   0x4256a1
  425539:	mov    ecx,eax
  42553b:	sub    ecx,esi
  42553d:	jb     0x425532
  42553f:	add    DWORD PTR [ebp-0x1c],ecx
  425542:	cmp    DWORD PTR [ebp-0x3c],0x4
  425546:	jae    0x4255fc
  42554c:	add    DWORD PTR [ebp-0x3c],0x7
  425550:	mov    ecx,DWORD PTR [ebp-0x1c]
  425553:	cmp    ecx,0x4
  425556:	jb     0x42555b
  425558:	push   0x3
  42555a:	pop    ecx
  42555b:	mov    edi,DWORD PTR [ebp-0x38]
  42555e:	shl    ecx,0x6
  425561:	sub    eax,eax
  425563:	inc    eax
  425564:	push   0x40
  425566:	pop    esi
  425567:	lea    edi,[edi+ecx*2+0x360]
  42556e:	mov    ebp,edi
  425570:	call   0x4256a1
  425575:	mov    ecx,eax
  425577:	sub    ecx,esi
  425579:	jb     0x42556e
  42557b:	mov    DWORD PTR [ebp-0x18],ecx
  42557e:	mov    DWORD PTR [ebp-0x24],ecx
  425581:	cmp    ecx,0x4
  425584:	jb     0x4255f9
  425586:	mov    esi,ecx
  425588:	and    DWORD PTR [ebp-0x24],0x1
  42558c:	shr    esi,1
  42558e:	or     DWORD PTR [ebp-0x24],0x2
  425592:	dec    esi
  425593:	cmp    ecx,0xe
  425596:	jae    0x4255b1
  425598:	mov    eax,0x2af
  42559d:	sub    eax,ecx
  42559f:	mov    ecx,esi
  4255a1:	shl    BYTE PTR [ebp-0x24],cl
  4255a4:	add    eax,DWORD PTR [ebp-0x24]
  4255a7:	shl    eax,1
  4255a9:	add    eax,DWORD PTR [ebp-0x38]
  4255ac:	mov    DWORD PTR [ebp-0x34],eax
  4255af:	jmp    0x4255de
  4255b1:	sub    esi,0x4
  4255b4:	call   0x42565e
  4255b9:	shr    ebx,1
  4255bb:	shl    DWORD PTR [ebp-0x24],1
  4255be:	cmp    DWORD PTR [ebp-0x20],ebx
  4255c1:	jb     0x4255c9
  4255c3:	inc    DWORD PTR [ebp-0x24]
  4255c6:	sub    DWORD PTR [ebp-0x20],ebx
  4255c9:	dec    esi
  4255ca:	jne    0x4255b4
  4255cc:	mov    eax,0x644
  4255d1:	add    eax,DWORD PTR [ebp-0x38]
  4255d4:	mov    DWORD PTR [ebp-0x34],eax
  4255d7:	shl    DWORD PTR [ebp-0x24],0x4
  4255db:	push   0x4
  4255dd:	pop    esi
  4255de:	sub    edi,edi
  4255e0:	inc    edi
  4255e1:	mov    eax,edi
  4255e3:	mov    ebp,DWORD PTR [ebp-0x34]
  4255e6:	call   0x4256a1
  4255eb:	test   al,0x1
  4255ed:	je     0x4255f2
  4255ef:	or     DWORD PTR [ebp-0x24],edi
  4255f2:	shl    edi,1
  4255f4:	dec    esi
  4255f5:	jne    0x4255e3
  4255f7:	jmp    0x4255f9
  4255f9:	inc    DWORD PTR [ebp-0x24]
  4255fc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4255ff:	add    ecx,0x2
  425602:	mov    edi,DWORD PTR [ebp-0x4]
  425605:	mov    eax,edi
  425607:	sub    eax,DWORD PTR [ebp+0x24]
  42560a:	cmp    DWORD PTR [ebp-0x24],eax
  42560d:	ja     0x425659
  42560f:	mov    esi,edi
  425611:	sub    esi,DWORD PTR [ebp-0x24]
  425614:	mov    edx,DWORD PTR [ebp+0x28]
  425617:	lods   al,BYTE PTR ds:[esi]
  425618:	stos   BYTE PTR es:[edi],al
  425619:	cmp    edi,edx
  42561b:	jae    0x425620
  42561d:	dec    ecx
  42561e:	jne    0x425617
  425620:	mov    DWORD PTR [ebp-0x4],edi
  425623:	movzx  esi,al
  425626:	cmp    edi,DWORD PTR [ebp+0x28]
  425629:	jb     0x42538a
  42562f:	call   0x42565e
  425634:	sub    eax,eax
  425636:	lea    ebp,[esp+0x3c]
  42563a:	mov    edx,DWORD PTR [ebp+0x20]
  42563d:	mov    esi,DWORD PTR [ebp-0x8]
  425640:	sub    esi,DWORD PTR [ebp+0x18]
  425643:	mov    DWORD PTR [ebp-0x4d],ecx
  425646:	fidiv  DWORD PTR ds:0x31787ab3
  42564c:	jp     0x425663
  42564e:	stos   DWORD PTR es:[edi],eax
  42564f:	ins    DWORD PTR es:[edi],dx
  425650:	lods   al,BYTE PTR ds:[esi]
  425651:	repnz inc BYTE PTR [edx]
  425654:	nop
  425655:	cmc    
  425656:	test   esi,edi
  425658:	out    0x31,al
  42565a:	mov    BYTE PTR [esi+0x748be834],al
  425660:	test   DWORD PTR [ebp-0x76b1767b],eax
  425666:	xchg   esp,eax
  425667:	mov    WORD PTR [eiz*4+0x685ab3de],ss
  42566e:	jno    0x4256ca
  425670:	cmc    
  425671:	push   edx
  425672:	sbb    BYTE PTR [ebx+0x88c089a],dh
  425678:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425679:	aaa    
  42567a:	stos   DWORD PTR es:[edi],eax
  42567b:	call   0x94fe:0x685aab08
  425682:	mov    bl,0xba
  425684:	cwde   
  425685:	rcr    DWORD PTR [edi-0x78],0x8c
  425689:	or     al,0x95
  42568b:	xchg   ecx,eax
  42568c:	call   0xc19d:0x348c9128
  425693:	pop    edi
  425694:	mov    BYTE PTR [ecx+0x3ab3989a],dl
  42569a:	test   al,0xbb
  42569c:	ss call 0x9a36:0xbb883185
  4256a4:	test   DWORD PTR [ebx-0x7a7a7a8c],ecx
  4256aa:	mov    DWORD PTR [edx-0xb],edx
  4256ad:	mov    bl,0xb6
  4256af:	adc    eax,0x15168c65
  4256b4:	add    eax,0x15b671a5
  4256b9:	not    BYTE PTR [edx-0x9]
  4256bc:	scas   eax,DWORD PTR es:[edi]
  4256bd:	leave  
  4256be:	test   BYTE PTR [esi+0x148c6515],dl
  4256c4:	or     BYTE PTR [eax-0x74dfdbac],cl
  4256ca:	retf   
  4256cb:	movzx  edx,WORD PTR [ebp+0x0]
  4256cf:	shr    ecx,0xb
  4256d2:	imul   ecx,edx
  4256d5:	cmp    DWORD PTR [esp+0x20],ecx
  4256d9:	jae    0x4256f2
  4256db:	mov    ebx,ecx
  4256dd:	mov    ecx,0x800
  4256e2:	sub    ecx,edx
  4256e4:	shr    ecx,0x5
  4256e7:	add    WORD PTR [ebp+0x0],cx
  4256eb:	add    eax,eax
  4256ed:	lea    ebp,[esp+0x40]
  4256f1:	ret    
  4256f2:	shr    edx,0x5
  4256f5:	sub    DWORD PTR [esp+0x20],ecx
  4256f9:	sub    ebx,ecx
  4256fb:	sub    WORD PTR [ebp+0x0],dx
  4256ff:	add    eax,eax
  425701:	add    eax,0x1
  425704:	lea    ebp,[esp+0x40]
  425708:	ret    
  425709:	push   ebp
  42570a:	mov    ebp,esp
  42570c:	sub    esp,0x12c
  425712:	push   ebx
  425713:	push   esi
  425714:	push   edi
  425715:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  42571c:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  425723:	mov    eax,DWORD PTR [ebp+0x8]
  425726:	mov    DWORD PTR [ebp+0x8],eax
  425729:	mov    ecx,DWORD PTR [ebp-0x10]
  42572c:	mov    ebx,0x75108a8
  425731:	xor    ecx,ebx
  425733:	mov    eax,0x3272ef
  425738:	add    ecx,eax
  42573a:	mov    DWORD PTR [ebp-0x24],ecx
  42573d:	mov    ecx,DWORD PTR [ebp-0x10]
  425740:	xor    ecx,ebx
  425742:	add    ecx,eax
  425744:	mov    DWORD PTR [ebp-0x40],ecx
  425747:	mov    ecx,DWORD PTR [ebp-0x10]
  42574a:	xor    ecx,ebx
  42574c:	add    ecx,eax
  42574e:	mov    DWORD PTR [ebp-0x3c],ecx
  425751:	mov    ecx,DWORD PTR [ebp-0x10]
  425754:	xor    ecx,ebx
  425756:	add    ecx,eax
  425758:	mov    DWORD PTR [ebp-0xd8],ecx
  42575e:	mov    DWORD PTR [ebp-0x50],0xf89f05b9
  425765:	mov    DWORD PTR [ebp-0x3c],0xf89cb5b9
  42576c:	mov    DWORD PTR [ebp-0x54],0xf89c85bd
  425773:	push   0x25
  425775:	pop    ecx
  425776:	mov    DWORD PTR [ebp-0x30],ecx
  425779:	mov    DWORD PTR [ebp-0x30],ecx
  42577c:	push   0x65
  42577e:	pop    ecx
  42577f:	mov    DWORD PTR [ebp-0x30],ecx
  425782:	mov    DWORD PTR [ebp-0x30],ecx
  425785:	mov    DWORD PTR [ebp-0x30],0x4d
  42578c:	mov    DWORD PTR [ebp-0x30],0x43
  425793:	mov    ecx,DWORD PTR [ebp-0x10]
  425796:	xor    ecx,ebx
  425798:	add    ecx,eax
  42579a:	mov    DWORD PTR [ebp-0x30],ecx
  42579d:	mov    ecx,DWORD PTR [ebp-0x10]
  4257a0:	xor    ecx,ebx
  4257a2:	add    ecx,eax
  4257a4:	mov    DWORD PTR [ebp-0x30],ecx
  4257a7:	mov    DWORD PTR [ebp-0x28],0x258
  4257ae:	mov    DWORD PTR [ebp-0x34],0x36
  4257b5:	mov    DWORD PTR [ebp-0x14],0x7a
  4257bc:	lea    edi,[ebp-0x10c]
  4257c2:	lea    esi,[ebp-0x12c]
  4257c8:	call   0x426487
  4257cd:	dec    DWORD PTR [ebp-0x14]
  4257d0:	jne    0x4257bc
  4257d2:	dec    DWORD PTR [ebp-0x34]
  4257d5:	jne    0x4257b5
  4257d7:	dec    DWORD PTR [ebp-0x28]
  4257da:	jne    0x4257ae
  4257dc:	mov    DWORD PTR [ebp-0x28],0x400e
  4257e3:	mov    eax,DWORD PTR [ebp-0x10]
  4257e6:	xor    eax,ebx
  4257e8:	mov    esi,0x3272ef
  4257ed:	add    eax,esi
  4257ef:	mov    DWORD PTR [ebp-0x1c],eax
  4257f2:	mov    eax,DWORD PTR [ebp-0x10]
  4257f5:	and    DWORD PTR [ebp-0x94],0x0
  4257fc:	xor    eax,ebx
  4257fe:	add    eax,esi
  425800:	mov    DWORD PTR [ebp-0x38],eax
  425803:	mov    eax,fs:0x18
  425809:	mov    DWORD PTR [ebp-0x94],eax
  42580f:	mov    eax,DWORD PTR [eax+0x30]
  425812:	mov    DWORD PTR [ebp-0xcc],eax
  425818:	mov    eax,DWORD PTR [eax+0xc]
  42581b:	mov    DWORD PTR [ebp-0xc0],eax
  425821:	mov    eax,DWORD PTR [ebp+0x8]
  425824:	lea    ecx,[ebp-0x94]
  42582a:	mov    DWORD PTR [eax+0x1a0],ecx
  425830:	mov    eax,DWORD PTR [ebp+0x8]
  425833:	lea    ecx,[ebp-0xcc]
  425839:	mov    DWORD PTR [eax+0x1a4],ecx
  42583f:	mov    eax,DWORD PTR [ebp+0x8]
  425842:	push   DWORD PTR [ebp+0x8]
  425845:	lea    ecx,[ebp-0xc0]
  42584b:	mov    DWORD PTR [eax+0x1a8],ecx
  425851:	call   0x427c48
  425856:	mov    ecx,DWORD PTR [ebp-0x10]
  425859:	xor    ecx,ebx
  42585b:	add    ecx,esi
  42585d:	cmp    ecx,eax
  42585f:	je     0x425be2
  425865:	mov    eax,DWORD PTR [ebp+0x8]
  425868:	mov    eax,DWORD PTR [eax+0x194]
  42586e:	mov    ecx,DWORD PTR [eax]
  425870:	mov    eax,DWORD PTR [ebp+0x8]
  425873:	mov    eax,DWORD PTR [eax+0x194]
  425879:	mov    eax,DWORD PTR [eax]
  42587b:	add    eax,DWORD PTR [ecx+0x3c]
  42587e:	mov    ecx,DWORD PTR [ebp+0x8]
  425881:	mov    ecx,DWORD PTR [ecx+0x1e0]
  425887:	lea    edx,[ebp-0xec]
  42588d:	push   edx
  42588e:	mov    edx,DWORD PTR [ebp+0x8]
  425891:	mov    edx,DWORD PTR [edx+0x18c]
  425897:	mov    edx,DWORD PTR [edx]
  425899:	add    edx,DWORD PTR [eax+0x88]
  42589f:	push   0x4
  4258a1:	push   DWORD PTR [eax+0x8c]
  4258a7:	push   edx
  4258a8:	call   DWORD PTR [ecx+0x1c]
  4258ab:	push   DWORD PTR [ebp+0x8]
  4258ae:	xor    eax,eax
  4258b0:	mov    DWORD PTR [ebp-0xa8],0x123f0f31
  4258ba:	mov    DWORD PTR [ebp-0xa4],0xb360819
  4258c4:	mov    DWORD PTR [ebp-0xa0],0x39081d03
  4258ce:	mov    BYTE PTR [ebp-0x9c],0x7a
  4258d5:	lea    edi,[ebp-0x9b]
  4258db:	stos   DWORD PTR es:[edi],eax
  4258dc:	stos   WORD PTR es:[edi],ax
  4258de:	stos   BYTE PTR es:[edi],al
  4258df:	xor    eax,eax
  4258e1:	mov    DWORD PTR [ebp-0xbc],0x123f0f31
  4258eb:	mov    DWORD PTR [ebp-0xb8],0xb360819
  4258f5:	mov    DWORD PTR [ebp-0xb4],0x23081d03
  4258ff:	mov    BYTE PTR [ebp-0xb0],0x7a
  425906:	lea    edi,[ebp-0xaf]
  42590c:	stos   DWORD PTR es:[edi],eax
  42590d:	stos   WORD PTR es:[edi],ax
  42590f:	stos   BYTE PTR es:[edi],al
  425910:	mov    edi,DWORD PTR [ebp+0x8]
  425913:	mov    eax,DWORD PTR [ebp+0x8]
  425916:	mov    edx,DWORD PTR [eax+0x1b8]
  42591c:	mov    DWORD PTR [ebp-0x68],0x80e0f16
  425923:	mov    DWORD PTR [ebp-0x64],0x110a151f
  42592a:	mov    WORD PTR [ebp-0x60],0x7a39
  425930:	mov    DWORD PTR [ebp-0x90],0x123f0f31
  42593a:	mov    DWORD PTR [ebp-0x8c],0x16390819
  425944:	mov    DWORD PTR [ebp-0x88],0x3419120a
  42594e:	mov    DWORD PTR [ebp-0x84],0x81d150d
  425958:	mov    DWORD PTR [ebp-0x80],0x7a391f11
  42595f:	mov    DWORD PTR [ebp-0x7c],0x123f0f31
  425966:	mov    DWORD PTR [ebp-0x78],0x16390819
  42596d:	mov    DWORD PTR [ebp-0x74],0x3419120a
  425974:	mov    DWORD PTR [ebp-0x70],0x81d150d
  42597b:	mov    DWORD PTR [ebp-0x6c],0x7a231f11
  425982:	call   0x427c77
  425987:	push   eax
  425988:	mov    eax,DWORD PTR [ebp+0x8]
  42598b:	mov    eax,DWORD PTR [eax+0x1a8]
  425991:	push   DWORD PTR [eax]
  425993:	call   0x427918
  425998:	test   eax,eax
  42599a:	jne    0x4259ec
  42599c:	mov    eax,DWORD PTR [ebp+0x8]
  42599f:	mov    eax,DWORD PTR [eax+0x1e0]
  4259a5:	mov    edi,DWORD PTR [ebp+0x8]
  4259a8:	add    eax,0x4
  4259ab:	mov    DWORD PTR [ebp-0x20],eax
  4259ae:	mov    eax,DWORD PTR [ebp+0x8]
  4259b1:	mov    edx,DWORD PTR [eax+0x1b8]
  4259b7:	call   0x427c77
  4259bc:	push   eax
  4259bd:	mov    eax,DWORD PTR [ebp-0x20]
  4259c0:	call   DWORD PTR [eax]
  4259c2:	test   eax,eax
  4259c4:	jne    0x4259ec
  4259c6:	mov    eax,DWORD PTR [ebp+0x8]
  4259c9:	mov    eax,DWORD PTR [eax+0x1e0]
  4259cf:	mov    edi,DWORD PTR [ebp+0x8]
  4259d2:	add    eax,0x10
  4259d5:	mov    DWORD PTR [ebp-0x20],eax
  4259d8:	mov    eax,DWORD PTR [ebp+0x8]
  4259db:	mov    edx,DWORD PTR [eax+0x1b8]
  4259e1:	call   0x427c77
  4259e6:	push   eax
  4259e7:	mov    eax,DWORD PTR [ebp-0x20]
  4259ea:	call   DWORD PTR [eax]
  4259ec:	mov    eax,DWORD PTR [ebp-0x10]
  4259ef:	mov    ecx,DWORD PTR [ebp-0x28]
  4259f2:	xor    eax,ebx
  4259f4:	add    eax,esi
  4259f6:	cmp    eax,ecx
  4259f8:	je     0x425bbb
  4259fe:	mov    eax,DWORD PTR [ebp-0x18]
  425a01:	xor    eax,ebx
  425a03:	mov    ecx,0xffcd8d11
  425a08:	sub    ecx,eax
  425a0a:	add    ecx,DWORD PTR [ebp-0x28]
  425a0d:	mov    eax,DWORD PTR [ebp-0x1c]
  425a10:	cmp    eax,ecx
  425a12:	ja     0x425bbb
  425a18:	mov    DWORD PTR [ebp-0x34],0x0
  425a1f:	push   DWORD PTR [ebp+0x8]
  425a22:	mov    edi,DWORD PTR [ebp+0x8]
  425a25:	mov    eax,DWORD PTR [ebp+0x8]
  425a28:	mov    edx,DWORD PTR [eax+0x1b4]
  425a2e:	call   0x427c77
  425a33:	push   eax
  425a34:	mov    eax,DWORD PTR [ebp+0x8]
  425a37:	mov    eax,DWORD PTR [eax+0x1a8]
  425a3d:	push   DWORD PTR [eax]
  425a3f:	call   0x427918
  425a44:	mov    ecx,DWORD PTR [ebp+0x8]
  425a47:	mov    ecx,DWORD PTR [ecx+0x19c]
  425a4d:	mov    DWORD PTR [ecx],eax
  425a4f:	mov    eax,DWORD PTR [ebp+0x8]
  425a52:	mov    edi,DWORD PTR [eax+0x1e0]
  425a58:	mov    esi,DWORD PTR [ebp+0x8]
  425a5b:	xor    eax,eax
  425a5d:	lea    edx,[ebp-0x7c]
  425a60:	call   0x427cad
  425a65:	push   eax
  425a66:	mov    eax,DWORD PTR [ebp+0x8]
  425a69:	mov    eax,DWORD PTR [eax+0x19c]
  425a6f:	push   DWORD PTR [eax]
  425a71:	call   DWORD PTR [edi+0x8]
  425a74:	mov    DWORD PTR [ebp-0x20],eax
  425a77:	mov    eax,DWORD PTR [ebp+0x8]
  425a7a:	mov    edi,DWORD PTR [eax+0x1e0]
  425a80:	mov    esi,DWORD PTR [ebp+0x8]
  425a83:	xor    eax,eax
  425a85:	lea    edx,[ebp-0x90]
  425a8b:	call   0x427cad
  425a90:	push   eax
  425a91:	mov    eax,DWORD PTR [ebp+0x8]
  425a94:	mov    eax,DWORD PTR [eax+0x19c]
  425a9a:	push   DWORD PTR [eax]
  425a9c:	call   DWORD PTR [edi+0x8]
  425a9f:	mov    eax,DWORD PTR [ebp+0x8]
  425aa2:	mov    edi,DWORD PTR [eax+0x1e0]
  425aa8:	mov    esi,DWORD PTR [ebp+0x8]
  425aab:	xor    eax,eax
  425aad:	lea    edx,[ebp-0xa8]
  425ab3:	call   0x427cad
  425ab8:	push   eax
  425ab9:	mov    eax,DWORD PTR [ebp+0x8]
  425abc:	mov    eax,DWORD PTR [eax+0x19c]
  425ac2:	push   DWORD PTR [eax]
  425ac4:	call   DWORD PTR [edi+0x8]
  425ac7:	and    DWORD PTR [ebp-0x8],0x0
  425acb:	mov    DWORD PTR [ebp-0x48],eax
  425ace:	mov    eax,DWORD PTR [ebp-0x8]
  425ad1:	and    eax,0x7
  425ad4:	add    eax,0x31
  425ad7:	push   eax
  425ad8:	call   DWORD PTR [ebp-0x20]
  425adb:	test   eax,eax
  425add:	je     0x425b21
  425adf:	mov    eax,DWORD PTR [ebp-0x8]
  425ae2:	push   0x19
  425ae4:	xor    edx,edx
  425ae6:	pop    ecx
  425ae7:	div    ecx
  425ae9:	add    dl,0x41
  425aec:	movzx  eax,dl
  425aef:	push   eax
  425af0:	call   DWORD PTR [ebp-0x48]
  425af3:	test   eax,eax
  425af5:	jne    0x425b21
  425af7:	mov    eax,DWORD PTR [ebp+0x8]
  425afa:	mov    edi,DWORD PTR [eax+0x1e0]
  425b00:	mov    esi,DWORD PTR [ebp+0x8]
  425b03:	xor    eax,eax
  425b05:	lea    edx,[ebp-0x68]
  425b08:	call   0x427cad
  425b0d:	push   eax
  425b0e:	mov    eax,DWORD PTR [ebp+0x8]
  425b11:	mov    eax,DWORD PTR [eax+0x198]
  425b17:	push   DWORD PTR [eax]
  425b19:	call   DWORD PTR [edi+0x8]
  425b1c:	mov    DWORD PTR [ebp-0x14],eax
  425b1f:	jmp    0x425b25
  425b21:	and    DWORD PTR [ebp-0x14],0x0
  425b25:	inc    DWORD PTR [ebp-0x8]
  425b28:	cmp    DWORD PTR [ebp-0x8],0x10
  425b2c:	jb     0x425ace
  425b2e:	mov    eax,DWORD PTR [ebp-0x18]
  425b31:	mov    esi,DWORD PTR [ebp+0x8]
  425b34:	xor    eax,ebx
  425b36:	mov    edi,0x3272ef
  425b3b:	add    eax,edi
  425b3d:	lea    edx,[ebp-0x10c]
  425b43:	call   0x427cad
  425b48:	push   eax
  425b49:	mov    eax,DWORD PTR [ebp-0x10]
  425b4c:	mov    esi,DWORD PTR [ebp+0x8]
  425b4f:	xor    eax,ebx
  425b51:	add    eax,edi
  425b53:	lea    edx,[ebp-0x12c]
  425b59:	call   0x427cad
  425b5e:	push   eax
  425b5f:	call   DWORD PTR [ebp-0x14]
  425b62:	mov    ecx,DWORD PTR [ebp-0x10]
  425b65:	xor    ecx,ebx
  425b67:	add    ecx,edi
  425b69:	cmp    ecx,eax
  425b6b:	jne    0x425b74
  425b6d:	mov    DWORD PTR [ebp-0x34],0x1
  425b74:	mov    eax,DWORD PTR [ebp-0x18]
  425b77:	mov    ecx,DWORD PTR [ebp-0x1c]
  425b7a:	xor    eax,ebx
  425b7c:	lea    eax,[eax+ecx*1+0x3272ef]
  425b83:	mov    DWORD PTR [ebp-0x1c],eax
  425b86:	mov    eax,DWORD PTR [ebp-0x34]
  425b89:	test   eax,eax
  425b8b:	je     0x425b9f
  425b8d:	mov    eax,DWORD PTR [ebp-0x18]
  425b90:	mov    ecx,DWORD PTR [ebp-0x38]
  425b93:	xor    eax,ebx
  425b95:	lea    eax,[eax+ecx*1+0x3272ef]
  425b9c:	mov    DWORD PTR [ebp-0x38],eax
  425b9f:	mov    eax,DWORD PTR [ebp-0x18]
  425ba2:	xor    eax,ebx
  425ba4:	mov    ecx,0xffcd8d11
  425ba9:	sub    ecx,eax
  425bab:	add    ecx,DWORD PTR [ebp-0x28]
  425bae:	mov    eax,DWORD PTR [ebp-0x1c]
  425bb1:	cmp    eax,ecx
  425bb3:	jbe    0x425a18
  425bb9:	mov    esi,edi
  425bbb:	mov    eax,DWORD PTR [ebp-0x38]
  425bbe:	mov    ecx,DWORD PTR [ebp-0x1c]
  425bc1:	cmp    ecx,eax
  425bc3:	jne    0x425bd6
  425bc5:	push   DWORD PTR [ebp+0x8]
  425bc8:	lea    eax,[ebp-0x40]
  425bcb:	push   eax
  425bcc:	call   0x42871a
  425bd1:	mov    DWORD PTR [ebp-0x24],eax
  425bd4:	jmp    0x425be2
  425bd6:	mov    eax,DWORD PTR [ebp-0x24]
  425bd9:	mov    ecx,DWORD PTR [ebp-0x18]
  425bdc:	xor    ecx,ebx
  425bde:	add    ecx,esi
  425be0:	xor    DWORD PTR [eax],ecx
  425be2:	mov    eax,DWORD PTR [ebp-0x10]
  425be5:	mov    ecx,DWORD PTR [ebp-0x24]
  425be8:	xor    eax,ebx
  425bea:	add    eax,esi
  425bec:	cmp    eax,ecx
  425bee:	je     0x426365
  425bf4:	mov    eax,DWORD PTR [ebp-0x10]
  425bf7:	mov    ecx,DWORD PTR [ebp-0x40]
  425bfa:	xor    eax,ebx
  425bfc:	add    eax,esi
  425bfe:	cmp    eax,ecx
  425c00:	je     0x426365
  425c06:	mov    eax,DWORD PTR [ebp-0x10]
  425c09:	xor    eax,ebx
  425c0b:	add    eax,esi
  425c0d:	jmp    0x425c2b
  425c0f:	mov    edi,DWORD PTR [ebp-0x24]
  425c12:	mov    cl,al
  425c14:	and    cl,0x1f
  425c17:	or     dl,0xff
  425c1a:	sub    dl,cl
  425c1c:	add    BYTE PTR [edi+eax*1],dl
  425c1f:	mov    ecx,DWORD PTR [ebp-0x18]
  425c22:	xor    ecx,ebx
  425c24:	lea    eax,[eax+ecx*1+0x3272ef]
  425c2b:	mov    ecx,DWORD PTR [ebp-0x40]
  425c2e:	cmp    eax,ecx
  425c30:	jb     0x425c0f
  425c32:	mov    eax,DWORD PTR [ebp-0x40]
  425c35:	mov    DWORD PTR [ebp-0x28],eax
  425c38:	mov    eax,DWORD PTR [ebp-0x24]
  425c3b:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  425c42:	mov    DWORD PTR [ebp-0xd4],eax
  425c48:	mov    edi,0xf89c85ba
  425c4d:	mov    DWORD PTR [ebp-0x2c],edi
  425c50:	mov    eax,DWORD PTR [ebp-0x38]
  425c53:	xor    eax,ebx
  425c55:	add    eax,esi
  425c57:	mov    DWORD PTR [ebp-0xc],eax
  425c5a:	mov    eax,DWORD PTR [ebp-0x38]
  425c5d:	xor    eax,ebx
  425c5f:	add    eax,esi
  425c61:	mov    DWORD PTR [ebp-0x8],eax
  425c64:	mov    DWORD PTR [ebp-0x48],0xf89c8599
  425c6b:	mov    DWORD PTR [ebp-0x4c],0xf89c85b0
  425c72:	mov    eax,DWORD PTR [ebp-0x38]
  425c75:	mov    ecx,DWORD PTR [ebp-0x28]
  425c78:	xor    eax,ebx
  425c7a:	add    eax,esi
  425c7c:	cmp    ecx,eax
  425c7e:	je     0x425e7d
  425c84:	jmp    0x425e59
  425c89:	mov    ecx,DWORD PTR [ebp-0xc]
  425c8c:	mov    eax,DWORD PTR [ebp-0x28]
  425c8f:	sub    eax,ecx
  425c91:	mov    ecx,DWORD PTR [ebp-0x48]
  425c94:	xor    ecx,ebx
  425c96:	add    ecx,esi
  425c98:	xor    edx,edx
  425c9a:	div    ecx
  425c9c:	mov    DWORD PTR [ebp-0x8],eax
  425c9f:	mov    eax,DWORD PTR [ebp-0x4c]
  425ca2:	mov    ecx,DWORD PTR [ebp-0x8]
  425ca5:	xor    eax,ebx
  425ca7:	add    eax,esi
  425ca9:	cmp    ecx,eax
  425cab:	jbe    0x425cb7
  425cad:	mov    eax,DWORD PTR [ebp-0x4c]
  425cb0:	xor    eax,ebx
  425cb2:	add    eax,esi
  425cb4:	mov    DWORD PTR [ebp-0x8],eax
  425cb7:	mov    eax,DWORD PTR [ebp-0x48]
  425cba:	mov    ecx,DWORD PTR [ebp-0x8]
  425cbd:	xor    eax,ebx
  425cbf:	add    eax,esi
  425cc1:	imul   eax,ecx
  425cc4:	mov    DWORD PTR [ebp-0x8],eax
  425cc7:	mov    eax,DWORD PTR [ebp-0x38]
  425cca:	mov    ecx,DWORD PTR [ebp-0x8]
  425ccd:	xor    eax,ebx
  425ccf:	add    eax,esi
  425cd1:	cmp    ecx,eax
  425cd3:	je     0x425e47
  425cd9:	mov    eax,DWORD PTR [ebp-0x8]
  425cdc:	mov    DWORD PTR [ebp-0x14],eax
  425cdf:	mov    eax,DWORD PTR [ebp-0xc]
  425ce2:	add    eax,DWORD PTR [ebp-0xd4]
  425ce8:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  425cef:	mov    DWORD PTR [ebp-0x34],edi
  425cf2:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  425cfc:	mov    DWORD PTR [ebp-0x8],eax
  425cff:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  425d06:	mov    DWORD PTR [ebp-0x1c],edi
  425d09:	mov    eax,DWORD PTR [ebp-0x20]
  425d0c:	xor    eax,ebx
  425d0e:	add    eax,esi
  425d10:	jmp    0x425e06
  425d15:	mov    DWORD PTR [ebp-0xe0],0xf89c85b4
  425d1f:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  425d29:	mov    eax,DWORD PTR [ebp-0x1c]
  425d2c:	mov    ecx,DWORD PTR [ebp-0x44]
  425d2f:	xor    eax,ebx
  425d31:	add    eax,esi
  425d33:	imul   eax,ecx
  425d36:	mov    ecx,DWORD PTR [ebp-0x8]
  425d39:	mov    al,BYTE PTR [eax+ecx*1]
  425d3c:	mov    BYTE PTR [ebp-0x2],al
  425d3f:	mov    eax,DWORD PTR [ebp-0x1c]
  425d42:	mov    ecx,DWORD PTR [ebp-0x44]
  425d45:	xor    eax,ebx
  425d47:	add    eax,esi
  425d49:	imul   eax,ecx
  425d4c:	mov    ecx,DWORD PTR [ebp-0xe8]
  425d52:	xor    ecx,ebx
  425d54:	add    eax,ecx
  425d56:	mov    ecx,DWORD PTR [ebp-0x8]
  425d59:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ef]
  425d61:	mov    ecx,DWORD PTR [ebp-0xe0]
  425d67:	xor    ecx,ebx
  425d69:	lea    eax,[ecx+eax*1+0x3272ef]
  425d70:	movzx  ecx,BYTE PTR [ebp-0x2]
  425d74:	xor    ecx,eax
  425d76:	mov    BYTE PTR [ebp-0x2],cl
  425d79:	mov    al,BYTE PTR [ebp-0x2]
  425d7c:	mov    ecx,DWORD PTR [ebp-0x1c]
  425d7f:	mov    edx,DWORD PTR [ebp-0x44]
  425d82:	xor    ecx,ebx
  425d84:	add    ecx,esi
  425d86:	imul   ecx,edx
  425d89:	mov    edx,DWORD PTR [ebp-0x8]
  425d8c:	mov    BYTE PTR [ecx+edx*1],al
  425d8f:	mov    eax,DWORD PTR [ebp-0x1c]
  425d92:	mov    ecx,DWORD PTR [ebp-0x44]
  425d95:	xor    eax,ebx
  425d97:	add    eax,esi
  425d99:	imul   eax,ecx
  425d9c:	mov    ecx,DWORD PTR [ebp-0x8]
  425d9f:	mov    al,BYTE PTR [eax+ecx*1]
  425da2:	mov    BYTE PTR [ebp-0x2],al
  425da5:	mov    eax,DWORD PTR [ebp-0x1c]
  425da8:	mov    ecx,DWORD PTR [ebp-0x44]
  425dab:	xor    eax,ebx
  425dad:	add    eax,esi
  425daf:	imul   eax,ecx
  425db2:	mov    ecx,DWORD PTR [ebp-0x34]
  425db5:	xor    ecx,ebx
  425db7:	add    eax,ecx
  425db9:	mov    ecx,DWORD PTR [ebp-0x8]
  425dbc:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ef]
  425dc4:	mov    ecx,DWORD PTR [ebp-0xc4]
  425dca:	xor    ecx,ebx
  425dcc:	lea    eax,[ecx+eax*1+0x3272ef]
  425dd3:	movzx  ecx,BYTE PTR [ebp-0x2]
  425dd7:	xor    ecx,eax
  425dd9:	mov    BYTE PTR [ebp-0x2],cl
  425ddc:	mov    al,BYTE PTR [ebp-0x2]
  425ddf:	mov    ecx,DWORD PTR [ebp-0x1c]
  425de2:	mov    edx,DWORD PTR [ebp-0x44]
  425de5:	xor    ecx,ebx
  425de7:	add    ecx,esi
  425de9:	imul   ecx,edx
  425dec:	mov    edx,DWORD PTR [ebp-0x8]
  425def:	mov    BYTE PTR [ecx+edx*1],al
  425df2:	mov    eax,DWORD PTR [ebp-0x30]
  425df5:	mov    ecx,DWORD PTR [ebp-0x34]
  425df8:	xor    eax,ebx
  425dfa:	xor    ecx,ebx
  425dfc:	add    eax,esi
  425dfe:	add    ecx,esi
  425e00:	imul   eax,ecx
  425e03:	add    eax,DWORD PTR [ebp-0x44]
  425e06:	mov    DWORD PTR [ebp-0x44],eax
  425e09:	mov    eax,DWORD PTR [ebp-0x44]
  425e0c:	mov    ecx,DWORD PTR [ebp-0x14]
  425e0f:	cmp    ecx,eax
  425e11:	jb     0x425d15
  425e17:	mov    eax,DWORD PTR [ebp-0x34]
  425e1a:	mov    ecx,DWORD PTR [ebp-0x14]
  425e1d:	xor    eax,ebx
  425e1f:	add    eax,esi
  425e21:	imul   eax,ecx
  425e24:	mov    ecx,DWORD PTR [ebp-0x20]
  425e27:	xor    ecx,ebx
  425e29:	add    ecx,esi
  425e2b:	or     eax,ecx
  425e2d:	mov    ecx,DWORD PTR [ebp-0x2c]
  425e30:	xor    ecx,ebx
  425e32:	add    eax,ecx
  425e34:	mov    ecx,DWORD PTR [ebp-0x2c]
  425e37:	xor    ecx,ebx
  425e39:	add    eax,ecx
  425e3b:	mov    ecx,DWORD PTR [ebp-0xc]
  425e3e:	lea    eax,[eax+ecx*1+0x64e5de]
  425e45:	jmp    0x425e56
  425e47:	mov    eax,DWORD PTR [ebp-0x2c]
  425e4a:	mov    ecx,DWORD PTR [ebp-0xc]
  425e4d:	xor    eax,ebx
  425e4f:	lea    eax,[eax+ecx*1+0x3272ef]
  425e56:	mov    DWORD PTR [ebp-0xc],eax
  425e59:	mov    eax,DWORD PTR [ebp-0x2c]
  425e5c:	xor    eax,ebx
  425e5e:	mov    ecx,0xffcd8d11
  425e63:	sub    ecx,eax
  425e65:	add    ecx,DWORD PTR [ebp-0x28]
  425e68:	mov    eax,DWORD PTR [ebp-0x2c]
  425e6b:	mov    edx,DWORD PTR [ebp-0xc]
  425e6e:	xor    eax,ebx
  425e70:	add    eax,esi
  425e72:	imul   eax,edx
  425e75:	cmp    eax,ecx
  425e77:	jbe    0x425c89
  425e7d:	mov    eax,DWORD PTR [ebp-0x10]
  425e80:	mov    ecx,DWORD PTR [ebp-0x40]
  425e83:	mov    eax,DWORD PTR [ebp+0x8]
  425e86:	mov    edx,DWORD PTR [ebp-0x54]
  425e89:	mov    eax,DWORD PTR [eax+0x1e0]
  425e8f:	xor    edx,ebx
  425e91:	add    edx,esi
  425e93:	push   edx
  425e94:	mov    edx,DWORD PTR [ebp-0x3c]
  425e97:	xor    edx,ebx
  425e99:	add    edx,esi
  425e9b:	push   edx
  425e9c:	push   ecx
  425e9d:	mov    DWORD PTR [ebp-0x30],ecx
  425ea0:	mov    ecx,DWORD PTR [ebp-0x10]
  425ea3:	xor    ecx,ebx
  425ea5:	add    ecx,esi
  425ea7:	push   ecx
  425ea8:	call   DWORD PTR [eax+0x14]
  425eab:	mov    edi,eax
  425ead:	mov    eax,DWORD PTR [ebp-0x10]
  425eb0:	xor    eax,ebx
  425eb2:	add    eax,esi
  425eb4:	cmp    eax,edi
  425eb6:	je     0x425f11
  425eb8:	mov    eax,DWORD PTR [ebp-0x10]
  425ebb:	jmp    0x425ede
  425ebd:	mov    ecx,DWORD PTR [ebp-0x24]
  425ec0:	xor    eax,ebx
  425ec2:	mov    cl,BYTE PTR [ecx+eax*1+0x3272ef]
  425ec9:	mov    BYTE PTR [eax+edi*1+0x3272ef],cl
  425ed0:	mov    ecx,DWORD PTR [ebp-0x18]
  425ed3:	xor    ecx,ebx
  425ed5:	lea    eax,[ecx+eax*1+0x3272ef]
  425edc:	xor    eax,ebx
  425ede:	mov    ecx,DWORD PTR [ebp-0x40]
  425ee1:	sub    ecx,esi
  425ee3:	xor    ecx,ebx
  425ee5:	cmp    eax,ecx
  425ee7:	jne    0x425ebd
  425ee9:	mov    eax,DWORD PTR [ebp+0x8]
  425eec:	mov    ecx,DWORD PTR [ebp-0x50]
  425eef:	mov    eax,DWORD PTR [eax+0x1e0]
  425ef5:	xor    ecx,ebx
  425ef7:	add    ecx,esi
  425ef9:	push   ecx
  425efa:	mov    ecx,DWORD PTR [ebp-0x10]
  425efd:	xor    ecx,ebx
  425eff:	add    ecx,esi
  425f01:	push   ecx
  425f02:	push   DWORD PTR [ebp-0x24]
  425f05:	call   DWORD PTR [eax+0x18]
  425f08:	mov    eax,DWORD PTR [ebp-0x30]
  425f0b:	mov    DWORD PTR [ebp-0x24],edi
  425f0e:	mov    DWORD PTR [ebp-0x40],eax
  425f11:	mov    edi,DWORD PTR [ebp-0x24]
  425f14:	mov    eax,DWORD PTR [ebp-0x18]
  425f17:	mov    ecx,DWORD PTR [ebp-0x10]
  425f1a:	xor    eax,ebx
  425f1c:	mov    DWORD PTR [ebp-0x30],edi
  425f1f:	add    eax,esi
  425f21:	mov    DWORD PTR [ebp-0x5c],0x39222a22
  425f28:	mov    DWORD PTR [ebp-0x58],0x37223f22
  425f2f:	jmp    0x425f62
  425f31:	xor    ecx,ebx
  425f33:	mov    dl,BYTE PTR [ebp+ecx*1+0x327293]
  425f3a:	xor    dl,0x7b
  425f3d:	dec    dl
  425f3f:	mov    DWORD PTR [ebp-0x3c],ecx
  425f42:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272ef]
  425f4a:	movzx  edx,dl
  425f4d:	cmp    ecx,edx
  425f4f:	jne    0x425f6c
  425f51:	mov    ecx,DWORD PTR [ebp-0x18]
  425f54:	mov    edx,DWORD PTR [ebp-0x3c]
  425f57:	xor    ecx,ebx
  425f59:	lea    ecx,[ecx+edx*1+0x3272ef]
  425f60:	xor    ecx,ebx
  425f62:	cmp    ecx,0xf89c85b1
  425f68:	jne    0x425f31
  425f6a:	jmp    0x425f73
  425f6c:	mov    eax,DWORD PTR [ebp-0x10]
  425f6f:	xor    eax,ebx
  425f71:	add    eax,esi
  425f73:	mov    ecx,DWORD PTR [ebp-0x10]
  425f76:	xor    ecx,ebx
  425f78:	add    ecx,esi
  425f7a:	cmp    ecx,eax
  425f7c:	je     0x4260ef
  425f82:	mov    eax,DWORD PTR [edi+0x8]
  425f85:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  425f8c:	mov    DWORD PTR [ebp-0x3c],0xf89cc328
  425f93:	mov    DWORD PTR [ebp-0x48],0xf89cb5b9
  425f9a:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  425fa1:	mov    DWORD PTR [ebp-0x14],eax
  425fa4:	mov    eax,DWORD PTR [ebp+0x8]
  425fa7:	mov    ecx,DWORD PTR [ebp-0x20]
  425faa:	xor    ecx,ebx
  425fac:	add    ecx,esi
  425fae:	push   ecx
  425faf:	mov    ecx,DWORD PTR [ebp-0x48]
  425fb2:	mov    eax,DWORD PTR [eax+0x1e0]
  425fb8:	xor    ecx,ebx
  425fba:	add    ecx,esi
  425fbc:	push   ecx
  425fbd:	mov    ecx,DWORD PTR [ebp-0x3c]
  425fc0:	xor    ecx,ebx
  425fc2:	add    ecx,esi
  425fc4:	push   ecx
  425fc5:	mov    ecx,DWORD PTR [ebp-0xc]
  425fc8:	xor    ecx,ebx
  425fca:	add    ecx,esi
  425fcc:	push   ecx
  425fcd:	call   DWORD PTR [eax+0x14]
  425fd0:	mov    edi,eax
  425fd2:	mov    eax,DWORD PTR [ebp+0x8]
  425fd5:	mov    ecx,DWORD PTR [ebp-0x20]
  425fd8:	mov    eax,DWORD PTR [eax+0x1e0]
  425fde:	xor    ecx,ebx
  425fe0:	add    ecx,esi
  425fe2:	push   ecx
  425fe3:	mov    ecx,DWORD PTR [ebp-0x48]
  425fe6:	xor    ecx,ebx
  425fe8:	add    ecx,esi
  425fea:	push   ecx
  425feb:	mov    ecx,DWORD PTR [ebp-0xc]
  425fee:	push   DWORD PTR [ebp-0x14]
  425ff1:	xor    ecx,ebx
  425ff3:	add    ecx,esi
  425ff5:	push   ecx
  425ff6:	call   DWORD PTR [eax+0x14]
  425ff9:	mov    ecx,DWORD PTR [ebp-0xc]
  425ffc:	xor    ecx,ebx
  425ffe:	add    ecx,esi
  426000:	mov    DWORD PTR [ebp-0x20],eax
  426003:	cmp    ecx,edi
  426005:	je     0x426392
  42600b:	mov    ecx,DWORD PTR [ebp-0xc]
  42600e:	xor    ecx,ebx
  426010:	add    ecx,esi
  426012:	cmp    ecx,eax
  426014:	je     0x426392
  42601a:	mov    DWORD PTR [ebp-0x3c],0xf89c85bc
  426021:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  426028:	mov    ecx,DWORD PTR [ebp-0x3c]
  42602b:	xor    cl,0xa8
  42602e:	sub    cl,0x11
  426031:	mov    BYTE PTR [edi],cl
  426033:	mov    ecx,DWORD PTR [ebp-0xc]
  426036:	xor    cl,0xa8
  426039:	sub    cl,0x11
  42603c:	mov    BYTE PTR [edi+0x1],cl
  42603f:	mov    ecx,DWORD PTR [ebp-0x54]
  426042:	xor    cl,0xa8
  426045:	sub    cl,0x11
  426048:	mov    BYTE PTR [edi+0x2],cl
  42604b:	and    DWORD PTR [ebp-0xc8],0x0
  426052:	and    DWORD PTR [ebp-0xdc],0x0
  426059:	lea    ecx,[ebp-0xdc]
  42605f:	push   ecx
  426060:	push   DWORD PTR [ebp-0x14]
  426063:	push   eax
  426064:	lea    eax,[ebp-0xc8]
  42606a:	push   eax
  42606b:	mov    eax,DWORD PTR [ebp-0x30]
  42606e:	push   DWORD PTR [eax+0xc]
  426071:	mov    eax,DWORD PTR [ebp-0x24]
  426074:	add    eax,0x10
  426077:	push   eax
  426078:	push   edi
  426079:	call   0x425320
  42607e:	mov    DWORD PTR [ebp-0x3c],eax
  426081:	mov    eax,DWORD PTR [ebp+0x8]
  426084:	mov    ecx,DWORD PTR [ebp-0x50]
  426087:	mov    eax,DWORD PTR [eax+0x1e0]
  42608d:	xor    ecx,ebx
  42608f:	add    ecx,esi
  426091:	push   ecx
  426092:	mov    ecx,DWORD PTR [ebp-0xc]
  426095:	xor    ecx,ebx
  426097:	add    ecx,esi
  426099:	push   ecx
  42609a:	push   edi
  42609b:	call   DWORD PTR [eax+0x18]
  42609e:	mov    eax,DWORD PTR [ebp-0x3c]
  4260a1:	add    eax,0xffcd8d11
  4260a6:	xor    eax,ebx
  4260a8:	cmp    eax,0xf89c85b9
  4260ad:	mov    eax,DWORD PTR [ebp+0x8]
  4260b0:	mov    eax,DWORD PTR [eax+0x1e0]
  4260b6:	mov    ecx,DWORD PTR [ebp-0x50]
  4260b9:	jne    0x4260dc
  4260bb:	xor    ecx,ebx
  4260bd:	add    ecx,esi
  4260bf:	push   ecx
  4260c0:	mov    ecx,DWORD PTR [ebp-0xc]
  4260c3:	xor    ecx,ebx
  4260c5:	add    ecx,esi
  4260c7:	push   ecx
  4260c8:	push   DWORD PTR [ebp-0x24]
  4260cb:	call   DWORD PTR [eax+0x18]
  4260ce:	mov    eax,DWORD PTR [ebp-0x20]
  4260d1:	mov    DWORD PTR [ebp-0x24],eax
  4260d4:	mov    eax,DWORD PTR [ebp-0x14]
  4260d7:	mov    DWORD PTR [ebp-0x40],eax
  4260da:	jmp    0x4260ef
  4260dc:	xor    ecx,ebx
  4260de:	add    ecx,esi
  4260e0:	push   ecx
  4260e1:	mov    ecx,DWORD PTR [ebp-0xc]
  4260e4:	xor    ecx,ebx
  4260e6:	add    ecx,esi
  4260e8:	push   ecx
  4260e9:	push   DWORD PTR [ebp-0x20]
  4260ec:	call   DWORD PTR [eax+0x18]
  4260ef:	mov    eax,DWORD PTR [ebp-0x40]
  4260f2:	mov    DWORD PTR [ebp-0x38],eax
  4260f5:	mov    eax,DWORD PTR [ebp-0x24]
  4260f8:	mov    DWORD PTR [ebp-0x28],0xf89c85b9
  4260ff:	mov    DWORD PTR [ebp-0x3c],eax
  426102:	mov    edi,0xf89c85ba
  426107:	mov    DWORD PTR [ebp-0x2c],edi
  42610a:	mov    eax,DWORD PTR [ebp-0x28]
  42610d:	xor    eax,ebx
  42610f:	add    eax,esi
  426111:	mov    DWORD PTR [ebp-0xc],eax
  426114:	mov    eax,DWORD PTR [ebp-0x28]
  426117:	xor    eax,ebx
  426119:	add    eax,esi
  42611b:	mov    DWORD PTR [ebp-0x14],eax
  42611e:	mov    DWORD PTR [ebp-0x48],0xf89c8599
  426125:	mov    DWORD PTR [ebp-0x20],0xf89c85b0
  42612c:	mov    eax,DWORD PTR [ebp-0x28]
  42612f:	mov    ecx,DWORD PTR [ebp-0x38]
  426132:	xor    eax,ebx
  426134:	add    eax,esi
  426136:	cmp    ecx,eax
  426138:	je     0x42632e
  42613e:	jmp    0x42630a
  426143:	mov    ecx,DWORD PTR [ebp-0xc]
  426146:	mov    eax,DWORD PTR [ebp-0x38]
  426149:	sub    eax,ecx
  42614b:	mov    ecx,DWORD PTR [ebp-0x48]
  42614e:	xor    ecx,ebx
  426150:	add    ecx,esi
  426152:	xor    edx,edx
  426154:	div    ecx
  426156:	mov    DWORD PTR [ebp-0x14],eax
  426159:	mov    eax,DWORD PTR [ebp-0x20]
  42615c:	mov    ecx,DWORD PTR [ebp-0x14]
  42615f:	xor    eax,ebx
  426161:	add    eax,esi
  426163:	cmp    ecx,eax
  426165:	jbe    0x426171
  426167:	mov    eax,DWORD PTR [ebp-0x20]
  42616a:	xor    eax,ebx
  42616c:	add    eax,esi
  42616e:	mov    DWORD PTR [ebp-0x14],eax
  426171:	mov    eax,DWORD PTR [ebp-0x48]
  426174:	mov    ecx,DWORD PTR [ebp-0x14]
  426177:	xor    eax,ebx
  426179:	add    eax,esi
  42617b:	imul   eax,ecx
  42617e:	mov    DWORD PTR [ebp-0x14],eax
  426181:	mov    eax,DWORD PTR [ebp-0x28]
  426184:	mov    ecx,DWORD PTR [ebp-0x14]
  426187:	xor    eax,ebx
  426189:	add    eax,esi
  42618b:	cmp    ecx,eax
  42618d:	je     0x4262f8
  426193:	mov    eax,DWORD PTR [ebp-0x14]
  426196:	mov    DWORD PTR [ebp-0x34],eax
  426199:	mov    eax,DWORD PTR [ebp-0xc]
  42619c:	add    eax,DWORD PTR [ebp-0x3c]
  42619f:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  4261a6:	mov    DWORD PTR [ebp-0x14],edi
  4261a9:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  4261b0:	mov    DWORD PTR [ebp-0x1c],eax
  4261b3:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  4261ba:	mov    DWORD PTR [ebp-0x8],edi
  4261bd:	mov    eax,DWORD PTR [ebp-0x4c]
  4261c0:	xor    eax,ebx
  4261c2:	add    eax,esi
  4261c4:	jmp    0x4262b7
  4261c9:	mov    DWORD PTR [ebp-0xe4],0xf89c85b4
  4261d3:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  4261dd:	mov    eax,DWORD PTR [ebp-0x8]
  4261e0:	mov    ecx,DWORD PTR [ebp-0x18]
  4261e3:	xor    eax,ebx
  4261e5:	add    eax,esi
  4261e7:	imul   eax,ecx
  4261ea:	mov    ecx,DWORD PTR [ebp-0x1c]
  4261ed:	mov    al,BYTE PTR [eax+ecx*1]
  4261f0:	mov    BYTE PTR [ebp-0x1],al
  4261f3:	mov    eax,DWORD PTR [ebp-0x8]
  4261f6:	mov    ecx,DWORD PTR [ebp-0x18]
  4261f9:	xor    eax,ebx
  4261fb:	add    eax,esi
  4261fd:	imul   eax,ecx
  426200:	mov    ecx,DWORD PTR [ebp-0x54]
  426203:	xor    ecx,ebx
  426205:	add    eax,ecx
  426207:	mov    ecx,DWORD PTR [ebp-0x1c]
  42620a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ef]
  426212:	mov    ecx,DWORD PTR [ebp-0xe4]
  426218:	xor    ecx,ebx
  42621a:	lea    eax,[ecx+eax*1+0x3272ef]
  426221:	movzx  ecx,BYTE PTR [ebp-0x1]
  426225:	xor    ecx,eax
  426227:	mov    BYTE PTR [ebp-0x1],cl
  42622a:	mov    al,BYTE PTR [ebp-0x1]
  42622d:	mov    ecx,DWORD PTR [ebp-0x8]
  426230:	mov    edx,DWORD PTR [ebp-0x18]
  426233:	xor    ecx,ebx
  426235:	add    ecx,esi
  426237:	imul   ecx,edx
  42623a:	mov    edx,DWORD PTR [ebp-0x1c]
  42623d:	mov    BYTE PTR [ecx+edx*1],al
  426240:	mov    eax,DWORD PTR [ebp-0x8]
  426243:	mov    ecx,DWORD PTR [ebp-0x18]
  426246:	xor    eax,ebx
  426248:	add    eax,esi
  42624a:	imul   eax,ecx
  42624d:	mov    ecx,DWORD PTR [ebp-0x1c]
  426250:	mov    al,BYTE PTR [eax+ecx*1]
  426253:	mov    BYTE PTR [ebp-0x1],al
  426256:	mov    eax,DWORD PTR [ebp-0x8]
  426259:	mov    ecx,DWORD PTR [ebp-0x18]
  42625c:	xor    eax,ebx
  42625e:	add    eax,esi
  426260:	imul   eax,ecx
  426263:	mov    ecx,DWORD PTR [ebp-0x14]
  426266:	xor    ecx,ebx
  426268:	add    eax,ecx
  42626a:	mov    ecx,DWORD PTR [ebp-0x1c]
  42626d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ef]
  426275:	mov    ecx,DWORD PTR [ebp-0xd0]
  42627b:	xor    ecx,ebx
  42627d:	lea    eax,[ecx+eax*1+0x3272ef]
  426284:	movzx  ecx,BYTE PTR [ebp-0x1]
  426288:	xor    ecx,eax
  42628a:	mov    BYTE PTR [ebp-0x1],cl
  42628d:	mov    al,BYTE PTR [ebp-0x1]
  426290:	mov    ecx,DWORD PTR [ebp-0x8]
  426293:	mov    edx,DWORD PTR [ebp-0x18]
  426296:	xor    ecx,ebx
  426298:	add    ecx,esi
  42629a:	imul   ecx,edx
  42629d:	mov    edx,DWORD PTR [ebp-0x1c]
  4262a0:	mov    BYTE PTR [ecx+edx*1],al
  4262a3:	mov    eax,DWORD PTR [ebp-0x30]
  4262a6:	mov    ecx,DWORD PTR [ebp-0x14]
  4262a9:	xor    eax,ebx
  4262ab:	xor    ecx,ebx
  4262ad:	add    eax,esi
  4262af:	add    ecx,esi
  4262b1:	imul   eax,ecx
  4262b4:	add    eax,DWORD PTR [ebp-0x18]
  4262b7:	mov    DWORD PTR [ebp-0x18],eax
  4262ba:	mov    eax,DWORD PTR [ebp-0x18]
  4262bd:	mov    ecx,DWORD PTR [ebp-0x34]
  4262c0:	cmp    ecx,eax
  4262c2:	jb     0x4261c9
  4262c8:	mov    eax,DWORD PTR [ebp-0x14]
  4262cb:	mov    ecx,DWORD PTR [ebp-0x34]
  4262ce:	xor    eax,ebx
  4262d0:	add    eax,esi
  4262d2:	imul   eax,ecx
  4262d5:	mov    ecx,DWORD PTR [ebp-0x4c]
  4262d8:	xor    ecx,ebx
  4262da:	add    ecx,esi
  4262dc:	or     eax,ecx
  4262de:	mov    ecx,DWORD PTR [ebp-0x2c]
  4262e1:	xor    ecx,ebx
  4262e3:	add    eax,ecx
  4262e5:	mov    ecx,DWORD PTR [ebp-0x2c]
  4262e8:	xor    ecx,ebx
  4262ea:	add    eax,ecx
  4262ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4262ef:	lea    eax,[eax+ecx*1+0x64e5de]
  4262f6:	jmp    0x426307
  4262f8:	mov    eax,DWORD PTR [ebp-0x2c]
  4262fb:	mov    ecx,DWORD PTR [ebp-0xc]
  4262fe:	xor    eax,ebx
  426300:	lea    eax,[eax+ecx*1+0x3272ef]
  426307:	mov    DWORD PTR [ebp-0xc],eax
  42630a:	mov    eax,DWORD PTR [ebp-0x2c]
  42630d:	xor    eax,ebx
  42630f:	mov    ecx,0xffcd8d11
  426314:	sub    ecx,eax
  426316:	add    ecx,DWORD PTR [ebp-0x38]
  426319:	mov    eax,DWORD PTR [ebp-0x2c]
  42631c:	mov    edx,DWORD PTR [ebp-0xc]
  42631f:	xor    eax,ebx
  426321:	add    eax,esi
  426323:	imul   eax,edx
  426326:	cmp    eax,ecx
  426328:	jbe    0x426143
  42632e:	push   DWORD PTR [ebp+0x8]
  426331:	mov    eax,DWORD PTR [ebp+0x8]
  426334:	push   DWORD PTR [eax+0x1cc]
  42633a:	lea    eax,[ebp-0xd8]
  426340:	push   eax
  426341:	mov    eax,DWORD PTR [ebp+0x8]
  426344:	mov    eax,DWORD PTR [eax+0x1c4]
  42634a:	push   DWORD PTR [eax]
  42634c:	mov    eax,DWORD PTR [ebp+0x8]
  42634f:	mov    eax,DWORD PTR [eax+0x1c0]
  426355:	push   DWORD PTR [eax]
  426357:	push   DWORD PTR [ebp-0x40]
  42635a:	push   DWORD PTR [ebp-0x24]
  42635d:	call   0x426df4
  426362:	mov    DWORD PTR [ebp-0x3c],eax
  426365:	mov    eax,DWORD PTR [ebp-0x10]
  426368:	mov    ecx,DWORD PTR [ebp-0x24]
  42636b:	xor    eax,ebx
  42636d:	add    eax,esi
  42636f:	cmp    eax,ecx
  426371:	je     0x426392
  426373:	mov    eax,DWORD PTR [ebp+0x8]
  426376:	mov    ecx,DWORD PTR [ebp-0x50]
  426379:	mov    eax,DWORD PTR [eax+0x1e0]
  42637f:	xor    ecx,ebx
  426381:	add    ecx,esi
  426383:	push   ecx
  426384:	mov    ecx,DWORD PTR [ebp-0x10]
  426387:	xor    ecx,ebx
  426389:	add    ecx,esi
  42638b:	push   ecx
  42638c:	push   DWORD PTR [ebp-0x24]
  42638f:	call   DWORD PTR [eax+0x18]
  426392:	pop    edi
  426393:	pop    esi
  426394:	pop    ebx
  426395:	leave  
  426396:	ret    0x4
  426399:	push   ebp
  42639a:	mov    ebp,esp
  42639c:	push   ecx
  42639d:	push   ecx
  42639e:	lea    eax,[ebp-0x8]
  4263a1:	mov    DWORD PTR [ebp-0x4],eax
  4263a4:	push   esi
  4263a5:	mov    esi,DWORD PTR [ebp-0x4]
  4263a8:	mov    eax,0xf881ba2f
  4263ad:	mov    DWORD PTR [esi],eax
  4263af:	mov    esi,DWORD PTR [ebp-0x8]
  4263b2:	cmp    esi,eax
  4263b4:	pop    esi
  4263b5:	jne    0x4263bf
  4263b7:	mov    BYTE PTR [ecx+0xa],0x7a
  4263bb:	mov    BYTE PTR [edx+0x8],0x2f
  4263bf:	mov    BYTE PTR [edx+0xa],0x7a
  4263c3:	mov    BYTE PTR [ecx+0x2],0x14
  4263c7:	leave  
  4263c8:	ret    
  4263c9:	push   ebp
  4263ca:	mov    ebp,esp
  4263cc:	push   ecx
  4263cd:	push   ecx
  4263ce:	lea    eax,[ebp-0x8]
  4263d1:	mov    DWORD PTR [ebp-0x4],eax
  4263d4:	mov    edx,DWORD PTR [ebp-0x4]
  4263d7:	mov    eax,0xf88b0bc3
  4263dc:	mov    DWORD PTR [edx],eax
  4263de:	mov    edx,DWORD PTR [ebp-0x8]
  4263e1:	cmp    edx,eax
  4263e3:	jne    0x4263f4
  4263e5:	mov    eax,DWORD PTR [ebp+0x8]
  4263e8:	mov    BYTE PTR [ecx+0x9],0xe
  4263ec:	mov    BYTE PTR [eax+0x7],0x57
  4263f0:	mov    BYTE PTR [ecx+0x6],0xf
  4263f4:	mov    BYTE PTR [ecx+0x3],0x1e
  4263f8:	leave  
  4263f9:	ret    0x4
  4263fc:	push   ebp
  4263fd:	mov    ebp,esp
  4263ff:	push   ecx
  426400:	push   ecx
  426401:	lea    eax,[ebp-0x8]
  426404:	mov    DWORD PTR [ebp-0x4],eax
  426407:	mov    edx,DWORD PTR [ebp-0x4]
  42640a:	mov    eax,0x7e0da2f
  42640f:	mov    DWORD PTR [edx],eax
  426411:	mov    edx,DWORD PTR [ebp-0x8]
  426414:	cmp    edx,eax
  426416:	jne    0x42641c
  426418:	mov    BYTE PTR [ecx+0x7],0x57
  42641c:	mov    eax,DWORD PTR [ebp+0x8]
  42641f:	mov    BYTE PTR [ecx+0x1],0x11
  426423:	mov    BYTE PTR [eax+0x9],0x2e
  426427:	leave  
  426428:	ret    0x4
  42642b:	push   ebp
  42642c:	mov    ebp,esp
  42642e:	push   ecx
  42642f:	push   ecx
  426430:	lea    eax,[ebp-0x8]
  426433:	mov    DWORD PTR [ebp-0x4],eax
  426436:	push   esi
  426437:	mov    esi,DWORD PTR [ebp-0x4]
  42643a:	mov    eax,0x7060e30
  42643f:	mov    DWORD PTR [esi],eax
  426441:	mov    esi,DWORD PTR [ebp-0x8]
  426444:	cmp    esi,eax
  426446:	pop    esi
  426447:	jne    0x426453
  426449:	mov    BYTE PTR [edx+0x4],0xb
  42644d:	mov    WORD PTR [ecx+0x3],0xb1e
  426453:	mov    BYTE PTR [edx],0x3f
  426456:	leave  
  426457:	ret    
  426458:	push   ebp
  426459:	mov    ebp,esp
  42645b:	push   ecx
  42645c:	push   ecx
  42645d:	lea    eax,[ebp-0x8]
  426460:	mov    DWORD PTR [ebp-0x4],eax
  426463:	mov    edx,DWORD PTR [ebp-0x4]
  426466:	mov    eax,0xf8870b3f
  42646b:	mov    DWORD PTR [edx],eax
  42646d:	mov    edx,DWORD PTR [ebp-0x8]
  426470:	cmp    edx,eax
  426472:	jne    0x42647f
  426474:	mov    eax,DWORD PTR [ebp+0x8]
  426477:	mov    BYTE PTR [ecx+0x8],0xf
  42647b:	mov    BYTE PTR [eax+0x1],0x11
  42647f:	mov    BYTE PTR [ecx+0x5],0x3
  426483:	leave  
  426484:	ret    0x4
  426487:	push   esi
  426488:	mov    ecx,edi
  42648a:	call   0x426458
  42648f:	mov    edx,edi
  426491:	mov    ecx,esi
  426493:	mov    BYTE PTR [esi],0x1f
  426496:	call   0x42642b
  42649b:	push   esi
  42649c:	mov    ecx,edi
  42649e:	mov    BYTE PTR [esi+0x5],0x3
  4264a2:	call   0x4263fc
  4264a7:	push   esi
  4264a8:	mov    BYTE PTR [esi+0x6],0xf
  4264ac:	call   0x4263c9
  4264b1:	mov    BYTE PTR [esi+0x2],0x14
  4264b5:	mov    edx,esi
  4264b7:	jmp    0x426399
  4264bc:	push   ebp
  4264bd:	mov    ebp,esp
  4264bf:	push   ecx
  4264c0:	mov    ecx,DWORD PTR [edx+0x194]
  4264c6:	push   esi
  4264c7:	mov    esi,DWORD PTR [ebp+0x8]
  4264ca:	mov    esi,DWORD PTR [esi]
  4264cc:	mov    DWORD PTR [ecx],esi
  4264ce:	mov    ecx,DWORD PTR [edx+0x194]
  4264d4:	mov    ecx,DWORD PTR [ecx]
  4264d6:	mov    esi,DWORD PTR [edx+0x190]
  4264dc:	mov    DWORD PTR [esi],ecx
  4264de:	mov    eax,DWORD PTR [edx+0x194]
  4264e4:	mov    ecx,DWORD PTR [eax]
  4264e6:	mov    ecx,DWORD PTR [ecx+0x3c]
  4264e9:	add    ecx,DWORD PTR [eax]
  4264eb:	mov    DWORD PTR [ebp-0x4],0xf89ca5b9
  4264f2:	mov    eax,DWORD PTR [ebp-0x4]
  4264f5:	movzx  ecx,WORD PTR [ecx+0x16]
  4264f9:	xor    eax,0x75108a8
  4264fe:	add    eax,0x3272ef
  426503:	pop    esi
  426504:	test   ecx,eax
  426506:	je     0x426514
  426508:	mov    eax,DWORD PTR [edx+0x1c8]
  42650e:	mov    DWORD PTR [eax],0xf89c85ba
  426514:	leave  
  426515:	ret    0x4
  426518:	push   ebp
  426519:	mov    ebp,esp
  42651b:	sub    esp,0x70
  42651e:	and    DWORD PTR [ebp-0x20],0x0
  426522:	mov    DWORD PTR [ebp-0x18],0xf89cb5b9
  426529:	mov    DWORD PTR [ebp-0x1c],0xf89c85f9
  426530:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  426537:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  42653e:	mov    DWORD PTR [ebp-0x2c],0xf89f05b9
  426545:	mov    eax,DWORD PTR [ebp+0x20]
  426548:	mov    eax,DWORD PTR [eax+0x194]
  42654e:	mov    DWORD PTR [ebp-0xc],eax
  426551:	mov    eax,DWORD PTR [ebp+0x20]
  426554:	push   ebx
  426555:	push   esi
  426556:	mov    esi,DWORD PTR [eax+0x190]
  42655c:	mov    eax,DWORD PTR [ebp+0x20]
  42655f:	mov    eax,DWORD PTR [eax+0x18c]
  426565:	mov    DWORD PTR [ebp-0x8],eax
  426568:	mov    eax,DWORD PTR [eax]
  42656a:	push   edi
  42656b:	mov    DWORD PTR [ebp-0x4],esi
  42656e:	test   eax,eax
  426570:	jne    0x42657d
  426572:	push   DWORD PTR [ebp+0x1c]
  426575:	mov    edx,DWORD PTR [ebp+0x20]
  426578:	call   0x4264bc
  42657d:	mov    eax,DWORD PTR [esi]
  42657f:	mov    ebx,DWORD PTR [esi]
  426581:	add    ebx,DWORD PTR [eax+0x3c]
  426584:	mov    eax,DWORD PTR [ebp+0xc]
  426587:	mov    ecx,DWORD PTR [ebp-0x8]
  42658a:	mov    ecx,DWORD PTR [ecx]
  42658c:	mov    esi,0x75108a8
  426591:	xor    eax,esi
  426593:	mov    edi,0x3272ef
  426598:	add    eax,edi
  42659a:	cmp    eax,ecx
  42659c:	jne    0x4267d4
  4265a2:	mov    eax,DWORD PTR [ebp-0xc]
  4265a5:	mov    eax,DWORD PTR [eax]
  4265a7:	mov    DWORD PTR [ebp-0x10],eax
  4265aa:	mov    eax,DWORD PTR [ebx+0x50]
  4265ad:	mov    DWORD PTR [ebp-0x68],eax
  4265b0:	mov    eax,DWORD PTR [ebp-0x18]
  4265b3:	xor    eax,esi
  4265b5:	add    eax,edi
  4265b7:	mov    DWORD PTR [ebp-0x64],eax
  4265ba:	mov    eax,DWORD PTR [ebp-0x14]
  4265bd:	and    DWORD PTR [ebp-0x6c],0x0
  4265c1:	xor    eax,esi
  4265c3:	add    eax,edi
  4265c5:	mov    DWORD PTR [ebp-0x60],eax
  4265c8:	lea    eax,[ebp-0x70]
  4265cb:	push   eax
  4265cc:	mov    eax,DWORD PTR [ebp+0x8]
  4265cf:	xor    eax,esi
  4265d1:	add    eax,edi
  4265d3:	push   eax
  4265d4:	mov    eax,DWORD PTR [ebp+0x20]
  4265d7:	add    eax,0xaa
  4265dc:	push   eax
  4265dd:	mov    eax,DWORD PTR [ebp+0x20]
  4265e0:	mov    eax,DWORD PTR [eax+0x198]
  4265e6:	mov    DWORD PTR [ebp-0x70],0x4
  4265ed:	push   DWORD PTR [eax]
  4265ef:	mov    eax,DWORD PTR [ebp+0x10]
  4265f2:	call   eax
  4265f4:	mov    ecx,DWORD PTR [ebp-0xc]
  4265f7:	mov    ecx,DWORD PTR [ecx]
  4265f9:	mov    edx,DWORD PTR [ebp-0x8]
  4265fc:	mov    DWORD PTR [ebp-0x6c],eax
  4265ff:	mov    DWORD PTR [ebp+0x1c],eax
  426602:	mov    DWORD PTR [edx],ecx
  426604:	mov    ecx,DWORD PTR [ebp-0x4]
  426607:	mov    DWORD PTR [ecx],eax
  426609:	mov    eax,DWORD PTR [ebx+0x50]
  42660c:	mov    DWORD PTR [ebp-0x68],eax
  42660f:	mov    eax,DWORD PTR [ebp-0x1c]
  426612:	xor    eax,esi
  426614:	add    eax,edi
  426616:	mov    DWORD PTR [ebp-0x64],eax
  426619:	lea    eax,[ebp-0x20]
  42661c:	mov    DWORD PTR [ebp-0x60],eax
  42661f:	lea    eax,[ebp-0x70]
  426622:	push   eax
  426623:	mov    eax,DWORD PTR [ebp+0x8]
  426626:	xor    eax,esi
  426628:	add    eax,edi
  42662a:	push   eax
  42662b:	mov    eax,DWORD PTR [ebp+0x20]
  42662e:	add    eax,0xee
  426633:	push   eax
  426634:	mov    eax,DWORD PTR [ebp+0x20]
  426637:	mov    eax,DWORD PTR [eax+0x198]
  42663d:	mov    DWORD PTR [ebp-0x70],0x4
  426644:	push   DWORD PTR [eax]
  426646:	mov    eax,DWORD PTR [ebp+0x10]
  426649:	call   eax
  42664b:	test   eax,eax
  42664d:	je     0x426672
  42664f:	and    DWORD PTR [ebp+0xc],0x0
  426653:	cmp    DWORD PTR [ebx+0x50],0x0
  426657:	jbe    0x426672
  426659:	mov    eax,DWORD PTR [ebp+0x1c]
  42665c:	mov    ecx,DWORD PTR [ebp-0x10]
  42665f:	sub    ecx,eax
  426661:	mov    dl,BYTE PTR [ecx+eax*1]
  426664:	inc    DWORD PTR [ebp+0xc]
  426667:	mov    BYTE PTR [eax],dl
  426669:	mov    edx,DWORD PTR [ebp+0xc]
  42666c:	inc    eax
  42666d:	cmp    edx,DWORD PTR [ebx+0x50]
  426670:	jb     0x426661
  426672:	mov    edx,DWORD PTR [ebp+0x1c]
  426675:	mov    ecx,DWORD PTR [edx+0x3c]
  426678:	add    ecx,edx
  42667a:	mov    eax,DWORD PTR [ecx+0xa0]
  426680:	mov    ebx,DWORD PTR [ecx+0x28]
  426683:	add    eax,edx
  426685:	sub    edx,DWORD PTR [ebp-0x10]
  426688:	add    ebx,DWORD PTR [ebp+0x1c]
  42668b:	mov    DWORD PTR [ebp+0xc],edx
  42668e:	mov    DWORD PTR [ebp-0x2c],ecx
  426691:	mov    DWORD PTR [ebp-0x14],ebx
  426694:	mov    DWORD PTR [ebp-0x8],0x0
  42669b:	jmp    0x426717
  42669d:	add    edx,0xfffffff8
  4266a0:	shr    edx,1
  4266a2:	mov    DWORD PTR [ebp-0x18],edx
  4266a5:	je     0x426703
  4266a7:	lea    edx,[eax+0x8]
  4266aa:	mov    DWORD PTR [ebp-0x4],edx
  4266ad:	mov    edx,DWORD PTR [ebp-0x18]
  4266b0:	mov    DWORD PTR [ebp-0x18],edx
  4266b3:	mov    edx,DWORD PTR [ebp-0x4]
  4266b6:	movzx  edx,WORD PTR [edx]
  4266b9:	mov    DWORD PTR [ebp-0x24],edx
  4266bc:	and    edx,0xfff
  4266c2:	mov    DWORD PTR [ebp-0x28],edx
  4266c5:	mov    edx,DWORD PTR [ebp-0x24]
  4266c8:	shr    edx,0xc
  4266cb:	add    edx,0xffcd8d11
  4266d1:	xor    edx,esi
  4266d3:	cmp    edx,0xf89c85bc
  4266d9:	jne    0x4266fa
  4266db:	mov    edx,DWORD PTR [ebp-0x28]
  4266de:	add    edx,DWORD PTR [ebp+0x1c]
  4266e1:	mov    ebx,DWORD PTR [eax]
  4266e3:	cmp    DWORD PTR [ebx+edx*1],0x0
  4266e7:	je     0x4266f7
  4266e9:	mov    ecx,DWORD PTR [ebp+0xc]
  4266ec:	add    ecx,DWORD PTR [ebx+edx*1]
  4266ef:	mov    ebx,DWORD PTR [eax]
  4266f1:	mov    DWORD PTR [edx+ebx*1],ecx
  4266f4:	mov    ecx,DWORD PTR [ebp-0x2c]
  4266f7:	mov    ebx,DWORD PTR [ebp-0x14]
  4266fa:	add    DWORD PTR [ebp-0x4],0x2
  4266fe:	dec    DWORD PTR [ebp-0x18]
  426701:	jne    0x4266b3
  426703:	mov    edx,DWORD PTR [ebp-0xc]
  426706:	add    DWORD PTR [ebp-0x8],edx
  426709:	mov    edx,DWORD PTR [ebp-0x8]
  42670c:	cmp    edx,DWORD PTR [ecx+0xa4]
  426712:	jae    0x426725
  426714:	add    eax,DWORD PTR [ebp-0xc]
  426717:	mov    edx,DWORD PTR [eax+0x4]
  42671a:	mov    DWORD PTR [ebp-0xc],edx
  42671d:	test   edx,edx
  42671f:	jne    0x42669d
  426725:	mov    eax,DWORD PTR [ebp-0x10]
  426728:	mov    DWORD PTR [ebp-0x6c],eax
  42672b:	mov    DWORD PTR [ebp-0x70],0x4
  426732:	mov    eax,DWORD PTR [ecx+0x50]
  426735:	mov    DWORD PTR [ebp-0x68],eax
  426738:	mov    eax,DWORD PTR [ebp-0x1c]
  42673b:	xor    eax,esi
  42673d:	add    eax,edi
  42673f:	mov    DWORD PTR [ebp-0x64],eax
  426742:	lea    eax,[ebp-0x20]
  426745:	mov    DWORD PTR [ebp-0x60],eax
  426748:	lea    eax,[ebp-0x70]
  42674b:	push   eax
  42674c:	mov    eax,DWORD PTR [ebp+0x8]
  42674f:	xor    eax,esi
  426751:	add    eax,edi
  426753:	push   eax
  426754:	mov    eax,DWORD PTR [ebp+0x20]
  426757:	add    eax,0xee
  42675c:	push   eax
  42675d:	mov    eax,DWORD PTR [ebp+0x20]
  426760:	mov    eax,DWORD PTR [eax+0x198]
  426766:	push   DWORD PTR [eax]
  426768:	mov    eax,DWORD PTR [ebp+0x10]
  42676b:	call   eax
  42676d:	mov    eax,DWORD PTR [ebp+0x20]
  426770:	mov    eax,DWORD PTR [eax+0x180]
  426776:	add    eax,DWORD PTR [ebp+0xc]
  426779:	mov    ecx,DWORD PTR [ebp+0xc]
  42677c:	push   DWORD PTR [ebp+0x18]
  42677f:	mov    DWORD PTR [eax],ecx
  426781:	push   DWORD PTR [ebp+0x14]
  426784:	push   DWORD PTR [ebp+0x1c]
  426787:	call   ebx
  426789:	mov    ecx,DWORD PTR [ebp+0xc]
  42678c:	add    ecx,DWORD PTR [ebp+0x20]
  42678f:	lea    eax,[ebp+0x4]
  426792:	mov    DWORD PTR [ebp+0x20],ecx
  426795:	mov    ecx,DWORD PTR [ebp+0x20]
  426798:	mov    ecx,DWORD PTR [ebp+0x20]
  42679b:	mov    edx,DWORD PTR [ecx+0x190]
  4267a1:	mov    ecx,DWORD PTR [ebp+0x20]
  4267a4:	mov    ecx,DWORD PTR [ecx+0x18c]
  4267aa:	mov    esi,DWORD PTR [ecx]
  4267ac:	cmp    DWORD PTR [eax],esi
  4267ae:	jb     0x4267cf
  4267b0:	mov    esi,DWORD PTR [edx]
  4267b2:	mov    edi,DWORD PTR [edx]
  4267b4:	mov    esi,DWORD PTR [esi+0x3c]
  4267b7:	lea    esi,[edi+esi*1+0x50]
  4267bb:	mov    edi,DWORD PTR [ecx]
  4267bd:	add    edi,DWORD PTR [esi]
  4267bf:	cmp    DWORD PTR [eax],edi
  4267c1:	jae    0x4267cf
  4267c3:	mov    esi,DWORD PTR [ecx]
  4267c5:	mov    ecx,DWORD PTR [eax]
  4267c7:	mov    edx,DWORD PTR [edx]
  4267c9:	sub    ecx,esi
  4267cb:	add    edx,ecx
  4267cd:	mov    DWORD PTR [eax],edx
  4267cf:	mov    eax,DWORD PTR [ebp+0xc]
  4267d2:	jmp    0x4267d6
  4267d4:	xor    eax,eax
  4267d6:	pop    edi
  4267d7:	pop    esi
  4267d8:	pop    ebx
  4267d9:	leave  
  4267da:	ret    0x1c
  4267dd:	push   ebp
  4267de:	mov    ebp,esp
  4267e0:	sub    esp,0x1c
  4267e3:	push   esi
  4267e4:	mov    esi,eax
  4267e6:	mov    eax,DWORD PTR [ecx+0x190]
  4267ec:	cmp    DWORD PTR [eax],0x0
  4267ef:	je     0x4268ff
  4267f5:	test   edx,edx
  4267f7:	je     0x4268ff
  4267fd:	test   esi,esi
  4267ff:	je     0x4268ff
  426805:	mov    eax,DWORD PTR [esi+0x88]
  42680b:	test   eax,eax
  42680d:	je     0x4268fa
  426813:	cmp    DWORD PTR [esi+0x8c],0x10
  42681a:	je     0x4268fa
  426820:	cmp    DWORD PTR [esi+0x34],edx
  426823:	je     0x4268fa
  426829:	mov    esi,DWORD PTR [ecx+0x18c]
  42682f:	and    DWORD PTR [ebp-0x10],0x0
  426833:	mov    ecx,edx
  426835:	sub    ecx,DWORD PTR [esi]
  426837:	add    eax,edx
  426839:	movzx  edx,WORD PTR [eax+0xc]
  42683d:	mov    DWORD PTR [ebp-0x1c],ecx
  426840:	movzx  ecx,WORD PTR [eax+0xe]
  426844:	add    ecx,edx
  426846:	je     0x4268fa
  42684c:	lea    ecx,[eax+0x14]
  42684f:	push   ebx
  426850:	mov    DWORD PTR [ebp-0x18],ecx
  426853:	mov    esi,0x7fffffff
  426858:	push   edi
  426859:	test   DWORD PTR [ecx],esi
  42685b:	je     0x4268dc
  42685d:	mov    edx,DWORD PTR [ecx]
  42685f:	and    DWORD PTR [ebp-0xc],0x0
  426863:	and    edx,esi
  426865:	add    edx,eax
  426867:	movzx  edi,WORD PTR [edx+0xe]
  42686b:	movzx  ebx,WORD PTR [edx+0xc]
  42686f:	add    edi,ebx
  426871:	je     0x4268dc
  426873:	lea    ecx,[edx+0x14]
  426876:	mov    DWORD PTR [ebp-0x14],ecx
  426879:	test   DWORD PTR [ecx],esi
  42687b:	je     0x4268be
  42687d:	mov    ecx,DWORD PTR [ecx]
  42687f:	and    DWORD PTR [ebp-0x8],0x0
  426883:	and    ecx,esi
  426885:	add    ecx,eax
  426887:	movzx  edi,WORD PTR [ecx+0xe]
  42688b:	movzx  ebx,WORD PTR [ecx+0xc]
  42688f:	add    edi,ebx
  426891:	je     0x4268be
  426893:	lea    edi,[ecx+0x14]
  426896:	mov    DWORD PTR [ebp-0x4],edi
  426899:	mov    edi,DWORD PTR [ebp-0x4]
  42689c:	mov    edi,DWORD PTR [edi]
  42689e:	test   edi,edi
  4268a0:	je     0x4268a8
  4268a2:	mov    ebx,DWORD PTR [ebp-0x1c]
  4268a5:	add    DWORD PTR [edi+eax*1],ebx
  4268a8:	movzx  edi,WORD PTR [ecx+0xe]
  4268ac:	movzx  ebx,WORD PTR [ecx+0xc]
  4268b0:	inc    DWORD PTR [ebp-0x8]
  4268b3:	add    DWORD PTR [ebp-0x4],0x8
  4268b7:	add    edi,ebx
  4268b9:	cmp    DWORD PTR [ebp-0x8],edi
  4268bc:	jb     0x426899
  4268be:	movzx  edi,WORD PTR [edx+0xe]
  4268c2:	movzx  ebx,WORD PTR [edx+0xc]
  4268c6:	mov    ecx,DWORD PTR [ebp-0x14]
  4268c9:	inc    DWORD PTR [ebp-0xc]
  4268cc:	add    ecx,0x8
  4268cf:	add    edi,ebx
  4268d1:	mov    DWORD PTR [ebp-0x14],ecx
  4268d4:	cmp    DWORD PTR [ebp-0xc],edi
  4268d7:	jb     0x426879
  4268d9:	mov    ecx,DWORD PTR [ebp-0x18]
  4268dc:	movzx  edx,WORD PTR [eax+0xe]
  4268e0:	movzx  edi,WORD PTR [eax+0xc]
  4268e4:	inc    DWORD PTR [ebp-0x10]
  4268e7:	add    ecx,0x8
  4268ea:	add    edx,edi
  4268ec:	mov    DWORD PTR [ebp-0x18],ecx
  4268ef:	cmp    DWORD PTR [ebp-0x10],edx
  4268f2:	jb     0x426859
  4268f8:	pop    edi
  4268f9:	pop    ebx
  4268fa:	xor    eax,eax
  4268fc:	inc    eax
  4268fd:	jmp    0x426901
  4268ff:	xor    eax,eax
  426901:	pop    esi
  426902:	leave  
  426903:	ret    
  426904:	push   ebp
  426905:	mov    ebp,esp
  426907:	mov    ecx,DWORD PTR [ecx+0x190]
  42690d:	mov    eax,DWORD PTR [ebp+0xc]
  426910:	sub    esp,0x10
  426913:	push   ebx
  426914:	xor    ebx,ebx
  426916:	push   esi
  426917:	push   edi
  426918:	cmp    DWORD PTR [ecx],ebx
  42691a:	je     0x4269a2
  426920:	cmp    eax,ebx
  426922:	je     0x4269a2
  426924:	cmp    DWORD PTR [eax+0x78],ebx
  426927:	jne    0x42692e
  426929:	xor    eax,eax
  42692b:	inc    eax
  42692c:	jmp    0x4269a4
  42692e:	mov    eax,DWORD PTR [eax+0x78]
  426931:	add    eax,DWORD PTR [ebp+0x8]
  426934:	mov    ecx,DWORD PTR [eax+0x1c]
  426937:	mov    edx,DWORD PTR [eax+0x24]
  42693a:	mov    esi,DWORD PTR [eax+0x14]
  42693d:	mov    edi,DWORD PTR [eax+0x18]
  426940:	add    ecx,DWORD PTR [ebp+0x8]
  426943:	add    edx,DWORD PTR [ebp+0x8]
  426946:	mov    DWORD PTR [ebp-0x4],esi
  426949:	cmp    esi,edi
  42694b:	ja     0x426950
  42694d:	mov    DWORD PTR [ebp-0x4],edi
  426950:	mov    DWORD PTR [ebp-0x8],ebx
  426953:	cmp    DWORD PTR [ebp-0x4],ebx
  426956:	jbe    0x426929
  426958:	cmp    ebx,DWORD PTR [eax+0x14]
  42695b:	jae    0x426963
  42695d:	movzx  esi,WORD PTR [edx+ebx*2]
  426961:	jmp    0x426965
  426963:	mov    esi,ebx
  426965:	lea    esi,[ecx+esi*4]
  426968:	mov    edi,DWORD PTR [esi]
  42696a:	test   edi,edi
  42696c:	je     0x426997
  42696e:	add    edi,DWORD PTR [ebp+0x8]
  426971:	mov    DWORD PTR [ebp-0x10],edi
  426974:	cmp    edi,eax
  426976:	jbe    0x426988
  426978:	mov    ebx,DWORD PTR [ebp+0xc]
  42697b:	mov    ebx,DWORD PTR [ebx+0x7c]
  42697e:	add    ebx,eax
  426980:	cmp    edi,ebx
  426982:	jae    0x426988
  426984:	mov    esi,DWORD PTR [esi]
  426986:	jmp    0x426990
  426988:	sub    edi,DWORD PTR [ebp+0x8]
  42698b:	mov    DWORD PTR [esi],edi
  42698d:	mov    esi,DWORD PTR [ebp-0x10]
  426990:	test   esi,esi
  426992:	je     0x4269a2
  426994:	mov    ebx,DWORD PTR [ebp-0x8]
  426997:	inc    ebx
  426998:	mov    DWORD PTR [ebp-0x8],ebx
  42699b:	cmp    ebx,DWORD PTR [ebp-0x4]
  42699e:	jb     0x426958
  4269a0:	jmp    0x426929
  4269a2:	xor    eax,eax
  4269a4:	pop    edi
  4269a5:	pop    esi
  4269a6:	pop    ebx
  4269a7:	leave  
  4269a8:	ret    0x8
  4269ab:	push   ebp
  4269ac:	mov    ebp,esp
  4269ae:	sub    esp,0x2c
  4269b1:	mov    edx,0xf89c85b9
  4269b6:	mov    DWORD PTR [ebp-0x4],edx
  4269b9:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  4269c0:	mov    eax,DWORD PTR [ebp-0x4]
  4269c3:	mov    ecx,DWORD PTR [ebp-0x4]
  4269c6:	mov    ecx,DWORD PTR [ebp-0x4]
  4269c9:	mov    ecx,DWORD PTR [ebp-0x4]
  4269cc:	mov    ecx,DWORD PTR [ebp-0x4]
  4269cf:	mov    ecx,DWORD PTR [ebp-0x4]
  4269d2:	push   ebx
  4269d3:	mov    ebx,DWORD PTR [ebp+0x10]
  4269d6:	push   esi
  4269d7:	mov    esi,0x75108a8
  4269dc:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  4269e3:	mov    ecx,DWORD PTR [ebp-0x4]
  4269e6:	mov    ebx,DWORD PTR [ebx+0x190]
  4269ec:	push   edi
  4269ed:	mov    edi,0x3272ef
  4269f2:	xor    ecx,esi
  4269f4:	xor    eax,esi
  4269f6:	add    eax,edi
  4269f8:	add    ecx,edi
  4269fa:	mov    DWORD PTR [ebp-0x18],eax
  4269fd:	cmp    ecx,DWORD PTR [ebx]
  4269ff:	je     0x426c80
  426a05:	mov    ebx,DWORD PTR [ebp-0x4]
  426a08:	mov    ecx,DWORD PTR [ebp+0xc]
  426a0b:	xor    ebx,esi
  426a0d:	add    ebx,edi
  426a0f:	cmp    ebx,ecx
  426a11:	je     0x426c80
  426a17:	mov    ebx,DWORD PTR [ebp-0x4]
  426a1a:	mov    ecx,DWORD PTR [ecx+0x80]
  426a20:	xor    ebx,esi
  426a22:	add    ebx,edi
  426a24:	cmp    ecx,ebx
  426a26:	je     0x426c7b
  426a2c:	add    ecx,DWORD PTR [ebp+0x8]
  426a2f:	mov    DWORD PTR [ebp-0x2c],ecx
  426a32:	mov    ebx,edx
  426a34:	xor    ebx,esi
  426a36:	add    ebx,edi
  426a38:	mov    DWORD PTR [ebp-0x10],ebx
  426a3b:	mov    ebx,DWORD PTR [ebp-0x10]
  426a3e:	cmp    ebx,edx
  426a40:	je     0x426a54
  426a42:	mov    edx,DWORD PTR [ebp-0x10]
  426a45:	mov    ebx,DWORD PTR [ebp-0x4]
  426a48:	imul   edx,edx,0x14
  426a4b:	xor    ebx,esi
  426a4d:	add    ebx,edi
  426a4f:	cmp    DWORD PTR [edx+ecx*1],ebx
  426a52:	jne    0x426a6b
  426a54:	mov    edx,DWORD PTR [ebp-0x10]
  426a57:	mov    ebx,DWORD PTR [ebp-0x4]
  426a5a:	imul   edx,edx,0x14
  426a5d:	xor    ebx,esi
  426a5f:	add    ebx,edi
  426a61:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  426a65:	je     0x426c6d
  426a6b:	mov    eax,DWORD PTR [ebp-0x4]
  426a6e:	mov    ebx,DWORD PTR [ebp-0x4]
  426a71:	mov    eax,DWORD PTR [ebp-0x10]
  426a74:	imul   eax,eax,0x14
  426a77:	add    eax,ecx
  426a79:	mov    ecx,DWORD PTR [eax+0x10]
  426a7c:	add    ecx,DWORD PTR [ebp+0x8]
  426a7f:	xor    ebx,esi
  426a81:	mov    DWORD PTR [ebp-0x1c],ecx
  426a84:	mov    ecx,DWORD PTR [ebp-0x4]
  426a87:	mov    edx,DWORD PTR [ebp-0x4]
  426a8a:	xor    ecx,esi
  426a8c:	add    ecx,edi
  426a8e:	xor    edx,esi
  426a90:	mov    DWORD PTR [ebp-0x24],ecx
  426a93:	mov    ecx,DWORD PTR [eax]
  426a95:	add    edx,edi
  426a97:	add    ebx,edi
  426a99:	cmp    ecx,edx
  426a9b:	je     0x426aa3
  426a9d:	add    ecx,DWORD PTR [ebp+0x8]
  426aa0:	mov    DWORD PTR [ebp-0x24],ecx
  426aa3:	mov    ecx,DWORD PTR [ebp-0x4]
  426aa6:	xor    ecx,esi
  426aa8:	add    ecx,DWORD PTR [eax+0xc]
  426aab:	mov    eax,DWORD PTR [ebp+0x8]
  426aae:	lea    eax,[ecx+eax*1+0x3272ef]
  426ab5:	mov    DWORD PTR [ebp+0xc],eax
  426ab8:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  426abf:	mov    eax,DWORD PTR [ebp+0x10]
  426ac2:	push   DWORD PTR [ebp+0xc]
  426ac5:	mov    eax,DWORD PTR [eax+0x1e0]
  426acb:	call   DWORD PTR [eax]
  426acd:	mov    ecx,DWORD PTR [ebp-0x4]
  426ad0:	xor    ecx,esi
  426ad2:	add    ecx,edi
  426ad4:	mov    DWORD PTR [ebp-0xc],eax
  426ad7:	cmp    ecx,eax
  426ad9:	jne    0x426aed
  426adb:	mov    eax,DWORD PTR [ebp+0x10]
  426ade:	push   DWORD PTR [ebp+0xc]
  426ae1:	mov    eax,DWORD PTR [eax+0x1e0]
  426ae7:	call   DWORD PTR [eax+0xc]
  426aea:	mov    DWORD PTR [ebp-0xc],eax
  426aed:	mov    DWORD PTR [ebp-0x20],0x7f661b22
  426af4:	mov    DWORD PTR [ebp-0x20],0xf89c9852
  426afb:	mov    eax,DWORD PTR [ebp-0x4]
  426afe:	xor    eax,esi
  426b00:	add    eax,edi
  426b02:	cmp    eax,DWORD PTR [ebp-0xc]
  426b05:	jne    0x426b2a
  426b07:	mov    eax,DWORD PTR [ebp-0x8]
  426b0a:	mov    ecx,DWORD PTR [ebp-0x20]
  426b0d:	xor    eax,esi
  426b0f:	xor    ecx,esi
  426b11:	lea    ebx,[ebx+eax*1+0x3272ef]
  426b18:	mov    eax,DWORD PTR [ebp+0x10]
  426b1b:	mov    eax,DWORD PTR [eax+0x1e0]
  426b21:	add    ecx,edi
  426b23:	imul   ecx,ebx
  426b26:	push   ecx
  426b27:	call   DWORD PTR [eax+0x24]
  426b2a:	mov    eax,DWORD PTR [ebp-0x4]
  426b2d:	xor    eax,esi
  426b2f:	add    eax,edi
  426b31:	cmp    eax,DWORD PTR [ebp-0xc]
  426b34:	jne    0x426b45
  426b36:	mov    eax,DWORD PTR [ebp-0x28]
  426b39:	xor    eax,esi
  426b3b:	add    eax,edi
  426b3d:	cmp    ebx,eax
  426b3f:	jbe    0x426abf
  426b45:	mov    eax,DWORD PTR [ebp-0x4]
  426b48:	xor    eax,esi
  426b4a:	add    eax,edi
  426b4c:	cmp    eax,DWORD PTR [ebp-0xc]
  426b4f:	jne    0x426b68
  426b51:	mov    eax,DWORD PTR [ebp-0x8]
  426b54:	mov    ecx,DWORD PTR [ebp-0x18]
  426b57:	xor    eax,esi
  426b59:	lea    eax,[ecx+eax*1+0x3272ef]
  426b60:	mov    DWORD PTR [ebp-0x18],eax
  426b63:	jmp    0x426c57
  426b68:	mov    DWORD PTR [ebp-0x14],0x1121b21
  426b6f:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  426b76:	mov    ebx,DWORD PTR [ebp-0x4]
  426b79:	xor    ebx,esi
  426b7b:	add    ebx,edi
  426b7d:	jmp    0x426c44
  426b82:	mov    eax,DWORD PTR [ebp-0x4]
  426b85:	xor    eax,esi
  426b87:	add    eax,edi
  426b89:	mov    DWORD PTR [ebp-0x14],eax
  426b8c:	mov    eax,DWORD PTR [ebp-0x4]
  426b8f:	xor    eax,esi
  426b91:	add    eax,edi
  426b93:	mov    DWORD PTR [ebp+0xc],eax
  426b96:	mov    ecx,DWORD PTR [ebp-0x4]
  426b99:	mov    eax,DWORD PTR [ebp-0x24]
  426b9c:	xor    ecx,esi
  426b9e:	add    ecx,edi
  426ba0:	cmp    ecx,eax
  426ba2:	je     0x426baa
  426ba4:	mov    eax,DWORD PTR [eax+ebx*4]
  426ba7:	mov    DWORD PTR [ebp-0x14],eax
  426baa:	mov    eax,DWORD PTR [ebp-0x1c]
  426bad:	mov    eax,DWORD PTR [eax+ebx*4]
  426bb0:	mov    DWORD PTR [ebp+0xc],eax
  426bb3:	mov    eax,DWORD PTR [ebp-0x4]
  426bb6:	mov    ecx,DWORD PTR [ebp-0x14]
  426bb9:	xor    eax,esi
  426bbb:	add    eax,edi
  426bbd:	cmp    eax,ecx
  426bbf:	je     0x426bea
  426bc1:	mov    eax,DWORD PTR [ebp-0x4]
  426bc4:	mov    ecx,DWORD PTR [ebp-0x14]
  426bc7:	xor    eax,esi
  426bc9:	add    eax,edi
  426bcb:	shr    ecx,0x1f
  426bce:	cmp    eax,ecx
  426bd0:	je     0x426bea
  426bd2:	mov    ecx,DWORD PTR [ebp-0x14]
  426bd5:	mov    eax,DWORD PTR [ebp+0x10]
  426bd8:	mov    eax,DWORD PTR [eax+0x1e0]
  426bde:	movzx  ecx,cx
  426be1:	push   ecx
  426be2:	push   DWORD PTR [ebp-0xc]
  426be5:	call   DWORD PTR [eax+0x8]
  426be8:	jmp    0x426c03
  426bea:	mov    eax,DWORD PTR [ebp+0xc]
  426bed:	add    eax,DWORD PTR [ebp+0x8]
  426bf0:	mov    ecx,DWORD PTR [ebp+0x10]
  426bf3:	mov    ecx,DWORD PTR [ecx+0x1e0]
  426bf9:	add    eax,0x2
  426bfc:	push   eax
  426bfd:	push   DWORD PTR [ebp-0xc]
  426c00:	call   DWORD PTR [ecx+0x8]
  426c03:	mov    DWORD PTR [ebp+0xc],eax
  426c06:	mov    eax,DWORD PTR [ebp-0x4]
  426c09:	mov    ecx,DWORD PTR [ebp+0xc]
  426c0c:	xor    eax,esi
  426c0e:	add    eax,edi
  426c10:	cmp    eax,ecx
  426c12:	mov    eax,DWORD PTR [ebp-0x8]
  426c15:	jne    0x426c28
  426c17:	mov    ecx,DWORD PTR [ebp-0x18]
  426c1a:	xor    eax,esi
  426c1c:	lea    eax,[ecx+eax*1+0x3272ef]
  426c23:	mov    DWORD PTR [ebp-0x18],eax
  426c26:	jmp    0x426c38
  426c28:	mov    ecx,DWORD PTR [ebp+0xc]
  426c2b:	xor    eax,esi
  426c2d:	add    eax,edi
  426c2f:	imul   eax,ecx
  426c32:	mov    ecx,DWORD PTR [ebp-0x1c]
  426c35:	mov    DWORD PTR [ecx+ebx*4],eax
  426c38:	mov    eax,DWORD PTR [ebp-0x8]
  426c3b:	xor    eax,esi
  426c3d:	lea    ebx,[ebx+eax*1+0x3272ef]
  426c44:	mov    eax,DWORD PTR [ebp-0x4]
  426c47:	mov    ecx,DWORD PTR [ebp-0x1c]
  426c4a:	xor    eax,esi
  426c4c:	add    eax,edi
  426c4e:	cmp    DWORD PTR [ecx+ebx*4],eax
  426c51:	jne    0x426b82
  426c57:	mov    edx,DWORD PTR [ebp-0x10]
  426c5a:	mov    ecx,DWORD PTR [ebp-0x2c]
  426c5d:	mov    eax,DWORD PTR [ebp-0x18]
  426c60:	sub    edx,0x3272ee
  426c66:	xor    edx,esi
  426c68:	jmp    0x426a32
  426c6d:	mov    ecx,DWORD PTR [ebp-0x4]
  426c70:	xor    ecx,esi
  426c72:	add    ecx,edi
  426c74:	cmp    eax,ecx
  426c76:	mov    eax,DWORD PTR [ebp-0x4]
  426c79:	jne    0x426c83
  426c7b:	mov    eax,DWORD PTR [ebp-0x8]
  426c7e:	jmp    0x426c83
  426c80:	mov    eax,DWORD PTR [ebp-0x4]
  426c83:	xor    eax,esi
  426c85:	add    eax,edi
  426c87:	pop    edi
  426c88:	pop    esi
  426c89:	pop    ebx
  426c8a:	leave  
  426c8b:	ret    0xc
  426c8e:	push   ebp
  426c8f:	mov    ebp,esp
  426c91:	sub    esp,0x28
  426c94:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  426c9b:	mov    DWORD PTR [ebp-0x28],0xf89c85ba
  426ca2:	mov    eax,DWORD PTR [ebp+0xc]
  426ca5:	mov    DWORD PTR [ebp+0xc],eax
  426ca8:	push   esi
  426ca9:	mov    eax,eax
  426cab:	mov    eax,DWORD PTR [ebp-0x4]
  426cae:	mov    esi,DWORD PTR [ebp+0x8]
  426cb1:	mov    ecx,0x75108a8
  426cb6:	xor    eax,ecx
  426cb8:	mov    edx,0x3272ef
  426cbd:	add    eax,edx
  426cbf:	cmp    esi,eax
  426cc1:	je     0x426de8
  426cc7:	mov    eax,DWORD PTR [ebp+0x8]
  426cca:	mov    esi,DWORD PTR [ebp+0x8]
  426ccd:	add    esi,DWORD PTR [eax+0x3c]
  426cd0:	push   edi
  426cd1:	mov    DWORD PTR [ebp+0xc],esi
  426cd4:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  426cdb:	mov    eax,DWORD PTR [ebp-0x1c]
  426cde:	mov    esi,DWORD PTR [ebp-0x4]
  426ce1:	mov    edi,DWORD PTR [ebp+0xc]
  426ce4:	xor    esi,ecx
  426ce6:	xor    eax,ecx
  426ce8:	add    esi,edx
  426cea:	cmp    DWORD PTR [edi+eax*8+0x19397f0],esi
  426cf1:	je     0x426de2
  426cf7:	mov    esi,DWORD PTR [ebp+0xc]
  426cfa:	mov    eax,DWORD PTR [ebp+0x8]
  426cfd:	add    eax,DWORD PTR [esi+0xa0]
  426d03:	mov    esi,DWORD PTR [ebp+0x8]
  426d06:	mov    edi,DWORD PTR [ebp+0xc]
  426d09:	sub    esi,DWORD PTR [edi+0x34]
  426d0c:	mov    edi,DWORD PTR [ebp-0x4]
  426d0f:	xor    edi,ecx
  426d11:	add    edi,edx
  426d13:	mov    DWORD PTR [ebp-0x24],esi
  426d16:	cmp    esi,edi
  426d18:	je     0x426de2
  426d1e:	mov    esi,DWORD PTR [ebp-0x4]
  426d21:	xor    esi,ecx
  426d23:	add    esi,edx
  426d25:	mov    DWORD PTR [ebp-0x8],esi
  426d28:	push   ebx
  426d29:	mov    DWORD PTR [ebp-0x10],0xf89c85bc
  426d30:	jmp    0x426dcc
  426d35:	mov    esi,DWORD PTR [ebp-0x4]
  426d38:	xor    esi,ecx
  426d3a:	lea    edi,[ebx-0x8]
  426d3d:	add    esi,edx
  426d3f:	shr    edi,1
  426d41:	cmp    esi,edi
  426d43:	jae    0x426db2
  426d45:	sub    edi,esi
  426d47:	lea    ebx,[eax+esi*2+0x8]
  426d4b:	mov    DWORD PTR [ebp-0x18],edi
  426d4e:	movzx  esi,WORD PTR [ebx]
  426d51:	and    esi,0xfff
  426d57:	mov    DWORD PTR [ebp-0x14],esi
  426d5a:	mov    edi,DWORD PTR [ebp-0x14]
  426d5d:	mov    esi,DWORD PTR [eax]
  426d5f:	sub    esi,edx
  426d61:	add    edi,esi
  426d63:	movzx  esi,WORD PTR [ebx]
  426d66:	shr    esi,0xc
  426d69:	xor    edi,ecx
  426d6b:	mov    DWORD PTR [ebp-0x20],edi
  426d6e:	mov    DWORD PTR [ebp-0x14],esi
  426d71:	mov    esi,DWORD PTR [ebp-0x20]
  426d74:	mov    edi,DWORD PTR [ebp+0x8]
  426d77:	xor    esi,ecx
  426d79:	lea    esi,[esi+edi*1+0x3272ef]
  426d80:	mov    DWORD PTR [ebp-0x20],esi
  426d83:	mov    esi,DWORD PTR [ebp-0x10]
  426d86:	mov    edi,DWORD PTR [ebp-0x14]
  426d89:	xor    esi,ecx
  426d8b:	add    esi,edx
  426d8d:	cmp    edi,esi
  426d8f:	jne    0x426da7
  426d91:	mov    esi,DWORD PTR [ebp-0x10]
  426d94:	mov    edi,DWORD PTR [ebp-0x14]
  426d97:	xor    esi,ecx
  426d99:	add    esi,edx
  426d9b:	cmp    edi,esi
  426d9d:	jne    0x426da7
  426d9f:	mov    esi,DWORD PTR [ebp-0x20]
  426da2:	mov    edi,DWORD PTR [ebp-0x24]
  426da5:	add    DWORD PTR [esi],edi
  426da7:	add    ebx,0x2
  426daa:	dec    DWORD PTR [ebp-0x18]
  426dad:	jne    0x426d4e
  426daf:	mov    ebx,DWORD PTR [ebp-0xc]
  426db2:	add    DWORD PTR [ebp-0x8],ebx
  426db5:	mov    esi,DWORD PTR [ebp-0x1c]
  426db8:	mov    edi,DWORD PTR [ebp-0x8]
  426dbb:	mov    ebx,DWORD PTR [ebp+0xc]
  426dbe:	xor    esi,ecx
  426dc0:	cmp    edi,DWORD PTR [ebx+esi*8+0x19397f4]
  426dc7:	jae    0x426de1
  426dc9:	add    eax,DWORD PTR [ebp-0xc]
  426dcc:	mov    esi,DWORD PTR [ebp-0x4]
  426dcf:	mov    ebx,DWORD PTR [eax+0x4]
  426dd2:	xor    esi,ecx
  426dd4:	add    esi,edx
  426dd6:	mov    DWORD PTR [ebp-0xc],ebx
  426dd9:	cmp    ebx,esi
  426ddb:	jne    0x426d35
  426de1:	pop    ebx
  426de2:	mov    eax,DWORD PTR [ebp-0x28]
  426de5:	pop    edi
  426de6:	jmp    0x426deb
  426de8:	mov    eax,DWORD PTR [ebp-0x4]
  426deb:	xor    eax,ecx
  426ded:	add    eax,edx
  426def:	pop    esi
  426df0:	leave  
  426df1:	ret    0x8
  426df4:	push   ebp
  426df5:	mov    ebp,esp
  426df7:	sub    esp,0xd8
  426dfd:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  426e04:	mov    DWORD PTR [ebp-0x24],0xf89c85ba
  426e0b:	mov    eax,DWORD PTR [ebp-0x4]
  426e0e:	push   ebx
  426e0f:	push   esi
  426e10:	mov    esi,0x75108a8
  426e15:	xor    eax,esi
  426e17:	push   edi
  426e18:	mov    edi,0x3272ef
  426e1d:	add    eax,edi
  426e1f:	mov    DWORD PTR [ebp-0x18],eax
  426e22:	mov    eax,DWORD PTR [ebp-0x4]
  426e25:	xor    eax,esi
  426e27:	add    eax,edi
  426e29:	mov    DWORD PTR [ebp-0x8],eax
  426e2c:	mov    ebx,DWORD PTR [ebp+0x20]
  426e2f:	mov    eax,DWORD PTR [ebp-0x1c]
  426e32:	mov    ecx,DWORD PTR [ebp-0x1c]
  426e35:	xor    eax,ecx
  426e37:	mov    DWORD PTR [ebp-0x1c],eax
  426e3a:	add    DWORD PTR [ebp-0x1c],0xf89cb5b9
  426e41:	mov    eax,DWORD PTR [ebp-0xc]
  426e44:	mov    ecx,DWORD PTR [ebp-0xc]
  426e47:	xor    eax,ecx
  426e49:	mov    DWORD PTR [ebp-0xc],eax
  426e4c:	add    DWORD PTR [ebp-0xc],0xf89c85f9
  426e53:	mov    eax,DWORD PTR [ebp-0x10]
  426e56:	mov    ecx,DWORD PTR [ebp-0x10]
  426e59:	xor    eax,ecx
  426e5b:	mov    DWORD PTR [ebp-0x10],eax
  426e5e:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  426e65:	mov    eax,DWORD PTR [ebp-0x28]
  426e68:	mov    ecx,DWORD PTR [ebp-0x28]
  426e6b:	xor    eax,ecx
  426e6d:	mov    DWORD PTR [ebp-0x28],eax
  426e70:	add    DWORD PTR [ebp-0x28],0xf89f05b9
  426e77:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  426e7e:	mov    eax,DWORD PTR [ebp+0x8]
  426e81:	test   eax,eax
  426e83:	je     0x42730c
  426e89:	mov    eax,DWORD PTR [ebp+0xc]
  426e8c:	test   eax,eax
  426e8e:	je     0x42730c
  426e94:	mov    eax,DWORD PTR [ebp+0x18]
  426e97:	test   eax,eax
  426e99:	je     0x42730c
  426e9f:	mov    eax,DWORD PTR [ebp+0x20]
  426ea2:	mov    ecx,DWORD PTR [ebp+0x8]
  426ea5:	xor    eax,0x8a8
  426eaa:	add    eax,0x72ef
  426eaf:	cmp    WORD PTR [ecx],ax
  426eb2:	jne    0x42730c
  426eb8:	mov    eax,DWORD PTR [ebp-0x4]
  426ebb:	xor    eax,esi
  426ebd:	add    eax,edi
  426ebf:	mov    DWORD PTR [ebp-0x30],eax
  426ec2:	mov    eax,DWORD PTR [ebp-0x4]
  426ec5:	mov    ecx,DWORD PTR [ebp+0x8]
  426ec8:	mov    eax,DWORD PTR [ebp+0x8]
  426ecb:	add    eax,DWORD PTR [ecx+0x3c]
  426ece:	mov    DWORD PTR [ebp+0xc],eax
  426ed1:	mov    eax,DWORD PTR [eax+0x50]
  426ed4:	test   eax,eax
  426ed6:	je     0x42730c
  426edc:	mov    DWORD PTR [ebp-0x2c],0xf88c85b9
  426ee3:	mov    eax,DWORD PTR [ebp-0x2c]
  426ee6:	xor    eax,esi
  426ee8:	add    eax,edi
  426eea:	mov    DWORD PTR [ebp-0x2c],eax
  426eed:	mov    eax,DWORD PTR [ebp-0x4]
  426ef0:	mov    eax,DWORD PTR [ebx+0x190]
  426ef6:	mov    ecx,DWORD PTR [eax]
  426ef8:	mov    ecx,DWORD PTR [ecx+0x3c]
  426efb:	add    ecx,DWORD PTR [eax]
  426efd:	mov    eax,DWORD PTR [ebp-0x4]
  426f00:	mov    eax,DWORD PTR [ebx+0x18c]
  426f06:	mov    edx,DWORD PTR [eax]
  426f08:	mov    DWORD PTR [ebp-0x20],ecx
  426f0b:	mov    DWORD PTR [ebp+0x20],edx
  426f0e:	cmp    edx,edx
  426f10:	jne    0x426f44
  426f12:	mov    eax,DWORD PTR [ebx+0x1e0]
  426f18:	lea    edx,[ebp-0x18]
  426f1b:	push   edx
  426f1c:	mov    edx,DWORD PTR [ebp-0xc]
  426f1f:	xor    edx,esi
  426f21:	add    edx,edi
  426f23:	push   edx
  426f24:	push   DWORD PTR [ecx+0x50]
  426f27:	push   DWORD PTR [ebp+0x20]
  426f2a:	call   DWORD PTR [eax+0x1c]
  426f2d:	mov    eax,DWORD PTR [ebp-0x20]
  426f30:	mov    ecx,DWORD PTR [eax+0x54]
  426f33:	mov    eax,DWORD PTR [eax+0x50]
  426f36:	sub    eax,ecx
  426f38:	add    ecx,DWORD PTR [ebp+0x20]
  426f3b:	push   ecx
  426f3c:	call   0x4278a7
  426f41:	mov    edx,DWORD PTR [ebp+0x20]
  426f44:	mov    eax,DWORD PTR [ebx+0x194]
  426f4a:	mov    DWORD PTR [eax],edx
  426f4c:	mov    eax,DWORD PTR [ebp+0xc]
  426f4f:	push   DWORD PTR [eax+0x54]
  426f52:	push   DWORD PTR [ebp+0x8]
  426f55:	push   edx
  426f56:	call   0x42779d
  426f5b:	mov    ecx,DWORD PTR [ebp+0x20]
  426f5e:	mov    eax,DWORD PTR [ecx+0x3c]
  426f61:	add    eax,ecx
  426f63:	movzx  ecx,WORD PTR [eax+0x14]
  426f67:	lea    ecx,[ecx+eax*1+0x18]
  426f6b:	mov    DWORD PTR [ebp+0x18],ecx
  426f6e:	mov    ecx,DWORD PTR [ebp-0x4]
  426f71:	movzx  edx,WORD PTR [eax+0x6]
  426f75:	xor    ecx,esi
  426f77:	add    ecx,edi
  426f79:	mov    DWORD PTR [ebp+0xc],eax
  426f7c:	cmp    edx,ecx
  426f7e:	je     0x42702b
  426f84:	mov    ecx,DWORD PTR [ebp-0x4]
  426f87:	xor    ecx,esi
  426f89:	add    ecx,edi
  426f8b:	mov    DWORD PTR [ebp-0x8],ecx
  426f8e:	mov    ecx,DWORD PTR [ebp-0x24]
  426f91:	movzx  edx,WORD PTR [eax+0x6]
  426f95:	xor    ecx,esi
  426f97:	sub    edx,ecx
  426f99:	sub    edx,edi
  426f9b:	cmp    DWORD PTR [ebp-0x8],edx
  426f9e:	ja     0x42702b
  426fa4:	mov    edx,DWORD PTR [ebp+0x18]
  426fa7:	add    edx,0x8
  426faa:	mov    DWORD PTR [ebp+0x18],edx
  426fad:	jmp    0x426fb2
  426faf:	mov    edx,DWORD PTR [ebp+0x18]
  426fb2:	mov    eax,DWORD PTR [eax+0x38]
  426fb5:	lea    ecx,[eax-0x1]
  426fb8:	mov    DWORD PTR [ebp-0x38],eax
  426fbb:	mov    eax,DWORD PTR [edx]
  426fbd:	test   eax,ecx
  426fbf:	je     0x426fc8
  426fc1:	not    ecx
  426fc3:	and    eax,ecx
  426fc5:	add    eax,DWORD PTR [ebp-0x38]
  426fc8:	mov    ecx,DWORD PTR [edx+0x4]
  426fcb:	add    ecx,DWORD PTR [ebp+0x20]
  426fce:	push   ecx
  426fcf:	call   0x4278a7
  426fd4:	mov    edx,DWORD PTR [ebp-0x4]
  426fd7:	mov    eax,DWORD PTR [ebp+0x18]
  426fda:	mov    ecx,DWORD PTR [eax+0x8]
  426fdd:	xor    edx,esi
  426fdf:	add    edx,edi
  426fe1:	cmp    ecx,edx
  426fe3:	je     0x426ffc
  426fe5:	push   ecx
  426fe6:	mov    ecx,DWORD PTR [ebp+0x8]
  426fe9:	add    ecx,DWORD PTR [eax+0xc]
  426fec:	mov    eax,DWORD PTR [eax+0x4]
  426fef:	add    eax,DWORD PTR [ebp+0x20]
  426ff2:	push   ecx
  426ff3:	push   eax
  426ff4:	call   0x42779d
  426ff9:	mov    eax,DWORD PTR [ebp+0x18]
  426ffc:	mov    ecx,DWORD PTR [ebp-0x24]
  426fff:	mov    edx,DWORD PTR [ebp-0x8]
  427002:	add    eax,0x28
  427005:	xor    ecx,esi
  427007:	lea    ecx,[edx+ecx*1+0x3272ef]
  42700e:	mov    edx,DWORD PTR [ebp+0xc]
  427011:	mov    DWORD PTR [ebp+0x18],eax
  427014:	mov    eax,DWORD PTR [ebp-0x24]
  427017:	movzx  edx,WORD PTR [edx+0x6]
  42701b:	xor    eax,esi
  42701d:	sub    edx,eax
  42701f:	mov    eax,DWORD PTR [ebp+0xc]
  427022:	sub    edx,edi
  427024:	mov    DWORD PTR [ebp-0x8],ecx
  427027:	cmp    ecx,edx
  427029:	jbe    0x426faf
  42702b:	mov    edx,DWORD PTR [ebx+0x18c]
  427031:	mov    ecx,DWORD PTR [ebp+0x20]
  427034:	cmp    ecx,DWORD PTR [edx]
  427036:	jne    0x42705f
  427038:	mov    eax,DWORD PTR [ebx+0x1e0]
  42703e:	lea    edx,[ebp-0x18]
  427041:	push   edx
  427042:	mov    edx,DWORD PTR [ebp-0x10]
  427045:	xor    edx,esi
  427047:	add    edx,edi
  427049:	push   edx
  42704a:	mov    edx,DWORD PTR [ebp-0x20]
  42704d:	push   DWORD PTR [edx+0x54]
  427050:	push   ecx
  427051:	call   DWORD PTR [eax+0x1c]
  427054:	test   eax,eax
  427056:	je     0x4272fd
  42705c:	mov    eax,DWORD PTR [ebp+0xc]
  42705f:	mov    ecx,DWORD PTR [ebx+0x1c8]
  427065:	mov    ecx,DWORD PTR [ecx]
  427067:	xor    ecx,esi
  427069:	add    ecx,edi
  42706b:	je     0x427228
  427071:	mov    eax,DWORD PTR [ebp-0x4]
  427074:	xor    eax,esi
  427076:	add    eax,edi
  427078:	and    DWORD PTR [ebp+0x8],0x0
  42707c:	mov    DWORD PTR [ebp-0x14],eax
  42707f:	mov    eax,0xf89c85dd
  427084:	lea    ecx,[eax-0x8]
  427087:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  42708e:	mov    DWORD PTR [ebp-0x54],0xf89c852d
  427095:	mov    DWORD PTR [ebp-0x50],eax
  427098:	mov    DWORD PTR [ebp-0x4c],ecx
  42709b:	mov    DWORD PTR [ebp-0x48],ecx
  42709e:	mov    DWORD PTR [ebp-0x44],0xf89c85b9
  4270a5:	mov    edx,DWORD PTR [ebp+0x8]
  4270a8:	mov    ecx,0x8a8
  4270ad:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  4270b2:	mov    edx,0x72ef
  4270b7:	add    cx,dx
  4270ba:	mov    edx,DWORD PTR [ebp+0x8]
  4270bd:	inc    DWORD PTR [ebp+0x8]
  4270c0:	cmp    DWORD PTR [ebp+0x8],0x6
  4270c4:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  4270cc:	jb     0x4270a5
  4270ce:	mov    ecx,0xf89c852b
  4270d3:	mov    DWORD PTR [ebp-0xb0],eax
  4270d9:	mov    DWORD PTR [ebp-0x9c],eax
  4270df:	mov    DWORD PTR [ebp-0x74],eax
  4270e2:	mov    DWORD PTR [ebp-0x70],eax
  4270e5:	lea    eax,[ecx+0x1]
  4270e8:	mov    edx,0xf89c85ff
  4270ed:	mov    DWORD PTR [ebp-0x64],eax
  4270f0:	mov    DWORD PTR [ebp-0x60],eax
  4270f3:	mov    DWORD PTR [ebp-0xb4],0xf89c85f5
  4270fd:	mov    DWORD PTR [ebp-0xac],ecx
  427103:	mov    DWORD PTR [ebp-0xa8],edx
  427109:	mov    DWORD PTR [ebp-0xa4],0xf89c85d2
  427113:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  42711d:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  427127:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  427131:	mov    DWORD PTR [ebp-0x90],0xf89c852d
  42713b:	mov    DWORD PTR [ebp-0x8c],ecx
  427141:	mov    DWORD PTR [ebp-0x88],0xf89c8522
  42714b:	mov    DWORD PTR [ebp-0x84],edx
  427151:	mov    DWORD PTR [ebp-0x80],0xf89c8528
  427158:	mov    DWORD PTR [ebp-0x7c],ecx
  42715b:	mov    DWORD PTR [ebp-0x78],0xf89c85fa
  427162:	mov    DWORD PTR [ebp-0x6c],ecx
  427165:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  42716c:	mov    DWORD PTR [ebp-0x5c],0xf89c85b9
  427173:	xor    eax,eax
  427175:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  42717c:	xor    cl,0xa8
  42717f:	sub    cl,0x11
  427182:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  427189:	inc    eax
  42718a:	cmp    eax,0x17
  42718d:	jb     0x427175
  42718f:	mov    eax,DWORD PTR [ebx+0x1e0]
  427195:	lea    ecx,[ebp-0xc0]
  42719b:	push   ecx
  42719c:	call   DWORD PTR [eax+0x4]
  42719f:	mov    ecx,DWORD PTR [ebx+0x1e0]
  4271a5:	lea    edx,[ebp-0xd8]
  4271ab:	push   edx
  4271ac:	push   eax
  4271ad:	call   DWORD PTR [ecx+0x8]
  4271b0:	mov    DWORD PTR [ebp-0x40],eax
  4271b3:	lea    eax,[ebp-0x14]
  4271b6:	push   eax
  4271b7:	mov    eax,DWORD PTR [ebx+0x18c]
  4271bd:	push   DWORD PTR [eax]
  4271bf:	mov    eax,DWORD PTR [ebp-0x40]
  4271c2:	call   eax
  4271c4:	mov    eax,DWORD PTR [ebp-0x4]
  4271c7:	xor    eax,esi
  4271c9:	add    eax,edi
  4271cb:	mov    DWORD PTR [ebp-0x34],eax
  4271ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4271d1:	mov    eax,DWORD PTR [ebp-0x14]
  4271d4:	xor    ecx,esi
  4271d6:	add    ecx,edi
  4271d8:	cmp    eax,ecx
  4271da:	je     0x427225
  4271dc:	mov    DWORD PTR [ebp-0x3c],eax
  4271df:	jmp    0x4271f0
  4271e1:	mov    eax,DWORD PTR [eax]
  4271e3:	mov    ecx,DWORD PTR [ebp-0x3c]
  4271e6:	mov    DWORD PTR [ebp-0x14],eax
  4271e9:	mov    eax,DWORD PTR [ebp-0x14]
  4271ec:	cmp    eax,ecx
  4271ee:	je     0x4271fd
  4271f0:	mov    edx,DWORD PTR [eax+0x18]
  4271f3:	mov    ecx,DWORD PTR [ebx+0x18c]
  4271f9:	cmp    edx,DWORD PTR [ecx]
  4271fb:	jne    0x4271e1
  4271fd:	mov    ecx,DWORD PTR [ebx+0x18c]
  427203:	mov    edx,DWORD PTR [eax+0x18]
  427206:	cmp    edx,DWORD PTR [ecx]
  427208:	jne    0x427225
  42720a:	mov    ecx,DWORD PTR [ebx+0x190]
  427210:	mov    edx,DWORD PTR [ebp-0x20]
  427213:	mov    edx,DWORD PTR [edx+0x28]
  427216:	add    edx,DWORD PTR [ecx]
  427218:	mov    DWORD PTR [eax+0x1c],edx
  42721b:	mov    eax,DWORD PTR [ebp-0x24]
  42721e:	xor    eax,esi
  427220:	add    eax,edi
  427222:	mov    DWORD PTR [ebp-0x34],eax
  427225:	mov    eax,DWORD PTR [ebp+0xc]
  427228:	push   ebx
  427229:	push   eax
  42722a:	push   DWORD PTR [ebp+0x20]
  42722d:	call   0x4269ab
  427232:	test   eax,eax
  427234:	je     0x4272fd
  42723a:	push   DWORD PTR [ebp+0xc]
  42723d:	mov    ecx,ebx
  42723f:	push   DWORD PTR [ebp+0x20]
  427242:	call   0x426904
  427247:	test   eax,eax
  427249:	je     0x4272fd
  42724f:	mov    eax,DWORD PTR [ebp+0xc]
  427252:	mov    edx,DWORD PTR [ebp+0x20]
  427255:	mov    ecx,ebx
  427257:	call   0x4267dd
  42725c:	test   eax,eax
  42725e:	je     0x4272fd
  427264:	push   ebx
  427265:	push   DWORD PTR [ebp+0x20]
  427268:	call   0x426c8e
  42726d:	test   eax,eax
  42726f:	je     0x4272fd
  427275:	mov    eax,DWORD PTR [ebx+0x18c]
  42727b:	mov    edx,DWORD PTR [ebp+0x20]
  42727e:	cmp    edx,DWORD PTR [eax]
  427280:	jne    0x42729c
  427282:	mov    eax,DWORD PTR [ebx+0x1e0]
  427288:	lea    ecx,[ebp-0x18]
  42728b:	push   ecx
  42728c:	push   DWORD PTR [ebp-0x18]
  42728f:	mov    ecx,DWORD PTR [ebp-0x20]
  427292:	push   DWORD PTR [ecx+0x54]
  427295:	push   edx
  427296:	call   DWORD PTR [eax+0x1c]
  427299:	mov    edx,DWORD PTR [ebp+0x20]
  42729c:	mov    eax,DWORD PTR [ebx+0x1c8]
  4272a2:	mov    eax,DWORD PTR [eax]
  4272a4:	xor    eax,esi
  4272a6:	add    eax,edi
  4272a8:	je     0x4272e1
  4272aa:	mov    ecx,DWORD PTR [ebp+0xc]
  4272ad:	mov    eax,DWORD PTR [ecx+0x28]
  4272b0:	mov    DWORD PTR [ebp+0x8],0xf89ca5b9
  4272b7:	mov    esi,DWORD PTR [ebp+0x8]
  4272ba:	push   DWORD PTR [ebp+0x14]
  4272bd:	xor    esi,0x8a8
  4272c3:	push   DWORD PTR [ebp+0x10]
  4272c6:	add    esi,0x72ef
  4272cc:	or     WORD PTR [ecx+0x16],si
  4272d0:	add    eax,edx
  4272d2:	push   edx
  4272d3:	call   eax
  4272d5:	mov    DWORD PTR [ebx+0x1d0],0xf89c85ba
  4272df:	jmp    0x4272eb
  4272e1:	mov    eax,DWORD PTR [ebp+0xc]
  4272e4:	mov    eax,DWORD PTR [eax+0x28]
  4272e7:	add    eax,edx
  4272e9:	call   eax
  4272eb:	mov    DWORD PTR [ebp-0x8],eax
  4272ee:	mov    eax,DWORD PTR [ebp-0x8]
  4272f1:	mov    ecx,DWORD PTR [ebp+0x1c]
  4272f4:	mov    DWORD PTR [ecx],eax
  4272f6:	mov    DWORD PTR [ebp-0x30],0x1
  4272fd:	cmp    DWORD PTR [ebp-0x30],0x0
  427301:	jne    0x427307
  427303:	and    DWORD PTR [ebp+0x20],0x0
  427307:	mov    eax,DWORD PTR [ebp+0x20]
  42730a:	jmp    0x42730e
  42730c:	xor    eax,eax
  42730e:	pop    edi
  42730f:	pop    esi
  427310:	pop    ebx
  427311:	leave  
  427312:	ret    0x1c
  427315:	push   ebp
  427316:	mov    ebp,esp
  427318:	movzx  edx,WORD PTR [ecx+0x6]
  42731c:	movzx  eax,WORD PTR [ecx+0x14]
  427320:	push   ebx
  427321:	push   edi
  427322:	xor    edi,edi
  427324:	lea    eax,[eax+ecx*1+0x18]
  427328:	test   edx,edx
  42732a:	je     0x42734b
  42732c:	mov    ecx,DWORD PTR [eax+0xc]
  42732f:	lea    ebx,[ecx+esi*1]
  427332:	cmp    DWORD PTR [ebp+0x8],ebx
  427335:	jb     0x427343
  427337:	mov    ebx,DWORD PTR [eax+0x8]
  42733a:	add    ebx,ecx
  42733c:	add    ebx,esi
  42733e:	cmp    DWORD PTR [ebp+0x8],ebx
  427341:	jb     0x42734d
  427343:	add    eax,0x28
  427346:	inc    edi
  427347:	cmp    edi,edx
  427349:	jb     0x42732c
  42734b:	xor    eax,eax
  42734d:	pop    edi
  42734e:	pop    ebx
  42734f:	pop    ebp
  427350:	ret    0x4
  427353:	push   ebp
  427354:	mov    ebp,esp
  427356:	sub    esp,0x34
  427359:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  427360:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  427367:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  42736e:	mov    DWORD PTR [ebp-0x8],0xf89c85da
  427375:	mov    DWORD PTR [ebp-0x20],0xf89c85fa
  42737c:	mov    DWORD PTR [ebp-0x2c],0xf89c8523
  427383:	mov    DWORD PTR [ebp-0x2c],0xf89c85c3
  42738a:	mov    DWORD PTR [ebp-0x10],eax
  42738d:	mov    eax,DWORD PTR [ebp+0x8]
  427390:	mov    DWORD PTR [ebp-0x14],eax
  427393:	mov    eax,DWORD PTR [ebp-0xc]
  427396:	push   ebx
  427397:	mov    ecx,0x75108a8
  42739c:	xor    eax,ecx
  42739e:	push   esi
  42739f:	mov    esi,DWORD PTR [ebp-0x10]
  4273a2:	mov    edx,0x3272ef
  4273a7:	add    eax,edx
  4273a9:	push   edi
  4273aa:	cmp    esi,eax
  4273ac:	je     0x42758b
  4273b2:	mov    eax,DWORD PTR [ebp-0xc]
  4273b5:	mov    esi,DWORD PTR [ebp-0x14]
  4273b8:	xor    eax,ecx
  4273ba:	add    eax,edx
  4273bc:	cmp    esi,eax
  4273be:	je     0x42758b
  4273c4:	mov    eax,DWORD PTR [ebp-0xc]
  4273c7:	xor    eax,ecx
  4273c9:	add    eax,edx
  4273cb:	mov    DWORD PTR [ebp-0x24],eax
  4273ce:	mov    eax,DWORD PTR [ebp-0xc]
  4273d1:	xor    eax,ecx
  4273d3:	add    eax,edx
  4273d5:	mov    DWORD PTR [ebp-0x28],eax
  4273d8:	mov    edi,DWORD PTR [ebp-0x20]
  4273db:	mov    ebx,DWORD PTR [ebp-0x8]
  4273de:	mov    esi,0x8a8
  4273e3:	xor    edi,esi
  4273e5:	mov    eax,0x72ef
  4273ea:	xor    ebx,esi
  4273ec:	add    edi,eax
  4273ee:	add    ebx,eax
  4273f0:	sub    ebx,edi
  4273f2:	mov    WORD PTR [ebp-0x8],bx
  4273f6:	jmp    0x4274bb
  4273fb:	mov    edi,DWORD PTR [ebp-0xc]
  4273fe:	mov    bx,WORD PTR [ebp-0x4]
  427402:	xor    edi,esi
  427404:	add    edi,eax
  427406:	cmp    bx,di
  427409:	je     0x4274fd
  42740f:	mov    edi,DWORD PTR [ebp-0xc]
  427412:	mov    ebx,DWORD PTR [ebp+0xc]
  427415:	xor    edi,ecx
  427417:	add    edi,edx
  427419:	cmp    ebx,edi
  42741b:	mov    di,WORD PTR [ebp-0x4]
  42741f:	mov    bx,WORD PTR [ebp+0x8]
  427423:	je     0x42748e
  427425:	cmp    bx,di
  427428:	je     0x427497
  42742a:	mov    edi,DWORD PTR [ebp-0x20]
  42742d:	mov    bx,WORD PTR [ebp+0x8]
  427431:	xor    edi,esi
  427433:	add    edi,eax
  427435:	cmp    bx,di
  427438:	jb     0x427458
  42743a:	mov    edi,DWORD PTR [ebp-0x2c]
  42743d:	mov    bx,WORD PTR [ebp+0x8]
  427441:	xor    edi,esi
  427443:	add    edi,eax
  427445:	cmp    bx,di
  427448:	ja     0x427458
  42744a:	movzx  edi,WORD PTR [ebp+0x8]
  42744e:	movzx  ebx,WORD PTR [ebp-0x8]
  427452:	add    edi,ebx
  427454:	mov    WORD PTR [ebp+0x8],di
  427458:	mov    edi,DWORD PTR [ebp-0x20]
  42745b:	mov    bx,WORD PTR [ebp-0x4]
  42745f:	xor    edi,esi
  427461:	add    edi,eax
  427463:	cmp    bx,di
  427466:	jb     0x427486
  427468:	mov    edi,DWORD PTR [ebp-0x2c]
  42746b:	mov    bx,WORD PTR [ebp-0x4]
  42746f:	xor    edi,esi
  427471:	add    edi,eax
  427473:	cmp    bx,di
  427476:	ja     0x427486
  427478:	movzx  edi,WORD PTR [ebp-0x4]
  42747c:	movzx  ebx,WORD PTR [ebp-0x8]
  427480:	add    edi,ebx
  427482:	mov    WORD PTR [ebp-0x4],di
  427486:	mov    di,WORD PTR [ebp-0x4]
  42748a:	mov    bx,WORD PTR [ebp+0x8]
  42748e:	cmp    bx,di
  427491:	jne    0x42758b
  427497:	mov    edi,DWORD PTR [ebp-0x1c]
  42749a:	mov    ebx,DWORD PTR [ebp-0x10]
  42749d:	xor    edi,ecx
  42749f:	lea    edi,[edi+ebx*1+0x3272ef]
  4274a6:	mov    DWORD PTR [ebp-0x10],edi
  4274a9:	mov    edi,DWORD PTR [ebp-0x1c]
  4274ac:	mov    ebx,DWORD PTR [ebp-0x14]
  4274af:	xor    edi,ecx
  4274b1:	lea    edi,[edi+ebx*1+0x3272ef]
  4274b8:	mov    DWORD PTR [ebp-0x14],edi
  4274bb:	mov    edi,DWORD PTR [ebp-0x24]
  4274be:	mov    ebx,DWORD PTR [ebp-0x10]
  4274c1:	mov    di,WORD PTR [ebx+edi*2]
  4274c5:	mov    WORD PTR [ebp+0x8],di
  4274c9:	mov    edi,DWORD PTR [ebp-0x28]
  4274cc:	mov    ebx,DWORD PTR [ebp-0x14]
  4274cf:	mov    di,WORD PTR [ebx+edi*2]
  4274d3:	mov    WORD PTR [ebp-0x4],di
  4274d7:	mov    edi,DWORD PTR [ebp-0xc]
  4274da:	mov    bx,WORD PTR [ebp+0x8]
  4274de:	xor    edi,esi
  4274e0:	add    edi,eax
  4274e2:	cmp    bx,di
  4274e5:	jne    0x4273fb
  4274eb:	mov    eax,DWORD PTR [ebp-0x18]
  4274ee:	mov    esi,DWORD PTR [ebp-0xc]
  4274f1:	xor    eax,ecx
  4274f3:	add    eax,edx
  4274f5:	imul   eax,esi
  4274f8:	mov    DWORD PTR [ebp-0xc],eax
  4274fb:	jmp    0x42750f
  4274fd:	mov    eax,DWORD PTR [ebp-0xc]
  427500:	mov    esi,DWORD PTR [ebp-0x18]
  427503:	xor    eax,ecx
  427505:	lea    eax,[eax+esi*1+0x3272ef]
  42750c:	mov    DWORD PTR [ebp-0x18],eax
  42750f:	mov    eax,DWORD PTR [ebp-0x24]
  427512:	sub    eax,edx
  427514:	xor    eax,ecx
  427516:	mov    DWORD PTR [ebp-0x30],eax
  427519:	mov    eax,DWORD PTR [ebp-0x28]
  42751c:	sub    eax,edx
  42751e:	xor    eax,ecx
  427520:	mov    DWORD PTR [ebp-0x34],eax
  427523:	mov    eax,DWORD PTR [ebp-0x34]
  427526:	mov    esi,DWORD PTR [ebp-0x1c]
  427529:	xor    esi,ecx
  42752b:	add    esi,edx
  42752d:	xor    eax,ecx
  42752f:	add    eax,0x3272ef
  427534:	imul   esi,eax
  427537:	mov    eax,DWORD PTR [ebp-0x14]
  42753a:	movzx  eax,WORD PTR [esi+eax*1]
  42753e:	mov    esi,DWORD PTR [ebp-0x30]
  427541:	mov    edi,DWORD PTR [ebp-0x1c]
  427544:	xor    esi,ecx
  427546:	add    esi,edx
  427548:	xor    edi,ecx
  42754a:	add    edi,edx
  42754c:	imul   edi,esi
  42754f:	mov    esi,DWORD PTR [ebp-0x10]
  427552:	movzx  esi,WORD PTR [edi+esi*1]
  427556:	sub    eax,edx
  427558:	sub    esi,edx
  42755a:	xor    eax,ecx
  42755c:	xor    esi,ecx
  42755e:	cmp    esi,eax
  427560:	jne    0x42758b
  427562:	mov    eax,DWORD PTR [ebp-0x30]
  427565:	mov    esi,DWORD PTR [ebp-0x1c]
  427568:	xor    eax,ecx
  42756a:	add    eax,0x3272ef
  42756f:	xor    esi,ecx
  427571:	add    esi,edx
  427573:	imul   esi,eax
  427576:	mov    eax,DWORD PTR [ebp-0x10]
  427579:	movzx  eax,WORD PTR [esi+eax*1]
  42757d:	mov    esi,DWORD PTR [ebp-0xc]
  427580:	sub    eax,edx
  427582:	xor    eax,ecx
  427584:	cmp    eax,esi
  427586:	mov    eax,DWORD PTR [ebp-0xc]
  427589:	je     0x42758e
  42758b:	mov    eax,DWORD PTR [ebp-0x18]
  42758e:	pop    edi
  42758f:	xor    eax,ecx
  427591:	pop    esi
  427592:	add    eax,edx
  427594:	pop    ebx
  427595:	leave  
  427596:	ret    0x8
  427599:	push   ebp
  42759a:	mov    ebp,esp
  42759c:	push   ecx
  42759d:	mov    cx,WORD PTR [eax]
  4275a0:	push   esi
  4275a1:	mov    esi,0x3b59
  4275a6:	sub    cx,si
  4275a9:	mov    esi,0x8a96
  4275ae:	xor    cx,si
  4275b1:	mov    esi,0x4e31
  4275b6:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  4275bd:	mov    edx,0xf89c85b9
  4275c2:	cmp    cx,si
  4275c5:	je     0x427624
  4275c7:	push   ebx
  4275c8:	push   edi
  4275c9:	movzx  ecx,cx
  4275cc:	mov    edi,0xffcd8d11
  4275d1:	mov    esi,0x75108a8
  4275d6:	mov    ebx,0x4f95
  4275db:	cmp    cx,bx
  4275de:	jne    0x4275e3
  4275e0:	mov    DWORD PTR [ebp-0x4],edx
  4275e3:	lea    edx,[edi+0x1]
  4275e6:	xor    edx,esi
  4275e8:	mov    edi,edx
  4275ea:	xor    edi,esi
  4275ec:	mov    cx,WORD PTR [eax+edi*2+0x64e5de]
  4275f4:	mov    ebx,0x3b59
  4275f9:	sub    cx,bx
  4275fc:	mov    ebx,0x8a96
  427601:	xor    cx,bx
  427604:	mov    ebx,0x4e31
  427609:	cmp    cx,bx
  42760c:	jne    0x4275d6
  42760e:	mov    ecx,DWORD PTR [ebp-0x4]
  427611:	pop    edi
  427612:	pop    ebx
  427613:	cmp    ecx,0xf89c85b8
  427619:	je     0x427624
  42761b:	xor    ecx,esi
  42761d:	lea    eax,[eax+ecx*2+0x64e5e0]
  427624:	pop    esi
  427625:	leave  
  427626:	ret    
  427627:	push   ebp
  427628:	mov    ebp,esp
  42762a:	push   ecx
  42762b:	push   esi
  42762c:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  427633:	mov    esi,0xf89c85b9
  427638:	call   0x427599
  42763d:	mov    cl,BYTE PTR [eax]
  42763f:	inc    cl
  427641:	xor    cl,0x7b
  427644:	cmp    cl,0x7a
  427647:	je     0x4276ac
  427649:	push   ebx
  42764a:	push   edi
  42764b:	mov    edx,eax
  42764d:	mov    edi,0xffcd8d11
  427652:	mov    ecx,0x75108a8
  427657:	mov    dx,WORD PTR [edx]
  42765a:	mov    ebx,0x3b59
  42765f:	sub    dx,bx
  427662:	mov    ebx,0x8a96
  427667:	xor    dx,bx
  42766a:	mov    ebx,0x4e43
  42766f:	cmp    dx,bx
  427672:	jne    0x427677
  427674:	mov    DWORD PTR [ebp-0x4],esi
  427677:	lea    esi,[edi+0x1]
  42767a:	xor    esi,ecx
  42767c:	mov    edi,esi
  42767e:	xor    edi,ecx
  427680:	lea    edx,[eax+edi*2+0x64e5de]
  427687:	mov    bl,BYTE PTR [edx]
  427689:	inc    bl
  42768b:	xor    bl,0x7b
  42768e:	cmp    bl,0x7a
  427691:	jne    0x427657
  427693:	mov    edx,DWORD PTR [ebp-0x4]
  427696:	pop    edi
  427697:	pop    ebx
  427698:	cmp    edx,0xf89c85b8
  42769e:	je     0x4276ac
  4276a0:	xor    edx,ecx
  4276a2:	xor    ecx,ecx
  4276a4:	mov    WORD PTR [eax+edx*2+0x64e5de],cx
  4276ac:	pop    esi
  4276ad:	leave  
  4276ae:	ret    
  4276af:	push   ebp
  4276b0:	mov    ebp,esp
  4276b2:	push   ecx
  4276b3:	push   esi
  4276b4:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  4276bb:	mov    esi,0xf89c85b9
  4276c0:	call   0x427599
  4276c5:	mov    cx,WORD PTR [eax]
  4276c8:	mov    edx,0x3b59
  4276cd:	sub    cx,dx
  4276d0:	mov    edx,0x8a96
  4276d5:	xor    cx,dx
  4276d8:	mov    edx,0x4e31
  4276dd:	cmp    cx,dx
  4276e0:	je     0x427739
  4276e2:	push   ebx
  4276e3:	push   edi
  4276e4:	movzx  ecx,cx
  4276e7:	mov    edx,0xffcd8d11
  4276ec:	mov    edi,0x75108a8
  4276f1:	mov    ebx,0x4e43
  4276f6:	cmp    cx,bx
  4276f9:	jne    0x4276fe
  4276fb:	mov    DWORD PTR [ebp-0x4],esi
  4276fe:	lea    esi,[edx+0x1]
  427701:	xor    esi,edi
  427703:	mov    edx,esi
  427705:	xor    edx,edi
  427707:	mov    cx,WORD PTR [eax+edx*2+0x64e5de]
  42770f:	mov    ebx,0x3b59
  427714:	sub    cx,bx
  427717:	mov    ebx,0x8a96
  42771c:	xor    cx,bx
  42771f:	mov    ebx,0x4e31
  427724:	cmp    cx,bx
  427727:	jne    0x4276f1
  427729:	cmp    DWORD PTR [ebp-0x4],0xf89c85b8
  427730:	pop    edi
  427731:	pop    ebx
  427732:	je     0x427739
  427734:	xor    eax,eax
  427736:	inc    eax
  427737:	jmp    0x42773b
  427739:	xor    eax,eax
  42773b:	pop    esi
  42773c:	leave  
  42773d:	ret    
  42773e:	push   ebp
  42773f:	mov    ebp,esp
  427741:	push   ecx
  427742:	mov    eax,DWORD PTR [ebp+0x8]
  427745:	movzx  ecx,WORD PTR [eax]
  427748:	push   esi
  427749:	lea    eax,[ecx-0x3b59]
  42774f:	mov    esi,0x8a96
  427754:	push   edi
  427755:	xor    eax,esi
  427757:	mov    edi,0x4e31
  42775c:	mov    DWORD PTR [ebp-0x4],edx
  42775f:	cmp    ax,di
  427762:	je     0x42778f
  427764:	mov    eax,DWORD PTR [ebp+0x8]
  427767:	sub    eax,edx
  427769:	mov    DWORD PTR [ebp+0x8],eax
  42776c:	jmp    0x427771
  42776e:	mov    eax,DWORD PTR [ebp+0x8]
  427771:	mov    WORD PTR [edx],cx
  427774:	add    edx,0x2
  427777:	movzx  edi,WORD PTR [eax+edx*1]
  42777b:	mov    ecx,edi
  42777d:	add    edi,0xffffc4a7
  427783:	xor    edi,esi
  427785:	mov    eax,0x4e31
  42778a:	cmp    di,ax
  42778d:	jne    0x42776e
  42778f:	xor    eax,eax
  427791:	pop    edi
  427792:	mov    WORD PTR [edx],ax
  427795:	mov    eax,DWORD PTR [ebp-0x4]
  427798:	pop    esi
  427799:	leave  
  42779a:	ret    0x4
  42779d:	push   ebp
  42779e:	mov    ebp,esp
  4277a0:	sub    esp,0x18
  4277a3:	mov    DWORD PTR [ebp-0x8],0xf89c85b9
  4277aa:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  4277b1:	mov    ecx,DWORD PTR [ebp-0x8]
  4277b4:	push   esi
  4277b5:	mov    eax,0x75108a8
  4277ba:	xor    ecx,eax
  4277bc:	mov    esi,0x3272ef
  4277c1:	add    ecx,esi
  4277c3:	mov    DWORD PTR [ebp-0x4],ecx
  4277c6:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  4277cd:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4277d4:	push   edi
  4277d5:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  4277dc:	jmp    0x42787d
  4277e1:	mov    ecx,DWORD PTR [ebp-0x4]
  4277e4:	mov    edx,DWORD PTR [ebp+0x10]
  4277e7:	sub    edx,ecx
  4277e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4277ec:	xor    ecx,eax
  4277ee:	add    ecx,esi
  4277f0:	cmp    edx,ecx
  4277f2:	jbe    0x42780f
  4277f4:	mov    edx,DWORD PTR [ebp-0x4]
  4277f7:	add    edx,DWORD PTR [ebp+0x8]
  4277fa:	mov    ecx,DWORD PTR [ebp-0x4]
  4277fd:	add    ecx,DWORD PTR [ebp+0xc]
  427800:	mov    edi,DWORD PTR [ecx]
  427802:	mov    DWORD PTR [edx],edi
  427804:	mov    ecx,DWORD PTR [ecx+0x4]
  427807:	mov    DWORD PTR [edx+0x4],ecx
  42780a:	mov    ecx,DWORD PTR [ebp-0xc]
  42780d:	jmp    0x42785c
  42780f:	mov    ecx,DWORD PTR [ebp-0x4]
  427812:	mov    edx,DWORD PTR [ebp+0x10]
  427815:	sub    edx,ecx
  427817:	mov    ecx,DWORD PTR [ebp-0x10]
  42781a:	xor    ecx,eax
  42781c:	add    ecx,esi
  42781e:	cmp    edx,ecx
  427820:	mov    ecx,DWORD PTR [ebp-0x4]
  427823:	jbe    0x427837
  427825:	add    ecx,DWORD PTR [ebp+0x8]
  427828:	mov    edx,DWORD PTR [ebp-0x4]
  42782b:	add    edx,DWORD PTR [ebp+0xc]
  42782e:	mov    edx,DWORD PTR [edx]
  427830:	mov    DWORD PTR [ecx],edx
  427832:	mov    ecx,DWORD PTR [ebp-0x10]
  427835:	jmp    0x42785c
  427837:	mov    edx,DWORD PTR [ebp+0x10]
  42783a:	sub    edx,ecx
  42783c:	mov    ecx,DWORD PTR [ebp-0x14]
  42783f:	xor    ecx,eax
  427841:	add    ecx,esi
  427843:	cmp    edx,ecx
  427845:	mov    ecx,DWORD PTR [ebp-0x4]
  427848:	jbe    0x42786d
  42784a:	add    ecx,DWORD PTR [ebp+0x8]
  42784d:	mov    edx,DWORD PTR [ebp-0x4]
  427850:	add    edx,DWORD PTR [ebp+0xc]
  427853:	mov    dx,WORD PTR [edx]
  427856:	mov    WORD PTR [ecx],dx
  427859:	mov    ecx,DWORD PTR [ebp-0x14]
  42785c:	mov    edx,DWORD PTR [ebp-0x4]
  42785f:	xor    ecx,eax
  427861:	lea    ecx,[ecx+edx*1+0x3272ef]
  427868:	mov    DWORD PTR [ebp-0x4],ecx
  42786b:	jmp    0x42787d
  42786d:	add    ecx,DWORD PTR [ebp+0x8]
  427870:	mov    edx,DWORD PTR [ebp-0x4]
  427873:	add    edx,DWORD PTR [ebp+0xc]
  427876:	mov    dl,BYTE PTR [edx]
  427878:	mov    BYTE PTR [ecx],dl
  42787a:	inc    DWORD PTR [ebp-0x4]
  42787d:	mov    ecx,DWORD PTR [ebp-0x18]
  427880:	mov    edx,DWORD PTR [ebp+0x10]
  427883:	xor    ecx,eax
  427885:	add    ecx,esi
  427887:	imul   ecx,edx
  42788a:	mov    edx,DWORD PTR [ebp-0x8]
  42788d:	mov    edi,DWORD PTR [ebp-0x4]
  427890:	xor    edx,eax
  427892:	lea    edx,[edx+edi*1+0x3272ef]
  427899:	cmp    edx,ecx
  42789b:	jb     0x4277e1
  4278a1:	pop    edi
  4278a2:	pop    esi
  4278a3:	leave  
  4278a4:	ret    0xc
  4278a7:	push   ebp
  4278a8:	mov    ebp,esp
  4278aa:	sub    esp,0xc
  4278ad:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  4278b4:	push   esi
  4278b5:	mov    esi,eax
  4278b7:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  4278be:	mov    edx,DWORD PTR [ebp-0x4]
  4278c1:	mov    eax,0x75108a8
  4278c6:	xor    edx,eax
  4278c8:	mov    ecx,0x3272ef
  4278cd:	add    edx,ecx
  4278cf:	cmp    esi,edx
  4278d1:	je     0x427913
  4278d3:	push   ebx
  4278d4:	push   edi
  4278d5:	mov    edx,DWORD PTR [ebp-0x8]
  4278d8:	mov    ebx,DWORD PTR [ebp+0x8]
  4278db:	xor    edx,eax
  4278dd:	mov    edi,0xffcd8d11
  4278e2:	sub    edi,edx
  4278e4:	add    esi,edi
  4278e6:	lea    edx,[esi-0x3272ef]
  4278ec:	xor    edx,eax
  4278ee:	mov    DWORD PTR [ebp-0xc],edx
  4278f1:	mov    edx,DWORD PTR [ebp-0x4]
  4278f4:	mov    edi,DWORD PTR [ebp-0xc]
  4278f7:	xor    dl,0xa8
  4278fa:	sub    dl,0x11
  4278fd:	xor    edi,eax
  4278ff:	mov    BYTE PTR [edi+ebx*1+0x3272ef],dl
  427906:	mov    edx,DWORD PTR [ebp-0x4]
  427909:	xor    edx,eax
  42790b:	add    edx,ecx
  42790d:	cmp    esi,edx
  42790f:	jne    0x4278d5
  427911:	pop    edi
  427912:	pop    ebx
  427913:	pop    esi
  427914:	leave  
  427915:	ret    0x4
  427918:	push   ebp
  427919:	mov    ebp,esp
  42791b:	sub    esp,0x21c
  427921:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  427928:	mov    DWORD PTR [ebp-0x14],0xf89c85ba
  42792f:	mov    eax,DWORD PTR [ebp+0x10]
  427932:	mov    eax,DWORD PTR [ebp-0x4]
  427935:	mov    ecx,DWORD PTR [ebp+0x8]
  427938:	push   esi
  427939:	push   edi
  42793a:	mov    edi,0x75108a8
  42793f:	xor    eax,edi
  427941:	mov    esi,0x3272ef
  427946:	add    eax,esi
  427948:	cmp    eax,ecx
  42794a:	mov    eax,DWORD PTR [ebp-0x4]
  42794d:	jne    0x427958
  42794f:	xor    eax,edi
  427951:	add    eax,esi
  427953:	jmp    0x427a04
  427958:	mov    ecx,DWORD PTR [ebp+0xc]
  42795b:	xor    eax,edi
  42795d:	add    eax,esi
  42795f:	cmp    eax,ecx
  427961:	jne    0x427968
  427963:	mov    eax,DWORD PTR [ebp-0x4]
  427966:	jmp    0x42794f
  427968:	lea    eax,[ebp-0x21c]
  42796e:	mov    DWORD PTR [ebp-0x8],eax
  427971:	mov    eax,DWORD PTR [ebp+0xc]
  427974:	mov    DWORD PTR [ebp-0x10],eax
  427977:	mov    eax,DWORD PTR [ebp-0x4]
  42797a:	xor    eax,edi
  42797c:	add    eax,esi
  42797e:	mov    DWORD PTR [ebp+0x10],eax
  427981:	mov    eax,DWORD PTR [ebp+0xc]
  427984:	push   ebx
  427985:	call   0x4276af
  42798a:	mov    ebx,eax
  42798c:	mov    eax,DWORD PTR [ebp+0x8]
  42798f:	mov    eax,DWORD PTR [eax+0x14]
  427992:	jmp    0x4279ec
  427994:	mov    eax,DWORD PTR [ebp+0xc]
  427997:	sub    eax,0x8
  42799a:	mov    DWORD PTR [ebp-0xc],eax
  42799d:	mov    eax,DWORD PTR [ebp-0xc]
  4279a0:	mov    eax,DWORD PTR [eax+0x28]
  4279a3:	call   0x427599
  4279a8:	mov    DWORD PTR [ebp+0x10],eax
  4279ab:	push   DWORD PTR [ebp+0x10]
  4279ae:	mov    edx,DWORD PTR [ebp-0x8]
  4279b1:	call   0x42773e
  4279b6:	mov    eax,DWORD PTR [ebp-0x4]
  4279b9:	xor    eax,edi
  4279bb:	add    eax,esi
  4279bd:	cmp    eax,ebx
  4279bf:	jne    0x4279c9
  4279c1:	mov    eax,DWORD PTR [ebp-0x8]
  4279c4:	call   0x427627
  4279c9:	mov    eax,DWORD PTR [ebp-0x14]
  4279cc:	xor    eax,edi
  4279ce:	add    eax,esi
  4279d0:	push   eax
  4279d1:	push   DWORD PTR [ebp-0x10]
  4279d4:	mov    eax,DWORD PTR [ebp-0x8]
  4279d7:	call   0x427353
  4279dc:	mov    ecx,DWORD PTR [ebp-0x4]
  4279df:	xor    ecx,edi
  4279e1:	add    ecx,esi
  4279e3:	cmp    eax,ecx
  4279e5:	je     0x427a0a
  4279e7:	mov    eax,DWORD PTR [ebp+0xc]
  4279ea:	mov    eax,DWORD PTR [eax]
  4279ec:	mov    DWORD PTR [ebp+0xc],eax
  4279ef:	mov    eax,DWORD PTR [ebp+0x8]
  4279f2:	mov    ecx,DWORD PTR [ebp+0xc]
  4279f5:	add    eax,0x14
  4279f8:	cmp    ecx,eax
  4279fa:	jne    0x427994
  4279fc:	mov    eax,DWORD PTR [ebp-0x4]
  4279ff:	xor    eax,edi
  427a01:	add    eax,esi
  427a03:	pop    ebx
  427a04:	pop    edi
  427a05:	pop    esi
  427a06:	leave  
  427a07:	ret    0xc
  427a0a:	mov    eax,DWORD PTR [ebp-0xc]
  427a0d:	mov    eax,DWORD PTR [eax+0x18]
  427a10:	jmp    0x427a03
  427a12:	push   ebp
  427a13:	mov    ebp,esp
  427a15:	mov    eax,DWORD PTR [ebp+0xc]
  427a18:	sub    esp,0x10
  427a1b:	cmp    DWORD PTR [ebp+0x8],0x0
  427a1f:	push   ebx
  427a20:	push   esi
  427a21:	push   edi
  427a22:	je     0x427ad7
  427a28:	test   eax,eax
  427a2a:	je     0x427ad7
  427a30:	movzx  eax,WORD PTR [eax+0x20]
  427a34:	mov    ecx,eax
  427a36:	mov    DWORD PTR [ebp-0x10],eax
  427a39:	xor    edx,edx
  427a3b:	and    DWORD PTR [ebp-0x8],edx
  427a3e:	mov    eax,0x8a96
  427a43:	xor    ecx,eax
  427a45:	add    ecx,0x3b59
  427a4b:	mov    DWORD PTR [ebp-0xc],ecx
  427a4e:	and    DWORD PTR [ebp-0x4],0x0
  427a52:	xor    ecx,ecx
  427a54:	push   0x78
  427a56:	pop    edi
  427a57:	cmp    cx,WORD PTR [ebp-0xc]
  427a5b:	jae    0x427ac1
  427a5d:	lea    esi,[edx-0x3b59]
  427a63:	xor    esi,eax
  427a65:	movzx  ecx,WORD PTR [ebp-0x4]
  427a69:	mov    ebx,DWORD PTR [ebp+0xc]
  427a6c:	lea    ecx,[ebx+ecx*4]
  427a6f:	cmp    WORD PTR [ecx+0x2],si
  427a73:	jne    0x427aac
  427a75:	movzx  ecx,WORD PTR [ecx]
  427a78:	mov    edi,0x4e31
  427a7d:	cmp    cx,di
  427a80:	jne    0x427a8e
  427a82:	mov    ebx,DWORD PTR [ebp+0x8]
  427a85:	movzx  edi,dx
  427a88:	cmp    BYTE PTR [edi+ebx*1],0x0
  427a8c:	je     0x427abb
  427a8e:	mov    ebx,DWORD PTR [ebp+0x8]
  427a91:	movzx  edi,dx
  427a94:	movsx  di,BYTE PTR [edi+ebx*1]
  427a99:	mov    ebx,0x3b59
  427a9e:	sub    di,bx
  427aa1:	xor    di,ax
  427aa4:	cmp    cx,di
  427aa7:	je     0x427abb
  427aa9:	push   0x7a
  427aab:	pop    edi
  427aac:	inc    DWORD PTR [ebp-0x4]
  427aaf:	mov    cx,WORD PTR [ebp-0xc]
  427ab3:	cmp    WORD PTR [ebp-0x4],cx
  427ab7:	jb     0x427a65
  427ab9:	jmp    0x427ac1
  427abb:	inc    DWORD PTR [ebp-0x8]
  427abe:	push   0x79
  427ac0:	pop    edi
  427ac1:	mov    esi,DWORD PTR [ebp+0x8]
  427ac4:	movzx  ecx,dx
  427ac7:	cmp    BYTE PTR [ecx+esi*1],0x0
  427acb:	je     0x427ae0
  427acd:	inc    edx
  427ace:	cmp    edi,0x7a
  427ad1:	jne    0x427a4e
  427ad7:	xor    eax,eax
  427ad9:	pop    edi
  427ada:	pop    esi
  427adb:	pop    ebx
  427adc:	leave  
  427add:	ret    0x8
  427ae0:	mov    ecx,DWORD PTR [ebp-0x8]
  427ae3:	add    ecx,0xffffc4a7
  427ae9:	xor    cx,ax
  427aec:	xor    eax,eax
  427aee:	cmp    cx,WORD PTR [ebp-0x10]
  427af2:	sete   al
  427af5:	jmp    0x427ad9
  427af7:	push   ebp
  427af8:	mov    ebp,esp
  427afa:	sub    esp,0x50
  427afd:	push   edi
  427afe:	mov    edi,eax
  427b00:	mov    eax,DWORD PTR [edi+0x1a8]
  427b06:	cmp    DWORD PTR [eax],0x0
  427b09:	jne    0x427b12
  427b0b:	xor    eax,eax
  427b0d:	jmp    0x427c43
  427b12:	push   DWORD PTR [ebp+0x8]
  427b15:	push   0x2c
  427b17:	pop    eax
  427b18:	call   0x4278a7
  427b1d:	mov    edx,DWORD PTR [edi+0x1ac]
  427b23:	lea    eax,[edi+0x22]
  427b26:	mov    DWORD PTR [ebp-0x4c],eax
  427b29:	lea    eax,[edi+0x44]
  427b2c:	mov    DWORD PTR [ebp-0x48],eax
  427b2f:	lea    eax,[edi+0x66]
  427b32:	mov    DWORD PTR [ebp-0x44],eax
  427b35:	lea    eax,[edi+0x88]
  427b3b:	mov    DWORD PTR [ebp-0x40],eax
  427b3e:	lea    eax,[edi+0xaa]
  427b44:	mov    DWORD PTR [ebp-0x3c],eax
  427b47:	lea    eax,[edi+0xcc]
  427b4d:	mov    DWORD PTR [ebp-0x38],eax
  427b50:	lea    eax,[edi+0xee]
  427b56:	mov    DWORD PTR [ebp-0x34],eax
  427b59:	lea    eax,[edi+0x110]
  427b5f:	mov    DWORD PTR [ebp-0x30],eax
  427b62:	lea    eax,[edi+0x132]
  427b68:	mov    DWORD PTR [ebp-0x2c],eax
  427b6b:	lea    eax,[edi+0x154]
  427b71:	push   edi
  427b72:	mov    DWORD PTR [ebp-0x50],edi
  427b75:	mov    DWORD PTR [ebp-0x28],eax
  427b78:	call   0x427c77
  427b7d:	push   eax
  427b7e:	mov    eax,DWORD PTR [edi+0x1a8]
  427b84:	push   DWORD PTR [eax]
  427b86:	call   0x427918
  427b8b:	mov    DWORD PTR [ebp-0x10],eax
  427b8e:	test   eax,eax
  427b90:	je     0x427c43
  427b96:	mov    ecx,DWORD PTR [eax+0x3c]
  427b99:	push   ebx
  427b9a:	push   esi
  427b9b:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  427b9f:	add    esi,eax
  427ba1:	mov    edi,DWORD PTR [esi+0x24]
  427ba4:	mov    ecx,DWORD PTR [esi+0x1c]
  427ba7:	mov    edx,DWORD PTR [esi+0x20]
  427baa:	mov    ebx,DWORD PTR [esi+0x18]
  427bad:	add    edi,eax
  427baf:	mov    DWORD PTR [ebp-0x20],edi
  427bb2:	mov    edi,DWORD PTR [esi+0x14]
  427bb5:	add    ecx,eax
  427bb7:	add    edx,eax
  427bb9:	mov    DWORD PTR [ebp-0xc],ecx
  427bbc:	mov    DWORD PTR [ebp-0x1c],edx
  427bbf:	mov    DWORD PTR [ebp-0x8],edi
  427bc2:	cmp    edi,ebx
  427bc4:	ja     0x427bc9
  427bc6:	mov    DWORD PTR [ebp-0x8],ebx
  427bc9:	xor    ebx,ebx
  427bcb:	mov    DWORD PTR [ebp-0x18],ebx
  427bce:	cmp    DWORD PTR [ebp-0x8],ebx
  427bd1:	jbe    0x427c41
  427bd3:	jmp    0x427bd8
  427bd5:	mov    edx,DWORD PTR [ebp-0x1c]
  427bd8:	mov    edi,DWORD PTR [ebp-0x20]
  427bdb:	movzx  edi,WORD PTR [edi+ebx*2]
  427bdf:	cmp    ebx,DWORD PTR [esi+0x18]
  427be2:	jae    0x427c41
  427be4:	cmp    edi,DWORD PTR [esi+0x14]
  427be7:	jae    0x427c41
  427be9:	mov    ebx,DWORD PTR [edx+ebx*4]
  427bec:	mov    edx,DWORD PTR [ebp+0x8]
  427bef:	mov    edi,DWORD PTR [ecx+edi*4]
  427bf2:	mov    DWORD PTR [ebp-0x4],edx
  427bf5:	lea    edx,[ebp-0x50]
  427bf8:	add    ebx,eax
  427bfa:	add    edi,eax
  427bfc:	sub    edx,DWORD PTR [ebp+0x8]
  427bff:	mov    DWORD PTR [ebp-0x14],0xb
  427c06:	mov    DWORD PTR [ebp-0x24],edx
  427c09:	mov    edx,DWORD PTR [ebp-0x4]
  427c0c:	cmp    DWORD PTR [edx],0x0
  427c0f:	jne    0x427c2c
  427c11:	mov    eax,DWORD PTR [ebp-0x24]
  427c14:	push   DWORD PTR [eax+edx*1]
  427c17:	push   ebx
  427c18:	call   0x427a12
  427c1d:	mov    ecx,DWORD PTR [ebp-0xc]
  427c20:	test   eax,eax
  427c22:	je     0x427c29
  427c24:	mov    eax,DWORD PTR [ebp-0x4]
  427c27:	mov    DWORD PTR [eax],edi
  427c29:	mov    eax,DWORD PTR [ebp-0x10]
  427c2c:	add    DWORD PTR [ebp-0x4],0x4
  427c30:	dec    DWORD PTR [ebp-0x14]
  427c33:	jne    0x427c09
  427c35:	mov    ebx,DWORD PTR [ebp-0x18]
  427c38:	inc    ebx
  427c39:	mov    DWORD PTR [ebp-0x18],ebx
  427c3c:	cmp    ebx,DWORD PTR [ebp-0x8]
  427c3f:	jb     0x427bd5
  427c41:	pop    esi
  427c42:	pop    ebx
  427c43:	pop    edi
  427c44:	leave  
  427c45:	ret    0x4
  427c48:	push   ebp
  427c49:	mov    ebp,esp
  427c4b:	mov    eax,DWORD PTR [ebp+0x8]
  427c4e:	push   esi
  427c4f:	push   DWORD PTR [eax+0x1e0]
  427c55:	lea    esi,[eax+0x198]
  427c5b:	mov    eax,DWORD PTR [ebp+0x8]
  427c5e:	call   0x427af7
  427c63:	mov    ecx,DWORD PTR [esi]
  427c65:	mov    DWORD PTR [ecx],eax
  427c67:	mov    eax,DWORD PTR [esi]
  427c69:	xor    ecx,ecx
  427c6b:	cmp    DWORD PTR [eax],ecx
  427c6d:	pop    esi
  427c6e:	setne  cl
  427c71:	mov    eax,ecx
  427c73:	pop    ebp
  427c74:	ret    0x4
  427c77:	mov    ecx,DWORD PTR [edi+0x188]
  427c7d:	push   ebx
  427c7e:	jmp    0x427c93
  427c80:	xor    eax,0x8a96
  427c85:	add    eax,0x3b59
  427c8a:	mov    WORD PTR [ecx],ax
  427c8d:	add    ecx,0x2
  427c90:	add    edx,0x2
  427c93:	movzx  eax,WORD PTR [edx]
  427c96:	mov    ebx,0x4e31
  427c9b:	cmp    ax,bx
  427c9e:	jne    0x427c80
  427ca0:	xor    eax,eax
  427ca2:	mov    WORD PTR [ecx],ax
  427ca5:	mov    eax,DWORD PTR [edi+0x188]
  427cab:	pop    ebx
  427cac:	ret    
  427cad:	push   edi
  427cae:	mov    edi,eax
  427cb0:	mov    eax,DWORD PTR [esi+0x188]
  427cb6:	shl    edi,0x6
  427cb9:	add    eax,edi
  427cbb:	jmp    0x427cc6
  427cbd:	xor    cl,0x7b
  427cc0:	dec    cl
  427cc2:	mov    BYTE PTR [eax],cl
  427cc4:	inc    eax
  427cc5:	inc    edx
  427cc6:	mov    cl,BYTE PTR [edx]
  427cc8:	cmp    cl,0x7a
  427ccb:	jne    0x427cbd
  427ccd:	mov    BYTE PTR [eax],0x0
  427cd0:	mov    eax,DWORD PTR [esi+0x188]
  427cd6:	add    eax,edi
  427cd8:	pop    edi
  427cd9:	ret    
  427cda:	push   ebp
  427cdb:	mov    ebp,esp
  427cdd:	sub    esp,0x14
  427ce0:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  427ce7:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  427cee:	mov    eax,DWORD PTR [ebx]
  427cf0:	mov    DWORD PTR [ebp-0x8],eax
  427cf3:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  427cfa:	push   esi
  427cfb:	push   edi
  427cfc:	mov    DWORD PTR [ebp-0x14],0xead71899
  427d03:	mov    edi,DWORD PTR [ebp-0x4]
  427d06:	mov    ecx,DWORD PTR [ebp-0x10]
  427d09:	mov    eax,0x75108a8
  427d0e:	xor    edi,eax
  427d10:	mov    edx,0x3272ef
  427d15:	xor    ecx,eax
  427d17:	add    edi,edx
  427d19:	add    ecx,edx
  427d1b:	imul   edi,ecx
  427d1e:	jmp    0x427d66
  427d20:	mov    ecx,DWORD PTR [ebp-0x8]
  427d23:	mov    esi,DWORD PTR [ebp-0x4]
  427d26:	xor    ecx,eax
  427d28:	xor    esi,eax
  427d2a:	add    ecx,edx
  427d2c:	add    esi,edx
  427d2e:	test   esi,ecx
  427d30:	mov    esi,DWORD PTR [ebp-0x8]
  427d33:	mov    ecx,DWORD PTR [ebp-0x4]
  427d36:	je     0x427d4d
  427d38:	xor    ecx,eax
  427d3a:	xor    esi,eax
  427d3c:	add    ecx,edx
  427d3e:	add    esi,edx
  427d40:	shr    esi,cl
  427d42:	mov    ecx,DWORD PTR [ebp-0x14]
  427d45:	xor    ecx,eax
  427d47:	add    ecx,edx
  427d49:	xor    esi,ecx
  427d4b:	jmp    0x427d57
  427d4d:	xor    esi,eax
  427d4f:	xor    ecx,eax
  427d51:	add    esi,edx
  427d53:	add    ecx,edx
  427d55:	shr    esi,cl
  427d57:	mov    DWORD PTR [ebp-0x8],esi
  427d5a:	mov    ecx,DWORD PTR [ebp-0x4]
  427d5d:	xor    ecx,eax
  427d5f:	lea    edi,[edi+ecx*1+0x3272ef]
  427d66:	mov    ecx,DWORD PTR [ebp-0xc]
  427d69:	mov    esi,DWORD PTR [ebp-0x4]
  427d6c:	xor    esi,eax
  427d6e:	xor    ecx,eax
  427d70:	sub    ecx,esi
  427d72:	cmp    edi,ecx
  427d74:	jbe    0x427d20
  427d76:	mov    eax,DWORD PTR [ebp-0x8]
  427d79:	pop    edi
  427d7a:	mov    DWORD PTR [ebx],eax
  427d7c:	mov    eax,DWORD PTR [ebp-0x8]
  427d7f:	pop    esi
  427d80:	leave  
  427d81:	ret    
  427d82:	push   ebp
  427d83:	mov    ebp,esp
  427d85:	sub    esp,0x38
  427d88:	push   ebx
  427d89:	mov    ebx,0xf89c85b9
  427d8e:	mov    DWORD PTR [ebp-0x4],ebx
  427d91:	lea    ecx,[ebx+0x1]
  427d94:	mov    DWORD PTR [ebp-0x24],ecx
  427d97:	mov    eax,DWORD PTR [ebp-0x4]
  427d9a:	mov    edx,DWORD PTR [ebp+0x8]
  427d9d:	push   esi
  427d9e:	mov    esi,0x75108a8
  427da3:	xor    eax,esi
  427da5:	push   edi
  427da6:	mov    edi,0x3272ef
  427dab:	add    eax,edi
  427dad:	cmp    edx,eax
  427daf:	mov    eax,DWORD PTR [ebp-0x4]
  427db2:	je     0x427f16
  427db8:	mov    edx,DWORD PTR [ebp+0xc]
  427dbb:	xor    eax,esi
  427dbd:	add    eax,edi
  427dbf:	cmp    edx,eax
  427dc1:	je     0x427f13
  427dc7:	mov    eax,DWORD PTR [ebp+0x10]
  427dca:	mov    edx,DWORD PTR [ebp+0xc]
  427dcd:	mov    DWORD PTR [ebp-0x14],eax
  427dd0:	mov    eax,DWORD PTR [ebp+0x8]
  427dd3:	mov    DWORD PTR [ebp-0x18],0xf89c853e
  427dda:	mov    DWORD PTR [ebp-0xc],eax
  427ddd:	lea    eax,[ebx+0x2]
  427de0:	mov    DWORD PTR [ebp-0x1c],eax
  427de3:	mov    DWORD PTR [ebp-0x10],ebx
  427de6:	mov    DWORD PTR [ebp+0xc],ecx
  427de9:	mov    DWORD PTR [ebp+0x10],eax
  427dec:	mov    eax,DWORD PTR [ebp+0xc]
  427def:	xor    eax,esi
  427df1:	mov    DWORD PTR [ebp-0x20],edx
  427df4:	sub    edx,eax
  427df6:	sub    edx,edi
  427df8:	mov    DWORD PTR [ebp+0x8],edx
  427dfb:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  427e02:	jmp    0x427f03
  427e07:	mov    eax,DWORD PTR [ebp+0xc]
  427e0a:	mov    ecx,DWORD PTR [ebp+0xc]
  427e0d:	xor    eax,esi
  427e0f:	xor    ecx,esi
  427e11:	lea    ecx,[eax+ecx*1+0x64e5de]
  427e18:	mov    eax,DWORD PTR [ebp+0x8]
  427e1b:	xor    edx,edx
  427e1d:	div    ecx
  427e1f:	mov    eax,DWORD PTR [ebp+0x10]
  427e22:	mov    ecx,DWORD PTR [ebp+0xc]
  427e25:	xor    eax,esi
  427e27:	xor    ecx,esi
  427e29:	sub    eax,ecx
  427e2b:	cmp    edx,eax
  427e2d:	jne    0x427ec2
  427e33:	mov    eax,DWORD PTR [ebp+0x8]
  427e36:	mov    ecx,DWORD PTR [ebp-0xc]
  427e39:	mov    dl,BYTE PTR [eax+ecx*1]
  427e3c:	mov    eax,DWORD PTR [ebp-0x10]
  427e3f:	mov    ecx,DWORD PTR [ebp-0x8]
  427e42:	xor    eax,esi
  427e44:	xor    ecx,esi
  427e46:	add    eax,edi
  427e48:	add    ecx,edi
  427e4a:	cmp    eax,ecx
  427e4c:	jae    0x427e94
  427e4e:	lea    ecx,[eax-0x3272ef]
  427e54:	mov    DWORD PTR [ebp-0x4],ecx
  427e57:	mov    ebx,DWORD PTR [ebp-0x4]
  427e5a:	xor    ebx,esi
  427e5c:	add    ebx,0x7f55d8fb
  427e62:	lea    ecx,[ebp+eax*4-0x38]
  427e66:	mov    DWORD PTR [ecx],ebx
  427e68:	mov    ebx,DWORD PTR [ecx]
  427e6a:	cmp    ebx,0x244ecb9c
  427e70:	jbe    0x427e7a
  427e72:	add    DWORD PTR [ecx],0x405fcdd
  427e78:	jmp    0x427e80
  427e7a:	add    DWORD PTR [ecx],0xfdaf4323
  427e80:	mov    ecx,DWORD PTR [ebp-0x8]
  427e83:	xor    ecx,esi
  427e85:	inc    eax
  427e86:	inc    DWORD PTR [ebp-0x4]
  427e89:	add    ecx,edi
  427e8b:	cmp    eax,ecx
  427e8d:	jb     0x427e57
  427e8f:	mov    ebx,0xf89c85b9
  427e94:	cmp    DWORD PTR [ebp-0x14],0x0
  427e98:	jne    0x427ea1
  427e9a:	xor    dl,0x7b
  427e9d:	dec    dl
  427e9f:	jmp    0x427eb7
  427ea1:	mov    eax,DWORD PTR [ebp-0x18]
  427ea4:	xor    al,0xa8
  427ea6:	mov    cl,0x11
  427ea8:	sub    cl,al
  427eaa:	add    dl,cl
  427eac:	mov    ecx,DWORD PTR [ebp-0x1c]
  427eaf:	xor    cl,0xa8
  427eb2:	sub    cl,0x11
  427eb5:	ror    dl,cl
  427eb7:	xor    eax,eax
  427eb9:	mov    eax,DWORD PTR [ebp+0x8]
  427ebc:	mov    ecx,DWORD PTR [ebp-0xc]
  427ebf:	mov    BYTE PTR [eax+ecx*1],dl
  427ec2:	mov    eax,DWORD PTR [ebp+0x8]
  427ec5:	mov    ecx,DWORD PTR [ebp-0x10]
  427ec8:	sub    eax,edi
  427eca:	xor    eax,esi
  427ecc:	cmp    eax,ecx
  427ece:	jne    0x427ef1
  427ed0:	mov    eax,DWORD PTR [ebp+0x10]
  427ed3:	mov    ecx,DWORD PTR [ebp+0xc]
  427ed6:	xor    eax,esi
  427ed8:	xor    ecx,esi
  427eda:	sub    eax,ecx
  427edc:	mov    ecx,DWORD PTR [ebp-0x20]
  427edf:	sub    eax,edi
  427ee1:	xor    eax,esi
  427ee3:	mov    DWORD PTR [ebp+0x10],eax
  427ee6:	mov    eax,DWORD PTR [ebp+0xc]
  427ee9:	xor    eax,esi
  427eeb:	sub    ecx,eax
  427eed:	sub    ecx,edi
  427eef:	jmp    0x427f00
  427ef1:	mov    eax,DWORD PTR [ebp+0xc]
  427ef4:	xor    eax,esi
  427ef6:	mov    ecx,0xffcd8d11
  427efb:	sub    ecx,eax
  427efd:	add    ecx,DWORD PTR [ebp+0x8]
  427f00:	mov    DWORD PTR [ebp+0x8],ecx
  427f03:	mov    eax,DWORD PTR [ebp+0x10]
  427f06:	cmp    eax,ebx
  427f08:	jne    0x427e07
  427f0e:	mov    eax,DWORD PTR [ebp-0x24]
  427f11:	jmp    0x427f16
  427f13:	mov    eax,DWORD PTR [ebp-0x4]
  427f16:	xor    eax,esi
  427f18:	add    eax,edi
  427f1a:	pop    edi
  427f1b:	pop    esi
  427f1c:	pop    ebx
  427f1d:	leave  
  427f1e:	ret    0xc
  427f21:	push   ebp
  427f22:	mov    ebp,esp
  427f24:	sub    esp,0x420
  427f2a:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  427f31:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  427f38:	mov    DWORD PTR [ebp-0x18],0xf89c86b9
  427f3f:	push   ebx
  427f40:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  427f47:	mov    eax,DWORD PTR [ebp-0x14]
  427f4a:	push   esi
  427f4b:	mov    esi,0x75108a8
  427f50:	push   edi
  427f51:	xor    eax,esi
  427f53:	mov    edi,0x3272ef
  427f58:	add    eax,edi
  427f5a:	mov    DWORD PTR [ebp-0x8],eax
  427f5d:	mov    DWORD PTR [ebp-0x20],0xf89c85b1
  427f64:	mov    DWORD PTR [ebp-0x4],0xead71899
  427f6b:	mov    DWORD PTR [ebp-0x10],0x8
  427f72:	mov    ecx,ecx
  427f74:	mov    eax,DWORD PTR [ebp-0xc]
  427f77:	mov    ecx,DWORD PTR [ebp-0x14]
  427f7a:	xor    eax,esi
  427f7c:	xor    ecx,esi
  427f7e:	add    eax,edi
  427f80:	add    ecx,edi
  427f82:	imul   eax,ecx
  427f85:	jmp    0x427fb8
  427f87:	mov    eax,DWORD PTR [ebp-0x4]
  427f8a:	sub    eax,edi
  427f8c:	xor    eax,esi
  427f8e:	mov    DWORD PTR [ebp-0x8],eax
  427f91:	lea    ebx,[ebp-0x8]
  427f94:	call   0x427cda
  427f99:	mov    DWORD PTR [ebp-0x8],eax
  427f9c:	mov    eax,DWORD PTR [ebp-0x8]
  427f9f:	mov    ecx,DWORD PTR [ebp-0x4]
  427fa2:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  427fa9:	mov    eax,DWORD PTR [ebp-0xc]
  427fac:	mov    ecx,DWORD PTR [ebp-0x4]
  427faf:	xor    eax,esi
  427fb1:	lea    eax,[eax+ecx*1+0x3272ef]
  427fb8:	mov    DWORD PTR [ebp-0x4],eax
  427fbb:	mov    eax,DWORD PTR [ebp-0x18]
  427fbe:	mov    ecx,DWORD PTR [ebp-0xc]
  427fc1:	xor    ecx,esi
  427fc3:	xor    eax,esi
  427fc5:	sub    eax,ecx
  427fc7:	mov    ecx,DWORD PTR [ebp-0x4]
  427fca:	cmp    ecx,eax
  427fcc:	jbe    0x427f87
  427fce:	mov    eax,DWORD PTR [ebp-0x1c]
  427fd1:	xor    eax,esi
  427fd3:	add    eax,edi
  427fd5:	mov    DWORD PTR [ebp-0x8],eax
  427fd8:	mov    DWORD PTR [ebp-0x18],0xf89c86b8
  427fdf:	mov    ebx,ebx
  427fe1:	jmp    0x428044
  427fe3:	mov    ecx,DWORD PTR [ebp-0x20]
  427fe6:	mov    eax,DWORD PTR [ebp-0x8]
  427fe9:	xor    ecx,esi
  427feb:	add    ecx,edi
  427fed:	shr    eax,cl
  427fef:	mov    DWORD PTR [ebp-0x4],eax
  427ff2:	mov    eax,DWORD PTR [ebp+0x8]
  427ff5:	mov    cl,BYTE PTR [eax]
  427ff7:	mov    BYTE PTR [ebp+0xb],cl
  427ffa:	mov    cl,BYTE PTR [ebp+0xb]
  427ffd:	mov    edx,DWORD PTR [ebp-0x8]
  428000:	movzx  ecx,cl
  428003:	xor    ecx,edx
  428005:	mov    DWORD PTR [ebp+0x8],ecx
  428008:	mov    ecx,DWORD PTR [ebp-0x18]
  42800b:	mov    edx,DWORD PTR [ebp+0x8]
  42800e:	xor    ecx,esi
  428010:	add    ecx,edi
  428012:	and    ecx,edx
  428014:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  42801b:	mov    edx,DWORD PTR [ebp-0x4]
  42801e:	xor    ecx,edx
  428020:	mov    DWORD PTR [ebp-0x8],ecx
  428023:	mov    ecx,DWORD PTR [ebp-0xc]
  428026:	xor    ecx,esi
  428028:	lea    eax,[eax+ecx*1+0x3272ef]
  42802f:	mov    DWORD PTR [ebp+0x8],eax
  428032:	mov    eax,DWORD PTR [ebp-0xc]
  428035:	xor    eax,esi
  428037:	mov    ecx,0xffcd8d11
  42803c:	sub    ecx,eax
  42803e:	add    ecx,DWORD PTR [ebp-0x10]
  428041:	mov    DWORD PTR [ebp-0x10],ecx
  428044:	mov    eax,DWORD PTR [ebp-0x14]
  428047:	mov    ecx,DWORD PTR [ebp-0x10]
  42804a:	xor    eax,esi
  42804c:	add    eax,edi
  42804e:	cmp    ecx,eax
  428050:	jne    0x427fe3
  428052:	mov    eax,DWORD PTR [ebp-0x1c]
  428055:	mov    ecx,DWORD PTR [ebp-0x8]
  428058:	xor    eax,esi
  42805a:	add    eax,edi
  42805c:	pop    edi
  42805d:	pop    esi
  42805e:	xor    eax,ecx
  428060:	pop    ebx
  428061:	leave  
  428062:	ret    0x4
  428065:	push   ebp
  428066:	mov    ebp,esp
  428068:	mov    eax,DWORD PTR [ebp+0x1c]
  42806b:	mov    ecx,DWORD PTR [ebp+0x8]
  42806e:	mov    edx,DWORD PTR [ebp+0x10]
  428071:	mov    eax,DWORD PTR [eax+0x190]
  428077:	mov    eax,DWORD PTR [eax]
  428079:	sub    esp,0x64
  42807c:	push   ebx
  42807d:	push   esi
  42807e:	push   edi
  42807f:	mov    edi,0x75108a8
  428084:	xor    ecx,edi
  428086:	mov    ebx,0x3272ef
  42808b:	add    ecx,ebx
  42808d:	cmp    ecx,edx
  42808f:	jne    0x4280a0
  428091:	or     DWORD PTR ds:0x3750c3f,0x4263eb20
  42809b:	jmp    0x42859c
  4280a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4280a3:	mov    esi,DWORD PTR [ebp+0x14]
  4280a6:	mov    edx,DWORD PTR [esi]
  4280a8:	xor    ecx,edi
  4280aa:	add    ecx,ebx
  4280ac:	cmp    edx,ecx
  4280ae:	je     0x428557
  4280b4:	mov    ecx,DWORD PTR [ebp+0x1c]
  4280b7:	mov    DWORD PTR [ebp-0x1c],eax
  4280ba:	mov    DWORD PTR [ebp+0x1c],ecx
  4280bd:	mov    ecx,DWORD PTR [ebp+0x18]
  4280c0:	mov    eax,DWORD PTR [esi]
  4280c2:	mov    DWORD PTR [ebp-0x20],eax
  4280c5:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  4280cc:	mov    edx,0xf89c85ba
  4280d1:	mov    DWORD PTR [ebp-0x8],edx
  4280d4:	mov    eax,DWORD PTR [ebp+0x1c]
  4280d7:	mov    DWORD PTR [ebp+0x1c],eax
  4280da:	mov    eax,DWORD PTR [ebp+0x1c]
  4280dd:	mov    eax,DWORD PTR [eax+0x190]
  4280e3:	mov    eax,DWORD PTR [eax]
  4280e5:	mov    DWORD PTR [ebp-0x24],ecx
  4280e8:	mov    ecx,DWORD PTR [ebp+0x1c]
  4280eb:	mov    ecx,DWORD PTR [ecx+0x190]
  4280f1:	mov    ecx,DWORD PTR [ecx]
  4280f3:	add    ecx,DWORD PTR [eax+0x3c]
  4280f6:	mov    DWORD PTR [ebp+0x10],ecx
  4280f9:	mov    eax,DWORD PTR [ebp+0x8]
  4280fc:	xor    eax,edi
  4280fe:	add    eax,ebx
  428100:	mov    DWORD PTR [ebp-0x4],eax
  428103:	mov    eax,DWORD PTR [ebp+0x8]
  428106:	xor    eax,edi
  428108:	add    eax,ebx
  42810a:	mov    DWORD PTR [ebp+0x18],eax
  42810d:	mov    eax,DWORD PTR [ebp+0x10]
  428110:	mov    eax,DWORD PTR [eax+0x50]
  428113:	sub    eax,0xc
  428116:	mov    DWORD PTR [ebp-0x28],eax
  428119:	mov    eax,DWORD PTR [ebp+0x10]
  42811c:	mov    eax,DWORD PTR [eax+0x38]
  42811f:	mov    ecx,DWORD PTR [ebp+0x10]
  428122:	dec    eax
  428123:	test   DWORD PTR [ecx+0x54],eax
  428126:	mov    eax,DWORD PTR [ebp+0x10]
  428129:	je     0x428143
  42812b:	mov    eax,DWORD PTR [eax+0x38]
  42812e:	mov    ecx,DWORD PTR [ebp+0x10]
  428131:	mov    ecx,DWORD PTR [ecx+0x54]
  428134:	dec    eax
  428135:	not    eax
  428137:	and    ecx,eax
  428139:	mov    eax,DWORD PTR [ebp+0x10]
  42813c:	mov    eax,DWORD PTR [eax+0x38]
  42813f:	add    eax,ecx
  428141:	jmp    0x428146
  428143:	mov    eax,DWORD PTR [eax+0x54]
  428146:	mov    DWORD PTR [ebp+0x1c],eax
  428149:	mov    eax,DWORD PTR [ebp+0x8]
  42814c:	xor    eax,edi
  42814e:	add    eax,ebx
  428150:	mov    DWORD PTR [ebp+0x18],eax
  428153:	mov    eax,DWORD PTR [ebp+0x8]
  428156:	xor    eax,edi
  428158:	add    eax,ebx
  42815a:	mov    DWORD PTR [ebp+0x18],eax
  42815d:	mov    eax,DWORD PTR [ebp+0x8]
  428160:	mov    ecx,DWORD PTR [ebp-0x24]
  428163:	xor    eax,edi
  428165:	add    eax,ebx
  428167:	mov    DWORD PTR [ecx],eax
  428169:	mov    DWORD PTR [ebp+0x18],edx
  42816c:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  428173:	mov    DWORD PTR [ebp+0x18],0xf89c85bc
  42817a:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  428181:	mov    eax,DWORD PTR [ebp-0x8]
  428184:	mov    ecx,DWORD PTR [ebp+0x1c]
  428187:	xor    eax,edi
  428189:	add    eax,ebx
  42818b:	imul   eax,ecx
  42818e:	mov    ecx,DWORD PTR [ebp+0x8]
  428191:	mov    edx,DWORD PTR [ebp-0x28]
  428194:	xor    ecx,edi
  428196:	lea    ecx,[ecx+edx*1+0x3272ef]
  42819d:	cmp    eax,ecx
  42819f:	jae    0x428550
  4281a5:	mov    eax,DWORD PTR [ebp+0x8]
  4281a8:	xor    eax,edi
  4281aa:	add    eax,ebx
  4281ac:	mov    DWORD PTR [ebp+0x18],eax
  4281af:	mov    eax,DWORD PTR [ebp+0x1c]
  4281b2:	add    eax,DWORD PTR [ebp-0x1c]
  4281b5:	mov    DWORD PTR [ebp-0x4],eax
  4281b8:	push   DWORD PTR [ebp-0x4]
  4281bb:	mov    esi,DWORD PTR [ebp-0x1c]
  4281be:	mov    ecx,DWORD PTR [ebp+0x10]
  4281c1:	call   0x427315
  4281c6:	mov    DWORD PTR [ebp+0xc],eax
  4281c9:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  4281d0:	mov    eax,DWORD PTR [ebp-0x18]
  4281d3:	xor    eax,edi
  4281d5:	lea    ecx,[ebp-0x40]
  4281d8:	add    eax,ebx
  4281da:	push   ecx
  4281db:	call   0x4278a7
  4281e0:	mov    eax,DWORD PTR [ebp+0xc]
  4281e3:	test   eax,eax
  4281e5:	je     0x428235
  4281e7:	mov    eax,DWORD PTR [ebp-0x18]
  4281ea:	xor    eax,edi
  4281ec:	add    eax,ebx
  4281ee:	push   eax
  4281ef:	push   DWORD PTR [ebp+0xc]
  4281f2:	lea    eax,[ebp-0x40]
  4281f5:	push   eax
  4281f6:	call   0x42779d
  4281fb:	mov    eax,DWORD PTR [ebp-0x4]
  4281fe:	mov    DWORD PTR [ebp-0x18],eax
  428201:	mov    eax,DWORD PTR [ebp-0x18]
  428204:	mov    ecx,DWORD PTR [ebp-0x1c]
  428207:	sub    eax,ecx
  428209:	mov    DWORD PTR [ebp-0x18],eax
  42820c:	mov    eax,DWORD PTR [ebp+0xc]
  42820f:	mov    ecx,DWORD PTR [ebp+0xc]
  428212:	mov    eax,DWORD PTR [eax+0x10]
  428215:	add    eax,DWORD PTR [ecx+0xc]
  428218:	mov    ecx,DWORD PTR [ebp-0x18]
  42821b:	cmp    ecx,eax
  42821d:	jb     0x428235
  42821f:	mov    eax,DWORD PTR [ebp+0xc]
  428222:	mov    eax,DWORD PTR [eax+0xc]
  428225:	mov    ecx,DWORD PTR [ebp+0xc]
  428228:	add    eax,DWORD PTR [ecx+0x8]
  42822b:	mov    ecx,DWORD PTR [ebp-0x18]
  42822e:	sub    eax,ecx
  428230:	jmp    0x428523
  428235:	push   0xc
  428237:	push   DWORD PTR [ebp-0x4]
  42823a:	lea    eax,[ebp-0x4c]
  42823d:	push   eax
  42823e:	call   0x42779d
  428243:	mov    eax,0xf89c85b9
  428248:	mov    DWORD PTR [ebp-0x2c],eax
  42824b:	mov    DWORD PTR [ebp-0x30],0xf89c85ba
  428252:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  428259:	mov    DWORD PTR [ebp-0x38],0xf89c85bc
  428260:	lea    ecx,[ebp-0x2c]
  428263:	mov    DWORD PTR [ebp-0xc],ecx
  428266:	lea    ecx,[ebp-0x30]
  428269:	mov    DWORD PTR [ebp-0x10],ecx
  42826c:	lea    ecx,[ebp-0x34]
  42826f:	mov    DWORD PTR [ebp+0xc],ecx
  428272:	lea    ecx,[ebp-0x38]
  428275:	mov    DWORD PTR [ebp-0x14],ecx
  428278:	mov    ecx,DWORD PTR [ebp+0x8]
  42827b:	xor    ecx,edi
  42827d:	add    ecx,ebx
  42827f:	mov    DWORD PTR [ebp-0x18],ecx
  428282:	jmp    0x42847e
  428287:	cmp    eax,0xf89c85bb
  42828c:	je     0x428490
  428292:	mov    ecx,DWORD PTR [ebp-0x8]
  428295:	xor    ecx,edi
  428297:	mov    esi,eax
  428299:	add    ecx,ebx
  42829b:	mov    DWORD PTR [ebp+0x18],ecx
  42829e:	mov    eax,DWORD PTR [ebp-0x18]
  4282a1:	xor    esi,edi
  4282a3:	lea    eax,[eax+esi*1+0x3272ef]
  4282aa:	mov    DWORD PTR [ebp-0x18],eax
  4282ad:	mov    eax,DWORD PTR [ebp-0x8]
  4282b0:	mov    ecx,DWORD PTR [ebp-0x18]
  4282b3:	xor    eax,edi
  4282b5:	add    eax,ebx
  4282b7:	cmp    ecx,eax
  4282b9:	jne    0x4282ce
  4282bb:	mov    eax,DWORD PTR [ebp+0x8]
  4282be:	xor    eax,edi
  4282c0:	add    eax,ebx
  4282c2:	push   eax
  4282c3:	push   0xc
  4282c5:	lea    eax,[ebp-0x4c]
  4282c8:	push   eax
  4282c9:	call   0x427d82
  4282ce:	mov    eax,DWORD PTR [ebp-0xc]
  4282d1:	mov    eax,DWORD PTR [eax]
  4282d3:	xor    eax,edi
  4282d5:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  4282dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4282df:	xor    ecx,edi
  4282e1:	movzx  eax,al
  4282e4:	add    ecx,ebx
  4282e6:	cmp    eax,ecx
  4282e8:	je     0x428466
  4282ee:	mov    eax,DWORD PTR [ebp-0x10]
  4282f1:	mov    eax,DWORD PTR [eax]
  4282f3:	xor    eax,edi
  4282f5:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  4282fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4282ff:	xor    ecx,edi
  428301:	movzx  eax,al
  428304:	add    ecx,ebx
  428306:	cmp    eax,ecx
  428308:	je     0x428466
  42830e:	mov    eax,DWORD PTR [ebp+0xc]
  428311:	mov    eax,DWORD PTR [eax]
  428313:	xor    eax,edi
  428315:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  42831c:	mov    ecx,DWORD PTR [ebp+0x8]
  42831f:	xor    ecx,edi
  428321:	movzx  eax,al
  428324:	add    ecx,ebx
  428326:	cmp    eax,ecx
  428328:	je     0x428466
  42832e:	mov    eax,DWORD PTR [ebp-0x14]
  428331:	mov    eax,DWORD PTR [eax]
  428333:	xor    eax,edi
  428335:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  42833c:	mov    ecx,DWORD PTR [ebp+0x8]
  42833f:	xor    ecx,edi
  428341:	movzx  eax,al
  428344:	add    ecx,ebx
  428346:	cmp    eax,ecx
  428348:	je     0x428466
  42834e:	mov    eax,DWORD PTR [ebp-0x10]
  428351:	mov    eax,DWORD PTR [eax]
  428353:	xor    eax,edi
  428355:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  42835c:	mov    ecx,DWORD PTR [ebp-0xc]
  42835f:	mov    ecx,DWORD PTR [ecx]
  428361:	xor    ecx,edi
  428363:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  42836a:	xor    al,cl
  42836c:	mov    ecx,DWORD PTR [ebp+0xc]
  42836f:	mov    ecx,DWORD PTR [ecx]
  428371:	xor    ecx,edi
  428373:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  42837a:	or     al,cl
  42837c:	mov    ecx,DWORD PTR [ebp-0xc]
  42837f:	mov    ecx,DWORD PTR [ecx]
  428381:	xor    ecx,edi
  428383:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  42838a:	cmp    cl,al
  42838c:	jne    0x428466
  428392:	mov    eax,DWORD PTR [ebp+0xc]
  428395:	mov    eax,DWORD PTR [eax]
  428397:	xor    eax,edi
  428399:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  4283a0:	mov    ecx,DWORD PTR [ebp-0x10]
  4283a3:	mov    ecx,DWORD PTR [ecx]
  4283a5:	xor    ecx,edi
  4283a7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  4283ae:	xor    al,cl
  4283b0:	mov    ecx,DWORD PTR [ebp-0x14]
  4283b3:	mov    ecx,DWORD PTR [ecx]
  4283b5:	xor    ecx,edi
  4283b7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  4283be:	or     al,cl
  4283c0:	mov    ecx,DWORD PTR [ebp-0x10]
  4283c3:	mov    ecx,DWORD PTR [ecx]
  4283c5:	xor    ecx,edi
  4283c7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4283ce:	cmp    cl,al
  4283d0:	jne    0x428466
  4283d6:	mov    eax,DWORD PTR [ebp-0x14]
  4283d9:	mov    eax,DWORD PTR [eax]
  4283db:	xor    eax,edi
  4283dd:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  4283e4:	mov    ecx,DWORD PTR [ebp+0xc]
  4283e7:	mov    ecx,DWORD PTR [ecx]
  4283e9:	xor    ecx,edi
  4283eb:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  4283f2:	xor    al,cl
  4283f4:	mov    ecx,DWORD PTR [ebp-0xc]
  4283f7:	mov    ecx,DWORD PTR [ecx]
  4283f9:	xor    ecx,edi
  4283fb:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  428402:	or     al,cl
  428404:	mov    ecx,DWORD PTR [ebp+0xc]
  428407:	mov    ecx,DWORD PTR [ecx]
  428409:	xor    ecx,edi
  42840b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  428412:	cmp    cl,al
  428414:	jne    0x428466
  428416:	mov    eax,DWORD PTR [ebp-0x14]
  428419:	mov    eax,DWORD PTR [eax]
  42841b:	xor    eax,edi
  42841d:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  428424:	mov    ecx,DWORD PTR [ebp-0xc]
  428427:	mov    ecx,DWORD PTR [ecx]
  428429:	xor    ecx,edi
  42842b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  428432:	xor    al,cl
  428434:	mov    ecx,DWORD PTR [ebp-0x10]
  428437:	mov    ecx,DWORD PTR [ecx]
  428439:	xor    ecx,edi
  42843b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  428442:	or     al,cl
  428444:	mov    ecx,DWORD PTR [ebp-0x14]
  428447:	mov    ecx,DWORD PTR [ecx]
  428449:	xor    ecx,edi
  42844b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  428452:	cmp    cl,al
  428454:	jne    0x428466
  428456:	lea    eax,[ebp-0x4c]
  428459:	push   eax
  42845a:	call   0x427f21
  42845f:	mov    ecx,DWORD PTR [ebp-0x44]
  428462:	cmp    eax,ecx
  428464:	je     0x428470
  428466:	mov    eax,DWORD PTR [ebp+0x8]
  428469:	xor    eax,edi
  42846b:	add    eax,ebx
  42846d:	mov    DWORD PTR [ebp+0x18],eax
  428470:	mov    eax,DWORD PTR [ebp-0x8]
  428473:	xor    eax,edi
  428475:	lea    eax,[eax+esi*1+0x3272ef]
  42847c:	xor    eax,edi
  42847e:	mov    ecx,DWORD PTR [ebp+0x8]
  428481:	mov    edx,DWORD PTR [ebp+0x18]
  428484:	xor    ecx,edi
  428486:	add    ecx,ebx
  428488:	cmp    edx,ecx
  42848a:	je     0x428287
  428490:	mov    eax,DWORD PTR [ebp+0x8]
  428493:	mov    ecx,DWORD PTR [ebp+0x18]
  428496:	xor    eax,edi
  428498:	add    eax,ebx
  42849a:	cmp    ecx,eax
  42849c:	jne    0x4284af
  42849e:	mov    eax,DWORD PTR [ebp-0x8]
  4284a1:	mov    ecx,DWORD PTR [ebp+0x1c]
  4284a4:	xor    eax,edi
  4284a6:	lea    eax,[eax+ecx*1+0x3272ef]
  4284ad:	jmp    0x428526
  4284af:	push   0x18
  4284b1:	push   DWORD PTR [ebp-0x4]
  4284b4:	lea    eax,[ebp-0x64]
  4284b7:	push   eax
  4284b8:	call   0x42779d
  4284bd:	mov    eax,DWORD PTR [ebp+0x8]
  4284c0:	mov    ecx,DWORD PTR [ebp-0x18]
  4284c3:	xor    eax,edi
  4284c5:	add    eax,ebx
  4284c7:	cmp    eax,ecx
  4284c9:	je     0x4284de
  4284cb:	mov    eax,DWORD PTR [ebp+0x8]
  4284ce:	xor    eax,edi
  4284d0:	add    eax,ebx
  4284d2:	push   eax
  4284d3:	push   0x18
  4284d5:	lea    eax,[ebp-0x64]
  4284d8:	push   eax
  4284d9:	call   0x427d82
  4284de:	mov    eax,DWORD PTR [ebp-0x4]
  4284e1:	add    eax,0x18
  4284e4:	mov    DWORD PTR [ebp+0x18],eax
  4284e7:	push   DWORD PTR [ebp-0x50]
  4284ea:	push   DWORD PTR [ebp+0x18]
  4284ed:	mov    eax,DWORD PTR [ebp-0x54]
  4284f0:	add    eax,DWORD PTR [ebp-0x20]
  4284f3:	push   eax
  4284f4:	call   0x42779d
  4284f9:	mov    eax,DWORD PTR [ebp+0x8]
  4284fc:	mov    ecx,DWORD PTR [ebp-0x18]
  4284ff:	xor    eax,edi
  428501:	add    eax,ebx
  428503:	cmp    eax,ecx
  428505:	je     0x428518
  428507:	push   0x0
  428509:	push   DWORD PTR [ebp-0x50]
  42850c:	mov    eax,DWORD PTR [ebp-0x54]
  42850f:	add    eax,DWORD PTR [ebp-0x20]
  428512:	push   eax
  428513:	call   0x427d82
  428518:	mov    eax,DWORD PTR [ebp-0x24]
  42851b:	mov    ecx,DWORD PTR [ebp-0x50]
  42851e:	add    DWORD PTR [eax],ecx
  428520:	mov    eax,DWORD PTR [ebp-0x50]
  428523:	add    eax,DWORD PTR [ebp+0x1c]
  428526:	mov    DWORD PTR [ebp+0x1c],eax
  428529:	mov    eax,DWORD PTR [ebp-0x8]
  42852c:	mov    ecx,DWORD PTR [ebp+0x1c]
  42852f:	xor    eax,edi
  428531:	add    eax,ebx
  428533:	imul   eax,ecx
  428536:	mov    ecx,DWORD PTR [ebp+0x8]
  428539:	mov    edx,DWORD PTR [ebp-0x28]
  42853c:	xor    ecx,edi
  42853e:	lea    ecx,[ecx+edx*1+0x3272ef]
  428545:	cmp    eax,ecx
  428547:	jb     0x4281a5
  42854d:	mov    esi,DWORD PTR [ebp+0x14]
  428550:	mov    eax,DWORD PTR [ebp-0x20]
  428553:	mov    DWORD PTR [esi],eax
  428555:	jmp    0x42859c
  428557:	mov    ecx,DWORD PTR [ebp+0x8]
  42855a:	mov    edx,DWORD PTR [ebp+0xc]
  42855d:	xor    ecx,edi
  42855f:	xor    edx,edi
  428561:	add    ecx,ebx
  428563:	add    edx,ebx
  428565:	cmp    ecx,edx
  428567:	jne    0x42857b
  428569:	mov    eax,ds:0x7f642dd0
  42856e:	imul   eax,eax,0x9f15fccf
  428574:	mov    ds:0x7f642dd0,eax
  428579:	jmp    0x42859c
  42857b:	mov    ecx,DWORD PTR [ebp+0x8]
  42857e:	xor    ecx,edi
  428580:	add    ecx,ebx
  428582:	cmp    eax,ecx
  428584:	je     0x428592
  428586:	sub    DWORD PTR ds:0xf861e30,0x709bead0
  428590:	jmp    0x42859c
  428592:	and    DWORD PTR ds:0x3343fad0,0x5265ec3f
  42859c:	pop    edi
  42859d:	pop    esi
  42859e:	pop    ebx
  42859f:	leave  
  4285a0:	ret    0x18
  4285a3:	push   ebp
  4285a4:	mov    ebp,esp
  4285a6:	and    esp,0xfffffff8
  4285a9:	mov    eax,DWORD PTR [ebp+0x20]
  4285ac:	sub    esp,0x14
  4285af:	push   ebx
  4285b0:	mov    ebx,DWORD PTR [ebp+0x14]
  4285b3:	push   esi
  4285b4:	push   edi
  4285b5:	cmp    eax,0xf89c85b9
  4285ba:	jne    0x4285c6
  4285bc:	push   0xf89c85ba
  4285c1:	jmp    0x4286f8
  4285c6:	mov    eax,DWORD PTR [ebp+0x20]
  4285c9:	cmp    eax,0xf89c85ba
  4285ce:	jne    0x4285da
  4285d0:	push   0xf89c85bb
  4285d5:	jmp    0x4286f8
  4285da:	mov    eax,DWORD PTR [ebp+0x20]
  4285dd:	cmp    eax,0xf89c85bb
  4285e2:	jne    0x4285ee
  4285e4:	push   0xf89c85bc
  4285e9:	jmp    0x4286f8
  4285ee:	mov    eax,DWORD PTR [ebp+0x20]
  4285f1:	cmp    eax,0xf89c85bc
  4285f6:	jne    0x428602
  4285f8:	push   0xf89c85bd
  4285fd:	jmp    0x4286f8
  428602:	mov    ecx,DWORD PTR [ebp+0x20]
  428605:	mov    eax,0xf89c85b0
  42860a:	cmp    ecx,eax
  42860c:	jne    0x4286c8
  428612:	mov    eax,DWORD PTR [ebp+0x10]
  428615:	mov    DWORD PTR [esp+0xc],eax
  428619:	mov    eax,DWORD PTR [ebp+0x18]
  42861c:	mov    DWORD PTR [esp+0x14],eax
  428620:	mov    eax,DWORD PTR [ebp+0xc]
  428623:	mov    DWORD PTR [esp+0x18],eax
  428627:	mov    eax,DWORD PTR [ebp+0x8]
  42862a:	mov    DWORD PTR [esp+0x10],eax
  42862e:	mov    eax,DWORD PTR [esp+0x10]
  428632:	mov    ecx,DWORD PTR [esp+0x14]
  428636:	mov    edi,0x75108a8
  42863b:	xor    eax,edi
  42863d:	mov    esi,0x3272ef
  428642:	add    eax,esi
  428644:	mov    DWORD PTR [ecx],eax
  428646:	mov    eax,DWORD PTR [esp+0xc]
  42864a:	mov    eax,DWORD PTR [eax+0x194]
  428650:	mov    ecx,DWORD PTR [eax]
  428652:	mov    eax,DWORD PTR [esp+0xc]
  428656:	mov    eax,DWORD PTR [eax+0x194]
  42865c:	mov    eax,DWORD PTR [eax]
  42865e:	add    eax,DWORD PTR [ecx+0x3c]
  428661:	mov    ecx,DWORD PTR [esp+0xc]
  428665:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42866b:	mov    ecx,DWORD PTR [ecx+0x14]
  42866e:	push   0x4
  428670:	push   0x3000
  428675:	push   DWORD PTR [eax+0x50]
  428678:	push   0x0
  42867a:	call   ecx
  42867c:	mov    DWORD PTR [ebx],eax
  42867e:	mov    eax,DWORD PTR [esp+0x10]
  428682:	push   DWORD PTR [esp+0xc]
  428686:	xor    eax,edi
  428688:	add    eax,esi
  42868a:	mov    DWORD PTR [esp+0x20],eax
  42868e:	lea    eax,[esp+0x20]
  428692:	push   eax
  428693:	push   ebx
  428694:	push   DWORD PTR [esp+0x20]
  428698:	push   DWORD PTR [esp+0x28]
  42869c:	push   DWORD PTR [esp+0x24]
  4286a0:	call   0x428065
  4286a5:	mov    eax,DWORD PTR [esp+0x10]
  4286a9:	mov    ecx,DWORD PTR [ebx]
  4286ab:	xor    eax,edi
  4286ad:	add    eax,esi
  4286af:	cmp    ecx,eax
  4286b1:	je     0x42870f
  4286b3:	mov    eax,DWORD PTR [esp+0x18]
  4286b7:	mov    ecx,DWORD PTR [esp+0x14]
  4286bb:	xor    eax,edi
  4286bd:	add    eax,esi
  4286bf:	imul   eax,DWORD PTR [esp+0x1c]
  4286c4:	mov    DWORD PTR [ecx],eax
  4286c6:	jmp    0x42870f
  4286c8:	mov    ecx,DWORD PTR [ebp+0x20]
  4286cb:	cmp    ecx,0xf89c85bd
  4286d1:	jne    0x4286da
  4286d3:	push   0xf89c85be
  4286d8:	jmp    0x4286f8
  4286da:	mov    ecx,DWORD PTR [ebp+0x20]
  4286dd:	cmp    ecx,0xf89c85be
  4286e3:	jne    0x4286ec
  4286e5:	push   0xf89c85bf
  4286ea:	jmp    0x4286f8
  4286ec:	mov    ecx,DWORD PTR [ebp+0x20]
  4286ef:	cmp    ecx,0xf89c85bf
  4286f5:	jne    0x42870f
  4286f7:	push   eax
  4286f8:	push   DWORD PTR [ebp+0x1c]
  4286fb:	push   DWORD PTR [ebp+0x18]
  4286fe:	push   ebx
  4286ff:	push   DWORD PTR [ebp+0x10]
  428702:	push   DWORD PTR [ebp+0xc]
  428705:	push   DWORD PTR [ebp+0x8]
  428708:	call   0x4285a3
  42870d:	mov    DWORD PTR [ebx],eax
  42870f:	mov    eax,DWORD PTR [ebx]
  428711:	pop    edi
  428712:	pop    esi
  428713:	pop    ebx
  428714:	mov    esp,ebp
  428716:	pop    ebp
  428717:	ret    0x1c
  42871a:	push   ebp
  42871b:	mov    ebp,esp
  42871d:	sub    esp,0xc
  428720:	mov    eax,0xf89c85b9
  428725:	mov    DWORD PTR [ebp-0x8],eax
  428728:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  42872f:	mov    ecx,DWORD PTR [ebp-0x8]
  428732:	xor    ecx,0x75108a8
  428738:	add    ecx,0x3272ef
  42873e:	mov    DWORD PTR [ebp-0x4],ecx
  428741:	mov    ecx,DWORD PTR [ebp+0xc]
  428744:	push   eax
  428745:	mov    DWORD PTR [ebp+0xc],ecx
  428748:	push   DWORD PTR [ebp+0xc]
  42874b:	lea    eax,[ebp-0x4]
  42874e:	push   DWORD PTR [ebp+0x8]
  428751:	push   eax
  428752:	push   DWORD PTR [ebp+0xc]
  428755:	push   DWORD PTR [ebp-0xc]
  428758:	push   DWORD PTR [ebp-0x8]
  42875b:	call   0x4285a3
  428760:	mov    DWORD PTR [ebp-0x4],eax
  428763:	mov    eax,DWORD PTR [ebp-0x4]
  428766:	leave  
  428767:	ret    0x8
