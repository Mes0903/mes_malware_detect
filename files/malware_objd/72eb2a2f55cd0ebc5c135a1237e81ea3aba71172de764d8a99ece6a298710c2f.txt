
72eb2a2f55cd0ebc5c135a1237e81ea3aba71172de764d8a99ece6a298710c2f.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	call   0x8d6880
  401009:	add    BYTE PTR [eax],al
  40100b:	add    BYTE PTR [edx],al
  40100d:	add    BYTE PTR [eax],al
  40100f:	add    BYTE PTR [ebp+0x0],cl
  401012:	add    BYTE PTR [eax],al
  401014:	add    al,ah
  401016:	add    BYTE PTR [eax],al
  401018:	add    BYTE PTR [esi+0x554d0000],ah
  40101e:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  401024:	mov    esp,ebp
  401026:	or     ah,dh
  401028:	dec    ebp
  401029:	add    bh,al
  40102b:	add    BYTE PTR [eax],cl
  40102d:	add    BYTE PTR [eax],al
  40102f:	mov    DWORD PTR [eax],0x40f44545
  401035:	cmp    BYTE PTR [eax],al
  401037:	test   DWORD PTR [ebx-0x34070b64],ecx
  40103d:	(bad)  
  40103e:	enter  0x4d45,0xbc
  401042:	mov    edi,DWORD PTR [ebx]
  401044:	hlt    
  401045:	test   ebx,ecx
  401047:	pushf  
  401048:	enter  0x4df8,0x8b
  40104c:	mov    DWORD PTR [ebp-0x20],0x890208
  401053:	inc    ebp
  401054:	inc    ebp
  401055:	cld    
  401056:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40105c:	or     BYTE PTR [ebx+0x0],dl
  40105f:	mov    ebx,0x8bd5900
  401064:	call   DWORD PTR [ecx-0x1]
  401067:	pop    es
  401068:	mov    ch,0x33
  40106a:	dec    ebx
  40106c:	(bad)  
  40106d:	mov    eax,0x72009fa4
  401072:	push   DWORD PTR [edx]
  401074:	or     BYTE PTR [eax],al
  401076:	jmp    0xff89:0x75c84d03
  40107d:	dec    ebp
  40107e:	loopne 0x401050
  401080:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  401086:	add    BYTE PTR [ebx],dh
  401088:	mov    ecx,ebx
  40108a:	hlt    
  40108b:	add    ecx,ebx
  40108d:	enter  0x899f,0x32
  401091:	dec    ebp
  401092:	add    ecx,eax
  401094:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40109a:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4010a1:	xor    ecx,ebx
  4010a3:	retf   
  4010a4:	enter  0x4d03,0xc8
  4010a8:	mov    DWORD PTR fs:[eax],ebx
  4010ab:	lea    eax,[eax]
  4010ad:	push   esp
  4010ae:	mov    edi,edi
  4010b0:	fs (bad) 
  4010b2:	(bad)  
  4010b3:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4010b9:	push   0xffffffff
  4010bb:	and    bh,bh
  4010bd:	pop    ecx
  4010be:	inc    eax
  4010bf:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4010c5:	push   0xffffff8b
  4010c7:	pop    ecx
  4010c8:	cld    
  4010c9:	dec    ebp
  4010ca:	lea    ecx,[ecx+0x45ff08ff]
  4010d0:	mov    BYTE PTR [edx+0x1],cl
  4010d3:	add    BYTE PTR [eax],al
  4010d5:	mov    DWORD PTR [ebp+0x8],0x58008d
  4010dc:	dec    DWORD PTR [ebp-0x77]
  4010df:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4010e6:	cld    
  4010e7:	dec    ebp
  4010e8:	jne    0x40111d
  4010ea:	lea    eax,[ebx]
  4010ec:	push   eax
  4010ed:	mov    edi,edi
  4010ef:	or     BYTE PTR [ecx+0x54a845],cl
  4010f5:	add    al,ch
  4010f7:	(bad)  
  4010f8:	sub    ebp,esp
  4010fa:	add    BYTE PTR [eax],al
  4010fc:	rol    BYTE PTR [eax],0x84
  4010ff:	inc    ebp
  401100:	add    dh,BYTE PTR [esi+0x0]
  401103:	add    BYTE PTR [ebp-0x73],al
  401106:	mov    ebp,DWORD PTR [esp+edx*4]
  401109:	inc    DWORD PTR [eax]
  40110b:	lea    ecx,[ebx-0x30074f4]
  401111:	call   0x411c96
  401116:	add    BYTE PTR [ebp+0x0],cl
  401119:	jne    0x40115c
  40111b:	dec    DWORD PTR [ebx-0x76210314]
  401121:	dec    ebp
  401122:	add    DWORD PTR [ebp+0x0],esi
  401125:	(bad)  
  401126:	xchg   ebp,eax
  401127:	loopne 0x401128
  401129:	inc    eax
  40112a:	inc    DWORD PTR [eax]
  40112c:	mov    ecx,DWORD PTR [ebp-0x4]
  40112f:	xor    edx,DWORD PTR [edx+0x7201b8]
  401135:	add    BYTE PTR [edx],dl
  401137:	enter  0x4d90,0x0
  40113b:	mov    eax,DWORD PTR [eax]
  40113d:	hlt    
  40113e:	add    al,0xa5
  401140:	mov    al,0xff
  401142:	add    bh,bh
  401144:	add    BYTE PTR [ebx],dh
  401146:	inc    DWORD PTR [ebx]
  401148:	sbb    al,0x89
  40114a:	jne    0x401124
  40114c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  401152:	mov    eax,DWORD PTR [ebp-0xff0048]
  401158:	mov    DWORD PTR [eax-0x70],0xec58ed89
  40115f:	inc    DWORD PTR [ebp-0x75]
  401162:	fisttp QWORD PTR [esi+ebp*8]
  401165:	test   DWORD PTR [esi-0x1],esp
  401168:	inc    ebp
  401169:	(bad)  
  40116a:	aas    
  40116b:	inc    ebp
  40116c:	(bad)  
  40116d:	lea    edi,[esp+eiz*2-0x1]
  401171:	push   DWORD PTR [edi]
  401173:	mov    DWORD PTR ds:0x8000c7a0,edi
  401179:	mov    ebp,esp
  40117b:	cld    
  40117c:	jmp    0xdfff:0xeeff458d
  401183:	mov    bh,al
  401185:	add    DWORD PTR [eax-0x13ba1500],ecx
  40118b:	inc    DWORD PTR [ebp-0x4]
  40118e:	xlat   BYTE PTR ds:[ebx]
  40118f:	lea    edi,[edi]
  401191:	inc    edi
  401193:	jmp    FWORD PTR [eax-0x78]
  401196:	inc    DWORD PTR [ecx]
  401198:	aaa    
  401199:	add    BYTE PTR ds:0x6c00c757,bh
  40119f:	test   edi,edi
  4011a1:	pandn  mm0,mm5
  4011a4:	aas    
  4011a5:	add    bh,al
  4011a7:	mov    esi,DWORD PTR [eax-0x4]
  4011aa:	inc    DWORD PTR [eax+0xdf01ee]
  4011b0:	(bad)  
  4011b1:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4011b5:	mov    esp,ebx
  4011b7:	xchg   esp,eax
  4011b8:	rol    DWORD PTR [eax],cl
  4011ba:	(bad)  
  4011bb:	mov    edi,DWORD PTR [eax+0x3]
  4011be:	(bad)  
  4011bf:	cmp    al,0xd7
  4011c1:	dec    ebp
  4011c2:	ror    DWORD PTR [ebx+0x2ad8e8],0x0
  4011c9:	lea    ecx,[ebx-0x7f0003b4]
  4011cf:	push   edx
  4011d0:	add    DWORD PTR [ebp+0x0],edx
  4011d3:	mov    esi,DWORD PTR [eax]
  4011d5:	mov    WORD PTR [edx+0x0],gs
  4011d8:	add    BYTE PTR [ebx-0x778afc7b],cl
  4011de:	mov    eax,DWORD PTR [eax]
  4011e0:	cld    
  4011e1:	push   0x7d
  4011e3:	dec    DWORD PTR [ebx+0xd88c]
  4011e9:	push   edx
  4011ea:	mov    edx,DWORD PTR [ecx-0x4]
  4011ed:	call   DWORD PTR [eax+0x7d01fc]
  4011f3:	mov    ecx,DWORD PTR [ecx+0x509000fc]
  4011f9:	add    DWORD PTR [esi+0x0],edx
  4011fc:	test   DWORD PTR [ebp+0x75],eax
  4011ff:	jmp    0x947d:0xc7fce28b
  401206:	mov    ebp,ebx
  401208:	fcom   st(7)
  40120a:	add    bh,al
  40120c:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  401212:	add    edi,edi
  401214:	add    bh,bh
  401216:	addr16 in eax,dx
  401218:	add    dh,dl
  40121a:	push   eax
  40121b:	inc    ebp
  40121c:	push   esi
  40121d:	fisttp WORD PTR [ebx+0x4dc7f43f]
  401223:	test   BYTE PTR [ebx],dh
  401225:	(bad)  
  401226:	add    eax,0x4572c8
  40122b:	jecxz  0x4011ee
  40122d:	rol    DWORD PTR [edi+eax*8-0x22ff73ff],cl
  401234:	inc    esi
  401235:	jle    0x401237
  401237:	test   edi,eax
  401239:	jmp    esp
  40123b:	inc    DWORD PTR [eax]
  40123d:	in     eax,dx
  40123e:	add    dh,dl
  401240:	jne    0x4011c7
  401242:	mov    edi,edi
  401244:	cld    
  401245:	inc    DWORD PTR [ebp-0x14]
  401248:	mov    ebp,edx
  40124a:	mov    ah,0x85
  40124c:	add    bh,bh
  40124e:	call   0x1163d52
  401253:	enter  0x858b,0xfc
  401257:	inc    DWORD PTR [eax+0xeb01ff]
  40125d:	in     al,dx
  40125e:	xor    BYTE PTR [ebp-0xff0020],al
  401264:	mov    ebx,ebp
  401266:	cld    
  401267:	jle    0x4011f2
  401269:	mov    eax,0x50000001
  40126e:	add    DWORD PTR [ebp+0x45],eax
  401271:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  401277:	dec    DWORD PTR [ebx-0x3fd80318]
  40127d:	add    BYTE PTR [ebp-0xbf0040],dl
  401283:	inc    ebp
  401284:	das    
  401285:	mov    eax,DWORD PTR [eax]
  401287:	cld    
  401288:	push   eax
  401289:	mov    al,0x45
  40128b:	add    DWORD PTR [ebx+0x459c00],ecx
  401291:	mov    edi,edi
  401293:	mov    eax,0xe80800ff
  401298:	inc    ebp
  401299:	sub    cl,BYTE PTR [ebx-0x47000400]
  40129f:	add    al,0x1
  4012a1:	rol    BYTE PTR [eax],0x1e
  4012a4:	jne    0x4012eb
  4012a6:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4012ac:	inc    DWORD PTR [ecx]
  4012ae:	call   0x853cb3
  4012b3:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4012b9:	call   0x403cbf
  4012be:	xor    bh,bh
  4012c0:	push   edi
  4012c1:	adc    BYTE PTR [ebx-0x747423bb],al
  4012c7:	loopne 0x4012a5
  4012c9:	ret    
  4012ca:	loopne 0x40126b
  4012cc:	xor    DWORD PTR [edx],0x31
  4012cf:	cmp    edi,edi
  4012d1:	bswap  esp
  4012d3:	rol    BYTE PTR gs:[eax],0x5
  4012d7:	jmp    0x12b1421
  4012dc:	mov    eax,DWORD PTR [ebp-0x4]
  4012df:	add    BYTE PTR [eax+0xff0100],bh
  4012e5:	cld    
  4012e6:	jne    0x401365
  4012e8:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  4012ee:	lds    eax,FWORD PTR [ecx]
  4012f0:	add    BYTE PTR [eax],al
  4012f2:	push   eax
  4012f3:	cs inc ebp
  4012f5:	add    BYTE PTR [ebx+0x459850],cl
  4012fb:	mov    edi,edi
  4012fd:	test   al,0xff
  4012ff:	add    BYTE PTR [eax],cl
  401301:	inc    DWORD PTR [ebp-0x18]
  401304:	jmp    DWORD PTR [esi]
  401306:	fadd   QWORD PTR [eax]
  401308:	jge    0x401357
  40130a:	adc    BYTE PTR [ebx+0x459cb9],cl
  401310:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  401316:	lahf   
  401317:	mov    eax,0x30132
  40131c:	lea    esi,[ebp+0x2c]
  40131f:	xor    edi,edi
  401321:	(bad)  
  401322:	call   0x13f3c8f
  401327:	call   0x1343db7
  40132c:	jne    0x4012b9
  40132e:	xor    edi,esp
  401330:	add    eax,DWORD PTR [eax+0xc018d]
  401336:	push   DWORD PTR [eax]
  401338:	call   0xc93c94
  40133d:	int3   
  40133e:	inc    DWORD PTR [ebp-0x14]
  401341:	mov    ecx,DWORD PTR [ebp-0x28]
  401344:	xor    eax,DWORD PTR [eax]
  401346:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40134c:	(bad)  
  40134d:	xchg   ebp,eax
  40134e:	in     al,0xff
  401350:	add    bh,bh
  401352:	add    BYTE PTR [eax*2+0x8508b00],al
  401359:	inc    ebp
  40135a:	ret    
  40135b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff61]
  401362:	mov    edi,edi
  401364:	or     BYTE PTR [eax],cl
  401366:	inc    ebp
  401367:	test   DWORD PTR gs:[eax],eax
  40136a:	je     0x4013b1
  40136c:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  401372:	xor    edx,DWORD PTR [eax-0x73]
  401375:	push   ebp
  401376:	or     BYTE PTR [ebp+0x21007572],al
  40137c:	inc    ebp
  40137d:	in     al,dx
  40137e:	mov    ebp,DWORD PTR [eax]
  401380:	mov    esp,0x618bc345
  401385:	fmul   st,st(5)
  401387:	add    BYTE PTR [ebx],ch
  401389:	mov    eax,DWORD PTR [ebx]
  40138b:	cld    
  40138c:	loopne 0x40134e
  40138e:	inc    ebp
  40138f:	push   ebp
  401390:	cmp    ebp,eax
  401392:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  401399:	cld    
  40139a:	fadd   DWORD PTR [eax+0x3b014d]
  4013a0:	jne    0x4013d2
  4013a2:	push   0xf8898557
  4013a7:	in     al,dx
  4013a8:	jne    0x4013ef
  4013aa:	lea    eax,[ebx+0x72e8dcc8]
  4013b0:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  4013b6:	jmp    0x4013eb
  4013b8:	mov    edi,DWORD PTR [edi+0x4572bc]
  4013be:	xor    eax,edi
  4013c0:	adc    DWORD PTR [ebp-0xcd0061],0x8b9031
  4013ca:	rcl    BYTE PTR [eax-0x40],1
  4013cd:	inc    ebp
  4013ce:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  4013d6:	inc    ebp
  4013d7:	xchg   ebp,eax
  4013d8:	ud0    ebp,DWORD PTR [ebx]
  4013db:	inc    DWORD PTR [eax]
  4013dd:	jp     0x401455
  4013df:	add    BYTE PTR [edx+0x1f558050],cl
  4013e5:	mov    ecx,DWORD PTR [esp+esi*8]
  4013e8:	inc    eax
  4013e9:	retf   
  4013ea:	inc    ebp
  4013eb:	iret   
  4013ec:	jb     0x4013b6
  4013ee:	mov    eax,DWORD PTR [edi]
  4013f0:	enter  0x4545,0x1
  4013f4:	cmp    BYTE PTR [eax],al
  4013f6:	pushf  
  4013f7:	mov    ecx,DWORD PTR [ecx+0x3b4df0bc]
  4013fd:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  401404:	dec    ebp
  401405:	add    BYTE PTR [ebx],dh
  401407:	inc    ebp
  401408:	mov    DWORD PTR [ebx-0x3f601b4c],ecx
  40140e:	xor    dl,BYTE PTR [edx]
  401410:	add    eax,DWORD PTR [ebp-0x77]
  401413:	mov    eax,esp
  401415:	fmul   DWORD PTR [ebp-0x3d]
  401418:	xor    eax,DWORD PTR [ebx+eax*1+0x832899f]
  40141f:	mov    DWORD PTR [ebp-0x28],eax
  401422:	fadd   DWORD PTR [ebp-0x64]
  401425:	xor    eax,edi
  401427:	mov    ecx,0xff858db0
  40142c:	clc    
  40142d:	enter  0x4d45,0x3d
  401431:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  401438:	test   esi,edi
  40143a:	clc    
  40143b:	inc    DWORD PTR [ebp+0x45]
  40143e:	aas    
  40143f:	mov    ebx,DWORD PTR [eax+ecx*1+0x16a8c8c7]
  401446:	test   DWORD PTR [eax],edi
  401448:	clc    
  401449:	pushf  
  40144a:	inc    ebp
  40144b:	push   DWORD PTR [ecx]
  40144d:	cld    
  40144e:	pushf  
  40144f:	inc    ebp
  401450:	mov    edx,DWORD PTR [eax-0x28]
  401453:	ins    DWORD PTR es:[edi],dx
  401454:	push   ebp
  401455:	add    BYTE PTR [ebx],dh
  401457:	mov    DWORD PTR [ebx],eax
  401459:	sar    BYTE PTR [ebx],1
  40145b:	adc    BYTE PTR [edi],cl
  40145d:	dec    ebp
  40145e:	adc    al,0x8b
  401460:	add    al,dl
  401462:	jmp    0x1011632
  401467:	jb     0x4014b6
  401469:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40146f:	xor    ecx,DWORD PTR [ebp+0x3b]
  401472:	xor    ecx,DWORD PTR [edi]
  401474:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  401478:	(bad)  
  40147a:	clc    
  40147b:	enter  0x8400,0x8b
  40147f:	pop    es
  401480:	mov    al,0x0
  401482:	push   ebp
  401483:	push   cs
  401484:	xor    ecx,eax
  401486:	xor    esp,ecx
  401488:	add    ebp,DWORD PTR [eax]
  40148a:	add    esi,DWORD PTR [eax]
  40148c:	(bad)  
  40148e:	retf   0x55c8
  401491:	repnz mov eax,DWORD PTR [ebp-0x10]
  401495:	(bad)  
  401496:	cli    
  401497:	fdivr  st,st(1)
  401499:	test   DWORD PTR [eax+edi*8],ecx
  40149c:	dec    ebp
  40149d:	inc    ebp
  40149e:	xor    edi,DWORD PTR [eax-0x7167afd]
  4014a4:	add    BYTE PTR [ebp+0x0],al
  4014a7:	mov    ecx,DWORD PTR [ebp-0x28]
  4014aa:	mov    ecx,ebx
  4014ac:	clc    
  4014ad:	jne    0x40147a
  4014af:	mov    esi,0xd672d3
  4014b4:	into   
  4014b5:	into   
  4014b6:	scas   eax,DWORD PTR es:[edi]
  4014b7:	dec    ebp
  4014b8:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  4014be:	sub    ecx,esi
  4014c0:	cmp    ecx,DWORD PTR [ebp+0x77]
  4014c3:	(bad)  
  4014c4:	mov    edi,eax
  4014c6:	mov    al,0x85
  4014c8:	mov    eax,edi
  4014ca:	add    BYTE PTR [ebp-0x75],al
  4014cd:	cmp    ah,BYTE PTR [esp+ebx*4-0x47cc38ab]
  4014d4:	xor    eax,DWORD PTR [ebp+0x4503f803]
  4014da:	(bad)  
  4014dc:	retf   0x559c
  4014df:	(bad)  
  4014e0:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  4014e7:	inc    ebp
  4014e8:	add    eax,0xeb9c4d3e
  4014ed:	(bad)  
  4014ee:	mov    ecx,esp
  4014f0:	lods   al,BYTE PTR ds:[esi]
  4014f1:	test   DWORD PTR [ebp-0x8],edx
  4014f4:	xor    ecx,DWORD PTR [ebp+0x33]
  4014f7:	mov    eax,DWORD PTR [ebx]
  4014f9:	lock add ecx,ebx
  4014fc:	bswap  esi
  4014fe:	retf   0x55d1
  401501:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  401507:	jmp    0x401502
  401509:	add    BYTE PTR ds:0xebc44d8b,al
  40150f:	push   ebp
  401510:	mov    ebp,DWORD PTR [ebx]
  401512:	test   al,0x8b
  401514:	push   ebp
  401515:	clc    
  401516:	xor    ecx,ebx
  401518:	xor    ecx,esi
  40151a:	add    edx,ecx
  40151c:	add    eax,DWORD PTR [edx+0xca010f]
  401522:	push   ebp
  401523:	dec    ebp
  401524:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40152a:	stc    
  40152b:	rol    DWORD PTR ds:0xebce4dd6,cl
  401531:	scas   eax,DWORD PTR es:[edi]
  401532:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  401538:	xor    ebp,DWORD PTR [ebx]
  40153a:	xor    edi,DWORD PTR [ebx]
  40153c:	add    esi,DWORD PTR [edi+0x3]
  40153f:	mov    ecx,DWORD PTR [edi]
  401541:	clc    
  401542:	retf   0x55cb
  401545:	into   
  401546:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40154d:	mov    eax,0x3376554d
  401552:	mov    esi,DWORD PTR [ebx]
  401554:	int3   
  401555:	add    edx,DWORD PTR [ebp+0x3]
  401558:	xor    ecx,DWORD PTR [edi]
  40155a:	xor    ecx,edx
  40155c:	add    edx,DWORD PTR [ebp+0x3]
  40155f:	mov    ecx,DWORD PTR [edi]
  401561:	lock retf 0x4dfa
  401565:	stc    
  401566:	mov    ecx,DWORD PTR [eax]
  401568:	or     BYTE PTR [ebp+0x4d],cl
  40156b:	jmp    0x10415fb
  401570:	dec    ebp
  401571:	dec    ebp
  401572:	(bad)  
  401573:	mov    ebx,esp
  401575:	clc    
  401576:	test   ebx,ecx
  401578:	clc    
  401579:	ror    DWORD PTR [ebp-0x2a],cl
  40157c:	mov    esi,ecx
  40157e:	call   0x3acb5b32
  401583:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40158a:	retf   
  40158b:	ja     0x40155b
  40158d:	mov    ebp,DWORD PTR [eax-0x48]
  401590:	dec    ebp
  401591:	xor    ecx,DWORD PTR [di+0x3]
  401595:	mov    esp,esp
  401597:	clc    
  401598:	push   ebp
  401599:	retf   
  40159a:	mov    dl,bl
  40159c:	adc    esi,edx
  40159e:	jb     0x40156e
  4015a0:	add    BYTE PTR [edi-0x3b7474b3],ch
  4015a6:	call   0x4d6be128
  4015ab:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  4015b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015b2:	lahf   
  4015b3:	inc    ebp
  4015b4:	xor    cl,BYTE PTR [ebp-0x78]
  4015b7:	mov    edx,edi
  4015b9:	clc    
  4015ba:	dec    ebp
  4015bb:	retf   
  4015bc:	mov    edx,ebx
  4015be:	call   0x560ee999
  4015c3:	scas   eax,DWORD PTR es:[edi]
  4015c4:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  4015ca:	lahf   
  4015cb:	sub    esi,DWORD PTR [edx]
  4015cd:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  4015d3:	lods   al,BYTE PTR ds:[esi]
  4015d4:	xor    esp,DWORD PTR [ebx]
  4015d6:	add    ecx,DWORD PTR [ebp-0x1c]
  4015d9:	mov    edi,DWORD PTR [ebp-0x8]
  4015dc:	mov    bl,cl
  4015de:	cmp    dl,bl
  4015e0:	jb     0x4015b0
  4015e2:	add    dh,dl
  4015e4:	dec    ebp
  4015e5:	scas   eax,DWORD PTR es:[edi]
  4015e6:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  4015ec:	shr    DWORD PTR [ebx],cl
  4015ee:	into   
  4015ef:	cmp    edx,esi
  4015f1:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  4015f7:	dec    ebp
  4015f8:	dec    ebp
  4015f9:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  4015ff:	retf   
  401600:	xor    edx,esi
  401602:	add    ecx,esi
  401604:	imul   ecx,edx
  401607:	mov    DWORD PTR [ebp+0x8],edx
  40160a:	xor    ecx,DWORD PTR [ebp+0x2b]
  40160d:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  401613:	add    esi,DWORD PTR [ebx]
  401615:	mov    ah,0x3
  401617:	inc    ebp
  401618:	(bad)  
  40161b:	pushf  
  40161c:	jge    0x4015a7
  40161e:	xor    ebx,eax
  401620:	sub    eax,DWORD PTR [ebp-0x73]
  401623:	(bad)  
  401624:	cmp    al,al
  401626:	jb     0x4015ad
  401628:	add    al,bh
  40162a:	ror    DWORD PTR [ebp-0x7a],1
  40162d:	xor    edi,edi
  40162f:	add    edi,edi
  401631:	jmp    0x401680
  401633:	mov    ecx,DWORD PTR [ebx-0x34341324]
  401639:	dec    ebp
  40163a:	into   
  40163b:	mov    ebp,DWORD PTR [edi-0x23737428]
  401641:	lahf   
  401642:	shl    DWORD PTR [edx],cl
  401644:	retf   0x5588
  401647:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40164d:	add    eax,DWORD PTR [eax]
  40164f:	in     al,0x4d
  401651:	push   ebp
  401652:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  401658:	popa   
  401659:	add    ch,cl
  40165b:	dec    ebp
  40165c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  401662:	dec    ebp
  401663:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  401669:	jge    0x401639
  40166b:	mov    BYTE PTR [edi+0xf723b3a],ch
  401671:	add    cl,dh
  401673:	dec    ebp
  401674:	dec    DWORD PTR [ebx-0x2c032375]
  40167a:	adc    BYTE PTR [ebp+0x1],0x8b
  40167e:	add    al,bl
  401680:	jge    0x40160e
  401682:	push   0xffffff9f
  401684:	push   0x8b3032
  401689:	shl    BYTE PTR [ebp+0x55],0x6a
  40168d:	xor    edi,edi
  40168f:	xor    edx,DWORD PTR [ebx+eax*1]
  401692:	inc    ebp
  401693:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  401699:	dec    ebp
  40169a:	or     BYTE PTR [ecx+0x4dc8e483],cl
  4016a0:	jbe    0x40162d
  4016a2:	mov    ebp,esp
  4016a4:	ror    bl,1
  4016a6:	enter  0x14ce,0xaf
  4016aa:	dec    DWORD PTR [ebx-0x2cef17f8]
  4016b0:	push   ebp
  4016b1:	retf   0x5540
  4016b4:	push   ebp
  4016b5:	mov    esi,DWORD PTR [edx-0x1c]
  4016b8:	mov    edx,ebx
  4016ba:	cld    
  4016bb:	(bad)  
  4016bc:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  4016c3:	sti    
  4016c4:	add    dh,cl
  4016c6:	push   0xffffff94
  4016c8:	call   FWORD PTR [edi+0x3b5032d0]
  4016ce:	mov    ecx,DWORD PTR [edi]
  4016d0:	int3   
  4016d1:	pop    esi
  4016d2:	inc    ebp
  4016d3:	dec    DWORD PTR [ecx+0x45e8c88b]
  4016d9:	push   ebp
  4016da:	xor    esi,DWORD PTR [ebx]
  4016dc:	mov    DWORD PTR [ebx],0xcace0f9c
  4016e2:	aas    
  4016e3:	push   ebp
  4016e4:	inc    ebp
  4016e5:	xor    eax,esi
  4016e7:	add    eax,esi
  4016e9:	mov    eax,DWORD PTR [ebx]
  4016eb:	(bad)  
  4016ec:	jmp    0x40167a
  4016ee:	mov    bl,BYTE PTR [edi-0x7674cdfb]
  4016f4:	rol    ah,1
  4016f6:	mov    esi,0xf133104d
  4016fb:	mov    edx,0xff348d80
  401700:	mov    dh,0xd1
  401702:	cmp    edx,DWORD PTR [ebp+0xf]
  401705:	mov    eax,DWORD PTR [edx-0x20]
  401708:	add    BYTE PTR [ebp-0x75],bh
  40170b:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  401712:	lahf   
  401713:	retf   0x8632
  401716:	cmp    ebp,0x8
  401719:	call   ebx
  40171b:	inc    ebp
  40171c:	inc    ebp
  40171d:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  401723:	mov    edi,DWORD PTR [eax]
  401725:	enter  0x49c,0xc7
  401729:	add    al,al
  40172b:	add    bl,al
  40172d:	(bad)  
  40172e:	clc    
  40172f:	enter  0x45,0x38
  401733:	push   eax
  401734:	pushf  
  401735:	mov    edi,eax
  401737:	int3   
  401738:	or     al,al
  40173a:	test   DWORD PTR [edi],edi
  40173c:	clc    
  40173d:	gs inc ebp
  40173f:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  401745:	push   ss
  401746:	xor    ecx,DWORD PTR [ebp+0x3]
  401749:	sub    edx,DWORD PTR [ecx-0x76]
  40174c:	dec    ebp
  40174d:	add    DWORD PTR [ebx+0x88d845],ecx
  401753:	mov    esi,DWORD PTR [ebx]
  401755:	or     BYTE PTR [ebx],al
  401757:	cmp    edx,DWORD PTR [ecx-0x38]
  40175a:	dec    ebp
  40175b:	out    dx,eax
  40175c:	xor    eax,DWORD PTR [ebp+0x3]
  40175f:	mov    edx,DWORD PTR [ecx-0x28]
  401762:	dec    ebp
  401763:	add    BYTE PTR [ebx],dh
  401765:	push   0x518003
  40176a:	push   eax
  40176b:	add    BYTE PTR [ebx-0x300748b],cl
  401771:	sbb    BYTE PTR [ebp+0x45],cl
  401774:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40177a:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  401780:	dec    ebp
  401781:	inc    ebp
  401782:	xor    eax,esi
  401784:	add    eax,esi
  401786:	push   ecx
  401787:	(bad)  
  401788:	dec    ebp
  401789:	mov    al,ds:0x35e03dff
  40178e:	retf   
  40178f:	(bad)  
  401790:	into   
  401791:	sub    bh,bh
  401793:	dec    esp
  401794:	adc    al,0x9c
  401796:	inc    ebp
  401797:	push   ebp
  401798:	test   DWORD PTR [edi],ecx
  40179a:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab5ff80]
  4017a1:	jmp    0xc9b926b5
  4017a6:	add    cl,dl
  4017a8:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4017b2:	cmp    cl,BYTE PTR [ebp+0x728b089c]
  4017b8:	rol    BYTE PTR [eax],0x59
  4017bb:	clc    
  4017bc:	popa   
  4017bd:	jb     0x4017c6
  4017bf:	mov    eax,DWORD PTR [ebp-0x30]
  4017c2:	xor    al,0x40
  4017c4:	sub    al,0xc7
  4017c6:	mov    ah,ch
  4017c8:	add    DWORD PTR [ebp+0x4534f845],eax
  4017ce:	sub    al,0x89
  4017d0:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  4017d7:	mov    ch,0xff
  4017d9:	clc    
  4017da:	add    DWORD PTR [ebp+0x60],0x3c
  4017de:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  4017e5:	inc    ebp
  4017e6:	dec    DWORD PTR [ebx-0x341ff701]
  4017ec:	test   esi,ecx
  4017ee:	dec    DWORD PTR [ebx-0x7f8a3301]
  4017f4:	push   eax
  4017f5:	add    DWORD PTR [ebp+0x0],eax
  4017f8:	dec    ebx
  4017fa:	or     al,0xce
  4017fc:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  401803:	into   
  401804:	add    BYTE PTR [ebx-0x34ff1400],cl
  40180a:	mov    esi,ecx
  40180c:	sar    bh,0x45
  40180f:	adc    al,0x8b
  401811:	clc    
  401812:	fadd   DWORD PTR [ebp+0x0]
  401815:	mov    ebp,DWORD PTR [edx+0x8]
  401818:	push   edi
  401819:	adc    BYTE PTR [eax+0x1],0x83
  40181d:	add    al,al
  40181f:	retf   
  401820:	mov    ecx,esi
  401822:	cld    
  401823:	mov    eax,DWORD PTR [eax+0xcb01cc]
  401829:	into   
  40182a:	add    BYTE PTR [ebx+0x756aec00],cl
  401830:	jne    0x401865
  401832:	inc    DWORD PTR [ebx]
  401834:	rcl    BYTE PTR [ecx+0x50],1
  401837:	push   eax
  401838:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40183e:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  401845:	sar    bh,0x84
  401848:	or     BYTE PTR [ebx],al
  40184a:	push   eax
  40184b:	add    BYTE PTR [ebx+0x453dc845],cl
  401851:	pushf  
  401852:	cmp    bh,al
  401854:	pushf  
  401855:	mov    ah,0x89
  401857:	test   eax,ebp
  401859:	clc    
  40185a:	inc    ebp
  40185b:	inc    ebp
  40185c:	mov    DWORD PTR [eax+eax*8],esi
  40185f:	sub    al,0x3b
  401861:	mov    BYTE PTR [ebx+ecx*4+0x59d8ec89],bl
  401868:	dec    ebp
  401869:	popa   
  40186a:	xor    eax,DWORD PTR [edi+0x3]
  40186d:	mov    ecx,DWORD PTR [ecx+0x4d59f4b4]
  401873:	popa   
  401874:	xor    eax,DWORD PTR [edi+0x3]
  401877:	or     DWORD PTR [ecx+0x45ff085c],0x0
  40187e:	fsub   DWORD PTR [ebp-0x380064]
  401884:	int3   
  401885:	lea    eax,[ebp+0x45fff860]
  40188b:	push   eax
  40188c:	cmp    eax,0xc78d9c75
  401891:	pop    esp
  401892:	lods   al,BYTE PTR ds:[esi]
  401893:	inc    DWORD PTR [ebp+0x4508f8ff]
  401899:	mov    edi,DWORD PTR [edi]
  40189b:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  4018a2:	test   DWORD PTR [edi-0x8],edx
  4018a5:	inc    esi
  4018a6:	inc    ebp
  4018a7:	add    BYTE PTR [ecx],dh
  4018a9:	push   0x8b809c
  4018ae:	in     al,dx
  4018af:	inc    ebp
  4018b0:	push   ebp
  4018b1:	mov    esi,DWORD PTR [ebx]
  4018b3:	cld    
  4018b4:	add    eax,DWORD PTR [eax+0xf013b]
  4018ba:	adc    al,0x0
  4018bc:	add    bh,bh
  4018be:	jmp    0xbd19db
  4018c3:	add    BYTE PTR [ebp+0x45],cl
  4018c6:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4018cc:	dec    ebp
  4018cd:	push   0x38033
  4018d2:	cmp    eax,DWORD PTR [eax]
  4018d4:	unpcklps xmm7,xmm0
  4018d7:	jne    0x4018d9
  4018d9:	dec    DWORD PTR [ebx+0x5545cc18]
  4018df:	mov    DWORD PTR [ebx],esi
  4018e1:	shl    BYTE PTR [ebx],1
  4018e3:	inc    ebp
  4018e4:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4018ea:	retf   0x5575
  4018ed:	dec    DWORD PTR [ebx-0x5ba17e8]
  4018f3:	(bad)  
  4018f4:	stc    
  4018f5:	in     al,dx
  4018f6:	or     al,0x85
  4018f8:	dec    ebp
  4018f9:	clc    
  4018fa:	xor    eax,DWORD PTR [ebp+0x3]
  4018fd:	mov    ebp,ecx
  4018ff:	rol    BYTE PTR [eax],1
  401901:	inc    ebp
  401902:	add    BYTE PTR [eax-0x7747ab3],bh
  401908:	clc    
  401909:	inc    ebp
  40190a:	retf   
  40190b:	mov    edx,ebx
  40190d:	in     al,dx
  40190e:	(bad)  
  40190f:	retf   
  401910:	into   
  401911:	into   
  401912:	scas   eax,DWORD PTR es:[edi]
  401913:	dec    ebp
  401914:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40191a:	sub    ecx,esi
  40191c:	cmp    ecx,DWORD PTR [ebp+0x77]
  40191f:	(bad)  
  401920:	mov    edi,eax
  401922:	int3   
  401923:	test   DWORD PTR [ecx-0x74baff08],ecx
  401929:	cmp    ch,BYTE PTR [esp+ebx*4-0x57cc38ab]
  401930:	xor    eax,DWORD PTR [ebp+0x4503f803]
  401936:	(bad)  
  401938:	retf   0x559c
  40193b:	(bad)  
  40193c:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  401943:	inc    ebp
  401944:	add    eax,0xeb9c4d3e
  401949:	(bad)  
  40194a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  401950:	xor    ecx,DWORD PTR [ebp+0x33]
  401953:	mov    eax,DWORD PTR [ebx]
  401955:	call   0xce4fe45d
  40195a:	retf   0x55d1
  40195d:	test   BYTE PTR [ebx-0x5ff17fe],cl
  401963:	jmp    0x40195e
  401965:	add    BYTE PTR ds:0xebf44d8b,al
  40196b:	push   ebp
  40196c:	mov    ebp,DWORD PTR [ebx]
  40196e:	mov    eax,0x33f8558b
  401973:	retf   
  401974:	xor    ecx,esi
  401976:	add    edx,ecx
  401978:	add    eax,DWORD PTR [edx+0xca010f]
  40197e:	push   ebp
  40197f:	dec    ebp
  401980:	mov    ecx,DWORD PTR [ebx-0x34050718]
  401986:	stc    
  401987:	rol    DWORD PTR ds:0xebce4dd6,cl
  40198d:	scas   eax,DWORD PTR es:[edi]
  40198e:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  401994:	xor    ebp,DWORD PTR [ebx]
  401996:	xor    edi,DWORD PTR [ebx]
  401998:	add    esi,DWORD PTR [edi+0x3]
  40199b:	mov    ecx,DWORD PTR [edi]
  40199d:	clc    
  40199e:	retf   0x55cb
  4019a1:	into   
  4019a2:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4019a9:	test   al,0x4d
  4019ab:	push   ebp
  4019ac:	jbe    0x4019e1
  4019ae:	mov    esi,DWORD PTR [ebx]
  4019b0:	mov    al,0x3
  4019b2:	push   ebp
  4019b3:	add    esi,DWORD PTR [ebx]
  4019b5:	rdpmc  
  4019b7:	retf   0x5503
  4019ba:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4019c0:	dec    ebp
  4019c1:	stc    
  4019c2:	mov    ecx,DWORD PTR [eax]
  4019c4:	or     BYTE PTR [ebp+0x4d],cl
  4019c7:	jmp    0x1341a57
  4019cc:	dec    ebp
  4019cd:	dec    ebp
  4019ce:	(bad)  
  4019cf:	mov    ebx,esp
  4019d1:	clc    
  4019d2:	test   ebx,ecx
  4019d4:	clc    
  4019d5:	ror    DWORD PTR [ebp-0x2a],cl
  4019d8:	mov    esi,ecx
  4019da:	lock scas eax,DWORD PTR es:[edi]
  4019dc:	inc    ebp
  4019dd:	mov    edi,DWORD PTR [edx]
  4019df:	hlt    
  4019e0:	pushf  
  4019e1:	jge    0x40196e
  4019e3:	sub    ebx,esp
  4019e5:	cmp    ecx,ebx
  4019e7:	ja     0x4019b7
  4019e9:	mov    ebp,DWORD PTR [eax-0x58]
  4019ec:	dec    ebp
  4019ed:	xor    ecx,DWORD PTR [di+0x3]
  4019f1:	mov    esp,esp
  4019f3:	clc    
  4019f4:	push   ebp
  4019f5:	retf   
  4019f6:	mov    dl,bl
  4019f8:	adc    esi,edx
  4019fa:	jb     0x4019ca
  4019fc:	add    BYTE PTR [edi-0xb7474b3],ch
  401a02:	lock jge 0x4019d0
  401a05:	sub    ecx,DWORD PTR [ebp+0x3b]
  401a08:	mov    esi,DWORD PTR [edi-0x20]
  401a0b:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459f]
  401a12:	mov    BYTE PTR [ebx-0x34b20729],cl
  401a18:	mov    edx,ebx
  401a1a:	lock (bad) 
  401a1c:	ror    esi,cl
  401a1e:	push   ebp
  401a1f:	scas   eax,DWORD PTR es:[edi]
  401a20:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  401a26:	lahf   
  401a27:	sub    esi,DWORD PTR [edx]
  401a29:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  401a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a30:	xor    esp,DWORD PTR [ebx]
  401a32:	add    ecx,DWORD PTR [ebp-0x1c]
  401a35:	mov    edi,DWORD PTR [ebp-0x8]
  401a38:	mov    bl,cl
  401a3a:	cmp    dl,bl
  401a3c:	jb     0x401a0c
  401a3e:	add    dh,dl
  401a40:	dec    ebp
  401a41:	scas   eax,DWORD PTR es:[edi]
  401a42:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  401a48:	shr    DWORD PTR [ebx],cl
  401a4a:	into   
  401a4b:	cmp    edx,esi
  401a4d:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  401a53:	dec    ebp
  401a54:	dec    ebp
  401a55:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  401a5b:	retf   
  401a5c:	xor    edx,esi
  401a5e:	add    ecx,esi
  401a60:	imul   ecx,edx
  401a63:	mov    DWORD PTR [ebp+0x8],edx
  401a66:	xor    ecx,DWORD PTR [ebp+0x2b]
  401a69:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  401a6f:	add    esi,DWORD PTR [ebx]
  401a71:	rol    BYTE PTR [ebx],0x45
  401a74:	(bad)  
  401a77:	pushf  
  401a78:	jge    0x401a03
  401a7a:	xor    esp,eax
  401a7c:	sub    eax,DWORD PTR [ebp-0x73]
  401a7f:	(bad)  
  401a80:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  401a87:	dec    ebp
  401a88:	xchg   BYTE PTR [ebx],dh
  401a8a:	inc    DWORD PTR [ebx]
  401a8c:	(bad)  
  401a8d:	jmp    0x401adc
  401a8f:	mov    ecx,DWORD PTR [ebx-0x34341324]
  401a95:	dec    ebp
  401a96:	into   
  401a97:	mov    ebp,DWORD PTR [edi-0x23737420]
  401a9d:	lahf   
  401a9e:	shl    DWORD PTR [edx],cl
  401aa0:	retf   0x5588
  401aa3:	or     ecx,DWORD PTR [ebp+0x7233114d]
  401aa9:	add    eax,DWORD PTR [eax]
  401aab:	in     al,0x4d
  401aad:	push   ebp
  401aae:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  401ab4:	popa   
  401ab5:	add    ch,cl
  401ab7:	dec    ebp
  401ab8:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  401abe:	dec    ebp
  401abf:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  401ac5:	jge    0x401a95
  401ac7:	mov    BYTE PTR [edi+0xf723b3a],ch
  401acd:	add    cl,dh
  401acf:	dec    ebp
  401ad0:	dec    DWORD PTR [ebx-0x2c032301]
  401ad6:	inc    ebp
  401ad7:	push   ebp
  401ad8:	dec    DWORD PTR [ebx-0x73ff1f34]
  401ade:	lea    ebx,[edi-0x7400cdac]
  401ae4:	push   eax
  401ae5:	mov    ah,0x45
  401ae7:	push   ebp
  401ae8:	mov    esi,DWORD PTR [ebx]
  401aea:	les    esi,FWORD PTR [ebx]
  401aec:	add    BYTE PTR [ebx],al
  401aee:	inc    DWORD PTR [ebx]
  401af0:	mov    ecx,DWORD PTR [edi]
  401af2:	cld    
  401af3:	retf   0x4d80
  401af6:	add    DWORD PTR [ecx+0x4d30e400],ecx
  401afc:	jne    0x401a89
  401afe:	(bad)  
  401aff:	in     al,dx
  401b00:	ror    bl,1
  401b02:	pop    ebp
  401b03:	into   
  401b04:	add    BYTE PTR [edi-0xf2f7475],ch
  401b0a:	not    bl
  401b0c:	adc    al,0xca
  401b0e:	inc    ebp
  401b0f:	push   ebp
  401b10:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  401b16:	push   0xaf80d6
  401b1b:	mov    eax,DWORD PTR [eax]
  401b1d:	fdiv   st(7),st
  401b1f:	sti    
  401b20:	sbb    dh,cl
  401b22:	pop    esi
  401b23:	xchg   esp,eax
  401b24:	leave  
  401b25:	lahf   
  401b26:	add    al,0x32
  401b28:	push   ebp
  401b29:	cmp    ebp,esp
  401b2b:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  401b2f:	dec    DWORD PTR [ecx-0x740f0375]
  401b35:	push   ebp
  401b36:	cld    
  401b37:	xor    ecx,DWORD PTR [esi-0x76f07efd]
  401b3d:	retf   0x558b
  401b40:	clc    
  401b41:	xor    esi,eax
  401b43:	add    esi,DWORD PTR [ebp-0x75]
  401b46:	(bad)  
  401b47:	hlt    
  401b48:	or     cl,BYTE PTR [esi+eax*8-0x39cdf761]
  401b4f:	mov    DWORD PTR [edx],ecx
  401b51:	hlt    
  401b52:	(bad)  
  401b53:	dec    ebp
  401b54:	add    dh,BYTE PTR [ebx]
  401b56:	leave  
  401b57:	mov    edx,0xffec8d55
  401b5c:	push   ecx
  401b5d:	rol    DWORD PTR [ebp+0x55],1
  401b60:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  401b66:	mov    eax,0xf8030b33
  401b6b:	lar    ecx,di
  401b6e:	push   ebp
  401b6f:	retf   0x863b
  401b72:	jne    0x401b71
  401b74:	mov    edi,edi
  401b76:	or     BYTE PTR [ebp+0x41],dh
  401b79:	mov    esp,edx
  401b7b:	cld    
  401b7c:	inc    eax
  401b7d:	mov    al,0x15
  401b7f:	add    DWORD PTR [ecx+0x0],eax
  401b82:	in     eax,dx
  401b83:	test   DWORD PTR [ecx-0x1],eax
  401b86:	sar    bh,cl
  401b88:	ret    0x8b
  401b8b:	cld    
  401b8c:	mov    eax,DWORD PTR [eax+0x8d0151]
  401b92:	clc    
  401b93:	xor    BYTE PTR [ebp+0x45],al
  401b96:	mov    ecx,DWORD PTR [ebx+0x8ec0fc]
  401b9c:	loopne 0x401b9d
  401b9e:	mov    edi,edi
  401ba0:	mov    ecx,eax
  401ba2:	clc    
  401ba3:	jne    0x401b75
  401ba5:	call   0x812eae
  401baa:	adc    eax,0xc6854575
  401baf:	je     0x401bb2
  401bb1:	mov    eax,esi
  401bb3:	cld    
  401bb4:	or     DWORD PTR [eax+0x401c9],eax
  401bba:	push   ebp
  401bbb:	add    ah,ch
  401bbd:	add    BYTE PTR [ecx+0x6a],dl
  401bc0:	inc    ebp
  401bc1:	push   esi
  401bc2:	mov    DWORD PTR [eax-0x4],edx
  401bc5:	pop    edi
  401bc6:	mov    ebx,DWORD PTR [ebx-0x4]
  401bc9:	ret    0xb1
  401bcc:	push   es
  401bcd:	mov    ecx,DWORD PTR [ecx-0x77274af]
  401bd3:	clc    
  401bd4:	lock inc ebp
  401bd6:	jne    0x401c2e
  401bd8:	(bad)  
  401bd9:	jne    0x401bdf
  401bdb:	mov    eax,0xf841ba66
  401be0:	rol    BYTE PTR [esi],cl
  401be2:	(bad)  
  401be3:	jne    0x401c22
  401be5:	cmp    eax,ebx
  401be7:	pop    esi
  401be8:	mov    ecx,DWORD PTR [eax]
  401bea:	push   ecx
  401beb:	inc    ecx
  401bec:	lea    edi,[esi-0x8]
  401bef:	inc    edx
  401bf0:	inc    ebp
  401bf1:	int    0x8b
  401bf3:	inc    edx
  401bf4:	cld    
  401bf5:	jle    0x401bb5
  401bf7:	inc    ecx
  401bf8:	xchg   eax,ebp
  401bfa:	mov    ebx,eax
  401bfc:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  401c02:	or     edi,eax
  401c04:	inc    ebp
  401c05:	inc    ebp
  401c06:	(bad)  
  401c07:	mov    ecx,DWORD PTR [eax]
  401c09:	cld    
  401c0a:	(bad)  
  401c0b:	loop   0x401c0e
  401c0d:	mov    eax,esi
  401c0f:	mov    DWORD PTR ds:0x4f8c98b,eax
  401c15:	rcl    BYTE PTR [esi+0xf],1
  401c18:	iret   
  401c19:	inc    ebp
  401c1a:	leave  
  401c1b:	(bad)  
  401c1c:	dec    DWORD PTR [ecx]
  401c1e:	mov    eax,esi
  401c20:	mov    eax,DWORD PTR [edi]
  401c22:	mov    dh,0xdd
  401c25:	push   es
  401c26:	nop
  401c27:	(bad)  
  401c28:	inc    DWORD PTR [ebx]
  401c2a:	push   esi
  401c2b:	leave  
  401c2c:	iret   
  401c2d:	add    al,0x46
  401c2f:	push   ebp
  401c30:	loope  0x401c1e
  401c32:	push   ebp
  401c33:	push   ecx
  401c34:	inc    DWORD PTR [ebp+0x56]
  401c37:	mov    DWORD PTR [esi-0x4],eax
  401c3a:	in     eax,dx
  401c3b:	push   ebp
  401c3c:	sbb    BYTE PTR [eax+0x7c6daff],bh
  401c42:	add    al,BYTE PTR [edx]
  401c44:	mov    edx,DWORD PTR [ebp-0x17]
  401c47:	cmp    edi,esi
  401c49:	jne    0x401c4a
  401c4b:	(bad)  
  401c4c:	push   esi
  401c4d:	pop    es
  401c4e:	push   ebp
  401c4f:	mov    ebp,esp
  401c51:	or     BYTE PTR [ebp+0x41],al
  401c54:	add    edi,edx
  401c56:	sub    BYTE PTR [eax-0x4],al
  401c59:	ret    0xc275
  401c5c:	add    DWORD PTR [eax],eax
  401c5e:	sbb    al,0x8b
  401c60:	mov    edx,DWORD PTR [ecx+0x14]
  401c63:	lea    edx,[edx-0x1ba7508]
  401c69:	push   esi
  401c6a:	enter  0xd375,0xb8
  401c6e:	test   DWORD PTR [esi],0x6ce0750
  401c74:	enter  0xd375,0x3b
  401c78:	neg    DWORD PTR [esi+0x50]
  401c7b:	or     cl,dl
  401c7d:	inc    edx
  401c7e:	(bad)  
  401c7f:	jmp    0x36be470
  401c84:	inc    eax
  401c85:	jmp    0xc9901eda
  401c8a:	push   edi
  401c8b:	push   ebp
  401c8c:	imul   ah
  401c8e:	adc    DWORD PTR [ecx-0x1],0x45
  401c92:	add    BYTE PTR [ecx+0x55d3fc00],cl
  401c98:	lea    edi,[eax-0x7fff4ca]
  401c9e:	mov    eax,0x4550402
  401ca3:	cmp    ebp,ecx
  401ca5:	jne    0x401c52
  401ca7:	mov    eax,DWORD PTR ds:0x241e808
  401cad:	in     eax,dx
  401cae:	add    BYTE PTR [eax-0x7],al
  401cb1:	xlat   BYTE PTR ds:[ebx]
  401cb2:	ss inc ecx
  401cb4:	aas    
  401cb5:	loope  0x401d34
  401cb7:	ret    0x8b
  401cba:	lock mov edi,DWORD PTR [ebp-0x18]
  401cbe:	and    edi,edi
  401cc0:	mov    edi,edi
  401cc2:	call   0xe40e1d9e
  401cc7:	push   es
  401cc8:	add    al,ch
  401cca:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  401cd1:	(bad)  
  401cd2:	hlt    
  401cd3:	add    eax,0xffd3e87d
  401cd8:	cmp    bh,0x8
  401cdb:	(bad)  
  401cdc:	fld    DWORD PTR [esi]
  401cde:	out    dx,al
  401cdf:	call   0xff9f1be7
  401ce4:	cmp    al,0x46
  401ce6:	shr    eax,0x8
  401ce9:	(bad)  
  401cea:	pop    es
  401ceb:	fisttp QWORD PTR [ebp+0xe577eff]
  401cf1:	push   ebx
  401cf2:	add    BYTE PTR [ebx+0x24008b56],cl
  401cf8:	add    BYTE PTR [ebp+0x50],al
  401cfb:	push   eax
  401cfc:	add    DWORD PTR [ebx+0x757d1834],ecx
  401d02:	sub    edx,DWORD PTR [esi-0x24]
  401d05:	jne    0x401cbd
  401d07:	lods   eax,DWORD PTR ds:[esi]
  401d08:	mov    edx,DWORD PTR [edx-0x34]
  401d0b:	dec    esi
  401d0c:	out    0x83,eax
  401d0e:	into   
  401d0f:	push   edi
  401d11:	loopne 0x401ce1
  401d13:	shr    BYTE PTR [edx+ecx*4+0x0],1
  401d17:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  401d1e:	rol    DWORD PTR [edx],0x8
  401d21:	mov    esp,ecx
  401d23:	cmp    DWORD PTR [ebx],0xc
  401d26:	mov    esi,0x5001c0
  401d2b:	push   eax
  401d2c:	push   cs
  401d2d:	push   eax
  401d2e:	(bad)  
  401d2f:	sub    edx,edi
  401d31:	push   esi
  401d32:	adc    al,0xcb
  401d34:	ins    DWORD PTR es:[edi],dx
  401d35:	mov    eax,0x203e8
  401d3a:	add    al,ah
  401d3c:	inc    esi
  401d3d:	mov    al,ch
  401d3f:	pop    es
  401d40:	add    DWORD PTR [eax],0x1
  401d43:	add    dh,al
  401d45:	add    ah,ch
  401d47:	rol    DWORD PTR [edx-0xd],1
  401d4a:	cli    
  401d4b:	push   0x4a
  401d4d:	pop    ecx
  401d4e:	retf   0xfe6
  401d51:	add    BYTE PTR [ebx-0x4e72f41e],al
  401d57:	(bad)  
  401d58:	dec    BYTE PTR [ebx+0x45b1fc72]
  401d5e:	(bad)  
  401d5f:	sub    ebp,DWORD PTR [ebx]
  401d61:	and    al,0x52
  401d63:	(bad)  
  401d64:	dec    edi
  401d65:	inc    ebp
  401d66:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  401d6d:	add    BYTE PTR [ebp-0x7b],dh
  401d70:	pop    eax
  401d71:	add    BYTE PTR [edx+0x0],bl
  401d74:	pop    edx
  401d75:	dec    ebp
  401d76:	jmp    DWORD PTR [ebx]
  401d78:	and    al,0xec
  401d7a:	push   edx
  401d7b:	out    0x64,eax
  401d7d:	jmp    0xd3f21382
  401d82:	jmp    0x401ddc
  401d84:	mov    al,0xfe
  401d86:	dec    BYTE PTR [ebp-0x18fd8018]
  401d8c:	add    BYTE PTR [esi+ebp*1],bh
  401d8f:	pop    edx
  401d90:	icebp  
  401d91:	mov    eax,cs
  401d93:	ins    BYTE PTR es:[edi],dx
  401d94:	adc    eax,0x75510000
  401d99:	mov    esi,0x70158
  401d9e:	or     DWORD PTR [eax-0x74f48dfe],esi
  401da4:	mov    edi,esp
  401da6:	cld    
  401da7:	jge    0x401e1e
  401da9:	(bad)  
  401dab:	aas    
  401dac:	and    al,0x6d
  401dae:	adc    cl,0x1
  401db1:	mov    eax,DWORD PTR [eax]
  401db3:	and    ecx,DWORD PTR [ebx-0x167203fd]
  401db9:	dec    ebp
  401dba:	add    eax,ebp
  401dbc:	add    BYTE PTR [edx],al
  401dbe:	fadd   DWORD PTR [eax]
  401dc0:	stc    
  401dc1:	enter  0xee00,0x8b
  401dc5:	sbb    eax,0x1
  401dc8:	sbb    esi,ecx
  401dca:	in     al,0x0
  401dcc:	in     eax,dx
  401dcd:	add    BYTE PTR [eax],al
  401dcf:	jne    0x401d5c
  401dd1:	cmp    edx,esp
  401dd3:	jb     0x401dde
  401dd5:	jmp    0x401e4c
  401dd7:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  401ddd:	add    BYTE PTR [ebx+0x4d83d840],cl
  401de3:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  401de9:	jb     0x401d74
  401deb:	pop    edx
  401dec:	fadd   QWORD PTR [ebx-0x7445faa1]
  401df2:	or     dh,BYTE PTR [edx+0x0]
  401df5:	inc    edx
  401df6:	or     dl,bh
  401df8:	xlat   BYTE PTR ds:[ebx]
  401df9:	dec    edx
  401dfa:	push   edi
  401dfb:	add    al,0x7
  401dfd:	leave  
  401dfe:	rol    DWORD PTR [edx+eax*1],0x7
  401e02:	add    ecx,ecx
  401e04:	mov    edx,ecx
  401e06:	int3   
  401e07:	jmp    0x401dc7
  401e09:	mov    al,0x0
  401e0b:	(bad)  
  401e0c:	jne    0x401df6
  401e0e:	mov    eax,DWORD PTR [edx]
  401e10:	call   0xc1549b15
  401e15:	pop    edi
  401e16:	add    ebx,DWORD PTR [ecx-0x37]
  401e19:	pop    ecx
  401e1a:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  401e21:	push   es
  401e22:	mov    eax,DWORD PTR [eax]
  401e24:	int3   
  401e25:	add    ch,al
  401e27:	jae    0x401e11
  401e29:	int    0x1
  401e2b:	enter  0x3000,0x18
  401e2f:	add    BYTE PTR [ebp+0x75],al
  401e32:	mov    esi,DWORD PTR [eax-0x171f0134]
  401e38:	push   0x2
  401e3a:	pop    ecx
  401e3b:	add    BYTE PTR [eax],cl
  401e3d:	push   ebx
  401e3e:	lea    edi,[edi+eax*2]
  401e41:	mov    al,0x1
  401e43:	jb     0x401e45
  401e45:	mov    al,0x10
  401e47:	push   eax
  401e48:	add    al,0x75
  401e4a:	add    BYTE PTR [ebx],ch
  401e4c:	add    ebx,esp
  401e4e:	int3   
  401e4f:	jne    0x401e61
  401e51:	movsx  edx,cl
  401e54:	add    DWORD PTR [eax],eax
  401e56:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  401e5d:	mov    gs,edi
  401e5f:	add    BYTE PTR [eax-0x50],ch
  401e62:	add    al,ch
  401e64:	mov    eax,DWORD PTR [ecx]
  401e66:	sub    eax,DWORD PTR [eax]
  401e68:	jb     0x401edf
  401e6a:	add    DWORD PTR [esp+eiz*8-0x50],esi
  401e6e:	jge    0x401e58
  401e70:	add    al,0x1
  401e72:	add    DWORD PTR [eax],0x0
  401e75:	jne    0x401e77
  401e77:	je     0x401ebe
  401e79:	mov    eax,DWORD PTR [edi]
  401e7b:	ror    BYTE PTR [ebp+0x4d],1
  401e7e:	or     DWORD PTR [ecx+0x4d03d004],0x3
  401e85:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  401e8b:	mov    DWORD PTR [ebx],ebp
  401e8d:	fadd   DWORD PTR [eax+0x75]
  401e90:	inc    eax
  401e91:	pop    eax
  401e92:	lea    ebx,[ecx+0x4f]
  401e95:	push   0xb1000003
  401e9a:	out    dx,eax
  401e9b:	add    ebp,DWORD PTR [edx+edx*2]
  401e9e:	add    BYTE PTR [ebx+ecx*4],bh
  401ea1:	mov    ch,BYTE PTR [ebx]
  401ea3:	jb     0x401f17
  401ea5:	add    al,0x89
  401ea7:	push   eax
  401ea8:	call   0x84286c1a
  401ead:	add    DWORD PTR [eax+eax*1],eax
  401eb0:	jae    0x401ec6
  401eb2:	icebp  
  401eb3:	inc    ebp
  401eb4:	mov    eax,DWORD PTR gs:[ecx]
  401eb7:	int3   
  401eb8:	out    dx,al
  401eb9:	loopne 0x401f08
  401ebb:	sub    eax,DWORD PTR [edx]
  401ebd:	push   0xffffff83
  401ebf:	pop    esi
  401ec0:	push   cs
  401ec1:	jl     0x401edc
  401ec3:	add    al,0xaf
  401ec5:	xor    eax,0x832b6d00
  401eca:	mov    eax,DWORD PTR [edx]
  401ecc:	rcr    BYTE PTR [ebp+0x754500dc],cl
  401ed2:	ror    DWORD PTR [ebx+0x7dc8e803],1
  401ed8:	inc    ebp
  401ed9:	shr    ebx,0x3
  401edc:	or     DWORD PTR [eax],0x4
  401edf:	push   0xffffffa5
  401ee1:	pop    esi
  401ee2:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  401ee9:	jmp    0x401f48
  401eeb:	mov    edi,0xff0272
  401ef0:	fdivr  QWORD PTR [ebp+0x5d]
  401ef3:	push   0x4e
  401ef5:	pop    ecx
  401ef6:	call   0x4062fb
  401efb:	mov    DWORD PTR [ebx],eax
  401efd:	in     al,0xc8
  401eff:	rol    BYTE PTR [ebp-0x75],0xc1
  401f03:	call   0xaa20e4
  401f08:	pop    esi
  401f09:	enter  0xceff,0x8b
  401f0d:	repz mov ecx,DWORD PTR [ebp-0x34]
  401f11:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  401f18:	je     0x401f1a
  401f1a:	or     DWORD PTR [ebx-0x74183b24],eax
  401f20:	jne    0x401f06
  401f22:	jmp    0x401f1d
  401f24:	push   DWORD PTR [edx-0x24]
  401f27:	push   0x4d
  401f29:	pop    ecx
  401f2a:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  401f2e:	jge    0x401f36
  401f30:	mov    eax,eax
  401f32:	sub    ebp,DWORD PTR [edx+0x24]
  401f35:	pop    esi
  401f36:	inc    ebp
  401f37:	mov    esp,0x8b6077
  401f3c:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  401f42:	lods   al,BYTE PTR ds:[esi]
  401f43:	add    BYTE PTR [ebx],bh
  401f45:	enter  0xce73,0x49
  401f49:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  401f51:	stc    
  401f52:	jge    0x401fc6
  401f54:	jnp    0xdd3fa2b5
  401f5a:	call   0xc32030
  401f5f:	fadd   st(0),st
  401f61:	dec    esi
  401f62:	ins    BYTE PTR es:[edi],dx
  401f63:	stc    
  401f64:	cmp    al,0x73
  401f66:	push   ebp
  401f67:	mov    eax,0xf8028b
  401f6c:	jne    0x401f2f
  401f6e:	mov    esi,ecx
  401f70:	mov    esp,DWORD PTR [ebp+0x2c]
  401f73:	add    edi,DWORD PTR [ebp-0x24]
  401f76:	sub    esp,eax
  401f78:	and    al,0x45
  401f7a:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  401f80:	sbb    al,0xee
  401f82:	pop    esi
  401f83:	call   0x801fb3
  401f88:	fsubr  st,st(3)
  401f8a:	sti    
  401f8b:	add    BYTE PTR gs:[ecx],bh
  401f8e:	add    eax,esp
  401f90:	add    DWORD PTR [esi],eax
  401f92:	rol    DWORD PTR [ebp+0x8],0x29
  401f96:	mov    esp,eax
  401f98:	clc    
  401f99:	jne    0x402010
  401f9b:	mov    eax,0x8b0673
  401fa0:	loopne 0x401fe7
  401fa2:	loopne 0x401f2d
  401fa4:	lods   al,BYTE PTR ds:[esi]
  401fa5:	int3   
  401fa6:	inc    ebp
  401fa7:	mov    DWORD PTR gs:[eax+edi*8],eax
  401fab:	add    al,0xc3
  401fad:	sub    ecx,DWORD PTR [ebp+0x47]
  401fb0:	(bad)  
  401fb2:	shr    BYTE PTR [ebp-0x1f],0xe8
  401fb6:	add    eax,DWORD PTR [eax]
  401fb8:	call   0x641e0bd
  401fbd:	add    esi,DWORD PTR [esi-0x3b2efc83]
  401fc3:	dec    esi
  401fc4:	ins    DWORD PTR es:[edi],dx
  401fc5:	in     al,dx
  401fc6:	lea    eax,[eax]
  401fc8:	inc    ebp
  401fc9:	inc    ebp
  401fca:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  401fd0:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  401fda:	and    al,0xdc
  401fdc:	ror    DWORD PTR [edx+0x24],0xf7
  401fe0:	or     BYTE PTR [ebp+0x4c],dh
  401fe3:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  401fe7:	stos   BYTE PTR es:[edi],al
  401fe8:	adc    edx,edi
  401fea:	inc    esp
  401feb:	add    edi,DWORD PTR [eax]
  401fed:	jne    0x401fd2
  401fef:	mov    DWORD PTR [eax-0x7449db04],ecx
  401ff5:	cmp    ecx,DWORD PTR [edi]
  401ff7:	sub    BYTE PTR [ebp-0x7e],dl
  401ffa:	sar    ebp,0xb
  401ffd:	jmp    FWORD PTR [edi+0x2400392a]
  402003:	sub    esi,DWORD PTR [ebx-0x73]
  402006:	mov    esp,DWORD PTR [ecx+edi*4]
  402009:	mov    ecx,DWORD PTR [eax]
  40200b:	and    BYTE PTR [eax],al
  40200d:	jne    0x401fd9
  40200f:	sub    ebp,ecx
  402011:	sbb    BYTE PTR [esi+0x32],ah
  402014:	dec    ebp
  402015:	push   ebp
  402016:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40201c:	ret    
  40201d:	mov    edx,ebp
  40201f:	leave  
  402020:	sub    DWORD PTR [esi+0x24],ebx
  402023:	ret    0x2b
  402026:	pop    ax
  402028:	push   ebp
  402029:	rol    BYTE PTR [ebx],0xeb
  40202c:	add    DWORD PTR [ecx+0x6c0001],0x40
  402033:	jb     0x40208a
  402035:	ret    
  402036:	in     al,dx
  402037:	jecxz  0x401fc4
  402039:	push   esi
  40203a:	xchg   esp,eax
  40203b:	jne    0x40203d
  40203d:	cmp    edx,DWORD PTR [esi+0x1c]
  402040:	jne    0x402026
  402042:	mov    eax,DWORD PTR [ebp-0x77]
  402045:	ror    DWORD PTR [ebx+0x899408],0xe0
  40204c:	mov    esi,DWORD PTR [ebp-0x75]
  40204f:	pop    esi
  402050:	nop
  402051:	mov    eax,DWORD PTR [eax]
  402053:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  402059:	add    al,0x0
  40205b:	inc    ebp
  40205c:	mov    eax,DWORD PTR [ebx]
  40205e:	mov    ebp,ebx
  402060:	cmp    al,0xf
  402062:	or     al,al
  402064:	inc    ebp
  402065:	inc    ebp
  402066:	cmp    BYTE PTR [ebx+0x6c8bc89c],cl
  40206c:	cld    
  40206d:	add    BYTE PTR [edi+0x596c16c0],dh
  402073:	add    BYTE PTR [ecx-0x5],dl
  402076:	add    eax,0x17200
  40207b:	sbb    al,0x85
  40207d:	dec    esp
  40207e:	je     0x4020b8
  402080:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  402084:	add    BYTE PTR [ebx],bh
  402086:	(bad)  
  402087:	and    al,0x3b
  402089:	jae    0x402027
  40208b:	mov    cl,cl
  40208d:	inc    DWORD PTR [esp]
  402090:	push   ebp
  402091:	shr    esp,0x8
  402094:	in     al,dx
  402095:	push   esp
  402096:	and    DWORD PTR [eax],0xffffffdc
  402099:	retf   
  40209a:	(bad)  
  40209b:	mov    bh,0xe4
  40209d:	add    BYTE PTR [ebp+0x450ff8e9],dh
  4020a3:	retf   0x4cf8
  4020a6:	pushf  
  4020a7:	and    bh,al
  4020a9:	pop    ss
  4020aa:	rcr    cl,1
  4020ac:	test   DWORD PTR [eax],eax
  4020ae:	clc    
  4020af:	add    BYTE PTR [ebp+0x2b],al
  4020b2:	cmp    al,cl
  4020b4:	pushf  
  4020b5:	add    eax,0xd001c7
  4020ba:	add    eax,0x456cf8c0
  4020bf:	inc    eax
  4020c0:	push   ebx
  4020c1:	rcr    DWORD PTR [eax+0x4c0105],0x20
  4020c8:	inc    ebp
  4020c9:	fst    DWORD PTR [esi+0x29]
  4020cc:	mov    eax,DWORD PTR [eax]
  4020ce:	nop
  4020cf:	rol    BYTE PTR [eax],0xc0
  4020d2:	mov    ecx,DWORD PTR [ebp-0x3c4fdbe4]
  4020d8:	add    DWORD PTR [ebx-0x75f9af00],ecx
  4020de:	pop    ebp
  4020df:	add    DWORD PTR [ecx+0x758bf800],ecx
  4020e5:	or     BYTE PTR [ebp-0xce8aca],al
  4020eb:	mov    bl,BYTE PTR [eax]
  4020ed:	add    DWORD PTR [ebp+0x0],edx
  4020f0:	call   0xfff31ffe
  4020f5:	add    DWORD PTR [edi],ecx
  4020f7:	add    BYTE PTR [edi],al
  4020f9:	push   cs
  4020fa:	inc    ecx
  4020fb:	or     BYTE PTR [ebx+0x18008901],0x8
  402102:	leave  
  402103:	dec    ecx
  402104:	dec    esi
  402105:	add    esi,DWORD PTR [ebp-0x39]
  402108:	call   0xffe61009
  40210d:	clc    
  40210e:	inc    ebp
  40210f:	inc    ebp
  402110:	mov    ecx,DWORD PTR [edi]
  402112:	enter  0x49,0x35
  402116:	mov    ecx,DWORD PTR [eax]
  402118:	xor    eax,0x79f0807
  40211d:	xor    bl,BYTE PTR [edi-0x743ecda2]
  402123:	or     al,0x1c
  402125:	sbb    BYTE PTR ds:0x8b004d01,0x0
  40212c:	int3   
  40212d:	test   DWORD PTR [eax],eax
  40212f:	clc    
  402130:	inc    edx
  402132:	mov    eax,DWORD PTR [eax]
  402134:	fmul   DWORD PTR [ebx+0x74ff8300]
  40213a:	sub    BYTE PTR [ebp-0x40],ah
  40213d:	add    BYTE PTR [esi+0x45],bl
  402140:	leave  
  402141:	cmp    BYTE PTR [eax],bl
  402143:	pushf  
  402144:	mov    eax,edi
  402146:	jl     0x402128
  402148:	add    BYTE PTR [ebp+0x458df88b],al
  40214e:	add    al,0x3c
  402150:	or     BYTE PTR [eax+ebp*8-0x3617f139],bl
  402157:	test   edx,esp
  402159:	clc    
  40215a:	or     eax,DWORD PTR [ebp+0x40]
  40215d:	cmp    BYTE PTR [ecx+0x458b949f],cl
  402163:	sbb    al,0xbe
  402165:	mov    ecx,DWORD PTR [eax]
  402167:	xchg   esp,eax
  402168:	pop    es
  402169:	add    dh,al
  40216b:	mov    esp,DWORD PTR [ebp+0x1c]
  40216e:	add    BYTE PTR [edi-0x61],dl
  402171:	mov    eax,0x30132
  402176:	mov    DWORD PTR [ebp-0x68],eax
  402179:	mov    eax,DWORD PTR [ebp-0x74]
  40217c:	xor    eax,DWORD PTR [eax]
  40217e:	add    ecx,DWORD PTR [ebx-0xf637677]
  402184:	inc    ebp
  402185:	jge    0x4021d7
  402187:	mov    DWORD PTR [ebp-0xc],eax
  40218a:	xor    eax,eax
  40218c:	add    ecx,DWORD PTR [ebx]
  40218e:	push   eax
  40218f:	jne    0x4021d6
  402191:	mov    eax,DWORD PTR ds:0x3f001c
  402197:	dec    DWORD PTR [ebx-0x7f74e375]
  40219d:	add    eax,DWORD PTR [ecx]
  40219f:	cmp    al,0x0
  4021a1:	push   cs
  4021a2:	inc    ebp
  4021a3:	inc    ebp
  4021a4:	add    al,0x85
  4021a6:	add    BYTE PTR [edi+edi*8-0x1],dh
  4021aa:	mov    ebx,DWORD PTR [esp+ecx*1]
  4021ad:	mov    ebp,0x8bffff4d
  4021b2:	mov    ebx,DWORD PTR [esp+esi*8]
  4021b5:	sbb    al,0x1
  4021b8:	inc    ebp
  4021b9:	add    BYTE PTR [ebx-0x74a67700],cl
  4021bf:	push   ecx
  4021c0:	clc    
  4021c1:	add    eax,0x457218
  4021c6:	mov    eax,DWORD PTR [ebp+0x50]
  4021c9:	jne    0x402210
  4021cb:	mov    ecx,DWORD PTR [ebx-0x39761fe4]
  4021d1:	add    edi,eax
  4021d3:	add    BYTE PTR [ebp+0x31],al
  4021d6:	lea    eax,[eax+0x4501dc]
  4021dc:	lea    edx,[eax-0x74]
  4021df:	xor    ecx,DWORD PTR [ebx-0x39a4f7a1]
  4021e5:	ret    0xc7
  4021e8:	mov    eax,DWORD PTR [eax+0xee011c]
  4021ee:	add    BYTE PTR [eax],cl
  4021f0:	push   eax
  4021f1:	inc    ebp
  4021f2:	inc    ebp
  4021f3:	add    DWORD PTR [ebx+0x8b98eb],ecx
  4021f9:	test   edi,eax
  4021fb:	jne    0x402189
  4021fd:	mov    eax,DWORD PTR [eax]
  4021ff:	mov    eax,DWORD PTR [eax]
  402201:	push   eax
  402202:	pop    ebp
  402203:	inc    ebp
  402204:	dec    DWORD PTR [ebx+0x590ce48b]
  40220a:	rcl    BYTE PTR [ecx-0x40],1
  40220d:	xor    esi,DWORD PTR [eax]
  40220f:	add    DWORD PTR [ebp-0x70],0xffffff83
  402213:	mov    edi,0x8372fc
  402218:	push   eax
  402219:	(bad)  
  40221a:	jbe    0x402261
  40221c:	mov    ecx,DWORD PTR [ebx-0x39341714]
  402222:	ret    
  402223:	(bad)  
  402224:	dec    ebp
  402225:	inc    ebp
  402226:	jmp    0x4021b5
  402228:	mov    ecx,DWORD PTR [esp+eiz*8-0xf7f375]
  40222f:	(bad)  
  402230:	cld    
  402231:	(bad)  
  402232:	push   ebp
  402233:	mov    ecx,DWORD PTR [eax+0x18aa8b1c]
  402239:	add    BYTE PTR [ebx],bh
  40223b:	push   eax
  40223c:	push   eax
  40223d:	inc    ebp
  40223e:	jmp    0x3d86dce
  402243:	add    BYTE PTR [ebx+0x8ca0c7],cl
  402249:	add    BYTE PTR [ebx-0x13cfd500],cl
  40224f:	inc    ebp
  402250:	ret    
  402251:	mov    DWORD PTR [ebp-0x14],edx
  402254:	mov    edx,eax
  402256:	sub    BYTE PTR [ebp-0x2d],cl
  402259:	mov    ecx,DWORD PTR [ebp-0x75]
  40225c:	mov    eax,esi
  40225e:	rol    BYTE PTR [eax],1
  402260:	inc    ebp
  402261:	add    DWORD PTR [eax],eax
  402263:	inc    ebp
  402264:	add    BYTE PTR [ecx+0x18838beb],cl
  40226a:	clc    
  40226b:	inc    eax
  40226c:	jmp    0x8d45:0x74945589
  402273:	xor    ecx,DWORD PTR [eax]
  402275:	add    edx,DWORD PTR [ebp-0x77]
  402278:	mov    ebx,DWORD PTR [eax-0x76aaba18]
  40227e:	mov    ebx,DWORD PTR [eax+edi*8-0x76af48bb]
  402285:	inc    ebp
  402286:	fdiv   DWORD PTR [ebx]
  402288:	loop   0x40228d
  40228a:	(bad)  
  40228c:	add    BYTE PTR [ebp+0x55],al
  40228f:	add    eax,0xd8008b
  402294:	jmp    0xcd80:0x611c818b
  40229b:	add    DWORD PTR [ebx],esi
  40229d:	add    BYTE PTR [ecx-0x63fbc2bb],al
  4022a3:	add    BYTE PTR [ebp-0x77],dh
  4022a6:	mov    edx,DWORD PTR [eax+0x45cb30d4]
  4022ac:	dec    ebp
  4022ad:	inc    DWORD PTR [ebx]
  4022af:	test   DWORD PTR [ebx+0x108b0074],eax
  4022b5:	sbb    BYTE PTR [ebp+0x65],dl
  4022b8:	add    eax,DWORD PTR [eax]
  4022ba:	mov    edi,DWORD PTR [eax-0x75]
  4022bd:	add    ah,dl
  4022bf:	and    edx,DWORD PTR [ecx*2-0x741bd475]
  4022c6:	dec    ebp
  4022c7:	mov    DWORD PTR [ebx-0xfc071c],eax
  4022cd:	dec    ebp
  4022ce:	call   0x5541d05d
  4022d3:	inc    ebp
  4022d4:	add    DWORD PTR [ebx+0x855fcf4],ecx
  4022da:	cmp    ecx,DWORD PTR [ebp-0x5c]
  4022dd:	inc    eax
  4022de:	add    BYTE PTR [ecx+0x73],dl
  4022e1:	jb     0x4022e6
  4022e3:	mov    esi,eax
  4022e5:	cmp    al,0x50
  4022e7:	retf   
  4022e8:	mov    DWORD PTR [ecx+0x4500f0],eax
  4022ee:	test   ebx,edx
  4022f0:	andnps xmm6,XMMWORD PTR [edx+0x3]
  4022f4:	dec    DWORD PTR [ecx+0x51ecfc8b]
  4022fa:	inc    ebp
  4022fb:	add    eax,edi
  4022fd:	mov    DWORD PTR [eax+ebx*1-0x38ffab00],ecx
  402304:	inc    ecx
  402305:	hlt    
  402306:	mov    DWORD PTR [eax],eax
  402308:	xchg   esp,eax
  402309:	add    BYTE PTR [ebp+0x7d],al
  40230c:	xor    eax,edx
  40230e:	add    edx,ecx
  402310:	mov    DWORD PTR [ecx+0x5f45e898],ecx
  402316:	mov    DWORD PTR [eax-0x64],edx
  402319:	mov    DWORD PTR [ebp-0x8],eax
  40231c:	push   eax
  40231d:	push   ebp
  40231e:	inc    ebp
  40231f:	mov    DWORD PTR [ebx],esi
  402321:	call   0xf907829
  402326:	inc    ebp
  402327:	adc    al,BYTE PTR ds:0x810055
  40232d:	dec    DWORD PTR [ebx-0x7f76e400]
  402333:	aam    0x1
  402335:	push   ebp
  402336:	add    cl,al
  402338:	xor    BYTE PTR [eax*2-0x7472003e],cl
  40233f:	call   FWORD PTR [esi+edx*8]
  402342:	cmp    dl,0x1
  402345:	test   DWORD PTR [eax],eax
  402347:	clc    
  402348:	inc    ebp
  402349:	and    cl,BYTE PTR [ebx+0x7503fc4d]
  40234f:	mov    DWORD PTR [ecx+0x1008ffd4],ecx
  402355:	cmp    edi,edi
  402357:	je     0x402329
  402359:	mov    eax,DWORD PTR [ebp-0x4]
  40235c:	add    edx,DWORD PTR [ecx]
  40235e:	sbb    al,0x0
  402360:	dec    ebp
  402361:	dec    ebp
  402362:	mov    DWORD PTR [ecx+0x4545011c],ecx
  402368:	mov    ecx,DWORD PTR [ebx+0x4590181c]
  40236e:	add    DWORD PTR [edx],eax
  402370:	add    BYTE PTR [ebp+0x45],cl
  402373:	jne    0x402300
  402375:	mov    ecx,DWORD PTR [eax+esi*8-0x7474ab00]
  40237c:	cmp    esp,esi
  40237e:	jb     0x402311
  402380:	mov    eax,DWORD PTR [eax]
  402382:	mov    eax,DWORD PTR [eax]
  402384:	mov    edx,DWORD PTR [esp+edi*1]
  402387:	inc    ebp
  402388:	je     0x402315
  40238a:	push   eax
  40238b:	add    al,0x38
  40238d:	push   ebp
  40238e:	mov    DWORD PTR ds:[ecx],edi
  402391:	in     al,0xc
  402393:	shl    BYTE PTR [eax],cl
  402395:	test   DWORD PTR [ecx],eax
  402397:	call   DWORD PTR [edx]
  402399:	inc    esi
  40239b:	inc    ebp
  40239c:	ror    BYTE PTR [ecx+0x45459011],1
  4023a2:	jmp    0xff4120ab
  4023a7:	mov    ecx,DWORD PTR [ebx-0xfba7eb0]
  4023ad:	mov    eax,DWORD PTR [eax]
  4023af:	loopne 0x40233c
  4023b1:	(bad)  
  4023b2:	sbb    al,0xc7
  4023b4:	inc    ebp
  4023b5:	inc    ebp
  4023b6:	push   ebx
  4023b7:	lea    edi,[eax+0x454fdc]
  4023bd:	lea    ecx,[ecx-0x74a774]
  4023c3:	or     BYTE PTR [edi-0x3a],dl
  4023c6:	js     0x40238f
  4023c8:	mov    ecx,DWORD PTR [ebx-0x117ae39a]
  4023ce:	inc    DWORD PTR [eax]
  4023d0:	call   DWORD PTR [eax+0x7a]
  4023d3:	inc    ebp
  4023d4:	add    BYTE PTR [ebx+0x859866],cl
  4023da:	(bad)  
  4023db:	(bad)  
  4023dc:	dec    DWORD PTR [ebx-0x2f99f3b9]
  4023e2:	test   DWORD PTR [ebp-0x1],eax
  4023e5:	mov    edi,edi
  4023e7:	add    al,0x0
  4023ea:	add    ax,WORD PTR [ebp-0xb20004]
  4023f1:	inc    DWORD PTR [edi+0x14]
  4023f4:	data16 or BYTE PTR [ebp-0xac008b],al
  4023fb:	push   ebp
  4023fc:	ror    BYTE PTR [ebx+0x4585fc66],0xff
  402403:	(bad)  
  402404:	inc    DWORD PTR [ebx+eax*2]
  402407:	inc    ebp
  402408:	add    BYTE PTR [ebx+0x45851c66],cl
  40240e:	dec    DWORD PTR [ebx+0xc090ff]
  402414:	mov    ax,WORD PTR [ebp-0x7f00e4]
  40241b:	add    DWORD PTR [esi+0x0],eax
  40241e:	add    BYTE PTR [eax],dh
  402420:	xor    WORD PTR [ebp-0xcd00e1],ax
  402427:	cmp    al,bh
  402429:	jbe    0x4023b4
  40242b:	lea    ebp,[edi+esi*1-0x1]
  40242f:	mov    edi,DWORD PTR [eax+0x394f03]
  402435:	jae    0x4023c0
  402437:	mov    ebp,DWORD PTR [esi-0x75]
  40243a:	dec    DWORD PTR [ebx+0x3d02bb8]
  402440:	add    BYTE PTR [ecx-0x38f7477],cl
  402446:	call   DWORD PTR [esi+0x55d7ffb8]
  40244c:	add    ah,ch
  40244e:	mov    esp,ebp
  402450:	jb     0x402452
  402452:	inc    DWORD PTR [eax]
  402454:	mov    eax,0x89e145
  402459:	sbb    al,0x89
  40245b:	push   esi
  40245c:	je     0x40246c
  40245e:	inc    DWORD PTR [eax]
  402460:	(bad)  
  402461:	data16 in al,dx
  402463:	test   DWORD PTR [ebp+0x7efff8ff],eax
  402469:	lea    eax,[eax]
  40246b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40246c:	mov    WORD PTR [ebp-0xa50077],0x45ff
  402475:	mov    eax,0x9c4f38
  40247a:	lea    ecx,[ecx-0x76a3f6]
  402480:	js     0x40240f
  402482:	inc    DWORD PTR [esi+eax*8]
  402485:	mov    esp,esp
  402487:	pop    esi
  402488:	(bad)  
  402489:	jmp    ebp
  40248b:	add    esi,0x50
  40248e:	out    0x89,al
  402490:	(bad)  
  402491:	pusha  
  402492:	out    0xff,eax
  402494:	(bad)  
  402495:	(bad)  
  402496:	call   0xc6c957a3
  40249b:	(bad)  
  40249c:	jmp    0xbec358a0
  4024a1:	inc    ebx
  4024a2:	add    BYTE PTR [ecx-0xbb9c00],cl
  4024a8:	in     al,0xb8
  4024aa:	mov    dh,0x4f
  4024ac:	add    DWORD PTR [eax],0x4a
  4024af:	mov    esi,ebx
  4024b1:	data16 mov bh,bh
  4024b4:	add    DWORD PTR [ebx-0x7613c7fa],0x45
  4024bb:	push   0xb845ffe3
  4024c0:	in     eax,dx
  4024c1:	dec    edi
  4024c2:	inc    ebp
  4024c3:	add    bl,dl
  4024c5:	mov    DWORD PTR [ebp+0x6a],eax
  4024c8:	in     al,dx
  4024c9:	inc    DWORD PTR [ebp-0x75]
  4024cc:	sub    eax,0x2c854566
  4024d1:	inc    DWORD PTR [ebp-0x1]
  4024d4:	jle    0x402520
  4024d6:	leave  
  4024d7:	add    BYTE PTR [esi+eiz*2-0x24],al
  4024db:	test   DWORD PTR [esi+0x4aff83ff],esi
  4024e1:	push   0x668800de
  4024e6:	add    DWORD PTR [ebp-0x1300f9],0x45
  4024ed:	outs   dx,DWORD PTR ds:[esi]
  4024ee:	in     eax,dx
  4024ef:	add    BYTE PTR [ebp+0x66],al
  4024f2:	(bad)  
  4024f3:	test   DWORD PTR [ebp-0x1],eax
  4024f6:	jmp    0x4500:0xe17f45ff
  4024fd:	data16 fild WORD PTR [ebp-0x1100bb]
  402504:	inc    ebp
  402505:	inc    ebp
  402506:	xlat   BYTE PTR ds:[ebx]
  402507:	cmp    eax,DWORD PTR [ebp-0x64]
  40250a:	jle    0x4024c4
  40250c:	leave  
  40250d:	icebp  
  40250e:	inc    esp
  40250f:	add    ah,dl
  402511:	mov    DWORD PTR [esi+0x4aff8376],esi
  402517:	(bad)  
  402518:	fdivrp st(0),st
  40251a:	mov    BYTE PTR [ebp+0x4708f883],al
  402520:	in     al,dx
  402521:	test   WORD PTR [ebp-0x1],ax
  402528:	inc    ebp
  402529:	inc    ebp
  40252a:	mov    edx,ecx
  40252c:	cld    
  40252d:	inc    ebp
  40252e:	out    dx,al
  40252f:	rcl    BYTE PTR [ebx],cl
  402531:	inc    ebp
  402532:	mov    edi,edx
  402534:	mov    eax,DWORD PTR [ebp+0x54]
  402537:	sub    eax,0x2c3b45ff
  40253c:	jne    0x402510
  40253e:	mov    DWORD PTR [ebp-0x44],0xf8c9857e
  402545:	int3   
  402546:	inc    ebp
  402547:	add    ch,ch
  402549:	lea    ebx,[ebp+ecx*1+0x181c0f8b]
  402550:	xor    bl,0x1
  402553:	add    eax,DWORD PTR [eax]
  402555:	inc    ecx
  402556:	adc    BYTE PTR [eax],bl
  402558:	test   ecx,edi
  40255a:	add    dh,BYTE PTR [edx+0x0]
  40255d:	mov    BYTE PTR [ebp-0x24],0x8b
  402561:	(bad)  
  402562:	jl     0x402541
  402564:	add    dh,al
  402566:	mov    esi,ebx
  402568:	mov    eax,esi
  40256a:	sbb    al,0xdf
  40256c:	add    dh,0x1
  40256f:	loopne 0x402571
  402571:	(bad)  
  402572:	adc    cl,ah
  402574:	or     dh,al
  402576:	inc    ebp
  402577:	loop   0x402566
  402579:	xor    ebp,edx
  40257b:	(bad)  
  40257c:	(bad)  
  40257d:	or     eax,0x18ee0ff8
  402582:	jle    0x402577
  402584:	inc    ebp
  402585:	add    ebx,DWORD PTR [ecx+0x41]
  402588:	adc    BYTE PTR [eax],bl
  40258a:	repnz stc 
  40258c:	xor    BYTE PTR [edx+0x34],0xc6
  402590:	adc    ah,dl
  402592:	dec    ecx
  402593:	(bad)  
  402594:	repnz aad 0x45
  402597:	(bad)  
  402598:	mov    esi,edx
  40259a:	adc    al,0xc6
  40259c:	call   edi
  40259e:	(bad)  
  40259f:	(bad)  
  4025a0:	adc    al,bl
  4025a2:	inc    esi
  4025a4:	push   eax
  4025a5:	fld    DWORD PTR [ebp-0x3a]
  4025a8:	mov    esi,0x7c608da
  4025ad:	fcmovnb st,st(6)
  4025af:	xor    ebx,DWORD PTR [edi+0x30d328d]
  4025b5:	(bad)  
  4025b7:	sbb    BYTE PTR [ebp-0xd],al
  4025ba:	add    DWORD PTR [ebx],0x66
  4025bd:	inc    ecx
  4025be:	mov    ebx,DWORD PTR [eax]
  4025c0:	sbb    al,0xf9
  4025c2:	xor    BYTE PTR [edx+0x1],0x8d
  4025c6:	add    BYTE PTR [ebp+eax*4-0x1],dl
  4025ca:	dec    DWORD PTR [ecx+0x4d00fcff]
  4025d0:	add    BYTE PTR [eax+0x7145fc30],bh
  4025d6:	inc    DWORD PTR [ecx]
  4025d8:	mov    ecx,DWORD PTR [ebp-0x310010]
  4025de:	retf   
  4025df:	enter  0xe45,0x3b
  4025e3:	inc    ebp
  4025e4:	jne    0x40261e
  4025e6:	mov    eax,ds:0x33c70b9c
  4025eb:	mov    esp,0xf81585ee
  4025f0:	mov    ds:0x338b0b45,eax
  4025f5:	mov    WORD PTR [esi-0x5cc68e00],cs
  4025fb:	ud2    
  4025fd:	xchg   ebp,eax
  4025fe:	xor    eax,DWORD PTR [eax]
  402600:	dec    edx
  402601:	mov    eax,DWORD PTR [eax]
  402603:	sbb    al,0x83
  402605:	cmp    ah,0x1
  402608:	push   0x0
  40260a:	pop    eax
  40260b:	adc    BYTE PTR [ecx-0x7483bb],cl
  402611:	and    BYTE PTR [esi+0x0],0x85
  402615:	mov    edi,edi
  402617:	push   0xffffffff
  402619:	(bad)  
  40261a:	mov    esp,esi
  40261c:	adc    dh,0x75
  40261f:	loope  0x402687
  402621:	inc    ebp
  402622:	inc    ebp
  402623:	fild   QWORD PTR [edx-0x29]
  402626:	mov    ecx,DWORD PTR [ebp-0x75990be4]
  40262c:	inc    ebp
  40262d:	sub    BYTE PTR [edx+0x4a],0x58
  402631:	jmp    0x752c:0x40868889
  402638:	lea    ax,[ebp-0xc]
  40263c:	xor    eax,DWORD PTR [ebp-0x5f0078]
  402642:	mov    DWORD PTR [ebp-0x820076],eax
  402648:	stos   DWORD PTR es:[edi],eax
  402649:	mov    ebp,DWORD PTR [ebx-0x43a67414]
  40264f:	push   ecx
  402650:	test   DWORD PTR [ebx],esi
  402652:	(bad)  
  402653:	mov    ebx,0xc072ff
  402658:	push   ebp
  402659:	ret    
  40265a:	(bad)  
  40265b:	mov    eax,eax
  40265d:	sbb    al,0xdf
  40265f:	rcl    dh,0x50
  402662:	inc    ebp
  402663:	inc    ebp
  402664:	int3   
  402665:	mov    ebp,ebx
  402667:	cwde   
  402668:	mov    DWORD PTR [eax],0x10d3c7c8
  40266e:	jmp    0xd500:0xdf0145ff
  402675:	jmp    DWORD PTR [esi-0x75]
  402678:	inc    ebp
  402679:	or     BYTE PTR [edi],bh
  40267b:	rol    bh,1
  40267d:	dec    ebp
  40267e:	adc    BYTE PTR [ebx],dh
  402680:	inc    DWORD PTR [ebx]
  402682:	add    cl,BYTE PTR [ecx-0x3e174400]
  402688:	push   ss
  402689:	push   ds
  40268a:	add    cl,ah
  40268c:	test   DWORD PTR [ebx-0x1],esi
  40268f:	or     eax,0x22850bff
  402694:	jmp    ecx
  402696:	push   DWORD PTR [ebx-0x75]
  402699:	add    eax,0x3359e9ec
  40269e:	push   ecx
  40269f:	loope  0x4026d4
  4026a1:	jae    0x4026a6
  4026a3:	jmp    0x8527f8
  4026a8:	and    DWORD PTR [ebp+0x44],0x0
  4026ac:	mov    esp,DWORD PTR [eax]
  4026ae:	sbb    al,0x66
  4026b0:	add    BYTE PTR [ebp-0xff00ff],0x30
  4026b7:	mov    DWORD PTR [ebp+0x7e],eax
  4026ba:	(bad)  
  4026bb:	inc    DWORD PTR [ebx-0xbadf9a]
  4026c1:	push   0xffffffff
  4026c3:	pop    eax
  4026c4:	clc    
  4026c5:	mov    DWORD PTR [eax],ecx
  4026c7:	or     BYTE PTR [ecx-0x8aef8d],0x58
  4026ce:	mov    DWORD PTR [ecx+0x76ff8428],ecx
  4026d4:	lea    esp,[esi+0x10]
  4026d7:	inc    ebp
  4026d8:	jmp    FWORD PTR [edx+0x50]
  4026db:	pop    eax
  4026dc:	inc    ebp
  4026dd:	mov    DWORD PTR [ebx],esi
  4026df:	mov    BYTE PTR [ebx],al
  4026e1:	rcl    BYTE PTR [eax+0x45],0x85
  4026e5:	inc    WORD PTR [ebp-0x1]
  4026e9:	lea    ecx,[ebx-0x7f99e35f]
  4026ef:	stos   BYTE PTR es:[edi],al
  4026f0:	add    DWORD PTR [ebp+0x0],eax
  4026f3:	mov    ecx,ecx
  4026f5:	adc    al,0x95
  4026f7:	(bad)  
  4026f8:	push   DWORD PTR [ebx]
  4026fa:	dec    DWORD PTR [ebp+0x45ffc095]
  402700:	dec    esi
  402702:	push   ebp
  402703:	loop   0x40268e
  402705:	(bad)  
  402706:	adc    al,0xc4
  402708:	call   ebx
  40270a:	mov    ecx,ebp
  40270c:	sbb    BYTE PTR [ebp-0x1],al
  40270f:	loopne 0x40269a
  402711:	cmp    al,0x24
  402713:	(bad)  
  402714:	dec    esp
  402716:	mov    eax,ebp
  402718:	sub    al,0xed
  40271a:	inc    edi
  40271c:	mov    eax,edx
  40271e:	xor    BYTE PTR [esi-0x1],bh
  402721:	test   edi,edi
  402723:	dec    DWORD PTR [ebx-0x2ffff701]
  402729:	add    BYTE PTR [ebp+0x2c],al
  40272c:	push   eax
  40272d:	add    bh,dl
  40272f:	mov    DWORD PTR [ebp+0x18],edi
  402732:	jbe    0x402733
  402734:	test   DWORD PTR [ebp-0xffefff],ecx
  40273a:	inc    ebp
  40273b:	push   eax
  40273c:	add    DWORD PTR [ebp-0x4],0x801be
  402743:	pop    es
  402744:	add    dh,0xfe
  402747:	ret    
  402748:	dec    DWORD PTR [ebx-0x3fffe34b]
  40274e:	mov    ecx,0x454f50
  402753:	mov    eax,ecx
  402755:	cwde   
  402756:	mov    DWORD PTR [eax],eax
  402758:	test   al,0xff
  40275a:	ror    BYTE PTR [ebx-0x2f99f775],0x55
  402761:	lea    ecx,[ebp-0x7600f401]
  402767:	mov    ebp,DWORD PTR [edx+ebp*2-0x7a99a73e]
  40276e:	push   ebp
  40276f:	dec    DWORD PTR [ebp-0x767ae601]
  402775:	push   DWORD PTR [eax+0x6685c2ff]
  40277b:	call   DWORD PTR [ebp-0x1]
  40277e:	lea    ecx,[ebx-0x397613e1]
  402784:	mov    ah,0xc3
  402786:	mov    DWORD PTR [ebp-0x30a74a],ecx
  40278c:	mov    DWORD PTR [eax-0x48],edx
  40278f:	inc    ebp
  402790:	dec    edx
  402791:	mov    ecx,DWORD PTR [ebx+0x55006698]
  402797:	xor    ecx,DWORD PTR [ebx+0x557c668d]
  40279d:	dec    DWORD PTR [ebp-0x76e3b477]
  4027a3:	call   DWORD PTR [eax-0x6d5f7673]
  4027a9:	lea    eax,[ecx-0x1]
  4027ac:	inc    WORD PTR [ebp-0x73]
  4027b0:	cmp    edi,0x5
  4027b3:	dec    DWORD PTR [ecx+0x41ff9695]
  4027b9:	jmp    DWORD PTR [esi-0x73]
  4027bc:	inc    ebp
  4027bd:	jmp    DWORD PTR [esi-0x1]
  4027c0:	dec    ebp
  4027c1:	lea    esp,[esi-0x1]
  4027c4:	jge    0x4027c5
  4027c6:	mov    esi,DWORD PTR [eax]
  4027c8:	lock inc ebp
  4027ca:	mov    bh,0xff
  4027cc:	mov    WORD PTR [ebp-0x3c5f3a],cs
  4027d2:	rol    DWORD PTR [eax+0xf8ca289],0x45
  4027d9:	push   cs
  4027da:	str    WORD PTR [ebp-0x1]
  4027de:	xor    edi,esp
  4027e0:	add    edi,DWORD PTR [ebp+0x33]
  4027e3:	add    BYTE PTR [esi+0x0],ah
  4027e6:	inc    ebp
  4027e7:	rdpmc  
  4027e9:	mov    edi,0xbf45ff66
  4027ee:	dec    si
  4027f0:	inc    ebp
  4027f1:	add    BYTE PTR [ebx+0x45000c0d],cl
  4027f7:	mov    edi,edi
  4027f9:	data16 sbb al,0x45
  4027fc:	jne    0x402781
  4027fe:	push   ebx
  402800:	adc    al,0xd0
  402802:	jne    0x40278d
  402804:	jmp    FWORD PTR [edx+0x66755108]
  40280a:	call   0xffc42064
  40280f:	or     BYTE PTR [ebp-0x77],al
  402812:	mov    ebp,DWORD PTR [esi+0x6645511c]
  402818:	mov    edx,DWORD PTR [ebp-0x70]
  40281b:	add    DWORD PTR [eax],0x5
  40281e:	mov    ecx,DWORD PTR [ecx+0x5180b21c]
  402824:	add    DWORD PTR [esi+0x0],esp
  402827:	push   ebp
  402828:	xor    BYTE PTR [esi+0x4d],ah
  40282b:	dec    ebp
  40282c:	mov    ecx,DWORD PTR [ebx+0x4d72663b]
  402832:	mov    ecx,DWORD PTR [ebp-0x2ec3fe75]
  402838:	jl     0x4027c3
  40283a:	push   eax
  40283b:	mov    esi,?
  40283d:	rcl    bh,1
  40283f:	mov    DWORD PTR [esi],eax
  402841:	mov    es,esi
  402843:	push   ecx
  402844:	ret    0x166
  402847:	push   ebp
  402848:	pop    esi
  402849:	leavew 
  40284b:	inc    ebp
  40284c:	sbb    BYTE PTR [ebp-0x761326ab],cl
  402852:	in     al,dx
  402853:	xchg   esp,eax
  402854:	push   esi
  402855:	shl    al,0x66
  402858:	add    DWORD PTR [ebp+0x1],0x38df008d
  40285f:	mov    DWORD PTR [edi],ecx
  402861:	cwde   
  402862:	or     cl,BYTE PTR [ecx-0x767a6600]
  402868:	setl   BYTE PTR [edx]
  40286b:	inc    ebp
  40286c:	add    BYTE PTR [edi],cl
  40286e:	test   DWORD PTR [ebp+0xf],ecx
  402871:	xor    edi,edx
  402873:	add    eax,DWORD PTR [eax]
  402875:	xor    ecx,DWORD PTR [ebx+0x458866]
  40287b:	mov    eax,DWORD PTR [ebp-0x1848f010]
  402881:	test   al,0x0
  402883:	mov    BYTE PTR [ebx+0xc18cc3],0x89
  40288a:	adc    BYTE PTR [eax-0x76ff3f7c],ch
  402890:	add    BYTE PTR [eax-0x57f076aa],ch
  402896:	rol    DWORD PTR [ebp+0x0],1
  402899:	mov    ecx,DWORD PTR [ebx+0x758cf0]
  40289f:	inc    DWORD PTR [ebx-0x748a0fe8]
  4028a5:	jmp    FWORD PTR [ebx]
  4028a7:	adc    BYTE PTR [ebx],al
  4028a9:	jne    0x4028ba
  4028ab:	call   DWORD PTR [eax-0x14]
  4028ae:	mov    DWORD PTR [ecx+0x1b7ffe4],eax
  4028b4:	push   cs
  4028b5:	sbb    al,0xca
  4028b7:	inc    ebp
  4028b8:	test   BYTE PTR [ebx-0x47ffe400],cl
  4028be:	dec    eax
  4028bf:	add    DWORD PTR [ebx+0x0],edx
  4028c2:	dec    ebp
  4028c3:	inc    ebp
  4028c4:	mov    esi,0x7f8cff8b
  4028c9:	add    BYTE PTR [ebp-0x74728b75],al
  4028cf:	add    al,0x83
  4028d1:	adc    esp,esi
  4028d3:	(bad)  
  4028d4:	and    edx,DWORD PTR ds:0x780f0703
  4028da:	jp     0x402867
  4028dc:	sysret 
  4028de:	pop    edx
  4028df:	add    eax,DWORD PTR [ebx]
  4028e1:	cmp    esi,DWORD PTR [ebx+esi*2-0x73]
  4028e5:	sub    edx,DWORD PTR [ebx+eax*1]
  4028e8:	dec    ebp
  4028e9:	mov    DWORD PTR [ebp-0x74a48ba1],eax
  4028ef:	ret    0x83
  4028f2:	clc    
  4028f3:	mov    esp,DWORD PTR [ebx]
  4028f5:	add    DWORD PTR [ebx],0x1c
  4028f8:	jnp    0x904fb477
  4028fe:	pop    ecx
  4028ff:	add    BYTE PTR [ebx],al
  402901:	xor    DWORD PTR [eax+eax*1-0x73],0xffffff84
  402906:	adc    al,0x1
  402908:	jge    0x40290a
  40290a:	mov    edx,edx
  40290c:	cld    
  40290d:	test   BYTE PTR [edi],bh
  40290f:	add    edi,edi
  402911:	add    BYTE PTR [esi],al
  402913:	neg    BYTE PTR [ebp-0x7c]
  402916:	add    DWORD PTR [eax],eax
  402918:	pop    es
  402919:	add    BYTE PTR [edi-0x48fff17a],dh
  40291f:	add    BYTE PTR [eax+eax*8],cl
  402922:	inc    ebp
  402923:	test   BYTE PTR [ebx+0x300fc00],al
  402929:	mov    esi,0xf80039
  40292e:	fisttp DWORD PTR [edi]
  402930:	mov    bh,0xda
  402932:	push   cs
  402933:	add    BYTE PTR [edi+0x4d340c39],dh
  402939:	test   bh,bh
  40293b:	add    ah,dh
  40293d:	add    cl,al
  40293f:	mov    cl,0x3
  402941:	add    DWORD PTR [ecx+0x7d65ec00],ecx
  402947:	add    BYTE PTR [edx-0x36],dh
  40294a:	mov    ecx,DWORD PTR [esi]
  40294c:	call   0xef7e113
  402951:	or     al,0xb7
  402953:	dec    ebp
  402954:	or     al,0xf
  402956:	inc    ebp
  402957:	dec    eax
  402958:	add    DWORD PTR [ebx],0x8
  40295b:	(bad)  
  40295d:	scas   al,BYTE PTR es:[edi]
  40295e:	dec    ebp
  40295f:	add    BYTE PTR [ecx],bh
  402961:	(bad)  
  402962:	lock adc al,0x82
  402965:	mov    edi,edi
  402967:	call   0xff9c296b
  40296c:	rcl    BYTE PTR [edi-0x15],0x31
  402970:	xor    edi,DWORD PTR [edi+0x5e]
  402973:	adc    ebx,eax
  402975:	mov    eax,DWORD PTR gs:[eax]
  402978:	mov    edx,esi
  40297a:	nop
  40297b:	rol    BYTE PTR [eax],1
  40297d:	mov    bh,0x83
  40297f:	push   cs
  402980:	or     al,0xb7
  402982:	xor    ecx,DWORD PTR [esi+edx*2]
  402985:	sti    
  402986:	cmp    DWORD PTR [ecx+0xf],ebp
  402989:	dec    edx
  40298a:	test   DWORD PTR [ecx+0x318bec00],ecx
  402990:	or     al,0x41
  402992:	ret    
  402993:	or     DWORD PTR [esi+0x65],edi
  402996:	pop    eax
  402997:	add    BYTE PTR [ebp-0x32],dh
  40299a:	xor    ecx,eax
  40299c:	inc    eax
  40299d:	mov    bh,0x76
  40299f:	push   cs
  4029a0:	inc    eax
  4029a1:	mov    bh,0x3
  4029a3:	or     al,0x8
  4029a5:	sti    
  4029a6:	dec    eax
  4029a7:	sub    ecx,DWORD PTR [ebx+0x70892479]
  4029ad:	cld    
  4029ae:	mov    edi,DWORD PTR [ebp+0x18]
  4029b1:	mov    ecx,DWORD PTR [ebp-0x7b]
  4029b4:	add    esi,DWORD PTR [eax+ecx*1-0x75]
  4029b8:	jne    0x40299e
  4029ba:	cmp    ebx,DWORD PTR [edi+esi*2]
  4029bd:	jns    0xff50263c
  4029c3:	pop    ecx
  4029c4:	jge    0x4029c5
  4029c6:	cmp    eax,edi
  4029c8:	cld    
  4029c9:	inc    ebp
  4029ca:	iret   
  4029cb:	or     BYTE PTR [eax-0x5],bh
  4029ce:	jae    0x402a4d
  4029d0:	(bad)  
  4029d2:	xor    al,0xf
  4029d4:	jmp    0x402a50
  4029d6:	mov    ecx,DWORD PTR [edi]
  4029d8:	lea    ebx,[edx-0x4f]
  4029db:	mov    esi,DWORD PTR [ebx]
  4029dd:	in     al,dx
  4029de:	test   BYTE PTR [ebp+0x27],0x83
  4029e2:	jge    0x4029ec
  4029e4:	add    edi,ebx
  4029e6:	mov    DWORD PTR [ebp-0x8],ecx
  4029e9:	cmp    eax,edi
  4029eb:	hlt    
  4029ec:	adc    ah,BYTE PTR [eax+0xf8b4d7d]
  4029f2:	jl     0x402a44
  4029f4:	clc    
  4029f5:	(bad)  
  4029f7:	js     0x402984
  4029f9:	push   DWORD PTR [edx-0x10]
  4029fc:	mov    eax,ecx
  4029fe:	clc    
  4029ff:	add    edi,edi
  402a01:	mov    DWORD PTR [eax],edx
  402a03:	call   0xfbd7f43
  402a08:	inc    edi
  402a09:	popa   
  402a0a:	jge    0x402a0b
  402a0c:	cmp    ebx,DWORD PTR [edi-0x4]
  402a0f:	xor    edi,DWORD PTR [edx-0x3ffd78c0]
  402a15:	rcr    BYTE PTR [esi-0x37],0xc9
  402a19:	push   ebp
  402a1a:	or     ah,ch
  402a1c:	push   ebp
  402a1d:	sub    ah,0x1
  402a20:	in     al,dx
  402a21:	add    BYTE PTR [edx-0x7ac7a14],bh
  402a27:	fist   DWORD PTR [ebp+0x57]
  402a2a:	(bad)  
  402a2b:	sbb    al,bh
  402a2d:	test   BYTE PTR [ebp+0x4500f800],al
  402a33:	inc    ebp
  402a34:	mov    edi,DWORD PTR [ebx]
  402a36:	cld    
  402a37:	je     0x402a86
  402a39:	cmp    DWORD PTR [ebx+0x4d05fc78],ecx
  402a3f:	ror    BYTE PTR [ebx-0x74740315],0x78
  402a46:	adc    BYTE PTR [ebp-0x42],al
  402a49:	mov    ecx,DWORD PTR [eax]
  402a4b:	sbb    al,0x7
  402a4d:	push   eax
  402a4e:	inc    ebp
  402a4f:	mov    ecx,DWORD PTR [esi-0x7487adec]
  402a55:	add    edi,esp
  402a57:	or     BYTE PTR [ebx+0x890155],bl
  402a5d:	cld    
  402a5e:	mov    edi,0x372f7
  402a63:	jge    0x402a33
  402a65:	xor    eax,esi
  402a67:	mov    edi,eax
  402a69:	hlt    
  402a6a:	iret   
  402a6b:	pop    ebp
  402a6c:	inc    ebp
  402a6d:	jbe    0x402aaa
  402a6f:	cmp    ecx,DWORD PTR [edi]
  402a71:	adc    al,0x7b
  402a73:	push   es
  402a74:	add    BYTE PTR [edi+0x2fc7a8b],dh
  402a7a:	dec    ebp
  402a7b:	div    DWORD PTR [ebx]
  402a7d:	sbb    al,0x3
  402a7f:	mov    edi,DWORD PTR [ebx]
  402a81:	test   DWORD PTR [edi],ecx
  402a83:	je     0x402aee
  402a85:	mov    eax,DWORD PTR [eax]
  402a87:	or     BYTE PTR [ebx-0x76820302],cl
  402a8d:	cmp    eax,DWORD PTR [eax]
  402a8f:	jbe    0x402a91
  402a91:	mov    ebx,esi
  402a93:	or     al,0xdf
  402a95:	jg     0x402a62
  402a97:	add    eax,DWORD PTR [ecx+edi*1-0x1ff07fe]
  402a9e:	dec    ebp
  402a9f:	add    ecx,DWORD PTR [ecx-0x257a2b83]
  402aa5:	je     0x402a85
  402aa7:	mov    edi,ebx
  402aa9:	mov    ebx,DWORD PTR [ebp-0xc]
  402aac:	mov    ecx,DWORD PTR [ecx+0x7ddaf4f0]
  402ab2:	adc    dh,BYTE PTR [edx+0x55]
  402ab5:	jmp    0x402a42
  402ab7:	xor    edi,esp
  402ab9:	pop    edi
  402aba:	rcr    BYTE PTR [ebx+0x33],cl
  402abd:	ret    0x3
  402ac0:	cmp    DWORD PTR [ebx+0x2c17830a],ecx
  402ac6:	push   ebp
  402ac7:	cmp    BYTE PTR [ebx-0x2d760364],cl
  402acd:	cld    
  402ace:	xor    eax,DWORD PTR [ebp+0x3]
  402ad1:	cmp    edi,DWORD PTR [ecx]
  402ad3:	pushf  
  402ad4:	or     cl,BYTE PTR [ebx+0x4d02fc0f]
  402ada:	add    BYTE PTR [ebx+0x4dfcfc8b],cl
  402ae0:	pop    ebp
  402ae1:	mov    ecx,DWORD PTR [ebx-0x3fb20f04]
  402ae7:	push   ebx
  402ae8:	add    ebx,DWORD PTR [ebp-0x75]
  402aeb:	push   esi
  402aec:	adc    BYTE PTR [ecx+0x4d],bl
  402aef:	push   ecx
  402af0:	xor    eax,edi
  402af2:	mov    eax,esi
  402af4:	in     al,0xeb
  402af6:	dec    ebp
  402af7:	add    ecx,DWORD PTR [ebx-0x317403b3]
  402afd:	nop
  402afe:	iret   
  402aff:	add    dh,dl
  402b01:	push   edi
  402b02:	dec    ebp
  402b03:	lahf   
  402b04:	mov    esi,DWORD PTR [edx]
  402b06:	add    esi,DWORD PTR [ebx]
  402b08:	add    esi,DWORD PTR [ebx]
  402b0a:	cmp    eax,DWORD PTR [ebx]
  402b0c:	je     0x402b11
  402b0e:	add    ecx,DWORD PTR [ecx+0xb4de808]
  402b14:	mov    eax,DWORD PTR [esp+edi*8+0x4800ce02]
  402b1b:	pop    ebp
  402b1c:	mov    ecx,DWORD PTR [ebx-0x217bf3f8]
  402b22:	lahf   
  402b23:	fbstp  TBYTE PTR [edx]
  402b25:	(bad)  [ecx+0x45020c84]
  402b2b:	add    BYTE PTR [edi],bh
  402b2d:	pop    ebp
  402b2e:	pushf  
  402b2f:	mov    ecx,DWORD PTR [ebx+0x75001080]
  402b35:	xor    ecx,DWORD PTR [ebx+0x3bd803]
  402b3b:	ud0    ecx,DWORD PTR [edi-0x75]
  402b3f:	add    ah,bh
  402b41:	add    ecx,esi
  402b43:	or     bh,cl
  402b45:	dec    ebp
  402b46:	inc    ebp
  402b47:	mov    edi,DWORD PTR [ebx]
  402b49:	xor    esi,DWORD PTR [ebp+0x3]
  402b4c:	mov    ecx,DWORD PTR [ecx+0x5d75f010]
  402b52:	mov    edi,DWORD PTR [ebx]
  402b54:	fdiv   DWORD PTR [eax+eax*1-0x75]
  402b58:	push   eax
  402b5a:	or     al,0x5d
  402b5c:	inc    ebp
  402b5d:	imul   eax,edi,0x14
  402b60:	loopne 0x402b40
  402b62:	sbb    ebx,edi
  402b64:	jg     0x402b82
  402b66:	inc    ebp
  402b67:	jne    0x402b7c
  402b69:	mov    ebx,DWORD PTR [eax+esi*8+0x6bfc5d8b]
  402b70:	(bad)  
  402b71:	adc    al,0xc7
  402b73:	fiadd  WORD PTR [ebp-0x21]
  402b76:	jne    0x402bd4
  402b78:	mov    edx,DWORD PTR [eax]
  402b7a:	clc    
  402b7b:	test   BYTE PTR [ebp+0x2],cl
  402b7e:	xor    eax,DWORD PTR [eax]
  402b80:	xor    eax,DWORD PTR [ebp-0x73]
  402b83:	mov    eax,DWORD PTR [ebx]
  402b85:	cld    
  402b86:	jb     0x402bcd
  402b88:	add    BYTE PTR [ebx+0x45],ch
  402b8b:	adc    al,0x8b
  402b8d:	rcr    eax,0x48
  402b90:	add    BYTE PTR [ebx],al
  402b92:	add    ecx,DWORD PTR [eax]
  402b94:	pmaxub mm1,mm3
  402b97:	dec    ebp
  402b98:	dec    DWORD PTR [ebx+0x5545fc24]
  402b9e:	xor    esi,DWORD PTR [ebx]
  402ba0:	add    eax,DWORD PTR [ebx]
  402ba2:	cmp    esi,DWORD PTR [ebx]
  402ba4:	hlt    
  402ba5:	mov    DWORD PTR [edi],ecx
  402ba7:	fadd   QWORD PTR [ebp+0x8]
  402baa:	xor    edx,edi
  402bac:	add    ebx,edi
  402bae:	cmp    ecx,edx
  402bb0:	clts   
  402bb2:	jp     0x402c01
  402bb4:	dec    DWORD PTR [ecx+0x4dfcdc8b]
  402bba:	(bad)  
  402bbb:	xor    eax,edi
  402bbd:	add    eax,DWORD PTR [ebp+0xc]
  402bc0:	jne    0x402c07
  402bc2:	mov    ecx,DWORD PTR [ebp+0x724d01f8]
  402bc8:	xor    eax,DWORD PTR [eax]
  402bca:	lea    eax,[ebp+0x1]
  402bcd:	(bad)  
  402bce:	jb     0x402ba8
  402bd0:	add    BYTE PTR [ebp+0x45e9f845],al
  402bd6:	add    bh,bh
  402bd8:	add    BYTE PTR [eax*2+0x12018080],cl
  402bdf:	add    bh,al
  402be1:	adc    BYTE PTR [ecx*2+0x30e332d],cl
  402be8:	pop    ebp
  402be9:	mov    DWORD PTR [ebx],esi
  402beb:	hlt    
  402bec:	add    ecx,eax
  402bee:	jmp    0x852c05
  402bf3:	inc    DWORD PTR [ebp+0xc]
  402bf6:	xor    eax,DWORD PTR [eax+0x890103]
  402bfc:	in     al,dx
  402bfd:	push   eax
  402bfe:	inc    ebp
  402bff:	mov    DWORD PTR [ebx],esi
  402c01:	hlt    
  402c02:	add    eax,DWORD PTR [ebp-0x77]
  402c05:	or     DWORD PTR [esi+eiz*2],0x4d
  402c09:	(bad)  
  402c0a:	mov    esp,eax
  402c0c:	fcomp  QWORD PTR [ecx+0x45cff8ce]
  402c12:	enter  0x633,0x3
  402c16:	add    al,0x3b
  402c18:	mov    esp,esi
  402c1a:	in     al,dx
  402c1b:	and    eax,DWORD PTR [ebp+0x45]
  402c1e:	mov    ecx,DWORD PTR [ebx-0x39ba1f68]
  402c24:	mov    ecx,esi
  402c26:	cld    
  402c27:	pushf  
  402c28:	dec    ebp
  402c29:	lahf   
  402c2a:	xor    esi,DWORD PTR [edx]
  402c2c:	add    ecx,DWORD PTR [ebx-0x7f8befc5]
  402c32:	mov    eax,DWORD PTR [ecx]
  402c34:	cld    
  402c35:	add    BYTE PTR [ebp-0x31],cl
  402c38:	xor    ebp,DWORD PTR [edi+0x50c15103]
  402c3e:	pop    ds
  402c3f:	mov    eax,ecx
  402c41:	cld    
  402c42:	sbb    dh,al
  402c44:	dec    ebp
  402c45:	(bad)  
  402c46:	mov    eax,DWORD PTR [ebp+0x10]
  402c49:	jne    0x402bcb
  402c4b:	mov    eax,DWORD PTR [ecx]
  402c4d:	fadd   DWORD PTR [eax]
  402c4f:	(bad)  
  402c50:	mov    bh,0xc7
  402c52:	push   ecx
  402c53:	fdiv   DWORD PTR [ebp-0x7a]
  402c56:	(bad)  
  402c57:	dec    DWORD PTR [eax]
  402c59:	call   FWORD PTR [ecx]
  402c5b:	inc    ebp
  402c5c:	inc    ebp
  402c5d:	xor    eax,DWORD PTR [ebx]
  402c5f:	add    ecx,DWORD PTR [eax]
  402c61:	cmp    ecx,DWORD PTR [ebp-0xc]
  402c64:	mov    edx,DWORD PTR [edi]
  402c66:	fadd   DWORD PTR [ebp+0x0]
  402c69:	mov    eax,DWORD PTR [ebx-0x39fd18]
  402c6f:	test   ah,dh
  402c71:	lahf   
  402c72:	push   ecx
  402c73:	xor    cl,BYTE PTR [ecx+0x45e80c89]
  402c79:	out    dx,eax
  402c7a:	mov    eax,DWORD PTR [eax]
  402c7c:	or     al,0xc7
  402c7e:	(bad)  
  402c7f:	in     al,dx
  402c80:	(bad)  
  402c81:	sbb    eax,ecx
  402c83:	add    DWORD PTR [ebp+0x45],eax
  402c86:	jne    0x402c16
  402c88:	mov    eax,DWORD PTR [eax+ebp*8]
  402c8b:	mov    eax,esi
  402c8d:	cld    
  402c8e:	test   dh,bl
  402c90:	lahf   
  402c91:	fbstp  TBYTE PTR [edx]
  402c93:	ret    0x89
  402c96:	call   0x4e3c3d26
  402c9b:	(bad)  
  402c9c:	xor    eax,edi
  402c9e:	add    eax,DWORD PTR [ebp+0xf]
  402ca1:	mov    eax,ecx
  402ca3:	cld    
  402ca4:	dec    ebp
  402ca5:	(bad)  
  402ca6:	mov    edi,eax
  402ca8:	cdq    
  402ca9:	inc    ebp
  402caa:	inc    ebp
  402cab:	mov    esi,DWORD PTR [ebx]
  402cad:	cld    
  402cae:	lea    eax,[ebp+0x3]
  402cb1:	xor    esi,DWORD PTR [edx+0x3]
  402cb4:	add    BYTE PTR [ebx],bh
  402cb6:	inc    ebp
  402cb7:	je     0x402c44
  402cb9:	mov    esp,esp
  402cbb:	cwde   
  402cbc:	mov    BYTE PTR [ebp-0x39],0x8b
  402cc0:	add    al,0xe4
  402cc2:	(bad)  
  402cc4:	sub    ecx,DWORD PTR [ecx+0x458b0cff]
  402cca:	lock mov eax,DWORD PTR [ebp-0x14]
  402cce:	mov    eax,esi
  402cd0:	aam    0xc7
  402cd2:	jmp    0xd645:0x2972c1
  402cd9:	mov    eax,ebp
  402cdb:	in     al,dx
  402cdc:	inc    esi
  402cde:	mov    eax,edi
  402ce0:	cld    
  402ce1:	jmp    0x750f68b4
  402ce6:	ror    DWORD PTR [ebx+0x4575ec45],0x8b
  402ced:	mov    edi,eax
  402cef:	fadd   DWORD PTR [ebx]
  402cf1:	add    BYTE PTR [ebp+0xf],al
  402cf4:	xor    ecx,ecx
  402cf6:	add    edi,edi
  402cf8:	pop    edi
  402cf9:	hlt    
  402cfa:	pop    ebx
  402cfb:	push   eax
  402cfc:	ret    0xeb
  402cff:	mov    ecx,DWORD PTR [ebx+0x2845830c]
  402d05:	mov    eax,DWORD PTR [ebp+0x10]
  402d08:	cmp    BYTE PTR [ecx+0xc7019c],cl
  402d0e:	fadd   st,st(0)
  402d10:	test   DWORD PTR [eax-0x8],edx
  402d13:	jne    0x402d5a
  402d15:	dec    DWORD PTR [ecx+0x45450c08]
  402d1b:	mov    edi,DWORD PTR [ecx+0x74d08fc]
  402d21:	xor    eax,ecx
  402d23:	add    ebx,DWORD PTR [edi+0x568b323b]
  402d29:	clc    
  402d2a:	jne    0x402d3d
  402d2c:	add    ecx,DWORD PTR [ebp+0x3b]
  402d2f:	xor    ecx,DWORD PTR [edi]
  402d31:	lea    esp,[ecx]
  402d33:	add    DWORD PTR [eax],eax
  402d35:	jb     0x402cc2
  402d37:	add    BYTE PTR [eax],cl
  402d39:	inc    ebp
  402d3a:	jne    0x402d27
  402d3c:	add    ecx,DWORD PTR [ebx-0x3976f3c4]
  402d42:	or     al,0xc7
  402d44:	inc    ebp
  402d45:	scas   eax,DWORD PTR es:[edi]
  402d46:	aas    
  402d47:	mov    ebx,DWORD PTR [esp+eiz*8-0x741bfb75]
  402d4e:	jne    0x402d48
  402d50:	mov    eax,esi
  402d52:	or     al,0x9c
  402d54:	icebp  
  402d55:	lahf   
  402d56:	shl    DWORD PTR [edx],0xf2
  402d59:	mov    esi,DWORD PTR [esp+edi*8+0x33934d70]
  402d60:	lsl    ebp,bx
  402d63:	cmp    DWORD PTR [eax],eax
  402d65:	cdq    
  402d66:	mov    eax,DWORD PTR [ebp-0xba00f4]
  402d6c:	add    edx,DWORD PTR [ebp-0x60]
  402d6f:	mov    eax,DWORD PTR [eax]
  402d71:	call   0x81487b01
  402d76:	jge    0x402d16
  402d78:	sub    esi,DWORD PTR [edx]
  402d7a:	xor    al,0x33
  402d7c:	jge    0x402d67
  402d7e:	xor    edi,ebp
  402d80:	add    edi,edi
  402d82:	mov    DWORD PTR [ebp-0x24],ecx
  402d85:	xor    esi,edi
  402d87:	add    eax,DWORD PTR [ebx+edi*1-0x3ff7500]
  402d8e:	jne    0x402d98
  402d90:	xor    eax,DWORD PTR [ebp+0x3]
  402d93:	jmp    0x402d1e
  402d95:	mov    edi,eax
  402d97:	cld    
  402d98:	mov    esi,0x5e85c7f0
  402d9e:	clc    
  402d9f:	leave  
  402da0:	xchg   edi,eax
  402da1:	or     al,0x0
  402da3:	push   ebp
  402da4:	mov    ebp,esp
  402da6:	cld    
  402da7:	in     al,dx
  402da8:	icebp  
  402da9:	(bad)  
  402daa:	jnp    0x402da8
  402dac:	add    eax,DWORD PTR [ebp+0x453bf8d1]
  402db2:	jae    0x402def
  402db4:	sub    ebx,DWORD PTR [ebp+ecx*4-0x76f38f75]
  402dbb:	inc    ebp
  402dbc:	call   0x823ce54c
  402dc1:	pop    ecx
  402dc2:	call   DWORD PTR [ecx+0x0]
  402dc5:	xor    ecx,DWORD PTR [ecx+0x7d72ecba]
  402dcb:	add    BYTE PTR [ebx+0x3082b8b],cl
  402dd1:	ret    0xf00f
  402dd4:	xor    eax,DWORD PTR [esi+ebp*8-0x76ffccff]
  402ddb:	inc    ebp
  402ddc:	loopne 0x402d69
  402dde:	jne    0x402de8
  402de0:	mov    esi,DWORD PTR [eax-0x20]
  402de3:	push   edi
  402de4:	jge    0x402e5b
  402de6:	xor    eax,edi
  402de8:	(bad)  
  402de9:	in     al,0x3e
  402deb:	test   DWORD PTR [edx-0x8],esi
  402dee:	add    BYTE PTR [ebp+0x75],al
  402df1:	mov    ecx,DWORD PTR [ebx+0x7d7df0fc]
  402df7:	xor    esi,DWORD PTR [ebx]
  402df9:	xor    eax,DWORD PTR [ebx]
  402dfb:	add    edi,DWORD PTR [ebx]
  402dfd:	cmp    DWORD PTR [ebp-0x39],esi
  402e00:	mov    edx,DWORD PTR [ebp-0x7b82fe10]
  402e06:	xor    eax,DWORD PTR [eax]
  402e08:	add    eax,DWORD PTR [eax]
  402e0a:	cmp    esi,DWORD PTR [ebp+0x75]
  402e0d:	mov    ecx,DWORD PTR [ebx+0x7d86e008]
  402e13:	add    BYTE PTR [ecx],al
  402e15:	add    BYTE PTR [ebx+0x4d8b0275],al
  402e1b:	or     al,0x75
  402e1d:	ja     0x402daa
  402e1f:	mov    esi,esp
  402e21:	cld    
  402e22:	pop    ebp
  402e23:	stc    
  402e24:	mov    edi,edx
  402e26:	in     al,0x75
  402e28:	jge    0x402e65
  402e2a:	mov    ecx,DWORD PTR [edi]
  402e2c:	or     al,0xc4
  402e2e:	icebp  
  402e2f:	add    BYTE PTR [ebx+ecx*4-0xe6c038c],bh
  402e36:	jae    0x402e2a
  402e38:	add    esi,DWORD PTR [ebp-0xc]
  402e3b:	push   ebx
  402e3c:	jne    0x402e83
  402e3e:	mov    edi,DWORD PTR ds:0xe9f19c04
  402e44:	repnz add BYTE PTR [ebp+0x0],bl
  402e48:	cmp    esi,DWORD PTR [ebp+0xf]
  402e4b:	xor    edx,DWORD PTR [ebp+ecx*4-0x1]
  402e4f:	clc    
  402e50:	pop    ebx
  402e51:	repnz inc ebp
  402e53:	out    dx,eax
  402e54:	pop    edi
  402e55:	test   DWORD PTR [ebx],0x33fe456d
  402e5b:	pop    esp
  402e5c:	add    ecx,DWORD PTR [eax]
  402e5e:	pop    esi
  402e5f:	jge    0x402e23
  402e61:	(bad)  
  402e63:	xor    ecx,DWORD PTR [ebx+0x540f83e6]
  402e69:	add    BYTE PTR [ebp+0x75],al
  402e6c:	cmp    BYTE PTR [ebx+0x30c7ec9c],cl
  402e72:	fdivr  st(2),st
  402e74:	test   esi,edi
  402e76:	clc    
  402e77:	mov    bh,0x45
  402e79:	rcl    DWORD PTR [ebx+0xc],0xbe
  402e7d:	stc    
  402e7e:	or     BYTE PTR [ebp+0x7],bh
  402e81:	mov    esi,eax
  402e83:	in     al,dx
  402e84:	lahf   
  402e85:	jne    0x402eb9
  402e87:	mov    eax,DWORD PTR [ebx]
  402e89:	or     BYTE PTR [ecx+0x45b4e8f1],cl
  402e8f:	lahf   
  402e90:	xor    esi,DWORD PTR [edx]
  402e92:	add    ecx,DWORD PTR [ecx+0x75e0e089]
  402e98:	mov    ecx,DWORD PTR [ebx-0xeba13e0]
  402e9e:	mov    esi,edx
  402ea0:	lock inc cl
  402ea3:	push   ss
  402ea4:	inc    ebp
  402ea5:	jne    0x402e28
  402ea7:	mov    esi,eax
  402ea9:	in     al,dx
  402eaa:	mov    ch,0xf1
  402eac:	clc    
  402ead:	repnz inc ebp
  402eaf:	dec    BYTE PTR [ebx-0x3e8a07f8]
  402eb5:	mov    eax,DWORD PTR [ebp-0x24]
  402eb8:	cmp    DWORD PTR [esi],0xff85c3f8
  402ebe:	clc    
  402ebf:	call   0x5dcbce09
  402ec4:	hlt    
  402ec5:	add    ecx,eax
  402ec7:	clc    
  402ec8:	inc    ebp
  402ec9:	jne    0x402e4c
  402ecb:	mov    esi,esp
  402ecd:	clc    
  402ece:	test   DWORD PTR [ebp-0x8],ebx
  402ed1:	xor    eax,DWORD PTR [ebp+0x3b]
  402ed4:	mov    esi,ebx
  402ed6:	in     al,dx
  402ed7:	xchg   ebp,eax
  402ed8:	rol    DWORD PTR [ecx],0x45
  402edb:	sbb    BYTE PTR [ecx+0x58bec45],al
  402ee1:	cld    
  402ee2:	clc    
  402ee3:	pop    eax
  402ee4:	add    BYTE PTR [ebx],dh
  402ee6:	add    BYTE PTR [ebx],al
  402ee8:	mov    WORD PTR [ebp-0xc],ax
  402eec:	mov    ebx,esi
  402eee:	or     BYTE PTR [ebp-0x7b0040],al
  402ef4:	add    ecx,DWORD PTR [ebx-0x14ba2800]
  402efa:	test   DWORD PTR [ebx-0x3e2b03f1],ecx
  402f00:	add    dl,al
  402f02:	mov    ecx,ecx
  402f04:	sbb    BYTE PTR [eax],cl
  402f06:	rcl    BYTE PTR [ebp-0x7c],0xec
  402f0a:	add    ebp,esp
  402f0c:	add    bh,al
  402f0e:	mov    edi,esp
  402f10:	and    BYTE PTR [ebp+0x4500f843],al
  402f16:	cmp    ax,cx
  402f19:	pushf  
  402f1a:	or     cl,BYTE PTR [ebx+0x5666fc00]
  402f20:	rcr    DWORD PTR [ecx+0x4d],0x51
  402f24:	xor    ax,WORD PTR [ecx]
  402f27:	mov    ebx,0x37285
  402f2c:	add    bl,al
  402f2e:	inc    ebp
  402f2f:	inc    ebp
  402f30:	mov    ecx,DWORD PTR [ebx-0x39ba03f8]
  402f36:	add    eax,ebx
  402f38:	cmp    al,0x45
  402f3a:	inc    ebp
  402f3b:	push   edi
  402f3c:	mov    edi,DWORD PTR [ebp+0x50]
  402f3f:	mov    eax,eax
  402f41:	lock test BYTE PTR [ebp+0x3],cl
  402f45:	xor    eax,DWORD PTR [eax]
  402f47:	mov    DWORD PTR [ebp-0x10],eax
  402f4a:	cmp    BYTE PTR [ebp-0x74],al
  402f4d:	cmp    BYTE PTR [ebx-0x39742b64],cl
  402f53:	clc    
  402f54:	ret    
  402f55:	dec    ebp
  402f56:	inc    ebp
  402f57:	xor    ecx,DWORD PTR [ebx-0x78070377]
  402f5d:	inc    ebp
  402f5e:	add    eax,edi
  402f60:	add    BYTE PTR [eax+ecx*1+0x3f4498b],bl
  402f67:	dec    ebp
  402f68:	mov    esi,DWORD PTR [ebx]
  402f6a:	cld    
  402f6b:	mov    DWORD PTR [edi+0x4501f4],eax
  402f71:	cmp    al,0x10
  402f73:	pushf  
  402f74:	dec    ebp
  402f75:	mov    ecx,DWORD PTR [ecx-0x2db2df14]
  402f7b:	xor    esi,DWORD PTR [ebx]
  402f7d:	mov    DWORD PTR [edi+0x4501ec],eax
  402f83:	cmp    BYTE PTR [ebp-0x61],dl
  402f86:	push   edx
  402f87:	mov    eax,0x339555
  402f8c:	add    ecx,DWORD PTR [ecx+0x45712052]
  402f92:	inc    DWORD PTR [ebp-0x20aff0e0]
  402f98:	mov    eax,DWORD PTR [eax]
  402f9a:	in     al,0x8b
  402f9c:	inc    ecx
  402f9d:	or     al,0x8b
  402f9f:	rcl    BYTE PTR [eax-0x7c],0xc8
  402fa3:	add    eax,DWORD PTR [ebp+0x0]
  402fa6:	push   ecx
  402fa7:	inc    ebp
  402fa8:	call   0x4f3932
  402fad:	leave  
  402fae:	push   ebp
  402faf:	add    BYTE PTR [ebx+0x459466],cl
  402fb5:	mov    ecx,0x8b8a89
  402fba:	or     al,0x33
  402fbc:	jo     0x402f77
  402fbe:	(bad)  
  402fbf:	cmp    ecx,DWORD PTR [eax]
  402fc1:	add    al,ch
  402fc3:	add    eax,DWORD PTR [edi]
  402fc5:	mov    eax,DWORD PTR [eax]
  402fc7:	or     BYTE PTR [ebp+0x39],cl
  402fca:	mov    ecx,DWORD PTR [edi]
  402fcc:	cmp    al,0xa9
  402fce:	rol    DWORD PTR [eax],0xb7
  402fd1:	mov    edx,DWORD PTR [esp+edi*8]
  402fd4:	dec    esp
  402fd5:	dec    ebp
  402fd6:	sbb    BYTE PTR [ebx+0x418b084d],cl
  402fdc:	cld    
  402fdd:	mov    DWORD PTR [edi-0x31bff9f4],esi
  402fe3:	test   ebx,ecx
  402fe5:	cmovne ecx,DWORD PTR [edi-0x38f0ffc5]
  402fec:	test   al,0xd4
  402fee:	add    BYTE PTR [ebp+0x45fcf88b],al
  402ff4:	into   
  402ff5:	xor    ecx,ebx
  402ff7:	add    ecx,DWORD PTR [ebp-0x77]
  402ffa:	mov    edx,esp
  402ffc:	fadd   QWORD PTR [ebp-0x49]
  402fff:	mov    eax,DWORD PTR [esi]
  403001:	nop
  403002:	into   
  403003:	add    cl,dl
  403005:	mov    edx,ebx
  403007:	mov    edx,DWORD PTR [ebp+0x3c]
  40300a:	invd   
  40300c:	mov    BYTE PTR [ebp+0x0],al
  40300f:	mov    ecx,DWORD PTR [ebx-0x3dffe774]
  403015:	mov    ecx,DWORD PTR [ecx+0x3e41889]
  40301b:	push   ebp
  40301c:	push   ebp
  40301d:	cmp    ecx,DWORD PTR [ebx+0x488b3875]
  403023:	fmul   DWORD PTR [ecx+0x28dd000]
  403029:	call   0xf847bbef
  40302e:	rcl    esi,1
  403030:	rcl    ebx,0x45
  403033:	call   DWORD PTR [eax+0x50]
  403036:	inc    edx
  403037:	jne    0x40303c
  403039:	jmp    DWORD PTR [eax]
  40303b:	sbb    al,0xe8
  40303d:	dec    ebp
  40303e:	or     BYTE PTR [ebx+0x49555400],cl
  403044:	mov    ebp,DWORD PTR [ebx]
  403046:	sbb    BYTE PTR [ebx],al
  403048:	dec    eax
  403049:	and    BYTE PTR [ebx],dh
  40304b:	push   eax
  40304c:	add    edi,DWORD PTR [ebx]
  40304e:	cmp    eax,DWORD PTR [eax]
  403050:	je     0x402fdd
  403052:	push   ecx
  403053:	and    BYTE PTR [ebp-0x79],cl
  403056:	add    eax,DWORD PTR [ecx]
  403058:	or     al,0x0
  40305a:	inc    eax
  40305b:	adc    BYTE PTR [ebx],al
  40305d:	inc    ebp
  40305e:	and    bh,bh
  403060:	push   eax
  403061:	push   esp
  403062:	sub    DWORD PTR [ebp+0x0],esi
  403065:	push   edx
  403066:	mov    ecx,eax
  403068:	sbb    BYTE PTR [eax],al
  40306a:	dec    ebp
  40306b:	mov    ecx,DWORD PTR [ebx-0x3fbe1fe0]
  403071:	add    esi,DWORD PTR [ebx]
  403073:	jge    0x72cd3ac1
  403079:	add    DWORD PTR [eax],eax
  40307b:	mov    DWORD PTR [ebp+0x18],edx
  40307e:	mov    DWORD PTR [ebp+0x18],ecx
  403081:	cmovne edx,DWORD PTR [eax+0xf]
  403085:	xor    edx,DWORD PTR [edx+0x3]
  403088:	xor    ecx,DWORD PTR [ecx-0x2e74f3d5]
  40308e:	or     al,0x84
  403090:	rol    DWORD PTR [eax],cl
  403092:	dec    ebp
  403093:	add    BYTE PTR [ebx],bh
  403095:	dec    ebp
  403096:	jbe    0x4030cb
  403098:	mov    eax,DWORD PTR [ebx]
  40309a:	cld    
  40309b:	mov    DWORD PTR [edi+0x4d01e0],edx
  4030a1:	bswap  esi
  4030a3:	push   eax
  4030a4:	retf   
  4030a5:	xor    ecx,DWORD PTR [ebp+0x2b]
  4030a8:	mov    ebp,DWORD PTR [ebx]
  4030aa:	and    BYTE PTR [ecx],bh
  4030ac:	or     ah,al
  4030ae:	daa    
  4030af:	xchg   DWORD PTR [edi+0x100],eax
  4030b5:	push   ebp
  4030b6:	push   ebp
  4030b7:	adc    DWORD PTR [edx+0x8],0x55
  4030bb:	push   ebp
  4030bc:	xor    ebp,ebx
  4030be:	add    ecx,DWORD PTR [ebx+0x40551852]
  4030c4:	dec    DWORD PTR [ebp+0x45ffff54]
  4030ca:	sbb    al,0x8b
  4030cc:	rol    BYTE PTR [ebp-0x8fe8b7c],0x0
  4030d3:	and    eax,DWORD PTR [ebp+0x3]
  4030d6:	mov    edx,eax
  4030d8:	enter  0x8b,0x4
  4030dc:	mov    eax,DWORD PTR [ebp+0x33]
  4030df:	push   eax
  4030e0:	add    esp,DWORD PTR [edi-0x74f5fff1]
  4030e6:	add    ah,bh
  4030e8:	add    DWORD PTR [ebp-0x28],0xffffff8b
  4030ec:	mov    eax,0xd64f08
  4030f1:	ror    DWORD PTR [ecx-0x3fe83b36],cl
  4030f7:	mov    esp,DWORD PTR [esi+0x8]
  4030fa:	inc    ebp
  4030fb:	dec    eax
  4030fc:	mov    eax,0x44f8b
  403101:	inc    ebp
  403102:	mov    DWORD PTR [ecx-0x38],edx
  403105:	call   0xc338ca
  40310a:	or     BYTE PTR [ebp-0x75],al
  40310d:	mov    esp,DWORD PTR [esi-0x24]
  403110:	inc    ebp
  403111:	push   ebp
  403112:	mov    eax,0x284e83
  403117:	into   
  403118:	mov    DWORD PTR [edx+ecx*8-0x31cd7661],ecx
  40311f:	mov    eax,DWORD PTR [ebp+0xc]
  403122:	lea    eax,[ebp+0x45]
  403125:	mov    edi,DWORD PTR [ecx+0xb78adc]
  40312b:	push   es
  40312c:	xor    eax,esi
  40312e:	mov    edx,0x453bd0
  403133:	sub    eax,DWORD PTR [ebx]
  403135:	mov    edi,edi
  403137:	loopne 0x403141
  403139:	retf   0x837d
  40313c:	push   es
  40313d:	dec    ebp
  40313e:	mov    DWORD PTR [ebx+0xc78c72],ecx
  403144:	lods   al,BYTE PTR ds:[esi]
  403145:	xor    edx,edx
  403147:	add    esi,DWORD PTR [eax]
  403149:	mov    DWORD PTR [ebp+0x18],eax
  40314c:	xlat   BYTE PTR ds:[ebx]
  40314d:	dec    ebp
  40314e:	sar    BYTE PTR [ebx],cl
  403150:	(bad)  
  403151:	jne    0x403107
  403153:	mov    esp,edx
  403155:	fsub   st,st(7)
  403157:	add    BYTE PTR [ebp-0x73],al
  40315a:	xor    al,ch
  40315c:	in     al,dx
  40315d:	mov    eax,edi
  40315f:	hlt    
  403160:	mov    esp,0xd3d3d2d6
  403165:	mov    eax,edi
  403167:	in     al,0xc0
  403169:	jb     0x403158
  40316b:	push   ecx
  40316c:	inc    ebp
  40316d:	push   eax
  40316e:	jle    0x4030f5
  403170:	leave  
  403171:	cmove  esi,esp
  403174:	lods   al,BYTE PTR ds:[esi]
  403175:	add    BYTE PTR [eax],dl
  403177:	mov    esi,edx
  403179:	or     al,0x80
  40317b:	(bad)  
  40317c:	xor    al,0x1
  40317e:	mov    BYTE PTR [eax],al
  403180:	or     DWORD PTR [ecx],0x17
  403183:	into   
  403184:	in     al,dx
  403185:	retf   
  403186:	xchg   DWORD PTR [ecx+eax*1+0x4d000001],eax
  40318d:	gs push ecx
  40318f:	add    BYTE PTR [eax+0x27],dl
  403192:	mov    eax,DWORD PTR [eax]
  403194:	fsub   DWORD PTR [esi+0x0]
  403197:	inc    ebp
  403198:	lea    eax,[ebx-0x76affd54]
  40319e:	push   ecx
  40319f:	(bad)  
  4031a0:	lea    ebx,[ecx]
  4031a2:	fadd   DWORD PTR [eax]
  4031a4:	mov    esp,DWORD PTR [esi-0x74]
  4031a7:	inc    ebp
  4031a8:	add    BYTE PTR [ebx+0x65ff08ff],al
  4031ae:	mov    eax,DWORD PTR [eax]
  4031b0:	fmul   st,st(0)
  4031b2:	ror    BYTE PTR [ecx-0x4aba33c6],0xeb
  4031b9:	add    BYTE PTR [ebx-0x27b2769a],cl
  4031bf:	inc    bp
  4031c1:	inc    ebp
  4031c2:	je     0x40314f
  4031c4:	mov    ecx,DWORD PTR [eax]
  4031c6:	sbb    BYTE PTR [edi+ecx*4-0x3c],al
  4031ca:	add    DWORD PTR [ebx+0x0],eax
  4031cd:	add    BYTE PTR [ecx],dl
  4031cf:	jmpw   0x81db
  4031d3:	or     cl,BYTE PTR [ebx+0x668c00]
  4031d9:	retf   0x453b
  4031dc:	jne    0x403161
  4031de:	mov    ecx,DWORD PTR [eax]
  4031e0:	in     al,0x66
  4031e2:	(bad)
  4031e6:	add    BYTE PTR [ebp+0x52],al
  4031e9:	retf   0xec03
  4031ec:	mov    edi,eax
  4031ee:	sbb    al,0xb0
  4031f0:	inc    ebp
  4031f1:	call   0x463f654d
  4031f6:	and    al,ch
  4031f8:	and    ah,ch
  4031fa:	inc    edi
  4031fc:	test   DWORD PTR [eax+0x3fc3e90f],edi
  403202:	add    BYTE PTR [ebp-0x1],al
  403205:	ror    BYTE PTR [esp+ebp*8],cl
  403208:	(bad)  
  403209:	data16 jne 0x403251
  40320c:	call   0x729fe
  403211:	ret    0x33c0
  403214:	test   BYTE PTR [ebp-0x75fff300],cl
  40321a:	inc    ebp
  40321b:	or     BYTE PTR [ebx-0x3015dfb6],0x41
  403222:	sub    BYTE PTR [eax],dl
  403224:	(bad)  
  403225:	stc    
  403226:	test   DWORD PTR [edx+0xf],esi
  403229:	mov    ebx,DWORD PTR [ecx+0x570000d8]
  40322f:	lea    esi,[ebp-0x3c]
  403232:	call   0xff452d36
  403237:	pop    eax
  403239:	add    DWORD PTR [eax+eax*1+0x52005500],eax
  403240:	xchg   edi,edi
  403242:	add    DWORD PTR [eax],ecx
  403244:	add    BYTE PTR [ebp+0x55],cl
  403247:	push   ecx
  403248:	cmp    ecx,DWORD PTR [edi+0x8b0175]
  40324e:	fdiv   DWORD PTR [ecx]
  403250:	add    al,dl
  403252:	lea    eax,[ebp-0x18]
  403255:	test   edi,edi
  403257:	je     0x403241
  403259:	mov    DWORD PTR [ebp+0x8],ecx
  40325c:	dec    DWORD PTR [edx]
  40325e:	push   esp
  40325f:	add    bh,bh
  403261:	inc    ebp
  403262:	sbb    al,0x3b
  403264:	push   ebp
  403265:	or     BYTE PTR [ebx+0x50c80d],cl
  40326b:	mov    ecx,DWORD PTR [ebx+0x300338c]
  403271:	cmp    esi,DWORD PTR [ebp+esi*2-0x75]
  403275:	mov    ecx,DWORD PTR [eax+ebx*1]
  403278:	inc    ecx
  403279:	pop    edi
  40327b:	add    DWORD PTR [eax],ecx
  40327d:	add    BYTE PTR [ebp+0x7511f811],ah
  403283:	push   ebp
  403284:	dec    DWORD PTR [ebx+0xf69014]
  40328a:	or     BYTE PTR [ebx+0x11752800],cl
  403290:	adc    DWORD PTR [eax-0x61],0x660c008b
  403297:	push   eax
  403298:	jno    0x40330f
  40329a:	add    ebp,eax
  40329c:	push   edx
  40329d:	clc    
  40329e:	sar    bh,1
  4032a0:	xchg   eax,eax
  4032a2:	add    DWORD PTR [eax+eax*1-0x7ff7b00],eax
  4032a9:	jne    0x4032b5
  4032ab:	mov    eax,DWORD PTR [ebp-0x1]
  4032ae:	mov    esp,DWORD PTR [eax]
  4032b0:	sub    BYTE PTR [edx+eax*8-0x1],ah
  4032b4:	rol    BYTE PTR [ebp-0x5174f0bb],1
  4032ba:	loopne 0x4032bc
  4032bc:	dec    ebp
  4032bd:	mov    ecx,DWORD PTR [ecx+0x1855c70c]
  4032c3:	mov    eax,DWORD PTR [eax]
  4032c5:	call   0xffbe28ca
  4032ca:	add    al,al
  4032cc:	add    al,0x84
  4032ce:	add    BYTE PTR gs:[eax],al
  4032d1:	add    BYTE PTR [ebp-0x1],al
  4032d4:	jmp    0x4032f6
  4032d6:	xor    ecx,eax
  4032d8:	pop    edi
  4032d9:	call   FWORD PTR [ebx-0x7b]
  4032dc:	ret    0xf
  4032df:	mov    BYTE PTR [ebx+0x518b0f00],cl
  4032e5:	mov    WORD PTR [edi],cs
  4032e7:	add    BYTE PTR [ecx-0x75],al
  4032ea:	push   ebx
  4032eb:	and    BYTE PTR [ebx],dh
  4032ed:	adc    BYTE PTR [ebp-0x7a78f7e6],cl
  4032f3:	add    DWORD PTR [eax+eax*1-0x75],esi
  4032f7:	dec    ebp
  4032f8:	or     al,0x51
  4032fa:	sbb    al,0x75
  4032fc:	cmp    DWORD PTR [ebx+0x710ce408],ecx
  403302:	pop    eax
  403303:	push   edx
  403304:	add    edx,DWORD PTR [eax+0x3]
  403307:	mov    edi,DWORD PTR [ecx]
  403309:	and    BYTE PTR [eax],cl
  40330b:	xchg   DWORD PTR [edx],ecx
  40330d:	add    eax,eax
  40330f:	add    BYTE PTR [edi+0x0],al
  403312:	cli    
  403313:	(bad)  
  403314:	loope  0x4032d9
  403316:	shl    BYTE PTR [edi],0x5b
  403319:	dec    ebp
  40331a:	ret    0x8b
  40331d:	sub    BYTE PTR [ebx+0x28388345],cl
  403323:	pushf  
  403324:	inc    ebp
  403325:	mov    edi,DWORD PTR [eax]
  403327:	or     BYTE PTR [ebp+esi*2+0x59e481c7],bl
  40332e:	test   DWORD PTR [eax],eax
  403330:	clc    
  403331:	inc    DWORD PTR [ebp+0x10]
  403334:	cmp    al,dh
  403336:	pushf  
  403337:	jb     0x4032f1
  403339:	add    BYTE PTR [edi+0x9],cl
  40333c:	add    BYTE PTR [esi],dl
  40333e:	mov    edx,eax
  403340:	hlt    
  403341:	inc    eax
  403343:	(bad)  
  403344:	data16 rol BYTE PTR [ebp+0x0],1
  403348:	mov    eax,0x9c4f3b
  40334d:	jmp    0x4032d8
  40334f:	mov    edi,eax
  403351:	or     al,0xc0
  403353:	inc    eax
  403354:	add    ax,WORD PTR [ebp-0x1]
  403358:	mov    ecx,DWORD PTR [ecx+0x4545e008]
  40335e:	mov    ecx,DWORD PTR [ebx+0x1451c0c]
  403364:	mov    eax,DWORD PTR [ebp-0x10]
  403367:	add    DWORD PTR [ecx+0x7830800],edi
  40336d:	sbb    cl,al
  40336f:	jne    0x4032fc
  403371:	sub    esp,0x20
  403374:	lahf   
  403375:	mov    esi,DWORD PTR [edx]
  403377:	and    BYTE PTR [ebx],al
  403379:	add    dl,BYTE PTR [edi-0x40]
  40337c:	lock pop esi
  40337e:	test   cl,cl
  403380:	add    DWORD PTR [eax+eax*1],ebx
  403383:	push   ebp
  403384:	inc    ebp
  403385:	in     al,dx
  403386:	mov    esi,DWORD PTR [edi-0x483ef918]
  40338c:	ret    0xf014
  40338f:	push   edi
  403390:	test   bh,bh
  403392:	add    DWORD PTR [eax+eax*1+0x18],eax
  403396:	inc    ebp
  403397:	shl    BYTE PTR [ebx],cl
  403399:	pop    ds
  40339a:	add    ecx,DWORD PTR [eax-0x77]
  40339d:	(bad)  
  40339e:	loopne 0x4033d1
  4033a0:	inc    ebp
  4033a1:	pop    ebp
  4033a2:	xor    esi,DWORD PTR [edx+0x3]
  4033a5:	mov    ecx,DWORD PTR [ecx-0x482623f8]
  4033ab:	fdivp  st(4),st
  4033ad:	pop    ebp
  4033ae:	mov    bh,0x72
  4033b0:	hlt    
  4033b1:	add    DWORD PTR [ebx+0x28],0x0
  4033b5:	cmp    esp,DWORD PTR [esi+0x72]
  4033b8:	lock xor eax,DWORD PTR [ebx+0x5f]
  4033bc:	add    BYTE PTR [ebp+0x66],bl
  4033bf:	add    al,0xfb
  4033c1:	push   ebp
  4033c2:	or     ch,ah
  4033c4:	add    ah,ch
  4033c6:	data16 (bad) 
  4033c8:	lock lock add eax,DWORD PTR [ebp+0x4566f82b]
  4033d0:	jge    0x40340d
  4033d2:	mov    ebx,DWORD PTR [eax+eiz*8+0x66d87dc7]
  4033d9:	test   DWORD PTR [eax+edi*8],esi
  4033dc:	data16 adc al,0x75
  4033df:	add    BYTE PTR [ebx+0x7d45dc66],cl
  4033e5:	and    DWORD PTR [esi+0x60],0x34
  4033e9:	mov    DWORD PTR [esi-0x4],esp
  4033ec:	jne    0x403421
  4033ee:	mov    esi,0x667200
  4033f3:	inc    ebp
  4033f4:	or     BYTE PTR [ebx-0x76742000],al
  4033fa:	lock clc 
  4033fc:	mov    eax,DWORD PTR [ebp+0xc]
  4033ff:	mov    edi,esi
  403401:	in     al,dx
  403402:	or     BYTE PTR [ebp+0x0],al
  403405:	mov    esi,edi
  403407:	call   0x534f7947
  40340c:	sbb    bl,BYTE PTR [ecx+0x0]
  40340f:	push   ecx
  403410:	mov    esi,DWORD PTR [ebx]
  403412:	lock push esi
  403414:	pop    ebp
  403415:	jne    0x40344a
  403417:	mov    edx,0x3b7203
  40341c:	retw   0x3b7d
  403420:	minpd  xmm7,xmm0
  403424:	str    WORD PTR [ebp+0x66f0008b]
  40342b:	jne    0x40340c
  40342d:	xor    eax,DWORD PTR [ebx+eax*1+0xf003b00]
  403434:	mov    esp,esi
  403436:	cld    
  403437:	add    BYTE PTR [ebx-0x75],al
  40343a:	add    al,dh
  40343c:	sar    bx,0xc2
  403440:	mov    eax,DWORD PTR [ebp+0x8]
  403443:	mov    eax,DWORD PTR [ebx]
  403445:	lock rcr di,0xc2
  40344a:	es inc ebp
  40344c:	mov    ecx,DWORD PTR [edi]
  40344e:	clc    
  40344f:	jne    0x403494
  403451:	(bad)  
  403453:	jge    0x4034bb
  403455:	mov    eax,0x8b8afb
  40345a:	or     BYTE PTR [ebx],dh
  40345c:	add    edi,DWORD PTR [ebx+0xdf8a66]
  403462:	push   cs
  403463:	xor    esi,DWORD PTR [edi-0x48c4f748]
  403469:	add    ah,dh
  40346b:	add    edi,ebx
  40346d:	mov    ax,di
  403470:	or     dh,bh
  403472:	mov    ecx,DWORD PTR [ecx+0x7543f4fc]
  403478:	add    BYTE PTR [ebx-0x7404139a],cl
  40347e:	mov    esi,DWORD PTR [edi+0xc]
  403481:	mov    DWORD PTR [ebx],eax
  403483:	or     BYTE PTR [esi+0x75],ah
  403486:	fisttp WORD PTR [ebx-0x747417da]
  40348c:	clc    
  40348d:	ja     0x4034d2
  40348f:	mov    DWORD PTR [eax],eax
  403491:	or     al,0x66
  403493:	lahf   
  403494:	sti    
  403495:	add    BYTE PTR [ebx+0x3010ce9],cl
  40349b:	add    BYTE PTR [esi+0x7d],ah
  40349e:	fbld   TBYTE PTR [esi+0xe]
  4034a1:	pop    ebp
  4034a2:	mov    bh,0x81
  4034a4:	or     al,0x59
  4034a6:	mov    bh,0x0
  4034a8:	hlt    
  4034a9:	add    edi,ebx
  4034ab:	mov    di,bx
  4034ae:	or     al,0x84
  4034b0:	mov    eax,DWORD PTR [ecx]
  4034b2:	or     al,0x0
  4034b4:	mov    edi,DWORD PTR [ebp+0x8]
  4034b7:	mov    edi,DWORD PTR [ebx]
  4034b9:	adc    BYTE PTR [edi],cl
  4034bb:	stc    
  4034bc:	mov    ebx,0x8bdf00fa
  4034c1:	mov    ebx,eax
  4034c3:	or     al,0x5d
  4034c5:	mov    esi,DWORD PTR [ebx]
  4034c7:	or     BYTE PTR [ebp+0x72001f84],cl
  4034cd:	add    BYTE PTR [eax],al
  4034cf:	cmp    edi,DWORD PTR [ebp+0xf]
  4034d2:	mov    ecx,DWORD PTR [ebp+0x665d00d8]
  4034d8:	xor    edi,DWORD PTR [ebp-0x73]
  4034db:	mov    ebx,0x728a1f
  4034e0:	add    BYTE PTR [ebx],dh
  4034e2:	jge    0x40354a
  4034e4:	mov    ebx,DWORD PTR [ebp-0x20]
  4034e7:	pop    bp
  4034e9:	clc    
  4034ea:	cmp    di,WORD PTR [edx+esi*2]
  4034ee:	data16 data16 jge 0x40356f
  4034f2:	mov    edi,DWORD PTR [ebx+0x5d8adc]
  4034f8:	xor    di,WORD PTR [esi+eiz*2]
  4034fc:	pop    bp
  4034fe:	jge    0x403566
  403500:	mov    edi,eax
  403502:	lock cmp ecx,DWORD PTR [ebx-0x8f0f789]
  403509:	jge    0x403513
  40350b:	ltr    WORD PTR [ebp-0x2]
  40350f:	add    edi,DWORD PTR [ebx]
  403511:	hsubpd xmm4,xmm0
  403515:	data16 (bad) 
  403517:	jge    0x4034a4
  403519:	mov    ebx,0xf18ae4
  40351e:	dec    ebp
  40351f:	xor    eax,DWORD PTR [ebx]
  403521:	minpd  xmm6,xmm1
  403525:	data16 jne 0x403520
  403528:	jmp    0x403565
  40352a:	mov    esi,DWORD PTR [edx-0x10]
  40352d:	sar    WORD PTR [ebp+0x4d],1
  403531:	mov    ebx,0xa8a8d
  403536:	jb     0x40356b
  403538:	add    BYTE PTR [esi+0x4d],ah
  40353b:	pop    ebp
  40353c:	mov    esp,DWORD PTR [esi-0x20]
  40353f:	clc    
  403540:	jne    0x40357d
  403542:	data16 ja 0x403579
  403545:	jnp    0xf14f9bc8
  40354b:	pop    ebp
  40354c:	inc    ebx
  40354d:	add    eax,DWORD PTR [eax]
  40354f:	data16 data16 jge 0x403545
  403553:	data16 mov ch,0x7d
  403556:	add    BYTE PTR [esi+0x66],ah
  403559:	pop    ebp
  40355a:	icebp  
  40355b:	sbb    di,bx
  40355e:	jne    0x4034e5
  403560:	mov    eax,DWORD PTR [eax]
  403562:	call   0x77bdc067
  403567:	mov    ebp,DWORD PTR [ebx]
  403569:	in     al,dx
  40356a:	data16 stc 
  40356c:	repnz mov esp,0x32759f3b
  403572:	xor    ecx,DWORD PTR [ecx+0x7d33eceb]
  403578:	inc    eax
  403579:	mov    eax,DWORD PTR [edi]
  40357b:	call   0xbc742ec5
  403580:	add    ebx,DWORD PTR [edi-0x76a4cda1]
  403586:	ret    0xe8
  403589:	jge    0x403516
  40358b:	mov    edx,DWORD PTR [ecx-0x14]
  40358e:	mov    ecx,DWORD PTR [ebx-0x76f584aa]
  403594:	add    BYTE PTR [eax],cl
  403596:	data16 jge 0x403567
  403599:	mov    eax,DWORD PTR [ebx-0x18]
  40359c:	add    BYTE PTR [ebx-0x7631849a],cl
  4035a2:	mov    ch,0xc
  4035a4:	add    BYTE PTR [ebp-0x39],bh
  4035a7:	data16 cld 
  4035a9:	pop    ebp
  4035aa:	test   DWORD PTR [ecx+0x3859f8],eax
  4035b0:	pushf  
  4035b1:	add    esp,DWORD PTR [esi+0x66]
  4035b4:	into   
  4035b5:	fistp  WORD PTR [ebp-0x7b]
  4035b8:	push   edi
  4035b9:	(bad)  
  4035ba:	mov    bh,0xff
  4035bc:	mov    edi,0xff338d75
  4035c1:	mov    ebx,DWORD PTR [ecx-0x10]
  4035c4:	push   ecx
  4035c5:	repnz mov ebx,0x894faf
  4035cb:	lock cmp edx,DWORD PTR [edx]
  4035ce:	jne    0x403625
  4035d0:	mov    DWORD PTR [ebx],esi
  4035d2:	cld    
  4035d3:	mov    edx,DWORD PTR [edi-0x1c]
  4035d6:	xor    ecx,DWORD PTR [ebx+ecx*4+0x6632339f]
  4035dd:	mov    DWORD PTR [esp+eiz*8-0x749baac2],ecx
  4035e4:	mov    ebx,0x8b3bec
  4035e9:	push   esi
  4035ea:	sub    ecx,eax
  4035ec:	mov    ebx,0xba8a2b
  4035f1:	mov    dh,BYTE PTR [ebx]
  4035f3:	add    BYTE PTR [ebx+0xb94e33],bh
  4035f9:	dec    esi
  4035fa:	cmp    eax,DWORD PTR [eax]
  4035fc:	jne    0x403639
  4035fe:	mov    esi,DWORD PTR [ebp-0x4]
  403601:	mov    ebx,DWORD PTR [ebx-0x24]
  403604:	stc    
  403605:	jge    0x40358c
  403607:	data16 clc 
  403609:	xor    al,0x9
  40360b:	data16 into 
  40360d:	lock test BYTE PTR [ebx],dh
  403610:	inc    eax
  403611:	data16 fs icebp 
  403614:	pop    esi
  403615:	add    al,0xc3
  403617:	ror    BYTE PTR [ebx+0x57c0510c],0xeb
  40361e:	inc    ebp
  40361f:	mov    edi,DWORD PTR [ecx]
  403621:	in     al,0x9c
  403623:	sar    DWORD PTR [esi-0x7a17a3e],0xc9
  40362a:	pop    ebx
  40362b:	or     al,0xff
  40362d:	push   ebp
  40362e:	mov    ebp,esp
  403630:	mov    ah,BYTE PTR [esi+0x4]
  403633:	or     BYTE PTR [esi+edi*4],dh
  403636:	cmp    al,0x3b
  403638:	je     0x40363a
  40363a:	mov    ebp,DWORD PTR [ebx]
  40363c:	mov    edx,0xff8a8dbe
  403641:	add    BYTE PTR [ecx+0x33],bl
  403644:	push   ecx
  403645:	mov    esi,0x8b4e53
  40364a:	mov    ebx,0x393b45
  40364f:	pushf  
  403650:	sub    edi,DWORD PTR [edx-0x7757a45]
  403656:	add    BYTE PTR [ebx],bh
  403658:	xor    esi,DWORD PTR [ebx+edi*4+0x53]
  40365c:	dec    edi
  40365d:	str    ecx
  403660:	cmp    esp,DWORD PTR [ecx+0x75]
  403663:	int    0x89
  403665:	mov    esi,0x77208fc
  40366a:	xor    edx,DWORD PTR [ecx]
  40366c:	mov    eax,DWORD PTR [eax]
  40366e:	xor    esp,DWORD PTR [esi-0x73]
  403671:	retf   
  403672:	push   edi
  403673:	add    esp,ebp
  403675:	push   ebp
  403676:	add    BYTE PTR [ebp-0x293cfee8],cl
  40367c:	cmp    dl,0x4a
  40367f:	(bad)  
  403680:	sti    
  403681:	mov    esi,DWORD PTR [ebp+0x78]
  403684:	mov    esp,ebp
  403686:	cld    
  403687:	add    BYTE PTR ds:0xf800850a,bh
  40368d:	data16 or al,0xcb
  403690:	rol    DWORD PTR [ebx-0x37],0x0
  403694:	mov    DWORD PTR [esi+0x47],esp
  403697:	retf   
  403698:	in     eax,0xb5
  40369a:	add    BYTE PTR [eax],al
  40369c:	(bad)  
  40369d:	pop    si
  40369f:	retf   
  4036a0:	ret    
  4036a1:	enter  0x4d8b,0x51
  4036a5:	pop    edi
  4036a6:	mov    DWORD PTR [ecx-0x637ac604],0x333874f8
  4036b0:	pushf  
  4036b1:	(bad)  
  4036b2:	call   0x2634ff
  4036b7:	add    BYTE PTR [ebx+0x3b55bac9],cl
  4036bd:	in     al,dx
  4036be:	add    BYTE PTR [esi+0x2b],dl
  4036c1:	(bad)  
  4036c2:	mov    edx,0x858afc
  4036c7:	clc    
  4036c8:	xor    edi,DWORD PTR [eax]
  4036ca:	mov    edx,0xe84e9c
  4036cf:	(bad)  
  4036d0:	cmp    edi,edi
  4036d2:	je     0x4036cc
  4036d4:	push   ebx
  4036d5:	pop    es
  4036d6:	sysenter 
  4036d8:	leave  
  4036d9:	dec    edx
  4036da:	popa   
  4036db:	jle    0x4036aa
  4036dd:	popa   
  4036de:	mov    edi,0x76108c7
  4036e3:	int    0x67
  4036e5:	mov    ecx,0x7660800
  4036ea:	retf   
  4036eb:	add    ax,WORD PTR [eax]
  4036ee:	jne    0x4036fa
  4036f0:	lea    eax,[eax]
  4036f2:	add    DWORD PTR [esi-0x9],esp
  4036f5:	ret    
  4036f6:	(bad)  
  4036f7:	inc    ebx
  4036f8:	xlat   BYTE PTR ds:[ebx]
  4036f9:	add    BYTE PTR [ebx-0x1a3caf9a],cl
  4036ff:	add    BYTE PTR [bx+si],al
  403702:	or     ah,BYTE PTR [esi+0x0]
  403705:	ret    
  403706:	add    cx,bx
  403709:	jne    0x40374e
  40370b:	lea    eax,[eax]
  40370d:	add    DWORD PTR [esi-0xf],esp
  403710:	retf   
  403711:	(bad)  
  403712:	mov    ch,0xd1
  403714:	add    BYTE PTR [esi+eiz*2-0x379b34c2],al
  40371b:	mov    bh,BYTE PTR [ebp-0x80]
  40371e:	cmp    DWORD PTR [esp+ebx*4],esi
  403721:	repz pop edi
  403723:	xor    BYTE PTR [esi+edi*2+0x33],0xc3
  403728:	inc    eax
  403729:	inc    ebp
  40372a:	add    bl,BYTE PTR [ebx-0x40]
  40372d:	cmp    ecx,ecx
  40372f:	pushf  
  403730:	push   ebp
  403731:	je     0x40371f
  403733:	xor    ecx,DWORD PTR [ebx-0x4899f7cd]
  403739:	mov    WORD PTR [esi+0x3e],ss
  40373c:	and    DWORD PTR [esp+eax*8-0x75],0xc9435fff
  403744:	add    BYTE PTR [ebp+0x57],dl
  403747:	in     al,dx
  403748:	(bad)  
  403749:	push   esi
  40374a:	mov    ch,0x45
  40374c:	add    BYTE PTR [ecx],bh
  40374e:	mov    DWORD PTR [esp+edi*8+0x74853bbe],ebx
  403755:	clc    
  403756:	mov    edx,edx
  403758:	or     bh,bh
  40375a:	ret    0x4566
  40375d:	or     bl,ch
  40375f:	or     cl,BYTE PTR [ebx-0x7699f800]
  403765:	retf   0x4383
  403768:	add    al,BYTE PTR [eax]
  40376a:	mov    bh,0x66
  40376c:	adc    dl,cl
  40376e:	iret   
  40376f:	mov    ch,0xc7
  403771:	add    ah,al
  403773:	dec    dx
  403776:	(bad)  
  403777:	push   edi
  403778:	mov    ch,0x57
  40377a:	add    BYTE PTR [edi-0x7207459a],dh
  403780:	(bad)  
  403782:	rcr    BYTE PTR [ecx+0x66],0x51
  403786:	add    bh,BYTE PTR [ebx+0x5e4f45]
  40378c:	ret    0x3b
  40378f:	jne    0x40371c
  403791:	mov    DWORD PTR [ebx+0x457218fc],eax
  403797:	xor    edi,DWORD PTR [eax]
  403799:	mov    ebx,DWORD PTR [ebx+esi*1-0x73179939]
  4037a0:	test   DWORD PTR [esi],edi
  4037a2:	clc    
  4037a3:	fs inc ebp
  4037a5:	mov    ebx,0x83b35
  4037aa:	pop    es
  4037ab:	sub    ebx,DWORD PTR [edi-0x7675cd45]
  4037b1:	add    al,bh
  4037b3:	xor    eax,DWORD PTR [ebp-0x45]
  4037b6:	xor    BYTE PTR [esi-0x64],cl
  4037b9:	add    bh,al
  4037bb:	cmp    esi,esp
  4037bd:	jne    0x403744
  4037bf:	cmp    eax,0x3a8545fc
  4037c5:	clc    
  4037c6:	pushf  
  4037c7:	pop    ebx
  4037c8:	mov    eax,DWORD PTR ds:0xeb59c0ec
  4037ce:	push   ecx
  4037cf:	xor    ecx,DWORD PTR [ebx-0x7b3c07a2]
  4037d5:	mov    ebx,DWORD PTR [edi-0x74bacdaf]
  4037db:	psubsb mm1,QWORD PTR [eax]
  4037de:	icebp  
  4037df:	lea    ecx,[eax]
  4037e1:	test   BYTE PTR [edi],0xff
  4037e4:	sar    DWORD PTR [esi+0x8a72],0x55
  4037eb:	xor    ecx,DWORD PTR [edi]
  4037ed:	mov    edi,0xc24ed1
  4037f2:	adc    DWORD PTR [ebp+0x0],0x66
  4037f6:	add    bh,al
  4037f8:	inc    ebp
  4037f9:	sub    ecx,DWORD PTR [ebx-0x3ed407bb]
  4037ff:	mov    DWORD PTR [ebp+0x8],ecx
  403802:	add    DWORD PTR [ebx],0x66514559
  403808:	or     DWORD PTR [edx],0xf32c29f
  40380e:	cmp    edi,DWORD PTR [esi+esi*2]
  403811:	mov    ecx,DWORD PTR [ebx+0x45f60881]
  403817:	dec    DWORD PTR [ebx+0x4db80c33]
  40381d:	dec    esi
  40381e:	mov    eax,DWORD PTR [eax]
  403820:	mov    DWORD PTR [ebx],edi
  403822:	mov    esi,DWORD PTR [ebp+0x4]
  403825:	xor    ecx,DWORD PTR [eax+0x5f]
  403828:	mov    ecx,DWORD PTR [ecx-0x3a67410]
  40382e:	push   ecx
  40382f:	leave  
  403830:	mov    eax,DWORD PTR [eax+edi*8]
  403833:	push   ebp
  403834:	test   ah,ch
  403836:	lahf   
  403837:	in     al,dx
  403838:	xor    al,bh
  40383a:	mov    esp,ebp
  40383c:	clc    
  40383d:	test   DWORD PTR [ebp-0x74baff08],ebx
  403843:	cmp    edx,DWORD PTR [eax]
  403845:	pushf  
  403846:	dec    ebp
  403847:	mov    ebp,DWORD PTR [ebx]
  403849:	in     al,dx
  40384a:	mov    ebx,DWORD PTR [ecx-0xc]
  40384d:	push   ecx
  40384e:	icebp  
  40384f:	add    eax,0x77208
  403854:	rol    DWORD PTR [ebp+0x72],0xc7
  403858:	add    al,dh
  40385a:	rol    DWORD PTR [ebp+0x4545f827],0x3
  403861:	cmp    al,0xf8
  403863:	pushf  
  403864:	dec    ebp
  403865:	mov    DWORD PTR [ebx],0x985f8fc
  40386b:	clc    
  40386c:	or     BYTE PTR [ebp+0x45],al
  40386f:	xor    eax,0x7080835
  403874:	pop    es
  403875:	dec    ebp
  403876:	dec    ebp
  403877:	lea    ecx,[ebp+0x72720101]
  40387d:	add    BYTE PTR [eax],al
  40387f:	dec    ebp
  403880:	inc    ebp
  403881:	sub    ebx,0x10518b59
  403887:	or     DWORD PTR [ebp-0x61],0x8b8b322b
  40388e:	cld    
  40388f:	adc    cl,dh
  403891:	scas   eax,DWORD PTR es:[edi]
  403892:	or     BYTE PTR [ebx],bh
  403894:	pop    es
  403895:	xadd   ebp,ebp
  403898:	jb     0x40389a
  40389a:	add    BYTE PTR [ebx+0x4d2910c1],cl
  4038a0:	inc    ebp
  4038a1:	sub    eax,DWORD PTR [ebx]
  4038a3:	mov    edi,eax
  4038a5:	lock dec ebp
  4038a7:	icebp  
  4038a8:	add    ecx,DWORD PTR [eax]
  4038aa:	clc    
  4038ab:	pop    es
  4038ac:	mov    eax,ecx
  4038ae:	data16 jb 0x4038b9
  4038b1:	add    BYTE PTR [ebp-0x3f],al
  4038b4:	xor    eax,0x7450830
  4038b9:	add    ecx,DWORD PTR [ebp-0x8]
  4038bc:	lea    ecx,[ebp+0x1]
  4038bf:	add    esi,DWORD PTR [edx-0x8]
  4038c2:	add    BYTE PTR [ecx],dl
  4038c4:	inc    ebp
  4038c5:	adc    bl,ch
  4038c7:	dec    ecx
  4038c8:	mov    ecx,DWORD PTR [ecx+0x45450408]
  4038ce:	mov    esi,DWORD PTR ds:0x74d080c
  4038d4:	mov    cl,BYTE PTR [ebp-0x78]
  4038d7:	lea    ecx,[ebx-0x768d07ff]
  4038dd:	add    al,bh
  4038df:	inc    ebp
  4038e0:	in     al,0xe9
  4038e2:	inc    DWORD PTR [eax]
  4038e4:	leave  
  4038e5:	add    BYTE PTR [eax*2-0x71374ab],cl
  4038ec:	push   ecx
  4038ed:	rol    DWORD PTR [ebp+0x4d],0x38
  4038f1:	sbb    DWORD PTR [ecx+ebx*2-0x7e07ae39],0x32f89f85
  4038fc:	sar    BYTE PTR [ebx],0x74
  4038ff:	jbe    0x40388c
  403901:	mov    edi,esp
  403903:	or     BYTE PTR [ecx+0x45],bl
  403906:	push   ecx
  403907:	mov    eax,DWORD PTR ds:0x4d720c
  40390d:	mov    eax,DWORD PTR [ebp-0x77]
  403910:	jne    0x40389d
  403912:	jmp    0x403908
  403914:	mov    ebx,DWORD PTR [ecx-0x8]
  403917:	push   ecx
  403918:	pop    ecx
  403919:	mov    edx,DWORD PTR [ecx-0x8]
  40391c:	add    eax,0x9f7284
  403921:	xor    cl,BYTE PTR [ebp-0x77]
  403924:	sub    edi,eax
  403926:	mov    DWORD PTR [ebx+0xc],ebx
  403929:	inc    ebp
  40392a:	inc    ebp
  40392b:	mov    esi,DWORD PTR ds:0x7c108f8
  403931:	dec    ebp
  403932:	lahf   
  403933:	xor    DWORD PTR [edx],0x8518b59
  403939:	or     DWORD PTR [ebp-0x61],0x3beb3288
  403940:	leave  
  403941:	jbe    0x40394b
  403943:	mov    edx,DWORD PTR [ebp+0x8]
  403946:	in     al,dx
  403947:	inc    ebp
  403948:	in     al,dx
  403949:	mov    eax,DWORD PTR [edx]
  40394b:	or     al,0x0
  40394d:	dec    ebp
  40394e:	inc    ebp
  40394f:	data16 cmp BYTE PTR [ecx],cl
  403952:	pushf  
  403953:	mov    edi,eax
  403955:	mov    esi,eax
  403957:	cld    
  403958:	test   DWORD PTR [ecx-0x8],ebx
  40395b:	push   ecx
  40395c:	inc    ebp
  40395d:	mov    ecx,DWORD PTR [ebx-0x3f7bf708]
  403963:	lahf   
  403964:	pop    es
  403965:	xor    al,al
  403967:	mov    DWORD PTR [ebp-0x74e8ff08],esp
  40396d:	inc    ebp
  40396e:	or     al,0x3
  403970:	sar    al,0xf2
  403973:	dec    ebp
  403974:	lea    eax,[ebx]
  403976:	in     al,0xf8
  403978:	dec    DWORD PTR [ecx]
  40397a:	mov    DWORD PTR [eax],ecx
  40397c:	cld    
  40397d:	inc    ebp
  40397e:	inc    ebp
  40397f:	inc    eax
  403980:	mov    DWORD PTR [ebp-0x14],eax
  403983:	jmp    0xff9737cd
  403988:	mov    edi,0x70008c2
  40398d:	mov    eax,edi
  40398f:	push   ecx
  403990:	lahf   
  403991:	(bad)  
  403992:	xor    bh,ah
  403994:	add    eax,DWORD PTR [ebp+0x4510f889]
  40399a:	inc    ebp
  40399b:	cmp    ebp,eax
  40399d:	pushf  
  40399e:	std    
  40399f:	xor    edi,edi
  4039a1:	inc    eax
  4039a2:	fadd   DWORD PTR [eax+0x45]
  4039a5:	inc    ebp
  4039a6:	mov    esi,DWORD PTR ds:0x7510814
  4039ac:	inc    ebp
  4039ad:	lahf   
  4039ae:	xor    DWORD PTR [edx],0x8
  4039b1:	cmp    DWORD PTR [ebp+0xc],eax
  4039b4:	mov    eax,DWORD PTR [edx]
  4039b6:	clc    
  4039b7:	sub    al,0x40
  4039b9:	inc    ebp
  4039ba:	call   0xff4934f4
  4039bf:	pop    es
  4039c0:	inc    ebp
  4039c1:	lahf   
  4039c2:	push   DWORD PTR [edx]
  4039c4:	adc    BYTE PTR [ebx-0x3717f3ab],cl
  4039ca:	std    
  4039cb:	dec    ebp
  4039cc:	dec    DWORD PTR [ebx+0x5908fcdb]
  4039d2:	inc    ebp
  4039d3:	push   ecx
  4039d4:	call   0xffb335de
  4039d9:	add    BYTE PTR [ebp+0x4d],al
  4039dc:	xor    eax,DWORD PTR [ebx]
  4039de:	add    ecx,DWORD PTR [eax+edx*2]
  4039e1:	add    DWORD PTR [ebp-0x45],esi
  4039e4:	inc    edx
  4039e6:	cld    
  4039e7:	add    BYTE PTR [ecx],dh
  4039e9:	mov    edi,edi
  4039eb:	or     DWORD PTR [ebx-0x30ff0be4],0xc1f4cec7
  4039f5:	test   DWORD PTR [esi],ebx
  4039f7:	clc    
  4039f8:	inc    ebp
  4039f9:	inc    ebp
  4039fa:	mov    edi,DWORD PTR [ebx]
  4039fc:	mov    DWORD PTR [esp+ecx*1-0x74efba75],ebx
  403a03:	inc    ebp
  403a04:	or     al,0x85
  403a06:	shl    BYTE PTR [ebp+0x3b],0x33
  403a0a:	jne    0x4039f5
  403a0c:	xor    eax,DWORD PTR [eax]
  403a0e:	pop    edi
  403a0f:	add    BYTE PTR [ebx+0x45],bl
  403a12:	ret    0x85
  403a15:	je     0x403a5c
  403a17:	push   ebx
  403a18:	mov    eax,DWORD PTR [ebp-0xe02e8]
  403a1e:	mov    eax,DWORD PTR [ebp-0x75]
  403a21:	mov    ecx,DWORD PTR [esp+ecx*1]
  403a24:	in     al,dx
  403a25:	inc    ebp
  403a26:	or     DWORD PTR [ebx+0x5753f408],0x57
  403a2d:	pop    ecx
  403a2e:	test   BYTE PTR [ecx+0x0],dl
  403a31:	xor    eax,DWORD PTR [eax]
  403a33:	mov    esi,0x8472c0
  403a38:	add    dh,al
  403a3a:	add    BYTE PTR [ebp-0x49],al
  403a3d:	mov    esp,DWORD PTR [eax]
  403a3f:	or     al,0xc8
  403a41:	add    BYTE PTR [ebp-0x1],al
  403a44:	xor    ecx,DWORD PTR [ebx+0x8f88b21]
  403a4a:	inc    ebx
  403a4b:	inc    eax
  403a4c:	add    bl,ch
  403a4e:	xor    ecx,DWORD PTR [ebx-0x17f5f37f]
  403a54:	add    BYTE PTR [ecx+0x45f4f889],cl
  403a5a:	mov    eax,DWORD PTR gs:[eax]
  403a5d:	sub    cl,cl
  403a5f:	retf   0xff7c
  403a62:	mov    WORD PTR [ebp+0x10],cx
  403a66:	jae    0x403add
  403a68:	lea    ecx,[ebx+0x63fffcf6]
  403a6e:	xor    edi,edi
  403a70:	jne    0x8bcbafc3
  403a76:	or     al,0xfc
  403a78:	or     al,0x3e
  403a7a:	push   WORD PTR [ecx-0x75]
  403a7e:	jne    0x403a70
  403a80:	cmpxchg8b QWORD PTR [ecx]
  403a83:	(bad)  
  403a84:	mov    ch,0xff
  403a86:	add    ah,ch
  403a88:	data16 jne 0x403a5a
  403a8b:	call   0xff9e339c
  403a90:	cmovge edi,edx
  403a93:	xor    edi,DWORD PTR [ebx+eax*1]
  403a96:	add    BYTE PTR [ebx],bh
  403a98:	sub    eax,0xf8b5d74
  403a9d:	or     al,0xfa
  403a9f:	add    BYTE PTR [edi],cl
  403aa1:	inc    ebp
  403aa2:	cmp    al,0x8b
  403aa4:	mov    ebx,0x4d3b08
  403aa9:	sub    DWORD PTR [ebx],0x14
  403aac:	enterw 0x9ff8,0x3b
  403ab1:	shl    BYTE PTR [esi+ebx*2+0x6a],0xc9
  403ab6:	pop    edi
  403ab7:	or     al,0x45
  403ab9:	mov    esp,DWORD PTR [esi-0x8]
  403abc:	dec    ebp
  403abd:	inc    eax
  403abe:	data16 jmp 0x403b0e
  403ac1:	push   ebp
  403ac2:	jb     0x403ab0
  403ac4:	jmp    0x403b0b
  403ac6:	inc    DWORD PTR [ebx+0x7d7f10f8]
  403acc:	mov    eax,DWORD PTR [eax]
  403ace:	or     BYTE PTR [esi-0x49],dl
  403ad1:	jo     0x74406c86
  403ad7:	test   DWORD PTR [edx+0xf],eax
  403ada:	jmp    DWORD PTR [edi+0xf77000f]
  403ae0:	inc    DWORD PTR [eax+0x33]
  403ae3:	mov    ebx,DWORD PTR [edi-0x77]
  403ae6:	pop    ebx
  403ae7:	lock ret 0xd2
  403aeb:	push   ebp
  403aec:	dec    ebp
  403aed:	mov    eax,0xf68a81
  403af2:	dec    eax
  403af4:	ror    ax,0x3b
  403af8:	rol    BYTE PTR [eax],0x3b
  403afb:	dec    ebp
  403afc:	lock adc DWORD PTR [esp+edi*8+0x6a5533eb],0xffffffec
  403b05:	pop    edi
  403b06:	in     al,dx
  403b07:	cmp    edx,DWORD PTR [edi-0xc]
  403b0a:	clc    
  403b0b:	xchg   DWORD PTR fs:[edx-0xff3bff],esi
  403b12:	cmp    al,dh
  403b14:	jne    0x403acd
  403b16:	xor    edi,esp
  403b18:	jmp    0xcd3c7a
  403b1d:	mov    ebp,DWORD PTR [ecx+edi*1]
  403b20:	jne    0x403b24
  403b22:	call   0xfff8385e
  403b27:	mov    edi,0x14e97
  403b2c:	add    BYTE PTR [ebx],bh
  403b2e:	inc    edi
  403b2f:	jne    0x403aba
  403b31:	mov    esi,DWORD PTR [eax+ecx*1-0x7f7648b9]
  403b38:	mov    eax,0x8974471f
  403b3d:	mov    edi,DWORD PTR [eax+ecx*1+0x6600b787]
  403b44:	add    BYTE PTR [esi+0xa8d1f45],bh
  403b4a:	stos   BYTE PTR es:[edi],al
  403b4b:	add    BYTE PTR [eax],al
  403b4d:	mov    bx,di
  403b50:	les    esi,FWORD PTR [ebx]
  403b52:	xchg   DWORD PTR [esi+0x0],esp
  403b55:	iret   
  403b56:	add    BYTE PTR [edx],dl
  403b58:	inc    ebp
  403b59:	jle    0x403ae8
  403b5b:	(bad)  
  403b5c:	out    dx,al
  403b5d:	cld    
  403b5e:	add    BYTE PTR [ebx+0x39ccf489],cl
  403b64:	xchg   esp,edi
  403b66:	add    DWORD PTR [eax+eax*1-0x72babafa],ebp
  403b6d:	push   0x32
  403b6f:	pop    edi
  403b70:	add    BYTE PTR [ebp-0x77],dh
  403b73:	paddq  mm1,mm2
  403b76:	xchg   DWORD PTR [ecx+eax*1],edi
  403b79:	add    BYTE PTR [eax],al
  403b7b:	adc    ecx,DWORD PTR [ecx+0x457eb083]
  403b81:	test   eax,ebp
  403b83:	inc    DWORD PTR [eax]
  403b85:	inc    DWORD PTR [eax]
  403b87:	ror    BYTE PTR [ebx+0xc9a85e],0x8
  403b8e:	dec    DWORD PTR [ebx-0x3e020718]
  403b94:	inc    esp
  403b96:	inc    ebp
  403b97:	inc    DWORD PTR [ebp-0x52ccf0cd]
  403b9d:	data16 add BYTE PTR [ebp-0x75],cl
  403ba1:	(bad)  
  403ba3:	rcl    BYTE PTR [esi-0x1e],0x74
  403ba7:	mov    edi,DWORD PTR [eax-0x7d]
  403baa:	lock push eax
  403bac:	jle    0x403b39
  403bae:	mov    ecx,DWORD PTR [ebx+0x56a81c]
  403bb4:	mov    eax,DWORD PTR [ebx+0x7f80018]
  403bba:	jge    0x403b7c
  403bbc:	mov    esi,DWORD PTR [eax]
  403bbe:	adc    al,0x0
  403bc0:	enter  0xd06a,0xff
  403bc4:	dec    ebp
  403bc5:	or     BYTE PTR [ecx+0x7dffe4c1],cl
  403bcb:	mov    edi,DWORD PTR [ebx]
  403bcd:	lods   al,BYTE PTR ds:[esi]
  403bce:	ja     0x403bd0
  403bd0:	mov    DWORD PTR [ebp+0x45db22f8],ecx
  403bd6:	pop    ebp
  403bd7:	lea    edi,[ecx]
  403bd9:	inc    esp
  403bda:	clc    
  403bdb:	inc    ebp
  403bdc:	outs   dx,BYTE PTR ds:[esi]
  403bdd:	lea    eax,[ebx]
  403bdf:	push   bp
  403be1:	inc    ebp
  403be2:	mov    ecx,DWORD PTR [ebp+0xb788e0]
  403be8:	pop    edi
  403be9:	mov    DWORD PTR [esi-0x40],ebx
  403bec:	jae    0x403b75
  403bee:	cmp    eax,DWORD PTR [eax]
  403bf0:	adc    al,0x0
  403bf2:	pop    eax
  403bf3:	inc    ebp
  403bf4:	sbb    al,0x8d
  403bf6:	mov    ecx,esp
  403bf8:	or     BYTE PTR [eax],al
  403bfa:	cmp    al,0x89
  403bfc:	mov    eax,ecx
  403bfe:	cld    
  403bff:	xchg   DWORD PTR [ebp+0x0],edx
  403c02:	add    eax,DWORD PTR [eax]
  403c04:	add    eax,DWORD PTR [ebp+0x2b]
  403c07:	lea    ecx,[eax]
  403c09:	adc    BYTE PTR [ebp+0x0],al
  403c0c:	or     ecx,DWORD PTR [ecx-0x78763000]
  403c12:	fadd   QWORD PTR [ecx]
  403c14:	push   ebp
  403c15:	add    BYTE PTR [ebx+0x1b8d0045],al
  403c1b:	push   esp
  403c1c:	inc    ebp
  403c1d:	add    bh,bh
  403c1f:	push   edi
  403c20:	adc    BYTE PTR [ebp-0x18],bh
  403c23:	mov    ebp,edi
  403c25:	fdivr  st,st(7)
  403c27:	cli    
  403c28:	dec    ebp
  403c29:	add    BYTE PTR [ebp-0x74788bb0],al
  403c2f:	add    esp,edi
  403c31:	add    BYTE PTR [eax],bh
  403c33:	xor    BYTE PTR [ebp-0x51],al
  403c36:	cmp    edi,0xfffffffc
  403c39:	mov    edi,edi
  403c3b:	lock in al,dx
  403c3d:	rcl    ah,0x84
  403c40:	pop    ebp
  403c41:	add    BYTE PTR [ebx+0x0],al
  403c44:	pop    ebp
  403c45:	dec    eax
  403c46:	cmp    edx,DWORD PTR [ebx-0x8]
  403c49:	mov    edx,DWORD PTR [ecx+eax*1-0x7436fca5]
  403c50:	add    al,0x24
  403c52:	push   ebp
  403c53:	dec    esi
  403c54:	in     al,dx
  403c55:	mov    eax,DWORD PTR [ebp+0x20]
  403c58:	push   esi
  403c59:	pop    esi
  403c5a:	mov    al,0x3
  403c5c:	add    DWORD PTR [ecx+0x7eb0e000],ecx
  403c62:	add    DWORD PTR [ebx],eax
  403c64:	add    BYTE PTR [ebx],al
  403c66:	inc    ebp
  403c67:	mov    eax,ebp
  403c69:	hlt    
  403c6a:	(bad)  
  403c6b:	push   ebp
  403c6c:	dec    DWORD PTR [ecx-0x4fe07f2]
  403c72:	push   es
  403c73:	add    ecx,ecx
  403c75:	pop    ebp
  403c76:	or     BYTE PTR [ebx],dh
  403c78:	jns    0x5e02253f
  403c7e:	ret    0x76
  403c81:	jmp    0x403c12
  403c83:	mov    eax,DWORD PTR [ecx]
  403c85:	in     al,0x0
  403c87:	jge    0x403c74
  403c89:	sysexit 
  403c8b:	cmp    al,0x8a
  403c8d:	cmp    eax,DWORD PTR [eax]
  403c8f:	sbb    BYTE PTR [edx],cl
  403c91:	pop    ebp
  403c92:	add    BYTE PTR [esi+0x66],bh
  403c95:	jae    0x403c98
  403c97:	mov    eax,ecx
  403c99:	call   0xb9b7:0x8b025583
  403ca0:	mov    ebx,0x8d4e55
  403ca5:	mov    al,0x3b
  403ca7:	fdiv   DWORD PTR [ebp-0x8]
  403caa:	xor    edx,DWORD PTR [ebp+0x66]
  403cad:	mov    DWORD PTR [ecx],0x10087ec
  403cb3:	add    BYTE PTR [eax],al
  403cb5:	push   ebp
  403cb6:	ret    
  403cb7:	mov    ecx,DWORD PTR [ebx-0x77c57404]
  403cbd:	jne    0x403cbf
  403cbf:	mov    eax,ecx
  403cc1:	fadd   QWORD PTR [esi]
  403cc3:	xor    al,0xc7
  403cc5:	push   ebx
  403cc6:	or     dh,dh
  403cc8:	icebp  
  403cc9:	inc    DWORD PTR [eax+0x8f4348b]
  403ccf:	rol    BYTE PTR [edx+0x5],0xa
  403cd3:	inc    ebp
  403cd4:	stc    
  403cd5:	mov    DWORD PTR [ebp-0x75],esi
  403cd8:	(bad)  
  403cd9:	lock add BYTE PTR [ebp-0x7a],al
  403cdd:	add    al,0x1
  403cdf:	dec    ebp
  403ce0:	add    BYTE PTR [ebp-0x39],dh
  403ce3:	mov    eax,ebx
  403ce5:	call   0xe8c3c675
  403cea:	sbb    al,0x5d
  403cec:	mov    edi,0xf85e8572
  403cf1:	pop    edi
  403cf2:	jge    0x403cb6
  403cf4:	lea    eax,[eax]
  403cf6:	add    ecx,DWORD PTR [ebx+0x88b8b45]
  403cfc:	or     bh,bh
  403cfe:	leave  
  403cff:	fadd   DWORD PTR [eax+eax*1-0x67ff7300]
  403d06:	dec    ebp
  403d07:	add    BYTE PTR [ebp-0xff7f075],al
  403d0d:	xchg   ebp,eax
  403d0e:	add    bh,bh
  403d10:	mov    ecx,DWORD PTR [ebx-0x74b276f0]
  403d16:	mov    esi,DWORD PTR [ebx]
  403d18:	or     al,0x39
  403d1a:	dec    ebp
  403d1b:	pop    esi
  403d1c:	mov    edx,DWORD PTR [ebp+0x5d458b08]
  403d22:	jmp    0xec88:0x898b9c04
  403d29:	add    BYTE PTR [ecx-0x76ec17ad],cl
  403d2f:	inc    ebx
  403d30:	or     al,0x0
  403d32:	dec    ebp
  403d33:	add    eax,0x103bc7
  403d38:	test   DWORD PTR [ecx+0x25983f8],ecx
  403d3e:	push   ecx
  403d3f:	ret    0xfbb
  403d42:	lea    eax,[edx]
  403d44:	push   DWORD PTR [ebp+0x66330045]
  403d4a:	mov    eax,ebx
  403d4c:	sub    esp,eax
  403d4e:	add    eax,eax
  403d50:	clc    
  403d51:	mov    DWORD PTR [ebx-0x7477ff75],edx
  403d57:	add    BYTE PTR [ebx+ebx*2],cl
  403d5a:	dec    ebp
  403d5b:	push   edi
  403d5c:	xor    edi,eax
  403d5e:	xor    eax,DWORD PTR [esi+0x8018d]
  403d64:	in     eax,0xe7
  403d66:	add    BYTE PTR [ebx],al
  403d68:	inc    ebp
  403d69:	jmp    0x403d9e
  403d6b:	xor    bh,0x4a
  403d6e:	mov    ebp,ecx
  403d70:	adc    BYTE PTR [eax-0x75ccbfb3],cl
  403d76:	xor    eax,DWORD PTR [eax-0x10c481d5]
  403d7c:	jne    0x403d7e
  403d7e:	mov    ecx,DWORD PTR [ebx+0x458808]
  403d84:	mov    eax,DWORD PTR [ebx]
  403d86:	hlt    
  403d87:	pop    edi
  403d88:	add    BYTE PTR [ebp-0x37],dl
  403d8b:	in     al,dx
  403d8c:	push   es
  403d8d:	in     al,dx
  403d8e:	dec    edx
  403d8f:	push   edi
  403d90:	xor    al,0x38
  403d92:	pop    ss
  403d93:	pushf  
  403d94:	dec    ebp
  403d95:	mov    DWORD PTR [eax+0x614759e8],eax
  403d9b:	mov    ecx,edx
  403d9d:	in     al,0x4d
  403d9f:	dec    ebp
  403da0:	add    BYTE PTR [ebp-0x43df0a7],0xe9
  403da7:	add    dl,dl
  403da9:	mov    ecx,DWORD PTR [ebx+0x4dc9080c]
  403daf:	test   BYTE PTR [eax+0x8008b00],cl
  403db5:	dec    ebp
  403db6:	push   ebp
  403db7:	mov    DWORD PTR [eax+0x4d72f4],edi
  403dbd:	mov    eax,ecx
  403dbf:	clc    
  403dc0:	into   
  403dc1:	dec    ebp
  403dc2:	retf   0x18c7
  403dc5:	lock dec ebp
  403dc7:	test   DWORD PTR [ebx-0x31baf308],ecx
  403dcd:	push   ebx
  403dce:	(bad)  
  403dcf:	jge    0x403d9b
  403dd1:	push   esi
  403dd2:	enter  0xce45,0x89
  403dd6:	dec    ebp
  403dd7:	cld    
  403dd8:	jmp    0xff7b3d22
  403ddd:	pushf  
  403dde:	inc    ebp
  403ddf:	mov    esi,0x78b0833
  403de4:	sub    esp,DWORD PTR [ecx+0x3]
  403de7:	int    0x8
  403de9:	mov    ecx,DWORD PTR [ebp+0xc]
  403dec:	mov    eax,esi
  403dee:	adc    bl,cl
  403df0:	(bad)  
  403df1:	enter  0x4d85,0xff
  403df5:	jmp    0x853ef9
  403dfa:	xor    eax,DWORD PTR [ebp+0x5e]
  403dfd:	mov    ebp,ebx
  403dff:	or     al,0x8b
  403e01:	(bad)  
  403e02:	call   0x51cc97d5
  403e07:	ds add eax,0x8b7264
  403e0d:	or     cl,cl
  403e0f:	ror    BYTE PTR [ecx+esi*8],cl
  403e12:	push   ebp
  403e13:	inc    ebp
  403e14:	in     al,dx
  403e15:	mov    ebp,esp
  403e17:	or     al,0xc7
  403e19:	(bad)  
  403e1a:	lock into 
  403e1c:	test   ecx,eax
  403e1e:	clc    
  403e1f:	rol    BYTE PTR [ebp+0x34],1
  403e22:	cmp    eax,DWORD PTR [ebp-0x64]
  403e25:	add    ecx,DWORD PTR [ebx-0x7b27604]
  403e2b:	mov    al,BYTE PTR [ebp-0x7b]
  403e2e:	xor    BYTE PTR [ebp-0x64],dh
  403e31:	xor    al,0x56
  403e33:	sub    al,0xc7
  403e35:	jmp    0x403e23
  403e37:	mov    ebx,DWORD PTR [eax]
  403e39:	lock jmp 0xf02a:0x8bb27df1
  403e41:	mov    ebx,DWORD PTR [ecx-0x14]
  403e44:	push   ecx
  403e45:	icebp  
  403e46:	xor    eax,DWORD PTR [edx]
  403e48:	mov    edx,0x617280
  403e4d:	enter  0x4dc8,0xfa
  403e51:	add    ecx,edx
  403e53:	cld    
  403e54:	scas   eax,DWORD PTR es:[edi]
  403e55:	add    ebx,ebp
  403e57:	dec    ebp
  403e58:	mov    ecx,DWORD PTR [ebx-0x608a1708]
  403e5e:	xor    esi,DWORD PTR [edx]
  403e60:	xor    ebp,DWORD PTR [ebx]
  403e62:	add    esi,DWORD PTR [ebx]
  403e64:	add    edi,DWORD PTR [ebx]
  403e66:	test   DWORD PTR [ebp-0x75],esi
  403e69:	mov    edi,eax
  403e6b:	adc    BYTE PTR [ebp+0x55],cl
  403e6e:	je     0x403ea3
  403e70:	xor    esi,DWORD PTR [ebx]
  403e72:	xor    ebp,DWORD PTR [ebx]
  403e74:	add    ebp,DWORD PTR [ebx]
  403e76:	add    esi,DWORD PTR [ebx]
  403e78:	ror    DWORD PTR [ecx+0x68ec108b],cl
  403e7e:	enter  0xcaff,0x8b
  403e82:	icebp  
  403e83:	or     al,0xa
  403e85:	(bad)  
  403e86:	lock retf 
  403e88:	enter  0xf2c8,0x4d
  403e8c:	retf   0xee89
  403e8f:	or     BYTE PTR [ebp+0x45],dh
  403e92:	mov    edi,DWORD PTR [ebx]
  403e94:	cld    
  403e95:	bswap  eax
  403e97:	pop    edi
  403e98:	mov    esp,0x328b9fff
  403e9d:	in     al,0x8b
  403e9f:	(bad)  
  403ea0:	hlt    
  403ea1:	pop    ebx
  403ea2:	jne    0x403eac
  403ea4:	xor    eax,DWORD PTR [ebp+0x33]
  403ea7:	xor    eax,0x73b082b
  403eac:	jbe    0x403e4d
  403eae:	mov    esi,DWORD PTR [edx]
  403eb0:	clc    
  403eb1:	pop    edi
  403eb2:	mov    edx,eax
  403eb4:	mov    eax,DWORD PTR [eax]
  403eb6:	clc    
  403eb7:	mov    ecx,ecx
  403eb9:	adc    DWORD PTR [ebp+0x14],0xffffffec
  403ebd:	inc    ebp
  403ebe:	in     al,dx
  403ebf:	cmp    BYTE PTR [esp+ebx*4],al
  403ec2:	add    bh,al
  403ec4:	inc    ebp
  403ec5:	cld    
  403ec6:	cmp    BYTE PTR [ebp+0x3c7f89c],al
  403ecc:	hlt    
  403ecd:	inc    ebp
  403ece:	test   edi,eax
  403ed0:	clc    
  403ed1:	hlt    
  403ed2:	inc    ebp
  403ed3:	test   DWORD PTR [eax],edi
  403ed5:	clc    
  403ed6:	pushf  
  403ed7:	push   edi
  403ed8:	push   ebx
  403ed9:	inc    ebp
  403eda:	inc    ebp
  403edb:	fdivr  DWORD PTR [ecx]
  403edd:	xlat   BYTE PTR ds:[ebx]
  403ede:	pushf  
  403edf:	mov    ecx,DWORD PTR [ebx-0x41b21304]
  403ee5:	mov    eax,0x7070808
  403eea:	xor    edi,eax
  403eec:	mov    edi,0x32729f
  403ef1:	xor    eax,edi
  403ef3:	add    eax,DWORD PTR [ebp+0x3]
  403ef6:	(bad)  
  403ef7:	pavgb  mm7,mm1
  403efa:	test   DWORD PTR [esi-0x8],eax
  403efd:	dec    ebp
  403efe:	inc    ebp
  403eff:	mov    ebx,eax
  403f01:	cld    
  403f02:	xlat   BYTE PTR ds:[ebx]
  403f03:	enter  0xf0c7,0xf0
  403f07:	retf   0xf200
  403f0a:	add    dh,cl
  403f0c:	leave  
  403f0d:	jne    0x403f54
  403f0f:	mov    ecx,DWORD PTR [ebx-0x39ea1304]
  403f15:	enter  0xf0ce,0xc7
  403f19:	retf   0xf2cf
  403f1c:	scas   eax,DWORD PTR es:[edi]
  403f1d:	out    dx,al
  403f1e:	jmp    0x403f6d
  403f20:	mov    esi,DWORD PTR [ebx]
  403f22:	cld    
  403f23:	add    eax,edi
  403f25:	xor    eax,esi
  403f27:	jmp    0x403f6e
  403f29:	xor    ecx,DWORD PTR [ebp-0x1ffc07cd]
  403f2f:	add    edi,edi
  403f31:	ror    DWORD PTR [ecx+0x45f8f889],cl
  403f37:	dec    ebp
  403f38:	mov    esi,DWORD PTR [ebx]
  403f3a:	cld    
  403f3b:	lea    eax,[edi+ecx*1+0xff72e0]
  403f42:	mov    ecx,DWORD PTR [ebp-0xc]
  403f45:	mov    ecx,DWORD PTR [ebp-0x4]
  403f48:	xor    esi,eax
  403f4a:	(bad)  
  403f4b:	enter  0xce08,0x72
  403f4f:	stc    
  403f50:	add    BYTE PTR [edx+0x5f8b4545],ch
  403f56:	call   0x33858c5e
  403f5b:	pop    esi
  403f5c:	xor    eax,ebx
  403f5e:	sub    ecx,DWORD PTR [ebx+0x20fc818b]
  403f64:	enter  0xb900,0xc7
  403f68:	inc    ebp
  403f69:	in     al,dx
  403f6a:	xor    eax,DWORD PTR [ebp+0x4589f803]
  403f70:	clc    
  403f71:	cmp    eax,DWORD PTR [ebp-0x64]
  403f74:	cmp    edi,eax
  403f76:	pushf  
  403f77:	call   0xf92bc607
  403f7c:	mov    eax,edi
  403f7e:	loopne 0x403f64
  403f80:	inc    ebp
  403f81:	test   DWORD PTR [ebx],esi
  403f83:	clc    
  403f84:	add    eax,DWORD PTR [ebp-0x2d]
  403f87:	push   esi
  403f88:	mov    DWORD PTR [ecx-0x4],ebx
  403f8b:	push   ecx
  403f8c:	inc    ebp
  403f8d:	push   edi
  403f8e:	mov    al,dh
  403f90:	mov    BYTE PTR [edi+0x34d320b],bl
  403f96:	mov    ecx,DWORD PTR [ecx+0x45b6f8f8]
  403f9c:	xor    esi,DWORD PTR [eax]
  403f9e:	mov    DWORD PTR [eax+ecx*1-0x7403b239],ebx
  403fa5:	sbb    BYTE PTR [eax],cl
  403fa7:	jmp    0xca:0x8cf45ce
  403fae:	mov    WORD PTR [ebx-0xb007420],cs
  403fb4:	mov    ecx,DWORD PTR [ebp-0x4]
  403fb7:	xor    ecx,edx
  403fb9:	xor    ecx,DWORD PTR [ebp+0x3]
  403fbc:	mov    eax,DWORD PTR [ebx]
  403fbe:	hlt    
  403fbf:	bswap  esi
  403fc1:	rol    DWORD PTR [ecx+esi*1+0x2b32459f],0x89
  403fc9:	xor    ecx,DWORD PTR [eax]
  403fcb:	mov    DWORD PTR [ebp-0x8],eax
  403fce:	xor    ebx,DWORD PTR [ebp-0x47]
  403fd1:	call   0x403e63
  403fd6:	enter  0x4d45,0x8b
  403fda:	mov    eax,edi
  403fdc:	lock dec ebp
  403fde:	inc    ebp
  403fdf:	mov    DWORD PTR [ebx-0x39040f73],ecx
  403fe5:	inc    edi
  403fe7:	inc    ebp
  403fe8:	enter  0x918b,0xfc
  403fec:	inc    ebp
  403fed:	(bad)  
  403fee:	mov    eax,DWORD PTR [eax+edi*8-0x38cd3961]
  403ff5:	mov    DWORD PTR [esi-0x4],ebx
  403ff8:	rol    DWORD PTR [ebp-0x37],0x8b
  403ffc:	add    al,0xf4
  403ffe:	push   ebp
  403fff:	into   
  404000:	in     al,dx
  404001:	mov    BYTE PTR [ebp-0x3f],0x8b
  404005:	dec    ebp
  404006:	or     BYTE PTR [ebx],bh
  404008:	xor    BYTE PTR [esi+0x1],0x8b
  40400c:	add    ah,ah
  40400e:	add    dh,al
  404010:	in     al,dx
  404011:	(bad)  
  404012:	push   ebx
  404013:	inc    ebp
  404014:	mov    eax,edi
  404016:	adc    al,ch
  404018:	push   ss
  404019:	xchg   BYTE PTR [edi+0x7db08f8],bh
  40401f:	popa   
  404020:	iret   
  404021:	dec    ebp
  404022:	lahf   
  404023:	mov    esi,DWORD PTR [edx]
  404025:	clc    
  404026:	add    ecx,esi
  404028:	cmp    ecx,edi
  40402a:	jne    0x404014
  40402c:	add    DWORD PTR [ebp-0x6f],0x4f08648b
  404033:	or     BYTE PTR [ebx+0x48ae94d],bl
  404039:	or     eax,DWORD PTR [eax]
  40403b:	push   ebp
  40403c:	dec    ebp
  40403d:	jnp    0xd00a4d0c
  404043:	dec    ebp
  404044:	xlat   BYTE PTR ds:[ebx]
  404045:	mov    ecx,ebx
  404047:	call   0x340a961f
  40404c:	lsl    ecx,WORD PTR ds:0x7f8b2d23
  404053:	(bad)  
  404054:	cld    
  404055:	sti    
  404056:	lahf   
  404057:	(bad)  
  404058:	mov    ebp,0x8b330055
  40405d:	mov    DWORD PTR [eax],ecx
  40405f:	clc    
  404060:	iret   
  404061:	dec    ebp
  404062:	retf   
  404063:	xor    eax,ecx
  404065:	lea    eax,[eax+ecx*1+0x7204]
  40406c:	dec    ebp
  40406d:	inc    ebp
  40406e:	mov    DWORD PTR [ebx-0x39b20b24],ecx
  404074:	mov    esp,DWORD PTR [ecx+0x14]
  404077:	int    0x6
  404079:	sub    eax,DWORD PTR [ebp+0x3]
  40407c:	(bad)  
  40407d:	lock or BYTE PTR [ebp-0x7b],cl
  404081:	mov    edi,eax
  404083:	in     al,dx
  404084:	cmp    ecx,DWORD PTR [ebp-0x64]
  404087:	xor    ecx,DWORD PTR [ecx+0x453bf003]
  40408d:	jne    0x404018
  40408f:	mov    ebx,DWORD PTR [eax]
  404091:	in     al,0x45
  404093:	dec    ebp
  404094:	mov    esi,DWORD PTR [ebx]
  404096:	nop
  404097:	add    eax,DWORD PTR [eax]
  404099:	pop    edi
  40409a:	mov    esi,DWORD PTR [ebx]
  40409c:	mov    DWORD PTR [ebx-0x2c],ebx
  40409f:	ret    0x4d
  4040a2:	mov    ecx,DWORD PTR [ebx+0x18008b90]
  4040a8:	mov    ecx,DWORD PTR [ebp+0x3]
  4040ab:	mov    edi,DWORD PTR [eax+edx*4]
  4040ae:	dec    ebp
  4040af:	add    BYTE PTR [ebx-0x387cf775],cl
  4040b5:	jo     0x40407a
  4040b7:	push   esi
  4040b8:	inc    ebp
  4040b9:	jne    0x404046
  4040bb:	mov    ecx,DWORD PTR [eax]
  4040bd:	push   edi
  4040be:	(bad)  
  4040bf:	pop    ecx
  4040c0:	ret    
  4040c1:	push   ecx
  4040c2:	inc    ebp
  4040c3:	xor    ecx,DWORD PTR [ebx+0x40720cbb]
  4040c9:	add    BYTE PTR [ebx+0x45d10ccb],al
  4040cf:	jnp    0x406d4d02
  4040d5:	jg     0x404062
  4040d7:	jmp    0x54:0xde85700c
  4040de:	inc    ebp
  4040df:	mov    esi,DWORD PTR [eax+ecx*1-0x75]
  4040e3:	push   ebp
  4040e4:	cmp    BYTE PTR [ebx],dh
  4040e6:	dec    ebp
  4040e7:	xor    ecx,DWORD PTR [ebx-0x8fcabfd]
  4040ed:	cmp    esp,DWORD PTR [ebx]
  4040ef:	jne    0x40407c
  4040f1:	or     DWORD PTR [ecx+edx*4],0xee036440
  4040f8:	jmp    0x40410f
  4040fa:	mov    ebp,ecx
  4040fc:	push   esp
  4040fd:	add    al,0x45
  4040ff:	add    BYTE PTR [ebx-0x38ccf7b3],cl
  404105:	add    eax,ebx
  404107:	cmp    eax,DWORD PTR [ebp+0xf]
  40410a:	mov    esp,DWORD PTR [eax+ecx*1-0x3c743900]
  404111:	sbb    BYTE PTR [ebp+0x45],al
  404114:	mov    ecx,DWORD PTR [ecx+0x4d4d1808]
  40411a:	xor    ecx,DWORD PTR [ebx-0x277676fd]
  404120:	mov    DWORD PTR [ebp+0x14],eax
  404123:	cmp    BYTE PTR [ebp-0x64],al
  404126:	cmp    bh,BYTE PTR [edx-0x7387a64]
  40412c:	adc    al,0x55
  40412e:	test   DWORD PTR [ebx+0x454518f8],ecx
  404134:	cmp    al,0x8b
  404136:	pushf  
  404137:	sbb    BYTE PTR [ebx+0x4d01f080],cl
  40413d:	add    BYTE PTR [ebx],dh
  40413f:	add    BYTE PTR [ebx],al
  404141:	dec    ebp
  404142:	jnp    0x898d5a09
  404148:	mov    eax,DWORD PTR [ecx]
  40414a:	rol    BYTE PTR [eax],1
  40414c:	iret   
  40414d:	or     DWORD PTR [eax+ecx*2+0xc32899f],ecx
  404154:	cmp    eax,DWORD PTR [ebp+0xf]
  404157:	xor    ebp,DWORD PTR [ebx+eax*1-0xb747700]
  40415e:	or     BYTE PTR [ebp-0x39],al
  404161:	xor    eax,ebx
  404163:	add    eax,DWORD PTR [ebp-0x77]
  404166:	mov    edx,DWORD PTR [eax+ebx*1]
  404169:	inc    ebp
  40416a:	inc    ebp
  40416b:	mov    ecx,DWORD PTR [ecx+0x75e8f450]
  404171:	mov    DWORD PTR [ebx+0x4d45dcd0],ecx
  404177:	mov    ebp,eax
  404179:	cmp    cl,dh
  40417b:	dec    ebp
  40417c:	dec    DWORD PTR [eax+0x45]
  40417f:	inc    ecx
  404180:	(bad)  
  404181:	mov    esp,eax
  404183:	or     al,0x85
  404185:	sbb    al,bh
  404187:	inc    eax
  404188:	inc    ebp
  404189:	mov    esi,DWORD PTR [ebx]
  40418b:	or     al,0x3
  40418d:	dec    ecx
  40418e:	push   eax
  40418f:	dec    eax
  404190:	inc    ebp
  404191:	rcl    BYTE PTR [eax-0x38],1
  404194:	push   eax
  404195:	inc    ebp
  404196:	dec    DWORD PTR [ebx-0x3e07c775]
  40419c:	rol    BYTE PTR [ebx],0x4e
  40419f:	inc    eax
  4041a0:	inc    ebp
  4041a1:	mov    DWORD PTR [ebx],esi
  4041a3:	sbb    BYTE PTR [ebx],al
  4041a5:	inc    ebp
  4041a6:	push   eax
  4041a7:	xor    esi,DWORD PTR [ebp+0x3]
  4041aa:	lea    ecx,[ecx+0x45e814b8]
  4041b0:	cmc    
  4041b1:	xor    edi,edi
  4041b3:	add    eax,DWORD PTR [ebp-0x77]
  4041b6:	mov    DWORD PTR [eax+eiz*8],edx
  4041b9:	inc    ebp
  4041ba:	inc    ebp
  4041bb:	mov    ecx,DWORD PTR [ebx-0x3e38232c]
  4041c1:	ret    
  4041c2:	inc    ebp
  4041c3:	add    DWORD PTR [ebx+0x4dc7f855],ecx
  4041c9:	adc    al,0x8b
  4041cb:	test   DWORD PTR [eax],edx
  4041cd:	clc    
  4041ce:	inc    ecx
  4041cf:	inc    ebp
  4041d0:	mov    edi,DWORD PTR ds:0xc7c89ce0
  4041d6:	push   ss
  4041d7:	adc    al,0x45
  4041d9:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4041df:	mov    eax,DWORD PTR [ebx]
  4041e1:	sbb    BYTE PTR [eax],cl
  4041e3:	(bad)  
  4041e4:	dec    ebp
  4041e5:	ret    
  4041e6:	sub    ebp,DWORD PTR [edi+0x8028be9]
  4041ec:	add    BYTE PTR [ebp+0xc],dl
  4041ef:	xor    esi,DWORD PTR [ebp-0x73]
  4041f2:	lea    edx,[ecx]
  4041f4:	lods   al,BYTE PTR ds:[esi]
  4041f5:	jb     0x4041df
  4041f7:	add    ch,dh
  4041f9:	sar    edi,0x83
  4041fc:	cmp    BYTE PTR [ebx],al
  4041fe:	pushf  
  4041ff:	add    BYTE PTR [ecx+0x4533cc45],cl
  404205:	add    edi,DWORD PTR [ebx]
  404207:	mov    DWORD PTR [esp+edx*1+0x3c445c7],ebx
  40420e:	test   esp,ebx
  404210:	clc    
  404211:	inc    ebp
  404212:	inc    ebp
  404213:	(bad)  
  404214:	cmp    eax,0x8d759cf4
  404219:	mov    ecx,esp
  40421b:	or     al,0x4d
  40421d:	bound  ecx,QWORD PTR [ebp+0x4d89c8ff]
  404223:	clc    
  404224:	lea    eax,[ebp-0x3c]
  404227:	xor    BYTE PTR [ebp-0x64],cl
  40422a:	lea    ecx,[ebx-0x38b21f40]
  404230:	mov    eax,ebx
  404232:	or     BYTE PTR [ebp-0x17344731],cl
  404238:	dec    ebp
  404239:	imul   ecx
  40423b:	inc    DWORD PTR [ecx]
  40423d:	inc    ebp
  40423e:	add    BYTE PTR [ebp-0x74638bc6],al
  404244:	pavgb  mm7,mm6
  404247:	mov    DWORD PTR [eax],0xf0ff8bc3
  40424d:	clc    
  40424e:	iret   
  40424f:	inc    ebp
  404250:	lock push eax
  404252:	retf   
  404253:	fmul   QWORD PTR [ebp-0x1]
  404256:	mov    ecx,DWORD PTR [ebx+0x45f7f4e0]
  40425c:	test   BYTE PTR [ebx+0x4d32e09f],cl
  404262:	mov    DWORD PTR [ebx],ebp
  404264:	loopne 0x4041ef
  404266:	inc    ebp
  404267:	loopne 0x4041f4
  404269:	inc    ebp
  40426a:	loopne 0x4041f7
  40426c:	xbegin 0x4088335
  404272:	adc    ecx,DWORD PTR [eax*2+0x33b334d]
  404279:	jb     0x4042cb
  40427b:	mov    ecx,DWORD PTR [eax+edi*8]
  40427e:	inc    ebp
  40427f:	inc    eax
  404280:	push   eax
  404281:	mov    ebx,DWORD PTR [edi-0x8]
  404284:	inc    DWORD PTR [ecx-0x75]
  404287:	mov    ebp,esp
  404289:	loopne 0x40428b
  40428b:	rol    edi,0xee
  40428e:	test   BYTE PTR [eax],al
  404290:	dec    ebx
  404291:	push   0x32
  404293:	dec    DWORD PTR [ebx-0x30baf70c]
  404299:	push   eax
  40429a:	mov    dh,0x94
  40429c:	add    edi,edi
  40429e:	cmp    edi,DWORD PTR [eax-0x7877af1]
  4042a4:	add    BYTE PTR [ebp-0x75],al
  4042a7:	(bad)  
  4042a8:	call   0xc7c54375
  4042ad:	clc    
  4042ae:	test   BYTE PTR [ebp+0x4b],al
  4042b1:	cmp    dh,BYTE PTR [edx]
  4042b3:	pushf  
  4042b4:	mov    eax,edi
  4042b6:	or     al,al
  4042b8:	iret   
  4042b9:	test   DWORD PTR [esi+0x3b4d03f8],esi
  4042bf:	mov    DWORD PTR [edi],ecx
  4042c1:	in     al,dx
  4042c2:	pop    eax
  4042c3:	dec    ebp
  4042c4:	add    BYTE PTR [ecx+0x4df8e88b],cl
  4042ca:	add    BYTE PTR [ecx+0x4d84f8c7],cl
  4042d0:	dec    ebx
  4042d1:	mov    DWORD PTR [edx],esi
  4042d3:	in     al,0x8b
  4042d5:	dec    ebp
  4042d6:	or     BYTE PTR [ebx],dh
  4042d8:	iret   
  4042d9:	add    esi,DWORD PTR [esi+0x3be00389]
  4042df:	test   DWORD PTR [edi],0x3d3800
  4042e5:	test   DWORD PTR [ebx+0x84e4f8],ecx
  4042eb:	add    edi,eax
  4042ed:	add    BYTE PTR [ebp+ecx*2-0x74cdccb5],al
  4042f4:	mov    eax,DWORD PTR [ebx]
  4042f6:	or     BYTE PTR [ecx+0x45b614cf],cl
  4042fc:	add    esi,DWORD PTR [ebx]
  4042fe:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  404304:	add    BYTE PTR [eax],al
  404306:	mov    eax,DWORD PTR [ebp-0x18]
  404309:	mov    eax,DWORD PTR [eax]
  40430b:	lock (bad) 
  40430d:	dec    ebp
  40430e:	test   BYTE PTR [ebx],dh
  404310:	dec    ebx
  404311:	add    esi,DWORD PTR [edx]
  404313:	cmp    ecx,DWORD PTR [ebx+0x98bec75]
  404319:	or     bh,cl
  40431b:	(bad)  
  40431c:	mov    ebx,es
  40431e:	dec    ebx
  40431f:	push   0x32
  404321:	lea    esi,[edx]
  404323:	lods   al,BYTE PTR ds:[esi]
  404324:	mov    ebp,eax
  404326:	clc    
  404327:	cli    
  404328:	or     edi,edi
  40432a:	iret   
  40432b:	inc    ebp
  40432c:	mov    WORD PTR [ebx-0x75cdccb5],cs
  404332:	or     al,BYTE PTR ds:0xec728b
  404338:	or     DWORD PTR [ebp-0x31],ecx
  40433b:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb1]
  404342:	cmp    al,cl
  404344:	je     0x40451e
  40434a:	mov    eax,DWORD PTR [ebp-0x8]
  40434d:	mov    eax,DWORD PTR [eax]
  40434f:	xor    eax,edi
  404351:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  404358:	mov    ecx,DWORD PTR [ebp-0x18]
  40435b:	xor    ecx,DWORD PTR [ecx]
  40435d:	bswap  edi
  40435f:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb5],0x32
  404367:	add    DWORD PTR [ebx+0x945e400],ecx
  40436d:	mov    ecx,edi
  40436f:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  404376:	or     al,BYTE PTR [eax]
  404378:	mov    ecx,DWORD PTR [ebp-0x18]
  40437b:	xor    ecx,DWORD PTR [ecx]
  40437d:	bswap  edi
  40437f:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb1],0x3a
  404387:	add    DWORD PTR [edi],ecx
  404389:	add    BYTE PTR [eax-0x7474ffbb],dl
  40438f:	xor    esp,esp
  404391:	mov    al,BYTE PTR [eax]
  404393:	add    eax,0x8472c7
  404398:	dec    ebx
  404399:	dec    ebp
  40439a:	xor    dh,BYTE PTR [ebx]
  40439c:	mov    ecx,DWORD PTR [edi]
  40439e:	clc    
  40439f:	ror    BYTE PTR [ecx],0xcb
  4043a2:	iret   
  4043a3:	ror    DWORD PTR [esp+eax*4+0x32014b],0x32
  4043ab:	inc    ebp
  4043ac:	mov    ecx,DWORD PTR [ebx-0x75f6cc14]
  4043b2:	iret   
  4043b3:	add    eax,0x4b728c
  4043b8:	xor    cl,BYTE PTR [ebp+0xa]
  4043bb:	mov    ecx,DWORD PTR [ebx+0x98af833]
  4043c1:	or     eax,0x8c72cf
  4043c6:	dec    edi
  4043c7:	shl    DWORD PTR [edx],0x4d
  4043ca:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  4043d0:	in     al,0xd
  4043d2:	add    BYTE PTR [edx-0x39],dh
  4043d5:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  4043dc:	mov    esi,DWORD PTR [ebx]
  4043de:	in     al,dx
  4043df:	mov    cl,BYTE PTR [ecx]
  4043e1:	or     eax,0x8c72cf
  4043e6:	dec    ebx
  4043e7:	enter  0x8532,0x32
  4043eb:	add    BYTE PTR [ebx+0x945e800],cl
  4043f1:	mov    ecx,edi
  4043f3:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  4043fa:	or     al,BYTE PTR [eax]
  4043fc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4043ff:	mov    ecx,DWORD PTR [ecx]
  404401:	xor    ecx,edi
  404403:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724f]
  40440a:	cmp    al,cl
  40440c:	jne    0x40445b
  40440e:	lea    ecx,[ebx-0x7517cc54]
  404414:	cli    
  404415:	or     eax,0x4d72ff
  40441a:	cmp    eax,ecx
  40441c:	je     0x40446b
  40441e:	mov    ecx,DWORD PTR [ebx-0x7538ccf8]
  404424:	ret    
  404425:	or     eax,0x8b7245
  40442a:	lock enter 0x85c7,0x84
  40442f:	add    BYTE PTR [edi+0x33453200],bl
  404435:	mov    ecx,DWORD PTR [ebx+0x558a0833]
  40443b:	add    eax,0x37233
  404440:	cmp    ecx,DWORD PTR [ebp+0xf]
  404443:	mov    esi,edi
  404445:	xor    edi,edi
  404447:	mov    cl,BYTE PTR [ebx+0x4d72080d]
  40444d:	add    BYTE PTR [ebx],dh
  40444f:	rol    DWORD PTR [ebx],0x4d
  404452:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  404458:	lock or eax,0x33724d
  40445e:	(bad)  
  40445f:	ror    DWORD PTR [eax],0x4d
  404462:	jb     0x4043ef
  404464:	add    BYTE PTR [ebx],dh
  404466:	ja     0x4043f2
  404468:	sbb    BYTE PTR ds:0x8d7275,cl
  40446e:	xchg   esp,eax
  40446f:	enter  0x50e8,0xf3
  404473:	inc    ebp
  404474:	dec    DWORD PTR [ebx-0x7574ccbb]
  40447a:	loopne 0x404481
  40447c:	(bad)  
  40447d:	jb     0x404442
  40447f:	add    cl,al
  404481:	dec    ebp
  404482:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  404488:	add    ecx,DWORD PTR ds:0x187250
  40448e:	inc    ebp
  40448f:	rcl    DWORD PTR [eax+0x4d],0x4f
  404493:	mov    edi,edi
  404495:	xor    ecx,DWORD PTR [ebx-0x3ff20b76]
  40449b:	jb     0x404426
  40449d:	add    BYTE PTR [ecx+eax*8],dl
  4044a0:	jne    0x4044ef
  4044a2:	dec    DWORD PTR [ebx-0x75baccec]
  4044a8:	add    ecx,DWORD PTR ds:0xe872d8
  4044ae:	repnz enter 0x10ff,0x45
  4044b3:	inc    ebp
  4044b4:	mov    edx,DWORD PTR [eax-0x20]
  4044b7:	mov    ds:0x8bc3ffc7,eax
  4044bc:	shl    DWORD PTR [ecx+edx*1+0x750a00c1],0x45
  4044c4:	mov    esi,DWORD PTR [ebx]
  4044c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044c7:	add    eax,DWORD PTR [ebp-0x77]
  4044ca:	push   eax
  4044cb:	adc    al,0x15
  4044cd:	inc    ebp
  4044ce:	push   DWORD PTR [ebx]
  4044d0:	mov    ecx,DWORD PTR [ebp+0x724d30d4]
  4044d6:	add    DWORD PTR [eax],eax
  4044d8:	mov    eax,edi
  4044da:	test   al,0x4d
  4044dc:	inc    ebp
  4044dd:	mov    ecx,DWORD PTR [ecx+0x45cf1814]
  4044e3:	retf   
  4044e4:	mov    edx,ecx
  4044e6:	sbb    BYTE PTR [edi+eax*8-0x50003c03],al
  4044ed:	inc    ebp
  4044ee:	mov    ecx,DWORD PTR [ebx-0x38aaebf8]
  4044f4:	xor    eax,ebx
  4044f6:	(bad)  
  4044f7:	enter  0x1111,0x72
  4044fb:	inc    ebp
  4044fc:	add    BYTE PTR [ebx-0x387de73f],cl
  404502:	cld    
  404503:	test   bh,bh
  404505:	lahf   
  404506:	jne    0x40453a
  404508:	mov    ebp,ebx
  40450a:	fsubr  DWORD PTR [edx+0x6]
  40450d:	dec    DWORD PTR [edx]
  40450f:	hlt    
  404510:	xor    eax,0x7f502d45
  404515:	sbb    ch,ah
  404517:	call   DWORD PTR [edx-0x75]
  40451a:	pop    esi
  40451b:	or     cl,cl
  40451d:	dec    ebp
  40451e:	adc    al,0x33
  404520:	push   ebp
  404521:	add    ebp,esp
  404523:	cmp    esp,esp
  404525:	je     0x4044aa
  404527:	mov    esp,DWORD PTR [eax]
  404529:	or     BYTE PTR [eax],bh
  40452b:	(bad)  
  40452c:	pushf  
  40452d:	ret    
  40452e:	mov    DWORD PTR [edx+0x24],ebp
  404531:	lea    ecx,[ebp+0x44e80394]
  404537:	clc    
  404538:	or     al,0xff
  40453a:	push   esp
  40453b:	inc    ebp
  40453c:	or     BYTE PTR [ebx+0x450818be],al
  404542:	pop    es
  404543:	call   esi
  404545:	test   al,0xbf
  404547:	jne    0x4045bb
  404549:	mov    eax,DWORD PTR [eax]
  40454b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40454c:	xlat   BYTE PTR ds:[ebx]
  40454d:	inc    ebp
  40454e:	push   esp
  40454f:	push   eax
  404550:	or     al,0xde
  404552:	push   ebp
  404553:	dec    DWORD PTR [ecx-0x74f7db75]
  404559:	dec    ebp
  40455a:	adc    BYTE PTR [ebx],dh
  40455c:	rol    DWORD PTR [ebx],1
  40455e:	sbb    BYTE PTR [ebx],bh
  404560:	dec    esp
  404561:	je     0x404577
  404563:	push   0x54
  404565:	call   DWORD PTR [eax]
  404567:	test   al,0xce
  404569:	inc    ebp
  40456a:	iret   
  40456b:	add    ebp,DWORD PTR [edi+0x24e889d8]
  404571:	clc    
  404572:	jmp    0x854776
  404577:	mov    edx,eax
  404579:	test   al,0x1f
  40457b:	or     BYTE PTR [ebp+eax*2+0x10],al
  40457f:	add    ecx,DWORD PTR [eax+ebx*1+0x14]
  404583:	inc    ebp
  404584:	(bad)  
  404585:	mov    eax,DWORD PTR [eax+esi*8+0x33324d9f]
  40458c:	mov    DWORD PTR [ebx],eax
  40458e:	and    al,0xf
  404590:	push   0xf84d85c1
  404595:	mov    edi,ebp
  404597:	rol    BYTE PTR [eax],1
  404599:	iret   
  40459a:	or     DWORD PTR [edx+edi*1+0x75329c9f],0x850f683b
  4045a5:	push   edi
  4045a6:	clc    
  4045a7:	(bad)  
  4045a8:	jmp    0x404535
  4045aa:	add    BYTE PTR [eax],dl
  4045ac:	mov    eax,0xf8898545
  4045b1:	jmp    0x404583
  4045b3:	add    DWORD PTR [ebp+0x640091],0x206544be
  4045bd:	pop    edi
  4045be:	inc    esp
  4045bf:	pop    ebx
  4045c0:	sbb    dl,al
  4045c2:	inc    ebp
  4045c3:	add    BYTE PTR [ecx-0x747cdb75],cl
  4045c9:	clc    
  4045ca:	and    al,0xec
  4045cc:	mov    DWORD PTR [ecx-0x7747adc],edi
  4045d2:	and    al,0x4c
  4045d4:	mov    DWORD PTR [eax],ecx
  4045d6:	and    al,0x41
  4045d8:	mov    ecx,DWORD PTR [ecx-0x7474dbdc]
  4045de:	and    al,0x24
  4045e0:	xor    edx,DWORD PTR [esi+0x3]
  4045e3:	pop    ecx
  4045e4:	mov    DWORD PTR [ecx-0x75],edx
  4045e7:	xor    esp,DWORD PTR [edi+edx*2]
  4045ea:	mov    ebx,DWORD PTR [edi+0x3003294]
  4045f0:	mov    ecx,DWORD PTR [ecx-0x74dbdb75]
  4045f6:	mov    ecx,DWORD PTR [esp+edx*4]
  4045f9:	push   esp
  4045fa:	add    BYTE PTR [eax],ah
  4045fc:	mov    edx,DWORD PTR [ebp+0x3]
  4045ff:	cmp    edi,DWORD PTR [esi*2+0x24188b4c]
  404606:	mov    DWORD PTR [ebx+0x33002401],ecx
  40460c:	dec    ecx
  40460d:	add    ebp,DWORD PTR [edx+0xf]
  404610:	push   0x4c30ca
  404615:	adc    BYTE PTR [eax+0x1f],dh
  404618:	push   0x0
  40461a:	(bad)  
  40461b:	cmp    ecx,DWORD PTR [ecx-0x7474db8b]
  404621:	and    al,0x24
  404623:	mov    esi,DWORD PTR [ebx]
  404625:	and    al,0x3
  404627:	xor    ecx,DWORD PTR [ecx-0x74f7db73]
  40462d:	jb     0x404653
  40462f:	add    bh,bh
  404631:	inc    esp
  404632:	and    al,0x14
  404634:	lea    edi,[edx]
  404636:	and    al,0x9c
  404638:	push   eax
  404639:	jmp    0x544682
  40463e:	(bad)  
  40463f:	cli    
  404640:	and    al,0x85
  404642:	(bad)  
  404643:	clc    
  404644:	and    al,0xa
  404646:	call   0xffdd3f88
  40464b:	jmp    0x544694
  404650:	dec    esp
  404651:	ds or  al,0x9c
  404654:	(bad)  
  404655:	cmp    eax,edi
  404657:	bswap  eax
  404659:	mov    bh,0x4b
  40465b:	add    BYTE PTR [ebx+ecx*4+0x20],al
  40465f:	and    al,0x4c
  404661:	mov    DWORD PTR [esp],ebx
  404664:	(bad)  
  404665:	mov    eax,edi
  404667:	or     BYTE PTR [edi-0x76e3dbbc],ch
  40466d:	inc    esp
  40466e:	jmp    0x404684
  404670:	add    DWORD PTR [ebp+edi*1+0x20],0x1075449c
  404678:	push   0xf8148544
  40467d:	inc    esp
  40467e:	sbb    BYTE PTR [edx+edi*8],dl
  404681:	dec    esp
  404682:	test   DWORD PTR [eax+edi*8],ebx
  404685:	mov    BYTE PTR [edi],0xc7
  404688:	aas    
  404689:	add    DWORD PTR [esp+eax*2-0x7f7ee715],ebx
  404690:	aas    
  404691:	add    DWORD PTR [eax+eax*1+0x44500875],ebx
  404698:	jne    0x4046b2
  40469a:	inc    DWORD PTR [eax+0xfa01f8]
  4046a0:	clc    
  4046a1:	add    bh,bh
  4046a3:	inc    ecx
  4046a4:	jne    0x404631
  4046a6:	call   0xffcc44cf
  4046ab:	fadd   DWORD PTR [eax+eax*1+0xc]
  4046af:	mov    eax,DWORD PTR [esp+edx*1+0xc]
  4046b3:	add    al,0x5e
  4046b5:	add    ch,ah
  4046b7:	add    dl,al
  4046b9:	inc    DWORD PTR [eax]
  4046bb:	push   eax
  4046bc:	and    al,0x0
  4046be:	rol    DWORD PTR ss:[ebp-0x63f3f8bc],1
  4046c5:	inc    esp
  4046c6:	adc    DWORD PTR [esp+ebx*4],0x9c768c6
  4046cd:	inc    esp
  4046ce:	adc    BYTE PTR [eax+ecx*1],ah
  4046d1:	inc    esp
  4046d2:	call   FWORD PTR [esp]
  4046d5:	je     0x4046fb
  4046d7:	sbb    BYTE PTR [ebx-0x74d7f3bc],cl
  4046dd:	lea    ecx,[ebx+0x3b503324]
  4046e3:	je     0x404670
  4046e5:	sub    al,0x8b
  4046e7:	je     0x40471c
  4046e9:	and    al,0xf
  4046eb:	mov    bl,0x1
  4046ed:	(bad)  
  4046ee:	clc    
  4046ef:	and    al,0xeb
  4046f1:	and    al,0x75
  4046f3:	add    eax,DWORD PTR [ebp-0x74db818c]
  4046f9:	and    al,0x5d
  4046fb:	add    eax,DWORD PTR [edx+edi*8+0x3c]
  4046ff:	cmp    al,0x85
  404701:	or     al,0x89
  404703:	pop    edi
  404704:	push   ebp
  404705:	mov    ebp,esp
  404707:	sub    esp,0x78
  40470a:	xor    eax,DWORD PTR ds:0x412370
  404710:	mov    eax,ds:0x40d5d0
  404715:	mov    DWORD PTR [ebp-0x10],eax
  404718:	mov    eax,ds:0x40d6dc
  40471d:	or     DWORD PTR ds:0x417e59,0x49bb
  404727:	mov    DWORD PTR [ebp-0x30],eax
  40472a:	mov    DWORD PTR [ebp-0xc],0xf89c8538
  404731:	mov    eax,ds:0x412368
  404736:	and    DWORD PTR ds:0x41abde,eax
  40473c:	mov    DWORD PTR [ebp-0x14],0xf89c853b
  404743:	mov    eax,DWORD PTR [ebp-0xc]
  404746:	xor    DWORD PTR ds:0x4245be,0x412378
  404750:	push   ebx
  404751:	push   esi
  404752:	and    DWORD PTR ds:0x417e55,0x7bf9
  40475c:	push   edi
  40475d:	mov    esi,0x7510859
  404762:	xor    eax,esi
  404764:	add    DWORD PTR ds:0x4245c6,0x4e22
  40476e:	mov    edi,0x32729f
  404773:	or     DWORD PTR ds:0x4245c6,0x5629
  40477d:	add    eax,edi
  40477f:	mov    DWORD PTR [ebp-0x20],eax
  404782:	movzx  eax,WORD PTR ds:0x412370
  404789:	and    DWORD PTR ds:0x415111,eax
  40478f:	mov    DWORD PTR [ebp-0x28],0xf89cb538
  404796:	dec    eax
  404797:	mov    DWORD PTR [ebp-0x34],0xf89f0538
  40479e:	mov    DWORD PTR [ebp-0x2c],0xf89c85f8
  4047a5:	add    DWORD PTR ds:0x41abd2,edx
  4047ab:	jmp    0x404924
  4047b0:	xlat   BYTE PTR ds:[ebx]
  4047b1:	mov    dl,0x2
  4047b3:	and    edi,DWORD PTR [ebx-0x5fa5289d]
  4047b9:	mov    al,ds:0x156087ea
  4047be:	mov    bh,0x76
  4047c0:	jle    0x404840
  4047c2:	jle    0x404842
  4047c4:	fidivr DWORD PTR [edi+0x7e]
  4047c7:	jle    0x404797
  4047c9:	(bad)  
  4047ca:	cmp    eax,0xcfdb31c5
  4047cf:	fld    st(2)
  4047d1:	ja     0x404847
  4047d3:	or     eax,DWORD PTR [eax]
  4047d5:	fimul  WORD PTR [eax]
  4047d7:	(bad)  
  4047d9:	bswap  eax
  4047db:	adc    BYTE PTR [edi],dh
  4047dd:	sbb    BYTE PTR [edi],bl
  4047df:	mov    cl,0x50
  4047e1:	or     BYTE PTR [edi-0x4210f123],ah
  4047e7:	rol    esi,cl
  4047e9:	or     ecx,DWORD PTR [esi-0x551b41ea]
  4047ef:	dec    ecx
  4047f0:	add    eax,0x1fb6dead
  4047f5:	push   esi
  4047f6:	in     al,dx
  4047f7:	outs   dx,DWORD PTR ds:[esi]
  4047f8:	add    ebx,DWORD PTR [ecx]
  4047fa:	pushf  
  4047fb:	jo     0x4047c3
  4047fd:	dec    eax
  4047fe:	mov    ds:0x34d92d5b,al
  404803:	cmp    al,0xad
  404805:	xor    BYTE PTR [ebx+0x35],0xa3
  404809:	jbe    0x40483f
  40480b:	fisttp DWORD PTR [ecx+0x3198c6f1]
  404811:	jecxz  0x40484b
  404813:	and    ecx,0x4f
  404816:	(bad)  
  404817:	xchg   esi,eax
  404818:	dec    ecx
  404819:	inc    DWORD PTR [edi-0x2d5e8870]
  40481f:	mov    ebp,0x4526ed4d
  404824:	sub    edi,DWORD PTR [edx-0x4361911e]
  40482a:	jae    0x404845
  40482c:	retf   
  40482d:	call   0xd4ca:0x5ee3c429
  404834:	mov    al,0xf8
  404836:	loop   0x4047d2
  404838:	cmp    edi,ecx
  40483a:	fs push ebp
  40483c:	(bad)  
  40483d:	sub    ch,cl
  40483f:	or     dl,cl
  404841:	sbb    DWORD PTR [ecx-0x6a],ebx
  404844:	and    eax,0x70696f0b
  404849:	add    BYTE PTR [ecx],bh
  40484b:	fisttp QWORD PTR [esi+0x7f652044]
  404851:	pop    DWORD PTR ds:[edx]
  404854:	shl    DWORD PTR [esi-0x22baacfd],cl
  40485a:	mov    BYTE PTR [ecx],0xdb
  40485d:	pop    esp
  40485e:	rcl    DWORD PTR [ecx],1
  404860:	jns    0x404800
  404862:	mov    dh,0x43
  404864:	daa    
  404865:	add    eax,0x12216723
  40486a:	fstp   TBYTE PTR [esi]
  40486c:	dec    edi
  40486d:	loopne 0x40483c
  40486f:	xchg   esp,eax
  404870:	adc    BYTE PTR [esi],bl
  404872:	or     al,0xfa
  404874:	jb     0x4048c0
  404876:	push   ecx
  404877:	lds    esp,FWORD PTR [ecx+0x4b]
  40487a:	cs sub edx,esp
  40487d:	sbb    bh,BYTE PTR [edi]
  40487f:	sub    ecx,0x40
  404882:	push   edi
  404883:	repz push cs
  404885:	addr16 mov ds:0x2f11,eax
  404889:	and    bh,BYTE PTR [bx]
  40488c:	test   eax,0x39783e59
  404891:	inc    esi
  404892:	xchg   edi,eax
  404893:	push   0xfffffff9
  404895:	cs (bad) 
  404897:	aas    
  404898:	sub    bh,cl
  40489a:	das    
  40489b:	imul   ebp,DWORD PTR [ecx],0x54
  40489e:	inc    esp
  4048a0:	mov    ?,WORD PTR [ecx]
  4048a2:	(bad)  
  4048a3:	aam    0x42
  4048a5:	sbb    al,0x0
  4048a7:	fidiv  DWORD PTR [ebx+0x49c9424d]
  4048ad:	xor    edx,DWORD PTR [ebp-0x7b]
  4048b0:	outs   dx,BYTE PTR ds:[esi]
  4048b1:	xchg   ecx,eax
  4048b2:	pop    esp
  4048b3:	shl    DWORD PTR [ebx-0x47],0xa9
  4048b7:	outs   dx,DWORD PTR ds:[esi]
  4048b8:	nop
  4048b9:	and    al,ch
  4048bb:	pop    edx
  4048bc:	fsubrp st(6),st
  4048be:	fimul  DWORD PTR [ecx]
  4048c0:	(bad)  
  4048c1:	fdivp  st(4),st
  4048c3:	jo     0x40485d
  4048c5:	pop    eax
  4048c6:	adc    eax,0xfcb41af4
  4048cb:	aas    
  4048cc:	out    dx,eax
  4048cd:	xor    BYTE PTR [ebp-0x17ff88cd],ch
  4048d3:	dec    ebx
  4048d4:	sbb    al,0xf5
  4048d6:	mov    BYTE PTR [ecx],al
  4048d8:	pop    ebp
  4048d9:	out    0x55,al
  4048db:	and    cl,BYTE PTR [edx-0x6cb60408]
  4048e1:	push   es
  4048e2:	sub    BYTE PTR [esi+0x752a8670],ch
  4048e8:	jle    0x4048d5
  4048ea:	jne    0x4048ee
  4048ec:	je     0x404903
  4048ee:	ror    ebp,0xda
  4048f1:	lods   al,BYTE PTR ds:[esi]
  4048f2:	(bad)  
  4048f3:	hlt    
  4048f4:	inc    esi
  4048f5:	jae    0x4048c0
  4048f7:	add    bh,BYTE PTR [ebx+0x381f3b3c]
  4048fd:	mov    ds:0x8ae945f2,eax
  404902:	out    dx,eax
  404903:	stos   BYTE PTR es:[edi],al
  404904:	mov    edx,0x8d4de63f
  404909:	xchg   BYTE PTR [ecx+0x54b99631],cl
  40490f:	aas    
  404910:	nop
  404911:	mov    ah,0x1a
  404913:	inc    edi
  404915:	cwde   
  404916:	rcr    BYTE PTR [esi+0x5e001be8],0xcf
  40491d:	dec    esp
  40491e:	call   0xb5124d6d
  404923:	inc    eax
  404924:	mov    DWORD PTR [ebp-0x24],0xf89c85d8
  40492b:	mov    eax,DWORD PTR [ebp-0xc]
  40492e:	sbb    DWORD PTR ds:0x417e59,0x417e51
  404938:	xor    eax,esi
  40493a:	sub    DWORD PTR ds:0x41abde,0x4245ba
  404944:	jmp    0x404abd
  404949:	fst    QWORD PTR [ebx]
  40494b:	cdq    
  40494c:	loope  0x4049a7
  40494e:	jns    0x4049a5
  404950:	and    eax,esi
  404952:	scas   al,BYTE PTR es:[edi]
  404953:	pop    ss
  404954:	addr16 in al,dx
  404956:	imul   edi,DWORD PTR [eax+0x24],0x7e7e7fda
  40495d:	fidivr DWORD PTR [edi+0x7e]
  404960:	jle    0x404972
  404962:	out    dx,al
  404963:	xor    BYTE PTR ds:0xd9881854,cl
  404969:	(bad)  
  40496b:	std    
  40496c:	bound  ebp,QWORD PTR ds:0x4676761c
  404972:	loop   0x4049b2
  404974:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404975:	inc    eax
  404976:	adc    ch,BYTE PTR [edx+0xf]
  404979:	fxch   st(6)
  40497b:	xor    eax,0x887f06c3
  404980:	push   edx
  404981:	push   ebx
  404982:	pop    ds
  404983:	inc    edi
  404984:	retf   
  404985:	and    al,0x47
  404987:	sti    
  404988:	(bad)  
  404989:	inc    DWORD PTR [eax-0x5b]
  40498c:	jl     0x4049e8
  40498e:	jo     0x40498e
  404990:	call   0xe79e559e
  404995:	stos   BYTE PTR es:[edi],al
  404996:	hlt    
  404997:	outs   dx,BYTE PTR ds:[esi]
  404998:	scas   eax,DWORD PTR es:[edi]
  404999:	loope  0x40499b
  40499b:	sub    al,0xa1
  40499d:	and    eax,0x71e224aa
  4049a2:	fnsave [bx-0x7b]
  4049a6:	inc    edx
  4049a7:	aad    0x55
  4049a9:	add    DWORD PTR [eax],esi
  4049ab:	adc    BYTE PTR [edi],bl
  4049ad:	fdivr  QWORD PTR [ecx-0x76]
  4049b0:	mov    edi,0xf90354e9
  4049b5:	enter  0x7d7e,0x10
  4049b9:	inc    ecx
  4049ba:	ins    BYTE PTR es:[edi],dx
  4049bb:	lods   eax,DWORD PTR ds:[esi]
  4049bc:	sti    
  4049bd:	push   fs
  4049bf:	pop    edx
  4049c0:	retf   0x9413
  4049c3:	xchg   esp,eax
  4049c4:	enter  0x99,0xc
  4049c8:	jecxz  0x404968
  4049ca:	rcl    ah,cl
  4049cc:	lods   eax,DWORD PTR ds:[esi]
  4049cd:	vfmaddsubpd xmm2,xmm6,XMMWORD PTR [eax+0x398d4813],xmm3
  4049d7:	std    
  4049d8:	jmp    0x1c17:0x6b966b5
  4049df:	xor    al,0x2f
  4049e1:	pop    ds
  4049e2:	sbb    ah,cl
  4049e4:	es push ebx
  4049e6:	scas   al,BYTE PTR es:[edi]
  4049e7:	ret    0x7daa
  4049ea:	xchg   ecx,eax
  4049eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049ec:	rcr    BYTE PTR [esi-0x1],cl
  4049ef:	mov    eax,ds:0xa05ec136
  4049f4:	push   cs
  4049f5:	dec    edx
  4049f6:	mov    ah,0xa2
  4049f8:	mov    al,0xe8
  4049fa:	push   ecx
  4049fb:	jns    0x40499d
  4049fd:	test   BYTE PTR [esi-0x247f8b92],al
  404a03:	addr16 mov dh,0x93
  404a06:	call   0x6e2c:0x6dcb7240
  404a0d:	push   esi
  404a0e:	(bad)  
  404a10:	cdq    
  404a11:	mov    ecx,ss
  404a13:	int3   
  404a14:	adc    eax,0x8d7b31e7
  404a19:	repnz test DWORD PTR [esi],ebp
  404a1c:	and    edi,DWORD PTR [ebx-0x70]
  404a1f:	cmp    BYTE PTR [ebx+0x6a],cl
  404a22:	rcl    DWORD PTR [ecx-0x3eec1076],0xea
  404a29:	cwde   
  404a2a:	lahf   
  404a2b:	jg     0x404a87
  404a2d:	sbb    DWORD PTR [eax+0x36c6d1bb],edx
  404a33:	jno    0x404a92
  404a35:	mov    ebx,0xbff1b0cb
  404a3a:	mov    DWORD PTR [eax-0x24],edi
  404a3d:	sbb    eax,0xf50c1bee
  404a42:	push   es
  404a43:	loop   0x404a5a
  404a45:	inc    edi
  404a46:	dec    ecx
  404a47:	aaa    
  404a48:	arpl   WORD PTR [ecx+edx*8-0x6f2cfa7b],bx
  404a4f:	cdq    
  404a50:	push   es
  404a51:	loope  0x404a26
  404a53:	and    bl,al
  404a55:	cmp    DWORD PTR [edx+0x2a980b30],esp
  404a5b:	dec    esi
  404a5c:	pop    ss
  404a5d:	(bad)  
  404a5e:	mov    esi,DWORD PTR [eax]
  404a60:	xchg   edi,eax
  404a61:	jne    0x404a33
  404a63:	cmp    bl,BYTE PTR [eax]
  404a65:	mov    al,ds:0xaead5af1
  404a6a:	iret   
  404a6b:	out    dx,eax
  404a6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a6d:	fisubr WORD PTR [edi+0x25a918f8]
  404a73:	in     al,dx
  404a74:	adc    DWORD PTR [edi],ebx
  404a76:	push   ebp
  404a77:	repnz addr16 mov eax,0x98c1f44
  404a7e:	clc    
  404a7f:	clc    
  404a80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a81:	mov    ah,0xeb
  404a83:	dec    esi
  404a84:	push   ss
  404a85:	inc    esi
  404a86:	ins    DWORD PTR es:[edi],dx
  404a87:	mov    ?,WORD PTR [eax-0x66]
  404a8a:	pushf  
  404a8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a8c:	sub    dl,BYTE PTR [edx-0xe]
  404a8f:	test   eax,0xe97186f5
  404a94:	pop    esi
  404a95:	ss push cs
  404a97:	imul   ebp,ecx,0x36ceb237
  404a9d:	mov    bh,al
  404a9f:	push   cs
  404aa0:	(bad)  
  404aa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404aa2:	push   ebx
  404aa3:	sbb    DWORD PTR [edx+0x231ccb98],ecx
  404aa9:	mov    ds:0x1238629d,eax
  404aae:	jecxz  0x404ae3
  404ab0:	mov    eax,0x823a8f67
  404ab5:	jmp    0x21ff:0x302e367d
  404abc:	jmp    0x404ac1
  404abe:	(bad)  
  404abf:	mov    DWORD PTR [ebp-0x18],eax
  404ac2:	and    DWORD PTR ds:0x4245ba,0x0
  404acc:	jmp    0x404adc
  404ad1:	mov    eax,ds:0x4245ba
  404ad6:	inc    eax
  404ad7:	mov    ds:0x4245ba,eax
  404adc:	cmp    DWORD PTR ds:0x4245ba,0x1e
  404ae3:	jae    0x404b28
  404ae9:	cmp    DWORD PTR ds:0x4245ba,0x6
  404af0:	jne    0x404b01
  404af6:	push   0x41ae97
  404afb:	call   DWORD PTR ds:0x40d1c4
  404b01:	cmp    DWORD PTR ds:0x4245ba,0x5
  404b08:	jne    0x404b19
  404b0e:	mov    eax,ds:0x4245ba
  404b13:	inc    eax
  404b14:	mov    ds:0x4245ba,eax
  404b19:	jmp    0x404ad1
  404b1e:	sub    DWORD PTR ds:0x415111,0xc33
  404b28:	mov    DWORD PTR [ebp-0x1c],0xf89c853f
  404b2f:	mov    BYTE PTR [ebp-0x1],0x57
  404b33:	sub    DWORD PTR ds:0x417e59,edi
  404b39:	mov    eax,DWORD PTR [ebp-0xc]
  404b3c:	xor    eax,esi
  404b3e:	and    DWORD PTR ds:0x415115,0x5145
  404b48:	add    eax,edi
  404b4a:	mov    DWORD PTR [ebp-0x18],eax
  404b4d:	mov    eax,DWORD PTR [ebp-0x24]
  404b50:	xor    eax,esi
  404b52:	adc    DWORD PTR ds:0x41abde,0x3f71
  404b5c:	add    eax,edi
  404b5e:	and    DWORD PTR ds:0x4245be,0x352e
  404b68:	push   eax
  404b69:	dec    eax
  404b6a:	mov    eax,DWORD PTR [ebp-0x28]
  404b6d:	xor    eax,esi
  404b6f:	and    DWORD PTR ds:0x4245b2,0x41abce
  404b79:	add    eax,edi
  404b7b:	xor    DWORD PTR ds:0x41abda,0x41237c
  404b85:	push   eax
  404b86:	and    DWORD PTR ds:0x4245be,0x41abe2
  404b90:	mov    eax,DWORD PTR [ebp-0x1c]
  404b93:	jmp    0x404d0c
  404b98:	push   0xffffff9c
  404b9a:	mov    ds:0x7b617853,al
  404b9f:	xchg   ebp,eax
  404ba0:	push   ebx
  404ba1:	mov    DWORD PTR [ecx+0x3f],esp
  404ba4:	sbb    esi,DWORD PTR ds:0x7ca6d318
  404baa:	jle    0x404c2a
  404bac:	fidivr DWORD PTR [edi+0x7e]
  404baf:	jle    0x404bd7
  404bb1:	lds    esp,FWORD PTR [ebp-0x25]
  404bb4:	loopne 0x404bdd
  404bb6:	fs cwde 
  404bb8:	leave  
  404bb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bba:	ret    
  404bbb:	pusha  
  404bbc:	stos   BYTE PTR es:[edi],al
  404bbd:	repnz lods eax,DWORD PTR ds:[esi]
  404bbf:	es pop edi
  404bc1:	or     edi,DWORD PTR [esi+0x5861a9ae]
  404bc7:	call   0xb69d:0x368d550d
  404bce:	(bad)  
  404bcf:	retf   0x6d60
  404bd2:	xchg   esp,eax
  404bd3:	scas   eax,DWORD PTR es:[edi]
  404bd4:	fsubr  DWORD PTR [ebx]
  404bd6:	lods   eax,DWORD PTR ds:[esi]
  404bd7:	mov    eax,ds:0x8cea8cf
  404bdc:	mov    eax,0xb7491a15
  404be1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404be2:	mov    ebp,0xc577a7ab
  404be7:	mov    eax,0xcd417c96
  404bed:	lods   eax,DWORD PTR ds:[esi]
  404bee:	fidivr WORD PTR [edi+0x78]
  404bf1:	clc    
  404bf2:	cmp    ch,dl
  404bf4:	pop    eax
  404bf5:	add    edx,DWORD PTR [edi+edi*2]
  404bf8:	pop    edi
  404bf9:	sbb    eax,0xf29f2376
  404bfe:	dec    ebx
  404bff:	mov    WORD PTR [esi],ss
  404c01:	popa   
  404c02:	push   cs
  404c03:	cdq    
  404c04:	and    al,0x84
  404c06:	cmp    eax,0x5511c481
  404c0b:	push   esi
  404c0c:	pop    edx
  404c0d:	and    al,BYTE PTR [ebp-0x42c750b]
  404c13:	jg     0x404b9a
  404c15:	lock inc esi
  404c17:	xchg   esp,eax
  404c18:	push   edi
  404c19:	retf   
  404c1a:	test   BYTE PTR [eax],0x47
  404c1d:	sub    dl,cl
  404c1f:	pusha  
  404c20:	stos   BYTE PTR es:[edi],al
  404c21:	adc    al,0x1a
  404c23:	inc    esi
  404c24:	dec    ebp
  404c25:	popf   
  404c26:	call   FWORD PTR [eax+esi*2]
  404c29:	fwait
  404c2a:	xor    eax,0xb175336d
  404c2f:	jmp    0x18e1c1cc
  404c34:	sub    ebx,DWORD PTR [esi+0x6b]
  404c37:	or     esp,DWORD PTR [ebp+0xf30836f]
  404c3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c3e:	jmp    0x22acac30
  404c43:	push   ss
  404c44:	stos   DWORD PTR es:[edi],eax
  404c45:	jg     0x404c0a
  404c47:	js     0x404c20
  404c49:	fstp   QWORD PTR [eax]
  404c4b:	test   DWORD PTR [ebp-0x4f1a0372],eax
  404c51:	cli    
  404c52:	pop    esi
  404c53:	data16 jne 0x404c67
  404c56:	push   eax
  404c57:	(bad)  
  404c58:	ds ins DWORD PTR es:[edi],dx
  404c5a:	call   0x205997c5
  404c5f:	(bad)  
  404c60:	cmovb  esi,esi
  404c63:	(bad)  
  404c64:	test   BYTE PTR [ebx],0x26
  404c67:	xor    bl,BYTE PTR [edx]
  404c69:	jb     0x404c37
  404c6b:	sti    
  404c6c:	ret    
  404c6d:	(bad)  
  404c6e:	test   bh,0xfb
  404c71:	into   
  404c72:	loopne 0x404c57
  404c74:	xchg   WORD PTR [edi-0x56],cx
  404c78:	fadd   DWORD PTR [ebp-0x9d93689]
  404c7e:	pop    edi
  404c7f:	ins    BYTE PTR es:[edi],dx
  404c80:	sub    BYTE PTR ds:0x3c527a81,0x12
  404c87:	ins    BYTE PTR es:[edi],dx
  404c88:	loop   0x404c1f
  404c8a:	mov    ds:0xfa880316,eax
  404c8f:	push   ebp
  404c90:	push   edx
  404c91:	sti    
  404c92:	pop    ebx
  404c93:	sbb    al,0x4
  404c95:	jg     0x404d03
  404c97:	stos   DWORD PTR es:[edi],eax
  404c98:	jnp    0x404c4d
  404c9a:	jmp    0x48f8020f
  404c9f:	adc    eax,0x2a07cedd
  404ca4:	xchg   edi,eax
  404ca5:	loopne 0x404c8f
  404ca7:	push   ebx
  404ca8:	pop    eax
  404ca9:	adc    cl,BYTE PTR [eax]
  404cab:	shl    BYTE PTR [ebp+edx*4-0x5495c211],1
  404cb2:	sar    DWORD PTR ds:[esi+0x3c],0x2f
  404cb7:	inc    edi
  404cb8:	inc    esp
  404cb9:	lea    eax,[edx]
  404cbb:	retf   
  404cbc:	fstp   DWORD PTR [esi-0x63a22c29]
  404cc2:	push   esp
  404cc3:	(bad)  
  404cc4:	int3   
  404cc5:	jne    0x404c5a
  404cc7:	popa   
  404cc8:	push   es
  404cc9:	mov    cl,0x76
  404ccb:	out    0xd4,eax
  404ccd:	outs   dx,BYTE PTR ss:[esi]
  404ccf:	in     eax,0x7b
  404cd1:	test   BYTE PTR [edx],bh
  404cd3:	pusha  
  404cd4:	(bad)  
  404cd5:	data16 rcr cl,cl
  404cd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cd9:	sar    BYTE PTR ds:0xf6c317cf,cl
  404cdf:	or     edi,DWORD PTR [esi+ecx*8+0x2e]
  404ce3:	enter  0x76d3,0xd6
  404ce7:	inc    eax
  404ce8:	aad    0xed
  404cea:	loope  0x404c6d
  404cec:	stos   DWORD PTR es:[edi],eax
  404ced:	jbe    0x404d53
  404cef:	int3   
  404cf0:	mov    esp,0x26e8680c
  404cf5:	mov    esi,0xf418ebec
  404cfa:	scas   al,BYTE PTR es:[edi]
  404cfb:	sub    ebx,esp
  404cfd:	pusha  
  404cfe:	push   0x87b2ddb6
  404d03:	js     0x404d22
  404d05:	scas   al,BYTE PTR es:[edi]
  404d06:	push   edi
  404d07:	idiv   edi
  404d09:	add    DWORD PTR [edi-0x839cc50],0x1d
  404d10:	add    eax,0x3004151
  404d15:	mov    DWORD PTR [ecx+0x41236435],0x39b100
  404d1f:	add    BYTE PTR [eax-0x73],dl
  404d22:	inc    ebp
  404d23:	mov    BYTE PTR [eax-0x39],dl
  404d26:	add    eax,0x41237c
  404d2b:	push   edx
  404d2c:	add    BYTE PTR [bx+si],al
  404d2f:	push   DWORD PTR [ebp-0xc]
  404d32:	sub    DWORD PTR ds:0x415111,0x1b2b
  404d3c:	push   DWORD PTR [ebp-0x14]
  404d3f:	sub    DWORD PTR ds:0x4245b6,0x412364
  404d49:	call   0x409363
  404d4e:	inc    DWORD PTR ds:0x415119
  404d54:	test   eax,eax
  404d56:	mov    DWORD PTR ds:0x4245b6,0x71ec
  404d60:	je     0x404de0
  404d66:	sub    DWORD PTR ds:0x417e59,0x4245ca
  404d70:	lea    eax,[ebp-0x78]
  404d73:	neg    DWORD PTR ds:0x4245be
  404d79:	push   eax
  404d7a:	add    eax,DWORD PTR ds:0x4245ca
  404d80:	mov    eax,DWORD PTR [ebp-0x14]
  404d83:	and    DWORD PTR ds:0x417e59,0xd95
  404d8d:	xor    eax,esi
  404d8f:	add    eax,edi
  404d91:	and    DWORD PTR ds:0x417e3d,0x71b6
  404d9b:	push   eax
  404d9c:	mov    eax,DWORD PTR [ebp-0x10]
  404d9f:	add    eax,0xaa
  404da4:	push   eax
  404da5:	and    DWORD PTR ds:0x41abd2,0x17f4
  404daf:	mov    eax,DWORD PTR [ebp-0x10]
  404db2:	sub    DWORD PTR ds:0x417e55,0x41236c
  404dbc:	mov    eax,DWORD PTR [eax+0x198]
  404dc2:	push   DWORD PTR [eax]
  404dc4:	add    DWORD PTR ds:0x417e55,0x417e3d
  404dce:	call   0x40ae4d
  404dd3:	mov    DWORD PTR ds:0x41abd6,0x35a
  404ddd:	mov    DWORD PTR [ebp-0x8],eax
  404de0:	mov    DWORD PTR ds:0x412368,0x764e
  404dea:	cmp    DWORD PTR [ebp-0x8],0x0
  404dee:	not    DWORD PTR ds:0x412364
  404df4:	lea    eax,[ebp+0x4]
  404df7:	mov    DWORD PTR [ebp-0x20],eax
  404dfa:	je     0x405842
  404e00:	lea    eax,[ebp-0x18]
  404e03:	jmp    0x404f7c
  404e08:	ja     0x404d8f
  404e0a:	(bad)  
  404e0b:	je     0x404d9a
  404e0d:	je     0x404d94
  404e0f:	test   DWORD PTR [esi],edi
  404e11:	push   ebx
  404e12:	outs   dx,DWORD PTR ds:[esi]
  404e13:	jne    0x404db1
  404e15:	hlt    
  404e16:	xchg   DWORD PTR [edi+0x7e7e7202],edi
  404e1c:	fidivr DWORD PTR [edi+0x7e]
  404e1f:	jle    0x404e95
  404e21:	mov    ch,0xd
  404e23:	das    
  404e24:	cmc    
  404e25:	jg     0x404da8
  404e27:	lock jae 0x404e7a
  404e2a:	add    DWORD PTR [edx+0x62],edx
  404e2d:	ror    DWORD PTR [ebx-0x1],cl
  404e30:	and    dl,0x5d
  404e33:	push   edi
  404e34:	rcl    BYTE PTR [edi+edi*8-0x754cc46f],0x72
  404e3c:	mov    eax,0x86110ee0
  404e41:	mov    eax,ds:0xf2710297
  404e46:	(bad)  
  404e47:	nop
  404e48:	jp     0x404eb1
  404e4a:	add    eax,0x7a44d1b9
  404e4f:	call   0x3fa9:0x712e2fc2
  404e56:	js     0x404e3f
  404e58:	nop
  404e59:	dec    edx
  404e5a:	adc    BYTE PTR [eax+0x1d],al
  404e5d:	imul   eax,DWORD PTR [ebp-0x677590af],0xffffffb1
  404e64:	jge    0x404ea6
  404e66:	dec    ecx
  404e67:	push   edi
  404e68:	sahf   
  404e69:	pop    ebp
  404e6a:	test   al,0x60
  404e6c:	std    
  404e6d:	sub    DWORD PTR [edi+0x23ca2165],edi
  404e73:	inc    ebp
  404e74:	pop    es
  404e75:	test   al,0x73
  404e77:	add    BYTE PTR [ecx+0x5e3b3fba],ah
  404e7d:	pop    ds
  404e7e:	push   edx
  404e7f:	dec    ebx
  404e80:	imul   ebp,DWORD PTR [ecx+edi*4],0xffffff85
  404e84:	mov    ch,0x1f
  404e86:	outs   dx,DWORD PTR ds:[esi]
  404e87:	out    dx,eax
  404e88:	adc    DWORD PTR [ebp+0x50619f3c],ebp
  404e8e:	ja     0x404ece
  404e90:	(bad)  
  404e92:	xor    eax,0xf5243195
  404e97:	add    BYTE PTR [eax-0x2d],dl
  404e9a:	in     al,dx
  404e9b:	add    DWORD PTR [ebp+0x5e],esi
  404e9e:	js     0x404eaf
  404ea0:	mov    edi,0x25d78b6e
  404ea5:	(bad)  
  404ea6:	cmp    dh,ch
  404ea8:	dec    edx
  404ea9:	pop    eax
  404eaa:	jnp    0x404ee5
  404eac:	call   0x51a4:0x6df94801
  404eb3:	popf   
  404eb4:	add    ebx,edi
  404eb6:	fwait
  404eb7:	aas    
  404eb8:	ror    BYTE PTR [ecx-0x77],cl
  404ebb:	test   al,0xbc
  404ebd:	xchg   esp,eax
  404ebe:	data16 repz xor bl,BYTE PTR [esp+0x33]
  404ec4:	inc    ebp
  404ec5:	dec    ebp
  404ec6:	iret   
  404ec7:	scas   eax,DWORD PTR es:[edi]
  404ec8:	cmp    al,dl
  404eca:	or     DWORD PTR [edx-0x22efd68c],ebx
  404ed0:	sub    ecx,DWORD PTR [ebp-0x45]
  404ed3:	xor    ah,BYTE PTR [eax-0x612c9e32]
  404ed9:	mov    BYTE PTR ds:0xb33510a6,dh
  404edf:	mov    edi,0x57937870
  404ee4:	mov    fs,ecx
  404ee6:	or     eax,0x723d2228
  404eeb:	mov    dl,al
  404eed:	push   0x9888fc76
  404ef2:	jmp    0x404ede
  404ef4:	into   
  404ef5:	in     al,0x36
  404ef7:	fs sub eax,0x58191aad
  404efd:	gs cmp ch,ch
  404f00:	(bad)  
  404f01:	mov    esp,0x9fc59573
  404f06:	or     BYTE PTR [ebx-0x5d],ch
  404f09:	mov    DWORD PTR [edi+edi*4+0x1c67c68e],eax
  404f10:	test   eax,0x6e7a7989
  404f15:	ins    DWORD PTR es:[edi],dx
  404f16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f17:	adc    BYTE PTR [edx-0x6c],bl
  404f1a:	iret   
  404f1b:	int    0xed
  404f1d:	mov    esp,0xc1ca424d
  404f22:	sbb    al,0xd1
  404f24:	leave  
  404f25:	xor    al,0x6a
  404f27:	inc    ecx
  404f28:	sbb    esp,DWORD PTR [esi+0x1ec68684]
  404f2e:	jecxz  0x404f4e
  404f30:	adc    ch,al
  404f32:	arpl   cx,ax
  404f34:	lahf   
  404f35:	cld    
  404f36:	(bad)  
  404f37:	loopne 0x404f24
  404f39:	jmp    DWORD PTR [esi+0x58]
  404f3c:	push   eax
  404f3d:	repnz or eax,DWORD PTR [ecx+0x6b653e8b]
  404f44:	xor    BYTE PTR [ecx-0xa],bl
  404f47:	jnp    0x404f0e
  404f49:	js     0x404f34
  404f4b:	mov    esp,ebp
  404f4d:	das    
  404f4e:	arpl   WORD PTR [ecx+ecx*4-0x23],bp
  404f52:	pop    ds
  404f53:	pop    ecx
  404f54:	arpl   WORD PTR [ecx+0x4c],bp
  404f57:	sbb    BYTE PTR [ebx-0x37],bl
  404f5a:	sbb    al,0x7d
  404f5c:	fprem  
  404f5e:	pop    ds
  404f5f:	pop    edi
  404f60:	mov    ebx,0x1450c5b5
  404f65:	xor    esp,edi
  404f67:	sub    dl,BYTE PTR [eax]
  404f69:	sbb    esp,DWORD PTR [ebp-0x52]
  404f6c:	mov    ds:0x4308b06,eax
  404f71:	mov    eax,ds:0xa78b184
  404f76:	and    esi,DWORD PTR [ecx+0x11776dce]
  404f7c:	push   eax
  404f7d:	and    DWORD PTR ds:0x4245ae,0x0
  404f87:	jmp    0x404f97
  404f8c:	mov    eax,ds:0x4245ae
  404f91:	inc    eax
  404f92:	mov    ds:0x4245ae,eax
  404f97:	cmp    DWORD PTR ds:0x4245ae,0x1e
  404f9e:	jae    0x404fc0
  404fa4:	cmp    DWORD PTR ds:0x4245ae,0x22
  404fab:	jne    0x404fba
  404fb1:	push   DWORD PTR [ebp-0x28]
  404fb4:	call   DWORD PTR ds:0x40d298
  404fba:	jmp    0x404f8c
  404fbf:	inc    eax
  404fc0:	mov    eax,DWORD PTR [ebp-0x2c]
  404fc3:	adc    DWORD PTR ds:0x412354,0x412370
  404fcd:	xor    eax,esi
  404fcf:	add    eax,edi
  404fd1:	and    DWORD PTR ds:0x415115,0x3c83
  404fdb:	jmp    0x405154
  404fe0:	adc    al,0x10
  404fe2:	imul   DWORD PTR [edx]
  404fe4:	mov    ebp,DWORD PTR [ecx+0x1f8510a9]
  404fea:	and    DWORD PTR [edx-0x686cae89],esi
  404ff0:	out    dx,al
  404ff1:	jae    0x405071
  404ff3:	jle    0x404fcf
  404ff5:	jg     0x405075
  404ff7:	jle    0x405013
  404ff9:	add    eax,0xd2c58162
  404ffe:	sub    BYTE PTR [eax+eiz*2-0x12b433e8],ah
  405005:	dec    esi
  405006:	pop    es
  405007:	inc    ebx
  405008:	ds hlt 
  40500a:	and    eax,0x4d563aae
  40500f:	sahf   
  405010:	dec    eax
  405011:	jmp    0x6d7f661a
  405016:	xchg   bl,dl
  405018:	adc    BYTE PTR [esi+0x5b],0x80
  40501c:	or     BYTE PTR cs:[ecx+0x7a],cl
  405020:	je     0x404fd4
  405022:	neg    WORD PTR [esi+0x5f5e7bd1]
  405029:	sub    eax,DWORD PTR [edx+0x70]
  40502c:	xchg   edi,eax
  40502d:	jmp    0xfb8dc457
  405032:	faddp  st(2),st
  405034:	lock lea eax,[edx]
  405037:	es ds int3 
  40503a:	add    DWORD PTR [esi-0x33],edi
  40503d:	loopne 0x4050b9
  40503f:	pop    edi
  405040:	mov    edi,0xdbb8cd16
  405045:	add    eax,ebx
  405047:	pop    esi
  405048:	or     dh,BYTE PTR [eax]
  40504a:	test   al,0x3d
  40504c:	mov    eax,ds:0x8dea44e7
  405051:	and    esp,0x7
  405054:	in     al,dx
  405055:	adc    BYTE PTR [ebp-0x4cf0afb5],bh
  40505b:	fdiv   QWORD PTR [ebp+0x3c]
  40505e:	out    dx,al
  40505f:	shl    DWORD PTR [eax+0x43],1
  405062:	ins    BYTE PTR es:[edi],dx
  405063:	jbe    0x40504a
  405065:	or     ch,BYTE PTR [edx-0x66]
  405068:	call   0x5682741d
  40506d:	xchg   esi,eax
  40506e:	mov    bh,0xda
  405070:	sbb    eax,0x23497f37
  405075:	push   edx
  405076:	mov    gs,WORD PTR [esi+0x12f042fb]
  40507c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40507d:	push   es
  40507e:	(bad)  
  40507f:	dec    edi
  405080:	enter  0x4afd,0x5c
  405084:	inc    edx
  405085:	mov    dl,0x85
  405087:	sbb    DWORD PTR [edi+0x4d],ebp
  40508a:	xor    eax,0x1390a26b
  40508f:	aaa    
  405090:	push   0xffffff9b
  405092:	syscall 
  405094:	dec    ebx
  405095:	sbb    bl,BYTE PTR [ebp+0x68]
  405098:	pushf  
  405099:	loopne 0x405046
  40509b:	dec    eax
  40509c:	adc    esp,esp
  40509e:	setns  bh
  4050a1:	sub    DWORD PTR [edx-0x1d],0xfbb95386
  4050a8:	sub    DWORD PTR [ecx+eiz*1-0x6287c6ea],ecx
  4050af:	arpl   bp,dx
  4050b1:	test   eax,0x207bcd15
  4050b6:	sti    
  4050b7:	aas    
  4050b8:	iret   
  4050b9:	call   DWORD PTR [edi-0x62b819b1]
  4050bf:	in     eax,0xfb
  4050c1:	jmp    0xbd46:0x931a9667
  4050c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050c9:	les    ebp,FWORD PTR [ecx]
  4050cb:	sub    al,0xaf
  4050cd:	(bad)  
  4050ce:	in     eax,0xfc
  4050d0:	(bad)  
  4050d1:	push   ebp
  4050d2:	imul   eax,DWORD PTR [eax+ebp*4+0x27fe63c9],0xc
  4050da:	scas   al,BYTE PTR es:[edi]
  4050db:	lods   eax,DWORD PTR ds:[esi]
  4050dc:	cmp    BYTE PTR [edx+0x63f2363a],ch
  4050e2:	dec    ebp
  4050e3:	dec    edi
  4050e4:	das    
  4050e5:	pop    esi
  4050e6:	out    dx,eax
  4050e7:	mov    bh,0xad
  4050e9:	ins    BYTE PTR es:[edi],dx
  4050ea:	xor    BYTE PTR ds:0x3f968455,ah
  4050f0:	ror    DWORD PTR [edx*1+0x264567f7],cl
  4050f7:	inc    esp
  4050f8:	shl    BYTE PTR [ebp-0x14085d84],cl
  4050fe:	jmp    0xe7c31638
  405103:	cmp    eax,0x1273f0bb
  405108:	fwait
  405109:	pop    es
  40510a:	ds pop es
  40510c:	into   
  40510d:	hlt    
  40510e:	mov    ds:0x26ed9f41,al
  405113:	jb     0x405103
  405115:	inc    esi
  405116:	stos   BYTE PTR es:[edi],al
  405117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405118:	add    eax,ecx
  40511a:	data16 mov bh,0x1b
  40511d:	repnz mov bh,0x13
  405120:	xor    DWORD PTR [ebx],edx
  405122:	jle    0x4050db
  405124:	test   eax,0xe33fc73c
  405129:	dec    ebp
  40512a:	sbb    al,0x75
  40512c:	jmp    0xb243893a
  405131:	scas   al,BYTE PTR es:[edi]
  405132:	sti    
  405133:	loop   0x405186
  405135:	inc    eax
  405136:	jp     0x405196
  405138:	stos   DWORD PTR es:[edi],eax
  405139:	dec    esi
  40513a:	sub    dh,BYTE PTR [eax-0x4d074dc6]
  405140:	jecxz  0x4051a2
  405142:	mov    DWORD PTR [bx+si],edi
  405145:	out    dx,al
  405146:	or     DWORD PTR [ebx],0x6da4ac3
  40514c:	jp     0x4051a7
  40514e:	xchg   ebx,eax
  40514f:	js     0x405166
  405151:	aam    0x95
  405153:	ss push eax
  405155:	mov    DWORD PTR ds:0x412358,0x10
  40515f:	cmp    DWORD PTR ds:0x412358,0x0
  405166:	je     0x4051ac
  40516c:	cmp    DWORD PTR ds:0x412358,0x4
  405173:	jne    0x405184
  405179:	push   0x4150fd
  40517e:	call   DWORD PTR ds:0x40d1c8
  405184:	cmp    DWORD PTR ds:0x412358,0x5
  40518b:	jne    0x40519c
  405191:	mov    eax,ds:0x412358
  405196:	dec    eax
  405197:	mov    ds:0x412358,eax
  40519c:	mov    eax,ds:0x412358
  4051a1:	dec    eax
  4051a2:	mov    ds:0x412358,eax
  4051a7:	jmp    0x40515f
  4051ac:	mov    eax,DWORD PTR [ebp-0x1c]
  4051af:	xor    eax,esi
  4051b1:	add    eax,edi
  4051b3:	jmp    0x40532c
  4051b8:	(bad)  
  4051b9:	sbb    BYTE PTR [ecx+eiz*1],ah
  4051bc:	clc    
  4051bd:	and    ebx,ebp
  4051bf:	fldcw  WORD PTR [esi-0x11f0698e]
  4051c5:	lods   al,BYTE PTR ds:[esi]
  4051c6:	(bad)  
  4051c7:	sti    
  4051c8:	dec    edx
  4051c9:	jo     0x405249
  4051cb:	jle    0x4051a7
  4051cd:	jg     0x40524d
  4051cf:	jle    0x405190
  4051d1:	mov    al,ds:0x80d86d81
  4051d6:	mov    esp,DWORD PTR [eax]
  4051d8:	cmp    bh,BYTE PTR [edx-0x80]
  4051db:	mov    ebx,0x3b7d446c
  4051e0:	ret    
  4051e1:	cmp    al,0x91
  4051e3:	not    DWORD PTR [ebp-0x71]
  4051e6:	scas   al,BYTE PTR es:[edi]
  4051e7:	lahf   
  4051e8:	dec    ebx
  4051e9:	fld    QWORD PTR [esi-0x66]
  4051ec:	ret    
  4051ed:	inc    eax
  4051ee:	mov    al,0x3f
  4051f0:	test   al,0x8b
  4051f2:	(bad)  
  4051f3:	mov    edx,ebx
  4051f5:	xor    al,0x40
  4051f7:	aaa    
  4051f8:	adc    BYTE PTR [ebx-0x3a5c380d],0x68
  4051ff:	cmc    
  405200:	adc    BYTE PTR [edx],ch
  405202:	pop    ss
  405203:	lods   eax,DWORD PTR ds:[esi]
  405204:	popa   
  405205:	xor    esi,DWORD PTR [ecx]
  405207:	pop    ecx
  405208:	jp     0x4051a3
  40520a:	imul   edi,DWORD PTR [eax+0x18],0x5f4a9cc5
  405211:	int3   
  405212:	jo     0x40523b
  405214:	mov    DWORD PTR [edx],ebx
  405216:	pop    ss
  405217:	mov    ch,0xe
  405219:	sub    eax,DWORD PTR [edi-0xd88f5e4]
  40521f:	add    DWORD PTR [edi+edi*1],0xffffff88
  405223:	mov    eax,0xae6ce4f2
  405228:	lahf   
  405229:	adc    BYTE PTR [edi+0x31445b92],ah
  40522f:	pop    edx
  405230:	nop
  405231:	loop   0x4051dd
  405233:	out    dx,al
  405234:	jbe    0x405273
  405236:	das    
  405237:	call   0x11995625
  40523c:	rcl    BYTE PTR [ecx],1
  40523e:	push   ss
  40523f:	inc    edi
  405240:	mov    esi,0x709d466c
  405245:	sbb    ah,BYTE PTR [ebp-0x5]
  405248:	pop    edx
  405249:	push   ebx
  40524a:	sbb    ebx,DWORD PTR [eax-0x5a]
  40524d:	push   ebx
  40524e:	(bad)  [eax+0x57062162]
  405254:	mov    ebp,0xd04aeabe
  405259:	test   eax,0x74ea2f52
  40525e:	mov    ?,ebx
  405260:	jmp    0xe093:0xb0b71500
  405267:	inc    eax
  405268:	and    al,0x23
  40526a:	mov    WORD PTR [ecx-0x1eac234d],gs
  405270:	jp     0x405267
  405272:	dec    ebx
  405273:	les    eax,FWORD PTR [esi]
  405275:	cmp    esi,DWORD PTR [ecx+0xe]
  405278:	dec    esi
  405279:	fscale 
  40527b:	sbb    al,0x9
  40527d:	mov    ds:0xb46d4002,eax
  405282:	push   esp
  405283:	dec    edx
  405284:	(bad)  
  405285:	mov    ecx,0x86c3a79b
  40528a:	or     BYTE PTR [esi-0x39],ah
  40528d:	xchg   edx,eax
  40528e:	add    eax,0x749b3f8e
  405293:	mul    DWORD PTR [edi+0x765dddbd]
  405299:	pop    esi
  40529a:	inc    ecx
  40529b:	jb     0x405230
  40529d:	mov    eax,edi
  40529f:	add    DWORD PTR [esi-0x4fbc76c1],esi
  4052a5:	bound  edi,QWORD PTR [ebp+0x54]
  4052a8:	jmp    0x405305
  4052aa:	lea    edx,[ebp+0x5d]
  4052ad:	hlt    
  4052ae:	in     eax,0xce
  4052b0:	(bad)  
  4052b1:	mov    eax,0x73db3634
  4052b6:	loop   0x4052a4
  4052b8:	sub    cl,BYTE PTR [edi]
  4052ba:	sbb    eax,0x581518f2
  4052bf:	punpckhdq mm7,QWORD PTR ds:0x10c845f6
  4052c6:	mov    ch,0x3
  4052c8:	dec    ebx
  4052c9:	add    BYTE PTR [edi],dl
  4052cb:	inc    eax
  4052cc:	cmc    
  4052cd:	inc    ecx
  4052ce:	jmp    0xe48cac35
  4052d3:	ins    DWORD PTR es:[edi],dx
  4052d4:	inc    edx
  4052d5:	xchg   ebx,eax
  4052d7:	pop    ss
  4052d8:	inc    eax
  4052d9:	add    esp,DWORD PTR [ebp+esi*2-0x18010b25]
  4052e0:	inc    esp
  4052e1:	out    0xf6,eax
  4052e3:	rcr    BYTE PTR [esi+0x382b31f1],1
  4052e9:	ins    BYTE PTR es:[edi],dx
  4052ea:	mov    ds:0x51530dab,eax
  4052ef:	push   ebx
  4052f0:	int    0x1d
  4052f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052f4:	mov    ebp,DWORD PTR [eax-0x3272aa64]
  4052fa:	mov    esi,DWORD PTR [esi]
  4052fc:	mov    edx,0x7f51e5ef
  405301:	push   0x6efb0de6
  405306:	dec    edx
  405307:	mov    DWORD PTR [edi],ebp
  405309:	and    eax,0x49bd764d
  40530e:	push   edx
  40530f:	ret    0xe8c3
  405312:	xchg   ebx,eax
  405313:	int3   
  405314:	bnd js 0x405347
  405317:	dec    eax
  405318:	lahf   
  405319:	mov    WORD PTR [ecx],ds
  40531b:	(bad)  
  40531c:	and    eax,0x4c28913c
  405321:	sbb    al,0x6c
  405323:	loopne 0x40538e
  405325:	pop    eax
  405326:	retf   0x257a
  405329:	mov    eax,0xff50d8fe
  40532e:	jne    0x405328
  405330:	lea    eax,[ebp-0x78]
  405333:	push   eax
  405334:	push   DWORD PTR [ebp-0xc]
  405337:	push   DWORD PTR [ebp-0x14]
  40533a:	jmp    0x4054b3
  40533f:	loop   0x40534f
  405341:	cli    
  405342:	cs cli 
  405344:	cli    
  405345:	cli    
  405346:	ret    0x10db
  405349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40534a:	push   esp
  40534b:	std    
  40534c:	imul   ecx,DWORD PTR [ecx],0xffffff97
  40534f:	push   ss
  405350:	jbe    0x4053d0
  405352:	jle    0x40532e
  405354:	jg     0x4053d4
  405356:	jle    0x40535b
  405358:	ds mov ebp,edi
  40535b:	jl     0x405315
  40535d:	inc    ecx
  40535e:	pop    ebp
  40535f:	pop    ss
  405360:	loopne 0x40533a
  405362:	cs loop 0x40531d
  405365:	repz (bad) 
  405367:	lods   eax,DWORD PTR ds:[esi]
  405368:	ss push 0x62ae6c85
  40536e:	loope  0x4053c4
  405370:	pop    esi
  405371:	sub    al,0x12
  405373:	(bad)  
  405374:	mov    ds:0x67f29404,al
  405379:	scas   al,BYTE PTR es:[edi]
  40537a:	lods   eax,DWORD PTR ds:[esi]
  40537b:	(bad)  
  40537c:	mov    ecx,0x2b4e2f8d
  405381:	mov    ebx,0xae0e4577
  405386:	and    BYTE PTR [esi-0x1445ff34],bl
  40538c:	xchg   edi,eax
  40538d:	push   0x83afe5b2
  405392:	adc    al,0xce
  405394:	xlat   BYTE PTR ds:[ebx]
  405395:	lods   eax,DWORD PTR ds:[esi]
  405396:	mov    WORD PTR ds:0xb3dab4ba,ds
  40539c:	mov    ch,0xb3
  40539e:	inc    edx
  40539f:	and    al,0x83
  4053a1:	pop    ebx
  4053a2:	jmp    0x2dec:0x198b7926
  4053a9:	push   edx
  4053aa:	je     0x4053d1
  4053ac:	jecxz  0x40542d
  4053ae:	mov    esi,0x5bedfd96
  4053b3:	data16 inc BYTE PTR [ecx+0x99aa5cb]
  4053ba:	(bad)  
  4053bb:	mov    ebp,0x3f4b3865
  4053c0:	(bad)  
  4053c1:	scas   eax,DWORD PTR es:[edi]
  4053c2:	mov    ecx,0x26f42cf6
  4053c7:	pop    ss
  4053c8:	mov    bh,0x22
  4053ca:	hlt    
  4053cb:	cld    
  4053cc:	sub    bh,bl
  4053ce:	push   eax
  4053cf:	cs js  0x405382
  4053d2:	cmp    bl,BYTE PTR [edi]
  4053d4:	int    0x3c
  4053d6:	mov    cl,0xb
  4053d8:	mov    bl,0xc0
  4053da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053db:	dec    edi
  4053dc:	push   ebx
  4053dd:	ins    BYTE PTR es:[edi],dx
  4053de:	mov    DWORD PTR [edi+0x76e5aa39],ecx
  4053e4:	jl     0x405381
  4053e6:	inc    esp
  4053e7:	test   al,cl
  4053e9:	sub    edx,ebx
  4053eb:	jmp    0x3b1a:0xc9eb28f5
  4053f2:	cdq    
  4053f3:	xchg   edx,eax
  4053f4:	sahf   
  4053f5:	in     al,dx
  4053f6:	add    BYTE PTR [edi+ecx*2-0x3a222063],0xcb
  4053fe:	add    dh,BYTE PTR [eax+0x57]
  405401:	or     BYTE PTR [ebx-0x467c1566],0xae
  405408:	fist   DWORD PTR [edi]
  40540a:	inc    edx
  40540b:	sub    al,0xc2
  40540d:	adc    ah,al
  40540f:	pop    es
  405410:	ins    DWORD PTR es:[edi],dx
  405411:	inc    eax
  405412:	inc    ecx
  405413:	mov    ds:0x9c73939,al
  405418:	stos   DWORD PTR es:[edi],eax
  405419:	out    dx,al
  40541a:	or     ebx,ebx
  40541c:	adc    al,0x7e
  40541e:	xchg   BYTE PTR ds:0xf2f9e86e,cl
  405424:	pop    es
  405425:	(bad)  
  405426:	fnstenv [ebx]
  405428:	or     ebx,esi
  40542a:	mov    ebp,0xf808e768
  40542f:	pop    esp
  405430:	push   0x9dfd8833
  405435:	sub    bl,BYTE PTR [ebx]
  405437:	fwait
  405438:	lock sqrtps xmm7,XMMWORD PTR ds:0x35bcdc59
  405440:	jg     0x4053d9
  405442:	data16 jae 0x4053e5
  405445:	sbb    ebp,DWORD PTR [ebx-0x75ab0249]
  40544b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40544c:	mov    edi,0x3d4353d4
  405451:	mov    edi,ebp
  405453:	xor    BYTE PTR [ebp+0x49782d17],ah
  405459:	(bad)
  40545c:	div    BYTE PTR [edi-0x7bdb1831]
  405462:	mov    edi,0xbd4969b5
  405467:	in     al,dx
  405468:	retf   0xf2db
  40546b:	jle    0x4054ac
  40546d:	jl     0x4053fa
  40546f:	(bad)  
  405470:	adc    ebx,ecx
  405472:	xchg   edx,eax
  405473:	daa    
  405474:	nop
  405475:	retf   0xa55a
  405478:	or     eax,0xc68fa04
  40547d:	pop    ss
  40547e:	xchg   ebp,eax
  40547f:	sub    dh,dh
  405481:	and    DWORD PTR [ebx+0x4122c1c2],0x76
  405488:	jmp    0x4054db
  40548a:	inc    ebx
  40548b:	and    dh,BYTE PTR [eax-0x2a]
  40548e:	adc    esp,edx
  405490:	pop    es
  405491:	lods   eax,DWORD PTR ds:[esi]
  405492:	mov    esi,0xc7ba84
  405497:	and    DWORD PTR [esi],esp
  405499:	dec    esp
  40549a:	inc    ebp
  40549b:	test   BYTE PTR [eax-0x23],cl
  40549e:	out    0x7,al
  4054a0:	ror    BYTE PTR [edi-0x409ba5c2],cl
  4054a6:	xor    BYTE PTR [ebp-0x67],0xe3
  4054aa:	adc    al,0x5
  4054ac:	jo     0x40550a
  4054ae:	mov    cl,0xbc
  4054b0:	pop    ds
  4054b1:	es mov esp,0x414fe8
  4054b7:	add    BYTE PTR [ebp+0x25840fc0],al
  4054bd:	add    BYTE PTR [eax],al
  4054bf:	add    BYTE PTR [ebp-0x74af77bb],cl
  4054c5:	inc    ebp
  4054c6:	in     al,dx
  4054c7:	xor    eax,esi
  4054c9:	add    eax,edi
  4054cb:	push   eax
  4054cc:	mov    eax,DWORD PTR [ebp-0x10]
  4054cf:	add    eax,0xee
  4054d4:	push   eax
  4054d5:	mov    eax,DWORD PTR [ebp-0x10]
  4054d8:	mov    eax,DWORD PTR [eax+0x198]
  4054de:	push   DWORD PTR [eax]
  4054e0:	call   0x40ae4d
  4054e5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4054e8:	xor    ecx,esi
  4054ea:	mov    eax,0xffcd8d61
  4054ef:	sub    eax,ecx
  4054f1:	sub    eax,DWORD PTR [ebp-0x8]
  4054f4:	mov    ecx,DWORD PTR [ebp-0x30]
  4054f7:	add    ecx,eax
  4054f9:	mov    eax,DWORD PTR [ebp-0x8]
  4054fc:	jmp    0x405675
  405501:	lahf   
  405502:	(bad)  
  405503:	icebp  
  405504:	shl    DWORD PTR [ecx-0x50bea01f],1
  40550a:	icebp  
  40550b:	add    DWORD PTR [edi-0x50],0xffffff96
  40550f:	mov    eax,ds:0x7e77f23d
  405514:	jle    0x4054f0
  405516:	jg     0x405596
  405518:	jle    0x405579
  40551a:	int    0xe6
  40551c:	push   ebp
  40551d:	mov    ch,0x82
  40551f:	pop    ecx
  405520:	js     0x4054fe
  405522:	push   ecx
  405523:	ja     0x4054b3
  405525:	cmp    edx,edx
  405527:	xchg   ebx,eax
  405528:	out    dx,al
  405529:	push   eax
  40552a:	jmp    0x3b359e82
  40552f:	loop   0x4054f2
  405531:	pushf  
  405532:	bound  eax,QWORD PTR [ebx-0x72004dc2]
  405538:	jbe    0x405529
  40553a:	pop    esp
  40553b:	popf   
  40553c:	dec    edi
  40553d:	pop    ss
  40553e:	test   eax,0x8112cc89
  405543:	test   DWORD PTR [ecx-0x197a62bb],esi
  405549:	bound  ebx,QWORD PTR [edi-0x557a2ff9]
  40554f:	sbb    BYTE PTR [eax],al
  405551:	ins    DWORD PTR es:[edi],dx
  405552:	lods   eax,DWORD PTR ds:[esi]
  405553:	test   BYTE PTR [ecx],cl
  405555:	mov    dl,0x77
  405557:	(bad)  
  405558:	mov    edi,0x9be5c67b
  40555d:	lea    ecx,[edx]
  40555f:	aam    0x16
  405561:	andnps xmm2,xmm6
  405564:	cmc    
  405565:	jg     0x40558e
  405567:	ror    BYTE PTR [esi-0x5b],1
  40556a:	mov    ah,0xbe
  40556c:	sub    DWORD PTR [ebx+edx*2],0xddda8db8
  405573:	sbb    eax,0x51f696a7
  405578:	sbb    BYTE PTR [ecx+0x2de3a95e],al
  40557e:	(bad)  
  40557f:	out    dx,al
  405580:	xchg   edi,eax
  405581:	sbb    eax,0x1276a885
  405586:	retf   0x7da1
  405589:	ja     0x405580
  40558b:	pop    eax
  40558c:	push   0xffffff85
  40558e:	sahf   
  40558f:	loope  0x405526
  405591:	push   ebx
  405592:	inc    ebp
  405593:	mov    DWORD PTR [edx],ebp
  405595:	neg    DWORD PTR ds:[ebx]
  405598:	ror    DWORD PTR [ebp+0x2e],1
  40559b:	cmp    bl,0xe4
  40559e:	xchg   esi,eax
  40559f:	jp     0x405578
  4055a1:	aas    
  4055a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055a3:	call   DWORD PTR [esi]
  4055a5:	nop
  4055a6:	push   ss
  4055a7:	into   
  4055a8:	sar    DWORD PTR [edx+0x12],0x91
  4055ac:	sub    esi,DWORD PTR [edi-0x42]
  4055af:	lahf   
  4055b0:	jecxz  0x4055b4
  4055b2:	xor    bl,BYTE PTR [ecx+0x51]
  4055b5:	ss dec ebp
  4055b7:	adc    cl,cl
  4055b9:	mov    cs,WORD PTR [ebp-0x52]
  4055bc:	inc    ebx
  4055bd:	scas   eax,DWORD PTR es:[edi]
  4055be:	xor    bh,ch
  4055c0:	jb     0x40561f
  4055c2:	pop    ebx
  4055c3:	mov    esp,0x70216e87
  4055c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055c9:	mov    ebx,0x2c276f3b
  4055ce:	sub    DWORD PTR [ecx+0x2c],ebp
  4055d1:	aas    
  4055d2:	rcr    BYTE PTR [ebx-0x600897a8],0xf8
  4055d9:	out    dx,eax
  4055da:	jo     0x4055c1
  4055dc:	popf   
  4055dd:	dec    DWORD PTR [ebp-0x60]
  4055e0:	mov    ah,0xba
  4055e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055e3:	shl    eax,0xee
  4055e6:	sahf   
  4055e7:	lods   al,BYTE PTR ds:[esi]
  4055e8:	pushf  
  4055e9:	mov    ah,0x16
  4055eb:	jne    0x4055cc
  4055ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055ee:	or     cl,BYTE PTR [edi]
  4055f0:	addr16 mov ch,0x85
  4055f3:	or     DWORD PTR [esi+0x3b],ecx
  4055f6:	cmp    ebp,DWORD PTR [edi+0x24]
  4055f9:	scas   eax,DWORD PTR es:[edi]
  4055fa:	mov    BYTE PTR [ebp+0x4],dh
  4055fd:	sub    al,0x5c
  4055ff:	xlat   BYTE PTR ds:[ebx]
  405600:	xor    ebp,DWORD PTR [eiz*8+0x2c93ac3d]
  405607:	and    ah,al
  405609:	iret   
  40560a:	mov    ch,0x99
  40560c:	addr16 fwait
  40560e:	pavgw  mm6,mm2
  405611:	xor    dh,BYTE PTR [ebx+ecx*2-0x55daccde]
  405618:	lahf   
  405619:	iret   
  40561a:	call   0x244a:0x2c743612
  405621:	xchg   al,dh
  405623:	add    dl,BYTE PTR [ecx+0x60]
  405626:	pushf  
  405627:	cmp    al,bl
  405629:	sub    bh,BYTE PTR [edi+ebx*4-0x4c]
  40562d:	inc    esi
  40562e:	(bad)  
  40562f:	mov    esp,0x3c3558f5
  405634:	popa   
  405635:	push   ds
  405636:	mov    cl,0xb1
  405638:	pop    ss
  405639:	je     0x4056ab
  40563b:	push   ecx
  40563c:	les    ebx,FWORD PTR [ebx-0x482eb94d]
  405642:	push   esp
  405643:	test   DWORD PTR [esi-0x79043ded],esp
  405649:	cwde   
  40564a:	fist   WORD PTR [esp+edi*8+0x67ba39fb]
  405651:	jle    0x40561b
  405653:	mul    DWORD PTR [edi]
  405655:	sbb    ecx,DWORD PTR [esi+ecx*8]
  405658:	jmp    0xb99c45b8
  40565d:	pop    es
  40565e:	pop    es
  40565f:	or     DWORD PTR [esi+ecx*8+0x716ee8aa],eax
  405666:	iret   
  405667:	repnz lods al,BYTE PTR ds:[esi]
  405669:	cmp    al,0xf7
  40566b:	xor    bh,BYTE PTR [ebp-0x2306e1b1]
  405671:	and    eax,0x89336ee5
  405676:	dec    eax
  405677:	add    DWORD PTR [edx+0x4d8bff45],ecx
  40567d:	clc    
  40567e:	xor    al,0x4a
  405680:	sub    al,0x34
  405682:	mov    BYTE PTR [ecx],al
  405684:	lea    eax,[ebp-0x8]
  405687:	inc    BYTE PTR [eax]
  405689:	inc    eax
  40568a:	push   eax
  40568b:	pop    ecx
  40568c:	dec    ecx
  40568d:	xchg   ecx,edx
  40568f:	jmp    0x405808
  405694:	mov    gs,WORD PTR [edi+0x79]
  405697:	in     eax,0x79
  405699:	stc    
  40569a:	and    BYTE PTR [ebp-0x3],0xf5
  40569e:	cmp    esp,eax
  4056a0:	sub    eax,0x5e9adeba
  4056a5:	je     0x405725
  4056a7:	jle    0x405683
  4056a9:	jg     0x405729
  4056ab:	jle    0x40565b
  4056ad:	sub    eax,0x8087c2f6
  4056b2:	mov    edx,DWORD PTR [eax-0x62]
  4056b5:	push   edi
  4056b6:	popa   
  4056b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056b8:	fcomi  st,st(0)
  4056ba:	ja     0x4056f8
  4056bc:	or     al,bl
  4056be:	jne    0x4056db
  4056c0:	cmp    ah,al
  4056c2:	sbb    eax,esi
  4056c4:	lods   al,BYTE PTR ds:[esi]
  4056c5:	mov    dh,0xf3
  4056c7:	push   ecx
  4056c8:	dec    ebp
  4056c9:	repz int 0x10
  4056cc:	clc    
  4056cd:	aam    0x74
  4056cf:	repnz pushf 
  4056d1:	leave  
  4056d2:	mov    ss,WORD PTR [ebp-0x6c24bd00]
  4056d8:	sub    DWORD PTR [ebx-0x2ea0c1f4],edi
  4056de:	imul   eax,DWORD PTR [edx+0x61],0x26
  4056e2:	(bad)  
  4056e3:	and    esp,ecx
  4056e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056e6:	pop    eax
  4056e7:	mov    ah,BYTE PTR [edx]
  4056e9:	mov    ch,ch
  4056eb:	xchg   edi,eax
  4056ec:	mov    ?,WORD PTR [eax-0x457aecc3]
  4056f2:	loop   0x405709
  4056f4:	retf   
  4056f5:	iret   
  4056f6:	ds mov ebx,0xf8ae3207
  4056fc:	test   al,0x6a
  4056fe:	inc    eax
  4056ff:	iret   
  405700:	dec    DWORD PTR [edx+0x8]
  405703:	mov    ds:0x4d14fd8c,al
  405708:	hlt    
  405709:	push   esi
  40570a:	stc    
  40570b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40570c:	int    0x6
  40570e:	jp     0x40569e
  405710:	aaa    
  405711:	dec    edi
  405712:	add    DWORD PTR [ebx],0xffffffe6
  405715:	fild   WORD PTR [esi-0x26]
  405718:	nop
  405719:	icebp  
  40571a:	(bad)  
  40571b:	mov    eax,0xa0dc9277
  405720:	call   0x79c33f98
  405725:	mov    al,ds:0xd19aacd9
  40572a:	cmp    eax,0x3289d798
  40572f:	je     0x405707
  405731:	xchg   edi,eax
  405732:	xchg   edi,eax
  405733:	sub    al,0xa
  405735:	mov    bl,0x30
  405737:	(bad)  
  405738:	cmp    al,0x36
  40573a:	xchg   ecx,eax
  40573b:	xor    al,0xc1
  40573d:	dec    ebx
  40573e:	jbe    0x4056ec
  405740:	sub    al,0xf4
  405742:	mov    al,0x76
  405744:	pop    edi
  405745:	adc    BYTE PTR es:[ebp-0x3d6a254d],0x75
  40574d:	jbe    0x4057bb
  40574f:	and    BYTE PTR [edi+0x52],al
  405752:	mov    ds:0x2947eded,eax
  405757:	pop    ecx
  405758:	mov    ch,0x6f
  40575a:	bound  esi,QWORD PTR [edx]
  40575c:	or     eax,edx
  40575e:	push   edi
  40575f:	test   DWORD PTR [eax-0x48ee4aba],ebp
  405765:	jmp    0xbc0f:0x3c2ca26
  40576c:	adc    BYTE PTR [edi+ecx*8-0x5d43ddfe],bl
  405773:	ds cmp eax,0x9045153d
  405779:	sub    al,0xc1
  40577b:	sbb    BYTE PTR [esp+ebp*8-0x3863c699],cl
  405782:	stc    
  405783:	pop    ds
  405784:	ffreep st(3)
  405786:	stos   BYTE PTR es:[edi],al
  405787:	adc    dh,BYTE PTR [esi]
  405789:	jl     0x405728
  40578b:	imul   esp,DWORD PTR [ecx-0x13],0x38fe78c0
  405792:	xor    eax,0x363e4d93
  405797:	mov    edi,0x8e8dc195
  40579c:	fmul   DWORD PTR [ebx+0x1d7a7be8]
  4057a2:	sti    
  4057a3:	push   eax
  4057a4:	add    eax,0x36fc7981
  4057a9:	retf   0x74ab
  4057ac:	fst    DWORD PTR [esi]
  4057ae:	scas   eax,DWORD PTR es:[edi]
  4057af:	mov    dh,0xc6
  4057b1:	mov    eax,ds:0x562229a
  4057b6:	inc    ebx
  4057b7:	pop    eax
  4057b8:	lock dec ebx
  4057ba:	mov    DWORD PTR [edx-0x6d],ebp
  4057bd:	cmc    
  4057be:	enter  0xc09b,0xb1
  4057c2:	bound  edx,QWORD PTR [esi]
  4057c4:	out    dx,al
  4057c5:	ret    
  4057c6:	dec    BYTE PTR ds:0xc1880939
  4057cc:	retf   0x374c
  4057cf:	ror    DWORD PTR [edi+ebx*2+0x1f],1
  4057d3:	inc    ecx
  4057d4:	or     edi,ebx
  4057d6:	and    al,0x64
  4057d8:	mov    edi,0xe4cd0130
  4057dd:	(bad)  
  4057de:	daa    
  4057df:	mov    cl,BYTE PTR [edx]
  4057e1:	sbb    DWORD PTR [ebx+0x54ed7896],eax
  4057e7:	imul   BYTE PTR [edx-0x2485a8ee]
  4057ed:	fcompp 
  4057ef:	jecxz  0x4057b4
  4057f1:	imul   esi,DWORD PTR [esi],0x3a1875b4
  4057f7:	mov    cl,0x28
  4057f9:	rcl    DWORD PTR [edx-0x6d],1
  4057fc:	dec    esp
  4057fd:	fiadd  DWORD PTR [esi-0x7ea69f61]
  405803:	std    
  405804:	rcl    BYTE PTR [edi],cl
  405806:	sbb    al,0x95
  405808:	dec    BYTE PTR [edx]
  40580a:	push   DWORD PTR [ebp-0x10]
  40580d:	mov    eax,ds:0x40d68c
  405812:	mov    eax,DWORD PTR [eax]
  405814:	push   DWORD PTR [eax]
  405816:	lea    eax,ds:0x40d6a8
  40581c:	push   DWORD PTR [eax]
  40581e:	lea    eax,ds:0x40d454
  405824:	push   DWORD PTR [eax]
  405826:	lea    eax,ds:0x40d688
  40582c:	push   DWORD PTR [eax]
  40582e:	lea    eax,ds:0x40d784
  405834:	push   DWORD PTR [eax]
  405836:	xchg   ebx,edx
  405838:	inc    ebx
  405839:	inc    ebx
  40583a:	sub    ebx,0x3
  40583d:	push   ebx
  40583e:	pop    eax
  40583f:	call   DWORD PTR [eax+0x1]
  405842:	mov    eax,DWORD PTR [ebp-0x20]
  405845:	jmp    0x4059be
  40584a:	mov    WORD PTR [edx+ebx*8+0x33],es
  40584e:	fidiv  DWORD PTR [ecx+0x8615985]
  405854:	or     al,0x32
  405856:	xor    ebp,DWORD PTR ds:0xa3a246a
  40585c:	jle    0x4058dc
  40585e:	fidivr DWORD PTR [edi+0x7e]
  405861:	jle    0x4058a3
  405863:	xchg   edi,eax
  405864:	xor    DWORD PTR [edx],ebx
  405866:	lods   eax,DWORD PTR ds:[esi]
  405867:	icebp  
  405868:	int3   
  405869:	xchg   ecx,eax
  40586a:	push   0x12823005
  40586f:	cwde   
  405870:	int3   
  405871:	inc    eax
  405872:	loop   0x4058e7
  405874:	add    eax,0xce67d1ed
  405879:	repnz in eax,dx
  40587b:	imul   ebp,DWORD PTR [ebx+0x737d1e4f],0xffffffc3
  405882:	jp     0x40587b
  405884:	sbb    ah,BYTE PTR [ecx]
  405886:	pop    edi
  405887:	push   eax
  405888:	lods   al,BYTE PTR ds:[esi]
  405889:	inc    esp
  40588a:	outs   dx,BYTE PTR ds:[esi]
  40588b:	out    0xb4,al
  40588d:	daa    
  40588e:	pop    eax
  40588f:	sub    ecx,DWORD PTR [eax-0x500762d]
  405895:	mov    dl,0xb7
  405897:	xchg   edi,eax
  405898:	xor    esp,DWORD PTR [eax]
  40589a:	mov    BYTE PTR [ebx+0x44],ah
  40589d:	retf   0xe04f
  4058a0:	jle    0x40591f
  4058a2:	cwde   
  4058a3:	addr16 cdq 
  4058a5:	cdq    
  4058a6:	push   ebp
  4058a7:	add    al,0xb3
  4058a9:	arpl   WORD PTR [ecx+0x34],sp
  4058ac:	leave  
  4058ad:	jno    0x405844
  4058af:	repz into 
  4058b1:	(bad)  
  4058b2:	jg     0x405873
  4058b4:	je     0x405933
  4058b6:	jecxz  0x4058f0
  4058b8:	pop    ecx
  4058b9:	cld    
  4058ba:	add    bl,bl
  4058bc:	dec    ebx
  4058bd:	cmp    BYTE PTR [edx],al
  4058bf:	aaa    
  4058c0:	jmp    0x87378cef
  4058c5:	push   eax
  4058c6:	pop    ds
  4058c7:	sbb    edx,DWORD PTR [ebp-0x3c]
  4058ca:	lock jecxz 0x405889
  4058cd:	outs   dx,DWORD PTR ds:[esi]
  4058ce:	mov    edi,0x3e97b27f
  4058d3:	jl     0x4058c5
  4058d5:	adc    BYTE PTR [edx-0x6a398c16],0x4e
  4058dc:	jp     0x40586c
  4058de:	cmp    edi,DWORD PTR [edi-0x541e89da]
  4058e4:	clc    
  4058e5:	in     eax,dx
  4058e6:	imul   esp,DWORD PTR [edi-0x32],0xffffff8a
  4058ea:	pop    es
  4058eb:	pop    es
  4058ec:	daa    
  4058ed:	inc    ebx
  4058ee:	mov    ebp,edx
  4058f0:	push   ebp
  4058f1:	jmp    0x405883
  4058f3:	or     BYTE PTR ds:0x2bef0b32,bh
  4058f9:	cld    
  4058fa:	xor    cl,BYTE PTR [ebx-0x26]
  4058fd:	rol    DWORD PTR [edi],0x4b
  405900:	aam    0x56
  405902:	mov    ds:0x1ea8d38a,al
  405907:	or     DWORD PTR [ebx+0x4b94fda7],ebx
  40590d:	out    0xc7,al
  40590f:	mov    dl,0x3f
  405911:	(bad)  
  405912:	sub    al,0x4e
  405914:	mov    edi,0x7a7bc3a2
  405919:	mov    esp,0xff38d735
  40591e:	cmp    BYTE PTR [ebx],0x9
  405921:	(bad)  
  405922:	cld    
  405923:	daa    
  405924:	fdiv   QWORD PTR ds:0xdafdb8af
  40592a:	push   ecx
  40592b:	inc    ebp
  40592c:	and    bh,BYTE PTR [edi-0x6]
  40592f:	push   ebx
  405930:	xchg   ebp,eax
  405931:	inc    eax
  405932:	call   0xce27:0x2036f750
  405939:	jmp    0x4059ad
  40593b:	inc    edx
  40593c:	dec    ecx
  40593d:	mov    al,0xd8
  40593f:	cld    
  405940:	out    dx,eax
  405941:	add    ch,BYTE PTR [edx+edi*4-0x47]
  405945:	cmp    eax,0x42e4a4f9
  40594a:	outs   dx,BYTE PTR ds:[esi]
  40594b:	add    BYTE PTR fs:[esi+0x77],ah
  40594f:	ret    
  405950:	or     al,0xc7
  405952:	iret   
  405953:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405954:	jns    0x405927
  405956:	pop    es
  405957:	jo     0x40594b
  405959:	call   0x18ff:0x8dfbbf83
  405960:	adc    eax,0x5418d715
  405965:	dec    edi
  405966:	stos   DWORD PTR es:[edi],eax
  405967:	pushf  
  405968:	inc    eax
  405969:	clc    
  40596a:	jecxz  0x40595e
  40596c:	addr16 push ecx
  40596e:	push   eax
  40596f:	mov    WORD PTR [eax],es
  405971:	and    al,al
  405973:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405974:	xor    DWORD PTR [ebp+0x77],ebx
  405977:	jl     0x40590e
  405979:	mov    bh,0xd3
  40597b:	mov    ch,0xa3
  40597d:	sub    BYTE PTR [esi-0x2c319190],bh
  405983:	and    ch,ah
  405985:	cld    
  405986:	cs cwde 
  405988:	pushf  
  405989:	pusha  
  40598a:	pop    ebp
  40598b:	cmp    ecx,DWORD PTR ds:0x94abb3c0
  405991:	nop
  405992:	and    DWORD PTR [eax-0x26116010],0x1e58cc97
  40599c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40599d:	pop    esp
  40599e:	inc    DWORD PTR [edx]
  4059a0:	imul   ecx,DWORD PTR [ecx-0x63482007],0xbafb470c
  4059aa:	mov    DWORD PTR [edx+0x5f],eax
  4059ad:	pop    esi
  4059ae:	cwde   
  4059af:	mov    WORD PTR [si],ss
  4059b2:	mov    esp,0xa333f567
  4059b7:	sub    DWORD PTR [eax+0xb76a422],0xffffffbc
  4059be:	mov    ecx,DWORD PTR ds:0x40d64c
  4059c4:	add    DWORD PTR [eax],ecx
  4059c6:	pop    edi
  4059c7:	pop    esi
  4059c8:	pop    ebx
  4059c9:	leave  
  4059ca:	ret    
  4059cb:	push   ebp
  4059cc:	mov    ebp,esp
  4059ce:	sub    esp,0x44
  4059d1:	push   edi
  4059d2:	sub    eax,DWORD PTR ds:0x4245b6
  4059d8:	mov    eax,DWORD PTR [ebp+0xc]
  4059db:	or     DWORD PTR ds:0x417e4d,edx
  4059e1:	mov    DWORD PTR [ebp-0x10],eax
  4059e4:	mov    DWORD PTR ds:0x417e55,0x17
  4059ee:	cmp    DWORD PTR ds:0x417e55,0x0
  4059f5:	je     0x405a59
  4059fb:	cmp    DWORD PTR ds:0x417e55,0x6
  405a02:	jne    0x405a2b
  405a08:	push   DWORD PTR [ebp-0x24]
  405a0b:	push   DWORD PTR [ebp-0x28]
  405a0e:	push   0x417e45
  405a13:	push   0x80ed
  405a18:	push   0x67be
  405a1d:	push   0x6b4c
  405a22:	push   DWORD PTR [ebp-0x20]
  405a25:	call   DWORD PTR ds:0x40d1cc
  405a2b:	cmp    DWORD PTR ds:0x417e55,0x7
  405a32:	jne    0x405a47
  405a38:	xor    ecx,ecx
  405a3a:	or     ecx,DWORD PTR ds:0x417e55
  405a40:	dec    ecx
  405a41:	mov    DWORD PTR ds:0x417e55,ecx
  405a47:	mov    ecx,DWORD PTR ds:0x417e55
  405a4d:	dec    ecx
  405a4e:	mov    DWORD PTR ds:0x417e55,ecx
  405a54:	jmp    0x4059ee
  405a59:	mov    eax,DWORD PTR [ebp+0x8]
  405a5c:	or     DWORD PTR ds:0x417e41,0x3fc5
  405a66:	mov    DWORD PTR [ebp+0x8],0xf89c8538
  405a6d:	xor    ecx,ecx
  405a6f:	add    ecx,DWORD PTR ds:0x4245b2
  405a75:	and    DWORD PTR ds:0x41abd6,ecx
  405a7b:	mov    DWORD PTR [ebp-0x20],0xf89c853b
  405a82:	mov    edx,DWORD PTR [ebp+0x8]
  405a85:	mov    DWORD PTR [ebp-0x40],eax
  405a88:	mov    eax,0x7510859
  405a8d:	xor    edx,eax
  405a8f:	adc    ecx,ecx
  405a91:	mov    ecx,0x32729f
  405a96:	movzx  edi,WORD PTR ds:0x41510d
  405a9d:	sbb    DWORD PTR ds:0x4245be,edi
  405aa3:	add    edx,ecx
  405aa5:	add    DWORD PTR ds:0x412354,0x1575
  405aaf:	mov    DWORD PTR [ebp-0x8],edx
  405ab2:	jmp    0x405c04
  405ab7:	(bad)  [edi+ebp*4-0x19]
  405abb:	mov    eax,ds:0x80785be5
  405ac0:	cmp    DWORD PTR ds:[edi],edx
  405ac3:	pop    ecx
  405ac4:	jecxz  0x405b1e
  405ac6:	jno    0x405a4e
  405ac8:	or     edi,DWORD PTR [esi+0x7e]
  405acb:	and    edi,DWORD PTR [edi+0x7e]
  405ace:	jle    0x405b41
  405ad0:	or     dh,BYTE PTR [ecx-0x24]
  405ad3:	cwde   
  405ad4:	outs   dx,DWORD PTR ds:[esi]
  405ad5:	mov    bh,0x9b
  405ad7:	sbb    BYTE PTR [ebp-0x3ec9f96],ch
  405add:	mov    WORD PTR [edx+0x9],cs
  405ae0:	and    al,0x0
  405ae2:	fcom   DWORD PTR [edx-0x79]
  405ae5:	add    al,0x8c
  405ae7:	sahf   
  405ae8:	lods   eax,DWORD PTR ds:[esi]
  405ae9:	fst    st(1)
  405aeb:	push   ds
  405aec:	das    
  405aed:	ja     0x405a94
  405aef:	push   es
  405af0:	jb     0x405b59
  405af2:	mov    BYTE PTR [ecx+0x5e4a845a],ch
  405af8:	sbb    al,0x3d
  405afa:	retf   
  405afb:	push   eax
  405afc:	or     al,ah
  405afe:	mov    esi,0xc28eb47d
  405b03:	outs   dx,BYTE PTR ds:[esi]
  405b04:	scas   eax,DWORD PTR es:[edi]
  405b05:	push   ebp
  405b06:	adc    al,0x38
  405b08:	add    eax,0xd75fa96c
  405b0d:	fucomip st,st(5)
  405b0f:	ins    DWORD PTR es:[edi],dx
  405b10:	loope  0x405aff
  405b12:	sbb    BYTE PTR [ebx+0x42ac5813],ch
  405b18:	aad    0xa1
  405b1a:	daa    
  405b1b:	sar    BYTE PTR [ebx+0x5de0d64],0xf1
  405b22:	pop    esi
  405b23:	adc    BYTE PTR [ecx-0x4ff7639],bl
  405b29:	dec    ecx
  405b2a:	sbb    al,0x6f
  405b2c:	aad    0xf2
  405b2e:	add    DWORD PTR [edi+0x420640ef],ebp
  405b34:	jmp    0x7eb7:0xb8f9c329
  405b3b:	(bad)  
  405b3d:	loop   0x405ac5
  405b3f:	jmp    0x39bf:0xf5b4f9cf
  405b46:	pop    ebp
  405b47:	das    
  405b48:	stos   DWORD PTR es:[edi],eax
  405b49:	push   edi
  405b4a:	xor    edx,DWORD PTR [eax]
  405b4c:	das    
  405b4d:	push   ebx
  405b4e:	adc    esi,DWORD PTR [ebx]
  405b50:	in     al,dx
  405b51:	inc    edx
  405b52:	mov    bh,0xb4
  405b54:	or     ebx,DWORD PTR [ecx-0x1d]
  405b57:	dec    eax
  405b58:	lock mov ah,ch
  405b5b:	imul   esp
  405b5d:	jmp    DWORD PTR [ebp+0x14f6c38c]
  405b63:	test   eax,0xdbb770e0
  405b68:	inc    esi
  405b69:	sahf   
  405b6a:	mov    es,WORD PTR [ebx-0x7cdd2ca0]
  405b70:	ja     0x405bb5
  405b72:	data16 mov cl,0x43
  405b75:	dec    esp
  405b76:	sbb    DWORD PTR [edi-0x13],0x8bd09216
  405b7d:	push   edi
  405b7e:	cmp    BYTE PTR [edi],bl
  405b80:	mov    esp,0x6080ace
  405b85:	pop    ecx
  405b86:	gs xchg edi,eax
  405b88:	xlat   BYTE PTR ds:[ebx]
  405b89:	out    0xd6,eax
  405b8b:	pop    ecx
  405b8c:	sbb    al,0xb5
  405b8e:	lods   al,BYTE PTR ds:[esi]
  405b8f:	bound  ebx,QWORD PTR [ebx+0x18]
  405b92:	retf   0x4662
  405b95:	adc    ecx,ecx
  405b97:	pop    edx
  405b98:	arpl   WORD PTR [eax+0x6],di
  405b9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b9c:	mov    cl,0xb7
  405b9e:	(bad)  
  405b9f:	daa    
  405ba0:	or     ebx,ebx
  405ba2:	cdq    
  405ba3:	xor    eax,0xf973ec2b
  405ba8:	mov    dl,0xb4
  405baa:	pop    edx
  405bab:	jecxz  0x405bd9
  405bad:	dec    ebp
  405bae:	out    0x9f,al
  405bb0:	pop    eax
  405bb1:	mov    ebp,0x2f8d14b2
  405bb6:	adc    edx,eax
  405bb8:	mov    edx,0x1f74ebbe
  405bbd:	push   edx
  405bbe:	xchg   ebx,eax
  405bbf:	pop    esi
  405bc0:	mov    esi,0xf5898ebb
  405bc5:	push   ebx
  405bc6:	xor    DWORD PTR [edi+0x3a],ebp
  405bc9:	xchg   ebx,eax
  405bca:	pop    edi
  405bcb:	les    eax,FWORD PTR [ecx-0x74c05cb3]
  405bd1:	enter  0x3397,0x87
  405bd5:	stos   BYTE PTR es:[edi],al
  405bd6:	xor    esp,esp
  405bd8:	jae    0x405c23
  405bda:	scas   al,BYTE PTR es:[edi]
  405bdb:	sbb    al,0xe4
  405bdd:	or     edx,DWORD PTR [ecx-0x3b]
  405be0:	js     0x405bfa
  405be2:	inc    edx
  405be3:	lea    eax,[eax-0x1d]
  405be6:	loopne 0x405c16
  405be8:	(bad)
  405beb:	sti    
  405bec:	sub    ch,BYTE PTR [ecx+0x79d99a71]
  405bf2:	adc    al,bl
  405bf4:	push   esi
  405bf5:	xlat   BYTE PTR ds:[ebx]
  405bf6:	or     al,BYTE PTR [edi-0x194357da]
  405bfc:	repnz fadd st,st(3)
  405bff:	fwait
  405c00:	xor    BYTE PTR [ebx+0x558b26ed],cl
  405c06:	or     BYTE PTR [ecx+0x4245c625],al
  405c0c:	add    BYTE PTR [eax],al
  405c0e:	add    BYTE PTR [eax],al
  405c10:	add    cl,ch
  405c12:	sldt   WORD PTR [eax]
  405c15:	add    BYTE PTR [ebx],dh
  405c17:	dec    DWORD PTR [ebx]
  405c19:	cmp    eax,0x4245c6
  405c1e:	inc    edi
  405c1f:	mov    DWORD PTR ds:0x4245c6,edi
  405c25:	cmp    DWORD PTR ds:0x4245c6,0x11
  405c2c:	jae    0x405c53
  405c32:	cmp    DWORD PTR ds:0x4245c6,0x1a
  405c39:	jne    0x405c48
  405c3f:	push   DWORD PTR [ebp-0x1c]
  405c42:	call   DWORD PTR ds:0x40d29c
  405c48:	jmp    0x405c16
  405c4d:	xor    DWORD PTR ds:0x412358,ebx
  405c53:	xor    edx,eax
  405c55:	add    edx,ecx
  405c57:	jmp    0x405da9
  405c5c:	xchg   edi,eax
  405c5d:	(bad)  
  405c5e:	call   0xe86f:0x6bdabbc6
  405c65:	pop    ds
  405c66:	jb     0x405cc2
  405c68:	mov    BYTE PTR [esi+0x47],dl
  405c6b:	xor    DWORD PTR [ebx+0x8],ecx
  405c6e:	jle    0x405cee
  405c70:	and    edi,DWORD PTR [edi+0x7e]
  405c73:	jle    0x405c61
  405c75:	mov    bl,BYTE PTR [edi+0xbd9d34a]
  405c7b:	mov    edx,0xdf8c5689
  405c80:	jge    0x405cfc
  405c82:	or     ebp,DWORD PTR [eax+0x2c52884d]
  405c88:	retf   0x86ca
  405c8b:	cmp    DWORD PTR [ecx],0xcb423dd9
  405c91:	jns    0x405c68
  405c93:	retf   
  405c94:	(bad)  
  405c95:	push   ebp
  405c96:	add    DWORD PTR [edi-0x53e0a285],esp
  405c9c:	push   esp
  405c9d:	sub    ecx,DWORD PTR [eax+0x42]
  405ca0:	stos   DWORD PTR es:[edi],eax
  405ca1:	inc    ebp
  405ca2:	pop    ebp
  405ca3:	enter  0x6944,0x19
  405ca7:	sbb    DWORD PTR [edx],ecx
  405ca9:	movntps XMMWORD PTR [edi-0xa51f6af],xmm3
  405cb0:	mov    ecx,DWORD PTR [esi+ebx*8+0x5e]
  405cb4:	jmp    0x405cfa
  405cb6:	enter  0x42,0x74
  405cba:	pop    edx
  405cbb:	sar    esi,cl
  405cbd:	fadd   st,st(2)
  405cbf:	ja     0x405c64
  405cc1:	sti    
  405cc2:	mov    DWORD PTR [esi],eax
  405cc4:	gs xchg ebx,eax
  405cc6:	mov    DWORD PTR [edi+ebx*4-0x63f32aef],0x486738bb
  405cd1:	mov    dl,0xfc
  405cd3:	cmp    eax,0x81adb3c0
  405cd8:	ins    DWORD PTR es:[edi],dx
  405cd9:	mov    DWORD PTR [eax-0x30],ebx
  405cdc:	mov    esi,0xc84f7379
  405ce1:	add    BYTE PTR ds:0x84dc91dd,ah
  405ce7:	add    dh,bl
  405ce9:	mov    dl,0xe1
  405ceb:	int3   
  405cec:	sub    bh,BYTE PTR [esi+0x1d]
  405cef:	scas   al,BYTE PTR es:[edi]
  405cf0:	pop    edi
  405cf1:	jns    0x405d61
  405cf3:	xor    BYTE PTR [ecx+0x4e],dl
  405cf6:	jle    0x405d54
  405cf8:	pusha  
  405cf9:	addr16 dec edx
  405cfb:	jge    0x405cae
  405cfd:	sub    al,0xcc
  405cff:	push   esp
  405d00:	sbb    DWORD PTR [esi+0x4c15ee3b],ecx
  405d06:	addr16 cli 
  405d08:	and    al,0x2
  405d0a:	out    dx,eax
  405d0b:	pop    edi
  405d0c:	push   edi
  405d0d:	outs   dx,DWORD PTR ds:[esi]
  405d0e:	jecxz  0x405d71
  405d10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d11:	jae    0x405d64
  405d13:	mov    eax,ds:0x571b90fe
  405d18:	aam    0x24
  405d1a:	stc    
  405d1b:	mov    eax,ds:0x785255dc
  405d20:	not    BYTE PTR [edi]
  405d22:	xchg   ebp,eax
  405d23:	xchg   esi,eax
  405d24:	jo     0x405d30
  405d26:	push   edi
  405d27:	jmp    0x5d3de868
  405d2c:	xchg   ecx,eax
  405d2d:	jge    0x405d5f
  405d2f:	xchg   DWORD PTR [esi+0x77fd1fae],ecx
  405d35:	cmc    
  405d36:	dec    ecx
  405d37:	cmp    eax,0xfa0b935
  405d3c:	ja     0x405d78
  405d3e:	inc    ecx
  405d3f:	adc    dh,0x24
  405d42:	imul   esp,DWORD PTR [edx+0x65],0x6c80d860
  405d49:	ror    DWORD PTR [edi],cl
  405d4b:	jb     0x405d9e
  405d4d:	mov    esp,0x60be85dd
  405d52:	rcr    WORD PTR [ebp-0x7fec6e9c],1
  405d59:	jmp    0x7349:0x31e2864d
  405d60:	retf   0x65b7
  405d63:	sub    ch,BYTE PTR [esp+edx*1]
  405d66:	dec    esp
  405d67:	xchg   ebp,eax
  405d68:	inc    esi
  405d69:	xor    al,BYTE PTR [esi+0x500b6854]
  405d6f:	lods   eax,DWORD PTR fs:[esi]
  405d71:	(bad)  
  405d72:	not    BYTE PTR [esi]
  405d74:	ficom  WORD PTR [ebx-0x60]
  405d77:	pop    edi
  405d78:	dec    edx
  405d79:	mov    ebx,DWORD PTR [eax+0x7471c546]
  405d7f:	call   FWORD PTR ds:0x4dc5c828
  405d85:	pop    eax
  405d86:	and    al,0xe0
  405d88:	pop    ebp
  405d89:	jecxz  0x405d0d
  405d8b:	mov    al,ds:0x681a0ce0
  405d90:	mov    ecx,0xc2793ffb
  405d95:	xlat   BYTE PTR ds:[ebx]
  405d96:	mov    cl,0xcf
  405d98:	adc    cl,cl
  405d9a:	cld    
  405d9b:	sbb    BYTE PTR [edi+0x5e11bac],dh
  405da1:	sub    ebp,DWORD PTR [esi-0x2c]
  405da4:	retf   0x829a
  405da7:	mov    dh,0x8a
  405da9:	mov    DWORD PTR [ebp+0xc],edx
  405dac:	inc    edi
  405dad:	jmp    0x405eff
  405db2:	or     eax,0xb8afae9b
  405db7:	mov    ebx,0x598db90d
  405dbc:	or     al,0x3
  405dbe:	xchg   edx,eax
  405dbf:	pop    edx
  405dc0:	scas   eax,DWORD PTR es:[edi]
  405dc1:	test   eax,0x7e7e0e7c
  405dc6:	and    edi,DWORD PTR [edi+0x7e]
  405dc9:	jle    0x405d86
  405dcb:	push   0x1b
  405dcd:	sbb    DWORD PTR [edx],esi
  405dcf:	adc    BYTE PTR [eax],dl
  405dd1:	adc    al,0x67
  405dd3:	imul   DWORD PTR [esi+0x3c]
  405dd6:	rcr    BYTE PTR [esi-0x2bca3efd],1
  405ddc:	mov    bl,0x6c
  405dde:	repnz push 0xffffffe1
  405de1:	pop    esi
  405de2:	(bad)  
  405de4:	(bad)  
  405de5:	dec    esp
  405de6:	mov    eax,ds:0x9fd73874
  405deb:	push   ebx
  405dec:	outs   dx,DWORD PTR ds:[esi]
  405ded:	pop    ebp
  405dee:	sbb    bh,BYTE PTR [ecx+0x58277b14]
  405df4:	inc    esp
  405df5:	mov    ebx,0xe8fd9d03
  405dfa:	push   ds
  405dfb:	or     edi,edx
  405dfd:	cmp    BYTE PTR [eax-0x1c],al
  405e00:	sub    cl,BYTE PTR [edx-0x20c3f1f]
  405e06:	test   eax,0xfeb0b6f7
  405e0b:	mov    dl,0xa
  405e0d:	mov    DWORD PTR [ebx+0x483e9658],eax
  405e13:	cmp    dh,BYTE PTR [ecx+0x4d]
  405e16:	push   esp
  405e17:	inc    edi
  405e18:	add    dh,ah
  405e1a:	jge    0x405e86
  405e1c:	(bad)  
  405e1d:	cmp    cl,ch
  405e1f:	sbb    eax,0xc53594b4
  405e24:	mov    ebx,DWORD PTR [esi]
  405e26:	push   eax
  405e27:	cmp    ebx,DWORD PTR [edi+0x565b219]
  405e2d:	in     al,0xaa
  405e2f:	retf   
  405e30:	xor    DWORD PTR [ebx+ebx*4-0x27a46b81],ecx
  405e37:	xchg   esp,eax
  405e38:	push   esi
  405e39:	sub    al,0x4b
  405e3b:	ror    bl,cl
  405e3d:	or     edx,DWORD PTR [eax]
  405e3f:	aas    
  405e40:	sahf   
  405e41:	mov    cl,0x35
  405e43:	mov    ebp,0xc1677a7e
  405e48:	jns    0x405e07
  405e4a:	lods   al,BYTE PTR ds:[esi]
  405e4b:	push   es
  405e4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e4d:	pop    ds
  405e4e:	xchg   edx,eax
  405e4f:	mov    bh,0xf9
  405e51:	in     al,0x2e
  405e53:	mov    ch,BYTE PTR [esp+edx*1+0x62b98d2b]
  405e5a:	lahf   
  405e5b:	nop
  405e5c:	mov    edi,0x36267e27
  405e61:	lds    eax,FWORD PTR [ebp+0x504e41fb]
  405e67:	int    0xb9
  405e69:	fcomp  DWORD PTR [eax+ecx*8-0x45384392]
  405e70:	pop    es
  405e71:	sahf   
  405e72:	mov    esi,cs
  405e74:	add    ebp,DWORD PTR [ebp-0x56df220e]
  405e7a:	mov    edi,0x8ae8d049
  405e7f:	ins    BYTE PTR es:[edi],dx
  405e80:	inc    eax
  405e81:	in     eax,0x9a
  405e83:	xchg   ebp,eax
  405e84:	add    BYTE PTR [eax-0x6b3fdc5f],ah
  405e8a:	jp     0x405ee6
  405e8c:	jmp    DWORD PTR [esi+ecx*2-0x7b]
  405e90:	in     al,0xf9
  405e92:	or     al,0xc8
  405e94:	sar    BYTE PTR [edx+eax*2+0x72382ea9],cl
  405e9b:	in     eax,0x6a
  405e9d:	add    bl,cl
  405e9f:	das    
  405ea0:	nop
  405ea1:	mov    eax,0x69b604b0
  405ea6:	addr16 adc al,0xc4
  405ea9:	adc    edx,edi
  405eab:	mov    edx,0xb2e8c367
  405eb0:	pop    edx
  405eb1:	out    dx,al
  405eb2:	sbb    BYTE PTR [edx],dl
  405eb4:	push   esi
  405eb5:	cmc    
  405eb6:	shl    BYTE PTR [edx+0xa],cl
  405eb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405eba:	sub    al,0x24
  405ebc:	test   BYTE PTR [eax-0x39],bh
  405ebf:	sbb    eax,0xadfcc9d4
  405ec4:	adc    bl,BYTE PTR [esi-0xe6a5391]
  405eca:	jo     0x405f17
  405ecc:	cmp    al,0x7f
  405ece:	aam    0x14
  405ed0:	rol    DWORD PTR [edx],1
  405ed2:	mov    cl,0xf3
  405ed4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ed5:	push   eax
  405ed6:	push   ecx
  405ed7:	ror    BYTE PTR [edi-0x78b7f622],0xff
  405ede:	daa    
  405edf:	adc    DWORD PTR [ebp-0x9],ecx
  405ee2:	or     esi,DWORD PTR [eax+0x7d75cef7]
  405ee8:	dec    ecx
  405ee9:	sub    BYTE PTR [ebx-0x567b125c],bl
  405eef:	push   ss
  405ef0:	push   ecx
  405ef1:	jg     0x405f44
  405ef3:	aaa    
  405ef4:	xor    eax,0x4ab5b037
  405ef9:	add    DWORD PTR [ecx-0x1b],esi
  405efc:	mov    ds:0x45c79c12,al
  405f01:	cld    
  405f02:	fadd   DWORD PTR [ebp-0xcc0764]
  405f08:	xor    edi,DWORD PTR ds:0x415109
  405f0e:	adc    edi,DWORD PTR ds:0x4245ae
  405f14:	mov    DWORD PTR ds:0x415109,edi
  405f1a:	mov    DWORD PTR [ebp-0x28],0xf89c853a
  405f21:	mov    DWORD PTR [ebp-0x2c],0xf89c853d
  405f28:	adc    edi,edi
  405f2a:	mov    DWORD PTR [ebp-0x30],0xf89c853c
  405f31:	or     DWORD PTR ds:0x4245be,edx
  405f37:	mov    DWORD PTR [ebp-0x34],0xf89c853f
  405f3e:	mov    DWORD PTR ds:0x417e41,0x15
  405f48:	cmp    DWORD PTR ds:0x417e41,0x0
  405f4f:	je     0x405fae
  405f55:	cmp    DWORD PTR ds:0x417e41,0x5
  405f5c:	jne    0x405f7c
  405f62:	push   0x43a6
  405f67:	push   0x41ac41
  405f6c:	push   0x41ac72
  405f71:	push   0x400000
  405f76:	call   DWORD PTR ds:0x40d1d0
  405f7c:	cmp    DWORD PTR ds:0x417e41,0x6
  405f83:	jne    0x405f96
  405f89:	mov    edi,DWORD PTR ds:0x417e41
  405f8f:	dec    edi
  405f90:	mov    DWORD PTR ds:0x417e41,edi
  405f96:	mov    edi,DWORD PTR ds:0x417e41
  405f9c:	dec    edi
  405f9d:	mov    DWORD PTR ds:0x417e41,edi
  405fa3:	jmp    0x405f48
  405fa8:	xor    edi,DWORD PTR ds:0x417e4d
  405fae:	mov    DWORD PTR [ebp-0x38],0xf89c853e
  405fb5:	and    DWORD PTR ds:0x412364,0xe44
  405fbf:	mov    DWORD PTR [ebp-0x3c],0xf89c8531
  405fc6:	or     DWORD PTR ds:0x417e49,0x6f97
  405fd0:	mov    edx,DWORD PTR [ebp+0x8]
  405fd3:	and    DWORD PTR ds:0x417e55,0x0
  405fdd:	jmp    0x405fef
  405fe2:	mov    edi,DWORD PTR ds:0x417e55
  405fe8:	inc    edi
  405fe9:	mov    DWORD PTR ds:0x417e55,edi
  405fef:	cmp    DWORD PTR ds:0x417e55,0x14
  405ff6:	jae    0x40601f
  405ffc:	cmp    DWORD PTR ds:0x417e55,0x1c
  406003:	jne    0x406014
  406009:	push   0x67ac
  40600e:	call   DWORD PTR ds:0x40d2a0
  406014:	jmp    0x405fe2
  406019:	sub    edi,DWORD PTR ds:0x412378
  40601f:	xor    edx,eax
  406021:	mov    edi,DWORD PTR [ebp-0x10]
  406024:	add    edx,ecx
  406026:	cmp    edi,edx
  406028:	mov    DWORD PTR ds:0x412368,0x5602
  406032:	je     0x407428
  406038:	mov    DWORD PTR ds:0x415109,0xf2d
  406042:	jmp    0x406194
  406047:	lock mov ebx,0xdc791c5b
  40604d:	jns    0x40600a
  40604f:	mov    eax,ds:0x21db13c5
  406054:	mov    dh,0xa4
  406056:	pop    es
  406057:	and    DWORD PTR [edi],ecx
  406059:	jle    0x4060d9
  40605b:	and    edi,DWORD PTR [edi+0x7e]
  40605e:	jle    0x4060da
  406060:	aas    
  406061:	bound  ecx,QWORD PTR [edi+0xe]
  406064:	mov    ebx,0x984eb9e
  406069:	ret    
  40606a:	scas   eax,DWORD PTR es:[edi]
  40606b:	xchg   edi,eax
  40606c:	xor    ch,BYTE PTR [edx-0x71709874]
  406072:	xlat   BYTE PTR ds:[ebx]
  406073:	lea    ecx,[edx+ecx*8-0xc]
  406077:	or     al,0x95
  406079:	mov    dh,0x99
  40607b:	out    0xdf,al
  40607d:	dec    edx
  40607e:	dec    ebp
  40607f:	hlt    
  406080:	cmc    
  406081:	call   0xce01c3ed
  406086:	loopne 0x4060e4
  406088:	push   esp
  406089:	cs cmp ah,0x76
  40608d:	pop    ds
  40608e:	scas   eax,DWORD PTR es:[edi]
  40608f:	cmp    DWORD PTR [esi+0x3c1862b7],esi
  406095:	out    dx,al
  406096:	sbb    BYTE PTR [eax+ecx*8],bl
  406099:	adc    eax,0x9bcd6c2f
  40609e:	dec    DWORD PTR [ebp-0x49]
  4060a1:	scas   al,BYTE PTR es:[edi]
  4060a2:	adc    edi,DWORD PTR [edi]
  4060a4:	inc    esp
  4060a5:	arpl   WORD PTR [esi-0x3025236d],bx
  4060ab:	xor    DWORD PTR [eax+ebx*2+0xedc4cc7],edi
  4060b2:	xor    bl,BYTE PTR [ecx]
  4060b4:	sub    ch,ch
  4060b6:	mov    BYTE PTR [eax],dl
  4060b8:	jno    0x406101
  4060ba:	pushw  0x1c
  4060bd:	clc    
  4060be:	(bad)  
  4060c0:	jae    0x406111
  4060c2:	in     al,0x8f
  4060c4:	shl    cl,cl
  4060c6:	sbb    dh,dl
  4060c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060c9:	pushf  
  4060ca:	and    al,BYTE PTR [esi-0x58d213c1]
  4060d0:	out    0xd6,al
  4060d2:	(bad)  
  4060d3:	mov    ebx,edi
  4060d5:	push   edi
  4060d6:	(bad)  
  4060d7:	fld    DWORD PTR [edi]
  4060d9:	test   eax,0x436f1633
  4060de:	stc    
  4060df:	inc    edi
  4060e0:	ss pop esi
  4060e2:	fist   WORD PTR [eax-0x12]
  4060e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060e6:	xor    al,0xec
  4060e8:	repnz mov DWORD PTR [edx-0x23c7e3af],0x60d6a431
  4060f3:	jg     0x40608d
  4060f5:	jnp    0x406107
  4060f7:	aas    
  4060f8:	hlt    
  4060f9:	out    0xdd,al
  4060fb:	xor    al,0xf2
  4060fd:	xor    al,0xe9
  4060ff:	loopne 0x4060b9
  406101:	loopne 0x406141
  406103:	adc    al,0xad
  406105:	mov    esp,0x3b09de76
  40610a:	sub    eax,0x342dece
  40610f:	aam    0x17
  406111:	sub    BYTE PTR [ebx+eiz*8-0x5678d6e1],ah
  406118:	dec    ebp
  406119:	mov    ebx,0x6079948a
  40611e:	gs xor al,0xe5
  406121:	fdiv   DWORD PTR [esp+eax*2+0x6c]
  406125:	sahf   
  406126:	sahf   
  406127:	ins    DWORD PTR es:[edi],dx
  406128:	xlat   BYTE PTR ds:[ebx]
  406129:	mov    WORD PTR [ecx+0x406c4f61],fs
  40612f:	pop    eax
  406130:	mov    dh,0x91
  406132:	cmp    cl,BYTE PTR [ebx-0xbca0314]
  406138:	shl    esi,0x2a
  40613b:	lock fcmovbe st,st(2)
  40613e:	dec    edx
  40613f:	(bad)  
  406140:	mov    ds:0x39c25ff3,eax
  406145:	jno    0x40611e
  406147:	mov    es,WORD PTR [edi-0x5c]
  40614a:	ds out 0x90,al
  40614d:	das    
  40614e:	add    al,0x42
  406150:	fistp  WORD PTR [eax+0x72]
  406153:	jnp    0x406195
  406155:	leave  
  406156:	aam    0x41
  406158:	xor    eax,0x992b9eea
  40615d:	ss in  al,0x9a
  406160:	push   ecx
  406161:	push   ebp
  406162:	jecxz  0x40618c
  406164:	or     bl,bh
  406166:	mov    esi,0x545a7546
  40616b:	mov    bl,0x28
  40616d:	cdq    
  40616e:	dec    esp
  40616f:	dec    eax
  406170:	sbb    cl,dl
  406172:	or     DWORD PTR [esi-0xd],ecx
  406175:	jns    0x406107
  406177:	ret    
  406178:	lock enter 0x4a24,0x9b
  40617d:	in     eax,dx
  40617e:	add    eax,0xc0bc250e
  406183:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406184:	inc    edi
  406185:	jge    0x40612f
  406187:	sub    esi,DWORD PTR [edi-0x7e585e9d]
  40618d:	jge    0x406121
  40618f:	inc    esp
  406190:	sub    eax,0x537b5562
  406195:	jmp    0x40715f
  40619a:	and    DWORD PTR ds:0x412370,0x0
  4061a4:	jmp    0x4061b6
  4061a9:	mov    edx,DWORD PTR ds:0x412370
  4061af:	inc    edx
  4061b0:	mov    DWORD PTR ds:0x412370,edx
  4061b6:	cmp    DWORD PTR ds:0x412370,0x1e
  4061bd:	jae    0x4061ea
  4061c3:	cmp    DWORD PTR ds:0x412370,0x2a
  4061ca:	jne    0x4061e3
  4061d0:	push   DWORD PTR [ebp-0x10]
  4061d3:	push   0x41acf1
  4061d8:	push   0x41ac28
  4061dd:	call   DWORD PTR ds:0x40d000
  4061e3:	jmp    0x4061a9
  4061e8:	adc    edi,edi
  4061ea:	mov    edx,DWORD PTR [ebp-0x8]
  4061ed:	mov    DWORD PTR ds:0x412364,0x11
  4061f7:	cmp    DWORD PTR ds:0x412364,0x0
  4061fe:	je     0x406239
  406204:	cmp    DWORD PTR ds:0x412364,0x14
  40620b:	jne    0x406227
  406211:	push   0x44a4
  406216:	push   DWORD PTR [ebp-0x20]
  406219:	push   0x788c
  40621e:	push   DWORD PTR [ebp-0x10]
  406221:	call   DWORD PTR ds:0x40d360
  406227:	mov    edi,DWORD PTR ds:0x412364
  40622d:	dec    edi
  40622e:	mov    DWORD PTR ds:0x412364,edi
  406234:	jmp    0x4061f7
  406239:	mov    edi,DWORD PTR [ebp-0x10]
  40623c:	or     DWORD PTR ds:0x41235c,0x6f22
  406246:	sub    edi,edx
  406248:	adc    DWORD PTR ds:0x4245b2,edi
  40624e:	mov    edx,DWORD PTR [ebp-0x4]
  406251:	adc    DWORD PTR ds:0x41abca,0x7639
  40625b:	xor    edx,eax
  40625d:	sbb    DWORD PTR ds:0x4245c2,0x415105
  406267:	add    edx,ecx
  406269:	mov    DWORD PTR ds:0x41abda,0x19aa
  406273:	cmp    edi,edx
  406275:	mov    DWORD PTR ds:0x4150fd,0x443e
  40627f:	jb     0x4072d5
  406285:	mov    edx,DWORD PTR [ebp-0x28]
  406288:	sbb    edi,0x1e1d
  40628e:	mov    edi,DWORD PTR [ebp-0x4]
  406291:	mov    ebx,DWORD PTR ds:0x417e45
  406297:	or     DWORD PTR ds:0x417e3d,ebx
  40629d:	xor    edx,eax
  40629f:	xor    edi,eax
  4062a1:	mov    DWORD PTR ds:0x417e55,0x5fc7
  4062ab:	add    edi,ecx
  4062ad:	dec    ebx
  4062ae:	add    edx,ecx
  4062b0:	dec    ebx
  4062b1:	imul   edx,edi
  4062b4:	sbb    DWORD PTR ds:0x41abe2,0x63fb
  4062be:	mov    edi,DWORD PTR [ebp-0x8]
  4062c1:	mov    DWORD PTR ds:0x41abd2,0x13
  4062cb:	cmp    DWORD PTR ds:0x41abd2,0x0
  4062d2:	je     0x406309
  4062d8:	cmp    DWORD PTR ds:0x41abd2,0x23
  4062df:	jne    0x4062f1
  4062e5:	push   DWORD PTR [ebp-0x18]
  4062e8:	push   DWORD PTR [ebp-0x24]
  4062eb:	call   DWORD PTR ds:0x40d364
  4062f1:	mov    ebx,DWORD PTR ds:0x41abd2
  4062f7:	dec    ebx
  4062f8:	mov    DWORD PTR ds:0x41abd2,ebx
  4062fe:	jmp    0x4062cb
  406303:	sbb    ebx,0x2ce7
  406309:	mov    ebx,DWORD PTR [ebp-0x10]
  40630c:	inc    DWORD PTR ds:0x41abce
  406312:	sub    ebx,edi
  406314:	mov    DWORD PTR ds:0x4245c6,0x7511
  40631e:	cmp    ebx,edx
  406320:	mov    DWORD PTR ds:0x41abd2,0x3d79
  40632a:	ja     0x40635a
  406330:	mov    edx,DWORD PTR [ebp-0x4]
  406333:	mov    DWORD PTR ds:0x412368,0x316e
  40633d:	xor    edx,eax
  40633f:	add    DWORD PTR ds:0x415109,0x4882
  406349:	add    edx,ecx
  40634b:	mov    DWORD PTR ds:0x417e59,0x234c
  406355:	jmp    0x40672b
  40635a:	mov    edx,DWORD PTR [ebp-0x2c]
  40635d:	sbb    DWORD PTR ds:0x412370,0x4f34
  406367:	mov    edi,DWORD PTR [ebp-0x4]
  40636a:	and    ebx,0x5352
  406370:	xor    edx,eax
  406372:	and    DWORD PTR ds:0x415111,0x0
  40637c:	jmp    0x40638e
  406381:	mov    ebx,DWORD PTR ds:0x415111
  406387:	inc    ebx
  406388:	mov    DWORD PTR ds:0x415111,ebx
  40638e:	cmp    DWORD PTR ds:0x415111,0x16
  406395:	jae    0x406508
  40639b:	cmp    DWORD PTR ds:0x415111,0x1c
  4063a2:	jne    0x4063b1
  4063a8:	push   DWORD PTR [ebp-0x1c]
  4063ab:	call   DWORD PTR ds:0x40d1d4
  4063b1:	jmp    0x406381
  4063b6:	jmp    0x406508
  4063bb:	add    eax,DWORD PTR [esi]
  4063bd:	mov    al,ds:0xf969b94b
  4063c2:	inc    esi
  4063c3:	popf   
  4063c4:	imul   ebp,DWORD PTR [ebx+0x3c3fd918],0xffffffee
  4063cb:	jmp    0x7e7f:0x237e7e0c
  4063d2:	jle    0x406405
  4063d4:	push   ecx
  4063d5:	jmp    0x4063c2
  4063d7:	mov    bh,0xd9
  4063d9:	(bad)  
  4063da:	push   ss
  4063db:	leave  
  4063dc:	sahf   
  4063dd:	inc    esi
  4063de:	push   cs
  4063df:	arpl   WORD PTR [esp+ebp*8-0x61a81a3d],di
  4063e6:	fldenv [ecx+0x9]
  4063e9:	jmp    0x52f1f422
  4063ee:	cmp    ax,0x95a5
  4063f2:	pusha  
  4063f3:	test   BYTE PTR [ebx],cl
  4063f5:	call   0xa6b38b03
  4063fa:	xlat   BYTE PTR ds:[ebx]
  4063fb:	daa    
  4063fc:	mov    esp,DWORD PTR [esi]
  4063fe:	fcomp  st(6)
  406400:	and    DWORD PTR [ecx+0x79],0xffffffba
  406404:	pop    ebx
  406405:	out    0x2e,eax
  406407:	shl    BYTE PTR [eax],0x29
  40640a:	int    0x38
  40640c:	aad    0x28
  40640e:	pop    edx
  40640f:	test   DWORD PTR [eax-0x52],esi
  406412:	and    DWORD PTR [esi+0x19],esp
  406415:	dec    ecx
  406416:	sub    DWORD PTR [esi+0x54],edx
  406419:	push   esp
  40641a:	xchg   dl,dl
  40641c:	outs   dx,BYTE PTR ds:[esi]
  40641d:	je     0x40649a
  40641f:	lea    ebp,[ebx-0x57]
  406422:	adc    edi,DWORD PTR [edi+edi*2]
  406425:	cld    
  406426:	mov    al,0xaa
  406428:	xor    esp,eax
  40642a:	dec    esp
  40642b:	adc    dl,BYTE PTR [edi+edx*8]
  40642e:	mov    ds:0x742a4d7a,eax
  406433:	sub    edi,DWORD PTR [ebp-0x7e]
  406436:	mov    eax,ds:0x5ff89e0
  40643b:	aam    0x71
  40643d:	ds cli 
  40643f:	or     ebp,0xc1f5e415
  406445:	test   edx,ecx
  406447:	inc    edi
  406448:	scas   al,BYTE PTR es:[edi]
  406449:	icebp  
  40644a:	jmp    0x1977551f
  40644f:	dec    esp
  406450:	pop    esp
  406451:	lods   eax,DWORD PTR ds:[esi]
  406452:	jb     0x406412
  406454:	outs   dx,BYTE PTR cs:[esi]
  406456:	sub    eax,ebx
  406458:	arpl   WORD PTR [ebx],dx
  40645a:	mov    dh,0x7c
  40645c:	outs   dx,DWORD PTR ds:[esi]
  40645d:	rol    esi,0x5f
  406460:	push   ecx
  406461:	(bad)  
  406462:	jmp    0x9b9b15e8
  406467:	pop    ds
  406468:	fidivr WORD PTR [esi-0x21]
  40646b:	mov    cl,0x67
  40646d:	scas   al,BYTE PTR es:[edi]
  40646e:	arpl   WORD PTR [ebp+edx*4+0x3dbbfb2f],sp
  406475:	ins    DWORD PTR es:[edi],dx
  406476:	and    DWORD PTR [edi-0x3debe222],ebx
  40647c:	adc    ebx,DWORD PTR [esi+0x1976c455]
  406482:	add    edi,DWORD PTR [esp+eax*4-0x4b]
  406486:	inc    ecx
  406487:	out    0x31,eax
  406489:	mov    bl,0xd
  40648b:	push   ebp
  40648c:	(bad)  
  40648d:	adc    eax,0x639d9107
  406492:	or     al,0x1d
  406494:	enter  0x9095,0x89
  406498:	inc    edi
  406499:	ja     0x406513
  40649b:	xor    BYTE PTR [ebx+0x1ec7a6d9],bl
  4064a1:	push   0x10
  4064a3:	or     eax,0xf322476e
  4064a8:	lods   eax,DWORD PTR ds:[esi]
  4064a9:	push   ss
  4064aa:	(bad)  
  4064ab:	imul   edx,DWORD PTR [edx+0x2a],0xffffffcb
  4064af:	jb     0x4064f3
  4064b1:	test   DWORD PTR [ecx+0x57],ebp
  4064b4:	cli    
  4064b5:	sti    
  4064b6:	push   eax
  4064b7:	pop    esi
  4064b8:	and    eax,edx
  4064ba:	rol    BYTE PTR [ebp-0x418ba1cd],cl
  4064c0:	sbb    ch,ch
  4064c2:	xchg   esi,eax
  4064c3:	test   edx,edx
  4064c5:	ds dec eax
  4064c7:	sbb    ebx,edi
  4064c9:	add    BYTE PTR [eax+0x2234aa1b],bl
  4064cf:	js     0x406505
  4064d1:	xchg   DWORD PTR [ecx+0x69a5b533],esi
  4064d7:	pop    ebx
  4064d8:	mov    bh,0xff
  4064da:	idiv   esi
  4064dc:	inc    eax
  4064dd:	dec    ecx
  4064de:	sbb    eax,0x67b3a80c
  4064e3:	lods   eax,DWORD PTR ds:[esi]
  4064e4:	or     esi,0xd135702c
  4064ea:	sub    esp,DWORD PTR [esi+edx*8]
  4064ed:	fwait
  4064ee:	push   0xffffffae
  4064f0:	mov    al,ds:0x6fde329c
  4064f5:	call   0x7c2c:0x625ac67f
  4064fc:	test   BYTE PTR [esi],dh
  4064fe:	mov    ebx,0xca0289fd
  406503:	adc    DWORD PTR [eax],0xffffffc1
  406506:	test   BYTE PTR ds:0xf903f833,0x3
  40650d:	ror    DWORD PTR [edi],1
  40650f:	scas   eax,DWORD PTR es:[edi]
  406510:	xlat   BYTE PTR ds:[ebx]
  406511:	mov    edi,DWORD PTR [ebp-0x8]
  406514:	jmp    0x406666
  406519:	jbe    0x406527
  40651b:	xchg   ebp,eax
  40651c:	call   0xe08bdec6
  406521:	adc    DWORD PTR ds:0x13814057,edi
  406527:	loope  0x40651e
  406529:	lahf   
  40652a:	or     eax,0x7f237e7e
  40652f:	jle    0x4065af
  406531:	fld    QWORD PTR [ebx-0x3dff66e9]
  406537:	pop    ebp
  406538:	(bad)  
  406539:	pusha  
  40653a:	(bad)  
  40653b:	loopne 0x4064d4
  40653d:	enter  0x3439,0x3c
  406541:	mov    eax,DWORD PTR [esp+ecx*1-0x3bd683ce]
  406548:	pushf  
  406549:	mov    WORD PTR [edx+0x4e],gs
  40654c:	dec    ebp
  40654d:	call   0x53964250
  406552:	data16 rol BYTE PTR [eax+0xb8a0a],cl
  406559:	push   ss
  40655a:	bound  ebx,QWORD PTR [esi]
  40655c:	fnstenv [ecx]
  40655e:	pop    ss
  40655f:	mov    eax,0x1cecb26a
  406564:	(bad)  
  406566:	imul   edi,DWORD PTR [eax-0x2d],0xffffffcf
  40656a:	fiadd  DWORD PTR [edi]
  40656c:	xor    DWORD PTR [esi],edx
  40656e:	setne  bh
  406571:	mov    ds:0xd2b6c13e,al
  406576:	jp     0x4065d8
  406578:	sub    eax,0xd06cdf05
  40657d:	or     dh,BYTE PTR [edi-0x6a1fbbd2]
  406583:	loope  0x4065d9
  406585:	fdivp  st(5),st
  406587:	adc    al,0xf8
  406589:	mov    dh,cl
  40658b:	lods   eax,DWORD PTR ds:[esi]
  40658c:	xchg   esp,eax
  40658d:	aaa    
  40658e:	sub    eax,0xff97a4b4
  406594:	push   ss
  406595:	pop    esi
  406596:	cs dec eax
  406598:	fs scas eax,DWORD PTR es:[edi]
  40659a:	leave  
  40659b:	jmp    0xee31:0x2396e6ec
  4065a2:	mov    esp,0x2ec5325b
  4065a7:	mov    ebx,DWORD PTR [eax]
  4065a9:	scas   eax,DWORD PTR es:[edi]
  4065aa:	aam    0x9c
  4065ac:	mov    al,0xda
  4065ae:	repz cld 
  4065b0:	xchg   ebx,eax
  4065b1:	xchg   ecx,eax
  4065b2:	xor    DWORD PTR [ebp+0x4b87d202],ebp
  4065b8:	ins    BYTE PTR es:[edi],dx
  4065b9:	clc    
  4065ba:	adc    DWORD PTR [edi+0x6a],edx
  4065bd:	stc    
  4065be:	mov    al,ds:0xfbeae804
  4065c3:	ret    
  4065c4:	dec    ebx
  4065c5:	adc    DWORD PTR [edi+eax*4],edx
  4065c8:	shr    DWORD PTR [edi],0xa5
  4065cb:	and    cl,ch
  4065cd:	jae    0x4065e8
  4065cf:	cdq    
  4065d0:	add    DWORD PTR [ecx-0x48a73879],ebx
  4065d6:	stos   DWORD PTR es:[edi],eax
  4065d7:	inc    esi
  4065d8:	dec    esp
  4065d9:	adc    eax,0x9f582208
  4065de:	adc    edi,esp
  4065e0:	imul   BYTE PTR [edx-0x70e00dca]
  4065e6:	xor    BYTE PTR [esi+0x19],dh
  4065e9:	sub    ebp,DWORD PTR [esi+0x587b8ebc]
  4065ef:	mov    dl,0x50
  4065f1:	xor    dl,dh
  4065f3:	and    DWORD PTR [ebp+0x62],edx
  4065f6:	(bad)  
  4065f7:	test   ah,0x5e
  4065fa:	mov    dl,0xfb
  4065fc:	(bad)  
  4065fe:	sub    BYTE PTR [esi-0x28],ah
  406601:	pop    eax
  406602:	mov    ah,0x95
  406604:	xor    ah,BYTE PTR ds:0x1bc84026
  40660a:	lea    edx,[ecx+0x3364a0d7]
  406610:	pushf  
  406611:	retf   0xe957
  406614:	call   0x59e11552
  406619:	jecxz  0x40661b
  40661b:	test   al,0x9f
  40661d:	inc    esi
  40661e:	(bad)  
  40661f:	shr    DWORD PTR ds:0x5cdbce53,1
  406625:	sti    
  406626:	add    eax,0xdcb74256
  40662b:	dec    edi
  40662c:	pop    ss
  40662d:	push   esi
  40662e:	ja     0x4065ba
  406630:	ret    0x409d
  406633:	dec    eax
  406634:	les    edi,FWORD PTR [eax]
  406636:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406637:	scas   eax,DWORD PTR es:[edi]
  406638:	jb     0x4065c9
  40663a:	xchg   ebx,eax
  40663b:	and    dh,dl
  40663d:	xchg   ebx,eax
  40663f:	sti    
  406640:	syscall 
  406642:	xlat   BYTE PTR ds:[ebx]
  406643:	mov    edx,0x6038b6fc
  406648:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406649:	cli    
  40664a:	xor    edi,eax
  40664c:	sbb    dl,BYTE PTR [edx]
  40664e:	in     al,dx
  40664f:	xor    esi,DWORD PTR [ebx-0x2becbccc]
  406655:	inc    BYTE PTR [edx+0x2560245d]
  40665b:	fild   DWORD PTR [ecx+0x22]
  40665e:	lods   al,BYTE PTR ds:[esi]
  40665f:	scas   eax,DWORD PTR es:[edi]
  406660:	dec    esp
  406661:	cmp    dh,bh
  406663:	adc    ecx,DWORD PTR [ebx-0xfa274e1]
  406669:	sub    ebx,edi
  40666b:	cmp    ebx,edx
  40666d:	ja     0x40667b
  406673:	mov    edx,DWORD PTR [ebp-0x28]
  406676:	jmp    0x40671d
  40667b:	mov    edx,DWORD PTR [ebp-0x30]
  40667e:	mov    edi,DWORD PTR [ebp-0x4]
  406681:	xor    edx,eax
  406683:	xor    edi,eax
  406685:	add    edi,ecx
  406687:	add    edx,ecx
  406689:	imul   edx,edi
  40668c:	mov    edi,DWORD PTR [ebp-0x8]
  40668f:	mov    ebx,DWORD PTR [ebp-0x10]
  406692:	sub    ebx,edi
  406694:	cmp    ebx,edx
  406696:	ja     0x4066a4
  40669c:	mov    edx,DWORD PTR [ebp-0x2c]
  40669f:	jmp    0x40671d
  4066a4:	mov    edx,DWORD PTR [ebp-0x34]
  4066a7:	mov    edi,DWORD PTR [ebp-0x4]
  4066aa:	xor    edx,eax
  4066ac:	xor    edi,eax
  4066ae:	add    edi,ecx
  4066b0:	add    edx,ecx
  4066b2:	imul   edx,edi
  4066b5:	mov    edi,DWORD PTR [ebp-0x8]
  4066b8:	mov    ebx,DWORD PTR [ebp-0x10]
  4066bb:	sub    ebx,edi
  4066bd:	cmp    ebx,edx
  4066bf:	ja     0x4066cd
  4066c5:	mov    edx,DWORD PTR [ebp-0x30]
  4066c8:	jmp    0x40671d
  4066cd:	mov    edx,DWORD PTR [ebp-0x38]
  4066d0:	mov    edi,DWORD PTR [ebp-0x4]
  4066d3:	xor    edx,eax
  4066d5:	xor    edi,eax
  4066d7:	add    edi,ecx
  4066d9:	add    edx,ecx
  4066db:	imul   edx,edi
  4066de:	mov    edi,DWORD PTR [ebp-0x8]
  4066e1:	mov    ebx,DWORD PTR [ebp-0x10]
  4066e4:	sub    ebx,edi
  4066e6:	cmp    ebx,edx
  4066e8:	ja     0x4066f6
  4066ee:	mov    edx,DWORD PTR [ebp-0x34]
  4066f1:	jmp    0x40671d
  4066f6:	mov    edx,DWORD PTR [ebp-0x3c]
  4066f9:	mov    edi,DWORD PTR [ebp-0x4]
  4066fc:	xor    edx,eax
  4066fe:	xor    edi,eax
  406700:	add    edx,ecx
  406702:	add    edi,ecx
  406704:	imul   edx,edi
  406707:	mov    edi,DWORD PTR [ebp-0x8]
  40670a:	mov    ebx,DWORD PTR [ebp-0x10]
  40670d:	sub    ebx,edi
  40670f:	cmp    ebx,edx
  406711:	mov    edx,DWORD PTR [ebp-0x38]
  406714:	jbe    0x40671d
  40671a:	mov    edx,DWORD PTR [ebp-0x3c]
  40671d:	mov    edi,DWORD PTR [ebp-0x4]
  406720:	xor    edi,eax
  406722:	xor    edx,eax
  406724:	add    edi,ecx
  406726:	add    edx,ecx
  406728:	imul   edx,edi
  40672b:	mov    DWORD PTR [ebp+0xc],edx
  40672e:	mov    edx,DWORD PTR [ebp+0xc]
  406731:	mov    DWORD PTR [ebp-0x24],edx
  406734:	mov    edx,DWORD PTR [ebp-0x8]
  406737:	jmp    0x406889
  40673c:	lock cs xchg ebx,eax
  40673f:	xchg   esi,eax
  406740:	mov    eax,ds:0xd53889bb
  406745:	and    esp,DWORD PTR [ebp+0x1b]
  406748:	rcl    BYTE PTR [ebx+0x69],0xe5
  40674c:	inc    eax
  40674d:	add    bh,BYTE PTR [esi+0x7e]
  406750:	and    edi,DWORD PTR [edi+0x7e]
  406753:	jle    0x406744
  406755:	adc    eax,0x867191dc
  40675a:	mov    ds:0xf3c1c293,al
  40675f:	or     ah,BYTE PTR [ebx+0x2a]
  406762:	jle    0x406750
  406764:	dec    ecx
  406765:	pop    ecx
  406766:	(bad)  
  406768:	cmp    ebx,DWORD PTR [ebp-0x11]
  40676b:	pop    es
  40676c:	lock mov eax,ds:0xad24f492
  406772:	inc    edx
  406773:	inc    esp
  406774:	(bad)  
  406775:	sahf   
  406776:	ret    0x9684
  406779:	pop    edi
  40677a:	jl     0x406770
  40677c:	sub    DWORD PTR [esi+0x68],edi
  40677f:	(bad)  
  406780:	out    dx,eax
  406781:	and    ebp,ebx
  406783:	mov    esi,0xea2498a
  406788:	jp     0x40672d
  40678a:	inc    esi
  40678b:	sti    
  40678c:	inc    ecx
  40678d:	inc    ebp
  40678e:	aaa    
  40678f:	lock add BYTE PTR [edx],al
  406792:	scas   al,BYTE PTR es:[edi]
  406793:	or     BYTE PTR [eax-0x4a54a5c1],0xe1
  40679a:	fcom   QWORD PTR [edx-0x4e]
  40679d:	retf   
  40679e:	ins    DWORD PTR es:[edi],dx
  40679f:	neg    DWORD PTR [eax-0xd9ecd4e]
  4067a5:	aas    
  4067a6:	out    0xb4,eax
  4067a8:	jl     0x4067ba
  4067aa:	add    al,0x94
  4067ac:	mov    bl,BYTE PTR [edx+ecx*8+0x7e]
  4067b0:	and    ch,dh
  4067b2:	popa   
  4067b3:	push   0x588c2f47
  4067b8:	sub    al,0x75
  4067ba:	jmp    0xb328:0xea9b7b56
  4067c1:	fnstcw WORD PTR [edx]
  4067c3:	sub    al,0x15
  4067c5:	pop    sp
  4067c7:	es add al,0x67
  4067ca:	scas   eax,DWORD PTR es:[edi]
  4067cb:	inc    ebx
  4067cc:	pop    ds
  4067cd:	add    al,0x97
  4067cf:	fist   WORD PTR [edi-0x6e]
  4067d2:	pushf  
  4067d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067d4:	popa   
  4067d5:	cld    
  4067d6:	int    0x3c
  4067d8:	dec    ecx
  4067d9:	cmp    eax,0x2da6ca9
  4067de:	pop    edx
  4067df:	sub    al,0x6a
  4067e1:	sbb    al,0x19
  4067e3:	loopne 0x4067d1
  4067e5:	lods   al,BYTE PTR ds:[esi]
  4067e6:	sahf   
  4067e7:	addr16 arpl ax,si
  4067ea:	repz adc eax,0xfa628b58
  4067f0:	int    0x8d
  4067f2:	ja     0x40686e
  4067f4:	out    dx,al
  4067f5:	je     0x406868
  4067f7:	jne    0x4067cb
  4067f9:	rcl    BYTE PTR [ebp+ebp*4+0x17],1
  4067fd:	es mov edi,gs
  406800:	es daa 
  406802:	in     al,dx
  406803:	mov    edi,0x58906c6c
  406808:	aam    0x52
  40680a:	ret    0x1e7c
  40680d:	ss icebp 
  40680f:	mov    eax,0xd6fafd9e
  406814:	ins    BYTE PTR es:[edi],dx
  406815:	push   es
  406816:	pop    DWORD PTR [ebp+0x2155c854]
  40681c:	neg    esi
  40681e:	pop    eax
  40681f:	xor    ebx,eax
  406821:	mov    ah,ah
  406823:	adc    al,0x63
  406825:	cmp    eax,DWORD PTR [esi-0x48]
  406828:	inc    edi
  406829:	call   0xdcc3d94f
  40682e:	jbe    0x40681f
  406830:	sbb    cl,BYTE PTR [edx-0x76]
  406833:	pop    eax
  406834:	jmp    0x6b8b:0x629dffec
  40683b:	retf   
  40683c:	cs imul edx,ebp,0xffffff94
  406840:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406841:	xchg   DWORD PTR [edi-0x80],esi
  406844:	call   0xb8fc:0xef112356
  40684b:	aaa    
  40684c:	arpl   dx,bp
  40684e:	xor    DWORD PTR [esi+0x4447d26d],edi
  406854:	out    dx,eax
  406855:	xor    BYTE PTR [eax],cl
  406857:	cmp    edx,0x2a
  40685a:	lahf   
  40685b:	std    
  40685c:	fisttp WORD PTR [esp+edi*4]
  40685f:	fnstcw WORD PTR [edx+0xb]
  406862:	and    cl,BYTE PTR [ecx+0x5b]
  406865:	adc    eax,0x3d86482a
  40686a:	ds xor eax,0x4a88a996
  406870:	sub    DWORD PTR [ebp+0x1d069240],ebp
  406876:	imul   ebx,DWORD PTR [edx-0x52],0xffffffdd
  40687a:	add    bh,dh
  40687c:	jbe    0x40681d
  40687e:	test   eax,0x4c926c1b
  406883:	fisub  WORD PTR [esi+0x29126e21]
  406889:	add    edx,DWORD PTR [ebp-0x40]
  40688c:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  406893:	mov    DWORD PTR [ebp-0x1c],edx
  406896:	mov    DWORD PTR [ebp-0xc],0xf89c853b
  40689d:	mov    DWORD PTR [ebp-0x44],0xf89c853a
  4068a4:	mov    edx,DWORD PTR [ebp-0x18]
  4068a7:	jmp    0x4069f9
  4068ac:	daa    
  4068ad:	mov    ecx,0x7980c50e
  4068b2:	in     eax,0x79
  4068b4:	dec    ebp
  4068b5:	push   esp
  4068b6:	push   ecx
  4068b7:	cmp    al,0x91
  4068b9:	push   ecx
  4068ba:	xor    DWORD PTR [esi+0x75],eax
  4068bd:	add    BYTE PTR [esi+0x7e],bh
  4068c0:	and    edi,DWORD PTR [edi+0x7e]
  4068c3:	jle    0x40691c
  4068c5:	lods   eax,DWORD PTR ds:[esi]
  4068c6:	pop    eax
  4068c7:	jo     0x406923
  4068c9:	cld    
  4068ca:	sub    ebx,DWORD PTR fs:[edx]
  4068cd:	dec    edi
  4068ce:	xchg   BYTE PTR [edi-0x1362a37c],bl
  4068d4:	mov    cl,0xe4
  4068d6:	pop    edx
  4068d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068d8:	mov    esp,0x3dcf5a15
  4068dd:	xor    eax,0xe81ba9ac
  4068e2:	inc    ebp
  4068e3:	gs (bad) 
  4068e5:	push   eax
  4068e6:	cld    
  4068e7:	add    BYTE PTR [ecx+0x55],bh
  4068ea:	stos   DWORD PTR es:[edi],eax
  4068eb:	or     eax,0xc4e16eab
  4068f0:	sar    dl,cl
  4068f2:	xchg   BYTE PTR [esi+0x5f],ch
  4068f5:	pop    esp
  4068f6:	nop
  4068f7:	pushf  
  4068f8:	push   0x83d56d95
  4068fd:	imul   ecx,DWORD PTR [edx+0x22654ccc],0xffffff9d
  406904:	pop    ds
  406905:	arpl   si,sp
  406907:	rcl    eax,0x5f
  40690a:	sub    DWORD PTR [edi+ecx*4],edx
  40690d:	lods   eax,DWORD PTR ds:[esi]
  40690e:	test   edi,0x364de1ce
  406914:	inc    ecx
  406915:	cdq    
  406916:	adc    edi,ecx
  406918:	scas   eax,DWORD PTR es:[edi]
  406919:	add    edi,esi
  40691b:	sbb    BYTE PTR [ecx+0x16],bh
  40691e:	mov    bl,0xfc
  406920:	push   cs
  406921:	add    al,bh
  406923:	sbb    BYTE PTR [edi],cl
  406925:	xchg   ebp,eax
  406926:	shr    DWORD PTR [eax+edi*1-0x21],cl
  40692a:	jne    0x406915
  40692c:	test   BYTE PTR ds:0x91603080,bh
  406932:	gs cwde 
  406934:	and    bh,BYTE PTR [ecx+0x16637811]
  40693a:	(bad)  
  40693b:	addr16 repz test eax,0x1f9e1044
  406942:	mov    dl,ch
  406944:	(bad)  
  406945:	mov    ebp,0xe82f556e
  40694a:	jb     0x40696b
  40694c:	out    dx,al
  40694d:	aas    
  40694e:	inc    ebx
  40694f:	mov    DWORD PTR [ebp-0x1dbd5d89],esp
  406955:	xor    DWORD PTR [edx-0x21ce4da0],esp
  40695b:	scas   eax,DWORD PTR es:[edi]
  40695c:	pop    es
  40695d:	popf   
  40695e:	icebp  
  40695f:	sub    DWORD PTR [edx-0xa91fa4e],eax
  406965:	or     bl,BYTE PTR [edx-0x2ec042af]
  40696b:	add    DWORD PTR [edx+0x3da41ccd],ecx
  406971:	sbb    al,0x88
  406973:	aaa    
  406974:	pushf  
  406975:	arpl   bx,si
  406977:	lods   al,BYTE PTR ds:[esi]
  406978:	push   es
  406979:	aas    
  40697a:	les    esi,FWORD PTR [edi-0x3]
  40697d:	rcl    DWORD PTR [ebx-0x2948fd5b],cl
  406983:	and    DWORD PTR [ebx],edi
  406985:	retf   
  406986:	push   cs
  406987:	xor    al,cl
  406989:	xchg   edi,eax
  40698a:	loop   0x40691a
  40698c:	adc    eax,0x77fea3a9
  406991:	pusha  
  406992:	mov    ebx,0x443b6120
  406997:	push   es
  406998:	lea    ebx,[ecx+0xdd1ed2b]
  40699e:	(bad)  [edi+ebp*4]
  4069a1:	(bad)  
  4069a3:	inc    ebx
  4069a4:	cli    
  4069a5:	xchg   edx,eax
  4069a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069a7:	repz mov eax,0x460da7ab
  4069ad:	mov    edx,ss
  4069af:	sub    DWORD PTR [ebx-0x76],esp
  4069b2:	bound  ecx,QWORD PTR [eax+0x5ab20adb]
  4069b8:	mov    al,0x68
  4069ba:	inc    edi
  4069bb:	push   ebx
  4069bc:	(bad)  
  4069bd:	xor    al,0x81
  4069bf:	in     eax,dx
  4069c0:	rcl    BYTE PTR [eax+ecx*8-0x2d26f2cc],0x90
  4069c8:	(bad)  
  4069c9:	into   
  4069ca:	daa    
  4069cb:	cdq    
  4069cc:	sub    DWORD PTR [edx],eax
  4069ce:	rcr    BYTE PTR [ecx-0x50],0x7a
  4069d2:	and    dh,BYTE PTR [esi+eax*8-0x3a5112a7]
  4069d9:	mov    esi,0x6dd353ef
  4069de:	test   eax,0x615cfc20
  4069e3:	test   DWORD PTR [ebx],edi
  4069e5:	fbstp  TBYTE PTR [ebx-0xd]
  4069e8:	push   edx
  4069e9:	or     eax,0x6ff9d69e
  4069ee:	dec    esi
  4069ef:	push   ebp
  4069f0:	push   eax
  4069f1:	xchg   ebp,eax
  4069f2:	stos   BYTE PTR es:[edi],al
  4069f3:	mov    bl,0x1a
  4069f5:	pop    edx
  4069f6:	xchg   esp,eax
  4069f7:	in     eax,dx
  4069f8:	pop    ebp
  4069f9:	xor    edx,eax
  4069fb:	jmp    0x406b4d
  406a00:	int    0xfb
  406a02:	mov    ebx,0x65b3b933
  406a07:	stc    
  406a08:	repnz add eax,0x78fa7a93
  406a0e:	js     0x4069be
  406a10:	add    DWORD PTR ds:[esi+0x7e],edi
  406a14:	and    edi,DWORD PTR [edi+0x7e]
  406a17:	jle    0x406a5c
  406a19:	inc    eax
  406a1a:	pop    ebx
  406a1b:	xchg   ebp,eax
  406a1c:	into   
  406a1d:	jecxz  0x406a3f
  406a1f:	pop    ss
  406a20:	(bad)  
  406a21:	sti    
  406a22:	fidivr WORD PTR [ecx+eax*2+0x7d2910e]
  406a29:	cdq    
  406a2a:	xchg   edi,eax
  406a2b:	dec    edx
  406a2c:	ins    BYTE PTR es:[edi],dx
  406a2d:	push   ss
  406a2e:	dec    eax
  406a2f:	push   DWORD PTR [ebp-0x71f2df8c]
  406a35:	pop    ss
  406a36:	retf   
  406a37:	inc    ebp
  406a38:	loope  0x406aa9
  406a3a:	shl    DWORD PTR [ecx],0x34
  406a3d:	sub    BYTE PTR [edx-0x66],ah
  406a40:	(bad)  
  406a41:	enter  0x940d,0xee
  406a45:	mov    al,ds:0x9313c22c
  406a4a:	inc    esp
  406a4b:	arpl   WORD PTR [ebp+0x3b],bx
  406a4e:	scas   eax,DWORD PTR es:[edi]
  406a4f:	dec    ebx
  406a50:	jno    0x406a05
  406a52:	call   0x36a7ee9f
  406a57:	and    ch,dh
  406a59:	xor    bl,BYTE PTR [eax]
  406a5b:	das    
  406a5c:	sbb    BYTE PTR [edi+0x26],bl
  406a5f:	mov    cl,0x67
  406a61:	iret   
  406a62:	repnz sahf 
  406a64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a65:	inc    edx
  406a66:	(bad)  
  406a67:	add    edi,DWORD PTR [esi]
  406a69:	in     eax,0x5d
  406a6b:	out    0x6e,eax
  406a6d:	cmp    cl,0x47
  406a70:	std    
  406a71:	out    dx,al
  406a72:	pop    esi
  406a73:	xchg   ebp,eax
  406a74:	sub    DWORD PTR [ebx],ebx
  406a76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a77:	push   edx
  406a78:	xor    ch,BYTE PTR [edi-0x5d043013]
  406a7e:	or     ch,BYTE PTR ds:0x7ee87c0
  406a84:	clc    
  406a85:	mov    eax,0x84d7d23f
  406a8a:	push   ss
  406a8b:	(bad)  
  406a8c:	cmp    eax,0xc55fdfc4
  406a91:	hlt    
  406a92:	cs in  al,0xdb
  406a95:	dec    edi
  406a96:	sbb    eax,0x5bd0c1f2
  406a9b:	stc    
  406a9c:	popa   
  406a9d:	push   ebp
  406a9e:	mov    ds:0xc3c095ba,al
  406aa3:	in     eax,0xb8
  406aa5:	arpl   si,bp
  406aa7:	repnz std 
  406aa9:	in     al,dx
  406aaa:	pop    ecx
  406aab:	mov    ah,al
  406aad:	jns    0x406b1c
  406aaf:	in     eax,dx
  406ab0:	(bad)  
  406ab1:	pushf  
  406ab2:	into   
  406ab3:	mov    ah,0xdd
  406ab5:	(bad)  
  406ab6:	ror    DWORD PTR [edi-0x55],cl
  406ab9:	nop
  406aba:	cld    
  406abb:	dec    ebx
  406abc:	mov    bh,0x39
  406abe:	sbb    dl,BYTE PTR [edi+eiz*2]
  406ac1:	rol    dl,0x81
  406ac4:	jge    0x406ace
  406ac6:	repz inc eax
  406ac8:	(bad)  
  406ac9:	mov    ebx,0x2bdbd9a0
  406ace:	mov    DWORD PTR [edx],eax
  406ad0:	stc    
  406ad1:	imul   edx,edx,0x7d
  406ad4:	outs   dx,DWORD PTR ds:[esi]
  406ad5:	pushf  
  406ad6:	push   eax
  406ad7:	lds    ebx,FWORD PTR [esi-0x2228a412]
  406add:	pop    edi
  406ade:	xchg   esi,eax
  406adf:	xor    DWORD PTR [edx+0x11],edi
  406ae2:	xor    ecx,DWORD PTR [ebp+0xc1001ff]
  406ae8:	push   ss
  406ae9:	dec    edx
  406aea:	mov    edx,0x7d8c747
  406aef:	(bad)  [esi-0x4a]
  406af2:	push   ebx
  406af3:	push   esp
  406af4:	out    0x51,eax
  406af6:	(bad)  
  406af7:	(bad)  
  406af8:	js     0x406ae0
  406afa:	(bad)  
  406afb:	arpl   WORD PTR [edi],sp
  406afd:	mov    esp,cs
  406aff:	xchg   edi,eax
  406b00:	inc    ebx
  406b01:	xor    eax,0xe3ee6f40
  406b06:	lock stc 
  406b08:	arpl   WORD PTR [eax+0x34fb7d90],bp
  406b0e:	push   0x80291928
  406b13:	rcl    DWORD PTR [eax],1
  406b15:	push   edi
  406b16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b17:	dec    esi
  406b18:	fsubr  QWORD PTR [ebp+0x60]
  406b1b:	sbb    eax,0xd37c78f4
  406b20:	pop    ecx
  406b21:	lods   al,BYTE PTR ds:[esi]
  406b22:	call   0xda925658
  406b27:	mov    esp,0x723c4f4e
  406b2c:	cdq    
  406b2d:	and    al,0x1f
  406b2f:	or     edi,DWORD PTR [ebx-0x52102964]
  406b35:	cli    
  406b36:	mov    esi,0x37b7330
  406b3b:	or     al,0x33
  406b3d:	sbb    DWORD PTR [ecx],ecx
  406b3f:	pop    esi
  406b40:	addr16 call 0x6a8e:0x1cbef4d4
  406b48:	mov    al,0xd0
  406b4a:	loope  0x406b59
  406b4c:	pop    esi
  406b4d:	add    edx,ecx
  406b4f:	jmp    0x406fb2
  406b54:	mov    edx,DWORD PTR [ebp-0x18]
  406b57:	xor    edx,eax
  406b59:	add    edx,DWORD PTR [ebp-0x14]
  406b5c:	mov    edi,DWORD PTR [ebp-0x1c]
  406b5f:	mov    dl,BYTE PTR [edx+edi*1+0x32729f]
  406b66:	mov    BYTE PTR [ebp+0xf],dl
  406b69:	mov    edx,DWORD PTR [ebp-0xc]
  406b6c:	xor    edx,eax
  406b6e:	add    edx,DWORD PTR [ebp-0x14]
  406b71:	jmp    0x406cc3
  406b76:	mov    ah,0x9b
  406b78:	scas   al,BYTE PTR es:[edi]
  406b79:	pop    es
  406b7a:	popa   
  406b7b:	cmp    edx,DWORD PTR [ebp+0x59]
  406b7e:	(bad)  
  406b80:	xor    DWORD PTR [eax+0x1a3a2291],ecx
  406b86:	jecxz  0x406b8e
  406b88:	jle    0x406c08
  406b8a:	and    edi,DWORD PTR [edi+0x7e]
  406b8d:	jle    0x406bb4
  406b8f:	push   ecx
  406b90:	or     ah,BYTE PTR [ebp+0x28c1a26f]
  406b96:	je     0x406ba9
  406b98:	mov    dh,0xbe
  406b9a:	mov    ds:0xfed2e714,al
  406b9f:	sub    al,0x65
  406ba1:	or     cl,dl
  406ba3:	in     al,0xf1
  406ba5:	and    eax,esi
  406ba7:	jg     0x406b84
  406ba9:	sar    BYTE PTR [ebp-0x60],0x70
  406bad:	(bad)  
  406bae:	dec    ebx
  406baf:	xchg   DWORD PTR [ebx*1-0x31cdc30c],esp
  406bb6:	sub    eax,0x87ce5ca3
  406bbb:	ss pop ebx
  406bbd:	fisttp QWORD PTR [ebp-0x42ff49e6]
  406bc3:	sbb    ebp,DWORD PTR [esi-0x69a81d8f]
  406bc9:	or     eax,0x4beec389
  406bce:	sub    eax,0x714b417b
  406bd3:	mov    cl,0xc2
  406bd5:	xor    edx,DWORD PTR [ebx+0x9]
  406bd8:	mov    ebp,0x60f8a252
  406bdd:	adc    eax,0x58a98df
  406be2:	push   esi
  406be3:	adc    cl,BYTE PTR [ebp+0x58]
  406be6:	pop    ebx
  406be7:	xor    dl,BYTE PTR [ebx+ecx*8+0x77]
  406beb:	fistp  DWORD PTR [eax+0x12c8897b]
  406bf1:	arpl   WORD PTR [eax],di
  406bf3:	push   cs
  406bf4:	cmp    ebp,esi
  406bf6:	mov    al,0x12
  406bf8:	mov    esp,ss
  406bfa:	adc    DWORD PTR [edx-0x73],0xd2e3132e
  406c01:	inc    ebp
  406c02:	out    0x8d,al
  406c04:	add    eax,0x93a13175
  406c09:	cs ja  0x406c4f
  406c0c:	or     dh,ch
  406c0e:	in     al,0xd4
  406c10:	push   ecx
  406c11:	or     DWORD PTR [esi-0x7b],ecx
  406c14:	jecxz  0x406b9a
  406c16:	int3   
  406c17:	push   edi
  406c18:	(bad)
  406c1b:	cld    
  406c1c:	out    dx,al
  406c1d:	fs js  0x406c0e
  406c20:	out    0x5e,eax
  406c22:	mov    esp,0xbec34b74
  406c27:	push   edi
  406c28:	loopne 0x406c9c
  406c2a:	or     bh,BYTE PTR [eax]
  406c2c:	enter  0xa7cd,0xa0
  406c30:	rcl    BYTE PTR [edx+0x26],0xbb
  406c34:	lahf   
  406c35:	mov    al,0xe9
  406c37:	cmp    edx,esp
  406c39:	xchg   edx,eax
  406c3a:	xchg   ecx,eax
  406c3b:	sub    eax,0x6429b198
  406c40:	inc    ebx
  406c41:	aas    
  406c42:	sub    eax,0xfb3f31dd
  406c47:	push   ebx
  406c48:	mov    BYTE PTR [edx+ebx*2],0x73
  406c4c:	stc    
  406c4d:	imul   edx,edx,0x68
  406c50:	sti    
  406c51:	ja     0x406c4b
  406c53:	jmp    0x2a31:0xcbe1d63a
  406c5a:	pop    ds
  406c5b:	xor    edx,DWORD PTR [ecx]
  406c5d:	dec    ebx
  406c5e:	push   ecx
  406c5f:	and    BYTE PTR [eax],0x5
  406c62:	jmp    0x406ca2
  406c64:	push   ebp
  406c65:	shl    DWORD PTR [ecx+0x4f],cl
  406c68:	inc    esi
  406c69:	in     eax,dx
  406c6a:	pop    ds
  406c6b:	(bad)  [ecx+esi*4-0x382b0500]
  406c72:	shl    DWORD PTR [ebp+0x4b],1
  406c75:	sub    eax,0x8315a02e
  406c7a:	push   esi
  406c7b:	repz push ebx
  406c7d:	mov    edx,DWORD PTR [bx+si+0x45f5]
  406c82:	mov    DWORD PTR [esi+0x5ed5b1a4],ebx
  406c88:	je     0x406cf6
  406c8a:	sbb    dl,BYTE PTR [edx]
  406c8c:	and    DWORD PTR [ecx-0x5d82d0e],0x8dcb2ec6
  406c96:	inc    esp
  406c98:	bound  eax,QWORD PTR [edx+ebp*8]
  406c9b:	es in  al,dx
  406c9d:	push   ecx
  406c9e:	mov    dh,0x30
  406ca0:	inc    edi
  406ca1:	aaa    
  406ca2:	and    bl,bh
  406ca4:	xor    eax,0x4fb8f361
  406ca9:	and    ecx,DWORD PTR [ebx+0x2b0fdcb9]
  406caf:	test   DWORD PTR [ecx],esp
  406cb1:	adc    DWORD PTR [eax-0x1c],ebp
  406cb4:	ins    BYTE PTR es:[edi],dx
  406cb5:	fcomp  st(1)
  406cb7:	sub    DWORD PTR [edi],0x5a31c00f
  406cbd:	xchg   ebp,eax
  406cbe:	and    ah,dl
  406cc0:	ret    0x862e
  406cc3:	mov    edi,DWORD PTR [ebp-0x1c]
  406cc6:	mov    dl,BYTE PTR [edx+edi*1+0x32729f]
  406ccd:	mov    BYTE PTR [ebp+0xb],dl
  406cd0:	mov    dl,BYTE PTR [ebp+0xf]
  406cd3:	mov    edi,DWORD PTR [ebp-0xc]
  406cd6:	xor    edi,eax
  406cd8:	add    edi,DWORD PTR [ebp-0x14]
  406cdb:	mov    ebx,DWORD PTR [ebp-0x1c]
  406cde:	jmp    0x406e30
  406ce3:	stos   DWORD PTR es:[edi],eax
  406ce4:	out    dx,eax
  406ce5:	pop    edx
  406ce6:	sbb    al,0x5a
  406ce8:	test   eax,0x2e197979
  406ced:	leave  
  406cee:	ss jb  0x406d51
  406cf1:	fisubr DWORD PTR [esp+edx*4]
  406cf4:	pop    es
  406cf5:	jle    0x406d75
  406cf7:	and    edi,DWORD PTR [edi+0x7e]
  406cfa:	jle    0x406d63
  406cfc:	sub    edx,eax
  406cfe:	lods   eax,DWORD PTR ds:[esi]
  406cff:	lods   al,BYTE PTR ds:[si]
  406d01:	push   ss
  406d02:	dec    esp
  406d03:	adc    DWORD PTR [esi],ebx
  406d05:	push   edi
  406d06:	jmp    FWORD PTR [eax]
  406d08:	mov    ss,WORD PTR [ecx+0x13]
  406d0b:	inc    edi
  406d0c:	mov    ch,0x64
  406d0e:	addr16 imul ecx,edi,0x7d
  406d12:	aam    0x39
  406d14:	lahf   
  406d15:	cdq    
  406d16:	pop    esi
  406d17:	add    DWORD PTR [ecx],esp
  406d19:	rcr    ch,1
  406d1b:	rol    DWORD PTR [esi],0x83
  406d1e:	mov    eax,0x84d334f9
  406d23:	cmp    dl,BYTE PTR [ecx]
  406d25:	mov    ebx,DWORD PTR [edx]
  406d27:	cmp    eax,0x4b2ca20f
  406d2c:	test   dl,dl
  406d2e:	or     BYTE PTR [edi],dl
  406d30:	(bad)  
  406d31:	jle    0x406cda
  406d33:	(bad)  
  406d34:	fadd   DWORD PTR [ecx]
  406d36:	bound  ebp,QWORD PTR [edx]
  406d38:	scas   eax,DWORD PTR es:[edi]
  406d39:	sbb    al,0x44
  406d3b:	out    dx,eax
  406d3c:	sub    eax,DWORD PTR [edx-0x40cd3c8e]
  406d42:	xchg   esp,eax
  406d43:	push   esi
  406d44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d45:	mov    edi,0x3d202296
  406d4a:	lea    edi,[esp+eax*2]
  406d4d:	jecxz  0x406d5f
  406d4f:	cdq    
  406d50:	xor    BYTE PTR [edi+0xf09a54c],ch
  406d56:	(bad)  
  406d57:	ror    BYTE PTR [esi+0x6156bc89],cl
  406d5d:	call   0xbb431994
  406d62:	sahf   
  406d63:	cld    
  406d64:	aas    
  406d65:	cs and al,0xb
  406d68:	dec    edi
  406d69:	jp     0x406dd2
  406d6b:	push   ebp
  406d6c:	add    edi,esp
  406d6e:	lds    esi,FWORD PTR [ebx-0x41baf57c]
  406d74:	mov    dh,0x3a
  406d76:	cs addr16 mov eax,0xdd5ff09d
  406d7d:	std    
  406d7e:	data16 jg 0x406d23
  406d81:	push   ebp
  406d82:	out    dx,eax
  406d83:	pop    esp
  406d84:	mov    esp,DWORD PTR [edi]
  406d86:	dec    ebp
  406d87:	mov    edi,0xc52b5975
  406d8c:	and    cl,BYTE PTR [edi-0xe818187]
  406d92:	call   0xa1e7:0x737b2d48
  406d99:	push   0x1bccf635
  406d9e:	sbb    al,0x37
  406da0:	sub    eax,0x97b5d19d
  406da5:	sub    esp,DWORD PTR [ebx-0xc]
  406da8:	jne    0x406d51
  406daa:	push   cs
  406dab:	daa    
  406dac:	xchg   DWORD PTR [edi+0x7774a94b],esi
  406db2:	and    ah,al
  406db4:	in     eax,dx
  406db5:	aas    
  406db6:	ds inc edx
  406db8:	es into 
  406dba:	test   al,0x60
  406dbc:	dec    edx
  406dbd:	cmc    
  406dbe:	aad    0x32
  406dc0:	mov    ecx,0xdd3c7733
  406dc5:	dec    ebp
  406dc6:	jmp    0x6bde629c
  406dcb:	in     eax,0x0
  406dcd:	push   cs
  406dce:	inc    edx
  406dcf:	pop    esp
  406dd0:	and    al,0xf3
  406dd2:	mov    cl,0x4c
  406dd4:	ret    0x1056
  406dd7:	adc    al,0x6c
  406dd9:	and    ebp,0xffffffd9
  406ddc:	push   ss
  406ddd:	and    DWORD PTR [eax+edx*4+0x7d],edx
  406de1:	lds    esp,FWORD PTR [edi]
  406de3:	jg     0x406db5
  406de5:	add    eax,0x2c32a023
  406dea:	test   al,0x99
  406dec:	and    DWORD PTR [ecx+0x3e4593ff],esi
  406df2:	test   ebp,eax
  406df4:	loope  0x406d95
  406df6:	aas    
  406df7:	jecxz  0x406d87
  406df9:	push   ebp
  406dfa:	cmp    BYTE PTR [ebp+0x3524026b],dl
  406e00:	pcmpgtd mm1,QWORD PTR [ecx]
  406e03:	daa    
  406e04:	sub    ecx,esp
  406e06:	sbb    BYTE PTR [ecx],bh
  406e08:	and    ebx,DWORD PTR gs:[ebx*2+0xf2641b]
  406e10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e11:	fadd   QWORD PTR [edx]
  406e13:	xchg   BYTE PTR [ebx],al
  406e15:	xchg   edi,eax
  406e16:	imul   eax,DWORD PTR [ebx+0x5273b279],0x48951c7f
  406e20:	repnz lahf 
  406e22:	mov    dl,0x67
  406e24:	push   0x3d
  406e26:	mov    BYTE PTR [ebx+0x56332ddd],ch
  406e2c:	pop    ds
  406e2d:	and    DWORD PTR [edi],edi
  406e2f:	mov    eax,0x9f1f9488
  406e34:	jb     0x406e68
  406e36:	add    cl,ch
  406e38:	dec    ebp
  406e39:	add    DWORD PTR [eax],eax
  406e3b:	add    BYTE PTR [ecx+0x24],bh
  406e3e:	mov    dh,0xd8
  406e40:	dec    ebx
  406e41:	js     0x406ebc
  406e43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e44:	mov    BYTE PTR [esi-0x4],bl
  406e47:	lods   al,BYTE PTR ds:[esi]
  406e48:	mov    dh,0xf0
  406e4a:	add    ecx,DWORD PTR [ebp+0x59]
  406e4d:	add    al,0x7e
  406e4f:	jle    0x406e74
  406e51:	jg     0x406ed1
  406e53:	jle    0x406de3
  406e55:	or     BYTE PTR [eax],al
  406e57:	mov    edi,DWORD PTR [ecx-0x4a]
  406e5a:	loopne 0x406e62
  406e5c:	fld    st(6)
  406e5e:	js     0x406e01
  406e60:	add    dh,0x68
  406e63:	pop    ss
  406e64:	or     al,0x4c
  406e66:	mov    ah,0xf3
  406e68:	daa    
  406e69:	sub    bh,BYTE PTR [edx+0x71]
  406e6c:	jecxz  0x406e68
  406e6e:	loop   0x406e3d
  406e70:	add    BYTE PTR [ecx+eiz*2-0x60],cl
  406e74:	aaa    
  406e75:	dec    ecx
  406e76:	xchg   DWORD PTR [eax+0x171bc570],esi
  406e7c:	lea    eax,[esi]
  406e7e:	ds adc ebx,ebx
  406e81:	sub    al,0xea
  406e83:	jb     0x406ef8
  406e85:	test   BYTE PTR [eax+0x177ba491],0xb4
  406e8c:	inc    BYTE PTR [edx-0x5d6a71e5]
  406e92:	cli    
  406e93:	popa   
  406e94:	mov    edx,0xdae533b0
  406e99:	cli    
  406e9a:	(bad)  
  406e9b:	addr16 xchg edi,eax
  406e9d:	or     edi,DWORD PTR [edx+0x5]
  406ea0:	data16 daa 
  406ea2:	adc    DWORD PTR [ebp+edi*4-0x1effc61b],0x6d
  406eaa:	hlt    
  406eab:	gs and al,0x9c
  406eae:	pusha  
  406eaf:	lahf   
  406eb0:	mov    dh,0x4b
  406eb2:	fld    TBYTE PTR [edx-0x3f62282f]
  406eb8:	nop
  406eb9:	sbb    BYTE PTR [edx],0xe0
  406ebc:	jb     0x406e92
  406ebe:	jne    0x406e5b
  406ec0:	(bad)  [edx-0x3b]
  406ec3:	popa   
  406ec4:	inc    ebp
  406ec5:	sub    BYTE PTR [ebp+0x34122916],bl
  406ecb:	cdq    
  406ecc:	je     0x406f44
  406ece:	sbb    BYTE PTR [eax+0x17],dh
  406ed1:	cmp    al,0xdd
  406ed3:	jnp    0x406e89
  406ed5:	cmp    BYTE PTR [edx],cl
  406ed7:	and    ebx,DWORD PTR [edx+0x769ed4f]
  406edd:	sub    al,0x8c
  406edf:	inc    ebx
  406ee0:	aad    0x35
  406ee2:	pop    edx
  406ee3:	mov    bl,BYTE PTR [edi-0x70]
  406ee6:	fs dec esi
  406ee8:	sub    ebp,DWORD PTR [ebp-0xf76e8c4]
  406eee:	sub    al,cl
  406ef0:	lods   eax,DWORD PTR ds:[esi]
  406ef1:	imul   esi,DWORD PTR fs:[eax],0xffffffe4
  406ef5:	fld    st(5)
  406ef7:	(bad)  
  406ef8:	sti    
  406ef9:	sub    dh,dh
  406efb:	mov    ch,0x2d
  406efd:	cmc    
  406efe:	mov    eax,0x419da49f
  406f03:	aam    0xe8
  406f05:	push   eax
  406f06:	sbb    DWORD PTR [edi],edi
  406f08:	push   ebx
  406f09:	lea    esi,[edi-0x5d88bd50]
  406f0f:	cmp    al,bh
  406f11:	addr16 aam 0xad
  406f14:	or     dl,BYTE PTR [edx+0x288853e4]
  406f1a:	sub    BYTE PTR ds:0xaf394189,bl
  406f20:	and    ecx,0x55709f07
  406f26:	mov    esi,ecx
  406f28:	inc    edi
  406f29:	adc    DWORD PTR [ecx-0x10],ebx
  406f2c:	xchg   esi,eax
  406f2d:	and    al,0xa6
  406f2f:	ins    DWORD PTR es:[edi],dx
  406f30:	sahf   
  406f31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f32:	or     edx,DWORD PTR [edx+0x20]
  406f35:	and    BYTE PTR [ecx-0x238684c2],ah
  406f3b:	ret    
  406f3c:	or     BYTE PTR [ecx+0x53],bl
  406f3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f40:	or     eax,0x8523cc61
  406f45:	or     BYTE PTR [esi],ah
  406f47:	add    eax,0xd189263e
  406f4c:	mov    ch,0x31
  406f4e:	jmp    0x406f5e
  406f50:	add    DWORD PTR [ebp+0x26563d43],0x450e888b
  406f5a:	out    dx,eax
  406f5b:	xchg   esp,eax
  406f5c:	push   ss
  406f5d:	fdivr  DWORD PTR [ebx-0x74102a0]
  406f63:	in     eax,0x7d
  406f65:	outs   dx,DWORD PTR ds:[esi]
  406f66:	rcl    BYTE PTR [ebx-0x52],0x9c
  406f6a:	dec    edi
  406f6b:	pop    ds
  406f6c:	nop
  406f6d:	loope  0x406f04
  406f6f:	rol    DWORD PTR [ebp-0x173adb05],0xc
  406f76:	xchg   esi,eax
  406f77:	push   es
  406f78:	cmp    BYTE PTR [edi],ch
  406f7a:	push   edi
  406f7b:	and    dh,0x38
  406f7e:	dec    ebx
  406f7f:	lahf   
  406f80:	into   
  406f81:	out    dx,eax
  406f82:	and    DWORD PTR [ecx+edx*1+0x4a2ed9f8],edi
  406f89:	mov    dl,BYTE PTR [ebp+0xb]
  406f8c:	mov    edi,DWORD PTR [ebp-0x18]
  406f8f:	xor    edi,eax
  406f91:	add    edi,DWORD PTR [ebp-0x14]
  406f94:	mov    ebx,DWORD PTR [ebp-0x1c]
  406f97:	mov    BYTE PTR [edi+ebx*1+0x32729f],dl
  406f9e:	mov    edx,DWORD PTR [ebp-0x44]
  406fa1:	mov    edi,DWORD PTR [ebp-0xc]
  406fa4:	xor    edx,eax
  406fa6:	xor    edi,eax
  406fa8:	add    edx,ecx
  406faa:	add    edi,ecx
  406fac:	imul   edx,edi
  406faf:	add    edx,DWORD PTR [ebp-0x14]
  406fb2:	mov    DWORD PTR [ebp-0x14],edx
  406fb5:	mov    edx,DWORD PTR [ebp-0xc]
  406fb8:	mov    edi,DWORD PTR [ebp-0x24]
  406fbb:	xor    edx,eax
  406fbd:	add    edx,ecx
  406fbf:	imul   edx,edi
  406fc2:	mov    edi,DWORD PTR [ebp-0xc]
  406fc5:	xor    edi,eax
  406fc7:	sub    edx,edi
  406fc9:	mov    edi,DWORD PTR [ebp-0xc]
  406fcc:	mov    ebx,DWORD PTR [ebp-0x14]
  406fcf:	xor    edi,eax
  406fd1:	add    edi,ecx
  406fd3:	imul   edi,ebx
  406fd6:	mov    ebx,DWORD PTR [ebp-0x18]
  406fd9:	xor    ebx,eax
  406fdb:	sub    edx,ecx
  406fdd:	lea    edi,[edi+ebx*1+0x32729f]
  406fe4:	cmp    edi,edx
  406fe6:	jbe    0x406b54
  406fec:	mov    edx,DWORD PTR [ebp-0xc]
  406fef:	mov    edi,DWORD PTR [ebp-0x24]
  406ff2:	xor    edx,eax
  406ff4:	add    edx,ecx
  406ff6:	imul   edx,edi
  406ff9:	mov    edi,DWORD PTR [ebp-0x18]
  406ffc:	xor    edi,eax
  406ffe:	jmp    0x407150
  407003:	hlt    
  407004:	jae    0x40702b
  407006:	pop    ds
  407007:	mov    ecx,0xa4a98439
  40700c:	pushf  
  40700d:	sbb    al,0x11
  40700f:	pop    es
  407010:	push   esi
  407011:	test   ebx,eax
  407013:	add    bl,BYTE PTR [edx]
  407015:	jle    0x407095
  407017:	and    edi,DWORD PTR [edi+0x7e]
  40701a:	jle    0x407004
  40701c:	dec    edi
  40701d:	mov    ah,0xda
  40701f:	mov    DWORD PTR ds:0x45d0b757,edi
  407025:	cld    
  407026:	adc    al,0x3a
  407028:	and    esp,edi
  40702a:	mov    bh,0x16
  40702c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40702d:	jl     0x4070ad
  40702f:	xlat   BYTE PTR ds:[ebx]
  407030:	sub    DWORD PTR [ebx-0x52d2c4c5],edx
  407036:	mov    dl,0xcd
  407038:	or     ecx,esi
  40703a:	inc    esi
  40703b:	(bad)  
  40703c:	sahf   
  40703d:	sub    al,0xae
  40703f:	pop    ebx
  407040:	push   ds
  407041:	popf   
  407042:	mov    eax,DWORD PTR [edx+0x38d18585]
  407048:	jbe    0x407059
  40704a:	cld    
  40704b:	jmp    0x28c1806d
  407050:	or     DWORD PTR [eax],0xffffff87
  407053:	add    al,0xdf
  407055:	test   al,bl
  407057:	test   eax,0xa4c27c47
  40705c:	icebp  
  40705d:	xchg   esi,eax
  40705e:	loopne 0x407098
  407060:	retf   
  407061:	push   ecx
  407062:	xor    ch,BYTE PTR [edi-0x1962ca03]
  407068:	ret    
  407069:	jmp    0x3a08:0xd826404d
  407070:	fmulp  st(2),st
  407072:	push   ecx
  407073:	xchg   edi,eax
  407074:	out    dx,al
  407075:	xor    eax,0x5bfa5f9b
  40707a:	push   ds
  40707b:	pop    ecx
  40707c:	xor    DWORD PTR [edx+0x9],ebx
  40707f:	mov    ah,bh
  407081:	xchg   DWORD PTR [eax],eax
  407083:	pop    esi
  407084:	pushf  
  407085:	push   ebp
  407086:	in     al,dx
  407087:	aas    
  407088:	mov    eax,ds:0xc8a2fcf7
  40708d:	inc    edi
  40708e:	imul   edx,DWORD PTR ds:0x3e6b8ced,0xe1e72eb8
  407098:	ret    0xd78b
  40709b:	jmp    0x4070a8
  40709d:	adc    DWORD PTR [eax],edi
  40709f:	sbb    ah,ch
  4070a1:	pushf  
  4070a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070a3:	lods   al,BYTE PTR ds:[esi]
  4070a4:	pop    ecx
  4070a5:	jmp    0xe916:0x94b00776
  4070ac:	aam    0xb0
  4070ae:	adc    ah,BYTE PTR [ecx+0x4e]
  4070b1:	(bad)  
  4070b2:	xor    al,BYTE PTR [ebx+0x1e0c61db]
  4070b8:	test   BYTE PTR [ebp+ecx*1+0x1be2ddc5],al
  4070bf:	retf   0x4498
  4070c2:	or     bl,BYTE PTR [eax-0x13]
  4070c5:	jnp    0x4070ff
  4070c7:	not    BYTE PTR [edx-0x90c1521]
  4070cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070ce:	sub    esi,DWORD PTR [ebx+0xaf858e6]
  4070d4:	pop    es
  4070d5:	pop    ebx
  4070d6:	mov    ds:0xaac982db,eax
  4070db:	push   0xc26bea78
  4070e0:	int3   
  4070e1:	test   eax,0x7c5b725c
  4070e6:	push   ds
  4070e7:	call   0x60458e2e
  4070ec:	rol    BYTE PTR [eax+0x7e0419ad],cl
  4070f2:	es push esp
  4070f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070f5:	mov    edi,0xc2169b26
  4070fa:	loopne 0x407159
  4070fc:	int    0xf4
  4070fe:	int3   
  4070ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407100:	push   eax
  407101:	outs   dx,DWORD PTR ds:[esi]
  407102:	lods   eax,DWORD PTR ds:[esi]
  407103:	(bad)  
  407104:	in     eax,0x3
  407106:	addr16 or al,0x99
  407109:	fld    DWORD PTR [ecx+eax*8-0xf754ab2]
  407110:	push   esi
  407111:	mov    eax,0x19edc1c7
  407116:	js     0x4070e7
  407118:	popa   
  407119:	(bad)  
  40711a:	out    dx,al
  40711b:	test   al,0x8c
  40711d:	adc    al,0xc8
  40711f:	ror    ebx,0x39
  407122:	lods   al,BYTE PTR ds:[esi]
  407123:	xor    DWORD PTR [esi],ebx
  407125:	outs   dx,DWORD PTR ds:[esi]
  407126:	push   edi
  407127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407128:	sub    DWORD PTR [esi-0x13],eax
  40712b:	lock cld 
  40712d:	mov    esi,DWORD PTR [ecx]
  40712f:	add    cl,BYTE PTR [esi-0x79]
  407132:	lahf   
  407133:	cdq    
  407134:	test   ecx,ecx
  407136:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407137:	in     al,dx
  407138:	fisttp DWORD PTR [ecx-0x80]
  40713b:	les    edi,FWORD PTR [ecx+0x5b0d8656]
  407141:	(bad)  
  407142:	jbe    0x407169
  407144:	sbb    DWORD PTR [edi-0x7ff07d56],ebp
  40714a:	fimul  DWORD PTR [edx+0x3296909e]
  407150:	add    edx,edi
  407152:	mov    edi,DWORD PTR [ebp-0x8]
  407155:	lea    edx,[edx+edi*1+0x32729f]
  40715c:	mov    DWORD PTR [ebp-0x8],edx
  40715f:	mov    edx,DWORD PTR [ebp-0x20]
  407162:	xor    edx,eax
  407164:	mov    edi,0xffcd8d61
  407169:	sub    edi,edx
  40716b:	add    edi,DWORD PTR [ebp-0x10]
  40716e:	jmp    0x4072c0
  407173:	sub    ebp,DWORD PTR [edi+0x59798f79]
  407179:	jmp    0x9398b939
  40717e:	sub    al,0x62
  407180:	les    edx,FWORD PTR ss:0x7e7e1b37
  407187:	and    edi,DWORD PTR [edi+0x7e]
  40718a:	jle    0x4071c1
  40718c:	push   ds
  40718d:	jb     0x4071c3
  40718f:	mov    al,0x6c
  407191:	inc    eax
  407192:	pop    ebx
  407193:	mov    DWORD PTR [ebx-0x2c89b399],eax
  407199:	lds    ecx,FWORD PTR [ebp+0x1d]
  40719c:	fidivr DWORD PTR [ebp+0x520297e8]
  4071a2:	mov    bh,0x67
  4071a4:	xchg   ecx,eax
  4071a5:	jne    0x40716c
  4071a7:	mov    ah,cl
  4071a9:	push   ecx
  4071aa:	sub    bh,BYTE PTR [edx+eax*4]
  4071ad:	cmp    BYTE PTR [ebp+0x55],cl
  4071b0:	lock outs dx,BYTE PTR ds:[esi]
  4071b2:	inc    ecx
  4071b3:	cmp    bl,BYTE PTR ds:0x5d53e7be
  4071b9:	cmp    eax,DWORD PTR [ebx]
  4071bb:	loop   0x4071bb
  4071bd:	mov    eax,DWORD PTR [edx+0x190f4f15]
  4071c3:	sub    al,0xd6
  4071c5:	hlt    
  4071c6:	or     eax,0x550f6f8f
  4071cb:	and    DWORD PTR [ecx+ecx*2-0x7f5bb6f5],eax
  4071d2:	out    dx,al
  4071d3:	lds    eax,FWORD PTR [edx-0x39c40f60]
  4071d9:	dec    edx
  4071da:	inc    edi
  4071db:	pusha  
  4071dc:	mov    al,0xd9
  4071de:	jns    0x407160
  4071e0:	adc    DWORD PTR [ecx],ecx
  4071e2:	cmovne esi,DWORD PTR [eax]
  4071e5:	adc    eax,0x464752b3
  4071ea:	cmp    DWORD PTR [edi+0x8],esi
  4071ed:	mov    eax,ds:0xadaa5133
  4071f2:	inc    edi
  4071f3:	mov    ebx,0x629b8f46
  4071f8:	stc    
  4071f9:	rol    BYTE PTR [esi-0x5],1
  4071fc:	and    al,al
  4071fe:	jo     0x407180
  407200:	and    esp,ecx
  407202:	or     ah,BYTE PTR [ebx-0x5fccafb2]
  407208:	push   ecx
  407209:	fcomp  DWORD PTR [ebp+edx*2+0x599f93ea]
  407210:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407211:	and    ah,bh
  407213:	mov    ch,0x90
  407215:	jmp    0x98d0:0xcbf986a6
  40721c:	sbb    BYTE PTR [ebp+0x4359799d],ch
  407222:	xchg   esp,eax
  407223:	jp     0x4071cd
  407225:	xlat   BYTE PTR ds:[ebx]
  407226:	add    BYTE PTR [ecx],bh
  407228:	dec    ebp
  407229:	fist   DWORD PTR ds:0x7e931130
  40722f:	or     eax,0xe3c574ac
  407234:	std    
  407235:	dec    BYTE PTR [ebx+edx*4-0x8]
  407239:	xchg   DWORD PTR [ebp-0x4e],ecx
  40723c:	inc    ecx
  40723d:	and    bl,BYTE PTR ds:0x24c71cce
  407243:	mov    edi,0x45f16074
  407248:	pop    edx
  407249:	push   esi
  40724a:	fcmovbe st,st(4)
  40724c:	shl    ebp,cl
  40724e:	push   ecx
  40724f:	outs   dx,BYTE PTR ds:[esi]
  407250:	out    dx,eax
  407251:	sub    DWORD PTR [eax+0x4955df31],esi
  407257:	pop    DWORD PTR [edi-0x44]
  40725a:	pop    es
  40725b:	sbb    al,0x29
  40725d:	cld    
  40725e:	pop    es
  40725f:	pop    esi
  407260:	out    0xee,eax
  407262:	or     edi,edi
  407264:	sbb    al,0x7c
  407266:	xchg   ebx,eax
  407267:	dec    edi
  407268:	or     cl,al
  40726a:	xchg   edx,eax
  40726b:	stos   BYTE PTR es:[edi],al
  40726c:	push   ecx
  40726d:	fmul   DWORD PTR [eax*2-0x34f8991d]
  407274:	mov    dh,0x81
  407276:	mov    dl,0x85
  407278:	push   esp
  407279:	push   cs
  40727a:	cmp    al,0xfd
  40727c:	inc    esp
  40727d:	call   0x6108a27
  407282:	push   edx
  407283:	sub    BYTE PTR [ebp+0x3d],cl
  407286:	stos   DWORD PTR es:[edi],eax
  407287:	adc    DWORD PTR [edx-0x5e4f93b1],edi
  40728d:	add    ebx,DWORD PTR [edx-0x57ba8b43]
  407293:	pusha  
  407294:	cmp    eax,0x52db8a7a
  407299:	mov    ecx,0xa6db234a
  40729e:	imul   edi,esp,0x59
  4072a1:	jg     0x4072fa
  4072a3:	and    al,0xde
  4072a5:	in     al,dx
  4072a6:	xchg   edx,eax
  4072a7:	push   ebx
  4072a8:	jle    0x407314
  4072aa:	shr    DWORD PTR [ecx-0x3106efd8],cl
  4072b0:	(bad)  
  4072b1:	fstp   DWORD PTR [edi]
  4072b3:	jp     0x407242
  4072b5:	add    cl,dl
  4072b7:	jge    0x407272
  4072b9:	push   esp
  4072ba:	sub    DWORD PTR [ecx+0x4c625284],ebp
  4072c0:	mov    edx,DWORD PTR [ebp-0x20]
  4072c3:	mov    ebx,DWORD PTR [ebp-0x8]
  4072c6:	xor    edx,eax
  4072c8:	add    edx,ecx
  4072ca:	imul   edx,ebx
  4072cd:	cmp    edx,edi
  4072cf:	jbe    0x40619a
  4072d5:	pop    ebx
  4072d6:	jmp    0x407428
  4072db:	push   ds
  4072dc:	cld    
  4072dd:	dec    edi
  4072de:	or     ebp,DWORD PTR [ebp-0x27]
  4072e1:	jp     0x40728c
  4072e3:	adc    edi,0x74380f0c
  4072e9:	add    BYTE PTR [edi+0x7e7e18f8],ah
  4072ef:	and    edi,DWORD PTR [edi+0x7e]
  4072f2:	jle    0x4072fc
  4072f4:	pop    ss
  4072f5:	je     0x4072a0
  4072f7:	mov    ah,0xc4
  4072f9:	xchg   edi,eax
  4072fa:	pop    eax
  4072fb:	push   eax
  4072fc:	mov    BYTE PTR [edi],bl
  4072fe:	dec    ebx
  4072ff:	mov    ebx,0x40c4d9cc
  407304:	sub    al,0xf3
  407306:	add    DWORD PTR [edx-0x3d],edi
  407309:	inc    esp
  40730a:	rcl    BYTE PTR [ebx],1
  40730c:	cmp    bh,BYTE PTR [edi]
  40730e:	fisttp DWORD PTR [ebx]
  407310:	imul   ebp
  407312:	mov    dl,0x8d
  407314:	cmp    bl,bh
  407316:	fimul  DWORD PTR [ebx-0x6a]
  407319:	jo     0x40738c
  40731b:	les    ebp,FWORD PTR [edi+0x1fd4f98e]
  407321:	pop    es
  407322:	test   DWORD PTR [edi+0x1eb62a17],ebx
  407328:	mov    edx,DWORD PTR [eax+0x59]
  40732b:	sbb    ch,cl
  40732d:	xlat   BYTE PTR ds:[ebx]
  40732e:	lods   al,BYTE PTR ds:[esi]
  40732f:	mov    bl,BYTE PTR [edx-0x1fcb336a]
  407335:	pop    ebp
  407336:	sbb    BYTE PTR [ebp-0x2a],0x36
  40733a:	shl    ecx,0xa1
  40733d:	jl     0x4072fa
  40733f:	xor    BYTE PTR [edx],al
  407341:	adc    eax,0x17bd9b50
  407346:	ins    BYTE PTR es:[edi],dx
  407347:	push   eax
  407348:	add    BYTE PTR [ecx+0x36a67929],0x54
  40734f:	enter  0x454,0x61
  407353:	clc    
  407354:	mov    BYTE PTR [edi-0x334064f8],cl
  40735a:	aas    
  40735b:	lock jg 0x407380
  40735e:	mov    cl,0x7f
  407360:	cmp    ecx,ebx
  407362:	inc    ebx
  407364:	sahf   
  407365:	in     al,0x5b
  407367:	sub    DWORD PTR [eax+0x685da6d3],esi
  40736d:	inc    edx
  40736e:	jne    0x4073bf
  407370:	rcr    DWORD PTR [eax],0xd1
  407373:	imul   BYTE PTR [edx]
  407375:	daa    
  407376:	stc    
  407377:	jno    0x4073f6
  407379:	fcmovbe st,st(3)
  40737b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40737d:	or     ebx,DWORD PTR [ebx-0xfdefe39]
  407383:	mov    edx,0x38bccf0d
  407388:	int3   
  407389:	(bad)  
  40738a:	mov    WORD PTR [ebx],?
  40738c:	cmp    al,0xd0
  40738e:	out    0x94,eax
  407390:	xchg   esp,eax
  407391:	fistp  QWORD PTR [ebp-0x80]
  407394:	sub    eax,0xf574f39c
  407399:	inc    edi
  40739a:	jecxz  0x407360
  40739c:	mov    edi,0x4e1daf02
  4073a1:	sub    BYTE PTR [edi+ebx*1],dl
  4073a4:	push   edi
  4073a5:	mov    ds:0x338dc4b3,eax
  4073aa:	sbb    BYTE PTR [edi+edi*1-0x49],dl
  4073ae:	enter  0x48d,0x19
  4073b2:	xchg   ebp,eax
  4073b3:	push   ds
  4073b4:	fcmove st,st(4)
  4073b6:	stos   DWORD PTR es:[edi],eax
  4073b7:	and    bl,BYTE PTR ds:0x2780ee80
  4073bd:	in     al,0x0
  4073bf:	cmc    
  4073c0:	cli    
  4073c1:	jmp    0x3869:0xfd0b577c
  4073c8:	and    DWORD PTR [edi],edx
  4073ca:	adc    eax,0x1
  4073cd:	scas   eax,DWORD PTR es:[edi]
  4073ce:	dec    ebx
  4073cf:	rcr    DWORD PTR [edi+edx*2],cl
  4073d2:	in     eax,0xe1
  4073d4:	xchg   BYTE PTR [edx-0x547b9c41],cl
  4073da:	cmc    
  4073db:	cld    
  4073dc:	(bad)  
  4073dd:	jp     0x40740f
  4073df:	xor    ecx,DWORD PTR [ecx-0x68d2ef64]
  4073e5:	in     al,dx
  4073e6:	aas    
  4073e7:	scas   al,BYTE PTR es:[edi]
  4073e8:	ins    DWORD PTR es:[edi],dx
  4073e9:	pop    ebx
  4073ea:	enter  0x8575,0xe0
  4073ee:	imul   bh
  4073f0:	cmp    DWORD PTR [eax-0x15ebfbd8],edi
  4073f6:	pushf  
  4073f7:	cmp    ebp,DWORD PTR [edi+0x22]
  4073fa:	push   es
  4073fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073fc:	jb     0x40745e
  4073fe:	int3   
  4073ff:	xchg   ebx,eax
  407400:	test   BYTE PTR [ecx],0xe4
  407403:	and    BYTE PTR [ebp-0x70],0xc3
  407407:	repz pop esp
  407409:	out    0xf,eax
  40740b:	push   ebp
  40740c:	jo     0x407432
  40740e:	add    al,0x4c
  407410:	pusha  
  407411:	pop    edi
  407412:	pop    ss
  407413:	(bad)  
  407414:	data16 mov ah,0xad
  407417:	sbb    eax,0x34a9936d
  40741c:	fcmovnbe st,st(6)
  40741e:	mov    eax,0xb3827b46
  407423:	fadd   DWORD PTR [edi-0x11]
  407426:	jle    0x4073c4
  407428:	pop    edi
  407429:	leave  
  40742a:	ret    0x8
  40742d:	push   ebp
  40742e:	mov    ebp,esp
  407430:	jmp    0x4075bc
  407435:	jb     0x407447
  407437:	test   eax,0x8a95a91d
  40743c:	adc    DWORD PTR [ebp+eax*1+0x1a7a27ff],edi
  407443:	popf   
  407444:	xchg   esp,eax
  407445:	lods   eax,DWORD PTR ds:[esi]
  407446:	sbb    DWORD PTR [esi+0x7e],edi
  407449:	jmp    0x1fbef2cd
  40744e:	mov    al,0x44
  407450:	adc    al,0x27
  407452:	fs fs xchg esp,eax
  407455:	out    dx,eax
  407456:	call   0xb29d60b5
  40745b:	popf   
  40745c:	(bad)  
  40745d:	adc    al,0x9b
  40745f:	mov    ds:0xa4d7aee8,eax
  407464:	test   al,0x83
  407466:	cmp    DWORD PTR [edx-0x62c54ee0],ebx
  40746c:	pop    ebp
  40746d:	test   al,0x79
  40746f:	mov    ebx,0xf090f540
  407474:	jecxz  0x407498
  407476:	adc    BYTE PTR ds:0xf455765b,al
  40747c:	stc    
  40747d:	xor    al,0xb6
  40747f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407480:	inc    eax
  407481:	pusha  
  407482:	hlt    
  407483:	mov    BYTE PTR [edi],ch
  407485:	test   al,0x62
  407487:	dec    ebx
  407488:	mov    cl,0x5b
  40748a:	adc    al,0x5b
  40748c:	mov    cs,WORD PTR [edi]
  40748e:	loop   0x407431
  407490:	push   ds
  407491:	lds    edi,FWORD PTR [esi+0x658b8c59]
  407497:	mov    ebx,0xf26df950
  40749c:	push   edi
  40749d:	adc    BYTE PTR [edi+0x19],bh
  4074a0:	mov    esp,0xdf173f1e
  4074a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074a6:	ror    DWORD PTR [eax],1
  4074a8:	mov    eax,0x360f7584
  4074ad:	mov    ebp,DWORD PTR [edx]
  4074af:	rol    edx,0x0
  4074b2:	pop    eax
  4074b3:	cli    
  4074b4:	jne    0x4074d4
  4074b6:	scas   al,BYTE PTR es:[edi]
  4074b7:	stc    
  4074b8:	jae    0x4074cd
  4074ba:	dec    ebx
  4074bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074bc:	pushf  
  4074bd:	je     0x4074d3
  4074bf:	and    eax,0x50b180a1
  4074c4:	or     esp,DWORD PTR [edx+0x52300279]
  4074ca:	cmc    
  4074cb:	sub    al,0x82
  4074cd:	outs   dx,DWORD PTR ds:[esi]
  4074ce:	fistp  QWORD PTR [ebx]
  4074d0:	mov    ch,0x6f
  4074d2:	stos   BYTE PTR es:[edi],al
  4074d3:	jno    0x407537
  4074d5:	mov    dh,ah
  4074d7:	xchg   ebx,eax
  4074d8:	mov    al,0xc1
  4074da:	or     DWORD PTR [ecx-0x159e7c2],edx
  4074e0:	in     al,0x52
  4074e2:	ret    0xb4e6
  4074e5:	loope  0x40752a
  4074e7:	repnz fild DWORD PTR [ebx-0x354b0b27]
  4074ee:	push   ebx
  4074ef:	pushf  
  4074f0:	in     eax,0xe1
  4074f2:	loope  0x40755f
  4074f4:	aaa    
  4074f5:	xchg   edx,ecx
  4074f7:	push   ecx
  4074f8:	popa   
  4074f9:	scas   eax,DWORD PTR es:[edi]
  4074fa:	push   edi
  4074fb:	push   ss
  4074fc:	mov    cl,0x67
  4074fe:	outs   dx,DWORD PTR ds:[esi]
  4074ff:	push   esp
  407500:	add    esi,DWORD PTR [edx]
  407502:	imul   ebx,DWORD PTR [esi-0x40fee205],0xa
  407509:	or     ebp,ebp
  40750b:	jecxz  0x4074b4
  40750d:	js     0x407527
  40750f:	jo     0x4074c0
  407511:	loopne 0x407532
  407513:	jns    0x407577
  407515:	popf   
  407516:	mov    dl,0x21
  407518:	mov    cl,0xc9
  40751a:	push   edi
  40751b:	add    edx,ecx
  40751d:	icebp  
  40751e:	adc    edx,ecx
  407520:	pop    ss
  407521:	dec    esi
  407522:	call   0x18ad:0x15448db1
  407529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40752a:	mov    al,ds:0xc5504604
  40752f:	test   al,0x59
  407531:	and    dl,BYTE PTR [ebp+0x35]
  407534:	sbb    eax,0x8fb3d07b
  407539:	sbb    BYTE PTR [ecx+ebx*1],bh
  40753c:	inc    edx
  40753d:	inc    eax
  40753e:	sub    eax,0xff019986
  407543:	scas   eax,DWORD PTR es:[edi]
  407544:	test   eax,0x55496848
  407549:	int3   
  40754a:	mov    BYTE PTR [ecx],cl
  40754c:	push   DWORD PTR [esi]
  40754e:	sub    BYTE PTR ds:0x4e344f0e,ah
  407554:	cmp    esp,eax
  407556:	jb     0x4074f9
  407558:	add    al,0x27
  40755a:	pop    edi
  40755b:	ja     0x407559
  40755d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40755e:	lock adc DWORD PTR [eax+0x79],ecx
  407562:	call   edi
  407564:	dec    ebp
  407565:	jecxz  0x407546
  407567:	cwde   
  407568:	cmp    DWORD PTR [eax+0x3dcad20b],ebx
  40756e:	ins    DWORD PTR es:[edi],dx
  40756f:	mov    ah,0x47
  407571:	out    0xf5,eax
  407573:	test   eax,0x6603da62
  407578:	fidiv  WORD PTR [eax]
  40757a:	pop    ss
  40757b:	xchg   esp,eax
  40757c:	jo     0x4074fe
  40757e:	shr    BYTE PTR [ebp-0x2f3851be],0x14
  407585:	inc    esi
  407586:	call   0x39e6cdb5
  40758b:	dec    ecx
  40758c:	mov    bl,0x5e
  40758e:	iret   
  40758f:	mov    edi,edx
  407591:	ret    0x8250
  407594:	sub    esp,ecx
  407596:	mov    bh,BYTE PTR [edx+0x1d]
  407599:	adc    BYTE PTR [eax],ch
  40759b:	mov    ss,WORD PTR [ecx]
  40759d:	sbb    eax,0x5dbd7f3d
  4075a2:	test   al,0x2f
  4075a4:	ror    DWORD PTR [ebx+0x68],1
  4075a7:	cwde   
  4075a8:	aaa    
  4075a9:	pop    edx
  4075aa:	mov    bh,0x61
  4075ac:	loope  0x407616
  4075ae:	push   ebx
  4075af:	test   al,0x39
  4075b1:	adc    DWORD PTR [ebx],edi
  4075b3:	aaa    
  4075b4:	mov    edx,0x285bcfc2
  4075b9:	mov    eax,DWORD PTR [ebx-0x7eaeaea5]
  4075bf:	and    eax,0x41abce
  4075c4:	add    BYTE PTR [eax],al
  4075c6:	add    BYTE PTR [eax],al
  4075c8:	jmp    0x4075da
  4075cd:	mov    edx,DWORD PTR ds:0x41abce
  4075d3:	inc    edx
  4075d4:	mov    DWORD PTR ds:0x41abce,edx
  4075da:	cmp    DWORD PTR ds:0x41abce,0x1e
  4075e1:	jae    0x407619
  4075e7:	cmp    DWORD PTR ds:0x41abce,0x20
  4075ee:	jne    0x40760a
  4075f4:	push   DWORD PTR [ebp-0x28]
  4075f7:	push   0x365e
  4075fc:	push   DWORD PTR [ebp-0x18]
  4075ff:	push   0x4c62
  407604:	call   DWORD PTR ds:0x40d004
  40760a:	jmp    0x4075cd
  40760f:	xor    DWORD PTR ds:0x412374,0x3a52
  407619:	mov    eax,0xf89c8538
  40761e:	sub    ecx,ecx
  407620:	mov    DWORD PTR [ebp-0x8],eax
  407623:	and    DWORD PTR ds:0x41abd6,0x0
  40762d:	jmp    0x40763f
  407632:	mov    ecx,DWORD PTR ds:0x41abd6
  407638:	inc    ecx
  407639:	mov    DWORD PTR ds:0x41abd6,ecx
  40763f:	cmp    DWORD PTR ds:0x41abd6,0x1e
  407646:	jae    0x4076c6
  40764c:	cmp    DWORD PTR ds:0x41abd6,0x2d
  407653:	jne    0x40765f
  407659:	call   DWORD PTR ds:0x40d1d8
  40765f:	jmp    0x407632
  407664:	and    DWORD PTR ds:0x417e45,0x0
  40766e:	jmp    0x407680
  407673:	mov    edx,DWORD PTR ds:0x417e45
  407679:	inc    edx
  40767a:	mov    DWORD PTR ds:0x417e45,edx
  407680:	cmp    DWORD PTR ds:0x417e45,0x1b
  407687:	jae    0x4076c6
  40768d:	cmp    DWORD PTR ds:0x417e45,0x8
  407694:	jne    0x4076a5
  40769a:	push   0x41abea
  40769f:	call   DWORD PTR ds:0x40d1dc
  4076a5:	cmp    DWORD PTR ds:0x417e45,0x7
  4076ac:	jne    0x4076c1
  4076b2:	xor    edx,edx
  4076b4:	add    edx,DWORD PTR ds:0x417e45
  4076ba:	inc    edx
  4076bb:	mov    DWORD PTR ds:0x417e45,edx
  4076c1:	jmp    0x407673
  4076c6:	mov    DWORD PTR [ebp-0x4],0xf89c853b
  4076cd:	mov    edx,DWORD PTR [ebp-0x8]
  4076d0:	push   esi
  4076d1:	adc    esi,ecx
  4076d3:	mov    ecx,0x7510859
  4076d8:	xor    edx,ecx
  4076da:	mov    esi,0x32729f
  4076df:	push   edi
  4076e0:	mov    edi,DWORD PTR [ebp+0x10]
  4076e3:	add    edx,esi
  4076e5:	cmp    edi,edx
  4076e7:	jmp    0x407873
  4076ec:	iret   
  4076ed:	in     eax,0x74
  4076ef:	push   edx
  4076f0:	adc    al,0x63
  4076f2:	jns    0x40776d
  4076f4:	int    0x3e
  4076f6:	les    ebp,FWORD PTR [esi-0x2c]
  4076f9:	push   ebx
  4076fa:	mov    edi,0x7e1f1c15
  4076ff:	jle    0x4076ea
  407701:	jg     0x407781
  407703:	jle    0x4076d0
  407705:	jno    0x4076c6
  407707:	dec    ecx
  407708:	ror    DWORD PTR [ebx],cl
  40770a:	out    dx,eax
  40770b:	lahf   
  40770c:	sub    cl,BYTE PTR [esi]
  40770e:	add    al,0xd
  407710:	es cmc 
  407712:	sbb    dl,dl
  407714:	mov    BYTE PTR [esi-0x60b28af4],al
  40771a:	pop    edi
  40771b:	int3   
  40771c:	das    
  40771d:	dec    edx
  40771e:	mov    ecx,0x73049be9
  407723:	jecxz  0x407761
  407725:	lods   eax,DWORD PTR ds:[esi]
  407726:	out    0x6f,al
  407728:	sbb    bl,BYTE PTR cs:[edx]
  40772b:	mov    ebp,DWORD PTR [esi]
  40772d:	inc    edx
  40772e:	sub    dl,bh
  407730:	arpl   WORD PTR [edi],di
  407732:	repz aam 0x18
  407735:	or     eax,0xaae8a4ad
  40773a:	sbb    ecx,DWORD PTR [ebx]
  40773c:	add    ecx,DWORD PTR [edx-0x175db2eb]
  407742:	sbb    edx,DWORD PTR [ecx]
  407744:	xchg   edx,eax
  407745:	jp     0x4077af
  407747:	pop    edx
  407748:	pop    ebx
  407749:	jns    0x407725
  40774b:	mov    cl,0xff
  40774d:	push   es
  40774e:	call   0x45ad:0x1ed8b3b3
  407755:	js     0x407770
  407757:	js     0x40771c
  407759:	push   eax
  40775a:	and    BYTE PTR [esi],dl
  40775c:	clc    
  40775d:	sbb    ch,BYTE PTR [eax+0xad380a9]
  407763:	push   0xffffffde
  407765:	mov    eax,0x1076c5d0
  40776a:	repz push esp
  40776c:	test   al,dl
  40776e:	sbb    BYTE PTR [edi-0x5b],cl
  407771:	shl    esi,0xe1
  407774:	push   edi
  407775:	daa    
  407776:	pop    ebp
  407777:	lock lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40777a:	dec    edx
  40777b:	aas    
  40777c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40777d:	and    DWORD PTR [esp+ecx*8-0x71],0xffffffa5
  407782:	add    eax,0x9d018503
  407787:	into   
  407788:	and    al,0xc1
  40778a:	test   eax,0x112d2a5a
  40778f:	cmc    
  407790:	iret   
  407791:	ins    BYTE PTR es:[edi],dx
  407792:	pushf  
  407793:	pop    esp
  407794:	aam    0xd1
  407796:	js     0x407765
  407798:	dec    edi
  407799:	sbb    bl,BYTE PTR [ebx+0x37]
  40779c:	test   BYTE PTR [ebx+0x7b0ac64],al
  4077a2:	xchg   dh,al
  4077a4:	rcl    dl,cl
  4077a6:	pop    edi
  4077a7:	in     al,0x32
  4077a9:	sub    DWORD PTR [edx+ebx*2],ebp
  4077ac:	xchg   ebx,eax
  4077ad:	lods   eax,DWORD PTR ds:[esi]
  4077ae:	sbb    BYTE PTR [esp+edi*8],0x6e
  4077b2:	in     eax,dx
  4077b3:	dec    edi
  4077b4:	fimul  WORD PTR [ebx-0x62]
  4077b7:	scas   eax,DWORD PTR es:[edi]
  4077b8:	(bad)  
  4077b9:	xor    eax,0xc9c866a8
  4077be:	stos   DWORD PTR es:[edi],eax
  4077bf:	data16 sar BYTE PTR [edx],0xc9
  4077c3:	retf   
  4077c4:	xor    bh,BYTE PTR [ebp+0x49]
  4077c7:	leave  
  4077c8:	mov    BYTE PTR [edx+0x6f76f569],dl
  4077ce:	mov    edx,ebp
  4077d0:	mov    ds:0xda80da09,al
  4077d5:	xor    esp,DWORD PTR [esi]
  4077d7:	xor    eax,0xe93a3b09
  4077dc:	sub    edx,ebp
  4077de:	jmp    0x36486382
  4077e3:	loope  0x4077bb
  4077e5:	pop    ecx
  4077e6:	mov    ecx,esp
  4077e8:	mov    ah,0x4f
  4077ea:	aam    0x26
  4077ec:	rcl    edx,0x11
  4077ef:	push   ds
  4077f0:	and    ebp,ebp
  4077f2:	sbb    DWORD PTR ds:[edi+eax*8-0x7e65dc36],esi
  4077fa:	sub    eax,0xf475e151
  4077ff:	mov    eax,0x12cf5b76
  407804:	push   ebx
  407805:	repz or al,0xa3
  407808:	mov    ds:0xa659f5b4,eax
  40780d:	cmp    al,0x9e
  40780f:	mov    BYTE PTR [edi-0x20],dh
  407812:	xor    al,0x13
  407814:	mov    dl,0x47
  407816:	(bad)  
  407817:	shl    DWORD PTR cs:[edi],1
  40781a:	mov    esp,0x944b6977
  40781f:	and    al,0xca
  407821:	sar    BYTE PTR [edx+0x2e],0xab
  407825:	push   0xcd6d6b6c
  40782a:	sahf   
  40782b:	scas   eax,DWORD PTR es:[edi]
  40782c:	cdq    
  40782d:	xor    dl,BYTE PTR [eax-0x12f35c0c]
  407833:	lods   eax,DWORD PTR ds:[esi]
  407834:	pop    edx
  407835:	test   BYTE PTR [ecx],0xa5
  407838:	in     al,dx
  407839:	retf   
  40783a:	rol    esp,1
  40783c:	dec    edi
  40783d:	sub    eax,0xab1e7ba3
  407842:	loopne 0x4077db
  407844:	hlt    
  407845:	add    BYTE PTR [eax-0xd],0xf9
  407849:	inc    ecx
  40784a:	inc    esi
  40784b:	jb     0x407883
  40784d:	rcl    BYTE PTR [esi+0x2fb3b74],cl
  407853:	mov    edi,0xc402d337
  407858:	or     ecx,DWORD PTR es:[edx]
  40785b:	xor    dl,bl
  40785d:	div    BYTE PTR [edi+eiz*8]
  407860:	sti    
  407861:	test   eax,0x368685c
  407866:	sbb    BYTE PTR [edi-0xec6413d],0xc8
  40786d:	jmp    0x836e8cbc
  407872:	lea    ecx,[edi]
  407874:	test   BYTE PTR [ebx-0x16fffffd],cl
  40787a:	xchg   DWORD PTR [ecx],eax
  40787c:	add    BYTE PTR [eax],al
  40787e:	in     eax,dx
  40787f:	(bad)  
  407880:	pop    esi
  407881:	jg     0x4078d7
  407883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407884:	ins    DWORD PTR es:[edi],dx
  407885:	in     eax,0x5e
  407887:	imul   eax,DWORD PTR [esi+0x45bf128c],0xffffffca
  40788e:	(bad)  
  40788f:	sbb    al,0x7e
  407891:	jle    0x40787c
  407893:	jg     0x407913
  407895:	jle    0x407878
  407897:	stc    
  407898:	xchg   ebp,eax
  407899:	and    DWORD PTR [eax],ebp
  40789b:	dec    ebp
  40789c:	and    DWORD PTR [eax-0x6fc801af],eax
  4078a2:	dec    eax
  4078a3:	mov    ds:0x21e6e5e2,al
  4078a8:	and    ebx,DWORD PTR [ebp-0x6e]
  4078ab:	dec    eax
  4078ac:	mov    al,gs:0x947a8a78
  4078b2:	sub    BYTE PTR [eax+0x4ab2c63f],bl
  4078b8:	sbb    al,0x4a
  4078ba:	ja     0x4078f0
  4078bc:	mov    DWORD PTR [edx+0x35],eax
  4078bf:	(bad)  
  4078c0:	lds    ebp,FWORD PTR [edx+ebp*4-0xf5ab589]
  4078c7:	push   ecx
  4078c8:	sbb    ch,BYTE PTR [ebp+0x48]
  4078cb:	bound  esp,QWORD PTR [ebp+0x17]
  4078ce:	push   0x8788e62b
  4078d3:	and    BYTE PTR [ebx-0x5f],al
  4078d6:	scas   al,BYTE PTR es:[edi]
  4078d7:	call   0x84e05c2b
  4078dc:	cwde   
  4078dd:	pop    eax
  4078de:	not    BYTE PTR [ebp-0x36]
  4078e1:	js     0x407880
  4078e3:	sahf   
  4078e4:	mov    ah,0x96
  4078e6:	mov    ebx,0xe0faf970
  4078eb:	lds    edi,FWORD PTR [ebx+0xeae4fe5]
  4078f1:	shl    BYTE PTR [esi-0x7f],1
  4078f4:	xor    DWORD PTR [edi+0x2a],edx
  4078f7:	stos   BYTE PTR es:[di],al
  4078f9:	jp     0x671cb8de
  4078ff:	and    ebp,0xf7ed550a
  407905:	in     eax,0x43
  407907:	fidivr WORD PTR [ecx+esi*1+0x7c2ea2c5]
  40790e:	sub    eax,0x10061dd5
  407913:	scas   al,BYTE PTR es:[edi]
  407914:	lds    ecx,FWORD PTR [esp+esi*4-0x39]
  407918:	cmp    DWORD PTR [edx-0xd46825d],ebx
  40791e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40791f:	sbb    BYTE PTR ds:0xad161863,dh
  407925:	iret   
  407926:	ret    
  407927:	(bad)  
  407929:	mov    ch,0x1f
  40792b:	or     eax,0x27db3a68
  407930:	lea    ecx,[edi]
  407932:	pop    edi
  407933:	and    ebp,DWORD PTR [eax-0x7ae81bac]
  407939:	popa   
  40793a:	dec    esi
  40793b:	mov    edx,0x9438db66
  407940:	inc    ebx
  407941:	sub    DWORD PTR [edi+ecx*1+0x7c],ebx
  407945:	push   edi
  407946:	loope  0x40791f
  407948:	test   eax,ecx
  40794a:	sub    edx,DWORD PTR [ebx]
  40794c:	and    DWORD PTR [ebx+0x38],edx
  40794f:	das    
  407950:	shl    BYTE PTR [ebp+0x43],0x2b
  407954:	adc    al,0xb
  407956:	mov    esi,0xbd38081
  40795b:	mov    ebx,0xd6dd4c72
  407960:	das    
  407961:	repz mov eax,0xefe31b5d
  407967:	enter  0x9a1d,0x38
  40796b:	in     eax,0xdf
  40796d:	ja     0x40792b
  40796f:	inc    eax
  407970:	mov    esi,0x8b02941d
  407975:	and    esi,0x3f7b22b2
  40797b:	push   edx
  40797c:	dec    edi
  40797d:	jo     0x4079ef
  40797f:	xor    eax,0xec3f8d15
  407984:	inc    edx
  407985:	outs   dx,BYTE PTR ds:[esi]
  407986:	or     edx,edx
  407988:	aaa    
  407989:	js     0x40795d
  40798b:	mov    ds:0xb96ce5f8,al
  407990:	inc    ecx
  407991:	jp     0x407973
  407993:	lock lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407996:	adc    BYTE PTR [eax],dl
  407998:	std    
  407999:	out    dx,al
  40799a:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40799c:	imul   ecx,DWORD PTR [esi+eax*8+0x10ac0d97],0x73611ad
  4079a7:	popf   
  4079a8:	mov    ss,WORD PTR [esi-0x1ba31ec5]
  4079ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079af:	fimul  DWORD PTR [ebx+0x2b]
  4079b2:	cdq    
  4079b3:	xchg   ecx,eax
  4079b4:	je     0x407995
  4079b6:	repz out dx,al
  4079b8:	jne    0x4079a8
  4079ba:	sub    eax,0xee6bef08
  4079bf:	loope  0x40795b
  4079c1:	jmp    0x6a5e:0x82d7dea0
  4079c8:	sti    
  4079c9:	dec    ebx
  4079ca:	push   ss
  4079cb:	dec    eax
  4079cc:	push   edx
  4079cd:	loope  0x407961
  4079cf:	jmp    0xe7ef:0x179d1ee4
  4079d6:	sbb    eax,0xcee1a77c
  4079db:	and    BYTE PTR ds:0x8083cd96,bl
  4079e1:	fild   WORD PTR ds:0xe9bd0583
  4079e7:	repz cmc 
  4079e9:	pop    ss
  4079ea:	xor    eax,0x5bdbaad
  4079ef:	aam    0x26
  4079f1:	lods   al,BYTE PTR ds:[esi]
  4079f2:	push   esp
  4079f3:	test   DWORD PTR [edi+0x8b615d],0x6388c068
  4079fd:	xor    DWORD PTR [edx+0x27cbbd81],esp
  407a03:	mov    ebx,0xf8558bdb
  407a08:	mov    eax,DWORD PTR [ebp-0x4]
  407a0b:	xor    eax,ecx
  407a0d:	mov    edi,0xffcd8d61
  407a12:	sub    edi,eax
  407a14:	jmp    0x407ba0
  407a19:	les    edi,FWORD PTR [eax]
  407a1b:	add    ch,BYTE PTR [edi-0x1e]
  407a1e:	gs jns 0x4079da
  407a21:	dec    esp
  407a22:	hlt    
  407a23:	sbb    BYTE PTR [ecx+0x30],0xd8
  407a27:	fxam   
  407a29:	jle    0x407a3d
  407a2b:	jle    0x407aab
  407a2d:	jmp    0x8bbef8b1
  407a32:	pop    sp
  407a34:	adc    al,0x5e
  407a36:	and    bl,bl
  407a38:	out    0xe1,eax
  407a3a:	arpl   WORD PTR [ecx+0x8],di
  407a3d:	int    0xe1
  407a3f:	cs xor bx,bp
  407a43:	sbb    DWORD PTR [eax-0x4f],esp
  407a46:	jp     0x407a02
  407a48:	iret   
  407a49:	aam    0x6d
  407a4b:	add    esi,ebx
  407a4d:	push   esi
  407a4e:	mov    ds:0x1349e7c8,al
  407a53:	mov    esp,0x75740939
  407a58:	adc    dl,BYTE PTR [edi]
  407a5a:	jge    0x407a1f
  407a5c:	dec    edx
  407a5d:	mov    bh,0x58
  407a5f:	cs jns 0x407a69
  407a62:	adc    DWORD PTR [ebx+0x68fbdf4],esp
  407a68:	aam    0x85
  407a6a:	xor    ch,bl
  407a6c:	xor    bl,BYTE PTR [ecx-0xc]
  407a6f:	sub    ebp,esp
  407a71:	push   edi
  407a72:	scas   al,BYTE PTR es:[edi]
  407a73:	cld    
  407a74:	pop    edi
  407a75:	(bad)  
  407a76:	fs xor eax,0x4a956f2d
  407a7c:	sub    eax,0x2496576
  407a81:	mov    al,0x60
  407a83:	nop
  407a84:	sti    
  407a85:	or     eax,DWORD PTR [edx+0x4e]
  407a88:	mov    ebx,0xa2360981
  407a8d:	sbb    al,0xaa
  407a8f:	mov    BYTE PTR [esi+ebp*1-0x3c2301d0],ah
  407a96:	sbb    eax,DWORD PTR [edi+0x6e]
  407a99:	imul   edx,edx,0x67d32401
  407a9f:	add    BYTE PTR [eax+0xb6c63da],dh
  407aa5:	dec    edx
  407aa6:	ret    
  407aa7:	cs sub al,0x32
  407aaa:	das    
  407aab:	in     eax,0xf1
  407aad:	popf   
  407aae:	jb     0x407ab5
  407ab0:	(bad)  
  407ab1:	mov    ?,WORD PTR [ecx-0x2f4ed014]
  407ab7:	inc    ebp
  407ab8:	sahf   
  407ab9:	retf   
  407aba:	add    bh,BYTE PTR [esi-0x1a2d2702]
  407ac0:	dec    edi
  407ac1:	or     DWORD PTR [edi],ebx
  407ac3:	push   sp
  407ac5:	fld    DWORD PTR [eax+esi*1+0x26d8f95a]
  407acc:	test   BYTE PTR [ebp-0x6f],bh
  407acf:	jecxz  0x407aa1
  407ad1:	out    0xc6,eax
  407ad3:	int3   
  407ad4:	retf   
  407ad5:	or     dl,al
  407ad7:	dec    ebp
  407ad8:	fcom   DWORD PTR [ecx+0x41]
  407adb:	cmp    bh,BYTE PTR [ecx-0x50]
  407ade:	and    eax,0xd407dccd
  407ae3:	stc    
  407ae4:	mov    ch,0x6f
  407ae6:	xchg   DWORD PTR [ebx+0x6b9b46d],edx
  407aec:	jnp    0x407b23
  407aee:	fnstsw WORD PTR [edx]
  407af0:	mov    al,ds:0x3c2261b1
  407af5:	test   BYTE PTR [ebp-0x4f],dl
  407af8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407af9:	pushw  cs
  407afb:	call   0xe0e2:0xac782d3c
  407b02:	in     eax,dx
  407b03:	mov    WORD PTR [ebx+0x3],ss
  407b06:	push   ds
  407b07:	jbe    0x407ae5
  407b09:	and    DWORD PTR [esi],esp
  407b0b:	push   ecx
  407b0c:	xlat   BYTE PTR ds:[ebx]
  407b0d:	push   edi
  407b0e:	or     DWORD PTR [edx],0xffffffc6
  407b11:	das    
  407b12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b13:	dec    esi
  407b14:	xchg   esi,eax
  407b15:	ret    0xe9dc
  407b18:	add    DWORD PTR ds:0x9f2dc943,0xf4be8bf6
  407b22:	jmp    0x407af2
  407b24:	test   BYTE PTR [ecx-0x4bf5cf8b],ah
  407b2a:	fcmovnb st,st(6)
  407b2c:	cmp    ch,BYTE PTR [ebx+edx*8]
  407b2f:	jle    0x407ae8
  407b31:	pop    esi
  407b32:	mov    ebp,DWORD PTR [ebp+0x4b]
  407b35:	mov    edx,0xd55914ef
  407b3a:	mov    esp,0x1a5b4529
  407b3f:	and    ebx,DWORD PTR [ecx]
  407b41:	jg     0x407b19
  407b43:	push   edi
  407b44:	xchg   edx,eax
  407b45:	adc    dl,cl
  407b47:	pop    ecx
  407b48:	nop
  407b49:	dec    edi
  407b4a:	push   ecx
  407b4b:	jmp    0x10953fc0
  407b50:	xor    edx,0xffffffc1
  407b53:	(bad)  [ebx+eax*4]
  407b56:	cwde   
  407b57:	cmp    BYTE PTR [edx],bh
  407b59:	outs   dx,DWORD PTR ds:[esi]
  407b5a:	inc    edx
  407b5b:	ins    BYTE PTR es:[edi],dx
  407b5c:	pop    esp
  407b5d:	xchg   esp,eax
  407b5e:	push   edx
  407b5f:	aas    
  407b60:	stos   BYTE PTR es:[edi],al
  407b61:	sbb    esp,DWORD PTR [esi-0x48]
  407b64:	jp     0x407be4
  407b66:	mov    DWORD PTR [esi],edx
  407b68:	clc    
  407b69:	pop    ebx
  407b6a:	xchg   DWORD PTR [esi],ebp
  407b6c:	push   0x7a
  407b6e:	mov    esi,0x424862af
  407b73:	idiv   BYTE PTR [ecx-0x69dbc00d]
  407b79:	repz data16 (bad) 
  407b7c:	(bad)  
  407b7d:	cmp    eax,0x7328e202
  407b82:	jbe    0x585d4366
  407b88:	and    bh,BYTE PTR [esi+0x53]
  407b8b:	sub    al,0x2
  407b8d:	mov    ecx,DWORD PTR [edx]
  407b8f:	and    ch,BYTE PTR [ebp-0x45]
  407b92:	ins    DWORD PTR es:[edi],dx
  407b93:	push   cs
  407b94:	cmp    eax,0xbbe41284
  407b99:	and    DWORD PTR [esi-0x28f2fc7e],0xffffffff
  407ba0:	add    edi,DWORD PTR [ebp+0x10]
  407ba3:	xor    edx,ecx
  407ba5:	add    edx,esi
  407ba7:	cmp    edx,edi
  407ba9:	ja     0x407bff
  407baf:	push   ebx
  407bb0:	jmp    0x407bba
  407bb5:	mov    esi,0x32729f
  407bba:	mov    eax,DWORD PTR [ebp-0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x4]
  407bc0:	xor    edi,ecx
  407bc2:	add    edi,esi
  407bc4:	mov    esi,DWORD PTR [ebp+0x8]
  407bc7:	imul   edi,edx
  407bca:	mov    ebx,DWORD PTR [ebp+0xc]
  407bcd:	xor    eax,ecx
  407bcf:	add    eax,edx
  407bd1:	mov    al,BYTE PTR [ebx+eax*1+0x32729f]
  407bd8:	mov    BYTE PTR [edi+esi*1],al
  407bdb:	mov    eax,DWORD PTR [ebp-0x4]
  407bde:	xor    eax,ecx
  407be0:	lea    edx,[edx+eax*1+0x32729f]
  407be7:	mov    eax,DWORD PTR [ebp-0x4]
  407bea:	xor    eax,ecx
  407bec:	mov    esi,0xffcd8d61
  407bf1:	sub    esi,eax
  407bf3:	add    esi,DWORD PTR [ebp+0x10]
  407bf6:	cmp    edx,esi
  407bf8:	jbe    0x407bb5
  407bfe:	pop    ebx
  407bff:	mov    eax,0xf89c853b
  407c04:	pop    edi
  407c05:	pop    esi
  407c06:	leave  
  407c07:	ret    0xc
  407c0a:	push   ebp
  407c0b:	mov    ebp,esp
  407c0d:	mov    eax,ds:0x40d654
  407c12:	mov    DWORD PTR ds:0x417e3d,0x19
  407c1c:	cmp    DWORD PTR ds:0x417e3d,0x0
  407c23:	je     0x407c51
  407c29:	cmp    DWORD PTR ds:0x417e3d,0x1c
  407c30:	jne    0x407c3f
  407c36:	push   DWORD PTR [ebp-0x14]
  407c39:	call   DWORD PTR ds:0x40d368
  407c3f:	mov    ecx,DWORD PTR ds:0x417e3d
  407c45:	dec    ecx
  407c46:	mov    DWORD PTR ds:0x417e3d,ecx
  407c4c:	jmp    0x407c1c
  407c51:	mov    edx,0x32729f
  407c56:	sub    eax,edx
  407c58:	mov    ecx,0x7510859
  407c5d:	and    DWORD PTR ds:0x41237c,0x41abd2
  407c67:	push   esi
  407c68:	and    DWORD PTR ds:0x41abd2,0x0
  407c72:	push   DWORD PTR ds:0x41abd2
  407c78:	pop    esi
  407c79:	inc    esi
  407c7a:	mov    DWORD PTR ds:0x41abd2,esi
  407c80:	cmp    DWORD PTR ds:0x41abd2,0x28
  407c87:	jne    0x407ca2
  407c8d:	push   0x7e5a
  407c92:	push   0x41abde
  407c97:	push   0x1ce6
  407c9c:	call   DWORD PTR ds:0x40d1e0
  407ca2:	cmp    DWORD PTR ds:0x41abd2,0x1f
  407ca9:	jb     0x407c72
  407caf:	xor    DWORD PTR ds:0x412354,ebx
  407cb5:	mov    esi,DWORD PTR [ebp+0xc]
  407cb8:	xor    eax,ecx
  407cba:	jmp    0x407e39
  407cbf:	xchg   ebp,eax
  407cc0:	bound  ecx,QWORD PTR [ecx-0x6a06a6f5]
  407cc6:	pusha  
  407cc7:	jmp    0x81f2:0x27fdba79
  407cce:	hlt    
  407ccf:	jmp    0xdcbefae7
  407cd4:	jg     0x407d54
  407cd6:	jle    0x407d2a
  407cd8:	pop    esi
  407cd9:	adc    DWORD PTR [eax+0x469bfdd4],0x73cf2e14
  407ce3:	jl     0x407d30
  407ce5:	fidiv  WORD PTR [edx-0x2489e7cf]
  407ceb:	inc    esi
  407cec:	sub    ecx,DWORD PTR ds:0x1d407b52
  407cf2:	push   ebp
  407cf3:	(bad)  
  407cf4:	aam    0x39
  407cf6:	push   ss
  407cf7:	arpl   WORD PTR [edx],si
  407cf9:	pop    ebx
  407cfa:	jae    0x407d12
  407cfc:	into   
  407cfd:	stos   BYTE PTR es:[edi],al
  407cfe:	mov    BYTE PTR fs:[esi-0x44],cl
  407d02:	fincstp 
  407d04:	mov    BYTE PTR [ebx+0xc49fb31],bl
  407d0a:	add    DWORD PTR [ebx+edi*4+0x1f33d765],ebp
  407d11:	popa   
  407d12:	int3   
  407d13:	leave  
  407d14:	xor    DWORD PTR [edi-0x575051b8],edi
  407d1a:	adc    al,0xef
  407d1c:	fs arpl si,si
  407d1f:	ins    BYTE PTR es:[edi],dx
  407d20:	pop    ecx
  407d21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d22:	inc    ecx
  407d23:	(bad)  
  407d24:	in     eax,0xd
  407d26:	pop    esp
  407d27:	xchg   ebp,eax
  407d28:	push   es
  407d29:	stos   DWORD PTR es:[edi],eax
  407d2a:	dec    esp
  407d2b:	neg    BYTE PTR ds:0x5724acdd
  407d31:	mov    dl,0x99
  407d33:	repnz sbb ch,al
  407d36:	inc    esi
  407d37:	cmp    bl,BYTE PTR [ebx]
  407d39:	es xchg esi,eax
  407d3b:	xchg   edx,eax
  407d3c:	jge    0x407ceb
  407d3e:	gs push eax
  407d40:	mov    bh,0xbb
  407d42:	scas   al,BYTE PTR es:[edi]
  407d43:	jle    0x407d5a
  407d45:	mov    al,ds:0x7cb90d88
  407d4a:	push   eax
  407d4b:	or     esi,DWORD PTR [eax]
  407d4d:	gs pop esi
  407d4f:	xchg   ebx,eax
  407d50:	ror    BYTE PTR [edi-0x38],0xa4
  407d54:	mov    edx,DWORD PTR [edx+0x11]
  407d57:	mov    cl,ah
  407d59:	push   DWORD PTR [ebx+0x24]
  407d5c:	sbb    bh,ah
  407d5e:	jle    0x407d4b
  407d60:	xchg   ebp,eax
  407d61:	xor    al,0xc4
  407d63:	js     0x407d2f
  407d65:	xchg   esi,eax
  407d66:	push   ecx
  407d67:	je     0x407d93
  407d69:	ds push 0xfffffff6
  407d6c:	inc    esp
  407d6d:	push   cs
  407d6e:	ds clc 
  407d70:	aas    
  407d71:	dec    esp
  407d72:	mov    ecx,0x535c75af
  407d77:	pop    edx
  407d78:	js     0x407dae
  407d7a:	lock rcl DWORD PTR [ebp+ebp*8-0xbaa7e6e],0xb0
  407d83:	pop    ebp
  407d84:	sahf   
  407d85:	add    DWORD PTR ds:0xa1a8b634,0xffffffba
  407d8c:	test   BYTE PTR [edi-0x23],ch
  407d8f:	(bad)  
  407d90:	push   ebx
  407d91:	call   0x79159c1c
  407d96:	mov    ecx,0xab9e2ed
  407d9b:	mov    ss,ecx
  407d9d:	call   FWORD PTR [ebx]
  407d9f:	sub    DWORD PTR [ecx+0x59d698bf],ebp
  407da5:	outs   dx,DWORD PTR ds:[esi]
  407da6:	sub    edx,ecx
  407da8:	shl    DWORD PTR [ebx+0x7839ffcc],1
  407dae:	or     ecx,ecx
  407db0:	out    0x26,eax
  407db2:	push   esi
  407db3:	sub    DWORD PTR [eax-0x68],esi
  407db6:	dec    edi
  407db7:	add    al,0x36
  407db9:	mov    ds:0x525b9930,eax
  407dbe:	inc    ebp
  407dbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dc0:	or     eax,0x6a2d1b42
  407dc5:	outs   dx,BYTE PTR ds:[esi]
  407dc6:	mov    ah,0x87
  407dc8:	loope  0x407dd2
  407dca:	out    dx,al
  407dcb:	mov    ecx,0x2300440f
  407dd0:	les    edi,FWORD PTR [ecx-0x2118e82b]
  407dd6:	cdq    
  407dd7:	fmul   QWORD PTR [edi-0x1caed1d4]
  407ddd:	pop    ebx
  407dde:	retf   0x9c18
  407de1:	mov    edx,DWORD PTR [edi]
  407de3:	icebp  
  407de4:	and    BYTE PTR [ebx+0x54bc2601],ah
  407dea:	jmp    0x407e49
  407dec:	out    dx,eax
  407ded:	retf   0x3f02
  407df0:	(bad)  
  407df1:	xchg   edx,eax
  407df2:	xor    esp,DWORD PTR [esi+0x773b20a0]
  407df8:	pop    edi
  407df9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dfa:	int3   
  407dfb:	jmp    0xcd21:0xaa4d3655
  407e02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e03:	in     al,0x58
  407e05:	push   ebx
  407e06:	inc    ebx
  407e07:	pop    edi
  407e08:	inc    ecx
  407e09:	mov    edx,0x7c86e5ce
  407e0e:	add    eax,0x78c69c61
  407e13:	sbb    edx,eax
  407e15:	mov    eax,ds:0xc81811e4
  407e1a:	dec    ebp
  407e1b:	push   0xba550c8b
  407e20:	mov    edi,0x411b7512
  407e25:	sti    
  407e26:	std    
  407e27:	xchg   ebp,eax
  407e28:	sub    DWORD PTR [edi+0xa],esp
  407e2b:	aad    0xf9
  407e2d:	not    dh
  407e2f:	rcr    BYTE PTR [edx],0x15
  407e32:	inc    esp
  407e33:	sub    ch,cl
  407e35:	push   ss
  407e36:	mov    bh,0x6e
  407e38:	cs cmp eax,esi
  407e3b:	mov    DWORD PTR ds:0x41abe2,0x45d5
  407e45:	je     0x40818a
  407e4b:	mov    eax,ds:0x40d64c
  407e50:	mov    esi,DWORD PTR [ebp+0xc]
  407e53:	sub    eax,edx
  407e55:	xor    eax,ecx
  407e57:	cmp    eax,esi
  407e59:	jne    0x407e6f
  407e5f:	mov    eax,ds:0x40d654
  407e64:	add    eax,DWORD PTR ds:0x40d64c
  407e6a:	jmp    0x407ff5
  407e6f:	mov    eax,DWORD PTR [ebp+0xc]
  407e72:	jmp    0x407ff1
  407e77:	icebp  
  407e78:	mov    ebp,0x65db1f07
  407e7d:	mov    ecx,0x1c6c5851
  407e82:	cmp    ecx,edi
  407e84:	pop    eax
  407e85:	or     al,0xc3
  407e87:	dec    edi
  407e88:	adc    BYTE PTR [esi+0x7e],bh
  407e8b:	fdivr  QWORD PTR [edi+0x7e]
  407e8e:	jle    0x407e1c
  407e90:	bound  ebp,QWORD PTR [edx]
  407e92:	cmp    eax,ebx
  407e94:	iret   
  407e95:	out    0x5e,al
  407e97:	pop    ss
  407e98:	mov    BYTE PTR [ebx-0x1d809a80],bl
  407e9e:	addr16 cmc 
  407ea0:	or     al,0x92
  407ea2:	dec    ebx
  407ea3:	pop    ds
  407ea4:	es jge 0x407ec6
  407ea7:	int3   
  407ea8:	jmp    0x6027:0xb27a017a
  407eaf:	leave  
  407eb0:	repnz cmp ecx,DWORD PTR [ecx+0x2cf69a39]
  407eb7:	pop    bp
  407eb9:	mov    ch,0xe1
  407ebb:	in     al,0xec
  407ebd:	jmp    0x407eb9
  407ebf:	or     ecx,DWORD PTR [esi]
  407ec1:	clc    
  407ec2:	test   BYTE PTR [esi-0x5173d71a],0xf5
  407ec9:	inc    esi
  407eca:	add    ebp,ecx
  407ecc:	push   esi
  407ecd:	inc    esp
  407ece:	stc    
  407ecf:	aam    0x9a
  407ed1:	out    dx,eax
  407ed2:	dec    eax
  407ed3:	jecxz  0x407ec6
  407ed5:	popf   
  407ed6:	push   ds
  407ed7:	push   edx
  407ed8:	lds    esp,FWORD PTR [edi-0x7f]
  407edb:	or     dl,BYTE PTR [eax]
  407edd:	fnstenv [esi]
  407edf:	pushf  
  407ee0:	pop    esp
  407ee1:	popa   
  407ee2:	and    DWORD PTR [edi-0x48c3d7c3],eax
  407ee8:	mov    BYTE PTR [ecx],ah
  407eea:	cmp    eax,0xf9283344
  407eef:	cmp    eax,0xf34ca20e
  407ef4:	outs   dx,DWORD PTR ds:[esi]
  407ef5:	mov    bl,0xfd
  407ef7:	pop    edx
  407ef8:	ud1    edi,DWORD PTR [ebx+0x703f94ce]
  407eff:	mov    dl,0x7d
  407f01:	pop    ds
  407f02:	test   eax,0xf2c5ebf4
  407f07:	inc    esp
  407f08:	arpl   WORD PTR [eax],ax
  407f0a:	push   ecx
  407f0b:	cmp    eax,0xf8217d9
  407f10:	cld    
  407f11:	push   0x4c0514d2
  407f16:	xor    DWORD PTR [ecx-0x17],0xffffff9a
  407f1a:	xor    DWORD PTR [ecx+0x7a7390e4],ebx
  407f20:	mov    eax,ds:0x17b3fcac
  407f25:	test   eax,0x4b9ae8e9
  407f2a:	je     0x407f43
  407f2c:	and    al,BYTE PTR ds:0xcf34ff65
  407f32:	mov    edi,0xa1f8a67b
  407f37:	int    0x8d
  407f39:	pusha  
  407f3a:	sti    
  407f3b:	mov    eax,ds:0xb64b4e9d
  407f40:	retf   0x620e
  407f43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f44:	sub    eax,0x2bc94541
  407f49:	loop   0x407f40
  407f4b:	inc    ebx
  407f4c:	fsub   DWORD PTR [esi]
  407f4e:	pusha  
  407f4f:	xchg   edi,eax
  407f50:	or     BYTE PTR [ecx],dh
  407f52:	pop    ds
  407f53:	(bad)  
  407f55:	jnp    0x407f2d
  407f57:	push   ss
  407f58:	icebp  
  407f59:	xchg   ebx,eax
  407f5a:	jmp    0x662f:0x13182077
  407f61:	cli    
  407f62:	and    BYTE PTR [ebp+0x7d47f1a],bh
  407f68:	cmp    cl,bl
  407f6a:	xlat   BYTE PTR ds:[ebx]
  407f6b:	in     eax,dx
  407f6c:	mov    bh,0x67
  407f6e:	xchg   esp,eax
  407f6f:	imul   esi,DWORD PTR [ebp-0x4bfdf5d],0x7f
  407f76:	mov    ebp,0xa6bab5bc
  407f7b:	mov    edx,0xd41e7b2e
  407f80:	das    
  407f81:	fnsave [ebx]
  407f83:	mov    edi,0x362ecf9f
  407f88:	or     ah,BYTE PTR [ecx+0x3c]
  407f8b:	mov    dh,0x4f
  407f8d:	sti    
  407f8e:	shr    BYTE PTR [eax+0x3b],cl
  407f91:	and    al,0x95
  407f93:	not    DWORD PTR [esi]
  407f95:	call   0xcdab:0xf6030c8c
  407f9c:	cmp    DWORD PTR ds:0xc5704223,esp
  407fa2:	and    esi,0x4
  407fa5:	mov    ss,WORD PTR [ebx+0x214fb4b7]
  407fab:	jmp    0x407f4f
  407fad:	(bad)  
  407fae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407faf:	lock mov ds:0xe71acaac,al
  407fb5:	pop    esi
  407fb6:	pop    edx
  407fb7:	cmp    BYTE PTR [ebx+0x5e],cl
  407fba:	fimul  WORD PTR [esi-0x8]
  407fbd:	xor    cl,BYTE PTR [esi+0x535cc830]
  407fc3:	lds    esi,FWORD PTR [ebx-0x4f37712c]
  407fc9:	popa   
  407fca:	fisttp DWORD PTR [ecx+0x61]
  407fcd:	aas    
  407fce:	sbb    esi,DWORD PTR ss:[esi+0x76]
  407fd2:	popa   
  407fd3:	das    
  407fd4:	inc    ebx
  407fd5:	or     al,0x23
  407fd7:	test   al,0x9b
  407fd9:	into   
  407fda:	push   edi
  407fdb:	pop    ebp
  407fdc:	aad    0xc0
  407fde:	mov    ecx,0x2c321410
  407fe3:	iret   
  407fe4:	rcl    BYTE PTR [esi+0xddcfa50],cl
  407fea:	xchg   BYTE PTR [esi+0x3048ac72],dl
  407ff0:	enter  0xc133,0x3
  407ff4:	ret    0x4ca3
  407ff7:	(bad)  
  407ff8:	inc    eax
  407ff9:	add    BYTE PTR [ebx+0x7ae90c45],cl
  407fff:	add    DWORD PTR [eax],eax
  408001:	add    BYTE PTR [ebx],ah
  408003:	das    
  408004:	pop    ds
  408005:	xchg   edx,eax
  408006:	adc    esp,DWORD PTR [edx+0x57bdafa3]
  40800c:	arpl   WORD PTR [edi],si
  40800e:	push   ebp
  40800f:	push   edi
  408010:	sub    BYTE PTR [ebp+0x2d],ah
  408013:	push   ss
  408014:	jle    0x408094
  408016:	fdivr  QWORD PTR [edi+0x7e]
  408019:	jle    0x407fc8
  40801b:	dec    edi
  40801c:	mov    esp,0x98547a10
  408021:	jmp    0x7644e7de
  408026:	aas    
  408027:	repnz or dh,dl
  40802a:	add    DWORD PTR [ecx+0x62a065b9],0x5923fc7e
  408034:	xchg   eax,eax
  408036:	inc    esp
  408037:	(bad)  
  408038:	mov    eax,ds:0xa240223a
  40803d:	jne    0x40800f
  40803f:	fsubr  st(3),st
  408041:	and    esi,DWORD PTR [esi-0x51]
  408044:	lock fld DWORD PTR [ebp-0x3f]
  408048:	out    dx,al
  408049:	popa   
  40804a:	sub    DWORD PTR [eax+ebx*2-0x42],0x18
  40804f:	lea    edx,[ebx]
  408051:	mov    ds:0xb1b1dcad,eax
  408056:	leave  
  408057:	into   
  408058:	pop    esi
  408059:	into   
  40805a:	mov    al,0x6f
  40805c:	shl    DWORD PTR [edx-0x6dd0ee4c],cl
  408062:	(bad)  
  408063:	ds scas al,BYTE PTR es:[edi]
  408065:	(bad)  
  408066:	adc    ebp,DWORD PTR [ecx+eiz*4+0x3c267770]
  40806d:	jae    0x4080b5
  40806f:	inc    ebp
  408070:	xchg   ebx,eax
  408071:	imul   ebx,DWORD PTR [eax-0x3b5bb0ef],0xf
  408078:	mov    ebx,0xb5d14d52
  40807d:	push   ebx
  40807e:	sbb    eax,0xc6c3ab5f
  408083:	xor    ch,BYTE PTR [edx]
  408085:	pop    DWORD PTR [ecx+0x27]
  408088:	mov    eax,ds:0xbe7fa8e3
  40808d:	and    esi,DWORD PTR [ebp+0xf]
  408090:	outs   dx,BYTE PTR ds:[esi]
  408091:	jecxz  0x408014
  408093:	gs lahf 
  408095:	mov    es,WORD PTR [ebp+0x2b243e51]
  40809b:	jne    0x4080a3
  40809d:	and    eax,0x585923fc
  4080a2:	jle    0x40805a
  4080a4:	xor    al,0x89
  4080a6:	add    BYTE PTR [esi+0x3f7a21d1],al
  4080ac:	cwde   
  4080ad:	mov    ds:0x855039e,al
  4080b2:	and    eax,0x6502a4f0
  4080b7:	repnz push esp
  4080b9:	lds    edx,FWORD PTR [ecx-0x8468ba9]
  4080bf:	cmp    eax,0xe1cb8bb8
  4080c4:	inc    edx
  4080c5:	cmp    BYTE PTR [esi+0x857f2f0],0x2b
  4080cc:	dec    esi
  4080cd:	out    dx,eax
  4080ce:	or     dh,ah
  4080d0:	jbe    0x4080e7
  4080d2:	jb     0x4080c1
  4080d4:	cli    
  4080d5:	xchg   ecx,eax
  4080d6:	jle    0x408081
  4080d8:	add    BYTE PTR [edx+0x529553b7],0xed
  4080df:	in     eax,dx
  4080e0:	in     eax,dx
  4080e1:	or     DWORD PTR [ecx-0x21],edi
  4080e4:	daa    
  4080e5:	xor    ecx,DWORD PTR [ebx+0x7b26f7c0]
  4080eb:	test   DWORD PTR [edi-0x2441fac1],esp
  4080f1:	push   ss
  4080f2:	inc    esp
  4080f3:	mov    ebp,0x3b6f88ae
  4080f8:	pop    ebp
  4080f9:	mov    ds:0x28863179,al
  4080fe:	xor    eax,0x90fc27d6
  408103:	es jnp 0x40813c
  408106:	fist   WORD PTR [eax-0x59b24dee]
  40810c:	imul   ebp,ebp,0x8f9ed195
  408112:	mov    al,0x58
  408114:	pop    esi
  408115:	sti    
  408116:	xor    eax,0x37d38cd8
  40811b:	mov    bl,0x9a
  40811d:	mov    esp,0xad83241f
  408122:	push   edx
  408123:	xor    BYTE PTR [ebx],dh
  408125:	xchg   ebp,eax
  408126:	ins    DWORD PTR es:[edi],dx
  408127:	adc    al,0x2
  408129:	and    BYTE PTR [ebx-0x2655a5bd],ah
  40812f:	xchg   esp,eax
  408130:	test   eax,0xe6df8612
  408135:	adc    DWORD PTR [edi-0x514979b7],esi
  40813b:	out    0xc2,al
  40813d:	push   0xffffffc6
  40813f:	xchg   edx,eax
  408140:	bound  edi,QWORD PTR [edi-0x73]
  408143:	leave  
  408144:	jb     0x40816f
  408146:	push   0xfde71a14
  40814b:	cmp    eax,0x1d6bd864
  408150:	sbb    eax,0xa455cf4e
  408155:	ds (bad) 
  408157:	and    BYTE PTR [ebp-0x53],al
  40815a:	repnz dec al
  40815d:	gs push ecx
  40815f:	sbb    edi,0xffffffa7
  408162:	lods   eax,DWORD PTR ds:[esi]
  408163:	aam    0xea
  408165:	sub    al,0xe2
  408167:	push   0x320ea14d
  40816c:	shr    DWORD PTR [edx],0xcf
  40816f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408170:	sbb    dh,BYTE PTR ds:0xc64ff967
  408176:	sub    bl,BYTE PTR [eax]
  408178:	mov    eax,0x3340cf3f
  40817d:	rol    DWORD PTR [ebx],0xc2
  408180:	mov    ds:0x40d654,eax
  408185:	jmp    0x408313
  40818a:	mov    eax,ds:0x40d654
  40818f:	jmp    0x40830e
  408194:	push   edi
  408195:	(bad)  [ecx+0x797ba9ef]
  40819b:	gs mov ch,0x6e
  40819e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40819f:	es pop esp
  4081a1:	xor    ch,bh
  4081a3:	adc    eax,0x7e7e1783
  4081a8:	fdivr  QWORD PTR [edi+0x7e]
  4081ab:	jle    0x408211
  4081ad:	jmp    FWORD PTR [ebp+0x5c]
  4081b0:	mov    edx,0x3228f11d
  4081b5:	mov    esp,0xc3fe2cde
  4081ba:	mov    eax,0x1fd6a669
  4081bf:	jo     0x4081fc
  4081c1:	inc    esi
  4081c2:	sti    
  4081c3:	shl    edi,1
  4081c5:	shl    al,cl
  4081c7:	in     al,0xb0
  4081c9:	push   edi
  4081ca:	push   esi
  4081cb:	mov    ebx,0x8f6f622
  4081d0:	pushf  
  4081d1:	or     edi,0x944b3d89
  4081d7:	mov    esi,0xa0e22ddf
  4081dc:	addr16 nop
  4081de:	push   ds
  4081df:	xchg   ebp,eax
  4081e0:	dec    edx
  4081e1:	call   0xbc458175
  4081e6:	push   ds
  4081e7:	and    DWORD PTR [ebx-0x5a338b5f],edx
  4081ed:	cdq    
  4081ee:	std    
  4081ef:	ins    DWORD PTR es:[edi],dx
  4081f0:	mov    ebp,0x55e875b
  4081f5:	test   BYTE PTR [ebx+esi*8],0xac
  4081f9:	out    dx,al
  4081fa:	add    al,0x69
  4081fc:	in     al,0x97
  4081fe:	mov    ebp,DWORD PTR [edi+0x7fbb8c7e]
  408204:	ins    BYTE PTR es:[edi],dx
  408205:	or     DWORD PTR [ebx-0x65],edi
  408208:	inc    eax
  408209:	sti    
  40820a:	dec    esi
  40820c:	xchg   esp,eax
  40820d:	or     eax,0x10e91d1b
  408212:	daa    
  408213:	mov    fs,WORD PTR [edx-0x3da6d2af]
  408219:	loop   0x4081e1
  40821b:	out    dx,eax
  40821c:	fmul   DWORD PTR [eax+0x2b]
  40821f:	inc    edx
  408220:	dec    edx
  408221:	pop    esi
  408222:	pushf  
  408223:	out    0x5f,eax
  408225:	repz adc DWORD PTR [ebx-0x79],eax
  408229:	hlt    
  40822a:	sbb    cl,BYTE PTR [edx+0x76fb09f4]
  408230:	scas   al,BYTE PTR es:[edi]
  408231:	(bad)  
  408232:	mov    ds:0x4b7f8678,al
  408237:	clc    
  408238:	int3   
  408239:	jno    0x4081d6
  40823b:	push   ebx
  40823c:	xchg   edx,eax
  40823d:	aas    
  40823e:	arpl   bx,bx
  408240:	cli    
  408241:	adc    al,0x7e
  408243:	pop    eax
  408244:	adc    DWORD PTR [edx-0x4da630b8],eax
  40824a:	jne    0x4082a7
  40824c:	test   al,0xe
  40824e:	sbb    DWORD PTR [ebx+0x50],ebx
  408251:	xor    BYTE PTR [ecx],ch
  408253:	faddp  st(2),st
  408255:	fsubr  st,st(1)
  408257:	out    dx,eax
  408258:	sahf   
  408259:	(bad)  
  40825a:	lock push esi
  40825c:	cs jae 0x408205
  40825f:	pop    ds
  408260:	popf   
  408261:	mov    WORD PTR [edi+0x35],ds
  408264:	mov    esi,0x2ad19d7c
  408269:	out    0x99,eax
  40826b:	clc    
  40826c:	xor    ch,ah
  40826e:	xor    edx,edx
  408270:	push   ebx
  408271:	ins    BYTE PTR es:[edi],dx
  408272:	(bad)  
  408273:	in     eax,dx
  408274:	mov    cl,0x90
  408276:	not    DWORD PTR [ebp+0x2c]
  408279:	push   ebx
  40827a:	sub    cl,bl
  40827c:	cli    
  40827d:	pop    edx
  40827e:	loop   0x4082d8
  408280:	fidiv  DWORD PTR [esi-0x525634a4]
  408286:	fidivr DWORD PTR [edx]
  408288:	sbb    esi,DWORD PTR [ecx]
  40828a:	xor    DWORD PTR [edi],0x69
  40828d:	or     eax,0x9e18ea7d
  408292:	cdq    
  408293:	loope  0x408288
  408295:	mov    bl,0x43
  408297:	and    esi,DWORD PTR [ecx-0x4a43413a]
  40829d:	xor    BYTE PTR [eax+0x3467834c],dh
  4082a3:	mov    eax,ds:0xc3c28bb9
  4082a8:	mov    WORD PTR [ebx+0x4a3678ac],sp
  4082af:	repz push esi
  4082b1:	dec    eax
  4082b2:	xlat   BYTE PTR ds:[ebx]
  4082b3:	xor    eax,0x11fe7421
  4082b8:	bnd jne 0x40831d
  4082bb:	or     al,0x19
  4082bd:	mov    eax,ds:0x28d01079
  4082c2:	push   edx
  4082c3:	jo     0x408342
  4082c5:	cwde   
  4082c6:	dec    ebx
  4082c7:	inc    esp
  4082c8:	pusha  
  4082c9:	or     eax,0x368d7ef0
  4082ce:	xchg   esi,edi
  4082d0:	outs   dx,DWORD PTR ds:[esi]
  4082d1:	or     DWORD PTR [esi],ebx
  4082d3:	xlat   BYTE PTR ds:[ebx]
  4082d5:	mov    ds:0xebb0e08c,eax
  4082da:	ds sbb al,0x8f
  4082dd:	cwde   
  4082de:	and    eax,0x5e8a0920
  4082e3:	je     0x4082b5
  4082e5:	cmp    bh,BYTE PTR [edi-0x41]
  4082e8:	xor    eax,0xb03c2a2
  4082ed:	adc    DWORD PTR [esp+esi*8],esi
  4082f0:	push   edx
  4082f1:	mov    edx,0x78d8bb14
  4082f6:	repz int3 
  4082f8:	xchg   dh,cl
  4082fa:	mov    al,0x38
  4082fc:	hlt    
  4082fd:	retf   
  4082fe:	sub    al,0xdb
  408300:	xor    DWORD PTR [ecx-0xad0edcb],edi
  408306:	and    eax,0xe6880fa0
  40830b:	lock sti 
  40830d:	mov    dh,0xa3
  40830f:	dec    esp
  408310:	(bad)  
  408311:	inc    eax
  408312:	add    BYTE PTR [ebx+0x8b0845],cl
  408318:	mov    ecx,DWORD PTR ds:0x40d64c
  40831e:	add    DWORD PTR [eax],ecx
  408320:	pop    esi
  408321:	pop    ebp
  408322:	ret    0x8
  408325:	push   ebp
  408326:	mov    ebp,esp
  408328:	sub    esp,0x58
  40832b:	and    DWORD PTR ds:0x4245ca,0x0
  408335:	jmp    0x408347
  40833a:	mov    ecx,DWORD PTR ds:0x4245ca
  408340:	inc    ecx
  408341:	mov    DWORD PTR ds:0x4245ca,ecx
  408347:	cmp    DWORD PTR ds:0x4245ca,0x1a
  40834e:	jae    0x408391
  408354:	cmp    DWORD PTR ds:0x4245ca,0xb
  40835b:	jne    0x40836c
  408361:	push   0x561f
  408366:	call   DWORD PTR ds:0x40d36c
  40836c:	cmp    DWORD PTR ds:0x4245ca,0xa
  408373:	jne    0x408386
  408379:	mov    ecx,DWORD PTR ds:0x4245ca
  40837f:	inc    ecx
  408380:	mov    DWORD PTR ds:0x4245ca,ecx
  408386:	jmp    0x40833a
  40838b:	inc    DWORD PTR ds:0x412370
  408391:	mov    ecx,DWORD PTR [ebp+0x8]
  408394:	and    DWORD PTR ds:0x417e55,0x0
  40839e:	jmp    0x4083b1
  4083a3:	xor    eax,eax
  4083a5:	or     eax,DWORD PTR ds:0x417e55
  4083ab:	inc    eax
  4083ac:	mov    ds:0x417e55,eax
  4083b1:	cmp    DWORD PTR ds:0x417e55,0x1f
  4083b8:	jae    0x4083df
  4083be:	cmp    DWORD PTR ds:0x417e55,0x21
  4083c5:	jne    0x4083d4
  4083cb:	push   DWORD PTR [ebp-0x14]
  4083ce:	call   DWORD PTR ds:0x40d008
  4083d4:	jmp    0x4083a3
  4083d9:	sub    DWORD PTR ds:0x4245ca,edi
  4083df:	mov    eax,0x8a43
  4083e4:	sub    DWORD PTR ds:0x415101,0x2da0
  4083ee:	jmp    0x408517
  4083f3:	dec    ecx
  4083f4:	pushf  
  4083f5:	push   esp
  4083f6:	in     eax,dx
  4083f7:	imul   esp,ebp,0x9f63b859
  4083fd:	mov    DWORD PTR [esp+edx*8+0x6142ee7d],ebp
  408404:	adc    al,0x7e
  408406:	jle    0x408412
  408408:	jg     0x408488
  40840a:	jle    0x408489
  40840c:	mov    DWORD PTR [ebp+0x3131f0a3],esi
  408412:	dec    esi
  408413:	push   ss
  408414:	xor    al,0xf2
  408416:	push   esp
  408417:	mov    dl,0x1a
  408419:	xchg   esp,eax
  40841a:	pop    esi
  40841b:	inc    ecx
  40841c:	inc    esp
  40841d:	mov    edx,0x52f40b88
  408422:	xor    esi,DWORD PTR ds:0xb3169bd7
  408428:	ins    DWORD PTR es:[edi],dx
  408429:	and    BYTE PTR [esi-0x4d],0x27
  40842d:	lds    edi,FWORD PTR [ecx+eax*1-0x2]
  408431:	add    al,0xfa
  408433:	pop    ss
  408434:	fcom   QWORD PTR [edx+0xd]
  408437:	cmp    bh,BYTE PTR [edi]
  408439:	cwde   
  40843a:	xchg   eax,edx
  40843c:	jns    0x408468
  40843e:	std    
  40843f:	je     0x408479
  408441:	mov    edi,0x96600b7d
  408446:	mov    ch,BYTE PTR es:[esi+eax*8+0x23]
  40844b:	shl    BYTE PTR ds:0xf3aad0bf,1
  408451:	stos   DWORD PTR es:[edi],eax
  408452:	lods   al,BYTE PTR ds:[esi]
  408453:	xchg   BYTE PTR ds:0x15b43c6f,dh
  408459:	mov    esi,0x5e3d2b9b
  40845e:	sub    DWORD PTR [edi+0x6bed9cbc],esi
  408464:	(bad)  
  408465:	xor    al,0x96
  408467:	les    eax,FWORD PTR [ecx+0x73]
  40846a:	call   DWORD PTR [eax]
  40846c:	push   ebp
  40846d:	pushf  
  40846e:	pop    ss
  40846f:	mov    al,ds:0xd42aa7d1
  408474:	sar    BYTE PTR [ecx+0xb8d6583],1
  40847a:	js     0x40848e
  40847c:	test   BYTE PTR [esi],ch
  40847e:	mov    bl,0x85
  408480:	cmp    esi,ebp
  408482:	dec    eax
  408483:	call   0x36c4:0xd90ed506
  40848a:	fwait
  40848b:	test   eax,0x346db3bd
  408490:	sub    eax,0x6dec3e5f
  408495:	cwde   
  408496:	ja     0x40850b
  408498:	fstp   TBYTE PTR [edi+0x30]
  40849b:	das    
  40849c:	jo     0x4084b0
  40849e:	shl    BYTE PTR [esp+edx*4],cl
  4084a1:	push   edi
  4084a2:	jmp    0x3214b0f7
  4084a7:	jns    0x408467
  4084a9:	(bad)
  4084ad:	jmp    0x408470
  4084af:	repz xor bh,BYTE PTR [ebp-0x586762e1]
  4084b6:	loope  0x4084d2
  4084b8:	and    dl,BYTE PTR ds:0x13eff9e8
  4084be:	xchg   esp,eax
  4084bf:	cmp    bh,BYTE PTR [edi+0x75]
  4084c2:	mov    ebp,0x87238611
  4084c7:	and    DWORD PTR [esi+0x4c9c147a],ecx
  4084cd:	nop
  4084ce:	div    BYTE PTR [ecx+0x36]
  4084d1:	add    al,0x1e
  4084d3:	out    dx,eax
  4084d4:	fadd   DWORD PTR [ebx+0x77]
  4084d7:	push   edi
  4084d8:	mov    ebx,0x334c3b22
  4084dd:	clc    
  4084de:	in     al,dx
  4084df:	mov    ebx,0x47ccdb1
  4084e4:	pusha  
  4084e5:	push   es
  4084e6:	jge    0x408540
  4084e8:	mov    ebp,0x8a98454
  4084ed:	push   ss
  4084ee:	dec    ebp
  4084ef:	push   ss
  4084f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084f1:	mov    ds:0xc582c98c,al
  4084f6:	adc    edi,DWORD PTR [esi]
  4084f8:	fisub  DWORD PTR [ebp+0x7]
  4084fb:	rcr    BYTE PTR [edx],cl
  4084fd:	jo     0x408573
  4084ff:	lods   eax,DWORD PTR ds:[esi]
  408500:	add    al,0xe3
  408502:	xor    cl,bh
  408504:	jl     0x40853f
  408506:	xchg   ecx,eax
  408507:	scas   al,BYTE PTR es:[edi]
  408508:	cmp    al,0xaf
  40850a:	mov    al,ds:0x7d7afc84
  40850f:	adc    ah,bh
  408511:	fbld   TBYTE PTR fs:[ebx]
  408514:	gs (bad) 
  408516:	in     eax,dx
  408517:	xor    ax,WORD PTR [ecx+0x20]
  40851b:	mov    ecx,0x3b0a
  408520:	not    DWORD PTR ds:0x41abce
  408526:	add    ax,cx
  408529:	mov    ecx,DWORD PTR ds:0x417e49
  40852f:	or     ecx,DWORD PTR ds:0x412374
  408535:	mov    DWORD PTR ds:0x417e49,ecx
  40853b:	jmp    0x408664
  408540:	sub    cl,BYTE PTR [ebp-0x31]
  408543:	xchg   esp,eax
  408544:	jns    0x4084da
  408546:	jns    0x408589
  408548:	or     eax,0xe626a896
  40854d:	out    0x5,al
  40854f:	xchg   ebx,eax
  408550:	jge    0x40857c
  408552:	jle    0x4085d2
  408554:	or     bh,BYTE PTR [edi+0x7e]
  408557:	jle    0x4084f6
  408559:	push   esi
  40855a:	data16 sub al,0xde
  40855d:	aad    0xea
  40855f:	clc    
  408560:	push   0xffffffb1
  408562:	(bad)  
  408563:	out    dx,eax
  408564:	jge    0x40851c
  408566:	add    DWORD PTR [ebp+0x2683098a],ecx
  40856c:	add    bl,BYTE PTR [edx+eax*1-0x31]
  408570:	pop    ebx
  408571:	stc    
  408572:	dec    ebp
  408573:	mov    cl,0x9e
  408575:	mov    bh,0xb6
  408577:	sbb    bl,bl
  408579:	sub    eax,0x64a30b25
  40857e:	add    DWORD PTR [ebp+eax*1-0x2c],edi
  408582:	sbb    esp,DWORD PTR [edx+0x31ce8a0]
  408588:	dec    edx
  408589:	cmp    bl,BYTE PTR [eax+0x48]
  40858c:	sbb    bl,BYTE PTR [esi+eiz*1]
  40858f:	fistp  DWORD PTR [eax]
  408591:	stc    
  408592:	add    bl,BYTE PTR [edi+0x52]
  408595:	pop    ebp
  408596:	mov    ebp,0x4dc9956b
  40859b:	call   0xc6cd08da
  4085a0:	in     eax,0xf1
  4085a2:	jo     0x408597
  4085a4:	rcr    DWORD PTR [ebx],0x33
  4085a7:	les    ecx,FWORD PTR [ecx-0x4ee89636]
  4085ad:	sub    eax,0x5af65ebc
  4085b2:	jns    0x40854f
  4085b4:	(bad)  
  4085b5:	aad    0x7f
  4085b7:	lods   eax,DWORD PTR ds:[esi]
  4085b8:	sbb    ebp,esi
  4085ba:	outs   dx,DWORD PTR ds:[esi]
  4085bb:	je     0x4085ed
  4085bd:	int    0x9b
  4085bf:	mov    ecx,0xd1ab0cb1
  4085c4:	fst    DWORD PTR [ecx-0x27]
  4085c7:	pop    ds
  4085c8:	mov    eax,ds:0x6503ec47
  4085cd:	dec    ebx
  4085ce:	adc    DWORD PTR [edx+0x1ff4da8f],ebp
  4085d4:	fdiv   st,st(2)
  4085d6:	leave  
  4085d7:	push   ebp
  4085d8:	dec    ebp
  4085d9:	shl    BYTE PTR [edi+0xd59ad0],cl
  4085df:	mov    ?,edi
  4085e1:	es icebp 
  4085e3:	sub    edi,DWORD PTR [ebx-0xc896f85]
  4085e9:	or     eax,0x3989dc48
  4085ee:	and    BYTE PTR [ecx+ebx*4-0x4ad3d8f6],ch
  4085f5:	sar    DWORD PTR [edx],0x45
  4085f8:	mov    edx,0xeb3f6da0
  4085fd:	xor    BYTE PTR [edi+edx*8+0x70],al
  408601:	nop
  408602:	mov    WORD PTR [eax+edi*4],?
  408605:	lahf   
  408606:	fcomp  st(0)
  408608:	popa   
  408609:	int3   
  40860a:	jmp    0xad5d3968
  40860f:	int3   
  408610:	mov    edi,0x177dd930
  408615:	sbb    ebp,DWORD PTR [ebx+0x4bbe2a96]
  40861b:	pop    edi
  40861c:	cdq    
  40861d:	stos   BYTE PTR es:[edi],al
  40861e:	ss fs push ecx
  408621:	shr    DWORD PTR [ebx+0x5dcf39ee],0x6a
  408628:	mov    bh,0xea
  40862a:	shl    BYTE PTR [ebx+0x77162c6c],1
  408630:	jl     0x408660
  408632:	and    al,0x94
  408634:	(bad)  
  408635:	jns    0x4085fe
  408637:	jp     0x40868e
  408639:	jl     0x408641
  40863b:	cmc    
  40863c:	pop    ds
  40863d:	leave  
  40863e:	cdq    
  40863f:	dec    edi
  408640:	push   ebx
  408641:	fwait
  408642:	nop
  408643:	mul    dh
  408645:	jo     0x4086c6
  408647:	shr    DWORD PTR [ebp+0x4e89c7b],cl
  40864d:	xlat   BYTE PTR ds:[ebx]
  40864e:	loope  0x4086a3
  408650:	js     0x40866d
  408652:	ss iret 
  408654:	cwde   
  408655:	loope  0x4086cd
  408657:	or     eax,0x743a5c2b
  40865c:	inc    ebx
  40865d:	lds    esi,FWORD PTR [edi-0x6f]
  408660:	dec    edx
  408661:	inc    eax
  408662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408663:	adc    cl,BYTE PTR [edi]
  408665:	mov    bh,0xc0
  408667:	add    ecx,DWORD PTR ds:0x417e49
  40866d:	mov    DWORD PTR [ebp-0xc],eax
  408670:	mov    BYTE PTR [ebp-0x1],0x7f
  408674:	lea    eax,[ebp-0x1]
  408677:	and    DWORD PTR ds:0x4245c6,edx
  40867d:	mov    DWORD PTR [ebp-0x10],eax
  408680:	mov    DWORD PTR ds:0x41510d,0x1a
  40868a:	cmp    DWORD PTR ds:0x41510d,0x0
  408691:	je     0x4086bf
  408697:	cmp    DWORD PTR ds:0x41510d,0x25
  40869e:	jne    0x4086ad
  4086a4:	push   DWORD PTR [ebp-0x18]
  4086a7:	call   DWORD PTR ds:0x40d370
  4086ad:	mov    ecx,DWORD PTR ds:0x41510d
  4086b3:	dec    ecx
  4086b4:	mov    DWORD PTR ds:0x41510d,ecx
  4086ba:	jmp    0x40868a
  4086bf:	mov    al,BYTE PTR [ebp-0x1]
  4086c2:	and    DWORD PTR ds:0x4150fd,0x0
  4086cc:	mov    ecx,DWORD PTR ds:0x4150fd
  4086d2:	inc    ecx
  4086d3:	mov    DWORD PTR ds:0x4150fd,ecx
  4086d9:	cmp    DWORD PTR ds:0x4150fd,0x11
  4086e0:	jne    0x4086f1
  4086e6:	push   0x41ad87
  4086eb:	call   DWORD PTR ds:0x40d1e4
  4086f1:	cmp    DWORD PTR ds:0x4150fd,0x10
  4086f8:	jne    0x40870b
  4086fe:	mov    ecx,DWORD PTR ds:0x4150fd
  408704:	inc    ecx
  408705:	mov    DWORD PTR ds:0x4150fd,ecx
  40870b:	cmp    DWORD PTR ds:0x4150fd,0x1f
  408712:	jb     0x4086cc
  408718:	neg    ecx
  40871a:	mov    ecx,DWORD PTR [ebp-0x10]
  40871d:	xor    al,0x4a
  40871f:	or     DWORD PTR ds:0x41abe2,0x415105
  408729:	sub    al,0x34
  40872b:	mov    BYTE PTR [ecx],al
  40872d:	xor    ecx,ecx
  40872f:	jmp    0x408858
  408734:	adc    DWORD PTR [ebx+0xc],ebx
  408737:	(bad)  
  408738:	fs pop ecx
  40873a:	jmp    0x44b4d3b8
  40873f:	ficomp DWORD PTR [ebp+0x9115adf]
  408745:	sub    edi,DWORD PTR [esi+0x7e]
  408748:	or     bh,BYTE PTR [edi+0x7e]
  40874b:	jle    0x4086f5
  40874d:	or     al,0x7a
  40874f:	push   esi
  408750:	data16 fcmovb st,st(2)
  408753:	adc    ah,BYTE PTR [ecx-0x7a794894]
  408759:	sub    DWORD PTR [edx-0x2c137601],edx
  40875f:	shl    BYTE PTR [esi+0x60],cl
  408762:	xor    cl,BYTE PTR [ecx]
  408764:	mov    BYTE PTR [ebp-0xbb18427],dl
  40876a:	out    dx,eax
  40876b:	jnp    0x40876c
  40876d:	fwait
  40876e:	jne    0x4087a7
  408770:	xchg   ebx,eax
  408771:	lods   eax,DWORD PTR ds:[esi]
  408772:	ds repz pop esp
  408775:	inc    eax
  408776:	push   edi
  408777:	clc    
  408778:	xchg   ebp,eax
  408779:	mov    ds:0xfae9218a,al
  40877e:	pop    edi
  40877f:	sub    BYTE PTR [ecx+eiz*1+0x605bee00],0x32
  408787:	mov    edi,0x8afc56da
  40878c:	xor    ebx,DWORD PTR [ebp+0x29692338]
  408792:	js     0x4087ae
  408794:	adc    DWORD PTR ds:0x8e33763c,ecx
  40879a:	out    0xec,eax
  40879c:	je     0x40872b
  40879e:	adc    ecx,eax
  4087a0:	mov    eax,0x7427b9e4
  4087a5:	mov    esp,0x1de959a6
  4087aa:	mov    dl,0x57
  4087ac:	scas   eax,DWORD PTR es:[edi]
  4087ad:	jle    0x4087fd
  4087af:	(bad)  
  4087b1:	rcl    DWORD PTR [esi-0x4160be58],cl
  4087b7:	sub    al,0x4a
  4087b9:	add    DWORD PTR [esi],esi
  4087bb:	icebp  
  4087bc:	daa    
  4087bd:	aaa    
  4087be:	mov    ds:0x5787b939,eax
  4087c3:	hlt    
  4087c4:	push   eax
  4087c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087c6:	cmp    dl,BYTE PTR [eax-0x56]
  4087c9:	pop    edi
  4087ca:	jno    0x408765
  4087cc:	push   ds
  4087cd:	dec    esp
  4087ce:	inc    edi
  4087cf:	push   eax
  4087d0:	fist   DWORD PTR [esi+0x5a]
  4087d3:	pop    edx
  4087d4:	mov    edi,0x589537c
  4087d9:	add    cl,BYTE PTR [edx+ecx*2-0x54]
  4087dd:	leave  
  4087de:	cmp    bh,al
  4087e0:	icebp  
  4087e1:	mov    DWORD PTR [edi+0x70be0ad8],edi
  4087e7:	hlt    
  4087e8:	mov    DWORD PTR [ebx-0x1d192a5a],eax
  4087ee:	(bad)  
  4087ef:	jmp    0x408826
  4087f1:	leave  
  4087f2:	jecxz  0x4087eb
  4087f4:	mov    al,ds:0x3c264d3f
  4087f9:	adc    DWORD PTR [ebp+esi*1-0x29],edx
  4087fd:	push   ebp
  4087fe:	lods   al,BYTE PTR ds:[esi]
  4087ff:	mov    ebx,0x7edb2b3e
  408804:	mov    dh,0x4
  408806:	jmp    0x40880d
  408808:	push   cs
  408809:	xor    DWORD PTR [esi+0x6d],eax
  40880c:	je     0x40880c
  40880e:	mov    ecx,0x9fb0a04b
  408813:	stos   BYTE PTR es:[edi],al
  408814:	sub    eax,0x8312a901
  408819:	scas   eax,DWORD PTR es:[edi]
  40881a:	sbb    BYTE PTR ds:0xaf7d7e6d,cl
  408820:	mov    edx,0x2f8ed30b
  408825:	dec    edx
  408826:	in     eax,0x54
  408828:	loope  0x408851
  40882a:	out    dx,eax
  40882b:	ficom  DWORD PTR [esi+edi*2-0x45]
  40882f:	lds    ebp,FWORD PTR [ebx-0x1a]
  408832:	and    dh,bl
  408834:	xor    eax,0x9734ae7a
  408839:	jmp    0xc07d:0xa7e53f0e
  408840:	and    esi,0xffffffa2
  408843:	pushf  
  408844:	push   ss
  408845:	outs   dx,DWORD PTR ds:[esi]
  408846:	or     DWORD PTR [edi+0x1b],esi
  408849:	int3   
  40884a:	repnz das 
  40884c:	lahf   
  40884d:	in     al,0x22
  40884f:	shl    al,1
  408851:	sub    eax,0xb6300f93
  408856:	scas   eax,DWORD PTR es:[edi]
  408857:	rol    bh,0x45
  40885a:	clc    
  40885b:	cmp    BYTE PTR [ebp+0x1581f89c],al
  408861:	jo     0x408886
  408863:	inc    ecx
  408864:	add    BYTE PTR [esi-0x38ffffe9],al
  40886a:	inc    ebp
  40886b:	lock cmp eax,DWORD PTR [ebp+0x458bf89c]
  408872:	clc    
  408873:	xor    ecx,ecx
  408875:	add    ecx,DWORD PTR ds:0x417e59
  40887b:	sbb    DWORD PTR ds:0x41abde,ecx
  408881:	mov    ecx,0x7510859
  408886:	add    DWORD PTR ds:0x41abe6,0x417e51
  408890:	push   esi
  408891:	and    DWORD PTR ds:0x417e59,0x0
  40889b:	mov    esi,DWORD PTR ds:0x417e59
  4088a1:	inc    esi
  4088a2:	mov    DWORD PTR ds:0x417e59,esi
  4088a8:	cmp    DWORD PTR ds:0x417e59,0x9
  4088af:	jne    0x4088f1
  4088b5:	push   0x41ad06
  4088ba:	push   DWORD PTR [ebp-0x10]
  4088bd:	push   DWORD PTR [ebp-0x14]
  4088c0:	push   0x6f38
  4088c5:	push   0x208a
  4088ca:	push   0x8fdb
  4088cf:	push   0x1d69
  4088d4:	push   DWORD PTR [ebp-0x20]
  4088d7:	push   0x57cc
  4088dc:	push   DWORD PTR [ebp-0x10]
  4088df:	push   DWORD PTR [ebp-0x28]
  4088e2:	push   DWORD PTR [ebp-0x24]
  4088e5:	push   DWORD PTR [ebp-0x28]
  4088e8:	push   DWORD PTR [ebp-0x1c]
  4088eb:	call   DWORD PTR ds:0x40d374
  4088f1:	cmp    DWORD PTR ds:0x417e59,0x8
  4088f8:	jne    0x40890d
  4088fe:	xor    esi,esi
  408900:	add    esi,DWORD PTR ds:0x417e59
  408906:	inc    esi
  408907:	mov    DWORD PTR ds:0x417e59,esi
  40890d:	cmp    DWORD PTR ds:0x417e59,0x13
  408914:	jb     0x40889b
  40891a:	xor    eax,ecx
  40891c:	mov    esi,0x32729f
  408921:	add    eax,esi
  408923:	jmp    0x408930
  408928:	mov    dl,BYTE PTR [ebp-0x1]
  40892b:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  40892f:	inc    eax
  408930:	cmp    eax,0x40
  408933:	jb     0x408928
  408939:	mov    edx,DWORD PTR [ebp-0x8]
  40893c:	mov    eax,DWORD PTR [ebp-0xc]
  40893f:	jmp    0x408a68
  408944:	sub    eax,0xb98f82f6
  408949:	fwait
  40894a:	and    DWORD PTR [eax+eax*1+0x2fd74167],edx
  408951:	fs ds in al,dx
  408954:	add    eax,0xa7e7e28
  408959:	jg     0x4089d9
  40895b:	jle    0x40896f
  40895d:	dec    esp
  40895e:	rcl    ah,cl
  408960:	out    0xa5,eax
  408962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408963:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408964:	mov    edi,0xe7cf17f3
  408969:	call   0xa8c37f5f
  40896e:	xchg   edi,eax
  40896f:	aad    0x33
  408971:	push   0xe427e907
  408976:	adc    eax,0x34a86163
  40897b:	cmp    al,0xd4
  40897d:	lods   eax,DWORD PTR ds:[esi]
  40897e:	push   ds
  40897f:	ins    BYTE PTR es:[edi],dx
  408980:	ret    
  408981:	shl    DWORD PTR [ebx-0x6e3b80d6],0x9b
  408988:	repz xchg edx,eax
  40898a:	mov    dh,0x22
  40898c:	xor    DWORD PTR [edx-0x180fdc90],ebx
  408992:	xor    dh,bl
  408994:	push   es
  408995:	ins    BYTE PTR es:[edi],dx
  408996:	(bad)  
  408997:	fist   DWORD PTR [ebp-0x5d160908]
  40899d:	sub    eax,0x627ebf71
  4089a2:	call   0xb6b0:0xe8d010ff
  4089a9:	sti    
  4089aa:	pop    eax
  4089ab:	stos   DWORD PTR es:[edi],eax
  4089ac:	call   0x5349:0xbb7b2e71
  4089b3:	xchg   ebp,eax
  4089b4:	aas    
  4089b5:	or     al,0x8a
  4089b7:	jp     0x408a20
  4089b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089ba:	xor    eax,0xbcd4a89e
  4089bf:	cld    
  4089c0:	ss pushf 
  4089c2:	sets   cl
  4089c5:	daa    
  4089c6:	push   es
  4089c7:	mov    ebp,DWORD PTR [ebx]
  4089c9:	mov    edi,0x12d6674c
  4089ce:	or     eax,DWORD PTR [ebp+0x48001e8e]
  4089d4:	das    
  4089d5:	shr    cl,cl
  4089d7:	jg     0x408a43
  4089d9:	fiadd  DWORD PTR es:[eax+0x3041ede2]
  4089e0:	add    BYTE PTR [esi+0x2b4204b5],al
  4089e6:	or     DWORD PTR [esi+0x5d],edi
  4089e9:	push   0x5e
  4089eb:	xor    BYTE PTR [ebx+0x27],ch
  4089ee:	dec    ebx
  4089ef:	jmp    0xd41f513d
  4089f4:	xchg   ebx,eax
  4089f5:	jle    0x40898e
  4089f7:	xchg   ecx,eax
  4089f8:	xchg   ecx,eax
  4089f9:	ins    BYTE PTR es:[edi],dx
  4089fa:	jb     0x4089d7
  4089fc:	mov    al,0x8
  4089fe:	add    BYTE PTR [ebx],dh
  408a00:	xchg   esi,eax
  408a01:	xchg   ecx,eax
  408a02:	pop    ds
  408a03:	add    DWORD PTR [edx],edi
  408a05:	adc    al,0x11
  408a07:	jo     0x4089b9
  408a09:	xchg   edi,eax
  408a0a:	rol    edi,cl
  408a0c:	dec    edx
  408a0d:	add    eax,0xd9d1b2e3
  408a12:	ret    0xbe58
  408a15:	cdq    
  408a16:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  408a18:	mov    ds:0xac4ad998,eax
  408a1d:	mov    cl,0x6e
  408a1f:	or     eax,DWORD PTR [edx-0x2ffd81ba]
  408a25:	mov    cs,WORD PTR [ebp+0x8aacaf3]
  408a2b:	sar    DWORD PTR [ecx-0x19be1c2d],cl
  408a31:	mov    eax,ds:0x1c5ad8be
  408a36:	je     0x408a17
  408a38:	and    BYTE PTR cs:[esi],bh
  408a3b:	fistp  QWORD PTR [esi-0x3d03545b]
  408a41:	int    0xfb
  408a43:	push   ecx
  408a44:	fimul  DWORD PTR [edx]
  408a46:	xchg   esp,eax
  408a47:	mul    BYTE PTR [ebp-0x38]
  408a4a:	pop    es
  408a4b:	xchg   edi,eax
  408a4c:	in     eax,0xe2
  408a4e:	aam    0x88
  408a50:	jmp    0x6a3c:0x3f6d5d4f
  408a57:	stc    
  408a58:	cmp    al,0xd3
  408a5a:	push   eax
  408a5b:	fidivr WORD PTR [edi+0x15eafa7f]
  408a61:	retf   
  408a62:	adc    al,0xac
  408a64:	mov    DWORD PTR [eax+esi*2-0x1d],esi
  408a68:	xor    edx,ecx
  408a6a:	add    edx,esi
  408a6c:	cmp    edx,eax
  408a6e:	je     0x408d06
  408a74:	jmp    0x408b9d
  408a79:	xor    ecx,DWORD PTR [edx+ebx*1-0x14]
  408a7d:	cdq    
  408a7e:	js     0x408a69
  408a80:	popa   
  408a81:	cmp    ax,0xba8d
  408a85:	rcr    DWORD PTR [edx],cl
  408a87:	xor    cl,BYTE PTR [ecx]
  408a89:	adc    DWORD PTR [ecx],ebp
  408a8b:	jle    0x408b0b
  408a8d:	or     bh,BYTE PTR [edi+0x7e]
  408a90:	jle    0x408af2
  408a92:	lds    ebx,FWORD PTR [ebx+0x34]
  408a95:	call   0x3a51d877
  408a9a:	cwde   
  408a9b:	stos   BYTE PTR es:[edi],al
  408a9c:	add    bh,BYTE PTR [ebp+0x5ef90fad]
  408aa2:	add    dl,ch
  408aa4:	inc    ecx
  408aa5:	pop    esi
  408aa6:	mov    edi,0xb88825af
  408aab:	and    eax,0xd912e1ef
  408ab0:	cmp    BYTE PTR [ecx+0xd68ce22],0x70
  408ab7:	sub    al,0xc3
  408ab9:	cmp    al,0x61
  408abb:	imul   ebp,DWORD PTR [esi],0x27b41fa6
  408ac1:	rol    DWORD PTR [eax-0x5d],0x91
  408ac5:	cwde   
  408ac6:	aaa    
  408ac7:	cmp    dl,BYTE PTR [ebx-0x36e58dd8]
  408acd:	and    dl,BYTE PTR [esi+edx*8-0x51dcdd93]
  408ad4:	ins    BYTE PTR es:[edi],dx
  408ad5:	lods   eax,DWORD PTR ds:[esi]
  408ad6:	push   cs
  408ad7:	or     esp,DWORD PTR [edi+0x2a]
  408ada:	jecxz  0x408a67
  408adc:	out    dx,al
  408add:	mov    dh,0x3e
  408adf:	je     0x408ab1
  408ae1:	cli    
  408ae2:	je     0x408a6a
  408ae4:	jae    0x408ac2
  408ae6:	mov    ebp,0x5b6b1ec7
  408aeb:	fidivr DWORD PTR [edx-0x45]
  408aee:	pop    ds
  408aef:	and    bl,BYTE PTR [ecx+0x1a]
  408af2:	push   es
  408af3:	mov    ?,WORD PTR [ecx+eax*2+0x27]
  408af7:	dec    edx
  408af8:	xchg   edi,eax
  408af9:	test   edx,0xe42483b2
  408aff:	aas    
  408b00:	inc    ecx
  408b01:	xchg   DWORD PTR [ebx+0x1611db92],ecx
  408b07:	daa    
  408b08:	out    dx,eax
  408b09:	psraw  mm1,QWORD PTR [ebx-0x239774a9]
  408b10:	mov    al,0x3b
  408b12:	push   ds
  408b13:	icebp  
  408b14:	in     eax,dx
  408b15:	or     al,0xdc
  408b17:	test   DWORD PTR [ecx+0x53],0x4b865817
  408b1e:	loope  0x408b28
  408b20:	ror    DWORD PTR [ebx+0xa],1
  408b23:	cmp    al,0x84
  408b25:	ret    0x265f
  408b28:	mov    dh,0x90
  408b2a:	fstp   TBYTE PTR [ebp+edi*1+0x78343f1]
  408b31:	mov    ecx,0x1c8644c8
  408b36:	xor    edx,0x1f54d1a3
  408b3c:	adc    DWORD PTR [edx-0x564a1d53],edi
  408b42:	pop    eax
  408b43:	inc    eax
  408b44:	inc    esi
  408b45:	popa   
  408b46:	push   es
  408b47:	dec    ebp
  408b48:	push   ss
  408b49:	out    dx,eax
  408b4a:	out    0x36,eax
  408b4c:	jg     0x408ba7
  408b4e:	adc    eax,0x9e5579e5
  408b53:	and    ebp,DWORD PTR [eax]
  408b55:	sub    edx,esp
  408b57:	cmp    esp,DWORD PTR [eax+0x5399b58e]
  408b5d:	xor    BYTE PTR [ecx-0x3ca0c6c6],0xb4
  408b64:	sti    
  408b65:	xor    DWORD PTR [ecx],esp
  408b67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b69:	outs   dx,BYTE PTR ds:[esi]
  408b6a:	bound  ebx,QWORD PTR [ebx]
  408b6c:	es dec ecx
  408b6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b6f:	scas   al,BYTE PTR es:[edi]
  408b70:	xchg   DWORD PTR [ecx],ebp
  408b72:	mov    ds:0xf9e3bdbf,al
  408b77:	rcl    DWORD PTR [eax+0x7],cl
  408b7a:	add    BYTE PTR [esi-0x44699a80],dl
  408b80:	std    
  408b81:	pop    edi
  408b82:	dec    eax
  408b83:	test   eax,0xca2f1f03
  408b88:	gs inc edx
  408b8a:	sub    ch,BYTE PTR [edx+0xa6399a9]
  408b90:	mov    dh,0xe0
  408b92:	out    0x94,al
  408b94:	mov    eax,?
  408b96:	or     cl,dl
  408b98:	scas   eax,DWORD PTR es:[edi]
  408b99:	mov    ecx,0x53581bd3
  408b9e:	push   edi
  408b9f:	mov    edi,DWORD PTR [ebp+0x8]
  408ba2:	mov    eax,0x8a43
  408ba7:	xor    ax,WORD PTR [edi+edx*4+0x2]
  408bac:	mov    edi,0x3b0a
  408bb1:	add    ax,di
  408bb4:	movzx  eax,ax
  408bb7:	mov    DWORD PTR [ebp-0x14],eax
  408bba:	mov    eax,DWORD PTR [ebp+0x8]
  408bbd:	jmp    0x408ce6
  408bc2:	(bad)  
  408bc3:	fcom   DWORD PTR [edx+eax*8]
  408bc6:	sub    dl,ah
  408bc8:	clc    
  408bc9:	fcomp  DWORD PTR [ebx-0x49ec9643]
  408bcf:	int    0x4e
  408bd1:	push   ds
  408bd2:	sub    eax,0xa7e7e2e
  408bd7:	jg     0x408c57
  408bd9:	jle    0x408c3b
  408bdb:	or     DWORD PTR ds:0x81f05bcf,0x9efb18f
  408be5:	mov    bh,0x3
  408be7:	adc    al,0x86
  408be9:	js     0x408be4
  408beb:	repnz mov eax,ds:0xc0c1c23b
  408bf1:	pop    esi
  408bf2:	nop
  408bf3:	push   es
  408bf4:	xchg   si,ax
  408bf6:	loop   0x408c77
  408bf8:	clc    
  408bf9:	aam    0x92
  408bfb:	mov    dl,0x2a
  408bfd:	stos   BYTE PTR es:[edi],al
  408bfe:	mov    cs,WORD PTR [esi-0x53]
  408c01:	mov    eax,ds:0x5f2100eb
  408c06:	in     eax,dx
  408c07:	pop    esp
  408c08:	mov    ebx,0x21e1a708
  408c0d:	sbb    al,0x26
  408c0f:	jmp    0xfafdb3f8
  408c14:	jp     0x408c65
  408c16:	or     bl,dh
  408c18:	inc    edi
  408c19:	cvtpi2ps xmm1,QWORD PTR [edx]
  408c1c:	lods   al,BYTE PTR ds:[esi]
  408c1d:	aam    0x87
  408c1f:	xchg   BYTE PTR [edx-0x68],dh
  408c22:	cdq    
  408c23:	test   eax,0x10c2ea2a
  408c28:	sbb    ah,BYTE PTR [ebp+0x61]
  408c2b:	out    dx,eax
  408c2c:	inc    esp
  408c2d:	mov    al,0x76
  408c2f:	fwait
  408c30:	push   cs
  408c31:	dec    ebp
  408c32:	cmc    
  408c33:	mov    WORD PTR [ebx+edx*8],es
  408c36:	mov    al,BYTE PTR [ebp+ecx*8+0x33454291]
  408c3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c3e:	jmp    0x6eeeb6c0
  408c43:	pop    bx
  408c45:	cli    
  408c46:	inc    edx
  408c47:	sbb    eax,0x4e4c8670
  408c4c:	adc    al,0x35
  408c4e:	add    DWORD PTR [eax],edx
  408c50:	dec    eax
  408c51:	clc    
  408c52:	push   esp
  408c53:	stos   DWORD PTR es:[edi],eax
  408c54:	cmp    edi,DWORD PTR [eax]
  408c56:	call   0x640b92ee
  408c5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c5c:	ss inc edi
  408c5e:	sbb    BYTE PTR [esi+ebx*1-0x1b],bl
  408c62:	pop    ebx
  408c63:	ret    0x7387
  408c66:	xor    cl,0x2
  408c69:	or     dh,dl
  408c6b:	push   0xffffffa3
  408c6d:	in     al,0x22
  408c6f:	jo     0x408cb6
  408c71:	mov    ds:0x151e97df,al
  408c76:	stos   DWORD PTR es:[edi],eax
  408c77:	sub    esi,0xe6f6d5b0
  408c7d:	cmp    al,0xce
  408c7f:	push   ss
  408c80:	ins    BYTE PTR es:[edi],dx
  408c81:	outs   dx,DWORD PTR ds:[esi]
  408c82:	mov    eax,ds:0xe5033c70
  408c87:	sub    bh,BYTE PTR [eax-0x18]
  408c8a:	pop    es
  408c8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c8c:	xor    cl,BYTE PTR [esi+0x19]
  408c8f:	inc    edi
  408c90:	movq   QWORD PTR [eax-0x7745b135],mm2
  408c97:	jo     0x408c23
  408c99:	pop    edi
  408c9a:	jno    0x408c27
  408c9c:	repz cld 
  408c9e:	mov    eax,0x56cc5bbb
  408ca3:	mov    ds:0x4eece57b,eax
  408ca8:	iret   
  408ca9:	ins    DWORD PTR es:[edi],dx
  408caa:	sbb    al,0x42
  408cac:	rcr    BYTE PTR [esi],1
  408cae:	mov    eax,0x566f44b5
  408cb3:	adc    BYTE PTR [ebx+0x44d381df],al
  408cb9:	sub    eax,DWORD PTR [eax-0x75]
  408cbc:	pop    ds
  408cbd:	(bad)  
  408cbe:	push   edi
  408cbf:	test   eax,0xcf346536
  408cc4:	loope  0x408c6a
  408cc6:	popa   
  408cc7:	sub    BYTE PTR [di+0x4699],ah
  408ccc:	jmp    0x408d2a
  408cce:	jno    0x408d11
  408cd0:	inc    ebp
  408cd1:	inc    eax
  408cd2:	sub    ebx,DWORD PTR [ecx-0x58]
  408cd5:	lahf   
  408cd6:	ss xor ecx,ecx
  408cd9:	fsubr  DWORD PTR [ebp-0x3c8cf095]
  408ce0:	stos   BYTE PTR es:[edi],al
  408ce1:	aas    
  408ce2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ce3:	mov    ebx,es
  408ce5:	cmp    cl,BYTE PTR [edi]
  408ce7:	mov    bh,0x4
  408ce9:	nop
  408cea:	xor    eax,0x8a43
  408cef:	add    eax,edi
  408cf1:	mov    edi,DWORD PTR [ebp-0x14]
  408cf4:	mov    BYTE PTR [ebp+edi*1-0x58],al
  408cf8:	mov    eax,DWORD PTR [ebp-0xc]
  408cfb:	inc    edx
  408cfc:	cmp    edx,eax
  408cfe:	jne    0x408b9f
  408d04:	pop    edi
  408d05:	pop    ebx
  408d06:	mov    eax,DWORD PTR [ebp-0x8]
  408d09:	mov    edx,DWORD PTR [ebp+0x10]
  408d0c:	xor    eax,ecx
  408d0e:	jmp    0x408e37
  408d13:	inc    esp
  408d14:	(bad)  
  408d15:	jno    0x408cee
  408d17:	icebp  
  408d18:	stc    
  408d19:	js     0x408d80
  408d1b:	xchg   esp,eax
  408d1c:	ins    BYTE PTR es:[edi],dx
  408d1d:	retf   0x9da3
  408d20:	popf   
  408d21:	outs   dx,BYTE PTR ds:[esi]
  408d22:	cmp    BYTE PTR [ecx],0x2f
  408d25:	jle    0x408da5
  408d27:	or     bh,BYTE PTR [edi+0x7e]
  408d2a:	jle    0x408cd7
  408d2c:	call   0x980eccab
  408d31:	ret    
  408d32:	mov    ebp,0xee2fb6ab
  408d37:	jnp    0x408cd1
  408d39:	int    0x55
  408d3b:	dec    ebx
  408d3c:	xor    eax,0x18e046a2
  408d41:	dec    eax
  408d42:	or     eax,0x4f1638af
  408d47:	jmp    0x408ccd
  408d49:	sbb    al,0x8c
  408d4b:	(bad)  
  408d4d:	lds    eax,FWORD PTR [edx-0x580fe543]
  408d53:	pop    esi
  408d54:	imul   esp,DWORD PTR [edi+ebp*1+0x40],0xffffffd3
  408d59:	out    dx,eax
  408d5a:	mov    bh,0xaa
  408d5c:	outs   dx,DWORD PTR ds:[esi]
  408d5d:	fstp   st(3)
  408d5f:	mov    ds:0x8ce7890f,al
  408d64:	outs   dx,DWORD PTR ds:[esi]
  408d65:	test   DWORD PTR [ebp+0x12cb450a],ecx
  408d6b:	pop    eax
  408d6c:	cmp    al,0x10
  408d6e:	(bad)  
  408d6f:	repnz sbb DWORD PTR [edx+0xbe8c74e],0x608ea3d4
  408d7a:	or     BYTE PTR ds:0x140882f1,0x22
  408d81:	mov    ds:0xcb0c5cad,al
  408d86:	mov    ebx,0x1668147e
  408d8b:	inc    ecx
  408d8c:	mov    ch,BYTE PTR [edi-0x331f03f0]
  408d92:	add    ecx,esi
  408d94:	enter  0x406a,0xfe
  408d98:	cs jbe 0x408d65
  408d9b:	stos   BYTE PTR es:[edi],al
  408d9c:	mov    ds:0xd390c18b,eax
  408da1:	mov    al,ds:0xc0cb7a81
  408da6:	je     0x408dd2
  408da8:	adc    dh,BYTE PTR [ecx+0x14]
  408dab:	les    edx,FWORD PTR [esi+0x1e]
  408dae:	xlat   BYTE PTR ds:[ebx]
  408daf:	mov    dl,0x4b
  408db1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408db2:	and    al,0x54
  408db4:	inc    ebp
  408db5:	mov    bl,0x5d
  408db7:	(bad)  
  408db8:	test   BYTE PTR [edx+0x1b1a4eae],0x5
  408dbf:	(bad)  
  408dc0:	jge    0x408e41
  408dc2:	mov    cl,0x28
  408dc4:	(bad)  
  408dc5:	sar    BYTE PTR [ebx-0x713eeca8],cl
  408dcb:	mov    ah,0x2e
  408dcd:	in     al,0xed
  408dcf:	jns    0x408d6c
  408dd1:	(bad)  [esp+esi*1-0x7c4940b7]
  408dd8:	xor    BYTE PTR [edx+0x49],0x1
  408ddc:	or     edx,DWORD PTR [ecx-0x4e7c06]
  408de2:	xor    al,BYTE PTR [edx*8-0x2053ec5a]
  408de9:	dec    ecx
  408dea:	mov    bl,0xc6
  408dec:	and    ecx,ebx
  408dee:	xor    ecx,0xb61654a8
  408df4:	imul   ecx,DWORD PTR [ecx+0x19],0x52
  408df8:	out    dx,al
  408df9:	pop    esi
  408dfa:	dec    ecx
  408dfb:	xchg   ecx,eax
  408dfc:	stos   BYTE PTR es:[edi],al
  408dfd:	(bad)  
  408dfe:	aad    0x8d
  408e00:	mov    al,ds:0x8bb2fe75
  408e05:	(bad)  [edx+eiz*1]
  408e08:	cli    
  408e09:	cmp    eax,0xa067a428
  408e0e:	xor    eax,0x7d454d90
  408e13:	add    esi,DWORD PTR [edx+0x35]
  408e16:	inc    edx
  408e17:	mov    fs,WORD PTR ds:0x88b2ddac
  408e1d:	jb     0x408e32
  408e1f:	(bad)  
  408e20:	aad    0x3b
  408e22:	dec    eax
  408e23:	and    eax,0x65d3c11f
  408e28:	xor    al,0xe
  408e2a:	push   esp
  408e2b:	popa   
  408e2c:	inc    esp
  408e2d:	imul   edi,ebp,0xffffffd9
  408e30:	sbb    ebx,DWORD PTR [esi-0x6]
  408e33:	(bad)  
  408e34:	jmp    0x408dd9
  408e36:	cld    
  408e37:	add    eax,esi
  408e39:	mov    DWORD PTR [edx],eax
  408e3b:	jmp    0x408f64
  408e40:	dec    eax
  408e41:	sub    ecx,DWORD PTR [edx]
  408e43:	lock imul edx,DWORD PTR [ecx+0x1c4aeb48],0x822cde2b
  408e4e:	mov    edi,0x7e2c359b
  408e53:	jle    0x408e5f
  408e55:	jg     0x408ed5
  408e57:	jle    0x408e58
  408e59:	pushw  ss
  408e5b:	cs std 
  408e5d:	and    al,0xad
  408e5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e60:	leave  
  408e61:	mov    al,0x96
  408e63:	mov    ds:0x55fba132,eax
  408e68:	outs   dx,BYTE PTR ds:[esi]
  408e69:	or     DWORD PTR [ecx-0x1bcaa714],0x3
  408e70:	sti    
  408e71:	ins    BYTE PTR es:[edi],dx
  408e72:	jmp    0xd85f:0xdaa9e7f9
  408e79:	int3   
  408e7a:	pop    ss
  408e7b:	lock dec ebx
  408e7d:	and    DWORD PTR [edx-0x39eff1e4],edi
  408e83:	inc    eax
  408e84:	shr    edx,cl
  408e86:	pop    eax
  408e87:	or     al,0xbb
  408e89:	ret    0xffdd
  408e8c:	shl    BYTE PTR [ebx+0x65],0xc
  408e90:	cmp    DWORD PTR [ecx],esi
  408e92:	push   ss
  408e93:	pop    ebx
  408e94:	xchg   ebx,eax
  408e95:	dec    ebp
  408e96:	mov    ds:0xb7ff9875,al
  408e9b:	push   es
  408e9c:	mov    ds:0xe2583c8b,al
  408ea1:	pop    eax
  408ea2:	dec    esp
  408ea3:	(bad)  
  408ea4:	int    0x39
  408ea6:	icebp  
  408ea7:	push   ebx
  408ea8:	push   esi
  408ea9:	(bad)  
  408eaa:	js     0x408ef1
  408eac:	rol    BYTE PTR [eax+0x86c421b],0xf2
  408eb3:	or     BYTE PTR [edx+0x3342ea8e],ch
  408eb9:	int3   
  408eba:	and    eax,0x348da2f8
  408ebf:	xor    al,0xff
  408ec1:	inc    ecx
  408ec2:	mov    bl,0x9b
  408ec4:	outs   dx,BYTE PTR ds:[esi]
  408ec5:	lock mov eax,0xd14e2d2b
  408ecb:	dec    ebp
  408ecc:	adc    edi,DWORD PTR [ebx+edi*4+0x0]
  408ed0:	repz pop ds
  408ed2:	aas    
  408ed3:	add    eax,DWORD PTR [ecx+eax*4-0x695a6c3]
  408eda:	push   ds
  408edb:	mov    cs,WORD PTR [ebx]
  408edd:	dec    ebx
  408ede:	push   edi
  408edf:	jnp    0x408f46
  408ee1:	xor    edx,DWORD PTR [esp+esi*4+0x44]
  408ee5:	rol    BYTE PTR [ecx+0x2f],cl
  408ee8:	inc    eax
  408ee9:	scas   al,BYTE PTR es:[edi]
  408eea:	in     eax,dx
  408eeb:	js     0x408e74
  408eed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408eee:	mov    esp,0xd15fe2d
  408ef3:	gs dec esp
  408ef5:	inc    esp
  408ef6:	jmp    0x85a5:0x436bd66e
  408efd:	mov    DWORD PTR [edi+0x5680f650],ebp
  408f03:	idiv   DWORD PTR [edi-0x3d]
  408f06:	cli    
  408f07:	fimul  WORD PTR [ebp+0x4a]
  408f0a:	ja     0x408f5c
  408f0c:	adc    al,0xa0
  408f0e:	push   ebx
  408f0f:	cs push es
  408f11:	hlt    
  408f12:	stos   BYTE PTR es:[edi],al
  408f13:	pop    ds
  408f14:	out    dx,eax
  408f15:	leave  
  408f16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f18:	adc    BYTE PTR [ebp+0x71],al
  408f1b:	pop    edx
  408f1c:	xchg   esi,eax
  408f1d:	add    BYTE PTR [ebx-0x7f7361cd],0xdc
  408f24:	scas   eax,DWORD PTR es:[edi]
  408f25:	push   ecx
  408f26:	ret    0x5282
  408f29:	adc    BYTE PTR [ebx-0x4a],0x2c
  408f2d:	xor    BYTE PTR [esi+0xc2b0982],0xf2
  408f34:	push   cs
  408f35:	and    edi,esi
  408f37:	stc    
  408f38:	lods   eax,DWORD PTR fs:[esi]
  408f3a:	mov    edi,0xdcea8266
  408f3f:	fadd   QWORD PTR [edi-0x18d2e181]
  408f45:	dec    ebp
  408f46:	cmc    
  408f47:	mov    ecx,0x2c1c8d9b
  408f4c:	add    esp,DWORD PTR [eax+0x18518343]
  408f52:	jae    0x408f7b
  408f54:	scas   al,BYTE PTR es:[edi]
  408f55:	jnp    0x408f57
  408f57:	imul   edi,edx,0x89d2140
  408f5d:	repz int 0x20
  408f60:	and    eax,0x8bba61fc
  408f65:	inc    ebp
  408f66:	clc    
  408f67:	xor    eax,ecx
  408f69:	add    eax,esi
  408f6b:	mov    DWORD PTR [ebp+0x8],eax
  408f6e:	mov    eax,DWORD PTR [ebp+0x8]
  408f71:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408f75:	mov    dl,BYTE PTR [ebp-0x1]
  408f78:	cmp    al,dl
  408f7a:	je     0x4090e6
  408f80:	mov    eax,DWORD PTR [ebp+0x8]
  408f83:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408f87:	mov    edx,DWORD PTR [ebp+0xc]
  408f8a:	cmp    al,BYTE PTR [edx]
  408f8c:	jne    0x40935e
  408f92:	mov    eax,DWORD PTR [ebp-0x8]
  408f95:	mov    edx,DWORD PTR [ebp+0xc]
  408f98:	jmp    0x4090c1
  408f9d:	jmp    0x7952d498
  408fa2:	loopne 0x40901d
  408fa4:	mov    ch,0xbe
  408fa6:	jmp    0x6c4bb935
  408fab:	out    dx,al
  408fac:	in     al,0xc1
  408fae:	sub    eax,0x7f0a7e7e
  408fb3:	jle    0x409033
  408fb5:	test   DWORD PTR [esi],edx
  408fb7:	repnz or eax,0x594cb619
  408fbd:	cmp    DWORD PTR [esi],esi
  408fbf:	pop    ebx
  408fc0:	mul    BYTE PTR [edi+0x50]
  408fc3:	push   cs
  408fc4:	shr    DWORD PTR [ebp+ebp*4-0x539c5f3f],1
  408fcb:	ins    BYTE PTR es:[edi],dx
  408fcc:	add    bh,BYTE PTR [eax]
  408fce:	mov    bh,bh
  408fd0:	sti    
  408fd1:	outs   dx,BYTE PTR ds:[esi]
  408fd2:	or     edi,DWORD PTR [bx+di]
  408fd5:	mov    DWORD PTR [eax+0x293d4677],ecx
  408fdb:	leave  
  408fdc:	outs   dx,BYTE PTR ds:[esi]
  408fdd:	les    eax,FWORD PTR cs:[ebx+0x7b]
  408fe1:	fisubr DWORD PTR ds:0x493aa36b
  408fe7:	xor    al,0x26
  408fe9:	sbb    ebp,DWORD PTR [ebx]
  408feb:	je     0x408ff8
  408fed:	int3   
  408fee:	call   0xaadad13c
  408ff3:	ds mov edi,0xeac78b5e
  408ff9:	xchg   BYTE PTR [eax-0x7a],ch
  408ffc:	or     DWORD PTR [ebx],eax
  408ffe:	adc    dl,BYTE PTR [edx-0x14]
  409001:	mov    DWORD PTR [ebx],eax
  409003:	inc    edx
  409004:	or     ecx,DWORD PTR [esi+0x7137334d]
  40900a:	jmp    0x93a4ea46
  40900f:	(bad)  
  409010:	mov    edi,0xe17fca60
  409015:	sbb    eax,0xfa3a5e5e
  40901a:	mov    ah,BYTE PTR [ecx+0x2e]
  40901d:	fmul   QWORD PTR [ebx-0x5d]
  409020:	lds    ebx,FWORD PTR [ebp+0x41]
  409023:	jge    0x408fff
  409025:	xor    DWORD PTR gs:[ebx-0x76],ebx
  409029:	rcl    DWORD PTR [ebx],cl
  40902b:	fdivr  DWORD PTR [edi]
  40902d:	xor    BYTE PTR [eax+0x5d2d43b5],0x17
  409034:	or     ecx,DWORD PTR [ebp+0x67]
  409037:	les    ecx,FWORD PTR [eax+0x31]
  40903a:	out    dx,al
  40903b:	or     eax,0xab8b9f5c
  409040:	sbb    esp,DWORD PTR [esi]
  409042:	das    
  409043:	dec    ebp
  409044:	ret    
  409045:	les    esi,FWORD PTR [eax]
  409047:	bnd jb 0x40909f
  40904a:	pop    esi
  40904b:	je     0x409041
  40904d:	fmul   st(3),st
  40904f:	or     ah,BYTE PTR [esi+edi*1]
  409052:	mov    ch,0xf3
  409054:	xor    bl,dl
  409056:	sbb    eax,0x5e9d9292
  40905b:	push   es
  40905c:	(bad)  
  40905e:	gs jae 0x4090bd
  409061:	fldenv [eax]
  409063:	aas    
  409064:	sub    eax,0x58420881
  409069:	xchg   BYTE PTR [ebp-0x9],ch
  40906c:	ins    DWORD PTR es:[edi],dx
  40906d:	mov    eax,0xe3915df2
  409072:	mov    esi,0xae9c48b2
  409077:	jbe    0x4090ad
  409079:	add    eax,0x986faa67
  40907e:	fst    QWORD PTR [ebx]
  409080:	xchg   ecx,eax
  409081:	out    0xca,eax
  409083:	sbb    BYTE PTR [ebx],0x8d
  409086:	les    esp,FWORD PTR [ecx+0x2c]
  409089:	or     BYTE PTR [eax],ah
  40908b:	xchg   edi,eax
  40908c:	pop    ecx
  40908d:	dec    ebp
  40908e:	outs   dx,DWORD PTR cs:[esi]
  409090:	xchg   esi,eax
  409091:	dec    edi
  409092:	inc    ebp
  409093:	ret    0x211c
  409096:	push   0xaac76cce
  40909b:	xor    eax,0x82cc3297
  4090a0:	add    BYTE PTR [ebx+edx*4],dh
  4090a3:	clc    
  4090a4:	ins    DWORD PTR es:[edi],dx
  4090a5:	jne    0x40909f
  4090a7:	idiv   ebx
  4090a9:	push   ds
  4090aa:	cmp    DWORD PTR [edx],ebp
  4090ac:	pop    eax
  4090ad:	inc    esp
  4090ae:	mov    ah,0x18
  4090b0:	and    eax,0xf991c025
  4090b5:	and    eax,0x355bf80e
  4090ba:	and    DWORD PTR [eax],esi
  4090bc:	mov    dl,BYTE PTR [edx+ecx*8+0x63]
  4090c0:	in     eax,0xf
  4090c2:	mov    esi,0x3c13312
  4090c7:	(bad)  
  4090c8:	cmp    edx,eax
  4090ca:	je     0x409229
  4090d0:	mov    DWORD PTR [ebp-0x18],0x705fd8e
  4090d7:	lea    eax,[ebp-0x18]
  4090da:	mov    DWORD PTR [ebp-0x14],eax
  4090dd:	mov    eax,DWORD PTR [ebp-0x14]
  4090e0:	add    DWORD PTR [eax],0x705fa8e
  4090e6:	mov    eax,DWORD PTR [ebp-0x10]
  4090e9:	jmp    0x409212
  4090ee:	lods   eax,DWORD PTR ds:[esi]
  4090ef:	lock test BYTE PTR [ecx+edi*4],al
  4090f3:	sbb    BYTE PTR [ebp-0x47188557],ch
  4090f9:	daa    
  4090fa:	fcom   DWORD PTR [edx+0x22dd328b]
  409100:	jle    0x409180
  409102:	or     bh,BYTE PTR [edi+0x7e]
  409105:	jle    0x40912a
  409107:	lds    esp,FWORD PTR [ebx-0x76682a9b]
  40910d:	fcomp  DWORD PTR [eax]
  40910f:	sti    
  409110:	add    eax,0x5fb2a175
  409115:	repz xchg ebx,eax
  409117:	xchg   ebx,eax
  409118:	xchg   dl,bl
  40911a:	add    esp,ebp
  40911c:	cmp    al,0x8
  40911e:	fsub   st,st(3)
  409120:	mov    edi,0x6ee15bb1
  409125:	stos   DWORD PTR es:[edi],eax
  409126:	sub    bl,al
  409128:	gs cmp eax,0x6a049e22
  40912e:	xor    DWORD PTR [edi-0xb949799],esp
  409134:	add    BYTE PTR [ebx+0x3],ah
  409137:	dec    esp
  409138:	dec    edx
  409139:	push   edi
  40913a:	sahf   
  40913b:	push   edi
  40913c:	xchg   ebx,eax
  40913d:	aad    0x4f
  40913f:	imul   esp,DWORD PTR [ebp-0x30],0x76
  409143:	ja     0x40914c
  409145:	adc    eax,0xfa65100c
  40914a:	cmp    eax,0x1592f61a
  40914f:	mul    dh
  409151:	mov    ebp,0x5c90d875
  409156:	or     DWORD PTR [edi+0x1a],edx
  409159:	push   esi
  40915a:	dec    eax
  40915b:	loope  0x409111
  40915d:	stc    
  40915e:	mov    ebp,0x64cadde3
  409163:	call   0x7b4f:0xe7ee510d
  40916a:	cmp    eax,0xbaba62ee
  40916f:	inc    edx
  409170:	test   eax,esp
  409172:	(bad)
  409175:	popa   
  409176:	mov    DWORD PTR [ebx-0x165e48ad],ecx
  40917c:	ds dec edi
  40917e:	push   ds
  40917f:	sub    eax,esi
  409181:	push   es
  409182:	jle    0x4091bd
  409184:	aaa    
  409185:	(bad)  
  409186:	or     eax,edx
  409188:	pop    edx
  409189:	scas   eax,DWORD PTR es:[edi]
  40918a:	or     DWORD PTR [eax],ecx
  40918c:	test   BYTE PTR [edi+0x605f2f8],dl
  409192:	ror    DWORD PTR [edi-0x217af8f1],1
  409198:	imul   ebp,DWORD PTR [edx+0x6e],0xffffff96
  40919c:	rcl    ah,1
  40919e:	fwait
  40919f:	add    DWORD PTR es:[edi-0x12c98380],eax
  4091a6:	in     eax,dx
  4091a7:	les    esi,FWORD PTR [esi+0x7b3a4fd7]
  4091ad:	mov    BYTE PTR [ebp+0x7afd78f6],ch
  4091b3:	scas   eax,DWORD PTR es:[edi]
  4091b4:	dec    edi
  4091b5:	pop    esp
  4091b6:	inc    ebp
  4091b7:	pop    esp
  4091b8:	mov    bl,0x10
  4091ba:	jle    0x40920c
  4091bc:	repz push ecx
  4091be:	adc    edi,edx
  4091c0:	sbb    BYTE PTR [edx-0x1],bh
  4091c3:	push   ecx
  4091c4:	inc    ecx
  4091c5:	loop   0x409151
  4091c7:	jae    0x409222
  4091c9:	mov    ds:0x8040ae78,al
  4091ce:	push   esi
  4091cf:	push   0xcf6f2376
  4091d4:	(bad)
  4091d7:	out    dx,eax
  4091d8:	xor    DWORD PTR [ebx],esi
  4091da:	pop    ecx
  4091db:	mov    esi,0x65d97d07
  4091e0:	pushf  
  4091e1:	add    eax,0x2db25c30
  4091e6:	shr    DWORD PTR [esi+ebx*8],cl
  4091e9:	push   ebx
  4091ea:	sbb    BYTE PTR [edx+0x6b],dl
  4091ed:	adc    ecx,DWORD PTR [ebx]
  4091ef:	xchg   edx,eax
  4091f0:	push   es
  4091f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091f2:	pshufw mm7,mm2,0xe4
  4091f6:	dec    ebp
  4091f7:	iret   
  4091f8:	psllq  mm1,QWORD PTR [edx+ecx*2]
  4091fc:	cmp    DWORD PTR [esi],eax
  4091fe:	inc    esi
  4091ff:	mov    esi,0x58ee1421
  409204:	add    bl,bl
  409206:	xchg   esp,eax
  409207:	xor    BYTE PTR [edx+0x72aaf47f],0x3d
  40920e:	ds mov dh,0x9a
  409211:	push   edx
  409212:	mov    edx,DWORD PTR [ebp+0x8]
  409215:	xor    eax,ecx
  409217:	lea    eax,[eax+edx*1+0x32729f]
  40921e:	mov    DWORD PTR [ebp+0x8],eax
  409221:	inc    DWORD PTR [ebp+0xc]
  409224:	jmp    0x408f6e
  409229:	mov    eax,DWORD PTR [ebp-0x10]
  40922c:	xor    eax,ecx
  40922e:	jmp    0x409357
  409233:	or     DWORD PTR ds:0xd93acb2e,ebx
  409239:	stc    
  40923a:	(bad)  [ecx+0x3c87a7c7]
  409240:	xor    edi,ebx
  409242:	jne    0x40922d
  409244:	and    edi,DWORD PTR [esi+0x7e]
  409247:	or     bh,BYTE PTR [edi+0x7e]
  40924a:	jle    0x409279
  40924c:	fcos   
  40924e:	pop    ss
  40924f:	push   edx
  409250:	stc    
  409251:	jg     0x40921f
  409253:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409254:	sbb    DWORD PTR [esi+ecx*4-0x2fb598c6],edx
  40925b:	mov    edx,DWORD PTR [edx-0x57]
  40925e:	mov    ds:0x72b2e1d9,al
  409263:	mov    ch,0x3c
  409265:	push   cs
  409266:	das    
  409267:	xchg   ecx,eax
  409268:	ja     0x40922e
  40926a:	iret   
  40926b:	mov    cl,0x32
  40926d:	jb     0x40922c
  40926f:	cli    
  409270:	data16 fsubr st,st(5)
  409273:	icebp  
  409274:	out    0x36,eax
  409276:	hlt    
  409277:	popa   
  409278:	jg     0x4092ba
  40927a:	pusha  
  40927b:	js     0x409203
  40927d:	or     bl,BYTE PTR [edx+0x5b71f7cc]
  409283:	inc    edx
  409284:	pop    esp
  409285:	out    0x27,eax
  409287:	test   al,0x3c
  409289:	inc    ebx
  40928a:	jo     0x409238
  40928c:	aad    0x81
  40928e:	jmp    0x9720b2c6
  409293:	leave  
  409294:	xchg   ebp,eax
  409295:	stc    
  409296:	retf   
  409297:	stos   DWORD PTR es:[edi],eax
  409298:	push   0xffffffd5
  40929a:	mov    es,WORD PTR [esi]
  40929c:	dec    edi
  40929d:	cld    
  40929e:	xchg   ecx,eax
  40929f:	mov    ebp,0x385a7822
  4092a4:	test   DWORD PTR [esi],eax
  4092a6:	xchg   ebp,eax
  4092a7:	test   BYTE PTR [ebp+0x79],bh
  4092aa:	push   edi
  4092ab:	sbb    BYTE PTR [edx+0x2efb9270],ah
  4092b1:	inc    esp
  4092b2:	jae    0x40924f
  4092b4:	clc    
  4092b5:	push   0x8b401f39
  4092ba:	mov    ss,WORD PTR [esi-0x2ca47911]
  4092c0:	pop    es
  4092c1:	lods   eax,DWORD PTR ss:[esi]
  4092c3:	sbb    eax,0x46f7933b
  4092c8:	mov    WORD PTR [eax-0x57],cs
  4092cb:	adc    edi,DWORD PTR [ebx]
  4092cd:	pop    esp
  4092ce:	dec    ebx
  4092cf:	aam    0x2c
  4092d1:	retf   0x48ae
  4092d4:	jo     0x40932b
  4092d6:	mov    ds:0x5ae07217,eax
  4092db:	int3   
  4092dc:	outs   dx,DWORD PTR ds:[esi]
  4092dd:	out    dx,eax
  4092de:	xchg   BYTE PTR [ebp+0x465aacd3],ah
  4092e4:	(bad)  [edx+0x46]
  4092e7:	in     al,dx
  4092e8:	ror    BYTE PTR [edx+eax*2+0x30],cl
  4092ec:	inc    ecx
  4092ed:	adc    ch,BYTE PTR [eax+ebx*1-0x3c]
  4092f1:	repz das 
  4092f3:	push   esp
  4092f4:	les    eax,FWORD PTR [ecx]
  4092f6:	ja     0x409303
  4092f8:	mov    edx,0xd79644d8
  4092fd:	xchg   DWORD PTR [edi],ecx
  4092ff:	pop    eax
  409300:	daa    
  409301:	int    0xb7
  409303:	cmp    al,BYTE PTR [eax]
  409305:	hlt    
  409306:	fistp  WORD PTR [esp+ebx*2]
  409309:	repnz loop 0x4092ad
  40930c:	ret    0x40af
  40930f:	pop    ebx
  409310:	and    al,BYTE PTR [eax]
  409312:	lods   al,BYTE PTR ds:[esi]
  409313:	rcr    BYTE PTR [edx],0xea
  409316:	xlat   BYTE PTR ds:[ebx]
  409317:	jmp    0x40932d
  409319:	pop    esi
  40931a:	or     BYTE PTR ds:0x9c4748ca,dh
  409320:	jae    0x4092f3
  409322:	std    
  409323:	in     eax,dx
  409324:	imul   edi,DWORD PTR [esi-0x6a37c248],0xdb9c712d
  40932e:	pop    ds
  40932f:	inc    edi
  409330:	imul   ebp,DWORD PTR [eax-0x7a],0xffffffb6
  409334:	jp     0x409369
  409336:	xor    DWORD PTR [eax],edi
  409338:	sub    BYTE PTR [esi],al
  40933a:	adc    BYTE PTR [esp+ecx*4-0x42],ah
  40933e:	push   eax
  40933f:	hlt    
  409340:	jmp    0x6b07a765
  409345:	int3   
  409346:	jecxz  0x4092de
  409348:	sub    DWORD PTR [ebp-0x5bf2457e],edx
  40934e:	sbb    DWORD PTR [esi-0x24],edi
  409351:	jnp    0x409385
  409353:	push   es
  409354:	sbb    esi,ecx
  409356:	enter  0x4d8b,0x10
  40935a:	add    eax,esi
  40935c:	mov    DWORD PTR [ecx],eax
  40935e:	pop    esi
  40935f:	leave  
  409360:	ret    0xc
  409363:	push   ebp
  409364:	mov    ebp,esp
  409366:	push   ecx
  409367:	not    eax
  409369:	mov    DWORD PTR [ebp-0x4],0xf89c853c
  409370:	mov    eax,DWORD PTR [ebp-0x4]
  409373:	mov    edx,DWORD PTR [ebp+0x10]
  409376:	add    DWORD PTR ds:0x4245c6,ebx
  40937c:	mov    ecx,0x7510859
  409381:	adc    DWORD PTR ds:0x41235c,0x4245c6
  40938b:	xor    eax,ecx
  40938d:	add    eax,0x32729f
  409392:	and    DWORD PTR ds:0x412368,0x417e41
  40939c:	mov    DWORD PTR [edx],eax
  40939e:	mov    eax,DWORD PTR [ebp+0xc]
  4093a1:	and    DWORD PTR ds:0x4245be,0x0
  4093ab:	jmp    0x4093bd
  4093b0:	mov    edx,DWORD PTR ds:0x4245be
  4093b6:	inc    edx
  4093b7:	mov    DWORD PTR ds:0x4245be,edx
  4093bd:	cmp    DWORD PTR ds:0x4245be,0x14
  4093c4:	jae    0x4093eb
  4093ca:	cmp    DWORD PTR ds:0x4245be,0x1c
  4093d1:	jne    0x4093e0
  4093d7:	push   DWORD PTR [ebp-0x20]
  4093da:	call   DWORD PTR ds:0x40d1e8
  4093e0:	jmp    0x4093b0
  4093e5:	sub    DWORD PTR ds:0x41237c,ebx
  4093eb:	xor    eax,ecx
  4093ed:	adc    edx,DWORD PTR ds:0x412360
  4093f3:	push   esi
  4093f4:	add    esi,edx
  4093f6:	mov    esi,DWORD PTR [ebp+0x10]
  4093f9:	mov    edx,0x32729f
  4093fe:	add    eax,edx
  409400:	xor    DWORD PTR ds:0x41abda,0x417e49
  40940a:	mov    DWORD PTR [esi+0x4],eax
  40940d:	mov    eax,ds:0x412398
  409412:	mov    esi,DWORD PTR ds:0x421896
  409418:	sub    esi,eax
  40941a:	xor    eax,DWORD PTR [eax+esi*1]
  40941d:	mov    eax,DWORD PTR [ebp+0x14]
  409420:	mov    esi,DWORD PTR [ebp+0x10]
  409423:	mov    DWORD PTR [esi+0x8],eax
  409426:	mov    DWORD PTR ds:0x412368,0x19
  409430:	cmp    DWORD PTR ds:0x412368,0x0
  409437:	je     0x409465
  40943d:	cmp    DWORD PTR ds:0x412368,0x21
  409444:	jne    0x409455
  40944a:	push   0x2b01
  40944f:	call   DWORD PTR ds:0x40d00c
  409455:	mov    eax,ds:0x412368
  40945a:	dec    eax
  40945b:	mov    ds:0x412368,eax
  409460:	jmp    0x409430
  409465:	mov    eax,DWORD PTR [ebp+0x18]
  409468:	mov    esi,DWORD PTR [ebp+0x10]
  40946b:	mov    DWORD PTR [esi+0xc],eax
  40946e:	mov    eax,DWORD PTR [ebp+0x1c]
  409471:	jmp    0x409522
  409476:	and    BYTE PTR [ebx],0x16
  409479:	xchg   esi,eax
  40947a:	xchg   ebp,eax
  40947b:	mov    ebx,0xa0863980
  409480:	xchg   ebp,eax
  409481:	xor    eax,0x808e420f
  409486:	in     eax,0x20
  409488:	jle    0x409508
  40948a:	cmp    BYTE PTR [esi+0x7e],0x7e
  40948e:	push   0xffffffda
  409490:	ja     0x40949b
  409492:	lea    esp,[edi]
  409494:	jmp    0x89c0559a
  409499:	out    0x4,al
  40949b:	pop    esp
  40949c:	push   0xc38346f1
  4094a1:	sub    BYTE PTR [eax-0x666af3f3],bh
  4094a7:	mov    al,ds:0xc04e4f43
  4094ac:	fstp   DWORD PTR [edi-0x16]
  4094af:	xchg   edi,eax
  4094b0:	stc    
  4094b1:	pushf  
  4094b2:	adc    DWORD PTR [edi+0x32],esp
  4094b5:	lods   al,BYTE PTR ds:[esi]
  4094b6:	pop    ds
  4094b7:	mov    bl,0x8b
  4094b9:	pop    edi
  4094ba:	push   ecx
  4094bb:	sub    ecx,esp
  4094bd:	pop    ebp
  4094be:	cmp    dh,BYTE PTR [ebp-0x1]
  4094c1:	nop
  4094c2:	test   BYTE PTR [edx+eax*1-0x16],ch
  4094c6:	(bad)  
  4094c8:	mov    esi,0x8d3bbbc7
  4094cd:	mov    esi,0x63593bf7
  4094d2:	xor    eax,0x27d7676e
  4094d7:	arpl   WORD PTR [ecx+0x2d],bp
  4094da:	push   ds
  4094db:	scas   eax,DWORD PTR es:[edi]
  4094dc:	pusha  
  4094dd:	and    bh,BYTE PTR [ebp+0x7cbed4d7]
  4094e3:	sbb    ebx,esp
  4094e5:	neg    DWORD PTR [eax+0x2da68bde]
  4094eb:	ins    BYTE PTR es:[edi],dx
  4094ec:	adc    esi,DWORD PTR [ebx+edx*8-0x48]
  4094f0:	cmp    eax,0x4006ed3f
  4094f5:	xor    edx,DWORD PTR ds:0x54dea0c2
  4094fb:	shr    BYTE PTR [eax+0x7a],cl
  4094fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094ff:	out    0xd1,al
  409501:	sub    eax,0x55768ff2
  409506:	clc    
  409507:	fwait
  409508:	mov    ch,BYTE PTR ds:0x25e60863
  40950e:	iret   
  40950f:	cmp    ebp,ebx
  409511:	sbb    al,0x11
  409513:	and    bh,BYTE PTR [esi]
  409515:	push   ds
  409516:	jecxz  0x4094a2
  409518:	mov    al,0x5f
  40951a:	jg     0x409556
  40951c:	sti    
  40951d:	mov    ds:0x412c8da7,eax
  409522:	mov    esi,DWORD PTR [ebp+0x10]
  409525:	mov    DWORD PTR [esi+0x10],eax
  409528:	mov    eax,eax
  40952a:	mov    eax,DWORD PTR [ebp+0x8]
  40952d:	jmp    0x4095de
  409532:	es bnd jno 0x409580
  409536:	mov    ecx,0xcb626549
  40953b:	les    ebp,FWORD PTR [esi]
  40953d:	xor    dl,BYTE PTR [ecx]
  40953f:	mov    al,0xf0
  409541:	cmp    ecx,DWORD PTR [ecx]
  409543:	and    DWORD PTR [esi+0x7e],edi
  409546:	cmp    BYTE PTR [esi+0x7e],0x7e
  40954a:	aaa    
  40954b:	fwait
  40954c:	popf   
  40954d:	xor    eax,0x8f177528
  409552:	push   edi
  409553:	jge    0x4094f5
  409555:	xlat   BYTE PTR ds:[ebx]
  409556:	push   ds
  409557:	add    eax,0xca08fdcb
  40955c:	and    al,0x89
  40955e:	jg     0x4095c5
  409560:	shrd   DWORD PTR [ecx-0x4702e902],ebp,0xe4
  409568:	pop    ebp
  409569:	push   ebp
  40956a:	test   al,0x3c
  40956c:	fild   WORD PTR [edi+esi*2]
  40956f:	adc    bl,ah
  409571:	pop    ds
  409572:	test   al,0x64
  409574:	pop    edi
  409575:	jbe    0x409535
  409577:	push   0xffffff87
  409579:	mov    al,ds:0x727d7b16
  40957e:	and    BYTE PTR [esi+eiz*1+0x1f9b92be],bl
  409585:	mov    bh,0x22
  409587:	es repnz pop eax
  40958a:	(bad)  
  40958b:	sti    
  40958c:	xchg   edi,eax
  40958d:	ja     0x409544
  40958f:	fcom   DWORD PTR [ebx+0x4]
  409592:	or     cl,cl
  409594:	dec    ecx
  409595:	mov    dl,0xda
  409597:	aad    0xba
  409599:	punpckhwd mm3,QWORD PTR [edx+0x50]
  40959d:	mov    edi,0x9801e678
  4095a2:	out    0x4,eax
  4095a4:	mov    bh,0x59
  4095a6:	sub    DWORD PTR gs:[eax-0x47],edi
  4095aa:	cmp    cl,BYTE PTR [esp+edx*1-0x6a]
  4095ae:	xchg   BYTE PTR [ecx-0x56c8bf7c],bh
  4095b4:	not    DWORD PTR [eax]
  4095b6:	das    
  4095b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095b8:	in     al,dx
  4095b9:	and    eax,0x8b6b2880
  4095be:	ja     0x4095d5
  4095c0:	xlat   BYTE PTR ds:[ebx]
  4095c1:	adc    DWORD PTR ds:0xf5c53b41,ecx
  4095c7:	adc    ah,BYTE PTR [ebx+0x4df98a52]
  4095cd:	mov    edi,0x9116ccc5
  4095d2:	ins    BYTE PTR es:[edi],dx
  4095d3:	daa    
  4095d4:	mov    ebx,0x14ab7078
  4095d9:	dec    esp
  4095da:	mov    ebx,0x33fee25f
  4095df:	rol    DWORD PTR [ebx],0xc2
  4095e2:	pop    esi
  4095e3:	leave  
  4095e4:	ret    0x18
  4095e7:	push   ebp
  4095e8:	mov    ebp,esp
  4095ea:	mov    eax,DWORD PTR [ebp+0xc]
  4095ed:	xor    edx,edx
  4095ef:	mov    ecx,0x7264fca0
  4095f4:	div    ecx
  4095f6:	mov    ecx,DWORD PTR [ebp+0x10]
  4095f9:	and    ecx,eax
  4095fb:	or     ecx,0x81161d8e
  409601:	mov    eax,ecx
  409603:	pop    ebp
  409604:	ret    0x18
  409607:	push   ebp
  409608:	mov    ebp,esp
  40960a:	jmp    0x40974f
  40960f:	test   eax,0x795cd0ce
  409614:	pusha  
  409615:	test   eax,0x818b5fdb
  40961a:	cmp    ebp,DWORD PTR [edi-0x27]
  40961d:	jle    0x4095c4
  40961f:	popf   
  409620:	and    DWORD PTR [esi+0x7e],edi
  409623:	push   ss
  409624:	jg     0x4096a4
  409626:	jle    0x4095f2
  409628:	pop    es
  409629:	ja     0x409660
  40962b:	inc    ebp
  40962c:	js     0x4095e3
  40962e:	mov    edx,0xc3726cb6
  409633:	mov    esp,0x48077ece
  409638:	test   al,0x86
  40963a:	mov    eax,0x30de04d6
  409640:	mov    al,0xcf
  409642:	leave  
  409643:	test   al,0xcc
  409645:	adc    edi,edx
  409647:	push   ecx
  409648:	cmc    
  409649:	xchg   edx,eax
  40964a:	retf   0x4fe1
  40964d:	xchg   ebp,eax
  40964e:	and    cl,BYTE PTR [ecx-0xc9f139e]
  409654:	mov    bl,0x51
  409656:	add    eax,0x9d313447
  40965b:	jecxz  0x40964f
  40965d:	mov    ch,0xe1
  40965f:	push   ds
  409660:	push   eax
  409661:	add    dl,bl
  409663:	in     al,dx
  409664:	sub    al,al
  409666:	std    
  409667:	cmp    al,0x4f
  409669:	outs   dx,DWORD PTR ds:[esi]
  40966a:	(bad)  
  40966c:	push   edi
  40966d:	test   DWORD PTR [ecx+0x61],0x7fc84c50
  409674:	add    bl,cl
  409676:	cmp    BYTE PTR [ebp+0x2c],bl
  409679:	lods   al,BYTE PTR ds:[esi]
  40967a:	jp     0x4096f5
  40967c:	retf   0xd54b
  40967f:	push   ebx
  409680:	push   0x6f078e69
  409685:	in     eax,0x66
  409687:	int    0x6e
  409689:	sub    al,0x89
  40968b:	dec    ebp
  40968c:	mov    esi,0x5fe4e2d4
  409691:	loopne 0x4096fc
  409693:	cli    
  409694:	mov    cl,0xd7
  409696:	mov    dh,0x3b
  409698:	popa   
  409699:	jb     0x409676
  40969b:	lods   eax,DWORD PTR ds:[esi]
  40969c:	or     ecx,esp
  40969e:	rcl    BYTE PTR [ebx],cl
  4096a0:	sahf   
  4096a1:	(bad)  
  4096a3:	nop
  4096a4:	push   DWORD PTR [ecx]
  4096a6:	fstp   DWORD PTR [edx+edx*8+0x10]
  4096aa:	pushf  
  4096ab:	xor    al,0xda
  4096ad:	(bad)  
  4096ae:	lods   eax,DWORD PTR ds:[esi]
  4096af:	ss call 0x7e6655b5
  4096b5:	inc    eax
  4096b6:	and    ecx,ebx
  4096b8:	xchg   ecx,eax
  4096b9:	call   FWORD PTR [edi]
  4096bb:	cmp    BYTE PTR [ebx-0x1b],0x4a
  4096bf:	je     0x409700
  4096c1:	inc    ebp
  4096c2:	lods   al,BYTE PTR ds:[esi]
  4096c3:	fwait
  4096c4:	jae    0x409661
  4096c6:	repz pop ds
  4096c8:	fs jecxz 0x409722
  4096cb:	aas    
  4096cc:	xchg   ecx,eax
  4096cd:	adc    dh,ch
  4096cf:	jl     0x4096a1
  4096d1:	cmc    
  4096d2:	cli    
  4096d3:	pop    ss
  4096d4:	xchg   edi,eax
  4096d5:	fiadd  DWORD PTR [ecx-0x421fb8d0]
  4096db:	(bad)  
  4096dc:	push   0xfffffff3
  4096de:	add    dh,ah
  4096e0:	cmp    DWORD PTR [edx],0xf8ad2eb7
  4096e6:	mov    bp,0x18ee
  4096ea:	push   eax
  4096eb:	or     ecx,DWORD PTR [esi]
  4096ed:	push   0xb
  4096ef:	inc    edx
  4096f0:	fsub   DWORD PTR [edi+ebx*1]
  4096f3:	dec    eax
  4096f4:	or     ebx,DWORD PTR [edi-0x4ab8381c]
  4096fa:	dec    edx
  4096fb:	xlat   BYTE PTR ds:[ebx]
  4096fc:	or     DWORD PTR [esi+0x7c],edx
  4096ff:	mov    BYTE PTR [ebp-0x4b],bl
  409702:	mov    bl,0x90
  409704:	and    eax,0x2c9c90da
  409709:	add    BYTE PTR cs:[edi],ch
  40970c:	add    BYTE PTR ds:0x4b16228c,0xdf
  409713:	add    dh,BYTE PTR [ecx+0x72]
  409716:	mov    ch,0x37
  409718:	cdq    
  409719:	adc    al,0x20
  40971b:	push   0x2
  40971d:	xlat   BYTE PTR ds:[ebx]
  40971e:	add    al,0x37
  409720:	pop    es
  409721:	imul   ecx,DWORD PTR [edx-0xf751b4],0xffffff88
  409728:	aaa    
  409729:	aaa    
  40972a:	aad    0x0
  40972c:	sub    eax,0x98791ef6
  409731:	mov    al,0x41
  409733:	xor    eax,0x64a197d7
  409738:	pop    edx
  409739:	xchg   edx,eax
  40973a:	sar    dh,1
  40973c:	ins    BYTE PTR es:[edi],dx
  40973d:	fdiv   QWORD PTR [edx]
  40973f:	xlat   BYTE PTR ds:[ebx]
  409740:	fild   QWORD PTR [edx+0x6b]
  409743:	inc    ebx
  409744:	lea    esp,[ebx]
  409746:	scas   al,BYTE PTR es:[edi]
  409747:	push   ds
  409748:	push   ebp
  409749:	inc    edi
  40974a:	mul    BYTE PTR [eax]
  40974c:	adc    ch,bh
  40974e:	dec    eax
  40974f:	push   ecx
  409750:	sbb    edx,eax
  409752:	mov    DWORD PTR [ebp-0x4],0xf89c853c
  409759:	or     DWORD PTR ds:0x4245ae,ebx
  40975f:	mov    eax,DWORD PTR [ebp-0x4]
  409762:	or     DWORD PTR ds:0x412370,0x19a1
  40976c:	mov    edx,DWORD PTR [ebp+0x10]
  40976f:	movzx  ecx,WORD PTR ds:0x41abd6
  409776:	adc    DWORD PTR ds:0x4245ca,ecx
  40977c:	mov    ecx,0x7510859
  409781:	sub    DWORD PTR ds:0x417e59,0x412370
  40978b:	xor    eax,ecx
  40978d:	adc    DWORD PTR ds:0x41235c,0x41abd2
  409797:	add    eax,0x32729f
  40979c:	mov    DWORD PTR ds:0x415115,0x3ef2
  4097a6:	mov    DWORD PTR [edx],eax
  4097a8:	xor    edx,DWORD PTR ds:0x4245ba
  4097ae:	jmp    0x4098f3
  4097b3:	push   0xffffffe9
  4097b5:	xlat   BYTE PTR ds:[ebx]
  4097b6:	call   0xe006:0xf97b9855
  4097bd:	jl     0x4097c2
  4097bf:	ds dec ebx
  4097c1:	fxch   st(1)
  4097c3:	mov    ch,0x26
  4097c5:	jle    0x409845
  4097c7:	push   ss
  4097c8:	jg     0x409848
  4097ca:	jle    0x409834
  4097cc:	outs   dx,DWORD PTR ds:[esi]
  4097cd:	mov    DWORD PTR [eax-0x52],ecx
  4097d0:	mov    al,0x16
  4097d2:	ficom  WORD PTR [edi+ebx*2]
  4097d5:	dec    edx
  4097d6:	and    ebx,0x65922192
  4097dc:	popa   
  4097dd:	lock (bad) 
  4097df:	mov    bl,0x95
  4097e1:	jmp    0x4097e4
  4097e3:	sub    DWORD PTR [edx-0x4bfdd7e5],ecx
  4097e9:	cdq    
  4097ea:	fstp   TBYTE PTR [edx+0x4375e479]
  4097f0:	sub    al,0x6f
  4097f2:	jae    0x40977c
  4097f4:	enter  0x192a,0xdc
  4097f8:	push   ebx
  4097f9:	dec    edx
  4097fa:	fldenv [edi]
  4097fc:	xchg   edx,eax
  4097fd:	jbe    0x409866
  4097ff:	fist   DWORD PTR [ecx+0x64de4493]
  409805:	aas    
  409806:	mov    ebx,0x3130799f
  40980b:	mov    edi,ebx
  40980d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40980e:	enter  0xe99b,0x13
  409812:	push   edi
  409813:	jns    0x40981c
  409815:	rcr    DWORD PTR [eax+0x49],1
  409818:	test   eax,0x8b6a1c98
  40981d:	xchg   ecx,eax
  40981e:	mov    BYTE PTR [eax-0x325a8129],al
  409824:	imul   ecx,esp,0xa0570c29
  40982a:	outs   dx,BYTE PTR ds:[esi]
  40982b:	fisttp WORD PTR [eax]
  40982d:	and    edx,DWORD PTR ds:0x858e3192
  409833:	mov    bl,0x81
  409835:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409836:	ficom  DWORD PTR [eax+0x6f4fa272]
  40983c:	pop    eax
  40983d:	or     BYTE PTR [eax],bh
  40983f:	and    ecx,DWORD PTR [edi]
  409841:	inc    ebp
  409842:	fdivr  QWORD PTR [edx-0x1d095877]
  409848:	push   0x20fb5f9a
  40984d:	daa    
  40984e:	or     DWORD PTR [ebx+ebx*1+0x2],ecx
  409852:	mov    cl,0x7d
  409854:	fild   QWORD PTR [ecx]
  409856:	mov    ebp,0xf1541717
  40985b:	fiadd  DWORD PTR [edi-0x1d]
  40985e:	ret    0x557b
  409861:	shl    BYTE PTR [ebx+0x52],cl
  409864:	pop    ebx
  409865:	mov    bh,0x1
  409867:	push   ds
  409868:	mov    BYTE PTR [edi+0x437fa013],bl
  40986e:	outs   dx,BYTE PTR ds:[esi]
  40986f:	sub    eax,0x421e7f72
  409874:	or     ecx,DWORD PTR [edi-0xa]
  409877:	push   es
  409878:	or     eax,0x495014d3
  40987d:	sahf   
  40987e:	fbstp  TBYTE PTR [edx+ecx*4-0xdef0aa7]
  409885:	das    
  409886:	mov    ch,0xdd
  409888:	xchg   edi,eax
  409889:	jae    0x40983f
  40988b:	loope  0x4098f8
  40988d:	mov    esp,0x67a799b4
  409892:	sub    eax,0xa87d6e43
  409897:	test   al,0xfd
  409899:	cdq    
  40989a:	adc    DWORD PTR [eax],eax
  40989c:	rcr    DWORD PTR [eax-0x4],cl
  40989f:	xchg   esi,eax
  4098a0:	xchg   edi,eax
  4098a1:	or     bl,BYTE PTR [ecx+0x6f]
  4098a4:	invd   
  4098a6:	pop    edi
  4098a7:	xchg   edi,eax
  4098a8:	jp     0x4098f8
  4098aa:	push   esi
  4098ab:	scas   al,BYTE PTR es:[edi]
  4098ac:	je     0x4098e4
  4098ae:	sbb    edi,ebp
  4098b0:	scas   eax,DWORD PTR es:[edi]
  4098b1:	cdq    
  4098b2:	test   al,0xe
  4098b4:	shl    BYTE PTR [esi-0x7bb477c7],1
  4098ba:	jecxz  0x40985f
  4098bc:	addr16 mov edi,0xc3f766f9
  4098c2:	mov    esi,0xbbf115cd
  4098c7:	clc    
  4098c8:	lahf   
  4098c9:	data16 or BYTE PTR [edi-0x3e567b34],cl
  4098d0:	push   ss
  4098d1:	mov    al,0x89
  4098d3:	repnz cmp bl,al
  4098d6:	aas    
  4098d7:	(bad)  
  4098d8:	push   0x1dce94a5
  4098dd:	outs   dx,BYTE PTR ds:[esi]
  4098de:	add    bl,BYTE PTR [ebx]
  4098e0:	iret   
  4098e1:	and    al,0x75
  4098e3:	pop    eax
  4098e4:	mov    WORD PTR [ebx],ss
  4098e6:	outs   dx,DWORD PTR ds:[esi]
  4098e7:	repnz sub esi,DWORD PTR [edx]
  4098ea:	xor    al,0xd6
  4098ec:	(bad)  [ebp-0x59063f0b]
  4098f2:	or     DWORD PTR [ebx+0x25811445],ecx
  4098f8:	and    eax,DWORD PTR fs:[ecx+0x0]
  4098fc:	add    BYTE PTR [eax],al
  4098fe:	add    BYTE PTR [eax],al
  409900:	mov    edx,DWORD PTR ds:0x412364
  409906:	inc    edx
  409907:	mov    DWORD PTR ds:0x412364,edx
  40990d:	cmp    DWORD PTR ds:0x412364,0x9
  409914:	jne    0x409930
  40991a:	push   DWORD PTR [ebp-0x14]
  40991d:	push   0x1e75
  409922:	push   0x8bb6
  409927:	push   DWORD PTR [ebp-0x18]
  40992a:	call   DWORD PTR ds:0x40d1f0
  409930:	cmp    DWORD PTR ds:0x412364,0x8
  409937:	jne    0x40994a
  40993d:	mov    edx,DWORD PTR ds:0x412364
  409943:	inc    edx
  409944:	mov    DWORD PTR ds:0x412364,edx
  40994a:	cmp    DWORD PTR ds:0x412364,0x1c
  409951:	jb     0x409900
  409957:	mov    edx,DWORD PTR [ebp+0x10]
  40995a:	mov    DWORD PTR [edx+0x4],eax
  40995d:	mov    eax,DWORD PTR [ebp+0x18]
  409960:	mov    edx,DWORD PTR [ebp+0x10]
  409963:	jmp    0x409aa8
  409968:	add    al,0x3c
  40996a:	cmp    bl,BYTE PTR [ebp-0x6]
  40996d:	jns    0x4099c8
  40996f:	gs push edi
  409971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409972:	or     eax,0xaaf4ca4c
  409977:	mov    ebp,DWORD PTR [ebp+0x27]
  40997a:	jle    0x4099fa
  40997c:	push   ss
  40997d:	jg     0x4099fd
  40997f:	jle    0x409966
  409981:	mov    ds:0x1c8a7b49,al
  409986:	adc    eax,0xcdc76888
  40998b:	mov    ecx,0x2aa9fef8
  409990:	push   0x1113cd
  409995:	xor    cl,BYTE PTR [ebp+0x6718d4d2]
  40999b:	les    edi,FWORD PTR [esi+eiz*4]
  40999e:	pop    es
  40999f:	test   BYTE PTR [eax+0x14289537],bl
  4099a5:	adc    al,0xa8
  4099a7:	cmp    BYTE PTR [ecx-0x18],ah
  4099aa:	jo     0x4099cb
  4099ac:	mov    al,0xe4
  4099ae:	repz leave 
  4099b0:	add    DWORD PTR [eax+0x36de711],edi
  4099b6:	dec    edx
  4099b7:	outs   dx,DWORD PTR ds:[esi]
  4099b8:	lods   eax,DWORD PTR ds:[esi]
  4099b9:	sahf   
  4099ba:	cli    
  4099bb:	scas   eax,DWORD PTR es:[edi]
  4099bc:	xor    ebp,DWORD PTR [esi]
  4099be:	mov    esi,0xd59a8c6e
  4099c3:	shl    esi,cl
  4099c5:	arpl   bp,sp
  4099c7:	stos   DWORD PTR es:[edi],eax
  4099c8:	or     esp,ecx
  4099ca:	mov    ecx,0xa0bb867b
  4099cf:	add    esp,DWORD PTR ds:0xc0744c7d
  4099d5:	jmp    0x409987
  4099d7:	xchg   ebp,eax
  4099d8:	mov    cs,WORD PTR [ecx-0x22]
  4099db:	add    BYTE PTR [edi+esi*2-0x5fd2c8aa],al
  4099e2:	shl    ch,0xf2
  4099e5:	ins    BYTE PTR es:[edi],dx
  4099e6:	mov    ss,WORD PTR [ebp-0x340e919c]
  4099ec:	(bad)  
  4099ed:	push   cs
  4099ee:	mov    ecx,ss
  4099f0:	or     DWORD PTR [esi-0x7c],0x29df0090
  4099f7:	test   BYTE PTR [edx],0x6
  4099fa:	div    ah
  4099fc:	push   0xffffffd7
  4099fe:	mov    edx,gs
  409a00:	jae    0x409a6e
  409a02:	pop    ecx
  409a03:	mov    BYTE PTR [edi*1+0x63e6db60],bl
  409a0a:	push   edi
  409a0b:	mov    ds:0xf8104a5e,al
  409a10:	(bad)  
  409a11:	lock loope 0x409a83
  409a14:	cmp    DWORD PTR [ebx+0x24a6f9cc],edi
  409a1a:	mov    dh,0x54
  409a1c:	aas    
  409a1d:	dec    edx
  409a1e:	call   0xa907:0x9c30beee
  409a25:	mov    ch,0x1a
  409a27:	test   eax,0xf5934eaa
  409a2c:	xor    BYTE PTR [esi-0x70e8d2],bl
  409a32:	mov    cl,0xa3
  409a34:	(bad)  
  409a35:	add    DWORD PTR [edi+0x34],ebp
  409a38:	imul   ebx,ebx,0xfffffffb
  409a3b:	fdivr  DWORD PTR [edi-0x5a]
  409a3e:	or     bh,BYTE PTR [ebx+edx*8-0x6aab7f29]
  409a45:	neg    DWORD PTR [ebp-0x59d1e455]
  409a4b:	mul    BYTE PTR [edx-0x252f2887]
  409a51:	pop    eax
  409a52:	pop    ss
  409a53:	imul   eax,ebx,0xffffffed
  409a56:	pop    ecx
  409a57:	les    edi,FWORD PTR [edx-0x1556084f]
  409a5d:	xor    al,0x98
  409a5f:	hlt    
  409a60:	mov    cl,0xfe
  409a62:	jmp    0xd4c4:0x29daa13f
  409a69:	mov    bl,0xf5
  409a6b:	out    0xd8,al
  409a6d:	jp     0x409aab
  409a6f:	popa   
  409a70:	xchg   esi,eax
  409a71:	push   0x6683b076
  409a76:	js     0x409ab2
  409a78:	xor    al,0x62
  409a7a:	fwait
  409a7b:	outs   dx,BYTE PTR ds:[esi]
  409a7c:	pop    ecx
  409a7d:	cmp    eax,0x80e5a735
  409a82:	cmp    eax,0x67da9db6
  409a87:	(bad)  
  409a88:	jl     0x409a33
  409a8a:	xchg   edi,eax
  409a8b:	pusha  
  409a8c:	hlt    
  409a8d:	sbb    BYTE PTR [ecx-0x32],ah
  409a90:	ds or  cl,al
  409a93:	inc    edx
  409a94:	aas    
  409a95:	fld    DWORD PTR ds:0x9fe6a3ea
  409a9b:	cwde   
  409a9c:	pusha  
  409a9d:	adc    DWORD PTR [ebp-0x2e],esp
  409aa0:	stos   DWORD PTR es:[edi],eax
  409aa1:	sub    cl,BYTE PTR ds:0x712bf17
  409aa7:	sub    eax,0x8b084289
  409aac:	inc    ebp
  409aad:	sbb    al,0x8b
  409aaf:	push   ebp
  409ab0:	adc    BYTE PTR [ecx+0x458b0c42],cl
  409ab6:	and    BYTE PTR [ebx+0x42891055],cl
  409abc:	adc    BYTE PTR [ebx+0x14458bc0],cl
  409ac2:	test   eax,eax
  409ac4:	mov    eax,DWORD PTR [ebp+0x8]
  409ac7:	jne    0x409ad0
  409acd:	mov    eax,DWORD PTR [ebp+0xc]
  409ad0:	xor    eax,ecx
  409ad2:	add    eax,0x32729f
  409ad7:	leave  
  409ad8:	ret    0x1c
  409adb:	push   ebp
  409adc:	mov    ebp,esp
  409ade:	sub    esp,0x74
  409ae1:	or     DWORD PTR ds:0x417e4d,0x412378
  409aeb:	push   ebx
  409aec:	inc    DWORD PTR ds:0x4245b6
  409af2:	push   esi
  409af3:	mov    esi,0x876987
  409af8:	sub    DWORD PTR ds:0x415111,0x412368
  409b02:	push   esi
  409b03:	push   0x40d6e4
  409b08:	xor    ebx,ebx
  409b0a:	adc    DWORD PTR ds:0x415115,0xb4e
  409b14:	push   0x40d70c
  409b19:	adc    DWORD PTR ds:0x412378,0x417e41
  409b23:	mov    DWORD PTR [ebp-0x4],ebx
  409b26:	xor    DWORD PTR ds:0x4245c2,0x95a
  409b30:	call   DWORD PTR ds:0x40d26c
  409b36:	cmp    eax,esi
  409b38:	je     0x409b45
  409b3e:	xor    eax,eax
  409b40:	jmp    0x40a5d1
  409b45:	push   edi
  409b46:	mov    edi,0x8e152d83
  409b4b:	mov    esi,0x60672eb0
  409b50:	push   0xa
  409b52:	adc    DWORD PTR ds:0x415119,0x51b8
  409b5c:	push   0xa
  409b5e:	and    DWORD PTR ds:0x412378,0x132f
  409b68:	push   0x1
  409b6a:	and    DWORD PTR ds:0x415101,0x415109
  409b74:	lea    eax,[ebp-0x4]
  409b77:	mov    DWORD PTR [ebp-0xc],eax
  409b7a:	and    DWORD PTR ds:0x4245c2,0x2ba
  409b84:	push   0x1
  409b86:	neg    DWORD PTR ds:0x417e41
  409b8c:	call   DWORD PTR ds:0x40d3cc
  409b92:	adc    DWORD PTR ds:0x412354,0x4245b2
  409b9c:	mov    DWORD PTR [ebp-0x8],eax
  409b9f:	mov    eax,DWORD PTR [ebp-0x8]
  409ba2:	test   eax,eax
  409ba4:	mov    DWORD PTR ds:0x412354,0x291c
  409bae:	je     0x40a327
  409bb4:	not    DWORD PTR ds:0x41abda
  409bba:	push   DWORD PTR [ebp-0x8]
  409bbd:	adc    DWORD PTR ds:0x4245c2,0x417e4d
  409bc7:	call   DWORD PTR ds:0x40d380
  409bcd:	add    DWORD PTR [ebp-0x4],0x2450a8e
  409bd4:	and    DWORD PTR ds:0x41abca,0x0
  409bde:	jmp    0x409bf0
  409be3:	mov    ecx,DWORD PTR ds:0x41abca
  409be9:	inc    ecx
  409bea:	mov    DWORD PTR ds:0x41abca,ecx
  409bf0:	cmp    DWORD PTR ds:0x41abca,0x16
  409bf7:	jae    0x409c20
  409bfd:	cmp    DWORD PTR ds:0x41abca,0x17
  409c04:	jne    0x409c1b
  409c0a:	push   DWORD PTR [ebp-0x18]
  409c0d:	push   DWORD PTR [ebp-0x20]
  409c10:	push   0x42f9
  409c15:	call   DWORD PTR ds:0x40d1f4
  409c1b:	jmp    0x409be3
  409c20:	xor    eax,eax
  409c22:	shl    DWORD PTR [ebp-0x4],1
  409c25:	and    DWORD PTR [ebp-0x4],edi
  409c28:	inc    edx
  409c29:	mov    ecx,DWORD PTR [ebp-0x4]
  409c2c:	imul   ecx,ecx,0x7f659e30
  409c32:	mov    DWORD PTR ds:0x412370,0x1a
  409c3c:	cmp    DWORD PTR ds:0x412370,0x0
  409c43:	je     0x409c7d
  409c49:	cmp    DWORD PTR ds:0x412370,0x26
  409c50:	jne    0x409c6b
  409c56:	push   0x66cd
  409c5b:	push   0x41abe2
  409c60:	push   0x5989
  409c65:	call   DWORD PTR ds:0x40d1f8
  409c6b:	mov    edx,DWORD PTR ds:0x412370
  409c71:	dec    edx
  409c72:	mov    DWORD PTR ds:0x412370,edx
  409c78:	jmp    0x409c3c
  409c7d:	mov    DWORD PTR [ebp-0x4],ecx
  409c80:	add    DWORD PTR ds:0x4245b2,ebx
  409c86:	or     DWORD PTR [ebp-0x4],esi
  409c89:	mov    ecx,DWORD PTR [ebp-0x4]
  409c8c:	mov    DWORD PTR ds:0x415119,0xfe3
  409c96:	mov    edx,DWORD PTR [ebp-0xc]
  409c99:	cmp    ecx,DWORD PTR [edx]
  409c9b:	mov    DWORD PTR ds:0x412364,0x44d1
  409ca5:	jne    0x40a327
  409cab:	mov    DWORD PTR ds:0x41510d,0x22b0
  409cb5:	inc    eax
  409cb6:	mov    DWORD PTR ds:0x41abda,0x2c7f
  409cc0:	cmp    eax,0x4
  409cc3:	jb     0x409c22
  409cc9:	and    DWORD PTR ds:0x415105,0x41abe2
  409cd3:	push   0x40d738
  409cd8:	sub    DWORD PTR ds:0x412374,0x2332
  409ce2:	call   DWORD PTR ds:0x40d3c4
  409ce8:	mov    DWORD PTR ds:0x415101,0x11
  409cf2:	cmp    DWORD PTR ds:0x415101,0x0
  409cf9:	je     0x409d41
  409cff:	cmp    DWORD PTR ds:0x415101,0x8
  409d06:	jne    0x409d15
  409d0c:	push   DWORD PTR [ebp-0x20]
  409d0f:	call   DWORD PTR ds:0x40d2a4
  409d15:	cmp    DWORD PTR ds:0x415101,0x9
  409d1c:	jne    0x409d2f
  409d22:	mov    ecx,DWORD PTR ds:0x415101
  409d28:	dec    ecx
  409d29:	mov    DWORD PTR ds:0x415101,ecx
  409d2f:	mov    ecx,DWORD PTR ds:0x415101
  409d35:	dec    ecx
  409d36:	mov    DWORD PTR ds:0x415101,ecx
  409d3c:	jmp    0x409cf2
  409d41:	xor    eax,eax
  409d43:	shl    DWORD PTR [ebp-0x4],1
  409d46:	mov    DWORD PTR ds:0x41abd6,0x12
  409d50:	cmp    DWORD PTR ds:0x41abd6,0x0
  409d57:	je     0x409da1
  409d5d:	cmp    DWORD PTR ds:0x41abd6,0x3
  409d64:	jne    0x409d75
  409d6a:	push   0x41ad52
  409d6f:	call   DWORD PTR ds:0x40d1fc
  409d75:	cmp    DWORD PTR ds:0x41abd6,0x4
  409d7c:	jne    0x409d8f
  409d82:	mov    edx,DWORD PTR ds:0x41abd6
  409d88:	dec    edx
  409d89:	mov    DWORD PTR ds:0x41abd6,edx
  409d8f:	mov    edx,DWORD PTR ds:0x41abd6
  409d95:	dec    edx
  409d96:	mov    DWORD PTR ds:0x41abd6,edx
  409d9c:	jmp    0x409d50
  409da1:	and    DWORD PTR [ebp-0x4],edi
  409da4:	and    ecx,ecx
  409da6:	mov    ecx,DWORD PTR [ebp-0x4]
  409da9:	inc    edx
  409daa:	imul   ecx,ecx,0x7f659e30
  409db0:	mov    DWORD PTR [ebp-0x4],ecx
  409db3:	mov    edx,DWORD PTR ds:0x412364
  409db9:	xor    edx,DWORD PTR ds:0x4245ae
  409dbf:	mov    DWORD PTR ds:0x412364,edx
  409dc5:	or     DWORD PTR [ebp-0x4],esi
  409dc8:	mov    DWORD PTR ds:0x415105,0x4568
  409dd2:	mov    ecx,DWORD PTR [ebp-0x4]
  409dd5:	mov    edx,DWORD PTR ds:0x415115
  409ddb:	mov    edx,DWORD PTR [ebp-0xc]
  409dde:	cmp    ecx,DWORD PTR [edx]
  409de0:	jne    0x40a327
  409de6:	inc    eax
  409de7:	mov    DWORD PTR ds:0x4245ae,0x6f03
  409df1:	cmp    eax,0x4
  409df4:	jb     0x409d43
  409dfa:	xor    eax,eax
  409dfc:	sbb    DWORD PTR ds:0x412360,edx
  409e02:	shl    DWORD PTR [ebp-0x4],1
  409e05:	and    DWORD PTR [ebp-0x4],edi
  409e08:	mov    ecx,DWORD PTR [ebp-0x4]
  409e0b:	and    DWORD PTR ds:0x417e4d,0x0
  409e15:	mov    edx,DWORD PTR ds:0x417e4d
  409e1b:	inc    edx
  409e1c:	mov    DWORD PTR ds:0x417e4d,edx
  409e22:	cmp    DWORD PTR ds:0x417e4d,0xa
  409e29:	jne    0x409e4c
  409e2f:	push   DWORD PTR [ebp-0x20]
  409e32:	push   0x8411
  409e37:	push   0x41ad5b
  409e3c:	push   0x41adfd
  409e41:	push   0x1dc1
  409e46:	call   DWORD PTR ds:0x40d010
  409e4c:	cmp    DWORD PTR ds:0x417e4d,0x9
  409e53:	jne    0x409e68
  409e59:	xor    edx,edx
  409e5b:	or     edx,DWORD PTR ds:0x417e4d
  409e61:	inc    edx
  409e62:	mov    DWORD PTR ds:0x417e4d,edx
  409e68:	cmp    DWORD PTR ds:0x417e4d,0x19
  409e6f:	jb     0x409e15
  409e75:	mov    edx,DWORD PTR ds:0x417eaa
  409e7b:	mov    edx,DWORD PTR [edx]
  409e7d:	xor    DWORD PTR ds:0x41abda,edx
  409e83:	imul   ecx,ecx,0x7f659e30
  409e89:	mov    edx,DWORD PTR ds:0x412374
  409e8f:	sub    DWORD PTR ds:0x415111,edx
  409e95:	mov    DWORD PTR [ebp-0x4],ecx
  409e98:	and    edx,edx
  409e9a:	or     DWORD PTR [ebp-0x4],esi
  409e9d:	mov    ecx,DWORD PTR [ebp-0x4]
  409ea0:	mov    edx,DWORD PTR [ebp-0xc]
  409ea3:	mov    DWORD PTR ds:0x4245ba,0xa9e
  409ead:	cmp    ecx,DWORD PTR [edx]
  409eaf:	jne    0x40a327
  409eb5:	mov    DWORD PTR ds:0x4150fd,0x72ef
  409ebf:	inc    eax
  409ec0:	cmp    eax,0x4
  409ec3:	mov    DWORD PTR ds:0x412370,0x6303
  409ecd:	jb     0x409dfc
  409ed3:	xor    eax,eax
  409ed5:	and    DWORD PTR ds:0x4150fd,0x0
  409edf:	xor    ecx,ecx
  409ee1:	add    ecx,DWORD PTR ds:0x4150fd
  409ee7:	inc    ecx
  409ee8:	mov    DWORD PTR ds:0x4150fd,ecx
  409eee:	cmp    DWORD PTR ds:0x4150fd,0x28
  409ef5:	jne    0x409f04
  409efb:	push   DWORD PTR [ebp-0x24]
  409efe:	call   DWORD PTR ds:0x40d014
  409f04:	cmp    DWORD PTR ds:0x4150fd,0x18
  409f0b:	jb     0x409edf
  409f11:	add    DWORD PTR ds:0x417e59,0x412378
  409f1b:	shl    DWORD PTR [ebp-0x4],1
  409f1e:	and    DWORD PTR [ebp-0x4],edi
  409f21:	and    DWORD PTR ds:0x412360,0x0
  409f2b:	jmp    0x409f3f
  409f30:	xor    edx,edx
  409f32:	or     edx,DWORD PTR ds:0x412360
  409f38:	inc    edx
  409f39:	mov    DWORD PTR ds:0x412360,edx
  409f3f:	cmp    DWORD PTR ds:0x412360,0x11
  409f46:	jae    0x409f85
  409f4c:	cmp    DWORD PTR ds:0x412360,0x1a
  409f53:	jne    0x409f80
  409f59:	push   0x415119
  409f5e:	push   0x8b4a
  409f63:	push   DWORD PTR [ebp-0x24]
  409f66:	push   0x89fe
  409f6b:	push   0x7f12
  409f70:	push   0x7c49
  409f75:	push   0x1205
  409f7a:	call   DWORD PTR ds:0x40d200
  409f80:	jmp    0x409f30
  409f85:	mov    ecx,DWORD PTR [ebp-0x4]
  409f88:	imul   ecx,ecx,0x7f659e30
  409f8e:	mov    DWORD PTR [ebp-0x4],ecx
  409f91:	or     DWORD PTR [ebp-0x4],esi
  409f94:	mov    ecx,DWORD PTR [ebp-0x4]
  409f97:	mov    edx,DWORD PTR [ebp-0xc]
  409f9a:	mov    DWORD PTR ds:0x4245b6,0x2f25
  409fa4:	cmp    ecx,DWORD PTR [edx]
  409fa6:	mov    DWORD PTR ds:0x412358,0x1252
  409fb0:	jne    0x40a327
  409fb6:	inc    eax
  409fb7:	cmp    eax,0x4
  409fba:	mov    DWORD PTR ds:0x4245ca,0x48e
  409fc4:	jb     0x409ed5
  409fca:	mov    DWORD PTR ds:0x417e55,0x10
  409fd4:	cmp    DWORD PTR ds:0x417e55,0x0
  409fdb:	je     0x40a032
  409fe1:	cmp    DWORD PTR ds:0x417e55,0x19
  409fe8:	jne    0x40a00e
  409fee:	push   DWORD PTR [ebp-0x24]
  409ff1:	push   0x4245ca
  409ff6:	push   DWORD PTR [ebp-0x28]
  409ff9:	push   0x41ada3
  409ffe:	push   0x6e83
  40a003:	push   0x54b6
  40a008:	call   DWORD PTR ds:0x40d204
  40a00e:	mov    edx,DWORD PTR ds:0x417e55
  40a014:	dec    edx
  40a015:	mov    DWORD PTR ds:0x417e55,edx
  40a01b:	jmp    0x409fd4
  40a020:	mov    ecx,DWORD PTR ds:0x40eecc
  40a026:	mov    edx,DWORD PTR ds:0x417eba
  40a02c:	sub    ecx,edx
  40a02e:	imul   ecx,DWORD PTR [ecx+edx*1]
  40a032:	xor    eax,eax
  40a034:	shl    DWORD PTR [ebp-0x4],1
  40a037:	and    DWORD PTR [ebp-0x4],edi
  40a03a:	or     ecx,ecx
  40a03c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a03f:	xor    edx,DWORD PTR ds:0x417e51
  40a045:	imul   ecx,ecx,0x7f659e30
  40a04b:	mov    DWORD PTR ds:0x417e49,0x1d
  40a055:	cmp    DWORD PTR ds:0x417e49,0x0
  40a05c:	je     0x40a0b0
  40a062:	cmp    DWORD PTR ds:0x417e49,0x7
  40a069:	jne    0x40a07a
  40a06f:	push   0x45c2
  40a074:	call   DWORD PTR ds:0x40d208
  40a07a:	cmp    DWORD PTR ds:0x417e49,0x8
  40a081:	jne    0x40a094
  40a087:	mov    edx,DWORD PTR ds:0x417e49
  40a08d:	dec    edx
  40a08e:	mov    DWORD PTR ds:0x417e49,edx
  40a094:	mov    edx,DWORD PTR ds:0x417e49
  40a09a:	dec    edx
  40a09b:	mov    DWORD PTR ds:0x417e49,edx
  40a0a1:	jmp    0x40a055
  40a0a6:	adc    DWORD PTR ds:0x417e45,0x449b
  40a0b0:	mov    DWORD PTR [ebp-0x4],ecx
  40a0b3:	or     ecx,edx
  40a0b5:	or     DWORD PTR [ebp-0x4],esi
  40a0b8:	mov    edx,0x1393
  40a0bd:	mov    ecx,DWORD PTR [ebp-0x4]
  40a0c0:	mov    edx,DWORD PTR [ebp-0xc]
  40a0c3:	mov    DWORD PTR ds:0x41abda,0x516c
  40a0cd:	cmp    ecx,DWORD PTR [edx]
  40a0cf:	jne    0x40a327
  40a0d5:	mov    DWORD PTR ds:0x415111,0x4e99
  40a0df:	inc    eax
  40a0e0:	mov    DWORD PTR ds:0x4245c2,0x1c73
  40a0ea:	cmp    eax,0x4
  40a0ed:	jb     0x40a034
  40a0f3:	xor    eax,eax
  40a0f5:	or     DWORD PTR ds:0x41236c,0x38d4
  40a0ff:	shl    DWORD PTR [ebp-0x4],1
  40a102:	and    DWORD PTR [ebp-0x4],edi
  40a105:	and    ecx,DWORD PTR ds:0x417e59
  40a10b:	mov    ecx,DWORD PTR [ebp-0x4]
  40a10e:	adc    DWORD PTR ds:0x4245be,0x729e
  40a118:	imul   ecx,ecx,0x7f659e30
  40a11e:	adc    edx,0x9b0
  40a124:	mov    DWORD PTR [ebp-0x4],ecx
  40a127:	xor    edx,edx
  40a129:	or     edx,DWORD PTR ds:0x417e55
  40a12f:	xor    DWORD PTR ds:0x4245c6,edx
  40a135:	or     DWORD PTR [ebp-0x4],esi
  40a138:	mov    ecx,DWORD PTR [ebp-0x4]
  40a13b:	mov    edx,DWORD PTR [ebp-0xc]
  40a13e:	mov    DWORD PTR ds:0x4245b6,0xce5
  40a148:	cmp    ecx,DWORD PTR [edx]
  40a14a:	jne    0x40a327
  40a150:	mov    DWORD PTR ds:0x41abd6,0x18a3
  40a15a:	inc    eax
  40a15b:	mov    DWORD PTR ds:0x4245ae,0x5769
  40a165:	cmp    eax,0x4
  40a168:	mov    DWORD PTR ds:0x412358,0x5fb5
  40a172:	jb     0x40a0f5
  40a178:	sbb    ecx,DWORD PTR ds:0x417e59
  40a17e:	xor    eax,eax
  40a180:	mov    DWORD PTR ds:0x412360,0x14
  40a18a:	cmp    DWORD PTR ds:0x412360,0x0
  40a191:	je     0x40a1c1
  40a197:	cmp    DWORD PTR ds:0x412360,0x19
  40a19e:	jne    0x40a1af
  40a1a4:	push   0x2f20
  40a1a9:	call   DWORD PTR ds:0x40d018
  40a1af:	mov    edx,DWORD PTR ds:0x412360
  40a1b5:	dec    edx
  40a1b6:	mov    DWORD PTR ds:0x412360,edx
  40a1bc:	jmp    0x40a18a
  40a1c1:	shl    DWORD PTR [ebp-0x4],1
  40a1c4:	mov    DWORD PTR ds:0x41abe2,0x14
  40a1ce:	cmp    DWORD PTR ds:0x41abe2,0x0
  40a1d5:	je     0x40a233
  40a1db:	cmp    DWORD PTR ds:0x41abe2,0x5
  40a1e2:	jne    0x40a203
  40a1e8:	push   0x1b4e
  40a1ed:	push   DWORD PTR [ebp-0x1c]
  40a1f0:	push   0x1704
  40a1f5:	push   0x41abf4
  40a1fa:	push   DWORD PTR [ebp-0x10]
  40a1fd:	call   DWORD PTR ds:0x40d01c
  40a203:	cmp    DWORD PTR ds:0x41abe2,0x6
  40a20a:	jne    0x40a21d
  40a210:	mov    edx,DWORD PTR ds:0x41abe2
  40a216:	dec    edx
  40a217:	mov    DWORD PTR ds:0x41abe2,edx
  40a21d:	xor    edx,edx
  40a21f:	add    edx,DWORD PTR ds:0x41abe2
  40a225:	dec    edx
  40a226:	mov    DWORD PTR ds:0x41abe2,edx
  40a22c:	jmp    0x40a1ce
  40a231:	neg    edx
  40a233:	and    DWORD PTR [ebp-0x4],edi
  40a236:	mov    ecx,DWORD PTR [ebp-0x4]
  40a239:	neg    edx
  40a23b:	imul   ecx,ecx,0x7f659e30
  40a241:	xor    edx,DWORD PTR ds:0x41abd2
  40a247:	mov    DWORD PTR [ebp-0x4],ecx
  40a24a:	adc    DWORD PTR ds:0x4245b6,ebx
  40a250:	or     DWORD PTR [ebp-0x4],esi
  40a253:	mov    edx,0x77ca
  40a258:	mov    ecx,DWORD PTR [ebp-0x4]
  40a25b:	mov    edx,DWORD PTR [ebp-0xc]
  40a25e:	mov    DWORD PTR ds:0x41510d,0x1bcb
  40a268:	cmp    ecx,DWORD PTR [edx]
  40a26a:	mov    DWORD PTR ds:0x412354,0x3513
  40a274:	jne    0x40a327
  40a27a:	inc    eax
  40a27b:	cmp    eax,0x4
  40a27e:	mov    DWORD PTR ds:0x417e49,0x110e
  40a288:	jb     0x40a180
  40a28e:	xor    eax,eax
  40a290:	shl    DWORD PTR [ebp-0x4],1
  40a293:	and    DWORD PTR [ebp-0x4],edi
  40a296:	mov    ecx,DWORD PTR [ebp-0x4]
  40a299:	imul   ecx,ecx,0x7f659e30
  40a29f:	mov    DWORD PTR [ebp-0x4],ecx
  40a2a2:	or     DWORD PTR [ebp-0x4],esi
  40a2a5:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2a8:	mov    edx,DWORD PTR [ebp-0xc]
  40a2ab:	cmp    ecx,DWORD PTR [edx]
  40a2ad:	jne    0x40a327
  40a2b3:	inc    eax
  40a2b4:	cmp    eax,0x4
  40a2b7:	jb     0x40a290
  40a2bd:	inc    ebx
  40a2be:	cmp    ebx,0x10
  40a2c1:	jb     0x409b50
  40a2c7:	mov    ebx,0xf89c8538
  40a2cc:	mov    DWORD PTR [ebp-0xc],ebx
  40a2cf:	mov    DWORD PTR [ebp-0x8],0xf89c853b
  40a2d6:	lea    eax,[ebp-0x1c]
  40a2d9:	mov    DWORD PTR [ebp-0x18],eax
  40a2dc:	lea    eax,[ebp-0x20]
  40a2df:	mov    DWORD PTR [ebp-0x10],eax
  40a2e2:	mov    eax,ds:0x40d5d0
  40a2e7:	mov    eax,DWORD PTR [eax+0x1c8]
  40a2ed:	mov    eax,DWORD PTR [eax]
  40a2ef:	mov    ecx,DWORD PTR [ebp-0x10]
  40a2f2:	mov    esi,0x7510859
  40a2f7:	xor    eax,esi
  40a2f9:	mov    edi,0x32729f
  40a2fe:	add    eax,edi
  40a300:	mov    DWORD PTR [ecx],eax
  40a302:	mov    eax,ds:0x40d854
  40a307:	cmp    eax,0x23d14057
  40a30c:	mov    eax,DWORD PTR [ebp-0x8]
  40a30f:	je     0x40a32e
  40a315:	mov    ecx,DWORD PTR [ebp-0xc]
  40a318:	xor    eax,esi
  40a31a:	add    eax,edi
  40a31c:	imul   eax,ecx
  40a31f:	mov    DWORD PTR [ebp-0xc],eax
  40a322:	jmp    0x40a371
  40a327:	xor    eax,eax
  40a329:	jmp    0x40a5d0
  40a32e:	xor    eax,esi
  40a330:	add    eax,edi
  40a332:	mov    ds:0x40d6e0,eax
  40a337:	mov    eax,DWORD PTR [ebp-0xc]
  40a33a:	xor    eax,esi
  40a33c:	add    eax,edi
  40a33e:	mov    ds:0x40d854,eax
  40a343:	mov    eax,DWORD PTR [ebp-0x8]
  40a346:	mov    ecx,DWORD PTR ds:0x40d6e0
  40a34c:	xor    eax,esi
  40a34e:	add    eax,edi
  40a350:	cmp    ecx,eax
  40a352:	jne    0x40a371
  40a358:	push   0x40d72c
  40a35d:	call   DWORD PTR ds:0x40d1ec
  40a363:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a369:	mov    ecx,DWORD PTR [ecx+0x198]
  40a36f:	mov    DWORD PTR [ecx],eax
  40a371:	mov    eax,ds:0x40d5d0
  40a376:	mov    eax,DWORD PTR [eax+0x18c]
  40a37c:	mov    eax,DWORD PTR [eax]
  40a37e:	mov    DWORD PTR [ebp-0x24],eax
  40a381:	mov    eax,0xf89c853c
  40a386:	mov    DWORD PTR [ebp-0x28],eax
  40a389:	mov    DWORD PTR [ebp-0x28],eax
  40a38c:	mov    DWORD PTR [ebp-0x28],eax
  40a38f:	mov    DWORD PTR [ebp-0x10],ebx
  40a392:	mov    DWORD PTR [ebp-0x28],eax
  40a395:	mov    DWORD PTR [ebp-0x28],0xf89c8530
  40a39c:	mov    ebx,DWORD PTR [ebp-0xc]
  40a39f:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3a2:	mov    edx,DWORD PTR [ebp-0x8]
  40a3a5:	xor    edx,esi
  40a3a7:	xor    ecx,esi
  40a3a9:	add    ecx,edx
  40a3ab:	mov    edx,DWORD PTR [ebp-0x8]
  40a3ae:	xor    ebx,esi
  40a3b0:	xor    edx,esi
  40a3b2:	add    ebx,edi
  40a3b4:	lea    ecx,[ecx+edx*1+0x9757dd]
  40a3bb:	cmp    ebx,ecx
  40a3bd:	ja     0x40a41e
  40a3c3:	mov    eax,DWORD PTR [ebp-0x8]
  40a3c6:	xor    eax,esi
  40a3c8:	lea    eax,[eax+ebx*1+0x32729f]
  40a3cf:	push   eax
  40a3d0:	mov    eax,DWORD PTR [ebp-0x10]
  40a3d3:	xor    eax,esi
  40a3d5:	lea    eax,[ebp+eax*1+0x3272a7]
  40a3dc:	push   eax
  40a3dd:	mov    eax,ds:0x40d5d0
  40a3e2:	push   DWORD PTR [eax+0x1bc]
  40a3e8:	call   0x40742d
  40a3ed:	mov    eax,DWORD PTR [ebp-0x8]
  40a3f0:	xor    eax,esi
  40a3f2:	lea    ebx,[ebx+eax*1+0x32729f]
  40a3f9:	mov    eax,DWORD PTR [ebp-0x8]
  40a3fc:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3ff:	xor    ecx,esi
  40a401:	xor    eax,esi
  40a403:	add    eax,ecx
  40a405:	mov    ecx,DWORD PTR [ebp-0x8]
  40a408:	xor    ecx,esi
  40a40a:	lea    eax,[eax+ecx*1+0x9757dd]
  40a411:	cmp    ebx,eax
  40a413:	jbe    0x40a3c3
  40a419:	mov    eax,0xf89c853c
  40a41e:	mov    ecx,DWORD PTR [ebp+0xc]
  40a421:	mov    DWORD PTR ds:0x40d454,ecx
  40a427:	mov    ecx,DWORD PTR [ebp+0x10]
  40a42a:	mov    DWORD PTR ds:0x40d6a8,ecx
  40a430:	mov    ecx,DWORD PTR ds:0x40d454
  40a436:	mov    edx,DWORD PTR [ebp-0x18]
  40a439:	sub    ecx,edi
  40a43b:	xor    ecx,esi
  40a43d:	mov    DWORD PTR [edx],ecx
  40a43f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a442:	cmp    ecx,0xf89c853b
  40a448:	je     0x40a4a5
  40a44e:	mov    ecx,DWORD PTR [ebp-0xc]
  40a451:	mov    edx,DWORD PTR [ebp-0x20]
  40a454:	xor    ecx,esi
  40a456:	add    ecx,edi
  40a458:	cmp    ecx,edx
  40a45a:	je     0x40a4a5
  40a460:	mov    eax,ds:0x40d5d0
  40a465:	mov    eax,DWORD PTR [eax+0x194]
  40a46b:	mov    ecx,DWORD PTR [eax]
  40a46d:	mov    eax,DWORD PTR [ecx+0x3c]
  40a470:	push   DWORD PTR ds:0x40d6a8
  40a476:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40a47a:	push   DWORD PTR ds:0x40d454
  40a480:	add    eax,ecx
  40a482:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a488:	mov    ecx,DWORD PTR [ecx+0x194]
  40a48e:	push   DWORD PTR [ecx]
  40a490:	call   eax
  40a492:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a498:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40a49e:	mov    DWORD PTR [ecx],eax
  40a4a0:	jmp    0x40a5b5
  40a4a5:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4a8:	mov    edx,DWORD PTR [ebp-0x24]
  40a4ab:	xor    ecx,esi
  40a4ad:	add    ecx,edi
  40a4af:	cmp    ecx,edx
  40a4b1:	jne    0x40a598
  40a4b7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4ba:	xor    ecx,esi
  40a4bc:	add    ecx,edi
  40a4be:	mov    DWORD PTR ds:0x40d654,ecx
  40a4c4:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4c7:	xor    ecx,esi
  40a4c9:	add    ecx,edi
  40a4cb:	mov    DWORD PTR ds:0x40d64c,ecx
  40a4d1:	mov    ecx,DWORD PTR [ebp-0x8]
  40a4d4:	mov    DWORD PTR [ebp-0x10],ecx
  40a4d7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4da:	mov    DWORD PTR [ebp+0xc],ecx
  40a4dd:	mov    ecx,DWORD PTR [ebp+0xc]
  40a4e0:	xor    ecx,esi
  40a4e2:	add    ecx,edi
  40a4e4:	mov    DWORD PTR [ebp+0xc],ecx
  40a4e7:	mov    ecx,DWORD PTR ds:0x40d450
  40a4ed:	mov    ecx,DWORD PTR [ecx]
  40a4ef:	mov    DWORD PTR [ebp+0xc],ecx
  40a4f2:	mov    ecx,DWORD PTR ds:0x40d658
  40a4f8:	mov    ecx,DWORD PTR [ecx]
  40a4fa:	mov    DWORD PTR [ebp-0x18],ecx
  40a4fd:	mov    DWORD PTR [ebp+0x10],0xf89c8738
  40a504:	mov    ecx,DWORD PTR [ebp+0x10]
  40a507:	xor    ecx,esi
  40a509:	add    ecx,edi
  40a50b:	mov    DWORD PTR [ebp+0x10],ecx
  40a50e:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a514:	mov    DWORD PTR [ebp+0x10],ecx
  40a517:	mov    ecx,DWORD PTR [ebp+0xc]
  40a51a:	mov    DWORD PTR [ebp+0xc],ecx
  40a51d:	mov    ecx,DWORD PTR [ebp+0xc]
  40a520:	push   0x4
  40a522:	pop    edx
  40a523:	sub    edx,ecx
  40a525:	add    edx,DWORD PTR [ebp-0x18]
  40a528:	mov    DWORD PTR [ebp-0x28],0xf89c85f8
  40a52f:	mov    DWORD PTR [ebp+0x10],edx
  40a532:	mov    DWORD PTR [ebp-0x74],eax
  40a535:	mov    eax,DWORD PTR [ebp+0xc]
  40a538:	mov    DWORD PTR [ebp-0x70],eax
  40a53b:	mov    eax,DWORD PTR [ebp+0x10]
  40a53e:	mov    DWORD PTR [ebp-0x6c],eax
  40a541:	mov    eax,DWORD PTR [ebp-0x28]
  40a544:	xor    eax,esi
  40a546:	add    eax,edi
  40a548:	mov    DWORD PTR [ebp-0x68],eax
  40a54b:	lea    eax,[ebp-0x30]
  40a54e:	mov    DWORD PTR [ebp-0x64],eax
  40a551:	mov    eax,DWORD PTR [ebp-0x74]
  40a554:	xor    eax,esi
  40a556:	add    eax,edi
  40a558:	mov    DWORD PTR [ebp-0x74],eax
  40a55b:	lea    eax,[ebp-0x74]
  40a55e:	push   eax
  40a55f:	mov    eax,DWORD PTR [ebp-0x10]
  40a562:	xor    eax,esi
  40a564:	add    eax,edi
  40a566:	push   eax
  40a567:	mov    eax,ds:0x40d5f0
  40a56c:	push   0x40d546
  40a571:	push   DWORD PTR [eax]
  40a573:	call   0x40ae4d
  40a578:	xor    esi,esi
  40a57a:	mov    eax,DWORD PTR [ebp+0x10]
  40a57d:	sub    eax,esi
  40a57f:	push   eax
  40a580:	mov    eax,DWORD PTR [ebp+0xc]
  40a583:	add    eax,esi
  40a585:	push   eax
  40a586:	call   0x4059cb
  40a58b:	inc    esi
  40a58c:	cmp    esi,0x52
  40a58f:	jb     0x40a57a
  40a595:	mov    eax,DWORD PTR [ebp-0x10]
  40a598:	call   0x404704
  40a59d:	lea    eax,[ebp+0x4]
  40a5a0:	mov    DWORD PTR [ebp-0x2c],eax
  40a5a3:	mov    eax,DWORD PTR [ebp-0x14]
  40a5a6:	mov    eax,DWORD PTR [ebp-0x8]
  40a5a9:	push   DWORD PTR [ebp-0xc]
  40a5ac:	lea    eax,[ebp-0x2c]
  40a5af:	push   eax
  40a5b0:	call   0x407c0a
  40a5b5:	mov    eax,ds:0x40d5d0
  40a5ba:	push   0x4
  40a5bc:	add    eax,0x1cc
  40a5c1:	push   eax
  40a5c2:	lea    eax,[ebp-0x14]
  40a5c5:	push   eax
  40a5c6:	call   0x40742d
  40a5cb:	mov    eax,DWORD PTR [ebp-0x14]
  40a5ce:	mov    eax,DWORD PTR [eax]
  40a5d0:	pop    edi
  40a5d1:	pop    esi
  40a5d2:	pop    ebx
  40a5d3:	leave  
  40a5d4:	ret    0xc
  40a5d7:	push   ebp
  40a5d8:	mov    ebp,esp
  40a5da:	sub    esp,0x14
  40a5dd:	leave  
  40a5de:	ret    0x4
  40a5e1:	push   ebp
  40a5e2:	mov    ebp,esp
  40a5e4:	push   ecx
  40a5e5:	or     eax,0x5cec
  40a5ea:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40a5f1:	add    eax,0x77b5
  40a5f6:	mov    eax,DWORD PTR [ebp+0x8]
  40a5f9:	mov    al,BYTE PTR [eax]
  40a5fb:	add    DWORD PTR ds:0x412354,0x2449
  40a605:	add    al,0x34
  40a607:	sbb    DWORD PTR ds:0x41237c,0x412364
  40a611:	xor    al,0x4a
  40a613:	cmp    al,0xcb
  40a615:	mov    DWORD PTR ds:0x4245c2,0x6064
  40a61f:	jne    0x40a6b9
  40a625:	mov    eax,DWORD PTR [ebp+0x8]
  40a628:	mov    ecx,DWORD PTR [ebp+0x8]
  40a62b:	add    ecx,DWORD PTR [eax+0x3c]
  40a62e:	mov    edx,0x7510859
  40a633:	and    DWORD PTR ds:0x412368,0x0
  40a63d:	mov    eax,ds:0x412368
  40a642:	inc    eax
  40a643:	mov    ds:0x412368,eax
  40a648:	cmp    DWORD PTR ds:0x412368,0xe
  40a64f:	jne    0x40a663
  40a655:	push   0x41236c
  40a65a:	push   DWORD PTR [ebp-0x10]
  40a65d:	call   DWORD PTR ds:0x40d398
  40a663:	cmp    DWORD PTR ds:0x412368,0xd
  40a66a:	jne    0x40a67b
  40a670:	mov    eax,ds:0x412368
  40a675:	inc    eax
  40a676:	mov    ds:0x412368,eax
  40a67b:	cmp    DWORD PTR ds:0x412368,0x1f
  40a682:	jb     0x40a63d
  40a688:	mov    DWORD PTR [ebp+0x8],ecx
  40a68b:	mov    eax,DWORD PTR [ebp-0x4]
  40a68e:	xor    eax,edx
  40a690:	push   esi
  40a691:	mov    esi,DWORD PTR [ebp+0x8]
  40a694:	mov    ecx,0x32729f
  40a699:	add    eax,ecx
  40a69b:	cmp    DWORD PTR [esi+0x54],eax
  40a69e:	pop    esi
  40a69f:	je     0x40a6ad
  40a6a5:	mov    eax,DWORD PTR [ebp+0x8]
  40a6a8:	jmp    0x40a6c6
  40a6ad:	mov    eax,DWORD PTR [ebp-0x4]
  40a6b0:	xor    eax,edx
  40a6b2:	add    eax,ecx
  40a6b4:	jmp    0x40a6c6
  40a6b9:	mov    eax,DWORD PTR [ebp-0x4]
  40a6bc:	xor    eax,0x7510859
  40a6c1:	add    eax,0x32729f
  40a6c6:	leave  
  40a6c7:	ret    0x4
  40a6ca:	push   ebp
  40a6cb:	mov    ebp,esp
  40a6cd:	push   ecx
  40a6ce:	mov    DWORD PTR ds:0x417e41,0x1a
  40a6d8:	cmp    DWORD PTR ds:0x417e41,0x0
  40a6df:	je     0x40a739
  40a6e5:	cmp    DWORD PTR ds:0x417e41,0x4
  40a6ec:	jne    0x40a70f
  40a6f2:	push   0x6416
  40a6f7:	push   0x57a6
  40a6fc:	push   0x7327
  40a701:	push   DWORD PTR [ebp-0xc]
  40a704:	push   0x1809
  40a709:	call   DWORD PTR ds:0x40d39c
  40a70f:	cmp    DWORD PTR ds:0x417e41,0x5
  40a716:	jne    0x40a727
  40a71c:	mov    eax,ds:0x417e41
  40a721:	dec    eax
  40a722:	mov    ds:0x417e41,eax
  40a727:	mov    eax,ds:0x417e41
  40a72c:	dec    eax
  40a72d:	mov    ds:0x417e41,eax
  40a732:	jmp    0x40a6d8
  40a737:	sub    edx,edx
  40a739:	push   ecx
  40a73a:	sub    edx,eax
  40a73c:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  40a743:	and    DWORD PTR ds:0x412358,0x0
  40a74d:	jmp    0x40a761
  40a752:	xor    edx,edx
  40a754:	add    edx,DWORD PTR ds:0x412358
  40a75a:	inc    edx
  40a75b:	mov    DWORD PTR ds:0x412358,edx
  40a761:	cmp    DWORD PTR ds:0x412358,0x11
  40a768:	jae    0x40a79c
  40a76e:	cmp    DWORD PTR ds:0x412358,0x18
  40a775:	jne    0x40a791
  40a77b:	push   0x4012
  40a780:	push   DWORD PTR [ebp-0xc]
  40a783:	push   0x7b7f
  40a788:	push   DWORD PTR [ebp-0xc]
  40a78b:	call   DWORD PTR ds:0x40d020
  40a791:	jmp    0x40a752
  40a796:	sub    DWORD PTR ds:0x4245ae,ebx
  40a79c:	mov    DWORD PTR [ebp-0x4],0xf89c853b
  40a7a3:	jmp    0x40a91b
  40a7a8:	(bad)  
  40a7a9:	jmp    0x40a73d
  40a7ab:	aam    0x78
  40a7ad:	push   ebp
  40a7ae:	pop    ecx
  40a7af:	jnp    0x40a756
  40a7b1:	fwait
  40a7b2:	jne    0x40a830
  40a7b4:	(bad)  
  40a7b6:	int3   
  40a7b7:	out    dx,al
  40a7b8:	add    eax,0xc57e7e25
  40a7bd:	jg     0x40a83d
  40a7bf:	jle    0x40a797
  40a7c1:	loop   0x40a842
  40a7c3:	fdiv   st,st(3)
  40a7c5:	hlt    
  40a7c6:	sub    edx,DWORD PTR [eax+0x5d6c0e5e]
  40a7cc:	ja     0x40a7b7
  40a7ce:	pusha  
  40a7cf:	mov    bl,0xe
  40a7d1:	icebp  
  40a7d2:	mov    cl,0xbf
  40a7d4:	das    
  40a7d5:	dec    edi
  40a7d6:	or     edx,DWORD PTR [ebx+ebp*1+0x2]
  40a7da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7db:	adc    DWORD PTR [esi],ebx
  40a7dd:	(bad)  
  40a7de:	jo     0x40a78f
  40a7e0:	sar    DWORD PTR [edi+0x19],0x68
  40a7e4:	jmp    0x40a84e
  40a7e6:	jb     0x40a83b
  40a7e8:	mov    ch,0xd7
  40a7ea:	or     BYTE PTR [edx],0xd3
  40a7ed:	std    
  40a7ee:	dec    edx
  40a7ef:	cs (bad) 
  40a7f1:	enter  0x3040,0xd5
  40a7f5:	mov    eax,0x12629d24
  40a7fa:	inc    eax
  40a7fb:	sub    esp,DWORD PTR [esi-0x5f]
  40a7fe:	in     al,0x1e
  40a800:	cmp    esi,edi
  40a802:	arpl   ax,ax
  40a804:	xor    ebp,ebx
  40a806:	mov    fs,WORD PTR [eax]
  40a808:	sub    dl,BYTE PTR [ecx]
  40a80a:	popf   
  40a80b:	sub    ebx,DWORD PTR [edi-0x43]
  40a80e:	xor    al,0x1a
  40a810:	sti    
  40a811:	jle    0x40a843
  40a813:	bound  esi,QWORD PTR [eax]
  40a815:	(bad)  
  40a816:	out    dx,al
  40a817:	ss sbb eax,0xacda52c2
  40a81d:	(bad)  
  40a81e:	sahf   
  40a81f:	mov    ch,0x78
  40a821:	inc    ebp
  40a822:	dec    ebp
  40a823:	pop    edx
  40a824:	sar    DWORD PTR [eax-0x3386de5e],cl
  40a82a:	ins    BYTE PTR es:[edi],dx
  40a82b:	mov    bh,0xc7
  40a82d:	aaa    
  40a82e:	or     eax,0xc1efee66
  40a833:	xchg   ebx,eax
  40a834:	ss call 0xd69f0f0a
  40a83a:	jae    0x40a84d
  40a83c:	fs mov dl,0x54
  40a83f:	vunpcklpd xmm3,xmm5,XMMWORD PTR [eax]
  40a843:	sbb    bl,BYTE PTR ds:0x55d6710
  40a849:	add    BYTE PTR [edx],dh
  40a84b:	mov    ah,0x41
  40a84d:	fbld   TBYTE PTR [edx-0xfbfaeae]
  40a853:	dec    ecx
  40a854:	sti    
  40a855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a856:	mov    dh,0x5f
  40a858:	xlat   BYTE PTR ds:[ebx]
  40a859:	retf   0xb4c6
  40a85c:	pop    esp
  40a85d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a85e:	les    edi,FWORD PTR [esi+0x343dae6f]
  40a864:	arpl   WORD PTR [edi],cx
  40a866:	pusha  
  40a867:	sbb    bh,al
  40a869:	(bad)  
  40a86a:	ss int3 
  40a86c:	jp     0x40a7fa
  40a86e:	lea    ebp,[edx+0x563a4e18]
  40a874:	mov    ah,0xe4
  40a876:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a877:	clc    
  40a878:	cld    
  40a879:	pop    esp
  40a87a:	imul   ebx,eax,0x34
  40a87d:	cmc    
  40a87e:	(bad)  
  40a880:	test   eax,0x5a2b433
  40a885:	(bad)  
  40a886:	pop    ds
  40a887:	out    0x61,eax
  40a889:	pop    ecx
  40a88a:	or     esp,DWORD PTR [eax+0x5671999c]
  40a890:	cmp    BYTE PTR [ebp-0x4f],ah
  40a893:	dec    ecx
  40a894:	jp     0x40a844
  40a896:	push   ds
  40a897:	pop    esp
  40a898:	xor    dl,ah
  40a89a:	xchg   esi,eax
  40a89b:	nop
  40a89c:	cmp    al,0xc0
  40a89e:	ins    BYTE PTR es:[edi],dx
  40a89f:	mov    ds:0x23f5b8cb,eax
  40a8a4:	inc    ecx
  40a8a5:	or     eax,0x330313e7
  40a8aa:	(bad)  
  40a8ab:	lahf   
  40a8ac:	and    ebp,0xffffffd5
  40a8af:	int3   
  40a8b0:	jae    0x40a8a1
  40a8b2:	sahf   
  40a8b3:	cmp    ah,BYTE PTR [esi-0x5935fc46]
  40a8b9:	or     BYTE PTR es:[ecx],dh
  40a8bc:	leave  
  40a8bd:	js     0x40a93d
  40a8bf:	mov    esp,0xdd483b7b
  40a8c4:	mov    al,0x1a
  40a8c6:	lds    edx,FWORD PTR [eax-0x37012d0e]
  40a8cc:	loopne 0x40a8ed
  40a8ce:	or     dl,BYTE PTR [eax+eax*4]
  40a8d1:	retf   0x9370
  40a8d4:	out    0xce,al
  40a8d6:	ins    DWORD PTR es:[edi],dx
  40a8d7:	dec    esp
  40a8d8:	jbe    0x40a878
  40a8da:	mov    fs,esp
  40a8dc:	aad    0x6a
  40a8de:	fsub   DWORD PTR [esi-0x3c]
  40a8e1:	call   0x87f9:0xa58c6149
  40a8e8:	mov    edi,0x1e23d0e1
  40a8ed:	sbb    edi,DWORD PTR [edi]
  40a8ef:	pop    edi
  40a8f0:	pop    ebx
  40a8f1:	stos   DWORD PTR es:[edi],eax
  40a8f2:	es stos DWORD PTR es:[edi],eax
  40a8f4:	gs push ebx
  40a8f6:	cmp    BYTE PTR [eax],cl
  40a8f8:	mov    eax,ds:0xa512c7fa
  40a8fd:	shr    DWORD PTR [edi],cl
  40a8ff:	mov    esp,0xe32ca214
  40a904:	jg     0x40a8dd
  40a906:	mov    al,ds:0x4a2602b0
  40a90b:	int    0xf6
  40a90d:	std    
  40a90e:	jmp    0xe646:0x9e6b659a
  40a915:	cmc    
  40a916:	js     0x40a8fc
  40a918:	retf   0xb320
  40a91b:	mov    eax,DWORD PTR [ebp-0x4]
  40a91e:	push   esi
  40a91f:	or     DWORD PTR ds:0x41abe2,edx
  40a925:	mov    esi,DWORD PTR [ebp-0x8]
  40a928:	and    DWORD PTR ds:0x412370,0x0
  40a932:	mov    ecx,DWORD PTR ds:0x412370
  40a938:	inc    ecx
  40a939:	mov    DWORD PTR ds:0x412370,ecx
  40a93f:	cmp    DWORD PTR ds:0x412370,0x26
  40a946:	jne    0x40a962
  40a94c:	push   DWORD PTR [ebp-0x14]
  40a94f:	push   DWORD PTR [ebp-0x24]
  40a952:	push   0x8e18
  40a957:	push   0x31c8
  40a95c:	call   DWORD PTR ds:0x40d024
  40a962:	cmp    DWORD PTR ds:0x412370,0x1b
  40a969:	jb     0x40a932
  40a96f:	mov    edx,0x7510859
  40a974:	xor    eax,edx
  40a976:	xor    esi,edx
  40a978:	mov    ecx,0x32729f
  40a97d:	add    esi,ecx
  40a97f:	add    eax,ecx
  40a981:	imul   eax,esi
  40a984:	mov    esi,DWORD PTR [ebp+0xc]
  40a987:	cmp    esi,eax
  40a989:	jne    0x40ac95
  40a98f:	mov    eax,DWORD PTR [ebp-0x4]
  40a992:	mov    esi,DWORD PTR [ebp-0x8]
  40a995:	jmp    0x40ab0d
  40a99a:	addr16 jno 0x40a945
  40a99d:	mov    ds:0xc965bb78,eax
  40a9a2:	jl     0x40a9a2
  40a9a4:	arpl   bx,dx
  40a9a6:	inc    eax
  40a9a7:	mov    al,ds:0x3ae0f9b6
  40a9ac:	jle    0x40aa2c
  40a9ae:	lds    edi,FWORD PTR [edi+0x7e]
  40a9b1:	jle    0x40aa17
  40a9b3:	pop    ebp
  40a9b4:	mov    dl,0x31
  40a9b6:	ret    
  40a9b7:	repnz cmp al,BYTE PTR [edi-0x74]
  40a9bb:	repz popa 
  40a9bd:	inc    esi
  40a9be:	mov    eax,0x57ed4b64
  40a9c3:	sub    BYTE PTR [esi-0x9a0c63b],al
  40a9c9:	dec    esi
  40a9ca:	imul   esi,DWORD PTR cs:[ebp+0xca0f3c],0x2c
  40a9d2:	fisttp QWORD PTR ds:0x3e67ba78
  40a9d8:	xchg   ecx,eax
  40a9d9:	adc    al,dl
  40a9db:	stos   BYTE PTR es:[edi],al
  40a9dc:	sar    BYTE PTR [ebx-0x24055112],0x6
  40a9e3:	jge    0x40aa01
  40a9e5:	ss xor eax,0xa62134b4
  40a9eb:	pop    ss
  40a9ec:	mov    edi,0x7343ec7e
  40a9f1:	imul   eax,DWORD PTR [edx+0x63f594e8],0x27e3acef
  40a9fb:	mov    bh,0xc9
  40a9fd:	retf   0x48fa
  40aa00:	in     eax,dx
  40aa01:	(bad)  
  40aa02:	jne    0x40a994
  40aa04:	fxch   st(5)
  40aa06:	rol    eax,1
  40aa08:	adc    al,0x4b
  40aa0a:	inc    esp
  40aa0b:	and    bh,bl
  40aa0d:	inc    edi
  40aa0e:	add    dh,dh
  40aa10:	jle    0x40aa1c
  40aa12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa13:	ss push edx
  40aa15:	push   ds
  40aa16:	stos   DWORD PTR es:[edi],eax
  40aa17:	jl     0x40aa46
  40aa19:	sub    esp,esp
  40aa1b:	call   0x6331d2a6
  40aa20:	add    al,0x5a
  40aa22:	pop    es
  40aa23:	pop    esi
  40aa24:	mov    ah,0x47
  40aa26:	retf   
  40aa27:	xchg   ebx,eax
  40aa28:	mov    cl,0x4
  40aa2a:	push   eax
  40aa2b:	add    eax,DWORD PTR [ebx]
  40aa2d:	repz stc 
  40aa2f:	xchg   ebp,eax
  40aa30:	popa   
  40aa31:	leave  
  40aa32:	cmp    DWORD PTR [ecx+0x27],ebx
  40aa35:	dec    edx
  40aa36:	daa    
  40aa37:	adc    BYTE PTR [ebp-0x5203be32],cl
  40aa3d:	xor    ebp,DWORD PTR [ebp-0x4e]
  40aa40:	outs   dx,DWORD PTR es:[esi]
  40aa42:	shr    DWORD PTR [ebp+0xa],cl
  40aa45:	xchg   esi,eax
  40aa46:	jbe    0x40aa60
  40aa48:	pusha  
  40aa49:	lods   al,BYTE PTR ds:[esi]
  40aa4a:	mov    al,0x66
  40aa4c:	sub    al,0x4b
  40aa4e:	or     eax,0x1d46fc80
  40aa53:	lea    esi,ds:0xa3825fb8
  40aa59:	xor    BYTE PTR [esi],ch
  40aa5b:	imul   eax,DWORD PTR [edi+eiz*2+0x397623f],0x6b281767
  40aa66:	pop    ecx
  40aa67:	xor    BYTE PTR [edi],al
  40aa69:	fnsave [eax+0x7]
  40aa6c:	dec    ebx
  40aa6d:	jp     0x40aa63
  40aa6f:	enter  0xf924,0x6
  40aa73:	adc    BYTE PTR [ebp-0x70165a0e],0xf2
  40aa7a:	scas   al,BYTE PTR es:[edi]
  40aa7b:	popa   
  40aa7c:	jp     0x40aa4d
  40aa7e:	cmp    ecx,DWORD PTR [eax-0x14]
  40aa81:	cmp    eax,0x1b8ad48e
  40aa86:	fwait
  40aa87:	pop    eax
  40aa88:	into   
  40aa89:	jge    0x40aab5
  40aa8b:	sub    DWORD PTR [ebx-0x2765c4ca],eax
  40aa91:	mov    edx,0x6dba8f43
  40aa96:	les    esp,FWORD PTR [ebx]
  40aa98:	dec    edx
  40aa99:	nop
  40aa9a:	mov    al,ds:0x280f0512
  40aa9f:	jmp    0x3af5ae07
  40aaa4:	pushf  
  40aaa5:	popf   
  40aaa6:	ins    BYTE PTR es:[edi],dx
  40aaa7:	push   ebp
  40aaa8:	fnstsw WORD PTR [ecx-0x1b]
  40aaab:	jns    0x40ab25
  40aaad:	jnp    0x40ab21
  40aaaf:	pusha  
  40aab0:	add    dh,BYTE PTR [esi+0x59]
  40aab3:	dec    ebp
  40aab4:	int    0x47
  40aab6:	aas    
  40aab7:	mov    edx,DWORD PTR [edx-0x22b3886a]
  40aabd:	jmp    0x8a0f9abf
  40aac2:	int    0x3f
  40aac4:	sbb    bh,BYTE PTR [eax+edx*1]
  40aac7:	cmp    dh,BYTE PTR [bx+di]
  40aaca:	xchg   ecx,eax
  40aacb:	pop    ds
  40aacc:	(bad)  
  40aacd:	jmp    FWORD PTR [edi+edi*4-0x79]
  40aad1:	ret    
  40aad2:	aad    0x84
  40aad4:	mov    eax,ds:0xe9deb17
  40aad9:	scas   eax,DWORD PTR es:[edi]
  40aada:	bnd jbe 0x40aa60
  40aadd:	sbb    eax,0x81e6211
  40aae2:	jmp    0x7de9a14
  40aae7:	dec    esi
  40aae8:	dec    edx
  40aae9:	int3   
  40aaea:	sbb    BYTE PTR [eax],dl
  40aaec:	jno    0x40ab44
  40aaee:	sub    DWORD PTR [edi-0x78058604],ebp
  40aaf4:	inc    edx
  40aaf5:	dec    edx
  40aaf6:	xchg   edx,eax
  40aaf7:	add    dl,BYTE PTR [edx-0x755f9640]
  40aafd:	sbb    DWORD PTR [ebp-0xc56c86b],ebx
  40ab03:	cmp    esp,0x74
  40ab06:	jp     0x40aaf7
  40ab08:	mov    ds:0x53e8bf37,al
  40ab0d:	xor    eax,edx
  40ab0f:	xor    esi,edx
  40ab11:	add    eax,ecx
  40ab13:	jmp    0x40ac8b
  40ab18:	jg     0x40aacf
  40ab1a:	add    eax,0x117b453b
  40ab1f:	jns    0x40aab9
  40ab21:	cmp    eax,0x1187ac8b
  40ab26:	jno    0x40ab8d
  40ab28:	dec    edi
  40ab29:	cmp    edi,DWORD PTR [esi+0x7e]
  40ab2c:	lds    edi,FWORD PTR [edi+0x7e]
  40ab2f:	jle    0x40ab2f
  40ab31:	cmp    eax,0x7ce1839c
  40ab36:	mov    edx,0x8c22cb89
  40ab3b:	retf   
  40ab3c:	jmp    FWORD PTR [eax+0x10e83a24]
  40ab42:	pop    ebp
  40ab43:	jmp    0x712c:0xbb392f7b
  40ab4a:	adc    DWORD PTR [edx-0x6cce76c0],edi
  40ab50:	mov    edx,0x7f7ed713
  40ab55:	adc    DWORD PTR [eax],0x829225f3
  40ab5b:	push   ecx
  40ab5c:	pop    ss
  40ab5d:	sub    ebp,edx
  40ab5f:	ins    DWORD PTR es:[edi],dx
  40ab60:	sbb    eax,0xf1dd85f4
  40ab65:	pushf  
  40ab66:	out    dx,eax
  40ab67:	inc    esi
  40ab68:	sbb    eax,0x4cac0ccc
  40ab6d:	jecxz  0x40ab2e
  40ab6f:	fistp  DWORD PTR [ebp+ebp*1-0x17]
  40ab73:	jmp    0xb764:0x4bb9c7b7
  40ab7a:	(bad)
  40ab7f:	pop    ebx
  40ab80:	test   eax,0xda2abe15
  40ab85:	data16 scas al,BYTE PTR es:[edi]
  40ab87:	and    DWORD PTR [eax+0x42378a40],edi
  40ab8d:	push   ecx
  40ab8e:	mov    eax,esi
  40ab90:	test   DWORD PTR [edi-0x5b7820b7],esp
  40ab96:	or     al,0x5a
  40ab98:	jae    0x40abc9
  40ab9a:	push   ecx
  40ab9b:	retf   0xdd22
  40ab9e:	sub    eax,0xbf0b8742
  40aba3:	in     al,0xab
  40aba5:	(bad)  
  40aba7:	sub    BYTE PTR [eax+0x21dee15d],ah
  40abad:	mov    dh,0xa4
  40abaf:	rcr    dl,0xa1
  40abb2:	or     al,BYTE PTR [esi+0x4aba77b5]
  40abb8:	sahf   
  40abb9:	sub    cl,bl
  40abbb:	dec    esi
  40abbc:	inc    eax
  40abbd:	data16 cmc 
  40abbf:	sub    dh,BYTE PTR es:[eax]
  40abc2:	fstp   QWORD PTR ds:0xaed9de33
  40abc8:	push   0x9b3d5c57
  40abcd:	inc    ebx
  40abce:	sahf   
  40abcf:	and    al,0xa8
  40abd1:	gs push eax
  40abd3:	pop    edx
  40abd4:	mov    edi,0x23da74a9
  40abd9:	pusha  
  40abda:	xor    dh,dh
  40abdc:	mov    ch,BYTE PTR [ecx+0x5b42360d]
  40abe2:	stc    
  40abe3:	fistp  WORD PTR [ebx+0x5c0e2c6d]
  40abe9:	ds mov bl,0xc6
  40abec:	lea    edx,[ebp-0x3f6951e0]
  40abf2:	xchg   ecx,eax
  40abf3:	xchg   ebx,eax
  40abf4:	dec    esp
  40abf5:	(bad)  
  40abf6:	popa   
  40abf7:	xchg   ebx,eax
  40abf8:	leave  
  40abf9:	fisubr DWORD PTR [ebx-0x1f]
  40abfc:	inc    eax
  40abfd:	push   esp
  40abfe:	aad    0x5a
  40ac00:	jne    0x40ab91
  40ac02:	pop    ds
  40ac03:	mov    ebp,0xc21660dc
  40ac08:	into   
  40ac09:	arpl   ax,ax
  40ac0b:	adc    ebx,esp
  40ac0d:	or     esp,DWORD PTR [eax+esi*4-0x44]
  40ac11:	lahf   
  40ac12:	xlat   BYTE PTR ds:[ebx]
  40ac13:	mov    ecx,0x9c87f266
  40ac18:	test   esi,ecx
  40ac1a:	in     al,0x99
  40ac1c:	inc    ecx
  40ac1d:	lock xchg edx,eax
  40ac1f:	popa   
  40ac20:	mov    ecx,0xba27af51
  40ac25:	sar    DWORD PTR [ebp-0x22],1
  40ac28:	stos   DWORD PTR es:[edi],eax
  40ac29:	dec    DWORD PTR [edx-0x40455a81]
  40ac2f:	lea    eax,[esi]
  40ac31:	or     al,0x9d
  40ac33:	aad    0x3
  40ac35:	repz jns 0x40ac3f
  40ac38:	inc    edi
  40ac39:	sbb    ebx,DWORD PTR [eax]
  40ac3b:	cmp    eax,0xfd9d2006
  40ac40:	push   esi
  40ac41:	dec    esi
  40ac42:	test   DWORD PTR [ebp+0x66],esp
  40ac45:	add    ah,BYTE PTR [eax]
  40ac47:	scas   eax,DWORD PTR es:[edi]
  40ac48:	cmp    ebp,DWORD PTR [eax+0x2ef8ffac]
  40ac4e:	or     ebx,ecx
  40ac50:	test   dl,ch
  40ac52:	ins    BYTE PTR es:[edi],dx
  40ac53:	dec    esi
  40ac54:	(bad)  
  40ac55:	jecxz  0x40ac05
  40ac57:	jb     0x40abf1
  40ac59:	setnp  BYTE PTR [edi+0x2155d134]
  40ac60:	inc    edi
  40ac61:	sub    al,0x89
  40ac63:	xor    ch,ah
  40ac65:	mov    DWORD PTR [eax],esp
  40ac67:	int3   
  40ac68:	and    al,0xaf
  40ac6a:	js     0x40ac52
  40ac6c:	int    0x81
  40ac6e:	mov    bl,0x9e
  40ac70:	jmp    DWORD PTR [ecx+0x49]
  40ac73:	adc    dh,BYTE PTR [esi+0x54]
  40ac76:	stc    
  40ac77:	shl    ch,1
  40ac79:	pop    esp
  40ac7a:	lock gs inc edx
  40ac7d:	gs push ss
  40ac7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac80:	adc    BYTE PTR [ecx+eiz*4-0x5],al
  40ac84:	and    BYTE PTR [ecx-0x1e],ah
  40ac87:	pop    edx
  40ac88:	pop    ds
  40ac89:	pop    edi
  40ac8a:	push   edx
  40ac8b:	add    esi,ecx
  40ac8d:	imul   eax,esi
  40ac90:	jmp    0x40ae48
  40ac95:	mov    eax,DWORD PTR [ebp+0xc]
  40ac98:	mov    eax,DWORD PTR [eax+0x78]
  40ac9b:	mov    DWORD PTR [ebp+0xc],eax
  40ac9e:	mov    eax,DWORD PTR [ebp-0x4]
  40aca1:	mov    esi,DWORD PTR [ebp-0x8]
  40aca4:	xor    eax,edx
  40aca6:	xor    esi,edx
  40aca8:	add    eax,ecx
  40acaa:	jmp    0x40ae22
  40acaf:	push   ss
  40acb0:	mov    esp,0xb169beb3
  40acb5:	sub    edx,DWORD PTR [esp+edx*4-0x31]
  40acb9:	cmc    
  40acba:	sub    ebx,edx
  40acbc:	mov    ecx,DWORD PTR [ecx+0x7e392a81]
  40acc2:	jle    0x40ac89
  40acc4:	jg     0x40ad44
  40acc6:	jle    0x40ace9
  40acc8:	mov    ds:0xbf7a8f09,eax
  40accd:	cmp    BYTE PTR [esi],bh
  40accf:	sub    BYTE PTR [edi+0xe],bh
  40acd2:	cwde   
  40acd3:	inc    edi
  40acd4:	int3   
  40acd5:	retf   
  40acd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acd7:	push   edx
  40acd8:	push   0xffffff8f
  40acda:	and    DWORD PTR [ecx],ebp
  40acdc:	je     0x40ad10
  40acde:	inc    ebx
  40acdf:	mov    ds:0xc5e6b6a8,eax
  40ace4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ace5:	mov    edx,0xc93b3762
  40acea:	loop   0x40ad46
  40acec:	pusha  
  40aced:	fadd   DWORD PTR [ecx+0x5d5baeb2]
  40acf3:	iret   
  40acf4:	push   cs
  40acf5:	sub    edi,ebx
  40acf7:	out    dx,eax
  40acf8:	sbb    al,BYTE PTR [eax]
  40acfa:	sets   BYTE PTR ds:0xdc92f347
  40ad01:	scas   al,BYTE PTR es:[edi]
  40ad02:	in     eax,0x6e
  40ad04:	or     al,0x5f
  40ad06:	les    esp,FWORD PTR [ecx]
  40ad08:	xchg   BYTE PTR [esi],ch
  40ad0a:	sub    eax,0x4e5abff3
  40ad0f:	xchg   ebp,eax
  40ad10:	jo     0x40aceb
  40ad12:	ds push esp
  40ad14:	pop    ds
  40ad15:	test   eax,0xeae4413b
  40ad1a:	xchg   dl,dl
  40ad1c:	aas    
  40ad1d:	(bad)
  40ad20:	add    al,0x28
  40ad22:	lods   al,BYTE PTR ds:[esi]
  40ad23:	sar    DWORD PTR [edx+0x31302cb8],0x6a
  40ad2a:	mov    esi,0x8f541897
  40ad2f:	enter  0xd955,0x8f
  40ad33:	mov    cl,0xb2
  40ad35:	je     0x40ad15
  40ad37:	mov    ah,bh
  40ad39:	ficom  DWORD PTR [ecx-0x7a08b72]
  40ad3f:	stc    
  40ad40:	mov    cl,0xbb
  40ad42:	in     eax,0xec
  40ad44:	mov    edx,DWORD PTR [edi]
  40ad46:	inc    ebx
  40ad47:	push   esi
  40ad48:	xor    BYTE PTR [edi],ah
  40ad4a:	jl     0x40ad26
  40ad4c:	xchg   ebp,eax
  40ad4d:	mov    ecx,0x4618e133
  40ad52:	std    
  40ad53:	or     cl,BYTE PTR [eax-0x6ab39d2d]
  40ad59:	in     eax,dx
  40ad5a:	aas    
  40ad5b:	add    al,0xc3
  40ad5d:	out    dx,al
  40ad5e:	sub    esp,DWORD PTR [edi-0x3850e3b8]
  40ad64:	inc    ecx
  40ad65:	pusha  
  40ad66:	(bad)  
  40ad68:	mov    al,ds:0x7770c992
  40ad6d:	ja     0x40ad2e
  40ad6f:	push   ebx
  40ad70:	shl    al,0xf0
  40ad73:	jmp    0x40ad4e
  40ad75:	xchg   BYTE PTR [edi],ah
  40ad77:	sbb    dh,al
  40ad79:	xor    ebx,DWORD PTR [ebx+0x76]
  40ad7c:	retf   
  40ad7d:	jno    0x40ad30
  40ad7f:	mov    al,ah
  40ad81:	jmp    0xee74bfe5
  40ad86:	sar    DWORD PTR [bp+si-0x171d],cl
  40ad8b:	sbb    al,0x1a
  40ad8d:	mov    al,BYTE PTR [eax]
  40ad8f:	lahf   
  40ad90:	pop    ss
  40ad91:	inc    esp
  40ad92:	je     0x40adf6
  40ad94:	mov    edi,0x9c7095d1
  40ad99:	mov    ch,0x2f
  40ad9b:	ret    0x7d1
  40ad9e:	fisub  WORD PTR [ecx+eiz*2-0x2f]
  40ada2:	mov    ch,0xfd
  40ada4:	sbb    DWORD PTR [ebx+edi*1],0xffffffa6
  40ada8:	adc    eax,0x5610ab01
  40adad:	or     eax,0x2f52fb6a
  40adb2:	sub    al,0xcb
  40adb4:	adc    ah,dl
  40adb6:	out    0x2c,eax
  40adb8:	pop    edi
  40adb9:	outs   dx,BYTE PTR ds:[esi]
  40adba:	sub    al,0x9a
  40adbc:	sub    BYTE PTR [esp+esi*8+0x30],ah
  40adc0:	sub    ebx,DWORD PTR ss:[ecx+0x47f626bd]
  40adc7:	jmp    0x9758f928
  40adcc:	cmp    eax,0xd33ed423
  40add1:	pop    ds
  40add2:	push   0x68
  40add4:	or     cl,bl
  40add6:	mov    al,ds:0xddcf72ce
  40addb:	out    0xcd,al
  40addd:	jge    0x40ada0
  40addf:	jmp    0x18c65ce7
  40ade4:	(bad)  
  40ade5:	shr    DWORD PTR [ecx-0x4c],cl
  40ade8:	push   ss
  40ade9:	sbb    DWORD PTR [edx+ebp*4+0x20],eax
  40aded:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adee:	sahf   
  40adef:	sbb    BYTE PTR [edx+0x25257006],dh
  40adf5:	mov    ah,0x38
  40adf7:	dec    ebx
  40adf8:	rcr    bl,1
  40adfa:	(bad)  
  40adfb:	mov    eax,ds:0x446af913
  40ae00:	lods   eax,DWORD PTR ds:[esi]
  40ae01:	add    eax,0xf8c75cdf
  40ae06:	punpckhdq mm5,mm7
  40ae09:	mov    esi,0x9cda2a35
  40ae0e:	fisub  DWORD PTR [esi+0x6270ca83]
  40ae14:	scas   eax,DWORD PTR es:[edi]
  40ae15:	int    0xb6
  40ae17:	or     eax,0xcc80e9db
  40ae1c:	and    DWORD PTR ds:0xabce069d,esp
  40ae22:	add    esi,ecx
  40ae24:	imul   eax,esi
  40ae27:	mov    esi,DWORD PTR [ebp+0xc]
  40ae2a:	cmp    esi,eax
  40ae2c:	mov    eax,DWORD PTR [ebp-0x4]
  40ae2f:	je     0x40a992
  40ae35:	xor    eax,edx
  40ae37:	add    eax,ecx
  40ae39:	mov    ecx,DWORD PTR [ebp+0xc]
  40ae3c:	imul   eax,ecx
  40ae3f:	add    eax,DWORD PTR [ebp+0x8]
  40ae42:	mov    DWORD PTR [ebp+0xc],eax
  40ae45:	mov    eax,DWORD PTR [ebp+0xc]
  40ae48:	pop    esi
  40ae49:	leave  
  40ae4a:	ret    0x8
  40ae4d:	push   ebp
  40ae4e:	mov    ebp,esp
  40ae50:	sub    esp,0x30
  40ae53:	add    DWORD PTR ds:0x41abce,0x682
  40ae5d:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40ae64:	mov    DWORD PTR [ebp-0x18],0xf89c853b
  40ae6b:	dec    DWORD PTR ds:0x41abde
  40ae71:	mov    ecx,DWORD PTR [ebp-0x4]
  40ae74:	push   ebx
  40ae75:	mov    eax,0x7510859
  40ae7a:	xor    ebx,0x7bf6
  40ae80:	xor    ecx,eax
  40ae82:	jmp    0x40af67
  40ae87:	je     0x40aef6
  40ae89:	jg     0x40aea2
  40ae8b:	addr16 gs adc al,0x6d
  40ae8f:	test   eax,0x82268d5d
  40ae94:	adc    DWORD PTR [ecx+0x32],ebp
  40ae97:	icebp  
  40ae98:	ds jle 0x40af19
  40ae9b:	mov    dh,0x7e
  40ae9d:	jle    0x40af1d
  40ae9f:	mov    WORD PTR ds:0x485134ba,gs
  40aea5:	dec    edi
  40aea6:	xor    BYTE PTR [ebx],0x50
  40aea9:	sar    DWORD PTR [esi+0xb],cl
  40aeac:	lock push es
  40aeae:	ror    BYTE PTR [esi-0x72],0xc9
  40aeb2:	and    DWORD PTR [edi+0xe00f9e7],ebp
  40aeb8:	adc    eax,0xe3d72240
  40aebd:	sub    al,0xf0
  40aebf:	(bad)  
  40aec0:	mov    DWORD PTR [eax+ecx*4-0x53b99eb1],esp
  40aec7:	icebp  
  40aec8:	jecxz  0x40aeb7
  40aeca:	dec    esp
  40aecb:	pop    edi
  40aecc:	aas    
  40aecd:	in     al,0xe3
  40aecf:	ja     0x40ae6c
  40aed1:	(bad)  
  40aed3:	int    0x95
  40aed5:	call   0x5ea0:0x7469a1e2
  40aedc:	dec    edi
  40aedd:	dec    edi
  40aede:	test   al,0x3c
  40aee0:	ds sbb eax,0xe1c19ebf
  40aee6:	leave  
  40aee7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aee8:	pop    ebp
  40aee9:	push   ecx
  40aeea:	and    ch,BYTE PTR gs:[ecx-0x749b17d3]
  40aef1:	jo     0x40aef5
  40aef3:	clc    
  40aef4:	pop    ds
  40aef5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aef6:	dec    edi
  40aef7:	call   0xe99e:0x10926d77
  40aefe:	xor    ch,BYTE PTR [edi-0x31]
  40af01:	lock or eax,0x3ac0b923
  40af07:	clc    
  40af08:	inc    esp
  40af09:	aam    0x3
  40af0b:	jo     0x40af05
  40af0d:	fwait
  40af0e:	dec    esi
  40af0f:	cmp    BYTE PTR [eax+0x27a32b9f],al
  40af15:	leave  
  40af16:	xor    al,0x70
  40af18:	sub    al,0x1
  40af1a:	jl     0x40af8a
  40af1c:	(bad)  [edi+0x66]
  40af1f:	repz xlat BYTE PTR ds:[ebx]
  40af21:	cld    
  40af22:	popf   
  40af23:	mov    ds:0x3e8ce24f,eax
  40af28:	pop    es
  40af29:	mov    esp,0x29c7c750
  40af2e:	das    
  40af2f:	inc    eax
  40af30:	xor    BYTE PTR ds:0xdd433de3,al
  40af36:	and    ebp,DWORD PTR [ebx+0x60]
  40af39:	stos   DWORD PTR es:[edi],eax
  40af3a:	out    0x45,al
  40af3c:	nop
  40af3d:	dec    ebx
  40af3e:	ss push cs
  40af40:	loope  0x40aedd
  40af42:	pop    ss
  40af43:	js     0x40afb2
  40af45:	pop    eax
  40af46:	pop    eax
  40af47:	and    eax,0x6a45b807
  40af4c:	in     al,dx
  40af4d:	inc    esp
  40af4e:	outs   dx,DWORD PTR ds:[esi]
  40af4f:	pop    ds
  40af50:	cmc    
  40af51:	in     al,dx
  40af52:	(bad)  
  40af53:	pop    ds
  40af54:	xchg   esp,eax
  40af55:	push   ebp
  40af56:	(bad)  
  40af57:	mov    edi,0xa10509b9
  40af5c:	sbb    edi,eax
  40af5e:	sbb    BYTE PTR [edi],0xb7
  40af61:	adc    eax,0xef58781a
  40af66:	mov    ebx,0x32729fbb
  40af6b:	add    BYTE PTR [ebx],al
  40af6d:	retf   
  40af6e:	and    DWORD PTR ds:0x412370,0x41abce
  40af78:	mov    DWORD PTR [ebp-0x1c],ecx
  40af7b:	mov    DWORD PTR ds:0x41235c,0x5a41
  40af85:	mov    ecx,DWORD PTR [ebp+0x14]
  40af88:	add    DWORD PTR ds:0x41abe6,0x41235c
  40af92:	push   esi
  40af93:	push   edi
  40af94:	or     DWORD PTR ds:0x41510d,0x36ef
  40af9e:	test   ecx,ecx
  40afa0:	je     0x40afae
  40afa6:	mov    ecx,DWORD PTR [ebp+0x14]
  40afa9:	mov    ecx,DWORD PTR [ecx]
  40afab:	mov    DWORD PTR [ebp-0x1c],ecx
  40afae:	movzx  edi,BYTE PTR ds:0x417e3d
  40afb5:	and    DWORD PTR ds:0x417e41,edi
  40afbb:	imul   edx,eax
  40afbe:	sub    DWORD PTR ds:0x412374,ecx
  40afc4:	mov    ecx,0x4573
  40afc9:	and    DWORD PTR ds:0x41abe2,0x0
  40afd3:	mov    esi,DWORD PTR ds:0x41abe2
  40afd9:	inc    esi
  40afda:	mov    DWORD PTR ds:0x41abe2,esi
  40afe0:	cmp    DWORD PTR ds:0x41abe2,0x22
  40afe7:	jne    0x40affd
  40afed:	push   0x2695
  40aff2:	push   0x8176
  40aff7:	call   DWORD PTR ds:0x40d3a0
  40affd:	cmp    DWORD PTR ds:0x41abe2,0x1e
  40b004:	jb     0x40afd3
  40b00a:	add    edx,ecx
  40b00c:	and    DWORD PTR ds:0x41abca,0x0
  40b016:	jmp    0x40b02a
  40b01b:	xor    edi,edi
  40b01d:	xor    edi,DWORD PTR ds:0x41abca
  40b023:	inc    edi
  40b024:	mov    DWORD PTR ds:0x41abca,edi
  40b02a:	cmp    DWORD PTR ds:0x41abca,0x12
  40b031:	jae    0x40b05b
  40b037:	cmp    DWORD PTR ds:0x41abca,0x1d
  40b03e:	jne    0x40b054
  40b044:	push   0x27af
  40b049:	push   0x17d7
  40b04e:	call   DWORD PTR ds:0x40d028
  40b054:	jmp    0x40b01b
  40b059:	or     esi,edi
  40b05b:	mov    esi,0x7879
  40b060:	mov    edi,0x1556
  40b065:	mov    DWORD PTR ds:0x4245b2,0x3a32
  40b06f:	xchg   esi,ecx
  40b071:	mov    ecx,DWORD PTR ds:0x41238c
  40b077:	mov    ecx,DWORD PTR [ecx]
  40b079:	or     DWORD PTR ds:0x417e49,ecx
  40b07f:	sub    edx,edi
  40b081:	and    ecx,DWORD PTR ds:0x412368
  40b087:	xor    esi,esi
  40b089:	adc    ecx,DWORD PTR ds:0x4245ae
  40b08f:	mov    DWORD PTR [ebp-0x28],esi
  40b092:	mov    DWORD PTR [ebp-0x2c],esi
  40b095:	add    ecx,DWORD PTR ds:0x41abd6
  40b09b:	mov    DWORD PTR [ebp-0x14],esi
  40b09e:	and    DWORD PTR ds:0x41510d,ebx
  40b0a4:	jmp    0x40b189
  40b0a9:	scas   al,BYTE PTR es:[edi]
  40b0aa:	mov    ch,0x8b
  40b0ac:	imul   edi,DWORD PTR [ecx+0x69],0x6e
  40b0b0:	pop    ecx
  40b0b1:	(bad)  
  40b0b2:	pusha  
  40b0b3:	fisttp WORD PTR [ecx+0x7d]
  40b0b6:	dec    edx
  40b0b7:	and    eax,0x7e3fc9bf
  40b0bc:	jle    0x40b074
  40b0be:	jle    0x40b13e
  40b0c0:	jle    0x40b114
  40b0c2:	retf   0x98b8
  40b0c5:	js     0x40b134
  40b0c7:	sbb    eax,0x5060d982
  40b0cc:	fisttp WORD PTR [edi+0x16]
  40b0cf:	mov    eax,ds:0xd72d344d
  40b0d4:	or     esi,DWORD PTR [ecx+0x0]
  40b0d7:	cmp    edi,edx
  40b0d9:	sbb    al,0x53
  40b0db:	add    bl,bh
  40b0dd:	stos   DWORD PTR es:[edi],eax
  40b0de:	jo     0x40b0a2
  40b0e0:	stc    
  40b0e1:	fwait
  40b0e2:	jns    0x40b083
  40b0e4:	dec    ebp
  40b0e5:	enter  0x43e9,0x47
  40b0e9:	mov    ecx,0x539d13aa
  40b0ee:	dec    ebx
  40b0ef:	inc    esp
  40b0f0:	loopne 0x40b171
  40b0f2:	jne    0x40b16d
  40b0f4:	jb     0x40b09b
  40b0f6:	scas   eax,DWORD PTR es:[edi]
  40b0f7:	dec    eax
  40b0f8:	or     BYTE PTR [eax+0x5304b5d5],dh
  40b0fe:	and    al,0xdf
  40b100:	and    esi,DWORD PTR [ecx+0x581ada71]
  40b106:	sti    
  40b107:	or     BYTE PTR [edi],bh
  40b109:	es sbb al,0xf4
  40b10c:	cld    
  40b10d:	sbb    al,0x63
  40b10f:	xchg   ebx,eax
  40b110:	fdivr  DWORD PTR [edx+0x45]
  40b113:	mov    ah,0x5b
  40b115:	mov    ebp,0x1ac8edb1
  40b11a:	test   BYTE PTR [edx-0x5140866f],dh
  40b120:	push   ss
  40b121:	lahf   
  40b122:	pop    edi
  40b123:	jmp    0x14299912
  40b128:	cs push ecx
  40b12a:	cli    
  40b12b:	retf   0x6ef0
  40b12e:	add    esi,eax
  40b130:	push   ebp
  40b131:	aam    0xee
  40b133:	iret   
  40b134:	inc    edx
  40b135:	lods   al,BYTE PTR ds:[esi]
  40b136:	cli    
  40b137:	push   0x79
  40b139:	hlt    
  40b13a:	mov    edx,DWORD PTR [ebp+0x7957d38c]
  40b140:	jns    0x40b1b9
  40b142:	xchg   esi,eax
  40b143:	inc    esi
  40b144:	arpl   WORD PTR [ecx+eiz*2+0x6],ax
  40b148:	mov    edx,0x30753be3
  40b14d:	lahf   
  40b14e:	mov    esi,0xa10f0b28
  40b153:	pop    ds
  40b154:	cmp    al,0x4a
  40b156:	xor    eax,0xb503f8f8
  40b15c:	or     ecx,DWORD PTR [ecx+0x4e]
  40b15f:	call   0xc23d4bf1
  40b164:	daa    
  40b165:	stos   DWORD PTR es:[edi],eax
  40b166:	mov    bh,0x55
  40b168:	jno    0x40b1ab
  40b16a:	daa    
  40b16b:	mov    esi,0xa5ebb7b0
  40b170:	push   ss
  40b171:	cmp    dh,BYTE PTR [ecx+0xc]
  40b174:	sar    DWORD PTR [esi+edi*8-0x1d],0x34
  40b179:	and    BYTE PTR [eax+0x7a],bl
  40b17c:	arpl   WORD PTR [ecx],bx
  40b17e:	dec    esi
  40b17f:	sbb    eax,0xbdd5a05e
  40b184:	xchg   ebx,eax
  40b185:	jnp    0x40b1df
  40b187:	aas    
  40b188:	jns    0x40b113
  40b18a:	jne    0x40b184
  40b18c:	movzx  ecx,BYTE PTR ds:0x41abce
  40b193:	and    DWORD PTR ds:0x415115,ecx
  40b199:	jmp    0x40b27e
  40b19e:	mov    ebp,0xc5aa0686
  40b1a3:	stos   BYTE PTR es:[edi],al
  40b1a4:	popa   
  40b1a5:	jns    0x40b1e6
  40b1a7:	in     eax,dx
  40b1a8:	(bad)  
  40b1a9:	mov    ah,0xb2
  40b1ab:	ins    BYTE PTR es:[edi],dx
  40b1ac:	jne    0x40b1ad
  40b1ae:	add    DWORD PTR [esi+edi*2],edi
  40b1b1:	jle    0x40b169
  40b1b3:	jle    0x40b233
  40b1b5:	jle    0x40b1a8
  40b1b7:	and    BYTE PTR [eax+0x325524ae],cl
  40b1bd:	in     eax,dx
  40b1be:	pop    edx
  40b1bf:	adc    BYTE PTR [ebx+0x4536f606],0xd8
  40b1c6:	mov    eax,0xeb03e611
  40b1cb:	inc    edx
  40b1cc:	jb     0x40b17e
  40b1ce:	mov    al,ds:0x5d284870
  40b1d3:	xor    ebp,DWORD PTR [edx-0x67]
  40b1d6:	push   esp
  40b1d7:	call   0xa7d46943
  40b1dc:	ret    0xbc27
  40b1df:	jo     0x40b1c9
  40b1e1:	pop    ss
  40b1e2:	add    ebx,DWORD PTR [edi+0x60]
  40b1e5:	pop    ebx
  40b1e6:	pop    edx
  40b1e7:	mov    esp,0x795113f7
  40b1ec:	test   eax,0x4b238498
  40b1f1:	mov    DWORD PTR [eax],0x6da32fa0
  40b1f7:	sub    al,bh
  40b1f9:	push   0x3b5ca720
  40b1fe:	or     esi,DWORD PTR [edx]
  40b200:	(bad)  
  40b201:	cmp    eax,0xde64561c
  40b206:	scas   al,BYTE PTR es:[edi]
  40b207:	cld    
  40b208:	cmp    edx,DWORD PTR [eax-0x64]
  40b20b:	bound  edx,QWORD PTR [esi+0x4700ff35]
  40b211:	hlt    
  40b212:	ret    0x87d7
  40b215:	push   0x5a
  40b217:	add    edi,esp
  40b219:	out    0x88,eax
  40b21b:	sub    ebp,DWORD PTR [esi-0x5a7d456]
  40b221:	into   
  40b222:	xchg   esp,eax
  40b223:	pop    edi
  40b224:	xchg   esp,eax
  40b225:	sbb    DWORD PTR [ebx+edi*4],esi
  40b228:	jl     0x40b20f
  40b22a:	and    BYTE PTR [ebx-0x42],bh
  40b22d:	inc    edi
  40b22e:	mov    dh,0x65
  40b230:	mov    bh,ch
  40b232:	sub    ah,BYTE PTR [esi+esi*1]
  40b235:	test   DWORD PTR [edx],ebx
  40b237:	adc    eax,0xff1c009d
  40b23c:	dec    esi
  40b23d:	cld    
  40b23e:	mov    eax,DWORD PTR [edx+esi*4-0x74dd1619]
  40b245:	cmp    bl,BYTE PTR [ebp+0x3a]
  40b248:	add    ecx,DWORD PTR [ecx+esi*4+0x32d3315e]
  40b24f:	jae    0x40b269
  40b251:	xchg   edx,eax
  40b252:	ss (bad) 
  40b254:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b255:	sbb    al,0xbe
  40b257:	xor    dh,BYTE PTR [edi+0x4c325894]
  40b25d:	dec    ecx
  40b25e:	mov    al,0xf7
  40b260:	push   ebx
  40b261:	and    ebx,ebp
  40b263:	adc    al,0x6b
  40b265:	fcom   QWORD PTR [ecx-0x25]
  40b268:	pop    ebx
  40b269:	add    al,0xcf
  40b26b:	push   cs
  40b26c:	dec    edx
  40b26d:	push   esi
  40b26e:	aam    0x4c
  40b270:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b271:	daa    
  40b272:	add    ebx,DWORD PTR [esi+0x8]
  40b275:	in     al,dx
  40b276:	mov    ecx,0x2274c36b
  40b27b:	mov    ?,WORD PTR [esp+ebx*8-0x7e17b275]
  40b282:	sub    eax,0x4150fd
  40b287:	fisubr DWORD PTR [ebx-0x37ccffbf]
  40b28d:	xor    edi,edi
  40b28f:	or     DWORD PTR ds:0x41236c,edi
  40b295:	add    ecx,ebx
  40b297:	not    eax
  40b299:	mov    DWORD PTR [ebp-0x20],ecx
  40b29c:	mov    eax,DWORD PTR [ebp-0x20]
  40b29f:	je     0x40bb71
  40b2a5:	mov    eax,ds:0x415105
  40b2aa:	xor    DWORD PTR ds:0x412354,eax
  40b2b0:	mov    eax,DWORD PTR [ebp-0x4]
  40b2b3:	xor    eax,0x7510859
  40b2b8:	and    DWORD PTR ds:0x4245ae,0x412358
  40b2c2:	add    eax,ebx
  40b2c4:	mov    DWORD PTR ds:0x4245ae,0x20c7
  40b2ce:	cmp    edi,eax
  40b2d0:	jmp    0x40b3b5
  40b2d5:	push   edi
  40b2d6:	pop    es
  40b2d7:	popf   
  40b2d8:	aam    0x6d
  40b2da:	fs push edi
  40b2dc:	test   DWORD PTR [edx+0x5de65a33],edx
  40b2e2:	xchg   ecx,eax
  40b2e3:	or     al,0x67
  40b2e5:	pop    ecx
  40b2e6:	cmp    al,0x7e
  40b2e8:	jle    0x40b2a0
  40b2ea:	jle    0x40b36a
  40b2ec:	jle    0x40b324
  40b2ee:	stos   DWORD PTR es:[edi],eax
  40b2ef:	int3   
  40b2f0:	cmp    dl,BYTE PTR [esp+edi*4]
  40b2f3:	or     BYTE PTR [edi],bh
  40b2f5:	out    0xa2,eax
  40b2f7:	dec    ebx
  40b2f8:	ins    DWORD PTR es:[edi],dx
  40b2f9:	jecxz  0x40b31f
  40b2fb:	jg     0x40b2b6
  40b2fd:	add    ch,BYTE PTR [esi-0x1e]
  40b300:	xchg   esp,eax
  40b301:	out    dx,al
  40b302:	inc    ebx
  40b303:	pusha  
  40b304:	aaa    
  40b305:	jb     0x40b32c
  40b307:	adc    dh,BYTE PTR [ecx-0x3a]
  40b30a:	or     cl,BYTE PTR [ecx+0x16]
  40b30d:	lea    edi,[edx]
  40b30f:	xor    bh,BYTE PTR [edi-0x68]
  40b312:	sbb    al,0xb5
  40b314:	cli    
  40b315:	iret   
  40b316:	cmp    eax,0x1b932014
  40b31b:	xchg   ecx,eax
  40b31c:	sub    BYTE PTR [eax],ch
  40b31e:	sub    DWORD PTR [edx],ebx
  40b320:	repnz cli 
  40b322:	dec    esp
  40b323:	shl    BYTE PTR [edi],cl
  40b325:	jmp    0x22c4:0xf909d45d
  40b32c:	sbb    BYTE PTR [ecx+0x69cfecd8],0xe4
  40b333:	push   edx
  40b334:	enter  0xbc69,0x60
  40b338:	mov    cl,0x3
  40b33a:	push   DWORD PTR [eax+0x6f4eab33]
  40b340:	outs   dx,BYTE PTR ds:[esi]
  40b341:	add    ebx,DWORD PTR [edi+0x1a]
  40b344:	push   edi
  40b345:	dec    edx
  40b346:	xchg   ebp,eax
  40b347:	mov    bl,0x92
  40b349:	push   cs
  40b34a:	es clc 
  40b34c:	int    0xd9
  40b34e:	pop    es
  40b34f:	pop    ecx
  40b350:	push   edi
  40b351:	popa   
  40b352:	jl     0x40b33c
  40b354:	mov    ebp,0x5b982132
  40b359:	push   0x5280d728
  40b35e:	adc    eax,0x1d7c8136
  40b363:	aaa    
  40b364:	leave  
  40b365:	fsubr  DWORD PTR [ecx]
  40b367:	shl    esi,cl
  40b369:	lea    ecx,[eax+edi*4+0x4c]
  40b36d:	cmc    
  40b36e:	bound  edx,QWORD PTR [eax]
  40b370:	xchg   cl,bl
  40b372:	lds    edi,FWORD PTR [ebx-0x25]
  40b375:	fldcw  WORD PTR [eax]
  40b377:	xchg   edx,eax
  40b378:	jae    0x40b313
  40b37a:	xor    BYTE PTR [ecx+0x15bc5356],bl
  40b380:	dec    edi
  40b381:	rcr    BYTE PTR [esi],0xdd
  40b384:	pop    eax
  40b385:	pop    ebp
  40b386:	cmc    
  40b387:	xlat   BYTE PTR ds:[ebx]
  40b388:	std    
  40b389:	mov    al,ds:0xb4686d4c
  40b38e:	popa   
  40b38f:	push   0x91f0702b
  40b394:	jo     0x40b3ad
  40b396:	sahf   
  40b397:	pushf  
  40b398:	leave  
  40b399:	out    0x11,eax
  40b39b:	shl    DWORD PTR [eax+0x50a9fd01],0x52
  40b3a2:	xor    eax,0x2a979cf1
  40b3a7:	add    esp,DWORD PTR [ebp-0x53]
  40b3aa:	xchg   ecx,eax
  40b3ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3ac:	push   edx
  40b3ad:	xor    ebx,DWORD PTR [esi-0x80]
  40b3b0:	dec    ecx
  40b3b1:	add    BYTE PTR [edx-0x7af0fb1a],dh
  40b3b7:	pop    DWORD PTR ds:0x75ff0000
  40b3bd:	or     bh,al
  40b3bf:	add    eax,0x41abe2
  40b3c4:	xor    eax,0xe8000079
  40b3c9:	adc    al,0xf2
  40b3cb:	(bad)  
  40b3cc:	inc    DWORD PTR [ecx+0x41237c25]
  40b3d2:	add    BYTE PTR [eax],al
  40b3d4:	add    BYTE PTR [eax],al
  40b3d6:	add    cl,ch
  40b3d8:	sldt   WORD PTR [eax]
  40b3db:	add    BYTE PTR [ebx],dh
  40b3dd:	leave  
  40b3de:	add    ecx,DWORD PTR ds:0x41237c
  40b3e4:	inc    ecx
  40b3e5:	mov    DWORD PTR ds:0x41237c,ecx
  40b3eb:	cmp    DWORD PTR ds:0x41237c,0x18
  40b3f2:	jae    0x40b452
  40b3f8:	cmp    DWORD PTR ds:0x41237c,0x24
  40b3ff:	jne    0x40b40e
  40b405:	push   DWORD PTR [ebp-0x14]
  40b408:	call   DWORD PTR ds:0x40d02c
  40b40e:	jmp    0x40b3dc
  40b413:	mov    DWORD PTR ds:0x415101,0x17
  40b41d:	cmp    DWORD PTR ds:0x415101,0x0
  40b424:	je     0x40b452
  40b42a:	cmp    DWORD PTR ds:0x415101,0x1d
  40b431:	jne    0x40b440
  40b437:	push   DWORD PTR [ebp-0xc]
  40b43a:	call   DWORD PTR ds:0x40d3a4
  40b440:	mov    esi,DWORD PTR ds:0x415101
  40b446:	dec    esi
  40b447:	mov    DWORD PTR ds:0x415101,esi
  40b44d:	jmp    0x40b41d
  40b452:	mov    DWORD PTR [ebp-0x20],eax
  40b455:	and    DWORD PTR ds:0x4245c2,0x0
  40b45f:	mov    eax,ds:0x4245c2
  40b464:	inc    eax
  40b465:	mov    ds:0x4245c2,eax
  40b46a:	cmp    DWORD PTR ds:0x4245c2,0x6
  40b471:	jne    0x40b485
  40b477:	push   DWORD PTR [ebp-0x10]
  40b47a:	push   0x41ad5b
  40b47f:	call   DWORD PTR ds:0x40d20c
  40b485:	cmp    DWORD PTR ds:0x4245c2,0x5
  40b48c:	jne    0x40b4a0
  40b492:	xor    eax,eax
  40b494:	or     eax,DWORD PTR ds:0x4245c2
  40b49a:	inc    eax
  40b49b:	mov    ds:0x4245c2,eax
  40b4a0:	cmp    DWORD PTR ds:0x4245c2,0x15
  40b4a7:	jb     0x40b45f
  40b4ad:	mov    DWORD PTR ds:0x41abca,0x15
  40b4b7:	cmp    DWORD PTR ds:0x41abca,0x0
  40b4be:	je     0x40b50b
  40b4c4:	cmp    DWORD PTR ds:0x41abca,0x22
  40b4cb:	jne    0x40b4f1
  40b4d1:	push   DWORD PTR [ebp-0x14]
  40b4d4:	push   DWORD PTR [ebp-0xc]
  40b4d7:	push   DWORD PTR [ebp-0x18]
  40b4da:	push   DWORD PTR [ebp-0x14]
  40b4dd:	push   DWORD PTR [ebp-0x1c]
  40b4e0:	push   DWORD PTR [ebp-0x1c]
  40b4e3:	push   0x15ca
  40b4e8:	push   DWORD PTR [ebp-0x28]
  40b4eb:	call   DWORD PTR ds:0x40d030
  40b4f1:	xor    ecx,ecx
  40b4f3:	or     ecx,DWORD PTR ds:0x41abca
  40b4f9:	dec    ecx
  40b4fa:	mov    DWORD PTR ds:0x41abca,ecx
  40b500:	jmp    0x40b4b7
  40b505:	sbb    DWORD PTR ds:0x41abd6,edi
  40b50b:	mov    eax,DWORD PTR [ebp-0x4]
  40b50e:	mov    ecx,DWORD PTR [ebp-0x20]
  40b511:	not    esi
  40b513:	mov    esi,0x7510859
  40b518:	xor    eax,esi
  40b51a:	sub    DWORD PTR ds:0x4245b6,0x7cc8
  40b524:	add    eax,ebx
  40b526:	cmp    ecx,eax
  40b528:	jmp    0x40b60d
  40b52d:	add    edi,ebx
  40b52f:	or     al,0xde
  40b531:	in     al,0xe9
  40b533:	loope  0x40b530
  40b535:	js     0x40b579
  40b537:	dec    ebp
  40b538:	inc    edi
  40b539:	jg     0x40b563
  40b53b:	pop    ecx
  40b53c:	adc    BYTE PTR [ecx-0x498181c3],0x7e
  40b543:	jle    0x40b5c3
  40b545:	cs dec ecx
  40b547:	mov    esi,0xcb060101
  40b54c:	mov    esp,0x259e64de
  40b551:	ins    DWORD PTR es:[edi],dx
  40b552:	test   ecx,eax
  40b554:	stos   BYTE PTR es:[edi],al
  40b555:	das    
  40b556:	inc    ebp
  40b557:	push   ebp
  40b558:	cmp    esi,DWORD PTR [esi-0x7d]
  40b55b:	inc    esi
  40b55c:	fstp   QWORD PTR [ebx-0x58cc33c6]
  40b562:	out    0xf8,eax
  40b564:	pushf  
  40b565:	shr    DWORD PTR [edx],1
  40b567:	ret    0x8ced
  40b56a:	cmp    BYTE PTR [ebp-0x3],0x8d
  40b56e:	(bad)  
  40b570:	jo     0x40b5b9
  40b572:	or     BYTE PTR [edi],dl
  40b574:	jo     0x40b50f
  40b576:	pop    ss
  40b577:	dec    edi
  40b578:	and    bl,bl
  40b57a:	and    BYTE PTR [ebx],bl
  40b57c:	mov    ah,0xee
  40b57e:	shl    bh,cl
  40b580:	push   es
  40b581:	mov    al,ds:0x9b8a28b1
  40b586:	mov    ds:0xa3d7fd1e,al
  40b58b:	mov    ds:0x3f8fd2fc,al
  40b590:	cmp    eax,0x9498007d
  40b595:	mov    ebx,0x587af881
  40b59a:	int3   
  40b59b:	sub    dl,ch
  40b59d:	xchg   edi,eax
  40b59e:	ins    BYTE PTR es:[edi],dx
  40b59f:	mov    dl,0x77
  40b5a1:	cmp    al,ah
  40b5a3:	inc    ebp
  40b5a4:	add    ah,al
  40b5a6:	ja     0x40b5cd
  40b5a8:	or     eax,0x7e57ef2a
  40b5ad:	cmp    ecx,ebp
  40b5af:	jl     0x40b57d
  40b5b1:	jbe    0x40b62b
  40b5b3:	gs stos DWORD PTR es:[edi],eax
  40b5b5:	repnz test al,0xc5
  40b5b8:	popa   
  40b5b9:	dec    ebx
  40b5ba:	(bad)  
  40b5bb:	and    BYTE PTR [ebp+0x1e621ad0],bl
  40b5c1:	pop    eax
  40b5c2:	lea    ecx,[edx]
  40b5c4:	mov    dh,0x29
  40b5c6:	fist   DWORD PTR [ebx-0x13]
  40b5c9:	jl     0x40b5d5
  40b5cb:	ds jns 0x40b581
  40b5ce:	mov    esi,0x16178139
  40b5d3:	adc    eax,0xcf942d3b
  40b5d8:	mov    WORD PTR [edx-0x4d],ds
  40b5db:	mov    esp,DWORD PTR [esi-0x65]
  40b5de:	cmp    al,0x8e
  40b5e0:	sub    DWORD PTR [ebp+ecx*8-0x79],eax
  40b5e4:	cmp    BYTE PTR [esp+eax*1],cl
  40b5e7:	cmc    
  40b5e8:	jg     0x40b583
  40b5ea:	cmp    eax,0x6d161f60
  40b5ef:	mov    esp,0x41458b2a
  40b5f4:	ret    0x7f0e
  40b5f7:	xor    BYTE PTR [edx],bl
  40b5f9:	jmp    FWORD PTR [ebp+0x7a]
  40b5fc:	and    BYTE PTR [ebp+0x16],al
  40b5ff:	cld    
  40b600:	adc    al,0x17
  40b602:	pop    DWORD PTR [ebp-0x41]
  40b605:	mov    ch,0x71
  40b607:	xchg   DWORD PTR [esi+eiz*1-0x2b],esp
  40b60b:	neg    BYTE PTR [ebx+0x542840f]
  40b611:	add    BYTE PTR [eax],al
  40b613:	sbb    DWORD PTR ds:0x415115,0x412368
  40b61d:	push   DWORD PTR [ebp-0x20]
  40b620:	jmp    0x40b705
  40b625:	sti    
  40b626:	loopne 0x40b67d
  40b628:	lock push ebp
  40b62a:	cdq    
  40b62b:	sti    
  40b62c:	jns    0x40b666
  40b62e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b62f:	pop    ecx
  40b630:	out    0x4a,al
  40b632:	xlat   BYTE PTR ds:[ebx]
  40b633:	ds sub ebp,ecx
  40b636:	xor    bh,BYTE PTR [esi+0x7e]
  40b639:	mov    dh,0x7e
  40b63b:	jle    0x40b6bb
  40b63d:	data16 or al,0x66
  40b640:	bound  ebp,QWORD PTR [esi-0x57]
  40b643:	cmc    
  40b644:	push   es
  40b645:	or     BYTE PTR [edx],ch
  40b647:	je     0x40b5f1
  40b649:	and    ah,BYTE PTR [ecx]
  40b64b:	shl    BYTE PTR [ebx],1
  40b64d:	sub    DWORD PTR [esi+eax*4],esi
  40b650:	sub    al,0xcf
  40b652:	mov    DWORD PTR [eax+0x3d55e552],eax
  40b658:	mov    bl,0x6d
  40b65a:	in     eax,dx
  40b65b:	pop    ds
  40b65c:	outs   dx,BYTE PTR ds:[esi]
  40b65d:	add    al,0x8a
  40b65f:	jmp    0xede0:0x4ab1d541
  40b666:	add    al,0xcd
  40b668:	jecxz  0x40b5ff
  40b66a:	cmp    al,0xd8
  40b66c:	mov    eax,0x859d48f
  40b671:	ins    DWORD PTR es:[edi],dx
  40b672:	dec    ebx
  40b673:	pop    ecx
  40b674:	lock or ecx,DWORD PTR [edi]
  40b677:	mov    ds:0xe5d05927,al
  40b67c:	pushf  
  40b67d:	xor    cl,BYTE PTR [edi+ebx*4]
  40b680:	test   al,0x26
  40b682:	fbld   TBYTE PTR [ebx+0xc1cec27]
  40b688:	sub    al,0x5e
  40b68a:	iret   
  40b68b:	pop    esp
  40b68c:	or     BYTE PTR [ecx+0x3e4a169a],ah
  40b692:	fisttp QWORD PTR [ebp+0x2b]
  40b695:	popa   
  40b696:	xchg   esp,eax
  40b697:	mov    eax,0x878a329e
  40b69c:	test   al,0xed
  40b69e:	jge    0x40b6f9
  40b6a0:	push   ebp
  40b6a1:	or     al,0xf1
  40b6a3:	sbb    al,al
  40b6a5:	(bad)  [ebx]
  40b6a7:	mov    ebx,0xbee5842b
  40b6ac:	xchg   esp,eax
  40b6ad:	jbe    0x40b715
  40b6af:	xor    DWORD PTR [edi+eax*4-0x39f07b34],esp
  40b6b6:	into   
  40b6b7:	add    edi,DWORD PTR ss:0x9436c5be
  40b6be:	or     edi,DWORD PTR [edx-0x29]
  40b6c1:	fwait
  40b6c2:	mov    ch,BYTE PTR [ecx+0x11]
  40b6c5:	add    DWORD PTR [eax-0x3b],0xffffff84
  40b6c9:	fmulp  st(1),st
  40b6cb:	leave  
  40b6cc:	enter  0x33c5,0x19
  40b6d0:	lahf   
  40b6d1:	dec    edi
  40b6d2:	jno    0x40b698
  40b6d4:	jbe    0x40b71f
  40b6d6:	adc    eax,0x3135c474
  40b6db:	pop    eax
  40b6dc:	pop    ebx
  40b6dd:	jo     0x40b723
  40b6df:	icebp  
  40b6e0:	pop    edx
  40b6e1:	mov    dh,0xa9
  40b6e3:	jg     0x40b6e6
  40b6e5:	ss (bad) 
  40b6e7:	out    dx,eax
  40b6e8:	cmp    BYTE PTR [edx],ah
  40b6ea:	aam    0x2b
  40b6ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6ed:	xchg   edx,eax
  40b6ee:	aad    0xec
  40b6f0:	mul    DWORD PTR [edi]
  40b6f2:	stc    
  40b6f3:	das    
  40b6f4:	(bad)  
  40b6f5:	push   esp
  40b6f6:	out    dx,eax
  40b6f7:	cmc    
  40b6f8:	xor    ebx,edx
  40b6fa:	iret   
  40b6fb:	add    edi,DWORD PTR [esi]
  40b6fd:	mov    dl,al
  40b6ff:	sub    DWORD PTR [esp+ecx*2],eax
  40b702:	daa    
  40b703:	or     ebp,DWORD PTR [edi+edi*8-0x4217f78b]
  40b70a:	out    dx,eax
  40b70b:	(bad)  
  40b70c:	dec    DWORD PTR [ecx]
  40b70e:	cmp    eax,0x41abde
  40b713:	mov    DWORD PTR [ebp-0x14],eax
  40b716:	mov    eax,DWORD PTR [ebp-0x4]
  40b719:	adc    ecx,DWORD PTR ds:0x412370
  40b71f:	mov    ecx,DWORD PTR [ebp-0x14]
  40b722:	adc    DWORD PTR ds:0x4245ba,0x45e4
  40b72c:	xor    eax,esi
  40b72e:	add    eax,ebx
  40b730:	mov    DWORD PTR ds:0x415111,0x202e
  40b73a:	cmp    ecx,eax
  40b73c:	mov    DWORD PTR ds:0x412364,0x4412
  40b746:	je     0x40bb55
  40b74c:	and    DWORD PTR ds:0x417e49,0x0
  40b756:	mov    eax,ds:0x417e49
  40b75b:	inc    eax
  40b75c:	mov    ds:0x417e49,eax
  40b761:	cmp    DWORD PTR ds:0x417e49,0x22
  40b768:	jne    0x40b798
  40b76e:	push   0x415115
  40b773:	push   0x2bf6
  40b778:	push   DWORD PTR [ebp-0x14]
  40b77b:	push   0x415111
  40b780:	push   DWORD PTR [ebp-0x10]
  40b783:	push   0x41adfd
  40b788:	push   0x4def
  40b78d:	push   0x3000
  40b792:	call   DWORD PTR ds:0x40d210
  40b798:	cmp    DWORD PTR ds:0x417e49,0x12
  40b79f:	jb     0x40b756
  40b7a5:	mov    eax,DWORD PTR [ebp-0x14]
  40b7a8:	mov    eax,DWORD PTR [eax+0x18]
  40b7ab:	movzx  ecx,BYTE PTR ds:0x417e4d
  40b7b2:	sbb    DWORD PTR ds:0x41237c,ecx
  40b7b8:	mov    DWORD PTR [ebp-0x20],eax
  40b7bb:	xor    eax,eax
  40b7bd:	or     eax,DWORD PTR ds:0x412390
  40b7c3:	xor    ecx,ecx
  40b7c5:	xor    ecx,DWORD PTR ds:0x417eaa
  40b7cb:	sub    ecx,eax
  40b7cd:	sub    eax,DWORD PTR [eax+ecx*1]
  40b7d0:	mov    eax,DWORD PTR [ebp-0x14]
  40b7d3:	sub    DWORD PTR ds:0x4245b6,0x1830
  40b7dd:	mov    ecx,DWORD PTR [ebp+0x8]
  40b7e0:	add    DWORD PTR ds:0x41235c,0x415101
  40b7ea:	add    ecx,DWORD PTR [eax+0x20]
  40b7ed:	mov    DWORD PTR [ebp-0x28],ecx
  40b7f0:	mov    DWORD PTR ds:0x417e59,0x1f
  40b7fa:	cmp    DWORD PTR ds:0x417e59,0x0
  40b801:	je     0x40b84b
  40b807:	cmp    DWORD PTR ds:0x417e59,0xf
  40b80e:	jne    0x40b823
  40b814:	push   DWORD PTR [ebp-0x1c]
  40b817:	push   DWORD PTR [ebp-0x10]
  40b81a:	push   DWORD PTR [ebp-0x28]
  40b81d:	call   DWORD PTR ds:0x40d034
  40b823:	cmp    DWORD PTR ds:0x417e59,0x10
  40b82a:	jne    0x40b83b
  40b830:	mov    eax,ds:0x417e59
  40b835:	dec    eax
  40b836:	mov    ds:0x417e59,eax
  40b83b:	mov    eax,ds:0x417e59
  40b840:	dec    eax
  40b841:	mov    ds:0x417e59,eax
  40b846:	jmp    0x40b7fa
  40b84b:	mov    eax,DWORD PTR [ebp-0x14]
  40b84e:	mov    ecx,DWORD PTR [ebp+0x8]
  40b851:	add    ecx,DWORD PTR [eax+0x24]
  40b854:	jmp    0x40b939
  40b859:	mov    ch,0x76
  40b85b:	or     DWORD PTR [ecx+ecx*2+0x59],eax
  40b85f:	pop    ecx
  40b860:	pop    es
  40b861:	aas    
  40b862:	mov    edx,0x15423e6
  40b867:	iret   
  40b868:	cmp    al,0x21
  40b86a:	xor    edi,DWORD PTR [esi+0x7e]
  40b86d:	mov    dh,0x7e
  40b86f:	jle    0x40b8ef
  40b871:	int    0x91
  40b873:	ins    BYTE PTR es:[edi],dx
  40b874:	adc    BYTE PTR [edi-0x3a],ah
  40b877:	xchg   DWORD PTR [ecx+0x6c],eax
  40b87a:	loop   0x40b8c9
  40b87c:	xchg   ebp,eax
  40b87d:	pusha  
  40b87e:	scas   al,BYTE PTR es:[edi]
  40b87f:	sbb    eax,0x54800b36
  40b884:	retf   
  40b885:	mov    ebp,0x402d8d45
  40b88a:	cmp    cl,BYTE PTR ds:0x15160d71
  40b890:	nop
  40b891:	mov    ebx,0x1dd10f0d
  40b896:	cmc    
  40b897:	mov    esp,0x85c24509
  40b89c:	or     al,0xef
  40b89e:	mov    esp,0x3b797c0d
  40b8a3:	int3   
  40b8a4:	push   ss
  40b8a5:	cmc    
  40b8a6:	(bad)  
  40b8a7:	gs iret 
  40b8a9:	mov    dl,0xe8
  40b8ab:	sub    ch,ch
  40b8ad:	xchg   ebx,eax
  40b8ae:	fmul   QWORD PTR cs:[edx-0x3d]
  40b8b2:	mov    ebp,0x89f9b4b8
  40b8b7:	xlat   BYTE PTR ds:[ebx]
  40b8b8:	mov    ecx,0x72b8fbd6
  40b8bd:	fld    TBYTE PTR [edi+0x57c35522]
  40b8c3:	dec    ecx
  40b8c4:	mov    esp,0xa4b3f9bf
  40b8c9:	push   esi
  40b8ca:	push   ecx
  40b8cb:	repnz or eax,ecx
  40b8ce:	daa    
  40b8cf:	push   esi
  40b8d0:	xor    ecx,DWORD PTR [esi]
  40b8d2:	js     0x40b944
  40b8d4:	imul   ecx,DWORD PTR [esi+ecx*2],0x25cc1b9d
  40b8db:	jno    0x40b930
  40b8dd:	loop   0x40b8cd
  40b8df:	ror    BYTE PTR [ebp+0x1e],cl
  40b8e2:	bound  edi,QWORD PTR ds:0x92313ae7
  40b8e8:	lea    ebp,[ebp+0x9fd8978]
  40b8ee:	xchg   edi,eax
  40b8ef:	jae    0x40b87a
  40b8f1:	mov    dl,0xdb
  40b8f3:	or     DWORD PTR [edx],edi
  40b8f5:	in     eax,0x66
  40b8f7:	frstor [edi]
  40b8f9:	cli    
  40b8fa:	pop    edi
  40b8fb:	cmp    eax,0x9793d68f
  40b900:	(bad)  
  40b901:	ror    eax,1
  40b903:	nop
  40b904:	fdiv   QWORD PTR [edi]
  40b906:	jne    0x40b8e1
  40b908:	sbb    eax,eax
  40b90a:	jg     0x40b8a2
  40b90c:	mov    ebx,DWORD PTR [eax-0x71]
  40b90f:	imul   DWORD PTR [esi+0x387e3354]
  40b915:	sub    ah,dl
  40b917:	addr16 pop ds
  40b919:	outs   dx,DWORD PTR ds:[esi]
  40b91a:	dec    ecx
  40b91b:	sub    ah,bh
  40b91d:	jne    0x40b90c
  40b91f:	ds push cs
  40b921:	outs   dx,DWORD PTR ds:[esi]
  40b922:	mov    dh,0xd8
  40b924:	shl    BYTE PTR [eiz*8-0x4c975e76],1
  40b92b:	shl    BYTE PTR [edx+0x4f],0x14
  40b92f:	adc    al,0xe9
  40b931:	push   edi
  40b932:	push   eax
  40b933:	ja     0x40b987
  40b935:	or     bh,bh
  40b937:	outs   dx,DWORD PTR ds:[esi]
  40b938:	fimul  WORD PTR [ecx+0x458bd44d]
  40b93e:	in     al,dx
  40b93f:	mov    ecx,DWORD PTR [ebp+0x8]
  40b942:	add    ecx,DWORD PTR [eax+0x1c]
  40b945:	xor    esi,esi
  40b947:	mov    DWORD PTR [ebp-0x14],ecx
  40b94a:	mov    eax,DWORD PTR [ebp-0x28]
  40b94d:	mov    ecx,DWORD PTR [ebp+0x8]
  40b950:	add    ecx,DWORD PTR [eax+edi*4]
  40b953:	jmp    0x40ba38
  40b958:	pop    ss
  40b959:	pusha  
  40b95a:	pop    esp
  40b95b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b95c:	jns    0x40b916
  40b95e:	out    0x61,eax
  40b960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b961:	push   ds
  40b962:	jg     0x40b96d
  40b964:	cwde   
  40b965:	ss push es
  40b967:	vmwrite esi,DWORD PTR [ebx]
  40b96a:	jle    0x40b9ea
  40b96c:	mov    dh,0x7e
  40b96e:	jle    0x40b9ee
  40b970:	bound  esp,QWORD PTR [esi-0x58039962]
  40b976:	hlt    
  40b977:	imul   esp,DWORD PTR [ebp+0x2f],0x162ebd0e
  40b97e:	aam    0x43
  40b980:	mov    bl,BYTE PTR [edi+0x2e6642c]
  40b986:	inc    esi
  40b987:	add    esi,DWORD PTR [ecx+ebx*2-0x68]
  40b98b:	add    BYTE PTR [ecx],bl
  40b98d:	xor    BYTE PTR [edx+0x3],ch
  40b990:	cmp    bl,BYTE PTR [edx+0x54]
  40b993:	mov    esi,0xdac5bc17
  40b998:	xor    BYTE PTR [edx],0x85
  40b99b:	call   0x9fb9:0xc08aa3de
  40b9a2:	packssdw mm2,QWORD PTR [ebx+0x285752ad]
  40b9a9:	cld    
  40b9aa:	rcr    bl,1
  40b9ac:	repz repnz sahf 
  40b9af:	lods   eax,DWORD PTR ds:[esi]
  40b9b0:	jo     0x40b9ad
  40b9b2:	mov    ah,0xb1
  40b9b4:	mov    ebp,DWORD PTR [edx+ecx*8]
  40b9b7:	test   eax,0x809c8a98
  40b9bc:	push   es
  40b9bd:	lahf   
  40b9be:	pop    es
  40b9bf:	sub    bh,BYTE PTR [eax+esi*8-0x60]
  40b9c3:	mov    dh,0xae
  40b9c5:	mov    dl,0x5d
  40b9c7:	mov    ch,0xce
  40b9c9:	xchg   ebp,eax
  40b9ca:	jno    0x40b9f9
  40b9cc:	cs loopne 0x40ba15
  40b9cf:	in     al,dx
  40b9d0:	xchg   ebx,eax
  40b9d1:	push   edi
  40b9d2:	pop    eax
  40b9d3:	sbb    DWORD PTR [eax-0x68375762],0xd6b7b31c
  40b9dd:	pop    ecx
  40b9de:	push   ecx
  40b9df:	arpl   WORD PTR [edx-0x21],ax
  40b9e2:	int3   
  40b9e3:	dec    esp
  40b9e4:	int3   
  40b9e5:	mov    ds:0x8aa3c5cd,eax
  40b9ea:	div    DWORD PTR [edx]
  40b9ec:	cmp    ch,BYTE PTR [esp+ecx*1+0x22]
  40b9f0:	inc    ebx
  40b9f1:	xor    DWORD PTR ds:0x2f3902c8,edi
  40b9f7:	jno    0x40ba02
  40b9f9:	retf   
  40b9fa:	xchg   ebp,eax
  40b9fb:	cwde   
  40b9fc:	iret   
  40b9fd:	cs jmp 0xff97:0xb0fb0ecc
  40ba05:	jmp    0xc5ed:0x475669d3
  40ba0c:	dec    eax
  40ba0d:	mov    ds:0x83cfe412,eax
  40ba12:	neg    al
  40ba14:	mov    ebp,0xee0cafca
  40ba19:	adc    ah,BYTE PTR [ecx]
  40ba1b:	(bad)  
  40ba1c:	jo     0x40b9a2
  40ba1e:	lds    eax,FWORD PTR [eax]
  40ba20:	or     ch,dh
  40ba22:	jno    0x40b9bc
  40ba24:	retf   
  40ba25:	add    BYTE PTR [eax+ecx*8],bh
  40ba28:	ds adc eax,0x867a44cb
  40ba2e:	inc    esp
  40ba2f:	mov    edx,0x28bf7e38
  40ba34:	cmp    ecx,DWORD PTR [ebx+0x1f]
  40ba37:	dec    ebx
  40ba38:	lea    eax,[ebp-0x8]
  40ba3b:	mov    DWORD PTR [ebp-0x30],ecx
  40ba3e:	push   eax
  40ba3f:	push   DWORD PTR [ebp-0x30]
  40ba42:	push   DWORD PTR [ebp+0xc]
  40ba45:	call   0x408325
  40ba4a:	mov    eax,DWORD PTR [ebp-0x4]
  40ba4d:	mov    ecx,DWORD PTR [ebp-0x8]
  40ba50:	xor    eax,0x7510859
  40ba55:	add    eax,ebx
  40ba57:	cmp    ecx,eax
  40ba59:	jne    0x40bb61
  40ba5f:	mov    eax,DWORD PTR [ebp-0x20]
  40ba62:	jmp    0x40bb47
  40ba67:	test   BYTE PTR [ebx+0x5b],al
  40ba6a:	scas   al,BYTE PTR es:[edi]
  40ba6b:	pop    ecx
  40ba6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba6d:	jns    0x40bae8
  40ba6f:	and    BYTE PTR [ebx+0x63],cl
  40ba72:	lock nop
  40ba74:	imul   edx,edx,0x7e30b113
  40ba7a:	jle    0x40ba32
  40ba7c:	jle    0x40bafc
  40ba7e:	jle    0x40ba30
  40ba80:	int    0x40
  40ba82:	sbb    eax,0x6512ac82
  40ba87:	int    0xc9
  40ba89:	dec    eax
  40ba8a:	sub    al,0xf6
  40ba8c:	inc    eax
  40ba8d:	inc    eax
  40ba8e:	rcl    edi,cl
  40ba90:	pop    ss
  40ba91:	in     al,dx
  40ba92:	mov    edx,edi
  40ba94:	ficomp DWORD PTR [edi]
  40ba96:	(bad)  
  40ba97:	or     esi,DWORD PTR [esi+0x18674658]
  40ba9d:	jmp    0xdb37:0xdce90277
  40baa4:	daa    
  40baa5:	shr    DWORD PTR [eax-0x20f7787a],cl
  40baab:	scas   eax,DWORD PTR es:[edi]
  40baac:	stos   DWORD PTR es:[edi],eax
  40baad:	imul   esp,DWORD PTR [edi-0xc65e41a],0x73
  40bab4:	repz or al,0x45
  40bab7:	add    ah,BYTE PTR [eax+0x58d3fadd]
  40babd:	shl    BYTE PTR fs:[ebx+eax*1+0x7e],0x9c
  40bac3:	push   edx
  40bac4:	(bad)  
  40bac6:	out    0x83,al
  40bac8:	xchg   ebp,eax
  40bac9:	mov    dl,cl
  40bacb:	data16 int3 
  40bacd:	push   0x66
  40bacf:	sbb    DWORD PTR [ebp+0x77],0x47b94409
  40bad6:	in     al,dx
  40bad7:	jmp    0xd8f3c703
  40badc:	jns    0x40bace
  40bade:	sti    
  40badf:	popa   
  40bae0:	imul   edi,DWORD PTR [eax+0x6c1bc0ee],0x316fc1b
  40baea:	xchg   ecx,eax
  40baeb:	xor    ch,BYTE PTR [esi-0x5c5d7233]
  40baf1:	retf   0x6f27
  40baf4:	xor    DWORD PTR [edi-0x44],ebx
  40baf7:	int    0xb
  40baf9:	psubsb mm4,QWORD PTR ds:0x6a9e3e5a
  40bb00:	jmp    0x40ba82
  40bb02:	(bad)  
  40bb03:	in     al,dx
  40bb04:	adc    eax,ebx
  40bb06:	jnp    0x40bb6d
  40bb08:	popf   
  40bb09:	shl    BYTE PTR [edx],1
  40bb0b:	data16 mov BYTE PTR [ebx+eax*8],ch
  40bb0f:	mov    cl,dl
  40bb11:	rep ins BYTE PTR es:[edi],dx
  40bb13:	test   al,0x8f
  40bb15:	pcmpeqb mm4,QWORD PTR [edi-0x4db7ed1]
  40bb1c:	loopne 0x40bb58
  40bb1e:	cmp    al,0xfe
  40bb20:	xor    al,0xa8
  40bb22:	outs   dx,BYTE PTR ds:[esi]
  40bb23:	inc    esp
  40bb24:	jp     0x40bac4
  40bb26:	pop    edx
  40bb27:	sbb    al,0x95
  40bb29:	cmp    DWORD PTR ds:0x949fdd49,ecx
  40bb2f:	pop    es
  40bb30:	and    DWORD PTR [edi+0x74263fde],0x2cbe468d
  40bb3a:	push   edx
  40bb3b:	cmp    ah,BYTE PTR [ebp-0x6cf0a292]
  40bb41:	cmp    BYTE PTR [edi-0x4c55049a],cl
  40bb47:	inc    edi
  40bb48:	cmp    edi,eax
  40bb4a:	jb     0x40b2a5
  40bb50:	jmp    0x40bb71
  40bb55:	mov    eax,DWORD PTR [ebp-0x4]
  40bb58:	xor    eax,esi
  40bb5a:	add    eax,ebx
  40bb5c:	jmp    0x40c696
  40bb61:	mov    eax,DWORD PTR [ebp-0x2c]
  40bb64:	movzx  eax,WORD PTR [eax+edi*2]
  40bb68:	mov    ecx,DWORD PTR [ebp-0x14]
  40bb6b:	mov    eax,DWORD PTR [ecx+eax*4]
  40bb6e:	mov    DWORD PTR [ebp+0xc],eax
  40bb71:	mov    eax,DWORD PTR [ebp-0x4]
  40bb74:	mov    ecx,DWORD PTR [ebp-0x8]
  40bb77:	xor    eax,0x7510859
  40bb7c:	add    eax,ebx
  40bb7e:	cmp    ecx,eax
  40bb80:	jne    0x40bb93
  40bb86:	mov    eax,DWORD PTR [ebp-0x4]
  40bb89:	xor    eax,0x7510859
  40bb8e:	jmp    0x40bb5a
  40bb93:	mov    eax,DWORD PTR [ebp+0xc]
  40bb96:	add    eax,DWORD PTR [ebp+0x8]
  40bb99:	mov    DWORD PTR [ebp-0x10],eax
  40bb9c:	mov    eax,DWORD PTR [ebp-0x1c]
  40bb9f:	test   eax,eax
  40bba1:	je     0x40c2b4
  40bba7:	mov    DWORD PTR [ebp-0x24],esi
  40bbaa:	push   0xb
  40bbac:	pop    ecx
  40bbad:	push   0x5
  40bbaf:	dec    ecx
  40bbb0:	jmp    0x40bc95
  40bbb5:	pop    ss
  40bbb6:	imul   dh
  40bbb8:	mov    bl,0x6f
  40bbba:	jnp    0x40bb77
  40bbbc:	push   0xffffffce
  40bbbe:	pop    ecx
  40bbbf:	and    esi,ebx
  40bbc1:	mov    bl,0xd1
  40bbc3:	out    0xbe,al
  40bbc5:	mov    DWORD PTR [ecx],esi
  40bbc7:	jle    0x40bc47
  40bbc9:	mov    dh,0x7e
  40bbcb:	jle    0x40bc4b
  40bbcd:	adc    bh,dl
  40bbcf:	sub    BYTE PTR [edi],bl
  40bbd1:	or     ecx,DWORD PTR [edx]
  40bbd3:	bound  edx,QWORD PTR [edi+0x25]
  40bbd6:	and    eax,0xda07e09f
  40bbdb:	les    edx,FWORD PTR [edx+0x60]
  40bbde:	pop    ebx
  40bbdf:	mov    ebx,0x75729753
  40bbe4:	cmp    esi,DWORD PTR [edi]
  40bbe6:	jg     0x40bc38
  40bbe8:	lea    ebp,[ecx+0x77]
  40bbeb:	dec    esi
  40bbec:	adc    eax,0x533f60ef
  40bbf1:	fadd   DWORD PTR [eax-0x9]
  40bbf4:	and    edx,DWORD PTR [ebx+0xe]
  40bbf7:	and    DWORD PTR [edx+0x37f5dcab],eax
  40bbfd:	call   0x41f9:0x78d0
  40bc03:	fmul   QWORD PTR [eax]
  40bc05:	fild   WORD PTR [eax+0x2b43121b]
  40bc0b:	loope  0x40bc85
  40bc0d:	cmp    BYTE PTR [ebp-0x722ce149],dl
  40bc13:	jae    0x40bc58
  40bc15:	xor    bh,0xaf
  40bc18:	mov    al,ds:0xb8c54fed
  40bc1d:	std    
  40bc1e:	iret   
  40bc1f:	and    eax,0x3091e189
  40bc24:	cmc    
  40bc25:	mov    ds:0xc9ac6b98,eax
  40bc2a:	jle    0x40bc9d
  40bc2c:	xchg   ebx,eax
  40bc2d:	mov    dh,0x93
  40bc2f:	aad    0x32
  40bc31:	mov    edi,0x6911ab4a
  40bc36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc37:	stc    
  40bc38:	jno    0x40bbc9
  40bc3a:	xchg   ebp,eax
  40bc3b:	mov    esi,0x42672390
  40bc40:	xchg   BYTE PTR [ecx+ecx*4+0x18],ch
  40bc44:	sbb    bl,BYTE PTR [eax]
  40bc46:	stos   DWORD PTR es:[edi],eax
  40bc47:	jp     0x40bc8f
  40bc49:	mov    esp,0x9421189f
  40bc4e:	xchg   esi,eax
  40bc4f:	dec    eax
  40bc50:	adc    al,0x3e
  40bc52:	outs   dx,DWORD PTR ds:[esi]
  40bc53:	clc    
  40bc54:	fwait
  40bc55:	in     eax,0xa5
  40bc57:	fsubr  QWORD PTR [eax]
  40bc59:	addr16 push ds
  40bc5b:	ret    0x83c9
  40bc5e:	(bad)  
  40bc5f:	cmp    edx,esp
  40bc61:	inc    edx
  40bc62:	sbb    ebx,DWORD PTR [edi-0x2d]
  40bc65:	sbb    BYTE PTR [esi+eiz*2-0x68],bl
  40bc69:	pop    edi
  40bc6a:	stos   DWORD PTR es:[edi],eax
  40bc6b:	icebp  
  40bc6c:	xor    eax,0xae0808e9
  40bc71:	mov    dh,0x90
  40bc73:	inc    eax
  40bc74:	mov    WORD PTR [ecx+eax*8-0x26382b05],cs
  40bc7b:	inc    esp
  40bc7c:	cdq    
  40bc7d:	mov    dh,0x7a
  40bc7f:	sti    
  40bc80:	sub    DWORD PTR [ecx-0x74dce704],0xfffffff1
  40bc87:	lods   eax,DWORD PTR ds:[esi]
  40bc88:	ret    
  40bc89:	outs   dx,DWORD PTR ds:[esi]
  40bc8a:	dec    ebx
  40bc8b:	imul   esp,DWORD PTR [ebx+0x3f],0x24
  40bc8f:	(bad)  
  40bc90:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40bc92:	mov    al,0x62
  40bc94:	in     eax,0x5b
  40bc96:	xchg   ebx,ecx
  40bc98:	sub    ebx,ecx
  40bc9a:	xchg   ebx,ecx
  40bc9c:	dec    ecx
  40bc9d:	mov    eax,DWORD PTR [ebp-0x1c]
  40bca0:	imul   eax,ecx
  40bca3:	sub    esp,eax
  40bca5:	mov    DWORD PTR [ebp-0x24],esp
  40bca8:	mov    eax,DWORD PTR [ebp-0x4]
  40bcab:	mov    ecx,0x7510859
  40bcb0:	jmp    0x40bd95
  40bcb5:	xchg   edi,eax
  40bcb6:	adc    DWORD PTR [ecx+eax*2+0x78],0x79
  40bcbb:	mov    ebx,0xdff72d79
  40bcc0:	ins    DWORD PTR es:[edi],dx
  40bcc1:	in     eax,0x71
  40bcc3:	push   0x7e36c1f9
  40bcc8:	jle    0x40bc80
  40bcca:	jle    0x40bd4a
  40bccc:	jle    0x40bc79
  40bcce:	cmp    BYTE PTR [ebp+esi*1+0x22a57e34],0xd6
  40bcd6:	loopne 0x40bcc2
  40bcd8:	inc    ecx
  40bcd9:	out    dx,eax
  40bcda:	xor    eax,eax
  40bcdc:	fld    st(5)
  40bcde:	or     eax,0x8e047358
  40bce3:	mov    bl,0xd8
  40bce5:	xor    bh,BYTE PTR [edx-0x2fbb34f2]
  40bceb:	ja     0x40bced
  40bced:	and    dh,BYTE PTR [ecx]
  40bcef:	adc    bh,BYTE PTR [ecx]
  40bcf1:	push   eax
  40bcf2:	js     0x40bd41
  40bcf4:	lds    esi,FWORD PTR [eax+edi*8-0x5bd0c14b]
  40bcfb:	add    edi,DWORD PTR [edx-0x2ec6b528]
  40bd01:	in     eax,dx
  40bd02:	inc    esi
  40bd03:	add    eax,0xb9eb80ed
  40bd08:	mov    al,ds:0x9a33dcb1
  40bd0d:	(bad)  
  40bd0e:	sahf   
  40bd0f:	cld    
  40bd10:	sbb    eax,0x62ce910
  40bd15:	div    dh
  40bd17:	inc    eax
  40bd18:	add    al,0x37
  40bd1a:	cmp    eax,0xece492cb
  40bd1f:	inc    BYTE PTR [ecx+0x7d]
  40bd22:	jno    0x40bd1a
  40bd24:	push   cs
  40bd25:	add    al,0x16
  40bd27:	xchg   esp,eax
  40bd28:	lahf   
  40bd29:	jae    0x40bd95
  40bd2b:	sub    eax,0x91f62cc7
  40bd30:	push   esi
  40bd31:	inc    esp
  40bd32:	inc    eax
  40bd33:	adc    DWORD PTR [ecx+0x54],eax
  40bd36:	pop    ebx
  40bd37:	inc    esi
  40bd38:	in     eax,0x7d
  40bd3a:	scas   al,BYTE PTR es:[edi]
  40bd3b:	inc    eax
  40bd3c:	inc    edi
  40bd3d:	mov    ebp,DWORD PTR [ebx+0x74fe3372]
  40bd43:	retf   0xf96a
  40bd46:	pop    ds
  40bd47:	ins    BYTE PTR es:[edi],dx
  40bd48:	(bad)  
  40bd49:	in     al,dx
  40bd4a:	das    
  40bd4b:	shl    DWORD PTR [edi],cl
  40bd4d:	mov    ecx,DWORD PTR [eax-0x74]
  40bd50:	dec    ebx
  40bd51:	xor    DWORD PTR [eax],ecx
  40bd53:	and    BYTE PTR [edx+0x242d7344],ah
  40bd59:	and    eax,0x43bac203
  40bd5e:	mov    cs,WORD PTR [ebp+0x58d9aed8]
  40bd64:	sub    ch,BYTE PTR [edx]
  40bd66:	dec    ebx
  40bd67:	xchg   ebx,eax
  40bd68:	fst    DWORD PTR [ecx+0x50723b7]
  40bd6e:	add    bh,BYTE PTR [esi]
  40bd70:	in     al,0xa6
  40bd72:	sub    edi,DWORD PTR [edx-0x3]
  40bd75:	leave  
  40bd76:	dec    esi
  40bd77:	and    al,0x39
  40bd79:	hlt    
  40bd7a:	(bad)  
  40bd7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd7c:	inc    esp
  40bd7d:	or     eax,0x7b23e586
  40bd82:	mov    ss,WORD PTR [ecx-0x24]
  40bd85:	jmp    0x5f8888fe
  40bd8a:	cli    
  40bd8b:	inc    ebp
  40bd8c:	je     0x40bdfe
  40bd8e:	dec    esp
  40bd8f:	push   edx
  40bd90:	add    ch,BYTE PTR [ebp+0x3391335a]
  40bd96:	sar    DWORD PTR [edx+0x32729f],0x3
  40bd9d:	ret    0x4589
  40bda0:	or     BYTE PTR [ebx-0x3ecc17bb],cl
  40bda6:	add    eax,edx
  40bda8:	mov    edx,DWORD PTR [ebp+0x14]
  40bdab:	jmp    0x40be90
  40bdb0:	dec    DWORD PTR [ebx-0x47d6c7ef]
  40bdb6:	xchg   DWORD PTR [ecx-0x43979b07],edi
  40bdbc:	or     DWORD PTR [edx],ecx
  40bdbe:	cmp    esi,DWORD PTR [ecx+ebx*1-0x498181c9]
  40bdc5:	jle    0x40be45
  40bdc7:	jle    0x40bdf9
  40bdc9:	shl    BYTE PTR [ebp+0xafa93bb],1
  40bdcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdd2:	jmp    0xe928:0x77a37c3f
  40bdd9:	iret   
  40bdda:	cdq    
  40bddb:	arpl   ax,sp
  40bddd:	xchg   ebp,eax
  40bdde:	inc    BYTE PTR [esi]
  40bde0:	jmp    0xa5a1:0x990eb38a
  40bde7:	cmp    esi,esp
  40bde9:	in     eax,dx
  40bdea:	and    DWORD PTR [ebp+0x12d4f078],ecx
  40bdf0:	dec    ecx
  40bdf1:	test   al,0x4d
  40bdf3:	add    al,0xbf
  40bdf5:	jle    0x40bdc8
  40bdf7:	push   cs
  40bdf8:	imul   BYTE PTR [edi-0x30]
  40bdfb:	shl    BYTE PTR [ebx+0x37e20589],0xc6
  40be02:	rcr    BYTE PTR [edx+0x3b53172d],0x82
  40be09:	ins    DWORD PTR es:[edi],dx
  40be0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be0b:	fisub  DWORD PTR [esi]
  40be0d:	fisub  DWORD PTR [eax-0x49cb3b60]
  40be13:	sub    bh,ah
  40be15:	xlat   BYTE PTR ds:[ebx]
  40be16:	ficom  WORD PTR [edx+0x5431ff65]
  40be1c:	pop    ecx
  40be1d:	mov    WORD PTR ds:0x439c2f49,gs
  40be23:	bound  esi,QWORD PTR [ebp-0x2c30548f]
  40be29:	push   ebx
  40be2a:	imul   ebx,DWORD PTR [edx],0x71
  40be2d:	retf   0x53fa
  40be30:	cmovns di,si
  40be34:	test   eax,0x27004e99
  40be39:	retf   
  40be3a:	cld    
  40be3b:	sbb    BYTE PTR [esi+0x49],ah
  40be3e:	gs mov dh,0x2
  40be41:	dec    esi
  40be42:	or     BYTE PTR [ecx],al
  40be44:	xchg   ecx,eax
  40be45:	sbb    ebx,DWORD PTR [esi]
  40be47:	sbb    DWORD PTR [ebp-0xaaf9f08],edi
  40be4d:	sub    edi,DWORD PTR [ecx+0x29810a38]
  40be53:	adc    DWORD PTR [ecx],0x50fb1878
  40be59:	mov    dh,BYTE PTR [edi-0x2b57b266]
  40be5f:	fadd   QWORD PTR [edx+ebx*1]
  40be62:	jbe    0x40be48
  40be64:	and    bh,ch
  40be66:	or     al,0x67
  40be68:	jmp    0x40be1b
  40be6a:	jno    0x40be63
  40be6c:	inc    ecx
  40be6d:	fcmovu st,st(1)
  40be6f:	or     BYTE PTR [eax],ah
  40be71:	or     DWORD PTR [esi-0x7a2b5e4],edi
  40be77:	mov    bl,dh
  40be79:	pop    eax
  40be7a:	push   esp
  40be7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be7c:	pop    eax
  40be7d:	dec    ebx
  40be7e:	mov    ebx,0xfc972a99
  40be83:	mov    eax,ds:0xb88fe473
  40be88:	js     0x40be6d
  40be8a:	mov    es,ecx
  40be8c:	leave  
  40be8d:	enter  0x2eb2,0xf
  40be91:	scas   eax,DWORD PTR es:[edi]
  40be92:	add    ch,cl
  40be94:	loopne 0x40be96
  40be96:	add    BYTE PTR [eax],al
  40be98:	inc    ebp
  40be99:	loop   0x40be83
  40be9b:	xchg   edi,eax
  40be9c:	imul   esp,DWORD PTR [ebp-0x36f31fa7],0xe6a37640
  40bea6:	ja     0x40beaf
  40bea8:	push   ecx
  40bea9:	aaa    
  40beaa:	jle    0x40bf2a
  40beac:	mov    dh,0x7e
  40beae:	jle    0x40bf2e
  40beb0:	js     0x40bef6
  40beb2:	aam    0xf7
  40beb4:	jno    0x40be74
  40beb6:	mov    dh,0x92
  40beb8:	or     eax,edx
  40beba:	mov    dh,0xe5
  40bebc:	clc    
  40bebd:	cmp    edi,DWORD PTR [eax]
  40bebf:	rcl    DWORD PTR [ecx+0x47],0x58
  40bec3:	jp     0x40bec0
  40bec5:	sbb    al,0x9c
  40bec7:	jb     0x40bf1b
  40bec9:	bnd jge 0x40be82
  40becc:	mov    al,0xd8
  40bece:	mov    edi,0xb96e08bb
  40bed3:	fsubp  st(4),st
  40bed5:	xor    al,0xe5
  40bed7:	jle    0x40bee9
  40bed9:	sahf   
  40beda:	or     DWORD PTR [edi+0x73],ebp
  40bedd:	push   0x1bfb15f8
  40bee2:	or     DWORD PTR [edi-0x53],ecx
  40bee5:	dec    eax
  40bee6:	ret    0x7301
  40bee9:	fsubr  st(2),st
  40beeb:	stos   BYTE PTR es:[edi],al
  40beec:	pop    eax
  40beed:	test   DWORD PTR [esi-0x6e],esi
  40bef0:	out    dx,eax
  40bef1:	shr    DWORD PTR [esp+esi*2-0x8],0x31
  40bef6:	sahf   
  40bef7:	into   
  40bef8:	push   ss
  40bef9:	mov    ch,0x80
  40befb:	and    al,cl
  40befd:	or     al,0xa1
  40beff:	mov    ecx,0xdd46dcad
  40bf04:	jns    0x40bf2c
  40bf06:	or     edx,DWORD PTR [eax-0x74]
  40bf09:	jp     0x40bed2
  40bf0b:	or     ecx,DWORD PTR [edi]
  40bf0d:	jno    0x40bf49
  40bf0f:	xor    edi,DWORD PTR [ebp-0x12]
  40bf12:	fs mov bl,0x6e
  40bf15:	mov    dl,0x4c
  40bf17:	loop   0x40bf93
  40bf19:	(bad)  
  40bf1a:	in     eax,dx
  40bf1b:	pop    eax
  40bf1c:	leave  
  40bf1d:	hlt    
  40bf1e:	pop    ebx
  40bf1f:	addr16 jno 0x40bf74
  40bf22:	fwait
  40bf23:	in     eax,0xa3
  40bf25:	loopne 0x40bf97
  40bf27:	cmp    eax,0xbab7ed52
  40bf2c:	add    eax,DWORD PTR [esi+0x6dd64807]
  40bf32:	sub    BYTE PTR [eax],0x54
  40bf35:	scas   al,BYTE PTR es:[edi]
  40bf36:	retf   0x83e3
  40bf39:	or     al,0x68
  40bf3b:	repz not BYTE PTR [eax-0x10345a28]
  40bf42:	xlat   BYTE PTR ds:[ebx]
  40bf43:	ins    DWORD PTR es:[edi],dx
  40bf44:	aas    
  40bf45:	mov    dh,0x24
  40bf47:	scas   al,BYTE PTR es:[edi]
  40bf48:	cmp    ebp,DWORD PTR [eax]
  40bf4a:	in     al,0x4e
  40bf4c:	shl    BYTE PTR [edx-0x1c],0x76
  40bf50:	into   
  40bf51:	xchg   ecx,eax
  40bf52:	ret    
  40bf53:	mov    esp,0x9322bf63
  40bf58:	adc    dh,0xaa
  40bf5b:	jmp    0x40bfa8
  40bf5d:	sub    BYTE PTR [ebx],bl
  40bf5f:	das    
  40bf60:	add    al,0x93
  40bf62:	in     al,0x6
  40bf64:	dec    esp
  40bf65:	mov    ?,WORD PTR [edi+0x59946ed1]
  40bf6b:	xor    DWORD PTR es:[eax],edx
  40bf6e:	sbb    BYTE PTR [ebp-0x295494c5],0xd1
  40bf75:	jnp    0x40bfea
  40bf77:	fisttp QWORD PTR [ebx-0x2ecc03ab]
  40bf7d:	mov    ecx,DWORD PTR [ebp+0x8]
  40bf80:	lea    ecx,[edx+ecx*1+0x32729f]
  40bf87:	cmp    ecx,eax
  40bf89:	je     0x40c1ca
  40bf8f:	mov    edi,DWORD PTR [ebp-0x18]
  40bf92:	mov    eax,DWORD PTR [ebp+0x8]
  40bf95:	mov    edx,DWORD PTR [ebp+0x14]
  40bf98:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40bf9c:	jmp    0x40c081
  40bfa1:	pop    ss
  40bfa2:	sub    al,0x93
  40bfa4:	sub    edi,DWORD PTR [ecx+0x192097b9]
  40bfaa:	jne    0x40bf81
  40bfac:	stos   BYTE PTR es:[edi],al
  40bfad:	push   esp
  40bfae:	mov    ds:0x34a95c78,al
  40bfb3:	jle    0x40c033
  40bfb5:	mov    dh,0x7e
  40bfb7:	jle    0x40c037
  40bfb9:	sbb    al,dl
  40bfbb:	retf   0xf00f
  40bfbe:	imul   edi,DWORD PTR [esi+edi*4-0x3dafa4c8],0x34
  40bfc6:	into   
  40bfc7:	jae    0x40c020
  40bfc9:	push   ebx
  40bfca:	pop    esp
  40bfcb:	scas   eax,DWORD PTR es:[edi]
  40bfcc:	xor    dl,BYTE PTR [ecx-0x48e24625]
  40bfd2:	push   ebp
  40bfd3:	(bad)  
  40bfd4:	mov    ds:0xadb60b82,al
  40bfd9:	out    0xb3,eax
  40bfdb:	mov    dh,0x38
  40bfdd:	(bad)  
  40bfde:	jp     0x40c021
  40bfe0:	jmp    0x20f3:0x30c4e489
  40bfe7:	pop    ecx
  40bfe8:	push   ebx
  40bfe9:	sti    
  40bfea:	dec    edx
  40bfeb:	popa   
  40bfec:	add    eax,0x80dff5eb
  40bff1:	jmp    0x40c06d
  40bff3:	shr    BYTE PTR [esi],cl
  40bff5:	mov    DWORD PTR [edi+0x72ddcc6d],0x16783489
  40bfff:	sbb    edx,DWORD PTR [esi+0x1846643]
  40c005:	xlat   BYTE PTR ds:[ebx]
  40c006:	js     0x40c05c
  40c008:	aas    
  40c009:	add    al,0x3b
  40c00b:	jno    0x40c058
  40c00d:	ret    
  40c00e:	mov    ebp,0xd2e9d8f9
  40c013:	inc    esp
  40c014:	pusha  
  40c015:	into   
  40c016:	call   DWORD PTR [ebp+0x40e815a0]
  40c01c:	add    BYTE PTR [ecx],al
  40c01e:	add    BYTE PTR [edi-0x1c],bh
  40c021:	clc    
  40c022:	mov    edx,0x325e9a01
  40c027:	mov    edx,0xc752e4f8
  40c02c:	pop    edx
  40c02d:	jb     0x40bfeb
  40c02f:	lds    ebx,FWORD PTR [esp+edx*8]
  40c032:	mov    BYTE PTR [ecx+0x345962f3],dh
  40c038:	pmullw mm0,QWORD PTR [edi-0x5]
  40c03c:	jae    0x40c056
  40c03e:	or     edi,edi
  40c040:	push   edx
  40c041:	mov    eax,0xf7974802
  40c046:	adc    ebp,DWORD PTR [ebx]
  40c048:	je     0x40c092
  40c04a:	fs sti 
  40c04c:	test   DWORD PTR ds:0x3239258a,0x6e6c8939
  40c056:	xchg   esi,eax
  40c057:	xchg   edx,eax
  40c058:	(bad)  
  40c059:	ror    esp,cl
  40c05b:	repz inc ebx
  40c05d:	or     eax,0x73b9e9a5
  40c062:	dec    esi
  40c063:	cs xor al,ah
  40c066:	imul   esi,DWORD PTR [ebx-0x4a],0x15fac170
  40c06d:	imul   ebx,DWORD PTR [ecx-0x65a6a7a2],0x892fc78c
  40c077:	inc    edi
  40c078:	sub    cl,BYTE PTR [ebx-0xa6ce962]
  40c07e:	cmp    ch,0xe
  40c081:	mov    ecx,0x7510859
  40c086:	xor    edx,edx
  40c088:	xor    edi,ecx
  40c08a:	mov    esi,0x32729f
  40c08f:	add    edi,esi
  40c091:	div    edi
  40c093:	mov    edx,DWORD PTR [ebp-0x4]
  40c096:	xor    edx,ecx
  40c098:	lea    eax,[edx+eax*1+0x32729f]
  40c09f:	mov    edx,DWORD PTR [ebp+0x8]
  40c0a2:	mov    edi,DWORD PTR [ebp-0x24]
  40c0a5:	mov    DWORD PTR [edi+edx*4],eax
  40c0a8:	mov    eax,DWORD PTR [ebp-0x18]
  40c0ab:	mov    edx,DWORD PTR [ebp+0x8]
  40c0ae:	xor    eax,ecx
  40c0b0:	lea    eax,[eax+edx*1+0x32729f]
  40c0b7:	mov    DWORD PTR [ebp+0x8],eax
  40c0ba:	mov    eax,DWORD PTR [ebp-0x18]
  40c0bd:	mov    edx,DWORD PTR [ebp+0x14]
  40c0c0:	xor    eax,ecx
  40c0c2:	add    eax,esi
  40c0c4:	imul   eax,DWORD PTR [edx]
  40c0c7:	mov    edx,DWORD PTR [ebp-0x4]
  40c0ca:	xor    edx,ecx
  40c0cc:	mov    ecx,DWORD PTR [ebp+0x8]
  40c0cf:	jmp    0x40c1b4
  40c0d4:	mov    ebx,0x61b1c335
  40c0d9:	pop    ecx
  40c0da:	mov    ecx,0x5c6a2de5
  40c0df:	xchg   edi,eax
  40c0e0:	nop
  40c0e1:	push   es
  40c0e2:	add    al,0x67
  40c0e4:	loope  0x40c11b
  40c0e6:	jle    0x40c166
  40c0e8:	mov    dh,0x7e
  40c0ea:	jle    0x40c16a
  40c0ec:	aad    0x18
  40c0ee:	xchg   esp,eax
  40c0ef:	ja     0x40c0de
  40c0f1:	inc    ecx
  40c0f2:	push   esi
  40c0f3:	(bad)  
  40c0f4:	fisubr DWORD PTR [ecx]
  40c0f6:	out    0xad,al
  40c0f8:	(bad)  
  40c0f9:	mov    esp,0x988c33aa
  40c0fe:	cmp    esi,eax
  40c100:	push   ebp
  40c101:	cs or  eax,0x2d3505de
  40c107:	mov    WORD PTR [ecx-0x79],fs
  40c10a:	jge    0x40c0b7
  40c10c:	shl    BYTE PTR [edi],1
  40c10e:	push   es
  40c10f:	sbb    DWORD PTR [esi-0x3a],edi
  40c112:	mov    edi,0x2752bee8
  40c117:	or     BYTE PTR [ecx+ecx*8+0x6e0917ea],cl
  40c11e:	js     0x40c161
  40c120:	jg     0x40c12b
  40c122:	mov    al,ds:0xf8ac39c9
  40c127:	inc    ebp
  40c128:	push   edx
  40c129:	mov    DWORD PTR [edi],ebx
  40c12b:	mov    al,ds:0x1c15861b
  40c130:	mov    al,ds:0x40a81ad0
  40c135:	pop    ebp
  40c136:	sar    ch,cl
  40c138:	(bad)  
  40c139:	adc    al,0x92
  40c13b:	adc    al,0x4f
  40c13d:	sahf   
  40c13e:	jae    0x40c165
  40c140:	xor    edx,edx
  40c142:	inc    ebx
  40c143:	cmp    eax,0xabacaa0a
  40c148:	js     0x40c145
  40c14a:	sub    al,0x48
  40c14c:	in     eax,0xc9
  40c14e:	jbe    0x40c128
  40c150:	and    esp,esp
  40c152:	and    ch,BYTE PTR [ecx+ebx*1-0x6fddb74c]
  40c159:	add    eax,DWORD PTR [edi+0x34dd8e0d]
  40c15f:	push   ds
  40c160:	test   eax,0x1f085c82
  40c165:	xlat   BYTE PTR ds:[ebx]
  40c167:	fcomp  QWORD PTR [edx-0x6e4625c6]
  40c16d:	adc    cl,BYTE PTR [edx-0x46]
  40c170:	or     bl,dh
  40c172:	mov    edi,cs
  40c174:	sbb    ah,cl
  40c176:	dec    DWORD PTR [esi+edi*8+0x64622a27]
  40c17d:	faddp  st(4),st
  40c17f:	fnstsw WORD PTR [edx-0x20]
  40c182:	adc    DWORD PTR [esi+0x43e1e437],0x586977de
  40c18c:	push   es
  40c18d:	ret    0x4c6e
  40c190:	mov    bh,0xe
  40c192:	mov    ch,0xd2
  40c194:	sub    ebp,DWORD PTR [esi+0x5f]
  40c197:	or     edi,DWORD PTR [esi+0x58f37427]
  40c19d:	adc    eax,0xb03bfbe8
  40c1a2:	js     0x40c1b9
  40c1a4:	inc    ebp
  40c1a5:	nop
  40c1a6:	(bad)  
  40c1a7:	psllq  mm7,QWORD PTR [edi-0x7b17189a]
  40c1ae:	rep ins BYTE PTR es:[edi],dx
  40c1b0:	jae    0x40c1b9
  40c1b2:	mov    ah,0xae
  40c1b4:	lea    ecx,[edx+ecx*1+0x32729f]
  40c1bb:	cmp    ecx,eax
  40c1bd:	jne    0x40bf8f
  40c1c3:	mov    ebx,esi
  40c1c5:	jmp    0x40c2b4
  40c1ca:	mov    ebx,0x32729f
  40c1cf:	jmp    0x40c2b4
  40c1d4:	mov    al,0x75
  40c1d6:	or     eax,0x598459f4
  40c1db:	leave  
  40c1dc:	jns    0x40c1f9
  40c1de:	or     ah,BYTE PTR [ecx+0x423124be]
  40c1e4:	cmp    edx,ecx
  40c1e6:	jle    0x40c266
  40c1e8:	mov    dh,0x7e
  40c1ea:	jle    0x40c26a
  40c1ec:	xchg   edx,eax
  40c1ed:	dec    edi
  40c1ee:	aad    0x95
  40c1f0:	add    bl,BYTE PTR [edx-0x80]
  40c1f3:	mov    edx,0xb22eb794
  40c1f8:	cwde   
  40c1f9:	inc    edi
  40c1fa:	sbb    BYTE PTR [ebx],dh
  40c1fc:	sub    DWORD PTR [edi-0x62dbdac9],edi
  40c202:	lock mov eax,ds:0x8c2c1bfc
  40c208:	or     al,0x3c
  40c20a:	pushf  
  40c20b:	mov    ebx,ebx
  40c20d:	push   edi
  40c20e:	dec    edi
  40c20f:	jmp    0xbe2:0x6ec20902
  40c216:	ja     0x40c1e6
  40c218:	pushf  
  40c219:	in     eax,dx
  40c21a:	stc    
  40c21b:	mov    eax,ds:0x977cc0b9
  40c220:	lahf   
  40c221:	inc    edi
  40c222:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c223:	add    al,0xbb
  40c225:	adc    BYTE PTR [edx+0x15],ah
  40c228:	dec    eax
  40c229:	sbb    ch,BYTE PTR [edx]
  40c22b:	xchg   ecx,eax
  40c22c:	and    al,0x64
  40c22e:	fcom   QWORD PTR [esi]
  40c230:	hlt    
  40c231:	sbb    BYTE PTR ds:0xc504aa7a,ah
  40c237:	in     eax,dx
  40c238:	cmp    eax,0x5bac2e2f
  40c23d:	mov    ah,0xb2
  40c23f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c240:	fs loop 0x40c299
  40c243:	test   al,0x9b
  40c245:	jmp    0x40c1d6
  40c247:	adc    dl,cl
  40c249:	inc    edx
  40c24a:	aad    0x3e
  40c24c:	inc    edi
  40c24d:	mov    eax,DWORD PTR [ebp-0x11]
  40c250:	hlt    
  40c251:	iret   
  40c252:	gs inc ecx
  40c254:	xchg   edi,eax
  40c255:	aam    0xff
  40c257:	xor    eax,0x16541ddf
  40c25c:	icebp  
  40c25d:	ja     0x40c1fb
  40c25f:	out    0x83,al
  40c261:	jecxz  0x40c248
  40c263:	std    
  40c264:	jl     0x40c20e
  40c266:	imul   ecx,DWORD PTR [esi+0x3db99b4b],0x1a71072a
  40c270:	jno    0x40c2d2
  40c272:	dec    esp
  40c273:	dec    ecx
  40c274:	ins    BYTE PTR es:[edi],dx
  40c275:	fisub  DWORD PTR [ecx-0x51844266]
  40c27b:	loop   0x40c2c1
  40c27d:	jo     0x40c2c0
  40c27f:	inc    ecx
  40c280:	mov    ah,0xa7
  40c282:	sub    al,0x8a
  40c284:	out    0x77,eax
  40c286:	mov    ebp,0x78499e4a
  40c28b:	mov    bl,0xde
  40c28d:	pop    esp
  40c28e:	xchg   ebp,eax
  40c28f:	ins    DWORD PTR es:[edi],dx
  40c290:	pop    ds
  40c291:	repz push ecx
  40c293:	dec    ebp
  40c294:	add    al,BYTE PTR [esi-0x7]
  40c297:	adc    eax,0x125cd736
  40c29c:	outs   dx,BYTE PTR ds:[esi]
  40c29d:	lea    esp,[edi-0x318864f4]
  40c2a3:	fwait
  40c2a4:	or     edi,DWORD PTR [edi-0x377709c]
  40c2aa:	cmp    esp,DWORD PTR [eax+0x63]
  40c2ad:	pop    es
  40c2ae:	pop    ss
  40c2af:	jne    0x40c263
  40c2b1:	dec    edi
  40c2b2:	dec    esp
  40c2b3:	dec    eax
  40c2b4:	mov    eax,DWORD PTR [ebp-0x4]
  40c2b7:	xor    eax,0x7510859
  40c2bc:	add    eax,ebx
  40c2be:	mov    DWORD PTR [ebp-0xc],eax
  40c2c1:	xor    ebx,ebx
  40c2c3:	lea    eax,[ebp-0x10]
  40c2c6:	add    ebx,DWORD PTR [eax]
  40c2c8:	jmp    0x40c3ad
  40c2cd:	sbb    al,0xbe
  40c2cf:	cmp    al,0xc2
  40c2d1:	pop    esp
  40c2d2:	inc    eax
  40c2d3:	and    BYTE PTR [eax+0x3b],ah
  40c2d6:	gs xchg edx,ebp
  40c2d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2da:	scas   al,BYTE PTR es:[edi]
  40c2db:	scas   al,BYTE PTR es:[edi]
  40c2dc:	pusha  
  40c2dd:	jno    0x40c2aa
  40c2df:	jle    0x40c35f
  40c2e1:	mov    dh,0x7e
  40c2e3:	jle    0x40c363
  40c2e5:	mov    ch,BYTE PTR [eax+0x7f7a1771]
  40c2eb:	call   0x248c6d92
  40c2f0:	and    eax,0x22abd647
  40c2f5:	jmp    0x6d57b5b2
  40c2fa:	inc    eax
  40c2fb:	je     0x40c37a
  40c2fd:	cmp    ch,BYTE PTR [ebx+0x20]
  40c300:	cs pop ebx
  40c302:	das    
  40c303:	std    
  40c304:	lods   al,BYTE PTR ds:[esi]
  40c305:	mov    ebp,0x2a97b4dd
  40c30a:	ds daa 
  40c30c:	test   DWORD PTR [eax-0x274d7f7d],ebx
  40c312:	adc    bl,BYTE PTR [esp+edi*8-0x2beeaf4]
  40c319:	jg     0x40c2d7
  40c31b:	push   ecx
  40c31c:	pop    es
  40c31d:	iret   
  40c31e:	add    al,cl
  40c320:	pop    ebx
  40c321:	inc    esi
  40c322:	pop    ebx
  40c323:	(bad)  
  40c324:	cmp    bh,BYTE PTR [esp+edx*1-0x78]
  40c328:	add    BYTE PTR [edi+0x5],ch
  40c32b:	pop    esp
  40c32c:	lds    ebx,FWORD PTR [edx+ebp*1-0x4a02f7c0]
  40c333:	clc    
  40c334:	mov    ds:0x75a67cba,eax
  40c339:	cmp    DWORD PTR [edx+0x7a],0x33
  40c33d:	add    dh,dl
  40c33f:	js     0x40c31e
  40c341:	pusha  
  40c342:	cmp    BYTE PTR [edi+0x60e653a6],dh
  40c348:	mov    al,ds:0xea57d92e
  40c34d:	jecxz  0x40c39f
  40c34f:	inc    ecx
  40c350:	push   ds
  40c351:	lahf   
  40c352:	mov    ecx,0xd930fa7f
  40c357:	add    DWORD PTR [edi-0x2e],esp
  40c35a:	xchg   ecx,eax
  40c35b:	push   ebx
  40c35c:	xchg   esi,eax
  40c35d:	aad    0x5a
  40c35f:	dec    esi
  40c360:	xchg   edi,eax
  40c361:	or     esp,eax
  40c363:	push   eax
  40c364:	cdq    
  40c365:	push   edx
  40c366:	dec    edi
  40c367:	push   es
  40c368:	lahf   
  40c369:	adc    dh,bl
  40c36b:	xchg   ebx,eax
  40c36c:	push   ecx
  40c36d:	imul   ebx,DWORD PTR [ecx-0x38b3af4e],0x41
  40c374:	outs   dx,BYTE PTR ds:[esi]
  40c375:	inc    esi
  40c376:	or     DWORD PTR [edx-0x58158850],edx
  40c37c:	adc    DWORD PTR ds:[edx+0x7ac47356],ecx
  40c383:	add    al,0x66
  40c385:	push   ds
  40c386:	out    0x32,eax
  40c388:	loope  0x40c30e
  40c38a:	out    dx,al
  40c38b:	pop    es
  40c38c:	(bad)  
  40c38d:	(bad)  
  40c38e:	mov    ebx,0x7524001f
  40c393:	mov    es,WORD PTR [edi-0x34fb200c]
  40c399:	jg     0x40c3f4
  40c39b:	ins    BYTE PTR es:[edi],dx
  40c39c:	out    0x46,al
  40c39e:	je     0x40c393
  40c3a0:	ins    DWORD PTR es:[edi],dx
  40c3a1:	dec    ebp
  40c3a2:	js     0x40c3c8
  40c3a4:	jmp    0x40c37e
  40c3a6:	aas    
  40c3a7:	loop   0x40c3d5
  40c3a9:	dec    eax
  40c3aa:	or     DWORD PTR [ebp+ebp*2-0x1],esp
  40c3ae:	shl    DWORD PTR [ebx],cl
  40c3b0:	fucomi st,st(1)
  40c3b2:	loopne 0x40c3b4
  40c3b4:	add    BYTE PTR [eax],al
  40c3b6:	popa   
  40c3b7:	jno    0x40c409
  40c3b9:	jnp    0x40c41b
  40c3bb:	jnp    0x40c436
  40c3bd:	or     DWORD PTR ds:0x252e5fee,ecx
  40c3c3:	inc    eax
  40c3c4:	aaa    
  40c3c5:	adc    eax,0x7e7ecb49
  40c3ca:	mov    dh,0x7e
  40c3cc:	jle    0x40c44c
  40c3ce:	mov    ch,0x11
  40c3d0:	add    eax,0xca036c4e
  40c3d5:	repz sahf 
  40c3d7:	rcl    BYTE PTR [edx+0x3e6bea43],1
  40c3dd:	xor    bl,BYTE PTR [edi]
  40c3df:	fidivr DWORD PTR [ecx+0x464f5372]
  40c3e5:	pop    esi
  40c3e6:	inc    ebp
  40c3e7:	dec    eax
  40c3e8:	aam    0x30
  40c3ea:	inc    edi
  40c3eb:	leave  
  40c3ec:	ins    BYTE PTR es:[edi],dx
  40c3ed:	mov    ebx,0x4667f4de
  40c3f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3f3:	scas   eax,DWORD PTR es:[edi]
  40c3f4:	ds cmp eax,0x7b3f4edb
  40c3fa:	adc    edi,eax
  40c3fc:	or     DWORD PTR [eax+0x62],ebp
  40c3ff:	rcr    dh,0x48
  40c402:	adc    bh,BYTE PTR [edx+0x19cd931a]
  40c408:	popa   
  40c409:	xor    ch,BYTE PTR [esi+edx*8]
  40c40c:	add    ecx,DWORD PTR [ebx-0x40]
  40c40f:	pop    ds
  40c410:	mov    ds,eax
  40c412:	ret    
  40c413:	xchg   edi,eax
  40c414:	pushf  
  40c415:	jl     0x40c3f2
  40c417:	mov    ecx,DWORD PTR [ecx+0x7e]
  40c41a:	adc    dl,BYTE PTR [ebp-0x65]
  40c41d:	leave  
  40c41e:	enter  0x1909,0xab
  40c422:	pop    ss
  40c423:	and    DWORD PTR [edi+0x44eb70eb],ecx
  40c429:	push   es
  40c42a:	dec    ecx
  40c42b:	mov    ss,esi
  40c42d:	shl    DWORD PTR [edx-0x4f],0x58
  40c431:	jno    0x40c47e
  40c433:	clc    
  40c434:	mov    fs,WORD PTR [esi+0x3908da12]
  40c43a:	pushf  
  40c43b:	lds    eax,FWORD PTR [eax]
  40c43d:	loop   0x40c497
  40c43f:	xchg   ebx,eax
  40c440:	dec    esp
  40c441:	sti    
  40c442:	mov    dl,ah
  40c444:	jmp    FWORD PTR [edx]
  40c446:	mov    ch,0xe
  40c448:	inc    esp
  40c449:	or     eax,0x93aab1e0
  40c44e:	stos   BYTE PTR es:[edi],al
  40c44f:	jo     0x40c44a
  40c451:	arpl   ax,sp
  40c453:	sbb    eax,0x3e991f0d
  40c458:	in     eax,0x60
  40c45a:	xchg   ebx,eax
  40c45b:	in     eax,0x2b
  40c45d:	cwde   
  40c45e:	pop    es
  40c45f:	dec    esp
  40c460:	cwde   
  40c461:	pop    ds
  40c462:	add    eax,0x9e4e3f1c
  40c467:	pop    esi
  40c468:	pop    eax
  40c469:	xor    DWORD PTR ds:0x3642e5b5,ecx
  40c46f:	jg     0x40c4d0
  40c471:	ror    dh,cl
  40c473:	jmp    0x46cf86c1
  40c478:	fucomip st,st(5)
  40c47a:	lods   eax,DWORD PTR ds:[esi]
  40c47b:	adc    dl,bl
  40c47d:	xor    esp,esp
  40c47f:	mov    ebx,0xe6925cfa
  40c484:	test   DWORD PTR [eax+eiz*8-0x60],0xd71c72d5
  40c48c:	mov    edx,0xe4c26674
  40c491:	dec    edi
  40c492:	pop    eax
  40c493:	and    DWORD PTR [esi+0x5d3943b0],edx
  40c499:	adc    cl,ch
  40c49b:	loopne 0x40c49d
  40c49d:	add    BYTE PTR [eax],al
  40c49f:	test   al,0xfc
  40c4a1:	xchg   esi,eax
  40c4a2:	push   esi
  40c4a3:	stos   BYTE PTR es:[edi],al
  40c4a4:	push   esp
  40c4a5:	push   0xe4b270b0
  40c4aa:	gs das 
  40c4ac:	xchg   ecx,eax
  40c4ad:	lea    eax,[esi-0x7f]
  40c4b0:	enter  0x7e7e,0xb6
  40c4b4:	jle    0x40c534
  40c4b6:	jle    0x40c509
  40c4b8:	xor    ebx,ecx
  40c4ba:	addr16 sub eax,0xa194aebf
  40c4c0:	push   0x7a
  40c4c2:	xor    bl,BYTE PTR [eax+ebx*2+0x70]
  40c4c6:	lahf   
  40c4c7:	and    ebp,DWORD PTR [esi]
  40c4c9:	(bad)  
  40c4ca:	adc    al,0x5
  40c4cc:	jb     0x40c4e4
  40c4ce:	adc    esi,DWORD PTR ds:0x7c8be0bb
  40c4d4:	inc    edi
  40c4d5:	fs pop ss
  40c4d7:	or     bh,BYTE PTR [esi]
  40c4d9:	cmp    BYTE PTR [edi],0x8e
  40c4dc:	xor    DWORD PTR [ebx+edx*1-0x2311f206],esp
  40c4e3:	mov    ecx,0x9ca9ded5
  40c4e8:	jmp    DWORD PTR ds:0x86b5d89f
  40c4ee:	push   cs
  40c4ef:	and    ecx,esi
  40c4f1:	test   BYTE PTR [ecx+0x696f1244],0x30
  40c4f8:	call   0x399d9c1d
  40c4fd:	push   edx
  40c4fe:	cmp    esi,eax
  40c500:	ss xor ebx,ebx
  40c503:	pop    edi
  40c504:	fdivr  QWORD PTR [esi]
  40c506:	lods   al,BYTE PTR ds:[esi]
  40c507:	and    bl,BYTE PTR [ebx]
  40c509:	pop    edi
  40c50a:	retf   
  40c50b:	in     eax,dx
  40c50c:	jmp    0x57a97df8
  40c511:	pop    ebp
  40c512:	inc    eax
  40c513:	mov    eax,ds:0xb334a436
  40c518:	dec    eax
  40c519:	(bad)  {k1}{z}
  40c51e:	imul   esi,eax,0x9068c167
  40c524:	jae    0x40c553
  40c526:	lds    esp,FWORD PTR [esp+eiz*2+0x214fb3d2]
  40c52d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c52e:	test   al,0x3b
  40c530:	(bad)  
  40c531:	mov    ebx,0xcbc248a7
  40c536:	and    BYTE PTR [eax],dl
  40c538:	fxch   st(6)
  40c53a:	adc    bh,bl
  40c53c:	xor    cl,BYTE PTR cs:[ebx-0x1e]
  40c540:	pop    ebx
  40c541:	sbb    eax,0xf22ba5ba
  40c546:	add    BYTE PTR [edi],0x7b
  40c549:	push   0xffffffef
  40c54b:	adc    DWORD PTR [eax-0x31],ebp
  40c54e:	mov    ds:0x4d0a2c1d,eax
  40c553:	push   esi
  40c554:	jnp    0x40c581
  40c556:	jae    0x40c57d
  40c558:	and    al,0x94
  40c55a:	pop    eax
  40c55b:	inc    ebx
  40c55c:	mov    dx,0x3f1e
  40c560:	pop    ecx
  40c561:	stos   BYTE PTR es:[edi],al
  40c562:	test   BYTE PTR [edi-0x37713fed],al
  40c568:	sub    dh,dl
  40c56a:	push   ds
  40c56b:	add    BYTE PTR [ebp-0x16],0x1c
  40c56f:	pop    ebx
  40c570:	pop    ss
  40c571:	leave  
  40c572:	sub    dl,bl
  40c574:	xchg   edx,eax
  40c575:	or     edx,DWORD PTR [ecx+0x660f29f7]
  40c57b:	mov    ecx,0xf9a4f69
  40c580:	test   ch,bh
  40c582:	add    BYTE PTR [eax],al
  40c584:	add    BYTE PTR [edx+0x6a590a6a],dl
  40c58a:	add    al,0x5b
  40c58c:	inc    ebx
  40c58d:	xchg   ebx,ecx
  40c58f:	sub    ebx,ecx
  40c591:	xchg   ebx,ecx
  40c593:	jmp    0x40c678
  40c598:	xchg   DWORD PTR [eax+0x3d],ebx
  40c59b:	out    0x31,al
  40c59d:	jnp    0x40c544
  40c59f:	jns    0x40c5e7
  40c5a1:	add    al,0x4b
  40c5a3:	call   0x9d964910
  40c5a8:	fxch   st(1)
  40c5aa:	jle    0x40c62a
  40c5ac:	mov    dh,0x7e
  40c5ae:	jle    0x40c62e
  40c5b0:	add    BYTE PTR [ebx+eiz*8-0x53859272],cl
  40c5b7:	push   DWORD PTR [eax+0x26]
  40c5ba:	and    DWORD PTR [esi-0x7c16088d],eax
  40c5c0:	loopne 0x40c613
  40c5c2:	les    eax,FWORD PTR fs:[edi*2-0x2215e32d]
  40c5ca:	iret   
  40c5cb:	(bad)  
  40c5cc:	adc    dl,bl
  40c5ce:	add    al,0xf1
  40c5d0:	mov    bl,0xb9
  40c5d2:	add    eax,0x33b40b5b
  40c5d7:	(bad)  
  40c5d8:	cld    
  40c5d9:	js     0x40c5f5
  40c5db:	xchg   ebp,eax
  40c5dc:	mov    bh,0xef
  40c5de:	out    0x5b,al
  40c5e0:	je     0x40c5a5
  40c5e2:	pop    ecx
  40c5e3:	scas   eax,DWORD PTR es:[edi]
  40c5e4:	and    DWORD PTR [ecx+edx*2-0x34],edx
  40c5e8:	add    al,0x95
  40c5ea:	adc    dh,al
  40c5ec:	sbb    eax,0xa812ffed
  40c5f1:	(bad)  
  40c5f2:	add    eax,0x2a078848
  40c5f7:	pminub mm2,QWORD PTR [eax]
  40c5fa:	adc    eax,0x448f810d
  40c5ff:	xlat   BYTE PTR ds:[ebx]
  40c600:	adc    ebp,ebx
  40c602:	mov    eax,ds:0x4111e50e
  40c607:	clc    
  40c608:	mov    ?,WORD PTR ds:0x4b575445
  40c60e:	(bad)  
  40c60f:	in     eax,dx
  40c610:	lahf   
  40c611:	mov    ecx,cs
  40c613:	adc    BYTE PTR [eax],0x81
  40c616:	popf   
  40c617:	push   cs
  40c618:	push   0xffffffca
  40c61a:	mov    bl,0x30
  40c61c:	push   ebx
  40c61d:	cwde   
  40c61e:	(bad)  
  40c620:	jg     0x40c67a
  40c622:	mov    dh,0xae
  40c624:	scas   eax,DWORD PTR es:[edi]
  40c625:	mov    eax,0x7cc7fdda
  40c62a:	call   0xc846f98d
  40c62f:	lods   eax,DWORD PTR ds:[esi]
  40c630:	outs   dx,DWORD PTR ds:[esi]
  40c631:	pop    ebp
  40c632:	ja     0x40c68c
  40c634:	jmp    DWORD PTR [ebp+0x793b40db]
  40c63a:	not    ecx
  40c63c:	add    eax,0xe186b71a
  40c641:	in     al,dx
  40c642:	jmp    0x40c64f
  40c644:	inc    eax
  40c645:	pop    edi
  40c646:	mov    ?,WORD PTR [ebx]
  40c648:	daa    
  40c649:	repnz retf 
  40c64b:	jmp    0x7b5e992b
  40c650:	(bad)  
  40c651:	mov    eax,ds:0x7517759f
  40c656:	int3   
  40c657:	cmc    
  40c658:	pop    ss
  40c659:	pop    esp
  40c65a:	fiadd  WORD PTR [ecx+0x1695b519]
  40c660:	dec    esi
  40c661:	enter  0x54b8,0x20
  40c665:	sbb    eax,0xd107ae4
  40c66a:	dec    eax
  40c66b:	push   0x6bb7581
  40c670:	fdivp  st(3),st
  40c672:	test   DWORD PTR es:[edx+0x49dc672c],ebx
  40c679:	mov    eax,DWORD PTR [ebp-0x1c]
  40c67c:	imul   eax,ecx
  40c67f:	add    esp,eax
  40c681:	xchg   edx,eax
  40c682:	push   eax
  40c683:	xor    ebx,ebx
  40c685:	mov    edx,esp
  40c687:	dec    edx
  40c688:	inc    ebx
  40c689:	add    ebx,DWORD PTR [edx+ebx*1]
  40c68c:	dec    ebx
  40c68d:	xor    edx,edx
  40c68f:	add    DWORD PTR [ebp-0xc],ebx
  40c692:	pop    ebx
  40c693:	mov    eax,DWORD PTR [ebp-0xc]
  40c696:	pop    edi
  40c697:	pop    esi
  40c698:	pop    ebx
  40c699:	leave  
  40c69a:	ret    0x10
